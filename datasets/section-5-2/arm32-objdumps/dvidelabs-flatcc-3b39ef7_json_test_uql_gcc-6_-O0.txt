
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf32-littlearm


Disassembly of section .init:

000144f4 <.init>:
   144f4:	push	{r3, lr}
   144f8:	bl	1465c <_start@@Base+0x3c>
   144fc:	pop	{r3, pc}

Disassembly of section .plt:

00014500 <raise@plt-0x14>:
   14500:	push	{lr}		; (str lr, [sp, #-4]!)
   14504:	ldr	lr, [pc, #4]	; 14510 <raise@plt-0x4>
   14508:	add	lr, pc, lr
   1450c:	ldr	pc, [lr, #8]!
   14510:	strdeq	pc, [r4], -r0

00014514 <raise@plt>:
   14514:	add	ip, pc, #0, 12
   14518:	add	ip, ip, #323584	; 0x4f000
   1451c:	ldr	pc, [ip, #2800]!	; 0xaf0

00014520 <strcmp@plt>:
   14520:	add	ip, pc, #0, 12
   14524:	add	ip, ip, #323584	; 0x4f000
   14528:	ldr	pc, [ip, #2792]!	; 0xae8

0001452c <memmove@plt>:
   1452c:	add	ip, pc, #0, 12
   14530:	add	ip, ip, #323584	; 0x4f000
   14534:	ldr	pc, [ip, #2784]!	; 0xae0

00014538 <free@plt>:
   14538:	add	ip, pc, #0, 12
   1453c:	add	ip, ip, #323584	; 0x4f000
   14540:	ldr	pc, [ip, #2776]!	; 0xad8

00014544 <memcpy@plt>:
   14544:	add	ip, pc, #0, 12
   14548:	add	ip, ip, #323584	; 0x4f000
   1454c:	ldr	pc, [ip, #2768]!	; 0xad0

00014550 <memcmp@plt>:
   14550:	add	ip, pc, #0, 12
   14554:	add	ip, ip, #323584	; 0x4f000
   14558:	ldr	pc, [ip, #2760]!	; 0xac8

0001455c <realloc@plt>:
   1455c:	add	ip, pc, #0, 12
   14560:	add	ip, ip, #323584	; 0x4f000
   14564:	ldr	pc, [ip, #2752]!	; 0xac0

00014568 <fwrite@plt>:
   14568:	add	ip, pc, #0, 12
   1456c:	add	ip, ip, #323584	; 0x4f000
   14570:	ldr	pc, [ip, #2744]!	; 0xab8

00014574 <malloc@plt>:
   14574:	add	ip, pc, #0, 12
   14578:	add	ip, ip, #323584	; 0x4f000
   1457c:	ldr	pc, [ip, #2736]!	; 0xab0

00014580 <__libc_start_main@plt>:
   14580:	add	ip, pc, #0, 12
   14584:	add	ip, ip, #323584	; 0x4f000
   14588:	ldr	pc, [ip, #2728]!	; 0xaa8

0001458c <__gmon_start__@plt>:
   1458c:	add	ip, pc, #0, 12
   14590:	add	ip, ip, #323584	; 0x4f000
   14594:	ldr	pc, [ip, #2720]!	; 0xaa0

00014598 <strlen@plt>:
   14598:	add	ip, pc, #0, 12
   1459c:	add	ip, ip, #323584	; 0x4f000
   145a0:	ldr	pc, [ip, #2712]!	; 0xa98

000145a4 <fprintf@plt>:
   145a4:	add	ip, pc, #0, 12
   145a8:	add	ip, ip, #323584	; 0x4f000
   145ac:	ldr	pc, [ip, #2704]!	; 0xa90

000145b0 <posix_memalign@plt>:
   145b0:	add	ip, pc, #0, 12
   145b4:	add	ip, ip, #323584	; 0x4f000
   145b8:	ldr	pc, [ip, #2696]!	; 0xa88

000145bc <memset@plt>:
   145bc:	add	ip, pc, #0, 12
   145c0:	add	ip, ip, #323584	; 0x4f000
   145c4:	ldr	pc, [ip, #2688]!	; 0xa80

000145c8 <strncpy@plt>:
   145c8:	add	ip, pc, #0, 12
   145cc:	add	ip, ip, #323584	; 0x4f000
   145d0:	ldr	pc, [ip, #2680]!	; 0xa78

000145d4 <strtod@plt>:
   145d4:	add	ip, pc, #0, 12
   145d8:	add	ip, ip, #323584	; 0x4f000
   145dc:	ldr	pc, [ip, #2672]!	; 0xa70

000145e0 <memchr@plt>:
   145e0:	add	ip, pc, #0, 12
   145e4:	add	ip, ip, #323584	; 0x4f000
   145e8:	ldr	pc, [ip, #2664]!	; 0xa68

000145ec <fputc@plt>:
   145ec:	add	ip, pc, #0, 12
   145f0:	add	ip, ip, #323584	; 0x4f000
   145f4:	ldr	pc, [ip, #2656]!	; 0xa60

000145f8 <sprintf@plt>:
   145f8:	add	ip, pc, #0, 12
   145fc:	add	ip, ip, #323584	; 0x4f000
   14600:	ldr	pc, [ip, #2648]!	; 0xa58

00014604 <abort@plt>:
   14604:	add	ip, pc, #0, 12
   14608:	add	ip, ip, #323584	; 0x4f000
   1460c:	ldr	pc, [ip, #2640]!	; 0xa50

00014610 <__assert_fail@plt>:
   14610:	add	ip, pc, #0, 12
   14614:	add	ip, ip, #323584	; 0x4f000
   14618:	ldr	pc, [ip, #2632]!	; 0xa48

Disassembly of section .text:

00014620 <_start@@Base>:
   14620:	mov	fp, #0
   14624:	mov	lr, #0
   14628:	pop	{r1}		; (ldr r1, [sp], #4)
   1462c:	mov	r2, sp
   14630:	push	{r2}		; (str r2, [sp, #-4]!)
   14634:	push	{r0}		; (str r0, [sp, #-4]!)
   14638:	ldr	ip, [pc, #16]	; 14650 <_start@@Base+0x30>
   1463c:	push	{ip}		; (str ip, [sp, #-4]!)
   14640:	ldr	r0, [pc, #12]	; 14654 <_start@@Base+0x34>
   14644:	ldr	r3, [pc, #12]	; 14658 <_start@@Base+0x38>
   14648:	bl	14580 <__libc_start_main@plt>
   1464c:	bl	14604 <abort@plt>
   14650:	strdeq	ip, [r4], -r0
   14654:	andeq	fp, r2, ip, lsr r2
   14658:	muleq	r4, r0, r6
   1465c:	ldr	r3, [pc, #20]	; 14678 <_start@@Base+0x58>
   14660:	ldr	r2, [pc, #20]	; 1467c <_start@@Base+0x5c>
   14664:	add	r3, pc, r3
   14668:	ldr	r2, [r3, r2]
   1466c:	cmp	r2, #0
   14670:	bxeq	lr
   14674:	b	1458c <__gmon_start__@plt>
   14678:	muleq	r4, r4, r9
   1467c:	andeq	r0, r0, ip, rrx
   14680:	ldr	r3, [pc, #28]	; 146a4 <_start@@Base+0x84>
   14684:	ldr	r0, [pc, #28]	; 146a8 <_start@@Base+0x88>
   14688:	sub	r3, r3, r0
   1468c:	cmp	r3, #6
   14690:	bxls	lr
   14694:	ldr	r3, [pc, #16]	; 146ac <_start@@Base+0x8c>
   14698:	cmp	r3, #0
   1469c:	bxeq	lr
   146a0:	bx	r3
   146a4:	andeq	r4, r6, fp, lsr #9
   146a8:	andeq	r4, r6, r8, lsr #9
   146ac:	andeq	r0, r0, r0
   146b0:	ldr	r1, [pc, #36]	; 146dc <_start@@Base+0xbc>
   146b4:	ldr	r0, [pc, #36]	; 146e0 <_start@@Base+0xc0>
   146b8:	sub	r1, r1, r0
   146bc:	asr	r1, r1, #2
   146c0:	add	r1, r1, r1, lsr #31
   146c4:	asrs	r1, r1, #1
   146c8:	bxeq	lr
   146cc:	ldr	r3, [pc, #16]	; 146e4 <_start@@Base+0xc4>
   146d0:	cmp	r3, #0
   146d4:	bxeq	lr
   146d8:	bx	r3
   146dc:	andeq	r4, r6, r8, lsr #9
   146e0:	andeq	r4, r6, r8, lsr #9
   146e4:	andeq	r0, r0, r0
   146e8:	push	{r4, lr}
   146ec:	ldr	r4, [pc, #24]	; 1470c <_start@@Base+0xec>
   146f0:	ldrb	r3, [r4]
   146f4:	cmp	r3, #0
   146f8:	popne	{r4, pc}
   146fc:	bl	14680 <_start@@Base+0x60>
   14700:	mov	r3, #1
   14704:	strb	r3, [r4]
   14708:	pop	{r4, pc}
   1470c:	andeq	r4, r6, r8, lsr #9
   14710:	ldr	r0, [pc, #40]	; 14740 <_start@@Base+0x120>
   14714:	ldr	r3, [r0]
   14718:	cmp	r3, #0
   1471c:	bne	14724 <_start@@Base+0x104>
   14720:	b	146b0 <_start@@Base+0x90>
   14724:	ldr	r3, [pc, #24]	; 14744 <_start@@Base+0x124>
   14728:	cmp	r3, #0
   1472c:	beq	14720 <_start@@Base+0x100>
   14730:	push	{r4, lr}
   14734:	blx	r3
   14738:	pop	{r4, lr}
   1473c:	b	146b0 <_start@@Base+0x90>
   14740:	andeq	r3, r6, r4, ror #29
   14744:	andeq	r0, r0, r0
   14748:	push	{fp}		; (str fp, [sp, #-4]!)
   1474c:	add	fp, sp, #0
   14750:	sub	sp, sp, #12
   14754:	mov	r3, r0
   14758:	strb	r3, [fp, #-5]
   1475c:	ldrb	r3, [fp, #-5]
   14760:	mov	r0, r3
   14764:	add	sp, fp, #0
   14768:	pop	{fp}		; (ldr fp, [sp], #4)
   1476c:	bx	lr
   14770:	push	{fp, lr}
   14774:	add	fp, sp, #4
   14778:	sub	sp, sp, #8
   1477c:	str	r0, [fp, #-8]
   14780:	mov	r3, r1
   14784:	strb	r3, [fp, #-9]
   14788:	ldrb	r3, [fp, #-9]
   1478c:	mov	r0, r3
   14790:	bl	14748 <_start@@Base+0x128>
   14794:	mov	r3, r0
   14798:	mov	r2, r3
   1479c:	ldr	r3, [fp, #-8]
   147a0:	strb	r2, [r3]
   147a4:	nop			; (mov r0, r0)
   147a8:	sub	sp, fp, #4
   147ac:	pop	{fp, pc}
   147b0:	push	{fp}		; (str fp, [sp, #-4]!)
   147b4:	add	fp, sp, #0
   147b8:	sub	sp, sp, #12
   147bc:	mov	r3, r0
   147c0:	strh	r3, [fp, #-6]
   147c4:	ldrh	r3, [fp, #-6]
   147c8:	mov	r0, r3
   147cc:	add	sp, fp, #0
   147d0:	pop	{fp}		; (ldr fp, [sp], #4)
   147d4:	bx	lr
   147d8:	push	{fp, lr}
   147dc:	add	fp, sp, #4
   147e0:	sub	sp, sp, #8
   147e4:	str	r0, [fp, #-8]
   147e8:	mov	r3, r1
   147ec:	strh	r3, [fp, #-10]
   147f0:	ldrh	r3, [fp, #-10]
   147f4:	mov	r0, r3
   147f8:	bl	147b0 <_start@@Base+0x190>
   147fc:	mov	r3, r0
   14800:	mov	r2, r3
   14804:	ldr	r3, [fp, #-8]
   14808:	strh	r2, [r3]
   1480c:	nop			; (mov r0, r0)
   14810:	sub	sp, fp, #4
   14814:	pop	{fp, pc}
   14818:	push	{fp}		; (str fp, [sp, #-4]!)
   1481c:	add	fp, sp, #0
   14820:	sub	sp, sp, #12
   14824:	str	r0, [fp, #-8]
   14828:	ldr	r3, [fp, #-8]
   1482c:	mov	r0, r3
   14830:	add	sp, fp, #0
   14834:	pop	{fp}		; (ldr fp, [sp], #4)
   14838:	bx	lr
   1483c:	push	{fp, lr}
   14840:	add	fp, sp, #4
   14844:	sub	sp, sp, #8
   14848:	str	r0, [fp, #-8]
   1484c:	str	r1, [fp, #-12]
   14850:	ldr	r0, [fp, #-12]
   14854:	bl	14818 <_start@@Base+0x1f8>
   14858:	mov	r2, r0
   1485c:	ldr	r3, [fp, #-8]
   14860:	str	r2, [r3]
   14864:	nop			; (mov r0, r0)
   14868:	sub	sp, fp, #4
   1486c:	pop	{fp, pc}
   14870:	push	{fp}		; (str fp, [sp, #-4]!)
   14874:	add	fp, sp, #0
   14878:	sub	sp, sp, #12
   1487c:	strd	r0, [fp, #-12]
   14880:	ldrd	r2, [fp, #-12]
   14884:	mov	r0, r2
   14888:	mov	r1, r3
   1488c:	add	sp, fp, #0
   14890:	pop	{fp}		; (ldr fp, [sp], #4)
   14894:	bx	lr
   14898:	push	{fp, lr}
   1489c:	add	fp, sp, #4
   148a0:	sub	sp, sp, #16
   148a4:	str	r0, [fp, #-8]
   148a8:	strd	r2, [fp, #-20]	; 0xffffffec
   148ac:	ldrd	r0, [fp, #-20]	; 0xffffffec
   148b0:	bl	14870 <_start@@Base+0x250>
   148b4:	mov	r2, r0
   148b8:	mov	r3, r1
   148bc:	ldr	r1, [fp, #-8]
   148c0:	strd	r2, [r1]
   148c4:	nop			; (mov r0, r0)
   148c8:	sub	sp, fp, #4
   148cc:	pop	{fp, pc}
   148d0:	push	{fp}		; (str fp, [sp, #-4]!)
   148d4:	add	fp, sp, #0
   148d8:	sub	sp, sp, #12
   148dc:	mov	r3, r0
   148e0:	strb	r3, [fp, #-5]
   148e4:	ldrsb	r3, [fp, #-5]
   148e8:	mov	r0, r3
   148ec:	add	sp, fp, #0
   148f0:	pop	{fp}		; (ldr fp, [sp], #4)
   148f4:	bx	lr
   148f8:	push	{fp, lr}
   148fc:	add	fp, sp, #4
   14900:	sub	sp, sp, #8
   14904:	str	r0, [fp, #-8]
   14908:	mov	r3, r1
   1490c:	strb	r3, [fp, #-9]
   14910:	ldrsb	r3, [fp, #-9]
   14914:	mov	r0, r3
   14918:	bl	148d0 <_start@@Base+0x2b0>
   1491c:	mov	r3, r0
   14920:	mov	r2, r3
   14924:	ldr	r3, [fp, #-8]
   14928:	strb	r2, [r3]
   1492c:	nop			; (mov r0, r0)
   14930:	sub	sp, fp, #4
   14934:	pop	{fp, pc}
   14938:	push	{fp}		; (str fp, [sp, #-4]!)
   1493c:	add	fp, sp, #0
   14940:	sub	sp, sp, #12
   14944:	mov	r3, r0
   14948:	strh	r3, [fp, #-6]
   1494c:	ldrsh	r3, [fp, #-6]
   14950:	mov	r0, r3
   14954:	add	sp, fp, #0
   14958:	pop	{fp}		; (ldr fp, [sp], #4)
   1495c:	bx	lr
   14960:	push	{fp, lr}
   14964:	add	fp, sp, #4
   14968:	sub	sp, sp, #8
   1496c:	str	r0, [fp, #-8]
   14970:	mov	r3, r1
   14974:	strh	r3, [fp, #-10]
   14978:	ldrsh	r3, [fp, #-10]
   1497c:	mov	r0, r3
   14980:	bl	14938 <_start@@Base+0x318>
   14984:	mov	r3, r0
   14988:	mov	r2, r3
   1498c:	ldr	r3, [fp, #-8]
   14990:	strh	r2, [r3]
   14994:	nop			; (mov r0, r0)
   14998:	sub	sp, fp, #4
   1499c:	pop	{fp, pc}
   149a0:	push	{fp}		; (str fp, [sp, #-4]!)
   149a4:	add	fp, sp, #0
   149a8:	sub	sp, sp, #12
   149ac:	str	r0, [fp, #-8]
   149b0:	ldr	r3, [fp, #-8]
   149b4:	mov	r0, r3
   149b8:	add	sp, fp, #0
   149bc:	pop	{fp}		; (ldr fp, [sp], #4)
   149c0:	bx	lr
   149c4:	push	{fp, lr}
   149c8:	add	fp, sp, #4
   149cc:	sub	sp, sp, #8
   149d0:	str	r0, [fp, #-8]
   149d4:	str	r1, [fp, #-12]
   149d8:	ldr	r0, [fp, #-12]
   149dc:	bl	149a0 <_start@@Base+0x380>
   149e0:	mov	r2, r0
   149e4:	ldr	r3, [fp, #-8]
   149e8:	str	r2, [r3]
   149ec:	nop			; (mov r0, r0)
   149f0:	sub	sp, fp, #4
   149f4:	pop	{fp, pc}
   149f8:	push	{fp}		; (str fp, [sp, #-4]!)
   149fc:	add	fp, sp, #0
   14a00:	sub	sp, sp, #12
   14a04:	strd	r0, [fp, #-12]
   14a08:	ldrd	r2, [fp, #-12]
   14a0c:	mov	r0, r2
   14a10:	mov	r1, r3
   14a14:	add	sp, fp, #0
   14a18:	pop	{fp}		; (ldr fp, [sp], #4)
   14a1c:	bx	lr
   14a20:	push	{fp, lr}
   14a24:	add	fp, sp, #4
   14a28:	sub	sp, sp, #16
   14a2c:	str	r0, [fp, #-8]
   14a30:	strd	r2, [fp, #-20]	; 0xffffffec
   14a34:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14a38:	bl	149f8 <_start@@Base+0x3d8>
   14a3c:	mov	r2, r0
   14a40:	mov	r3, r1
   14a44:	ldr	r1, [fp, #-8]
   14a48:	strd	r2, [r1]
   14a4c:	nop			; (mov r0, r0)
   14a50:	sub	sp, fp, #4
   14a54:	pop	{fp, pc}
   14a58:	push	{fp}		; (str fp, [sp, #-4]!)
   14a5c:	add	fp, sp, #0
   14a60:	sub	sp, sp, #20
   14a64:	vstr	s0, [fp, #-16]
   14a68:	ldr	r3, [fp, #-16]
   14a6c:	str	r3, [fp, #-8]
   14a70:	ldr	r3, [fp, #-8]
   14a74:	str	r3, [fp, #-8]
   14a78:	ldr	r3, [fp, #-8]
   14a7c:	vmov	s15, r3
   14a80:	vmov.f32	s0, s15
   14a84:	add	sp, fp, #0
   14a88:	pop	{fp}		; (ldr fp, [sp], #4)
   14a8c:	bx	lr
   14a90:	push	{fp, lr}
   14a94:	add	fp, sp, #4
   14a98:	sub	sp, sp, #8
   14a9c:	str	r0, [fp, #-8]
   14aa0:	vstr	s0, [fp, #-12]
   14aa4:	vldr	s0, [fp, #-12]
   14aa8:	bl	14a58 <_start@@Base+0x438>
   14aac:	vmov.f32	s15, s0
   14ab0:	ldr	r3, [fp, #-8]
   14ab4:	vstr	s15, [r3]
   14ab8:	nop			; (mov r0, r0)
   14abc:	sub	sp, fp, #4
   14ac0:	pop	{fp, pc}
   14ac4:	push	{fp}		; (str fp, [sp, #-4]!)
   14ac8:	add	fp, sp, #0
   14acc:	sub	sp, sp, #20
   14ad0:	vstr	d0, [fp, #-20]	; 0xffffffec
   14ad4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14ad8:	strd	r2, [fp, #-12]
   14adc:	ldrd	r2, [fp, #-12]
   14ae0:	strd	r2, [fp, #-12]
   14ae4:	ldrd	r2, [fp, #-12]
   14ae8:	vmov	d7, r2, r3
   14aec:	vmov.f64	d0, d7
   14af0:	add	sp, fp, #0
   14af4:	pop	{fp}		; (ldr fp, [sp], #4)
   14af8:	bx	lr
   14afc:	push	{fp, lr}
   14b00:	add	fp, sp, #4
   14b04:	sub	sp, sp, #16
   14b08:	str	r0, [fp, #-8]
   14b0c:	vstr	d0, [fp, #-20]	; 0xffffffec
   14b10:	vldr	d0, [fp, #-20]	; 0xffffffec
   14b14:	bl	14ac4 <_start@@Base+0x4a4>
   14b18:	vmov.f64	d7, d0
   14b1c:	ldr	r3, [fp, #-8]
   14b20:	vstr	d7, [r3]
   14b24:	nop			; (mov r0, r0)
   14b28:	sub	sp, fp, #4
   14b2c:	pop	{fp, pc}
   14b30:	push	{fp}		; (str fp, [sp, #-4]!)
   14b34:	add	fp, sp, #0
   14b38:	sub	sp, sp, #12
   14b3c:	mov	r3, r0
   14b40:	strb	r3, [fp, #-5]
   14b44:	ldrb	r3, [fp, #-5]
   14b48:	mov	r0, r3
   14b4c:	add	sp, fp, #0
   14b50:	pop	{fp}		; (ldr fp, [sp], #4)
   14b54:	bx	lr
   14b58:	push	{fp, lr}
   14b5c:	add	fp, sp, #4
   14b60:	sub	sp, sp, #8
   14b64:	str	r0, [fp, #-8]
   14b68:	mov	r3, r1
   14b6c:	strb	r3, [fp, #-9]
   14b70:	ldrb	r3, [fp, #-9]
   14b74:	mov	r0, r3
   14b78:	bl	14b30 <_start@@Base+0x510>
   14b7c:	mov	r3, r0
   14b80:	mov	r2, r3
   14b84:	ldr	r3, [fp, #-8]
   14b88:	strb	r2, [r3]
   14b8c:	nop			; (mov r0, r0)
   14b90:	sub	sp, fp, #4
   14b94:	pop	{fp, pc}
   14b98:	push	{fp, lr}
   14b9c:	add	fp, sp, #4
   14ba0:	sub	sp, sp, #16
   14ba4:	str	r0, [fp, #-8]
   14ba8:	str	r1, [fp, #-12]
   14bac:	str	r2, [fp, #-16]
   14bb0:	str	r3, [fp, #-20]	; 0xffffffec
   14bb4:	mov	r2, #44	; 0x2c
   14bb8:	mov	r1, #0
   14bbc:	ldr	r0, [fp, #-8]
   14bc0:	bl	145bc <memset@plt>
   14bc4:	ldr	r3, [fp, #-8]
   14bc8:	ldr	r2, [fp, #-12]
   14bcc:	str	r2, [r3]
   14bd0:	ldr	r3, [fp, #-8]
   14bd4:	ldr	r2, [fp, #-16]
   14bd8:	str	r2, [r3, #4]
   14bdc:	ldr	r3, [fp, #-8]
   14be0:	mov	r2, #1
   14be4:	str	r2, [r3, #16]
   14be8:	ldr	r3, [fp, #-8]
   14bec:	ldr	r2, [fp, #4]
   14bf0:	str	r2, [r3, #8]
   14bf4:	ldr	r3, [fp, #-8]
   14bf8:	ldr	r2, [fp, #-16]
   14bfc:	str	r2, [r3, #28]
   14c00:	ldr	r3, [fp, #-8]
   14c04:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c08:	str	r2, [r3, #32]
   14c0c:	ldr	r3, [fp, #-8]
   14c10:	ldr	r2, [fp, #-16]
   14c14:	str	r2, [r3, #36]	; 0x24
   14c18:	nop			; (mov r0, r0)
   14c1c:	sub	sp, fp, #4
   14c20:	pop	{fp, pc}
   14c24:	push	{fp, lr}
   14c28:	add	fp, sp, #4
   14c2c:	sub	sp, sp, #16
   14c30:	str	r0, [fp, #-8]
   14c34:	str	r1, [fp, #-12]
   14c38:	str	r2, [fp, #-16]
   14c3c:	ldr	r2, [fp, #-16]
   14c40:	ldr	r3, [fp, #-12]
   14c44:	sub	r3, r2, r3
   14c48:	cmp	r3, #1
   14c4c:	ble	14c98 <_start@@Base+0x678>
   14c50:	ldr	r3, [fp, #-12]
   14c54:	ldrb	r3, [r3]
   14c58:	cmp	r3, #32
   14c5c:	bls	14c68 <_start@@Base+0x648>
   14c60:	ldr	r3, [fp, #-12]
   14c64:	b	14cac <_start@@Base+0x68c>
   14c68:	ldr	r3, [fp, #-12]
   14c6c:	ldrb	r3, [r3]
   14c70:	cmp	r3, #32
   14c74:	bne	14c98 <_start@@Base+0x678>
   14c78:	ldr	r3, [fp, #-12]
   14c7c:	add	r3, r3, #1
   14c80:	ldrb	r3, [r3]
   14c84:	cmp	r3, #32
   14c88:	bls	14c98 <_start@@Base+0x678>
   14c8c:	ldr	r3, [fp, #-12]
   14c90:	add	r3, r3, #1
   14c94:	b	14cac <_start@@Base+0x68c>
   14c98:	ldr	r2, [fp, #-16]
   14c9c:	ldr	r1, [fp, #-12]
   14ca0:	ldr	r0, [fp, #-8]
   14ca4:	bl	3ab58 <flatcc_json_parser_space_ext@@Base>
   14ca8:	mov	r3, r0
   14cac:	mov	r0, r3
   14cb0:	sub	sp, fp, #4
   14cb4:	pop	{fp, pc}
   14cb8:	push	{fp, lr}
   14cbc:	add	fp, sp, #4
   14cc0:	sub	sp, sp, #16
   14cc4:	str	r0, [fp, #-8]
   14cc8:	str	r1, [fp, #-12]
   14ccc:	str	r2, [fp, #-16]
   14cd0:	ldr	r2, [fp, #-12]
   14cd4:	ldr	r3, [fp, #-16]
   14cd8:	cmp	r2, r3
   14cdc:	bne	14ce8 <_start@@Base+0x6c8>
   14ce0:	ldr	r3, [fp, #-12]
   14ce4:	b	14d50 <_start@@Base+0x730>
   14ce8:	ldr	r3, [fp, #-12]
   14cec:	ldrb	r3, [r3]
   14cf0:	cmp	r3, #34	; 0x22
   14cf4:	bne	14d14 <_start@@Base+0x6f4>
   14cf8:	ldr	r3, [fp, #-12]
   14cfc:	add	r3, r3, #1
   14d00:	str	r3, [fp, #-12]
   14d04:	ldr	r3, [fp, #-8]
   14d08:	mov	r2, #0
   14d0c:	str	r2, [r3, #12]
   14d10:	b	14d4c <_start@@Base+0x72c>
   14d14:	ldr	r3, [fp, #-12]
   14d18:	ldrb	r3, [r3]
   14d1c:	cmp	r3, #46	; 0x2e
   14d20:	bne	14d40 <_start@@Base+0x720>
   14d24:	mov	r3, #5
   14d28:	ldr	r2, [fp, #-16]
   14d2c:	ldr	r1, [fp, #-12]
   14d30:	ldr	r0, [fp, #-8]
   14d34:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   14d38:	mov	r3, r0
   14d3c:	b	14d50 <_start@@Base+0x730>
   14d40:	ldr	r3, [fp, #-8]
   14d44:	mov	r2, #1
   14d48:	str	r2, [r3, #12]
   14d4c:	ldr	r3, [fp, #-12]
   14d50:	mov	r0, r3
   14d54:	sub	sp, fp, #4
   14d58:	pop	{fp, pc}
   14d5c:	push	{r4, r5, r6, r7, r8, r9, fp}
   14d60:	add	fp, sp, #24
   14d64:	sub	sp, sp, #60	; 0x3c
   14d68:	str	r0, [fp, #-48]	; 0xffffffd0
   14d6c:	str	r1, [fp, #-52]	; 0xffffffcc
   14d70:	mov	r2, #0
   14d74:	mov	r3, #0
   14d78:	strd	r2, [fp, #-36]	; 0xffffffdc
   14d7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14d80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14d84:	sub	r3, r2, r3
   14d88:	str	r3, [fp, #-40]	; 0xffffffd8
   14d8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d90:	cmp	r3, #8
   14d94:	bls	14da0 <_start@@Base+0x780>
   14d98:	mov	r3, #8
   14d9c:	str	r3, [fp, #-40]	; 0xffffffd8
   14da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14da4:	cmp	r3, #8
   14da8:	addls	pc, pc, r3, lsl #2
   14dac:	b	14f84 <_start@@Base+0x964>
   14db0:	b	14f84 <_start@@Base+0x964>
   14db4:	b	14f44 <_start@@Base+0x924>
   14db8:	b	14f04 <_start@@Base+0x8e4>
   14dbc:	b	14ec4 <_start@@Base+0x8a4>
   14dc0:	b	14e84 <_start@@Base+0x864>
   14dc4:	b	14e58 <_start@@Base+0x838>
   14dc8:	b	14e28 <_start@@Base+0x808>
   14dcc:	b	14df8 <_start@@Base+0x7d8>
   14dd0:	b	14dd4 <_start@@Base+0x7b4>
   14dd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14dd8:	add	r3, r3, #7
   14ddc:	ldrb	r3, [r3]
   14de0:	uxtb	r0, r3
   14de4:	mov	r1, #0
   14de8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14dec:	orr	r2, r2, r0
   14df0:	orr	r3, r3, r1
   14df4:	strd	r2, [fp, #-36]	; 0xffffffdc
   14df8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14dfc:	add	r3, r3, #6
   14e00:	ldrb	r3, [r3]
   14e04:	uxtb	r2, r3
   14e08:	mov	r3, #0
   14e0c:	lsl	r5, r3, #8
   14e10:	orr	r5, r5, r2, lsr #24
   14e14:	lsl	r4, r2, #8
   14e18:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e1c:	orr	r2, r2, r4
   14e20:	orr	r3, r3, r5
   14e24:	strd	r2, [fp, #-36]	; 0xffffffdc
   14e28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e2c:	add	r3, r3, #5
   14e30:	ldrb	r3, [r3]
   14e34:	uxtb	r2, r3
   14e38:	mov	r3, #0
   14e3c:	lsl	r7, r3, #16
   14e40:	orr	r7, r7, r2, lsr #16
   14e44:	lsl	r6, r2, #16
   14e48:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e4c:	orr	r2, r2, r6
   14e50:	orr	r3, r3, r7
   14e54:	strd	r2, [fp, #-36]	; 0xffffffdc
   14e58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e5c:	add	r3, r3, #4
   14e60:	ldrb	r3, [r3]
   14e64:	uxtb	r2, r3
   14e68:	mov	r3, #0
   14e6c:	lsr	r9, r2, #8
   14e70:	lsl	r8, r2, #24
   14e74:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e78:	orr	r2, r2, r8
   14e7c:	orr	r3, r3, r9
   14e80:	strd	r2, [fp, #-36]	; 0xffffffdc
   14e84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e88:	add	r3, r3, #3
   14e8c:	ldrb	r3, [r3]
   14e90:	uxtb	r2, r3
   14e94:	mov	r3, #0
   14e98:	mov	r3, r2
   14e9c:	str	r3, [fp, #-56]	; 0xffffffc8
   14ea0:	mov	r3, #0
   14ea4:	str	r3, [fp, #-60]	; 0xffffffc4
   14ea8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14eac:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   14eb0:	orr	r0, r0, r2
   14eb4:	orr	r1, r1, r3
   14eb8:	mov	r2, r0
   14ebc:	mov	r3, r1
   14ec0:	strd	r2, [fp, #-36]	; 0xffffffdc
   14ec4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ec8:	add	r3, r3, #2
   14ecc:	ldrb	r3, [r3]
   14ed0:	uxtb	r2, r3
   14ed4:	mov	r3, #0
   14ed8:	lsl	r3, r2, #8
   14edc:	str	r3, [fp, #-64]	; 0xffffffc0
   14ee0:	mov	r3, #0
   14ee4:	str	r3, [fp, #-68]	; 0xffffffbc
   14ee8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14eec:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   14ef0:	orr	r0, r0, r2
   14ef4:	orr	r1, r1, r3
   14ef8:	mov	r2, r0
   14efc:	mov	r3, r1
   14f00:	strd	r2, [fp, #-36]	; 0xffffffdc
   14f04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f08:	add	r3, r3, #1
   14f0c:	ldrb	r3, [r3]
   14f10:	uxtb	r2, r3
   14f14:	mov	r3, #0
   14f18:	lsl	r3, r2, #16
   14f1c:	str	r3, [fp, #-72]	; 0xffffffb8
   14f20:	mov	r3, #0
   14f24:	str	r3, [fp, #-76]	; 0xffffffb4
   14f28:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f2c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   14f30:	orr	r0, r0, r2
   14f34:	orr	r1, r1, r3
   14f38:	mov	r2, r0
   14f3c:	mov	r3, r1
   14f40:	strd	r2, [fp, #-36]	; 0xffffffdc
   14f44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f48:	ldrb	r3, [r3]
   14f4c:	uxtb	r2, r3
   14f50:	mov	r3, #0
   14f54:	lsl	r3, r2, #24
   14f58:	str	r3, [fp, #-80]	; 0xffffffb0
   14f5c:	mov	r3, #0
   14f60:	str	r3, [fp, #-84]	; 0xffffffac
   14f64:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f68:	ldrd	r0, [fp, #-84]	; 0xffffffac
   14f6c:	orr	r0, r0, r2
   14f70:	orr	r1, r1, r3
   14f74:	mov	r2, r0
   14f78:	mov	r3, r1
   14f7c:	strd	r2, [fp, #-36]	; 0xffffffdc
   14f80:	nop			; (mov r0, r0)
   14f84:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f88:	mov	r0, r2
   14f8c:	mov	r1, r3
   14f90:	sub	sp, fp, #24
   14f94:	pop	{r4, r5, r6, r7, r8, r9, fp}
   14f98:	bx	lr
   14f9c:	push	{fp, lr}
   14fa0:	add	fp, sp, #4
   14fa4:	sub	sp, sp, #16
   14fa8:	str	r0, [fp, #-16]
   14fac:	str	r1, [fp, #-20]	; 0xffffffec
   14fb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   14fb4:	ldr	r3, [fp, #-16]
   14fb8:	sub	r3, r2, r3
   14fbc:	str	r3, [fp, #-8]
   14fc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   14fc4:	ldr	r0, [fp, #-16]
   14fc8:	bl	14d5c <_start@@Base+0x73c>
   14fcc:	mov	r2, r0
   14fd0:	mov	r3, r1
   14fd4:	mov	r0, r2
   14fd8:	mov	r1, r3
   14fdc:	sub	sp, fp, #4
   14fe0:	pop	{fp, pc}
   14fe4:	push	{fp}		; (str fp, [sp, #-4]!)
   14fe8:	add	fp, sp, #0
   14fec:	sub	sp, sp, #28
   14ff0:	str	r0, [fp, #-16]
   14ff4:	str	r1, [fp, #-20]	; 0xffffffec
   14ff8:	str	r2, [fp, #-24]	; 0xffffffe8
   14ffc:	str	r3, [fp, #-28]	; 0xffffffe4
   15000:	ldr	r3, [fp, #-20]	; 0xffffffec
   15004:	str	r3, [fp, #-8]
   15008:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1500c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15010:	sub	r2, r2, r3
   15014:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15018:	cmp	r2, r3
   1501c:	bgt	15028 <_start@@Base+0xa08>
   15020:	ldr	r3, [fp, #-8]
   15024:	b	15058 <_start@@Base+0xa38>
   15028:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1502c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15030:	add	r3, r2, r3
   15034:	ldrb	r3, [r3]
   15038:	cmp	r3, #46	; 0x2e
   1503c:	beq	15048 <_start@@Base+0xa28>
   15040:	ldr	r3, [fp, #-8]
   15044:	b	15058 <_start@@Base+0xa38>
   15048:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1504c:	add	r3, r3, #1
   15050:	ldr	r2, [fp, #-20]	; 0xffffffec
   15054:	add	r3, r2, r3
   15058:	mov	r0, r3
   1505c:	add	sp, fp, #0
   15060:	pop	{fp}		; (ldr fp, [sp], #4)
   15064:	bx	lr
   15068:	push	{fp, lr}
   1506c:	add	fp, sp, #4
   15070:	sub	sp, sp, #16
   15074:	str	r0, [fp, #-8]
   15078:	str	r1, [fp, #-12]
   1507c:	str	r2, [fp, #-16]
   15080:	ldr	r2, [fp, #-16]
   15084:	ldr	r1, [fp, #-12]
   15088:	ldr	r0, [fp, #-8]
   1508c:	bl	14cb8 <_start@@Base+0x698>
   15090:	str	r0, [fp, #-12]
   15094:	ldr	r3, [fp, #-8]
   15098:	ldr	r3, [r3, #12]
   1509c:	cmp	r3, #0
   150a0:	bne	150b8 <_start@@Base+0xa98>
   150a4:	ldr	r2, [fp, #-16]
   150a8:	ldr	r1, [fp, #-12]
   150ac:	ldr	r0, [fp, #-8]
   150b0:	bl	14c24 <_start@@Base+0x604>
   150b4:	str	r0, [fp, #-12]
   150b8:	ldr	r3, [fp, #-12]
   150bc:	mov	r0, r3
   150c0:	sub	sp, fp, #4
   150c4:	pop	{fp, pc}
   150c8:	push	{fp, lr}
   150cc:	add	fp, sp, #4
   150d0:	sub	sp, sp, #16
   150d4:	str	r0, [fp, #-8]
   150d8:	str	r1, [fp, #-12]
   150dc:	str	r2, [fp, #-16]
   150e0:	str	r3, [fp, #-20]	; 0xffffffec
   150e4:	ldr	r2, [fp, #-12]
   150e8:	ldr	r3, [fp, #-16]
   150ec:	cmp	r2, r3
   150f0:	beq	15104 <_start@@Base+0xae4>
   150f4:	ldr	r3, [fp, #-12]
   150f8:	ldrb	r3, [r3]
   150fc:	cmp	r3, #123	; 0x7b
   15100:	beq	1512c <_start@@Base+0xb0c>
   15104:	ldr	r3, [fp, #-20]	; 0xffffffec
   15108:	mov	r2, #0
   1510c:	str	r2, [r3]
   15110:	mov	r3, #21
   15114:	ldr	r2, [fp, #-16]
   15118:	ldr	r1, [fp, #-12]
   1511c:	ldr	r0, [fp, #-8]
   15120:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15124:	mov	r3, r0
   15128:	b	151a4 <_start@@Base+0xb84>
   1512c:	ldr	r3, [fp, #-12]
   15130:	add	r3, r3, #1
   15134:	ldr	r2, [fp, #-16]
   15138:	mov	r1, r3
   1513c:	ldr	r0, [fp, #-8]
   15140:	bl	14c24 <_start@@Base+0x604>
   15144:	str	r0, [fp, #-12]
   15148:	ldr	r2, [fp, #-12]
   1514c:	ldr	r3, [fp, #-16]
   15150:	cmp	r2, r3
   15154:	beq	15194 <_start@@Base+0xb74>
   15158:	ldr	r3, [fp, #-12]
   1515c:	ldrb	r3, [r3]
   15160:	cmp	r3, #125	; 0x7d
   15164:	bne	15194 <_start@@Base+0xb74>
   15168:	ldr	r3, [fp, #-20]	; 0xffffffec
   1516c:	mov	r2, #0
   15170:	str	r2, [r3]
   15174:	ldr	r3, [fp, #-12]
   15178:	add	r3, r3, #1
   1517c:	ldr	r2, [fp, #-16]
   15180:	mov	r1, r3
   15184:	ldr	r0, [fp, #-8]
   15188:	bl	14c24 <_start@@Base+0x604>
   1518c:	mov	r3, r0
   15190:	b	151a4 <_start@@Base+0xb84>
   15194:	ldr	r3, [fp, #-20]	; 0xffffffec
   15198:	mov	r2, #1
   1519c:	str	r2, [r3]
   151a0:	ldr	r3, [fp, #-12]
   151a4:	mov	r0, r3
   151a8:	sub	sp, fp, #4
   151ac:	pop	{fp, pc}
   151b0:	push	{fp, lr}
   151b4:	add	fp, sp, #4
   151b8:	sub	sp, sp, #16
   151bc:	str	r0, [fp, #-8]
   151c0:	str	r1, [fp, #-12]
   151c4:	str	r2, [fp, #-16]
   151c8:	str	r3, [fp, #-20]	; 0xffffffec
   151cc:	ldr	r2, [fp, #-16]
   151d0:	ldr	r1, [fp, #-12]
   151d4:	ldr	r0, [fp, #-8]
   151d8:	bl	14c24 <_start@@Base+0x604>
   151dc:	str	r0, [fp, #-12]
   151e0:	ldr	r2, [fp, #-12]
   151e4:	ldr	r3, [fp, #-16]
   151e8:	cmp	r2, r3
   151ec:	bne	15204 <_start@@Base+0xbe4>
   151f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   151f4:	mov	r2, #0
   151f8:	str	r2, [r3]
   151fc:	ldr	r3, [fp, #-12]
   15200:	b	1530c <_start@@Base+0xcec>
   15204:	ldr	r3, [fp, #-12]
   15208:	ldrb	r3, [r3]
   1520c:	cmp	r3, #44	; 0x2c
   15210:	beq	1526c <_start@@Base+0xc4c>
   15214:	ldr	r3, [fp, #-20]	; 0xffffffec
   15218:	mov	r2, #0
   1521c:	str	r2, [r3]
   15220:	ldr	r3, [fp, #-12]
   15224:	ldrb	r3, [r3]
   15228:	cmp	r3, #125	; 0x7d
   1522c:	beq	1524c <_start@@Base+0xc2c>
   15230:	mov	r3, #10
   15234:	ldr	r2, [fp, #-16]
   15238:	ldr	r1, [fp, #-12]
   1523c:	ldr	r0, [fp, #-8]
   15240:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15244:	mov	r3, r0
   15248:	b	1530c <_start@@Base+0xcec>
   1524c:	ldr	r3, [fp, #-12]
   15250:	add	r3, r3, #1
   15254:	ldr	r2, [fp, #-16]
   15258:	mov	r1, r3
   1525c:	ldr	r0, [fp, #-8]
   15260:	bl	14c24 <_start@@Base+0x604>
   15264:	mov	r3, r0
   15268:	b	1530c <_start@@Base+0xcec>
   1526c:	ldr	r3, [fp, #-12]
   15270:	add	r3, r3, #1
   15274:	ldr	r2, [fp, #-16]
   15278:	mov	r1, r3
   1527c:	ldr	r0, [fp, #-8]
   15280:	bl	14c24 <_start@@Base+0x604>
   15284:	str	r0, [fp, #-12]
   15288:	ldr	r2, [fp, #-12]
   1528c:	ldr	r3, [fp, #-16]
   15290:	cmp	r2, r3
   15294:	bne	152c0 <_start@@Base+0xca0>
   15298:	ldr	r3, [fp, #-20]	; 0xffffffec
   1529c:	mov	r2, #0
   152a0:	str	r2, [r3]
   152a4:	mov	r3, #10
   152a8:	ldr	r2, [fp, #-16]
   152ac:	ldr	r1, [fp, #-12]
   152b0:	ldr	r0, [fp, #-8]
   152b4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   152b8:	mov	r3, r0
   152bc:	b	1530c <_start@@Base+0xcec>
   152c0:	ldr	r3, [fp, #-12]
   152c4:	ldrb	r3, [r3]
   152c8:	cmp	r3, #125	; 0x7d
   152cc:	bne	152fc <_start@@Base+0xcdc>
   152d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   152d4:	mov	r2, #0
   152d8:	str	r2, [r3]
   152dc:	ldr	r3, [fp, #-12]
   152e0:	add	r3, r3, #1
   152e4:	ldr	r2, [fp, #-16]
   152e8:	mov	r1, r3
   152ec:	ldr	r0, [fp, #-8]
   152f0:	bl	14c24 <_start@@Base+0x604>
   152f4:	mov	r3, r0
   152f8:	b	1530c <_start@@Base+0xcec>
   152fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15300:	mov	r2, #1
   15304:	str	r2, [r3]
   15308:	ldr	r3, [fp, #-12]
   1530c:	mov	r0, r3
   15310:	sub	sp, fp, #4
   15314:	pop	{fp, pc}
   15318:	push	{fp, lr}
   1531c:	add	fp, sp, #4
   15320:	sub	sp, sp, #16
   15324:	str	r0, [fp, #-8]
   15328:	str	r1, [fp, #-12]
   1532c:	str	r2, [fp, #-16]
   15330:	str	r3, [fp, #-20]	; 0xffffffec
   15334:	ldr	r2, [fp, #-12]
   15338:	ldr	r3, [fp, #-16]
   1533c:	cmp	r2, r3
   15340:	beq	15354 <_start@@Base+0xd34>
   15344:	ldr	r3, [fp, #-12]
   15348:	ldrb	r3, [r3]
   1534c:	cmp	r3, #91	; 0x5b
   15350:	beq	1537c <_start@@Base+0xd5c>
   15354:	ldr	r3, [fp, #-20]	; 0xffffffec
   15358:	mov	r2, #0
   1535c:	str	r2, [r3]
   15360:	mov	r3, #22
   15364:	ldr	r2, [fp, #-16]
   15368:	ldr	r1, [fp, #-12]
   1536c:	ldr	r0, [fp, #-8]
   15370:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15374:	mov	r3, r0
   15378:	b	153f4 <_start@@Base+0xdd4>
   1537c:	ldr	r3, [fp, #-12]
   15380:	add	r3, r3, #1
   15384:	ldr	r2, [fp, #-16]
   15388:	mov	r1, r3
   1538c:	ldr	r0, [fp, #-8]
   15390:	bl	14c24 <_start@@Base+0x604>
   15394:	str	r0, [fp, #-12]
   15398:	ldr	r2, [fp, #-12]
   1539c:	ldr	r3, [fp, #-16]
   153a0:	cmp	r2, r3
   153a4:	beq	153e4 <_start@@Base+0xdc4>
   153a8:	ldr	r3, [fp, #-12]
   153ac:	ldrb	r3, [r3]
   153b0:	cmp	r3, #93	; 0x5d
   153b4:	bne	153e4 <_start@@Base+0xdc4>
   153b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   153bc:	mov	r2, #0
   153c0:	str	r2, [r3]
   153c4:	ldr	r3, [fp, #-12]
   153c8:	add	r3, r3, #1
   153cc:	ldr	r2, [fp, #-16]
   153d0:	mov	r1, r3
   153d4:	ldr	r0, [fp, #-8]
   153d8:	bl	14c24 <_start@@Base+0x604>
   153dc:	mov	r3, r0
   153e0:	b	153f4 <_start@@Base+0xdd4>
   153e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   153e8:	mov	r2, #1
   153ec:	str	r2, [r3]
   153f0:	ldr	r3, [fp, #-12]
   153f4:	mov	r0, r3
   153f8:	sub	sp, fp, #4
   153fc:	pop	{fp, pc}
   15400:	push	{fp, lr}
   15404:	add	fp, sp, #4
   15408:	sub	sp, sp, #16
   1540c:	str	r0, [fp, #-8]
   15410:	str	r1, [fp, #-12]
   15414:	str	r2, [fp, #-16]
   15418:	str	r3, [fp, #-20]	; 0xffffffec
   1541c:	ldr	r2, [fp, #-16]
   15420:	ldr	r1, [fp, #-12]
   15424:	ldr	r0, [fp, #-8]
   15428:	bl	14c24 <_start@@Base+0x604>
   1542c:	str	r0, [fp, #-12]
   15430:	ldr	r2, [fp, #-12]
   15434:	ldr	r3, [fp, #-16]
   15438:	cmp	r2, r3
   1543c:	bne	15454 <_start@@Base+0xe34>
   15440:	ldr	r3, [fp, #-20]	; 0xffffffec
   15444:	mov	r2, #0
   15448:	str	r2, [r3]
   1544c:	ldr	r3, [fp, #-12]
   15450:	b	1555c <_start@@Base+0xf3c>
   15454:	ldr	r3, [fp, #-12]
   15458:	ldrb	r3, [r3]
   1545c:	cmp	r3, #44	; 0x2c
   15460:	beq	154bc <_start@@Base+0xe9c>
   15464:	ldr	r3, [fp, #-20]	; 0xffffffec
   15468:	mov	r2, #0
   1546c:	str	r2, [r3]
   15470:	ldr	r3, [fp, #-12]
   15474:	ldrb	r3, [r3]
   15478:	cmp	r3, #93	; 0x5d
   1547c:	beq	1549c <_start@@Base+0xe7c>
   15480:	mov	r3, #9
   15484:	ldr	r2, [fp, #-16]
   15488:	ldr	r1, [fp, #-12]
   1548c:	ldr	r0, [fp, #-8]
   15490:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15494:	mov	r3, r0
   15498:	b	1555c <_start@@Base+0xf3c>
   1549c:	ldr	r3, [fp, #-12]
   154a0:	add	r3, r3, #1
   154a4:	ldr	r2, [fp, #-16]
   154a8:	mov	r1, r3
   154ac:	ldr	r0, [fp, #-8]
   154b0:	bl	14c24 <_start@@Base+0x604>
   154b4:	mov	r3, r0
   154b8:	b	1555c <_start@@Base+0xf3c>
   154bc:	ldr	r3, [fp, #-12]
   154c0:	add	r3, r3, #1
   154c4:	ldr	r2, [fp, #-16]
   154c8:	mov	r1, r3
   154cc:	ldr	r0, [fp, #-8]
   154d0:	bl	14c24 <_start@@Base+0x604>
   154d4:	str	r0, [fp, #-12]
   154d8:	ldr	r2, [fp, #-12]
   154dc:	ldr	r3, [fp, #-16]
   154e0:	cmp	r2, r3
   154e4:	bne	15510 <_start@@Base+0xef0>
   154e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   154ec:	mov	r2, #0
   154f0:	str	r2, [r3]
   154f4:	mov	r3, #9
   154f8:	ldr	r2, [fp, #-16]
   154fc:	ldr	r1, [fp, #-12]
   15500:	ldr	r0, [fp, #-8]
   15504:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15508:	mov	r3, r0
   1550c:	b	1555c <_start@@Base+0xf3c>
   15510:	ldr	r3, [fp, #-12]
   15514:	ldrb	r3, [r3]
   15518:	cmp	r3, #93	; 0x5d
   1551c:	bne	1554c <_start@@Base+0xf2c>
   15520:	ldr	r3, [fp, #-20]	; 0xffffffec
   15524:	mov	r2, #0
   15528:	str	r2, [r3]
   1552c:	ldr	r3, [fp, #-12]
   15530:	add	r3, r3, #1
   15534:	ldr	r2, [fp, #-16]
   15538:	mov	r1, r3
   1553c:	ldr	r0, [fp, #-8]
   15540:	bl	14c24 <_start@@Base+0x604>
   15544:	mov	r3, r0
   15548:	b	1555c <_start@@Base+0xf3c>
   1554c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15550:	mov	r2, #1
   15554:	str	r2, [r3]
   15558:	ldr	r3, [fp, #-12]
   1555c:	mov	r0, r3
   15560:	sub	sp, fp, #4
   15564:	pop	{fp, pc}
   15568:	push	{fp, lr}
   1556c:	add	fp, sp, #4
   15570:	sub	sp, sp, #24
   15574:	str	r0, [fp, #-16]
   15578:	str	r1, [fp, #-20]	; 0xffffffec
   1557c:	str	r2, [fp, #-24]	; 0xffffffe8
   15580:	str	r3, [fp, #-28]	; 0xffffffe4
   15584:	ldr	r3, [fp, #-20]	; 0xffffffec
   15588:	str	r3, [fp, #-8]
   1558c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15590:	ldr	r3, [fp, #-20]	; 0xffffffec
   15594:	sub	r2, r2, r3
   15598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1559c:	cmp	r2, r3
   155a0:	bgt	155ac <_start@@Base+0xf8c>
   155a4:	ldr	r3, [fp, #-8]
   155a8:	b	156b8 <_start@@Base+0x1098>
   155ac:	ldr	r3, [fp, #-16]
   155b0:	ldr	r3, [r3, #12]
   155b4:	cmp	r3, #0
   155b8:	beq	15614 <_start@@Base+0xff4>
   155bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   155c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   155c4:	add	r3, r2, r3
   155c8:	ldrb	r3, [r3]
   155cc:	cmp	r3, #32
   155d0:	bls	155f4 <_start@@Base+0xfd4>
   155d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   155d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   155dc:	add	r3, r2, r3
   155e0:	ldrb	r3, [r3]
   155e4:	cmp	r3, #58	; 0x3a
   155e8:	beq	155f4 <_start@@Base+0xfd4>
   155ec:	ldr	r3, [fp, #-8]
   155f0:	b	156b8 <_start@@Base+0x1098>
   155f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   155f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   155fc:	add	r3, r2, r3
   15600:	str	r3, [fp, #-20]	; 0xffffffec
   15604:	ldr	r3, [fp, #-16]
   15608:	mov	r2, #0
   1560c:	str	r2, [r3, #12]
   15610:	b	15648 <_start@@Base+0x1028>
   15614:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15618:	ldr	r2, [fp, #-20]	; 0xffffffec
   1561c:	add	r3, r2, r3
   15620:	ldrb	r3, [r3]
   15624:	cmp	r3, #34	; 0x22
   15628:	beq	15634 <_start@@Base+0x1014>
   1562c:	ldr	r3, [fp, #-8]
   15630:	b	156b8 <_start@@Base+0x1098>
   15634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15638:	add	r3, r3, #1
   1563c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15640:	add	r3, r2, r3
   15644:	str	r3, [fp, #-20]	; 0xffffffec
   15648:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1564c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15650:	ldr	r0, [fp, #-16]
   15654:	bl	14c24 <_start@@Base+0x604>
   15658:	str	r0, [fp, #-20]	; 0xffffffec
   1565c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15664:	cmp	r2, r3
   15668:	beq	156a0 <_start@@Base+0x1080>
   1566c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15670:	ldrb	r3, [r3]
   15674:	cmp	r3, #58	; 0x3a
   15678:	bne	156a0 <_start@@Base+0x1080>
   1567c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15680:	add	r3, r3, #1
   15684:	str	r3, [fp, #-20]	; 0xffffffec
   15688:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1568c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15690:	ldr	r0, [fp, #-16]
   15694:	bl	14c24 <_start@@Base+0x604>
   15698:	mov	r3, r0
   1569c:	b	156b8 <_start@@Base+0x1098>
   156a0:	mov	r3, #4
   156a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   156a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   156ac:	ldr	r0, [fp, #-16]
   156b0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   156b4:	mov	r3, r0
   156b8:	mov	r0, r3
   156bc:	sub	sp, fp, #4
   156c0:	pop	{fp, pc}
   156c4:	push	{fp, lr}
   156c8:	add	fp, sp, #4
   156cc:	sub	sp, sp, #16
   156d0:	str	r0, [fp, #-8]
   156d4:	str	r1, [fp, #-12]
   156d8:	str	r2, [fp, #-16]
   156dc:	str	r3, [fp, #-20]	; 0xffffffec
   156e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   156e4:	cmp	r3, #0
   156e8:	beq	15708 <_start@@Base+0x10e8>
   156ec:	mov	r3, #8
   156f0:	ldr	r2, [fp, #-16]
   156f4:	ldr	r1, [fp, #-12]
   156f8:	ldr	r0, [fp, #-8]
   156fc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15700:	mov	r3, r0
   15704:	b	15718 <_start@@Base+0x10f8>
   15708:	ldr	r1, [fp, #12]
   1570c:	ldrd	r2, [fp, #4]
   15710:	strd	r2, [r1]
   15714:	ldr	r3, [fp, #-12]
   15718:	mov	r0, r3
   1571c:	sub	sp, fp, #4
   15720:	pop	{fp, pc}
   15724:	push	{fp, lr}
   15728:	add	fp, sp, #4
   1572c:	sub	sp, sp, #16
   15730:	str	r0, [fp, #-8]
   15734:	str	r1, [fp, #-12]
   15738:	str	r2, [fp, #-16]
   1573c:	str	r3, [fp, #-20]	; 0xffffffec
   15740:	ldr	r3, [fp, #-20]	; 0xffffffec
   15744:	cmp	r3, #0
   15748:	beq	15768 <_start@@Base+0x1148>
   1574c:	mov	r3, #8
   15750:	ldr	r2, [fp, #-16]
   15754:	ldr	r1, [fp, #-12]
   15758:	ldr	r0, [fp, #-8]
   1575c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15760:	mov	r3, r0
   15764:	b	15794 <_start@@Base+0x1174>
   15768:	ldr	r2, [fp, #4]
   1576c:	ldr	r3, [fp, #8]
   15770:	orr	r3, r2, r3
   15774:	cmp	r3, #0
   15778:	movne	r3, #1
   1577c:	moveq	r3, #0
   15780:	uxtb	r3, r3
   15784:	mov	r2, r3
   15788:	ldr	r3, [fp, #12]
   1578c:	strb	r2, [r3]
   15790:	ldr	r3, [fp, #-12]
   15794:	mov	r0, r3
   15798:	sub	sp, fp, #4
   1579c:	pop	{fp, pc}
   157a0:	push	{fp, lr}
   157a4:	add	fp, sp, #4
   157a8:	sub	sp, sp, #16
   157ac:	str	r0, [fp, #-8]
   157b0:	str	r1, [fp, #-12]
   157b4:	str	r2, [fp, #-16]
   157b8:	str	r3, [fp, #-20]	; 0xffffffec
   157bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   157c0:	cmp	r3, #0
   157c4:	beq	157e4 <_start@@Base+0x11c4>
   157c8:	mov	r3, #8
   157cc:	ldr	r2, [fp, #-16]
   157d0:	ldr	r1, [fp, #-12]
   157d4:	ldr	r0, [fp, #-8]
   157d8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   157dc:	mov	r3, r0
   157e0:	b	15828 <_start@@Base+0x1208>
   157e4:	ldrd	r2, [fp, #4]
   157e8:	mvn	r0, #0
   157ec:	mov	r1, #0
   157f0:	cmp	r3, r1
   157f4:	cmpeq	r2, r0
   157f8:	bls	15818 <_start@@Base+0x11f8>
   157fc:	mov	r3, #7
   15800:	ldr	r2, [fp, #-16]
   15804:	ldr	r1, [fp, #-12]
   15808:	ldr	r0, [fp, #-8]
   1580c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15810:	mov	r3, r0
   15814:	b	15828 <_start@@Base+0x1208>
   15818:	ldr	r2, [fp, #4]
   1581c:	ldr	r3, [fp, #12]
   15820:	str	r2, [r3]
   15824:	ldr	r3, [fp, #-12]
   15828:	mov	r0, r3
   1582c:	sub	sp, fp, #4
   15830:	pop	{fp, pc}
   15834:	push	{fp, lr}
   15838:	add	fp, sp, #4
   1583c:	sub	sp, sp, #16
   15840:	str	r0, [fp, #-8]
   15844:	str	r1, [fp, #-12]
   15848:	str	r2, [fp, #-16]
   1584c:	str	r3, [fp, #-20]	; 0xffffffec
   15850:	ldr	r3, [fp, #-20]	; 0xffffffec
   15854:	cmp	r3, #0
   15858:	beq	15878 <_start@@Base+0x1258>
   1585c:	mov	r3, #8
   15860:	ldr	r2, [fp, #-16]
   15864:	ldr	r1, [fp, #-12]
   15868:	ldr	r0, [fp, #-8]
   1586c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15870:	mov	r3, r0
   15874:	b	158bc <_start@@Base+0x129c>
   15878:	ldrd	r2, [fp, #4]
   1587c:	ldr	r0, [pc, #68]	; 158c8 <_start@@Base+0x12a8>
   15880:	mov	r1, #0
   15884:	cmp	r3, r1
   15888:	cmpeq	r2, r0
   1588c:	bls	158ac <_start@@Base+0x128c>
   15890:	mov	r3, #7
   15894:	ldr	r2, [fp, #-16]
   15898:	ldr	r1, [fp, #-12]
   1589c:	ldr	r0, [fp, #-8]
   158a0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   158a4:	mov	r3, r0
   158a8:	b	158bc <_start@@Base+0x129c>
   158ac:	ldrh	r2, [fp, #4]
   158b0:	ldr	r3, [fp, #12]
   158b4:	strh	r2, [r3]
   158b8:	ldr	r3, [fp, #-12]
   158bc:	mov	r0, r3
   158c0:	sub	sp, fp, #4
   158c4:	pop	{fp, pc}
   158c8:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   158cc:	push	{fp, lr}
   158d0:	add	fp, sp, #4
   158d4:	sub	sp, sp, #16
   158d8:	str	r0, [fp, #-8]
   158dc:	str	r1, [fp, #-12]
   158e0:	str	r2, [fp, #-16]
   158e4:	str	r3, [fp, #-20]	; 0xffffffec
   158e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158ec:	cmp	r3, #0
   158f0:	beq	15910 <_start@@Base+0x12f0>
   158f4:	mov	r3, #8
   158f8:	ldr	r2, [fp, #-16]
   158fc:	ldr	r1, [fp, #-12]
   15900:	ldr	r0, [fp, #-8]
   15904:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15908:	mov	r3, r0
   1590c:	b	1594c <_start@@Base+0x132c>
   15910:	ldrd	r2, [fp, #4]
   15914:	cmp	r3, #0
   15918:	cmpeq	r2, #255	; 0xff
   1591c:	bls	1593c <_start@@Base+0x131c>
   15920:	mov	r3, #7
   15924:	ldr	r2, [fp, #-16]
   15928:	ldr	r1, [fp, #-12]
   1592c:	ldr	r0, [fp, #-8]
   15930:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15934:	mov	r3, r0
   15938:	b	1594c <_start@@Base+0x132c>
   1593c:	ldrb	r2, [fp, #4]
   15940:	ldr	r3, [fp, #12]
   15944:	strb	r2, [r3]
   15948:	ldr	r3, [fp, #-12]
   1594c:	mov	r0, r3
   15950:	sub	sp, fp, #4
   15954:	pop	{fp, pc}
   15958:	push	{fp, lr}
   1595c:	add	fp, sp, #4
   15960:	sub	sp, sp, #16
   15964:	str	r0, [fp, #-8]
   15968:	str	r1, [fp, #-12]
   1596c:	str	r2, [fp, #-16]
   15970:	str	r3, [fp, #-20]	; 0xffffffec
   15974:	ldr	r3, [fp, #-20]	; 0xffffffec
   15978:	cmp	r3, #0
   1597c:	beq	159c4 <_start@@Base+0x13a4>
   15980:	ldrd	r2, [fp, #4]
   15984:	cmp	r3, #-2147483648	; 0x80000000
   15988:	cmpeq	r2, #0
   1598c:	bls	159ac <_start@@Base+0x138c>
   15990:	mov	r3, #8
   15994:	ldr	r2, [fp, #-16]
   15998:	ldr	r1, [fp, #-12]
   1599c:	ldr	r0, [fp, #-8]
   159a0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   159a4:	mov	r3, r0
   159a8:	b	15a00 <_start@@Base+0x13e0>
   159ac:	ldrd	r2, [fp, #4]
   159b0:	rsbs	r2, r2, #0
   159b4:	rsc	r3, r3, #0
   159b8:	ldr	r1, [fp, #12]
   159bc:	strd	r2, [r1]
   159c0:	b	159fc <_start@@Base+0x13dc>
   159c4:	ldrd	r2, [fp, #4]
   159c8:	cmp	r2, #0
   159cc:	sbcs	r3, r3, #0
   159d0:	bge	159f0 <_start@@Base+0x13d0>
   159d4:	mov	r3, #7
   159d8:	ldr	r2, [fp, #-16]
   159dc:	ldr	r1, [fp, #-12]
   159e0:	ldr	r0, [fp, #-8]
   159e4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   159e8:	mov	r3, r0
   159ec:	b	15a00 <_start@@Base+0x13e0>
   159f0:	ldrd	r2, [fp, #4]
   159f4:	ldr	r1, [fp, #12]
   159f8:	strd	r2, [r1]
   159fc:	ldr	r3, [fp, #-12]
   15a00:	mov	r0, r3
   15a04:	sub	sp, fp, #4
   15a08:	pop	{fp, pc}
   15a0c:	push	{fp, lr}
   15a10:	add	fp, sp, #4
   15a14:	sub	sp, sp, #16
   15a18:	str	r0, [fp, #-8]
   15a1c:	str	r1, [fp, #-12]
   15a20:	str	r2, [fp, #-16]
   15a24:	str	r3, [fp, #-20]	; 0xffffffec
   15a28:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a2c:	cmp	r3, #0
   15a30:	beq	15a78 <_start@@Base+0x1458>
   15a34:	ldrd	r2, [fp, #4]
   15a38:	cmp	r3, #0
   15a3c:	cmpeq	r2, #-2147483648	; 0x80000000
   15a40:	bls	15a60 <_start@@Base+0x1440>
   15a44:	mov	r3, #8
   15a48:	ldr	r2, [fp, #-16]
   15a4c:	ldr	r1, [fp, #-12]
   15a50:	ldr	r0, [fp, #-8]
   15a54:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15a58:	mov	r3, r0
   15a5c:	b	15abc <_start@@Base+0x149c>
   15a60:	ldr	r3, [fp, #4]
   15a64:	rsb	r3, r3, #0
   15a68:	mov	r2, r3
   15a6c:	ldr	r3, [fp, #12]
   15a70:	str	r2, [r3]
   15a74:	b	15ab8 <_start@@Base+0x1498>
   15a78:	ldrd	r2, [fp, #4]
   15a7c:	mvn	r0, #-2147483648	; 0x80000000
   15a80:	mov	r1, #0
   15a84:	cmp	r3, r1
   15a88:	cmpeq	r2, r0
   15a8c:	bls	15aac <_start@@Base+0x148c>
   15a90:	mov	r3, #7
   15a94:	ldr	r2, [fp, #-16]
   15a98:	ldr	r1, [fp, #-12]
   15a9c:	ldr	r0, [fp, #-8]
   15aa0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15aa4:	mov	r3, r0
   15aa8:	b	15abc <_start@@Base+0x149c>
   15aac:	ldr	r2, [fp, #4]
   15ab0:	ldr	r3, [fp, #12]
   15ab4:	str	r2, [r3]
   15ab8:	ldr	r3, [fp, #-12]
   15abc:	mov	r0, r3
   15ac0:	sub	sp, fp, #4
   15ac4:	pop	{fp, pc}
   15ac8:	push	{fp, lr}
   15acc:	add	fp, sp, #4
   15ad0:	sub	sp, sp, #16
   15ad4:	str	r0, [fp, #-8]
   15ad8:	str	r1, [fp, #-12]
   15adc:	str	r2, [fp, #-16]
   15ae0:	str	r3, [fp, #-20]	; 0xffffffec
   15ae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ae8:	cmp	r3, #0
   15aec:	beq	15b38 <_start@@Base+0x1518>
   15af0:	ldrd	r2, [fp, #4]
   15af4:	cmp	r3, #0
   15af8:	cmpeq	r2, #32768	; 0x8000
   15afc:	bls	15b1c <_start@@Base+0x14fc>
   15b00:	mov	r3, #8
   15b04:	ldr	r2, [fp, #-16]
   15b08:	ldr	r1, [fp, #-12]
   15b0c:	ldr	r0, [fp, #-8]
   15b10:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15b14:	mov	r3, r0
   15b18:	b	15b7c <_start@@Base+0x155c>
   15b1c:	ldrh	r3, [fp, #4]
   15b20:	rsb	r3, r3, #0
   15b24:	uxth	r3, r3
   15b28:	sxth	r2, r3
   15b2c:	ldr	r3, [fp, #12]
   15b30:	strh	r2, [r3]
   15b34:	b	15b78 <_start@@Base+0x1558>
   15b38:	ldrd	r2, [fp, #4]
   15b3c:	ldr	r0, [pc, #68]	; 15b88 <_start@@Base+0x1568>
   15b40:	mov	r1, #0
   15b44:	cmp	r3, r1
   15b48:	cmpeq	r2, r0
   15b4c:	bls	15b6c <_start@@Base+0x154c>
   15b50:	mov	r3, #7
   15b54:	ldr	r2, [fp, #-16]
   15b58:	ldr	r1, [fp, #-12]
   15b5c:	ldr	r0, [fp, #-8]
   15b60:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15b64:	mov	r3, r0
   15b68:	b	15b7c <_start@@Base+0x155c>
   15b6c:	ldrsh	r2, [fp, #4]
   15b70:	ldr	r3, [fp, #12]
   15b74:	strh	r2, [r3]
   15b78:	ldr	r3, [fp, #-12]
   15b7c:	mov	r0, r3
   15b80:	sub	sp, fp, #4
   15b84:	pop	{fp, pc}
   15b88:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   15b8c:	push	{fp, lr}
   15b90:	add	fp, sp, #4
   15b94:	sub	sp, sp, #16
   15b98:	str	r0, [fp, #-8]
   15b9c:	str	r1, [fp, #-12]
   15ba0:	str	r2, [fp, #-16]
   15ba4:	str	r3, [fp, #-20]	; 0xffffffec
   15ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bac:	cmp	r3, #0
   15bb0:	beq	15bfc <_start@@Base+0x15dc>
   15bb4:	ldrd	r2, [fp, #4]
   15bb8:	cmp	r3, #0
   15bbc:	cmpeq	r2, #128	; 0x80
   15bc0:	bls	15be0 <_start@@Base+0x15c0>
   15bc4:	mov	r3, #8
   15bc8:	ldr	r2, [fp, #-16]
   15bcc:	ldr	r1, [fp, #-12]
   15bd0:	ldr	r0, [fp, #-8]
   15bd4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15bd8:	mov	r3, r0
   15bdc:	b	15c38 <_start@@Base+0x1618>
   15be0:	ldrb	r3, [fp, #4]
   15be4:	rsb	r3, r3, #0
   15be8:	uxtb	r3, r3
   15bec:	sxtb	r2, r3
   15bf0:	ldr	r3, [fp, #12]
   15bf4:	strb	r2, [r3]
   15bf8:	b	15c34 <_start@@Base+0x1614>
   15bfc:	ldrd	r2, [fp, #4]
   15c00:	cmp	r3, #0
   15c04:	cmpeq	r2, #127	; 0x7f
   15c08:	bls	15c28 <_start@@Base+0x1608>
   15c0c:	mov	r3, #7
   15c10:	ldr	r2, [fp, #-16]
   15c14:	ldr	r1, [fp, #-12]
   15c18:	ldr	r0, [fp, #-8]
   15c1c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15c20:	mov	r3, r0
   15c24:	b	15c38 <_start@@Base+0x1618>
   15c28:	ldrsb	r2, [fp, #4]
   15c2c:	ldr	r3, [fp, #12]
   15c30:	strb	r2, [r3]
   15c34:	ldr	r3, [fp, #-12]
   15c38:	mov	r0, r3
   15c3c:	sub	sp, fp, #4
   15c40:	pop	{fp, pc}
   15c44:	push	{fp, lr}
   15c48:	add	fp, sp, #4
   15c4c:	sub	sp, sp, #16
   15c50:	str	r0, [fp, #-8]
   15c54:	str	r1, [fp, #-12]
   15c58:	str	r2, [fp, #-16]
   15c5c:	str	r3, [fp, #-20]	; 0xffffffec
   15c60:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c64:	cmp	r3, #0
   15c68:	beq	15c80 <_start@@Base+0x1660>
   15c6c:	ldrd	r0, [fp, #4]
   15c70:	bl	4c490 <flatcc_json_printer_clear@@Base+0xa24>
   15c74:	mov	r3, r0
   15c78:	eor	r2, r3, #-2147483648	; 0x80000000
   15c7c:	b	15c8c <_start@@Base+0x166c>
   15c80:	ldrd	r0, [fp, #4]
   15c84:	bl	4c490 <flatcc_json_printer_clear@@Base+0xa24>
   15c88:	mov	r2, r0
   15c8c:	ldr	r3, [fp, #12]
   15c90:	str	r2, [r3]
   15c94:	ldr	r3, [fp, #-12]
   15c98:	mov	r0, r3
   15c9c:	sub	sp, fp, #4
   15ca0:	pop	{fp, pc}
   15ca4:	push	{fp, lr}
   15ca8:	add	fp, sp, #4
   15cac:	sub	sp, sp, #16
   15cb0:	str	r0, [fp, #-8]
   15cb4:	str	r1, [fp, #-12]
   15cb8:	str	r2, [fp, #-16]
   15cbc:	str	r3, [fp, #-20]	; 0xffffffec
   15cc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cc4:	cmp	r3, #0
   15cc8:	beq	15ce4 <_start@@Base+0x16c4>
   15ccc:	ldrd	r0, [fp, #4]
   15cd0:	bl	4c258 <flatcc_json_printer_clear@@Base+0x7ec>
   15cd4:	mov	r2, r0
   15cd8:	mov	r3, r1
   15cdc:	eor	r3, r3, #-2147483648	; 0x80000000
   15ce0:	b	15cf4 <_start@@Base+0x16d4>
   15ce4:	ldrd	r0, [fp, #4]
   15ce8:	bl	4c258 <flatcc_json_printer_clear@@Base+0x7ec>
   15cec:	mov	r2, r0
   15cf0:	mov	r3, r1
   15cf4:	ldr	r1, [fp, #12]
   15cf8:	strd	r2, [r1]
   15cfc:	ldr	r3, [fp, #-12]
   15d00:	mov	r0, r3
   15d04:	sub	sp, fp, #4
   15d08:	pop	{fp, pc}
   15d0c:	push	{fp, lr}
   15d10:	add	fp, sp, #4
   15d14:	sub	sp, sp, #16
   15d18:	str	r0, [fp, #-8]
   15d1c:	str	r1, [fp, #-12]
   15d20:	str	r2, [fp, #-16]
   15d24:	ldr	r2, [fp, #-16]
   15d28:	ldr	r3, [fp, #-12]
   15d2c:	sub	r3, r2, r3
   15d30:	cmp	r3, #3
   15d34:	ble	15d68 <_start@@Base+0x1748>
   15d38:	mov	r2, #4
   15d3c:	ldr	r3, [pc, #72]	; 15d8c <_start@@Base+0x176c>
   15d40:	add	r3, pc, r3
   15d44:	mov	r1, r3
   15d48:	ldr	r0, [fp, #-12]
   15d4c:	bl	14550 <memcmp@plt>
   15d50:	mov	r3, r0
   15d54:	cmp	r3, #0
   15d58:	bne	15d68 <_start@@Base+0x1748>
   15d5c:	ldr	r3, [fp, #-12]
   15d60:	add	r3, r3, #4
   15d64:	b	15d80 <_start@@Base+0x1760>
   15d68:	mov	r3, #26
   15d6c:	ldr	r2, [fp, #-16]
   15d70:	ldr	r1, [fp, #-12]
   15d74:	ldr	r0, [fp, #-8]
   15d78:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   15d7c:	mov	r3, r0
   15d80:	mov	r0, r3
   15d84:	sub	sp, fp, #4
   15d88:	pop	{fp, pc}
   15d8c:	andeq	r6, r3, r0, asr #19
   15d90:	push	{fp, lr}
   15d94:	add	fp, sp, #4
   15d98:	sub	sp, sp, #56	; 0x38
   15d9c:	str	r0, [fp, #-32]	; 0xffffffe0
   15da0:	str	r1, [fp, #-36]	; 0xffffffdc
   15da4:	str	r2, [fp, #-40]	; 0xffffffd8
   15da8:	str	r3, [fp, #-44]	; 0xffffffd4
   15dac:	mov	r2, #0
   15db0:	mov	r3, #0
   15db4:	strd	r2, [fp, #-20]	; 0xffffffec
   15db8:	mov	r3, #0
   15dbc:	str	r3, [fp, #-24]	; 0xffffffe8
   15dc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15dc4:	str	r3, [fp, #-8]
   15dc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15dcc:	mov	r2, #0
   15dd0:	mov	r3, #0
   15dd4:	strd	r2, [r1]
   15dd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15ddc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15de0:	cmp	r2, r3
   15de4:	bne	15df0 <_start@@Base+0x17d0>
   15de8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15dec:	b	15e58 <_start@@Base+0x1838>
   15df0:	sub	r2, fp, #24
   15df4:	sub	r3, fp, #20
   15df8:	str	r3, [sp]
   15dfc:	mov	r3, r2
   15e00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15e04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15e08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e0c:	bl	3c680 <flatcc_json_parser_integer@@Base>
   15e10:	str	r0, [fp, #-36]	; 0xffffffdc
   15e14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15e18:	ldr	r3, [fp, #-8]
   15e1c:	cmp	r2, r3
   15e20:	beq	15e54 <_start@@Base+0x1834>
   15e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e28:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15e2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e30:	str	r1, [sp, #8]
   15e34:	strd	r2, [sp]
   15e38:	mov	r3, r0
   15e3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15e40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e48:	bl	156c4 <_start@@Base+0x10a4>
   15e4c:	mov	r3, r0
   15e50:	b	15e58 <_start@@Base+0x1838>
   15e54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e58:	mov	r0, r3
   15e5c:	sub	sp, fp, #4
   15e60:	pop	{fp, pc}
   15e64:	push	{fp, lr}
   15e68:	add	fp, sp, #4
   15e6c:	sub	sp, sp, #56	; 0x38
   15e70:	str	r0, [fp, #-32]	; 0xffffffe0
   15e74:	str	r1, [fp, #-36]	; 0xffffffdc
   15e78:	str	r2, [fp, #-40]	; 0xffffffd8
   15e7c:	str	r3, [fp, #-44]	; 0xffffffd4
   15e80:	mov	r2, #0
   15e84:	mov	r3, #0
   15e88:	strd	r2, [fp, #-20]	; 0xffffffec
   15e8c:	mov	r3, #0
   15e90:	str	r3, [fp, #-24]	; 0xffffffe8
   15e94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e98:	str	r3, [fp, #-8]
   15e9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15ea0:	mov	r2, #0
   15ea4:	str	r2, [r3]
   15ea8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15eac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15eb0:	cmp	r2, r3
   15eb4:	bne	15ec0 <_start@@Base+0x18a0>
   15eb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ebc:	b	15f28 <_start@@Base+0x1908>
   15ec0:	sub	r2, fp, #24
   15ec4:	sub	r3, fp, #20
   15ec8:	str	r3, [sp]
   15ecc:	mov	r3, r2
   15ed0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15ed4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15ed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15edc:	bl	3c680 <flatcc_json_parser_integer@@Base>
   15ee0:	str	r0, [fp, #-36]	; 0xffffffdc
   15ee4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15ee8:	ldr	r3, [fp, #-8]
   15eec:	cmp	r2, r3
   15ef0:	beq	15f24 <_start@@Base+0x1904>
   15ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ef8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15efc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f00:	str	r1, [sp, #8]
   15f04:	strd	r2, [sp]
   15f08:	mov	r3, r0
   15f0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15f10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15f14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f18:	bl	157a0 <_start@@Base+0x1180>
   15f1c:	mov	r3, r0
   15f20:	b	15f28 <_start@@Base+0x1908>
   15f24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f28:	mov	r0, r3
   15f2c:	sub	sp, fp, #4
   15f30:	pop	{fp, pc}
   15f34:	push	{fp, lr}
   15f38:	add	fp, sp, #4
   15f3c:	sub	sp, sp, #56	; 0x38
   15f40:	str	r0, [fp, #-32]	; 0xffffffe0
   15f44:	str	r1, [fp, #-36]	; 0xffffffdc
   15f48:	str	r2, [fp, #-40]	; 0xffffffd8
   15f4c:	str	r3, [fp, #-44]	; 0xffffffd4
   15f50:	mov	r2, #0
   15f54:	mov	r3, #0
   15f58:	strd	r2, [fp, #-20]	; 0xffffffec
   15f5c:	mov	r3, #0
   15f60:	str	r3, [fp, #-24]	; 0xffffffe8
   15f64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f68:	str	r3, [fp, #-8]
   15f6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f70:	mov	r2, #0
   15f74:	strh	r2, [r3]
   15f78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15f7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f80:	cmp	r2, r3
   15f84:	bne	15f90 <_start@@Base+0x1970>
   15f88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f8c:	b	15ff8 <_start@@Base+0x19d8>
   15f90:	sub	r2, fp, #24
   15f94:	sub	r3, fp, #20
   15f98:	str	r3, [sp]
   15f9c:	mov	r3, r2
   15fa0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15fa4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fac:	bl	3c680 <flatcc_json_parser_integer@@Base>
   15fb0:	str	r0, [fp, #-36]	; 0xffffffdc
   15fb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15fb8:	ldr	r3, [fp, #-8]
   15fbc:	cmp	r2, r3
   15fc0:	beq	15ff4 <_start@@Base+0x19d4>
   15fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fc8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15fcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15fd0:	str	r1, [sp, #8]
   15fd4:	strd	r2, [sp]
   15fd8:	mov	r3, r0
   15fdc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15fe0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fe4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fe8:	bl	15834 <_start@@Base+0x1214>
   15fec:	mov	r3, r0
   15ff0:	b	15ff8 <_start@@Base+0x19d8>
   15ff4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ff8:	mov	r0, r3
   15ffc:	sub	sp, fp, #4
   16000:	pop	{fp, pc}
   16004:	push	{fp, lr}
   16008:	add	fp, sp, #4
   1600c:	sub	sp, sp, #56	; 0x38
   16010:	str	r0, [fp, #-32]	; 0xffffffe0
   16014:	str	r1, [fp, #-36]	; 0xffffffdc
   16018:	str	r2, [fp, #-40]	; 0xffffffd8
   1601c:	str	r3, [fp, #-44]	; 0xffffffd4
   16020:	mov	r2, #0
   16024:	mov	r3, #0
   16028:	strd	r2, [fp, #-20]	; 0xffffffec
   1602c:	mov	r3, #0
   16030:	str	r3, [fp, #-24]	; 0xffffffe8
   16034:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16038:	str	r3, [fp, #-8]
   1603c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16040:	mov	r2, #0
   16044:	strb	r2, [r3]
   16048:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1604c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16050:	cmp	r2, r3
   16054:	bne	16060 <_start@@Base+0x1a40>
   16058:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1605c:	b	160c8 <_start@@Base+0x1aa8>
   16060:	sub	r2, fp, #24
   16064:	sub	r3, fp, #20
   16068:	str	r3, [sp]
   1606c:	mov	r3, r2
   16070:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16074:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16078:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1607c:	bl	3c680 <flatcc_json_parser_integer@@Base>
   16080:	str	r0, [fp, #-36]	; 0xffffffdc
   16084:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16088:	ldr	r3, [fp, #-8]
   1608c:	cmp	r2, r3
   16090:	beq	160c4 <_start@@Base+0x1aa4>
   16094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16098:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1609c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160a0:	str	r1, [sp, #8]
   160a4:	strd	r2, [sp]
   160a8:	mov	r3, r0
   160ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   160b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   160b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160b8:	bl	158cc <_start@@Base+0x12ac>
   160bc:	mov	r3, r0
   160c0:	b	160c8 <_start@@Base+0x1aa8>
   160c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160c8:	mov	r0, r3
   160cc:	sub	sp, fp, #4
   160d0:	pop	{fp, pc}
   160d4:	push	{fp, lr}
   160d8:	add	fp, sp, #4
   160dc:	sub	sp, sp, #56	; 0x38
   160e0:	str	r0, [fp, #-32]	; 0xffffffe0
   160e4:	str	r1, [fp, #-36]	; 0xffffffdc
   160e8:	str	r2, [fp, #-40]	; 0xffffffd8
   160ec:	str	r3, [fp, #-44]	; 0xffffffd4
   160f0:	mov	r2, #0
   160f4:	mov	r3, #0
   160f8:	strd	r2, [fp, #-20]	; 0xffffffec
   160fc:	mov	r3, #0
   16100:	str	r3, [fp, #-24]	; 0xffffffe8
   16104:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16108:	str	r3, [fp, #-8]
   1610c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16110:	mov	r2, #0
   16114:	mov	r3, #0
   16118:	strd	r2, [r1]
   1611c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16120:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16124:	cmp	r2, r3
   16128:	bne	16134 <_start@@Base+0x1b14>
   1612c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16130:	b	1619c <_start@@Base+0x1b7c>
   16134:	sub	r2, fp, #24
   16138:	sub	r3, fp, #20
   1613c:	str	r3, [sp]
   16140:	mov	r3, r2
   16144:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16148:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1614c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16150:	bl	3c680 <flatcc_json_parser_integer@@Base>
   16154:	str	r0, [fp, #-36]	; 0xffffffdc
   16158:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1615c:	ldr	r3, [fp, #-8]
   16160:	cmp	r2, r3
   16164:	beq	16198 <_start@@Base+0x1b78>
   16168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1616c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16170:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16174:	str	r1, [sp, #8]
   16178:	strd	r2, [sp]
   1617c:	mov	r3, r0
   16180:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16184:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16188:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1618c:	bl	15958 <_start@@Base+0x1338>
   16190:	mov	r3, r0
   16194:	b	1619c <_start@@Base+0x1b7c>
   16198:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1619c:	mov	r0, r3
   161a0:	sub	sp, fp, #4
   161a4:	pop	{fp, pc}
   161a8:	push	{fp, lr}
   161ac:	add	fp, sp, #4
   161b0:	sub	sp, sp, #56	; 0x38
   161b4:	str	r0, [fp, #-32]	; 0xffffffe0
   161b8:	str	r1, [fp, #-36]	; 0xffffffdc
   161bc:	str	r2, [fp, #-40]	; 0xffffffd8
   161c0:	str	r3, [fp, #-44]	; 0xffffffd4
   161c4:	mov	r2, #0
   161c8:	mov	r3, #0
   161cc:	strd	r2, [fp, #-20]	; 0xffffffec
   161d0:	mov	r3, #0
   161d4:	str	r3, [fp, #-24]	; 0xffffffe8
   161d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   161dc:	str	r3, [fp, #-8]
   161e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   161e4:	mov	r2, #0
   161e8:	str	r2, [r3]
   161ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   161f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   161f4:	cmp	r2, r3
   161f8:	bne	16204 <_start@@Base+0x1be4>
   161fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16200:	b	1626c <_start@@Base+0x1c4c>
   16204:	sub	r2, fp, #24
   16208:	sub	r3, fp, #20
   1620c:	str	r3, [sp]
   16210:	mov	r3, r2
   16214:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16218:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1621c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16220:	bl	3c680 <flatcc_json_parser_integer@@Base>
   16224:	str	r0, [fp, #-36]	; 0xffffffdc
   16228:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1622c:	ldr	r3, [fp, #-8]
   16230:	cmp	r2, r3
   16234:	beq	16268 <_start@@Base+0x1c48>
   16238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1623c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16240:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16244:	str	r1, [sp, #8]
   16248:	strd	r2, [sp]
   1624c:	mov	r3, r0
   16250:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16254:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16258:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1625c:	bl	15a0c <_start@@Base+0x13ec>
   16260:	mov	r3, r0
   16264:	b	1626c <_start@@Base+0x1c4c>
   16268:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1626c:	mov	r0, r3
   16270:	sub	sp, fp, #4
   16274:	pop	{fp, pc}
   16278:	push	{fp, lr}
   1627c:	add	fp, sp, #4
   16280:	sub	sp, sp, #56	; 0x38
   16284:	str	r0, [fp, #-32]	; 0xffffffe0
   16288:	str	r1, [fp, #-36]	; 0xffffffdc
   1628c:	str	r2, [fp, #-40]	; 0xffffffd8
   16290:	str	r3, [fp, #-44]	; 0xffffffd4
   16294:	mov	r2, #0
   16298:	mov	r3, #0
   1629c:	strd	r2, [fp, #-20]	; 0xffffffec
   162a0:	mov	r3, #0
   162a4:	str	r3, [fp, #-24]	; 0xffffffe8
   162a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   162ac:	str	r3, [fp, #-8]
   162b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162b4:	mov	r2, #0
   162b8:	strh	r2, [r3]
   162bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   162c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162c4:	cmp	r2, r3
   162c8:	bne	162d4 <_start@@Base+0x1cb4>
   162cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   162d0:	b	1633c <_start@@Base+0x1d1c>
   162d4:	sub	r2, fp, #24
   162d8:	sub	r3, fp, #20
   162dc:	str	r3, [sp]
   162e0:	mov	r3, r2
   162e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   162e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   162ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   162f0:	bl	3c680 <flatcc_json_parser_integer@@Base>
   162f4:	str	r0, [fp, #-36]	; 0xffffffdc
   162f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   162fc:	ldr	r3, [fp, #-8]
   16300:	cmp	r2, r3
   16304:	beq	16338 <_start@@Base+0x1d18>
   16308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1630c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16310:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16314:	str	r1, [sp, #8]
   16318:	strd	r2, [sp]
   1631c:	mov	r3, r0
   16320:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16324:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16328:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1632c:	bl	15ac8 <_start@@Base+0x14a8>
   16330:	mov	r3, r0
   16334:	b	1633c <_start@@Base+0x1d1c>
   16338:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1633c:	mov	r0, r3
   16340:	sub	sp, fp, #4
   16344:	pop	{fp, pc}
   16348:	push	{fp, lr}
   1634c:	add	fp, sp, #4
   16350:	sub	sp, sp, #56	; 0x38
   16354:	str	r0, [fp, #-32]	; 0xffffffe0
   16358:	str	r1, [fp, #-36]	; 0xffffffdc
   1635c:	str	r2, [fp, #-40]	; 0xffffffd8
   16360:	str	r3, [fp, #-44]	; 0xffffffd4
   16364:	mov	r2, #0
   16368:	mov	r3, #0
   1636c:	strd	r2, [fp, #-20]	; 0xffffffec
   16370:	mov	r3, #0
   16374:	str	r3, [fp, #-24]	; 0xffffffe8
   16378:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1637c:	str	r3, [fp, #-8]
   16380:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16384:	mov	r2, #0
   16388:	strb	r2, [r3]
   1638c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16390:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16394:	cmp	r2, r3
   16398:	bne	163a4 <_start@@Base+0x1d84>
   1639c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   163a0:	b	1640c <_start@@Base+0x1dec>
   163a4:	sub	r2, fp, #24
   163a8:	sub	r3, fp, #20
   163ac:	str	r3, [sp]
   163b0:	mov	r3, r2
   163b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   163b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   163bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163c0:	bl	3c680 <flatcc_json_parser_integer@@Base>
   163c4:	str	r0, [fp, #-36]	; 0xffffffdc
   163c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   163cc:	ldr	r3, [fp, #-8]
   163d0:	cmp	r2, r3
   163d4:	beq	16408 <_start@@Base+0x1de8>
   163d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   163e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   163e4:	str	r1, [sp, #8]
   163e8:	strd	r2, [sp]
   163ec:	mov	r3, r0
   163f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   163f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   163f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163fc:	bl	15b8c <_start@@Base+0x156c>
   16400:	mov	r3, r0
   16404:	b	1640c <_start@@Base+0x1dec>
   16408:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1640c:	mov	r0, r3
   16410:	sub	sp, fp, #4
   16414:	pop	{fp, pc}
   16418:	push	{fp, lr}
   1641c:	add	fp, sp, #4
   16420:	sub	sp, sp, #24
   16424:	str	r0, [fp, #-16]
   16428:	str	r1, [fp, #-20]	; 0xffffffec
   1642c:	str	r2, [fp, #-24]	; 0xffffffe8
   16430:	str	r3, [fp, #-28]	; 0xffffffe4
   16434:	ldr	r3, [fp, #-20]	; 0xffffffec
   16438:	str	r3, [fp, #-8]
   1643c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16440:	ldr	r3, [fp, #-20]	; 0xffffffec
   16444:	sub	r3, r2, r3
   16448:	cmp	r3, #3
   1644c:	ble	1648c <_start@@Base+0x1e6c>
   16450:	mov	r2, #4
   16454:	ldr	r3, [pc, #200]	; 16524 <_start@@Base+0x1f04>
   16458:	add	r3, pc, r3
   1645c:	mov	r1, r3
   16460:	ldr	r0, [fp, #-20]	; 0xffffffec
   16464:	bl	14550 <memcmp@plt>
   16468:	mov	r3, r0
   1646c:	cmp	r3, #0
   16470:	bne	1648c <_start@@Base+0x1e6c>
   16474:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16478:	mov	r2, #1
   1647c:	strb	r2, [r3]
   16480:	ldr	r3, [fp, #-8]
   16484:	add	r3, r3, #4
   16488:	b	16518 <_start@@Base+0x1ef8>
   1648c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16490:	ldr	r3, [fp, #-20]	; 0xffffffec
   16494:	sub	r3, r2, r3
   16498:	cmp	r3, #4
   1649c:	ble	164dc <_start@@Base+0x1ebc>
   164a0:	mov	r2, #5
   164a4:	ldr	r3, [pc, #124]	; 16528 <_start@@Base+0x1f08>
   164a8:	add	r3, pc, r3
   164ac:	mov	r1, r3
   164b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   164b4:	bl	14550 <memcmp@plt>
   164b8:	mov	r3, r0
   164bc:	cmp	r3, #0
   164c0:	bne	164dc <_start@@Base+0x1ebc>
   164c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   164c8:	mov	r2, #0
   164cc:	strb	r2, [r3]
   164d0:	ldr	r3, [fp, #-8]
   164d4:	add	r3, r3, #5
   164d8:	b	16518 <_start@@Base+0x1ef8>
   164dc:	sub	r3, fp, #9
   164e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   164e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   164e8:	ldr	r0, [fp, #-16]
   164ec:	bl	16004 <_start@@Base+0x19e4>
   164f0:	str	r0, [fp, #-20]	; 0xffffffec
   164f4:	ldrb	r3, [fp, #-9]
   164f8:	cmp	r3, #0
   164fc:	movne	r3, #1
   16500:	moveq	r3, #0
   16504:	uxtb	r3, r3
   16508:	mov	r2, r3
   1650c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16510:	strb	r2, [r3]
   16514:	ldr	r3, [fp, #-20]	; 0xffffffec
   16518:	mov	r0, r3
   1651c:	sub	sp, fp, #4
   16520:	pop	{fp, pc}
   16524:			; <UNDEFINED> instruction: 0x000362b0
   16528:	andeq	r6, r3, r8, ror #4
   1652c:	push	{r4, fp, lr}
   16530:	add	fp, sp, #8
   16534:	sub	sp, sp, #68	; 0x44
   16538:	str	r0, [fp, #-48]	; 0xffffffd0
   1653c:	str	r1, [fp, #-52]	; 0xffffffcc
   16540:	str	r2, [fp, #-56]	; 0xffffffc8
   16544:	str	r3, [fp, #-60]	; 0xffffffc4
   16548:	mov	r2, #0
   1654c:	mov	r3, #0
   16550:	strd	r2, [fp, #-28]	; 0xffffffe4
   16554:	ldr	r1, [fp, #4]
   16558:	mov	r2, #0
   1655c:	mov	r3, #0
   16560:	strd	r2, [r1]
   16564:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16568:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1656c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16570:	bl	15068 <_start@@Base+0xa48>
   16574:	str	r0, [fp, #-52]	; 0xffffffcc
   16578:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1657c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16580:	cmp	r2, r3
   16584:	bne	16590 <_start@@Base+0x1f70>
   16588:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1658c:	b	166b0 <_start@@Base+0x2090>
   16590:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16594:	str	r3, [fp, #-16]
   16598:	ldr	r3, [fp, #-16]
   1659c:	ldr	r4, [r3]
   165a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   165a4:	str	r3, [fp, #-20]	; 0xffffffec
   165a8:	sub	r2, fp, #40	; 0x28
   165ac:	sub	r3, fp, #44	; 0x2c
   165b0:	str	r3, [sp, #4]
   165b4:	sub	r3, fp, #36	; 0x24
   165b8:	str	r3, [sp]
   165bc:	mov	r3, r2
   165c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   165c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   165c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   165cc:	blx	r4
   165d0:	str	r0, [fp, #-52]	; 0xffffffcc
   165d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   165d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   165dc:	cmp	r2, r3
   165e0:	bne	165ec <_start@@Base+0x1fcc>
   165e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   165e8:	b	166b0 <_start@@Base+0x2090>
   165ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   165f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   165f4:	cmp	r2, r3
   165f8:	bne	16618 <_start@@Base+0x1ff8>
   165fc:	ldr	r3, [fp, #-16]
   16600:	add	r3, r3, #4
   16604:	str	r3, [fp, #-16]
   16608:	ldr	r3, [fp, #-16]
   1660c:	ldr	r3, [r3]
   16610:	cmp	r3, #0
   16614:	bne	16598 <_start@@Base+0x1f78>
   16618:	ldr	r2, [fp, #-20]	; 0xffffffec
   1661c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16620:	cmp	r2, r3
   16624:	bne	16644 <_start@@Base+0x2024>
   16628:	mov	r3, #23
   1662c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16630:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16634:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16638:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1663c:	mov	r3, r0
   16640:	b	166b0 <_start@@Base+0x2090>
   16644:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16648:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1664c:	sub	r1, fp, #28
   16650:	str	r1, [sp, #8]
   16654:	strd	r2, [sp]
   16658:	mov	r3, r0
   1665c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16660:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16664:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16668:	bl	156c4 <_start@@Base+0x10a4>
   1666c:	mov	r2, r0
   16670:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16674:	cmp	r2, r3
   16678:	bne	16684 <_start@@Base+0x2064>
   1667c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16680:	b	166b0 <_start@@Base+0x2090>
   16684:	ldr	r3, [fp, #4]
   16688:	ldrd	r0, [r3]
   1668c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16690:	adds	r2, r2, r0
   16694:	adc	r3, r3, r1
   16698:	ldr	r1, [fp, #4]
   1669c:	strd	r2, [r1]
   166a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   166a4:	cmp	r3, #0
   166a8:	bne	16590 <_start@@Base+0x1f70>
   166ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   166b0:	mov	r0, r3
   166b4:	sub	sp, fp, #8
   166b8:	pop	{r4, fp, pc}
   166bc:	push	{r4, fp, lr}
   166c0:	add	fp, sp, #8
   166c4:	sub	sp, sp, #68	; 0x44
   166c8:	str	r0, [fp, #-48]	; 0xffffffd0
   166cc:	str	r1, [fp, #-52]	; 0xffffffcc
   166d0:	str	r2, [fp, #-56]	; 0xffffffc8
   166d4:	str	r3, [fp, #-60]	; 0xffffffc4
   166d8:	mov	r3, #0
   166dc:	str	r3, [fp, #-24]	; 0xffffffe8
   166e0:	ldr	r3, [fp, #4]
   166e4:	mov	r2, #0
   166e8:	str	r2, [r3]
   166ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   166f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   166f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   166f8:	bl	15068 <_start@@Base+0xa48>
   166fc:	str	r0, [fp, #-52]	; 0xffffffcc
   16700:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16704:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16708:	cmp	r2, r3
   1670c:	bne	16718 <_start@@Base+0x20f8>
   16710:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16714:	b	16834 <_start@@Base+0x2214>
   16718:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1671c:	str	r3, [fp, #-16]
   16720:	ldr	r3, [fp, #-16]
   16724:	ldr	r4, [r3]
   16728:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1672c:	str	r3, [fp, #-20]	; 0xffffffec
   16730:	sub	r2, fp, #40	; 0x28
   16734:	sub	r3, fp, #44	; 0x2c
   16738:	str	r3, [sp, #4]
   1673c:	sub	r3, fp, #36	; 0x24
   16740:	str	r3, [sp]
   16744:	mov	r3, r2
   16748:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1674c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16750:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16754:	blx	r4
   16758:	str	r0, [fp, #-52]	; 0xffffffcc
   1675c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16760:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16764:	cmp	r2, r3
   16768:	bne	16774 <_start@@Base+0x2154>
   1676c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16770:	b	16834 <_start@@Base+0x2214>
   16774:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16778:	ldr	r3, [fp, #-20]	; 0xffffffec
   1677c:	cmp	r2, r3
   16780:	bne	167a0 <_start@@Base+0x2180>
   16784:	ldr	r3, [fp, #-16]
   16788:	add	r3, r3, #4
   1678c:	str	r3, [fp, #-16]
   16790:	ldr	r3, [fp, #-16]
   16794:	ldr	r3, [r3]
   16798:	cmp	r3, #0
   1679c:	bne	16720 <_start@@Base+0x2100>
   167a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   167a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   167a8:	cmp	r2, r3
   167ac:	bne	167cc <_start@@Base+0x21ac>
   167b0:	mov	r3, #23
   167b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   167b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   167bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   167c0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   167c4:	mov	r3, r0
   167c8:	b	16834 <_start@@Base+0x2214>
   167cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   167d0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   167d4:	sub	r1, fp, #24
   167d8:	str	r1, [sp, #8]
   167dc:	strd	r2, [sp]
   167e0:	mov	r3, r0
   167e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   167e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   167ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   167f0:	bl	157a0 <_start@@Base+0x1180>
   167f4:	mov	r2, r0
   167f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   167fc:	cmp	r2, r3
   16800:	bne	1680c <_start@@Base+0x21ec>
   16804:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16808:	b	16834 <_start@@Base+0x2214>
   1680c:	ldr	r3, [fp, #4]
   16810:	ldr	r2, [r3]
   16814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16818:	add	r2, r2, r3
   1681c:	ldr	r3, [fp, #4]
   16820:	str	r2, [r3]
   16824:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16828:	cmp	r3, #0
   1682c:	bne	16718 <_start@@Base+0x20f8>
   16830:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16834:	mov	r0, r3
   16838:	sub	sp, fp, #8
   1683c:	pop	{r4, fp, pc}
   16840:	push	{r4, fp, lr}
   16844:	add	fp, sp, #8
   16848:	sub	sp, sp, #68	; 0x44
   1684c:	str	r0, [fp, #-48]	; 0xffffffd0
   16850:	str	r1, [fp, #-52]	; 0xffffffcc
   16854:	str	r2, [fp, #-56]	; 0xffffffc8
   16858:	str	r3, [fp, #-60]	; 0xffffffc4
   1685c:	mov	r3, #0
   16860:	strh	r3, [fp, #-22]	; 0xffffffea
   16864:	ldr	r3, [fp, #4]
   16868:	mov	r2, #0
   1686c:	strh	r2, [r3]
   16870:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16874:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16878:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1687c:	bl	15068 <_start@@Base+0xa48>
   16880:	str	r0, [fp, #-52]	; 0xffffffcc
   16884:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16888:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1688c:	cmp	r2, r3
   16890:	bne	1689c <_start@@Base+0x227c>
   16894:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16898:	b	169bc <_start@@Base+0x239c>
   1689c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   168a0:	str	r3, [fp, #-16]
   168a4:	ldr	r3, [fp, #-16]
   168a8:	ldr	r4, [r3]
   168ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   168b0:	str	r3, [fp, #-20]	; 0xffffffec
   168b4:	sub	r2, fp, #40	; 0x28
   168b8:	sub	r3, fp, #44	; 0x2c
   168bc:	str	r3, [sp, #4]
   168c0:	sub	r3, fp, #36	; 0x24
   168c4:	str	r3, [sp]
   168c8:	mov	r3, r2
   168cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   168d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   168d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   168d8:	blx	r4
   168dc:	str	r0, [fp, #-52]	; 0xffffffcc
   168e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   168e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   168e8:	cmp	r2, r3
   168ec:	bne	168f8 <_start@@Base+0x22d8>
   168f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   168f4:	b	169bc <_start@@Base+0x239c>
   168f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   168fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   16900:	cmp	r2, r3
   16904:	bne	16924 <_start@@Base+0x2304>
   16908:	ldr	r3, [fp, #-16]
   1690c:	add	r3, r3, #4
   16910:	str	r3, [fp, #-16]
   16914:	ldr	r3, [fp, #-16]
   16918:	ldr	r3, [r3]
   1691c:	cmp	r3, #0
   16920:	bne	168a4 <_start@@Base+0x2284>
   16924:	ldr	r2, [fp, #-20]	; 0xffffffec
   16928:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1692c:	cmp	r2, r3
   16930:	bne	16950 <_start@@Base+0x2330>
   16934:	mov	r3, #23
   16938:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1693c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16940:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16944:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   16948:	mov	r3, r0
   1694c:	b	169bc <_start@@Base+0x239c>
   16950:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16954:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16958:	sub	r1, fp, #22
   1695c:	str	r1, [sp, #8]
   16960:	strd	r2, [sp]
   16964:	mov	r3, r0
   16968:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1696c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16970:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16974:	bl	15834 <_start@@Base+0x1214>
   16978:	mov	r2, r0
   1697c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16980:	cmp	r2, r3
   16984:	bne	16990 <_start@@Base+0x2370>
   16988:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1698c:	b	169bc <_start@@Base+0x239c>
   16990:	ldr	r3, [fp, #4]
   16994:	ldrh	r2, [r3]
   16998:	ldrh	r3, [fp, #-22]	; 0xffffffea
   1699c:	add	r3, r2, r3
   169a0:	uxth	r2, r3
   169a4:	ldr	r3, [fp, #4]
   169a8:	strh	r2, [r3]
   169ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   169b0:	cmp	r3, #0
   169b4:	bne	1689c <_start@@Base+0x227c>
   169b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   169bc:	mov	r0, r3
   169c0:	sub	sp, fp, #8
   169c4:	pop	{r4, fp, pc}
   169c8:	push	{r4, fp, lr}
   169cc:	add	fp, sp, #8
   169d0:	sub	sp, sp, #68	; 0x44
   169d4:	str	r0, [fp, #-48]	; 0xffffffd0
   169d8:	str	r1, [fp, #-52]	; 0xffffffcc
   169dc:	str	r2, [fp, #-56]	; 0xffffffc8
   169e0:	str	r3, [fp, #-60]	; 0xffffffc4
   169e4:	mov	r3, #0
   169e8:	strb	r3, [fp, #-21]	; 0xffffffeb
   169ec:	ldr	r3, [fp, #4]
   169f0:	mov	r2, #0
   169f4:	strb	r2, [r3]
   169f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   169fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16a00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16a04:	bl	15068 <_start@@Base+0xa48>
   16a08:	str	r0, [fp, #-52]	; 0xffffffcc
   16a0c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16a10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a14:	cmp	r2, r3
   16a18:	bne	16a24 <_start@@Base+0x2404>
   16a1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a20:	b	16b44 <_start@@Base+0x2524>
   16a24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16a28:	str	r3, [fp, #-16]
   16a2c:	ldr	r3, [fp, #-16]
   16a30:	ldr	r4, [r3]
   16a34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a38:	str	r3, [fp, #-20]	; 0xffffffec
   16a3c:	sub	r2, fp, #40	; 0x28
   16a40:	sub	r3, fp, #44	; 0x2c
   16a44:	str	r3, [sp, #4]
   16a48:	sub	r3, fp, #36	; 0x24
   16a4c:	str	r3, [sp]
   16a50:	mov	r3, r2
   16a54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16a58:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16a60:	blx	r4
   16a64:	str	r0, [fp, #-52]	; 0xffffffcc
   16a68:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16a6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a70:	cmp	r2, r3
   16a74:	bne	16a80 <_start@@Base+0x2460>
   16a78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a7c:	b	16b44 <_start@@Base+0x2524>
   16a80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16a84:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a88:	cmp	r2, r3
   16a8c:	bne	16aac <_start@@Base+0x248c>
   16a90:	ldr	r3, [fp, #-16]
   16a94:	add	r3, r3, #4
   16a98:	str	r3, [fp, #-16]
   16a9c:	ldr	r3, [fp, #-16]
   16aa0:	ldr	r3, [r3]
   16aa4:	cmp	r3, #0
   16aa8:	bne	16a2c <_start@@Base+0x240c>
   16aac:	ldr	r2, [fp, #-20]	; 0xffffffec
   16ab0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16ab4:	cmp	r2, r3
   16ab8:	bne	16ad8 <_start@@Base+0x24b8>
   16abc:	mov	r3, #23
   16ac0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ac4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16ac8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16acc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   16ad0:	mov	r3, r0
   16ad4:	b	16b44 <_start@@Base+0x2524>
   16ad8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16adc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16ae0:	sub	r1, fp, #21
   16ae4:	str	r1, [sp, #8]
   16ae8:	strd	r2, [sp]
   16aec:	mov	r3, r0
   16af0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16af4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16af8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16afc:	bl	158cc <_start@@Base+0x12ac>
   16b00:	mov	r2, r0
   16b04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16b08:	cmp	r2, r3
   16b0c:	bne	16b18 <_start@@Base+0x24f8>
   16b10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16b14:	b	16b44 <_start@@Base+0x2524>
   16b18:	ldr	r3, [fp, #4]
   16b1c:	ldrb	r2, [r3]
   16b20:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   16b24:	add	r3, r2, r3
   16b28:	uxtb	r2, r3
   16b2c:	ldr	r3, [fp, #4]
   16b30:	strb	r2, [r3]
   16b34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b38:	cmp	r3, #0
   16b3c:	bne	16a24 <_start@@Base+0x2404>
   16b40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16b44:	mov	r0, r3
   16b48:	sub	sp, fp, #8
   16b4c:	pop	{r4, fp, pc}
   16b50:	push	{r4, fp, lr}
   16b54:	add	fp, sp, #8
   16b58:	sub	sp, sp, #68	; 0x44
   16b5c:	str	r0, [fp, #-48]	; 0xffffffd0
   16b60:	str	r1, [fp, #-52]	; 0xffffffcc
   16b64:	str	r2, [fp, #-56]	; 0xffffffc8
   16b68:	str	r3, [fp, #-60]	; 0xffffffc4
   16b6c:	mov	r2, #0
   16b70:	mov	r3, #0
   16b74:	strd	r2, [fp, #-28]	; 0xffffffe4
   16b78:	ldr	r1, [fp, #4]
   16b7c:	mov	r2, #0
   16b80:	mov	r3, #0
   16b84:	strd	r2, [r1]
   16b88:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16b8c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16b90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16b94:	bl	15068 <_start@@Base+0xa48>
   16b98:	str	r0, [fp, #-52]	; 0xffffffcc
   16b9c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16ba0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ba4:	cmp	r2, r3
   16ba8:	bne	16bb4 <_start@@Base+0x2594>
   16bac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16bb0:	b	16cd4 <_start@@Base+0x26b4>
   16bb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16bb8:	str	r3, [fp, #-16]
   16bbc:	ldr	r3, [fp, #-16]
   16bc0:	ldr	r4, [r3]
   16bc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16bc8:	str	r3, [fp, #-20]	; 0xffffffec
   16bcc:	sub	r2, fp, #40	; 0x28
   16bd0:	sub	r3, fp, #44	; 0x2c
   16bd4:	str	r3, [sp, #4]
   16bd8:	sub	r3, fp, #36	; 0x24
   16bdc:	str	r3, [sp]
   16be0:	mov	r3, r2
   16be4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16be8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16bec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16bf0:	blx	r4
   16bf4:	str	r0, [fp, #-52]	; 0xffffffcc
   16bf8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16bfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16c00:	cmp	r2, r3
   16c04:	bne	16c10 <_start@@Base+0x25f0>
   16c08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16c0c:	b	16cd4 <_start@@Base+0x26b4>
   16c10:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16c14:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c18:	cmp	r2, r3
   16c1c:	bne	16c3c <_start@@Base+0x261c>
   16c20:	ldr	r3, [fp, #-16]
   16c24:	add	r3, r3, #4
   16c28:	str	r3, [fp, #-16]
   16c2c:	ldr	r3, [fp, #-16]
   16c30:	ldr	r3, [r3]
   16c34:	cmp	r3, #0
   16c38:	bne	16bbc <_start@@Base+0x259c>
   16c3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16c40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16c44:	cmp	r2, r3
   16c48:	bne	16c68 <_start@@Base+0x2648>
   16c4c:	mov	r3, #23
   16c50:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16c58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16c5c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   16c60:	mov	r3, r0
   16c64:	b	16cd4 <_start@@Base+0x26b4>
   16c68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c6c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16c70:	sub	r1, fp, #28
   16c74:	str	r1, [sp, #8]
   16c78:	strd	r2, [sp]
   16c7c:	mov	r3, r0
   16c80:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16c88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16c8c:	bl	15958 <_start@@Base+0x1338>
   16c90:	mov	r2, r0
   16c94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16c98:	cmp	r2, r3
   16c9c:	bne	16ca8 <_start@@Base+0x2688>
   16ca0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ca4:	b	16cd4 <_start@@Base+0x26b4>
   16ca8:	ldr	r3, [fp, #4]
   16cac:	ldrd	r0, [r3]
   16cb0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16cb4:	adds	r2, r2, r0
   16cb8:	adc	r3, r3, r1
   16cbc:	ldr	r1, [fp, #4]
   16cc0:	strd	r2, [r1]
   16cc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16cc8:	cmp	r3, #0
   16ccc:	bne	16bb4 <_start@@Base+0x2594>
   16cd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16cd4:	mov	r0, r3
   16cd8:	sub	sp, fp, #8
   16cdc:	pop	{r4, fp, pc}
   16ce0:	push	{r4, fp, lr}
   16ce4:	add	fp, sp, #8
   16ce8:	sub	sp, sp, #68	; 0x44
   16cec:	str	r0, [fp, #-48]	; 0xffffffd0
   16cf0:	str	r1, [fp, #-52]	; 0xffffffcc
   16cf4:	str	r2, [fp, #-56]	; 0xffffffc8
   16cf8:	str	r3, [fp, #-60]	; 0xffffffc4
   16cfc:	mov	r3, #0
   16d00:	str	r3, [fp, #-24]	; 0xffffffe8
   16d04:	ldr	r3, [fp, #4]
   16d08:	mov	r2, #0
   16d0c:	str	r2, [r3]
   16d10:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16d14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16d18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16d1c:	bl	15068 <_start@@Base+0xa48>
   16d20:	str	r0, [fp, #-52]	; 0xffffffcc
   16d24:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16d28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16d2c:	cmp	r2, r3
   16d30:	bne	16d3c <_start@@Base+0x271c>
   16d34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16d38:	b	16e58 <_start@@Base+0x2838>
   16d3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16d40:	str	r3, [fp, #-16]
   16d44:	ldr	r3, [fp, #-16]
   16d48:	ldr	r4, [r3]
   16d4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16d50:	str	r3, [fp, #-20]	; 0xffffffec
   16d54:	sub	r2, fp, #40	; 0x28
   16d58:	sub	r3, fp, #44	; 0x2c
   16d5c:	str	r3, [sp, #4]
   16d60:	sub	r3, fp, #36	; 0x24
   16d64:	str	r3, [sp]
   16d68:	mov	r3, r2
   16d6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16d70:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16d78:	blx	r4
   16d7c:	str	r0, [fp, #-52]	; 0xffffffcc
   16d80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16d84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16d88:	cmp	r2, r3
   16d8c:	bne	16d98 <_start@@Base+0x2778>
   16d90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16d94:	b	16e58 <_start@@Base+0x2838>
   16d98:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16da0:	cmp	r2, r3
   16da4:	bne	16dc4 <_start@@Base+0x27a4>
   16da8:	ldr	r3, [fp, #-16]
   16dac:	add	r3, r3, #4
   16db0:	str	r3, [fp, #-16]
   16db4:	ldr	r3, [fp, #-16]
   16db8:	ldr	r3, [r3]
   16dbc:	cmp	r3, #0
   16dc0:	bne	16d44 <_start@@Base+0x2724>
   16dc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   16dc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16dcc:	cmp	r2, r3
   16dd0:	bne	16df0 <_start@@Base+0x27d0>
   16dd4:	mov	r3, #23
   16dd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ddc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16de0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16de4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   16de8:	mov	r3, r0
   16dec:	b	16e58 <_start@@Base+0x2838>
   16df0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16df4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16df8:	sub	r1, fp, #24
   16dfc:	str	r1, [sp, #8]
   16e00:	strd	r2, [sp]
   16e04:	mov	r3, r0
   16e08:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16e0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16e10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16e14:	bl	15a0c <_start@@Base+0x13ec>
   16e18:	mov	r2, r0
   16e1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16e20:	cmp	r2, r3
   16e24:	bne	16e30 <_start@@Base+0x2810>
   16e28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16e2c:	b	16e58 <_start@@Base+0x2838>
   16e30:	ldr	r3, [fp, #4]
   16e34:	ldr	r2, [r3]
   16e38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e3c:	add	r2, r2, r3
   16e40:	ldr	r3, [fp, #4]
   16e44:	str	r2, [r3]
   16e48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16e4c:	cmp	r3, #0
   16e50:	bne	16d3c <_start@@Base+0x271c>
   16e54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16e58:	mov	r0, r3
   16e5c:	sub	sp, fp, #8
   16e60:	pop	{r4, fp, pc}
   16e64:	push	{r4, fp, lr}
   16e68:	add	fp, sp, #8
   16e6c:	sub	sp, sp, #68	; 0x44
   16e70:	str	r0, [fp, #-48]	; 0xffffffd0
   16e74:	str	r1, [fp, #-52]	; 0xffffffcc
   16e78:	str	r2, [fp, #-56]	; 0xffffffc8
   16e7c:	str	r3, [fp, #-60]	; 0xffffffc4
   16e80:	mov	r3, #0
   16e84:	strh	r3, [fp, #-22]	; 0xffffffea
   16e88:	ldr	r3, [fp, #4]
   16e8c:	mov	r2, #0
   16e90:	strh	r2, [r3]
   16e94:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16e98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16e9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16ea0:	bl	15068 <_start@@Base+0xa48>
   16ea4:	str	r0, [fp, #-52]	; 0xffffffcc
   16ea8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16eac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16eb0:	cmp	r2, r3
   16eb4:	bne	16ec0 <_start@@Base+0x28a0>
   16eb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16ebc:	b	16fec <_start@@Base+0x29cc>
   16ec0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16ec4:	str	r3, [fp, #-16]
   16ec8:	ldr	r3, [fp, #-16]
   16ecc:	ldr	r4, [r3]
   16ed0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16ed4:	str	r3, [fp, #-20]	; 0xffffffec
   16ed8:	sub	r2, fp, #40	; 0x28
   16edc:	sub	r3, fp, #44	; 0x2c
   16ee0:	str	r3, [sp, #4]
   16ee4:	sub	r3, fp, #36	; 0x24
   16ee8:	str	r3, [sp]
   16eec:	mov	r3, r2
   16ef0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ef4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ef8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16efc:	blx	r4
   16f00:	str	r0, [fp, #-52]	; 0xffffffcc
   16f04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16f0c:	cmp	r2, r3
   16f10:	bne	16f1c <_start@@Base+0x28fc>
   16f14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f18:	b	16fec <_start@@Base+0x29cc>
   16f1c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f20:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f24:	cmp	r2, r3
   16f28:	bne	16f48 <_start@@Base+0x2928>
   16f2c:	ldr	r3, [fp, #-16]
   16f30:	add	r3, r3, #4
   16f34:	str	r3, [fp, #-16]
   16f38:	ldr	r3, [fp, #-16]
   16f3c:	ldr	r3, [r3]
   16f40:	cmp	r3, #0
   16f44:	bne	16ec8 <_start@@Base+0x28a8>
   16f48:	ldr	r2, [fp, #-20]	; 0xffffffec
   16f4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f50:	cmp	r2, r3
   16f54:	bne	16f74 <_start@@Base+0x2954>
   16f58:	mov	r3, #23
   16f5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16f60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16f64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f68:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   16f6c:	mov	r3, r0
   16f70:	b	16fec <_start@@Base+0x29cc>
   16f74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16f78:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16f7c:	sub	r1, fp, #22
   16f80:	str	r1, [sp, #8]
   16f84:	strd	r2, [sp]
   16f88:	mov	r3, r0
   16f8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16f90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16f94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f98:	bl	15ac8 <_start@@Base+0x14a8>
   16f9c:	mov	r2, r0
   16fa0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16fa4:	cmp	r2, r3
   16fa8:	bne	16fb4 <_start@@Base+0x2994>
   16fac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16fb0:	b	16fec <_start@@Base+0x29cc>
   16fb4:	ldr	r3, [fp, #4]
   16fb8:	ldrsh	r3, [r3]
   16fbc:	uxth	r2, r3
   16fc0:	ldrsh	r3, [fp, #-22]	; 0xffffffea
   16fc4:	uxth	r3, r3
   16fc8:	add	r3, r2, r3
   16fcc:	uxth	r3, r3
   16fd0:	sxth	r2, r3
   16fd4:	ldr	r3, [fp, #4]
   16fd8:	strh	r2, [r3]
   16fdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16fe0:	cmp	r3, #0
   16fe4:	bne	16ec0 <_start@@Base+0x28a0>
   16fe8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16fec:	mov	r0, r3
   16ff0:	sub	sp, fp, #8
   16ff4:	pop	{r4, fp, pc}
   16ff8:	push	{r4, fp, lr}
   16ffc:	add	fp, sp, #8
   17000:	sub	sp, sp, #68	; 0x44
   17004:	str	r0, [fp, #-48]	; 0xffffffd0
   17008:	str	r1, [fp, #-52]	; 0xffffffcc
   1700c:	str	r2, [fp, #-56]	; 0xffffffc8
   17010:	str	r3, [fp, #-60]	; 0xffffffc4
   17014:	mov	r3, #0
   17018:	strb	r3, [fp, #-21]	; 0xffffffeb
   1701c:	ldr	r3, [fp, #4]
   17020:	mov	r2, #0
   17024:	strb	r2, [r3]
   17028:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1702c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17030:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17034:	bl	15068 <_start@@Base+0xa48>
   17038:	str	r0, [fp, #-52]	; 0xffffffcc
   1703c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17040:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17044:	cmp	r2, r3
   17048:	bne	17054 <_start@@Base+0x2a34>
   1704c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17050:	b	17180 <_start@@Base+0x2b60>
   17054:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17058:	str	r3, [fp, #-16]
   1705c:	ldr	r3, [fp, #-16]
   17060:	ldr	r4, [r3]
   17064:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17068:	str	r3, [fp, #-20]	; 0xffffffec
   1706c:	sub	r2, fp, #40	; 0x28
   17070:	sub	r3, fp, #44	; 0x2c
   17074:	str	r3, [sp, #4]
   17078:	sub	r3, fp, #36	; 0x24
   1707c:	str	r3, [sp]
   17080:	mov	r3, r2
   17084:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17088:	ldr	r1, [fp, #-20]	; 0xffffffec
   1708c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17090:	blx	r4
   17094:	str	r0, [fp, #-52]	; 0xffffffcc
   17098:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1709c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   170a0:	cmp	r2, r3
   170a4:	bne	170b0 <_start@@Base+0x2a90>
   170a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   170ac:	b	17180 <_start@@Base+0x2b60>
   170b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   170b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   170b8:	cmp	r2, r3
   170bc:	bne	170dc <_start@@Base+0x2abc>
   170c0:	ldr	r3, [fp, #-16]
   170c4:	add	r3, r3, #4
   170c8:	str	r3, [fp, #-16]
   170cc:	ldr	r3, [fp, #-16]
   170d0:	ldr	r3, [r3]
   170d4:	cmp	r3, #0
   170d8:	bne	1705c <_start@@Base+0x2a3c>
   170dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   170e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   170e4:	cmp	r2, r3
   170e8:	bne	17108 <_start@@Base+0x2ae8>
   170ec:	mov	r3, #23
   170f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   170f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   170f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   170fc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   17100:	mov	r3, r0
   17104:	b	17180 <_start@@Base+0x2b60>
   17108:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1710c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17110:	sub	r1, fp, #21
   17114:	str	r1, [sp, #8]
   17118:	strd	r2, [sp]
   1711c:	mov	r3, r0
   17120:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17124:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17128:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1712c:	bl	15b8c <_start@@Base+0x156c>
   17130:	mov	r2, r0
   17134:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17138:	cmp	r2, r3
   1713c:	bne	17148 <_start@@Base+0x2b28>
   17140:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17144:	b	17180 <_start@@Base+0x2b60>
   17148:	ldr	r3, [fp, #4]
   1714c:	ldrsb	r3, [r3]
   17150:	uxtb	r2, r3
   17154:	ldrsb	r3, [fp, #-21]	; 0xffffffeb
   17158:	uxtb	r3, r3
   1715c:	add	r3, r2, r3
   17160:	uxtb	r3, r3
   17164:	sxtb	r2, r3
   17168:	ldr	r3, [fp, #4]
   1716c:	strb	r2, [r3]
   17170:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17174:	cmp	r3, #0
   17178:	bne	17054 <_start@@Base+0x2a34>
   1717c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17180:	mov	r0, r3
   17184:	sub	sp, fp, #8
   17188:	pop	{r4, fp, pc}
   1718c:	push	{r4, fp, lr}
   17190:	add	fp, sp, #8
   17194:	sub	sp, sp, #68	; 0x44
   17198:	str	r0, [fp, #-48]	; 0xffffffd0
   1719c:	str	r1, [fp, #-52]	; 0xffffffcc
   171a0:	str	r2, [fp, #-56]	; 0xffffffc8
   171a4:	str	r3, [fp, #-60]	; 0xffffffc4
   171a8:	mov	r3, #0
   171ac:	strb	r3, [fp, #-21]	; 0xffffffeb
   171b0:	ldr	r3, [fp, #4]
   171b4:	mov	r2, #0
   171b8:	strb	r2, [r3]
   171bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   171c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   171c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   171c8:	bl	15068 <_start@@Base+0xa48>
   171cc:	str	r0, [fp, #-52]	; 0xffffffcc
   171d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   171d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   171d8:	cmp	r2, r3
   171dc:	bne	171e8 <_start@@Base+0x2bc8>
   171e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   171e4:	b	17308 <_start@@Base+0x2ce8>
   171e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   171ec:	str	r3, [fp, #-16]
   171f0:	ldr	r3, [fp, #-16]
   171f4:	ldr	r4, [r3]
   171f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   171fc:	str	r3, [fp, #-20]	; 0xffffffec
   17200:	sub	r2, fp, #40	; 0x28
   17204:	sub	r3, fp, #44	; 0x2c
   17208:	str	r3, [sp, #4]
   1720c:	sub	r3, fp, #36	; 0x24
   17210:	str	r3, [sp]
   17214:	mov	r3, r2
   17218:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1721c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17220:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17224:	blx	r4
   17228:	str	r0, [fp, #-52]	; 0xffffffcc
   1722c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17230:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17234:	cmp	r2, r3
   17238:	bne	17244 <_start@@Base+0x2c24>
   1723c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17240:	b	17308 <_start@@Base+0x2ce8>
   17244:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17248:	ldr	r3, [fp, #-20]	; 0xffffffec
   1724c:	cmp	r2, r3
   17250:	bne	17270 <_start@@Base+0x2c50>
   17254:	ldr	r3, [fp, #-16]
   17258:	add	r3, r3, #4
   1725c:	str	r3, [fp, #-16]
   17260:	ldr	r3, [fp, #-16]
   17264:	ldr	r3, [r3]
   17268:	cmp	r3, #0
   1726c:	bne	171f0 <_start@@Base+0x2bd0>
   17270:	ldr	r2, [fp, #-20]	; 0xffffffec
   17274:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17278:	cmp	r2, r3
   1727c:	bne	1729c <_start@@Base+0x2c7c>
   17280:	mov	r3, #23
   17284:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17288:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1728c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17290:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   17294:	mov	r3, r0
   17298:	b	17308 <_start@@Base+0x2ce8>
   1729c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   172a0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   172a4:	sub	r1, fp, #21
   172a8:	str	r1, [sp, #8]
   172ac:	strd	r2, [sp]
   172b0:	mov	r3, r0
   172b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   172b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   172bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   172c0:	bl	15724 <_start@@Base+0x1104>
   172c4:	mov	r2, r0
   172c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   172cc:	cmp	r2, r3
   172d0:	bne	172dc <_start@@Base+0x2cbc>
   172d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   172d8:	b	17308 <_start@@Base+0x2ce8>
   172dc:	ldr	r3, [fp, #4]
   172e0:	ldrb	r2, [r3]
   172e4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   172e8:	add	r3, r2, r3
   172ec:	uxtb	r2, r3
   172f0:	ldr	r3, [fp, #4]
   172f4:	strb	r2, [r3]
   172f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   172fc:	cmp	r3, #0
   17300:	bne	171e8 <_start@@Base+0x2bc8>
   17304:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17308:	mov	r0, r3
   1730c:	sub	sp, fp, #8
   17310:	pop	{r4, fp, pc}
   17314:	push	{r4, fp, lr}
   17318:	add	fp, sp, #8
   1731c:	sub	sp, sp, #68	; 0x44
   17320:	str	r0, [fp, #-48]	; 0xffffffd0
   17324:	str	r1, [fp, #-52]	; 0xffffffcc
   17328:	str	r2, [fp, #-56]	; 0xffffffc8
   1732c:	str	r3, [fp, #-60]	; 0xffffffc4
   17330:	mov	r3, #0
   17334:	str	r3, [fp, #-24]	; 0xffffffe8
   17338:	ldr	r3, [fp, #4]
   1733c:	mov	r2, #0
   17340:	str	r2, [r3]
   17344:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17348:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1734c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17350:	bl	15068 <_start@@Base+0xa48>
   17354:	str	r0, [fp, #-52]	; 0xffffffcc
   17358:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1735c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17360:	cmp	r2, r3
   17364:	bne	17370 <_start@@Base+0x2d50>
   17368:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1736c:	b	1748c <_start@@Base+0x2e6c>
   17370:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17374:	str	r3, [fp, #-16]
   17378:	ldr	r3, [fp, #-16]
   1737c:	ldr	r4, [r3]
   17380:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17384:	str	r3, [fp, #-20]	; 0xffffffec
   17388:	sub	r2, fp, #40	; 0x28
   1738c:	sub	r3, fp, #44	; 0x2c
   17390:	str	r3, [sp, #4]
   17394:	sub	r3, fp, #36	; 0x24
   17398:	str	r3, [sp]
   1739c:	mov	r3, r2
   173a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   173a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   173a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   173ac:	blx	r4
   173b0:	str	r0, [fp, #-52]	; 0xffffffcc
   173b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   173b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   173bc:	cmp	r2, r3
   173c0:	bne	173cc <_start@@Base+0x2dac>
   173c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   173c8:	b	1748c <_start@@Base+0x2e6c>
   173cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   173d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   173d4:	cmp	r2, r3
   173d8:	bne	173f8 <_start@@Base+0x2dd8>
   173dc:	ldr	r3, [fp, #-16]
   173e0:	add	r3, r3, #4
   173e4:	str	r3, [fp, #-16]
   173e8:	ldr	r3, [fp, #-16]
   173ec:	ldr	r3, [r3]
   173f0:	cmp	r3, #0
   173f4:	bne	17378 <_start@@Base+0x2d58>
   173f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   173fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17400:	cmp	r2, r3
   17404:	bne	17424 <_start@@Base+0x2e04>
   17408:	mov	r3, #23
   1740c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17410:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17414:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17418:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1741c:	mov	r3, r0
   17420:	b	1748c <_start@@Base+0x2e6c>
   17424:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17428:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1742c:	sub	r1, fp, #24
   17430:	str	r1, [sp, #8]
   17434:	strd	r2, [sp]
   17438:	mov	r3, r0
   1743c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17440:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17444:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17448:	bl	15c44 <_start@@Base+0x1624>
   1744c:	mov	r2, r0
   17450:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17454:	cmp	r2, r3
   17458:	bne	17464 <_start@@Base+0x2e44>
   1745c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17460:	b	1748c <_start@@Base+0x2e6c>
   17464:	ldr	r3, [fp, #4]
   17468:	vldr	s14, [r3]
   1746c:	vldr	s15, [fp, #-24]	; 0xffffffe8
   17470:	vadd.f32	s15, s14, s15
   17474:	ldr	r3, [fp, #4]
   17478:	vstr	s15, [r3]
   1747c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17480:	cmp	r3, #0
   17484:	bne	17370 <_start@@Base+0x2d50>
   17488:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1748c:	mov	r0, r3
   17490:	sub	sp, fp, #8
   17494:	pop	{r4, fp, pc}
   17498:	push	{r4, fp, lr}
   1749c:	add	fp, sp, #8
   174a0:	sub	sp, sp, #68	; 0x44
   174a4:	str	r0, [fp, #-48]	; 0xffffffd0
   174a8:	str	r1, [fp, #-52]	; 0xffffffcc
   174ac:	str	r2, [fp, #-56]	; 0xffffffc8
   174b0:	str	r3, [fp, #-60]	; 0xffffffc4
   174b4:	mov	r2, #0
   174b8:	mov	r3, #0
   174bc:	strd	r2, [fp, #-28]	; 0xffffffe4
   174c0:	ldr	r1, [fp, #4]
   174c4:	mov	r2, #0
   174c8:	mov	r3, #0
   174cc:	strd	r2, [r1]
   174d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   174d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   174d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   174dc:	bl	15068 <_start@@Base+0xa48>
   174e0:	str	r0, [fp, #-52]	; 0xffffffcc
   174e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   174e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   174ec:	cmp	r2, r3
   174f0:	bne	174fc <_start@@Base+0x2edc>
   174f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   174f8:	b	17618 <_start@@Base+0x2ff8>
   174fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17500:	str	r3, [fp, #-16]
   17504:	ldr	r3, [fp, #-16]
   17508:	ldr	r4, [r3]
   1750c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17510:	str	r3, [fp, #-20]	; 0xffffffec
   17514:	sub	r2, fp, #40	; 0x28
   17518:	sub	r3, fp, #44	; 0x2c
   1751c:	str	r3, [sp, #4]
   17520:	sub	r3, fp, #36	; 0x24
   17524:	str	r3, [sp]
   17528:	mov	r3, r2
   1752c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17530:	ldr	r1, [fp, #-20]	; 0xffffffec
   17534:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17538:	blx	r4
   1753c:	str	r0, [fp, #-52]	; 0xffffffcc
   17540:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17544:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17548:	cmp	r2, r3
   1754c:	bne	17558 <_start@@Base+0x2f38>
   17550:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17554:	b	17618 <_start@@Base+0x2ff8>
   17558:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1755c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17560:	cmp	r2, r3
   17564:	bne	17584 <_start@@Base+0x2f64>
   17568:	ldr	r3, [fp, #-16]
   1756c:	add	r3, r3, #4
   17570:	str	r3, [fp, #-16]
   17574:	ldr	r3, [fp, #-16]
   17578:	ldr	r3, [r3]
   1757c:	cmp	r3, #0
   17580:	bne	17504 <_start@@Base+0x2ee4>
   17584:	ldr	r2, [fp, #-20]	; 0xffffffec
   17588:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1758c:	cmp	r2, r3
   17590:	bne	175b0 <_start@@Base+0x2f90>
   17594:	mov	r3, #23
   17598:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1759c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   175a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   175a4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   175a8:	mov	r3, r0
   175ac:	b	17618 <_start@@Base+0x2ff8>
   175b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175b4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   175b8:	sub	r1, fp, #28
   175bc:	str	r1, [sp, #8]
   175c0:	strd	r2, [sp]
   175c4:	mov	r3, r0
   175c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   175cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   175d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   175d4:	bl	15ca4 <_start@@Base+0x1684>
   175d8:	mov	r2, r0
   175dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   175e0:	cmp	r2, r3
   175e4:	bne	175f0 <_start@@Base+0x2fd0>
   175e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   175ec:	b	17618 <_start@@Base+0x2ff8>
   175f0:	ldr	r3, [fp, #4]
   175f4:	vldr	d6, [r3]
   175f8:	vldr	d7, [fp, #-28]	; 0xffffffe4
   175fc:	vadd.f64	d7, d6, d7
   17600:	ldr	r3, [fp, #4]
   17604:	vstr	d7, [r3]
   17608:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1760c:	cmp	r3, #0
   17610:	bne	174fc <_start@@Base+0x2edc>
   17614:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17618:	mov	r0, r3
   1761c:	sub	sp, fp, #8
   17620:	pop	{r4, fp, pc}
   17624:	push	{fp, lr}
   17628:	add	fp, sp, #4
   1762c:	sub	sp, sp, #48	; 0x30
   17630:	str	r0, [fp, #-32]	; 0xffffffe0
   17634:	str	r1, [fp, #-36]	; 0xffffffdc
   17638:	str	r2, [fp, #-40]	; 0xffffffd8
   1763c:	str	r3, [fp, #-44]	; 0xffffffd4
   17640:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17644:	str	r3, [fp, #-8]
   17648:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1764c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17650:	bl	14f9c <_start@@Base+0x97c>
   17654:	strd	r0, [fp, #-20]	; 0xffffffec
   17658:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1765c:	mov	r0, #0
   17660:	mvn	r1, #255	; 0xff
   17664:	and	r2, r2, r0
   17668:	and	r3, r3, r1
   1766c:	add	r1, pc, #332	; 0x14c
   17670:	ldrd	r0, [r1]
   17674:	cmp	r3, r1
   17678:	cmpeq	r2, r0
   1767c:	bne	176d8 <_start@@Base+0x30b8>
   17680:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17684:	str	r3, [fp, #-24]	; 0xffffffe8
   17688:	ldr	r3, [fp, #8]
   1768c:	str	r3, [sp]
   17690:	mov	r3, #3
   17694:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17698:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1769c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176a0:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   176a4:	str	r0, [fp, #-36]	; 0xffffffdc
   176a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   176ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176b0:	cmp	r2, r3
   176b4:	beq	176e0 <_start@@Base+0x30c0>
   176b8:	ldr	r1, [fp, #4]
   176bc:	mov	r2, #17
   176c0:	mov	r3, #0
   176c4:	strd	r2, [r1]
   176c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   176cc:	mov	r2, #0
   176d0:	str	r2, [r3]
   176d4:	b	177b0 <_start@@Base+0x3190>
   176d8:	nop			; (mov r0, r0)
   176dc:	b	176e4 <_start@@Base+0x30c4>
   176e0:	nop			; (mov r0, r0)
   176e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   176e8:	add	r1, pc, #216	; 0xd8
   176ec:	ldrd	r0, [r1]
   176f0:	cmp	r3, r1
   176f4:	cmpeq	r2, r0
   176f8:	bne	177a8 <_start@@Base+0x3188>
   176fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17700:	add	r3, r3, #8
   17704:	str	r3, [fp, #-36]	; 0xffffffdc
   17708:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1770c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17710:	bl	14f9c <_start@@Base+0x97c>
   17714:	strd	r0, [fp, #-20]	; 0xffffffec
   17718:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1771c:	mov	r0, #0
   17720:	ldr	r1, [pc, #168]	; 177d0 <_start@@Base+0x31b0>
   17724:	and	r2, r2, r0
   17728:	and	r3, r3, r1
   1772c:	mov	r0, #0
   17730:	ldr	r1, [pc, #156]	; 177d4 <_start@@Base+0x31b4>
   17734:	cmp	r3, r1
   17738:	cmpeq	r2, r0
   1773c:	bne	177a0 <_start@@Base+0x3180>
   17740:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17744:	str	r3, [fp, #-24]	; 0xffffffe8
   17748:	ldr	r3, [fp, #8]
   1774c:	str	r3, [sp]
   17750:	mov	r3, #2
   17754:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17758:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1775c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17760:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   17764:	str	r0, [fp, #-36]	; 0xffffffdc
   17768:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1776c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17770:	cmp	r2, r3
   17774:	beq	17798 <_start@@Base+0x3178>
   17778:	ldr	r1, [fp, #4]
   1777c:	mov	r2, #0
   17780:	mov	r3, #0
   17784:	strd	r2, [r1]
   17788:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1778c:	mov	r2, #0
   17790:	str	r2, [r3]
   17794:	b	177b0 <_start@@Base+0x3190>
   17798:	ldr	r3, [fp, #-8]
   1779c:	b	177b4 <_start@@Base+0x3194>
   177a0:	ldr	r3, [fp, #-8]
   177a4:	b	177b4 <_start@@Base+0x3194>
   177a8:	ldr	r3, [fp, #-8]
   177ac:	b	177b4 <_start@@Base+0x3194>
   177b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   177b4:	mov	r0, r3
   177b8:	sub	sp, fp, #4
   177bc:	pop	{fp, pc}
   177c0:	andeq	r0, r0, r0
   177c4:	strbtmi	r6, [pc], -r0, lsl #30
   177c8:	strbvc	r6, [r4, #-1366]!	; 0xfffffaaa
   177cc:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   177d0:			; <UNDEFINED> instruction: 0xffff0000
   177d4:	cmnvs	ip, r0
   177d8:	push	{fp, lr}
   177dc:	add	fp, sp, #4
   177e0:	sub	sp, sp, #24
   177e4:	str	r0, [fp, #-16]
   177e8:	str	r1, [fp, #-20]	; 0xffffffec
   177ec:	str	r2, [fp, #-24]	; 0xffffffe8
   177f0:	str	r3, [fp, #-28]	; 0xffffffe4
   177f4:	sub	r3, fp, #8
   177f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17800:	ldr	r0, [fp, #-16]
   17804:	bl	150c8 <_start@@Base+0xaa8>
   17808:	str	r0, [fp, #-20]	; 0xffffffec
   1780c:	b	1783c <_start@@Base+0x321c>
   17810:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17814:	ldr	r1, [fp, #-20]	; 0xffffffec
   17818:	ldr	r0, [fp, #-16]
   1781c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   17820:	str	r0, [fp, #-20]	; 0xffffffec
   17824:	sub	r3, fp, #8
   17828:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1782c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17830:	ldr	r0, [fp, #-16]
   17834:	bl	151b0 <_start@@Base+0xb90>
   17838:	str	r0, [fp, #-20]	; 0xffffffec
   1783c:	ldr	r3, [fp, #-8]
   17840:	cmp	r3, #0
   17844:	bne	17810 <_start@@Base+0x31f0>
   17848:	ldr	r3, [fp, #-20]	; 0xffffffec
   1784c:	mov	r0, r3
   17850:	sub	sp, fp, #4
   17854:	pop	{fp, pc}
   17858:	push	{fp, lr}
   1785c:	add	fp, sp, #4
   17860:	sub	sp, sp, #24
   17864:	str	r0, [fp, #-16]
   17868:	str	r1, [fp, #-20]	; 0xffffffec
   1786c:	str	r2, [fp, #-24]	; 0xffffffe8
   17870:	str	r3, [fp, #-28]	; 0xffffffe4
   17874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17878:	mov	r2, #0
   1787c:	str	r2, [r3]
   17880:	ldr	r3, [fp, #-16]
   17884:	ldr	r3, [r3]
   17888:	mov	r2, #1
   1788c:	mov	r1, #0
   17890:	mov	r0, r3
   17894:	bl	2ed3c <flatcc_builder_start_struct@@Base>
   17898:	str	r0, [fp, #-8]
   1789c:	ldr	r3, [fp, #-8]
   178a0:	cmp	r3, #0
   178a4:	beq	17904 <_start@@Base+0x32e4>
   178a8:	ldr	r3, [fp, #-8]
   178ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   178b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   178b4:	ldr	r0, [fp, #-16]
   178b8:	bl	177d8 <_start@@Base+0x31b8>
   178bc:	str	r0, [fp, #-20]	; 0xffffffec
   178c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   178c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   178c8:	cmp	r2, r3
   178cc:	beq	17908 <_start@@Base+0x32e8>
   178d0:	ldr	r3, [fp, #-16]
   178d4:	ldr	r3, [r3]
   178d8:	mov	r0, r3
   178dc:	bl	2eddc <flatcc_builder_end_struct@@Base>
   178e0:	mov	r2, r0
   178e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178e8:	str	r2, [r3]
   178ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178f0:	ldr	r3, [r3]
   178f4:	cmp	r3, #0
   178f8:	beq	17908 <_start@@Base+0x32e8>
   178fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17900:	b	17920 <_start@@Base+0x3300>
   17904:	nop			; (mov r0, r0)
   17908:	mov	r3, #33	; 0x21
   1790c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17910:	ldr	r1, [fp, #-20]	; 0xffffffec
   17914:	ldr	r0, [fp, #-16]
   17918:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1791c:	mov	r3, r0
   17920:	mov	r0, r3
   17924:	sub	sp, fp, #4
   17928:	pop	{fp, pc}
   1792c:	push	{fp}		; (str fp, [sp, #-4]!)
   17930:	add	fp, sp, #0
   17934:	sub	sp, sp, #20
   17938:	str	r0, [fp, #-8]
   1793c:	str	r1, [fp, #-12]
   17940:	str	r2, [fp, #-16]
   17944:	str	r3, [fp, #-20]	; 0xffffffec
   17948:	ldr	r3, [fp, #-12]
   1794c:	mov	r0, r3
   17950:	add	sp, fp, #0
   17954:	pop	{fp}		; (ldr fp, [sp], #4)
   17958:	bx	lr
   1795c:	push	{fp}		; (str fp, [sp, #-4]!)
   17960:	add	fp, sp, #0
   17964:	sub	sp, sp, #20
   17968:	str	r0, [fp, #-8]
   1796c:	str	r1, [fp, #-12]
   17970:	str	r2, [fp, #-16]
   17974:	str	r3, [fp, #-20]	; 0xffffffec
   17978:	ldr	r3, [fp, #-12]
   1797c:	mov	r0, r3
   17980:	add	sp, fp, #0
   17984:	pop	{fp}		; (ldr fp, [sp], #4)
   17988:	bx	lr
   1798c:	push	{fp}		; (str fp, [sp, #-4]!)
   17990:	add	fp, sp, #0
   17994:	sub	sp, sp, #20
   17998:	str	r0, [fp, #-8]
   1799c:	str	r1, [fp, #-12]
   179a0:	str	r2, [fp, #-16]
   179a4:	str	r3, [fp, #-20]	; 0xffffffec
   179a8:	ldr	r3, [fp, #-12]
   179ac:	mov	r0, r3
   179b0:	add	sp, fp, #0
   179b4:	pop	{fp}		; (ldr fp, [sp], #4)
   179b8:	bx	lr
   179bc:	push	{fp}		; (str fp, [sp, #-4]!)
   179c0:	add	fp, sp, #0
   179c4:	sub	sp, sp, #20
   179c8:	str	r0, [fp, #-8]
   179cc:	str	r1, [fp, #-12]
   179d0:	str	r2, [fp, #-16]
   179d4:	str	r3, [fp, #-20]	; 0xffffffec
   179d8:	ldr	r3, [fp, #-12]
   179dc:	mov	r0, r3
   179e0:	add	sp, fp, #0
   179e4:	pop	{fp}		; (ldr fp, [sp], #4)
   179e8:	bx	lr
   179ec:	push	{fp}		; (str fp, [sp, #-4]!)
   179f0:	add	fp, sp, #0
   179f4:	sub	sp, sp, #20
   179f8:	str	r0, [fp, #-8]
   179fc:	str	r1, [fp, #-12]
   17a00:	str	r2, [fp, #-16]
   17a04:	str	r3, [fp, #-20]	; 0xffffffec
   17a08:	ldr	r3, [fp, #-12]
   17a0c:	mov	r0, r3
   17a10:	add	sp, fp, #0
   17a14:	pop	{fp}		; (ldr fp, [sp], #4)
   17a18:	bx	lr
   17a1c:	push	{fp, lr}
   17a20:	add	fp, sp, #4
   17a24:	sub	sp, sp, #48	; 0x30
   17a28:	str	r0, [fp, #-32]	; 0xffffffe0
   17a2c:	str	r1, [fp, #-36]	; 0xffffffdc
   17a30:	str	r2, [fp, #-40]	; 0xffffffd8
   17a34:	str	r3, [fp, #-44]	; 0xffffffd4
   17a38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a3c:	str	r3, [fp, #-8]
   17a40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17a44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17a48:	bl	14f9c <_start@@Base+0x97c>
   17a4c:	strd	r0, [fp, #-20]	; 0xffffffec
   17a50:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17a54:	add	r1, pc, #212	; 0xd4
   17a58:	ldrd	r0, [r1]
   17a5c:	cmp	r3, r1
   17a60:	cmpeq	r2, r0
   17a64:	bne	17b1c <_start@@Base+0x34fc>
   17a68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a6c:	add	r3, r3, #8
   17a70:	str	r3, [fp, #-36]	; 0xffffffdc
   17a74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17a78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17a7c:	bl	14f9c <_start@@Base+0x97c>
   17a80:	strd	r0, [fp, #-20]	; 0xffffffec
   17a84:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17a88:	mov	r0, #0
   17a8c:	mvn	r1, #255	; 0xff
   17a90:	and	r2, r2, r0
   17a94:	and	r3, r3, r1
   17a98:	add	r1, pc, #152	; 0x98
   17a9c:	ldrd	r0, [r1]
   17aa0:	cmp	r3, r1
   17aa4:	cmpeq	r2, r0
   17aa8:	bne	17b14 <_start@@Base+0x34f4>
   17aac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17ab0:	str	r3, [fp, #-24]	; 0xffffffe8
   17ab4:	mov	r3, #3
   17ab8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17abc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ac0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ac4:	bl	14fe4 <_start@@Base+0x9c4>
   17ac8:	str	r0, [fp, #-36]	; 0xffffffdc
   17acc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17ad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ad4:	cmp	r2, r3
   17ad8:	beq	17b0c <_start@@Base+0x34ec>
   17adc:	ldr	r3, [fp, #8]
   17ae0:	str	r3, [sp, #4]
   17ae4:	ldr	r3, [fp, #4]
   17ae8:	str	r3, [sp]
   17aec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17af0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17af4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17af8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17afc:	bl	17624 <_start@@Base+0x3004>
   17b00:	str	r0, [fp, #-36]	; 0xffffffdc
   17b04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b08:	b	17b20 <_start@@Base+0x3500>
   17b0c:	ldr	r3, [fp, #-8]
   17b10:	b	17b20 <_start@@Base+0x3500>
   17b14:	ldr	r3, [fp, #-8]
   17b18:	b	17b20 <_start@@Base+0x3500>
   17b1c:	ldr	r3, [fp, #-8]
   17b20:	mov	r0, r3
   17b24:	sub	sp, fp, #4
   17b28:	pop	{fp, pc}
   17b2c:	nop			; (mov r0, r0)
   17b30:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   17b34:	ldrbtmi	r6, [r2], -sp, ror #30
   17b38:	andeq	r0, r0, r0
   17b3c:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   17b40:	push	{fp, lr}
   17b44:	add	fp, sp, #4
   17b48:	sub	sp, sp, #48	; 0x30
   17b4c:	str	r0, [fp, #-32]	; 0xffffffe0
   17b50:	str	r1, [fp, #-36]	; 0xffffffdc
   17b54:	str	r2, [fp, #-40]	; 0xffffffd8
   17b58:	str	r3, [fp, #-44]	; 0xffffffd4
   17b5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b60:	str	r3, [fp, #-8]
   17b64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17b68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b6c:	bl	14f9c <_start@@Base+0x97c>
   17b70:	strd	r0, [fp, #-20]	; 0xffffffec
   17b74:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17b78:	add	r1, pc, #384	; 0x180
   17b7c:	ldrd	r0, [r1]
   17b80:	cmp	r3, r1
   17b84:	cmpeq	r2, r0
   17b88:	bne	17cec <_start@@Base+0x36cc>
   17b8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b90:	add	r3, r3, #8
   17b94:	str	r3, [fp, #-36]	; 0xffffffdc
   17b98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17b9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17ba0:	bl	14f9c <_start@@Base+0x97c>
   17ba4:	strd	r0, [fp, #-20]	; 0xffffffec
   17ba8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17bac:	add	r1, pc, #340	; 0x154
   17bb0:	ldrd	r0, [r1]
   17bb4:	cmp	r3, r1
   17bb8:	cmpeq	r2, r0
   17bbc:	bne	17ce4 <_start@@Base+0x36c4>
   17bc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17bc4:	add	r3, r3, #8
   17bc8:	str	r3, [fp, #-36]	; 0xffffffdc
   17bcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17bd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17bd4:	bl	14f9c <_start@@Base+0x97c>
   17bd8:	strd	r0, [fp, #-20]	; 0xffffffec
   17bdc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17be0:	add	r1, pc, #296	; 0x128
   17be4:	ldrd	r0, [r1]
   17be8:	cmp	r3, r1
   17bec:	cmpeq	r2, r0
   17bf0:	bne	17cdc <_start@@Base+0x36bc>
   17bf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17bf8:	add	r3, r3, #8
   17bfc:	str	r3, [fp, #-36]	; 0xffffffdc
   17c00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17c04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17c08:	bl	14f9c <_start@@Base+0x97c>
   17c0c:	strd	r0, [fp, #-20]	; 0xffffffec
   17c10:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17c14:	add	r1, pc, #252	; 0xfc
   17c18:	ldrd	r0, [r1]
   17c1c:	cmp	r3, r1
   17c20:	cmpeq	r2, r0
   17c24:	bne	17cd4 <_start@@Base+0x36b4>
   17c28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c2c:	add	r3, r3, #8
   17c30:	str	r3, [fp, #-36]	; 0xffffffdc
   17c34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17c38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17c3c:	bl	14f9c <_start@@Base+0x97c>
   17c40:	strd	r0, [fp, #-20]	; 0xffffffec
   17c44:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17c48:	mov	r0, #0
   17c4c:	mov	r1, #-16777216	; 0xff000000
   17c50:	and	r2, r2, r0
   17c54:	and	r3, r3, r1
   17c58:	cmp	r3, #1694498816	; 0x65000000
   17c5c:	cmpeq	r2, #0
   17c60:	bne	17ccc <_start@@Base+0x36ac>
   17c64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c68:	str	r3, [fp, #-24]	; 0xffffffe8
   17c6c:	mov	r3, #1
   17c70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17c74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c7c:	bl	14fe4 <_start@@Base+0x9c4>
   17c80:	str	r0, [fp, #-36]	; 0xffffffdc
   17c84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c8c:	cmp	r2, r3
   17c90:	beq	17cc4 <_start@@Base+0x36a4>
   17c94:	ldr	r3, [fp, #8]
   17c98:	str	r3, [sp, #4]
   17c9c:	ldr	r3, [fp, #4]
   17ca0:	str	r3, [sp]
   17ca4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ca8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17cac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17cb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17cb4:	bl	17624 <_start@@Base+0x3004>
   17cb8:	str	r0, [fp, #-36]	; 0xffffffdc
   17cbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17cc0:	b	17cf0 <_start@@Base+0x36d0>
   17cc4:	ldr	r3, [fp, #-8]
   17cc8:	b	17cf0 <_start@@Base+0x36d0>
   17ccc:	ldr	r3, [fp, #-8]
   17cd0:	b	17cf0 <_start@@Base+0x36d0>
   17cd4:	ldr	r3, [fp, #-8]
   17cd8:	b	17cf0 <_start@@Base+0x36d0>
   17cdc:	ldr	r3, [fp, #-8]
   17ce0:	b	17cf0 <_start@@Base+0x36d0>
   17ce4:	ldr	r3, [fp, #-8]
   17ce8:	b	17cf0 <_start@@Base+0x36d0>
   17cec:	ldr	r3, [fp, #-8]
   17cf0:	mov	r0, r3
   17cf4:	sub	sp, fp, #4
   17cf8:	pop	{fp, pc}
   17cfc:	nop			; (mov r0, r0)
   17d00:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   17d04:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   17d08:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   17d0c:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   17d10:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   17d14:	cmnpl	r0, #-1073741800	; 0xc0000018
   17d18:	cmnvs	ip, #100, 10	; 0x19000000
   17d1c:	svcvs	0x006d496e
   17d20:	push	{fp}		; (str fp, [sp, #-4]!)
   17d24:	add	fp, sp, #0
   17d28:	sub	sp, sp, #20
   17d2c:	str	r0, [fp, #-8]
   17d30:	str	r1, [fp, #-12]
   17d34:	str	r2, [fp, #-16]
   17d38:	str	r3, [fp, #-20]	; 0xffffffec
   17d3c:	ldr	r3, [fp, #-12]
   17d40:	mov	r0, r3
   17d44:	add	sp, fp, #0
   17d48:	pop	{fp}		; (ldr fp, [sp], #4)
   17d4c:	bx	lr
   17d50:	push	{fp}		; (str fp, [sp, #-4]!)
   17d54:	add	fp, sp, #0
   17d58:	sub	sp, sp, #20
   17d5c:	str	r0, [fp, #-8]
   17d60:	str	r1, [fp, #-12]
   17d64:	str	r2, [fp, #-16]
   17d68:	str	r3, [fp, #-20]	; 0xffffffec
   17d6c:	ldr	r3, [fp, #-12]
   17d70:	mov	r0, r3
   17d74:	add	sp, fp, #0
   17d78:	pop	{fp}		; (ldr fp, [sp], #4)
   17d7c:	bx	lr
   17d80:	push	{fp}		; (str fp, [sp, #-4]!)
   17d84:	add	fp, sp, #0
   17d88:	sub	sp, sp, #20
   17d8c:	str	r0, [fp, #-8]
   17d90:	str	r1, [fp, #-12]
   17d94:	str	r2, [fp, #-16]
   17d98:	str	r3, [fp, #-20]	; 0xffffffec
   17d9c:	ldr	r3, [fp, #-12]
   17da0:	mov	r0, r3
   17da4:	add	sp, fp, #0
   17da8:	pop	{fp}		; (ldr fp, [sp], #4)
   17dac:	bx	lr
   17db0:	push	{fp}		; (str fp, [sp, #-4]!)
   17db4:	add	fp, sp, #0
   17db8:	sub	sp, sp, #20
   17dbc:	str	r0, [fp, #-8]
   17dc0:	str	r1, [fp, #-12]
   17dc4:	str	r2, [fp, #-16]
   17dc8:	str	r3, [fp, #-20]	; 0xffffffec
   17dcc:	ldr	r3, [fp, #-12]
   17dd0:	mov	r0, r3
   17dd4:	add	sp, fp, #0
   17dd8:	pop	{fp}		; (ldr fp, [sp], #4)
   17ddc:	bx	lr
   17de0:	push	{fp}		; (str fp, [sp, #-4]!)
   17de4:	add	fp, sp, #0
   17de8:	sub	sp, sp, #20
   17dec:	str	r0, [fp, #-8]
   17df0:	str	r1, [fp, #-12]
   17df4:	str	r2, [fp, #-16]
   17df8:	str	r3, [fp, #-20]	; 0xffffffec
   17dfc:	ldr	r3, [fp, #-12]
   17e00:	mov	r0, r3
   17e04:	add	sp, fp, #0
   17e08:	pop	{fp}		; (ldr fp, [sp], #4)
   17e0c:	bx	lr
   17e10:	push	{fp, lr}
   17e14:	add	fp, sp, #4
   17e18:	sub	sp, sp, #48	; 0x30
   17e1c:	str	r0, [fp, #-32]	; 0xffffffe0
   17e20:	str	r1, [fp, #-36]	; 0xffffffdc
   17e24:	str	r2, [fp, #-40]	; 0xffffffd8
   17e28:	str	r3, [fp, #-44]	; 0xffffffd4
   17e2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e30:	str	r3, [fp, #-8]
   17e34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17e38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17e3c:	bl	14f9c <_start@@Base+0x97c>
   17e40:	strd	r0, [fp, #-20]	; 0xffffffec
   17e44:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17e48:	add	r1, pc, #208	; 0xd0
   17e4c:	ldrd	r0, [r1]
   17e50:	cmp	r3, r1
   17e54:	cmpeq	r2, r0
   17e58:	bne	17f10 <_start@@Base+0x38f0>
   17e5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e60:	add	r3, r3, #8
   17e64:	str	r3, [fp, #-36]	; 0xffffffdc
   17e68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17e6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17e70:	bl	14f9c <_start@@Base+0x97c>
   17e74:	strd	r0, [fp, #-20]	; 0xffffffec
   17e78:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17e7c:	mov	r0, #0
   17e80:	mvn	r1, #255	; 0xff
   17e84:	and	r2, r2, r0
   17e88:	and	r3, r3, r1
   17e8c:	add	r1, pc, #148	; 0x94
   17e90:	ldrd	r0, [r1]
   17e94:	cmp	r3, r1
   17e98:	cmpeq	r2, r0
   17e9c:	bne	17f08 <_start@@Base+0x38e8>
   17ea0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17ea4:	str	r3, [fp, #-24]	; 0xffffffe8
   17ea8:	mov	r3, #3
   17eac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17eb8:	bl	14fe4 <_start@@Base+0x9c4>
   17ebc:	str	r0, [fp, #-36]	; 0xffffffdc
   17ec0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ec8:	cmp	r2, r3
   17ecc:	beq	17f00 <_start@@Base+0x38e0>
   17ed0:	ldr	r3, [fp, #8]
   17ed4:	str	r3, [sp, #4]
   17ed8:	ldr	r3, [fp, #4]
   17edc:	str	r3, [sp]
   17ee0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ee4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17ee8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ef0:	bl	17624 <_start@@Base+0x3004>
   17ef4:	str	r0, [fp, #-36]	; 0xffffffdc
   17ef8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17efc:	b	17f14 <_start@@Base+0x38f4>
   17f00:	ldr	r3, [fp, #-8]
   17f04:	b	17f14 <_start@@Base+0x38f4>
   17f08:	ldr	r3, [fp, #-8]
   17f0c:	b	17f14 <_start@@Base+0x38f4>
   17f10:	ldr	r3, [fp, #-8]
   17f14:	mov	r0, r3
   17f18:	sub	sp, fp, #4
   17f1c:	pop	{fp, pc}
   17f20:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   17f24:	ldrbtmi	r6, [r2], -sp, ror #30
   17f28:	andeq	r0, r0, r0
   17f2c:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   17f30:	push	{fp, lr}
   17f34:	add	fp, sp, #4
   17f38:	sub	sp, sp, #48	; 0x30
   17f3c:	str	r0, [fp, #-32]	; 0xffffffe0
   17f40:	str	r1, [fp, #-36]	; 0xffffffdc
   17f44:	str	r2, [fp, #-40]	; 0xffffffd8
   17f48:	str	r3, [fp, #-44]	; 0xffffffd4
   17f4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f50:	str	r3, [fp, #-8]
   17f54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f5c:	bl	14f9c <_start@@Base+0x97c>
   17f60:	strd	r0, [fp, #-20]	; 0xffffffec
   17f64:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17f68:	add	r1, pc, #384	; 0x180
   17f6c:	ldrd	r0, [r1]
   17f70:	cmp	r3, r1
   17f74:	cmpeq	r2, r0
   17f78:	bne	180dc <_start@@Base+0x3abc>
   17f7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f80:	add	r3, r3, #8
   17f84:	str	r3, [fp, #-36]	; 0xffffffdc
   17f88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f90:	bl	14f9c <_start@@Base+0x97c>
   17f94:	strd	r0, [fp, #-20]	; 0xffffffec
   17f98:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17f9c:	add	r1, pc, #340	; 0x154
   17fa0:	ldrd	r0, [r1]
   17fa4:	cmp	r3, r1
   17fa8:	cmpeq	r2, r0
   17fac:	bne	180d4 <_start@@Base+0x3ab4>
   17fb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17fb4:	add	r3, r3, #8
   17fb8:	str	r3, [fp, #-36]	; 0xffffffdc
   17fbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17fc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17fc4:	bl	14f9c <_start@@Base+0x97c>
   17fc8:	strd	r0, [fp, #-20]	; 0xffffffec
   17fcc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17fd0:	add	r1, pc, #296	; 0x128
   17fd4:	ldrd	r0, [r1]
   17fd8:	cmp	r3, r1
   17fdc:	cmpeq	r2, r0
   17fe0:	bne	180cc <_start@@Base+0x3aac>
   17fe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17fe8:	add	r3, r3, #8
   17fec:	str	r3, [fp, #-36]	; 0xffffffdc
   17ff0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17ff4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17ff8:	bl	14f9c <_start@@Base+0x97c>
   17ffc:	strd	r0, [fp, #-20]	; 0xffffffec
   18000:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18004:	add	r1, pc, #252	; 0xfc
   18008:	ldrd	r0, [r1]
   1800c:	cmp	r3, r1
   18010:	cmpeq	r2, r0
   18014:	bne	180c4 <_start@@Base+0x3aa4>
   18018:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1801c:	add	r3, r3, #8
   18020:	str	r3, [fp, #-36]	; 0xffffffdc
   18024:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18028:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1802c:	bl	14f9c <_start@@Base+0x97c>
   18030:	strd	r0, [fp, #-20]	; 0xffffffec
   18034:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18038:	mov	r0, #0
   1803c:	mov	r1, #-16777216	; 0xff000000
   18040:	and	r2, r2, r0
   18044:	and	r3, r3, r1
   18048:	cmp	r3, #1694498816	; 0x65000000
   1804c:	cmpeq	r2, #0
   18050:	bne	180bc <_start@@Base+0x3a9c>
   18054:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18058:	str	r3, [fp, #-24]	; 0xffffffe8
   1805c:	mov	r3, #1
   18060:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18064:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1806c:	bl	14fe4 <_start@@Base+0x9c4>
   18070:	str	r0, [fp, #-36]	; 0xffffffdc
   18074:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1807c:	cmp	r2, r3
   18080:	beq	180b4 <_start@@Base+0x3a94>
   18084:	ldr	r3, [fp, #8]
   18088:	str	r3, [sp, #4]
   1808c:	ldr	r3, [fp, #4]
   18090:	str	r3, [sp]
   18094:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18098:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1809c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   180a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180a4:	bl	17624 <_start@@Base+0x3004>
   180a8:	str	r0, [fp, #-36]	; 0xffffffdc
   180ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   180b0:	b	180e0 <_start@@Base+0x3ac0>
   180b4:	ldr	r3, [fp, #-8]
   180b8:	b	180e0 <_start@@Base+0x3ac0>
   180bc:	ldr	r3, [fp, #-8]
   180c0:	b	180e0 <_start@@Base+0x3ac0>
   180c4:	ldr	r3, [fp, #-8]
   180c8:	b	180e0 <_start@@Base+0x3ac0>
   180cc:	ldr	r3, [fp, #-8]
   180d0:	b	180e0 <_start@@Base+0x3ac0>
   180d4:	ldr	r3, [fp, #-8]
   180d8:	b	180e0 <_start@@Base+0x3ac0>
   180dc:	ldr	r3, [fp, #-8]
   180e0:	mov	r0, r3
   180e4:	sub	sp, fp, #4
   180e8:	pop	{fp, pc}
   180ec:	nop			; (mov r0, r0)
   180f0:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   180f4:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   180f8:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   180fc:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   18100:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   18104:	cmnpl	r0, #-1073741800	; 0xc0000018
   18108:	cmnvs	ip, #100, 10	; 0x19000000
   1810c:	svcvs	0x006d496e
   18110:	push	{fp}		; (str fp, [sp, #-4]!)
   18114:	add	fp, sp, #0
   18118:	sub	sp, sp, #20
   1811c:	str	r0, [fp, #-8]
   18120:	str	r1, [fp, #-12]
   18124:	str	r2, [fp, #-16]
   18128:	str	r3, [fp, #-20]	; 0xffffffec
   1812c:	ldr	r3, [fp, #-12]
   18130:	mov	r0, r3
   18134:	add	sp, fp, #0
   18138:	pop	{fp}		; (ldr fp, [sp], #4)
   1813c:	bx	lr
   18140:	push	{fp}		; (str fp, [sp, #-4]!)
   18144:	add	fp, sp, #0
   18148:	sub	sp, sp, #20
   1814c:	str	r0, [fp, #-8]
   18150:	str	r1, [fp, #-12]
   18154:	str	r2, [fp, #-16]
   18158:	str	r3, [fp, #-20]	; 0xffffffec
   1815c:	ldr	r3, [fp, #-12]
   18160:	mov	r0, r3
   18164:	add	sp, fp, #0
   18168:	pop	{fp}		; (ldr fp, [sp], #4)
   1816c:	bx	lr
   18170:	push	{fp}		; (str fp, [sp, #-4]!)
   18174:	add	fp, sp, #0
   18178:	sub	sp, sp, #20
   1817c:	str	r0, [fp, #-8]
   18180:	str	r1, [fp, #-12]
   18184:	str	r2, [fp, #-16]
   18188:	str	r3, [fp, #-20]	; 0xffffffec
   1818c:	ldr	r3, [fp, #-12]
   18190:	mov	r0, r3
   18194:	add	sp, fp, #0
   18198:	pop	{fp}		; (ldr fp, [sp], #4)
   1819c:	bx	lr
   181a0:	push	{fp}		; (str fp, [sp, #-4]!)
   181a4:	add	fp, sp, #0
   181a8:	sub	sp, sp, #20
   181ac:	str	r0, [fp, #-8]
   181b0:	str	r1, [fp, #-12]
   181b4:	str	r2, [fp, #-16]
   181b8:	str	r3, [fp, #-20]	; 0xffffffec
   181bc:	ldr	r3, [fp, #-12]
   181c0:	mov	r0, r3
   181c4:	add	sp, fp, #0
   181c8:	pop	{fp}		; (ldr fp, [sp], #4)
   181cc:	bx	lr
   181d0:	push	{fp}		; (str fp, [sp, #-4]!)
   181d4:	add	fp, sp, #0
   181d8:	sub	sp, sp, #20
   181dc:	str	r0, [fp, #-8]
   181e0:	str	r1, [fp, #-12]
   181e4:	str	r2, [fp, #-16]
   181e8:	str	r3, [fp, #-20]	; 0xffffffec
   181ec:	ldr	r3, [fp, #-12]
   181f0:	mov	r0, r3
   181f4:	add	sp, fp, #0
   181f8:	pop	{fp}		; (ldr fp, [sp], #4)
   181fc:	bx	lr
   18200:	push	{fp}		; (str fp, [sp, #-4]!)
   18204:	add	fp, sp, #0
   18208:	sub	sp, sp, #20
   1820c:	str	r0, [fp, #-8]
   18210:	str	r1, [fp, #-12]
   18214:	str	r2, [fp, #-16]
   18218:	str	r3, [fp, #-20]	; 0xffffffec
   1821c:	ldr	r3, [fp, #-12]
   18220:	mov	r0, r3
   18224:	add	sp, fp, #0
   18228:	pop	{fp}		; (ldr fp, [sp], #4)
   1822c:	bx	lr
   18230:	push	{fp}		; (str fp, [sp, #-4]!)
   18234:	add	fp, sp, #0
   18238:	sub	sp, sp, #20
   1823c:	str	r0, [fp, #-8]
   18240:	str	r1, [fp, #-12]
   18244:	str	r2, [fp, #-16]
   18248:	str	r3, [fp, #-20]	; 0xffffffec
   1824c:	ldr	r3, [fp, #-12]
   18250:	mov	r0, r3
   18254:	add	sp, fp, #0
   18258:	pop	{fp}		; (ldr fp, [sp], #4)
   1825c:	bx	lr
   18260:	push	{fp, lr}
   18264:	add	fp, sp, #4
   18268:	sub	sp, sp, #24
   1826c:	str	r0, [fp, #-16]
   18270:	str	r1, [fp, #-20]	; 0xffffffec
   18274:	str	r2, [fp, #-24]	; 0xffffffe8
   18278:	str	r3, [fp, #-28]	; 0xffffffe4
   1827c:	sub	r3, fp, #8
   18280:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18284:	ldr	r1, [fp, #-20]	; 0xffffffec
   18288:	ldr	r0, [fp, #-16]
   1828c:	bl	150c8 <_start@@Base+0xaa8>
   18290:	str	r0, [fp, #-20]	; 0xffffffec
   18294:	b	182c4 <_start@@Base+0x3ca4>
   18298:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1829c:	ldr	r1, [fp, #-20]	; 0xffffffec
   182a0:	ldr	r0, [fp, #-16]
   182a4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   182a8:	str	r0, [fp, #-20]	; 0xffffffec
   182ac:	sub	r3, fp, #8
   182b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   182b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   182b8:	ldr	r0, [fp, #-16]
   182bc:	bl	151b0 <_start@@Base+0xb90>
   182c0:	str	r0, [fp, #-20]	; 0xffffffec
   182c4:	ldr	r3, [fp, #-8]
   182c8:	cmp	r3, #0
   182cc:	bne	18298 <_start@@Base+0x3c78>
   182d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   182d4:	mov	r0, r3
   182d8:	sub	sp, fp, #4
   182dc:	pop	{fp, pc}
   182e0:	push	{fp, lr}
   182e4:	add	fp, sp, #4
   182e8:	sub	sp, sp, #24
   182ec:	str	r0, [fp, #-16]
   182f0:	str	r1, [fp, #-20]	; 0xffffffec
   182f4:	str	r2, [fp, #-24]	; 0xffffffe8
   182f8:	str	r3, [fp, #-28]	; 0xffffffe4
   182fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18300:	mov	r2, #0
   18304:	str	r2, [r3]
   18308:	ldr	r3, [fp, #-16]
   1830c:	ldr	r3, [r3]
   18310:	mov	r2, #1
   18314:	mov	r1, #0
   18318:	mov	r0, r3
   1831c:	bl	2ed3c <flatcc_builder_start_struct@@Base>
   18320:	str	r0, [fp, #-8]
   18324:	ldr	r3, [fp, #-8]
   18328:	cmp	r3, #0
   1832c:	beq	1838c <_start@@Base+0x3d6c>
   18330:	ldr	r3, [fp, #-8]
   18334:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18338:	ldr	r1, [fp, #-20]	; 0xffffffec
   1833c:	ldr	r0, [fp, #-16]
   18340:	bl	18260 <_start@@Base+0x3c40>
   18344:	str	r0, [fp, #-20]	; 0xffffffec
   18348:	ldr	r2, [fp, #-20]	; 0xffffffec
   1834c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18350:	cmp	r2, r3
   18354:	beq	18390 <_start@@Base+0x3d70>
   18358:	ldr	r3, [fp, #-16]
   1835c:	ldr	r3, [r3]
   18360:	mov	r0, r3
   18364:	bl	2eddc <flatcc_builder_end_struct@@Base>
   18368:	mov	r2, r0
   1836c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18370:	str	r2, [r3]
   18374:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18378:	ldr	r3, [r3]
   1837c:	cmp	r3, #0
   18380:	beq	18390 <_start@@Base+0x3d70>
   18384:	ldr	r3, [fp, #-20]	; 0xffffffec
   18388:	b	183a8 <_start@@Base+0x3d88>
   1838c:	nop			; (mov r0, r0)
   18390:	mov	r3, #33	; 0x21
   18394:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18398:	ldr	r1, [fp, #-20]	; 0xffffffec
   1839c:	ldr	r0, [fp, #-16]
   183a0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   183a4:	mov	r3, r0
   183a8:	mov	r0, r3
   183ac:	sub	sp, fp, #4
   183b0:	pop	{fp, pc}
   183b4:	push	{fp, lr}
   183b8:	add	fp, sp, #4
   183bc:	sub	sp, sp, #24
   183c0:	str	r0, [fp, #-16]
   183c4:	str	r1, [fp, #-20]	; 0xffffffec
   183c8:	str	r2, [fp, #-24]	; 0xffffffe8
   183cc:	str	r3, [fp, #-28]	; 0xffffffe4
   183d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183d4:	mov	r2, #0
   183d8:	str	r2, [r3]
   183dc:	ldr	r3, [fp, #-16]
   183e0:	ldr	r3, [r3]
   183e4:	mov	r1, #0
   183e8:	mov	r0, r3
   183ec:	bl	2fad0 <flatcc_builder_start_table@@Base>
   183f0:	mov	r3, r0
   183f4:	cmp	r3, #0
   183f8:	bne	184a8 <_start@@Base+0x3e88>
   183fc:	sub	r3, fp, #8
   18400:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18404:	ldr	r1, [fp, #-20]	; 0xffffffec
   18408:	ldr	r0, [fp, #-16]
   1840c:	bl	150c8 <_start@@Base+0xaa8>
   18410:	str	r0, [fp, #-20]	; 0xffffffec
   18414:	b	18458 <_start@@Base+0x3e38>
   18418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1841c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18420:	ldr	r0, [fp, #-16]
   18424:	bl	14cb8 <_start@@Base+0x698>
   18428:	str	r0, [fp, #-20]	; 0xffffffec
   1842c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18430:	ldr	r1, [fp, #-20]	; 0xffffffec
   18434:	ldr	r0, [fp, #-16]
   18438:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1843c:	str	r0, [fp, #-20]	; 0xffffffec
   18440:	sub	r3, fp, #8
   18444:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18448:	ldr	r1, [fp, #-20]	; 0xffffffec
   1844c:	ldr	r0, [fp, #-16]
   18450:	bl	151b0 <_start@@Base+0xb90>
   18454:	str	r0, [fp, #-20]	; 0xffffffec
   18458:	ldr	r3, [fp, #-8]
   1845c:	cmp	r3, #0
   18460:	bne	18418 <_start@@Base+0x3df8>
   18464:	ldr	r3, [fp, #-16]
   18468:	ldr	r3, [r3, #24]
   1846c:	cmp	r3, #0
   18470:	bne	184b0 <_start@@Base+0x3e90>
   18474:	ldr	r3, [fp, #-16]
   18478:	ldr	r3, [r3]
   1847c:	mov	r0, r3
   18480:	bl	30634 <flatcc_builder_end_table@@Base>
   18484:	mov	r2, r0
   18488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1848c:	str	r2, [r3]
   18490:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18494:	ldr	r3, [r3]
   18498:	cmp	r3, #0
   1849c:	beq	184b8 <_start@@Base+0x3e98>
   184a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   184a4:	b	184d4 <_start@@Base+0x3eb4>
   184a8:	nop			; (mov r0, r0)
   184ac:	b	184bc <_start@@Base+0x3e9c>
   184b0:	nop			; (mov r0, r0)
   184b4:	b	184bc <_start@@Base+0x3e9c>
   184b8:	nop			; (mov r0, r0)
   184bc:	mov	r3, #33	; 0x21
   184c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   184c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   184c8:	ldr	r0, [fp, #-16]
   184cc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   184d0:	mov	r3, r0
   184d4:	mov	r0, r3
   184d8:	sub	sp, fp, #4
   184dc:	pop	{fp, pc}
   184e0:	push	{fp, lr}
   184e4:	add	fp, sp, #4
   184e8:	sub	sp, sp, #24
   184ec:	str	r0, [fp, #-16]
   184f0:	str	r1, [fp, #-20]	; 0xffffffec
   184f4:	str	r2, [fp, #-24]	; 0xffffffe8
   184f8:	str	r3, [fp, #-28]	; 0xffffffe4
   184fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18500:	mov	r2, #0
   18504:	str	r2, [r3]
   18508:	ldr	r3, [fp, #-16]
   1850c:	ldr	r3, [r3]
   18510:	mov	r1, #0
   18514:	mov	r0, r3
   18518:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1851c:	mov	r3, r0
   18520:	cmp	r3, #0
   18524:	bne	185d4 <_start@@Base+0x3fb4>
   18528:	sub	r3, fp, #8
   1852c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18530:	ldr	r1, [fp, #-20]	; 0xffffffec
   18534:	ldr	r0, [fp, #-16]
   18538:	bl	150c8 <_start@@Base+0xaa8>
   1853c:	str	r0, [fp, #-20]	; 0xffffffec
   18540:	b	18584 <_start@@Base+0x3f64>
   18544:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18548:	ldr	r1, [fp, #-20]	; 0xffffffec
   1854c:	ldr	r0, [fp, #-16]
   18550:	bl	14cb8 <_start@@Base+0x698>
   18554:	str	r0, [fp, #-20]	; 0xffffffec
   18558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1855c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18560:	ldr	r0, [fp, #-16]
   18564:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   18568:	str	r0, [fp, #-20]	; 0xffffffec
   1856c:	sub	r3, fp, #8
   18570:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18574:	ldr	r1, [fp, #-20]	; 0xffffffec
   18578:	ldr	r0, [fp, #-16]
   1857c:	bl	151b0 <_start@@Base+0xb90>
   18580:	str	r0, [fp, #-20]	; 0xffffffec
   18584:	ldr	r3, [fp, #-8]
   18588:	cmp	r3, #0
   1858c:	bne	18544 <_start@@Base+0x3f24>
   18590:	ldr	r3, [fp, #-16]
   18594:	ldr	r3, [r3, #24]
   18598:	cmp	r3, #0
   1859c:	bne	185dc <_start@@Base+0x3fbc>
   185a0:	ldr	r3, [fp, #-16]
   185a4:	ldr	r3, [r3]
   185a8:	mov	r0, r3
   185ac:	bl	30634 <flatcc_builder_end_table@@Base>
   185b0:	mov	r2, r0
   185b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   185b8:	str	r2, [r3]
   185bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   185c0:	ldr	r3, [r3]
   185c4:	cmp	r3, #0
   185c8:	beq	185e4 <_start@@Base+0x3fc4>
   185cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   185d0:	b	18600 <_start@@Base+0x3fe0>
   185d4:	nop			; (mov r0, r0)
   185d8:	b	185e8 <_start@@Base+0x3fc8>
   185dc:	nop			; (mov r0, r0)
   185e0:	b	185e8 <_start@@Base+0x3fc8>
   185e4:	nop			; (mov r0, r0)
   185e8:	mov	r3, #33	; 0x21
   185ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   185f4:	ldr	r0, [fp, #-16]
   185f8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   185fc:	mov	r3, r0
   18600:	mov	r0, r3
   18604:	sub	sp, fp, #4
   18608:	pop	{fp, pc}
   1860c:	push	{fp, lr}
   18610:	add	fp, sp, #4
   18614:	sub	sp, sp, #16
   18618:	str	r0, [fp, #-8]
   1861c:	str	r1, [fp, #-12]
   18620:	str	r2, [fp, #-16]
   18624:	strb	r3, [fp, #-17]	; 0xffffffef
   18628:	ldr	r3, [fp, #4]
   1862c:	mov	r2, #0
   18630:	str	r2, [r3]
   18634:	ldrb	r3, [fp, #-17]	; 0xffffffef
   18638:	cmp	r3, #0
   1863c:	beq	1864c <_start@@Base+0x402c>
   18640:	cmp	r3, #1
   18644:	beq	18664 <_start@@Base+0x4044>
   18648:	b	18694 <_start@@Base+0x4074>
   1864c:	ldr	r2, [fp, #-16]
   18650:	ldr	r1, [fp, #-12]
   18654:	ldr	r0, [fp, #-8]
   18658:	bl	15d0c <_start@@Base+0x16ec>
   1865c:	mov	r3, r0
   18660:	b	18714 <_start@@Base+0x40f4>
   18664:	ldr	r3, [fp, #4]
   18668:	ldr	r2, [fp, #-16]
   1866c:	ldr	r1, [fp, #-12]
   18670:	ldr	r0, [fp, #-8]
   18674:	bl	183b4 <_start@@Base+0x3d94>
   18678:	str	r0, [fp, #-12]
   1867c:	nop			; (mov r0, r0)
   18680:	ldr	r3, [fp, #-8]
   18684:	ldr	r3, [r3, #24]
   18688:	cmp	r3, #0
   1868c:	beq	186e4 <_start@@Base+0x40c4>
   18690:	b	186dc <_start@@Base+0x40bc>
   18694:	ldr	r3, [fp, #-8]
   18698:	ldr	r3, [r3, #8]
   1869c:	and	r3, r3, #1
   186a0:	cmp	r3, #0
   186a4:	bne	186c4 <_start@@Base+0x40a4>
   186a8:	mov	r3, #15
   186ac:	ldr	r2, [fp, #-16]
   186b0:	ldr	r1, [fp, #-12]
   186b4:	ldr	r0, [fp, #-8]
   186b8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   186bc:	mov	r3, r0
   186c0:	b	18714 <_start@@Base+0x40f4>
   186c4:	ldr	r2, [fp, #-16]
   186c8:	ldr	r1, [fp, #-12]
   186cc:	ldr	r0, [fp, #-8]
   186d0:	bl	3c210 <flatcc_json_parser_generic_json@@Base>
   186d4:	mov	r3, r0
   186d8:	b	18714 <_start@@Base+0x40f4>
   186dc:	ldr	r3, [fp, #-12]
   186e0:	b	18714 <_start@@Base+0x40f4>
   186e4:	ldr	r3, [fp, #4]
   186e8:	ldr	r3, [r3]
   186ec:	cmp	r3, #0
   186f0:	bne	18710 <_start@@Base+0x40f0>
   186f4:	mov	r3, #33	; 0x21
   186f8:	ldr	r2, [fp, #-16]
   186fc:	ldr	r1, [fp, #-12]
   18700:	ldr	r0, [fp, #-8]
   18704:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   18708:	mov	r3, r0
   1870c:	b	18714 <_start@@Base+0x40f4>
   18710:	ldr	r3, [fp, #-12]
   18714:	mov	r0, r3
   18718:	sub	sp, fp, #4
   1871c:	pop	{fp, pc}
   18720:	push	{fp}		; (str fp, [sp, #-4]!)
   18724:	add	fp, sp, #0
   18728:	sub	sp, sp, #12
   1872c:	mov	r3, r0
   18730:	strb	r3, [fp, #-5]
   18734:	ldrb	r3, [fp, #-5]
   18738:	cmp	r3, #0
   1873c:	beq	1874c <_start@@Base+0x412c>
   18740:	cmp	r3, #1
   18744:	beq	18754 <_start@@Base+0x4134>
   18748:	b	1875c <_start@@Base+0x413c>
   1874c:	mov	r3, #1
   18750:	b	18760 <_start@@Base+0x4140>
   18754:	mov	r3, #1
   18758:	b	18760 <_start@@Base+0x4140>
   1875c:	mov	r3, #0
   18760:	mov	r0, r3
   18764:	add	sp, fp, #0
   18768:	pop	{fp}		; (ldr fp, [sp], #4)
   1876c:	bx	lr
   18770:	push	{fp, lr}
   18774:	add	fp, sp, #4
   18778:	sub	sp, sp, #48	; 0x30
   1877c:	str	r0, [fp, #-32]	; 0xffffffe0
   18780:	str	r1, [fp, #-36]	; 0xffffffdc
   18784:	str	r2, [fp, #-40]	; 0xffffffd8
   18788:	str	r3, [fp, #-44]	; 0xffffffd4
   1878c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18790:	str	r3, [fp, #-8]
   18794:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18798:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1879c:	bl	14f9c <_start@@Base+0x97c>
   187a0:	strd	r0, [fp, #-20]	; 0xffffffec
   187a4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   187a8:	add	r1, pc, #400	; 0x190
   187ac:	ldrd	r0, [r1]
   187b0:	cmp	r3, r1
   187b4:	cmpeq	r2, r0
   187b8:	bne	1889c <_start@@Base+0x427c>
   187bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   187c0:	add	r3, r3, #8
   187c4:	str	r3, [fp, #-36]	; 0xffffffdc
   187c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   187cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   187d0:	bl	14f9c <_start@@Base+0x97c>
   187d4:	strd	r0, [fp, #-20]	; 0xffffffec
   187d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   187dc:	add	r1, pc, #356	; 0x164
   187e0:	ldrd	r0, [r1]
   187e4:	cmp	r3, r1
   187e8:	cmpeq	r2, r0
   187ec:	bne	18894 <_start@@Base+0x4274>
   187f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   187f4:	add	r3, r3, #8
   187f8:	str	r3, [fp, #-36]	; 0xffffffdc
   187fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18800:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18804:	bl	14f9c <_start@@Base+0x97c>
   18808:	strd	r0, [fp, #-20]	; 0xffffffec
   1880c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18810:	mov	r0, #0
   18814:	mov	r1, #-16777216	; 0xff000000
   18818:	and	r2, r2, r0
   1881c:	and	r3, r3, r1
   18820:	cmp	r3, #1694498816	; 0x65000000
   18824:	cmpeq	r2, #0
   18828:	bne	1888c <_start@@Base+0x426c>
   1882c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18830:	str	r3, [fp, #-24]	; 0xffffffe8
   18834:	ldr	r3, [fp, #8]
   18838:	str	r3, [sp]
   1883c:	mov	r3, #1
   18840:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18844:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1884c:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   18850:	str	r0, [fp, #-36]	; 0xffffffdc
   18854:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1885c:	cmp	r2, r3
   18860:	beq	18884 <_start@@Base+0x4264>
   18864:	ldr	r1, [fp, #4]
   18868:	mov	r2, #1
   1886c:	mov	r3, #0
   18870:	strd	r2, [r1]
   18874:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18878:	mov	r2, #0
   1887c:	str	r2, [r3]
   18880:	b	1892c <_start@@Base+0x430c>
   18884:	ldr	r3, [fp, #-8]
   18888:	b	18930 <_start@@Base+0x4310>
   1888c:	ldr	r3, [fp, #-8]
   18890:	b	18930 <_start@@Base+0x4310>
   18894:	ldr	r3, [fp, #-8]
   18898:	b	18930 <_start@@Base+0x4310>
   1889c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   188a0:	mov	r0, #0
   188a4:	mvn	r1, #0
   188a8:	and	r2, r2, r0
   188ac:	and	r3, r3, r1
   188b0:	add	r1, pc, #152	; 0x98
   188b4:	ldrd	r0, [r1]
   188b8:	cmp	r3, r1
   188bc:	cmpeq	r2, r0
   188c0:	bne	18924 <_start@@Base+0x4304>
   188c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   188c8:	str	r3, [fp, #-24]	; 0xffffffe8
   188cc:	ldr	r3, [fp, #8]
   188d0:	str	r3, [sp]
   188d4:	mov	r3, #4
   188d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   188dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188e4:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   188e8:	str	r0, [fp, #-36]	; 0xffffffdc
   188ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   188f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188f4:	cmp	r2, r3
   188f8:	beq	1891c <_start@@Base+0x42fc>
   188fc:	ldr	r1, [fp, #4]
   18900:	mov	r2, #0
   18904:	mov	r3, #0
   18908:	strd	r2, [r1]
   1890c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18910:	mov	r2, #0
   18914:	str	r2, [r3]
   18918:	b	1892c <_start@@Base+0x430c>
   1891c:	ldr	r3, [fp, #-8]
   18920:	b	18930 <_start@@Base+0x4310>
   18924:	ldr	r3, [fp, #-8]
   18928:	b	18930 <_start@@Base+0x4310>
   1892c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18930:	mov	r0, r3
   18934:	sub	sp, fp, #4
   18938:	pop	{fp, pc}
   1893c:	nop			; (mov r0, r0)
   18940:	rsbvc	r6, r5, #116, 28	; 0x740
   18944:	stmdbmi	lr!, {r0, r5, r6, ip, lr}^
   18948:	cmnvc	r0, #-1073741800	; 0xc0000018
   1894c:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   18950:	andeq	r0, r0, r0
   18954:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   18958:	push	{fp, lr}
   1895c:	add	fp, sp, #4
   18960:	sub	sp, sp, #48	; 0x30
   18964:	str	r0, [fp, #-32]	; 0xffffffe0
   18968:	str	r1, [fp, #-36]	; 0xffffffdc
   1896c:	str	r2, [fp, #-40]	; 0xffffffd8
   18970:	str	r3, [fp, #-44]	; 0xffffffd4
   18974:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18978:	str	r3, [fp, #-8]
   1897c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18980:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18984:	bl	14f9c <_start@@Base+0x97c>
   18988:	strd	r0, [fp, #-20]	; 0xffffffec
   1898c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18990:	add	r1, pc, #456	; 0x1c8
   18994:	ldrd	r0, [r1]
   18998:	cmp	r3, r1
   1899c:	cmpeq	r2, r0
   189a0:	bhi	18a34 <_start@@Base+0x4414>
   189a4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   189a8:	mov	r0, #0
   189ac:	mvn	r1, #0
   189b0:	and	r2, r2, r0
   189b4:	and	r3, r3, r1
   189b8:	add	r1, pc, #424	; 0x1a8
   189bc:	ldrd	r0, [r1]
   189c0:	cmp	r3, r1
   189c4:	cmpeq	r2, r0
   189c8:	bne	18a2c <_start@@Base+0x440c>
   189cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   189d0:	str	r3, [fp, #-24]	; 0xffffffe8
   189d4:	ldr	r3, [fp, #8]
   189d8:	str	r3, [sp]
   189dc:	mov	r3, #4
   189e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   189e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189ec:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   189f0:	str	r0, [fp, #-36]	; 0xffffffdc
   189f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   189f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   189fc:	cmp	r2, r3
   18a00:	beq	18a24 <_start@@Base+0x4404>
   18a04:	ldr	r1, [fp, #4]
   18a08:	mvn	r2, #11
   18a0c:	mvn	r3, #0
   18a10:	strd	r2, [r1]
   18a14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18a18:	mov	r2, #1
   18a1c:	str	r2, [r3]
   18a20:	b	18b4c <_start@@Base+0x452c>
   18a24:	ldr	r3, [fp, #-8]
   18a28:	b	18b50 <_start@@Base+0x4530>
   18a2c:	ldr	r3, [fp, #-8]
   18a30:	b	18b50 <_start@@Base+0x4530>
   18a34:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18a38:	mov	r0, #0
   18a3c:	mvn	r1, #0
   18a40:	and	r2, r2, r0
   18a44:	and	r3, r3, r1
   18a48:	add	r1, pc, #288	; 0x120
   18a4c:	ldrd	r0, [r1]
   18a50:	cmp	r3, r1
   18a54:	cmpeq	r2, r0
   18a58:	bne	18abc <_start@@Base+0x449c>
   18a5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18a60:	str	r3, [fp, #-24]	; 0xffffffe8
   18a64:	ldr	r3, [fp, #8]
   18a68:	str	r3, [sp]
   18a6c:	mov	r3, #4
   18a70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18a74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a7c:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   18a80:	str	r0, [fp, #-36]	; 0xffffffdc
   18a84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a8c:	cmp	r2, r3
   18a90:	beq	18ab4 <_start@@Base+0x4494>
   18a94:	ldr	r1, [fp, #4]
   18a98:	mvn	r2, #9
   18a9c:	mvn	r3, #0
   18aa0:	strd	r2, [r1]
   18aa4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18aa8:	mov	r2, #1
   18aac:	str	r2, [r3]
   18ab0:	b	18b4c <_start@@Base+0x452c>
   18ab4:	ldr	r3, [fp, #-8]
   18ab8:	b	18b50 <_start@@Base+0x4530>
   18abc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18ac0:	mov	r0, #0
   18ac4:	mvn	r1, #0
   18ac8:	and	r2, r2, r0
   18acc:	and	r3, r3, r1
   18ad0:	add	r1, pc, #160	; 0xa0
   18ad4:	ldrd	r0, [r1]
   18ad8:	cmp	r3, r1
   18adc:	cmpeq	r2, r0
   18ae0:	bne	18b44 <_start@@Base+0x4524>
   18ae4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ae8:	str	r3, [fp, #-24]	; 0xffffffe8
   18aec:	ldr	r3, [fp, #8]
   18af0:	str	r3, [sp]
   18af4:	mov	r3, #4
   18af8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18afc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b04:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   18b08:	str	r0, [fp, #-36]	; 0xffffffdc
   18b0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18b10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b14:	cmp	r2, r3
   18b18:	beq	18b3c <_start@@Base+0x451c>
   18b1c:	ldr	r1, [fp, #4]
   18b20:	mvn	r2, #10
   18b24:	mvn	r3, #0
   18b28:	strd	r2, [r1]
   18b2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18b30:	mov	r2, #1
   18b34:	str	r2, [r3]
   18b38:	b	18b4c <_start@@Base+0x452c>
   18b3c:	ldr	r3, [fp, #-8]
   18b40:	b	18b50 <_start@@Base+0x4530>
   18b44:	ldr	r3, [fp, #-8]
   18b48:	b	18b50 <_start@@Base+0x4530>
   18b4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18b50:	mov	r0, r3
   18b54:	sub	sp, fp, #4
   18b58:	pop	{fp, pc}
   18b5c:	nop			; (mov r0, r0)
   18b60:			; <UNDEFINED> instruction: 0xffffffff
   18b64:	mcrvs	7, 3, r6, cr5, cr1, {1}
   18b68:	andeq	r0, r0, r0
   18b6c:	mcrvs	7, 3, r6, cr5, cr1, {1}
   18b70:	andeq	r0, r0, r0
   18b74:	mcrvs	7, 3, r6, cr5, cr3, {1}
   18b78:	andeq	r0, r0, r0
   18b7c:	mcrvs	7, 3, r6, cr5, cr2, {1}
   18b80:	push	{fp, lr}
   18b84:	add	fp, sp, #4
   18b88:	sub	sp, sp, #48	; 0x30
   18b8c:	str	r0, [fp, #-32]	; 0xffffffe0
   18b90:	str	r1, [fp, #-36]	; 0xffffffdc
   18b94:	str	r2, [fp, #-40]	; 0xffffffd8
   18b98:	str	r3, [fp, #-44]	; 0xffffffd4
   18b9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ba0:	str	r3, [fp, #-8]
   18ba4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ba8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18bac:	bl	14f9c <_start@@Base+0x97c>
   18bb0:	strd	r0, [fp, #-20]	; 0xffffffec
   18bb4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18bb8:	add	r1, pc, #624	; 0x270
   18bbc:	ldrd	r0, [r1]
   18bc0:	cmp	r3, r1
   18bc4:	cmpeq	r2, r0
   18bc8:	bhi	18c5c <_start@@Base+0x463c>
   18bcc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18bd0:	mov	r0, #0
   18bd4:	mvn	r1, #0
   18bd8:	and	r2, r2, r0
   18bdc:	and	r3, r3, r1
   18be0:	add	r1, pc, #592	; 0x250
   18be4:	ldrd	r0, [r1]
   18be8:	cmp	r3, r1
   18bec:	cmpeq	r2, r0
   18bf0:	bne	18c54 <_start@@Base+0x4634>
   18bf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18bf8:	str	r3, [fp, #-24]	; 0xffffffe8
   18bfc:	ldr	r3, [fp, #8]
   18c00:	str	r3, [sp]
   18c04:	mov	r3, #4
   18c08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18c0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c14:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   18c18:	str	r0, [fp, #-36]	; 0xffffffdc
   18c1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18c20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c24:	cmp	r2, r3
   18c28:	beq	18c4c <_start@@Base+0x462c>
   18c2c:	ldr	r1, [fp, #4]
   18c30:	mov	r2, #2
   18c34:	mov	r3, #0
   18c38:	strd	r2, [r1]
   18c3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18c40:	mov	r2, #0
   18c44:	str	r2, [r3]
   18c48:	b	18e1c <_start@@Base+0x47fc>
   18c4c:	ldr	r3, [fp, #-8]
   18c50:	b	18e20 <_start@@Base+0x4800>
   18c54:	ldr	r3, [fp, #-8]
   18c58:	b	18e20 <_start@@Base+0x4800>
   18c5c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18c60:	add	r1, pc, #472	; 0x1d8
   18c64:	ldrd	r0, [r1]
   18c68:	cmp	r3, r1
   18c6c:	cmpeq	r2, r0
   18c70:	bhi	18d04 <_start@@Base+0x46e4>
   18c74:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18c78:	mov	r0, #0
   18c7c:	mvn	r1, #0
   18c80:	and	r2, r2, r0
   18c84:	and	r3, r3, r1
   18c88:	add	r1, pc, #440	; 0x1b8
   18c8c:	ldrd	r0, [r1]
   18c90:	cmp	r3, r1
   18c94:	cmpeq	r2, r0
   18c98:	bne	18cfc <_start@@Base+0x46dc>
   18c9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ca0:	str	r3, [fp, #-24]	; 0xffffffe8
   18ca4:	ldr	r3, [fp, #8]
   18ca8:	str	r3, [sp]
   18cac:	mov	r3, #4
   18cb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18cb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18cbc:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   18cc0:	str	r0, [fp, #-36]	; 0xffffffdc
   18cc4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ccc:	cmp	r2, r3
   18cd0:	beq	18cf4 <_start@@Base+0x46d4>
   18cd4:	ldr	r1, [fp, #4]
   18cd8:	mov	r2, #42	; 0x2a
   18cdc:	mov	r3, #0
   18ce0:	strd	r2, [r1]
   18ce4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ce8:	mov	r2, #0
   18cec:	str	r2, [r3]
   18cf0:	b	18e1c <_start@@Base+0x47fc>
   18cf4:	ldr	r3, [fp, #-8]
   18cf8:	b	18e20 <_start@@Base+0x4800>
   18cfc:	ldr	r3, [fp, #-8]
   18d00:	b	18e20 <_start@@Base+0x4800>
   18d04:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18d08:	mvn	r0, #255	; 0xff
   18d0c:	mvn	r1, #0
   18d10:	and	r2, r2, r0
   18d14:	and	r3, r3, r1
   18d18:	add	r1, pc, #304	; 0x130
   18d1c:	ldrd	r0, [r1]
   18d20:	cmp	r3, r1
   18d24:	cmpeq	r2, r0
   18d28:	bne	18d8c <_start@@Base+0x476c>
   18d2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18d30:	str	r3, [fp, #-24]	; 0xffffffe8
   18d34:	ldr	r3, [fp, #8]
   18d38:	str	r3, [sp]
   18d3c:	mov	r3, #7
   18d40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d4c:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   18d50:	str	r0, [fp, #-36]	; 0xffffffdc
   18d54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18d58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d5c:	cmp	r2, r3
   18d60:	beq	18d84 <_start@@Base+0x4764>
   18d64:	ldr	r1, [fp, #4]
   18d68:	mvn	r2, #0
   18d6c:	mvn	r3, #0
   18d70:	strd	r2, [r1]
   18d74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18d78:	mov	r2, #1
   18d7c:	str	r2, [r3]
   18d80:	b	18e1c <_start@@Base+0x47fc>
   18d84:	ldr	r3, [fp, #-8]
   18d88:	b	18e20 <_start@@Base+0x4800>
   18d8c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18d90:	ldr	r0, [pc, #200]	; 18e60 <_start@@Base+0x4840>
   18d94:	mvn	r1, #0
   18d98:	and	r2, r2, r0
   18d9c:	and	r3, r3, r1
   18da0:	add	r1, pc, #176	; 0xb0
   18da4:	ldrd	r0, [r1]
   18da8:	cmp	r3, r1
   18dac:	cmpeq	r2, r0
   18db0:	bne	18e14 <_start@@Base+0x47f4>
   18db4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18db8:	str	r3, [fp, #-24]	; 0xffffffe8
   18dbc:	ldr	r3, [fp, #8]
   18dc0:	str	r3, [sp]
   18dc4:	mov	r3, #6
   18dc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18dcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18dd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18dd4:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   18dd8:	str	r0, [fp, #-36]	; 0xffffffdc
   18ddc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18de4:	cmp	r2, r3
   18de8:	beq	18e0c <_start@@Base+0x47ec>
   18dec:	ldr	r1, [fp, #4]
   18df0:	mvn	r2, #1
   18df4:	mvn	r3, #0
   18df8:	strd	r2, [r1]
   18dfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18e00:	mov	r2, #1
   18e04:	str	r2, [r3]
   18e08:	b	18e1c <_start@@Base+0x47fc>
   18e0c:	ldr	r3, [fp, #-8]
   18e10:	b	18e20 <_start@@Base+0x4800>
   18e14:	ldr	r3, [fp, #-8]
   18e18:	b	18e20 <_start@@Base+0x4800>
   18e1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18e20:	mov	r0, r3
   18e24:	sub	sp, fp, #4
   18e28:	pop	{fp, pc}
   18e2c:	nop			; (mov r0, r0)
   18e30:			; <UNDEFINED> instruction: 0xffffffff
   18e34:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   18e38:	andeq	r0, r0, r0
   18e3c:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   18e40:	strbvs	pc, [r6, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   18e44:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   18e48:	andeq	r0, r0, r0
   18e4c:	stmdbvs	lr!, {r1, r4, r5, sl, ip, sp, lr}^
   18e50:	strbvs	r3, [r7, #-512]!	; 0xfffffe00
   18e54:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   18e58:	strbvs	r0, [r7, #-0]!
   18e5c:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   18e60:			; <UNDEFINED> instruction: 0xffff0000
   18e64:	push	{fp, lr}
   18e68:	add	fp, sp, #4
   18e6c:	sub	sp, sp, #48	; 0x30
   18e70:	str	r0, [fp, #-32]	; 0xffffffe0
   18e74:	str	r1, [fp, #-36]	; 0xffffffdc
   18e78:	str	r2, [fp, #-40]	; 0xffffffd8
   18e7c:	str	r3, [fp, #-44]	; 0xffffffd4
   18e80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18e84:	str	r3, [fp, #-8]
   18e88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18e8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18e90:	bl	14f9c <_start@@Base+0x97c>
   18e94:	strd	r0, [fp, #-20]	; 0xffffffec
   18e98:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18e9c:	add	r1, pc, #452	; 0x1c4
   18ea0:	ldrd	r0, [r1]
   18ea4:	cmp	r3, r1
   18ea8:	cmpeq	r2, r0
   18eac:	bhi	18f40 <_start@@Base+0x4920>
   18eb0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18eb4:	mov	r0, #0
   18eb8:	mvn	r1, #0
   18ebc:	and	r2, r2, r0
   18ec0:	and	r3, r3, r1
   18ec4:	add	r1, pc, #420	; 0x1a4
   18ec8:	ldrd	r0, [r1]
   18ecc:	cmp	r3, r1
   18ed0:	cmpeq	r2, r0
   18ed4:	bne	18f38 <_start@@Base+0x4918>
   18ed8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18edc:	str	r3, [fp, #-24]	; 0xffffffe8
   18ee0:	ldr	r3, [fp, #8]
   18ee4:	str	r3, [sp]
   18ee8:	mov	r3, #4
   18eec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18ef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ef4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ef8:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   18efc:	str	r0, [fp, #-36]	; 0xffffffdc
   18f00:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f08:	cmp	r2, r3
   18f0c:	beq	18f30 <_start@@Base+0x4910>
   18f10:	ldr	r1, [fp, #4]
   18f14:	mov	r2, #3
   18f18:	mov	r3, #0
   18f1c:	strd	r2, [r1]
   18f20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18f24:	mov	r2, #0
   18f28:	str	r2, [r3]
   18f2c:	b	19058 <_start@@Base+0x4a38>
   18f30:	ldr	r3, [fp, #-8]
   18f34:	b	1905c <_start@@Base+0x4a3c>
   18f38:	ldr	r3, [fp, #-8]
   18f3c:	b	1905c <_start@@Base+0x4a3c>
   18f40:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18f44:	ldr	r0, [pc, #324]	; 19090 <_start@@Base+0x4a70>
   18f48:	mvn	r1, #0
   18f4c:	and	r2, r2, r0
   18f50:	and	r3, r3, r1
   18f54:	add	r1, pc, #284	; 0x11c
   18f58:	ldrd	r0, [r1]
   18f5c:	cmp	r3, r1
   18f60:	cmpeq	r2, r0
   18f64:	bne	18fc8 <_start@@Base+0x49a8>
   18f68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18f6c:	str	r3, [fp, #-24]	; 0xffffffe8
   18f70:	ldr	r3, [fp, #8]
   18f74:	str	r3, [sp]
   18f78:	mov	r3, #6
   18f7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18f80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f88:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   18f8c:	str	r0, [fp, #-36]	; 0xffffffdc
   18f90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f98:	cmp	r2, r3
   18f9c:	beq	18fc0 <_start@@Base+0x49a0>
   18fa0:	ldr	r1, [fp, #4]
   18fa4:	mvn	r2, #1
   18fa8:	mvn	r3, #0
   18fac:	strd	r2, [r1]
   18fb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18fb4:	mov	r2, #1
   18fb8:	str	r2, [r3]
   18fbc:	b	19058 <_start@@Base+0x4a38>
   18fc0:	ldr	r3, [fp, #-8]
   18fc4:	b	1905c <_start@@Base+0x4a3c>
   18fc8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18fcc:	mov	r0, #0
   18fd0:	mvn	r1, #0
   18fd4:	and	r2, r2, r0
   18fd8:	and	r3, r3, r1
   18fdc:	add	r1, pc, #156	; 0x9c
   18fe0:	ldrd	r0, [r1]
   18fe4:	cmp	r3, r1
   18fe8:	cmpeq	r2, r0
   18fec:	bne	19050 <_start@@Base+0x4a30>
   18ff0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ff4:	str	r3, [fp, #-24]	; 0xffffffe8
   18ff8:	ldr	r3, [fp, #8]
   18ffc:	str	r3, [sp]
   19000:	mov	r3, #4
   19004:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19008:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1900c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19010:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   19014:	str	r0, [fp, #-36]	; 0xffffffdc
   19018:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1901c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19020:	cmp	r2, r3
   19024:	beq	19048 <_start@@Base+0x4a28>
   19028:	ldr	r1, [fp, #4]
   1902c:	add	r3, pc, #84	; 0x54
   19030:	ldrd	r2, [r3]
   19034:	strd	r2, [r1]
   19038:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1903c:	mov	r2, #0
   19040:	str	r2, [r3]
   19044:	b	19058 <_start@@Base+0x4a38>
   19048:	ldr	r3, [fp, #-8]
   1904c:	b	1905c <_start@@Base+0x4a3c>
   19050:	ldr	r3, [fp, #-8]
   19054:	b	1905c <_start@@Base+0x4a3c>
   19058:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1905c:	mov	r0, r3
   19060:	sub	sp, fp, #4
   19064:	pop	{fp, pc}
   19068:			; <UNDEFINED> instruction: 0xffffffff
   1906c:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   19070:	andeq	r0, r0, r0
   19074:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   19078:	strbvs	r0, [r7, #-0]!
   1907c:	stmdavs	r5!, {r1, r2, r3, r5, r6, fp, ip, sp, lr}^
   19080:	andeq	r0, r0, r0
   19084:	stmdavs	r5!, {r1, r4, r5, fp, ip, sp, lr}^
   19088:	cdpvc	14, 10, cr11, cr15, cr15, {5}
   1908c:	andeq	r0, r0, r0
   19090:			; <UNDEFINED> instruction: 0xffff0000
   19094:	push	{fp, lr}
   19098:	add	fp, sp, #4
   1909c:	sub	sp, sp, #48	; 0x30
   190a0:	str	r0, [fp, #-32]	; 0xffffffe0
   190a4:	str	r1, [fp, #-36]	; 0xffffffdc
   190a8:	str	r2, [fp, #-40]	; 0xffffffd8
   190ac:	str	r3, [fp, #-44]	; 0xffffffd4
   190b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   190b4:	str	r3, [fp, #-8]
   190b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   190bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   190c0:	bl	14f9c <_start@@Base+0x97c>
   190c4:	strd	r0, [fp, #-20]	; 0xffffffec
   190c8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   190cc:	add	r1, pc, #452	; 0x1c4
   190d0:	ldrd	r0, [r1]
   190d4:	cmp	r3, r1
   190d8:	cmpeq	r2, r0
   190dc:	bhi	19170 <_start@@Base+0x4b50>
   190e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   190e4:	mov	r0, #0
   190e8:	mvn	r1, #0
   190ec:	and	r2, r2, r0
   190f0:	and	r3, r3, r1
   190f4:	add	r1, pc, #420	; 0x1a4
   190f8:	ldrd	r0, [r1]
   190fc:	cmp	r3, r1
   19100:	cmpeq	r2, r0
   19104:	bne	19168 <_start@@Base+0x4b48>
   19108:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1910c:	str	r3, [fp, #-24]	; 0xffffffe8
   19110:	ldr	r3, [fp, #8]
   19114:	str	r3, [sp]
   19118:	mov	r3, #4
   1911c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19120:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19128:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   1912c:	str	r0, [fp, #-36]	; 0xffffffdc
   19130:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19134:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19138:	cmp	r2, r3
   1913c:	beq	19160 <_start@@Base+0x4b40>
   19140:	ldr	r1, [fp, #4]
   19144:	mov	r2, #8
   19148:	mov	r3, #0
   1914c:	strd	r2, [r1]
   19150:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19154:	mov	r2, #0
   19158:	str	r2, [r3]
   1915c:	b	19288 <_start@@Base+0x4c68>
   19160:	ldr	r3, [fp, #-8]
   19164:	b	1928c <_start@@Base+0x4c6c>
   19168:	ldr	r3, [fp, #-8]
   1916c:	b	1928c <_start@@Base+0x4c6c>
   19170:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19174:	mov	r0, #0
   19178:	mvn	r1, #255	; 0xff
   1917c:	and	r2, r2, r0
   19180:	and	r3, r3, r1
   19184:	add	r1, pc, #284	; 0x11c
   19188:	ldrd	r0, [r1]
   1918c:	cmp	r3, r1
   19190:	cmpeq	r2, r0
   19194:	bne	191f8 <_start@@Base+0x4bd8>
   19198:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1919c:	str	r3, [fp, #-24]	; 0xffffffe8
   191a0:	ldr	r3, [fp, #8]
   191a4:	str	r3, [sp]
   191a8:	mov	r3, #3
   191ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   191b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   191b8:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   191bc:	str	r0, [fp, #-36]	; 0xffffffdc
   191c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   191c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191c8:	cmp	r2, r3
   191cc:	beq	191f0 <_start@@Base+0x4bd0>
   191d0:	ldr	r1, [fp, #4]
   191d4:	mov	r2, #1
   191d8:	mov	r3, #0
   191dc:	strd	r2, [r1]
   191e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   191e4:	mov	r2, #0
   191e8:	str	r2, [r3]
   191ec:	b	19288 <_start@@Base+0x4c68>
   191f0:	ldr	r3, [fp, #-8]
   191f4:	b	1928c <_start@@Base+0x4c6c>
   191f8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   191fc:	mov	r0, #-16777216	; 0xff000000
   19200:	mvn	r1, #0
   19204:	and	r2, r2, r0
   19208:	and	r3, r3, r1
   1920c:	add	r1, pc, #156	; 0x9c
   19210:	ldrd	r0, [r1]
   19214:	cmp	r3, r1
   19218:	cmpeq	r2, r0
   1921c:	bne	19280 <_start@@Base+0x4c60>
   19220:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19224:	str	r3, [fp, #-24]	; 0xffffffe8
   19228:	ldr	r3, [fp, #8]
   1922c:	str	r3, [sp]
   19230:	mov	r3, #5
   19234:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19238:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1923c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19240:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   19244:	str	r0, [fp, #-36]	; 0xffffffdc
   19248:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1924c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19250:	cmp	r2, r3
   19254:	beq	19278 <_start@@Base+0x4c58>
   19258:	ldr	r1, [fp, #4]
   1925c:	mov	r2, #2
   19260:	mov	r3, #0
   19264:	strd	r2, [r1]
   19268:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1926c:	mov	r2, #0
   19270:	str	r2, [r3]
   19274:	b	19288 <_start@@Base+0x4c68>
   19278:	ldr	r3, [fp, #-8]
   1927c:	b	1928c <_start@@Base+0x4c6c>
   19280:	ldr	r3, [fp, #-8]
   19284:	b	1928c <_start@@Base+0x4c6c>
   19288:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1928c:	mov	r0, r3
   19290:	sub	sp, fp, #4
   19294:	pop	{fp, pc}
   19298:	ldclvs	15, cr15, [pc, #1020]!	; 1969c <_start@@Base+0x507c>
   1929c:	ldrbmi	r6, [r2, -r5, ror #10]!
   192a0:	andeq	r0, r0, r0
   192a4:	rsbmi	r7, ip, #423624704	; 0x19400000
   192a8:	andeq	r0, r0, r0
   192ac:	rsbpl	r6, r5, #0, 8
   192b0:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   192b4:	ldrbmi	r6, [r2, -r5, ror #10]!
   192b8:	push	{fp, lr}
   192bc:	add	fp, sp, #4
   192c0:	sub	sp, sp, #16
   192c4:	str	r0, [fp, #-8]
   192c8:	str	r1, [fp, #-12]
   192cc:	str	r2, [fp, #-16]
   192d0:	strb	r3, [fp, #-17]	; 0xffffffef
   192d4:	ldr	r3, [fp, #4]
   192d8:	mov	r2, #0
   192dc:	str	r2, [r3]
   192e0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   192e4:	cmp	r3, #4
   192e8:	addls	pc, pc, r3, lsl #2
   192ec:	b	1938c <_start@@Base+0x4d6c>
   192f0:	b	19304 <_start@@Base+0x4ce4>
   192f4:	b	1931c <_start@@Base+0x4cfc>
   192f8:	b	19338 <_start@@Base+0x4d18>
   192fc:	b	19354 <_start@@Base+0x4d34>
   19300:	b	19370 <_start@@Base+0x4d50>
   19304:	ldr	r2, [fp, #-16]
   19308:	ldr	r1, [fp, #-12]
   1930c:	ldr	r0, [fp, #-8]
   19310:	bl	15d0c <_start@@Base+0x16ec>
   19314:	mov	r3, r0
   19318:	b	1941c <_start@@Base+0x4dfc>
   1931c:	ldr	r3, [fp, #4]
   19320:	ldr	r2, [fp, #-16]
   19324:	ldr	r1, [fp, #-12]
   19328:	ldr	r0, [fp, #-8]
   1932c:	bl	1e564 <_start@@Base+0x9f44>
   19330:	str	r0, [fp, #-12]
   19334:	b	193d4 <_start@@Base+0x4db4>
   19338:	ldr	r3, [fp, #4]
   1933c:	ldr	r2, [fp, #-16]
   19340:	ldr	r1, [fp, #-12]
   19344:	ldr	r0, [fp, #-8]
   19348:	bl	1a158 <_start@@Base+0x5b38>
   1934c:	str	r0, [fp, #-12]
   19350:	b	193d4 <_start@@Base+0x4db4>
   19354:	ldr	r3, [fp, #4]
   19358:	ldr	r2, [fp, #-16]
   1935c:	ldr	r1, [fp, #-12]
   19360:	ldr	r0, [fp, #-8]
   19364:	bl	184e0 <_start@@Base+0x3ec0>
   19368:	str	r0, [fp, #-12]
   1936c:	b	193d4 <_start@@Base+0x4db4>
   19370:	ldr	r3, [fp, #4]
   19374:	ldr	r2, [fp, #-16]
   19378:	ldr	r1, [fp, #-12]
   1937c:	ldr	r0, [fp, #-8]
   19380:	bl	1c2c8 <_start@@Base+0x7ca8>
   19384:	str	r0, [fp, #-12]
   19388:	b	193d4 <_start@@Base+0x4db4>
   1938c:	ldr	r3, [fp, #-8]
   19390:	ldr	r3, [r3, #8]
   19394:	and	r3, r3, #1
   19398:	cmp	r3, #0
   1939c:	bne	193bc <_start@@Base+0x4d9c>
   193a0:	mov	r3, #15
   193a4:	ldr	r2, [fp, #-16]
   193a8:	ldr	r1, [fp, #-12]
   193ac:	ldr	r0, [fp, #-8]
   193b0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   193b4:	mov	r3, r0
   193b8:	b	1941c <_start@@Base+0x4dfc>
   193bc:	ldr	r2, [fp, #-16]
   193c0:	ldr	r1, [fp, #-12]
   193c4:	ldr	r0, [fp, #-8]
   193c8:	bl	3c210 <flatcc_json_parser_generic_json@@Base>
   193cc:	mov	r3, r0
   193d0:	b	1941c <_start@@Base+0x4dfc>
   193d4:	ldr	r3, [fp, #-8]
   193d8:	ldr	r3, [r3, #24]
   193dc:	cmp	r3, #0
   193e0:	beq	193ec <_start@@Base+0x4dcc>
   193e4:	ldr	r3, [fp, #-12]
   193e8:	b	1941c <_start@@Base+0x4dfc>
   193ec:	ldr	r3, [fp, #4]
   193f0:	ldr	r3, [r3]
   193f4:	cmp	r3, #0
   193f8:	bne	19418 <_start@@Base+0x4df8>
   193fc:	mov	r3, #33	; 0x21
   19400:	ldr	r2, [fp, #-16]
   19404:	ldr	r1, [fp, #-12]
   19408:	ldr	r0, [fp, #-8]
   1940c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   19410:	mov	r3, r0
   19414:	b	1941c <_start@@Base+0x4dfc>
   19418:	ldr	r3, [fp, #-12]
   1941c:	mov	r0, r3
   19420:	sub	sp, fp, #4
   19424:	pop	{fp, pc}
   19428:	push	{fp}		; (str fp, [sp, #-4]!)
   1942c:	add	fp, sp, #0
   19430:	sub	sp, sp, #12
   19434:	mov	r3, r0
   19438:	strb	r3, [fp, #-5]
   1943c:	ldrb	r3, [fp, #-5]
   19440:	cmp	r3, #4
   19444:	addls	pc, pc, r3, lsl #2
   19448:	b	19488 <_start@@Base+0x4e68>
   1944c:	b	19460 <_start@@Base+0x4e40>
   19450:	b	19468 <_start@@Base+0x4e48>
   19454:	b	19470 <_start@@Base+0x4e50>
   19458:	b	19478 <_start@@Base+0x4e58>
   1945c:	b	19480 <_start@@Base+0x4e60>
   19460:	mov	r3, #1
   19464:	b	1948c <_start@@Base+0x4e6c>
   19468:	mov	r3, #1
   1946c:	b	1948c <_start@@Base+0x4e6c>
   19470:	mov	r3, #1
   19474:	b	1948c <_start@@Base+0x4e6c>
   19478:	mov	r3, #1
   1947c:	b	1948c <_start@@Base+0x4e6c>
   19480:	mov	r3, #1
   19484:	b	1948c <_start@@Base+0x4e6c>
   19488:	mov	r3, #0
   1948c:	mov	r0, r3
   19490:	add	sp, fp, #0
   19494:	pop	{fp}		; (ldr fp, [sp], #4)
   19498:	bx	lr
   1949c:	push	{fp, lr}
   194a0:	add	fp, sp, #4
   194a4:	sub	sp, sp, #48	; 0x30
   194a8:	str	r0, [fp, #-32]	; 0xffffffe0
   194ac:	str	r1, [fp, #-36]	; 0xffffffdc
   194b0:	str	r2, [fp, #-40]	; 0xffffffd8
   194b4:	str	r3, [fp, #-44]	; 0xffffffd4
   194b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   194bc:	str	r3, [fp, #-8]
   194c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   194c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   194c8:	bl	14f9c <_start@@Base+0x97c>
   194cc:	strd	r0, [fp, #-20]	; 0xffffffec
   194d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   194d4:	add	r1, pc, #836	; 0x344
   194d8:	ldrd	r0, [r1]
   194dc:	cmp	r3, r1
   194e0:	cmpeq	r2, r0
   194e4:	bhi	19578 <_start@@Base+0x4f58>
   194e8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   194ec:	mov	r0, #0
   194f0:	mvn	r1, #255	; 0xff
   194f4:	and	r2, r2, r0
   194f8:	and	r3, r3, r1
   194fc:	add	r1, pc, #804	; 0x324
   19500:	ldrd	r0, [r1]
   19504:	cmp	r3, r1
   19508:	cmpeq	r2, r0
   1950c:	bne	19570 <_start@@Base+0x4f50>
   19510:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19514:	str	r3, [fp, #-24]	; 0xffffffe8
   19518:	ldr	r3, [fp, #8]
   1951c:	str	r3, [sp]
   19520:	mov	r3, #3
   19524:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1952c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19530:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   19534:	str	r0, [fp, #-36]	; 0xffffffdc
   19538:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1953c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19540:	cmp	r2, r3
   19544:	beq	19568 <_start@@Base+0x4f48>
   19548:	ldr	r1, [fp, #4]
   1954c:	mov	r2, #4
   19550:	mov	r3, #0
   19554:	strd	r2, [r1]
   19558:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1955c:	mov	r2, #0
   19560:	str	r2, [r3]
   19564:	b	19810 <_start@@Base+0x51f0>
   19568:	ldr	r3, [fp, #-8]
   1956c:	b	19814 <_start@@Base+0x51f4>
   19570:	ldr	r3, [fp, #-8]
   19574:	b	19814 <_start@@Base+0x51f4>
   19578:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1957c:	add	r1, pc, #684	; 0x2ac
   19580:	ldrd	r0, [r1]
   19584:	cmp	r3, r1
   19588:	cmpeq	r2, r0
   1958c:	bne	195e8 <_start@@Base+0x4fc8>
   19590:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19594:	str	r3, [fp, #-24]	; 0xffffffe8
   19598:	ldr	r3, [fp, #8]
   1959c:	str	r3, [sp]
   195a0:	mov	r3, #8
   195a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   195a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   195b0:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   195b4:	str	r0, [fp, #-36]	; 0xffffffdc
   195b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   195bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   195c0:	cmp	r2, r3
   195c4:	beq	19668 <_start@@Base+0x5048>
   195c8:	ldr	r1, [fp, #4]
   195cc:	mov	r2, #3
   195d0:	mov	r3, #0
   195d4:	strd	r2, [r1]
   195d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   195dc:	mov	r2, #0
   195e0:	str	r2, [r3]
   195e4:	b	19810 <_start@@Base+0x51f0>
   195e8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   195ec:	mvn	r0, #255	; 0xff
   195f0:	mvn	r1, #0
   195f4:	and	r2, r2, r0
   195f8:	and	r3, r3, r1
   195fc:	add	r1, pc, #564	; 0x234
   19600:	ldrd	r0, [r1]
   19604:	cmp	r3, r1
   19608:	cmpeq	r2, r0
   1960c:	bne	19670 <_start@@Base+0x5050>
   19610:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19614:	str	r3, [fp, #-24]	; 0xffffffe8
   19618:	ldr	r3, [fp, #8]
   1961c:	str	r3, [sp]
   19620:	mov	r3, #7
   19624:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19628:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1962c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19630:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   19634:	str	r0, [fp, #-36]	; 0xffffffdc
   19638:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1963c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19640:	cmp	r2, r3
   19644:	beq	19678 <_start@@Base+0x5058>
   19648:	ldr	r1, [fp, #4]
   1964c:	mov	r2, #1
   19650:	mov	r3, #0
   19654:	strd	r2, [r1]
   19658:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1965c:	mov	r2, #0
   19660:	str	r2, [r3]
   19664:	b	19810 <_start@@Base+0x51f0>
   19668:	nop			; (mov r0, r0)
   1966c:	b	1967c <_start@@Base+0x505c>
   19670:	nop			; (mov r0, r0)
   19674:	b	1967c <_start@@Base+0x505c>
   19678:	nop			; (mov r0, r0)
   1967c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19680:	mov	r0, #0
   19684:	mvn	r1, #0
   19688:	and	r2, r2, r0
   1968c:	and	r3, r3, r1
   19690:	add	r1, pc, #424	; 0x1a8
   19694:	ldrd	r0, [r1]
   19698:	cmp	r3, r1
   1969c:	cmpeq	r2, r0
   196a0:	bne	196fc <_start@@Base+0x50dc>
   196a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   196a8:	str	r3, [fp, #-24]	; 0xffffffe8
   196ac:	ldr	r3, [fp, #8]
   196b0:	str	r3, [sp]
   196b4:	mov	r3, #4
   196b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   196bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   196c4:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   196c8:	str	r0, [fp, #-36]	; 0xffffffdc
   196cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   196d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   196d4:	cmp	r2, r3
   196d8:	beq	19704 <_start@@Base+0x50e4>
   196dc:	ldr	r1, [fp, #4]
   196e0:	mov	r2, #0
   196e4:	mov	r3, #0
   196e8:	strd	r2, [r1]
   196ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   196f0:	mov	r2, #0
   196f4:	str	r2, [r3]
   196f8:	b	19810 <_start@@Base+0x51f0>
   196fc:	nop			; (mov r0, r0)
   19700:	b	19708 <_start@@Base+0x50e8>
   19704:	nop			; (mov r0, r0)
   19708:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1970c:	add	r1, pc, #308	; 0x134
   19710:	ldrd	r0, [r1]
   19714:	cmp	r3, r1
   19718:	cmpeq	r2, r0
   1971c:	bne	19808 <_start@@Base+0x51e8>
   19720:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19724:	add	r3, r3, #8
   19728:	str	r3, [fp, #-36]	; 0xffffffdc
   1972c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19730:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19734:	bl	14f9c <_start@@Base+0x97c>
   19738:	strd	r0, [fp, #-20]	; 0xffffffec
   1973c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19740:	add	r1, pc, #264	; 0x108
   19744:	ldrd	r0, [r1]
   19748:	cmp	r3, r1
   1974c:	cmpeq	r2, r0
   19750:	bne	19800 <_start@@Base+0x51e0>
   19754:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19758:	add	r3, r3, #8
   1975c:	str	r3, [fp, #-36]	; 0xffffffdc
   19760:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19764:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19768:	bl	14f9c <_start@@Base+0x97c>
   1976c:	strd	r0, [fp, #-20]	; 0xffffffec
   19770:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19774:	mvn	r0, #255	; 0xff
   19778:	mvn	r1, #0
   1977c:	and	r2, r2, r0
   19780:	and	r3, r3, r1
   19784:	add	r1, pc, #204	; 0xcc
   19788:	ldrd	r0, [r1]
   1978c:	cmp	r3, r1
   19790:	cmpeq	r2, r0
   19794:	bne	197f8 <_start@@Base+0x51d8>
   19798:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1979c:	str	r3, [fp, #-24]	; 0xffffffe8
   197a0:	ldr	r3, [fp, #8]
   197a4:	str	r3, [sp]
   197a8:	mov	r3, #7
   197ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   197b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   197b8:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   197bc:	str	r0, [fp, #-36]	; 0xffffffdc
   197c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   197c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   197c8:	cmp	r2, r3
   197cc:	beq	197f0 <_start@@Base+0x51d0>
   197d0:	ldr	r1, [fp, #4]
   197d4:	mov	r2, #2
   197d8:	mov	r3, #0
   197dc:	strd	r2, [r1]
   197e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   197e4:	mov	r2, #0
   197e8:	str	r2, [r3]
   197ec:	b	19810 <_start@@Base+0x51f0>
   197f0:	ldr	r3, [fp, #-8]
   197f4:	b	19814 <_start@@Base+0x51f4>
   197f8:	ldr	r3, [fp, #-8]
   197fc:	b	19814 <_start@@Base+0x51f4>
   19800:	ldr	r3, [fp, #-8]
   19804:	b	19814 <_start@@Base+0x51f4>
   19808:	ldr	r3, [fp, #-8]
   1980c:	b	19814 <_start@@Base+0x51f4>
   19810:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19814:	mov	r0, r3
   19818:	sub	sp, fp, #4
   1981c:	pop	{fp, pc}
   19820:	strbtvc	r7, [r5], #-511	; 0xfffffe01
   19824:	stclmi	14, cr6, [pc, #-460]!	; 19660 <_start@@Base+0x5040>
   19828:	andeq	r0, r0, r0
   1982c:	cmnmi	ip, r0, lsl #8
   19830:	strbtvc	r7, [r5], #-562	; 0xfffffdce
   19834:	stclmi	14, cr6, [pc, #-460]!	; 19670 <_start@@Base+0x5050>
   19838:	strbtvc	r7, [r5], #-512	; 0xfffffe00
   1983c:	stclmi	14, cr6, [pc, #-460]!	; 19678 <_start@@Base+0x5058>
   19840:	andeq	r0, r0, r0
   19844:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   19848:	cmnpl	r9, #112, 26	; 0x1c00
   1984c:	strbtpl	r7, [r5], #-884	; 0xfffffc8c
   19850:	rsbvs	r6, ip, #364904448	; 0x15c00000
   19854:	cfstrdvs	mvd5, [r5], #-388	; 0xfffffe7c
   19858:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   1985c:	ldmdbvs	r4!, {r0, r2, r6, fp, sp, lr}^
   19860:	push	{fp, lr}
   19864:	add	fp, sp, #4
   19868:	sub	sp, sp, #48	; 0x30
   1986c:	str	r0, [fp, #-32]	; 0xffffffe0
   19870:	str	r1, [fp, #-36]	; 0xffffffdc
   19874:	str	r2, [fp, #-40]	; 0xffffffd8
   19878:	str	r3, [fp, #-44]	; 0xffffffd4
   1987c:	sub	r3, fp, #24
   19880:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19884:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19888:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1988c:	bl	150c8 <_start@@Base+0xaa8>
   19890:	str	r0, [fp, #-36]	; 0xffffffdc
   19894:	b	19afc <_start@@Base+0x54dc>
   19898:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1989c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   198a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   198a4:	bl	14cb8 <_start@@Base+0x698>
   198a8:	str	r0, [fp, #-36]	; 0xffffffdc
   198ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   198b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   198b4:	bl	14f9c <_start@@Base+0x97c>
   198b8:	strd	r0, [fp, #-12]
   198bc:	ldrd	r2, [fp, #-12]
   198c0:	mov	r0, #0
   198c4:	mov	r1, #-16777216	; 0xff000000
   198c8:	and	r2, r2, r0
   198cc:	and	r3, r3, r1
   198d0:	cmp	r3, #1644167168	; 0x62000000
   198d4:	cmpeq	r2, #0
   198d8:	bne	199c8 <_start@@Base+0x53a8>
   198dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   198e0:	str	r3, [fp, #-16]
   198e4:	mov	r3, #1
   198e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   198ec:	ldr	r1, [fp, #-16]
   198f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   198f4:	bl	15568 <_start@@Base+0xf48>
   198f8:	str	r0, [fp, #-36]	; 0xffffffdc
   198fc:	ldr	r2, [fp, #-16]
   19900:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19904:	cmp	r2, r3
   19908:	beq	199b0 <_start@@Base+0x5390>
   1990c:	mov	r3, #0
   19910:	strb	r3, [fp, #-25]	; 0xffffffe7
   19914:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19918:	add	r3, r3, #2
   1991c:	str	r3, [fp, #-20]	; 0xffffffec
   19920:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19924:	str	r3, [fp, #-16]
   19928:	sub	r3, fp, #25
   1992c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19930:	ldr	r1, [fp, #-16]
   19934:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19938:	bl	16348 <_start@@Base+0x1d28>
   1993c:	str	r0, [fp, #-36]	; 0xffffffdc
   19940:	ldr	r2, [fp, #-16]
   19944:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19948:	cmp	r2, r3
   1994c:	bne	1999c <_start@@Base+0x537c>
   19950:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19954:	str	r3, [fp, #-16]
   19958:	sub	r3, fp, #25
   1995c:	str	r3, [sp]
   19960:	ldr	r3, [pc, #460]	; 19b34 <_start@@Base+0x5514>
   19964:	add	r3, pc, r3
   19968:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1996c:	ldr	r1, [fp, #-16]
   19970:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19974:	bl	16ff8 <_start@@Base+0x29d8>
   19978:	str	r0, [fp, #-36]	; 0xffffffdc
   1997c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19980:	ldr	r3, [fp, #-16]
   19984:	cmp	r2, r3
   19988:	beq	19b10 <_start@@Base+0x54f0>
   1998c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19990:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19994:	cmp	r2, r3
   19998:	beq	19b10 <_start@@Base+0x54f0>
   1999c:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   199a0:	mov	r1, r3
   199a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   199a8:	bl	148f8 <_start@@Base+0x2d8>
   199ac:	b	19ae4 <_start@@Base+0x54c4>
   199b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   199b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   199b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   199bc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   199c0:	str	r0, [fp, #-36]	; 0xffffffdc
   199c4:	b	19ae4 <_start@@Base+0x54c4>
   199c8:	ldrd	r2, [fp, #-12]
   199cc:	mov	r0, #0
   199d0:	mov	r1, #-16777216	; 0xff000000
   199d4:	and	r2, r2, r0
   199d8:	and	r3, r3, r1
   199dc:	cmp	r3, #1627389952	; 0x61000000
   199e0:	cmpeq	r2, #0
   199e4:	bne	19ad0 <_start@@Base+0x54b0>
   199e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   199ec:	str	r3, [fp, #-16]
   199f0:	mov	r3, #1
   199f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   199f8:	ldr	r1, [fp, #-16]
   199fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a00:	bl	15568 <_start@@Base+0xf48>
   19a04:	str	r0, [fp, #-36]	; 0xffffffdc
   19a08:	ldr	r2, [fp, #-16]
   19a0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19a10:	cmp	r2, r3
   19a14:	beq	19ab8 <_start@@Base+0x5498>
   19a18:	mov	r3, #0
   19a1c:	strh	r3, [fp, #-28]	; 0xffffffe4
   19a20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19a24:	str	r3, [fp, #-20]	; 0xffffffec
   19a28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19a2c:	str	r3, [fp, #-16]
   19a30:	sub	r3, fp, #28
   19a34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19a38:	ldr	r1, [fp, #-16]
   19a3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a40:	bl	16278 <_start@@Base+0x1c58>
   19a44:	str	r0, [fp, #-36]	; 0xffffffdc
   19a48:	ldr	r2, [fp, #-16]
   19a4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19a50:	cmp	r2, r3
   19a54:	bne	19aa4 <_start@@Base+0x5484>
   19a58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19a5c:	str	r3, [fp, #-16]
   19a60:	sub	r3, fp, #28
   19a64:	str	r3, [sp]
   19a68:	ldr	r3, [pc, #200]	; 19b38 <_start@@Base+0x5518>
   19a6c:	add	r3, pc, r3
   19a70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19a74:	ldr	r1, [fp, #-16]
   19a78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a7c:	bl	16e64 <_start@@Base+0x2844>
   19a80:	str	r0, [fp, #-36]	; 0xffffffdc
   19a84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19a88:	ldr	r3, [fp, #-16]
   19a8c:	cmp	r2, r3
   19a90:	beq	19b10 <_start@@Base+0x54f0>
   19a94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19a98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19a9c:	cmp	r2, r3
   19aa0:	beq	19b10 <_start@@Base+0x54f0>
   19aa4:	ldrsh	r3, [fp, #-28]	; 0xffffffe4
   19aa8:	mov	r1, r3
   19aac:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ab0:	bl	14960 <_start@@Base+0x340>
   19ab4:	b	19ae4 <_start@@Base+0x54c4>
   19ab8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19abc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19ac0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ac4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   19ac8:	str	r0, [fp, #-36]	; 0xffffffdc
   19acc:	b	19ae4 <_start@@Base+0x54c4>
   19ad0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19ad4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19ad8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19adc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   19ae0:	str	r0, [fp, #-36]	; 0xffffffdc
   19ae4:	sub	r3, fp, #24
   19ae8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19aec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19af4:	bl	151b0 <_start@@Base+0xb90>
   19af8:	str	r0, [fp, #-36]	; 0xffffffdc
   19afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b00:	cmp	r3, #0
   19b04:	bne	19898 <_start@@Base+0x5278>
   19b08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19b0c:	b	19b28 <_start@@Base+0x5508>
   19b10:	mov	r3, #33	; 0x21
   19b14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19b18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b20:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   19b24:	mov	r3, r0
   19b28:	mov	r0, r3
   19b2c:	sub	sp, fp, #4
   19b30:	pop	{fp, pc}
   19b34:	andeq	sl, r4, r4, lsr #14
   19b38:	andeq	sl, r4, r8, lsr #12
   19b3c:	push	{fp, lr}
   19b40:	add	fp, sp, #4
   19b44:	sub	sp, sp, #24
   19b48:	str	r0, [fp, #-16]
   19b4c:	str	r1, [fp, #-20]	; 0xffffffec
   19b50:	str	r2, [fp, #-24]	; 0xffffffe8
   19b54:	str	r3, [fp, #-28]	; 0xffffffe4
   19b58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19b5c:	mov	r2, #0
   19b60:	str	r2, [r3]
   19b64:	ldr	r3, [fp, #-16]
   19b68:	ldr	r3, [r3]
   19b6c:	mov	r2, #2
   19b70:	mov	r1, #4
   19b74:	mov	r0, r3
   19b78:	bl	2ed3c <flatcc_builder_start_struct@@Base>
   19b7c:	str	r0, [fp, #-8]
   19b80:	ldr	r3, [fp, #-8]
   19b84:	cmp	r3, #0
   19b88:	beq	19be8 <_start@@Base+0x55c8>
   19b8c:	ldr	r3, [fp, #-8]
   19b90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b94:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b98:	ldr	r0, [fp, #-16]
   19b9c:	bl	19860 <_start@@Base+0x5240>
   19ba0:	str	r0, [fp, #-20]	; 0xffffffec
   19ba4:	ldr	r2, [fp, #-20]	; 0xffffffec
   19ba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bac:	cmp	r2, r3
   19bb0:	beq	19bec <_start@@Base+0x55cc>
   19bb4:	ldr	r3, [fp, #-16]
   19bb8:	ldr	r3, [r3]
   19bbc:	mov	r0, r3
   19bc0:	bl	2eddc <flatcc_builder_end_struct@@Base>
   19bc4:	mov	r2, r0
   19bc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19bcc:	str	r2, [r3]
   19bd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19bd4:	ldr	r3, [r3]
   19bd8:	cmp	r3, #0
   19bdc:	beq	19bec <_start@@Base+0x55cc>
   19be0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19be4:	b	19c04 <_start@@Base+0x55e4>
   19be8:	nop			; (mov r0, r0)
   19bec:	mov	r3, #33	; 0x21
   19bf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19bf4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19bf8:	ldr	r0, [fp, #-16]
   19bfc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   19c00:	mov	r3, r0
   19c04:	mov	r0, r3
   19c08:	sub	sp, fp, #4
   19c0c:	pop	{fp, pc}
   19c10:	push	{fp, lr}
   19c14:	add	fp, sp, #4
   19c18:	sub	sp, sp, #24
   19c1c:	str	r0, [fp, #-16]
   19c20:	str	r1, [fp, #-20]	; 0xffffffec
   19c24:	str	r2, [fp, #-24]	; 0xffffffe8
   19c28:	str	r3, [fp, #-28]	; 0xffffffe4
   19c2c:	sub	r3, fp, #8
   19c30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c34:	ldr	r1, [fp, #-20]	; 0xffffffec
   19c38:	ldr	r0, [fp, #-16]
   19c3c:	bl	150c8 <_start@@Base+0xaa8>
   19c40:	str	r0, [fp, #-20]	; 0xffffffec
   19c44:	b	19c74 <_start@@Base+0x5654>
   19c48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19c50:	ldr	r0, [fp, #-16]
   19c54:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   19c58:	str	r0, [fp, #-20]	; 0xffffffec
   19c5c:	sub	r3, fp, #8
   19c60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c64:	ldr	r1, [fp, #-20]	; 0xffffffec
   19c68:	ldr	r0, [fp, #-16]
   19c6c:	bl	151b0 <_start@@Base+0xb90>
   19c70:	str	r0, [fp, #-20]	; 0xffffffec
   19c74:	ldr	r3, [fp, #-8]
   19c78:	cmp	r3, #0
   19c7c:	bne	19c48 <_start@@Base+0x5628>
   19c80:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c84:	mov	r0, r3
   19c88:	sub	sp, fp, #4
   19c8c:	pop	{fp, pc}
   19c90:	push	{fp, lr}
   19c94:	add	fp, sp, #4
   19c98:	sub	sp, sp, #24
   19c9c:	str	r0, [fp, #-16]
   19ca0:	str	r1, [fp, #-20]	; 0xffffffec
   19ca4:	str	r2, [fp, #-24]	; 0xffffffe8
   19ca8:	str	r3, [fp, #-28]	; 0xffffffe4
   19cac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19cb0:	mov	r2, #0
   19cb4:	str	r2, [r3]
   19cb8:	ldr	r3, [fp, #-16]
   19cbc:	ldr	r3, [r3]
   19cc0:	mov	r2, #1
   19cc4:	mov	r1, #0
   19cc8:	mov	r0, r3
   19ccc:	bl	2ed3c <flatcc_builder_start_struct@@Base>
   19cd0:	str	r0, [fp, #-8]
   19cd4:	ldr	r3, [fp, #-8]
   19cd8:	cmp	r3, #0
   19cdc:	beq	19d3c <_start@@Base+0x571c>
   19ce0:	ldr	r3, [fp, #-8]
   19ce4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ce8:	ldr	r1, [fp, #-20]	; 0xffffffec
   19cec:	ldr	r0, [fp, #-16]
   19cf0:	bl	19c10 <_start@@Base+0x55f0>
   19cf4:	str	r0, [fp, #-20]	; 0xffffffec
   19cf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d00:	cmp	r2, r3
   19d04:	beq	19d40 <_start@@Base+0x5720>
   19d08:	ldr	r3, [fp, #-16]
   19d0c:	ldr	r3, [r3]
   19d10:	mov	r0, r3
   19d14:	bl	2eddc <flatcc_builder_end_struct@@Base>
   19d18:	mov	r2, r0
   19d1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d20:	str	r2, [r3]
   19d24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d28:	ldr	r3, [r3]
   19d2c:	cmp	r3, #0
   19d30:	beq	19d40 <_start@@Base+0x5720>
   19d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d38:	b	19d58 <_start@@Base+0x5738>
   19d3c:	nop			; (mov r0, r0)
   19d40:	mov	r3, #33	; 0x21
   19d44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d48:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d4c:	ldr	r0, [fp, #-16]
   19d50:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   19d54:	mov	r3, r0
   19d58:	mov	r0, r3
   19d5c:	sub	sp, fp, #4
   19d60:	pop	{fp, pc}
   19d64:	push	{fp, lr}
   19d68:	add	fp, sp, #4
   19d6c:	sub	sp, sp, #24
   19d70:	str	r0, [fp, #-16]
   19d74:	str	r1, [fp, #-20]	; 0xffffffec
   19d78:	str	r2, [fp, #-24]	; 0xffffffe8
   19d7c:	str	r3, [fp, #-28]	; 0xffffffe4
   19d80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d84:	mov	r2, #0
   19d88:	str	r2, [r3]
   19d8c:	ldr	r3, [fp, #-16]
   19d90:	ldr	r3, [r3]
   19d94:	mov	r1, #0
   19d98:	mov	r0, r3
   19d9c:	bl	2fad0 <flatcc_builder_start_table@@Base>
   19da0:	mov	r3, r0
   19da4:	cmp	r3, #0
   19da8:	bne	19e58 <_start@@Base+0x5838>
   19dac:	sub	r3, fp, #8
   19db0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19db4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19db8:	ldr	r0, [fp, #-16]
   19dbc:	bl	150c8 <_start@@Base+0xaa8>
   19dc0:	str	r0, [fp, #-20]	; 0xffffffec
   19dc4:	b	19e08 <_start@@Base+0x57e8>
   19dc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19dcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   19dd0:	ldr	r0, [fp, #-16]
   19dd4:	bl	14cb8 <_start@@Base+0x698>
   19dd8:	str	r0, [fp, #-20]	; 0xffffffec
   19ddc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19de0:	ldr	r1, [fp, #-20]	; 0xffffffec
   19de4:	ldr	r0, [fp, #-16]
   19de8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   19dec:	str	r0, [fp, #-20]	; 0xffffffec
   19df0:	sub	r3, fp, #8
   19df4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19df8:	ldr	r1, [fp, #-20]	; 0xffffffec
   19dfc:	ldr	r0, [fp, #-16]
   19e00:	bl	151b0 <_start@@Base+0xb90>
   19e04:	str	r0, [fp, #-20]	; 0xffffffec
   19e08:	ldr	r3, [fp, #-8]
   19e0c:	cmp	r3, #0
   19e10:	bne	19dc8 <_start@@Base+0x57a8>
   19e14:	ldr	r3, [fp, #-16]
   19e18:	ldr	r3, [r3, #24]
   19e1c:	cmp	r3, #0
   19e20:	bne	19e60 <_start@@Base+0x5840>
   19e24:	ldr	r3, [fp, #-16]
   19e28:	ldr	r3, [r3]
   19e2c:	mov	r0, r3
   19e30:	bl	30634 <flatcc_builder_end_table@@Base>
   19e34:	mov	r2, r0
   19e38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19e3c:	str	r2, [r3]
   19e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19e44:	ldr	r3, [r3]
   19e48:	cmp	r3, #0
   19e4c:	beq	19e68 <_start@@Base+0x5848>
   19e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e54:	b	19e84 <_start@@Base+0x5864>
   19e58:	nop			; (mov r0, r0)
   19e5c:	b	19e6c <_start@@Base+0x584c>
   19e60:	nop			; (mov r0, r0)
   19e64:	b	19e6c <_start@@Base+0x584c>
   19e68:	nop			; (mov r0, r0)
   19e6c:	mov	r3, #33	; 0x21
   19e70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e74:	ldr	r1, [fp, #-20]	; 0xffffffec
   19e78:	ldr	r0, [fp, #-16]
   19e7c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   19e80:	mov	r3, r0
   19e84:	mov	r0, r3
   19e88:	sub	sp, fp, #4
   19e8c:	pop	{fp, pc}
   19e90:	push	{fp, lr}
   19e94:	add	fp, sp, #4
   19e98:	sub	sp, sp, #40	; 0x28
   19e9c:	str	r0, [fp, #-32]	; 0xffffffe0
   19ea0:	str	r1, [fp, #-36]	; 0xffffffdc
   19ea4:	str	r2, [fp, #-40]	; 0xffffffd8
   19ea8:	str	r3, [fp, #-44]	; 0xffffffd4
   19eac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19eb0:	mov	r2, #0
   19eb4:	str	r2, [r3]
   19eb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ebc:	ldr	r3, [r3]
   19ec0:	mov	r1, #1
   19ec4:	mov	r0, r3
   19ec8:	bl	2fad0 <flatcc_builder_start_table@@Base>
   19ecc:	mov	r3, r0
   19ed0:	cmp	r3, #0
   19ed4:	bne	1a048 <_start@@Base+0x5a28>
   19ed8:	sub	r3, fp, #24
   19edc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19ee0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ee8:	bl	150c8 <_start@@Base+0xaa8>
   19eec:	str	r0, [fp, #-36]	; 0xffffffdc
   19ef0:	b	19ff8 <_start@@Base+0x59d8>
   19ef4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19ef8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19efc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f00:	bl	14cb8 <_start@@Base+0x698>
   19f04:	str	r0, [fp, #-36]	; 0xffffffdc
   19f08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19f0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19f10:	bl	14f9c <_start@@Base+0x97c>
   19f14:	strd	r0, [fp, #-12]
   19f18:	ldrd	r2, [fp, #-12]
   19f1c:	mov	r0, #-16777216	; 0xff000000
   19f20:	mvn	r1, #0
   19f24:	and	r2, r2, r0
   19f28:	and	r3, r3, r1
   19f2c:	add	r1, pc, #340	; 0x154
   19f30:	ldrd	r0, [r1]
   19f34:	cmp	r3, r1
   19f38:	cmpeq	r2, r0
   19f3c:	bne	19fcc <_start@@Base+0x59ac>
   19f40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19f44:	str	r3, [fp, #-16]
   19f48:	mov	r3, #5
   19f4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19f50:	ldr	r1, [fp, #-16]
   19f54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f58:	bl	15568 <_start@@Base+0xf48>
   19f5c:	str	r0, [fp, #-36]	; 0xffffffdc
   19f60:	ldr	r2, [fp, #-16]
   19f64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19f68:	cmp	r2, r3
   19f6c:	beq	19fb4 <_start@@Base+0x5994>
   19f70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f74:	ldr	r0, [r3]
   19f78:	mov	r3, #1
   19f7c:	mov	r2, #0
   19f80:	mov	r1, #0
   19f84:	bl	31fc4 <flatcc_builder_table_add@@Base>
   19f88:	str	r0, [fp, #-20]	; 0xffffffec
   19f8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f90:	cmp	r3, #0
   19f94:	beq	1a050 <_start@@Base+0x5a30>
   19f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19fa0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19fa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fa8:	bl	19c10 <_start@@Base+0x55f0>
   19fac:	str	r0, [fp, #-36]	; 0xffffffdc
   19fb0:	b	19fe0 <_start@@Base+0x59c0>
   19fb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19fb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19fbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fc0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   19fc4:	str	r0, [fp, #-36]	; 0xffffffdc
   19fc8:	b	19fe0 <_start@@Base+0x59c0>
   19fcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19fd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19fd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fd8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   19fdc:	str	r0, [fp, #-36]	; 0xffffffdc
   19fe0:	sub	r3, fp, #24
   19fe4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19fe8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19fec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ff0:	bl	151b0 <_start@@Base+0xb90>
   19ff4:	str	r0, [fp, #-36]	; 0xffffffdc
   19ff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ffc:	cmp	r3, #0
   1a000:	bne	19ef4 <_start@@Base+0x58d4>
   1a004:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a008:	ldr	r3, [r3, #24]
   1a00c:	cmp	r3, #0
   1a010:	bne	1a058 <_start@@Base+0x5a38>
   1a014:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a018:	ldr	r3, [r3]
   1a01c:	mov	r0, r3
   1a020:	bl	30634 <flatcc_builder_end_table@@Base>
   1a024:	mov	r2, r0
   1a028:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a02c:	str	r2, [r3]
   1a030:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a034:	ldr	r3, [r3]
   1a038:	cmp	r3, #0
   1a03c:	beq	1a060 <_start@@Base+0x5a40>
   1a040:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a044:	b	1a07c <_start@@Base+0x5a5c>
   1a048:	nop			; (mov r0, r0)
   1a04c:	b	1a064 <_start@@Base+0x5a44>
   1a050:	nop			; (mov r0, r0)
   1a054:	b	1a064 <_start@@Base+0x5a44>
   1a058:	nop			; (mov r0, r0)
   1a05c:	b	1a064 <_start@@Base+0x5a44>
   1a060:	nop			; (mov r0, r0)
   1a064:	mov	r3, #33	; 0x21
   1a068:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a06c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a070:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a074:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1a078:	mov	r3, r0
   1a07c:	mov	r0, r3
   1a080:	sub	sp, fp, #4
   1a084:	pop	{fp, pc}
   1a088:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   1a08c:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   1a090:	push	{fp, lr}
   1a094:	add	fp, sp, #4
   1a098:	sub	sp, sp, #48	; 0x30
   1a09c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a0a0:	str	r1, [fp, #-36]	; 0xffffffdc
   1a0a4:	str	r2, [fp, #-40]	; 0xffffffd8
   1a0a8:	str	r3, [fp, #-44]	; 0xffffffd4
   1a0ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a0b0:	str	r3, [fp, #-8]
   1a0b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a0b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a0bc:	bl	14f9c <_start@@Base+0x97c>
   1a0c0:	strd	r0, [fp, #-20]	; 0xffffffec
   1a0c4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1a0c8:	mov	r0, #0
   1a0cc:	mov	r1, #-16777216	; 0xff000000
   1a0d0:	and	r2, r2, r0
   1a0d4:	and	r3, r3, r1
   1a0d8:	cmp	r3, #2013265920	; 0x78000000
   1a0dc:	cmpeq	r2, #0
   1a0e0:	bne	1a148 <_start@@Base+0x5b28>
   1a0e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a0e8:	str	r3, [fp, #-24]	; 0xffffffe8
   1a0ec:	ldr	r3, [fp, #8]
   1a0f0:	str	r3, [sp]
   1a0f4:	mov	r3, #1
   1a0f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a0fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a104:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   1a108:	str	r0, [fp, #-36]	; 0xffffffdc
   1a10c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a114:	cmp	r2, r3
   1a118:	beq	1a140 <_start@@Base+0x5b20>
   1a11c:	ldr	r1, [fp, #4]
   1a120:	mov	r2, #0
   1a124:	mov	r3, #0
   1a128:	strd	r2, [r1]
   1a12c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a130:	mov	r2, #0
   1a134:	str	r2, [r3]
   1a138:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a13c:	b	1a14c <_start@@Base+0x5b2c>
   1a140:	ldr	r3, [fp, #-8]
   1a144:	b	1a14c <_start@@Base+0x5b2c>
   1a148:	ldr	r3, [fp, #-8]
   1a14c:	mov	r0, r3
   1a150:	sub	sp, fp, #4
   1a154:	pop	{fp, pc}
   1a158:	push	{fp, lr}
   1a15c:	add	fp, sp, #4
   1a160:	sub	sp, sp, #48	; 0x30
   1a164:	str	r0, [fp, #-32]	; 0xffffffe0
   1a168:	str	r1, [fp, #-36]	; 0xffffffdc
   1a16c:	str	r2, [fp, #-40]	; 0xffffffd8
   1a170:	str	r3, [fp, #-44]	; 0xffffffd4
   1a174:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a178:	mov	r2, #0
   1a17c:	str	r2, [r3]
   1a180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a184:	ldr	r3, [r3]
   1a188:	mov	r1, #4
   1a18c:	mov	r0, r3
   1a190:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1a194:	mov	r3, r0
   1a198:	cmp	r3, #0
   1a19c:	bne	1a7bc <_start@@Base+0x619c>
   1a1a0:	sub	r3, fp, #24
   1a1a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a1a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a1ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1b0:	bl	150c8 <_start@@Base+0xaa8>
   1a1b4:	str	r0, [fp, #-36]	; 0xffffffdc
   1a1b8:	b	1a76c <_start@@Base+0x614c>
   1a1bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a1c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a1c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1c8:	bl	14cb8 <_start@@Base+0x698>
   1a1cc:	str	r0, [fp, #-36]	; 0xffffffdc
   1a1d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a1d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a1d8:	bl	14f9c <_start@@Base+0x97c>
   1a1dc:	strd	r0, [fp, #-12]
   1a1e0:	ldrd	r2, [fp, #-12]
   1a1e4:	ldr	r0, [pc, #1008]	; 1a5dc <_start@@Base+0x5fbc>
   1a1e8:	mvn	r1, #0
   1a1ec:	and	r2, r2, r0
   1a1f0:	and	r3, r3, r1
   1a1f4:	add	r1, pc, #956	; 0x3bc
   1a1f8:	ldrd	r0, [r1]
   1a1fc:	cmp	r3, r1
   1a200:	cmpeq	r2, r0
   1a204:	bne	1a318 <_start@@Base+0x5cf8>
   1a208:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a20c:	str	r3, [fp, #-16]
   1a210:	mov	r3, #6
   1a214:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a218:	ldr	r1, [fp, #-16]
   1a21c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a220:	bl	15568 <_start@@Base+0xf48>
   1a224:	str	r0, [fp, #-36]	; 0xffffffdc
   1a228:	ldr	r2, [fp, #-16]
   1a22c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a230:	cmp	r2, r3
   1a234:	beq	1a450 <_start@@Base+0x5e30>
   1a238:	mov	r3, #0
   1a23c:	strb	r3, [fp, #-25]	; 0xffffffe7
   1a240:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a244:	str	r3, [fp, #-16]
   1a248:	sub	r3, fp, #25
   1a24c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a250:	ldr	r1, [fp, #-16]
   1a254:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a258:	bl	16348 <_start@@Base+0x1d28>
   1a25c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a260:	ldr	r2, [fp, #-16]
   1a264:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a268:	cmp	r2, r3
   1a26c:	bne	1a2bc <_start@@Base+0x5c9c>
   1a270:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a274:	str	r3, [fp, #-16]
   1a278:	sub	r3, fp, #25
   1a27c:	str	r3, [sp]
   1a280:	ldr	r3, [pc, #840]	; 1a5d0 <_start@@Base+0x5fb0>
   1a284:	add	r3, pc, r3
   1a288:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a28c:	ldr	r1, [fp, #-16]
   1a290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a294:	bl	16ff8 <_start@@Base+0x29d8>
   1a298:	str	r0, [fp, #-36]	; 0xffffffdc
   1a29c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a2a0:	ldr	r3, [fp, #-16]
   1a2a4:	cmp	r2, r3
   1a2a8:	beq	1a7f0 <_start@@Base+0x61d0>
   1a2ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a2b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a2b4:	cmp	r2, r3
   1a2b8:	beq	1a7f0 <_start@@Base+0x61d0>
   1a2bc:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   1a2c0:	cmp	r3, #2
   1a2c4:	bne	1a2dc <_start@@Base+0x5cbc>
   1a2c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a2cc:	ldr	r3, [r3, #8]
   1a2d0:	and	r3, r3, #2
   1a2d4:	cmp	r3, #0
   1a2d8:	beq	1a750 <_start@@Base+0x6130>
   1a2dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a2e0:	ldr	r0, [r3]
   1a2e4:	mov	r3, #1
   1a2e8:	mov	r2, #1
   1a2ec:	mov	r1, #1
   1a2f0:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1a2f4:	str	r0, [fp, #-20]	; 0xffffffec
   1a2f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a2fc:	cmp	r3, #0
   1a300:	beq	1a7c4 <_start@@Base+0x61a4>
   1a304:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   1a308:	mov	r1, r3
   1a30c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a310:	bl	148f8 <_start@@Base+0x2d8>
   1a314:	b	1a750 <_start@@Base+0x6130>
   1a318:	ldrd	r2, [fp, #-12]
   1a31c:	mov	r0, #-16777216	; 0xff000000
   1a320:	mvn	r1, #0
   1a324:	and	r2, r2, r0
   1a328:	and	r3, r3, r1
   1a32c:	add	r1, pc, #652	; 0x28c
   1a330:	ldrd	r0, [r1]
   1a334:	cmp	r3, r1
   1a338:	cmpeq	r2, r0
   1a33c:	bne	1a458 <_start@@Base+0x5e38>
   1a340:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a344:	str	r3, [fp, #-16]
   1a348:	mov	r3, #5
   1a34c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a350:	ldr	r1, [fp, #-16]
   1a354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a358:	bl	15568 <_start@@Base+0xf48>
   1a35c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a360:	ldr	r2, [fp, #-16]
   1a364:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a368:	cmp	r2, r3
   1a36c:	beq	1a460 <_start@@Base+0x5e40>
   1a370:	mov	r3, #0
   1a374:	strb	r3, [fp, #-26]	; 0xffffffe6
   1a378:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a37c:	str	r3, [fp, #-16]
   1a380:	sub	r3, fp, #26
   1a384:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a388:	ldr	r1, [fp, #-16]
   1a38c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a390:	bl	16348 <_start@@Base+0x1d28>
   1a394:	str	r0, [fp, #-36]	; 0xffffffdc
   1a398:	ldr	r2, [fp, #-16]
   1a39c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a3a0:	cmp	r2, r3
   1a3a4:	bne	1a3f4 <_start@@Base+0x5dd4>
   1a3a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a3ac:	str	r3, [fp, #-16]
   1a3b0:	sub	r3, fp, #26
   1a3b4:	str	r3, [sp]
   1a3b8:	ldr	r3, [pc, #532]	; 1a5d4 <_start@@Base+0x5fb4>
   1a3bc:	add	r3, pc, r3
   1a3c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a3c4:	ldr	r1, [fp, #-16]
   1a3c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a3cc:	bl	16ff8 <_start@@Base+0x29d8>
   1a3d0:	str	r0, [fp, #-36]	; 0xffffffdc
   1a3d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a3d8:	ldr	r3, [fp, #-16]
   1a3dc:	cmp	r2, r3
   1a3e0:	beq	1a7f0 <_start@@Base+0x61d0>
   1a3e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a3e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a3ec:	cmp	r2, r3
   1a3f0:	beq	1a7f0 <_start@@Base+0x61d0>
   1a3f4:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
   1a3f8:	cmp	r3, #2
   1a3fc:	bne	1a414 <_start@@Base+0x5df4>
   1a400:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a404:	ldr	r3, [r3, #8]
   1a408:	and	r3, r3, #2
   1a40c:	cmp	r3, #0
   1a410:	beq	1a750 <_start@@Base+0x6130>
   1a414:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a418:	ldr	r0, [r3]
   1a41c:	mov	r3, #1
   1a420:	mov	r2, #1
   1a424:	mov	r1, #0
   1a428:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1a42c:	str	r0, [fp, #-20]	; 0xffffffec
   1a430:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a434:	cmp	r3, #0
   1a438:	beq	1a7cc <_start@@Base+0x61ac>
   1a43c:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
   1a440:	mov	r1, r3
   1a444:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a448:	bl	148f8 <_start@@Base+0x2d8>
   1a44c:	b	1a750 <_start@@Base+0x6130>
   1a450:	nop			; (mov r0, r0)
   1a454:	b	1a464 <_start@@Base+0x5e44>
   1a458:	nop			; (mov r0, r0)
   1a45c:	b	1a464 <_start@@Base+0x5e44>
   1a460:	nop			; (mov r0, r0)
   1a464:	ldrd	r2, [fp, #-12]
   1a468:	mov	r0, #0
   1a46c:	mvn	r1, #255	; 0xff
   1a470:	and	r2, r2, r0
   1a474:	and	r3, r3, r1
   1a478:	add	r1, pc, #328	; 0x148
   1a47c:	ldrd	r0, [r1]
   1a480:	cmp	r3, r1
   1a484:	cmpeq	r2, r0
   1a488:	bne	1a5e8 <_start@@Base+0x5fc8>
   1a48c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a490:	str	r3, [fp, #-16]
   1a494:	mov	r3, #3
   1a498:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a49c:	ldr	r1, [fp, #-16]
   1a4a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4a4:	bl	15568 <_start@@Base+0xf48>
   1a4a8:	str	r0, [fp, #-36]	; 0xffffffdc
   1a4ac:	ldr	r2, [fp, #-16]
   1a4b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a4b4:	cmp	r2, r3
   1a4b8:	beq	1a59c <_start@@Base+0x5f7c>
   1a4bc:	mov	r3, #0
   1a4c0:	strb	r3, [fp, #-27]	; 0xffffffe5
   1a4c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a4c8:	str	r3, [fp, #-16]
   1a4cc:	sub	r3, fp, #27
   1a4d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a4d4:	ldr	r1, [fp, #-16]
   1a4d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4dc:	bl	16004 <_start@@Base+0x19e4>
   1a4e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1a4e4:	ldr	r2, [fp, #-16]
   1a4e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a4ec:	cmp	r2, r3
   1a4f0:	bne	1a540 <_start@@Base+0x5f20>
   1a4f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a4f8:	str	r3, [fp, #-16]
   1a4fc:	sub	r3, fp, #27
   1a500:	str	r3, [sp]
   1a504:	ldr	r3, [pc, #204]	; 1a5d8 <_start@@Base+0x5fb8>
   1a508:	add	r3, pc, r3
   1a50c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a510:	ldr	r1, [fp, #-16]
   1a514:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a518:	bl	169c8 <_start@@Base+0x23a8>
   1a51c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a520:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a524:	ldr	r3, [fp, #-16]
   1a528:	cmp	r2, r3
   1a52c:	beq	1a7f0 <_start@@Base+0x61d0>
   1a530:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a534:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a538:	cmp	r2, r3
   1a53c:	beq	1a7f0 <_start@@Base+0x61d0>
   1a540:	ldrb	r3, [fp, #-27]	; 0xffffffe5
   1a544:	cmp	r3, #2
   1a548:	bne	1a560 <_start@@Base+0x5f40>
   1a54c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a550:	ldr	r3, [r3, #8]
   1a554:	and	r3, r3, #2
   1a558:	cmp	r3, #0
   1a55c:	beq	1a754 <_start@@Base+0x6134>
   1a560:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a564:	ldr	r0, [r3]
   1a568:	mov	r3, #1
   1a56c:	mov	r2, #1
   1a570:	mov	r1, #3
   1a574:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1a578:	str	r0, [fp, #-20]	; 0xffffffec
   1a57c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a580:	cmp	r3, #0
   1a584:	beq	1a7d4 <_start@@Base+0x61b4>
   1a588:	ldrb	r3, [fp, #-27]	; 0xffffffe5
   1a58c:	mov	r1, r3
   1a590:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a594:	bl	14770 <_start@@Base+0x150>
   1a598:	b	1a754 <_start@@Base+0x6134>
   1a59c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a5a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a5a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5a8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1a5ac:	str	r0, [fp, #-36]	; 0xffffffdc
   1a5b0:	b	1a754 <_start@@Base+0x6134>
   1a5b4:	nop			; (mov r0, r0)
   1a5b8:	eorsvc	r0, r2, #0
   1a5bc:	cmnvs	pc, #28416	; 0x6f00
   1a5c0:	andvc	r0, r0, #0
   1a5c4:	cmnvs	pc, #28416	; 0x6f00
   1a5c8:	andeq	r0, r0, r0
   1a5cc:	strbvc	r3, [r3, #-512]!	; 0xfffffe00
   1a5d0:	andeq	r9, r4, ip, lsl lr
   1a5d4:	strdeq	r9, [r4], -r4
   1a5d8:			; <UNDEFINED> instruction: 0x00049bb8
   1a5dc:			; <UNDEFINED> instruction: 0xffff0000
   1a5e0:	strbvc	r0, [r3, #-0]!
   1a5e4:	andeq	r9, r4, r0, asr #20
   1a5e8:	ldrd	r2, [fp, #-12]
   1a5ec:	mov	r0, #0
   1a5f0:	ldr	r1, [pc, #-28]	; 1a5dc <_start@@Base+0x5fbc>
   1a5f4:	and	r2, r2, r0
   1a5f8:	and	r3, r3, r1
   1a5fc:	mov	r0, #0
   1a600:	ldr	r1, [pc, #-40]	; 1a5e0 <_start@@Base+0x5fc0>
   1a604:	cmp	r3, r1
   1a608:	cmpeq	r2, r0
   1a60c:	bne	1a738 <_start@@Base+0x6118>
   1a610:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a614:	str	r3, [fp, #-16]
   1a618:	mov	r3, #2
   1a61c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a620:	ldr	r1, [fp, #-16]
   1a624:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a628:	bl	15568 <_start@@Base+0xf48>
   1a62c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a630:	ldr	r2, [fp, #-16]
   1a634:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a638:	cmp	r2, r3
   1a63c:	beq	1a720 <_start@@Base+0x6100>
   1a640:	mov	r3, #0
   1a644:	strb	r3, [fp, #-28]	; 0xffffffe4
   1a648:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a64c:	str	r3, [fp, #-16]
   1a650:	sub	r3, fp, #28
   1a654:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a658:	ldr	r1, [fp, #-16]
   1a65c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a660:	bl	16004 <_start@@Base+0x19e4>
   1a664:	str	r0, [fp, #-36]	; 0xffffffdc
   1a668:	ldr	r2, [fp, #-16]
   1a66c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a670:	cmp	r2, r3
   1a674:	bne	1a6c4 <_start@@Base+0x60a4>
   1a678:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a67c:	str	r3, [fp, #-16]
   1a680:	sub	r3, fp, #28
   1a684:	str	r3, [sp]
   1a688:	ldr	r3, [pc, #-172]	; 1a5e4 <_start@@Base+0x5fc4>
   1a68c:	add	r3, pc, r3
   1a690:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a694:	ldr	r1, [fp, #-16]
   1a698:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a69c:	bl	169c8 <_start@@Base+0x23a8>
   1a6a0:	str	r0, [fp, #-36]	; 0xffffffdc
   1a6a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a6a8:	ldr	r3, [fp, #-16]
   1a6ac:	cmp	r2, r3
   1a6b0:	beq	1a7f0 <_start@@Base+0x61d0>
   1a6b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a6b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a6bc:	cmp	r2, r3
   1a6c0:	beq	1a7f0 <_start@@Base+0x61d0>
   1a6c4:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   1a6c8:	cmp	r3, #2
   1a6cc:	bne	1a6e4 <_start@@Base+0x60c4>
   1a6d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a6d4:	ldr	r3, [r3, #8]
   1a6d8:	and	r3, r3, #2
   1a6dc:	cmp	r3, #0
   1a6e0:	beq	1a754 <_start@@Base+0x6134>
   1a6e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a6e8:	ldr	r0, [r3]
   1a6ec:	mov	r3, #1
   1a6f0:	mov	r2, #1
   1a6f4:	mov	r1, #2
   1a6f8:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1a6fc:	str	r0, [fp, #-20]	; 0xffffffec
   1a700:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a704:	cmp	r3, #0
   1a708:	beq	1a7dc <_start@@Base+0x61bc>
   1a70c:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   1a710:	mov	r1, r3
   1a714:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a718:	bl	14770 <_start@@Base+0x150>
   1a71c:	b	1a754 <_start@@Base+0x6134>
   1a720:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a724:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a728:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a72c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1a730:	str	r0, [fp, #-36]	; 0xffffffdc
   1a734:	b	1a754 <_start@@Base+0x6134>
   1a738:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a73c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a740:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a744:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1a748:	str	r0, [fp, #-36]	; 0xffffffdc
   1a74c:	b	1a754 <_start@@Base+0x6134>
   1a750:	nop			; (mov r0, r0)
   1a754:	sub	r3, fp, #24
   1a758:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a75c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a760:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a764:	bl	151b0 <_start@@Base+0xb90>
   1a768:	str	r0, [fp, #-36]	; 0xffffffdc
   1a76c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a770:	cmp	r3, #0
   1a774:	bne	1a1bc <_start@@Base+0x5b9c>
   1a778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a77c:	ldr	r3, [r3, #24]
   1a780:	cmp	r3, #0
   1a784:	bne	1a7e4 <_start@@Base+0x61c4>
   1a788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a78c:	ldr	r3, [r3]
   1a790:	mov	r0, r3
   1a794:	bl	30634 <flatcc_builder_end_table@@Base>
   1a798:	mov	r2, r0
   1a79c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a7a0:	str	r2, [r3]
   1a7a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a7a8:	ldr	r3, [r3]
   1a7ac:	cmp	r3, #0
   1a7b0:	beq	1a7ec <_start@@Base+0x61cc>
   1a7b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a7b8:	b	1a808 <_start@@Base+0x61e8>
   1a7bc:	nop			; (mov r0, r0)
   1a7c0:	b	1a7f0 <_start@@Base+0x61d0>
   1a7c4:	nop			; (mov r0, r0)
   1a7c8:	b	1a7f0 <_start@@Base+0x61d0>
   1a7cc:	nop			; (mov r0, r0)
   1a7d0:	b	1a7f0 <_start@@Base+0x61d0>
   1a7d4:	nop			; (mov r0, r0)
   1a7d8:	b	1a7f0 <_start@@Base+0x61d0>
   1a7dc:	nop			; (mov r0, r0)
   1a7e0:	b	1a7f0 <_start@@Base+0x61d0>
   1a7e4:	nop			; (mov r0, r0)
   1a7e8:	b	1a7f0 <_start@@Base+0x61d0>
   1a7ec:	nop			; (mov r0, r0)
   1a7f0:	mov	r3, #33	; 0x21
   1a7f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a7f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a7fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a800:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1a804:	mov	r3, r0
   1a808:	mov	r0, r3
   1a80c:	sub	sp, fp, #4
   1a810:	pop	{fp, pc}
   1a814:	push	{fp, lr}
   1a818:	add	fp, sp, #4
   1a81c:	sub	sp, sp, #88	; 0x58
   1a820:	str	r0, [fp, #-72]	; 0xffffffb8
   1a824:	str	r1, [fp, #-76]	; 0xffffffb4
   1a828:	str	r2, [fp, #-80]	; 0xffffffb0
   1a82c:	str	r3, [fp, #-84]	; 0xffffffac
   1a830:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a834:	mov	r2, #0
   1a838:	str	r2, [r3]
   1a83c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a840:	ldr	r3, [r3]
   1a844:	mov	r1, #6
   1a848:	mov	r0, r3
   1a84c:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1a850:	mov	r3, r0
   1a854:	cmp	r3, #0
   1a858:	bne	1b144 <_start@@Base+0x6b24>
   1a85c:	sub	r3, fp, #24
   1a860:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a864:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a868:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a86c:	bl	150c8 <_start@@Base+0xaa8>
   1a870:	str	r0, [fp, #-76]	; 0xffffffb4
   1a874:	b	1b0f4 <_start@@Base+0x6ad4>
   1a878:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a87c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a880:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a884:	bl	14cb8 <_start@@Base+0x698>
   1a888:	str	r0, [fp, #-76]	; 0xffffffb4
   1a88c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a890:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a894:	bl	14f9c <_start@@Base+0x97c>
   1a898:	strd	r0, [fp, #-12]
   1a89c:	ldrd	r2, [fp, #-12]
   1a8a0:	add	r1, pc, #936	; 0x3a8
   1a8a4:	ldrd	r0, [r1]
   1a8a8:	cmp	r3, r1
   1a8ac:	cmpeq	r2, r0
   1a8b0:	bhi	1a980 <_start@@Base+0x6360>
   1a8b4:	ldrd	r2, [fp, #-12]
   1a8b8:	ldr	r0, [pc, #952]	; 1ac78 <_start@@Base+0x6658>
   1a8bc:	mvn	r1, #0
   1a8c0:	and	r2, r2, r0
   1a8c4:	and	r3, r3, r1
   1a8c8:	add	r1, pc, #904	; 0x388
   1a8cc:	ldrd	r0, [r1]
   1a8d0:	cmp	r3, r1
   1a8d4:	cmpeq	r2, r0
   1a8d8:	bne	1a968 <_start@@Base+0x6348>
   1a8dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a8e0:	str	r3, [fp, #-16]
   1a8e4:	mov	r3, #6
   1a8e8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a8ec:	ldr	r1, [fp, #-16]
   1a8f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a8f4:	bl	15568 <_start@@Base+0xf48>
   1a8f8:	str	r0, [fp, #-76]	; 0xffffffb4
   1a8fc:	ldr	r2, [fp, #-16]
   1a900:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a904:	cmp	r2, r3
   1a908:	beq	1a950 <_start@@Base+0x6330>
   1a90c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a910:	ldr	r0, [r3]
   1a914:	mov	r3, #1
   1a918:	mov	r2, #0
   1a91c:	mov	r1, #0
   1a920:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1a924:	str	r0, [fp, #-20]	; 0xffffffec
   1a928:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a92c:	cmp	r3, #0
   1a930:	beq	1b14c <_start@@Base+0x6b2c>
   1a934:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a938:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a93c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a940:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a944:	bl	18260 <_start@@Base+0x3c40>
   1a948:	str	r0, [fp, #-76]	; 0xffffffb4
   1a94c:	b	1b0dc <_start@@Base+0x6abc>
   1a950:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a954:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a958:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a95c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1a960:	str	r0, [fp, #-76]	; 0xffffffb4
   1a964:	b	1b0dc <_start@@Base+0x6abc>
   1a968:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a96c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a970:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a974:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1a978:	str	r0, [fp, #-76]	; 0xffffffb4
   1a97c:	b	1b0dc <_start@@Base+0x6abc>
   1a980:	ldrd	r2, [fp, #-12]
   1a984:	add	r1, pc, #724	; 0x2d4
   1a988:	ldrd	r0, [r1]
   1a98c:	cmp	r3, r1
   1a990:	cmpeq	r2, r0
   1a994:	bhi	1ac84 <_start@@Base+0x6664>
   1a998:	ldrd	r2, [fp, #-12]
   1a99c:	mvn	r0, #255	; 0xff
   1a9a0:	mvn	r1, #0
   1a9a4:	and	r2, r2, r0
   1a9a8:	and	r3, r3, r1
   1a9ac:	add	r1, pc, #692	; 0x2b4
   1a9b0:	ldrd	r0, [r1]
   1a9b4:	cmp	r3, r1
   1a9b8:	cmpeq	r2, r0
   1a9bc:	bne	1aae8 <_start@@Base+0x64c8>
   1a9c0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a9c4:	str	r3, [fp, #-16]
   1a9c8:	mov	r3, #7
   1a9cc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a9d0:	ldr	r1, [fp, #-16]
   1a9d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a9d8:	bl	15568 <_start@@Base+0xf48>
   1a9dc:	str	r0, [fp, #-76]	; 0xffffffb4
   1a9e0:	ldr	r2, [fp, #-16]
   1a9e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a9e8:	cmp	r2, r3
   1a9ec:	beq	1aad0 <_start@@Base+0x64b0>
   1a9f0:	mov	r2, #0
   1a9f4:	mov	r3, #0
   1a9f8:	strd	r2, [fp, #-36]	; 0xffffffdc
   1a9fc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1aa00:	str	r3, [fp, #-16]
   1aa04:	sub	r3, fp, #36	; 0x24
   1aa08:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aa0c:	ldr	r1, [fp, #-16]
   1aa10:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aa14:	bl	160d4 <_start@@Base+0x1ab4>
   1aa18:	str	r0, [fp, #-76]	; 0xffffffb4
   1aa1c:	ldr	r2, [fp, #-16]
   1aa20:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1aa24:	cmp	r2, r3
   1aa28:	bne	1aa78 <_start@@Base+0x6458>
   1aa2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1aa30:	str	r3, [fp, #-16]
   1aa34:	sub	r3, fp, #36	; 0x24
   1aa38:	str	r3, [sp]
   1aa3c:	ldr	r3, [pc, #568]	; 1ac7c <_start@@Base+0x665c>
   1aa40:	add	r3, pc, r3
   1aa44:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aa48:	ldr	r1, [fp, #-16]
   1aa4c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aa50:	bl	16b50 <_start@@Base+0x2530>
   1aa54:	str	r0, [fp, #-76]	; 0xffffffb4
   1aa58:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1aa5c:	ldr	r3, [fp, #-16]
   1aa60:	cmp	r2, r3
   1aa64:	beq	1b188 <_start@@Base+0x6b68>
   1aa68:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1aa6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1aa70:	cmp	r2, r3
   1aa74:	beq	1b188 <_start@@Base+0x6b68>
   1aa78:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1aa7c:	orrs	r3, r2, r3
   1aa80:	bne	1aa98 <_start@@Base+0x6478>
   1aa84:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1aa88:	ldr	r3, [r3, #8]
   1aa8c:	and	r3, r3, #2
   1aa90:	cmp	r3, #0
   1aa94:	beq	1b0dc <_start@@Base+0x6abc>
   1aa98:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1aa9c:	ldr	r0, [r3]
   1aaa0:	mov	r3, #8
   1aaa4:	mov	r2, #8
   1aaa8:	mov	r1, #2
   1aaac:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1aab0:	str	r0, [fp, #-20]	; 0xffffffec
   1aab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aab8:	cmp	r3, #0
   1aabc:	beq	1b154 <_start@@Base+0x6b34>
   1aac0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1aac4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aac8:	bl	14a20 <_start@@Base+0x400>
   1aacc:	b	1b0dc <_start@@Base+0x6abc>
   1aad0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aad4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1aad8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aadc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1aae0:	str	r0, [fp, #-76]	; 0xffffffb4
   1aae4:	b	1b0dc <_start@@Base+0x6abc>
   1aae8:	ldrd	r2, [fp, #-12]
   1aaec:	ldr	r0, [pc, #388]	; 1ac78 <_start@@Base+0x6658>
   1aaf0:	mvn	r1, #0
   1aaf4:	and	r2, r2, r0
   1aaf8:	and	r3, r3, r1
   1aafc:	add	r1, pc, #364	; 0x16c
   1ab00:	ldrd	r0, [r1]
   1ab04:	cmp	r3, r1
   1ab08:	cmpeq	r2, r0
   1ab0c:	bne	1ac38 <_start@@Base+0x6618>
   1ab10:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ab14:	str	r3, [fp, #-16]
   1ab18:	mov	r3, #6
   1ab1c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ab20:	ldr	r1, [fp, #-16]
   1ab24:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ab28:	bl	15568 <_start@@Base+0xf48>
   1ab2c:	str	r0, [fp, #-76]	; 0xffffffb4
   1ab30:	ldr	r2, [fp, #-16]
   1ab34:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ab38:	cmp	r2, r3
   1ab3c:	beq	1ac20 <_start@@Base+0x6600>
   1ab40:	mov	r2, #0
   1ab44:	mov	r3, #0
   1ab48:	strd	r2, [fp, #-44]	; 0xffffffd4
   1ab4c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ab50:	str	r3, [fp, #-16]
   1ab54:	sub	r3, fp, #44	; 0x2c
   1ab58:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ab5c:	ldr	r1, [fp, #-16]
   1ab60:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ab64:	bl	160d4 <_start@@Base+0x1ab4>
   1ab68:	str	r0, [fp, #-76]	; 0xffffffb4
   1ab6c:	ldr	r2, [fp, #-16]
   1ab70:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ab74:	cmp	r2, r3
   1ab78:	bne	1abc8 <_start@@Base+0x65a8>
   1ab7c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ab80:	str	r3, [fp, #-16]
   1ab84:	sub	r3, fp, #44	; 0x2c
   1ab88:	str	r3, [sp]
   1ab8c:	ldr	r3, [pc, #236]	; 1ac80 <_start@@Base+0x6660>
   1ab90:	add	r3, pc, r3
   1ab94:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ab98:	ldr	r1, [fp, #-16]
   1ab9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aba0:	bl	16b50 <_start@@Base+0x2530>
   1aba4:	str	r0, [fp, #-76]	; 0xffffffb4
   1aba8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1abac:	ldr	r3, [fp, #-16]
   1abb0:	cmp	r2, r3
   1abb4:	beq	1b188 <_start@@Base+0x6b68>
   1abb8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1abbc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1abc0:	cmp	r2, r3
   1abc4:	beq	1b188 <_start@@Base+0x6b68>
   1abc8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1abcc:	orrs	r3, r2, r3
   1abd0:	bne	1abe8 <_start@@Base+0x65c8>
   1abd4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1abd8:	ldr	r3, [r3, #8]
   1abdc:	and	r3, r3, #2
   1abe0:	cmp	r3, #0
   1abe4:	beq	1b0dc <_start@@Base+0x6abc>
   1abe8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1abec:	ldr	r0, [r3]
   1abf0:	mov	r3, #8
   1abf4:	mov	r2, #8
   1abf8:	mov	r1, #1
   1abfc:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1ac00:	str	r0, [fp, #-20]	; 0xffffffec
   1ac04:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac08:	cmp	r3, #0
   1ac0c:	beq	1b15c <_start@@Base+0x6b3c>
   1ac10:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ac14:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac18:	bl	14a20 <_start@@Base+0x400>
   1ac1c:	b	1b0dc <_start@@Base+0x6abc>
   1ac20:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ac24:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1ac28:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ac2c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ac30:	str	r0, [fp, #-76]	; 0xffffffb4
   1ac34:	b	1b0dc <_start@@Base+0x6abc>
   1ac38:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ac3c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1ac40:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ac44:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ac48:	str	r0, [fp, #-76]	; 0xffffffb4
   1ac4c:	b	1b0dc <_start@@Base+0x6abc>
   1ac50:	strdvs	pc, [fp, #-255]!	; 0xffffff01
   1ac54:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1ac58:	cmnvs	ip, r0
   1ac5c:	strbvs	r6, [ip, -r2, ror #30]!
   1ac60:	strdvs	r3, [ip, #-47]!	; 0xffffffd1
   1ac64:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1ac68:	cmnvs	ip, r0, lsl #4
   1ac6c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1ac70:	cmnvs	ip, r0
   1ac74:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1ac78:			; <UNDEFINED> instruction: 0xffff0000
   1ac7c:	muleq	r4, r8, r6
   1ac80:	andeq	r9, r4, r8, asr r5
   1ac84:	ldrd	r2, [fp, #-12]
   1ac88:	add	r1, pc, #712	; 0x2c8
   1ac8c:	ldrd	r0, [r1]
   1ac90:	cmp	r3, r1
   1ac94:	cmpeq	r2, r0
   1ac98:	bhi	1ae04 <_start@@Base+0x67e4>
   1ac9c:	ldrd	r2, [fp, #-12]
   1aca0:	mvn	r0, #255	; 0xff
   1aca4:	mvn	r1, #0
   1aca8:	and	r2, r2, r0
   1acac:	and	r3, r3, r1
   1acb0:	add	r1, pc, #680	; 0x2a8
   1acb4:	ldrd	r0, [r1]
   1acb8:	cmp	r3, r1
   1acbc:	cmpeq	r2, r0
   1acc0:	bne	1adec <_start@@Base+0x67cc>
   1acc4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1acc8:	str	r3, [fp, #-16]
   1accc:	mov	r3, #7
   1acd0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1acd4:	ldr	r1, [fp, #-16]
   1acd8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1acdc:	bl	15568 <_start@@Base+0xf48>
   1ace0:	str	r0, [fp, #-76]	; 0xffffffb4
   1ace4:	ldr	r2, [fp, #-16]
   1ace8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1acec:	cmp	r2, r3
   1acf0:	beq	1add4 <_start@@Base+0x67b4>
   1acf4:	mov	r3, #0
   1acf8:	str	r3, [fp, #-48]	; 0xffffffd0
   1acfc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ad00:	str	r3, [fp, #-16]
   1ad04:	sub	r3, fp, #48	; 0x30
   1ad08:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ad0c:	ldr	r1, [fp, #-16]
   1ad10:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ad14:	bl	161a8 <_start@@Base+0x1b88>
   1ad18:	str	r0, [fp, #-76]	; 0xffffffb4
   1ad1c:	ldr	r2, [fp, #-16]
   1ad20:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ad24:	cmp	r2, r3
   1ad28:	bne	1ad78 <_start@@Base+0x6758>
   1ad2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ad30:	str	r3, [fp, #-16]
   1ad34:	sub	r3, fp, #48	; 0x30
   1ad38:	str	r3, [sp]
   1ad3c:	ldr	r3, [pc, #556]	; 1af70 <_start@@Base+0x6950>
   1ad40:	add	r3, pc, r3
   1ad44:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ad48:	ldr	r1, [fp, #-16]
   1ad4c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ad50:	bl	16ce0 <_start@@Base+0x26c0>
   1ad54:	str	r0, [fp, #-76]	; 0xffffffb4
   1ad58:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ad5c:	ldr	r3, [fp, #-16]
   1ad60:	cmp	r2, r3
   1ad64:	beq	1b188 <_start@@Base+0x6b68>
   1ad68:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ad6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ad70:	cmp	r2, r3
   1ad74:	beq	1b188 <_start@@Base+0x6b68>
   1ad78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ad7c:	cmp	r3, #0
   1ad80:	bne	1ad98 <_start@@Base+0x6778>
   1ad84:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ad88:	ldr	r3, [r3, #8]
   1ad8c:	and	r3, r3, #2
   1ad90:	cmp	r3, #0
   1ad94:	beq	1b0dc <_start@@Base+0x6abc>
   1ad98:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ad9c:	ldr	r0, [r3]
   1ada0:	mov	r3, #4
   1ada4:	mov	r2, #4
   1ada8:	mov	r1, #3
   1adac:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1adb0:	str	r0, [fp, #-20]	; 0xffffffec
   1adb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1adb8:	cmp	r3, #0
   1adbc:	beq	1b164 <_start@@Base+0x6b44>
   1adc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1adc4:	mov	r1, r3
   1adc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1adcc:	bl	149c4 <_start@@Base+0x3a4>
   1add0:	b	1b0dc <_start@@Base+0x6abc>
   1add4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1add8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1addc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ade0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ade4:	str	r0, [fp, #-76]	; 0xffffffb4
   1ade8:	b	1b0dc <_start@@Base+0x6abc>
   1adec:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1adf0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1adf4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1adf8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1adfc:	str	r0, [fp, #-76]	; 0xffffffb4
   1ae00:	b	1b0dc <_start@@Base+0x6abc>
   1ae04:	ldrd	r2, [fp, #-12]
   1ae08:	mvn	r0, #255	; 0xff
   1ae0c:	mvn	r1, #0
   1ae10:	and	r2, r2, r0
   1ae14:	and	r3, r3, r1
   1ae18:	add	r1, pc, #328	; 0x148
   1ae1c:	ldrd	r0, [r1]
   1ae20:	cmp	r3, r1
   1ae24:	cmpeq	r2, r0
   1ae28:	bne	1af78 <_start@@Base+0x6958>
   1ae2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ae30:	str	r3, [fp, #-16]
   1ae34:	mov	r3, #7
   1ae38:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ae3c:	ldr	r1, [fp, #-16]
   1ae40:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ae44:	bl	15568 <_start@@Base+0xf48>
   1ae48:	str	r0, [fp, #-76]	; 0xffffffb4
   1ae4c:	ldr	r2, [fp, #-16]
   1ae50:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ae54:	cmp	r2, r3
   1ae58:	beq	1af3c <_start@@Base+0x691c>
   1ae5c:	mov	r2, #0
   1ae60:	mov	r3, #0
   1ae64:	strd	r2, [fp, #-60]	; 0xffffffc4
   1ae68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ae6c:	str	r3, [fp, #-16]
   1ae70:	sub	r3, fp, #60	; 0x3c
   1ae74:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ae78:	ldr	r1, [fp, #-16]
   1ae7c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ae80:	bl	160d4 <_start@@Base+0x1ab4>
   1ae84:	str	r0, [fp, #-76]	; 0xffffffb4
   1ae88:	ldr	r2, [fp, #-16]
   1ae8c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ae90:	cmp	r2, r3
   1ae94:	bne	1aee4 <_start@@Base+0x68c4>
   1ae98:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ae9c:	str	r3, [fp, #-16]
   1aea0:	sub	r3, fp, #60	; 0x3c
   1aea4:	str	r3, [sp]
   1aea8:	ldr	r3, [pc, #196]	; 1af74 <_start@@Base+0x6954>
   1aeac:	add	r3, pc, r3
   1aeb0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aeb4:	ldr	r1, [fp, #-16]
   1aeb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aebc:	bl	16b50 <_start@@Base+0x2530>
   1aec0:	str	r0, [fp, #-76]	; 0xffffffb4
   1aec4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1aec8:	ldr	r3, [fp, #-16]
   1aecc:	cmp	r2, r3
   1aed0:	beq	1b188 <_start@@Base+0x6b68>
   1aed4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1aed8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1aedc:	cmp	r2, r3
   1aee0:	beq	1b188 <_start@@Base+0x6b68>
   1aee4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1aee8:	orrs	r3, r2, r3
   1aeec:	bne	1af04 <_start@@Base+0x68e4>
   1aef0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1aef4:	ldr	r3, [r3, #8]
   1aef8:	and	r3, r3, #2
   1aefc:	cmp	r3, #0
   1af00:	beq	1b0dc <_start@@Base+0x6abc>
   1af04:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1af08:	ldr	r0, [r3]
   1af0c:	mov	r3, #8
   1af10:	mov	r2, #8
   1af14:	mov	r1, #5
   1af18:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1af1c:	str	r0, [fp, #-20]	; 0xffffffec
   1af20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1af24:	cmp	r3, #0
   1af28:	beq	1b16c <_start@@Base+0x6b4c>
   1af2c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1af30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1af34:	bl	14a20 <_start@@Base+0x400>
   1af38:	b	1b0dc <_start@@Base+0x6abc>
   1af3c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1af40:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1af44:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1af48:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1af4c:	str	r0, [fp, #-76]	; 0xffffffb4
   1af50:	b	1b0dc <_start@@Base+0x6abc>
   1af54:	nop			; (mov r0, r0)
   1af58:	strdvs	r3, [ip, #-63]!	; 0xffffffc1
   1af5c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1af60:	cmnvs	ip, r0, lsl #6
   1af64:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1af68:	cmnvs	ip, r0, lsl #10
   1af6c:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1af70:			; <UNDEFINED> instruction: 0x000493b8
   1af74:	andeq	r9, r4, r8, asr r2
   1af78:	ldrd	r2, [fp, #-12]
   1af7c:	mvn	r0, #255	; 0xff
   1af80:	mvn	r1, #0
   1af84:	and	r2, r2, r0
   1af88:	and	r3, r3, r1
   1af8c:	add	r1, pc, #540	; 0x21c
   1af90:	ldrd	r0, [r1]
   1af94:	cmp	r3, r1
   1af98:	cmpeq	r2, r0
   1af9c:	bne	1b0c8 <_start@@Base+0x6aa8>
   1afa0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1afa4:	str	r3, [fp, #-16]
   1afa8:	mov	r3, #7
   1afac:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1afb0:	ldr	r1, [fp, #-16]
   1afb4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1afb8:	bl	15568 <_start@@Base+0xf48>
   1afbc:	str	r0, [fp, #-76]	; 0xffffffb4
   1afc0:	ldr	r2, [fp, #-16]
   1afc4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1afc8:	cmp	r2, r3
   1afcc:	beq	1b0b0 <_start@@Base+0x6a90>
   1afd0:	mov	r2, #0
   1afd4:	mov	r3, #0
   1afd8:	strd	r2, [fp, #-68]	; 0xffffffbc
   1afdc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1afe0:	str	r3, [fp, #-16]
   1afe4:	sub	r3, fp, #68	; 0x44
   1afe8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1afec:	ldr	r1, [fp, #-16]
   1aff0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aff4:	bl	160d4 <_start@@Base+0x1ab4>
   1aff8:	str	r0, [fp, #-76]	; 0xffffffb4
   1affc:	ldr	r2, [fp, #-16]
   1b000:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b004:	cmp	r2, r3
   1b008:	bne	1b058 <_start@@Base+0x6a38>
   1b00c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b010:	str	r3, [fp, #-16]
   1b014:	sub	r3, fp, #68	; 0x44
   1b018:	str	r3, [sp]
   1b01c:	ldr	r3, [pc, #404]	; 1b1b8 <_start@@Base+0x6b98>
   1b020:	add	r3, pc, r3
   1b024:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b028:	ldr	r1, [fp, #-16]
   1b02c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b030:	bl	16b50 <_start@@Base+0x2530>
   1b034:	str	r0, [fp, #-76]	; 0xffffffb4
   1b038:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1b03c:	ldr	r3, [fp, #-16]
   1b040:	cmp	r2, r3
   1b044:	beq	1b188 <_start@@Base+0x6b68>
   1b048:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1b04c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b050:	cmp	r2, r3
   1b054:	beq	1b188 <_start@@Base+0x6b68>
   1b058:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1b05c:	orrs	r3, r2, r3
   1b060:	bne	1b078 <_start@@Base+0x6a58>
   1b064:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b068:	ldr	r3, [r3, #8]
   1b06c:	and	r3, r3, #2
   1b070:	cmp	r3, #0
   1b074:	beq	1b0dc <_start@@Base+0x6abc>
   1b078:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b07c:	ldr	r0, [r3]
   1b080:	mov	r3, #8
   1b084:	mov	r2, #8
   1b088:	mov	r1, #4
   1b08c:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1b090:	str	r0, [fp, #-20]	; 0xffffffec
   1b094:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b098:	cmp	r3, #0
   1b09c:	beq	1b174 <_start@@Base+0x6b54>
   1b0a0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1b0a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b0a8:	bl	14a20 <_start@@Base+0x400>
   1b0ac:	b	1b0dc <_start@@Base+0x6abc>
   1b0b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b0b4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b0b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b0bc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b0c0:	str	r0, [fp, #-76]	; 0xffffffb4
   1b0c4:	b	1b0dc <_start@@Base+0x6abc>
   1b0c8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b0cc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b0d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b0d4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b0d8:	str	r0, [fp, #-76]	; 0xffffffb4
   1b0dc:	sub	r3, fp, #24
   1b0e0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b0e4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b0e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b0ec:	bl	151b0 <_start@@Base+0xb90>
   1b0f0:	str	r0, [fp, #-76]	; 0xffffffb4
   1b0f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0f8:	cmp	r3, #0
   1b0fc:	bne	1a878 <_start@@Base+0x6258>
   1b100:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b104:	ldr	r3, [r3, #24]
   1b108:	cmp	r3, #0
   1b10c:	bne	1b17c <_start@@Base+0x6b5c>
   1b110:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b114:	ldr	r3, [r3]
   1b118:	mov	r0, r3
   1b11c:	bl	30634 <flatcc_builder_end_table@@Base>
   1b120:	mov	r2, r0
   1b124:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b128:	str	r2, [r3]
   1b12c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b130:	ldr	r3, [r3]
   1b134:	cmp	r3, #0
   1b138:	beq	1b184 <_start@@Base+0x6b64>
   1b13c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b140:	b	1b1a0 <_start@@Base+0x6b80>
   1b144:	nop			; (mov r0, r0)
   1b148:	b	1b188 <_start@@Base+0x6b68>
   1b14c:	nop			; (mov r0, r0)
   1b150:	b	1b188 <_start@@Base+0x6b68>
   1b154:	nop			; (mov r0, r0)
   1b158:	b	1b188 <_start@@Base+0x6b68>
   1b15c:	nop			; (mov r0, r0)
   1b160:	b	1b188 <_start@@Base+0x6b68>
   1b164:	nop			; (mov r0, r0)
   1b168:	b	1b188 <_start@@Base+0x6b68>
   1b16c:	nop			; (mov r0, r0)
   1b170:	b	1b188 <_start@@Base+0x6b68>
   1b174:	nop			; (mov r0, r0)
   1b178:	b	1b188 <_start@@Base+0x6b68>
   1b17c:	nop			; (mov r0, r0)
   1b180:	b	1b188 <_start@@Base+0x6b68>
   1b184:	nop			; (mov r0, r0)
   1b188:	mov	r3, #33	; 0x21
   1b18c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b190:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b194:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b198:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1b19c:	mov	r3, r0
   1b1a0:	mov	r0, r3
   1b1a4:	sub	sp, fp, #4
   1b1a8:	pop	{fp, pc}
   1b1ac:	nop			; (mov r0, r0)
   1b1b0:	cmnvs	ip, r0, lsl #8
   1b1b4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b1b8:	strdeq	r9, [r4], -r0
   1b1bc:	push	{fp, lr}
   1b1c0:	add	fp, sp, #4
   1b1c4:	sub	sp, sp, #72	; 0x48
   1b1c8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b1cc:	str	r1, [fp, #-60]	; 0xffffffc4
   1b1d0:	str	r2, [fp, #-64]	; 0xffffffc0
   1b1d4:	str	r3, [fp, #-68]	; 0xffffffbc
   1b1d8:	sub	r3, fp, #24
   1b1dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b1e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b1e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b1e8:	bl	150c8 <_start@@Base+0xaa8>
   1b1ec:	str	r0, [fp, #-60]	; 0xffffffc4
   1b1f0:	b	1b8f0 <_start@@Base+0x72d0>
   1b1f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b1f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b1fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b200:	bl	14cb8 <_start@@Base+0x698>
   1b204:	str	r0, [fp, #-60]	; 0xffffffc4
   1b208:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b20c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1b210:	bl	14f9c <_start@@Base+0x97c>
   1b214:	strd	r0, [fp, #-12]
   1b218:	ldrd	r2, [fp, #-12]
   1b21c:	add	r1, pc, #796	; 0x31c
   1b220:	ldrd	r0, [r1]
   1b224:	cmp	r3, r1
   1b228:	cmpeq	r2, r0
   1b22c:	bhi	1b474 <_start@@Base+0x6e54>
   1b230:	ldrd	r2, [fp, #-12]
   1b234:	mov	r0, #-16777216	; 0xff000000
   1b238:	mvn	r1, #0
   1b23c:	and	r2, r2, r0
   1b240:	and	r3, r3, r1
   1b244:	add	r1, pc, #764	; 0x2fc
   1b248:	ldrd	r0, [r1]
   1b24c:	cmp	r3, r1
   1b250:	cmpeq	r2, r0
   1b254:	bne	1b344 <_start@@Base+0x6d24>
   1b258:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b25c:	str	r3, [fp, #-16]
   1b260:	mov	r3, #5
   1b264:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b268:	ldr	r1, [fp, #-16]
   1b26c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b270:	bl	15568 <_start@@Base+0xf48>
   1b274:	str	r0, [fp, #-60]	; 0xffffffc4
   1b278:	ldr	r2, [fp, #-16]
   1b27c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b280:	cmp	r2, r3
   1b284:	beq	1b32c <_start@@Base+0x6d0c>
   1b288:	mov	r3, #0
   1b28c:	strb	r3, [fp, #-25]	; 0xffffffe7
   1b290:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b294:	add	r3, r3, #24
   1b298:	str	r3, [fp, #-20]	; 0xffffffec
   1b29c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b2a0:	str	r3, [fp, #-16]
   1b2a4:	sub	r3, fp, #25
   1b2a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b2ac:	ldr	r1, [fp, #-16]
   1b2b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b2b4:	bl	16348 <_start@@Base+0x1d28>
   1b2b8:	str	r0, [fp, #-60]	; 0xffffffc4
   1b2bc:	ldr	r2, [fp, #-16]
   1b2c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b2c4:	cmp	r2, r3
   1b2c8:	bne	1b318 <_start@@Base+0x6cf8>
   1b2cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b2d0:	str	r3, [fp, #-16]
   1b2d4:	sub	r3, fp, #25
   1b2d8:	str	r3, [sp]
   1b2dc:	ldr	r3, [pc, #636]	; 1b560 <_start@@Base+0x6f40>
   1b2e0:	add	r3, pc, r3
   1b2e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b2e8:	ldr	r1, [fp, #-16]
   1b2ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b2f0:	bl	16ff8 <_start@@Base+0x29d8>
   1b2f4:	str	r0, [fp, #-60]	; 0xffffffc4
   1b2f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b2fc:	ldr	r3, [fp, #-16]
   1b300:	cmp	r2, r3
   1b304:	beq	1b904 <_start@@Base+0x72e4>
   1b308:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b30c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b310:	cmp	r2, r3
   1b314:	beq	1b904 <_start@@Base+0x72e4>
   1b318:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   1b31c:	mov	r1, r3
   1b320:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b324:	bl	148f8 <_start@@Base+0x2d8>
   1b328:	b	1b8d8 <_start@@Base+0x72b8>
   1b32c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b330:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b334:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b338:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b33c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b340:	b	1b8d8 <_start@@Base+0x72b8>
   1b344:	ldrd	r2, [fp, #-12]
   1b348:	mov	r0, #-16777216	; 0xff000000
   1b34c:	mvn	r1, #0
   1b350:	and	r2, r2, r0
   1b354:	and	r3, r3, r1
   1b358:	add	r1, pc, #496	; 0x1f0
   1b35c:	ldrd	r0, [r1]
   1b360:	cmp	r3, r1
   1b364:	cmpeq	r2, r0
   1b368:	bne	1b45c <_start@@Base+0x6e3c>
   1b36c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b370:	str	r3, [fp, #-16]
   1b374:	mov	r3, #5
   1b378:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b37c:	ldr	r1, [fp, #-16]
   1b380:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b384:	bl	15568 <_start@@Base+0xf48>
   1b388:	str	r0, [fp, #-60]	; 0xffffffc4
   1b38c:	ldr	r2, [fp, #-16]
   1b390:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b394:	cmp	r2, r3
   1b398:	beq	1b444 <_start@@Base+0x6e24>
   1b39c:	mov	r2, #0
   1b3a0:	mov	r3, #0
   1b3a4:	strd	r2, [fp, #-36]	; 0xffffffdc
   1b3a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b3ac:	add	r3, r3, #16
   1b3b0:	str	r3, [fp, #-20]	; 0xffffffec
   1b3b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b3b8:	str	r3, [fp, #-16]
   1b3bc:	sub	r3, fp, #36	; 0x24
   1b3c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b3c4:	ldr	r1, [fp, #-16]
   1b3c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b3cc:	bl	3bed4 <flatcc_json_parser_double@@Base>
   1b3d0:	str	r0, [fp, #-60]	; 0xffffffc4
   1b3d4:	ldr	r2, [fp, #-16]
   1b3d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b3dc:	cmp	r2, r3
   1b3e0:	bne	1b430 <_start@@Base+0x6e10>
   1b3e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b3e8:	str	r3, [fp, #-16]
   1b3ec:	sub	r3, fp, #36	; 0x24
   1b3f0:	str	r3, [sp]
   1b3f4:	ldr	r3, [pc, #360]	; 1b564 <_start@@Base+0x6f44>
   1b3f8:	add	r3, pc, r3
   1b3fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b400:	ldr	r1, [fp, #-16]
   1b404:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b408:	bl	17498 <_start@@Base+0x2e78>
   1b40c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b410:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b414:	ldr	r3, [fp, #-16]
   1b418:	cmp	r2, r3
   1b41c:	beq	1b904 <_start@@Base+0x72e4>
   1b420:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b424:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b428:	cmp	r2, r3
   1b42c:	beq	1b904 <_start@@Base+0x72e4>
   1b430:	vldr	d7, [fp, #-36]	; 0xffffffdc
   1b434:	vmov.f64	d0, d7
   1b438:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b43c:	bl	14afc <_start@@Base+0x4dc>
   1b440:	b	1b8d8 <_start@@Base+0x72b8>
   1b444:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b448:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b44c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b450:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b454:	str	r0, [fp, #-60]	; 0xffffffc4
   1b458:	b	1b8d8 <_start@@Base+0x72b8>
   1b45c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b460:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b464:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b468:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b46c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b470:	b	1b8d8 <_start@@Base+0x72b8>
   1b474:	ldrd	r2, [fp, #-12]
   1b478:	mvn	r0, #0
   1b47c:	mvn	r1, #-2013265920	; 0x88000000
   1b480:	cmp	r3, r1
   1b484:	cmpeq	r2, r0
   1b488:	bhi	1b574 <_start@@Base+0x6f54>
   1b48c:	ldrd	r2, [fp, #-12]
   1b490:	mov	r0, #-16777216	; 0xff000000
   1b494:	mvn	r1, #0
   1b498:	and	r2, r2, r0
   1b49c:	and	r3, r3, r1
   1b4a0:	add	r1, pc, #176	; 0xb0
   1b4a4:	ldrd	r0, [r1]
   1b4a8:	cmp	r3, r1
   1b4ac:	cmpeq	r2, r0
   1b4b0:	bne	1b524 <_start@@Base+0x6f04>
   1b4b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b4b8:	str	r3, [fp, #-16]
   1b4bc:	mov	r3, #5
   1b4c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b4c4:	ldr	r1, [fp, #-16]
   1b4c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b4cc:	bl	15568 <_start@@Base+0xf48>
   1b4d0:	str	r0, [fp, #-60]	; 0xffffffc4
   1b4d4:	ldr	r2, [fp, #-16]
   1b4d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b4dc:	cmp	r2, r3
   1b4e0:	beq	1b50c <_start@@Base+0x6eec>
   1b4e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b4e8:	add	r3, r3, #26
   1b4ec:	str	r3, [fp, #-20]	; 0xffffffec
   1b4f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b4f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b4f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b4fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b500:	bl	19860 <_start@@Base+0x5240>
   1b504:	str	r0, [fp, #-60]	; 0xffffffc4
   1b508:	b	1b8d8 <_start@@Base+0x72b8>
   1b50c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b510:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b514:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b518:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b51c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b520:	b	1b8d8 <_start@@Base+0x72b8>
   1b524:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b528:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b52c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b530:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b534:	str	r0, [fp, #-60]	; 0xffffffc4
   1b538:	b	1b8d8 <_start@@Base+0x72b8>
   1b53c:	nop			; (mov r0, r0)
   1b540:	rscscc	pc, pc, #1020	; 0x3fc
   1b544:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1b548:	andcc	r0, r0, #0
   1b54c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1b550:	mrscc	r0, (UNDEF: 0)
   1b554:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1b558:	movwcc	r0, #0
   1b55c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1b560:	andeq	r8, r4, r0, asr #28
   1b564:	andeq	r8, r4, r8, lsr sp
   1b568:	andeq	r8, r4, ip, lsl #22
   1b56c:	strdeq	r8, [r4], -r4
   1b570:	strdeq	r8, [r4], -r4
   1b574:	ldrd	r2, [fp, #-12]
   1b578:	mvn	r0, #0
   1b57c:	mvn	r1, #-2030043136	; 0x87000000
   1b580:	cmp	r3, r1
   1b584:	cmpeq	r2, r0
   1b588:	bhi	1b6ac <_start@@Base+0x708c>
   1b58c:	ldrd	r2, [fp, #-12]
   1b590:	mov	r0, #0
   1b594:	mov	r1, #-16777216	; 0xff000000
   1b598:	and	r2, r2, r0
   1b59c:	and	r3, r3, r1
   1b5a0:	cmp	r3, #2013265920	; 0x78000000
   1b5a4:	cmpeq	r2, #0
   1b5a8:	bne	1b694 <_start@@Base+0x7074>
   1b5ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b5b0:	str	r3, [fp, #-16]
   1b5b4:	mov	r3, #1
   1b5b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b5bc:	ldr	r1, [fp, #-16]
   1b5c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b5c4:	bl	15568 <_start@@Base+0xf48>
   1b5c8:	str	r0, [fp, #-60]	; 0xffffffc4
   1b5cc:	ldr	r2, [fp, #-16]
   1b5d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b5d4:	cmp	r2, r3
   1b5d8:	beq	1b67c <_start@@Base+0x705c>
   1b5dc:	mov	r3, #0
   1b5e0:	str	r3, [fp, #-40]	; 0xffffffd8
   1b5e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b5e8:	str	r3, [fp, #-20]	; 0xffffffec
   1b5ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b5f0:	str	r3, [fp, #-16]
   1b5f4:	sub	r3, fp, #40	; 0x28
   1b5f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b5fc:	ldr	r1, [fp, #-16]
   1b600:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b604:	bl	3c078 <flatcc_json_parser_float@@Base>
   1b608:	str	r0, [fp, #-60]	; 0xffffffc4
   1b60c:	ldr	r2, [fp, #-16]
   1b610:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b614:	cmp	r2, r3
   1b618:	bne	1b668 <_start@@Base+0x7048>
   1b61c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b620:	str	r3, [fp, #-16]
   1b624:	sub	r3, fp, #40	; 0x28
   1b628:	str	r3, [sp]
   1b62c:	ldr	r3, [pc, #-204]	; 1b568 <_start@@Base+0x6f48>
   1b630:	add	r3, pc, r3
   1b634:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b638:	ldr	r1, [fp, #-16]
   1b63c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b640:	bl	17314 <_start@@Base+0x2cf4>
   1b644:	str	r0, [fp, #-60]	; 0xffffffc4
   1b648:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b64c:	ldr	r3, [fp, #-16]
   1b650:	cmp	r2, r3
   1b654:	beq	1b904 <_start@@Base+0x72e4>
   1b658:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b65c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b660:	cmp	r2, r3
   1b664:	beq	1b904 <_start@@Base+0x72e4>
   1b668:	vldr	s15, [fp, #-40]	; 0xffffffd8
   1b66c:	vmov.f32	s0, s15
   1b670:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b674:	bl	14a90 <_start@@Base+0x470>
   1b678:	b	1b8d8 <_start@@Base+0x72b8>
   1b67c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b680:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b684:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b688:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b68c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b690:	b	1b8d8 <_start@@Base+0x72b8>
   1b694:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b698:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b69c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b6a0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b6a4:	str	r0, [fp, #-60]	; 0xffffffc4
   1b6a8:	b	1b8d8 <_start@@Base+0x72b8>
   1b6ac:	ldrd	r2, [fp, #-12]
   1b6b0:	mov	r0, #0
   1b6b4:	mov	r1, #-16777216	; 0xff000000
   1b6b8:	and	r2, r2, r0
   1b6bc:	and	r3, r3, r1
   1b6c0:	cmp	r3, #2046820352	; 0x7a000000
   1b6c4:	cmpeq	r2, #0
   1b6c8:	bne	1b7b8 <_start@@Base+0x7198>
   1b6cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b6d0:	str	r3, [fp, #-16]
   1b6d4:	mov	r3, #1
   1b6d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b6dc:	ldr	r1, [fp, #-16]
   1b6e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b6e4:	bl	15568 <_start@@Base+0xf48>
   1b6e8:	str	r0, [fp, #-60]	; 0xffffffc4
   1b6ec:	ldr	r2, [fp, #-16]
   1b6f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b6f4:	cmp	r2, r3
   1b6f8:	beq	1b7a0 <_start@@Base+0x7180>
   1b6fc:	mov	r3, #0
   1b700:	str	r3, [fp, #-44]	; 0xffffffd4
   1b704:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b708:	add	r3, r3, #8
   1b70c:	str	r3, [fp, #-20]	; 0xffffffec
   1b710:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b714:	str	r3, [fp, #-16]
   1b718:	sub	r3, fp, #44	; 0x2c
   1b71c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b720:	ldr	r1, [fp, #-16]
   1b724:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b728:	bl	3c078 <flatcc_json_parser_float@@Base>
   1b72c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b730:	ldr	r2, [fp, #-16]
   1b734:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b738:	cmp	r2, r3
   1b73c:	bne	1b78c <_start@@Base+0x716c>
   1b740:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b744:	str	r3, [fp, #-16]
   1b748:	sub	r3, fp, #44	; 0x2c
   1b74c:	str	r3, [sp]
   1b750:	ldr	r3, [pc, #-492]	; 1b56c <_start@@Base+0x6f4c>
   1b754:	add	r3, pc, r3
   1b758:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b75c:	ldr	r1, [fp, #-16]
   1b760:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b764:	bl	17314 <_start@@Base+0x2cf4>
   1b768:	str	r0, [fp, #-60]	; 0xffffffc4
   1b76c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b770:	ldr	r3, [fp, #-16]
   1b774:	cmp	r2, r3
   1b778:	beq	1b904 <_start@@Base+0x72e4>
   1b77c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b780:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b784:	cmp	r2, r3
   1b788:	beq	1b904 <_start@@Base+0x72e4>
   1b78c:	vldr	s15, [fp, #-44]	; 0xffffffd4
   1b790:	vmov.f32	s0, s15
   1b794:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b798:	bl	14a90 <_start@@Base+0x470>
   1b79c:	b	1b8d8 <_start@@Base+0x72b8>
   1b7a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b7a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b7a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b7ac:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b7b0:	str	r0, [fp, #-60]	; 0xffffffc4
   1b7b4:	b	1b8d8 <_start@@Base+0x72b8>
   1b7b8:	ldrd	r2, [fp, #-12]
   1b7bc:	mov	r0, #0
   1b7c0:	mov	r1, #-16777216	; 0xff000000
   1b7c4:	and	r2, r2, r0
   1b7c8:	and	r3, r3, r1
   1b7cc:	cmp	r3, #2030043136	; 0x79000000
   1b7d0:	cmpeq	r2, #0
   1b7d4:	bne	1b8c4 <_start@@Base+0x72a4>
   1b7d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b7dc:	str	r3, [fp, #-16]
   1b7e0:	mov	r3, #1
   1b7e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b7e8:	ldr	r1, [fp, #-16]
   1b7ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b7f0:	bl	15568 <_start@@Base+0xf48>
   1b7f4:	str	r0, [fp, #-60]	; 0xffffffc4
   1b7f8:	ldr	r2, [fp, #-16]
   1b7fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b800:	cmp	r2, r3
   1b804:	beq	1b8ac <_start@@Base+0x728c>
   1b808:	mov	r3, #0
   1b80c:	str	r3, [fp, #-48]	; 0xffffffd0
   1b810:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b814:	add	r3, r3, #4
   1b818:	str	r3, [fp, #-20]	; 0xffffffec
   1b81c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b820:	str	r3, [fp, #-16]
   1b824:	sub	r3, fp, #48	; 0x30
   1b828:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b82c:	ldr	r1, [fp, #-16]
   1b830:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b834:	bl	3c078 <flatcc_json_parser_float@@Base>
   1b838:	str	r0, [fp, #-60]	; 0xffffffc4
   1b83c:	ldr	r2, [fp, #-16]
   1b840:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b844:	cmp	r2, r3
   1b848:	bne	1b898 <_start@@Base+0x7278>
   1b84c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b850:	str	r3, [fp, #-16]
   1b854:	sub	r3, fp, #48	; 0x30
   1b858:	str	r3, [sp]
   1b85c:	ldr	r3, [pc, #-756]	; 1b570 <_start@@Base+0x6f50>
   1b860:	add	r3, pc, r3
   1b864:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b868:	ldr	r1, [fp, #-16]
   1b86c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b870:	bl	17314 <_start@@Base+0x2cf4>
   1b874:	str	r0, [fp, #-60]	; 0xffffffc4
   1b878:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b87c:	ldr	r3, [fp, #-16]
   1b880:	cmp	r2, r3
   1b884:	beq	1b904 <_start@@Base+0x72e4>
   1b888:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b88c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b890:	cmp	r2, r3
   1b894:	beq	1b904 <_start@@Base+0x72e4>
   1b898:	vldr	s15, [fp, #-48]	; 0xffffffd0
   1b89c:	vmov.f32	s0, s15
   1b8a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b8a4:	bl	14a90 <_start@@Base+0x470>
   1b8a8:	b	1b8d8 <_start@@Base+0x72b8>
   1b8ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b8b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b8b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b8b8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b8bc:	str	r0, [fp, #-60]	; 0xffffffc4
   1b8c0:	b	1b8d8 <_start@@Base+0x72b8>
   1b8c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b8c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b8cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b8d0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1b8d4:	str	r0, [fp, #-60]	; 0xffffffc4
   1b8d8:	sub	r3, fp, #24
   1b8dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b8e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b8e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b8e8:	bl	151b0 <_start@@Base+0xb90>
   1b8ec:	str	r0, [fp, #-60]	; 0xffffffc4
   1b8f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8f4:	cmp	r3, #0
   1b8f8:	bne	1b1f4 <_start@@Base+0x6bd4>
   1b8fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b900:	b	1b91c <_start@@Base+0x72fc>
   1b904:	mov	r3, #33	; 0x21
   1b908:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b90c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b910:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b914:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1b918:	mov	r3, r0
   1b91c:	mov	r0, r3
   1b920:	sub	sp, fp, #4
   1b924:	pop	{fp, pc}
   1b928:	push	{fp, lr}
   1b92c:	add	fp, sp, #4
   1b930:	sub	sp, sp, #24
   1b934:	str	r0, [fp, #-16]
   1b938:	str	r1, [fp, #-20]	; 0xffffffec
   1b93c:	str	r2, [fp, #-24]	; 0xffffffe8
   1b940:	str	r3, [fp, #-28]	; 0xffffffe4
   1b944:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b948:	mov	r2, #0
   1b94c:	str	r2, [r3]
   1b950:	ldr	r3, [fp, #-16]
   1b954:	ldr	r3, [r3]
   1b958:	mov	r2, #16
   1b95c:	mov	r1, #32
   1b960:	mov	r0, r3
   1b964:	bl	2ed3c <flatcc_builder_start_struct@@Base>
   1b968:	str	r0, [fp, #-8]
   1b96c:	ldr	r3, [fp, #-8]
   1b970:	cmp	r3, #0
   1b974:	beq	1b9d4 <_start@@Base+0x73b4>
   1b978:	ldr	r3, [fp, #-8]
   1b97c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b980:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b984:	ldr	r0, [fp, #-16]
   1b988:	bl	1b1bc <_start@@Base+0x6b9c>
   1b98c:	str	r0, [fp, #-20]	; 0xffffffec
   1b990:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b998:	cmp	r2, r3
   1b99c:	beq	1b9d8 <_start@@Base+0x73b8>
   1b9a0:	ldr	r3, [fp, #-16]
   1b9a4:	ldr	r3, [r3]
   1b9a8:	mov	r0, r3
   1b9ac:	bl	2eddc <flatcc_builder_end_struct@@Base>
   1b9b0:	mov	r2, r0
   1b9b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b9b8:	str	r2, [r3]
   1b9bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b9c0:	ldr	r3, [r3]
   1b9c4:	cmp	r3, #0
   1b9c8:	beq	1b9d8 <_start@@Base+0x73b8>
   1b9cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b9d0:	b	1b9f0 <_start@@Base+0x73d0>
   1b9d4:	nop			; (mov r0, r0)
   1b9d8:	mov	r3, #33	; 0x21
   1b9dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b9e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b9e4:	ldr	r0, [fp, #-16]
   1b9e8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1b9ec:	mov	r3, r0
   1b9f0:	mov	r0, r3
   1b9f4:	sub	sp, fp, #4
   1b9f8:	pop	{fp, pc}
   1b9fc:	push	{fp, lr}
   1ba00:	add	fp, sp, #4
   1ba04:	sub	sp, sp, #56	; 0x38
   1ba08:	str	r0, [fp, #-40]	; 0xffffffd8
   1ba0c:	str	r1, [fp, #-44]	; 0xffffffd4
   1ba10:	str	r2, [fp, #-48]	; 0xffffffd0
   1ba14:	str	r3, [fp, #-52]	; 0xffffffcc
   1ba18:	sub	r3, fp, #24
   1ba1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ba20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ba24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba28:	bl	150c8 <_start@@Base+0xaa8>
   1ba2c:	str	r0, [fp, #-44]	; 0xffffffd4
   1ba30:	b	1bc98 <_start@@Base+0x7678>
   1ba34:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ba38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ba3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba40:	bl	14cb8 <_start@@Base+0x698>
   1ba44:	str	r0, [fp, #-44]	; 0xffffffd4
   1ba48:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ba4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ba50:	bl	14f9c <_start@@Base+0x97c>
   1ba54:	strd	r0, [fp, #-12]
   1ba58:	ldrd	r2, [fp, #-12]
   1ba5c:	mov	r0, #0
   1ba60:	ldr	r1, [pc, #624]	; 1bcd8 <_start@@Base+0x76b8>
   1ba64:	and	r2, r2, r0
   1ba68:	and	r3, r3, r1
   1ba6c:	mov	r0, #0
   1ba70:	ldr	r1, [pc, #612]	; 1bcdc <_start@@Base+0x76bc>
   1ba74:	cmp	r3, r1
   1ba78:	cmpeq	r2, r0
   1ba7c:	bne	1bb68 <_start@@Base+0x7548>
   1ba80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba84:	str	r3, [fp, #-16]
   1ba88:	mov	r3, #2
   1ba8c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ba90:	ldr	r1, [fp, #-16]
   1ba94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba98:	bl	15568 <_start@@Base+0xf48>
   1ba9c:	str	r0, [fp, #-44]	; 0xffffffd4
   1baa0:	ldr	r2, [fp, #-16]
   1baa4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1baa8:	cmp	r2, r3
   1baac:	beq	1bb50 <_start@@Base+0x7530>
   1bab0:	mov	r3, #0
   1bab4:	str	r3, [fp, #-28]	; 0xffffffe4
   1bab8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1babc:	str	r3, [fp, #-20]	; 0xffffffec
   1bac0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bac4:	str	r3, [fp, #-16]
   1bac8:	sub	r3, fp, #28
   1bacc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bad0:	ldr	r1, [fp, #-16]
   1bad4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bad8:	bl	15e64 <_start@@Base+0x1844>
   1badc:	str	r0, [fp, #-44]	; 0xffffffd4
   1bae0:	ldr	r2, [fp, #-16]
   1bae4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bae8:	cmp	r2, r3
   1baec:	bne	1bb3c <_start@@Base+0x751c>
   1baf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1baf4:	str	r3, [fp, #-16]
   1baf8:	sub	r3, fp, #28
   1bafc:	str	r3, [sp]
   1bb00:	ldr	r3, [pc, #472]	; 1bce0 <_start@@Base+0x76c0>
   1bb04:	add	r3, pc, r3
   1bb08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bb0c:	ldr	r1, [fp, #-16]
   1bb10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb14:	bl	166bc <_start@@Base+0x209c>
   1bb18:	str	r0, [fp, #-44]	; 0xffffffd4
   1bb1c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bb20:	ldr	r3, [fp, #-16]
   1bb24:	cmp	r2, r3
   1bb28:	beq	1bcac <_start@@Base+0x768c>
   1bb2c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bb30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bb34:	cmp	r2, r3
   1bb38:	beq	1bcac <_start@@Base+0x768c>
   1bb3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb40:	mov	r1, r3
   1bb44:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb48:	bl	1483c <_start@@Base+0x21c>
   1bb4c:	b	1bc80 <_start@@Base+0x7660>
   1bb50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bb54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bb58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb5c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1bb60:	str	r0, [fp, #-44]	; 0xffffffd4
   1bb64:	b	1bc80 <_start@@Base+0x7660>
   1bb68:	ldrd	r2, [fp, #-12]
   1bb6c:	add	r1, pc, #348	; 0x15c
   1bb70:	ldrd	r0, [r1]
   1bb74:	cmp	r3, r1
   1bb78:	cmpeq	r2, r0
   1bb7c:	bne	1bc6c <_start@@Base+0x764c>
   1bb80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bb84:	str	r3, [fp, #-16]
   1bb88:	mov	r3, #8
   1bb8c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bb90:	ldr	r1, [fp, #-16]
   1bb94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb98:	bl	15568 <_start@@Base+0xf48>
   1bb9c:	str	r0, [fp, #-44]	; 0xffffffd4
   1bba0:	ldr	r2, [fp, #-16]
   1bba4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bba8:	cmp	r2, r3
   1bbac:	beq	1bc54 <_start@@Base+0x7634>
   1bbb0:	mov	r3, #0
   1bbb4:	str	r3, [fp, #-32]	; 0xffffffe0
   1bbb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bbbc:	add	r3, r3, #4
   1bbc0:	str	r3, [fp, #-20]	; 0xffffffec
   1bbc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bbc8:	str	r3, [fp, #-16]
   1bbcc:	sub	r3, fp, #32
   1bbd0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bbd4:	ldr	r1, [fp, #-16]
   1bbd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bbdc:	bl	15e64 <_start@@Base+0x1844>
   1bbe0:	str	r0, [fp, #-44]	; 0xffffffd4
   1bbe4:	ldr	r2, [fp, #-16]
   1bbe8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bbec:	cmp	r2, r3
   1bbf0:	bne	1bc40 <_start@@Base+0x7620>
   1bbf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bbf8:	str	r3, [fp, #-16]
   1bbfc:	sub	r3, fp, #32
   1bc00:	str	r3, [sp]
   1bc04:	ldr	r3, [pc, #216]	; 1bce4 <_start@@Base+0x76c4>
   1bc08:	add	r3, pc, r3
   1bc0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bc10:	ldr	r1, [fp, #-16]
   1bc14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc18:	bl	166bc <_start@@Base+0x209c>
   1bc1c:	str	r0, [fp, #-44]	; 0xffffffd4
   1bc20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bc24:	ldr	r3, [fp, #-16]
   1bc28:	cmp	r2, r3
   1bc2c:	beq	1bcac <_start@@Base+0x768c>
   1bc30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bc34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bc38:	cmp	r2, r3
   1bc3c:	beq	1bcac <_start@@Base+0x768c>
   1bc40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bc44:	mov	r1, r3
   1bc48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bc4c:	bl	1483c <_start@@Base+0x21c>
   1bc50:	b	1bc80 <_start@@Base+0x7660>
   1bc54:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bc58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bc5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc60:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1bc64:	str	r0, [fp, #-44]	; 0xffffffd4
   1bc68:	b	1bc80 <_start@@Base+0x7660>
   1bc6c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bc70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bc74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc78:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1bc7c:	str	r0, [fp, #-44]	; 0xffffffd4
   1bc80:	sub	r3, fp, #24
   1bc84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bc88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bc8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc90:	bl	151b0 <_start@@Base+0xb90>
   1bc94:	str	r0, [fp, #-44]	; 0xffffffd4
   1bc98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bc9c:	cmp	r3, #0
   1bca0:	bne	1ba34 <_start@@Base+0x7414>
   1bca4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bca8:	b	1bcc4 <_start@@Base+0x76a4>
   1bcac:	mov	r3, #33	; 0x21
   1bcb0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bcb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bcb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bcbc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1bcc0:	mov	r3, r0
   1bcc4:	mov	r0, r3
   1bcc8:	sub	sp, fp, #4
   1bccc:	pop	{fp, pc}
   1bcd0:	cmnvs	lr, r5, ror #6
   1bcd4:	strbtvs	r7, [r9], #-884	; 0xfffffc8c
   1bcd8:			; <UNDEFINED> instruction: 0xffff0000
   1bcdc:	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
   1bce0:	andeq	r8, r4, ip, asr r6
   1bce4:	andeq	r8, r4, r4, ror #10
   1bce8:	push	{fp, lr}
   1bcec:	add	fp, sp, #4
   1bcf0:	sub	sp, sp, #24
   1bcf4:	str	r0, [fp, #-16]
   1bcf8:	str	r1, [fp, #-20]	; 0xffffffec
   1bcfc:	str	r2, [fp, #-24]	; 0xffffffe8
   1bd00:	str	r3, [fp, #-28]	; 0xffffffe4
   1bd04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd08:	mov	r2, #0
   1bd0c:	str	r2, [r3]
   1bd10:	ldr	r3, [fp, #-16]
   1bd14:	ldr	r3, [r3]
   1bd18:	mov	r2, #4
   1bd1c:	mov	r1, #8
   1bd20:	mov	r0, r3
   1bd24:	bl	2ed3c <flatcc_builder_start_struct@@Base>
   1bd28:	str	r0, [fp, #-8]
   1bd2c:	ldr	r3, [fp, #-8]
   1bd30:	cmp	r3, #0
   1bd34:	beq	1bd94 <_start@@Base+0x7774>
   1bd38:	ldr	r3, [fp, #-8]
   1bd3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bd40:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd44:	ldr	r0, [fp, #-16]
   1bd48:	bl	1b9fc <_start@@Base+0x73dc>
   1bd4c:	str	r0, [fp, #-20]	; 0xffffffec
   1bd50:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bd54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd58:	cmp	r2, r3
   1bd5c:	beq	1bd98 <_start@@Base+0x7778>
   1bd60:	ldr	r3, [fp, #-16]
   1bd64:	ldr	r3, [r3]
   1bd68:	mov	r0, r3
   1bd6c:	bl	2eddc <flatcc_builder_end_struct@@Base>
   1bd70:	mov	r2, r0
   1bd74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd78:	str	r2, [r3]
   1bd7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd80:	ldr	r3, [r3]
   1bd84:	cmp	r3, #0
   1bd88:	beq	1bd98 <_start@@Base+0x7778>
   1bd8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd90:	b	1bdb0 <_start@@Base+0x7790>
   1bd94:	nop			; (mov r0, r0)
   1bd98:	mov	r3, #33	; 0x21
   1bd9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bda0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bda4:	ldr	r0, [fp, #-16]
   1bda8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1bdac:	mov	r3, r0
   1bdb0:	mov	r0, r3
   1bdb4:	sub	sp, fp, #4
   1bdb8:	pop	{fp, pc}
   1bdbc:	push	{fp, lr}
   1bdc0:	add	fp, sp, #4
   1bdc4:	sub	sp, sp, #64	; 0x40
   1bdc8:	str	r0, [fp, #-48]	; 0xffffffd0
   1bdcc:	str	r1, [fp, #-52]	; 0xffffffcc
   1bdd0:	str	r2, [fp, #-56]	; 0xffffffc8
   1bdd4:	str	r3, [fp, #-60]	; 0xffffffc4
   1bdd8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bddc:	mov	r2, #0
   1bde0:	str	r2, [r3]
   1bde4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bde8:	ldr	r3, [r3]
   1bdec:	mov	r1, #3
   1bdf0:	mov	r0, r3
   1bdf4:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1bdf8:	mov	r3, r0
   1bdfc:	cmp	r3, #0
   1be00:	bne	1c280 <_start@@Base+0x7c60>
   1be04:	sub	r3, fp, #28
   1be08:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1be0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1be10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1be14:	bl	150c8 <_start@@Base+0xaa8>
   1be18:	str	r0, [fp, #-52]	; 0xffffffcc
   1be1c:	b	1c230 <_start@@Base+0x7c10>
   1be20:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1be24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1be28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1be2c:	bl	14cb8 <_start@@Base+0x698>
   1be30:	str	r0, [fp, #-52]	; 0xffffffcc
   1be34:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1be38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1be3c:	bl	14f9c <_start@@Base+0x97c>
   1be40:	strd	r0, [fp, #-12]
   1be44:	ldrd	r2, [fp, #-12]
   1be48:	mvn	r0, #0
   1be4c:	ldr	r1, [pc, #924]	; 1c1f0 <_start@@Base+0x7bd0>
   1be50:	cmp	r3, r1
   1be54:	cmpeq	r2, r0
   1be58:	bhi	1bfc4 <_start@@Base+0x79a4>
   1be5c:	ldrd	r2, [fp, #-12]
   1be60:	mov	r0, #-16777216	; 0xff000000
   1be64:	mvn	r1, #0
   1be68:	and	r2, r2, r0
   1be6c:	and	r3, r3, r1
   1be70:	add	r1, pc, #872	; 0x368
   1be74:	ldrd	r0, [r1]
   1be78:	cmp	r3, r1
   1be7c:	cmpeq	r2, r0
   1be80:	bne	1bfac <_start@@Base+0x798c>
   1be84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1be88:	str	r3, [fp, #-16]
   1be8c:	mov	r3, #5
   1be90:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1be94:	ldr	r1, [fp, #-16]
   1be98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1be9c:	bl	15568 <_start@@Base+0xf48>
   1bea0:	str	r0, [fp, #-52]	; 0xffffffcc
   1bea4:	ldr	r2, [fp, #-16]
   1bea8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1beac:	cmp	r2, r3
   1beb0:	beq	1bf94 <_start@@Base+0x7974>
   1beb4:	mov	r3, #0
   1beb8:	strh	r3, [fp, #-34]	; 0xffffffde
   1bebc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bec0:	str	r3, [fp, #-16]
   1bec4:	sub	r3, fp, #34	; 0x22
   1bec8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1becc:	ldr	r1, [fp, #-16]
   1bed0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bed4:	bl	15f34 <_start@@Base+0x1914>
   1bed8:	str	r0, [fp, #-52]	; 0xffffffcc
   1bedc:	ldr	r2, [fp, #-16]
   1bee0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bee4:	cmp	r2, r3
   1bee8:	bne	1bf38 <_start@@Base+0x7918>
   1beec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bef0:	str	r3, [fp, #-16]
   1bef4:	sub	r3, fp, #34	; 0x22
   1bef8:	str	r3, [sp]
   1befc:	ldr	r3, [pc, #752]	; 1c1f4 <_start@@Base+0x7bd4>
   1bf00:	add	r3, pc, r3
   1bf04:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bf08:	ldr	r1, [fp, #-16]
   1bf0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf10:	bl	16840 <_start@@Base+0x2220>
   1bf14:	str	r0, [fp, #-52]	; 0xffffffcc
   1bf18:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bf1c:	ldr	r3, [fp, #-16]
   1bf20:	cmp	r2, r3
   1bf24:	beq	1c2a4 <_start@@Base+0x7c84>
   1bf28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bf2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bf30:	cmp	r2, r3
   1bf34:	beq	1c2a4 <_start@@Base+0x7c84>
   1bf38:	ldrh	r3, [fp, #-34]	; 0xffffffde
   1bf3c:	cmp	r3, #0
   1bf40:	bne	1bf58 <_start@@Base+0x7938>
   1bf44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bf48:	ldr	r3, [r3, #8]
   1bf4c:	and	r3, r3, #2
   1bf50:	cmp	r3, #0
   1bf54:	beq	1c218 <_start@@Base+0x7bf8>
   1bf58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bf5c:	ldr	r0, [r3]
   1bf60:	mov	r3, #2
   1bf64:	mov	r2, #2
   1bf68:	mov	r1, #2
   1bf6c:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1bf70:	str	r0, [fp, #-20]	; 0xffffffec
   1bf74:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf78:	cmp	r3, #0
   1bf7c:	beq	1c288 <_start@@Base+0x7c68>
   1bf80:	ldrh	r3, [fp, #-34]	; 0xffffffde
   1bf84:	mov	r1, r3
   1bf88:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bf8c:	bl	147d8 <_start@@Base+0x1b8>
   1bf90:	b	1c218 <_start@@Base+0x7bf8>
   1bf94:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bf98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bf9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bfa0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1bfa4:	str	r0, [fp, #-52]	; 0xffffffcc
   1bfa8:	b	1c218 <_start@@Base+0x7bf8>
   1bfac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bfb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bfb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bfb8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1bfbc:	str	r0, [fp, #-52]	; 0xffffffcc
   1bfc0:	b	1c218 <_start@@Base+0x7bf8>
   1bfc4:	ldrd	r2, [fp, #-12]
   1bfc8:	mov	r0, #0
   1bfcc:	mvn	r1, #255	; 0xff
   1bfd0:	and	r2, r2, r0
   1bfd4:	and	r3, r3, r1
   1bfd8:	add	r1, pc, #520	; 0x208
   1bfdc:	ldrd	r0, [r1]
   1bfe0:	cmp	r3, r1
   1bfe4:	cmpeq	r2, r0
   1bfe8:	bne	1c114 <_start@@Base+0x7af4>
   1bfec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bff0:	str	r3, [fp, #-16]
   1bff4:	mov	r3, #3
   1bff8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bffc:	ldr	r1, [fp, #-16]
   1c000:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c004:	bl	15568 <_start@@Base+0xf48>
   1c008:	str	r0, [fp, #-52]	; 0xffffffcc
   1c00c:	ldr	r2, [fp, #-16]
   1c010:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c014:	cmp	r2, r3
   1c018:	beq	1c0fc <_start@@Base+0x7adc>
   1c01c:	mov	r2, #0
   1c020:	mov	r3, #0
   1c024:	strd	r2, [fp, #-44]	; 0xffffffd4
   1c028:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c02c:	str	r3, [fp, #-16]
   1c030:	sub	r3, fp, #44	; 0x2c
   1c034:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c038:	ldr	r1, [fp, #-16]
   1c03c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c040:	bl	160d4 <_start@@Base+0x1ab4>
   1c044:	str	r0, [fp, #-52]	; 0xffffffcc
   1c048:	ldr	r2, [fp, #-16]
   1c04c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c050:	cmp	r2, r3
   1c054:	bne	1c0a4 <_start@@Base+0x7a84>
   1c058:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c05c:	str	r3, [fp, #-16]
   1c060:	sub	r3, fp, #44	; 0x2c
   1c064:	str	r3, [sp]
   1c068:	ldr	r3, [pc, #392]	; 1c1f8 <_start@@Base+0x7bd8>
   1c06c:	add	r3, pc, r3
   1c070:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c074:	ldr	r1, [fp, #-16]
   1c078:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c07c:	bl	16b50 <_start@@Base+0x2530>
   1c080:	str	r0, [fp, #-52]	; 0xffffffcc
   1c084:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c088:	ldr	r3, [fp, #-16]
   1c08c:	cmp	r2, r3
   1c090:	beq	1c2a4 <_start@@Base+0x7c84>
   1c094:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c098:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c09c:	cmp	r2, r3
   1c0a0:	beq	1c2a4 <_start@@Base+0x7c84>
   1c0a4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1c0a8:	orrs	r3, r2, r3
   1c0ac:	bne	1c0c4 <_start@@Base+0x7aa4>
   1c0b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c0b4:	ldr	r3, [r3, #8]
   1c0b8:	and	r3, r3, #2
   1c0bc:	cmp	r3, #0
   1c0c0:	beq	1c218 <_start@@Base+0x7bf8>
   1c0c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c0c8:	ldr	r0, [r3]
   1c0cc:	mov	r3, #8
   1c0d0:	mov	r2, #8
   1c0d4:	mov	r1, #1
   1c0d8:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1c0dc:	str	r0, [fp, #-20]	; 0xffffffec
   1c0e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0e4:	cmp	r3, #0
   1c0e8:	beq	1c290 <_start@@Base+0x7c70>
   1c0ec:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1c0f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c0f4:	bl	14a20 <_start@@Base+0x400>
   1c0f8:	b	1c218 <_start@@Base+0x7bf8>
   1c0fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c100:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c104:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c108:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1c10c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c110:	b	1c218 <_start@@Base+0x7bf8>
   1c114:	ldrd	r2, [fp, #-12]
   1c118:	mov	r0, #0
   1c11c:	ldr	r1, [pc, #216]	; 1c1fc <_start@@Base+0x7bdc>
   1c120:	and	r2, r2, r0
   1c124:	and	r3, r3, r1
   1c128:	mov	r0, #0
   1c12c:	ldr	r1, [pc, #204]	; 1c200 <_start@@Base+0x7be0>
   1c130:	cmp	r3, r1
   1c134:	cmpeq	r2, r0
   1c138:	bne	1c204 <_start@@Base+0x7be4>
   1c13c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c140:	str	r3, [fp, #-16]
   1c144:	mov	r3, #2
   1c148:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c14c:	ldr	r1, [fp, #-16]
   1c150:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c154:	bl	15568 <_start@@Base+0xf48>
   1c158:	str	r0, [fp, #-52]	; 0xffffffcc
   1c15c:	ldr	r2, [fp, #-16]
   1c160:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c164:	cmp	r2, r3
   1c168:	beq	1c1c4 <_start@@Base+0x7ba4>
   1c16c:	sub	r3, fp, #32
   1c170:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c174:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c178:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c17c:	bl	3cae8 <flatcc_json_parser_build_string@@Base>
   1c180:	str	r0, [fp, #-52]	; 0xffffffcc
   1c184:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c188:	cmp	r3, #0
   1c18c:	beq	1c2a4 <_start@@Base+0x7c84>
   1c190:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c194:	ldr	r3, [r3]
   1c198:	mov	r1, #0
   1c19c:	mov	r0, r3
   1c1a0:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1c1a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c1a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1ac:	cmp	r3, #0
   1c1b0:	beq	1c2a4 <_start@@Base+0x7c84>
   1c1b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c1b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1bc:	str	r2, [r3]
   1c1c0:	b	1c218 <_start@@Base+0x7bf8>
   1c1c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c1c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c1cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c1d0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1c1d4:	str	r0, [fp, #-52]	; 0xffffffcc
   1c1d8:	b	1c218 <_start@@Base+0x7bf8>
   1c1dc:	nop			; (mov r0, r0)
   1c1e0:	strvc	r0, [r0], #-0
   1c1e4:	cmnvs	pc, #461373440	; 0x1b800000
   1c1e8:	andeq	r0, r0, r0
   1c1ec:	strbtvc	r6, [r1], -r0, lsl #24
   1c1f0:	stmdbvs	r3!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
   1c1f4:	andeq	r8, r4, r8, ror r2
   1c1f8:	andeq	r8, r4, r8, lsl r1
   1c1fc:			; <UNDEFINED> instruction: 0xffff0000
   1c200:	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
   1c204:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c208:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c20c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c210:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1c214:	str	r0, [fp, #-52]	; 0xffffffcc
   1c218:	sub	r3, fp, #28
   1c21c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c220:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c224:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c228:	bl	151b0 <_start@@Base+0xb90>
   1c22c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c234:	cmp	r3, #0
   1c238:	bne	1be20 <_start@@Base+0x7800>
   1c23c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c240:	ldr	r3, [r3, #24]
   1c244:	cmp	r3, #0
   1c248:	bne	1c298 <_start@@Base+0x7c78>
   1c24c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c250:	ldr	r3, [r3]
   1c254:	mov	r0, r3
   1c258:	bl	30634 <flatcc_builder_end_table@@Base>
   1c25c:	mov	r2, r0
   1c260:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c264:	str	r2, [r3]
   1c268:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c26c:	ldr	r3, [r3]
   1c270:	cmp	r3, #0
   1c274:	beq	1c2a0 <_start@@Base+0x7c80>
   1c278:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c27c:	b	1c2bc <_start@@Base+0x7c9c>
   1c280:	nop			; (mov r0, r0)
   1c284:	b	1c2a4 <_start@@Base+0x7c84>
   1c288:	nop			; (mov r0, r0)
   1c28c:	b	1c2a4 <_start@@Base+0x7c84>
   1c290:	nop			; (mov r0, r0)
   1c294:	b	1c2a4 <_start@@Base+0x7c84>
   1c298:	nop			; (mov r0, r0)
   1c29c:	b	1c2a4 <_start@@Base+0x7c84>
   1c2a0:	nop			; (mov r0, r0)
   1c2a4:	mov	r3, #33	; 0x21
   1c2a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c2ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c2b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c2b4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1c2b8:	mov	r3, r0
   1c2bc:	mov	r0, r3
   1c2c0:	sub	sp, fp, #4
   1c2c4:	pop	{fp, pc}
   1c2c8:	push	{fp, lr}
   1c2cc:	add	fp, sp, #4
   1c2d0:	sub	sp, sp, #72	; 0x48
   1c2d4:	str	r0, [fp, #-40]	; 0xffffffd8
   1c2d8:	str	r1, [fp, #-44]	; 0xffffffd4
   1c2dc:	str	r2, [fp, #-48]	; 0xffffffd0
   1c2e0:	str	r3, [fp, #-52]	; 0xffffffcc
   1c2e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c2e8:	mov	r2, #0
   1c2ec:	str	r2, [r3]
   1c2f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c2f4:	ldr	r3, [r3]
   1c2f8:	mov	r1, #4
   1c2fc:	mov	r0, r3
   1c300:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1c304:	mov	r3, r0
   1c308:	cmp	r3, #0
   1c30c:	bne	1c748 <_start@@Base+0x8128>
   1c310:	sub	r3, fp, #32
   1c314:	str	r3, [sp]
   1c318:	mov	r3, #1
   1c31c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c320:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c324:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c328:	bl	3cce4 <flatcc_json_parser_prepare_unions@@Base>
   1c32c:	mov	r2, r0
   1c330:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c334:	cmp	r2, r3
   1c338:	beq	1c750 <_start@@Base+0x8130>
   1c33c:	sub	r3, fp, #24
   1c340:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c344:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c348:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c34c:	bl	150c8 <_start@@Base+0xaa8>
   1c350:	str	r0, [fp, #-44]	; 0xffffffd4
   1c354:	b	1c6e0 <_start@@Base+0x80c0>
   1c358:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c35c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c360:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c364:	bl	14cb8 <_start@@Base+0x698>
   1c368:	str	r0, [fp, #-44]	; 0xffffffd4
   1c36c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c370:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c374:	bl	14f9c <_start@@Base+0x97c>
   1c378:	strd	r0, [fp, #-12]
   1c37c:	ldrd	r2, [fp, #-12]
   1c380:	add	r1, pc, #984	; 0x3d8
   1c384:	ldrd	r0, [r1]
   1c388:	cmp	r3, r1
   1c38c:	cmpeq	r2, r0
   1c390:	bne	1c488 <_start@@Base+0x7e68>
   1c394:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c398:	add	r3, r3, #8
   1c39c:	str	r3, [fp, #-44]	; 0xffffffd4
   1c3a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c3a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c3a8:	bl	14f9c <_start@@Base+0x97c>
   1c3ac:	strd	r0, [fp, #-12]
   1c3b0:	ldrd	r2, [fp, #-12]
   1c3b4:	mov	r0, #0
   1c3b8:	mvn	r1, #0
   1c3bc:	and	r2, r2, r0
   1c3c0:	and	r3, r3, r1
   1c3c4:	add	r1, pc, #924	; 0x39c
   1c3c8:	ldrd	r0, [r1]
   1c3cc:	cmp	r3, r1
   1c3d0:	cmpeq	r2, r0
   1c3d4:	bne	1c470 <_start@@Base+0x7e50>
   1c3d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c3dc:	str	r3, [fp, #-16]
   1c3e0:	mov	r3, #4
   1c3e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c3e8:	ldr	r1, [fp, #-16]
   1c3ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c3f0:	bl	15568 <_start@@Base+0xf48>
   1c3f4:	str	r0, [fp, #-44]	; 0xffffffd4
   1c3f8:	ldr	r2, [fp, #-16]
   1c3fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c400:	cmp	r2, r3
   1c404:	beq	1c458 <_start@@Base+0x7e38>
   1c408:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c40c:	ldr	r2, [pc, #884]	; 1c788 <_start@@Base+0x8168>
   1c410:	add	r2, pc, r2
   1c414:	str	r2, [sp, #16]
   1c418:	ldr	r2, [pc, #876]	; 1c78c <_start@@Base+0x816c>
   1c41c:	add	r2, pc, r2
   1c420:	str	r2, [sp, #12]
   1c424:	ldr	r2, [pc, #868]	; 1c790 <_start@@Base+0x8170>
   1c428:	add	r2, pc, r2
   1c42c:	str	r2, [sp, #8]
   1c430:	str	r3, [sp, #4]
   1c434:	mov	r3, #3
   1c438:	str	r3, [sp]
   1c43c:	mov	r3, #0
   1c440:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c444:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c448:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c44c:	bl	3d5f0 <flatcc_json_parser_union_type_vector@@Base>
   1c450:	str	r0, [fp, #-44]	; 0xffffffd4
   1c454:	b	1c6c8 <_start@@Base+0x80a8>
   1c458:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c45c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c460:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c464:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1c468:	str	r0, [fp, #-44]	; 0xffffffd4
   1c46c:	b	1c6c8 <_start@@Base+0x80a8>
   1c470:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c474:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c478:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c47c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1c480:	str	r0, [fp, #-44]	; 0xffffffd4
   1c484:	b	1c6c8 <_start@@Base+0x80a8>
   1c488:	ldrd	r2, [fp, #-12]
   1c48c:	mvn	r0, #255	; 0xff
   1c490:	mvn	r1, #0
   1c494:	and	r2, r2, r0
   1c498:	and	r3, r3, r1
   1c49c:	add	r1, pc, #716	; 0x2cc
   1c4a0:	ldrd	r0, [r1]
   1c4a4:	cmp	r3, r1
   1c4a8:	cmpeq	r2, r0
   1c4ac:	bne	1c518 <_start@@Base+0x7ef8>
   1c4b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c4b4:	str	r3, [fp, #-16]
   1c4b8:	mov	r3, #7
   1c4bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c4c0:	ldr	r1, [fp, #-16]
   1c4c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c4c8:	bl	15568 <_start@@Base+0xf48>
   1c4cc:	str	r0, [fp, #-44]	; 0xffffffd4
   1c4d0:	ldr	r2, [fp, #-16]
   1c4d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c4d8:	cmp	r2, r3
   1c4dc:	beq	1c520 <_start@@Base+0x7f00>
   1c4e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c4e4:	ldr	r2, [pc, #680]	; 1c794 <_start@@Base+0x8174>
   1c4e8:	add	r2, pc, r2
   1c4ec:	str	r2, [sp, #8]
   1c4f0:	str	r3, [sp, #4]
   1c4f4:	mov	r3, #3
   1c4f8:	str	r3, [sp]
   1c4fc:	mov	r3, #0
   1c500:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c504:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c508:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c50c:	bl	3d49c <flatcc_json_parser_union_vector@@Base>
   1c510:	str	r0, [fp, #-44]	; 0xffffffd4
   1c514:	b	1c6c8 <_start@@Base+0x80a8>
   1c518:	nop			; (mov r0, r0)
   1c51c:	b	1c524 <_start@@Base+0x7f04>
   1c520:	nop			; (mov r0, r0)
   1c524:	ldrd	r2, [fp, #-12]
   1c528:	ldr	r0, [pc, #616]	; 1c798 <_start@@Base+0x8178>
   1c52c:	mvn	r1, #0
   1c530:	and	r2, r2, r0
   1c534:	and	r3, r3, r1
   1c538:	add	r1, pc, #568	; 0x238
   1c53c:	ldrd	r0, [r1]
   1c540:	cmp	r3, r1
   1c544:	cmpeq	r2, r0
   1c548:	bne	1c5ec <_start@@Base+0x7fcc>
   1c54c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c550:	str	r3, [fp, #-16]
   1c554:	mov	r3, #6
   1c558:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c55c:	ldr	r1, [fp, #-16]
   1c560:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c564:	bl	15568 <_start@@Base+0xf48>
   1c568:	str	r0, [fp, #-44]	; 0xffffffd4
   1c56c:	ldr	r2, [fp, #-16]
   1c570:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c574:	cmp	r2, r3
   1c578:	beq	1c5d4 <_start@@Base+0x7fb4>
   1c57c:	sub	r3, fp, #28
   1c580:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c584:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c588:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c58c:	bl	1c7c4 <_start@@Base+0x81a4>
   1c590:	str	r0, [fp, #-44]	; 0xffffffd4
   1c594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c598:	cmp	r3, #0
   1c59c:	beq	1c7a0 <_start@@Base+0x8180>
   1c5a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5a4:	ldr	r3, [r3]
   1c5a8:	mov	r1, #0
   1c5ac:	mov	r0, r3
   1c5b0:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1c5b4:	str	r0, [fp, #-20]	; 0xffffffec
   1c5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5bc:	cmp	r3, #0
   1c5c0:	beq	1c7a0 <_start@@Base+0x8180>
   1c5c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c5c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5cc:	str	r2, [r3]
   1c5d0:	b	1c6c8 <_start@@Base+0x80a8>
   1c5d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c5d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c5dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c5e0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1c5e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1c5e8:	b	1c6c8 <_start@@Base+0x80a8>
   1c5ec:	ldrd	r2, [fp, #-12]
   1c5f0:	mov	r0, #-16777216	; 0xff000000
   1c5f4:	mvn	r1, #0
   1c5f8:	and	r2, r2, r0
   1c5fc:	and	r3, r3, r1
   1c600:	add	r1, pc, #376	; 0x178
   1c604:	ldrd	r0, [r1]
   1c608:	cmp	r3, r1
   1c60c:	cmpeq	r2, r0
   1c610:	bne	1c6b4 <_start@@Base+0x8094>
   1c614:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c618:	str	r3, [fp, #-16]
   1c61c:	mov	r3, #5
   1c620:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c624:	ldr	r1, [fp, #-16]
   1c628:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c62c:	bl	15568 <_start@@Base+0xf48>
   1c630:	str	r0, [fp, #-44]	; 0xffffffd4
   1c634:	ldr	r2, [fp, #-16]
   1c638:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c63c:	cmp	r2, r3
   1c640:	beq	1c69c <_start@@Base+0x807c>
   1c644:	sub	r3, fp, #28
   1c648:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c64c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c650:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c654:	bl	24508 <_start@@Base+0xfee8>
   1c658:	str	r0, [fp, #-44]	; 0xffffffd4
   1c65c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c660:	cmp	r3, #0
   1c664:	beq	1c7a0 <_start@@Base+0x8180>
   1c668:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c66c:	ldr	r3, [r3]
   1c670:	mov	r1, #1
   1c674:	mov	r0, r3
   1c678:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1c67c:	str	r0, [fp, #-20]	; 0xffffffec
   1c680:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c684:	cmp	r3, #0
   1c688:	beq	1c7a0 <_start@@Base+0x8180>
   1c68c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c690:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c694:	str	r2, [r3]
   1c698:	b	1c6c8 <_start@@Base+0x80a8>
   1c69c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c6a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c6a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c6a8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1c6ac:	str	r0, [fp, #-44]	; 0xffffffd4
   1c6b0:	b	1c6c8 <_start@@Base+0x80a8>
   1c6b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c6b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c6bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c6c0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1c6c4:	str	r0, [fp, #-44]	; 0xffffffd4
   1c6c8:	sub	r3, fp, #24
   1c6cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c6d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c6d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c6d8:	bl	151b0 <_start@@Base+0xb90>
   1c6dc:	str	r0, [fp, #-44]	; 0xffffffd4
   1c6e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c6e4:	cmp	r3, #0
   1c6e8:	bne	1c358 <_start@@Base+0x7d38>
   1c6ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c6f0:	ldr	r3, [r3, #24]
   1c6f4:	cmp	r3, #0
   1c6f8:	bne	1c758 <_start@@Base+0x8138>
   1c6fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c700:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c704:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c708:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c70c:	bl	3cd9c <flatcc_json_parser_finalize_unions@@Base>
   1c710:	str	r0, [fp, #-44]	; 0xffffffd4
   1c714:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c718:	ldr	r3, [r3]
   1c71c:	mov	r0, r3
   1c720:	bl	30634 <flatcc_builder_end_table@@Base>
   1c724:	mov	r2, r0
   1c728:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c72c:	str	r2, [r3]
   1c730:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c734:	ldr	r3, [r3]
   1c738:	cmp	r3, #0
   1c73c:	beq	1c79c <_start@@Base+0x817c>
   1c740:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c744:	b	1c7b8 <_start@@Base+0x8198>
   1c748:	nop			; (mov r0, r0)
   1c74c:	b	1c7a0 <_start@@Base+0x8180>
   1c750:	nop			; (mov r0, r0)
   1c754:	b	1c7a0 <_start@@Base+0x8180>
   1c758:	nop			; (mov r0, r0)
   1c75c:	b	1c7a0 <_start@@Base+0x8180>
   1c760:	cmnvs	lr, pc, asr r9
   1c764:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1c768:	andeq	r0, r0, r0
   1c76c:	ldrbtvc	r7, [r9], #-101	; 0xffffff9b
   1c770:	cmnvs	lr, r0, lsl #18
   1c774:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1c778:	ldmdbvs	r8!, {}^	; <UNPREDICTABLE>
   1c77c:	rsbsvc	r6, r2, r6, ror #10
   1c780:	strvs	r0, [r0, #-0]
   1c784:	stclvs	6, cr7, [pc, #-420]!	; 1c5e8 <_start@@Base+0x7fc8>
   1c788:			; <UNDEFINED> instruction: 0xffffd010
   1c78c:			; <UNDEFINED> instruction: 0xffffce94
   1c790:	andeq	r7, r4, r8, ror #26
   1c794:			; <UNDEFINED> instruction: 0xffffcdc8
   1c798:			; <UNDEFINED> instruction: 0xffff0000
   1c79c:	nop			; (mov r0, r0)
   1c7a0:	mov	r3, #33	; 0x21
   1c7a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c7a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c7ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c7b0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1c7b4:	mov	r3, r0
   1c7b8:	mov	r0, r3
   1c7bc:	sub	sp, fp, #4
   1c7c0:	pop	{fp, pc}
   1c7c4:	push	{fp, lr}
   1c7c8:	add	fp, sp, #4
   1c7cc:	sub	sp, sp, #40	; 0x28
   1c7d0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c7d4:	str	r1, [fp, #-36]	; 0xffffffdc
   1c7d8:	str	r2, [fp, #-40]	; 0xffffffd8
   1c7dc:	str	r3, [fp, #-44]	; 0xffffffd4
   1c7e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c7e4:	mov	r2, #0
   1c7e8:	str	r2, [r3]
   1c7ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c7f0:	ldr	r3, [r3]
   1c7f4:	mov	r1, #3
   1c7f8:	mov	r0, r3
   1c7fc:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1c800:	mov	r3, r0
   1c804:	cmp	r3, #0
   1c808:	bne	1cb9c <_start@@Base+0x857c>
   1c80c:	sub	r3, fp, #24
   1c810:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c814:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c81c:	bl	150c8 <_start@@Base+0xaa8>
   1c820:	str	r0, [fp, #-36]	; 0xffffffdc
   1c824:	b	1cb4c <_start@@Base+0x852c>
   1c828:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c82c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c830:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c834:	bl	14cb8 <_start@@Base+0x698>
   1c838:	str	r0, [fp, #-36]	; 0xffffffdc
   1c83c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c840:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c844:	bl	14f9c <_start@@Base+0x97c>
   1c848:	strd	r0, [fp, #-12]
   1c84c:	ldrd	r2, [fp, #-12]
   1c850:	add	r1, pc, #896	; 0x380
   1c854:	ldrd	r0, [r1]
   1c858:	cmp	r3, r1
   1c85c:	cmpeq	r2, r0
   1c860:	bne	1cb20 <_start@@Base+0x8500>
   1c864:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c868:	add	r3, r3, #8
   1c86c:	str	r3, [fp, #-36]	; 0xffffffdc
   1c870:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c874:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c878:	bl	14f9c <_start@@Base+0x97c>
   1c87c:	strd	r0, [fp, #-12]
   1c880:	ldrd	r2, [fp, #-12]
   1c884:	add	r1, pc, #852	; 0x354
   1c888:	ldrd	r0, [r1]
   1c88c:	cmp	r3, r1
   1c890:	cmpeq	r2, r0
   1c894:	bne	1cb08 <_start@@Base+0x84e8>
   1c898:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c89c:	add	r3, r3, #8
   1c8a0:	str	r3, [fp, #-36]	; 0xffffffdc
   1c8a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c8a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c8ac:	bl	14f9c <_start@@Base+0x97c>
   1c8b0:	strd	r0, [fp, #-12]
   1c8b4:	ldrd	r2, [fp, #-12]
   1c8b8:	ldr	r0, [pc, #832]	; 1cc00 <_start@@Base+0x85e0>
   1c8bc:	mvn	r1, #0
   1c8c0:	and	r2, r2, r0
   1c8c4:	and	r3, r3, r1
   1c8c8:	add	r1, pc, #792	; 0x318
   1c8cc:	ldrd	r0, [r1]
   1c8d0:	cmp	r3, r1
   1c8d4:	cmpeq	r2, r0
   1c8d8:	bne	1c964 <_start@@Base+0x8344>
   1c8dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c8e0:	str	r3, [fp, #-16]
   1c8e4:	mov	r3, #6
   1c8e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c8ec:	ldr	r1, [fp, #-16]
   1c8f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c8f4:	bl	15568 <_start@@Base+0xf48>
   1c8f8:	str	r0, [fp, #-36]	; 0xffffffdc
   1c8fc:	ldr	r2, [fp, #-16]
   1c900:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c904:	cmp	r2, r3
   1c908:	beq	1ca14 <_start@@Base+0x83f4>
   1c90c:	sub	r3, fp, #28
   1c910:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c914:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c91c:	bl	1d860 <_start@@Base+0x9240>
   1c920:	str	r0, [fp, #-36]	; 0xffffffdc
   1c924:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c928:	cmp	r3, #0
   1c92c:	beq	1cbb0 <_start@@Base+0x8590>
   1c930:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c934:	ldr	r3, [r3]
   1c938:	mov	r1, #1
   1c93c:	mov	r0, r3
   1c940:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1c944:	str	r0, [fp, #-20]	; 0xffffffec
   1c948:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c94c:	cmp	r3, #0
   1c950:	beq	1cbb0 <_start@@Base+0x8590>
   1c954:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c95c:	str	r2, [r3]
   1c960:	b	1cb34 <_start@@Base+0x8514>
   1c964:	ldrd	r2, [fp, #-12]
   1c968:	mov	r0, #-16777216	; 0xff000000
   1c96c:	mvn	r1, #0
   1c970:	and	r2, r2, r0
   1c974:	and	r3, r3, r1
   1c978:	add	r1, pc, #624	; 0x270
   1c97c:	ldrd	r0, [r1]
   1c980:	cmp	r3, r1
   1c984:	cmpeq	r2, r0
   1c988:	bne	1ca1c <_start@@Base+0x83fc>
   1c98c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c990:	str	r3, [fp, #-16]
   1c994:	mov	r3, #5
   1c998:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c99c:	ldr	r1, [fp, #-16]
   1c9a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c9a4:	bl	15568 <_start@@Base+0xf48>
   1c9a8:	str	r0, [fp, #-36]	; 0xffffffdc
   1c9ac:	ldr	r2, [fp, #-16]
   1c9b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c9b4:	cmp	r2, r3
   1c9b8:	beq	1ca24 <_start@@Base+0x8404>
   1c9bc:	sub	r3, fp, #28
   1c9c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c9c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c9c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c9cc:	bl	1cc04 <_start@@Base+0x85e4>
   1c9d0:	str	r0, [fp, #-36]	; 0xffffffdc
   1c9d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c9d8:	cmp	r3, #0
   1c9dc:	beq	1cbb0 <_start@@Base+0x8590>
   1c9e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c9e4:	ldr	r3, [r3]
   1c9e8:	mov	r1, #0
   1c9ec:	mov	r0, r3
   1c9f0:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1c9f4:	str	r0, [fp, #-20]	; 0xffffffec
   1c9f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c9fc:	cmp	r3, #0
   1ca00:	beq	1cbb0 <_start@@Base+0x8590>
   1ca04:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ca08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca0c:	str	r2, [r3]
   1ca10:	b	1cb34 <_start@@Base+0x8514>
   1ca14:	nop			; (mov r0, r0)
   1ca18:	b	1ca28 <_start@@Base+0x8408>
   1ca1c:	nop			; (mov r0, r0)
   1ca20:	b	1ca28 <_start@@Base+0x8408>
   1ca24:	nop			; (mov r0, r0)
   1ca28:	ldrd	r2, [fp, #-12]
   1ca2c:	ldr	r0, [pc, #460]	; 1cc00 <_start@@Base+0x85e0>
   1ca30:	mvn	r1, #0
   1ca34:	and	r2, r2, r0
   1ca38:	and	r3, r3, r1
   1ca3c:	add	r1, pc, #436	; 0x1b4
   1ca40:	ldrd	r0, [r1]
   1ca44:	cmp	r3, r1
   1ca48:	cmpeq	r2, r0
   1ca4c:	bne	1caf0 <_start@@Base+0x84d0>
   1ca50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ca54:	str	r3, [fp, #-16]
   1ca58:	mov	r3, #6
   1ca5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ca60:	ldr	r1, [fp, #-16]
   1ca64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ca68:	bl	15568 <_start@@Base+0xf48>
   1ca6c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ca70:	ldr	r2, [fp, #-16]
   1ca74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ca78:	cmp	r2, r3
   1ca7c:	beq	1cad8 <_start@@Base+0x84b8>
   1ca80:	sub	r3, fp, #28
   1ca84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ca88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ca8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ca90:	bl	1dca8 <_start@@Base+0x9688>
   1ca94:	str	r0, [fp, #-36]	; 0xffffffdc
   1ca98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ca9c:	cmp	r3, #0
   1caa0:	beq	1cbb0 <_start@@Base+0x8590>
   1caa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1caa8:	ldr	r3, [r3]
   1caac:	mov	r1, #2
   1cab0:	mov	r0, r3
   1cab4:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1cab8:	str	r0, [fp, #-20]	; 0xffffffec
   1cabc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cac0:	cmp	r3, #0
   1cac4:	beq	1cbb0 <_start@@Base+0x8590>
   1cac8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cacc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cad0:	str	r2, [r3]
   1cad4:	b	1cb34 <_start@@Base+0x8514>
   1cad8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cadc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cae0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cae4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1cae8:	str	r0, [fp, #-36]	; 0xffffffdc
   1caec:	b	1cb34 <_start@@Base+0x8514>
   1caf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1caf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1caf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cafc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1cb00:	str	r0, [fp, #-36]	; 0xffffffdc
   1cb04:	b	1cb34 <_start@@Base+0x8514>
   1cb08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cb0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cb10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cb14:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1cb18:	str	r0, [fp, #-36]	; 0xffffffdc
   1cb1c:	b	1cb34 <_start@@Base+0x8514>
   1cb20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cb24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cb28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cb2c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1cb30:	str	r0, [fp, #-36]	; 0xffffffdc
   1cb34:	sub	r3, fp, #24
   1cb38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cb3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cb40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cb44:	bl	151b0 <_start@@Base+0xb90>
   1cb48:	str	r0, [fp, #-36]	; 0xffffffdc
   1cb4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb50:	cmp	r3, #0
   1cb54:	bne	1c828 <_start@@Base+0x8208>
   1cb58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb5c:	ldr	r3, [r3, #24]
   1cb60:	cmp	r3, #0
   1cb64:	bne	1cba4 <_start@@Base+0x8584>
   1cb68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb6c:	ldr	r3, [r3]
   1cb70:	mov	r0, r3
   1cb74:	bl	30634 <flatcc_builder_end_table@@Base>
   1cb78:	mov	r2, r0
   1cb7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cb80:	str	r2, [r3]
   1cb84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cb88:	ldr	r3, [r3]
   1cb8c:	cmp	r3, #0
   1cb90:	beq	1cbac <_start@@Base+0x858c>
   1cb94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb98:	b	1cbc8 <_start@@Base+0x85a8>
   1cb9c:	nop			; (mov r0, r0)
   1cba0:	b	1cbb0 <_start@@Base+0x8590>
   1cba4:	nop			; (mov r0, r0)
   1cba8:	b	1cbb0 <_start@@Base+0x8590>
   1cbac:	nop			; (mov r0, r0)
   1cbb0:	mov	r3, #33	; 0x21
   1cbb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cbb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cbbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cbc0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1cbc4:	mov	r3, r0
   1cbc8:	mov	r0, r3
   1cbcc:	sub	sp, fp, #4
   1cbd0:	pop	{fp, pc}
   1cbd4:	nop			; (mov r0, r0)
   1cbd8:	bvs	1cf8998 <__bss_end__@@Base+0x1c944ec>
   1cbdc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1cbe0:	ldmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
   1cbe4:	rsbsvc	r6, r2, r6, ror #10
   1cbe8:	ldrvs	r0, [r2, -r0]!
   1cbec:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1cbf0:	strvs	r0, [r0, -r0]
   1cbf4:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1cbf8:	ldrvs	r0, [r3, -r0]!
   1cbfc:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1cc00:			; <UNDEFINED> instruction: 0xffff0000
   1cc04:	push	{fp, lr}
   1cc08:	add	fp, sp, #4
   1cc0c:	sub	sp, sp, #96	; 0x60
   1cc10:	str	r0, [fp, #-80]	; 0xffffffb0
   1cc14:	str	r1, [fp, #-84]	; 0xffffffac
   1cc18:	str	r2, [fp, #-88]	; 0xffffffa8
   1cc1c:	str	r3, [fp, #-92]	; 0xffffffa4
   1cc20:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1cc24:	mov	r2, #0
   1cc28:	str	r2, [r3]
   1cc2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cc30:	ldr	r3, [r3]
   1cc34:	mov	r1, #9
   1cc38:	mov	r0, r3
   1cc3c:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1cc40:	mov	r3, r0
   1cc44:	cmp	r3, #0
   1cc48:	bne	1d7dc <_start@@Base+0x91bc>
   1cc4c:	sub	r3, fp, #28
   1cc50:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cc54:	ldr	r1, [fp, #-84]	; 0xffffffac
   1cc58:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cc5c:	bl	150c8 <_start@@Base+0xaa8>
   1cc60:	str	r0, [fp, #-84]	; 0xffffffac
   1cc64:	b	1d78c <_start@@Base+0x916c>
   1cc68:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cc6c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1cc70:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cc74:	bl	14cb8 <_start@@Base+0x698>
   1cc78:	str	r0, [fp, #-84]	; 0xffffffac
   1cc7c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1cc80:	ldr	r0, [fp, #-84]	; 0xffffffac
   1cc84:	bl	14f9c <_start@@Base+0x97c>
   1cc88:	strd	r0, [fp, #-12]
   1cc8c:	ldrd	r2, [fp, #-12]
   1cc90:	add	r1, pc, #928	; 0x3a0
   1cc94:	ldrd	r0, [r1]
   1cc98:	cmp	r3, r1
   1cc9c:	cmpeq	r2, r0
   1cca0:	bhi	1d140 <_start@@Base+0x8b20>
   1cca4:	ldrd	r2, [fp, #-12]
   1cca8:	add	r1, pc, #912	; 0x390
   1ccac:	ldrd	r0, [r1]
   1ccb0:	cmp	r3, r1
   1ccb4:	cmpeq	r2, r0
   1ccb8:	bne	1ce38 <_start@@Base+0x8818>
   1ccbc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ccc0:	add	r3, r3, #8
   1ccc4:	str	r3, [fp, #-84]	; 0xffffffac
   1ccc8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1cccc:	ldr	r0, [fp, #-84]	; 0xffffffac
   1ccd0:	bl	14f9c <_start@@Base+0x97c>
   1ccd4:	strd	r0, [fp, #-12]
   1ccd8:	ldrd	r2, [fp, #-12]
   1ccdc:	mov	r0, #0
   1cce0:	mov	r1, #-16777216	; 0xff000000
   1cce4:	and	r2, r2, r0
   1cce8:	and	r3, r3, r1
   1ccec:	cmp	r3, #889192448	; 0x35000000
   1ccf0:	cmpeq	r2, #0
   1ccf4:	bne	1ce20 <_start@@Base+0x8800>
   1ccf8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ccfc:	str	r3, [fp, #-16]
   1cd00:	mov	r3, #1
   1cd04:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cd08:	ldr	r1, [fp, #-16]
   1cd0c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cd10:	bl	15568 <_start@@Base+0xf48>
   1cd14:	str	r0, [fp, #-84]	; 0xffffffac
   1cd18:	ldr	r2, [fp, #-16]
   1cd1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cd20:	cmp	r2, r3
   1cd24:	beq	1ce08 <_start@@Base+0x87e8>
   1cd28:	mov	r3, #0
   1cd2c:	str	r3, [fp, #-36]	; 0xffffffdc
   1cd30:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cd34:	str	r3, [fp, #-16]
   1cd38:	sub	r3, fp, #36	; 0x24
   1cd3c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cd40:	ldr	r1, [fp, #-16]
   1cd44:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cd48:	bl	15e64 <_start@@Base+0x1844>
   1cd4c:	str	r0, [fp, #-84]	; 0xffffffac
   1cd50:	ldr	r2, [fp, #-16]
   1cd54:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cd58:	cmp	r2, r3
   1cd5c:	bne	1cdac <_start@@Base+0x878c>
   1cd60:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cd64:	str	r3, [fp, #-16]
   1cd68:	sub	r3, fp, #36	; 0x24
   1cd6c:	str	r3, [sp]
   1cd70:	ldr	r3, [pc, #736]	; 1d058 <_start@@Base+0x8a38>
   1cd74:	add	r3, pc, r3
   1cd78:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cd7c:	ldr	r1, [fp, #-16]
   1cd80:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cd84:	bl	166bc <_start@@Base+0x209c>
   1cd88:	str	r0, [fp, #-84]	; 0xffffffac
   1cd8c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1cd90:	ldr	r3, [fp, #-16]
   1cd94:	cmp	r2, r3
   1cd98:	beq	1d83c <_start@@Base+0x921c>
   1cd9c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1cda0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cda4:	cmp	r2, r3
   1cda8:	beq	1d83c <_start@@Base+0x921c>
   1cdac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cdb0:	cmp	r3, #0
   1cdb4:	bne	1cdcc <_start@@Base+0x87ac>
   1cdb8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cdbc:	ldr	r3, [r3, #8]
   1cdc0:	and	r3, r3, #2
   1cdc4:	cmp	r3, #0
   1cdc8:	beq	1d774 <_start@@Base+0x9154>
   1cdcc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cdd0:	ldr	r0, [r3]
   1cdd4:	mov	r3, #4
   1cdd8:	mov	r2, #4
   1cddc:	mov	r1, #1
   1cde0:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1cde4:	str	r0, [fp, #-20]	; 0xffffffec
   1cde8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cdec:	cmp	r3, #0
   1cdf0:	beq	1d7e4 <_start@@Base+0x91c4>
   1cdf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cdf8:	mov	r1, r3
   1cdfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ce00:	bl	1483c <_start@@Base+0x21c>
   1ce04:	b	1d774 <_start@@Base+0x9154>
   1ce08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ce0c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ce10:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ce14:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ce18:	str	r0, [fp, #-84]	; 0xffffffac
   1ce1c:	b	1d774 <_start@@Base+0x9154>
   1ce20:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ce24:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ce28:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ce2c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ce30:	str	r0, [fp, #-84]	; 0xffffffac
   1ce34:	b	1d774 <_start@@Base+0x9154>
   1ce38:	ldrd	r2, [fp, #-12]
   1ce3c:	mov	r0, #0
   1ce40:	mvn	r1, #0
   1ce44:	and	r2, r2, r0
   1ce48:	and	r3, r3, r1
   1ce4c:	add	r1, pc, #500	; 0x1f4
   1ce50:	ldrd	r0, [r1]
   1ce54:	cmp	r3, r1
   1ce58:	cmpeq	r2, r0
   1ce5c:	bne	1cee8 <_start@@Base+0x88c8>
   1ce60:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ce64:	str	r3, [fp, #-16]
   1ce68:	mov	r3, #4
   1ce6c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ce70:	ldr	r1, [fp, #-16]
   1ce74:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ce78:	bl	15568 <_start@@Base+0xf48>
   1ce7c:	str	r0, [fp, #-84]	; 0xffffffac
   1ce80:	ldr	r2, [fp, #-16]
   1ce84:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ce88:	cmp	r2, r3
   1ce8c:	beq	1cef0 <_start@@Base+0x88d0>
   1ce90:	sub	r3, fp, #32
   1ce94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ce98:	ldr	r1, [fp, #-84]	; 0xffffffac
   1ce9c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cea0:	bl	3cae8 <flatcc_json_parser_build_string@@Base>
   1cea4:	str	r0, [fp, #-84]	; 0xffffffac
   1cea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ceac:	cmp	r3, #0
   1ceb0:	beq	1d83c <_start@@Base+0x921c>
   1ceb4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ceb8:	ldr	r3, [r3]
   1cebc:	mov	r1, #0
   1cec0:	mov	r0, r3
   1cec4:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1cec8:	str	r0, [fp, #-24]	; 0xffffffe8
   1cecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ced0:	cmp	r3, #0
   1ced4:	beq	1d83c <_start@@Base+0x921c>
   1ced8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cedc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cee0:	str	r2, [r3]
   1cee4:	b	1d774 <_start@@Base+0x9154>
   1cee8:	nop			; (mov r0, r0)
   1ceec:	b	1cef4 <_start@@Base+0x88d4>
   1cef0:	nop			; (mov r0, r0)
   1cef4:	ldrd	r2, [fp, #-12]
   1cef8:	add	r1, pc, #336	; 0x150
   1cefc:	ldrd	r0, [r1]
   1cf00:	cmp	r3, r1
   1cf04:	cmpeq	r2, r0
   1cf08:	bne	1d060 <_start@@Base+0x8a40>
   1cf0c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cf10:	str	r3, [fp, #-16]
   1cf14:	mov	r3, #8
   1cf18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cf1c:	ldr	r1, [fp, #-16]
   1cf20:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cf24:	bl	15568 <_start@@Base+0xf48>
   1cf28:	str	r0, [fp, #-84]	; 0xffffffac
   1cf2c:	ldr	r2, [fp, #-16]
   1cf30:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cf34:	cmp	r2, r3
   1cf38:	beq	1d01c <_start@@Base+0x89fc>
   1cf3c:	mov	r2, #0
   1cf40:	mov	r3, #0
   1cf44:	strd	r2, [fp, #-44]	; 0xffffffd4
   1cf48:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cf4c:	str	r3, [fp, #-16]
   1cf50:	sub	r3, fp, #44	; 0x2c
   1cf54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cf58:	ldr	r1, [fp, #-16]
   1cf5c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cf60:	bl	160d4 <_start@@Base+0x1ab4>
   1cf64:	str	r0, [fp, #-84]	; 0xffffffac
   1cf68:	ldr	r2, [fp, #-16]
   1cf6c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cf70:	cmp	r2, r3
   1cf74:	bne	1cfc4 <_start@@Base+0x89a4>
   1cf78:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cf7c:	str	r3, [fp, #-16]
   1cf80:	sub	r3, fp, #44	; 0x2c
   1cf84:	str	r3, [sp]
   1cf88:	ldr	r3, [pc, #204]	; 1d05c <_start@@Base+0x8a3c>
   1cf8c:	add	r3, pc, r3
   1cf90:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cf94:	ldr	r1, [fp, #-16]
   1cf98:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cf9c:	bl	16b50 <_start@@Base+0x2530>
   1cfa0:	str	r0, [fp, #-84]	; 0xffffffac
   1cfa4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1cfa8:	ldr	r3, [fp, #-16]
   1cfac:	cmp	r2, r3
   1cfb0:	beq	1d83c <_start@@Base+0x921c>
   1cfb4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1cfb8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cfbc:	cmp	r2, r3
   1cfc0:	beq	1d83c <_start@@Base+0x921c>
   1cfc4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1cfc8:	orrs	r3, r2, r3
   1cfcc:	bne	1cfe4 <_start@@Base+0x89c4>
   1cfd0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cfd4:	ldr	r3, [r3, #8]
   1cfd8:	and	r3, r3, #2
   1cfdc:	cmp	r3, #0
   1cfe0:	beq	1d774 <_start@@Base+0x9154>
   1cfe4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cfe8:	ldr	r0, [r3]
   1cfec:	mov	r3, #8
   1cff0:	mov	r2, #8
   1cff4:	mov	r1, #3
   1cff8:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1cffc:	str	r0, [fp, #-20]	; 0xffffffec
   1d000:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d004:	cmp	r3, #0
   1d008:	beq	1d808 <_start@@Base+0x91e8>
   1d00c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1d010:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d014:	bl	14a20 <_start@@Base+0x400>
   1d018:	b	1d774 <_start@@Base+0x9154>
   1d01c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d020:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d024:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d028:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1d02c:	str	r0, [fp, #-84]	; 0xffffffac
   1d030:	b	1d774 <_start@@Base+0x9154>
   1d034:	nop			; (mov r0, r0)
   1d038:			; <UNDEFINED> instruction: 0xffffffff
   1d03c:	cmnvs	r3, #-2013265919	; 0x88000001
   1d040:	teqcc	r2, r4, lsr r3
   1d044:	cmnvs	r1, r1, ror #2
   1d048:	andeq	r0, r0, r0
   1d04c:	cmnvs	r1, r1, ror #2
   1d050:	teqcc	r2, r4, lsr r3
   1d054:	rsbvs	r6, r2, #536870918	; 0x20000006
   1d058:	andeq	r7, r4, ip, lsr #8
   1d05c:	andeq	r7, r4, r0, lsr #4
   1d060:	ldrd	r2, [fp, #-12]
   1d064:	mov	r0, #0
   1d068:	mvn	r1, #0
   1d06c:	and	r2, r2, r0
   1d070:	and	r3, r3, r1
   1d074:	add	r1, pc, #876	; 0x36c
   1d078:	ldrd	r0, [r1]
   1d07c:	cmp	r3, r1
   1d080:	cmpeq	r2, r0
   1d084:	bne	1d128 <_start@@Base+0x8b08>
   1d088:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d08c:	str	r3, [fp, #-16]
   1d090:	mov	r3, #4
   1d094:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d098:	ldr	r1, [fp, #-16]
   1d09c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d0a0:	bl	15568 <_start@@Base+0xf48>
   1d0a4:	str	r0, [fp, #-84]	; 0xffffffac
   1d0a8:	ldr	r2, [fp, #-16]
   1d0ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d0b0:	cmp	r2, r3
   1d0b4:	beq	1d110 <_start@@Base+0x8af0>
   1d0b8:	sub	r3, fp, #32
   1d0bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d0c0:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d0c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d0c8:	bl	3cae8 <flatcc_json_parser_build_string@@Base>
   1d0cc:	str	r0, [fp, #-84]	; 0xffffffac
   1d0d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d0d4:	cmp	r3, #0
   1d0d8:	beq	1d83c <_start@@Base+0x921c>
   1d0dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d0e0:	ldr	r3, [r3]
   1d0e4:	mov	r1, #2
   1d0e8:	mov	r0, r3
   1d0ec:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1d0f0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d0f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d0f8:	cmp	r3, #0
   1d0fc:	beq	1d83c <_start@@Base+0x921c>
   1d100:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d108:	str	r2, [r3]
   1d10c:	b	1d774 <_start@@Base+0x9154>
   1d110:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d114:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d118:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d11c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1d120:	str	r0, [fp, #-84]	; 0xffffffac
   1d124:	b	1d774 <_start@@Base+0x9154>
   1d128:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d12c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d130:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d134:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1d138:	str	r0, [fp, #-84]	; 0xffffffac
   1d13c:	b	1d774 <_start@@Base+0x9154>
   1d140:	ldrd	r2, [fp, #-12]
   1d144:	add	r1, pc, #676	; 0x2a4
   1d148:	ldrd	r0, [r1]
   1d14c:	cmp	r3, r1
   1d150:	cmpeq	r2, r0
   1d154:	bne	1d400 <_start@@Base+0x8de0>
   1d158:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d15c:	str	r3, [fp, #-16]
   1d160:	mov	r3, #8
   1d164:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d168:	ldr	r1, [fp, #-16]
   1d16c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d170:	bl	15568 <_start@@Base+0xf48>
   1d174:	str	r0, [fp, #-84]	; 0xffffffac
   1d178:	ldr	r2, [fp, #-16]
   1d17c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d180:	cmp	r2, r3
   1d184:	beq	1d268 <_start@@Base+0x8c48>
   1d188:	mov	r2, #0
   1d18c:	mov	r3, #0
   1d190:	strd	r2, [fp, #-52]	; 0xffffffcc
   1d194:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d198:	str	r3, [fp, #-16]
   1d19c:	sub	r3, fp, #52	; 0x34
   1d1a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d1a4:	ldr	r1, [fp, #-16]
   1d1a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d1ac:	bl	160d4 <_start@@Base+0x1ab4>
   1d1b0:	str	r0, [fp, #-84]	; 0xffffffac
   1d1b4:	ldr	r2, [fp, #-16]
   1d1b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d1bc:	cmp	r2, r3
   1d1c0:	bne	1d210 <_start@@Base+0x8bf0>
   1d1c4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d1c8:	str	r3, [fp, #-16]
   1d1cc:	sub	r3, fp, #52	; 0x34
   1d1d0:	str	r3, [sp]
   1d1d4:	ldr	r3, [pc, #540]	; 1d3f8 <_start@@Base+0x8dd8>
   1d1d8:	add	r3, pc, r3
   1d1dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d1e0:	ldr	r1, [fp, #-16]
   1d1e4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d1e8:	bl	16b50 <_start@@Base+0x2530>
   1d1ec:	str	r0, [fp, #-84]	; 0xffffffac
   1d1f0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d1f4:	ldr	r3, [fp, #-16]
   1d1f8:	cmp	r2, r3
   1d1fc:	beq	1d83c <_start@@Base+0x921c>
   1d200:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d204:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d208:	cmp	r2, r3
   1d20c:	beq	1d83c <_start@@Base+0x921c>
   1d210:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1d214:	orrs	r3, r2, r3
   1d218:	bne	1d230 <_start@@Base+0x8c10>
   1d21c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d220:	ldr	r3, [r3, #8]
   1d224:	and	r3, r3, #2
   1d228:	cmp	r3, #0
   1d22c:	beq	1d774 <_start@@Base+0x9154>
   1d230:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d234:	ldr	r0, [r3]
   1d238:	mov	r3, #8
   1d23c:	mov	r2, #8
   1d240:	mov	r1, #5
   1d244:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1d248:	str	r0, [fp, #-20]	; 0xffffffec
   1d24c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d250:	cmp	r3, #0
   1d254:	beq	1d810 <_start@@Base+0x91f0>
   1d258:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1d25c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d260:	bl	14a20 <_start@@Base+0x400>
   1d264:	b	1d774 <_start@@Base+0x9154>
   1d268:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d26c:	add	r3, r3, #8
   1d270:	str	r3, [fp, #-84]	; 0xffffffac
   1d274:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1d278:	ldr	r0, [fp, #-84]	; 0xffffffac
   1d27c:	bl	14f9c <_start@@Base+0x97c>
   1d280:	strd	r0, [fp, #-12]
   1d284:	ldrd	r2, [fp, #-12]
   1d288:	mov	r0, #0
   1d28c:	mov	r1, #-16777216	; 0xff000000
   1d290:	and	r2, r2, r0
   1d294:	and	r3, r3, r1
   1d298:	cmp	r3, #889192448	; 0x35000000
   1d29c:	cmpeq	r2, #0
   1d2a0:	bne	1d3cc <_start@@Base+0x8dac>
   1d2a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d2a8:	str	r3, [fp, #-16]
   1d2ac:	mov	r3, #1
   1d2b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d2b4:	ldr	r1, [fp, #-16]
   1d2b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d2bc:	bl	15568 <_start@@Base+0xf48>
   1d2c0:	str	r0, [fp, #-84]	; 0xffffffac
   1d2c4:	ldr	r2, [fp, #-16]
   1d2c8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d2cc:	cmp	r2, r3
   1d2d0:	beq	1d3b4 <_start@@Base+0x8d94>
   1d2d4:	mov	r3, #0
   1d2d8:	str	r3, [fp, #-56]	; 0xffffffc8
   1d2dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d2e0:	str	r3, [fp, #-16]
   1d2e4:	sub	r3, fp, #56	; 0x38
   1d2e8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d2ec:	ldr	r1, [fp, #-16]
   1d2f0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d2f4:	bl	15e64 <_start@@Base+0x1844>
   1d2f8:	str	r0, [fp, #-84]	; 0xffffffac
   1d2fc:	ldr	r2, [fp, #-16]
   1d300:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d304:	cmp	r2, r3
   1d308:	bne	1d358 <_start@@Base+0x8d38>
   1d30c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d310:	str	r3, [fp, #-16]
   1d314:	sub	r3, fp, #56	; 0x38
   1d318:	str	r3, [sp]
   1d31c:	ldr	r3, [pc, #216]	; 1d3fc <_start@@Base+0x8ddc>
   1d320:	add	r3, pc, r3
   1d324:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d328:	ldr	r1, [fp, #-16]
   1d32c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d330:	bl	166bc <_start@@Base+0x209c>
   1d334:	str	r0, [fp, #-84]	; 0xffffffac
   1d338:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d33c:	ldr	r3, [fp, #-16]
   1d340:	cmp	r2, r3
   1d344:	beq	1d83c <_start@@Base+0x921c>
   1d348:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d34c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d350:	cmp	r2, r3
   1d354:	beq	1d83c <_start@@Base+0x921c>
   1d358:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d35c:	cmp	r3, #0
   1d360:	bne	1d378 <_start@@Base+0x8d58>
   1d364:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d368:	ldr	r3, [r3, #8]
   1d36c:	and	r3, r3, #2
   1d370:	cmp	r3, #0
   1d374:	beq	1d774 <_start@@Base+0x9154>
   1d378:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d37c:	ldr	r0, [r3]
   1d380:	mov	r3, #4
   1d384:	mov	r2, #4
   1d388:	mov	r1, #6
   1d38c:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1d390:	str	r0, [fp, #-20]	; 0xffffffec
   1d394:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d398:	cmp	r3, #0
   1d39c:	beq	1d818 <_start@@Base+0x91f8>
   1d3a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3a4:	mov	r1, r3
   1d3a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d3ac:	bl	1483c <_start@@Base+0x21c>
   1d3b0:	b	1d774 <_start@@Base+0x9154>
   1d3b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d3b8:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d3bc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d3c0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1d3c4:	str	r0, [fp, #-84]	; 0xffffffac
   1d3c8:	b	1d774 <_start@@Base+0x9154>
   1d3cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d3d0:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d3d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d3d8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1d3dc:	str	r0, [fp, #-84]	; 0xffffffac
   1d3e0:	b	1d774 <_start@@Base+0x9154>
   1d3e4:	nop			; (mov r0, r0)
   1d3e8:	andeq	r0, r0, r0
   1d3ec:	rsbvs	r6, r2, #536870918	; 0x20000006
   1d3f0:	teqcc	r2, r4, lsr r3
   1d3f4:	cmnvs	r3, #-1946157055	; 0x8c000001
   1d3f8:	andeq	r6, r4, r0, ror #31
   1d3fc:	andeq	r6, r4, r4, lsr #29
   1d400:	ldrd	r2, [fp, #-12]
   1d404:	mov	r0, #0
   1d408:	mvn	r1, #0
   1d40c:	and	r2, r2, r0
   1d410:	and	r3, r3, r1
   1d414:	add	r1, pc, #980	; 0x3d4
   1d418:	ldrd	r0, [r1]
   1d41c:	cmp	r3, r1
   1d420:	cmpeq	r2, r0
   1d424:	bne	1d4b0 <_start@@Base+0x8e90>
   1d428:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d42c:	str	r3, [fp, #-16]
   1d430:	mov	r3, #4
   1d434:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d438:	ldr	r1, [fp, #-16]
   1d43c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d440:	bl	15568 <_start@@Base+0xf48>
   1d444:	str	r0, [fp, #-84]	; 0xffffffac
   1d448:	ldr	r2, [fp, #-16]
   1d44c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d450:	cmp	r2, r3
   1d454:	beq	1d4b8 <_start@@Base+0x8e98>
   1d458:	sub	r3, fp, #32
   1d45c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d460:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d464:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d468:	bl	3cae8 <flatcc_json_parser_build_string@@Base>
   1d46c:	str	r0, [fp, #-84]	; 0xffffffac
   1d470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d474:	cmp	r3, #0
   1d478:	beq	1d83c <_start@@Base+0x921c>
   1d47c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d480:	ldr	r3, [r3]
   1d484:	mov	r1, #4
   1d488:	mov	r0, r3
   1d48c:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1d490:	str	r0, [fp, #-24]	; 0xffffffe8
   1d494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d498:	cmp	r3, #0
   1d49c:	beq	1d83c <_start@@Base+0x921c>
   1d4a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d4a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d4a8:	str	r2, [r3]
   1d4ac:	b	1d774 <_start@@Base+0x9154>
   1d4b0:	nop			; (mov r0, r0)
   1d4b4:	b	1d4bc <_start@@Base+0x8e9c>
   1d4b8:	nop			; (mov r0, r0)
   1d4bc:	ldrd	r2, [fp, #-12]
   1d4c0:	add	r1, pc, #816	; 0x330
   1d4c4:	ldrd	r0, [r1]
   1d4c8:	cmp	r3, r1
   1d4cc:	cmpeq	r2, r0
   1d4d0:	bne	1d760 <_start@@Base+0x9140>
   1d4d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d4d8:	str	r3, [fp, #-16]
   1d4dc:	mov	r3, #8
   1d4e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d4e4:	ldr	r1, [fp, #-16]
   1d4e8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d4ec:	bl	15568 <_start@@Base+0xf48>
   1d4f0:	str	r0, [fp, #-84]	; 0xffffffac
   1d4f4:	ldr	r2, [fp, #-16]
   1d4f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d4fc:	cmp	r2, r3
   1d500:	beq	1d5e4 <_start@@Base+0x8fc4>
   1d504:	mov	r2, #0
   1d508:	mov	r3, #0
   1d50c:	strd	r2, [fp, #-68]	; 0xffffffbc
   1d510:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d514:	str	r3, [fp, #-16]
   1d518:	sub	r3, fp, #68	; 0x44
   1d51c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d520:	ldr	r1, [fp, #-16]
   1d524:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d528:	bl	160d4 <_start@@Base+0x1ab4>
   1d52c:	str	r0, [fp, #-84]	; 0xffffffac
   1d530:	ldr	r2, [fp, #-16]
   1d534:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d538:	cmp	r2, r3
   1d53c:	bne	1d58c <_start@@Base+0x8f6c>
   1d540:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d544:	str	r3, [fp, #-16]
   1d548:	sub	r3, fp, #68	; 0x44
   1d54c:	str	r3, [sp]
   1d550:	ldr	r3, [pc, #680]	; 1d800 <_start@@Base+0x91e0>
   1d554:	add	r3, pc, r3
   1d558:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d55c:	ldr	r1, [fp, #-16]
   1d560:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d564:	bl	16b50 <_start@@Base+0x2530>
   1d568:	str	r0, [fp, #-84]	; 0xffffffac
   1d56c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d570:	ldr	r3, [fp, #-16]
   1d574:	cmp	r2, r3
   1d578:	beq	1d83c <_start@@Base+0x921c>
   1d57c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d580:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d584:	cmp	r2, r3
   1d588:	beq	1d83c <_start@@Base+0x921c>
   1d58c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1d590:	orrs	r3, r2, r3
   1d594:	bne	1d5ac <_start@@Base+0x8f8c>
   1d598:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d59c:	ldr	r3, [r3, #8]
   1d5a0:	and	r3, r3, #2
   1d5a4:	cmp	r3, #0
   1d5a8:	beq	1d774 <_start@@Base+0x9154>
   1d5ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d5b0:	ldr	r0, [r3]
   1d5b4:	mov	r3, #8
   1d5b8:	mov	r2, #8
   1d5bc:	mov	r1, #7
   1d5c0:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1d5c4:	str	r0, [fp, #-20]	; 0xffffffec
   1d5c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d5cc:	cmp	r3, #0
   1d5d0:	beq	1d820 <_start@@Base+0x9200>
   1d5d4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1d5d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d5dc:	bl	14a20 <_start@@Base+0x400>
   1d5e0:	b	1d774 <_start@@Base+0x9154>
   1d5e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d5e8:	add	r3, r3, #8
   1d5ec:	str	r3, [fp, #-84]	; 0xffffffac
   1d5f0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1d5f4:	ldr	r0, [fp, #-84]	; 0xffffffac
   1d5f8:	bl	14f9c <_start@@Base+0x97c>
   1d5fc:	strd	r0, [fp, #-12]
   1d600:	ldrd	r2, [fp, #-12]
   1d604:	mov	r0, #0
   1d608:	mov	r1, #-16777216	; 0xff000000
   1d60c:	and	r2, r2, r0
   1d610:	and	r3, r3, r1
   1d614:	cmp	r3, #889192448	; 0x35000000
   1d618:	cmpeq	r2, #0
   1d61c:	bne	1d748 <_start@@Base+0x9128>
   1d620:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d624:	str	r3, [fp, #-16]
   1d628:	mov	r3, #1
   1d62c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d630:	ldr	r1, [fp, #-16]
   1d634:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d638:	bl	15568 <_start@@Base+0xf48>
   1d63c:	str	r0, [fp, #-84]	; 0xffffffac
   1d640:	ldr	r2, [fp, #-16]
   1d644:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d648:	cmp	r2, r3
   1d64c:	beq	1d730 <_start@@Base+0x9110>
   1d650:	mov	r3, #0
   1d654:	str	r3, [fp, #-72]	; 0xffffffb8
   1d658:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d65c:	str	r3, [fp, #-16]
   1d660:	sub	r3, fp, #72	; 0x48
   1d664:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d668:	ldr	r1, [fp, #-16]
   1d66c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d670:	bl	15e64 <_start@@Base+0x1844>
   1d674:	str	r0, [fp, #-84]	; 0xffffffac
   1d678:	ldr	r2, [fp, #-16]
   1d67c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d680:	cmp	r2, r3
   1d684:	bne	1d6d4 <_start@@Base+0x90b4>
   1d688:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d68c:	str	r3, [fp, #-16]
   1d690:	sub	r3, fp, #72	; 0x48
   1d694:	str	r3, [sp]
   1d698:	ldr	r3, [pc, #356]	; 1d804 <_start@@Base+0x91e4>
   1d69c:	add	r3, pc, r3
   1d6a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d6a4:	ldr	r1, [fp, #-16]
   1d6a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d6ac:	bl	166bc <_start@@Base+0x209c>
   1d6b0:	str	r0, [fp, #-84]	; 0xffffffac
   1d6b4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d6b8:	ldr	r3, [fp, #-16]
   1d6bc:	cmp	r2, r3
   1d6c0:	beq	1d83c <_start@@Base+0x921c>
   1d6c4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d6c8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d6cc:	cmp	r2, r3
   1d6d0:	beq	1d83c <_start@@Base+0x921c>
   1d6d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d6d8:	cmp	r3, #0
   1d6dc:	bne	1d6f4 <_start@@Base+0x90d4>
   1d6e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d6e4:	ldr	r3, [r3, #8]
   1d6e8:	and	r3, r3, #2
   1d6ec:	cmp	r3, #0
   1d6f0:	beq	1d774 <_start@@Base+0x9154>
   1d6f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d6f8:	ldr	r0, [r3]
   1d6fc:	mov	r3, #4
   1d700:	mov	r2, #4
   1d704:	mov	r1, #8
   1d708:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1d70c:	str	r0, [fp, #-20]	; 0xffffffec
   1d710:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d714:	cmp	r3, #0
   1d718:	beq	1d828 <_start@@Base+0x9208>
   1d71c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d720:	mov	r1, r3
   1d724:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d728:	bl	1483c <_start@@Base+0x21c>
   1d72c:	b	1d774 <_start@@Base+0x9154>
   1d730:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d734:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d738:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d73c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1d740:	str	r0, [fp, #-84]	; 0xffffffac
   1d744:	b	1d774 <_start@@Base+0x9154>
   1d748:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d74c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d750:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d754:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1d758:	str	r0, [fp, #-84]	; 0xffffffac
   1d75c:	b	1d774 <_start@@Base+0x9154>
   1d760:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d764:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d768:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d76c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1d770:	str	r0, [fp, #-84]	; 0xffffffac
   1d774:	sub	r3, fp, #28
   1d778:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d77c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d780:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d784:	bl	151b0 <_start@@Base+0xb90>
   1d788:	str	r0, [fp, #-84]	; 0xffffffac
   1d78c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d790:	cmp	r3, #0
   1d794:	bne	1cc68 <_start@@Base+0x8648>
   1d798:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d79c:	ldr	r3, [r3, #24]
   1d7a0:	cmp	r3, #0
   1d7a4:	bne	1d830 <_start@@Base+0x9210>
   1d7a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d7ac:	ldr	r3, [r3]
   1d7b0:	mov	r0, r3
   1d7b4:	bl	30634 <flatcc_builder_end_table@@Base>
   1d7b8:	mov	r2, r0
   1d7bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1d7c0:	str	r2, [r3]
   1d7c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1d7c8:	ldr	r3, [r3]
   1d7cc:	cmp	r3, #0
   1d7d0:	beq	1d838 <_start@@Base+0x9218>
   1d7d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d7d8:	b	1d854 <_start@@Base+0x9234>
   1d7dc:	nop			; (mov r0, r0)
   1d7e0:	b	1d83c <_start@@Base+0x921c>
   1d7e4:	nop			; (mov r0, r0)
   1d7e8:	b	1d83c <_start@@Base+0x921c>
   1d7ec:	nop			; (mov r0, r0)
   1d7f0:	andeq	r0, r0, r0
   1d7f4:	cmnvs	r3, #-1946157055	; 0x8c000001
   1d7f8:	teqcc	r2, r4, lsr r3
   1d7fc:	strbtvs	r6, [r4], #-1124	; 0xfffffb9c
   1d800:	andeq	r6, r4, ip, ror ip
   1d804:	andeq	r6, r4, r0, asr #22
   1d808:	nop			; (mov r0, r0)
   1d80c:	b	1d83c <_start@@Base+0x921c>
   1d810:	nop			; (mov r0, r0)
   1d814:	b	1d83c <_start@@Base+0x921c>
   1d818:	nop			; (mov r0, r0)
   1d81c:	b	1d83c <_start@@Base+0x921c>
   1d820:	nop			; (mov r0, r0)
   1d824:	b	1d83c <_start@@Base+0x921c>
   1d828:	nop			; (mov r0, r0)
   1d82c:	b	1d83c <_start@@Base+0x921c>
   1d830:	nop			; (mov r0, r0)
   1d834:	b	1d83c <_start@@Base+0x921c>
   1d838:	nop			; (mov r0, r0)
   1d83c:	mov	r3, #33	; 0x21
   1d840:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d844:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d848:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d84c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1d850:	mov	r3, r0
   1d854:	mov	r0, r3
   1d858:	sub	sp, fp, #4
   1d85c:	pop	{fp, pc}
   1d860:	push	{fp, lr}
   1d864:	add	fp, sp, #4
   1d868:	sub	sp, sp, #64	; 0x40
   1d86c:	str	r0, [fp, #-48]	; 0xffffffd0
   1d870:	str	r1, [fp, #-52]	; 0xffffffcc
   1d874:	str	r2, [fp, #-56]	; 0xffffffc8
   1d878:	str	r3, [fp, #-60]	; 0xffffffc4
   1d87c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d880:	mov	r2, #0
   1d884:	str	r2, [r3]
   1d888:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d88c:	ldr	r3, [r3]
   1d890:	mov	r1, #2
   1d894:	mov	r0, r3
   1d898:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1d89c:	mov	r3, r0
   1d8a0:	cmp	r3, #0
   1d8a4:	bne	1dc40 <_start@@Base+0x9620>
   1d8a8:	sub	r3, fp, #24
   1d8ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d8b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d8b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d8b8:	bl	150c8 <_start@@Base+0xaa8>
   1d8bc:	str	r0, [fp, #-52]	; 0xffffffcc
   1d8c0:	b	1dbf0 <_start@@Base+0x95d0>
   1d8c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d8c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d8cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d8d0:	bl	14cb8 <_start@@Base+0x698>
   1d8d4:	str	r0, [fp, #-52]	; 0xffffffcc
   1d8d8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d8dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d8e0:	bl	14f9c <_start@@Base+0x97c>
   1d8e4:	strd	r0, [fp, #-12]
   1d8e8:	ldrd	r2, [fp, #-12]
   1d8ec:	add	r1, pc, #916	; 0x394
   1d8f0:	ldrd	r0, [r1]
   1d8f4:	cmp	r3, r1
   1d8f8:	cmpeq	r2, r0
   1d8fc:	bne	1dbc4 <_start@@Base+0x95a4>
   1d900:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d904:	add	r3, r3, #8
   1d908:	str	r3, [fp, #-52]	; 0xffffffcc
   1d90c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d910:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d914:	bl	14f9c <_start@@Base+0x97c>
   1d918:	strd	r0, [fp, #-12]
   1d91c:	ldrd	r2, [fp, #-12]
   1d920:	mvn	r0, #255	; 0xff
   1d924:	mvn	r1, #0
   1d928:	and	r2, r2, r0
   1d92c:	and	r3, r3, r1
   1d930:	add	r1, pc, #856	; 0x358
   1d934:	ldrd	r0, [r1]
   1d938:	cmp	r3, r1
   1d93c:	cmpeq	r2, r0
   1d940:	bne	1da6c <_start@@Base+0x944c>
   1d944:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d948:	str	r3, [fp, #-16]
   1d94c:	mov	r3, #7
   1d950:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d954:	ldr	r1, [fp, #-16]
   1d958:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d95c:	bl	15568 <_start@@Base+0xf48>
   1d960:	str	r0, [fp, #-52]	; 0xffffffcc
   1d964:	ldr	r2, [fp, #-16]
   1d968:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d96c:	cmp	r2, r3
   1d970:	beq	1da54 <_start@@Base+0x9434>
   1d974:	mov	r2, #0
   1d978:	mov	r3, #0
   1d97c:	strd	r2, [fp, #-36]	; 0xffffffdc
   1d980:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d984:	str	r3, [fp, #-16]
   1d988:	sub	r3, fp, #36	; 0x24
   1d98c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d990:	ldr	r1, [fp, #-16]
   1d994:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d998:	bl	160d4 <_start@@Base+0x1ab4>
   1d99c:	str	r0, [fp, #-52]	; 0xffffffcc
   1d9a0:	ldr	r2, [fp, #-16]
   1d9a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d9a8:	cmp	r2, r3
   1d9ac:	bne	1d9fc <_start@@Base+0x93dc>
   1d9b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d9b4:	str	r3, [fp, #-16]
   1d9b8:	sub	r3, fp, #36	; 0x24
   1d9bc:	str	r3, [sp]
   1d9c0:	ldr	r3, [pc, #728]	; 1dca0 <_start@@Base+0x9680>
   1d9c4:	add	r3, pc, r3
   1d9c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d9cc:	ldr	r1, [fp, #-16]
   1d9d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d9d4:	bl	16b50 <_start@@Base+0x2530>
   1d9d8:	str	r0, [fp, #-52]	; 0xffffffcc
   1d9dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d9e0:	ldr	r3, [fp, #-16]
   1d9e4:	cmp	r2, r3
   1d9e8:	beq	1dc64 <_start@@Base+0x9644>
   1d9ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d9f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d9f4:	cmp	r2, r3
   1d9f8:	beq	1dc64 <_start@@Base+0x9644>
   1d9fc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1da00:	orrs	r3, r2, r3
   1da04:	bne	1da1c <_start@@Base+0x93fc>
   1da08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1da0c:	ldr	r3, [r3, #8]
   1da10:	and	r3, r3, #2
   1da14:	cmp	r3, #0
   1da18:	beq	1dbd8 <_start@@Base+0x95b8>
   1da1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1da20:	ldr	r0, [r3]
   1da24:	mov	r3, #8
   1da28:	mov	r2, #8
   1da2c:	mov	r1, #0
   1da30:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1da34:	str	r0, [fp, #-20]	; 0xffffffec
   1da38:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da3c:	cmp	r3, #0
   1da40:	beq	1dc48 <_start@@Base+0x9628>
   1da44:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1da48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da4c:	bl	14a20 <_start@@Base+0x400>
   1da50:	b	1dbd8 <_start@@Base+0x95b8>
   1da54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1da58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1da5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1da60:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1da64:	str	r0, [fp, #-52]	; 0xffffffcc
   1da68:	b	1dbd8 <_start@@Base+0x95b8>
   1da6c:	ldrd	r2, [fp, #-12]
   1da70:	add	r1, pc, #544	; 0x220
   1da74:	ldrd	r0, [r1]
   1da78:	cmp	r3, r1
   1da7c:	cmpeq	r2, r0
   1da80:	bne	1dbac <_start@@Base+0x958c>
   1da84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1da88:	str	r3, [fp, #-16]
   1da8c:	mov	r3, #8
   1da90:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1da94:	ldr	r1, [fp, #-16]
   1da98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1da9c:	bl	15568 <_start@@Base+0xf48>
   1daa0:	str	r0, [fp, #-52]	; 0xffffffcc
   1daa4:	ldr	r2, [fp, #-16]
   1daa8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1daac:	cmp	r2, r3
   1dab0:	beq	1db94 <_start@@Base+0x9574>
   1dab4:	mov	r3, #0
   1dab8:	str	r3, [fp, #-40]	; 0xffffffd8
   1dabc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dac0:	str	r3, [fp, #-16]
   1dac4:	sub	r3, fp, #40	; 0x28
   1dac8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1dacc:	ldr	r1, [fp, #-16]
   1dad0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dad4:	bl	15e64 <_start@@Base+0x1844>
   1dad8:	str	r0, [fp, #-52]	; 0xffffffcc
   1dadc:	ldr	r2, [fp, #-16]
   1dae0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dae4:	cmp	r2, r3
   1dae8:	bne	1db38 <_start@@Base+0x9518>
   1daec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1daf0:	str	r3, [fp, #-16]
   1daf4:	sub	r3, fp, #40	; 0x28
   1daf8:	str	r3, [sp]
   1dafc:	ldr	r3, [pc, #416]	; 1dca4 <_start@@Base+0x9684>
   1db00:	add	r3, pc, r3
   1db04:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1db08:	ldr	r1, [fp, #-16]
   1db0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1db10:	bl	166bc <_start@@Base+0x209c>
   1db14:	str	r0, [fp, #-52]	; 0xffffffcc
   1db18:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1db1c:	ldr	r3, [fp, #-16]
   1db20:	cmp	r2, r3
   1db24:	beq	1dc64 <_start@@Base+0x9644>
   1db28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1db2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1db30:	cmp	r2, r3
   1db34:	beq	1dc64 <_start@@Base+0x9644>
   1db38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1db3c:	cmp	r3, #0
   1db40:	bne	1db58 <_start@@Base+0x9538>
   1db44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1db48:	ldr	r3, [r3, #8]
   1db4c:	and	r3, r3, #2
   1db50:	cmp	r3, #0
   1db54:	beq	1dbd8 <_start@@Base+0x95b8>
   1db58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1db5c:	ldr	r0, [r3]
   1db60:	mov	r3, #4
   1db64:	mov	r2, #4
   1db68:	mov	r1, #1
   1db6c:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1db70:	str	r0, [fp, #-20]	; 0xffffffec
   1db74:	ldr	r3, [fp, #-20]	; 0xffffffec
   1db78:	cmp	r3, #0
   1db7c:	beq	1dc50 <_start@@Base+0x9630>
   1db80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1db84:	mov	r1, r3
   1db88:	ldr	r0, [fp, #-20]	; 0xffffffec
   1db8c:	bl	1483c <_start@@Base+0x21c>
   1db90:	b	1dbd8 <_start@@Base+0x95b8>
   1db94:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1db98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1db9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dba0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1dba4:	str	r0, [fp, #-52]	; 0xffffffcc
   1dba8:	b	1dbd8 <_start@@Base+0x95b8>
   1dbac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1dbb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1dbb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dbb8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1dbbc:	str	r0, [fp, #-52]	; 0xffffffcc
   1dbc0:	b	1dbd8 <_start@@Base+0x95b8>
   1dbc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1dbc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1dbcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dbd0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1dbd4:	str	r0, [fp, #-52]	; 0xffffffcc
   1dbd8:	sub	r3, fp, #24
   1dbdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1dbe0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1dbe4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dbe8:	bl	151b0 <_start@@Base+0xb90>
   1dbec:	str	r0, [fp, #-52]	; 0xffffffcc
   1dbf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dbf4:	cmp	r3, #0
   1dbf8:	bne	1d8c4 <_start@@Base+0x92a4>
   1dbfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dc00:	ldr	r3, [r3, #24]
   1dc04:	cmp	r3, #0
   1dc08:	bne	1dc58 <_start@@Base+0x9638>
   1dc0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dc10:	ldr	r3, [r3]
   1dc14:	mov	r0, r3
   1dc18:	bl	30634 <flatcc_builder_end_table@@Base>
   1dc1c:	mov	r2, r0
   1dc20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1dc24:	str	r2, [r3]
   1dc28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1dc2c:	ldr	r3, [r3]
   1dc30:	cmp	r3, #0
   1dc34:	beq	1dc60 <_start@@Base+0x9640>
   1dc38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dc3c:	b	1dc7c <_start@@Base+0x965c>
   1dc40:	nop			; (mov r0, r0)
   1dc44:	b	1dc64 <_start@@Base+0x9644>
   1dc48:	nop			; (mov r0, r0)
   1dc4c:	b	1dc64 <_start@@Base+0x9644>
   1dc50:	nop			; (mov r0, r0)
   1dc54:	b	1dc64 <_start@@Base+0x9644>
   1dc58:	nop			; (mov r0, r0)
   1dc5c:	b	1dc64 <_start@@Base+0x9644>
   1dc60:	nop			; (mov r0, r0)
   1dc64:	mov	r3, #33	; 0x21
   1dc68:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1dc6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1dc70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dc74:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1dc78:	mov	r3, r0
   1dc7c:	mov	r0, r3
   1dc80:	sub	sp, fp, #4
   1dc84:	pop	{fp, pc}
   1dc88:	svcpl	0x00626262
   1dc8c:	cmnvs	r1, r1, ror #2
   1dc90:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1dc94:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1dc98:	cmnvs	r2, pc, asr r4
   1dc9c:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1dca0:	andeq	r6, r4, r4, lsr #16
   1dca4:	strdeq	r6, [r4], -r4
   1dca8:	push	{fp, lr}
   1dcac:	add	fp, sp, #4
   1dcb0:	sub	sp, sp, #56	; 0x38
   1dcb4:	str	r0, [fp, #-40]	; 0xffffffd8
   1dcb8:	str	r1, [fp, #-44]	; 0xffffffd4
   1dcbc:	str	r2, [fp, #-48]	; 0xffffffd0
   1dcc0:	str	r3, [fp, #-52]	; 0xffffffcc
   1dcc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dcc8:	mov	r2, #0
   1dccc:	str	r2, [r3]
   1dcd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dcd4:	ldr	r3, [r3]
   1dcd8:	mov	r1, #2
   1dcdc:	mov	r0, r3
   1dce0:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1dce4:	mov	r3, r0
   1dce8:	cmp	r3, #0
   1dcec:	bne	1e0e4 <_start@@Base+0x9ac4>
   1dcf0:	sub	r3, fp, #24
   1dcf4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dcf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dcfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dd00:	bl	150c8 <_start@@Base+0xaa8>
   1dd04:	str	r0, [fp, #-44]	; 0xffffffd4
   1dd08:	b	1e094 <_start@@Base+0x9a74>
   1dd0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dd10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dd14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dd18:	bl	14cb8 <_start@@Base+0x698>
   1dd1c:	str	r0, [fp, #-44]	; 0xffffffd4
   1dd20:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1dd24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dd28:	bl	14f9c <_start@@Base+0x97c>
   1dd2c:	strd	r0, [fp, #-12]
   1dd30:	ldrd	r2, [fp, #-12]
   1dd34:	add	r1, pc, #972	; 0x3cc
   1dd38:	ldrd	r0, [r1]
   1dd3c:	cmp	r3, r1
   1dd40:	cmpeq	r2, r0
   1dd44:	bne	1e068 <_start@@Base+0x9a48>
   1dd48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dd4c:	add	r3, r3, #8
   1dd50:	str	r3, [fp, #-44]	; 0xffffffd4
   1dd54:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1dd58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dd5c:	bl	14f9c <_start@@Base+0x97c>
   1dd60:	strd	r0, [fp, #-12]
   1dd64:	ldrd	r2, [fp, #-12]
   1dd68:	add	r1, pc, #928	; 0x3a0
   1dd6c:	ldrd	r0, [r1]
   1dd70:	cmp	r3, r1
   1dd74:	cmpeq	r2, r0
   1dd78:	bne	1df00 <_start@@Base+0x98e0>
   1dd7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dd80:	add	r3, r3, #8
   1dd84:	str	r3, [fp, #-44]	; 0xffffffd4
   1dd88:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1dd8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dd90:	bl	14f9c <_start@@Base+0x97c>
   1dd94:	strd	r0, [fp, #-12]
   1dd98:	ldrd	r2, [fp, #-12]
   1dd9c:	mov	r0, #-16777216	; 0xff000000
   1dda0:	mvn	r1, #0
   1dda4:	and	r2, r2, r0
   1dda8:	and	r3, r3, r1
   1ddac:	add	r1, pc, #868	; 0x364
   1ddb0:	ldrd	r0, [r1]
   1ddb4:	cmp	r3, r1
   1ddb8:	cmpeq	r2, r0
   1ddbc:	bne	1dee8 <_start@@Base+0x98c8>
   1ddc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ddc4:	str	r3, [fp, #-16]
   1ddc8:	mov	r3, #5
   1ddcc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ddd0:	ldr	r1, [fp, #-16]
   1ddd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ddd8:	bl	15568 <_start@@Base+0xf48>
   1dddc:	str	r0, [fp, #-44]	; 0xffffffd4
   1dde0:	ldr	r2, [fp, #-16]
   1dde4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dde8:	cmp	r2, r3
   1ddec:	beq	1ded0 <_start@@Base+0x98b0>
   1ddf0:	mov	r3, #0
   1ddf4:	str	r3, [fp, #-28]	; 0xffffffe4
   1ddf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ddfc:	str	r3, [fp, #-16]
   1de00:	sub	r3, fp, #28
   1de04:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1de08:	ldr	r1, [fp, #-16]
   1de0c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1de10:	bl	15e64 <_start@@Base+0x1844>
   1de14:	str	r0, [fp, #-44]	; 0xffffffd4
   1de18:	ldr	r2, [fp, #-16]
   1de1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1de20:	cmp	r2, r3
   1de24:	bne	1de74 <_start@@Base+0x9854>
   1de28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1de2c:	str	r3, [fp, #-16]
   1de30:	sub	r3, fp, #28
   1de34:	str	r3, [sp]
   1de38:	ldr	r3, [pc, #744]	; 1e128 <_start@@Base+0x9b08>
   1de3c:	add	r3, pc, r3
   1de40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1de44:	ldr	r1, [fp, #-16]
   1de48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1de4c:	bl	166bc <_start@@Base+0x209c>
   1de50:	str	r0, [fp, #-44]	; 0xffffffd4
   1de54:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1de58:	ldr	r3, [fp, #-16]
   1de5c:	cmp	r2, r3
   1de60:	beq	1e134 <_start@@Base+0x9b14>
   1de64:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1de68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1de6c:	cmp	r2, r3
   1de70:	beq	1e134 <_start@@Base+0x9b14>
   1de74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de78:	cmp	r3, #0
   1de7c:	bne	1de94 <_start@@Base+0x9874>
   1de80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1de84:	ldr	r3, [r3, #8]
   1de88:	and	r3, r3, #2
   1de8c:	cmp	r3, #0
   1de90:	beq	1e07c <_start@@Base+0x9a5c>
   1de94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1de98:	ldr	r0, [r3]
   1de9c:	mov	r3, #4
   1dea0:	mov	r2, #4
   1dea4:	mov	r1, #1
   1dea8:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1deac:	str	r0, [fp, #-20]	; 0xffffffec
   1deb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1deb4:	cmp	r3, #0
   1deb8:	beq	1e0ec <_start@@Base+0x9acc>
   1debc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dec0:	mov	r1, r3
   1dec4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dec8:	bl	1483c <_start@@Base+0x21c>
   1decc:	b	1e07c <_start@@Base+0x9a5c>
   1ded0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ded4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ded8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dedc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1dee0:	str	r0, [fp, #-44]	; 0xffffffd4
   1dee4:	b	1e07c <_start@@Base+0x9a5c>
   1dee8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1deec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1def0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1def4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1def8:	str	r0, [fp, #-44]	; 0xffffffd4
   1defc:	b	1e07c <_start@@Base+0x9a5c>
   1df00:	ldrd	r2, [fp, #-12]
   1df04:	mvn	r0, #255	; 0xff
   1df08:	mvn	r1, #0
   1df0c:	and	r2, r2, r0
   1df10:	and	r3, r3, r1
   1df14:	add	r1, pc, #516	; 0x204
   1df18:	ldrd	r0, [r1]
   1df1c:	cmp	r3, r1
   1df20:	cmpeq	r2, r0
   1df24:	bne	1e050 <_start@@Base+0x9a30>
   1df28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df2c:	str	r3, [fp, #-16]
   1df30:	mov	r3, #7
   1df34:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1df38:	ldr	r1, [fp, #-16]
   1df3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1df40:	bl	15568 <_start@@Base+0xf48>
   1df44:	str	r0, [fp, #-44]	; 0xffffffd4
   1df48:	ldr	r2, [fp, #-16]
   1df4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df50:	cmp	r2, r3
   1df54:	beq	1e038 <_start@@Base+0x9a18>
   1df58:	mov	r2, #0
   1df5c:	mov	r3, #0
   1df60:	strd	r2, [fp, #-36]	; 0xffffffdc
   1df64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df68:	str	r3, [fp, #-16]
   1df6c:	sub	r3, fp, #36	; 0x24
   1df70:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1df74:	ldr	r1, [fp, #-16]
   1df78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1df7c:	bl	160d4 <_start@@Base+0x1ab4>
   1df80:	str	r0, [fp, #-44]	; 0xffffffd4
   1df84:	ldr	r2, [fp, #-16]
   1df88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df8c:	cmp	r2, r3
   1df90:	bne	1dfe0 <_start@@Base+0x99c0>
   1df94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df98:	str	r3, [fp, #-16]
   1df9c:	sub	r3, fp, #36	; 0x24
   1dfa0:	str	r3, [sp]
   1dfa4:	ldr	r3, [pc, #384]	; 1e12c <_start@@Base+0x9b0c>
   1dfa8:	add	r3, pc, r3
   1dfac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dfb0:	ldr	r1, [fp, #-16]
   1dfb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dfb8:	bl	16b50 <_start@@Base+0x2530>
   1dfbc:	str	r0, [fp, #-44]	; 0xffffffd4
   1dfc0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dfc4:	ldr	r3, [fp, #-16]
   1dfc8:	cmp	r2, r3
   1dfcc:	beq	1e134 <_start@@Base+0x9b14>
   1dfd0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dfd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dfd8:	cmp	r2, r3
   1dfdc:	beq	1e134 <_start@@Base+0x9b14>
   1dfe0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1dfe4:	orrs	r3, r2, r3
   1dfe8:	bne	1e000 <_start@@Base+0x99e0>
   1dfec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dff0:	ldr	r3, [r3, #8]
   1dff4:	and	r3, r3, #2
   1dff8:	cmp	r3, #0
   1dffc:	beq	1e07c <_start@@Base+0x9a5c>
   1e000:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e004:	ldr	r0, [r3]
   1e008:	mov	r3, #8
   1e00c:	mov	r2, #8
   1e010:	mov	r1, #0
   1e014:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1e018:	str	r0, [fp, #-20]	; 0xffffffec
   1e01c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e020:	cmp	r3, #0
   1e024:	beq	1e0f4 <_start@@Base+0x9ad4>
   1e028:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1e02c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e030:	bl	14a20 <_start@@Base+0x400>
   1e034:	b	1e07c <_start@@Base+0x9a5c>
   1e038:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e03c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e040:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e044:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e048:	str	r0, [fp, #-44]	; 0xffffffd4
   1e04c:	b	1e07c <_start@@Base+0x9a5c>
   1e050:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e054:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e058:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e05c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e060:	str	r0, [fp, #-44]	; 0xffffffd4
   1e064:	b	1e07c <_start@@Base+0x9a5c>
   1e068:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e06c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e070:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e074:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e078:	str	r0, [fp, #-44]	; 0xffffffd4
   1e07c:	sub	r3, fp, #24
   1e080:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e084:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e088:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e08c:	bl	151b0 <_start@@Base+0xb90>
   1e090:	str	r0, [fp, #-44]	; 0xffffffd4
   1e094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e098:	cmp	r3, #0
   1e09c:	bne	1dd0c <_start@@Base+0x96ec>
   1e0a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e0a4:	ldr	r3, [r3, #24]
   1e0a8:	cmp	r3, #0
   1e0ac:	bne	1e0fc <_start@@Base+0x9adc>
   1e0b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e0b4:	ldr	r3, [r3]
   1e0b8:	mov	r0, r3
   1e0bc:	bl	30634 <flatcc_builder_end_table@@Base>
   1e0c0:	mov	r2, r0
   1e0c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e0c8:	str	r2, [r3]
   1e0cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e0d0:	ldr	r3, [r3]
   1e0d4:	cmp	r3, #0
   1e0d8:	beq	1e130 <_start@@Base+0x9b10>
   1e0dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e0e0:	b	1e14c <_start@@Base+0x9b2c>
   1e0e4:	nop			; (mov r0, r0)
   1e0e8:	b	1e134 <_start@@Base+0x9b14>
   1e0ec:	nop			; (mov r0, r0)
   1e0f0:	b	1e134 <_start@@Base+0x9b14>
   1e0f4:	nop			; (mov r0, r0)
   1e0f8:	b	1e134 <_start@@Base+0x9b14>
   1e0fc:	nop			; (mov r0, r0)
   1e100:	b	1e134 <_start@@Base+0x9b14>
   1e104:	nop			; (mov r0, r0)
   1e108:	svcpl	0x00626262
   1e10c:	cmnvs	r1, r1, ror #2
   1e110:	cmnvs	r2, pc, asr r4
   1e114:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1e118:	movwvc	r0, #0
   1e11c:	cmnvc	r4, #112, 10	; 0x1c000000
   1e120:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1e124:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1e128:	andeq	r6, r4, r4, asr #7
   1e12c:	andeq	r6, r4, r4, ror #4
   1e130:	nop			; (mov r0, r0)
   1e134:	mov	r3, #33	; 0x21
   1e138:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e13c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e140:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e144:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1e148:	mov	r3, r0
   1e14c:	mov	r0, r3
   1e150:	sub	sp, fp, #4
   1e154:	pop	{fp, pc}
   1e158:	push	{fp, lr}
   1e15c:	add	fp, sp, #4
   1e160:	sub	sp, sp, #48	; 0x30
   1e164:	str	r0, [fp, #-32]	; 0xffffffe0
   1e168:	str	r1, [fp, #-36]	; 0xffffffdc
   1e16c:	str	r2, [fp, #-40]	; 0xffffffd8
   1e170:	str	r3, [fp, #-44]	; 0xffffffd4
   1e174:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e178:	mov	r2, #0
   1e17c:	str	r2, [r3]
   1e180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e184:	ldr	r3, [r3]
   1e188:	mov	r1, #3
   1e18c:	mov	r0, r3
   1e190:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1e194:	mov	r3, r0
   1e198:	cmp	r3, #0
   1e19c:	bne	1e508 <_start@@Base+0x9ee8>
   1e1a0:	sub	r3, fp, #24
   1e1a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e1a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e1ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1b0:	bl	150c8 <_start@@Base+0xaa8>
   1e1b4:	str	r0, [fp, #-36]	; 0xffffffdc
   1e1b8:	b	1e4b8 <_start@@Base+0x9e98>
   1e1bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e1c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e1c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1c8:	bl	14cb8 <_start@@Base+0x698>
   1e1cc:	str	r0, [fp, #-36]	; 0xffffffdc
   1e1d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e1d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e1d8:	bl	14f9c <_start@@Base+0x97c>
   1e1dc:	strd	r0, [fp, #-12]
   1e1e0:	ldrd	r2, [fp, #-12]
   1e1e4:	add	r1, pc, #852	; 0x354
   1e1e8:	ldrd	r0, [r1]
   1e1ec:	cmp	r3, r1
   1e1f0:	cmpeq	r2, r0
   1e1f4:	bhi	1e2e4 <_start@@Base+0x9cc4>
   1e1f8:	ldrd	r2, [fp, #-12]
   1e1fc:	mov	r0, #0
   1e200:	mvn	r1, #0
   1e204:	and	r2, r2, r0
   1e208:	and	r3, r3, r1
   1e20c:	add	r1, pc, #820	; 0x334
   1e210:	ldrd	r0, [r1]
   1e214:	cmp	r3, r1
   1e218:	cmpeq	r2, r0
   1e21c:	bne	1e2cc <_start@@Base+0x9cac>
   1e220:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e224:	str	r3, [fp, #-16]
   1e228:	mov	r3, #4
   1e22c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e230:	ldr	r1, [fp, #-16]
   1e234:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e238:	bl	15568 <_start@@Base+0xf48>
   1e23c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e240:	ldr	r2, [fp, #-16]
   1e244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e248:	cmp	r2, r3
   1e24c:	beq	1e2b4 <_start@@Base+0x9c94>
   1e250:	sub	r2, fp, #28
   1e254:	mov	r3, #0
   1e258:	str	r3, [sp]
   1e25c:	mov	r3, r2
   1e260:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e264:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e26c:	bl	3c874 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e270:	str	r0, [fp, #-36]	; 0xffffffdc
   1e274:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e278:	cmp	r3, #0
   1e27c:	beq	1e51c <_start@@Base+0x9efc>
   1e280:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e284:	ldr	r3, [r3]
   1e288:	mov	r1, #0
   1e28c:	mov	r0, r3
   1e290:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1e294:	str	r0, [fp, #-20]	; 0xffffffec
   1e298:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e29c:	cmp	r3, #0
   1e2a0:	beq	1e51c <_start@@Base+0x9efc>
   1e2a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e2a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2ac:	str	r2, [r3]
   1e2b0:	b	1e4a0 <_start@@Base+0x9e80>
   1e2b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e2b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e2bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e2c0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e2c4:	str	r0, [fp, #-36]	; 0xffffffdc
   1e2c8:	b	1e4a0 <_start@@Base+0x9e80>
   1e2cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e2d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e2d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e2d8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e2dc:	str	r0, [fp, #-36]	; 0xffffffdc
   1e2e0:	b	1e4a0 <_start@@Base+0x9e80>
   1e2e4:	ldrd	r2, [fp, #-12]
   1e2e8:	mvn	r0, #255	; 0xff
   1e2ec:	mvn	r1, #0
   1e2f0:	and	r2, r2, r0
   1e2f4:	and	r3, r3, r1
   1e2f8:	add	r1, pc, #592	; 0x250
   1e2fc:	ldrd	r0, [r1]
   1e300:	cmp	r3, r1
   1e304:	cmpeq	r2, r0
   1e308:	bne	1e3b8 <_start@@Base+0x9d98>
   1e30c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e310:	str	r3, [fp, #-16]
   1e314:	mov	r3, #7
   1e318:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e31c:	ldr	r1, [fp, #-16]
   1e320:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e324:	bl	15568 <_start@@Base+0xf48>
   1e328:	str	r0, [fp, #-36]	; 0xffffffdc
   1e32c:	ldr	r2, [fp, #-16]
   1e330:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e334:	cmp	r2, r3
   1e338:	beq	1e3a0 <_start@@Base+0x9d80>
   1e33c:	sub	r2, fp, #28
   1e340:	mov	r3, #1
   1e344:	str	r3, [sp]
   1e348:	mov	r3, r2
   1e34c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e350:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e358:	bl	3c874 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e35c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e360:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e364:	cmp	r3, #0
   1e368:	beq	1e51c <_start@@Base+0x9efc>
   1e36c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e370:	ldr	r3, [r3]
   1e374:	mov	r1, #1
   1e378:	mov	r0, r3
   1e37c:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1e380:	str	r0, [fp, #-20]	; 0xffffffec
   1e384:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e388:	cmp	r3, #0
   1e38c:	beq	1e51c <_start@@Base+0x9efc>
   1e390:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e394:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e398:	str	r2, [r3]
   1e39c:	b	1e4a0 <_start@@Base+0x9e80>
   1e3a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e3a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e3a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e3ac:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e3b0:	str	r0, [fp, #-36]	; 0xffffffdc
   1e3b4:	b	1e4a0 <_start@@Base+0x9e80>
   1e3b8:	ldrd	r2, [fp, #-12]
   1e3bc:	ldr	r0, [pc, #412]	; 1e560 <_start@@Base+0x9f40>
   1e3c0:	mvn	r1, #0
   1e3c4:	and	r2, r2, r0
   1e3c8:	and	r3, r3, r1
   1e3cc:	add	r1, pc, #388	; 0x184
   1e3d0:	ldrd	r0, [r1]
   1e3d4:	cmp	r3, r1
   1e3d8:	cmpeq	r2, r0
   1e3dc:	bne	1e48c <_start@@Base+0x9e6c>
   1e3e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e3e4:	str	r3, [fp, #-16]
   1e3e8:	mov	r3, #6
   1e3ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e3f0:	ldr	r1, [fp, #-16]
   1e3f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e3f8:	bl	15568 <_start@@Base+0xf48>
   1e3fc:	str	r0, [fp, #-36]	; 0xffffffdc
   1e400:	ldr	r2, [fp, #-16]
   1e404:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e408:	cmp	r2, r3
   1e40c:	beq	1e474 <_start@@Base+0x9e54>
   1e410:	sub	r2, fp, #28
   1e414:	mov	r3, #0
   1e418:	str	r3, [sp]
   1e41c:	mov	r3, r2
   1e420:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e424:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e428:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e42c:	bl	3c874 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e430:	str	r0, [fp, #-36]	; 0xffffffdc
   1e434:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e438:	cmp	r3, #0
   1e43c:	beq	1e51c <_start@@Base+0x9efc>
   1e440:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e444:	ldr	r3, [r3]
   1e448:	mov	r1, #2
   1e44c:	mov	r0, r3
   1e450:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1e454:	str	r0, [fp, #-20]	; 0xffffffec
   1e458:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e45c:	cmp	r3, #0
   1e460:	beq	1e51c <_start@@Base+0x9efc>
   1e464:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e46c:	str	r2, [r3]
   1e470:	b	1e4a0 <_start@@Base+0x9e80>
   1e474:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e478:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e47c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e480:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e484:	str	r0, [fp, #-36]	; 0xffffffdc
   1e488:	b	1e4a0 <_start@@Base+0x9e80>
   1e48c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e490:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e494:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e498:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e49c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e4a0:	sub	r3, fp, #24
   1e4a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e4a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e4ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e4b0:	bl	151b0 <_start@@Base+0xb90>
   1e4b4:	str	r0, [fp, #-36]	; 0xffffffdc
   1e4b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e4bc:	cmp	r3, #0
   1e4c0:	bne	1e1bc <_start@@Base+0x9b9c>
   1e4c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e4c8:	ldr	r3, [r3, #24]
   1e4cc:	cmp	r3, #0
   1e4d0:	bne	1e510 <_start@@Base+0x9ef0>
   1e4d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e4d8:	ldr	r3, [r3]
   1e4dc:	mov	r0, r3
   1e4e0:	bl	30634 <flatcc_builder_end_table@@Base>
   1e4e4:	mov	r2, r0
   1e4e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e4ec:	str	r2, [r3]
   1e4f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e4f4:	ldr	r3, [r3]
   1e4f8:	cmp	r3, #0
   1e4fc:	beq	1e518 <_start@@Base+0x9ef8>
   1e500:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e504:	b	1e534 <_start@@Base+0x9f14>
   1e508:	nop			; (mov r0, r0)
   1e50c:	b	1e51c <_start@@Base+0x9efc>
   1e510:	nop			; (mov r0, r0)
   1e514:	b	1e51c <_start@@Base+0x9efc>
   1e518:	nop			; (mov r0, r0)
   1e51c:	mov	r3, #33	; 0x21
   1e520:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e524:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e528:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e52c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   1e530:	mov	r3, r0
   1e534:	mov	r0, r3
   1e538:	sub	sp, fp, #4
   1e53c:	pop	{fp, pc}
   1e540:	strbvs	pc, [r3, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   1e544:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1e548:	andeq	r0, r0, r0
   1e54c:	strbtvs	r7, [r1], #-1121	; 0xfffffb9f
   1e550:	cmnvs	r4, r0, lsl #2
   1e554:	ldrbvc	r6, [r2, #-3172]!	; 0xfffff39c
   1e558:	strbvs	r0, [r4, #-0]!
   1e55c:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1e560:			; <UNDEFINED> instruction: 0xffff0000
   1e564:	push	{fp, lr}
   1e568:	add	fp, sp, #4
   1e56c:	sub	sp, sp, #160	; 0xa0
   1e570:	str	r0, [fp, #-136]	; 0xffffff78
   1e574:	str	r1, [fp, #-140]	; 0xffffff74
   1e578:	str	r2, [fp, #-144]	; 0xffffff70
   1e57c:	str	r3, [fp, #-148]	; 0xffffff6c
   1e580:	ldr	r3, [fp, #-148]	; 0xffffff6c
   1e584:	mov	r2, #0
   1e588:	str	r2, [r3]
   1e58c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e590:	ldr	r3, [r3]
   1e594:	mov	r1, #36	; 0x24
   1e598:	mov	r0, r3
   1e59c:	bl	2fad0 <flatcc_builder_start_table@@Base>
   1e5a0:	mov	r3, r0
   1e5a4:	cmp	r3, #0
   1e5a8:	bne	21e3c <_start@@Base+0xd81c>
   1e5ac:	sub	r3, fp, #36	; 0x24
   1e5b0:	str	r3, [sp]
   1e5b4:	mov	r3, #1
   1e5b8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e5bc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e5c0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e5c4:	bl	3cce4 <flatcc_json_parser_prepare_unions@@Base>
   1e5c8:	mov	r2, r0
   1e5cc:	ldr	r3, [fp, #-144]	; 0xffffff70
   1e5d0:	cmp	r2, r3
   1e5d4:	beq	21e44 <_start@@Base+0xd824>
   1e5d8:	sub	r3, fp, #28
   1e5dc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e5e0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e5e4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e5e8:	bl	150c8 <_start@@Base+0xaa8>
   1e5ec:	str	r0, [fp, #-140]	; 0xffffff74
   1e5f0:	b	21d98 <_start@@Base+0xd778>
   1e5f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e5f8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e5fc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e600:	bl	14cb8 <_start@@Base+0x698>
   1e604:	str	r0, [fp, #-140]	; 0xffffff74
   1e608:	ldr	r1, [fp, #-144]	; 0xffffff70
   1e60c:	ldr	r0, [fp, #-140]	; 0xffffff74
   1e610:	bl	14f9c <_start@@Base+0x97c>
   1e614:	strd	r0, [fp, #-12]
   1e618:	ldrd	r2, [fp, #-12]
   1e61c:	add	r1, pc, #796	; 0x31c
   1e620:	ldrd	r0, [r1]
   1e624:	cmp	r3, r1
   1e628:	cmpeq	r2, r0
   1e62c:	bhi	1f810 <_start@@Base+0xb1f0>
   1e630:	ldrd	r2, [fp, #-12]
   1e634:	add	r1, pc, #780	; 0x30c
   1e638:	ldrd	r0, [r1]
   1e63c:	cmp	r3, r1
   1e640:	cmpeq	r2, r0
   1e644:	bhi	1f010 <_start@@Base+0xa9f0>
   1e648:	ldrd	r2, [fp, #-12]
   1e64c:	add	r1, pc, #764	; 0x2fc
   1e650:	ldrd	r0, [r1]
   1e654:	cmp	r3, r1
   1e658:	cmpeq	r2, r0
   1e65c:	bhi	1e890 <_start@@Base+0xa270>
   1e660:	ldrd	r2, [fp, #-12]
   1e664:	mov	r0, #-16777216	; 0xff000000
   1e668:	mvn	r1, #0
   1e66c:	and	r2, r2, r0
   1e670:	and	r3, r3, r1
   1e674:	add	r1, pc, #732	; 0x2dc
   1e678:	ldrd	r0, [r1]
   1e67c:	cmp	r3, r1
   1e680:	cmpeq	r2, r0
   1e684:	bne	1e728 <_start@@Base+0xa108>
   1e688:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e68c:	str	r3, [fp, #-16]
   1e690:	mov	r3, #5
   1e694:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e698:	ldr	r1, [fp, #-16]
   1e69c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e6a0:	bl	15568 <_start@@Base+0xf48>
   1e6a4:	str	r0, [fp, #-140]	; 0xffffff74
   1e6a8:	ldr	r2, [fp, #-16]
   1e6ac:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e6b0:	cmp	r2, r3
   1e6b4:	beq	1e710 <_start@@Base+0xa0f0>
   1e6b8:	sub	r3, fp, #32
   1e6bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e6c0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e6c4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e6c8:	bl	1e564 <_start@@Base+0x9f44>
   1e6cc:	str	r0, [fp, #-140]	; 0xffffff74
   1e6d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e6d4:	cmp	r3, #0
   1e6d8:	beq	21f90 <_start@@Base+0xd970>
   1e6dc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e6e0:	ldr	r3, [r3]
   1e6e4:	mov	r1, #12
   1e6e8:	mov	r0, r3
   1e6ec:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1e6f0:	str	r0, [fp, #-20]	; 0xffffffec
   1e6f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e6f8:	cmp	r3, #0
   1e6fc:	beq	21f90 <_start@@Base+0xd970>
   1e700:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e704:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e708:	str	r2, [r3]
   1e70c:	b	21d80 <_start@@Base+0xd760>
   1e710:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e714:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e718:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e71c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e720:	str	r0, [fp, #-140]	; 0xffffff74
   1e724:	b	21d80 <_start@@Base+0xd760>
   1e728:	ldrd	r2, [fp, #-12]
   1e72c:	mov	r0, #-16777216	; 0xff000000
   1e730:	mvn	r1, #0
   1e734:	and	r2, r2, r0
   1e738:	and	r3, r3, r1
   1e73c:	add	r1, pc, #540	; 0x21c
   1e740:	ldrd	r0, [r1]
   1e744:	cmp	r3, r1
   1e748:	cmpeq	r2, r0
   1e74c:	bne	1e878 <_start@@Base+0xa258>
   1e750:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e754:	str	r3, [fp, #-16]
   1e758:	mov	r3, #5
   1e75c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e760:	ldr	r1, [fp, #-16]
   1e764:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e768:	bl	15568 <_start@@Base+0xf48>
   1e76c:	str	r0, [fp, #-140]	; 0xffffff74
   1e770:	ldr	r2, [fp, #-16]
   1e774:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e778:	cmp	r2, r3
   1e77c:	beq	1e860 <_start@@Base+0xa240>
   1e780:	mov	r3, #0
   1e784:	strb	r3, [fp, #-37]	; 0xffffffdb
   1e788:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e78c:	str	r3, [fp, #-16]
   1e790:	sub	r3, fp, #37	; 0x25
   1e794:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e798:	ldr	r1, [fp, #-16]
   1e79c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e7a0:	bl	16348 <_start@@Base+0x1d28>
   1e7a4:	str	r0, [fp, #-140]	; 0xffffff74
   1e7a8:	ldr	r2, [fp, #-16]
   1e7ac:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e7b0:	cmp	r2, r3
   1e7b4:	bne	1e804 <_start@@Base+0xa1e4>
   1e7b8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e7bc:	str	r3, [fp, #-16]
   1e7c0:	sub	r3, fp, #37	; 0x25
   1e7c4:	str	r3, [sp]
   1e7c8:	ldr	r3, [pc, #416]	; 1e970 <_start@@Base+0xa350>
   1e7cc:	add	r3, pc, r3
   1e7d0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e7d4:	ldr	r1, [fp, #-16]
   1e7d8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e7dc:	bl	16ff8 <_start@@Base+0x29d8>
   1e7e0:	str	r0, [fp, #-140]	; 0xffffff74
   1e7e4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1e7e8:	ldr	r3, [fp, #-16]
   1e7ec:	cmp	r2, r3
   1e7f0:	beq	21f90 <_start@@Base+0xd970>
   1e7f4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1e7f8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1e7fc:	cmp	r2, r3
   1e800:	beq	21f90 <_start@@Base+0xd970>
   1e804:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
   1e808:	cmp	r3, #8
   1e80c:	bne	1e824 <_start@@Base+0xa204>
   1e810:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e814:	ldr	r3, [r3, #8]
   1e818:	and	r3, r3, #2
   1e81c:	cmp	r3, #0
   1e820:	beq	21d80 <_start@@Base+0xd760>
   1e824:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e828:	ldr	r0, [r3]
   1e82c:	mov	r3, #1
   1e830:	mov	r2, #1
   1e834:	mov	r1, #6
   1e838:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1e83c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e844:	cmp	r3, #0
   1e848:	beq	21e4c <_start@@Base+0xd82c>
   1e84c:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
   1e850:	mov	r1, r3
   1e854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e858:	bl	148f8 <_start@@Base+0x2d8>
   1e85c:	b	21d80 <_start@@Base+0xd760>
   1e860:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e864:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e868:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e86c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e870:	str	r0, [fp, #-140]	; 0xffffff74
   1e874:	b	21d80 <_start@@Base+0xd760>
   1e878:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e87c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e880:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e884:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1e888:	str	r0, [fp, #-140]	; 0xffffff74
   1e88c:	b	21d80 <_start@@Base+0xd760>
   1e890:	ldrd	r2, [fp, #-12]
   1e894:	mvn	r0, #0
   1e898:	ldr	r1, [pc, #212]	; 1e974 <_start@@Base+0xa354>
   1e89c:	cmp	r3, r1
   1e8a0:	cmpeq	r2, r0
   1e8a4:	bhi	1eae0 <_start@@Base+0xa4c0>
   1e8a8:	ldrd	r2, [fp, #-12]
   1e8ac:	mov	r0, #0
   1e8b0:	mvn	r1, #0
   1e8b4:	and	r2, r2, r0
   1e8b8:	and	r3, r3, r1
   1e8bc:	add	r1, pc, #164	; 0xa4
   1e8c0:	ldrd	r0, [r1]
   1e8c4:	cmp	r3, r1
   1e8c8:	cmpeq	r2, r0
   1e8cc:	bne	1eac8 <_start@@Base+0xa4a8>
   1e8d0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e8d4:	str	r3, [fp, #-16]
   1e8d8:	mov	r3, #4
   1e8dc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e8e0:	ldr	r1, [fp, #-16]
   1e8e4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e8e8:	bl	15568 <_start@@Base+0xf48>
   1e8ec:	str	r0, [fp, #-140]	; 0xffffff74
   1e8f0:	ldr	r2, [fp, #-16]
   1e8f4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e8f8:	cmp	r2, r3
   1e8fc:	beq	1eab0 <_start@@Base+0xa490>
   1e900:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e904:	ldr	r0, [r3]
   1e908:	mvn	r3, #0
   1e90c:	mov	r2, #1
   1e910:	mov	r1, #1
   1e914:	bl	2f838 <flatcc_builder_start_vector@@Base>
   1e918:	mov	r3, r0
   1e91c:	cmp	r3, #0
   1e920:	bne	21e54 <_start@@Base+0xd834>
   1e924:	sub	r3, fp, #28
   1e928:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e92c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e930:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e934:	bl	15318 <_start@@Base+0xcf8>
   1e938:	str	r0, [fp, #-140]	; 0xffffff74
   1e93c:	b	1ea4c <_start@@Base+0xa42c>
   1e940:	cmnvs	r2, r0, ror #4
   1e944:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1e948:			; <UNDEFINED> instruction: 0xffffffff
   1e94c:	cdpvs	13, 6, cr6, cr1, cr4, {3}
   1e950:			; <UNDEFINED> instruction: 0xffffffff
   1e954:			; <UNDEFINED> instruction: 0x666c6577
   1e958:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   1e95c:	strbvs	r6, [lr, #-1389]!	; 0xfffffa93
   1e960:	andvc	r0, r0, #0
   1e964:	cmnvs	pc, #28416	; 0x6f00
   1e968:	andeq	r0, r0, r0
   1e96c:			; <UNDEFINED> instruction: 0x666c6578
   1e970:	andeq	r5, r4, ip, asr #20
   1e974:	stmdavs	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
   1e978:	andeq	r5, r4, ip, lsr r8
   1e97c:	mov	r3, #0
   1e980:	strb	r3, [fp, #-38]	; 0xffffffda
   1e984:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e988:	ldr	r3, [r3]
   1e98c:	mov	r1, #1
   1e990:	mov	r0, r3
   1e994:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   1e998:	str	r0, [fp, #-24]	; 0xffffffe8
   1e99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e9a0:	cmp	r3, #0
   1e9a4:	beq	21e5c <_start@@Base+0xd83c>
   1e9a8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e9ac:	str	r3, [fp, #-16]
   1e9b0:	sub	r3, fp, #38	; 0x26
   1e9b4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e9b8:	ldr	r1, [fp, #-16]
   1e9bc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e9c0:	bl	16004 <_start@@Base+0x19e4>
   1e9c4:	str	r0, [fp, #-140]	; 0xffffff74
   1e9c8:	ldr	r2, [fp, #-16]
   1e9cc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e9d0:	cmp	r2, r3
   1e9d4:	bne	1ea24 <_start@@Base+0xa404>
   1e9d8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e9dc:	str	r3, [fp, #-16]
   1e9e0:	sub	r3, fp, #38	; 0x26
   1e9e4:	str	r3, [sp]
   1e9e8:	ldr	r3, [pc, #-120]	; 1e978 <_start@@Base+0xa358>
   1e9ec:	add	r3, pc, r3
   1e9f0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e9f4:	ldr	r1, [fp, #-16]
   1e9f8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e9fc:	bl	169c8 <_start@@Base+0x23a8>
   1ea00:	str	r0, [fp, #-140]	; 0xffffff74
   1ea04:	ldr	r2, [fp, #-140]	; 0xffffff74
   1ea08:	ldr	r3, [fp, #-16]
   1ea0c:	cmp	r2, r3
   1ea10:	beq	21e5c <_start@@Base+0xd83c>
   1ea14:	ldr	r2, [fp, #-140]	; 0xffffff74
   1ea18:	ldr	r3, [fp, #-144]	; 0xffffff70
   1ea1c:	cmp	r2, r3
   1ea20:	beq	21e5c <_start@@Base+0xd83c>
   1ea24:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1ea28:	mov	r1, r3
   1ea2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea30:	bl	14770 <_start@@Base+0x150>
   1ea34:	sub	r3, fp, #28
   1ea38:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ea3c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ea40:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ea44:	bl	15400 <_start@@Base+0xde0>
   1ea48:	str	r0, [fp, #-140]	; 0xffffff74
   1ea4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ea50:	cmp	r3, #0
   1ea54:	bne	1e97c <_start@@Base+0xa35c>
   1ea58:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ea5c:	ldr	r3, [r3]
   1ea60:	mov	r0, r3
   1ea64:	bl	30a90 <flatcc_builder_end_vector@@Base>
   1ea68:	mov	r3, r0
   1ea6c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ea70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea74:	cmp	r3, #0
   1ea78:	beq	21f90 <_start@@Base+0xd970>
   1ea7c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ea80:	ldr	r3, [r3]
   1ea84:	mov	r1, #30
   1ea88:	mov	r0, r3
   1ea8c:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1ea90:	str	r0, [fp, #-20]	; 0xffffffec
   1ea94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea98:	cmp	r3, #0
   1ea9c:	beq	21f90 <_start@@Base+0xd970>
   1eaa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1eaa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eaa8:	str	r2, [r3]
   1eaac:	b	21d80 <_start@@Base+0xd760>
   1eab0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eab4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1eab8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eabc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1eac0:	str	r0, [fp, #-140]	; 0xffffff74
   1eac4:	b	21d80 <_start@@Base+0xd760>
   1eac8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eacc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ead0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ead4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ead8:	str	r0, [fp, #-140]	; 0xffffff74
   1eadc:	b	21d80 <_start@@Base+0xd760>
   1eae0:	ldrd	r2, [fp, #-12]
   1eae4:	add	r1, pc, #924	; 0x39c
   1eae8:	ldrd	r0, [r1]
   1eaec:	cmp	r3, r1
   1eaf0:	cmpeq	r2, r0
   1eaf4:	bhi	1ec60 <_start@@Base+0xa640>
   1eaf8:	ldrd	r2, [fp, #-12]
   1eafc:	mov	r0, #0
   1eb00:	ldr	r1, [pc, #912]	; 1ee98 <_start@@Base+0xa878>
   1eb04:	and	r2, r2, r0
   1eb08:	and	r3, r3, r1
   1eb0c:	mov	r0, #0
   1eb10:	ldr	r1, [pc, #900]	; 1ee9c <_start@@Base+0xa87c>
   1eb14:	cmp	r3, r1
   1eb18:	cmpeq	r2, r0
   1eb1c:	bne	1ec48 <_start@@Base+0xa628>
   1eb20:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eb24:	str	r3, [fp, #-16]
   1eb28:	mov	r3, #2
   1eb2c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eb30:	ldr	r1, [fp, #-16]
   1eb34:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eb38:	bl	15568 <_start@@Base+0xf48>
   1eb3c:	str	r0, [fp, #-140]	; 0xffffff74
   1eb40:	ldr	r2, [fp, #-16]
   1eb44:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eb48:	cmp	r2, r3
   1eb4c:	beq	1ec30 <_start@@Base+0xa610>
   1eb50:	mov	r3, #0
   1eb54:	strh	r3, [fp, #-40]	; 0xffffffd8
   1eb58:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eb5c:	str	r3, [fp, #-16]
   1eb60:	sub	r3, fp, #40	; 0x28
   1eb64:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eb68:	ldr	r1, [fp, #-16]
   1eb6c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eb70:	bl	16278 <_start@@Base+0x1c58>
   1eb74:	str	r0, [fp, #-140]	; 0xffffff74
   1eb78:	ldr	r2, [fp, #-16]
   1eb7c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eb80:	cmp	r2, r3
   1eb84:	bne	1ebd4 <_start@@Base+0xa5b4>
   1eb88:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eb8c:	str	r3, [fp, #-16]
   1eb90:	sub	r3, fp, #40	; 0x28
   1eb94:	str	r3, [sp]
   1eb98:	ldr	r3, [pc, #768]	; 1eea0 <_start@@Base+0xa880>
   1eb9c:	add	r3, pc, r3
   1eba0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eba4:	ldr	r1, [fp, #-16]
   1eba8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ebac:	bl	16e64 <_start@@Base+0x2844>
   1ebb0:	str	r0, [fp, #-140]	; 0xffffff74
   1ebb4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1ebb8:	ldr	r3, [fp, #-16]
   1ebbc:	cmp	r2, r3
   1ebc0:	beq	21f90 <_start@@Base+0xd970>
   1ebc4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1ebc8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1ebcc:	cmp	r2, r3
   1ebd0:	beq	21f90 <_start@@Base+0xd970>
   1ebd4:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
   1ebd8:	cmp	r3, #100	; 0x64
   1ebdc:	bne	1ebf4 <_start@@Base+0xa5d4>
   1ebe0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ebe4:	ldr	r3, [r3, #8]
   1ebe8:	and	r3, r3, #2
   1ebec:	cmp	r3, #0
   1ebf0:	beq	21d80 <_start@@Base+0xd760>
   1ebf4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ebf8:	ldr	r0, [r3]
   1ebfc:	mov	r3, #2
   1ec00:	mov	r2, #2
   1ec04:	mov	r1, #2
   1ec08:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1ec0c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ec10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ec14:	cmp	r3, #0
   1ec18:	beq	21e64 <_start@@Base+0xd844>
   1ec1c:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
   1ec20:	mov	r1, r3
   1ec24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec28:	bl	14960 <_start@@Base+0x340>
   1ec2c:	b	21d80 <_start@@Base+0xd760>
   1ec30:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ec34:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ec38:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ec3c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ec40:	str	r0, [fp, #-140]	; 0xffffff74
   1ec44:	b	21d80 <_start@@Base+0xd760>
   1ec48:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ec4c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ec50:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ec54:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ec58:	str	r0, [fp, #-140]	; 0xffffff74
   1ec5c:	b	21d80 <_start@@Base+0xd760>
   1ec60:	ldrd	r2, [fp, #-12]
   1ec64:	add	r1, pc, #548	; 0x224
   1ec68:	ldrd	r0, [r1]
   1ec6c:	cmp	r3, r1
   1ec70:	cmpeq	r2, r0
   1ec74:	bne	1eea8 <_start@@Base+0xa888>
   1ec78:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ec7c:	add	r3, r3, #8
   1ec80:	str	r3, [fp, #-140]	; 0xffffff74
   1ec84:	ldr	r1, [fp, #-144]	; 0xffffff70
   1ec88:	ldr	r0, [fp, #-140]	; 0xffffff74
   1ec8c:	bl	14f9c <_start@@Base+0x97c>
   1ec90:	strd	r0, [fp, #-12]
   1ec94:	ldrd	r2, [fp, #-12]
   1ec98:	mov	r0, #0
   1ec9c:	mov	r1, #-16777216	; 0xff000000
   1eca0:	and	r2, r2, r0
   1eca4:	and	r3, r3, r1
   1eca8:	cmp	r3, #2030043136	; 0x79000000
   1ecac:	cmpeq	r2, #0
   1ecb0:	bne	1ee70 <_start@@Base+0xa850>
   1ecb4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ecb8:	str	r3, [fp, #-16]
   1ecbc:	mov	r3, #1
   1ecc0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ecc4:	ldr	r1, [fp, #-16]
   1ecc8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eccc:	bl	15568 <_start@@Base+0xf48>
   1ecd0:	str	r0, [fp, #-140]	; 0xffffff74
   1ecd4:	ldr	r2, [fp, #-16]
   1ecd8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ecdc:	cmp	r2, r3
   1ece0:	beq	1ee58 <_start@@Base+0xa838>
   1ece4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ece8:	ldr	r0, [r3]
   1ecec:	mvn	r3, #0
   1ecf0:	mov	r2, #1
   1ecf4:	mov	r1, #1
   1ecf8:	bl	2f838 <flatcc_builder_start_vector@@Base>
   1ecfc:	mov	r3, r0
   1ed00:	cmp	r3, #0
   1ed04:	bne	21e6c <_start@@Base+0xd84c>
   1ed08:	sub	r3, fp, #28
   1ed0c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ed10:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ed14:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ed18:	bl	15318 <_start@@Base+0xcf8>
   1ed1c:	str	r0, [fp, #-140]	; 0xffffff74
   1ed20:	b	1edf4 <_start@@Base+0xa7d4>
   1ed24:	mov	r3, #0
   1ed28:	strb	r3, [fp, #-41]	; 0xffffffd7
   1ed2c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ed30:	ldr	r3, [r3]
   1ed34:	mov	r1, #1
   1ed38:	mov	r0, r3
   1ed3c:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   1ed40:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed48:	cmp	r3, #0
   1ed4c:	beq	21e74 <_start@@Base+0xd854>
   1ed50:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ed54:	str	r3, [fp, #-16]
   1ed58:	sub	r3, fp, #41	; 0x29
   1ed5c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ed60:	ldr	r1, [fp, #-16]
   1ed64:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ed68:	bl	16004 <_start@@Base+0x19e4>
   1ed6c:	str	r0, [fp, #-140]	; 0xffffff74
   1ed70:	ldr	r2, [fp, #-16]
   1ed74:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ed78:	cmp	r2, r3
   1ed7c:	bne	1edcc <_start@@Base+0xa7ac>
   1ed80:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ed84:	str	r3, [fp, #-16]
   1ed88:	sub	r3, fp, #41	; 0x29
   1ed8c:	str	r3, [sp]
   1ed90:	ldr	r3, [pc, #268]	; 1eea4 <_start@@Base+0xa884>
   1ed94:	add	r3, pc, r3
   1ed98:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ed9c:	ldr	r1, [fp, #-16]
   1eda0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eda4:	bl	169c8 <_start@@Base+0x23a8>
   1eda8:	str	r0, [fp, #-140]	; 0xffffff74
   1edac:	ldr	r2, [fp, #-140]	; 0xffffff74
   1edb0:	ldr	r3, [fp, #-16]
   1edb4:	cmp	r2, r3
   1edb8:	beq	21e74 <_start@@Base+0xd854>
   1edbc:	ldr	r2, [fp, #-140]	; 0xffffff74
   1edc0:	ldr	r3, [fp, #-144]	; 0xffffff70
   1edc4:	cmp	r2, r3
   1edc8:	beq	21e74 <_start@@Base+0xd854>
   1edcc:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1edd0:	mov	r1, r3
   1edd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edd8:	bl	14770 <_start@@Base+0x150>
   1eddc:	sub	r3, fp, #28
   1ede0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ede4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ede8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1edec:	bl	15400 <_start@@Base+0xde0>
   1edf0:	str	r0, [fp, #-140]	; 0xffffff74
   1edf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1edf8:	cmp	r3, #0
   1edfc:	bne	1ed24 <_start@@Base+0xa704>
   1ee00:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ee04:	ldr	r3, [r3]
   1ee08:	mov	r0, r3
   1ee0c:	bl	30a90 <flatcc_builder_end_vector@@Base>
   1ee10:	mov	r3, r0
   1ee14:	str	r3, [fp, #-32]	; 0xffffffe0
   1ee18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ee1c:	cmp	r3, #0
   1ee20:	beq	21f90 <_start@@Base+0xd970>
   1ee24:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ee28:	ldr	r3, [r3]
   1ee2c:	mov	r1, #5
   1ee30:	mov	r0, r3
   1ee34:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1ee38:	str	r0, [fp, #-20]	; 0xffffffec
   1ee3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ee40:	cmp	r3, #0
   1ee44:	beq	21f90 <_start@@Base+0xd970>
   1ee48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ee4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ee50:	str	r2, [r3]
   1ee54:	b	21d80 <_start@@Base+0xd760>
   1ee58:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ee5c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ee60:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ee64:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ee68:	str	r0, [fp, #-140]	; 0xffffff74
   1ee6c:	b	21d80 <_start@@Base+0xd760>
   1ee70:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ee74:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ee78:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ee7c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ee80:	str	r0, [fp, #-140]	; 0xffffff74
   1ee84:	b	21d80 <_start@@Base+0xd760>
   1ee88:	mrcvs	15, 3, r6, cr4, cr1, {3}
   1ee8c:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1ee90:	mrcvs	15, 3, r6, cr4, cr2, {3}
   1ee94:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1ee98:			; <UNDEFINED> instruction: 0xffff0000
   1ee9c:	ldmdavs	r0!, {}^	; <UNPREDICTABLE>
   1eea0:	muleq	r4, r8, r6
   1eea4:	andeq	r5, r4, ip, lsr #9
   1eea8:	ldrd	r2, [fp, #-12]
   1eeac:	mov	r0, #0
   1eeb0:	mvn	r1, #0
   1eeb4:	and	r2, r2, r0
   1eeb8:	and	r3, r3, r1
   1eebc:	add	r1, pc, #956	; 0x3bc
   1eec0:	ldrd	r0, [r1]
   1eec4:	cmp	r3, r1
   1eec8:	cmpeq	r2, r0
   1eecc:	bne	1eff8 <_start@@Base+0xa9d8>
   1eed0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eed4:	str	r3, [fp, #-16]
   1eed8:	mov	r3, #4
   1eedc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eee0:	ldr	r1, [fp, #-16]
   1eee4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eee8:	bl	15568 <_start@@Base+0xf48>
   1eeec:	str	r0, [fp, #-140]	; 0xffffff74
   1eef0:	ldr	r2, [fp, #-16]
   1eef4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eef8:	cmp	r2, r3
   1eefc:	beq	1efe0 <_start@@Base+0xa9c0>
   1ef00:	mov	r3, #0
   1ef04:	strh	r3, [fp, #-44]	; 0xffffffd4
   1ef08:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ef0c:	str	r3, [fp, #-16]
   1ef10:	sub	r3, fp, #44	; 0x2c
   1ef14:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ef18:	ldr	r1, [fp, #-16]
   1ef1c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ef20:	bl	16278 <_start@@Base+0x1c58>
   1ef24:	str	r0, [fp, #-140]	; 0xffffff74
   1ef28:	ldr	r2, [fp, #-16]
   1ef2c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ef30:	cmp	r2, r3
   1ef34:	bne	1ef84 <_start@@Base+0xa964>
   1ef38:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ef3c:	str	r3, [fp, #-16]
   1ef40:	sub	r3, fp, #44	; 0x2c
   1ef44:	str	r3, [sp]
   1ef48:	ldr	r3, [pc, #872]	; 1f2b8 <_start@@Base+0xac98>
   1ef4c:	add	r3, pc, r3
   1ef50:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ef54:	ldr	r1, [fp, #-16]
   1ef58:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ef5c:	bl	16e64 <_start@@Base+0x2844>
   1ef60:	str	r0, [fp, #-140]	; 0xffffff74
   1ef64:	ldr	r2, [fp, #-140]	; 0xffffff74
   1ef68:	ldr	r3, [fp, #-16]
   1ef6c:	cmp	r2, r3
   1ef70:	beq	21f90 <_start@@Base+0xd970>
   1ef74:	ldr	r2, [fp, #-140]	; 0xffffff74
   1ef78:	ldr	r3, [fp, #-144]	; 0xffffff70
   1ef7c:	cmp	r2, r3
   1ef80:	beq	21f90 <_start@@Base+0xd970>
   1ef84:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
   1ef88:	cmp	r3, #150	; 0x96
   1ef8c:	bne	1efa4 <_start@@Base+0xa984>
   1ef90:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ef94:	ldr	r3, [r3, #8]
   1ef98:	and	r3, r3, #2
   1ef9c:	cmp	r3, #0
   1efa0:	beq	21d80 <_start@@Base+0xd760>
   1efa4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1efa8:	ldr	r0, [r3]
   1efac:	mov	r3, #2
   1efb0:	mov	r2, #2
   1efb4:	mov	r1, #1
   1efb8:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1efbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1efc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1efc4:	cmp	r3, #0
   1efc8:	beq	21e7c <_start@@Base+0xd85c>
   1efcc:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
   1efd0:	mov	r1, r3
   1efd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efd8:	bl	14960 <_start@@Base+0x340>
   1efdc:	b	21d80 <_start@@Base+0xd760>
   1efe0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1efe4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1efe8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1efec:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1eff0:	str	r0, [fp, #-140]	; 0xffffff74
   1eff4:	b	21d80 <_start@@Base+0xd760>
   1eff8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1effc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f000:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f004:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f008:	str	r0, [fp, #-140]	; 0xffffff74
   1f00c:	b	21d80 <_start@@Base+0xd760>
   1f010:	ldrd	r2, [fp, #-12]
   1f014:	add	r1, pc, #620	; 0x26c
   1f018:	ldrd	r0, [r1]
   1f01c:	cmp	r3, r1
   1f020:	cmpeq	r2, r0
   1f024:	bhi	1f388 <_start@@Base+0xad68>
   1f028:	ldrd	r2, [fp, #-12]
   1f02c:	add	r1, pc, #604	; 0x25c
   1f030:	ldrd	r0, [r1]
   1f034:	cmp	r3, r1
   1f038:	cmpeq	r2, r0
   1f03c:	bhi	1f120 <_start@@Base+0xab00>
   1f040:	ldrd	r2, [fp, #-12]
   1f044:	mov	r0, #0
   1f048:	mvn	r1, #0
   1f04c:	and	r2, r2, r0
   1f050:	and	r3, r3, r1
   1f054:	add	r1, pc, #572	; 0x23c
   1f058:	ldrd	r0, [r1]
   1f05c:	cmp	r3, r1
   1f060:	cmpeq	r2, r0
   1f064:	bne	1f108 <_start@@Base+0xaae8>
   1f068:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f06c:	str	r3, [fp, #-16]
   1f070:	mov	r3, #4
   1f074:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f078:	ldr	r1, [fp, #-16]
   1f07c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f080:	bl	15568 <_start@@Base+0xf48>
   1f084:	str	r0, [fp, #-140]	; 0xffffff74
   1f088:	ldr	r2, [fp, #-16]
   1f08c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f090:	cmp	r2, r3
   1f094:	beq	1f0f0 <_start@@Base+0xaad0>
   1f098:	sub	r3, fp, #32
   1f09c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f0a0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f0a4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f0a8:	bl	3cae8 <flatcc_json_parser_build_string@@Base>
   1f0ac:	str	r0, [fp, #-140]	; 0xffffff74
   1f0b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f0b4:	cmp	r3, #0
   1f0b8:	beq	21f90 <_start@@Base+0xd970>
   1f0bc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f0c0:	ldr	r3, [r3]
   1f0c4:	mov	r1, #3
   1f0c8:	mov	r0, r3
   1f0cc:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1f0d0:	str	r0, [fp, #-20]	; 0xffffffec
   1f0d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0d8:	cmp	r3, #0
   1f0dc:	beq	21f90 <_start@@Base+0xd970>
   1f0e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f0e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0e8:	str	r2, [r3]
   1f0ec:	b	21d80 <_start@@Base+0xd760>
   1f0f0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f0f4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f0f8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f0fc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f100:	str	r0, [fp, #-140]	; 0xffffff74
   1f104:	b	21d80 <_start@@Base+0xd760>
   1f108:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f10c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f110:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f114:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f118:	str	r0, [fp, #-140]	; 0xffffff74
   1f11c:	b	21d80 <_start@@Base+0xd760>
   1f120:	ldrd	r2, [fp, #-12]
   1f124:	add	r1, pc, #372	; 0x174
   1f128:	ldrd	r0, [r1]
   1f12c:	cmp	r3, r1
   1f130:	cmpeq	r2, r0
   1f134:	bne	1f2bc <_start@@Base+0xac9c>
   1f138:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f13c:	add	r3, r3, #8
   1f140:	str	r3, [fp, #-140]	; 0xffffff74
   1f144:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f148:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f14c:	bl	14f9c <_start@@Base+0x97c>
   1f150:	strd	r0, [fp, #-12]
   1f154:	ldrd	r2, [fp, #-12]
   1f158:	add	r1, pc, #328	; 0x148
   1f15c:	ldrd	r0, [r1]
   1f160:	cmp	r3, r1
   1f164:	cmpeq	r2, r0
   1f168:	bne	1f268 <_start@@Base+0xac48>
   1f16c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f170:	add	r3, r3, #8
   1f174:	str	r3, [fp, #-140]	; 0xffffff74
   1f178:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f17c:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f180:	bl	14f9c <_start@@Base+0x97c>
   1f184:	strd	r0, [fp, #-12]
   1f188:	ldrd	r2, [fp, #-12]
   1f18c:	mov	r0, #-16777216	; 0xff000000
   1f190:	mvn	r1, #0
   1f194:	and	r2, r2, r0
   1f198:	and	r3, r3, r1
   1f19c:	add	r1, pc, #268	; 0x10c
   1f1a0:	ldrd	r0, [r1]
   1f1a4:	cmp	r3, r1
   1f1a8:	cmpeq	r2, r0
   1f1ac:	bne	1f250 <_start@@Base+0xac30>
   1f1b0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f1b4:	str	r3, [fp, #-16]
   1f1b8:	mov	r3, #5
   1f1bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f1c0:	ldr	r1, [fp, #-16]
   1f1c4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f1c8:	bl	15568 <_start@@Base+0xf48>
   1f1cc:	str	r0, [fp, #-140]	; 0xffffff74
   1f1d0:	ldr	r2, [fp, #-16]
   1f1d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f1d8:	cmp	r2, r3
   1f1dc:	beq	1f238 <_start@@Base+0xac18>
   1f1e0:	sub	r3, fp, #32
   1f1e4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f1e8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f1ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f1f0:	bl	183b4 <_start@@Base+0x3d94>
   1f1f4:	str	r0, [fp, #-140]	; 0xffffff74
   1f1f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f1fc:	cmp	r3, #0
   1f200:	beq	21f90 <_start@@Base+0xd970>
   1f204:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f208:	ldr	r3, [r3]
   1f20c:	mov	r1, #34	; 0x22
   1f210:	mov	r0, r3
   1f214:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1f218:	str	r0, [fp, #-20]	; 0xffffffec
   1f21c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f220:	cmp	r3, #0
   1f224:	beq	21f90 <_start@@Base+0xd970>
   1f228:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f22c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f230:	str	r2, [r3]
   1f234:	b	21d80 <_start@@Base+0xd760>
   1f238:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f23c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f240:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f244:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f248:	str	r0, [fp, #-140]	; 0xffffff74
   1f24c:	b	21d80 <_start@@Base+0xd760>
   1f250:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f254:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f258:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f25c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f260:	str	r0, [fp, #-140]	; 0xffffff74
   1f264:	b	21d80 <_start@@Base+0xd760>
   1f268:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f26c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f270:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f274:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f278:	str	r0, [fp, #-140]	; 0xffffff74
   1f27c:	b	21d80 <_start@@Base+0xd760>
   1f280:	andeq	r0, r0, r0
   1f284:	stclvs	14, cr6, [r1, #-388]!	; 0xfffffe7c
   1f288:			; <UNDEFINED> instruction: 0xffffffff
   1f28c:	strbtvc	r7, [r5], #-883	; 0xfffffc8d
   1f290:	cdpvs	15, 7, cr5, cr4, cr13, {3}
   1f294:	rsbvc	r7, r1, r5, ror #4
   1f298:	andeq	r0, r0, r0
   1f29c:	cdpvs	13, 6, cr6, cr1, cr5, {3}
   1f2a0:	cdpvs	15, 7, cr5, cr4, cr14, {3}
   1f2a4:	rsbvc	r7, r1, r5, ror #4
   1f2a8:	rsbvc	r6, r1, r5, ror #6
   1f2ac:	smcvs	54867	; 0xd653
   1f2b0:	strvc	r0, [r0], #-0
   1f2b4:	svcpl	0x00746573
   1f2b8:	andeq	r5, r4, r0, lsl #6
   1f2bc:	ldrd	r2, [fp, #-12]
   1f2c0:	mov	r0, #0
   1f2c4:	mvn	r1, #255	; 0xff
   1f2c8:	and	r2, r2, r0
   1f2cc:	and	r3, r3, r1
   1f2d0:	add	r1, pc, #832	; 0x340
   1f2d4:	ldrd	r0, [r1]
   1f2d8:	cmp	r3, r1
   1f2dc:	cmpeq	r2, r0
   1f2e0:	bne	1f370 <_start@@Base+0xad50>
   1f2e4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f2e8:	str	r3, [fp, #-16]
   1f2ec:	mov	r3, #3
   1f2f0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f2f4:	ldr	r1, [fp, #-16]
   1f2f8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f2fc:	bl	15568 <_start@@Base+0xf48>
   1f300:	str	r0, [fp, #-140]	; 0xffffff74
   1f304:	ldr	r2, [fp, #-16]
   1f308:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f30c:	cmp	r2, r3
   1f310:	beq	1f358 <_start@@Base+0xad38>
   1f314:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f318:	ldr	r0, [r3]
   1f31c:	mov	r3, #16
   1f320:	mov	r2, #32
   1f324:	mov	r1, #0
   1f328:	bl	31fc4 <flatcc_builder_table_add@@Base>
   1f32c:	str	r0, [fp, #-24]	; 0xffffffe8
   1f330:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f334:	cmp	r3, #0
   1f338:	beq	21e84 <_start@@Base+0xd864>
   1f33c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f340:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f344:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f348:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f34c:	bl	1b1bc <_start@@Base+0x6b9c>
   1f350:	str	r0, [fp, #-140]	; 0xffffff74
   1f354:	b	21d80 <_start@@Base+0xd760>
   1f358:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f35c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f360:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f364:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f368:	str	r0, [fp, #-140]	; 0xffffff74
   1f36c:	b	21d80 <_start@@Base+0xd760>
   1f370:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f374:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f378:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f37c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f380:	str	r0, [fp, #-140]	; 0xffffff74
   1f384:	b	21d80 <_start@@Base+0xd760>
   1f388:	ldrd	r2, [fp, #-12]
   1f38c:	mov	r0, #-16777216	; 0xff000000
   1f390:	mvn	r1, #0
   1f394:	and	r2, r2, r0
   1f398:	and	r3, r3, r1
   1f39c:	add	r1, pc, #636	; 0x27c
   1f3a0:	ldrd	r0, [r1]
   1f3a4:	cmp	r3, r1
   1f3a8:	cmpeq	r2, r0
   1f3ac:	bne	1f4d8 <_start@@Base+0xaeb8>
   1f3b0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f3b4:	str	r3, [fp, #-16]
   1f3b8:	mov	r3, #5
   1f3bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f3c0:	ldr	r1, [fp, #-16]
   1f3c4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f3c8:	bl	15568 <_start@@Base+0xf48>
   1f3cc:	str	r0, [fp, #-140]	; 0xffffff74
   1f3d0:	ldr	r2, [fp, #-16]
   1f3d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f3d8:	cmp	r2, r3
   1f3dc:	beq	1f568 <_start@@Base+0xaf48>
   1f3e0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f3e4:	ldr	r0, [r3]
   1f3e8:	mvn	r3, #-1073741824	; 0xc0000000
   1f3ec:	mov	r2, #2
   1f3f0:	mov	r1, #4
   1f3f4:	bl	2f838 <flatcc_builder_start_vector@@Base>
   1f3f8:	mov	r3, r0
   1f3fc:	cmp	r3, #0
   1f400:	bne	21e8c <_start@@Base+0xd86c>
   1f404:	sub	r3, fp, #28
   1f408:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f40c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f410:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f414:	bl	15318 <_start@@Base+0xcf8>
   1f418:	str	r0, [fp, #-140]	; 0xffffff74
   1f41c:	b	1f474 <_start@@Base+0xae54>
   1f420:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f424:	ldr	r3, [r3]
   1f428:	mov	r1, #1
   1f42c:	mov	r0, r3
   1f430:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   1f434:	str	r0, [fp, #-24]	; 0xffffffe8
   1f438:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f43c:	cmp	r3, #0
   1f440:	beq	21e94 <_start@@Base+0xd874>
   1f444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f448:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f44c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f450:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f454:	bl	19860 <_start@@Base+0x5240>
   1f458:	str	r0, [fp, #-140]	; 0xffffff74
   1f45c:	sub	r3, fp, #28
   1f460:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f464:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f468:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f46c:	bl	15400 <_start@@Base+0xde0>
   1f470:	str	r0, [fp, #-140]	; 0xffffff74
   1f474:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f478:	cmp	r3, #0
   1f47c:	bne	1f420 <_start@@Base+0xae00>
   1f480:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f484:	ldr	r3, [r3]
   1f488:	mov	r0, r3
   1f48c:	bl	30a90 <flatcc_builder_end_vector@@Base>
   1f490:	mov	r3, r0
   1f494:	str	r3, [fp, #-32]	; 0xffffffe0
   1f498:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f49c:	cmp	r3, #0
   1f4a0:	beq	21f90 <_start@@Base+0xd970>
   1f4a4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f4a8:	ldr	r3, [r3]
   1f4ac:	mov	r1, #9
   1f4b0:	mov	r0, r3
   1f4b4:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1f4b8:	str	r0, [fp, #-20]	; 0xffffffec
   1f4bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f4c0:	cmp	r3, #0
   1f4c4:	beq	21f90 <_start@@Base+0xd970>
   1f4c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f4cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f4d0:	str	r2, [r3]
   1f4d4:	b	21d80 <_start@@Base+0xd760>
   1f4d8:	ldrd	r2, [fp, #-12]
   1f4dc:	mov	r0, #0
   1f4e0:	mvn	r1, #0
   1f4e4:	and	r2, r2, r0
   1f4e8:	and	r3, r3, r1
   1f4ec:	add	r1, pc, #308	; 0x134
   1f4f0:	ldrd	r0, [r1]
   1f4f4:	cmp	r3, r1
   1f4f8:	cmpeq	r2, r0
   1f4fc:	bne	1f570 <_start@@Base+0xaf50>
   1f500:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f504:	str	r3, [fp, #-16]
   1f508:	mov	r3, #4
   1f50c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f510:	ldr	r1, [fp, #-16]
   1f514:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f518:	bl	15568 <_start@@Base+0xf48>
   1f51c:	str	r0, [fp, #-140]	; 0xffffff74
   1f520:	ldr	r2, [fp, #-16]
   1f524:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f528:	cmp	r2, r3
   1f52c:	beq	1f578 <_start@@Base+0xaf58>
   1f530:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f534:	ldr	r2, [pc, #252]	; 1f638 <_start@@Base+0xb018>
   1f538:	add	r2, pc, r2
   1f53c:	str	r2, [sp, #8]
   1f540:	str	r3, [sp, #4]
   1f544:	mov	r3, #8
   1f548:	str	r3, [sp]
   1f54c:	mov	r3, #0
   1f550:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f554:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f558:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f55c:	bl	3ce1c <flatcc_json_parser_union@@Base>
   1f560:	str	r0, [fp, #-140]	; 0xffffff74
   1f564:	b	21d80 <_start@@Base+0xd760>
   1f568:	nop			; (mov r0, r0)
   1f56c:	b	1f57c <_start@@Base+0xaf5c>
   1f570:	nop			; (mov r0, r0)
   1f574:	b	1f57c <_start@@Base+0xaf5c>
   1f578:	nop			; (mov r0, r0)
   1f57c:	ldrd	r2, [fp, #-12]
   1f580:	mov	r0, #-16777216	; 0xff000000
   1f584:	mvn	r1, #0
   1f588:	and	r2, r2, r0
   1f58c:	and	r3, r3, r1
   1f590:	add	r1, pc, #152	; 0x98
   1f594:	ldrd	r0, [r1]
   1f598:	cmp	r3, r1
   1f59c:	cmpeq	r2, r0
   1f5a0:	bne	1f6f4 <_start@@Base+0xb0d4>
   1f5a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f5a8:	str	r3, [fp, #-16]
   1f5ac:	mov	r3, #5
   1f5b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f5b4:	ldr	r1, [fp, #-16]
   1f5b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f5bc:	bl	15568 <_start@@Base+0xf48>
   1f5c0:	str	r0, [fp, #-140]	; 0xffffff74
   1f5c4:	ldr	r2, [fp, #-16]
   1f5c8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f5cc:	cmp	r2, r3
   1f5d0:	beq	1f6fc <_start@@Base+0xb0dc>
   1f5d4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f5d8:	ldr	r0, [r3]
   1f5dc:	mvn	r3, #-1073741824	; 0xc0000000
   1f5e0:	mov	r2, #2
   1f5e4:	mov	r1, #4
   1f5e8:	bl	2f838 <flatcc_builder_start_vector@@Base>
   1f5ec:	mov	r3, r0
   1f5f0:	cmp	r3, #0
   1f5f4:	bne	21e9c <_start@@Base+0xd87c>
   1f5f8:	sub	r3, fp, #28
   1f5fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f600:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f604:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f608:	bl	15318 <_start@@Base+0xcf8>
   1f60c:	str	r0, [fp, #-140]	; 0xffffff74
   1f610:	b	1f690 <_start@@Base+0xb070>
   1f614:	nop			; (mov r0, r0)
   1f618:	andeq	r0, r0, r0
   1f61c:	rsbvc	r7, pc, r0, lsl #6
   1f620:	strcc	r0, [r0], #-0
   1f624:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f628:	andeq	r0, r0, r0
   1f62c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f630:	strcc	r0, [r0, #-0]
   1f634:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f638:			; <UNDEFINED> instruction: 0xffff9d78
   1f63c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f640:	ldr	r3, [r3]
   1f644:	mov	r1, #1
   1f648:	mov	r0, r3
   1f64c:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   1f650:	str	r0, [fp, #-24]	; 0xffffffe8
   1f654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f658:	cmp	r3, #0
   1f65c:	beq	21ea4 <_start@@Base+0xd884>
   1f660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f664:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f668:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f66c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f670:	bl	19860 <_start@@Base+0x5240>
   1f674:	str	r0, [fp, #-140]	; 0xffffff74
   1f678:	sub	r3, fp, #28
   1f67c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f680:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f684:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f688:	bl	15400 <_start@@Base+0xde0>
   1f68c:	str	r0, [fp, #-140]	; 0xffffff74
   1f690:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f694:	cmp	r3, #0
   1f698:	bne	1f63c <_start@@Base+0xb01c>
   1f69c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f6a0:	ldr	r3, [r3]
   1f6a4:	mov	r0, r3
   1f6a8:	bl	30a90 <flatcc_builder_end_vector@@Base>
   1f6ac:	mov	r3, r0
   1f6b0:	str	r3, [fp, #-32]	; 0xffffffe0
   1f6b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f6b8:	cmp	r3, #0
   1f6bc:	beq	21f90 <_start@@Base+0xd970>
   1f6c0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f6c4:	ldr	r3, [r3]
   1f6c8:	mov	r1, #31
   1f6cc:	mov	r0, r3
   1f6d0:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1f6d4:	str	r0, [fp, #-20]	; 0xffffffec
   1f6d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6dc:	cmp	r3, #0
   1f6e0:	beq	21f90 <_start@@Base+0xd970>
   1f6e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6ec:	str	r2, [r3]
   1f6f0:	b	21d80 <_start@@Base+0xd760>
   1f6f4:	nop			; (mov r0, r0)
   1f6f8:	b	1f700 <_start@@Base+0xb0e0>
   1f6fc:	nop			; (mov r0, r0)
   1f700:	ldrd	r2, [fp, #-12]
   1f704:	add	r1, pc, #812	; 0x32c
   1f708:	ldrd	r0, [r1]
   1f70c:	cmp	r3, r1
   1f710:	cmpeq	r2, r0
   1f714:	bne	1f7f8 <_start@@Base+0xb1d8>
   1f718:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f71c:	add	r3, r3, #8
   1f720:	str	r3, [fp, #-140]	; 0xffffff74
   1f724:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f728:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f72c:	bl	14f9c <_start@@Base+0x97c>
   1f730:	strd	r0, [fp, #-12]
   1f734:	ldrd	r2, [fp, #-12]
   1f738:	mov	r0, #0
   1f73c:	mov	r1, #-16777216	; 0xff000000
   1f740:	and	r2, r2, r0
   1f744:	and	r3, r3, r1
   1f748:	cmp	r3, #1694498816	; 0x65000000
   1f74c:	cmpeq	r2, #0
   1f750:	bne	1f7e0 <_start@@Base+0xb1c0>
   1f754:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f758:	str	r3, [fp, #-16]
   1f75c:	mov	r3, #1
   1f760:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f764:	ldr	r1, [fp, #-16]
   1f768:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f76c:	bl	15568 <_start@@Base+0xf48>
   1f770:	str	r0, [fp, #-140]	; 0xffffff74
   1f774:	ldr	r2, [fp, #-16]
   1f778:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f77c:	cmp	r2, r3
   1f780:	beq	1f7c8 <_start@@Base+0xb1a8>
   1f784:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f788:	ldr	r2, [pc, #720]	; 1fa60 <_start@@Base+0xb440>
   1f78c:	add	r2, pc, r2
   1f790:	str	r2, [sp, #12]
   1f794:	ldr	r2, [pc, #712]	; 1fa64 <_start@@Base+0xb444>
   1f798:	add	r2, pc, r2
   1f79c:	str	r2, [sp, #8]
   1f7a0:	str	r3, [sp, #4]
   1f7a4:	mov	r3, #8
   1f7a8:	str	r3, [sp]
   1f7ac:	mov	r3, #0
   1f7b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f7b4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f7b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f7bc:	bl	3cfec <flatcc_json_parser_union_type@@Base>
   1f7c0:	str	r0, [fp, #-140]	; 0xffffff74
   1f7c4:	b	21d80 <_start@@Base+0xd760>
   1f7c8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f7cc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f7d0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f7d4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f7d8:	str	r0, [fp, #-140]	; 0xffffff74
   1f7dc:	b	21d80 <_start@@Base+0xd760>
   1f7e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f7e4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f7e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f7ec:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f7f0:	str	r0, [fp, #-140]	; 0xffffff74
   1f7f4:	b	21d80 <_start@@Base+0xd760>
   1f7f8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f7fc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f800:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f804:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1f808:	str	r0, [fp, #-140]	; 0xffffff74
   1f80c:	b	21d80 <_start@@Base+0xd760>
   1f810:	ldrd	r2, [fp, #-12]
   1f814:	add	r1, pc, #548	; 0x224
   1f818:	ldrd	r0, [r1]
   1f81c:	cmp	r3, r1
   1f820:	cmpeq	r2, r0
   1f824:	bhi	20840 <_start@@Base+0xc220>
   1f828:	ldrd	r2, [fp, #-12]
   1f82c:	add	r1, pc, #532	; 0x214
   1f830:	ldrd	r0, [r1]
   1f834:	cmp	r3, r1
   1f838:	cmpeq	r2, r0
   1f83c:	bne	20164 <_start@@Base+0xbb44>
   1f840:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f844:	add	r3, r3, #8
   1f848:	str	r3, [fp, #-140]	; 0xffffff74
   1f84c:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f850:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f854:	bl	14f9c <_start@@Base+0x97c>
   1f858:	strd	r0, [fp, #-12]
   1f85c:	ldrd	r2, [fp, #-12]
   1f860:	add	r1, pc, #488	; 0x1e8
   1f864:	ldrd	r0, [r1]
   1f868:	cmp	r3, r1
   1f86c:	cmpeq	r2, r0
   1f870:	bhi	1fc3c <_start@@Base+0xb61c>
   1f874:	ldrd	r2, [fp, #-12]
   1f878:	add	r1, pc, #472	; 0x1d8
   1f87c:	ldrd	r0, [r1]
   1f880:	cmp	r3, r1
   1f884:	cmpeq	r2, r0
   1f888:	bne	1fa30 <_start@@Base+0xb410>
   1f88c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f890:	str	r3, [fp, #-16]
   1f894:	mov	r3, #8
   1f898:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f89c:	ldr	r1, [fp, #-16]
   1f8a0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f8a4:	bl	15568 <_start@@Base+0xf48>
   1f8a8:	str	r0, [fp, #-140]	; 0xffffff74
   1f8ac:	ldr	r2, [fp, #-16]
   1f8b0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f8b4:	cmp	r2, r3
   1f8b8:	beq	1fa6c <_start@@Base+0xb44c>
   1f8bc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f8c0:	ldr	r0, [r3]
   1f8c4:	mvn	r3, #0
   1f8c8:	mov	r2, #1
   1f8cc:	mov	r1, #1
   1f8d0:	bl	2f838 <flatcc_builder_start_vector@@Base>
   1f8d4:	mov	r3, r0
   1f8d8:	cmp	r3, #0
   1f8dc:	bne	21eac <_start@@Base+0xd88c>
   1f8e0:	sub	r3, fp, #28
   1f8e4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f8e8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f8ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f8f0:	bl	15318 <_start@@Base+0xcf8>
   1f8f4:	str	r0, [fp, #-140]	; 0xffffff74
   1f8f8:	b	1f9cc <_start@@Base+0xb3ac>
   1f8fc:	mov	r3, #0
   1f900:	strb	r3, [fp, #-45]	; 0xffffffd3
   1f904:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f908:	ldr	r3, [r3]
   1f90c:	mov	r1, #1
   1f910:	mov	r0, r3
   1f914:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   1f918:	str	r0, [fp, #-24]	; 0xffffffe8
   1f91c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f920:	cmp	r3, #0
   1f924:	beq	21eb4 <_start@@Base+0xd894>
   1f928:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f92c:	str	r3, [fp, #-16]
   1f930:	sub	r3, fp, #45	; 0x2d
   1f934:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f938:	ldr	r1, [fp, #-16]
   1f93c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f940:	bl	16418 <_start@@Base+0x1df8>
   1f944:	str	r0, [fp, #-140]	; 0xffffff74
   1f948:	ldr	r2, [fp, #-16]
   1f94c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f950:	cmp	r2, r3
   1f954:	bne	1f9a4 <_start@@Base+0xb384>
   1f958:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f95c:	str	r3, [fp, #-16]
   1f960:	sub	r3, fp, #45	; 0x2d
   1f964:	str	r3, [sp]
   1f968:	ldr	r3, [pc, #248]	; 1fa68 <_start@@Base+0xb448>
   1f96c:	add	r3, pc, r3
   1f970:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f974:	ldr	r1, [fp, #-16]
   1f978:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f97c:	bl	1718c <_start@@Base+0x2b6c>
   1f980:	str	r0, [fp, #-140]	; 0xffffff74
   1f984:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f988:	ldr	r3, [fp, #-16]
   1f98c:	cmp	r2, r3
   1f990:	beq	21eb4 <_start@@Base+0xd894>
   1f994:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f998:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f99c:	cmp	r2, r3
   1f9a0:	beq	21eb4 <_start@@Base+0xd894>
   1f9a4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   1f9a8:	mov	r1, r3
   1f9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f9b0:	bl	14b58 <_start@@Base+0x538>
   1f9b4:	sub	r3, fp, #28
   1f9b8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f9bc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f9c0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f9c4:	bl	15400 <_start@@Base+0xde0>
   1f9c8:	str	r0, [fp, #-140]	; 0xffffff74
   1f9cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f9d0:	cmp	r3, #0
   1f9d4:	bne	1f8fc <_start@@Base+0xb2dc>
   1f9d8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f9dc:	ldr	r3, [r3]
   1f9e0:	mov	r0, r3
   1f9e4:	bl	30a90 <flatcc_builder_end_vector@@Base>
   1f9e8:	mov	r3, r0
   1f9ec:	str	r3, [fp, #-32]	; 0xffffffe0
   1f9f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f9f4:	cmp	r3, #0
   1f9f8:	beq	21f90 <_start@@Base+0xd970>
   1f9fc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fa00:	ldr	r3, [r3]
   1fa04:	mov	r1, #24
   1fa08:	mov	r0, r3
   1fa0c:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1fa10:	str	r0, [fp, #-20]	; 0xffffffec
   1fa14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa18:	cmp	r3, #0
   1fa1c:	beq	21f90 <_start@@Base+0xd970>
   1fa20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fa24:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa28:	str	r2, [r3]
   1fa2c:	b	21d80 <_start@@Base+0xd760>
   1fa30:	nop			; (mov r0, r0)
   1fa34:	b	1fa70 <_start@@Base+0xb450>
   1fa38:	svcpl	0x00747970
   1fa3c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fa40:	shsub8vs	pc, r2, pc	; <UNPREDICTABLE>
   1fa44:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fa48:	cmnvs	r2, r1, ror #4
   1fa4c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1fa50:	ldrbtvc	r6, [r2], #-2413	; 0xfffff693
   1fa54:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1fa58:	svcvs	0x006f6c73
   1fa5c:	stmdbvc	pc!, {r1, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1fa60:			; <UNDEFINED> instruction: 0xffff9b24
   1fa64:	andeq	r4, r4, r0, asr #21
   1fa68:	strdeq	r4, [r4], -ip
   1fa6c:	nop			; (mov r0, r0)
   1fa70:	ldrd	r2, [fp, #-12]
   1fa74:	add	r1, pc, #876	; 0x36c
   1fa78:	ldrd	r0, [r1]
   1fa7c:	cmp	r3, r1
   1fa80:	cmpeq	r2, r0
   1fa84:	bne	1fc24 <_start@@Base+0xb604>
   1fa88:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fa8c:	add	r3, r3, #8
   1fa90:	str	r3, [fp, #-140]	; 0xffffff74
   1fa94:	ldr	r1, [fp, #-144]	; 0xffffff70
   1fa98:	ldr	r0, [fp, #-140]	; 0xffffff74
   1fa9c:	bl	14f9c <_start@@Base+0x97c>
   1faa0:	strd	r0, [fp, #-12]
   1faa4:	ldrd	r2, [fp, #-12]
   1faa8:	mvn	r0, #255	; 0xff
   1faac:	mvn	r1, #0
   1fab0:	and	r2, r2, r0
   1fab4:	and	r3, r3, r1
   1fab8:	add	r1, pc, #816	; 0x330
   1fabc:	ldrd	r0, [r1]
   1fac0:	cmp	r3, r1
   1fac4:	cmpeq	r2, r0
   1fac8:	bne	1fc0c <_start@@Base+0xb5ec>
   1facc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fad0:	str	r3, [fp, #-16]
   1fad4:	mov	r3, #7
   1fad8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fadc:	ldr	r1, [fp, #-16]
   1fae0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fae4:	bl	15568 <_start@@Base+0xf48>
   1fae8:	str	r0, [fp, #-140]	; 0xffffff74
   1faec:	ldr	r2, [fp, #-16]
   1faf0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1faf4:	cmp	r2, r3
   1faf8:	beq	1fbf4 <_start@@Base+0xb5d4>
   1fafc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fb00:	ldr	r0, [r3]
   1fb04:	mvn	r3, #-536870912	; 0xe0000000
   1fb08:	mov	r2, #4
   1fb0c:	mov	r1, #8
   1fb10:	bl	2f838 <flatcc_builder_start_vector@@Base>
   1fb14:	mov	r3, r0
   1fb18:	cmp	r3, #0
   1fb1c:	bne	21ebc <_start@@Base+0xd89c>
   1fb20:	sub	r3, fp, #28
   1fb24:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb28:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fb2c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fb30:	bl	15318 <_start@@Base+0xcf8>
   1fb34:	str	r0, [fp, #-140]	; 0xffffff74
   1fb38:	b	1fb90 <_start@@Base+0xb570>
   1fb3c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fb40:	ldr	r3, [r3]
   1fb44:	mov	r1, #1
   1fb48:	mov	r0, r3
   1fb4c:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   1fb50:	str	r0, [fp, #-24]	; 0xffffffe8
   1fb54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fb58:	cmp	r3, #0
   1fb5c:	beq	21ec4 <_start@@Base+0xd8a4>
   1fb60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fb64:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb68:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fb6c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fb70:	bl	1b9fc <_start@@Base+0x73dc>
   1fb74:	str	r0, [fp, #-140]	; 0xffffff74
   1fb78:	sub	r3, fp, #28
   1fb7c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb80:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fb84:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fb88:	bl	15400 <_start@@Base+0xde0>
   1fb8c:	str	r0, [fp, #-140]	; 0xffffff74
   1fb90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fb94:	cmp	r3, #0
   1fb98:	bne	1fb3c <_start@@Base+0xb51c>
   1fb9c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fba0:	ldr	r3, [r3]
   1fba4:	mov	r0, r3
   1fba8:	bl	30a90 <flatcc_builder_end_vector@@Base>
   1fbac:	mov	r3, r0
   1fbb0:	str	r3, [fp, #-32]	; 0xffffffe0
   1fbb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fbb8:	cmp	r3, #0
   1fbbc:	beq	21f90 <_start@@Base+0xd970>
   1fbc0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fbc4:	ldr	r3, [r3]
   1fbc8:	mov	r1, #29
   1fbcc:	mov	r0, r3
   1fbd0:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1fbd4:	str	r0, [fp, #-20]	; 0xffffffec
   1fbd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fbdc:	cmp	r3, #0
   1fbe0:	beq	21f90 <_start@@Base+0xd970>
   1fbe4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fbe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fbec:	str	r2, [r3]
   1fbf0:	b	21d80 <_start@@Base+0xd760>
   1fbf4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fbf8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fbfc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fc00:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1fc04:	str	r0, [fp, #-140]	; 0xffffff74
   1fc08:	b	21d80 <_start@@Base+0xd760>
   1fc0c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fc10:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fc14:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fc18:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1fc1c:	str	r0, [fp, #-140]	; 0xffffff74
   1fc20:	b	21d80 <_start@@Base+0xd760>
   1fc24:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fc28:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fc2c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fc30:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1fc34:	str	r0, [fp, #-140]	; 0xffffff74
   1fc38:	b	21d80 <_start@@Base+0xd760>
   1fc3c:	ldrd	r2, [fp, #-12]
   1fc40:	add	r1, pc, #432	; 0x1b0
   1fc44:	ldrd	r0, [r1]
   1fc48:	cmp	r3, r1
   1fc4c:	cmpeq	r2, r0
   1fc50:	bne	1ff90 <_start@@Base+0xb970>
   1fc54:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fc58:	add	r3, r3, #8
   1fc5c:	str	r3, [fp, #-140]	; 0xffffff74
   1fc60:	ldr	r1, [fp, #-144]	; 0xffffff70
   1fc64:	ldr	r0, [fp, #-140]	; 0xffffff74
   1fc68:	bl	14f9c <_start@@Base+0x97c>
   1fc6c:	strd	r0, [fp, #-12]
   1fc70:	ldrd	r2, [fp, #-12]
   1fc74:	mov	r0, #0
   1fc78:	ldr	r1, [pc, #384]	; 1fe00 <_start@@Base+0xb7e0>
   1fc7c:	and	r2, r2, r0
   1fc80:	and	r3, r3, r1
   1fc84:	mov	r0, #0
   1fc88:	ldr	r1, [pc, #372]	; 1fe04 <_start@@Base+0xb7e4>
   1fc8c:	cmp	r3, r1
   1fc90:	cmpeq	r2, r0
   1fc94:	bne	1fe08 <_start@@Base+0xb7e8>
   1fc98:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fc9c:	str	r3, [fp, #-16]
   1fca0:	mov	r3, #2
   1fca4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fca8:	ldr	r1, [fp, #-16]
   1fcac:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fcb0:	bl	15568 <_start@@Base+0xf48>
   1fcb4:	str	r0, [fp, #-140]	; 0xffffff74
   1fcb8:	ldr	r2, [fp, #-16]
   1fcbc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fcc0:	cmp	r2, r3
   1fcc4:	beq	1fdd0 <_start@@Base+0xb7b0>
   1fcc8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fccc:	ldr	r3, [r3]
   1fcd0:	mov	r0, r3
   1fcd4:	bl	2f8e4 <flatcc_builder_start_offset_vector@@Base>
   1fcd8:	mov	r3, r0
   1fcdc:	cmp	r3, #0
   1fce0:	bne	21ecc <_start@@Base+0xd8ac>
   1fce4:	sub	r3, fp, #28
   1fce8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fcec:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fcf0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fcf4:	bl	15318 <_start@@Base+0xcf8>
   1fcf8:	str	r0, [fp, #-140]	; 0xffffff74
   1fcfc:	b	1fd6c <_start@@Base+0xb74c>
   1fd00:	sub	r3, fp, #32
   1fd04:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fd08:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fd0c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fd10:	bl	3cae8 <flatcc_json_parser_build_string@@Base>
   1fd14:	str	r0, [fp, #-140]	; 0xffffff74
   1fd18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fd1c:	cmp	r3, #0
   1fd20:	beq	21f90 <_start@@Base+0xd970>
   1fd24:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fd28:	ldr	r3, [r3]
   1fd2c:	mov	r1, #1
   1fd30:	mov	r0, r3
   1fd34:	bl	2f190 <flatcc_builder_extend_offset_vector@@Base>
   1fd38:	str	r0, [fp, #-20]	; 0xffffffec
   1fd3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd40:	cmp	r3, #0
   1fd44:	beq	21f90 <_start@@Base+0xd970>
   1fd48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd50:	str	r2, [r3]
   1fd54:	sub	r3, fp, #28
   1fd58:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fd5c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fd60:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fd64:	bl	15400 <_start@@Base+0xde0>
   1fd68:	str	r0, [fp, #-140]	; 0xffffff74
   1fd6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd70:	cmp	r3, #0
   1fd74:	bne	1fd00 <_start@@Base+0xb6e0>
   1fd78:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fd7c:	ldr	r3, [r3]
   1fd80:	mov	r0, r3
   1fd84:	bl	30f38 <flatcc_builder_end_offset_vector@@Base>
   1fd88:	mov	r3, r0
   1fd8c:	str	r3, [fp, #-32]	; 0xffffffe0
   1fd90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fd94:	cmp	r3, #0
   1fd98:	beq	21f90 <_start@@Base+0xd970>
   1fd9c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fda0:	ldr	r3, [r3]
   1fda4:	mov	r1, #28
   1fda8:	mov	r0, r3
   1fdac:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1fdb0:	str	r0, [fp, #-20]	; 0xffffffec
   1fdb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fdb8:	cmp	r3, #0
   1fdbc:	beq	21f90 <_start@@Base+0xd970>
   1fdc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fdc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fdc8:	str	r2, [r3]
   1fdcc:	b	21d80 <_start@@Base+0xd760>
   1fdd0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fdd4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fdd8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fddc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1fde0:	str	r0, [fp, #-140]	; 0xffffff74
   1fde4:	b	21d80 <_start@@Base+0xd760>
   1fde8:	svcvs	0x00727465
   1fdec:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1fdf0:	strbvc	r7, [r3, #-1024]!	; 0xfffffc00
   1fdf4:	ldrbtvs	r7, [r3], #-1138	; 0xfffffb8e
   1fdf8:	ldrbtvc	r6, [r2], #-2414	; 0xfffff692
   1fdfc:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1fe00:			; <UNDEFINED> instruction: 0xffff0000
   1fe04:	ldrvs	r0, [r2, -r0]!
   1fe08:	ldrd	r2, [fp, #-12]
   1fe0c:	mov	r0, #0
   1fe10:	mov	r1, #-16777216	; 0xff000000
   1fe14:	and	r2, r2, r0
   1fe18:	and	r3, r3, r1
   1fe1c:	cmp	r3, #1728053248	; 0x67000000
   1fe20:	cmpeq	r2, #0
   1fe24:	bne	1ff78 <_start@@Base+0xb958>
   1fe28:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fe2c:	str	r3, [fp, #-16]
   1fe30:	mov	r3, #1
   1fe34:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fe38:	ldr	r1, [fp, #-16]
   1fe3c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fe40:	bl	15568 <_start@@Base+0xf48>
   1fe44:	str	r0, [fp, #-140]	; 0xffffff74
   1fe48:	ldr	r2, [fp, #-16]
   1fe4c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fe50:	cmp	r2, r3
   1fe54:	beq	1ff60 <_start@@Base+0xb940>
   1fe58:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fe5c:	ldr	r3, [r3]
   1fe60:	mov	r0, r3
   1fe64:	bl	2f8e4 <flatcc_builder_start_offset_vector@@Base>
   1fe68:	mov	r3, r0
   1fe6c:	cmp	r3, #0
   1fe70:	bne	21ed4 <_start@@Base+0xd8b4>
   1fe74:	sub	r3, fp, #28
   1fe78:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fe7c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fe80:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fe84:	bl	15318 <_start@@Base+0xcf8>
   1fe88:	str	r0, [fp, #-140]	; 0xffffff74
   1fe8c:	b	1fefc <_start@@Base+0xb8dc>
   1fe90:	sub	r3, fp, #32
   1fe94:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fe98:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fe9c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fea0:	bl	3cae8 <flatcc_json_parser_build_string@@Base>
   1fea4:	str	r0, [fp, #-140]	; 0xffffff74
   1fea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1feac:	cmp	r3, #0
   1feb0:	beq	21f90 <_start@@Base+0xd970>
   1feb4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1feb8:	ldr	r3, [r3]
   1febc:	mov	r1, #1
   1fec0:	mov	r0, r3
   1fec4:	bl	2f190 <flatcc_builder_extend_offset_vector@@Base>
   1fec8:	str	r0, [fp, #-20]	; 0xffffffec
   1fecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fed0:	cmp	r3, #0
   1fed4:	beq	21f90 <_start@@Base+0xd970>
   1fed8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fedc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fee0:	str	r2, [r3]
   1fee4:	sub	r3, fp, #28
   1fee8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1feec:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fef0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fef4:	bl	15400 <_start@@Base+0xde0>
   1fef8:	str	r0, [fp, #-140]	; 0xffffff74
   1fefc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff00:	cmp	r3, #0
   1ff04:	bne	1fe90 <_start@@Base+0xb870>
   1ff08:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ff0c:	ldr	r3, [r3]
   1ff10:	mov	r0, r3
   1ff14:	bl	30f38 <flatcc_builder_end_offset_vector@@Base>
   1ff18:	mov	r3, r0
   1ff1c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ff20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ff24:	cmp	r3, #0
   1ff28:	beq	21f90 <_start@@Base+0xd970>
   1ff2c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ff30:	ldr	r3, [r3]
   1ff34:	mov	r1, #10
   1ff38:	mov	r0, r3
   1ff3c:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   1ff40:	str	r0, [fp, #-20]	; 0xffffffec
   1ff44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff48:	cmp	r3, #0
   1ff4c:	beq	21f90 <_start@@Base+0xd970>
   1ff50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ff54:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff58:	str	r2, [r3]
   1ff5c:	b	21d80 <_start@@Base+0xd760>
   1ff60:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ff64:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ff68:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ff6c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ff70:	str	r0, [fp, #-140]	; 0xffffff74
   1ff74:	b	21d80 <_start@@Base+0xd760>
   1ff78:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ff7c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ff80:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ff84:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   1ff88:	str	r0, [fp, #-140]	; 0xffffff74
   1ff8c:	b	21d80 <_start@@Base+0xd760>
   1ff90:	ldrd	r2, [fp, #-12]
   1ff94:	add	r1, pc, #756	; 0x2f4
   1ff98:	ldrd	r0, [r1]
   1ff9c:	cmp	r3, r1
   1ffa0:	cmpeq	r2, r0
   1ffa4:	bne	2014c <_start@@Base+0xbb2c>
   1ffa8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ffac:	add	r3, r3, #8
   1ffb0:	str	r3, [fp, #-140]	; 0xffffff74
   1ffb4:	ldr	r1, [fp, #-144]	; 0xffffff70
   1ffb8:	ldr	r0, [fp, #-140]	; 0xffffff74
   1ffbc:	bl	14f9c <_start@@Base+0x97c>
   1ffc0:	strd	r0, [fp, #-12]
   1ffc4:	ldrd	r2, [fp, #-12]
   1ffc8:	mov	r0, #0
   1ffcc:	mov	r1, #-16777216	; 0xff000000
   1ffd0:	and	r2, r2, r0
   1ffd4:	and	r3, r3, r1
   1ffd8:	cmp	r3, #1929379840	; 0x73000000
   1ffdc:	cmpeq	r2, #0
   1ffe0:	bne	20134 <_start@@Base+0xbb14>
   1ffe4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ffe8:	str	r3, [fp, #-16]
   1ffec:	mov	r3, #1
   1fff0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fff4:	ldr	r1, [fp, #-16]
   1fff8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fffc:	bl	15568 <_start@@Base+0xf48>
   20000:	str	r0, [fp, #-140]	; 0xffffff74
   20004:	ldr	r2, [fp, #-16]
   20008:	ldr	r3, [fp, #-140]	; 0xffffff74
   2000c:	cmp	r2, r3
   20010:	beq	2011c <_start@@Base+0xbafc>
   20014:	ldr	r3, [fp, #-136]	; 0xffffff78
   20018:	ldr	r3, [r3]
   2001c:	mov	r0, r3
   20020:	bl	2f8e4 <flatcc_builder_start_offset_vector@@Base>
   20024:	mov	r3, r0
   20028:	cmp	r3, #0
   2002c:	bne	21edc <_start@@Base+0xd8bc>
   20030:	sub	r3, fp, #28
   20034:	ldr	r2, [fp, #-144]	; 0xffffff70
   20038:	ldr	r1, [fp, #-140]	; 0xffffff74
   2003c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20040:	bl	15318 <_start@@Base+0xcf8>
   20044:	str	r0, [fp, #-140]	; 0xffffff74
   20048:	b	200b8 <_start@@Base+0xba98>
   2004c:	sub	r3, fp, #32
   20050:	ldr	r2, [fp, #-144]	; 0xffffff70
   20054:	ldr	r1, [fp, #-140]	; 0xffffff74
   20058:	ldr	r0, [fp, #-136]	; 0xffffff78
   2005c:	bl	1e564 <_start@@Base+0x9f44>
   20060:	str	r0, [fp, #-140]	; 0xffffff74
   20064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20068:	cmp	r3, #0
   2006c:	beq	21f90 <_start@@Base+0xd970>
   20070:	ldr	r3, [fp, #-136]	; 0xffffff78
   20074:	ldr	r3, [r3]
   20078:	mov	r1, #1
   2007c:	mov	r0, r3
   20080:	bl	2f190 <flatcc_builder_extend_offset_vector@@Base>
   20084:	str	r0, [fp, #-20]	; 0xffffffec
   20088:	ldr	r3, [fp, #-20]	; 0xffffffec
   2008c:	cmp	r3, #0
   20090:	beq	21f90 <_start@@Base+0xd970>
   20094:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20098:	ldr	r3, [fp, #-20]	; 0xffffffec
   2009c:	str	r2, [r3]
   200a0:	sub	r3, fp, #28
   200a4:	ldr	r2, [fp, #-144]	; 0xffffff70
   200a8:	ldr	r1, [fp, #-140]	; 0xffffff74
   200ac:	ldr	r0, [fp, #-136]	; 0xffffff78
   200b0:	bl	15400 <_start@@Base+0xde0>
   200b4:	str	r0, [fp, #-140]	; 0xffffff74
   200b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   200bc:	cmp	r3, #0
   200c0:	bne	2004c <_start@@Base+0xba2c>
   200c4:	ldr	r3, [fp, #-136]	; 0xffffff78
   200c8:	ldr	r3, [r3]
   200cc:	mov	r0, r3
   200d0:	bl	30f38 <flatcc_builder_end_offset_vector@@Base>
   200d4:	mov	r3, r0
   200d8:	str	r3, [fp, #-32]	; 0xffffffe0
   200dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200e0:	cmp	r3, #0
   200e4:	beq	21f90 <_start@@Base+0xd970>
   200e8:	ldr	r3, [fp, #-136]	; 0xffffff78
   200ec:	ldr	r3, [r3]
   200f0:	mov	r1, #11
   200f4:	mov	r0, r3
   200f8:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   200fc:	str	r0, [fp, #-20]	; 0xffffffec
   20100:	ldr	r3, [fp, #-20]	; 0xffffffec
   20104:	cmp	r3, #0
   20108:	beq	21f90 <_start@@Base+0xd970>
   2010c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20110:	ldr	r3, [fp, #-20]	; 0xffffffec
   20114:	str	r2, [r3]
   20118:	b	21d80 <_start@@Base+0xd760>
   2011c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20120:	ldr	r1, [fp, #-140]	; 0xffffff74
   20124:	ldr	r0, [fp, #-136]	; 0xffffff78
   20128:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2012c:	str	r0, [fp, #-140]	; 0xffffff74
   20130:	b	21d80 <_start@@Base+0xd760>
   20134:	ldr	r2, [fp, #-144]	; 0xffffff70
   20138:	ldr	r1, [fp, #-140]	; 0xffffff74
   2013c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20140:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20144:	str	r0, [fp, #-140]	; 0xffffff74
   20148:	b	21d80 <_start@@Base+0xd760>
   2014c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20150:	ldr	r1, [fp, #-140]	; 0xffffff74
   20154:	ldr	r0, [fp, #-136]	; 0xffffff78
   20158:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2015c:	str	r0, [fp, #-140]	; 0xffffff74
   20160:	b	21d80 <_start@@Base+0xd760>
   20164:	ldrd	r2, [fp, #-12]
   20168:	add	r1, pc, #296	; 0x128
   2016c:	ldrd	r0, [r1]
   20170:	cmp	r3, r1
   20174:	cmpeq	r2, r0
   20178:	bhi	20408 <_start@@Base+0xbde8>
   2017c:	ldrd	r2, [fp, #-12]
   20180:	add	r1, pc, #280	; 0x118
   20184:	ldrd	r0, [r1]
   20188:	cmp	r3, r1
   2018c:	cmpeq	r2, r0
   20190:	bne	202b0 <_start@@Base+0xbc90>
   20194:	ldr	r3, [fp, #-140]	; 0xffffff74
   20198:	add	r3, r3, #8
   2019c:	str	r3, [fp, #-140]	; 0xffffff74
   201a0:	ldr	r1, [fp, #-144]	; 0xffffff70
   201a4:	ldr	r0, [fp, #-140]	; 0xffffff74
   201a8:	bl	14f9c <_start@@Base+0x97c>
   201ac:	strd	r0, [fp, #-12]
   201b0:	ldrd	r2, [fp, #-12]
   201b4:	mov	r0, #0
   201b8:	ldr	r1, [pc, #232]	; 202a8 <_start@@Base+0xbc88>
   201bc:	and	r2, r2, r0
   201c0:	and	r3, r3, r1
   201c4:	mov	r0, #0
   201c8:	ldr	r1, [pc, #220]	; 202ac <_start@@Base+0xbc8c>
   201cc:	cmp	r3, r1
   201d0:	cmpeq	r2, r0
   201d4:	bne	20278 <_start@@Base+0xbc58>
   201d8:	ldr	r3, [fp, #-140]	; 0xffffff74
   201dc:	str	r3, [fp, #-16]
   201e0:	mov	r3, #2
   201e4:	ldr	r2, [fp, #-144]	; 0xffffff70
   201e8:	ldr	r1, [fp, #-16]
   201ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   201f0:	bl	15568 <_start@@Base+0xf48>
   201f4:	str	r0, [fp, #-140]	; 0xffffff74
   201f8:	ldr	r2, [fp, #-16]
   201fc:	ldr	r3, [fp, #-140]	; 0xffffff74
   20200:	cmp	r2, r3
   20204:	beq	20260 <_start@@Base+0xbc40>
   20208:	sub	r3, fp, #32
   2020c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20210:	ldr	r1, [fp, #-140]	; 0xffffff74
   20214:	ldr	r0, [fp, #-136]	; 0xffffff78
   20218:	bl	1e158 <_start@@Base+0x9b38>
   2021c:	str	r0, [fp, #-140]	; 0xffffff74
   20220:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20224:	cmp	r3, #0
   20228:	beq	21f90 <_start@@Base+0xd970>
   2022c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20230:	ldr	r3, [r3]
   20234:	mov	r1, #35	; 0x23
   20238:	mov	r0, r3
   2023c:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   20240:	str	r0, [fp, #-20]	; 0xffffffec
   20244:	ldr	r3, [fp, #-20]	; 0xffffffec
   20248:	cmp	r3, #0
   2024c:	beq	21f90 <_start@@Base+0xd970>
   20250:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20254:	ldr	r3, [fp, #-20]	; 0xffffffec
   20258:	str	r2, [r3]
   2025c:	b	21d80 <_start@@Base+0xd760>
   20260:	ldr	r2, [fp, #-144]	; 0xffffff70
   20264:	ldr	r1, [fp, #-140]	; 0xffffff74
   20268:	ldr	r0, [fp, #-136]	; 0xffffff78
   2026c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20270:	str	r0, [fp, #-140]	; 0xffffff74
   20274:	b	21d80 <_start@@Base+0xd760>
   20278:	ldr	r2, [fp, #-144]	; 0xffffff70
   2027c:	ldr	r1, [fp, #-140]	; 0xffffff74
   20280:	ldr	r0, [fp, #-136]	; 0xffffff78
   20284:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20288:	str	r0, [fp, #-140]	; 0xffffff74
   2028c:	b	21d80 <_start@@Base+0xd760>
   20290:	cmnvs	r2, r5, ror #24
   20294:	stmdbvc	pc!, {r2, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   20298:	strbvs	r7, [sp, #-115]!	; 0xffffff8d
   2029c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   202a0:	rsbvs	r7, r1, #-1811939327	; 0x94000001
   202a4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   202a8:			; <UNDEFINED> instruction: 0xffff0000
   202ac:	ldrtcc	r0, [r4], -r0
   202b0:	ldrd	r2, [fp, #-12]
   202b4:	add	r1, pc, #972	; 0x3cc
   202b8:	ldrd	r0, [r1]
   202bc:	cmp	r3, r1
   202c0:	cmpeq	r2, r0
   202c4:	bne	203f0 <_start@@Base+0xbdd0>
   202c8:	ldr	r3, [fp, #-140]	; 0xffffff74
   202cc:	str	r3, [fp, #-16]
   202d0:	mov	r3, #8
   202d4:	ldr	r2, [fp, #-144]	; 0xffffff70
   202d8:	ldr	r1, [fp, #-16]
   202dc:	ldr	r0, [fp, #-136]	; 0xffffff78
   202e0:	bl	15568 <_start@@Base+0xf48>
   202e4:	str	r0, [fp, #-140]	; 0xffffff74
   202e8:	ldr	r2, [fp, #-16]
   202ec:	ldr	r3, [fp, #-140]	; 0xffffff74
   202f0:	cmp	r2, r3
   202f4:	beq	203d8 <_start@@Base+0xbdb8>
   202f8:	mov	r3, #0
   202fc:	strb	r3, [fp, #-46]	; 0xffffffd2
   20300:	ldr	r3, [fp, #-140]	; 0xffffff74
   20304:	str	r3, [fp, #-16]
   20308:	sub	r3, fp, #46	; 0x2e
   2030c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20310:	ldr	r1, [fp, #-16]
   20314:	ldr	r0, [fp, #-136]	; 0xffffff78
   20318:	bl	16418 <_start@@Base+0x1df8>
   2031c:	str	r0, [fp, #-140]	; 0xffffff74
   20320:	ldr	r2, [fp, #-16]
   20324:	ldr	r3, [fp, #-140]	; 0xffffff74
   20328:	cmp	r2, r3
   2032c:	bne	2037c <_start@@Base+0xbd5c>
   20330:	ldr	r3, [fp, #-140]	; 0xffffff74
   20334:	str	r3, [fp, #-16]
   20338:	sub	r3, fp, #46	; 0x2e
   2033c:	str	r3, [sp]
   20340:	ldr	r3, [pc, #868]	; 206ac <_start@@Base+0xc08c>
   20344:	add	r3, pc, r3
   20348:	ldr	r2, [fp, #-144]	; 0xffffff70
   2034c:	ldr	r1, [fp, #-16]
   20350:	ldr	r0, [fp, #-136]	; 0xffffff78
   20354:	bl	1718c <_start@@Base+0x2b6c>
   20358:	str	r0, [fp, #-140]	; 0xffffff74
   2035c:	ldr	r2, [fp, #-140]	; 0xffffff74
   20360:	ldr	r3, [fp, #-16]
   20364:	cmp	r2, r3
   20368:	beq	21f90 <_start@@Base+0xd970>
   2036c:	ldr	r2, [fp, #-140]	; 0xffffff74
   20370:	ldr	r3, [fp, #-144]	; 0xffffff70
   20374:	cmp	r2, r3
   20378:	beq	21f90 <_start@@Base+0xd970>
   2037c:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   20380:	cmp	r3, #1
   20384:	bne	2039c <_start@@Base+0xbd7c>
   20388:	ldr	r3, [fp, #-136]	; 0xffffff78
   2038c:	ldr	r3, [r3, #8]
   20390:	and	r3, r3, #2
   20394:	cmp	r3, #0
   20398:	beq	21d80 <_start@@Base+0xd760>
   2039c:	ldr	r3, [fp, #-136]	; 0xffffff78
   203a0:	ldr	r0, [r3]
   203a4:	mov	r3, #1
   203a8:	mov	r2, #1
   203ac:	mov	r1, #15
   203b0:	bl	31fc4 <flatcc_builder_table_add@@Base>
   203b4:	str	r0, [fp, #-24]	; 0xffffffe8
   203b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   203bc:	cmp	r3, #0
   203c0:	beq	21ee4 <_start@@Base+0xd8c4>
   203c4:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   203c8:	mov	r1, r3
   203cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   203d0:	bl	14b58 <_start@@Base+0x538>
   203d4:	b	21d80 <_start@@Base+0xd760>
   203d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   203dc:	ldr	r1, [fp, #-140]	; 0xffffff74
   203e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   203e4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   203e8:	str	r0, [fp, #-140]	; 0xffffff74
   203ec:	b	21d80 <_start@@Base+0xd760>
   203f0:	ldr	r2, [fp, #-144]	; 0xffffff70
   203f4:	ldr	r1, [fp, #-140]	; 0xffffff74
   203f8:	ldr	r0, [fp, #-136]	; 0xffffff78
   203fc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20400:	str	r0, [fp, #-140]	; 0xffffff74
   20404:	b	21d80 <_start@@Base+0xd760>
   20408:	ldrd	r2, [fp, #-12]
   2040c:	add	r1, pc, #636	; 0x27c
   20410:	ldrd	r0, [r1]
   20414:	cmp	r3, r1
   20418:	cmpeq	r2, r0
   2041c:	bhi	20544 <_start@@Base+0xbf24>
   20420:	ldrd	r2, [fp, #-12]
   20424:	add	r1, pc, #620	; 0x26c
   20428:	ldrd	r0, [r1]
   2042c:	cmp	r3, r1
   20430:	cmpeq	r2, r0
   20434:	bne	2052c <_start@@Base+0xbf0c>
   20438:	ldr	r3, [fp, #-140]	; 0xffffff74
   2043c:	add	r3, r3, #8
   20440:	str	r3, [fp, #-140]	; 0xffffff74
   20444:	ldr	r1, [fp, #-144]	; 0xffffff70
   20448:	ldr	r0, [fp, #-140]	; 0xffffff74
   2044c:	bl	14f9c <_start@@Base+0x97c>
   20450:	strd	r0, [fp, #-12]
   20454:	ldrd	r2, [fp, #-12]
   20458:	mov	r0, #0
   2045c:	mov	r1, #-16777216	; 0xff000000
   20460:	and	r2, r2, r0
   20464:	and	r3, r3, r1
   20468:	cmp	r3, #2030043136	; 0x79000000
   2046c:	cmpeq	r2, #0
   20470:	bne	20514 <_start@@Base+0xbef4>
   20474:	ldr	r3, [fp, #-140]	; 0xffffff74
   20478:	str	r3, [fp, #-16]
   2047c:	mov	r3, #1
   20480:	ldr	r2, [fp, #-144]	; 0xffffff70
   20484:	ldr	r1, [fp, #-16]
   20488:	ldr	r0, [fp, #-136]	; 0xffffff78
   2048c:	bl	15568 <_start@@Base+0xf48>
   20490:	str	r0, [fp, #-140]	; 0xffffff74
   20494:	ldr	r2, [fp, #-16]
   20498:	ldr	r3, [fp, #-140]	; 0xffffff74
   2049c:	cmp	r2, r3
   204a0:	beq	204fc <_start@@Base+0xbedc>
   204a4:	sub	r3, fp, #32
   204a8:	ldr	r2, [fp, #-144]	; 0xffffff70
   204ac:	ldr	r1, [fp, #-140]	; 0xffffff74
   204b0:	ldr	r0, [fp, #-136]	; 0xffffff78
   204b4:	bl	1bdbc <_start@@Base+0x779c>
   204b8:	str	r0, [fp, #-140]	; 0xffffff74
   204bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   204c0:	cmp	r3, #0
   204c4:	beq	21f90 <_start@@Base+0xd970>
   204c8:	ldr	r3, [fp, #-136]	; 0xffffff78
   204cc:	ldr	r3, [r3]
   204d0:	mov	r1, #14
   204d4:	mov	r0, r3
   204d8:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   204dc:	str	r0, [fp, #-20]	; 0xffffffec
   204e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   204e4:	cmp	r3, #0
   204e8:	beq	21f90 <_start@@Base+0xd970>
   204ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   204f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   204f4:	str	r2, [r3]
   204f8:	b	21d80 <_start@@Base+0xd760>
   204fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   20500:	ldr	r1, [fp, #-140]	; 0xffffff74
   20504:	ldr	r0, [fp, #-136]	; 0xffffff78
   20508:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2050c:	str	r0, [fp, #-140]	; 0xffffff74
   20510:	b	21d80 <_start@@Base+0xd760>
   20514:	ldr	r2, [fp, #-144]	; 0xffffff70
   20518:	ldr	r1, [fp, #-140]	; 0xffffff74
   2051c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20520:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20524:	str	r0, [fp, #-140]	; 0xffffff74
   20528:	b	21d80 <_start@@Base+0xd760>
   2052c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20530:	ldr	r1, [fp, #-140]	; 0xffffff74
   20534:	ldr	r0, [fp, #-136]	; 0xffffff78
   20538:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2053c:	str	r0, [fp, #-140]	; 0xffffff74
   20540:	b	21d80 <_start@@Base+0xd760>
   20544:	ldrd	r2, [fp, #-12]
   20548:	ldr	r0, [pc, #352]	; 206b0 <_start@@Base+0xc090>
   2054c:	mvn	r1, #0
   20550:	and	r2, r2, r0
   20554:	and	r3, r3, r1
   20558:	add	r1, pc, #320	; 0x140
   2055c:	ldrd	r0, [r1]
   20560:	cmp	r3, r1
   20564:	cmpeq	r2, r0
   20568:	bne	206d0 <_start@@Base+0xc0b0>
   2056c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20570:	str	r3, [fp, #-16]
   20574:	mov	r3, #6
   20578:	ldr	r2, [fp, #-144]	; 0xffffff70
   2057c:	ldr	r1, [fp, #-16]
   20580:	ldr	r0, [fp, #-136]	; 0xffffff78
   20584:	bl	15568 <_start@@Base+0xf48>
   20588:	str	r0, [fp, #-140]	; 0xffffff74
   2058c:	ldr	r2, [fp, #-16]
   20590:	ldr	r3, [fp, #-140]	; 0xffffff74
   20594:	cmp	r2, r3
   20598:	beq	206b8 <_start@@Base+0xc098>
   2059c:	mov	r3, #0
   205a0:	str	r3, [fp, #-52]	; 0xffffffcc
   205a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   205a8:	str	r3, [fp, #-16]
   205ac:	sub	r3, fp, #52	; 0x34
   205b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   205b4:	ldr	r1, [fp, #-16]
   205b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   205bc:	bl	3c078 <flatcc_json_parser_float@@Base>
   205c0:	str	r0, [fp, #-140]	; 0xffffff74
   205c4:	ldr	r2, [fp, #-16]
   205c8:	ldr	r3, [fp, #-140]	; 0xffffff74
   205cc:	cmp	r2, r3
   205d0:	bne	20620 <_start@@Base+0xc000>
   205d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   205d8:	str	r3, [fp, #-16]
   205dc:	sub	r3, fp, #52	; 0x34
   205e0:	str	r3, [sp]
   205e4:	ldr	r3, [pc, #200]	; 206b4 <_start@@Base+0xc094>
   205e8:	add	r3, pc, r3
   205ec:	ldr	r2, [fp, #-144]	; 0xffffff70
   205f0:	ldr	r1, [fp, #-16]
   205f4:	ldr	r0, [fp, #-136]	; 0xffffff78
   205f8:	bl	17314 <_start@@Base+0x2cf4>
   205fc:	str	r0, [fp, #-140]	; 0xffffff74
   20600:	ldr	r2, [fp, #-140]	; 0xffffff74
   20604:	ldr	r3, [fp, #-16]
   20608:	cmp	r2, r3
   2060c:	beq	21f90 <_start@@Base+0xd970>
   20610:	ldr	r2, [fp, #-140]	; 0xffffff74
   20614:	ldr	r3, [fp, #-144]	; 0xffffff70
   20618:	cmp	r2, r3
   2061c:	beq	21f90 <_start@@Base+0xd970>
   20620:	vldr	s15, [fp, #-52]	; 0xffffffcc
   20624:	vldr	s14, [pc, #124]	; 206a8 <_start@@Base+0xc088>
   20628:	vcmp.f32	s15, s14
   2062c:	vmrs	APSR_nzcv, fpscr
   20630:	bne	20648 <_start@@Base+0xc028>
   20634:	ldr	r3, [fp, #-136]	; 0xffffff78
   20638:	ldr	r3, [r3, #8]
   2063c:	and	r3, r3, #2
   20640:	cmp	r3, #0
   20644:	beq	21d80 <_start@@Base+0xd760>
   20648:	ldr	r3, [fp, #-136]	; 0xffffff78
   2064c:	ldr	r0, [r3]
   20650:	mov	r3, #4
   20654:	mov	r2, #4
   20658:	mov	r1, #26
   2065c:	bl	31fc4 <flatcc_builder_table_add@@Base>
   20660:	str	r0, [fp, #-24]	; 0xffffffe8
   20664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20668:	cmp	r3, #0
   2066c:	beq	21eec <_start@@Base+0xd8cc>
   20670:	vldr	s15, [fp, #-52]	; 0xffffffcc
   20674:	vmov.f32	s0, s15
   20678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2067c:	bl	14a90 <_start@@Base+0x470>
   20680:	b	21d80 <_start@@Base+0xd760>
   20684:	nop			; (mov r0, r0)
   20688:	rsbvs	r6, pc, #108, 30	; 0x1b0
   2068c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20690:	ldrbvs	pc, [pc, #4095]!	; 21697 <_start@@Base+0xd077>	; <UNPREDICTABLE>
   20694:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20698:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   2069c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   206a0:	ldrtvs	r0, [r2], -r0
   206a4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   206a8:	submi	r0, r0, r0
   206ac:	andeq	r3, r4, r0, lsr pc
   206b0:			; <UNDEFINED> instruction: 0xffff0000
   206b4:	muleq	r4, r8, ip
   206b8:	ldr	r2, [fp, #-144]	; 0xffffff70
   206bc:	ldr	r1, [fp, #-140]	; 0xffffff74
   206c0:	ldr	r0, [fp, #-136]	; 0xffffff78
   206c4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   206c8:	str	r0, [fp, #-140]	; 0xffffff74
   206cc:	b	21d80 <_start@@Base+0xd760>
   206d0:	ldrd	r2, [fp, #-12]
   206d4:	mov	r0, #-16777216	; 0xff000000
   206d8:	mvn	r1, #0
   206dc:	and	r2, r2, r0
   206e0:	and	r3, r3, r1
   206e4:	add	r1, pc, #732	; 0x2dc
   206e8:	ldrd	r0, [r1]
   206ec:	cmp	r3, r1
   206f0:	cmpeq	r2, r0
   206f4:	bne	20828 <_start@@Base+0xc208>
   206f8:	ldr	r3, [fp, #-140]	; 0xffffff74
   206fc:	str	r3, [fp, #-16]
   20700:	mov	r3, #5
   20704:	ldr	r2, [fp, #-144]	; 0xffffff70
   20708:	ldr	r1, [fp, #-16]
   2070c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20710:	bl	15568 <_start@@Base+0xf48>
   20714:	str	r0, [fp, #-140]	; 0xffffff74
   20718:	ldr	r2, [fp, #-16]
   2071c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20720:	cmp	r2, r3
   20724:	beq	20810 <_start@@Base+0xc1f0>
   20728:	mov	r3, #0
   2072c:	str	r3, [fp, #-56]	; 0xffffffc8
   20730:	ldr	r3, [fp, #-140]	; 0xffffff74
   20734:	str	r3, [fp, #-16]
   20738:	sub	r3, fp, #56	; 0x38
   2073c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20740:	ldr	r1, [fp, #-16]
   20744:	ldr	r0, [fp, #-136]	; 0xffffff78
   20748:	bl	3c078 <flatcc_json_parser_float@@Base>
   2074c:	str	r0, [fp, #-140]	; 0xffffff74
   20750:	ldr	r2, [fp, #-16]
   20754:	ldr	r3, [fp, #-140]	; 0xffffff74
   20758:	cmp	r2, r3
   2075c:	bne	207ac <_start@@Base+0xc18c>
   20760:	ldr	r3, [fp, #-140]	; 0xffffff74
   20764:	str	r3, [fp, #-16]
   20768:	sub	r3, fp, #56	; 0x38
   2076c:	str	r3, [sp]
   20770:	ldr	r3, [pc, #620]	; 209e4 <_start@@Base+0xc3c4>
   20774:	add	r3, pc, r3
   20778:	ldr	r2, [fp, #-144]	; 0xffffff70
   2077c:	ldr	r1, [fp, #-16]
   20780:	ldr	r0, [fp, #-136]	; 0xffffff78
   20784:	bl	17314 <_start@@Base+0x2cf4>
   20788:	str	r0, [fp, #-140]	; 0xffffff74
   2078c:	ldr	r2, [fp, #-140]	; 0xffffff74
   20790:	ldr	r3, [fp, #-16]
   20794:	cmp	r2, r3
   20798:	beq	21f90 <_start@@Base+0xd970>
   2079c:	ldr	r2, [fp, #-140]	; 0xffffff74
   207a0:	ldr	r3, [fp, #-144]	; 0xffffff70
   207a4:	cmp	r2, r3
   207a8:	beq	21f90 <_start@@Base+0xd970>
   207ac:	vldr	s15, [fp, #-56]	; 0xffffffc8
   207b0:	vldr	s14, [pc, #552]	; 209e0 <_start@@Base+0xc3c0>
   207b4:	vcmp.f32	s15, s14
   207b8:	vmrs	APSR_nzcv, fpscr
   207bc:	bne	207d4 <_start@@Base+0xc1b4>
   207c0:	ldr	r3, [fp, #-136]	; 0xffffff78
   207c4:	ldr	r3, [r3, #8]
   207c8:	and	r3, r3, #2
   207cc:	cmp	r3, #0
   207d0:	beq	21d80 <_start@@Base+0xd760>
   207d4:	ldr	r3, [fp, #-136]	; 0xffffff78
   207d8:	ldr	r0, [r3]
   207dc:	mov	r3, #4
   207e0:	mov	r2, #4
   207e4:	mov	r1, #25
   207e8:	bl	31fc4 <flatcc_builder_table_add@@Base>
   207ec:	str	r0, [fp, #-24]	; 0xffffffe8
   207f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   207f4:	cmp	r3, #0
   207f8:	beq	21ef4 <_start@@Base+0xd8d4>
   207fc:	vldr	s15, [fp, #-56]	; 0xffffffc8
   20800:	vmov.f32	s0, s15
   20804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20808:	bl	14a90 <_start@@Base+0x470>
   2080c:	b	21d80 <_start@@Base+0xd760>
   20810:	ldr	r2, [fp, #-144]	; 0xffffff70
   20814:	ldr	r1, [fp, #-140]	; 0xffffff74
   20818:	ldr	r0, [fp, #-136]	; 0xffffff78
   2081c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20820:	str	r0, [fp, #-140]	; 0xffffff74
   20824:	b	21d80 <_start@@Base+0xd760>
   20828:	ldr	r2, [fp, #-144]	; 0xffffff70
   2082c:	ldr	r1, [fp, #-140]	; 0xffffff74
   20830:	ldr	r0, [fp, #-136]	; 0xffffff78
   20834:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20838:	str	r0, [fp, #-140]	; 0xffffff74
   2083c:	b	21d80 <_start@@Base+0xd760>
   20840:	ldrd	r2, [fp, #-12]
   20844:	add	r1, pc, #388	; 0x184
   20848:	ldrd	r0, [r1]
   2084c:	cmp	r3, r1
   20850:	cmpeq	r2, r0
   20854:	bhi	209f0 <_start@@Base+0xc3d0>
   20858:	ldrd	r2, [fp, #-12]
   2085c:	ldr	r0, [pc, #388]	; 209e8 <_start@@Base+0xc3c8>
   20860:	mvn	r1, #0
   20864:	and	r2, r2, r0
   20868:	and	r3, r3, r1
   2086c:	add	r1, pc, #356	; 0x164
   20870:	ldrd	r0, [r1]
   20874:	cmp	r3, r1
   20878:	cmpeq	r2, r0
   2087c:	bne	209ac <_start@@Base+0xc38c>
   20880:	ldr	r3, [fp, #-140]	; 0xffffff74
   20884:	str	r3, [fp, #-16]
   20888:	mov	r3, #6
   2088c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20890:	ldr	r1, [fp, #-16]
   20894:	ldr	r0, [fp, #-136]	; 0xffffff78
   20898:	bl	15568 <_start@@Base+0xf48>
   2089c:	str	r0, [fp, #-140]	; 0xffffff74
   208a0:	ldr	r2, [fp, #-16]
   208a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   208a8:	cmp	r2, r3
   208ac:	beq	20994 <_start@@Base+0xc374>
   208b0:	mov	r3, #0
   208b4:	str	r3, [fp, #-60]	; 0xffffffc4
   208b8:	ldr	r3, [fp, #-140]	; 0xffffff74
   208bc:	str	r3, [fp, #-16]
   208c0:	sub	r3, fp, #60	; 0x3c
   208c4:	ldr	r2, [fp, #-144]	; 0xffffff70
   208c8:	ldr	r1, [fp, #-16]
   208cc:	ldr	r0, [fp, #-136]	; 0xffffff78
   208d0:	bl	3c078 <flatcc_json_parser_float@@Base>
   208d4:	str	r0, [fp, #-140]	; 0xffffff74
   208d8:	ldr	r2, [fp, #-16]
   208dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   208e0:	cmp	r2, r3
   208e4:	bne	20934 <_start@@Base+0xc314>
   208e8:	ldr	r3, [fp, #-140]	; 0xffffff74
   208ec:	str	r3, [fp, #-16]
   208f0:	sub	r3, fp, #60	; 0x3c
   208f4:	str	r3, [sp]
   208f8:	ldr	r3, [pc, #236]	; 209ec <_start@@Base+0xc3cc>
   208fc:	add	r3, pc, r3
   20900:	ldr	r2, [fp, #-144]	; 0xffffff70
   20904:	ldr	r1, [fp, #-16]
   20908:	ldr	r0, [fp, #-136]	; 0xffffff78
   2090c:	bl	17314 <_start@@Base+0x2cf4>
   20910:	str	r0, [fp, #-140]	; 0xffffff74
   20914:	ldr	r2, [fp, #-140]	; 0xffffff74
   20918:	ldr	r3, [fp, #-16]
   2091c:	cmp	r2, r3
   20920:	beq	21f90 <_start@@Base+0xd970>
   20924:	ldr	r2, [fp, #-140]	; 0xffffff74
   20928:	ldr	r3, [fp, #-144]	; 0xffffff70
   2092c:	cmp	r2, r3
   20930:	beq	21f90 <_start@@Base+0xd970>
   20934:	vldr	s15, [fp, #-60]	; 0xffffffc4
   20938:	vcmp.f32	s15, #0.0
   2093c:	vmrs	APSR_nzcv, fpscr
   20940:	bne	20958 <_start@@Base+0xc338>
   20944:	ldr	r3, [fp, #-136]	; 0xffffff78
   20948:	ldr	r3, [r3, #8]
   2094c:	and	r3, r3, #2
   20950:	cmp	r3, #0
   20954:	beq	21d80 <_start@@Base+0xd760>
   20958:	ldr	r3, [fp, #-136]	; 0xffffff78
   2095c:	ldr	r0, [r3]
   20960:	mov	r3, #4
   20964:	mov	r2, #4
   20968:	mov	r1, #27
   2096c:	bl	31fc4 <flatcc_builder_table_add@@Base>
   20970:	str	r0, [fp, #-24]	; 0xffffffe8
   20974:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20978:	cmp	r3, #0
   2097c:	beq	21efc <_start@@Base+0xd8dc>
   20980:	vldr	s15, [fp, #-60]	; 0xffffffc4
   20984:	vmov.f32	s0, s15
   20988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2098c:	bl	14a90 <_start@@Base+0x470>
   20990:	b	21d80 <_start@@Base+0xd760>
   20994:	ldr	r2, [fp, #-144]	; 0xffffff70
   20998:	ldr	r1, [fp, #-140]	; 0xffffff74
   2099c:	ldr	r0, [fp, #-136]	; 0xffffff78
   209a0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   209a4:	str	r0, [fp, #-140]	; 0xffffff74
   209a8:	b	21d80 <_start@@Base+0xd760>
   209ac:	ldr	r2, [fp, #-144]	; 0xffffff70
   209b0:	ldr	r1, [fp, #-140]	; 0xffffff74
   209b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   209b8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   209bc:	str	r0, [fp, #-140]	; 0xffffff74
   209c0:	b	21d80 <_start@@Base+0xd760>
   209c4:	nop			; (mov r0, r0)
   209c8:	strvs	r0, [r0], -r0
   209cc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   209d0:	stmdavs	r1!, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}^
   209d4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   209d8:	ldrtvs	r0, [r3], -r0
   209dc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   209e0:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   209e4:	andeq	r3, r4, r8, lsl fp
   209e8:			; <UNDEFINED> instruction: 0xffff0000
   209ec:	muleq	r4, ip, r9
   209f0:	ldrd	r2, [fp, #-12]
   209f4:	add	r1, pc, #764	; 0x2fc
   209f8:	ldrd	r0, [r1]
   209fc:	cmp	r3, r1
   20a00:	cmpeq	r2, r0
   20a04:	bne	2158c <_start@@Base+0xcf6c>
   20a08:	ldr	r3, [fp, #-140]	; 0xffffff74
   20a0c:	add	r3, r3, #8
   20a10:	str	r3, [fp, #-140]	; 0xffffff74
   20a14:	ldr	r1, [fp, #-144]	; 0xffffff70
   20a18:	ldr	r0, [fp, #-140]	; 0xffffff74
   20a1c:	bl	14f9c <_start@@Base+0x97c>
   20a20:	strd	r0, [fp, #-12]
   20a24:	ldrd	r2, [fp, #-12]
   20a28:	add	r1, pc, #720	; 0x2d0
   20a2c:	ldrd	r0, [r1]
   20a30:	cmp	r3, r1
   20a34:	cmpeq	r2, r0
   20a38:	bhi	20d18 <_start@@Base+0xc6f8>
   20a3c:	ldrd	r2, [fp, #-12]
   20a40:	add	r1, pc, #704	; 0x2c0
   20a44:	ldrd	r0, [r1]
   20a48:	cmp	r3, r1
   20a4c:	cmpeq	r2, r0
   20a50:	bne	20ce0 <_start@@Base+0xc6c0>
   20a54:	ldr	r3, [fp, #-140]	; 0xffffff74
   20a58:	str	r3, [fp, #-16]
   20a5c:	mov	r3, #8
   20a60:	ldr	r2, [fp, #-144]	; 0xffffff70
   20a64:	ldr	r1, [fp, #-16]
   20a68:	ldr	r0, [fp, #-136]	; 0xffffff78
   20a6c:	bl	15568 <_start@@Base+0xf48>
   20a70:	str	r0, [fp, #-140]	; 0xffffff74
   20a74:	ldr	r2, [fp, #-16]
   20a78:	ldr	r3, [fp, #-140]	; 0xffffff74
   20a7c:	cmp	r2, r3
   20a80:	beq	20b64 <_start@@Base+0xc544>
   20a84:	mov	r3, #0
   20a88:	str	r3, [fp, #-64]	; 0xffffffc0
   20a8c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20a90:	str	r3, [fp, #-16]
   20a94:	sub	r3, fp, #64	; 0x40
   20a98:	ldr	r2, [fp, #-144]	; 0xffffff70
   20a9c:	ldr	r1, [fp, #-16]
   20aa0:	ldr	r0, [fp, #-136]	; 0xffffff78
   20aa4:	bl	161a8 <_start@@Base+0x1b88>
   20aa8:	str	r0, [fp, #-140]	; 0xffffff74
   20aac:	ldr	r2, [fp, #-16]
   20ab0:	ldr	r3, [fp, #-140]	; 0xffffff74
   20ab4:	cmp	r2, r3
   20ab8:	bne	20b08 <_start@@Base+0xc4e8>
   20abc:	ldr	r3, [fp, #-140]	; 0xffffff74
   20ac0:	str	r3, [fp, #-16]
   20ac4:	sub	r3, fp, #64	; 0x40
   20ac8:	str	r3, [sp]
   20acc:	ldr	r3, [pc, #572]	; 20d10 <_start@@Base+0xc6f0>
   20ad0:	add	r3, pc, r3
   20ad4:	ldr	r2, [fp, #-144]	; 0xffffff70
   20ad8:	ldr	r1, [fp, #-16]
   20adc:	ldr	r0, [fp, #-136]	; 0xffffff78
   20ae0:	bl	16ce0 <_start@@Base+0x26c0>
   20ae4:	str	r0, [fp, #-140]	; 0xffffff74
   20ae8:	ldr	r2, [fp, #-140]	; 0xffffff74
   20aec:	ldr	r3, [fp, #-16]
   20af0:	cmp	r2, r3
   20af4:	beq	21f90 <_start@@Base+0xd970>
   20af8:	ldr	r2, [fp, #-140]	; 0xffffff74
   20afc:	ldr	r3, [fp, #-144]	; 0xffffff70
   20b00:	cmp	r2, r3
   20b04:	beq	21f90 <_start@@Base+0xd970>
   20b08:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20b0c:	cmp	r3, #0
   20b10:	bne	20b28 <_start@@Base+0xc508>
   20b14:	ldr	r3, [fp, #-136]	; 0xffffff78
   20b18:	ldr	r3, [r3, #8]
   20b1c:	and	r3, r3, #2
   20b20:	cmp	r3, #0
   20b24:	beq	21d80 <_start@@Base+0xd760>
   20b28:	ldr	r3, [fp, #-136]	; 0xffffff78
   20b2c:	ldr	r0, [r3]
   20b30:	mov	r3, #4
   20b34:	mov	r2, #4
   20b38:	mov	r1, #16
   20b3c:	bl	31fc4 <flatcc_builder_table_add@@Base>
   20b40:	str	r0, [fp, #-24]	; 0xffffffe8
   20b44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20b48:	cmp	r3, #0
   20b4c:	beq	21f04 <_start@@Base+0xd8e4>
   20b50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20b54:	mov	r1, r3
   20b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20b5c:	bl	149c4 <_start@@Base+0x3a4>
   20b60:	b	21d80 <_start@@Base+0xd760>
   20b64:	ldr	r3, [fp, #-140]	; 0xffffff74
   20b68:	add	r3, r3, #8
   20b6c:	str	r3, [fp, #-140]	; 0xffffff74
   20b70:	ldr	r1, [fp, #-144]	; 0xffffff70
   20b74:	ldr	r0, [fp, #-140]	; 0xffffff74
   20b78:	bl	14f9c <_start@@Base+0x97c>
   20b7c:	strd	r0, [fp, #-12]
   20b80:	ldrd	r2, [fp, #-12]
   20b84:	mov	r0, #0
   20b88:	mov	r1, #-16777216	; 0xff000000
   20b8c:	and	r2, r2, r0
   20b90:	and	r3, r3, r1
   20b94:	cmp	r3, #1627389952	; 0x61000000
   20b98:	cmpeq	r2, #0
   20b9c:	bne	20cc8 <_start@@Base+0xc6a8>
   20ba0:	ldr	r3, [fp, #-140]	; 0xffffff74
   20ba4:	str	r3, [fp, #-16]
   20ba8:	mov	r3, #1
   20bac:	ldr	r2, [fp, #-144]	; 0xffffff70
   20bb0:	ldr	r1, [fp, #-16]
   20bb4:	ldr	r0, [fp, #-136]	; 0xffffff78
   20bb8:	bl	15568 <_start@@Base+0xf48>
   20bbc:	str	r0, [fp, #-140]	; 0xffffff74
   20bc0:	ldr	r2, [fp, #-16]
   20bc4:	ldr	r3, [fp, #-140]	; 0xffffff74
   20bc8:	cmp	r2, r3
   20bcc:	beq	20cb0 <_start@@Base+0xc690>
   20bd0:	mov	r3, #0
   20bd4:	str	r3, [fp, #-68]	; 0xffffffbc
   20bd8:	ldr	r3, [fp, #-140]	; 0xffffff74
   20bdc:	str	r3, [fp, #-16]
   20be0:	sub	r3, fp, #68	; 0x44
   20be4:	ldr	r2, [fp, #-144]	; 0xffffff70
   20be8:	ldr	r1, [fp, #-16]
   20bec:	ldr	r0, [fp, #-136]	; 0xffffff78
   20bf0:	bl	161a8 <_start@@Base+0x1b88>
   20bf4:	str	r0, [fp, #-140]	; 0xffffff74
   20bf8:	ldr	r2, [fp, #-16]
   20bfc:	ldr	r3, [fp, #-140]	; 0xffffff74
   20c00:	cmp	r2, r3
   20c04:	bne	20c54 <_start@@Base+0xc634>
   20c08:	ldr	r3, [fp, #-140]	; 0xffffff74
   20c0c:	str	r3, [fp, #-16]
   20c10:	sub	r3, fp, #68	; 0x44
   20c14:	str	r3, [sp]
   20c18:	ldr	r3, [pc, #244]	; 20d14 <_start@@Base+0xc6f4>
   20c1c:	add	r3, pc, r3
   20c20:	ldr	r2, [fp, #-144]	; 0xffffff70
   20c24:	ldr	r1, [fp, #-16]
   20c28:	ldr	r0, [fp, #-136]	; 0xffffff78
   20c2c:	bl	16ce0 <_start@@Base+0x26c0>
   20c30:	str	r0, [fp, #-140]	; 0xffffff74
   20c34:	ldr	r2, [fp, #-140]	; 0xffffff74
   20c38:	ldr	r3, [fp, #-16]
   20c3c:	cmp	r2, r3
   20c40:	beq	21f90 <_start@@Base+0xd970>
   20c44:	ldr	r2, [fp, #-140]	; 0xffffff74
   20c48:	ldr	r3, [fp, #-144]	; 0xffffff70
   20c4c:	cmp	r2, r3
   20c50:	beq	21f90 <_start@@Base+0xd970>
   20c54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20c58:	cmp	r3, #0
   20c5c:	bne	20c74 <_start@@Base+0xc654>
   20c60:	ldr	r3, [fp, #-136]	; 0xffffff78
   20c64:	ldr	r3, [r3, #8]
   20c68:	and	r3, r3, #2
   20c6c:	cmp	r3, #0
   20c70:	beq	21d80 <_start@@Base+0xd760>
   20c74:	ldr	r3, [fp, #-136]	; 0xffffff78
   20c78:	ldr	r0, [r3]
   20c7c:	mov	r3, #4
   20c80:	mov	r2, #4
   20c84:	mov	r1, #20
   20c88:	bl	31fc4 <flatcc_builder_table_add@@Base>
   20c8c:	str	r0, [fp, #-24]	; 0xffffffe8
   20c90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20c94:	cmp	r3, #0
   20c98:	beq	21f0c <_start@@Base+0xd8ec>
   20c9c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20ca0:	mov	r1, r3
   20ca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20ca8:	bl	149c4 <_start@@Base+0x3a4>
   20cac:	b	21d80 <_start@@Base+0xd760>
   20cb0:	ldr	r2, [fp, #-144]	; 0xffffff70
   20cb4:	ldr	r1, [fp, #-140]	; 0xffffff74
   20cb8:	ldr	r0, [fp, #-136]	; 0xffffff78
   20cbc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20cc0:	str	r0, [fp, #-140]	; 0xffffff74
   20cc4:	b	21d80 <_start@@Base+0xd760>
   20cc8:	ldr	r2, [fp, #-144]	; 0xffffff70
   20ccc:	ldr	r1, [fp, #-140]	; 0xffffff74
   20cd0:	ldr	r0, [fp, #-136]	; 0xffffff78
   20cd4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20cd8:	str	r0, [fp, #-140]	; 0xffffff74
   20cdc:	b	21d80 <_start@@Base+0xd760>
   20ce0:	ldr	r2, [fp, #-144]	; 0xffffff70
   20ce4:	ldr	r1, [fp, #-140]	; 0xffffff74
   20ce8:	ldr	r0, [fp, #-136]	; 0xffffff78
   20cec:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20cf0:	str	r0, [fp, #-140]	; 0xffffff74
   20cf4:	b	21d80 <_start@@Base+0xd760>
   20cf8:	stmdavs	r1!, {r3, r5, r6, r8, r9, ip, sp, lr}^
   20cfc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20d00:			; <UNDEFINED> instruction: 0x666e7630
   20d04:	teqvc	r6, #1593835520	; 0x5f000000
   20d08:			; <UNDEFINED> instruction: 0x666e7631
   20d0c:	teqvc	r3, #-268435451	; 0xf0000005
   20d10:	ldrdeq	r3, [r4], -r4
   20d14:	muleq	r4, r4, r6
   20d18:	ldrd	r2, [fp, #-12]
   20d1c:	add	r1, pc, #716	; 0x2cc
   20d20:	ldrd	r0, [r1]
   20d24:	cmp	r3, r1
   20d28:	cmpeq	r2, r0
   20d2c:	bhi	21008 <_start@@Base+0xc9e8>
   20d30:	ldrd	r2, [fp, #-12]
   20d34:	add	r1, pc, #700	; 0x2bc
   20d38:	ldrd	r0, [r1]
   20d3c:	cmp	r3, r1
   20d40:	cmpeq	r2, r0
   20d44:	bne	20fd4 <_start@@Base+0xc9b4>
   20d48:	ldr	r3, [fp, #-140]	; 0xffffff74
   20d4c:	str	r3, [fp, #-16]
   20d50:	mov	r3, #8
   20d54:	ldr	r2, [fp, #-144]	; 0xffffff70
   20d58:	ldr	r1, [fp, #-16]
   20d5c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20d60:	bl	15568 <_start@@Base+0xf48>
   20d64:	str	r0, [fp, #-140]	; 0xffffff74
   20d68:	ldr	r2, [fp, #-16]
   20d6c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20d70:	cmp	r2, r3
   20d74:	beq	20e58 <_start@@Base+0xc838>
   20d78:	mov	r2, #0
   20d7c:	mov	r3, #0
   20d80:	strd	r2, [fp, #-76]	; 0xffffffb4
   20d84:	ldr	r3, [fp, #-140]	; 0xffffff74
   20d88:	str	r3, [fp, #-16]
   20d8c:	sub	r3, fp, #76	; 0x4c
   20d90:	ldr	r2, [fp, #-144]	; 0xffffff70
   20d94:	ldr	r1, [fp, #-16]
   20d98:	ldr	r0, [fp, #-136]	; 0xffffff78
   20d9c:	bl	160d4 <_start@@Base+0x1ab4>
   20da0:	str	r0, [fp, #-140]	; 0xffffff74
   20da4:	ldr	r2, [fp, #-16]
   20da8:	ldr	r3, [fp, #-140]	; 0xffffff74
   20dac:	cmp	r2, r3
   20db0:	bne	20e00 <_start@@Base+0xc7e0>
   20db4:	ldr	r3, [fp, #-140]	; 0xffffff74
   20db8:	str	r3, [fp, #-16]
   20dbc:	sub	r3, fp, #76	; 0x4c
   20dc0:	str	r3, [sp]
   20dc4:	ldr	r3, [pc, #564]	; 21000 <_start@@Base+0xc9e0>
   20dc8:	add	r3, pc, r3
   20dcc:	ldr	r2, [fp, #-144]	; 0xffffff70
   20dd0:	ldr	r1, [fp, #-16]
   20dd4:	ldr	r0, [fp, #-136]	; 0xffffff78
   20dd8:	bl	16b50 <_start@@Base+0x2530>
   20ddc:	str	r0, [fp, #-140]	; 0xffffff74
   20de0:	ldr	r2, [fp, #-140]	; 0xffffff74
   20de4:	ldr	r3, [fp, #-16]
   20de8:	cmp	r2, r3
   20dec:	beq	21f90 <_start@@Base+0xd970>
   20df0:	ldr	r2, [fp, #-140]	; 0xffffff74
   20df4:	ldr	r3, [fp, #-144]	; 0xffffff70
   20df8:	cmp	r2, r3
   20dfc:	beq	21f90 <_start@@Base+0xd970>
   20e00:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   20e04:	orrs	r3, r2, r3
   20e08:	bne	20e20 <_start@@Base+0xc800>
   20e0c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20e10:	ldr	r3, [r3, #8]
   20e14:	and	r3, r3, #2
   20e18:	cmp	r3, #0
   20e1c:	beq	21d80 <_start@@Base+0xd760>
   20e20:	ldr	r3, [fp, #-136]	; 0xffffff78
   20e24:	ldr	r0, [r3]
   20e28:	mov	r3, #8
   20e2c:	mov	r2, #8
   20e30:	mov	r1, #18
   20e34:	bl	31fc4 <flatcc_builder_table_add@@Base>
   20e38:	str	r0, [fp, #-24]	; 0xffffffe8
   20e3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20e40:	cmp	r3, #0
   20e44:	beq	21f14 <_start@@Base+0xd8f4>
   20e48:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   20e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20e50:	bl	14a20 <_start@@Base+0x400>
   20e54:	b	21d80 <_start@@Base+0xd760>
   20e58:	ldr	r3, [fp, #-140]	; 0xffffff74
   20e5c:	add	r3, r3, #8
   20e60:	str	r3, [fp, #-140]	; 0xffffff74
   20e64:	ldr	r1, [fp, #-144]	; 0xffffff70
   20e68:	ldr	r0, [fp, #-140]	; 0xffffff74
   20e6c:	bl	14f9c <_start@@Base+0x97c>
   20e70:	strd	r0, [fp, #-12]
   20e74:	ldrd	r2, [fp, #-12]
   20e78:	mov	r0, #0
   20e7c:	mov	r1, #-16777216	; 0xff000000
   20e80:	and	r2, r2, r0
   20e84:	and	r3, r3, r1
   20e88:	cmp	r3, #1627389952	; 0x61000000
   20e8c:	cmpeq	r2, #0
   20e90:	bne	20fbc <_start@@Base+0xc99c>
   20e94:	ldr	r3, [fp, #-140]	; 0xffffff74
   20e98:	str	r3, [fp, #-16]
   20e9c:	mov	r3, #1
   20ea0:	ldr	r2, [fp, #-144]	; 0xffffff70
   20ea4:	ldr	r1, [fp, #-16]
   20ea8:	ldr	r0, [fp, #-136]	; 0xffffff78
   20eac:	bl	15568 <_start@@Base+0xf48>
   20eb0:	str	r0, [fp, #-140]	; 0xffffff74
   20eb4:	ldr	r2, [fp, #-16]
   20eb8:	ldr	r3, [fp, #-140]	; 0xffffff74
   20ebc:	cmp	r2, r3
   20ec0:	beq	20fa4 <_start@@Base+0xc984>
   20ec4:	mov	r2, #0
   20ec8:	mov	r3, #0
   20ecc:	strd	r2, [fp, #-84]	; 0xffffffac
   20ed0:	ldr	r3, [fp, #-140]	; 0xffffff74
   20ed4:	str	r3, [fp, #-16]
   20ed8:	sub	r3, fp, #84	; 0x54
   20edc:	ldr	r2, [fp, #-144]	; 0xffffff70
   20ee0:	ldr	r1, [fp, #-16]
   20ee4:	ldr	r0, [fp, #-136]	; 0xffffff78
   20ee8:	bl	160d4 <_start@@Base+0x1ab4>
   20eec:	str	r0, [fp, #-140]	; 0xffffff74
   20ef0:	ldr	r2, [fp, #-16]
   20ef4:	ldr	r3, [fp, #-140]	; 0xffffff74
   20ef8:	cmp	r2, r3
   20efc:	bne	20f4c <_start@@Base+0xc92c>
   20f00:	ldr	r3, [fp, #-140]	; 0xffffff74
   20f04:	str	r3, [fp, #-16]
   20f08:	sub	r3, fp, #84	; 0x54
   20f0c:	str	r3, [sp]
   20f10:	ldr	r3, [pc, #236]	; 21004 <_start@@Base+0xc9e4>
   20f14:	add	r3, pc, r3
   20f18:	ldr	r2, [fp, #-144]	; 0xffffff70
   20f1c:	ldr	r1, [fp, #-16]
   20f20:	ldr	r0, [fp, #-136]	; 0xffffff78
   20f24:	bl	16b50 <_start@@Base+0x2530>
   20f28:	str	r0, [fp, #-140]	; 0xffffff74
   20f2c:	ldr	r2, [fp, #-140]	; 0xffffff74
   20f30:	ldr	r3, [fp, #-16]
   20f34:	cmp	r2, r3
   20f38:	beq	21f90 <_start@@Base+0xd970>
   20f3c:	ldr	r2, [fp, #-140]	; 0xffffff74
   20f40:	ldr	r3, [fp, #-144]	; 0xffffff70
   20f44:	cmp	r2, r3
   20f48:	beq	21f90 <_start@@Base+0xd970>
   20f4c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   20f50:	orrs	r3, r2, r3
   20f54:	bne	20f6c <_start@@Base+0xc94c>
   20f58:	ldr	r3, [fp, #-136]	; 0xffffff78
   20f5c:	ldr	r3, [r3, #8]
   20f60:	and	r3, r3, #2
   20f64:	cmp	r3, #0
   20f68:	beq	21d80 <_start@@Base+0xd760>
   20f6c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20f70:	ldr	r0, [r3]
   20f74:	mov	r3, #8
   20f78:	mov	r2, #8
   20f7c:	mov	r1, #22
   20f80:	bl	31fc4 <flatcc_builder_table_add@@Base>
   20f84:	str	r0, [fp, #-24]	; 0xffffffe8
   20f88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20f8c:	cmp	r3, #0
   20f90:	beq	21f1c <_start@@Base+0xd8fc>
   20f94:	ldrd	r2, [fp, #-84]	; 0xffffffac
   20f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20f9c:	bl	14a20 <_start@@Base+0x400>
   20fa0:	b	21d80 <_start@@Base+0xd760>
   20fa4:	ldr	r2, [fp, #-144]	; 0xffffff70
   20fa8:	ldr	r1, [fp, #-140]	; 0xffffff74
   20fac:	ldr	r0, [fp, #-136]	; 0xffffff78
   20fb0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20fb4:	str	r0, [fp, #-140]	; 0xffffff74
   20fb8:	b	21d80 <_start@@Base+0xd760>
   20fbc:	ldr	r2, [fp, #-144]	; 0xffffff70
   20fc0:	ldr	r1, [fp, #-140]	; 0xffffff74
   20fc4:	ldr	r0, [fp, #-136]	; 0xffffff78
   20fc8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20fcc:	str	r0, [fp, #-140]	; 0xffffff74
   20fd0:	b	21d80 <_start@@Base+0xd760>
   20fd4:	ldr	r2, [fp, #-144]	; 0xffffff70
   20fd8:	ldr	r1, [fp, #-140]	; 0xffffff74
   20fdc:	ldr	r0, [fp, #-136]	; 0xffffff78
   20fe0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   20fe4:	str	r0, [fp, #-140]	; 0xffffff74
   20fe8:	b	21d80 <_start@@Base+0xd760>
   20fec:	nop			; (mov r0, r0)
   20ff0:			; <UNDEFINED> instruction: 0x666e7630
   20ff4:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   20ff8:			; <UNDEFINED> instruction: 0x666e7631
   20ffc:	teqvc	r6, #1593835520	; 0x5f000000
   21000:	strdeq	r3, [r4], -r4
   21004:			; <UNDEFINED> instruction: 0x000433b4
   21008:	ldrd	r2, [fp, #-12]
   2100c:	add	r1, pc, #964	; 0x3c4
   21010:	ldrd	r0, [r1]
   21014:	cmp	r3, r1
   21018:	cmpeq	r2, r0
   2101c:	bne	212ac <_start@@Base+0xcc8c>
   21020:	ldr	r3, [fp, #-140]	; 0xffffff74
   21024:	str	r3, [fp, #-16]
   21028:	mov	r3, #8
   2102c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21030:	ldr	r1, [fp, #-16]
   21034:	ldr	r0, [fp, #-136]	; 0xffffff78
   21038:	bl	15568 <_start@@Base+0xf48>
   2103c:	str	r0, [fp, #-140]	; 0xffffff74
   21040:	ldr	r2, [fp, #-16]
   21044:	ldr	r3, [fp, #-140]	; 0xffffff74
   21048:	cmp	r2, r3
   2104c:	beq	21130 <_start@@Base+0xcb10>
   21050:	mov	r3, #0
   21054:	str	r3, [fp, #-88]	; 0xffffffa8
   21058:	ldr	r3, [fp, #-140]	; 0xffffff74
   2105c:	str	r3, [fp, #-16]
   21060:	sub	r3, fp, #88	; 0x58
   21064:	ldr	r2, [fp, #-144]	; 0xffffff70
   21068:	ldr	r1, [fp, #-16]
   2106c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21070:	bl	15e64 <_start@@Base+0x1844>
   21074:	str	r0, [fp, #-140]	; 0xffffff74
   21078:	ldr	r2, [fp, #-16]
   2107c:	ldr	r3, [fp, #-140]	; 0xffffff74
   21080:	cmp	r2, r3
   21084:	bne	210d4 <_start@@Base+0xcab4>
   21088:	ldr	r3, [fp, #-140]	; 0xffffff74
   2108c:	str	r3, [fp, #-16]
   21090:	sub	r3, fp, #88	; 0x58
   21094:	str	r3, [sp]
   21098:	ldr	r3, [pc, #840]	; 213e8 <_start@@Base+0xcdc8>
   2109c:	add	r3, pc, r3
   210a0:	ldr	r2, [fp, #-144]	; 0xffffff70
   210a4:	ldr	r1, [fp, #-16]
   210a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   210ac:	bl	166bc <_start@@Base+0x209c>
   210b0:	str	r0, [fp, #-140]	; 0xffffff74
   210b4:	ldr	r2, [fp, #-140]	; 0xffffff74
   210b8:	ldr	r3, [fp, #-16]
   210bc:	cmp	r2, r3
   210c0:	beq	21f90 <_start@@Base+0xd970>
   210c4:	ldr	r2, [fp, #-140]	; 0xffffff74
   210c8:	ldr	r3, [fp, #-144]	; 0xffffff70
   210cc:	cmp	r2, r3
   210d0:	beq	21f90 <_start@@Base+0xd970>
   210d4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   210d8:	cmp	r3, #0
   210dc:	bne	210f4 <_start@@Base+0xcad4>
   210e0:	ldr	r3, [fp, #-136]	; 0xffffff78
   210e4:	ldr	r3, [r3, #8]
   210e8:	and	r3, r3, #2
   210ec:	cmp	r3, #0
   210f0:	beq	21d80 <_start@@Base+0xd760>
   210f4:	ldr	r3, [fp, #-136]	; 0xffffff78
   210f8:	ldr	r0, [r3]
   210fc:	mov	r3, #4
   21100:	mov	r2, #4
   21104:	mov	r1, #17
   21108:	bl	31fc4 <flatcc_builder_table_add@@Base>
   2110c:	str	r0, [fp, #-24]	; 0xffffffe8
   21110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21114:	cmp	r3, #0
   21118:	beq	21f24 <_start@@Base+0xd904>
   2111c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   21120:	mov	r1, r3
   21124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21128:	bl	1483c <_start@@Base+0x21c>
   2112c:	b	21d80 <_start@@Base+0xd760>
   21130:	ldr	r3, [fp, #-140]	; 0xffffff74
   21134:	add	r3, r3, #8
   21138:	str	r3, [fp, #-140]	; 0xffffff74
   2113c:	ldr	r1, [fp, #-144]	; 0xffffff70
   21140:	ldr	r0, [fp, #-140]	; 0xffffff74
   21144:	bl	14f9c <_start@@Base+0x97c>
   21148:	strd	r0, [fp, #-12]
   2114c:	ldrd	r2, [fp, #-12]
   21150:	mov	r0, #0
   21154:	mov	r1, #-16777216	; 0xff000000
   21158:	and	r2, r2, r0
   2115c:	and	r3, r3, r1
   21160:	cmp	r3, #1627389952	; 0x61000000
   21164:	cmpeq	r2, #0
   21168:	bne	21294 <_start@@Base+0xcc74>
   2116c:	ldr	r3, [fp, #-140]	; 0xffffff74
   21170:	str	r3, [fp, #-16]
   21174:	mov	r3, #1
   21178:	ldr	r2, [fp, #-144]	; 0xffffff70
   2117c:	ldr	r1, [fp, #-16]
   21180:	ldr	r0, [fp, #-136]	; 0xffffff78
   21184:	bl	15568 <_start@@Base+0xf48>
   21188:	str	r0, [fp, #-140]	; 0xffffff74
   2118c:	ldr	r2, [fp, #-16]
   21190:	ldr	r3, [fp, #-140]	; 0xffffff74
   21194:	cmp	r2, r3
   21198:	beq	2127c <_start@@Base+0xcc5c>
   2119c:	mov	r3, #0
   211a0:	str	r3, [fp, #-92]	; 0xffffffa4
   211a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   211a8:	str	r3, [fp, #-16]
   211ac:	sub	r3, fp, #92	; 0x5c
   211b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   211b4:	ldr	r1, [fp, #-16]
   211b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   211bc:	bl	15e64 <_start@@Base+0x1844>
   211c0:	str	r0, [fp, #-140]	; 0xffffff74
   211c4:	ldr	r2, [fp, #-16]
   211c8:	ldr	r3, [fp, #-140]	; 0xffffff74
   211cc:	cmp	r2, r3
   211d0:	bne	21220 <_start@@Base+0xcc00>
   211d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   211d8:	str	r3, [fp, #-16]
   211dc:	sub	r3, fp, #92	; 0x5c
   211e0:	str	r3, [sp]
   211e4:	ldr	r3, [pc, #512]	; 213ec <_start@@Base+0xcdcc>
   211e8:	add	r3, pc, r3
   211ec:	ldr	r2, [fp, #-144]	; 0xffffff70
   211f0:	ldr	r1, [fp, #-16]
   211f4:	ldr	r0, [fp, #-136]	; 0xffffff78
   211f8:	bl	166bc <_start@@Base+0x209c>
   211fc:	str	r0, [fp, #-140]	; 0xffffff74
   21200:	ldr	r2, [fp, #-140]	; 0xffffff74
   21204:	ldr	r3, [fp, #-16]
   21208:	cmp	r2, r3
   2120c:	beq	21f90 <_start@@Base+0xd970>
   21210:	ldr	r2, [fp, #-140]	; 0xffffff74
   21214:	ldr	r3, [fp, #-144]	; 0xffffff70
   21218:	cmp	r2, r3
   2121c:	beq	21f90 <_start@@Base+0xd970>
   21220:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21224:	cmp	r3, #0
   21228:	bne	21240 <_start@@Base+0xcc20>
   2122c:	ldr	r3, [fp, #-136]	; 0xffffff78
   21230:	ldr	r3, [r3, #8]
   21234:	and	r3, r3, #2
   21238:	cmp	r3, #0
   2123c:	beq	21d80 <_start@@Base+0xd760>
   21240:	ldr	r3, [fp, #-136]	; 0xffffff78
   21244:	ldr	r0, [r3]
   21248:	mov	r3, #4
   2124c:	mov	r2, #4
   21250:	mov	r1, #21
   21254:	bl	31fc4 <flatcc_builder_table_add@@Base>
   21258:	str	r0, [fp, #-24]	; 0xffffffe8
   2125c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21260:	cmp	r3, #0
   21264:	beq	21f2c <_start@@Base+0xd90c>
   21268:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2126c:	mov	r1, r3
   21270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21274:	bl	1483c <_start@@Base+0x21c>
   21278:	b	21d80 <_start@@Base+0xd760>
   2127c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21280:	ldr	r1, [fp, #-140]	; 0xffffff74
   21284:	ldr	r0, [fp, #-136]	; 0xffffff78
   21288:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2128c:	str	r0, [fp, #-140]	; 0xffffff74
   21290:	b	21d80 <_start@@Base+0xd760>
   21294:	ldr	r2, [fp, #-144]	; 0xffffff70
   21298:	ldr	r1, [fp, #-140]	; 0xffffff74
   2129c:	ldr	r0, [fp, #-136]	; 0xffffff78
   212a0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   212a4:	str	r0, [fp, #-140]	; 0xffffff74
   212a8:	b	21d80 <_start@@Base+0xd760>
   212ac:	ldrd	r2, [fp, #-12]
   212b0:	add	r1, pc, #296	; 0x128
   212b4:	ldrd	r0, [r1]
   212b8:	cmp	r3, r1
   212bc:	cmpeq	r2, r0
   212c0:	bne	21574 <_start@@Base+0xcf54>
   212c4:	ldr	r3, [fp, #-140]	; 0xffffff74
   212c8:	str	r3, [fp, #-16]
   212cc:	mov	r3, #8
   212d0:	ldr	r2, [fp, #-144]	; 0xffffff70
   212d4:	ldr	r1, [fp, #-16]
   212d8:	ldr	r0, [fp, #-136]	; 0xffffff78
   212dc:	bl	15568 <_start@@Base+0xf48>
   212e0:	str	r0, [fp, #-140]	; 0xffffff74
   212e4:	ldr	r2, [fp, #-16]
   212e8:	ldr	r3, [fp, #-140]	; 0xffffff74
   212ec:	cmp	r2, r3
   212f0:	beq	213f8 <_start@@Base+0xcdd8>
   212f4:	mov	r2, #0
   212f8:	mov	r3, #0
   212fc:	strd	r2, [fp, #-100]	; 0xffffff9c
   21300:	ldr	r3, [fp, #-140]	; 0xffffff74
   21304:	str	r3, [fp, #-16]
   21308:	sub	r3, fp, #100	; 0x64
   2130c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21310:	ldr	r1, [fp, #-16]
   21314:	ldr	r0, [fp, #-136]	; 0xffffff78
   21318:	bl	15d90 <_start@@Base+0x1770>
   2131c:	str	r0, [fp, #-140]	; 0xffffff74
   21320:	ldr	r2, [fp, #-16]
   21324:	ldr	r3, [fp, #-140]	; 0xffffff74
   21328:	cmp	r2, r3
   2132c:	bne	2137c <_start@@Base+0xcd5c>
   21330:	ldr	r3, [fp, #-140]	; 0xffffff74
   21334:	str	r3, [fp, #-16]
   21338:	sub	r3, fp, #100	; 0x64
   2133c:	str	r3, [sp]
   21340:	ldr	r3, [pc, #168]	; 213f0 <_start@@Base+0xcdd0>
   21344:	add	r3, pc, r3
   21348:	ldr	r2, [fp, #-144]	; 0xffffff70
   2134c:	ldr	r1, [fp, #-16]
   21350:	ldr	r0, [fp, #-136]	; 0xffffff78
   21354:	bl	1652c <_start@@Base+0x1f0c>
   21358:	str	r0, [fp, #-140]	; 0xffffff74
   2135c:	ldr	r2, [fp, #-140]	; 0xffffff74
   21360:	ldr	r3, [fp, #-16]
   21364:	cmp	r2, r3
   21368:	beq	21f90 <_start@@Base+0xd970>
   2136c:	ldr	r2, [fp, #-140]	; 0xffffff74
   21370:	ldr	r3, [fp, #-144]	; 0xffffff70
   21374:	cmp	r2, r3
   21378:	beq	21f90 <_start@@Base+0xd970>
   2137c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   21380:	orrs	r3, r2, r3
   21384:	bne	2139c <_start@@Base+0xcd7c>
   21388:	ldr	r3, [fp, #-136]	; 0xffffff78
   2138c:	ldr	r3, [r3, #8]
   21390:	and	r3, r3, #2
   21394:	cmp	r3, #0
   21398:	beq	21d80 <_start@@Base+0xd760>
   2139c:	ldr	r3, [fp, #-136]	; 0xffffff78
   213a0:	ldr	r0, [r3]
   213a4:	mov	r3, #8
   213a8:	mov	r2, #8
   213ac:	mov	r1, #19
   213b0:	bl	31fc4 <flatcc_builder_table_add@@Base>
   213b4:	str	r0, [fp, #-24]	; 0xffffffe8
   213b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   213bc:	cmp	r3, #0
   213c0:	beq	21f34 <_start@@Base+0xd914>
   213c4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   213c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   213cc:	bl	14898 <_start@@Base+0x278>
   213d0:	b	21d80 <_start@@Base+0xd760>
   213d4:	nop			; (mov r0, r0)
   213d8:			; <UNDEFINED> instruction: 0x666e7631
   213dc:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   213e0:			; <UNDEFINED> instruction: 0x666e7631
   213e4:	ldrvc	r3, [r6, #-1119]!	; 0xfffffba1
   213e8:	andeq	r3, r4, r8, lsr r2
   213ec:	strdeq	r3, [r4], -r8
   213f0:	andeq	r2, r4, r8, lsr #31
   213f4:	andeq	r2, r4, r4, asr #28
   213f8:	ldr	r3, [fp, #-140]	; 0xffffff74
   213fc:	add	r3, r3, #8
   21400:	str	r3, [fp, #-140]	; 0xffffff74
   21404:	ldr	r1, [fp, #-144]	; 0xffffff70
   21408:	ldr	r0, [fp, #-140]	; 0xffffff74
   2140c:	bl	14f9c <_start@@Base+0x97c>
   21410:	strd	r0, [fp, #-12]
   21414:	ldrd	r2, [fp, #-12]
   21418:	mov	r0, #0
   2141c:	mov	r1, #-16777216	; 0xff000000
   21420:	and	r2, r2, r0
   21424:	and	r3, r3, r1
   21428:	cmp	r3, #1627389952	; 0x61000000
   2142c:	cmpeq	r2, #0
   21430:	bne	2155c <_start@@Base+0xcf3c>
   21434:	ldr	r3, [fp, #-140]	; 0xffffff74
   21438:	str	r3, [fp, #-16]
   2143c:	mov	r3, #1
   21440:	ldr	r2, [fp, #-144]	; 0xffffff70
   21444:	ldr	r1, [fp, #-16]
   21448:	ldr	r0, [fp, #-136]	; 0xffffff78
   2144c:	bl	15568 <_start@@Base+0xf48>
   21450:	str	r0, [fp, #-140]	; 0xffffff74
   21454:	ldr	r2, [fp, #-16]
   21458:	ldr	r3, [fp, #-140]	; 0xffffff74
   2145c:	cmp	r2, r3
   21460:	beq	21544 <_start@@Base+0xcf24>
   21464:	mov	r2, #0
   21468:	mov	r3, #0
   2146c:	strd	r2, [fp, #-108]	; 0xffffff94
   21470:	ldr	r3, [fp, #-140]	; 0xffffff74
   21474:	str	r3, [fp, #-16]
   21478:	sub	r3, fp, #108	; 0x6c
   2147c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21480:	ldr	r1, [fp, #-16]
   21484:	ldr	r0, [fp, #-136]	; 0xffffff78
   21488:	bl	15d90 <_start@@Base+0x1770>
   2148c:	str	r0, [fp, #-140]	; 0xffffff74
   21490:	ldr	r2, [fp, #-16]
   21494:	ldr	r3, [fp, #-140]	; 0xffffff74
   21498:	cmp	r2, r3
   2149c:	bne	214ec <_start@@Base+0xcecc>
   214a0:	ldr	r3, [fp, #-140]	; 0xffffff74
   214a4:	str	r3, [fp, #-16]
   214a8:	sub	r3, fp, #108	; 0x6c
   214ac:	str	r3, [sp]
   214b0:	ldr	r3, [pc, #-196]	; 213f4 <_start@@Base+0xcdd4>
   214b4:	add	r3, pc, r3
   214b8:	ldr	r2, [fp, #-144]	; 0xffffff70
   214bc:	ldr	r1, [fp, #-16]
   214c0:	ldr	r0, [fp, #-136]	; 0xffffff78
   214c4:	bl	1652c <_start@@Base+0x1f0c>
   214c8:	str	r0, [fp, #-140]	; 0xffffff74
   214cc:	ldr	r2, [fp, #-140]	; 0xffffff74
   214d0:	ldr	r3, [fp, #-16]
   214d4:	cmp	r2, r3
   214d8:	beq	21f90 <_start@@Base+0xd970>
   214dc:	ldr	r2, [fp, #-140]	; 0xffffff74
   214e0:	ldr	r3, [fp, #-144]	; 0xffffff70
   214e4:	cmp	r2, r3
   214e8:	beq	21f90 <_start@@Base+0xd970>
   214ec:	ldrd	r2, [fp, #-108]	; 0xffffff94
   214f0:	orrs	r3, r2, r3
   214f4:	bne	2150c <_start@@Base+0xceec>
   214f8:	ldr	r3, [fp, #-136]	; 0xffffff78
   214fc:	ldr	r3, [r3, #8]
   21500:	and	r3, r3, #2
   21504:	cmp	r3, #0
   21508:	beq	21d80 <_start@@Base+0xd760>
   2150c:	ldr	r3, [fp, #-136]	; 0xffffff78
   21510:	ldr	r0, [r3]
   21514:	mov	r3, #8
   21518:	mov	r2, #8
   2151c:	mov	r1, #23
   21520:	bl	31fc4 <flatcc_builder_table_add@@Base>
   21524:	str	r0, [fp, #-24]	; 0xffffffe8
   21528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2152c:	cmp	r3, #0
   21530:	beq	21f3c <_start@@Base+0xd91c>
   21534:	ldrd	r2, [fp, #-108]	; 0xffffff94
   21538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2153c:	bl	14898 <_start@@Base+0x278>
   21540:	b	21d80 <_start@@Base+0xd760>
   21544:	ldr	r2, [fp, #-144]	; 0xffffff70
   21548:	ldr	r1, [fp, #-140]	; 0xffffff74
   2154c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21550:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   21554:	str	r0, [fp, #-140]	; 0xffffff74
   21558:	b	21d80 <_start@@Base+0xd760>
   2155c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21560:	ldr	r1, [fp, #-140]	; 0xffffff74
   21564:	ldr	r0, [fp, #-136]	; 0xffffff78
   21568:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2156c:	str	r0, [fp, #-140]	; 0xffffff74
   21570:	b	21d80 <_start@@Base+0xd760>
   21574:	ldr	r2, [fp, #-144]	; 0xffffff70
   21578:	ldr	r1, [fp, #-140]	; 0xffffff74
   2157c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21580:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   21584:	str	r0, [fp, #-140]	; 0xffffff74
   21588:	b	21d80 <_start@@Base+0xd760>
   2158c:	ldrd	r2, [fp, #-12]
   21590:	add	r1, pc, #816	; 0x330
   21594:	ldrd	r0, [r1]
   21598:	cmp	r3, r1
   2159c:	cmpeq	r2, r0
   215a0:	bhi	218ec <_start@@Base+0xd2cc>
   215a4:	ldrd	r2, [fp, #-12]
   215a8:	add	r1, pc, #800	; 0x320
   215ac:	ldrd	r0, [r1]
   215b0:	cmp	r3, r1
   215b4:	cmpeq	r2, r0
   215b8:	bne	218ac <_start@@Base+0xd28c>
   215bc:	ldr	r3, [fp, #-140]	; 0xffffff74
   215c0:	add	r3, r3, #8
   215c4:	str	r3, [fp, #-140]	; 0xffffff74
   215c8:	ldr	r1, [fp, #-144]	; 0xffffff70
   215cc:	ldr	r0, [fp, #-140]	; 0xffffff74
   215d0:	bl	14f9c <_start@@Base+0x97c>
   215d4:	strd	r0, [fp, #-12]
   215d8:	ldrd	r2, [fp, #-12]
   215dc:	add	r1, pc, #756	; 0x2f4
   215e0:	ldrd	r0, [r1]
   215e4:	cmp	r3, r1
   215e8:	cmpeq	r2, r0
   215ec:	bne	21894 <_start@@Base+0xd274>
   215f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   215f4:	add	r3, r3, #8
   215f8:	str	r3, [fp, #-140]	; 0xffffff74
   215fc:	ldr	r1, [fp, #-144]	; 0xffffff70
   21600:	ldr	r0, [fp, #-140]	; 0xffffff74
   21604:	bl	14f9c <_start@@Base+0x97c>
   21608:	strd	r0, [fp, #-12]
   2160c:	ldrd	r2, [fp, #-12]
   21610:	mov	r0, #0
   21614:	mvn	r1, #0
   21618:	and	r2, r2, r0
   2161c:	and	r3, r3, r1
   21620:	add	r1, pc, #696	; 0x2b8
   21624:	ldrd	r0, [r1]
   21628:	cmp	r3, r1
   2162c:	cmpeq	r2, r0
   21630:	bne	2187c <_start@@Base+0xd25c>
   21634:	ldr	r3, [fp, #-140]	; 0xffffff74
   21638:	str	r3, [fp, #-16]
   2163c:	mov	r3, #4
   21640:	ldr	r2, [fp, #-144]	; 0xffffff70
   21644:	ldr	r1, [fp, #-16]
   21648:	ldr	r0, [fp, #-136]	; 0xffffff78
   2164c:	bl	15568 <_start@@Base+0xf48>
   21650:	str	r0, [fp, #-140]	; 0xffffff74
   21654:	ldr	r2, [fp, #-16]
   21658:	ldr	r3, [fp, #-140]	; 0xffffff74
   2165c:	cmp	r2, r3
   21660:	beq	21864 <_start@@Base+0xd244>
   21664:	ldr	r2, [fp, #-140]	; 0xffffff74
   21668:	ldr	r3, [fp, #-144]	; 0xffffff70
   2166c:	cmp	r2, r3
   21670:	beq	217bc <_start@@Base+0xd19c>
   21674:	ldr	r3, [fp, #-140]	; 0xffffff74
   21678:	ldrb	r3, [r3]
   2167c:	cmp	r3, #91	; 0x5b
   21680:	bne	217bc <_start@@Base+0xd19c>
   21684:	ldr	r3, [fp, #-136]	; 0xffffff78
   21688:	ldr	r0, [r3]
   2168c:	mvn	r3, #0
   21690:	mov	r2, #1
   21694:	mov	r1, #1
   21698:	bl	2f838 <flatcc_builder_start_vector@@Base>
   2169c:	mov	r3, r0
   216a0:	cmp	r3, #0
   216a4:	bne	21f44 <_start@@Base+0xd924>
   216a8:	sub	r3, fp, #28
   216ac:	ldr	r2, [fp, #-144]	; 0xffffff70
   216b0:	ldr	r1, [fp, #-140]	; 0xffffff74
   216b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   216b8:	bl	15318 <_start@@Base+0xcf8>
   216bc:	str	r0, [fp, #-140]	; 0xffffff74
   216c0:	b	21794 <_start@@Base+0xd174>
   216c4:	mov	r3, #0
   216c8:	strb	r3, [fp, #-109]	; 0xffffff93
   216cc:	ldr	r3, [fp, #-136]	; 0xffffff78
   216d0:	ldr	r3, [r3]
   216d4:	mov	r1, #1
   216d8:	mov	r0, r3
   216dc:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   216e0:	str	r0, [fp, #-24]	; 0xffffffe8
   216e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   216e8:	cmp	r3, #0
   216ec:	beq	21f4c <_start@@Base+0xd92c>
   216f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   216f4:	str	r3, [fp, #-16]
   216f8:	sub	r3, fp, #109	; 0x6d
   216fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   21700:	ldr	r1, [fp, #-16]
   21704:	ldr	r0, [fp, #-136]	; 0xffffff78
   21708:	bl	16004 <_start@@Base+0x19e4>
   2170c:	str	r0, [fp, #-140]	; 0xffffff74
   21710:	ldr	r2, [fp, #-16]
   21714:	ldr	r3, [fp, #-140]	; 0xffffff74
   21718:	cmp	r2, r3
   2171c:	bne	2176c <_start@@Base+0xd14c>
   21720:	ldr	r3, [fp, #-140]	; 0xffffff74
   21724:	str	r3, [fp, #-16]
   21728:	sub	r3, fp, #109	; 0x6d
   2172c:	str	r3, [sp]
   21730:	ldr	r3, [pc, #432]	; 218e8 <_start@@Base+0xd2c8>
   21734:	add	r3, pc, r3
   21738:	ldr	r2, [fp, #-144]	; 0xffffff70
   2173c:	ldr	r1, [fp, #-16]
   21740:	ldr	r0, [fp, #-136]	; 0xffffff78
   21744:	bl	169c8 <_start@@Base+0x23a8>
   21748:	str	r0, [fp, #-140]	; 0xffffff74
   2174c:	ldr	r2, [fp, #-140]	; 0xffffff74
   21750:	ldr	r3, [fp, #-16]
   21754:	cmp	r2, r3
   21758:	beq	21f4c <_start@@Base+0xd92c>
   2175c:	ldr	r2, [fp, #-140]	; 0xffffff74
   21760:	ldr	r3, [fp, #-144]	; 0xffffff70
   21764:	cmp	r2, r3
   21768:	beq	21f4c <_start@@Base+0xd92c>
   2176c:	ldrb	r3, [fp, #-109]	; 0xffffff93
   21770:	mov	r1, r3
   21774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21778:	bl	14770 <_start@@Base+0x150>
   2177c:	sub	r3, fp, #28
   21780:	ldr	r2, [fp, #-144]	; 0xffffff70
   21784:	ldr	r1, [fp, #-140]	; 0xffffff74
   21788:	ldr	r0, [fp, #-136]	; 0xffffff78
   2178c:	bl	15400 <_start@@Base+0xde0>
   21790:	str	r0, [fp, #-140]	; 0xffffff74
   21794:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21798:	cmp	r3, #0
   2179c:	bne	216c4 <_start@@Base+0xd0a4>
   217a0:	ldr	r3, [fp, #-136]	; 0xffffff78
   217a4:	ldr	r3, [r3]
   217a8:	mov	r0, r3
   217ac:	bl	30a90 <flatcc_builder_end_vector@@Base>
   217b0:	mov	r3, r0
   217b4:	str	r3, [fp, #-32]	; 0xffffffe0
   217b8:	b	21824 <_start@@Base+0xd204>
   217bc:	ldr	r3, [fp, #-136]	; 0xffffff78
   217c0:	ldr	r0, [r3]
   217c4:	mov	r3, #0
   217c8:	mov	r2, #0
   217cc:	mov	r1, #0
   217d0:	bl	2ea8c <flatcc_builder_start_buffer@@Base>
   217d4:	mov	r3, r0
   217d8:	cmp	r3, #0
   217dc:	bne	21f54 <_start@@Base+0xd934>
   217e0:	sub	r3, fp, #32
   217e4:	ldr	r2, [fp, #-144]	; 0xffffff70
   217e8:	ldr	r1, [fp, #-140]	; 0xffffff74
   217ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   217f0:	bl	1e564 <_start@@Base+0x9f44>
   217f4:	str	r0, [fp, #-140]	; 0xffffff74
   217f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   217fc:	cmp	r3, #0
   21800:	beq	21f5c <_start@@Base+0xd93c>
   21804:	ldr	r3, [fp, #-136]	; 0xffffff78
   21808:	ldr	r3, [r3]
   2180c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21810:	mov	r1, r2
   21814:	mov	r0, r3
   21818:	bl	2ebe4 <flatcc_builder_end_buffer@@Base>
   2181c:	mov	r3, r0
   21820:	str	r3, [fp, #-32]	; 0xffffffe0
   21824:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21828:	cmp	r3, #0
   2182c:	beq	21f90 <_start@@Base+0xd970>
   21830:	ldr	r3, [fp, #-136]	; 0xffffff78
   21834:	ldr	r3, [r3]
   21838:	mov	r1, #13
   2183c:	mov	r0, r3
   21840:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   21844:	str	r0, [fp, #-20]	; 0xffffffec
   21848:	ldr	r3, [fp, #-20]	; 0xffffffec
   2184c:	cmp	r3, #0
   21850:	beq	21f90 <_start@@Base+0xd970>
   21854:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21858:	ldr	r3, [fp, #-20]	; 0xffffffec
   2185c:	str	r2, [r3]
   21860:	b	21d80 <_start@@Base+0xd760>
   21864:	ldr	r2, [fp, #-144]	; 0xffffff70
   21868:	ldr	r1, [fp, #-140]	; 0xffffff74
   2186c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21870:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   21874:	str	r0, [fp, #-140]	; 0xffffff74
   21878:	b	21d80 <_start@@Base+0xd760>
   2187c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21880:	ldr	r1, [fp, #-140]	; 0xffffff74
   21884:	ldr	r0, [fp, #-136]	; 0xffffff78
   21888:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2188c:	str	r0, [fp, #-140]	; 0xffffff74
   21890:	b	21d80 <_start@@Base+0xd760>
   21894:	ldr	r2, [fp, #-144]	; 0xffffff70
   21898:	ldr	r1, [fp, #-140]	; 0xffffff74
   2189c:	ldr	r0, [fp, #-136]	; 0xffffff78
   218a0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   218a4:	str	r0, [fp, #-140]	; 0xffffff74
   218a8:	b	21d80 <_start@@Base+0xd760>
   218ac:	ldr	r2, [fp, #-144]	; 0xffffff70
   218b0:	ldr	r1, [fp, #-140]	; 0xffffff74
   218b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   218b8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   218bc:	str	r0, [fp, #-140]	; 0xffffff74
   218c0:	b	21d80 <_start@@Base+0xd760>
   218c4:	nop			; (mov r0, r0)
   218c8:	svcvs	0x00725f6e
   218cc:			; <UNDEFINED> instruction: 0x76656374
   218d0:	mcrvs	3, 3, r7, cr5, cr4, {3}
   218d4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   218d8:	cmnvs	r4, r5, ror r2
   218dc:	strbvs	r6, [r4, #-1644]!	; 0xfffff994
   218e0:	andeq	r0, r0, r0
   218e4:			; <UNDEFINED> instruction: 0x66666572
   218e8:	ldrdeq	r2, [r4], -r0
   218ec:	ldrd	r2, [fp, #-12]
   218f0:	add	r1, pc, #752	; 0x2f0
   218f4:	ldrd	r0, [r1]
   218f8:	cmp	r3, r1
   218fc:	cmpeq	r2, r0
   21900:	bne	21d6c <_start@@Base+0xd74c>
   21904:	ldr	r3, [fp, #-140]	; 0xffffff74
   21908:	add	r3, r3, #8
   2190c:	str	r3, [fp, #-140]	; 0xffffff74
   21910:	ldr	r1, [fp, #-144]	; 0xffffff70
   21914:	ldr	r0, [fp, #-140]	; 0xffffff74
   21918:	bl	14f9c <_start@@Base+0x97c>
   2191c:	strd	r0, [fp, #-12]
   21920:	ldrd	r2, [fp, #-12]
   21924:	add	r1, pc, #708	; 0x2c4
   21928:	ldrd	r0, [r1]
   2192c:	cmp	r3, r1
   21930:	cmpeq	r2, r0
   21934:	bne	21b4c <_start@@Base+0xd52c>
   21938:	ldr	r3, [fp, #-140]	; 0xffffff74
   2193c:	add	r3, r3, #8
   21940:	str	r3, [fp, #-140]	; 0xffffff74
   21944:	ldr	r1, [fp, #-144]	; 0xffffff70
   21948:	ldr	r0, [fp, #-140]	; 0xffffff74
   2194c:	bl	14f9c <_start@@Base+0x97c>
   21950:	strd	r0, [fp, #-12]
   21954:	ldrd	r2, [fp, #-12]
   21958:	mov	r0, #0
   2195c:	mov	r1, #-16777216	; 0xff000000
   21960:	and	r2, r2, r0
   21964:	and	r3, r3, r1
   21968:	cmp	r3, #1929379840	; 0x73000000
   2196c:	cmpeq	r2, #0
   21970:	bne	21b34 <_start@@Base+0xd514>
   21974:	ldr	r3, [fp, #-140]	; 0xffffff74
   21978:	str	r3, [fp, #-16]
   2197c:	mov	r3, #1
   21980:	ldr	r2, [fp, #-144]	; 0xffffff70
   21984:	ldr	r1, [fp, #-16]
   21988:	ldr	r0, [fp, #-136]	; 0xffffff78
   2198c:	bl	15568 <_start@@Base+0xf48>
   21990:	str	r0, [fp, #-140]	; 0xffffff74
   21994:	ldr	r2, [fp, #-16]
   21998:	ldr	r3, [fp, #-140]	; 0xffffff74
   2199c:	cmp	r2, r3
   219a0:	beq	21b1c <_start@@Base+0xd4fc>
   219a4:	ldr	r3, [fp, #-136]	; 0xffffff78
   219a8:	ldr	r0, [r3]
   219ac:	mvn	r3, #-536870912	; 0xe0000000
   219b0:	mov	r2, #8
   219b4:	mov	r1, #8
   219b8:	bl	2f838 <flatcc_builder_start_vector@@Base>
   219bc:	mov	r3, r0
   219c0:	cmp	r3, #0
   219c4:	bne	21f64 <_start@@Base+0xd944>
   219c8:	sub	r3, fp, #28
   219cc:	ldr	r2, [fp, #-144]	; 0xffffff70
   219d0:	ldr	r1, [fp, #-140]	; 0xffffff74
   219d4:	ldr	r0, [fp, #-136]	; 0xffffff78
   219d8:	bl	15318 <_start@@Base+0xcf8>
   219dc:	str	r0, [fp, #-140]	; 0xffffff74
   219e0:	b	21ab8 <_start@@Base+0xd498>
   219e4:	mov	r2, #0
   219e8:	mov	r3, #0
   219ec:	strd	r2, [fp, #-124]	; 0xffffff84
   219f0:	ldr	r3, [fp, #-136]	; 0xffffff78
   219f4:	ldr	r3, [r3]
   219f8:	mov	r1, #1
   219fc:	mov	r0, r3
   21a00:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   21a04:	str	r0, [fp, #-24]	; 0xffffffe8
   21a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21a0c:	cmp	r3, #0
   21a10:	beq	21f6c <_start@@Base+0xd94c>
   21a14:	ldr	r3, [fp, #-140]	; 0xffffff74
   21a18:	str	r3, [fp, #-16]
   21a1c:	sub	r3, fp, #124	; 0x7c
   21a20:	ldr	r2, [fp, #-144]	; 0xffffff70
   21a24:	ldr	r1, [fp, #-16]
   21a28:	ldr	r0, [fp, #-136]	; 0xffffff78
   21a2c:	bl	3bed4 <flatcc_json_parser_double@@Base>
   21a30:	str	r0, [fp, #-140]	; 0xffffff74
   21a34:	ldr	r2, [fp, #-16]
   21a38:	ldr	r3, [fp, #-140]	; 0xffffff74
   21a3c:	cmp	r2, r3
   21a40:	bne	21a90 <_start@@Base+0xd470>
   21a44:	ldr	r3, [fp, #-140]	; 0xffffff74
   21a48:	str	r3, [fp, #-16]
   21a4c:	sub	r3, fp, #124	; 0x7c
   21a50:	str	r3, [sp]
   21a54:	ldr	r3, [pc, #420]	; 21c00 <_start@@Base+0xd5e0>
   21a58:	add	r3, pc, r3
   21a5c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21a60:	ldr	r1, [fp, #-16]
   21a64:	ldr	r0, [fp, #-136]	; 0xffffff78
   21a68:	bl	17498 <_start@@Base+0x2e78>
   21a6c:	str	r0, [fp, #-140]	; 0xffffff74
   21a70:	ldr	r2, [fp, #-140]	; 0xffffff74
   21a74:	ldr	r3, [fp, #-16]
   21a78:	cmp	r2, r3
   21a7c:	beq	21f6c <_start@@Base+0xd94c>
   21a80:	ldr	r2, [fp, #-140]	; 0xffffff74
   21a84:	ldr	r3, [fp, #-144]	; 0xffffff70
   21a88:	cmp	r2, r3
   21a8c:	beq	21f6c <_start@@Base+0xd94c>
   21a90:	vldr	d7, [fp, #-124]	; 0xffffff84
   21a94:	vmov.f64	d0, d7
   21a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21a9c:	bl	14afc <_start@@Base+0x4dc>
   21aa0:	sub	r3, fp, #28
   21aa4:	ldr	r2, [fp, #-144]	; 0xffffff70
   21aa8:	ldr	r1, [fp, #-140]	; 0xffffff74
   21aac:	ldr	r0, [fp, #-136]	; 0xffffff78
   21ab0:	bl	15400 <_start@@Base+0xde0>
   21ab4:	str	r0, [fp, #-140]	; 0xffffff74
   21ab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21abc:	cmp	r3, #0
   21ac0:	bne	219e4 <_start@@Base+0xd3c4>
   21ac4:	ldr	r3, [fp, #-136]	; 0xffffff78
   21ac8:	ldr	r3, [r3]
   21acc:	mov	r0, r3
   21ad0:	bl	30a90 <flatcc_builder_end_vector@@Base>
   21ad4:	mov	r3, r0
   21ad8:	str	r3, [fp, #-32]	; 0xffffffe0
   21adc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21ae0:	cmp	r3, #0
   21ae4:	beq	21f90 <_start@@Base+0xd970>
   21ae8:	ldr	r3, [fp, #-136]	; 0xffffff78
   21aec:	ldr	r3, [r3]
   21af0:	mov	r1, #33	; 0x21
   21af4:	mov	r0, r3
   21af8:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   21afc:	str	r0, [fp, #-20]	; 0xffffffec
   21b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b04:	cmp	r3, #0
   21b08:	beq	21f90 <_start@@Base+0xd970>
   21b0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   21b14:	str	r2, [r3]
   21b18:	b	21d80 <_start@@Base+0xd760>
   21b1c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21b20:	ldr	r1, [fp, #-140]	; 0xffffff74
   21b24:	ldr	r0, [fp, #-136]	; 0xffffff78
   21b28:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   21b2c:	str	r0, [fp, #-140]	; 0xffffff74
   21b30:	b	21d80 <_start@@Base+0xd760>
   21b34:	ldr	r2, [fp, #-144]	; 0xffffff70
   21b38:	ldr	r1, [fp, #-140]	; 0xffffff74
   21b3c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21b40:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   21b44:	str	r0, [fp, #-140]	; 0xffffff74
   21b48:	b	21d80 <_start@@Base+0xd760>
   21b4c:	ldrd	r2, [fp, #-12]
   21b50:	mvn	r0, #255	; 0xff
   21b54:	mvn	r1, #0
   21b58:	and	r2, r2, r0
   21b5c:	and	r3, r3, r1
   21b60:	add	r1, pc, #144	; 0x90
   21b64:	ldrd	r0, [r1]
   21b68:	cmp	r3, r1
   21b6c:	cmpeq	r2, r0
   21b70:	bne	21d54 <_start@@Base+0xd734>
   21b74:	ldr	r3, [fp, #-140]	; 0xffffff74
   21b78:	str	r3, [fp, #-16]
   21b7c:	mov	r3, #7
   21b80:	ldr	r2, [fp, #-144]	; 0xffffff70
   21b84:	ldr	r1, [fp, #-16]
   21b88:	ldr	r0, [fp, #-136]	; 0xffffff78
   21b8c:	bl	15568 <_start@@Base+0xf48>
   21b90:	str	r0, [fp, #-140]	; 0xffffff74
   21b94:	ldr	r2, [fp, #-16]
   21b98:	ldr	r3, [fp, #-140]	; 0xffffff74
   21b9c:	cmp	r2, r3
   21ba0:	beq	21d3c <_start@@Base+0xd71c>
   21ba4:	ldr	r3, [fp, #-136]	; 0xffffff78
   21ba8:	ldr	r0, [r3]
   21bac:	mvn	r3, #-536870912	; 0xe0000000
   21bb0:	mov	r2, #8
   21bb4:	mov	r1, #8
   21bb8:	bl	2f838 <flatcc_builder_start_vector@@Base>
   21bbc:	mov	r3, r0
   21bc0:	cmp	r3, #0
   21bc4:	bne	21f74 <_start@@Base+0xd954>
   21bc8:	sub	r3, fp, #28
   21bcc:	ldr	r2, [fp, #-144]	; 0xffffff70
   21bd0:	ldr	r1, [fp, #-140]	; 0xffffff74
   21bd4:	ldr	r0, [fp, #-136]	; 0xffffff78
   21bd8:	bl	15318 <_start@@Base+0xcf8>
   21bdc:	str	r0, [fp, #-140]	; 0xffffff74
   21be0:	b	21cd8 <_start@@Base+0xd6b8>
   21be4:	nop			; (mov r0, r0)
   21be8:	svcvs	0x00725f6f
   21bec:			; <UNDEFINED> instruction: 0x76656374
   21bf0:	strbvc	r6, [r2, #-3173]!	; 0xfffff39b
   21bf4:	ldrbvs	r6, [pc], -pc, ror #8
   21bf8:	cdpvs	3, 6, cr7, cr7, cr0, {0}
   21bfc:	ldrbvs	r6, [pc], -pc, ror #24
   21c00:			; <UNDEFINED> instruction: 0x000428b8
   21c04:	andeq	r2, r4, r0, lsr #13
   21c08:	mov	r2, #0
   21c0c:	mov	r3, #0
   21c10:	strd	r2, [fp, #-132]	; 0xffffff7c
   21c14:	ldr	r3, [fp, #-136]	; 0xffffff78
   21c18:	ldr	r3, [r3]
   21c1c:	mov	r1, #1
   21c20:	mov	r0, r3
   21c24:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   21c28:	str	r0, [fp, #-24]	; 0xffffffe8
   21c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21c30:	cmp	r3, #0
   21c34:	beq	21f7c <_start@@Base+0xd95c>
   21c38:	ldr	r3, [fp, #-140]	; 0xffffff74
   21c3c:	str	r3, [fp, #-16]
   21c40:	sub	r3, fp, #132	; 0x84
   21c44:	ldr	r2, [fp, #-144]	; 0xffffff70
   21c48:	ldr	r1, [fp, #-16]
   21c4c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21c50:	bl	160d4 <_start@@Base+0x1ab4>
   21c54:	str	r0, [fp, #-140]	; 0xffffff74
   21c58:	ldr	r2, [fp, #-16]
   21c5c:	ldr	r3, [fp, #-140]	; 0xffffff74
   21c60:	cmp	r2, r3
   21c64:	bne	21cb4 <_start@@Base+0xd694>
   21c68:	ldr	r3, [fp, #-140]	; 0xffffff74
   21c6c:	str	r3, [fp, #-16]
   21c70:	sub	r3, fp, #132	; 0x84
   21c74:	str	r3, [sp]
   21c78:	ldr	r3, [pc, #-124]	; 21c04 <_start@@Base+0xd5e4>
   21c7c:	add	r3, pc, r3
   21c80:	ldr	r2, [fp, #-144]	; 0xffffff70
   21c84:	ldr	r1, [fp, #-16]
   21c88:	ldr	r0, [fp, #-136]	; 0xffffff78
   21c8c:	bl	16b50 <_start@@Base+0x2530>
   21c90:	str	r0, [fp, #-140]	; 0xffffff74
   21c94:	ldr	r2, [fp, #-140]	; 0xffffff74
   21c98:	ldr	r3, [fp, #-16]
   21c9c:	cmp	r2, r3
   21ca0:	beq	21f7c <_start@@Base+0xd95c>
   21ca4:	ldr	r2, [fp, #-140]	; 0xffffff74
   21ca8:	ldr	r3, [fp, #-144]	; 0xffffff70
   21cac:	cmp	r2, r3
   21cb0:	beq	21f7c <_start@@Base+0xd95c>
   21cb4:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   21cb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21cbc:	bl	14a20 <_start@@Base+0x400>
   21cc0:	sub	r3, fp, #28
   21cc4:	ldr	r2, [fp, #-144]	; 0xffffff70
   21cc8:	ldr	r1, [fp, #-140]	; 0xffffff74
   21ccc:	ldr	r0, [fp, #-136]	; 0xffffff78
   21cd0:	bl	15400 <_start@@Base+0xde0>
   21cd4:	str	r0, [fp, #-140]	; 0xffffff74
   21cd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21cdc:	cmp	r3, #0
   21ce0:	bne	21c08 <_start@@Base+0xd5e8>
   21ce4:	ldr	r3, [fp, #-136]	; 0xffffff78
   21ce8:	ldr	r3, [r3]
   21cec:	mov	r0, r3
   21cf0:	bl	30a90 <flatcc_builder_end_vector@@Base>
   21cf4:	mov	r3, r0
   21cf8:	str	r3, [fp, #-32]	; 0xffffffe0
   21cfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21d00:	cmp	r3, #0
   21d04:	beq	21f90 <_start@@Base+0xd970>
   21d08:	ldr	r3, [fp, #-136]	; 0xffffff78
   21d0c:	ldr	r3, [r3]
   21d10:	mov	r1, #32
   21d14:	mov	r0, r3
   21d18:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   21d1c:	str	r0, [fp, #-20]	; 0xffffffec
   21d20:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d24:	cmp	r3, #0
   21d28:	beq	21f90 <_start@@Base+0xd970>
   21d2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21d30:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d34:	str	r2, [r3]
   21d38:	b	21d80 <_start@@Base+0xd760>
   21d3c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21d40:	ldr	r1, [fp, #-140]	; 0xffffff74
   21d44:	ldr	r0, [fp, #-136]	; 0xffffff78
   21d48:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   21d4c:	str	r0, [fp, #-140]	; 0xffffff74
   21d50:	b	21d80 <_start@@Base+0xd760>
   21d54:	ldr	r2, [fp, #-144]	; 0xffffff70
   21d58:	ldr	r1, [fp, #-140]	; 0xffffff74
   21d5c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21d60:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   21d64:	str	r0, [fp, #-140]	; 0xffffff74
   21d68:	b	21d80 <_start@@Base+0xd760>
   21d6c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21d70:	ldr	r1, [fp, #-140]	; 0xffffff74
   21d74:	ldr	r0, [fp, #-136]	; 0xffffff78
   21d78:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   21d7c:	str	r0, [fp, #-140]	; 0xffffff74
   21d80:	sub	r3, fp, #28
   21d84:	ldr	r2, [fp, #-144]	; 0xffffff70
   21d88:	ldr	r1, [fp, #-140]	; 0xffffff74
   21d8c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21d90:	bl	151b0 <_start@@Base+0xb90>
   21d94:	str	r0, [fp, #-140]	; 0xffffff74
   21d98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21d9c:	cmp	r3, #0
   21da0:	bne	1e5f4 <_start@@Base+0x9fd4>
   21da4:	ldr	r3, [fp, #-136]	; 0xffffff78
   21da8:	ldr	r3, [r3, #24]
   21dac:	cmp	r3, #0
   21db0:	bne	21f84 <_start@@Base+0xd964>
   21db4:	ldr	r3, [fp, #-136]	; 0xffffff78
   21db8:	ldr	r3, [r3]
   21dbc:	mov	r1, #3
   21dc0:	mov	r0, r3
   21dc4:	bl	30338 <flatcc_builder_check_required_field@@Base>
   21dc8:	mov	r3, r0
   21dcc:	cmp	r3, #0
   21dd0:	bne	21df0 <_start@@Base+0xd7d0>
   21dd4:	mov	r3, #29
   21dd8:	ldr	r2, [fp, #-144]	; 0xffffff70
   21ddc:	ldr	r1, [fp, #-140]	; 0xffffff74
   21de0:	ldr	r0, [fp, #-136]	; 0xffffff78
   21de4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   21de8:	str	r0, [fp, #-140]	; 0xffffff74
   21dec:	b	21f90 <_start@@Base+0xd970>
   21df0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21df4:	ldr	r2, [fp, #-144]	; 0xffffff70
   21df8:	ldr	r1, [fp, #-140]	; 0xffffff74
   21dfc:	ldr	r0, [fp, #-136]	; 0xffffff78
   21e00:	bl	3cd9c <flatcc_json_parser_finalize_unions@@Base>
   21e04:	str	r0, [fp, #-140]	; 0xffffff74
   21e08:	ldr	r3, [fp, #-136]	; 0xffffff78
   21e0c:	ldr	r3, [r3]
   21e10:	mov	r0, r3
   21e14:	bl	30634 <flatcc_builder_end_table@@Base>
   21e18:	mov	r2, r0
   21e1c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   21e20:	str	r2, [r3]
   21e24:	ldr	r3, [fp, #-148]	; 0xffffff6c
   21e28:	ldr	r3, [r3]
   21e2c:	cmp	r3, #0
   21e30:	beq	21f8c <_start@@Base+0xd96c>
   21e34:	ldr	r3, [fp, #-140]	; 0xffffff74
   21e38:	b	21fa8 <_start@@Base+0xd988>
   21e3c:	nop			; (mov r0, r0)
   21e40:	b	21f90 <_start@@Base+0xd970>
   21e44:	nop			; (mov r0, r0)
   21e48:	b	21f90 <_start@@Base+0xd970>
   21e4c:	nop			; (mov r0, r0)
   21e50:	b	21f90 <_start@@Base+0xd970>
   21e54:	nop			; (mov r0, r0)
   21e58:	b	21f90 <_start@@Base+0xd970>
   21e5c:	nop			; (mov r0, r0)
   21e60:	b	21f90 <_start@@Base+0xd970>
   21e64:	nop			; (mov r0, r0)
   21e68:	b	21f90 <_start@@Base+0xd970>
   21e6c:	nop			; (mov r0, r0)
   21e70:	b	21f90 <_start@@Base+0xd970>
   21e74:	nop			; (mov r0, r0)
   21e78:	b	21f90 <_start@@Base+0xd970>
   21e7c:	nop			; (mov r0, r0)
   21e80:	b	21f90 <_start@@Base+0xd970>
   21e84:	nop			; (mov r0, r0)
   21e88:	b	21f90 <_start@@Base+0xd970>
   21e8c:	nop			; (mov r0, r0)
   21e90:	b	21f90 <_start@@Base+0xd970>
   21e94:	nop			; (mov r0, r0)
   21e98:	b	21f90 <_start@@Base+0xd970>
   21e9c:	nop			; (mov r0, r0)
   21ea0:	b	21f90 <_start@@Base+0xd970>
   21ea4:	nop			; (mov r0, r0)
   21ea8:	b	21f90 <_start@@Base+0xd970>
   21eac:	nop			; (mov r0, r0)
   21eb0:	b	21f90 <_start@@Base+0xd970>
   21eb4:	nop			; (mov r0, r0)
   21eb8:	b	21f90 <_start@@Base+0xd970>
   21ebc:	nop			; (mov r0, r0)
   21ec0:	b	21f90 <_start@@Base+0xd970>
   21ec4:	nop			; (mov r0, r0)
   21ec8:	b	21f90 <_start@@Base+0xd970>
   21ecc:	nop			; (mov r0, r0)
   21ed0:	b	21f90 <_start@@Base+0xd970>
   21ed4:	nop			; (mov r0, r0)
   21ed8:	b	21f90 <_start@@Base+0xd970>
   21edc:	nop			; (mov r0, r0)
   21ee0:	b	21f90 <_start@@Base+0xd970>
   21ee4:	nop			; (mov r0, r0)
   21ee8:	b	21f90 <_start@@Base+0xd970>
   21eec:	nop			; (mov r0, r0)
   21ef0:	b	21f90 <_start@@Base+0xd970>
   21ef4:	nop			; (mov r0, r0)
   21ef8:	b	21f90 <_start@@Base+0xd970>
   21efc:	nop			; (mov r0, r0)
   21f00:	b	21f90 <_start@@Base+0xd970>
   21f04:	nop			; (mov r0, r0)
   21f08:	b	21f90 <_start@@Base+0xd970>
   21f0c:	nop			; (mov r0, r0)
   21f10:	b	21f90 <_start@@Base+0xd970>
   21f14:	nop			; (mov r0, r0)
   21f18:	b	21f90 <_start@@Base+0xd970>
   21f1c:	nop			; (mov r0, r0)
   21f20:	b	21f90 <_start@@Base+0xd970>
   21f24:	nop			; (mov r0, r0)
   21f28:	b	21f90 <_start@@Base+0xd970>
   21f2c:	nop			; (mov r0, r0)
   21f30:	b	21f90 <_start@@Base+0xd970>
   21f34:	nop			; (mov r0, r0)
   21f38:	b	21f90 <_start@@Base+0xd970>
   21f3c:	nop			; (mov r0, r0)
   21f40:	b	21f90 <_start@@Base+0xd970>
   21f44:	nop			; (mov r0, r0)
   21f48:	b	21f90 <_start@@Base+0xd970>
   21f4c:	nop			; (mov r0, r0)
   21f50:	b	21f90 <_start@@Base+0xd970>
   21f54:	nop			; (mov r0, r0)
   21f58:	b	21f90 <_start@@Base+0xd970>
   21f5c:	nop			; (mov r0, r0)
   21f60:	b	21f90 <_start@@Base+0xd970>
   21f64:	nop			; (mov r0, r0)
   21f68:	b	21f90 <_start@@Base+0xd970>
   21f6c:	nop			; (mov r0, r0)
   21f70:	b	21f90 <_start@@Base+0xd970>
   21f74:	nop			; (mov r0, r0)
   21f78:	b	21f90 <_start@@Base+0xd970>
   21f7c:	nop			; (mov r0, r0)
   21f80:	b	21f90 <_start@@Base+0xd970>
   21f84:	nop			; (mov r0, r0)
   21f88:	b	21f90 <_start@@Base+0xd970>
   21f8c:	nop			; (mov r0, r0)
   21f90:	mov	r3, #33	; 0x21
   21f94:	ldr	r2, [fp, #-144]	; 0xffffff70
   21f98:	ldr	r1, [fp, #-140]	; 0xffffff74
   21f9c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21fa0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   21fa4:	mov	r3, r0
   21fa8:	mov	r0, r3
   21fac:	sub	sp, fp, #4
   21fb0:	pop	{fp, pc}
   21fb4:	push	{fp, lr}
   21fb8:	add	fp, sp, #4
   21fbc:	sub	sp, sp, #128	; 0x80
   21fc0:	str	r0, [fp, #-112]	; 0xffffff90
   21fc4:	str	r1, [fp, #-116]	; 0xffffff8c
   21fc8:	str	r2, [fp, #-120]	; 0xffffff88
   21fcc:	str	r3, [fp, #-124]	; 0xffffff84
   21fd0:	ldr	r3, [fp, #-124]	; 0xffffff84
   21fd4:	mov	r2, #0
   21fd8:	str	r2, [r3]
   21fdc:	ldr	r3, [fp, #-112]	; 0xffffff90
   21fe0:	ldr	r3, [r3]
   21fe4:	mov	r1, #12
   21fe8:	mov	r0, r3
   21fec:	bl	2fad0 <flatcc_builder_start_table@@Base>
   21ff0:	mov	r3, r0
   21ff4:	cmp	r3, #0
   21ff8:	bne	233b8 <_start@@Base+0xed98>
   21ffc:	sub	r3, fp, #32
   22000:	ldr	r2, [fp, #-120]	; 0xffffff88
   22004:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22008:	ldr	r0, [fp, #-112]	; 0xffffff90
   2200c:	bl	150c8 <_start@@Base+0xaa8>
   22010:	str	r0, [fp, #-116]	; 0xffffff8c
   22014:	b	23368 <_start@@Base+0xed48>
   22018:	ldr	r2, [fp, #-120]	; 0xffffff88
   2201c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22020:	ldr	r0, [fp, #-112]	; 0xffffff90
   22024:	bl	14cb8 <_start@@Base+0x698>
   22028:	str	r0, [fp, #-116]	; 0xffffff8c
   2202c:	ldr	r1, [fp, #-120]	; 0xffffff88
   22030:	ldr	r0, [fp, #-116]	; 0xffffff8c
   22034:	bl	14f9c <_start@@Base+0x97c>
   22038:	strd	r0, [fp, #-12]
   2203c:	ldrd	r2, [fp, #-12]
   22040:	mvn	r0, #0
   22044:	ldr	r1, [pc, #764]	; 22348 <_start@@Base+0xdd28>
   22048:	cmp	r3, r1
   2204c:	cmpeq	r2, r0
   22050:	bhi	227b0 <_start@@Base+0xe190>
   22054:	ldrd	r2, [fp, #-12]
   22058:	add	r1, pc, #720	; 0x2d0
   2205c:	ldrd	r0, [r1]
   22060:	cmp	r3, r1
   22064:	cmpeq	r2, r0
   22068:	bhi	22354 <_start@@Base+0xdd34>
   2206c:	ldrd	r2, [fp, #-12]
   22070:	mov	r0, #0
   22074:	mvn	r1, #255	; 0xff
   22078:	and	r2, r2, r0
   2207c:	and	r3, r3, r1
   22080:	add	r1, pc, #688	; 0x2b0
   22084:	ldrd	r0, [r1]
   22088:	cmp	r3, r1
   2208c:	cmpeq	r2, r0
   22090:	bne	221c4 <_start@@Base+0xdba4>
   22094:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22098:	str	r3, [fp, #-16]
   2209c:	mov	r3, #3
   220a0:	ldr	r2, [fp, #-120]	; 0xffffff88
   220a4:	ldr	r1, [fp, #-16]
   220a8:	ldr	r0, [fp, #-112]	; 0xffffff90
   220ac:	bl	15568 <_start@@Base+0xf48>
   220b0:	str	r0, [fp, #-116]	; 0xffffff8c
   220b4:	ldr	r2, [fp, #-16]
   220b8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   220bc:	cmp	r2, r3
   220c0:	beq	221ac <_start@@Base+0xdb8c>
   220c4:	mov	r2, #0
   220c8:	mov	r3, #0
   220cc:	strd	r2, [fp, #-44]	; 0xffffffd4
   220d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   220d4:	str	r3, [fp, #-16]
   220d8:	sub	r3, fp, #44	; 0x2c
   220dc:	ldr	r2, [fp, #-120]	; 0xffffff88
   220e0:	ldr	r1, [fp, #-16]
   220e4:	ldr	r0, [fp, #-112]	; 0xffffff90
   220e8:	bl	3bed4 <flatcc_json_parser_double@@Base>
   220ec:	str	r0, [fp, #-116]	; 0xffffff8c
   220f0:	ldr	r2, [fp, #-16]
   220f4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   220f8:	cmp	r2, r3
   220fc:	bne	2214c <_start@@Base+0xdb2c>
   22100:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22104:	str	r3, [fp, #-16]
   22108:	sub	r3, fp, #44	; 0x2c
   2210c:	str	r3, [sp]
   22110:	ldr	r3, [pc, #564]	; 2234c <_start@@Base+0xdd2c>
   22114:	add	r3, pc, r3
   22118:	ldr	r2, [fp, #-120]	; 0xffffff88
   2211c:	ldr	r1, [fp, #-16]
   22120:	ldr	r0, [fp, #-112]	; 0xffffff90
   22124:	bl	17498 <_start@@Base+0x2e78>
   22128:	str	r0, [fp, #-116]	; 0xffffff8c
   2212c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22130:	ldr	r3, [fp, #-16]
   22134:	cmp	r2, r3
   22138:	beq	2343c <_start@@Base+0xee1c>
   2213c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22140:	ldr	r3, [fp, #-120]	; 0xffffff88
   22144:	cmp	r2, r3
   22148:	beq	2343c <_start@@Base+0xee1c>
   2214c:	vldr	d7, [fp, #-44]	; 0xffffffd4
   22150:	vcmp.f64	d7, #0.0
   22154:	vmrs	APSR_nzcv, fpscr
   22158:	bne	22170 <_start@@Base+0xdb50>
   2215c:	ldr	r3, [fp, #-112]	; 0xffffff90
   22160:	ldr	r3, [r3, #8]
   22164:	and	r3, r3, #2
   22168:	cmp	r3, #0
   2216c:	beq	23350 <_start@@Base+0xed30>
   22170:	ldr	r3, [fp, #-112]	; 0xffffff90
   22174:	ldr	r0, [r3]
   22178:	mov	r3, #8
   2217c:	mov	r2, #8
   22180:	mov	r1, #9
   22184:	bl	31fc4 <flatcc_builder_table_add@@Base>
   22188:	str	r0, [fp, #-20]	; 0xffffffec
   2218c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22190:	cmp	r3, #0
   22194:	beq	233c0 <_start@@Base+0xeda0>
   22198:	vldr	d7, [fp, #-44]	; 0xffffffd4
   2219c:	vmov.f64	d0, d7
   221a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   221a4:	bl	14afc <_start@@Base+0x4dc>
   221a8:	b	23350 <_start@@Base+0xed30>
   221ac:	ldr	r2, [fp, #-120]	; 0xffffff88
   221b0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   221b4:	ldr	r0, [fp, #-112]	; 0xffffff90
   221b8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   221bc:	str	r0, [fp, #-116]	; 0xffffff8c
   221c0:	b	23350 <_start@@Base+0xed30>
   221c4:	ldrd	r2, [fp, #-12]
   221c8:	mov	r0, #0
   221cc:	mvn	r1, #255	; 0xff
   221d0:	and	r2, r2, r0
   221d4:	and	r3, r3, r1
   221d8:	add	r1, pc, #352	; 0x160
   221dc:	ldrd	r0, [r1]
   221e0:	cmp	r3, r1
   221e4:	cmpeq	r2, r0
   221e8:	bne	22318 <_start@@Base+0xdcf8>
   221ec:	ldr	r3, [fp, #-116]	; 0xffffff8c
   221f0:	str	r3, [fp, #-16]
   221f4:	mov	r3, #3
   221f8:	ldr	r2, [fp, #-120]	; 0xffffff88
   221fc:	ldr	r1, [fp, #-16]
   22200:	ldr	r0, [fp, #-112]	; 0xffffff90
   22204:	bl	15568 <_start@@Base+0xf48>
   22208:	str	r0, [fp, #-116]	; 0xffffff8c
   2220c:	ldr	r2, [fp, #-16]
   22210:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22214:	cmp	r2, r3
   22218:	beq	22300 <_start@@Base+0xdce0>
   2221c:	mov	r3, #0
   22220:	str	r3, [fp, #-48]	; 0xffffffd0
   22224:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22228:	str	r3, [fp, #-16]
   2222c:	sub	r3, fp, #48	; 0x30
   22230:	ldr	r2, [fp, #-120]	; 0xffffff88
   22234:	ldr	r1, [fp, #-16]
   22238:	ldr	r0, [fp, #-112]	; 0xffffff90
   2223c:	bl	3c078 <flatcc_json_parser_float@@Base>
   22240:	str	r0, [fp, #-116]	; 0xffffff8c
   22244:	ldr	r2, [fp, #-16]
   22248:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2224c:	cmp	r2, r3
   22250:	bne	222a0 <_start@@Base+0xdc80>
   22254:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22258:	str	r3, [fp, #-16]
   2225c:	sub	r3, fp, #48	; 0x30
   22260:	str	r3, [sp]
   22264:	ldr	r3, [pc, #228]	; 22350 <_start@@Base+0xdd30>
   22268:	add	r3, pc, r3
   2226c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22270:	ldr	r1, [fp, #-16]
   22274:	ldr	r0, [fp, #-112]	; 0xffffff90
   22278:	bl	17314 <_start@@Base+0x2cf4>
   2227c:	str	r0, [fp, #-116]	; 0xffffff8c
   22280:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22284:	ldr	r3, [fp, #-16]
   22288:	cmp	r2, r3
   2228c:	beq	2343c <_start@@Base+0xee1c>
   22290:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22294:	ldr	r3, [fp, #-120]	; 0xffffff88
   22298:	cmp	r2, r3
   2229c:	beq	2343c <_start@@Base+0xee1c>
   222a0:	vldr	s15, [fp, #-48]	; 0xffffffd0
   222a4:	vcmp.f32	s15, #0.0
   222a8:	vmrs	APSR_nzcv, fpscr
   222ac:	bne	222c4 <_start@@Base+0xdca4>
   222b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   222b4:	ldr	r3, [r3, #8]
   222b8:	and	r3, r3, #2
   222bc:	cmp	r3, #0
   222c0:	beq	23350 <_start@@Base+0xed30>
   222c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   222c8:	ldr	r0, [r3]
   222cc:	mov	r3, #4
   222d0:	mov	r2, #4
   222d4:	mov	r1, #8
   222d8:	bl	31fc4 <flatcc_builder_table_add@@Base>
   222dc:	str	r0, [fp, #-20]	; 0xffffffec
   222e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   222e4:	cmp	r3, #0
   222e8:	beq	233c8 <_start@@Base+0xeda8>
   222ec:	vldr	s15, [fp, #-48]	; 0xffffffd0
   222f0:	vmov.f32	s0, s15
   222f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   222f8:	bl	14a90 <_start@@Base+0x470>
   222fc:	b	23350 <_start@@Base+0xed30>
   22300:	ldr	r2, [fp, #-120]	; 0xffffff88
   22304:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22308:	ldr	r0, [fp, #-112]	; 0xffffff90
   2230c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22310:	str	r0, [fp, #-116]	; 0xffffff8c
   22314:	b	23350 <_start@@Base+0xed30>
   22318:	ldr	r2, [fp, #-120]	; 0xffffff88
   2231c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22320:	ldr	r0, [fp, #-112]	; 0xffffff90
   22324:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22328:	str	r0, [fp, #-116]	; 0xffffff8c
   2232c:	b	23350 <_start@@Base+0xed30>
   22330:			; <UNDEFINED> instruction: 0xffffffff
   22334:	ldmdbvs	r1!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
   22338:	andeq	r0, r0, r0
   2233c:	ldrtvs	r3, [r6], -r0, lsl #8
   22340:	andeq	r0, r0, r0
   22344:	ldrtvs	r3, [r3], -r0, lsl #4
   22348:	ldmdbvs	r7!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
   2234c:	andeq	r2, r4, r4, lsl r2
   22350:	andeq	r2, r4, ip, asr #1
   22354:	ldrd	r2, [fp, #-12]
   22358:	add	r1, pc, #712	; 0x2c8
   2235c:	ldrd	r0, [r1]
   22360:	cmp	r3, r1
   22364:	cmpeq	r2, r0
   22368:	bhi	224d4 <_start@@Base+0xdeb4>
   2236c:	ldrd	r2, [fp, #-12]
   22370:	mov	r0, #0
   22374:	mvn	r1, #255	; 0xff
   22378:	and	r2, r2, r0
   2237c:	and	r3, r3, r1
   22380:	add	r1, pc, #680	; 0x2a8
   22384:	ldrd	r0, [r1]
   22388:	cmp	r3, r1
   2238c:	cmpeq	r2, r0
   22390:	bne	224bc <_start@@Base+0xde9c>
   22394:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22398:	str	r3, [fp, #-16]
   2239c:	mov	r3, #3
   223a0:	ldr	r2, [fp, #-120]	; 0xffffff88
   223a4:	ldr	r1, [fp, #-16]
   223a8:	ldr	r0, [fp, #-112]	; 0xffffff90
   223ac:	bl	15568 <_start@@Base+0xf48>
   223b0:	str	r0, [fp, #-116]	; 0xffffff8c
   223b4:	ldr	r2, [fp, #-16]
   223b8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   223bc:	cmp	r2, r3
   223c0:	beq	224a4 <_start@@Base+0xde84>
   223c4:	mov	r3, #0
   223c8:	strh	r3, [fp, #-50]	; 0xffffffce
   223cc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   223d0:	str	r3, [fp, #-16]
   223d4:	sub	r3, fp, #50	; 0x32
   223d8:	ldr	r2, [fp, #-120]	; 0xffffff88
   223dc:	ldr	r1, [fp, #-16]
   223e0:	ldr	r0, [fp, #-112]	; 0xffffff90
   223e4:	bl	16278 <_start@@Base+0x1c58>
   223e8:	str	r0, [fp, #-116]	; 0xffffff8c
   223ec:	ldr	r2, [fp, #-16]
   223f0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   223f4:	cmp	r2, r3
   223f8:	bne	22448 <_start@@Base+0xde28>
   223fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22400:	str	r3, [fp, #-16]
   22404:	sub	r3, fp, #50	; 0x32
   22408:	str	r3, [sp]
   2240c:	ldr	r3, [pc, #556]	; 22640 <_start@@Base+0xe020>
   22410:	add	r3, pc, r3
   22414:	ldr	r2, [fp, #-120]	; 0xffffff88
   22418:	ldr	r1, [fp, #-16]
   2241c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22420:	bl	16e64 <_start@@Base+0x2844>
   22424:	str	r0, [fp, #-116]	; 0xffffff8c
   22428:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2242c:	ldr	r3, [fp, #-16]
   22430:	cmp	r2, r3
   22434:	beq	2343c <_start@@Base+0xee1c>
   22438:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2243c:	ldr	r3, [fp, #-120]	; 0xffffff88
   22440:	cmp	r2, r3
   22444:	beq	2343c <_start@@Base+0xee1c>
   22448:	ldrsh	r3, [fp, #-50]	; 0xffffffce
   2244c:	cmp	r3, #0
   22450:	bne	22468 <_start@@Base+0xde48>
   22454:	ldr	r3, [fp, #-112]	; 0xffffff90
   22458:	ldr	r3, [r3, #8]
   2245c:	and	r3, r3, #2
   22460:	cmp	r3, #0
   22464:	beq	23350 <_start@@Base+0xed30>
   22468:	ldr	r3, [fp, #-112]	; 0xffffff90
   2246c:	ldr	r0, [r3]
   22470:	mov	r3, #2
   22474:	mov	r2, #2
   22478:	mov	r1, #2
   2247c:	bl	31fc4 <flatcc_builder_table_add@@Base>
   22480:	str	r0, [fp, #-20]	; 0xffffffec
   22484:	ldr	r3, [fp, #-20]	; 0xffffffec
   22488:	cmp	r3, #0
   2248c:	beq	233d0 <_start@@Base+0xedb0>
   22490:	ldrsh	r3, [fp, #-50]	; 0xffffffce
   22494:	mov	r1, r3
   22498:	ldr	r0, [fp, #-20]	; 0xffffffec
   2249c:	bl	14960 <_start@@Base+0x340>
   224a0:	b	23350 <_start@@Base+0xed30>
   224a4:	ldr	r2, [fp, #-120]	; 0xffffff88
   224a8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   224ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   224b0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   224b4:	str	r0, [fp, #-116]	; 0xffffff8c
   224b8:	b	23350 <_start@@Base+0xed30>
   224bc:	ldr	r2, [fp, #-120]	; 0xffffff88
   224c0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   224c4:	ldr	r0, [fp, #-112]	; 0xffffff90
   224c8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   224cc:	str	r0, [fp, #-116]	; 0xffffff8c
   224d0:	b	23350 <_start@@Base+0xed30>
   224d4:	ldrd	r2, [fp, #-12]
   224d8:	mov	r0, #0
   224dc:	mvn	r1, #255	; 0xff
   224e0:	and	r2, r2, r0
   224e4:	and	r3, r3, r1
   224e8:	add	r1, pc, #328	; 0x148
   224ec:	ldrd	r0, [r1]
   224f0:	cmp	r3, r1
   224f4:	cmpeq	r2, r0
   224f8:	bne	22648 <_start@@Base+0xe028>
   224fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22500:	str	r3, [fp, #-16]
   22504:	mov	r3, #3
   22508:	ldr	r2, [fp, #-120]	; 0xffffff88
   2250c:	ldr	r1, [fp, #-16]
   22510:	ldr	r0, [fp, #-112]	; 0xffffff90
   22514:	bl	15568 <_start@@Base+0xf48>
   22518:	str	r0, [fp, #-116]	; 0xffffff8c
   2251c:	ldr	r2, [fp, #-16]
   22520:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22524:	cmp	r2, r3
   22528:	beq	2260c <_start@@Base+0xdfec>
   2252c:	mov	r2, #0
   22530:	mov	r3, #0
   22534:	strd	r2, [fp, #-60]	; 0xffffffc4
   22538:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2253c:	str	r3, [fp, #-16]
   22540:	sub	r3, fp, #60	; 0x3c
   22544:	ldr	r2, [fp, #-120]	; 0xffffff88
   22548:	ldr	r1, [fp, #-16]
   2254c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22550:	bl	160d4 <_start@@Base+0x1ab4>
   22554:	str	r0, [fp, #-116]	; 0xffffff8c
   22558:	ldr	r2, [fp, #-16]
   2255c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22560:	cmp	r2, r3
   22564:	bne	225b4 <_start@@Base+0xdf94>
   22568:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2256c:	str	r3, [fp, #-16]
   22570:	sub	r3, fp, #60	; 0x3c
   22574:	str	r3, [sp]
   22578:	ldr	r3, [pc, #196]	; 22644 <_start@@Base+0xe024>
   2257c:	add	r3, pc, r3
   22580:	ldr	r2, [fp, #-120]	; 0xffffff88
   22584:	ldr	r1, [fp, #-16]
   22588:	ldr	r0, [fp, #-112]	; 0xffffff90
   2258c:	bl	16b50 <_start@@Base+0x2530>
   22590:	str	r0, [fp, #-116]	; 0xffffff8c
   22594:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22598:	ldr	r3, [fp, #-16]
   2259c:	cmp	r2, r3
   225a0:	beq	2343c <_start@@Base+0xee1c>
   225a4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   225a8:	ldr	r3, [fp, #-120]	; 0xffffff88
   225ac:	cmp	r2, r3
   225b0:	beq	2343c <_start@@Base+0xee1c>
   225b4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   225b8:	orrs	r3, r2, r3
   225bc:	bne	225d4 <_start@@Base+0xdfb4>
   225c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   225c4:	ldr	r3, [r3, #8]
   225c8:	and	r3, r3, #2
   225cc:	cmp	r3, #0
   225d0:	beq	23350 <_start@@Base+0xed30>
   225d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   225d8:	ldr	r0, [r3]
   225dc:	mov	r3, #8
   225e0:	mov	r2, #8
   225e4:	mov	r1, #6
   225e8:	bl	31fc4 <flatcc_builder_table_add@@Base>
   225ec:	str	r0, [fp, #-20]	; 0xffffffec
   225f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   225f4:	cmp	r3, #0
   225f8:	beq	233d8 <_start@@Base+0xedb8>
   225fc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   22600:	ldr	r0, [fp, #-20]	; 0xffffffec
   22604:	bl	14a20 <_start@@Base+0x400>
   22608:	b	23350 <_start@@Base+0xed30>
   2260c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22610:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22614:	ldr	r0, [fp, #-112]	; 0xffffff90
   22618:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2261c:	str	r0, [fp, #-116]	; 0xffffff8c
   22620:	b	23350 <_start@@Base+0xed30>
   22624:	nop			; (mov r0, r0)
   22628:			; <UNDEFINED> instruction: 0xffffffff
   2262c:	ldmdbvs	r3!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, sp}
   22630:	andeq	r0, r0, r0
   22634:	ldmdbvs	r1!, {r9, sl, ip, sp}
   22638:	andeq	r0, r0, r0
   2263c:	ldmdbvs	r6!, {sl, ip, sp}
   22640:	andeq	r1, r4, r0, lsr pc
   22644:	ldrdeq	r1, [r4], -r0
   22648:	ldrd	r2, [fp, #-12]
   2264c:	mov	r0, #0
   22650:	mvn	r1, #255	; 0xff
   22654:	and	r2, r2, r0
   22658:	and	r3, r3, r1
   2265c:	add	r1, pc, #740	; 0x2e4
   22660:	ldrd	r0, [r1]
   22664:	cmp	r3, r1
   22668:	cmpeq	r2, r0
   2266c:	bne	22798 <_start@@Base+0xe178>
   22670:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22674:	str	r3, [fp, #-16]
   22678:	mov	r3, #3
   2267c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22680:	ldr	r1, [fp, #-16]
   22684:	ldr	r0, [fp, #-112]	; 0xffffff90
   22688:	bl	15568 <_start@@Base+0xf48>
   2268c:	str	r0, [fp, #-116]	; 0xffffff8c
   22690:	ldr	r2, [fp, #-16]
   22694:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22698:	cmp	r2, r3
   2269c:	beq	22780 <_start@@Base+0xe160>
   226a0:	mov	r3, #0
   226a4:	str	r3, [fp, #-64]	; 0xffffffc0
   226a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   226ac:	str	r3, [fp, #-16]
   226b0:	sub	r3, fp, #64	; 0x40
   226b4:	ldr	r2, [fp, #-120]	; 0xffffff88
   226b8:	ldr	r1, [fp, #-16]
   226bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   226c0:	bl	161a8 <_start@@Base+0x1b88>
   226c4:	str	r0, [fp, #-116]	; 0xffffff8c
   226c8:	ldr	r2, [fp, #-16]
   226cc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   226d0:	cmp	r2, r3
   226d4:	bne	22724 <_start@@Base+0xe104>
   226d8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   226dc:	str	r3, [fp, #-16]
   226e0:	sub	r3, fp, #64	; 0x40
   226e4:	str	r3, [sp]
   226e8:	ldr	r3, [pc, #624]	; 22960 <_start@@Base+0xe340>
   226ec:	add	r3, pc, r3
   226f0:	ldr	r2, [fp, #-120]	; 0xffffff88
   226f4:	ldr	r1, [fp, #-16]
   226f8:	ldr	r0, [fp, #-112]	; 0xffffff90
   226fc:	bl	16ce0 <_start@@Base+0x26c0>
   22700:	str	r0, [fp, #-116]	; 0xffffff8c
   22704:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22708:	ldr	r3, [fp, #-16]
   2270c:	cmp	r2, r3
   22710:	beq	2343c <_start@@Base+0xee1c>
   22714:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22718:	ldr	r3, [fp, #-120]	; 0xffffff88
   2271c:	cmp	r2, r3
   22720:	beq	2343c <_start@@Base+0xee1c>
   22724:	ldr	r3, [fp, #-64]	; 0xffffffc0
   22728:	cmp	r3, #0
   2272c:	bne	22744 <_start@@Base+0xe124>
   22730:	ldr	r3, [fp, #-112]	; 0xffffff90
   22734:	ldr	r3, [r3, #8]
   22738:	and	r3, r3, #2
   2273c:	cmp	r3, #0
   22740:	beq	23350 <_start@@Base+0xed30>
   22744:	ldr	r3, [fp, #-112]	; 0xffffff90
   22748:	ldr	r0, [r3]
   2274c:	mov	r3, #4
   22750:	mov	r2, #4
   22754:	mov	r1, #4
   22758:	bl	31fc4 <flatcc_builder_table_add@@Base>
   2275c:	str	r0, [fp, #-20]	; 0xffffffec
   22760:	ldr	r3, [fp, #-20]	; 0xffffffec
   22764:	cmp	r3, #0
   22768:	beq	233e0 <_start@@Base+0xedc0>
   2276c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   22770:	mov	r1, r3
   22774:	ldr	r0, [fp, #-20]	; 0xffffffec
   22778:	bl	149c4 <_start@@Base+0x3a4>
   2277c:	b	23350 <_start@@Base+0xed30>
   22780:	ldr	r2, [fp, #-120]	; 0xffffff88
   22784:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22788:	ldr	r0, [fp, #-112]	; 0xffffff90
   2278c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22790:	str	r0, [fp, #-116]	; 0xffffff8c
   22794:	b	23350 <_start@@Base+0xed30>
   22798:	ldr	r2, [fp, #-120]	; 0xffffff88
   2279c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   227a0:	ldr	r0, [fp, #-112]	; 0xffffff90
   227a4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   227a8:	str	r0, [fp, #-116]	; 0xffffff8c
   227ac:	b	23350 <_start@@Base+0xed30>
   227b0:	ldrd	r2, [fp, #-12]
   227b4:	add	r1, pc, #404	; 0x194
   227b8:	ldrd	r0, [r1]
   227bc:	cmp	r3, r1
   227c0:	cmpeq	r2, r0
   227c4:	bhi	22c44 <_start@@Base+0xe624>
   227c8:	ldrd	r2, [fp, #-12]
   227cc:	add	r1, pc, #388	; 0x184
   227d0:	ldrd	r0, [r1]
   227d4:	cmp	r3, r1
   227d8:	cmpeq	r2, r0
   227dc:	bhi	22970 <_start@@Base+0xe350>
   227e0:	ldrd	r2, [fp, #-12]
   227e4:	mov	r0, #0
   227e8:	ldr	r1, [pc, #372]	; 22964 <_start@@Base+0xe344>
   227ec:	and	r2, r2, r0
   227f0:	and	r3, r3, r1
   227f4:	mov	r0, #0
   227f8:	ldr	r1, [pc, #360]	; 22968 <_start@@Base+0xe348>
   227fc:	cmp	r3, r1
   22800:	cmpeq	r2, r0
   22804:	bne	22930 <_start@@Base+0xe310>
   22808:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2280c:	str	r3, [fp, #-16]
   22810:	mov	r3, #2
   22814:	ldr	r2, [fp, #-120]	; 0xffffff88
   22818:	ldr	r1, [fp, #-16]
   2281c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22820:	bl	15568 <_start@@Base+0xf48>
   22824:	str	r0, [fp, #-116]	; 0xffffff8c
   22828:	ldr	r2, [fp, #-16]
   2282c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22830:	cmp	r2, r3
   22834:	beq	22918 <_start@@Base+0xe2f8>
   22838:	mov	r3, #0
   2283c:	strb	r3, [fp, #-65]	; 0xffffffbf
   22840:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22844:	str	r3, [fp, #-16]
   22848:	sub	r3, fp, #65	; 0x41
   2284c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22850:	ldr	r1, [fp, #-16]
   22854:	ldr	r0, [fp, #-112]	; 0xffffff90
   22858:	bl	16348 <_start@@Base+0x1d28>
   2285c:	str	r0, [fp, #-116]	; 0xffffff8c
   22860:	ldr	r2, [fp, #-16]
   22864:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22868:	cmp	r2, r3
   2286c:	bne	228bc <_start@@Base+0xe29c>
   22870:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22874:	str	r3, [fp, #-16]
   22878:	sub	r3, fp, #65	; 0x41
   2287c:	str	r3, [sp]
   22880:	ldr	r3, [pc, #228]	; 2296c <_start@@Base+0xe34c>
   22884:	add	r3, pc, r3
   22888:	ldr	r2, [fp, #-120]	; 0xffffff88
   2288c:	ldr	r1, [fp, #-16]
   22890:	ldr	r0, [fp, #-112]	; 0xffffff90
   22894:	bl	16ff8 <_start@@Base+0x29d8>
   22898:	str	r0, [fp, #-116]	; 0xffffff8c
   2289c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   228a0:	ldr	r3, [fp, #-16]
   228a4:	cmp	r2, r3
   228a8:	beq	2343c <_start@@Base+0xee1c>
   228ac:	ldr	r2, [fp, #-116]	; 0xffffff8c
   228b0:	ldr	r3, [fp, #-120]	; 0xffffff88
   228b4:	cmp	r2, r3
   228b8:	beq	2343c <_start@@Base+0xee1c>
   228bc:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
   228c0:	cmp	r3, #0
   228c4:	bne	228dc <_start@@Base+0xe2bc>
   228c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   228cc:	ldr	r3, [r3, #8]
   228d0:	and	r3, r3, #2
   228d4:	cmp	r3, #0
   228d8:	beq	23350 <_start@@Base+0xed30>
   228dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   228e0:	ldr	r0, [r3]
   228e4:	mov	r3, #1
   228e8:	mov	r2, #1
   228ec:	mov	r1, #0
   228f0:	bl	31fc4 <flatcc_builder_table_add@@Base>
   228f4:	str	r0, [fp, #-20]	; 0xffffffec
   228f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   228fc:	cmp	r3, #0
   22900:	beq	233e8 <_start@@Base+0xedc8>
   22904:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
   22908:	mov	r1, r3
   2290c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22910:	bl	148f8 <_start@@Base+0x2d8>
   22914:	b	23350 <_start@@Base+0xed30>
   22918:	ldr	r2, [fp, #-120]	; 0xffffff88
   2291c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22920:	ldr	r0, [fp, #-112]	; 0xffffff90
   22924:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22928:	str	r0, [fp, #-116]	; 0xffffff8c
   2292c:	b	23350 <_start@@Base+0xed30>
   22930:	ldr	r2, [fp, #-120]	; 0xffffff88
   22934:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22938:	ldr	r0, [fp, #-112]	; 0xffffff90
   2293c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22940:	str	r0, [fp, #-116]	; 0xffffff8c
   22944:	b	23350 <_start@@Base+0xed30>
   22948:	andeq	r0, r0, r0
   2294c:	ldmdbvs	r3!, {r9, ip, sp}
   22950:			; <UNDEFINED> instruction: 0xffffffff
   22954:	ldrvc	r3, [r6, #-1023]!	; 0xfffffc01
   22958:			; <UNDEFINED> instruction: 0xffffffff
   2295c:	ldrvc	r3, [r1, #-1535]!	; 0xfffffa01
   22960:	andeq	r1, r4, ip, ror #24
   22964:			; <UNDEFINED> instruction: 0xffff0000
   22968:	ldmdbvs	r8!, {}	; <UNPREDICTABLE>
   2296c:	andeq	r1, r4, r0, ror #21
   22970:	ldrd	r2, [fp, #-12]
   22974:	mov	r0, #0
   22978:	mvn	r1, #255	; 0xff
   2297c:	and	r2, r2, r0
   22980:	and	r3, r3, r1
   22984:	add	r1, pc, #668	; 0x29c
   22988:	ldrd	r0, [r1]
   2298c:	cmp	r3, r1
   22990:	cmpeq	r2, r0
   22994:	bne	22ac0 <_start@@Base+0xe4a0>
   22998:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2299c:	str	r3, [fp, #-16]
   229a0:	mov	r3, #3
   229a4:	ldr	r2, [fp, #-120]	; 0xffffff88
   229a8:	ldr	r1, [fp, #-16]
   229ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   229b0:	bl	15568 <_start@@Base+0xf48>
   229b4:	str	r0, [fp, #-116]	; 0xffffff8c
   229b8:	ldr	r2, [fp, #-16]
   229bc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   229c0:	cmp	r2, r3
   229c4:	beq	22aa8 <_start@@Base+0xe488>
   229c8:	mov	r3, #0
   229cc:	str	r3, [fp, #-72]	; 0xffffffb8
   229d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   229d4:	str	r3, [fp, #-16]
   229d8:	sub	r3, fp, #72	; 0x48
   229dc:	ldr	r2, [fp, #-120]	; 0xffffff88
   229e0:	ldr	r1, [fp, #-16]
   229e4:	ldr	r0, [fp, #-112]	; 0xffffff90
   229e8:	bl	15e64 <_start@@Base+0x1844>
   229ec:	str	r0, [fp, #-116]	; 0xffffff8c
   229f0:	ldr	r2, [fp, #-16]
   229f4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   229f8:	cmp	r2, r3
   229fc:	bne	22a4c <_start@@Base+0xe42c>
   22a00:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22a04:	str	r3, [fp, #-16]
   22a08:	sub	r3, fp, #72	; 0x48
   22a0c:	str	r3, [sp]
   22a10:	ldr	r3, [pc, #544]	; 22c38 <_start@@Base+0xe618>
   22a14:	add	r3, pc, r3
   22a18:	ldr	r2, [fp, #-120]	; 0xffffff88
   22a1c:	ldr	r1, [fp, #-16]
   22a20:	ldr	r0, [fp, #-112]	; 0xffffff90
   22a24:	bl	166bc <_start@@Base+0x209c>
   22a28:	str	r0, [fp, #-116]	; 0xffffff8c
   22a2c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22a30:	ldr	r3, [fp, #-16]
   22a34:	cmp	r2, r3
   22a38:	beq	2343c <_start@@Base+0xee1c>
   22a3c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22a40:	ldr	r3, [fp, #-120]	; 0xffffff88
   22a44:	cmp	r2, r3
   22a48:	beq	2343c <_start@@Base+0xee1c>
   22a4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22a50:	cmp	r3, #0
   22a54:	bne	22a6c <_start@@Base+0xe44c>
   22a58:	ldr	r3, [fp, #-112]	; 0xffffff90
   22a5c:	ldr	r3, [r3, #8]
   22a60:	and	r3, r3, #2
   22a64:	cmp	r3, #0
   22a68:	beq	23350 <_start@@Base+0xed30>
   22a6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   22a70:	ldr	r0, [r3]
   22a74:	mov	r3, #4
   22a78:	mov	r2, #4
   22a7c:	mov	r1, #5
   22a80:	bl	31fc4 <flatcc_builder_table_add@@Base>
   22a84:	str	r0, [fp, #-20]	; 0xffffffec
   22a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   22a8c:	cmp	r3, #0
   22a90:	beq	233f0 <_start@@Base+0xedd0>
   22a94:	ldr	r3, [fp, #-72]	; 0xffffffb8
   22a98:	mov	r1, r3
   22a9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22aa0:	bl	1483c <_start@@Base+0x21c>
   22aa4:	b	23350 <_start@@Base+0xed30>
   22aa8:	ldr	r2, [fp, #-120]	; 0xffffff88
   22aac:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22ab0:	ldr	r0, [fp, #-112]	; 0xffffff90
   22ab4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22ab8:	str	r0, [fp, #-116]	; 0xffffff8c
   22abc:	b	23350 <_start@@Base+0xed30>
   22ac0:	ldrd	r2, [fp, #-12]
   22ac4:	mov	r0, #0
   22ac8:	mvn	r1, #255	; 0xff
   22acc:	and	r2, r2, r0
   22ad0:	and	r3, r3, r1
   22ad4:	add	r1, pc, #340	; 0x154
   22ad8:	ldrd	r0, [r1]
   22adc:	cmp	r3, r1
   22ae0:	cmpeq	r2, r0
   22ae4:	bne	22c10 <_start@@Base+0xe5f0>
   22ae8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22aec:	str	r3, [fp, #-16]
   22af0:	mov	r3, #3
   22af4:	ldr	r2, [fp, #-120]	; 0xffffff88
   22af8:	ldr	r1, [fp, #-16]
   22afc:	ldr	r0, [fp, #-112]	; 0xffffff90
   22b00:	bl	15568 <_start@@Base+0xf48>
   22b04:	str	r0, [fp, #-116]	; 0xffffff8c
   22b08:	ldr	r2, [fp, #-16]
   22b0c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22b10:	cmp	r2, r3
   22b14:	beq	22bf8 <_start@@Base+0xe5d8>
   22b18:	mov	r3, #0
   22b1c:	strh	r3, [fp, #-74]	; 0xffffffb6
   22b20:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22b24:	str	r3, [fp, #-16]
   22b28:	sub	r3, fp, #74	; 0x4a
   22b2c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22b30:	ldr	r1, [fp, #-16]
   22b34:	ldr	r0, [fp, #-112]	; 0xffffff90
   22b38:	bl	15f34 <_start@@Base+0x1914>
   22b3c:	str	r0, [fp, #-116]	; 0xffffff8c
   22b40:	ldr	r2, [fp, #-16]
   22b44:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22b48:	cmp	r2, r3
   22b4c:	bne	22b9c <_start@@Base+0xe57c>
   22b50:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22b54:	str	r3, [fp, #-16]
   22b58:	sub	r3, fp, #74	; 0x4a
   22b5c:	str	r3, [sp]
   22b60:	ldr	r3, [pc, #212]	; 22c3c <_start@@Base+0xe61c>
   22b64:	add	r3, pc, r3
   22b68:	ldr	r2, [fp, #-120]	; 0xffffff88
   22b6c:	ldr	r1, [fp, #-16]
   22b70:	ldr	r0, [fp, #-112]	; 0xffffff90
   22b74:	bl	16840 <_start@@Base+0x2220>
   22b78:	str	r0, [fp, #-116]	; 0xffffff8c
   22b7c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22b80:	ldr	r3, [fp, #-16]
   22b84:	cmp	r2, r3
   22b88:	beq	2343c <_start@@Base+0xee1c>
   22b8c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22b90:	ldr	r3, [fp, #-120]	; 0xffffff88
   22b94:	cmp	r2, r3
   22b98:	beq	2343c <_start@@Base+0xee1c>
   22b9c:	ldrh	r3, [fp, #-74]	; 0xffffffb6
   22ba0:	cmp	r3, #0
   22ba4:	bne	22bbc <_start@@Base+0xe59c>
   22ba8:	ldr	r3, [fp, #-112]	; 0xffffff90
   22bac:	ldr	r3, [r3, #8]
   22bb0:	and	r3, r3, #2
   22bb4:	cmp	r3, #0
   22bb8:	beq	23350 <_start@@Base+0xed30>
   22bbc:	ldr	r3, [fp, #-112]	; 0xffffff90
   22bc0:	ldr	r0, [r3]
   22bc4:	mov	r3, #2
   22bc8:	mov	r2, #2
   22bcc:	mov	r1, #3
   22bd0:	bl	31fc4 <flatcc_builder_table_add@@Base>
   22bd4:	str	r0, [fp, #-20]	; 0xffffffec
   22bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   22bdc:	cmp	r3, #0
   22be0:	beq	233f8 <_start@@Base+0xedd8>
   22be4:	ldrh	r3, [fp, #-74]	; 0xffffffb6
   22be8:	mov	r1, r3
   22bec:	ldr	r0, [fp, #-20]	; 0xffffffec
   22bf0:	bl	147d8 <_start@@Base+0x1b8>
   22bf4:	b	23350 <_start@@Base+0xed30>
   22bf8:	ldr	r2, [fp, #-120]	; 0xffffff88
   22bfc:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22c00:	ldr	r0, [fp, #-112]	; 0xffffff90
   22c04:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22c08:	str	r0, [fp, #-116]	; 0xffffff8c
   22c0c:	b	23350 <_start@@Base+0xed30>
   22c10:	ldr	r2, [fp, #-120]	; 0xffffff88
   22c14:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22c18:	ldr	r0, [fp, #-112]	; 0xffffff90
   22c1c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22c20:	str	r0, [fp, #-116]	; 0xffffff8c
   22c24:	b	23350 <_start@@Base+0xed30>
   22c28:	andeq	r0, r0, r0
   22c2c:	ldrvc	r3, [r3, #-512]!	; 0xfffffe00
   22c30:	andeq	r0, r0, r0
   22c34:	ldrvc	r3, [r1, #-1536]!	; 0xfffffa00
   22c38:	andeq	r1, r4, ip, asr r9
   22c3c:	andeq	r1, r4, r8, lsl r8
   22c40:	ldrvc	pc, [r7, #-4095]!	; 0xfffff001
   22c44:	ldrd	r2, [fp, #-12]
   22c48:	mvn	r0, #0
   22c4c:	ldr	r1, [pc, #-20]	; 22c40 <_start@@Base+0xe620>
   22c50:	cmp	r3, r1
   22c54:	cmpeq	r2, r0
   22c58:	bhi	22dc4 <_start@@Base+0xe7a4>
   22c5c:	ldrd	r2, [fp, #-12]
   22c60:	mov	r0, #0
   22c64:	mvn	r1, #255	; 0xff
   22c68:	and	r2, r2, r0
   22c6c:	and	r3, r3, r1
   22c70:	add	r1, pc, #872	; 0x368
   22c74:	ldrd	r0, [r1]
   22c78:	cmp	r3, r1
   22c7c:	cmpeq	r2, r0
   22c80:	bne	22dac <_start@@Base+0xe78c>
   22c84:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22c88:	str	r3, [fp, #-16]
   22c8c:	mov	r3, #3
   22c90:	ldr	r2, [fp, #-120]	; 0xffffff88
   22c94:	ldr	r1, [fp, #-16]
   22c98:	ldr	r0, [fp, #-112]	; 0xffffff90
   22c9c:	bl	15568 <_start@@Base+0xf48>
   22ca0:	str	r0, [fp, #-116]	; 0xffffff8c
   22ca4:	ldr	r2, [fp, #-16]
   22ca8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22cac:	cmp	r2, r3
   22cb0:	beq	22d94 <_start@@Base+0xe774>
   22cb4:	mov	r2, #0
   22cb8:	mov	r3, #0
   22cbc:	strd	r2, [fp, #-84]	; 0xffffffac
   22cc0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22cc4:	str	r3, [fp, #-16]
   22cc8:	sub	r3, fp, #84	; 0x54
   22ccc:	ldr	r2, [fp, #-120]	; 0xffffff88
   22cd0:	ldr	r1, [fp, #-16]
   22cd4:	ldr	r0, [fp, #-112]	; 0xffffff90
   22cd8:	bl	15d90 <_start@@Base+0x1770>
   22cdc:	str	r0, [fp, #-116]	; 0xffffff8c
   22ce0:	ldr	r2, [fp, #-16]
   22ce4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22ce8:	cmp	r2, r3
   22cec:	bne	22d3c <_start@@Base+0xe71c>
   22cf0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22cf4:	str	r3, [fp, #-16]
   22cf8:	sub	r3, fp, #84	; 0x54
   22cfc:	str	r3, [sp]
   22d00:	ldr	r3, [pc, #744]	; 22ff0 <_start@@Base+0xe9d0>
   22d04:	add	r3, pc, r3
   22d08:	ldr	r2, [fp, #-120]	; 0xffffff88
   22d0c:	ldr	r1, [fp, #-16]
   22d10:	ldr	r0, [fp, #-112]	; 0xffffff90
   22d14:	bl	1652c <_start@@Base+0x1f0c>
   22d18:	str	r0, [fp, #-116]	; 0xffffff8c
   22d1c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22d20:	ldr	r3, [fp, #-16]
   22d24:	cmp	r2, r3
   22d28:	beq	2343c <_start@@Base+0xee1c>
   22d2c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22d30:	ldr	r3, [fp, #-120]	; 0xffffff88
   22d34:	cmp	r2, r3
   22d38:	beq	2343c <_start@@Base+0xee1c>
   22d3c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   22d40:	orrs	r3, r2, r3
   22d44:	bne	22d5c <_start@@Base+0xe73c>
   22d48:	ldr	r3, [fp, #-112]	; 0xffffff90
   22d4c:	ldr	r3, [r3, #8]
   22d50:	and	r3, r3, #2
   22d54:	cmp	r3, #0
   22d58:	beq	23350 <_start@@Base+0xed30>
   22d5c:	ldr	r3, [fp, #-112]	; 0xffffff90
   22d60:	ldr	r0, [r3]
   22d64:	mov	r3, #8
   22d68:	mov	r2, #8
   22d6c:	mov	r1, #7
   22d70:	bl	31fc4 <flatcc_builder_table_add@@Base>
   22d74:	str	r0, [fp, #-20]	; 0xffffffec
   22d78:	ldr	r3, [fp, #-20]	; 0xffffffec
   22d7c:	cmp	r3, #0
   22d80:	beq	23400 <_start@@Base+0xede0>
   22d84:	ldrd	r2, [fp, #-84]	; 0xffffffac
   22d88:	ldr	r0, [fp, #-20]	; 0xffffffec
   22d8c:	bl	14898 <_start@@Base+0x278>
   22d90:	b	23350 <_start@@Base+0xed30>
   22d94:	ldr	r2, [fp, #-120]	; 0xffffff88
   22d98:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22d9c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22da0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22da4:	str	r0, [fp, #-116]	; 0xffffff8c
   22da8:	b	23350 <_start@@Base+0xed30>
   22dac:	ldr	r2, [fp, #-120]	; 0xffffff88
   22db0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22db4:	ldr	r0, [fp, #-112]	; 0xffffff90
   22db8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22dbc:	str	r0, [fp, #-116]	; 0xffffff8c
   22dc0:	b	23350 <_start@@Base+0xed30>
   22dc4:	ldrd	r2, [fp, #-12]
   22dc8:	mvn	r0, #0
   22dcc:	ldr	r1, [pc, #544]	; 22ff4 <_start@@Base+0xe9d4>
   22dd0:	cmp	r3, r1
   22dd4:	cmpeq	r2, r0
   22dd8:	bhi	22f44 <_start@@Base+0xe924>
   22ddc:	ldrd	r2, [fp, #-12]
   22de0:	mov	r0, #0
   22de4:	ldr	r1, [pc, #536]	; 23004 <_start@@Base+0xe9e4>
   22de8:	and	r2, r2, r0
   22dec:	and	r3, r3, r1
   22df0:	mov	r0, #0
   22df4:	ldr	r1, [pc, #508]	; 22ff8 <_start@@Base+0xe9d8>
   22df8:	cmp	r3, r1
   22dfc:	cmpeq	r2, r0
   22e00:	bne	22f2c <_start@@Base+0xe90c>
   22e04:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22e08:	str	r3, [fp, #-16]
   22e0c:	mov	r3, #2
   22e10:	ldr	r2, [fp, #-120]	; 0xffffff88
   22e14:	ldr	r1, [fp, #-16]
   22e18:	ldr	r0, [fp, #-112]	; 0xffffff90
   22e1c:	bl	15568 <_start@@Base+0xf48>
   22e20:	str	r0, [fp, #-116]	; 0xffffff8c
   22e24:	ldr	r2, [fp, #-16]
   22e28:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22e2c:	cmp	r2, r3
   22e30:	beq	22f14 <_start@@Base+0xe8f4>
   22e34:	mov	r3, #0
   22e38:	strb	r3, [fp, #-85]	; 0xffffffab
   22e3c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22e40:	str	r3, [fp, #-16]
   22e44:	sub	r3, fp, #85	; 0x55
   22e48:	ldr	r2, [fp, #-120]	; 0xffffff88
   22e4c:	ldr	r1, [fp, #-16]
   22e50:	ldr	r0, [fp, #-112]	; 0xffffff90
   22e54:	bl	16004 <_start@@Base+0x19e4>
   22e58:	str	r0, [fp, #-116]	; 0xffffff8c
   22e5c:	ldr	r2, [fp, #-16]
   22e60:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22e64:	cmp	r2, r3
   22e68:	bne	22eb8 <_start@@Base+0xe898>
   22e6c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22e70:	str	r3, [fp, #-16]
   22e74:	sub	r3, fp, #85	; 0x55
   22e78:	str	r3, [sp]
   22e7c:	ldr	r3, [pc, #376]	; 22ffc <_start@@Base+0xe9dc>
   22e80:	add	r3, pc, r3
   22e84:	ldr	r2, [fp, #-120]	; 0xffffff88
   22e88:	ldr	r1, [fp, #-16]
   22e8c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22e90:	bl	169c8 <_start@@Base+0x23a8>
   22e94:	str	r0, [fp, #-116]	; 0xffffff8c
   22e98:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22e9c:	ldr	r3, [fp, #-16]
   22ea0:	cmp	r2, r3
   22ea4:	beq	2343c <_start@@Base+0xee1c>
   22ea8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22eac:	ldr	r3, [fp, #-120]	; 0xffffff88
   22eb0:	cmp	r2, r3
   22eb4:	beq	2343c <_start@@Base+0xee1c>
   22eb8:	ldrb	r3, [fp, #-85]	; 0xffffffab
   22ebc:	cmp	r3, #0
   22ec0:	bne	22ed8 <_start@@Base+0xe8b8>
   22ec4:	ldr	r3, [fp, #-112]	; 0xffffff90
   22ec8:	ldr	r3, [r3, #8]
   22ecc:	and	r3, r3, #2
   22ed0:	cmp	r3, #0
   22ed4:	beq	23350 <_start@@Base+0xed30>
   22ed8:	ldr	r3, [fp, #-112]	; 0xffffff90
   22edc:	ldr	r0, [r3]
   22ee0:	mov	r3, #1
   22ee4:	mov	r2, #1
   22ee8:	mov	r1, #1
   22eec:	bl	31fc4 <flatcc_builder_table_add@@Base>
   22ef0:	str	r0, [fp, #-20]	; 0xffffffec
   22ef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   22ef8:	cmp	r3, #0
   22efc:	beq	23408 <_start@@Base+0xede8>
   22f00:	ldrb	r3, [fp, #-85]	; 0xffffffab
   22f04:	mov	r1, r3
   22f08:	ldr	r0, [fp, #-20]	; 0xffffffec
   22f0c:	bl	14770 <_start@@Base+0x150>
   22f10:	b	23350 <_start@@Base+0xed30>
   22f14:	ldr	r2, [fp, #-120]	; 0xffffff88
   22f18:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22f1c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22f20:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22f24:	str	r0, [fp, #-116]	; 0xffffff8c
   22f28:	b	23350 <_start@@Base+0xed30>
   22f2c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22f30:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22f34:	ldr	r0, [fp, #-112]	; 0xffffff90
   22f38:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   22f3c:	str	r0, [fp, #-116]	; 0xffffff8c
   22f40:	b	23350 <_start@@Base+0xed30>
   22f44:	ldrd	r2, [fp, #-12]
   22f48:	mov	r0, #0
   22f4c:	mvn	r1, #0
   22f50:	and	r2, r2, r0
   22f54:	and	r3, r3, r1
   22f58:	add	r1, pc, #136	; 0x88
   22f5c:	ldrd	r0, [r1]
   22f60:	cmp	r3, r1
   22f64:	cmpeq	r2, r0
   22f68:	bne	2315c <_start@@Base+0xeb3c>
   22f6c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22f70:	str	r3, [fp, #-16]
   22f74:	mov	r3, #4
   22f78:	ldr	r2, [fp, #-120]	; 0xffffff88
   22f7c:	ldr	r1, [fp, #-16]
   22f80:	ldr	r0, [fp, #-112]	; 0xffffff90
   22f84:	bl	15568 <_start@@Base+0xf48>
   22f88:	str	r0, [fp, #-116]	; 0xffffff8c
   22f8c:	ldr	r2, [fp, #-16]
   22f90:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22f94:	cmp	r2, r3
   22f98:	beq	23144 <_start@@Base+0xeb24>
   22f9c:	ldr	r3, [fp, #-112]	; 0xffffff90
   22fa0:	ldr	r0, [r3]
   22fa4:	mvn	r3, #-536870912	; 0xe0000000
   22fa8:	mov	r2, #8
   22fac:	mov	r1, #8
   22fb0:	bl	2f838 <flatcc_builder_start_vector@@Base>
   22fb4:	mov	r3, r0
   22fb8:	cmp	r3, #0
   22fbc:	bne	23410 <_start@@Base+0xedf0>
   22fc0:	sub	r3, fp, #32
   22fc4:	ldr	r2, [fp, #-120]	; 0xffffff88
   22fc8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22fcc:	ldr	r0, [fp, #-112]	; 0xffffff90
   22fd0:	bl	15318 <_start@@Base+0xcf8>
   22fd4:	str	r0, [fp, #-116]	; 0xffffff8c
   22fd8:	b	230e4 <_start@@Base+0xeac4>
   22fdc:	nop			; (mov r0, r0)
   22fe0:	andeq	r0, r0, r0
   22fe4:	ldrvc	r3, [r6, #-1024]!	; 0xfffffc00
   22fe8:	andeq	r0, r0, r0
   22fec:			; <UNDEFINED> instruction: 0x76663634
   22ff0:	andeq	r1, r4, r4, lsl #13
   22ff4:	shsub8vc	pc, r7, pc	; <UNPREDICTABLE>
   22ff8:	ldrvc	r0, [r8, #-0]!
   22ffc:	andeq	r1, r4, r4, lsl r5
   23000:	andeq	r1, r4, ip, lsl r3
   23004:			; <UNDEFINED> instruction: 0xffff0000
   23008:	ldrtvc	r0, [r8], -r0
   2300c:	andeq	r1, r4, r8, asr #2
   23010:	mov	r2, #0
   23014:	mov	r3, #0
   23018:	strd	r2, [fp, #-100]	; 0xffffff9c
   2301c:	ldr	r3, [fp, #-112]	; 0xffffff90
   23020:	ldr	r3, [r3]
   23024:	mov	r1, #1
   23028:	mov	r0, r3
   2302c:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   23030:	str	r0, [fp, #-20]	; 0xffffffec
   23034:	ldr	r3, [fp, #-20]	; 0xffffffec
   23038:	cmp	r3, #0
   2303c:	beq	23418 <_start@@Base+0xedf8>
   23040:	ldr	r3, [fp, #-116]	; 0xffffff8c
   23044:	str	r3, [fp, #-16]
   23048:	sub	r3, fp, #100	; 0x64
   2304c:	ldr	r2, [fp, #-120]	; 0xffffff88
   23050:	ldr	r1, [fp, #-16]
   23054:	ldr	r0, [fp, #-112]	; 0xffffff90
   23058:	bl	3bed4 <flatcc_json_parser_double@@Base>
   2305c:	str	r0, [fp, #-116]	; 0xffffff8c
   23060:	ldr	r2, [fp, #-16]
   23064:	ldr	r3, [fp, #-116]	; 0xffffff8c
   23068:	cmp	r2, r3
   2306c:	bne	230bc <_start@@Base+0xea9c>
   23070:	ldr	r3, [fp, #-116]	; 0xffffff8c
   23074:	str	r3, [fp, #-16]
   23078:	sub	r3, fp, #100	; 0x64
   2307c:	str	r3, [sp]
   23080:	ldr	r3, [pc, #-136]	; 23000 <_start@@Base+0xe9e0>
   23084:	add	r3, pc, r3
   23088:	ldr	r2, [fp, #-120]	; 0xffffff88
   2308c:	ldr	r1, [fp, #-16]
   23090:	ldr	r0, [fp, #-112]	; 0xffffff90
   23094:	bl	17498 <_start@@Base+0x2e78>
   23098:	str	r0, [fp, #-116]	; 0xffffff8c
   2309c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   230a0:	ldr	r3, [fp, #-16]
   230a4:	cmp	r2, r3
   230a8:	beq	23418 <_start@@Base+0xedf8>
   230ac:	ldr	r2, [fp, #-116]	; 0xffffff8c
   230b0:	ldr	r3, [fp, #-120]	; 0xffffff88
   230b4:	cmp	r2, r3
   230b8:	beq	23418 <_start@@Base+0xedf8>
   230bc:	vldr	d7, [fp, #-100]	; 0xffffff9c
   230c0:	vmov.f64	d0, d7
   230c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   230c8:	bl	14afc <_start@@Base+0x4dc>
   230cc:	sub	r3, fp, #32
   230d0:	ldr	r2, [fp, #-120]	; 0xffffff88
   230d4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   230d8:	ldr	r0, [fp, #-112]	; 0xffffff90
   230dc:	bl	15400 <_start@@Base+0xde0>
   230e0:	str	r0, [fp, #-116]	; 0xffffff8c
   230e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   230e8:	cmp	r3, #0
   230ec:	bne	23010 <_start@@Base+0xe9f0>
   230f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   230f4:	ldr	r3, [r3]
   230f8:	mov	r0, r3
   230fc:	bl	30a90 <flatcc_builder_end_vector@@Base>
   23100:	str	r0, [fp, #-24]	; 0xffffffe8
   23104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23108:	cmp	r3, #0
   2310c:	beq	2343c <_start@@Base+0xee1c>
   23110:	ldr	r3, [fp, #-112]	; 0xffffff90
   23114:	ldr	r3, [r3]
   23118:	mov	r1, #11
   2311c:	mov	r0, r3
   23120:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   23124:	str	r0, [fp, #-28]	; 0xffffffe4
   23128:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2312c:	cmp	r3, #0
   23130:	beq	2343c <_start@@Base+0xee1c>
   23134:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2313c:	str	r2, [r3]
   23140:	b	23350 <_start@@Base+0xed30>
   23144:	ldr	r2, [fp, #-120]	; 0xffffff88
   23148:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2314c:	ldr	r0, [fp, #-112]	; 0xffffff90
   23150:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   23154:	str	r0, [fp, #-116]	; 0xffffff8c
   23158:	b	23350 <_start@@Base+0xed30>
   2315c:	ldrd	r2, [fp, #-12]
   23160:	mov	r0, #0
   23164:	ldr	r1, [pc, #-360]	; 23004 <_start@@Base+0xe9e4>
   23168:	and	r2, r2, r0
   2316c:	and	r3, r3, r1
   23170:	mov	r0, #0
   23174:	ldr	r1, [pc, #-372]	; 23008 <_start@@Base+0xe9e8>
   23178:	cmp	r3, r1
   2317c:	cmpeq	r2, r0
   23180:	bne	2333c <_start@@Base+0xed1c>
   23184:	ldr	r3, [fp, #-116]	; 0xffffff8c
   23188:	str	r3, [fp, #-16]
   2318c:	mov	r3, #2
   23190:	ldr	r2, [fp, #-120]	; 0xffffff88
   23194:	ldr	r1, [fp, #-16]
   23198:	ldr	r0, [fp, #-112]	; 0xffffff90
   2319c:	bl	15568 <_start@@Base+0xf48>
   231a0:	str	r0, [fp, #-116]	; 0xffffff8c
   231a4:	ldr	r2, [fp, #-16]
   231a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   231ac:	cmp	r2, r3
   231b0:	beq	23324 <_start@@Base+0xed04>
   231b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   231b8:	ldr	r0, [r3]
   231bc:	mvn	r3, #0
   231c0:	mov	r2, #1
   231c4:	mov	r1, #1
   231c8:	bl	2f838 <flatcc_builder_start_vector@@Base>
   231cc:	mov	r3, r0
   231d0:	cmp	r3, #0
   231d4:	bne	23420 <_start@@Base+0xee00>
   231d8:	sub	r3, fp, #32
   231dc:	ldr	r2, [fp, #-120]	; 0xffffff88
   231e0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   231e4:	ldr	r0, [fp, #-112]	; 0xffffff90
   231e8:	bl	15318 <_start@@Base+0xcf8>
   231ec:	str	r0, [fp, #-116]	; 0xffffff8c
   231f0:	b	232c4 <_start@@Base+0xeca4>
   231f4:	mov	r3, #0
   231f8:	strb	r3, [fp, #-101]	; 0xffffff9b
   231fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   23200:	ldr	r3, [r3]
   23204:	mov	r1, #1
   23208:	mov	r0, r3
   2320c:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   23210:	str	r0, [fp, #-20]	; 0xffffffec
   23214:	ldr	r3, [fp, #-20]	; 0xffffffec
   23218:	cmp	r3, #0
   2321c:	beq	23428 <_start@@Base+0xee08>
   23220:	ldr	r3, [fp, #-116]	; 0xffffff8c
   23224:	str	r3, [fp, #-16]
   23228:	sub	r3, fp, #101	; 0x65
   2322c:	ldr	r2, [fp, #-120]	; 0xffffff88
   23230:	ldr	r1, [fp, #-16]
   23234:	ldr	r0, [fp, #-112]	; 0xffffff90
   23238:	bl	16348 <_start@@Base+0x1d28>
   2323c:	str	r0, [fp, #-116]	; 0xffffff8c
   23240:	ldr	r2, [fp, #-16]
   23244:	ldr	r3, [fp, #-116]	; 0xffffff8c
   23248:	cmp	r2, r3
   2324c:	bne	2329c <_start@@Base+0xec7c>
   23250:	ldr	r3, [fp, #-116]	; 0xffffff8c
   23254:	str	r3, [fp, #-16]
   23258:	sub	r3, fp, #101	; 0x65
   2325c:	str	r3, [sp]
   23260:	ldr	r3, [pc, #-604]	; 2300c <_start@@Base+0xe9ec>
   23264:	add	r3, pc, r3
   23268:	ldr	r2, [fp, #-120]	; 0xffffff88
   2326c:	ldr	r1, [fp, #-16]
   23270:	ldr	r0, [fp, #-112]	; 0xffffff90
   23274:	bl	16ff8 <_start@@Base+0x29d8>
   23278:	str	r0, [fp, #-116]	; 0xffffff8c
   2327c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   23280:	ldr	r3, [fp, #-16]
   23284:	cmp	r2, r3
   23288:	beq	23428 <_start@@Base+0xee08>
   2328c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   23290:	ldr	r3, [fp, #-120]	; 0xffffff88
   23294:	cmp	r2, r3
   23298:	beq	23428 <_start@@Base+0xee08>
   2329c:	ldrsb	r3, [fp, #-101]	; 0xffffff9b
   232a0:	mov	r1, r3
   232a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   232a8:	bl	148f8 <_start@@Base+0x2d8>
   232ac:	sub	r3, fp, #32
   232b0:	ldr	r2, [fp, #-120]	; 0xffffff88
   232b4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   232b8:	ldr	r0, [fp, #-112]	; 0xffffff90
   232bc:	bl	15400 <_start@@Base+0xde0>
   232c0:	str	r0, [fp, #-116]	; 0xffffff8c
   232c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   232c8:	cmp	r3, #0
   232cc:	bne	231f4 <_start@@Base+0xebd4>
   232d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   232d4:	ldr	r3, [r3]
   232d8:	mov	r0, r3
   232dc:	bl	30a90 <flatcc_builder_end_vector@@Base>
   232e0:	str	r0, [fp, #-24]	; 0xffffffe8
   232e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   232e8:	cmp	r3, #0
   232ec:	beq	2343c <_start@@Base+0xee1c>
   232f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   232f4:	ldr	r3, [r3]
   232f8:	mov	r1, #10
   232fc:	mov	r0, r3
   23300:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   23304:	str	r0, [fp, #-28]	; 0xffffffe4
   23308:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2330c:	cmp	r3, #0
   23310:	beq	2343c <_start@@Base+0xee1c>
   23314:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23318:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2331c:	str	r2, [r3]
   23320:	b	23350 <_start@@Base+0xed30>
   23324:	ldr	r2, [fp, #-120]	; 0xffffff88
   23328:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2332c:	ldr	r0, [fp, #-112]	; 0xffffff90
   23330:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   23334:	str	r0, [fp, #-116]	; 0xffffff8c
   23338:	b	23350 <_start@@Base+0xed30>
   2333c:	ldr	r2, [fp, #-120]	; 0xffffff88
   23340:	ldr	r1, [fp, #-116]	; 0xffffff8c
   23344:	ldr	r0, [fp, #-112]	; 0xffffff90
   23348:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2334c:	str	r0, [fp, #-116]	; 0xffffff8c
   23350:	sub	r3, fp, #32
   23354:	ldr	r2, [fp, #-120]	; 0xffffff88
   23358:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2335c:	ldr	r0, [fp, #-112]	; 0xffffff90
   23360:	bl	151b0 <_start@@Base+0xb90>
   23364:	str	r0, [fp, #-116]	; 0xffffff8c
   23368:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2336c:	cmp	r3, #0
   23370:	bne	22018 <_start@@Base+0xd9f8>
   23374:	ldr	r3, [fp, #-112]	; 0xffffff90
   23378:	ldr	r3, [r3, #24]
   2337c:	cmp	r3, #0
   23380:	bne	23430 <_start@@Base+0xee10>
   23384:	ldr	r3, [fp, #-112]	; 0xffffff90
   23388:	ldr	r3, [r3]
   2338c:	mov	r0, r3
   23390:	bl	30634 <flatcc_builder_end_table@@Base>
   23394:	mov	r2, r0
   23398:	ldr	r3, [fp, #-124]	; 0xffffff84
   2339c:	str	r2, [r3]
   233a0:	ldr	r3, [fp, #-124]	; 0xffffff84
   233a4:	ldr	r3, [r3]
   233a8:	cmp	r3, #0
   233ac:	beq	23438 <_start@@Base+0xee18>
   233b0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   233b4:	b	23454 <_start@@Base+0xee34>
   233b8:	nop			; (mov r0, r0)
   233bc:	b	2343c <_start@@Base+0xee1c>
   233c0:	nop			; (mov r0, r0)
   233c4:	b	2343c <_start@@Base+0xee1c>
   233c8:	nop			; (mov r0, r0)
   233cc:	b	2343c <_start@@Base+0xee1c>
   233d0:	nop			; (mov r0, r0)
   233d4:	b	2343c <_start@@Base+0xee1c>
   233d8:	nop			; (mov r0, r0)
   233dc:	b	2343c <_start@@Base+0xee1c>
   233e0:	nop			; (mov r0, r0)
   233e4:	b	2343c <_start@@Base+0xee1c>
   233e8:	nop			; (mov r0, r0)
   233ec:	b	2343c <_start@@Base+0xee1c>
   233f0:	nop			; (mov r0, r0)
   233f4:	b	2343c <_start@@Base+0xee1c>
   233f8:	nop			; (mov r0, r0)
   233fc:	b	2343c <_start@@Base+0xee1c>
   23400:	nop			; (mov r0, r0)
   23404:	b	2343c <_start@@Base+0xee1c>
   23408:	nop			; (mov r0, r0)
   2340c:	b	2343c <_start@@Base+0xee1c>
   23410:	nop			; (mov r0, r0)
   23414:	b	2343c <_start@@Base+0xee1c>
   23418:	nop			; (mov r0, r0)
   2341c:	b	2343c <_start@@Base+0xee1c>
   23420:	nop			; (mov r0, r0)
   23424:	b	2343c <_start@@Base+0xee1c>
   23428:	nop			; (mov r0, r0)
   2342c:	b	2343c <_start@@Base+0xee1c>
   23430:	nop			; (mov r0, r0)
   23434:	b	2343c <_start@@Base+0xee1c>
   23438:	nop			; (mov r0, r0)
   2343c:	mov	r3, #33	; 0x21
   23440:	ldr	r2, [fp, #-120]	; 0xffffff88
   23444:	ldr	r1, [fp, #-116]	; 0xffffff8c
   23448:	ldr	r0, [fp, #-112]	; 0xffffff90
   2344c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   23450:	mov	r3, r0
   23454:	mov	r0, r3
   23458:	sub	sp, fp, #4
   2345c:	pop	{fp, pc}
   23460:	push	{fp, lr}
   23464:	add	fp, sp, #4
   23468:	sub	sp, sp, #48	; 0x30
   2346c:	str	r0, [fp, #-32]	; 0xffffffe0
   23470:	str	r1, [fp, #-36]	; 0xffffffdc
   23474:	str	r2, [fp, #-40]	; 0xffffffd8
   23478:	str	r3, [fp, #-44]	; 0xffffffd4
   2347c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23480:	mov	r2, #0
   23484:	str	r2, [r3]
   23488:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2348c:	ldr	r3, [r3]
   23490:	mov	r1, #1
   23494:	mov	r0, r3
   23498:	bl	2fad0 <flatcc_builder_start_table@@Base>
   2349c:	mov	r3, r0
   234a0:	cmp	r3, #0
   234a4:	bne	2374c <_start@@Base+0xf12c>
   234a8:	sub	r3, fp, #24
   234ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   234b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   234b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   234b8:	bl	150c8 <_start@@Base+0xaa8>
   234bc:	str	r0, [fp, #-36]	; 0xffffffdc
   234c0:	b	236fc <_start@@Base+0xf0dc>
   234c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   234c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   234cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   234d0:	bl	14cb8 <_start@@Base+0x698>
   234d4:	str	r0, [fp, #-36]	; 0xffffffdc
   234d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   234dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   234e0:	bl	14f9c <_start@@Base+0x97c>
   234e4:	strd	r0, [fp, #-12]
   234e8:	ldrd	r2, [fp, #-12]
   234ec:	add	r1, pc, #668	; 0x29c
   234f0:	ldrd	r0, [r1]
   234f4:	cmp	r3, r1
   234f8:	cmpeq	r2, r0
   234fc:	bne	236d0 <_start@@Base+0xf0b0>
   23500:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23504:	add	r3, r3, #8
   23508:	str	r3, [fp, #-36]	; 0xffffffdc
   2350c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23510:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23514:	bl	14f9c <_start@@Base+0x97c>
   23518:	strd	r0, [fp, #-12]
   2351c:	ldrd	r2, [fp, #-12]
   23520:	add	r1, pc, #624	; 0x270
   23524:	ldrd	r0, [r1]
   23528:	cmp	r3, r1
   2352c:	cmpeq	r2, r0
   23530:	bne	236b8 <_start@@Base+0xf098>
   23534:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23538:	add	r3, r3, #8
   2353c:	str	r3, [fp, #-36]	; 0xffffffdc
   23540:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23544:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23548:	bl	14f9c <_start@@Base+0x97c>
   2354c:	strd	r0, [fp, #-12]
   23550:	ldrd	r2, [fp, #-12]
   23554:	mov	r0, #0
   23558:	mvn	r1, #255	; 0xff
   2355c:	and	r2, r2, r0
   23560:	and	r3, r3, r1
   23564:	add	r1, pc, #564	; 0x234
   23568:	ldrd	r0, [r1]
   2356c:	cmp	r3, r1
   23570:	cmpeq	r2, r0
   23574:	bne	236a0 <_start@@Base+0xf080>
   23578:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2357c:	str	r3, [fp, #-16]
   23580:	mov	r3, #3
   23584:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23588:	ldr	r1, [fp, #-16]
   2358c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23590:	bl	15568 <_start@@Base+0xf48>
   23594:	str	r0, [fp, #-36]	; 0xffffffdc
   23598:	ldr	r2, [fp, #-16]
   2359c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   235a0:	cmp	r2, r3
   235a4:	beq	23688 <_start@@Base+0xf068>
   235a8:	mov	r3, #0
   235ac:	str	r3, [fp, #-28]	; 0xffffffe4
   235b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   235b4:	str	r3, [fp, #-16]
   235b8:	sub	r3, fp, #28
   235bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   235c0:	ldr	r1, [fp, #-16]
   235c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   235c8:	bl	161a8 <_start@@Base+0x1b88>
   235cc:	str	r0, [fp, #-36]	; 0xffffffdc
   235d0:	ldr	r2, [fp, #-16]
   235d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   235d8:	cmp	r2, r3
   235dc:	bne	2362c <_start@@Base+0xf00c>
   235e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   235e4:	str	r3, [fp, #-16]
   235e8:	sub	r3, fp, #28
   235ec:	str	r3, [sp]
   235f0:	ldr	r3, [pc, #432]	; 237a8 <_start@@Base+0xf188>
   235f4:	add	r3, pc, r3
   235f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   235fc:	ldr	r1, [fp, #-16]
   23600:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23604:	bl	16ce0 <_start@@Base+0x26c0>
   23608:	str	r0, [fp, #-36]	; 0xffffffdc
   2360c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23610:	ldr	r3, [fp, #-16]
   23614:	cmp	r2, r3
   23618:	beq	23768 <_start@@Base+0xf148>
   2361c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23620:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23624:	cmp	r2, r3
   23628:	beq	23768 <_start@@Base+0xf148>
   2362c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23630:	cmp	r3, #0
   23634:	bne	2364c <_start@@Base+0xf02c>
   23638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2363c:	ldr	r3, [r3, #8]
   23640:	and	r3, r3, #2
   23644:	cmp	r3, #0
   23648:	beq	236e4 <_start@@Base+0xf0c4>
   2364c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23650:	ldr	r0, [r3]
   23654:	mov	r3, #4
   23658:	mov	r2, #4
   2365c:	mov	r1, #0
   23660:	bl	31fc4 <flatcc_builder_table_add@@Base>
   23664:	str	r0, [fp, #-20]	; 0xffffffec
   23668:	ldr	r3, [fp, #-20]	; 0xffffffec
   2366c:	cmp	r3, #0
   23670:	beq	23754 <_start@@Base+0xf134>
   23674:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23678:	mov	r1, r3
   2367c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23680:	bl	149c4 <_start@@Base+0x3a4>
   23684:	b	236e4 <_start@@Base+0xf0c4>
   23688:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2368c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23690:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23694:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   23698:	str	r0, [fp, #-36]	; 0xffffffdc
   2369c:	b	236e4 <_start@@Base+0xf0c4>
   236a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   236a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   236a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   236ac:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   236b0:	str	r0, [fp, #-36]	; 0xffffffdc
   236b4:	b	236e4 <_start@@Base+0xf0c4>
   236b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   236bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   236c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   236c4:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   236c8:	str	r0, [fp, #-36]	; 0xffffffdc
   236cc:	b	236e4 <_start@@Base+0xf0c4>
   236d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   236d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   236d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   236dc:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   236e0:	str	r0, [fp, #-36]	; 0xffffffdc
   236e4:	sub	r3, fp, #24
   236e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   236ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   236f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   236f4:	bl	151b0 <_start@@Base+0xb90>
   236f8:	str	r0, [fp, #-36]	; 0xffffffdc
   236fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23700:	cmp	r3, #0
   23704:	bne	234c4 <_start@@Base+0xeea4>
   23708:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2370c:	ldr	r3, [r3, #24]
   23710:	cmp	r3, #0
   23714:	bne	2375c <_start@@Base+0xf13c>
   23718:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2371c:	ldr	r3, [r3]
   23720:	mov	r0, r3
   23724:	bl	30634 <flatcc_builder_end_table@@Base>
   23728:	mov	r2, r0
   2372c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23730:	str	r2, [r3]
   23734:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23738:	ldr	r3, [r3]
   2373c:	cmp	r3, #0
   23740:	beq	23764 <_start@@Base+0xf144>
   23744:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23748:	b	23780 <_start@@Base+0xf160>
   2374c:	nop			; (mov r0, r0)
   23750:	b	23768 <_start@@Base+0xf148>
   23754:	nop			; (mov r0, r0)
   23758:	b	23768 <_start@@Base+0xf148>
   2375c:	nop			; (mov r0, r0)
   23760:	b	23768 <_start@@Base+0xf148>
   23764:	nop			; (mov r0, r0)
   23768:	mov	r3, #33	; 0x21
   2376c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23770:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23778:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   2377c:	mov	r3, r0
   23780:	mov	r0, r3
   23784:	sub	sp, fp, #4
   23788:	pop	{fp, pc}
   2378c:	nop			; (mov r0, r0)
   23790:	ldrbvs	r6, [pc], #-372	; 23798 <_start@@Base+0xf178>
   23794:	cmnvc	r7, #456	; 0x1c8
   23798:	svcpl	0x0064616d
   2379c:	strbtvc	r6, [r1], #-875	; 0xfffffc95
   237a0:	andeq	r0, r0, r0
   237a4:	cmnvs	r7, r0, lsl #10
   237a8:	andeq	r0, r4, r4, asr #27
   237ac:	push	{fp, lr}
   237b0:	add	fp, sp, #4
   237b4:	sub	sp, sp, #48	; 0x30
   237b8:	str	r0, [fp, #-32]	; 0xffffffe0
   237bc:	str	r1, [fp, #-36]	; 0xffffffdc
   237c0:	str	r2, [fp, #-40]	; 0xffffffd8
   237c4:	str	r3, [fp, #-44]	; 0xffffffd4
   237c8:	sub	r3, fp, #24
   237cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   237d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   237d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   237d8:	bl	150c8 <_start@@Base+0xaa8>
   237dc:	str	r0, [fp, #-36]	; 0xffffffdc
   237e0:	b	23990 <_start@@Base+0xf370>
   237e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   237e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   237ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   237f0:	bl	14cb8 <_start@@Base+0x698>
   237f4:	str	r0, [fp, #-36]	; 0xffffffdc
   237f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   237fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23800:	bl	14f9c <_start@@Base+0x97c>
   23804:	strd	r0, [fp, #-12]
   23808:	ldrd	r2, [fp, #-12]
   2380c:	add	r1, pc, #436	; 0x1b4
   23810:	ldrd	r0, [r1]
   23814:	cmp	r3, r1
   23818:	cmpeq	r2, r0
   2381c:	bne	23964 <_start@@Base+0xf344>
   23820:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23824:	add	r3, r3, #8
   23828:	str	r3, [fp, #-36]	; 0xffffffdc
   2382c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23834:	bl	14f9c <_start@@Base+0x97c>
   23838:	strd	r0, [fp, #-12]
   2383c:	ldrd	r2, [fp, #-12]
   23840:	mov	r0, #0
   23844:	mvn	r1, #255	; 0xff
   23848:	and	r2, r2, r0
   2384c:	and	r3, r3, r1
   23850:	add	r1, pc, #376	; 0x178
   23854:	ldrd	r0, [r1]
   23858:	cmp	r3, r1
   2385c:	cmpeq	r2, r0
   23860:	bne	2394c <_start@@Base+0xf32c>
   23864:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23868:	str	r3, [fp, #-16]
   2386c:	mov	r3, #3
   23870:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23874:	ldr	r1, [fp, #-16]
   23878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2387c:	bl	15568 <_start@@Base+0xf48>
   23880:	str	r0, [fp, #-36]	; 0xffffffdc
   23884:	ldr	r2, [fp, #-16]
   23888:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2388c:	cmp	r2, r3
   23890:	beq	23934 <_start@@Base+0xf314>
   23894:	mov	r3, #0
   23898:	strh	r3, [fp, #-26]	; 0xffffffe6
   2389c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   238a0:	str	r3, [fp, #-20]	; 0xffffffec
   238a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   238a8:	str	r3, [fp, #-16]
   238ac:	sub	r3, fp, #26
   238b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   238b4:	ldr	r1, [fp, #-16]
   238b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   238bc:	bl	15f34 <_start@@Base+0x1914>
   238c0:	str	r0, [fp, #-36]	; 0xffffffdc
   238c4:	ldr	r2, [fp, #-16]
   238c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   238cc:	cmp	r2, r3
   238d0:	bne	23920 <_start@@Base+0xf300>
   238d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   238d8:	str	r3, [fp, #-16]
   238dc:	sub	r3, fp, #26
   238e0:	str	r3, [sp]
   238e4:	ldr	r3, [pc, #236]	; 239d8 <_start@@Base+0xf3b8>
   238e8:	add	r3, pc, r3
   238ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   238f0:	ldr	r1, [fp, #-16]
   238f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   238f8:	bl	16840 <_start@@Base+0x2220>
   238fc:	str	r0, [fp, #-36]	; 0xffffffdc
   23900:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23904:	ldr	r3, [fp, #-16]
   23908:	cmp	r2, r3
   2390c:	beq	239a4 <_start@@Base+0xf384>
   23910:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23914:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23918:	cmp	r2, r3
   2391c:	beq	239a4 <_start@@Base+0xf384>
   23920:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   23924:	mov	r1, r3
   23928:	ldr	r0, [fp, #-20]	; 0xffffffec
   2392c:	bl	147d8 <_start@@Base+0x1b8>
   23930:	b	23978 <_start@@Base+0xf358>
   23934:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23938:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2393c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23940:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   23944:	str	r0, [fp, #-36]	; 0xffffffdc
   23948:	b	23978 <_start@@Base+0xf358>
   2394c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23950:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23954:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23958:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2395c:	str	r0, [fp, #-36]	; 0xffffffdc
   23960:	b	23978 <_start@@Base+0xf358>
   23964:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23968:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2396c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23970:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   23974:	str	r0, [fp, #-36]	; 0xffffffdc
   23978:	sub	r3, fp, #24
   2397c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23980:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23984:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23988:	bl	151b0 <_start@@Base+0xb90>
   2398c:	str	r0, [fp, #-36]	; 0xffffffdc
   23990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23994:	cmp	r3, #0
   23998:	bne	237e4 <_start@@Base+0xf1c4>
   2399c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   239a0:	b	239bc <_start@@Base+0xf39c>
   239a4:	mov	r3, #33	; 0x21
   239a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   239ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   239b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   239b4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   239b8:	mov	r3, r0
   239bc:	mov	r0, r3
   239c0:	sub	sp, fp, #4
   239c4:	pop	{fp, pc}
   239c8:	svcpl	0x006c656e
   239cc:	stmdavs	r1!, {r1, r4, r5, r6, r8, fp, sp, lr}^
   239d0:	andeq	r0, r0, r0
   239d4:	ldrbvs	r6, [r4, -r0, lsl #16]!
   239d8:	ldrdeq	r0, [r4], -ip
   239dc:	push	{fp, lr}
   239e0:	add	fp, sp, #4
   239e4:	sub	sp, sp, #24
   239e8:	str	r0, [fp, #-16]
   239ec:	str	r1, [fp, #-20]	; 0xffffffec
   239f0:	str	r2, [fp, #-24]	; 0xffffffe8
   239f4:	str	r3, [fp, #-28]	; 0xffffffe4
   239f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   239fc:	mov	r2, #0
   23a00:	str	r2, [r3]
   23a04:	ldr	r3, [fp, #-16]
   23a08:	ldr	r3, [r3]
   23a0c:	mov	r2, #2
   23a10:	mov	r1, #2
   23a14:	mov	r0, r3
   23a18:	bl	2ed3c <flatcc_builder_start_struct@@Base>
   23a1c:	str	r0, [fp, #-8]
   23a20:	ldr	r3, [fp, #-8]
   23a24:	cmp	r3, #0
   23a28:	beq	23a88 <_start@@Base+0xf468>
   23a2c:	ldr	r3, [fp, #-8]
   23a30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23a34:	ldr	r1, [fp, #-20]	; 0xffffffec
   23a38:	ldr	r0, [fp, #-16]
   23a3c:	bl	237ac <_start@@Base+0xf18c>
   23a40:	str	r0, [fp, #-20]	; 0xffffffec
   23a44:	ldr	r2, [fp, #-20]	; 0xffffffec
   23a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23a4c:	cmp	r2, r3
   23a50:	beq	23a8c <_start@@Base+0xf46c>
   23a54:	ldr	r3, [fp, #-16]
   23a58:	ldr	r3, [r3]
   23a5c:	mov	r0, r3
   23a60:	bl	2eddc <flatcc_builder_end_struct@@Base>
   23a64:	mov	r2, r0
   23a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23a6c:	str	r2, [r3]
   23a70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23a74:	ldr	r3, [r3]
   23a78:	cmp	r3, #0
   23a7c:	beq	23a8c <_start@@Base+0xf46c>
   23a80:	ldr	r3, [fp, #-20]	; 0xffffffec
   23a84:	b	23aa4 <_start@@Base+0xf484>
   23a88:	nop			; (mov r0, r0)
   23a8c:	mov	r3, #33	; 0x21
   23a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   23a98:	ldr	r0, [fp, #-16]
   23a9c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   23aa0:	mov	r3, r0
   23aa4:	mov	r0, r3
   23aa8:	sub	sp, fp, #4
   23aac:	pop	{fp, pc}
   23ab0:	push	{fp, lr}
   23ab4:	add	fp, sp, #4
   23ab8:	sub	sp, sp, #48	; 0x30
   23abc:	str	r0, [fp, #-32]	; 0xffffffe0
   23ac0:	str	r1, [fp, #-36]	; 0xffffffdc
   23ac4:	str	r2, [fp, #-40]	; 0xffffffd8
   23ac8:	str	r3, [fp, #-44]	; 0xffffffd4
   23acc:	sub	r3, fp, #24
   23ad0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23ad4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23ad8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23adc:	bl	150c8 <_start@@Base+0xaa8>
   23ae0:	str	r0, [fp, #-36]	; 0xffffffdc
   23ae4:	b	23c94 <_start@@Base+0xf674>
   23ae8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23aec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23af4:	bl	14cb8 <_start@@Base+0x698>
   23af8:	str	r0, [fp, #-36]	; 0xffffffdc
   23afc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23b00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b04:	bl	14f9c <_start@@Base+0x97c>
   23b08:	strd	r0, [fp, #-12]
   23b0c:	ldrd	r2, [fp, #-12]
   23b10:	add	r1, pc, #440	; 0x1b8
   23b14:	ldrd	r0, [r1]
   23b18:	cmp	r3, r1
   23b1c:	cmpeq	r2, r0
   23b20:	bne	23c68 <_start@@Base+0xf648>
   23b24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23b28:	add	r3, r3, #8
   23b2c:	str	r3, [fp, #-36]	; 0xffffffdc
   23b30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23b34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23b38:	bl	14f9c <_start@@Base+0x97c>
   23b3c:	strd	r0, [fp, #-12]
   23b40:	ldrd	r2, [fp, #-12]
   23b44:	mov	r0, #0
   23b48:	ldr	r1, [pc, #392]	; 23cd8 <_start@@Base+0xf6b8>
   23b4c:	and	r2, r2, r0
   23b50:	and	r3, r3, r1
   23b54:	mov	r0, #0
   23b58:	ldr	r1, [pc, #380]	; 23cdc <_start@@Base+0xf6bc>
   23b5c:	cmp	r3, r1
   23b60:	cmpeq	r2, r0
   23b64:	bne	23c50 <_start@@Base+0xf630>
   23b68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23b6c:	str	r3, [fp, #-16]
   23b70:	mov	r3, #2
   23b74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23b78:	ldr	r1, [fp, #-16]
   23b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23b80:	bl	15568 <_start@@Base+0xf48>
   23b84:	str	r0, [fp, #-36]	; 0xffffffdc
   23b88:	ldr	r2, [fp, #-16]
   23b8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23b90:	cmp	r2, r3
   23b94:	beq	23c38 <_start@@Base+0xf618>
   23b98:	mov	r3, #0
   23b9c:	str	r3, [fp, #-28]	; 0xffffffe4
   23ba0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23ba4:	str	r3, [fp, #-20]	; 0xffffffec
   23ba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23bac:	str	r3, [fp, #-16]
   23bb0:	sub	r3, fp, #28
   23bb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23bb8:	ldr	r1, [fp, #-16]
   23bbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23bc0:	bl	161a8 <_start@@Base+0x1b88>
   23bc4:	str	r0, [fp, #-36]	; 0xffffffdc
   23bc8:	ldr	r2, [fp, #-16]
   23bcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23bd0:	cmp	r2, r3
   23bd4:	bne	23c24 <_start@@Base+0xf604>
   23bd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23bdc:	str	r3, [fp, #-16]
   23be0:	sub	r3, fp, #28
   23be4:	str	r3, [sp]
   23be8:	ldr	r3, [pc, #240]	; 23ce0 <_start@@Base+0xf6c0>
   23bec:	add	r3, pc, r3
   23bf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23bf4:	ldr	r1, [fp, #-16]
   23bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23bfc:	bl	16ce0 <_start@@Base+0x26c0>
   23c00:	str	r0, [fp, #-36]	; 0xffffffdc
   23c04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23c08:	ldr	r3, [fp, #-16]
   23c0c:	cmp	r2, r3
   23c10:	beq	23ca8 <_start@@Base+0xf688>
   23c14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23c18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23c1c:	cmp	r2, r3
   23c20:	beq	23ca8 <_start@@Base+0xf688>
   23c24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23c28:	mov	r1, r3
   23c2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23c30:	bl	149c4 <_start@@Base+0x3a4>
   23c34:	b	23c7c <_start@@Base+0xf65c>
   23c38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23c3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c44:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   23c48:	str	r0, [fp, #-36]	; 0xffffffdc
   23c4c:	b	23c7c <_start@@Base+0xf65c>
   23c50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23c54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23c58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c5c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   23c60:	str	r0, [fp, #-36]	; 0xffffffdc
   23c64:	b	23c7c <_start@@Base+0xf65c>
   23c68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23c6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23c70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c74:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   23c78:	str	r0, [fp, #-36]	; 0xffffffdc
   23c7c:	sub	r3, fp, #24
   23c80:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23c84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23c88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c8c:	bl	151b0 <_start@@Base+0xb90>
   23c90:	str	r0, [fp, #-36]	; 0xffffffdc
   23c94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23c98:	cmp	r3, #0
   23c9c:	bne	23ae8 <_start@@Base+0xf4c8>
   23ca0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23ca4:	b	23cc0 <_start@@Base+0xf6a0>
   23ca8:	mov	r3, #33	; 0x21
   23cac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23cb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23cb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23cb8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   23cbc:	mov	r3, r0
   23cc0:	mov	r0, r3
   23cc4:	sub	sp, fp, #4
   23cc8:	pop	{fp, pc}
   23ccc:	nop			; (mov r0, r0)
   23cd0:	cmpvc	pc, #1342177286	; 0x50000006
   23cd4:	rsbvs	r6, pc, #428	; 0x1ac
   23cd8:			; <UNDEFINED> instruction: 0xffff0000
   23cdc:	cmnvs	r4, r0
   23ce0:	andeq	r0, r4, r4, ror #15
   23ce4:	push	{fp, lr}
   23ce8:	add	fp, sp, #4
   23cec:	sub	sp, sp, #24
   23cf0:	str	r0, [fp, #-16]
   23cf4:	str	r1, [fp, #-20]	; 0xffffffec
   23cf8:	str	r2, [fp, #-24]	; 0xffffffe8
   23cfc:	str	r3, [fp, #-28]	; 0xffffffe4
   23d00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23d04:	mov	r2, #0
   23d08:	str	r2, [r3]
   23d0c:	ldr	r3, [fp, #-16]
   23d10:	ldr	r3, [r3]
   23d14:	mov	r2, #4
   23d18:	mov	r1, #4
   23d1c:	mov	r0, r3
   23d20:	bl	2ed3c <flatcc_builder_start_struct@@Base>
   23d24:	str	r0, [fp, #-8]
   23d28:	ldr	r3, [fp, #-8]
   23d2c:	cmp	r3, #0
   23d30:	beq	23d90 <_start@@Base+0xf770>
   23d34:	ldr	r3, [fp, #-8]
   23d38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23d3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d40:	ldr	r0, [fp, #-16]
   23d44:	bl	23ab0 <_start@@Base+0xf490>
   23d48:	str	r0, [fp, #-20]	; 0xffffffec
   23d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   23d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23d54:	cmp	r2, r3
   23d58:	beq	23d94 <_start@@Base+0xf774>
   23d5c:	ldr	r3, [fp, #-16]
   23d60:	ldr	r3, [r3]
   23d64:	mov	r0, r3
   23d68:	bl	2eddc <flatcc_builder_end_struct@@Base>
   23d6c:	mov	r2, r0
   23d70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23d74:	str	r2, [r3]
   23d78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23d7c:	ldr	r3, [r3]
   23d80:	cmp	r3, #0
   23d84:	beq	23d94 <_start@@Base+0xf774>
   23d88:	ldr	r3, [fp, #-20]	; 0xffffffec
   23d8c:	b	23dac <_start@@Base+0xf78c>
   23d90:	nop			; (mov r0, r0)
   23d94:	mov	r3, #33	; 0x21
   23d98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23d9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23da0:	ldr	r0, [fp, #-16]
   23da4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   23da8:	mov	r3, r0
   23dac:	mov	r0, r3
   23db0:	sub	sp, fp, #4
   23db4:	pop	{fp, pc}
   23db8:	push	{fp, lr}
   23dbc:	add	fp, sp, #4
   23dc0:	sub	sp, sp, #16
   23dc4:	str	r0, [fp, #-8]
   23dc8:	str	r1, [fp, #-12]
   23dcc:	str	r2, [fp, #-16]
   23dd0:	strb	r3, [fp, #-17]	; 0xffffffef
   23dd4:	ldr	r3, [fp, #4]
   23dd8:	mov	r2, #0
   23ddc:	str	r2, [r3]
   23de0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   23de4:	cmp	r3, #9
   23de8:	beq	23e7c <_start@@Base+0xf85c>
   23dec:	cmp	r3, #9
   23df0:	bgt	23e10 <_start@@Base+0xf7f0>
   23df4:	cmp	r3, #2
   23df8:	beq	23e44 <_start@@Base+0xf824>
   23dfc:	cmp	r3, #8
   23e00:	beq	23e60 <_start@@Base+0xf840>
   23e04:	cmp	r3, #0
   23e08:	beq	23e2c <_start@@Base+0xf80c>
   23e0c:	b	23eec <_start@@Base+0xf8cc>
   23e10:	cmp	r3, #11
   23e14:	beq	23eb4 <_start@@Base+0xf894>
   23e18:	cmp	r3, #11
   23e1c:	blt	23e98 <_start@@Base+0xf878>
   23e20:	cmp	r3, #255	; 0xff
   23e24:	beq	23ed0 <_start@@Base+0xf8b0>
   23e28:	b	23eec <_start@@Base+0xf8cc>
   23e2c:	ldr	r2, [fp, #-16]
   23e30:	ldr	r1, [fp, #-12]
   23e34:	ldr	r0, [fp, #-8]
   23e38:	bl	15d0c <_start@@Base+0x16ec>
   23e3c:	mov	r3, r0
   23e40:	b	23f7c <_start@@Base+0xf95c>
   23e44:	ldr	r3, [fp, #4]
   23e48:	ldr	r2, [fp, #-16]
   23e4c:	ldr	r1, [fp, #-12]
   23e50:	ldr	r0, [fp, #-8]
   23e54:	bl	23460 <_start@@Base+0xee40>
   23e58:	str	r0, [fp, #-12]
   23e5c:	b	23f34 <_start@@Base+0xf914>
   23e60:	ldr	r3, [fp, #4]
   23e64:	ldr	r2, [fp, #-16]
   23e68:	ldr	r1, [fp, #-12]
   23e6c:	ldr	r0, [fp, #-8]
   23e70:	bl	239dc <_start@@Base+0xf3bc>
   23e74:	str	r0, [fp, #-12]
   23e78:	b	23f34 <_start@@Base+0xf914>
   23e7c:	ldr	r3, [fp, #4]
   23e80:	ldr	r2, [fp, #-16]
   23e84:	ldr	r1, [fp, #-12]
   23e88:	ldr	r0, [fp, #-8]
   23e8c:	bl	23ce4 <_start@@Base+0xf6c4>
   23e90:	str	r0, [fp, #-12]
   23e94:	b	23f34 <_start@@Base+0xf914>
   23e98:	ldr	r3, [fp, #4]
   23e9c:	ldr	r2, [fp, #-16]
   23ea0:	ldr	r1, [fp, #-12]
   23ea4:	ldr	r0, [fp, #-8]
   23ea8:	bl	23ce4 <_start@@Base+0xf6c4>
   23eac:	str	r0, [fp, #-12]
   23eb0:	b	23f34 <_start@@Base+0xf914>
   23eb4:	ldr	r3, [fp, #4]
   23eb8:	ldr	r2, [fp, #-16]
   23ebc:	ldr	r1, [fp, #-12]
   23ec0:	ldr	r0, [fp, #-8]
   23ec4:	bl	3cae8 <flatcc_json_parser_build_string@@Base>
   23ec8:	str	r0, [fp, #-12]
   23ecc:	b	23f34 <_start@@Base+0xf914>
   23ed0:	ldr	r3, [fp, #4]
   23ed4:	ldr	r2, [fp, #-16]
   23ed8:	ldr	r1, [fp, #-12]
   23edc:	ldr	r0, [fp, #-8]
   23ee0:	bl	3cae8 <flatcc_json_parser_build_string@@Base>
   23ee4:	str	r0, [fp, #-12]
   23ee8:	b	23f34 <_start@@Base+0xf914>
   23eec:	ldr	r3, [fp, #-8]
   23ef0:	ldr	r3, [r3, #8]
   23ef4:	and	r3, r3, #1
   23ef8:	cmp	r3, #0
   23efc:	bne	23f1c <_start@@Base+0xf8fc>
   23f00:	mov	r3, #15
   23f04:	ldr	r2, [fp, #-16]
   23f08:	ldr	r1, [fp, #-12]
   23f0c:	ldr	r0, [fp, #-8]
   23f10:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   23f14:	mov	r3, r0
   23f18:	b	23f7c <_start@@Base+0xf95c>
   23f1c:	ldr	r2, [fp, #-16]
   23f20:	ldr	r1, [fp, #-12]
   23f24:	ldr	r0, [fp, #-8]
   23f28:	bl	3c210 <flatcc_json_parser_generic_json@@Base>
   23f2c:	mov	r3, r0
   23f30:	b	23f7c <_start@@Base+0xf95c>
   23f34:	ldr	r3, [fp, #-8]
   23f38:	ldr	r3, [r3, #24]
   23f3c:	cmp	r3, #0
   23f40:	beq	23f4c <_start@@Base+0xf92c>
   23f44:	ldr	r3, [fp, #-12]
   23f48:	b	23f7c <_start@@Base+0xf95c>
   23f4c:	ldr	r3, [fp, #4]
   23f50:	ldr	r3, [r3]
   23f54:	cmp	r3, #0
   23f58:	bne	23f78 <_start@@Base+0xf958>
   23f5c:	mov	r3, #33	; 0x21
   23f60:	ldr	r2, [fp, #-16]
   23f64:	ldr	r1, [fp, #-12]
   23f68:	ldr	r0, [fp, #-8]
   23f6c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   23f70:	mov	r3, r0
   23f74:	b	23f7c <_start@@Base+0xf95c>
   23f78:	ldr	r3, [fp, #-12]
   23f7c:	mov	r0, r3
   23f80:	sub	sp, fp, #4
   23f84:	pop	{fp, pc}
   23f88:	push	{fp}		; (str fp, [sp, #-4]!)
   23f8c:	add	fp, sp, #0
   23f90:	sub	sp, sp, #12
   23f94:	mov	r3, r0
   23f98:	strb	r3, [fp, #-5]
   23f9c:	ldrb	r3, [fp, #-5]
   23fa0:	cmp	r3, #9
   23fa4:	beq	24000 <_start@@Base+0xf9e0>
   23fa8:	cmp	r3, #9
   23fac:	bgt	23fcc <_start@@Base+0xf9ac>
   23fb0:	cmp	r3, #2
   23fb4:	beq	23ff0 <_start@@Base+0xf9d0>
   23fb8:	cmp	r3, #8
   23fbc:	beq	23ff8 <_start@@Base+0xf9d8>
   23fc0:	cmp	r3, #0
   23fc4:	beq	23fe8 <_start@@Base+0xf9c8>
   23fc8:	b	24020 <_start@@Base+0xfa00>
   23fcc:	cmp	r3, #11
   23fd0:	beq	24010 <_start@@Base+0xf9f0>
   23fd4:	cmp	r3, #11
   23fd8:	blt	24008 <_start@@Base+0xf9e8>
   23fdc:	cmp	r3, #255	; 0xff
   23fe0:	beq	24018 <_start@@Base+0xf9f8>
   23fe4:	b	24020 <_start@@Base+0xfa00>
   23fe8:	mov	r3, #1
   23fec:	b	24024 <_start@@Base+0xfa04>
   23ff0:	mov	r3, #1
   23ff4:	b	24024 <_start@@Base+0xfa04>
   23ff8:	mov	r3, #1
   23ffc:	b	24024 <_start@@Base+0xfa04>
   24000:	mov	r3, #1
   24004:	b	24024 <_start@@Base+0xfa04>
   24008:	mov	r3, #1
   2400c:	b	24024 <_start@@Base+0xfa04>
   24010:	mov	r3, #1
   24014:	b	24024 <_start@@Base+0xfa04>
   24018:	mov	r3, #1
   2401c:	b	24024 <_start@@Base+0xfa04>
   24020:	mov	r3, #0
   24024:	mov	r0, r3
   24028:	add	sp, fp, #0
   2402c:	pop	{fp}		; (ldr fp, [sp], #4)
   24030:	bx	lr
   24034:	push	{fp, lr}
   24038:	add	fp, sp, #4
   2403c:	sub	sp, sp, #48	; 0x30
   24040:	str	r0, [fp, #-32]	; 0xffffffe0
   24044:	str	r1, [fp, #-36]	; 0xffffffdc
   24048:	str	r2, [fp, #-40]	; 0xffffffd8
   2404c:	str	r3, [fp, #-44]	; 0xffffffd4
   24050:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24054:	str	r3, [fp, #-8]
   24058:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2405c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24060:	bl	14f9c <_start@@Base+0x97c>
   24064:	strd	r0, [fp, #-20]	; 0xffffffec
   24068:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2406c:	add	r1, pc, #932	; 0x3a4
   24070:	ldrd	r0, [r1]
   24074:	cmp	r3, r1
   24078:	cmpeq	r2, r0
   2407c:	bhi	24240 <_start@@Base+0xfc20>
   24080:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24084:	add	r1, pc, #916	; 0x394
   24088:	ldrd	r0, [r1]
   2408c:	cmp	r3, r1
   24090:	cmpeq	r2, r0
   24094:	bhi	24128 <_start@@Base+0xfb08>
   24098:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2409c:	mov	r0, #-16777216	; 0xff000000
   240a0:	mvn	r1, #0
   240a4:	and	r2, r2, r0
   240a8:	and	r3, r3, r1
   240ac:	add	r1, pc, #884	; 0x374
   240b0:	ldrd	r0, [r1]
   240b4:	cmp	r3, r1
   240b8:	cmpeq	r2, r0
   240bc:	bne	24120 <_start@@Base+0xfb00>
   240c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   240c4:	str	r3, [fp, #-24]	; 0xffffffe8
   240c8:	ldr	r3, [fp, #8]
   240cc:	str	r3, [sp]
   240d0:	mov	r3, #5
   240d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   240d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   240dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   240e0:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   240e4:	str	r0, [fp, #-36]	; 0xffffffdc
   240e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   240ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   240f0:	cmp	r2, r3
   240f4:	beq	24118 <_start@@Base+0xfaf8>
   240f8:	ldr	r1, [fp, #4]
   240fc:	mov	r2, #9
   24100:	mov	r3, #0
   24104:	strd	r2, [r1]
   24108:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2410c:	mov	r2, #0
   24110:	str	r2, [r3]
   24114:	b	244ec <_start@@Base+0xfecc>
   24118:	ldr	r3, [fp, #-8]
   2411c:	b	244f0 <_start@@Base+0xfed0>
   24120:	ldr	r3, [fp, #-8]
   24124:	b	244f0 <_start@@Base+0xfed0>
   24128:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2412c:	mov	r0, #-16777216	; 0xff000000
   24130:	mvn	r1, #0
   24134:	and	r2, r2, r0
   24138:	and	r3, r3, r1
   2413c:	add	r1, pc, #748	; 0x2ec
   24140:	ldrd	r0, [r1]
   24144:	cmp	r3, r1
   24148:	cmpeq	r2, r0
   2414c:	bne	241b0 <_start@@Base+0xfb90>
   24150:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24154:	str	r3, [fp, #-24]	; 0xffffffe8
   24158:	ldr	r3, [fp, #8]
   2415c:	str	r3, [sp]
   24160:	mov	r3, #5
   24164:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2416c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24170:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   24174:	str	r0, [fp, #-36]	; 0xffffffdc
   24178:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2417c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24180:	cmp	r2, r3
   24184:	beq	241a8 <_start@@Base+0xfb88>
   24188:	ldr	r1, [fp, #4]
   2418c:	mov	r2, #2
   24190:	mov	r3, #0
   24194:	strd	r2, [r1]
   24198:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2419c:	mov	r2, #0
   241a0:	str	r2, [r3]
   241a4:	b	244ec <_start@@Base+0xfecc>
   241a8:	ldr	r3, [fp, #-8]
   241ac:	b	244f0 <_start@@Base+0xfed0>
   241b0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   241b4:	mvn	r0, #255	; 0xff
   241b8:	mvn	r1, #0
   241bc:	and	r2, r2, r0
   241c0:	and	r3, r3, r1
   241c4:	add	r1, pc, #620	; 0x26c
   241c8:	ldrd	r0, [r1]
   241cc:	cmp	r3, r1
   241d0:	cmpeq	r2, r0
   241d4:	bne	24238 <_start@@Base+0xfc18>
   241d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   241dc:	str	r3, [fp, #-24]	; 0xffffffe8
   241e0:	ldr	r3, [fp, #8]
   241e4:	str	r3, [sp]
   241e8:	mov	r3, #7
   241ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   241f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   241f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   241f8:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   241fc:	str	r0, [fp, #-36]	; 0xffffffdc
   24200:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24204:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24208:	cmp	r2, r3
   2420c:	beq	24230 <_start@@Base+0xfc10>
   24210:	ldr	r1, [fp, #4]
   24214:	mov	r2, #10
   24218:	mov	r3, #0
   2421c:	strd	r2, [r1]
   24220:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24224:	mov	r2, #0
   24228:	str	r2, [r3]
   2422c:	b	244ec <_start@@Base+0xfecc>
   24230:	ldr	r3, [fp, #-8]
   24234:	b	244f0 <_start@@Base+0xfed0>
   24238:	ldr	r3, [fp, #-8]
   2423c:	b	244f0 <_start@@Base+0xfed0>
   24240:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24244:	add	r1, pc, #500	; 0x1f4
   24248:	ldrd	r0, [r1]
   2424c:	cmp	r3, r1
   24250:	cmpeq	r2, r0
   24254:	bhi	242e8 <_start@@Base+0xfcc8>
   24258:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2425c:	mov	r0, #0
   24260:	mvn	r1, #0
   24264:	and	r2, r2, r0
   24268:	and	r3, r3, r1
   2426c:	add	r1, pc, #468	; 0x1d4
   24270:	ldrd	r0, [r1]
   24274:	cmp	r3, r1
   24278:	cmpeq	r2, r0
   2427c:	bne	242e0 <_start@@Base+0xfcc0>
   24280:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24284:	str	r3, [fp, #-24]	; 0xffffffe8
   24288:	ldr	r3, [fp, #8]
   2428c:	str	r3, [sp]
   24290:	mov	r3, #4
   24294:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24298:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2429c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   242a0:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   242a4:	str	r0, [fp, #-36]	; 0xffffffdc
   242a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   242ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   242b0:	cmp	r2, r3
   242b4:	beq	242d8 <_start@@Base+0xfcb8>
   242b8:	ldr	r1, [fp, #4]
   242bc:	mov	r2, #0
   242c0:	mov	r3, #0
   242c4:	strd	r2, [r1]
   242c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   242cc:	mov	r2, #0
   242d0:	str	r2, [r3]
   242d4:	b	244ec <_start@@Base+0xfecc>
   242d8:	ldr	r3, [fp, #-8]
   242dc:	b	244f0 <_start@@Base+0xfed0>
   242e0:	ldr	r3, [fp, #-8]
   242e4:	b	244f0 <_start@@Base+0xfed0>
   242e8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   242ec:	add	r1, pc, #348	; 0x15c
   242f0:	ldrd	r0, [r1]
   242f4:	cmp	r3, r1
   242f8:	cmpeq	r2, r0
   242fc:	bhi	24390 <_start@@Base+0xfd70>
   24300:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24304:	mov	r0, #-16777216	; 0xff000000
   24308:	mvn	r1, #0
   2430c:	and	r2, r2, r0
   24310:	and	r3, r3, r1
   24314:	add	r1, pc, #316	; 0x13c
   24318:	ldrd	r0, [r1]
   2431c:	cmp	r3, r1
   24320:	cmpeq	r2, r0
   24324:	bne	24388 <_start@@Base+0xfd68>
   24328:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2432c:	str	r3, [fp, #-24]	; 0xffffffe8
   24330:	ldr	r3, [fp, #8]
   24334:	str	r3, [sp]
   24338:	mov	r3, #5
   2433c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24344:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24348:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   2434c:	str	r0, [fp, #-36]	; 0xffffffdc
   24350:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24358:	cmp	r2, r3
   2435c:	beq	24380 <_start@@Base+0xfd60>
   24360:	ldr	r1, [fp, #4]
   24364:	mov	r2, #11
   24368:	mov	r3, #0
   2436c:	strd	r2, [r1]
   24370:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24374:	mov	r2, #0
   24378:	str	r2, [r3]
   2437c:	b	244ec <_start@@Base+0xfecc>
   24380:	ldr	r3, [fp, #-8]
   24384:	b	244f0 <_start@@Base+0xfed0>
   24388:	ldr	r3, [fp, #-8]
   2438c:	b	244f0 <_start@@Base+0xfed0>
   24390:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24394:	ldr	r0, [pc, #204]	; 24468 <_start@@Base+0xfe48>
   24398:	mvn	r1, #0
   2439c:	and	r2, r2, r0
   243a0:	and	r3, r3, r1
   243a4:	add	r1, pc, #180	; 0xb4
   243a8:	ldrd	r0, [r1]
   243ac:	cmp	r3, r1
   243b0:	cmpeq	r2, r0
   243b4:	bne	2446c <_start@@Base+0xfe4c>
   243b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   243bc:	str	r3, [fp, #-24]	; 0xffffffe8
   243c0:	ldr	r3, [fp, #8]
   243c4:	str	r3, [sp]
   243c8:	mov	r3, #6
   243cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   243d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   243d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   243d8:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   243dc:	str	r0, [fp, #-36]	; 0xffffffdc
   243e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   243e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   243e8:	cmp	r2, r3
   243ec:	beq	24410 <_start@@Base+0xfdf0>
   243f0:	ldr	r1, [fp, #4]
   243f4:	mov	r2, #255	; 0xff
   243f8:	mov	r3, #0
   243fc:	strd	r2, [r1]
   24400:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24404:	mov	r2, #0
   24408:	str	r2, [r3]
   2440c:	b	244ec <_start@@Base+0xfecc>
   24410:	ldr	r3, [fp, #-8]
   24414:	b	244f0 <_start@@Base+0xfed0>
   24418:			; <UNDEFINED> instruction: 0xffffffff
   2441c:	cdpmi	14, 4, cr4, cr15, cr4, {2}
   24420:			; <UNDEFINED> instruction: 0x46616dff
   24424:	rsbmi	r6, pc, #428	; 0x1ac
   24428:	strvs	r0, [r0, #-0]
   2442c:	rsbmi	r6, r5, #108, 24	; 0x6c00
   24430:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   24434:	ldclmi	12, cr4, [r5, #-388]!	; 0xfffffe7c
   24438:	strbtmi	r6, [r1], -r0, lsl #28
   2443c:	rsbmi	r6, pc, #428	; 0x1ac
   24440:	ldrshvc	pc, [pc, #255]	; 24547 <_start@@Base+0xff27>	; <UNPREDICTABLE>
   24444:	svcmi	0x00746865
   24448:	andeq	r0, r0, r0
   2444c:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   24450:	cdpvs	5, 7, cr6, cr10, cr11, {3}
   24454:	rsbpl	r7, r1, #117	; 0x75
   24458:	andvc	r0, r0, #0
   2445c:	svcmi	0x00746865
   24460:	strbvs	r0, [r4, #-0]!
   24464:	strbpl	r7, [lr, #-1395]!	; 0xfffffa8d
   24468:			; <UNDEFINED> instruction: 0xffff0000
   2446c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24470:	add	r1, pc, #136	; 0x88
   24474:	ldrd	r0, [r1]
   24478:	cmp	r3, r1
   2447c:	cmpeq	r2, r0
   24480:	bne	244e4 <_start@@Base+0xfec4>
   24484:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24488:	str	r3, [fp, #-24]	; 0xffffffe8
   2448c:	ldr	r3, [fp, #8]
   24490:	str	r3, [sp]
   24494:	mov	r3, #8
   24498:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2449c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   244a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   244a4:	bl	3b7b0 <flatcc_json_parser_match_constant@@Base>
   244a8:	str	r0, [fp, #-36]	; 0xffffffdc
   244ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   244b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   244b4:	cmp	r2, r3
   244b8:	beq	244dc <_start@@Base+0xfebc>
   244bc:	ldr	r1, [fp, #4]
   244c0:	mov	r2, #8
   244c4:	mov	r3, #0
   244c8:	strd	r2, [r1]
   244cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   244d0:	mov	r2, #0
   244d4:	str	r2, [r3]
   244d8:	b	244ec <_start@@Base+0xfecc>
   244dc:	ldr	r3, [fp, #-8]
   244e0:	b	244f0 <_start@@Base+0xfed0>
   244e4:	ldr	r3, [fp, #-8]
   244e8:	b	244f0 <_start@@Base+0xfed0>
   244ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   244f0:	mov	r0, r3
   244f4:	sub	sp, fp, #4
   244f8:	pop	{fp, pc}
   244fc:	nop			; (mov r0, r0)
   24500:	cdpvs	5, 7, cr6, cr10, cr12, {3}
   24504:	rsbpl	r7, r1, #117	; 0x75
   24508:	push	{fp, lr}
   2450c:	add	fp, sp, #4
   24510:	sub	sp, sp, #64	; 0x40
   24514:	str	r0, [fp, #-32]	; 0xffffffe0
   24518:	str	r1, [fp, #-36]	; 0xffffffdc
   2451c:	str	r2, [fp, #-40]	; 0xffffffd8
   24520:	str	r3, [fp, #-44]	; 0xffffffd4
   24524:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24528:	mov	r2, #0
   2452c:	str	r2, [r3]
   24530:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24534:	ldr	r3, [r3]
   24538:	mov	r1, #10
   2453c:	mov	r0, r3
   24540:	bl	2fad0 <flatcc_builder_start_table@@Base>
   24544:	mov	r3, r0
   24548:	cmp	r3, #0
   2454c:	bne	24ff8 <_start@@Base+0x109d8>
   24550:	sub	r3, fp, #24
   24554:	str	r3, [sp]
   24558:	mov	r3, #5
   2455c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24560:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24564:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24568:	bl	3cce4 <flatcc_json_parser_prepare_unions@@Base>
   2456c:	mov	r2, r0
   24570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24574:	cmp	r2, r3
   24578:	beq	25000 <_start@@Base+0x109e0>
   2457c:	sub	r3, fp, #20
   24580:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24584:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24588:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2458c:	bl	150c8 <_start@@Base+0xaa8>
   24590:	str	r0, [fp, #-36]	; 0xffffffdc
   24594:	b	24f90 <_start@@Base+0x10970>
   24598:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2459c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   245a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   245a4:	bl	14cb8 <_start@@Base+0x698>
   245a8:	str	r0, [fp, #-36]	; 0xffffffdc
   245ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   245b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   245b4:	bl	14f9c <_start@@Base+0x97c>
   245b8:	strd	r0, [fp, #-12]
   245bc:	ldrd	r2, [fp, #-12]
   245c0:	add	r1, pc, #888	; 0x378
   245c4:	ldrd	r0, [r1]
   245c8:	cmp	r3, r1
   245cc:	cmpeq	r2, r0
   245d0:	bhi	2498c <_start@@Base+0x1036c>
   245d4:	ldrd	r2, [fp, #-12]
   245d8:	add	r1, pc, #872	; 0x368
   245dc:	ldrd	r0, [r1]
   245e0:	cmp	r3, r1
   245e4:	cmpeq	r2, r0
   245e8:	bne	2477c <_start@@Base+0x1015c>
   245ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   245f0:	add	r3, r3, #8
   245f4:	str	r3, [fp, #-36]	; 0xffffffdc
   245f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   245fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24600:	bl	14f9c <_start@@Base+0x97c>
   24604:	strd	r0, [fp, #-12]
   24608:	ldrd	r2, [fp, #-12]
   2460c:	mvn	r0, #255	; 0xff
   24610:	mvn	r1, #0
   24614:	and	r2, r2, r0
   24618:	and	r3, r3, r1
   2461c:	add	r1, pc, #812	; 0x32c
   24620:	ldrd	r0, [r1]
   24624:	cmp	r3, r1
   24628:	cmpeq	r2, r0
   2462c:	bne	246bc <_start@@Base+0x1009c>
   24630:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24634:	str	r3, [fp, #-16]
   24638:	mov	r3, #7
   2463c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24640:	ldr	r1, [fp, #-16]
   24644:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24648:	bl	15568 <_start@@Base+0xf48>
   2464c:	str	r0, [fp, #-36]	; 0xffffffdc
   24650:	ldr	r2, [fp, #-16]
   24654:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24658:	cmp	r2, r3
   2465c:	beq	246a4 <_start@@Base+0x10084>
   24660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24664:	ldr	r2, [pc, #764]	; 24968 <_start@@Base+0x10348>
   24668:	add	r2, pc, r2
   2466c:	str	r2, [sp, #12]
   24670:	ldr	r2, [pc, #756]	; 2496c <_start@@Base+0x1034c>
   24674:	add	r2, pc, r2
   24678:	str	r2, [sp, #8]
   2467c:	str	r3, [sp, #4]
   24680:	mov	r3, #3
   24684:	str	r3, [sp]
   24688:	mov	r3, #1
   2468c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24690:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24694:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24698:	bl	3cfec <flatcc_json_parser_union_type@@Base>
   2469c:	str	r0, [fp, #-36]	; 0xffffffdc
   246a0:	b	24f78 <_start@@Base+0x10958>
   246a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   246a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   246ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   246b0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   246b4:	str	r0, [fp, #-36]	; 0xffffffdc
   246b8:	b	24f78 <_start@@Base+0x10958>
   246bc:	ldrd	r2, [fp, #-12]
   246c0:	mov	r0, #0
   246c4:	ldr	r1, [pc, #676]	; 24970 <_start@@Base+0x10350>
   246c8:	and	r2, r2, r0
   246cc:	and	r3, r3, r1
   246d0:	mov	r0, #0
   246d4:	ldr	r1, [pc, #664]	; 24974 <_start@@Base+0x10354>
   246d8:	cmp	r3, r1
   246dc:	cmpeq	r2, r0
   246e0:	bne	24764 <_start@@Base+0x10144>
   246e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   246e8:	str	r3, [fp, #-16]
   246ec:	mov	r3, #2
   246f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   246f4:	ldr	r1, [fp, #-16]
   246f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   246fc:	bl	15568 <_start@@Base+0xf48>
   24700:	str	r0, [fp, #-36]	; 0xffffffdc
   24704:	ldr	r2, [fp, #-16]
   24708:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2470c:	cmp	r2, r3
   24710:	beq	2474c <_start@@Base+0x1012c>
   24714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24718:	ldr	r2, [pc, #600]	; 24978 <_start@@Base+0x10358>
   2471c:	add	r2, pc, r2
   24720:	str	r2, [sp, #8]
   24724:	str	r3, [sp, #4]
   24728:	mov	r3, #3
   2472c:	str	r3, [sp]
   24730:	mov	r3, #1
   24734:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24738:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2473c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24740:	bl	3ce1c <flatcc_json_parser_union@@Base>
   24744:	str	r0, [fp, #-36]	; 0xffffffdc
   24748:	b	24f78 <_start@@Base+0x10958>
   2474c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24750:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24758:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2475c:	str	r0, [fp, #-36]	; 0xffffffdc
   24760:	b	24f78 <_start@@Base+0x10958>
   24764:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24768:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2476c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24770:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24774:	str	r0, [fp, #-36]	; 0xffffffdc
   24778:	b	24f78 <_start@@Base+0x10958>
   2477c:	ldrd	r2, [fp, #-12]
   24780:	add	r1, pc, #464	; 0x1d0
   24784:	ldrd	r0, [r1]
   24788:	cmp	r3, r1
   2478c:	cmpeq	r2, r0
   24790:	bne	2487c <_start@@Base+0x1025c>
   24794:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24798:	add	r3, r3, #8
   2479c:	str	r3, [fp, #-36]	; 0xffffffdc
   247a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   247a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   247a8:	bl	14f9c <_start@@Base+0x97c>
   247ac:	strd	r0, [fp, #-12]
   247b0:	ldrd	r2, [fp, #-12]
   247b4:	mov	r0, #0
   247b8:	ldr	r1, [pc, #432]	; 24970 <_start@@Base+0x10350>
   247bc:	and	r2, r2, r0
   247c0:	and	r3, r3, r1
   247c4:	mov	r0, #0
   247c8:	ldr	r1, [pc, #428]	; 2497c <_start@@Base+0x1035c>
   247cc:	cmp	r3, r1
   247d0:	cmpeq	r2, r0
   247d4:	bne	24864 <_start@@Base+0x10244>
   247d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   247dc:	str	r3, [fp, #-16]
   247e0:	mov	r3, #2
   247e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   247e8:	ldr	r1, [fp, #-16]
   247ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   247f0:	bl	15568 <_start@@Base+0xf48>
   247f4:	str	r0, [fp, #-36]	; 0xffffffdc
   247f8:	ldr	r2, [fp, #-16]
   247fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24800:	cmp	r2, r3
   24804:	beq	2484c <_start@@Base+0x1022c>
   24808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2480c:	ldr	r2, [pc, #364]	; 24980 <_start@@Base+0x10360>
   24810:	add	r2, pc, r2
   24814:	str	r2, [sp, #12]
   24818:	ldr	r2, [pc, #356]	; 24984 <_start@@Base+0x10364>
   2481c:	add	r2, pc, r2
   24820:	str	r2, [sp, #8]
   24824:	str	r3, [sp, #4]
   24828:	mov	r3, #7
   2482c:	str	r3, [sp]
   24830:	mov	r3, #3
   24834:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24838:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2483c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24840:	bl	3cfec <flatcc_json_parser_union_type@@Base>
   24844:	str	r0, [fp, #-36]	; 0xffffffdc
   24848:	b	24f78 <_start@@Base+0x10958>
   2484c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24850:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24854:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24858:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2485c:	str	r0, [fp, #-36]	; 0xffffffdc
   24860:	b	24f78 <_start@@Base+0x10958>
   24864:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24868:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2486c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24870:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24874:	str	r0, [fp, #-36]	; 0xffffffdc
   24878:	b	24f78 <_start@@Base+0x10958>
   2487c:	ldrd	r2, [fp, #-12]
   24880:	mov	r0, #-16777216	; 0xff000000
   24884:	mvn	r1, #0
   24888:	and	r2, r2, r0
   2488c:	and	r3, r3, r1
   24890:	add	r1, pc, #200	; 0xc8
   24894:	ldrd	r0, [r1]
   24898:	cmp	r3, r1
   2489c:	cmpeq	r2, r0
   248a0:	bne	24924 <_start@@Base+0x10304>
   248a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   248a8:	str	r3, [fp, #-16]
   248ac:	mov	r3, #5
   248b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   248b4:	ldr	r1, [fp, #-16]
   248b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   248bc:	bl	15568 <_start@@Base+0xf48>
   248c0:	str	r0, [fp, #-36]	; 0xffffffdc
   248c4:	ldr	r2, [fp, #-16]
   248c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   248cc:	cmp	r2, r3
   248d0:	beq	2490c <_start@@Base+0x102ec>
   248d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   248d8:	ldr	r2, [pc, #168]	; 24988 <_start@@Base+0x10368>
   248dc:	add	r2, pc, r2
   248e0:	str	r2, [sp, #8]
   248e4:	str	r3, [sp, #4]
   248e8:	mov	r3, #7
   248ec:	str	r3, [sp]
   248f0:	mov	r3, #3
   248f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   248f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   248fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24900:	bl	3ce1c <flatcc_json_parser_union@@Base>
   24904:	str	r0, [fp, #-36]	; 0xffffffdc
   24908:	b	24f78 <_start@@Base+0x10958>
   2490c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24910:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24918:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   2491c:	str	r0, [fp, #-36]	; 0xffffffdc
   24920:	b	24f78 <_start@@Base+0x10958>
   24924:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24928:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2492c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24930:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24934:	str	r0, [fp, #-36]	; 0xffffffdc
   24938:	b	24f78 <_start@@Base+0x10958>
   2493c:	nop			; (mov r0, r0)
   24940:	cmnvs	r3, r4, ror #8
   24944:	cmnvs	r8, #-2147483620	; 0x8000001c
   24948:	strbvs	r6, [pc, -r9, ror #28]!
   2494c:	cmnvs	lr, r1, ror #8
   24950:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   24954:	cmnvc	r4, #116, 30	; 0x1d0
   24958:	svcvs	0x005f7479
   2495c:	cmnvs	r1, #6464	; 0x1940
   24960:	svcvs	0x00000000
   24964:	cmnvs	r1, #6464	; 0x1940
   24968:			; <UNDEFINED> instruction: 0xfffff748
   2496c:	andeq	pc, r3, r8, ror #26
   24970:			; <UNDEFINED> instruction: 0xffff0000
   24974:	cmnvc	r4, #0
   24978:			; <UNDEFINED> instruction: 0xfffff694
   2497c:	rsbvc	r0, r5, r0
   24980:			; <UNDEFINED> instruction: 0xfffff5a0
   24984:	ldrdeq	pc, [r3], -r0
   24988:			; <UNDEFINED> instruction: 0xfffff4d4
   2498c:	ldrd	r2, [fp, #-12]
   24990:	add	r1, pc, #952	; 0x3b8
   24994:	ldrd	r0, [r1]
   24998:	cmp	r3, r1
   2499c:	cmpeq	r2, r0
   249a0:	bhi	24b70 <_start@@Base+0x10550>
   249a4:	ldrd	r2, [fp, #-12]
   249a8:	add	r1, pc, #936	; 0x3a8
   249ac:	ldrd	r0, [r1]
   249b0:	cmp	r3, r1
   249b4:	cmpeq	r2, r0
   249b8:	bne	24b58 <_start@@Base+0x10538>
   249bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   249c0:	add	r3, r3, #8
   249c4:	str	r3, [fp, #-36]	; 0xffffffdc
   249c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   249cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   249d0:	bl	14f9c <_start@@Base+0x97c>
   249d4:	strd	r0, [fp, #-12]
   249d8:	ldrd	r2, [fp, #-12]
   249dc:	mvn	r0, #255	; 0xff
   249e0:	mvn	r1, #0
   249e4:	and	r2, r2, r0
   249e8:	and	r3, r3, r1
   249ec:	add	r1, pc, #876	; 0x36c
   249f0:	ldrd	r0, [r1]
   249f4:	cmp	r3, r1
   249f8:	cmpeq	r2, r0
   249fc:	bne	24a98 <_start@@Base+0x10478>
   24a00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24a04:	str	r3, [fp, #-16]
   24a08:	mov	r3, #7
   24a0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24a10:	ldr	r1, [fp, #-16]
   24a14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24a18:	bl	15568 <_start@@Base+0xf48>
   24a1c:	str	r0, [fp, #-36]	; 0xffffffdc
   24a20:	ldr	r2, [fp, #-16]
   24a24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24a28:	cmp	r2, r3
   24a2c:	beq	24a80 <_start@@Base+0x10460>
   24a30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24a34:	ldr	r2, [pc, #844]	; 24d88 <_start@@Base+0x10768>
   24a38:	add	r2, pc, r2
   24a3c:	str	r2, [sp, #16]
   24a40:	ldr	r2, [pc, #836]	; 24d8c <_start@@Base+0x1076c>
   24a44:	add	r2, pc, r2
   24a48:	str	r2, [sp, #12]
   24a4c:	ldr	r2, [pc, #828]	; 24d90 <_start@@Base+0x10770>
   24a50:	add	r2, pc, r2
   24a54:	str	r2, [sp, #8]
   24a58:	str	r3, [sp, #4]
   24a5c:	mov	r3, #9
   24a60:	str	r3, [sp]
   24a64:	mov	r3, #4
   24a68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24a6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24a74:	bl	3d5f0 <flatcc_json_parser_union_type_vector@@Base>
   24a78:	str	r0, [fp, #-36]	; 0xffffffdc
   24a7c:	b	24f78 <_start@@Base+0x10958>
   24a80:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24a84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24a88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24a8c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24a90:	str	r0, [fp, #-36]	; 0xffffffdc
   24a94:	b	24f78 <_start@@Base+0x10958>
   24a98:	ldrd	r2, [fp, #-12]
   24a9c:	mov	r0, #0
   24aa0:	ldr	r1, [pc, #748]	; 24d94 <_start@@Base+0x10774>
   24aa4:	and	r2, r2, r0
   24aa8:	and	r3, r3, r1
   24aac:	mov	r0, #0
   24ab0:	ldr	r1, [pc, #736]	; 24d98 <_start@@Base+0x10778>
   24ab4:	cmp	r3, r1
   24ab8:	cmpeq	r2, r0
   24abc:	bne	24b40 <_start@@Base+0x10520>
   24ac0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24ac4:	str	r3, [fp, #-16]
   24ac8:	mov	r3, #2
   24acc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24ad0:	ldr	r1, [fp, #-16]
   24ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ad8:	bl	15568 <_start@@Base+0xf48>
   24adc:	str	r0, [fp, #-36]	; 0xffffffdc
   24ae0:	ldr	r2, [fp, #-16]
   24ae4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24ae8:	cmp	r2, r3
   24aec:	beq	24b28 <_start@@Base+0x10508>
   24af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24af4:	ldr	r2, [pc, #672]	; 24d9c <_start@@Base+0x1077c>
   24af8:	add	r2, pc, r2
   24afc:	str	r2, [sp, #8]
   24b00:	str	r3, [sp, #4]
   24b04:	mov	r3, #9
   24b08:	str	r3, [sp]
   24b0c:	mov	r3, #4
   24b10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24b14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24b18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24b1c:	bl	3d49c <flatcc_json_parser_union_vector@@Base>
   24b20:	str	r0, [fp, #-36]	; 0xffffffdc
   24b24:	b	24f78 <_start@@Base+0x10958>
   24b28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24b2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24b30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24b34:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24b38:	str	r0, [fp, #-36]	; 0xffffffdc
   24b3c:	b	24f78 <_start@@Base+0x10958>
   24b40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24b44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24b4c:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24b50:	str	r0, [fp, #-36]	; 0xffffffdc
   24b54:	b	24f78 <_start@@Base+0x10958>
   24b58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24b5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24b60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24b64:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24b68:	str	r0, [fp, #-36]	; 0xffffffdc
   24b6c:	b	24f78 <_start@@Base+0x10958>
   24b70:	ldrd	r2, [fp, #-12]
   24b74:	add	r1, pc, #492	; 0x1ec
   24b78:	ldrd	r0, [r1]
   24b7c:	cmp	r3, r1
   24b80:	cmpeq	r2, r0
   24b84:	bne	24dc4 <_start@@Base+0x107a4>
   24b88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24b8c:	add	r3, r3, #8
   24b90:	str	r3, [fp, #-36]	; 0xffffffdc
   24b94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24b98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24b9c:	bl	14f9c <_start@@Base+0x97c>
   24ba0:	strd	r0, [fp, #-12]
   24ba4:	ldrd	r2, [fp, #-12]
   24ba8:	add	r1, pc, #448	; 0x1c0
   24bac:	ldrd	r0, [r1]
   24bb0:	cmp	r3, r1
   24bb4:	cmpeq	r2, r0
   24bb8:	bne	24ca4 <_start@@Base+0x10684>
   24bbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24bc0:	add	r3, r3, #8
   24bc4:	str	r3, [fp, #-36]	; 0xffffffdc
   24bc8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24bcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24bd0:	bl	14f9c <_start@@Base+0x97c>
   24bd4:	strd	r0, [fp, #-12]
   24bd8:	ldrd	r2, [fp, #-12]
   24bdc:	mov	r0, #0
   24be0:	mvn	r1, #255	; 0xff
   24be4:	and	r2, r2, r0
   24be8:	and	r3, r3, r1
   24bec:	add	r1, pc, #388	; 0x184
   24bf0:	ldrd	r0, [r1]
   24bf4:	cmp	r3, r1
   24bf8:	cmpeq	r2, r0
   24bfc:	bne	24c8c <_start@@Base+0x1066c>
   24c00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24c04:	str	r3, [fp, #-16]
   24c08:	mov	r3, #3
   24c0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24c10:	ldr	r1, [fp, #-16]
   24c14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24c18:	bl	15568 <_start@@Base+0xf48>
   24c1c:	str	r0, [fp, #-36]	; 0xffffffdc
   24c20:	ldr	r2, [fp, #-16]
   24c24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24c28:	cmp	r2, r3
   24c2c:	beq	24c74 <_start@@Base+0x10654>
   24c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c34:	ldr	r2, [pc, #356]	; 24da0 <_start@@Base+0x10780>
   24c38:	add	r2, pc, r2
   24c3c:	str	r2, [sp, #12]
   24c40:	ldr	r2, [pc, #348]	; 24da4 <_start@@Base+0x10784>
   24c44:	add	r2, pc, r2
   24c48:	str	r2, [sp, #8]
   24c4c:	str	r3, [sp, #4]
   24c50:	mov	r3, #1
   24c54:	str	r3, [sp]
   24c58:	mov	r3, #0
   24c5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24c60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24c64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24c68:	bl	3cfec <flatcc_json_parser_union_type@@Base>
   24c6c:	str	r0, [fp, #-36]	; 0xffffffdc
   24c70:	b	24f78 <_start@@Base+0x10958>
   24c74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24c78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24c7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24c80:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24c84:	str	r0, [fp, #-36]	; 0xffffffdc
   24c88:	b	24f78 <_start@@Base+0x10958>
   24c8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24c90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24c94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24c98:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24c9c:	str	r0, [fp, #-36]	; 0xffffffdc
   24ca0:	b	24f78 <_start@@Base+0x10958>
   24ca4:	ldrd	r2, [fp, #-12]
   24ca8:	ldr	r0, [pc, #228]	; 24d94 <_start@@Base+0x10774>
   24cac:	mvn	r1, #0
   24cb0:	and	r2, r2, r0
   24cb4:	and	r3, r3, r1
   24cb8:	add	r1, pc, #192	; 0xc0
   24cbc:	ldrd	r0, [r1]
   24cc0:	cmp	r3, r1
   24cc4:	cmpeq	r2, r0
   24cc8:	bne	24dac <_start@@Base+0x1078c>
   24ccc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24cd0:	str	r3, [fp, #-16]
   24cd4:	mov	r3, #6
   24cd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24cdc:	ldr	r1, [fp, #-16]
   24ce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ce4:	bl	15568 <_start@@Base+0xf48>
   24ce8:	str	r0, [fp, #-36]	; 0xffffffdc
   24cec:	ldr	r2, [fp, #-16]
   24cf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24cf4:	cmp	r2, r3
   24cf8:	beq	24d34 <_start@@Base+0x10714>
   24cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24d00:	ldr	r2, [pc, #160]	; 24da8 <_start@@Base+0x10788>
   24d04:	add	r2, pc, r2
   24d08:	str	r2, [sp, #8]
   24d0c:	str	r3, [sp, #4]
   24d10:	mov	r3, #1
   24d14:	str	r3, [sp]
   24d18:	mov	r3, #0
   24d1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24d20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24d24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24d28:	bl	3ce1c <flatcc_json_parser_union@@Base>
   24d2c:	str	r0, [fp, #-36]	; 0xffffffdc
   24d30:	b	24f78 <_start@@Base+0x10958>
   24d34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24d38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24d3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24d40:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24d44:	str	r0, [fp, #-36]	; 0xffffffdc
   24d48:	b	24f78 <_start@@Base+0x10958>
   24d4c:	nop			; (mov r0, r0)
   24d50:	svcpl	0x00636860
   24d54:			; <UNDEFINED> instruction: 0x6d61696e
   24d58:	cmnvs	r3, r5, ror #8
   24d5c:	cmnvs	r8, #-2147483620	; 0x8000001c
   24d60:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   24d64:	rsbsvc	r5, r3, #116, 30	; 0x1d0
   24d68:	svcpl	0x00636861
   24d6c:			; <UNDEFINED> instruction: 0x6d61696e
   24d70:	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
   24d74:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   24d78:	andeq	r0, r0, r0
   24d7c:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   24d80:	ldrbvs	r0, [r2, #-0]!
   24d84:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   24d88:			; <UNDEFINED> instruction: 0xfffff548
   24d8c:			; <UNDEFINED> instruction: 0xfffff36c
   24d90:	andeq	pc, r3, ip, lsr #19
   24d94:			; <UNDEFINED> instruction: 0xffff0000
   24d98:	rsbsvc	r0, r3, #0
   24d9c:			; <UNDEFINED> instruction: 0xfffff2b8
   24da0:			; <UNDEFINED> instruction: 0xfffff178
   24da4:	andeq	pc, r3, r8, asr #15
   24da8:			; <UNDEFINED> instruction: 0xfffff0ac
   24dac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24db0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24db4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24db8:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24dbc:	str	r0, [fp, #-36]	; 0xffffffdc
   24dc0:	b	24f78 <_start@@Base+0x10958>
   24dc4:	ldrd	r2, [fp, #-12]
   24dc8:	add	r1, pc, #616	; 0x268
   24dcc:	ldrd	r0, [r1]
   24dd0:	cmp	r3, r1
   24dd4:	cmpeq	r2, r0
   24dd8:	bne	24f64 <_start@@Base+0x10944>
   24ddc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24de0:	add	r3, r3, #8
   24de4:	str	r3, [fp, #-36]	; 0xffffffdc
   24de8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24dec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24df0:	bl	14f9c <_start@@Base+0x97c>
   24df4:	strd	r0, [fp, #-12]
   24df8:	ldrd	r2, [fp, #-12]
   24dfc:	ldr	r0, [pc, #580]	; 25048 <_start@@Base+0x10a28>
   24e00:	mvn	r1, #0
   24e04:	and	r2, r2, r0
   24e08:	and	r3, r3, r1
   24e0c:	add	r1, pc, #556	; 0x22c
   24e10:	ldrd	r0, [r1]
   24e14:	cmp	r3, r1
   24e18:	cmpeq	r2, r0
   24e1c:	bne	24eac <_start@@Base+0x1088c>
   24e20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24e24:	str	r3, [fp, #-16]
   24e28:	mov	r3, #6
   24e2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24e30:	ldr	r1, [fp, #-16]
   24e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24e38:	bl	15568 <_start@@Base+0xf48>
   24e3c:	str	r0, [fp, #-36]	; 0xffffffdc
   24e40:	ldr	r2, [fp, #-16]
   24e44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24e48:	cmp	r2, r3
   24e4c:	beq	24e94 <_start@@Base+0x10874>
   24e50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24e54:	ldr	r2, [pc, #496]	; 2504c <_start@@Base+0x10a2c>
   24e58:	add	r2, pc, r2
   24e5c:	str	r2, [sp, #12]
   24e60:	ldr	r2, [pc, #488]	; 25050 <_start@@Base+0x10a30>
   24e64:	add	r2, pc, r2
   24e68:	str	r2, [sp, #8]
   24e6c:	str	r3, [sp, #4]
   24e70:	mov	r3, #5
   24e74:	str	r3, [sp]
   24e78:	mov	r3, #2
   24e7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24e80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24e88:	bl	3cfec <flatcc_json_parser_union_type@@Base>
   24e8c:	str	r0, [fp, #-36]	; 0xffffffdc
   24e90:	b	24f78 <_start@@Base+0x10958>
   24e94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24e98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24e9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ea0:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24ea4:	str	r0, [fp, #-36]	; 0xffffffdc
   24ea8:	b	24f78 <_start@@Base+0x10958>
   24eac:	ldrd	r2, [fp, #-12]
   24eb0:	mov	r0, #0
   24eb4:	mov	r1, #-16777216	; 0xff000000
   24eb8:	and	r2, r2, r0
   24ebc:	and	r3, r3, r1
   24ec0:	cmp	r3, #1795162112	; 0x6b000000
   24ec4:	cmpeq	r2, #0
   24ec8:	bne	24f4c <_start@@Base+0x1092c>
   24ecc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24ed0:	str	r3, [fp, #-16]
   24ed4:	mov	r3, #1
   24ed8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24edc:	ldr	r1, [fp, #-16]
   24ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ee4:	bl	15568 <_start@@Base+0xf48>
   24ee8:	str	r0, [fp, #-36]	; 0xffffffdc
   24eec:	ldr	r2, [fp, #-16]
   24ef0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24ef4:	cmp	r2, r3
   24ef8:	beq	24f34 <_start@@Base+0x10914>
   24efc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24f00:	ldr	r2, [pc, #332]	; 25054 <_start@@Base+0x10a34>
   24f04:	add	r2, pc, r2
   24f08:	str	r2, [sp, #8]
   24f0c:	str	r3, [sp, #4]
   24f10:	mov	r3, #5
   24f14:	str	r3, [sp]
   24f18:	mov	r3, #2
   24f1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24f20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f28:	bl	3ce1c <flatcc_json_parser_union@@Base>
   24f2c:	str	r0, [fp, #-36]	; 0xffffffdc
   24f30:	b	24f78 <_start@@Base+0x10958>
   24f34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24f38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24f3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f40:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24f44:	str	r0, [fp, #-36]	; 0xffffffdc
   24f48:	b	24f78 <_start@@Base+0x10958>
   24f4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24f50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24f54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f58:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24f5c:	str	r0, [fp, #-36]	; 0xffffffdc
   24f60:	b	24f78 <_start@@Base+0x10958>
   24f64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24f68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24f6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f70:	bl	3ba4c <flatcc_json_parser_unmatched_symbol@@Base>
   24f74:	str	r0, [fp, #-36]	; 0xffffffdc
   24f78:	sub	r3, fp, #20
   24f7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24f80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24f84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f88:	bl	151b0 <_start@@Base+0xb90>
   24f8c:	str	r0, [fp, #-36]	; 0xffffffdc
   24f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   24f94:	cmp	r3, #0
   24f98:	bne	24598 <_start@@Base+0xff78>
   24f9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24fa0:	ldr	r3, [r3, #24]
   24fa4:	cmp	r3, #0
   24fa8:	bne	25008 <_start@@Base+0x109e8>
   24fac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24fb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24fb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24fb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24fbc:	bl	3cd9c <flatcc_json_parser_finalize_unions@@Base>
   24fc0:	str	r0, [fp, #-36]	; 0xffffffdc
   24fc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24fc8:	ldr	r3, [r3]
   24fcc:	mov	r0, r3
   24fd0:	bl	30634 <flatcc_builder_end_table@@Base>
   24fd4:	mov	r2, r0
   24fd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24fdc:	str	r2, [r3]
   24fe0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24fe4:	ldr	r3, [r3]
   24fe8:	cmp	r3, #0
   24fec:	beq	25010 <_start@@Base+0x109f0>
   24ff0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24ff4:	b	2502c <_start@@Base+0x10a0c>
   24ff8:	nop			; (mov r0, r0)
   24ffc:	b	25014 <_start@@Base+0x109f4>
   25000:	nop			; (mov r0, r0)
   25004:	b	25014 <_start@@Base+0x109f4>
   25008:	nop			; (mov r0, r0)
   2500c:	b	25014 <_start@@Base+0x109f4>
   25010:	nop			; (mov r0, r0)
   25014:	mov	r3, #33	; 0x21
   25018:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2501c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25020:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25024:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   25028:	mov	r3, r0
   2502c:	mov	r0, r3
   25030:	sub	sp, fp, #4
   25034:	pop	{fp, pc}
   25038:	svcpl	0x006b6963
   2503c:	cmnvc	r9, #1694498816	; 0x65000000
   25040:	rsbvc	r0, r5, r0
   25044:	blvs	1802230 <__bss_end__@@Base+0x179dd84>
   25048:			; <UNDEFINED> instruction: 0xffff0000
   2504c:			; <UNDEFINED> instruction: 0xffffef58
   25050:			; <UNDEFINED> instruction: 0x0003f5b8
   25054:			; <UNDEFINED> instruction: 0xffffeeac
   25058:	push	{fp}		; (str fp, [sp, #-4]!)
   2505c:	add	fp, sp, #0
   25060:	sub	sp, sp, #20
   25064:	str	r0, [fp, #-8]
   25068:	str	r1, [fp, #-12]
   2506c:	str	r2, [fp, #-16]
   25070:	str	r3, [fp, #-20]	; 0xffffffec
   25074:	ldr	r3, [fp, #-12]
   25078:	mov	r0, r3
   2507c:	add	sp, fp, #0
   25080:	pop	{fp}		; (ldr fp, [sp], #4)
   25084:	bx	lr
   25088:	push	{fp, lr}
   2508c:	add	fp, sp, #4
   25090:	sub	sp, sp, #48	; 0x30
   25094:	str	r0, [fp, #-32]	; 0xffffffe0
   25098:	str	r1, [fp, #-36]	; 0xffffffdc
   2509c:	str	r2, [fp, #-40]	; 0xffffffd8
   250a0:	str	r3, [fp, #-44]	; 0xffffffd4
   250a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   250a8:	str	r3, [fp, #-8]
   250ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   250b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   250b4:	bl	14f9c <_start@@Base+0x97c>
   250b8:	strd	r0, [fp, #-20]	; 0xffffffec
   250bc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   250c0:	add	r1, pc, #912	; 0x390
   250c4:	ldrd	r0, [r1]
   250c8:	cmp	r3, r1
   250cc:	cmpeq	r2, r0
   250d0:	bhi	252a0 <_start@@Base+0x10c80>
   250d4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   250d8:	add	r1, pc, #896	; 0x380
   250dc:	ldrd	r0, [r1]
   250e0:	cmp	r3, r1
   250e4:	cmpeq	r2, r0
   250e8:	bhi	25180 <_start@@Base+0x10b60>
   250ec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   250f0:	mov	r0, #0
   250f4:	mvn	r1, #255	; 0xff
   250f8:	and	r2, r2, r0
   250fc:	and	r3, r3, r1
   25100:	add	r1, pc, #864	; 0x360
   25104:	ldrd	r0, [r1]
   25108:	cmp	r3, r1
   2510c:	cmpeq	r2, r0
   25110:	bne	25178 <_start@@Base+0x10b58>
   25114:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25118:	str	r3, [fp, #-24]	; 0xffffffe8
   2511c:	mov	r3, #3
   25120:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25128:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2512c:	bl	14fe4 <_start@@Base+0x9c4>
   25130:	str	r0, [fp, #-36]	; 0xffffffdc
   25134:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2513c:	cmp	r2, r3
   25140:	beq	25170 <_start@@Base+0x10b50>
   25144:	ldr	r3, [fp, #8]
   25148:	str	r3, [sp, #4]
   2514c:	ldr	r3, [fp, #4]
   25150:	str	r3, [sp]
   25154:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25158:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2515c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25160:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25164:	bl	1949c <_start@@Base+0x4e7c>
   25168:	str	r0, [fp, #-36]	; 0xffffffdc
   2516c:	b	2558c <_start@@Base+0x10f6c>
   25170:	ldr	r3, [fp, #-8]
   25174:	b	25590 <_start@@Base+0x10f70>
   25178:	ldr	r3, [fp, #-8]
   2517c:	b	25590 <_start@@Base+0x10f70>
   25180:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25184:	mov	r0, #0
   25188:	mvn	r1, #255	; 0xff
   2518c:	and	r2, r2, r0
   25190:	and	r3, r3, r1
   25194:	add	r1, pc, #724	; 0x2d4
   25198:	ldrd	r0, [r1]
   2519c:	cmp	r3, r1
   251a0:	cmpeq	r2, r0
   251a4:	bne	2520c <_start@@Base+0x10bec>
   251a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   251ac:	str	r3, [fp, #-24]	; 0xffffffe8
   251b0:	mov	r3, #3
   251b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   251b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   251bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   251c0:	bl	14fe4 <_start@@Base+0x9c4>
   251c4:	str	r0, [fp, #-36]	; 0xffffffdc
   251c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   251cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   251d0:	cmp	r2, r3
   251d4:	beq	25204 <_start@@Base+0x10be4>
   251d8:	ldr	r3, [fp, #8]
   251dc:	str	r3, [sp, #4]
   251e0:	ldr	r3, [fp, #4]
   251e4:	str	r3, [sp]
   251e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   251ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   251f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   251f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   251f8:	bl	18770 <_start@@Base+0x4150>
   251fc:	str	r0, [fp, #-36]	; 0xffffffdc
   25200:	b	2558c <_start@@Base+0x10f6c>
   25204:	ldr	r3, [fp, #-8]
   25208:	b	25590 <_start@@Base+0x10f70>
   2520c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25210:	mov	r0, #-16777216	; 0xff000000
   25214:	mvn	r1, #0
   25218:	and	r2, r2, r0
   2521c:	and	r3, r3, r1
   25220:	add	r1, pc, #592	; 0x250
   25224:	ldrd	r0, [r1]
   25228:	cmp	r3, r1
   2522c:	cmpeq	r2, r0
   25230:	bne	25298 <_start@@Base+0x10c78>
   25234:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25238:	str	r3, [fp, #-24]	; 0xffffffe8
   2523c:	mov	r3, #5
   25240:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25244:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25248:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2524c:	bl	14fe4 <_start@@Base+0x9c4>
   25250:	str	r0, [fp, #-36]	; 0xffffffdc
   25254:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2525c:	cmp	r2, r3
   25260:	beq	25290 <_start@@Base+0x10c70>
   25264:	ldr	r3, [fp, #8]
   25268:	str	r3, [sp, #4]
   2526c:	ldr	r3, [fp, #4]
   25270:	str	r3, [sp]
   25274:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25278:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2527c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25280:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25284:	bl	19094 <_start@@Base+0x4a74>
   25288:	str	r0, [fp, #-36]	; 0xffffffdc
   2528c:	b	2558c <_start@@Base+0x10f6c>
   25290:	ldr	r3, [fp, #-8]
   25294:	b	25590 <_start@@Base+0x10f70>
   25298:	ldr	r3, [fp, #-8]
   2529c:	b	25590 <_start@@Base+0x10f70>
   252a0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   252a4:	add	r1, pc, #468	; 0x1d4
   252a8:	ldrd	r0, [r1]
   252ac:	cmp	r3, r1
   252b0:	cmpeq	r2, r0
   252b4:	bhi	2533c <_start@@Base+0x10d1c>
   252b8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   252bc:	add	r1, pc, #452	; 0x1c4
   252c0:	ldrd	r0, [r1]
   252c4:	cmp	r3, r1
   252c8:	cmpeq	r2, r0
   252cc:	bne	25334 <_start@@Base+0x10d14>
   252d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   252d4:	str	r3, [fp, #-24]	; 0xffffffe8
   252d8:	mov	r3, #8
   252dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   252e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   252e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   252e8:	bl	14fe4 <_start@@Base+0x9c4>
   252ec:	str	r0, [fp, #-36]	; 0xffffffdc
   252f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   252f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   252f8:	cmp	r2, r3
   252fc:	beq	2532c <_start@@Base+0x10d0c>
   25300:	ldr	r3, [fp, #8]
   25304:	str	r3, [sp, #4]
   25308:	ldr	r3, [fp, #4]
   2530c:	str	r3, [sp]
   25310:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25314:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25318:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2531c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25320:	bl	18e64 <_start@@Base+0x4844>
   25324:	str	r0, [fp, #-36]	; 0xffffffdc
   25328:	b	2558c <_start@@Base+0x10f6c>
   2532c:	ldr	r3, [fp, #-8]
   25330:	b	25590 <_start@@Base+0x10f70>
   25334:	ldr	r3, [fp, #-8]
   25338:	b	25590 <_start@@Base+0x10f70>
   2533c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25340:	add	r1, pc, #328	; 0x148
   25344:	ldrd	r0, [r1]
   25348:	cmp	r3, r1
   2534c:	cmpeq	r2, r0
   25350:	bhi	253d8 <_start@@Base+0x10db8>
   25354:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25358:	add	r1, pc, #312	; 0x138
   2535c:	ldrd	r0, [r1]
   25360:	cmp	r3, r1
   25364:	cmpeq	r2, r0
   25368:	bne	253d0 <_start@@Base+0x10db0>
   2536c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25370:	str	r3, [fp, #-24]	; 0xffffffe8
   25374:	mov	r3, #8
   25378:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2537c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25380:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25384:	bl	14fe4 <_start@@Base+0x9c4>
   25388:	str	r0, [fp, #-36]	; 0xffffffdc
   2538c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25394:	cmp	r2, r3
   25398:	beq	253c8 <_start@@Base+0x10da8>
   2539c:	ldr	r3, [fp, #8]
   253a0:	str	r3, [sp, #4]
   253a4:	ldr	r3, [fp, #4]
   253a8:	str	r3, [sp]
   253ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   253b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   253b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   253b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   253bc:	bl	18b80 <_start@@Base+0x4560>
   253c0:	str	r0, [fp, #-36]	; 0xffffffdc
   253c4:	b	2558c <_start@@Base+0x10f6c>
   253c8:	ldr	r3, [fp, #-8]
   253cc:	b	25590 <_start@@Base+0x10f70>
   253d0:	ldr	r3, [fp, #-8]
   253d4:	b	25590 <_start@@Base+0x10f70>
   253d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   253dc:	add	r1, pc, #188	; 0xbc
   253e0:	ldrd	r0, [r1]
   253e4:	cmp	r3, r1
   253e8:	cmpeq	r2, r0
   253ec:	bne	2544c <_start@@Base+0x10e2c>
   253f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   253f4:	str	r3, [fp, #-24]	; 0xffffffe8
   253f8:	mov	r3, #8
   253fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25404:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25408:	bl	14fe4 <_start@@Base+0x9c4>
   2540c:	str	r0, [fp, #-36]	; 0xffffffdc
   25410:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25414:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25418:	cmp	r2, r3
   2541c:	beq	254b8 <_start@@Base+0x10e98>
   25420:	ldr	r3, [fp, #8]
   25424:	str	r3, [sp, #4]
   25428:	ldr	r3, [fp, #4]
   2542c:	str	r3, [sp]
   25430:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25434:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25438:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2543c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25440:	bl	18958 <_start@@Base+0x4338>
   25444:	str	r0, [fp, #-36]	; 0xffffffdc
   25448:	b	2558c <_start@@Base+0x10f6c>
   2544c:	nop			; (mov r0, r0)
   25450:	b	254bc <_start@@Base+0x10e9c>
   25454:	nop			; (mov r0, r0)
   25458:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   2545c:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   25460:	ldrshvc	pc, [pc, #255]	; 25567 <_start@@Base+0x10f47>	; <UNPREDICTABLE>
   25464:	cmnmi	pc, #28416	; 0x6f00
   25468:	andeq	r0, r0, r0
   2546c:	cmnmi	lr, r0, lsl #18
   25470:	andeq	r0, r0, r0
   25474:	strbtmi	r6, [pc], -r0, lsl #30
   25478:	andvc	r0, r0, #0
   2547c:	cmnmi	pc, #28416	; 0x6f00
   25480:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   25484:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   25488:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   2548c:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   25490:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   25494:	mcrvs	7, 3, r6, cr5, cr15, {2}
   25498:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   2549c:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   254a0:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   254a4:	mcrvs	7, 3, r6, cr5, cr15, {2}
   254a8:	cfldrdvs	mvd7, [r0, #-484]!	; 0xfffffe1c
   254ac:	cdpvs	4, 6, cr7, cr15, cr5, {3}
   254b0:	andeq	r0, r0, r0
   254b4:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   254b8:	nop			; (mov r0, r0)
   254bc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   254c0:	sub	r1, pc, #32
   254c4:	ldrd	r0, [r1]
   254c8:	cmp	r3, r1
   254cc:	cmpeq	r2, r0
   254d0:	bne	25584 <_start@@Base+0x10f64>
   254d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   254d8:	add	r3, r3, #8
   254dc:	str	r3, [fp, #-36]	; 0xffffffdc
   254e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   254e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   254e8:	bl	14f9c <_start@@Base+0x97c>
   254ec:	strd	r0, [fp, #-20]	; 0xffffffec
   254f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   254f4:	mov	r0, #0
   254f8:	mvn	r1, #0
   254fc:	and	r2, r2, r0
   25500:	and	r3, r3, r1
   25504:	sub	r1, pc, #92	; 0x5c
   25508:	ldrd	r0, [r1]
   2550c:	cmp	r3, r1
   25510:	cmpeq	r2, r0
   25514:	bne	2557c <_start@@Base+0x10f5c>
   25518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2551c:	str	r3, [fp, #-24]	; 0xffffffe8
   25520:	mov	r3, #4
   25524:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2552c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25530:	bl	14fe4 <_start@@Base+0x9c4>
   25534:	str	r0, [fp, #-36]	; 0xffffffdc
   25538:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2553c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25540:	cmp	r2, r3
   25544:	beq	25574 <_start@@Base+0x10f54>
   25548:	ldr	r3, [fp, #8]
   2554c:	str	r3, [sp, #4]
   25550:	ldr	r3, [fp, #4]
   25554:	str	r3, [sp]
   25558:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2555c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25560:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25564:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25568:	bl	1a090 <_start@@Base+0x5a70>
   2556c:	str	r0, [fp, #-36]	; 0xffffffdc
   25570:	b	2558c <_start@@Base+0x10f6c>
   25574:	ldr	r3, [fp, #-8]
   25578:	b	25590 <_start@@Base+0x10f70>
   2557c:	ldr	r3, [fp, #-8]
   25580:	b	25590 <_start@@Base+0x10f70>
   25584:	ldr	r3, [fp, #-8]
   25588:	b	25590 <_start@@Base+0x10f70>
   2558c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25590:	mov	r0, r3
   25594:	sub	sp, fp, #4
   25598:	pop	{fp, pc}
   2559c:	push	{fp}		; (str fp, [sp, #-4]!)
   255a0:	add	fp, sp, #0
   255a4:	sub	sp, sp, #20
   255a8:	str	r0, [fp, #-8]
   255ac:	str	r1, [fp, #-12]
   255b0:	str	r2, [fp, #-16]
   255b4:	str	r3, [fp, #-20]	; 0xffffffec
   255b8:	ldr	r3, [fp, #-12]
   255bc:	mov	r0, r3
   255c0:	add	sp, fp, #0
   255c4:	pop	{fp}		; (ldr fp, [sp], #4)
   255c8:	bx	lr
   255cc:	push	{fp}		; (str fp, [sp, #-4]!)
   255d0:	add	fp, sp, #0
   255d4:	sub	sp, sp, #20
   255d8:	str	r0, [fp, #-8]
   255dc:	str	r1, [fp, #-12]
   255e0:	str	r2, [fp, #-16]
   255e4:	str	r3, [fp, #-20]	; 0xffffffec
   255e8:	ldr	r3, [fp, #-12]
   255ec:	mov	r0, r3
   255f0:	add	sp, fp, #0
   255f4:	pop	{fp}		; (ldr fp, [sp], #4)
   255f8:	bx	lr
   255fc:	push	{fp, lr}
   25600:	add	fp, sp, #4
   25604:	sub	sp, sp, #48	; 0x30
   25608:	str	r0, [fp, #-32]	; 0xffffffe0
   2560c:	str	r1, [fp, #-36]	; 0xffffffdc
   25610:	str	r2, [fp, #-40]	; 0xffffffd8
   25614:	str	r3, [fp, #-44]	; 0xffffffd4
   25618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2561c:	str	r3, [fp, #-8]
   25620:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25624:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25628:	bl	14f9c <_start@@Base+0x97c>
   2562c:	strd	r0, [fp, #-20]	; 0xffffffec
   25630:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25634:	add	r1, pc, #204	; 0xcc
   25638:	ldrd	r0, [r1]
   2563c:	cmp	r3, r1
   25640:	cmpeq	r2, r0
   25644:	bne	256f4 <_start@@Base+0x110d4>
   25648:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2564c:	add	r3, r3, #8
   25650:	str	r3, [fp, #-36]	; 0xffffffdc
   25654:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25658:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2565c:	bl	14f9c <_start@@Base+0x97c>
   25660:	strd	r0, [fp, #-20]	; 0xffffffec
   25664:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25668:	mov	r0, #0
   2566c:	mov	r1, #-16777216	; 0xff000000
   25670:	and	r2, r2, r0
   25674:	and	r3, r3, r1
   25678:	cmp	r3, #1912602624	; 0x72000000
   2567c:	cmpeq	r2, #0
   25680:	bne	256ec <_start@@Base+0x110cc>
   25684:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25688:	str	r3, [fp, #-24]	; 0xffffffe8
   2568c:	mov	r3, #1
   25690:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25694:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25698:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2569c:	bl	14fe4 <_start@@Base+0x9c4>
   256a0:	str	r0, [fp, #-36]	; 0xffffffdc
   256a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   256a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   256ac:	cmp	r2, r3
   256b0:	beq	256e4 <_start@@Base+0x110c4>
   256b4:	ldr	r3, [fp, #8]
   256b8:	str	r3, [sp, #4]
   256bc:	ldr	r3, [fp, #4]
   256c0:	str	r3, [sp]
   256c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   256c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   256cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   256d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   256d4:	bl	24034 <_start@@Base+0xfa14>
   256d8:	str	r0, [fp, #-36]	; 0xffffffdc
   256dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   256e0:	b	256f8 <_start@@Base+0x110d8>
   256e4:	ldr	r3, [fp, #-8]
   256e8:	b	256f8 <_start@@Base+0x110d8>
   256ec:	ldr	r3, [fp, #-8]
   256f0:	b	256f8 <_start@@Base+0x110d8>
   256f4:	ldr	r3, [fp, #-8]
   256f8:	mov	r0, r3
   256fc:	sub	sp, fp, #4
   25700:	pop	{fp, pc}
   25704:	nop			; (mov r0, r0)
   25708:	cmnvs	r3, r5, ror #8
   2570c:	cmnmi	r8, #-2147483620	; 0x8000001c
   25710:	push	{fp, lr}
   25714:	add	fp, sp, #4
   25718:	sub	sp, sp, #48	; 0x30
   2571c:	str	r0, [fp, #-32]	; 0xffffffe0
   25720:	str	r1, [fp, #-36]	; 0xffffffdc
   25724:	str	r2, [fp, #-40]	; 0xffffffd8
   25728:	str	r3, [fp, #-44]	; 0xffffffd4
   2572c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25730:	str	r3, [fp, #-8]
   25734:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25738:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2573c:	bl	14f9c <_start@@Base+0x97c>
   25740:	strd	r0, [fp, #-20]	; 0xffffffec
   25744:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25748:	add	r1, pc, #208	; 0xd0
   2574c:	ldrd	r0, [r1]
   25750:	cmp	r3, r1
   25754:	cmpeq	r2, r0
   25758:	bne	25810 <_start@@Base+0x111f0>
   2575c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25760:	add	r3, r3, #8
   25764:	str	r3, [fp, #-36]	; 0xffffffdc
   25768:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2576c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25770:	bl	14f9c <_start@@Base+0x97c>
   25774:	strd	r0, [fp, #-20]	; 0xffffffec
   25778:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2577c:	mov	r0, #0
   25780:	mvn	r1, #255	; 0xff
   25784:	and	r2, r2, r0
   25788:	and	r3, r3, r1
   2578c:	add	r1, pc, #148	; 0x94
   25790:	ldrd	r0, [r1]
   25794:	cmp	r3, r1
   25798:	cmpeq	r2, r0
   2579c:	bne	25808 <_start@@Base+0x111e8>
   257a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   257a4:	str	r3, [fp, #-24]	; 0xffffffe8
   257a8:	mov	r3, #3
   257ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   257b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   257b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   257b8:	bl	14fe4 <_start@@Base+0x9c4>
   257bc:	str	r0, [fp, #-36]	; 0xffffffdc
   257c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   257c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   257c8:	cmp	r2, r3
   257cc:	beq	25800 <_start@@Base+0x111e0>
   257d0:	ldr	r3, [fp, #8]
   257d4:	str	r3, [sp, #4]
   257d8:	ldr	r3, [fp, #4]
   257dc:	str	r3, [sp]
   257e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   257e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   257e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   257ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   257f0:	bl	17624 <_start@@Base+0x3004>
   257f4:	str	r0, [fp, #-36]	; 0xffffffdc
   257f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   257fc:	b	25814 <_start@@Base+0x111f4>
   25800:	ldr	r3, [fp, #-8]
   25804:	b	25814 <_start@@Base+0x111f4>
   25808:	ldr	r3, [fp, #-8]
   2580c:	b	25814 <_start@@Base+0x111f4>
   25810:	ldr	r3, [fp, #-8]
   25814:	mov	r0, r3
   25818:	sub	sp, fp, #4
   2581c:	pop	{fp, pc}
   25820:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   25824:	ldrbtmi	r6, [r2], -sp, ror #30
   25828:	andeq	r0, r0, r0
   2582c:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   25830:	push	{fp, lr}
   25834:	add	fp, sp, #4
   25838:	sub	sp, sp, #48	; 0x30
   2583c:	str	r0, [fp, #-32]	; 0xffffffe0
   25840:	str	r1, [fp, #-36]	; 0xffffffdc
   25844:	str	r2, [fp, #-40]	; 0xffffffd8
   25848:	str	r3, [fp, #-44]	; 0xffffffd4
   2584c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25850:	str	r3, [fp, #-8]
   25854:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25858:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2585c:	bl	14f9c <_start@@Base+0x97c>
   25860:	strd	r0, [fp, #-20]	; 0xffffffec
   25864:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25868:	add	r1, pc, #784	; 0x310
   2586c:	ldrd	r0, [r1]
   25870:	cmp	r3, r1
   25874:	cmpeq	r2, r0
   25878:	bhi	25980 <_start@@Base+0x11360>
   2587c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25880:	add	r1, pc, #768	; 0x300
   25884:	ldrd	r0, [r1]
   25888:	cmp	r3, r1
   2588c:	cmpeq	r2, r0
   25890:	bne	25978 <_start@@Base+0x11358>
   25894:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25898:	add	r3, r3, #8
   2589c:	str	r3, [fp, #-36]	; 0xffffffdc
   258a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   258a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   258a8:	bl	14f9c <_start@@Base+0x97c>
   258ac:	strd	r0, [fp, #-20]	; 0xffffffec
   258b0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   258b4:	add	r1, pc, #724	; 0x2d4
   258b8:	ldrd	r0, [r1]
   258bc:	cmp	r3, r1
   258c0:	cmpeq	r2, r0
   258c4:	bne	25970 <_start@@Base+0x11350>
   258c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   258cc:	add	r3, r3, #8
   258d0:	str	r3, [fp, #-36]	; 0xffffffdc
   258d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   258d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   258dc:	bl	14f9c <_start@@Base+0x97c>
   258e0:	strd	r0, [fp, #-20]	; 0xffffffec
   258e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   258e8:	mov	r0, #0
   258ec:	mov	r1, #-16777216	; 0xff000000
   258f0:	and	r2, r2, r0
   258f4:	and	r3, r3, r1
   258f8:	cmp	r3, #1912602624	; 0x72000000
   258fc:	cmpeq	r2, #0
   25900:	bne	25968 <_start@@Base+0x11348>
   25904:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25908:	str	r3, [fp, #-24]	; 0xffffffe8
   2590c:	mov	r3, #1
   25910:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25914:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2591c:	bl	14fe4 <_start@@Base+0x9c4>
   25920:	str	r0, [fp, #-36]	; 0xffffffdc
   25924:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2592c:	cmp	r2, r3
   25930:	beq	25960 <_start@@Base+0x11340>
   25934:	ldr	r3, [fp, #8]
   25938:	str	r3, [sp, #4]
   2593c:	ldr	r3, [fp, #4]
   25940:	str	r3, [sp]
   25944:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25948:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2594c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25950:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25954:	bl	24034 <_start@@Base+0xfa14>
   25958:	str	r0, [fp, #-36]	; 0xffffffdc
   2595c:	b	261d0 <_start@@Base+0x11bb0>
   25960:	ldr	r3, [fp, #-8]
   25964:	b	261d4 <_start@@Base+0x11bb4>
   25968:	ldr	r3, [fp, #-8]
   2596c:	b	261d4 <_start@@Base+0x11bb4>
   25970:	ldr	r3, [fp, #-8]
   25974:	b	261d4 <_start@@Base+0x11bb4>
   25978:	ldr	r3, [fp, #-8]
   2597c:	b	261d4 <_start@@Base+0x11bb4>
   25980:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25984:	add	r1, pc, #524	; 0x20c
   25988:	ldrd	r0, [r1]
   2598c:	cmp	r3, r1
   25990:	cmpeq	r2, r0
   25994:	bne	26054 <_start@@Base+0x11a34>
   25998:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2599c:	add	r3, r3, #8
   259a0:	str	r3, [fp, #-36]	; 0xffffffdc
   259a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   259a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   259ac:	bl	14f9c <_start@@Base+0x97c>
   259b0:	strd	r0, [fp, #-20]	; 0xffffffec
   259b4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   259b8:	add	r1, pc, #480	; 0x1e0
   259bc:	ldrd	r0, [r1]
   259c0:	cmp	r3, r1
   259c4:	cmpeq	r2, r0
   259c8:	bhi	25ca0 <_start@@Base+0x11680>
   259cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   259d0:	add	r1, pc, #464	; 0x1d0
   259d4:	ldrd	r0, [r1]
   259d8:	cmp	r3, r1
   259dc:	cmpeq	r2, r0
   259e0:	bhi	25ab4 <_start@@Base+0x11494>
   259e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   259e8:	add	r1, pc, #448	; 0x1c0
   259ec:	ldrd	r0, [r1]
   259f0:	cmp	r3, r1
   259f4:	cmpeq	r2, r0
   259f8:	bne	25aac <_start@@Base+0x1148c>
   259fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25a00:	add	r3, r3, #8
   25a04:	str	r3, [fp, #-36]	; 0xffffffdc
   25a08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25a0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25a10:	bl	14f9c <_start@@Base+0x97c>
   25a14:	strd	r0, [fp, #-20]	; 0xffffffec
   25a18:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25a1c:	mov	r0, #0
   25a20:	ldr	r1, [pc, #416]	; 25bc8 <_start@@Base+0x115a8>
   25a24:	and	r2, r2, r0
   25a28:	and	r3, r3, r1
   25a2c:	mov	r0, #0
   25a30:	ldr	r1, [pc, #404]	; 25bcc <_start@@Base+0x115ac>
   25a34:	cmp	r3, r1
   25a38:	cmpeq	r2, r0
   25a3c:	bne	25aa4 <_start@@Base+0x11484>
   25a40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25a44:	str	r3, [fp, #-24]	; 0xffffffe8
   25a48:	mov	r3, #2
   25a4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25a50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25a54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25a58:	bl	14fe4 <_start@@Base+0x9c4>
   25a5c:	str	r0, [fp, #-36]	; 0xffffffdc
   25a60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25a68:	cmp	r2, r3
   25a6c:	beq	25a9c <_start@@Base+0x1147c>
   25a70:	ldr	r3, [fp, #8]
   25a74:	str	r3, [sp, #4]
   25a78:	ldr	r3, [fp, #4]
   25a7c:	str	r3, [sp]
   25a80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25a84:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25a88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25a8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25a90:	bl	1949c <_start@@Base+0x4e7c>
   25a94:	str	r0, [fp, #-36]	; 0xffffffdc
   25a98:	b	261d0 <_start@@Base+0x11bb0>
   25a9c:	ldr	r3, [fp, #-8]
   25aa0:	b	261d4 <_start@@Base+0x11bb4>
   25aa4:	ldr	r3, [fp, #-8]
   25aa8:	b	261d4 <_start@@Base+0x11bb4>
   25aac:	ldr	r3, [fp, #-8]
   25ab0:	b	261d4 <_start@@Base+0x11bb4>
   25ab4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25ab8:	add	r1, pc, #248	; 0xf8
   25abc:	ldrd	r0, [r1]
   25ac0:	cmp	r3, r1
   25ac4:	cmpeq	r2, r0
   25ac8:	bne	25bd0 <_start@@Base+0x115b0>
   25acc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25ad0:	add	r3, r3, #8
   25ad4:	str	r3, [fp, #-36]	; 0xffffffdc
   25ad8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25adc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25ae0:	bl	14f9c <_start@@Base+0x97c>
   25ae4:	strd	r0, [fp, #-20]	; 0xffffffec
   25ae8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25aec:	mov	r0, #0
   25af0:	mvn	r1, #0
   25af4:	and	r2, r2, r0
   25af8:	and	r3, r3, r1
   25afc:	add	r1, pc, #188	; 0xbc
   25b00:	ldrd	r0, [r1]
   25b04:	cmp	r3, r1
   25b08:	cmpeq	r2, r0
   25b0c:	bne	25b74 <_start@@Base+0x11554>
   25b10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25b14:	str	r3, [fp, #-24]	; 0xffffffe8
   25b18:	mov	r3, #4
   25b1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25b20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25b24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25b28:	bl	14fe4 <_start@@Base+0x9c4>
   25b2c:	str	r0, [fp, #-36]	; 0xffffffdc
   25b30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25b34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b38:	cmp	r2, r3
   25b3c:	beq	25b6c <_start@@Base+0x1154c>
   25b40:	ldr	r3, [fp, #8]
   25b44:	str	r3, [sp, #4]
   25b48:	ldr	r3, [fp, #4]
   25b4c:	str	r3, [sp]
   25b50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25b54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25b58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25b5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25b60:	bl	19094 <_start@@Base+0x4a74>
   25b64:	str	r0, [fp, #-36]	; 0xffffffdc
   25b68:	b	261d0 <_start@@Base+0x11bb0>
   25b6c:	ldr	r3, [fp, #-8]
   25b70:	b	261d4 <_start@@Base+0x11bb4>
   25b74:	ldr	r3, [fp, #-8]
   25b78:	b	261d4 <_start@@Base+0x11bb4>
   25b7c:	nop			; (mov r0, r0)
   25b80:	stclvs	14, cr2, [r5, #-272]!	; 0xfffffef0
   25b84:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   25b88:	cmnvs	r3, lr, lsr #18
   25b8c:			; <UNDEFINED> instruction: 0x46616e74
   25b90:	cmnvs	r3, r5, ror #8
   25b94:	cmnmi	r8, #-2147483620	; 0x8000001c
   25b98:	stclvs	14, cr2, [r5, #-276]!	; 0xfffffeec
   25b9c:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   25ba0:	stclvs	14, cr2, [r5], #-412	; 0xfffffe64
   25ba4:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25ba8:	stclvs	14, cr2, [r5], #-264	; 0xfffffef8
   25bac:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25bb0:	stclvs	14, cr2, [r5], #-260	; 0xfffffefc
   25bb4:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25bb8:	stclvs	14, cr2, [r5], #-268	; 0xfffffef4
   25bbc:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25bc0:	andeq	r0, r0, r0
   25bc4:	svcvs	0x006c6f72
   25bc8:			; <UNDEFINED> instruction: 0xffff0000
   25bcc:	cdpvs	0, 7, cr0, cr9, cr0, {0}
   25bd0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25bd4:	add	r1, pc, #852	; 0x354
   25bd8:	ldrd	r0, [r1]
   25bdc:	cmp	r3, r1
   25be0:	cmpeq	r2, r0
   25be4:	bne	25c98 <_start@@Base+0x11678>
   25be8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25bec:	add	r3, r3, #8
   25bf0:	str	r3, [fp, #-36]	; 0xffffffdc
   25bf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25bf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25bfc:	bl	14f9c <_start@@Base+0x97c>
   25c00:	strd	r0, [fp, #-20]	; 0xffffffec
   25c04:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25c08:	mov	r0, #0
   25c0c:	ldr	r1, [pc, #860]	; 25f70 <_start@@Base+0x11950>
   25c10:	and	r2, r2, r0
   25c14:	and	r3, r3, r1
   25c18:	mov	r0, #0
   25c1c:	ldr	r1, [pc, #848]	; 25f74 <_start@@Base+0x11954>
   25c20:	cmp	r3, r1
   25c24:	cmpeq	r2, r0
   25c28:	bne	25c90 <_start@@Base+0x11670>
   25c2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25c30:	str	r3, [fp, #-24]	; 0xffffffe8
   25c34:	mov	r3, #2
   25c38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25c3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25c44:	bl	14fe4 <_start@@Base+0x9c4>
   25c48:	str	r0, [fp, #-36]	; 0xffffffdc
   25c4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25c50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c54:	cmp	r2, r3
   25c58:	beq	25c88 <_start@@Base+0x11668>
   25c5c:	ldr	r3, [fp, #8]
   25c60:	str	r3, [sp, #4]
   25c64:	ldr	r3, [fp, #4]
   25c68:	str	r3, [sp]
   25c6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25c70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25c74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25c78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25c7c:	bl	18770 <_start@@Base+0x4150>
   25c80:	str	r0, [fp, #-36]	; 0xffffffdc
   25c84:	b	261d0 <_start@@Base+0x11bb0>
   25c88:	ldr	r3, [fp, #-8]
   25c8c:	b	261d4 <_start@@Base+0x11bb4>
   25c90:	ldr	r3, [fp, #-8]
   25c94:	b	261d4 <_start@@Base+0x11bb4>
   25c98:	ldr	r3, [fp, #-8]
   25c9c:	b	261d4 <_start@@Base+0x11bb4>
   25ca0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25ca4:	add	r1, pc, #652	; 0x28c
   25ca8:	ldrd	r0, [r1]
   25cac:	cmp	r3, r1
   25cb0:	cmpeq	r2, r0
   25cb4:	bhi	25d88 <_start@@Base+0x11768>
   25cb8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25cbc:	add	r1, pc, #628	; 0x274
   25cc0:	ldrd	r0, [r1]
   25cc4:	cmp	r3, r1
   25cc8:	cmpeq	r2, r0
   25ccc:	bne	25d80 <_start@@Base+0x11760>
   25cd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25cd4:	add	r3, r3, #8
   25cd8:	str	r3, [fp, #-36]	; 0xffffffdc
   25cdc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25ce0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25ce4:	bl	14f9c <_start@@Base+0x97c>
   25ce8:	strd	r0, [fp, #-20]	; 0xffffffec
   25cec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25cf0:	mvn	r0, #255	; 0xff
   25cf4:	mvn	r1, #0
   25cf8:	and	r2, r2, r0
   25cfc:	and	r3, r3, r1
   25d00:	add	r1, pc, #568	; 0x238
   25d04:	ldrd	r0, [r1]
   25d08:	cmp	r3, r1
   25d0c:	cmpeq	r2, r0
   25d10:	bne	25d78 <_start@@Base+0x11758>
   25d14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25d18:	str	r3, [fp, #-24]	; 0xffffffe8
   25d1c:	mov	r3, #7
   25d20:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25d24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25d28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25d2c:	bl	14fe4 <_start@@Base+0x9c4>
   25d30:	str	r0, [fp, #-36]	; 0xffffffdc
   25d34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25d38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25d3c:	cmp	r2, r3
   25d40:	beq	25d70 <_start@@Base+0x11750>
   25d44:	ldr	r3, [fp, #8]
   25d48:	str	r3, [sp, #4]
   25d4c:	ldr	r3, [fp, #4]
   25d50:	str	r3, [sp]
   25d54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25d58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25d5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25d60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25d64:	bl	18e64 <_start@@Base+0x4844>
   25d68:	str	r0, [fp, #-36]	; 0xffffffdc
   25d6c:	b	261d0 <_start@@Base+0x11bb0>
   25d70:	ldr	r3, [fp, #-8]
   25d74:	b	261d4 <_start@@Base+0x11bb4>
   25d78:	ldr	r3, [fp, #-8]
   25d7c:	b	261d4 <_start@@Base+0x11bb4>
   25d80:	ldr	r3, [fp, #-8]
   25d84:	b	261d4 <_start@@Base+0x11bb4>
   25d88:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25d8c:	add	r1, pc, #436	; 0x1b4
   25d90:	ldrd	r0, [r1]
   25d94:	cmp	r3, r1
   25d98:	cmpeq	r2, r0
   25d9c:	bhi	25e70 <_start@@Base+0x11850>
   25da0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25da4:	add	r1, pc, #420	; 0x1a4
   25da8:	ldrd	r0, [r1]
   25dac:	cmp	r3, r1
   25db0:	cmpeq	r2, r0
   25db4:	bne	25e68 <_start@@Base+0x11848>
   25db8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25dbc:	add	r3, r3, #8
   25dc0:	str	r3, [fp, #-36]	; 0xffffffdc
   25dc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25dc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25dcc:	bl	14f9c <_start@@Base+0x97c>
   25dd0:	strd	r0, [fp, #-20]	; 0xffffffec
   25dd4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25dd8:	mvn	r0, #255	; 0xff
   25ddc:	mvn	r1, #0
   25de0:	and	r2, r2, r0
   25de4:	and	r3, r3, r1
   25de8:	add	r1, pc, #360	; 0x168
   25dec:	ldrd	r0, [r1]
   25df0:	cmp	r3, r1
   25df4:	cmpeq	r2, r0
   25df8:	bne	25e60 <_start@@Base+0x11840>
   25dfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25e00:	str	r3, [fp, #-24]	; 0xffffffe8
   25e04:	mov	r3, #7
   25e08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25e0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25e10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25e14:	bl	14fe4 <_start@@Base+0x9c4>
   25e18:	str	r0, [fp, #-36]	; 0xffffffdc
   25e1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e24:	cmp	r2, r3
   25e28:	beq	25e58 <_start@@Base+0x11838>
   25e2c:	ldr	r3, [fp, #8]
   25e30:	str	r3, [sp, #4]
   25e34:	ldr	r3, [fp, #4]
   25e38:	str	r3, [sp]
   25e3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25e40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25e44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25e48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25e4c:	bl	18b80 <_start@@Base+0x4560>
   25e50:	str	r0, [fp, #-36]	; 0xffffffdc
   25e54:	b	261d0 <_start@@Base+0x11bb0>
   25e58:	ldr	r3, [fp, #-8]
   25e5c:	b	261d4 <_start@@Base+0x11bb4>
   25e60:	ldr	r3, [fp, #-8]
   25e64:	b	261d4 <_start@@Base+0x11bb4>
   25e68:	ldr	r3, [fp, #-8]
   25e6c:	b	261d4 <_start@@Base+0x11bb4>
   25e70:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25e74:	add	r1, pc, #228	; 0xe4
   25e78:	ldrd	r0, [r1]
   25e7c:	cmp	r3, r1
   25e80:	cmpeq	r2, r0
   25e84:	bne	2604c <_start@@Base+0x11a2c>
   25e88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25e8c:	add	r3, r3, #8
   25e90:	str	r3, [fp, #-36]	; 0xffffffdc
   25e94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25e98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25e9c:	bl	14f9c <_start@@Base+0x97c>
   25ea0:	strd	r0, [fp, #-20]	; 0xffffffec
   25ea4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25ea8:	mvn	r0, #255	; 0xff
   25eac:	mvn	r1, #0
   25eb0:	and	r2, r2, r0
   25eb4:	and	r3, r3, r1
   25eb8:	add	r1, pc, #168	; 0xa8
   25ebc:	ldrd	r0, [r1]
   25ec0:	cmp	r3, r1
   25ec4:	cmpeq	r2, r0
   25ec8:	bne	25f28 <_start@@Base+0x11908>
   25ecc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25ed0:	str	r3, [fp, #-24]	; 0xffffffe8
   25ed4:	mov	r3, #7
   25ed8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25ee4:	bl	14fe4 <_start@@Base+0x9c4>
   25ee8:	str	r0, [fp, #-36]	; 0xffffffdc
   25eec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ef4:	cmp	r2, r3
   25ef8:	beq	25f78 <_start@@Base+0x11958>
   25efc:	ldr	r3, [fp, #8]
   25f00:	str	r3, [sp, #4]
   25f04:	ldr	r3, [fp, #4]
   25f08:	str	r3, [sp]
   25f0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25f10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25f14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25f18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25f1c:	bl	18958 <_start@@Base+0x4338>
   25f20:	str	r0, [fp, #-36]	; 0xffffffdc
   25f24:	b	261d0 <_start@@Base+0x11bb0>
   25f28:	nop			; (mov r0, r0)
   25f2c:	b	25f7c <_start@@Base+0x1195c>
   25f30:	stclvs	14, cr2, [r5], #-280	; 0xfffffee8
   25f34:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25f38:	stclvs	14, cr2, [r5], #-416	; 0xfffffe60
   25f3c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25f40:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   25f44:	ldrbvs	r5, [r8, #-3941]!	; 0xfffff09b
   25f48:	stclvs	14, cr2, [r5], #-436	; 0xfffffe4c
   25f4c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25f50:	stclvs	14, cr2, [r5], #-420	; 0xfffffe5c
   25f54:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25f58:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   25f5c:	cdpvs	15, 7, cr5, cr4, cr5, {3}
   25f60:	stclvs	14, cr2, [r5], #-440	; 0xfffffe48
   25f64:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25f68:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   25f6c:	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
   25f70:			; <UNDEFINED> instruction: 0xffff0000
   25f74:	svcvs	0x006f0000
   25f78:	nop			; (mov r0, r0)
   25f7c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25f80:	add	r1, pc, #600	; 0x258
   25f84:	ldrd	r0, [r1]
   25f88:	cmp	r3, r1
   25f8c:	cmpeq	r2, r0
   25f90:	bne	26044 <_start@@Base+0x11a24>
   25f94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25f98:	add	r3, r3, #8
   25f9c:	str	r3, [fp, #-36]	; 0xffffffdc
   25fa0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25fa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25fa8:	bl	14f9c <_start@@Base+0x97c>
   25fac:	strd	r0, [fp, #-20]	; 0xffffffec
   25fb0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25fb4:	mov	r0, #0
   25fb8:	mvn	r1, #255	; 0xff
   25fbc:	and	r2, r2, r0
   25fc0:	and	r3, r3, r1
   25fc4:	add	r1, pc, #540	; 0x21c
   25fc8:	ldrd	r0, [r1]
   25fcc:	cmp	r3, r1
   25fd0:	cmpeq	r2, r0
   25fd4:	bne	2603c <_start@@Base+0x11a1c>
   25fd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25fdc:	str	r3, [fp, #-24]	; 0xffffffe8
   25fe0:	mov	r3, #3
   25fe4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25fec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25ff0:	bl	14fe4 <_start@@Base+0x9c4>
   25ff4:	str	r0, [fp, #-36]	; 0xffffffdc
   25ff8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26000:	cmp	r2, r3
   26004:	beq	26034 <_start@@Base+0x11a14>
   26008:	ldr	r3, [fp, #8]
   2600c:	str	r3, [sp, #4]
   26010:	ldr	r3, [fp, #4]
   26014:	str	r3, [sp]
   26018:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2601c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26020:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26024:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26028:	bl	1a090 <_start@@Base+0x5a70>
   2602c:	str	r0, [fp, #-36]	; 0xffffffdc
   26030:	b	261d0 <_start@@Base+0x11bb0>
   26034:	ldr	r3, [fp, #-8]
   26038:	b	261d4 <_start@@Base+0x11bb4>
   2603c:	ldr	r3, [fp, #-8]
   26040:	b	261d4 <_start@@Base+0x11bb4>
   26044:	ldr	r3, [fp, #-8]
   26048:	b	261d4 <_start@@Base+0x11bb4>
   2604c:	ldr	r3, [fp, #-8]
   26050:	b	261d4 <_start@@Base+0x11bb4>
   26054:	ldrd	r2, [fp, #-20]	; 0xffffffec
   26058:	add	r1, pc, #400	; 0x190
   2605c:	ldrd	r0, [r1]
   26060:	cmp	r3, r1
   26064:	cmpeq	r2, r0
   26068:	bne	261c8 <_start@@Base+0x11ba8>
   2606c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26070:	add	r3, r3, #8
   26074:	str	r3, [fp, #-36]	; 0xffffffdc
   26078:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2607c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26080:	bl	14f9c <_start@@Base+0x97c>
   26084:	strd	r0, [fp, #-20]	; 0xffffffec
   26088:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2608c:	add	r1, pc, #356	; 0x164
   26090:	ldrd	r0, [r1]
   26094:	cmp	r3, r1
   26098:	cmpeq	r2, r0
   2609c:	bne	261c0 <_start@@Base+0x11ba0>
   260a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   260a4:	add	r3, r3, #8
   260a8:	str	r3, [fp, #-36]	; 0xffffffdc
   260ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   260b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   260b4:	bl	14f9c <_start@@Base+0x97c>
   260b8:	strd	r0, [fp, #-20]	; 0xffffffec
   260bc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   260c0:	add	r1, pc, #312	; 0x138
   260c4:	ldrd	r0, [r1]
   260c8:	cmp	r3, r1
   260cc:	cmpeq	r2, r0
   260d0:	bne	261b8 <_start@@Base+0x11b98>
   260d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   260d8:	add	r3, r3, #8
   260dc:	str	r3, [fp, #-36]	; 0xffffffdc
   260e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   260e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   260e8:	bl	14f9c <_start@@Base+0x97c>
   260ec:	strd	r0, [fp, #-20]	; 0xffffffec
   260f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   260f4:	add	r1, pc, #268	; 0x10c
   260f8:	ldrd	r0, [r1]
   260fc:	cmp	r3, r1
   26100:	cmpeq	r2, r0
   26104:	bne	261b0 <_start@@Base+0x11b90>
   26108:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2610c:	add	r3, r3, #8
   26110:	str	r3, [fp, #-36]	; 0xffffffdc
   26114:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26118:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2611c:	bl	14f9c <_start@@Base+0x97c>
   26120:	strd	r0, [fp, #-20]	; 0xffffffec
   26124:	ldrd	r2, [fp, #-20]	; 0xffffffec
   26128:	mov	r0, #0
   2612c:	mov	r1, #-16777216	; 0xff000000
   26130:	and	r2, r2, r0
   26134:	and	r3, r3, r1
   26138:	cmp	r3, #1694498816	; 0x65000000
   2613c:	cmpeq	r2, #0
   26140:	bne	261a8 <_start@@Base+0x11b88>
   26144:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26148:	str	r3, [fp, #-24]	; 0xffffffe8
   2614c:	mov	r3, #1
   26150:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26154:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2615c:	bl	14fe4 <_start@@Base+0x9c4>
   26160:	str	r0, [fp, #-36]	; 0xffffffdc
   26164:	ldr	r2, [fp, #-36]	; 0xffffffdc
   26168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2616c:	cmp	r2, r3
   26170:	beq	261a0 <_start@@Base+0x11b80>
   26174:	ldr	r3, [fp, #8]
   26178:	str	r3, [sp, #4]
   2617c:	ldr	r3, [fp, #4]
   26180:	str	r3, [sp]
   26184:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26188:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2618c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26190:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26194:	bl	17624 <_start@@Base+0x3004>
   26198:	str	r0, [fp, #-36]	; 0xffffffdc
   2619c:	b	261d0 <_start@@Base+0x11bb0>
   261a0:	ldr	r3, [fp, #-8]
   261a4:	b	261d4 <_start@@Base+0x11bb4>
   261a8:	ldr	r3, [fp, #-8]
   261ac:	b	261d4 <_start@@Base+0x11bb4>
   261b0:	ldr	r3, [fp, #-8]
   261b4:	b	261d4 <_start@@Base+0x11bb4>
   261b8:	ldr	r3, [fp, #-8]
   261bc:	b	261d4 <_start@@Base+0x11bb4>
   261c0:	ldr	r3, [fp, #-8]
   261c4:	b	261d4 <_start@@Base+0x11bb4>
   261c8:	ldr	r3, [fp, #-8]
   261cc:	b	261d4 <_start@@Base+0x11bb4>
   261d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   261d4:	mov	r0, r3
   261d8:	sub	sp, fp, #4
   261dc:	pop	{fp, pc}
   261e0:	rsbsvc	r7, r4, r5, ror #18
   261e4:	svcvs	0x0074656d
   261e8:	andeq	r0, r0, r0
   261ec:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   261f0:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   261f4:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   261f8:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   261fc:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   26200:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   26204:	cmnpl	r0, #-1073741800	; 0xc0000018
   26208:	cmnvs	ip, #100, 10	; 0x19000000
   2620c:	svcvs	0x006d496e
   26210:	push	{fp, lr}
   26214:	add	fp, sp, #4
   26218:	sub	sp, sp, #72	; 0x48
   2621c:	str	r0, [fp, #-56]	; 0xffffffc8
   26220:	str	r1, [fp, #-60]	; 0xffffffc4
   26224:	str	r2, [fp, #-64]	; 0xffffffc0
   26228:	str	r3, [fp, #-68]	; 0xffffffbc
   2622c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26230:	cmp	r3, #0
   26234:	bne	26240 <_start@@Base+0x11c20>
   26238:	sub	r3, fp, #48	; 0x30
   2623c:	b	26244 <_start@@Base+0x11c24>
   26240:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26244:	str	r3, [fp, #-60]	; 0xffffffc4
   26248:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2624c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26250:	add	r2, r2, r3
   26254:	ldr	r3, [fp, #4]
   26258:	str	r3, [sp]
   2625c:	mov	r3, r2
   26260:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26264:	ldr	r1, [fp, #-56]	; 0xffffffc8
   26268:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2626c:	bl	14b98 <_start@@Base+0x578>
   26270:	mov	r3, #0
   26274:	mov	r2, #0
   26278:	ldr	r1, [pc, #148]	; 26314 <_start@@Base+0x11cf4>
   2627c:	add	r1, pc, r1
   26280:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26284:	bl	2ea8c <flatcc_builder_start_buffer@@Base>
   26288:	mov	r3, r0
   2628c:	cmp	r3, #0
   26290:	beq	2629c <_start@@Base+0x11c7c>
   26294:	mvn	r3, #0
   26298:	b	26308 <_start@@Base+0x11ce8>
   2629c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   262a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   262a4:	add	r2, r2, r3
   262a8:	sub	r3, fp, #52	; 0x34
   262ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   262b0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   262b4:	bl	1e564 <_start@@Base+0x9f44>
   262b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   262bc:	ldr	r3, [r3, #24]
   262c0:	cmp	r3, #0
   262c4:	beq	262d4 <_start@@Base+0x11cb4>
   262c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   262cc:	ldr	r3, [r3, #24]
   262d0:	b	26308 <_start@@Base+0x11ce8>
   262d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   262d8:	mov	r1, r3
   262dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   262e0:	bl	2ebe4 <flatcc_builder_end_buffer@@Base>
   262e4:	mov	r3, r0
   262e8:	cmp	r3, #0
   262ec:	bne	262f8 <_start@@Base+0x11cd8>
   262f0:	mvn	r3, #0
   262f4:	b	26308 <_start@@Base+0x11ce8>
   262f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   262fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26300:	str	r2, [r3, #40]	; 0x28
   26304:	mov	r3, #0
   26308:	mov	r0, r3
   2630c:	sub	sp, fp, #4
   26310:	pop	{fp, pc}
   26314:	muleq	r2, ip, r4
   26318:	push	{fp}		; (str fp, [sp, #-4]!)
   2631c:	add	fp, sp, #0
   26320:	sub	sp, sp, #12
   26324:	str	r0, [fp, #-8]
   26328:	str	r1, [fp, #-12]
   2632c:	ldr	r3, [fp, #-12]
   26330:	cmp	r3, #0
   26334:	movne	r3, #1
   26338:	moveq	r3, #0
   2633c:	uxtb	r3, r3
   26340:	mov	r2, r3
   26344:	ldr	r3, [fp, #-8]
   26348:	strb	r2, [r3, #26]
   2634c:	nop			; (mov r0, r0)
   26350:	add	sp, fp, #0
   26354:	pop	{fp}		; (ldr fp, [sp], #4)
   26358:	bx	lr
   2635c:	push	{fp}		; (str fp, [sp, #-4]!)
   26360:	add	fp, sp, #0
   26364:	sub	sp, sp, #12
   26368:	str	r0, [fp, #-8]
   2636c:	str	r1, [fp, #-12]
   26370:	ldr	r3, [fp, #-12]
   26374:	cmp	r3, #0
   26378:	movne	r3, #1
   2637c:	moveq	r3, #0
   26380:	uxtb	r3, r3
   26384:	mov	r2, r3
   26388:	ldr	r3, [fp, #-8]
   2638c:	strb	r2, [r3, #27]
   26390:	nop			; (mov r0, r0)
   26394:	add	sp, fp, #0
   26398:	pop	{fp}		; (ldr fp, [sp], #4)
   2639c:	bx	lr
   263a0:	push	{fp}		; (str fp, [sp, #-4]!)
   263a4:	add	fp, sp, #0
   263a8:	sub	sp, sp, #12
   263ac:	str	r0, [fp, #-8]
   263b0:	mov	r3, r1
   263b4:	strb	r3, [fp, #-9]
   263b8:	ldr	r3, [fp, #-8]
   263bc:	ldrb	r2, [fp, #-9]
   263c0:	strb	r2, [r3, #25]
   263c4:	nop			; (mov r0, r0)
   263c8:	add	sp, fp, #0
   263cc:	pop	{fp}		; (ldr fp, [sp], #4)
   263d0:	bx	lr
   263d4:	push	{fp, lr}
   263d8:	add	fp, sp, #4
   263dc:	sub	sp, sp, #8
   263e0:	str	r0, [fp, #-8]
   263e4:	mov	r1, #2
   263e8:	ldr	r0, [fp, #-8]
   263ec:	bl	263a0 <_start@@Base+0x11d80>
   263f0:	mov	r1, #1
   263f4:	ldr	r0, [fp, #-8]
   263f8:	bl	26318 <_start@@Base+0x11cf8>
   263fc:	mov	r1, #0
   26400:	ldr	r0, [fp, #-8]
   26404:	bl	2635c <_start@@Base+0x11d3c>
   26408:	nop			; (mov r0, r0)
   2640c:	sub	sp, fp, #4
   26410:	pop	{fp, pc}
   26414:	push	{fp, lr}
   26418:	add	fp, sp, #4
   2641c:	sub	sp, sp, #8
   26420:	str	r0, [fp, #-8]
   26424:	str	r1, [fp, #-12]
   26428:	ldr	r3, [fp, #-12]
   2642c:	and	r3, r3, #1
   26430:	cmp	r3, #0
   26434:	movne	r3, #1
   26438:	moveq	r3, #0
   2643c:	uxtb	r3, r3
   26440:	mov	r2, r3
   26444:	ldr	r3, [fp, #-8]
   26448:	strb	r2, [r3, #26]
   2644c:	ldr	r3, [fp, #-12]
   26450:	and	r3, r3, #2
   26454:	cmp	r3, #0
   26458:	movne	r3, #1
   2645c:	moveq	r3, #0
   26460:	uxtb	r3, r3
   26464:	mov	r2, r3
   26468:	ldr	r3, [fp, #-8]
   2646c:	strb	r2, [r3, #27]
   26470:	ldr	r3, [fp, #-12]
   26474:	and	r3, r3, #4
   26478:	cmp	r3, #0
   2647c:	movne	r3, #1
   26480:	moveq	r3, #0
   26484:	uxtb	r3, r3
   26488:	mov	r2, r3
   2648c:	ldr	r3, [fp, #-8]
   26490:	strb	r2, [r3, #28]
   26494:	ldr	r3, [fp, #-12]
   26498:	and	r3, r3, #8
   2649c:	cmp	r3, #0
   264a0:	movne	r3, #1
   264a4:	moveq	r3, #0
   264a8:	uxtb	r3, r3
   264ac:	mov	r2, r3
   264b0:	ldr	r3, [fp, #-8]
   264b4:	strb	r2, [r3, #29]
   264b8:	ldr	r3, [fp, #-12]
   264bc:	and	r3, r3, #16
   264c0:	cmp	r3, #0
   264c4:	beq	264d4 <_start@@Base+0x11eb4>
   264c8:	mov	r1, #2
   264cc:	ldr	r0, [fp, #-8]
   264d0:	bl	263a0 <_start@@Base+0x11d80>
   264d4:	ldr	r3, [fp, #-12]
   264d8:	and	r3, r3, #32
   264dc:	cmp	r3, #0
   264e0:	beq	264ec <_start@@Base+0x11ecc>
   264e4:	ldr	r0, [fp, #-8]
   264e8:	bl	263d4 <_start@@Base+0x11db4>
   264ec:	nop			; (mov r0, r0)
   264f0:	sub	sp, fp, #4
   264f4:	pop	{fp, pc}
   264f8:	push	{fp, lr}
   264fc:	add	fp, sp, #4
   26500:	sub	sp, sp, #16
   26504:	str	r0, [fp, #-8]
   26508:	strd	r2, [fp, #-20]	; 0xffffffec
   2650c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   26510:	orrs	r1, r2, r3
   26514:	beq	26528 <_start@@Base+0x11f08>
   26518:	cmp	r3, #0
   2651c:	cmpeq	r2, #17
   26520:	beq	26544 <_start@@Base+0x11f24>
   26524:	b	26560 <_start@@Base+0x11f40>
   26528:	mov	r2, #10
   2652c:	ldr	r3, [pc, #72]	; 2657c <_start@@Base+0x11f5c>
   26530:	add	r3, pc, r3
   26534:	mov	r1, r3
   26538:	ldr	r0, [fp, #-8]
   2653c:	bl	4374c <flatcc_json_printer_enum@@Base>
   26540:	b	26570 <_start@@Base+0x11f50>
   26544:	mov	r2, #3
   26548:	ldr	r3, [pc, #48]	; 26580 <_start@@Base+0x11f60>
   2654c:	add	r3, pc, r3
   26550:	mov	r1, r3
   26554:	ldr	r0, [fp, #-8]
   26558:	bl	4374c <flatcc_json_printer_enum@@Base>
   2655c:	b	26570 <_start@@Base+0x11f50>
   26560:	ldrd	r2, [fp, #-20]	; 0xffffffec
   26564:	ldr	r0, [fp, #-8]
   26568:	bl	43660 <flatcc_json_printer_int64@@Base>
   2656c:	nop			; (mov r0, r0)
   26570:	nop			; (mov r0, r0)
   26574:	sub	sp, fp, #4
   26578:	pop	{fp, pc}
   2657c:	strdeq	r6, [r2], -r0
   26580:	andeq	r6, r2, r0, ror #3
   26584:	push	{fp}		; (str fp, [sp, #-4]!)
   26588:	add	fp, sp, #0
   2658c:	sub	sp, sp, #12
   26590:	str	r0, [fp, #-8]
   26594:	str	r1, [fp, #-12]
   26598:	nop			; (mov r0, r0)
   2659c:	add	sp, fp, #0
   265a0:	pop	{fp}		; (ldr fp, [sp], #4)
   265a4:	bx	lr
   265a8:	push	{fp, lr}
   265ac:	add	fp, sp, #4
   265b0:	sub	sp, sp, #8
   265b4:	str	r0, [fp, #-8]
   265b8:	str	r1, [fp, #-12]
   265bc:	ldr	r3, [fp, #-12]
   265c0:	cmn	r3, #11
   265c4:	beq	265f4 <_start@@Base+0x11fd4>
   265c8:	cmn	r3, #10
   265cc:	beq	26610 <_start@@Base+0x11ff0>
   265d0:	cmn	r3, #12
   265d4:	bne	2662c <_start@@Base+0x1200c>
   265d8:	mov	r2, #4
   265dc:	ldr	r3, [pc, #100]	; 26648 <_start@@Base+0x12028>
   265e0:	add	r3, pc, r3
   265e4:	mov	r1, r3
   265e8:	ldr	r0, [fp, #-8]
   265ec:	bl	4374c <flatcc_json_printer_enum@@Base>
   265f0:	b	2663c <_start@@Base+0x1201c>
   265f4:	mov	r2, #4
   265f8:	ldr	r3, [pc, #76]	; 2664c <_start@@Base+0x1202c>
   265fc:	add	r3, pc, r3
   26600:	mov	r1, r3
   26604:	ldr	r0, [fp, #-8]
   26608:	bl	4374c <flatcc_json_printer_enum@@Base>
   2660c:	b	2663c <_start@@Base+0x1201c>
   26610:	mov	r2, #4
   26614:	ldr	r3, [pc, #52]	; 26650 <_start@@Base+0x12030>
   26618:	add	r3, pc, r3
   2661c:	mov	r1, r3
   26620:	ldr	r0, [fp, #-8]
   26624:	bl	4374c <flatcc_json_printer_enum@@Base>
   26628:	b	2663c <_start@@Base+0x1201c>
   2662c:	ldr	r1, [fp, #-12]
   26630:	ldr	r0, [fp, #-8]
   26634:	bl	43614 <flatcc_json_printer_int32@@Base>
   26638:	nop			; (mov r0, r0)
   2663c:	nop			; (mov r0, r0)
   26640:	sub	sp, fp, #4
   26644:	pop	{fp, pc}
   26648:	andeq	r6, r2, r0, asr r1
   2664c:	andeq	r6, r2, ip, lsr r1
   26650:	andeq	r6, r2, r8, lsr #2
   26654:	push	{fp, lr}
   26658:	add	fp, sp, #4
   2665c:	sub	sp, sp, #8
   26660:	str	r0, [fp, #-8]
   26664:	str	r1, [fp, #-12]
   26668:	ldr	r3, [fp, #-12]
   2666c:	cmn	r3, #1
   26670:	beq	266b8 <_start@@Base+0x12098>
   26674:	cmn	r3, #1
   26678:	bgt	26688 <_start@@Base+0x12068>
   2667c:	cmn	r3, #2
   26680:	beq	2669c <_start@@Base+0x1207c>
   26684:	b	2670c <_start@@Base+0x120ec>
   26688:	cmp	r3, #2
   2668c:	beq	266d4 <_start@@Base+0x120b4>
   26690:	cmp	r3, #42	; 0x2a
   26694:	beq	266f0 <_start@@Base+0x120d0>
   26698:	b	2670c <_start@@Base+0x120ec>
   2669c:	mov	r2, #6
   266a0:	ldr	r3, [pc, #128]	; 26728 <_start@@Base+0x12108>
   266a4:	add	r3, pc, r3
   266a8:	mov	r1, r3
   266ac:	ldr	r0, [fp, #-8]
   266b0:	bl	4374c <flatcc_json_printer_enum@@Base>
   266b4:	b	2671c <_start@@Base+0x120fc>
   266b8:	mov	r2, #7
   266bc:	ldr	r3, [pc, #104]	; 2672c <_start@@Base+0x1210c>
   266c0:	add	r3, pc, r3
   266c4:	mov	r1, r3
   266c8:	ldr	r0, [fp, #-8]
   266cc:	bl	4374c <flatcc_json_printer_enum@@Base>
   266d0:	b	2671c <_start@@Base+0x120fc>
   266d4:	mov	r2, #4
   266d8:	ldr	r3, [pc, #80]	; 26730 <_start@@Base+0x12110>
   266dc:	add	r3, pc, r3
   266e0:	mov	r1, r3
   266e4:	ldr	r0, [fp, #-8]
   266e8:	bl	4374c <flatcc_json_printer_enum@@Base>
   266ec:	b	2671c <_start@@Base+0x120fc>
   266f0:	mov	r2, #4
   266f4:	ldr	r3, [pc, #56]	; 26734 <_start@@Base+0x12114>
   266f8:	add	r3, pc, r3
   266fc:	mov	r1, r3
   26700:	ldr	r0, [fp, #-8]
   26704:	bl	4374c <flatcc_json_printer_enum@@Base>
   26708:	b	2671c <_start@@Base+0x120fc>
   2670c:	ldr	r1, [fp, #-12]
   26710:	ldr	r0, [fp, #-8]
   26714:	bl	43614 <flatcc_json_printer_int32@@Base>
   26718:	nop			; (mov r0, r0)
   2671c:	nop			; (mov r0, r0)
   26720:	sub	sp, fp, #4
   26724:	pop	{fp, pc}
   26728:	andeq	r6, r2, r4, lsr #1
   2672c:	muleq	r2, r0, r0
   26730:	andeq	r6, r2, ip, ror r0
   26734:	andeq	r6, r2, r8, rrx
   26738:	push	{fp, lr}
   2673c:	add	fp, sp, #4
   26740:	sub	sp, sp, #8
   26744:	str	r0, [fp, #-8]
   26748:	str	r1, [fp, #-12]
   2674c:	ldr	r3, [fp, #-12]
   26750:	cmp	r3, #3
   26754:	beq	26788 <_start@@Base+0x12168>
   26758:	ldr	r2, [pc, #124]	; 267dc <_start@@Base+0x121bc>
   2675c:	cmp	r3, r2
   26760:	beq	267a4 <_start@@Base+0x12184>
   26764:	cmn	r3, #2
   26768:	bne	267c0 <_start@@Base+0x121a0>
   2676c:	mov	r2, #6
   26770:	ldr	r3, [pc, #104]	; 267e0 <_start@@Base+0x121c0>
   26774:	add	r3, pc, r3
   26778:	mov	r1, r3
   2677c:	ldr	r0, [fp, #-8]
   26780:	bl	4374c <flatcc_json_printer_enum@@Base>
   26784:	b	267d0 <_start@@Base+0x121b0>
   26788:	mov	r2, #4
   2678c:	ldr	r3, [pc, #80]	; 267e4 <_start@@Base+0x121c4>
   26790:	add	r3, pc, r3
   26794:	mov	r1, r3
   26798:	ldr	r0, [fp, #-8]
   2679c:	bl	4374c <flatcc_json_printer_enum@@Base>
   267a0:	b	267d0 <_start@@Base+0x121b0>
   267a4:	mov	r2, #4
   267a8:	ldr	r3, [pc, #56]	; 267e8 <_start@@Base+0x121c8>
   267ac:	add	r3, pc, r3
   267b0:	mov	r1, r3
   267b4:	ldr	r0, [fp, #-8]
   267b8:	bl	4374c <flatcc_json_printer_enum@@Base>
   267bc:	b	267d0 <_start@@Base+0x121b0>
   267c0:	ldr	r1, [fp, #-12]
   267c4:	ldr	r0, [fp, #-8]
   267c8:	bl	43614 <flatcc_json_printer_int32@@Base>
   267cc:	nop			; (mov r0, r0)
   267d0:	nop			; (mov r0, r0)
   267d4:	sub	sp, fp, #4
   267d8:	pop	{fp, pc}
   267dc:	cdpvc	14, 10, cr11, cr15, cr15, {5}
   267e0:	strdeq	r5, [r2], -r4
   267e4:	andeq	r5, r2, r0, ror #31
   267e8:	andeq	r5, r2, ip, asr #31
   267ec:	push	{fp, lr}
   267f0:	add	fp, sp, #4
   267f4:	sub	sp, sp, #24
   267f8:	str	r0, [fp, #-24]	; 0xffffffe8
   267fc:	mov	r3, r1
   26800:	strb	r3, [fp, #-25]	; 0xffffffe7
   26804:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   26808:	strb	r3, [fp, #-9]
   2680c:	ldrb	r2, [fp, #-9]
   26810:	ldrb	r3, [fp, #-9]
   26814:	sub	r3, r3, #1
   26818:	and	r3, r3, r2
   2681c:	cmp	r3, #0
   26820:	movne	r3, #1
   26824:	moveq	r3, #0
   26828:	uxtb	r3, r3
   2682c:	str	r3, [fp, #-16]
   26830:	mov	r3, #0
   26834:	str	r3, [fp, #-8]
   26838:	ldrb	r3, [fp, #-9]
   2683c:	and	r3, r3, #244	; 0xf4
   26840:	cmp	r3, #0
   26844:	bne	26854 <_start@@Base+0x12234>
   26848:	ldrb	r3, [fp, #-9]
   2684c:	cmp	r3, #0
   26850:	bne	26868 <_start@@Base+0x12248>
   26854:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   26858:	mov	r1, r3
   2685c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26860:	bl	4356c <flatcc_json_printer_int8@@Base>
   26864:	b	26910 <_start@@Base+0x122f0>
   26868:	ldr	r1, [fp, #-16]
   2686c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26870:	bl	43784 <flatcc_json_printer_delimit_enum_flags@@Base>
   26874:	ldrb	r3, [fp, #-9]
   26878:	and	r3, r3, #1
   2687c:	cmp	r3, #0
   26880:	beq	268a4 <_start@@Base+0x12284>
   26884:	ldr	r1, [fp, #-8]
   26888:	add	r3, r1, #1
   2688c:	str	r3, [fp, #-8]
   26890:	mov	r3, #3
   26894:	ldr	r2, [pc, #124]	; 26918 <_start@@Base+0x122f8>
   26898:	add	r2, pc, r2
   2689c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   268a0:	bl	437fc <flatcc_json_printer_enum_flag@@Base>
   268a4:	ldrb	r3, [fp, #-9]
   268a8:	and	r3, r3, #2
   268ac:	cmp	r3, #0
   268b0:	beq	268d4 <_start@@Base+0x122b4>
   268b4:	ldr	r1, [fp, #-8]
   268b8:	add	r3, r1, #1
   268bc:	str	r3, [fp, #-8]
   268c0:	mov	r3, #5
   268c4:	ldr	r2, [pc, #80]	; 2691c <_start@@Base+0x122fc>
   268c8:	add	r2, pc, r2
   268cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   268d0:	bl	437fc <flatcc_json_printer_enum_flag@@Base>
   268d4:	ldrb	r3, [fp, #-9]
   268d8:	and	r3, r3, #8
   268dc:	cmp	r3, #0
   268e0:	beq	26904 <_start@@Base+0x122e4>
   268e4:	ldr	r1, [fp, #-8]
   268e8:	add	r3, r1, #1
   268ec:	str	r3, [fp, #-8]
   268f0:	mov	r3, #4
   268f4:	ldr	r2, [pc, #36]	; 26920 <_start@@Base+0x12300>
   268f8:	add	r2, pc, r2
   268fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26900:	bl	437fc <flatcc_json_printer_enum_flag@@Base>
   26904:	ldr	r1, [fp, #-16]
   26908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2690c:	bl	43784 <flatcc_json_printer_delimit_enum_flags@@Base>
   26910:	sub	sp, fp, #4
   26914:	pop	{fp, pc}
   26918:	andeq	r5, r2, r8, ror #29
   2691c:			; <UNDEFINED> instruction: 0x00025ebc
   26920:	muleq	r2, r4, lr
   26924:	push	{fp, lr}
   26928:	add	fp, sp, #4
   2692c:	sub	sp, sp, #8
   26930:	str	r0, [fp, #-8]
   26934:	str	r1, [fp, #-12]
   26938:	ldr	r3, [fp, #-12]
   2693c:	cmp	r3, #0
   26940:	bne	26960 <_start@@Base+0x12340>
   26944:	mov	r2, #1
   26948:	ldr	r3, [pc, #44]	; 2697c <_start@@Base+0x1235c>
   2694c:	add	r3, pc, r3
   26950:	mov	r1, r3
   26954:	ldr	r0, [fp, #-8]
   26958:	bl	4374c <flatcc_json_printer_enum@@Base>
   2695c:	b	26970 <_start@@Base+0x12350>
   26960:	ldr	r1, [fp, #-12]
   26964:	ldr	r0, [fp, #-8]
   26968:	bl	43614 <flatcc_json_printer_int32@@Base>
   2696c:	nop			; (mov r0, r0)
   26970:	nop			; (mov r0, r0)
   26974:	sub	sp, fp, #4
   26978:	pop	{fp, pc}
   2697c:	andeq	r5, r2, r8, asr #28
   26980:	push	{fp, lr}
   26984:	add	fp, sp, #4
   26988:	sub	sp, sp, #8
   2698c:	str	r0, [fp, #-8]
   26990:	mov	r3, r1
   26994:	strb	r3, [fp, #-9]
   26998:	ldrb	r3, [fp, #-9]
   2699c:	cmp	r3, #1
   269a0:	bne	269c0 <_start@@Base+0x123a0>
   269a4:	mov	r2, #17
   269a8:	ldr	r3, [pc, #56]	; 269e8 <_start@@Base+0x123c8>
   269ac:	add	r3, pc, r3
   269b0:	mov	r1, r3
   269b4:	ldr	r0, [fp, #-8]
   269b8:	bl	4374c <flatcc_json_printer_enum@@Base>
   269bc:	b	269dc <_start@@Base+0x123bc>
   269c0:	mov	r2, #4
   269c4:	ldr	r3, [pc, #32]	; 269ec <_start@@Base+0x123cc>
   269c8:	add	r3, pc, r3
   269cc:	mov	r1, r3
   269d0:	ldr	r0, [fp, #-8]
   269d4:	bl	4374c <flatcc_json_printer_enum@@Base>
   269d8:	nop			; (mov r0, r0)
   269dc:	nop			; (mov r0, r0)
   269e0:	sub	sp, fp, #4
   269e4:	pop	{fp, pc}
   269e8:	andeq	r5, r2, ip, ror #27
   269ec:	andeq	r5, r2, r4, ror #27
   269f0:	push	{fp, lr}
   269f4:	add	fp, sp, #4
   269f8:	sub	sp, sp, #8
   269fc:	str	r0, [fp, #-8]
   26a00:	str	r1, [fp, #-12]
   26a04:	ldr	r3, [fp, #-12]
   26a08:	ldrb	r3, [r3, #8]
   26a0c:	cmp	r3, #1
   26a10:	beq	26a18 <_start@@Base+0x123f8>
   26a14:	b	26a34 <_start@@Base+0x12414>
   26a18:	ldr	r3, [pc, #32]	; 26a40 <_start@@Base+0x12420>
   26a1c:	add	r3, pc, r3
   26a20:	mov	r2, r3
   26a24:	ldr	r1, [fp, #-12]
   26a28:	ldr	r0, [fp, #-8]
   26a2c:	bl	4a954 <flatcc_json_printer_union_table@@Base>
   26a30:	nop			; (mov r0, r0)
   26a34:	nop			; (mov r0, r0)
   26a38:	sub	sp, fp, #4
   26a3c:	pop	{fp, pc}
   26a40:	andeq	r0, r0, ip, lsr r7
   26a44:	push	{fp, lr}
   26a48:	add	fp, sp, #4
   26a4c:	sub	sp, sp, #8
   26a50:	str	r0, [fp, #-8]
   26a54:	mov	r3, r1
   26a58:	strb	r3, [fp, #-9]
   26a5c:	ldrb	r3, [fp, #-9]
   26a60:	sub	r3, r3, #1
   26a64:	cmp	r3, #3
   26a68:	addls	pc, pc, r3, lsl #2
   26a6c:	b	26af0 <_start@@Base+0x124d0>
   26a70:	b	26a80 <_start@@Base+0x12460>
   26a74:	b	26a9c <_start@@Base+0x1247c>
   26a78:	b	26ab8 <_start@@Base+0x12498>
   26a7c:	b	26ad4 <_start@@Base+0x124b4>
   26a80:	mov	r2, #7
   26a84:	ldr	r3, [pc, #140]	; 26b18 <_start@@Base+0x124f8>
   26a88:	add	r3, pc, r3
   26a8c:	mov	r1, r3
   26a90:	ldr	r0, [fp, #-8]
   26a94:	bl	4374c <flatcc_json_printer_enum@@Base>
   26a98:	b	26b0c <_start@@Base+0x124ec>
   26a9c:	mov	r2, #23
   26aa0:	ldr	r3, [pc, #116]	; 26b1c <_start@@Base+0x124fc>
   26aa4:	add	r3, pc, r3
   26aa8:	mov	r1, r3
   26aac:	ldr	r0, [fp, #-8]
   26ab0:	bl	4374c <flatcc_json_printer_enum@@Base>
   26ab4:	b	26b0c <_start@@Base+0x124ec>
   26ab8:	mov	r2, #8
   26abc:	ldr	r3, [pc, #92]	; 26b20 <_start@@Base+0x12500>
   26ac0:	add	r3, pc, r3
   26ac4:	mov	r1, r3
   26ac8:	ldr	r0, [fp, #-8]
   26acc:	bl	4374c <flatcc_json_printer_enum@@Base>
   26ad0:	b	26b0c <_start@@Base+0x124ec>
   26ad4:	mov	r2, #3
   26ad8:	ldr	r3, [pc, #68]	; 26b24 <_start@@Base+0x12504>
   26adc:	add	r3, pc, r3
   26ae0:	mov	r1, r3
   26ae4:	ldr	r0, [fp, #-8]
   26ae8:	bl	4374c <flatcc_json_printer_enum@@Base>
   26aec:	b	26b0c <_start@@Base+0x124ec>
   26af0:	mov	r2, #4
   26af4:	ldr	r3, [pc, #44]	; 26b28 <_start@@Base+0x12508>
   26af8:	add	r3, pc, r3
   26afc:	mov	r1, r3
   26b00:	ldr	r0, [fp, #-8]
   26b04:	bl	4374c <flatcc_json_printer_enum@@Base>
   26b08:	nop			; (mov r0, r0)
   26b0c:	nop			; (mov r0, r0)
   26b10:	sub	sp, fp, #4
   26b14:	pop	{fp, pc}
   26b18:	andeq	r5, r2, ip, lsr #26
   26b1c:	andeq	r5, r2, r8, lsl sp
   26b20:	andeq	r5, r2, r4, lsl sp
   26b24:	andeq	r5, r2, r4, lsl #26
   26b28:			; <UNDEFINED> instruction: 0x00025cb4
   26b2c:	push	{fp, lr}
   26b30:	add	fp, sp, #4
   26b34:	sub	sp, sp, #8
   26b38:	str	r0, [fp, #-8]
   26b3c:	str	r1, [fp, #-12]
   26b40:	ldr	r3, [fp, #-12]
   26b44:	ldrb	r3, [r3, #8]
   26b48:	sub	r3, r3, #1
   26b4c:	cmp	r3, #3
   26b50:	addls	pc, pc, r3, lsl #2
   26b54:	b	26bd8 <_start@@Base+0x125b8>
   26b58:	b	26b68 <_start@@Base+0x12548>
   26b5c:	b	26b84 <_start@@Base+0x12564>
   26b60:	b	26ba0 <_start@@Base+0x12580>
   26b64:	b	26bbc <_start@@Base+0x1259c>
   26b68:	ldr	r3, [pc, #120]	; 26be8 <_start@@Base+0x125c8>
   26b6c:	add	r3, pc, r3
   26b70:	mov	r2, r3
   26b74:	ldr	r1, [fp, #-12]
   26b78:	ldr	r0, [fp, #-8]
   26b7c:	bl	4a954 <flatcc_json_printer_union_table@@Base>
   26b80:	b	26bdc <_start@@Base+0x125bc>
   26b84:	ldr	r3, [pc, #96]	; 26bec <_start@@Base+0x125cc>
   26b88:	add	r3, pc, r3
   26b8c:	mov	r2, r3
   26b90:	ldr	r1, [fp, #-12]
   26b94:	ldr	r0, [fp, #-8]
   26b98:	bl	4a954 <flatcc_json_printer_union_table@@Base>
   26b9c:	b	26bdc <_start@@Base+0x125bc>
   26ba0:	ldr	r3, [pc, #72]	; 26bf0 <_start@@Base+0x125d0>
   26ba4:	add	r3, pc, r3
   26ba8:	mov	r2, r3
   26bac:	ldr	r1, [fp, #-12]
   26bb0:	ldr	r0, [fp, #-8]
   26bb4:	bl	4a954 <flatcc_json_printer_union_table@@Base>
   26bb8:	b	26bdc <_start@@Base+0x125bc>
   26bbc:	ldr	r3, [pc, #48]	; 26bf4 <_start@@Base+0x125d4>
   26bc0:	add	r3, pc, r3
   26bc4:	mov	r2, r3
   26bc8:	ldr	r1, [fp, #-12]
   26bcc:	ldr	r0, [fp, #-8]
   26bd0:	bl	4a954 <flatcc_json_printer_union_table@@Base>
   26bd4:	b	26bdc <_start@@Base+0x125bc>
   26bd8:	nop			; (mov r0, r0)
   26bdc:	nop			; (mov r0, r0)
   26be0:	sub	sp, fp, #4
   26be4:	pop	{fp, pc}
   26be8:	andeq	r0, r0, r0, ror lr
   26bec:	muleq	r0, r0, r6
   26bf0:	ldrdeq	r0, [r0], -r8
   26bf4:	andeq	r0, r0, r8, asr r9
   26bf8:	push	{fp, lr}
   26bfc:	add	fp, sp, #4
   26c00:	sub	sp, sp, #8
   26c04:	str	r0, [fp, #-8]
   26c08:	mov	r3, r1
   26c0c:	strb	r3, [fp, #-9]
   26c10:	ldrb	r3, [fp, #-9]
   26c14:	cmp	r3, #9
   26c18:	beq	26c8c <_start@@Base+0x1266c>
   26c1c:	cmp	r3, #9
   26c20:	bgt	26c38 <_start@@Base+0x12618>
   26c24:	cmp	r3, #2
   26c28:	beq	26c54 <_start@@Base+0x12634>
   26c2c:	cmp	r3, #8
   26c30:	beq	26c70 <_start@@Base+0x12650>
   26c34:	b	26cfc <_start@@Base+0x126dc>
   26c38:	cmp	r3, #11
   26c3c:	beq	26cc4 <_start@@Base+0x126a4>
   26c40:	cmp	r3, #11
   26c44:	blt	26ca8 <_start@@Base+0x12688>
   26c48:	cmp	r3, #255	; 0xff
   26c4c:	beq	26ce0 <_start@@Base+0x126c0>
   26c50:	b	26cfc <_start@@Base+0x126dc>
   26c54:	mov	r2, #5
   26c58:	ldr	r3, [pc, #196]	; 26d24 <_start@@Base+0x12704>
   26c5c:	add	r3, pc, r3
   26c60:	mov	r1, r3
   26c64:	ldr	r0, [fp, #-8]
   26c68:	bl	4374c <flatcc_json_printer_enum@@Base>
   26c6c:	b	26d18 <_start@@Base+0x126f8>
   26c70:	mov	r2, #8
   26c74:	ldr	r3, [pc, #172]	; 26d28 <_start@@Base+0x12708>
   26c78:	add	r3, pc, r3
   26c7c:	mov	r1, r3
   26c80:	ldr	r0, [fp, #-8]
   26c84:	bl	4374c <flatcc_json_printer_enum@@Base>
   26c88:	b	26d18 <_start@@Base+0x126f8>
   26c8c:	mov	r2, #5
   26c90:	ldr	r3, [pc, #148]	; 26d2c <_start@@Base+0x1270c>
   26c94:	add	r3, pc, r3
   26c98:	mov	r1, r3
   26c9c:	ldr	r0, [fp, #-8]
   26ca0:	bl	4374c <flatcc_json_printer_enum@@Base>
   26ca4:	b	26d18 <_start@@Base+0x126f8>
   26ca8:	mov	r2, #7
   26cac:	ldr	r3, [pc, #124]	; 26d30 <_start@@Base+0x12710>
   26cb0:	add	r3, pc, r3
   26cb4:	mov	r1, r3
   26cb8:	ldr	r0, [fp, #-8]
   26cbc:	bl	4374c <flatcc_json_printer_enum@@Base>
   26cc0:	b	26d18 <_start@@Base+0x126f8>
   26cc4:	mov	r2, #5
   26cc8:	ldr	r3, [pc, #100]	; 26d34 <_start@@Base+0x12714>
   26ccc:	add	r3, pc, r3
   26cd0:	mov	r1, r3
   26cd4:	ldr	r0, [fp, #-8]
   26cd8:	bl	4374c <flatcc_json_printer_enum@@Base>
   26cdc:	b	26d18 <_start@@Base+0x126f8>
   26ce0:	mov	r2, #6
   26ce4:	ldr	r3, [pc, #76]	; 26d38 <_start@@Base+0x12718>
   26ce8:	add	r3, pc, r3
   26cec:	mov	r1, r3
   26cf0:	ldr	r0, [fp, #-8]
   26cf4:	bl	4374c <flatcc_json_printer_enum@@Base>
   26cf8:	b	26d18 <_start@@Base+0x126f8>
   26cfc:	mov	r2, #4
   26d00:	ldr	r3, [pc, #52]	; 26d3c <_start@@Base+0x1271c>
   26d04:	add	r3, pc, r3
   26d08:	mov	r1, r3
   26d0c:	ldr	r0, [fp, #-8]
   26d10:	bl	4374c <flatcc_json_printer_enum@@Base>
   26d14:	nop			; (mov r0, r0)
   26d18:	nop			; (mov r0, r0)
   26d1c:	sub	sp, fp, #4
   26d20:	pop	{fp, pc}
   26d24:	andeq	r5, r2, r8, lsl #23
   26d28:	andeq	r5, r2, r4, ror fp
   26d2c:	andeq	r5, r2, r4, ror #22
   26d30:	andeq	r5, r2, r0, asr fp
   26d34:	andeq	r5, r2, ip, lsr fp
   26d38:	andeq	r5, r2, r8, lsr #22
   26d3c:	andeq	r5, r2, r8, lsr #21
   26d40:	push	{fp, lr}
   26d44:	add	fp, sp, #4
   26d48:	sub	sp, sp, #8
   26d4c:	str	r0, [fp, #-8]
   26d50:	str	r1, [fp, #-12]
   26d54:	ldr	r3, [fp, #-12]
   26d58:	ldrb	r3, [r3, #8]
   26d5c:	cmp	r3, #9
   26d60:	beq	26dd4 <_start@@Base+0x127b4>
   26d64:	cmp	r3, #9
   26d68:	bgt	26d80 <_start@@Base+0x12760>
   26d6c:	cmp	r3, #2
   26d70:	beq	26d9c <_start@@Base+0x1277c>
   26d74:	cmp	r3, #8
   26d78:	beq	26db8 <_start@@Base+0x12798>
   26d7c:	b	26e2c <_start@@Base+0x1280c>
   26d80:	cmp	r3, #11
   26d84:	beq	26e0c <_start@@Base+0x127ec>
   26d88:	cmp	r3, #11
   26d8c:	blt	26df0 <_start@@Base+0x127d0>
   26d90:	cmp	r3, #255	; 0xff
   26d94:	beq	26e1c <_start@@Base+0x127fc>
   26d98:	b	26e2c <_start@@Base+0x1280c>
   26d9c:	ldr	r3, [pc, #148]	; 26e38 <_start@@Base+0x12818>
   26da0:	add	r3, pc, r3
   26da4:	mov	r2, r3
   26da8:	ldr	r1, [fp, #-12]
   26dac:	ldr	r0, [fp, #-8]
   26db0:	bl	4a954 <flatcc_json_printer_union_table@@Base>
   26db4:	b	26e2c <_start@@Base+0x1280c>
   26db8:	ldr	r3, [pc, #124]	; 26e3c <_start@@Base+0x1281c>
   26dbc:	add	r3, pc, r3
   26dc0:	mov	r2, r3
   26dc4:	ldr	r1, [fp, #-12]
   26dc8:	ldr	r0, [fp, #-8]
   26dcc:	bl	4a9a0 <flatcc_json_printer_union_struct@@Base>
   26dd0:	b	26e2c <_start@@Base+0x1280c>
   26dd4:	ldr	r3, [pc, #100]	; 26e40 <_start@@Base+0x12820>
   26dd8:	add	r3, pc, r3
   26ddc:	mov	r2, r3
   26de0:	ldr	r1, [fp, #-12]
   26de4:	ldr	r0, [fp, #-8]
   26de8:	bl	4a9a0 <flatcc_json_printer_union_struct@@Base>
   26dec:	b	26e2c <_start@@Base+0x1280c>
   26df0:	ldr	r3, [pc, #76]	; 26e44 <_start@@Base+0x12824>
   26df4:	add	r3, pc, r3
   26df8:	mov	r2, r3
   26dfc:	ldr	r1, [fp, #-12]
   26e00:	ldr	r0, [fp, #-8]
   26e04:	bl	4a9a0 <flatcc_json_printer_union_struct@@Base>
   26e08:	b	26e2c <_start@@Base+0x1280c>
   26e0c:	ldr	r1, [fp, #-12]
   26e10:	ldr	r0, [fp, #-8]
   26e14:	bl	4aa7c <flatcc_json_printer_union_string@@Base>
   26e18:	b	26e2c <_start@@Base+0x1280c>
   26e1c:	ldr	r1, [fp, #-12]
   26e20:	ldr	r0, [fp, #-8]
   26e24:	bl	4aa7c <flatcc_json_printer_union_string@@Base>
   26e28:	nop			; (mov r0, r0)
   26e2c:	nop			; (mov r0, r0)
   26e30:	sub	sp, fp, #4
   26e34:	pop	{fp, pc}
   26e38:	andeq	r1, r0, ip, lsl r5
   26e3c:	andeq	r0, r0, r4, lsl #6
   26e40:	andeq	r0, r0, r4, lsr r3
   26e44:	andeq	r0, r0, r8, lsl r3
   26e48:	push	{fp}		; (str fp, [sp, #-4]!)
   26e4c:	add	fp, sp, #0
   26e50:	sub	sp, sp, #12
   26e54:	str	r0, [fp, #-8]
   26e58:	str	r1, [fp, #-12]
   26e5c:	nop			; (mov r0, r0)
   26e60:	add	sp, fp, #0
   26e64:	pop	{fp}		; (ldr fp, [sp], #4)
   26e68:	bx	lr
   26e6c:	push	{fp, lr}
   26e70:	add	fp, sp, #4
   26e74:	sub	sp, sp, #16
   26e78:	str	r0, [fp, #-8]
   26e7c:	str	r1, [fp, #-12]
   26e80:	mov	r3, #1
   26e84:	str	r3, [sp, #4]
   26e88:	ldr	r3, [pc, #76]	; 26edc <_start@@Base+0x128bc>
   26e8c:	add	r3, pc, r3
   26e90:	str	r3, [sp]
   26e94:	mov	r3, #0
   26e98:	ldr	r2, [fp, #-12]
   26e9c:	mov	r1, #0
   26ea0:	ldr	r0, [fp, #-8]
   26ea4:	bl	4553c <flatcc_json_printer_int16_struct_field@@Base>
   26ea8:	mov	r3, #1
   26eac:	str	r3, [sp, #4]
   26eb0:	ldr	r3, [pc, #40]	; 26ee0 <_start@@Base+0x128c0>
   26eb4:	add	r3, pc, r3
   26eb8:	str	r3, [sp]
   26ebc:	mov	r3, #2
   26ec0:	ldr	r2, [fp, #-12]
   26ec4:	mov	r1, #1
   26ec8:	ldr	r0, [fp, #-8]
   26ecc:	bl	4548c <flatcc_json_printer_int8_struct_field@@Base>
   26ed0:	nop			; (mov r0, r0)
   26ed4:	sub	sp, fp, #4
   26ed8:	pop	{fp, pc}
   26edc:	andeq	r5, r2, ip, lsl #19
   26ee0:	andeq	r5, r2, r8, ror #18
   26ee4:	push	{fp}		; (str fp, [sp, #-4]!)
   26ee8:	add	fp, sp, #0
   26eec:	sub	sp, sp, #12
   26ef0:	str	r0, [fp, #-8]
   26ef4:	str	r1, [fp, #-12]
   26ef8:	nop			; (mov r0, r0)
   26efc:	add	sp, fp, #0
   26f00:	pop	{fp}		; (ldr fp, [sp], #4)
   26f04:	bx	lr
   26f08:	push	{fp, lr}
   26f0c:	add	fp, sp, #4
   26f10:	sub	sp, sp, #24
   26f14:	str	r0, [fp, #-8]
   26f18:	str	r1, [fp, #-12]
   26f1c:	mov	r3, #1
   26f20:	str	r3, [sp, #4]
   26f24:	ldr	r3, [pc, #260]	; 27030 <_start@@Base+0x12a10>
   26f28:	add	r3, pc, r3
   26f2c:	str	r3, [sp]
   26f30:	mov	r3, #0
   26f34:	ldr	r2, [fp, #-12]
   26f38:	mov	r1, #0
   26f3c:	ldr	r0, [fp, #-8]
   26f40:	bl	457ec <flatcc_json_printer_float_struct_field@@Base>
   26f44:	mov	r3, #1
   26f48:	str	r3, [sp, #4]
   26f4c:	ldr	r3, [pc, #224]	; 27034 <_start@@Base+0x12a14>
   26f50:	add	r3, pc, r3
   26f54:	str	r3, [sp]
   26f58:	mov	r3, #4
   26f5c:	ldr	r2, [fp, #-12]
   26f60:	mov	r1, #1
   26f64:	ldr	r0, [fp, #-8]
   26f68:	bl	457ec <flatcc_json_printer_float_struct_field@@Base>
   26f6c:	mov	r3, #1
   26f70:	str	r3, [sp, #4]
   26f74:	ldr	r3, [pc, #188]	; 27038 <_start@@Base+0x12a18>
   26f78:	add	r3, pc, r3
   26f7c:	str	r3, [sp]
   26f80:	mov	r3, #8
   26f84:	ldr	r2, [fp, #-12]
   26f88:	mov	r1, #2
   26f8c:	ldr	r0, [fp, #-8]
   26f90:	bl	457ec <flatcc_json_printer_float_struct_field@@Base>
   26f94:	mov	r3, #5
   26f98:	str	r3, [sp, #4]
   26f9c:	ldr	r3, [pc, #152]	; 2703c <_start@@Base+0x12a1c>
   26fa0:	add	r3, pc, r3
   26fa4:	str	r3, [sp]
   26fa8:	mov	r3, #16
   26fac:	ldr	r2, [fp, #-12]
   26fb0:	mov	r1, #3
   26fb4:	ldr	r0, [fp, #-8]
   26fb8:	bl	4589c <flatcc_json_printer_double_struct_field@@Base>
   26fbc:	ldr	r3, [pc, #124]	; 27040 <_start@@Base+0x12a20>
   26fc0:	add	r3, pc, r3
   26fc4:	str	r3, [sp, #8]
   26fc8:	mov	r3, #5
   26fcc:	str	r3, [sp, #4]
   26fd0:	ldr	r3, [pc, #108]	; 27044 <_start@@Base+0x12a24>
   26fd4:	add	r3, pc, r3
   26fd8:	str	r3, [sp]
   26fdc:	mov	r3, #24
   26fe0:	ldr	r2, [fp, #-12]
   26fe4:	mov	r1, #4
   26fe8:	ldr	r0, [fp, #-8]
   26fec:	bl	45c8c <flatcc_json_printer_int8_enum_struct_field@@Base>
   26ff0:	ldr	r3, [pc, #80]	; 27048 <_start@@Base+0x12a28>
   26ff4:	add	r3, pc, r3
   26ff8:	str	r3, [sp, #8]
   26ffc:	mov	r3, #5
   27000:	str	r3, [sp, #4]
   27004:	ldr	r3, [pc, #64]	; 2704c <_start@@Base+0x12a2c>
   27008:	add	r3, pc, r3
   2700c:	str	r3, [sp]
   27010:	mov	r3, #26
   27014:	ldr	r2, [fp, #-12]
   27018:	mov	r1, #5
   2701c:	ldr	r0, [fp, #-8]
   27020:	bl	4aabc <flatcc_json_printer_embedded_struct_field@@Base>
   27024:	nop			; (mov r0, r0)
   27028:	sub	sp, fp, #4
   2702c:	pop	{fp, pc}
   27030:	andeq	r5, r2, ip, ror #16
   27034:	ldrdeq	r5, [r2], -r0
   27038:	andeq	r5, r2, ip, lsr #17
   2703c:	andeq	r5, r2, r8, lsl #17
   27040:			; <UNDEFINED> instruction: 0xfffff824
   27044:	andeq	r5, r2, ip, asr r8
   27048:			; <UNDEFINED> instruction: 0xfffffe70
   2704c:	andeq	r5, r2, r0, lsr r8
   27050:	push	{fp, lr}
   27054:	add	fp, sp, #4
   27058:	sub	sp, sp, #16
   2705c:	str	r0, [fp, #-8]
   27060:	str	r1, [fp, #-12]
   27064:	mov	r3, #2
   27068:	str	r3, [sp, #4]
   2706c:	ldr	r3, [pc, #76]	; 270c0 <_start@@Base+0x12aa0>
   27070:	add	r3, pc, r3
   27074:	str	r3, [sp]
   27078:	mov	r3, #0
   2707c:	ldr	r2, [fp, #-12]
   27080:	mov	r1, #0
   27084:	ldr	r0, [fp, #-8]
   27088:	bl	4533c <flatcc_json_printer_uint32_struct_field@@Base>
   2708c:	mov	r3, #8
   27090:	str	r3, [sp, #4]
   27094:	ldr	r3, [pc, #40]	; 270c4 <_start@@Base+0x12aa4>
   27098:	add	r3, pc, r3
   2709c:	str	r3, [sp]
   270a0:	mov	r3, #4
   270a4:	ldr	r2, [fp, #-12]
   270a8:	mov	r1, #1
   270ac:	ldr	r0, [fp, #-8]
   270b0:	bl	4533c <flatcc_json_printer_uint32_struct_field@@Base>
   270b4:	nop			; (mov r0, r0)
   270b8:	sub	sp, fp, #4
   270bc:	pop	{fp, pc}
   270c0:	ldrdeq	r5, [r2], -r0
   270c4:	andeq	r5, r2, ip, lsr #15
   270c8:	push	{fp, lr}
   270cc:	add	fp, sp, #4
   270d0:	sub	sp, sp, #16
   270d4:	str	r0, [fp, #-8]
   270d8:	str	r1, [fp, #-12]
   270dc:	mov	r3, #11
   270e0:	str	r3, [sp, #4]
   270e4:	ldr	r3, [pc, #36]	; 27110 <_start@@Base+0x12af0>
   270e8:	add	r3, pc, r3
   270ec:	str	r3, [sp]
   270f0:	mov	r3, #0
   270f4:	ldr	r2, [fp, #-12]
   270f8:	mov	r1, #0
   270fc:	ldr	r0, [fp, #-8]
   27100:	bl	4528c <flatcc_json_printer_uint16_struct_field@@Base>
   27104:	nop			; (mov r0, r0)
   27108:	sub	sp, fp, #4
   2710c:	pop	{fp, pc}
   27110:	andeq	r5, r2, r8, ror #14
   27114:	push	{fp, lr}
   27118:	add	fp, sp, #4
   2711c:	sub	sp, sp, #16
   27120:	str	r0, [fp, #-8]
   27124:	str	r1, [fp, #-12]
   27128:	mov	r3, #10
   2712c:	str	r3, [sp, #4]
   27130:	ldr	r3, [pc, #36]	; 2715c <_start@@Base+0x12b3c>
   27134:	add	r3, pc, r3
   27138:	str	r3, [sp]
   2713c:	mov	r3, #0
   27140:	ldr	r2, [fp, #-12]
   27144:	mov	r1, #0
   27148:	ldr	r0, [fp, #-8]
   2714c:	bl	455ec <flatcc_json_printer_int32_struct_field@@Base>
   27150:	nop			; (mov r0, r0)
   27154:	sub	sp, fp, #4
   27158:	pop	{fp, pc}
   2715c:	andeq	r5, r2, r8, lsr #14
   27160:	push	{fp}		; (str fp, [sp, #-4]!)
   27164:	add	fp, sp, #0
   27168:	sub	sp, sp, #12
   2716c:	str	r0, [fp, #-8]
   27170:	str	r1, [fp, #-12]
   27174:	nop			; (mov r0, r0)
   27178:	add	sp, fp, #0
   2717c:	pop	{fp}		; (ldr fp, [sp], #4)
   27180:	bx	lr
   27184:	push	{fp}		; (str fp, [sp, #-4]!)
   27188:	add	fp, sp, #0
   2718c:	sub	sp, sp, #12
   27190:	str	r0, [fp, #-8]
   27194:	str	r1, [fp, #-12]
   27198:	nop			; (mov r0, r0)
   2719c:	add	sp, fp, #0
   271a0:	pop	{fp}		; (ldr fp, [sp], #4)
   271a4:	bx	lr
   271a8:	push	{fp}		; (str fp, [sp, #-4]!)
   271ac:	add	fp, sp, #0
   271b0:	sub	sp, sp, #12
   271b4:	str	r0, [fp, #-8]
   271b8:	str	r1, [fp, #-12]
   271bc:	nop			; (mov r0, r0)
   271c0:	add	sp, fp, #0
   271c4:	pop	{fp}		; (ldr fp, [sp], #4)
   271c8:	bx	lr
   271cc:	push	{fp, lr}
   271d0:	add	fp, sp, #4
   271d4:	sub	sp, sp, #16
   271d8:	str	r0, [fp, #-8]
   271dc:	str	r1, [fp, #-12]
   271e0:	ldr	r3, [pc, #48]	; 27218 <_start@@Base+0x12bf8>
   271e4:	add	r3, pc, r3
   271e8:	str	r3, [sp, #4]
   271ec:	mov	r3, #5
   271f0:	str	r3, [sp]
   271f4:	ldr	r3, [pc, #32]	; 2721c <_start@@Base+0x12bfc>
   271f8:	add	r3, pc, r3
   271fc:	mov	r2, #0
   27200:	ldr	r1, [fp, #-12]
   27204:	ldr	r0, [fp, #-8]
   27208:	bl	4abd0 <flatcc_json_printer_struct_field@@Base>
   2720c:	nop			; (mov r0, r0)
   27210:	sub	sp, fp, #4
   27214:	pop	{fp, pc}
   27218:			; <UNDEFINED> instruction: 0xfffffcf8
   2721c:	andeq	r5, r2, r0, ror r6
   27220:	push	{fp, lr}
   27224:	add	fp, sp, #4
   27228:	sub	sp, sp, #24
   2722c:	str	r0, [fp, #-8]
   27230:	str	r1, [fp, #-12]
   27234:	ldr	r3, [pc, #188]	; 272f8 <_start@@Base+0x12cd8>
   27238:	add	r3, pc, r3
   2723c:	str	r3, [sp, #8]
   27240:	mov	r3, #2
   27244:	str	r3, [sp, #4]
   27248:	mov	r3, #5
   2724c:	str	r3, [sp]
   27250:	ldr	r3, [pc, #164]	; 272fc <_start@@Base+0x12cdc>
   27254:	add	r3, pc, r3
   27258:	mov	r2, #0
   2725c:	ldr	r1, [fp, #-12]
   27260:	ldr	r0, [fp, #-8]
   27264:	bl	44bd8 <flatcc_json_printer_int8_enum_field@@Base>
   27268:	ldr	r3, [pc, #144]	; 27300 <_start@@Base+0x12ce0>
   2726c:	add	r3, pc, r3
   27270:	str	r3, [sp, #8]
   27274:	mov	r3, #2
   27278:	str	r3, [sp, #4]
   2727c:	mov	r3, #6
   27280:	str	r3, [sp]
   27284:	ldr	r3, [pc, #120]	; 27304 <_start@@Base+0x12ce4>
   27288:	add	r3, pc, r3
   2728c:	mov	r2, #1
   27290:	ldr	r1, [fp, #-12]
   27294:	ldr	r0, [fp, #-8]
   27298:	bl	44bd8 <flatcc_json_printer_int8_enum_field@@Base>
   2729c:	mov	r3, #2
   272a0:	str	r3, [sp, #4]
   272a4:	mov	r3, #2
   272a8:	str	r3, [sp]
   272ac:	ldr	r3, [pc, #84]	; 27308 <_start@@Base+0x12ce8>
   272b0:	add	r3, pc, r3
   272b4:	mov	r2, #2
   272b8:	ldr	r1, [fp, #-12]
   272bc:	ldr	r0, [fp, #-8]
   272c0:	bl	43b6c <flatcc_json_printer_uint8_field@@Base>
   272c4:	mov	r3, #2
   272c8:	str	r3, [sp, #4]
   272cc:	mov	r3, #3
   272d0:	str	r3, [sp]
   272d4:	ldr	r3, [pc, #48]	; 2730c <_start@@Base+0x12cec>
   272d8:	add	r3, pc, r3
   272dc:	mov	r2, #3
   272e0:	ldr	r1, [fp, #-12]
   272e4:	ldr	r0, [fp, #-8]
   272e8:	bl	43b6c <flatcc_json_printer_uint8_field@@Base>
   272ec:	nop			; (mov r0, r0)
   272f0:	sub	sp, fp, #4
   272f4:	pop	{fp, pc}
   272f8:			; <UNDEFINED> instruction: 0xfffff5ac
   272fc:	andeq	r5, r2, ip, lsl r6
   27300:			; <UNDEFINED> instruction: 0xfffff578
   27304:	strdeq	r5, [r2], -r0
   27308:	ldrdeq	r5, [r2], -r0
   2730c:	andeq	r5, r2, ip, lsr #11
   27310:	push	{fp, lr}
   27314:	add	fp, sp, #4
   27318:	sub	sp, sp, #32
   2731c:	str	r0, [fp, #-8]
   27320:	str	r1, [fp, #-12]
   27324:	ldr	r3, [pc, #300]	; 27458 <_start@@Base+0x12e38>
   27328:	add	r3, pc, r3
   2732c:	str	r3, [sp, #4]
   27330:	mov	r3, #6
   27334:	str	r3, [sp]
   27338:	ldr	r3, [pc, #284]	; 2745c <_start@@Base+0x12e3c>
   2733c:	add	r3, pc, r3
   27340:	mov	r2, #0
   27344:	ldr	r1, [fp, #-12]
   27348:	ldr	r0, [fp, #-8]
   2734c:	bl	4abd0 <flatcc_json_printer_struct_field@@Base>
   27350:	ldr	r3, [pc, #264]	; 27460 <_start@@Base+0x12e40>
   27354:	add	r3, pc, r3
   27358:	str	r3, [sp, #16]
   2735c:	mov	r2, #0
   27360:	mov	r3, #0
   27364:	strd	r2, [sp, #8]
   27368:	mov	r3, #6
   2736c:	str	r3, [sp]
   27370:	ldr	r3, [pc, #236]	; 27464 <_start@@Base+0x12e44>
   27374:	add	r3, pc, r3
   27378:	mov	r2, #1
   2737c:	ldr	r1, [fp, #-12]
   27380:	ldr	r0, [fp, #-8]
   27384:	bl	44f74 <flatcc_json_printer_int64_enum_field@@Base>
   27388:	ldr	r3, [pc, #216]	; 27468 <_start@@Base+0x12e48>
   2738c:	add	r3, pc, r3
   27390:	str	r3, [sp, #16]
   27394:	mov	r2, #0
   27398:	mov	r3, #0
   2739c:	strd	r2, [sp, #8]
   273a0:	mov	r3, #7
   273a4:	str	r3, [sp]
   273a8:	ldr	r3, [pc, #188]	; 2746c <_start@@Base+0x12e4c>
   273ac:	add	r3, pc, r3
   273b0:	mov	r2, #2
   273b4:	ldr	r1, [fp, #-12]
   273b8:	ldr	r0, [fp, #-8]
   273bc:	bl	44f74 <flatcc_json_printer_int64_enum_field@@Base>
   273c0:	mov	r3, #0
   273c4:	str	r3, [sp, #4]
   273c8:	mov	r3, #7
   273cc:	str	r3, [sp]
   273d0:	ldr	r3, [pc, #152]	; 27470 <_start@@Base+0x12e50>
   273d4:	add	r3, pc, r3
   273d8:	mov	r2, #3
   273dc:	ldr	r1, [fp, #-12]
   273e0:	ldr	r0, [fp, #-8]
   273e4:	bl	441c0 <flatcc_json_printer_int32_field@@Base>
   273e8:	ldr	r3, [pc, #132]	; 27474 <_start@@Base+0x12e54>
   273ec:	add	r3, pc, r3
   273f0:	str	r3, [sp, #16]
   273f4:	mov	r2, #0
   273f8:	mov	r3, #0
   273fc:	strd	r2, [sp, #8]
   27400:	mov	r3, #7
   27404:	str	r3, [sp]
   27408:	ldr	r3, [pc, #104]	; 27478 <_start@@Base+0x12e58>
   2740c:	add	r3, pc, r3
   27410:	mov	r2, #4
   27414:	ldr	r1, [fp, #-12]
   27418:	ldr	r0, [fp, #-8]
   2741c:	bl	44f74 <flatcc_json_printer_int64_enum_field@@Base>
   27420:	mov	r2, #0
   27424:	mov	r3, #0
   27428:	strd	r2, [sp, #8]
   2742c:	mov	r3, #7
   27430:	str	r3, [sp]
   27434:	ldr	r3, [pc, #64]	; 2747c <_start@@Base+0x12e5c>
   27438:	add	r3, pc, r3
   2743c:	mov	r2, #5
   27440:	ldr	r1, [fp, #-12]
   27444:	ldr	r0, [fp, #-8]
   27448:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   2744c:	nop			; (mov r0, r0)
   27450:	sub	sp, fp, #4
   27454:	pop	{fp, pc}
   27458:			; <UNDEFINED> instruction: 0xfffffb18
   2745c:	andeq	r5, r2, ip, asr #10
   27460:			; <UNDEFINED> instruction: 0xfffff19c
   27464:	andeq	r5, r2, ip, lsl r5
   27468:			; <UNDEFINED> instruction: 0xfffff164
   2746c:	andeq	r5, r2, ip, ror #9
   27470:	andeq	r5, r2, ip, asr #9
   27474:			; <UNDEFINED> instruction: 0xfffff104
   27478:	muleq	r2, ip, r4
   2747c:	andeq	r5, r2, r8, ror r4
   27480:	push	{fp, lr}
   27484:	add	fp, sp, #4
   27488:	sub	sp, sp, #24
   2748c:	str	r0, [fp, #-8]
   27490:	str	r1, [fp, #-12]
   27494:	mov	r3, #2
   27498:	str	r3, [sp]
   2749c:	ldr	r3, [pc, #112]	; 27514 <_start@@Base+0x12ef4>
   274a0:	add	r3, pc, r3
   274a4:	mov	r2, #0
   274a8:	ldr	r1, [fp, #-12]
   274ac:	ldr	r0, [fp, #-8]
   274b0:	bl	439f4 <flatcc_json_printer_string_field@@Base>
   274b4:	mov	r2, #0
   274b8:	mov	r3, #0
   274bc:	strd	r2, [sp, #8]
   274c0:	mov	r3, #3
   274c4:	str	r3, [sp]
   274c8:	ldr	r3, [pc, #72]	; 27518 <_start@@Base+0x12ef8>
   274cc:	add	r3, pc, r3
   274d0:	mov	r2, #1
   274d4:	ldr	r1, [fp, #-12]
   274d8:	ldr	r0, [fp, #-8]
   274dc:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   274e0:	mov	r3, #0
   274e4:	str	r3, [sp, #4]
   274e8:	mov	r3, #5
   274ec:	str	r3, [sp]
   274f0:	ldr	r3, [pc, #36]	; 2751c <_start@@Base+0x12efc>
   274f4:	add	r3, pc, r3
   274f8:	mov	r2, #2
   274fc:	ldr	r1, [fp, #-12]
   27500:	ldr	r0, [fp, #-8]
   27504:	bl	43c7c <flatcc_json_printer_uint16_field@@Base>
   27508:	nop			; (mov r0, r0)
   2750c:	sub	sp, fp, #4
   27510:	pop	{fp, pc}
   27514:	andeq	r5, r2, r0, lsr #7
   27518:	andeq	r5, r2, ip, ror #7
   2751c:	andeq	r5, r2, r8, asr #7
   27520:	push	{fp, lr}
   27524:	add	fp, sp, #4
   27528:	sub	sp, sp, #24
   2752c:	str	r0, [fp, #-8]
   27530:	str	r1, [fp, #-12]
   27534:	ldr	r3, [pc, #148]	; 275d0 <_start@@Base+0x12fb0>
   27538:	add	r3, pc, r3
   2753c:	str	r3, [sp, #4]
   27540:	mov	r3, #6
   27544:	str	r3, [sp]
   27548:	ldr	r3, [pc, #132]	; 275d4 <_start@@Base+0x12fb4>
   2754c:	add	r3, pc, r3
   27550:	mov	r2, #0
   27554:	ldr	r1, [fp, #-12]
   27558:	ldr	r0, [fp, #-8]
   2755c:	bl	4a598 <flatcc_json_printer_table_field@@Base>
   27560:	ldr	r3, [pc, #112]	; 275d8 <_start@@Base+0x12fb8>
   27564:	add	r3, pc, r3
   27568:	str	r3, [sp, #4]
   2756c:	mov	r3, #5
   27570:	str	r3, [sp]
   27574:	ldr	r3, [pc, #96]	; 275dc <_start@@Base+0x12fbc>
   27578:	add	r3, pc, r3
   2757c:	mov	r2, #1
   27580:	ldr	r1, [fp, #-12]
   27584:	ldr	r0, [fp, #-8]
   27588:	bl	4a598 <flatcc_json_printer_table_field@@Base>
   2758c:	ldr	r3, [pc, #76]	; 275e0 <_start@@Base+0x12fc0>
   27590:	add	r3, pc, r3
   27594:	str	r3, [sp, #8]
   27598:	ldr	r3, [pc, #68]	; 275e4 <_start@@Base+0x12fc4>
   2759c:	add	r3, pc, r3
   275a0:	str	r3, [sp, #4]
   275a4:	mov	r3, #7
   275a8:	str	r3, [sp]
   275ac:	ldr	r3, [pc, #52]	; 275e8 <_start@@Base+0x12fc8>
   275b0:	add	r3, pc, r3
   275b4:	mov	r2, #3
   275b8:	ldr	r1, [fp, #-12]
   275bc:	ldr	r0, [fp, #-8]
   275c0:	bl	4a180 <flatcc_json_printer_union_vector_field@@Base>
   275c4:	nop			; (mov r0, r0)
   275c8:	sub	sp, fp, #4
   275cc:	pop	{fp, pc}
   275d0:	andeq	r0, r0, ip, lsr #1
   275d4:	andeq	r5, r2, r8, ror r3
   275d8:	andeq	r0, r0, r4, lsr #27
   275dc:	andeq	r5, r2, r4, asr r3
   275e0:			; <UNDEFINED> instruction: 0xfffff594
   275e4:			; <UNDEFINED> instruction: 0xfffff4a0
   275e8:	andeq	r5, r2, r4, lsr #6
   275ec:	push	{fp, lr}
   275f0:	add	fp, sp, #4
   275f4:	sub	sp, sp, #16
   275f8:	str	r0, [fp, #-8]
   275fc:	str	r1, [fp, #-12]
   27600:	ldr	r3, [pc, #136]	; 27690 <_start@@Base+0x13070>
   27604:	add	r3, pc, r3
   27608:	str	r3, [sp, #4]
   2760c:	mov	r3, #21
   27610:	str	r3, [sp]
   27614:	ldr	r3, [pc, #120]	; 27694 <_start@@Base+0x13074>
   27618:	add	r3, pc, r3
   2761c:	mov	r2, #0
   27620:	ldr	r1, [fp, #-12]
   27624:	ldr	r0, [fp, #-8]
   27628:	bl	4a598 <flatcc_json_printer_table_field@@Base>
   2762c:	ldr	r3, [pc, #100]	; 27698 <_start@@Base+0x13078>
   27630:	add	r3, pc, r3
   27634:	str	r3, [sp, #4]
   27638:	mov	r3, #22
   2763c:	str	r3, [sp]
   27640:	ldr	r3, [pc, #84]	; 2769c <_start@@Base+0x1307c>
   27644:	add	r3, pc, r3
   27648:	mov	r2, #1
   2764c:	ldr	r1, [fp, #-12]
   27650:	ldr	r0, [fp, #-8]
   27654:	bl	4a598 <flatcc_json_printer_table_field@@Base>
   27658:	ldr	r3, [pc, #64]	; 276a0 <_start@@Base+0x13080>
   2765c:	add	r3, pc, r3
   27660:	str	r3, [sp, #4]
   27664:	mov	r3, #22
   27668:	str	r3, [sp]
   2766c:	ldr	r3, [pc, #48]	; 276a4 <_start@@Base+0x13084>
   27670:	add	r3, pc, r3
   27674:	mov	r2, #2
   27678:	ldr	r1, [fp, #-12]
   2767c:	ldr	r0, [fp, #-8]
   27680:	bl	4a598 <flatcc_json_printer_table_field@@Base>
   27684:	nop			; (mov r0, r0)
   27688:	sub	sp, fp, #4
   2768c:	pop	{fp, pc}
   27690:	muleq	r0, ip, r0
   27694:	andeq	r5, r2, r4, asr #5
   27698:	andeq	r0, r0, r0, lsl r2
   2769c:			; <UNDEFINED> instruction: 0x000252b0
   276a0:	andeq	r0, r0, r0, ror #4
   276a4:	muleq	r2, ip, r2
   276a8:	push	{fp, lr}
   276ac:	add	fp, sp, #4
   276b0:	sub	sp, sp, #24
   276b4:	str	r0, [fp, #-8]
   276b8:	str	r1, [fp, #-12]
   276bc:	mov	r3, #4
   276c0:	str	r3, [sp]
   276c4:	ldr	r3, [pc, #344]	; 27824 <_start@@Base+0x13204>
   276c8:	add	r3, pc, r3
   276cc:	mov	r2, #0
   276d0:	ldr	r1, [fp, #-12]
   276d4:	ldr	r0, [fp, #-8]
   276d8:	bl	439f4 <flatcc_json_printer_string_field@@Base>
   276dc:	mov	r3, #0
   276e0:	str	r3, [sp, #4]
   276e4:	mov	r3, #9
   276e8:	str	r3, [sp]
   276ec:	ldr	r3, [pc, #308]	; 27828 <_start@@Base+0x13208>
   276f0:	add	r3, pc, r3
   276f4:	mov	r2, #1
   276f8:	ldr	r1, [fp, #-12]
   276fc:	ldr	r0, [fp, #-8]
   27700:	bl	43d8c <flatcc_json_printer_uint32_field@@Base>
   27704:	mov	r3, #4
   27708:	str	r3, [sp]
   2770c:	ldr	r3, [pc, #280]	; 2782c <_start@@Base+0x1320c>
   27710:	add	r3, pc, r3
   27714:	mov	r2, #2
   27718:	ldr	r1, [fp, #-12]
   2771c:	ldr	r0, [fp, #-8]
   27720:	bl	439f4 <flatcc_json_printer_string_field@@Base>
   27724:	mov	r2, #0
   27728:	mov	r3, #0
   2772c:	strd	r2, [sp, #8]
   27730:	mov	r3, #8
   27734:	str	r3, [sp]
   27738:	ldr	r3, [pc, #240]	; 27830 <_start@@Base+0x13210>
   2773c:	add	r3, pc, r3
   27740:	mov	r2, #3
   27744:	ldr	r1, [fp, #-12]
   27748:	ldr	r0, [fp, #-8]
   2774c:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   27750:	mov	r3, #4
   27754:	str	r3, [sp]
   27758:	ldr	r3, [pc, #212]	; 27834 <_start@@Base+0x13214>
   2775c:	add	r3, pc, r3
   27760:	mov	r2, #4
   27764:	ldr	r1, [fp, #-12]
   27768:	ldr	r0, [fp, #-8]
   2776c:	bl	439f4 <flatcc_json_printer_string_field@@Base>
   27770:	mov	r2, #0
   27774:	mov	r3, #0
   27778:	strd	r2, [sp, #8]
   2777c:	mov	r3, #8
   27780:	str	r3, [sp]
   27784:	ldr	r3, [pc, #172]	; 27838 <_start@@Base+0x13218>
   27788:	add	r3, pc, r3
   2778c:	mov	r2, #5
   27790:	ldr	r1, [fp, #-12]
   27794:	ldr	r0, [fp, #-8]
   27798:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   2779c:	mov	r3, #0
   277a0:	str	r3, [sp, #4]
   277a4:	mov	r3, #9
   277a8:	str	r3, [sp]
   277ac:	ldr	r3, [pc, #136]	; 2783c <_start@@Base+0x1321c>
   277b0:	add	r3, pc, r3
   277b4:	mov	r2, #6
   277b8:	ldr	r1, [fp, #-12]
   277bc:	ldr	r0, [fp, #-8]
   277c0:	bl	43d8c <flatcc_json_printer_uint32_field@@Base>
   277c4:	mov	r2, #0
   277c8:	mov	r3, #0
   277cc:	strd	r2, [sp, #8]
   277d0:	mov	r3, #8
   277d4:	str	r3, [sp]
   277d8:	ldr	r3, [pc, #96]	; 27840 <_start@@Base+0x13220>
   277dc:	add	r3, pc, r3
   277e0:	mov	r2, #7
   277e4:	ldr	r1, [fp, #-12]
   277e8:	ldr	r0, [fp, #-8]
   277ec:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   277f0:	mov	r3, #0
   277f4:	str	r3, [sp, #4]
   277f8:	mov	r3, #9
   277fc:	str	r3, [sp]
   27800:	ldr	r3, [pc, #60]	; 27844 <_start@@Base+0x13224>
   27804:	add	r3, pc, r3
   27808:	mov	r2, #8
   2780c:	ldr	r1, [fp, #-12]
   27810:	ldr	r0, [fp, #-8]
   27814:	bl	43d8c <flatcc_json_printer_uint32_field@@Base>
   27818:	nop			; (mov r0, r0)
   2781c:	sub	sp, fp, #4
   27820:	pop	{fp, pc}
   27824:	andeq	r5, r2, ip, asr r2
   27828:	andeq	r5, r2, ip, lsr r2
   2782c:	andeq	r5, r2, r8, lsr #4
   27830:	andeq	r5, r2, r4, lsl #4
   27834:	strdeq	r5, [r2], -r0
   27838:	andeq	r5, r2, ip, asr #3
   2783c:			; <UNDEFINED> instruction: 0x000251b0
   27840:	muleq	r2, r0, r1
   27844:	andeq	r5, r2, r4, ror r1
   27848:	push	{fp, lr}
   2784c:	add	fp, sp, #4
   27850:	sub	sp, sp, #24
   27854:	str	r0, [fp, #-8]
   27858:	str	r1, [fp, #-12]
   2785c:	mov	r2, #0
   27860:	mov	r3, #0
   27864:	strd	r2, [sp, #8]
   27868:	mov	r3, #15
   2786c:	str	r3, [sp]
   27870:	ldr	r3, [pc, #68]	; 278bc <_start@@Base+0x1329c>
   27874:	add	r3, pc, r3
   27878:	mov	r2, #0
   2787c:	ldr	r1, [fp, #-12]
   27880:	ldr	r0, [fp, #-8]
   27884:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   27888:	mov	r3, #0
   2788c:	str	r3, [sp, #4]
   27890:	mov	r3, #16
   27894:	str	r3, [sp]
   27898:	ldr	r3, [pc, #32]	; 278c0 <_start@@Base+0x132a0>
   2789c:	add	r3, pc, r3
   278a0:	mov	r2, #1
   278a4:	ldr	r1, [fp, #-12]
   278a8:	ldr	r0, [fp, #-8]
   278ac:	bl	43d8c <flatcc_json_printer_uint32_field@@Base>
   278b0:	nop			; (mov r0, r0)
   278b4:	sub	sp, fp, #4
   278b8:	pop	{fp, pc}
   278bc:	andeq	r5, r2, r0, lsl r1
   278c0:	strdeq	r5, [r2], -r8
   278c4:	push	{fp, lr}
   278c8:	add	fp, sp, #4
   278cc:	sub	sp, sp, #24
   278d0:	str	r0, [fp, #-8]
   278d4:	str	r1, [fp, #-12]
   278d8:	mov	r2, #0
   278dc:	mov	r3, #0
   278e0:	strd	r2, [sp, #8]
   278e4:	mov	r3, #15
   278e8:	str	r3, [sp]
   278ec:	ldr	r3, [pc, #68]	; 27938 <_start@@Base+0x13318>
   278f0:	add	r3, pc, r3
   278f4:	mov	r2, #0
   278f8:	ldr	r1, [fp, #-12]
   278fc:	ldr	r0, [fp, #-8]
   27900:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   27904:	mov	r3, #0
   27908:	str	r3, [sp, #4]
   2790c:	mov	r3, #21
   27910:	str	r3, [sp]
   27914:	ldr	r3, [pc, #32]	; 2793c <_start@@Base+0x1331c>
   27918:	add	r3, pc, r3
   2791c:	mov	r2, #1
   27920:	ldr	r1, [fp, #-12]
   27924:	ldr	r0, [fp, #-8]
   27928:	bl	43d8c <flatcc_json_printer_uint32_field@@Base>
   2792c:	nop			; (mov r0, r0)
   27930:	sub	sp, fp, #4
   27934:	pop	{fp, pc}
   27938:	muleq	r2, r4, r0
   2793c:	muleq	r2, r0, r0
   27940:	push	{fp, lr}
   27944:	add	fp, sp, #4
   27948:	sub	sp, sp, #16
   2794c:	str	r0, [fp, #-8]
   27950:	str	r1, [fp, #-12]
   27954:	mov	r3, #0
   27958:	str	r3, [sp, #4]
   2795c:	mov	r3, #4
   27960:	str	r3, [sp]
   27964:	ldr	r3, [pc, #108]	; 279d8 <_start@@Base+0x133b8>
   27968:	add	r3, pc, r3
   2796c:	mov	r2, #0
   27970:	ldr	r1, [fp, #-12]
   27974:	ldr	r0, [fp, #-8]
   27978:	bl	43a9c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2797c:	mov	r3, #1
   27980:	str	r3, [sp, #4]
   27984:	mov	r3, #7
   27988:	str	r3, [sp]
   2798c:	ldr	r3, [pc, #72]	; 279dc <_start@@Base+0x133bc>
   27990:	add	r3, pc, r3
   27994:	mov	r2, #1
   27998:	ldr	r1, [fp, #-12]
   2799c:	ldr	r0, [fp, #-8]
   279a0:	bl	43a9c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   279a4:	mov	r3, #0
   279a8:	str	r3, [sp, #4]
   279ac:	mov	r3, #6
   279b0:	str	r3, [sp]
   279b4:	ldr	r3, [pc, #36]	; 279e0 <_start@@Base+0x133c0>
   279b8:	add	r3, pc, r3
   279bc:	mov	r2, #2
   279c0:	ldr	r1, [fp, #-12]
   279c4:	ldr	r0, [fp, #-8]
   279c8:	bl	43a9c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   279cc:	nop			; (mov r0, r0)
   279d0:	sub	sp, fp, #4
   279d4:	pop	{fp, pc}
   279d8:	andeq	r5, r2, r8, asr r0
   279dc:	andeq	r5, r2, r8, lsr r0
   279e0:	andeq	r5, r2, r8, lsl r0
   279e4:	push	{fp, lr}
   279e8:	add	fp, sp, #4
   279ec:	sub	sp, sp, #24
   279f0:	str	r0, [fp, #-8]
   279f4:	str	r1, [fp, #-12]
   279f8:	ldr	r3, [pc, #1416]	; 27f88 <_start@@Base+0x13968>
   279fc:	add	r3, pc, r3
   27a00:	str	r3, [sp, #4]
   27a04:	mov	r3, #3
   27a08:	str	r3, [sp]
   27a0c:	ldr	r3, [pc, #1400]	; 27f8c <_start@@Base+0x1396c>
   27a10:	add	r3, pc, r3
   27a14:	mov	r2, #0
   27a18:	ldr	r1, [fp, #-12]
   27a1c:	ldr	r0, [fp, #-8]
   27a20:	bl	4abd0 <flatcc_json_printer_struct_field@@Base>
   27a24:	mov	r3, #150	; 0x96
   27a28:	str	r3, [sp, #4]
   27a2c:	mov	r3, #4
   27a30:	str	r3, [sp]
   27a34:	ldr	r3, [pc, #1364]	; 27f90 <_start@@Base+0x13970>
   27a38:	add	r3, pc, r3
   27a3c:	mov	r2, #1
   27a40:	ldr	r1, [fp, #-12]
   27a44:	ldr	r0, [fp, #-8]
   27a48:	bl	440b0 <flatcc_json_printer_int16_field@@Base>
   27a4c:	mov	r3, #100	; 0x64
   27a50:	str	r3, [sp, #4]
   27a54:	mov	r3, #2
   27a58:	str	r3, [sp]
   27a5c:	ldr	r3, [pc, #1328]	; 27f94 <_start@@Base+0x13974>
   27a60:	add	r3, pc, r3
   27a64:	mov	r2, #2
   27a68:	ldr	r1, [fp, #-12]
   27a6c:	ldr	r0, [fp, #-8]
   27a70:	bl	440b0 <flatcc_json_printer_int16_field@@Base>
   27a74:	mov	r3, #4
   27a78:	str	r3, [sp]
   27a7c:	ldr	r3, [pc, #1300]	; 27f98 <_start@@Base+0x13978>
   27a80:	add	r3, pc, r3
   27a84:	mov	r2, #3
   27a88:	ldr	r1, [fp, #-12]
   27a8c:	ldr	r0, [fp, #-8]
   27a90:	bl	439f4 <flatcc_json_printer_string_field@@Base>
   27a94:	mov	r3, #9
   27a98:	str	r3, [sp]
   27a9c:	ldr	r3, [pc, #1272]	; 27f9c <_start@@Base+0x1397c>
   27aa0:	add	r3, pc, r3
   27aa4:	mov	r2, #5
   27aa8:	ldr	r1, [fp, #-12]
   27aac:	ldr	r0, [fp, #-8]
   27ab0:	bl	46350 <flatcc_json_printer_uint8_vector_field@@Base>
   27ab4:	ldr	r3, [pc, #1252]	; 27fa0 <_start@@Base+0x13980>
   27ab8:	add	r3, pc, r3
   27abc:	str	r3, [sp, #8]
   27ac0:	mov	r3, #8
   27ac4:	str	r3, [sp, #4]
   27ac8:	mov	r3, #5
   27acc:	str	r3, [sp]
   27ad0:	ldr	r3, [pc, #1228]	; 27fa4 <_start@@Base+0x13984>
   27ad4:	add	r3, pc, r3
   27ad8:	mov	r2, #6
   27adc:	ldr	r1, [fp, #-12]
   27ae0:	ldr	r0, [fp, #-8]
   27ae4:	bl	44bd8 <flatcc_json_printer_int8_enum_field@@Base>
   27ae8:	ldr	r3, [pc, #1208]	; 27fa8 <_start@@Base+0x13988>
   27aec:	add	r3, pc, r3
   27af0:	str	r3, [sp, #8]
   27af4:	ldr	r3, [pc, #1200]	; 27fac <_start@@Base+0x1398c>
   27af8:	add	r3, pc, r3
   27afc:	str	r3, [sp, #4]
   27b00:	mov	r3, #4
   27b04:	str	r3, [sp]
   27b08:	ldr	r3, [pc, #1184]	; 27fb0 <_start@@Base+0x13990>
   27b0c:	add	r3, pc, r3
   27b10:	mov	r2, #8
   27b14:	ldr	r1, [fp, #-12]
   27b18:	ldr	r0, [fp, #-8]
   27b1c:	bl	4a648 <flatcc_json_printer_union_field@@Base>
   27b20:	ldr	r3, [pc, #1164]	; 27fb4 <_start@@Base+0x13994>
   27b24:	add	r3, pc, r3
   27b28:	str	r3, [sp, #8]
   27b2c:	mov	r3, #4
   27b30:	str	r3, [sp, #4]
   27b34:	mov	r3, #5
   27b38:	str	r3, [sp]
   27b3c:	ldr	r3, [pc, #1140]	; 27fb8 <_start@@Base+0x13998>
   27b40:	add	r3, pc, r3
   27b44:	mov	r2, #9
   27b48:	ldr	r1, [fp, #-12]
   27b4c:	ldr	r0, [fp, #-8]
   27b50:	bl	499e4 <flatcc_json_printer_struct_vector_field@@Base>
   27b54:	mov	r3, #17
   27b58:	str	r3, [sp]
   27b5c:	ldr	r3, [pc, #1112]	; 27fbc <_start@@Base+0x1399c>
   27b60:	add	r3, pc, r3
   27b64:	mov	r2, #10
   27b68:	ldr	r1, [fp, #-12]
   27b6c:	ldr	r0, [fp, #-8]
   27b70:	bl	49d50 <flatcc_json_printer_string_vector_field@@Base>
   27b74:	ldr	r3, [pc, #1092]	; 27fc0 <_start@@Base+0x139a0>
   27b78:	add	r3, pc, r3
   27b7c:	str	r3, [sp, #4]
   27b80:	mov	r3, #17
   27b84:	str	r3, [sp]
   27b88:	ldr	r3, [pc, #1076]	; 27fc4 <_start@@Base+0x139a4>
   27b8c:	add	r3, pc, r3
   27b90:	mov	r2, #11
   27b94:	ldr	r1, [fp, #-12]
   27b98:	ldr	r0, [fp, #-8]
   27b9c:	bl	49fa0 <flatcc_json_printer_table_vector_field@@Base>
   27ba0:	ldr	r3, [pc, #1056]	; 27fc8 <_start@@Base+0x139a8>
   27ba4:	add	r3, pc, r3
   27ba8:	str	r3, [sp, #4]
   27bac:	mov	r3, #5
   27bb0:	str	r3, [sp]
   27bb4:	ldr	r3, [pc, #1040]	; 27fcc <_start@@Base+0x139ac>
   27bb8:	add	r3, pc, r3
   27bbc:	mov	r2, #12
   27bc0:	ldr	r1, [fp, #-12]
   27bc4:	ldr	r0, [fp, #-8]
   27bc8:	bl	4a598 <flatcc_json_printer_table_field@@Base>
   27bcc:	ldr	r3, [pc, #1020]	; 27fd0 <_start@@Base+0x139b0>
   27bd0:	add	r3, pc, r3
   27bd4:	str	r3, [sp, #8]
   27bd8:	mov	r3, #0
   27bdc:	str	r3, [sp, #4]
   27be0:	mov	r3, #20
   27be4:	str	r3, [sp]
   27be8:	ldr	r3, [pc, #996]	; 27fd4 <_start@@Base+0x139b4>
   27bec:	add	r3, pc, r3
   27bf0:	mov	r2, #13
   27bf4:	ldr	r1, [fp, #-12]
   27bf8:	ldr	r0, [fp, #-8]
   27bfc:	bl	4b248 <flatcc_json_printer_table_as_nested_root@@Base>
   27c00:	ldr	r3, [pc, #976]	; 27fd8 <_start@@Base+0x139b8>
   27c04:	add	r3, pc, r3
   27c08:	str	r3, [sp, #4]
   27c0c:	mov	r3, #9
   27c10:	str	r3, [sp]
   27c14:	ldr	r3, [pc, #960]	; 27fdc <_start@@Base+0x139bc>
   27c18:	add	r3, pc, r3
   27c1c:	mov	r2, #14
   27c20:	ldr	r1, [fp, #-12]
   27c24:	ldr	r0, [fp, #-8]
   27c28:	bl	4a598 <flatcc_json_printer_table_field@@Base>
   27c2c:	mov	r3, #1
   27c30:	str	r3, [sp, #4]
   27c34:	mov	r3, #8
   27c38:	str	r3, [sp]
   27c3c:	ldr	r3, [pc, #924]	; 27fe0 <_start@@Base+0x139c0>
   27c40:	add	r3, pc, r3
   27c44:	mov	r2, #15
   27c48:	ldr	r1, [fp, #-12]
   27c4c:	ldr	r0, [fp, #-8]
   27c50:	bl	443d4 <flatcc_json_printer_bool_field@@Base>
   27c54:	mov	r3, #0
   27c58:	str	r3, [sp, #4]
   27c5c:	mov	r3, #16
   27c60:	str	r3, [sp]
   27c64:	ldr	r3, [pc, #888]	; 27fe4 <_start@@Base+0x139c4>
   27c68:	add	r3, pc, r3
   27c6c:	mov	r2, #16
   27c70:	ldr	r1, [fp, #-12]
   27c74:	ldr	r0, [fp, #-8]
   27c78:	bl	441c0 <flatcc_json_printer_int32_field@@Base>
   27c7c:	mov	r3, #0
   27c80:	str	r3, [sp, #4]
   27c84:	mov	r3, #16
   27c88:	str	r3, [sp]
   27c8c:	ldr	r3, [pc, #852]	; 27fe8 <_start@@Base+0x139c8>
   27c90:	add	r3, pc, r3
   27c94:	mov	r2, #17
   27c98:	ldr	r1, [fp, #-12]
   27c9c:	ldr	r0, [fp, #-8]
   27ca0:	bl	43d8c <flatcc_json_printer_uint32_field@@Base>
   27ca4:	mov	r2, #0
   27ca8:	mov	r3, #0
   27cac:	strd	r2, [sp, #8]
   27cb0:	mov	r3, #16
   27cb4:	str	r3, [sp]
   27cb8:	ldr	r3, [pc, #812]	; 27fec <_start@@Base+0x139cc>
   27cbc:	add	r3, pc, r3
   27cc0:	mov	r2, #18
   27cc4:	ldr	r1, [fp, #-12]
   27cc8:	ldr	r0, [fp, #-8]
   27ccc:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   27cd0:	mov	r2, #0
   27cd4:	mov	r3, #0
   27cd8:	strd	r2, [sp, #8]
   27cdc:	mov	r3, #16
   27ce0:	str	r3, [sp]
   27ce4:	ldr	r3, [pc, #772]	; 27ff0 <_start@@Base+0x139d0>
   27ce8:	add	r3, pc, r3
   27cec:	mov	r2, #19
   27cf0:	ldr	r1, [fp, #-12]
   27cf4:	ldr	r0, [fp, #-8]
   27cf8:	bl	43e94 <flatcc_json_printer_uint64_field@@Base>
   27cfc:	mov	r3, #0
   27d00:	str	r3, [sp, #4]
   27d04:	mov	r3, #17
   27d08:	str	r3, [sp]
   27d0c:	ldr	r3, [pc, #736]	; 27ff4 <_start@@Base+0x139d4>
   27d10:	add	r3, pc, r3
   27d14:	mov	r2, #20
   27d18:	ldr	r1, [fp, #-12]
   27d1c:	ldr	r0, [fp, #-8]
   27d20:	bl	441c0 <flatcc_json_printer_int32_field@@Base>
   27d24:	mov	r3, #0
   27d28:	str	r3, [sp, #4]
   27d2c:	mov	r3, #17
   27d30:	str	r3, [sp]
   27d34:	ldr	r3, [pc, #700]	; 27ff8 <_start@@Base+0x139d8>
   27d38:	add	r3, pc, r3
   27d3c:	mov	r2, #21
   27d40:	ldr	r1, [fp, #-12]
   27d44:	ldr	r0, [fp, #-8]
   27d48:	bl	43d8c <flatcc_json_printer_uint32_field@@Base>
   27d4c:	mov	r2, #0
   27d50:	mov	r3, #0
   27d54:	strd	r2, [sp, #8]
   27d58:	mov	r3, #17
   27d5c:	str	r3, [sp]
   27d60:	ldr	r3, [pc, #660]	; 27ffc <_start@@Base+0x139dc>
   27d64:	add	r3, pc, r3
   27d68:	mov	r2, #22
   27d6c:	ldr	r1, [fp, #-12]
   27d70:	ldr	r0, [fp, #-8]
   27d74:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   27d78:	mov	r2, #0
   27d7c:	mov	r3, #0
   27d80:	strd	r2, [sp, #8]
   27d84:	mov	r3, #17
   27d88:	str	r3, [sp]
   27d8c:	ldr	r3, [pc, #620]	; 28000 <_start@@Base+0x139e0>
   27d90:	add	r3, pc, r3
   27d94:	mov	r2, #23
   27d98:	ldr	r1, [fp, #-12]
   27d9c:	ldr	r0, [fp, #-8]
   27da0:	bl	43e94 <flatcc_json_printer_uint64_field@@Base>
   27da4:	mov	r3, #16
   27da8:	str	r3, [sp]
   27dac:	ldr	r3, [pc, #592]	; 28004 <_start@@Base+0x139e4>
   27db0:	add	r3, pc, r3
   27db4:	mov	r2, #24
   27db8:	ldr	r1, [fp, #-12]
   27dbc:	ldr	r0, [fp, #-8]
   27dc0:	bl	47830 <flatcc_json_printer_bool_vector_field@@Base>
   27dc4:	mov	r3, #5
   27dc8:	str	r3, [sp]
   27dcc:	vldr	s0, [pc, #424]	; 27f7c <_start@@Base+0x1395c>
   27dd0:	ldr	r3, [pc, #560]	; 28008 <_start@@Base+0x139e8>
   27dd4:	add	r3, pc, r3
   27dd8:	mov	r2, #25
   27ddc:	ldr	r1, [fp, #-12]
   27de0:	ldr	r0, [fp, #-8]
   27de4:	bl	444e4 <flatcc_json_printer_float_field@@Base>
   27de8:	mov	r3, #6
   27dec:	str	r3, [sp]
   27df0:	vldr	s0, [pc, #392]	; 27f80 <_start@@Base+0x13960>
   27df4:	ldr	r3, [pc, #528]	; 2800c <_start@@Base+0x139ec>
   27df8:	add	r3, pc, r3
   27dfc:	mov	r2, #26
   27e00:	ldr	r1, [fp, #-12]
   27e04:	ldr	r0, [fp, #-8]
   27e08:	bl	444e4 <flatcc_json_printer_float_field@@Base>
   27e0c:	mov	r3, #6
   27e10:	str	r3, [sp]
   27e14:	vldr	s0, [pc, #360]	; 27f84 <_start@@Base+0x13964>
   27e18:	ldr	r3, [pc, #496]	; 28010 <_start@@Base+0x139f0>
   27e1c:	add	r3, pc, r3
   27e20:	mov	r2, #27
   27e24:	ldr	r1, [fp, #-12]
   27e28:	ldr	r0, [fp, #-8]
   27e2c:	bl	444e4 <flatcc_json_printer_float_field@@Base>
   27e30:	mov	r3, #18
   27e34:	str	r3, [sp]
   27e38:	ldr	r3, [pc, #468]	; 28014 <_start@@Base+0x139f4>
   27e3c:	add	r3, pc, r3
   27e40:	mov	r2, #28
   27e44:	ldr	r1, [fp, #-12]
   27e48:	ldr	r0, [fp, #-8]
   27e4c:	bl	49d50 <flatcc_json_printer_string_vector_field@@Base>
   27e50:	ldr	r3, [pc, #448]	; 28018 <_start@@Base+0x139f8>
   27e54:	add	r3, pc, r3
   27e58:	str	r3, [sp, #8]
   27e5c:	mov	r3, #8
   27e60:	str	r3, [sp, #4]
   27e64:	mov	r3, #23
   27e68:	str	r3, [sp]
   27e6c:	ldr	r3, [pc, #424]	; 2801c <_start@@Base+0x139fc>
   27e70:	add	r3, pc, r3
   27e74:	mov	r2, #29
   27e78:	ldr	r1, [fp, #-12]
   27e7c:	ldr	r0, [fp, #-8]
   27e80:	bl	499e4 <flatcc_json_printer_struct_vector_field@@Base>
   27e84:	mov	r3, #4
   27e88:	str	r3, [sp]
   27e8c:	ldr	r3, [pc, #396]	; 28020 <_start@@Base+0x13a00>
   27e90:	add	r3, pc, r3
   27e94:	mov	r2, #30
   27e98:	ldr	r1, [fp, #-12]
   27e9c:	ldr	r0, [fp, #-8]
   27ea0:	bl	46350 <flatcc_json_printer_uint8_vector_field@@Base>
   27ea4:	ldr	r3, [pc, #376]	; 28024 <_start@@Base+0x13a04>
   27ea8:	add	r3, pc, r3
   27eac:	str	r3, [sp, #8]
   27eb0:	mov	r3, #4
   27eb4:	str	r3, [sp, #4]
   27eb8:	mov	r3, #5
   27ebc:	str	r3, [sp]
   27ec0:	ldr	r3, [pc, #352]	; 28028 <_start@@Base+0x13a08>
   27ec4:	add	r3, pc, r3
   27ec8:	mov	r2, #31
   27ecc:	ldr	r1, [fp, #-12]
   27ed0:	ldr	r0, [fp, #-8]
   27ed4:	bl	499e4 <flatcc_json_printer_struct_vector_field@@Base>
   27ed8:	mov	r3, #15
   27edc:	str	r3, [sp]
   27ee0:	ldr	r3, [pc, #324]	; 2802c <_start@@Base+0x13a0c>
   27ee4:	add	r3, pc, r3
   27ee8:	mov	r2, #32
   27eec:	ldr	r1, [fp, #-12]
   27ef0:	ldr	r0, [fp, #-8]
   27ef4:	bl	475a4 <flatcc_json_printer_int64_vector_field@@Base>
   27ef8:	mov	r3, #17
   27efc:	str	r3, [sp]
   27f00:	ldr	r3, [pc, #296]	; 28030 <_start@@Base+0x13a10>
   27f04:	add	r3, pc, r3
   27f08:	mov	r2, #33	; 0x21
   27f0c:	ldr	r1, [fp, #-12]
   27f10:	ldr	r0, [fp, #-8]
   27f14:	bl	47d78 <flatcc_json_printer_double_vector_field@@Base>
   27f18:	ldr	r3, [pc, #276]	; 28034 <_start@@Base+0x13a14>
   27f1c:	add	r3, pc, r3
   27f20:	str	r3, [sp, #4]
   27f24:	mov	r3, #21
   27f28:	str	r3, [sp]
   27f2c:	ldr	r3, [pc, #260]	; 28038 <_start@@Base+0x13a18>
   27f30:	add	r3, pc, r3
   27f34:	mov	r2, #34	; 0x22
   27f38:	ldr	r1, [fp, #-12]
   27f3c:	ldr	r0, [fp, #-8]
   27f40:	bl	4a598 <flatcc_json_printer_table_field@@Base>
   27f44:	ldr	r3, [pc, #240]	; 2803c <_start@@Base+0x13a1c>
   27f48:	add	r3, pc, r3
   27f4c:	str	r3, [sp, #4]
   27f50:	mov	r3, #10
   27f54:	str	r3, [sp]
   27f58:	ldr	r3, [pc, #224]	; 28040 <_start@@Base+0x13a20>
   27f5c:	add	r3, pc, r3
   27f60:	mov	r2, #35	; 0x23
   27f64:	ldr	r1, [fp, #-12]
   27f68:	ldr	r0, [fp, #-8]
   27f6c:	bl	4a598 <flatcc_json_printer_table_field@@Base>
   27f70:	nop			; (mov r0, r0)
   27f74:	sub	sp, fp, #4
   27f78:	pop	{fp, pc}
   27f7c:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   27f80:	submi	r0, r0, r0
   27f84:	andeq	r0, r0, r0
   27f88:			; <UNDEFINED> instruction: 0xfffff504
   27f8c:	andeq	r4, r2, r8, asr #31
   27f90:	andeq	r4, r2, r4, lsr #31
   27f94:	andeq	r4, r2, r4, lsl #31
   27f98:	andeq	r4, r2, r8, ror #30
   27f9c:	andeq	r4, r2, r0, asr pc
   27fa0:			; <UNDEFINED> instruction: 0xffffed2c
   27fa4:	muleq	r2, ip, sp
   27fa8:			; <UNDEFINED> instruction: 0xfffff038
   27fac:			; <UNDEFINED> instruction: 0xffffef44
   27fb0:	strdeq	r4, [r2], -r0
   27fb4:			; <UNDEFINED> instruction: 0xfffff340
   27fb8:	andeq	r4, r2, r4, asr #29
   27fbc:	andeq	r4, r2, ip, lsr #29
   27fc0:			; <UNDEFINED> instruction: 0xfffffe64
   27fc4:	muleq	r2, r4, lr
   27fc8:			; <UNDEFINED> instruction: 0xfffffe38
   27fcc:	andeq	r4, r2, ip, ror lr
   27fd0:			; <UNDEFINED> instruction: 0xfffffe0c
   27fd4:	andeq	r4, r2, r0, asr lr
   27fd8:			; <UNDEFINED> instruction: 0xfffff874
   27fdc:	andeq	r4, r2, ip, lsr lr
   27fe0:	andeq	r4, r2, r0, lsr #28
   27fe4:	andeq	r4, r2, r4, lsl #28
   27fe8:	strdeq	r4, [r2], -r0
   27fec:	ldrdeq	r4, [r2], -r8
   27ff0:	andeq	r4, r2, r0, asr #27
   27ff4:	andeq	r4, r2, ip, lsr #27
   27ff8:	muleq	r2, r8, sp
   27ffc:	andeq	r4, r2, r0, lsl #27
   28000:	andeq	r4, r2, r8, ror #26
   28004:	andeq	r4, r2, ip, asr sp
   28008:	andeq	r4, r2, ip, asr #26
   2800c:	andeq	r4, r2, r0, lsr sp
   28010:	andeq	r4, r2, r4, lsl sp
   28014:	strdeq	r4, [r2], -ip
   28018:			; <UNDEFINED> instruction: 0xfffff1f4
   2801c:	ldrdeq	r4, [r2], -ip
   28020:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   28024:			; <UNDEFINED> instruction: 0xffffefbc
   28028:	andeq	r4, r2, r8, lsr #25
   2802c:	muleq	r2, r0, ip
   28030:	andeq	r4, r2, r0, lsl #25
   28034:			; <UNDEFINED> instruction: 0xfffff23c
   28038:	andeq	r4, r2, r8, ror #24
   2803c:			; <UNDEFINED> instruction: 0xfffff9f0
   28040:	andeq	r4, r2, r4, asr ip
   28044:	push	{fp, lr}
   28048:	add	fp, sp, #4
   2804c:	sub	sp, sp, #24
   28050:	str	r0, [fp, #-8]
   28054:	str	r1, [fp, #-12]
   28058:	str	r2, [fp, #-16]
   2805c:	str	r3, [fp, #-20]	; 0xffffffec
   28060:	ldr	r3, [pc, #40]	; 28090 <_start@@Base+0x13a70>
   28064:	add	r3, pc, r3
   28068:	str	r3, [sp]
   2806c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28070:	ldr	r2, [fp, #-16]
   28074:	ldr	r1, [fp, #-12]
   28078:	ldr	r0, [fp, #-8]
   2807c:	bl	4afbc <flatcc_json_printer_table_as_root@@Base>
   28080:	mov	r3, r0
   28084:	mov	r0, r3
   28088:	sub	sp, fp, #4
   2808c:	pop	{fp, pc}
   28090:			; <UNDEFINED> instruction: 0xfffff978
   28094:	push	{fp, lr}
   28098:	add	fp, sp, #4
   2809c:	sub	sp, sp, #24
   280a0:	str	r0, [fp, #-8]
   280a4:	str	r1, [fp, #-12]
   280a8:	mov	r3, #0
   280ac:	str	r3, [sp, #4]
   280b0:	mov	r3, #2
   280b4:	str	r3, [sp]
   280b8:	ldr	r3, [pc, #468]	; 28294 <_start@@Base+0x13c74>
   280bc:	add	r3, pc, r3
   280c0:	mov	r2, #0
   280c4:	ldr	r1, [fp, #-12]
   280c8:	ldr	r0, [fp, #-8]
   280cc:	bl	43fa0 <flatcc_json_printer_int8_field@@Base>
   280d0:	mov	r3, #0
   280d4:	str	r3, [sp, #4]
   280d8:	mov	r3, #2
   280dc:	str	r3, [sp]
   280e0:	ldr	r3, [pc, #432]	; 28298 <_start@@Base+0x13c78>
   280e4:	add	r3, pc, r3
   280e8:	mov	r2, #1
   280ec:	ldr	r1, [fp, #-12]
   280f0:	ldr	r0, [fp, #-8]
   280f4:	bl	43b6c <flatcc_json_printer_uint8_field@@Base>
   280f8:	mov	r3, #0
   280fc:	str	r3, [sp, #4]
   28100:	mov	r3, #3
   28104:	str	r3, [sp]
   28108:	ldr	r3, [pc, #396]	; 2829c <_start@@Base+0x13c7c>
   2810c:	add	r3, pc, r3
   28110:	mov	r2, #2
   28114:	ldr	r1, [fp, #-12]
   28118:	ldr	r0, [fp, #-8]
   2811c:	bl	440b0 <flatcc_json_printer_int16_field@@Base>
   28120:	mov	r3, #0
   28124:	str	r3, [sp, #4]
   28128:	mov	r3, #3
   2812c:	str	r3, [sp]
   28130:	ldr	r3, [pc, #360]	; 282a0 <_start@@Base+0x13c80>
   28134:	add	r3, pc, r3
   28138:	mov	r2, #3
   2813c:	ldr	r1, [fp, #-12]
   28140:	ldr	r0, [fp, #-8]
   28144:	bl	43c7c <flatcc_json_printer_uint16_field@@Base>
   28148:	mov	r3, #0
   2814c:	str	r3, [sp, #4]
   28150:	mov	r3, #3
   28154:	str	r3, [sp]
   28158:	ldr	r3, [pc, #324]	; 282a4 <_start@@Base+0x13c84>
   2815c:	add	r3, pc, r3
   28160:	mov	r2, #4
   28164:	ldr	r1, [fp, #-12]
   28168:	ldr	r0, [fp, #-8]
   2816c:	bl	441c0 <flatcc_json_printer_int32_field@@Base>
   28170:	mov	r3, #0
   28174:	str	r3, [sp, #4]
   28178:	mov	r3, #3
   2817c:	str	r3, [sp]
   28180:	ldr	r3, [pc, #288]	; 282a8 <_start@@Base+0x13c88>
   28184:	add	r3, pc, r3
   28188:	mov	r2, #5
   2818c:	ldr	r1, [fp, #-12]
   28190:	ldr	r0, [fp, #-8]
   28194:	bl	43d8c <flatcc_json_printer_uint32_field@@Base>
   28198:	mov	r2, #0
   2819c:	mov	r3, #0
   281a0:	strd	r2, [sp, #8]
   281a4:	mov	r3, #3
   281a8:	str	r3, [sp]
   281ac:	ldr	r3, [pc, #248]	; 282ac <_start@@Base+0x13c8c>
   281b0:	add	r3, pc, r3
   281b4:	mov	r2, #6
   281b8:	ldr	r1, [fp, #-12]
   281bc:	ldr	r0, [fp, #-8]
   281c0:	bl	442c8 <flatcc_json_printer_int64_field@@Base>
   281c4:	mov	r2, #0
   281c8:	mov	r3, #0
   281cc:	strd	r2, [sp, #8]
   281d0:	mov	r3, #3
   281d4:	str	r3, [sp]
   281d8:	ldr	r3, [pc, #208]	; 282b0 <_start@@Base+0x13c90>
   281dc:	add	r3, pc, r3
   281e0:	mov	r2, #7
   281e4:	ldr	r1, [fp, #-12]
   281e8:	ldr	r0, [fp, #-8]
   281ec:	bl	43e94 <flatcc_json_printer_uint64_field@@Base>
   281f0:	mov	r3, #3
   281f4:	str	r3, [sp]
   281f8:	vldr	s0, [pc, #144]	; 28290 <_start@@Base+0x13c70>
   281fc:	ldr	r3, [pc, #176]	; 282b4 <_start@@Base+0x13c94>
   28200:	add	r3, pc, r3
   28204:	mov	r2, #8
   28208:	ldr	r1, [fp, #-12]
   2820c:	ldr	r0, [fp, #-8]
   28210:	bl	444e4 <flatcc_json_printer_float_field@@Base>
   28214:	mov	r3, #3
   28218:	str	r3, [sp]
   2821c:	vldr	d0, [pc, #100]	; 28288 <_start@@Base+0x13c68>
   28220:	ldr	r3, [pc, #144]	; 282b8 <_start@@Base+0x13c98>
   28224:	add	r3, pc, r3
   28228:	mov	r2, #9
   2822c:	ldr	r1, [fp, #-12]
   28230:	ldr	r0, [fp, #-8]
   28234:	bl	445fc <flatcc_json_printer_double_field@@Base>
   28238:	mov	r3, #2
   2823c:	str	r3, [sp]
   28240:	ldr	r3, [pc, #116]	; 282bc <_start@@Base+0x13c9c>
   28244:	add	r3, pc, r3
   28248:	mov	r2, #10
   2824c:	ldr	r1, [fp, #-12]
   28250:	ldr	r0, [fp, #-8]
   28254:	bl	46dc0 <flatcc_json_printer_int8_vector_field@@Base>
   28258:	mov	r3, #4
   2825c:	str	r3, [sp]
   28260:	ldr	r3, [pc, #88]	; 282c0 <_start@@Base+0x13ca0>
   28264:	add	r3, pc, r3
   28268:	mov	r2, #11
   2826c:	ldr	r1, [fp, #-12]
   28270:	ldr	r0, [fp, #-8]
   28274:	bl	47d78 <flatcc_json_printer_double_vector_field@@Base>
   28278:	nop			; (mov r0, r0)
   2827c:	sub	sp, fp, #4
   28280:	pop	{fp, pc}
   28284:	nop			; (mov r0, r0)
	...
   28294:	andeq	r4, r2, r0, lsl #22
   28298:	ldrdeq	r4, [r2], -ip
   2829c:			; <UNDEFINED> instruction: 0x00024ab8
   282a0:	muleq	r2, r4, sl
   282a4:	andeq	r4, r2, r0, ror sl
   282a8:	andeq	r4, r2, ip, asr #20
   282ac:	andeq	r4, r2, r4, lsr #20
   282b0:	strdeq	r4, [r2], -ip
   282b4:	ldrdeq	r4, [r2], -ip
   282b8:			; <UNDEFINED> instruction: 0x000249bc
   282bc:	andeq	r4, r2, r0, lsr #19
   282c0:	andeq	r4, r2, r4, lsl #19
   282c4:	push	{fp, lr}
   282c8:	add	fp, sp, #4
   282cc:	sub	sp, sp, #16
   282d0:	str	r0, [fp, #-8]
   282d4:	str	r1, [fp, #-12]
   282d8:	mov	r3, #0
   282dc:	str	r3, [sp, #4]
   282e0:	mov	r3, #19
   282e4:	str	r3, [sp]
   282e8:	ldr	r3, [pc, #28]	; 2830c <_start@@Base+0x13cec>
   282ec:	add	r3, pc, r3
   282f0:	mov	r2, #0
   282f4:	ldr	r1, [fp, #-12]
   282f8:	ldr	r0, [fp, #-8]
   282fc:	bl	441c0 <flatcc_json_printer_int32_field@@Base>
   28300:	nop			; (mov r0, r0)
   28304:	sub	sp, fp, #4
   28308:	pop	{fp, pc}
   2830c:	andeq	r4, r2, r4, lsl #18
   28310:	push	{fp, lr}
   28314:	add	fp, sp, #4
   28318:	sub	sp, sp, #24
   2831c:	str	r0, [fp, #-8]
   28320:	str	r1, [fp, #-12]
   28324:	ldr	r3, [pc, #284]	; 28448 <_start@@Base+0x13e28>
   28328:	add	r3, pc, r3
   2832c:	str	r3, [sp, #8]
   28330:	ldr	r3, [pc, #276]	; 2844c <_start@@Base+0x13e2c>
   28334:	add	r3, pc, r3
   28338:	str	r3, [sp, #4]
   2833c:	mov	r3, #14
   28340:	str	r3, [sp]
   28344:	ldr	r3, [pc, #260]	; 28450 <_start@@Base+0x13e30>
   28348:	add	r3, pc, r3
   2834c:	mov	r2, #1
   28350:	ldr	r1, [fp, #-12]
   28354:	ldr	r0, [fp, #-8]
   28358:	bl	4a648 <flatcc_json_printer_union_field@@Base>
   2835c:	ldr	r3, [pc, #240]	; 28454 <_start@@Base+0x13e34>
   28360:	add	r3, pc, r3
   28364:	str	r3, [sp, #8]
   28368:	ldr	r3, [pc, #232]	; 28458 <_start@@Base+0x13e38>
   2836c:	add	r3, pc, r3
   28370:	str	r3, [sp, #4]
   28374:	mov	r3, #10
   28378:	str	r3, [sp]
   2837c:	ldr	r3, [pc, #216]	; 2845c <_start@@Base+0x13e3c>
   28380:	add	r3, pc, r3
   28384:	mov	r2, #3
   28388:	ldr	r1, [fp, #-12]
   2838c:	ldr	r0, [fp, #-8]
   28390:	bl	4a648 <flatcc_json_printer_union_field@@Base>
   28394:	ldr	r3, [pc, #196]	; 28460 <_start@@Base+0x13e40>
   28398:	add	r3, pc, r3
   2839c:	str	r3, [sp, #8]
   283a0:	ldr	r3, [pc, #188]	; 28464 <_start@@Base+0x13e44>
   283a4:	add	r3, pc, r3
   283a8:	str	r3, [sp, #4]
   283ac:	mov	r3, #9
   283b0:	str	r3, [sp]
   283b4:	ldr	r3, [pc, #172]	; 28468 <_start@@Base+0x13e48>
   283b8:	add	r3, pc, r3
   283bc:	mov	r2, #5
   283c0:	ldr	r1, [fp, #-12]
   283c4:	ldr	r0, [fp, #-8]
   283c8:	bl	4a648 <flatcc_json_printer_union_field@@Base>
   283cc:	ldr	r3, [pc, #152]	; 2846c <_start@@Base+0x13e4c>
   283d0:	add	r3, pc, r3
   283d4:	str	r3, [sp, #8]
   283d8:	ldr	r3, [pc, #144]	; 28470 <_start@@Base+0x13e50>
   283dc:	add	r3, pc, r3
   283e0:	str	r3, [sp, #4]
   283e4:	mov	r3, #5
   283e8:	str	r3, [sp]
   283ec:	ldr	r3, [pc, #128]	; 28474 <_start@@Base+0x13e54>
   283f0:	add	r3, pc, r3
   283f4:	mov	r2, #7
   283f8:	ldr	r1, [fp, #-12]
   283fc:	ldr	r0, [fp, #-8]
   28400:	bl	4a648 <flatcc_json_printer_union_field@@Base>
   28404:	ldr	r3, [pc, #108]	; 28478 <_start@@Base+0x13e58>
   28408:	add	r3, pc, r3
   2840c:	str	r3, [sp, #8]
   28410:	ldr	r3, [pc, #100]	; 2847c <_start@@Base+0x13e5c>
   28414:	add	r3, pc, r3
   28418:	str	r3, [sp, #4]
   2841c:	mov	r3, #10
   28420:	str	r3, [sp]
   28424:	ldr	r3, [pc, #84]	; 28480 <_start@@Base+0x13e60>
   28428:	add	r3, pc, r3
   2842c:	mov	r2, #9
   28430:	ldr	r1, [fp, #-12]
   28434:	ldr	r0, [fp, #-8]
   28438:	bl	4a180 <flatcc_json_printer_union_vector_field@@Base>
   2843c:	nop			; (mov r0, r0)
   28440:	sub	sp, fp, #4
   28444:	pop	{fp, pc}
   28448:			; <UNDEFINED> instruction: 0xffffea10
   2844c:			; <UNDEFINED> instruction: 0xffffe8bc
   28450:			; <UNDEFINED> instruction: 0x000248bc
   28454:			; <UNDEFINED> instruction: 0xffffe9d8
   28458:			; <UNDEFINED> instruction: 0xffffe884
   2845c:	muleq	r2, r4, r8
   28460:			; <UNDEFINED> instruction: 0xffffe9a0
   28464:			; <UNDEFINED> instruction: 0xffffe84c
   28468:	andeq	r4, r2, r8, ror #16
   2846c:			; <UNDEFINED> instruction: 0xffffe968
   28470:			; <UNDEFINED> instruction: 0xffffe814
   28474:	andeq	r4, r2, ip, lsr r8
   28478:			; <UNDEFINED> instruction: 0xffffe930
   2847c:			; <UNDEFINED> instruction: 0xffffe7dc
   28480:	andeq	r4, r2, ip, lsl #16
   28484:	push	{fp, lr}
   28488:	add	fp, sp, #4
   2848c:	sub	sp, sp, #64	; 0x40
   28490:	str	r0, [fp, #-56]	; 0xffffffc8
   28494:	str	r1, [fp, #-60]	; 0xffffffc4
   28498:	str	r2, [fp, #-64]	; 0xffffffc0
   2849c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   284a0:	cmp	r3, #0
   284a4:	bne	284bc <_start@@Base+0x13e9c>
   284a8:	sub	r3, fp, #52	; 0x34
   284ac:	str	r3, [fp, #-56]	; 0xffffffc8
   284b0:	mov	r1, #0
   284b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   284b8:	bl	4b4a4 <flatcc_json_printer_init@@Base>
   284bc:	ldr	r3, [pc, #32]	; 284e4 <_start@@Base+0x13ec4>
   284c0:	add	r3, pc, r3
   284c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   284c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   284cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   284d0:	bl	28044 <_start@@Base+0x13a24>
   284d4:	mov	r3, r0
   284d8:	mov	r0, r3
   284dc:	sub	sp, fp, #4
   284e0:	pop	{fp, pc}
   284e4:	andeq	r4, r2, r8, asr r2
   284e8:	push	{fp, lr}
   284ec:	add	fp, sp, #4
   284f0:	sub	sp, sp, #8
   284f4:	str	r0, [fp, #-8]
   284f8:	ldr	r3, [fp, #-8]
   284fc:	ldrb	r3, [r3, #12]
   28500:	cmp	r3, #1
   28504:	bne	28524 <_start@@Base+0x13f04>
   28508:	ldr	r3, [pc, #36]	; 28534 <_start@@Base+0x13f14>
   2850c:	add	r3, pc, r3
   28510:	mov	r1, r3
   28514:	ldr	r0, [fp, #-8]
   28518:	bl	34e94 <flatcc_verify_union_table@@Base>
   2851c:	mov	r3, r0
   28520:	b	28528 <_start@@Base+0x13f08>
   28524:	mov	r3, #0
   28528:	mov	r0, r3
   2852c:	sub	sp, fp, #4
   28530:	pop	{fp, pc}
   28534:	ldrdeq	r0, [r0], -ip
   28538:	push	{fp, lr}
   2853c:	add	fp, sp, #4
   28540:	sub	sp, sp, #8
   28544:	str	r0, [fp, #-8]
   28548:	ldr	r3, [fp, #-8]
   2854c:	ldrb	r3, [r3, #12]
   28550:	sub	r3, r3, #1
   28554:	cmp	r3, #3
   28558:	addls	pc, pc, r3, lsl #2
   2855c:	b	285e0 <_start@@Base+0x13fc0>
   28560:	b	28570 <_start@@Base+0x13f50>
   28564:	b	2858c <_start@@Base+0x13f6c>
   28568:	b	285a8 <_start@@Base+0x13f88>
   2856c:	b	285c4 <_start@@Base+0x13fa4>
   28570:	ldr	r3, [pc, #120]	; 285f0 <_start@@Base+0x13fd0>
   28574:	add	r3, pc, r3
   28578:	mov	r1, r3
   2857c:	ldr	r0, [fp, #-8]
   28580:	bl	34e94 <flatcc_verify_union_table@@Base>
   28584:	mov	r3, r0
   28588:	b	285e4 <_start@@Base+0x13fc4>
   2858c:	ldr	r3, [pc, #96]	; 285f4 <_start@@Base+0x13fd4>
   28590:	add	r3, pc, r3
   28594:	mov	r1, r3
   28598:	ldr	r0, [fp, #-8]
   2859c:	bl	34e94 <flatcc_verify_union_table@@Base>
   285a0:	mov	r3, r0
   285a4:	b	285e4 <_start@@Base+0x13fc4>
   285a8:	ldr	r3, [pc, #72]	; 285f8 <_start@@Base+0x13fd8>
   285ac:	add	r3, pc, r3
   285b0:	mov	r1, r3
   285b4:	ldr	r0, [fp, #-8]
   285b8:	bl	34e94 <flatcc_verify_union_table@@Base>
   285bc:	mov	r3, r0
   285c0:	b	285e4 <_start@@Base+0x13fc4>
   285c4:	ldr	r3, [pc, #48]	; 285fc <_start@@Base+0x13fdc>
   285c8:	add	r3, pc, r3
   285cc:	mov	r1, r3
   285d0:	ldr	r0, [fp, #-8]
   285d4:	bl	34e94 <flatcc_verify_union_table@@Base>
   285d8:	mov	r3, r0
   285dc:	b	285e4 <_start@@Base+0x13fc4>
   285e0:	mov	r3, #0
   285e4:	mov	r0, r3
   285e8:	sub	sp, fp, #4
   285ec:	pop	{fp, pc}
   285f0:	andeq	r0, r0, r8, lsr #19
   285f4:	andeq	r0, r0, r0, lsl r2
   285f8:	andeq	r0, r0, r0, ror #2
   285fc:	andeq	r0, r0, r0, ror r4
   28600:	push	{fp, lr}
   28604:	add	fp, sp, #4
   28608:	sub	sp, sp, #8
   2860c:	str	r0, [fp, #-8]
   28610:	ldr	r3, [fp, #-8]
   28614:	ldrb	r3, [r3, #12]
   28618:	cmp	r3, #9
   2861c:	beq	2868c <_start@@Base+0x1406c>
   28620:	cmp	r3, #9
   28624:	bgt	2863c <_start@@Base+0x1401c>
   28628:	cmp	r3, #2
   2862c:	beq	28658 <_start@@Base+0x14038>
   28630:	cmp	r3, #8
   28634:	beq	28674 <_start@@Base+0x14054>
   28638:	b	286dc <_start@@Base+0x140bc>
   2863c:	cmp	r3, #11
   28640:	beq	286bc <_start@@Base+0x1409c>
   28644:	cmp	r3, #11
   28648:	blt	286a4 <_start@@Base+0x14084>
   2864c:	cmp	r3, #255	; 0xff
   28650:	beq	286cc <_start@@Base+0x140ac>
   28654:	b	286dc <_start@@Base+0x140bc>
   28658:	ldr	r3, [pc, #140]	; 286ec <_start@@Base+0x140cc>
   2865c:	add	r3, pc, r3
   28660:	mov	r1, r3
   28664:	ldr	r0, [fp, #-8]
   28668:	bl	34e94 <flatcc_verify_union_table@@Base>
   2866c:	mov	r3, r0
   28670:	b	286e0 <_start@@Base+0x140c0>
   28674:	mov	r2, #2
   28678:	mov	r1, #2
   2867c:	ldr	r0, [fp, #-8]
   28680:	bl	34ef8 <flatcc_verify_union_struct@@Base>
   28684:	mov	r3, r0
   28688:	b	286e0 <_start@@Base+0x140c0>
   2868c:	mov	r2, #4
   28690:	mov	r1, #4
   28694:	ldr	r0, [fp, #-8]
   28698:	bl	34ef8 <flatcc_verify_union_struct@@Base>
   2869c:	mov	r3, r0
   286a0:	b	286e0 <_start@@Base+0x140c0>
   286a4:	mov	r2, #4
   286a8:	mov	r1, #4
   286ac:	ldr	r0, [fp, #-8]
   286b0:	bl	34ef8 <flatcc_verify_union_struct@@Base>
   286b4:	mov	r3, r0
   286b8:	b	286e0 <_start@@Base+0x140c0>
   286bc:	ldr	r0, [fp, #-8]
   286c0:	bl	34f4c <flatcc_verify_union_string@@Base>
   286c4:	mov	r3, r0
   286c8:	b	286e0 <_start@@Base+0x140c0>
   286cc:	ldr	r0, [fp, #-8]
   286d0:	bl	34f4c <flatcc_verify_union_string@@Base>
   286d4:	mov	r3, r0
   286d8:	b	286e0 <_start@@Base+0x140c0>
   286dc:	mov	r3, #0
   286e0:	mov	r0, r3
   286e4:	sub	sp, fp, #4
   286e8:	pop	{fp, pc}
   286ec:	andeq	r1, r0, r4, asr #3
   286f0:	push	{fp}		; (str fp, [sp, #-4]!)
   286f4:	add	fp, sp, #0
   286f8:	sub	sp, sp, #12
   286fc:	str	r0, [fp, #-8]
   28700:	mov	r3, #0
   28704:	mov	r0, r3
   28708:	add	sp, fp, #0
   2870c:	pop	{fp}		; (ldr fp, [sp], #4)
   28710:	bx	lr
   28714:	push	{fp}		; (str fp, [sp, #-4]!)
   28718:	add	fp, sp, #0
   2871c:	sub	sp, sp, #12
   28720:	str	r0, [fp, #-8]
   28724:	mov	r3, #0
   28728:	mov	r0, r3
   2872c:	add	sp, fp, #0
   28730:	pop	{fp}		; (ldr fp, [sp], #4)
   28734:	bx	lr
   28738:	push	{fp}		; (str fp, [sp, #-4]!)
   2873c:	add	fp, sp, #0
   28740:	sub	sp, sp, #12
   28744:	str	r0, [fp, #-8]
   28748:	mov	r3, #0
   2874c:	mov	r0, r3
   28750:	add	sp, fp, #0
   28754:	pop	{fp}		; (ldr fp, [sp], #4)
   28758:	bx	lr
   2875c:	push	{fp, lr}
   28760:	add	fp, sp, #4
   28764:	sub	sp, sp, #16
   28768:	str	r0, [fp, #-16]
   2876c:	mov	r3, #1
   28770:	mov	r2, #0
   28774:	mov	r1, #0
   28778:	ldr	r0, [fp, #-16]
   2877c:	bl	34a9c <flatcc_verify_field@@Base>
   28780:	str	r0, [fp, #-8]
   28784:	ldr	r3, [fp, #-8]
   28788:	cmp	r3, #0
   2878c:	beq	28798 <_start@@Base+0x14178>
   28790:	ldr	r3, [fp, #-8]
   28794:	b	2879c <_start@@Base+0x1417c>
   28798:	mov	r3, #0
   2879c:	mov	r0, r3
   287a0:	sub	sp, fp, #4
   287a4:	pop	{fp, pc}
   287a8:	push	{fp, lr}
   287ac:	add	fp, sp, #4
   287b0:	sub	sp, sp, #16
   287b4:	str	r0, [fp, #-16]
   287b8:	mov	r3, #1
   287bc:	mov	r2, #1
   287c0:	mov	r1, #0
   287c4:	ldr	r0, [fp, #-16]
   287c8:	bl	34a9c <flatcc_verify_field@@Base>
   287cc:	str	r0, [fp, #-8]
   287d0:	ldr	r3, [fp, #-8]
   287d4:	cmp	r3, #0
   287d8:	beq	287e4 <_start@@Base+0x141c4>
   287dc:	ldr	r3, [fp, #-8]
   287e0:	b	2886c <_start@@Base+0x1424c>
   287e4:	mov	r3, #1
   287e8:	mov	r2, #1
   287ec:	mov	r1, #1
   287f0:	ldr	r0, [fp, #-16]
   287f4:	bl	34a9c <flatcc_verify_field@@Base>
   287f8:	str	r0, [fp, #-8]
   287fc:	ldr	r3, [fp, #-8]
   28800:	cmp	r3, #0
   28804:	beq	28810 <_start@@Base+0x141f0>
   28808:	ldr	r3, [fp, #-8]
   2880c:	b	2886c <_start@@Base+0x1424c>
   28810:	mov	r3, #1
   28814:	mov	r2, #1
   28818:	mov	r1, #2
   2881c:	ldr	r0, [fp, #-16]
   28820:	bl	34a9c <flatcc_verify_field@@Base>
   28824:	str	r0, [fp, #-8]
   28828:	ldr	r3, [fp, #-8]
   2882c:	cmp	r3, #0
   28830:	beq	2883c <_start@@Base+0x1421c>
   28834:	ldr	r3, [fp, #-8]
   28838:	b	2886c <_start@@Base+0x1424c>
   2883c:	mov	r3, #1
   28840:	mov	r2, #1
   28844:	mov	r1, #3
   28848:	ldr	r0, [fp, #-16]
   2884c:	bl	34a9c <flatcc_verify_field@@Base>
   28850:	str	r0, [fp, #-8]
   28854:	ldr	r3, [fp, #-8]
   28858:	cmp	r3, #0
   2885c:	beq	28868 <_start@@Base+0x14248>
   28860:	ldr	r3, [fp, #-8]
   28864:	b	2886c <_start@@Base+0x1424c>
   28868:	mov	r3, #0
   2886c:	mov	r0, r3
   28870:	sub	sp, fp, #4
   28874:	pop	{fp, pc}
   28878:	push	{fp, lr}
   2887c:	add	fp, sp, #4
   28880:	sub	sp, sp, #16
   28884:	str	r0, [fp, #-16]
   28888:	mov	r3, #1
   2888c:	mov	r2, #0
   28890:	mov	r1, #0
   28894:	ldr	r0, [fp, #-16]
   28898:	bl	34a9c <flatcc_verify_field@@Base>
   2889c:	str	r0, [fp, #-8]
   288a0:	ldr	r3, [fp, #-8]
   288a4:	cmp	r3, #0
   288a8:	beq	288b4 <_start@@Base+0x14294>
   288ac:	ldr	r3, [fp, #-8]
   288b0:	b	28994 <_start@@Base+0x14374>
   288b4:	mov	r3, #8
   288b8:	mov	r2, #8
   288bc:	mov	r1, #1
   288c0:	ldr	r0, [fp, #-16]
   288c4:	bl	34a9c <flatcc_verify_field@@Base>
   288c8:	str	r0, [fp, #-8]
   288cc:	ldr	r3, [fp, #-8]
   288d0:	cmp	r3, #0
   288d4:	beq	288e0 <_start@@Base+0x142c0>
   288d8:	ldr	r3, [fp, #-8]
   288dc:	b	28994 <_start@@Base+0x14374>
   288e0:	mov	r3, #8
   288e4:	mov	r2, #8
   288e8:	mov	r1, #2
   288ec:	ldr	r0, [fp, #-16]
   288f0:	bl	34a9c <flatcc_verify_field@@Base>
   288f4:	str	r0, [fp, #-8]
   288f8:	ldr	r3, [fp, #-8]
   288fc:	cmp	r3, #0
   28900:	beq	2890c <_start@@Base+0x142ec>
   28904:	ldr	r3, [fp, #-8]
   28908:	b	28994 <_start@@Base+0x14374>
   2890c:	mov	r3, #4
   28910:	mov	r2, #4
   28914:	mov	r1, #3
   28918:	ldr	r0, [fp, #-16]
   2891c:	bl	34a9c <flatcc_verify_field@@Base>
   28920:	str	r0, [fp, #-8]
   28924:	ldr	r3, [fp, #-8]
   28928:	cmp	r3, #0
   2892c:	beq	28938 <_start@@Base+0x14318>
   28930:	ldr	r3, [fp, #-8]
   28934:	b	28994 <_start@@Base+0x14374>
   28938:	mov	r3, #8
   2893c:	mov	r2, #8
   28940:	mov	r1, #4
   28944:	ldr	r0, [fp, #-16]
   28948:	bl	34a9c <flatcc_verify_field@@Base>
   2894c:	str	r0, [fp, #-8]
   28950:	ldr	r3, [fp, #-8]
   28954:	cmp	r3, #0
   28958:	beq	28964 <_start@@Base+0x14344>
   2895c:	ldr	r3, [fp, #-8]
   28960:	b	28994 <_start@@Base+0x14374>
   28964:	mov	r3, #8
   28968:	mov	r2, #8
   2896c:	mov	r1, #5
   28970:	ldr	r0, [fp, #-16]
   28974:	bl	34a9c <flatcc_verify_field@@Base>
   28978:	str	r0, [fp, #-8]
   2897c:	ldr	r3, [fp, #-8]
   28980:	cmp	r3, #0
   28984:	beq	28990 <_start@@Base+0x14370>
   28988:	ldr	r3, [fp, #-8]
   2898c:	b	28994 <_start@@Base+0x14374>
   28990:	mov	r3, #0
   28994:	mov	r0, r3
   28998:	sub	sp, fp, #4
   2899c:	pop	{fp, pc}
   289a0:	push	{fp, lr}
   289a4:	add	fp, sp, #4
   289a8:	sub	sp, sp, #16
   289ac:	str	r0, [fp, #-16]
   289b0:	mov	r2, #0
   289b4:	mov	r1, #0
   289b8:	ldr	r0, [fp, #-16]
   289bc:	bl	34b14 <flatcc_verify_string_field@@Base>
   289c0:	str	r0, [fp, #-8]
   289c4:	ldr	r3, [fp, #-8]
   289c8:	cmp	r3, #0
   289cc:	beq	289d8 <_start@@Base+0x143b8>
   289d0:	ldr	r3, [fp, #-8]
   289d4:	b	28a34 <_start@@Base+0x14414>
   289d8:	mov	r3, #8
   289dc:	mov	r2, #8
   289e0:	mov	r1, #1
   289e4:	ldr	r0, [fp, #-16]
   289e8:	bl	34a9c <flatcc_verify_field@@Base>
   289ec:	str	r0, [fp, #-8]
   289f0:	ldr	r3, [fp, #-8]
   289f4:	cmp	r3, #0
   289f8:	beq	28a04 <_start@@Base+0x143e4>
   289fc:	ldr	r3, [fp, #-8]
   28a00:	b	28a34 <_start@@Base+0x14414>
   28a04:	mov	r3, #2
   28a08:	mov	r2, #2
   28a0c:	mov	r1, #2
   28a10:	ldr	r0, [fp, #-16]
   28a14:	bl	34a9c <flatcc_verify_field@@Base>
   28a18:	str	r0, [fp, #-8]
   28a1c:	ldr	r3, [fp, #-8]
   28a20:	cmp	r3, #0
   28a24:	beq	28a30 <_start@@Base+0x14410>
   28a28:	ldr	r3, [fp, #-8]
   28a2c:	b	28a34 <_start@@Base+0x14414>
   28a30:	mov	r3, #0
   28a34:	mov	r0, r3
   28a38:	sub	sp, fp, #4
   28a3c:	pop	{fp, pc}
   28a40:	push	{fp, lr}
   28a44:	add	fp, sp, #4
   28a48:	sub	sp, sp, #16
   28a4c:	str	r0, [fp, #-16]
   28a50:	ldr	r3, [pc, #152]	; 28af0 <_start@@Base+0x144d0>
   28a54:	add	r3, pc, r3
   28a58:	mov	r2, #0
   28a5c:	mov	r1, #0
   28a60:	ldr	r0, [fp, #-16]
   28a64:	bl	34d1c <flatcc_verify_table_field@@Base>
   28a68:	str	r0, [fp, #-8]
   28a6c:	ldr	r3, [fp, #-8]
   28a70:	cmp	r3, #0
   28a74:	beq	28a80 <_start@@Base+0x14460>
   28a78:	ldr	r3, [fp, #-8]
   28a7c:	b	28ae4 <_start@@Base+0x144c4>
   28a80:	ldr	r3, [pc, #108]	; 28af4 <_start@@Base+0x144d4>
   28a84:	add	r3, pc, r3
   28a88:	mov	r2, #0
   28a8c:	mov	r1, #1
   28a90:	ldr	r0, [fp, #-16]
   28a94:	bl	34d1c <flatcc_verify_table_field@@Base>
   28a98:	str	r0, [fp, #-8]
   28a9c:	ldr	r3, [fp, #-8]
   28aa0:	cmp	r3, #0
   28aa4:	beq	28ab0 <_start@@Base+0x14490>
   28aa8:	ldr	r3, [fp, #-8]
   28aac:	b	28ae4 <_start@@Base+0x144c4>
   28ab0:	ldr	r3, [pc, #64]	; 28af8 <_start@@Base+0x144d8>
   28ab4:	add	r3, pc, r3
   28ab8:	mov	r2, #0
   28abc:	mov	r1, #3
   28ac0:	ldr	r0, [fp, #-16]
   28ac4:	bl	358b8 <flatcc_verify_union_vector_field@@Base>
   28ac8:	str	r0, [fp, #-8]
   28acc:	ldr	r3, [fp, #-8]
   28ad0:	cmp	r3, #0
   28ad4:	beq	28ae0 <_start@@Base+0x144c0>
   28ad8:	ldr	r3, [fp, #-8]
   28adc:	b	28ae4 <_start@@Base+0x144c4>
   28ae0:	mov	r3, #0
   28ae4:	mov	r0, r3
   28ae8:	sub	sp, fp, #4
   28aec:	pop	{fp, pc}
   28af0:	andeq	r0, r0, r0, lsr #1
   28af4:	andeq	r0, r0, r8, ror #27
   28af8:			; <UNDEFINED> instruction: 0xfffffa7c
   28afc:	push	{fp, lr}
   28b00:	add	fp, sp, #4
   28b04:	sub	sp, sp, #16
   28b08:	str	r0, [fp, #-16]
   28b0c:	ldr	r3, [pc, #152]	; 28bac <_start@@Base+0x1458c>
   28b10:	add	r3, pc, r3
   28b14:	mov	r2, #0
   28b18:	mov	r1, #0
   28b1c:	ldr	r0, [fp, #-16]
   28b20:	bl	34d1c <flatcc_verify_table_field@@Base>
   28b24:	str	r0, [fp, #-8]
   28b28:	ldr	r3, [fp, #-8]
   28b2c:	cmp	r3, #0
   28b30:	beq	28b3c <_start@@Base+0x1451c>
   28b34:	ldr	r3, [fp, #-8]
   28b38:	b	28ba0 <_start@@Base+0x14580>
   28b3c:	ldr	r3, [pc, #108]	; 28bb0 <_start@@Base+0x14590>
   28b40:	add	r3, pc, r3
   28b44:	mov	r2, #0
   28b48:	mov	r1, #1
   28b4c:	ldr	r0, [fp, #-16]
   28b50:	bl	34d1c <flatcc_verify_table_field@@Base>
   28b54:	str	r0, [fp, #-8]
   28b58:	ldr	r3, [fp, #-8]
   28b5c:	cmp	r3, #0
   28b60:	beq	28b6c <_start@@Base+0x1454c>
   28b64:	ldr	r3, [fp, #-8]
   28b68:	b	28ba0 <_start@@Base+0x14580>
   28b6c:	ldr	r3, [pc, #64]	; 28bb4 <_start@@Base+0x14594>
   28b70:	add	r3, pc, r3
   28b74:	mov	r2, #0
   28b78:	mov	r1, #2
   28b7c:	ldr	r0, [fp, #-16]
   28b80:	bl	34d1c <flatcc_verify_table_field@@Base>
   28b84:	str	r0, [fp, #-8]
   28b88:	ldr	r3, [fp, #-8]
   28b8c:	cmp	r3, #0
   28b90:	beq	28b9c <_start@@Base+0x1457c>
   28b94:	ldr	r3, [fp, #-8]
   28b98:	b	28ba0 <_start@@Base+0x14580>
   28b9c:	mov	r3, #0
   28ba0:	mov	r0, r3
   28ba4:	sub	sp, fp, #4
   28ba8:	pop	{fp, pc}
   28bac:	andeq	r0, r0, r0, lsr #1
   28bb0:	andeq	r0, r0, r0, lsl r2
   28bb4:	andeq	r0, r0, r8, asr r2
   28bb8:	push	{fp, lr}
   28bbc:	add	fp, sp, #4
   28bc0:	sub	sp, sp, #16
   28bc4:	str	r0, [fp, #-16]
   28bc8:	mov	r2, #0
   28bcc:	mov	r1, #0
   28bd0:	ldr	r0, [fp, #-16]
   28bd4:	bl	34b14 <flatcc_verify_string_field@@Base>
   28bd8:	str	r0, [fp, #-8]
   28bdc:	ldr	r3, [fp, #-8]
   28be0:	cmp	r3, #0
   28be4:	beq	28bf0 <_start@@Base+0x145d0>
   28be8:	ldr	r3, [fp, #-8]
   28bec:	b	28d4c <_start@@Base+0x1472c>
   28bf0:	mov	r3, #4
   28bf4:	mov	r2, #4
   28bf8:	mov	r1, #1
   28bfc:	ldr	r0, [fp, #-16]
   28c00:	bl	34a9c <flatcc_verify_field@@Base>
   28c04:	str	r0, [fp, #-8]
   28c08:	ldr	r3, [fp, #-8]
   28c0c:	cmp	r3, #0
   28c10:	beq	28c1c <_start@@Base+0x145fc>
   28c14:	ldr	r3, [fp, #-8]
   28c18:	b	28d4c <_start@@Base+0x1472c>
   28c1c:	mov	r2, #0
   28c20:	mov	r1, #2
   28c24:	ldr	r0, [fp, #-16]
   28c28:	bl	34b14 <flatcc_verify_string_field@@Base>
   28c2c:	str	r0, [fp, #-8]
   28c30:	ldr	r3, [fp, #-8]
   28c34:	cmp	r3, #0
   28c38:	beq	28c44 <_start@@Base+0x14624>
   28c3c:	ldr	r3, [fp, #-8]
   28c40:	b	28d4c <_start@@Base+0x1472c>
   28c44:	mov	r3, #8
   28c48:	mov	r2, #8
   28c4c:	mov	r1, #3
   28c50:	ldr	r0, [fp, #-16]
   28c54:	bl	34a9c <flatcc_verify_field@@Base>
   28c58:	str	r0, [fp, #-8]
   28c5c:	ldr	r3, [fp, #-8]
   28c60:	cmp	r3, #0
   28c64:	beq	28c70 <_start@@Base+0x14650>
   28c68:	ldr	r3, [fp, #-8]
   28c6c:	b	28d4c <_start@@Base+0x1472c>
   28c70:	mov	r2, #0
   28c74:	mov	r1, #4
   28c78:	ldr	r0, [fp, #-16]
   28c7c:	bl	34b14 <flatcc_verify_string_field@@Base>
   28c80:	str	r0, [fp, #-8]
   28c84:	ldr	r3, [fp, #-8]
   28c88:	cmp	r3, #0
   28c8c:	beq	28c98 <_start@@Base+0x14678>
   28c90:	ldr	r3, [fp, #-8]
   28c94:	b	28d4c <_start@@Base+0x1472c>
   28c98:	mov	r3, #8
   28c9c:	mov	r2, #8
   28ca0:	mov	r1, #5
   28ca4:	ldr	r0, [fp, #-16]
   28ca8:	bl	34a9c <flatcc_verify_field@@Base>
   28cac:	str	r0, [fp, #-8]
   28cb0:	ldr	r3, [fp, #-8]
   28cb4:	cmp	r3, #0
   28cb8:	beq	28cc4 <_start@@Base+0x146a4>
   28cbc:	ldr	r3, [fp, #-8]
   28cc0:	b	28d4c <_start@@Base+0x1472c>
   28cc4:	mov	r3, #4
   28cc8:	mov	r2, #4
   28ccc:	mov	r1, #6
   28cd0:	ldr	r0, [fp, #-16]
   28cd4:	bl	34a9c <flatcc_verify_field@@Base>
   28cd8:	str	r0, [fp, #-8]
   28cdc:	ldr	r3, [fp, #-8]
   28ce0:	cmp	r3, #0
   28ce4:	beq	28cf0 <_start@@Base+0x146d0>
   28ce8:	ldr	r3, [fp, #-8]
   28cec:	b	28d4c <_start@@Base+0x1472c>
   28cf0:	mov	r3, #8
   28cf4:	mov	r2, #8
   28cf8:	mov	r1, #7
   28cfc:	ldr	r0, [fp, #-16]
   28d00:	bl	34a9c <flatcc_verify_field@@Base>
   28d04:	str	r0, [fp, #-8]
   28d08:	ldr	r3, [fp, #-8]
   28d0c:	cmp	r3, #0
   28d10:	beq	28d1c <_start@@Base+0x146fc>
   28d14:	ldr	r3, [fp, #-8]
   28d18:	b	28d4c <_start@@Base+0x1472c>
   28d1c:	mov	r3, #4
   28d20:	mov	r2, #4
   28d24:	mov	r1, #8
   28d28:	ldr	r0, [fp, #-16]
   28d2c:	bl	34a9c <flatcc_verify_field@@Base>
   28d30:	str	r0, [fp, #-8]
   28d34:	ldr	r3, [fp, #-8]
   28d38:	cmp	r3, #0
   28d3c:	beq	28d48 <_start@@Base+0x14728>
   28d40:	ldr	r3, [fp, #-8]
   28d44:	b	28d4c <_start@@Base+0x1472c>
   28d48:	mov	r3, #0
   28d4c:	mov	r0, r3
   28d50:	sub	sp, fp, #4
   28d54:	pop	{fp, pc}
   28d58:	push	{fp, lr}
   28d5c:	add	fp, sp, #4
   28d60:	sub	sp, sp, #16
   28d64:	str	r0, [fp, #-16]
   28d68:	mov	r3, #8
   28d6c:	mov	r2, #8
   28d70:	mov	r1, #0
   28d74:	ldr	r0, [fp, #-16]
   28d78:	bl	34a9c <flatcc_verify_field@@Base>
   28d7c:	str	r0, [fp, #-8]
   28d80:	ldr	r3, [fp, #-8]
   28d84:	cmp	r3, #0
   28d88:	beq	28d94 <_start@@Base+0x14774>
   28d8c:	ldr	r3, [fp, #-8]
   28d90:	b	28dc4 <_start@@Base+0x147a4>
   28d94:	mov	r3, #4
   28d98:	mov	r2, #4
   28d9c:	mov	r1, #1
   28da0:	ldr	r0, [fp, #-16]
   28da4:	bl	34a9c <flatcc_verify_field@@Base>
   28da8:	str	r0, [fp, #-8]
   28dac:	ldr	r3, [fp, #-8]
   28db0:	cmp	r3, #0
   28db4:	beq	28dc0 <_start@@Base+0x147a0>
   28db8:	ldr	r3, [fp, #-8]
   28dbc:	b	28dc4 <_start@@Base+0x147a4>
   28dc0:	mov	r3, #0
   28dc4:	mov	r0, r3
   28dc8:	sub	sp, fp, #4
   28dcc:	pop	{fp, pc}
   28dd0:	push	{fp, lr}
   28dd4:	add	fp, sp, #4
   28dd8:	sub	sp, sp, #16
   28ddc:	str	r0, [fp, #-16]
   28de0:	mov	r3, #8
   28de4:	mov	r2, #8
   28de8:	mov	r1, #0
   28dec:	ldr	r0, [fp, #-16]
   28df0:	bl	34a9c <flatcc_verify_field@@Base>
   28df4:	str	r0, [fp, #-8]
   28df8:	ldr	r3, [fp, #-8]
   28dfc:	cmp	r3, #0
   28e00:	beq	28e0c <_start@@Base+0x147ec>
   28e04:	ldr	r3, [fp, #-8]
   28e08:	b	28e3c <_start@@Base+0x1481c>
   28e0c:	mov	r3, #4
   28e10:	mov	r2, #4
   28e14:	mov	r1, #1
   28e18:	ldr	r0, [fp, #-16]
   28e1c:	bl	34a9c <flatcc_verify_field@@Base>
   28e20:	str	r0, [fp, #-8]
   28e24:	ldr	r3, [fp, #-8]
   28e28:	cmp	r3, #0
   28e2c:	beq	28e38 <_start@@Base+0x14818>
   28e30:	ldr	r3, [fp, #-8]
   28e34:	b	28e3c <_start@@Base+0x1481c>
   28e38:	mov	r3, #0
   28e3c:	mov	r0, r3
   28e40:	sub	sp, fp, #4
   28e44:	pop	{fp, pc}
   28e48:	push	{fp, lr}
   28e4c:	add	fp, sp, #4
   28e50:	sub	sp, sp, #24
   28e54:	str	r0, [fp, #-16]
   28e58:	mvn	r3, #0
   28e5c:	str	r3, [sp, #4]
   28e60:	mov	r3, #1
   28e64:	str	r3, [sp]
   28e68:	mov	r3, #1
   28e6c:	mov	r2, #0
   28e70:	mov	r1, #0
   28e74:	ldr	r0, [fp, #-16]
   28e78:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   28e7c:	str	r0, [fp, #-8]
   28e80:	ldr	r3, [fp, #-8]
   28e84:	cmp	r3, #0
   28e88:	beq	28e94 <_start@@Base+0x14874>
   28e8c:	ldr	r3, [fp, #-8]
   28e90:	b	28f14 <_start@@Base+0x148f4>
   28e94:	mvn	r3, #0
   28e98:	str	r3, [sp, #4]
   28e9c:	mov	r3, #1
   28ea0:	str	r3, [sp]
   28ea4:	mov	r3, #1
   28ea8:	mov	r2, #0
   28eac:	mov	r1, #1
   28eb0:	ldr	r0, [fp, #-16]
   28eb4:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   28eb8:	str	r0, [fp, #-8]
   28ebc:	ldr	r3, [fp, #-8]
   28ec0:	cmp	r3, #0
   28ec4:	beq	28ed0 <_start@@Base+0x148b0>
   28ec8:	ldr	r3, [fp, #-8]
   28ecc:	b	28f14 <_start@@Base+0x148f4>
   28ed0:	ldr	r3, [pc, #72]	; 28f20 <_start@@Base+0x14900>
   28ed4:	add	r3, pc, r3
   28ed8:	str	r3, [sp, #4]
   28edc:	mov	r3, #1
   28ee0:	str	r3, [sp]
   28ee4:	mov	r3, #0
   28ee8:	mov	r2, #0
   28eec:	mov	r1, #2
   28ef0:	ldr	r0, [fp, #-16]
   28ef4:	bl	35500 <flatcc_verify_table_as_nested_root@@Base>
   28ef8:	str	r0, [fp, #-8]
   28efc:	ldr	r3, [fp, #-8]
   28f00:	cmp	r3, #0
   28f04:	beq	28f10 <_start@@Base+0x148f0>
   28f08:	ldr	r3, [fp, #-8]
   28f0c:	b	28f14 <_start@@Base+0x148f4>
   28f10:	mov	r3, #0
   28f14:	mov	r0, r3
   28f18:	sub	sp, fp, #4
   28f1c:	pop	{fp, pc}
   28f20:	andeq	r0, r0, r8, asr #32
   28f24:	push	{fp, lr}
   28f28:	add	fp, sp, #4
   28f2c:	sub	sp, sp, #24
   28f30:	str	r0, [fp, #-16]
   28f34:	mov	r3, #16
   28f38:	mov	r2, #32
   28f3c:	mov	r1, #0
   28f40:	ldr	r0, [fp, #-16]
   28f44:	bl	34a9c <flatcc_verify_field@@Base>
   28f48:	str	r0, [fp, #-8]
   28f4c:	ldr	r3, [fp, #-8]
   28f50:	cmp	r3, #0
   28f54:	beq	28f60 <_start@@Base+0x14940>
   28f58:	ldr	r3, [fp, #-8]
   28f5c:	b	295b0 <_start@@Base+0x14f90>
   28f60:	mov	r3, #2
   28f64:	mov	r2, #2
   28f68:	mov	r1, #2
   28f6c:	ldr	r0, [fp, #-16]
   28f70:	bl	34a9c <flatcc_verify_field@@Base>
   28f74:	str	r0, [fp, #-8]
   28f78:	ldr	r3, [fp, #-8]
   28f7c:	cmp	r3, #0
   28f80:	beq	28f8c <_start@@Base+0x1496c>
   28f84:	ldr	r3, [fp, #-8]
   28f88:	b	295b0 <_start@@Base+0x14f90>
   28f8c:	mov	r3, #2
   28f90:	mov	r2, #2
   28f94:	mov	r1, #1
   28f98:	ldr	r0, [fp, #-16]
   28f9c:	bl	34a9c <flatcc_verify_field@@Base>
   28fa0:	str	r0, [fp, #-8]
   28fa4:	ldr	r3, [fp, #-8]
   28fa8:	cmp	r3, #0
   28fac:	beq	28fb8 <_start@@Base+0x14998>
   28fb0:	ldr	r3, [fp, #-8]
   28fb4:	b	295b0 <_start@@Base+0x14f90>
   28fb8:	mov	r2, #1
   28fbc:	mov	r1, #3
   28fc0:	ldr	r0, [fp, #-16]
   28fc4:	bl	34b14 <flatcc_verify_string_field@@Base>
   28fc8:	str	r0, [fp, #-8]
   28fcc:	ldr	r3, [fp, #-8]
   28fd0:	cmp	r3, #0
   28fd4:	beq	28fe0 <_start@@Base+0x149c0>
   28fd8:	ldr	r3, [fp, #-8]
   28fdc:	b	295b0 <_start@@Base+0x14f90>
   28fe0:	mov	r3, #1
   28fe4:	mov	r2, #1
   28fe8:	mov	r1, #6
   28fec:	ldr	r0, [fp, #-16]
   28ff0:	bl	34a9c <flatcc_verify_field@@Base>
   28ff4:	str	r0, [fp, #-8]
   28ff8:	ldr	r3, [fp, #-8]
   28ffc:	cmp	r3, #0
   29000:	beq	2900c <_start@@Base+0x149ec>
   29004:	ldr	r3, [fp, #-8]
   29008:	b	295b0 <_start@@Base+0x14f90>
   2900c:	mvn	r3, #0
   29010:	str	r3, [sp, #4]
   29014:	mov	r3, #1
   29018:	str	r3, [sp]
   2901c:	mov	r3, #1
   29020:	mov	r2, #0
   29024:	mov	r1, #5
   29028:	ldr	r0, [fp, #-16]
   2902c:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   29030:	str	r0, [fp, #-8]
   29034:	ldr	r3, [fp, #-8]
   29038:	cmp	r3, #0
   2903c:	beq	29048 <_start@@Base+0x14a28>
   29040:	ldr	r3, [fp, #-8]
   29044:	b	295b0 <_start@@Base+0x14f90>
   29048:	ldr	r3, [pc, #1388]	; 295bc <_start@@Base+0x14f9c>
   2904c:	add	r3, pc, r3
   29050:	mov	r2, #0
   29054:	mov	r1, #11
   29058:	ldr	r0, [fp, #-16]
   2905c:	bl	34dd8 <flatcc_verify_table_vector_field@@Base>
   29060:	str	r0, [fp, #-8]
   29064:	ldr	r3, [fp, #-8]
   29068:	cmp	r3, #0
   2906c:	beq	29078 <_start@@Base+0x14a58>
   29070:	ldr	r3, [fp, #-8]
   29074:	b	295b0 <_start@@Base+0x14f90>
   29078:	mov	r2, #0
   2907c:	mov	r1, #10
   29080:	ldr	r0, [fp, #-16]
   29084:	bl	34c78 <flatcc_verify_string_vector_field@@Base>
   29088:	str	r0, [fp, #-8]
   2908c:	ldr	r3, [fp, #-8]
   29090:	cmp	r3, #0
   29094:	beq	290a0 <_start@@Base+0x14a80>
   29098:	ldr	r3, [fp, #-8]
   2909c:	b	295b0 <_start@@Base+0x14f90>
   290a0:	mov	r2, #0
   290a4:	mov	r1, #28
   290a8:	ldr	r0, [fp, #-16]
   290ac:	bl	34c78 <flatcc_verify_string_vector_field@@Base>
   290b0:	str	r0, [fp, #-8]
   290b4:	ldr	r3, [fp, #-8]
   290b8:	cmp	r3, #0
   290bc:	beq	290c8 <_start@@Base+0x14aa8>
   290c0:	ldr	r3, [fp, #-8]
   290c4:	b	295b0 <_start@@Base+0x14f90>
   290c8:	mvn	r3, #0
   290cc:	str	r3, [sp, #4]
   290d0:	mov	r3, #1
   290d4:	str	r3, [sp]
   290d8:	mov	r3, #1
   290dc:	mov	r2, #0
   290e0:	mov	r1, #24
   290e4:	ldr	r0, [fp, #-16]
   290e8:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   290ec:	str	r0, [fp, #-8]
   290f0:	ldr	r3, [fp, #-8]
   290f4:	cmp	r3, #0
   290f8:	beq	29104 <_start@@Base+0x14ae4>
   290fc:	ldr	r3, [fp, #-8]
   29100:	b	295b0 <_start@@Base+0x14f90>
   29104:	mvn	r3, #-536870912	; 0xe0000000
   29108:	str	r3, [sp, #4]
   2910c:	mov	r3, #4
   29110:	str	r3, [sp]
   29114:	mov	r3, #8
   29118:	mov	r2, #0
   2911c:	mov	r1, #29
   29120:	ldr	r0, [fp, #-16]
   29124:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   29128:	str	r0, [fp, #-8]
   2912c:	ldr	r3, [fp, #-8]
   29130:	cmp	r3, #0
   29134:	beq	29140 <_start@@Base+0x14b20>
   29138:	ldr	r3, [fp, #-8]
   2913c:	b	295b0 <_start@@Base+0x14f90>
   29140:	ldr	r3, [pc, #1144]	; 295c0 <_start@@Base+0x14fa0>
   29144:	add	r3, pc, r3
   29148:	mov	r2, #0
   2914c:	mov	r1, #12
   29150:	ldr	r0, [fp, #-16]
   29154:	bl	34d1c <flatcc_verify_table_field@@Base>
   29158:	str	r0, [fp, #-8]
   2915c:	ldr	r3, [fp, #-8]
   29160:	cmp	r3, #0
   29164:	beq	29170 <_start@@Base+0x14b50>
   29168:	ldr	r3, [fp, #-8]
   2916c:	b	295b0 <_start@@Base+0x14f90>
   29170:	ldr	r3, [pc, #1100]	; 295c4 <_start@@Base+0x14fa4>
   29174:	add	r3, pc, r3
   29178:	mov	r2, #0
   2917c:	mov	r1, #8
   29180:	ldr	r0, [fp, #-16]
   29184:	bl	3565c <flatcc_verify_union_field@@Base>
   29188:	str	r0, [fp, #-8]
   2918c:	ldr	r3, [fp, #-8]
   29190:	cmp	r3, #0
   29194:	beq	291a0 <_start@@Base+0x14b80>
   29198:	ldr	r3, [fp, #-8]
   2919c:	b	295b0 <_start@@Base+0x14f90>
   291a0:	mvn	r3, #-1073741824	; 0xc0000000
   291a4:	str	r3, [sp, #4]
   291a8:	mov	r3, #2
   291ac:	str	r3, [sp]
   291b0:	mov	r3, #4
   291b4:	mov	r2, #0
   291b8:	mov	r1, #9
   291bc:	ldr	r0, [fp, #-16]
   291c0:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   291c4:	str	r0, [fp, #-8]
   291c8:	ldr	r3, [fp, #-8]
   291cc:	cmp	r3, #0
   291d0:	beq	291dc <_start@@Base+0x14bbc>
   291d4:	ldr	r3, [fp, #-8]
   291d8:	b	295b0 <_start@@Base+0x14f90>
   291dc:	mvn	r3, #-1073741824	; 0xc0000000
   291e0:	str	r3, [sp, #4]
   291e4:	mov	r3, #2
   291e8:	str	r3, [sp]
   291ec:	mov	r3, #4
   291f0:	mov	r2, #0
   291f4:	mov	r1, #31
   291f8:	ldr	r0, [fp, #-16]
   291fc:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   29200:	str	r0, [fp, #-8]
   29204:	ldr	r3, [fp, #-8]
   29208:	cmp	r3, #0
   2920c:	beq	29218 <_start@@Base+0x14bf8>
   29210:	ldr	r3, [fp, #-8]
   29214:	b	295b0 <_start@@Base+0x14f90>
   29218:	ldr	r3, [pc, #936]	; 295c8 <_start@@Base+0x14fa8>
   2921c:	add	r3, pc, r3
   29220:	str	r3, [sp, #4]
   29224:	mov	r3, #1
   29228:	str	r3, [sp]
   2922c:	mov	r3, #0
   29230:	mov	r2, #0
   29234:	mov	r1, #13
   29238:	ldr	r0, [fp, #-16]
   2923c:	bl	35500 <flatcc_verify_table_as_nested_root@@Base>
   29240:	str	r0, [fp, #-8]
   29244:	ldr	r3, [fp, #-8]
   29248:	cmp	r3, #0
   2924c:	beq	29258 <_start@@Base+0x14c38>
   29250:	ldr	r3, [fp, #-8]
   29254:	b	295b0 <_start@@Base+0x14f90>
   29258:	ldr	r3, [pc, #876]	; 295cc <_start@@Base+0x14fac>
   2925c:	add	r3, pc, r3
   29260:	mov	r2, #0
   29264:	mov	r1, #14
   29268:	ldr	r0, [fp, #-16]
   2926c:	bl	34d1c <flatcc_verify_table_field@@Base>
   29270:	str	r0, [fp, #-8]
   29274:	ldr	r3, [fp, #-8]
   29278:	cmp	r3, #0
   2927c:	beq	29288 <_start@@Base+0x14c68>
   29280:	ldr	r3, [fp, #-8]
   29284:	b	295b0 <_start@@Base+0x14f90>
   29288:	mov	r3, #1
   2928c:	mov	r2, #1
   29290:	mov	r1, #15
   29294:	ldr	r0, [fp, #-16]
   29298:	bl	34a9c <flatcc_verify_field@@Base>
   2929c:	str	r0, [fp, #-8]
   292a0:	ldr	r3, [fp, #-8]
   292a4:	cmp	r3, #0
   292a8:	beq	292b4 <_start@@Base+0x14c94>
   292ac:	ldr	r3, [fp, #-8]
   292b0:	b	295b0 <_start@@Base+0x14f90>
   292b4:	mov	r3, #4
   292b8:	mov	r2, #4
   292bc:	mov	r1, #16
   292c0:	ldr	r0, [fp, #-16]
   292c4:	bl	34a9c <flatcc_verify_field@@Base>
   292c8:	str	r0, [fp, #-8]
   292cc:	ldr	r3, [fp, #-8]
   292d0:	cmp	r3, #0
   292d4:	beq	292e0 <_start@@Base+0x14cc0>
   292d8:	ldr	r3, [fp, #-8]
   292dc:	b	295b0 <_start@@Base+0x14f90>
   292e0:	mov	r3, #4
   292e4:	mov	r2, #4
   292e8:	mov	r1, #17
   292ec:	ldr	r0, [fp, #-16]
   292f0:	bl	34a9c <flatcc_verify_field@@Base>
   292f4:	str	r0, [fp, #-8]
   292f8:	ldr	r3, [fp, #-8]
   292fc:	cmp	r3, #0
   29300:	beq	2930c <_start@@Base+0x14cec>
   29304:	ldr	r3, [fp, #-8]
   29308:	b	295b0 <_start@@Base+0x14f90>
   2930c:	mov	r3, #8
   29310:	mov	r2, #8
   29314:	mov	r1, #18
   29318:	ldr	r0, [fp, #-16]
   2931c:	bl	34a9c <flatcc_verify_field@@Base>
   29320:	str	r0, [fp, #-8]
   29324:	ldr	r3, [fp, #-8]
   29328:	cmp	r3, #0
   2932c:	beq	29338 <_start@@Base+0x14d18>
   29330:	ldr	r3, [fp, #-8]
   29334:	b	295b0 <_start@@Base+0x14f90>
   29338:	mov	r3, #8
   2933c:	mov	r2, #8
   29340:	mov	r1, #19
   29344:	ldr	r0, [fp, #-16]
   29348:	bl	34a9c <flatcc_verify_field@@Base>
   2934c:	str	r0, [fp, #-8]
   29350:	ldr	r3, [fp, #-8]
   29354:	cmp	r3, #0
   29358:	beq	29364 <_start@@Base+0x14d44>
   2935c:	ldr	r3, [fp, #-8]
   29360:	b	295b0 <_start@@Base+0x14f90>
   29364:	mov	r3, #4
   29368:	mov	r2, #4
   2936c:	mov	r1, #20
   29370:	ldr	r0, [fp, #-16]
   29374:	bl	34a9c <flatcc_verify_field@@Base>
   29378:	str	r0, [fp, #-8]
   2937c:	ldr	r3, [fp, #-8]
   29380:	cmp	r3, #0
   29384:	beq	29390 <_start@@Base+0x14d70>
   29388:	ldr	r3, [fp, #-8]
   2938c:	b	295b0 <_start@@Base+0x14f90>
   29390:	mov	r3, #4
   29394:	mov	r2, #4
   29398:	mov	r1, #21
   2939c:	ldr	r0, [fp, #-16]
   293a0:	bl	34a9c <flatcc_verify_field@@Base>
   293a4:	str	r0, [fp, #-8]
   293a8:	ldr	r3, [fp, #-8]
   293ac:	cmp	r3, #0
   293b0:	beq	293bc <_start@@Base+0x14d9c>
   293b4:	ldr	r3, [fp, #-8]
   293b8:	b	295b0 <_start@@Base+0x14f90>
   293bc:	mov	r3, #8
   293c0:	mov	r2, #8
   293c4:	mov	r1, #22
   293c8:	ldr	r0, [fp, #-16]
   293cc:	bl	34a9c <flatcc_verify_field@@Base>
   293d0:	str	r0, [fp, #-8]
   293d4:	ldr	r3, [fp, #-8]
   293d8:	cmp	r3, #0
   293dc:	beq	293e8 <_start@@Base+0x14dc8>
   293e0:	ldr	r3, [fp, #-8]
   293e4:	b	295b0 <_start@@Base+0x14f90>
   293e8:	mov	r3, #8
   293ec:	mov	r2, #8
   293f0:	mov	r1, #23
   293f4:	ldr	r0, [fp, #-16]
   293f8:	bl	34a9c <flatcc_verify_field@@Base>
   293fc:	str	r0, [fp, #-8]
   29400:	ldr	r3, [fp, #-8]
   29404:	cmp	r3, #0
   29408:	beq	29414 <_start@@Base+0x14df4>
   2940c:	ldr	r3, [fp, #-8]
   29410:	b	295b0 <_start@@Base+0x14f90>
   29414:	mov	r3, #4
   29418:	mov	r2, #4
   2941c:	mov	r1, #25
   29420:	ldr	r0, [fp, #-16]
   29424:	bl	34a9c <flatcc_verify_field@@Base>
   29428:	str	r0, [fp, #-8]
   2942c:	ldr	r3, [fp, #-8]
   29430:	cmp	r3, #0
   29434:	beq	29440 <_start@@Base+0x14e20>
   29438:	ldr	r3, [fp, #-8]
   2943c:	b	295b0 <_start@@Base+0x14f90>
   29440:	mov	r3, #4
   29444:	mov	r2, #4
   29448:	mov	r1, #26
   2944c:	ldr	r0, [fp, #-16]
   29450:	bl	34a9c <flatcc_verify_field@@Base>
   29454:	str	r0, [fp, #-8]
   29458:	ldr	r3, [fp, #-8]
   2945c:	cmp	r3, #0
   29460:	beq	2946c <_start@@Base+0x14e4c>
   29464:	ldr	r3, [fp, #-8]
   29468:	b	295b0 <_start@@Base+0x14f90>
   2946c:	mov	r3, #4
   29470:	mov	r2, #4
   29474:	mov	r1, #27
   29478:	ldr	r0, [fp, #-16]
   2947c:	bl	34a9c <flatcc_verify_field@@Base>
   29480:	str	r0, [fp, #-8]
   29484:	ldr	r3, [fp, #-8]
   29488:	cmp	r3, #0
   2948c:	beq	29498 <_start@@Base+0x14e78>
   29490:	ldr	r3, [fp, #-8]
   29494:	b	295b0 <_start@@Base+0x14f90>
   29498:	mvn	r3, #0
   2949c:	str	r3, [sp, #4]
   294a0:	mov	r3, #1
   294a4:	str	r3, [sp]
   294a8:	mov	r3, #1
   294ac:	mov	r2, #0
   294b0:	mov	r1, #30
   294b4:	ldr	r0, [fp, #-16]
   294b8:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   294bc:	str	r0, [fp, #-8]
   294c0:	ldr	r3, [fp, #-8]
   294c4:	cmp	r3, #0
   294c8:	beq	294d4 <_start@@Base+0x14eb4>
   294cc:	ldr	r3, [fp, #-8]
   294d0:	b	295b0 <_start@@Base+0x14f90>
   294d4:	mvn	r3, #-536870912	; 0xe0000000
   294d8:	str	r3, [sp, #4]
   294dc:	mov	r3, #8
   294e0:	str	r3, [sp]
   294e4:	mov	r3, #8
   294e8:	mov	r2, #0
   294ec:	mov	r1, #32
   294f0:	ldr	r0, [fp, #-16]
   294f4:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   294f8:	str	r0, [fp, #-8]
   294fc:	ldr	r3, [fp, #-8]
   29500:	cmp	r3, #0
   29504:	beq	29510 <_start@@Base+0x14ef0>
   29508:	ldr	r3, [fp, #-8]
   2950c:	b	295b0 <_start@@Base+0x14f90>
   29510:	mvn	r3, #-536870912	; 0xe0000000
   29514:	str	r3, [sp, #4]
   29518:	mov	r3, #8
   2951c:	str	r3, [sp]
   29520:	mov	r3, #8
   29524:	mov	r2, #0
   29528:	mov	r1, #33	; 0x21
   2952c:	ldr	r0, [fp, #-16]
   29530:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   29534:	str	r0, [fp, #-8]
   29538:	ldr	r3, [fp, #-8]
   2953c:	cmp	r3, #0
   29540:	beq	2954c <_start@@Base+0x14f2c>
   29544:	ldr	r3, [fp, #-8]
   29548:	b	295b0 <_start@@Base+0x14f90>
   2954c:	ldr	r3, [pc, #124]	; 295d0 <_start@@Base+0x14fb0>
   29550:	add	r3, pc, r3
   29554:	mov	r2, #0
   29558:	mov	r1, #34	; 0x22
   2955c:	ldr	r0, [fp, #-16]
   29560:	bl	34d1c <flatcc_verify_table_field@@Base>
   29564:	str	r0, [fp, #-8]
   29568:	ldr	r3, [fp, #-8]
   2956c:	cmp	r3, #0
   29570:	beq	2957c <_start@@Base+0x14f5c>
   29574:	ldr	r3, [fp, #-8]
   29578:	b	295b0 <_start@@Base+0x14f90>
   2957c:	ldr	r3, [pc, #80]	; 295d4 <_start@@Base+0x14fb4>
   29580:	add	r3, pc, r3
   29584:	mov	r2, #0
   29588:	mov	r1, #35	; 0x23
   2958c:	ldr	r0, [fp, #-16]
   29590:	bl	34d1c <flatcc_verify_table_field@@Base>
   29594:	str	r0, [fp, #-8]
   29598:	ldr	r3, [fp, #-8]
   2959c:	cmp	r3, #0
   295a0:	beq	295ac <_start@@Base+0x14f8c>
   295a4:	ldr	r3, [fp, #-8]
   295a8:	b	295b0 <_start@@Base+0x14f90>
   295ac:	mov	r3, #0
   295b0:	mov	r0, r3
   295b4:	sub	sp, fp, #4
   295b8:	pop	{fp, pc}
   295bc:			; <UNDEFINED> instruction: 0xfffffed0
   295c0:			; <UNDEFINED> instruction: 0xfffffdd8
   295c4:			; <UNDEFINED> instruction: 0xfffff3bc
   295c8:			; <UNDEFINED> instruction: 0xfffffd00
   295cc:			; <UNDEFINED> instruction: 0xfffff73c
   295d0:			; <UNDEFINED> instruction: 0xfffff198
   295d4:			; <UNDEFINED> instruction: 0xfffff8c0
   295d8:	push	{fp, lr}
   295dc:	add	fp, sp, #4
   295e0:	sub	sp, sp, #24
   295e4:	str	r0, [fp, #-16]
   295e8:	mov	r3, #1
   295ec:	mov	r2, #1
   295f0:	mov	r1, #0
   295f4:	ldr	r0, [fp, #-16]
   295f8:	bl	34a9c <flatcc_verify_field@@Base>
   295fc:	str	r0, [fp, #-8]
   29600:	ldr	r3, [fp, #-8]
   29604:	cmp	r3, #0
   29608:	beq	29614 <_start@@Base+0x14ff4>
   2960c:	ldr	r3, [fp, #-8]
   29610:	b	2981c <_start@@Base+0x151fc>
   29614:	mov	r3, #1
   29618:	mov	r2, #1
   2961c:	mov	r1, #1
   29620:	ldr	r0, [fp, #-16]
   29624:	bl	34a9c <flatcc_verify_field@@Base>
   29628:	str	r0, [fp, #-8]
   2962c:	ldr	r3, [fp, #-8]
   29630:	cmp	r3, #0
   29634:	beq	29640 <_start@@Base+0x15020>
   29638:	ldr	r3, [fp, #-8]
   2963c:	b	2981c <_start@@Base+0x151fc>
   29640:	mov	r3, #2
   29644:	mov	r2, #2
   29648:	mov	r1, #2
   2964c:	ldr	r0, [fp, #-16]
   29650:	bl	34a9c <flatcc_verify_field@@Base>
   29654:	str	r0, [fp, #-8]
   29658:	ldr	r3, [fp, #-8]
   2965c:	cmp	r3, #0
   29660:	beq	2966c <_start@@Base+0x1504c>
   29664:	ldr	r3, [fp, #-8]
   29668:	b	2981c <_start@@Base+0x151fc>
   2966c:	mov	r3, #2
   29670:	mov	r2, #2
   29674:	mov	r1, #3
   29678:	ldr	r0, [fp, #-16]
   2967c:	bl	34a9c <flatcc_verify_field@@Base>
   29680:	str	r0, [fp, #-8]
   29684:	ldr	r3, [fp, #-8]
   29688:	cmp	r3, #0
   2968c:	beq	29698 <_start@@Base+0x15078>
   29690:	ldr	r3, [fp, #-8]
   29694:	b	2981c <_start@@Base+0x151fc>
   29698:	mov	r3, #4
   2969c:	mov	r2, #4
   296a0:	mov	r1, #4
   296a4:	ldr	r0, [fp, #-16]
   296a8:	bl	34a9c <flatcc_verify_field@@Base>
   296ac:	str	r0, [fp, #-8]
   296b0:	ldr	r3, [fp, #-8]
   296b4:	cmp	r3, #0
   296b8:	beq	296c4 <_start@@Base+0x150a4>
   296bc:	ldr	r3, [fp, #-8]
   296c0:	b	2981c <_start@@Base+0x151fc>
   296c4:	mov	r3, #4
   296c8:	mov	r2, #4
   296cc:	mov	r1, #5
   296d0:	ldr	r0, [fp, #-16]
   296d4:	bl	34a9c <flatcc_verify_field@@Base>
   296d8:	str	r0, [fp, #-8]
   296dc:	ldr	r3, [fp, #-8]
   296e0:	cmp	r3, #0
   296e4:	beq	296f0 <_start@@Base+0x150d0>
   296e8:	ldr	r3, [fp, #-8]
   296ec:	b	2981c <_start@@Base+0x151fc>
   296f0:	mov	r3, #8
   296f4:	mov	r2, #8
   296f8:	mov	r1, #6
   296fc:	ldr	r0, [fp, #-16]
   29700:	bl	34a9c <flatcc_verify_field@@Base>
   29704:	str	r0, [fp, #-8]
   29708:	ldr	r3, [fp, #-8]
   2970c:	cmp	r3, #0
   29710:	beq	2971c <_start@@Base+0x150fc>
   29714:	ldr	r3, [fp, #-8]
   29718:	b	2981c <_start@@Base+0x151fc>
   2971c:	mov	r3, #8
   29720:	mov	r2, #8
   29724:	mov	r1, #7
   29728:	ldr	r0, [fp, #-16]
   2972c:	bl	34a9c <flatcc_verify_field@@Base>
   29730:	str	r0, [fp, #-8]
   29734:	ldr	r3, [fp, #-8]
   29738:	cmp	r3, #0
   2973c:	beq	29748 <_start@@Base+0x15128>
   29740:	ldr	r3, [fp, #-8]
   29744:	b	2981c <_start@@Base+0x151fc>
   29748:	mov	r3, #4
   2974c:	mov	r2, #4
   29750:	mov	r1, #8
   29754:	ldr	r0, [fp, #-16]
   29758:	bl	34a9c <flatcc_verify_field@@Base>
   2975c:	str	r0, [fp, #-8]
   29760:	ldr	r3, [fp, #-8]
   29764:	cmp	r3, #0
   29768:	beq	29774 <_start@@Base+0x15154>
   2976c:	ldr	r3, [fp, #-8]
   29770:	b	2981c <_start@@Base+0x151fc>
   29774:	mov	r3, #8
   29778:	mov	r2, #8
   2977c:	mov	r1, #9
   29780:	ldr	r0, [fp, #-16]
   29784:	bl	34a9c <flatcc_verify_field@@Base>
   29788:	str	r0, [fp, #-8]
   2978c:	ldr	r3, [fp, #-8]
   29790:	cmp	r3, #0
   29794:	beq	297a0 <_start@@Base+0x15180>
   29798:	ldr	r3, [fp, #-8]
   2979c:	b	2981c <_start@@Base+0x151fc>
   297a0:	mvn	r3, #0
   297a4:	str	r3, [sp, #4]
   297a8:	mov	r3, #1
   297ac:	str	r3, [sp]
   297b0:	mov	r3, #1
   297b4:	mov	r2, #0
   297b8:	mov	r1, #10
   297bc:	ldr	r0, [fp, #-16]
   297c0:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   297c4:	str	r0, [fp, #-8]
   297c8:	ldr	r3, [fp, #-8]
   297cc:	cmp	r3, #0
   297d0:	beq	297dc <_start@@Base+0x151bc>
   297d4:	ldr	r3, [fp, #-8]
   297d8:	b	2981c <_start@@Base+0x151fc>
   297dc:	mvn	r3, #-536870912	; 0xe0000000
   297e0:	str	r3, [sp, #4]
   297e4:	mov	r3, #8
   297e8:	str	r3, [sp]
   297ec:	mov	r3, #8
   297f0:	mov	r2, #0
   297f4:	mov	r1, #11
   297f8:	ldr	r0, [fp, #-16]
   297fc:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   29800:	str	r0, [fp, #-8]
   29804:	ldr	r3, [fp, #-8]
   29808:	cmp	r3, #0
   2980c:	beq	29818 <_start@@Base+0x151f8>
   29810:	ldr	r3, [fp, #-8]
   29814:	b	2981c <_start@@Base+0x151fc>
   29818:	mov	r3, #0
   2981c:	mov	r0, r3
   29820:	sub	sp, fp, #4
   29824:	pop	{fp, pc}
   29828:	push	{fp, lr}
   2982c:	add	fp, sp, #4
   29830:	sub	sp, sp, #16
   29834:	str	r0, [fp, #-16]
   29838:	mov	r3, #4
   2983c:	mov	r2, #4
   29840:	mov	r1, #0
   29844:	ldr	r0, [fp, #-16]
   29848:	bl	34a9c <flatcc_verify_field@@Base>
   2984c:	str	r0, [fp, #-8]
   29850:	ldr	r3, [fp, #-8]
   29854:	cmp	r3, #0
   29858:	beq	29864 <_start@@Base+0x15244>
   2985c:	ldr	r3, [fp, #-8]
   29860:	b	29868 <_start@@Base+0x15248>
   29864:	mov	r3, #0
   29868:	mov	r0, r3
   2986c:	sub	sp, fp, #4
   29870:	pop	{fp, pc}
   29874:	push	{fp, lr}
   29878:	add	fp, sp, #4
   2987c:	sub	sp, sp, #16
   29880:	str	r0, [fp, #-16]
   29884:	ldr	r3, [pc, #248]	; 29984 <_start@@Base+0x15364>
   29888:	add	r3, pc, r3
   2988c:	mov	r2, #0
   29890:	mov	r1, #1
   29894:	ldr	r0, [fp, #-16]
   29898:	bl	3565c <flatcc_verify_union_field@@Base>
   2989c:	str	r0, [fp, #-8]
   298a0:	ldr	r3, [fp, #-8]
   298a4:	cmp	r3, #0
   298a8:	beq	298b4 <_start@@Base+0x15294>
   298ac:	ldr	r3, [fp, #-8]
   298b0:	b	29978 <_start@@Base+0x15358>
   298b4:	ldr	r3, [pc, #204]	; 29988 <_start@@Base+0x15368>
   298b8:	add	r3, pc, r3
   298bc:	mov	r2, #0
   298c0:	mov	r1, #3
   298c4:	ldr	r0, [fp, #-16]
   298c8:	bl	3565c <flatcc_verify_union_field@@Base>
   298cc:	str	r0, [fp, #-8]
   298d0:	ldr	r3, [fp, #-8]
   298d4:	cmp	r3, #0
   298d8:	beq	298e4 <_start@@Base+0x152c4>
   298dc:	ldr	r3, [fp, #-8]
   298e0:	b	29978 <_start@@Base+0x15358>
   298e4:	ldr	r3, [pc, #160]	; 2998c <_start@@Base+0x1536c>
   298e8:	add	r3, pc, r3
   298ec:	mov	r2, #0
   298f0:	mov	r1, #5
   298f4:	ldr	r0, [fp, #-16]
   298f8:	bl	3565c <flatcc_verify_union_field@@Base>
   298fc:	str	r0, [fp, #-8]
   29900:	ldr	r3, [fp, #-8]
   29904:	cmp	r3, #0
   29908:	beq	29914 <_start@@Base+0x152f4>
   2990c:	ldr	r3, [fp, #-8]
   29910:	b	29978 <_start@@Base+0x15358>
   29914:	ldr	r3, [pc, #116]	; 29990 <_start@@Base+0x15370>
   29918:	add	r3, pc, r3
   2991c:	mov	r2, #0
   29920:	mov	r1, #7
   29924:	ldr	r0, [fp, #-16]
   29928:	bl	3565c <flatcc_verify_union_field@@Base>
   2992c:	str	r0, [fp, #-8]
   29930:	ldr	r3, [fp, #-8]
   29934:	cmp	r3, #0
   29938:	beq	29944 <_start@@Base+0x15324>
   2993c:	ldr	r3, [fp, #-8]
   29940:	b	29978 <_start@@Base+0x15358>
   29944:	ldr	r3, [pc, #72]	; 29994 <_start@@Base+0x15374>
   29948:	add	r3, pc, r3
   2994c:	mov	r2, #0
   29950:	mov	r1, #9
   29954:	ldr	r0, [fp, #-16]
   29958:	bl	358b8 <flatcc_verify_union_vector_field@@Base>
   2995c:	str	r0, [fp, #-8]
   29960:	ldr	r3, [fp, #-8]
   29964:	cmp	r3, #0
   29968:	beq	29974 <_start@@Base+0x15354>
   2996c:	ldr	r3, [fp, #-8]
   29970:	b	29978 <_start@@Base+0x15358>
   29974:	mov	r3, #0
   29978:	mov	r0, r3
   2997c:	sub	sp, fp, #4
   29980:	pop	{fp, pc}
   29984:			; <UNDEFINED> instruction: 0xffffed70
   29988:			; <UNDEFINED> instruction: 0xffffed40
   2998c:			; <UNDEFINED> instruction: 0xffffed10
   29990:			; <UNDEFINED> instruction: 0xffffece0
   29994:			; <UNDEFINED> instruction: 0xffffecb0
   29998:	push	{fp, lr}
   2999c:	add	fp, sp, #4
   299a0:	sub	sp, sp, #48	; 0x30
   299a4:	str	r0, [fp, #-40]	; 0xffffffd8
   299a8:	str	r1, [fp, #-44]	; 0xffffffd4
   299ac:	str	r2, [fp, #-48]	; 0xffffffd0
   299b0:	str	r3, [fp, #-52]	; 0xffffffcc
   299b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   299b8:	str	r3, [fp, #-12]
   299bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   299c0:	cmp	r3, #0
   299c4:	beq	299e0 <_start@@Base+0x153c0>
   299c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   299cc:	ldr	r3, [pc, #440]	; 29b8c <_start@@Base+0x1556c>
   299d0:	add	r3, pc, r3
   299d4:	mov	r1, r3
   299d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   299dc:	bl	145a4 <fprintf@plt>
   299e0:	mov	r3, #0
   299e4:	str	r3, [fp, #-8]
   299e8:	b	29b1c <_start@@Base+0x154fc>
   299ec:	ldr	r3, [fp, #-8]
   299f0:	and	r3, r3, #15
   299f4:	cmp	r3, #0
   299f8:	bne	29a40 <_start@@Base+0x15420>
   299fc:	ldr	r3, [fp, #-8]
   29a00:	cmp	r3, #0
   29a04:	beq	29a24 <_start@@Base+0x15404>
   29a08:	sub	r3, fp, #32
   29a0c:	mov	r2, r3
   29a10:	ldr	r3, [pc, #376]	; 29b90 <_start@@Base+0x15570>
   29a14:	add	r3, pc, r3
   29a18:	mov	r1, r3
   29a1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29a20:	bl	145a4 <fprintf@plt>
   29a24:	ldr	r2, [fp, #-8]
   29a28:	ldr	r3, [pc, #356]	; 29b94 <_start@@Base+0x15574>
   29a2c:	add	r3, pc, r3
   29a30:	mov	r1, r3
   29a34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29a38:	bl	145a4 <fprintf@plt>
   29a3c:	b	29a5c <_start@@Base+0x1543c>
   29a40:	ldr	r3, [fp, #-8]
   29a44:	and	r3, r3, #7
   29a48:	cmp	r3, #0
   29a4c:	bne	29a5c <_start@@Base+0x1543c>
   29a50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   29a54:	mov	r0, #32
   29a58:	bl	145ec <fputc@plt>
   29a5c:	ldr	r2, [fp, #-12]
   29a60:	ldr	r3, [fp, #-8]
   29a64:	add	r3, r2, r3
   29a68:	ldrb	r3, [r3]
   29a6c:	mov	r2, r3
   29a70:	ldr	r3, [pc, #288]	; 29b98 <_start@@Base+0x15578>
   29a74:	add	r3, pc, r3
   29a78:	mov	r1, r3
   29a7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29a80:	bl	145a4 <fprintf@plt>
   29a84:	ldr	r2, [fp, #-12]
   29a88:	ldr	r3, [fp, #-8]
   29a8c:	add	r3, r2, r3
   29a90:	ldrb	r3, [r3]
   29a94:	cmp	r3, #31
   29a98:	bls	29ab4 <_start@@Base+0x15494>
   29a9c:	ldr	r2, [fp, #-12]
   29aa0:	ldr	r3, [fp, #-8]
   29aa4:	add	r3, r2, r3
   29aa8:	ldrb	r3, [r3]
   29aac:	cmp	r3, #126	; 0x7e
   29ab0:	bls	29ad0 <_start@@Base+0x154b0>
   29ab4:	ldr	r3, [fp, #-8]
   29ab8:	and	r3, r3, #15
   29abc:	sub	r2, fp, #4
   29ac0:	add	r3, r2, r3
   29ac4:	mov	r2, #46	; 0x2e
   29ac8:	strb	r2, [r3, #-28]	; 0xffffffe4
   29acc:	b	29af4 <_start@@Base+0x154d4>
   29ad0:	ldr	r3, [fp, #-8]
   29ad4:	and	r3, r3, #15
   29ad8:	ldr	r1, [fp, #-12]
   29adc:	ldr	r2, [fp, #-8]
   29ae0:	add	r2, r1, r2
   29ae4:	ldrb	r2, [r2]
   29ae8:	sub	r1, fp, #4
   29aec:	add	r3, r1, r3
   29af0:	strb	r2, [r3, #-28]	; 0xffffffe4
   29af4:	ldr	r3, [fp, #-8]
   29af8:	and	r3, r3, #15
   29afc:	add	r3, r3, #1
   29b00:	sub	r2, fp, #4
   29b04:	add	r3, r2, r3
   29b08:	mov	r2, #0
   29b0c:	strb	r2, [r3, #-28]	; 0xffffffe4
   29b10:	ldr	r3, [fp, #-8]
   29b14:	add	r3, r3, #1
   29b18:	str	r3, [fp, #-8]
   29b1c:	ldr	r2, [fp, #-8]
   29b20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29b24:	cmp	r2, r3
   29b28:	bcc	299ec <_start@@Base+0x153cc>
   29b2c:	b	29b54 <_start@@Base+0x15534>
   29b30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29b34:	mov	r2, #3
   29b38:	mov	r1, #1
   29b3c:	ldr	r0, [pc, #88]	; 29b9c <_start@@Base+0x1557c>
   29b40:	add	r0, pc, r0
   29b44:	bl	14568 <fwrite@plt>
   29b48:	ldr	r3, [fp, #-8]
   29b4c:	add	r3, r3, #1
   29b50:	str	r3, [fp, #-8]
   29b54:	ldr	r3, [fp, #-8]
   29b58:	and	r3, r3, #15
   29b5c:	cmp	r3, #0
   29b60:	bne	29b30 <_start@@Base+0x15510>
   29b64:	sub	r3, fp, #32
   29b68:	mov	r2, r3
   29b6c:	ldr	r3, [pc, #44]	; 29ba0 <_start@@Base+0x15580>
   29b70:	add	r3, pc, r3
   29b74:	mov	r1, r3
   29b78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29b7c:	bl	145a4 <fprintf@plt>
   29b80:	nop			; (mov r0, r0)
   29b84:	sub	sp, fp, #4
   29b88:	pop	{fp, pc}
   29b8c:	andeq	r3, r2, r0, ror r2
   29b90:	andeq	r3, r2, r4, lsr r2
   29b94:	andeq	r3, r2, r4, lsr #4
   29b98:	andeq	r3, r2, r4, ror #3
   29b9c:	andeq	r3, r2, r0, lsr #2
   29ba0:	ldrdeq	r3, [r2], -r8

00029ba4 <test_json@@Base>:
   29ba4:	push	{r4, r5, fp, lr}
   29ba8:	add	fp, sp, #12
   29bac:	sub	sp, sp, #392	; 0x188
   29bb0:	str	r0, [fp, #-376]	; 0xfffffe88
   29bb4:	str	r1, [fp, #-380]	; 0xfffffe84
   29bb8:	str	r2, [fp, #-384]	; 0xfffffe80
   29bbc:	str	r3, [fp, #-388]	; 0xfffffe7c
   29bc0:	ldr	r4, [pc, #1056]	; 29fe8 <test_json@@Base+0x444>
   29bc4:	add	r4, pc, r4
   29bc8:	mvn	r3, #0
   29bcc:	str	r3, [fp, #-16]
   29bd0:	mov	r3, #0
   29bd4:	str	r3, [fp, #-20]	; 0xffffffec
   29bd8:	mov	r3, #0
   29bdc:	str	r3, [fp, #-28]	; 0xffffffe4
   29be0:	sub	r3, fp, #276	; 0x114
   29be4:	str	r3, [fp, #-32]	; 0xffffffe0
   29be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29bec:	bl	2d56c <flatcc_builder_init@@Base>
   29bf0:	sub	r3, fp, #368	; 0x170
   29bf4:	mov	r1, #0
   29bf8:	mov	r0, r3
   29bfc:	bl	4b8b8 <flatcc_json_printer_init_dynamic_buffer@@Base>
   29c00:	sub	r3, fp, #368	; 0x170
   29c04:	ldr	r1, [fp, #8]
   29c08:	mov	r0, r3
   29c0c:	bl	26414 <_start@@Base+0x11df4>
   29c10:	ldr	r0, [fp, #-380]	; 0xfffffe84
   29c14:	bl	14598 <strlen@plt>
   29c18:	ldr	r3, [fp, #-376]	; 0xfffffe88
   29c1c:	ldr	r3, [r3]
   29c20:	ldr	r2, [fp, #-376]	; 0xfffffe88
   29c24:	ldr	r2, [r2, #4]
   29c28:	sub	r1, fp, #320	; 0x140
   29c2c:	str	r2, [sp, #8]
   29c30:	str	r3, [sp, #4]
   29c34:	ldr	r3, [fp, #4]
   29c38:	str	r3, [sp]
   29c3c:	mov	r3, r0
   29c40:	ldr	r2, [fp, #-380]	; 0xfffffe84
   29c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29c48:	bl	3da60 <flatcc_json_parser_table_as_root@@Base>
   29c4c:	str	r0, [fp, #-36]	; 0xffffffdc
   29c50:	ldr	r2, [fp, #-36]	; 0xffffffdc
   29c54:	ldr	r3, [fp, #-388]	; 0xfffffe7c
   29c58:	cmp	r2, r3
   29c5c:	beq	29dfc <test_json@@Base+0x258>
   29c60:	ldr	r3, [fp, #-388]	; 0xfffffe7c
   29c64:	cmp	r3, #0
   29c68:	beq	29d48 <test_json@@Base+0x1a4>
   29c6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29c70:	cmp	r3, #0
   29c74:	beq	29cf8 <test_json@@Base+0x154>
   29c78:	ldr	r3, [pc, #876]	; 29fec <test_json@@Base+0x448>
   29c7c:	ldr	r3, [r4, r3]
   29c80:	ldr	r5, [r3]
   29c84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29c88:	bl	3a704 <flatcc_json_parser_error_string@@Base>
   29c8c:	mov	r3, r0
   29c90:	ldr	r2, [fp, #12]
   29c94:	ldr	r1, [pc, #852]	; 29ff0 <test_json@@Base+0x44c>
   29c98:	add	r1, pc, r1
   29c9c:	mov	r0, r5
   29ca0:	bl	145a4 <fprintf@plt>
   29ca4:	ldr	r3, [pc, #832]	; 29fec <test_json@@Base+0x448>
   29ca8:	ldr	r3, [r4, r3]
   29cac:	ldr	r5, [r3]
   29cb0:	ldr	r0, [fp, #-388]	; 0xfffffe7c
   29cb4:	bl	3a704 <flatcc_json_parser_error_string@@Base>
   29cb8:	mov	r3, r0
   29cbc:	mov	r2, r3
   29cc0:	ldr	r3, [pc, #812]	; 29ff4 <test_json@@Base+0x450>
   29cc4:	add	r3, pc, r3
   29cc8:	mov	r1, r3
   29ccc:	mov	r0, r5
   29cd0:	bl	145a4 <fprintf@plt>
   29cd4:	ldr	r3, [pc, #784]	; 29fec <test_json@@Base+0x448>
   29cd8:	ldr	r3, [r4, r3]
   29cdc:	ldr	r3, [r3]
   29ce0:	ldr	r2, [fp, #-380]	; 0xfffffe84
   29ce4:	ldr	r1, [pc, #780]	; 29ff8 <test_json@@Base+0x454>
   29ce8:	add	r1, pc, r1
   29cec:	mov	r0, r3
   29cf0:	bl	145a4 <fprintf@plt>
   29cf4:	b	29d94 <test_json@@Base+0x1f0>
   29cf8:	ldr	r3, [pc, #748]	; 29fec <test_json@@Base+0x448>
   29cfc:	ldr	r3, [r4, r3]
   29d00:	ldr	r5, [r3]
   29d04:	ldr	r0, [fp, #-388]	; 0xfffffe7c
   29d08:	bl	3a704 <flatcc_json_parser_error_string@@Base>
   29d0c:	mov	r3, r0
   29d10:	ldr	r2, [fp, #12]
   29d14:	ldr	r1, [pc, #736]	; 29ffc <test_json@@Base+0x458>
   29d18:	add	r1, pc, r1
   29d1c:	mov	r0, r5
   29d20:	bl	145a4 <fprintf@plt>
   29d24:	ldr	r3, [pc, #704]	; 29fec <test_json@@Base+0x448>
   29d28:	ldr	r3, [r4, r3]
   29d2c:	ldr	r3, [r3]
   29d30:	ldr	r2, [fp, #-380]	; 0xfffffe84
   29d34:	ldr	r1, [pc, #708]	; 2a000 <test_json@@Base+0x45c>
   29d38:	add	r1, pc, r1
   29d3c:	mov	r0, r3
   29d40:	bl	145a4 <fprintf@plt>
   29d44:	b	29d94 <test_json@@Base+0x1f0>
   29d48:	ldr	r3, [pc, #668]	; 29fec <test_json@@Base+0x448>
   29d4c:	ldr	r3, [r4, r3]
   29d50:	ldr	r5, [r3]
   29d54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29d58:	bl	3a704 <flatcc_json_parser_error_string@@Base>
   29d5c:	mov	r3, r0
   29d60:	ldr	r2, [fp, #12]
   29d64:	ldr	r1, [pc, #664]	; 2a004 <test_json@@Base+0x460>
   29d68:	add	r1, pc, r1
   29d6c:	mov	r0, r5
   29d70:	bl	145a4 <fprintf@plt>
   29d74:	ldr	r3, [pc, #624]	; 29fec <test_json@@Base+0x448>
   29d78:	ldr	r3, [r4, r3]
   29d7c:	ldr	r3, [r3]
   29d80:	ldr	r2, [fp, #-380]	; 0xfffffe84
   29d84:	ldr	r1, [pc, #636]	; 2a008 <test_json@@Base+0x464>
   29d88:	add	r1, pc, r1
   29d8c:	mov	r0, r3
   29d90:	bl	145a4 <fprintf@plt>
   29d94:	mov	r3, #0
   29d98:	str	r3, [fp, #-24]	; 0xffffffe8
   29d9c:	b	29dc4 <test_json@@Base+0x220>
   29da0:	ldr	r3, [pc, #580]	; 29fec <test_json@@Base+0x448>
   29da4:	ldr	r3, [r4, r3]
   29da8:	ldr	r3, [r3]
   29dac:	mov	r1, r3
   29db0:	mov	r0, #32
   29db4:	bl	145ec <fputc@plt>
   29db8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29dbc:	add	r3, r3, #1
   29dc0:	str	r3, [fp, #-24]	; 0xffffffe8
   29dc4:	ldr	r3, [fp, #-300]	; 0xfffffed4
   29dc8:	sub	r2, r3, #1
   29dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29dd0:	cmp	r2, r3
   29dd4:	bgt	29da0 <test_json@@Base+0x1fc>
   29dd8:	ldr	r3, [pc, #524]	; 29fec <test_json@@Base+0x448>
   29ddc:	ldr	r3, [r4, r3]
   29de0:	ldr	r3, [r3]
   29de4:	mov	r2, #2
   29de8:	mov	r1, #1
   29dec:	ldr	r0, [pc, #536]	; 2a00c <test_json@@Base+0x468>
   29df0:	add	r0, pc, r0
   29df4:	bl	14568 <fwrite@plt>
   29df8:	b	29fa4 <test_json@@Base+0x400>
   29dfc:	ldr	r3, [fp, #-388]	; 0xfffffe7c
   29e00:	cmp	r3, #0
   29e04:	beq	29e14 <test_json@@Base+0x270>
   29e08:	mov	r3, #0
   29e0c:	str	r3, [fp, #-16]
   29e10:	b	29f80 <test_json@@Base+0x3dc>
   29e14:	sub	r3, fp, #40	; 0x28
   29e18:	mov	r1, r3
   29e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e20:	bl	328d8 <flatcc_builder_finalize_aligned_buffer@@Base>
   29e24:	str	r0, [fp, #-20]	; 0xffffffec
   29e28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29e2c:	ldr	r3, [fp, #-376]	; 0xfffffe88
   29e30:	ldr	r2, [r3]
   29e34:	ldr	r3, [fp, #-376]	; 0xfffffe88
   29e38:	ldr	r3, [r3, #12]
   29e3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29e40:	bl	352cc <flatcc_verify_table_as_root@@Base>
   29e44:	str	r0, [fp, #-16]
   29e48:	ldr	r3, [fp, #-16]
   29e4c:	cmp	r3, #0
   29e50:	beq	29e90 <test_json@@Base+0x2ec>
   29e54:	ldr	r3, [pc, #400]	; 29fec <test_json@@Base+0x448>
   29e58:	ldr	r3, [r4, r3]
   29e5c:	ldr	r5, [r3]
   29e60:	ldr	r0, [fp, #-16]
   29e64:	bl	33768 <flatcc_verify_error_string@@Base>
   29e68:	mov	r3, r0
   29e6c:	str	r3, [sp]
   29e70:	ldr	r3, [fp, #12]
   29e74:	ldr	r2, [pc, #404]	; 2a010 <test_json@@Base+0x46c>
   29e78:	add	r2, pc, r2
   29e7c:	ldr	r1, [pc, #400]	; 2a014 <test_json@@Base+0x470>
   29e80:	add	r1, pc, r1
   29e84:	mov	r0, r5
   29e88:	bl	145a4 <fprintf@plt>
   29e8c:	b	29fa4 <test_json@@Base+0x400>
   29e90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29e94:	ldr	r3, [fp, #-376]	; 0xfffffe88
   29e98:	ldr	r1, [r3]
   29e9c:	ldr	r3, [fp, #-376]	; 0xfffffe88
   29ea0:	ldr	r3, [r3, #8]
   29ea4:	sub	r0, fp, #368	; 0x170
   29ea8:	str	r3, [sp]
   29eac:	mov	r3, r1
   29eb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   29eb4:	bl	4afbc <flatcc_json_printer_table_as_root@@Base>
   29eb8:	sub	r2, fp, #44	; 0x2c
   29ebc:	sub	r3, fp, #368	; 0x170
   29ec0:	mov	r1, r2
   29ec4:	mov	r0, r3
   29ec8:	bl	4b9bc <flatcc_json_printer_get_buffer@@Base>
   29ecc:	str	r0, [fp, #-28]	; 0xffffffe4
   29ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29ed4:	cmp	r3, #0
   29ed8:	beq	29ef4 <test_json@@Base+0x350>
   29edc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29ee0:	ldr	r0, [fp, #-384]	; 0xfffffe80
   29ee4:	bl	14520 <strcmp@plt>
   29ee8:	mov	r3, r0
   29eec:	cmp	r3, #0
   29ef0:	beq	29f78 <test_json@@Base+0x3d4>
   29ef4:	ldr	r3, [pc, #240]	; 29fec <test_json@@Base+0x448>
   29ef8:	ldr	r3, [r4, r3]
   29efc:	ldr	r3, [r3]
   29f00:	ldr	r2, [fp, #12]
   29f04:	ldr	r1, [pc, #268]	; 2a018 <test_json@@Base+0x474>
   29f08:	add	r1, pc, r1
   29f0c:	mov	r0, r3
   29f10:	bl	145a4 <fprintf@plt>
   29f14:	ldr	r3, [pc, #208]	; 29fec <test_json@@Base+0x448>
   29f18:	ldr	r3, [r4, r3]
   29f1c:	ldr	r3, [r3]
   29f20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29f24:	ldr	r1, [pc, #240]	; 2a01c <test_json@@Base+0x478>
   29f28:	add	r1, pc, r1
   29f2c:	mov	r0, r3
   29f30:	bl	145a4 <fprintf@plt>
   29f34:	ldr	r3, [pc, #176]	; 29fec <test_json@@Base+0x448>
   29f38:	ldr	r3, [r4, r3]
   29f3c:	ldr	r3, [r3]
   29f40:	mov	r2, #10
   29f44:	mov	r1, #1
   29f48:	ldr	r0, [pc, #208]	; 2a020 <test_json@@Base+0x47c>
   29f4c:	add	r0, pc, r0
   29f50:	bl	14568 <fwrite@plt>
   29f54:	ldr	r3, [pc, #144]	; 29fec <test_json@@Base+0x448>
   29f58:	ldr	r3, [r4, r3]
   29f5c:	ldr	r3, [r3]
   29f60:	ldr	r2, [fp, #-384]	; 0xfffffe80
   29f64:	ldr	r1, [pc, #184]	; 2a024 <test_json@@Base+0x480>
   29f68:	add	r1, pc, r1
   29f6c:	mov	r0, r3
   29f70:	bl	145a4 <fprintf@plt>
   29f74:	b	29fa4 <test_json@@Base+0x400>
   29f78:	mov	r3, #0
   29f7c:	str	r3, [fp, #-16]
   29f80:	ldr	r0, [fp, #-20]	; 0xffffffec
   29f84:	bl	329f4 <flatcc_builder_aligned_free@@Base>
   29f88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29f8c:	bl	2d820 <flatcc_builder_clear@@Base>
   29f90:	sub	r3, fp, #368	; 0x170
   29f94:	mov	r0, r3
   29f98:	bl	4ba6c <flatcc_json_printer_clear@@Base>
   29f9c:	ldr	r3, [fp, #-16]
   29fa0:	b	29fdc <test_json@@Base+0x438>
   29fa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   29fa8:	cmp	r3, #0
   29fac:	beq	29fd0 <test_json@@Base+0x42c>
   29fb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29fb4:	ldr	r3, [pc, #48]	; 29fec <test_json@@Base+0x448>
   29fb8:	ldr	r3, [r4, r3]
   29fbc:	ldr	r3, [r3]
   29fc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   29fc4:	ldr	r0, [pc, #92]	; 2a028 <test_json@@Base+0x484>
   29fc8:	add	r0, pc, r0
   29fcc:	bl	29998 <_start@@Base+0x15378>
   29fd0:	mvn	r3, #0
   29fd4:	str	r3, [fp, #-16]
   29fd8:	b	29f80 <test_json@@Base+0x3dc>
   29fdc:	mov	r0, r3
   29fe0:	sub	sp, fp, #12
   29fe4:	pop	{r4, r5, fp, pc}
   29fe8:	andeq	sl, r3, r4, lsr r4
   29fec:	andeq	r0, r0, r8, rrx
   29ff0:	ldrdeq	r2, [r2], -ip
   29ff4:	ldrdeq	r2, [r2], -r8
   29ff8:	ldrdeq	r2, [r2], -r4
   29ffc:	andeq	r2, r2, r8, lsr #31
   2a000:	andeq	r2, r2, r4, lsl #31
   2a004:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2a008:	andeq	r2, r2, r4, lsr pc
   2a00c:	andeq	r2, r2, r4, lsr pc
   2a010:			; <UNDEFINED> instruction: 0x00022eb0
   2a014:	andeq	r2, r2, ip, lsl #30
   2a018:	andeq	r2, r2, ip, lsr #29
   2a01c:	muleq	r2, r4, sp
   2a020:	andeq	r2, r2, r0, lsr #29
   2a024:	andeq	r2, r2, r4, asr sp
   2a028:	andeq	r2, r2, r0, lsr lr

0002a02c <edge_case_tests@@Base>:
   2a02c:	push	{fp, lr}
   2a030:	add	fp, sp, #4
   2a034:	sub	sp, sp, #24
   2a038:	mov	r3, #0
   2a03c:	str	r3, [fp, #-8]
   2a040:	ldr	r3, [pc, #1176]	; 2a4e0 <edge_case_tests@@Base+0x4b4>
   2a044:	add	r3, pc, r3
   2a048:	str	r3, [fp, #-12]
   2a04c:	mov	r3, #155	; 0x9b
   2a050:	str	r3, [sp, #8]
   2a054:	mov	r3, #0
   2a058:	str	r3, [sp, #4]
   2a05c:	mov	r3, #0
   2a060:	str	r3, [sp]
   2a064:	mov	r3, #0
   2a068:	ldr	r2, [pc, #1140]	; 2a4e4 <edge_case_tests@@Base+0x4b8>
   2a06c:	add	r2, pc, r2
   2a070:	ldr	r1, [pc, #1136]	; 2a4e8 <edge_case_tests@@Base+0x4bc>
   2a074:	add	r1, pc, r1
   2a078:	ldr	r0, [fp, #-12]
   2a07c:	bl	29ba4 <test_json@@Base>
   2a080:	mov	r2, r0
   2a084:	ldr	r3, [fp, #-8]
   2a088:	orr	r3, r3, r2
   2a08c:	str	r3, [fp, #-8]
   2a090:	mov	r3, #168	; 0xa8
   2a094:	str	r3, [sp, #8]
   2a098:	mov	r3, #0
   2a09c:	str	r3, [sp, #4]
   2a0a0:	mov	r3, #2
   2a0a4:	str	r3, [sp]
   2a0a8:	mov	r3, #0
   2a0ac:	ldr	r2, [pc, #1080]	; 2a4ec <edge_case_tests@@Base+0x4c0>
   2a0b0:	add	r2, pc, r2
   2a0b4:	ldr	r1, [pc, #1076]	; 2a4f0 <edge_case_tests@@Base+0x4c4>
   2a0b8:	add	r1, pc, r1
   2a0bc:	ldr	r0, [fp, #-12]
   2a0c0:	bl	29ba4 <test_json@@Base>
   2a0c4:	mov	r2, r0
   2a0c8:	ldr	r3, [fp, #-8]
   2a0cc:	orr	r3, r3, r2
   2a0d0:	str	r3, [fp, #-8]
   2a0d4:	mov	r3, #172	; 0xac
   2a0d8:	str	r3, [sp, #8]
   2a0dc:	mov	r3, #2
   2a0e0:	str	r3, [sp, #4]
   2a0e4:	mov	r3, #0
   2a0e8:	str	r3, [sp]
   2a0ec:	mov	r3, #0
   2a0f0:	ldr	r2, [pc, #1020]	; 2a4f4 <edge_case_tests@@Base+0x4c8>
   2a0f4:	add	r2, pc, r2
   2a0f8:	ldr	r1, [pc, #1016]	; 2a4f8 <edge_case_tests@@Base+0x4cc>
   2a0fc:	add	r1, pc, r1
   2a100:	ldr	r0, [fp, #-12]
   2a104:	bl	29ba4 <test_json@@Base>
   2a108:	mov	r2, r0
   2a10c:	ldr	r3, [fp, #-8]
   2a110:	orr	r3, r3, r2
   2a114:	str	r3, [fp, #-8]
   2a118:	mov	r3, #176	; 0xb0
   2a11c:	str	r3, [sp, #8]
   2a120:	mov	r3, #4
   2a124:	str	r3, [sp, #4]
   2a128:	mov	r3, #2
   2a12c:	str	r3, [sp]
   2a130:	mov	r3, #0
   2a134:	ldr	r2, [pc, #960]	; 2a4fc <edge_case_tests@@Base+0x4d0>
   2a138:	add	r2, pc, r2
   2a13c:	ldr	r1, [pc, #956]	; 2a500 <edge_case_tests@@Base+0x4d4>
   2a140:	add	r1, pc, r1
   2a144:	ldr	r0, [fp, #-12]
   2a148:	bl	29ba4 <test_json@@Base>
   2a14c:	mov	r2, r0
   2a150:	ldr	r3, [fp, #-8]
   2a154:	orr	r3, r3, r2
   2a158:	str	r3, [fp, #-8]
   2a15c:	mov	r3, #180	; 0xb4
   2a160:	str	r3, [sp, #8]
   2a164:	mov	r3, #8
   2a168:	str	r3, [sp, #4]
   2a16c:	mov	r3, #0
   2a170:	str	r3, [sp]
   2a174:	mov	r3, #0
   2a178:	ldr	r2, [pc, #900]	; 2a504 <edge_case_tests@@Base+0x4d8>
   2a17c:	add	r2, pc, r2
   2a180:	ldr	r1, [pc, #896]	; 2a508 <edge_case_tests@@Base+0x4dc>
   2a184:	add	r1, pc, r1
   2a188:	ldr	r0, [fp, #-12]
   2a18c:	bl	29ba4 <test_json@@Base>
   2a190:	mov	r2, r0
   2a194:	ldr	r3, [fp, #-8]
   2a198:	orr	r3, r3, r2
   2a19c:	str	r3, [fp, #-8]
   2a1a0:	mov	r3, #195	; 0xc3
   2a1a4:	str	r3, [sp, #8]
   2a1a8:	mov	r3, #0
   2a1ac:	str	r3, [sp, #4]
   2a1b0:	mov	r3, #2
   2a1b4:	str	r3, [sp]
   2a1b8:	mov	r3, #0
   2a1bc:	ldr	r2, [pc, #840]	; 2a50c <edge_case_tests@@Base+0x4e0>
   2a1c0:	add	r2, pc, r2
   2a1c4:	ldr	r1, [pc, #836]	; 2a510 <edge_case_tests@@Base+0x4e4>
   2a1c8:	add	r1, pc, r1
   2a1cc:	ldr	r0, [fp, #-12]
   2a1d0:	bl	29ba4 <test_json@@Base>
   2a1d4:	mov	r2, r0
   2a1d8:	ldr	r3, [fp, #-8]
   2a1dc:	orr	r3, r3, r2
   2a1e0:	str	r3, [fp, #-8]
   2a1e4:	mov	r3, #199	; 0xc7
   2a1e8:	str	r3, [sp, #8]
   2a1ec:	mov	r3, #0
   2a1f0:	str	r3, [sp, #4]
   2a1f4:	mov	r3, #1
   2a1f8:	str	r3, [sp]
   2a1fc:	mov	r3, #0
   2a200:	ldr	r2, [pc, #780]	; 2a514 <edge_case_tests@@Base+0x4e8>
   2a204:	add	r2, pc, r2
   2a208:	ldr	r1, [pc, #776]	; 2a518 <edge_case_tests@@Base+0x4ec>
   2a20c:	add	r1, pc, r1
   2a210:	ldr	r0, [fp, #-12]
   2a214:	bl	29ba4 <test_json@@Base>
   2a218:	mov	r2, r0
   2a21c:	ldr	r3, [fp, #-8]
   2a220:	orr	r3, r3, r2
   2a224:	str	r3, [fp, #-8]
   2a228:	mov	r3, #203	; 0xcb
   2a22c:	str	r3, [sp, #8]
   2a230:	mov	r3, #1
   2a234:	str	r3, [sp, #4]
   2a238:	mov	r3, #1
   2a23c:	str	r3, [sp]
   2a240:	mov	r3, #0
   2a244:	ldr	r2, [pc, #720]	; 2a51c <edge_case_tests@@Base+0x4f0>
   2a248:	add	r2, pc, r2
   2a24c:	ldr	r1, [pc, #716]	; 2a520 <edge_case_tests@@Base+0x4f4>
   2a250:	add	r1, pc, r1
   2a254:	ldr	r0, [fp, #-12]
   2a258:	bl	29ba4 <test_json@@Base>
   2a25c:	mov	r2, r0
   2a260:	ldr	r3, [fp, #-8]
   2a264:	orr	r3, r3, r2
   2a268:	str	r3, [fp, #-8]
   2a26c:	mov	r3, #209	; 0xd1
   2a270:	str	r3, [sp, #8]
   2a274:	mov	r3, #0
   2a278:	str	r3, [sp, #4]
   2a27c:	mov	r3, #1
   2a280:	str	r3, [sp]
   2a284:	mov	r3, #0
   2a288:	ldr	r2, [pc, #660]	; 2a524 <edge_case_tests@@Base+0x4f8>
   2a28c:	add	r2, pc, r2
   2a290:	ldr	r1, [pc, #656]	; 2a528 <edge_case_tests@@Base+0x4fc>
   2a294:	add	r1, pc, r1
   2a298:	ldr	r0, [fp, #-12]
   2a29c:	bl	29ba4 <test_json@@Base>
   2a2a0:	mov	r2, r0
   2a2a4:	ldr	r3, [fp, #-8]
   2a2a8:	orr	r3, r3, r2
   2a2ac:	str	r3, [fp, #-8]
   2a2b0:	mov	r3, #217	; 0xd9
   2a2b4:	str	r3, [sp, #8]
   2a2b8:	mov	r3, #0
   2a2bc:	str	r3, [sp, #4]
   2a2c0:	mov	r3, #2
   2a2c4:	str	r3, [sp]
   2a2c8:	mov	r3, #0
   2a2cc:	ldr	r2, [pc, #600]	; 2a52c <edge_case_tests@@Base+0x500>
   2a2d0:	add	r2, pc, r2
   2a2d4:	ldr	r1, [pc, #596]	; 2a530 <edge_case_tests@@Base+0x504>
   2a2d8:	add	r1, pc, r1
   2a2dc:	ldr	r0, [fp, #-12]
   2a2e0:	bl	29ba4 <test_json@@Base>
   2a2e4:	mov	r2, r0
   2a2e8:	ldr	r3, [fp, #-8]
   2a2ec:	orr	r3, r3, r2
   2a2f0:	str	r3, [fp, #-8]
   2a2f4:	mov	r3, #221	; 0xdd
   2a2f8:	str	r3, [sp, #8]
   2a2fc:	mov	r3, #2
   2a300:	str	r3, [sp, #4]
   2a304:	mov	r3, #0
   2a308:	str	r3, [sp]
   2a30c:	mov	r3, #0
   2a310:	ldr	r2, [pc, #540]	; 2a534 <edge_case_tests@@Base+0x508>
   2a314:	add	r2, pc, r2
   2a318:	ldr	r1, [pc, #536]	; 2a538 <edge_case_tests@@Base+0x50c>
   2a31c:	add	r1, pc, r1
   2a320:	ldr	r0, [fp, #-12]
   2a324:	bl	29ba4 <test_json@@Base>
   2a328:	mov	r2, r0
   2a32c:	ldr	r3, [fp, #-8]
   2a330:	orr	r3, r3, r2
   2a334:	str	r3, [fp, #-8]
   2a338:	mov	r3, #225	; 0xe1
   2a33c:	str	r3, [sp, #8]
   2a340:	mov	r3, #4
   2a344:	str	r3, [sp, #4]
   2a348:	mov	r3, #2
   2a34c:	str	r3, [sp]
   2a350:	mov	r3, #0
   2a354:	ldr	r2, [pc, #480]	; 2a53c <edge_case_tests@@Base+0x510>
   2a358:	add	r2, pc, r2
   2a35c:	ldr	r1, [pc, #476]	; 2a540 <edge_case_tests@@Base+0x514>
   2a360:	add	r1, pc, r1
   2a364:	ldr	r0, [fp, #-12]
   2a368:	bl	29ba4 <test_json@@Base>
   2a36c:	mov	r2, r0
   2a370:	ldr	r3, [fp, #-8]
   2a374:	orr	r3, r3, r2
   2a378:	str	r3, [fp, #-8]
   2a37c:	mov	r3, #229	; 0xe5
   2a380:	str	r3, [sp, #8]
   2a384:	mov	r3, #8
   2a388:	str	r3, [sp, #4]
   2a38c:	mov	r3, #0
   2a390:	str	r3, [sp]
   2a394:	mov	r3, #0
   2a398:	ldr	r2, [pc, #420]	; 2a544 <edge_case_tests@@Base+0x518>
   2a39c:	add	r2, pc, r2
   2a3a0:	ldr	r1, [pc, #416]	; 2a548 <edge_case_tests@@Base+0x51c>
   2a3a4:	add	r1, pc, r1
   2a3a8:	ldr	r0, [fp, #-12]
   2a3ac:	bl	29ba4 <test_json@@Base>
   2a3b0:	mov	r2, r0
   2a3b4:	ldr	r3, [fp, #-8]
   2a3b8:	orr	r3, r3, r2
   2a3bc:	str	r3, [fp, #-8]
   2a3c0:	mov	r3, #233	; 0xe9
   2a3c4:	str	r3, [sp, #8]
   2a3c8:	mov	r3, #0
   2a3cc:	str	r3, [sp, #4]
   2a3d0:	mov	r3, #2
   2a3d4:	str	r3, [sp]
   2a3d8:	mov	r3, #0
   2a3dc:	ldr	r2, [pc, #360]	; 2a54c <edge_case_tests@@Base+0x520>
   2a3e0:	add	r2, pc, r2
   2a3e4:	ldr	r1, [pc, #356]	; 2a550 <edge_case_tests@@Base+0x524>
   2a3e8:	add	r1, pc, r1
   2a3ec:	ldr	r0, [fp, #-12]
   2a3f0:	bl	29ba4 <test_json@@Base>
   2a3f4:	mov	r2, r0
   2a3f8:	ldr	r3, [fp, #-8]
   2a3fc:	orr	r3, r3, r2
   2a400:	str	r3, [fp, #-8]
   2a404:	mov	r3, #237	; 0xed
   2a408:	str	r3, [sp, #8]
   2a40c:	mov	r3, #0
   2a410:	str	r3, [sp, #4]
   2a414:	mov	r3, #1
   2a418:	str	r3, [sp]
   2a41c:	mov	r3, #0
   2a420:	ldr	r2, [pc, #300]	; 2a554 <edge_case_tests@@Base+0x528>
   2a424:	add	r2, pc, r2
   2a428:	ldr	r1, [pc, #296]	; 2a558 <edge_case_tests@@Base+0x52c>
   2a42c:	add	r1, pc, r1
   2a430:	ldr	r0, [fp, #-12]
   2a434:	bl	29ba4 <test_json@@Base>
   2a438:	mov	r2, r0
   2a43c:	ldr	r3, [fp, #-8]
   2a440:	orr	r3, r3, r2
   2a444:	str	r3, [fp, #-8]
   2a448:	mov	r3, #241	; 0xf1
   2a44c:	str	r3, [sp, #8]
   2a450:	mov	r3, #1
   2a454:	str	r3, [sp, #4]
   2a458:	mov	r3, #1
   2a45c:	str	r3, [sp]
   2a460:	mov	r3, #0
   2a464:	ldr	r2, [pc, #240]	; 2a55c <edge_case_tests@@Base+0x530>
   2a468:	add	r2, pc, r2
   2a46c:	ldr	r1, [pc, #236]	; 2a560 <edge_case_tests@@Base+0x534>
   2a470:	add	r1, pc, r1
   2a474:	ldr	r0, [fp, #-12]
   2a478:	bl	29ba4 <test_json@@Base>
   2a47c:	mov	r2, r0
   2a480:	ldr	r3, [fp, #-8]
   2a484:	orr	r3, r3, r2
   2a488:	str	r3, [fp, #-8]
   2a48c:	mov	r3, #247	; 0xf7
   2a490:	str	r3, [sp, #8]
   2a494:	mov	r3, #0
   2a498:	str	r3, [sp, #4]
   2a49c:	mov	r3, #1
   2a4a0:	str	r3, [sp]
   2a4a4:	mov	r3, #0
   2a4a8:	ldr	r2, [pc, #180]	; 2a564 <edge_case_tests@@Base+0x538>
   2a4ac:	add	r2, pc, r2
   2a4b0:	ldr	r1, [pc, #176]	; 2a568 <edge_case_tests@@Base+0x53c>
   2a4b4:	add	r1, pc, r1
   2a4b8:	ldr	r0, [fp, #-12]
   2a4bc:	bl	29ba4 <test_json@@Base>
   2a4c0:	mov	r2, r0
   2a4c4:	ldr	r3, [fp, #-8]
   2a4c8:	orr	r3, r3, r2
   2a4cc:	str	r3, [fp, #-8]
   2a4d0:	ldr	r3, [fp, #-8]
   2a4d4:	mov	r0, r3
   2a4d8:	sub	sp, fp, #4
   2a4dc:	pop	{fp, pc}
   2a4e0:	muleq	r3, ip, lr
   2a4e4:	muleq	r2, ip, sp
   2a4e8:			; <UNDEFINED> instruction: 0x00022db4
   2a4ec:	andeq	r2, r2, ip, lsr #27
   2a4f0:	andeq	r2, r2, r8, asr #27
   2a4f4:			; <UNDEFINED> instruction: 0x00022db0
   2a4f8:	andeq	r2, r2, r8, asr #27
   2a4fc:			; <UNDEFINED> instruction: 0x00022db4
   2a500:	andeq	r2, r2, r0, asr #26
   2a504:	andeq	r2, r2, r4, lsl #27
   2a508:	muleq	r2, r0, lr
   2a50c:	muleq	r2, ip, ip
   2a510:	andeq	r2, r2, r0, ror lr
   2a514:	andeq	r2, r2, ip, asr lr
   2a518:	andeq	r2, r2, r0, ror lr
   2a51c:	andeq	r2, r2, r8, ror #28
   2a520:	andeq	r2, r2, ip, lsr #28
   2a524:	ldrdeq	r2, [r2], -r4
   2a528:	andeq	r2, r2, r4, lsr lr
   2a52c:	andeq	r2, r2, ip, lsl #23
   2a530:	andeq	r2, r2, r4, ror #28
   2a534:	muleq	r2, r0, fp
   2a538:	andeq	r2, r2, r0, asr #28
   2a53c:	muleq	r2, r4, fp
   2a540:	ldrdeq	r2, [r2], -ip
   2a544:	andeq	r2, r2, r4, ror #27
   2a548:	strdeq	r2, [r2], -r4
   2a54c:	andeq	r2, r2, ip, ror sl
   2a550:	andeq	r2, r2, r4, asr #29
   2a554:	andeq	r2, r2, ip, lsr ip
   2a558:	andeq	r2, r2, r0, lsr #29
   2a55c:	andeq	r2, r2, r8, asr #24
   2a560:	andeq	r2, r2, ip, asr lr
   2a564:			; <UNDEFINED> instruction: 0x00022bb4
   2a568:	andeq	r2, r2, r4, asr #28

0002a56c <error_case_tests@@Base>:
   2a56c:	push	{fp, lr}
   2a570:	add	fp, sp, #4
   2a574:	sub	sp, sp, #24
   2a578:	mov	r3, #0
   2a57c:	str	r3, [fp, #-8]
   2a580:	ldr	r3, [pc, #1172]	; 2aa1c <error_case_tests@@Base+0x4b0>
   2a584:	add	r3, pc, r3
   2a588:	str	r3, [fp, #-12]
   2a58c:	ldr	r3, [pc, #1164]	; 2aa20 <error_case_tests@@Base+0x4b4>
   2a590:	str	r3, [sp, #8]
   2a594:	mov	r3, #0
   2a598:	str	r3, [sp, #4]
   2a59c:	mov	r3, #0
   2a5a0:	str	r3, [sp]
   2a5a4:	mov	r3, #13
   2a5a8:	mov	r2, #0
   2a5ac:	ldr	r1, [pc, #1136]	; 2aa24 <error_case_tests@@Base+0x4b8>
   2a5b0:	add	r1, pc, r1
   2a5b4:	ldr	r0, [fp, #-12]
   2a5b8:	bl	29ba4 <test_json@@Base>
   2a5bc:	mov	r2, r0
   2a5c0:	ldr	r3, [fp, #-8]
   2a5c4:	orr	r3, r3, r2
   2a5c8:	str	r3, [fp, #-8]
   2a5cc:	ldr	r3, [pc, #1108]	; 2aa28 <error_case_tests@@Base+0x4bc>
   2a5d0:	str	r3, [sp, #8]
   2a5d4:	mov	r3, #0
   2a5d8:	str	r3, [sp, #4]
   2a5dc:	mov	r3, #0
   2a5e0:	str	r3, [sp]
   2a5e4:	mov	r3, #13
   2a5e8:	mov	r2, #0
   2a5ec:	ldr	r1, [pc, #1080]	; 2aa2c <error_case_tests@@Base+0x4c0>
   2a5f0:	add	r1, pc, r1
   2a5f4:	ldr	r0, [fp, #-12]
   2a5f8:	bl	29ba4 <test_json@@Base>
   2a5fc:	mov	r2, r0
   2a600:	ldr	r3, [fp, #-8]
   2a604:	orr	r3, r3, r2
   2a608:	str	r3, [fp, #-8]
   2a60c:	ldr	r3, [pc, #1052]	; 2aa30 <error_case_tests@@Base+0x4c4>
   2a610:	str	r3, [sp, #8]
   2a614:	mov	r3, #0
   2a618:	str	r3, [sp, #4]
   2a61c:	mov	r3, #0
   2a620:	str	r3, [sp]
   2a624:	mov	r3, #13
   2a628:	mov	r2, #0
   2a62c:	ldr	r1, [pc, #1024]	; 2aa34 <error_case_tests@@Base+0x4c8>
   2a630:	add	r1, pc, r1
   2a634:	ldr	r0, [fp, #-12]
   2a638:	bl	29ba4 <test_json@@Base>
   2a63c:	mov	r2, r0
   2a640:	ldr	r3, [fp, #-8]
   2a644:	orr	r3, r3, r2
   2a648:	str	r3, [fp, #-8]
   2a64c:	ldr	r3, [pc, #996]	; 2aa38 <error_case_tests@@Base+0x4cc>
   2a650:	str	r3, [sp, #8]
   2a654:	mov	r3, #0
   2a658:	str	r3, [sp, #4]
   2a65c:	mov	r3, #0
   2a660:	str	r3, [sp]
   2a664:	mov	r3, #13
   2a668:	mov	r2, #0
   2a66c:	ldr	r1, [pc, #968]	; 2aa3c <error_case_tests@@Base+0x4d0>
   2a670:	add	r1, pc, r1
   2a674:	ldr	r0, [fp, #-12]
   2a678:	bl	29ba4 <test_json@@Base>
   2a67c:	mov	r2, r0
   2a680:	ldr	r3, [fp, #-8]
   2a684:	orr	r3, r3, r2
   2a688:	str	r3, [fp, #-8]
   2a68c:	ldr	r3, [pc, #940]	; 2aa40 <error_case_tests@@Base+0x4d4>
   2a690:	str	r3, [sp, #8]
   2a694:	mov	r3, #0
   2a698:	str	r3, [sp, #4]
   2a69c:	mov	r3, #0
   2a6a0:	str	r3, [sp]
   2a6a4:	mov	r3, #13
   2a6a8:	mov	r2, #0
   2a6ac:	ldr	r1, [pc, #912]	; 2aa44 <error_case_tests@@Base+0x4d8>
   2a6b0:	add	r1, pc, r1
   2a6b4:	ldr	r0, [fp, #-12]
   2a6b8:	bl	29ba4 <test_json@@Base>
   2a6bc:	mov	r2, r0
   2a6c0:	ldr	r3, [fp, #-8]
   2a6c4:	orr	r3, r3, r2
   2a6c8:	str	r3, [fp, #-8]
   2a6cc:	mov	r3, #296	; 0x128
   2a6d0:	str	r3, [sp, #8]
   2a6d4:	mov	r3, #0
   2a6d8:	str	r3, [sp, #4]
   2a6dc:	mov	r3, #0
   2a6e0:	str	r3, [sp]
   2a6e4:	mov	r3, #13
   2a6e8:	mov	r2, #0
   2a6ec:	ldr	r1, [pc, #852]	; 2aa48 <error_case_tests@@Base+0x4dc>
   2a6f0:	add	r1, pc, r1
   2a6f4:	ldr	r0, [fp, #-12]
   2a6f8:	bl	29ba4 <test_json@@Base>
   2a6fc:	mov	r2, r0
   2a700:	ldr	r3, [fp, #-8]
   2a704:	orr	r3, r3, r2
   2a708:	str	r3, [fp, #-8]
   2a70c:	ldr	r3, [pc, #824]	; 2aa4c <error_case_tests@@Base+0x4e0>
   2a710:	str	r3, [sp, #8]
   2a714:	mov	r3, #0
   2a718:	str	r3, [sp, #4]
   2a71c:	mov	r3, #0
   2a720:	str	r3, [sp]
   2a724:	mov	r3, #13
   2a728:	mov	r2, #0
   2a72c:	ldr	r1, [pc, #796]	; 2aa50 <error_case_tests@@Base+0x4e4>
   2a730:	add	r1, pc, r1
   2a734:	ldr	r0, [fp, #-12]
   2a738:	bl	29ba4 <test_json@@Base>
   2a73c:	mov	r2, r0
   2a740:	ldr	r3, [fp, #-8]
   2a744:	orr	r3, r3, r2
   2a748:	str	r3, [fp, #-8]
   2a74c:	ldr	r3, [pc, #768]	; 2aa54 <error_case_tests@@Base+0x4e8>
   2a750:	str	r3, [sp, #8]
   2a754:	mov	r3, #0
   2a758:	str	r3, [sp, #4]
   2a75c:	mov	r3, #0
   2a760:	str	r3, [sp]
   2a764:	mov	r3, #13
   2a768:	mov	r2, #0
   2a76c:	ldr	r1, [pc, #740]	; 2aa58 <error_case_tests@@Base+0x4ec>
   2a770:	add	r1, pc, r1
   2a774:	ldr	r0, [fp, #-12]
   2a778:	bl	29ba4 <test_json@@Base>
   2a77c:	mov	r2, r0
   2a780:	ldr	r3, [fp, #-8]
   2a784:	orr	r3, r3, r2
   2a788:	str	r3, [fp, #-8]
   2a78c:	ldr	r3, [pc, #712]	; 2aa5c <error_case_tests@@Base+0x4f0>
   2a790:	str	r3, [sp, #8]
   2a794:	mov	r3, #0
   2a798:	str	r3, [sp, #4]
   2a79c:	mov	r3, #0
   2a7a0:	str	r3, [sp]
   2a7a4:	mov	r3, #13
   2a7a8:	mov	r2, #0
   2a7ac:	ldr	r1, [pc, #684]	; 2aa60 <error_case_tests@@Base+0x4f4>
   2a7b0:	add	r1, pc, r1
   2a7b4:	ldr	r0, [fp, #-12]
   2a7b8:	bl	29ba4 <test_json@@Base>
   2a7bc:	mov	r2, r0
   2a7c0:	ldr	r3, [fp, #-8]
   2a7c4:	orr	r3, r3, r2
   2a7c8:	str	r3, [fp, #-8]
   2a7cc:	ldr	r3, [pc, #656]	; 2aa64 <error_case_tests@@Base+0x4f8>
   2a7d0:	str	r3, [sp, #8]
   2a7d4:	mov	r3, #0
   2a7d8:	str	r3, [sp, #4]
   2a7dc:	mov	r3, #0
   2a7e0:	str	r3, [sp]
   2a7e4:	mov	r3, #13
   2a7e8:	mov	r2, #0
   2a7ec:	ldr	r1, [pc, #628]	; 2aa68 <error_case_tests@@Base+0x4fc>
   2a7f0:	add	r1, pc, r1
   2a7f4:	ldr	r0, [fp, #-12]
   2a7f8:	bl	29ba4 <test_json@@Base>
   2a7fc:	mov	r2, r0
   2a800:	ldr	r3, [fp, #-8]
   2a804:	orr	r3, r3, r2
   2a808:	str	r3, [fp, #-8]
   2a80c:	mov	r3, #324	; 0x144
   2a810:	str	r3, [sp, #8]
   2a814:	mov	r3, #0
   2a818:	str	r3, [sp, #4]
   2a81c:	mov	r3, #0
   2a820:	str	r3, [sp]
   2a824:	mov	r3, #13
   2a828:	mov	r2, #0
   2a82c:	ldr	r1, [pc, #568]	; 2aa6c <error_case_tests@@Base+0x500>
   2a830:	add	r1, pc, r1
   2a834:	ldr	r0, [fp, #-12]
   2a838:	bl	29ba4 <test_json@@Base>
   2a83c:	mov	r2, r0
   2a840:	ldr	r3, [fp, #-8]
   2a844:	orr	r3, r3, r2
   2a848:	str	r3, [fp, #-8]
   2a84c:	ldr	r3, [pc, #540]	; 2aa70 <error_case_tests@@Base+0x504>
   2a850:	str	r3, [sp, #8]
   2a854:	mov	r3, #0
   2a858:	str	r3, [sp, #4]
   2a85c:	mov	r3, #0
   2a860:	str	r3, [sp]
   2a864:	mov	r3, #13
   2a868:	mov	r2, #0
   2a86c:	ldr	r1, [pc, #512]	; 2aa74 <error_case_tests@@Base+0x508>
   2a870:	add	r1, pc, r1
   2a874:	ldr	r0, [fp, #-12]
   2a878:	bl	29ba4 <test_json@@Base>
   2a87c:	mov	r2, r0
   2a880:	ldr	r3, [fp, #-8]
   2a884:	orr	r3, r3, r2
   2a888:	str	r3, [fp, #-8]
   2a88c:	mov	r3, #328	; 0x148
   2a890:	str	r3, [sp, #8]
   2a894:	mov	r3, #0
   2a898:	str	r3, [sp, #4]
   2a89c:	mov	r3, #0
   2a8a0:	str	r3, [sp]
   2a8a4:	mov	r3, #13
   2a8a8:	mov	r2, #0
   2a8ac:	ldr	r1, [pc, #452]	; 2aa78 <error_case_tests@@Base+0x50c>
   2a8b0:	add	r1, pc, r1
   2a8b4:	ldr	r0, [fp, #-12]
   2a8b8:	bl	29ba4 <test_json@@Base>
   2a8bc:	mov	r2, r0
   2a8c0:	ldr	r3, [fp, #-8]
   2a8c4:	orr	r3, r3, r2
   2a8c8:	str	r3, [fp, #-8]
   2a8cc:	ldr	r3, [pc, #424]	; 2aa7c <error_case_tests@@Base+0x510>
   2a8d0:	str	r3, [sp, #8]
   2a8d4:	mov	r3, #0
   2a8d8:	str	r3, [sp, #4]
   2a8dc:	mov	r3, #0
   2a8e0:	str	r3, [sp]
   2a8e4:	mov	r3, #13
   2a8e8:	mov	r2, #0
   2a8ec:	ldr	r1, [pc, #396]	; 2aa80 <error_case_tests@@Base+0x514>
   2a8f0:	add	r1, pc, r1
   2a8f4:	ldr	r0, [fp, #-12]
   2a8f8:	bl	29ba4 <test_json@@Base>
   2a8fc:	mov	r2, r0
   2a900:	ldr	r3, [fp, #-8]
   2a904:	orr	r3, r3, r2
   2a908:	str	r3, [fp, #-8]
   2a90c:	ldr	r3, [pc, #368]	; 2aa84 <error_case_tests@@Base+0x518>
   2a910:	str	r3, [sp, #8]
   2a914:	mov	r3, #0
   2a918:	str	r3, [sp, #4]
   2a91c:	mov	r3, #0
   2a920:	str	r3, [sp]
   2a924:	mov	r3, #13
   2a928:	mov	r2, #0
   2a92c:	ldr	r1, [pc, #340]	; 2aa88 <error_case_tests@@Base+0x51c>
   2a930:	add	r1, pc, r1
   2a934:	ldr	r0, [fp, #-12]
   2a938:	bl	29ba4 <test_json@@Base>
   2a93c:	mov	r2, r0
   2a940:	ldr	r3, [fp, #-8]
   2a944:	orr	r3, r3, r2
   2a948:	str	r3, [fp, #-8]
   2a94c:	mov	r3, #336	; 0x150
   2a950:	str	r3, [sp, #8]
   2a954:	mov	r3, #0
   2a958:	str	r3, [sp, #4]
   2a95c:	mov	r3, #0
   2a960:	str	r3, [sp]
   2a964:	mov	r3, #13
   2a968:	mov	r2, #0
   2a96c:	ldr	r1, [pc, #280]	; 2aa8c <error_case_tests@@Base+0x520>
   2a970:	add	r1, pc, r1
   2a974:	ldr	r0, [fp, #-12]
   2a978:	bl	29ba4 <test_json@@Base>
   2a97c:	mov	r2, r0
   2a980:	ldr	r3, [fp, #-8]
   2a984:	orr	r3, r3, r2
   2a988:	str	r3, [fp, #-8]
   2a98c:	mov	r3, #340	; 0x154
   2a990:	str	r3, [sp, #8]
   2a994:	mov	r3, #0
   2a998:	str	r3, [sp, #4]
   2a99c:	mov	r3, #0
   2a9a0:	str	r3, [sp]
   2a9a4:	mov	r3, #13
   2a9a8:	mov	r2, #0
   2a9ac:	ldr	r1, [pc, #220]	; 2aa90 <error_case_tests@@Base+0x524>
   2a9b0:	add	r1, pc, r1
   2a9b4:	ldr	r0, [fp, #-12]
   2a9b8:	bl	29ba4 <test_json@@Base>
   2a9bc:	mov	r2, r0
   2a9c0:	ldr	r3, [fp, #-8]
   2a9c4:	orr	r3, r3, r2
   2a9c8:	str	r3, [fp, #-8]
   2a9cc:	mov	r3, #344	; 0x158
   2a9d0:	str	r3, [sp, #8]
   2a9d4:	mov	r3, #0
   2a9d8:	str	r3, [sp, #4]
   2a9dc:	mov	r3, #0
   2a9e0:	str	r3, [sp]
   2a9e4:	mov	r3, #13
   2a9e8:	mov	r2, #0
   2a9ec:	ldr	r1, [pc, #160]	; 2aa94 <error_case_tests@@Base+0x528>
   2a9f0:	add	r1, pc, r1
   2a9f4:	ldr	r0, [fp, #-12]
   2a9f8:	bl	29ba4 <test_json@@Base>
   2a9fc:	mov	r2, r0
   2aa00:	ldr	r3, [fp, #-8]
   2aa04:	orr	r3, r3, r2
   2aa08:	str	r3, [fp, #-8]
   2aa0c:	ldr	r3, [fp, #-8]
   2aa10:	mov	r0, r3
   2aa14:	sub	sp, fp, #4
   2aa18:	pop	{fp, pc}
   2aa1c:	andeq	r9, r3, ip, asr r9
   2aa20:	andeq	r0, r0, sp, lsl r1
   2aa24:	andeq	r2, r2, r8, lsr #27
   2aa28:	andeq	r0, r0, pc, lsl r1
   2aa2c:	andeq	r2, r2, r4, lsl #27
   2aa30:	andeq	r0, r0, r1, lsr #2
   2aa34:	andeq	r2, r2, r8, lsr #27
   2aa38:	andeq	r0, r0, r3, lsr #2
   2aa3c:	andeq	r2, r2, r8, asr #27
   2aa40:	andeq	r0, r0, r5, lsr #2
   2aa44:	andeq	r2, r2, r0, ror #27
   2aa48:	strdeq	r2, [r2], -r8
   2aa4c:	andeq	r0, r0, fp, lsr #2
   2aa50:	andeq	r2, r2, r8, asr lr
   2aa54:	andeq	r0, r0, pc, lsr #2
   2aa58:			; <UNDEFINED> instruction: 0x00022eb4
   2aa5c:	andeq	r0, r0, r3, lsr r1
   2aa60:	andeq	r2, r2, ip, lsr pc
   2aa64:	andeq	r0, r0, r2, asr #2
   2aa68:	andeq	r2, r2, r4, asr #31
   2aa6c:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   2aa70:	andeq	r0, r0, r6, asr #2
   2aa74:			; <UNDEFINED> instruction: 0x00022fb4
   2aa78:	andeq	r2, r2, r8, asr #31
   2aa7c:	andeq	r0, r0, sl, asr #2
   2aa80:	ldrdeq	r2, [r2], -r8
   2aa84:	andeq	r0, r0, sp, asr #2
   2aa88:	andeq	r2, r2, r8, ror #31
   2aa8c:	andeq	r3, r2, r4, lsr r0
   2aa90:	andeq	r3, r2, r0, lsl #1
   2aa94:	strdeq	r3, [r2], -r0

0002aa98 <base64_tests@@Base>:
   2aa98:	push	{fp, lr}
   2aa9c:	add	fp, sp, #4
   2aaa0:	sub	sp, sp, #24
   2aaa4:	mov	r3, #0
   2aaa8:	str	r3, [fp, #-8]
   2aaac:	ldr	r3, [pc, #692]	; 2ad68 <base64_tests@@Base+0x2d0>
   2aab0:	add	r3, pc, r3
   2aab4:	str	r3, [fp, #-12]
   2aab8:	ldr	r3, [pc, #684]	; 2ad6c <base64_tests@@Base+0x2d4>
   2aabc:	str	r3, [sp, #8]
   2aac0:	mov	r3, #0
   2aac4:	str	r3, [sp, #4]
   2aac8:	mov	r3, #0
   2aacc:	str	r3, [sp]
   2aad0:	mov	r3, #0
   2aad4:	ldr	r2, [pc, #660]	; 2ad70 <base64_tests@@Base+0x2d8>
   2aad8:	add	r2, pc, r2
   2aadc:	ldr	r1, [pc, #656]	; 2ad74 <base64_tests@@Base+0x2dc>
   2aae0:	add	r1, pc, r1
   2aae4:	ldr	r0, [fp, #-12]
   2aae8:	bl	29ba4 <test_json@@Base>
   2aaec:	mov	r2, r0
   2aaf0:	ldr	r3, [fp, #-8]
   2aaf4:	orr	r3, r3, r2
   2aaf8:	str	r3, [fp, #-8]
   2aafc:	mov	r3, #372	; 0x174
   2ab00:	str	r3, [sp, #8]
   2ab04:	mov	r3, #0
   2ab08:	str	r3, [sp, #4]
   2ab0c:	mov	r3, #0
   2ab10:	str	r3, [sp]
   2ab14:	mov	r3, #0
   2ab18:	ldr	r2, [pc, #600]	; 2ad78 <base64_tests@@Base+0x2e0>
   2ab1c:	add	r2, pc, r2
   2ab20:	ldr	r1, [pc, #596]	; 2ad7c <base64_tests@@Base+0x2e4>
   2ab24:	add	r1, pc, r1
   2ab28:	ldr	r0, [fp, #-12]
   2ab2c:	bl	29ba4 <test_json@@Base>
   2ab30:	mov	r2, r0
   2ab34:	ldr	r3, [fp, #-8]
   2ab38:	orr	r3, r3, r2
   2ab3c:	str	r3, [fp, #-8]
   2ab40:	mov	r3, #376	; 0x178
   2ab44:	str	r3, [sp, #8]
   2ab48:	mov	r3, #0
   2ab4c:	str	r3, [sp, #4]
   2ab50:	mov	r3, #0
   2ab54:	str	r3, [sp]
   2ab58:	mov	r3, #0
   2ab5c:	ldr	r2, [pc, #540]	; 2ad80 <base64_tests@@Base+0x2e8>
   2ab60:	add	r2, pc, r2
   2ab64:	ldr	r1, [pc, #536]	; 2ad84 <base64_tests@@Base+0x2ec>
   2ab68:	add	r1, pc, r1
   2ab6c:	ldr	r0, [fp, #-12]
   2ab70:	bl	29ba4 <test_json@@Base>
   2ab74:	mov	r2, r0
   2ab78:	ldr	r3, [fp, #-8]
   2ab7c:	orr	r3, r3, r2
   2ab80:	str	r3, [fp, #-8]
   2ab84:	ldr	r3, [pc, #508]	; 2ad88 <base64_tests@@Base+0x2f0>
   2ab88:	str	r3, [sp, #8]
   2ab8c:	mov	r3, #0
   2ab90:	str	r3, [sp, #4]
   2ab94:	mov	r3, #0
   2ab98:	str	r3, [sp]
   2ab9c:	mov	r3, #0
   2aba0:	ldr	r2, [pc, #484]	; 2ad8c <base64_tests@@Base+0x2f4>
   2aba4:	add	r2, pc, r2
   2aba8:	ldr	r1, [pc, #480]	; 2ad90 <base64_tests@@Base+0x2f8>
   2abac:	add	r1, pc, r1
   2abb0:	ldr	r0, [fp, #-12]
   2abb4:	bl	29ba4 <test_json@@Base>
   2abb8:	mov	r2, r0
   2abbc:	ldr	r3, [fp, #-8]
   2abc0:	orr	r3, r3, r2
   2abc4:	str	r3, [fp, #-8]
   2abc8:	ldr	r3, [pc, #452]	; 2ad94 <base64_tests@@Base+0x2fc>
   2abcc:	str	r3, [sp, #8]
   2abd0:	mov	r3, #0
   2abd4:	str	r3, [sp, #4]
   2abd8:	mov	r3, #0
   2abdc:	str	r3, [sp]
   2abe0:	mov	r3, #0
   2abe4:	ldr	r2, [pc, #428]	; 2ad98 <base64_tests@@Base+0x300>
   2abe8:	add	r2, pc, r2
   2abec:	ldr	r1, [pc, #424]	; 2ad9c <base64_tests@@Base+0x304>
   2abf0:	add	r1, pc, r1
   2abf4:	ldr	r0, [fp, #-12]
   2abf8:	bl	29ba4 <test_json@@Base>
   2abfc:	mov	r2, r0
   2ac00:	ldr	r3, [fp, #-8]
   2ac04:	orr	r3, r3, r2
   2ac08:	str	r3, [fp, #-8]
   2ac0c:	ldr	r3, [pc, #396]	; 2ada0 <base64_tests@@Base+0x308>
   2ac10:	str	r3, [sp, #8]
   2ac14:	mov	r3, #0
   2ac18:	str	r3, [sp, #4]
   2ac1c:	mov	r3, #0
   2ac20:	str	r3, [sp]
   2ac24:	mov	r3, #0
   2ac28:	ldr	r2, [pc, #372]	; 2ada4 <base64_tests@@Base+0x30c>
   2ac2c:	add	r2, pc, r2
   2ac30:	ldr	r1, [pc, #368]	; 2ada8 <base64_tests@@Base+0x310>
   2ac34:	add	r1, pc, r1
   2ac38:	ldr	r0, [fp, #-12]
   2ac3c:	bl	29ba4 <test_json@@Base>
   2ac40:	mov	r2, r0
   2ac44:	ldr	r3, [fp, #-8]
   2ac48:	orr	r3, r3, r2
   2ac4c:	str	r3, [fp, #-8]
   2ac50:	mov	r3, #388	; 0x184
   2ac54:	str	r3, [sp, #8]
   2ac58:	mov	r3, #0
   2ac5c:	str	r3, [sp, #4]
   2ac60:	mov	r3, #0
   2ac64:	str	r3, [sp]
   2ac68:	mov	r3, #31
   2ac6c:	mov	r2, #0
   2ac70:	ldr	r1, [pc, #308]	; 2adac <base64_tests@@Base+0x314>
   2ac74:	add	r1, pc, r1
   2ac78:	ldr	r0, [fp, #-12]
   2ac7c:	bl	29ba4 <test_json@@Base>
   2ac80:	mov	r2, r0
   2ac84:	ldr	r3, [fp, #-8]
   2ac88:	orr	r3, r3, r2
   2ac8c:	str	r3, [fp, #-8]
   2ac90:	ldr	r3, [pc, #280]	; 2adb0 <base64_tests@@Base+0x318>
   2ac94:	str	r3, [sp, #8]
   2ac98:	mov	r3, #0
   2ac9c:	str	r3, [sp, #4]
   2aca0:	mov	r3, #0
   2aca4:	str	r3, [sp]
   2aca8:	mov	r3, #32
   2acac:	mov	r2, #0
   2acb0:	ldr	r1, [pc, #252]	; 2adb4 <base64_tests@@Base+0x31c>
   2acb4:	add	r1, pc, r1
   2acb8:	ldr	r0, [fp, #-12]
   2acbc:	bl	29ba4 <test_json@@Base>
   2acc0:	mov	r2, r0
   2acc4:	ldr	r3, [fp, #-8]
   2acc8:	orr	r3, r3, r2
   2accc:	str	r3, [fp, #-8]
   2acd0:	ldr	r3, [pc, #224]	; 2adb8 <base64_tests@@Base+0x320>
   2acd4:	str	r3, [sp, #8]
   2acd8:	mov	r3, #0
   2acdc:	str	r3, [sp, #4]
   2ace0:	mov	r3, #0
   2ace4:	str	r3, [sp]
   2ace8:	mov	r3, #0
   2acec:	ldr	r2, [pc, #200]	; 2adbc <base64_tests@@Base+0x324>
   2acf0:	add	r2, pc, r2
   2acf4:	ldr	r1, [pc, #196]	; 2adc0 <base64_tests@@Base+0x328>
   2acf8:	add	r1, pc, r1
   2acfc:	ldr	r0, [fp, #-12]
   2ad00:	bl	29ba4 <test_json@@Base>
   2ad04:	mov	r2, r0
   2ad08:	ldr	r3, [fp, #-8]
   2ad0c:	orr	r3, r3, r2
   2ad10:	str	r3, [fp, #-8]
   2ad14:	ldr	r3, [pc, #168]	; 2adc4 <base64_tests@@Base+0x32c>
   2ad18:	str	r3, [sp, #8]
   2ad1c:	mov	r3, #0
   2ad20:	str	r3, [sp, #4]
   2ad24:	mov	r3, #0
   2ad28:	str	r3, [sp]
   2ad2c:	mov	r3, #0
   2ad30:	ldr	r2, [pc, #144]	; 2adc8 <base64_tests@@Base+0x330>
   2ad34:	add	r2, pc, r2
   2ad38:	ldr	r1, [pc, #140]	; 2adcc <base64_tests@@Base+0x334>
   2ad3c:	add	r1, pc, r1
   2ad40:	ldr	r0, [fp, #-12]
   2ad44:	bl	29ba4 <test_json@@Base>
   2ad48:	mov	r2, r0
   2ad4c:	ldr	r3, [fp, #-8]
   2ad50:	orr	r3, r3, r2
   2ad54:	str	r3, [fp, #-8]
   2ad58:	ldr	r3, [fp, #-8]
   2ad5c:	mov	r0, r3
   2ad60:	sub	sp, fp, #4
   2ad64:	pop	{fp, pc}
   2ad68:	andeq	r9, r3, r0, lsr r4
   2ad6c:	andeq	r0, r0, r1, ror r1
   2ad70:	andeq	r2, r2, r4, lsl r4
   2ad74:	strheq	r3, [r2], -r0
   2ad78:	andeq	r3, r2, ip, lsl #1
   2ad7c:	andeq	r3, r2, r8, lsr #1
   2ad80:	muleq	r2, r4, r0
   2ad84:	andeq	r3, r2, r0, asr #2
   2ad88:	andeq	r0, r0, fp, ror r1
   2ad8c:	andeq	r3, r2, r0, asr #3
   2ad90:	andeq	r3, r2, r0, ror r2
   2ad94:	andeq	r0, r0, lr, ror r1
   2ad98:	andeq	r3, r2, ip
   2ad9c:	andeq	r3, r2, r8, ror #5
   2ada0:	andeq	r0, r0, r1, lsl #3
   2ada4:	andeq	r3, r2, r8, lsr r1
   2ada8:	andeq	r3, r2, ip, asr r3
   2adac:	ldrdeq	r3, [r2], -r8
   2adb0:	andeq	r0, r0, r7, lsl #3
   2adb4:	andeq	r3, r2, r4, asr r4
   2adb8:	muleq	r0, r6, r1
   2adbc:	ldrdeq	r3, [r2], -r4
   2adc0:	andeq	r3, r2, r4, lsr #11
   2adc4:	andeq	r0, r0, r3, lsr #3
   2adc8:	muleq	r2, r0, r4
   2adcc:	andeq	r3, r2, r0, lsr r6

0002add0 <mixed_type_union_tests@@Base>:
   2add0:	push	{fp, lr}
   2add4:	add	fp, sp, #4
   2add8:	sub	sp, sp, #24
   2addc:	mov	r3, #0
   2ade0:	str	r3, [fp, #-8]
   2ade4:	ldr	r3, [pc, #496]	; 2afdc <mixed_type_union_tests@@Base+0x20c>
   2ade8:	add	r3, pc, r3
   2adec:	str	r3, [fp, #-12]
   2adf0:	mov	r3, #432	; 0x1b0
   2adf4:	str	r3, [sp, #8]
   2adf8:	mov	r3, #0
   2adfc:	str	r3, [sp, #4]
   2ae00:	mov	r3, #0
   2ae04:	str	r3, [sp]
   2ae08:	mov	r3, #0
   2ae0c:	ldr	r2, [pc, #460]	; 2afe0 <mixed_type_union_tests@@Base+0x210>
   2ae10:	add	r2, pc, r2
   2ae14:	ldr	r1, [pc, #456]	; 2afe4 <mixed_type_union_tests@@Base+0x214>
   2ae18:	add	r1, pc, r1
   2ae1c:	ldr	r0, [fp, #-12]
   2ae20:	bl	29ba4 <test_json@@Base>
   2ae24:	mov	r2, r0
   2ae28:	ldr	r3, [fp, #-8]
   2ae2c:	orr	r3, r3, r2
   2ae30:	str	r3, [fp, #-8]
   2ae34:	ldr	r3, [pc, #428]	; 2afe8 <mixed_type_union_tests@@Base+0x218>
   2ae38:	str	r3, [sp, #8]
   2ae3c:	mov	r3, #0
   2ae40:	str	r3, [sp, #4]
   2ae44:	mov	r3, #0
   2ae48:	str	r3, [sp]
   2ae4c:	mov	r3, #0
   2ae50:	ldr	r2, [pc, #404]	; 2afec <mixed_type_union_tests@@Base+0x21c>
   2ae54:	add	r2, pc, r2
   2ae58:	ldr	r1, [pc, #400]	; 2aff0 <mixed_type_union_tests@@Base+0x220>
   2ae5c:	add	r1, pc, r1
   2ae60:	ldr	r0, [fp, #-12]
   2ae64:	bl	29ba4 <test_json@@Base>
   2ae68:	mov	r2, r0
   2ae6c:	ldr	r3, [fp, #-8]
   2ae70:	orr	r3, r3, r2
   2ae74:	str	r3, [fp, #-8]
   2ae78:	ldr	r3, [pc, #372]	; 2aff4 <mixed_type_union_tests@@Base+0x224>
   2ae7c:	str	r3, [sp, #8]
   2ae80:	mov	r3, #0
   2ae84:	str	r3, [sp, #4]
   2ae88:	mov	r3, #0
   2ae8c:	str	r3, [sp]
   2ae90:	mov	r3, #0
   2ae94:	ldr	r2, [pc, #348]	; 2aff8 <mixed_type_union_tests@@Base+0x228>
   2ae98:	add	r2, pc, r2
   2ae9c:	ldr	r1, [pc, #344]	; 2affc <mixed_type_union_tests@@Base+0x22c>
   2aea0:	add	r1, pc, r1
   2aea4:	ldr	r0, [fp, #-12]
   2aea8:	bl	29ba4 <test_json@@Base>
   2aeac:	mov	r2, r0
   2aeb0:	ldr	r3, [fp, #-8]
   2aeb4:	orr	r3, r3, r2
   2aeb8:	str	r3, [fp, #-8]
   2aebc:	ldr	r3, [pc, #316]	; 2b000 <mixed_type_union_tests@@Base+0x230>
   2aec0:	str	r3, [sp, #8]
   2aec4:	mov	r3, #0
   2aec8:	str	r3, [sp, #4]
   2aecc:	mov	r3, #0
   2aed0:	str	r3, [sp]
   2aed4:	mov	r3, #0
   2aed8:	ldr	r2, [pc, #292]	; 2b004 <mixed_type_union_tests@@Base+0x234>
   2aedc:	add	r2, pc, r2
   2aee0:	ldr	r1, [pc, #288]	; 2b008 <mixed_type_union_tests@@Base+0x238>
   2aee4:	add	r1, pc, r1
   2aee8:	ldr	r0, [fp, #-12]
   2aeec:	bl	29ba4 <test_json@@Base>
   2aef0:	mov	r2, r0
   2aef4:	ldr	r3, [fp, #-8]
   2aef8:	orr	r3, r3, r2
   2aefc:	str	r3, [fp, #-8]
   2af00:	ldr	r3, [pc, #260]	; 2b00c <mixed_type_union_tests@@Base+0x23c>
   2af04:	str	r3, [sp, #8]
   2af08:	mov	r3, #0
   2af0c:	str	r3, [sp, #4]
   2af10:	mov	r3, #0
   2af14:	str	r3, [sp]
   2af18:	mov	r3, #0
   2af1c:	ldr	r2, [pc, #236]	; 2b010 <mixed_type_union_tests@@Base+0x240>
   2af20:	add	r2, pc, r2
   2af24:	ldr	r1, [pc, #232]	; 2b014 <mixed_type_union_tests@@Base+0x244>
   2af28:	add	r1, pc, r1
   2af2c:	ldr	r0, [fp, #-12]
   2af30:	bl	29ba4 <test_json@@Base>
   2af34:	mov	r2, r0
   2af38:	ldr	r3, [fp, #-8]
   2af3c:	orr	r3, r3, r2
   2af40:	str	r3, [fp, #-8]
   2af44:	ldr	r3, [pc, #204]	; 2b018 <mixed_type_union_tests@@Base+0x248>
   2af48:	str	r3, [sp, #8]
   2af4c:	mov	r3, #0
   2af50:	str	r3, [sp, #4]
   2af54:	mov	r3, #0
   2af58:	str	r3, [sp]
   2af5c:	mov	r3, #0
   2af60:	ldr	r2, [pc, #180]	; 2b01c <mixed_type_union_tests@@Base+0x24c>
   2af64:	add	r2, pc, r2
   2af68:	ldr	r1, [pc, #176]	; 2b020 <mixed_type_union_tests@@Base+0x250>
   2af6c:	add	r1, pc, r1
   2af70:	ldr	r0, [fp, #-12]
   2af74:	bl	29ba4 <test_json@@Base>
   2af78:	mov	r2, r0
   2af7c:	ldr	r3, [fp, #-8]
   2af80:	orr	r3, r3, r2
   2af84:	str	r3, [fp, #-8]
   2af88:	ldr	r3, [pc, #148]	; 2b024 <mixed_type_union_tests@@Base+0x254>
   2af8c:	str	r3, [sp, #8]
   2af90:	mov	r3, #0
   2af94:	str	r3, [sp, #4]
   2af98:	mov	r3, #0
   2af9c:	str	r3, [sp]
   2afa0:	mov	r3, #0
   2afa4:	ldr	r2, [pc, #124]	; 2b028 <mixed_type_union_tests@@Base+0x258>
   2afa8:	add	r2, pc, r2
   2afac:	ldr	r1, [pc, #120]	; 2b02c <mixed_type_union_tests@@Base+0x25c>
   2afb0:	add	r1, pc, r1
   2afb4:	ldr	r0, [fp, #-12]
   2afb8:	bl	29ba4 <test_json@@Base>
   2afbc:	mov	r2, r0
   2afc0:	ldr	r3, [fp, #-8]
   2afc4:	orr	r3, r3, r2
   2afc8:	str	r3, [fp, #-8]
   2afcc:	ldr	r3, [fp, #-8]
   2afd0:	mov	r0, r3
   2afd4:	sub	sp, fp, #4
   2afd8:	pop	{fp, pc}
   2afdc:	andeq	r9, r3, r8, lsl r1
   2afe0:	andeq	r3, r2, r8, lsr #12
   2afe4:	andeq	r3, r2, r8, ror #12
   2afe8:			; <UNDEFINED> instruction: 0x000001b5
   2afec:	andeq	r3, r2, ip, ror r6
   2aff0:	andeq	r3, r2, ip, ror #13
   2aff4:			; <UNDEFINED> instruction: 0x000001ba
   2aff8:	andeq	r3, r2, r8, lsr r6
   2affc:	andeq	r3, r2, ip, lsr #14
   2b000:	andeq	r0, r0, r1, asr #3
   2b004:	andeq	r3, r2, r8, lsl #15
   2b008:	andeq	r3, r2, ip, lsr r8
   2b00c:	andeq	r0, r0, sl, asr #3
   2b010:	andeq	r3, r2, r0, ror #17
   2b014:			; <UNDEFINED> instruction: 0x000239b8
   2b018:	ldrdeq	r0, [r0], -r5
   2b01c:	andeq	r3, r2, r4, lsl #21
   2b020:	andeq	r3, r2, r4, asr #23
   2b024:	ldrdeq	r0, [r0], -sl
   2b028:	andeq	r3, r2, r8, lsr #10
   2b02c:	andeq	r3, r2, r4, lsl #26

0002b030 <union_vector_tests@@Base>:
   2b030:	push	{fp, lr}
   2b034:	add	fp, sp, #4
   2b038:	sub	sp, sp, #24
   2b03c:	mov	r3, #0
   2b040:	str	r3, [fp, #-8]
   2b044:	ldr	r3, [pc, #428]	; 2b1f8 <union_vector_tests@@Base+0x1c8>
   2b048:	add	r3, pc, r3
   2b04c:	str	r3, [fp, #-12]
   2b050:	ldr	r3, [pc, #420]	; 2b1fc <union_vector_tests@@Base+0x1cc>
   2b054:	str	r3, [sp, #8]
   2b058:	mov	r3, #0
   2b05c:	str	r3, [sp, #4]
   2b060:	mov	r3, #0
   2b064:	str	r3, [sp]
   2b068:	mov	r3, #0
   2b06c:	ldr	r2, [pc, #396]	; 2b200 <union_vector_tests@@Base+0x1d0>
   2b070:	add	r2, pc, r2
   2b074:	ldr	r1, [pc, #392]	; 2b204 <union_vector_tests@@Base+0x1d4>
   2b078:	add	r1, pc, r1
   2b07c:	ldr	r0, [fp, #-12]
   2b080:	bl	29ba4 <test_json@@Base>
   2b084:	mov	r2, r0
   2b088:	ldr	r3, [fp, #-8]
   2b08c:	orr	r3, r3, r2
   2b090:	str	r3, [fp, #-8]
   2b094:	mov	r3, #488	; 0x1e8
   2b098:	str	r3, [sp, #8]
   2b09c:	mov	r3, #0
   2b0a0:	str	r3, [sp, #4]
   2b0a4:	mov	r3, #0
   2b0a8:	str	r3, [sp]
   2b0ac:	mov	r3, #0
   2b0b0:	ldr	r2, [pc, #336]	; 2b208 <union_vector_tests@@Base+0x1d8>
   2b0b4:	add	r2, pc, r2
   2b0b8:	ldr	r1, [pc, #332]	; 2b20c <union_vector_tests@@Base+0x1dc>
   2b0bc:	add	r1, pc, r1
   2b0c0:	ldr	r0, [fp, #-12]
   2b0c4:	bl	29ba4 <test_json@@Base>
   2b0c8:	mov	r2, r0
   2b0cc:	ldr	r3, [fp, #-8]
   2b0d0:	orr	r3, r3, r2
   2b0d4:	str	r3, [fp, #-8]
   2b0d8:	ldr	r3, [pc, #304]	; 2b210 <union_vector_tests@@Base+0x1e0>
   2b0dc:	str	r3, [sp, #8]
   2b0e0:	mov	r3, #0
   2b0e4:	str	r3, [sp, #4]
   2b0e8:	mov	r3, #0
   2b0ec:	str	r3, [sp]
   2b0f0:	mov	r3, #0
   2b0f4:	ldr	r2, [pc, #280]	; 2b214 <union_vector_tests@@Base+0x1e4>
   2b0f8:	add	r2, pc, r2
   2b0fc:	ldr	r1, [pc, #276]	; 2b218 <union_vector_tests@@Base+0x1e8>
   2b100:	add	r1, pc, r1
   2b104:	ldr	r0, [fp, #-12]
   2b108:	bl	29ba4 <test_json@@Base>
   2b10c:	mov	r2, r0
   2b110:	ldr	r3, [fp, #-8]
   2b114:	orr	r3, r3, r2
   2b118:	str	r3, [fp, #-8]
   2b11c:	ldr	r3, [pc, #248]	; 2b21c <union_vector_tests@@Base+0x1ec>
   2b120:	str	r3, [sp, #8]
   2b124:	mov	r3, #0
   2b128:	str	r3, [sp, #4]
   2b12c:	mov	r3, #0
   2b130:	str	r3, [sp]
   2b134:	mov	r3, #0
   2b138:	ldr	r2, [pc, #224]	; 2b220 <union_vector_tests@@Base+0x1f0>
   2b13c:	add	r2, pc, r2
   2b140:	ldr	r1, [pc, #220]	; 2b224 <union_vector_tests@@Base+0x1f4>
   2b144:	add	r1, pc, r1
   2b148:	ldr	r0, [fp, #-12]
   2b14c:	bl	29ba4 <test_json@@Base>
   2b150:	mov	r2, r0
   2b154:	ldr	r3, [fp, #-8]
   2b158:	orr	r3, r3, r2
   2b15c:	str	r3, [fp, #-8]
   2b160:	ldr	r3, [pc, #192]	; 2b228 <union_vector_tests@@Base+0x1f8>
   2b164:	str	r3, [sp, #8]
   2b168:	mov	r3, #0
   2b16c:	str	r3, [sp, #4]
   2b170:	mov	r3, #0
   2b174:	str	r3, [sp]
   2b178:	mov	r3, #0
   2b17c:	ldr	r2, [pc, #168]	; 2b22c <union_vector_tests@@Base+0x1fc>
   2b180:	add	r2, pc, r2
   2b184:	ldr	r1, [pc, #164]	; 2b230 <union_vector_tests@@Base+0x200>
   2b188:	add	r1, pc, r1
   2b18c:	ldr	r0, [fp, #-12]
   2b190:	bl	29ba4 <test_json@@Base>
   2b194:	mov	r2, r0
   2b198:	ldr	r3, [fp, #-8]
   2b19c:	orr	r3, r3, r2
   2b1a0:	str	r3, [fp, #-8]
   2b1a4:	mov	r3, #500	; 0x1f4
   2b1a8:	str	r3, [sp, #8]
   2b1ac:	mov	r3, #0
   2b1b0:	str	r3, [sp, #4]
   2b1b4:	mov	r3, #0
   2b1b8:	str	r3, [sp]
   2b1bc:	mov	r3, #0
   2b1c0:	ldr	r2, [pc, #108]	; 2b234 <union_vector_tests@@Base+0x204>
   2b1c4:	add	r2, pc, r2
   2b1c8:	ldr	r1, [pc, #104]	; 2b238 <union_vector_tests@@Base+0x208>
   2b1cc:	add	r1, pc, r1
   2b1d0:	ldr	r0, [fp, #-12]
   2b1d4:	bl	29ba4 <test_json@@Base>
   2b1d8:	mov	r2, r0
   2b1dc:	ldr	r3, [fp, #-8]
   2b1e0:	orr	r3, r3, r2
   2b1e4:	str	r3, [fp, #-8]
   2b1e8:	ldr	r3, [fp, #-8]
   2b1ec:	mov	r0, r3
   2b1f0:	sub	sp, fp, #4
   2b1f4:	pop	{fp, pc}
   2b1f8:	andeq	r8, r3, r8, lsr #29
   2b1fc:	andeq	r0, r0, r5, ror #3
   2b200:	ldrdeq	r3, [r2], -r4
   2b204:	andeq	r3, r2, r4, lsl #26
   2b208:	andeq	r3, r2, r8, lsl #26
   2b20c:	andeq	r3, r2, ip, lsr #26
   2b210:	andeq	r0, r0, fp, ror #3
   2b214:	andeq	r3, r2, r4, lsr #26
   2b218:	andeq	r3, r2, r0, ror #26
   2b21c:	andeq	r0, r0, lr, ror #3
   2b220:	andeq	r3, r2, r4, ror sp
   2b224:	ldrdeq	r3, [r2], -r8
   2b228:	strdeq	r0, [r0], -r1
   2b22c:	andeq	r3, r2, r4, asr #23
   2b230:	andeq	r3, r2, r4, lsl lr
   2b234:	andeq	r3, r2, r8, lsl lr
   2b238:	andeq	r3, r2, ip, ror #28

0002b23c <main@@Base>:
   2b23c:	push	{fp, lr}
   2b240:	add	fp, sp, #4
   2b244:	sub	sp, sp, #24
   2b248:	mov	r3, #0
   2b24c:	str	r3, [fp, #-8]
   2b250:	ldr	r3, [pc, #4088]	; 2c250 <main@@Base+0x1014>
   2b254:	add	r3, pc, r3
   2b258:	str	r3, [fp, #-12]
   2b25c:	bl	2a02c <edge_case_tests@@Base>
   2b260:	mov	r2, r0
   2b264:	ldr	r3, [fp, #-8]
   2b268:	orr	r3, r3, r2
   2b26c:	str	r3, [fp, #-8]
   2b270:	bl	2a56c <error_case_tests@@Base>
   2b274:	mov	r2, r0
   2b278:	ldr	r3, [fp, #-8]
   2b27c:	orr	r3, r3, r2
   2b280:	str	r3, [fp, #-8]
   2b284:	bl	2b030 <union_vector_tests@@Base>
   2b288:	mov	r2, r0
   2b28c:	ldr	r3, [fp, #-8]
   2b290:	orr	r3, r3, r2
   2b294:	str	r3, [fp, #-8]
   2b298:	bl	2aa98 <base64_tests@@Base>
   2b29c:	mov	r2, r0
   2b2a0:	ldr	r3, [fp, #-8]
   2b2a4:	orr	r3, r3, r2
   2b2a8:	str	r3, [fp, #-8]
   2b2ac:	bl	2add0 <mixed_type_union_tests@@Base>
   2b2b0:	mov	r2, r0
   2b2b4:	ldr	r3, [fp, #-8]
   2b2b8:	orr	r3, r3, r2
   2b2bc:	str	r3, [fp, #-8]
   2b2c0:	ldr	r3, [pc, #3980]	; 2c254 <main@@Base+0x1018>
   2b2c4:	str	r3, [sp, #8]
   2b2c8:	mov	r3, #0
   2b2cc:	str	r3, [sp, #4]
   2b2d0:	mov	r3, #0
   2b2d4:	str	r3, [sp]
   2b2d8:	mov	r3, #0
   2b2dc:	ldr	r2, [pc, #3956]	; 2c258 <main@@Base+0x101c>
   2b2e0:	add	r2, pc, r2
   2b2e4:	ldr	r1, [pc, #3952]	; 2c25c <main@@Base+0x1020>
   2b2e8:	add	r1, pc, r1
   2b2ec:	ldr	r0, [fp, #-12]
   2b2f0:	bl	29ba4 <test_json@@Base>
   2b2f4:	mov	r2, r0
   2b2f8:	ldr	r3, [fp, #-8]
   2b2fc:	orr	r3, r3, r2
   2b300:	str	r3, [fp, #-8]
   2b304:	mov	r3, #528	; 0x210
   2b308:	str	r3, [sp, #8]
   2b30c:	mov	r3, #0
   2b310:	str	r3, [sp, #4]
   2b314:	mov	r3, #0
   2b318:	str	r3, [sp]
   2b31c:	mov	r3, #0
   2b320:	ldr	r2, [pc, #3896]	; 2c260 <main@@Base+0x1024>
   2b324:	add	r2, pc, r2
   2b328:	ldr	r1, [pc, #3892]	; 2c264 <main@@Base+0x1028>
   2b32c:	add	r1, pc, r1
   2b330:	ldr	r0, [fp, #-12]
   2b334:	bl	29ba4 <test_json@@Base>
   2b338:	mov	r2, r0
   2b33c:	ldr	r3, [fp, #-8]
   2b340:	orr	r3, r3, r2
   2b344:	str	r3, [fp, #-8]
   2b348:	ldr	r3, [pc, #3864]	; 2c268 <main@@Base+0x102c>
   2b34c:	str	r3, [sp, #8]
   2b350:	mov	r3, #0
   2b354:	str	r3, [sp, #4]
   2b358:	mov	r3, #0
   2b35c:	str	r3, [sp]
   2b360:	mov	r3, #0
   2b364:	ldr	r2, [pc, #3840]	; 2c26c <main@@Base+0x1030>
   2b368:	add	r2, pc, r2
   2b36c:	ldr	r1, [pc, #3836]	; 2c270 <main@@Base+0x1034>
   2b370:	add	r1, pc, r1
   2b374:	ldr	r0, [fp, #-12]
   2b378:	bl	29ba4 <test_json@@Base>
   2b37c:	mov	r2, r0
   2b380:	ldr	r3, [fp, #-8]
   2b384:	orr	r3, r3, r2
   2b388:	str	r3, [fp, #-8]
   2b38c:	ldr	r3, [pc, #3808]	; 2c274 <main@@Base+0x1038>
   2b390:	str	r3, [sp, #8]
   2b394:	mov	r3, #0
   2b398:	str	r3, [sp, #4]
   2b39c:	mov	r3, #0
   2b3a0:	str	r3, [sp]
   2b3a4:	mov	r3, #0
   2b3a8:	ldr	r2, [pc, #3784]	; 2c278 <main@@Base+0x103c>
   2b3ac:	add	r2, pc, r2
   2b3b0:	ldr	r1, [pc, #3780]	; 2c27c <main@@Base+0x1040>
   2b3b4:	add	r1, pc, r1
   2b3b8:	ldr	r0, [fp, #-12]
   2b3bc:	bl	29ba4 <test_json@@Base>
   2b3c0:	mov	r2, r0
   2b3c4:	ldr	r3, [fp, #-8]
   2b3c8:	orr	r3, r3, r2
   2b3cc:	str	r3, [fp, #-8]
   2b3d0:	ldr	r3, [pc, #3752]	; 2c280 <main@@Base+0x1044>
   2b3d4:	str	r3, [sp, #8]
   2b3d8:	mov	r3, #0
   2b3dc:	str	r3, [sp, #4]
   2b3e0:	mov	r3, #0
   2b3e4:	str	r3, [sp]
   2b3e8:	mov	r3, #0
   2b3ec:	ldr	r2, [pc, #3728]	; 2c284 <main@@Base+0x1048>
   2b3f0:	add	r2, pc, r2
   2b3f4:	ldr	r1, [pc, #3724]	; 2c288 <main@@Base+0x104c>
   2b3f8:	add	r1, pc, r1
   2b3fc:	ldr	r0, [fp, #-12]
   2b400:	bl	29ba4 <test_json@@Base>
   2b404:	mov	r2, r0
   2b408:	ldr	r3, [fp, #-8]
   2b40c:	orr	r3, r3, r2
   2b410:	str	r3, [fp, #-8]
   2b414:	mov	r3, #540	; 0x21c
   2b418:	str	r3, [sp, #8]
   2b41c:	mov	r3, #0
   2b420:	str	r3, [sp, #4]
   2b424:	mov	r3, #0
   2b428:	str	r3, [sp]
   2b42c:	mov	r3, #0
   2b430:	ldr	r2, [pc, #3668]	; 2c28c <main@@Base+0x1050>
   2b434:	add	r2, pc, r2
   2b438:	ldr	r1, [pc, #3664]	; 2c290 <main@@Base+0x1054>
   2b43c:	add	r1, pc, r1
   2b440:	ldr	r0, [fp, #-12]
   2b444:	bl	29ba4 <test_json@@Base>
   2b448:	mov	r2, r0
   2b44c:	ldr	r3, [fp, #-8]
   2b450:	orr	r3, r3, r2
   2b454:	str	r3, [fp, #-8]
   2b458:	ldr	r3, [pc, #3636]	; 2c294 <main@@Base+0x1058>
   2b45c:	str	r3, [sp, #8]
   2b460:	mov	r3, #0
   2b464:	str	r3, [sp, #4]
   2b468:	mov	r3, #0
   2b46c:	str	r3, [sp]
   2b470:	mov	r3, #0
   2b474:	ldr	r2, [pc, #3612]	; 2c298 <main@@Base+0x105c>
   2b478:	add	r2, pc, r2
   2b47c:	ldr	r1, [pc, #3608]	; 2c29c <main@@Base+0x1060>
   2b480:	add	r1, pc, r1
   2b484:	ldr	r0, [fp, #-12]
   2b488:	bl	29ba4 <test_json@@Base>
   2b48c:	mov	r2, r0
   2b490:	ldr	r3, [fp, #-8]
   2b494:	orr	r3, r3, r2
   2b498:	str	r3, [fp, #-8]
   2b49c:	ldr	r3, [pc, #3580]	; 2c2a0 <main@@Base+0x1064>
   2b4a0:	str	r3, [sp, #8]
   2b4a4:	mov	r3, #0
   2b4a8:	str	r3, [sp, #4]
   2b4ac:	mov	r3, #0
   2b4b0:	str	r3, [sp]
   2b4b4:	mov	r3, #0
   2b4b8:	ldr	r2, [pc, #3556]	; 2c2a4 <main@@Base+0x1068>
   2b4bc:	add	r2, pc, r2
   2b4c0:	ldr	r1, [pc, #3552]	; 2c2a8 <main@@Base+0x106c>
   2b4c4:	add	r1, pc, r1
   2b4c8:	ldr	r0, [fp, #-12]
   2b4cc:	bl	29ba4 <test_json@@Base>
   2b4d0:	mov	r2, r0
   2b4d4:	ldr	r3, [fp, #-8]
   2b4d8:	orr	r3, r3, r2
   2b4dc:	str	r3, [fp, #-8]
   2b4e0:	ldr	r3, [pc, #3524]	; 2c2ac <main@@Base+0x1070>
   2b4e4:	str	r3, [sp, #8]
   2b4e8:	mov	r3, #0
   2b4ec:	str	r3, [sp, #4]
   2b4f0:	mov	r3, #0
   2b4f4:	str	r3, [sp]
   2b4f8:	mov	r3, #0
   2b4fc:	ldr	r2, [pc, #3500]	; 2c2b0 <main@@Base+0x1074>
   2b500:	add	r2, pc, r2
   2b504:	ldr	r1, [pc, #3496]	; 2c2b4 <main@@Base+0x1078>
   2b508:	add	r1, pc, r1
   2b50c:	ldr	r0, [fp, #-12]
   2b510:	bl	29ba4 <test_json@@Base>
   2b514:	mov	r2, r0
   2b518:	ldr	r3, [fp, #-8]
   2b51c:	orr	r3, r3, r2
   2b520:	str	r3, [fp, #-8]
   2b524:	ldr	r3, [pc, #3468]	; 2c2b8 <main@@Base+0x107c>
   2b528:	str	r3, [sp, #8]
   2b52c:	mov	r3, #0
   2b530:	str	r3, [sp, #4]
   2b534:	mov	r3, #0
   2b538:	str	r3, [sp]
   2b53c:	mov	r3, #0
   2b540:	ldr	r2, [pc, #3444]	; 2c2bc <main@@Base+0x1080>
   2b544:	add	r2, pc, r2
   2b548:	ldr	r1, [pc, #3440]	; 2c2c0 <main@@Base+0x1084>
   2b54c:	add	r1, pc, r1
   2b550:	ldr	r0, [fp, #-12]
   2b554:	bl	29ba4 <test_json@@Base>
   2b558:	mov	r2, r0
   2b55c:	ldr	r3, [fp, #-8]
   2b560:	orr	r3, r3, r2
   2b564:	str	r3, [fp, #-8]
   2b568:	ldr	r3, [pc, #3412]	; 2c2c4 <main@@Base+0x1088>
   2b56c:	str	r3, [sp, #8]
   2b570:	mov	r3, #0
   2b574:	str	r3, [sp, #4]
   2b578:	mov	r3, #0
   2b57c:	str	r3, [sp]
   2b580:	mov	r3, #0
   2b584:	ldr	r2, [pc, #3388]	; 2c2c8 <main@@Base+0x108c>
   2b588:	add	r2, pc, r2
   2b58c:	ldr	r1, [pc, #3384]	; 2c2cc <main@@Base+0x1090>
   2b590:	add	r1, pc, r1
   2b594:	ldr	r0, [fp, #-12]
   2b598:	bl	29ba4 <test_json@@Base>
   2b59c:	mov	r2, r0
   2b5a0:	ldr	r3, [fp, #-8]
   2b5a4:	orr	r3, r3, r2
   2b5a8:	str	r3, [fp, #-8]
   2b5ac:	ldr	r3, [pc, #3356]	; 2c2d0 <main@@Base+0x1094>
   2b5b0:	str	r3, [sp, #8]
   2b5b4:	mov	r3, #0
   2b5b8:	str	r3, [sp, #4]
   2b5bc:	mov	r3, #0
   2b5c0:	str	r3, [sp]
   2b5c4:	mov	r3, #0
   2b5c8:	ldr	r2, [pc, #3332]	; 2c2d4 <main@@Base+0x1098>
   2b5cc:	add	r2, pc, r2
   2b5d0:	ldr	r1, [pc, #3328]	; 2c2d8 <main@@Base+0x109c>
   2b5d4:	add	r1, pc, r1
   2b5d8:	ldr	r0, [fp, #-12]
   2b5dc:	bl	29ba4 <test_json@@Base>
   2b5e0:	mov	r2, r0
   2b5e4:	ldr	r3, [fp, #-8]
   2b5e8:	orr	r3, r3, r2
   2b5ec:	str	r3, [fp, #-8]
   2b5f0:	mov	r3, #564	; 0x234
   2b5f4:	str	r3, [sp, #8]
   2b5f8:	mov	r3, #0
   2b5fc:	str	r3, [sp, #4]
   2b600:	mov	r3, #0
   2b604:	str	r3, [sp]
   2b608:	mov	r3, #0
   2b60c:	ldr	r2, [pc, #3272]	; 2c2dc <main@@Base+0x10a0>
   2b610:	add	r2, pc, r2
   2b614:	ldr	r1, [pc, #3268]	; 2c2e0 <main@@Base+0x10a4>
   2b618:	add	r1, pc, r1
   2b61c:	ldr	r0, [fp, #-12]
   2b620:	bl	29ba4 <test_json@@Base>
   2b624:	mov	r2, r0
   2b628:	ldr	r3, [fp, #-8]
   2b62c:	orr	r3, r3, r2
   2b630:	str	r3, [fp, #-8]
   2b634:	ldr	r3, [pc, #3240]	; 2c2e4 <main@@Base+0x10a8>
   2b638:	str	r3, [sp, #8]
   2b63c:	mov	r3, #0
   2b640:	str	r3, [sp, #4]
   2b644:	mov	r3, #0
   2b648:	str	r3, [sp]
   2b64c:	mov	r3, #0
   2b650:	ldr	r2, [pc, #3216]	; 2c2e8 <main@@Base+0x10ac>
   2b654:	add	r2, pc, r2
   2b658:	ldr	r1, [pc, #3212]	; 2c2ec <main@@Base+0x10b0>
   2b65c:	add	r1, pc, r1
   2b660:	ldr	r0, [fp, #-12]
   2b664:	bl	29ba4 <test_json@@Base>
   2b668:	mov	r2, r0
   2b66c:	ldr	r3, [fp, #-8]
   2b670:	orr	r3, r3, r2
   2b674:	str	r3, [fp, #-8]
   2b678:	ldr	r3, [pc, #3184]	; 2c2f0 <main@@Base+0x10b4>
   2b67c:	str	r3, [sp, #8]
   2b680:	mov	r3, #0
   2b684:	str	r3, [sp, #4]
   2b688:	mov	r3, #0
   2b68c:	str	r3, [sp]
   2b690:	mov	r3, #0
   2b694:	ldr	r2, [pc, #3160]	; 2c2f4 <main@@Base+0x10b8>
   2b698:	add	r2, pc, r2
   2b69c:	ldr	r1, [pc, #3156]	; 2c2f8 <main@@Base+0x10bc>
   2b6a0:	add	r1, pc, r1
   2b6a4:	ldr	r0, [fp, #-12]
   2b6a8:	bl	29ba4 <test_json@@Base>
   2b6ac:	mov	r2, r0
   2b6b0:	ldr	r3, [fp, #-8]
   2b6b4:	orr	r3, r3, r2
   2b6b8:	str	r3, [fp, #-8]
   2b6bc:	ldr	r3, [pc, #3128]	; 2c2fc <main@@Base+0x10c0>
   2b6c0:	str	r3, [sp, #8]
   2b6c4:	mov	r3, #0
   2b6c8:	str	r3, [sp, #4]
   2b6cc:	mov	r3, #0
   2b6d0:	str	r3, [sp]
   2b6d4:	mov	r3, #0
   2b6d8:	ldr	r2, [pc, #3104]	; 2c300 <main@@Base+0x10c4>
   2b6dc:	add	r2, pc, r2
   2b6e0:	ldr	r1, [pc, #3100]	; 2c304 <main@@Base+0x10c8>
   2b6e4:	add	r1, pc, r1
   2b6e8:	ldr	r0, [fp, #-12]
   2b6ec:	bl	29ba4 <test_json@@Base>
   2b6f0:	mov	r2, r0
   2b6f4:	ldr	r3, [fp, #-8]
   2b6f8:	orr	r3, r3, r2
   2b6fc:	str	r3, [fp, #-8]
   2b700:	ldr	r3, [pc, #3072]	; 2c308 <main@@Base+0x10cc>
   2b704:	str	r3, [sp, #8]
   2b708:	mov	r3, #0
   2b70c:	str	r3, [sp, #4]
   2b710:	mov	r3, #0
   2b714:	str	r3, [sp]
   2b718:	mov	r3, #0
   2b71c:	ldr	r2, [pc, #3048]	; 2c30c <main@@Base+0x10d0>
   2b720:	add	r2, pc, r2
   2b724:	ldr	r1, [pc, #3044]	; 2c310 <main@@Base+0x10d4>
   2b728:	add	r1, pc, r1
   2b72c:	ldr	r0, [fp, #-12]
   2b730:	bl	29ba4 <test_json@@Base>
   2b734:	mov	r2, r0
   2b738:	ldr	r3, [fp, #-8]
   2b73c:	orr	r3, r3, r2
   2b740:	str	r3, [fp, #-8]
   2b744:	ldr	r3, [pc, #3016]	; 2c314 <main@@Base+0x10d8>
   2b748:	str	r3, [sp, #8]
   2b74c:	mov	r3, #0
   2b750:	str	r3, [sp, #4]
   2b754:	mov	r3, #0
   2b758:	str	r3, [sp]
   2b75c:	mov	r3, #0
   2b760:	ldr	r2, [pc, #2992]	; 2c318 <main@@Base+0x10dc>
   2b764:	add	r2, pc, r2
   2b768:	ldr	r1, [pc, #2988]	; 2c31c <main@@Base+0x10e0>
   2b76c:	add	r1, pc, r1
   2b770:	ldr	r0, [fp, #-12]
   2b774:	bl	29ba4 <test_json@@Base>
   2b778:	mov	r2, r0
   2b77c:	ldr	r3, [fp, #-8]
   2b780:	orr	r3, r3, r2
   2b784:	str	r3, [fp, #-8]
   2b788:	ldr	r3, [pc, #2960]	; 2c320 <main@@Base+0x10e4>
   2b78c:	str	r3, [sp, #8]
   2b790:	mov	r3, #0
   2b794:	str	r3, [sp, #4]
   2b798:	mov	r3, #0
   2b79c:	str	r3, [sp]
   2b7a0:	mov	r3, #0
   2b7a4:	ldr	r2, [pc, #2936]	; 2c324 <main@@Base+0x10e8>
   2b7a8:	add	r2, pc, r2
   2b7ac:	ldr	r1, [pc, #2932]	; 2c328 <main@@Base+0x10ec>
   2b7b0:	add	r1, pc, r1
   2b7b4:	ldr	r0, [fp, #-12]
   2b7b8:	bl	29ba4 <test_json@@Base>
   2b7bc:	mov	r2, r0
   2b7c0:	ldr	r3, [fp, #-8]
   2b7c4:	orr	r3, r3, r2
   2b7c8:	str	r3, [fp, #-8]
   2b7cc:	ldr	r3, [pc, #2904]	; 2c32c <main@@Base+0x10f0>
   2b7d0:	str	r3, [sp, #8]
   2b7d4:	mov	r3, #0
   2b7d8:	str	r3, [sp, #4]
   2b7dc:	mov	r3, #0
   2b7e0:	str	r3, [sp]
   2b7e4:	mov	r3, #0
   2b7e8:	ldr	r2, [pc, #2880]	; 2c330 <main@@Base+0x10f4>
   2b7ec:	add	r2, pc, r2
   2b7f0:	ldr	r1, [pc, #2876]	; 2c334 <main@@Base+0x10f8>
   2b7f4:	add	r1, pc, r1
   2b7f8:	ldr	r0, [fp, #-12]
   2b7fc:	bl	29ba4 <test_json@@Base>
   2b800:	mov	r2, r0
   2b804:	ldr	r3, [fp, #-8]
   2b808:	orr	r3, r3, r2
   2b80c:	str	r3, [fp, #-8]
   2b810:	ldr	r3, [pc, #2848]	; 2c338 <main@@Base+0x10fc>
   2b814:	str	r3, [sp, #8]
   2b818:	mov	r3, #0
   2b81c:	str	r3, [sp, #4]
   2b820:	mov	r3, #0
   2b824:	str	r3, [sp]
   2b828:	mov	r3, #0
   2b82c:	ldr	r2, [pc, #2824]	; 2c33c <main@@Base+0x1100>
   2b830:	add	r2, pc, r2
   2b834:	ldr	r1, [pc, #2820]	; 2c340 <main@@Base+0x1104>
   2b838:	add	r1, pc, r1
   2b83c:	ldr	r0, [fp, #-12]
   2b840:	bl	29ba4 <test_json@@Base>
   2b844:	mov	r2, r0
   2b848:	ldr	r3, [fp, #-8]
   2b84c:	orr	r3, r3, r2
   2b850:	str	r3, [fp, #-8]
   2b854:	ldr	r3, [pc, #2792]	; 2c344 <main@@Base+0x1108>
   2b858:	str	r3, [sp, #8]
   2b85c:	mov	r3, #0
   2b860:	str	r3, [sp, #4]
   2b864:	mov	r3, #0
   2b868:	str	r3, [sp]
   2b86c:	mov	r3, #0
   2b870:	ldr	r2, [pc, #2768]	; 2c348 <main@@Base+0x110c>
   2b874:	add	r2, pc, r2
   2b878:	ldr	r1, [pc, #2764]	; 2c34c <main@@Base+0x1110>
   2b87c:	add	r1, pc, r1
   2b880:	ldr	r0, [fp, #-12]
   2b884:	bl	29ba4 <test_json@@Base>
   2b888:	mov	r2, r0
   2b88c:	ldr	r3, [fp, #-8]
   2b890:	orr	r3, r3, r2
   2b894:	str	r3, [fp, #-8]
   2b898:	ldr	r3, [pc, #2736]	; 2c350 <main@@Base+0x1114>
   2b89c:	str	r3, [sp, #8]
   2b8a0:	mov	r3, #0
   2b8a4:	str	r3, [sp, #4]
   2b8a8:	mov	r3, #0
   2b8ac:	str	r3, [sp]
   2b8b0:	mov	r3, #0
   2b8b4:	ldr	r2, [pc, #2712]	; 2c354 <main@@Base+0x1118>
   2b8b8:	add	r2, pc, r2
   2b8bc:	ldr	r1, [pc, #2708]	; 2c358 <main@@Base+0x111c>
   2b8c0:	add	r1, pc, r1
   2b8c4:	ldr	r0, [fp, #-12]
   2b8c8:	bl	29ba4 <test_json@@Base>
   2b8cc:	mov	r2, r0
   2b8d0:	ldr	r3, [fp, #-8]
   2b8d4:	orr	r3, r3, r2
   2b8d8:	str	r3, [fp, #-8]
   2b8dc:	mov	r3, #604	; 0x25c
   2b8e0:	str	r3, [sp, #8]
   2b8e4:	mov	r3, #0
   2b8e8:	str	r3, [sp, #4]
   2b8ec:	mov	r3, #0
   2b8f0:	str	r3, [sp]
   2b8f4:	mov	r3, #0
   2b8f8:	ldr	r2, [pc, #2652]	; 2c35c <main@@Base+0x1120>
   2b8fc:	add	r2, pc, r2
   2b900:	ldr	r1, [pc, #2648]	; 2c360 <main@@Base+0x1124>
   2b904:	add	r1, pc, r1
   2b908:	ldr	r0, [fp, #-12]
   2b90c:	bl	29ba4 <test_json@@Base>
   2b910:	mov	r2, r0
   2b914:	ldr	r3, [fp, #-8]
   2b918:	orr	r3, r3, r2
   2b91c:	str	r3, [fp, #-8]
   2b920:	ldr	r3, [pc, #2620]	; 2c364 <main@@Base+0x1128>
   2b924:	str	r3, [sp, #8]
   2b928:	mov	r3, #0
   2b92c:	str	r3, [sp, #4]
   2b930:	mov	r3, #0
   2b934:	str	r3, [sp]
   2b938:	mov	r3, #0
   2b93c:	ldr	r2, [pc, #2596]	; 2c368 <main@@Base+0x112c>
   2b940:	add	r2, pc, r2
   2b944:	ldr	r1, [pc, #2592]	; 2c36c <main@@Base+0x1130>
   2b948:	add	r1, pc, r1
   2b94c:	ldr	r0, [fp, #-12]
   2b950:	bl	29ba4 <test_json@@Base>
   2b954:	mov	r2, r0
   2b958:	ldr	r3, [fp, #-8]
   2b95c:	orr	r3, r3, r2
   2b960:	str	r3, [fp, #-8]
   2b964:	ldr	r3, [pc, #2564]	; 2c370 <main@@Base+0x1134>
   2b968:	str	r3, [sp, #8]
   2b96c:	mov	r3, #0
   2b970:	str	r3, [sp, #4]
   2b974:	mov	r3, #0
   2b978:	str	r3, [sp]
   2b97c:	mov	r3, #0
   2b980:	ldr	r2, [pc, #2540]	; 2c374 <main@@Base+0x1138>
   2b984:	add	r2, pc, r2
   2b988:	ldr	r1, [pc, #2536]	; 2c378 <main@@Base+0x113c>
   2b98c:	add	r1, pc, r1
   2b990:	ldr	r0, [fp, #-12]
   2b994:	bl	29ba4 <test_json@@Base>
   2b998:	mov	r2, r0
   2b99c:	ldr	r3, [fp, #-8]
   2b9a0:	orr	r3, r3, r2
   2b9a4:	str	r3, [fp, #-8]
   2b9a8:	ldr	r3, [pc, #2508]	; 2c37c <main@@Base+0x1140>
   2b9ac:	str	r3, [sp, #8]
   2b9b0:	mov	r3, #0
   2b9b4:	str	r3, [sp, #4]
   2b9b8:	mov	r3, #0
   2b9bc:	str	r3, [sp]
   2b9c0:	mov	r3, #0
   2b9c4:	ldr	r2, [pc, #2484]	; 2c380 <main@@Base+0x1144>
   2b9c8:	add	r2, pc, r2
   2b9cc:	ldr	r1, [pc, #2480]	; 2c384 <main@@Base+0x1148>
   2b9d0:	add	r1, pc, r1
   2b9d4:	ldr	r0, [fp, #-12]
   2b9d8:	bl	29ba4 <test_json@@Base>
   2b9dc:	mov	r2, r0
   2b9e0:	ldr	r3, [fp, #-8]
   2b9e4:	orr	r3, r3, r2
   2b9e8:	str	r3, [fp, #-8]
   2b9ec:	mov	r3, #616	; 0x268
   2b9f0:	str	r3, [sp, #8]
   2b9f4:	mov	r3, #0
   2b9f8:	str	r3, [sp, #4]
   2b9fc:	mov	r3, #0
   2ba00:	str	r3, [sp]
   2ba04:	mov	r3, #0
   2ba08:	ldr	r2, [pc, #2424]	; 2c388 <main@@Base+0x114c>
   2ba0c:	add	r2, pc, r2
   2ba10:	ldr	r1, [pc, #2420]	; 2c38c <main@@Base+0x1150>
   2ba14:	add	r1, pc, r1
   2ba18:	ldr	r0, [fp, #-12]
   2ba1c:	bl	29ba4 <test_json@@Base>
   2ba20:	mov	r2, r0
   2ba24:	ldr	r3, [fp, #-8]
   2ba28:	orr	r3, r3, r2
   2ba2c:	str	r3, [fp, #-8]
   2ba30:	ldr	r3, [pc, #2392]	; 2c390 <main@@Base+0x1154>
   2ba34:	str	r3, [sp, #8]
   2ba38:	mov	r3, #0
   2ba3c:	str	r3, [sp, #4]
   2ba40:	mov	r3, #0
   2ba44:	str	r3, [sp]
   2ba48:	mov	r3, #0
   2ba4c:	ldr	r2, [pc, #2368]	; 2c394 <main@@Base+0x1158>
   2ba50:	add	r2, pc, r2
   2ba54:	ldr	r1, [pc, #2364]	; 2c398 <main@@Base+0x115c>
   2ba58:	add	r1, pc, r1
   2ba5c:	ldr	r0, [fp, #-12]
   2ba60:	bl	29ba4 <test_json@@Base>
   2ba64:	mov	r2, r0
   2ba68:	ldr	r3, [fp, #-8]
   2ba6c:	orr	r3, r3, r2
   2ba70:	str	r3, [fp, #-8]
   2ba74:	ldr	r3, [pc, #2336]	; 2c39c <main@@Base+0x1160>
   2ba78:	str	r3, [sp, #8]
   2ba7c:	mov	r3, #0
   2ba80:	str	r3, [sp, #4]
   2ba84:	mov	r3, #0
   2ba88:	str	r3, [sp]
   2ba8c:	mov	r3, #0
   2ba90:	ldr	r2, [pc, #2312]	; 2c3a0 <main@@Base+0x1164>
   2ba94:	add	r2, pc, r2
   2ba98:	ldr	r1, [pc, #2308]	; 2c3a4 <main@@Base+0x1168>
   2ba9c:	add	r1, pc, r1
   2baa0:	ldr	r0, [fp, #-12]
   2baa4:	bl	29ba4 <test_json@@Base>
   2baa8:	mov	r2, r0
   2baac:	ldr	r3, [fp, #-8]
   2bab0:	orr	r3, r3, r2
   2bab4:	str	r3, [fp, #-8]
   2bab8:	ldr	r3, [pc, #2280]	; 2c3a8 <main@@Base+0x116c>
   2babc:	str	r3, [sp, #8]
   2bac0:	mov	r3, #0
   2bac4:	str	r3, [sp, #4]
   2bac8:	mov	r3, #0
   2bacc:	str	r3, [sp]
   2bad0:	mov	r3, #0
   2bad4:	ldr	r2, [pc, #2256]	; 2c3ac <main@@Base+0x1170>
   2bad8:	add	r2, pc, r2
   2badc:	ldr	r1, [pc, #2252]	; 2c3b0 <main@@Base+0x1174>
   2bae0:	add	r1, pc, r1
   2bae4:	ldr	r0, [fp, #-12]
   2bae8:	bl	29ba4 <test_json@@Base>
   2baec:	mov	r2, r0
   2baf0:	ldr	r3, [fp, #-8]
   2baf4:	orr	r3, r3, r2
   2baf8:	str	r3, [fp, #-8]
   2bafc:	mov	r3, #628	; 0x274
   2bb00:	str	r3, [sp, #8]
   2bb04:	mov	r3, #0
   2bb08:	str	r3, [sp, #4]
   2bb0c:	mov	r3, #0
   2bb10:	str	r3, [sp]
   2bb14:	mov	r3, #0
   2bb18:	ldr	r2, [pc, #2196]	; 2c3b4 <main@@Base+0x1178>
   2bb1c:	add	r2, pc, r2
   2bb20:	ldr	r1, [pc, #2192]	; 2c3b8 <main@@Base+0x117c>
   2bb24:	add	r1, pc, r1
   2bb28:	ldr	r0, [fp, #-12]
   2bb2c:	bl	29ba4 <test_json@@Base>
   2bb30:	mov	r2, r0
   2bb34:	ldr	r3, [fp, #-8]
   2bb38:	orr	r3, r3, r2
   2bb3c:	str	r3, [fp, #-8]
   2bb40:	ldr	r3, [pc, #2164]	; 2c3bc <main@@Base+0x1180>
   2bb44:	str	r3, [sp, #8]
   2bb48:	mov	r3, #0
   2bb4c:	str	r3, [sp, #4]
   2bb50:	mov	r3, #0
   2bb54:	str	r3, [sp]
   2bb58:	mov	r3, #0
   2bb5c:	ldr	r2, [pc, #2140]	; 2c3c0 <main@@Base+0x1184>
   2bb60:	add	r2, pc, r2
   2bb64:	ldr	r1, [pc, #2136]	; 2c3c4 <main@@Base+0x1188>
   2bb68:	add	r1, pc, r1
   2bb6c:	ldr	r0, [fp, #-12]
   2bb70:	bl	29ba4 <test_json@@Base>
   2bb74:	mov	r2, r0
   2bb78:	ldr	r3, [fp, #-8]
   2bb7c:	orr	r3, r3, r2
   2bb80:	str	r3, [fp, #-8]
   2bb84:	ldr	r3, [pc, #2108]	; 2c3c8 <main@@Base+0x118c>
   2bb88:	str	r3, [sp, #8]
   2bb8c:	mov	r3, #0
   2bb90:	str	r3, [sp, #4]
   2bb94:	mov	r3, #0
   2bb98:	str	r3, [sp]
   2bb9c:	mov	r3, #0
   2bba0:	ldr	r2, [pc, #2084]	; 2c3cc <main@@Base+0x1190>
   2bba4:	add	r2, pc, r2
   2bba8:	ldr	r1, [pc, #2080]	; 2c3d0 <main@@Base+0x1194>
   2bbac:	add	r1, pc, r1
   2bbb0:	ldr	r0, [fp, #-12]
   2bbb4:	bl	29ba4 <test_json@@Base>
   2bbb8:	mov	r2, r0
   2bbbc:	ldr	r3, [fp, #-8]
   2bbc0:	orr	r3, r3, r2
   2bbc4:	str	r3, [fp, #-8]
   2bbc8:	ldr	r3, [pc, #2052]	; 2c3d4 <main@@Base+0x1198>
   2bbcc:	str	r3, [sp, #8]
   2bbd0:	mov	r3, #0
   2bbd4:	str	r3, [sp, #4]
   2bbd8:	mov	r3, #0
   2bbdc:	str	r3, [sp]
   2bbe0:	mov	r3, #0
   2bbe4:	ldr	r2, [pc, #2028]	; 2c3d8 <main@@Base+0x119c>
   2bbe8:	add	r2, pc, r2
   2bbec:	ldr	r1, [pc, #2024]	; 2c3dc <main@@Base+0x11a0>
   2bbf0:	add	r1, pc, r1
   2bbf4:	ldr	r0, [fp, #-12]
   2bbf8:	bl	29ba4 <test_json@@Base>
   2bbfc:	mov	r2, r0
   2bc00:	ldr	r3, [fp, #-8]
   2bc04:	orr	r3, r3, r2
   2bc08:	str	r3, [fp, #-8]
   2bc0c:	ldr	r3, [pc, #1996]	; 2c3e0 <main@@Base+0x11a4>
   2bc10:	str	r3, [sp, #8]
   2bc14:	mov	r3, #0
   2bc18:	str	r3, [sp, #4]
   2bc1c:	mov	r3, #0
   2bc20:	str	r3, [sp]
   2bc24:	mov	r3, #0
   2bc28:	ldr	r2, [pc, #1972]	; 2c3e4 <main@@Base+0x11a8>
   2bc2c:	add	r2, pc, r2
   2bc30:	ldr	r1, [pc, #1968]	; 2c3e8 <main@@Base+0x11ac>
   2bc34:	add	r1, pc, r1
   2bc38:	ldr	r0, [fp, #-12]
   2bc3c:	bl	29ba4 <test_json@@Base>
   2bc40:	mov	r2, r0
   2bc44:	ldr	r3, [fp, #-8]
   2bc48:	orr	r3, r3, r2
   2bc4c:	str	r3, [fp, #-8]
   2bc50:	ldr	r3, [pc, #1940]	; 2c3ec <main@@Base+0x11b0>
   2bc54:	str	r3, [sp, #8]
   2bc58:	mov	r3, #0
   2bc5c:	str	r3, [sp, #4]
   2bc60:	mov	r3, #0
   2bc64:	str	r3, [sp]
   2bc68:	mov	r3, #0
   2bc6c:	ldr	r2, [pc, #1916]	; 2c3f0 <main@@Base+0x11b4>
   2bc70:	add	r2, pc, r2
   2bc74:	ldr	r1, [pc, #1912]	; 2c3f4 <main@@Base+0x11b8>
   2bc78:	add	r1, pc, r1
   2bc7c:	ldr	r0, [fp, #-12]
   2bc80:	bl	29ba4 <test_json@@Base>
   2bc84:	mov	r2, r0
   2bc88:	ldr	r3, [fp, #-8]
   2bc8c:	orr	r3, r3, r2
   2bc90:	str	r3, [fp, #-8]
   2bc94:	ldr	r3, [pc, #1884]	; 2c3f8 <main@@Base+0x11bc>
   2bc98:	str	r3, [sp, #8]
   2bc9c:	mov	r3, #0
   2bca0:	str	r3, [sp, #4]
   2bca4:	mov	r3, #0
   2bca8:	str	r3, [sp]
   2bcac:	mov	r3, #0
   2bcb0:	ldr	r2, [pc, #1860]	; 2c3fc <main@@Base+0x11c0>
   2bcb4:	add	r2, pc, r2
   2bcb8:	ldr	r1, [pc, #1856]	; 2c400 <main@@Base+0x11c4>
   2bcbc:	add	r1, pc, r1
   2bcc0:	ldr	r0, [fp, #-12]
   2bcc4:	bl	29ba4 <test_json@@Base>
   2bcc8:	mov	r2, r0
   2bccc:	ldr	r3, [fp, #-8]
   2bcd0:	orr	r3, r3, r2
   2bcd4:	str	r3, [fp, #-8]
   2bcd8:	ldr	r3, [pc, #1828]	; 2c404 <main@@Base+0x11c8>
   2bcdc:	str	r3, [sp, #8]
   2bce0:	mov	r3, #0
   2bce4:	str	r3, [sp, #4]
   2bce8:	mov	r3, #0
   2bcec:	str	r3, [sp]
   2bcf0:	mov	r3, #0
   2bcf4:	ldr	r2, [pc, #1804]	; 2c408 <main@@Base+0x11cc>
   2bcf8:	add	r2, pc, r2
   2bcfc:	ldr	r1, [pc, #1800]	; 2c40c <main@@Base+0x11d0>
   2bd00:	add	r1, pc, r1
   2bd04:	ldr	r0, [fp, #-12]
   2bd08:	bl	29ba4 <test_json@@Base>
   2bd0c:	mov	r2, r0
   2bd10:	ldr	r3, [fp, #-8]
   2bd14:	orr	r3, r3, r2
   2bd18:	str	r3, [fp, #-8]
   2bd1c:	mov	r3, #656	; 0x290
   2bd20:	str	r3, [sp, #8]
   2bd24:	mov	r3, #0
   2bd28:	str	r3, [sp, #4]
   2bd2c:	mov	r3, #0
   2bd30:	str	r3, [sp]
   2bd34:	mov	r3, #0
   2bd38:	ldr	r2, [pc, #1744]	; 2c410 <main@@Base+0x11d4>
   2bd3c:	add	r2, pc, r2
   2bd40:	ldr	r1, [pc, #1740]	; 2c414 <main@@Base+0x11d8>
   2bd44:	add	r1, pc, r1
   2bd48:	ldr	r0, [fp, #-12]
   2bd4c:	bl	29ba4 <test_json@@Base>
   2bd50:	mov	r2, r0
   2bd54:	ldr	r3, [fp, #-8]
   2bd58:	orr	r3, r3, r2
   2bd5c:	str	r3, [fp, #-8]
   2bd60:	ldr	r3, [pc, #1712]	; 2c418 <main@@Base+0x11dc>
   2bd64:	str	r3, [sp, #8]
   2bd68:	mov	r3, #0
   2bd6c:	str	r3, [sp, #4]
   2bd70:	mov	r3, #0
   2bd74:	str	r3, [sp]
   2bd78:	mov	r3, #0
   2bd7c:	ldr	r2, [pc, #1688]	; 2c41c <main@@Base+0x11e0>
   2bd80:	add	r2, pc, r2
   2bd84:	ldr	r1, [pc, #1684]	; 2c420 <main@@Base+0x11e4>
   2bd88:	add	r1, pc, r1
   2bd8c:	ldr	r0, [fp, #-12]
   2bd90:	bl	29ba4 <test_json@@Base>
   2bd94:	mov	r2, r0
   2bd98:	ldr	r3, [fp, #-8]
   2bd9c:	orr	r3, r3, r2
   2bda0:	str	r3, [fp, #-8]
   2bda4:	ldr	r3, [pc, #1656]	; 2c424 <main@@Base+0x11e8>
   2bda8:	str	r3, [sp, #8]
   2bdac:	mov	r3, #0
   2bdb0:	str	r3, [sp, #4]
   2bdb4:	mov	r3, #0
   2bdb8:	str	r3, [sp]
   2bdbc:	mov	r3, #0
   2bdc0:	ldr	r2, [pc, #1632]	; 2c428 <main@@Base+0x11ec>
   2bdc4:	add	r2, pc, r2
   2bdc8:	ldr	r1, [pc, #1628]	; 2c42c <main@@Base+0x11f0>
   2bdcc:	add	r1, pc, r1
   2bdd0:	ldr	r0, [fp, #-12]
   2bdd4:	bl	29ba4 <test_json@@Base>
   2bdd8:	mov	r2, r0
   2bddc:	ldr	r3, [fp, #-8]
   2bde0:	orr	r3, r3, r2
   2bde4:	str	r3, [fp, #-8]
   2bde8:	ldr	r3, [pc, #1600]	; 2c430 <main@@Base+0x11f4>
   2bdec:	str	r3, [sp, #8]
   2bdf0:	mov	r3, #0
   2bdf4:	str	r3, [sp, #4]
   2bdf8:	mov	r3, #0
   2bdfc:	str	r3, [sp]
   2be00:	mov	r3, #0
   2be04:	ldr	r2, [pc, #1576]	; 2c434 <main@@Base+0x11f8>
   2be08:	add	r2, pc, r2
   2be0c:	ldr	r1, [pc, #1572]	; 2c438 <main@@Base+0x11fc>
   2be10:	add	r1, pc, r1
   2be14:	ldr	r0, [fp, #-12]
   2be18:	bl	29ba4 <test_json@@Base>
   2be1c:	mov	r2, r0
   2be20:	ldr	r3, [fp, #-8]
   2be24:	orr	r3, r3, r2
   2be28:	str	r3, [fp, #-8]
   2be2c:	mov	r3, #668	; 0x29c
   2be30:	str	r3, [sp, #8]
   2be34:	mov	r3, #0
   2be38:	str	r3, [sp, #4]
   2be3c:	mov	r3, #0
   2be40:	str	r3, [sp]
   2be44:	mov	r3, #0
   2be48:	ldr	r2, [pc, #1516]	; 2c43c <main@@Base+0x1200>
   2be4c:	add	r2, pc, r2
   2be50:	ldr	r1, [pc, #1512]	; 2c440 <main@@Base+0x1204>
   2be54:	add	r1, pc, r1
   2be58:	ldr	r0, [fp, #-12]
   2be5c:	bl	29ba4 <test_json@@Base>
   2be60:	mov	r2, r0
   2be64:	ldr	r3, [fp, #-8]
   2be68:	orr	r3, r3, r2
   2be6c:	str	r3, [fp, #-8]
   2be70:	ldr	r3, [pc, #1484]	; 2c444 <main@@Base+0x1208>
   2be74:	str	r3, [sp, #8]
   2be78:	mov	r3, #0
   2be7c:	str	r3, [sp, #4]
   2be80:	mov	r3, #0
   2be84:	str	r3, [sp]
   2be88:	mov	r3, #0
   2be8c:	ldr	r2, [pc, #1460]	; 2c448 <main@@Base+0x120c>
   2be90:	add	r2, pc, r2
   2be94:	ldr	r1, [pc, #1456]	; 2c44c <main@@Base+0x1210>
   2be98:	add	r1, pc, r1
   2be9c:	ldr	r0, [fp, #-12]
   2bea0:	bl	29ba4 <test_json@@Base>
   2bea4:	mov	r2, r0
   2bea8:	ldr	r3, [fp, #-8]
   2beac:	orr	r3, r3, r2
   2beb0:	str	r3, [fp, #-8]
   2beb4:	ldr	r3, [pc, #1428]	; 2c450 <main@@Base+0x1214>
   2beb8:	str	r3, [sp, #8]
   2bebc:	mov	r3, #0
   2bec0:	str	r3, [sp, #4]
   2bec4:	mov	r3, #0
   2bec8:	str	r3, [sp]
   2becc:	mov	r3, #0
   2bed0:	ldr	r2, [pc, #1404]	; 2c454 <main@@Base+0x1218>
   2bed4:	add	r2, pc, r2
   2bed8:	ldr	r1, [pc, #1400]	; 2c458 <main@@Base+0x121c>
   2bedc:	add	r1, pc, r1
   2bee0:	ldr	r0, [fp, #-12]
   2bee4:	bl	29ba4 <test_json@@Base>
   2bee8:	mov	r2, r0
   2beec:	ldr	r3, [fp, #-8]
   2bef0:	orr	r3, r3, r2
   2bef4:	str	r3, [fp, #-8]
   2bef8:	ldr	r3, [pc, #1372]	; 2c45c <main@@Base+0x1220>
   2befc:	str	r3, [sp, #8]
   2bf00:	mov	r3, #0
   2bf04:	str	r3, [sp, #4]
   2bf08:	mov	r3, #0
   2bf0c:	str	r3, [sp]
   2bf10:	mov	r3, #0
   2bf14:	ldr	r2, [pc, #1348]	; 2c460 <main@@Base+0x1224>
   2bf18:	add	r2, pc, r2
   2bf1c:	ldr	r1, [pc, #1344]	; 2c464 <main@@Base+0x1228>
   2bf20:	add	r1, pc, r1
   2bf24:	ldr	r0, [fp, #-12]
   2bf28:	bl	29ba4 <test_json@@Base>
   2bf2c:	mov	r2, r0
   2bf30:	ldr	r3, [fp, #-8]
   2bf34:	orr	r3, r3, r2
   2bf38:	str	r3, [fp, #-8]
   2bf3c:	mov	r3, #680	; 0x2a8
   2bf40:	str	r3, [sp, #8]
   2bf44:	mov	r3, #0
   2bf48:	str	r3, [sp, #4]
   2bf4c:	mov	r3, #0
   2bf50:	str	r3, [sp]
   2bf54:	mov	r3, #0
   2bf58:	ldr	r2, [pc, #1288]	; 2c468 <main@@Base+0x122c>
   2bf5c:	add	r2, pc, r2
   2bf60:	ldr	r1, [pc, #1284]	; 2c46c <main@@Base+0x1230>
   2bf64:	add	r1, pc, r1
   2bf68:	ldr	r0, [fp, #-12]
   2bf6c:	bl	29ba4 <test_json@@Base>
   2bf70:	mov	r2, r0
   2bf74:	ldr	r3, [fp, #-8]
   2bf78:	orr	r3, r3, r2
   2bf7c:	str	r3, [fp, #-8]
   2bf80:	ldr	r3, [pc, #1256]	; 2c470 <main@@Base+0x1234>
   2bf84:	str	r3, [sp, #8]
   2bf88:	mov	r3, #0
   2bf8c:	str	r3, [sp, #4]
   2bf90:	mov	r3, #0
   2bf94:	str	r3, [sp]
   2bf98:	mov	r3, #0
   2bf9c:	ldr	r2, [pc, #1232]	; 2c474 <main@@Base+0x1238>
   2bfa0:	add	r2, pc, r2
   2bfa4:	ldr	r1, [pc, #1228]	; 2c478 <main@@Base+0x123c>
   2bfa8:	add	r1, pc, r1
   2bfac:	ldr	r0, [fp, #-12]
   2bfb0:	bl	29ba4 <test_json@@Base>
   2bfb4:	mov	r2, r0
   2bfb8:	ldr	r3, [fp, #-8]
   2bfbc:	orr	r3, r3, r2
   2bfc0:	str	r3, [fp, #-8]
   2bfc4:	ldr	r3, [pc, #1200]	; 2c47c <main@@Base+0x1240>
   2bfc8:	str	r3, [sp, #8]
   2bfcc:	mov	r3, #0
   2bfd0:	str	r3, [sp, #4]
   2bfd4:	mov	r3, #0
   2bfd8:	str	r3, [sp]
   2bfdc:	mov	r3, #0
   2bfe0:	ldr	r2, [pc, #1176]	; 2c480 <main@@Base+0x1244>
   2bfe4:	add	r2, pc, r2
   2bfe8:	ldr	r1, [pc, #1172]	; 2c484 <main@@Base+0x1248>
   2bfec:	add	r1, pc, r1
   2bff0:	ldr	r0, [fp, #-12]
   2bff4:	bl	29ba4 <test_json@@Base>
   2bff8:	mov	r2, r0
   2bffc:	ldr	r3, [fp, #-8]
   2c000:	orr	r3, r3, r2
   2c004:	str	r3, [fp, #-8]
   2c008:	ldr	r3, [pc, #1144]	; 2c488 <main@@Base+0x124c>
   2c00c:	str	r3, [sp, #8]
   2c010:	mov	r3, #0
   2c014:	str	r3, [sp, #4]
   2c018:	mov	r3, #0
   2c01c:	str	r3, [sp]
   2c020:	mov	r3, #0
   2c024:	ldr	r2, [pc, #1120]	; 2c48c <main@@Base+0x1250>
   2c028:	add	r2, pc, r2
   2c02c:	ldr	r1, [pc, #1116]	; 2c490 <main@@Base+0x1254>
   2c030:	add	r1, pc, r1
   2c034:	ldr	r0, [fp, #-12]
   2c038:	bl	29ba4 <test_json@@Base>
   2c03c:	mov	r2, r0
   2c040:	ldr	r3, [fp, #-8]
   2c044:	orr	r3, r3, r2
   2c048:	str	r3, [fp, #-8]
   2c04c:	ldr	r3, [pc, #1088]	; 2c494 <main@@Base+0x1258>
   2c050:	str	r3, [sp, #8]
   2c054:	mov	r3, #0
   2c058:	str	r3, [sp, #4]
   2c05c:	mov	r3, #0
   2c060:	str	r3, [sp]
   2c064:	mov	r3, #0
   2c068:	ldr	r2, [pc, #1064]	; 2c498 <main@@Base+0x125c>
   2c06c:	add	r2, pc, r2
   2c070:	ldr	r1, [pc, #1060]	; 2c49c <main@@Base+0x1260>
   2c074:	add	r1, pc, r1
   2c078:	ldr	r0, [fp, #-12]
   2c07c:	bl	29ba4 <test_json@@Base>
   2c080:	mov	r2, r0
   2c084:	ldr	r3, [fp, #-8]
   2c088:	orr	r3, r3, r2
   2c08c:	str	r3, [fp, #-8]
   2c090:	ldr	r3, [pc, #1032]	; 2c4a0 <main@@Base+0x1264>
   2c094:	str	r3, [sp, #8]
   2c098:	mov	r3, #0
   2c09c:	str	r3, [sp, #4]
   2c0a0:	mov	r3, #0
   2c0a4:	str	r3, [sp]
   2c0a8:	mov	r3, #0
   2c0ac:	ldr	r2, [pc, #1008]	; 2c4a4 <main@@Base+0x1268>
   2c0b0:	add	r2, pc, r2
   2c0b4:	ldr	r1, [pc, #1004]	; 2c4a8 <main@@Base+0x126c>
   2c0b8:	add	r1, pc, r1
   2c0bc:	ldr	r0, [fp, #-12]
   2c0c0:	bl	29ba4 <test_json@@Base>
   2c0c4:	mov	r2, r0
   2c0c8:	ldr	r3, [fp, #-8]
   2c0cc:	orr	r3, r3, r2
   2c0d0:	str	r3, [fp, #-8]
   2c0d4:	ldr	r3, [pc, #976]	; 2c4ac <main@@Base+0x1270>
   2c0d8:	str	r3, [sp, #8]
   2c0dc:	mov	r3, #0
   2c0e0:	str	r3, [sp, #4]
   2c0e4:	mov	r3, #0
   2c0e8:	str	r3, [sp]
   2c0ec:	mov	r3, #0
   2c0f0:	ldr	r2, [pc, #952]	; 2c4b0 <main@@Base+0x1274>
   2c0f4:	add	r2, pc, r2
   2c0f8:	ldr	r1, [pc, #948]	; 2c4b4 <main@@Base+0x1278>
   2c0fc:	add	r1, pc, r1
   2c100:	ldr	r0, [fp, #-12]
   2c104:	bl	29ba4 <test_json@@Base>
   2c108:	mov	r2, r0
   2c10c:	ldr	r3, [fp, #-8]
   2c110:	orr	r3, r3, r2
   2c114:	str	r3, [fp, #-8]
   2c118:	ldr	r3, [pc, #920]	; 2c4b8 <main@@Base+0x127c>
   2c11c:	str	r3, [sp, #8]
   2c120:	mov	r3, #0
   2c124:	str	r3, [sp, #4]
   2c128:	mov	r3, #0
   2c12c:	str	r3, [sp]
   2c130:	mov	r3, #0
   2c134:	ldr	r2, [pc, #896]	; 2c4bc <main@@Base+0x1280>
   2c138:	add	r2, pc, r2
   2c13c:	ldr	r1, [pc, #892]	; 2c4c0 <main@@Base+0x1284>
   2c140:	add	r1, pc, r1
   2c144:	ldr	r0, [fp, #-12]
   2c148:	bl	29ba4 <test_json@@Base>
   2c14c:	mov	r2, r0
   2c150:	ldr	r3, [fp, #-8]
   2c154:	orr	r3, r3, r2
   2c158:	str	r3, [fp, #-8]
   2c15c:	mov	r3, #716	; 0x2cc
   2c160:	str	r3, [sp, #8]
   2c164:	mov	r3, #0
   2c168:	str	r3, [sp, #4]
   2c16c:	mov	r3, #0
   2c170:	str	r3, [sp]
   2c174:	mov	r3, #0
   2c178:	ldr	r2, [pc, #836]	; 2c4c4 <main@@Base+0x1288>
   2c17c:	add	r2, pc, r2
   2c180:	ldr	r1, [pc, #832]	; 2c4c8 <main@@Base+0x128c>
   2c184:	add	r1, pc, r1
   2c188:	ldr	r0, [fp, #-12]
   2c18c:	bl	29ba4 <test_json@@Base>
   2c190:	mov	r2, r0
   2c194:	ldr	r3, [fp, #-8]
   2c198:	orr	r3, r3, r2
   2c19c:	str	r3, [fp, #-8]
   2c1a0:	ldr	r3, [pc, #804]	; 2c4cc <main@@Base+0x1290>
   2c1a4:	str	r3, [sp, #8]
   2c1a8:	mov	r3, #0
   2c1ac:	str	r3, [sp, #4]
   2c1b0:	mov	r3, #0
   2c1b4:	str	r3, [sp]
   2c1b8:	mov	r3, #0
   2c1bc:	ldr	r2, [pc, #780]	; 2c4d0 <main@@Base+0x1294>
   2c1c0:	add	r2, pc, r2
   2c1c4:	ldr	r1, [pc, #776]	; 2c4d4 <main@@Base+0x1298>
   2c1c8:	add	r1, pc, r1
   2c1cc:	ldr	r0, [fp, #-12]
   2c1d0:	bl	29ba4 <test_json@@Base>
   2c1d4:	mov	r2, r0
   2c1d8:	ldr	r3, [fp, #-8]
   2c1dc:	orr	r3, r3, r2
   2c1e0:	str	r3, [fp, #-8]
   2c1e4:	ldr	r3, [pc, #748]	; 2c4d8 <main@@Base+0x129c>
   2c1e8:	str	r3, [sp, #8]
   2c1ec:	mov	r3, #0
   2c1f0:	str	r3, [sp, #4]
   2c1f4:	mov	r3, #0
   2c1f8:	str	r3, [sp]
   2c1fc:	mov	r3, #0
   2c200:	ldr	r2, [pc, #724]	; 2c4dc <main@@Base+0x12a0>
   2c204:	add	r2, pc, r2
   2c208:	ldr	r1, [pc, #720]	; 2c4e0 <main@@Base+0x12a4>
   2c20c:	add	r1, pc, r1
   2c210:	ldr	r0, [fp, #-12]
   2c214:	bl	29ba4 <test_json@@Base>
   2c218:	mov	r2, r0
   2c21c:	ldr	r3, [fp, #-8]
   2c220:	orr	r3, r3, r2
   2c224:	str	r3, [fp, #-8]
   2c228:	ldr	r3, [pc, #692]	; 2c4e4 <main@@Base+0x12a8>
   2c22c:	str	r3, [sp, #8]
   2c230:	mov	r3, #0
   2c234:	str	r3, [sp, #4]
   2c238:	mov	r3, #0
   2c23c:	str	r3, [sp]
   2c240:	mov	r3, #0
   2c244:	ldr	r2, [pc, #668]	; 2c4e8 <main@@Base+0x12ac>
   2c248:	add	r2, pc, r2
   2c24c:	b	2c560 <main@@Base+0x1324>
   2c250:	andeq	r8, r3, ip, lsl #25
   2c254:	andeq	r0, r0, sp, lsl #4
   2c258:	andeq	r1, r2, ip, lsl #24
   2c25c:			; <UNDEFINED> instruction: 0x00023db8
   2c260:	muleq	r2, r4, sp
   2c264:			; <UNDEFINED> instruction: 0x00023db0
   2c268:	andeq	r0, r0, r3, lsl r2
   2c26c:	muleq	r2, ip, sp
   2c270:			; <UNDEFINED> instruction: 0x00023db8
   2c274:	andeq	r0, r0, r6, lsl r2
   2c278:	andeq	r3, r2, r4, lsr #27
   2c27c:	andeq	r3, r2, r8, asr #27
   2c280:	andeq	r0, r0, r9, lsl r2
   2c284:	andeq	r3, r2, r0, ror #26
   2c288:			; <UNDEFINED> instruction: 0x00023db8
   2c28c:	andeq	r3, r2, r4, lsl #25
   2c290:			; <UNDEFINED> instruction: 0x00023db0
   2c294:	andeq	r0, r0, pc, lsl r2
   2c298:	andeq	r3, r2, ip, lsl #25
   2c29c:	muleq	r2, r4, sp
   2c2a0:	andeq	r0, r0, r3, lsr #4
   2c2a4:	andeq	r1, r2, r0, lsr sl
   2c2a8:	andeq	r3, r2, ip, ror sp
   2c2ac:	andeq	r0, r0, r7, lsr #4
   2c2b0:	andeq	r1, r2, ip, ror #19
   2c2b4:	andeq	r1, r2, r8, ror r9
   2c2b8:	andeq	r0, r0, fp, lsr #4
   2c2bc:	andeq	r1, r2, r8, lsr #19
   2c2c0:	andeq	r3, r2, ip, lsl sp
   2c2c4:	andeq	r0, r0, lr, lsr #4
   2c2c8:	andeq	r3, r2, r0, lsr fp
   2c2cc:	strdeq	r3, [r2], -r0
   2c2d0:	andeq	r0, r0, r1, lsr r2
   2c2d4:	andeq	r3, r2, r8, lsr fp
   2c2d8:	ldrdeq	r3, [r2], -r0
   2c2dc:	andeq	r3, r2, r0, asr #22
   2c2e0:			; <UNDEFINED> instruction: 0x00023cb0
   2c2e4:	andeq	r0, r0, r7, lsr r2
   2c2e8:	strdeq	r3, [r2], -ip
   2c2ec:	muleq	r2, ip, ip
   2c2f0:	andeq	r0, r0, sl, lsr r2
   2c2f4:	andeq	r3, r2, r0, lsr #20
   2c2f8:	muleq	r2, r0, ip
   2c2fc:	andeq	r0, r0, sp, lsr r2
   2c300:	andeq	r3, r2, r8, lsr #20
   2c304:	andeq	r3, r2, ip, ror #24
   2c308:	andeq	r0, r0, r1, asr #4
   2c30c:	andeq	r1, r2, ip, asr #15
   2c310:	andeq	r3, r2, ip, asr #24
   2c314:	andeq	r0, r0, r5, asr #4
   2c318:	andeq	r1, r2, r8, lsl #15
   2c31c:	ldrdeq	r1, [r2], -r0
   2c320:	andeq	r0, r0, r9, asr #4
   2c324:	strdeq	r3, [r2], -r0
   2c328:	andeq	r3, r2, r0, lsl ip
   2c32c:	andeq	r0, r0, pc, asr #4
   2c330:	andeq	r3, r2, ip, lsr #23
   2c334:	strdeq	r3, [r2], -r4
   2c338:	andeq	r0, r0, r2, asr r2
   2c33c:	andeq	r3, r2, r8, ror #22
   2c340:	ldrdeq	r3, [r2], -r8
   2c344:	andeq	r0, r0, r5, asr r2
   2c348:	ldrdeq	r3, [r2], -ip
   2c34c:			; <UNDEFINED> instruction: 0x00023bbc
   2c350:	andeq	r0, r0, r9, asr r2
   2c354:	andeq	r3, r2, r0, lsl #16
   2c358:	andeq	r3, r2, r8, lsr #23
   2c35c:	andeq	r3, r2, r8, lsl #16
   2c360:	andeq	r3, r2, r8, lsl #23
   2c364:	andeq	r0, r0, pc, asr r2
   2c368:	andeq	r3, r2, r0, ror fp
   2c36c:	muleq	r2, r0, fp
   2c370:	andeq	r0, r0, r2, ror #4
   2c374:	andeq	r3, r2, ip, asr #15
   2c378:	andeq	r3, r2, r0, ror fp
   2c37c:	andeq	r0, r0, r5, ror #4
   2c380:	andeq	r3, r2, r8, asr fp
   2c384:	andeq	r3, r2, r0, ror fp
   2c388:	andeq	r3, r2, r8, asr fp
   2c38c:	andeq	r3, r2, r0, ror fp
   2c390:	andeq	r0, r0, fp, ror #4
   2c394:	andeq	r3, r2, r8, asr fp
   2c398:	andeq	r3, r2, r0, ror fp
   2c39c:	andeq	r0, r0, lr, ror #4
   2c3a0:	andeq	r3, r2, r4, lsr #12
   2c3a4:	andeq	r3, r2, r0, asr fp
   2c3a8:	andeq	r0, r0, r1, ror r2
   2c3ac:	andeq	r3, r2, r0, ror #11
   2c3b0:	andeq	r3, r2, r8, lsr fp
   2c3b4:	andeq	r3, r2, r8, lsr fp
   2c3b8:	andeq	r3, r2, ip, asr #22
   2c3bc:	andeq	r0, r0, r7, ror r2
   2c3c0:	strdeq	r3, [r2], -r4
   2c3c4:	andeq	r3, r2, r8, lsl #22
   2c3c8:	andeq	r0, r0, sl, ror r2
   2c3cc:	strdeq	r3, [r2], -r8
   2c3d0:	andeq	r3, r2, r8, lsr fp
   2c3d4:	andeq	r0, r0, lr, ror r2
   2c3d8:	andeq	r3, r2, r0, asr fp
   2c3dc:	muleq	r2, r4, fp
   2c3e0:	andeq	r0, r0, r2, lsl #5
   2c3e4:			; <UNDEFINED> instruction: 0x00023bb0
   2c3e8:	andeq	r3, r2, ip, lsl #24
   2c3ec:	andeq	r0, r0, r6, lsl #5
   2c3f0:	andeq	r1, r2, ip, ror r2
   2c3f4:	andeq	r3, r2, r8, lsr ip
   2c3f8:	andeq	r0, r0, r9, lsl #5
   2c3fc:	andeq	r1, r2, r8, lsr r2
   2c400:	andeq	r3, r2, r0, lsr #24
   2c404:	andeq	r0, r0, sp, lsl #5
   2c408:	andeq	r3, r2, r0, asr #7
   2c40c:	andeq	r3, r2, r4, lsl #24
   2c410:	andeq	r3, r2, r8, asr #7
   2c414:	andeq	r3, r2, r0, ror #23
   2c418:	muleq	r0, r3, r2
   2c41c:	andeq	r3, r2, r0, lsr r7
   2c420:			; <UNDEFINED> instruction: 0x00023bbc
   2c424:	muleq	r0, r6, r2
   2c428:	andeq	r3, r2, ip, lsl #7
   2c42c:	muleq	r2, r8, fp
   2c430:	muleq	r0, r9, r2
   2c434:	andeq	r3, r2, r8, lsl r7
   2c438:	andeq	r3, r2, r4, ror fp
   2c43c:	andeq	r3, r2, r8, lsl r7
   2c440:	andeq	r3, r2, r0, asr fp
   2c444:	muleq	r0, pc, r2	; <UNPREDICTABLE>
   2c448:	andeq	r3, r2, r8, lsl r7
   2c44c:	andeq	r3, r2, ip, lsr #22
   2c450:	andeq	r0, r0, r2, lsr #5
   2c454:	andeq	r3, r2, r4, ror #3
   2c458:	andeq	r3, r2, r8, lsl #22
   2c45c:	andeq	r0, r0, r5, lsr #5
   2c460:	andeq	r3, r2, r0, lsr #3
   2c464:	andeq	r3, r2, ip, ror #21
   2c468:	strdeq	r3, [r2], -r8
   2c46c:	ldrdeq	r3, [r2], -ip
   2c470:	andeq	r0, r0, fp, lsr #5
   2c474:			; <UNDEFINED> instruction: 0x000236b4
   2c478:	muleq	r2, r8, sl
   2c47c:	andeq	r0, r0, lr, lsr #5
   2c480:			; <UNDEFINED> instruction: 0x000236b8
   2c484:	andeq	r3, r2, r8, ror sl
   2c488:			; <UNDEFINED> instruction: 0x000002b2
   2c48c:	andeq	r3, r2, r0, lsl r7
   2c490:	andeq	r3, r2, ip, ror sl
   2c494:			; <UNDEFINED> instruction: 0x000002b6
   2c498:	andeq	r3, r2, r0, ror r7
   2c49c:	andeq	r3, r2, r4, lsl #21
   2c4a0:			; <UNDEFINED> instruction: 0x000002ba
   2c4a4:	andeq	r0, r2, ip, lsr lr
   2c4a8:	andeq	r3, r2, r0, lsr #21
   2c4ac:			; <UNDEFINED> instruction: 0x000002bd
   2c4b0:	strdeq	r0, [r2], -r8
   2c4b4:	andeq	r3, r2, r4, lsl #21
   2c4b8:	andeq	r0, r0, r7, asr #5
   2c4bc:	andeq	r3, r2, ip, ror #20
   2c4c0:	andeq	r3, r2, r4, asr #21
   2c4c4:	andeq	r3, r2, r8, lsr #20
   2c4c8:	andeq	r3, r2, r0, ror #21
   2c4cc:	ldrdeq	r0, [r0], -fp
   2c4d0:	andeq	r3, r2, r4, lsl fp
   2c4d4:	andeq	r3, r2, ip, lsr fp
   2c4d8:	ldrdeq	r0, [r0], -lr
   2c4dc:	andeq	r3, r2, r0, asr #22
   2c4e0:	andeq	r3, r2, ip, asr #22
   2c4e4:	andeq	r0, r0, r2, ror #5
   2c4e8:	andeq	r3, r2, ip, lsr #22
   2c4ec:	andeq	r3, r2, r4, asr r8
   2c4f0:	andeq	r0, r0, lr, ror #5
   2c4f4:	ldrdeq	r3, [r2], -r4
   2c4f8:	andeq	r3, r2, r8, asr r8
   2c4fc:	strdeq	r0, [r0], -lr
   2c500:			; <UNDEFINED> instruction: 0x000238bc
   2c504:	ldrdeq	r3, [r2], -r8
   2c508:	andeq	r0, r0, r2, lsl #6
   2c50c:	andeq	r3, r2, r4, asr #17
   2c510:	andeq	r3, r2, r8, ror #17
   2c514:	ldrdeq	r3, [r2], -ip
   2c518:	andeq	r3, r2, r4, asr #18
   2c51c:	andeq	r0, r0, sp, lsl #6
   2c520:	andeq	r0, r2, ip, lsr r8
   2c524:	andeq	r3, r2, ip, ror r9
   2c528:	andeq	r0, r0, r2, lsl r3
   2c52c:			; <UNDEFINED> instruction: 0x000239b8
   2c530:	andeq	r3, r2, r0, lsr #20
   2c534:	andeq	r0, r0, r7, lsl r3
   2c538:	andeq	r3, r2, r0, ror #20
   2c53c:	ldrdeq	r3, [r2], -r8
   2c540:	andeq	r3, r2, r8, lsr #22
   2c544:	muleq	r2, r0, fp
   2c548:	andeq	r0, r0, r1, lsr #6
   2c54c:	ldrdeq	r3, [r2], -r0
   2c550:	andeq	r3, r2, r8, asr #24
   2c554:	andeq	r0, r0, r6, lsr #6
   2c558:	muleq	r2, r8, ip
   2c55c:	andeq	r3, r2, r4, lsl sp
   2c560:	ldr	r1, [pc, #-124]	; 2c4ec <main@@Base+0x12b0>
   2c564:	add	r1, pc, r1
   2c568:	ldr	r0, [fp, #-12]
   2c56c:	bl	29ba4 <test_json@@Base>
   2c570:	mov	r2, r0
   2c574:	ldr	r3, [fp, #-8]
   2c578:	orr	r3, r3, r2
   2c57c:	str	r3, [fp, #-8]
   2c580:	ldr	r3, [pc, #-152]	; 2c4f0 <main@@Base+0x12b4>
   2c584:	str	r3, [sp, #8]
   2c588:	mov	r3, #0
   2c58c:	str	r3, [sp, #4]
   2c590:	mov	r3, #0
   2c594:	str	r3, [sp]
   2c598:	mov	r3, #0
   2c59c:	ldr	r2, [pc, #-176]	; 2c4f4 <main@@Base+0x12b8>
   2c5a0:	add	r2, pc, r2
   2c5a4:	ldr	r1, [pc, #-180]	; 2c4f8 <main@@Base+0x12bc>
   2c5a8:	add	r1, pc, r1
   2c5ac:	ldr	r0, [fp, #-12]
   2c5b0:	bl	29ba4 <test_json@@Base>
   2c5b4:	mov	r2, r0
   2c5b8:	ldr	r3, [fp, #-8]
   2c5bc:	orr	r3, r3, r2
   2c5c0:	str	r3, [fp, #-8]
   2c5c4:	ldr	r3, [pc, #-208]	; 2c4fc <main@@Base+0x12c0>
   2c5c8:	str	r3, [sp, #8]
   2c5cc:	mov	r3, #0
   2c5d0:	str	r3, [sp, #4]
   2c5d4:	mov	r3, #0
   2c5d8:	str	r3, [sp]
   2c5dc:	mov	r3, #0
   2c5e0:	ldr	r2, [pc, #-232]	; 2c500 <main@@Base+0x12c4>
   2c5e4:	add	r2, pc, r2
   2c5e8:	ldr	r1, [pc, #-236]	; 2c504 <main@@Base+0x12c8>
   2c5ec:	add	r1, pc, r1
   2c5f0:	ldr	r0, [fp, #-12]
   2c5f4:	bl	29ba4 <test_json@@Base>
   2c5f8:	mov	r2, r0
   2c5fc:	ldr	r3, [fp, #-8]
   2c600:	orr	r3, r3, r2
   2c604:	str	r3, [fp, #-8]
   2c608:	ldr	r3, [pc, #-264]	; 2c508 <main@@Base+0x12cc>
   2c60c:	str	r3, [sp, #8]
   2c610:	mov	r3, #0
   2c614:	str	r3, [sp, #4]
   2c618:	mov	r3, #0
   2c61c:	str	r3, [sp]
   2c620:	mov	r3, #0
   2c624:	ldr	r2, [pc, #-288]	; 2c50c <main@@Base+0x12d0>
   2c628:	add	r2, pc, r2
   2c62c:	ldr	r1, [pc, #-292]	; 2c510 <main@@Base+0x12d4>
   2c630:	add	r1, pc, r1
   2c634:	ldr	r0, [fp, #-12]
   2c638:	bl	29ba4 <test_json@@Base>
   2c63c:	mov	r2, r0
   2c640:	ldr	r3, [fp, #-8]
   2c644:	orr	r3, r3, r2
   2c648:	str	r3, [fp, #-8]
   2c64c:	mov	r3, #776	; 0x308
   2c650:	str	r3, [sp, #8]
   2c654:	mov	r3, #0
   2c658:	str	r3, [sp, #4]
   2c65c:	mov	r3, #0
   2c660:	str	r3, [sp]
   2c664:	mov	r3, #0
   2c668:	ldr	r2, [pc, #-348]	; 2c514 <main@@Base+0x12d8>
   2c66c:	add	r2, pc, r2
   2c670:	ldr	r1, [pc, #-352]	; 2c518 <main@@Base+0x12dc>
   2c674:	add	r1, pc, r1
   2c678:	ldr	r0, [fp, #-12]
   2c67c:	bl	29ba4 <test_json@@Base>
   2c680:	mov	r2, r0
   2c684:	ldr	r3, [fp, #-8]
   2c688:	orr	r3, r3, r2
   2c68c:	str	r3, [fp, #-8]
   2c690:	ldr	r3, [pc, #-380]	; 2c51c <main@@Base+0x12e0>
   2c694:	str	r3, [sp, #8]
   2c698:	mov	r3, #0
   2c69c:	str	r3, [sp, #4]
   2c6a0:	mov	r3, #0
   2c6a4:	str	r3, [sp]
   2c6a8:	mov	r3, #0
   2c6ac:	ldr	r2, [pc, #-404]	; 2c520 <main@@Base+0x12e4>
   2c6b0:	add	r2, pc, r2
   2c6b4:	ldr	r1, [pc, #-408]	; 2c524 <main@@Base+0x12e8>
   2c6b8:	add	r1, pc, r1
   2c6bc:	ldr	r0, [fp, #-12]
   2c6c0:	bl	29ba4 <test_json@@Base>
   2c6c4:	mov	r2, r0
   2c6c8:	ldr	r3, [fp, #-8]
   2c6cc:	orr	r3, r3, r2
   2c6d0:	str	r3, [fp, #-8]
   2c6d4:	ldr	r3, [pc, #-436]	; 2c528 <main@@Base+0x12ec>
   2c6d8:	str	r3, [sp, #8]
   2c6dc:	mov	r3, #0
   2c6e0:	str	r3, [sp, #4]
   2c6e4:	mov	r3, #0
   2c6e8:	str	r3, [sp]
   2c6ec:	mov	r3, #0
   2c6f0:	ldr	r2, [pc, #-460]	; 2c52c <main@@Base+0x12f0>
   2c6f4:	add	r2, pc, r2
   2c6f8:	ldr	r1, [pc, #-464]	; 2c530 <main@@Base+0x12f4>
   2c6fc:	add	r1, pc, r1
   2c700:	ldr	r0, [fp, #-12]
   2c704:	bl	29ba4 <test_json@@Base>
   2c708:	mov	r2, r0
   2c70c:	ldr	r3, [fp, #-8]
   2c710:	orr	r3, r3, r2
   2c714:	str	r3, [fp, #-8]
   2c718:	ldr	r3, [pc, #-492]	; 2c534 <main@@Base+0x12f8>
   2c71c:	str	r3, [sp, #8]
   2c720:	mov	r3, #0
   2c724:	str	r3, [sp, #4]
   2c728:	mov	r3, #0
   2c72c:	str	r3, [sp]
   2c730:	mov	r3, #0
   2c734:	ldr	r2, [pc, #-516]	; 2c538 <main@@Base+0x12fc>
   2c738:	add	r2, pc, r2
   2c73c:	ldr	r1, [pc, #-520]	; 2c53c <main@@Base+0x1300>
   2c740:	add	r1, pc, r1
   2c744:	ldr	r0, [fp, #-12]
   2c748:	bl	29ba4 <test_json@@Base>
   2c74c:	mov	r2, r0
   2c750:	ldr	r3, [fp, #-8]
   2c754:	orr	r3, r3, r2
   2c758:	str	r3, [fp, #-8]
   2c75c:	mov	r3, #796	; 0x31c
   2c760:	str	r3, [sp, #8]
   2c764:	mov	r3, #0
   2c768:	str	r3, [sp, #4]
   2c76c:	mov	r3, #0
   2c770:	str	r3, [sp]
   2c774:	mov	r3, #0
   2c778:	ldr	r2, [pc, #-576]	; 2c540 <main@@Base+0x1304>
   2c77c:	add	r2, pc, r2
   2c780:	ldr	r1, [pc, #-580]	; 2c544 <main@@Base+0x1308>
   2c784:	add	r1, pc, r1
   2c788:	ldr	r0, [fp, #-12]
   2c78c:	bl	29ba4 <test_json@@Base>
   2c790:	mov	r2, r0
   2c794:	ldr	r3, [fp, #-8]
   2c798:	orr	r3, r3, r2
   2c79c:	str	r3, [fp, #-8]
   2c7a0:	ldr	r3, [pc, #-608]	; 2c548 <main@@Base+0x130c>
   2c7a4:	str	r3, [sp, #8]
   2c7a8:	mov	r3, #0
   2c7ac:	str	r3, [sp, #4]
   2c7b0:	mov	r3, #0
   2c7b4:	str	r3, [sp]
   2c7b8:	mov	r3, #0
   2c7bc:	ldr	r2, [pc, #-632]	; 2c54c <main@@Base+0x1310>
   2c7c0:	add	r2, pc, r2
   2c7c4:	ldr	r1, [pc, #-636]	; 2c550 <main@@Base+0x1314>
   2c7c8:	add	r1, pc, r1
   2c7cc:	ldr	r0, [fp, #-12]
   2c7d0:	bl	29ba4 <test_json@@Base>
   2c7d4:	mov	r2, r0
   2c7d8:	ldr	r3, [fp, #-8]
   2c7dc:	orr	r3, r3, r2
   2c7e0:	str	r3, [fp, #-8]
   2c7e4:	ldr	r3, [pc, #-664]	; 2c554 <main@@Base+0x1318>
   2c7e8:	str	r3, [sp, #8]
   2c7ec:	mov	r3, #0
   2c7f0:	str	r3, [sp, #4]
   2c7f4:	mov	r3, #0
   2c7f8:	str	r3, [sp]
   2c7fc:	mov	r3, #0
   2c800:	ldr	r2, [pc, #-688]	; 2c558 <main@@Base+0x131c>
   2c804:	add	r2, pc, r2
   2c808:	ldr	r1, [pc, #-692]	; 2c55c <main@@Base+0x1320>
   2c80c:	add	r1, pc, r1
   2c810:	ldr	r0, [fp, #-12]
   2c814:	bl	29ba4 <test_json@@Base>
   2c818:	mov	r2, r0
   2c81c:	ldr	r3, [fp, #-8]
   2c820:	orr	r3, r3, r2
   2c824:	str	r3, [fp, #-8]
   2c828:	ldr	r3, [fp, #-8]
   2c82c:	cmp	r3, #0
   2c830:	beq	2c83c <main@@Base+0x1600>
   2c834:	mvn	r3, #0
   2c838:	b	2c840 <main@@Base+0x1604>
   2c83c:	mov	r3, #0
   2c840:	mov	r0, r3
   2c844:	sub	sp, fp, #4
   2c848:	pop	{fp, pc}
   2c84c:	push	{fp, lr}
   2c850:	add	fp, sp, #4
   2c854:	sub	sp, sp, #16
   2c858:	str	r0, [fp, #-16]
   2c85c:	str	r1, [fp, #-20]	; 0xffffffec
   2c860:	mov	r3, #0
   2c864:	str	r3, [fp, #-12]
   2c868:	ldr	r3, [fp, #-16]
   2c86c:	cmp	r3, #3
   2c870:	bhi	2c87c <main@@Base+0x1640>
   2c874:	mov	r3, #4
   2c878:	str	r3, [fp, #-16]
   2c87c:	sub	r3, fp, #12
   2c880:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c884:	ldr	r1, [fp, #-16]
   2c888:	mov	r0, r3
   2c88c:	bl	145b0 <posix_memalign@plt>
   2c890:	str	r0, [fp, #-8]
   2c894:	ldr	r3, [fp, #-8]
   2c898:	cmp	r3, #0
   2c89c:	beq	2c8c0 <main@@Base+0x1684>
   2c8a0:	ldr	r3, [fp, #-12]
   2c8a4:	cmp	r3, #0
   2c8a8:	beq	2c8c0 <main@@Base+0x1684>
   2c8ac:	ldr	r3, [fp, #-12]
   2c8b0:	mov	r0, r3
   2c8b4:	bl	14538 <free@plt>
   2c8b8:	mov	r3, #0
   2c8bc:	str	r3, [fp, #-12]
   2c8c0:	ldr	r3, [fp, #-12]
   2c8c4:	mov	r0, r3
   2c8c8:	sub	sp, fp, #4
   2c8cc:	pop	{fp, pc}
   2c8d0:	push	{fp}		; (str fp, [sp, #-4]!)
   2c8d4:	add	fp, sp, #0
   2c8d8:	sub	sp, sp, #12
   2c8dc:	str	r0, [fp, #-8]
   2c8e0:	ldr	r3, [fp, #-8]
   2c8e4:	mov	r0, r3
   2c8e8:	add	sp, fp, #0
   2c8ec:	pop	{fp}		; (ldr fp, [sp], #4)
   2c8f0:	bx	lr
   2c8f4:	push	{fp}		; (str fp, [sp, #-4]!)
   2c8f8:	add	fp, sp, #0
   2c8fc:	sub	sp, sp, #12
   2c900:	mov	r3, r0
   2c904:	strb	r3, [fp, #-5]
   2c908:	ldrb	r3, [fp, #-5]
   2c90c:	mov	r0, r3
   2c910:	add	sp, fp, #0
   2c914:	pop	{fp}		; (ldr fp, [sp], #4)
   2c918:	bx	lr
   2c91c:	push	{fp}		; (str fp, [sp, #-4]!)
   2c920:	add	fp, sp, #0
   2c924:	sub	sp, sp, #12
   2c928:	str	r0, [fp, #-8]
   2c92c:	ldr	r3, [fp, #-8]
   2c930:	mov	r0, r3
   2c934:	add	sp, fp, #0
   2c938:	pop	{fp}		; (ldr fp, [sp], #4)
   2c93c:	bx	lr
   2c940:	push	{fp}		; (str fp, [sp, #-4]!)
   2c944:	add	fp, sp, #0
   2c948:	sub	sp, sp, #12
   2c94c:	str	r0, [fp, #-8]
   2c950:	str	r1, [fp, #-12]
   2c954:	ldr	r3, [fp, #-8]
   2c958:	ldr	r2, [r3]
   2c95c:	ldr	r3, [fp, #-8]
   2c960:	ldr	r3, [r3, #4]
   2c964:	cmp	r2, r3
   2c968:	bne	2c994 <main@@Base+0x1758>
   2c96c:	ldr	r3, [fp, #-12]
   2c970:	cmp	r3, #0
   2c974:	beq	2c988 <main@@Base+0x174c>
   2c978:	ldr	r3, [fp, #-8]
   2c97c:	ldr	r2, [r3, #24]
   2c980:	ldr	r3, [fp, #-12]
   2c984:	str	r2, [r3]
   2c988:	ldr	r3, [fp, #-8]
   2c98c:	ldr	r3, [r3, #8]
   2c990:	b	2c9b0 <main@@Base+0x1774>
   2c994:	ldr	r3, [fp, #-12]
   2c998:	cmp	r3, #0
   2c99c:	beq	2c9ac <main@@Base+0x1770>
   2c9a0:	ldr	r3, [fp, #-12]
   2c9a4:	mov	r2, #0
   2c9a8:	str	r2, [r3]
   2c9ac:	mov	r3, #0
   2c9b0:	mov	r0, r3
   2c9b4:	add	sp, fp, #0
   2c9b8:	pop	{fp}		; (ldr fp, [sp], #4)
   2c9bc:	bx	lr
   2c9c0:	push	{fp, lr}
   2c9c4:	add	fp, sp, #4
   2c9c8:	sub	sp, sp, #16
   2c9cc:	str	r0, [fp, #-16]
   2c9d0:	str	r1, [fp, #-20]	; 0xffffffec
   2c9d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c9d8:	mov	r1, #0
   2c9dc:	ldr	r0, [fp, #-16]
   2c9e0:	bl	145e0 <memchr@plt>
   2c9e4:	str	r0, [fp, #-8]
   2c9e8:	ldr	r3, [fp, #-8]
   2c9ec:	cmp	r3, #0
   2c9f0:	beq	2ca04 <main@@Base+0x17c8>
   2c9f4:	ldr	r2, [fp, #-8]
   2c9f8:	ldr	r3, [fp, #-16]
   2c9fc:	sub	r3, r2, r3
   2ca00:	b	2ca08 <main@@Base+0x17cc>
   2ca04:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca08:	mov	r0, r3
   2ca0c:	sub	sp, fp, #4
   2ca10:	pop	{fp, pc}

0002ca14 <flatcc_builder_default_alloc@@Base>:
   2ca14:	push	{fp, lr}
   2ca18:	add	fp, sp, #4
   2ca1c:	sub	sp, sp, #24
   2ca20:	str	r0, [fp, #-16]
   2ca24:	str	r1, [fp, #-20]	; 0xffffffec
   2ca28:	str	r2, [fp, #-24]	; 0xffffffe8
   2ca2c:	str	r3, [fp, #-28]	; 0xffffffe4
   2ca30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca34:	cmp	r3, #0
   2ca38:	bne	2ca7c <flatcc_builder_default_alloc@@Base+0x68>
   2ca3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca40:	ldr	r3, [r3]
   2ca44:	cmp	r3, #0
   2ca48:	beq	2ca74 <flatcc_builder_default_alloc@@Base+0x60>
   2ca4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca50:	ldr	r3, [r3]
   2ca54:	mov	r0, r3
   2ca58:	bl	14538 <free@plt>
   2ca5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca60:	mov	r2, #0
   2ca64:	str	r2, [r3]
   2ca68:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ca6c:	mov	r2, #0
   2ca70:	str	r2, [r3, #4]
   2ca74:	mov	r3, #0
   2ca78:	b	2cbd0 <flatcc_builder_default_alloc@@Base+0x1bc>
   2ca7c:	ldr	r3, [fp, #4]
   2ca80:	sub	r3, r3, #1
   2ca84:	cmp	r3, #6
   2ca88:	addls	pc, pc, r3, lsl #2
   2ca8c:	b	2cadc <flatcc_builder_default_alloc@@Base+0xc8>
   2ca90:	b	2caac <flatcc_builder_default_alloc@@Base+0x98>
   2ca94:	b	2cadc <flatcc_builder_default_alloc@@Base+0xc8>
   2ca98:	b	2cadc <flatcc_builder_default_alloc@@Base+0xc8>
   2ca9c:	b	2cac4 <flatcc_builder_default_alloc@@Base+0xb0>
   2caa0:	b	2cab8 <flatcc_builder_default_alloc@@Base+0xa4>
   2caa4:	b	2cadc <flatcc_builder_default_alloc@@Base+0xc8>
   2caa8:	b	2cad0 <flatcc_builder_default_alloc@@Base+0xbc>
   2caac:	mov	r3, #256	; 0x100
   2cab0:	str	r3, [fp, #-8]
   2cab4:	b	2cae8 <flatcc_builder_default_alloc@@Base+0xd4>
   2cab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cabc:	str	r3, [fp, #-8]
   2cac0:	b	2cae8 <flatcc_builder_default_alloc@@Base+0xd4>
   2cac4:	mov	r3, #288	; 0x120
   2cac8:	str	r3, [fp, #-8]
   2cacc:	b	2cae8 <flatcc_builder_default_alloc@@Base+0xd4>
   2cad0:	mov	r3, #64	; 0x40
   2cad4:	str	r3, [fp, #-8]
   2cad8:	b	2cae8 <flatcc_builder_default_alloc@@Base+0xd4>
   2cadc:	mov	r3, #32
   2cae0:	str	r3, [fp, #-8]
   2cae4:	nop			; (mov r0, r0)
   2cae8:	b	2caf8 <flatcc_builder_default_alloc@@Base+0xe4>
   2caec:	ldr	r3, [fp, #-8]
   2caf0:	lsl	r3, r3, #1
   2caf4:	str	r3, [fp, #-8]
   2caf8:	ldr	r2, [fp, #-8]
   2cafc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cb00:	cmp	r2, r3
   2cb04:	bcc	2caec <flatcc_builder_default_alloc@@Base+0xd8>
   2cb08:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb0c:	ldr	r2, [r3, #4]
   2cb10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cb14:	cmp	r2, r3
   2cb18:	bcc	2cb3c <flatcc_builder_default_alloc@@Base+0x128>
   2cb1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb20:	ldr	r3, [r3, #4]
   2cb24:	lsr	r2, r3, #1
   2cb28:	ldr	r3, [fp, #-8]
   2cb2c:	cmp	r2, r3
   2cb30:	bcc	2cb3c <flatcc_builder_default_alloc@@Base+0x128>
   2cb34:	mov	r3, #0
   2cb38:	b	2cbd0 <flatcc_builder_default_alloc@@Base+0x1bc>
   2cb3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb40:	ldr	r3, [r3]
   2cb44:	ldr	r1, [fp, #-8]
   2cb48:	mov	r0, r3
   2cb4c:	bl	1455c <realloc@plt>
   2cb50:	str	r0, [fp, #-12]
   2cb54:	ldr	r3, [fp, #-12]
   2cb58:	cmp	r3, #0
   2cb5c:	bne	2cb68 <flatcc_builder_default_alloc@@Base+0x154>
   2cb60:	mvn	r3, #0
   2cb64:	b	2cbd0 <flatcc_builder_default_alloc@@Base+0x1bc>
   2cb68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cb6c:	cmp	r3, #0
   2cb70:	beq	2cbb4 <flatcc_builder_default_alloc@@Base+0x1a0>
   2cb74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb78:	ldr	r2, [r3, #4]
   2cb7c:	ldr	r3, [fp, #-8]
   2cb80:	cmp	r2, r3
   2cb84:	bcs	2cbb4 <flatcc_builder_default_alloc@@Base+0x1a0>
   2cb88:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb8c:	ldr	r3, [r3, #4]
   2cb90:	ldr	r2, [fp, #-12]
   2cb94:	add	r0, r2, r3
   2cb98:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb9c:	ldr	r3, [r3, #4]
   2cba0:	ldr	r2, [fp, #-8]
   2cba4:	sub	r3, r2, r3
   2cba8:	mov	r2, r3
   2cbac:	mov	r1, #0
   2cbb0:	bl	145bc <memset@plt>
   2cbb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cbb8:	ldr	r2, [fp, #-12]
   2cbbc:	str	r2, [r3]
   2cbc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cbc4:	ldr	r2, [fp, #-8]
   2cbc8:	str	r2, [r3, #4]
   2cbcc:	mov	r3, #0
   2cbd0:	mov	r0, r3
   2cbd4:	sub	sp, fp, #4
   2cbd8:	pop	{fp, pc}
   2cbdc:	push	{fp}		; (str fp, [sp, #-4]!)
   2cbe0:	add	fp, sp, #0
   2cbe4:	sub	sp, sp, #20
   2cbe8:	str	r0, [fp, #-16]
   2cbec:	str	r1, [fp, #-20]	; 0xffffffec
   2cbf0:	ldr	r3, [fp, #-16]
   2cbf4:	add	r3, r3, #52	; 0x34
   2cbf8:	add	r3, r3, #8
   2cbfc:	str	r3, [fp, #-8]
   2cc00:	ldr	r3, [fp, #-16]
   2cc04:	ldr	r2, [r3, #60]	; 0x3c
   2cc08:	ldr	r3, [fp, #-16]
   2cc0c:	ldr	r3, [r3, #28]
   2cc10:	add	r2, r2, r3
   2cc14:	ldr	r3, [fp, #-16]
   2cc18:	str	r2, [r3, #16]
   2cc1c:	ldr	r3, [fp, #-8]
   2cc20:	ldr	r2, [r3, #4]
   2cc24:	ldr	r3, [fp, #-16]
   2cc28:	ldr	r3, [r3, #28]
   2cc2c:	sub	r2, r2, r3
   2cc30:	ldr	r3, [fp, #-16]
   2cc34:	str	r2, [r3, #24]
   2cc38:	ldr	r3, [fp, #-16]
   2cc3c:	ldr	r2, [r3, #24]
   2cc40:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc44:	cmp	r2, r3
   2cc48:	bls	2cc58 <flatcc_builder_default_alloc@@Base+0x244>
   2cc4c:	ldr	r3, [fp, #-16]
   2cc50:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cc54:	str	r2, [r3, #24]
   2cc58:	ldr	r3, [fp, #-16]
   2cc5c:	ldr	r3, [r3, #32]
   2cc60:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cc64:	str	r2, [r3, #4]
   2cc68:	nop			; (mov r0, r0)
   2cc6c:	add	sp, fp, #0
   2cc70:	pop	{fp}		; (ldr fp, [sp], #4)
   2cc74:	bx	lr
   2cc78:	push	{r4, fp, lr}
   2cc7c:	add	fp, sp, #8
   2cc80:	sub	sp, sp, #36	; 0x24
   2cc84:	str	r0, [fp, #-24]	; 0xffffffe8
   2cc88:	str	r1, [fp, #-28]	; 0xffffffe4
   2cc8c:	str	r2, [fp, #-32]	; 0xffffffe0
   2cc90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cc94:	add	r3, r3, #52	; 0x34
   2cc98:	add	r3, r3, #8
   2cc9c:	str	r3, [fp, #-16]
   2cca0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cca4:	ldr	r4, [r3, #48]	; 0x30
   2cca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ccac:	ldr	r0, [r3, #40]	; 0x28
   2ccb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ccb4:	ldr	r2, [r3, #28]
   2ccb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ccbc:	add	r2, r2, r3
   2ccc0:	mov	r3, #1
   2ccc4:	str	r3, [sp]
   2ccc8:	mov	r3, #1
   2cccc:	ldr	r1, [fp, #-16]
   2ccd0:	blx	r4
   2ccd4:	mov	r3, r0
   2ccd8:	cmp	r3, #0
   2ccdc:	beq	2cce8 <flatcc_builder_default_alloc@@Base+0x2d4>
   2cce0:	mvn	r3, #0
   2cce4:	b	2ccf8 <flatcc_builder_default_alloc@@Base+0x2e4>
   2cce8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ccec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ccf0:	bl	2cbdc <flatcc_builder_default_alloc@@Base+0x1c8>
   2ccf4:	mov	r3, #0
   2ccf8:	mov	r0, r3
   2ccfc:	sub	sp, fp, #8
   2cd00:	pop	{r4, fp, pc}
   2cd04:	push	{fp, lr}
   2cd08:	add	fp, sp, #4
   2cd0c:	sub	sp, sp, #16
   2cd10:	str	r0, [fp, #-16]
   2cd14:	str	r1, [fp, #-20]	; 0xffffffec
   2cd18:	ldr	r3, [fp, #-16]
   2cd1c:	ldr	r3, [r3, #20]
   2cd20:	str	r3, [fp, #-8]
   2cd24:	ldr	r3, [fp, #-16]
   2cd28:	ldr	r2, [r3, #20]
   2cd2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cd30:	add	r2, r2, r3
   2cd34:	ldr	r3, [fp, #-16]
   2cd38:	str	r2, [r3, #20]
   2cd3c:	ldr	r3, [fp, #-16]
   2cd40:	ldr	r2, [r3, #20]
   2cd44:	ldr	r3, [fp, #-16]
   2cd48:	ldr	r3, [r3, #24]
   2cd4c:	cmp	r2, r3
   2cd50:	bcc	2cd84 <flatcc_builder_default_alloc@@Base+0x370>
   2cd54:	ldr	r3, [fp, #-16]
   2cd58:	ldr	r3, [r3, #20]
   2cd5c:	add	r3, r3, #1
   2cd60:	mvn	r2, #3
   2cd64:	mov	r1, r3
   2cd68:	ldr	r0, [fp, #-16]
   2cd6c:	bl	2cc78 <flatcc_builder_default_alloc@@Base+0x264>
   2cd70:	mov	r3, r0
   2cd74:	cmp	r3, #0
   2cd78:	beq	2cd84 <flatcc_builder_default_alloc@@Base+0x370>
   2cd7c:	mov	r3, #0
   2cd80:	b	2cd94 <flatcc_builder_default_alloc@@Base+0x380>
   2cd84:	ldr	r3, [fp, #-16]
   2cd88:	ldr	r2, [r3, #16]
   2cd8c:	ldr	r3, [fp, #-8]
   2cd90:	add	r3, r2, r3
   2cd94:	mov	r0, r3
   2cd98:	sub	sp, fp, #4
   2cd9c:	pop	{fp, pc}
   2cda0:	push	{fp, lr}
   2cda4:	add	fp, sp, #4
   2cda8:	sub	sp, sp, #8
   2cdac:	str	r0, [fp, #-8]
   2cdb0:	str	r1, [fp, #-12]
   2cdb4:	ldr	r3, [fp, #-8]
   2cdb8:	ldr	r2, [r3, #20]
   2cdbc:	ldr	r3, [fp, #-12]
   2cdc0:	sub	r2, r2, r3
   2cdc4:	ldr	r3, [fp, #-8]
   2cdc8:	str	r2, [r3, #20]
   2cdcc:	ldr	r3, [fp, #-8]
   2cdd0:	ldr	r2, [r3, #16]
   2cdd4:	ldr	r3, [fp, #-8]
   2cdd8:	ldr	r3, [r3, #20]
   2cddc:	add	r3, r2, r3
   2cde0:	ldr	r2, [fp, #-12]
   2cde4:	mov	r1, #0
   2cde8:	mov	r0, r3
   2cdec:	bl	145bc <memset@plt>
   2cdf0:	nop			; (mov r0, r0)
   2cdf4:	sub	sp, fp, #4
   2cdf8:	pop	{fp, pc}
   2cdfc:	push	{fp, lr}
   2ce00:	add	fp, sp, #4
   2ce04:	sub	sp, sp, #24
   2ce08:	str	r0, [fp, #-16]
   2ce0c:	str	r1, [fp, #-20]	; 0xffffffec
   2ce10:	str	r2, [fp, #-24]	; 0xffffffe8
   2ce14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ce18:	ldr	r0, [fp, #-16]
   2ce1c:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   2ce20:	str	r0, [fp, #-8]
   2ce24:	ldr	r3, [fp, #-8]
   2ce28:	cmp	r3, #0
   2ce2c:	bne	2ce38 <flatcc_builder_default_alloc@@Base+0x424>
   2ce30:	mov	r3, #0
   2ce34:	b	2ce4c <flatcc_builder_default_alloc@@Base+0x438>
   2ce38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ce3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ce40:	ldr	r0, [fp, #-8]
   2ce44:	bl	14544 <memcpy@plt>
   2ce48:	ldr	r3, [fp, #-8]
   2ce4c:	mov	r0, r3
   2ce50:	sub	sp, fp, #4
   2ce54:	pop	{fp, pc}
   2ce58:	push	{fp, lr}
   2ce5c:	add	fp, sp, #4
   2ce60:	sub	sp, sp, #24
   2ce64:	str	r0, [fp, #-16]
   2ce68:	str	r1, [fp, #-20]	; 0xffffffec
   2ce6c:	strh	r2, [fp, #-22]	; 0xffffffea
   2ce70:	strh	r3, [fp, #-24]	; 0xffffffe8
   2ce74:	ldr	r3, [fp, #-16]
   2ce78:	ldr	r2, [r3, #20]
   2ce7c:	ldrh	r3, [fp, #-22]	; 0xffffffea
   2ce80:	add	r3, r2, r3
   2ce84:	sub	r3, r3, #1
   2ce88:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2ce8c:	rsb	r2, r2, #0
   2ce90:	and	r3, r3, r2
   2ce94:	str	r3, [fp, #-8]
   2ce98:	ldr	r2, [fp, #-8]
   2ce9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cea0:	add	r2, r2, r3
   2cea4:	ldr	r3, [fp, #-16]
   2cea8:	str	r2, [r3, #20]
   2ceac:	ldr	r3, [fp, #-16]
   2ceb0:	ldr	r2, [r3, #20]
   2ceb4:	ldr	r3, [fp, #-16]
   2ceb8:	ldr	r3, [r3, #24]
   2cebc:	cmp	r2, r3
   2cec0:	bcc	2cef4 <flatcc_builder_default_alloc@@Base+0x4e0>
   2cec4:	ldr	r3, [fp, #-16]
   2cec8:	ldr	r3, [r3, #20]
   2cecc:	add	r3, r3, #1
   2ced0:	ldr	r2, [pc, #136]	; 2cf60 <flatcc_builder_default_alloc@@Base+0x54c>
   2ced4:	mov	r1, r3
   2ced8:	ldr	r0, [fp, #-16]
   2cedc:	bl	2cc78 <flatcc_builder_default_alloc@@Base+0x264>
   2cee0:	mov	r3, r0
   2cee4:	cmp	r3, #0
   2cee8:	beq	2cef4 <flatcc_builder_default_alloc@@Base+0x4e0>
   2ceec:	mov	r3, #0
   2cef0:	b	2cf54 <flatcc_builder_default_alloc@@Base+0x540>
   2cef4:	ldr	r3, [fp, #-16]
   2cef8:	ldr	r2, [r3, #4]
   2cefc:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   2cf00:	lsl	r3, r3, #1
   2cf04:	add	r3, r2, r3
   2cf08:	ldr	r2, [fp, #-8]
   2cf0c:	uxth	r2, r2
   2cf10:	add	r2, r2, #4
   2cf14:	uxth	r2, r2
   2cf18:	strh	r2, [r3]
   2cf1c:	ldr	r3, [fp, #-16]
   2cf20:	ldrh	r3, [r3, #8]
   2cf24:	ldrh	r2, [fp, #-24]	; 0xffffffe8
   2cf28:	cmp	r2, r3
   2cf2c:	bcc	2cf44 <flatcc_builder_default_alloc@@Base+0x530>
   2cf30:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   2cf34:	add	r3, r3, #1
   2cf38:	uxth	r2, r3
   2cf3c:	ldr	r3, [fp, #-16]
   2cf40:	strh	r2, [r3, #8]
   2cf44:	ldr	r3, [fp, #-16]
   2cf48:	ldr	r2, [r3, #16]
   2cf4c:	ldr	r3, [fp, #-8]
   2cf50:	add	r3, r2, r3
   2cf54:	mov	r0, r3
   2cf58:	sub	sp, fp, #4
   2cf5c:	pop	{fp, pc}
   2cf60:	strdeq	pc, [r0], -ip
   2cf64:	push	{fp, lr}
   2cf68:	add	fp, sp, #4
   2cf6c:	sub	sp, sp, #16
   2cf70:	str	r0, [fp, #-16]
   2cf74:	mov	r3, r1
   2cf78:	strh	r3, [fp, #-18]	; 0xffffffee
   2cf7c:	ldr	r3, [fp, #-16]
   2cf80:	ldr	r3, [r3, #20]
   2cf84:	add	r3, r3, #3
   2cf88:	bic	r3, r3, #3
   2cf8c:	str	r3, [fp, #-8]
   2cf90:	ldr	r3, [fp, #-8]
   2cf94:	add	r2, r3, #4
   2cf98:	ldr	r3, [fp, #-16]
   2cf9c:	str	r2, [r3, #20]
   2cfa0:	ldr	r3, [fp, #-16]
   2cfa4:	ldr	r2, [r3, #20]
   2cfa8:	ldr	r3, [fp, #-16]
   2cfac:	ldr	r3, [r3, #24]
   2cfb0:	cmp	r2, r3
   2cfb4:	bls	2cfe4 <flatcc_builder_default_alloc@@Base+0x5d0>
   2cfb8:	ldr	r3, [fp, #-16]
   2cfbc:	ldr	r3, [r3, #20]
   2cfc0:	ldr	r2, [pc, #168]	; 2d070 <flatcc_builder_default_alloc@@Base+0x65c>
   2cfc4:	mov	r1, r3
   2cfc8:	ldr	r0, [fp, #-16]
   2cfcc:	bl	2cc78 <flatcc_builder_default_alloc@@Base+0x264>
   2cfd0:	mov	r3, r0
   2cfd4:	cmp	r3, #0
   2cfd8:	beq	2cfe4 <flatcc_builder_default_alloc@@Base+0x5d0>
   2cfdc:	mov	r3, #0
   2cfe0:	b	2d064 <flatcc_builder_default_alloc@@Base+0x650>
   2cfe4:	ldr	r3, [fp, #-16]
   2cfe8:	ldr	r2, [r3, #4]
   2cfec:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2cff0:	lsl	r3, r3, #1
   2cff4:	add	r3, r2, r3
   2cff8:	ldr	r2, [fp, #-8]
   2cffc:	uxth	r2, r2
   2d000:	add	r2, r2, #4
   2d004:	uxth	r2, r2
   2d008:	strh	r2, [r3]
   2d00c:	ldr	r3, [fp, #-16]
   2d010:	ldrh	r3, [r3, #8]
   2d014:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2d018:	cmp	r2, r3
   2d01c:	bcc	2d034 <flatcc_builder_default_alloc@@Base+0x620>
   2d020:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2d024:	add	r3, r3, #1
   2d028:	uxth	r2, r3
   2d02c:	ldr	r3, [fp, #-16]
   2d030:	strh	r2, [r3, #8]
   2d034:	ldr	r3, [fp, #-16]
   2d038:	ldr	r3, [r3]
   2d03c:	add	r1, r3, #2
   2d040:	ldr	r2, [fp, #-16]
   2d044:	str	r1, [r2]
   2d048:	ldr	r2, [fp, #-8]
   2d04c:	uxth	r2, r2
   2d050:	strh	r2, [r3]
   2d054:	ldr	r3, [fp, #-16]
   2d058:	ldr	r2, [r3, #16]
   2d05c:	ldr	r3, [fp, #-8]
   2d060:	add	r3, r2, r3
   2d064:	mov	r0, r3
   2d068:	sub	sp, fp, #4
   2d06c:	pop	{fp, pc}
   2d070:	strdeq	pc, [r0], -ip
   2d074:	push	{r4, fp, lr}
   2d078:	add	fp, sp, #8
   2d07c:	sub	sp, sp, #36	; 0x24
   2d080:	str	r0, [fp, #-24]	; 0xffffffe8
   2d084:	str	r1, [fp, #-28]	; 0xffffffe4
   2d088:	str	r2, [fp, #-32]	; 0xffffffe0
   2d08c:	str	r3, [fp, #-36]	; 0xffffffdc
   2d090:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d094:	add	r2, r3, #52	; 0x34
   2d098:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d09c:	lsl	r3, r3, #3
   2d0a0:	add	r3, r2, r3
   2d0a4:	str	r3, [fp, #-16]
   2d0a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d0ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d0b0:	add	r2, r2, r3
   2d0b4:	ldr	r3, [fp, #-16]
   2d0b8:	ldr	r3, [r3, #4]
   2d0bc:	cmp	r2, r3
   2d0c0:	bls	2d120 <flatcc_builder_default_alloc@@Base+0x70c>
   2d0c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d0c8:	ldr	r4, [r3, #48]	; 0x30
   2d0cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d0d0:	ldr	r0, [r3, #40]	; 0x28
   2d0d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d0d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d0dc:	add	r2, r2, r3
   2d0e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d0e4:	str	r3, [sp]
   2d0e8:	ldr	r3, [fp, #4]
   2d0ec:	ldr	r1, [fp, #-16]
   2d0f0:	blx	r4
   2d0f4:	mov	r3, r0
   2d0f8:	cmp	r3, #0
   2d0fc:	beq	2d120 <flatcc_builder_default_alloc@@Base+0x70c>
   2d100:	ldr	r3, [pc, #56]	; 2d140 <flatcc_builder_default_alloc@@Base+0x72c>
   2d104:	add	r3, pc, r3
   2d108:	mov	r2, #308	; 0x134
   2d10c:	ldr	r1, [pc, #48]	; 2d144 <flatcc_builder_default_alloc@@Base+0x730>
   2d110:	add	r1, pc, r1
   2d114:	ldr	r0, [pc, #44]	; 2d148 <flatcc_builder_default_alloc@@Base+0x734>
   2d118:	add	r0, pc, r0
   2d11c:	bl	14610 <__assert_fail@plt>
   2d120:	ldr	r3, [fp, #-16]
   2d124:	ldr	r3, [r3]
   2d128:	mov	r2, r3
   2d12c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d130:	add	r3, r2, r3
   2d134:	mov	r0, r3
   2d138:	sub	sp, fp, #8
   2d13c:	pop	{r4, fp, pc}
   2d140:	andeq	r3, r2, r4, ror #21
   2d144:	andeq	r3, r2, r4, lsr #13
   2d148:	strdeq	r3, [r2], -ip
   2d14c:	push	{fp, lr}
   2d150:	add	fp, sp, #4
   2d154:	sub	sp, sp, #24
   2d158:	str	r0, [fp, #-16]
   2d15c:	str	r1, [fp, #-20]	; 0xffffffec
   2d160:	ldr	r3, [fp, #-16]
   2d164:	ldr	r3, [r3, #32]
   2d168:	ldr	r2, [r3, #16]
   2d16c:	ldr	r3, [fp, #-16]
   2d170:	ldr	r3, [r3, #32]
   2d174:	ldrh	r3, [r3, #28]
   2d178:	lsl	r3, r3, #1
   2d17c:	add	r3, r2, r3
   2d180:	str	r3, [fp, #-8]
   2d184:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d188:	add	r3, r3, #2
   2d18c:	lsl	r3, r3, #1
   2d190:	str	r3, [fp, #-12]
   2d194:	mov	r3, #1
   2d198:	str	r3, [sp]
   2d19c:	ldr	r3, [fp, #-12]
   2d1a0:	ldr	r2, [fp, #-8]
   2d1a4:	mov	r1, #0
   2d1a8:	ldr	r0, [fp, #-16]
   2d1ac:	bl	2d074 <flatcc_builder_default_alloc@@Base+0x660>
   2d1b0:	mov	r2, r0
   2d1b4:	ldr	r3, [fp, #-16]
   2d1b8:	str	r2, [r3, #4]
   2d1bc:	ldr	r3, [fp, #-16]
   2d1c0:	ldr	r3, [r3, #4]
   2d1c4:	cmp	r3, #0
   2d1c8:	bne	2d1d4 <flatcc_builder_default_alloc@@Base+0x7c0>
   2d1cc:	mvn	r3, #0
   2d1d0:	b	2d24c <flatcc_builder_default_alloc@@Base+0x838>
   2d1d4:	ldr	r3, [fp, #-16]
   2d1d8:	ldr	r3, [r3, #4]
   2d1dc:	add	r2, r3, #4
   2d1e0:	ldr	r3, [fp, #-16]
   2d1e4:	str	r2, [r3, #4]
   2d1e8:	ldr	r3, [fp, #-16]
   2d1ec:	ldr	r3, [r3, #32]
   2d1f0:	ldr	r3, [r3, #20]
   2d1f4:	str	r3, [fp, #-8]
   2d1f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d1fc:	lsl	r3, r3, #1
   2d200:	add	r3, r3, #1
   2d204:	str	r3, [fp, #-12]
   2d208:	mov	r3, #0
   2d20c:	str	r3, [sp]
   2d210:	ldr	r3, [fp, #-12]
   2d214:	ldr	r2, [fp, #-8]
   2d218:	mov	r1, #3
   2d21c:	ldr	r0, [fp, #-16]
   2d220:	bl	2d074 <flatcc_builder_default_alloc@@Base+0x660>
   2d224:	mov	r2, r0
   2d228:	ldr	r3, [fp, #-16]
   2d22c:	str	r2, [r3]
   2d230:	ldr	r3, [fp, #-16]
   2d234:	ldr	r3, [r3]
   2d238:	cmp	r3, #0
   2d23c:	bne	2d248 <flatcc_builder_default_alloc@@Base+0x834>
   2d240:	mvn	r3, #0
   2d244:	b	2d24c <flatcc_builder_default_alloc@@Base+0x838>
   2d248:	mov	r3, #0
   2d24c:	mov	r0, r3
   2d250:	sub	sp, fp, #4
   2d254:	pop	{fp, pc}
   2d258:	push	{r4, fp, lr}
   2d25c:	add	fp, sp, #8
   2d260:	sub	sp, sp, #36	; 0x24
   2d264:	str	r0, [fp, #-32]	; 0xffffffe0
   2d268:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d26c:	add	r3, r3, #52	; 0x34
   2d270:	add	r3, r3, #40	; 0x28
   2d274:	str	r3, [fp, #-24]	; 0xffffffe8
   2d278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d27c:	ldr	r3, [r3, #124]	; 0x7c
   2d280:	cmp	r3, #0
   2d284:	beq	2d2a8 <flatcc_builder_default_alloc@@Base+0x894>
   2d288:	ldr	r3, [pc, #280]	; 2d3a8 <flatcc_builder_default_alloc@@Base+0x994>
   2d28c:	add	r3, pc, r3
   2d290:	ldr	r2, [pc, #276]	; 2d3ac <flatcc_builder_default_alloc@@Base+0x998>
   2d294:	ldr	r1, [pc, #276]	; 2d3b0 <flatcc_builder_default_alloc@@Base+0x99c>
   2d298:	add	r1, pc, r1
   2d29c:	ldr	r0, [pc, #272]	; 2d3b4 <flatcc_builder_default_alloc@@Base+0x9a0>
   2d2a0:	add	r0, pc, r0
   2d2a4:	bl	14610 <__assert_fail@plt>
   2d2a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d2ac:	ldr	r2, [r3, #124]	; 0x7c
   2d2b0:	mov	r3, #0
   2d2b4:	str	r3, [sp]
   2d2b8:	mov	r3, #16
   2d2bc:	mov	r1, #6
   2d2c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d2c4:	bl	2d074 <flatcc_builder_default_alloc@@Base+0x660>
   2d2c8:	mov	r3, r0
   2d2cc:	cmp	r3, #0
   2d2d0:	bne	2d2dc <flatcc_builder_default_alloc@@Base+0x8c8>
   2d2d4:	mvn	r3, #0
   2d2d8:	b	2d39c <flatcc_builder_default_alloc@@Base+0x988>
   2d2dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d2e0:	mov	r2, #16
   2d2e4:	str	r2, [r3, #124]	; 0x7c
   2d2e8:	mov	r3, #256	; 0x100
   2d2ec:	str	r3, [fp, #-16]
   2d2f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d2f4:	ldr	r4, [r3, #48]	; 0x30
   2d2f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d2fc:	ldr	r0, [r3, #40]	; 0x28
   2d300:	mov	r3, #5
   2d304:	str	r3, [sp]
   2d308:	mov	r3, #1
   2d30c:	ldr	r2, [fp, #-16]
   2d310:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d314:	blx	r4
   2d318:	mov	r3, r0
   2d31c:	cmp	r3, #0
   2d320:	beq	2d338 <flatcc_builder_default_alloc@@Base+0x924>
   2d324:	mvn	r3, #0
   2d328:	b	2d39c <flatcc_builder_default_alloc@@Base+0x988>
   2d32c:	ldr	r3, [fp, #-16]
   2d330:	lsl	r3, r3, #1
   2d334:	str	r3, [fp, #-16]
   2d338:	ldr	r3, [fp, #-16]
   2d33c:	lsl	r2, r3, #1
   2d340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d344:	ldr	r3, [r3, #4]
   2d348:	cmp	r2, r3
   2d34c:	bls	2d32c <flatcc_builder_default_alloc@@Base+0x918>
   2d350:	ldr	r3, [fp, #-16]
   2d354:	lsr	r3, r3, #2
   2d358:	str	r3, [fp, #-16]
   2d35c:	mov	r3, #0
   2d360:	str	r3, [fp, #-20]	; 0xffffffec
   2d364:	b	2d374 <flatcc_builder_default_alloc@@Base+0x960>
   2d368:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d36c:	add	r3, r3, #1
   2d370:	str	r3, [fp, #-20]	; 0xffffffec
   2d374:	mov	r2, #1
   2d378:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d37c:	lsl	r2, r2, r3
   2d380:	ldr	r3, [fp, #-16]
   2d384:	cmp	r2, r3
   2d388:	bcc	2d368 <flatcc_builder_default_alloc@@Base+0x954>
   2d38c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d390:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d394:	str	r2, [r3, #116]	; 0x74
   2d398:	mov	r3, #0
   2d39c:	mov	r0, r3
   2d3a0:	sub	sp, fp, #8
   2d3a4:	pop	{r4, fp, pc}
   2d3a8:	andeq	r3, r2, r0, asr r9
   2d3ac:	andeq	r0, r0, r6, asr r1
   2d3b0:	andeq	r3, r2, ip, lsl r5
   2d3b4:	andeq	r3, r2, r8, ror r5
   2d3b8:	push	{fp, lr}
   2d3bc:	add	fp, sp, #4
   2d3c0:	sub	sp, sp, #16
   2d3c4:	str	r0, [fp, #-16]
   2d3c8:	str	r1, [fp, #-20]	; 0xffffffec
   2d3cc:	ldr	r3, [fp, #-16]
   2d3d0:	ldr	r3, [r3, #116]	; 0x74
   2d3d4:	cmp	r3, #0
   2d3d8:	bne	2d3f8 <flatcc_builder_default_alloc@@Base+0x9e4>
   2d3dc:	ldr	r0, [fp, #-16]
   2d3e0:	bl	2d258 <flatcc_builder_default_alloc@@Base+0x844>
   2d3e4:	mov	r3, r0
   2d3e8:	cmp	r3, #0
   2d3ec:	beq	2d3f8 <flatcc_builder_default_alloc@@Base+0x9e4>
   2d3f0:	mov	r3, #0
   2d3f4:	b	2d424 <flatcc_builder_default_alloc@@Base+0xa10>
   2d3f8:	ldr	r3, [fp, #-16]
   2d3fc:	ldr	r3, [r3, #92]	; 0x5c
   2d400:	str	r3, [fp, #-8]
   2d404:	ldr	r3, [fp, #-16]
   2d408:	ldr	r3, [r3, #116]	; 0x74
   2d40c:	rsb	r3, r3, #32
   2d410:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d414:	lsr	r3, r2, r3
   2d418:	lsl	r3, r3, #2
   2d41c:	ldr	r2, [fp, #-8]
   2d420:	add	r3, r2, r3
   2d424:	mov	r0, r3
   2d428:	sub	sp, fp, #4
   2d42c:	pop	{fp, pc}

0002d430 <flatcc_builder_flush_vtable_cache@@Base>:
   2d430:	push	{fp, lr}
   2d434:	add	fp, sp, #4
   2d438:	sub	sp, sp, #16
   2d43c:	str	r0, [fp, #-16]
   2d440:	ldr	r3, [fp, #-16]
   2d444:	add	r3, r3, #52	; 0x34
   2d448:	add	r3, r3, #40	; 0x28
   2d44c:	str	r3, [fp, #-8]
   2d450:	ldr	r3, [fp, #-16]
   2d454:	ldr	r3, [r3, #116]	; 0x74
   2d458:	cmp	r3, #0
   2d45c:	beq	2d498 <flatcc_builder_flush_vtable_cache@@Base+0x68>
   2d460:	ldr	r3, [fp, #-8]
   2d464:	ldr	r0, [r3]
   2d468:	ldr	r3, [fp, #-8]
   2d46c:	ldr	r3, [r3, #4]
   2d470:	mov	r2, r3
   2d474:	mov	r1, #0
   2d478:	bl	145bc <memset@plt>
   2d47c:	ldr	r3, [fp, #-16]
   2d480:	mov	r2, #16
   2d484:	str	r2, [r3, #124]	; 0x7c
   2d488:	ldr	r3, [fp, #-16]
   2d48c:	mov	r2, #0
   2d490:	str	r2, [r3, #120]	; 0x78
   2d494:	b	2d49c <flatcc_builder_flush_vtable_cache@@Base+0x6c>
   2d498:	nop			; (mov r0, r0)
   2d49c:	sub	sp, fp, #4
   2d4a0:	pop	{fp, pc}

0002d4a4 <flatcc_builder_custom_init@@Base>:
   2d4a4:	push	{r4, fp, lr}
   2d4a8:	add	fp, sp, #8
   2d4ac:	sub	sp, sp, #20
   2d4b0:	str	r0, [fp, #-16]
   2d4b4:	str	r1, [fp, #-20]	; 0xffffffec
   2d4b8:	str	r2, [fp, #-24]	; 0xffffffe8
   2d4bc:	str	r3, [fp, #-28]	; 0xffffffe4
   2d4c0:	ldr	r4, [pc, #152]	; 2d560 <flatcc_builder_custom_init@@Base+0xbc>
   2d4c4:	add	r4, pc, r4
   2d4c8:	mov	r2, #232	; 0xe8
   2d4cc:	mov	r1, #0
   2d4d0:	ldr	r0, [fp, #-16]
   2d4d4:	bl	145bc <memset@plt>
   2d4d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d4dc:	cmp	r3, #0
   2d4e0:	bne	2d508 <flatcc_builder_custom_init@@Base+0x64>
   2d4e4:	ldr	r3, [fp, #-16]
   2d4e8:	mov	r2, #1
   2d4ec:	str	r2, [r3, #184]	; 0xb8
   2d4f0:	ldr	r3, [pc, #108]	; 2d564 <flatcc_builder_custom_init@@Base+0xc0>
   2d4f4:	ldr	r3, [r4, r3]
   2d4f8:	str	r3, [fp, #-20]	; 0xffffffec
   2d4fc:	ldr	r3, [fp, #-16]
   2d500:	add	r3, r3, #188	; 0xbc
   2d504:	str	r3, [fp, #-24]	; 0xffffffe8
   2d508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d50c:	cmp	r3, #0
   2d510:	bne	2d520 <flatcc_builder_custom_init@@Base+0x7c>
   2d514:	ldr	r3, [pc, #76]	; 2d568 <flatcc_builder_custom_init@@Base+0xc4>
   2d518:	ldr	r3, [r4, r3]
   2d51c:	str	r3, [fp, #-28]	; 0xffffffe4
   2d520:	ldr	r3, [fp, #-16]
   2d524:	ldr	r2, [fp, #4]
   2d528:	str	r2, [r3, #40]	; 0x28
   2d52c:	ldr	r3, [fp, #-16]
   2d530:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d534:	str	r2, [r3, #48]	; 0x30
   2d538:	ldr	r3, [fp, #-16]
   2d53c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d540:	str	r2, [r3, #36]	; 0x24
   2d544:	ldr	r3, [fp, #-16]
   2d548:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d54c:	str	r2, [r3, #44]	; 0x2c
   2d550:	mov	r3, #0
   2d554:	mov	r0, r3
   2d558:	sub	sp, fp, #8
   2d55c:	pop	{r4, fp, pc}
   2d560:	andeq	r6, r3, r4, lsr fp
   2d564:	andeq	r0, r0, r8, ror r0
   2d568:	andeq	r0, r0, r0, ror r0

0002d56c <flatcc_builder_init@@Base>:
   2d56c:	push	{fp, lr}
   2d570:	add	fp, sp, #4
   2d574:	sub	sp, sp, #16
   2d578:	str	r0, [fp, #-8]
   2d57c:	mov	r3, #0
   2d580:	str	r3, [sp]
   2d584:	mov	r3, #0
   2d588:	mov	r2, #0
   2d58c:	mov	r1, #0
   2d590:	ldr	r0, [fp, #-8]
   2d594:	bl	2d4a4 <flatcc_builder_custom_init@@Base>
   2d598:	mov	r3, r0
   2d59c:	mov	r0, r3
   2d5a0:	sub	sp, fp, #4
   2d5a4:	pop	{fp, pc}

0002d5a8 <flatcc_builder_custom_reset@@Base>:
   2d5a8:	push	{r4, fp, lr}
   2d5ac:	add	fp, sp, #8
   2d5b0:	sub	sp, sp, #36	; 0x24
   2d5b4:	str	r0, [fp, #-24]	; 0xffffffe8
   2d5b8:	str	r1, [fp, #-28]	; 0xffffffe4
   2d5bc:	str	r2, [fp, #-32]	; 0xffffffe0
   2d5c0:	mov	r3, #0
   2d5c4:	str	r3, [fp, #-16]
   2d5c8:	b	2d6a4 <flatcc_builder_custom_reset@@Base+0xfc>
   2d5cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d5d0:	add	r2, r3, #52	; 0x34
   2d5d4:	ldr	r3, [fp, #-16]
   2d5d8:	lsl	r3, r3, #3
   2d5dc:	add	r3, r2, r3
   2d5e0:	str	r3, [fp, #-20]	; 0xffffffec
   2d5e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d5e8:	ldr	r3, [r3]
   2d5ec:	cmp	r3, #0
   2d5f0:	beq	2d668 <flatcc_builder_custom_reset@@Base+0xc0>
   2d5f4:	ldr	r3, [fp, #-16]
   2d5f8:	cmp	r3, #5
   2d5fc:	beq	2d648 <flatcc_builder_custom_reset@@Base+0xa0>
   2d600:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d604:	cmp	r3, #0
   2d608:	beq	2d648 <flatcc_builder_custom_reset@@Base+0xa0>
   2d60c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d610:	ldr	r4, [r3, #48]	; 0x30
   2d614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d618:	ldr	r0, [r3, #40]	; 0x28
   2d61c:	ldr	r3, [fp, #-16]
   2d620:	str	r3, [sp]
   2d624:	mov	r3, #1
   2d628:	mov	r2, #1
   2d62c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d630:	blx	r4
   2d634:	mov	r3, r0
   2d638:	cmp	r3, #0
   2d63c:	beq	2d648 <flatcc_builder_custom_reset@@Base+0xa0>
   2d640:	mvn	r3, #0
   2d644:	b	2d7d4 <flatcc_builder_custom_reset@@Base+0x22c>
   2d648:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d64c:	ldr	r0, [r3]
   2d650:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d654:	ldr	r3, [r3, #4]
   2d658:	mov	r2, r3
   2d65c:	mov	r1, #0
   2d660:	bl	145bc <memset@plt>
   2d664:	b	2d698 <flatcc_builder_custom_reset@@Base+0xf0>
   2d668:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d66c:	ldr	r3, [r3, #4]
   2d670:	cmp	r3, #0
   2d674:	beq	2d698 <flatcc_builder_custom_reset@@Base+0xf0>
   2d678:	ldr	r3, [pc, #352]	; 2d7e0 <flatcc_builder_custom_reset@@Base+0x238>
   2d67c:	add	r3, pc, r3
   2d680:	ldr	r2, [pc, #348]	; 2d7e4 <flatcc_builder_custom_reset@@Base+0x23c>
   2d684:	ldr	r1, [pc, #348]	; 2d7e8 <flatcc_builder_custom_reset@@Base+0x240>
   2d688:	add	r1, pc, r1
   2d68c:	ldr	r0, [pc, #344]	; 2d7ec <flatcc_builder_custom_reset@@Base+0x244>
   2d690:	add	r0, pc, r0
   2d694:	bl	14610 <__assert_fail@plt>
   2d698:	ldr	r3, [fp, #-16]
   2d69c:	add	r3, r3, #1
   2d6a0:	str	r3, [fp, #-16]
   2d6a4:	ldr	r3, [fp, #-16]
   2d6a8:	cmp	r3, #7
   2d6ac:	ble	2d5cc <flatcc_builder_custom_reset@@Base+0x24>
   2d6b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d6b4:	mov	r2, #0
   2d6b8:	str	r2, [r3, #120]	; 0x78
   2d6bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d6c0:	ldr	r3, [r3, #124]	; 0x7c
   2d6c4:	cmp	r3, #0
   2d6c8:	beq	2d6d8 <flatcc_builder_custom_reset@@Base+0x130>
   2d6cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d6d0:	mov	r2, #16
   2d6d4:	str	r2, [r3, #124]	; 0x7c
   2d6d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d6dc:	mov	r2, #0
   2d6e0:	strh	r2, [r3, #128]	; 0x80
   2d6e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d6e8:	mov	r2, #0
   2d6ec:	str	r2, [r3, #136]	; 0x88
   2d6f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d6f4:	mov	r2, #0
   2d6f8:	str	r2, [r3, #140]	; 0x8c
   2d6fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d700:	mov	r2, #0
   2d704:	str	r2, [r3, #156]	; 0x9c
   2d708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d70c:	mov	r2, #0
   2d710:	str	r2, [r3, #160]	; 0xa0
   2d714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d718:	mov	r2, #0
   2d71c:	str	r2, [r3, #20]
   2d720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d724:	mov	r2, #0
   2d728:	str	r2, [r3, #24]
   2d72c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d730:	mov	r2, #0
   2d734:	str	r2, [r3, #148]	; 0x94
   2d738:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d73c:	mov	r2, #0
   2d740:	str	r2, [r3, #152]	; 0x98
   2d744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d748:	ldr	r2, [r3, #60]	; 0x3c
   2d74c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d750:	str	r2, [r3, #16]
   2d754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d758:	ldr	r2, [r3, #76]	; 0x4c
   2d75c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d760:	str	r2, [r3]
   2d764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d768:	ldr	r2, [r3, #52]	; 0x34
   2d76c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d770:	str	r2, [r3, #4]
   2d774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d778:	mov	r2, #0
   2d77c:	str	r2, [r3, #32]
   2d780:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d784:	cmp	r3, #0
   2d788:	beq	2d7b0 <flatcc_builder_custom_reset@@Base+0x208>
   2d78c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d790:	mov	r2, #0
   2d794:	str	r2, [r3, #172]	; 0xac
   2d798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d79c:	mov	r2, #0
   2d7a0:	str	r2, [r3, #176]	; 0xb0
   2d7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d7a8:	mov	r2, #0
   2d7ac:	str	r2, [r3, #180]	; 0xb4
   2d7b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d7b4:	ldr	r3, [r3, #184]	; 0xb8
   2d7b8:	cmp	r3, #0
   2d7bc:	beq	2d7d0 <flatcc_builder_custom_reset@@Base+0x228>
   2d7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d7c4:	add	r3, r3, #188	; 0xbc
   2d7c8:	mov	r0, r3
   2d7cc:	bl	330cc <flatcc_emitter_reset@@Base>
   2d7d0:	mov	r3, #0
   2d7d4:	mov	r0, r3
   2d7d8:	sub	sp, fp, #8
   2d7dc:	pop	{r4, fp, pc}
   2d7e0:	andeq	r3, r2, ip, ror r5
   2d7e4:			; <UNDEFINED> instruction: 0x000001b2
   2d7e8:	andeq	r3, r2, ip, lsr #2
   2d7ec:	muleq	r2, r8, r1

0002d7f0 <flatcc_builder_reset@@Base>:
   2d7f0:	push	{fp, lr}
   2d7f4:	add	fp, sp, #4
   2d7f8:	sub	sp, sp, #8
   2d7fc:	str	r0, [fp, #-8]
   2d800:	mov	r2, #0
   2d804:	mov	r1, #0
   2d808:	ldr	r0, [fp, #-8]
   2d80c:	bl	2d5a8 <flatcc_builder_custom_reset@@Base>
   2d810:	mov	r3, r0
   2d814:	mov	r0, r3
   2d818:	sub	sp, fp, #4
   2d81c:	pop	{fp, pc}

0002d820 <flatcc_builder_clear@@Base>:
   2d820:	push	{r4, fp, lr}
   2d824:	add	fp, sp, #8
   2d828:	sub	sp, sp, #28
   2d82c:	str	r0, [fp, #-24]	; 0xffffffe8
   2d830:	mov	r3, #0
   2d834:	str	r3, [fp, #-16]
   2d838:	b	2d888 <flatcc_builder_clear@@Base+0x68>
   2d83c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d840:	add	r2, r3, #52	; 0x34
   2d844:	ldr	r3, [fp, #-16]
   2d848:	lsl	r3, r3, #3
   2d84c:	add	r3, r2, r3
   2d850:	str	r3, [fp, #-20]	; 0xffffffec
   2d854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d858:	ldr	r4, [r3, #48]	; 0x30
   2d85c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d860:	ldr	r0, [r3, #40]	; 0x28
   2d864:	ldr	r3, [fp, #-16]
   2d868:	str	r3, [sp]
   2d86c:	mov	r3, #0
   2d870:	mov	r2, #0
   2d874:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d878:	blx	r4
   2d87c:	ldr	r3, [fp, #-16]
   2d880:	add	r3, r3, #1
   2d884:	str	r3, [fp, #-16]
   2d888:	ldr	r3, [fp, #-16]
   2d88c:	cmp	r3, #7
   2d890:	ble	2d83c <flatcc_builder_clear@@Base+0x1c>
   2d894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d898:	ldr	r3, [r3, #184]	; 0xb8
   2d89c:	cmp	r3, #0
   2d8a0:	beq	2d8b4 <flatcc_builder_clear@@Base+0x94>
   2d8a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d8a8:	add	r3, r3, #188	; 0xbc
   2d8ac:	mov	r0, r3
   2d8b0:	bl	33258 <flatcc_emitter_clear@@Base>
   2d8b4:	mov	r2, #232	; 0xe8
   2d8b8:	mov	r1, #0
   2d8bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d8c0:	bl	145bc <memset@plt>
   2d8c4:	nop			; (mov r0, r0)
   2d8c8:	sub	sp, fp, #8
   2d8cc:	pop	{r4, fp, pc}
   2d8d0:	push	{fp}		; (str fp, [sp, #-4]!)
   2d8d4:	add	fp, sp, #0
   2d8d8:	sub	sp, sp, #12
   2d8dc:	str	r0, [fp, #-8]
   2d8e0:	mov	r3, r1
   2d8e4:	strh	r3, [fp, #-10]
   2d8e8:	ldr	r3, [fp, #-8]
   2d8ec:	ldrh	r3, [r3, #128]	; 0x80
   2d8f0:	ldrh	r2, [fp, #-10]
   2d8f4:	cmp	r2, r3
   2d8f8:	bls	2d908 <flatcc_builder_clear@@Base+0xe8>
   2d8fc:	ldr	r3, [fp, #-8]
   2d900:	ldrh	r2, [fp, #-10]
   2d904:	strh	r2, [r3, #128]	; 0x80
   2d908:	nop			; (mov r0, r0)
   2d90c:	add	sp, fp, #0
   2d910:	pop	{fp}		; (ldr fp, [sp], #4)
   2d914:	bx	lr
   2d918:	push	{fp}		; (str fp, [sp, #-4]!)
   2d91c:	add	fp, sp, #0
   2d920:	sub	sp, sp, #12
   2d924:	str	r0, [fp, #-8]
   2d928:	mov	r3, r1
   2d92c:	strh	r3, [fp, #-10]
   2d930:	ldr	r3, [fp, #-8]
   2d934:	ldrh	r3, [r3]
   2d938:	ldrh	r2, [fp, #-10]
   2d93c:	cmp	r2, r3
   2d940:	bls	2d950 <flatcc_builder_clear@@Base+0x130>
   2d944:	ldr	r3, [fp, #-8]
   2d948:	ldrh	r2, [fp, #-10]
   2d94c:	strh	r2, [r3]
   2d950:	nop			; (mov r0, r0)
   2d954:	add	sp, fp, #0
   2d958:	pop	{fp}		; (ldr fp, [sp], #4)
   2d95c:	bx	lr

0002d960 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2d960:	push	{fp, lr}
   2d964:	add	fp, sp, #4
   2d968:	sub	sp, sp, #24
   2d96c:	str	r0, [fp, #-16]
   2d970:	str	r1, [fp, #-20]	; 0xffffffec
   2d974:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d978:	add	r3, r3, #3
   2d97c:	bic	r3, r3, #3
   2d980:	add	r3, r3, #4
   2d984:	str	r3, [fp, #-20]	; 0xffffffec
   2d988:	ldr	r3, [fp, #-16]
   2d98c:	ldr	r2, [r3, #228]	; 0xe4
   2d990:	mov	r3, #0
   2d994:	str	r3, [sp]
   2d998:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d99c:	mov	r1, #7
   2d9a0:	ldr	r0, [fp, #-16]
   2d9a4:	bl	2d074 <flatcc_builder_default_alloc@@Base+0x660>
   2d9a8:	str	r0, [fp, #-8]
   2d9ac:	ldr	r3, [fp, #-8]
   2d9b0:	cmp	r3, #0
   2d9b4:	bne	2d9c0 <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
   2d9b8:	mov	r3, #0
   2d9bc:	b	2da18 <flatcc_builder_enter_user_frame_ptr@@Base+0xb8>
   2d9c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d9c4:	mov	r1, #0
   2d9c8:	ldr	r0, [fp, #-8]
   2d9cc:	bl	145bc <memset@plt>
   2d9d0:	ldr	r3, [fp, #-8]
   2d9d4:	add	r2, r3, #4
   2d9d8:	str	r2, [fp, #-8]
   2d9dc:	ldr	r2, [fp, #-16]
   2d9e0:	ldr	r2, [r2, #224]	; 0xe0
   2d9e4:	str	r2, [r3]
   2d9e8:	ldr	r3, [fp, #-16]
   2d9ec:	ldr	r3, [r3, #228]	; 0xe4
   2d9f0:	add	r2, r3, #4
   2d9f4:	ldr	r3, [fp, #-16]
   2d9f8:	str	r2, [r3, #224]	; 0xe0
   2d9fc:	ldr	r3, [fp, #-16]
   2da00:	ldr	r2, [r3, #228]	; 0xe4
   2da04:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da08:	add	r2, r2, r3
   2da0c:	ldr	r3, [fp, #-16]
   2da10:	str	r2, [r3, #228]	; 0xe4
   2da14:	ldr	r3, [fp, #-8]
   2da18:	mov	r0, r3
   2da1c:	sub	sp, fp, #4
   2da20:	pop	{fp, pc}

0002da24 <flatcc_builder_enter_user_frame@@Base>:
   2da24:	push	{fp, lr}
   2da28:	add	fp, sp, #4
   2da2c:	sub	sp, sp, #24
   2da30:	str	r0, [fp, #-16]
   2da34:	str	r1, [fp, #-20]	; 0xffffffec
   2da38:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da3c:	add	r3, r3, #3
   2da40:	bic	r3, r3, #3
   2da44:	add	r3, r3, #4
   2da48:	str	r3, [fp, #-20]	; 0xffffffec
   2da4c:	ldr	r3, [fp, #-16]
   2da50:	ldr	r2, [r3, #228]	; 0xe4
   2da54:	mov	r3, #0
   2da58:	str	r3, [sp]
   2da5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da60:	mov	r1, #7
   2da64:	ldr	r0, [fp, #-16]
   2da68:	bl	2d074 <flatcc_builder_default_alloc@@Base+0x660>
   2da6c:	str	r0, [fp, #-8]
   2da70:	ldr	r3, [fp, #-8]
   2da74:	cmp	r3, #0
   2da78:	bne	2da84 <flatcc_builder_enter_user_frame@@Base+0x60>
   2da7c:	mov	r3, #0
   2da80:	b	2dae0 <flatcc_builder_enter_user_frame@@Base+0xbc>
   2da84:	ldr	r2, [fp, #-20]	; 0xffffffec
   2da88:	mov	r1, #0
   2da8c:	ldr	r0, [fp, #-8]
   2da90:	bl	145bc <memset@plt>
   2da94:	ldr	r3, [fp, #-8]
   2da98:	add	r2, r3, #4
   2da9c:	str	r2, [fp, #-8]
   2daa0:	ldr	r2, [fp, #-16]
   2daa4:	ldr	r2, [r2, #224]	; 0xe0
   2daa8:	str	r2, [r3]
   2daac:	ldr	r3, [fp, #-16]
   2dab0:	ldr	r3, [r3, #228]	; 0xe4
   2dab4:	add	r2, r3, #4
   2dab8:	ldr	r3, [fp, #-16]
   2dabc:	str	r2, [r3, #224]	; 0xe0
   2dac0:	ldr	r3, [fp, #-16]
   2dac4:	ldr	r2, [r3, #228]	; 0xe4
   2dac8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dacc:	add	r2, r2, r3
   2dad0:	ldr	r3, [fp, #-16]
   2dad4:	str	r2, [r3, #228]	; 0xe4
   2dad8:	ldr	r3, [fp, #-16]
   2dadc:	ldr	r3, [r3, #224]	; 0xe0
   2dae0:	mov	r0, r3
   2dae4:	sub	sp, fp, #4
   2dae8:	pop	{fp, pc}

0002daec <flatcc_builder_exit_user_frame@@Base>:
   2daec:	push	{fp, lr}
   2daf0:	add	fp, sp, #4
   2daf4:	sub	sp, sp, #16
   2daf8:	str	r0, [fp, #-16]
   2dafc:	ldr	r3, [fp, #-16]
   2db00:	ldr	r3, [r3, #224]	; 0xe0
   2db04:	cmp	r3, #0
   2db08:	bne	2db2c <flatcc_builder_exit_user_frame@@Base+0x40>
   2db0c:	ldr	r3, [pc, #104]	; 2db7c <flatcc_builder_exit_user_frame@@Base+0x90>
   2db10:	add	r3, pc, r3
   2db14:	ldr	r2, [pc, #100]	; 2db80 <flatcc_builder_exit_user_frame@@Base+0x94>
   2db18:	ldr	r1, [pc, #100]	; 2db84 <flatcc_builder_exit_user_frame@@Base+0x98>
   2db1c:	add	r1, pc, r1
   2db20:	ldr	r0, [pc, #96]	; 2db88 <flatcc_builder_exit_user_frame@@Base+0x9c>
   2db24:	add	r0, pc, r0
   2db28:	bl	14610 <__assert_fail@plt>
   2db2c:	ldr	r3, [fp, #-16]
   2db30:	ldr	r2, [r3, #108]	; 0x6c
   2db34:	ldr	r3, [fp, #-16]
   2db38:	ldr	r3, [r3, #224]	; 0xe0
   2db3c:	add	r3, r2, r3
   2db40:	str	r3, [fp, #-8]
   2db44:	ldr	r3, [fp, #-16]
   2db48:	ldr	r3, [r3, #224]	; 0xe0
   2db4c:	sub	r2, r3, #4
   2db50:	ldr	r3, [fp, #-16]
   2db54:	str	r2, [r3, #228]	; 0xe4
   2db58:	ldr	r3, [fp, #-8]
   2db5c:	ldr	r2, [r3, #-4]
   2db60:	ldr	r3, [fp, #-16]
   2db64:	str	r2, [r3, #224]	; 0xe0
   2db68:	ldr	r3, [fp, #-16]
   2db6c:	ldr	r3, [r3, #224]	; 0xe0
   2db70:	mov	r0, r3
   2db74:	sub	sp, fp, #4
   2db78:	pop	{fp, pc}
   2db7c:	andeq	r3, r2, r4, lsl #2
   2db80:	andeq	r0, r0, lr, lsl r2
   2db84:	muleq	r2, r8, ip
   2db88:	andeq	r2, r2, r8, lsl sp

0002db8c <flatcc_builder_exit_user_frame_at@@Base>:
   2db8c:	push	{fp, lr}
   2db90:	add	fp, sp, #4
   2db94:	sub	sp, sp, #8
   2db98:	str	r0, [fp, #-8]
   2db9c:	str	r1, [fp, #-12]
   2dba0:	ldr	r3, [fp, #-8]
   2dba4:	ldr	r2, [r3, #224]	; 0xe0
   2dba8:	ldr	r3, [fp, #-12]
   2dbac:	cmp	r2, r3
   2dbb0:	bcs	2dbd4 <flatcc_builder_exit_user_frame_at@@Base+0x48>
   2dbb4:	ldr	r3, [pc, #60]	; 2dbf8 <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   2dbb8:	add	r3, pc, r3
   2dbbc:	ldr	r2, [pc, #56]	; 2dbfc <flatcc_builder_exit_user_frame_at@@Base+0x70>
   2dbc0:	ldr	r1, [pc, #56]	; 2dc00 <flatcc_builder_exit_user_frame_at@@Base+0x74>
   2dbc4:	add	r1, pc, r1
   2dbc8:	ldr	r0, [pc, #52]	; 2dc04 <flatcc_builder_exit_user_frame_at@@Base+0x78>
   2dbcc:	add	r0, pc, r0
   2dbd0:	bl	14610 <__assert_fail@plt>
   2dbd4:	ldr	r3, [fp, #-8]
   2dbd8:	ldr	r2, [fp, #-12]
   2dbdc:	str	r2, [r3, #224]	; 0xe0
   2dbe0:	ldr	r0, [fp, #-8]
   2dbe4:	bl	2daec <flatcc_builder_exit_user_frame@@Base>
   2dbe8:	mov	r3, r0
   2dbec:	mov	r0, r3
   2dbf0:	sub	sp, fp, #4
   2dbf4:	pop	{fp, pc}
   2dbf8:	andeq	r3, r2, ip, ror r0
   2dbfc:	andeq	r0, r0, r7, lsr #4
   2dc00:	strdeq	r2, [r2], -r0
   2dc04:	andeq	r2, r2, ip, lsl #25

0002dc08 <flatcc_builder_get_current_user_frame@@Base>:
   2dc08:	push	{fp}		; (str fp, [sp, #-4]!)
   2dc0c:	add	fp, sp, #0
   2dc10:	sub	sp, sp, #12
   2dc14:	str	r0, [fp, #-8]
   2dc18:	ldr	r3, [fp, #-8]
   2dc1c:	ldr	r3, [r3, #224]	; 0xe0
   2dc20:	mov	r0, r3
   2dc24:	add	sp, fp, #0
   2dc28:	pop	{fp}		; (ldr fp, [sp], #4)
   2dc2c:	bx	lr

0002dc30 <flatcc_builder_get_user_frame_ptr@@Base>:
   2dc30:	push	{fp}		; (str fp, [sp, #-4]!)
   2dc34:	add	fp, sp, #0
   2dc38:	sub	sp, sp, #12
   2dc3c:	str	r0, [fp, #-8]
   2dc40:	str	r1, [fp, #-12]
   2dc44:	ldr	r3, [fp, #-8]
   2dc48:	ldr	r2, [r3, #108]	; 0x6c
   2dc4c:	ldr	r3, [fp, #-12]
   2dc50:	add	r3, r2, r3
   2dc54:	mov	r0, r3
   2dc58:	add	sp, fp, #0
   2dc5c:	pop	{fp}		; (ldr fp, [sp], #4)
   2dc60:	bx	lr
   2dc64:	push	{fp, lr}
   2dc68:	add	fp, sp, #4
   2dc6c:	sub	sp, sp, #16
   2dc70:	str	r0, [fp, #-8]
   2dc74:	mov	r3, r1
   2dc78:	strh	r3, [fp, #-10]
   2dc7c:	ldr	r3, [fp, #-8]
   2dc80:	ldr	r3, [r3, #156]	; 0x9c
   2dc84:	add	r2, r3, #1
   2dc88:	ldr	r3, [fp, #-8]
   2dc8c:	str	r2, [r3, #156]	; 0x9c
   2dc90:	ldr	r3, [fp, #-8]
   2dc94:	ldr	r2, [r3, #156]	; 0x9c
   2dc98:	ldr	r3, [fp, #-8]
   2dc9c:	ldr	r3, [r3, #160]	; 0xa0
   2dca0:	cmp	r2, r3
   2dca4:	ble	2dd94 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
   2dca8:	ldr	r3, [fp, #-8]
   2dcac:	ldr	r3, [r3, #176]	; 0xb0
   2dcb0:	cmp	r3, #0
   2dcb4:	ble	2dcd8 <flatcc_builder_get_user_frame_ptr@@Base+0xa8>
   2dcb8:	ldr	r3, [fp, #-8]
   2dcbc:	ldr	r2, [r3, #156]	; 0x9c
   2dcc0:	ldr	r3, [fp, #-8]
   2dcc4:	ldr	r3, [r3, #176]	; 0xb0
   2dcc8:	cmp	r2, r3
   2dccc:	ble	2dcd8 <flatcc_builder_get_user_frame_ptr@@Base+0xa8>
   2dcd0:	mvn	r3, #0
   2dcd4:	b	2de34 <flatcc_builder_get_user_frame_ptr@@Base+0x204>
   2dcd8:	ldr	r3, [fp, #-8]
   2dcdc:	ldr	r3, [r3, #156]	; 0x9c
   2dce0:	sub	r3, r3, #1
   2dce4:	mov	r2, r3
   2dce8:	mov	r3, r2
   2dcec:	lsl	r3, r3, #3
   2dcf0:	add	r3, r3, r2
   2dcf4:	lsl	r3, r3, #2
   2dcf8:	mov	r2, r3
   2dcfc:	mov	r3, #0
   2dd00:	str	r3, [sp]
   2dd04:	mov	r3, #36	; 0x24
   2dd08:	mov	r1, #4
   2dd0c:	ldr	r0, [fp, #-8]
   2dd10:	bl	2d074 <flatcc_builder_default_alloc@@Base+0x660>
   2dd14:	mov	r2, r0
   2dd18:	ldr	r3, [fp, #-8]
   2dd1c:	str	r2, [r3, #32]
   2dd20:	ldr	r3, [fp, #-8]
   2dd24:	ldr	r3, [r3, #32]
   2dd28:	cmp	r3, #0
   2dd2c:	bne	2dd38 <flatcc_builder_get_user_frame_ptr@@Base+0x108>
   2dd30:	mvn	r3, #0
   2dd34:	b	2de34 <flatcc_builder_get_user_frame_ptr@@Base+0x204>
   2dd38:	ldr	r3, [fp, #-8]
   2dd3c:	ldr	r3, [r3, #88]	; 0x58
   2dd40:	ldr	r2, [pc, #248]	; 2de40 <flatcc_builder_get_user_frame_ptr@@Base+0x210>
   2dd44:	umull	r2, r3, r2, r3
   2dd48:	lsr	r3, r3, #3
   2dd4c:	mov	r2, r3
   2dd50:	ldr	r3, [fp, #-8]
   2dd54:	str	r2, [r3, #160]	; 0xa0
   2dd58:	ldr	r3, [fp, #-8]
   2dd5c:	ldr	r3, [r3, #176]	; 0xb0
   2dd60:	cmp	r3, #0
   2dd64:	ble	2dda8 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
   2dd68:	ldr	r3, [fp, #-8]
   2dd6c:	ldr	r2, [r3, #176]	; 0xb0
   2dd70:	ldr	r3, [fp, #-8]
   2dd74:	ldr	r3, [r3, #160]	; 0xa0
   2dd78:	cmp	r2, r3
   2dd7c:	bge	2dda8 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
   2dd80:	ldr	r3, [fp, #-8]
   2dd84:	ldr	r2, [r3, #176]	; 0xb0
   2dd88:	ldr	r3, [fp, #-8]
   2dd8c:	str	r2, [r3, #160]	; 0xa0
   2dd90:	b	2dda8 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
   2dd94:	ldr	r3, [fp, #-8]
   2dd98:	ldr	r3, [r3, #32]
   2dd9c:	add	r2, r3, #36	; 0x24
   2dda0:	ldr	r3, [fp, #-8]
   2dda4:	str	r2, [r3, #32]
   2dda8:	ldr	r3, [fp, #-8]
   2ddac:	ldr	r3, [r3, #32]
   2ddb0:	ldr	r2, [fp, #-8]
   2ddb4:	ldr	r2, [r2, #20]
   2ddb8:	str	r2, [r3, #8]
   2ddbc:	ldr	r3, [fp, #-8]
   2ddc0:	ldr	r3, [r3, #32]
   2ddc4:	ldr	r2, [fp, #-8]
   2ddc8:	ldrh	r2, [r2, #130]	; 0x82
   2ddcc:	strh	r2, [r3, #12]
   2ddd0:	ldr	r3, [fp, #-8]
   2ddd4:	ldrh	r2, [fp, #-10]
   2ddd8:	strh	r2, [r3, #130]	; 0x82
   2dddc:	ldr	r3, [fp, #-8]
   2dde0:	ldr	r3, [r3, #32]
   2dde4:	ldr	r2, [fp, #-8]
   2dde8:	ldr	r2, [r2, #28]
   2ddec:	str	r2, [r3]
   2ddf0:	ldr	r3, [fp, #-8]
   2ddf4:	ldr	r3, [r3, #32]
   2ddf8:	mvn	r2, #3
   2ddfc:	str	r2, [r3, #4]
   2de00:	ldr	r3, [fp, #-8]
   2de04:	ldr	r2, [r3, #28]
   2de08:	ldr	r3, [fp, #-8]
   2de0c:	ldr	r3, [r3, #20]
   2de10:	add	r3, r2, r3
   2de14:	add	r3, r3, #7
   2de18:	bic	r2, r3, #7
   2de1c:	ldr	r3, [fp, #-8]
   2de20:	str	r2, [r3, #28]
   2de24:	ldr	r3, [fp, #-8]
   2de28:	mov	r2, #0
   2de2c:	str	r2, [r3, #20]
   2de30:	mov	r3, #0
   2de34:	mov	r0, r3
   2de38:	sub	sp, fp, #4
   2de3c:	pop	{fp, pc}
   2de40:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   2de44:	push	{fp, lr}
   2de48:	add	fp, sp, #4
   2de4c:	sub	sp, sp, #8
   2de50:	str	r0, [fp, #-8]
   2de54:	ldr	r3, [fp, #-8]
   2de58:	ldr	r0, [r3, #16]
   2de5c:	ldr	r3, [fp, #-8]
   2de60:	ldr	r3, [r3, #20]
   2de64:	mov	r2, r3
   2de68:	mov	r1, #0
   2de6c:	bl	145bc <memset@plt>
   2de70:	ldr	r3, [fp, #-8]
   2de74:	ldr	r3, [r3, #32]
   2de78:	ldr	r2, [r3, #8]
   2de7c:	ldr	r3, [fp, #-8]
   2de80:	str	r2, [r3, #20]
   2de84:	ldr	r3, [fp, #-8]
   2de88:	ldr	r3, [r3, #32]
   2de8c:	ldr	r2, [r3]
   2de90:	ldr	r3, [fp, #-8]
   2de94:	str	r2, [r3, #28]
   2de98:	ldr	r3, [fp, #-8]
   2de9c:	ldr	r3, [r3, #32]
   2dea0:	ldr	r3, [r3, #4]
   2dea4:	mov	r1, r3
   2dea8:	ldr	r0, [fp, #-8]
   2deac:	bl	2cbdc <flatcc_builder_default_alloc@@Base+0x1c8>
   2deb0:	ldr	r3, [fp, #-8]
   2deb4:	ldrh	r3, [r3, #130]	; 0x82
   2deb8:	mov	r1, r3
   2debc:	ldr	r0, [fp, #-8]
   2dec0:	bl	2d8d0 <flatcc_builder_clear@@Base+0xb0>
   2dec4:	ldr	r3, [fp, #-8]
   2dec8:	ldr	r3, [r3, #32]
   2decc:	ldrh	r2, [r3, #12]
   2ded0:	ldr	r3, [fp, #-8]
   2ded4:	strh	r2, [r3, #130]	; 0x82
   2ded8:	ldr	r3, [fp, #-8]
   2dedc:	ldr	r3, [r3, #32]
   2dee0:	sub	r2, r3, #36	; 0x24
   2dee4:	ldr	r3, [fp, #-8]
   2dee8:	str	r2, [r3, #32]
   2deec:	ldr	r3, [fp, #-8]
   2def0:	ldr	r3, [r3, #156]	; 0x9c
   2def4:	sub	r2, r3, #1
   2def8:	ldr	r3, [fp, #-8]
   2defc:	str	r2, [r3, #156]	; 0x9c
   2df00:	nop			; (mov r0, r0)
   2df04:	sub	sp, fp, #4
   2df08:	pop	{fp, pc}
   2df0c:	push	{fp}		; (str fp, [sp, #-4]!)
   2df10:	add	fp, sp, #0
   2df14:	sub	sp, sp, #20
   2df18:	str	r0, [fp, #-8]
   2df1c:	str	r1, [fp, #-12]
   2df20:	mov	r3, r2
   2df24:	strh	r3, [fp, #-14]
   2df28:	ldr	r3, [fp, #-8]
   2df2c:	ldr	r3, [r3, #136]	; 0x88
   2df30:	mov	r2, r3
   2df34:	ldr	r3, [fp, #-12]
   2df38:	sub	r3, r2, r3
   2df3c:	ldrh	r2, [fp, #-14]
   2df40:	sub	r2, r2, #1
   2df44:	and	r3, r3, r2
   2df48:	mov	r0, r3
   2df4c:	add	sp, fp, #0
   2df50:	pop	{fp}		; (ldr fp, [sp], #4)
   2df54:	bx	lr
   2df58:	push	{fp}		; (str fp, [sp, #-4]!)
   2df5c:	add	fp, sp, #0
   2df60:	sub	sp, sp, #12
   2df64:	str	r0, [fp, #-8]
   2df68:	mov	r3, r1
   2df6c:	strh	r3, [fp, #-10]
   2df70:	ldr	r3, [fp, #-8]
   2df74:	ldr	r2, [r3, #140]	; 0x8c
   2df78:	ldrh	r3, [fp, #-10]
   2df7c:	sub	r3, r3, #1
   2df80:	and	r3, r3, r2
   2df84:	mov	r0, r3
   2df88:	add	sp, fp, #0
   2df8c:	pop	{fp}		; (ldr fp, [sp], #4)
   2df90:	bx	lr
   2df94:	push	{r4, fp, lr}
   2df98:	add	fp, sp, #8
   2df9c:	sub	sp, sp, #28
   2dfa0:	str	r0, [fp, #-24]	; 0xffffffe8
   2dfa4:	str	r1, [fp, #-28]	; 0xffffffe4
   2dfa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dfac:	ldr	r3, [r3, #136]	; 0x88
   2dfb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2dfb4:	ldr	r2, [r2]
   2dfb8:	sub	r3, r3, r2
   2dfbc:	str	r3, [fp, #-16]
   2dfc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dfc4:	ldr	r2, [r3, #136]	; 0x88
   2dfc8:	ldr	r3, [fp, #-16]
   2dfcc:	cmp	r2, r3
   2dfd0:	bgt	2dff4 <flatcc_builder_get_user_frame_ptr@@Base+0x3c4>
   2dfd4:	ldr	r3, [pc, #152]	; 2e074 <flatcc_builder_get_user_frame_ptr@@Base+0x444>
   2dfd8:	add	r3, pc, r3
   2dfdc:	ldr	r2, [pc, #148]	; 2e078 <flatcc_builder_get_user_frame_ptr@@Base+0x448>
   2dfe0:	ldr	r1, [pc, #148]	; 2e07c <flatcc_builder_get_user_frame_ptr@@Base+0x44c>
   2dfe4:	add	r1, pc, r1
   2dfe8:	ldr	r0, [pc, #144]	; 2e080 <flatcc_builder_get_user_frame_ptr@@Base+0x450>
   2dfec:	add	r0, pc, r0
   2dff0:	bl	14610 <__assert_fail@plt>
   2dff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dff8:	ldr	r4, [r3, #44]	; 0x2c
   2dffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e000:	ldr	r0, [r3, #36]	; 0x24
   2e004:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e008:	add	r1, r3, #8
   2e00c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e010:	ldr	r2, [r3, #4]
   2e014:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e018:	ldr	r3, [r3]
   2e01c:	str	r3, [sp]
   2e020:	ldr	r3, [fp, #-16]
   2e024:	blx	r4
   2e028:	mov	r3, r0
   2e02c:	cmp	r3, #0
   2e030:	beq	2e054 <flatcc_builder_get_user_frame_ptr@@Base+0x424>
   2e034:	ldr	r3, [pc, #72]	; 2e084 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
   2e038:	add	r3, pc, r3
   2e03c:	ldr	r2, [pc, #68]	; 2e088 <flatcc_builder_get_user_frame_ptr@@Base+0x458>
   2e040:	ldr	r1, [pc, #68]	; 2e08c <flatcc_builder_get_user_frame_ptr@@Base+0x45c>
   2e044:	add	r1, pc, r1
   2e048:	ldr	r0, [pc, #64]	; 2e090 <flatcc_builder_get_user_frame_ptr@@Base+0x460>
   2e04c:	add	r0, pc, r0
   2e050:	bl	14610 <__assert_fail@plt>
   2e054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e058:	ldr	r2, [fp, #-16]
   2e05c:	str	r2, [r3, #136]	; 0x88
   2e060:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e064:	ldr	r3, [r3, #136]	; 0x88
   2e068:	mov	r0, r3
   2e06c:	sub	sp, fp, #8
   2e070:	pop	{r4, fp, pc}
   2e074:	muleq	r2, ip, ip
   2e078:	andeq	r0, r0, r7, lsl #5
   2e07c:	ldrdeq	r2, [r2], -r0
   2e080:	andeq	r2, r2, r8, lsr #16
   2e084:	andeq	r2, r2, ip, lsr ip
   2e088:	andeq	r0, r0, fp, lsl #5
   2e08c:	andeq	r2, r2, r0, ror r7
   2e090:	andeq	r2, r2, r8, asr #15
   2e094:	push	{r4, fp, lr}
   2e098:	add	fp, sp, #8
   2e09c:	sub	sp, sp, #28
   2e0a0:	str	r0, [fp, #-24]	; 0xffffffe8
   2e0a4:	str	r1, [fp, #-28]	; 0xffffffe4
   2e0a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e0ac:	ldr	r3, [r3, #140]	; 0x8c
   2e0b0:	str	r3, [fp, #-16]
   2e0b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e0b8:	ldr	r3, [r3]
   2e0bc:	mov	r2, r3
   2e0c0:	ldr	r3, [fp, #-16]
   2e0c4:	add	r2, r2, r3
   2e0c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e0cc:	str	r2, [r3, #140]	; 0x8c
   2e0d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e0d4:	ldr	r2, [r3, #140]	; 0x8c
   2e0d8:	ldr	r3, [fp, #-16]
   2e0dc:	cmp	r2, r3
   2e0e0:	bge	2e104 <flatcc_builder_get_user_frame_ptr@@Base+0x4d4>
   2e0e4:	ldr	r3, [pc, #140]	; 2e178 <flatcc_builder_get_user_frame_ptr@@Base+0x548>
   2e0e8:	add	r3, pc, r3
   2e0ec:	ldr	r2, [pc, #136]	; 2e17c <flatcc_builder_get_user_frame_ptr@@Base+0x54c>
   2e0f0:	ldr	r1, [pc, #136]	; 2e180 <flatcc_builder_get_user_frame_ptr@@Base+0x550>
   2e0f4:	add	r1, pc, r1
   2e0f8:	ldr	r0, [pc, #132]	; 2e184 <flatcc_builder_get_user_frame_ptr@@Base+0x554>
   2e0fc:	add	r0, pc, r0
   2e100:	bl	14610 <__assert_fail@plt>
   2e104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e108:	ldr	r4, [r3, #44]	; 0x2c
   2e10c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e110:	ldr	r0, [r3, #36]	; 0x24
   2e114:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e118:	add	r1, r3, #8
   2e11c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e120:	ldr	r2, [r3, #4]
   2e124:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e128:	ldr	r3, [r3]
   2e12c:	str	r3, [sp]
   2e130:	ldr	r3, [fp, #-16]
   2e134:	blx	r4
   2e138:	mov	r3, r0
   2e13c:	cmp	r3, #0
   2e140:	beq	2e164 <flatcc_builder_get_user_frame_ptr@@Base+0x534>
   2e144:	ldr	r3, [pc, #60]	; 2e188 <flatcc_builder_get_user_frame_ptr@@Base+0x558>
   2e148:	add	r3, pc, r3
   2e14c:	ldr	r2, [pc, #56]	; 2e18c <flatcc_builder_get_user_frame_ptr@@Base+0x55c>
   2e150:	ldr	r1, [pc, #56]	; 2e190 <flatcc_builder_get_user_frame_ptr@@Base+0x560>
   2e154:	add	r1, pc, r1
   2e158:	ldr	r0, [pc, #52]	; 2e194 <flatcc_builder_get_user_frame_ptr@@Base+0x564>
   2e15c:	add	r0, pc, r0
   2e160:	bl	14610 <__assert_fail@plt>
   2e164:	ldr	r3, [fp, #-16]
   2e168:	add	r3, r3, #1
   2e16c:	mov	r0, r3
   2e170:	sub	sp, fp, #8
   2e174:	pop	{r4, fp, pc}
   2e178:	andeq	r2, r2, r0, lsl #23
   2e17c:	andeq	r0, r0, r1, lsr #5
   2e180:	andeq	r2, r2, r0, asr #13
   2e184:	andeq	r2, r2, r8, lsl r7
   2e188:	andeq	r2, r2, r0, lsr #22
   2e18c:	andeq	r0, r0, r5, lsr #5
   2e190:	andeq	r2, r2, r0, ror #12
   2e194:			; <UNDEFINED> instruction: 0x000226b8
   2e198:	push	{r4, fp, lr}
   2e19c:	add	fp, sp, #8
   2e1a0:	sub	sp, sp, #100	; 0x64
   2e1a4:	str	r0, [fp, #-96]	; 0xffffffa0
   2e1a8:	str	r1, [fp, #-100]	; 0xffffff9c
   2e1ac:	str	r3, [fp, #-108]	; 0xffffff94
   2e1b0:	strh	r2, [fp, #-102]	; 0xffffff9a
   2e1b4:	ldr	r4, [pc, #320]	; 2e2fc <flatcc_builder_get_user_frame_ptr@@Base+0x6cc>
   2e1b8:	add	r4, pc, r4
   2e1bc:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2e1c0:	cmp	r3, #0
   2e1c4:	bne	2e1ec <flatcc_builder_get_user_frame_ptr@@Base+0x5bc>
   2e1c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e1cc:	ldrh	r3, [r3, #132]	; 0x84
   2e1d0:	cmp	r3, #0
   2e1d4:	beq	2e1e4 <flatcc_builder_get_user_frame_ptr@@Base+0x5b4>
   2e1d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e1dc:	ldrh	r3, [r3, #132]	; 0x84
   2e1e0:	b	2e1f0 <flatcc_builder_get_user_frame_ptr@@Base+0x5c0>
   2e1e4:	mov	r3, #1
   2e1e8:	b	2e1f0 <flatcc_builder_get_user_frame_ptr@@Base+0x5c0>
   2e1ec:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2e1f0:	strh	r3, [fp, #-102]	; 0xffffff9a
   2e1f4:	mov	r1, #4
   2e1f8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   2e1fc:	bl	2d918 <flatcc_builder_clear@@Base+0xf8>
   2e200:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2e204:	mov	r1, r3
   2e208:	ldr	r0, [fp, #-100]	; 0xffffff9c
   2e20c:	bl	2d918 <flatcc_builder_clear@@Base+0xf8>
   2e210:	ldr	r3, [fp, #-108]	; 0xffffff94
   2e214:	cmp	r3, #0
   2e218:	bne	2e2ec <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   2e21c:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2e220:	mov	r1, r3
   2e224:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2e228:	bl	2df58 <flatcc_builder_get_user_frame_ptr@@Base+0x328>
   2e22c:	str	r0, [fp, #-16]
   2e230:	ldr	r3, [fp, #-16]
   2e234:	cmp	r3, #0
   2e238:	beq	2e2ec <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   2e23c:	mov	r3, #0
   2e240:	str	r3, [fp, #-88]	; 0xffffffa8
   2e244:	mov	r3, #0
   2e248:	str	r3, [fp, #-84]	; 0xffffffac
   2e24c:	ldr	r3, [fp, #-16]
   2e250:	cmp	r3, #0
   2e254:	beq	2e2b0 <flatcc_builder_get_user_frame_ptr@@Base+0x680>
   2e258:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2e25c:	ldr	r3, [fp, #-16]
   2e260:	add	r3, r2, r3
   2e264:	str	r3, [fp, #-88]	; 0xffffffa8
   2e268:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e26c:	add	r3, r3, #1
   2e270:	lsl	r3, r3, #3
   2e274:	sub	r2, fp, #12
   2e278:	add	r3, r2, r3
   2e27c:	ldr	r2, [pc, #124]	; 2e300 <flatcc_builder_get_user_frame_ptr@@Base+0x6d0>
   2e280:	ldr	r2, [r4, r2]
   2e284:	str	r2, [r3, #-76]	; 0xffffffb4
   2e288:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e28c:	add	r3, r3, #1
   2e290:	lsl	r3, r3, #3
   2e294:	sub	r2, fp, #12
   2e298:	add	r3, r2, r3
   2e29c:	ldr	r2, [fp, #-16]
   2e2a0:	str	r2, [r3, #-72]	; 0xffffffb8
   2e2a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e2a8:	add	r3, r3, #1
   2e2ac:	str	r3, [fp, #-84]	; 0xffffffac
   2e2b0:	sub	r3, fp, #88	; 0x58
   2e2b4:	mov	r1, r3
   2e2b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2e2bc:	bl	2e094 <flatcc_builder_get_user_frame_ptr@@Base+0x464>
   2e2c0:	mov	r3, r0
   2e2c4:	cmp	r3, #0
   2e2c8:	bne	2e2ec <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   2e2cc:	ldr	r3, [pc, #48]	; 2e304 <flatcc_builder_get_user_frame_ptr@@Base+0x6d4>
   2e2d0:	add	r3, pc, r3
   2e2d4:	ldr	r2, [pc, #44]	; 2e308 <flatcc_builder_get_user_frame_ptr@@Base+0x6d8>
   2e2d8:	ldr	r1, [pc, #44]	; 2e30c <flatcc_builder_get_user_frame_ptr@@Base+0x6dc>
   2e2dc:	add	r1, pc, r1
   2e2e0:	ldr	r0, [pc, #40]	; 2e310 <flatcc_builder_get_user_frame_ptr@@Base+0x6e0>
   2e2e4:	add	r0, pc, r0
   2e2e8:	bl	14610 <__assert_fail@plt>
   2e2ec:	mov	r3, #0
   2e2f0:	mov	r0, r3
   2e2f4:	sub	sp, fp, #8
   2e2f8:	pop	{r4, fp, pc}
   2e2fc:	andeq	r5, r3, r0, asr #28
   2e300:	andeq	r0, r0, r4, rrx
   2e304:	andeq	r2, r2, r8, lsl #19
   2e308:			; <UNDEFINED> instruction: 0x000002be
   2e30c:	ldrdeq	r2, [r2], -r8
   2e310:	andeq	r2, r2, r0, lsr r5

0002e314 <flatcc_builder_embed_buffer@@Base>:
   2e314:	push	{r4, fp, lr}
   2e318:	add	fp, sp, #8
   2e31c:	sub	sp, sp, #108	; 0x6c
   2e320:	str	r0, [fp, #-104]	; 0xffffff98
   2e324:	str	r2, [fp, #-112]	; 0xffffff90
   2e328:	str	r3, [fp, #-116]	; 0xffffff8c
   2e32c:	strh	r1, [fp, #-106]	; 0xffffff96
   2e330:	ldr	r4, [pc, #492]	; 2e524 <flatcc_builder_embed_buffer@@Base+0x210>
   2e334:	add	r4, pc, r4
   2e338:	ldr	r3, [fp, #8]
   2e33c:	and	r3, r3, #2
   2e340:	str	r3, [fp, #-16]
   2e344:	ldr	r3, [fp, #-104]	; 0xffffff98
   2e348:	ldr	r3, [r3, #152]	; 0x98
   2e34c:	cmp	r3, #0
   2e350:	movne	r3, #1
   2e354:	moveq	r3, #0
   2e358:	uxtb	r3, r3
   2e35c:	ldrh	r2, [fp, #-106]	; 0xffffff96
   2e360:	add	r1, fp, #4
   2e364:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e368:	bl	2e198 <flatcc_builder_get_user_frame_ptr@@Base+0x568>
   2e36c:	mov	r3, r0
   2e370:	cmp	r3, #0
   2e374:	beq	2e380 <flatcc_builder_embed_buffer@@Base+0x6c>
   2e378:	mov	r3, #0
   2e37c:	b	2e518 <flatcc_builder_embed_buffer@@Base+0x204>
   2e380:	ldr	r3, [fp, #-16]
   2e384:	cmp	r3, #0
   2e388:	beq	2e394 <flatcc_builder_embed_buffer@@Base+0x80>
   2e38c:	mov	r2, #4
   2e390:	b	2e398 <flatcc_builder_embed_buffer@@Base+0x84>
   2e394:	mov	r2, #0
   2e398:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e39c:	add	r3, r2, r3
   2e3a0:	ldrh	r2, [fp, #4]
   2e3a4:	mov	r1, r3
   2e3a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e3ac:	bl	2df0c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2e3b0:	str	r0, [fp, #-20]	; 0xffffffec
   2e3b4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2e3b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e3bc:	add	r3, r2, r3
   2e3c0:	mov	r0, r3
   2e3c4:	bl	2c8d0 <main@@Base+0x1694>
   2e3c8:	mov	r3, r0
   2e3cc:	str	r3, [fp, #-24]	; 0xffffffe8
   2e3d0:	mov	r3, #0
   2e3d4:	str	r3, [fp, #-96]	; 0xffffffa0
   2e3d8:	mov	r3, #0
   2e3dc:	str	r3, [fp, #-92]	; 0xffffffa4
   2e3e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   2e3e4:	ldr	r3, [r3, #152]	; 0x98
   2e3e8:	cmp	r3, #0
   2e3ec:	beq	2e440 <flatcc_builder_embed_buffer@@Base+0x12c>
   2e3f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2e3f4:	add	r3, r3, #4
   2e3f8:	str	r3, [fp, #-96]	; 0xffffffa0
   2e3fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e400:	add	r3, r3, #1
   2e404:	lsl	r3, r3, #3
   2e408:	sub	r2, fp, #12
   2e40c:	add	r3, r2, r3
   2e410:	sub	r2, fp, #24
   2e414:	str	r2, [r3, #-84]	; 0xffffffac
   2e418:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e41c:	add	r3, r3, #1
   2e420:	lsl	r3, r3, #3
   2e424:	sub	r2, fp, #12
   2e428:	add	r3, r2, r3
   2e42c:	mov	r2, #4
   2e430:	str	r2, [r3, #-80]	; 0xffffffb0
   2e434:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e438:	add	r3, r3, #1
   2e43c:	str	r3, [fp, #-92]	; 0xffffffa4
   2e440:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e444:	cmp	r3, #0
   2e448:	beq	2e4a0 <flatcc_builder_embed_buffer@@Base+0x18c>
   2e44c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2e450:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e454:	add	r3, r2, r3
   2e458:	str	r3, [fp, #-96]	; 0xffffffa0
   2e45c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e460:	add	r3, r3, #1
   2e464:	lsl	r3, r3, #3
   2e468:	sub	r2, fp, #12
   2e46c:	add	r3, r2, r3
   2e470:	ldr	r2, [fp, #-112]	; 0xffffff90
   2e474:	str	r2, [r3, #-84]	; 0xffffffac
   2e478:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e47c:	add	r3, r3, #1
   2e480:	lsl	r3, r3, #3
   2e484:	sub	r2, fp, #12
   2e488:	add	r3, r2, r3
   2e48c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2e490:	str	r2, [r3, #-80]	; 0xffffffb0
   2e494:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e498:	add	r3, r3, #1
   2e49c:	str	r3, [fp, #-92]	; 0xffffffa4
   2e4a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e4a4:	cmp	r3, #0
   2e4a8:	beq	2e504 <flatcc_builder_embed_buffer@@Base+0x1f0>
   2e4ac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2e4b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e4b4:	add	r3, r2, r3
   2e4b8:	str	r3, [fp, #-96]	; 0xffffffa0
   2e4bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e4c0:	add	r3, r3, #1
   2e4c4:	lsl	r3, r3, #3
   2e4c8:	sub	r2, fp, #12
   2e4cc:	add	r3, r2, r3
   2e4d0:	ldr	r2, [pc, #80]	; 2e528 <flatcc_builder_embed_buffer@@Base+0x214>
   2e4d4:	ldr	r2, [r4, r2]
   2e4d8:	str	r2, [r3, #-84]	; 0xffffffac
   2e4dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e4e0:	add	r3, r3, #1
   2e4e4:	lsl	r3, r3, #3
   2e4e8:	sub	r2, fp, #12
   2e4ec:	add	r3, r2, r3
   2e4f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e4f4:	str	r2, [r3, #-80]	; 0xffffffb0
   2e4f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2e4fc:	add	r3, r3, #1
   2e500:	str	r3, [fp, #-92]	; 0xffffffa4
   2e504:	sub	r3, fp, #96	; 0x60
   2e508:	mov	r1, r3
   2e50c:	ldr	r0, [fp, #-104]	; 0xffffff98
   2e510:	bl	2df94 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2e514:	mov	r3, r0
   2e518:	mov	r0, r3
   2e51c:	sub	sp, fp, #8
   2e520:	pop	{r4, fp, pc}
   2e524:	andeq	r5, r3, r4, asr #25
   2e528:	andeq	r0, r0, r4, rrx

0002e52c <flatcc_builder_create_buffer@@Base>:
   2e52c:	push	{r4, fp, lr}
   2e530:	add	fp, sp, #8
   2e534:	sub	sp, sp, #132	; 0x84
   2e538:	str	r0, [fp, #-128]	; 0xffffff80
   2e53c:	str	r1, [fp, #-132]	; 0xffffff7c
   2e540:	str	r3, [fp, #-140]	; 0xffffff74
   2e544:	strh	r2, [fp, #-134]	; 0xffffff7a
   2e548:	ldr	r4, [pc, #932]	; 2e8f4 <flatcc_builder_create_buffer@@Base+0x3c8>
   2e54c:	add	r4, pc, r4
   2e550:	mov	r3, #0
   2e554:	str	r3, [fp, #-16]
   2e558:	mov	r3, #0
   2e55c:	str	r3, [fp, #-120]	; 0xffffff88
   2e560:	ldr	r3, [fp, #8]
   2e564:	and	r3, r3, #1
   2e568:	cmp	r3, #0
   2e56c:	movne	r3, #1
   2e570:	moveq	r3, #0
   2e574:	uxtb	r3, r3
   2e578:	str	r3, [fp, #-20]	; 0xffffffec
   2e57c:	ldr	r3, [fp, #8]
   2e580:	and	r3, r3, #2
   2e584:	cmp	r3, #0
   2e588:	movne	r3, #1
   2e58c:	moveq	r3, #0
   2e590:	uxtb	r3, r3
   2e594:	str	r3, [fp, #-24]	; 0xffffffe8
   2e598:	ldrh	r2, [fp, #-134]	; 0xffffff7a
   2e59c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e5a0:	add	r1, fp, #4
   2e5a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   2e5a8:	bl	2e198 <flatcc_builder_get_user_frame_ptr@@Base+0x568>
   2e5ac:	mov	r3, r0
   2e5b0:	cmp	r3, #0
   2e5b4:	beq	2e5c0 <flatcc_builder_create_buffer@@Base+0x94>
   2e5b8:	mov	r3, #0
   2e5bc:	b	2e8e8 <flatcc_builder_create_buffer@@Base+0x3bc>
   2e5c0:	ldrh	r3, [fp, #4]
   2e5c4:	mov	r1, r3
   2e5c8:	ldr	r0, [fp, #-128]	; 0xffffff80
   2e5cc:	bl	2d8d0 <flatcc_builder_clear@@Base+0xb0>
   2e5d0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2e5d4:	cmp	r3, #0
   2e5d8:	beq	2e610 <flatcc_builder_create_buffer@@Base+0xe4>
   2e5dc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2e5e0:	ldr	r3, [r3]
   2e5e4:	str	r3, [fp, #-120]	; 0xffffff88
   2e5e8:	ldr	r3, [fp, #-120]	; 0xffffff88
   2e5ec:	mov	r0, r3
   2e5f0:	bl	2c91c <main@@Base+0x16e0>
   2e5f4:	mov	r3, r0
   2e5f8:	str	r3, [fp, #-120]	; 0xffffff88
   2e5fc:	ldr	r3, [fp, #-120]	; 0xffffff88
   2e600:	mov	r0, r3
   2e604:	bl	2c8d0 <main@@Base+0x1694>
   2e608:	mov	r3, r0
   2e60c:	str	r3, [fp, #-120]	; 0xffffff88
   2e610:	ldr	r3, [fp, #-120]	; 0xffffff88
   2e614:	cmp	r3, #0
   2e618:	beq	2e624 <flatcc_builder_create_buffer@@Base+0xf8>
   2e61c:	mov	r3, #4
   2e620:	b	2e628 <flatcc_builder_create_buffer@@Base+0xfc>
   2e624:	mov	r3, #0
   2e628:	str	r3, [fp, #-16]
   2e62c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e630:	cmp	r3, #0
   2e634:	beq	2e640 <flatcc_builder_create_buffer@@Base+0x114>
   2e638:	mov	r2, #4
   2e63c:	b	2e644 <flatcc_builder_create_buffer@@Base+0x118>
   2e640:	mov	r2, #0
   2e644:	ldr	r3, [fp, #-16]
   2e648:	add	r3, r2, r3
   2e64c:	add	r3, r3, #4
   2e650:	ldrh	r2, [fp, #4]
   2e654:	mov	r1, r3
   2e658:	ldr	r0, [fp, #-128]	; 0xffffff80
   2e65c:	bl	2df0c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2e660:	str	r0, [fp, #-28]	; 0xffffffe4
   2e664:	mov	r3, #0
   2e668:	str	r3, [fp, #-116]	; 0xffffff8c
   2e66c:	mov	r3, #0
   2e670:	str	r3, [fp, #-112]	; 0xffffff90
   2e674:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e678:	cmp	r3, #0
   2e67c:	bne	2e68c <flatcc_builder_create_buffer@@Base+0x160>
   2e680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e684:	cmp	r3, #0
   2e688:	beq	2e6dc <flatcc_builder_create_buffer@@Base+0x1b0>
   2e68c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e690:	add	r3, r3, #4
   2e694:	str	r3, [fp, #-116]	; 0xffffff8c
   2e698:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e69c:	add	r3, r3, #1
   2e6a0:	lsl	r3, r3, #3
   2e6a4:	sub	r2, fp, #12
   2e6a8:	add	r3, r2, r3
   2e6ac:	sub	r2, fp, #44	; 0x2c
   2e6b0:	str	r2, [r3, #-104]	; 0xffffff98
   2e6b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e6b8:	add	r3, r3, #1
   2e6bc:	lsl	r3, r3, #3
   2e6c0:	sub	r2, fp, #12
   2e6c4:	add	r3, r2, r3
   2e6c8:	mov	r2, #4
   2e6cc:	str	r2, [r3, #-100]	; 0xffffff9c
   2e6d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e6d4:	add	r3, r3, #1
   2e6d8:	str	r3, [fp, #-112]	; 0xffffff90
   2e6dc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e6e0:	add	r3, r3, #4
   2e6e4:	str	r3, [fp, #-116]	; 0xffffff8c
   2e6e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e6ec:	add	r3, r3, #1
   2e6f0:	lsl	r3, r3, #3
   2e6f4:	sub	r2, fp, #12
   2e6f8:	add	r3, r2, r3
   2e6fc:	sub	r2, fp, #40	; 0x28
   2e700:	str	r2, [r3, #-104]	; 0xffffff98
   2e704:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e708:	add	r3, r3, #1
   2e70c:	lsl	r3, r3, #3
   2e710:	sub	r2, fp, #12
   2e714:	add	r3, r2, r3
   2e718:	mov	r2, #4
   2e71c:	str	r2, [r3, #-100]	; 0xffffff9c
   2e720:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e724:	add	r3, r3, #1
   2e728:	str	r3, [fp, #-112]	; 0xffffff90
   2e72c:	ldr	r3, [fp, #-16]
   2e730:	cmp	r3, #0
   2e734:	beq	2e78c <flatcc_builder_create_buffer@@Base+0x260>
   2e738:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2e73c:	ldr	r3, [fp, #-16]
   2e740:	add	r3, r2, r3
   2e744:	str	r3, [fp, #-116]	; 0xffffff8c
   2e748:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e74c:	add	r3, r3, #1
   2e750:	lsl	r3, r3, #3
   2e754:	sub	r2, fp, #12
   2e758:	add	r3, r2, r3
   2e75c:	sub	r2, fp, #120	; 0x78
   2e760:	str	r2, [r3, #-104]	; 0xffffff98
   2e764:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e768:	add	r3, r3, #1
   2e76c:	lsl	r3, r3, #3
   2e770:	sub	r2, fp, #12
   2e774:	add	r3, r2, r3
   2e778:	ldr	r2, [fp, #-16]
   2e77c:	str	r2, [r3, #-100]	; 0xffffff9c
   2e780:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e784:	add	r3, r3, #1
   2e788:	str	r3, [fp, #-112]	; 0xffffff90
   2e78c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e790:	cmp	r3, #0
   2e794:	beq	2e7f0 <flatcc_builder_create_buffer@@Base+0x2c4>
   2e798:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2e79c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e7a0:	add	r3, r2, r3
   2e7a4:	str	r3, [fp, #-116]	; 0xffffff8c
   2e7a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e7ac:	add	r3, r3, #1
   2e7b0:	lsl	r3, r3, #3
   2e7b4:	sub	r2, fp, #12
   2e7b8:	add	r3, r2, r3
   2e7bc:	ldr	r2, [pc, #308]	; 2e8f8 <flatcc_builder_create_buffer@@Base+0x3cc>
   2e7c0:	ldr	r2, [r4, r2]
   2e7c4:	str	r2, [r3, #-104]	; 0xffffff98
   2e7c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e7cc:	add	r3, r3, #1
   2e7d0:	lsl	r3, r3, #3
   2e7d4:	sub	r2, fp, #12
   2e7d8:	add	r3, r2, r3
   2e7dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e7e0:	str	r2, [r3, #-100]	; 0xffffff9c
   2e7e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e7e8:	add	r3, r3, #1
   2e7ec:	str	r3, [fp, #-112]	; 0xffffff90
   2e7f0:	ldr	r3, [fp, #-128]	; 0xffffff80
   2e7f4:	ldr	r3, [r3, #136]	; 0x88
   2e7f8:	mov	r2, r3
   2e7fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e800:	sub	r2, r2, r3
   2e804:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e808:	cmp	r3, #0
   2e80c:	bne	2e81c <flatcc_builder_create_buffer@@Base+0x2f0>
   2e810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e814:	cmp	r3, #0
   2e818:	beq	2e824 <flatcc_builder_create_buffer@@Base+0x2f8>
   2e81c:	mov	r3, #4
   2e820:	b	2e828 <flatcc_builder_create_buffer@@Base+0x2fc>
   2e824:	mov	r3, #0
   2e828:	add	r3, r2, r3
   2e82c:	str	r3, [fp, #-32]	; 0xffffffe0
   2e830:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e834:	cmp	r3, #0
   2e838:	beq	2e864 <flatcc_builder_create_buffer@@Base+0x338>
   2e83c:	ldr	r3, [fp, #-128]	; 0xffffff80
   2e840:	ldr	r3, [r3, #144]	; 0x90
   2e844:	mov	r2, r3
   2e848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e84c:	sub	r3, r2, r3
   2e850:	mov	r0, r3
   2e854:	bl	2c8d0 <main@@Base+0x1694>
   2e858:	mov	r3, r0
   2e85c:	str	r3, [fp, #-44]	; 0xffffffd4
   2e860:	b	2e888 <flatcc_builder_create_buffer@@Base+0x35c>
   2e864:	ldr	r3, [fp, #-128]	; 0xffffff80
   2e868:	ldr	r3, [r3, #140]	; 0x8c
   2e86c:	mov	r2, r3
   2e870:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e874:	sub	r3, r2, r3
   2e878:	mov	r0, r3
   2e87c:	bl	2c8d0 <main@@Base+0x1694>
   2e880:	mov	r3, r0
   2e884:	str	r3, [fp, #-44]	; 0xffffffd4
   2e888:	ldr	r2, [fp, #-140]	; 0xffffff74
   2e88c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e890:	sub	r3, r2, r3
   2e894:	mov	r0, r3
   2e898:	bl	2c8d0 <main@@Base+0x1694>
   2e89c:	mov	r3, r0
   2e8a0:	str	r3, [fp, #-40]	; 0xffffffd8
   2e8a4:	sub	r3, fp, #116	; 0x74
   2e8a8:	mov	r1, r3
   2e8ac:	ldr	r0, [fp, #-128]	; 0xffffff80
   2e8b0:	bl	2df94 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2e8b4:	str	r0, [fp, #-36]	; 0xffffffdc
   2e8b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e8bc:	cmp	r3, #0
   2e8c0:	bne	2e8e4 <flatcc_builder_create_buffer@@Base+0x3b8>
   2e8c4:	ldr	r3, [pc, #48]	; 2e8fc <flatcc_builder_create_buffer@@Base+0x3d0>
   2e8c8:	add	r3, pc, r3
   2e8cc:	mov	r2, #772	; 0x304
   2e8d0:	ldr	r1, [pc, #40]	; 2e900 <flatcc_builder_create_buffer@@Base+0x3d4>
   2e8d4:	add	r1, pc, r1
   2e8d8:	ldr	r0, [pc, #36]	; 2e904 <flatcc_builder_create_buffer@@Base+0x3d8>
   2e8dc:	add	r0, pc, r0
   2e8e0:	bl	14610 <__assert_fail@plt>
   2e8e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e8e8:	mov	r0, r3
   2e8ec:	sub	sp, fp, #8
   2e8f0:	pop	{r4, fp, pc}
   2e8f4:	andeq	r5, r3, ip, lsr #21
   2e8f8:	andeq	r0, r0, r4, rrx
   2e8fc:			; <UNDEFINED> instruction: 0x000223b8
   2e900:	andeq	r1, r2, r0, ror #29
   2e904:	andeq	r1, r2, r8, lsr pc

0002e908 <flatcc_builder_create_struct@@Base>:
   2e908:	push	{r4, fp, lr}
   2e90c:	add	fp, sp, #8
   2e910:	sub	sp, sp, #100	; 0x64
   2e914:	str	r0, [fp, #-96]	; 0xffffffa0
   2e918:	str	r1, [fp, #-100]	; 0xffffff9c
   2e91c:	str	r2, [fp, #-104]	; 0xffffff98
   2e920:	strh	r3, [fp, #-106]	; 0xffffff96
   2e924:	ldr	r4, [pc, #328]	; 2ea74 <flatcc_builder_create_struct@@Base+0x16c>
   2e928:	add	r4, pc, r4
   2e92c:	ldrh	r3, [fp, #-106]	; 0xffffff96
   2e930:	cmp	r3, #0
   2e934:	bne	2e958 <flatcc_builder_create_struct@@Base+0x50>
   2e938:	ldr	r3, [pc, #312]	; 2ea78 <flatcc_builder_create_struct@@Base+0x170>
   2e93c:	add	r3, pc, r3
   2e940:	ldr	r2, [pc, #308]	; 2ea7c <flatcc_builder_create_struct@@Base+0x174>
   2e944:	ldr	r1, [pc, #308]	; 2ea80 <flatcc_builder_create_struct@@Base+0x178>
   2e948:	add	r1, pc, r1
   2e94c:	ldr	r0, [pc, #304]	; 2ea84 <flatcc_builder_create_struct@@Base+0x17c>
   2e950:	add	r0, pc, r0
   2e954:	bl	14610 <__assert_fail@plt>
   2e958:	ldrh	r3, [fp, #-106]	; 0xffffff96
   2e95c:	mov	r1, r3
   2e960:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2e964:	bl	2d8d0 <flatcc_builder_clear@@Base+0xb0>
   2e968:	ldrh	r3, [fp, #-106]	; 0xffffff96
   2e96c:	mov	r2, r3
   2e970:	ldr	r1, [fp, #-104]	; 0xffffff98
   2e974:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2e978:	bl	2df0c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2e97c:	str	r0, [fp, #-16]
   2e980:	mov	r3, #0
   2e984:	str	r3, [fp, #-88]	; 0xffffffa8
   2e988:	mov	r3, #0
   2e98c:	str	r3, [fp, #-84]	; 0xffffffac
   2e990:	ldr	r3, [fp, #-104]	; 0xffffff98
   2e994:	cmp	r3, #0
   2e998:	beq	2e9f0 <flatcc_builder_create_struct@@Base+0xe8>
   2e99c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2e9a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   2e9a4:	add	r3, r2, r3
   2e9a8:	str	r3, [fp, #-88]	; 0xffffffa8
   2e9ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e9b0:	add	r3, r3, #1
   2e9b4:	lsl	r3, r3, #3
   2e9b8:	sub	r2, fp, #12
   2e9bc:	add	r3, r2, r3
   2e9c0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2e9c4:	str	r2, [r3, #-76]	; 0xffffffb4
   2e9c8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e9cc:	add	r3, r3, #1
   2e9d0:	lsl	r3, r3, #3
   2e9d4:	sub	r2, fp, #12
   2e9d8:	add	r3, r2, r3
   2e9dc:	ldr	r2, [fp, #-104]	; 0xffffff98
   2e9e0:	str	r2, [r3, #-72]	; 0xffffffb8
   2e9e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e9e8:	add	r3, r3, #1
   2e9ec:	str	r3, [fp, #-84]	; 0xffffffac
   2e9f0:	ldr	r3, [fp, #-16]
   2e9f4:	cmp	r3, #0
   2e9f8:	beq	2ea54 <flatcc_builder_create_struct@@Base+0x14c>
   2e9fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2ea00:	ldr	r3, [fp, #-16]
   2ea04:	add	r3, r2, r3
   2ea08:	str	r3, [fp, #-88]	; 0xffffffa8
   2ea0c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ea10:	add	r3, r3, #1
   2ea14:	lsl	r3, r3, #3
   2ea18:	sub	r2, fp, #12
   2ea1c:	add	r3, r2, r3
   2ea20:	ldr	r2, [pc, #96]	; 2ea88 <flatcc_builder_create_struct@@Base+0x180>
   2ea24:	ldr	r2, [r4, r2]
   2ea28:	str	r2, [r3, #-76]	; 0xffffffb4
   2ea2c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ea30:	add	r3, r3, #1
   2ea34:	lsl	r3, r3, #3
   2ea38:	sub	r2, fp, #12
   2ea3c:	add	r3, r2, r3
   2ea40:	ldr	r2, [fp, #-16]
   2ea44:	str	r2, [r3, #-72]	; 0xffffffb8
   2ea48:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ea4c:	add	r3, r3, #1
   2ea50:	str	r3, [fp, #-84]	; 0xffffffac
   2ea54:	sub	r3, fp, #88	; 0x58
   2ea58:	mov	r1, r3
   2ea5c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2ea60:	bl	2df94 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2ea64:	mov	r3, r0
   2ea68:	mov	r0, r3
   2ea6c:	sub	sp, fp, #8
   2ea70:	pop	{r4, fp, pc}
   2ea74:	ldrdeq	r5, [r3], -r0
   2ea78:	andeq	r2, r2, r4, ror #6
   2ea7c:	andeq	r0, r0, pc, lsl #6
   2ea80:	andeq	r1, r2, ip, ror #28
   2ea84:	andeq	r1, r2, r8, lsr #30
   2ea88:	andeq	r0, r0, r4, rrx

0002ea8c <flatcc_builder_start_buffer@@Base>:
   2ea8c:	push	{r4, fp, lr}
   2ea90:	add	fp, sp, #8
   2ea94:	sub	sp, sp, #20
   2ea98:	str	r0, [fp, #-16]
   2ea9c:	str	r1, [fp, #-20]	; 0xffffffec
   2eaa0:	str	r3, [fp, #-28]	; 0xffffffe4
   2eaa4:	strh	r2, [fp, #-22]	; 0xffffffea
   2eaa8:	ldr	r4, [pc, #300]	; 2ebdc <flatcc_builder_start_buffer@@Base+0x150>
   2eaac:	add	r4, pc, r4
   2eab0:	ldr	r3, [fp, #-16]
   2eab4:	ldrh	r3, [r3, #128]	; 0x80
   2eab8:	mov	r1, r3
   2eabc:	ldr	r0, [fp, #-16]
   2eac0:	bl	2dc64 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2eac4:	mov	r3, r0
   2eac8:	cmp	r3, #0
   2eacc:	beq	2ead8 <flatcc_builder_start_buffer@@Base+0x4c>
   2ead0:	mvn	r3, #0
   2ead4:	b	2ebd0 <flatcc_builder_start_buffer@@Base+0x144>
   2ead8:	ldr	r3, [fp, #-16]
   2eadc:	mov	r2, #1
   2eae0:	strh	r2, [r3, #128]	; 0x80
   2eae4:	ldr	r3, [fp, #-16]
   2eae8:	ldr	r3, [r3, #32]
   2eaec:	ldr	r2, [fp, #-16]
   2eaf0:	ldrh	r2, [r2, #132]	; 0x84
   2eaf4:	strh	r2, [r3, #34]	; 0x22
   2eaf8:	ldr	r3, [fp, #-16]
   2eafc:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2eb00:	strh	r2, [r3, #132]	; 0x84
   2eb04:	ldr	r3, [fp, #-16]
   2eb08:	ldr	r3, [r3, #32]
   2eb0c:	ldr	r2, [fp, #-16]
   2eb10:	ldrh	r2, [r2, #164]	; 0xa4
   2eb14:	strh	r2, [r3, #32]
   2eb18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2eb1c:	uxth	r2, r3
   2eb20:	ldr	r3, [fp, #-16]
   2eb24:	strh	r2, [r3, #164]	; 0xa4
   2eb28:	ldr	r3, [fp, #-16]
   2eb2c:	ldr	r3, [r3, #32]
   2eb30:	ldr	r2, [fp, #-16]
   2eb34:	ldr	r2, [r2, #144]	; 0x90
   2eb38:	str	r2, [r3, #20]
   2eb3c:	ldr	r3, [fp, #-16]
   2eb40:	ldr	r3, [r3, #32]
   2eb44:	ldr	r2, [fp, #-16]
   2eb48:	ldr	r2, [r2, #152]	; 0x98
   2eb4c:	str	r2, [r3, #28]
   2eb50:	ldr	r3, [fp, #-16]
   2eb54:	ldr	r2, [r3, #136]	; 0x88
   2eb58:	ldr	r3, [fp, #-16]
   2eb5c:	str	r2, [r3, #144]	; 0x90
   2eb60:	ldr	r3, [fp, #-16]
   2eb64:	ldr	r3, [r3, #148]	; 0x94
   2eb68:	add	r1, r3, #1
   2eb6c:	ldr	r2, [fp, #-16]
   2eb70:	str	r1, [r2, #148]	; 0x94
   2eb74:	ldr	r2, [fp, #-16]
   2eb78:	str	r3, [r2, #152]	; 0x98
   2eb7c:	ldr	r3, [fp, #-16]
   2eb80:	ldr	r3, [r3, #32]
   2eb84:	ldr	r2, [fp, #-16]
   2eb88:	ldr	r2, [r2, #168]	; 0xa8
   2eb8c:	str	r2, [r3, #16]
   2eb90:	ldr	r3, [fp, #-16]
   2eb94:	add	r2, r3, #168	; 0xa8
   2eb98:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eb9c:	cmp	r3, #0
   2eba0:	beq	2ebac <flatcc_builder_start_buffer@@Base+0x120>
   2eba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eba8:	b	2ebb4 <flatcc_builder_start_buffer@@Base+0x128>
   2ebac:	ldr	r3, [pc, #44]	; 2ebe0 <flatcc_builder_start_buffer@@Base+0x154>
   2ebb0:	ldr	r3, [r4, r3]
   2ebb4:	ldr	r3, [r3]
   2ebb8:	str	r3, [r2]
   2ebbc:	ldr	r3, [fp, #-16]
   2ebc0:	ldr	r3, [r3, #32]
   2ebc4:	mov	r2, #1
   2ebc8:	strh	r2, [r3, #14]
   2ebcc:	mov	r3, #0
   2ebd0:	mov	r0, r3
   2ebd4:	sub	sp, fp, #8
   2ebd8:	pop	{r4, fp, pc}
   2ebdc:	andeq	r5, r3, ip, asr #10
   2ebe0:	andeq	r0, r0, r4, rrx

0002ebe4 <flatcc_builder_end_buffer@@Base>:
   2ebe4:	push	{fp, lr}
   2ebe8:	add	fp, sp, #4
   2ebec:	sub	sp, sp, #24
   2ebf0:	str	r0, [fp, #-16]
   2ebf4:	str	r1, [fp, #-20]	; 0xffffffec
   2ebf8:	ldr	r3, [fp, #-16]
   2ebfc:	ldrh	r3, [r3, #164]	; 0xa4
   2ec00:	and	r3, r3, #2
   2ec04:	str	r3, [fp, #-8]
   2ec08:	ldr	r3, [fp, #-16]
   2ec0c:	ldr	r3, [r3, #152]	; 0x98
   2ec10:	cmp	r3, #0
   2ec14:	movne	r3, #1
   2ec18:	moveq	r3, #0
   2ec1c:	uxtb	r3, r3
   2ec20:	mov	r2, r3
   2ec24:	ldr	r3, [fp, #-8]
   2ec28:	orr	r3, r3, r2
   2ec2c:	str	r3, [fp, #-8]
   2ec30:	ldr	r3, [fp, #-16]
   2ec34:	ldr	r3, [r3, #32]
   2ec38:	ldrh	r3, [r3, #14]
   2ec3c:	cmp	r3, #1
   2ec40:	beq	2ec64 <flatcc_builder_end_buffer@@Base+0x80>
   2ec44:	ldr	r3, [pc, #224]	; 2ed2c <flatcc_builder_end_buffer@@Base+0x148>
   2ec48:	add	r3, pc, r3
   2ec4c:	ldr	r2, [pc, #220]	; 2ed30 <flatcc_builder_end_buffer@@Base+0x14c>
   2ec50:	ldr	r1, [pc, #220]	; 2ed34 <flatcc_builder_end_buffer@@Base+0x150>
   2ec54:	add	r1, pc, r1
   2ec58:	ldr	r0, [pc, #216]	; 2ed38 <flatcc_builder_end_buffer@@Base+0x154>
   2ec5c:	add	r0, pc, r0
   2ec60:	bl	14610 <__assert_fail@plt>
   2ec64:	ldr	r3, [fp, #-16]
   2ec68:	ldrh	r3, [r3, #132]	; 0x84
   2ec6c:	mov	r1, r3
   2ec70:	ldr	r0, [fp, #-16]
   2ec74:	bl	2d8d0 <flatcc_builder_clear@@Base+0xb0>
   2ec78:	ldr	r3, [fp, #-16]
   2ec7c:	add	r1, r3, #168	; 0xa8
   2ec80:	ldr	r3, [fp, #-16]
   2ec84:	ldrh	r0, [r3, #132]	; 0x84
   2ec88:	ldr	r3, [fp, #-16]
   2ec8c:	ldrh	r3, [r3, #128]	; 0x80
   2ec90:	ldr	r2, [fp, #-8]
   2ec94:	str	r2, [sp, #4]
   2ec98:	str	r3, [sp]
   2ec9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eca0:	mov	r2, r0
   2eca4:	ldr	r0, [fp, #-16]
   2eca8:	bl	2e52c <flatcc_builder_create_buffer@@Base>
   2ecac:	str	r0, [fp, #-12]
   2ecb0:	ldr	r3, [fp, #-12]
   2ecb4:	cmp	r3, #0
   2ecb8:	bne	2ecc4 <flatcc_builder_end_buffer@@Base+0xe0>
   2ecbc:	mov	r3, #0
   2ecc0:	b	2ed20 <flatcc_builder_end_buffer@@Base+0x13c>
   2ecc4:	ldr	r3, [fp, #-16]
   2ecc8:	ldr	r3, [r3, #32]
   2eccc:	ldr	r2, [r3, #20]
   2ecd0:	ldr	r3, [fp, #-16]
   2ecd4:	str	r2, [r3, #144]	; 0x90
   2ecd8:	ldr	r3, [fp, #-16]
   2ecdc:	ldr	r3, [r3, #32]
   2ece0:	ldr	r2, [r3, #28]
   2ece4:	ldr	r3, [fp, #-16]
   2ece8:	str	r2, [r3, #152]	; 0x98
   2ecec:	ldr	r3, [fp, #-16]
   2ecf0:	ldr	r3, [r3, #32]
   2ecf4:	ldr	r2, [r3, #16]
   2ecf8:	ldr	r3, [fp, #-16]
   2ecfc:	str	r2, [r3, #168]	; 0xa8
   2ed00:	ldr	r3, [fp, #-16]
   2ed04:	ldr	r3, [r3, #32]
   2ed08:	ldrh	r2, [r3, #32]
   2ed0c:	ldr	r3, [fp, #-16]
   2ed10:	strh	r2, [r3, #164]	; 0xa4
   2ed14:	ldr	r0, [fp, #-16]
   2ed18:	bl	2de44 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2ed1c:	ldr	r3, [fp, #-12]
   2ed20:	mov	r0, r3
   2ed24:	sub	sp, fp, #4
   2ed28:	pop	{fp, pc}
   2ed2c:	andeq	r2, r2, r8, ror r0
   2ed30:	andeq	r0, r0, r6, asr #6
   2ed34:	andeq	r1, r2, r0, ror #22
   2ed38:	andeq	r1, r2, r8, lsr #24

0002ed3c <flatcc_builder_start_struct@@Base>:
   2ed3c:	push	{fp, lr}
   2ed40:	add	fp, sp, #4
   2ed44:	sub	sp, sp, #16
   2ed48:	str	r0, [fp, #-8]
   2ed4c:	str	r1, [fp, #-12]
   2ed50:	mov	r3, r2
   2ed54:	strh	r3, [fp, #-14]
   2ed58:	ldrh	r3, [fp, #-14]
   2ed5c:	mov	r1, r3
   2ed60:	ldr	r0, [fp, #-8]
   2ed64:	bl	2dc64 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2ed68:	mov	r3, r0
   2ed6c:	cmp	r3, #0
   2ed70:	beq	2ed7c <flatcc_builder_start_struct@@Base+0x40>
   2ed74:	mov	r3, #0
   2ed78:	b	2eda8 <flatcc_builder_start_struct@@Base+0x6c>
   2ed7c:	ldr	r3, [fp, #-8]
   2ed80:	ldr	r3, [r3, #32]
   2ed84:	mov	r2, #2
   2ed88:	strh	r2, [r3, #14]
   2ed8c:	mvn	r1, #3
   2ed90:	ldr	r0, [fp, #-8]
   2ed94:	bl	2cbdc <flatcc_builder_default_alloc@@Base+0x1c8>
   2ed98:	ldr	r1, [fp, #-12]
   2ed9c:	ldr	r0, [fp, #-8]
   2eda0:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   2eda4:	mov	r3, r0
   2eda8:	mov	r0, r3
   2edac:	sub	sp, fp, #4
   2edb0:	pop	{fp, pc}

0002edb4 <flatcc_builder_struct_edit@@Base>:
   2edb4:	push	{fp}		; (str fp, [sp, #-4]!)
   2edb8:	add	fp, sp, #0
   2edbc:	sub	sp, sp, #12
   2edc0:	str	r0, [fp, #-8]
   2edc4:	ldr	r3, [fp, #-8]
   2edc8:	ldr	r3, [r3, #16]
   2edcc:	mov	r0, r3
   2edd0:	add	sp, fp, #0
   2edd4:	pop	{fp}		; (ldr fp, [sp], #4)
   2edd8:	bx	lr

0002eddc <flatcc_builder_end_struct@@Base>:
   2eddc:	push	{fp, lr}
   2ede0:	add	fp, sp, #4
   2ede4:	sub	sp, sp, #16
   2ede8:	str	r0, [fp, #-16]
   2edec:	ldr	r3, [fp, #-16]
   2edf0:	ldr	r3, [r3, #32]
   2edf4:	ldrh	r3, [r3, #14]
   2edf8:	cmp	r3, #2
   2edfc:	beq	2ee20 <flatcc_builder_end_struct@@Base+0x44>
   2ee00:	ldr	r3, [pc, #104]	; 2ee70 <flatcc_builder_end_struct@@Base+0x94>
   2ee04:	add	r3, pc, r3
   2ee08:	mov	r2, #872	; 0x368
   2ee0c:	ldr	r1, [pc, #96]	; 2ee74 <flatcc_builder_end_struct@@Base+0x98>
   2ee10:	add	r1, pc, r1
   2ee14:	ldr	r0, [pc, #92]	; 2ee78 <flatcc_builder_end_struct@@Base+0x9c>
   2ee18:	add	r0, pc, r0
   2ee1c:	bl	14610 <__assert_fail@plt>
   2ee20:	ldr	r3, [fp, #-16]
   2ee24:	ldr	r1, [r3, #16]
   2ee28:	ldr	r3, [fp, #-16]
   2ee2c:	ldr	r2, [r3, #20]
   2ee30:	ldr	r3, [fp, #-16]
   2ee34:	ldrh	r3, [r3, #130]	; 0x82
   2ee38:	ldr	r0, [fp, #-16]
   2ee3c:	bl	2e908 <flatcc_builder_create_struct@@Base>
   2ee40:	str	r0, [fp, #-8]
   2ee44:	ldr	r3, [fp, #-8]
   2ee48:	cmp	r3, #0
   2ee4c:	bne	2ee58 <flatcc_builder_end_struct@@Base+0x7c>
   2ee50:	mov	r3, #0
   2ee54:	b	2ee64 <flatcc_builder_end_struct@@Base+0x88>
   2ee58:	ldr	r0, [fp, #-16]
   2ee5c:	bl	2de44 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2ee60:	ldr	r3, [fp, #-8]
   2ee64:	mov	r0, r3
   2ee68:	sub	sp, fp, #4
   2ee6c:	pop	{fp, pc}
   2ee70:	ldrdeq	r1, [r2], -r8
   2ee74:	andeq	r1, r2, r4, lsr #19
   2ee78:	muleq	r2, r8, sl
   2ee7c:	push	{fp, lr}
   2ee80:	add	fp, sp, #4
   2ee84:	sub	sp, sp, #24
   2ee88:	str	r0, [fp, #-16]
   2ee8c:	str	r1, [fp, #-20]	; 0xffffffec
   2ee90:	str	r2, [fp, #-24]	; 0xffffffe8
   2ee94:	ldr	r3, [fp, #-16]
   2ee98:	ldr	r3, [r3, #32]
   2ee9c:	ldr	r3, [r3, #20]
   2eea0:	str	r3, [fp, #-8]
   2eea4:	ldr	r2, [fp, #-8]
   2eea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eeac:	add	r3, r2, r3
   2eeb0:	str	r3, [fp, #-12]
   2eeb4:	ldr	r2, [fp, #-8]
   2eeb8:	ldr	r3, [fp, #-12]
   2eebc:	cmp	r2, r3
   2eec0:	bhi	2eed4 <flatcc_builder_end_struct@@Base+0xf8>
   2eec4:	ldr	r2, [fp, #-12]
   2eec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eecc:	cmp	r2, r3
   2eed0:	bls	2ef1c <flatcc_builder_end_struct@@Base+0x140>
   2eed4:	ldr	r2, [fp, #-8]
   2eed8:	ldr	r3, [fp, #-12]
   2eedc:	cmp	r2, r3
   2eee0:	bhi	2eef4 <flatcc_builder_end_struct@@Base+0x118>
   2eee4:	ldr	r2, [fp, #-12]
   2eee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eeec:	cmp	r2, r3
   2eef0:	bls	2ef14 <flatcc_builder_end_struct@@Base+0x138>
   2eef4:	ldr	r3, [pc, #64]	; 2ef3c <flatcc_builder_end_struct@@Base+0x160>
   2eef8:	add	r3, pc, r3
   2eefc:	mov	r2, #892	; 0x37c
   2ef00:	ldr	r1, [pc, #56]	; 2ef40 <flatcc_builder_end_struct@@Base+0x164>
   2ef04:	add	r1, pc, r1
   2ef08:	ldr	r0, [pc, #52]	; 2ef44 <flatcc_builder_end_struct@@Base+0x168>
   2ef0c:	add	r0, pc, r0
   2ef10:	bl	14610 <__assert_fail@plt>
   2ef14:	mvn	r3, #0
   2ef18:	b	2ef30 <flatcc_builder_end_struct@@Base+0x154>
   2ef1c:	ldr	r3, [fp, #-16]
   2ef20:	ldr	r3, [r3, #32]
   2ef24:	ldr	r2, [fp, #-12]
   2ef28:	str	r2, [r3, #20]
   2ef2c:	mov	r3, #0
   2ef30:	mov	r0, r3
   2ef34:	sub	sp, fp, #4
   2ef38:	pop	{fp, pc}
   2ef3c:	andeq	r1, r2, r0, lsl #28
   2ef40:			; <UNDEFINED> instruction: 0x000218b0
   2ef44:	ldrdeq	r1, [r2], -r0

0002ef48 <flatcc_builder_extend_vector@@Base>:
   2ef48:	push	{fp, lr}
   2ef4c:	add	fp, sp, #4
   2ef50:	sub	sp, sp, #8
   2ef54:	str	r0, [fp, #-8]
   2ef58:	str	r1, [fp, #-12]
   2ef5c:	ldr	r3, [fp, #-8]
   2ef60:	ldr	r3, [r3, #32]
   2ef64:	ldr	r3, [r3, #24]
   2ef68:	mov	r2, r3
   2ef6c:	ldr	r1, [fp, #-12]
   2ef70:	ldr	r0, [fp, #-8]
   2ef74:	bl	2ee7c <flatcc_builder_end_struct@@Base+0xa0>
   2ef78:	mov	r3, r0
   2ef7c:	cmp	r3, #0
   2ef80:	beq	2ef8c <flatcc_builder_extend_vector@@Base+0x44>
   2ef84:	mov	r3, #0
   2ef88:	b	2efb0 <flatcc_builder_extend_vector@@Base+0x68>
   2ef8c:	ldr	r3, [fp, #-8]
   2ef90:	ldr	r3, [r3, #32]
   2ef94:	ldr	r3, [r3, #16]
   2ef98:	ldr	r2, [fp, #-12]
   2ef9c:	mul	r3, r2, r3
   2efa0:	mov	r1, r3
   2efa4:	ldr	r0, [fp, #-8]
   2efa8:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   2efac:	mov	r3, r0
   2efb0:	mov	r0, r3
   2efb4:	sub	sp, fp, #4
   2efb8:	pop	{fp, pc}

0002efbc <flatcc_builder_vector_push@@Base>:
   2efbc:	push	{fp, lr}
   2efc0:	add	fp, sp, #4
   2efc4:	sub	sp, sp, #8
   2efc8:	str	r0, [fp, #-8]
   2efcc:	str	r1, [fp, #-12]
   2efd0:	ldr	r3, [fp, #-8]
   2efd4:	ldr	r3, [r3, #32]
   2efd8:	ldrh	r3, [r3, #14]
   2efdc:	cmp	r3, #4
   2efe0:	beq	2f004 <flatcc_builder_vector_push@@Base+0x48>
   2efe4:	ldr	r3, [pc, #200]	; 2f0b4 <flatcc_builder_vector_push@@Base+0xf8>
   2efe8:	add	r3, pc, r3
   2efec:	ldr	r2, [pc, #196]	; 2f0b8 <flatcc_builder_vector_push@@Base+0xfc>
   2eff0:	ldr	r1, [pc, #196]	; 2f0bc <flatcc_builder_vector_push@@Base+0x100>
   2eff4:	add	r1, pc, r1
   2eff8:	ldr	r0, [pc, #192]	; 2f0c0 <flatcc_builder_vector_push@@Base+0x104>
   2effc:	add	r0, pc, r0
   2f000:	bl	14610 <__assert_fail@plt>
   2f004:	ldr	r3, [fp, #-8]
   2f008:	ldr	r3, [r3, #32]
   2f00c:	ldr	r2, [r3, #20]
   2f010:	ldr	r3, [fp, #-8]
   2f014:	ldr	r3, [r3, #32]
   2f018:	ldr	r3, [r3, #24]
   2f01c:	cmp	r2, r3
   2f020:	bls	2f06c <flatcc_builder_vector_push@@Base+0xb0>
   2f024:	ldr	r3, [fp, #-8]
   2f028:	ldr	r3, [r3, #32]
   2f02c:	ldr	r2, [r3, #20]
   2f030:	ldr	r3, [fp, #-8]
   2f034:	ldr	r3, [r3, #32]
   2f038:	ldr	r3, [r3, #24]
   2f03c:	cmp	r2, r3
   2f040:	bls	2f064 <flatcc_builder_vector_push@@Base+0xa8>
   2f044:	ldr	r3, [pc, #120]	; 2f0c4 <flatcc_builder_vector_push@@Base+0x108>
   2f048:	add	r3, pc, r3
   2f04c:	mov	r2, #908	; 0x38c
   2f050:	ldr	r1, [pc, #112]	; 2f0c8 <flatcc_builder_vector_push@@Base+0x10c>
   2f054:	add	r1, pc, r1
   2f058:	ldr	r0, [pc, #108]	; 2f0cc <flatcc_builder_vector_push@@Base+0x110>
   2f05c:	add	r0, pc, r0
   2f060:	bl	14610 <__assert_fail@plt>
   2f064:	mov	r3, #0
   2f068:	b	2f0a8 <flatcc_builder_vector_push@@Base+0xec>
   2f06c:	ldr	r3, [fp, #-8]
   2f070:	ldr	r3, [r3, #32]
   2f074:	ldr	r2, [fp, #-8]
   2f078:	ldr	r2, [r2, #32]
   2f07c:	ldr	r2, [r2, #20]
   2f080:	add	r2, r2, #1
   2f084:	str	r2, [r3, #20]
   2f088:	ldr	r3, [fp, #-8]
   2f08c:	ldr	r3, [r3, #32]
   2f090:	ldr	r3, [r3, #16]
   2f094:	mov	r2, r3
   2f098:	ldr	r1, [fp, #-12]
   2f09c:	ldr	r0, [fp, #-8]
   2f0a0:	bl	2cdfc <flatcc_builder_default_alloc@@Base+0x3e8>
   2f0a4:	mov	r3, r0
   2f0a8:	mov	r0, r3
   2f0ac:	sub	sp, fp, #4
   2f0b0:	pop	{fp, pc}
   2f0b4:	andeq	r1, r2, r4, lsr #26
   2f0b8:	andeq	r0, r0, fp, lsl #7
   2f0bc:	andeq	r1, r2, r0, asr #15
   2f0c0:	strdeq	r1, [r2], -ip
   2f0c4:	andeq	r1, r2, r4, asr #25
   2f0c8:	andeq	r1, r2, r0, ror #14
   2f0cc:	andeq	r1, r2, r8, asr #17

0002f0d0 <flatcc_builder_append_vector@@Base>:
   2f0d0:	push	{fp, lr}
   2f0d4:	add	fp, sp, #4
   2f0d8:	sub	sp, sp, #16
   2f0dc:	str	r0, [fp, #-8]
   2f0e0:	str	r1, [fp, #-12]
   2f0e4:	str	r2, [fp, #-16]
   2f0e8:	ldr	r3, [fp, #-8]
   2f0ec:	ldr	r3, [r3, #32]
   2f0f0:	ldrh	r3, [r3, #14]
   2f0f4:	cmp	r3, #4
   2f0f8:	beq	2f11c <flatcc_builder_append_vector@@Base+0x4c>
   2f0fc:	ldr	r3, [pc, #124]	; 2f180 <flatcc_builder_append_vector@@Base+0xb0>
   2f100:	add	r3, pc, r3
   2f104:	ldr	r2, [pc, #120]	; 2f184 <flatcc_builder_append_vector@@Base+0xb4>
   2f108:	ldr	r1, [pc, #120]	; 2f188 <flatcc_builder_append_vector@@Base+0xb8>
   2f10c:	add	r1, pc, r1
   2f110:	ldr	r0, [pc, #116]	; 2f18c <flatcc_builder_append_vector@@Base+0xbc>
   2f114:	add	r0, pc, r0
   2f118:	bl	14610 <__assert_fail@plt>
   2f11c:	ldr	r3, [fp, #-8]
   2f120:	ldr	r3, [r3, #32]
   2f124:	ldr	r3, [r3, #24]
   2f128:	mov	r2, r3
   2f12c:	ldr	r1, [fp, #-16]
   2f130:	ldr	r0, [fp, #-8]
   2f134:	bl	2ee7c <flatcc_builder_end_struct@@Base+0xa0>
   2f138:	mov	r3, r0
   2f13c:	cmp	r3, #0
   2f140:	beq	2f14c <flatcc_builder_append_vector@@Base+0x7c>
   2f144:	mov	r3, #0
   2f148:	b	2f174 <flatcc_builder_append_vector@@Base+0xa4>
   2f14c:	ldr	r3, [fp, #-8]
   2f150:	ldr	r3, [r3, #32]
   2f154:	ldr	r3, [r3, #16]
   2f158:	ldr	r2, [fp, #-16]
   2f15c:	mul	r3, r2, r3
   2f160:	mov	r2, r3
   2f164:	ldr	r1, [fp, #-12]
   2f168:	ldr	r0, [fp, #-8]
   2f16c:	bl	2cdfc <flatcc_builder_default_alloc@@Base+0x3e8>
   2f170:	mov	r3, r0
   2f174:	mov	r0, r3
   2f178:	sub	sp, fp, #4
   2f17c:	pop	{fp, pc}
   2f180:	andeq	r1, r2, r8, lsr #24
   2f184:	muleq	r0, r3, r3
   2f188:	andeq	r1, r2, r8, lsr #13
   2f18c:	andeq	r1, r2, r4, ror #15

0002f190 <flatcc_builder_extend_offset_vector@@Base>:
   2f190:	push	{fp, lr}
   2f194:	add	fp, sp, #4
   2f198:	sub	sp, sp, #8
   2f19c:	str	r0, [fp, #-8]
   2f1a0:	str	r1, [fp, #-12]
   2f1a4:	mvn	r2, #-1073741824	; 0xc0000000
   2f1a8:	ldr	r1, [fp, #-12]
   2f1ac:	ldr	r0, [fp, #-8]
   2f1b0:	bl	2ee7c <flatcc_builder_end_struct@@Base+0xa0>
   2f1b4:	mov	r3, r0
   2f1b8:	cmp	r3, #0
   2f1bc:	beq	2f1c8 <flatcc_builder_extend_offset_vector@@Base+0x38>
   2f1c0:	mov	r3, #0
   2f1c4:	b	2f1e0 <flatcc_builder_extend_offset_vector@@Base+0x50>
   2f1c8:	ldr	r3, [fp, #-12]
   2f1cc:	lsl	r3, r3, #2
   2f1d0:	mov	r1, r3
   2f1d4:	ldr	r0, [fp, #-8]
   2f1d8:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   2f1dc:	mov	r3, r0
   2f1e0:	mov	r0, r3
   2f1e4:	sub	sp, fp, #4
   2f1e8:	pop	{fp, pc}

0002f1ec <flatcc_builder_offset_vector_push@@Base>:
   2f1ec:	push	{fp, lr}
   2f1f0:	add	fp, sp, #4
   2f1f4:	sub	sp, sp, #16
   2f1f8:	str	r0, [fp, #-16]
   2f1fc:	str	r1, [fp, #-20]	; 0xffffffec
   2f200:	ldr	r3, [fp, #-16]
   2f204:	ldr	r3, [r3, #32]
   2f208:	ldrh	r3, [r3, #14]
   2f20c:	cmp	r3, #5
   2f210:	beq	2f234 <flatcc_builder_offset_vector_push@@Base+0x48>
   2f214:	ldr	r3, [pc, #144]	; 2f2ac <flatcc_builder_offset_vector_push@@Base+0xc0>
   2f218:	add	r3, pc, r3
   2f21c:	ldr	r2, [pc, #140]	; 2f2b0 <flatcc_builder_offset_vector_push@@Base+0xc4>
   2f220:	ldr	r1, [pc, #140]	; 2f2b4 <flatcc_builder_offset_vector_push@@Base+0xc8>
   2f224:	add	r1, pc, r1
   2f228:	ldr	r0, [pc, #136]	; 2f2b8 <flatcc_builder_offset_vector_push@@Base+0xcc>
   2f22c:	add	r0, pc, r0
   2f230:	bl	14610 <__assert_fail@plt>
   2f234:	ldr	r3, [fp, #-16]
   2f238:	ldr	r3, [r3, #32]
   2f23c:	ldr	r3, [r3, #20]
   2f240:	cmn	r3, #-1073741823	; 0xc0000001
   2f244:	bne	2f250 <flatcc_builder_offset_vector_push@@Base+0x64>
   2f248:	mov	r3, #0
   2f24c:	b	2f2a0 <flatcc_builder_offset_vector_push@@Base+0xb4>
   2f250:	ldr	r3, [fp, #-16]
   2f254:	ldr	r3, [r3, #32]
   2f258:	ldr	r2, [fp, #-16]
   2f25c:	ldr	r2, [r2, #32]
   2f260:	ldr	r2, [r2, #20]
   2f264:	add	r2, r2, #1
   2f268:	str	r2, [r3, #20]
   2f26c:	mov	r1, #4
   2f270:	ldr	r0, [fp, #-16]
   2f274:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   2f278:	str	r0, [fp, #-8]
   2f27c:	ldr	r3, [fp, #-8]
   2f280:	cmp	r3, #0
   2f284:	bne	2f290 <flatcc_builder_offset_vector_push@@Base+0xa4>
   2f288:	mov	r3, #0
   2f28c:	b	2f2a0 <flatcc_builder_offset_vector_push@@Base+0xb4>
   2f290:	ldr	r3, [fp, #-8]
   2f294:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f298:	str	r2, [r3]
   2f29c:	ldr	r3, [fp, #-8]
   2f2a0:	mov	r0, r3
   2f2a4:	sub	sp, fp, #4
   2f2a8:	pop	{fp, pc}
   2f2ac:	andeq	r1, r2, r0, lsr fp
   2f2b0:	andeq	r0, r0, r6, lsr #7
   2f2b4:	muleq	r2, r0, r5
   2f2b8:	andeq	r1, r2, r8, lsr r7

0002f2bc <flatcc_builder_append_offset_vector@@Base>:
   2f2bc:	push	{fp, lr}
   2f2c0:	add	fp, sp, #4
   2f2c4:	sub	sp, sp, #16
   2f2c8:	str	r0, [fp, #-8]
   2f2cc:	str	r1, [fp, #-12]
   2f2d0:	str	r2, [fp, #-16]
   2f2d4:	ldr	r3, [fp, #-8]
   2f2d8:	ldr	r3, [r3, #32]
   2f2dc:	ldrh	r3, [r3, #14]
   2f2e0:	cmp	r3, #5
   2f2e4:	beq	2f308 <flatcc_builder_append_offset_vector@@Base+0x4c>
   2f2e8:	ldr	r3, [pc, #100]	; 2f354 <flatcc_builder_append_offset_vector@@Base+0x98>
   2f2ec:	add	r3, pc, r3
   2f2f0:	mov	r2, #948	; 0x3b4
   2f2f4:	ldr	r1, [pc, #92]	; 2f358 <flatcc_builder_append_offset_vector@@Base+0x9c>
   2f2f8:	add	r1, pc, r1
   2f2fc:	ldr	r0, [pc, #88]	; 2f35c <flatcc_builder_append_offset_vector@@Base+0xa0>
   2f300:	add	r0, pc, r0
   2f304:	bl	14610 <__assert_fail@plt>
   2f308:	mvn	r2, #-1073741824	; 0xc0000000
   2f30c:	ldr	r1, [fp, #-16]
   2f310:	ldr	r0, [fp, #-8]
   2f314:	bl	2ee7c <flatcc_builder_end_struct@@Base+0xa0>
   2f318:	mov	r3, r0
   2f31c:	cmp	r3, #0
   2f320:	beq	2f32c <flatcc_builder_append_offset_vector@@Base+0x70>
   2f324:	mov	r3, #0
   2f328:	b	2f348 <flatcc_builder_append_offset_vector@@Base+0x8c>
   2f32c:	ldr	r3, [fp, #-16]
   2f330:	lsl	r3, r3, #2
   2f334:	mov	r2, r3
   2f338:	ldr	r1, [fp, #-12]
   2f33c:	ldr	r0, [fp, #-8]
   2f340:	bl	2cdfc <flatcc_builder_default_alloc@@Base+0x3e8>
   2f344:	mov	r3, r0
   2f348:	mov	r0, r3
   2f34c:	sub	sp, fp, #4
   2f350:	pop	{fp, pc}
   2f354:	andeq	r1, r2, r0, lsl #21
   2f358:			; <UNDEFINED> instruction: 0x000214bc
   2f35c:	andeq	r1, r2, r4, ror #12

0002f360 <flatcc_builder_extend_string@@Base>:
   2f360:	push	{fp, lr}
   2f364:	add	fp, sp, #4
   2f368:	sub	sp, sp, #8
   2f36c:	str	r0, [fp, #-8]
   2f370:	str	r1, [fp, #-12]
   2f374:	ldr	r3, [fp, #-8]
   2f378:	ldr	r3, [r3, #32]
   2f37c:	ldrh	r3, [r3, #14]
   2f380:	cmp	r3, #6
   2f384:	beq	2f3a8 <flatcc_builder_extend_string@@Base+0x48>
   2f388:	ldr	r3, [pc, #88]	; 2f3e8 <flatcc_builder_extend_string@@Base+0x88>
   2f38c:	add	r3, pc, r3
   2f390:	ldr	r2, [pc, #84]	; 2f3ec <flatcc_builder_extend_string@@Base+0x8c>
   2f394:	ldr	r1, [pc, #84]	; 2f3f0 <flatcc_builder_extend_string@@Base+0x90>
   2f398:	add	r1, pc, r1
   2f39c:	ldr	r0, [pc, #80]	; 2f3f4 <flatcc_builder_extend_string@@Base+0x94>
   2f3a0:	add	r0, pc, r0
   2f3a4:	bl	14610 <__assert_fail@plt>
   2f3a8:	mvn	r2, #0
   2f3ac:	ldr	r1, [fp, #-12]
   2f3b0:	ldr	r0, [fp, #-8]
   2f3b4:	bl	2ee7c <flatcc_builder_end_struct@@Base+0xa0>
   2f3b8:	mov	r3, r0
   2f3bc:	cmp	r3, #0
   2f3c0:	beq	2f3cc <flatcc_builder_extend_string@@Base+0x6c>
   2f3c4:	mov	r3, #0
   2f3c8:	b	2f3dc <flatcc_builder_extend_string@@Base+0x7c>
   2f3cc:	ldr	r1, [fp, #-12]
   2f3d0:	ldr	r0, [fp, #-8]
   2f3d4:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   2f3d8:	mov	r3, r0
   2f3dc:	mov	r0, r3
   2f3e0:	sub	sp, fp, #4
   2f3e4:	pop	{fp, pc}
   2f3e8:	andeq	r1, r2, r4, lsl #20
   2f3ec:			; <UNDEFINED> instruction: 0x000003bd
   2f3f0:	andeq	r1, r2, ip, lsl r4
   2f3f4:	strdeq	r1, [r2], -r8

0002f3f8 <flatcc_builder_append_string@@Base>:
   2f3f8:	push	{fp, lr}
   2f3fc:	add	fp, sp, #4
   2f400:	sub	sp, sp, #16
   2f404:	str	r0, [fp, #-8]
   2f408:	str	r1, [fp, #-12]
   2f40c:	str	r2, [fp, #-16]
   2f410:	ldr	r3, [fp, #-8]
   2f414:	ldr	r3, [r3, #32]
   2f418:	ldrh	r3, [r3, #14]
   2f41c:	cmp	r3, #6
   2f420:	beq	2f444 <flatcc_builder_append_string@@Base+0x4c>
   2f424:	ldr	r3, [pc, #92]	; 2f488 <flatcc_builder_append_string@@Base+0x90>
   2f428:	add	r3, pc, r3
   2f42c:	ldr	r2, [pc, #88]	; 2f48c <flatcc_builder_append_string@@Base+0x94>
   2f430:	ldr	r1, [pc, #88]	; 2f490 <flatcc_builder_append_string@@Base+0x98>
   2f434:	add	r1, pc, r1
   2f438:	ldr	r0, [pc, #84]	; 2f494 <flatcc_builder_append_string@@Base+0x9c>
   2f43c:	add	r0, pc, r0
   2f440:	bl	14610 <__assert_fail@plt>
   2f444:	mvn	r2, #0
   2f448:	ldr	r1, [fp, #-16]
   2f44c:	ldr	r0, [fp, #-8]
   2f450:	bl	2ee7c <flatcc_builder_end_struct@@Base+0xa0>
   2f454:	mov	r3, r0
   2f458:	cmp	r3, #0
   2f45c:	beq	2f468 <flatcc_builder_append_string@@Base+0x70>
   2f460:	mov	r3, #0
   2f464:	b	2f47c <flatcc_builder_append_string@@Base+0x84>
   2f468:	ldr	r2, [fp, #-16]
   2f46c:	ldr	r1, [fp, #-12]
   2f470:	ldr	r0, [fp, #-8]
   2f474:	bl	2cdfc <flatcc_builder_default_alloc@@Base+0x3e8>
   2f478:	mov	r3, r0
   2f47c:	mov	r0, r3
   2f480:	sub	sp, fp, #4
   2f484:	pop	{fp, pc}
   2f488:	andeq	r1, r2, r8, lsl #19
   2f48c:	andeq	r0, r0, r6, asr #7
   2f490:	andeq	r1, r2, r0, lsl #7
   2f494:	andeq	r1, r2, ip, asr r5

0002f498 <flatcc_builder_append_string_str@@Base>:
   2f498:	push	{fp, lr}
   2f49c:	add	fp, sp, #4
   2f4a0:	sub	sp, sp, #8
   2f4a4:	str	r0, [fp, #-8]
   2f4a8:	str	r1, [fp, #-12]
   2f4ac:	ldr	r0, [fp, #-12]
   2f4b0:	bl	14598 <strlen@plt>
   2f4b4:	mov	r3, r0
   2f4b8:	mov	r2, r3
   2f4bc:	ldr	r1, [fp, #-12]
   2f4c0:	ldr	r0, [fp, #-8]
   2f4c4:	bl	2f3f8 <flatcc_builder_append_string@@Base>
   2f4c8:	mov	r3, r0
   2f4cc:	mov	r0, r3
   2f4d0:	sub	sp, fp, #4
   2f4d4:	pop	{fp, pc}

0002f4d8 <flatcc_builder_append_string_strn@@Base>:
   2f4d8:	push	{fp, lr}
   2f4dc:	add	fp, sp, #4
   2f4e0:	sub	sp, sp, #16
   2f4e4:	str	r0, [fp, #-8]
   2f4e8:	str	r1, [fp, #-12]
   2f4ec:	str	r2, [fp, #-16]
   2f4f0:	ldr	r1, [fp, #-16]
   2f4f4:	ldr	r0, [fp, #-12]
   2f4f8:	bl	2c9c0 <main@@Base+0x1784>
   2f4fc:	mov	r3, r0
   2f500:	mov	r2, r3
   2f504:	ldr	r1, [fp, #-12]
   2f508:	ldr	r0, [fp, #-8]
   2f50c:	bl	2f3f8 <flatcc_builder_append_string@@Base>
   2f510:	mov	r3, r0
   2f514:	mov	r0, r3
   2f518:	sub	sp, fp, #4
   2f51c:	pop	{fp, pc}

0002f520 <flatcc_builder_truncate_vector@@Base>:
   2f520:	push	{fp, lr}
   2f524:	add	fp, sp, #4
   2f528:	sub	sp, sp, #8
   2f52c:	str	r0, [fp, #-8]
   2f530:	str	r1, [fp, #-12]
   2f534:	ldr	r3, [fp, #-8]
   2f538:	ldr	r3, [r3, #32]
   2f53c:	ldrh	r3, [r3, #14]
   2f540:	cmp	r3, #4
   2f544:	beq	2f568 <flatcc_builder_truncate_vector@@Base+0x48>
   2f548:	ldr	r3, [pc, #192]	; 2f610 <flatcc_builder_truncate_vector@@Base+0xf0>
   2f54c:	add	r3, pc, r3
   2f550:	ldr	r2, [pc, #188]	; 2f614 <flatcc_builder_truncate_vector@@Base+0xf4>
   2f554:	ldr	r1, [pc, #188]	; 2f618 <flatcc_builder_truncate_vector@@Base+0xf8>
   2f558:	add	r1, pc, r1
   2f55c:	ldr	r0, [pc, #184]	; 2f61c <flatcc_builder_truncate_vector@@Base+0xfc>
   2f560:	add	r0, pc, r0
   2f564:	bl	14610 <__assert_fail@plt>
   2f568:	ldr	r3, [fp, #-8]
   2f56c:	ldr	r3, [r3, #32]
   2f570:	ldr	r2, [r3, #20]
   2f574:	ldr	r3, [fp, #-12]
   2f578:	cmp	r2, r3
   2f57c:	bcs	2f5c0 <flatcc_builder_truncate_vector@@Base+0xa0>
   2f580:	ldr	r3, [fp, #-8]
   2f584:	ldr	r3, [r3, #32]
   2f588:	ldr	r2, [r3, #20]
   2f58c:	ldr	r3, [fp, #-12]
   2f590:	cmp	r2, r3
   2f594:	bcs	2f5b8 <flatcc_builder_truncate_vector@@Base+0x98>
   2f598:	ldr	r3, [pc, #128]	; 2f620 <flatcc_builder_truncate_vector@@Base+0x100>
   2f59c:	add	r3, pc, r3
   2f5a0:	ldr	r2, [pc, #124]	; 2f624 <flatcc_builder_truncate_vector@@Base+0x104>
   2f5a4:	ldr	r1, [pc, #124]	; 2f628 <flatcc_builder_truncate_vector@@Base+0x108>
   2f5a8:	add	r1, pc, r1
   2f5ac:	ldr	r0, [pc, #120]	; 2f62c <flatcc_builder_truncate_vector@@Base+0x10c>
   2f5b0:	add	r0, pc, r0
   2f5b4:	bl	14610 <__assert_fail@plt>
   2f5b8:	mvn	r3, #0
   2f5bc:	b	2f604 <flatcc_builder_truncate_vector@@Base+0xe4>
   2f5c0:	ldr	r3, [fp, #-8]
   2f5c4:	ldr	r3, [r3, #32]
   2f5c8:	ldr	r2, [fp, #-8]
   2f5cc:	ldr	r2, [r2, #32]
   2f5d0:	ldr	r1, [r2, #20]
   2f5d4:	ldr	r2, [fp, #-12]
   2f5d8:	sub	r2, r1, r2
   2f5dc:	str	r2, [r3, #20]
   2f5e0:	ldr	r3, [fp, #-8]
   2f5e4:	ldr	r3, [r3, #32]
   2f5e8:	ldr	r3, [r3, #16]
   2f5ec:	ldr	r2, [fp, #-12]
   2f5f0:	mul	r3, r2, r3
   2f5f4:	mov	r1, r3
   2f5f8:	ldr	r0, [fp, #-8]
   2f5fc:	bl	2cda0 <flatcc_builder_default_alloc@@Base+0x38c>
   2f600:	mov	r3, #0
   2f604:	mov	r0, r3
   2f608:	sub	sp, fp, #4
   2f60c:	pop	{fp, pc}
   2f610:	andeq	r1, r2, r4, lsl #17
   2f614:	ldrdeq	r0, [r0], -r9
   2f618:	andeq	r1, r2, ip, asr r2
   2f61c:	muleq	r2, r8, r3
   2f620:	andeq	r1, r2, r4, lsr r8
   2f624:	ldrdeq	r0, [r0], -sl
   2f628:	andeq	r1, r2, ip, lsl #4
   2f62c:	andeq	r1, r2, r4, lsl r4

0002f630 <flatcc_builder_truncate_offset_vector@@Base>:
   2f630:	push	{fp, lr}
   2f634:	add	fp, sp, #4
   2f638:	sub	sp, sp, #8
   2f63c:	str	r0, [fp, #-8]
   2f640:	str	r1, [fp, #-12]
   2f644:	ldr	r3, [fp, #-8]
   2f648:	ldr	r3, [r3, #32]
   2f64c:	ldrh	r3, [r3, #14]
   2f650:	cmp	r3, #5
   2f654:	beq	2f678 <flatcc_builder_truncate_offset_vector@@Base+0x48>
   2f658:	ldr	r3, [pc, #192]	; 2f720 <flatcc_builder_truncate_offset_vector@@Base+0xf0>
   2f65c:	add	r3, pc, r3
   2f660:	ldr	r2, [pc, #188]	; 2f724 <flatcc_builder_truncate_offset_vector@@Base+0xf4>
   2f664:	ldr	r1, [pc, #188]	; 2f728 <flatcc_builder_truncate_offset_vector@@Base+0xf8>
   2f668:	add	r1, pc, r1
   2f66c:	ldr	r0, [pc, #184]	; 2f72c <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   2f670:	add	r0, pc, r0
   2f674:	bl	14610 <__assert_fail@plt>
   2f678:	ldr	r3, [fp, #-8]
   2f67c:	ldr	r3, [r3, #32]
   2f680:	ldr	r2, [r3, #20]
   2f684:	ldr	r3, [fp, #-12]
   2f688:	cmp	r2, r3
   2f68c:	bcs	2f6d0 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   2f690:	ldr	r3, [fp, #-8]
   2f694:	ldr	r3, [r3, #32]
   2f698:	ldr	r2, [r3, #20]
   2f69c:	ldr	r3, [fp, #-12]
   2f6a0:	cmp	r2, r3
   2f6a4:	bcs	2f6c8 <flatcc_builder_truncate_offset_vector@@Base+0x98>
   2f6a8:	ldr	r3, [pc, #128]	; 2f730 <flatcc_builder_truncate_offset_vector@@Base+0x100>
   2f6ac:	add	r3, pc, r3
   2f6b0:	ldr	r2, [pc, #124]	; 2f734 <flatcc_builder_truncate_offset_vector@@Base+0x104>
   2f6b4:	ldr	r1, [pc, #124]	; 2f738 <flatcc_builder_truncate_offset_vector@@Base+0x108>
   2f6b8:	add	r1, pc, r1
   2f6bc:	ldr	r0, [pc, #120]	; 2f73c <flatcc_builder_truncate_offset_vector@@Base+0x10c>
   2f6c0:	add	r0, pc, r0
   2f6c4:	bl	14610 <__assert_fail@plt>
   2f6c8:	mvn	r3, #0
   2f6cc:	b	2f714 <flatcc_builder_truncate_offset_vector@@Base+0xe4>
   2f6d0:	ldr	r3, [fp, #-8]
   2f6d4:	ldr	r3, [r3, #32]
   2f6d8:	ldr	r2, [fp, #-8]
   2f6dc:	ldr	r2, [r2, #32]
   2f6e0:	ldr	r1, [r2, #20]
   2f6e4:	ldr	r2, [fp, #-12]
   2f6e8:	sub	r2, r1, r2
   2f6ec:	str	r2, [r3, #20]
   2f6f0:	ldr	r3, [fp, #-8]
   2f6f4:	ldr	r3, [r3, #32]
   2f6f8:	ldr	r3, [r3, #16]
   2f6fc:	ldr	r2, [fp, #-12]
   2f700:	mul	r3, r2, r3
   2f704:	mov	r1, r3
   2f708:	ldr	r0, [fp, #-8]
   2f70c:	bl	2cda0 <flatcc_builder_default_alloc@@Base+0x38c>
   2f710:	mov	r3, #0
   2f714:	mov	r0, r3
   2f718:	sub	sp, fp, #4
   2f71c:	pop	{fp, pc}
   2f720:	muleq	r2, r4, r7
   2f724:	andeq	r0, r0, r2, ror #7
   2f728:	andeq	r1, r2, ip, asr #2
   2f72c:	strdeq	r1, [r2], -r4
   2f730:	andeq	r1, r2, r4, asr #14
   2f734:	andeq	r0, r0, r3, ror #7
   2f738:	strdeq	r1, [r2], -ip
   2f73c:	andeq	r1, r2, r8, lsr #6

0002f740 <flatcc_builder_truncate_string@@Base>:
   2f740:	push	{fp, lr}
   2f744:	add	fp, sp, #4
   2f748:	sub	sp, sp, #8
   2f74c:	str	r0, [fp, #-8]
   2f750:	str	r1, [fp, #-12]
   2f754:	ldr	r3, [fp, #-8]
   2f758:	ldr	r3, [r3, #32]
   2f75c:	ldrh	r3, [r3, #14]
   2f760:	cmp	r3, #6
   2f764:	beq	2f788 <flatcc_builder_truncate_string@@Base+0x48>
   2f768:	ldr	r3, [pc, #172]	; 2f81c <flatcc_builder_truncate_string@@Base+0xdc>
   2f76c:	add	r3, pc, r3
   2f770:	ldr	r2, [pc, #168]	; 2f820 <flatcc_builder_truncate_string@@Base+0xe0>
   2f774:	ldr	r1, [pc, #168]	; 2f824 <flatcc_builder_truncate_string@@Base+0xe4>
   2f778:	add	r1, pc, r1
   2f77c:	ldr	r0, [pc, #164]	; 2f828 <flatcc_builder_truncate_string@@Base+0xe8>
   2f780:	add	r0, pc, r0
   2f784:	bl	14610 <__assert_fail@plt>
   2f788:	ldr	r3, [fp, #-8]
   2f78c:	ldr	r3, [r3, #32]
   2f790:	ldr	r2, [r3, #20]
   2f794:	ldr	r3, [fp, #-12]
   2f798:	cmp	r2, r3
   2f79c:	bcs	2f7e0 <flatcc_builder_truncate_string@@Base+0xa0>
   2f7a0:	ldr	r3, [fp, #-8]
   2f7a4:	ldr	r3, [r3, #32]
   2f7a8:	ldr	r2, [r3, #20]
   2f7ac:	ldr	r3, [fp, #-12]
   2f7b0:	cmp	r2, r3
   2f7b4:	bcs	2f7d8 <flatcc_builder_truncate_string@@Base+0x98>
   2f7b8:	ldr	r3, [pc, #108]	; 2f82c <flatcc_builder_truncate_string@@Base+0xec>
   2f7bc:	add	r3, pc, r3
   2f7c0:	mov	r2, #1004	; 0x3ec
   2f7c4:	ldr	r1, [pc, #100]	; 2f830 <flatcc_builder_truncate_string@@Base+0xf0>
   2f7c8:	add	r1, pc, r1
   2f7cc:	ldr	r0, [pc, #96]	; 2f834 <flatcc_builder_truncate_string@@Base+0xf4>
   2f7d0:	add	r0, pc, r0
   2f7d4:	bl	14610 <__assert_fail@plt>
   2f7d8:	mvn	r3, #0
   2f7dc:	b	2f810 <flatcc_builder_truncate_string@@Base+0xd0>
   2f7e0:	ldr	r3, [fp, #-8]
   2f7e4:	ldr	r3, [r3, #32]
   2f7e8:	ldr	r2, [fp, #-8]
   2f7ec:	ldr	r2, [r2, #32]
   2f7f0:	ldr	r1, [r2, #20]
   2f7f4:	ldr	r2, [fp, #-12]
   2f7f8:	sub	r2, r1, r2
   2f7fc:	str	r2, [r3, #20]
   2f800:	ldr	r1, [fp, #-12]
   2f804:	ldr	r0, [fp, #-8]
   2f808:	bl	2cda0 <flatcc_builder_default_alloc@@Base+0x38c>
   2f80c:	mov	r3, #0
   2f810:	mov	r0, r3
   2f814:	sub	sp, fp, #4
   2f818:	pop	{fp, pc}
   2f81c:	andeq	r1, r2, ip, lsr #13
   2f820:	andeq	r0, r0, fp, ror #7
   2f824:	andeq	r1, r2, ip, lsr r0
   2f828:	andeq	r1, r2, r8, lsl r2
   2f82c:	andeq	r1, r2, ip, asr r6
   2f830:	andeq	r0, r2, ip, ror #31
   2f834:	andeq	r1, r2, r4, asr r2

0002f838 <flatcc_builder_start_vector@@Base>:
   2f838:	push	{fp, lr}
   2f83c:	add	fp, sp, #4
   2f840:	sub	sp, sp, #16
   2f844:	str	r0, [fp, #-8]
   2f848:	str	r1, [fp, #-12]
   2f84c:	str	r3, [fp, #-20]	; 0xffffffec
   2f850:	strh	r2, [fp, #-14]
   2f854:	sub	r3, fp, #14
   2f858:	mov	r1, #4
   2f85c:	mov	r0, r3
   2f860:	bl	2d918 <flatcc_builder_clear@@Base+0xf8>
   2f864:	ldrh	r3, [fp, #-14]
   2f868:	mov	r1, r3
   2f86c:	ldr	r0, [fp, #-8]
   2f870:	bl	2dc64 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2f874:	mov	r3, r0
   2f878:	cmp	r3, #0
   2f87c:	beq	2f888 <flatcc_builder_start_vector@@Base+0x50>
   2f880:	mvn	r3, #0
   2f884:	b	2f8d8 <flatcc_builder_start_vector@@Base+0xa0>
   2f888:	ldr	r3, [fp, #-8]
   2f88c:	ldr	r3, [r3, #32]
   2f890:	ldr	r2, [fp, #-12]
   2f894:	str	r2, [r3, #16]
   2f898:	ldr	r3, [fp, #-8]
   2f89c:	ldr	r3, [r3, #32]
   2f8a0:	mov	r2, #0
   2f8a4:	str	r2, [r3, #20]
   2f8a8:	ldr	r3, [fp, #-8]
   2f8ac:	ldr	r3, [r3, #32]
   2f8b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f8b4:	str	r2, [r3, #24]
   2f8b8:	ldr	r3, [fp, #-8]
   2f8bc:	ldr	r3, [r3, #32]
   2f8c0:	mov	r2, #4
   2f8c4:	strh	r2, [r3, #14]
   2f8c8:	mvn	r1, #3
   2f8cc:	ldr	r0, [fp, #-8]
   2f8d0:	bl	2cbdc <flatcc_builder_default_alloc@@Base+0x1c8>
   2f8d4:	mov	r3, #0
   2f8d8:	mov	r0, r3
   2f8dc:	sub	sp, fp, #4
   2f8e0:	pop	{fp, pc}

0002f8e4 <flatcc_builder_start_offset_vector@@Base>:
   2f8e4:	push	{fp, lr}
   2f8e8:	add	fp, sp, #4
   2f8ec:	sub	sp, sp, #8
   2f8f0:	str	r0, [fp, #-8]
   2f8f4:	mov	r1, #4
   2f8f8:	ldr	r0, [fp, #-8]
   2f8fc:	bl	2dc64 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2f900:	mov	r3, r0
   2f904:	cmp	r3, #0
   2f908:	beq	2f914 <flatcc_builder_start_offset_vector@@Base+0x30>
   2f90c:	mvn	r3, #0
   2f910:	b	2f954 <flatcc_builder_start_offset_vector@@Base+0x70>
   2f914:	ldr	r3, [fp, #-8]
   2f918:	ldr	r3, [r3, #32]
   2f91c:	mov	r2, #4
   2f920:	str	r2, [r3, #16]
   2f924:	ldr	r3, [fp, #-8]
   2f928:	ldr	r3, [r3, #32]
   2f92c:	mov	r2, #0
   2f930:	str	r2, [r3, #20]
   2f934:	ldr	r3, [fp, #-8]
   2f938:	ldr	r3, [r3, #32]
   2f93c:	mov	r2, #5
   2f940:	strh	r2, [r3, #14]
   2f944:	mvn	r1, #3
   2f948:	ldr	r0, [fp, #-8]
   2f94c:	bl	2cbdc <flatcc_builder_default_alloc@@Base+0x1c8>
   2f950:	mov	r3, #0
   2f954:	mov	r0, r3
   2f958:	sub	sp, fp, #4
   2f95c:	pop	{fp, pc}

0002f960 <flatcc_builder_create_offset_vector@@Base>:
   2f960:	push	{fp, lr}
   2f964:	add	fp, sp, #4
   2f968:	sub	sp, sp, #24
   2f96c:	str	r0, [fp, #-16]
   2f970:	str	r1, [fp, #-20]	; 0xffffffec
   2f974:	str	r2, [fp, #-24]	; 0xffffffe8
   2f978:	ldr	r0, [fp, #-16]
   2f97c:	bl	2f8e4 <flatcc_builder_start_offset_vector@@Base>
   2f980:	mov	r3, r0
   2f984:	cmp	r3, #0
   2f988:	beq	2f994 <flatcc_builder_create_offset_vector@@Base+0x34>
   2f98c:	mov	r3, #0
   2f990:	b	2f9dc <flatcc_builder_create_offset_vector@@Base+0x7c>
   2f994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f998:	ldr	r0, [fp, #-16]
   2f99c:	bl	2f190 <flatcc_builder_extend_offset_vector@@Base>
   2f9a0:	str	r0, [fp, #-8]
   2f9a4:	ldr	r3, [fp, #-8]
   2f9a8:	cmp	r3, #0
   2f9ac:	bne	2f9b8 <flatcc_builder_create_offset_vector@@Base+0x58>
   2f9b0:	mov	r3, #0
   2f9b4:	b	2f9dc <flatcc_builder_create_offset_vector@@Base+0x7c>
   2f9b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f9bc:	lsl	r3, r3, #2
   2f9c0:	mov	r2, r3
   2f9c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f9c8:	ldr	r0, [fp, #-8]
   2f9cc:	bl	14544 <memcpy@plt>
   2f9d0:	ldr	r0, [fp, #-16]
   2f9d4:	bl	30f38 <flatcc_builder_end_offset_vector@@Base>
   2f9d8:	mov	r3, r0
   2f9dc:	mov	r0, r3
   2f9e0:	sub	sp, fp, #4
   2f9e4:	pop	{fp, pc}

0002f9e8 <flatcc_builder_start_string@@Base>:
   2f9e8:	push	{fp, lr}
   2f9ec:	add	fp, sp, #4
   2f9f0:	sub	sp, sp, #8
   2f9f4:	str	r0, [fp, #-8]
   2f9f8:	mov	r1, #1
   2f9fc:	ldr	r0, [fp, #-8]
   2fa00:	bl	2dc64 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2fa04:	mov	r3, r0
   2fa08:	cmp	r3, #0
   2fa0c:	beq	2fa18 <flatcc_builder_start_string@@Base+0x30>
   2fa10:	mvn	r3, #0
   2fa14:	b	2fa58 <flatcc_builder_start_string@@Base+0x70>
   2fa18:	ldr	r3, [fp, #-8]
   2fa1c:	ldr	r3, [r3, #32]
   2fa20:	mov	r2, #1
   2fa24:	str	r2, [r3, #16]
   2fa28:	ldr	r3, [fp, #-8]
   2fa2c:	ldr	r3, [r3, #32]
   2fa30:	mov	r2, #0
   2fa34:	str	r2, [r3, #20]
   2fa38:	ldr	r3, [fp, #-8]
   2fa3c:	ldr	r3, [r3, #32]
   2fa40:	mov	r2, #6
   2fa44:	strh	r2, [r3, #14]
   2fa48:	mvn	r1, #3
   2fa4c:	ldr	r0, [fp, #-8]
   2fa50:	bl	2cbdc <flatcc_builder_default_alloc@@Base+0x1c8>
   2fa54:	mov	r3, #0
   2fa58:	mov	r0, r3
   2fa5c:	sub	sp, fp, #4
   2fa60:	pop	{fp, pc}

0002fa64 <flatcc_builder_reserve_table@@Base>:
   2fa64:	push	{fp, lr}
   2fa68:	add	fp, sp, #4
   2fa6c:	sub	sp, sp, #8
   2fa70:	str	r0, [fp, #-8]
   2fa74:	str	r1, [fp, #-12]
   2fa78:	ldr	r3, [fp, #-12]
   2fa7c:	cmp	r3, #0
   2fa80:	bge	2faa4 <flatcc_builder_reserve_table@@Base+0x40>
   2fa84:	ldr	r3, [pc, #52]	; 2fac0 <flatcc_builder_reserve_table@@Base+0x5c>
   2fa88:	add	r3, pc, r3
   2fa8c:	ldr	r2, [pc, #48]	; 2fac4 <flatcc_builder_reserve_table@@Base+0x60>
   2fa90:	ldr	r1, [pc, #48]	; 2fac8 <flatcc_builder_reserve_table@@Base+0x64>
   2fa94:	add	r1, pc, r1
   2fa98:	ldr	r0, [pc, #44]	; 2facc <flatcc_builder_reserve_table@@Base+0x68>
   2fa9c:	add	r0, pc, r0
   2faa0:	bl	14610 <__assert_fail@plt>
   2faa4:	ldr	r1, [fp, #-12]
   2faa8:	ldr	r0, [fp, #-8]
   2faac:	bl	2d14c <flatcc_builder_default_alloc@@Base+0x738>
   2fab0:	mov	r3, r0
   2fab4:	mov	r0, r3
   2fab8:	sub	sp, fp, #4
   2fabc:	pop	{fp, pc}
   2fac0:			; <UNDEFINED> instruction: 0x000213b0
   2fac4:	andeq	r0, r0, r9, lsr #8
   2fac8:	andeq	r0, r2, r0, lsr #26
   2facc:	andeq	r0, r2, ip, lsr #31

0002fad0 <flatcc_builder_start_table@@Base>:
   2fad0:	push	{fp, lr}
   2fad4:	add	fp, sp, #4
   2fad8:	sub	sp, sp, #8
   2fadc:	str	r0, [fp, #-8]
   2fae0:	str	r1, [fp, #-12]
   2fae4:	mov	r1, #4
   2fae8:	ldr	r0, [fp, #-8]
   2faec:	bl	2dc64 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2faf0:	mov	r3, r0
   2faf4:	cmp	r3, #0
   2faf8:	beq	2fb04 <flatcc_builder_start_table@@Base+0x34>
   2fafc:	mvn	r3, #0
   2fb00:	b	2fbd8 <flatcc_builder_start_table@@Base+0x108>
   2fb04:	ldr	r3, [fp, #-8]
   2fb08:	ldr	r3, [r3, #32]
   2fb0c:	ldr	r2, [fp, #-8]
   2fb10:	ldr	r2, [r2, #4]
   2fb14:	mov	r1, r2
   2fb18:	ldr	r2, [fp, #-8]
   2fb1c:	ldr	r2, [r2, #52]	; 0x34
   2fb20:	sub	r2, r1, r2
   2fb24:	str	r2, [r3, #16]
   2fb28:	ldr	r3, [fp, #-8]
   2fb2c:	ldr	r3, [r3, #32]
   2fb30:	ldr	r2, [fp, #-8]
   2fb34:	ldr	r2, [r2]
   2fb38:	mov	r1, r2
   2fb3c:	ldr	r2, [fp, #-8]
   2fb40:	ldr	r2, [r2, #76]	; 0x4c
   2fb44:	sub	r2, r1, r2
   2fb48:	str	r2, [r3, #20]
   2fb4c:	ldr	r3, [fp, #-8]
   2fb50:	ldr	r3, [r3, #32]
   2fb54:	ldr	r2, [fp, #-8]
   2fb58:	ldr	r2, [r2, #12]
   2fb5c:	str	r2, [r3, #24]
   2fb60:	ldr	r3, [fp, #-8]
   2fb64:	ldr	r3, [r3, #32]
   2fb68:	ldr	r2, [fp, #-8]
   2fb6c:	ldrh	r2, [r2, #8]
   2fb70:	strh	r2, [r3, #28]
   2fb74:	ldr	r3, [fp, #-8]
   2fb78:	mov	r2, #0
   2fb7c:	str	r2, [r3, #12]
   2fb80:	ldr	r3, [fp, #-8]
   2fb84:	ldr	r2, [pc, #88]	; 2fbe4 <flatcc_builder_start_table@@Base+0x114>
   2fb88:	str	r2, [r3, #12]
   2fb8c:	ldr	r3, [fp, #-8]
   2fb90:	mov	r2, #0
   2fb94:	strh	r2, [r3, #8]
   2fb98:	ldr	r3, [fp, #-8]
   2fb9c:	ldr	r3, [r3, #32]
   2fba0:	mov	r2, #3
   2fba4:	strh	r2, [r3, #14]
   2fba8:	ldr	r1, [fp, #-12]
   2fbac:	ldr	r0, [fp, #-8]
   2fbb0:	bl	2d14c <flatcc_builder_default_alloc@@Base+0x738>
   2fbb4:	mov	r3, r0
   2fbb8:	cmp	r3, #0
   2fbbc:	beq	2fbc8 <flatcc_builder_start_table@@Base+0xf8>
   2fbc0:	mvn	r3, #0
   2fbc4:	b	2fbd8 <flatcc_builder_start_table@@Base+0x108>
   2fbc8:	ldr	r1, [pc, #24]	; 2fbe8 <flatcc_builder_start_table@@Base+0x118>
   2fbcc:	ldr	r0, [fp, #-8]
   2fbd0:	bl	2cbdc <flatcc_builder_default_alloc@@Base+0x1c8>
   2fbd4:	mov	r3, #0
   2fbd8:	mov	r0, r3
   2fbdc:	sub	sp, fp, #4
   2fbe0:	pop	{fp, pc}
   2fbe4:	svccs	0x00693b52
   2fbe8:	strdeq	pc, [r0], -ip

0002fbec <flatcc_builder_create_vtable@@Base>:
   2fbec:	push	{fp, lr}
   2fbf0:	add	fp, sp, #4
   2fbf4:	sub	sp, sp, #96	; 0x60
   2fbf8:	str	r0, [fp, #-88]	; 0xffffffa8
   2fbfc:	str	r1, [fp, #-92]	; 0xffffffa4
   2fc00:	mov	r3, r2
   2fc04:	strh	r3, [fp, #-94]	; 0xffffffa2
   2fc08:	mov	r3, #0
   2fc0c:	str	r3, [fp, #-80]	; 0xffffffb0
   2fc10:	mov	r3, #0
   2fc14:	str	r3, [fp, #-76]	; 0xffffffb4
   2fc18:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   2fc1c:	cmp	r3, #0
   2fc20:	beq	2fc78 <flatcc_builder_create_vtable@@Base+0x8c>
   2fc24:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2fc28:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   2fc2c:	add	r3, r2, r3
   2fc30:	str	r3, [fp, #-80]	; 0xffffffb0
   2fc34:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2fc38:	add	r3, r3, #1
   2fc3c:	lsl	r3, r3, #3
   2fc40:	sub	r2, fp, #4
   2fc44:	add	r3, r2, r3
   2fc48:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2fc4c:	str	r2, [r3, #-76]	; 0xffffffb4
   2fc50:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2fc54:	ldrh	r2, [fp, #-94]	; 0xffffffa2
   2fc58:	add	r3, r3, #1
   2fc5c:	lsl	r3, r3, #3
   2fc60:	sub	r1, fp, #4
   2fc64:	add	r3, r1, r3
   2fc68:	str	r2, [r3, #-72]	; 0xffffffb8
   2fc6c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2fc70:	add	r3, r3, #1
   2fc74:	str	r3, [fp, #-76]	; 0xffffffb4
   2fc78:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2fc7c:	ldr	r3, [r3, #152]	; 0x98
   2fc80:	cmp	r3, #0
   2fc84:	bne	2fcc0 <flatcc_builder_create_vtable@@Base+0xd4>
   2fc88:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2fc8c:	ldr	r3, [r3, #180]	; 0xb4
   2fc90:	cmp	r3, #0
   2fc94:	bne	2fcc0 <flatcc_builder_create_vtable@@Base+0xd4>
   2fc98:	sub	r3, fp, #80	; 0x50
   2fc9c:	mov	r1, r3
   2fca0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2fca4:	bl	2e094 <flatcc_builder_get_user_frame_ptr@@Base+0x464>
   2fca8:	str	r0, [fp, #-8]
   2fcac:	ldr	r3, [fp, #-8]
   2fcb0:	cmp	r3, #0
   2fcb4:	bne	2fcf4 <flatcc_builder_create_vtable@@Base+0x108>
   2fcb8:	mov	r3, #0
   2fcbc:	b	2fcf8 <flatcc_builder_create_vtable@@Base+0x10c>
   2fcc0:	sub	r3, fp, #80	; 0x50
   2fcc4:	mov	r1, r3
   2fcc8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2fccc:	bl	2df94 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2fcd0:	str	r0, [fp, #-8]
   2fcd4:	ldr	r3, [fp, #-8]
   2fcd8:	cmp	r3, #0
   2fcdc:	bne	2fce8 <flatcc_builder_create_vtable@@Base+0xfc>
   2fce0:	mov	r3, #0
   2fce4:	b	2fcf8 <flatcc_builder_create_vtable@@Base+0x10c>
   2fce8:	ldr	r3, [fp, #-8]
   2fcec:	add	r3, r3, #1
   2fcf0:	str	r3, [fp, #-8]
   2fcf4:	ldr	r3, [fp, #-8]
   2fcf8:	mov	r0, r3
   2fcfc:	sub	sp, fp, #4
   2fd00:	pop	{fp, pc}

0002fd04 <flatcc_builder_create_cached_vtable@@Base>:
   2fd04:	push	{fp, lr}
   2fd08:	add	fp, sp, #4
   2fd0c:	sub	sp, sp, #48	; 0x30
   2fd10:	str	r0, [fp, #-32]	; 0xffffffe0
   2fd14:	str	r1, [fp, #-36]	; 0xffffffdc
   2fd18:	str	r3, [fp, #-44]	; 0xffffffd4
   2fd1c:	strh	r2, [fp, #-38]	; 0xffffffda
   2fd20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fd24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fd28:	bl	2d3b8 <flatcc_builder_default_alloc@@Base+0x9a4>
   2fd2c:	str	r0, [fp, #-20]	; 0xffffffec
   2fd30:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fd34:	cmp	r3, #0
   2fd38:	bne	2fd44 <flatcc_builder_create_cached_vtable@@Base+0x40>
   2fd3c:	mov	r3, #0
   2fd40:	b	30008 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2fd44:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fd48:	str	r3, [fp, #-12]
   2fd4c:	ldr	r3, [fp, #-12]
   2fd50:	ldr	r3, [r3]
   2fd54:	str	r3, [fp, #-16]
   2fd58:	mov	r3, #0
   2fd5c:	str	r3, [fp, #-8]
   2fd60:	b	2fe64 <flatcc_builder_create_cached_vtable@@Base+0x160>
   2fd64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fd68:	ldr	r2, [r3, #100]	; 0x64
   2fd6c:	ldr	r3, [fp, #-16]
   2fd70:	add	r3, r2, r3
   2fd74:	str	r3, [fp, #-24]	; 0xffffffe8
   2fd78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fd7c:	ldr	r2, [r3, #68]	; 0x44
   2fd80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fd84:	ldr	r3, [r3, #8]
   2fd88:	add	r3, r2, r3
   2fd8c:	str	r3, [fp, #-28]	; 0xffffffe4
   2fd90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fd94:	ldrh	r3, [r3]
   2fd98:	ldrh	r2, [fp, #-38]	; 0xffffffda
   2fd9c:	cmp	r2, r3
   2fda0:	bne	2fdc4 <flatcc_builder_create_cached_vtable@@Base+0xc0>
   2fda4:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2fda8:	mov	r2, r3
   2fdac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2fdb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2fdb4:	bl	14550 <memcmp@plt>
   2fdb8:	mov	r3, r0
   2fdbc:	cmp	r3, #0
   2fdc0:	beq	2fde0 <flatcc_builder_create_cached_vtable@@Base+0xdc>
   2fdc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fdc8:	add	r3, r3, #12
   2fdcc:	str	r3, [fp, #-12]
   2fdd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fdd4:	ldr	r3, [r3, #12]
   2fdd8:	str	r3, [fp, #-16]
   2fddc:	b	2fe64 <flatcc_builder_create_cached_vtable@@Base+0x160>
   2fde0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fde4:	ldr	r2, [r3, #4]
   2fde8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fdec:	ldr	r3, [r3, #152]	; 0x98
   2fdf0:	cmp	r2, r3
   2fdf4:	beq	2fe1c <flatcc_builder_create_cached_vtable@@Base+0x118>
   2fdf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fdfc:	str	r3, [fp, #-8]
   2fe00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe04:	add	r3, r3, #12
   2fe08:	str	r3, [fp, #-12]
   2fe0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe10:	ldr	r3, [r3, #12]
   2fe14:	str	r3, [fp, #-16]
   2fe18:	b	2fe64 <flatcc_builder_create_cached_vtable@@Base+0x160>
   2fe1c:	ldr	r2, [fp, #-12]
   2fe20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fe24:	cmp	r2, r3
   2fe28:	beq	2fe58 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2fe2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe30:	ldr	r2, [r3, #12]
   2fe34:	ldr	r3, [fp, #-12]
   2fe38:	str	r2, [r3]
   2fe3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fe40:	ldr	r2, [r3]
   2fe44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe48:	str	r2, [r3, #12]
   2fe4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fe50:	ldr	r2, [fp, #-16]
   2fe54:	str	r2, [r3]
   2fe58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe5c:	ldr	r3, [r3]
   2fe60:	b	30008 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2fe64:	ldr	r3, [fp, #-16]
   2fe68:	cmp	r3, #0
   2fe6c:	bne	2fd64 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2fe70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fe74:	ldr	r2, [r3, #124]	; 0x7c
   2fe78:	mov	r3, #0
   2fe7c:	str	r3, [sp]
   2fe80:	mov	r3, #16
   2fe84:	mov	r1, #6
   2fe88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fe8c:	bl	2d074 <flatcc_builder_default_alloc@@Base+0x660>
   2fe90:	str	r0, [fp, #-24]	; 0xffffffe8
   2fe94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe98:	cmp	r3, #0
   2fe9c:	bne	2fea8 <flatcc_builder_create_cached_vtable@@Base+0x1a4>
   2fea0:	mov	r3, #0
   2fea4:	b	30008 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2fea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2feac:	ldr	r3, [r3, #124]	; 0x7c
   2feb0:	str	r3, [fp, #-16]
   2feb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2feb8:	ldr	r3, [r3, #124]	; 0x7c
   2febc:	add	r2, r3, #16
   2fec0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fec4:	str	r2, [r3, #124]	; 0x7c
   2fec8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fecc:	ldr	r2, [r3, #152]	; 0x98
   2fed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fed4:	str	r2, [r3, #4]
   2fed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fedc:	ldr	r2, [r3]
   2fee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fee4:	str	r2, [r3, #12]
   2fee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2feec:	ldr	r2, [fp, #-16]
   2fef0:	str	r2, [r3]
   2fef4:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2fef8:	mov	r2, r3
   2fefc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ff00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ff04:	bl	2fbec <flatcc_builder_create_vtable@@Base>
   2ff08:	mov	r2, r0
   2ff0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ff10:	str	r2, [r3]
   2ff14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ff18:	ldr	r3, [r3]
   2ff1c:	cmp	r3, #0
   2ff20:	bne	2ff2c <flatcc_builder_create_cached_vtable@@Base+0x228>
   2ff24:	mov	r3, #0
   2ff28:	b	30008 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2ff2c:	ldr	r3, [fp, #-8]
   2ff30:	cmp	r3, #0
   2ff34:	beq	2ff4c <flatcc_builder_create_cached_vtable@@Base+0x248>
   2ff38:	ldr	r3, [fp, #-8]
   2ff3c:	ldr	r2, [r3, #8]
   2ff40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ff44:	str	r2, [r3, #8]
   2ff48:	b	30000 <flatcc_builder_create_cached_vtable@@Base+0x2fc>
   2ff4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ff50:	ldr	r3, [r3, #172]	; 0xac
   2ff54:	cmp	r3, #0
   2ff58:	beq	2ff88 <flatcc_builder_create_cached_vtable@@Base+0x284>
   2ff5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ff60:	ldr	r2, [r3, #172]	; 0xac
   2ff64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ff68:	ldr	r1, [r3, #120]	; 0x78
   2ff6c:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2ff70:	add	r3, r1, r3
   2ff74:	cmp	r2, r3
   2ff78:	bcs	2ff88 <flatcc_builder_create_cached_vtable@@Base+0x284>
   2ff7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ff80:	bl	2d430 <flatcc_builder_flush_vtable_cache@@Base>
   2ff84:	b	30000 <flatcc_builder_create_cached_vtable@@Base+0x2fc>
   2ff88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ff8c:	ldr	r2, [r3, #120]	; 0x78
   2ff90:	ldrh	r1, [fp, #-38]	; 0xffffffda
   2ff94:	mov	r3, #0
   2ff98:	str	r3, [sp]
   2ff9c:	mov	r3, r1
   2ffa0:	mov	r1, #2
   2ffa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ffa8:	bl	2d074 <flatcc_builder_default_alloc@@Base+0x660>
   2ffac:	str	r0, [fp, #-28]	; 0xffffffe4
   2ffb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ffb4:	cmp	r3, #0
   2ffb8:	bne	2ffc4 <flatcc_builder_create_cached_vtable@@Base+0x2c0>
   2ffbc:	mvn	r3, #0
   2ffc0:	b	30008 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2ffc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ffc8:	ldr	r2, [r3, #120]	; 0x78
   2ffcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ffd0:	str	r2, [r3, #8]
   2ffd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ffd8:	ldr	r2, [r3, #120]	; 0x78
   2ffdc:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2ffe0:	add	r2, r2, r3
   2ffe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ffe8:	str	r2, [r3, #120]	; 0x78
   2ffec:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2fff0:	mov	r2, r3
   2fff4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fff8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fffc:	bl	14544 <memcpy@plt>
   30000:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30004:	ldr	r3, [r3]
   30008:	mov	r0, r3
   3000c:	sub	sp, fp, #4
   30010:	pop	{fp, pc}

00030014 <flatcc_builder_create_table@@Base>:
   30014:	push	{r4, fp, lr}
   30018:	add	fp, sp, #8
   3001c:	sub	sp, sp, #124	; 0x7c
   30020:	str	r0, [fp, #-120]	; 0xffffff88
   30024:	str	r1, [fp, #-124]	; 0xffffff84
   30028:	str	r2, [fp, #-128]	; 0xffffff80
   3002c:	strh	r3, [fp, #-130]	; 0xffffff7e
   30030:	ldr	r4, [pc, #728]	; 30310 <flatcc_builder_create_table@@Base+0x2fc>
   30034:	add	r4, pc, r4
   30038:	ldr	r3, [fp, #8]
   3003c:	cmp	r3, #0
   30040:	bge	30064 <flatcc_builder_create_table@@Base+0x50>
   30044:	ldr	r3, [pc, #712]	; 30314 <flatcc_builder_create_table@@Base+0x300>
   30048:	add	r3, pc, r3
   3004c:	ldr	r2, [pc, #708]	; 30318 <flatcc_builder_create_table@@Base+0x304>
   30050:	ldr	r1, [pc, #708]	; 3031c <flatcc_builder_create_table@@Base+0x308>
   30054:	add	r1, pc, r1
   30058:	ldr	r0, [pc, #704]	; 30320 <flatcc_builder_create_table@@Base+0x30c>
   3005c:	add	r0, pc, r0
   30060:	bl	14610 <__assert_fail@plt>
   30064:	ldr	r3, [fp, #12]
   30068:	and	r3, r3, #1
   3006c:	cmp	r3, #0
   30070:	bne	30094 <flatcc_builder_create_table@@Base+0x80>
   30074:	ldr	r3, [pc, #680]	; 30324 <flatcc_builder_create_table@@Base+0x310>
   30078:	add	r3, pc, r3
   3007c:	ldr	r2, [pc, #676]	; 30328 <flatcc_builder_create_table@@Base+0x314>
   30080:	ldr	r1, [pc, #676]	; 3032c <flatcc_builder_create_table@@Base+0x318>
   30084:	add	r1, pc, r1
   30088:	ldr	r0, [pc, #672]	; 30330 <flatcc_builder_create_table@@Base+0x31c>
   3008c:	add	r0, pc, r0
   30090:	bl	14610 <__assert_fail@plt>
   30094:	sub	r3, fp, #130	; 0x82
   30098:	mov	r1, #4
   3009c:	mov	r0, r3
   300a0:	bl	2d918 <flatcc_builder_clear@@Base+0xf8>
   300a4:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   300a8:	mov	r1, r3
   300ac:	ldr	r0, [fp, #-120]	; 0xffffff88
   300b0:	bl	2d8d0 <flatcc_builder_clear@@Base+0xb0>
   300b4:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   300b8:	mov	r2, r3
   300bc:	ldr	r1, [fp, #-128]	; 0xffffff80
   300c0:	ldr	r0, [fp, #-120]	; 0xffffff88
   300c4:	bl	2df0c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   300c8:	str	r0, [fp, #-20]	; 0xffffffec
   300cc:	ldr	r3, [fp, #-120]	; 0xffffff88
   300d0:	ldr	r3, [r3, #136]	; 0x88
   300d4:	mov	r1, r3
   300d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   300dc:	ldr	r3, [fp, #-128]	; 0xffffff80
   300e0:	add	r3, r2, r3
   300e4:	sub	r3, r1, r3
   300e8:	sub	r3, r3, #4
   300ec:	str	r3, [fp, #-24]	; 0xffffffe8
   300f0:	ldr	r3, [fp, #12]
   300f4:	sub	r3, r3, #1
   300f8:	str	r3, [fp, #-28]	; 0xffffffe4
   300fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30104:	sub	r3, r2, r3
   30108:	str	r3, [fp, #-32]	; 0xffffffe0
   3010c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30110:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30114:	sub	r2, r2, r3
   30118:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3011c:	cmp	r2, r3
   30120:	beq	3012c <flatcc_builder_create_table@@Base+0x118>
   30124:	mvn	r3, #0
   30128:	b	30304 <flatcc_builder_create_table@@Base+0x2f0>
   3012c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30130:	bl	2c8d0 <main@@Base+0x1694>
   30134:	mov	r3, r0
   30138:	str	r3, [fp, #-44]	; 0xffffffd4
   3013c:	mov	r3, #0
   30140:	str	r3, [fp, #-16]
   30144:	b	301bc <flatcc_builder_create_table@@Base+0x1a8>
   30148:	ldr	r3, [fp, #-16]
   3014c:	lsl	r3, r3, #1
   30150:	ldr	r2, [fp, #4]
   30154:	add	r3, r2, r3
   30158:	ldrh	r3, [r3]
   3015c:	mov	r2, r3
   30160:	ldr	r3, [fp, #-124]	; 0xffffff84
   30164:	add	r3, r2, r3
   30168:	str	r3, [fp, #-36]	; 0xffffffdc
   3016c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30170:	ldr	r2, [r3]
   30174:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30178:	sub	r3, r2, r3
   3017c:	ldr	r2, [fp, #-16]
   30180:	lsl	r2, r2, #1
   30184:	ldr	r1, [fp, #4]
   30188:	add	r2, r1, r2
   3018c:	ldrh	r2, [r2]
   30190:	sub	r3, r3, r2
   30194:	sub	r3, r3, #4
   30198:	str	r3, [fp, #-40]	; 0xffffffd8
   3019c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   301a0:	bl	2c8d0 <main@@Base+0x1694>
   301a4:	mov	r2, r0
   301a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   301ac:	str	r2, [r3]
   301b0:	ldr	r3, [fp, #-16]
   301b4:	add	r3, r3, #1
   301b8:	str	r3, [fp, #-16]
   301bc:	ldr	r2, [fp, #-16]
   301c0:	ldr	r3, [fp, #8]
   301c4:	cmp	r2, r3
   301c8:	blt	30148 <flatcc_builder_create_table@@Base+0x134>
   301cc:	mov	r3, #0
   301d0:	str	r3, [fp, #-116]	; 0xffffff8c
   301d4:	mov	r3, #0
   301d8:	str	r3, [fp, #-112]	; 0xffffff90
   301dc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   301e0:	add	r3, r3, #4
   301e4:	str	r3, [fp, #-116]	; 0xffffff8c
   301e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   301ec:	add	r3, r3, #1
   301f0:	lsl	r3, r3, #3
   301f4:	sub	r2, fp, #12
   301f8:	add	r3, r2, r3
   301fc:	sub	r2, fp, #44	; 0x2c
   30200:	str	r2, [r3, #-104]	; 0xffffff98
   30204:	ldr	r3, [fp, #-112]	; 0xffffff90
   30208:	add	r3, r3, #1
   3020c:	lsl	r3, r3, #3
   30210:	sub	r2, fp, #12
   30214:	add	r3, r2, r3
   30218:	mov	r2, #4
   3021c:	str	r2, [r3, #-100]	; 0xffffff9c
   30220:	ldr	r3, [fp, #-112]	; 0xffffff90
   30224:	add	r3, r3, #1
   30228:	str	r3, [fp, #-112]	; 0xffffff90
   3022c:	ldr	r3, [fp, #-128]	; 0xffffff80
   30230:	cmp	r3, #0
   30234:	beq	3028c <flatcc_builder_create_table@@Base+0x278>
   30238:	ldr	r2, [fp, #-116]	; 0xffffff8c
   3023c:	ldr	r3, [fp, #-128]	; 0xffffff80
   30240:	add	r3, r2, r3
   30244:	str	r3, [fp, #-116]	; 0xffffff8c
   30248:	ldr	r3, [fp, #-112]	; 0xffffff90
   3024c:	add	r3, r3, #1
   30250:	lsl	r3, r3, #3
   30254:	sub	r2, fp, #12
   30258:	add	r3, r2, r3
   3025c:	ldr	r2, [fp, #-124]	; 0xffffff84
   30260:	str	r2, [r3, #-104]	; 0xffffff98
   30264:	ldr	r3, [fp, #-112]	; 0xffffff90
   30268:	add	r3, r3, #1
   3026c:	lsl	r3, r3, #3
   30270:	sub	r2, fp, #12
   30274:	add	r3, r2, r3
   30278:	ldr	r2, [fp, #-128]	; 0xffffff80
   3027c:	str	r2, [r3, #-100]	; 0xffffff9c
   30280:	ldr	r3, [fp, #-112]	; 0xffffff90
   30284:	add	r3, r3, #1
   30288:	str	r3, [fp, #-112]	; 0xffffff90
   3028c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30290:	cmp	r3, #0
   30294:	beq	302f0 <flatcc_builder_create_table@@Base+0x2dc>
   30298:	ldr	r2, [fp, #-116]	; 0xffffff8c
   3029c:	ldr	r3, [fp, #-20]	; 0xffffffec
   302a0:	add	r3, r2, r3
   302a4:	str	r3, [fp, #-116]	; 0xffffff8c
   302a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   302ac:	add	r3, r3, #1
   302b0:	lsl	r3, r3, #3
   302b4:	sub	r2, fp, #12
   302b8:	add	r3, r2, r3
   302bc:	ldr	r2, [pc, #112]	; 30334 <flatcc_builder_create_table@@Base+0x320>
   302c0:	ldr	r2, [r4, r2]
   302c4:	str	r2, [r3, #-104]	; 0xffffff98
   302c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   302cc:	add	r3, r3, #1
   302d0:	lsl	r3, r3, #3
   302d4:	sub	r2, fp, #12
   302d8:	add	r3, r2, r3
   302dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   302e0:	str	r2, [r3, #-100]	; 0xffffff9c
   302e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   302e8:	add	r3, r3, #1
   302ec:	str	r3, [fp, #-112]	; 0xffffff90
   302f0:	sub	r3, fp, #116	; 0x74
   302f4:	mov	r1, r3
   302f8:	ldr	r0, [fp, #-120]	; 0xffffff88
   302fc:	bl	2df94 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   30300:	mov	r3, r0
   30304:	mov	r0, r3
   30308:	sub	sp, fp, #8
   3030c:	pop	{r4, fp, pc}
   30310:	andeq	r3, r3, r4, asr #31
   30314:	andeq	r0, r2, r0, lsl lr
   30318:	ldrdeq	r0, [r0], -r5
   3031c:	andeq	r0, r2, r0, ror #14
   30320:	strdeq	r0, [r2], -r8
   30324:	andeq	r0, r2, r0, ror #27
   30328:	ldrdeq	r0, [r0], -fp
   3032c:	andeq	r0, r2, r0, lsr r7
   30330:	ldrdeq	r0, [r2], -ip
   30334:	andeq	r0, r0, r4, rrx

00030338 <flatcc_builder_check_required_field@@Base>:
   30338:	push	{fp, lr}
   3033c:	add	fp, sp, #4
   30340:	sub	sp, sp, #8
   30344:	str	r0, [fp, #-8]
   30348:	mov	r3, r1
   3034c:	strh	r3, [fp, #-10]
   30350:	ldr	r3, [fp, #-8]
   30354:	ldr	r3, [r3, #32]
   30358:	ldrh	r3, [r3, #14]
   3035c:	cmp	r3, #3
   30360:	beq	30384 <flatcc_builder_check_required_field@@Base+0x4c>
   30364:	ldr	r3, [pc, #100]	; 303d0 <flatcc_builder_check_required_field@@Base+0x98>
   30368:	add	r3, pc, r3
   3036c:	ldr	r2, [pc, #96]	; 303d4 <flatcc_builder_check_required_field@@Base+0x9c>
   30370:	ldr	r1, [pc, #96]	; 303d8 <flatcc_builder_check_required_field@@Base+0xa0>
   30374:	add	r1, pc, r1
   30378:	ldr	r0, [pc, #92]	; 303dc <flatcc_builder_check_required_field@@Base+0xa4>
   3037c:	add	r0, pc, r0
   30380:	bl	14610 <__assert_fail@plt>
   30384:	ldr	r3, [fp, #-8]
   30388:	ldrh	r3, [r3, #8]
   3038c:	ldrh	r2, [fp, #-10]
   30390:	cmp	r2, r3
   30394:	bcs	303c0 <flatcc_builder_check_required_field@@Base+0x88>
   30398:	ldr	r3, [fp, #-8]
   3039c:	ldr	r2, [r3, #4]
   303a0:	ldrh	r3, [fp, #-10]
   303a4:	lsl	r3, r3, #1
   303a8:	add	r3, r2, r3
   303ac:	ldrh	r3, [r3]
   303b0:	cmp	r3, #0
   303b4:	beq	303c0 <flatcc_builder_check_required_field@@Base+0x88>
   303b8:	mov	r3, #1
   303bc:	b	303c4 <flatcc_builder_check_required_field@@Base+0x8c>
   303c0:	mov	r3, #0
   303c4:	mov	r0, r3
   303c8:	sub	sp, fp, #4
   303cc:	pop	{fp, pc}
   303d0:	andeq	r0, r2, ip, lsl #22
   303d4:	strdeq	r0, [r0], -r8
   303d8:	andeq	r0, r2, r0, asr #8
   303dc:	strdeq	r0, [r2], -r8

000303e0 <flatcc_builder_check_union_field@@Base>:
   303e0:	push	{fp, lr}
   303e4:	add	fp, sp, #4
   303e8:	sub	sp, sp, #8
   303ec:	str	r0, [fp, #-8]
   303f0:	mov	r3, r1
   303f4:	strh	r3, [fp, #-10]
   303f8:	ldr	r3, [fp, #-8]
   303fc:	ldr	r3, [r3, #32]
   30400:	ldrh	r3, [r3, #14]
   30404:	cmp	r3, #3
   30408:	beq	3042c <flatcc_builder_check_union_field@@Base+0x4c>
   3040c:	ldr	r3, [pc, #292]	; 30538 <flatcc_builder_check_union_field@@Base+0x158>
   30410:	add	r3, pc, r3
   30414:	ldr	r2, [pc, #288]	; 3053c <flatcc_builder_check_union_field@@Base+0x15c>
   30418:	ldr	r1, [pc, #288]	; 30540 <flatcc_builder_check_union_field@@Base+0x160>
   3041c:	add	r1, pc, r1
   30420:	ldr	r0, [pc, #284]	; 30544 <flatcc_builder_check_union_field@@Base+0x164>
   30424:	add	r0, pc, r0
   30428:	bl	14610 <__assert_fail@plt>
   3042c:	ldrh	r3, [fp, #-10]
   30430:	cmp	r3, #0
   30434:	beq	3044c <flatcc_builder_check_union_field@@Base+0x6c>
   30438:	ldr	r3, [fp, #-8]
   3043c:	ldrh	r3, [r3, #8]
   30440:	ldrh	r2, [fp, #-10]
   30444:	cmp	r2, r3
   30448:	bcc	30454 <flatcc_builder_check_union_field@@Base+0x74>
   3044c:	mov	r3, #0
   30450:	b	3052c <flatcc_builder_check_union_field@@Base+0x14c>
   30454:	ldr	r3, [fp, #-8]
   30458:	ldr	r2, [r3, #4]
   3045c:	ldrh	r3, [fp, #-10]
   30460:	sub	r3, r3, #-2147483647	; 0x80000001
   30464:	lsl	r3, r3, #1
   30468:	add	r3, r2, r3
   3046c:	ldrh	r3, [r3]
   30470:	cmp	r3, #0
   30474:	bne	304a4 <flatcc_builder_check_union_field@@Base+0xc4>
   30478:	ldr	r3, [fp, #-8]
   3047c:	ldr	r2, [r3, #4]
   30480:	ldrh	r3, [fp, #-10]
   30484:	lsl	r3, r3, #1
   30488:	add	r3, r2, r3
   3048c:	ldrh	r3, [r3]
   30490:	cmp	r3, #0
   30494:	moveq	r3, #1
   30498:	movne	r3, #0
   3049c:	uxtb	r3, r3
   304a0:	b	3052c <flatcc_builder_check_union_field@@Base+0x14c>
   304a4:	ldr	r3, [fp, #-8]
   304a8:	ldr	r3, [r3, #16]
   304ac:	ldr	r2, [fp, #-8]
   304b0:	ldr	r1, [r2, #4]
   304b4:	ldrh	r2, [fp, #-10]
   304b8:	sub	r2, r2, #-2147483647	; 0x80000001
   304bc:	lsl	r2, r2, #1
   304c0:	add	r2, r1, r2
   304c4:	ldrh	r2, [r2]
   304c8:	add	r3, r3, r2
   304cc:	ldrb	r3, [r3]
   304d0:	cmp	r3, #0
   304d4:	beq	30504 <flatcc_builder_check_union_field@@Base+0x124>
   304d8:	ldr	r3, [fp, #-8]
   304dc:	ldr	r2, [r3, #4]
   304e0:	ldrh	r3, [fp, #-10]
   304e4:	lsl	r3, r3, #1
   304e8:	add	r3, r2, r3
   304ec:	ldrh	r3, [r3]
   304f0:	cmp	r3, #0
   304f4:	movne	r3, #1
   304f8:	moveq	r3, #0
   304fc:	uxtb	r3, r3
   30500:	b	3052c <flatcc_builder_check_union_field@@Base+0x14c>
   30504:	ldr	r3, [fp, #-8]
   30508:	ldr	r2, [r3, #4]
   3050c:	ldrh	r3, [fp, #-10]
   30510:	lsl	r3, r3, #1
   30514:	add	r3, r2, r3
   30518:	ldrh	r3, [r3]
   3051c:	cmp	r3, #0
   30520:	moveq	r3, #1
   30524:	movne	r3, #0
   30528:	uxtb	r3, r3
   3052c:	mov	r0, r3
   30530:	sub	sp, fp, #4
   30534:	pop	{fp, pc}
   30538:	andeq	r0, r2, r8, lsl #21
   3053c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   30540:	muleq	r2, r8, r3
   30544:	andeq	r0, r2, r0, asr r6

00030548 <flatcc_builder_check_required@@Base>:
   30548:	push	{fp, lr}
   3054c:	add	fp, sp, #4
   30550:	sub	sp, sp, #24
   30554:	str	r0, [fp, #-16]
   30558:	str	r1, [fp, #-20]	; 0xffffffec
   3055c:	str	r2, [fp, #-24]	; 0xffffffe8
   30560:	ldr	r3, [fp, #-16]
   30564:	ldr	r3, [r3, #32]
   30568:	ldrh	r3, [r3, #14]
   3056c:	cmp	r3, #3
   30570:	beq	30594 <flatcc_builder_check_required@@Base+0x4c>
   30574:	ldr	r3, [pc, #168]	; 30624 <flatcc_builder_check_required@@Base+0xdc>
   30578:	add	r3, pc, r3
   3057c:	ldr	r2, [pc, #164]	; 30628 <flatcc_builder_check_required@@Base+0xe0>
   30580:	ldr	r1, [pc, #164]	; 3062c <flatcc_builder_check_required@@Base+0xe4>
   30584:	add	r1, pc, r1
   30588:	ldr	r0, [pc, #160]	; 30630 <flatcc_builder_check_required@@Base+0xe8>
   3058c:	add	r0, pc, r0
   30590:	bl	14610 <__assert_fail@plt>
   30594:	ldr	r3, [fp, #-16]
   30598:	ldrh	r3, [r3, #8]
   3059c:	mov	r2, r3
   305a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   305a4:	cmp	r2, r3
   305a8:	bge	305b4 <flatcc_builder_check_required@@Base+0x6c>
   305ac:	mov	r3, #0
   305b0:	b	30618 <flatcc_builder_check_required@@Base+0xd0>
   305b4:	mov	r3, #0
   305b8:	str	r3, [fp, #-8]
   305bc:	b	30604 <flatcc_builder_check_required@@Base+0xbc>
   305c0:	ldr	r3, [fp, #-16]
   305c4:	ldr	r2, [r3, #4]
   305c8:	ldr	r3, [fp, #-8]
   305cc:	lsl	r3, r3, #1
   305d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   305d4:	add	r3, r1, r3
   305d8:	ldrh	r3, [r3]
   305dc:	lsl	r3, r3, #1
   305e0:	add	r3, r2, r3
   305e4:	ldrh	r3, [r3]
   305e8:	cmp	r3, #0
   305ec:	bne	305f8 <flatcc_builder_check_required@@Base+0xb0>
   305f0:	mov	r3, #0
   305f4:	b	30618 <flatcc_builder_check_required@@Base+0xd0>
   305f8:	ldr	r3, [fp, #-8]
   305fc:	add	r3, r3, #1
   30600:	str	r3, [fp, #-8]
   30604:	ldr	r2, [fp, #-8]
   30608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3060c:	cmp	r2, r3
   30610:	blt	305c0 <flatcc_builder_check_required@@Base+0x78>
   30614:	mov	r3, #1
   30618:	mov	r0, r3
   3061c:	sub	sp, fp, #4
   30620:	pop	{fp, pc}
   30624:	andeq	r0, r2, r4, asr #18
   30628:	andeq	r0, r0, r1, lsl r5
   3062c:	andeq	r0, r2, r0, lsr r2
   30630:	andeq	r0, r2, r8, ror #9

00030634 <flatcc_builder_end_table@@Base>:
   30634:	push	{fp, lr}
   30638:	add	fp, sp, #4
   3063c:	sub	sp, sp, #48	; 0x30
   30640:	str	r0, [fp, #-32]	; 0xffffffe0
   30644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30648:	ldr	r3, [r3, #32]
   3064c:	ldrh	r3, [r3, #14]
   30650:	cmp	r3, #3
   30654:	beq	30678 <flatcc_builder_end_table@@Base+0x44>
   30658:	ldr	r3, [pc, #508]	; 3085c <flatcc_builder_end_table@@Base+0x228>
   3065c:	add	r3, pc, r3
   30660:	ldr	r2, [pc, #504]	; 30860 <flatcc_builder_end_table@@Base+0x22c>
   30664:	ldr	r1, [pc, #504]	; 30864 <flatcc_builder_end_table@@Base+0x230>
   30668:	add	r1, pc, r1
   3066c:	ldr	r0, [pc, #500]	; 30868 <flatcc_builder_end_table@@Base+0x234>
   30670:	add	r0, pc, r0
   30674:	bl	14610 <__assert_fail@plt>
   30678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3067c:	ldr	r3, [r3, #4]
   30680:	sub	r3, r3, #4
   30684:	str	r3, [fp, #-8]
   30688:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3068c:	ldrh	r3, [r3, #8]
   30690:	add	r3, r3, #2
   30694:	uxth	r3, r3
   30698:	lsl	r3, r3, #1
   3069c:	strh	r3, [fp, #-10]
   306a0:	ldr	r3, [fp, #-8]
   306a4:	ldrh	r2, [fp, #-10]
   306a8:	strh	r2, [r3]
   306ac:	ldr	r3, [fp, #-8]
   306b0:	add	r3, r3, #2
   306b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   306b8:	ldr	r2, [r2, #20]
   306bc:	uxth	r2, r2
   306c0:	add	r2, r2, #4
   306c4:	uxth	r2, r2
   306c8:	strh	r2, [r3]
   306cc:	ldr	r3, [fp, #-8]
   306d0:	ldrh	r3, [r3]
   306d4:	mov	r2, r3
   306d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   306dc:	ldr	r3, [r3, #12]
   306e0:	eor	r3, r3, r2
   306e4:	ldr	r2, [pc, #384]	; 3086c <flatcc_builder_end_table@@Base+0x238>
   306e8:	mul	r3, r2, r3
   306ec:	ldr	r2, [fp, #-8]
   306f0:	add	r2, r2, #2
   306f4:	ldrh	r2, [r2]
   306f8:	eor	r3, r3, r2
   306fc:	ldr	r2, [pc, #360]	; 3086c <flatcc_builder_end_table@@Base+0x238>
   30700:	mul	r2, r2, r3
   30704:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30708:	str	r2, [r3, #12]
   3070c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30710:	ldr	r3, [r3, #12]
   30714:	ldrh	r2, [fp, #-10]
   30718:	ldr	r1, [fp, #-8]
   3071c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30720:	bl	2fd04 <flatcc_builder_create_cached_vtable@@Base>
   30724:	str	r0, [fp, #-16]
   30728:	ldr	r3, [fp, #-16]
   3072c:	cmp	r3, #0
   30730:	bne	3073c <flatcc_builder_end_table@@Base+0x108>
   30734:	mov	r3, #0
   30738:	b	30850 <flatcc_builder_end_table@@Base+0x21c>
   3073c:	ldrh	r3, [fp, #-10]
   30740:	mov	r2, r3
   30744:	mov	r1, #0
   30748:	ldr	r0, [fp, #-8]
   3074c:	bl	145bc <memset@plt>
   30750:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30754:	ldr	r2, [r3, #76]	; 0x4c
   30758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3075c:	ldr	r3, [r3, #32]
   30760:	ldr	r3, [r3, #20]
   30764:	add	r3, r2, r3
   30768:	str	r3, [fp, #-20]	; 0xffffffec
   3076c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30770:	ldr	r3, [r3]
   30774:	mov	r2, r3
   30778:	ldr	r3, [fp, #-20]	; 0xffffffec
   3077c:	sub	r3, r2, r3
   30780:	asr	r3, r3, #1
   30784:	str	r3, [fp, #-24]	; 0xffffffe8
   30788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3078c:	ldr	r1, [r3, #16]
   30790:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30794:	ldr	r2, [r3, #20]
   30798:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3079c:	ldrh	r0, [r3, #130]	; 0x82
   307a0:	ldr	r3, [fp, #-16]
   307a4:	str	r3, [sp, #8]
   307a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307ac:	str	r3, [sp, #4]
   307b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   307b4:	str	r3, [sp]
   307b8:	mov	r3, r0
   307bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   307c0:	bl	30014 <flatcc_builder_create_table@@Base>
   307c4:	str	r0, [fp, #-28]	; 0xffffffe4
   307c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   307cc:	cmp	r3, #0
   307d0:	bne	307dc <flatcc_builder_end_table@@Base+0x1a8>
   307d4:	mov	r3, #0
   307d8:	b	30850 <flatcc_builder_end_table@@Base+0x21c>
   307dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   307e0:	ldr	r3, [r3, #32]
   307e4:	ldr	r2, [r3, #24]
   307e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   307ec:	str	r2, [r3, #12]
   307f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   307f4:	ldr	r3, [r3, #32]
   307f8:	ldrh	r2, [r3, #28]
   307fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30800:	strh	r2, [r3, #8]
   30804:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30808:	ldr	r2, [r3, #52]	; 0x34
   3080c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30810:	ldr	r3, [r3, #32]
   30814:	ldr	r3, [r3, #16]
   30818:	add	r2, r2, r3
   3081c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30820:	str	r2, [r3, #4]
   30824:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30828:	ldr	r2, [r3, #76]	; 0x4c
   3082c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30830:	ldr	r3, [r3, #32]
   30834:	ldr	r3, [r3, #20]
   30838:	add	r2, r2, r3
   3083c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30840:	str	r2, [r3]
   30844:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30848:	bl	2de44 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   3084c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30850:	mov	r0, r3
   30854:	sub	sp, fp, #4
   30858:	pop	{fp, pc}
   3085c:	andeq	r0, r2, r0, lsl #17
   30860:	andeq	r0, r0, r5, lsr #10
   30864:	andeq	r0, r2, ip, asr #2
   30868:	andeq	r0, r2, r4, lsl #8
   3086c:			; <UNDEFINED> instruction: 0x9e3779b1

00030870 <flatcc_builder_create_vector@@Base>:
   30870:	push	{r4, fp, lr}
   30874:	add	fp, sp, #8
   30878:	sub	sp, sp, #108	; 0x6c
   3087c:	str	r0, [fp, #-104]	; 0xffffff98
   30880:	str	r1, [fp, #-108]	; 0xffffff94
   30884:	str	r2, [fp, #-112]	; 0xffffff90
   30888:	str	r3, [fp, #-116]	; 0xffffff8c
   3088c:	ldr	r4, [pc, #484]	; 30a78 <flatcc_builder_create_vector@@Base+0x208>
   30890:	add	r4, pc, r4
   30894:	ldr	r2, [fp, #-112]	; 0xffffff90
   30898:	ldr	r3, [fp, #8]
   3089c:	cmp	r2, r3
   308a0:	bls	308dc <flatcc_builder_create_vector@@Base+0x6c>
   308a4:	ldr	r2, [fp, #-112]	; 0xffffff90
   308a8:	ldr	r3, [fp, #8]
   308ac:	cmp	r2, r3
   308b0:	bls	308d4 <flatcc_builder_create_vector@@Base+0x64>
   308b4:	ldr	r3, [pc, #448]	; 30a7c <flatcc_builder_create_vector@@Base+0x20c>
   308b8:	add	r3, pc, r3
   308bc:	ldr	r2, [pc, #444]	; 30a80 <flatcc_builder_create_vector@@Base+0x210>
   308c0:	ldr	r1, [pc, #444]	; 30a84 <flatcc_builder_create_vector@@Base+0x214>
   308c4:	add	r1, pc, r1
   308c8:	ldr	r0, [pc, #440]	; 30a88 <flatcc_builder_create_vector@@Base+0x218>
   308cc:	add	r0, pc, r0
   308d0:	bl	14610 <__assert_fail@plt>
   308d4:	mov	r3, #0
   308d8:	b	30a6c <flatcc_builder_create_vector@@Base+0x1fc>
   308dc:	mov	r1, #4
   308e0:	add	r3, fp, #4
   308e4:	mov	r0, r3
   308e8:	bl	2d918 <flatcc_builder_clear@@Base+0xf8>
   308ec:	ldrh	r3, [fp, #4]
   308f0:	mov	r1, r3
   308f4:	ldr	r0, [fp, #-104]	; 0xffffff98
   308f8:	bl	2d8d0 <flatcc_builder_clear@@Base+0xb0>
   308fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   30900:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30904:	mul	r3, r2, r3
   30908:	str	r3, [fp, #-16]
   3090c:	ldr	r0, [fp, #-112]	; 0xffffff90
   30910:	bl	2c8d0 <main@@Base+0x1694>
   30914:	mov	r3, r0
   30918:	str	r3, [fp, #-24]	; 0xffffffe8
   3091c:	ldrh	r3, [fp, #4]
   30920:	mov	r2, r3
   30924:	ldr	r1, [fp, #-16]
   30928:	ldr	r0, [fp, #-104]	; 0xffffff98
   3092c:	bl	2df0c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   30930:	str	r0, [fp, #-20]	; 0xffffffec
   30934:	mov	r3, #0
   30938:	str	r3, [fp, #-96]	; 0xffffffa0
   3093c:	mov	r3, #0
   30940:	str	r3, [fp, #-92]	; 0xffffffa4
   30944:	ldr	r3, [fp, #-96]	; 0xffffffa0
   30948:	add	r3, r3, #4
   3094c:	str	r3, [fp, #-96]	; 0xffffffa0
   30950:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30954:	add	r3, r3, #1
   30958:	lsl	r3, r3, #3
   3095c:	sub	r2, fp, #12
   30960:	add	r3, r2, r3
   30964:	sub	r2, fp, #24
   30968:	str	r2, [r3, #-84]	; 0xffffffac
   3096c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30970:	add	r3, r3, #1
   30974:	lsl	r3, r3, #3
   30978:	sub	r2, fp, #12
   3097c:	add	r3, r2, r3
   30980:	mov	r2, #4
   30984:	str	r2, [r3, #-80]	; 0xffffffb0
   30988:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3098c:	add	r3, r3, #1
   30990:	str	r3, [fp, #-92]	; 0xffffffa4
   30994:	ldr	r3, [fp, #-16]
   30998:	cmp	r3, #0
   3099c:	beq	309f4 <flatcc_builder_create_vector@@Base+0x184>
   309a0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   309a4:	ldr	r3, [fp, #-16]
   309a8:	add	r3, r2, r3
   309ac:	str	r3, [fp, #-96]	; 0xffffffa0
   309b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   309b4:	add	r3, r3, #1
   309b8:	lsl	r3, r3, #3
   309bc:	sub	r2, fp, #12
   309c0:	add	r3, r2, r3
   309c4:	ldr	r2, [fp, #-108]	; 0xffffff94
   309c8:	str	r2, [r3, #-84]	; 0xffffffac
   309cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   309d0:	add	r3, r3, #1
   309d4:	lsl	r3, r3, #3
   309d8:	sub	r2, fp, #12
   309dc:	add	r3, r2, r3
   309e0:	ldr	r2, [fp, #-16]
   309e4:	str	r2, [r3, #-80]	; 0xffffffb0
   309e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   309ec:	add	r3, r3, #1
   309f0:	str	r3, [fp, #-92]	; 0xffffffa4
   309f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   309f8:	cmp	r3, #0
   309fc:	beq	30a58 <flatcc_builder_create_vector@@Base+0x1e8>
   30a00:	ldr	r2, [fp, #-96]	; 0xffffffa0
   30a04:	ldr	r3, [fp, #-20]	; 0xffffffec
   30a08:	add	r3, r2, r3
   30a0c:	str	r3, [fp, #-96]	; 0xffffffa0
   30a10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30a14:	add	r3, r3, #1
   30a18:	lsl	r3, r3, #3
   30a1c:	sub	r2, fp, #12
   30a20:	add	r3, r2, r3
   30a24:	ldr	r2, [pc, #96]	; 30a8c <flatcc_builder_create_vector@@Base+0x21c>
   30a28:	ldr	r2, [r4, r2]
   30a2c:	str	r2, [r3, #-84]	; 0xffffffac
   30a30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30a34:	add	r3, r3, #1
   30a38:	lsl	r3, r3, #3
   30a3c:	sub	r2, fp, #12
   30a40:	add	r3, r2, r3
   30a44:	ldr	r2, [fp, #-20]	; 0xffffffec
   30a48:	str	r2, [r3, #-80]	; 0xffffffb0
   30a4c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30a50:	add	r3, r3, #1
   30a54:	str	r3, [fp, #-92]	; 0xffffffa4
   30a58:	sub	r3, fp, #96	; 0x60
   30a5c:	mov	r1, r3
   30a60:	ldr	r0, [fp, #-104]	; 0xffffff98
   30a64:	bl	2df94 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   30a68:	mov	r3, r0
   30a6c:	mov	r0, r3
   30a70:	sub	sp, fp, #8
   30a74:	pop	{r4, fp, pc}
   30a78:	andeq	r3, r3, r8, ror #14
   30a7c:	andeq	r0, r2, r0, asr #12
   30a80:	andeq	r0, r0, r5, asr r5
   30a84:	strdeq	pc, [r1], -r0
   30a88:	ldrdeq	r0, [r2], -r4
   30a8c:	andeq	r0, r0, r4, rrx

00030a90 <flatcc_builder_end_vector@@Base>:
   30a90:	push	{fp, lr}
   30a94:	add	fp, sp, #4
   30a98:	sub	sp, sp, #24
   30a9c:	str	r0, [fp, #-16]
   30aa0:	ldr	r3, [fp, #-16]
   30aa4:	ldr	r3, [r3, #32]
   30aa8:	ldrh	r3, [r3, #14]
   30aac:	cmp	r3, #4
   30ab0:	beq	30ad4 <flatcc_builder_end_vector@@Base+0x44>
   30ab4:	ldr	r3, [pc, #148]	; 30b50 <flatcc_builder_end_vector@@Base+0xc0>
   30ab8:	add	r3, pc, r3
   30abc:	ldr	r2, [pc, #144]	; 30b54 <flatcc_builder_end_vector@@Base+0xc4>
   30ac0:	ldr	r1, [pc, #144]	; 30b58 <flatcc_builder_end_vector@@Base+0xc8>
   30ac4:	add	r1, pc, r1
   30ac8:	ldr	r0, [pc, #140]	; 30b5c <flatcc_builder_end_vector@@Base+0xcc>
   30acc:	add	r0, pc, r0
   30ad0:	bl	14610 <__assert_fail@plt>
   30ad4:	ldr	r3, [fp, #-16]
   30ad8:	ldr	r1, [r3, #16]
   30adc:	ldr	r3, [fp, #-16]
   30ae0:	ldr	r3, [r3, #32]
   30ae4:	ldr	r0, [r3, #20]
   30ae8:	ldr	r3, [fp, #-16]
   30aec:	ldr	r3, [r3, #32]
   30af0:	ldr	ip, [r3, #16]
   30af4:	ldr	r3, [fp, #-16]
   30af8:	ldrh	r3, [r3, #130]	; 0x82
   30afc:	ldr	r2, [fp, #-16]
   30b00:	ldr	r2, [r2, #32]
   30b04:	ldr	r2, [r2, #24]
   30b08:	str	r2, [sp, #4]
   30b0c:	str	r3, [sp]
   30b10:	mov	r3, ip
   30b14:	mov	r2, r0
   30b18:	ldr	r0, [fp, #-16]
   30b1c:	bl	30870 <flatcc_builder_create_vector@@Base>
   30b20:	str	r0, [fp, #-8]
   30b24:	ldr	r3, [fp, #-8]
   30b28:	cmp	r3, #0
   30b2c:	bne	30b38 <flatcc_builder_end_vector@@Base+0xa8>
   30b30:	mov	r3, #0
   30b34:	b	30b44 <flatcc_builder_end_vector@@Base+0xb4>
   30b38:	ldr	r0, [fp, #-16]
   30b3c:	bl	2de44 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   30b40:	ldr	r3, [fp, #-8]
   30b44:	mov	r0, r3
   30b48:	sub	sp, fp, #4
   30b4c:	pop	{fp, pc}
   30b50:	andeq	r0, r2, r0, ror #8
   30b54:	andeq	r0, r0, r8, ror r5
   30b58:	strdeq	pc, [r1], -r0
   30b5c:	andeq	pc, r1, ip, lsr #28

00030b60 <flatcc_builder_vector_count@@Base>:
   30b60:	push	{fp}		; (str fp, [sp, #-4]!)
   30b64:	add	fp, sp, #0
   30b68:	sub	sp, sp, #12
   30b6c:	str	r0, [fp, #-8]
   30b70:	ldr	r3, [fp, #-8]
   30b74:	ldr	r3, [r3, #32]
   30b78:	ldr	r3, [r3, #20]
   30b7c:	mov	r0, r3
   30b80:	add	sp, fp, #0
   30b84:	pop	{fp}		; (ldr fp, [sp], #4)
   30b88:	bx	lr

00030b8c <flatcc_builder_vector_edit@@Base>:
   30b8c:	push	{fp}		; (str fp, [sp, #-4]!)
   30b90:	add	fp, sp, #0
   30b94:	sub	sp, sp, #12
   30b98:	str	r0, [fp, #-8]
   30b9c:	ldr	r3, [fp, #-8]
   30ba0:	ldr	r3, [r3, #16]
   30ba4:	mov	r0, r3
   30ba8:	add	sp, fp, #0
   30bac:	pop	{fp}		; (ldr fp, [sp], #4)
   30bb0:	bx	lr
   30bb4:	push	{r4, fp, lr}
   30bb8:	add	fp, sp, #8
   30bbc:	sub	sp, sp, #116	; 0x74
   30bc0:	str	r0, [fp, #-112]	; 0xffffff90
   30bc4:	str	r1, [fp, #-116]	; 0xffffff8c
   30bc8:	str	r2, [fp, #-120]	; 0xffffff88
   30bcc:	str	r3, [fp, #-124]	; 0xffffff84
   30bd0:	ldr	r4, [pc, #748]	; 30ec4 <flatcc_builder_vector_edit@@Base+0x338>
   30bd4:	add	r4, pc, r4
   30bd8:	ldr	r3, [fp, #-120]	; 0xffffff88
   30bdc:	cmn	r3, #-1073741823	; 0xc0000001
   30be0:	bls	30bec <flatcc_builder_vector_edit@@Base+0x60>
   30be4:	mov	r3, #0
   30be8:	b	30eb8 <flatcc_builder_vector_edit@@Base+0x32c>
   30bec:	mov	r1, #4
   30bf0:	ldr	r0, [fp, #-112]	; 0xffffff90
   30bf4:	bl	2d8d0 <flatcc_builder_clear@@Base+0xb0>
   30bf8:	ldr	r3, [fp, #-120]	; 0xffffff88
   30bfc:	lsl	r3, r3, #2
   30c00:	str	r3, [fp, #-20]	; 0xffffffec
   30c04:	ldr	r0, [fp, #-120]	; 0xffffff88
   30c08:	bl	2c8d0 <main@@Base+0x1694>
   30c0c:	mov	r3, r0
   30c10:	str	r3, [fp, #-36]	; 0xffffffdc
   30c14:	mov	r2, #4
   30c18:	ldr	r1, [fp, #-20]	; 0xffffffec
   30c1c:	ldr	r0, [fp, #-112]	; 0xffffff90
   30c20:	bl	2df0c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   30c24:	str	r0, [fp, #-24]	; 0xffffffe8
   30c28:	mov	r3, #0
   30c2c:	str	r3, [fp, #-108]	; 0xffffff94
   30c30:	mov	r3, #0
   30c34:	str	r3, [fp, #-104]	; 0xffffff98
   30c38:	ldr	r3, [fp, #-108]	; 0xffffff94
   30c3c:	add	r3, r3, #4
   30c40:	str	r3, [fp, #-108]	; 0xffffff94
   30c44:	ldr	r3, [fp, #-104]	; 0xffffff98
   30c48:	add	r3, r3, #1
   30c4c:	lsl	r3, r3, #3
   30c50:	sub	r2, fp, #12
   30c54:	add	r3, r2, r3
   30c58:	sub	r2, fp, #36	; 0x24
   30c5c:	str	r2, [r3, #-96]	; 0xffffffa0
   30c60:	ldr	r3, [fp, #-104]	; 0xffffff98
   30c64:	add	r3, r3, #1
   30c68:	lsl	r3, r3, #3
   30c6c:	sub	r2, fp, #12
   30c70:	add	r3, r2, r3
   30c74:	mov	r2, #4
   30c78:	str	r2, [r3, #-92]	; 0xffffffa4
   30c7c:	ldr	r3, [fp, #-104]	; 0xffffff98
   30c80:	add	r3, r3, #1
   30c84:	str	r3, [fp, #-104]	; 0xffffff98
   30c88:	ldr	r3, [fp, #-20]	; 0xffffffec
   30c8c:	cmp	r3, #0
   30c90:	beq	30ce8 <flatcc_builder_vector_edit@@Base+0x15c>
   30c94:	ldr	r2, [fp, #-108]	; 0xffffff94
   30c98:	ldr	r3, [fp, #-20]	; 0xffffffec
   30c9c:	add	r3, r2, r3
   30ca0:	str	r3, [fp, #-108]	; 0xffffff94
   30ca4:	ldr	r3, [fp, #-104]	; 0xffffff98
   30ca8:	add	r3, r3, #1
   30cac:	lsl	r3, r3, #3
   30cb0:	sub	r2, fp, #12
   30cb4:	add	r3, r2, r3
   30cb8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30cbc:	str	r2, [r3, #-96]	; 0xffffffa0
   30cc0:	ldr	r3, [fp, #-104]	; 0xffffff98
   30cc4:	add	r3, r3, #1
   30cc8:	lsl	r3, r3, #3
   30ccc:	sub	r2, fp, #12
   30cd0:	add	r3, r2, r3
   30cd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   30cd8:	str	r2, [r3, #-92]	; 0xffffffa4
   30cdc:	ldr	r3, [fp, #-104]	; 0xffffff98
   30ce0:	add	r3, r3, #1
   30ce4:	str	r3, [fp, #-104]	; 0xffffff98
   30ce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30cec:	cmp	r3, #0
   30cf0:	beq	30d4c <flatcc_builder_vector_edit@@Base+0x1c0>
   30cf4:	ldr	r2, [fp, #-108]	; 0xffffff94
   30cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30cfc:	add	r3, r2, r3
   30d00:	str	r3, [fp, #-108]	; 0xffffff94
   30d04:	ldr	r3, [fp, #-104]	; 0xffffff98
   30d08:	add	r3, r3, #1
   30d0c:	lsl	r3, r3, #3
   30d10:	sub	r2, fp, #12
   30d14:	add	r3, r2, r3
   30d18:	ldr	r2, [pc, #424]	; 30ec8 <flatcc_builder_vector_edit@@Base+0x33c>
   30d1c:	ldr	r2, [r4, r2]
   30d20:	str	r2, [r3, #-96]	; 0xffffffa0
   30d24:	ldr	r3, [fp, #-104]	; 0xffffff98
   30d28:	add	r3, r3, #1
   30d2c:	lsl	r3, r3, #3
   30d30:	sub	r2, fp, #12
   30d34:	add	r3, r2, r3
   30d38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30d3c:	str	r2, [r3, #-92]	; 0xffffffa4
   30d40:	ldr	r3, [fp, #-104]	; 0xffffff98
   30d44:	add	r3, r3, #1
   30d48:	str	r3, [fp, #-104]	; 0xffffff98
   30d4c:	ldr	r3, [fp, #-112]	; 0xffffff90
   30d50:	ldr	r3, [r3, #136]	; 0x88
   30d54:	mov	r2, r3
   30d58:	ldr	r3, [fp, #-108]	; 0xffffff94
   30d5c:	sub	r3, r2, r3
   30d60:	str	r3, [fp, #-28]	; 0xffffffe4
   30d64:	mov	r3, #0
   30d68:	str	r3, [fp, #-16]
   30d6c:	b	30e94 <flatcc_builder_vector_edit@@Base+0x308>
   30d70:	ldr	r3, [fp, #-16]
   30d74:	lsl	r3, r3, #2
   30d78:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30d7c:	add	r3, r2, r3
   30d80:	ldr	r3, [r3]
   30d84:	cmp	r3, #0
   30d88:	beq	30e24 <flatcc_builder_vector_edit@@Base+0x298>
   30d8c:	ldr	r3, [fp, #-16]
   30d90:	lsl	r3, r3, #2
   30d94:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30d98:	add	r3, r2, r3
   30d9c:	ldr	r3, [r3]
   30da0:	mov	r2, r3
   30da4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30da8:	sub	r2, r2, r3
   30dac:	ldr	r3, [fp, #-16]
   30db0:	lsl	r3, r3, #2
   30db4:	sub	r3, r2, r3
   30db8:	sub	r3, r3, #4
   30dbc:	str	r3, [fp, #-32]	; 0xffffffe0
   30dc0:	ldr	r3, [fp, #-16]
   30dc4:	lsl	r3, r3, #2
   30dc8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   30dcc:	add	r4, r2, r3
   30dd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30dd4:	bl	2c8d0 <main@@Base+0x1694>
   30dd8:	mov	r3, r0
   30ddc:	str	r3, [r4]
   30de0:	ldr	r3, [fp, #-124]	; 0xffffff84
   30de4:	cmp	r3, #0
   30de8:	beq	30e88 <flatcc_builder_vector_edit@@Base+0x2fc>
   30dec:	ldr	r2, [fp, #-124]	; 0xffffff84
   30df0:	ldr	r3, [fp, #-16]
   30df4:	add	r3, r2, r3
   30df8:	ldrb	r3, [r3]
   30dfc:	cmp	r3, #0
   30e00:	bne	30e88 <flatcc_builder_vector_edit@@Base+0x2fc>
   30e04:	ldr	r3, [pc, #192]	; 30ecc <flatcc_builder_vector_edit@@Base+0x340>
   30e08:	add	r3, pc, r3
   30e0c:	ldr	r2, [pc, #188]	; 30ed0 <flatcc_builder_vector_edit@@Base+0x344>
   30e10:	ldr	r1, [pc, #188]	; 30ed4 <flatcc_builder_vector_edit@@Base+0x348>
   30e14:	add	r1, pc, r1
   30e18:	ldr	r0, [pc, #184]	; 30ed8 <flatcc_builder_vector_edit@@Base+0x34c>
   30e1c:	add	r0, pc, r0
   30e20:	bl	14610 <__assert_fail@plt>
   30e24:	ldr	r3, [fp, #-124]	; 0xffffff84
   30e28:	cmp	r3, #0
   30e2c:	beq	30e68 <flatcc_builder_vector_edit@@Base+0x2dc>
   30e30:	ldr	r2, [fp, #-124]	; 0xffffff84
   30e34:	ldr	r3, [fp, #-16]
   30e38:	add	r3, r2, r3
   30e3c:	ldrb	r3, [r3]
   30e40:	cmp	r3, #0
   30e44:	beq	30e88 <flatcc_builder_vector_edit@@Base+0x2fc>
   30e48:	ldr	r3, [pc, #140]	; 30edc <flatcc_builder_vector_edit@@Base+0x350>
   30e4c:	add	r3, pc, r3
   30e50:	ldr	r2, [pc, #136]	; 30ee0 <flatcc_builder_vector_edit@@Base+0x354>
   30e54:	ldr	r1, [pc, #136]	; 30ee4 <flatcc_builder_vector_edit@@Base+0x358>
   30e58:	add	r1, pc, r1
   30e5c:	ldr	r0, [pc, #132]	; 30ee8 <flatcc_builder_vector_edit@@Base+0x35c>
   30e60:	add	r0, pc, r0
   30e64:	bl	14610 <__assert_fail@plt>
   30e68:	ldr	r3, [pc, #124]	; 30eec <flatcc_builder_vector_edit@@Base+0x360>
   30e6c:	add	r3, pc, r3
   30e70:	ldr	r2, [pc, #120]	; 30ef0 <flatcc_builder_vector_edit@@Base+0x364>
   30e74:	ldr	r1, [pc, #120]	; 30ef4 <flatcc_builder_vector_edit@@Base+0x368>
   30e78:	add	r1, pc, r1
   30e7c:	ldr	r0, [pc, #116]	; 30ef8 <flatcc_builder_vector_edit@@Base+0x36c>
   30e80:	add	r0, pc, r0
   30e84:	bl	14610 <__assert_fail@plt>
   30e88:	ldr	r3, [fp, #-16]
   30e8c:	add	r3, r3, #1
   30e90:	str	r3, [fp, #-16]
   30e94:	ldr	r2, [fp, #-16]
   30e98:	ldr	r3, [fp, #-120]	; 0xffffff88
   30e9c:	cmp	r2, r3
   30ea0:	bcc	30d70 <flatcc_builder_vector_edit@@Base+0x1e4>
   30ea4:	sub	r3, fp, #108	; 0x6c
   30ea8:	mov	r1, r3
   30eac:	ldr	r0, [fp, #-112]	; 0xffffff90
   30eb0:	bl	2df94 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   30eb4:	mov	r3, r0
   30eb8:	mov	r0, r3
   30ebc:	sub	sp, fp, #8
   30ec0:	pop	{r4, fp, pc}
   30ec4:	andeq	r3, r3, r4, lsr #8
   30ec8:	andeq	r0, r0, r4, rrx
   30ecc:	andeq	r0, r2, ip, lsr #2
   30ed0:			; <UNDEFINED> instruction: 0x000005b1
   30ed4:	andeq	pc, r1, r0, lsr #19
   30ed8:	muleq	r1, r8, ip
   30edc:	andeq	r0, r2, r8, ror #1
   30ee0:			; <UNDEFINED> instruction: 0x000005b5
   30ee4:	andeq	pc, r1, ip, asr r9	; <UNPREDICTABLE>
   30ee8:	andeq	pc, r1, r4, ror #24
   30eec:	andeq	r0, r2, r8, asr #1
   30ef0:			; <UNDEFINED> instruction: 0x000005b7
   30ef4:	andeq	pc, r1, ip, lsr r9	; <UNPREDICTABLE>
   30ef8:	muleq	r1, r4, r9

00030efc <flatcc_builder_create_offset_vector_direct@@Base>:
   30efc:	push	{fp, lr}
   30f00:	add	fp, sp, #4
   30f04:	sub	sp, sp, #16
   30f08:	str	r0, [fp, #-8]
   30f0c:	str	r1, [fp, #-12]
   30f10:	str	r2, [fp, #-16]
   30f14:	mov	r3, #0
   30f18:	ldr	r2, [fp, #-16]
   30f1c:	ldr	r1, [fp, #-12]
   30f20:	ldr	r0, [fp, #-8]
   30f24:	bl	30bb4 <flatcc_builder_vector_edit@@Base+0x28>
   30f28:	mov	r3, r0
   30f2c:	mov	r0, r3
   30f30:	sub	sp, fp, #4
   30f34:	pop	{fp, pc}

00030f38 <flatcc_builder_end_offset_vector@@Base>:
   30f38:	push	{fp, lr}
   30f3c:	add	fp, sp, #4
   30f40:	sub	sp, sp, #16
   30f44:	str	r0, [fp, #-16]
   30f48:	ldr	r3, [fp, #-16]
   30f4c:	ldr	r3, [r3, #32]
   30f50:	ldrh	r3, [r3, #14]
   30f54:	cmp	r3, #5
   30f58:	beq	30f7c <flatcc_builder_end_offset_vector@@Base+0x44>
   30f5c:	ldr	r3, [pc, #104]	; 30fcc <flatcc_builder_end_offset_vector@@Base+0x94>
   30f60:	add	r3, pc, r3
   30f64:	ldr	r2, [pc, #100]	; 30fd0 <flatcc_builder_end_offset_vector@@Base+0x98>
   30f68:	ldr	r1, [pc, #100]	; 30fd4 <flatcc_builder_end_offset_vector@@Base+0x9c>
   30f6c:	add	r1, pc, r1
   30f70:	ldr	r0, [pc, #96]	; 30fd8 <flatcc_builder_end_offset_vector@@Base+0xa0>
   30f74:	add	r0, pc, r0
   30f78:	bl	14610 <__assert_fail@plt>
   30f7c:	ldr	r3, [fp, #-16]
   30f80:	ldr	r1, [r3, #16]
   30f84:	ldr	r3, [fp, #-16]
   30f88:	ldr	r3, [r3, #32]
   30f8c:	ldr	r3, [r3, #20]
   30f90:	mov	r2, r3
   30f94:	ldr	r0, [fp, #-16]
   30f98:	bl	30efc <flatcc_builder_create_offset_vector_direct@@Base>
   30f9c:	str	r0, [fp, #-8]
   30fa0:	ldr	r3, [fp, #-8]
   30fa4:	cmp	r3, #0
   30fa8:	bne	30fb4 <flatcc_builder_end_offset_vector@@Base+0x7c>
   30fac:	mov	r3, #0
   30fb0:	b	30fc0 <flatcc_builder_end_offset_vector@@Base+0x88>
   30fb4:	ldr	r0, [fp, #-16]
   30fb8:	bl	2de44 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   30fbc:	ldr	r3, [fp, #-8]
   30fc0:	mov	r0, r3
   30fc4:	sub	sp, fp, #4
   30fc8:	pop	{fp, pc}
   30fcc:	strdeq	pc, [r1], -r4
   30fd0:	andeq	r0, r0, r8, asr #11
   30fd4:	andeq	pc, r1, r8, asr #16
   30fd8:	strdeq	pc, [r1], -r0

00030fdc <flatcc_builder_end_offset_vector_for_unions@@Base>:
   30fdc:	push	{fp, lr}
   30fe0:	add	fp, sp, #4
   30fe4:	sub	sp, sp, #16
   30fe8:	str	r0, [fp, #-16]
   30fec:	str	r1, [fp, #-20]	; 0xffffffec
   30ff0:	ldr	r3, [fp, #-16]
   30ff4:	ldr	r3, [r3, #32]
   30ff8:	ldrh	r3, [r3, #14]
   30ffc:	cmp	r3, #5
   31000:	beq	31024 <flatcc_builder_end_offset_vector_for_unions@@Base+0x48>
   31004:	ldr	r3, [pc, #104]	; 31074 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
   31008:	add	r3, pc, r3
   3100c:	ldr	r2, [pc, #100]	; 31078 <flatcc_builder_end_offset_vector_for_unions@@Base+0x9c>
   31010:	ldr	r1, [pc, #100]	; 3107c <flatcc_builder_end_offset_vector_for_unions@@Base+0xa0>
   31014:	add	r1, pc, r1
   31018:	ldr	r0, [pc, #96]	; 31080 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   3101c:	add	r0, pc, r0
   31020:	bl	14610 <__assert_fail@plt>
   31024:	ldr	r3, [fp, #-16]
   31028:	ldr	r1, [r3, #16]
   3102c:	ldr	r3, [fp, #-16]
   31030:	ldr	r3, [r3, #32]
   31034:	ldr	r2, [r3, #20]
   31038:	ldr	r3, [fp, #-20]	; 0xffffffec
   3103c:	ldr	r0, [fp, #-16]
   31040:	bl	30bb4 <flatcc_builder_vector_edit@@Base+0x28>
   31044:	str	r0, [fp, #-8]
   31048:	ldr	r3, [fp, #-8]
   3104c:	cmp	r3, #0
   31050:	bne	3105c <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
   31054:	mov	r3, #0
   31058:	b	31068 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8c>
   3105c:	ldr	r0, [fp, #-16]
   31060:	bl	2de44 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   31064:	ldr	r3, [fp, #-8]
   31068:	mov	r0, r3
   3106c:	sub	sp, fp, #4
   31070:	pop	{fp, pc}
   31074:	andeq	pc, r1, r0, ror pc	; <UNPREDICTABLE>
   31078:	ldrdeq	r0, [r0], -r5
   3107c:	andeq	pc, r1, r0, lsr #15
   31080:	andeq	pc, r1, r8, asr #18

00031084 <flatcc_builder_offset_vector_edit@@Base>:
   31084:	push	{fp}		; (str fp, [sp, #-4]!)
   31088:	add	fp, sp, #0
   3108c:	sub	sp, sp, #12
   31090:	str	r0, [fp, #-8]
   31094:	ldr	r3, [fp, #-8]
   31098:	ldr	r3, [r3, #16]
   3109c:	mov	r0, r3
   310a0:	add	sp, fp, #0
   310a4:	pop	{fp}		; (ldr fp, [sp], #4)
   310a8:	bx	lr

000310ac <flatcc_builder_offset_vector_count@@Base>:
   310ac:	push	{fp}		; (str fp, [sp, #-4]!)
   310b0:	add	fp, sp, #0
   310b4:	sub	sp, sp, #12
   310b8:	str	r0, [fp, #-8]
   310bc:	ldr	r3, [fp, #-8]
   310c0:	ldr	r3, [r3, #32]
   310c4:	ldr	r3, [r3, #20]
   310c8:	mov	r0, r3
   310cc:	add	sp, fp, #0
   310d0:	pop	{fp}		; (ldr fp, [sp], #4)
   310d4:	bx	lr

000310d8 <flatcc_builder_table_add_union@@Base>:
   310d8:	push	{fp, lr}
   310dc:	add	fp, sp, #4
   310e0:	sub	sp, sp, #24
   310e4:	str	r0, [fp, #-16]
   310e8:	str	r1, [fp, #-20]	; 0xffffffec
   310ec:	sub	r1, fp, #28
   310f0:	stm	r1, {r2, r3}
   310f4:	ldr	r3, [fp, #-16]
   310f8:	ldr	r3, [r3, #32]
   310fc:	ldrh	r3, [r3, #14]
   31100:	cmp	r3, #3
   31104:	beq	31128 <flatcc_builder_table_add_union@@Base+0x50>
   31108:	ldr	r3, [pc, #352]	; 31270 <flatcc_builder_table_add_union@@Base+0x198>
   3110c:	add	r3, pc, r3
   31110:	ldr	r2, [pc, #348]	; 31274 <flatcc_builder_table_add_union@@Base+0x19c>
   31114:	ldr	r1, [pc, #348]	; 31278 <flatcc_builder_table_add_union@@Base+0x1a0>
   31118:	add	r1, pc, r1
   3111c:	ldr	r0, [pc, #344]	; 3127c <flatcc_builder_table_add_union@@Base+0x1a4>
   31120:	add	r0, pc, r0
   31124:	bl	14610 <__assert_fail@plt>
   31128:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   3112c:	cmp	r3, #0
   31130:	bne	31180 <flatcc_builder_table_add_union@@Base+0xa8>
   31134:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31138:	cmp	r3, #0
   3113c:	beq	31180 <flatcc_builder_table_add_union@@Base+0xa8>
   31140:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   31144:	cmp	r3, #0
   31148:	bne	31178 <flatcc_builder_table_add_union@@Base+0xa0>
   3114c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31150:	cmp	r3, #0
   31154:	beq	31178 <flatcc_builder_table_add_union@@Base+0xa0>
   31158:	ldr	r3, [pc, #288]	; 31280 <flatcc_builder_table_add_union@@Base+0x1a8>
   3115c:	add	r3, pc, r3
   31160:	ldr	r2, [pc, #284]	; 31284 <flatcc_builder_table_add_union@@Base+0x1ac>
   31164:	ldr	r1, [pc, #284]	; 31288 <flatcc_builder_table_add_union@@Base+0x1b0>
   31168:	add	r1, pc, r1
   3116c:	ldr	r0, [pc, #280]	; 3128c <flatcc_builder_table_add_union@@Base+0x1b4>
   31170:	add	r0, pc, r0
   31174:	bl	14610 <__assert_fail@plt>
   31178:	mvn	r3, #0
   3117c:	b	31264 <flatcc_builder_table_add_union@@Base+0x18c>
   31180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31184:	cmp	r3, #0
   31188:	beq	311e8 <flatcc_builder_table_add_union@@Base+0x110>
   3118c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31190:	ldr	r0, [fp, #-16]
   31194:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   31198:	str	r0, [fp, #-8]
   3119c:	ldr	r3, [fp, #-8]
   311a0:	cmp	r3, #0
   311a4:	bne	311dc <flatcc_builder_table_add_union@@Base+0x104>
   311a8:	ldr	r3, [fp, #-8]
   311ac:	cmp	r3, #0
   311b0:	bne	311d4 <flatcc_builder_table_add_union@@Base+0xfc>
   311b4:	ldr	r3, [pc, #212]	; 31290 <flatcc_builder_table_add_union@@Base+0x1b8>
   311b8:	add	r3, pc, r3
   311bc:	ldr	r2, [pc, #208]	; 31294 <flatcc_builder_table_add_union@@Base+0x1bc>
   311c0:	ldr	r1, [pc, #208]	; 31298 <flatcc_builder_table_add_union@@Base+0x1c0>
   311c4:	add	r1, pc, r1
   311c8:	ldr	r0, [pc, #204]	; 3129c <flatcc_builder_table_add_union@@Base+0x1c4>
   311cc:	add	r0, pc, r0
   311d0:	bl	14610 <__assert_fail@plt>
   311d4:	mvn	r3, #0
   311d8:	b	31264 <flatcc_builder_table_add_union@@Base+0x18c>
   311dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   311e0:	ldr	r3, [fp, #-8]
   311e4:	str	r2, [r3]
   311e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   311ec:	sub	r1, r3, #1
   311f0:	mov	r3, #1
   311f4:	mov	r2, #1
   311f8:	ldr	r0, [fp, #-16]
   311fc:	bl	31fc4 <flatcc_builder_table_add@@Base>
   31200:	str	r0, [fp, #-12]
   31204:	ldr	r3, [fp, #-12]
   31208:	cmp	r3, #0
   3120c:	bne	31244 <flatcc_builder_table_add_union@@Base+0x16c>
   31210:	ldr	r3, [fp, #-12]
   31214:	cmp	r3, #0
   31218:	bne	3123c <flatcc_builder_table_add_union@@Base+0x164>
   3121c:	ldr	r3, [pc, #124]	; 312a0 <flatcc_builder_table_add_union@@Base+0x1c8>
   31220:	add	r3, pc, r3
   31224:	ldr	r2, [pc, #120]	; 312a4 <flatcc_builder_table_add_union@@Base+0x1cc>
   31228:	ldr	r1, [pc, #120]	; 312a8 <flatcc_builder_table_add_union@@Base+0x1d0>
   3122c:	add	r1, pc, r1
   31230:	ldr	r0, [pc, #116]	; 312ac <flatcc_builder_table_add_union@@Base+0x1d4>
   31234:	add	r0, pc, r0
   31238:	bl	14610 <__assert_fail@plt>
   3123c:	mvn	r3, #0
   31240:	b	31264 <flatcc_builder_table_add_union@@Base+0x18c>
   31244:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   31248:	mov	r0, r3
   3124c:	bl	2c8f4 <main@@Base+0x16b8>
   31250:	mov	r3, r0
   31254:	mov	r2, r3
   31258:	ldr	r3, [fp, #-12]
   3125c:	strb	r2, [r3]
   31260:	mov	r3, #0
   31264:	mov	r0, r3
   31268:	sub	sp, fp, #4
   3126c:	pop	{fp, pc}
   31270:	muleq	r1, r8, lr
   31274:	andeq	r0, r0, lr, ror #11
   31278:	muleq	r1, ip, r6
   3127c:	andeq	pc, r1, r4, asr r9	; <UNPREDICTABLE>
   31280:	andeq	pc, r1, r8, asr #28
   31284:	andeq	r0, r0, pc, ror #11
   31288:	andeq	pc, r1, ip, asr #12
   3128c:	andeq	pc, r1, r4, ror #18
   31290:	andeq	pc, r1, ip, ror #27
   31294:	strdeq	r0, [r0], -r2
   31298:	strdeq	pc, [r1], -r0
   3129c:	andeq	pc, r1, ip, lsr #18
   312a0:	andeq	pc, r1, r4, lsl #27
   312a4:	strdeq	r0, [r0], -r6
   312a8:	andeq	pc, r1, r8, lsl #11
   312ac:	ldrdeq	pc, [r1], -r0

000312b0 <flatcc_builder_table_add_union_vector@@Base>:
   312b0:	push	{fp, lr}
   312b4:	add	fp, sp, #4
   312b8:	sub	sp, sp, #24
   312bc:	str	r0, [fp, #-16]
   312c0:	str	r1, [fp, #-20]	; 0xffffffec
   312c4:	sub	r1, fp, #28
   312c8:	stm	r1, {r2, r3}
   312cc:	ldr	r3, [fp, #-16]
   312d0:	ldr	r3, [r3, #32]
   312d4:	ldrh	r3, [r3, #14]
   312d8:	cmp	r3, #3
   312dc:	beq	31300 <flatcc_builder_table_add_union_vector@@Base+0x50>
   312e0:	ldr	r3, [pc, #396]	; 31474 <flatcc_builder_table_add_union_vector@@Base+0x1c4>
   312e4:	add	r3, pc, r3
   312e8:	mov	r2, #1536	; 0x600
   312ec:	ldr	r1, [pc, #388]	; 31478 <flatcc_builder_table_add_union_vector@@Base+0x1c8>
   312f0:	add	r1, pc, r1
   312f4:	ldr	r0, [pc, #384]	; 3147c <flatcc_builder_table_add_union_vector@@Base+0x1cc>
   312f8:	add	r0, pc, r0
   312fc:	bl	14610 <__assert_fail@plt>
   31300:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31304:	cmp	r3, #0
   31308:	moveq	r3, #1
   3130c:	movne	r3, #0
   31310:	uxtb	r2, r3
   31314:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31318:	cmp	r3, #0
   3131c:	moveq	r3, #1
   31320:	movne	r3, #0
   31324:	uxtb	r3, r3
   31328:	eor	r3, r3, r2
   3132c:	uxtb	r3, r3
   31330:	cmp	r3, #0
   31334:	beq	31398 <flatcc_builder_table_add_union_vector@@Base+0xe8>
   31338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3133c:	cmp	r3, #0
   31340:	movne	r3, #1
   31344:	moveq	r3, #0
   31348:	uxtb	r2, r3
   3134c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31350:	cmp	r3, #0
   31354:	moveq	r3, #1
   31358:	movne	r3, #0
   3135c:	uxtb	r3, r3
   31360:	eor	r3, r3, r2
   31364:	uxtb	r3, r3
   31368:	cmp	r3, #0
   3136c:	bne	31390 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   31370:	ldr	r3, [pc, #264]	; 31480 <flatcc_builder_table_add_union_vector@@Base+0x1d0>
   31374:	add	r3, pc, r3
   31378:	ldr	r2, [pc, #260]	; 31484 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   3137c:	ldr	r1, [pc, #260]	; 31488 <flatcc_builder_table_add_union_vector@@Base+0x1d8>
   31380:	add	r1, pc, r1
   31384:	ldr	r0, [pc, #256]	; 3148c <flatcc_builder_table_add_union_vector@@Base+0x1dc>
   31388:	add	r0, pc, r0
   3138c:	bl	14610 <__assert_fail@plt>
   31390:	mvn	r3, #0
   31394:	b	31468 <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   31398:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3139c:	cmp	r3, #0
   313a0:	beq	31464 <flatcc_builder_table_add_union_vector@@Base+0x1b4>
   313a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   313a8:	sub	r3, r3, #1
   313ac:	mov	r1, r3
   313b0:	ldr	r0, [fp, #-16]
   313b4:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   313b8:	str	r0, [fp, #-8]
   313bc:	ldr	r3, [fp, #-8]
   313c0:	cmp	r3, #0
   313c4:	bne	313fc <flatcc_builder_table_add_union_vector@@Base+0x14c>
   313c8:	ldr	r3, [fp, #-8]
   313cc:	cmp	r3, #0
   313d0:	bne	313f4 <flatcc_builder_table_add_union_vector@@Base+0x144>
   313d4:	ldr	r3, [pc, #180]	; 31490 <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   313d8:	add	r3, pc, r3
   313dc:	ldr	r2, [pc, #176]	; 31494 <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   313e0:	ldr	r1, [pc, #176]	; 31498 <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   313e4:	add	r1, pc, r1
   313e8:	ldr	r0, [pc, #172]	; 3149c <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   313ec:	add	r0, pc, r0
   313f0:	bl	14610 <__assert_fail@plt>
   313f4:	mvn	r3, #0
   313f8:	b	31468 <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   313fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31400:	ldr	r3, [fp, #-8]
   31404:	str	r2, [r3]
   31408:	ldr	r1, [fp, #-20]	; 0xffffffec
   3140c:	ldr	r0, [fp, #-16]
   31410:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   31414:	str	r0, [fp, #-8]
   31418:	ldr	r3, [fp, #-8]
   3141c:	cmp	r3, #0
   31420:	bne	31458 <flatcc_builder_table_add_union_vector@@Base+0x1a8>
   31424:	ldr	r3, [fp, #-8]
   31428:	cmp	r3, #0
   3142c:	bne	31450 <flatcc_builder_table_add_union_vector@@Base+0x1a0>
   31430:	ldr	r3, [pc, #104]	; 314a0 <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   31434:	add	r3, pc, r3
   31438:	ldr	r2, [pc, #100]	; 314a4 <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   3143c:	ldr	r1, [pc, #100]	; 314a8 <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   31440:	add	r1, pc, r1
   31444:	ldr	r0, [pc, #96]	; 314ac <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   31448:	add	r0, pc, r0
   3144c:	bl	14610 <__assert_fail@plt>
   31450:	mvn	r3, #0
   31454:	b	31468 <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   31458:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3145c:	ldr	r3, [fp, #-8]
   31460:	str	r2, [r3]
   31464:	mov	r3, #0
   31468:	mov	r0, r3
   3146c:	sub	sp, fp, #4
   31470:	pop	{fp, pc}
   31474:	andeq	pc, r1, r0, ror #25
   31478:	andeq	pc, r1, r4, asr #9
   3147c:	andeq	pc, r1, ip, ror r7	; <UNPREDICTABLE>
   31480:	andeq	pc, r1, r0, asr ip	; <UNPREDICTABLE>
   31484:	andeq	r0, r0, r1, lsl #12
   31488:	andeq	pc, r1, r4, lsr r4	; <UNPREDICTABLE>
   3148c:	andeq	pc, r1, r8, lsl #15
   31490:	andeq	pc, r1, ip, ror #23
   31494:	andeq	r0, r0, r4, lsl #12
   31498:	ldrdeq	pc, [r1], -r0
   3149c:	andeq	pc, r1, ip, lsl #14
   314a0:	muleq	r1, r0, fp
   314a4:	andeq	r0, r0, r8, lsl #12
   314a8:	andeq	pc, r1, r4, ror r3	; <UNPREDICTABLE>
   314ac:			; <UNDEFINED> instruction: 0x0001f6b0

000314b0 <flatcc_builder_create_union_vector@@Base>:
   314b0:	push	{fp, lr}
   314b4:	add	fp, sp, #4
   314b8:	sub	sp, sp, #48	; 0x30
   314bc:	str	r0, [fp, #-32]	; 0xffffffe0
   314c0:	str	r1, [fp, #-36]	; 0xffffffdc
   314c4:	str	r2, [fp, #-40]	; 0xffffffd8
   314c8:	str	r3, [fp, #-44]	; 0xffffffd4
   314cc:	mov	r3, #0
   314d0:	str	r3, [fp, #-24]	; 0xffffffe8
   314d4:	mov	r3, #0
   314d8:	str	r3, [fp, #-20]	; 0xffffffec
   314dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   314e0:	bl	2f8e4 <flatcc_builder_start_offset_vector@@Base>
   314e4:	mov	r3, r0
   314e8:	cmp	r3, #0
   314ec:	beq	31508 <flatcc_builder_create_union_vector@@Base+0x58>
   314f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   314f4:	mov	r2, r3
   314f8:	sub	r3, fp, #24
   314fc:	ldm	r3, {r0, r1}
   31500:	stm	r2, {r0, r1}
   31504:	b	31624 <flatcc_builder_create_union_vector@@Base+0x174>
   31508:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3150c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31510:	bl	2f190 <flatcc_builder_extend_offset_vector@@Base>
   31514:	mov	r3, r0
   31518:	cmp	r3, #0
   3151c:	bne	31538 <flatcc_builder_create_union_vector@@Base+0x88>
   31520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31524:	mov	r2, r3
   31528:	sub	r3, fp, #24
   3152c:	ldm	r3, {r0, r1}
   31530:	stm	r2, {r0, r1}
   31534:	b	31624 <flatcc_builder_create_union_vector@@Base+0x174>
   31538:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3153c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31540:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   31544:	str	r0, [fp, #-12]
   31548:	ldr	r3, [fp, #-12]
   3154c:	cmp	r3, #0
   31550:	bne	3156c <flatcc_builder_create_union_vector@@Base+0xbc>
   31554:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31558:	mov	r2, r3
   3155c:	sub	r3, fp, #24
   31560:	ldm	r3, {r0, r1}
   31564:	stm	r2, {r0, r1}
   31568:	b	31624 <flatcc_builder_create_union_vector@@Base+0x174>
   3156c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31570:	bl	31084 <flatcc_builder_offset_vector_edit@@Base>
   31574:	str	r0, [fp, #-16]
   31578:	mov	r3, #0
   3157c:	str	r3, [fp, #-8]
   31580:	b	315dc <flatcc_builder_create_union_vector@@Base+0x12c>
   31584:	ldr	r2, [fp, #-12]
   31588:	ldr	r3, [fp, #-8]
   3158c:	add	r3, r2, r3
   31590:	ldr	r2, [fp, #-8]
   31594:	lsl	r2, r2, #3
   31598:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3159c:	add	r2, r1, r2
   315a0:	ldrb	r2, [r2]
   315a4:	strb	r2, [r3]
   315a8:	ldr	r3, [fp, #-8]
   315ac:	lsl	r3, r3, #2
   315b0:	ldr	r2, [fp, #-16]
   315b4:	add	r3, r2, r3
   315b8:	ldr	r2, [fp, #-8]
   315bc:	lsl	r2, r2, #3
   315c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   315c4:	add	r2, r1, r2
   315c8:	ldr	r2, [r2, #4]
   315cc:	str	r2, [r3]
   315d0:	ldr	r3, [fp, #-8]
   315d4:	add	r3, r3, #1
   315d8:	str	r3, [fp, #-8]
   315dc:	ldr	r2, [fp, #-8]
   315e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   315e4:	cmp	r2, r3
   315e8:	bcc	31584 <flatcc_builder_create_union_vector@@Base+0xd4>
   315ec:	sub	r0, fp, #24
   315f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   315f4:	str	r3, [sp]
   315f8:	ldr	r3, [fp, #-16]
   315fc:	ldr	r2, [fp, #-12]
   31600:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31604:	bl	31630 <flatcc_builder_create_union_vector_direct@@Base>
   31608:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3160c:	bl	2de44 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   31610:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31614:	mov	r2, r3
   31618:	sub	r3, fp, #24
   3161c:	ldm	r3, {r0, r1}
   31620:	stm	r2, {r0, r1}
   31624:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31628:	sub	sp, fp, #4
   3162c:	pop	{fp, pc}

00031630 <flatcc_builder_create_union_vector_direct@@Base>:
   31630:	push	{fp, lr}
   31634:	add	fp, sp, #4
   31638:	sub	sp, sp, #32
   3163c:	str	r0, [fp, #-16]
   31640:	str	r1, [fp, #-20]	; 0xffffffec
   31644:	str	r2, [fp, #-24]	; 0xffffffe8
   31648:	str	r3, [fp, #-28]	; 0xffffffe4
   3164c:	mov	r3, #0
   31650:	str	r3, [fp, #-12]
   31654:	mov	r3, #0
   31658:	str	r3, [fp, #-8]
   3165c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31660:	ldr	r2, [fp, #4]
   31664:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31668:	ldr	r0, [fp, #-20]	; 0xffffffec
   3166c:	bl	30bb4 <flatcc_builder_vector_edit@@Base+0x28>
   31670:	mov	r3, r0
   31674:	str	r3, [fp, #-8]
   31678:	ldr	r3, [fp, #-8]
   3167c:	cmp	r3, #0
   31680:	bne	3169c <flatcc_builder_create_union_vector_direct@@Base+0x6c>
   31684:	ldr	r3, [fp, #-16]
   31688:	mov	r2, r3
   3168c:	sub	r3, fp, #12
   31690:	ldm	r3, {r0, r1}
   31694:	stm	r2, {r0, r1}
   31698:	b	31700 <flatcc_builder_create_union_vector_direct@@Base+0xd0>
   3169c:	mvn	r3, #0
   316a0:	str	r3, [sp, #4]
   316a4:	mov	r3, #1
   316a8:	str	r3, [sp]
   316ac:	mov	r3, #1
   316b0:	ldr	r2, [fp, #4]
   316b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   316b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   316bc:	bl	30870 <flatcc_builder_create_vector@@Base>
   316c0:	mov	r3, r0
   316c4:	str	r3, [fp, #-12]
   316c8:	ldr	r3, [fp, #-12]
   316cc:	cmp	r3, #0
   316d0:	bne	316ec <flatcc_builder_create_union_vector_direct@@Base+0xbc>
   316d4:	ldr	r3, [fp, #-16]
   316d8:	mov	r2, r3
   316dc:	sub	r3, fp, #12
   316e0:	ldm	r3, {r0, r1}
   316e4:	stm	r2, {r0, r1}
   316e8:	b	31700 <flatcc_builder_create_union_vector_direct@@Base+0xd0>
   316ec:	ldr	r3, [fp, #-16]
   316f0:	mov	r2, r3
   316f4:	sub	r3, fp, #12
   316f8:	ldm	r3, {r0, r1}
   316fc:	stm	r2, {r0, r1}
   31700:	ldr	r0, [fp, #-16]
   31704:	sub	sp, fp, #4
   31708:	pop	{fp, pc}

0003170c <flatcc_builder_start_union_vector@@Base>:
   3170c:	push	{fp, lr}
   31710:	add	fp, sp, #4
   31714:	sub	sp, sp, #8
   31718:	str	r0, [fp, #-8]
   3171c:	mov	r1, #4
   31720:	ldr	r0, [fp, #-8]
   31724:	bl	2dc64 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   31728:	mov	r3, r0
   3172c:	cmp	r3, #0
   31730:	beq	3173c <flatcc_builder_start_union_vector@@Base+0x30>
   31734:	mvn	r3, #0
   31738:	b	3177c <flatcc_builder_start_union_vector@@Base+0x70>
   3173c:	ldr	r3, [fp, #-8]
   31740:	ldr	r3, [r3, #32]
   31744:	mov	r2, #8
   31748:	str	r2, [r3, #16]
   3174c:	ldr	r3, [fp, #-8]
   31750:	ldr	r3, [r3, #32]
   31754:	mov	r2, #0
   31758:	str	r2, [r3, #20]
   3175c:	ldr	r3, [fp, #-8]
   31760:	ldr	r3, [r3, #32]
   31764:	mov	r2, #7
   31768:	strh	r2, [r3, #14]
   3176c:	mvn	r1, #3
   31770:	ldr	r0, [fp, #-8]
   31774:	bl	2cbdc <flatcc_builder_default_alloc@@Base+0x1c8>
   31778:	mov	r3, #0
   3177c:	mov	r0, r3
   31780:	sub	sp, fp, #4
   31784:	pop	{fp, pc}

00031788 <flatcc_builder_end_union_vector@@Base>:
   31788:	push	{fp, lr}
   3178c:	add	fp, sp, #4
   31790:	sub	sp, sp, #48	; 0x30
   31794:	str	r0, [fp, #-40]	; 0xffffffd8
   31798:	str	r1, [fp, #-44]	; 0xffffffd4
   3179c:	mov	r3, #0
   317a0:	str	r3, [fp, #-32]	; 0xffffffe0
   317a4:	mov	r3, #0
   317a8:	str	r3, [fp, #-28]	; 0xffffffe4
   317ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   317b0:	ldr	r3, [r3, #32]
   317b4:	ldrh	r3, [r3, #14]
   317b8:	cmp	r3, #7
   317bc:	beq	317e0 <flatcc_builder_end_union_vector@@Base+0x58>
   317c0:	ldr	r3, [pc, #320]	; 31908 <flatcc_builder_end_union_vector@@Base+0x180>
   317c4:	add	r3, pc, r3
   317c8:	ldr	r2, [pc, #316]	; 3190c <flatcc_builder_end_union_vector@@Base+0x184>
   317cc:	ldr	r1, [pc, #316]	; 31910 <flatcc_builder_end_union_vector@@Base+0x188>
   317d0:	add	r1, pc, r1
   317d4:	ldr	r0, [pc, #312]	; 31914 <flatcc_builder_end_union_vector@@Base+0x18c>
   317d8:	add	r0, pc, r0
   317dc:	bl	14610 <__assert_fail@plt>
   317e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   317e4:	bl	31940 <flatcc_builder_union_vector_count@@Base>
   317e8:	str	r0, [fp, #-12]
   317ec:	ldr	r2, [fp, #-12]
   317f0:	mov	r3, r2
   317f4:	lsl	r3, r3, #2
   317f8:	add	r3, r3, r2
   317fc:	mov	r1, r3
   31800:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31804:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   31808:	str	r0, [fp, #-16]
   3180c:	ldr	r3, [fp, #-16]
   31810:	cmp	r3, #0
   31814:	bne	31830 <flatcc_builder_end_union_vector@@Base+0xa8>
   31818:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3181c:	mov	r2, r3
   31820:	sub	r3, fp, #32
   31824:	ldm	r3, {r0, r1}
   31828:	stm	r2, {r0, r1}
   3182c:	b	318fc <flatcc_builder_end_union_vector@@Base+0x174>
   31830:	ldr	r3, [fp, #-12]
   31834:	lsl	r3, r3, #2
   31838:	ldr	r2, [fp, #-16]
   3183c:	add	r3, r2, r3
   31840:	str	r3, [fp, #-20]	; 0xffffffec
   31844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31848:	bl	31918 <flatcc_builder_union_vector_edit@@Base>
   3184c:	str	r0, [fp, #-24]	; 0xffffffe8
   31850:	mov	r3, #0
   31854:	str	r3, [fp, #-8]
   31858:	b	318b4 <flatcc_builder_end_union_vector@@Base+0x12c>
   3185c:	ldr	r2, [fp, #-20]	; 0xffffffec
   31860:	ldr	r3, [fp, #-8]
   31864:	add	r3, r2, r3
   31868:	ldr	r2, [fp, #-8]
   3186c:	lsl	r2, r2, #3
   31870:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31874:	add	r2, r1, r2
   31878:	ldrb	r2, [r2]
   3187c:	strb	r2, [r3]
   31880:	ldr	r3, [fp, #-8]
   31884:	lsl	r3, r3, #2
   31888:	ldr	r2, [fp, #-16]
   3188c:	add	r3, r2, r3
   31890:	ldr	r2, [fp, #-8]
   31894:	lsl	r2, r2, #3
   31898:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3189c:	add	r2, r1, r2
   318a0:	ldr	r2, [r2, #4]
   318a4:	str	r2, [r3]
   318a8:	ldr	r3, [fp, #-8]
   318ac:	add	r3, r3, #1
   318b0:	str	r3, [fp, #-8]
   318b4:	ldr	r2, [fp, #-8]
   318b8:	ldr	r3, [fp, #-12]
   318bc:	cmp	r2, r3
   318c0:	bcc	3185c <flatcc_builder_end_union_vector@@Base+0xd4>
   318c4:	sub	r0, fp, #32
   318c8:	ldr	r3, [fp, #-12]
   318cc:	str	r3, [sp]
   318d0:	ldr	r3, [fp, #-16]
   318d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   318d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   318dc:	bl	31630 <flatcc_builder_create_union_vector_direct@@Base>
   318e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   318e4:	bl	2de44 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   318e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   318ec:	mov	r2, r3
   318f0:	sub	r3, fp, #32
   318f4:	ldm	r3, {r0, r1}
   318f8:	stm	r2, {r0, r1}
   318fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31900:	sub	sp, fp, #4
   31904:	pop	{fp, pc}
   31908:	andeq	pc, r1, r8, lsr #16
   3190c:	andeq	r0, r0, r1, asr r6
   31910:	andeq	lr, r1, r4, ror #31
   31914:	andeq	pc, r1, r0, ror #6

00031918 <flatcc_builder_union_vector_edit@@Base>:
   31918:	push	{fp}		; (str fp, [sp, #-4]!)
   3191c:	add	fp, sp, #0
   31920:	sub	sp, sp, #12
   31924:	str	r0, [fp, #-8]
   31928:	ldr	r3, [fp, #-8]
   3192c:	ldr	r3, [r3, #16]
   31930:	mov	r0, r3
   31934:	add	sp, fp, #0
   31938:	pop	{fp}		; (ldr fp, [sp], #4)
   3193c:	bx	lr

00031940 <flatcc_builder_union_vector_count@@Base>:
   31940:	push	{fp}		; (str fp, [sp, #-4]!)
   31944:	add	fp, sp, #0
   31948:	sub	sp, sp, #12
   3194c:	str	r0, [fp, #-8]
   31950:	ldr	r3, [fp, #-8]
   31954:	ldr	r3, [r3, #32]
   31958:	ldr	r3, [r3, #20]
   3195c:	mov	r0, r3
   31960:	add	sp, fp, #0
   31964:	pop	{fp}		; (ldr fp, [sp], #4)
   31968:	bx	lr

0003196c <flatcc_builder_extend_union_vector@@Base>:
   3196c:	push	{fp, lr}
   31970:	add	fp, sp, #4
   31974:	sub	sp, sp, #8
   31978:	str	r0, [fp, #-8]
   3197c:	str	r1, [fp, #-12]
   31980:	mvn	r2, #-536870912	; 0xe0000000
   31984:	ldr	r1, [fp, #-12]
   31988:	ldr	r0, [fp, #-8]
   3198c:	bl	2ee7c <flatcc_builder_end_struct@@Base+0xa0>
   31990:	mov	r3, r0
   31994:	cmp	r3, #0
   31998:	beq	319a4 <flatcc_builder_extend_union_vector@@Base+0x38>
   3199c:	mov	r3, #0
   319a0:	b	319bc <flatcc_builder_extend_union_vector@@Base+0x50>
   319a4:	ldr	r3, [fp, #-12]
   319a8:	lsl	r3, r3, #3
   319ac:	mov	r1, r3
   319b0:	ldr	r0, [fp, #-8]
   319b4:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   319b8:	mov	r3, r0
   319bc:	mov	r0, r3
   319c0:	sub	sp, fp, #4
   319c4:	pop	{fp, pc}

000319c8 <flatcc_builder_truncate_union_vector@@Base>:
   319c8:	push	{fp, lr}
   319cc:	add	fp, sp, #4
   319d0:	sub	sp, sp, #8
   319d4:	str	r0, [fp, #-8]
   319d8:	str	r1, [fp, #-12]
   319dc:	ldr	r3, [fp, #-8]
   319e0:	ldr	r3, [r3, #32]
   319e4:	ldrh	r3, [r3, #14]
   319e8:	cmp	r3, #7
   319ec:	beq	31a10 <flatcc_builder_truncate_union_vector@@Base+0x48>
   319f0:	ldr	r3, [pc, #192]	; 31ab8 <flatcc_builder_truncate_union_vector@@Base+0xf0>
   319f4:	add	r3, pc, r3
   319f8:	ldr	r2, [pc, #188]	; 31abc <flatcc_builder_truncate_union_vector@@Base+0xf4>
   319fc:	ldr	r1, [pc, #188]	; 31ac0 <flatcc_builder_truncate_union_vector@@Base+0xf8>
   31a00:	add	r1, pc, r1
   31a04:	ldr	r0, [pc, #184]	; 31ac4 <flatcc_builder_truncate_union_vector@@Base+0xfc>
   31a08:	add	r0, pc, r0
   31a0c:	bl	14610 <__assert_fail@plt>
   31a10:	ldr	r3, [fp, #-8]
   31a14:	ldr	r3, [r3, #32]
   31a18:	ldr	r2, [r3, #20]
   31a1c:	ldr	r3, [fp, #-12]
   31a20:	cmp	r2, r3
   31a24:	bcs	31a68 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   31a28:	ldr	r3, [fp, #-8]
   31a2c:	ldr	r3, [r3, #32]
   31a30:	ldr	r2, [r3, #20]
   31a34:	ldr	r3, [fp, #-12]
   31a38:	cmp	r2, r3
   31a3c:	bcs	31a60 <flatcc_builder_truncate_union_vector@@Base+0x98>
   31a40:	ldr	r3, [pc, #128]	; 31ac8 <flatcc_builder_truncate_union_vector@@Base+0x100>
   31a44:	add	r3, pc, r3
   31a48:	ldr	r2, [pc, #124]	; 31acc <flatcc_builder_truncate_union_vector@@Base+0x104>
   31a4c:	ldr	r1, [pc, #124]	; 31ad0 <flatcc_builder_truncate_union_vector@@Base+0x108>
   31a50:	add	r1, pc, r1
   31a54:	ldr	r0, [pc, #120]	; 31ad4 <flatcc_builder_truncate_union_vector@@Base+0x10c>
   31a58:	add	r0, pc, r0
   31a5c:	bl	14610 <__assert_fail@plt>
   31a60:	mvn	r3, #0
   31a64:	b	31aac <flatcc_builder_truncate_union_vector@@Base+0xe4>
   31a68:	ldr	r3, [fp, #-8]
   31a6c:	ldr	r3, [r3, #32]
   31a70:	ldr	r2, [fp, #-8]
   31a74:	ldr	r2, [r2, #32]
   31a78:	ldr	r1, [r2, #20]
   31a7c:	ldr	r2, [fp, #-12]
   31a80:	sub	r2, r1, r2
   31a84:	str	r2, [r3, #20]
   31a88:	ldr	r3, [fp, #-8]
   31a8c:	ldr	r3, [r3, #32]
   31a90:	ldr	r3, [r3, #16]
   31a94:	ldr	r2, [fp, #-12]
   31a98:	mul	r3, r2, r3
   31a9c:	mov	r1, r3
   31aa0:	ldr	r0, [fp, #-8]
   31aa4:	bl	2cda0 <flatcc_builder_default_alloc@@Base+0x38c>
   31aa8:	mov	r3, #0
   31aac:	mov	r0, r3
   31ab0:	sub	sp, fp, #4
   31ab4:	pop	{fp, pc}
   31ab8:	andeq	pc, r1, r8, lsl r6	; <UNPREDICTABLE>
   31abc:	andeq	r0, r0, r1, lsl #13
   31ac0:			; <UNDEFINED> instruction: 0x0001edb4
   31ac4:	andeq	pc, r1, r0, lsr r1	; <UNPREDICTABLE>
   31ac8:	andeq	pc, r1, r8, asr #11
   31acc:	andeq	r0, r0, r2, lsl #13
   31ad0:	andeq	lr, r1, r4, ror #26
   31ad4:	muleq	r1, r0, pc	; <UNPREDICTABLE>

00031ad8 <flatcc_builder_union_vector_push@@Base>:
   31ad8:	push	{fp, lr}
   31adc:	add	fp, sp, #4
   31ae0:	sub	sp, sp, #24
   31ae4:	str	r0, [fp, #-16]
   31ae8:	sub	r3, fp, #24
   31aec:	stm	r3, {r1, r2}
   31af0:	ldr	r3, [fp, #-16]
   31af4:	ldr	r3, [r3, #32]
   31af8:	ldrh	r3, [r3, #14]
   31afc:	cmp	r3, #7
   31b00:	beq	31b24 <flatcc_builder_union_vector_push@@Base+0x4c>
   31b04:	ldr	r3, [pc, #152]	; 31ba4 <flatcc_builder_union_vector_push@@Base+0xcc>
   31b08:	add	r3, pc, r3
   31b0c:	ldr	r2, [pc, #148]	; 31ba8 <flatcc_builder_union_vector_push@@Base+0xd0>
   31b10:	ldr	r1, [pc, #148]	; 31bac <flatcc_builder_union_vector_push@@Base+0xd4>
   31b14:	add	r1, pc, r1
   31b18:	ldr	r0, [pc, #144]	; 31bb0 <flatcc_builder_union_vector_push@@Base+0xd8>
   31b1c:	add	r0, pc, r0
   31b20:	bl	14610 <__assert_fail@plt>
   31b24:	ldr	r3, [fp, #-16]
   31b28:	ldr	r3, [r3, #32]
   31b2c:	ldr	r3, [r3, #20]
   31b30:	cmn	r3, #-536870911	; 0xe0000001
   31b34:	bne	31b40 <flatcc_builder_union_vector_push@@Base+0x68>
   31b38:	mov	r3, #0
   31b3c:	b	31b98 <flatcc_builder_union_vector_push@@Base+0xc0>
   31b40:	ldr	r3, [fp, #-16]
   31b44:	ldr	r3, [r3, #32]
   31b48:	ldr	r2, [fp, #-16]
   31b4c:	ldr	r2, [r2, #32]
   31b50:	ldr	r2, [r2, #20]
   31b54:	add	r2, r2, #1
   31b58:	str	r2, [r3, #20]
   31b5c:	mov	r1, #8
   31b60:	ldr	r0, [fp, #-16]
   31b64:	bl	2cd04 <flatcc_builder_default_alloc@@Base+0x2f0>
   31b68:	str	r0, [fp, #-8]
   31b6c:	ldr	r3, [fp, #-8]
   31b70:	cmp	r3, #0
   31b74:	bne	31b80 <flatcc_builder_union_vector_push@@Base+0xa8>
   31b78:	mov	r3, #0
   31b7c:	b	31b98 <flatcc_builder_union_vector_push@@Base+0xc0>
   31b80:	ldr	r3, [fp, #-8]
   31b84:	mov	r2, r3
   31b88:	sub	r3, fp, #24
   31b8c:	ldm	r3, {r0, r1}
   31b90:	stm	r2, {r0, r1}
   31b94:	ldr	r3, [fp, #-8]
   31b98:	mov	r0, r3
   31b9c:	sub	sp, fp, #4
   31ba0:	pop	{fp, pc}
   31ba4:	andeq	pc, r1, ip, lsr #10
   31ba8:	andeq	r0, r0, sp, lsl #13
   31bac:	andeq	lr, r1, r0, lsr #25
   31bb0:	andeq	pc, r1, ip, lsl r0	; <UNPREDICTABLE>

00031bb4 <flatcc_builder_append_union_vector@@Base>:
   31bb4:	push	{fp, lr}
   31bb8:	add	fp, sp, #4
   31bbc:	sub	sp, sp, #16
   31bc0:	str	r0, [fp, #-8]
   31bc4:	str	r1, [fp, #-12]
   31bc8:	str	r2, [fp, #-16]
   31bcc:	ldr	r3, [fp, #-8]
   31bd0:	ldr	r3, [r3, #32]
   31bd4:	ldrh	r3, [r3, #14]
   31bd8:	cmp	r3, #7
   31bdc:	beq	31c00 <flatcc_builder_append_union_vector@@Base+0x4c>
   31be0:	ldr	r3, [pc, #100]	; 31c4c <flatcc_builder_append_union_vector@@Base+0x98>
   31be4:	add	r3, pc, r3
   31be8:	ldr	r2, [pc, #96]	; 31c50 <flatcc_builder_append_union_vector@@Base+0x9c>
   31bec:	ldr	r1, [pc, #96]	; 31c54 <flatcc_builder_append_union_vector@@Base+0xa0>
   31bf0:	add	r1, pc, r1
   31bf4:	ldr	r0, [pc, #92]	; 31c58 <flatcc_builder_append_union_vector@@Base+0xa4>
   31bf8:	add	r0, pc, r0
   31bfc:	bl	14610 <__assert_fail@plt>
   31c00:	mvn	r2, #-536870912	; 0xe0000000
   31c04:	ldr	r1, [fp, #-16]
   31c08:	ldr	r0, [fp, #-8]
   31c0c:	bl	2ee7c <flatcc_builder_end_struct@@Base+0xa0>
   31c10:	mov	r3, r0
   31c14:	cmp	r3, #0
   31c18:	beq	31c24 <flatcc_builder_append_union_vector@@Base+0x70>
   31c1c:	mov	r3, #0
   31c20:	b	31c40 <flatcc_builder_append_union_vector@@Base+0x8c>
   31c24:	ldr	r3, [fp, #-16]
   31c28:	lsl	r3, r3, #3
   31c2c:	mov	r2, r3
   31c30:	ldr	r1, [fp, #-12]
   31c34:	ldr	r0, [fp, #-8]
   31c38:	bl	2cdfc <flatcc_builder_default_alloc@@Base+0x3e8>
   31c3c:	mov	r3, r0
   31c40:	mov	r0, r3
   31c44:	sub	sp, fp, #4
   31c48:	pop	{fp, pc}
   31c4c:	andeq	pc, r1, r4, ror r4	; <UNPREDICTABLE>
   31c50:	muleq	r0, ip, r6
   31c54:	andeq	lr, r1, r4, asr #23
   31c58:	andeq	lr, r1, r0, asr #30

00031c5c <flatcc_builder_create_string@@Base>:
   31c5c:	push	{r4, fp, lr}
   31c60:	add	fp, sp, #8
   31c64:	sub	sp, sp, #100	; 0x64
   31c68:	str	r0, [fp, #-96]	; 0xffffffa0
   31c6c:	str	r1, [fp, #-100]	; 0xffffff9c
   31c70:	str	r2, [fp, #-104]	; 0xffffff98
   31c74:	ldr	r4, [pc, #376]	; 31df4 <flatcc_builder_create_string@@Base+0x198>
   31c78:	add	r4, pc, r4
   31c7c:	ldr	r0, [fp, #-104]	; 0xffffff98
   31c80:	bl	2c8d0 <main@@Base+0x1694>
   31c84:	mov	r3, r0
   31c88:	str	r3, [fp, #-20]	; 0xffffffec
   31c8c:	ldr	r3, [fp, #-104]	; 0xffffff98
   31c90:	add	r3, r3, #1
   31c94:	mov	r2, #4
   31c98:	mov	r1, r3
   31c9c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   31ca0:	bl	2df0c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   31ca4:	mov	r3, r0
   31ca8:	add	r3, r3, #1
   31cac:	str	r3, [fp, #-16]
   31cb0:	mov	r3, #0
   31cb4:	str	r3, [fp, #-92]	; 0xffffffa4
   31cb8:	mov	r3, #0
   31cbc:	str	r3, [fp, #-88]	; 0xffffffa8
   31cc0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   31cc4:	add	r3, r3, #4
   31cc8:	str	r3, [fp, #-92]	; 0xffffffa4
   31ccc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31cd0:	add	r3, r3, #1
   31cd4:	lsl	r3, r3, #3
   31cd8:	sub	r2, fp, #12
   31cdc:	add	r3, r2, r3
   31ce0:	sub	r2, fp, #20
   31ce4:	str	r2, [r3, #-80]	; 0xffffffb0
   31ce8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31cec:	add	r3, r3, #1
   31cf0:	lsl	r3, r3, #3
   31cf4:	sub	r2, fp, #12
   31cf8:	add	r3, r2, r3
   31cfc:	mov	r2, #4
   31d00:	str	r2, [r3, #-76]	; 0xffffffb4
   31d04:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31d08:	add	r3, r3, #1
   31d0c:	str	r3, [fp, #-88]	; 0xffffffa8
   31d10:	ldr	r3, [fp, #-104]	; 0xffffff98
   31d14:	cmp	r3, #0
   31d18:	beq	31d70 <flatcc_builder_create_string@@Base+0x114>
   31d1c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   31d20:	ldr	r3, [fp, #-104]	; 0xffffff98
   31d24:	add	r3, r2, r3
   31d28:	str	r3, [fp, #-92]	; 0xffffffa4
   31d2c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31d30:	add	r3, r3, #1
   31d34:	lsl	r3, r3, #3
   31d38:	sub	r2, fp, #12
   31d3c:	add	r3, r2, r3
   31d40:	ldr	r2, [fp, #-100]	; 0xffffff9c
   31d44:	str	r2, [r3, #-80]	; 0xffffffb0
   31d48:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31d4c:	add	r3, r3, #1
   31d50:	lsl	r3, r3, #3
   31d54:	sub	r2, fp, #12
   31d58:	add	r3, r2, r3
   31d5c:	ldr	r2, [fp, #-104]	; 0xffffff98
   31d60:	str	r2, [r3, #-76]	; 0xffffffb4
   31d64:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31d68:	add	r3, r3, #1
   31d6c:	str	r3, [fp, #-88]	; 0xffffffa8
   31d70:	ldr	r3, [fp, #-16]
   31d74:	cmp	r3, #0
   31d78:	beq	31dd4 <flatcc_builder_create_string@@Base+0x178>
   31d7c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   31d80:	ldr	r3, [fp, #-16]
   31d84:	add	r3, r2, r3
   31d88:	str	r3, [fp, #-92]	; 0xffffffa4
   31d8c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31d90:	add	r3, r3, #1
   31d94:	lsl	r3, r3, #3
   31d98:	sub	r2, fp, #12
   31d9c:	add	r3, r2, r3
   31da0:	ldr	r2, [pc, #80]	; 31df8 <flatcc_builder_create_string@@Base+0x19c>
   31da4:	ldr	r2, [r4, r2]
   31da8:	str	r2, [r3, #-80]	; 0xffffffb0
   31dac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31db0:	add	r3, r3, #1
   31db4:	lsl	r3, r3, #3
   31db8:	sub	r2, fp, #12
   31dbc:	add	r3, r2, r3
   31dc0:	ldr	r2, [fp, #-16]
   31dc4:	str	r2, [r3, #-76]	; 0xffffffb4
   31dc8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   31dcc:	add	r3, r3, #1
   31dd0:	str	r3, [fp, #-88]	; 0xffffffa8
   31dd4:	sub	r3, fp, #92	; 0x5c
   31dd8:	mov	r1, r3
   31ddc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   31de0:	bl	2df94 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   31de4:	mov	r3, r0
   31de8:	mov	r0, r3
   31dec:	sub	sp, fp, #8
   31df0:	pop	{r4, fp, pc}
   31df4:	andeq	r2, r3, r0, lsl #7
   31df8:	andeq	r0, r0, r4, rrx

00031dfc <flatcc_builder_create_string_str@@Base>:
   31dfc:	push	{fp, lr}
   31e00:	add	fp, sp, #4
   31e04:	sub	sp, sp, #8
   31e08:	str	r0, [fp, #-8]
   31e0c:	str	r1, [fp, #-12]
   31e10:	ldr	r0, [fp, #-12]
   31e14:	bl	14598 <strlen@plt>
   31e18:	mov	r3, r0
   31e1c:	mov	r2, r3
   31e20:	ldr	r1, [fp, #-12]
   31e24:	ldr	r0, [fp, #-8]
   31e28:	bl	31c5c <flatcc_builder_create_string@@Base>
   31e2c:	mov	r3, r0
   31e30:	mov	r0, r3
   31e34:	sub	sp, fp, #4
   31e38:	pop	{fp, pc}

00031e3c <flatcc_builder_create_string_strn@@Base>:
   31e3c:	push	{fp, lr}
   31e40:	add	fp, sp, #4
   31e44:	sub	sp, sp, #16
   31e48:	str	r0, [fp, #-8]
   31e4c:	str	r1, [fp, #-12]
   31e50:	str	r2, [fp, #-16]
   31e54:	ldr	r1, [fp, #-16]
   31e58:	ldr	r0, [fp, #-12]
   31e5c:	bl	2c9c0 <main@@Base+0x1784>
   31e60:	mov	r3, r0
   31e64:	mov	r2, r3
   31e68:	ldr	r1, [fp, #-12]
   31e6c:	ldr	r0, [fp, #-8]
   31e70:	bl	31c5c <flatcc_builder_create_string@@Base>
   31e74:	mov	r3, r0
   31e78:	mov	r0, r3
   31e7c:	sub	sp, fp, #4
   31e80:	pop	{fp, pc}

00031e84 <flatcc_builder_end_string@@Base>:
   31e84:	push	{fp, lr}
   31e88:	add	fp, sp, #4
   31e8c:	sub	sp, sp, #16
   31e90:	str	r0, [fp, #-16]
   31e94:	ldr	r3, [fp, #-16]
   31e98:	ldr	r3, [r3, #32]
   31e9c:	ldrh	r3, [r3, #14]
   31ea0:	cmp	r3, #6
   31ea4:	beq	31ec8 <flatcc_builder_end_string@@Base+0x44>
   31ea8:	ldr	r3, [pc, #160]	; 31f50 <flatcc_builder_end_string@@Base+0xcc>
   31eac:	add	r3, pc, r3
   31eb0:	ldr	r2, [pc, #156]	; 31f54 <flatcc_builder_end_string@@Base+0xd0>
   31eb4:	ldr	r1, [pc, #156]	; 31f58 <flatcc_builder_end_string@@Base+0xd4>
   31eb8:	add	r1, pc, r1
   31ebc:	ldr	r0, [pc, #152]	; 31f5c <flatcc_builder_end_string@@Base+0xd8>
   31ec0:	add	r0, pc, r0
   31ec4:	bl	14610 <__assert_fail@plt>
   31ec8:	ldr	r3, [fp, #-16]
   31ecc:	ldr	r3, [r3, #32]
   31ed0:	ldr	r2, [r3, #20]
   31ed4:	ldr	r3, [fp, #-16]
   31ed8:	ldr	r3, [r3, #20]
   31edc:	cmp	r2, r3
   31ee0:	beq	31f04 <flatcc_builder_end_string@@Base+0x80>
   31ee4:	ldr	r3, [pc, #116]	; 31f60 <flatcc_builder_end_string@@Base+0xdc>
   31ee8:	add	r3, pc, r3
   31eec:	ldr	r2, [pc, #112]	; 31f64 <flatcc_builder_end_string@@Base+0xe0>
   31ef0:	ldr	r1, [pc, #112]	; 31f68 <flatcc_builder_end_string@@Base+0xe4>
   31ef4:	add	r1, pc, r1
   31ef8:	ldr	r0, [pc, #108]	; 31f6c <flatcc_builder_end_string@@Base+0xe8>
   31efc:	add	r0, pc, r0
   31f00:	bl	14610 <__assert_fail@plt>
   31f04:	ldr	r3, [fp, #-16]
   31f08:	ldr	r1, [r3, #16]
   31f0c:	ldr	r3, [fp, #-16]
   31f10:	ldr	r3, [r3, #20]
   31f14:	mov	r2, r3
   31f18:	ldr	r0, [fp, #-16]
   31f1c:	bl	31c5c <flatcc_builder_create_string@@Base>
   31f20:	str	r0, [fp, #-8]
   31f24:	ldr	r3, [fp, #-8]
   31f28:	cmp	r3, #0
   31f2c:	bne	31f38 <flatcc_builder_end_string@@Base+0xb4>
   31f30:	mov	r3, #0
   31f34:	b	31f44 <flatcc_builder_end_string@@Base+0xc0>
   31f38:	ldr	r0, [fp, #-16]
   31f3c:	bl	2de44 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   31f40:	ldr	r3, [fp, #-8]
   31f44:	mov	r0, r3
   31f48:	sub	sp, fp, #4
   31f4c:	pop	{fp, pc}
   31f50:	ldrdeq	pc, [r1], -r0
   31f54:	andeq	r0, r0, r4, asr #13
   31f58:	strdeq	lr, [r1], -ip
   31f5c:	ldrdeq	lr, [r1], -r8
   31f60:	muleq	r1, r4, r1
   31f64:	andeq	r0, r0, r5, asr #13
   31f68:	andeq	lr, r1, r0, asr #17
   31f6c:	andeq	lr, r1, r0, ror ip

00031f70 <flatcc_builder_string_edit@@Base>:
   31f70:	push	{fp}		; (str fp, [sp, #-4]!)
   31f74:	add	fp, sp, #0
   31f78:	sub	sp, sp, #12
   31f7c:	str	r0, [fp, #-8]
   31f80:	ldr	r3, [fp, #-8]
   31f84:	ldr	r3, [r3, #16]
   31f88:	mov	r0, r3
   31f8c:	add	sp, fp, #0
   31f90:	pop	{fp}		; (ldr fp, [sp], #4)
   31f94:	bx	lr

00031f98 <flatcc_builder_string_len@@Base>:
   31f98:	push	{fp}		; (str fp, [sp, #-4]!)
   31f9c:	add	fp, sp, #0
   31fa0:	sub	sp, sp, #12
   31fa4:	str	r0, [fp, #-8]
   31fa8:	ldr	r3, [fp, #-8]
   31fac:	ldr	r3, [r3, #32]
   31fb0:	ldr	r3, [r3, #20]
   31fb4:	mov	r0, r3
   31fb8:	add	sp, fp, #0
   31fbc:	pop	{fp}		; (ldr fp, [sp], #4)
   31fc0:	bx	lr

00031fc4 <flatcc_builder_table_add@@Base>:
   31fc4:	push	{fp, lr}
   31fc8:	add	fp, sp, #4
   31fcc:	sub	sp, sp, #16
   31fd0:	str	r0, [fp, #-8]
   31fd4:	str	r1, [fp, #-12]
   31fd8:	str	r2, [fp, #-16]
   31fdc:	strh	r3, [fp, #-18]	; 0xffffffee
   31fe0:	ldr	r3, [fp, #-8]
   31fe4:	ldr	r3, [r3, #32]
   31fe8:	ldrh	r3, [r3, #14]
   31fec:	cmp	r3, #3
   31ff0:	beq	32014 <flatcc_builder_table_add@@Base+0x50>
   31ff4:	ldr	r3, [pc, #268]	; 32108 <flatcc_builder_table_add@@Base+0x144>
   31ff8:	add	r3, pc, r3
   31ffc:	ldr	r2, [pc, #264]	; 3210c <flatcc_builder_table_add@@Base+0x148>
   32000:	ldr	r1, [pc, #264]	; 32110 <flatcc_builder_table_add@@Base+0x14c>
   32004:	add	r1, pc, r1
   32008:	ldr	r0, [pc, #260]	; 32114 <flatcc_builder_table_add@@Base+0x150>
   3200c:	add	r0, pc, r0
   32010:	bl	14610 <__assert_fail@plt>
   32014:	ldr	r3, [fp, #-12]
   32018:	cmp	r3, #0
   3201c:	blt	32030 <flatcc_builder_table_add@@Base+0x6c>
   32020:	ldr	r3, [fp, #-12]
   32024:	ldr	r2, [pc, #236]	; 32118 <flatcc_builder_table_add@@Base+0x154>
   32028:	cmp	r3, r2
   3202c:	ble	32050 <flatcc_builder_table_add@@Base+0x8c>
   32030:	ldr	r3, [pc, #228]	; 3211c <flatcc_builder_table_add@@Base+0x158>
   32034:	add	r3, pc, r3
   32038:	ldr	r2, [pc, #224]	; 32120 <flatcc_builder_table_add@@Base+0x15c>
   3203c:	ldr	r1, [pc, #224]	; 32124 <flatcc_builder_table_add@@Base+0x160>
   32040:	add	r1, pc, r1
   32044:	ldr	r0, [pc, #220]	; 32128 <flatcc_builder_table_add@@Base+0x164>
   32048:	add	r0, pc, r0
   3204c:	bl	14610 <__assert_fail@plt>
   32050:	ldr	r3, [fp, #-8]
   32054:	ldrh	r3, [r3, #130]	; 0x82
   32058:	ldrh	r2, [fp, #-18]	; 0xffffffee
   3205c:	cmp	r2, r3
   32060:	bls	32070 <flatcc_builder_table_add@@Base+0xac>
   32064:	ldr	r3, [fp, #-8]
   32068:	ldrh	r2, [fp, #-18]	; 0xffffffee
   3206c:	strh	r2, [r3, #130]	; 0x82
   32070:	ldr	r3, [fp, #-8]
   32074:	ldr	r2, [r3, #4]
   32078:	ldr	r3, [fp, #-12]
   3207c:	lsl	r3, r3, #1
   32080:	add	r3, r2, r3
   32084:	ldrh	r3, [r3]
   32088:	cmp	r3, #0
   3208c:	beq	320b0 <flatcc_builder_table_add@@Base+0xec>
   32090:	ldr	r3, [pc, #148]	; 3212c <flatcc_builder_table_add@@Base+0x168>
   32094:	add	r3, pc, r3
   32098:	ldr	r2, [pc, #144]	; 32130 <flatcc_builder_table_add@@Base+0x16c>
   3209c:	ldr	r1, [pc, #144]	; 32134 <flatcc_builder_table_add@@Base+0x170>
   320a0:	add	r1, pc, r1
   320a4:	ldr	r0, [pc, #140]	; 32138 <flatcc_builder_table_add@@Base+0x174>
   320a8:	add	r0, pc, r0
   320ac:	bl	14610 <__assert_fail@plt>
   320b0:	ldr	r3, [fp, #-8]
   320b4:	ldr	r2, [r3, #12]
   320b8:	ldr	r3, [fp, #-12]
   320bc:	eor	r3, r3, r2
   320c0:	ldr	r2, [pc, #116]	; 3213c <flatcc_builder_table_add@@Base+0x178>
   320c4:	mul	r2, r2, r3
   320c8:	ldr	r3, [fp, #-16]
   320cc:	eor	r3, r3, r2
   320d0:	ldr	r2, [pc, #100]	; 3213c <flatcc_builder_table_add@@Base+0x178>
   320d4:	mul	r2, r2, r3
   320d8:	ldr	r3, [fp, #-8]
   320dc:	str	r2, [r3, #12]
   320e0:	ldr	r3, [fp, #-12]
   320e4:	uxth	r3, r3
   320e8:	ldrh	r2, [fp, #-18]	; 0xffffffee
   320ec:	ldr	r1, [fp, #-16]
   320f0:	ldr	r0, [fp, #-8]
   320f4:	bl	2ce58 <flatcc_builder_default_alloc@@Base+0x444>
   320f8:	mov	r3, r0
   320fc:	mov	r0, r3
   32100:	sub	sp, fp, #4
   32104:	pop	{fp, pc}
   32108:	andeq	pc, r1, r0, lsr #1
   3210c:	andeq	r0, r0, sp, ror #13
   32110:			; <UNDEFINED> instruction: 0x0001e7b0
   32114:	andeq	lr, r1, r8, ror #20
   32118:	strdeq	r7, [r0], -ip
   3211c:	andeq	pc, r1, r4, rrx
   32120:	andeq	r0, r0, lr, ror #13
   32124:	andeq	lr, r1, r4, ror r7
   32128:	andeq	lr, r1, r8, asr #22
   3212c:	andeq	pc, r1, r4
   32130:	strdeq	r0, [r0], -r8
   32134:	andeq	lr, r1, r4, lsl r7
   32138:	andeq	lr, r1, ip, ror #14
   3213c:			; <UNDEFINED> instruction: 0x9e3779b1

00032140 <flatcc_builder_table_edit@@Base>:
   32140:	push	{fp, lr}
   32144:	add	fp, sp, #4
   32148:	sub	sp, sp, #8
   3214c:	str	r0, [fp, #-8]
   32150:	str	r1, [fp, #-12]
   32154:	ldr	r3, [fp, #-8]
   32158:	ldr	r3, [r3, #32]
   3215c:	ldrh	r3, [r3, #14]
   32160:	cmp	r3, #3
   32164:	beq	32188 <flatcc_builder_table_edit@@Base+0x48>
   32168:	ldr	r3, [pc, #64]	; 321b0 <flatcc_builder_table_edit@@Base+0x70>
   3216c:	add	r3, pc, r3
   32170:	ldr	r2, [pc, #60]	; 321b4 <flatcc_builder_table_edit@@Base+0x74>
   32174:	ldr	r1, [pc, #60]	; 321b8 <flatcc_builder_table_edit@@Base+0x78>
   32178:	add	r1, pc, r1
   3217c:	ldr	r0, [pc, #56]	; 321bc <flatcc_builder_table_edit@@Base+0x7c>
   32180:	add	r0, pc, r0
   32184:	bl	14610 <__assert_fail@plt>
   32188:	ldr	r3, [fp, #-8]
   3218c:	ldr	r2, [r3, #16]
   32190:	ldr	r3, [fp, #-8]
   32194:	ldr	r1, [r3, #20]
   32198:	ldr	r3, [fp, #-12]
   3219c:	sub	r3, r1, r3
   321a0:	add	r3, r2, r3
   321a4:	mov	r0, r3
   321a8:	sub	sp, fp, #4
   321ac:	pop	{fp, pc}
   321b0:	andeq	lr, r1, r8, asr #30
   321b4:	andeq	r0, r0, r2, lsl #14
   321b8:	andeq	lr, r1, ip, lsr r6
   321bc:	strdeq	lr, [r1], -r4

000321c0 <flatcc_builder_table_add_copy@@Base>:
   321c0:	push	{fp, lr}
   321c4:	add	fp, sp, #4
   321c8:	sub	sp, sp, #24
   321cc:	str	r0, [fp, #-16]
   321d0:	str	r1, [fp, #-20]	; 0xffffffec
   321d4:	str	r2, [fp, #-24]	; 0xffffffe8
   321d8:	str	r3, [fp, #-28]	; 0xffffffe4
   321dc:	ldrh	r3, [fp, #4]
   321e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   321e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   321e8:	ldr	r0, [fp, #-16]
   321ec:	bl	31fc4 <flatcc_builder_table_add@@Base>
   321f0:	str	r0, [fp, #-8]
   321f4:	ldr	r3, [fp, #-8]
   321f8:	cmp	r3, #0
   321fc:	beq	32210 <flatcc_builder_table_add_copy@@Base+0x50>
   32200:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32208:	ldr	r0, [fp, #-8]
   3220c:	bl	14544 <memcpy@plt>
   32210:	ldr	r3, [fp, #-8]
   32214:	mov	r0, r3
   32218:	sub	sp, fp, #4
   3221c:	pop	{fp, pc}

00032220 <flatcc_builder_table_add_offset@@Base>:
   32220:	push	{fp, lr}
   32224:	add	fp, sp, #4
   32228:	sub	sp, sp, #8
   3222c:	str	r0, [fp, #-8]
   32230:	str	r1, [fp, #-12]
   32234:	ldr	r3, [fp, #-8]
   32238:	ldr	r3, [r3, #32]
   3223c:	ldrh	r3, [r3, #14]
   32240:	cmp	r3, #3
   32244:	beq	32268 <flatcc_builder_table_add_offset@@Base+0x48>
   32248:	ldr	r3, [pc, #228]	; 32334 <flatcc_builder_table_add_offset@@Base+0x114>
   3224c:	add	r3, pc, r3
   32250:	ldr	r2, [pc, #224]	; 32338 <flatcc_builder_table_add_offset@@Base+0x118>
   32254:	ldr	r1, [pc, #224]	; 3233c <flatcc_builder_table_add_offset@@Base+0x11c>
   32258:	add	r1, pc, r1
   3225c:	ldr	r0, [pc, #220]	; 32340 <flatcc_builder_table_add_offset@@Base+0x120>
   32260:	add	r0, pc, r0
   32264:	bl	14610 <__assert_fail@plt>
   32268:	ldr	r3, [fp, #-12]
   3226c:	cmp	r3, #0
   32270:	blt	32284 <flatcc_builder_table_add_offset@@Base+0x64>
   32274:	ldr	r3, [fp, #-12]
   32278:	ldr	r2, [pc, #196]	; 32344 <flatcc_builder_table_add_offset@@Base+0x124>
   3227c:	cmp	r3, r2
   32280:	ble	322a4 <flatcc_builder_table_add_offset@@Base+0x84>
   32284:	ldr	r3, [pc, #188]	; 32348 <flatcc_builder_table_add_offset@@Base+0x128>
   32288:	add	r3, pc, r3
   3228c:	ldr	r2, [pc, #184]	; 3234c <flatcc_builder_table_add_offset@@Base+0x12c>
   32290:	ldr	r1, [pc, #184]	; 32350 <flatcc_builder_table_add_offset@@Base+0x130>
   32294:	add	r1, pc, r1
   32298:	ldr	r0, [pc, #180]	; 32354 <flatcc_builder_table_add_offset@@Base+0x134>
   3229c:	add	r0, pc, r0
   322a0:	bl	14610 <__assert_fail@plt>
   322a4:	ldr	r3, [fp, #-8]
   322a8:	ldr	r2, [r3, #4]
   322ac:	ldr	r3, [fp, #-12]
   322b0:	lsl	r3, r3, #1
   322b4:	add	r3, r2, r3
   322b8:	ldrh	r3, [r3]
   322bc:	cmp	r3, #0
   322c0:	beq	322e4 <flatcc_builder_table_add_offset@@Base+0xc4>
   322c4:	ldr	r3, [pc, #140]	; 32358 <flatcc_builder_table_add_offset@@Base+0x138>
   322c8:	add	r3, pc, r3
   322cc:	ldr	r2, [pc, #136]	; 3235c <flatcc_builder_table_add_offset@@Base+0x13c>
   322d0:	ldr	r1, [pc, #136]	; 32360 <flatcc_builder_table_add_offset@@Base+0x140>
   322d4:	add	r1, pc, r1
   322d8:	ldr	r0, [pc, #132]	; 32364 <flatcc_builder_table_add_offset@@Base+0x144>
   322dc:	add	r0, pc, r0
   322e0:	bl	14610 <__assert_fail@plt>
   322e4:	ldr	r3, [fp, #-8]
   322e8:	ldr	r2, [r3, #12]
   322ec:	ldr	r3, [fp, #-12]
   322f0:	eor	r3, r3, r2
   322f4:	ldr	r2, [pc, #108]	; 32368 <flatcc_builder_table_add_offset@@Base+0x148>
   322f8:	mul	r3, r2, r3
   322fc:	eor	r3, r3, #4
   32300:	ldr	r2, [pc, #96]	; 32368 <flatcc_builder_table_add_offset@@Base+0x148>
   32304:	mul	r2, r2, r3
   32308:	ldr	r3, [fp, #-8]
   3230c:	str	r2, [r3, #12]
   32310:	ldr	r3, [fp, #-12]
   32314:	uxth	r3, r3
   32318:	mov	r1, r3
   3231c:	ldr	r0, [fp, #-8]
   32320:	bl	2cf64 <flatcc_builder_default_alloc@@Base+0x550>
   32324:	mov	r3, r0
   32328:	mov	r0, r3
   3232c:	sub	sp, fp, #4
   32330:	pop	{fp, pc}
   32334:	andeq	lr, r1, r4, lsl #29
   32338:	andeq	r0, r0, r3, lsl r7
   3233c:	andeq	lr, r1, ip, asr r5
   32340:	andeq	lr, r1, r4, lsl r8
   32344:	strdeq	r7, [r0], -ip
   32348:	andeq	lr, r1, r8, asr #28
   3234c:	andeq	r0, r0, r4, lsl r7
   32350:	andeq	lr, r1, r0, lsr #10
   32354:	strdeq	lr, [r1], -r4
   32358:	andeq	lr, r1, r8, lsl #28
   3235c:	andeq	r0, r0, fp, lsl r7
   32360:	andeq	lr, r1, r0, ror #9
   32364:	andeq	lr, r1, r8, lsr r5
   32368:			; <UNDEFINED> instruction: 0x9e3779b1

0003236c <flatcc_builder_push_buffer_alignment@@Base>:
   3236c:	push	{fp}		; (str fp, [sp, #-4]!)
   32370:	add	fp, sp, #0
   32374:	sub	sp, sp, #20
   32378:	str	r0, [fp, #-16]
   3237c:	ldr	r3, [fp, #-16]
   32380:	ldrh	r3, [r3, #128]	; 0x80
   32384:	strh	r3, [fp, #-6]
   32388:	ldr	r3, [fp, #-16]
   3238c:	mov	r2, #4
   32390:	strh	r2, [r3, #128]	; 0x80
   32394:	ldrh	r3, [fp, #-6]
   32398:	mov	r0, r3
   3239c:	add	sp, fp, #0
   323a0:	pop	{fp}		; (ldr fp, [sp], #4)
   323a4:	bx	lr

000323a8 <flatcc_builder_pop_buffer_alignment@@Base>:
   323a8:	push	{fp, lr}
   323ac:	add	fp, sp, #4
   323b0:	sub	sp, sp, #8
   323b4:	str	r0, [fp, #-8]
   323b8:	mov	r3, r1
   323bc:	strh	r3, [fp, #-10]
   323c0:	ldrh	r3, [fp, #-10]
   323c4:	mov	r1, r3
   323c8:	ldr	r0, [fp, #-8]
   323cc:	bl	2d8d0 <flatcc_builder_clear@@Base+0xb0>
   323d0:	nop			; (mov r0, r0)
   323d4:	sub	sp, fp, #4
   323d8:	pop	{fp, pc}

000323dc <flatcc_builder_get_buffer_alignment@@Base>:
   323dc:	push	{fp}		; (str fp, [sp, #-4]!)
   323e0:	add	fp, sp, #0
   323e4:	sub	sp, sp, #12
   323e8:	str	r0, [fp, #-8]
   323ec:	ldr	r3, [fp, #-8]
   323f0:	ldrh	r3, [r3, #128]	; 0x80
   323f4:	mov	r0, r3
   323f8:	add	sp, fp, #0
   323fc:	pop	{fp}		; (ldr fp, [sp], #4)
   32400:	bx	lr

00032404 <flatcc_builder_set_vtable_clustering@@Base>:
   32404:	push	{fp}		; (str fp, [sp, #-4]!)
   32408:	add	fp, sp, #0
   3240c:	sub	sp, sp, #12
   32410:	str	r0, [fp, #-8]
   32414:	str	r1, [fp, #-12]
   32418:	ldr	r3, [fp, #-12]
   3241c:	cmp	r3, #0
   32420:	moveq	r3, #1
   32424:	movne	r3, #0
   32428:	uxtb	r3, r3
   3242c:	mov	r2, r3
   32430:	ldr	r3, [fp, #-8]
   32434:	str	r2, [r3, #180]	; 0xb4
   32438:	nop			; (mov r0, r0)
   3243c:	add	sp, fp, #0
   32440:	pop	{fp}		; (ldr fp, [sp], #4)
   32444:	bx	lr

00032448 <flatcc_builder_set_block_align@@Base>:
   32448:	push	{fp}		; (str fp, [sp, #-4]!)
   3244c:	add	fp, sp, #0
   32450:	sub	sp, sp, #12
   32454:	str	r0, [fp, #-8]
   32458:	mov	r3, r1
   3245c:	strh	r3, [fp, #-10]
   32460:	ldr	r3, [fp, #-8]
   32464:	ldrh	r2, [fp, #-10]
   32468:	strh	r2, [r3, #132]	; 0x84
   3246c:	nop			; (mov r0, r0)
   32470:	add	sp, fp, #0
   32474:	pop	{fp}		; (ldr fp, [sp], #4)
   32478:	bx	lr

0003247c <flatcc_builder_get_level@@Base>:
   3247c:	push	{fp}		; (str fp, [sp, #-4]!)
   32480:	add	fp, sp, #0
   32484:	sub	sp, sp, #12
   32488:	str	r0, [fp, #-8]
   3248c:	ldr	r3, [fp, #-8]
   32490:	ldr	r3, [r3, #156]	; 0x9c
   32494:	mov	r0, r3
   32498:	add	sp, fp, #0
   3249c:	pop	{fp}		; (ldr fp, [sp], #4)
   324a0:	bx	lr

000324a4 <flatcc_builder_set_max_level@@Base>:
   324a4:	push	{fp}		; (str fp, [sp, #-4]!)
   324a8:	add	fp, sp, #0
   324ac:	sub	sp, sp, #12
   324b0:	str	r0, [fp, #-8]
   324b4:	str	r1, [fp, #-12]
   324b8:	ldr	r3, [fp, #-8]
   324bc:	ldr	r2, [fp, #-12]
   324c0:	str	r2, [r3, #176]	; 0xb0
   324c4:	ldr	r3, [fp, #-8]
   324c8:	ldr	r2, [r3, #160]	; 0xa0
   324cc:	ldr	r3, [fp, #-8]
   324d0:	ldr	r3, [r3, #176]	; 0xb0
   324d4:	cmp	r2, r3
   324d8:	bge	324ec <flatcc_builder_set_max_level@@Base+0x48>
   324dc:	ldr	r3, [fp, #-8]
   324e0:	ldr	r2, [r3, #176]	; 0xb0
   324e4:	ldr	r3, [fp, #-8]
   324e8:	str	r2, [r3, #160]	; 0xa0
   324ec:	nop			; (mov r0, r0)
   324f0:	add	sp, fp, #0
   324f4:	pop	{fp}		; (ldr fp, [sp], #4)
   324f8:	bx	lr

000324fc <flatcc_builder_get_buffer_size@@Base>:
   324fc:	push	{fp}		; (str fp, [sp, #-4]!)
   32500:	add	fp, sp, #0
   32504:	sub	sp, sp, #12
   32508:	str	r0, [fp, #-8]
   3250c:	ldr	r3, [fp, #-8]
   32510:	ldr	r2, [r3, #140]	; 0x8c
   32514:	ldr	r3, [fp, #-8]
   32518:	ldr	r3, [r3, #136]	; 0x88
   3251c:	sub	r3, r2, r3
   32520:	mov	r0, r3
   32524:	add	sp, fp, #0
   32528:	pop	{fp}		; (ldr fp, [sp], #4)
   3252c:	bx	lr

00032530 <flatcc_builder_get_buffer_start@@Base>:
   32530:	push	{fp}		; (str fp, [sp, #-4]!)
   32534:	add	fp, sp, #0
   32538:	sub	sp, sp, #12
   3253c:	str	r0, [fp, #-8]
   32540:	ldr	r3, [fp, #-8]
   32544:	ldr	r3, [r3, #136]	; 0x88
   32548:	mov	r0, r3
   3254c:	add	sp, fp, #0
   32550:	pop	{fp}		; (ldr fp, [sp], #4)
   32554:	bx	lr

00032558 <flatcc_builder_get_buffer_end@@Base>:
   32558:	push	{fp}		; (str fp, [sp, #-4]!)
   3255c:	add	fp, sp, #0
   32560:	sub	sp, sp, #12
   32564:	str	r0, [fp, #-8]
   32568:	ldr	r3, [fp, #-8]
   3256c:	ldr	r3, [r3, #140]	; 0x8c
   32570:	mov	r0, r3
   32574:	add	sp, fp, #0
   32578:	pop	{fp}		; (ldr fp, [sp], #4)
   3257c:	bx	lr

00032580 <flatcc_builder_set_vtable_cache_limit@@Base>:
   32580:	push	{fp}		; (str fp, [sp, #-4]!)
   32584:	add	fp, sp, #0
   32588:	sub	sp, sp, #12
   3258c:	str	r0, [fp, #-8]
   32590:	str	r1, [fp, #-12]
   32594:	ldr	r3, [fp, #-8]
   32598:	ldr	r2, [fp, #-12]
   3259c:	str	r2, [r3, #172]	; 0xac
   325a0:	nop			; (mov r0, r0)
   325a4:	add	sp, fp, #0
   325a8:	pop	{fp}		; (ldr fp, [sp], #4)
   325ac:	bx	lr

000325b0 <flatcc_builder_set_identifier@@Base>:
   325b0:	push	{fp}		; (str fp, [sp, #-4]!)
   325b4:	add	fp, sp, #0
   325b8:	sub	sp, sp, #12
   325bc:	str	r0, [fp, #-8]
   325c0:	str	r1, [fp, #-12]
   325c4:	ldr	r1, [pc, #60]	; 32608 <flatcc_builder_set_identifier@@Base+0x58>
   325c8:	add	r1, pc, r1
   325cc:	ldr	r3, [fp, #-8]
   325d0:	add	r2, r3, #168	; 0xa8
   325d4:	ldr	r3, [fp, #-12]
   325d8:	cmp	r3, #0
   325dc:	beq	325e8 <flatcc_builder_set_identifier@@Base+0x38>
   325e0:	ldr	r3, [fp, #-12]
   325e4:	b	325f0 <flatcc_builder_set_identifier@@Base+0x40>
   325e8:	ldr	r3, [pc, #28]	; 3260c <flatcc_builder_set_identifier@@Base+0x5c>
   325ec:	ldr	r3, [r1, r3]
   325f0:	ldr	r3, [r3]
   325f4:	str	r3, [r2]
   325f8:	nop			; (mov r0, r0)
   325fc:	add	sp, fp, #0
   32600:	pop	{fp}		; (ldr fp, [sp], #4)
   32604:	bx	lr
   32608:	andeq	r1, r3, r0, lsr sl
   3260c:	andeq	r0, r0, r4, rrx

00032610 <flatcc_builder_get_type@@Base>:
   32610:	push	{fp}		; (str fp, [sp, #-4]!)
   32614:	add	fp, sp, #0
   32618:	sub	sp, sp, #12
   3261c:	str	r0, [fp, #-8]
   32620:	ldr	r3, [fp, #-8]
   32624:	ldr	r3, [r3, #32]
   32628:	cmp	r3, #0
   3262c:	beq	32640 <flatcc_builder_get_type@@Base+0x30>
   32630:	ldr	r3, [fp, #-8]
   32634:	ldr	r3, [r3, #32]
   32638:	ldrh	r3, [r3, #14]
   3263c:	b	32644 <flatcc_builder_get_type@@Base+0x34>
   32640:	mov	r3, #0
   32644:	mov	r0, r3
   32648:	add	sp, fp, #0
   3264c:	pop	{fp}		; (ldr fp, [sp], #4)
   32650:	bx	lr

00032654 <flatcc_builder_get_type_at@@Base>:
   32654:	push	{fp}		; (str fp, [sp, #-4]!)
   32658:	add	fp, sp, #0
   3265c:	sub	sp, sp, #12
   32660:	str	r0, [fp, #-8]
   32664:	str	r1, [fp, #-12]
   32668:	ldr	r3, [fp, #-12]
   3266c:	cmp	r3, #0
   32670:	ble	32688 <flatcc_builder_get_type_at@@Base+0x34>
   32674:	ldr	r3, [fp, #-8]
   32678:	ldr	r2, [r3, #156]	; 0x9c
   3267c:	ldr	r3, [fp, #-12]
   32680:	cmp	r2, r3
   32684:	bge	32690 <flatcc_builder_get_type_at@@Base+0x3c>
   32688:	mov	r3, #0
   3268c:	b	326c4 <flatcc_builder_get_type_at@@Base+0x70>
   32690:	ldr	r3, [fp, #-8]
   32694:	ldr	r2, [r3, #32]
   32698:	ldr	r3, [fp, #-8]
   3269c:	ldr	r3, [r3, #156]	; 0x9c
   326a0:	ldr	r1, [fp, #-12]
   326a4:	sub	r3, r1, r3
   326a8:	mov	r1, r3
   326ac:	mov	r3, r1
   326b0:	lsl	r3, r3, #3
   326b4:	add	r3, r3, r1
   326b8:	lsl	r3, r3, #2
   326bc:	add	r3, r2, r3
   326c0:	ldrh	r3, [r3, #14]
   326c4:	mov	r0, r3
   326c8:	add	sp, fp, #0
   326cc:	pop	{fp}		; (ldr fp, [sp], #4)
   326d0:	bx	lr

000326d4 <flatcc_builder_get_direct_buffer@@Base>:
   326d4:	push	{fp, lr}
   326d8:	add	fp, sp, #4
   326dc:	sub	sp, sp, #8
   326e0:	str	r0, [fp, #-8]
   326e4:	str	r1, [fp, #-12]
   326e8:	ldr	r3, [fp, #-8]
   326ec:	ldr	r3, [r3, #184]	; 0xb8
   326f0:	cmp	r3, #0
   326f4:	beq	32714 <flatcc_builder_get_direct_buffer@@Base+0x40>
   326f8:	ldr	r3, [fp, #-8]
   326fc:	add	r3, r3, #188	; 0xbc
   32700:	ldr	r1, [fp, #-12]
   32704:	mov	r0, r3
   32708:	bl	2c940 <main@@Base+0x1704>
   3270c:	mov	r3, r0
   32710:	b	32730 <flatcc_builder_get_direct_buffer@@Base+0x5c>
   32714:	ldr	r3, [fp, #-12]
   32718:	cmp	r3, #0
   3271c:	beq	3272c <flatcc_builder_get_direct_buffer@@Base+0x58>
   32720:	ldr	r3, [fp, #-12]
   32724:	mov	r2, #0
   32728:	str	r2, [r3]
   3272c:	mov	r3, #0
   32730:	mov	r0, r3
   32734:	sub	sp, fp, #4
   32738:	pop	{fp, pc}

0003273c <flatcc_builder_copy_buffer@@Base>:
   3273c:	push	{fp, lr}
   32740:	add	fp, sp, #4
   32744:	sub	sp, sp, #16
   32748:	str	r0, [fp, #-8]
   3274c:	str	r1, [fp, #-12]
   32750:	str	r2, [fp, #-16]
   32754:	ldr	r3, [fp, #-8]
   32758:	ldr	r3, [r3, #184]	; 0xb8
   3275c:	cmp	r3, #0
   32760:	bne	3276c <flatcc_builder_copy_buffer@@Base+0x30>
   32764:	mov	r3, #0
   32768:	b	327b8 <flatcc_builder_copy_buffer@@Base+0x7c>
   3276c:	ldr	r3, [fp, #-8]
   32770:	add	r3, r3, #188	; 0xbc
   32774:	ldr	r2, [fp, #-16]
   32778:	ldr	r1, [fp, #-12]
   3277c:	mov	r0, r3
   32780:	bl	33504 <flatcc_emitter_copy_buffer@@Base>
   32784:	str	r0, [fp, #-12]
   32788:	ldr	r3, [fp, #-12]
   3278c:	cmp	r3, #0
   32790:	bne	327b4 <flatcc_builder_copy_buffer@@Base+0x78>
   32794:	ldr	r3, [pc, #40]	; 327c4 <flatcc_builder_copy_buffer@@Base+0x88>
   32798:	add	r3, pc, r3
   3279c:	ldr	r2, [pc, #36]	; 327c8 <flatcc_builder_copy_buffer@@Base+0x8c>
   327a0:	ldr	r1, [pc, #36]	; 327cc <flatcc_builder_copy_buffer@@Base+0x90>
   327a4:	add	r1, pc, r1
   327a8:	ldr	r0, [pc, #32]	; 327d0 <flatcc_builder_copy_buffer@@Base+0x94>
   327ac:	add	r0, pc, r0
   327b0:	bl	14610 <__assert_fail@plt>
   327b4:	ldr	r3, [fp, #-12]
   327b8:	mov	r0, r3
   327bc:	sub	sp, fp, #4
   327c0:	pop	{fp, pc}
   327c4:	andeq	lr, r1, r8, asr r9
   327c8:	andeq	r0, r0, r6, lsl #15
   327cc:	andeq	lr, r1, r0, lsl r0
   327d0:	andeq	lr, r1, r8, lsr #8

000327d4 <flatcc_builder_finalize_buffer@@Base>:
   327d4:	push	{fp, lr}
   327d8:	add	fp, sp, #4
   327dc:	sub	sp, sp, #16
   327e0:	str	r0, [fp, #-16]
   327e4:	str	r1, [fp, #-20]	; 0xffffffec
   327e8:	ldr	r0, [fp, #-16]
   327ec:	bl	324fc <flatcc_builder_get_buffer_size@@Base>
   327f0:	str	r0, [fp, #-8]
   327f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   327f8:	cmp	r3, #0
   327fc:	beq	3280c <flatcc_builder_finalize_buffer@@Base+0x38>
   32800:	ldr	r3, [fp, #-20]	; 0xffffffec
   32804:	ldr	r2, [fp, #-8]
   32808:	str	r2, [r3]
   3280c:	ldr	r0, [fp, #-8]
   32810:	bl	14574 <malloc@plt>
   32814:	mov	r3, r0
   32818:	str	r3, [fp, #-12]
   3281c:	ldr	r3, [fp, #-12]
   32820:	cmp	r3, #0
   32824:	bne	32848 <flatcc_builder_finalize_buffer@@Base+0x74>
   32828:	ldr	r3, [pc, #136]	; 328b8 <flatcc_builder_finalize_buffer@@Base+0xe4>
   3282c:	add	r3, pc, r3
   32830:	ldr	r2, [pc, #132]	; 328bc <flatcc_builder_finalize_buffer@@Base+0xe8>
   32834:	ldr	r1, [pc, #132]	; 328c0 <flatcc_builder_finalize_buffer@@Base+0xec>
   32838:	add	r1, pc, r1
   3283c:	ldr	r0, [pc, #128]	; 328c4 <flatcc_builder_finalize_buffer@@Base+0xf0>
   32840:	add	r0, pc, r0
   32844:	bl	14610 <__assert_fail@plt>
   32848:	ldr	r2, [fp, #-8]
   3284c:	ldr	r1, [fp, #-12]
   32850:	ldr	r0, [fp, #-16]
   32854:	bl	3273c <flatcc_builder_copy_buffer@@Base>
   32858:	mov	r3, r0
   3285c:	cmp	r3, #0
   32860:	bne	32884 <flatcc_builder_finalize_buffer@@Base+0xb0>
   32864:	ldr	r3, [pc, #92]	; 328c8 <flatcc_builder_finalize_buffer@@Base+0xf4>
   32868:	add	r3, pc, r3
   3286c:	ldr	r2, [pc, #88]	; 328cc <flatcc_builder_finalize_buffer@@Base+0xf8>
   32870:	ldr	r1, [pc, #88]	; 328d0 <flatcc_builder_finalize_buffer@@Base+0xfc>
   32874:	add	r1, pc, r1
   32878:	ldr	r0, [pc, #84]	; 328d4 <flatcc_builder_finalize_buffer@@Base+0x100>
   3287c:	add	r0, pc, r0
   32880:	bl	14610 <__assert_fail@plt>
   32884:	ldr	r3, [fp, #-12]
   32888:	cmp	r3, #0
   3288c:	bne	328a8 <flatcc_builder_finalize_buffer@@Base+0xd4>
   32890:	ldr	r3, [fp, #-20]	; 0xffffffec
   32894:	cmp	r3, #0
   32898:	beq	328a8 <flatcc_builder_finalize_buffer@@Base+0xd4>
   3289c:	ldr	r3, [fp, #-20]	; 0xffffffec
   328a0:	mov	r2, #0
   328a4:	str	r2, [r3]
   328a8:	ldr	r3, [fp, #-12]
   328ac:	mov	r0, r3
   328b0:	sub	sp, fp, #4
   328b4:	pop	{fp, pc}
   328b8:	andeq	lr, r1, r0, ror #17
   328bc:	muleq	r0, r8, r7
   328c0:	andeq	sp, r1, ip, ror pc
   328c4:	ldrdeq	sp, [r1], -r4
   328c8:	andeq	lr, r1, r4, lsr #17
   328cc:	muleq	r0, ip, r7
   328d0:	andeq	sp, r1, r0, asr #30
   328d4:	muleq	r1, r8, pc	; <UNPREDICTABLE>

000328d8 <flatcc_builder_finalize_aligned_buffer@@Base>:
   328d8:	push	{fp, lr}
   328dc:	add	fp, sp, #4
   328e0:	sub	sp, sp, #24
   328e4:	str	r0, [fp, #-24]	; 0xffffffe8
   328e8:	str	r1, [fp, #-28]	; 0xffffffe4
   328ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   328f0:	bl	324fc <flatcc_builder_get_buffer_size@@Base>
   328f4:	str	r0, [fp, #-12]
   328f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   328fc:	cmp	r3, #0
   32900:	beq	32910 <flatcc_builder_finalize_aligned_buffer@@Base+0x38>
   32904:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32908:	ldr	r2, [fp, #-12]
   3290c:	str	r2, [r3]
   32910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32914:	bl	323dc <flatcc_builder_get_buffer_alignment@@Base>
   32918:	mov	r3, r0
   3291c:	str	r3, [fp, #-16]
   32920:	ldr	r2, [fp, #-12]
   32924:	ldr	r3, [fp, #-16]
   32928:	add	r3, r2, r3
   3292c:	sub	r2, r3, #1
   32930:	ldr	r3, [fp, #-16]
   32934:	rsb	r3, r3, #0
   32938:	and	r3, r3, r2
   3293c:	str	r3, [fp, #-12]
   32940:	ldr	r1, [fp, #-12]
   32944:	ldr	r0, [fp, #-16]
   32948:	bl	2c84c <main@@Base+0x1610>
   3294c:	str	r0, [fp, #-8]
   32950:	ldr	r3, [fp, #-8]
   32954:	cmp	r3, #0
   32958:	beq	3298c <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
   3295c:	ldr	r2, [fp, #-12]
   32960:	ldr	r1, [fp, #-8]
   32964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32968:	bl	3273c <flatcc_builder_copy_buffer@@Base>
   3296c:	mov	r3, r0
   32970:	cmp	r3, #0
   32974:	bne	32990 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   32978:	ldr	r0, [fp, #-8]
   3297c:	bl	14538 <free@plt>
   32980:	mov	r3, #0
   32984:	str	r3, [fp, #-8]
   32988:	b	32990 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   3298c:	nop			; (mov r0, r0)
   32990:	ldr	r3, [fp, #-8]
   32994:	cmp	r3, #0
   32998:	bne	329b4 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   3299c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   329a0:	cmp	r3, #0
   329a4:	beq	329b4 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   329a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   329ac:	mov	r2, #0
   329b0:	str	r2, [r3]
   329b4:	ldr	r3, [fp, #-8]
   329b8:	mov	r0, r3
   329bc:	sub	sp, fp, #4
   329c0:	pop	{fp, pc}

000329c4 <flatcc_builder_aligned_alloc@@Base>:
   329c4:	push	{fp, lr}
   329c8:	add	fp, sp, #4
   329cc:	sub	sp, sp, #8
   329d0:	str	r0, [fp, #-8]
   329d4:	str	r1, [fp, #-12]
   329d8:	ldr	r1, [fp, #-12]
   329dc:	ldr	r0, [fp, #-8]
   329e0:	bl	2c84c <main@@Base+0x1610>
   329e4:	mov	r3, r0
   329e8:	mov	r0, r3
   329ec:	sub	sp, fp, #4
   329f0:	pop	{fp, pc}

000329f4 <flatcc_builder_aligned_free@@Base>:
   329f4:	push	{fp, lr}
   329f8:	add	fp, sp, #4
   329fc:	sub	sp, sp, #8
   32a00:	str	r0, [fp, #-8]
   32a04:	ldr	r0, [fp, #-8]
   32a08:	bl	14538 <free@plt>
   32a0c:	nop			; (mov r0, r0)
   32a10:	sub	sp, fp, #4
   32a14:	pop	{fp, pc}

00032a18 <flatcc_builder_get_emit_context@@Base>:
   32a18:	push	{fp}		; (str fp, [sp, #-4]!)
   32a1c:	add	fp, sp, #0
   32a20:	sub	sp, sp, #12
   32a24:	str	r0, [fp, #-8]
   32a28:	ldr	r3, [fp, #-8]
   32a2c:	ldr	r3, [r3, #36]	; 0x24
   32a30:	mov	r0, r3
   32a34:	add	sp, fp, #0
   32a38:	pop	{fp}		; (ldr fp, [sp], #4)
   32a3c:	bx	lr
   32a40:	push	{fp, lr}
   32a44:	add	fp, sp, #4
   32a48:	sub	sp, sp, #16
   32a4c:	str	r0, [fp, #-16]
   32a50:	mov	r3, #0
   32a54:	str	r3, [fp, #-8]
   32a58:	ldr	r3, [fp, #-16]
   32a5c:	ldr	r3, [r3]
   32a60:	cmp	r3, #0
   32a64:	beq	32abc <flatcc_builder_get_emit_context@@Base+0xa4>
   32a68:	ldr	r3, [fp, #-16]
   32a6c:	ldr	r3, [r3]
   32a70:	ldr	r2, [r3, #2948]	; 0xb84
   32a74:	ldr	r3, [fp, #-16]
   32a78:	ldr	r3, [r3, #4]
   32a7c:	cmp	r2, r3
   32a80:	beq	32abc <flatcc_builder_get_emit_context@@Base+0xa4>
   32a84:	ldr	r3, [fp, #-16]
   32a88:	ldr	r3, [r3]
   32a8c:	ldr	r3, [r3, #2948]	; 0xb84
   32a90:	ldr	r2, [fp, #-16]
   32a94:	ldr	r2, [r2]
   32a98:	ldr	r2, [r2, #2952]	; 0xb88
   32a9c:	sub	r2, r2, #2944	; 0xb80
   32aa0:	str	r2, [r3, #2952]	; 0xb88
   32aa4:	ldr	r3, [fp, #-16]
   32aa8:	ldr	r3, [r3]
   32aac:	ldr	r2, [r3, #2948]	; 0xb84
   32ab0:	ldr	r3, [fp, #-16]
   32ab4:	str	r2, [r3]
   32ab8:	b	32be4 <flatcc_builder_get_emit_context@@Base+0x1cc>
   32abc:	ldr	r0, [pc, #368]	; 32c34 <flatcc_builder_get_emit_context@@Base+0x21c>
   32ac0:	bl	14574 <malloc@plt>
   32ac4:	mov	r3, r0
   32ac8:	str	r3, [fp, #-8]
   32acc:	ldr	r3, [fp, #-8]
   32ad0:	cmp	r3, #0
   32ad4:	bne	32ae0 <flatcc_builder_get_emit_context@@Base+0xc8>
   32ad8:	mvn	r3, #0
   32adc:	b	32c28 <flatcc_builder_get_emit_context@@Base+0x210>
   32ae0:	ldr	r3, [fp, #-16]
   32ae4:	ldr	r3, [r3, #28]
   32ae8:	add	r2, r3, #2944	; 0xb80
   32aec:	ldr	r3, [fp, #-16]
   32af0:	str	r2, [r3, #28]
   32af4:	ldr	r3, [fp, #-16]
   32af8:	ldr	r3, [r3]
   32afc:	cmp	r3, #0
   32b00:	beq	32b54 <flatcc_builder_get_emit_context@@Base+0x13c>
   32b04:	ldr	r3, [fp, #-16]
   32b08:	ldr	r2, [r3, #4]
   32b0c:	ldr	r3, [fp, #-8]
   32b10:	str	r2, [r3, #2948]	; 0xb84
   32b14:	ldr	r3, [fp, #-16]
   32b18:	ldr	r2, [r3]
   32b1c:	ldr	r3, [fp, #-8]
   32b20:	str	r2, [r3, #2944]	; 0xb80
   32b24:	ldr	r3, [fp, #-16]
   32b28:	ldr	r3, [r3]
   32b2c:	ldr	r2, [fp, #-8]
   32b30:	str	r2, [r3, #2948]	; 0xb84
   32b34:	ldr	r3, [fp, #-16]
   32b38:	ldr	r3, [r3, #4]
   32b3c:	ldr	r2, [fp, #-8]
   32b40:	str	r2, [r3, #2944]	; 0xb80
   32b44:	ldr	r3, [fp, #-16]
   32b48:	ldr	r2, [fp, #-8]
   32b4c:	str	r2, [r3]
   32b50:	b	32be4 <flatcc_builder_get_emit_context@@Base+0x1cc>
   32b54:	ldr	r3, [fp, #-16]
   32b58:	ldr	r2, [fp, #-8]
   32b5c:	str	r2, [r3]
   32b60:	ldr	r3, [fp, #-16]
   32b64:	ldr	r2, [fp, #-8]
   32b68:	str	r2, [r3, #4]
   32b6c:	ldr	r3, [fp, #-8]
   32b70:	ldr	r2, [fp, #-8]
   32b74:	str	r2, [r3, #2944]	; 0xb80
   32b78:	ldr	r3, [fp, #-8]
   32b7c:	ldr	r2, [fp, #-8]
   32b80:	str	r2, [r3, #2948]	; 0xb84
   32b84:	ldr	r3, [fp, #-16]
   32b88:	ldr	r3, [r3]
   32b8c:	add	r2, r3, #1472	; 0x5c0
   32b90:	ldr	r3, [fp, #-16]
   32b94:	str	r2, [r3, #8]
   32b98:	ldr	r3, [fp, #-16]
   32b9c:	ldr	r2, [r3, #8]
   32ba0:	ldr	r3, [fp, #-16]
   32ba4:	str	r2, [r3, #16]
   32ba8:	ldr	r3, [fp, #-16]
   32bac:	mov	r2, #1472	; 0x5c0
   32bb0:	str	r2, [r3, #12]
   32bb4:	ldr	r3, [fp, #-16]
   32bb8:	ldr	r3, [r3, #12]
   32bbc:	rsb	r2, r3, #2944	; 0xb80
   32bc0:	ldr	r3, [fp, #-16]
   32bc4:	str	r2, [r3, #20]
   32bc8:	ldr	r3, [fp, #-16]
   32bcc:	ldr	r3, [r3, #12]
   32bd0:	rsb	r2, r3, #0
   32bd4:	ldr	r3, [fp, #-8]
   32bd8:	str	r2, [r3, #2952]	; 0xb88
   32bdc:	mov	r3, #0
   32be0:	b	32c28 <flatcc_builder_get_emit_context@@Base+0x210>
   32be4:	ldr	r3, [fp, #-16]
   32be8:	ldr	r3, [r3]
   32bec:	add	r2, r3, #2944	; 0xb80
   32bf0:	ldr	r3, [fp, #-16]
   32bf4:	str	r2, [r3, #8]
   32bf8:	ldr	r3, [fp, #-16]
   32bfc:	mov	r2, #2944	; 0xb80
   32c00:	str	r2, [r3, #12]
   32c04:	ldr	r3, [fp, #-16]
   32c08:	ldr	r3, [r3]
   32c0c:	ldr	r2, [fp, #-16]
   32c10:	ldr	r2, [r2]
   32c14:	ldr	r2, [r2, #2944]	; 0xb80
   32c18:	ldr	r2, [r2, #2952]	; 0xb88
   32c1c:	sub	r2, r2, #2944	; 0xb80
   32c20:	str	r2, [r3, #2952]	; 0xb88
   32c24:	mov	r3, #0
   32c28:	mov	r0, r3
   32c2c:	sub	sp, fp, #4
   32c30:	pop	{fp, pc}
   32c34:	andeq	r0, r0, ip, lsl #23
   32c38:	push	{fp, lr}
   32c3c:	add	fp, sp, #4
   32c40:	sub	sp, sp, #16
   32c44:	str	r0, [fp, #-16]
   32c48:	mov	r3, #0
   32c4c:	str	r3, [fp, #-8]
   32c50:	ldr	r3, [fp, #-16]
   32c54:	ldr	r3, [r3, #4]
   32c58:	cmp	r3, #0
   32c5c:	beq	32c94 <flatcc_builder_get_emit_context@@Base+0x27c>
   32c60:	ldr	r3, [fp, #-16]
   32c64:	ldr	r3, [r3, #4]
   32c68:	ldr	r2, [r3, #2944]	; 0xb80
   32c6c:	ldr	r3, [fp, #-16]
   32c70:	ldr	r3, [r3]
   32c74:	cmp	r2, r3
   32c78:	beq	32c94 <flatcc_builder_get_emit_context@@Base+0x27c>
   32c7c:	ldr	r3, [fp, #-16]
   32c80:	ldr	r3, [r3, #4]
   32c84:	ldr	r2, [r3, #2944]	; 0xb80
   32c88:	ldr	r3, [fp, #-16]
   32c8c:	str	r2, [r3, #4]
   32c90:	b	32dbc <flatcc_builder_get_emit_context@@Base+0x3a4>
   32c94:	ldr	r0, [pc, #368]	; 32e0c <flatcc_builder_get_emit_context@@Base+0x3f4>
   32c98:	bl	14574 <malloc@plt>
   32c9c:	mov	r3, r0
   32ca0:	str	r3, [fp, #-8]
   32ca4:	ldr	r3, [fp, #-8]
   32ca8:	cmp	r3, #0
   32cac:	bne	32cb8 <flatcc_builder_get_emit_context@@Base+0x2a0>
   32cb0:	mvn	r3, #0
   32cb4:	b	32e00 <flatcc_builder_get_emit_context@@Base+0x3e8>
   32cb8:	ldr	r3, [fp, #-16]
   32cbc:	ldr	r3, [r3, #28]
   32cc0:	add	r2, r3, #2944	; 0xb80
   32cc4:	ldr	r3, [fp, #-16]
   32cc8:	str	r2, [r3, #28]
   32ccc:	ldr	r3, [fp, #-16]
   32cd0:	ldr	r3, [r3, #4]
   32cd4:	cmp	r3, #0
   32cd8:	beq	32d2c <flatcc_builder_get_emit_context@@Base+0x314>
   32cdc:	ldr	r3, [fp, #-16]
   32ce0:	ldr	r2, [r3, #4]
   32ce4:	ldr	r3, [fp, #-8]
   32ce8:	str	r2, [r3, #2948]	; 0xb84
   32cec:	ldr	r3, [fp, #-16]
   32cf0:	ldr	r2, [r3]
   32cf4:	ldr	r3, [fp, #-8]
   32cf8:	str	r2, [r3, #2944]	; 0xb80
   32cfc:	ldr	r3, [fp, #-16]
   32d00:	ldr	r3, [r3]
   32d04:	ldr	r2, [fp, #-8]
   32d08:	str	r2, [r3, #2948]	; 0xb84
   32d0c:	ldr	r3, [fp, #-16]
   32d10:	ldr	r3, [r3, #4]
   32d14:	ldr	r2, [fp, #-8]
   32d18:	str	r2, [r3, #2944]	; 0xb80
   32d1c:	ldr	r3, [fp, #-16]
   32d20:	ldr	r2, [fp, #-8]
   32d24:	str	r2, [r3, #4]
   32d28:	b	32dbc <flatcc_builder_get_emit_context@@Base+0x3a4>
   32d2c:	ldr	r3, [fp, #-16]
   32d30:	ldr	r2, [fp, #-8]
   32d34:	str	r2, [r3]
   32d38:	ldr	r3, [fp, #-16]
   32d3c:	ldr	r2, [fp, #-8]
   32d40:	str	r2, [r3, #4]
   32d44:	ldr	r3, [fp, #-8]
   32d48:	ldr	r2, [fp, #-8]
   32d4c:	str	r2, [r3, #2944]	; 0xb80
   32d50:	ldr	r3, [fp, #-8]
   32d54:	ldr	r2, [fp, #-8]
   32d58:	str	r2, [r3, #2948]	; 0xb84
   32d5c:	ldr	r3, [fp, #-16]
   32d60:	ldr	r3, [r3]
   32d64:	add	r2, r3, #1472	; 0x5c0
   32d68:	ldr	r3, [fp, #-16]
   32d6c:	str	r2, [r3, #8]
   32d70:	ldr	r3, [fp, #-16]
   32d74:	ldr	r2, [r3, #8]
   32d78:	ldr	r3, [fp, #-16]
   32d7c:	str	r2, [r3, #16]
   32d80:	ldr	r3, [fp, #-16]
   32d84:	mov	r2, #1472	; 0x5c0
   32d88:	str	r2, [r3, #12]
   32d8c:	ldr	r3, [fp, #-16]
   32d90:	ldr	r3, [r3, #12]
   32d94:	rsb	r2, r3, #2944	; 0xb80
   32d98:	ldr	r3, [fp, #-16]
   32d9c:	str	r2, [r3, #20]
   32da0:	ldr	r3, [fp, #-16]
   32da4:	ldr	r3, [r3, #12]
   32da8:	rsb	r2, r3, #0
   32dac:	ldr	r3, [fp, #-8]
   32db0:	str	r2, [r3, #2952]	; 0xb88
   32db4:	mov	r3, #0
   32db8:	b	32e00 <flatcc_builder_get_emit_context@@Base+0x3e8>
   32dbc:	ldr	r3, [fp, #-16]
   32dc0:	ldr	r3, [r3, #4]
   32dc4:	mov	r2, r3
   32dc8:	ldr	r3, [fp, #-16]
   32dcc:	str	r2, [r3, #16]
   32dd0:	ldr	r3, [fp, #-16]
   32dd4:	mov	r2, #2944	; 0xb80
   32dd8:	str	r2, [r3, #20]
   32ddc:	ldr	r3, [fp, #-16]
   32de0:	ldr	r3, [r3, #4]
   32de4:	ldr	r2, [fp, #-16]
   32de8:	ldr	r2, [r2, #4]
   32dec:	ldr	r2, [r2, #2948]	; 0xb84
   32df0:	ldr	r2, [r2, #2952]	; 0xb88
   32df4:	add	r2, r2, #2944	; 0xb80
   32df8:	str	r2, [r3, #2952]	; 0xb88
   32dfc:	mov	r3, #0
   32e00:	mov	r0, r3
   32e04:	sub	sp, fp, #4
   32e08:	pop	{fp, pc}
   32e0c:	andeq	r0, r0, ip, lsl #23
   32e10:	push	{fp, lr}
   32e14:	add	fp, sp, #4
   32e18:	sub	sp, sp, #24
   32e1c:	str	r0, [fp, #-16]
   32e20:	str	r1, [fp, #-20]	; 0xffffffec
   32e24:	str	r2, [fp, #-24]	; 0xffffffe8
   32e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   32e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32e30:	add	r3, r2, r3
   32e34:	str	r3, [fp, #-20]	; 0xffffffec
   32e38:	b	32efc <flatcc_builder_get_emit_context@@Base+0x4e4>
   32e3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32e40:	str	r3, [fp, #-8]
   32e44:	ldr	r3, [fp, #-16]
   32e48:	ldr	r2, [r3, #12]
   32e4c:	ldr	r3, [fp, #-8]
   32e50:	cmp	r2, r3
   32e54:	bcs	32e8c <flatcc_builder_get_emit_context@@Base+0x474>
   32e58:	ldr	r3, [fp, #-16]
   32e5c:	ldr	r3, [r3, #12]
   32e60:	str	r3, [fp, #-8]
   32e64:	ldr	r3, [fp, #-8]
   32e68:	cmp	r3, #0
   32e6c:	bne	32e8c <flatcc_builder_get_emit_context@@Base+0x474>
   32e70:	ldr	r0, [fp, #-16]
   32e74:	bl	32a40 <flatcc_builder_get_emit_context@@Base+0x28>
   32e78:	mov	r3, r0
   32e7c:	cmp	r3, #0
   32e80:	beq	32efc <flatcc_builder_get_emit_context@@Base+0x4e4>
   32e84:	mvn	r3, #0
   32e88:	b	32f0c <flatcc_builder_get_emit_context@@Base+0x4f4>
   32e8c:	ldr	r3, [fp, #-16]
   32e90:	ldr	r2, [r3, #8]
   32e94:	ldr	r3, [fp, #-8]
   32e98:	rsb	r3, r3, #0
   32e9c:	add	r2, r2, r3
   32ea0:	ldr	r3, [fp, #-16]
   32ea4:	str	r2, [r3, #8]
   32ea8:	ldr	r3, [fp, #-16]
   32eac:	ldr	r2, [r3, #12]
   32eb0:	ldr	r3, [fp, #-8]
   32eb4:	sub	r2, r2, r3
   32eb8:	ldr	r3, [fp, #-16]
   32ebc:	str	r2, [r3, #12]
   32ec0:	ldr	r3, [fp, #-8]
   32ec4:	rsb	r3, r3, #0
   32ec8:	ldr	r2, [fp, #-20]	; 0xffffffec
   32ecc:	add	r3, r2, r3
   32ed0:	str	r3, [fp, #-20]	; 0xffffffec
   32ed4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32ed8:	ldr	r3, [fp, #-8]
   32edc:	sub	r3, r2, r3
   32ee0:	str	r3, [fp, #-24]	; 0xffffffe8
   32ee4:	ldr	r3, [fp, #-16]
   32ee8:	ldr	r3, [r3, #8]
   32eec:	ldr	r2, [fp, #-8]
   32ef0:	ldr	r1, [fp, #-20]	; 0xffffffec
   32ef4:	mov	r0, r3
   32ef8:	bl	14544 <memcpy@plt>
   32efc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32f00:	cmp	r3, #0
   32f04:	bne	32e3c <flatcc_builder_get_emit_context@@Base+0x424>
   32f08:	mov	r3, #0
   32f0c:	mov	r0, r3
   32f10:	sub	sp, fp, #4
   32f14:	pop	{fp, pc}
   32f18:	push	{fp, lr}
   32f1c:	add	fp, sp, #4
   32f20:	sub	sp, sp, #24
   32f24:	str	r0, [fp, #-16]
   32f28:	str	r1, [fp, #-20]	; 0xffffffec
   32f2c:	str	r2, [fp, #-24]	; 0xffffffe8
   32f30:	b	32fec <flatcc_builder_get_emit_context@@Base+0x5d4>
   32f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32f38:	str	r3, [fp, #-8]
   32f3c:	ldr	r3, [fp, #-16]
   32f40:	ldr	r2, [r3, #20]
   32f44:	ldr	r3, [fp, #-8]
   32f48:	cmp	r2, r3
   32f4c:	bcs	32f84 <flatcc_builder_get_emit_context@@Base+0x56c>
   32f50:	ldr	r3, [fp, #-16]
   32f54:	ldr	r3, [r3, #20]
   32f58:	str	r3, [fp, #-8]
   32f5c:	ldr	r3, [fp, #-8]
   32f60:	cmp	r3, #0
   32f64:	bne	32f84 <flatcc_builder_get_emit_context@@Base+0x56c>
   32f68:	ldr	r0, [fp, #-16]
   32f6c:	bl	32c38 <flatcc_builder_get_emit_context@@Base+0x220>
   32f70:	mov	r3, r0
   32f74:	cmp	r3, #0
   32f78:	beq	32fec <flatcc_builder_get_emit_context@@Base+0x5d4>
   32f7c:	mvn	r3, #0
   32f80:	b	32ffc <flatcc_builder_get_emit_context@@Base+0x5e4>
   32f84:	ldr	r3, [fp, #-16]
   32f88:	ldr	r3, [r3, #16]
   32f8c:	ldr	r2, [fp, #-8]
   32f90:	ldr	r1, [fp, #-20]	; 0xffffffec
   32f94:	mov	r0, r3
   32f98:	bl	14544 <memcpy@plt>
   32f9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32fa0:	ldr	r3, [fp, #-8]
   32fa4:	sub	r3, r2, r3
   32fa8:	str	r3, [fp, #-24]	; 0xffffffe8
   32fac:	ldr	r2, [fp, #-20]	; 0xffffffec
   32fb0:	ldr	r3, [fp, #-8]
   32fb4:	add	r3, r2, r3
   32fb8:	str	r3, [fp, #-20]	; 0xffffffec
   32fbc:	ldr	r3, [fp, #-16]
   32fc0:	ldr	r2, [r3, #16]
   32fc4:	ldr	r3, [fp, #-8]
   32fc8:	add	r2, r2, r3
   32fcc:	ldr	r3, [fp, #-16]
   32fd0:	str	r2, [r3, #16]
   32fd4:	ldr	r3, [fp, #-16]
   32fd8:	ldr	r2, [r3, #20]
   32fdc:	ldr	r3, [fp, #-8]
   32fe0:	sub	r2, r2, r3
   32fe4:	ldr	r3, [fp, #-16]
   32fe8:	str	r2, [r3, #20]
   32fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32ff0:	cmp	r3, #0
   32ff4:	bne	32f34 <flatcc_builder_get_emit_context@@Base+0x51c>
   32ff8:	mov	r3, #0
   32ffc:	mov	r0, r3
   33000:	sub	sp, fp, #4
   33004:	pop	{fp, pc}

00033008 <flatcc_emitter_recycle_page@@Base>:
   33008:	push	{fp}		; (str fp, [sp, #-4]!)
   3300c:	add	fp, sp, #0
   33010:	sub	sp, sp, #12
   33014:	str	r0, [fp, #-8]
   33018:	str	r1, [fp, #-12]
   3301c:	ldr	r3, [fp, #-8]
   33020:	ldr	r2, [r3]
   33024:	ldr	r3, [fp, #-12]
   33028:	cmp	r2, r3
   3302c:	beq	33044 <flatcc_emitter_recycle_page@@Base+0x3c>
   33030:	ldr	r3, [fp, #-8]
   33034:	ldr	r2, [r3, #4]
   33038:	ldr	r3, [fp, #-12]
   3303c:	cmp	r2, r3
   33040:	bne	3304c <flatcc_emitter_recycle_page@@Base+0x44>
   33044:	mvn	r3, #0
   33048:	b	330bc <flatcc_emitter_recycle_page@@Base+0xb4>
   3304c:	ldr	r3, [fp, #-12]
   33050:	ldr	r3, [r3, #2944]	; 0xb80
   33054:	ldr	r2, [fp, #-12]
   33058:	ldr	r2, [r2, #2948]	; 0xb84
   3305c:	str	r2, [r3, #2948]	; 0xb84
   33060:	ldr	r3, [fp, #-12]
   33064:	ldr	r3, [r3, #2948]	; 0xb84
   33068:	ldr	r2, [fp, #-12]
   3306c:	ldr	r2, [r2, #2944]	; 0xb80
   33070:	str	r2, [r3, #2944]	; 0xb80
   33074:	ldr	r3, [fp, #-8]
   33078:	ldr	r3, [r3]
   3307c:	ldr	r2, [r3, #2948]	; 0xb84
   33080:	ldr	r3, [fp, #-12]
   33084:	str	r2, [r3, #2948]	; 0xb84
   33088:	ldr	r3, [fp, #-8]
   3308c:	ldr	r2, [r3]
   33090:	ldr	r3, [fp, #-12]
   33094:	str	r2, [r3, #2944]	; 0xb80
   33098:	ldr	r3, [fp, #-12]
   3309c:	ldr	r3, [r3, #2948]	; 0xb84
   330a0:	ldr	r2, [fp, #-12]
   330a4:	str	r2, [r3, #2944]	; 0xb80
   330a8:	ldr	r3, [fp, #-12]
   330ac:	ldr	r3, [r3, #2944]	; 0xb80
   330b0:	ldr	r2, [fp, #-12]
   330b4:	str	r2, [r3, #2948]	; 0xb84
   330b8:	mov	r3, #0
   330bc:	mov	r0, r3
   330c0:	add	sp, fp, #0
   330c4:	pop	{fp}		; (ldr fp, [sp], #4)
   330c8:	bx	lr

000330cc <flatcc_emitter_reset@@Base>:
   330cc:	push	{fp, lr}
   330d0:	add	fp, sp, #4
   330d4:	sub	sp, sp, #16
   330d8:	str	r0, [fp, #-16]
   330dc:	ldr	r3, [fp, #-16]
   330e0:	ldr	r3, [r3]
   330e4:	str	r3, [fp, #-8]
   330e8:	ldr	r3, [fp, #-16]
   330ec:	ldr	r3, [r3]
   330f0:	cmp	r3, #0
   330f4:	beq	3324c <flatcc_emitter_reset@@Base+0x180>
   330f8:	ldr	r3, [fp, #-16]
   330fc:	ldr	r2, [r3]
   33100:	ldr	r3, [fp, #-16]
   33104:	str	r2, [r3, #4]
   33108:	ldr	r3, [fp, #-16]
   3310c:	ldr	r3, [r3]
   33110:	add	r2, r3, #1472	; 0x5c0
   33114:	ldr	r3, [fp, #-16]
   33118:	str	r2, [r3, #8]
   3311c:	ldr	r3, [fp, #-16]
   33120:	ldr	r2, [r3, #8]
   33124:	ldr	r3, [fp, #-16]
   33128:	str	r2, [r3, #16]
   3312c:	ldr	r3, [fp, #-16]
   33130:	mov	r2, #1472	; 0x5c0
   33134:	str	r2, [r3, #12]
   33138:	ldr	r3, [fp, #-16]
   3313c:	mov	r2, #1472	; 0x5c0
   33140:	str	r2, [r3, #20]
   33144:	ldr	r3, [fp, #-16]
   33148:	ldr	r3, [r3]
   3314c:	ldr	r2, [fp, #-16]
   33150:	ldr	r2, [r2, #12]
   33154:	rsb	r2, r2, #0
   33158:	str	r2, [r3, #2952]	; 0xb88
   3315c:	ldr	r3, [fp, #-16]
   33160:	ldr	r3, [r3, #32]
   33164:	cmp	r3, #0
   33168:	bne	3317c <flatcc_emitter_reset@@Base+0xb0>
   3316c:	ldr	r3, [fp, #-16]
   33170:	ldr	r2, [r3, #24]
   33174:	ldr	r3, [fp, #-16]
   33178:	str	r2, [r3, #32]
   3317c:	ldr	r3, [fp, #-16]
   33180:	ldr	r2, [r3, #32]
   33184:	mov	r3, r2
   33188:	lsl	r3, r3, #1
   3318c:	add	r3, r3, r2
   33190:	lsr	r2, r3, #2
   33194:	ldr	r3, [fp, #-16]
   33198:	ldr	r3, [r3, #24]
   3319c:	lsr	r3, r3, #2
   331a0:	add	r2, r2, r3
   331a4:	ldr	r3, [fp, #-16]
   331a8:	str	r2, [r3, #32]
   331ac:	ldr	r3, [fp, #-16]
   331b0:	mov	r2, #0
   331b4:	str	r2, [r3, #24]
   331b8:	b	33210 <flatcc_emitter_reset@@Base+0x144>
   331bc:	ldr	r3, [fp, #-16]
   331c0:	ldr	r3, [r3, #4]
   331c4:	ldr	r3, [r3, #2944]	; 0xb80
   331c8:	str	r3, [fp, #-8]
   331cc:	ldr	r3, [fp, #-16]
   331d0:	ldr	r3, [r3, #4]
   331d4:	ldr	r2, [fp, #-8]
   331d8:	ldr	r2, [r2, #2944]	; 0xb80
   331dc:	str	r2, [r3, #2944]	; 0xb80
   331e0:	ldr	r3, [fp, #-8]
   331e4:	ldr	r3, [r3, #2944]	; 0xb80
   331e8:	ldr	r2, [fp, #-16]
   331ec:	ldr	r2, [r2, #4]
   331f0:	str	r2, [r3, #2948]	; 0xb84
   331f4:	ldr	r0, [fp, #-8]
   331f8:	bl	14538 <free@plt>
   331fc:	ldr	r3, [fp, #-16]
   33200:	ldr	r3, [r3, #28]
   33204:	sub	r2, r3, #2944	; 0xb80
   33208:	ldr	r3, [fp, #-16]
   3320c:	str	r2, [r3, #28]
   33210:	ldr	r3, [fp, #-16]
   33214:	ldr	r3, [r3, #32]
   33218:	lsl	r2, r3, #1
   3321c:	ldr	r3, [fp, #-16]
   33220:	ldr	r3, [r3, #28]
   33224:	cmp	r2, r3
   33228:	bcs	33250 <flatcc_emitter_reset@@Base+0x184>
   3322c:	ldr	r3, [fp, #-16]
   33230:	ldr	r3, [r3, #4]
   33234:	ldr	r2, [r3, #2944]	; 0xb80
   33238:	ldr	r3, [fp, #-16]
   3323c:	ldr	r3, [r3]
   33240:	cmp	r2, r3
   33244:	bne	331bc <flatcc_emitter_reset@@Base+0xf0>
   33248:	b	33250 <flatcc_emitter_reset@@Base+0x184>
   3324c:	nop			; (mov r0, r0)
   33250:	sub	sp, fp, #4
   33254:	pop	{fp, pc}

00033258 <flatcc_emitter_clear@@Base>:
   33258:	push	{fp, lr}
   3325c:	add	fp, sp, #4
   33260:	sub	sp, sp, #16
   33264:	str	r0, [fp, #-16]
   33268:	ldr	r3, [fp, #-16]
   3326c:	ldr	r3, [r3]
   33270:	str	r3, [fp, #-8]
   33274:	ldr	r3, [fp, #-8]
   33278:	cmp	r3, #0
   3327c:	beq	332dc <flatcc_emitter_clear@@Base+0x84>
   33280:	ldr	r3, [fp, #-8]
   33284:	ldr	r3, [r3, #2948]	; 0xb84
   33288:	mov	r2, #0
   3328c:	str	r2, [r3, #2944]	; 0xb80
   33290:	b	332b0 <flatcc_emitter_clear@@Base+0x58>
   33294:	ldr	r3, [fp, #-8]
   33298:	ldr	r3, [r3, #2944]	; 0xb80
   3329c:	str	r3, [fp, #-8]
   332a0:	ldr	r3, [fp, #-8]
   332a4:	ldr	r3, [r3, #2948]	; 0xb84
   332a8:	mov	r0, r3
   332ac:	bl	14538 <free@plt>
   332b0:	ldr	r3, [fp, #-8]
   332b4:	ldr	r3, [r3, #2944]	; 0xb80
   332b8:	cmp	r3, #0
   332bc:	bne	33294 <flatcc_emitter_clear@@Base+0x3c>
   332c0:	ldr	r0, [fp, #-8]
   332c4:	bl	14538 <free@plt>
   332c8:	mov	r2, #36	; 0x24
   332cc:	mov	r1, #0
   332d0:	ldr	r0, [fp, #-16]
   332d4:	bl	145bc <memset@plt>
   332d8:	b	332e0 <flatcc_emitter_clear@@Base+0x88>
   332dc:	nop			; (mov r0, r0)
   332e0:	sub	sp, fp, #4
   332e4:	pop	{fp, pc}

000332e8 <flatcc_emitter@@Base>:
   332e8:	push	{fp, lr}
   332ec:	add	fp, sp, #4
   332f0:	sub	sp, sp, #24
   332f4:	str	r0, [fp, #-16]
   332f8:	str	r1, [fp, #-20]	; 0xffffffec
   332fc:	str	r2, [fp, #-24]	; 0xffffffe8
   33300:	str	r3, [fp, #-28]	; 0xffffffe4
   33304:	ldr	r3, [fp, #-16]
   33308:	str	r3, [fp, #-12]
   3330c:	ldr	r3, [fp, #-12]
   33310:	ldr	r2, [r3, #24]
   33314:	ldr	r3, [fp, #4]
   33318:	add	r2, r2, r3
   3331c:	ldr	r3, [fp, #-12]
   33320:	str	r2, [r3, #24]
   33324:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33328:	cmp	r3, #0
   3332c:	bge	333f4 <flatcc_emitter@@Base+0x10c>
   33330:	ldr	r3, [fp, #-12]
   33334:	ldr	r2, [r3, #12]
   33338:	ldr	r3, [fp, #4]
   3333c:	cmp	r2, r3
   33340:	bcc	33388 <flatcc_emitter@@Base+0xa0>
   33344:	ldr	r3, [fp, #-12]
   33348:	ldr	r2, [r3, #8]
   3334c:	ldr	r3, [fp, #4]
   33350:	rsb	r3, r3, #0
   33354:	add	r2, r2, r3
   33358:	ldr	r3, [fp, #-12]
   3335c:	str	r2, [r3, #8]
   33360:	ldr	r3, [fp, #-12]
   33364:	ldr	r2, [r3, #12]
   33368:	ldr	r3, [fp, #4]
   3336c:	sub	r2, r2, r3
   33370:	ldr	r3, [fp, #-12]
   33374:	str	r2, [r3, #12]
   33378:	ldr	r3, [fp, #-12]
   3337c:	ldr	r3, [r3, #8]
   33380:	str	r3, [fp, #-8]
   33384:	b	334a0 <flatcc_emitter@@Base+0x1b8>
   33388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3338c:	lsl	r3, r3, #3
   33390:	ldr	r2, [fp, #-20]	; 0xffffffec
   33394:	add	r3, r2, r3
   33398:	str	r3, [fp, #-20]	; 0xffffffec
   3339c:	b	333dc <flatcc_emitter@@Base+0xf4>
   333a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   333a4:	sub	r3, r3, #8
   333a8:	str	r3, [fp, #-20]	; 0xffffffec
   333ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   333b0:	ldr	r1, [r3]
   333b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   333b8:	ldr	r3, [r3, #4]
   333bc:	mov	r2, r3
   333c0:	ldr	r0, [fp, #-12]
   333c4:	bl	32e10 <flatcc_builder_get_emit_context@@Base+0x3f8>
   333c8:	mov	r3, r0
   333cc:	cmp	r3, #0
   333d0:	beq	333dc <flatcc_emitter@@Base+0xf4>
   333d4:	mvn	r3, #0
   333d8:	b	334f8 <flatcc_emitter@@Base+0x210>
   333dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   333e0:	sub	r2, r3, #1
   333e4:	str	r2, [fp, #-24]	; 0xffffffe8
   333e8:	cmp	r3, #0
   333ec:	bne	333a0 <flatcc_emitter@@Base+0xb8>
   333f0:	b	33498 <flatcc_emitter@@Base+0x1b0>
   333f4:	ldr	r3, [fp, #-12]
   333f8:	ldr	r2, [r3, #20]
   333fc:	ldr	r3, [fp, #4]
   33400:	cmp	r2, r3
   33404:	bcc	33484 <flatcc_emitter@@Base+0x19c>
   33408:	ldr	r3, [fp, #-12]
   3340c:	ldr	r3, [r3, #16]
   33410:	str	r3, [fp, #-8]
   33414:	ldr	r3, [fp, #-12]
   33418:	ldr	r2, [r3, #16]
   3341c:	ldr	r3, [fp, #4]
   33420:	add	r2, r2, r3
   33424:	ldr	r3, [fp, #-12]
   33428:	str	r2, [r3, #16]
   3342c:	ldr	r3, [fp, #-12]
   33430:	ldr	r2, [r3, #20]
   33434:	ldr	r3, [fp, #4]
   33438:	sub	r2, r2, r3
   3343c:	ldr	r3, [fp, #-12]
   33440:	str	r2, [r3, #20]
   33444:	b	334a0 <flatcc_emitter@@Base+0x1b8>
   33448:	ldr	r3, [fp, #-20]	; 0xffffffec
   3344c:	ldr	r1, [r3]
   33450:	ldr	r3, [fp, #-20]	; 0xffffffec
   33454:	ldr	r3, [r3, #4]
   33458:	mov	r2, r3
   3345c:	ldr	r0, [fp, #-12]
   33460:	bl	32f18 <flatcc_builder_get_emit_context@@Base+0x500>
   33464:	mov	r3, r0
   33468:	cmp	r3, #0
   3346c:	beq	33478 <flatcc_emitter@@Base+0x190>
   33470:	mvn	r3, #0
   33474:	b	334f8 <flatcc_emitter@@Base+0x210>
   33478:	ldr	r3, [fp, #-20]	; 0xffffffec
   3347c:	add	r3, r3, #8
   33480:	str	r3, [fp, #-20]	; 0xffffffec
   33484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33488:	sub	r2, r3, #1
   3348c:	str	r2, [fp, #-24]	; 0xffffffe8
   33490:	cmp	r3, #0
   33494:	bne	33448 <flatcc_emitter@@Base+0x160>
   33498:	mov	r3, #0
   3349c:	b	334f8 <flatcc_emitter@@Base+0x210>
   334a0:	b	334e0 <flatcc_emitter@@Base+0x1f8>
   334a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   334a8:	ldr	r1, [r3]
   334ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   334b0:	ldr	r3, [r3, #4]
   334b4:	mov	r2, r3
   334b8:	ldr	r0, [fp, #-8]
   334bc:	bl	14544 <memcpy@plt>
   334c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   334c4:	ldr	r3, [r3, #4]
   334c8:	ldr	r2, [fp, #-8]
   334cc:	add	r3, r2, r3
   334d0:	str	r3, [fp, #-8]
   334d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   334d8:	add	r3, r3, #8
   334dc:	str	r3, [fp, #-20]	; 0xffffffec
   334e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   334e4:	sub	r2, r3, #1
   334e8:	str	r2, [fp, #-24]	; 0xffffffe8
   334ec:	cmp	r3, #0
   334f0:	bne	334a4 <flatcc_emitter@@Base+0x1bc>
   334f4:	mov	r3, #0
   334f8:	mov	r0, r3
   334fc:	sub	sp, fp, #4
   33500:	pop	{fp, pc}

00033504 <flatcc_emitter_copy_buffer@@Base>:
   33504:	push	{fp, lr}
   33508:	add	fp, sp, #4
   3350c:	sub	sp, sp, #24
   33510:	str	r0, [fp, #-16]
   33514:	str	r1, [fp, #-20]	; 0xffffffec
   33518:	str	r2, [fp, #-24]	; 0xffffffe8
   3351c:	ldr	r3, [fp, #-16]
   33520:	ldr	r2, [r3, #24]
   33524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33528:	cmp	r2, r3
   3352c:	bls	33538 <flatcc_emitter_copy_buffer@@Base+0x34>
   33530:	mov	r3, #0
   33534:	b	33638 <flatcc_emitter_copy_buffer@@Base+0x134>
   33538:	ldr	r3, [fp, #-16]
   3353c:	ldr	r3, [r3]
   33540:	cmp	r3, #0
   33544:	bne	33550 <flatcc_emitter_copy_buffer@@Base+0x4c>
   33548:	mov	r3, #0
   3354c:	b	33638 <flatcc_emitter_copy_buffer@@Base+0x134>
   33550:	ldr	r3, [fp, #-16]
   33554:	ldr	r2, [r3]
   33558:	ldr	r3, [fp, #-16]
   3355c:	ldr	r3, [r3, #4]
   33560:	cmp	r2, r3
   33564:	bne	3358c <flatcc_emitter_copy_buffer@@Base+0x88>
   33568:	ldr	r3, [fp, #-16]
   3356c:	ldr	r1, [r3, #8]
   33570:	ldr	r3, [fp, #-16]
   33574:	ldr	r3, [r3, #24]
   33578:	mov	r2, r3
   3357c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33580:	bl	14544 <memcpy@plt>
   33584:	ldr	r3, [fp, #-20]	; 0xffffffec
   33588:	b	33638 <flatcc_emitter_copy_buffer@@Base+0x134>
   3358c:	ldr	r3, [fp, #-16]
   33590:	ldr	r3, [r3, #12]
   33594:	rsb	r3, r3, #2944	; 0xb80
   33598:	str	r3, [fp, #-12]
   3359c:	ldr	r3, [fp, #-16]
   335a0:	ldr	r3, [r3, #8]
   335a4:	ldr	r2, [fp, #-12]
   335a8:	mov	r1, r3
   335ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   335b0:	bl	14544 <memcpy@plt>
   335b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   335b8:	ldr	r3, [fp, #-12]
   335bc:	add	r3, r2, r3
   335c0:	str	r3, [fp, #-20]	; 0xffffffec
   335c4:	ldr	r3, [fp, #-16]
   335c8:	ldr	r3, [r3]
   335cc:	ldr	r3, [r3, #2944]	; 0xb80
   335d0:	str	r3, [fp, #-8]
   335d4:	b	33604 <flatcc_emitter_copy_buffer@@Base+0x100>
   335d8:	ldr	r3, [fp, #-8]
   335dc:	mov	r2, #2944	; 0xb80
   335e0:	mov	r1, r3
   335e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   335e8:	bl	14544 <memcpy@plt>
   335ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   335f0:	add	r3, r3, #2944	; 0xb80
   335f4:	str	r3, [fp, #-20]	; 0xffffffec
   335f8:	ldr	r3, [fp, #-8]
   335fc:	ldr	r3, [r3, #2944]	; 0xb80
   33600:	str	r3, [fp, #-8]
   33604:	ldr	r3, [fp, #-16]
   33608:	ldr	r2, [r3, #4]
   3360c:	ldr	r3, [fp, #-8]
   33610:	cmp	r2, r3
   33614:	bne	335d8 <flatcc_emitter_copy_buffer@@Base+0xd4>
   33618:	ldr	r1, [fp, #-8]
   3361c:	ldr	r3, [fp, #-16]
   33620:	ldr	r3, [r3, #20]
   33624:	rsb	r3, r3, #2944	; 0xb80
   33628:	mov	r2, r3
   3362c:	ldr	r0, [fp, #-20]	; 0xffffffec
   33630:	bl	14544 <memcpy@plt>
   33634:	ldr	r3, [fp, #-20]	; 0xffffffec
   33638:	mov	r0, r3
   3363c:	sub	sp, fp, #4
   33640:	pop	{fp, pc}
   33644:	push	{fp}		; (str fp, [sp, #-4]!)
   33648:	add	fp, sp, #0
   3364c:	sub	sp, sp, #12
   33650:	str	r0, [fp, #-8]
   33654:	ldr	r3, [fp, #-8]
   33658:	mov	r0, r3
   3365c:	add	sp, fp, #0
   33660:	pop	{fp}		; (ldr fp, [sp], #4)
   33664:	bx	lr
   33668:	push	{fp, lr}
   3366c:	add	fp, sp, #4
   33670:	sub	sp, sp, #8
   33674:	str	r0, [fp, #-8]
   33678:	ldr	r3, [fp, #-8]
   3367c:	ldr	r3, [r3]
   33680:	mov	r0, r3
   33684:	bl	33644 <flatcc_emitter_copy_buffer@@Base+0x140>
   33688:	mov	r3, r0
   3368c:	mov	r0, r3
   33690:	sub	sp, fp, #4
   33694:	pop	{fp, pc}
   33698:	push	{fp}		; (str fp, [sp, #-4]!)
   3369c:	add	fp, sp, #0
   336a0:	sub	sp, sp, #12
   336a4:	mov	r3, r0
   336a8:	strh	r3, [fp, #-6]
   336ac:	ldrh	r3, [fp, #-6]
   336b0:	mov	r0, r3
   336b4:	add	sp, fp, #0
   336b8:	pop	{fp}		; (ldr fp, [sp], #4)
   336bc:	bx	lr
   336c0:	push	{fp, lr}
   336c4:	add	fp, sp, #4
   336c8:	sub	sp, sp, #8
   336cc:	str	r0, [fp, #-8]
   336d0:	ldr	r3, [fp, #-8]
   336d4:	ldrh	r3, [r3]
   336d8:	mov	r0, r3
   336dc:	bl	33698 <flatcc_emitter_copy_buffer@@Base+0x194>
   336e0:	mov	r3, r0
   336e4:	mov	r0, r3
   336e8:	sub	sp, fp, #4
   336ec:	pop	{fp, pc}
   336f0:	push	{fp}		; (str fp, [sp, #-4]!)
   336f4:	add	fp, sp, #0
   336f8:	sub	sp, sp, #12
   336fc:	str	r0, [fp, #-8]
   33700:	ldr	r3, [fp, #-8]
   33704:	mov	r0, r3
   33708:	add	sp, fp, #0
   3370c:	pop	{fp}		; (ldr fp, [sp], #4)
   33710:	bx	lr
   33714:	push	{fp}		; (str fp, [sp, #-4]!)
   33718:	add	fp, sp, #0
   3371c:	sub	sp, sp, #12
   33720:	str	r0, [fp, #-8]
   33724:	ldr	r3, [fp, #-8]
   33728:	mov	r0, r3
   3372c:	add	sp, fp, #0
   33730:	pop	{fp}		; (ldr fp, [sp], #4)
   33734:	bx	lr
   33738:	push	{fp, lr}
   3373c:	add	fp, sp, #4
   33740:	sub	sp, sp, #8
   33744:	str	r0, [fp, #-8]
   33748:	ldr	r3, [fp, #-8]
   3374c:	ldr	r3, [r3]
   33750:	mov	r0, r3
   33754:	bl	336f0 <flatcc_emitter_copy_buffer@@Base+0x1ec>
   33758:	mov	r3, r0
   3375c:	mov	r0, r3
   33760:	sub	sp, fp, #4
   33764:	pop	{fp, pc}

00033768 <flatcc_verify_error_string@@Base>:
   33768:	push	{fp}		; (str fp, [sp, #-4]!)
   3376c:	add	fp, sp, #0
   33770:	sub	sp, sp, #12
   33774:	str	r0, [fp, #-8]
   33778:	ldr	r3, [fp, #-8]
   3377c:	cmp	r3, #36	; 0x24
   33780:	addls	pc, pc, r3, lsl #2
   33784:	b	339d8 <flatcc_verify_error_string@@Base+0x270>
   33788:	b	3381c <flatcc_verify_error_string@@Base+0xb4>
   3378c:	b	33828 <flatcc_verify_error_string@@Base+0xc0>
   33790:	b	33834 <flatcc_verify_error_string@@Base+0xcc>
   33794:	b	33840 <flatcc_verify_error_string@@Base+0xd8>
   33798:	b	3384c <flatcc_verify_error_string@@Base+0xe4>
   3379c:	b	33858 <flatcc_verify_error_string@@Base+0xf0>
   337a0:	b	33864 <flatcc_verify_error_string@@Base+0xfc>
   337a4:	b	33870 <flatcc_verify_error_string@@Base+0x108>
   337a8:	b	3387c <flatcc_verify_error_string@@Base+0x114>
   337ac:	b	33888 <flatcc_verify_error_string@@Base+0x120>
   337b0:	b	33894 <flatcc_verify_error_string@@Base+0x12c>
   337b4:	b	338a0 <flatcc_verify_error_string@@Base+0x138>
   337b8:	b	338ac <flatcc_verify_error_string@@Base+0x144>
   337bc:	b	338b8 <flatcc_verify_error_string@@Base+0x150>
   337c0:	b	338c4 <flatcc_verify_error_string@@Base+0x15c>
   337c4:	b	338d0 <flatcc_verify_error_string@@Base+0x168>
   337c8:	b	338dc <flatcc_verify_error_string@@Base+0x174>
   337cc:	b	338e8 <flatcc_verify_error_string@@Base+0x180>
   337d0:	b	338f4 <flatcc_verify_error_string@@Base+0x18c>
   337d4:	b	33900 <flatcc_verify_error_string@@Base+0x198>
   337d8:	b	3390c <flatcc_verify_error_string@@Base+0x1a4>
   337dc:	b	33918 <flatcc_verify_error_string@@Base+0x1b0>
   337e0:	b	33924 <flatcc_verify_error_string@@Base+0x1bc>
   337e4:	b	33930 <flatcc_verify_error_string@@Base+0x1c8>
   337e8:	b	3393c <flatcc_verify_error_string@@Base+0x1d4>
   337ec:	b	33948 <flatcc_verify_error_string@@Base+0x1e0>
   337f0:	b	33954 <flatcc_verify_error_string@@Base+0x1ec>
   337f4:	b	33960 <flatcc_verify_error_string@@Base+0x1f8>
   337f8:	b	3396c <flatcc_verify_error_string@@Base+0x204>
   337fc:	b	33978 <flatcc_verify_error_string@@Base+0x210>
   33800:	b	33984 <flatcc_verify_error_string@@Base+0x21c>
   33804:	b	33990 <flatcc_verify_error_string@@Base+0x228>
   33808:	b	3399c <flatcc_verify_error_string@@Base+0x234>
   3380c:	b	339a8 <flatcc_verify_error_string@@Base+0x240>
   33810:	b	339b4 <flatcc_verify_error_string@@Base+0x24c>
   33814:	b	339c0 <flatcc_verify_error_string@@Base+0x258>
   33818:	b	339cc <flatcc_verify_error_string@@Base+0x264>
   3381c:	ldr	r3, [pc, #460]	; 339f0 <flatcc_verify_error_string@@Base+0x288>
   33820:	add	r3, pc, r3
   33824:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33828:	ldr	r3, [pc, #452]	; 339f4 <flatcc_verify_error_string@@Base+0x28c>
   3382c:	add	r3, pc, r3
   33830:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33834:	ldr	r3, [pc, #444]	; 339f8 <flatcc_verify_error_string@@Base+0x290>
   33838:	add	r3, pc, r3
   3383c:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33840:	ldr	r3, [pc, #436]	; 339fc <flatcc_verify_error_string@@Base+0x294>
   33844:	add	r3, pc, r3
   33848:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   3384c:	ldr	r3, [pc, #428]	; 33a00 <flatcc_verify_error_string@@Base+0x298>
   33850:	add	r3, pc, r3
   33854:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33858:	ldr	r3, [pc, #420]	; 33a04 <flatcc_verify_error_string@@Base+0x29c>
   3385c:	add	r3, pc, r3
   33860:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33864:	ldr	r3, [pc, #412]	; 33a08 <flatcc_verify_error_string@@Base+0x2a0>
   33868:	add	r3, pc, r3
   3386c:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33870:	ldr	r3, [pc, #404]	; 33a0c <flatcc_verify_error_string@@Base+0x2a4>
   33874:	add	r3, pc, r3
   33878:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   3387c:	ldr	r3, [pc, #396]	; 33a10 <flatcc_verify_error_string@@Base+0x2a8>
   33880:	add	r3, pc, r3
   33884:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33888:	ldr	r3, [pc, #388]	; 33a14 <flatcc_verify_error_string@@Base+0x2ac>
   3388c:	add	r3, pc, r3
   33890:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33894:	ldr	r3, [pc, #380]	; 33a18 <flatcc_verify_error_string@@Base+0x2b0>
   33898:	add	r3, pc, r3
   3389c:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   338a0:	ldr	r3, [pc, #372]	; 33a1c <flatcc_verify_error_string@@Base+0x2b4>
   338a4:	add	r3, pc, r3
   338a8:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   338ac:	ldr	r3, [pc, #364]	; 33a20 <flatcc_verify_error_string@@Base+0x2b8>
   338b0:	add	r3, pc, r3
   338b4:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   338b8:	ldr	r3, [pc, #356]	; 33a24 <flatcc_verify_error_string@@Base+0x2bc>
   338bc:	add	r3, pc, r3
   338c0:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   338c4:	ldr	r3, [pc, #348]	; 33a28 <flatcc_verify_error_string@@Base+0x2c0>
   338c8:	add	r3, pc, r3
   338cc:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   338d0:	ldr	r3, [pc, #340]	; 33a2c <flatcc_verify_error_string@@Base+0x2c4>
   338d4:	add	r3, pc, r3
   338d8:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   338dc:	ldr	r3, [pc, #332]	; 33a30 <flatcc_verify_error_string@@Base+0x2c8>
   338e0:	add	r3, pc, r3
   338e4:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   338e8:	ldr	r3, [pc, #324]	; 33a34 <flatcc_verify_error_string@@Base+0x2cc>
   338ec:	add	r3, pc, r3
   338f0:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   338f4:	ldr	r3, [pc, #316]	; 33a38 <flatcc_verify_error_string@@Base+0x2d0>
   338f8:	add	r3, pc, r3
   338fc:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33900:	ldr	r3, [pc, #308]	; 33a3c <flatcc_verify_error_string@@Base+0x2d4>
   33904:	add	r3, pc, r3
   33908:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   3390c:	ldr	r3, [pc, #300]	; 33a40 <flatcc_verify_error_string@@Base+0x2d8>
   33910:	add	r3, pc, r3
   33914:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33918:	ldr	r3, [pc, #292]	; 33a44 <flatcc_verify_error_string@@Base+0x2dc>
   3391c:	add	r3, pc, r3
   33920:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33924:	ldr	r3, [pc, #284]	; 33a48 <flatcc_verify_error_string@@Base+0x2e0>
   33928:	add	r3, pc, r3
   3392c:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33930:	ldr	r3, [pc, #276]	; 33a4c <flatcc_verify_error_string@@Base+0x2e4>
   33934:	add	r3, pc, r3
   33938:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   3393c:	ldr	r3, [pc, #268]	; 33a50 <flatcc_verify_error_string@@Base+0x2e8>
   33940:	add	r3, pc, r3
   33944:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33948:	ldr	r3, [pc, #260]	; 33a54 <flatcc_verify_error_string@@Base+0x2ec>
   3394c:	add	r3, pc, r3
   33950:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33954:	ldr	r3, [pc, #252]	; 33a58 <flatcc_verify_error_string@@Base+0x2f0>
   33958:	add	r3, pc, r3
   3395c:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33960:	ldr	r3, [pc, #244]	; 33a5c <flatcc_verify_error_string@@Base+0x2f4>
   33964:	add	r3, pc, r3
   33968:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   3396c:	ldr	r3, [pc, #236]	; 33a60 <flatcc_verify_error_string@@Base+0x2f8>
   33970:	add	r3, pc, r3
   33974:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33978:	ldr	r3, [pc, #228]	; 33a64 <flatcc_verify_error_string@@Base+0x2fc>
   3397c:	add	r3, pc, r3
   33980:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33984:	ldr	r3, [pc, #220]	; 33a68 <flatcc_verify_error_string@@Base+0x300>
   33988:	add	r3, pc, r3
   3398c:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   33990:	ldr	r3, [pc, #212]	; 33a6c <flatcc_verify_error_string@@Base+0x304>
   33994:	add	r3, pc, r3
   33998:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   3399c:	ldr	r3, [pc, #204]	; 33a70 <flatcc_verify_error_string@@Base+0x308>
   339a0:	add	r3, pc, r3
   339a4:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   339a8:	ldr	r3, [pc, #196]	; 33a74 <flatcc_verify_error_string@@Base+0x30c>
   339ac:	add	r3, pc, r3
   339b0:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   339b4:	ldr	r3, [pc, #188]	; 33a78 <flatcc_verify_error_string@@Base+0x310>
   339b8:	add	r3, pc, r3
   339bc:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   339c0:	ldr	r3, [pc, #180]	; 33a7c <flatcc_verify_error_string@@Base+0x314>
   339c4:	add	r3, pc, r3
   339c8:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   339cc:	ldr	r3, [pc, #172]	; 33a80 <flatcc_verify_error_string@@Base+0x318>
   339d0:	add	r3, pc, r3
   339d4:	b	339e0 <flatcc_verify_error_string@@Base+0x278>
   339d8:	ldr	r3, [pc, #164]	; 33a84 <flatcc_verify_error_string@@Base+0x31c>
   339dc:	add	r3, pc, r3
   339e0:	mov	r0, r3
   339e4:	add	sp, fp, #0
   339e8:	pop	{fp}		; (ldr fp, [sp], #4)
   339ec:	bx	lr
   339f0:	andeq	sp, r1, r4, lsl r9
   339f4:	andeq	sp, r1, ip, lsl #18
   339f8:	andeq	sp, r1, r8, lsl r9
   339fc:	andeq	sp, r1, r0, lsr #18
   33a00:	andeq	sp, r1, r0, lsr r9
   33a04:	andeq	sp, r1, ip, lsr r9
   33a08:	andeq	sp, r1, r4, asr r9
   33a0c:	andeq	sp, r1, r8, ror #18
   33a10:	andeq	sp, r1, r8, ror r9
   33a14:	andeq	sp, r1, r0, lsl #19
   33a18:	andeq	sp, r1, r8, lsl #19
   33a1c:	muleq	r1, r4, r9
   33a20:	muleq	r1, ip, r9
   33a24:	andeq	sp, r1, r8, lsr #19
   33a28:			; <UNDEFINED> instruction: 0x0001d9b8
   33a2c:	andeq	sp, r1, r8, asr #19
   33a30:	andeq	sp, r1, r4, ror #19
   33a34:	andeq	sp, r1, r0, lsl #20
   33a38:	andeq	sp, r1, ip, lsl sl
   33a3c:	andeq	sp, r1, r4, lsr #20
   33a40:	andeq	sp, r1, r0, asr #20
   33a44:	andeq	sp, r1, ip, asr #20
   33a48:	andeq	sp, r1, ip, ror #20
   33a4c:	muleq	r1, r4, sl
   33a50:			; <UNDEFINED> instruction: 0x0001dab4
   33a54:	ldrdeq	sp, [r1], -r4
   33a58:	strdeq	sp, [r1], -r8
   33a5c:	andeq	sp, r1, r0, lsl #22
   33a60:	andeq	sp, r1, r0, lsl fp
   33a64:	andeq	sp, r1, ip, lsl fp
   33a68:	andeq	sp, r1, r8, lsr fp
   33a6c:	andeq	sp, r1, r4, asr fp
   33a70:	andeq	sp, r1, r0, ror #22
   33a74:	andeq	sp, r1, ip, ror fp
   33a78:	muleq	r1, r8, fp
   33a7c:	andeq	sp, r1, r0, asr #23
   33a80:	ldrdeq	sp, [r1], -ip
   33a84:	andeq	sp, r1, r0, ror #23
   33a88:	push	{fp, lr}
   33a8c:	add	fp, sp, #4
   33a90:	sub	sp, sp, #8
   33a94:	str	r0, [fp, #-8]
   33a98:	str	r1, [fp, #-12]
   33a9c:	ldr	r2, [fp, #-8]
   33aa0:	ldr	r3, [fp, #-12]
   33aa4:	add	r3, r2, r3
   33aa8:	mov	r0, r3
   33aac:	bl	33668 <flatcc_emitter_copy_buffer@@Base+0x164>
   33ab0:	mov	r3, r0
   33ab4:	mov	r0, r3
   33ab8:	sub	sp, fp, #4
   33abc:	pop	{fp, pc}
   33ac0:	push	{fp, lr}
   33ac4:	add	fp, sp, #4
   33ac8:	sub	sp, sp, #16
   33acc:	str	r0, [fp, #-16]
   33ad0:	mov	r3, #0
   33ad4:	str	r3, [fp, #-8]
   33ad8:	sub	r3, fp, #8
   33adc:	mov	r2, #4
   33ae0:	ldr	r1, [fp, #-16]
   33ae4:	mov	r0, r3
   33ae8:	bl	145c8 <strncpy@plt>
   33aec:	ldr	r3, [fp, #-8]
   33af0:	mov	r0, r3
   33af4:	bl	33714 <flatcc_emitter_copy_buffer@@Base+0x210>
   33af8:	mov	r3, r0
   33afc:	mov	r0, r3
   33b00:	sub	sp, fp, #4
   33b04:	pop	{fp, pc}
   33b08:	push	{fp, lr}
   33b0c:	add	fp, sp, #4
   33b10:	sub	sp, sp, #8
   33b14:	str	r0, [fp, #-8]
   33b18:	str	r1, [fp, #-12]
   33b1c:	ldr	r2, [fp, #-8]
   33b20:	ldr	r3, [fp, #-12]
   33b24:	add	r3, r2, r3
   33b28:	mov	r0, r3
   33b2c:	bl	33738 <flatcc_emitter_copy_buffer@@Base+0x234>
   33b30:	mov	r3, r0
   33b34:	mov	r0, r3
   33b38:	sub	sp, fp, #4
   33b3c:	pop	{fp, pc}
   33b40:	push	{fp, lr}
   33b44:	add	fp, sp, #4
   33b48:	sub	sp, sp, #8
   33b4c:	str	r0, [fp, #-8]
   33b50:	str	r1, [fp, #-12]
   33b54:	ldr	r2, [fp, #-8]
   33b58:	ldr	r3, [fp, #-12]
   33b5c:	add	r3, r2, r3
   33b60:	mov	r0, r3
   33b64:	bl	336c0 <flatcc_emitter_copy_buffer@@Base+0x1bc>
   33b68:	mov	r3, r0
   33b6c:	mov	r0, r3
   33b70:	sub	sp, fp, #4
   33b74:	pop	{fp, pc}
   33b78:	push	{fp}		; (str fp, [sp, #-4]!)
   33b7c:	add	fp, sp, #0
   33b80:	sub	sp, sp, #28
   33b84:	str	r0, [fp, #-16]
   33b88:	str	r1, [fp, #-20]	; 0xffffffec
   33b8c:	str	r2, [fp, #-24]	; 0xffffffe8
   33b90:	ldr	r2, [fp, #-20]	; 0xffffffec
   33b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33b98:	add	r3, r2, r3
   33b9c:	str	r3, [fp, #-8]
   33ba0:	ldr	r2, [fp, #-8]
   33ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ba8:	cmp	r2, r3
   33bac:	bls	33bdc <flatcc_verify_error_string@@Base+0x474>
   33bb0:	ldr	r3, [fp, #-8]
   33bb4:	add	r2, r3, #4
   33bb8:	ldr	r3, [fp, #-16]
   33bbc:	cmp	r2, r3
   33bc0:	bhi	33bdc <flatcc_verify_error_string@@Base+0x474>
   33bc4:	ldr	r3, [fp, #-8]
   33bc8:	and	r3, r3, #3
   33bcc:	cmp	r3, #0
   33bd0:	bne	33bdc <flatcc_verify_error_string@@Base+0x474>
   33bd4:	mov	r3, #1
   33bd8:	b	33be0 <flatcc_verify_error_string@@Base+0x478>
   33bdc:	mov	r3, #0
   33be0:	mov	r0, r3
   33be4:	add	sp, fp, #0
   33be8:	pop	{fp}		; (ldr fp, [sp], #4)
   33bec:	bx	lr
   33bf0:	push	{fp}		; (str fp, [sp, #-4]!)
   33bf4:	add	fp, sp, #0
   33bf8:	sub	sp, sp, #28
   33bfc:	str	r0, [fp, #-16]
   33c00:	str	r1, [fp, #-20]	; 0xffffffec
   33c04:	str	r2, [fp, #-24]	; 0xffffffe8
   33c08:	strh	r3, [fp, #-26]	; 0xffffffe6
   33c0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   33c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33c14:	add	r3, r2, r3
   33c18:	str	r3, [fp, #-8]
   33c1c:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   33c20:	cmp	r3, #4
   33c24:	movcs	r3, r3
   33c28:	movcc	r3, #4
   33c2c:	strh	r3, [fp, #-26]	; 0xffffffe6
   33c30:	ldr	r2, [fp, #-8]
   33c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   33c38:	cmp	r2, r3
   33c3c:	bls	33c7c <flatcc_verify_error_string@@Base+0x514>
   33c40:	ldr	r3, [fp, #-8]
   33c44:	add	r2, r3, #4
   33c48:	ldr	r3, [fp, #-16]
   33c4c:	cmp	r2, r3
   33c50:	bhi	33c7c <flatcc_verify_error_string@@Base+0x514>
   33c54:	ldr	r3, [fp, #-8]
   33c58:	add	r2, r3, #4
   33c5c:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   33c60:	sub	r3, r3, #1
   33c64:	orr	r3, r3, #3
   33c68:	and	r3, r3, r2
   33c6c:	cmp	r3, #0
   33c70:	bne	33c7c <flatcc_verify_error_string@@Base+0x514>
   33c74:	mov	r3, #1
   33c78:	b	33c80 <flatcc_verify_error_string@@Base+0x518>
   33c7c:	mov	r3, #0
   33c80:	mov	r0, r3
   33c84:	add	sp, fp, #0
   33c88:	pop	{fp}		; (ldr fp, [sp], #4)
   33c8c:	bx	lr
   33c90:	push	{fp}		; (str fp, [sp, #-4]!)
   33c94:	add	fp, sp, #0
   33c98:	sub	sp, sp, #36	; 0x24
   33c9c:	str	r0, [fp, #-24]	; 0xffffffe8
   33ca0:	str	r1, [fp, #-28]	; 0xffffffe4
   33ca4:	str	r2, [fp, #-32]	; 0xffffffe0
   33ca8:	str	r3, [fp, #-36]	; 0xffffffdc
   33cac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33cb0:	cmp	r3, #0
   33cb4:	beq	33cd0 <flatcc_verify_error_string@@Base+0x568>
   33cb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33cbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33cc0:	add	r2, r2, r3
   33cc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33cc8:	cmp	r2, r3
   33ccc:	bls	33cd8 <flatcc_verify_error_string@@Base+0x570>
   33cd0:	mov	r3, #18
   33cd4:	b	33d98 <flatcc_verify_error_string@@Base+0x630>
   33cd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33ce0:	add	r3, r2, r3
   33ce4:	str	r3, [fp, #-28]	; 0xffffffe4
   33ce8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33cec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33cf0:	add	r2, r2, r3
   33cf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33cf8:	cmp	r2, r3
   33cfc:	movcs	r3, #1
   33d00:	movcc	r3, #0
   33d04:	uxtb	r3, r3
   33d08:	str	r3, [fp, #-8]
   33d0c:	ldr	r3, [fp, #-8]
   33d10:	cmp	r3, #0
   33d14:	bne	33d20 <flatcc_verify_error_string@@Base+0x5b8>
   33d18:	mov	r3, #10
   33d1c:	b	33d98 <flatcc_verify_error_string@@Base+0x630>
   33d20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33d24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33d28:	add	r2, r2, r3
   33d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33d30:	cmp	r2, r3
   33d34:	movls	r3, #1
   33d38:	movhi	r3, #0
   33d3c:	uxtb	r3, r3
   33d40:	str	r3, [fp, #-12]
   33d44:	ldr	r3, [fp, #-12]
   33d48:	cmp	r3, #0
   33d4c:	bne	33d58 <flatcc_verify_error_string@@Base+0x5f0>
   33d50:	mov	r3, #9
   33d54:	b	33d98 <flatcc_verify_error_string@@Base+0x630>
   33d58:	ldrh	r3, [fp, #4]
   33d5c:	sub	r3, r3, #1
   33d60:	mov	r2, r3
   33d64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33d68:	and	r3, r3, r2
   33d6c:	cmp	r3, #0
   33d70:	moveq	r3, #1
   33d74:	movne	r3, #0
   33d78:	uxtb	r3, r3
   33d7c:	str	r3, [fp, #-16]
   33d80:	ldr	r3, [fp, #-16]
   33d84:	cmp	r3, #0
   33d88:	bne	33d94 <flatcc_verify_error_string@@Base+0x62c>
   33d8c:	mov	r3, #11
   33d90:	b	33d98 <flatcc_verify_error_string@@Base+0x630>
   33d94:	mov	r3, #0
   33d98:	mov	r0, r3
   33d9c:	add	sp, fp, #0
   33da0:	pop	{fp}		; (ldr fp, [sp], #4)
   33da4:	bx	lr
   33da8:	push	{fp, lr}
   33dac:	add	fp, sp, #4
   33db0:	sub	sp, sp, #16
   33db4:	str	r0, [fp, #-16]
   33db8:	mov	r3, r1
   33dbc:	strh	r3, [fp, #-18]	; 0xffffffee
   33dc0:	ldrh	r3, [fp, #-18]	; 0xffffffee
   33dc4:	add	r3, r3, #2
   33dc8:	uxth	r3, r3
   33dcc:	lsl	r3, r3, #1
   33dd0:	strh	r3, [fp, #-6]
   33dd4:	ldr	r3, [fp, #-16]
   33dd8:	ldrh	r3, [r3, #22]
   33ddc:	ldrh	r2, [fp, #-6]
   33de0:	cmp	r2, r3
   33de4:	bcc	33df0 <flatcc_verify_error_string@@Base+0x688>
   33de8:	mov	r3, #0
   33dec:	b	33e0c <flatcc_verify_error_string@@Base+0x6a4>
   33df0:	ldr	r3, [fp, #-16]
   33df4:	ldr	r3, [r3, #12]
   33df8:	ldrh	r2, [fp, #-6]
   33dfc:	mov	r1, r2
   33e00:	mov	r0, r3
   33e04:	bl	33b40 <flatcc_verify_error_string@@Base+0x3d8>
   33e08:	mov	r3, r0
   33e0c:	mov	r0, r3
   33e10:	sub	sp, fp, #4
   33e14:	pop	{fp, pc}
   33e18:	push	{fp, lr}
   33e1c:	add	fp, sp, #4
   33e20:	sub	sp, sp, #16
   33e24:	str	r0, [fp, #-16]
   33e28:	mov	r3, r1
   33e2c:	strh	r3, [fp, #-18]	; 0xffffffee
   33e30:	ldrh	r3, [fp, #-18]	; 0xffffffee
   33e34:	mov	r1, r3
   33e38:	ldr	r0, [fp, #-16]
   33e3c:	bl	33da8 <flatcc_verify_error_string@@Base+0x640>
   33e40:	mov	r3, r0
   33e44:	strh	r3, [fp, #-6]
   33e48:	ldrh	r3, [fp, #-6]
   33e4c:	cmp	r3, #0
   33e50:	beq	33e74 <flatcc_verify_error_string@@Base+0x70c>
   33e54:	ldr	r3, [fp, #-16]
   33e58:	ldr	r2, [r3]
   33e5c:	ldr	r3, [fp, #-16]
   33e60:	ldr	r1, [r3, #16]
   33e64:	ldrh	r3, [fp, #-6]
   33e68:	add	r3, r1, r3
   33e6c:	add	r3, r2, r3
   33e70:	b	33e78 <flatcc_verify_error_string@@Base+0x710>
   33e74:	mov	r3, #0
   33e78:	mov	r0, r3
   33e7c:	sub	sp, fp, #4
   33e80:	pop	{fp, pc}
   33e84:	push	{fp, lr}
   33e88:	add	fp, sp, #4
   33e8c:	sub	sp, sp, #48	; 0x30
   33e90:	str	r0, [fp, #-40]	; 0xffffffd8
   33e94:	str	r2, [fp, #-48]	; 0xffffffd0
   33e98:	str	r3, [fp, #-52]	; 0xffffffcc
   33e9c:	strh	r1, [fp, #-42]	; 0xffffffd6
   33ea0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33ea4:	ldr	r3, [r3]
   33ea8:	str	r3, [fp, #-8]
   33eac:	ldrh	r3, [fp, #-42]	; 0xffffffd6
   33eb0:	mov	r1, r3
   33eb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   33eb8:	bl	33da8 <flatcc_verify_error_string@@Base+0x640>
   33ebc:	mov	r3, r0
   33ec0:	strh	r3, [fp, #-10]
   33ec4:	ldrh	r3, [fp, #-10]
   33ec8:	cmp	r3, #0
   33ecc:	bne	33f04 <flatcc_verify_error_string@@Base+0x79c>
   33ed0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   33ed4:	cmp	r3, #0
   33ed8:	moveq	r3, #1
   33edc:	movne	r3, #0
   33ee0:	uxtb	r3, r3
   33ee4:	str	r3, [fp, #-16]
   33ee8:	ldr	r3, [fp, #-16]
   33eec:	cmp	r3, #0
   33ef0:	bne	33efc <flatcc_verify_error_string@@Base+0x794>
   33ef4:	mov	r3, #4
   33ef8:	b	33fcc <flatcc_verify_error_string@@Base+0x864>
   33efc:	mov	r3, #0
   33f00:	b	33fcc <flatcc_verify_error_string@@Base+0x864>
   33f04:	ldrh	r3, [fp, #-10]
   33f08:	str	r3, [fp, #-20]	; 0xffffffec
   33f0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   33f10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   33f14:	add	r3, r2, r3
   33f18:	str	r3, [fp, #-24]	; 0xffffffe8
   33f1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33f20:	ldrh	r3, [r3, #20]
   33f24:	mov	r2, r3
   33f28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33f2c:	cmp	r2, r3
   33f30:	movcs	r3, #1
   33f34:	movcc	r3, #0
   33f38:	uxtb	r3, r3
   33f3c:	str	r3, [fp, #-28]	; 0xffffffe4
   33f40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33f44:	cmp	r3, #0
   33f48:	bne	33f54 <flatcc_verify_error_string@@Base+0x7ec>
   33f4c:	mov	r3, #13
   33f50:	b	33fcc <flatcc_verify_error_string@@Base+0x864>
   33f54:	mov	r3, #1
   33f58:	str	r3, [fp, #-32]	; 0xffffffe0
   33f5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33f60:	cmp	r3, #0
   33f64:	bne	33f70 <flatcc_verify_error_string@@Base+0x808>
   33f68:	mov	r3, #14
   33f6c:	b	33fcc <flatcc_verify_error_string@@Base+0x864>
   33f70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33f74:	ldr	r2, [r3, #16]
   33f78:	ldr	r3, [fp, #-8]
   33f7c:	add	r3, r2, r3
   33f80:	ldr	r2, [fp, #-20]	; 0xffffffec
   33f84:	add	r3, r2, r3
   33f88:	str	r3, [fp, #-20]	; 0xffffffec
   33f8c:	ldrh	r3, [fp, #4]
   33f90:	sub	r3, r3, #1
   33f94:	mov	r2, r3
   33f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   33f9c:	and	r3, r3, r2
   33fa0:	cmp	r3, #0
   33fa4:	moveq	r3, #1
   33fa8:	movne	r3, #0
   33fac:	uxtb	r3, r3
   33fb0:	str	r3, [fp, #-36]	; 0xffffffdc
   33fb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33fb8:	cmp	r3, #0
   33fbc:	bne	33fc8 <flatcc_verify_error_string@@Base+0x860>
   33fc0:	mov	r3, #12
   33fc4:	b	33fcc <flatcc_verify_error_string@@Base+0x864>
   33fc8:	mov	r3, #0
   33fcc:	mov	r0, r3
   33fd0:	sub	sp, fp, #4
   33fd4:	pop	{fp, pc}
   33fd8:	push	{fp, lr}
   33fdc:	add	fp, sp, #4
   33fe0:	sub	sp, sp, #40	; 0x28
   33fe4:	str	r0, [fp, #-32]	; 0xffffffe0
   33fe8:	str	r2, [fp, #-40]	; 0xffffffd8
   33fec:	str	r3, [fp, #-44]	; 0xffffffd4
   33ff0:	strh	r1, [fp, #-34]	; 0xffffffde
   33ff4:	ldrh	r3, [fp, #-34]	; 0xffffffde
   33ff8:	mov	r1, r3
   33ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34000:	bl	33da8 <flatcc_verify_error_string@@Base+0x640>
   34004:	mov	r3, r0
   34008:	strh	r3, [fp, #-6]
   3400c:	ldrh	r3, [fp, #-6]
   34010:	cmp	r3, #0
   34014:	bne	34040 <flatcc_verify_error_string@@Base+0x8d8>
   34018:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3401c:	mov	r2, #0
   34020:	str	r2, [r3]
   34024:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34028:	cmp	r3, #0
   3402c:	beq	34038 <flatcc_verify_error_string@@Base+0x8d0>
   34030:	mov	r3, #4
   34034:	b	340fc <flatcc_verify_error_string@@Base+0x994>
   34038:	mov	r3, #0
   3403c:	b	340fc <flatcc_verify_error_string@@Base+0x994>
   34040:	ldrh	r3, [fp, #-6]
   34044:	str	r3, [fp, #-12]
   34048:	ldr	r3, [fp, #-12]
   3404c:	add	r3, r3, #4
   34050:	str	r3, [fp, #-16]
   34054:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34058:	ldrh	r3, [r3, #20]
   3405c:	mov	r2, r3
   34060:	ldr	r3, [fp, #-16]
   34064:	cmp	r2, r3
   34068:	movcs	r3, #1
   3406c:	movcc	r3, #0
   34070:	uxtb	r3, r3
   34074:	str	r3, [fp, #-20]	; 0xffffffec
   34078:	ldr	r3, [fp, #-20]	; 0xffffffec
   3407c:	cmp	r3, #0
   34080:	bne	3408c <flatcc_verify_error_string@@Base+0x924>
   34084:	mov	r3, #13
   34088:	b	340fc <flatcc_verify_error_string@@Base+0x994>
   3408c:	mov	r3, #1
   34090:	str	r3, [fp, #-24]	; 0xffffffe8
   34094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34098:	cmp	r3, #0
   3409c:	bne	340a8 <flatcc_verify_error_string@@Base+0x940>
   340a0:	mov	r3, #14
   340a4:	b	340fc <flatcc_verify_error_string@@Base+0x994>
   340a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   340ac:	ldr	r3, [r3, #16]
   340b0:	ldr	r2, [fp, #-12]
   340b4:	add	r3, r2, r3
   340b8:	str	r3, [fp, #-12]
   340bc:	ldr	r3, [fp, #-12]
   340c0:	and	r3, r3, #3
   340c4:	cmp	r3, #0
   340c8:	moveq	r3, #1
   340cc:	movne	r3, #0
   340d0:	uxtb	r3, r3
   340d4:	str	r3, [fp, #-28]	; 0xffffffe4
   340d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   340dc:	cmp	r3, #0
   340e0:	bne	340ec <flatcc_verify_error_string@@Base+0x984>
   340e4:	mov	r3, #12
   340e8:	b	340fc <flatcc_verify_error_string@@Base+0x994>
   340ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   340f0:	ldr	r2, [fp, #-12]
   340f4:	str	r2, [r3]
   340f8:	mov	r3, #0
   340fc:	mov	r0, r3
   34100:	sub	sp, fp, #4
   34104:	pop	{fp, pc}
   34108:	push	{fp, lr}
   3410c:	add	fp, sp, #4
   34110:	sub	sp, sp, #32
   34114:	str	r0, [fp, #-24]	; 0xffffffe8
   34118:	str	r1, [fp, #-28]	; 0xffffffe4
   3411c:	str	r2, [fp, #-32]	; 0xffffffe0
   34120:	str	r3, [fp, #-36]	; 0xffffffdc
   34124:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34128:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3412c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34130:	bl	33b78 <flatcc_verify_error_string@@Base+0x410>
   34134:	str	r0, [fp, #-8]
   34138:	ldr	r3, [fp, #-8]
   3413c:	cmp	r3, #0
   34140:	bne	3414c <flatcc_verify_error_string@@Base+0x9e4>
   34144:	mov	r3, #17
   34148:	b	341f8 <flatcc_verify_error_string@@Base+0xa90>
   3414c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34150:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34154:	add	r3, r2, r3
   34158:	str	r3, [fp, #-32]	; 0xffffffe0
   3415c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34160:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34164:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   34168:	str	r0, [fp, #-12]
   3416c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34170:	add	r3, r3, #4
   34174:	str	r3, [fp, #-32]	; 0xffffffe0
   34178:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3417c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34180:	sub	r2, r2, r3
   34184:	ldr	r3, [fp, #-12]
   34188:	add	r3, r3, #1
   3418c:	cmp	r2, r3
   34190:	movcs	r3, #1
   34194:	movcc	r3, #0
   34198:	uxtb	r3, r3
   3419c:	str	r3, [fp, #-16]
   341a0:	ldr	r3, [fp, #-16]
   341a4:	cmp	r3, #0
   341a8:	bne	341b4 <flatcc_verify_error_string@@Base+0xa4c>
   341ac:	mov	r3, #8
   341b0:	b	341f8 <flatcc_verify_error_string@@Base+0xa90>
   341b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   341b8:	ldr	r3, [fp, #-12]
   341bc:	add	r3, r2, r3
   341c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   341c4:	add	r3, r2, r3
   341c8:	ldrb	r3, [r3]
   341cc:	cmp	r3, #0
   341d0:	moveq	r3, #1
   341d4:	movne	r3, #0
   341d8:	uxtb	r3, r3
   341dc:	str	r3, [fp, #-20]	; 0xffffffec
   341e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   341e4:	cmp	r3, #0
   341e8:	bne	341f4 <flatcc_verify_error_string@@Base+0xa8c>
   341ec:	mov	r3, #7
   341f0:	b	341f8 <flatcc_verify_error_string@@Base+0xa90>
   341f4:	mov	r3, #0
   341f8:	mov	r0, r3
   341fc:	sub	sp, fp, #4
   34200:	pop	{fp, pc}
   34204:	push	{fp, lr}
   34208:	add	fp, sp, #4
   3420c:	sub	sp, sp, #32
   34210:	str	r0, [fp, #-24]	; 0xffffffe8
   34214:	str	r1, [fp, #-28]	; 0xffffffe4
   34218:	str	r2, [fp, #-32]	; 0xffffffe0
   3421c:	str	r3, [fp, #-36]	; 0xffffffdc
   34220:	ldrh	r3, [fp, #8]
   34224:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34228:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3422c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   34230:	bl	33bf0 <flatcc_verify_error_string@@Base+0x488>
   34234:	str	r0, [fp, #-8]
   34238:	ldr	r3, [fp, #-8]
   3423c:	cmp	r3, #0
   34240:	bne	3424c <flatcc_verify_error_string@@Base+0xae4>
   34244:	mov	r3, #16
   34248:	b	342ec <flatcc_verify_error_string@@Base+0xb84>
   3424c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34250:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34254:	add	r3, r2, r3
   34258:	str	r3, [fp, #-32]	; 0xffffffe0
   3425c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34264:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   34268:	str	r0, [fp, #-12]
   3426c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34270:	add	r3, r3, #4
   34274:	str	r3, [fp, #-32]	; 0xffffffe0
   34278:	ldr	r2, [fp, #-12]
   3427c:	ldr	r3, [fp, #12]
   34280:	cmp	r2, r3
   34284:	movls	r3, #1
   34288:	movhi	r3, #0
   3428c:	uxtb	r3, r3
   34290:	str	r3, [fp, #-16]
   34294:	ldr	r3, [fp, #-16]
   34298:	cmp	r3, #0
   3429c:	bne	342a8 <flatcc_verify_error_string@@Base+0xb40>
   342a0:	mov	r3, #25
   342a4:	b	342ec <flatcc_verify_error_string@@Base+0xb84>
   342a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   342ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   342b0:	sub	r2, r2, r3
   342b4:	ldr	r3, [fp, #-12]
   342b8:	ldr	r1, [fp, #4]
   342bc:	mul	r3, r1, r3
   342c0:	cmp	r2, r3
   342c4:	movcs	r3, #1
   342c8:	movcc	r3, #0
   342cc:	uxtb	r3, r3
   342d0:	str	r3, [fp, #-20]	; 0xffffffec
   342d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   342d8:	cmp	r3, #0
   342dc:	bne	342e8 <flatcc_verify_error_string@@Base+0xb80>
   342e0:	mov	r3, #26
   342e4:	b	342ec <flatcc_verify_error_string@@Base+0xb84>
   342e8:	mov	r3, #0
   342ec:	mov	r0, r3
   342f0:	sub	sp, fp, #4
   342f4:	pop	{fp, pc}
   342f8:	push	{fp, lr}
   342fc:	add	fp, sp, #4
   34300:	sub	sp, sp, #40	; 0x28
   34304:	str	r0, [fp, #-16]
   34308:	str	r1, [fp, #-20]	; 0xffffffec
   3430c:	str	r2, [fp, #-24]	; 0xffffffe8
   34310:	str	r3, [fp, #-28]	; 0xffffffe4
   34314:	mvn	r3, #-1073741824	; 0xc0000000
   34318:	str	r3, [sp, #8]
   3431c:	mov	r3, #4
   34320:	str	r3, [sp, #4]
   34324:	mov	r3, #4
   34328:	str	r3, [sp]
   3432c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34330:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34334:	ldr	r1, [fp, #-20]	; 0xffffffec
   34338:	ldr	r0, [fp, #-16]
   3433c:	bl	34204 <flatcc_verify_error_string@@Base+0xa9c>
   34340:	mov	r3, r0
   34344:	cmp	r3, #0
   34348:	beq	34380 <flatcc_verify_error_string@@Base+0xc18>
   3434c:	mvn	r3, #-1073741824	; 0xc0000000
   34350:	str	r3, [sp, #8]
   34354:	mov	r3, #4
   34358:	str	r3, [sp, #4]
   3435c:	mov	r3, #4
   34360:	str	r3, [sp]
   34364:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34368:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3436c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34370:	ldr	r0, [fp, #-16]
   34374:	bl	34204 <flatcc_verify_error_string@@Base+0xa9c>
   34378:	mov	r3, r0
   3437c:	b	34438 <flatcc_verify_error_string@@Base+0xcd0>
   34380:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34384:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34388:	add	r3, r2, r3
   3438c:	str	r3, [fp, #-24]	; 0xffffffe8
   34390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34394:	ldr	r0, [fp, #-16]
   34398:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   3439c:	str	r0, [fp, #-12]
   343a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   343a4:	add	r3, r3, #4
   343a8:	str	r3, [fp, #-24]	; 0xffffffe8
   343ac:	mov	r3, #0
   343b0:	str	r3, [fp, #-8]
   343b4:	b	34424 <flatcc_verify_error_string@@Base+0xcbc>
   343b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   343bc:	ldr	r0, [fp, #-16]
   343c0:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   343c4:	mov	r3, r0
   343c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   343cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   343d0:	ldr	r0, [fp, #-16]
   343d4:	bl	34108 <flatcc_verify_error_string@@Base+0x9a0>
   343d8:	mov	r3, r0
   343dc:	cmp	r3, #0
   343e0:	beq	3440c <flatcc_verify_error_string@@Base+0xca4>
   343e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   343e8:	ldr	r0, [fp, #-16]
   343ec:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   343f0:	mov	r3, r0
   343f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   343f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   343fc:	ldr	r0, [fp, #-16]
   34400:	bl	34108 <flatcc_verify_error_string@@Base+0x9a0>
   34404:	mov	r3, r0
   34408:	b	34438 <flatcc_verify_error_string@@Base+0xcd0>
   3440c:	ldr	r3, [fp, #-8]
   34410:	add	r3, r3, #1
   34414:	str	r3, [fp, #-8]
   34418:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3441c:	add	r3, r3, #4
   34420:	str	r3, [fp, #-24]	; 0xffffffe8
   34424:	ldr	r2, [fp, #-8]
   34428:	ldr	r3, [fp, #-12]
   3442c:	cmp	r2, r3
   34430:	bcc	343b8 <flatcc_verify_error_string@@Base+0xc50>
   34434:	mov	r3, #0
   34438:	mov	r0, r3
   3443c:	sub	sp, fp, #4
   34440:	pop	{fp, pc}
   34444:	push	{r4, fp, lr}
   34448:	add	fp, sp, #8
   3444c:	sub	sp, sp, #84	; 0x54
   34450:	str	r0, [fp, #-80]	; 0xffffffb0
   34454:	str	r1, [fp, #-84]	; 0xffffffac
   34458:	str	r2, [fp, #-88]	; 0xffffffa8
   3445c:	str	r3, [fp, #-92]	; 0xffffffa4
   34460:	ldr	r3, [fp, #4]
   34464:	sub	r3, r3, #1
   34468:	str	r3, [fp, #-68]	; 0xffffffbc
   3446c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34470:	str	r3, [fp, #-16]
   34474:	ldr	r3, [fp, #-16]
   34478:	cmp	r3, #0
   3447c:	bne	34488 <flatcc_verify_error_string@@Base+0xd20>
   34480:	mov	r3, #3
   34484:	b	34690 <flatcc_verify_error_string@@Base+0xf28>
   34488:	ldr	r2, [fp, #-92]	; 0xffffffa4
   3448c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   34490:	ldr	r0, [fp, #-84]	; 0xffffffac
   34494:	bl	33b78 <flatcc_verify_error_string@@Base+0x410>
   34498:	str	r0, [fp, #-20]	; 0xffffffec
   3449c:	ldr	r3, [fp, #-20]	; 0xffffffec
   344a0:	cmp	r3, #0
   344a4:	bne	344b0 <flatcc_verify_error_string@@Base+0xd48>
   344a8:	mov	r3, #15
   344ac:	b	34690 <flatcc_verify_error_string@@Base+0xf28>
   344b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   344b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   344b8:	add	r3, r2, r3
   344bc:	str	r3, [fp, #-60]	; 0xffffffc4
   344c0:	ldr	r4, [fp, #-60]	; 0xffffffc4
   344c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   344c8:	mov	r1, r3
   344cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   344d0:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   344d4:	mov	r3, r0
   344d8:	sub	r3, r4, r3
   344dc:	str	r3, [fp, #-24]	; 0xffffffe8
   344e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   344e4:	cmp	r3, #0
   344e8:	blt	34504 <flatcc_verify_error_string@@Base+0xd9c>
   344ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   344f0:	and	r3, r3, #1
   344f4:	cmp	r3, #0
   344f8:	bne	34504 <flatcc_verify_error_string@@Base+0xd9c>
   344fc:	mov	r3, #1
   34500:	b	34508 <flatcc_verify_error_string@@Base+0xda0>
   34504:	mov	r3, #0
   34508:	str	r3, [fp, #-28]	; 0xffffffe4
   3450c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34510:	cmp	r3, #0
   34514:	bne	34520 <flatcc_verify_error_string@@Base+0xdb8>
   34518:	mov	r3, #29
   3451c:	b	34690 <flatcc_verify_error_string@@Base+0xf28>
   34520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34524:	add	r2, r3, #2
   34528:	ldr	r3, [fp, #-84]	; 0xffffffac
   3452c:	cmp	r2, r3
   34530:	movls	r3, #1
   34534:	movhi	r3, #0
   34538:	uxtb	r3, r3
   3453c:	str	r3, [fp, #-32]	; 0xffffffe0
   34540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34544:	cmp	r3, #0
   34548:	bne	34554 <flatcc_verify_error_string@@Base+0xdec>
   3454c:	mov	r3, #27
   34550:	b	34690 <flatcc_verify_error_string@@Base+0xf28>
   34554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34558:	ldr	r0, [fp, #-80]	; 0xffffffb0
   3455c:	bl	33b40 <flatcc_verify_error_string@@Base+0x3d8>
   34560:	mov	r3, r0
   34564:	strh	r3, [fp, #-54]	; 0xffffffca
   34568:	ldrh	r3, [fp, #-54]	; 0xffffffca
   3456c:	mov	r2, r3
   34570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34574:	add	r3, r2, r3
   34578:	str	r3, [fp, #-36]	; 0xffffffdc
   3457c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   34580:	ldr	r3, [fp, #-84]	; 0xffffffac
   34584:	cmp	r2, r3
   34588:	bhi	345a4 <flatcc_verify_error_string@@Base+0xe3c>
   3458c:	ldrh	r3, [fp, #-54]	; 0xffffffca
   34590:	and	r3, r3, #1
   34594:	cmp	r3, #0
   34598:	bne	345a4 <flatcc_verify_error_string@@Base+0xe3c>
   3459c:	mov	r3, #1
   345a0:	b	345a8 <flatcc_verify_error_string@@Base+0xe40>
   345a4:	mov	r3, #0
   345a8:	str	r3, [fp, #-40]	; 0xffffffd8
   345ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   345b0:	cmp	r3, #0
   345b4:	bne	345c0 <flatcc_verify_error_string@@Base+0xe58>
   345b8:	mov	r3, #30
   345bc:	b	34690 <flatcc_verify_error_string@@Base+0xf28>
   345c0:	mov	r3, #1
   345c4:	str	r3, [fp, #-44]	; 0xffffffd4
   345c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   345cc:	cmp	r3, #0
   345d0:	bne	345dc <flatcc_verify_error_string@@Base+0xe74>
   345d4:	mov	r3, #31
   345d8:	b	34690 <flatcc_verify_error_string@@Base+0xf28>
   345dc:	ldrh	r3, [fp, #-54]	; 0xffffffca
   345e0:	cmp	r3, #3
   345e4:	movhi	r3, #1
   345e8:	movls	r3, #0
   345ec:	uxtb	r3, r3
   345f0:	str	r3, [fp, #-48]	; 0xffffffd0
   345f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   345f8:	cmp	r3, #0
   345fc:	bne	34608 <flatcc_verify_error_string@@Base+0xea0>
   34600:	mov	r3, #28
   34604:	b	34690 <flatcc_verify_error_string@@Base+0xf28>
   34608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3460c:	add	r3, r3, #2
   34610:	mov	r1, r3
   34614:	ldr	r0, [fp, #-80]	; 0xffffffb0
   34618:	bl	33b40 <flatcc_verify_error_string@@Base+0x3d8>
   3461c:	mov	r3, r0
   34620:	strh	r3, [fp, #-56]	; 0xffffffc8
   34624:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34628:	ldr	r2, [fp, #-84]	; 0xffffffac
   3462c:	sub	r3, r2, r3
   34630:	ldrh	r2, [fp, #-56]	; 0xffffffc8
   34634:	cmp	r3, r2
   34638:	movcs	r3, #1
   3463c:	movcc	r3, #0
   34640:	uxtb	r3, r3
   34644:	str	r3, [fp, #-52]	; 0xffffffcc
   34648:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3464c:	cmp	r3, #0
   34650:	bne	3465c <flatcc_verify_error_string@@Base+0xef4>
   34654:	mov	r3, #20
   34658:	b	34690 <flatcc_verify_error_string@@Base+0xf28>
   3465c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   34660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34664:	add	r3, r2, r3
   34668:	str	r3, [fp, #-64]	; 0xffffffc0
   3466c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   34670:	str	r3, [fp, #-76]	; 0xffffffb4
   34674:	ldr	r3, [fp, #-84]	; 0xffffffac
   34678:	str	r3, [fp, #-72]	; 0xffffffb8
   3467c:	sub	r2, fp, #76	; 0x4c
   34680:	ldr	r3, [fp, #8]
   34684:	mov	r0, r2
   34688:	blx	r3
   3468c:	mov	r3, r0
   34690:	mov	r0, r3
   34694:	sub	sp, fp, #8
   34698:	pop	{r4, fp, pc}
   3469c:	push	{fp, lr}
   346a0:	add	fp, sp, #4
   346a4:	sub	sp, sp, #48	; 0x30
   346a8:	str	r0, [fp, #-24]	; 0xffffffe8
   346ac:	str	r1, [fp, #-28]	; 0xffffffe4
   346b0:	str	r2, [fp, #-32]	; 0xffffffe0
   346b4:	str	r3, [fp, #-36]	; 0xffffffdc
   346b8:	ldr	r3, [fp, #4]
   346bc:	sub	r2, r3, #1
   346c0:	str	r2, [fp, #4]
   346c4:	cmp	r3, #0
   346c8:	movgt	r3, #1
   346cc:	movle	r3, #0
   346d0:	uxtb	r3, r3
   346d4:	str	r3, [fp, #-12]
   346d8:	ldr	r3, [fp, #-12]
   346dc:	cmp	r3, #0
   346e0:	bne	346ec <flatcc_verify_error_string@@Base+0xf84>
   346e4:	mov	r3, #3
   346e8:	b	34838 <flatcc_verify_error_string@@Base+0x10d0>
   346ec:	mvn	r3, #-1073741824	; 0xc0000000
   346f0:	str	r3, [sp, #8]
   346f4:	mov	r3, #4
   346f8:	str	r3, [sp, #4]
   346fc:	mov	r3, #4
   34700:	str	r3, [sp]
   34704:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34708:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3470c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34714:	bl	34204 <flatcc_verify_error_string@@Base+0xa9c>
   34718:	mov	r3, r0
   3471c:	cmp	r3, #0
   34720:	beq	34758 <flatcc_verify_error_string@@Base+0xff0>
   34724:	mvn	r3, #-1073741824	; 0xc0000000
   34728:	str	r3, [sp, #8]
   3472c:	mov	r3, #4
   34730:	str	r3, [sp, #4]
   34734:	mov	r3, #4
   34738:	str	r3, [sp]
   3473c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34740:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34744:	ldr	r1, [fp, #-28]	; 0xffffffe4
   34748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3474c:	bl	34204 <flatcc_verify_error_string@@Base+0xa9c>
   34750:	mov	r3, r0
   34754:	b	34838 <flatcc_verify_error_string@@Base+0x10d0>
   34758:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3475c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34760:	add	r3, r2, r3
   34764:	str	r3, [fp, #-32]	; 0xffffffe0
   34768:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3476c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34770:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   34774:	str	r0, [fp, #-16]
   34778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3477c:	add	r3, r3, #4
   34780:	str	r3, [fp, #-32]	; 0xffffffe0
   34784:	mov	r3, #0
   34788:	str	r3, [fp, #-8]
   3478c:	b	34824 <flatcc_verify_error_string@@Base+0x10bc>
   34790:	ldr	r1, [fp, #-32]	; 0xffffffe0
   34794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34798:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   3479c:	mov	r2, r0
   347a0:	ldr	r3, [fp, #8]
   347a4:	str	r3, [sp, #4]
   347a8:	ldr	r3, [fp, #4]
   347ac:	str	r3, [sp]
   347b0:	mov	r3, r2
   347b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   347b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   347bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   347c0:	bl	34444 <flatcc_verify_error_string@@Base+0xcdc>
   347c4:	mov	r3, r0
   347c8:	cmp	r3, #0
   347cc:	beq	3480c <flatcc_verify_error_string@@Base+0x10a4>
   347d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   347d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   347d8:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   347dc:	mov	r2, r0
   347e0:	ldr	r3, [fp, #8]
   347e4:	str	r3, [sp, #4]
   347e8:	ldr	r3, [fp, #4]
   347ec:	str	r3, [sp]
   347f0:	mov	r3, r2
   347f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   347f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   347fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34800:	bl	34444 <flatcc_verify_error_string@@Base+0xcdc>
   34804:	mov	r3, r0
   34808:	b	34838 <flatcc_verify_error_string@@Base+0x10d0>
   3480c:	ldr	r3, [fp, #-8]
   34810:	add	r3, r3, #1
   34814:	str	r3, [fp, #-8]
   34818:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3481c:	add	r3, r3, #4
   34820:	str	r3, [fp, #-32]	; 0xffffffe0
   34824:	ldr	r2, [fp, #-8]
   34828:	ldr	r3, [fp, #-16]
   3482c:	cmp	r2, r3
   34830:	bcc	34790 <flatcc_verify_error_string@@Base+0x1028>
   34834:	mov	r3, #0
   34838:	mov	r0, r3
   3483c:	sub	sp, fp, #4
   34840:	pop	{fp, pc}
   34844:	push	{fp, lr}
   34848:	add	fp, sp, #4
   3484c:	sub	sp, sp, #88	; 0x58
   34850:	str	r0, [fp, #-64]	; 0xffffffc0
   34854:	str	r1, [fp, #-68]	; 0xffffffbc
   34858:	str	r2, [fp, #-72]	; 0xffffffb8
   3485c:	str	r3, [fp, #-76]	; 0xffffffb4
   34860:	ldr	r3, [fp, #12]
   34864:	sub	r2, r3, #1
   34868:	str	r2, [fp, #12]
   3486c:	cmp	r3, #0
   34870:	movgt	r3, #1
   34874:	movle	r3, #0
   34878:	uxtb	r3, r3
   3487c:	str	r3, [fp, #-12]
   34880:	ldr	r3, [fp, #-12]
   34884:	cmp	r3, #0
   34888:	bne	34894 <flatcc_verify_error_string@@Base+0x112c>
   3488c:	mov	r3, #3
   34890:	b	34a90 <flatcc_verify_error_string@@Base+0x1328>
   34894:	mvn	r3, #-1073741824	; 0xc0000000
   34898:	str	r3, [sp, #8]
   3489c:	mov	r3, #4
   348a0:	str	r3, [sp, #4]
   348a4:	mov	r3, #4
   348a8:	str	r3, [sp]
   348ac:	ldr	r3, [fp, #-76]	; 0xffffffb4
   348b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   348b4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   348b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   348bc:	bl	34204 <flatcc_verify_error_string@@Base+0xa9c>
   348c0:	mov	r3, r0
   348c4:	cmp	r3, #0
   348c8:	beq	34900 <flatcc_verify_error_string@@Base+0x1198>
   348cc:	mvn	r3, #-1073741824	; 0xc0000000
   348d0:	str	r3, [sp, #8]
   348d4:	mov	r3, #4
   348d8:	str	r3, [sp, #4]
   348dc:	mov	r3, #4
   348e0:	str	r3, [sp]
   348e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   348e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   348ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   348f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   348f4:	bl	34204 <flatcc_verify_error_string@@Base+0xa9c>
   348f8:	mov	r3, r0
   348fc:	b	34a90 <flatcc_verify_error_string@@Base+0x1328>
   34900:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34904:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34908:	add	r3, r2, r3
   3490c:	str	r3, [fp, #-72]	; 0xffffffb8
   34910:	ldr	r1, [fp, #-72]	; 0xffffffb8
   34914:	ldr	r0, [fp, #-64]	; 0xffffffc0
   34918:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   3491c:	str	r0, [fp, #-16]
   34920:	ldr	r2, [fp, #-16]
   34924:	ldr	r3, [fp, #4]
   34928:	cmp	r2, r3
   3492c:	moveq	r3, #1
   34930:	movne	r3, #0
   34934:	uxtb	r3, r3
   34938:	str	r3, [fp, #-20]	; 0xffffffec
   3493c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34940:	cmp	r3, #0
   34944:	bne	34950 <flatcc_verify_error_string@@Base+0x11e8>
   34948:	mov	r3, #34	; 0x22
   3494c:	b	34a90 <flatcc_verify_error_string@@Base+0x1328>
   34950:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34954:	add	r3, r3, #4
   34958:	str	r3, [fp, #-72]	; 0xffffffb8
   3495c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34960:	str	r3, [fp, #-56]	; 0xffffffc8
   34964:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34968:	str	r3, [fp, #-52]	; 0xffffffcc
   3496c:	ldr	r3, [fp, #12]
   34970:	str	r3, [fp, #-48]	; 0xffffffd0
   34974:	mov	r3, #0
   34978:	str	r3, [fp, #-8]
   3497c:	b	34a7c <flatcc_verify_error_string@@Base+0x1314>
   34980:	ldr	r1, [fp, #-72]	; 0xffffffb8
   34984:	ldr	r0, [fp, #-64]	; 0xffffffc0
   34988:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   3498c:	str	r0, [fp, #-24]	; 0xffffffe8
   34990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34994:	cmp	r3, #0
   34998:	bne	349d4 <flatcc_verify_error_string@@Base+0x126c>
   3499c:	ldr	r2, [fp, #8]
   349a0:	ldr	r3, [fp, #-8]
   349a4:	add	r3, r2, r3
   349a8:	ldrb	r3, [r3]
   349ac:	cmp	r3, #0
   349b0:	moveq	r3, #1
   349b4:	movne	r3, #0
   349b8:	uxtb	r3, r3
   349bc:	str	r3, [fp, #-32]	; 0xffffffe0
   349c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   349c4:	cmp	r3, #0
   349c8:	bne	34a64 <flatcc_verify_error_string@@Base+0x12fc>
   349cc:	mov	r3, #32
   349d0:	b	34a90 <flatcc_verify_error_string@@Base+0x1328>
   349d4:	ldr	r2, [fp, #8]
   349d8:	ldr	r3, [fp, #-8]
   349dc:	add	r3, r2, r3
   349e0:	ldrb	r3, [r3]
   349e4:	cmp	r3, #0
   349e8:	movne	r3, #1
   349ec:	moveq	r3, #0
   349f0:	uxtb	r3, r3
   349f4:	str	r3, [fp, #-28]	; 0xffffffe4
   349f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   349fc:	cmp	r3, #0
   34a00:	bne	34a0c <flatcc_verify_error_string@@Base+0x12a4>
   34a04:	mov	r3, #33	; 0x21
   34a08:	b	34a90 <flatcc_verify_error_string@@Base+0x1328>
   34a0c:	ldr	r2, [fp, #8]
   34a10:	ldr	r3, [fp, #-8]
   34a14:	add	r3, r2, r3
   34a18:	ldrb	r3, [r3]
   34a1c:	strb	r3, [fp, #-44]	; 0xffffffd4
   34a20:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34a24:	str	r3, [fp, #-40]	; 0xffffffd8
   34a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34a2c:	str	r3, [fp, #-36]	; 0xffffffdc
   34a30:	sub	r2, fp, #56	; 0x38
   34a34:	ldr	r3, [fp, #16]
   34a38:	mov	r0, r2
   34a3c:	blx	r3
   34a40:	mov	r3, r0
   34a44:	cmp	r3, #0
   34a48:	beq	34a64 <flatcc_verify_error_string@@Base+0x12fc>
   34a4c:	sub	r2, fp, #56	; 0x38
   34a50:	ldr	r3, [fp, #16]
   34a54:	mov	r0, r2
   34a58:	blx	r3
   34a5c:	mov	r3, r0
   34a60:	b	34a90 <flatcc_verify_error_string@@Base+0x1328>
   34a64:	ldr	r3, [fp, #-8]
   34a68:	add	r3, r3, #1
   34a6c:	str	r3, [fp, #-8]
   34a70:	ldr	r3, [fp, #-72]	; 0xffffffb8
   34a74:	add	r3, r3, #4
   34a78:	str	r3, [fp, #-72]	; 0xffffffb8
   34a7c:	ldr	r2, [fp, #-8]
   34a80:	ldr	r3, [fp, #-16]
   34a84:	cmp	r2, r3
   34a88:	bcc	34980 <flatcc_verify_error_string@@Base+0x1218>
   34a8c:	mov	r3, #0
   34a90:	mov	r0, r3
   34a94:	sub	sp, fp, #4
   34a98:	pop	{fp, pc}

00034a9c <flatcc_verify_field@@Base>:
   34a9c:	push	{fp, lr}
   34aa0:	add	fp, sp, #4
   34aa4:	sub	sp, sp, #24
   34aa8:	str	r0, [fp, #-8]
   34aac:	str	r2, [fp, #-16]
   34ab0:	strh	r1, [fp, #-10]
   34ab4:	strh	r3, [fp, #-12]
   34ab8:	ldrh	r1, [fp, #-10]
   34abc:	ldrh	r3, [fp, #-12]
   34ac0:	str	r3, [sp]
   34ac4:	ldr	r3, [fp, #-16]
   34ac8:	mov	r2, #0
   34acc:	ldr	r0, [fp, #-8]
   34ad0:	bl	33e84 <flatcc_verify_error_string@@Base+0x71c>
   34ad4:	mov	r3, r0
   34ad8:	cmp	r3, #0
   34adc:	beq	34b04 <flatcc_verify_field@@Base+0x68>
   34ae0:	ldrh	r1, [fp, #-10]
   34ae4:	ldrh	r3, [fp, #-12]
   34ae8:	str	r3, [sp]
   34aec:	ldr	r3, [fp, #-16]
   34af0:	mov	r2, #0
   34af4:	ldr	r0, [fp, #-8]
   34af8:	bl	33e84 <flatcc_verify_error_string@@Base+0x71c>
   34afc:	mov	r3, r0
   34b00:	b	34b08 <flatcc_verify_field@@Base+0x6c>
   34b04:	mov	r3, #0
   34b08:	mov	r0, r3
   34b0c:	sub	sp, fp, #4
   34b10:	pop	{fp, pc}

00034b14 <flatcc_verify_string_field@@Base>:
   34b14:	push	{r4, r5, r6, fp, lr}
   34b18:	add	fp, sp, #16
   34b1c:	sub	sp, sp, #28
   34b20:	str	r0, [fp, #-32]	; 0xffffffe0
   34b24:	mov	r3, r1
   34b28:	str	r2, [fp, #-40]	; 0xffffffd8
   34b2c:	strh	r3, [fp, #-34]	; 0xffffffde
   34b30:	sub	r3, fp, #28
   34b34:	ldrh	r1, [fp, #-34]	; 0xffffffde
   34b38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34b3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34b40:	bl	33fd8 <flatcc_verify_error_string@@Base+0x870>
   34b44:	str	r0, [fp, #-24]	; 0xffffffe8
   34b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34b4c:	cmp	r3, #0
   34b50:	bne	34b60 <flatcc_verify_string_field@@Base+0x4c>
   34b54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34b58:	cmp	r3, #0
   34b5c:	bne	34b68 <flatcc_verify_string_field@@Base+0x54>
   34b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34b64:	b	34bac <flatcc_verify_string_field@@Base+0x98>
   34b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34b6c:	ldr	r4, [r3]
   34b70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34b74:	ldr	r5, [r3, #4]
   34b78:	ldr	r6, [fp, #-28]	; 0xffffffe4
   34b7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34b80:	ldr	r3, [r3]
   34b84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34b88:	mov	r1, r2
   34b8c:	mov	r0, r3
   34b90:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   34b94:	mov	r3, r0
   34b98:	mov	r2, r6
   34b9c:	mov	r1, r5
   34ba0:	mov	r0, r4
   34ba4:	bl	34108 <flatcc_verify_error_string@@Base+0x9a0>
   34ba8:	mov	r3, r0
   34bac:	mov	r0, r3
   34bb0:	sub	sp, fp, #16
   34bb4:	pop	{r4, r5, r6, fp, pc}

00034bb8 <flatcc_verify_vector_field@@Base>:
   34bb8:	push	{r4, r5, r6, fp, lr}
   34bbc:	add	fp, sp, #16
   34bc0:	sub	sp, sp, #44	; 0x2c
   34bc4:	str	r0, [fp, #-32]	; 0xffffffe0
   34bc8:	str	r2, [fp, #-40]	; 0xffffffd8
   34bcc:	str	r3, [fp, #-44]	; 0xffffffd4
   34bd0:	strh	r1, [fp, #-34]	; 0xffffffde
   34bd4:	sub	r3, fp, #28
   34bd8:	ldrh	r1, [fp, #-34]	; 0xffffffde
   34bdc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34be0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34be4:	bl	33fd8 <flatcc_verify_error_string@@Base+0x870>
   34be8:	str	r0, [fp, #-24]	; 0xffffffe8
   34bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34bf0:	cmp	r3, #0
   34bf4:	bne	34c04 <flatcc_verify_vector_field@@Base+0x4c>
   34bf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34bfc:	cmp	r3, #0
   34c00:	bne	34c0c <flatcc_verify_vector_field@@Base+0x54>
   34c04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34c08:	b	34c6c <flatcc_verify_vector_field@@Base+0xb4>
   34c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34c10:	ldr	r4, [r3]
   34c14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34c18:	ldr	r5, [r3, #4]
   34c1c:	ldr	r6, [fp, #-28]	; 0xffffffe4
   34c20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34c24:	ldr	r3, [r3]
   34c28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34c2c:	mov	r1, r2
   34c30:	mov	r0, r3
   34c34:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   34c38:	mov	r2, r0
   34c3c:	ldr	r3, [fp, #8]
   34c40:	str	r3, [sp, #8]
   34c44:	ldrh	r3, [fp, #4]
   34c48:	str	r3, [sp, #4]
   34c4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34c50:	str	r3, [sp]
   34c54:	mov	r3, r2
   34c58:	mov	r2, r6
   34c5c:	mov	r1, r5
   34c60:	mov	r0, r4
   34c64:	bl	34204 <flatcc_verify_error_string@@Base+0xa9c>
   34c68:	mov	r3, r0
   34c6c:	mov	r0, r3
   34c70:	sub	sp, fp, #16
   34c74:	pop	{r4, r5, r6, fp, pc}

00034c78 <flatcc_verify_string_vector_field@@Base>:
   34c78:	push	{r4, r5, r6, fp, lr}
   34c7c:	add	fp, sp, #16
   34c80:	sub	sp, sp, #28
   34c84:	str	r0, [fp, #-32]	; 0xffffffe0
   34c88:	mov	r3, r1
   34c8c:	str	r2, [fp, #-40]	; 0xffffffd8
   34c90:	strh	r3, [fp, #-34]	; 0xffffffde
   34c94:	sub	r3, fp, #28
   34c98:	ldrh	r1, [fp, #-34]	; 0xffffffde
   34c9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34ca0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34ca4:	bl	33fd8 <flatcc_verify_error_string@@Base+0x870>
   34ca8:	str	r0, [fp, #-24]	; 0xffffffe8
   34cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34cb0:	cmp	r3, #0
   34cb4:	bne	34cc4 <flatcc_verify_string_vector_field@@Base+0x4c>
   34cb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34cbc:	cmp	r3, #0
   34cc0:	bne	34ccc <flatcc_verify_string_vector_field@@Base+0x54>
   34cc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34cc8:	b	34d10 <flatcc_verify_string_vector_field@@Base+0x98>
   34ccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34cd0:	ldr	r4, [r3]
   34cd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34cd8:	ldr	r5, [r3, #4]
   34cdc:	ldr	r6, [fp, #-28]	; 0xffffffe4
   34ce0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34ce4:	ldr	r3, [r3]
   34ce8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34cec:	mov	r1, r2
   34cf0:	mov	r0, r3
   34cf4:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   34cf8:	mov	r3, r0
   34cfc:	mov	r2, r6
   34d00:	mov	r1, r5
   34d04:	mov	r0, r4
   34d08:	bl	342f8 <flatcc_verify_error_string@@Base+0xb90>
   34d0c:	mov	r3, r0
   34d10:	mov	r0, r3
   34d14:	sub	sp, fp, #16
   34d18:	pop	{r4, r5, r6, fp, pc}

00034d1c <flatcc_verify_table_field@@Base>:
   34d1c:	push	{r4, r5, r6, fp, lr}
   34d20:	add	fp, sp, #16
   34d24:	sub	sp, sp, #36	; 0x24
   34d28:	str	r0, [fp, #-32]	; 0xffffffe0
   34d2c:	str	r2, [fp, #-40]	; 0xffffffd8
   34d30:	str	r3, [fp, #-44]	; 0xffffffd4
   34d34:	strh	r1, [fp, #-34]	; 0xffffffde
   34d38:	sub	r3, fp, #28
   34d3c:	ldrh	r1, [fp, #-34]	; 0xffffffde
   34d40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34d48:	bl	33fd8 <flatcc_verify_error_string@@Base+0x870>
   34d4c:	str	r0, [fp, #-24]	; 0xffffffe8
   34d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34d54:	cmp	r3, #0
   34d58:	bne	34d68 <flatcc_verify_table_field@@Base+0x4c>
   34d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34d60:	cmp	r3, #0
   34d64:	bne	34d70 <flatcc_verify_table_field@@Base+0x54>
   34d68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34d6c:	b	34dcc <flatcc_verify_table_field@@Base+0xb0>
   34d70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34d74:	ldr	r4, [r3]
   34d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34d7c:	ldr	r5, [r3, #4]
   34d80:	ldr	r6, [fp, #-28]	; 0xffffffe4
   34d84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34d88:	ldr	r3, [r3]
   34d8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34d90:	mov	r1, r2
   34d94:	mov	r0, r3
   34d98:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   34d9c:	mov	r1, r0
   34da0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34da4:	ldr	r3, [r3, #8]
   34da8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   34dac:	str	r2, [sp, #4]
   34db0:	str	r3, [sp]
   34db4:	mov	r3, r1
   34db8:	mov	r2, r6
   34dbc:	mov	r1, r5
   34dc0:	mov	r0, r4
   34dc4:	bl	34444 <flatcc_verify_error_string@@Base+0xcdc>
   34dc8:	mov	r3, r0
   34dcc:	mov	r0, r3
   34dd0:	sub	sp, fp, #16
   34dd4:	pop	{r4, r5, r6, fp, pc}

00034dd8 <flatcc_verify_table_vector_field@@Base>:
   34dd8:	push	{r4, r5, r6, fp, lr}
   34ddc:	add	fp, sp, #16
   34de0:	sub	sp, sp, #36	; 0x24
   34de4:	str	r0, [fp, #-32]	; 0xffffffe0
   34de8:	str	r2, [fp, #-40]	; 0xffffffd8
   34dec:	str	r3, [fp, #-44]	; 0xffffffd4
   34df0:	strh	r1, [fp, #-34]	; 0xffffffde
   34df4:	sub	r3, fp, #28
   34df8:	ldrh	r1, [fp, #-34]	; 0xffffffde
   34dfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34e00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34e04:	bl	33fd8 <flatcc_verify_error_string@@Base+0x870>
   34e08:	str	r0, [fp, #-24]	; 0xffffffe8
   34e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34e10:	cmp	r3, #0
   34e14:	bne	34e24 <flatcc_verify_table_vector_field@@Base+0x4c>
   34e18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34e1c:	cmp	r3, #0
   34e20:	bne	34e2c <flatcc_verify_table_vector_field@@Base+0x54>
   34e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34e28:	b	34e88 <flatcc_verify_table_vector_field@@Base+0xb0>
   34e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34e30:	ldr	r4, [r3]
   34e34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34e38:	ldr	r5, [r3, #4]
   34e3c:	ldr	r6, [fp, #-28]	; 0xffffffe4
   34e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34e44:	ldr	r3, [r3]
   34e48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34e4c:	mov	r1, r2
   34e50:	mov	r0, r3
   34e54:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   34e58:	mov	r1, r0
   34e5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34e60:	ldr	r3, [r3, #8]
   34e64:	ldr	r2, [fp, #-44]	; 0xffffffd4
   34e68:	str	r2, [sp, #4]
   34e6c:	str	r3, [sp]
   34e70:	mov	r3, r1
   34e74:	mov	r2, r6
   34e78:	mov	r1, r5
   34e7c:	mov	r0, r4
   34e80:	bl	3469c <flatcc_verify_error_string@@Base+0xf34>
   34e84:	mov	r3, r0
   34e88:	mov	r0, r3
   34e8c:	sub	sp, fp, #16
   34e90:	pop	{r4, r5, r6, fp, pc}

00034e94 <flatcc_verify_union_table@@Base>:
   34e94:	push	{fp, lr}
   34e98:	add	fp, sp, #4
   34e9c:	sub	sp, sp, #16
   34ea0:	str	r0, [fp, #-8]
   34ea4:	str	r1, [fp, #-12]
   34ea8:	ldr	r3, [fp, #-8]
   34eac:	ldr	r0, [r3]
   34eb0:	ldr	r3, [fp, #-8]
   34eb4:	ldr	r1, [r3, #4]
   34eb8:	ldr	r3, [fp, #-8]
   34ebc:	ldr	ip, [r3, #16]
   34ec0:	ldr	r3, [fp, #-8]
   34ec4:	ldr	lr, [r3, #20]
   34ec8:	ldr	r3, [fp, #-8]
   34ecc:	ldr	r3, [r3, #8]
   34ed0:	ldr	r2, [fp, #-12]
   34ed4:	str	r2, [sp, #4]
   34ed8:	str	r3, [sp]
   34edc:	mov	r3, lr
   34ee0:	mov	r2, ip
   34ee4:	bl	34444 <flatcc_verify_error_string@@Base+0xcdc>
   34ee8:	mov	r3, r0
   34eec:	mov	r0, r3
   34ef0:	sub	sp, fp, #4
   34ef4:	pop	{fp, pc}

00034ef8 <flatcc_verify_union_struct@@Base>:
   34ef8:	push	{fp, lr}
   34efc:	add	fp, sp, #4
   34f00:	sub	sp, sp, #24
   34f04:	str	r0, [fp, #-8]
   34f08:	str	r1, [fp, #-12]
   34f0c:	mov	r3, r2
   34f10:	strh	r3, [fp, #-14]
   34f14:	ldr	r3, [fp, #-8]
   34f18:	ldr	r0, [r3, #4]
   34f1c:	ldr	r3, [fp, #-8]
   34f20:	ldr	r1, [r3, #16]
   34f24:	ldr	r3, [fp, #-8]
   34f28:	ldr	r2, [r3, #20]
   34f2c:	ldrh	r3, [fp, #-14]
   34f30:	str	r3, [sp]
   34f34:	ldr	r3, [fp, #-12]
   34f38:	bl	33c90 <flatcc_verify_error_string@@Base+0x528>
   34f3c:	mov	r3, r0
   34f40:	mov	r0, r3
   34f44:	sub	sp, fp, #4
   34f48:	pop	{fp, pc}

00034f4c <flatcc_verify_union_string@@Base>:
   34f4c:	push	{fp, lr}
   34f50:	add	fp, sp, #4
   34f54:	sub	sp, sp, #8
   34f58:	str	r0, [fp, #-8]
   34f5c:	ldr	r3, [fp, #-8]
   34f60:	ldr	r0, [r3]
   34f64:	ldr	r3, [fp, #-8]
   34f68:	ldr	r1, [r3, #4]
   34f6c:	ldr	r3, [fp, #-8]
   34f70:	ldr	r2, [r3, #16]
   34f74:	ldr	r3, [fp, #-8]
   34f78:	ldr	r3, [r3, #20]
   34f7c:	bl	34108 <flatcc_verify_error_string@@Base+0x9a0>
   34f80:	mov	r3, r0
   34f84:	mov	r0, r3
   34f88:	sub	sp, fp, #4
   34f8c:	pop	{fp, pc}

00034f90 <flatcc_verify_buffer_header@@Base>:
   34f90:	push	{fp, lr}
   34f94:	add	fp, sp, #4
   34f98:	sub	sp, sp, #40	; 0x28
   34f9c:	str	r0, [fp, #-32]	; 0xffffffe0
   34fa0:	str	r1, [fp, #-36]	; 0xffffffdc
   34fa4:	str	r2, [fp, #-40]	; 0xffffffd8
   34fa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34fac:	and	r3, r3, #3
   34fb0:	cmp	r3, #0
   34fb4:	moveq	r3, #1
   34fb8:	movne	r3, #0
   34fbc:	uxtb	r3, r3
   34fc0:	str	r3, [fp, #-8]
   34fc4:	ldr	r3, [fp, #-8]
   34fc8:	cmp	r3, #0
   34fcc:	bne	34fd8 <flatcc_verify_buffer_header@@Base+0x48>
   34fd0:	mov	r3, #5
   34fd4:	b	3509c <flatcc_verify_buffer_header@@Base+0x10c>
   34fd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34fdc:	cmn	r3, #9
   34fe0:	movls	r3, #1
   34fe4:	movhi	r3, #0
   34fe8:	uxtb	r3, r3
   34fec:	str	r3, [fp, #-12]
   34ff0:	ldr	r3, [fp, #-12]
   34ff4:	cmp	r3, #0
   34ff8:	bne	35004 <flatcc_verify_buffer_header@@Base+0x74>
   34ffc:	mov	r3, #6
   35000:	b	3509c <flatcc_verify_buffer_header@@Base+0x10c>
   35004:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35008:	cmp	r3, #7
   3500c:	movhi	r3, #1
   35010:	movls	r3, #0
   35014:	uxtb	r3, r3
   35018:	str	r3, [fp, #-16]
   3501c:	ldr	r3, [fp, #-16]
   35020:	cmp	r3, #0
   35024:	bne	35030 <flatcc_verify_buffer_header@@Base+0xa0>
   35028:	mov	r3, #1
   3502c:	b	3509c <flatcc_verify_buffer_header@@Base+0x10c>
   35030:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35034:	cmp	r3, #0
   35038:	beq	35098 <flatcc_verify_buffer_header@@Base+0x108>
   3503c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35040:	bl	33ac0 <flatcc_verify_error_string@@Base+0x358>
   35044:	str	r0, [fp, #-20]	; 0xffffffec
   35048:	mov	r1, #4
   3504c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35050:	bl	33b08 <flatcc_verify_error_string@@Base+0x3a0>
   35054:	str	r0, [fp, #-24]	; 0xffffffe8
   35058:	ldr	r3, [fp, #-20]	; 0xffffffec
   3505c:	cmp	r3, #0
   35060:	beq	35074 <flatcc_verify_buffer_header@@Base+0xe4>
   35064:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35068:	ldr	r3, [fp, #-20]	; 0xffffffec
   3506c:	cmp	r2, r3
   35070:	bne	3507c <flatcc_verify_buffer_header@@Base+0xec>
   35074:	mov	r3, #1
   35078:	b	35080 <flatcc_verify_buffer_header@@Base+0xf0>
   3507c:	mov	r3, #0
   35080:	str	r3, [fp, #-28]	; 0xffffffe4
   35084:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35088:	cmp	r3, #0
   3508c:	bne	35098 <flatcc_verify_buffer_header@@Base+0x108>
   35090:	mov	r3, #2
   35094:	b	3509c <flatcc_verify_buffer_header@@Base+0x10c>
   35098:	mov	r3, #0
   3509c:	mov	r0, r3
   350a0:	sub	sp, fp, #4
   350a4:	pop	{fp, pc}

000350a8 <flatcc_verify_typed_buffer_header@@Base>:
   350a8:	push	{fp, lr}
   350ac:	add	fp, sp, #4
   350b0:	sub	sp, sp, #40	; 0x28
   350b4:	str	r0, [fp, #-32]	; 0xffffffe0
   350b8:	str	r1, [fp, #-36]	; 0xffffffdc
   350bc:	str	r2, [fp, #-40]	; 0xffffffd8
   350c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   350c4:	and	r3, r3, #3
   350c8:	cmp	r3, #0
   350cc:	moveq	r3, #1
   350d0:	movne	r3, #0
   350d4:	uxtb	r3, r3
   350d8:	str	r3, [fp, #-8]
   350dc:	ldr	r3, [fp, #-8]
   350e0:	cmp	r3, #0
   350e4:	bne	350f0 <flatcc_verify_typed_buffer_header@@Base+0x48>
   350e8:	mov	r3, #5
   350ec:	b	351b0 <flatcc_verify_typed_buffer_header@@Base+0x108>
   350f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   350f4:	cmn	r3, #9
   350f8:	movls	r3, #1
   350fc:	movhi	r3, #0
   35100:	uxtb	r3, r3
   35104:	str	r3, [fp, #-12]
   35108:	ldr	r3, [fp, #-12]
   3510c:	cmp	r3, #0
   35110:	bne	3511c <flatcc_verify_typed_buffer_header@@Base+0x74>
   35114:	mov	r3, #6
   35118:	b	351b0 <flatcc_verify_typed_buffer_header@@Base+0x108>
   3511c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35120:	cmp	r3, #7
   35124:	movhi	r3, #1
   35128:	movls	r3, #0
   3512c:	uxtb	r3, r3
   35130:	str	r3, [fp, #-16]
   35134:	ldr	r3, [fp, #-16]
   35138:	cmp	r3, #0
   3513c:	bne	35148 <flatcc_verify_typed_buffer_header@@Base+0xa0>
   35140:	mov	r3, #1
   35144:	b	351b0 <flatcc_verify_typed_buffer_header@@Base+0x108>
   35148:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3514c:	cmp	r3, #0
   35150:	beq	351ac <flatcc_verify_typed_buffer_header@@Base+0x104>
   35154:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35158:	str	r3, [fp, #-20]	; 0xffffffec
   3515c:	mov	r1, #4
   35160:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35164:	bl	33b08 <flatcc_verify_error_string@@Base+0x3a0>
   35168:	str	r0, [fp, #-24]	; 0xffffffe8
   3516c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35170:	cmp	r3, #0
   35174:	beq	35188 <flatcc_verify_typed_buffer_header@@Base+0xe0>
   35178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3517c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35180:	cmp	r2, r3
   35184:	bne	35190 <flatcc_verify_typed_buffer_header@@Base+0xe8>
   35188:	mov	r3, #1
   3518c:	b	35194 <flatcc_verify_typed_buffer_header@@Base+0xec>
   35190:	mov	r3, #0
   35194:	str	r3, [fp, #-28]	; 0xffffffe4
   35198:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3519c:	cmp	r3, #0
   351a0:	bne	351ac <flatcc_verify_typed_buffer_header@@Base+0x104>
   351a4:	mov	r3, #2
   351a8:	b	351b0 <flatcc_verify_typed_buffer_header@@Base+0x108>
   351ac:	mov	r3, #0
   351b0:	mov	r0, r3
   351b4:	sub	sp, fp, #4
   351b8:	pop	{fp, pc}

000351bc <flatcc_verify_struct_as_root@@Base>:
   351bc:	push	{fp, lr}
   351c0:	add	fp, sp, #4
   351c4:	sub	sp, sp, #24
   351c8:	str	r0, [fp, #-8]
   351cc:	str	r1, [fp, #-12]
   351d0:	str	r2, [fp, #-16]
   351d4:	str	r3, [fp, #-20]	; 0xffffffec
   351d8:	ldr	r2, [fp, #-16]
   351dc:	ldr	r1, [fp, #-12]
   351e0:	ldr	r0, [fp, #-8]
   351e4:	bl	34f90 <flatcc_verify_buffer_header@@Base>
   351e8:	mov	r3, r0
   351ec:	cmp	r3, #0
   351f0:	beq	3520c <flatcc_verify_struct_as_root@@Base+0x50>
   351f4:	ldr	r2, [fp, #-16]
   351f8:	ldr	r1, [fp, #-12]
   351fc:	ldr	r0, [fp, #-8]
   35200:	bl	34f90 <flatcc_verify_buffer_header@@Base>
   35204:	mov	r3, r0
   35208:	b	35238 <flatcc_verify_struct_as_root@@Base+0x7c>
   3520c:	mov	r1, #0
   35210:	ldr	r0, [fp, #-8]
   35214:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   35218:	mov	r2, r0
   3521c:	ldrh	r3, [fp, #4]
   35220:	str	r3, [sp]
   35224:	ldr	r3, [fp, #-20]	; 0xffffffec
   35228:	mov	r1, #0
   3522c:	ldr	r0, [fp, #-12]
   35230:	bl	33c90 <flatcc_verify_error_string@@Base+0x528>
   35234:	mov	r3, r0
   35238:	mov	r0, r3
   3523c:	sub	sp, fp, #4
   35240:	pop	{fp, pc}

00035244 <flatcc_verify_struct_as_typed_root@@Base>:
   35244:	push	{fp, lr}
   35248:	add	fp, sp, #4
   3524c:	sub	sp, sp, #24
   35250:	str	r0, [fp, #-8]
   35254:	str	r1, [fp, #-12]
   35258:	str	r2, [fp, #-16]
   3525c:	str	r3, [fp, #-20]	; 0xffffffec
   35260:	ldr	r2, [fp, #-16]
   35264:	ldr	r1, [fp, #-12]
   35268:	ldr	r0, [fp, #-8]
   3526c:	bl	350a8 <flatcc_verify_typed_buffer_header@@Base>
   35270:	mov	r3, r0
   35274:	cmp	r3, #0
   35278:	beq	35294 <flatcc_verify_struct_as_typed_root@@Base+0x50>
   3527c:	ldr	r2, [fp, #-16]
   35280:	ldr	r1, [fp, #-12]
   35284:	ldr	r0, [fp, #-8]
   35288:	bl	350a8 <flatcc_verify_typed_buffer_header@@Base>
   3528c:	mov	r3, r0
   35290:	b	352c0 <flatcc_verify_struct_as_typed_root@@Base+0x7c>
   35294:	mov	r1, #0
   35298:	ldr	r0, [fp, #-8]
   3529c:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   352a0:	mov	r2, r0
   352a4:	ldrh	r3, [fp, #4]
   352a8:	str	r3, [sp]
   352ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   352b0:	mov	r1, #0
   352b4:	ldr	r0, [fp, #-12]
   352b8:	bl	33c90 <flatcc_verify_error_string@@Base+0x528>
   352bc:	mov	r3, r0
   352c0:	mov	r0, r3
   352c4:	sub	sp, fp, #4
   352c8:	pop	{fp, pc}

000352cc <flatcc_verify_table_as_root@@Base>:
   352cc:	push	{fp, lr}
   352d0:	add	fp, sp, #4
   352d4:	sub	sp, sp, #24
   352d8:	str	r0, [fp, #-8]
   352dc:	str	r1, [fp, #-12]
   352e0:	str	r2, [fp, #-16]
   352e4:	str	r3, [fp, #-20]	; 0xffffffec
   352e8:	ldr	r2, [fp, #-16]
   352ec:	ldr	r1, [fp, #-12]
   352f0:	ldr	r0, [fp, #-8]
   352f4:	bl	34f90 <flatcc_verify_buffer_header@@Base>
   352f8:	mov	r3, r0
   352fc:	cmp	r3, #0
   35300:	beq	3531c <flatcc_verify_table_as_root@@Base+0x50>
   35304:	ldr	r2, [fp, #-16]
   35308:	ldr	r1, [fp, #-12]
   3530c:	ldr	r0, [fp, #-8]
   35310:	bl	34f90 <flatcc_verify_buffer_header@@Base>
   35314:	mov	r3, r0
   35318:	b	35354 <flatcc_verify_table_as_root@@Base+0x88>
   3531c:	mov	r1, #0
   35320:	ldr	r0, [fp, #-8]
   35324:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   35328:	mov	r2, r0
   3532c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35330:	str	r3, [sp, #4]
   35334:	mov	r3, #100	; 0x64
   35338:	str	r3, [sp]
   3533c:	mov	r3, r2
   35340:	mov	r2, #0
   35344:	ldr	r1, [fp, #-12]
   35348:	ldr	r0, [fp, #-8]
   3534c:	bl	34444 <flatcc_verify_error_string@@Base+0xcdc>
   35350:	mov	r3, r0
   35354:	mov	r0, r3
   35358:	sub	sp, fp, #4
   3535c:	pop	{fp, pc}

00035360 <flatcc_verify_table_as_typed_root@@Base>:
   35360:	push	{fp, lr}
   35364:	add	fp, sp, #4
   35368:	sub	sp, sp, #24
   3536c:	str	r0, [fp, #-8]
   35370:	str	r1, [fp, #-12]
   35374:	str	r2, [fp, #-16]
   35378:	str	r3, [fp, #-20]	; 0xffffffec
   3537c:	ldr	r2, [fp, #-16]
   35380:	ldr	r1, [fp, #-12]
   35384:	ldr	r0, [fp, #-8]
   35388:	bl	350a8 <flatcc_verify_typed_buffer_header@@Base>
   3538c:	mov	r3, r0
   35390:	cmp	r3, #0
   35394:	beq	353b0 <flatcc_verify_table_as_typed_root@@Base+0x50>
   35398:	ldr	r2, [fp, #-16]
   3539c:	ldr	r1, [fp, #-12]
   353a0:	ldr	r0, [fp, #-8]
   353a4:	bl	350a8 <flatcc_verify_typed_buffer_header@@Base>
   353a8:	mov	r3, r0
   353ac:	b	353e8 <flatcc_verify_table_as_typed_root@@Base+0x88>
   353b0:	mov	r1, #0
   353b4:	ldr	r0, [fp, #-8]
   353b8:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   353bc:	mov	r2, r0
   353c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   353c4:	str	r3, [sp, #4]
   353c8:	mov	r3, #100	; 0x64
   353cc:	str	r3, [sp]
   353d0:	mov	r3, r2
   353d4:	mov	r2, #0
   353d8:	ldr	r1, [fp, #-12]
   353dc:	ldr	r0, [fp, #-8]
   353e0:	bl	34444 <flatcc_verify_error_string@@Base+0xcdc>
   353e4:	mov	r3, r0
   353e8:	mov	r0, r3
   353ec:	sub	sp, fp, #4
   353f0:	pop	{fp, pc}

000353f4 <flatcc_verify_struct_as_nested_root@@Base>:
   353f4:	push	{fp, lr}
   353f8:	add	fp, sp, #4
   353fc:	sub	sp, sp, #32
   35400:	str	r0, [fp, #-16]
   35404:	str	r2, [fp, #-24]	; 0xffffffe8
   35408:	str	r3, [fp, #-28]	; 0xffffffe4
   3540c:	strh	r1, [fp, #-18]	; 0xffffffee
   35410:	ldrh	r2, [fp, #8]
   35414:	ldrh	r1, [fp, #-18]	; 0xffffffee
   35418:	mvn	r3, #0
   3541c:	str	r3, [sp, #4]
   35420:	mov	r3, #1
   35424:	str	r3, [sp]
   35428:	mov	r3, r2
   3542c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35430:	ldr	r0, [fp, #-16]
   35434:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   35438:	mov	r3, r0
   3543c:	cmp	r3, #0
   35440:	beq	35474 <flatcc_verify_struct_as_nested_root@@Base+0x80>
   35444:	ldrh	r2, [fp, #8]
   35448:	ldrh	r1, [fp, #-18]	; 0xffffffee
   3544c:	mvn	r3, #0
   35450:	str	r3, [sp, #4]
   35454:	mov	r3, #1
   35458:	str	r3, [sp]
   3545c:	mov	r3, r2
   35460:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35464:	ldr	r0, [fp, #-16]
   35468:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   3546c:	mov	r3, r0
   35470:	b	354f4 <flatcc_verify_struct_as_nested_root@@Base+0x100>
   35474:	ldrh	r3, [fp, #-18]	; 0xffffffee
   35478:	mov	r1, r3
   3547c:	ldr	r0, [fp, #-16]
   35480:	bl	33e18 <flatcc_verify_error_string@@Base+0x6b0>
   35484:	str	r0, [fp, #-8]
   35488:	ldr	r3, [fp, #-8]
   3548c:	cmp	r3, #0
   35490:	bne	3549c <flatcc_verify_struct_as_nested_root@@Base+0xa8>
   35494:	mov	r3, #0
   35498:	b	354f4 <flatcc_verify_struct_as_nested_root@@Base+0x100>
   3549c:	mov	r1, #0
   354a0:	ldr	r0, [fp, #-8]
   354a4:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   354a8:	mov	r2, r0
   354ac:	ldr	r3, [fp, #-8]
   354b0:	add	r3, r2, r3
   354b4:	str	r3, [fp, #-8]
   354b8:	mov	r1, #0
   354bc:	ldr	r0, [fp, #-8]
   354c0:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   354c4:	str	r0, [fp, #-12]
   354c8:	ldr	r3, [fp, #-8]
   354cc:	add	r3, r3, #4
   354d0:	str	r3, [fp, #-8]
   354d4:	ldrh	r3, [fp, #8]
   354d8:	str	r3, [sp]
   354dc:	ldr	r3, [fp, #4]
   354e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   354e4:	ldr	r1, [fp, #-12]
   354e8:	ldr	r0, [fp, #-8]
   354ec:	bl	351bc <flatcc_verify_struct_as_root@@Base>
   354f0:	mov	r3, r0
   354f4:	mov	r0, r3
   354f8:	sub	sp, fp, #4
   354fc:	pop	{fp, pc}

00035500 <flatcc_verify_table_as_nested_root@@Base>:
   35500:	push	{fp, lr}
   35504:	add	fp, sp, #4
   35508:	sub	sp, sp, #32
   3550c:	str	r0, [fp, #-16]
   35510:	str	r2, [fp, #-24]	; 0xffffffe8
   35514:	str	r3, [fp, #-28]	; 0xffffffe4
   35518:	strh	r1, [fp, #-18]	; 0xffffffee
   3551c:	ldrh	r2, [fp, #4]
   35520:	ldrh	r1, [fp, #-18]	; 0xffffffee
   35524:	mvn	r3, #0
   35528:	str	r3, [sp, #4]
   3552c:	mov	r3, #1
   35530:	str	r3, [sp]
   35534:	mov	r3, r2
   35538:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3553c:	ldr	r0, [fp, #-16]
   35540:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   35544:	mov	r3, r0
   35548:	cmp	r3, #0
   3554c:	beq	35580 <flatcc_verify_table_as_nested_root@@Base+0x80>
   35550:	ldrh	r2, [fp, #4]
   35554:	ldrh	r1, [fp, #-18]	; 0xffffffee
   35558:	mvn	r3, #0
   3555c:	str	r3, [sp, #4]
   35560:	mov	r3, #1
   35564:	str	r3, [sp]
   35568:	mov	r3, r2
   3556c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35570:	ldr	r0, [fp, #-16]
   35574:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   35578:	mov	r3, r0
   3557c:	b	35650 <flatcc_verify_table_as_nested_root@@Base+0x150>
   35580:	ldrh	r3, [fp, #-18]	; 0xffffffee
   35584:	mov	r1, r3
   35588:	ldr	r0, [fp, #-16]
   3558c:	bl	33e18 <flatcc_verify_error_string@@Base+0x6b0>
   35590:	str	r0, [fp, #-8]
   35594:	ldr	r3, [fp, #-8]
   35598:	cmp	r3, #0
   3559c:	bne	355a8 <flatcc_verify_table_as_nested_root@@Base+0xa8>
   355a0:	mov	r3, #0
   355a4:	b	35650 <flatcc_verify_table_as_nested_root@@Base+0x150>
   355a8:	mov	r1, #0
   355ac:	ldr	r0, [fp, #-8]
   355b0:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   355b4:	mov	r2, r0
   355b8:	ldr	r3, [fp, #-8]
   355bc:	add	r3, r2, r3
   355c0:	str	r3, [fp, #-8]
   355c4:	mov	r1, #0
   355c8:	ldr	r0, [fp, #-8]
   355cc:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   355d0:	str	r0, [fp, #-12]
   355d4:	ldr	r3, [fp, #-8]
   355d8:	add	r3, r3, #4
   355dc:	str	r3, [fp, #-8]
   355e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   355e4:	ldr	r1, [fp, #-12]
   355e8:	ldr	r0, [fp, #-8]
   355ec:	bl	34f90 <flatcc_verify_buffer_header@@Base>
   355f0:	mov	r3, r0
   355f4:	cmp	r3, #0
   355f8:	beq	35614 <flatcc_verify_table_as_nested_root@@Base+0x114>
   355fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35600:	ldr	r1, [fp, #-12]
   35604:	ldr	r0, [fp, #-8]
   35608:	bl	34f90 <flatcc_verify_buffer_header@@Base>
   3560c:	mov	r3, r0
   35610:	b	35650 <flatcc_verify_table_as_nested_root@@Base+0x150>
   35614:	mov	r1, #0
   35618:	ldr	r0, [fp, #-8]
   3561c:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   35620:	mov	r1, r0
   35624:	ldr	r3, [fp, #-16]
   35628:	ldr	r3, [r3, #8]
   3562c:	ldr	r2, [fp, #8]
   35630:	str	r2, [sp, #4]
   35634:	str	r3, [sp]
   35638:	mov	r3, r1
   3563c:	mov	r2, #0
   35640:	ldr	r1, [fp, #-12]
   35644:	ldr	r0, [fp, #-8]
   35648:	bl	34444 <flatcc_verify_error_string@@Base+0xcdc>
   3564c:	mov	r3, r0
   35650:	mov	r0, r3
   35654:	sub	sp, fp, #4
   35658:	pop	{fp, pc}

0003565c <flatcc_verify_union_field@@Base>:
   3565c:	push	{fp, lr}
   35660:	add	fp, sp, #4
   35664:	sub	sp, sp, #80	; 0x50
   35668:	str	r0, [fp, #-64]	; 0xffffffc0
   3566c:	str	r2, [fp, #-72]	; 0xffffffb8
   35670:	str	r3, [fp, #-76]	; 0xffffffb4
   35674:	strh	r1, [fp, #-66]	; 0xffffffbe
   35678:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   3567c:	sub	r3, r3, #1
   35680:	uxth	r3, r3
   35684:	mov	r1, r3
   35688:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3568c:	bl	33da8 <flatcc_verify_error_string@@Base+0x640>
   35690:	mov	r3, r0
   35694:	strh	r3, [fp, #-6]
   35698:	ldrh	r3, [fp, #-6]
   3569c:	cmp	r3, #0
   356a0:	bne	3571c <flatcc_verify_union_field@@Base+0xc0>
   356a4:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   356a8:	mov	r1, r3
   356ac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   356b0:	bl	33da8 <flatcc_verify_error_string@@Base+0x640>
   356b4:	mov	r3, r0
   356b8:	strh	r3, [fp, #-8]
   356bc:	ldrh	r3, [fp, #-8]
   356c0:	cmp	r3, #0
   356c4:	moveq	r3, #1
   356c8:	movne	r3, #0
   356cc:	uxtb	r3, r3
   356d0:	str	r3, [fp, #-12]
   356d4:	ldr	r3, [fp, #-12]
   356d8:	cmp	r3, #0
   356dc:	bne	356e8 <flatcc_verify_union_field@@Base+0x8c>
   356e0:	mov	r3, #23
   356e4:	b	358ac <flatcc_verify_union_field@@Base+0x250>
   356e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   356ec:	cmp	r3, #0
   356f0:	moveq	r3, #1
   356f4:	movne	r3, #0
   356f8:	uxtb	r3, r3
   356fc:	str	r3, [fp, #-16]
   35700:	ldr	r3, [fp, #-16]
   35704:	cmp	r3, #0
   35708:	bne	35714 <flatcc_verify_union_field@@Base+0xb8>
   3570c:	mov	r3, #21
   35710:	b	358ac <flatcc_verify_union_field@@Base+0x250>
   35714:	mov	r3, #0
   35718:	b	358ac <flatcc_verify_union_field@@Base+0x250>
   3571c:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   35720:	sub	r3, r3, #1
   35724:	uxth	r1, r3
   35728:	mov	r3, #1
   3572c:	str	r3, [sp]
   35730:	mov	r3, #1
   35734:	mov	r2, #0
   35738:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3573c:	bl	33e84 <flatcc_verify_error_string@@Base+0x71c>
   35740:	mov	r3, r0
   35744:	cmp	r3, #0
   35748:	beq	35778 <flatcc_verify_union_field@@Base+0x11c>
   3574c:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   35750:	sub	r3, r3, #1
   35754:	uxth	r1, r3
   35758:	mov	r3, #1
   3575c:	str	r3, [sp]
   35760:	mov	r3, #1
   35764:	mov	r2, #0
   35768:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3576c:	bl	33e84 <flatcc_verify_error_string@@Base+0x71c>
   35770:	mov	r3, r0
   35774:	b	358ac <flatcc_verify_union_field@@Base+0x250>
   35778:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   3577c:	mov	r1, r3
   35780:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35784:	bl	33da8 <flatcc_verify_error_string@@Base+0x640>
   35788:	mov	r3, r0
   3578c:	strh	r3, [fp, #-8]
   35790:	ldr	r3, [fp, #-64]	; 0xffffffc0
   35794:	ldr	r2, [r3]
   35798:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3579c:	ldr	r1, [r3, #16]
   357a0:	ldrh	r3, [fp, #-6]
   357a4:	add	r3, r1, r3
   357a8:	add	r3, r2, r3
   357ac:	str	r3, [fp, #-20]	; 0xffffffec
   357b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   357b4:	ldrb	r3, [r3]
   357b8:	cmp	r3, #0
   357bc:	bne	357cc <flatcc_verify_union_field@@Base+0x170>
   357c0:	ldrh	r3, [fp, #-8]
   357c4:	cmp	r3, #0
   357c8:	bne	357d4 <flatcc_verify_union_field@@Base+0x178>
   357cc:	mov	r3, #1
   357d0:	b	357d8 <flatcc_verify_union_field@@Base+0x17c>
   357d4:	mov	r3, #0
   357d8:	str	r3, [fp, #-24]	; 0xffffffe8
   357dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   357e0:	cmp	r3, #0
   357e4:	bne	357f0 <flatcc_verify_union_field@@Base+0x194>
   357e8:	mov	r3, #24
   357ec:	b	358ac <flatcc_verify_union_field@@Base+0x250>
   357f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   357f4:	ldrb	r3, [r3]
   357f8:	cmp	r3, #0
   357fc:	bne	35808 <flatcc_verify_union_field@@Base+0x1ac>
   35800:	mov	r3, #0
   35804:	b	358ac <flatcc_verify_union_field@@Base+0x250>
   35808:	sub	r3, fp, #32
   3580c:	ldrh	r1, [fp, #-66]	; 0xffffffbe
   35810:	ldr	r2, [fp, #-72]	; 0xffffffb8
   35814:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35818:	bl	33fd8 <flatcc_verify_error_string@@Base+0x870>
   3581c:	str	r0, [fp, #-28]	; 0xffffffe4
   35820:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35824:	cmp	r3, #0
   35828:	bne	35838 <flatcc_verify_union_field@@Base+0x1dc>
   3582c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35830:	cmp	r3, #0
   35834:	bne	35840 <flatcc_verify_union_field@@Base+0x1e4>
   35838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3583c:	b	358ac <flatcc_verify_union_field@@Base+0x250>
   35840:	ldr	r3, [fp, #-64]	; 0xffffffc0
   35844:	ldr	r3, [r3]
   35848:	str	r3, [fp, #-56]	; 0xffffffc8
   3584c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   35850:	ldr	r3, [r3, #4]
   35854:	str	r3, [fp, #-52]	; 0xffffffcc
   35858:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3585c:	ldr	r3, [r3, #8]
   35860:	str	r3, [fp, #-48]	; 0xffffffd0
   35864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35868:	str	r3, [fp, #-40]	; 0xffffffd8
   3586c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   35870:	ldr	r3, [r3]
   35874:	ldr	r2, [fp, #-32]	; 0xffffffe0
   35878:	mov	r1, r2
   3587c:	mov	r0, r3
   35880:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   35884:	mov	r3, r0
   35888:	str	r3, [fp, #-36]	; 0xffffffdc
   3588c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35890:	ldrb	r3, [r3]
   35894:	strb	r3, [fp, #-44]	; 0xffffffd4
   35898:	sub	r2, fp, #56	; 0x38
   3589c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   358a0:	mov	r0, r2
   358a4:	blx	r3
   358a8:	mov	r3, r0
   358ac:	mov	r0, r3
   358b0:	sub	sp, fp, #4
   358b4:	pop	{fp, pc}

000358b8 <flatcc_verify_union_vector_field@@Base>:
   358b8:	push	{r4, r5, r6, fp, lr}
   358bc:	add	fp, sp, #16
   358c0:	sub	sp, sp, #68	; 0x44
   358c4:	str	r0, [fp, #-56]	; 0xffffffc8
   358c8:	str	r2, [fp, #-64]	; 0xffffffc0
   358cc:	str	r3, [fp, #-68]	; 0xffffffbc
   358d0:	strh	r1, [fp, #-58]	; 0xffffffc6
   358d4:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   358d8:	sub	r3, r3, #1
   358dc:	uxth	r3, r3
   358e0:	mov	r1, r3
   358e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   358e8:	bl	33da8 <flatcc_verify_error_string@@Base+0x640>
   358ec:	mov	r3, r0
   358f0:	strh	r3, [fp, #-22]	; 0xffffffea
   358f4:	ldrh	r3, [fp, #-22]	; 0xffffffea
   358f8:	cmp	r3, #0
   358fc:	bne	35950 <flatcc_verify_union_vector_field@@Base+0x98>
   35900:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   35904:	mov	r1, r3
   35908:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3590c:	bl	33da8 <flatcc_verify_error_string@@Base+0x640>
   35910:	mov	r3, r0
   35914:	strh	r3, [fp, #-24]	; 0xffffffe8
   35918:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   3591c:	cmp	r3, #0
   35920:	bne	35950 <flatcc_verify_union_vector_field@@Base+0x98>
   35924:	ldr	r3, [fp, #-64]	; 0xffffffc0
   35928:	cmp	r3, #0
   3592c:	moveq	r3, #1
   35930:	movne	r3, #0
   35934:	uxtb	r3, r3
   35938:	str	r3, [fp, #-28]	; 0xffffffe4
   3593c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35940:	cmp	r3, #0
   35944:	bne	35950 <flatcc_verify_union_vector_field@@Base+0x98>
   35948:	mov	r3, #22
   3594c:	b	35ad0 <flatcc_verify_union_vector_field@@Base+0x218>
   35950:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   35954:	sub	r3, r3, #1
   35958:	uxth	r1, r3
   3595c:	mvn	r3, #0
   35960:	str	r3, [sp, #4]
   35964:	mov	r3, #1
   35968:	str	r3, [sp]
   3596c:	mov	r3, #1
   35970:	ldr	r2, [fp, #-64]	; 0xffffffc0
   35974:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35978:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   3597c:	mov	r3, r0
   35980:	cmp	r3, #0
   35984:	beq	359bc <flatcc_verify_union_vector_field@@Base+0x104>
   35988:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   3598c:	sub	r3, r3, #1
   35990:	uxth	r1, r3
   35994:	mvn	r3, #0
   35998:	str	r3, [sp, #4]
   3599c:	mov	r3, #1
   359a0:	str	r3, [sp]
   359a4:	mov	r3, #1
   359a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   359ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   359b0:	bl	34bb8 <flatcc_verify_vector_field@@Base>
   359b4:	mov	r3, r0
   359b8:	b	35ad0 <flatcc_verify_union_vector_field@@Base+0x218>
   359bc:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   359c0:	sub	r3, r3, #1
   359c4:	uxth	r3, r3
   359c8:	mov	r1, r3
   359cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   359d0:	bl	33e18 <flatcc_verify_error_string@@Base+0x6b0>
   359d4:	str	r0, [fp, #-32]	; 0xffffffe0
   359d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   359dc:	cmp	r3, #0
   359e0:	bne	359ec <flatcc_verify_union_vector_field@@Base+0x134>
   359e4:	mov	r3, #0
   359e8:	b	35ad0 <flatcc_verify_union_vector_field@@Base+0x218>
   359ec:	mov	r1, #0
   359f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   359f4:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   359f8:	mov	r2, r0
   359fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35a00:	add	r3, r2, r3
   35a04:	str	r3, [fp, #-32]	; 0xffffffe0
   35a08:	mov	r1, #0
   35a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35a10:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   35a14:	str	r0, [fp, #-36]	; 0xffffffdc
   35a18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35a1c:	add	r3, r3, #4
   35a20:	str	r3, [fp, #-32]	; 0xffffffe0
   35a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35a28:	str	r3, [fp, #-40]	; 0xffffffd8
   35a2c:	sub	r3, fp, #48	; 0x30
   35a30:	ldrh	r1, [fp, #-58]	; 0xffffffc6
   35a34:	ldr	r2, [fp, #-64]	; 0xffffffc0
   35a38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   35a3c:	bl	33fd8 <flatcc_verify_error_string@@Base+0x870>
   35a40:	str	r0, [fp, #-44]	; 0xffffffd4
   35a44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35a48:	cmp	r3, #0
   35a4c:	bne	35a5c <flatcc_verify_union_vector_field@@Base+0x1a4>
   35a50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35a54:	cmp	r3, #0
   35a58:	bne	35a64 <flatcc_verify_union_vector_field@@Base+0x1ac>
   35a5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35a60:	b	35ad0 <flatcc_verify_union_vector_field@@Base+0x218>
   35a64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35a68:	ldr	r4, [r3]
   35a6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35a70:	ldr	r5, [r3, #4]
   35a74:	ldr	r6, [fp, #-48]	; 0xffffffd0
   35a78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35a7c:	ldr	r3, [r3]
   35a80:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35a84:	mov	r1, r2
   35a88:	mov	r0, r3
   35a8c:	bl	33a88 <flatcc_verify_error_string@@Base+0x320>
   35a90:	mov	r1, r0
   35a94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35a98:	ldr	r3, [r3, #8]
   35a9c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   35aa0:	str	r2, [sp, #12]
   35aa4:	str	r3, [sp, #8]
   35aa8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35aac:	str	r3, [sp, #4]
   35ab0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35ab4:	str	r3, [sp]
   35ab8:	mov	r3, r1
   35abc:	mov	r2, r6
   35ac0:	mov	r1, r5
   35ac4:	mov	r0, r4
   35ac8:	bl	34844 <flatcc_verify_error_string@@Base+0x10dc>
   35acc:	mov	r3, r0
   35ad0:	mov	r0, r3
   35ad4:	sub	sp, fp, #16
   35ad8:	pop	{r4, r5, r6, fp, pc}
   35adc:	andeq	r0, r0, r0
   35ae0:	push	{fp}		; (str fp, [sp, #-4]!)
   35ae4:	add	fp, sp, #0
   35ae8:	sub	sp, sp, #12
   35aec:	mov	r3, r0
   35af0:	strb	r3, [fp, #-5]
   35af4:	ldrb	r3, [fp, #-5]
   35af8:	mov	r0, r3
   35afc:	add	sp, fp, #0
   35b00:	pop	{fp}		; (ldr fp, [sp], #4)
   35b04:	bx	lr
   35b08:	push	{fp, lr}
   35b0c:	add	fp, sp, #4
   35b10:	sub	sp, sp, #8
   35b14:	str	r0, [fp, #-8]
   35b18:	mov	r3, r1
   35b1c:	strb	r3, [fp, #-9]
   35b20:	ldrb	r3, [fp, #-9]
   35b24:	mov	r0, r3
   35b28:	bl	35ae0 <flatcc_verify_union_vector_field@@Base+0x228>
   35b2c:	mov	r3, r0
   35b30:	mov	r2, r3
   35b34:	ldr	r3, [fp, #-8]
   35b38:	strb	r2, [r3]
   35b3c:	nop			; (mov r0, r0)
   35b40:	sub	sp, fp, #4
   35b44:	pop	{fp, pc}
   35b48:	push	{fp, lr}
   35b4c:	add	fp, sp, #4
   35b50:	sub	sp, sp, #16
   35b54:	str	r0, [fp, #-8]
   35b58:	str	r1, [fp, #-12]
   35b5c:	str	r2, [fp, #-16]
   35b60:	str	r3, [fp, #-20]	; 0xffffffec
   35b64:	mov	r2, #44	; 0x2c
   35b68:	mov	r1, #0
   35b6c:	ldr	r0, [fp, #-8]
   35b70:	bl	145bc <memset@plt>
   35b74:	ldr	r3, [fp, #-8]
   35b78:	ldr	r2, [fp, #-12]
   35b7c:	str	r2, [r3]
   35b80:	ldr	r3, [fp, #-8]
   35b84:	ldr	r2, [fp, #-16]
   35b88:	str	r2, [r3, #4]
   35b8c:	ldr	r3, [fp, #-8]
   35b90:	mov	r2, #1
   35b94:	str	r2, [r3, #16]
   35b98:	ldr	r3, [fp, #-8]
   35b9c:	ldr	r2, [fp, #4]
   35ba0:	str	r2, [r3, #8]
   35ba4:	ldr	r3, [fp, #-8]
   35ba8:	ldr	r2, [fp, #-16]
   35bac:	str	r2, [r3, #28]
   35bb0:	ldr	r3, [fp, #-8]
   35bb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   35bb8:	str	r2, [r3, #32]
   35bbc:	ldr	r3, [fp, #-8]
   35bc0:	ldr	r2, [fp, #-16]
   35bc4:	str	r2, [r3, #36]	; 0x24
   35bc8:	nop			; (mov r0, r0)
   35bcc:	sub	sp, fp, #4
   35bd0:	pop	{fp, pc}
   35bd4:	push	{fp, lr}
   35bd8:	add	fp, sp, #4
   35bdc:	sub	sp, sp, #16
   35be0:	str	r0, [fp, #-8]
   35be4:	str	r1, [fp, #-12]
   35be8:	str	r2, [fp, #-16]
   35bec:	ldr	r2, [fp, #-16]
   35bf0:	ldr	r3, [fp, #-12]
   35bf4:	sub	r3, r2, r3
   35bf8:	cmp	r3, #1
   35bfc:	ble	35c48 <flatcc_verify_union_vector_field@@Base+0x390>
   35c00:	ldr	r3, [fp, #-12]
   35c04:	ldrb	r3, [r3]
   35c08:	cmp	r3, #32
   35c0c:	bls	35c18 <flatcc_verify_union_vector_field@@Base+0x360>
   35c10:	ldr	r3, [fp, #-12]
   35c14:	b	35c5c <flatcc_verify_union_vector_field@@Base+0x3a4>
   35c18:	ldr	r3, [fp, #-12]
   35c1c:	ldrb	r3, [r3]
   35c20:	cmp	r3, #32
   35c24:	bne	35c48 <flatcc_verify_union_vector_field@@Base+0x390>
   35c28:	ldr	r3, [fp, #-12]
   35c2c:	add	r3, r3, #1
   35c30:	ldrb	r3, [r3]
   35c34:	cmp	r3, #32
   35c38:	bls	35c48 <flatcc_verify_union_vector_field@@Base+0x390>
   35c3c:	ldr	r3, [fp, #-12]
   35c40:	add	r3, r3, #1
   35c44:	b	35c5c <flatcc_verify_union_vector_field@@Base+0x3a4>
   35c48:	ldr	r2, [fp, #-16]
   35c4c:	ldr	r1, [fp, #-12]
   35c50:	ldr	r0, [fp, #-8]
   35c54:	bl	3ab58 <flatcc_json_parser_space_ext@@Base>
   35c58:	mov	r3, r0
   35c5c:	mov	r0, r3
   35c60:	sub	sp, fp, #4
   35c64:	pop	{fp, pc}
   35c68:	push	{fp, lr}
   35c6c:	add	fp, sp, #4
   35c70:	sub	sp, sp, #16
   35c74:	str	r0, [fp, #-8]
   35c78:	str	r1, [fp, #-12]
   35c7c:	str	r2, [fp, #-16]
   35c80:	ldr	r2, [fp, #-12]
   35c84:	ldr	r3, [fp, #-16]
   35c88:	cmp	r2, r3
   35c8c:	beq	35ca0 <flatcc_verify_union_vector_field@@Base+0x3e8>
   35c90:	ldr	r3, [fp, #-12]
   35c94:	ldrb	r3, [r3]
   35c98:	cmp	r3, #34	; 0x22
   35c9c:	beq	35cbc <flatcc_verify_union_vector_field@@Base+0x404>
   35ca0:	mov	r3, #16
   35ca4:	ldr	r2, [fp, #-16]
   35ca8:	ldr	r1, [fp, #-12]
   35cac:	ldr	r0, [fp, #-8]
   35cb0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   35cb4:	mov	r3, r0
   35cb8:	b	35ccc <flatcc_verify_union_vector_field@@Base+0x414>
   35cbc:	ldr	r3, [fp, #-12]
   35cc0:	add	r3, r3, #1
   35cc4:	str	r3, [fp, #-12]
   35cc8:	ldr	r3, [fp, #-12]
   35ccc:	mov	r0, r3
   35cd0:	sub	sp, fp, #4
   35cd4:	pop	{fp, pc}
   35cd8:	push	{fp, lr}
   35cdc:	add	fp, sp, #4
   35ce0:	sub	sp, sp, #16
   35ce4:	str	r0, [fp, #-8]
   35ce8:	str	r1, [fp, #-12]
   35cec:	str	r2, [fp, #-16]
   35cf0:	ldr	r2, [fp, #-12]
   35cf4:	ldr	r3, [fp, #-16]
   35cf8:	cmp	r2, r3
   35cfc:	beq	35d10 <flatcc_verify_union_vector_field@@Base+0x458>
   35d00:	ldr	r3, [fp, #-12]
   35d04:	ldrb	r3, [r3]
   35d08:	cmp	r3, #34	; 0x22
   35d0c:	beq	35d2c <flatcc_verify_union_vector_field@@Base+0x474>
   35d10:	mov	r3, #20
   35d14:	ldr	r2, [fp, #-16]
   35d18:	ldr	r1, [fp, #-12]
   35d1c:	ldr	r0, [fp, #-8]
   35d20:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   35d24:	mov	r3, r0
   35d28:	b	35d3c <flatcc_verify_union_vector_field@@Base+0x484>
   35d2c:	ldr	r3, [fp, #-12]
   35d30:	add	r3, r3, #1
   35d34:	str	r3, [fp, #-12]
   35d38:	ldr	r3, [fp, #-12]
   35d3c:	mov	r0, r3
   35d40:	sub	sp, fp, #4
   35d44:	pop	{fp, pc}
   35d48:	push	{fp, lr}
   35d4c:	add	fp, sp, #4
   35d50:	sub	sp, sp, #16
   35d54:	str	r0, [fp, #-8]
   35d58:	str	r1, [fp, #-12]
   35d5c:	str	r2, [fp, #-16]
   35d60:	ldr	r2, [fp, #-12]
   35d64:	ldr	r3, [fp, #-16]
   35d68:	cmp	r2, r3
   35d6c:	bne	35d78 <flatcc_verify_union_vector_field@@Base+0x4c0>
   35d70:	ldr	r3, [fp, #-12]
   35d74:	b	35de0 <flatcc_verify_union_vector_field@@Base+0x528>
   35d78:	ldr	r3, [fp, #-12]
   35d7c:	ldrb	r3, [r3]
   35d80:	cmp	r3, #34	; 0x22
   35d84:	bne	35da4 <flatcc_verify_union_vector_field@@Base+0x4ec>
   35d88:	ldr	r3, [fp, #-12]
   35d8c:	add	r3, r3, #1
   35d90:	str	r3, [fp, #-12]
   35d94:	ldr	r3, [fp, #-8]
   35d98:	mov	r2, #0
   35d9c:	str	r2, [r3, #12]
   35da0:	b	35ddc <flatcc_verify_union_vector_field@@Base+0x524>
   35da4:	ldr	r3, [fp, #-12]
   35da8:	ldrb	r3, [r3]
   35dac:	cmp	r3, #46	; 0x2e
   35db0:	bne	35dd0 <flatcc_verify_union_vector_field@@Base+0x518>
   35db4:	mov	r3, #5
   35db8:	ldr	r2, [fp, #-16]
   35dbc:	ldr	r1, [fp, #-12]
   35dc0:	ldr	r0, [fp, #-8]
   35dc4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   35dc8:	mov	r3, r0
   35dcc:	b	35de0 <flatcc_verify_union_vector_field@@Base+0x528>
   35dd0:	ldr	r3, [fp, #-8]
   35dd4:	mov	r2, #1
   35dd8:	str	r2, [r3, #12]
   35ddc:	ldr	r3, [fp, #-12]
   35de0:	mov	r0, r3
   35de4:	sub	sp, fp, #4
   35de8:	pop	{fp, pc}
   35dec:	push	{fp, lr}
   35df0:	add	fp, sp, #4
   35df4:	sub	sp, sp, #24
   35df8:	str	r0, [fp, #-16]
   35dfc:	str	r1, [fp, #-20]	; 0xffffffec
   35e00:	str	r2, [fp, #-24]	; 0xffffffe8
   35e04:	mov	r3, #0
   35e08:	strb	r3, [fp, #-5]
   35e0c:	ldr	r3, [fp, #-16]
   35e10:	ldr	r3, [r3, #12]
   35e14:	cmp	r3, #0
   35e18:	beq	35f40 <flatcc_verify_union_vector_field@@Base+0x688>
   35e1c:	b	35eb4 <flatcc_verify_union_vector_field@@Base+0x5fc>
   35e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   35e24:	ldrb	r3, [r3]
   35e28:	strb	r3, [fp, #-6]
   35e2c:	ldrb	r3, [fp, #-6]
   35e30:	strb	r3, [fp, #-5]
   35e34:	ldrb	r3, [fp, #-6]
   35e38:	cmp	r3, #95	; 0x5f
   35e3c:	beq	35e70 <flatcc_verify_union_vector_field@@Base+0x5b8>
   35e40:	ldrb	r3, [fp, #-6]
   35e44:	cmp	r3, #46	; 0x2e
   35e48:	beq	35e70 <flatcc_verify_union_vector_field@@Base+0x5b8>
   35e4c:	ldrsb	r3, [fp, #-6]
   35e50:	cmp	r3, #0
   35e54:	blt	35e70 <flatcc_verify_union_vector_field@@Base+0x5b8>
   35e58:	ldrb	r3, [fp, #-6]
   35e5c:	cmp	r3, #47	; 0x2f
   35e60:	bls	35e80 <flatcc_verify_union_vector_field@@Base+0x5c8>
   35e64:	ldrb	r3, [fp, #-6]
   35e68:	cmp	r3, #57	; 0x39
   35e6c:	bhi	35e80 <flatcc_verify_union_vector_field@@Base+0x5c8>
   35e70:	ldr	r3, [fp, #-20]	; 0xffffffec
   35e74:	add	r3, r3, #1
   35e78:	str	r3, [fp, #-20]	; 0xffffffec
   35e7c:	b	35eb4 <flatcc_verify_union_vector_field@@Base+0x5fc>
   35e80:	ldrb	r3, [fp, #-6]
   35e84:	orr	r3, r3, #32
   35e88:	strb	r3, [fp, #-6]
   35e8c:	ldrb	r3, [fp, #-6]
   35e90:	cmp	r3, #96	; 0x60
   35e94:	bls	35ed8 <flatcc_verify_union_vector_field@@Base+0x620>
   35e98:	ldrb	r3, [fp, #-6]
   35e9c:	cmp	r3, #122	; 0x7a
   35ea0:	bhi	35ed8 <flatcc_verify_union_vector_field@@Base+0x620>
   35ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   35ea8:	add	r3, r3, #1
   35eac:	str	r3, [fp, #-20]	; 0xffffffec
   35eb0:	nop			; (mov r0, r0)
   35eb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   35eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35ebc:	cmp	r2, r3
   35ec0:	beq	35edc <flatcc_verify_union_vector_field@@Base+0x624>
   35ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   35ec8:	ldrb	r3, [r3]
   35ecc:	cmp	r3, #32
   35ed0:	bhi	35e20 <flatcc_verify_union_vector_field@@Base+0x568>
   35ed4:	b	35edc <flatcc_verify_union_vector_field@@Base+0x624>
   35ed8:	nop			; (mov r0, r0)
   35edc:	ldrb	r3, [fp, #-5]
   35ee0:	cmp	r3, #46	; 0x2e
   35ee4:	bne	35fb0 <flatcc_verify_union_vector_field@@Base+0x6f8>
   35ee8:	mov	r3, #5
   35eec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35ef0:	ldr	r1, [fp, #-20]	; 0xffffffec
   35ef4:	ldr	r0, [fp, #-16]
   35ef8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   35efc:	mov	r3, r0
   35f00:	b	35fb4 <flatcc_verify_union_vector_field@@Base+0x6fc>
   35f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   35f08:	ldrb	r3, [r3]
   35f0c:	cmp	r3, #92	; 0x5c
   35f10:	bne	35f34 <flatcc_verify_union_vector_field@@Base+0x67c>
   35f14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35f18:	ldr	r3, [fp, #-20]	; 0xffffffec
   35f1c:	sub	r3, r2, r3
   35f20:	cmp	r3, #1
   35f24:	ble	35f64 <flatcc_verify_union_vector_field@@Base+0x6ac>
   35f28:	ldr	r3, [fp, #-20]	; 0xffffffec
   35f2c:	add	r3, r3, #1
   35f30:	str	r3, [fp, #-20]	; 0xffffffec
   35f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   35f38:	add	r3, r3, #1
   35f3c:	str	r3, [fp, #-20]	; 0xffffffec
   35f40:	ldr	r2, [fp, #-20]	; 0xffffffec
   35f44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35f48:	cmp	r2, r3
   35f4c:	beq	35f68 <flatcc_verify_union_vector_field@@Base+0x6b0>
   35f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   35f54:	ldrb	r3, [r3]
   35f58:	cmp	r3, #34	; 0x22
   35f5c:	bne	35f04 <flatcc_verify_union_vector_field@@Base+0x64c>
   35f60:	b	35f68 <flatcc_verify_union_vector_field@@Base+0x6b0>
   35f64:	nop			; (mov r0, r0)
   35f68:	ldr	r2, [fp, #-20]	; 0xffffffec
   35f6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35f70:	cmp	r2, r3
   35f74:	beq	35f88 <flatcc_verify_union_vector_field@@Base+0x6d0>
   35f78:	ldr	r3, [fp, #-20]	; 0xffffffec
   35f7c:	ldrb	r3, [r3]
   35f80:	cmp	r3, #34	; 0x22
   35f84:	beq	35fa4 <flatcc_verify_union_vector_field@@Base+0x6ec>
   35f88:	mov	r3, #20
   35f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35f90:	ldr	r1, [fp, #-20]	; 0xffffffec
   35f94:	ldr	r0, [fp, #-16]
   35f98:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   35f9c:	mov	r3, r0
   35fa0:	b	35fb4 <flatcc_verify_union_vector_field@@Base+0x6fc>
   35fa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   35fa8:	add	r3, r3, #1
   35fac:	str	r3, [fp, #-20]	; 0xffffffec
   35fb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   35fb4:	mov	r0, r3
   35fb8:	sub	sp, fp, #4
   35fbc:	pop	{fp, pc}
   35fc0:	push	{fp, lr}
   35fc4:	add	fp, sp, #4
   35fc8:	sub	sp, sp, #16
   35fcc:	str	r0, [fp, #-8]
   35fd0:	str	r1, [fp, #-12]
   35fd4:	str	r2, [fp, #-16]
   35fd8:	ldr	r2, [fp, #-16]
   35fdc:	ldr	r1, [fp, #-12]
   35fe0:	ldr	r0, [fp, #-8]
   35fe4:	bl	35d48 <flatcc_verify_union_vector_field@@Base+0x490>
   35fe8:	str	r0, [fp, #-12]
   35fec:	ldr	r3, [fp, #-8]
   35ff0:	ldr	r3, [r3, #12]
   35ff4:	cmp	r3, #0
   35ff8:	bne	36010 <flatcc_verify_union_vector_field@@Base+0x758>
   35ffc:	ldr	r2, [fp, #-16]
   36000:	ldr	r1, [fp, #-12]
   36004:	ldr	r0, [fp, #-8]
   36008:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3600c:	str	r0, [fp, #-12]
   36010:	ldr	r3, [fp, #-12]
   36014:	mov	r0, r3
   36018:	sub	sp, fp, #4
   3601c:	pop	{fp, pc}
   36020:	push	{fp, lr}
   36024:	add	fp, sp, #4
   36028:	sub	sp, sp, #16
   3602c:	str	r0, [fp, #-8]
   36030:	str	r1, [fp, #-12]
   36034:	str	r2, [fp, #-16]
   36038:	str	r3, [fp, #-20]	; 0xffffffec
   3603c:	ldr	r2, [fp, #-16]
   36040:	ldr	r1, [fp, #-12]
   36044:	ldr	r0, [fp, #-8]
   36048:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3604c:	str	r0, [fp, #-12]
   36050:	ldr	r2, [fp, #-12]
   36054:	ldr	r3, [fp, #-16]
   36058:	cmp	r2, r3
   3605c:	bne	36074 <flatcc_verify_union_vector_field@@Base+0x7bc>
   36060:	ldr	r3, [fp, #-20]	; 0xffffffec
   36064:	mov	r2, #0
   36068:	str	r2, [r3]
   3606c:	ldr	r3, [fp, #-12]
   36070:	b	3617c <flatcc_verify_union_vector_field@@Base+0x8c4>
   36074:	ldr	r3, [fp, #-12]
   36078:	ldrb	r3, [r3]
   3607c:	cmp	r3, #44	; 0x2c
   36080:	beq	360dc <flatcc_verify_union_vector_field@@Base+0x824>
   36084:	ldr	r3, [fp, #-20]	; 0xffffffec
   36088:	mov	r2, #0
   3608c:	str	r2, [r3]
   36090:	ldr	r3, [fp, #-12]
   36094:	ldrb	r3, [r3]
   36098:	cmp	r3, #125	; 0x7d
   3609c:	beq	360bc <flatcc_verify_union_vector_field@@Base+0x804>
   360a0:	mov	r3, #10
   360a4:	ldr	r2, [fp, #-16]
   360a8:	ldr	r1, [fp, #-12]
   360ac:	ldr	r0, [fp, #-8]
   360b0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   360b4:	mov	r3, r0
   360b8:	b	3617c <flatcc_verify_union_vector_field@@Base+0x8c4>
   360bc:	ldr	r3, [fp, #-12]
   360c0:	add	r3, r3, #1
   360c4:	ldr	r2, [fp, #-16]
   360c8:	mov	r1, r3
   360cc:	ldr	r0, [fp, #-8]
   360d0:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   360d4:	mov	r3, r0
   360d8:	b	3617c <flatcc_verify_union_vector_field@@Base+0x8c4>
   360dc:	ldr	r3, [fp, #-12]
   360e0:	add	r3, r3, #1
   360e4:	ldr	r2, [fp, #-16]
   360e8:	mov	r1, r3
   360ec:	ldr	r0, [fp, #-8]
   360f0:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   360f4:	str	r0, [fp, #-12]
   360f8:	ldr	r2, [fp, #-12]
   360fc:	ldr	r3, [fp, #-16]
   36100:	cmp	r2, r3
   36104:	bne	36130 <flatcc_verify_union_vector_field@@Base+0x878>
   36108:	ldr	r3, [fp, #-20]	; 0xffffffec
   3610c:	mov	r2, #0
   36110:	str	r2, [r3]
   36114:	mov	r3, #10
   36118:	ldr	r2, [fp, #-16]
   3611c:	ldr	r1, [fp, #-12]
   36120:	ldr	r0, [fp, #-8]
   36124:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36128:	mov	r3, r0
   3612c:	b	3617c <flatcc_verify_union_vector_field@@Base+0x8c4>
   36130:	ldr	r3, [fp, #-12]
   36134:	ldrb	r3, [r3]
   36138:	cmp	r3, #125	; 0x7d
   3613c:	bne	3616c <flatcc_verify_union_vector_field@@Base+0x8b4>
   36140:	ldr	r3, [fp, #-20]	; 0xffffffec
   36144:	mov	r2, #0
   36148:	str	r2, [r3]
   3614c:	ldr	r3, [fp, #-12]
   36150:	add	r3, r3, #1
   36154:	ldr	r2, [fp, #-16]
   36158:	mov	r1, r3
   3615c:	ldr	r0, [fp, #-8]
   36160:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   36164:	mov	r3, r0
   36168:	b	3617c <flatcc_verify_union_vector_field@@Base+0x8c4>
   3616c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36170:	mov	r2, #1
   36174:	str	r2, [r3]
   36178:	ldr	r3, [fp, #-12]
   3617c:	mov	r0, r3
   36180:	sub	sp, fp, #4
   36184:	pop	{fp, pc}
   36188:	push	{fp, lr}
   3618c:	add	fp, sp, #4
   36190:	sub	sp, sp, #16
   36194:	str	r0, [fp, #-8]
   36198:	str	r1, [fp, #-12]
   3619c:	str	r2, [fp, #-16]
   361a0:	str	r3, [fp, #-20]	; 0xffffffec
   361a4:	ldr	r2, [fp, #-12]
   361a8:	ldr	r3, [fp, #-16]
   361ac:	cmp	r2, r3
   361b0:	beq	361c4 <flatcc_verify_union_vector_field@@Base+0x90c>
   361b4:	ldr	r3, [fp, #-12]
   361b8:	ldrb	r3, [r3]
   361bc:	cmp	r3, #91	; 0x5b
   361c0:	beq	361ec <flatcc_verify_union_vector_field@@Base+0x934>
   361c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   361c8:	mov	r2, #0
   361cc:	str	r2, [r3]
   361d0:	mov	r3, #22
   361d4:	ldr	r2, [fp, #-16]
   361d8:	ldr	r1, [fp, #-12]
   361dc:	ldr	r0, [fp, #-8]
   361e0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   361e4:	mov	r3, r0
   361e8:	b	36264 <flatcc_verify_union_vector_field@@Base+0x9ac>
   361ec:	ldr	r3, [fp, #-12]
   361f0:	add	r3, r3, #1
   361f4:	ldr	r2, [fp, #-16]
   361f8:	mov	r1, r3
   361fc:	ldr	r0, [fp, #-8]
   36200:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   36204:	str	r0, [fp, #-12]
   36208:	ldr	r2, [fp, #-12]
   3620c:	ldr	r3, [fp, #-16]
   36210:	cmp	r2, r3
   36214:	beq	36254 <flatcc_verify_union_vector_field@@Base+0x99c>
   36218:	ldr	r3, [fp, #-12]
   3621c:	ldrb	r3, [r3]
   36220:	cmp	r3, #93	; 0x5d
   36224:	bne	36254 <flatcc_verify_union_vector_field@@Base+0x99c>
   36228:	ldr	r3, [fp, #-20]	; 0xffffffec
   3622c:	mov	r2, #0
   36230:	str	r2, [r3]
   36234:	ldr	r3, [fp, #-12]
   36238:	add	r3, r3, #1
   3623c:	ldr	r2, [fp, #-16]
   36240:	mov	r1, r3
   36244:	ldr	r0, [fp, #-8]
   36248:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3624c:	mov	r3, r0
   36250:	b	36264 <flatcc_verify_union_vector_field@@Base+0x9ac>
   36254:	ldr	r3, [fp, #-20]	; 0xffffffec
   36258:	mov	r2, #1
   3625c:	str	r2, [r3]
   36260:	ldr	r3, [fp, #-12]
   36264:	mov	r0, r3
   36268:	sub	sp, fp, #4
   3626c:	pop	{fp, pc}
   36270:	push	{fp, lr}
   36274:	add	fp, sp, #4
   36278:	sub	sp, sp, #16
   3627c:	str	r0, [fp, #-8]
   36280:	str	r1, [fp, #-12]
   36284:	str	r2, [fp, #-16]
   36288:	str	r3, [fp, #-20]	; 0xffffffec
   3628c:	ldr	r2, [fp, #-16]
   36290:	ldr	r1, [fp, #-12]
   36294:	ldr	r0, [fp, #-8]
   36298:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3629c:	str	r0, [fp, #-12]
   362a0:	ldr	r2, [fp, #-12]
   362a4:	ldr	r3, [fp, #-16]
   362a8:	cmp	r2, r3
   362ac:	bne	362c4 <flatcc_verify_union_vector_field@@Base+0xa0c>
   362b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   362b4:	mov	r2, #0
   362b8:	str	r2, [r3]
   362bc:	ldr	r3, [fp, #-12]
   362c0:	b	363cc <flatcc_verify_union_vector_field@@Base+0xb14>
   362c4:	ldr	r3, [fp, #-12]
   362c8:	ldrb	r3, [r3]
   362cc:	cmp	r3, #44	; 0x2c
   362d0:	beq	3632c <flatcc_verify_union_vector_field@@Base+0xa74>
   362d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   362d8:	mov	r2, #0
   362dc:	str	r2, [r3]
   362e0:	ldr	r3, [fp, #-12]
   362e4:	ldrb	r3, [r3]
   362e8:	cmp	r3, #93	; 0x5d
   362ec:	beq	3630c <flatcc_verify_union_vector_field@@Base+0xa54>
   362f0:	mov	r3, #9
   362f4:	ldr	r2, [fp, #-16]
   362f8:	ldr	r1, [fp, #-12]
   362fc:	ldr	r0, [fp, #-8]
   36300:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36304:	mov	r3, r0
   36308:	b	363cc <flatcc_verify_union_vector_field@@Base+0xb14>
   3630c:	ldr	r3, [fp, #-12]
   36310:	add	r3, r3, #1
   36314:	ldr	r2, [fp, #-16]
   36318:	mov	r1, r3
   3631c:	ldr	r0, [fp, #-8]
   36320:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   36324:	mov	r3, r0
   36328:	b	363cc <flatcc_verify_union_vector_field@@Base+0xb14>
   3632c:	ldr	r3, [fp, #-12]
   36330:	add	r3, r3, #1
   36334:	ldr	r2, [fp, #-16]
   36338:	mov	r1, r3
   3633c:	ldr	r0, [fp, #-8]
   36340:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   36344:	str	r0, [fp, #-12]
   36348:	ldr	r2, [fp, #-12]
   3634c:	ldr	r3, [fp, #-16]
   36350:	cmp	r2, r3
   36354:	bne	36380 <flatcc_verify_union_vector_field@@Base+0xac8>
   36358:	ldr	r3, [fp, #-20]	; 0xffffffec
   3635c:	mov	r2, #0
   36360:	str	r2, [r3]
   36364:	mov	r3, #9
   36368:	ldr	r2, [fp, #-16]
   3636c:	ldr	r1, [fp, #-12]
   36370:	ldr	r0, [fp, #-8]
   36374:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36378:	mov	r3, r0
   3637c:	b	363cc <flatcc_verify_union_vector_field@@Base+0xb14>
   36380:	ldr	r3, [fp, #-12]
   36384:	ldrb	r3, [r3]
   36388:	cmp	r3, #93	; 0x5d
   3638c:	bne	363bc <flatcc_verify_union_vector_field@@Base+0xb04>
   36390:	ldr	r3, [fp, #-20]	; 0xffffffec
   36394:	mov	r2, #0
   36398:	str	r2, [r3]
   3639c:	ldr	r3, [fp, #-12]
   363a0:	add	r3, r3, #1
   363a4:	ldr	r2, [fp, #-16]
   363a8:	mov	r1, r3
   363ac:	ldr	r0, [fp, #-8]
   363b0:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   363b4:	mov	r3, r0
   363b8:	b	363cc <flatcc_verify_union_vector_field@@Base+0xb14>
   363bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   363c0:	mov	r2, #1
   363c4:	str	r2, [r3]
   363c8:	ldr	r3, [fp, #-12]
   363cc:	mov	r0, r3
   363d0:	sub	sp, fp, #4
   363d4:	pop	{fp, pc}
   363d8:	push	{fp, lr}
   363dc:	add	fp, sp, #4
   363e0:	sub	sp, sp, #16
   363e4:	str	r0, [fp, #-8]
   363e8:	str	r1, [fp, #-12]
   363ec:	str	r2, [fp, #-16]
   363f0:	str	r3, [fp, #-20]	; 0xffffffec
   363f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   363f8:	cmp	r3, #0
   363fc:	beq	3641c <flatcc_verify_union_vector_field@@Base+0xb64>
   36400:	mov	r3, #8
   36404:	ldr	r2, [fp, #-16]
   36408:	ldr	r1, [fp, #-12]
   3640c:	ldr	r0, [fp, #-8]
   36410:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36414:	mov	r3, r0
   36418:	b	3642c <flatcc_verify_union_vector_field@@Base+0xb74>
   3641c:	ldr	r1, [fp, #12]
   36420:	ldrd	r2, [fp, #4]
   36424:	strd	r2, [r1]
   36428:	ldr	r3, [fp, #-12]
   3642c:	mov	r0, r3
   36430:	sub	sp, fp, #4
   36434:	pop	{fp, pc}
   36438:	push	{fp, lr}
   3643c:	add	fp, sp, #4
   36440:	sub	sp, sp, #16
   36444:	str	r0, [fp, #-8]
   36448:	str	r1, [fp, #-12]
   3644c:	str	r2, [fp, #-16]
   36450:	str	r3, [fp, #-20]	; 0xffffffec
   36454:	ldr	r3, [fp, #-20]	; 0xffffffec
   36458:	cmp	r3, #0
   3645c:	beq	3647c <flatcc_verify_union_vector_field@@Base+0xbc4>
   36460:	mov	r3, #8
   36464:	ldr	r2, [fp, #-16]
   36468:	ldr	r1, [fp, #-12]
   3646c:	ldr	r0, [fp, #-8]
   36470:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36474:	mov	r3, r0
   36478:	b	364a8 <flatcc_verify_union_vector_field@@Base+0xbf0>
   3647c:	ldr	r2, [fp, #4]
   36480:	ldr	r3, [fp, #8]
   36484:	orr	r3, r2, r3
   36488:	cmp	r3, #0
   3648c:	movne	r3, #1
   36490:	moveq	r3, #0
   36494:	uxtb	r3, r3
   36498:	mov	r2, r3
   3649c:	ldr	r3, [fp, #12]
   364a0:	strb	r2, [r3]
   364a4:	ldr	r3, [fp, #-12]
   364a8:	mov	r0, r3
   364ac:	sub	sp, fp, #4
   364b0:	pop	{fp, pc}
   364b4:	push	{fp, lr}
   364b8:	add	fp, sp, #4
   364bc:	sub	sp, sp, #16
   364c0:	str	r0, [fp, #-8]
   364c4:	str	r1, [fp, #-12]
   364c8:	str	r2, [fp, #-16]
   364cc:	str	r3, [fp, #-20]	; 0xffffffec
   364d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   364d4:	cmp	r3, #0
   364d8:	beq	364f8 <flatcc_verify_union_vector_field@@Base+0xc40>
   364dc:	mov	r3, #8
   364e0:	ldr	r2, [fp, #-16]
   364e4:	ldr	r1, [fp, #-12]
   364e8:	ldr	r0, [fp, #-8]
   364ec:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   364f0:	mov	r3, r0
   364f4:	b	3653c <flatcc_verify_union_vector_field@@Base+0xc84>
   364f8:	ldrd	r2, [fp, #4]
   364fc:	mvn	r0, #0
   36500:	mov	r1, #0
   36504:	cmp	r3, r1
   36508:	cmpeq	r2, r0
   3650c:	bls	3652c <flatcc_verify_union_vector_field@@Base+0xc74>
   36510:	mov	r3, #7
   36514:	ldr	r2, [fp, #-16]
   36518:	ldr	r1, [fp, #-12]
   3651c:	ldr	r0, [fp, #-8]
   36520:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36524:	mov	r3, r0
   36528:	b	3653c <flatcc_verify_union_vector_field@@Base+0xc84>
   3652c:	ldr	r2, [fp, #4]
   36530:	ldr	r3, [fp, #12]
   36534:	str	r2, [r3]
   36538:	ldr	r3, [fp, #-12]
   3653c:	mov	r0, r3
   36540:	sub	sp, fp, #4
   36544:	pop	{fp, pc}
   36548:	push	{fp, lr}
   3654c:	add	fp, sp, #4
   36550:	sub	sp, sp, #16
   36554:	str	r0, [fp, #-8]
   36558:	str	r1, [fp, #-12]
   3655c:	str	r2, [fp, #-16]
   36560:	str	r3, [fp, #-20]	; 0xffffffec
   36564:	ldr	r3, [fp, #-20]	; 0xffffffec
   36568:	cmp	r3, #0
   3656c:	beq	3658c <flatcc_verify_union_vector_field@@Base+0xcd4>
   36570:	mov	r3, #8
   36574:	ldr	r2, [fp, #-16]
   36578:	ldr	r1, [fp, #-12]
   3657c:	ldr	r0, [fp, #-8]
   36580:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36584:	mov	r3, r0
   36588:	b	365d0 <flatcc_verify_union_vector_field@@Base+0xd18>
   3658c:	ldrd	r2, [fp, #4]
   36590:	ldr	r0, [pc, #68]	; 365dc <flatcc_verify_union_vector_field@@Base+0xd24>
   36594:	mov	r1, #0
   36598:	cmp	r3, r1
   3659c:	cmpeq	r2, r0
   365a0:	bls	365c0 <flatcc_verify_union_vector_field@@Base+0xd08>
   365a4:	mov	r3, #7
   365a8:	ldr	r2, [fp, #-16]
   365ac:	ldr	r1, [fp, #-12]
   365b0:	ldr	r0, [fp, #-8]
   365b4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   365b8:	mov	r3, r0
   365bc:	b	365d0 <flatcc_verify_union_vector_field@@Base+0xd18>
   365c0:	ldrh	r2, [fp, #4]
   365c4:	ldr	r3, [fp, #12]
   365c8:	strh	r2, [r3]
   365cc:	ldr	r3, [fp, #-12]
   365d0:	mov	r0, r3
   365d4:	sub	sp, fp, #4
   365d8:	pop	{fp, pc}
   365dc:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   365e0:	push	{fp, lr}
   365e4:	add	fp, sp, #4
   365e8:	sub	sp, sp, #16
   365ec:	str	r0, [fp, #-8]
   365f0:	str	r1, [fp, #-12]
   365f4:	str	r2, [fp, #-16]
   365f8:	str	r3, [fp, #-20]	; 0xffffffec
   365fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   36600:	cmp	r3, #0
   36604:	beq	36624 <flatcc_verify_union_vector_field@@Base+0xd6c>
   36608:	mov	r3, #8
   3660c:	ldr	r2, [fp, #-16]
   36610:	ldr	r1, [fp, #-12]
   36614:	ldr	r0, [fp, #-8]
   36618:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3661c:	mov	r3, r0
   36620:	b	36660 <flatcc_verify_union_vector_field@@Base+0xda8>
   36624:	ldrd	r2, [fp, #4]
   36628:	cmp	r3, #0
   3662c:	cmpeq	r2, #255	; 0xff
   36630:	bls	36650 <flatcc_verify_union_vector_field@@Base+0xd98>
   36634:	mov	r3, #7
   36638:	ldr	r2, [fp, #-16]
   3663c:	ldr	r1, [fp, #-12]
   36640:	ldr	r0, [fp, #-8]
   36644:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36648:	mov	r3, r0
   3664c:	b	36660 <flatcc_verify_union_vector_field@@Base+0xda8>
   36650:	ldrb	r2, [fp, #4]
   36654:	ldr	r3, [fp, #12]
   36658:	strb	r2, [r3]
   3665c:	ldr	r3, [fp, #-12]
   36660:	mov	r0, r3
   36664:	sub	sp, fp, #4
   36668:	pop	{fp, pc}
   3666c:	push	{fp, lr}
   36670:	add	fp, sp, #4
   36674:	sub	sp, sp, #16
   36678:	str	r0, [fp, #-8]
   3667c:	str	r1, [fp, #-12]
   36680:	str	r2, [fp, #-16]
   36684:	str	r3, [fp, #-20]	; 0xffffffec
   36688:	ldr	r3, [fp, #-20]	; 0xffffffec
   3668c:	cmp	r3, #0
   36690:	beq	366d8 <flatcc_verify_union_vector_field@@Base+0xe20>
   36694:	ldrd	r2, [fp, #4]
   36698:	cmp	r3, #-2147483648	; 0x80000000
   3669c:	cmpeq	r2, #0
   366a0:	bls	366c0 <flatcc_verify_union_vector_field@@Base+0xe08>
   366a4:	mov	r3, #8
   366a8:	ldr	r2, [fp, #-16]
   366ac:	ldr	r1, [fp, #-12]
   366b0:	ldr	r0, [fp, #-8]
   366b4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   366b8:	mov	r3, r0
   366bc:	b	36714 <flatcc_verify_union_vector_field@@Base+0xe5c>
   366c0:	ldrd	r2, [fp, #4]
   366c4:	rsbs	r2, r2, #0
   366c8:	rsc	r3, r3, #0
   366cc:	ldr	r1, [fp, #12]
   366d0:	strd	r2, [r1]
   366d4:	b	36710 <flatcc_verify_union_vector_field@@Base+0xe58>
   366d8:	ldrd	r2, [fp, #4]
   366dc:	cmp	r2, #0
   366e0:	sbcs	r3, r3, #0
   366e4:	bge	36704 <flatcc_verify_union_vector_field@@Base+0xe4c>
   366e8:	mov	r3, #7
   366ec:	ldr	r2, [fp, #-16]
   366f0:	ldr	r1, [fp, #-12]
   366f4:	ldr	r0, [fp, #-8]
   366f8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   366fc:	mov	r3, r0
   36700:	b	36714 <flatcc_verify_union_vector_field@@Base+0xe5c>
   36704:	ldrd	r2, [fp, #4]
   36708:	ldr	r1, [fp, #12]
   3670c:	strd	r2, [r1]
   36710:	ldr	r3, [fp, #-12]
   36714:	mov	r0, r3
   36718:	sub	sp, fp, #4
   3671c:	pop	{fp, pc}
   36720:	push	{fp, lr}
   36724:	add	fp, sp, #4
   36728:	sub	sp, sp, #16
   3672c:	str	r0, [fp, #-8]
   36730:	str	r1, [fp, #-12]
   36734:	str	r2, [fp, #-16]
   36738:	str	r3, [fp, #-20]	; 0xffffffec
   3673c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36740:	cmp	r3, #0
   36744:	beq	3678c <flatcc_verify_union_vector_field@@Base+0xed4>
   36748:	ldrd	r2, [fp, #4]
   3674c:	cmp	r3, #0
   36750:	cmpeq	r2, #-2147483648	; 0x80000000
   36754:	bls	36774 <flatcc_verify_union_vector_field@@Base+0xebc>
   36758:	mov	r3, #8
   3675c:	ldr	r2, [fp, #-16]
   36760:	ldr	r1, [fp, #-12]
   36764:	ldr	r0, [fp, #-8]
   36768:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3676c:	mov	r3, r0
   36770:	b	367d0 <flatcc_verify_union_vector_field@@Base+0xf18>
   36774:	ldr	r3, [fp, #4]
   36778:	rsb	r3, r3, #0
   3677c:	mov	r2, r3
   36780:	ldr	r3, [fp, #12]
   36784:	str	r2, [r3]
   36788:	b	367cc <flatcc_verify_union_vector_field@@Base+0xf14>
   3678c:	ldrd	r2, [fp, #4]
   36790:	mvn	r0, #-2147483648	; 0x80000000
   36794:	mov	r1, #0
   36798:	cmp	r3, r1
   3679c:	cmpeq	r2, r0
   367a0:	bls	367c0 <flatcc_verify_union_vector_field@@Base+0xf08>
   367a4:	mov	r3, #7
   367a8:	ldr	r2, [fp, #-16]
   367ac:	ldr	r1, [fp, #-12]
   367b0:	ldr	r0, [fp, #-8]
   367b4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   367b8:	mov	r3, r0
   367bc:	b	367d0 <flatcc_verify_union_vector_field@@Base+0xf18>
   367c0:	ldr	r2, [fp, #4]
   367c4:	ldr	r3, [fp, #12]
   367c8:	str	r2, [r3]
   367cc:	ldr	r3, [fp, #-12]
   367d0:	mov	r0, r3
   367d4:	sub	sp, fp, #4
   367d8:	pop	{fp, pc}
   367dc:	push	{fp, lr}
   367e0:	add	fp, sp, #4
   367e4:	sub	sp, sp, #16
   367e8:	str	r0, [fp, #-8]
   367ec:	str	r1, [fp, #-12]
   367f0:	str	r2, [fp, #-16]
   367f4:	str	r3, [fp, #-20]	; 0xffffffec
   367f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   367fc:	cmp	r3, #0
   36800:	beq	3684c <flatcc_verify_union_vector_field@@Base+0xf94>
   36804:	ldrd	r2, [fp, #4]
   36808:	cmp	r3, #0
   3680c:	cmpeq	r2, #32768	; 0x8000
   36810:	bls	36830 <flatcc_verify_union_vector_field@@Base+0xf78>
   36814:	mov	r3, #8
   36818:	ldr	r2, [fp, #-16]
   3681c:	ldr	r1, [fp, #-12]
   36820:	ldr	r0, [fp, #-8]
   36824:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36828:	mov	r3, r0
   3682c:	b	36890 <flatcc_verify_union_vector_field@@Base+0xfd8>
   36830:	ldrh	r3, [fp, #4]
   36834:	rsb	r3, r3, #0
   36838:	uxth	r3, r3
   3683c:	sxth	r2, r3
   36840:	ldr	r3, [fp, #12]
   36844:	strh	r2, [r3]
   36848:	b	3688c <flatcc_verify_union_vector_field@@Base+0xfd4>
   3684c:	ldrd	r2, [fp, #4]
   36850:	ldr	r0, [pc, #68]	; 3689c <flatcc_verify_union_vector_field@@Base+0xfe4>
   36854:	mov	r1, #0
   36858:	cmp	r3, r1
   3685c:	cmpeq	r2, r0
   36860:	bls	36880 <flatcc_verify_union_vector_field@@Base+0xfc8>
   36864:	mov	r3, #7
   36868:	ldr	r2, [fp, #-16]
   3686c:	ldr	r1, [fp, #-12]
   36870:	ldr	r0, [fp, #-8]
   36874:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36878:	mov	r3, r0
   3687c:	b	36890 <flatcc_verify_union_vector_field@@Base+0xfd8>
   36880:	ldrsh	r2, [fp, #4]
   36884:	ldr	r3, [fp, #12]
   36888:	strh	r2, [r3]
   3688c:	ldr	r3, [fp, #-12]
   36890:	mov	r0, r3
   36894:	sub	sp, fp, #4
   36898:	pop	{fp, pc}
   3689c:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   368a0:	push	{fp, lr}
   368a4:	add	fp, sp, #4
   368a8:	sub	sp, sp, #16
   368ac:	str	r0, [fp, #-8]
   368b0:	str	r1, [fp, #-12]
   368b4:	str	r2, [fp, #-16]
   368b8:	str	r3, [fp, #-20]	; 0xffffffec
   368bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   368c0:	cmp	r3, #0
   368c4:	beq	36910 <flatcc_verify_union_vector_field@@Base+0x1058>
   368c8:	ldrd	r2, [fp, #4]
   368cc:	cmp	r3, #0
   368d0:	cmpeq	r2, #128	; 0x80
   368d4:	bls	368f4 <flatcc_verify_union_vector_field@@Base+0x103c>
   368d8:	mov	r3, #8
   368dc:	ldr	r2, [fp, #-16]
   368e0:	ldr	r1, [fp, #-12]
   368e4:	ldr	r0, [fp, #-8]
   368e8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   368ec:	mov	r3, r0
   368f0:	b	3694c <flatcc_verify_union_vector_field@@Base+0x1094>
   368f4:	ldrb	r3, [fp, #4]
   368f8:	rsb	r3, r3, #0
   368fc:	uxtb	r3, r3
   36900:	sxtb	r2, r3
   36904:	ldr	r3, [fp, #12]
   36908:	strb	r2, [r3]
   3690c:	b	36948 <flatcc_verify_union_vector_field@@Base+0x1090>
   36910:	ldrd	r2, [fp, #4]
   36914:	cmp	r3, #0
   36918:	cmpeq	r2, #127	; 0x7f
   3691c:	bls	3693c <flatcc_verify_union_vector_field@@Base+0x1084>
   36920:	mov	r3, #7
   36924:	ldr	r2, [fp, #-16]
   36928:	ldr	r1, [fp, #-12]
   3692c:	ldr	r0, [fp, #-8]
   36930:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36934:	mov	r3, r0
   36938:	b	3694c <flatcc_verify_union_vector_field@@Base+0x1094>
   3693c:	ldrsb	r2, [fp, #4]
   36940:	ldr	r3, [fp, #12]
   36944:	strb	r2, [r3]
   36948:	ldr	r3, [fp, #-12]
   3694c:	mov	r0, r3
   36950:	sub	sp, fp, #4
   36954:	pop	{fp, pc}
   36958:	push	{fp, lr}
   3695c:	add	fp, sp, #4
   36960:	sub	sp, sp, #16
   36964:	str	r0, [fp, #-8]
   36968:	str	r1, [fp, #-12]
   3696c:	str	r2, [fp, #-16]
   36970:	str	r3, [fp, #-20]	; 0xffffffec
   36974:	ldr	r3, [fp, #-20]	; 0xffffffec
   36978:	cmp	r3, #0
   3697c:	beq	36994 <flatcc_verify_union_vector_field@@Base+0x10dc>
   36980:	ldrd	r0, [fp, #4]
   36984:	bl	4c490 <flatcc_json_printer_clear@@Base+0xa24>
   36988:	mov	r3, r0
   3698c:	eor	r2, r3, #-2147483648	; 0x80000000
   36990:	b	369a0 <flatcc_verify_union_vector_field@@Base+0x10e8>
   36994:	ldrd	r0, [fp, #4]
   36998:	bl	4c490 <flatcc_json_printer_clear@@Base+0xa24>
   3699c:	mov	r2, r0
   369a0:	ldr	r3, [fp, #12]
   369a4:	str	r2, [r3]
   369a8:	ldr	r3, [fp, #-12]
   369ac:	mov	r0, r3
   369b0:	sub	sp, fp, #4
   369b4:	pop	{fp, pc}
   369b8:	push	{fp, lr}
   369bc:	add	fp, sp, #4
   369c0:	sub	sp, sp, #16
   369c4:	str	r0, [fp, #-8]
   369c8:	str	r1, [fp, #-12]
   369cc:	str	r2, [fp, #-16]
   369d0:	str	r3, [fp, #-20]	; 0xffffffec
   369d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   369d8:	cmp	r3, #0
   369dc:	beq	369f8 <flatcc_verify_union_vector_field@@Base+0x1140>
   369e0:	ldrd	r0, [fp, #4]
   369e4:	bl	4c258 <flatcc_json_printer_clear@@Base+0x7ec>
   369e8:	mov	r2, r0
   369ec:	mov	r3, r1
   369f0:	eor	r3, r3, #-2147483648	; 0x80000000
   369f4:	b	36a08 <flatcc_verify_union_vector_field@@Base+0x1150>
   369f8:	ldrd	r0, [fp, #4]
   369fc:	bl	4c258 <flatcc_json_printer_clear@@Base+0x7ec>
   36a00:	mov	r2, r0
   36a04:	mov	r3, r1
   36a08:	ldr	r1, [fp, #12]
   36a0c:	strd	r2, [r1]
   36a10:	ldr	r3, [fp, #-12]
   36a14:	mov	r0, r3
   36a18:	sub	sp, fp, #4
   36a1c:	pop	{fp, pc}
   36a20:	push	{fp, lr}
   36a24:	add	fp, sp, #4
   36a28:	sub	sp, sp, #56	; 0x38
   36a2c:	str	r0, [fp, #-32]	; 0xffffffe0
   36a30:	str	r1, [fp, #-36]	; 0xffffffdc
   36a34:	str	r2, [fp, #-40]	; 0xffffffd8
   36a38:	str	r3, [fp, #-44]	; 0xffffffd4
   36a3c:	mov	r2, #0
   36a40:	mov	r3, #0
   36a44:	strd	r2, [fp, #-20]	; 0xffffffec
   36a48:	mov	r3, #0
   36a4c:	str	r3, [fp, #-24]	; 0xffffffe8
   36a50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36a54:	str	r3, [fp, #-8]
   36a58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36a5c:	mov	r2, #0
   36a60:	strb	r2, [r3]
   36a64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   36a68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36a6c:	cmp	r2, r3
   36a70:	bne	36a7c <flatcc_verify_union_vector_field@@Base+0x11c4>
   36a74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36a78:	b	36ae4 <flatcc_verify_union_vector_field@@Base+0x122c>
   36a7c:	sub	r2, fp, #24
   36a80:	sub	r3, fp, #20
   36a84:	str	r3, [sp]
   36a88:	mov	r3, r2
   36a8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   36a90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36a94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36a98:	bl	3c680 <flatcc_json_parser_integer@@Base>
   36a9c:	str	r0, [fp, #-36]	; 0xffffffdc
   36aa0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   36aa4:	ldr	r3, [fp, #-8]
   36aa8:	cmp	r2, r3
   36aac:	beq	36ae0 <flatcc_verify_union_vector_field@@Base+0x1228>
   36ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36ab4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   36ab8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36abc:	str	r1, [sp, #8]
   36ac0:	strd	r2, [sp]
   36ac4:	mov	r3, r0
   36ac8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   36acc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36ad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36ad4:	bl	365e0 <flatcc_verify_union_vector_field@@Base+0xd28>
   36ad8:	mov	r3, r0
   36adc:	b	36ae4 <flatcc_verify_union_vector_field@@Base+0x122c>
   36ae0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36ae4:	mov	r0, r3
   36ae8:	sub	sp, fp, #4
   36aec:	pop	{fp, pc}
   36af0:	push	{r4, fp, lr}
   36af4:	add	fp, sp, #8
   36af8:	sub	sp, sp, #68	; 0x44
   36afc:	str	r0, [fp, #-48]	; 0xffffffd0
   36b00:	str	r1, [fp, #-52]	; 0xffffffcc
   36b04:	str	r2, [fp, #-56]	; 0xffffffc8
   36b08:	str	r3, [fp, #-60]	; 0xffffffc4
   36b0c:	mov	r2, #0
   36b10:	mov	r3, #0
   36b14:	strd	r2, [fp, #-28]	; 0xffffffe4
   36b18:	ldr	r1, [fp, #4]
   36b1c:	mov	r2, #0
   36b20:	mov	r3, #0
   36b24:	strd	r2, [r1]
   36b28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36b2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36b30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36b34:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   36b38:	str	r0, [fp, #-52]	; 0xffffffcc
   36b3c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36b40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36b44:	cmp	r2, r3
   36b48:	bne	36b54 <flatcc_verify_union_vector_field@@Base+0x129c>
   36b4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36b50:	b	36c74 <flatcc_verify_union_vector_field@@Base+0x13bc>
   36b54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36b58:	str	r3, [fp, #-16]
   36b5c:	ldr	r3, [fp, #-16]
   36b60:	ldr	r4, [r3]
   36b64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36b68:	str	r3, [fp, #-20]	; 0xffffffec
   36b6c:	sub	r2, fp, #40	; 0x28
   36b70:	sub	r3, fp, #44	; 0x2c
   36b74:	str	r3, [sp, #4]
   36b78:	sub	r3, fp, #36	; 0x24
   36b7c:	str	r3, [sp]
   36b80:	mov	r3, r2
   36b84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36b88:	ldr	r1, [fp, #-20]	; 0xffffffec
   36b8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36b90:	blx	r4
   36b94:	str	r0, [fp, #-52]	; 0xffffffcc
   36b98:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36b9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36ba0:	cmp	r2, r3
   36ba4:	bne	36bb0 <flatcc_verify_union_vector_field@@Base+0x12f8>
   36ba8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36bac:	b	36c74 <flatcc_verify_union_vector_field@@Base+0x13bc>
   36bb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   36bb8:	cmp	r2, r3
   36bbc:	bne	36bdc <flatcc_verify_union_vector_field@@Base+0x1324>
   36bc0:	ldr	r3, [fp, #-16]
   36bc4:	add	r3, r3, #4
   36bc8:	str	r3, [fp, #-16]
   36bcc:	ldr	r3, [fp, #-16]
   36bd0:	ldr	r3, [r3]
   36bd4:	cmp	r3, #0
   36bd8:	bne	36b5c <flatcc_verify_union_vector_field@@Base+0x12a4>
   36bdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   36be0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36be4:	cmp	r2, r3
   36be8:	bne	36c08 <flatcc_verify_union_vector_field@@Base+0x1350>
   36bec:	mov	r3, #23
   36bf0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36bf4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36bf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36bfc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36c00:	mov	r3, r0
   36c04:	b	36c74 <flatcc_verify_union_vector_field@@Base+0x13bc>
   36c08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36c0c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   36c10:	sub	r1, fp, #28
   36c14:	str	r1, [sp, #8]
   36c18:	strd	r2, [sp]
   36c1c:	mov	r3, r0
   36c20:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36c24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36c28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36c2c:	bl	363d8 <flatcc_verify_union_vector_field@@Base+0xb20>
   36c30:	mov	r2, r0
   36c34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36c38:	cmp	r2, r3
   36c3c:	bne	36c48 <flatcc_verify_union_vector_field@@Base+0x1390>
   36c40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36c44:	b	36c74 <flatcc_verify_union_vector_field@@Base+0x13bc>
   36c48:	ldr	r3, [fp, #4]
   36c4c:	ldrd	r0, [r3]
   36c50:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   36c54:	adds	r2, r2, r0
   36c58:	adc	r3, r3, r1
   36c5c:	ldr	r1, [fp, #4]
   36c60:	strd	r2, [r1]
   36c64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36c68:	cmp	r3, #0
   36c6c:	bne	36b54 <flatcc_verify_union_vector_field@@Base+0x129c>
   36c70:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36c74:	mov	r0, r3
   36c78:	sub	sp, fp, #8
   36c7c:	pop	{r4, fp, pc}
   36c80:	push	{r4, fp, lr}
   36c84:	add	fp, sp, #8
   36c88:	sub	sp, sp, #68	; 0x44
   36c8c:	str	r0, [fp, #-48]	; 0xffffffd0
   36c90:	str	r1, [fp, #-52]	; 0xffffffcc
   36c94:	str	r2, [fp, #-56]	; 0xffffffc8
   36c98:	str	r3, [fp, #-60]	; 0xffffffc4
   36c9c:	mov	r3, #0
   36ca0:	str	r3, [fp, #-24]	; 0xffffffe8
   36ca4:	ldr	r3, [fp, #4]
   36ca8:	mov	r2, #0
   36cac:	str	r2, [r3]
   36cb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36cb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36cb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36cbc:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   36cc0:	str	r0, [fp, #-52]	; 0xffffffcc
   36cc4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36cc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36ccc:	cmp	r2, r3
   36cd0:	bne	36cdc <flatcc_verify_union_vector_field@@Base+0x1424>
   36cd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36cd8:	b	36df8 <flatcc_verify_union_vector_field@@Base+0x1540>
   36cdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36ce0:	str	r3, [fp, #-16]
   36ce4:	ldr	r3, [fp, #-16]
   36ce8:	ldr	r4, [r3]
   36cec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36cf0:	str	r3, [fp, #-20]	; 0xffffffec
   36cf4:	sub	r2, fp, #40	; 0x28
   36cf8:	sub	r3, fp, #44	; 0x2c
   36cfc:	str	r3, [sp, #4]
   36d00:	sub	r3, fp, #36	; 0x24
   36d04:	str	r3, [sp]
   36d08:	mov	r3, r2
   36d0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36d10:	ldr	r1, [fp, #-20]	; 0xffffffec
   36d14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36d18:	blx	r4
   36d1c:	str	r0, [fp, #-52]	; 0xffffffcc
   36d20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36d24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36d28:	cmp	r2, r3
   36d2c:	bne	36d38 <flatcc_verify_union_vector_field@@Base+0x1480>
   36d30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36d34:	b	36df8 <flatcc_verify_union_vector_field@@Base+0x1540>
   36d38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36d40:	cmp	r2, r3
   36d44:	bne	36d64 <flatcc_verify_union_vector_field@@Base+0x14ac>
   36d48:	ldr	r3, [fp, #-16]
   36d4c:	add	r3, r3, #4
   36d50:	str	r3, [fp, #-16]
   36d54:	ldr	r3, [fp, #-16]
   36d58:	ldr	r3, [r3]
   36d5c:	cmp	r3, #0
   36d60:	bne	36ce4 <flatcc_verify_union_vector_field@@Base+0x142c>
   36d64:	ldr	r2, [fp, #-20]	; 0xffffffec
   36d68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36d6c:	cmp	r2, r3
   36d70:	bne	36d90 <flatcc_verify_union_vector_field@@Base+0x14d8>
   36d74:	mov	r3, #23
   36d78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36d7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36d80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36d84:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36d88:	mov	r3, r0
   36d8c:	b	36df8 <flatcc_verify_union_vector_field@@Base+0x1540>
   36d90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36d94:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   36d98:	sub	r1, fp, #24
   36d9c:	str	r1, [sp, #8]
   36da0:	strd	r2, [sp]
   36da4:	mov	r3, r0
   36da8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36dac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36db0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36db4:	bl	364b4 <flatcc_verify_union_vector_field@@Base+0xbfc>
   36db8:	mov	r2, r0
   36dbc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36dc0:	cmp	r2, r3
   36dc4:	bne	36dd0 <flatcc_verify_union_vector_field@@Base+0x1518>
   36dc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36dcc:	b	36df8 <flatcc_verify_union_vector_field@@Base+0x1540>
   36dd0:	ldr	r3, [fp, #4]
   36dd4:	ldr	r2, [r3]
   36dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36ddc:	add	r2, r2, r3
   36de0:	ldr	r3, [fp, #4]
   36de4:	str	r2, [r3]
   36de8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36dec:	cmp	r3, #0
   36df0:	bne	36cdc <flatcc_verify_union_vector_field@@Base+0x1424>
   36df4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36df8:	mov	r0, r3
   36dfc:	sub	sp, fp, #8
   36e00:	pop	{r4, fp, pc}
   36e04:	push	{r4, fp, lr}
   36e08:	add	fp, sp, #8
   36e0c:	sub	sp, sp, #68	; 0x44
   36e10:	str	r0, [fp, #-48]	; 0xffffffd0
   36e14:	str	r1, [fp, #-52]	; 0xffffffcc
   36e18:	str	r2, [fp, #-56]	; 0xffffffc8
   36e1c:	str	r3, [fp, #-60]	; 0xffffffc4
   36e20:	mov	r3, #0
   36e24:	strh	r3, [fp, #-22]	; 0xffffffea
   36e28:	ldr	r3, [fp, #4]
   36e2c:	mov	r2, #0
   36e30:	strh	r2, [r3]
   36e34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36e38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36e3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36e40:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   36e44:	str	r0, [fp, #-52]	; 0xffffffcc
   36e48:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36e4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36e50:	cmp	r2, r3
   36e54:	bne	36e60 <flatcc_verify_union_vector_field@@Base+0x15a8>
   36e58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36e5c:	b	36f80 <flatcc_verify_union_vector_field@@Base+0x16c8>
   36e60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36e64:	str	r3, [fp, #-16]
   36e68:	ldr	r3, [fp, #-16]
   36e6c:	ldr	r4, [r3]
   36e70:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36e74:	str	r3, [fp, #-20]	; 0xffffffec
   36e78:	sub	r2, fp, #40	; 0x28
   36e7c:	sub	r3, fp, #44	; 0x2c
   36e80:	str	r3, [sp, #4]
   36e84:	sub	r3, fp, #36	; 0x24
   36e88:	str	r3, [sp]
   36e8c:	mov	r3, r2
   36e90:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36e94:	ldr	r1, [fp, #-20]	; 0xffffffec
   36e98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36e9c:	blx	r4
   36ea0:	str	r0, [fp, #-52]	; 0xffffffcc
   36ea4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36ea8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36eac:	cmp	r2, r3
   36eb0:	bne	36ebc <flatcc_verify_union_vector_field@@Base+0x1604>
   36eb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36eb8:	b	36f80 <flatcc_verify_union_vector_field@@Base+0x16c8>
   36ebc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   36ec4:	cmp	r2, r3
   36ec8:	bne	36ee8 <flatcc_verify_union_vector_field@@Base+0x1630>
   36ecc:	ldr	r3, [fp, #-16]
   36ed0:	add	r3, r3, #4
   36ed4:	str	r3, [fp, #-16]
   36ed8:	ldr	r3, [fp, #-16]
   36edc:	ldr	r3, [r3]
   36ee0:	cmp	r3, #0
   36ee4:	bne	36e68 <flatcc_verify_union_vector_field@@Base+0x15b0>
   36ee8:	ldr	r2, [fp, #-20]	; 0xffffffec
   36eec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36ef0:	cmp	r2, r3
   36ef4:	bne	36f14 <flatcc_verify_union_vector_field@@Base+0x165c>
   36ef8:	mov	r3, #23
   36efc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36f00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36f04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36f08:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   36f0c:	mov	r3, r0
   36f10:	b	36f80 <flatcc_verify_union_vector_field@@Base+0x16c8>
   36f14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36f18:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   36f1c:	sub	r1, fp, #22
   36f20:	str	r1, [sp, #8]
   36f24:	strd	r2, [sp]
   36f28:	mov	r3, r0
   36f2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36f30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36f34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36f38:	bl	36548 <flatcc_verify_union_vector_field@@Base+0xc90>
   36f3c:	mov	r2, r0
   36f40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36f44:	cmp	r2, r3
   36f48:	bne	36f54 <flatcc_verify_union_vector_field@@Base+0x169c>
   36f4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36f50:	b	36f80 <flatcc_verify_union_vector_field@@Base+0x16c8>
   36f54:	ldr	r3, [fp, #4]
   36f58:	ldrh	r2, [r3]
   36f5c:	ldrh	r3, [fp, #-22]	; 0xffffffea
   36f60:	add	r3, r2, r3
   36f64:	uxth	r2, r3
   36f68:	ldr	r3, [fp, #4]
   36f6c:	strh	r2, [r3]
   36f70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36f74:	cmp	r3, #0
   36f78:	bne	36e60 <flatcc_verify_union_vector_field@@Base+0x15a8>
   36f7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36f80:	mov	r0, r3
   36f84:	sub	sp, fp, #8
   36f88:	pop	{r4, fp, pc}
   36f8c:	push	{r4, fp, lr}
   36f90:	add	fp, sp, #8
   36f94:	sub	sp, sp, #68	; 0x44
   36f98:	str	r0, [fp, #-48]	; 0xffffffd0
   36f9c:	str	r1, [fp, #-52]	; 0xffffffcc
   36fa0:	str	r2, [fp, #-56]	; 0xffffffc8
   36fa4:	str	r3, [fp, #-60]	; 0xffffffc4
   36fa8:	mov	r3, #0
   36fac:	strb	r3, [fp, #-21]	; 0xffffffeb
   36fb0:	ldr	r3, [fp, #4]
   36fb4:	mov	r2, #0
   36fb8:	strb	r2, [r3]
   36fbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36fc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36fc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36fc8:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   36fcc:	str	r0, [fp, #-52]	; 0xffffffcc
   36fd0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36fd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36fd8:	cmp	r2, r3
   36fdc:	bne	36fe8 <flatcc_verify_union_vector_field@@Base+0x1730>
   36fe0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36fe4:	b	37108 <flatcc_verify_union_vector_field@@Base+0x1850>
   36fe8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36fec:	str	r3, [fp, #-16]
   36ff0:	ldr	r3, [fp, #-16]
   36ff4:	ldr	r4, [r3]
   36ff8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36ffc:	str	r3, [fp, #-20]	; 0xffffffec
   37000:	sub	r2, fp, #40	; 0x28
   37004:	sub	r3, fp, #44	; 0x2c
   37008:	str	r3, [sp, #4]
   3700c:	sub	r3, fp, #36	; 0x24
   37010:	str	r3, [sp]
   37014:	mov	r3, r2
   37018:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3701c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37020:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37024:	blx	r4
   37028:	str	r0, [fp, #-52]	; 0xffffffcc
   3702c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37030:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37034:	cmp	r2, r3
   37038:	bne	37044 <flatcc_verify_union_vector_field@@Base+0x178c>
   3703c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37040:	b	37108 <flatcc_verify_union_vector_field@@Base+0x1850>
   37044:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37048:	ldr	r3, [fp, #-20]	; 0xffffffec
   3704c:	cmp	r2, r3
   37050:	bne	37070 <flatcc_verify_union_vector_field@@Base+0x17b8>
   37054:	ldr	r3, [fp, #-16]
   37058:	add	r3, r3, #4
   3705c:	str	r3, [fp, #-16]
   37060:	ldr	r3, [fp, #-16]
   37064:	ldr	r3, [r3]
   37068:	cmp	r3, #0
   3706c:	bne	36ff0 <flatcc_verify_union_vector_field@@Base+0x1738>
   37070:	ldr	r2, [fp, #-20]	; 0xffffffec
   37074:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37078:	cmp	r2, r3
   3707c:	bne	3709c <flatcc_verify_union_vector_field@@Base+0x17e4>
   37080:	mov	r3, #23
   37084:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37088:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3708c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37090:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   37094:	mov	r3, r0
   37098:	b	37108 <flatcc_verify_union_vector_field@@Base+0x1850>
   3709c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   370a0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   370a4:	sub	r1, fp, #21
   370a8:	str	r1, [sp, #8]
   370ac:	strd	r2, [sp]
   370b0:	mov	r3, r0
   370b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   370b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   370bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   370c0:	bl	365e0 <flatcc_verify_union_vector_field@@Base+0xd28>
   370c4:	mov	r2, r0
   370c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   370cc:	cmp	r2, r3
   370d0:	bne	370dc <flatcc_verify_union_vector_field@@Base+0x1824>
   370d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   370d8:	b	37108 <flatcc_verify_union_vector_field@@Base+0x1850>
   370dc:	ldr	r3, [fp, #4]
   370e0:	ldrb	r2, [r3]
   370e4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   370e8:	add	r3, r2, r3
   370ec:	uxtb	r2, r3
   370f0:	ldr	r3, [fp, #4]
   370f4:	strb	r2, [r3]
   370f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   370fc:	cmp	r3, #0
   37100:	bne	36fe8 <flatcc_verify_union_vector_field@@Base+0x1730>
   37104:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37108:	mov	r0, r3
   3710c:	sub	sp, fp, #8
   37110:	pop	{r4, fp, pc}
   37114:	push	{r4, fp, lr}
   37118:	add	fp, sp, #8
   3711c:	sub	sp, sp, #68	; 0x44
   37120:	str	r0, [fp, #-48]	; 0xffffffd0
   37124:	str	r1, [fp, #-52]	; 0xffffffcc
   37128:	str	r2, [fp, #-56]	; 0xffffffc8
   3712c:	str	r3, [fp, #-60]	; 0xffffffc4
   37130:	mov	r2, #0
   37134:	mov	r3, #0
   37138:	strd	r2, [fp, #-28]	; 0xffffffe4
   3713c:	ldr	r1, [fp, #4]
   37140:	mov	r2, #0
   37144:	mov	r3, #0
   37148:	strd	r2, [r1]
   3714c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37150:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37154:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37158:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   3715c:	str	r0, [fp, #-52]	; 0xffffffcc
   37160:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37164:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37168:	cmp	r2, r3
   3716c:	bne	37178 <flatcc_verify_union_vector_field@@Base+0x18c0>
   37170:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37174:	b	37298 <flatcc_verify_union_vector_field@@Base+0x19e0>
   37178:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3717c:	str	r3, [fp, #-16]
   37180:	ldr	r3, [fp, #-16]
   37184:	ldr	r4, [r3]
   37188:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3718c:	str	r3, [fp, #-20]	; 0xffffffec
   37190:	sub	r2, fp, #40	; 0x28
   37194:	sub	r3, fp, #44	; 0x2c
   37198:	str	r3, [sp, #4]
   3719c:	sub	r3, fp, #36	; 0x24
   371a0:	str	r3, [sp]
   371a4:	mov	r3, r2
   371a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   371ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   371b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   371b4:	blx	r4
   371b8:	str	r0, [fp, #-52]	; 0xffffffcc
   371bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   371c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   371c4:	cmp	r2, r3
   371c8:	bne	371d4 <flatcc_verify_union_vector_field@@Base+0x191c>
   371cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   371d0:	b	37298 <flatcc_verify_union_vector_field@@Base+0x19e0>
   371d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   371d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   371dc:	cmp	r2, r3
   371e0:	bne	37200 <flatcc_verify_union_vector_field@@Base+0x1948>
   371e4:	ldr	r3, [fp, #-16]
   371e8:	add	r3, r3, #4
   371ec:	str	r3, [fp, #-16]
   371f0:	ldr	r3, [fp, #-16]
   371f4:	ldr	r3, [r3]
   371f8:	cmp	r3, #0
   371fc:	bne	37180 <flatcc_verify_union_vector_field@@Base+0x18c8>
   37200:	ldr	r2, [fp, #-20]	; 0xffffffec
   37204:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37208:	cmp	r2, r3
   3720c:	bne	3722c <flatcc_verify_union_vector_field@@Base+0x1974>
   37210:	mov	r3, #23
   37214:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37218:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3721c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37220:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   37224:	mov	r3, r0
   37228:	b	37298 <flatcc_verify_union_vector_field@@Base+0x19e0>
   3722c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37230:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37234:	sub	r1, fp, #28
   37238:	str	r1, [sp, #8]
   3723c:	strd	r2, [sp]
   37240:	mov	r3, r0
   37244:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37248:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3724c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37250:	bl	3666c <flatcc_verify_union_vector_field@@Base+0xdb4>
   37254:	mov	r2, r0
   37258:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3725c:	cmp	r2, r3
   37260:	bne	3726c <flatcc_verify_union_vector_field@@Base+0x19b4>
   37264:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37268:	b	37298 <flatcc_verify_union_vector_field@@Base+0x19e0>
   3726c:	ldr	r3, [fp, #4]
   37270:	ldrd	r0, [r3]
   37274:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   37278:	adds	r2, r2, r0
   3727c:	adc	r3, r3, r1
   37280:	ldr	r1, [fp, #4]
   37284:	strd	r2, [r1]
   37288:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3728c:	cmp	r3, #0
   37290:	bne	37178 <flatcc_verify_union_vector_field@@Base+0x18c0>
   37294:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37298:	mov	r0, r3
   3729c:	sub	sp, fp, #8
   372a0:	pop	{r4, fp, pc}
   372a4:	push	{r4, fp, lr}
   372a8:	add	fp, sp, #8
   372ac:	sub	sp, sp, #68	; 0x44
   372b0:	str	r0, [fp, #-48]	; 0xffffffd0
   372b4:	str	r1, [fp, #-52]	; 0xffffffcc
   372b8:	str	r2, [fp, #-56]	; 0xffffffc8
   372bc:	str	r3, [fp, #-60]	; 0xffffffc4
   372c0:	mov	r3, #0
   372c4:	str	r3, [fp, #-24]	; 0xffffffe8
   372c8:	ldr	r3, [fp, #4]
   372cc:	mov	r2, #0
   372d0:	str	r2, [r3]
   372d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   372d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   372dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   372e0:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   372e4:	str	r0, [fp, #-52]	; 0xffffffcc
   372e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   372ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   372f0:	cmp	r2, r3
   372f4:	bne	37300 <flatcc_verify_union_vector_field@@Base+0x1a48>
   372f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   372fc:	b	3741c <flatcc_verify_union_vector_field@@Base+0x1b64>
   37300:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37304:	str	r3, [fp, #-16]
   37308:	ldr	r3, [fp, #-16]
   3730c:	ldr	r4, [r3]
   37310:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37314:	str	r3, [fp, #-20]	; 0xffffffec
   37318:	sub	r2, fp, #40	; 0x28
   3731c:	sub	r3, fp, #44	; 0x2c
   37320:	str	r3, [sp, #4]
   37324:	sub	r3, fp, #36	; 0x24
   37328:	str	r3, [sp]
   3732c:	mov	r3, r2
   37330:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37334:	ldr	r1, [fp, #-20]	; 0xffffffec
   37338:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3733c:	blx	r4
   37340:	str	r0, [fp, #-52]	; 0xffffffcc
   37344:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37348:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3734c:	cmp	r2, r3
   37350:	bne	3735c <flatcc_verify_union_vector_field@@Base+0x1aa4>
   37354:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37358:	b	3741c <flatcc_verify_union_vector_field@@Base+0x1b64>
   3735c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37360:	ldr	r3, [fp, #-20]	; 0xffffffec
   37364:	cmp	r2, r3
   37368:	bne	37388 <flatcc_verify_union_vector_field@@Base+0x1ad0>
   3736c:	ldr	r3, [fp, #-16]
   37370:	add	r3, r3, #4
   37374:	str	r3, [fp, #-16]
   37378:	ldr	r3, [fp, #-16]
   3737c:	ldr	r3, [r3]
   37380:	cmp	r3, #0
   37384:	bne	37308 <flatcc_verify_union_vector_field@@Base+0x1a50>
   37388:	ldr	r2, [fp, #-20]	; 0xffffffec
   3738c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37390:	cmp	r2, r3
   37394:	bne	373b4 <flatcc_verify_union_vector_field@@Base+0x1afc>
   37398:	mov	r3, #23
   3739c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   373a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   373a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   373a8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   373ac:	mov	r3, r0
   373b0:	b	3741c <flatcc_verify_union_vector_field@@Base+0x1b64>
   373b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   373b8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   373bc:	sub	r1, fp, #24
   373c0:	str	r1, [sp, #8]
   373c4:	strd	r2, [sp]
   373c8:	mov	r3, r0
   373cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   373d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   373d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   373d8:	bl	36720 <flatcc_verify_union_vector_field@@Base+0xe68>
   373dc:	mov	r2, r0
   373e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   373e4:	cmp	r2, r3
   373e8:	bne	373f4 <flatcc_verify_union_vector_field@@Base+0x1b3c>
   373ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   373f0:	b	3741c <flatcc_verify_union_vector_field@@Base+0x1b64>
   373f4:	ldr	r3, [fp, #4]
   373f8:	ldr	r2, [r3]
   373fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37400:	add	r2, r2, r3
   37404:	ldr	r3, [fp, #4]
   37408:	str	r2, [r3]
   3740c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37410:	cmp	r3, #0
   37414:	bne	37300 <flatcc_verify_union_vector_field@@Base+0x1a48>
   37418:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3741c:	mov	r0, r3
   37420:	sub	sp, fp, #8
   37424:	pop	{r4, fp, pc}
   37428:	push	{r4, fp, lr}
   3742c:	add	fp, sp, #8
   37430:	sub	sp, sp, #68	; 0x44
   37434:	str	r0, [fp, #-48]	; 0xffffffd0
   37438:	str	r1, [fp, #-52]	; 0xffffffcc
   3743c:	str	r2, [fp, #-56]	; 0xffffffc8
   37440:	str	r3, [fp, #-60]	; 0xffffffc4
   37444:	mov	r3, #0
   37448:	strh	r3, [fp, #-22]	; 0xffffffea
   3744c:	ldr	r3, [fp, #4]
   37450:	mov	r2, #0
   37454:	strh	r2, [r3]
   37458:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3745c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37460:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37464:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   37468:	str	r0, [fp, #-52]	; 0xffffffcc
   3746c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37470:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37474:	cmp	r2, r3
   37478:	bne	37484 <flatcc_verify_union_vector_field@@Base+0x1bcc>
   3747c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37480:	b	375b0 <flatcc_verify_union_vector_field@@Base+0x1cf8>
   37484:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37488:	str	r3, [fp, #-16]
   3748c:	ldr	r3, [fp, #-16]
   37490:	ldr	r4, [r3]
   37494:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37498:	str	r3, [fp, #-20]	; 0xffffffec
   3749c:	sub	r2, fp, #40	; 0x28
   374a0:	sub	r3, fp, #44	; 0x2c
   374a4:	str	r3, [sp, #4]
   374a8:	sub	r3, fp, #36	; 0x24
   374ac:	str	r3, [sp]
   374b0:	mov	r3, r2
   374b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   374b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   374bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   374c0:	blx	r4
   374c4:	str	r0, [fp, #-52]	; 0xffffffcc
   374c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   374cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   374d0:	cmp	r2, r3
   374d4:	bne	374e0 <flatcc_verify_union_vector_field@@Base+0x1c28>
   374d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   374dc:	b	375b0 <flatcc_verify_union_vector_field@@Base+0x1cf8>
   374e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   374e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   374e8:	cmp	r2, r3
   374ec:	bne	3750c <flatcc_verify_union_vector_field@@Base+0x1c54>
   374f0:	ldr	r3, [fp, #-16]
   374f4:	add	r3, r3, #4
   374f8:	str	r3, [fp, #-16]
   374fc:	ldr	r3, [fp, #-16]
   37500:	ldr	r3, [r3]
   37504:	cmp	r3, #0
   37508:	bne	3748c <flatcc_verify_union_vector_field@@Base+0x1bd4>
   3750c:	ldr	r2, [fp, #-20]	; 0xffffffec
   37510:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37514:	cmp	r2, r3
   37518:	bne	37538 <flatcc_verify_union_vector_field@@Base+0x1c80>
   3751c:	mov	r3, #23
   37520:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37524:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37528:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3752c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   37530:	mov	r3, r0
   37534:	b	375b0 <flatcc_verify_union_vector_field@@Base+0x1cf8>
   37538:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3753c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37540:	sub	r1, fp, #22
   37544:	str	r1, [sp, #8]
   37548:	strd	r2, [sp]
   3754c:	mov	r3, r0
   37550:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37554:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37558:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3755c:	bl	367dc <flatcc_verify_union_vector_field@@Base+0xf24>
   37560:	mov	r2, r0
   37564:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37568:	cmp	r2, r3
   3756c:	bne	37578 <flatcc_verify_union_vector_field@@Base+0x1cc0>
   37570:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37574:	b	375b0 <flatcc_verify_union_vector_field@@Base+0x1cf8>
   37578:	ldr	r3, [fp, #4]
   3757c:	ldrsh	r3, [r3]
   37580:	uxth	r2, r3
   37584:	ldrsh	r3, [fp, #-22]	; 0xffffffea
   37588:	uxth	r3, r3
   3758c:	add	r3, r2, r3
   37590:	uxth	r3, r3
   37594:	sxth	r2, r3
   37598:	ldr	r3, [fp, #4]
   3759c:	strh	r2, [r3]
   375a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   375a4:	cmp	r3, #0
   375a8:	bne	37484 <flatcc_verify_union_vector_field@@Base+0x1bcc>
   375ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   375b0:	mov	r0, r3
   375b4:	sub	sp, fp, #8
   375b8:	pop	{r4, fp, pc}
   375bc:	push	{r4, fp, lr}
   375c0:	add	fp, sp, #8
   375c4:	sub	sp, sp, #68	; 0x44
   375c8:	str	r0, [fp, #-48]	; 0xffffffd0
   375cc:	str	r1, [fp, #-52]	; 0xffffffcc
   375d0:	str	r2, [fp, #-56]	; 0xffffffc8
   375d4:	str	r3, [fp, #-60]	; 0xffffffc4
   375d8:	mov	r3, #0
   375dc:	strb	r3, [fp, #-21]	; 0xffffffeb
   375e0:	ldr	r3, [fp, #4]
   375e4:	mov	r2, #0
   375e8:	strb	r2, [r3]
   375ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   375f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   375f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   375f8:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   375fc:	str	r0, [fp, #-52]	; 0xffffffcc
   37600:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37604:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37608:	cmp	r2, r3
   3760c:	bne	37618 <flatcc_verify_union_vector_field@@Base+0x1d60>
   37610:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37614:	b	37744 <flatcc_verify_union_vector_field@@Base+0x1e8c>
   37618:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3761c:	str	r3, [fp, #-16]
   37620:	ldr	r3, [fp, #-16]
   37624:	ldr	r4, [r3]
   37628:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3762c:	str	r3, [fp, #-20]	; 0xffffffec
   37630:	sub	r2, fp, #40	; 0x28
   37634:	sub	r3, fp, #44	; 0x2c
   37638:	str	r3, [sp, #4]
   3763c:	sub	r3, fp, #36	; 0x24
   37640:	str	r3, [sp]
   37644:	mov	r3, r2
   37648:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3764c:	ldr	r1, [fp, #-20]	; 0xffffffec
   37650:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37654:	blx	r4
   37658:	str	r0, [fp, #-52]	; 0xffffffcc
   3765c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37660:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37664:	cmp	r2, r3
   37668:	bne	37674 <flatcc_verify_union_vector_field@@Base+0x1dbc>
   3766c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37670:	b	37744 <flatcc_verify_union_vector_field@@Base+0x1e8c>
   37674:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37678:	ldr	r3, [fp, #-20]	; 0xffffffec
   3767c:	cmp	r2, r3
   37680:	bne	376a0 <flatcc_verify_union_vector_field@@Base+0x1de8>
   37684:	ldr	r3, [fp, #-16]
   37688:	add	r3, r3, #4
   3768c:	str	r3, [fp, #-16]
   37690:	ldr	r3, [fp, #-16]
   37694:	ldr	r3, [r3]
   37698:	cmp	r3, #0
   3769c:	bne	37620 <flatcc_verify_union_vector_field@@Base+0x1d68>
   376a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   376a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   376a8:	cmp	r2, r3
   376ac:	bne	376cc <flatcc_verify_union_vector_field@@Base+0x1e14>
   376b0:	mov	r3, #23
   376b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   376b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   376bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   376c0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   376c4:	mov	r3, r0
   376c8:	b	37744 <flatcc_verify_union_vector_field@@Base+0x1e8c>
   376cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   376d0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   376d4:	sub	r1, fp, #21
   376d8:	str	r1, [sp, #8]
   376dc:	strd	r2, [sp]
   376e0:	mov	r3, r0
   376e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   376e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   376ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   376f0:	bl	368a0 <flatcc_verify_union_vector_field@@Base+0xfe8>
   376f4:	mov	r2, r0
   376f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   376fc:	cmp	r2, r3
   37700:	bne	3770c <flatcc_verify_union_vector_field@@Base+0x1e54>
   37704:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37708:	b	37744 <flatcc_verify_union_vector_field@@Base+0x1e8c>
   3770c:	ldr	r3, [fp, #4]
   37710:	ldrsb	r3, [r3]
   37714:	uxtb	r2, r3
   37718:	ldrsb	r3, [fp, #-21]	; 0xffffffeb
   3771c:	uxtb	r3, r3
   37720:	add	r3, r2, r3
   37724:	uxtb	r3, r3
   37728:	sxtb	r2, r3
   3772c:	ldr	r3, [fp, #4]
   37730:	strb	r2, [r3]
   37734:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37738:	cmp	r3, #0
   3773c:	bne	37618 <flatcc_verify_union_vector_field@@Base+0x1d60>
   37740:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37744:	mov	r0, r3
   37748:	sub	sp, fp, #8
   3774c:	pop	{r4, fp, pc}
   37750:	push	{r4, fp, lr}
   37754:	add	fp, sp, #8
   37758:	sub	sp, sp, #68	; 0x44
   3775c:	str	r0, [fp, #-48]	; 0xffffffd0
   37760:	str	r1, [fp, #-52]	; 0xffffffcc
   37764:	str	r2, [fp, #-56]	; 0xffffffc8
   37768:	str	r3, [fp, #-60]	; 0xffffffc4
   3776c:	mov	r3, #0
   37770:	strb	r3, [fp, #-21]	; 0xffffffeb
   37774:	ldr	r3, [fp, #4]
   37778:	mov	r2, #0
   3777c:	strb	r2, [r3]
   37780:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37784:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37788:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3778c:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   37790:	str	r0, [fp, #-52]	; 0xffffffcc
   37794:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37798:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3779c:	cmp	r2, r3
   377a0:	bne	377ac <flatcc_verify_union_vector_field@@Base+0x1ef4>
   377a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   377a8:	b	378cc <flatcc_verify_union_vector_field@@Base+0x2014>
   377ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   377b0:	str	r3, [fp, #-16]
   377b4:	ldr	r3, [fp, #-16]
   377b8:	ldr	r4, [r3]
   377bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   377c0:	str	r3, [fp, #-20]	; 0xffffffec
   377c4:	sub	r2, fp, #40	; 0x28
   377c8:	sub	r3, fp, #44	; 0x2c
   377cc:	str	r3, [sp, #4]
   377d0:	sub	r3, fp, #36	; 0x24
   377d4:	str	r3, [sp]
   377d8:	mov	r3, r2
   377dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   377e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   377e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   377e8:	blx	r4
   377ec:	str	r0, [fp, #-52]	; 0xffffffcc
   377f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   377f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   377f8:	cmp	r2, r3
   377fc:	bne	37808 <flatcc_verify_union_vector_field@@Base+0x1f50>
   37800:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37804:	b	378cc <flatcc_verify_union_vector_field@@Base+0x2014>
   37808:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3780c:	ldr	r3, [fp, #-20]	; 0xffffffec
   37810:	cmp	r2, r3
   37814:	bne	37834 <flatcc_verify_union_vector_field@@Base+0x1f7c>
   37818:	ldr	r3, [fp, #-16]
   3781c:	add	r3, r3, #4
   37820:	str	r3, [fp, #-16]
   37824:	ldr	r3, [fp, #-16]
   37828:	ldr	r3, [r3]
   3782c:	cmp	r3, #0
   37830:	bne	377b4 <flatcc_verify_union_vector_field@@Base+0x1efc>
   37834:	ldr	r2, [fp, #-20]	; 0xffffffec
   37838:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3783c:	cmp	r2, r3
   37840:	bne	37860 <flatcc_verify_union_vector_field@@Base+0x1fa8>
   37844:	mov	r3, #23
   37848:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3784c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37850:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37854:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   37858:	mov	r3, r0
   3785c:	b	378cc <flatcc_verify_union_vector_field@@Base+0x2014>
   37860:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37864:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37868:	sub	r1, fp, #21
   3786c:	str	r1, [sp, #8]
   37870:	strd	r2, [sp]
   37874:	mov	r3, r0
   37878:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3787c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37880:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37884:	bl	36438 <flatcc_verify_union_vector_field@@Base+0xb80>
   37888:	mov	r2, r0
   3788c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37890:	cmp	r2, r3
   37894:	bne	378a0 <flatcc_verify_union_vector_field@@Base+0x1fe8>
   37898:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3789c:	b	378cc <flatcc_verify_union_vector_field@@Base+0x2014>
   378a0:	ldr	r3, [fp, #4]
   378a4:	ldrb	r2, [r3]
   378a8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   378ac:	add	r3, r2, r3
   378b0:	uxtb	r2, r3
   378b4:	ldr	r3, [fp, #4]
   378b8:	strb	r2, [r3]
   378bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   378c0:	cmp	r3, #0
   378c4:	bne	377ac <flatcc_verify_union_vector_field@@Base+0x1ef4>
   378c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   378cc:	mov	r0, r3
   378d0:	sub	sp, fp, #8
   378d4:	pop	{r4, fp, pc}
   378d8:	push	{r4, fp, lr}
   378dc:	add	fp, sp, #8
   378e0:	sub	sp, sp, #68	; 0x44
   378e4:	str	r0, [fp, #-48]	; 0xffffffd0
   378e8:	str	r1, [fp, #-52]	; 0xffffffcc
   378ec:	str	r2, [fp, #-56]	; 0xffffffc8
   378f0:	str	r3, [fp, #-60]	; 0xffffffc4
   378f4:	mov	r3, #0
   378f8:	str	r3, [fp, #-24]	; 0xffffffe8
   378fc:	ldr	r3, [fp, #4]
   37900:	mov	r2, #0
   37904:	str	r2, [r3]
   37908:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3790c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37910:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37914:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   37918:	str	r0, [fp, #-52]	; 0xffffffcc
   3791c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37920:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37924:	cmp	r2, r3
   37928:	bne	37934 <flatcc_verify_union_vector_field@@Base+0x207c>
   3792c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37930:	b	37a50 <flatcc_verify_union_vector_field@@Base+0x2198>
   37934:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37938:	str	r3, [fp, #-16]
   3793c:	ldr	r3, [fp, #-16]
   37940:	ldr	r4, [r3]
   37944:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37948:	str	r3, [fp, #-20]	; 0xffffffec
   3794c:	sub	r2, fp, #40	; 0x28
   37950:	sub	r3, fp, #44	; 0x2c
   37954:	str	r3, [sp, #4]
   37958:	sub	r3, fp, #36	; 0x24
   3795c:	str	r3, [sp]
   37960:	mov	r3, r2
   37964:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37968:	ldr	r1, [fp, #-20]	; 0xffffffec
   3796c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37970:	blx	r4
   37974:	str	r0, [fp, #-52]	; 0xffffffcc
   37978:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3797c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37980:	cmp	r2, r3
   37984:	bne	37990 <flatcc_verify_union_vector_field@@Base+0x20d8>
   37988:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3798c:	b	37a50 <flatcc_verify_union_vector_field@@Base+0x2198>
   37990:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37994:	ldr	r3, [fp, #-20]	; 0xffffffec
   37998:	cmp	r2, r3
   3799c:	bne	379bc <flatcc_verify_union_vector_field@@Base+0x2104>
   379a0:	ldr	r3, [fp, #-16]
   379a4:	add	r3, r3, #4
   379a8:	str	r3, [fp, #-16]
   379ac:	ldr	r3, [fp, #-16]
   379b0:	ldr	r3, [r3]
   379b4:	cmp	r3, #0
   379b8:	bne	3793c <flatcc_verify_union_vector_field@@Base+0x2084>
   379bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   379c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   379c4:	cmp	r2, r3
   379c8:	bne	379e8 <flatcc_verify_union_vector_field@@Base+0x2130>
   379cc:	mov	r3, #23
   379d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   379d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   379d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   379dc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   379e0:	mov	r3, r0
   379e4:	b	37a50 <flatcc_verify_union_vector_field@@Base+0x2198>
   379e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   379ec:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   379f0:	sub	r1, fp, #24
   379f4:	str	r1, [sp, #8]
   379f8:	strd	r2, [sp]
   379fc:	mov	r3, r0
   37a00:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37a04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37a08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37a0c:	bl	36958 <flatcc_verify_union_vector_field@@Base+0x10a0>
   37a10:	mov	r2, r0
   37a14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37a18:	cmp	r2, r3
   37a1c:	bne	37a28 <flatcc_verify_union_vector_field@@Base+0x2170>
   37a20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37a24:	b	37a50 <flatcc_verify_union_vector_field@@Base+0x2198>
   37a28:	ldr	r3, [fp, #4]
   37a2c:	vldr	s14, [r3]
   37a30:	vldr	s15, [fp, #-24]	; 0xffffffe8
   37a34:	vadd.f32	s15, s14, s15
   37a38:	ldr	r3, [fp, #4]
   37a3c:	vstr	s15, [r3]
   37a40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37a44:	cmp	r3, #0
   37a48:	bne	37934 <flatcc_verify_union_vector_field@@Base+0x207c>
   37a4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37a50:	mov	r0, r3
   37a54:	sub	sp, fp, #8
   37a58:	pop	{r4, fp, pc}
   37a5c:	push	{r4, fp, lr}
   37a60:	add	fp, sp, #8
   37a64:	sub	sp, sp, #68	; 0x44
   37a68:	str	r0, [fp, #-48]	; 0xffffffd0
   37a6c:	str	r1, [fp, #-52]	; 0xffffffcc
   37a70:	str	r2, [fp, #-56]	; 0xffffffc8
   37a74:	str	r3, [fp, #-60]	; 0xffffffc4
   37a78:	mov	r2, #0
   37a7c:	mov	r3, #0
   37a80:	strd	r2, [fp, #-28]	; 0xffffffe4
   37a84:	ldr	r1, [fp, #4]
   37a88:	mov	r2, #0
   37a8c:	mov	r3, #0
   37a90:	strd	r2, [r1]
   37a94:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37a98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37a9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37aa0:	bl	35fc0 <flatcc_verify_union_vector_field@@Base+0x708>
   37aa4:	str	r0, [fp, #-52]	; 0xffffffcc
   37aa8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37aac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37ab0:	cmp	r2, r3
   37ab4:	bne	37ac0 <flatcc_verify_union_vector_field@@Base+0x2208>
   37ab8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37abc:	b	37bdc <flatcc_verify_union_vector_field@@Base+0x2324>
   37ac0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37ac4:	str	r3, [fp, #-16]
   37ac8:	ldr	r3, [fp, #-16]
   37acc:	ldr	r4, [r3]
   37ad0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37ad4:	str	r3, [fp, #-20]	; 0xffffffec
   37ad8:	sub	r2, fp, #40	; 0x28
   37adc:	sub	r3, fp, #44	; 0x2c
   37ae0:	str	r3, [sp, #4]
   37ae4:	sub	r3, fp, #36	; 0x24
   37ae8:	str	r3, [sp]
   37aec:	mov	r3, r2
   37af0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   37af8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37afc:	blx	r4
   37b00:	str	r0, [fp, #-52]	; 0xffffffcc
   37b04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37b08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37b0c:	cmp	r2, r3
   37b10:	bne	37b1c <flatcc_verify_union_vector_field@@Base+0x2264>
   37b14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37b18:	b	37bdc <flatcc_verify_union_vector_field@@Base+0x2324>
   37b1c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   37b24:	cmp	r2, r3
   37b28:	bne	37b48 <flatcc_verify_union_vector_field@@Base+0x2290>
   37b2c:	ldr	r3, [fp, #-16]
   37b30:	add	r3, r3, #4
   37b34:	str	r3, [fp, #-16]
   37b38:	ldr	r3, [fp, #-16]
   37b3c:	ldr	r3, [r3]
   37b40:	cmp	r3, #0
   37b44:	bne	37ac8 <flatcc_verify_union_vector_field@@Base+0x2210>
   37b48:	ldr	r2, [fp, #-20]	; 0xffffffec
   37b4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37b50:	cmp	r2, r3
   37b54:	bne	37b74 <flatcc_verify_union_vector_field@@Base+0x22bc>
   37b58:	mov	r3, #23
   37b5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37b60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37b64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37b68:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   37b6c:	mov	r3, r0
   37b70:	b	37bdc <flatcc_verify_union_vector_field@@Base+0x2324>
   37b74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37b78:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37b7c:	sub	r1, fp, #28
   37b80:	str	r1, [sp, #8]
   37b84:	strd	r2, [sp]
   37b88:	mov	r3, r0
   37b8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   37b90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37b94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37b98:	bl	369b8 <flatcc_verify_union_vector_field@@Base+0x1100>
   37b9c:	mov	r2, r0
   37ba0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37ba4:	cmp	r2, r3
   37ba8:	bne	37bb4 <flatcc_verify_union_vector_field@@Base+0x22fc>
   37bac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37bb0:	b	37bdc <flatcc_verify_union_vector_field@@Base+0x2324>
   37bb4:	ldr	r3, [fp, #4]
   37bb8:	vldr	d6, [r3]
   37bbc:	vldr	d7, [fp, #-28]	; 0xffffffe4
   37bc0:	vadd.f64	d7, d6, d7
   37bc4:	ldr	r3, [fp, #4]
   37bc8:	vstr	d7, [r3]
   37bcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37bd0:	cmp	r3, #0
   37bd4:	bne	37ac0 <flatcc_verify_union_vector_field@@Base+0x2208>
   37bd8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37bdc:	mov	r0, r3
   37be0:	sub	sp, fp, #8
   37be4:	pop	{r4, fp, pc}
   37be8:	push	{fp}		; (str fp, [sp, #-4]!)
   37bec:	add	fp, sp, #0
   37bf0:	sub	sp, sp, #20
   37bf4:	vstr	d0, [fp, #-20]	; 0xffffffec
   37bf8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   37bfc:	strd	r2, [fp, #-12]
   37c00:	ldrd	r2, [fp, #-12]
   37c04:	mov	r0, r2
   37c08:	mov	r1, r3
   37c0c:	add	sp, fp, #0
   37c10:	pop	{fp}		; (ldr fp, [sp], #4)
   37c14:	bx	lr
   37c18:	push	{fp}		; (str fp, [sp, #-4]!)
   37c1c:	add	fp, sp, #0
   37c20:	sub	sp, sp, #20
   37c24:	strd	r0, [fp, #-20]	; 0xffffffec
   37c28:	ldrd	r2, [fp, #-20]	; 0xffffffec
   37c2c:	strd	r2, [fp, #-12]
   37c30:	ldrd	r2, [fp, #-12]
   37c34:	vmov	d7, r2, r3
   37c38:	vmov.f64	d0, d7
   37c3c:	add	sp, fp, #0
   37c40:	pop	{fp}		; (ldr fp, [sp], #4)
   37c44:	bx	lr
   37c48:	push	{fp}		; (str fp, [sp, #-4]!)
   37c4c:	add	fp, sp, #0
   37c50:	sub	sp, sp, #20
   37c54:	vstr	d0, [fp, #-20]	; 0xffffffec
   37c58:	vldr	d7, [fp, #-20]	; 0xffffffec
   37c5c:	vcvt.s32.f64	s15, d7
   37c60:	vmov	r3, s15
   37c64:	str	r3, [fp, #-8]
   37c68:	vldr	d7, [fp, #-20]	; 0xffffffec
   37c6c:	vcmpe.f64	d7, #0.0
   37c70:	vmrs	APSR_nzcv, fpscr
   37c74:	bpl	37c80 <flatcc_verify_union_vector_field@@Base+0x23c8>
   37c78:	ldr	r3, [fp, #-8]
   37c7c:	b	37cb0 <flatcc_verify_union_vector_field@@Base+0x23f8>
   37c80:	ldr	r3, [fp, #-8]
   37c84:	vmov	s15, r3
   37c88:	vcvt.f64.s32	d7, s15
   37c8c:	vldr	d6, [fp, #-20]	; 0xffffffec
   37c90:	vsub.f64	d7, d6, d7
   37c94:	vcmp.f64	d7, #0.0
   37c98:	vmrs	APSR_nzcv, fpscr
   37c9c:	beq	37cac <flatcc_verify_union_vector_field@@Base+0x23f4>
   37ca0:	ldr	r3, [fp, #-8]
   37ca4:	add	r3, r3, #1
   37ca8:	b	37cb0 <flatcc_verify_union_vector_field@@Base+0x23f8>
   37cac:	ldr	r3, [fp, #-8]
   37cb0:	mov	r0, r3
   37cb4:	add	sp, fp, #0
   37cb8:	pop	{fp}		; (ldr fp, [sp], #4)
   37cbc:	bx	lr
   37cc0:	push	{fp, lr}
   37cc4:	add	fp, sp, #4
   37cc8:	sub	sp, sp, #16
   37ccc:	str	r0, [fp, #-16]
   37cd0:	str	r1, [fp, #-20]	; 0xffffffec
   37cd4:	ldr	r3, [fp, #-16]
   37cd8:	add	r3, r3, #63	; 0x3f
   37cdc:	vmov	s15, r3
   37ce0:	vcvt.f64.s32	d7, s15
   37ce4:	vldr	d6, [pc, #164]	; 37d90 <flatcc_verify_union_vector_field@@Base+0x24d8>
   37ce8:	vmul.f64	d7, d7, d6
   37cec:	vmov.f64	d0, d7
   37cf0:	bl	37c48 <flatcc_verify_union_vector_field@@Base+0x2390>
   37cf4:	str	r0, [fp, #-8]
   37cf8:	ldr	r3, [fp, #-8]
   37cfc:	add	r3, r3, #344	; 0x158
   37d00:	add	r3, r3, #3
   37d04:	add	r2, r3, #7
   37d08:	cmp	r3, #0
   37d0c:	movlt	r3, r2
   37d10:	movge	r3, r3
   37d14:	asr	r3, r3, #3
   37d18:	add	r3, r3, #1
   37d1c:	str	r3, [fp, #-12]
   37d20:	ldr	r2, [pc, #112]	; 37d98 <flatcc_verify_union_vector_field@@Base+0x24e0>
   37d24:	add	r2, pc, r2
   37d28:	ldr	r3, [fp, #-12]
   37d2c:	lsl	r3, r3, #4
   37d30:	add	r3, r2, r3
   37d34:	ldrd	r2, [r3]
   37d38:	ldr	r1, [fp, #-20]	; 0xffffffec
   37d3c:	strd	r2, [r1]
   37d40:	ldr	r2, [pc, #84]	; 37d9c <flatcc_verify_union_vector_field@@Base+0x24e4>
   37d44:	add	r2, pc, r2
   37d48:	ldr	r3, [fp, #-12]
   37d4c:	lsl	r3, r3, #4
   37d50:	add	r3, r2, r3
   37d54:	add	r3, r3, #8
   37d58:	ldrsh	r3, [r3]
   37d5c:	mov	r2, r3
   37d60:	ldr	r3, [fp, #-20]	; 0xffffffec
   37d64:	str	r2, [r3, #8]
   37d68:	ldr	r2, [pc, #48]	; 37da0 <flatcc_verify_union_vector_field@@Base+0x24e8>
   37d6c:	add	r2, pc, r2
   37d70:	ldr	r3, [fp, #-12]
   37d74:	lsl	r3, r3, #4
   37d78:	add	r3, r2, r3
   37d7c:	add	r3, r3, #10
   37d80:	ldrsh	r3, [r3]
   37d84:	mov	r0, r3
   37d88:	sub	sp, fp, #4
   37d8c:	pop	{fp, pc}
   37d90:			; <UNDEFINED> instruction: 0x509f79fe
   37d94:	svccc	0x00d34413
   37d98:	andeq	r9, r1, ip, lsr #17
   37d9c:	andeq	r9, r1, ip, lsl #17
   37da0:	andeq	r9, r1, r4, ror #16
   37da4:	sub	sp, sp, #8
   37da8:	push	{fp, lr}
   37dac:	add	fp, sp, #4
   37db0:	sub	sp, sp, #24
   37db4:	str	r0, [fp, #-24]	; 0xffffffe8
   37db8:	add	r1, fp, #4
   37dbc:	stm	r1, {r2, r3}
   37dc0:	ldrd	r0, [fp, #4]
   37dc4:	ldrd	r2, [fp, #20]
   37dc8:	subs	r2, r0, r2
   37dcc:	sbc	r3, r1, r3
   37dd0:	strd	r2, [fp, #-20]	; 0xffffffec
   37dd4:	ldr	r3, [fp, #12]
   37dd8:	str	r3, [fp, #-12]
   37ddc:	ldr	r2, [fp, #12]
   37de0:	ldr	r3, [fp, #28]
   37de4:	cmp	r2, r3
   37de8:	bne	37e00 <flatcc_verify_union_vector_field@@Base+0x2548>
   37dec:	ldrd	r0, [fp, #4]
   37df0:	ldrd	r2, [fp, #20]
   37df4:	cmp	r1, r3
   37df8:	cmpeq	r0, r2
   37dfc:	bcs	37e20 <flatcc_verify_union_vector_field@@Base+0x2568>
   37e00:	ldr	r3, [pc, #64]	; 37e48 <flatcc_verify_union_vector_field@@Base+0x2590>
   37e04:	add	r3, pc, r3
   37e08:	mov	r2, #239	; 0xef
   37e0c:	ldr	r1, [pc, #56]	; 37e4c <flatcc_verify_union_vector_field@@Base+0x2594>
   37e10:	add	r1, pc, r1
   37e14:	ldr	r0, [pc, #52]	; 37e50 <flatcc_verify_union_vector_field@@Base+0x2598>
   37e18:	add	r0, pc, r0
   37e1c:	bl	14610 <__assert_fail@plt>
   37e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37e24:	mov	ip, r3
   37e28:	sub	r3, fp, #20
   37e2c:	ldm	r3, {r0, r1, r2, r3}
   37e30:	stm	ip, {r0, r1, r2, r3}
   37e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e38:	sub	sp, fp, #4
   37e3c:	pop	{fp, lr}
   37e40:	add	sp, sp, #8
   37e44:	bx	lr
   37e48:	andeq	sl, r1, r4, lsr r3
   37e4c:	andeq	r9, r1, r0, lsr sp
   37e50:	muleq	r1, r8, sp
   37e54:	sub	sp, sp, #8
   37e58:	push	{r4, r5, r6, r7, r8, r9, fp}
   37e5c:	add	fp, sp, #24
   37e60:	sub	sp, sp, #124	; 0x7c
   37e64:	str	r0, [fp, #-120]	; 0xffffff88
   37e68:	add	r1, fp, #4
   37e6c:	stm	r1, {r2, r3}
   37e70:	ldrd	r2, [fp, #4]
   37e74:	mov	r4, r3
   37e78:	mov	r5, #0
   37e7c:	strd	r4, [fp, #-36]	; 0xffffffdc
   37e80:	ldrd	r2, [fp, #4]
   37e84:	mvn	r0, #0
   37e88:	mov	r1, #0
   37e8c:	and	r2, r2, r0
   37e90:	and	r3, r3, r1
   37e94:	strd	r2, [fp, #-44]	; 0xffffffd4
   37e98:	ldrd	r2, [fp, #20]
   37e9c:	mov	r3, r3
   37ea0:	str	r3, [fp, #-148]	; 0xffffff6c
   37ea4:	mov	r3, #0
   37ea8:	str	r3, [fp, #-144]	; 0xffffff70
   37eac:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   37eb0:	strd	r2, [fp, #-52]	; 0xffffffcc
   37eb4:	ldrd	r2, [fp, #20]
   37eb8:	mvn	r0, #0
   37ebc:	mov	r1, #0
   37ec0:	and	r2, r2, r0
   37ec4:	and	r3, r3, r1
   37ec8:	strd	r2, [fp, #-60]	; 0xffffffc4
   37ecc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37ed0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37ed4:	mul	r2, r2, r3
   37ed8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37edc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37ee0:	mul	r3, r1, r3
   37ee4:	add	r1, r2, r3
   37ee8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37eec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37ef0:	umull	r2, r3, r2, r3
   37ef4:	add	r1, r1, r3
   37ef8:	mov	r3, r1
   37efc:	strd	r2, [fp, #-68]	; 0xffffffbc
   37f00:	strd	r2, [fp, #-68]	; 0xffffffbc
   37f04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37f08:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37f0c:	mul	r2, r2, r3
   37f10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37f14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37f18:	mul	r3, r1, r3
   37f1c:	add	r1, r2, r3
   37f20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   37f24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37f28:	umull	r2, r3, r2, r3
   37f2c:	add	r1, r1, r3
   37f30:	mov	r3, r1
   37f34:	strd	r2, [fp, #-76]	; 0xffffffb4
   37f38:	strd	r2, [fp, #-76]	; 0xffffffb4
   37f3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37f40:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37f44:	mul	r2, r2, r3
   37f48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37f4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37f50:	mul	r3, r1, r3
   37f54:	add	r1, r2, r3
   37f58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37f5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37f60:	umull	r2, r3, r2, r3
   37f64:	add	r1, r1, r3
   37f68:	mov	r3, r1
   37f6c:	strd	r2, [fp, #-84]	; 0xffffffac
   37f70:	strd	r2, [fp, #-84]	; 0xffffffac
   37f74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37f78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37f7c:	mul	r2, r2, r3
   37f80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37f84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37f88:	mul	r3, r1, r3
   37f8c:	add	r1, r2, r3
   37f90:	ldr	r2, [fp, #-44]	; 0xffffffd4
   37f94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37f98:	umull	r2, r3, r2, r3
   37f9c:	add	r1, r1, r3
   37fa0:	mov	r3, r1
   37fa4:	strd	r2, [fp, #-92]	; 0xffffffa4
   37fa8:	strd	r2, [fp, #-92]	; 0xffffffa4
   37fac:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   37fb0:	mov	r3, r3
   37fb4:	str	r3, [fp, #-132]	; 0xffffff7c
   37fb8:	mov	r3, #0
   37fbc:	str	r3, [fp, #-128]	; 0xffffff80
   37fc0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   37fc4:	mvn	r0, #0
   37fc8:	mov	r1, #0
   37fcc:	and	r2, r2, r0
   37fd0:	and	r3, r3, r1
   37fd4:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   37fd8:	adds	r0, r0, r2
   37fdc:	adc	r1, r1, r3
   37fe0:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   37fe4:	mvn	r4, #0
   37fe8:	mov	r5, #0
   37fec:	and	r2, r2, r4
   37ff0:	and	r3, r3, r5
   37ff4:	adds	r2, r2, r0
   37ff8:	adc	r3, r3, r1
   37ffc:	strd	r2, [fp, #-100]	; 0xffffff9c
   38000:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   38004:	adds	r2, r2, #-2147483648	; 0x80000000
   38008:	adc	r3, r3, #0
   3800c:	strd	r2, [fp, #-100]	; 0xffffff9c
   38010:	ldrd	r2, [fp, #-84]	; 0xffffffac
   38014:	mov	r3, r3
   38018:	str	r3, [fp, #-140]	; 0xffffff74
   3801c:	mov	r3, #0
   38020:	str	r3, [fp, #-136]	; 0xffffff78
   38024:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   38028:	ldrd	r0, [fp, #-140]	; 0xffffff74
   3802c:	adds	r0, r0, r2
   38030:	adc	r1, r1, r3
   38034:	mov	r2, r0
   38038:	mov	r3, r1
   3803c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   38040:	mov	r8, r1
   38044:	mov	r9, #0
   38048:	adds	r2, r2, r8
   3804c:	adc	r3, r3, r9
   38050:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   38054:	mov	r6, r1
   38058:	mov	r7, #0
   3805c:	adds	r2, r2, r6
   38060:	adc	r3, r3, r7
   38064:	strd	r2, [fp, #-116]	; 0xffffff8c
   38068:	ldr	r2, [fp, #12]
   3806c:	ldr	r3, [fp, #28]
   38070:	add	r3, r2, r3
   38074:	add	r3, r3, #64	; 0x40
   38078:	str	r3, [fp, #-108]	; 0xffffff94
   3807c:	ldr	r3, [fp, #-120]	; 0xffffff88
   38080:	mov	ip, r3
   38084:	sub	r3, fp, #116	; 0x74
   38088:	ldm	r3, {r0, r1, r2, r3}
   3808c:	stm	ip, {r0, r1, r2, r3}
   38090:	ldr	r0, [fp, #-120]	; 0xffffff88
   38094:	sub	sp, fp, #24
   38098:	pop	{r4, r5, r6, r7, r8, r9, fp}
   3809c:	add	sp, sp, #8
   380a0:	bx	lr
   380a4:	sub	sp, sp, #8
   380a8:	push	{r4, r5, fp, lr}
   380ac:	add	fp, sp, #12
   380b0:	sub	sp, sp, #8
   380b4:	str	r0, [fp, #-16]
   380b8:	add	r1, fp, #4
   380bc:	stm	r1, {r2, r3}
   380c0:	ldrd	r2, [fp, #4]
   380c4:	orrs	r3, r2, r3
   380c8:	bne	3810c <flatcc_verify_union_vector_field@@Base+0x2854>
   380cc:	ldr	r3, [pc, #172]	; 38180 <flatcc_verify_union_vector_field@@Base+0x28c8>
   380d0:	add	r3, pc, r3
   380d4:	mov	r2, #260	; 0x104
   380d8:	ldr	r1, [pc, #164]	; 38184 <flatcc_verify_union_vector_field@@Base+0x28cc>
   380dc:	add	r1, pc, r1
   380e0:	ldr	r0, [pc, #160]	; 38188 <flatcc_verify_union_vector_field@@Base+0x28d0>
   380e4:	add	r0, pc, r0
   380e8:	bl	14610 <__assert_fail@plt>
   380ec:	ldrd	r2, [fp, #4]
   380f0:	lsl	r5, r3, #10
   380f4:	orr	r5, r5, r2, lsr #22
   380f8:	lsl	r4, r2, #10
   380fc:	strd	r4, [fp, #4]
   38100:	ldr	r3, [fp, #12]
   38104:	sub	r3, r3, #10
   38108:	str	r3, [fp, #12]
   3810c:	ldrd	r2, [fp, #4]
   38110:	mov	r0, #0
   38114:	ldr	r1, [pc, #112]	; 3818c <flatcc_verify_union_vector_field@@Base+0x28d4>
   38118:	and	r2, r2, r0
   3811c:	and	r3, r3, r1
   38120:	orrs	r3, r2, r3
   38124:	beq	380ec <flatcc_verify_union_vector_field@@Base+0x2834>
   38128:	b	38148 <flatcc_verify_union_vector_field@@Base+0x2890>
   3812c:	ldrd	r2, [fp, #4]
   38130:	adds	r2, r2, r2
   38134:	adc	r3, r3, r3
   38138:	strd	r2, [fp, #4]
   3813c:	ldr	r3, [fp, #12]
   38140:	sub	r3, r3, #1
   38144:	str	r3, [fp, #12]
   38148:	ldrd	r2, [fp, #4]
   3814c:	cmp	r2, #0
   38150:	sbcs	r3, r3, #0
   38154:	bge	3812c <flatcc_verify_union_vector_field@@Base+0x2874>
   38158:	ldr	r3, [fp, #-16]
   3815c:	mov	ip, r3
   38160:	add	r3, fp, #4
   38164:	ldm	r3, {r0, r1, r2, r3}
   38168:	stm	ip, {r0, r1, r2, r3}
   3816c:	ldr	r0, [fp, #-16]
   38170:	sub	sp, fp, #12
   38174:	pop	{r4, r5, fp, lr}
   38178:	add	sp, sp, #8
   3817c:	bx	lr
   38180:	andeq	sl, r1, ip, ror r0
   38184:	andeq	r9, r1, r4, ror #20
   38188:	andeq	r9, r1, r8, ror #21
   3818c:			; <UNDEFINED> instruction: 0xffc00000
   38190:	push	{r4, r5, fp, lr}
   38194:	add	fp, sp, #12
   38198:	sub	sp, sp, #40	; 0x28
   3819c:	str	r0, [fp, #-40]	; 0xffffffd8
   381a0:	vstr	d0, [fp, #-52]	; 0xffffffcc
   381a4:	vldr	d0, [fp, #-52]	; 0xffffffcc
   381a8:	bl	37be8 <flatcc_verify_union_vector_field@@Base+0x2330>
   381ac:	strd	r0, [fp, #-20]	; 0xffffffec
   381b0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   381b4:	mov	r0, #0
   381b8:	ldr	r1, [pc, #148]	; 38254 <flatcc_verify_union_vector_field@@Base+0x299c>
   381bc:	and	r2, r2, r0
   381c0:	and	r3, r3, r1
   381c4:	orrs	r3, r2, r3
   381c8:	bne	381f0 <flatcc_verify_union_vector_field@@Base+0x2938>
   381cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   381d0:	mvn	r0, #0
   381d4:	ldr	r1, [pc, #124]	; 38258 <flatcc_verify_union_vector_field@@Base+0x29a0>
   381d8:	and	r2, r2, r0
   381dc:	and	r3, r3, r1
   381e0:	strd	r2, [fp, #-36]	; 0xffffffdc
   381e4:	ldr	r3, [pc, #112]	; 3825c <flatcc_verify_union_vector_field@@Base+0x29a4>
   381e8:	str	r3, [fp, #-28]	; 0xffffffe4
   381ec:	b	38234 <flatcc_verify_union_vector_field@@Base+0x297c>
   381f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   381f4:	mvn	r0, #0
   381f8:	ldr	r1, [pc, #88]	; 38258 <flatcc_verify_union_vector_field@@Base+0x29a0>
   381fc:	and	r2, r2, r0
   38200:	and	r3, r3, r1
   38204:	adds	r2, r2, #0
   38208:	adc	r3, r3, #1048576	; 0x100000
   3820c:	strd	r2, [fp, #-36]	; 0xffffffdc
   38210:	ldrd	r2, [fp, #-20]	; 0xffffffec
   38214:	lsr	r4, r3, #20
   38218:	mov	r5, #0
   3821c:	mov	r3, r4
   38220:	lsl	r3, r3, #21
   38224:	lsr	r3, r3, #21
   38228:	sub	r3, r3, #1072	; 0x430
   3822c:	sub	r3, r3, #3
   38230:	str	r3, [fp, #-28]	; 0xffffffe4
   38234:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38238:	mov	ip, r3
   3823c:	sub	r3, fp, #36	; 0x24
   38240:	ldm	r3, {r0, r1, r2, r3}
   38244:	stm	ip, {r0, r1, r2, r3}
   38248:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3824c:	sub	sp, fp, #12
   38250:	pop	{r4, r5, fp, pc}
   38254:	svcvc	0x00f00000	; IMB
   38258:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   3825c:			; <UNDEFINED> instruction: 0xfffffbce
   38260:	push	{r4, r5, r6, r7, fp, lr}
   38264:	add	fp, sp, #20
   38268:	sub	sp, sp, #72	; 0x48
   3826c:	sub	ip, fp, #92	; 0x5c
   38270:	stm	ip, {r0, r1, r2, r3}
   38274:	mov	r2, #0
   38278:	mov	r3, #1048576	; 0x100000
   3827c:	strd	r2, [fp, #-36]	; 0xffffffdc
   38280:	mvn	r2, #0
   38284:	ldr	r3, [pc, #372]	; 38400 <flatcc_verify_union_vector_field@@Base+0x2b48>
   38288:	strd	r2, [fp, #-44]	; 0xffffffd4
   3828c:	ldr	r3, [pc, #368]	; 38404 <flatcc_verify_union_vector_field@@Base+0x2b4c>
   38290:	str	r3, [fp, #-48]	; 0xffffffd0
   38294:	ldr	r3, [pc, #364]	; 38408 <flatcc_verify_union_vector_field@@Base+0x2b50>
   38298:	str	r3, [fp, #-52]	; 0xffffffcc
   3829c:	mov	r3, #52	; 0x34
   382a0:	str	r3, [fp, #-56]	; 0xffffffc8
   382a4:	sub	ip, fp, #76	; 0x4c
   382a8:	sub	r3, fp, #92	; 0x5c
   382ac:	ldm	r3, {r0, r1, r2, r3}
   382b0:	stm	ip, {r0, r1, r2, r3}
   382b4:	b	382d4 <flatcc_verify_union_vector_field@@Base+0x2a1c>
   382b8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   382bc:	lsrs	r3, r3, #1
   382c0:	rrx	r2, r2
   382c4:	strd	r2, [fp, #-76]	; 0xffffffb4
   382c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   382cc:	add	r3, r3, #1
   382d0:	str	r3, [fp, #-68]	; 0xffffffbc
   382d4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   382d8:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   382dc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   382e0:	adds	r2, r2, r6
   382e4:	adc	r3, r3, r7
   382e8:	cmp	r1, r3
   382ec:	cmpeq	r0, r2
   382f0:	bhi	382b8 <flatcc_verify_union_vector_field@@Base+0x2a00>
   382f4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   382f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   382fc:	cmp	r2, r3
   38300:	bge	38328 <flatcc_verify_union_vector_field@@Base+0x2a70>
   38304:	vldr	d7, [pc, #236]	; 383f8 <flatcc_verify_union_vector_field@@Base+0x2b40>
   38308:	b	383e8 <flatcc_verify_union_vector_field@@Base+0x2b30>
   3830c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   38310:	adds	r2, r2, r2
   38314:	adc	r3, r3, r3
   38318:	strd	r2, [fp, #-76]	; 0xffffffb4
   3831c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38320:	sub	r3, r3, #1
   38324:	str	r3, [fp, #-68]	; 0xffffffbc
   38328:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3832c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38330:	cmp	r2, r3
   38334:	ble	38350 <flatcc_verify_union_vector_field@@Base+0x2a98>
   38338:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   3833c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   38340:	and	r2, r2, r0
   38344:	and	r3, r3, r1
   38348:	orrs	r3, r2, r3
   3834c:	beq	3830c <flatcc_verify_union_vector_field@@Base+0x2a54>
   38350:	ldr	r2, [fp, #-68]	; 0xffffffbc
   38354:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38358:	cmp	r2, r3
   3835c:	bne	38388 <flatcc_verify_union_vector_field@@Base+0x2ad0>
   38360:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   38364:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   38368:	and	r2, r2, r0
   3836c:	and	r3, r3, r1
   38370:	orrs	r3, r2, r3
   38374:	bne	38388 <flatcc_verify_union_vector_field@@Base+0x2ad0>
   38378:	mov	r2, #0
   3837c:	mov	r3, #0
   38380:	strd	r2, [fp, #-28]	; 0xffffffe4
   38384:	b	383a0 <flatcc_verify_union_vector_field@@Base+0x2ae8>
   38388:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3838c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38390:	add	r3, r2, r3
   38394:	mov	r2, r3
   38398:	asr	r3, r2, #31
   3839c:	strd	r2, [fp, #-28]	; 0xffffffe4
   383a0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   383a4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   383a8:	and	r6, r0, r2
   383ac:	and	r7, r1, r3
   383b0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   383b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   383b8:	sub	ip, r1, #32
   383bc:	rsb	r0, r1, #32
   383c0:	lsl	r5, r3, r1
   383c4:	orr	r5, r5, r2, lsl ip
   383c8:	orr	r5, r5, r2, lsr r0
   383cc:	lsl	r4, r2, r1
   383d0:	orr	r2, r6, r4
   383d4:	orr	r3, r7, r5
   383d8:	mov	r0, r2
   383dc:	mov	r1, r3
   383e0:	bl	37c18 <flatcc_verify_union_vector_field@@Base+0x2360>
   383e4:	vmov.f64	d7, d0
   383e8:	vmov.f64	d0, d7
   383ec:	sub	sp, fp, #20
   383f0:	pop	{r4, r5, r6, r7, fp, pc}
   383f4:	nop			; (mov r0, r0)
	...
   38400:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   38404:			; <UNDEFINED> instruction: 0xfffffbce
   38408:	andeq	r0, r0, r3, lsr r4
   3840c:	push	{fp}		; (str fp, [sp, #-4]!)
   38410:	add	fp, sp, #0
   38414:	sub	sp, sp, #28
   38418:	str	r0, [fp, #-16]
   3841c:	str	r1, [fp, #-20]	; 0xffffffec
   38420:	str	r2, [fp, #-24]	; 0xffffffe8
   38424:	ldr	r3, [fp, #-20]	; 0xffffffec
   38428:	add	r2, r3, #1
   3842c:	mov	r3, r2
   38430:	lsl	r3, r3, #4
   38434:	add	r3, r3, r2
   38438:	lsl	r3, r3, #3
   3843c:	add	r3, r3, r2
   38440:	lsl	r2, r3, #3
   38444:	add	r3, r3, r2
   38448:	asr	r3, r3, #12
   3844c:	add	r3, r3, #1
   38450:	str	r3, [fp, #-8]
   38454:	ldr	r3, [pc, #76]	; 384a8 <flatcc_verify_union_vector_field@@Base+0x2bf0>
   38458:	add	r3, pc, r3
   3845c:	ldr	r2, [fp, #-8]
   38460:	ldr	r2, [r3, r2, lsl #2]
   38464:	ldr	r3, [fp, #-16]
   38468:	cmp	r2, r3
   3846c:	bls	3847c <flatcc_verify_union_vector_field@@Base+0x2bc4>
   38470:	ldr	r3, [fp, #-8]
   38474:	sub	r3, r3, #1
   38478:	str	r3, [fp, #-8]
   3847c:	ldr	r3, [pc, #40]	; 384ac <flatcc_verify_union_vector_field@@Base+0x2bf4>
   38480:	add	r3, pc, r3
   38484:	ldr	r2, [fp, #-8]
   38488:	ldr	r2, [r3, r2, lsl #2]
   3848c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38490:	str	r2, [r3]
   38494:	ldr	r3, [fp, #-8]
   38498:	mov	r0, r3
   3849c:	add	sp, fp, #0
   384a0:	pop	{fp}		; (ldr fp, [sp], #4)
   384a4:	bx	lr
   384a8:	andeq	r9, r1, r0, lsl #15
   384ac:	andeq	r9, r1, r8, asr r7
   384b0:	push	{fp, lr}
   384b4:	add	fp, sp, #4
   384b8:	sub	sp, sp, #24
   384bc:	str	r0, [fp, #-24]	; 0xffffffe8
   384c0:	str	r1, [fp, #-28]	; 0xffffffe4
   384c4:	mov	r3, #348	; 0x15c
   384c8:	str	r3, [fp, #-8]
   384cc:	mov	r3, #8
   384d0:	str	r3, [fp, #-12]
   384d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   384d8:	cmn	r3, #348	; 0x15c
   384dc:	bge	38500 <flatcc_verify_union_vector_field@@Base+0x2c48>
   384e0:	ldr	r3, [pc, #332]	; 38634 <flatcc_verify_union_vector_field@@Base+0x2d7c>
   384e4:	add	r3, pc, r3
   384e8:	mov	r2, #80	; 0x50
   384ec:	ldr	r1, [pc, #324]	; 38638 <flatcc_verify_union_vector_field@@Base+0x2d80>
   384f0:	add	r1, pc, r1
   384f4:	ldr	r0, [pc, #320]	; 3863c <flatcc_verify_union_vector_field@@Base+0x2d84>
   384f8:	add	r0, pc, r0
   384fc:	bl	14610 <__assert_fail@plt>
   38500:	ldr	r3, [fp, #-12]
   38504:	add	r2, r3, #340	; 0x154
   38508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3850c:	cmp	r2, r3
   38510:	bgt	38534 <flatcc_verify_union_vector_field@@Base+0x2c7c>
   38514:	ldr	r3, [pc, #292]	; 38640 <flatcc_verify_union_vector_field@@Base+0x2d88>
   38518:	add	r3, pc, r3
   3851c:	mov	r2, #81	; 0x51
   38520:	ldr	r1, [pc, #284]	; 38644 <flatcc_verify_union_vector_field@@Base+0x2d8c>
   38524:	add	r1, pc, r1
   38528:	ldr	r0, [pc, #280]	; 38648 <flatcc_verify_union_vector_field@@Base+0x2d90>
   3852c:	add	r0, pc, r0
   38530:	bl	14610 <__assert_fail@plt>
   38534:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38538:	ldr	r3, [fp, #-8]
   3853c:	add	r3, r2, r3
   38540:	ldr	r1, [fp, #-12]
   38544:	mov	r0, r3
   38548:	bl	4bcd4 <flatcc_json_printer_clear@@Base+0x268>
   3854c:	mov	r3, r0
   38550:	str	r3, [fp, #-16]
   38554:	ldr	r2, [pc, #240]	; 3864c <flatcc_verify_union_vector_field@@Base+0x2d94>
   38558:	add	r2, pc, r2
   3855c:	ldr	r3, [fp, #-16]
   38560:	lsl	r3, r3, #4
   38564:	add	r3, r2, r3
   38568:	add	r3, r3, #10
   3856c:	ldrsh	r3, [r3]
   38570:	str	r3, [fp, #-20]	; 0xffffffec
   38574:	ldr	r2, [pc, #212]	; 38650 <flatcc_verify_union_vector_field@@Base+0x2d98>
   38578:	add	r2, pc, r2
   3857c:	ldr	r3, [fp, #-16]
   38580:	lsl	r3, r3, #4
   38584:	add	r3, r2, r3
   38588:	ldrd	r2, [r3]
   3858c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38590:	strd	r2, [r1]
   38594:	ldr	r2, [pc, #184]	; 38654 <flatcc_verify_union_vector_field@@Base+0x2d9c>
   38598:	add	r2, pc, r2
   3859c:	ldr	r3, [fp, #-16]
   385a0:	lsl	r3, r3, #4
   385a4:	add	r3, r2, r3
   385a8:	add	r3, r3, #8
   385ac:	ldrsh	r3, [r3]
   385b0:	mov	r2, r3
   385b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   385b8:	str	r2, [r3, #8]
   385bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   385c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   385c4:	cmp	r2, r3
   385c8:	ble	385ec <flatcc_verify_union_vector_field@@Base+0x2d34>
   385cc:	ldr	r3, [pc, #132]	; 38658 <flatcc_verify_union_vector_field@@Base+0x2da0>
   385d0:	add	r3, pc, r3
   385d4:	mov	r2, #88	; 0x58
   385d8:	ldr	r1, [pc, #124]	; 3865c <flatcc_verify_union_vector_field@@Base+0x2da4>
   385dc:	add	r1, pc, r1
   385e0:	ldr	r0, [pc, #120]	; 38660 <flatcc_verify_union_vector_field@@Base+0x2da8>
   385e4:	add	r0, pc, r0
   385e8:	bl	14610 <__assert_fail@plt>
   385ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   385f0:	ldr	r3, [fp, #-12]
   385f4:	add	r2, r2, r3
   385f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   385fc:	cmp	r2, r3
   38600:	bgt	38624 <flatcc_verify_union_vector_field@@Base+0x2d6c>
   38604:	ldr	r3, [pc, #88]	; 38664 <flatcc_verify_union_vector_field@@Base+0x2dac>
   38608:	add	r3, pc, r3
   3860c:	mov	r2, #89	; 0x59
   38610:	ldr	r1, [pc, #80]	; 38668 <flatcc_verify_union_vector_field@@Base+0x2db0>
   38614:	add	r1, pc, r1
   38618:	ldr	r0, [pc, #76]	; 3866c <flatcc_verify_union_vector_field@@Base+0x2db4>
   3861c:	add	r0, pc, r0
   38620:	bl	14610 <__assert_fail@plt>
   38624:	ldr	r3, [fp, #-20]	; 0xffffffec
   38628:	mov	r0, r3
   3862c:	sub	sp, fp, #4
   38630:	pop	{fp, pc}
   38634:	andeq	r9, r1, r0, lsl #25
   38638:	andeq	r9, r1, r4, lsl r7
   3863c:	andeq	r9, r1, ip, ror r7
   38640:	andeq	r9, r1, ip, asr #24
   38644:	andeq	r9, r1, r0, ror #13
   38648:	andeq	r9, r1, r8, ror #14
   3864c:	andeq	r9, r1, r8, ror r0
   38650:	andeq	r9, r1, r8, asr r0
   38654:	andeq	r9, r1, r8, lsr r0
   38658:	muleq	r1, r4, fp
   3865c:	andeq	r9, r1, r8, lsr #12
   38660:	ldrdeq	r9, [r1], -ip
   38664:	andeq	r9, r1, ip, asr fp
   38668:	strdeq	r9, [r1], -r0
   3866c:			; <UNDEFINED> instruction: 0x000196b4

00038670 <grisu3_diy_fp_encode_double@@Base>:
   38670:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   38674:	add	fp, sp, #28
   38678:	sub	sp, sp, #184	; 0xb8
   3867c:	strd	r0, [fp, #-156]	; 0xffffff64
   38680:	str	r2, [fp, #-160]	; 0xffffff60
   38684:	str	r3, [fp, #-164]	; 0xffffff5c
   38688:	mov	r3, #3
   3868c:	str	r3, [fp, #-40]	; 0xffffffd8
   38690:	mov	r2, #1
   38694:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38698:	lsl	r3, r2, r3
   3869c:	str	r3, [fp, #-44]	; 0xffffffd4
   386a0:	ldr	r3, [pc, #1264]	; 38b98 <grisu3_diy_fp_encode_double@@Base+0x528>
   386a4:	str	r3, [fp, #-48]	; 0xffffffd0
   386a8:	mov	r2, #0
   386ac:	mov	r3, #1048576	; 0x100000
   386b0:	strd	r2, [fp, #-60]	; 0xffffffc4
   386b4:	mov	r3, #64	; 0x40
   386b8:	str	r3, [fp, #-64]	; 0xffffffc0
   386bc:	mov	r3, #19
   386c0:	str	r3, [fp, #-68]	; 0xffffffbc
   386c4:	ldr	r3, [fp, #4]
   386c8:	cmp	r3, #0
   386cc:	beq	386e4 <grisu3_diy_fp_encode_double@@Base+0x74>
   386d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   386d4:	lsr	r2, r3, #31
   386d8:	add	r3, r2, r3
   386dc:	asr	r3, r3, #1
   386e0:	b	386e8 <grisu3_diy_fp_encode_double@@Base+0x78>
   386e4:	mov	r3, #0
   386e8:	str	r3, [fp, #-32]	; 0xffffffe0
   386ec:	ldr	r2, [fp, #-160]	; 0xffffff60
   386f0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   386f4:	sub	r3, r2, r3
   386f8:	str	r3, [fp, #-72]	; 0xffffffb8
   386fc:	ldrd	r2, [fp, #-156]	; 0xffffff64
   38700:	strd	r2, [fp, #-116]	; 0xffffff8c
   38704:	mov	r3, #0
   38708:	str	r3, [fp, #-108]	; 0xffffff94
   3870c:	sub	ip, fp, #116	; 0x74
   38710:	mov	r2, sp
   38714:	sub	r3, fp, #108	; 0x6c
   38718:	ldm	r3, {r0, r1}
   3871c:	stm	r2, {r0, r1}
   38720:	sub	r3, fp, #116	; 0x74
   38724:	ldm	r3, {r2, r3}
   38728:	mov	r0, ip
   3872c:	bl	380a4 <flatcc_verify_union_vector_field@@Base+0x27ec>
   38730:	ldr	r3, [fp, #-108]	; 0xffffff94
   38734:	rsb	r3, r3, #0
   38738:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3873c:	lsl	r3, r2, r3
   38740:	str	r3, [fp, #-32]	; 0xffffffe0
   38744:	sub	r3, fp, #132	; 0x84
   38748:	mov	r1, r3
   3874c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38750:	bl	384b0 <flatcc_verify_union_vector_field@@Base+0x2bf8>
   38754:	str	r0, [fp, #-76]	; 0xffffffb4
   38758:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3875c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   38760:	cmp	r2, r3
   38764:	beq	38844 <grisu3_diy_fp_encode_double@@Base+0x1d4>
   38768:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3876c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   38770:	sub	r3, r2, r3
   38774:	sub	r3, r3, #1
   38778:	str	r3, [fp, #-80]	; 0xffffffb0
   3877c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38780:	cmp	r3, #0
   38784:	blt	38794 <grisu3_diy_fp_encode_double@@Base+0x124>
   38788:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3878c:	cmp	r3, #6
   38790:	ble	387b4 <grisu3_diy_fp_encode_double@@Base+0x144>
   38794:	ldr	r3, [pc, #1024]	; 38b9c <grisu3_diy_fp_encode_double@@Base+0x52c>
   38798:	add	r3, pc, r3
   3879c:	mov	r2, #185	; 0xb9
   387a0:	ldr	r1, [pc, #1016]	; 38ba0 <grisu3_diy_fp_encode_double@@Base+0x530>
   387a4:	add	r1, pc, r1
   387a8:	ldr	r0, [pc, #1012]	; 38ba4 <grisu3_diy_fp_encode_double@@Base+0x534>
   387ac:	add	r0, pc, r0
   387b0:	bl	14610 <__assert_fail@plt>
   387b4:	sub	lr, fp, #180	; 0xb4
   387b8:	ldr	r2, [pc, #1000]	; 38ba8 <grisu3_diy_fp_encode_double@@Base+0x538>
   387bc:	add	r2, pc, r2
   387c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   387c4:	add	ip, sp, #8
   387c8:	lsl	r3, r3, #4
   387cc:	add	r3, r2, r3
   387d0:	ldm	r3, {r0, r1, r2, r3}
   387d4:	stm	ip, {r0, r1, r2, r3}
   387d8:	mov	r2, sp
   387dc:	sub	r3, fp, #108	; 0x6c
   387e0:	ldm	r3, {r0, r1}
   387e4:	stm	r2, {r0, r1}
   387e8:	sub	r3, fp, #116	; 0x74
   387ec:	ldm	r3, {r2, r3}
   387f0:	mov	r0, lr
   387f4:	bl	37e54 <flatcc_verify_union_vector_field@@Base+0x259c>
   387f8:	sub	ip, fp, #116	; 0x74
   387fc:	sub	r3, fp, #180	; 0xb4
   38800:	ldm	r3, {r0, r1, r2, r3}
   38804:	stm	ip, {r0, r1, r2, r3}
   38808:	ldr	r3, [fp, #-164]	; 0xffffff5c
   3880c:	add	r2, r3, #1
   38810:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38814:	add	r2, r2, r3
   38818:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3881c:	cmp	r2, r3
   38820:	ble	38844 <grisu3_diy_fp_encode_double@@Base+0x1d4>
   38824:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38828:	lsr	r2, r3, #31
   3882c:	add	r3, r2, r3
   38830:	asr	r3, r3, #1
   38834:	mov	r2, r3
   38838:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3883c:	add	r3, r3, r2
   38840:	str	r3, [fp, #-32]	; 0xffffffe0
   38844:	sub	lr, fp, #180	; 0xb4
   38848:	add	ip, sp, #8
   3884c:	sub	r3, fp, #132	; 0x84
   38850:	ldm	r3, {r0, r1, r2, r3}
   38854:	stm	ip, {r0, r1, r2, r3}
   38858:	mov	r2, sp
   3885c:	sub	r3, fp, #108	; 0x6c
   38860:	ldm	r3, {r0, r1}
   38864:	stm	r2, {r0, r1}
   38868:	sub	r3, fp, #116	; 0x74
   3886c:	ldm	r3, {r2, r3}
   38870:	mov	r0, lr
   38874:	bl	37e54 <flatcc_verify_union_vector_field@@Base+0x259c>
   38878:	sub	ip, fp, #116	; 0x74
   3887c:	sub	r3, fp, #180	; 0xb4
   38880:	ldm	r3, {r0, r1, r2, r3}
   38884:	stm	ip, {r0, r1, r2, r3}
   38888:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3888c:	cmp	r3, #0
   38890:	movne	r3, #1
   38894:	moveq	r3, #0
   38898:	uxtb	r3, r3
   3889c:	mov	r2, r3
   388a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   388a4:	add	r3, r2, r3
   388a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   388ac:	add	r3, r2, r3
   388b0:	str	r3, [fp, #-32]	; 0xffffffe0
   388b4:	ldr	r3, [fp, #-108]	; 0xffffff94
   388b8:	str	r3, [fp, #-84]	; 0xffffffac
   388bc:	sub	ip, fp, #180	; 0xb4
   388c0:	mov	r2, sp
   388c4:	sub	r3, fp, #108	; 0x6c
   388c8:	ldm	r3, {r0, r1}
   388cc:	stm	r2, {r0, r1}
   388d0:	sub	r3, fp, #116	; 0x74
   388d4:	ldm	r3, {r2, r3}
   388d8:	mov	r0, ip
   388dc:	bl	380a4 <flatcc_verify_union_vector_field@@Base+0x27ec>
   388e0:	sub	ip, fp, #116	; 0x74
   388e4:	sub	r3, fp, #180	; 0xb4
   388e8:	ldm	r3, {r0, r1, r2, r3}
   388ec:	stm	ip, {r0, r1, r2, r3}
   388f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   388f4:	ldr	r2, [fp, #-84]	; 0xffffffac
   388f8:	sub	r3, r2, r3
   388fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38900:	lsl	r3, r2, r3
   38904:	str	r3, [fp, #-32]	; 0xffffffe0
   38908:	ldr	r2, [fp, #-108]	; 0xffffff94
   3890c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38910:	add	r3, r2, r3
   38914:	str	r3, [fp, #-88]	; 0xffffffa8
   38918:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3891c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38920:	add	r2, r2, r3
   38924:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38928:	cmp	r2, r3
   3892c:	ble	38958 <grisu3_diy_fp_encode_double@@Base+0x2e8>
   38930:	ldr	r2, [fp, #-88]	; 0xffffffa8
   38934:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38938:	cmp	r2, r3
   3893c:	ble	38950 <grisu3_diy_fp_encode_double@@Base+0x2e0>
   38940:	ldr	r2, [fp, #-88]	; 0xffffffa8
   38944:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38948:	sub	r3, r2, r3
   3894c:	b	3895c <grisu3_diy_fp_encode_double@@Base+0x2ec>
   38950:	mov	r3, #0
   38954:	b	3895c <grisu3_diy_fp_encode_double@@Base+0x2ec>
   38958:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3895c:	str	r3, [fp, #-88]	; 0xffffffa8
   38960:	ldr	r2, [fp, #-64]	; 0xffffffc0
   38964:	ldr	r3, [fp, #-88]	; 0xffffffa8
   38968:	sub	r3, r2, r3
   3896c:	str	r3, [fp, #-36]	; 0xffffffdc
   38970:	ldr	r2, [fp, #-36]	; 0xffffffdc
   38974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38978:	add	r2, r2, r3
   3897c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38980:	cmp	r2, r3
   38984:	blt	38a04 <grisu3_diy_fp_encode_double@@Base+0x394>
   38988:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3898c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38990:	add	r2, r2, r3
   38994:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38998:	sub	r3, r2, r3
   3899c:	sub	r3, r3, #1
   389a0:	str	r3, [fp, #-92]	; 0xffffffa4
   389a4:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   389a8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   389ac:	rsb	ip, r1, #32
   389b0:	sub	r0, r1, #32
   389b4:	lsr	r8, r2, r1
   389b8:	orr	r8, r8, r3, lsl ip
   389bc:	orr	r8, r8, r3, lsr r0
   389c0:	lsr	r9, r3, r1
   389c4:	strd	r8, [fp, #-116]	; 0xffffff8c
   389c8:	ldr	r2, [fp, #-108]	; 0xffffff94
   389cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   389d0:	add	r3, r2, r3
   389d4:	str	r3, [fp, #-108]	; 0xffffff94
   389d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   389dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   389e0:	asr	r3, r2, r3
   389e4:	add	r2, r3, #1
   389e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   389ec:	add	r3, r2, r3
   389f0:	str	r3, [fp, #-32]	; 0xffffffe0
   389f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   389f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   389fc:	sub	r3, r2, r3
   38a00:	str	r3, [fp, #-36]	; 0xffffffdc
   38a04:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   38a08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38a0c:	rsb	ip, r1, #32
   38a10:	sub	r0, r1, #32
   38a14:	lsr	r6, r2, r1
   38a18:	orr	r6, r6, r3, lsl ip
   38a1c:	orr	r6, r6, r3, lsr r0
   38a20:	lsr	r7, r3, r1
   38a24:	strd	r6, [fp, #-148]	; 0xffffff6c
   38a28:	ldr	r2, [fp, #-108]	; 0xffffff94
   38a2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38a30:	add	r3, r2, r3
   38a34:	str	r3, [fp, #-140]	; 0xffffff74
   38a38:	ldrd	r6, [fp, #-116]	; 0xffffff8c
   38a3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38a40:	sub	r1, r3, #1
   38a44:	mov	r2, #1
   38a48:	mov	r3, #0
   38a4c:	sub	ip, r1, #32
   38a50:	rsb	r0, r1, #32
   38a54:	lsl	r5, r3, r1
   38a58:	orr	r5, r5, r2, lsl ip
   38a5c:	orr	r5, r5, r2, lsr r0
   38a60:	lsl	r4, r2, r1
   38a64:	and	r2, r6, r4
   38a68:	and	r3, r7, r5
   38a6c:	mov	r1, r2
   38a70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38a74:	mov	r2, r3
   38a78:	asr	r3, r2, #31
   38a7c:	mov	r3, r2
   38a80:	mul	r3, r3, r1
   38a84:	str	r3, [fp, #-96]	; 0xffffffa0
   38a88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38a8c:	mov	r2, r3
   38a90:	asr	r3, r2, #31
   38a94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38a98:	sub	r1, r1, #1
   38a9c:	sub	ip, r1, #32
   38aa0:	rsb	r0, r1, #32
   38aa4:	lsl	lr, r3, r1
   38aa8:	str	lr, [fp, #-184]	; 0xffffff48
   38aac:	ldr	lr, [fp, #-184]	; 0xffffff48
   38ab0:	orr	ip, lr, r2, lsl ip
   38ab4:	str	ip, [fp, #-184]	; 0xffffff48
   38ab8:	ldr	ip, [fp, #-184]	; 0xffffff48
   38abc:	orr	r0, ip, r2, lsr r0
   38ac0:	str	r0, [fp, #-184]	; 0xffffff48
   38ac4:	lsl	r3, r2, r1
   38ac8:	str	r3, [fp, #-188]	; 0xffffff44
   38acc:	ldr	r3, [fp, #-188]	; 0xffffff44
   38ad0:	str	r3, [fp, #-100]	; 0xffffff9c
   38ad4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   38ad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38adc:	add	r2, r2, r3
   38ae0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38ae4:	cmp	r2, r3
   38ae8:	bgt	38b38 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   38aec:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   38af0:	adds	r2, r2, #1
   38af4:	adc	r3, r3, #0
   38af8:	strd	r2, [fp, #-148]	; 0xffffff6c
   38afc:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   38b00:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   38b04:	adds	r2, r2, r2
   38b08:	adc	r3, r3, r3
   38b0c:	and	r2, r2, r0
   38b10:	and	r3, r3, r1
   38b14:	orrs	r3, r2, r3
   38b18:	beq	38b38 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   38b1c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   38b20:	lsrs	r3, r3, #1
   38b24:	rrx	r2, r2
   38b28:	strd	r2, [fp, #-148]	; 0xffffff6c
   38b2c:	ldr	r3, [fp, #-140]	; 0xffffff74
   38b30:	add	r3, r3, #1
   38b34:	str	r3, [fp, #-140]	; 0xffffff74
   38b38:	sub	r3, fp, #148	; 0x94
   38b3c:	ldm	r3, {r0, r1, r2, r3}
   38b40:	bl	38260 <flatcc_verify_union_vector_field@@Base+0x29a8>
   38b44:	vmov.f64	d7, d0
   38b48:	ldr	r3, [fp, #8]
   38b4c:	vstr	d7, [r3]
   38b50:	ldr	r2, [fp, #-100]	; 0xffffff9c
   38b54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38b58:	sub	r2, r2, r3
   38b5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   38b60:	cmp	r2, r3
   38b64:	bge	38b80 <grisu3_diy_fp_encode_double@@Base+0x510>
   38b68:	ldr	r2, [fp, #-100]	; 0xffffff9c
   38b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38b70:	add	r2, r2, r3
   38b74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   38b78:	cmp	r2, r3
   38b7c:	bgt	38b88 <grisu3_diy_fp_encode_double@@Base+0x518>
   38b80:	mov	r3, #1
   38b84:	b	38b8c <grisu3_diy_fp_encode_double@@Base+0x51c>
   38b88:	mov	r3, #0
   38b8c:	mov	r0, r3
   38b90:	sub	sp, fp, #28
   38b94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   38b98:			; <UNDEFINED> instruction: 0xfffffbce
   38b9c:	andeq	r9, r1, ip, ror #19
   38ba0:	andeq	r9, r1, r0, ror #8
   38ba4:	andeq	r9, r1, r0, asr #10
   38ba8:	andeq	fp, r2, r4, ror ip
   38bac:	push	{fp, lr}
   38bb0:	add	fp, sp, #4
   38bb4:	sub	sp, sp, #48	; 0x30
   38bb8:	str	r0, [fp, #-32]	; 0xffffffe0
   38bbc:	str	r1, [fp, #-36]	; 0xffffffdc
   38bc0:	str	r2, [fp, #-40]	; 0xffffffd8
   38bc4:	ldr	r3, [pc, #1556]	; 391e0 <grisu3_diy_fp_encode_double@@Base+0xb70>
   38bc8:	str	r3, [fp, #-16]
   38bcc:	ldr	r3, [pc, #1552]	; 391e4 <grisu3_diy_fp_encode_double@@Base+0xb74>
   38bd0:	str	r3, [fp, #-20]	; 0xffffffec
   38bd4:	ldrd	r2, [fp, #4]
   38bd8:	orrs	r3, r2, r3
   38bdc:	beq	38bf0 <grisu3_diy_fp_encode_double@@Base+0x580>
   38be0:	ldr	r2, [fp, #12]
   38be4:	ldr	r3, [fp, #-20]	; 0xffffffec
   38be8:	cmp	r2, r3
   38bec:	bge	38c04 <grisu3_diy_fp_encode_double@@Base+0x594>
   38bf0:	ldr	r1, [fp, #24]
   38bf4:	mov	r2, #0
   38bf8:	mov	r3, #0
   38bfc:	strd	r2, [r1]
   38c00:	b	391f4 <grisu3_diy_fp_encode_double@@Base+0xb84>
   38c04:	ldr	r3, [fp, #12]
   38c08:	sub	r2, r3, #1
   38c0c:	ldr	r3, [fp, #-16]
   38c10:	cmp	r2, r3
   38c14:	ble	38c34 <grisu3_diy_fp_encode_double@@Base+0x5c4>
   38c18:	mov	r0, #0
   38c1c:	ldr	r1, [pc, #1476]	; 391e8 <grisu3_diy_fp_encode_double@@Base+0xb78>
   38c20:	bl	37c18 <flatcc_verify_union_vector_field@@Base+0x2360>
   38c24:	vmov.f64	d7, d0
   38c28:	ldr	r3, [fp, #24]
   38c2c:	vstr	d7, [r3]
   38c30:	b	391f4 <grisu3_diy_fp_encode_double@@Base+0xb84>
   38c34:	ldrd	r2, [fp, #4]
   38c38:	mvn	r0, #0
   38c3c:	ldr	r1, [pc, #1448]	; 391ec <grisu3_diy_fp_encode_double@@Base+0xb7c>
   38c40:	cmp	r3, r1
   38c44:	cmpeq	r2, r0
   38c48:	bhi	390c8 <grisu3_diy_fp_encode_double@@Base+0xa58>
   38c4c:	ldr	r3, [fp, #12]
   38c50:	cmp	r3, #0
   38c54:	blt	390c8 <grisu3_diy_fp_encode_double@@Base+0xa58>
   38c58:	ldr	r3, [fp, #12]
   38c5c:	cmp	r3, #22
   38c60:	bgt	390c8 <grisu3_diy_fp_encode_double@@Base+0xa58>
   38c64:	ldrd	r0, [fp, #4]
   38c68:	bl	4c258 <flatcc_json_printer_clear@@Base+0x7ec>
   38c6c:	mov	r2, r0
   38c70:	mov	r3, r1
   38c74:	strd	r2, [fp, #-12]
   38c78:	ldr	r2, [fp, #12]
   38c7c:	ldr	r3, [fp, #16]
   38c80:	sub	r3, r2, r3
   38c84:	add	r3, r3, #22
   38c88:	cmp	r3, #44	; 0x2c
   38c8c:	addls	pc, pc, r3, lsl #2
   38c90:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38c94:	b	38d48 <grisu3_diy_fp_encode_double@@Base+0x6d8>
   38c98:	b	38d5c <grisu3_diy_fp_encode_double@@Base+0x6ec>
   38c9c:	b	38d70 <grisu3_diy_fp_encode_double@@Base+0x700>
   38ca0:	b	38d84 <grisu3_diy_fp_encode_double@@Base+0x714>
   38ca4:	b	38d98 <grisu3_diy_fp_encode_double@@Base+0x728>
   38ca8:	b	38dac <grisu3_diy_fp_encode_double@@Base+0x73c>
   38cac:	b	38dc0 <grisu3_diy_fp_encode_double@@Base+0x750>
   38cb0:	b	38dd4 <grisu3_diy_fp_encode_double@@Base+0x764>
   38cb4:	b	38de8 <grisu3_diy_fp_encode_double@@Base+0x778>
   38cb8:	b	38dfc <grisu3_diy_fp_encode_double@@Base+0x78c>
   38cbc:	b	38e10 <grisu3_diy_fp_encode_double@@Base+0x7a0>
   38cc0:	b	38e24 <grisu3_diy_fp_encode_double@@Base+0x7b4>
   38cc4:	b	38e38 <grisu3_diy_fp_encode_double@@Base+0x7c8>
   38cc8:	b	38e4c <grisu3_diy_fp_encode_double@@Base+0x7dc>
   38ccc:	b	38e60 <grisu3_diy_fp_encode_double@@Base+0x7f0>
   38cd0:	b	38e74 <grisu3_diy_fp_encode_double@@Base+0x804>
   38cd4:	b	38e88 <grisu3_diy_fp_encode_double@@Base+0x818>
   38cd8:	b	38e9c <grisu3_diy_fp_encode_double@@Base+0x82c>
   38cdc:	b	38eb0 <grisu3_diy_fp_encode_double@@Base+0x840>
   38ce0:	b	38ec4 <grisu3_diy_fp_encode_double@@Base+0x854>
   38ce4:	b	38ed8 <grisu3_diy_fp_encode_double@@Base+0x868>
   38ce8:	b	38eec <grisu3_diy_fp_encode_double@@Base+0x87c>
   38cec:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38cf0:	b	38f00 <grisu3_diy_fp_encode_double@@Base+0x890>
   38cf4:	b	38f14 <grisu3_diy_fp_encode_double@@Base+0x8a4>
   38cf8:	b	38f28 <grisu3_diy_fp_encode_double@@Base+0x8b8>
   38cfc:	b	38f3c <grisu3_diy_fp_encode_double@@Base+0x8cc>
   38d00:	b	38f50 <grisu3_diy_fp_encode_double@@Base+0x8e0>
   38d04:	b	38f64 <grisu3_diy_fp_encode_double@@Base+0x8f4>
   38d08:	b	38f78 <grisu3_diy_fp_encode_double@@Base+0x908>
   38d0c:	b	38f8c <grisu3_diy_fp_encode_double@@Base+0x91c>
   38d10:	b	38fa0 <grisu3_diy_fp_encode_double@@Base+0x930>
   38d14:	b	38fb4 <grisu3_diy_fp_encode_double@@Base+0x944>
   38d18:	b	38fc8 <grisu3_diy_fp_encode_double@@Base+0x958>
   38d1c:	b	38fdc <grisu3_diy_fp_encode_double@@Base+0x96c>
   38d20:	b	38ff0 <grisu3_diy_fp_encode_double@@Base+0x980>
   38d24:	b	39004 <grisu3_diy_fp_encode_double@@Base+0x994>
   38d28:	b	39018 <grisu3_diy_fp_encode_double@@Base+0x9a8>
   38d2c:	b	3902c <grisu3_diy_fp_encode_double@@Base+0x9bc>
   38d30:	b	39040 <grisu3_diy_fp_encode_double@@Base+0x9d0>
   38d34:	b	39054 <grisu3_diy_fp_encode_double@@Base+0x9e4>
   38d38:	b	39068 <grisu3_diy_fp_encode_double@@Base+0x9f8>
   38d3c:	b	3907c <grisu3_diy_fp_encode_double@@Base+0xa0c>
   38d40:	b	39090 <grisu3_diy_fp_encode_double@@Base+0xa20>
   38d44:	b	390a4 <grisu3_diy_fp_encode_double@@Base+0xa34>
   38d48:	vldr	d6, [fp, #-12]
   38d4c:	vldr	d5, [pc, #988]	; 39130 <grisu3_diy_fp_encode_double@@Base+0xac0>
   38d50:	vdiv.f64	d7, d6, d5
   38d54:	vstr	d7, [fp, #-12]
   38d58:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38d5c:	vldr	d6, [fp, #-12]
   38d60:	vldr	d5, [pc, #976]	; 39138 <grisu3_diy_fp_encode_double@@Base+0xac8>
   38d64:	vdiv.f64	d7, d6, d5
   38d68:	vstr	d7, [fp, #-12]
   38d6c:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38d70:	vldr	d6, [fp, #-12]
   38d74:	vldr	d5, [pc, #964]	; 39140 <grisu3_diy_fp_encode_double@@Base+0xad0>
   38d78:	vdiv.f64	d7, d6, d5
   38d7c:	vstr	d7, [fp, #-12]
   38d80:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38d84:	vldr	d6, [fp, #-12]
   38d88:	vldr	d5, [pc, #952]	; 39148 <grisu3_diy_fp_encode_double@@Base+0xad8>
   38d8c:	vdiv.f64	d7, d6, d5
   38d90:	vstr	d7, [fp, #-12]
   38d94:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38d98:	vldr	d6, [fp, #-12]
   38d9c:	vldr	d5, [pc, #940]	; 39150 <grisu3_diy_fp_encode_double@@Base+0xae0>
   38da0:	vdiv.f64	d7, d6, d5
   38da4:	vstr	d7, [fp, #-12]
   38da8:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38dac:	vldr	d6, [fp, #-12]
   38db0:	vldr	d5, [pc, #928]	; 39158 <grisu3_diy_fp_encode_double@@Base+0xae8>
   38db4:	vdiv.f64	d7, d6, d5
   38db8:	vstr	d7, [fp, #-12]
   38dbc:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38dc0:	vldr	d6, [fp, #-12]
   38dc4:	vldr	d5, [pc, #916]	; 39160 <grisu3_diy_fp_encode_double@@Base+0xaf0>
   38dc8:	vdiv.f64	d7, d6, d5
   38dcc:	vstr	d7, [fp, #-12]
   38dd0:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38dd4:	vldr	d6, [fp, #-12]
   38dd8:	vldr	d5, [pc, #904]	; 39168 <grisu3_diy_fp_encode_double@@Base+0xaf8>
   38ddc:	vdiv.f64	d7, d6, d5
   38de0:	vstr	d7, [fp, #-12]
   38de4:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38de8:	vldr	d6, [fp, #-12]
   38dec:	vldr	d5, [pc, #892]	; 39170 <grisu3_diy_fp_encode_double@@Base+0xb00>
   38df0:	vdiv.f64	d7, d6, d5
   38df4:	vstr	d7, [fp, #-12]
   38df8:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38dfc:	vldr	d6, [fp, #-12]
   38e00:	vldr	d5, [pc, #880]	; 39178 <grisu3_diy_fp_encode_double@@Base+0xb08>
   38e04:	vdiv.f64	d7, d6, d5
   38e08:	vstr	d7, [fp, #-12]
   38e0c:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38e10:	vldr	d6, [fp, #-12]
   38e14:	vldr	d5, [pc, #868]	; 39180 <grisu3_diy_fp_encode_double@@Base+0xb10>
   38e18:	vdiv.f64	d7, d6, d5
   38e1c:	vstr	d7, [fp, #-12]
   38e20:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38e24:	vldr	d6, [fp, #-12]
   38e28:	vldr	d5, [pc, #856]	; 39188 <grisu3_diy_fp_encode_double@@Base+0xb18>
   38e2c:	vdiv.f64	d7, d6, d5
   38e30:	vstr	d7, [fp, #-12]
   38e34:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38e38:	vldr	d6, [fp, #-12]
   38e3c:	vldr	d5, [pc, #844]	; 39190 <grisu3_diy_fp_encode_double@@Base+0xb20>
   38e40:	vdiv.f64	d7, d6, d5
   38e44:	vstr	d7, [fp, #-12]
   38e48:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38e4c:	vldr	d6, [fp, #-12]
   38e50:	vldr	d5, [pc, #832]	; 39198 <grisu3_diy_fp_encode_double@@Base+0xb28>
   38e54:	vdiv.f64	d7, d6, d5
   38e58:	vstr	d7, [fp, #-12]
   38e5c:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38e60:	vldr	d6, [fp, #-12]
   38e64:	vldr	d5, [pc, #820]	; 391a0 <grisu3_diy_fp_encode_double@@Base+0xb30>
   38e68:	vdiv.f64	d7, d6, d5
   38e6c:	vstr	d7, [fp, #-12]
   38e70:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38e74:	vldr	d6, [fp, #-12]
   38e78:	vldr	d5, [pc, #808]	; 391a8 <grisu3_diy_fp_encode_double@@Base+0xb38>
   38e7c:	vdiv.f64	d7, d6, d5
   38e80:	vstr	d7, [fp, #-12]
   38e84:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38e88:	vldr	d6, [fp, #-12]
   38e8c:	vldr	d5, [pc, #796]	; 391b0 <grisu3_diy_fp_encode_double@@Base+0xb40>
   38e90:	vdiv.f64	d7, d6, d5
   38e94:	vstr	d7, [fp, #-12]
   38e98:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38e9c:	vldr	d6, [fp, #-12]
   38ea0:	vldr	d5, [pc, #784]	; 391b8 <grisu3_diy_fp_encode_double@@Base+0xb48>
   38ea4:	vdiv.f64	d7, d6, d5
   38ea8:	vstr	d7, [fp, #-12]
   38eac:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38eb0:	vldr	d6, [fp, #-12]
   38eb4:	vldr	d5, [pc, #772]	; 391c0 <grisu3_diy_fp_encode_double@@Base+0xb50>
   38eb8:	vdiv.f64	d7, d6, d5
   38ebc:	vstr	d7, [fp, #-12]
   38ec0:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38ec4:	vldr	d6, [fp, #-12]
   38ec8:	vldr	d5, [pc, #760]	; 391c8 <grisu3_diy_fp_encode_double@@Base+0xb58>
   38ecc:	vdiv.f64	d7, d6, d5
   38ed0:	vstr	d7, [fp, #-12]
   38ed4:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38ed8:	vldr	d6, [fp, #-12]
   38edc:	vldr	d5, [pc, #748]	; 391d0 <grisu3_diy_fp_encode_double@@Base+0xb60>
   38ee0:	vdiv.f64	d7, d6, d5
   38ee4:	vstr	d7, [fp, #-12]
   38ee8:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38eec:	vldr	d6, [fp, #-12]
   38ef0:	vldr	d5, [pc, #736]	; 391d8 <grisu3_diy_fp_encode_double@@Base+0xb68>
   38ef4:	vdiv.f64	d7, d6, d5
   38ef8:	vstr	d7, [fp, #-12]
   38efc:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38f00:	vldr	d7, [fp, #-12]
   38f04:	vldr	d6, [pc, #716]	; 391d8 <grisu3_diy_fp_encode_double@@Base+0xb68>
   38f08:	vmul.f64	d7, d7, d6
   38f0c:	vstr	d7, [fp, #-12]
   38f10:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38f14:	vldr	d7, [fp, #-12]
   38f18:	vldr	d6, [pc, #688]	; 391d0 <grisu3_diy_fp_encode_double@@Base+0xb60>
   38f1c:	vmul.f64	d7, d7, d6
   38f20:	vstr	d7, [fp, #-12]
   38f24:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38f28:	vldr	d7, [fp, #-12]
   38f2c:	vldr	d6, [pc, #660]	; 391c8 <grisu3_diy_fp_encode_double@@Base+0xb58>
   38f30:	vmul.f64	d7, d7, d6
   38f34:	vstr	d7, [fp, #-12]
   38f38:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38f3c:	vldr	d7, [fp, #-12]
   38f40:	vldr	d6, [pc, #632]	; 391c0 <grisu3_diy_fp_encode_double@@Base+0xb50>
   38f44:	vmul.f64	d7, d7, d6
   38f48:	vstr	d7, [fp, #-12]
   38f4c:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38f50:	vldr	d7, [fp, #-12]
   38f54:	vldr	d6, [pc, #604]	; 391b8 <grisu3_diy_fp_encode_double@@Base+0xb48>
   38f58:	vmul.f64	d7, d7, d6
   38f5c:	vstr	d7, [fp, #-12]
   38f60:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38f64:	vldr	d7, [fp, #-12]
   38f68:	vldr	d6, [pc, #576]	; 391b0 <grisu3_diy_fp_encode_double@@Base+0xb40>
   38f6c:	vmul.f64	d7, d7, d6
   38f70:	vstr	d7, [fp, #-12]
   38f74:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38f78:	vldr	d7, [fp, #-12]
   38f7c:	vldr	d6, [pc, #548]	; 391a8 <grisu3_diy_fp_encode_double@@Base+0xb38>
   38f80:	vmul.f64	d7, d7, d6
   38f84:	vstr	d7, [fp, #-12]
   38f88:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38f8c:	vldr	d7, [fp, #-12]
   38f90:	vldr	d6, [pc, #520]	; 391a0 <grisu3_diy_fp_encode_double@@Base+0xb30>
   38f94:	vmul.f64	d7, d7, d6
   38f98:	vstr	d7, [fp, #-12]
   38f9c:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38fa0:	vldr	d7, [fp, #-12]
   38fa4:	vldr	d6, [pc, #492]	; 39198 <grisu3_diy_fp_encode_double@@Base+0xb28>
   38fa8:	vmul.f64	d7, d7, d6
   38fac:	vstr	d7, [fp, #-12]
   38fb0:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38fb4:	vldr	d7, [fp, #-12]
   38fb8:	vldr	d6, [pc, #464]	; 39190 <grisu3_diy_fp_encode_double@@Base+0xb20>
   38fbc:	vmul.f64	d7, d7, d6
   38fc0:	vstr	d7, [fp, #-12]
   38fc4:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38fc8:	vldr	d7, [fp, #-12]
   38fcc:	vldr	d6, [pc, #436]	; 39188 <grisu3_diy_fp_encode_double@@Base+0xb18>
   38fd0:	vmul.f64	d7, d7, d6
   38fd4:	vstr	d7, [fp, #-12]
   38fd8:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38fdc:	vldr	d7, [fp, #-12]
   38fe0:	vldr	d6, [pc, #408]	; 39180 <grisu3_diy_fp_encode_double@@Base+0xb10>
   38fe4:	vmul.f64	d7, d7, d6
   38fe8:	vstr	d7, [fp, #-12]
   38fec:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38ff0:	vldr	d7, [fp, #-12]
   38ff4:	vldr	d6, [pc, #380]	; 39178 <grisu3_diy_fp_encode_double@@Base+0xb08>
   38ff8:	vmul.f64	d7, d7, d6
   38ffc:	vstr	d7, [fp, #-12]
   39000:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   39004:	vldr	d7, [fp, #-12]
   39008:	vldr	d6, [pc, #352]	; 39170 <grisu3_diy_fp_encode_double@@Base+0xb00>
   3900c:	vmul.f64	d7, d7, d6
   39010:	vstr	d7, [fp, #-12]
   39014:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   39018:	vldr	d7, [fp, #-12]
   3901c:	vldr	d6, [pc, #324]	; 39168 <grisu3_diy_fp_encode_double@@Base+0xaf8>
   39020:	vmul.f64	d7, d7, d6
   39024:	vstr	d7, [fp, #-12]
   39028:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   3902c:	vldr	d7, [fp, #-12]
   39030:	vldr	d6, [pc, #296]	; 39160 <grisu3_diy_fp_encode_double@@Base+0xaf0>
   39034:	vmul.f64	d7, d7, d6
   39038:	vstr	d7, [fp, #-12]
   3903c:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   39040:	vldr	d7, [fp, #-12]
   39044:	vldr	d6, [pc, #268]	; 39158 <grisu3_diy_fp_encode_double@@Base+0xae8>
   39048:	vmul.f64	d7, d7, d6
   3904c:	vstr	d7, [fp, #-12]
   39050:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   39054:	vldr	d7, [fp, #-12]
   39058:	vldr	d6, [pc, #240]	; 39150 <grisu3_diy_fp_encode_double@@Base+0xae0>
   3905c:	vmul.f64	d7, d7, d6
   39060:	vstr	d7, [fp, #-12]
   39064:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   39068:	vldr	d7, [fp, #-12]
   3906c:	vldr	d6, [pc, #212]	; 39148 <grisu3_diy_fp_encode_double@@Base+0xad8>
   39070:	vmul.f64	d7, d7, d6
   39074:	vstr	d7, [fp, #-12]
   39078:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   3907c:	vldr	d7, [fp, #-12]
   39080:	vldr	d6, [pc, #184]	; 39140 <grisu3_diy_fp_encode_double@@Base+0xad0>
   39084:	vmul.f64	d7, d7, d6
   39088:	vstr	d7, [fp, #-12]
   3908c:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   39090:	vldr	d7, [fp, #-12]
   39094:	vldr	d6, [pc, #156]	; 39138 <grisu3_diy_fp_encode_double@@Base+0xac8>
   39098:	vmul.f64	d7, d7, d6
   3909c:	vstr	d7, [fp, #-12]
   390a0:	b	390b8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   390a4:	vldr	d7, [fp, #-12]
   390a8:	vldr	d6, [pc, #128]	; 39130 <grisu3_diy_fp_encode_double@@Base+0xac0>
   390ac:	vmul.f64	d7, d7, d6
   390b0:	vstr	d7, [fp, #-12]
   390b4:	nop			; (mov r0, r0)
   390b8:	ldr	r1, [fp, #24]
   390bc:	ldrd	r2, [fp, #-12]
   390c0:	strd	r2, [r1]
   390c4:	b	391f4 <grisu3_diy_fp_encode_double@@Base+0xb84>
   390c8:	ldr	r3, [fp, #24]
   390cc:	str	r3, [sp, #4]
   390d0:	ldr	r3, [fp, #20]
   390d4:	str	r3, [sp]
   390d8:	ldr	r3, [fp, #16]
   390dc:	ldr	r2, [fp, #12]
   390e0:	ldrd	r0, [fp, #4]
   390e4:	bl	38670 <grisu3_diy_fp_encode_double@@Base>
   390e8:	mov	r3, r0
   390ec:	cmp	r3, #0
   390f0:	bne	391f0 <grisu3_diy_fp_encode_double@@Base+0xb80>
   390f4:	sub	r3, fp, #24
   390f8:	mov	r1, r3
   390fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39100:	bl	145d4 <strtod@plt>
   39104:	vmov.f64	d7, d0
   39108:	ldr	r3, [fp, #24]
   3910c:	vstr	d7, [r3]
   39110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39114:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39118:	cmp	r2, r3
   3911c:	bcs	39128 <grisu3_diy_fp_encode_double@@Base+0xab8>
   39120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39124:	b	39218 <grisu3_diy_fp_encode_double@@Base+0xba8>
   39128:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3912c:	b	39218 <grisu3_diy_fp_encode_double@@Base+0xba8>
   39130:			; <UNDEFINED> instruction: 0x064dd592
   39134:	strmi	pc, [r0], #207	; 0xcf
   39138:	usatle	lr, #2, r0, asr #30
   3913c:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   39140:	ldmvc	r5!, {r6, sl, fp, pc}
   39144:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   39148:	addsvs	r3, r1, r0, lsl #26
   3914c:	mvnmi	r5, #228, 16	; 0xe40000
   39150:	strbvs	ip, [lr, -r0, lsl #16]
   39154:			; <UNDEFINED> instruction: 0x43abc16d
   39158:	ldrbhi	sl, [r8]
   3915c:	cmnmi	r6, #1459617792	; 0x57000000
   39160:	strbcc	r8, [r0, r0]!
   39164:	movtmi	ip, #4985	; 0x1379
   39168:	ldrtcs	r0, [r4], -r0
   3916c:	movwmi	r6, #52213	; 0xcbf5
   39170:	cdpne	0, 9, cr0, cr0, cr0, {0}
   39174:	sbcsmi	fp, r6, #196, 24	; 0xc400
   39178:	strb	r0, [r0, #-0]
   3917c:	adcmi	r3, r2, #156	; 0x9c
   39180:	andge	r0, r0, #0
   39184:	rsbmi	r1, sp, #148, 20	; 0x94000
   39188:	stmda	r0, {}	; <UNPREDICTABLE>
   3918c:	eorsmi	r4, r7, #7733248	; 0x760000
   39190:	andcs	r0, r0, r0
   39194:	andmi	sl, r2, #95	; 0x5f
   39198:	andeq	r0, r0, r0
   3919c:	bicmi	ip, sp, r5, ror #26
   391a0:	andeq	r0, r0, r0
   391a4:	orrsmi	sp, r7, r4, lsl #15
   391a8:	andeq	r0, r0, r0
   391ac:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   391b0:	andeq	r0, r0, r0
   391b4:	smlawbmi	lr, r0, r4, r8
   391b8:	andeq	r0, r0, r0
   391bc:	rscsmi	r6, r8, r0, lsl #20
   391c0:	andeq	r0, r0, r0
   391c4:	sbcmi	r8, r3, r0, lsl #16
   391c8:	andeq	r0, r0, r0
   391cc:	addmi	r4, pc, r0
   391d0:	andeq	r0, r0, r0
   391d4:	subsmi	r0, r9, r0
   391d8:	andeq	r0, r0, r0
   391dc:	eormi	r0, r4, r0
   391e0:	andeq	r0, r0, r5, lsr r1
   391e4:			; <UNDEFINED> instruction: 0xfffffebc
   391e8:	svcvc	0x00f00000	; IMB
   391ec:			; <UNDEFINED> instruction: 0x001fffff
   391f0:	nop			; (mov r0, r0)
   391f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   391f8:	cmp	r3, #0
   391fc:	beq	39214 <grisu3_diy_fp_encode_double@@Base+0xba4>
   39200:	ldr	r3, [fp, #24]
   39204:	vldr	d7, [r3]
   39208:	vneg.f64	d7, d7
   3920c:	ldr	r3, [fp, #24]
   39210:	vstr	d7, [r3]
   39214:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39218:	mov	r0, r3
   3921c:	sub	sp, fp, #4
   39220:	pop	{fp, pc}
   39224:	push	{fp}		; (str fp, [sp, #-4]!)
   39228:	add	fp, sp, #0
   3922c:	sub	sp, sp, #20
   39230:	str	r0, [fp, #-8]
   39234:	str	r1, [fp, #-12]
   39238:	str	r2, [fp, #-16]
   3923c:	str	r3, [fp, #-20]	; 0xffffffec
   39240:	ldr	r1, [fp, #-20]	; 0xffffffec
   39244:	mov	r2, #0
   39248:	mov	r3, #0
   3924c:	strd	r2, [r1]
   39250:	ldr	r3, [fp, #-8]
   39254:	mov	r0, r3
   39258:	add	sp, fp, #0
   3925c:	pop	{fp}		; (ldr fp, [sp], #4)
   39260:	bx	lr
   39264:	push	{fp, lr}
   39268:	add	fp, sp, #4
   3926c:	sub	sp, sp, #88	; 0x58
   39270:	str	r0, [fp, #-56]	; 0xffffffc8
   39274:	str	r1, [fp, #-60]	; 0xffffffc4
   39278:	str	r2, [fp, #-64]	; 0xffffffc0
   3927c:	mov	r3, #0
   39280:	str	r3, [fp, #-12]
   39284:	mov	r3, #0
   39288:	str	r3, [fp, #-16]
   3928c:	mov	r2, #0
   39290:	mov	r3, #0
   39294:	strd	r2, [fp, #-28]	; 0xffffffe4
   39298:	mov	r3, #0
   3929c:	str	r3, [fp, #-32]	; 0xffffffe0
   392a0:	mov	r3, #0
   392a4:	str	r3, [fp, #-36]	; 0xffffffdc
   392a8:	mov	r3, #0
   392ac:	str	r3, [fp, #-40]	; 0xffffffd8
   392b0:	mov	r3, #0
   392b4:	str	r3, [fp, #-44]	; 0xffffffd4
   392b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   392bc:	mov	r2, #0
   392c0:	mov	r3, #0
   392c4:	strd	r2, [r1]
   392c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   392cc:	add	r3, r3, #1
   392d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   392d4:	add	r3, r2, r3
   392d8:	str	r3, [fp, #-8]
   392dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   392e0:	cmp	r3, #1000	; 0x3e8
   392e4:	ble	392f8 <grisu3_diy_fp_encode_double@@Base+0xc88>
   392e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   392ec:	add	r3, r3, #1000	; 0x3e8
   392f0:	add	r3, r3, #1
   392f4:	str	r3, [fp, #-8]
   392f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   392fc:	ldr	r3, [fp, #-8]
   39300:	cmp	r2, r3
   39304:	bne	39310 <grisu3_diy_fp_encode_double@@Base+0xca0>
   39308:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3930c:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   39310:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39314:	str	r3, [fp, #-48]	; 0xffffffd0
   39318:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3931c:	ldrb	r3, [r3]
   39320:	cmp	r3, #45	; 0x2d
   39324:	bne	39354 <grisu3_diy_fp_encode_double@@Base+0xce4>
   39328:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3932c:	add	r3, r3, #1
   39330:	str	r3, [fp, #-56]	; 0xffffffc8
   39334:	mov	r3, #1
   39338:	str	r3, [fp, #-12]
   3933c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39340:	ldr	r3, [fp, #-8]
   39344:	cmp	r2, r3
   39348:	bne	39354 <grisu3_diy_fp_encode_double@@Base+0xce4>
   3934c:	mov	r3, #0
   39350:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   39354:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39358:	ldrb	r3, [r3]
   3935c:	cmp	r3, #48	; 0x30
   39360:	bne	39400 <grisu3_diy_fp_encode_double@@Base+0xd90>
   39364:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39368:	add	r3, r3, #1
   3936c:	str	r3, [fp, #-56]	; 0xffffffc8
   39370:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39374:	ldr	r3, [fp, #-8]
   39378:	cmp	r2, r3
   3937c:	beq	393dc <grisu3_diy_fp_encode_double@@Base+0xd6c>
   39380:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39384:	ldrb	r3, [r3]
   39388:	orr	r3, r3, #32
   3938c:	uxtb	r3, r3
   39390:	cmp	r3, #120	; 0x78
   39394:	bne	393dc <grisu3_diy_fp_encode_double@@Base+0xd6c>
   39398:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3939c:	ldr	r2, [fp, #-12]
   393a0:	ldr	r1, [fp, #-8]
   393a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   393a8:	bl	39224 <grisu3_diy_fp_encode_double@@Base+0xbb4>
   393ac:	str	r0, [fp, #-52]	; 0xffffffcc
   393b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   393b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   393b8:	cmp	r2, r3
   393bc:	bne	393c8 <grisu3_diy_fp_encode_double@@Base+0xd58>
   393c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   393c4:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   393c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   393cc:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   393d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   393d4:	add	r3, r3, #1
   393d8:	str	r3, [fp, #-56]	; 0xffffffc8
   393dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   393e0:	ldr	r3, [fp, #-8]
   393e4:	cmp	r2, r3
   393e8:	beq	3945c <grisu3_diy_fp_encode_double@@Base+0xdec>
   393ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   393f0:	ldrb	r3, [r3]
   393f4:	cmp	r3, #48	; 0x30
   393f8:	beq	393d0 <grisu3_diy_fp_encode_double@@Base+0xd60>
   393fc:	b	3945c <grisu3_diy_fp_encode_double@@Base+0xdec>
   39400:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39404:	ldrb	r3, [r3]
   39408:	cmp	r3, #48	; 0x30
   3940c:	bls	39420 <grisu3_diy_fp_encode_double@@Base+0xdb0>
   39410:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39414:	ldrb	r3, [r3]
   39418:	cmp	r3, #57	; 0x39
   3941c:	bls	3943c <grisu3_diy_fp_encode_double@@Base+0xdcc>
   39420:	ldr	r3, [fp, #-12]
   39424:	cmp	r3, #0
   39428:	bne	39434 <grisu3_diy_fp_encode_double@@Base+0xdc4>
   3942c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39430:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   39434:	mov	r3, #0
   39438:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   3943c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39440:	add	r2, r3, #1
   39444:	str	r2, [fp, #-56]	; 0xffffffc8
   39448:	ldrb	r3, [r3]
   3944c:	sub	r3, r3, #48	; 0x30
   39450:	mov	r2, r3
   39454:	asr	r3, r2, #31
   39458:	strd	r2, [fp, #-28]	; 0xffffffe4
   3945c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39460:	str	r3, [fp, #-52]	; 0xffffffcc
   39464:	b	39518 <grisu3_diy_fp_encode_double@@Base+0xea8>
   39468:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3946c:	add	r1, pc, #948	; 0x3b4
   39470:	ldrd	r0, [r1]
   39474:	cmp	r3, r1
   39478:	cmpeq	r2, r0
   3947c:	bls	394bc <grisu3_diy_fp_encode_double@@Base+0xe4c>
   39480:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39484:	ldrb	r3, [r3]
   39488:	cmp	r3, #52	; 0x34
   3948c:	movhi	r3, #1
   39490:	movls	r3, #0
   39494:	uxtb	r3, r3
   39498:	uxtb	r2, r3
   3949c:	mov	r3, #0
   394a0:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   394a4:	adds	r2, r2, r0
   394a8:	adc	r3, r3, r1
   394ac:	strd	r2, [fp, #-28]	; 0xffffffe4
   394b0:	mov	r3, #1
   394b4:	str	r3, [fp, #-44]	; 0xffffffd4
   394b8:	b	39548 <grisu3_diy_fp_encode_double@@Base+0xed8>
   394bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   394c0:	mov	r2, #10
   394c4:	mul	r2, r2, r3
   394c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   394cc:	mov	r1, #0
   394d0:	mul	r3, r1, r3
   394d4:	add	r1, r2, r3
   394d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   394dc:	mov	r2, #10
   394e0:	umull	r2, r3, r3, r2
   394e4:	add	r1, r1, r3
   394e8:	mov	r3, r1
   394ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   394f0:	add	r0, r1, #1
   394f4:	str	r0, [fp, #-56]	; 0xffffffc8
   394f8:	ldrb	r1, [r1]
   394fc:	uxtb	r0, r1
   39500:	mov	r1, #0
   39504:	adds	r2, r2, r0
   39508:	adc	r3, r3, r1
   3950c:	subs	r2, r2, #48	; 0x30
   39510:	sbc	r3, r3, #0
   39514:	strd	r2, [fp, #-28]	; 0xffffffe4
   39518:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3951c:	ldr	r3, [fp, #-8]
   39520:	cmp	r2, r3
   39524:	beq	39548 <grisu3_diy_fp_encode_double@@Base+0xed8>
   39528:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3952c:	ldrb	r3, [r3]
   39530:	cmp	r3, #47	; 0x2f
   39534:	bls	39548 <grisu3_diy_fp_encode_double@@Base+0xed8>
   39538:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3953c:	ldrb	r3, [r3]
   39540:	cmp	r3, #57	; 0x39
   39544:	bls	39468 <grisu3_diy_fp_encode_double@@Base+0xdf8>
   39548:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3954c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39550:	sub	r3, r2, r3
   39554:	str	r3, [fp, #-40]	; 0xffffffd8
   39558:	b	39574 <grisu3_diy_fp_encode_double@@Base+0xf04>
   3955c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39560:	add	r3, r3, #1
   39564:	str	r3, [fp, #-32]	; 0xffffffe0
   39568:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3956c:	add	r3, r3, #1
   39570:	str	r3, [fp, #-56]	; 0xffffffc8
   39574:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39578:	ldr	r3, [fp, #-8]
   3957c:	cmp	r2, r3
   39580:	beq	39594 <grisu3_diy_fp_encode_double@@Base+0xf24>
   39584:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39588:	ldrb	r3, [r3]
   3958c:	cmp	r3, #48	; 0x30
   39590:	beq	3955c <grisu3_diy_fp_encode_double@@Base+0xeec>
   39594:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39598:	ldr	r3, [fp, #-8]
   3959c:	cmp	r2, r3
   395a0:	beq	39630 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   395a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   395a8:	ldrb	r3, [r3]
   395ac:	cmp	r3, #48	; 0x30
   395b0:	bls	39630 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   395b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   395b8:	ldrb	r3, [r3]
   395bc:	cmp	r3, #57	; 0x39
   395c0:	bhi	39630 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   395c4:	mov	r3, #1
   395c8:	str	r3, [fp, #-44]	; 0xffffffd4
   395cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   395d0:	add	r3, r3, #1
   395d4:	str	r3, [fp, #-32]	; 0xffffffe0
   395d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   395dc:	add	r3, r3, #1
   395e0:	str	r3, [fp, #-56]	; 0xffffffc8
   395e4:	b	39600 <grisu3_diy_fp_encode_double@@Base+0xf90>
   395e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   395ec:	add	r3, r3, #1
   395f0:	str	r3, [fp, #-32]	; 0xffffffe0
   395f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   395f8:	add	r3, r3, #1
   395fc:	str	r3, [fp, #-56]	; 0xffffffc8
   39600:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39604:	ldr	r3, [fp, #-8]
   39608:	cmp	r2, r3
   3960c:	beq	39630 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   39610:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39614:	ldrb	r3, [r3]
   39618:	cmp	r3, #47	; 0x2f
   3961c:	bls	39630 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   39620:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39624:	ldrb	r3, [r3]
   39628:	cmp	r3, #57	; 0x39
   3962c:	bls	395e8 <grisu3_diy_fp_encode_double@@Base+0xf78>
   39630:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39634:	ldr	r3, [fp, #-8]
   39638:	cmp	r2, r3
   3963c:	beq	3986c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   39640:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39644:	ldrb	r3, [r3]
   39648:	cmp	r3, #46	; 0x2e
   3964c:	bne	3986c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   39650:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39654:	add	r3, r3, #1
   39658:	str	r3, [fp, #-56]	; 0xffffffc8
   3965c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39660:	str	r3, [fp, #-52]	; 0xffffffcc
   39664:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39668:	ldrb	r3, [r3]
   3966c:	cmp	r3, #47	; 0x2f
   39670:	bls	39684 <grisu3_diy_fp_encode_double@@Base+0x1014>
   39674:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39678:	ldrb	r3, [r3]
   3967c:	cmp	r3, #57	; 0x39
   39680:	bls	39754 <grisu3_diy_fp_encode_double@@Base+0x10e4>
   39684:	mov	r3, #0
   39688:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   3968c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   39690:	add	r1, pc, #400	; 0x190
   39694:	ldrd	r0, [r1]
   39698:	cmp	r3, r1
   3969c:	cmpeq	r2, r0
   396a0:	bls	396ec <grisu3_diy_fp_encode_double@@Base+0x107c>
   396a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   396a8:	cmp	r3, #0
   396ac:	bne	39788 <grisu3_diy_fp_encode_double@@Base+0x1118>
   396b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   396b4:	ldrb	r3, [r3]
   396b8:	cmp	r3, #52	; 0x34
   396bc:	movhi	r3, #1
   396c0:	movls	r3, #0
   396c4:	uxtb	r3, r3
   396c8:	uxtb	r2, r3
   396cc:	mov	r3, #0
   396d0:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   396d4:	adds	r2, r2, r0
   396d8:	adc	r3, r3, r1
   396dc:	strd	r2, [fp, #-28]	; 0xffffffe4
   396e0:	mov	r3, #1
   396e4:	str	r3, [fp, #-44]	; 0xffffffd4
   396e8:	b	39788 <grisu3_diy_fp_encode_double@@Base+0x1118>
   396ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   396f0:	mov	r2, #10
   396f4:	mul	r2, r2, r3
   396f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   396fc:	mov	r1, #0
   39700:	mul	r3, r1, r3
   39704:	add	r1, r2, r3
   39708:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3970c:	mov	r2, #10
   39710:	umull	r2, r3, r3, r2
   39714:	add	r1, r1, r3
   39718:	mov	r3, r1
   3971c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   39720:	add	r0, r1, #1
   39724:	str	r0, [fp, #-56]	; 0xffffffc8
   39728:	ldrb	r1, [r1]
   3972c:	uxtb	r0, r1
   39730:	mov	r1, #0
   39734:	adds	r2, r2, r0
   39738:	adc	r3, r3, r1
   3973c:	subs	r2, r2, #48	; 0x30
   39740:	sbc	r3, r3, #0
   39744:	strd	r2, [fp, #-28]	; 0xffffffe4
   39748:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3974c:	sub	r3, r3, #1
   39750:	str	r3, [fp, #-32]	; 0xffffffe0
   39754:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39758:	ldr	r3, [fp, #-8]
   3975c:	cmp	r2, r3
   39760:	beq	3978c <grisu3_diy_fp_encode_double@@Base+0x111c>
   39764:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39768:	ldrb	r3, [r3]
   3976c:	cmp	r3, #47	; 0x2f
   39770:	bls	3978c <grisu3_diy_fp_encode_double@@Base+0x111c>
   39774:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39778:	ldrb	r3, [r3]
   3977c:	cmp	r3, #57	; 0x39
   39780:	bls	3968c <grisu3_diy_fp_encode_double@@Base+0x101c>
   39784:	b	3978c <grisu3_diy_fp_encode_double@@Base+0x111c>
   39788:	nop			; (mov r0, r0)
   3978c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39790:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39794:	sub	r3, r2, r3
   39798:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3979c:	add	r3, r2, r3
   397a0:	str	r3, [fp, #-40]	; 0xffffffd8
   397a4:	b	397c0 <grisu3_diy_fp_encode_double@@Base+0x1150>
   397a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   397ac:	add	r3, r3, #1
   397b0:	str	r3, [fp, #-32]	; 0xffffffe0
   397b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   397b8:	add	r3, r3, #1
   397bc:	str	r3, [fp, #-56]	; 0xffffffc8
   397c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   397c4:	ldr	r3, [fp, #-8]
   397c8:	cmp	r2, r3
   397cc:	beq	397e0 <grisu3_diy_fp_encode_double@@Base+0x1170>
   397d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   397d4:	ldrb	r3, [r3]
   397d8:	cmp	r3, #48	; 0x30
   397dc:	beq	397a8 <grisu3_diy_fp_encode_double@@Base+0x1138>
   397e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   397e4:	ldr	r3, [fp, #-8]
   397e8:	cmp	r2, r3
   397ec:	beq	3986c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   397f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   397f4:	ldrb	r3, [r3]
   397f8:	cmp	r3, #48	; 0x30
   397fc:	bls	3986c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   39800:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39804:	ldrb	r3, [r3]
   39808:	cmp	r3, #57	; 0x39
   3980c:	bhi	3986c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   39810:	mov	r3, #1
   39814:	str	r3, [fp, #-44]	; 0xffffffd4
   39818:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3981c:	add	r3, r3, #1
   39820:	str	r3, [fp, #-56]	; 0xffffffc8
   39824:	b	3983c <grisu3_diy_fp_encode_double@@Base+0x11cc>
   39828:	ldmibls	r9, {r3, r4, r7, r8, fp, ip, pc}
   3982c:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   39830:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39834:	add	r3, r3, #1
   39838:	str	r3, [fp, #-56]	; 0xffffffc8
   3983c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39840:	ldr	r3, [fp, #-8]
   39844:	cmp	r2, r3
   39848:	beq	3986c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   3984c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39850:	ldrb	r3, [r3]
   39854:	cmp	r3, #47	; 0x2f
   39858:	bls	3986c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   3985c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39860:	ldrb	r3, [r3]
   39864:	cmp	r3, #57	; 0x39
   39868:	bls	39830 <grisu3_diy_fp_encode_double@@Base+0x11c0>
   3986c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   39870:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39874:	add	r3, r2, r3
   39878:	str	r3, [fp, #-32]	; 0xffffffe0
   3987c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39880:	ldr	r3, [fp, #-8]
   39884:	cmp	r2, r3
   39888:	beq	399f4 <grisu3_diy_fp_encode_double@@Base+0x1384>
   3988c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39890:	ldrb	r3, [r3]
   39894:	orr	r3, r3, #32
   39898:	uxtb	r3, r3
   3989c:	cmp	r3, #101	; 0x65
   398a0:	bne	399f4 <grisu3_diy_fp_encode_double@@Base+0x1384>
   398a4:	ldr	r2, [fp, #-8]
   398a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   398ac:	sub	r3, r2, r3
   398b0:	cmp	r3, #1
   398b4:	bgt	398c0 <grisu3_diy_fp_encode_double@@Base+0x1250>
   398b8:	mov	r3, #0
   398bc:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   398c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   398c4:	add	r3, r3, #1
   398c8:	str	r3, [fp, #-56]	; 0xffffffc8
   398cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   398d0:	ldrb	r3, [r3]
   398d4:	cmp	r3, #43	; 0x2b
   398d8:	bne	39900 <grisu3_diy_fp_encode_double@@Base+0x1290>
   398dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   398e0:	add	r3, r3, #1
   398e4:	str	r3, [fp, #-56]	; 0xffffffc8
   398e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   398ec:	ldr	r3, [fp, #-8]
   398f0:	cmp	r2, r3
   398f4:	bne	3993c <grisu3_diy_fp_encode_double@@Base+0x12cc>
   398f8:	mov	r3, #0
   398fc:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   39900:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39904:	ldrb	r3, [r3]
   39908:	cmp	r3, #45	; 0x2d
   3990c:	bne	3993c <grisu3_diy_fp_encode_double@@Base+0x12cc>
   39910:	mov	r3, #1
   39914:	str	r3, [fp, #-16]
   39918:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3991c:	add	r3, r3, #1
   39920:	str	r3, [fp, #-56]	; 0xffffffc8
   39924:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39928:	ldr	r3, [fp, #-8]
   3992c:	cmp	r2, r3
   39930:	bne	3993c <grisu3_diy_fp_encode_double@@Base+0x12cc>
   39934:	mov	r3, #0
   39938:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   3993c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39940:	ldrb	r3, [r3]
   39944:	cmp	r3, #47	; 0x2f
   39948:	bls	3995c <grisu3_diy_fp_encode_double@@Base+0x12ec>
   3994c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39950:	ldrb	r3, [r3]
   39954:	cmp	r3, #57	; 0x39
   39958:	bls	39964 <grisu3_diy_fp_encode_double@@Base+0x12f4>
   3995c:	mov	r3, #0
   39960:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   39964:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39968:	add	r2, r3, #1
   3996c:	str	r2, [fp, #-56]	; 0xffffffc8
   39970:	ldrb	r3, [r3]
   39974:	sub	r3, r3, #48	; 0x30
   39978:	str	r3, [fp, #-36]	; 0xffffffdc
   3997c:	b	399c4 <grisu3_diy_fp_encode_double@@Base+0x1354>
   39980:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39984:	cmp	r3, #32768	; 0x8000
   39988:	bge	399b8 <grisu3_diy_fp_encode_double@@Base+0x1348>
   3998c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   39990:	mov	r3, r2
   39994:	lsl	r3, r3, #2
   39998:	add	r3, r3, r2
   3999c:	lsl	r3, r3, #1
   399a0:	mov	r2, r3
   399a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   399a8:	ldrb	r3, [r3]
   399ac:	add	r3, r2, r3
   399b0:	sub	r3, r3, #48	; 0x30
   399b4:	str	r3, [fp, #-36]	; 0xffffffdc
   399b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   399bc:	add	r3, r3, #1
   399c0:	str	r3, [fp, #-56]	; 0xffffffc8
   399c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   399c8:	ldr	r3, [fp, #-8]
   399cc:	cmp	r2, r3
   399d0:	beq	399f4 <grisu3_diy_fp_encode_double@@Base+0x1384>
   399d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   399d8:	ldrb	r3, [r3]
   399dc:	cmp	r3, #47	; 0x2f
   399e0:	bls	399f4 <grisu3_diy_fp_encode_double@@Base+0x1384>
   399e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   399e8:	ldrb	r3, [r3]
   399ec:	cmp	r3, #57	; 0x39
   399f0:	bls	39980 <grisu3_diy_fp_encode_double@@Base+0x1310>
   399f4:	ldr	r3, [fp, #-16]
   399f8:	cmp	r3, #0
   399fc:	beq	39a0c <grisu3_diy_fp_encode_double@@Base+0x139c>
   39a00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39a04:	rsb	r3, r3, #0
   39a08:	b	39a10 <grisu3_diy_fp_encode_double@@Base+0x13a0>
   39a0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39a10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   39a14:	add	r3, r2, r3
   39a18:	str	r3, [fp, #-32]	; 0xffffffe0
   39a1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   39a20:	ldr	r3, [fp, #-8]
   39a24:	cmp	r2, r3
   39a28:	bne	39a34 <grisu3_diy_fp_encode_double@@Base+0x13c4>
   39a2c:	mov	r3, #0
   39a30:	b	39a70 <grisu3_diy_fp_encode_double@@Base+0x1400>
   39a34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39a38:	str	r3, [sp, #20]
   39a3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39a40:	str	r3, [sp, #16]
   39a44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39a48:	str	r3, [sp, #12]
   39a4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39a50:	str	r3, [sp, #8]
   39a54:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   39a58:	strd	r2, [sp]
   39a5c:	ldr	r2, [fp, #-12]
   39a60:	ldr	r1, [fp, #-56]	; 0xffffffc8
   39a64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   39a68:	bl	38bac <grisu3_diy_fp_encode_double@@Base+0x53c>
   39a6c:	mov	r3, r0
   39a70:	mov	r0, r3
   39a74:	sub	sp, fp, #4
   39a78:	pop	{fp, pc}
   39a7c:	push	{fp, lr}
   39a80:	add	fp, sp, #4
   39a84:	sub	sp, sp, #16
   39a88:	str	r0, [fp, #-8]
   39a8c:	str	r1, [fp, #-12]
   39a90:	str	r2, [fp, #-16]
   39a94:	ldr	r2, [fp, #-16]
   39a98:	ldr	r1, [fp, #-12]
   39a9c:	ldr	r0, [fp, #-8]
   39aa0:	bl	39264 <grisu3_diy_fp_encode_double@@Base+0xbf4>
   39aa4:	mov	r3, r0
   39aa8:	mov	r0, r3
   39aac:	sub	sp, fp, #4
   39ab0:	pop	{fp, pc}
   39ab4:	push	{fp, lr}
   39ab8:	add	fp, sp, #4
   39abc:	sub	sp, sp, #40	; 0x28
   39ac0:	str	r0, [fp, #-32]	; 0xffffffe0
   39ac4:	str	r1, [fp, #-36]	; 0xffffffdc
   39ac8:	str	r2, [fp, #-40]	; 0xffffffd8
   39acc:	ldr	r3, [pc, #180]	; 39b88 <grisu3_diy_fp_encode_double@@Base+0x1518>
   39ad0:	str	r3, [fp, #-24]	; 0xffffffe8
   39ad4:	sub	r3, fp, #20
   39ad8:	mov	r2, r3
   39adc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39ae0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   39ae4:	bl	39a7c <grisu3_diy_fp_encode_double@@Base+0x140c>
   39ae8:	str	r0, [fp, #-8]
   39aec:	vldr	d7, [fp, #-20]	; 0xffffffec
   39af0:	vcvt.f32.f64	s15, d7
   39af4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39af8:	vstr	s15, [r3]
   39afc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39b00:	vldr	s15, [r3]
   39b04:	vabs.f32	s15, s15
   39b08:	vldr	s14, [pc, #116]	; 39b84 <grisu3_diy_fp_encode_double@@Base+0x1514>
   39b0c:	vcmp.f32	s15, s14
   39b10:	vmrs	APSR_nzcv, fpscr
   39b14:	movle	r3, #1
   39b18:	movgt	r3, #0
   39b1c:	uxtb	r3, r3
   39b20:	eor	r3, r3, #1
   39b24:	uxtb	r3, r3
   39b28:	cmp	r3, #0
   39b2c:	beq	39b38 <grisu3_diy_fp_encode_double@@Base+0x14c8>
   39b30:	mov	r3, #1
   39b34:	b	39b3c <grisu3_diy_fp_encode_double@@Base+0x14cc>
   39b38:	mov	r3, #0
   39b3c:	cmp	r3, #0
   39b40:	beq	39b74 <grisu3_diy_fp_encode_double@@Base+0x1504>
   39b44:	vldr	d7, [fp, #-20]	; 0xffffffec
   39b48:	vcmpe.f64	d7, #0.0
   39b4c:	vmrs	APSR_nzcv, fpscr
   39b50:	bpl	39b60 <grisu3_diy_fp_encode_double@@Base+0x14f0>
   39b54:	vldr	s15, [fp, #-24]	; 0xffffffe8
   39b58:	vneg.f32	s15, s15
   39b5c:	b	39b64 <grisu3_diy_fp_encode_double@@Base+0x14f4>
   39b60:	vldr	s15, [fp, #-24]	; 0xffffffe8
   39b64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39b68:	vstr	s15, [r3]
   39b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39b70:	b	39b78 <grisu3_diy_fp_encode_double@@Base+0x1508>
   39b74:	ldr	r3, [fp, #-8]
   39b78:	mov	r0, r3
   39b7c:	sub	sp, fp, #4
   39b80:	pop	{fp, pc}
   39b84:	svcvc	0x007fffff
   39b88:	svcvc	0x00800000
   39b8c:	push	{fp}		; (str fp, [sp, #-4]!)
   39b90:	add	fp, sp, #0
   39b94:	sub	sp, sp, #12
   39b98:	str	r0, [fp, #-8]
   39b9c:	ldr	r3, [fp, #-8]
   39ba0:	cmp	r3, #5
   39ba4:	addls	pc, pc, r3, lsl #2
   39ba8:	b	39c0c <grisu3_diy_fp_encode_double@@Base+0x159c>
   39bac:	b	39bc4 <grisu3_diy_fp_encode_double@@Base+0x1554>
   39bb0:	b	39be8 <grisu3_diy_fp_encode_double@@Base+0x1578>
   39bb4:	b	39bd0 <grisu3_diy_fp_encode_double@@Base+0x1560>
   39bb8:	b	39bdc <grisu3_diy_fp_encode_double@@Base+0x156c>
   39bbc:	b	39bf4 <grisu3_diy_fp_encode_double@@Base+0x1584>
   39bc0:	b	39c00 <grisu3_diy_fp_encode_double@@Base+0x1590>
   39bc4:	ldr	r3, [pc, #88]	; 39c24 <grisu3_diy_fp_encode_double@@Base+0x15b4>
   39bc8:	add	r3, pc, r3
   39bcc:	b	39c14 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   39bd0:	ldr	r3, [pc, #80]	; 39c28 <grisu3_diy_fp_encode_double@@Base+0x15b8>
   39bd4:	add	r3, pc, r3
   39bd8:	b	39c14 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   39bdc:	ldr	r3, [pc, #72]	; 39c2c <grisu3_diy_fp_encode_double@@Base+0x15bc>
   39be0:	add	r3, pc, r3
   39be4:	b	39c14 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   39be8:	ldr	r3, [pc, #64]	; 39c30 <grisu3_diy_fp_encode_double@@Base+0x15c0>
   39bec:	add	r3, pc, r3
   39bf0:	b	39c14 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   39bf4:	ldr	r3, [pc, #56]	; 39c34 <grisu3_diy_fp_encode_double@@Base+0x15c4>
   39bf8:	add	r3, pc, r3
   39bfc:	b	39c14 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   39c00:	ldr	r3, [pc, #48]	; 39c38 <grisu3_diy_fp_encode_double@@Base+0x15c8>
   39c04:	add	r3, pc, r3
   39c08:	b	39c14 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   39c0c:	ldr	r3, [pc, #40]	; 39c3c <grisu3_diy_fp_encode_double@@Base+0x15cc>
   39c10:	add	r3, pc, r3
   39c14:	mov	r0, r3
   39c18:	add	sp, fp, #0
   39c1c:	pop	{fp}		; (ldr fp, [sp], #4)
   39c20:	bx	lr
   39c24:	andeq	r8, r1, r0, asr #2
   39c28:	andeq	r8, r1, r8, lsr r1
   39c2c:	andeq	r8, r1, r0, asr #2
   39c30:	andeq	r8, r1, r4, asr #2
   39c34:	andeq	r8, r1, ip, asr #2
   39c38:	andeq	r8, r1, r4, asr r1
   39c3c:	andeq	r8, r1, r0, ror #2
   39c40:	push	{fp}		; (str fp, [sp, #-4]!)
   39c44:	add	fp, sp, #0
   39c48:	sub	sp, sp, #28
   39c4c:	str	r0, [fp, #-24]	; 0xffffffe8
   39c50:	str	r1, [fp, #-28]	; 0xffffffe4
   39c54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39c58:	ldr	r3, [pc, #156]	; 39cfc <grisu3_diy_fp_encode_double@@Base+0x168c>
   39c5c:	umull	r1, r3, r3, r2
   39c60:	lsr	r1, r3, #1
   39c64:	mov	r3, r1
   39c68:	lsl	r3, r3, #1
   39c6c:	add	r3, r3, r1
   39c70:	sub	r3, r2, r3
   39c74:	str	r3, [fp, #-12]
   39c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39c7c:	lsl	r3, r3, #2
   39c80:	ldr	r2, [pc, #116]	; 39cfc <grisu3_diy_fp_encode_double@@Base+0x168c>
   39c84:	umull	r2, r3, r2, r3
   39c88:	lsr	r3, r3, #1
   39c8c:	add	r3, r3, #3
   39c90:	bic	r3, r3, #3
   39c94:	str	r3, [fp, #-8]
   39c98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39c9c:	and	r3, r3, #128	; 0x80
   39ca0:	str	r3, [fp, #-16]
   39ca4:	ldr	r3, [fp, #-16]
   39ca8:	cmp	r3, #0
   39cac:	bne	39ce8 <grisu3_diy_fp_encode_double@@Base+0x1678>
   39cb0:	ldr	r3, [fp, #-12]
   39cb4:	cmp	r3, #1
   39cb8:	beq	39cd8 <grisu3_diy_fp_encode_double@@Base+0x1668>
   39cbc:	cmp	r3, #2
   39cc0:	beq	39cc8 <grisu3_diy_fp_encode_double@@Base+0x1658>
   39cc4:	b	39ce8 <grisu3_diy_fp_encode_double@@Base+0x1678>
   39cc8:	ldr	r3, [fp, #-8]
   39ccc:	sub	r3, r3, #1
   39cd0:	str	r3, [fp, #-8]
   39cd4:	b	39ce8 <grisu3_diy_fp_encode_double@@Base+0x1678>
   39cd8:	ldr	r3, [fp, #-8]
   39cdc:	sub	r3, r3, #2
   39ce0:	str	r3, [fp, #-8]
   39ce4:	nop			; (mov r0, r0)
   39ce8:	ldr	r3, [fp, #-8]
   39cec:	mov	r0, r3
   39cf0:	add	sp, fp, #0
   39cf4:	pop	{fp}		; (ldr fp, [sp], #4)
   39cf8:	bx	lr
   39cfc:	bge	feae47b0 <__bss_end__@@Base+0xfea80304>
   39d00:	push	{fp}		; (str fp, [sp, #-4]!)
   39d04:	add	fp, sp, #0
   39d08:	sub	sp, sp, #20
   39d0c:	str	r0, [fp, #-16]
   39d10:	ldr	r3, [fp, #-16]
   39d14:	and	r3, r3, #3
   39d18:	str	r3, [fp, #-8]
   39d1c:	ldr	r3, [fp, #-16]
   39d20:	lsr	r2, r3, #2
   39d24:	mov	r3, r2
   39d28:	lsl	r3, r3, #1
   39d2c:	add	r3, r3, r2
   39d30:	str	r3, [fp, #-12]
   39d34:	ldr	r3, [fp, #-8]
   39d38:	cmp	r3, #2
   39d3c:	beq	39d54 <grisu3_diy_fp_encode_double@@Base+0x16e4>
   39d40:	cmp	r3, #3
   39d44:	bne	39d60 <grisu3_diy_fp_encode_double@@Base+0x16f0>
   39d48:	ldr	r3, [fp, #-12]
   39d4c:	add	r3, r3, #2
   39d50:	b	39d64 <grisu3_diy_fp_encode_double@@Base+0x16f4>
   39d54:	ldr	r3, [fp, #-12]
   39d58:	add	r3, r3, #1
   39d5c:	b	39d64 <grisu3_diy_fp_encode_double@@Base+0x16f4>
   39d60:	ldr	r3, [fp, #-12]
   39d64:	mov	r0, r3
   39d68:	add	sp, fp, #0
   39d6c:	pop	{fp}		; (ldr fp, [sp], #4)
   39d70:	bx	lr
   39d74:	push	{fp}		; (str fp, [sp, #-4]!)
   39d78:	add	fp, sp, #0
   39d7c:	sub	sp, sp, #52	; 0x34
   39d80:	str	r0, [fp, #-40]	; 0xffffffd8
   39d84:	str	r1, [fp, #-44]	; 0xffffffd4
   39d88:	str	r2, [fp, #-48]	; 0xffffffd0
   39d8c:	str	r3, [fp, #-52]	; 0xffffffcc
   39d90:	ldr	r3, [pc, #920]	; 3a130 <grisu3_diy_fp_encode_double@@Base+0x1ac0>
   39d94:	add	r3, pc, r3
   39d98:	str	r3, [fp, #-20]	; 0xffffffec
   39d9c:	ldr	r3, [pc, #912]	; 3a134 <grisu3_diy_fp_encode_double@@Base+0x1ac4>
   39da0:	add	r3, pc, r3
   39da4:	str	r3, [fp, #-24]	; 0xffffffe8
   39da8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39dac:	str	r3, [fp, #-28]	; 0xffffffe4
   39db0:	ldr	r3, [fp, #4]
   39db4:	and	r3, r3, #128	; 0x80
   39db8:	str	r3, [fp, #-32]	; 0xffffffe0
   39dbc:	mov	r3, #0
   39dc0:	str	r3, [fp, #-12]
   39dc4:	mov	r3, #3
   39dc8:	str	r3, [fp, #-16]
   39dcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39dd0:	cmp	r3, #0
   39dd4:	bne	39de4 <grisu3_diy_fp_encode_double@@Base+0x1774>
   39dd8:	mov	r3, #2
   39ddc:	str	r3, [fp, #-16]
   39de0:	b	3a0d4 <grisu3_diy_fp_encode_double@@Base+0x1a64>
   39de4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39de8:	ldr	r3, [r3]
   39dec:	str	r3, [fp, #-12]
   39df0:	ldr	r3, [fp, #4]
   39df4:	bic	r3, r3, #224	; 0xe0
   39df8:	str	r3, [fp, #4]
   39dfc:	ldr	r3, [fp, #4]
   39e00:	cmp	r3, #0
   39e04:	beq	39e14 <grisu3_diy_fp_encode_double@@Base+0x17a4>
   39e08:	cmp	r3, #1
   39e0c:	beq	39e20 <grisu3_diy_fp_encode_double@@Base+0x17b0>
   39e10:	b	3a0d4 <grisu3_diy_fp_encode_double@@Base+0x1a64>
   39e14:	ldr	r3, [fp, #-20]	; 0xffffffec
   39e18:	str	r3, [fp, #-8]
   39e1c:	b	39e2c <grisu3_diy_fp_encode_double@@Base+0x17bc>
   39e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39e24:	str	r3, [fp, #-8]
   39e28:	nop			; (mov r0, r0)
   39e2c:	mov	r3, #0
   39e30:	str	r3, [fp, #-16]
   39e34:	b	39f38 <grisu3_diy_fp_encode_double@@Base+0x18c8>
   39e38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39e3c:	ldrb	r3, [r3]
   39e40:	lsr	r3, r3, #2
   39e44:	uxtb	r3, r3
   39e48:	mov	r2, r3
   39e4c:	ldr	r3, [fp, #-8]
   39e50:	add	r3, r3, r2
   39e54:	ldrb	r2, [r3]
   39e58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39e5c:	strb	r2, [r3]
   39e60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39e64:	add	r3, r3, #1
   39e68:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39e6c:	ldrb	r2, [r2]
   39e70:	lsl	r2, r2, #4
   39e74:	and	r2, r2, #48	; 0x30
   39e78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   39e7c:	add	r1, r1, #1
   39e80:	ldrb	r1, [r1]
   39e84:	lsr	r1, r1, #4
   39e88:	uxtb	r1, r1
   39e8c:	orr	r2, r2, r1
   39e90:	mov	r1, r2
   39e94:	ldr	r2, [fp, #-8]
   39e98:	add	r2, r2, r1
   39e9c:	ldrb	r2, [r2]
   39ea0:	strb	r2, [r3]
   39ea4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39ea8:	add	r3, r3, #2
   39eac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39eb0:	add	r2, r2, #1
   39eb4:	ldrb	r2, [r2]
   39eb8:	lsl	r2, r2, #2
   39ebc:	and	r2, r2, #60	; 0x3c
   39ec0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   39ec4:	add	r1, r1, #2
   39ec8:	ldrb	r1, [r1]
   39ecc:	lsr	r1, r1, #6
   39ed0:	uxtb	r1, r1
   39ed4:	orr	r2, r2, r1
   39ed8:	mov	r1, r2
   39edc:	ldr	r2, [fp, #-8]
   39ee0:	add	r2, r2, r1
   39ee4:	ldrb	r2, [r2]
   39ee8:	strb	r2, [r3]
   39eec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39ef0:	add	r3, r3, #3
   39ef4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39ef8:	add	r2, r2, #2
   39efc:	ldrb	r2, [r2]
   39f00:	and	r2, r2, #63	; 0x3f
   39f04:	ldr	r1, [fp, #-8]
   39f08:	add	r2, r1, r2
   39f0c:	ldrb	r2, [r2]
   39f10:	strb	r2, [r3]
   39f14:	ldr	r3, [fp, #-12]
   39f18:	sub	r3, r3, #3
   39f1c:	str	r3, [fp, #-12]
   39f20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39f24:	add	r3, r3, #4
   39f28:	str	r3, [fp, #-40]	; 0xffffffd8
   39f2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39f30:	add	r3, r3, #3
   39f34:	str	r3, [fp, #-44]	; 0xffffffd4
   39f38:	ldr	r3, [fp, #-12]
   39f3c:	cmp	r3, #2
   39f40:	bhi	39e38 <grisu3_diy_fp_encode_double@@Base+0x17c8>
   39f44:	ldr	r3, [fp, #-12]
   39f48:	cmp	r3, #1
   39f4c:	beq	3a020 <grisu3_diy_fp_encode_double@@Base+0x19b0>
   39f50:	cmp	r3, #2
   39f54:	bne	3a0b4 <grisu3_diy_fp_encode_double@@Base+0x1a44>
   39f58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39f5c:	ldrb	r3, [r3]
   39f60:	lsr	r3, r3, #2
   39f64:	uxtb	r3, r3
   39f68:	mov	r2, r3
   39f6c:	ldr	r3, [fp, #-8]
   39f70:	add	r3, r3, r2
   39f74:	ldrb	r2, [r3]
   39f78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39f7c:	strb	r2, [r3]
   39f80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39f84:	add	r3, r3, #1
   39f88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39f8c:	ldrb	r2, [r2]
   39f90:	lsl	r2, r2, #4
   39f94:	and	r2, r2, #48	; 0x30
   39f98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   39f9c:	add	r1, r1, #1
   39fa0:	ldrb	r1, [r1]
   39fa4:	lsr	r1, r1, #4
   39fa8:	uxtb	r1, r1
   39fac:	orr	r2, r2, r1
   39fb0:	mov	r1, r2
   39fb4:	ldr	r2, [fp, #-8]
   39fb8:	add	r2, r2, r1
   39fbc:	ldrb	r2, [r2]
   39fc0:	strb	r2, [r3]
   39fc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39fc8:	add	r3, r3, #2
   39fcc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39fd0:	add	r2, r2, #1
   39fd4:	ldrb	r2, [r2]
   39fd8:	lsl	r2, r2, #2
   39fdc:	and	r2, r2, #60	; 0x3c
   39fe0:	ldr	r1, [fp, #-8]
   39fe4:	add	r2, r1, r2
   39fe8:	ldrb	r2, [r2]
   39fec:	strb	r2, [r3]
   39ff0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39ff4:	add	r3, r3, #3
   39ff8:	str	r3, [fp, #-40]	; 0xffffffd8
   39ffc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a000:	cmp	r3, #0
   3a004:	beq	3a0c0 <grisu3_diy_fp_encode_double@@Base+0x1a50>
   3a008:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a00c:	add	r2, r3, #1
   3a010:	str	r2, [fp, #-40]	; 0xffffffd8
   3a014:	mov	r2, #61	; 0x3d
   3a018:	strb	r2, [r3]
   3a01c:	b	3a0c0 <grisu3_diy_fp_encode_double@@Base+0x1a50>
   3a020:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3a024:	ldrb	r3, [r3]
   3a028:	lsr	r3, r3, #2
   3a02c:	uxtb	r3, r3
   3a030:	mov	r2, r3
   3a034:	ldr	r3, [fp, #-8]
   3a038:	add	r3, r3, r2
   3a03c:	ldrb	r2, [r3]
   3a040:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a044:	strb	r2, [r3]
   3a048:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a04c:	add	r3, r3, #1
   3a050:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3a054:	ldrb	r2, [r2]
   3a058:	lsl	r2, r2, #4
   3a05c:	and	r2, r2, #48	; 0x30
   3a060:	ldr	r1, [fp, #-8]
   3a064:	add	r2, r1, r2
   3a068:	ldrb	r2, [r2]
   3a06c:	strb	r2, [r3]
   3a070:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a074:	add	r3, r3, #2
   3a078:	str	r3, [fp, #-40]	; 0xffffffd8
   3a07c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a080:	cmp	r3, #0
   3a084:	beq	3a0c8 <grisu3_diy_fp_encode_double@@Base+0x1a58>
   3a088:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a08c:	add	r2, r3, #1
   3a090:	str	r2, [fp, #-40]	; 0xffffffd8
   3a094:	mov	r2, #61	; 0x3d
   3a098:	strb	r2, [r3]
   3a09c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a0a0:	add	r2, r3, #1
   3a0a4:	str	r2, [fp, #-40]	; 0xffffffd8
   3a0a8:	mov	r2, #61	; 0x3d
   3a0ac:	strb	r2, [r3]
   3a0b0:	b	3a0c8 <grisu3_diy_fp_encode_double@@Base+0x1a58>
   3a0b4:	mov	r3, #0
   3a0b8:	str	r3, [fp, #-32]	; 0xffffffe0
   3a0bc:	b	3a0cc <grisu3_diy_fp_encode_double@@Base+0x1a5c>
   3a0c0:	nop			; (mov r0, r0)
   3a0c4:	b	3a0cc <grisu3_diy_fp_encode_double@@Base+0x1a5c>
   3a0c8:	nop			; (mov r0, r0)
   3a0cc:	mov	r3, #0
   3a0d0:	str	r3, [fp, #-12]
   3a0d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a0d8:	cmp	r3, #0
   3a0dc:	beq	3a0f8 <grisu3_diy_fp_encode_double@@Base+0x1a88>
   3a0e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3a0e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a0e8:	sub	r3, r2, r3
   3a0ec:	mov	r2, r3
   3a0f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a0f4:	str	r2, [r3]
   3a0f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a0fc:	cmp	r3, #0
   3a100:	beq	3a11c <grisu3_diy_fp_encode_double@@Base+0x1aac>
   3a104:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a108:	ldr	r2, [r3]
   3a10c:	ldr	r3, [fp, #-12]
   3a110:	sub	r2, r2, r3
   3a114:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a118:	str	r2, [r3]
   3a11c:	ldr	r3, [fp, #-16]
   3a120:	mov	r0, r3
   3a124:	add	sp, fp, #0
   3a128:	pop	{fp}		; (ldr fp, [sp], #4)
   3a12c:	bx	lr
   3a130:	andeq	r7, r1, ip, ror #31
   3a134:	andeq	r8, r1, r4, lsr #32
   3a138:	push	{fp}		; (str fp, [sp, #-4]!)
   3a13c:	add	fp, sp, #0
   3a140:	sub	sp, sp, #60	; 0x3c
   3a144:	str	r0, [fp, #-48]	; 0xffffffd0
   3a148:	str	r1, [fp, #-52]	; 0xffffffcc
   3a14c:	str	r2, [fp, #-56]	; 0xffffffc8
   3a150:	str	r3, [fp, #-60]	; 0xffffffc4
   3a154:	mov	r3, #0
   3a158:	str	r3, [fp, #-8]
   3a15c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a160:	str	r3, [fp, #-36]	; 0xffffffdc
   3a164:	mvn	r3, #0
   3a168:	str	r3, [fp, #-20]	; 0xffffffec
   3a16c:	mvn	r3, #0
   3a170:	str	r3, [fp, #-24]	; 0xffffffe8
   3a174:	ldr	r3, [pc, #1376]	; 3a6dc <grisu3_diy_fp_encode_double@@Base+0x206c>
   3a178:	add	r3, pc, r3
   3a17c:	str	r3, [fp, #-32]	; 0xffffffe0
   3a180:	ldr	r3, [fp, #4]
   3a184:	and	r3, r3, #32
   3a188:	str	r3, [fp, #-40]	; 0xffffffd8
   3a18c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3a190:	cmp	r3, #0
   3a194:	beq	3a1a4 <grisu3_diy_fp_encode_double@@Base+0x1b34>
   3a198:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3a19c:	ldr	r3, [r3]
   3a1a0:	str	r3, [fp, #-24]	; 0xffffffe8
   3a1a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a1a8:	str	r3, [fp, #-28]	; 0xffffffe4
   3a1ac:	ldr	r3, [fp, #4]
   3a1b0:	bic	r3, r3, #224	; 0xe0
   3a1b4:	str	r3, [fp, #4]
   3a1b8:	ldr	r3, [fp, #4]
   3a1bc:	cmp	r3, #0
   3a1c0:	beq	3a1d0 <grisu3_diy_fp_encode_double@@Base+0x1b60>
   3a1c4:	cmp	r3, #1
   3a1c8:	beq	3a1f8 <grisu3_diy_fp_encode_double@@Base+0x1b88>
   3a1cc:	b	3a220 <grisu3_diy_fp_encode_double@@Base+0x1bb0>
   3a1d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a1d4:	cmp	r3, #0
   3a1d8:	beq	3a1e8 <grisu3_diy_fp_encode_double@@Base+0x1b78>
   3a1dc:	ldr	r3, [pc, #1276]	; 3a6e0 <grisu3_diy_fp_encode_double@@Base+0x2070>
   3a1e0:	add	r3, pc, r3
   3a1e4:	b	3a1f0 <grisu3_diy_fp_encode_double@@Base+0x1b80>
   3a1e8:	ldr	r3, [pc, #1268]	; 3a6e4 <grisu3_diy_fp_encode_double@@Base+0x2074>
   3a1ec:	add	r3, pc, r3
   3a1f0:	str	r3, [fp, #-32]	; 0xffffffe0
   3a1f4:	b	3a22c <grisu3_diy_fp_encode_double@@Base+0x1bbc>
   3a1f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3a1fc:	cmp	r3, #0
   3a200:	beq	3a210 <grisu3_diy_fp_encode_double@@Base+0x1ba0>
   3a204:	ldr	r3, [pc, #1244]	; 3a6e8 <grisu3_diy_fp_encode_double@@Base+0x2078>
   3a208:	add	r3, pc, r3
   3a20c:	b	3a218 <grisu3_diy_fp_encode_double@@Base+0x1ba8>
   3a210:	ldr	r3, [pc, #1236]	; 3a6ec <grisu3_diy_fp_encode_double@@Base+0x207c>
   3a214:	add	r3, pc, r3
   3a218:	str	r3, [fp, #-32]	; 0xffffffe0
   3a21c:	b	3a22c <grisu3_diy_fp_encode_double@@Base+0x1bbc>
   3a220:	mov	r3, #3
   3a224:	str	r3, [fp, #-8]
   3a228:	b	3a514 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   3a22c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a230:	cmp	r3, #0
   3a234:	beq	3a508 <grisu3_diy_fp_encode_double@@Base+0x1e98>
   3a238:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a23c:	ldr	r3, [r3]
   3a240:	cmp	r3, #0
   3a244:	beq	3a508 <grisu3_diy_fp_encode_double@@Base+0x1e98>
   3a248:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a24c:	ldr	r3, [r3]
   3a250:	str	r3, [fp, #-20]	; 0xffffffec
   3a254:	b	3a508 <grisu3_diy_fp_encode_double@@Base+0x1e98>
   3a258:	mov	r3, #0
   3a25c:	str	r3, [fp, #-12]
   3a260:	b	3a428 <grisu3_diy_fp_encode_double@@Base+0x1db8>
   3a264:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a268:	ldr	r3, [fp, #-12]
   3a26c:	cmp	r2, r3
   3a270:	bne	3a290 <grisu3_diy_fp_encode_double@@Base+0x1c20>
   3a274:	ldr	r3, [fp, #-12]
   3a278:	str	r3, [fp, #-16]
   3a27c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a280:	ldr	r3, [fp, #-12]
   3a284:	sub	r3, r2, r3
   3a288:	str	r3, [fp, #-24]	; 0xffffffe8
   3a28c:	b	3a564 <grisu3_diy_fp_encode_double@@Base+0x1ef4>
   3a290:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3a294:	ldr	r3, [fp, #-12]
   3a298:	add	r3, r2, r3
   3a29c:	ldrb	r3, [r3]
   3a2a0:	mov	r2, r3
   3a2a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a2a8:	add	r3, r3, r2
   3a2ac:	ldrb	r1, [r3]
   3a2b0:	sub	r2, fp, #44	; 0x2c
   3a2b4:	ldr	r3, [fp, #-12]
   3a2b8:	add	r3, r2, r3
   3a2bc:	mov	r2, r1
   3a2c0:	strb	r2, [r3]
   3a2c4:	sub	r2, fp, #44	; 0x2c
   3a2c8:	ldr	r3, [fp, #-12]
   3a2cc:	add	r3, r2, r3
   3a2d0:	ldrb	r2, [r3]
   3a2d4:	ldr	r3, [pc, #1044]	; 3a6f0 <grisu3_diy_fp_encode_double@@Base+0x2080>
   3a2d8:	add	r3, pc, r3
   3a2dc:	ldrb	r3, [r3]
   3a2e0:	cmp	r2, r3
   3a2e4:	bcc	3a41c <grisu3_diy_fp_encode_double@@Base+0x1dac>
   3a2e8:	sub	r2, fp, #44	; 0x2c
   3a2ec:	ldr	r3, [fp, #-12]
   3a2f0:	add	r3, r2, r3
   3a2f4:	ldrb	r2, [r3]
   3a2f8:	ldr	r3, [pc, #1012]	; 3a6f4 <grisu3_diy_fp_encode_double@@Base+0x2084>
   3a2fc:	add	r3, pc, r3
   3a300:	ldrb	r3, [r3]
   3a304:	cmp	r2, r3
   3a308:	bne	3a334 <grisu3_diy_fp_encode_double@@Base+0x1cc4>
   3a30c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a310:	add	r3, r3, #1
   3a314:	str	r3, [fp, #-52]	; 0xffffffcc
   3a318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a31c:	sub	r3, r3, #1
   3a320:	str	r3, [fp, #-24]	; 0xffffffe8
   3a324:	ldr	r3, [fp, #-12]
   3a328:	sub	r3, r3, #1
   3a32c:	str	r3, [fp, #-12]
   3a330:	b	3a41c <grisu3_diy_fp_encode_double@@Base+0x1dac>
   3a334:	ldr	r3, [fp, #-12]
   3a338:	str	r3, [fp, #-16]
   3a33c:	sub	r2, fp, #44	; 0x2c
   3a340:	ldr	r3, [fp, #-12]
   3a344:	add	r3, r2, r3
   3a348:	ldrb	r2, [r3]
   3a34c:	ldr	r3, [pc, #932]	; 3a6f8 <grisu3_diy_fp_encode_double@@Base+0x2088>
   3a350:	add	r3, pc, r3
   3a354:	ldrb	r3, [r3]
   3a358:	cmp	r2, r3
   3a35c:	bne	3a408 <grisu3_diy_fp_encode_double@@Base+0x1d98>
   3a360:	ldr	r3, [fp, #-12]
   3a364:	add	r3, r3, #1
   3a368:	str	r3, [fp, #-12]
   3a36c:	b	3a3e4 <grisu3_diy_fp_encode_double@@Base+0x1d74>
   3a370:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3a374:	ldr	r3, [fp, #-12]
   3a378:	add	r3, r2, r3
   3a37c:	ldrb	r3, [r3]
   3a380:	mov	r2, r3
   3a384:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a388:	add	r3, r3, r2
   3a38c:	ldrb	r2, [r3]
   3a390:	ldr	r3, [pc, #868]	; 3a6fc <grisu3_diy_fp_encode_double@@Base+0x208c>
   3a394:	add	r3, pc, r3
   3a398:	ldrb	r3, [r3]
   3a39c:	cmp	r2, r3
   3a3a0:	beq	3a3d8 <grisu3_diy_fp_encode_double@@Base+0x1d68>
   3a3a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3a3a8:	ldr	r3, [fp, #-12]
   3a3ac:	add	r3, r2, r3
   3a3b0:	ldrb	r3, [r3]
   3a3b4:	mov	r2, r3
   3a3b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a3bc:	add	r3, r3, r2
   3a3c0:	ldrb	r2, [r3]
   3a3c4:	ldr	r3, [pc, #820]	; 3a700 <grisu3_diy_fp_encode_double@@Base+0x2090>
   3a3c8:	add	r3, pc, r3
   3a3cc:	ldrb	r3, [r3]
   3a3d0:	cmp	r2, r3
   3a3d4:	bne	3a404 <grisu3_diy_fp_encode_double@@Base+0x1d94>
   3a3d8:	ldr	r3, [fp, #-12]
   3a3dc:	add	r3, r3, #1
   3a3e0:	str	r3, [fp, #-12]
   3a3e4:	ldr	r2, [fp, #-12]
   3a3e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a3ec:	cmp	r2, r3
   3a3f0:	bcs	3a408 <grisu3_diy_fp_encode_double@@Base+0x1d98>
   3a3f4:	ldr	r3, [fp, #-12]
   3a3f8:	cmp	r3, #7
   3a3fc:	bls	3a370 <grisu3_diy_fp_encode_double@@Base+0x1d00>
   3a400:	b	3a408 <grisu3_diy_fp_encode_double@@Base+0x1d98>
   3a404:	nop			; (mov r0, r0)
   3a408:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a40c:	ldr	r3, [fp, #-12]
   3a410:	sub	r3, r2, r3
   3a414:	str	r3, [fp, #-24]	; 0xffffffe8
   3a418:	b	3a564 <grisu3_diy_fp_encode_double@@Base+0x1ef4>
   3a41c:	ldr	r3, [fp, #-12]
   3a420:	add	r3, r3, #1
   3a424:	str	r3, [fp, #-12]
   3a428:	ldr	r3, [fp, #-12]
   3a42c:	cmp	r3, #3
   3a430:	bls	3a264 <grisu3_diy_fp_encode_double@@Base+0x1bf4>
   3a434:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a438:	cmp	r3, #2
   3a43c:	bls	3a6ac <grisu3_diy_fp_encode_double@@Base+0x203c>
   3a440:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   3a444:	lsl	r3, r3, #2
   3a448:	sxtb	r2, r3
   3a44c:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3a450:	lsr	r3, r3, #4
   3a454:	uxtb	r3, r3
   3a458:	sxtb	r3, r3
   3a45c:	orr	r3, r2, r3
   3a460:	sxtb	r3, r3
   3a464:	uxtb	r2, r3
   3a468:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a46c:	strb	r2, [r3]
   3a470:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a474:	add	r3, r3, #1
   3a478:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   3a47c:	lsl	r2, r2, #4
   3a480:	sxtb	r1, r2
   3a484:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   3a488:	lsr	r2, r2, #2
   3a48c:	uxtb	r2, r2
   3a490:	sxtb	r2, r2
   3a494:	orr	r2, r1, r2
   3a498:	sxtb	r2, r2
   3a49c:	uxtb	r2, r2
   3a4a0:	strb	r2, [r3]
   3a4a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a4a8:	add	r3, r3, #2
   3a4ac:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   3a4b0:	lsl	r2, r2, #6
   3a4b4:	sxtb	r1, r2
   3a4b8:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   3a4bc:	sxtb	r2, r2
   3a4c0:	orr	r2, r1, r2
   3a4c4:	sxtb	r2, r2
   3a4c8:	uxtb	r2, r2
   3a4cc:	strb	r2, [r3]
   3a4d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a4d4:	add	r3, r3, #3
   3a4d8:	str	r3, [fp, #-48]	; 0xffffffd0
   3a4dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a4e0:	add	r3, r3, #4
   3a4e4:	str	r3, [fp, #-52]	; 0xffffffcc
   3a4e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a4ec:	sub	r3, r3, #3
   3a4f0:	str	r3, [fp, #-20]	; 0xffffffec
   3a4f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a4f8:	sub	r3, r3, #4
   3a4fc:	str	r3, [fp, #-24]	; 0xffffffe8
   3a500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a504:	str	r3, [fp, #-28]	; 0xffffffe4
   3a508:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a50c:	cmp	r3, #0
   3a510:	bne	3a258 <grisu3_diy_fp_encode_double@@Base+0x1be8>
   3a514:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a518:	cmp	r3, #0
   3a51c:	beq	3a538 <grisu3_diy_fp_encode_double@@Base+0x1ec8>
   3a520:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3a524:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a528:	sub	r3, r2, r3
   3a52c:	mov	r2, r3
   3a530:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a534:	str	r2, [r3]
   3a538:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3a53c:	cmp	r3, #0
   3a540:	beq	3a55c <grisu3_diy_fp_encode_double@@Base+0x1eec>
   3a544:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3a548:	ldr	r2, [r3]
   3a54c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a550:	sub	r2, r2, r3
   3a554:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3a558:	str	r2, [r3]
   3a55c:	ldr	r3, [fp, #-8]
   3a560:	b	3a6cc <grisu3_diy_fp_encode_double@@Base+0x205c>
   3a564:	ldr	r3, [fp, #-16]
   3a568:	cmp	r3, #2
   3a56c:	beq	3a584 <grisu3_diy_fp_encode_double@@Base+0x1f14>
   3a570:	cmp	r3, #3
   3a574:	beq	3a5e4 <grisu3_diy_fp_encode_double@@Base+0x1f74>
   3a578:	cmp	r3, #0
   3a57c:	beq	3a684 <grisu3_diy_fp_encode_double@@Base+0x2014>
   3a580:	b	3a678 <grisu3_diy_fp_encode_double@@Base+0x2008>
   3a584:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3a588:	lsl	r3, r3, #4
   3a58c:	uxtb	r3, r3
   3a590:	cmp	r3, #0
   3a594:	bne	3a694 <grisu3_diy_fp_encode_double@@Base+0x2024>
   3a598:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a59c:	cmp	r3, #0
   3a5a0:	beq	3a6b4 <grisu3_diy_fp_encode_double@@Base+0x2044>
   3a5a4:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   3a5a8:	lsl	r3, r3, #2
   3a5ac:	sxtb	r2, r3
   3a5b0:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3a5b4:	lsr	r3, r3, #4
   3a5b8:	uxtb	r3, r3
   3a5bc:	sxtb	r3, r3
   3a5c0:	orr	r3, r2, r3
   3a5c4:	sxtb	r3, r3
   3a5c8:	uxtb	r2, r3
   3a5cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a5d0:	strb	r2, [r3]
   3a5d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a5d8:	add	r3, r3, #1
   3a5dc:	str	r3, [fp, #-48]	; 0xffffffd0
   3a5e0:	b	3a688 <grisu3_diy_fp_encode_double@@Base+0x2018>
   3a5e4:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   3a5e8:	lsl	r3, r3, #6
   3a5ec:	uxtb	r3, r3
   3a5f0:	cmp	r3, #0
   3a5f4:	bne	3a69c <grisu3_diy_fp_encode_double@@Base+0x202c>
   3a5f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a5fc:	cmp	r3, #1
   3a600:	bls	3a6bc <grisu3_diy_fp_encode_double@@Base+0x204c>
   3a604:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   3a608:	lsl	r3, r3, #2
   3a60c:	sxtb	r2, r3
   3a610:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   3a614:	lsr	r3, r3, #4
   3a618:	uxtb	r3, r3
   3a61c:	sxtb	r3, r3
   3a620:	orr	r3, r2, r3
   3a624:	sxtb	r3, r3
   3a628:	uxtb	r2, r3
   3a62c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a630:	strb	r2, [r3]
   3a634:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a638:	add	r3, r3, #1
   3a63c:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   3a640:	lsl	r2, r2, #4
   3a644:	sxtb	r1, r2
   3a648:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   3a64c:	lsr	r2, r2, #2
   3a650:	uxtb	r2, r2
   3a654:	sxtb	r2, r2
   3a658:	orr	r2, r1, r2
   3a65c:	sxtb	r2, r2
   3a660:	uxtb	r2, r2
   3a664:	strb	r2, [r3]
   3a668:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a66c:	add	r3, r3, #2
   3a670:	str	r3, [fp, #-48]	; 0xffffffd0
   3a674:	b	3a688 <grisu3_diy_fp_encode_double@@Base+0x2018>
   3a678:	mov	r3, #4
   3a67c:	str	r3, [fp, #-8]
   3a680:	b	3a514 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   3a684:	nop			; (mov r0, r0)
   3a688:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a68c:	str	r3, [fp, #-28]	; 0xffffffe4
   3a690:	b	3a514 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   3a694:	nop			; (mov r0, r0)
   3a698:	b	3a6a0 <grisu3_diy_fp_encode_double@@Base+0x2030>
   3a69c:	nop			; (mov r0, r0)
   3a6a0:	mov	r3, #5
   3a6a4:	str	r3, [fp, #-8]
   3a6a8:	b	3a514 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   3a6ac:	nop			; (mov r0, r0)
   3a6b0:	b	3a6c0 <grisu3_diy_fp_encode_double@@Base+0x2050>
   3a6b4:	nop			; (mov r0, r0)
   3a6b8:	b	3a6c0 <grisu3_diy_fp_encode_double@@Base+0x2050>
   3a6bc:	nop			; (mov r0, r0)
   3a6c0:	mov	r3, #1
   3a6c4:	str	r3, [fp, #-8]
   3a6c8:	b	3a514 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   3a6cc:	mov	r0, r3
   3a6d0:	add	sp, fp, #0
   3a6d4:	pop	{fp}		; (ldr fp, [sp], #4)
   3a6d8:	bx	lr
   3a6dc:	andeq	r8, r1, r8, lsr #32
   3a6e0:	andeq	r8, r1, r0, asr #1
   3a6e4:			; <UNDEFINED> instruction: 0x00017fb4
   3a6e8:	muleq	r1, r8, r1
   3a6ec:	andeq	r8, r1, ip, lsl #5
   3a6f0:	andeq	r8, r1, r8, asr #5
   3a6f4:	andeq	r8, r1, r5, lsr #5
   3a6f8:	andeq	r8, r1, r2, asr r2
   3a6fc:	andeq	r8, r1, lr, lsl #4
   3a700:	ldrdeq	r8, [r1], -r9

0003a704 <flatcc_json_parser_error_string@@Base>:
   3a704:	push	{fp}		; (str fp, [sp, #-4]!)
   3a708:	add	fp, sp, #0
   3a70c:	sub	sp, sp, #12
   3a710:	str	r0, [fp, #-8]
   3a714:	ldr	r3, [fp, #-8]
   3a718:	cmp	r3, #34	; 0x22
   3a71c:	addls	pc, pc, r3, lsl #2
   3a720:	b	3a954 <flatcc_json_parser_error_string@@Base+0x250>
   3a724:	b	3a7b0 <flatcc_json_parser_error_string@@Base+0xac>
   3a728:	b	3a7bc <flatcc_json_parser_error_string@@Base+0xb8>
   3a72c:	b	3a7c8 <flatcc_json_parser_error_string@@Base+0xc4>
   3a730:	b	3a7d4 <flatcc_json_parser_error_string@@Base+0xd0>
   3a734:	b	3a7e0 <flatcc_json_parser_error_string@@Base+0xdc>
   3a738:	b	3a7ec <flatcc_json_parser_error_string@@Base+0xe8>
   3a73c:	b	3a7f8 <flatcc_json_parser_error_string@@Base+0xf4>
   3a740:	b	3a804 <flatcc_json_parser_error_string@@Base+0x100>
   3a744:	b	3a810 <flatcc_json_parser_error_string@@Base+0x10c>
   3a748:	b	3a81c <flatcc_json_parser_error_string@@Base+0x118>
   3a74c:	b	3a828 <flatcc_json_parser_error_string@@Base+0x124>
   3a750:	b	3a834 <flatcc_json_parser_error_string@@Base+0x130>
   3a754:	b	3a840 <flatcc_json_parser_error_string@@Base+0x13c>
   3a758:	b	3a84c <flatcc_json_parser_error_string@@Base+0x148>
   3a75c:	b	3a858 <flatcc_json_parser_error_string@@Base+0x154>
   3a760:	b	3a864 <flatcc_json_parser_error_string@@Base+0x160>
   3a764:	b	3a870 <flatcc_json_parser_error_string@@Base+0x16c>
   3a768:	b	3a87c <flatcc_json_parser_error_string@@Base+0x178>
   3a76c:	b	3a888 <flatcc_json_parser_error_string@@Base+0x184>
   3a770:	b	3a894 <flatcc_json_parser_error_string@@Base+0x190>
   3a774:	b	3a8a0 <flatcc_json_parser_error_string@@Base+0x19c>
   3a778:	b	3a8ac <flatcc_json_parser_error_string@@Base+0x1a8>
   3a77c:	b	3a8b8 <flatcc_json_parser_error_string@@Base+0x1b4>
   3a780:	b	3a8c4 <flatcc_json_parser_error_string@@Base+0x1c0>
   3a784:	b	3a8d0 <flatcc_json_parser_error_string@@Base+0x1cc>
   3a788:	b	3a8dc <flatcc_json_parser_error_string@@Base+0x1d8>
   3a78c:	b	3a8e8 <flatcc_json_parser_error_string@@Base+0x1e4>
   3a790:	b	3a8f4 <flatcc_json_parser_error_string@@Base+0x1f0>
   3a794:	b	3a900 <flatcc_json_parser_error_string@@Base+0x1fc>
   3a798:	b	3a90c <flatcc_json_parser_error_string@@Base+0x208>
   3a79c:	b	3a918 <flatcc_json_parser_error_string@@Base+0x214>
   3a7a0:	b	3a924 <flatcc_json_parser_error_string@@Base+0x220>
   3a7a4:	b	3a930 <flatcc_json_parser_error_string@@Base+0x22c>
   3a7a8:	b	3a93c <flatcc_json_parser_error_string@@Base+0x238>
   3a7ac:	b	3a948 <flatcc_json_parser_error_string@@Base+0x244>
   3a7b0:	ldr	r3, [pc, #436]	; 3a96c <flatcc_json_parser_error_string@@Base+0x268>
   3a7b4:	add	r3, pc, r3
   3a7b8:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a7bc:	ldr	r3, [pc, #428]	; 3a970 <flatcc_json_parser_error_string@@Base+0x26c>
   3a7c0:	add	r3, pc, r3
   3a7c4:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a7c8:	ldr	r3, [pc, #420]	; 3a974 <flatcc_json_parser_error_string@@Base+0x270>
   3a7cc:	add	r3, pc, r3
   3a7d0:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a7d4:	ldr	r3, [pc, #412]	; 3a978 <flatcc_json_parser_error_string@@Base+0x274>
   3a7d8:	add	r3, pc, r3
   3a7dc:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a7e0:	ldr	r3, [pc, #404]	; 3a97c <flatcc_json_parser_error_string@@Base+0x278>
   3a7e4:	add	r3, pc, r3
   3a7e8:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a7ec:	ldr	r3, [pc, #396]	; 3a980 <flatcc_json_parser_error_string@@Base+0x27c>
   3a7f0:	add	r3, pc, r3
   3a7f4:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a7f8:	ldr	r3, [pc, #388]	; 3a984 <flatcc_json_parser_error_string@@Base+0x280>
   3a7fc:	add	r3, pc, r3
   3a800:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a804:	ldr	r3, [pc, #380]	; 3a988 <flatcc_json_parser_error_string@@Base+0x284>
   3a808:	add	r3, pc, r3
   3a80c:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a810:	ldr	r3, [pc, #372]	; 3a98c <flatcc_json_parser_error_string@@Base+0x288>
   3a814:	add	r3, pc, r3
   3a818:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a81c:	ldr	r3, [pc, #364]	; 3a990 <flatcc_json_parser_error_string@@Base+0x28c>
   3a820:	add	r3, pc, r3
   3a824:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a828:	ldr	r3, [pc, #356]	; 3a994 <flatcc_json_parser_error_string@@Base+0x290>
   3a82c:	add	r3, pc, r3
   3a830:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a834:	ldr	r3, [pc, #348]	; 3a998 <flatcc_json_parser_error_string@@Base+0x294>
   3a838:	add	r3, pc, r3
   3a83c:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a840:	ldr	r3, [pc, #340]	; 3a99c <flatcc_json_parser_error_string@@Base+0x298>
   3a844:	add	r3, pc, r3
   3a848:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a84c:	ldr	r3, [pc, #332]	; 3a9a0 <flatcc_json_parser_error_string@@Base+0x29c>
   3a850:	add	r3, pc, r3
   3a854:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a858:	ldr	r3, [pc, #324]	; 3a9a4 <flatcc_json_parser_error_string@@Base+0x2a0>
   3a85c:	add	r3, pc, r3
   3a860:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a864:	ldr	r3, [pc, #316]	; 3a9a8 <flatcc_json_parser_error_string@@Base+0x2a4>
   3a868:	add	r3, pc, r3
   3a86c:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a870:	ldr	r3, [pc, #308]	; 3a9ac <flatcc_json_parser_error_string@@Base+0x2a8>
   3a874:	add	r3, pc, r3
   3a878:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a87c:	ldr	r3, [pc, #300]	; 3a9b0 <flatcc_json_parser_error_string@@Base+0x2ac>
   3a880:	add	r3, pc, r3
   3a884:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a888:	ldr	r3, [pc, #292]	; 3a9b4 <flatcc_json_parser_error_string@@Base+0x2b0>
   3a88c:	add	r3, pc, r3
   3a890:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a894:	ldr	r3, [pc, #284]	; 3a9b8 <flatcc_json_parser_error_string@@Base+0x2b4>
   3a898:	add	r3, pc, r3
   3a89c:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a8a0:	ldr	r3, [pc, #276]	; 3a9bc <flatcc_json_parser_error_string@@Base+0x2b8>
   3a8a4:	add	r3, pc, r3
   3a8a8:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a8ac:	ldr	r3, [pc, #268]	; 3a9c0 <flatcc_json_parser_error_string@@Base+0x2bc>
   3a8b0:	add	r3, pc, r3
   3a8b4:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a8b8:	ldr	r3, [pc, #260]	; 3a9c4 <flatcc_json_parser_error_string@@Base+0x2c0>
   3a8bc:	add	r3, pc, r3
   3a8c0:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a8c4:	ldr	r3, [pc, #252]	; 3a9c8 <flatcc_json_parser_error_string@@Base+0x2c4>
   3a8c8:	add	r3, pc, r3
   3a8cc:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a8d0:	ldr	r3, [pc, #244]	; 3a9cc <flatcc_json_parser_error_string@@Base+0x2c8>
   3a8d4:	add	r3, pc, r3
   3a8d8:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a8dc:	ldr	r3, [pc, #236]	; 3a9d0 <flatcc_json_parser_error_string@@Base+0x2cc>
   3a8e0:	add	r3, pc, r3
   3a8e4:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a8e8:	ldr	r3, [pc, #228]	; 3a9d4 <flatcc_json_parser_error_string@@Base+0x2d0>
   3a8ec:	add	r3, pc, r3
   3a8f0:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a8f4:	ldr	r3, [pc, #220]	; 3a9d8 <flatcc_json_parser_error_string@@Base+0x2d4>
   3a8f8:	add	r3, pc, r3
   3a8fc:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a900:	ldr	r3, [pc, #212]	; 3a9dc <flatcc_json_parser_error_string@@Base+0x2d8>
   3a904:	add	r3, pc, r3
   3a908:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a90c:	ldr	r3, [pc, #204]	; 3a9e0 <flatcc_json_parser_error_string@@Base+0x2dc>
   3a910:	add	r3, pc, r3
   3a914:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a918:	ldr	r3, [pc, #196]	; 3a9e4 <flatcc_json_parser_error_string@@Base+0x2e0>
   3a91c:	add	r3, pc, r3
   3a920:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a924:	ldr	r3, [pc, #188]	; 3a9e8 <flatcc_json_parser_error_string@@Base+0x2e4>
   3a928:	add	r3, pc, r3
   3a92c:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a930:	ldr	r3, [pc, #180]	; 3a9ec <flatcc_json_parser_error_string@@Base+0x2e8>
   3a934:	add	r3, pc, r3
   3a938:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a93c:	ldr	r3, [pc, #172]	; 3a9f0 <flatcc_json_parser_error_string@@Base+0x2ec>
   3a940:	add	r3, pc, r3
   3a944:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a948:	ldr	r3, [pc, #164]	; 3a9f4 <flatcc_json_parser_error_string@@Base+0x2f0>
   3a94c:	add	r3, pc, r3
   3a950:	b	3a95c <flatcc_json_parser_error_string@@Base+0x258>
   3a954:	ldr	r3, [pc, #156]	; 3a9f8 <flatcc_json_parser_error_string@@Base+0x2f4>
   3a958:	add	r3, pc, r3
   3a95c:	mov	r0, r3
   3a960:	add	sp, fp, #0
   3a964:	pop	{fp}		; (ldr fp, [sp], #4)
   3a968:	bx	lr
   3a96c:	andeq	r7, r1, r4, asr r5
   3a970:	andeq	r7, r1, r8, asr #12
   3a974:	andeq	r7, r1, r0, asr #12
   3a978:	andeq	r7, r1, r4, asr #12
   3a97c:	andeq	r7, r1, r8, asr #12
   3a980:	andeq	r7, r1, ip, asr #12
   3a984:	andeq	r7, r1, r8, asr r6
   3a988:	andeq	r7, r1, ip, asr r6
   3a98c:	andeq	r7, r1, ip, asr r6
   3a990:	andeq	r7, r1, ip, asr r6
   3a994:	andeq	r7, r1, r4, ror #12
   3a998:	andeq	r7, r1, ip, ror #12
   3a99c:	andeq	r7, r1, r0, ror r6
   3a9a0:	andeq	r7, r1, r8, ror r6
   3a9a4:	andeq	r7, r1, ip, ror r6
   3a9a8:	andeq	r7, r1, ip, lsl #13
   3a9ac:	muleq	r1, r4, r6
   3a9b0:	muleq	r1, r8, r6
   3a9b4:	andeq	r7, r1, r0, lsr #13
   3a9b8:	andeq	r7, r1, r4, lsr #13
   3a9bc:	andeq	r7, r1, r8, lsr #13
   3a9c0:			; <UNDEFINED> instruction: 0x000176b0
   3a9c4:			; <UNDEFINED> instruction: 0x000176b4
   3a9c8:			; <UNDEFINED> instruction: 0x000176b8
   3a9cc:	ldrdeq	r7, [r1], -r0
   3a9d0:	ldrdeq	r7, [r1], -r8
   3a9d4:	andeq	r7, r1, ip, ror #13
   3a9d8:	andeq	r7, r1, r0, lsl #14
   3a9dc:	andeq	r7, r1, r0, lsl r7
   3a9e0:	andeq	r7, r1, r0, lsr #14
   3a9e4:	andeq	r7, r1, ip, lsr #14
   3a9e8:	andeq	r7, r1, r0, asr #14
   3a9ec:	andeq	r7, r1, ip, asr #14
   3a9f0:	andeq	r7, r1, ip, asr r7
   3a9f4:	andeq	r7, r1, r0, ror #14
   3a9f8:	andeq	r7, r1, r4, ror #14

0003a9fc <flatcc_json_parser_set_error@@Base>:
   3a9fc:	push	{fp}		; (str fp, [sp, #-4]!)
   3aa00:	add	fp, sp, #0
   3aa04:	sub	sp, sp, #20
   3aa08:	str	r0, [fp, #-8]
   3aa0c:	str	r1, [fp, #-12]
   3aa10:	str	r2, [fp, #-16]
   3aa14:	str	r3, [fp, #-20]	; 0xffffffec
   3aa18:	ldr	r3, [fp, #-8]
   3aa1c:	ldr	r3, [r3, #24]
   3aa20:	cmp	r3, #0
   3aa24:	bne	3aa5c <flatcc_json_parser_set_error@@Base+0x60>
   3aa28:	ldr	r3, [fp, #-8]
   3aa2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3aa30:	str	r2, [r3, #24]
   3aa34:	ldr	r3, [fp, #-12]
   3aa38:	ldr	r2, [fp, #-8]
   3aa3c:	ldr	r2, [r2, #4]
   3aa40:	sub	r3, r3, r2
   3aa44:	add	r2, r3, #1
   3aa48:	ldr	r3, [fp, #-8]
   3aa4c:	str	r2, [r3, #20]
   3aa50:	ldr	r3, [fp, #-8]
   3aa54:	ldr	r2, [fp, #-12]
   3aa58:	str	r2, [r3, #36]	; 0x24
   3aa5c:	ldr	r3, [fp, #-16]
   3aa60:	mov	r0, r3
   3aa64:	add	sp, fp, #0
   3aa68:	pop	{fp}		; (ldr fp, [sp], #4)
   3aa6c:	bx	lr

0003aa70 <flatcc_json_parser_string_part@@Base>:
   3aa70:	push	{fp, lr}
   3aa74:	add	fp, sp, #4
   3aa78:	sub	sp, sp, #16
   3aa7c:	str	r0, [fp, #-8]
   3aa80:	str	r1, [fp, #-12]
   3aa84:	str	r2, [fp, #-16]
   3aa88:	b	3aa98 <flatcc_json_parser_string_part@@Base+0x28>
   3aa8c:	ldr	r3, [fp, #-12]
   3aa90:	add	r3, r3, #1
   3aa94:	str	r3, [fp, #-12]
   3aa98:	ldr	r2, [fp, #-12]
   3aa9c:	ldr	r3, [fp, #-16]
   3aaa0:	cmp	r2, r3
   3aaa4:	beq	3aad8 <flatcc_json_parser_string_part@@Base+0x68>
   3aaa8:	ldr	r3, [fp, #-12]
   3aaac:	ldrb	r3, [r3]
   3aab0:	cmp	r3, #34	; 0x22
   3aab4:	beq	3aad8 <flatcc_json_parser_string_part@@Base+0x68>
   3aab8:	ldr	r3, [fp, #-12]
   3aabc:	ldrb	r3, [r3]
   3aac0:	cmp	r3, #31
   3aac4:	bls	3aad8 <flatcc_json_parser_string_part@@Base+0x68>
   3aac8:	ldr	r3, [fp, #-12]
   3aacc:	ldrb	r3, [r3]
   3aad0:	cmp	r3, #92	; 0x5c
   3aad4:	bne	3aa8c <flatcc_json_parser_string_part@@Base+0x1c>
   3aad8:	ldr	r2, [fp, #-12]
   3aadc:	ldr	r3, [fp, #-16]
   3aae0:	cmp	r2, r3
   3aae4:	bne	3ab04 <flatcc_json_parser_string_part@@Base+0x94>
   3aae8:	mov	r3, #20
   3aaec:	ldr	r2, [fp, #-16]
   3aaf0:	ldr	r1, [fp, #-12]
   3aaf4:	ldr	r0, [fp, #-8]
   3aaf8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3aafc:	mov	r3, r0
   3ab00:	b	3ab4c <flatcc_json_parser_string_part@@Base+0xdc>
   3ab04:	ldr	r3, [fp, #-12]
   3ab08:	ldrb	r3, [r3]
   3ab0c:	cmp	r3, #34	; 0x22
   3ab10:	bne	3ab1c <flatcc_json_parser_string_part@@Base+0xac>
   3ab14:	ldr	r3, [fp, #-12]
   3ab18:	b	3ab4c <flatcc_json_parser_string_part@@Base+0xdc>
   3ab1c:	ldr	r3, [fp, #-12]
   3ab20:	ldrb	r3, [r3]
   3ab24:	cmp	r3, #31
   3ab28:	bhi	3ab48 <flatcc_json_parser_string_part@@Base+0xd8>
   3ab2c:	mov	r3, #17
   3ab30:	ldr	r2, [fp, #-16]
   3ab34:	ldr	r1, [fp, #-12]
   3ab38:	ldr	r0, [fp, #-8]
   3ab3c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3ab40:	mov	r3, r0
   3ab44:	b	3ab4c <flatcc_json_parser_string_part@@Base+0xdc>
   3ab48:	ldr	r3, [fp, #-12]
   3ab4c:	mov	r0, r3
   3ab50:	sub	sp, fp, #4
   3ab54:	pop	{fp, pc}

0003ab58 <flatcc_json_parser_space_ext@@Base>:
   3ab58:	push	{fp, lr}
   3ab5c:	add	fp, sp, #4
   3ab60:	sub	sp, sp, #16
   3ab64:	str	r0, [fp, #-8]
   3ab68:	str	r1, [fp, #-12]
   3ab6c:	str	r2, [fp, #-16]
   3ab70:	b	3ab80 <flatcc_json_parser_space_ext@@Base+0x28>
   3ab74:	ldr	r3, [fp, #-12]
   3ab78:	add	r3, r3, #1
   3ab7c:	str	r3, [fp, #-12]
   3ab80:	ldr	r2, [fp, #-12]
   3ab84:	ldr	r3, [fp, #-16]
   3ab88:	cmp	r2, r3
   3ab8c:	beq	3acbc <flatcc_json_parser_space_ext@@Base+0x164>
   3ab90:	ldr	r3, [fp, #-12]
   3ab94:	ldrb	r3, [r3]
   3ab98:	cmp	r3, #32
   3ab9c:	beq	3ab74 <flatcc_json_parser_space_ext@@Base+0x1c>
   3aba0:	b	3acbc <flatcc_json_parser_space_ext@@Base+0x164>
   3aba4:	ldr	r3, [fp, #-12]
   3aba8:	ldrb	r3, [r3]
   3abac:	sub	r3, r3, #9
   3abb0:	cmp	r3, #23
   3abb4:	addls	pc, pc, r3, lsl #2
   3abb8:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abbc:	b	3ac90 <flatcc_json_parser_space_ext@@Base+0x138>
   3abc0:	b	3ac60 <flatcc_json_parser_space_ext@@Base+0x108>
   3abc4:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abc8:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abcc:	b	3ac1c <flatcc_json_parser_space_ext@@Base+0xc4>
   3abd0:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abd4:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abd8:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abdc:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abe0:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abe4:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abe8:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abec:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abf0:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abf4:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abf8:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3abfc:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3ac00:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3ac04:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3ac08:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3ac0c:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3ac10:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3ac14:	b	3aca0 <flatcc_json_parser_space_ext@@Base+0x148>
   3ac18:	b	3ab70 <flatcc_json_parser_space_ext@@Base+0x18>
   3ac1c:	ldr	r2, [fp, #-16]
   3ac20:	ldr	r3, [fp, #-12]
   3ac24:	sub	r3, r2, r3
   3ac28:	cmp	r3, #1
   3ac2c:	ble	3ac4c <flatcc_json_parser_space_ext@@Base+0xf4>
   3ac30:	ldr	r3, [fp, #-12]
   3ac34:	add	r3, r3, #1
   3ac38:	ldrb	r3, [r3]
   3ac3c:	cmp	r3, #10
   3ac40:	bne	3ac4c <flatcc_json_parser_space_ext@@Base+0xf4>
   3ac44:	mov	r3, #1
   3ac48:	b	3ac50 <flatcc_json_parser_space_ext@@Base+0xf8>
   3ac4c:	mov	r3, #0
   3ac50:	mov	r2, r3
   3ac54:	ldr	r3, [fp, #-12]
   3ac58:	add	r3, r3, r2
   3ac5c:	str	r3, [fp, #-12]
   3ac60:	ldr	r3, [fp, #-8]
   3ac64:	ldr	r3, [r3, #16]
   3ac68:	add	r2, r3, #1
   3ac6c:	ldr	r3, [fp, #-8]
   3ac70:	str	r2, [r3, #16]
   3ac74:	ldr	r3, [fp, #-12]
   3ac78:	add	r3, r3, #1
   3ac7c:	str	r3, [fp, #-12]
   3ac80:	ldr	r3, [fp, #-8]
   3ac84:	ldr	r2, [fp, #-12]
   3ac88:	str	r2, [r3, #4]
   3ac8c:	b	3acbc <flatcc_json_parser_space_ext@@Base+0x164>
   3ac90:	ldr	r3, [fp, #-12]
   3ac94:	add	r3, r3, #1
   3ac98:	str	r3, [fp, #-12]
   3ac9c:	b	3acbc <flatcc_json_parser_space_ext@@Base+0x164>
   3aca0:	mov	r3, #5
   3aca4:	ldr	r2, [fp, #-16]
   3aca8:	ldr	r1, [fp, #-12]
   3acac:	ldr	r0, [fp, #-8]
   3acb0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3acb4:	mov	r3, r0
   3acb8:	b	3ace0 <flatcc_json_parser_space_ext@@Base+0x188>
   3acbc:	ldr	r2, [fp, #-12]
   3acc0:	ldr	r3, [fp, #-16]
   3acc4:	cmp	r2, r3
   3acc8:	beq	3acdc <flatcc_json_parser_space_ext@@Base+0x184>
   3accc:	ldr	r3, [fp, #-12]
   3acd0:	ldrb	r3, [r3]
   3acd4:	cmp	r3, #32
   3acd8:	bls	3aba4 <flatcc_json_parser_space_ext@@Base+0x4c>
   3acdc:	ldr	r3, [fp, #-12]
   3ace0:	mov	r0, r3
   3ace4:	sub	sp, fp, #4
   3ace8:	pop	{fp, pc}

0003acec <flatcc_json_parser_string_escape@@Base>:
   3acec:	push	{fp, lr}
   3acf0:	add	fp, sp, #4
   3acf4:	sub	sp, sp, #24
   3acf8:	str	r0, [fp, #-16]
   3acfc:	str	r1, [fp, #-20]	; 0xffffffec
   3ad00:	str	r2, [fp, #-24]	; 0xffffffe8
   3ad04:	str	r3, [fp, #-28]	; 0xffffffe4
   3ad08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ad0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad10:	sub	r3, r2, r3
   3ad14:	cmp	r3, #1
   3ad18:	ble	3ad2c <flatcc_json_parser_string_escape@@Base+0x40>
   3ad1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad20:	ldrb	r3, [r3]
   3ad24:	cmp	r3, #92	; 0x5c
   3ad28:	beq	3ad54 <flatcc_json_parser_string_escape@@Base+0x68>
   3ad2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ad30:	mov	r2, #0
   3ad34:	strb	r2, [r3]
   3ad38:	mov	r3, #18
   3ad3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ad40:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ad44:	ldr	r0, [fp, #-16]
   3ad48:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3ad4c:	mov	r3, r0
   3ad50:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3ad54:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad58:	add	r3, r3, #1
   3ad5c:	ldrb	r3, [r3]
   3ad60:	sub	r3, r3, #34	; 0x22
   3ad64:	cmp	r3, #86	; 0x56
   3ad68:	addls	pc, pc, r3, lsl #2
   3ad6c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad70:	b	3b60c <flatcc_json_parser_string_escape@@Base+0x920>
   3ad74:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad78:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad7c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad80:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad84:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad88:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad8c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad90:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad94:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad98:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ad9c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ada0:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ada4:	b	3b65c <flatcc_json_parser_string_escape@@Base+0x970>
   3ada8:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adac:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adb0:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adb4:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adb8:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adbc:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adc0:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adc4:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adc8:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adcc:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3add0:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3add4:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3add8:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3addc:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ade0:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ade4:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ade8:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adec:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adf0:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adf4:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adf8:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3adfc:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae00:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae04:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae08:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae0c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae10:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae14:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae18:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae1c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae20:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae24:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae28:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae2c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae30:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae34:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae38:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae3c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae40:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae44:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae48:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae4c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae50:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae54:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae58:	b	3b634 <flatcc_json_parser_string_escape@@Base+0x948>
   3ae5c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae60:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae64:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae68:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae6c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae70:	b	3b5bc <flatcc_json_parser_string_escape@@Base+0x8d0>
   3ae74:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae78:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae7c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae80:	b	3b5e4 <flatcc_json_parser_string_escape@@Base+0x8f8>
   3ae84:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae88:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae8c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae90:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae94:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae98:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3ae9c:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3aea0:	b	3b56c <flatcc_json_parser_string_escape@@Base+0x880>
   3aea4:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3aea8:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3aeac:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3aeb0:	b	3b594 <flatcc_json_parser_string_escape@@Base+0x8a8>
   3aeb4:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3aeb8:	b	3b544 <flatcc_json_parser_string_escape@@Base+0x858>
   3aebc:	b	3b0a8 <flatcc_json_parser_string_escape@@Base+0x3bc>
   3aec0:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3aec4:	b	3b684 <flatcc_json_parser_string_escape@@Base+0x998>
   3aec8:	b	3aecc <flatcc_json_parser_string_escape@@Base+0x1e0>
   3aecc:	mov	r3, #0
   3aed0:	strb	r3, [fp, #-5]
   3aed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3aed8:	mov	r2, #1
   3aedc:	strb	r2, [r3]
   3aee0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3aee4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aee8:	sub	r3, r2, r3
   3aeec:	cmp	r3, #3
   3aef0:	bgt	3af1c <flatcc_json_parser_string_escape@@Base+0x230>
   3aef4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3aef8:	mov	r2, #0
   3aefc:	strb	r2, [r3]
   3af00:	mov	r3, #18
   3af04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3af08:	ldr	r1, [fp, #-20]	; 0xffffffec
   3af0c:	ldr	r0, [fp, #-16]
   3af10:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3af14:	mov	r3, r0
   3af18:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3af1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af20:	ldrb	r3, [r3, #2]
   3af24:	strb	r3, [fp, #-9]
   3af28:	ldrb	r3, [fp, #-9]
   3af2c:	cmp	r3, #47	; 0x2f
   3af30:	bls	3af64 <flatcc_json_parser_string_escape@@Base+0x278>
   3af34:	ldrb	r3, [fp, #-9]
   3af38:	cmp	r3, #57	; 0x39
   3af3c:	bhi	3af64 <flatcc_json_parser_string_escape@@Base+0x278>
   3af40:	ldrb	r3, [fp, #-9]
   3af44:	sub	r3, r3, #48	; 0x30
   3af48:	lsl	r3, r3, #4
   3af4c:	sxtb	r2, r3
   3af50:	ldrsb	r3, [fp, #-5]
   3af54:	orr	r3, r2, r3
   3af58:	sxtb	r3, r3
   3af5c:	strb	r3, [fp, #-5]
   3af60:	b	3afd4 <flatcc_json_parser_string_escape@@Base+0x2e8>
   3af64:	ldrb	r3, [fp, #-9]
   3af68:	orr	r3, r3, #32
   3af6c:	strb	r3, [fp, #-9]
   3af70:	ldrb	r3, [fp, #-9]
   3af74:	cmp	r3, #96	; 0x60
   3af78:	bls	3afac <flatcc_json_parser_string_escape@@Base+0x2c0>
   3af7c:	ldrb	r3, [fp, #-9]
   3af80:	cmp	r3, #102	; 0x66
   3af84:	bhi	3afac <flatcc_json_parser_string_escape@@Base+0x2c0>
   3af88:	ldrb	r3, [fp, #-9]
   3af8c:	sub	r3, r3, #87	; 0x57
   3af90:	lsl	r3, r3, #4
   3af94:	sxtb	r2, r3
   3af98:	ldrsb	r3, [fp, #-5]
   3af9c:	orr	r3, r2, r3
   3afa0:	sxtb	r3, r3
   3afa4:	strb	r3, [fp, #-5]
   3afa8:	b	3afd4 <flatcc_json_parser_string_escape@@Base+0x2e8>
   3afac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3afb0:	mov	r2, #0
   3afb4:	strb	r2, [r3]
   3afb8:	mov	r3, #18
   3afbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3afc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3afc4:	ldr	r0, [fp, #-16]
   3afc8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3afcc:	mov	r3, r0
   3afd0:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3afd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3afd8:	ldrb	r3, [r3, #3]
   3afdc:	strb	r3, [fp, #-9]
   3afe0:	ldrb	r3, [fp, #-9]
   3afe4:	cmp	r3, #47	; 0x2f
   3afe8:	bls	3b01c <flatcc_json_parser_string_escape@@Base+0x330>
   3afec:	ldrb	r3, [fp, #-9]
   3aff0:	cmp	r3, #57	; 0x39
   3aff4:	bhi	3b01c <flatcc_json_parser_string_escape@@Base+0x330>
   3aff8:	ldrb	r3, [fp, #-9]
   3affc:	sub	r3, r3, #48	; 0x30
   3b000:	uxtb	r3, r3
   3b004:	sxtb	r2, r3
   3b008:	ldrsb	r3, [fp, #-5]
   3b00c:	orr	r3, r2, r3
   3b010:	sxtb	r3, r3
   3b014:	strb	r3, [fp, #-5]
   3b018:	b	3b08c <flatcc_json_parser_string_escape@@Base+0x3a0>
   3b01c:	ldrb	r3, [fp, #-9]
   3b020:	orr	r3, r3, #32
   3b024:	strb	r3, [fp, #-9]
   3b028:	ldrb	r3, [fp, #-9]
   3b02c:	cmp	r3, #96	; 0x60
   3b030:	bls	3b064 <flatcc_json_parser_string_escape@@Base+0x378>
   3b034:	ldrb	r3, [fp, #-9]
   3b038:	cmp	r3, #102	; 0x66
   3b03c:	bhi	3b064 <flatcc_json_parser_string_escape@@Base+0x378>
   3b040:	ldrb	r3, [fp, #-9]
   3b044:	sub	r3, r3, #87	; 0x57
   3b048:	uxtb	r3, r3
   3b04c:	sxtb	r2, r3
   3b050:	ldrsb	r3, [fp, #-5]
   3b054:	orr	r3, r2, r3
   3b058:	sxtb	r3, r3
   3b05c:	strb	r3, [fp, #-5]
   3b060:	b	3b08c <flatcc_json_parser_string_escape@@Base+0x3a0>
   3b064:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b068:	mov	r2, #0
   3b06c:	strb	r2, [r3]
   3b070:	mov	r3, #18
   3b074:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b078:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b07c:	ldr	r0, [fp, #-16]
   3b080:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3b084:	mov	r3, r0
   3b088:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b08c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b090:	add	r3, r3, #1
   3b094:	ldrb	r2, [fp, #-5]
   3b098:	strb	r2, [r3]
   3b09c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b0a0:	add	r3, r3, #4
   3b0a4:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b0a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b0ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b0b0:	sub	r3, r2, r3
   3b0b4:	cmp	r3, #5
   3b0b8:	bgt	3b0e4 <flatcc_json_parser_string_escape@@Base+0x3f8>
   3b0bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b0c0:	mov	r2, #0
   3b0c4:	strb	r2, [r3]
   3b0c8:	mov	r3, #18
   3b0cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b0d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b0d4:	ldr	r0, [fp, #-16]
   3b0d8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3b0dc:	mov	r3, r0
   3b0e0:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b0e4:	mov	r3, #0
   3b0e8:	strh	r3, [fp, #-8]
   3b0ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b0f0:	ldrb	r3, [r3, #2]
   3b0f4:	strb	r3, [fp, #-9]
   3b0f8:	ldrb	r3, [fp, #-9]
   3b0fc:	cmp	r3, #47	; 0x2f
   3b100:	bls	3b130 <flatcc_json_parser_string_escape@@Base+0x444>
   3b104:	ldrb	r3, [fp, #-9]
   3b108:	cmp	r3, #57	; 0x39
   3b10c:	bhi	3b130 <flatcc_json_parser_string_escape@@Base+0x444>
   3b110:	ldrb	r3, [fp, #-9]
   3b114:	uxth	r3, r3
   3b118:	sub	r3, r3, #48	; 0x30
   3b11c:	strh	r3, [fp, #-12]
   3b120:	ldrh	r3, [fp, #-12]
   3b124:	lsl	r3, r3, #12
   3b128:	strh	r3, [fp, #-8]
   3b12c:	b	3b1ac <flatcc_json_parser_string_escape@@Base+0x4c0>
   3b130:	ldrb	r3, [fp, #-9]
   3b134:	orr	r3, r3, #32
   3b138:	strb	r3, [fp, #-9]
   3b13c:	ldrb	r3, [fp, #-9]
   3b140:	cmp	r3, #96	; 0x60
   3b144:	bls	3b184 <flatcc_json_parser_string_escape@@Base+0x498>
   3b148:	ldrb	r3, [fp, #-9]
   3b14c:	cmp	r3, #102	; 0x66
   3b150:	bhi	3b184 <flatcc_json_parser_string_escape@@Base+0x498>
   3b154:	ldrb	r3, [fp, #-9]
   3b158:	uxth	r3, r3
   3b15c:	sub	r3, r3, #87	; 0x57
   3b160:	strh	r3, [fp, #-12]
   3b164:	ldrh	r3, [fp, #-12]
   3b168:	lsl	r3, r3, #12
   3b16c:	sxth	r2, r3
   3b170:	ldrsh	r3, [fp, #-8]
   3b174:	orr	r3, r2, r3
   3b178:	sxth	r3, r3
   3b17c:	strh	r3, [fp, #-8]
   3b180:	b	3b1ac <flatcc_json_parser_string_escape@@Base+0x4c0>
   3b184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b188:	mov	r2, #0
   3b18c:	strb	r2, [r3]
   3b190:	mov	r3, #18
   3b194:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b198:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b19c:	ldr	r0, [fp, #-16]
   3b1a0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3b1a4:	mov	r3, r0
   3b1a8:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b1ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b1b0:	ldrb	r3, [r3, #3]
   3b1b4:	strb	r3, [fp, #-9]
   3b1b8:	ldrb	r3, [fp, #-9]
   3b1bc:	cmp	r3, #47	; 0x2f
   3b1c0:	bls	3b200 <flatcc_json_parser_string_escape@@Base+0x514>
   3b1c4:	ldrb	r3, [fp, #-9]
   3b1c8:	cmp	r3, #57	; 0x39
   3b1cc:	bhi	3b200 <flatcc_json_parser_string_escape@@Base+0x514>
   3b1d0:	ldrb	r3, [fp, #-9]
   3b1d4:	uxth	r3, r3
   3b1d8:	sub	r3, r3, #48	; 0x30
   3b1dc:	strh	r3, [fp, #-12]
   3b1e0:	ldrh	r3, [fp, #-12]
   3b1e4:	lsl	r3, r3, #8
   3b1e8:	sxth	r2, r3
   3b1ec:	ldrsh	r3, [fp, #-8]
   3b1f0:	orr	r3, r2, r3
   3b1f4:	sxth	r3, r3
   3b1f8:	strh	r3, [fp, #-8]
   3b1fc:	b	3b27c <flatcc_json_parser_string_escape@@Base+0x590>
   3b200:	ldrb	r3, [fp, #-9]
   3b204:	orr	r3, r3, #32
   3b208:	strb	r3, [fp, #-9]
   3b20c:	ldrb	r3, [fp, #-9]
   3b210:	cmp	r3, #96	; 0x60
   3b214:	bls	3b254 <flatcc_json_parser_string_escape@@Base+0x568>
   3b218:	ldrb	r3, [fp, #-9]
   3b21c:	cmp	r3, #102	; 0x66
   3b220:	bhi	3b254 <flatcc_json_parser_string_escape@@Base+0x568>
   3b224:	ldrb	r3, [fp, #-9]
   3b228:	uxth	r3, r3
   3b22c:	sub	r3, r3, #87	; 0x57
   3b230:	strh	r3, [fp, #-12]
   3b234:	ldrh	r3, [fp, #-12]
   3b238:	lsl	r3, r3, #8
   3b23c:	sxth	r2, r3
   3b240:	ldrsh	r3, [fp, #-8]
   3b244:	orr	r3, r2, r3
   3b248:	sxth	r3, r3
   3b24c:	strh	r3, [fp, #-8]
   3b250:	b	3b27c <flatcc_json_parser_string_escape@@Base+0x590>
   3b254:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b258:	mov	r2, #0
   3b25c:	strb	r2, [r3]
   3b260:	mov	r3, #18
   3b264:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b268:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b26c:	ldr	r0, [fp, #-16]
   3b270:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3b274:	mov	r3, r0
   3b278:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b27c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b280:	ldrb	r3, [r3, #4]
   3b284:	strb	r3, [fp, #-9]
   3b288:	ldrb	r3, [fp, #-9]
   3b28c:	cmp	r3, #47	; 0x2f
   3b290:	bls	3b2d0 <flatcc_json_parser_string_escape@@Base+0x5e4>
   3b294:	ldrb	r3, [fp, #-9]
   3b298:	cmp	r3, #57	; 0x39
   3b29c:	bhi	3b2d0 <flatcc_json_parser_string_escape@@Base+0x5e4>
   3b2a0:	ldrb	r3, [fp, #-9]
   3b2a4:	uxth	r3, r3
   3b2a8:	sub	r3, r3, #48	; 0x30
   3b2ac:	strh	r3, [fp, #-12]
   3b2b0:	ldrh	r3, [fp, #-12]
   3b2b4:	lsl	r3, r3, #4
   3b2b8:	sxth	r2, r3
   3b2bc:	ldrsh	r3, [fp, #-8]
   3b2c0:	orr	r3, r2, r3
   3b2c4:	sxth	r3, r3
   3b2c8:	strh	r3, [fp, #-8]
   3b2cc:	b	3b34c <flatcc_json_parser_string_escape@@Base+0x660>
   3b2d0:	ldrb	r3, [fp, #-9]
   3b2d4:	orr	r3, r3, #32
   3b2d8:	strb	r3, [fp, #-9]
   3b2dc:	ldrb	r3, [fp, #-9]
   3b2e0:	cmp	r3, #96	; 0x60
   3b2e4:	bls	3b324 <flatcc_json_parser_string_escape@@Base+0x638>
   3b2e8:	ldrb	r3, [fp, #-9]
   3b2ec:	cmp	r3, #102	; 0x66
   3b2f0:	bhi	3b324 <flatcc_json_parser_string_escape@@Base+0x638>
   3b2f4:	ldrb	r3, [fp, #-9]
   3b2f8:	uxth	r3, r3
   3b2fc:	sub	r3, r3, #87	; 0x57
   3b300:	strh	r3, [fp, #-12]
   3b304:	ldrh	r3, [fp, #-12]
   3b308:	lsl	r3, r3, #4
   3b30c:	sxth	r2, r3
   3b310:	ldrsh	r3, [fp, #-8]
   3b314:	orr	r3, r2, r3
   3b318:	sxth	r3, r3
   3b31c:	strh	r3, [fp, #-8]
   3b320:	b	3b34c <flatcc_json_parser_string_escape@@Base+0x660>
   3b324:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b328:	mov	r2, #0
   3b32c:	strb	r2, [r3]
   3b330:	mov	r3, #18
   3b334:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b338:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b33c:	ldr	r0, [fp, #-16]
   3b340:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3b344:	mov	r3, r0
   3b348:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b34c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b350:	ldrb	r3, [r3, #5]
   3b354:	strb	r3, [fp, #-9]
   3b358:	ldrb	r3, [fp, #-9]
   3b35c:	cmp	r3, #47	; 0x2f
   3b360:	bls	3b394 <flatcc_json_parser_string_escape@@Base+0x6a8>
   3b364:	ldrb	r3, [fp, #-9]
   3b368:	cmp	r3, #57	; 0x39
   3b36c:	bhi	3b394 <flatcc_json_parser_string_escape@@Base+0x6a8>
   3b370:	ldrb	r3, [fp, #-9]
   3b374:	uxth	r3, r3
   3b378:	sub	r3, r3, #48	; 0x30
   3b37c:	strh	r3, [fp, #-12]
   3b380:	ldrh	r2, [fp, #-8]
   3b384:	ldrh	r3, [fp, #-12]
   3b388:	orr	r3, r2, r3
   3b38c:	strh	r3, [fp, #-8]
   3b390:	b	3b404 <flatcc_json_parser_string_escape@@Base+0x718>
   3b394:	ldrb	r3, [fp, #-9]
   3b398:	orr	r3, r3, #32
   3b39c:	strb	r3, [fp, #-9]
   3b3a0:	ldrb	r3, [fp, #-9]
   3b3a4:	cmp	r3, #96	; 0x60
   3b3a8:	bls	3b3dc <flatcc_json_parser_string_escape@@Base+0x6f0>
   3b3ac:	ldrb	r3, [fp, #-9]
   3b3b0:	cmp	r3, #102	; 0x66
   3b3b4:	bhi	3b3dc <flatcc_json_parser_string_escape@@Base+0x6f0>
   3b3b8:	ldrb	r3, [fp, #-9]
   3b3bc:	uxth	r3, r3
   3b3c0:	sub	r3, r3, #87	; 0x57
   3b3c4:	strh	r3, [fp, #-12]
   3b3c8:	ldrh	r2, [fp, #-8]
   3b3cc:	ldrh	r3, [fp, #-12]
   3b3d0:	orr	r3, r2, r3
   3b3d4:	strh	r3, [fp, #-8]
   3b3d8:	b	3b404 <flatcc_json_parser_string_escape@@Base+0x718>
   3b3dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b3e0:	mov	r2, #0
   3b3e4:	strb	r2, [r3]
   3b3e8:	mov	r3, #18
   3b3ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b3f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b3f4:	ldr	r0, [fp, #-16]
   3b3f8:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3b3fc:	mov	r3, r0
   3b400:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b404:	ldrh	r3, [fp, #-8]
   3b408:	cmp	r3, #127	; 0x7f
   3b40c:	bhi	3b434 <flatcc_json_parser_string_escape@@Base+0x748>
   3b410:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b414:	mov	r2, #1
   3b418:	strb	r2, [r3]
   3b41c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b420:	add	r3, r3, #1
   3b424:	ldrh	r2, [fp, #-8]
   3b428:	uxtb	r2, r2
   3b42c:	strb	r2, [r3]
   3b430:	b	3b538 <flatcc_json_parser_string_escape@@Base+0x84c>
   3b434:	ldrh	r3, [fp, #-8]
   3b438:	cmp	r3, #2048	; 0x800
   3b43c:	bcs	3b4a4 <flatcc_json_parser_string_escape@@Base+0x7b8>
   3b440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b444:	mov	r2, #2
   3b448:	strb	r2, [r3]
   3b44c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b450:	add	r2, r3, #1
   3b454:	ldrh	r3, [fp, #-8]
   3b458:	lsr	r3, r3, #6
   3b45c:	uxth	r3, r3
   3b460:	uxtb	r3, r3
   3b464:	mvn	r3, r3, lsl #26
   3b468:	mvn	r3, r3, lsr #26
   3b46c:	uxtb	r3, r3
   3b470:	strb	r3, [r2]
   3b474:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b478:	add	r2, r3, #2
   3b47c:	ldrh	r3, [fp, #-8]
   3b480:	sxtb	r3, r3
   3b484:	and	r3, r3, #63	; 0x3f
   3b488:	sxtb	r3, r3
   3b48c:	mvn	r3, r3, lsl #25
   3b490:	mvn	r3, r3, lsr #25
   3b494:	sxtb	r3, r3
   3b498:	uxtb	r3, r3
   3b49c:	strb	r3, [r2]
   3b4a0:	b	3b538 <flatcc_json_parser_string_escape@@Base+0x84c>
   3b4a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b4a8:	mov	r2, #3
   3b4ac:	strb	r2, [r3]
   3b4b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b4b4:	add	r2, r3, #1
   3b4b8:	ldrh	r3, [fp, #-8]
   3b4bc:	lsr	r3, r3, #12
   3b4c0:	uxth	r3, r3
   3b4c4:	uxtb	r3, r3
   3b4c8:	mvn	r3, r3, lsl #27
   3b4cc:	mvn	r3, r3, lsr #27
   3b4d0:	uxtb	r3, r3
   3b4d4:	strb	r3, [r2]
   3b4d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b4dc:	add	r2, r3, #2
   3b4e0:	ldrh	r3, [fp, #-8]
   3b4e4:	lsr	r3, r3, #6
   3b4e8:	uxth	r3, r3
   3b4ec:	sxtb	r3, r3
   3b4f0:	and	r3, r3, #63	; 0x3f
   3b4f4:	sxtb	r3, r3
   3b4f8:	mvn	r3, r3, lsl #25
   3b4fc:	mvn	r3, r3, lsr #25
   3b500:	sxtb	r3, r3
   3b504:	uxtb	r3, r3
   3b508:	strb	r3, [r2]
   3b50c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b510:	add	r2, r3, #3
   3b514:	ldrh	r3, [fp, #-8]
   3b518:	sxtb	r3, r3
   3b51c:	and	r3, r3, #63	; 0x3f
   3b520:	sxtb	r3, r3
   3b524:	mvn	r3, r3, lsl #25
   3b528:	mvn	r3, r3, lsr #25
   3b52c:	sxtb	r3, r3
   3b530:	uxtb	r3, r3
   3b534:	strb	r3, [r2]
   3b538:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b53c:	add	r3, r3, #6
   3b540:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b544:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b548:	mov	r2, #1
   3b54c:	strb	r2, [r3]
   3b550:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b554:	add	r3, r3, #1
   3b558:	mov	r2, #9
   3b55c:	strb	r2, [r3]
   3b560:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b564:	add	r3, r3, #2
   3b568:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b56c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b570:	mov	r2, #1
   3b574:	strb	r2, [r3]
   3b578:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b57c:	add	r3, r3, #1
   3b580:	mov	r2, #10
   3b584:	strb	r2, [r3]
   3b588:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b58c:	add	r3, r3, #2
   3b590:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b598:	mov	r2, #1
   3b59c:	strb	r2, [r3]
   3b5a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b5a4:	add	r3, r3, #1
   3b5a8:	mov	r2, #13
   3b5ac:	strb	r2, [r3]
   3b5b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b5b4:	add	r3, r3, #2
   3b5b8:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b5bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b5c0:	mov	r2, #1
   3b5c4:	strb	r2, [r3]
   3b5c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b5cc:	add	r3, r3, #1
   3b5d0:	mov	r2, #8
   3b5d4:	strb	r2, [r3]
   3b5d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b5dc:	add	r3, r3, #2
   3b5e0:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b5e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b5e8:	mov	r2, #1
   3b5ec:	strb	r2, [r3]
   3b5f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b5f4:	add	r3, r3, #1
   3b5f8:	mov	r2, #12
   3b5fc:	strb	r2, [r3]
   3b600:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b604:	add	r3, r3, #2
   3b608:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b60c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b610:	mov	r2, #1
   3b614:	strb	r2, [r3]
   3b618:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b61c:	add	r3, r3, #1
   3b620:	mov	r2, #34	; 0x22
   3b624:	strb	r2, [r3]
   3b628:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b62c:	add	r3, r3, #2
   3b630:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b638:	mov	r2, #1
   3b63c:	strb	r2, [r3]
   3b640:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b644:	add	r3, r3, #1
   3b648:	mov	r2, #92	; 0x5c
   3b64c:	strb	r2, [r3]
   3b650:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b654:	add	r3, r3, #2
   3b658:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b65c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b660:	mov	r2, #1
   3b664:	strb	r2, [r3]
   3b668:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b66c:	add	r3, r3, #1
   3b670:	mov	r2, #47	; 0x2f
   3b674:	strb	r2, [r3]
   3b678:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b67c:	add	r3, r3, #2
   3b680:	b	3b6a8 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3b684:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b688:	mov	r2, #0
   3b68c:	strb	r2, [r3]
   3b690:	mov	r3, #18
   3b694:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b698:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b69c:	ldr	r0, [fp, #-16]
   3b6a0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3b6a4:	mov	r3, r0
   3b6a8:	mov	r0, r3
   3b6ac:	sub	sp, fp, #4
   3b6b0:	pop	{fp, pc}

0003b6b4 <flatcc_json_parser_skip_constant@@Base>:
   3b6b4:	push	{fp, lr}
   3b6b8:	add	fp, sp, #4
   3b6bc:	sub	sp, sp, #24
   3b6c0:	str	r0, [fp, #-16]
   3b6c4:	str	r1, [fp, #-20]	; 0xffffffec
   3b6c8:	str	r2, [fp, #-24]	; 0xffffffe8
   3b6cc:	b	3b790 <flatcc_json_parser_skip_constant@@Base+0xdc>
   3b6d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b6d4:	ldrb	r3, [r3]
   3b6d8:	strb	r3, [fp, #-5]
   3b6dc:	ldrsb	r3, [fp, #-5]
   3b6e0:	cmp	r3, #0
   3b6e4:	blt	3b718 <flatcc_json_parser_skip_constant@@Base+0x64>
   3b6e8:	ldrb	r3, [fp, #-5]
   3b6ec:	cmp	r3, #95	; 0x5f
   3b6f0:	beq	3b718 <flatcc_json_parser_skip_constant@@Base+0x64>
   3b6f4:	ldrb	r3, [fp, #-5]
   3b6f8:	cmp	r3, #47	; 0x2f
   3b6fc:	bls	3b70c <flatcc_json_parser_skip_constant@@Base+0x58>
   3b700:	ldrb	r3, [fp, #-5]
   3b704:	cmp	r3, #57	; 0x39
   3b708:	bls	3b718 <flatcc_json_parser_skip_constant@@Base+0x64>
   3b70c:	ldrb	r3, [fp, #-5]
   3b710:	cmp	r3, #46	; 0x2e
   3b714:	bne	3b728 <flatcc_json_parser_skip_constant@@Base+0x74>
   3b718:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b71c:	add	r3, r3, #1
   3b720:	str	r3, [fp, #-20]	; 0xffffffec
   3b724:	b	3b790 <flatcc_json_parser_skip_constant@@Base+0xdc>
   3b728:	ldrb	r3, [fp, #-5]
   3b72c:	orr	r3, r3, #32
   3b730:	strb	r3, [fp, #-5]
   3b734:	ldrb	r3, [fp, #-5]
   3b738:	cmp	r3, #96	; 0x60
   3b73c:	bls	3b75c <flatcc_json_parser_skip_constant@@Base+0xa8>
   3b740:	ldrb	r3, [fp, #-5]
   3b744:	cmp	r3, #122	; 0x7a
   3b748:	bhi	3b75c <flatcc_json_parser_skip_constant@@Base+0xa8>
   3b74c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b750:	add	r3, r3, #1
   3b754:	str	r3, [fp, #-20]	; 0xffffffec
   3b758:	b	3b790 <flatcc_json_parser_skip_constant@@Base+0xdc>
   3b75c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b760:	str	r3, [fp, #-12]
   3b764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b768:	ldr	r1, [fp, #-12]
   3b76c:	ldr	r0, [fp, #-16]
   3b770:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3b774:	str	r0, [fp, #-20]	; 0xffffffec
   3b778:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b77c:	ldr	r3, [fp, #-12]
   3b780:	cmp	r2, r3
   3b784:	bne	3b790 <flatcc_json_parser_skip_constant@@Base+0xdc>
   3b788:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b78c:	b	3b7a4 <flatcc_json_parser_skip_constant@@Base+0xf0>
   3b790:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b794:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b798:	cmp	r2, r3
   3b79c:	bne	3b6d0 <flatcc_json_parser_skip_constant@@Base+0x1c>
   3b7a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b7a4:	mov	r0, r3
   3b7a8:	sub	sp, fp, #4
   3b7ac:	pop	{fp, pc}

0003b7b0 <flatcc_json_parser_match_constant@@Base>:
   3b7b0:	push	{fp, lr}
   3b7b4:	add	fp, sp, #4
   3b7b8:	sub	sp, sp, #32
   3b7bc:	str	r0, [fp, #-24]	; 0xffffffe8
   3b7c0:	str	r1, [fp, #-28]	; 0xffffffe4
   3b7c4:	str	r2, [fp, #-32]	; 0xffffffe0
   3b7c8:	str	r3, [fp, #-36]	; 0xffffffdc
   3b7cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b7d0:	str	r3, [fp, #-8]
   3b7d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b7d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b7dc:	add	r3, r2, r3
   3b7e0:	str	r3, [fp, #-12]
   3b7e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b7e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b7ec:	sub	r2, r2, r3
   3b7f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b7f4:	cmp	r2, r3
   3b7f8:	bgt	3b810 <flatcc_json_parser_match_constant@@Base+0x60>
   3b7fc:	ldr	r3, [fp, #4]
   3b800:	mov	r2, #0
   3b804:	str	r2, [r3]
   3b808:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b80c:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3b810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b814:	ldr	r3, [r3, #12]
   3b818:	cmp	r3, #0
   3b81c:	beq	3b924 <flatcc_json_parser_match_constant@@Base+0x174>
   3b820:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b824:	ldr	r1, [fp, #-12]
   3b828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b82c:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3b830:	str	r0, [fp, #-28]	; 0xffffffe4
   3b834:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b838:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b83c:	cmp	r2, r3
   3b840:	bne	3b858 <flatcc_json_parser_match_constant@@Base+0xa8>
   3b844:	ldr	r3, [fp, #4]
   3b848:	mov	r2, #0
   3b84c:	str	r2, [r3]
   3b850:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b854:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3b858:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b85c:	ldr	r3, [fp, #-12]
   3b860:	cmp	r2, r3
   3b864:	beq	3b8d8 <flatcc_json_parser_match_constant@@Base+0x128>
   3b868:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b86c:	ldrb	r3, [r3]
   3b870:	strb	r3, [fp, #-13]
   3b874:	ldrb	r3, [fp, #-13]
   3b878:	cmp	r3, #95	; 0x5f
   3b87c:	beq	3b88c <flatcc_json_parser_match_constant@@Base+0xdc>
   3b880:	ldrsb	r3, [fp, #-13]
   3b884:	cmp	r3, #0
   3b888:	bge	3b8a0 <flatcc_json_parser_match_constant@@Base+0xf0>
   3b88c:	ldr	r3, [fp, #4]
   3b890:	mov	r2, #1
   3b894:	str	r2, [r3]
   3b898:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b89c:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3b8a0:	ldrb	r3, [fp, #-13]
   3b8a4:	orr	r3, r3, #32
   3b8a8:	strb	r3, [fp, #-13]
   3b8ac:	ldrb	r3, [fp, #-13]
   3b8b0:	cmp	r3, #96	; 0x60
   3b8b4:	bls	3b8d8 <flatcc_json_parser_match_constant@@Base+0x128>
   3b8b8:	ldrb	r3, [fp, #-13]
   3b8bc:	cmp	r3, #122	; 0x7a
   3b8c0:	bhi	3b8d8 <flatcc_json_parser_match_constant@@Base+0x128>
   3b8c4:	ldr	r3, [fp, #4]
   3b8c8:	mov	r2, #1
   3b8cc:	str	r2, [r3]
   3b8d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b8d4:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3b8d8:	ldr	r3, [fp, #4]
   3b8dc:	mov	r2, #0
   3b8e0:	str	r2, [r3]
   3b8e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b8e8:	ldrb	r3, [r3]
   3b8ec:	cmp	r3, #44	; 0x2c
   3b8f0:	beq	3b914 <flatcc_json_parser_match_constant@@Base+0x164>
   3b8f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b8f8:	ldrb	r3, [r3]
   3b8fc:	cmp	r3, #125	; 0x7d
   3b900:	beq	3b914 <flatcc_json_parser_match_constant@@Base+0x164>
   3b904:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b908:	ldrb	r3, [r3]
   3b90c:	cmp	r3, #93	; 0x5d
   3b910:	bne	3b91c <flatcc_json_parser_match_constant@@Base+0x16c>
   3b914:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b918:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3b91c:	ldr	r3, [fp, #-8]
   3b920:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3b924:	ldr	r3, [fp, #-12]
   3b928:	str	r3, [fp, #-28]	; 0xffffffe4
   3b92c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b930:	ldrb	r3, [r3]
   3b934:	cmp	r3, #32
   3b938:	bne	3b9c0 <flatcc_json_parser_match_constant@@Base+0x210>
   3b93c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b940:	add	r3, r3, #1
   3b944:	str	r3, [fp, #-28]	; 0xffffffe4
   3b948:	b	3b958 <flatcc_json_parser_match_constant@@Base+0x1a8>
   3b94c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b950:	add	r3, r3, #1
   3b954:	str	r3, [fp, #-28]	; 0xffffffe4
   3b958:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b95c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b960:	cmp	r2, r3
   3b964:	beq	3b978 <flatcc_json_parser_match_constant@@Base+0x1c8>
   3b968:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b96c:	ldrb	r3, [r3]
   3b970:	cmp	r3, #32
   3b974:	beq	3b94c <flatcc_json_parser_match_constant@@Base+0x19c>
   3b978:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b97c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b980:	cmp	r2, r3
   3b984:	bne	3b99c <flatcc_json_parser_match_constant@@Base+0x1ec>
   3b988:	ldr	r3, [fp, #4]
   3b98c:	mov	r2, #0
   3b990:	str	r2, [r3]
   3b994:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b998:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3b99c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b9a0:	ldrb	r3, [r3]
   3b9a4:	cmp	r3, #34	; 0x22
   3b9a8:	beq	3b9c0 <flatcc_json_parser_match_constant@@Base+0x210>
   3b9ac:	ldr	r3, [fp, #4]
   3b9b0:	mov	r2, #1
   3b9b4:	str	r2, [r3]
   3b9b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b9bc:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3b9c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b9c4:	ldrb	r3, [r3]
   3b9c8:	cmp	r3, #34	; 0x22
   3b9cc:	beq	3ba00 <flatcc_json_parser_match_constant@@Base+0x250>
   3b9d0:	cmp	r3, #92	; 0x5c
   3b9d4:	bne	3ba30 <flatcc_json_parser_match_constant@@Base+0x280>
   3b9d8:	ldr	r3, [fp, #4]
   3b9dc:	mov	r2, #0
   3b9e0:	str	r2, [r3]
   3b9e4:	mov	r3, #18
   3b9e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b9ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b9f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b9f4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3b9f8:	mov	r3, r0
   3b9fc:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3ba00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ba04:	add	r3, r3, #1
   3ba08:	mov	r2, #0
   3ba0c:	mov	r1, r3
   3ba10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ba14:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3ba18:	str	r0, [fp, #-28]	; 0xffffffe4
   3ba1c:	ldr	r3, [fp, #4]
   3ba20:	mov	r2, #0
   3ba24:	str	r2, [r3]
   3ba28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ba2c:	b	3ba40 <flatcc_json_parser_match_constant@@Base+0x290>
   3ba30:	ldr	r3, [fp, #4]
   3ba34:	mov	r2, #0
   3ba38:	str	r2, [r3]
   3ba3c:	ldr	r3, [fp, #-8]
   3ba40:	mov	r0, r3
   3ba44:	sub	sp, fp, #4
   3ba48:	pop	{fp, pc}

0003ba4c <flatcc_json_parser_unmatched_symbol@@Base>:
   3ba4c:	push	{fp, lr}
   3ba50:	add	fp, sp, #4
   3ba54:	sub	sp, sp, #16
   3ba58:	str	r0, [fp, #-8]
   3ba5c:	str	r1, [fp, #-12]
   3ba60:	str	r2, [fp, #-16]
   3ba64:	ldr	r3, [fp, #-8]
   3ba68:	ldr	r3, [r3, #8]
   3ba6c:	and	r3, r3, #1
   3ba70:	cmp	r3, #0
   3ba74:	beq	3bb14 <flatcc_json_parser_unmatched_symbol@@Base+0xc8>
   3ba78:	ldr	r2, [fp, #-16]
   3ba7c:	ldr	r1, [fp, #-12]
   3ba80:	ldr	r0, [fp, #-8]
   3ba84:	bl	35dec <flatcc_verify_union_vector_field@@Base+0x534>
   3ba88:	str	r0, [fp, #-12]
   3ba8c:	ldr	r2, [fp, #-16]
   3ba90:	ldr	r1, [fp, #-12]
   3ba94:	ldr	r0, [fp, #-8]
   3ba98:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3ba9c:	str	r0, [fp, #-12]
   3baa0:	ldr	r2, [fp, #-12]
   3baa4:	ldr	r3, [fp, #-16]
   3baa8:	cmp	r2, r3
   3baac:	beq	3baf8 <flatcc_json_parser_unmatched_symbol@@Base+0xac>
   3bab0:	ldr	r3, [fp, #-12]
   3bab4:	ldrb	r3, [r3]
   3bab8:	cmp	r3, #58	; 0x3a
   3babc:	bne	3baf8 <flatcc_json_parser_unmatched_symbol@@Base+0xac>
   3bac0:	ldr	r3, [fp, #-12]
   3bac4:	add	r3, r3, #1
   3bac8:	str	r3, [fp, #-12]
   3bacc:	ldr	r2, [fp, #-16]
   3bad0:	ldr	r1, [fp, #-12]
   3bad4:	ldr	r0, [fp, #-8]
   3bad8:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3badc:	str	r0, [fp, #-12]
   3bae0:	ldr	r2, [fp, #-16]
   3bae4:	ldr	r1, [fp, #-12]
   3bae8:	ldr	r0, [fp, #-8]
   3baec:	bl	3c210 <flatcc_json_parser_generic_json@@Base>
   3baf0:	mov	r3, r0
   3baf4:	b	3bb2c <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   3baf8:	mov	r3, #4
   3bafc:	ldr	r2, [fp, #-16]
   3bb00:	ldr	r1, [fp, #-12]
   3bb04:	ldr	r0, [fp, #-8]
   3bb08:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3bb0c:	mov	r3, r0
   3bb10:	b	3bb2c <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   3bb14:	mov	r3, #13
   3bb18:	ldr	r2, [fp, #-16]
   3bb1c:	ldr	r1, [fp, #-12]
   3bb20:	ldr	r0, [fp, #-8]
   3bb24:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3bb28:	mov	r3, r0
   3bb2c:	mov	r0, r3
   3bb30:	sub	sp, fp, #4
   3bb34:	pop	{fp, pc}
   3bb38:	push	{fp, lr}
   3bb3c:	add	fp, sp, #4
   3bb40:	sub	sp, sp, #16
   3bb44:	str	r0, [fp, #-8]
   3bb48:	str	r1, [fp, #-12]
   3bb4c:	str	r2, [fp, #-16]
   3bb50:	ldr	r2, [fp, #-12]
   3bb54:	ldr	r3, [fp, #-16]
   3bb58:	cmp	r2, r3
   3bb5c:	bne	3bb68 <flatcc_json_parser_unmatched_symbol@@Base+0x11c>
   3bb60:	ldr	r3, [fp, #-12]
   3bb64:	b	3bec8 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3bb68:	ldr	r3, [fp, #-12]
   3bb6c:	ldrb	r3, [r3]
   3bb70:	cmp	r3, #45	; 0x2d
   3bb74:	bne	3bbb0 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   3bb78:	ldr	r3, [fp, #-12]
   3bb7c:	add	r3, r3, #1
   3bb80:	str	r3, [fp, #-12]
   3bb84:	ldr	r2, [fp, #-12]
   3bb88:	ldr	r3, [fp, #-16]
   3bb8c:	cmp	r2, r3
   3bb90:	bne	3bbb0 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   3bb94:	mov	r3, #6
   3bb98:	ldr	r2, [fp, #-16]
   3bb9c:	ldr	r1, [fp, #-12]
   3bba0:	ldr	r0, [fp, #-8]
   3bba4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3bba8:	mov	r3, r0
   3bbac:	b	3bec8 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3bbb0:	ldr	r3, [fp, #-12]
   3bbb4:	ldrb	r3, [r3]
   3bbb8:	cmp	r3, #48	; 0x30
   3bbbc:	bne	3bbd0 <flatcc_json_parser_unmatched_symbol@@Base+0x184>
   3bbc0:	ldr	r3, [fp, #-12]
   3bbc4:	add	r3, r3, #1
   3bbc8:	str	r3, [fp, #-12]
   3bbcc:	b	3bc58 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   3bbd0:	ldr	r3, [fp, #-12]
   3bbd4:	ldrb	r3, [r3]
   3bbd8:	cmp	r3, #48	; 0x30
   3bbdc:	bls	3bbf0 <flatcc_json_parser_unmatched_symbol@@Base+0x1a4>
   3bbe0:	ldr	r3, [fp, #-12]
   3bbe4:	ldrb	r3, [r3]
   3bbe8:	cmp	r3, #57	; 0x39
   3bbec:	bls	3bc0c <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   3bbf0:	mov	r3, #6
   3bbf4:	ldr	r2, [fp, #-16]
   3bbf8:	ldr	r1, [fp, #-12]
   3bbfc:	ldr	r0, [fp, #-8]
   3bc00:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3bc04:	mov	r3, r0
   3bc08:	b	3bec8 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3bc0c:	ldr	r3, [fp, #-12]
   3bc10:	add	r3, r3, #1
   3bc14:	str	r3, [fp, #-12]
   3bc18:	b	3bc28 <flatcc_json_parser_unmatched_symbol@@Base+0x1dc>
   3bc1c:	ldr	r3, [fp, #-12]
   3bc20:	add	r3, r3, #1
   3bc24:	str	r3, [fp, #-12]
   3bc28:	ldr	r2, [fp, #-12]
   3bc2c:	ldr	r3, [fp, #-16]
   3bc30:	cmp	r2, r3
   3bc34:	beq	3bc58 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   3bc38:	ldr	r3, [fp, #-12]
   3bc3c:	ldrb	r3, [r3]
   3bc40:	cmp	r3, #47	; 0x2f
   3bc44:	bls	3bc58 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   3bc48:	ldr	r3, [fp, #-12]
   3bc4c:	ldrb	r3, [r3]
   3bc50:	cmp	r3, #57	; 0x39
   3bc54:	bls	3bc1c <flatcc_json_parser_unmatched_symbol@@Base+0x1d0>
   3bc58:	ldr	r2, [fp, #-12]
   3bc5c:	ldr	r3, [fp, #-16]
   3bc60:	cmp	r2, r3
   3bc64:	beq	3bd0c <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   3bc68:	ldr	r3, [fp, #-12]
   3bc6c:	ldrb	r3, [r3]
   3bc70:	cmp	r3, #46	; 0x2e
   3bc74:	bne	3bd0c <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   3bc78:	ldr	r3, [fp, #-12]
   3bc7c:	add	r3, r3, #1
   3bc80:	str	r3, [fp, #-12]
   3bc84:	ldr	r3, [fp, #-12]
   3bc88:	ldrb	r3, [r3]
   3bc8c:	cmp	r3, #47	; 0x2f
   3bc90:	bls	3bca4 <flatcc_json_parser_unmatched_symbol@@Base+0x258>
   3bc94:	ldr	r3, [fp, #-12]
   3bc98:	ldrb	r3, [r3]
   3bc9c:	cmp	r3, #57	; 0x39
   3bca0:	bls	3bcc0 <flatcc_json_parser_unmatched_symbol@@Base+0x274>
   3bca4:	mov	r3, #6
   3bca8:	ldr	r2, [fp, #-16]
   3bcac:	ldr	r1, [fp, #-12]
   3bcb0:	ldr	r0, [fp, #-8]
   3bcb4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3bcb8:	mov	r3, r0
   3bcbc:	b	3bec8 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3bcc0:	ldr	r3, [fp, #-12]
   3bcc4:	add	r3, r3, #1
   3bcc8:	str	r3, [fp, #-12]
   3bccc:	b	3bcdc <flatcc_json_parser_unmatched_symbol@@Base+0x290>
   3bcd0:	ldr	r3, [fp, #-12]
   3bcd4:	add	r3, r3, #1
   3bcd8:	str	r3, [fp, #-12]
   3bcdc:	ldr	r2, [fp, #-12]
   3bce0:	ldr	r3, [fp, #-16]
   3bce4:	cmp	r2, r3
   3bce8:	beq	3bd0c <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   3bcec:	ldr	r3, [fp, #-12]
   3bcf0:	ldrb	r3, [r3]
   3bcf4:	cmp	r3, #47	; 0x2f
   3bcf8:	bls	3bd0c <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   3bcfc:	ldr	r3, [fp, #-12]
   3bd00:	ldrb	r3, [r3]
   3bd04:	cmp	r3, #57	; 0x39
   3bd08:	bls	3bcd0 <flatcc_json_parser_unmatched_symbol@@Base+0x284>
   3bd0c:	ldr	r2, [fp, #-12]
   3bd10:	ldr	r3, [fp, #-16]
   3bd14:	cmp	r2, r3
   3bd18:	beq	3be38 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   3bd1c:	ldr	r3, [fp, #-12]
   3bd20:	ldrb	r3, [r3]
   3bd24:	cmp	r3, #101	; 0x65
   3bd28:	beq	3bd3c <flatcc_json_parser_unmatched_symbol@@Base+0x2f0>
   3bd2c:	ldr	r3, [fp, #-12]
   3bd30:	ldrb	r3, [r3]
   3bd34:	cmp	r3, #69	; 0x45
   3bd38:	bne	3be38 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   3bd3c:	ldr	r3, [fp, #-12]
   3bd40:	add	r3, r3, #1
   3bd44:	str	r3, [fp, #-12]
   3bd48:	ldr	r2, [fp, #-12]
   3bd4c:	ldr	r3, [fp, #-16]
   3bd50:	cmp	r2, r3
   3bd54:	bne	3bd74 <flatcc_json_parser_unmatched_symbol@@Base+0x328>
   3bd58:	mov	r3, #6
   3bd5c:	ldr	r2, [fp, #-16]
   3bd60:	ldr	r1, [fp, #-12]
   3bd64:	ldr	r0, [fp, #-8]
   3bd68:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3bd6c:	mov	r3, r0
   3bd70:	b	3bec8 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3bd74:	ldr	r3, [fp, #-12]
   3bd78:	ldrb	r3, [r3]
   3bd7c:	cmp	r3, #43	; 0x2b
   3bd80:	beq	3bd94 <flatcc_json_parser_unmatched_symbol@@Base+0x348>
   3bd84:	ldr	r3, [fp, #-12]
   3bd88:	ldrb	r3, [r3]
   3bd8c:	cmp	r3, #45	; 0x2d
   3bd90:	bne	3bda0 <flatcc_json_parser_unmatched_symbol@@Base+0x354>
   3bd94:	ldr	r3, [fp, #-12]
   3bd98:	add	r3, r3, #1
   3bd9c:	str	r3, [fp, #-12]
   3bda0:	ldr	r2, [fp, #-12]
   3bda4:	ldr	r3, [fp, #-16]
   3bda8:	cmp	r2, r3
   3bdac:	beq	3bdd0 <flatcc_json_parser_unmatched_symbol@@Base+0x384>
   3bdb0:	ldr	r3, [fp, #-12]
   3bdb4:	ldrb	r3, [r3]
   3bdb8:	cmp	r3, #47	; 0x2f
   3bdbc:	bls	3bdd0 <flatcc_json_parser_unmatched_symbol@@Base+0x384>
   3bdc0:	ldr	r3, [fp, #-12]
   3bdc4:	ldrb	r3, [r3]
   3bdc8:	cmp	r3, #57	; 0x39
   3bdcc:	bls	3bdec <flatcc_json_parser_unmatched_symbol@@Base+0x3a0>
   3bdd0:	mov	r3, #6
   3bdd4:	ldr	r2, [fp, #-16]
   3bdd8:	ldr	r1, [fp, #-12]
   3bddc:	ldr	r0, [fp, #-8]
   3bde0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3bde4:	mov	r3, r0
   3bde8:	b	3bec8 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3bdec:	ldr	r3, [fp, #-12]
   3bdf0:	add	r3, r3, #1
   3bdf4:	str	r3, [fp, #-12]
   3bdf8:	b	3be08 <flatcc_json_parser_unmatched_symbol@@Base+0x3bc>
   3bdfc:	ldr	r3, [fp, #-12]
   3be00:	add	r3, r3, #1
   3be04:	str	r3, [fp, #-12]
   3be08:	ldr	r2, [fp, #-12]
   3be0c:	ldr	r3, [fp, #-16]
   3be10:	cmp	r2, r3
   3be14:	beq	3be38 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   3be18:	ldr	r3, [fp, #-12]
   3be1c:	ldrb	r3, [r3]
   3be20:	cmp	r3, #47	; 0x2f
   3be24:	bls	3be38 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   3be28:	ldr	r3, [fp, #-12]
   3be2c:	ldrb	r3, [r3]
   3be30:	cmp	r3, #57	; 0x39
   3be34:	bls	3bdfc <flatcc_json_parser_unmatched_symbol@@Base+0x3b0>
   3be38:	ldr	r2, [fp, #-12]
   3be3c:	ldr	r3, [fp, #-16]
   3be40:	cmp	r2, r3
   3be44:	beq	3beb0 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3be48:	ldr	r3, [fp, #-12]
   3be4c:	ldrb	r3, [r3]
   3be50:	cmp	r3, #32
   3be54:	beq	3bea8 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3be58:	cmp	r3, #32
   3be5c:	bgt	3be7c <flatcc_json_parser_unmatched_symbol@@Base+0x430>
   3be60:	cmp	r3, #9
   3be64:	blt	3beb0 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3be68:	cmp	r3, #11
   3be6c:	ble	3bea8 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3be70:	cmp	r3, #13
   3be74:	beq	3bea8 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3be78:	b	3beb0 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3be7c:	cmp	r3, #58	; 0x3a
   3be80:	beq	3bea8 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3be84:	cmp	r3, #58	; 0x3a
   3be88:	bgt	3be98 <flatcc_json_parser_unmatched_symbol@@Base+0x44c>
   3be8c:	cmp	r3, #44	; 0x2c
   3be90:	beq	3bea8 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3be94:	b	3beb0 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3be98:	cmp	r3, #93	; 0x5d
   3be9c:	beq	3bea8 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3bea0:	cmp	r3, #125	; 0x7d
   3bea4:	bne	3beb0 <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3bea8:	ldr	r3, [fp, #-12]
   3beac:	b	3bec8 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3beb0:	mov	r3, #6
   3beb4:	ldr	r2, [fp, #-16]
   3beb8:	ldr	r1, [fp, #-12]
   3bebc:	ldr	r0, [fp, #-8]
   3bec0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3bec4:	mov	r3, r0
   3bec8:	mov	r0, r3
   3becc:	sub	sp, fp, #4
   3bed0:	pop	{fp, pc}

0003bed4 <flatcc_json_parser_double@@Base>:
   3bed4:	push	{fp, lr}
   3bed8:	add	fp, sp, #4
   3bedc:	sub	sp, sp, #24
   3bee0:	str	r0, [fp, #-16]
   3bee4:	str	r1, [fp, #-20]	; 0xffffffec
   3bee8:	str	r2, [fp, #-24]	; 0xffffffe8
   3beec:	str	r3, [fp, #-28]	; 0xffffffe4
   3bef0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bef4:	mov	r2, #0
   3bef8:	mov	r3, #0
   3befc:	strd	r2, [r1]
   3bf00:	ldr	r2, [fp, #-20]	; 0xffffffec
   3bf04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bf08:	cmp	r2, r3
   3bf0c:	bne	3bf18 <flatcc_json_parser_double@@Base+0x44>
   3bf10:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bf14:	b	3c060 <flatcc_json_parser_double@@Base+0x18c>
   3bf18:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bf1c:	str	r3, [fp, #-8]
   3bf20:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bf24:	ldrb	r3, [r3]
   3bf28:	cmp	r3, #45	; 0x2d
   3bf2c:	bne	3bf3c <flatcc_json_parser_double@@Base+0x68>
   3bf30:	ldr	r3, [fp, #-8]
   3bf34:	add	r3, r3, #1
   3bf38:	str	r3, [fp, #-8]
   3bf3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bf40:	ldr	r3, [fp, #-8]
   3bf44:	sub	r3, r2, r3
   3bf48:	cmp	r3, #1
   3bf4c:	ble	3bfa0 <flatcc_json_parser_double@@Base+0xcc>
   3bf50:	ldr	r3, [fp, #-8]
   3bf54:	ldrb	r3, [r3]
   3bf58:	cmp	r3, #46	; 0x2e
   3bf5c:	beq	3bf84 <flatcc_json_parser_double@@Base+0xb0>
   3bf60:	ldr	r3, [fp, #-8]
   3bf64:	ldrb	r3, [r3]
   3bf68:	cmp	r3, #48	; 0x30
   3bf6c:	bne	3bfa0 <flatcc_json_parser_double@@Base+0xcc>
   3bf70:	ldr	r3, [fp, #-8]
   3bf74:	add	r3, r3, #1
   3bf78:	ldrb	r3, [r3]
   3bf7c:	cmp	r3, #48	; 0x30
   3bf80:	bne	3bfa0 <flatcc_json_parser_double@@Base+0xcc>
   3bf84:	mov	r3, #6
   3bf88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bf8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bf90:	ldr	r0, [fp, #-16]
   3bf94:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3bf98:	mov	r3, r0
   3bf9c:	b	3c060 <flatcc_json_parser_double@@Base+0x18c>
   3bfa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bfa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bfa8:	sub	r3, r2, r3
   3bfac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3bfb0:	mov	r1, r3
   3bfb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3bfb8:	bl	39a7c <grisu3_diy_fp_encode_double@@Base+0x140c>
   3bfbc:	str	r0, [fp, #-12]
   3bfc0:	ldr	r3, [fp, #-12]
   3bfc4:	cmp	r3, #0
   3bfc8:	beq	3bfdc <flatcc_json_parser_double@@Base+0x108>
   3bfcc:	ldr	r2, [fp, #-12]
   3bfd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bfd4:	cmp	r2, r3
   3bfd8:	bne	3c05c <flatcc_json_parser_double@@Base+0x188>
   3bfdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bfe0:	vldr	d7, [r3]
   3bfe4:	vabs.f64	d7, d7
   3bfe8:	vldr	d6, [pc, #128]	; 3c070 <flatcc_json_parser_double@@Base+0x19c>
   3bfec:	vcmp.f64	d7, d6
   3bff0:	vmrs	APSR_nzcv, fpscr
   3bff4:	movle	r3, #1
   3bff8:	movgt	r3, #0
   3bffc:	uxtb	r3, r3
   3c000:	eor	r3, r3, #1
   3c004:	uxtb	r3, r3
   3c008:	cmp	r3, #0
   3c00c:	beq	3c018 <flatcc_json_parser_double@@Base+0x144>
   3c010:	mov	r3, #1
   3c014:	b	3c01c <flatcc_json_parser_double@@Base+0x148>
   3c018:	mov	r3, #0
   3c01c:	cmp	r3, #0
   3c020:	beq	3c040 <flatcc_json_parser_double@@Base+0x16c>
   3c024:	mov	r3, #7
   3c028:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c02c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c030:	ldr	r0, [fp, #-16]
   3c034:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c038:	mov	r3, r0
   3c03c:	b	3c060 <flatcc_json_parser_double@@Base+0x18c>
   3c040:	mov	r3, #6
   3c044:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c048:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c04c:	ldr	r0, [fp, #-16]
   3c050:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c054:	mov	r3, r0
   3c058:	b	3c060 <flatcc_json_parser_double@@Base+0x18c>
   3c05c:	ldr	r3, [fp, #-12]
   3c060:	mov	r0, r3
   3c064:	sub	sp, fp, #4
   3c068:	pop	{fp, pc}
   3c06c:	nop			; (mov r0, r0)
   3c070:			; <UNDEFINED> instruction: 0xffffffff
   3c074:	svcvc	0x00efffff

0003c078 <flatcc_json_parser_float@@Base>:
   3c078:	push	{fp, lr}
   3c07c:	add	fp, sp, #4
   3c080:	sub	sp, sp, #24
   3c084:	str	r0, [fp, #-16]
   3c088:	str	r1, [fp, #-20]	; 0xffffffec
   3c08c:	str	r2, [fp, #-24]	; 0xffffffe8
   3c090:	str	r3, [fp, #-28]	; 0xffffffe4
   3c094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c098:	mov	r2, #0
   3c09c:	str	r2, [r3]
   3c0a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c0a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c0a8:	cmp	r2, r3
   3c0ac:	bne	3c0b8 <flatcc_json_parser_float@@Base+0x40>
   3c0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c0b4:	b	3c200 <flatcc_json_parser_float@@Base+0x188>
   3c0b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c0bc:	str	r3, [fp, #-8]
   3c0c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c0c4:	ldrb	r3, [r3]
   3c0c8:	cmp	r3, #45	; 0x2d
   3c0cc:	bne	3c0dc <flatcc_json_parser_float@@Base+0x64>
   3c0d0:	ldr	r3, [fp, #-8]
   3c0d4:	add	r3, r3, #1
   3c0d8:	str	r3, [fp, #-8]
   3c0dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c0e0:	ldr	r3, [fp, #-8]
   3c0e4:	sub	r3, r2, r3
   3c0e8:	cmp	r3, #1
   3c0ec:	ble	3c140 <flatcc_json_parser_float@@Base+0xc8>
   3c0f0:	ldr	r3, [fp, #-8]
   3c0f4:	ldrb	r3, [r3]
   3c0f8:	cmp	r3, #46	; 0x2e
   3c0fc:	beq	3c124 <flatcc_json_parser_float@@Base+0xac>
   3c100:	ldr	r3, [fp, #-8]
   3c104:	ldrb	r3, [r3]
   3c108:	cmp	r3, #48	; 0x30
   3c10c:	bne	3c140 <flatcc_json_parser_float@@Base+0xc8>
   3c110:	ldr	r3, [fp, #-8]
   3c114:	add	r3, r3, #1
   3c118:	ldrb	r3, [r3]
   3c11c:	cmp	r3, #48	; 0x30
   3c120:	bne	3c140 <flatcc_json_parser_float@@Base+0xc8>
   3c124:	mov	r3, #6
   3c128:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c12c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c130:	ldr	r0, [fp, #-16]
   3c134:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c138:	mov	r3, r0
   3c13c:	b	3c200 <flatcc_json_parser_float@@Base+0x188>
   3c140:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c144:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c148:	sub	r3, r2, r3
   3c14c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c150:	mov	r1, r3
   3c154:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c158:	bl	39ab4 <grisu3_diy_fp_encode_double@@Base+0x1444>
   3c15c:	str	r0, [fp, #-12]
   3c160:	ldr	r3, [fp, #-12]
   3c164:	cmp	r3, #0
   3c168:	beq	3c17c <flatcc_json_parser_float@@Base+0x104>
   3c16c:	ldr	r2, [fp, #-12]
   3c170:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c174:	cmp	r2, r3
   3c178:	bne	3c1fc <flatcc_json_parser_float@@Base+0x184>
   3c17c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c180:	vldr	s15, [r3]
   3c184:	vabs.f32	s15, s15
   3c188:	vldr	s14, [pc, #124]	; 3c20c <flatcc_json_parser_float@@Base+0x194>
   3c18c:	vcmp.f32	s15, s14
   3c190:	vmrs	APSR_nzcv, fpscr
   3c194:	movle	r3, #1
   3c198:	movgt	r3, #0
   3c19c:	uxtb	r3, r3
   3c1a0:	eor	r3, r3, #1
   3c1a4:	uxtb	r3, r3
   3c1a8:	cmp	r3, #0
   3c1ac:	beq	3c1b8 <flatcc_json_parser_float@@Base+0x140>
   3c1b0:	mov	r3, #1
   3c1b4:	b	3c1bc <flatcc_json_parser_float@@Base+0x144>
   3c1b8:	mov	r3, #0
   3c1bc:	cmp	r3, #0
   3c1c0:	beq	3c1e0 <flatcc_json_parser_float@@Base+0x168>
   3c1c4:	mov	r3, #7
   3c1c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c1cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c1d0:	ldr	r0, [fp, #-16]
   3c1d4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c1d8:	mov	r3, r0
   3c1dc:	b	3c200 <flatcc_json_parser_float@@Base+0x188>
   3c1e0:	mov	r3, #6
   3c1e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c1e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c1ec:	ldr	r0, [fp, #-16]
   3c1f0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c1f4:	mov	r3, r0
   3c1f8:	b	3c200 <flatcc_json_parser_float@@Base+0x188>
   3c1fc:	ldr	r3, [fp, #-12]
   3c200:	mov	r0, r3
   3c204:	sub	sp, fp, #4
   3c208:	pop	{fp, pc}
   3c20c:	svcvc	0x007fffff

0003c210 <flatcc_json_parser_generic_json@@Base>:
   3c210:	push	{fp, lr}
   3c214:	add	fp, sp, #4
   3c218:	sub	sp, sp, #552	; 0x228
   3c21c:	str	r0, [fp, #-544]	; 0xfffffde0
   3c220:	str	r1, [fp, #-548]	; 0xfffffddc
   3c224:	str	r2, [fp, #-552]	; 0xfffffdd8
   3c228:	mov	r3, #0
   3c22c:	str	r3, [fp, #-536]	; 0xfffffde8
   3c230:	sub	r3, fp, #528	; 0x210
   3c234:	str	r3, [fp, #-8]
   3c238:	ldr	r3, [fp, #-8]
   3c23c:	add	r3, r3, #512	; 0x200
   3c240:	str	r3, [fp, #-12]
   3c244:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3c248:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3c24c:	cmp	r2, r3
   3c250:	bne	3c25c <flatcc_json_parser_generic_json@@Base+0x4c>
   3c254:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c258:	b	3c674 <flatcc_json_parser_generic_json@@Base+0x464>
   3c25c:	sub	r3, fp, #528	; 0x210
   3c260:	ldr	r2, [fp, #-8]
   3c264:	cmp	r2, r3
   3c268:	beq	3c330 <flatcc_json_parser_generic_json@@Base+0x120>
   3c26c:	ldr	r3, [fp, #-8]
   3c270:	sub	r3, r3, #1
   3c274:	ldrb	r3, [r3]
   3c278:	cmp	r3, #125	; 0x7d
   3c27c:	bne	3c330 <flatcc_json_parser_generic_json@@Base+0x120>
   3c280:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c284:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c288:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c28c:	bl	35d48 <flatcc_verify_union_vector_field@@Base+0x490>
   3c290:	str	r0, [fp, #-548]	; 0xfffffddc
   3c294:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c298:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c29c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c2a0:	bl	35dec <flatcc_verify_union_vector_field@@Base+0x534>
   3c2a4:	str	r0, [fp, #-548]	; 0xfffffddc
   3c2a8:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c2ac:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c2b0:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c2b4:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3c2b8:	str	r0, [fp, #-548]	; 0xfffffddc
   3c2bc:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3c2c0:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3c2c4:	cmp	r2, r3
   3c2c8:	bne	3c2e8 <flatcc_json_parser_generic_json@@Base+0xd8>
   3c2cc:	mov	r3, #10
   3c2d0:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c2d4:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c2d8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c2dc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c2e0:	mov	r3, r0
   3c2e4:	b	3c674 <flatcc_json_parser_generic_json@@Base+0x464>
   3c2e8:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c2ec:	ldrb	r3, [r3]
   3c2f0:	cmp	r3, #58	; 0x3a
   3c2f4:	beq	3c314 <flatcc_json_parser_generic_json@@Base+0x104>
   3c2f8:	mov	r3, #4
   3c2fc:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c300:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c304:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c308:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c30c:	mov	r3, r0
   3c310:	b	3c674 <flatcc_json_parser_generic_json@@Base+0x464>
   3c314:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c318:	add	r3, r3, #1
   3c31c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c320:	mov	r1, r3
   3c324:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c328:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3c32c:	str	r0, [fp, #-548]	; 0xfffffddc
   3c330:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c334:	ldrb	r3, [r3]
   3c338:	cmp	r3, #57	; 0x39
   3c33c:	bgt	3c35c <flatcc_json_parser_generic_json@@Base+0x14c>
   3c340:	cmp	r3, #48	; 0x30
   3c344:	bge	3c414 <flatcc_json_parser_generic_json@@Base+0x204>
   3c348:	cmp	r3, #34	; 0x22
   3c34c:	beq	3c370 <flatcc_json_parser_generic_json@@Base+0x160>
   3c350:	cmp	r3, #45	; 0x2d
   3c354:	beq	3c414 <flatcc_json_parser_generic_json@@Base+0x204>
   3c358:	b	3c52c <flatcc_json_parser_generic_json@@Base+0x31c>
   3c35c:	cmp	r3, #91	; 0x5b
   3c360:	beq	3c42c <flatcc_json_parser_generic_json@@Base+0x21c>
   3c364:	cmp	r3, #123	; 0x7b
   3c368:	beq	3c4ac <flatcc_json_parser_generic_json@@Base+0x29c>
   3c36c:	b	3c52c <flatcc_json_parser_generic_json@@Base+0x31c>
   3c370:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c374:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c378:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c37c:	bl	35c68 <flatcc_verify_union_vector_field@@Base+0x3b0>
   3c380:	str	r0, [fp, #-548]	; 0xfffffddc
   3c384:	b	3c3d4 <flatcc_json_parser_generic_json@@Base+0x1c4>
   3c388:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c38c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c390:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c394:	bl	3aa70 <flatcc_json_parser_string_part@@Base>
   3c398:	str	r0, [fp, #-548]	; 0xfffffddc
   3c39c:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3c3a0:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3c3a4:	cmp	r2, r3
   3c3a8:	beq	3c3bc <flatcc_json_parser_generic_json@@Base+0x1ac>
   3c3ac:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c3b0:	ldrb	r3, [r3]
   3c3b4:	cmp	r3, #34	; 0x22
   3c3b8:	beq	3c3f8 <flatcc_json_parser_generic_json@@Base+0x1e8>
   3c3bc:	sub	r3, fp, #532	; 0x214
   3c3c0:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c3c4:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c3c8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c3cc:	bl	3acec <flatcc_json_parser_string_escape@@Base>
   3c3d0:	str	r0, [fp, #-548]	; 0xfffffddc
   3c3d4:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3c3d8:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3c3dc:	cmp	r2, r3
   3c3e0:	beq	3c3fc <flatcc_json_parser_generic_json@@Base+0x1ec>
   3c3e4:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c3e8:	ldrb	r3, [r3]
   3c3ec:	cmp	r3, #34	; 0x22
   3c3f0:	bne	3c388 <flatcc_json_parser_generic_json@@Base+0x178>
   3c3f4:	b	3c3fc <flatcc_json_parser_generic_json@@Base+0x1ec>
   3c3f8:	nop			; (mov r0, r0)
   3c3fc:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c400:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c404:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c408:	bl	35cd8 <flatcc_verify_union_vector_field@@Base+0x420>
   3c40c:	str	r0, [fp, #-548]	; 0xfffffddc
   3c410:	b	3c588 <flatcc_json_parser_generic_json@@Base+0x378>
   3c414:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c418:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c41c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c420:	bl	3bb38 <flatcc_json_parser_unmatched_symbol@@Base+0xec>
   3c424:	str	r0, [fp, #-548]	; 0xfffffddc
   3c428:	b	3c588 <flatcc_json_parser_generic_json@@Base+0x378>
   3c42c:	ldr	r2, [fp, #-8]
   3c430:	ldr	r3, [fp, #-12]
   3c434:	cmp	r2, r3
   3c438:	bne	3c458 <flatcc_json_parser_generic_json@@Base+0x248>
   3c43c:	mov	r3, #2
   3c440:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c444:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c448:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c44c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c450:	mov	r3, r0
   3c454:	b	3c674 <flatcc_json_parser_generic_json@@Base+0x464>
   3c458:	ldr	r3, [fp, #-8]
   3c45c:	add	r2, r3, #1
   3c460:	str	r2, [fp, #-8]
   3c464:	mov	r2, #93	; 0x5d
   3c468:	strb	r2, [r3]
   3c46c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c470:	add	r3, r3, #1
   3c474:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c478:	mov	r1, r3
   3c47c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c480:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3c484:	str	r0, [fp, #-548]	; 0xfffffddc
   3c488:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3c48c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3c490:	cmp	r2, r3
   3c494:	beq	3c244 <flatcc_json_parser_generic_json@@Base+0x34>
   3c498:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c49c:	ldrb	r3, [r3]
   3c4a0:	cmp	r3, #93	; 0x5d
   3c4a4:	beq	3c574 <flatcc_json_parser_generic_json@@Base+0x364>
   3c4a8:	b	3c244 <flatcc_json_parser_generic_json@@Base+0x34>
   3c4ac:	ldr	r2, [fp, #-8]
   3c4b0:	ldr	r3, [fp, #-12]
   3c4b4:	cmp	r2, r3
   3c4b8:	bne	3c4d8 <flatcc_json_parser_generic_json@@Base+0x2c8>
   3c4bc:	mov	r3, #2
   3c4c0:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c4c4:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c4c8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c4cc:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c4d0:	mov	r3, r0
   3c4d4:	b	3c674 <flatcc_json_parser_generic_json@@Base+0x464>
   3c4d8:	ldr	r3, [fp, #-8]
   3c4dc:	add	r2, r3, #1
   3c4e0:	str	r2, [fp, #-8]
   3c4e4:	mov	r2, #125	; 0x7d
   3c4e8:	strb	r2, [r3]
   3c4ec:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c4f0:	add	r3, r3, #1
   3c4f4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c4f8:	mov	r1, r3
   3c4fc:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c500:	bl	35bd4 <flatcc_verify_union_vector_field@@Base+0x31c>
   3c504:	str	r0, [fp, #-548]	; 0xfffffddc
   3c508:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3c50c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3c510:	cmp	r2, r3
   3c514:	beq	3c244 <flatcc_json_parser_generic_json@@Base+0x34>
   3c518:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c51c:	ldrb	r3, [r3]
   3c520:	cmp	r3, #125	; 0x7d
   3c524:	beq	3c57c <flatcc_json_parser_generic_json@@Base+0x36c>
   3c528:	b	3c244 <flatcc_json_parser_generic_json@@Base+0x34>
   3c52c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c530:	str	r3, [fp, #-16]
   3c534:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c538:	ldr	r1, [fp, #-16]
   3c53c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c540:	bl	3b6b4 <flatcc_json_parser_skip_constant@@Base>
   3c544:	str	r0, [fp, #-548]	; 0xfffffddc
   3c548:	ldr	r2, [fp, #-16]
   3c54c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c550:	cmp	r2, r3
   3c554:	bne	3c584 <flatcc_json_parser_generic_json@@Base+0x374>
   3c558:	mov	r3, #5
   3c55c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c560:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c564:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c568:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c56c:	mov	r3, r0
   3c570:	b	3c674 <flatcc_json_parser_generic_json@@Base+0x464>
   3c574:	nop			; (mov r0, r0)
   3c578:	b	3c5f8 <flatcc_json_parser_generic_json@@Base+0x3e8>
   3c57c:	nop			; (mov r0, r0)
   3c580:	b	3c5f8 <flatcc_json_parser_generic_json@@Base+0x3e8>
   3c584:	nop			; (mov r0, r0)
   3c588:	b	3c5f8 <flatcc_json_parser_generic_json@@Base+0x3e8>
   3c58c:	ldr	r3, [fp, #-8]
   3c590:	sub	r3, r3, #1
   3c594:	str	r3, [fp, #-8]
   3c598:	ldr	r3, [fp, #-8]
   3c59c:	ldrb	r3, [r3]
   3c5a0:	cmp	r3, #93	; 0x5d
   3c5a4:	bne	3c5c4 <flatcc_json_parser_generic_json@@Base+0x3b4>
   3c5a8:	sub	r3, fp, #536	; 0x218
   3c5ac:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c5b0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c5b4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c5b8:	bl	36270 <flatcc_verify_union_vector_field@@Base+0x9b8>
   3c5bc:	str	r0, [fp, #-548]	; 0xfffffddc
   3c5c0:	b	3c5dc <flatcc_json_parser_generic_json@@Base+0x3cc>
   3c5c4:	sub	r3, fp, #536	; 0x218
   3c5c8:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c5cc:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c5d0:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c5d4:	bl	36020 <flatcc_verify_union_vector_field@@Base+0x768>
   3c5d8:	str	r0, [fp, #-548]	; 0xfffffddc
   3c5dc:	ldr	r3, [fp, #-536]	; 0xfffffde8
   3c5e0:	cmp	r3, #0
   3c5e4:	beq	3c5f8 <flatcc_json_parser_generic_json@@Base+0x3e8>
   3c5e8:	ldr	r3, [fp, #-8]
   3c5ec:	add	r3, r3, #1
   3c5f0:	str	r3, [fp, #-8]
   3c5f4:	b	3c244 <flatcc_json_parser_generic_json@@Base+0x34>
   3c5f8:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3c5fc:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3c600:	cmp	r2, r3
   3c604:	beq	3c618 <flatcc_json_parser_generic_json@@Base+0x408>
   3c608:	sub	r3, fp, #528	; 0x210
   3c60c:	ldr	r2, [fp, #-8]
   3c610:	cmp	r2, r3
   3c614:	bne	3c58c <flatcc_json_parser_generic_json@@Base+0x37c>
   3c618:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3c61c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3c620:	cmp	r2, r3
   3c624:	bne	3c670 <flatcc_json_parser_generic_json@@Base+0x460>
   3c628:	sub	r3, fp, #528	; 0x210
   3c62c:	ldr	r2, [fp, #-8]
   3c630:	cmp	r2, r3
   3c634:	beq	3c670 <flatcc_json_parser_generic_json@@Base+0x460>
   3c638:	ldr	r3, [fp, #-8]
   3c63c:	sub	r3, r3, #1
   3c640:	ldrb	r3, [r3]
   3c644:	cmp	r3, #93	; 0x5d
   3c648:	bne	3c654 <flatcc_json_parser_generic_json@@Base+0x444>
   3c64c:	mov	r3, #9
   3c650:	b	3c658 <flatcc_json_parser_generic_json@@Base+0x448>
   3c654:	mov	r3, #10
   3c658:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3c65c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3c660:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3c664:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c668:	mov	r3, r0
   3c66c:	b	3c674 <flatcc_json_parser_generic_json@@Base+0x464>
   3c670:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3c674:	mov	r0, r3
   3c678:	sub	sp, fp, #4
   3c67c:	pop	{fp, pc}

0003c680 <flatcc_json_parser_integer@@Base>:
   3c680:	push	{fp, lr}
   3c684:	add	fp, sp, #4
   3c688:	sub	sp, sp, #40	; 0x28
   3c68c:	str	r0, [fp, #-32]	; 0xffffffe0
   3c690:	str	r1, [fp, #-36]	; 0xffffffdc
   3c694:	str	r2, [fp, #-40]	; 0xffffffd8
   3c698:	str	r3, [fp, #-44]	; 0xffffffd4
   3c69c:	mov	r2, #0
   3c6a0:	mov	r3, #0
   3c6a4:	strd	r2, [fp, #-12]
   3c6a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c6ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c6b0:	cmp	r2, r3
   3c6b4:	bne	3c6c0 <flatcc_json_parser_integer@@Base+0x40>
   3c6b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c6bc:	b	3c868 <flatcc_json_parser_integer@@Base+0x1e8>
   3c6c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c6c4:	str	r3, [fp, #-16]
   3c6c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c6cc:	ldrb	r3, [r3]
   3c6d0:	cmp	r3, #45	; 0x2d
   3c6d4:	moveq	r3, #1
   3c6d8:	movne	r3, #0
   3c6dc:	uxtb	r3, r3
   3c6e0:	mov	r2, r3
   3c6e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3c6e8:	str	r2, [r3]
   3c6ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3c6f0:	ldr	r3, [r3]
   3c6f4:	mov	r2, r3
   3c6f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c6fc:	add	r3, r3, r2
   3c700:	str	r3, [fp, #-36]	; 0xffffffdc
   3c704:	b	3c7b4 <flatcc_json_parser_integer@@Base+0x134>
   3c708:	ldrd	r2, [fp, #-12]
   3c70c:	strd	r2, [fp, #-28]	; 0xffffffe4
   3c710:	ldr	r3, [fp, #-8]
   3c714:	mov	r2, #10
   3c718:	mul	r2, r2, r3
   3c71c:	ldr	r3, [fp, #-12]
   3c720:	mov	r1, #0
   3c724:	mul	r3, r1, r3
   3c728:	add	r1, r2, r3
   3c72c:	ldr	r3, [fp, #-12]
   3c730:	mov	r2, #10
   3c734:	umull	r2, r3, r3, r2
   3c738:	add	r1, r1, r3
   3c73c:	mov	r3, r1
   3c740:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3c744:	ldrb	r1, [r1]
   3c748:	uxtb	r0, r1
   3c74c:	mov	r1, #0
   3c750:	adds	r2, r2, r0
   3c754:	adc	r3, r3, r1
   3c758:	subs	r2, r2, #48	; 0x30
   3c75c:	sbc	r3, r3, #0
   3c760:	strd	r2, [fp, #-12]
   3c764:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   3c768:	ldrd	r2, [fp, #-12]
   3c76c:	cmp	r1, r3
   3c770:	cmpeq	r0, r2
   3c774:	bls	3c7a8 <flatcc_json_parser_integer@@Base+0x128>
   3c778:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3c77c:	cmp	r3, #0
   3c780:	beq	3c78c <flatcc_json_parser_integer@@Base+0x10c>
   3c784:	mov	r3, #8
   3c788:	b	3c790 <flatcc_json_parser_integer@@Base+0x110>
   3c78c:	mov	r3, #7
   3c790:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3c794:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3c798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c79c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c7a0:	mov	r3, r0
   3c7a4:	b	3c868 <flatcc_json_parser_integer@@Base+0x1e8>
   3c7a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c7ac:	add	r3, r3, #1
   3c7b0:	str	r3, [fp, #-36]	; 0xffffffdc
   3c7b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c7b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c7bc:	cmp	r2, r3
   3c7c0:	beq	3c7e4 <flatcc_json_parser_integer@@Base+0x164>
   3c7c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c7c8:	ldrb	r3, [r3]
   3c7cc:	cmp	r3, #47	; 0x2f
   3c7d0:	bls	3c7e4 <flatcc_json_parser_integer@@Base+0x164>
   3c7d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c7d8:	ldrb	r3, [r3]
   3c7dc:	cmp	r3, #57	; 0x39
   3c7e0:	bls	3c708 <flatcc_json_parser_integer@@Base+0x88>
   3c7e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c7e8:	ldr	r3, [fp, #-16]
   3c7ec:	cmp	r2, r3
   3c7f0:	bne	3c7fc <flatcc_json_parser_integer@@Base+0x17c>
   3c7f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c7f8:	b	3c868 <flatcc_json_parser_integer@@Base+0x1e8>
   3c7fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c800:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c804:	cmp	r2, r3
   3c808:	beq	3c858 <flatcc_json_parser_integer@@Base+0x1d8>
   3c80c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c810:	ldrb	r3, [r3]
   3c814:	cmp	r3, #101	; 0x65
   3c818:	beq	3c83c <flatcc_json_parser_integer@@Base+0x1bc>
   3c81c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c820:	ldrb	r3, [r3]
   3c824:	cmp	r3, #69	; 0x45
   3c828:	beq	3c83c <flatcc_json_parser_integer@@Base+0x1bc>
   3c82c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c830:	ldrb	r3, [r3]
   3c834:	cmp	r3, #46	; 0x2e
   3c838:	bne	3c858 <flatcc_json_parser_integer@@Base+0x1d8>
   3c83c:	mov	r3, #12
   3c840:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3c844:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3c848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c84c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3c850:	mov	r3, r0
   3c854:	b	3c868 <flatcc_json_parser_integer@@Base+0x1e8>
   3c858:	ldr	r1, [fp, #4]
   3c85c:	ldrd	r2, [fp, #-12]
   3c860:	strd	r2, [r1]
   3c864:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c868:	mov	r0, r3
   3c86c:	sub	sp, fp, #4
   3c870:	pop	{fp, pc}

0003c874 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   3c874:	push	{fp, lr}
   3c878:	add	fp, sp, #4
   3c87c:	sub	sp, sp, #56	; 0x38
   3c880:	str	r0, [fp, #-40]	; 0xffffffd8
   3c884:	str	r1, [fp, #-44]	; 0xffffffd4
   3c888:	str	r2, [fp, #-48]	; 0xffffffd0
   3c88c:	str	r3, [fp, #-52]	; 0xffffffcc
   3c890:	ldr	r3, [fp, #4]
   3c894:	cmp	r3, #0
   3c898:	movne	r3, #1
   3c89c:	moveq	r3, #0
   3c8a0:	uxtb	r3, r3
   3c8a4:	str	r3, [fp, #-8]
   3c8a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3c8ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3c8b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c8b4:	bl	35c68 <flatcc_verify_union_vector_field@@Base+0x3b0>
   3c8b8:	str	r0, [fp, #-44]	; 0xffffffd4
   3c8bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3c8c0:	str	r3, [fp, #-12]
   3c8c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3c8c8:	ldr	r1, [fp, #-12]
   3c8cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c8d0:	bl	3aa70 <flatcc_json_parser_string_part@@Base>
   3c8d4:	str	r0, [fp, #-44]	; 0xffffffd4
   3c8d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3c8dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c8e0:	cmp	r2, r3
   3c8e4:	beq	3caa4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   3c8e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3c8ec:	ldrb	r3, [r3]
   3c8f0:	cmp	r3, #34	; 0x22
   3c8f4:	bne	3caa4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   3c8f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3c8fc:	ldr	r3, [fp, #-12]
   3c900:	sub	r3, r2, r3
   3c904:	mov	r0, r3
   3c908:	bl	39d00 <grisu3_diy_fp_encode_double@@Base+0x1690>
   3c90c:	str	r0, [fp, #-16]
   3c910:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c914:	ldr	r0, [r3]
   3c918:	mvn	r3, #0
   3c91c:	mov	r2, #1
   3c920:	mov	r1, #1
   3c924:	bl	2f838 <flatcc_builder_start_vector@@Base>
   3c928:	mov	r3, r0
   3c92c:	cmp	r3, #0
   3c930:	bne	3ca60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ec>
   3c934:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c938:	ldr	r3, [r3]
   3c93c:	ldr	r1, [fp, #-16]
   3c940:	mov	r0, r3
   3c944:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   3c948:	str	r0, [fp, #-20]	; 0xffffffec
   3c94c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c950:	cmp	r3, #0
   3c954:	beq	3ca68 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f4>
   3c958:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3c95c:	ldr	r3, [fp, #-12]
   3c960:	sub	r3, r2, r3
   3c964:	str	r3, [fp, #-32]	; 0xffffffe0
   3c968:	ldr	r3, [fp, #-16]
   3c96c:	str	r3, [fp, #-28]	; 0xffffffe4
   3c970:	sub	r1, fp, #32
   3c974:	sub	r2, fp, #28
   3c978:	ldr	r3, [fp, #-8]
   3c97c:	str	r3, [sp]
   3c980:	mov	r3, r1
   3c984:	ldr	r1, [fp, #-12]
   3c988:	ldr	r0, [fp, #-20]	; 0xffffffec
   3c98c:	bl	3a138 <grisu3_diy_fp_encode_double@@Base+0x1ac8>
   3c990:	str	r0, [fp, #-24]	; 0xffffffe8
   3c994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c998:	cmp	r3, #0
   3c99c:	beq	3c9b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   3c9a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c9a4:	ldr	r2, [fp, #-12]
   3c9a8:	add	r3, r2, r3
   3c9ac:	str	r3, [fp, #-44]	; 0xffffffd4
   3c9b0:	b	3caa4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   3c9b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3c9b8:	ldr	r3, [fp, #-12]
   3c9bc:	sub	r3, r2, r3
   3c9c0:	mov	r2, r3
   3c9c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c9c8:	cmp	r2, r3
   3c9cc:	beq	3c9e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x170>
   3c9d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c9d4:	ldr	r2, [fp, #-12]
   3c9d8:	add	r3, r2, r3
   3c9dc:	str	r3, [fp, #-44]	; 0xffffffd4
   3c9e0:	b	3caa4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   3c9e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c9e8:	ldr	r3, [fp, #-16]
   3c9ec:	cmp	r2, r3
   3c9f0:	bcs	3ca1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1a8>
   3c9f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c9f8:	ldr	r0, [r3]
   3c9fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ca00:	ldr	r2, [fp, #-16]
   3ca04:	sub	r3, r2, r3
   3ca08:	mov	r1, r3
   3ca0c:	bl	2f520 <flatcc_builder_truncate_vector@@Base>
   3ca10:	mov	r3, r0
   3ca14:	cmp	r3, #0
   3ca18:	bne	3ca70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fc>
   3ca1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ca20:	ldr	r3, [r3]
   3ca24:	mov	r0, r3
   3ca28:	bl	30a90 <flatcc_builder_end_vector@@Base>
   3ca2c:	mov	r2, r0
   3ca30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3ca34:	str	r2, [r3]
   3ca38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3ca3c:	ldr	r3, [r3]
   3ca40:	cmp	r3, #0
   3ca44:	beq	3ca78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
   3ca48:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3ca4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3ca50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3ca54:	bl	35cd8 <flatcc_verify_union_vector_field@@Base+0x420>
   3ca58:	mov	r3, r0
   3ca5c:	b	3cadc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x268>
   3ca60:	nop			; (mov r0, r0)
   3ca64:	b	3ca7c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   3ca68:	nop			; (mov r0, r0)
   3ca6c:	b	3ca7c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   3ca70:	nop			; (mov r0, r0)
   3ca74:	b	3ca7c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   3ca78:	nop			; (mov r0, r0)
   3ca7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3ca80:	mov	r2, #0
   3ca84:	str	r2, [r3]
   3ca88:	mov	r3, #33	; 0x21
   3ca8c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3ca90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3ca94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3ca98:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3ca9c:	mov	r3, r0
   3caa0:	b	3cadc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x268>
   3caa4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3caa8:	mov	r2, #0
   3caac:	str	r2, [r3]
   3cab0:	ldr	r3, [fp, #4]
   3cab4:	cmp	r3, #0
   3cab8:	beq	3cac4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x250>
   3cabc:	mov	r3, #32
   3cac0:	b	3cac8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   3cac4:	mov	r3, #31
   3cac8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3cacc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3cad0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3cad4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3cad8:	mov	r3, r0
   3cadc:	mov	r0, r3
   3cae0:	sub	sp, fp, #4
   3cae4:	pop	{fp, pc}

0003cae8 <flatcc_json_parser_build_string@@Base>:
   3cae8:	push	{fp, lr}
   3caec:	add	fp, sp, #4
   3caf0:	sub	sp, sp, #24
   3caf4:	str	r0, [fp, #-16]
   3caf8:	str	r1, [fp, #-20]	; 0xffffffec
   3cafc:	str	r2, [fp, #-24]	; 0xffffffe8
   3cb00:	str	r3, [fp, #-28]	; 0xffffffe4
   3cb04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cb08:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cb0c:	ldr	r0, [fp, #-16]
   3cb10:	bl	35c68 <flatcc_verify_union_vector_field@@Base+0x3b0>
   3cb14:	str	r0, [fp, #-20]	; 0xffffffec
   3cb18:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cb1c:	str	r3, [fp, #-8]
   3cb20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cb24:	ldr	r1, [fp, #-8]
   3cb28:	ldr	r0, [fp, #-16]
   3cb2c:	bl	3aa70 <flatcc_json_parser_string_part@@Base>
   3cb30:	str	r0, [fp, #-20]	; 0xffffffec
   3cb34:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cb38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cb3c:	cmp	r2, r3
   3cb40:	beq	3cb84 <flatcc_json_parser_build_string@@Base+0x9c>
   3cb44:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cb48:	ldrb	r3, [r3]
   3cb4c:	cmp	r3, #34	; 0x22
   3cb50:	bne	3cb84 <flatcc_json_parser_build_string@@Base+0x9c>
   3cb54:	ldr	r3, [fp, #-16]
   3cb58:	ldr	r0, [r3]
   3cb5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cb60:	ldr	r3, [fp, #-8]
   3cb64:	sub	r3, r2, r3
   3cb68:	mov	r2, r3
   3cb6c:	ldr	r1, [fp, #-8]
   3cb70:	bl	31c5c <flatcc_builder_create_string@@Base>
   3cb74:	mov	r2, r0
   3cb78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cb7c:	str	r2, [r3]
   3cb80:	b	3cca4 <flatcc_json_parser_build_string@@Base+0x1bc>
   3cb84:	ldr	r3, [fp, #-16]
   3cb88:	ldr	r3, [r3]
   3cb8c:	mov	r0, r3
   3cb90:	bl	2f9e8 <flatcc_builder_start_string@@Base>
   3cb94:	mov	r3, r0
   3cb98:	cmp	r3, #0
   3cb9c:	bne	3ccc8 <flatcc_json_parser_build_string@@Base+0x1e0>
   3cba0:	ldr	r3, [fp, #-16]
   3cba4:	ldr	r0, [r3]
   3cba8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cbac:	ldr	r3, [fp, #-8]
   3cbb0:	sub	r3, r2, r3
   3cbb4:	mov	r2, r3
   3cbb8:	ldr	r1, [fp, #-8]
   3cbbc:	bl	2f3f8 <flatcc_builder_append_string@@Base>
   3cbc0:	mov	r3, r0
   3cbc4:	cmp	r3, #0
   3cbc8:	beq	3ccc8 <flatcc_json_parser_build_string@@Base+0x1e0>
   3cbcc:	b	3cc68 <flatcc_json_parser_build_string@@Base+0x180>
   3cbd0:	sub	r3, fp, #12
   3cbd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cbd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cbdc:	ldr	r0, [fp, #-16]
   3cbe0:	bl	3acec <flatcc_json_parser_string_escape@@Base>
   3cbe4:	str	r0, [fp, #-20]	; 0xffffffec
   3cbe8:	ldr	r3, [fp, #-16]
   3cbec:	ldr	r0, [r3]
   3cbf0:	sub	r3, fp, #12
   3cbf4:	add	r3, r3, #1
   3cbf8:	ldrb	r2, [fp, #-12]
   3cbfc:	mov	r1, r3
   3cc00:	bl	2f3f8 <flatcc_builder_append_string@@Base>
   3cc04:	mov	r3, r0
   3cc08:	cmp	r3, #0
   3cc0c:	beq	3ccbc <flatcc_json_parser_build_string@@Base+0x1d4>
   3cc10:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cc14:	str	r3, [fp, #-8]
   3cc18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cc1c:	ldr	r1, [fp, #-8]
   3cc20:	ldr	r0, [fp, #-16]
   3cc24:	bl	3aa70 <flatcc_json_parser_string_part@@Base>
   3cc28:	str	r0, [fp, #-20]	; 0xffffffec
   3cc2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cc30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cc34:	cmp	r2, r3
   3cc38:	beq	3cc68 <flatcc_json_parser_build_string@@Base+0x180>
   3cc3c:	ldr	r3, [fp, #-16]
   3cc40:	ldr	r0, [r3]
   3cc44:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cc48:	ldr	r3, [fp, #-8]
   3cc4c:	sub	r3, r2, r3
   3cc50:	mov	r2, r3
   3cc54:	ldr	r1, [fp, #-8]
   3cc58:	bl	2f3f8 <flatcc_builder_append_string@@Base>
   3cc5c:	mov	r3, r0
   3cc60:	cmp	r3, #0
   3cc64:	beq	3ccc4 <flatcc_json_parser_build_string@@Base+0x1dc>
   3cc68:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cc6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cc70:	cmp	r2, r3
   3cc74:	beq	3cc88 <flatcc_json_parser_build_string@@Base+0x1a0>
   3cc78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cc7c:	ldrb	r3, [r3]
   3cc80:	cmp	r3, #34	; 0x22
   3cc84:	bne	3cbd0 <flatcc_json_parser_build_string@@Base+0xe8>
   3cc88:	ldr	r3, [fp, #-16]
   3cc8c:	ldr	r3, [r3]
   3cc90:	mov	r0, r3
   3cc94:	bl	31e84 <flatcc_builder_end_string@@Base>
   3cc98:	mov	r2, r0
   3cc9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cca0:	str	r2, [r3]
   3cca4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cca8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ccac:	ldr	r0, [fp, #-16]
   3ccb0:	bl	35cd8 <flatcc_verify_union_vector_field@@Base+0x420>
   3ccb4:	mov	r3, r0
   3ccb8:	b	3ccd8 <flatcc_json_parser_build_string@@Base+0x1f0>
   3ccbc:	nop			; (mov r0, r0)
   3ccc0:	b	3ccc8 <flatcc_json_parser_build_string@@Base+0x1e0>
   3ccc4:	nop			; (mov r0, r0)
   3ccc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cccc:	mov	r2, #0
   3ccd0:	str	r2, [r3]
   3ccd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ccd8:	mov	r0, r3
   3ccdc:	sub	sp, fp, #4
   3cce0:	pop	{fp, pc}

0003cce4 <flatcc_json_parser_prepare_unions@@Base>:
   3cce4:	push	{fp, lr}
   3cce8:	add	fp, sp, #4
   3ccec:	sub	sp, sp, #24
   3ccf0:	str	r0, [fp, #-16]
   3ccf4:	str	r1, [fp, #-20]	; 0xffffffec
   3ccf8:	str	r2, [fp, #-24]	; 0xffffffe8
   3ccfc:	str	r3, [fp, #-28]	; 0xffffffe4
   3cd00:	ldr	r3, [fp, #-16]
   3cd04:	ldr	r0, [r3]
   3cd08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3cd0c:	mov	r3, r2
   3cd10:	lsl	r3, r3, #1
   3cd14:	add	r3, r3, r2
   3cd18:	lsl	r3, r3, #3
   3cd1c:	add	r3, r3, #8
   3cd20:	mov	r1, r3
   3cd24:	bl	2da24 <flatcc_builder_enter_user_frame@@Base>
   3cd28:	mov	r2, r0
   3cd2c:	ldr	r3, [fp, #4]
   3cd30:	str	r2, [r3]
   3cd34:	ldr	r3, [fp, #4]
   3cd38:	ldr	r3, [r3]
   3cd3c:	cmp	r3, #0
   3cd40:	bne	3cd60 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   3cd44:	mov	r3, #33	; 0x21
   3cd48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cd4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cd50:	ldr	r0, [fp, #-16]
   3cd54:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3cd58:	mov	r3, r0
   3cd5c:	b	3cd90 <flatcc_json_parser_prepare_unions@@Base+0xac>
   3cd60:	ldr	r3, [fp, #-16]
   3cd64:	ldr	r2, [r3]
   3cd68:	ldr	r3, [fp, #4]
   3cd6c:	ldr	r3, [r3]
   3cd70:	mov	r1, r3
   3cd74:	mov	r0, r2
   3cd78:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3cd7c:	str	r0, [fp, #-8]
   3cd80:	ldr	r3, [fp, #-8]
   3cd84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3cd88:	str	r2, [r3]
   3cd8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cd90:	mov	r0, r3
   3cd94:	sub	sp, fp, #4
   3cd98:	pop	{fp, pc}

0003cd9c <flatcc_json_parser_finalize_unions@@Base>:
   3cd9c:	push	{fp, lr}
   3cda0:	add	fp, sp, #4
   3cda4:	sub	sp, sp, #24
   3cda8:	str	r0, [fp, #-16]
   3cdac:	str	r1, [fp, #-20]	; 0xffffffec
   3cdb0:	str	r2, [fp, #-24]	; 0xffffffe8
   3cdb4:	str	r3, [fp, #-28]	; 0xffffffe4
   3cdb8:	ldr	r3, [fp, #-16]
   3cdbc:	ldr	r3, [r3]
   3cdc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3cdc4:	mov	r0, r3
   3cdc8:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3cdcc:	str	r0, [fp, #-8]
   3cdd0:	ldr	r3, [fp, #-8]
   3cdd4:	ldr	r3, [r3, #4]
   3cdd8:	cmp	r3, #0
   3cddc:	beq	3cdf8 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   3cde0:	mov	r3, #27
   3cde4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3cde8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cdec:	ldr	r0, [fp, #-16]
   3cdf0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3cdf4:	str	r0, [fp, #-20]	; 0xffffffec
   3cdf8:	ldr	r3, [fp, #-16]
   3cdfc:	ldr	r3, [r3]
   3ce00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ce04:	mov	r0, r3
   3ce08:	bl	2db8c <flatcc_builder_exit_user_frame_at@@Base>
   3ce0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ce10:	mov	r0, r3
   3ce14:	sub	sp, fp, #4
   3ce18:	pop	{fp, pc}

0003ce1c <flatcc_json_parser_union@@Base>:
   3ce1c:	push	{r4, fp, lr}
   3ce20:	add	fp, sp, #8
   3ce24:	sub	sp, sp, #44	; 0x2c
   3ce28:	str	r0, [fp, #-32]	; 0xffffffe0
   3ce2c:	str	r1, [fp, #-36]	; 0xffffffdc
   3ce30:	str	r2, [fp, #-40]	; 0xffffffd8
   3ce34:	str	r3, [fp, #-44]	; 0xffffffd4
   3ce38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ce3c:	ldr	r3, [r3]
   3ce40:	ldr	r1, [fp, #8]
   3ce44:	mov	r0, r3
   3ce48:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3ce4c:	str	r0, [fp, #-16]
   3ce50:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3ce54:	mov	r3, r2
   3ce58:	lsl	r3, r3, #1
   3ce5c:	add	r3, r3, r2
   3ce60:	lsl	r3, r3, #3
   3ce64:	add	r3, r3, #8
   3ce68:	ldr	r2, [fp, #-16]
   3ce6c:	add	r3, r2, r3
   3ce70:	str	r3, [fp, #-20]	; 0xffffffec
   3ce74:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ce78:	ldr	r3, [r3]
   3ce7c:	cmp	r3, #0
   3ce80:	beq	3cea0 <flatcc_json_parser_union@@Base+0x84>
   3ce84:	mov	r3, #28
   3ce88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3ce8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3ce90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3ce94:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3ce98:	mov	r3, r0
   3ce9c:	b	3cfe0 <flatcc_json_parser_union@@Base+0x1c4>
   3cea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cea4:	ldrb	r3, [r3, #12]
   3cea8:	cmp	r3, #0
   3ceac:	bne	3cf10 <flatcc_json_parser_union@@Base+0xf4>
   3ceb0:	ldr	r3, [fp, #-16]
   3ceb4:	ldr	r3, [r3, #4]
   3ceb8:	add	r2, r3, #1
   3cebc:	ldr	r3, [fp, #-16]
   3cec0:	str	r2, [r3, #4]
   3cec4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3cec8:	ldr	r2, [r3, #16]
   3cecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ced0:	str	r2, [r3, #8]
   3ced4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ced8:	ldr	r2, [r3, #4]
   3cedc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cee0:	str	r2, [r3, #4]
   3cee4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cee8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3ceec:	str	r2, [r3]
   3cef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cef4:	ldr	r3, [r3]
   3cef8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3cefc:	mov	r1, r3
   3cf00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3cf04:	bl	3c210 <flatcc_json_parser_generic_json@@Base>
   3cf08:	str	r0, [fp, #-36]	; 0xffffffdc
   3cf0c:	b	3cfdc <flatcc_json_parser_union@@Base+0x1c0>
   3cf10:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cf14:	ldrb	r3, [r3, #13]
   3cf18:	strb	r3, [fp, #-28]	; 0xffffffe4
   3cf1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cf20:	ldrb	r3, [r3, #13]
   3cf24:	cmp	r3, #0
   3cf28:	bne	3cf48 <flatcc_json_parser_union@@Base+0x12c>
   3cf2c:	mov	r3, #25
   3cf30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3cf34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3cf38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3cf3c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3cf40:	mov	r3, r0
   3cf44:	b	3cfe0 <flatcc_json_parser_union@@Base+0x1c4>
   3cf48:	ldr	r3, [fp, #-16]
   3cf4c:	ldr	r3, [r3, #4]
   3cf50:	sub	r2, r3, #1
   3cf54:	ldr	r3, [fp, #-16]
   3cf58:	str	r2, [r3, #4]
   3cf5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cf60:	ldrb	r2, [r3, #13]
   3cf64:	sub	r3, fp, #28
   3cf68:	add	r3, r3, #4
   3cf6c:	str	r3, [sp]
   3cf70:	ldr	r4, [fp, #12]
   3cf74:	mov	r3, r2
   3cf78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3cf7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3cf80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3cf84:	blx	r4
   3cf88:	str	r0, [fp, #-36]	; 0xffffffdc
   3cf8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3cf90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3cf94:	cmp	r2, r3
   3cf98:	beq	3cfdc <flatcc_json_parser_union@@Base+0x1c0>
   3cf9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3cfa0:	ldr	r0, [r3]
   3cfa4:	ldrh	r1, [fp, #4]
   3cfa8:	sub	r3, fp, #28
   3cfac:	ldm	r3, {r2, r3}
   3cfb0:	bl	310d8 <flatcc_builder_table_add_union@@Base>
   3cfb4:	mov	r3, r0
   3cfb8:	cmp	r3, #0
   3cfbc:	beq	3cfdc <flatcc_json_parser_union@@Base+0x1c0>
   3cfc0:	mov	r3, #28
   3cfc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3cfc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3cfcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3cfd0:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3cfd4:	mov	r3, r0
   3cfd8:	b	3cfe0 <flatcc_json_parser_union@@Base+0x1c4>
   3cfdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3cfe0:	mov	r0, r3
   3cfe4:	sub	sp, fp, #8
   3cfe8:	pop	{r4, fp, pc}

0003cfec <flatcc_json_parser_union_type@@Base>:
   3cfec:	push	{r4, fp, lr}
   3cff0:	add	fp, sp, #8
   3cff4:	sub	sp, sp, #60	; 0x3c
   3cff8:	str	r0, [fp, #-48]	; 0xffffffd0
   3cffc:	str	r1, [fp, #-52]	; 0xffffffcc
   3d000:	str	r2, [fp, #-56]	; 0xffffffc8
   3d004:	str	r3, [fp, #-60]	; 0xffffffc4
   3d008:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d00c:	ldr	r3, [r3]
   3d010:	ldr	r1, [fp, #8]
   3d014:	mov	r0, r3
   3d018:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3d01c:	str	r0, [fp, #-16]
   3d020:	ldr	r3, [fp, #-16]
   3d024:	add	r1, r3, #8
   3d028:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3d02c:	mov	r3, r2
   3d030:	lsl	r3, r3, #1
   3d034:	add	r3, r3, r2
   3d038:	lsl	r3, r3, #3
   3d03c:	add	r3, r1, r3
   3d040:	str	r3, [fp, #-20]	; 0xffffffec
   3d044:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d048:	ldrb	r3, [r3, #12]
   3d04c:	cmp	r3, #0
   3d050:	beq	3d070 <flatcc_json_parser_union_type@@Base+0x84>
   3d054:	mov	r3, #28
   3d058:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3d05c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3d060:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3d064:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3d068:	mov	r3, r0
   3d06c:	b	3d244 <flatcc_json_parser_union_type@@Base+0x258>
   3d070:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d074:	mov	r2, #1
   3d078:	strb	r2, [r3, #12]
   3d07c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3d080:	str	r3, [fp, #-24]	; 0xffffffe8
   3d084:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d088:	add	r3, r3, #13
   3d08c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3d090:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d094:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3d098:	bl	36a20 <flatcc_verify_union_vector_field@@Base+0x1168>
   3d09c:	str	r0, [fp, #-52]	; 0xffffffcc
   3d0a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d0a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3d0a8:	cmp	r2, r3
   3d0ac:	bne	3d0d4 <flatcc_json_parser_union_type@@Base+0xe8>
   3d0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d0b4:	add	r3, r3, #13
   3d0b8:	str	r3, [sp]
   3d0bc:	ldr	r3, [fp, #12]
   3d0c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3d0c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3d0c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3d0cc:	bl	36f8c <flatcc_verify_union_vector_field@@Base+0x16d4>
   3d0d0:	str	r0, [fp, #-52]	; 0xffffffcc
   3d0d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d0d8:	ldr	r3, [r3]
   3d0dc:	cmp	r3, #0
   3d0e0:	bne	3d118 <flatcc_json_parser_union_type@@Base+0x12c>
   3d0e4:	ldr	r3, [fp, #-16]
   3d0e8:	ldr	r3, [r3, #4]
   3d0ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   3d0f0:	ldrb	r2, [r2, #13]
   3d0f4:	cmp	r2, #0
   3d0f8:	movne	r2, #1
   3d0fc:	moveq	r2, #0
   3d100:	uxtb	r2, r2
   3d104:	add	r2, r3, r2
   3d108:	ldr	r3, [fp, #-16]
   3d10c:	str	r2, [r3, #4]
   3d110:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3d114:	b	3d244 <flatcc_json_parser_union_type@@Base+0x258>
   3d118:	ldr	r3, [fp, #-16]
   3d11c:	ldr	r3, [r3, #4]
   3d120:	cmp	r3, #0
   3d124:	bne	3d148 <flatcc_json_parser_union_type@@Base+0x15c>
   3d128:	ldr	r3, [pc, #288]	; 3d250 <flatcc_json_parser_union_type@@Base+0x264>
   3d12c:	add	r3, pc, r3
   3d130:	ldr	r2, [pc, #284]	; 3d254 <flatcc_json_parser_union_type@@Base+0x268>
   3d134:	ldr	r1, [pc, #284]	; 3d258 <flatcc_json_parser_union_type@@Base+0x26c>
   3d138:	add	r1, pc, r1
   3d13c:	ldr	r0, [pc, #280]	; 3d25c <flatcc_json_parser_union_type@@Base+0x270>
   3d140:	add	r0, pc, r0
   3d144:	bl	14610 <__assert_fail@plt>
   3d148:	ldr	r3, [fp, #-16]
   3d14c:	ldr	r3, [r3, #4]
   3d150:	sub	r2, r3, #1
   3d154:	ldr	r3, [fp, #-16]
   3d158:	str	r2, [r3, #4]
   3d15c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d160:	ldr	r3, [r3, #16]
   3d164:	str	r3, [fp, #-28]	; 0xffffffe4
   3d168:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d16c:	ldr	r3, [r3, #4]
   3d170:	str	r3, [fp, #-32]	; 0xffffffe0
   3d174:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d178:	ldr	r2, [r3, #8]
   3d17c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d180:	str	r2, [r3, #16]
   3d184:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d188:	ldr	r2, [r3, #4]
   3d18c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d190:	str	r2, [r3, #4]
   3d194:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d198:	ldrb	r3, [r3, #13]
   3d19c:	strb	r3, [fp, #-40]	; 0xffffffd8
   3d1a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d1a4:	ldr	r1, [r3]
   3d1a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d1ac:	ldrb	r2, [r3, #13]
   3d1b0:	sub	r3, fp, #40	; 0x28
   3d1b4:	add	r3, r3, #4
   3d1b8:	str	r3, [sp]
   3d1bc:	ldr	r4, [fp, #16]
   3d1c0:	mov	r3, r2
   3d1c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3d1c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3d1cc:	blx	r4
   3d1d0:	mov	r2, r0
   3d1d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3d1d8:	cmp	r2, r3
   3d1dc:	bne	3d1e8 <flatcc_json_parser_union_type@@Base+0x1fc>
   3d1e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3d1e4:	b	3d244 <flatcc_json_parser_union_type@@Base+0x258>
   3d1e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d1ec:	ldr	r0, [r3]
   3d1f0:	ldrh	r1, [fp, #4]
   3d1f4:	sub	r3, fp, #40	; 0x28
   3d1f8:	ldm	r3, {r2, r3}
   3d1fc:	bl	310d8 <flatcc_builder_table_add_union@@Base>
   3d200:	mov	r3, r0
   3d204:	cmp	r3, #0
   3d208:	beq	3d228 <flatcc_json_parser_union_type@@Base+0x23c>
   3d20c:	mov	r3, #28
   3d210:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3d214:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3d218:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3d21c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3d220:	mov	r3, r0
   3d224:	b	3d244 <flatcc_json_parser_union_type@@Base+0x258>
   3d228:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d22c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d230:	str	r2, [r3, #16]
   3d234:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d238:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d23c:	str	r2, [r3, #4]
   3d240:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3d244:	mov	r0, r3
   3d248:	sub	sp, fp, #8
   3d24c:	pop	{r4, fp, pc}
   3d250:	andeq	r5, r1, r8, ror r4
   3d254:	andeq	r0, r0, r5, asr #7
   3d258:	andeq	r4, r1, ip, lsl #31
   3d25c:	andeq	r4, r1, r8, ror #31
   3d260:	push	{r4, fp, lr}
   3d264:	add	fp, sp, #8
   3d268:	sub	sp, sp, #52	; 0x34
   3d26c:	str	r0, [fp, #-40]	; 0xffffffd8
   3d270:	str	r1, [fp, #-44]	; 0xffffffd4
   3d274:	str	r2, [fp, #-48]	; 0xffffffd0
   3d278:	str	r3, [fp, #-52]	; 0xffffffcc
   3d27c:	mov	r3, #0
   3d280:	str	r3, [fp, #-28]	; 0xffffffe4
   3d284:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d288:	ldr	r3, [r3]
   3d28c:	mov	r0, r3
   3d290:	bl	2f8e4 <flatcc_builder_start_offset_vector@@Base>
   3d294:	mov	r3, r0
   3d298:	cmp	r3, #0
   3d29c:	bne	3d45c <flatcc_json_parser_union_type@@Base+0x470>
   3d2a0:	sub	r3, fp, #32
   3d2a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d2a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3d2ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d2b0:	bl	36188 <flatcc_verify_union_vector_field@@Base+0x8d0>
   3d2b4:	str	r0, [fp, #-44]	; 0xffffffd4
   3d2b8:	mov	r3, #0
   3d2bc:	str	r3, [fp, #-16]
   3d2c0:	b	3d3a8 <flatcc_json_parser_union_type@@Base+0x3bc>
   3d2c4:	ldr	r2, [fp, #-16]
   3d2c8:	ldr	r3, [fp, #4]
   3d2cc:	cmp	r2, r3
   3d2d0:	bne	3d2f0 <flatcc_json_parser_union_type@@Base+0x304>
   3d2d4:	mov	r3, #30
   3d2d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d2dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3d2e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d2e4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3d2e8:	mov	r3, r0
   3d2ec:	b	3d490 <flatcc_json_parser_union_type@@Base+0x4a4>
   3d2f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d2f4:	ldr	r3, [r3]
   3d2f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3d2fc:	mov	r0, r3
   3d300:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3d304:	str	r0, [fp, #-20]	; 0xffffffec
   3d308:	ldr	r2, [fp, #-20]	; 0xffffffec
   3d30c:	ldr	r3, [fp, #-16]
   3d310:	add	r3, r2, r3
   3d314:	ldrb	r2, [r3]
   3d318:	sub	r3, fp, #28
   3d31c:	str	r3, [sp]
   3d320:	ldr	r4, [fp, #12]
   3d324:	mov	r3, r2
   3d328:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d32c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3d330:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d334:	blx	r4
   3d338:	str	r0, [fp, #-44]	; 0xffffffd4
   3d33c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3d340:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3d344:	cmp	r2, r3
   3d348:	bne	3d354 <flatcc_json_parser_union_type@@Base+0x368>
   3d34c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3d350:	b	3d490 <flatcc_json_parser_union_type@@Base+0x4a4>
   3d354:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d358:	ldr	r3, [r3]
   3d35c:	mov	r1, #1
   3d360:	mov	r0, r3
   3d364:	bl	2f190 <flatcc_builder_extend_offset_vector@@Base>
   3d368:	str	r0, [fp, #-24]	; 0xffffffe8
   3d36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d370:	cmp	r3, #0
   3d374:	beq	3d464 <flatcc_json_parser_union_type@@Base+0x478>
   3d378:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d37c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d380:	str	r2, [r3]
   3d384:	sub	r3, fp, #32
   3d388:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d38c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3d390:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d394:	bl	36270 <flatcc_verify_union_vector_field@@Base+0x9b8>
   3d398:	str	r0, [fp, #-44]	; 0xffffffd4
   3d39c:	ldr	r3, [fp, #-16]
   3d3a0:	add	r3, r3, #1
   3d3a4:	str	r3, [fp, #-16]
   3d3a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d3ac:	cmp	r3, #0
   3d3b0:	bne	3d2c4 <flatcc_json_parser_union_type@@Base+0x2d8>
   3d3b4:	ldr	r2, [fp, #-16]
   3d3b8:	ldr	r3, [fp, #4]
   3d3bc:	cmp	r2, r3
   3d3c0:	beq	3d3e0 <flatcc_json_parser_union_type@@Base+0x3f4>
   3d3c4:	mov	r3, #30
   3d3c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d3cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3d3d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d3d4:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3d3d8:	mov	r3, r0
   3d3dc:	b	3d490 <flatcc_json_parser_union_type@@Base+0x4a4>
   3d3e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d3e4:	ldr	r3, [r3]
   3d3e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3d3ec:	mov	r0, r3
   3d3f0:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3d3f4:	str	r0, [fp, #-20]	; 0xffffffec
   3d3f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d3fc:	ldr	r3, [r3]
   3d400:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d404:	mov	r0, r3
   3d408:	bl	30fdc <flatcc_builder_end_offset_vector_for_unions@@Base>
   3d40c:	mov	r3, r0
   3d410:	str	r3, [fp, #-28]	; 0xffffffe4
   3d414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d418:	cmp	r3, #0
   3d41c:	beq	3d46c <flatcc_json_parser_union_type@@Base+0x480>
   3d420:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d424:	ldr	r3, [r3]
   3d428:	ldrh	r2, [fp, #8]
   3d42c:	mov	r1, r2
   3d430:	mov	r0, r3
   3d434:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   3d438:	str	r0, [fp, #-24]	; 0xffffffe8
   3d43c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d440:	cmp	r3, #0
   3d444:	beq	3d474 <flatcc_json_parser_union_type@@Base+0x488>
   3d448:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d44c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d450:	str	r2, [r3]
   3d454:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3d458:	b	3d490 <flatcc_json_parser_union_type@@Base+0x4a4>
   3d45c:	nop			; (mov r0, r0)
   3d460:	b	3d478 <flatcc_json_parser_union_type@@Base+0x48c>
   3d464:	nop			; (mov r0, r0)
   3d468:	b	3d478 <flatcc_json_parser_union_type@@Base+0x48c>
   3d46c:	nop			; (mov r0, r0)
   3d470:	b	3d478 <flatcc_json_parser_union_type@@Base+0x48c>
   3d474:	nop			; (mov r0, r0)
   3d478:	mov	r3, #33	; 0x21
   3d47c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d480:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3d484:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3d488:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3d48c:	mov	r3, r0
   3d490:	mov	r0, r3
   3d494:	sub	sp, fp, #8
   3d498:	pop	{r4, fp, pc}

0003d49c <flatcc_json_parser_union_vector@@Base>:
   3d49c:	push	{fp, lr}
   3d4a0:	add	fp, sp, #4
   3d4a4:	sub	sp, sp, #40	; 0x28
   3d4a8:	str	r0, [fp, #-16]
   3d4ac:	str	r1, [fp, #-20]	; 0xffffffec
   3d4b0:	str	r2, [fp, #-24]	; 0xffffffe8
   3d4b4:	str	r3, [fp, #-28]	; 0xffffffe4
   3d4b8:	ldr	r3, [fp, #-16]
   3d4bc:	ldr	r3, [r3]
   3d4c0:	ldr	r1, [fp, #8]
   3d4c4:	mov	r0, r3
   3d4c8:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3d4cc:	str	r0, [fp, #-8]
   3d4d0:	ldr	r3, [fp, #-8]
   3d4d4:	add	r1, r3, #8
   3d4d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d4dc:	mov	r3, r2
   3d4e0:	lsl	r3, r3, #1
   3d4e4:	add	r3, r3, r2
   3d4e8:	lsl	r3, r3, #3
   3d4ec:	add	r3, r1, r3
   3d4f0:	str	r3, [fp, #-12]
   3d4f4:	ldr	r3, [fp, #-12]
   3d4f8:	ldr	r3, [r3]
   3d4fc:	cmp	r3, #0
   3d500:	beq	3d520 <flatcc_json_parser_union_vector@@Base+0x84>
   3d504:	mov	r3, #28
   3d508:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d50c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d510:	ldr	r0, [fp, #-16]
   3d514:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3d518:	mov	r3, r0
   3d51c:	b	3d5e4 <flatcc_json_parser_union_vector@@Base+0x148>
   3d520:	ldr	r3, [fp, #-12]
   3d524:	ldrb	r3, [r3, #12]
   3d528:	cmp	r3, #0
   3d52c:	bne	3d590 <flatcc_json_parser_union_vector@@Base+0xf4>
   3d530:	ldr	r3, [fp, #-8]
   3d534:	ldr	r3, [r3, #4]
   3d538:	add	r2, r3, #1
   3d53c:	ldr	r3, [fp, #-8]
   3d540:	str	r2, [r3, #4]
   3d544:	ldr	r3, [fp, #-16]
   3d548:	ldr	r2, [r3, #16]
   3d54c:	ldr	r3, [fp, #-12]
   3d550:	str	r2, [r3, #8]
   3d554:	ldr	r3, [fp, #-16]
   3d558:	ldr	r2, [r3, #4]
   3d55c:	ldr	r3, [fp, #-12]
   3d560:	str	r2, [r3, #4]
   3d564:	ldr	r3, [fp, #-12]
   3d568:	ldr	r2, [fp, #-20]	; 0xffffffec
   3d56c:	str	r2, [r3]
   3d570:	ldr	r3, [fp, #-12]
   3d574:	ldr	r3, [r3]
   3d578:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d57c:	mov	r1, r3
   3d580:	ldr	r0, [fp, #-16]
   3d584:	bl	3c210 <flatcc_json_parser_generic_json@@Base>
   3d588:	str	r0, [fp, #-20]	; 0xffffffec
   3d58c:	b	3d5e0 <flatcc_json_parser_union_vector@@Base+0x144>
   3d590:	ldr	r3, [fp, #-8]
   3d594:	ldr	r3, [r3, #4]
   3d598:	sub	r2, r3, #1
   3d59c:	ldr	r3, [fp, #-8]
   3d5a0:	str	r2, [r3, #4]
   3d5a4:	ldr	r3, [fp, #-12]
   3d5a8:	ldr	r1, [r3, #20]
   3d5ac:	ldr	r3, [fp, #-12]
   3d5b0:	ldr	r3, [r3, #16]
   3d5b4:	ldr	r2, [fp, #12]
   3d5b8:	str	r2, [sp, #8]
   3d5bc:	ldrh	r2, [fp, #4]
   3d5c0:	str	r2, [sp, #4]
   3d5c4:	str	r3, [sp]
   3d5c8:	mov	r3, r1
   3d5cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d5d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d5d4:	ldr	r0, [fp, #-16]
   3d5d8:	bl	3d260 <flatcc_json_parser_union_type@@Base+0x274>
   3d5dc:	str	r0, [fp, #-20]	; 0xffffffec
   3d5e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d5e4:	mov	r0, r3
   3d5e8:	sub	sp, fp, #4
   3d5ec:	pop	{fp, pc}

0003d5f0 <flatcc_json_parser_union_type_vector@@Base>:
   3d5f0:	push	{fp, lr}
   3d5f4:	add	fp, sp, #4
   3d5f8:	sub	sp, sp, #88	; 0x58
   3d5fc:	str	r0, [fp, #-64]	; 0xffffffc0
   3d600:	str	r1, [fp, #-68]	; 0xffffffbc
   3d604:	str	r2, [fp, #-72]	; 0xffffffb8
   3d608:	str	r3, [fp, #-76]	; 0xffffffb4
   3d60c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d610:	ldr	r3, [r3]
   3d614:	ldr	r1, [fp, #8]
   3d618:	mov	r0, r3
   3d61c:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3d620:	str	r0, [fp, #-8]
   3d624:	ldr	r3, [fp, #-8]
   3d628:	add	r1, r3, #8
   3d62c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3d630:	mov	r3, r2
   3d634:	lsl	r3, r3, #1
   3d638:	add	r3, r3, r2
   3d63c:	lsl	r3, r3, #3
   3d640:	add	r3, r1, r3
   3d644:	str	r3, [fp, #-12]
   3d648:	ldr	r3, [fp, #-12]
   3d64c:	ldrb	r3, [r3, #12]
   3d650:	cmp	r3, #0
   3d654:	beq	3d674 <flatcc_json_parser_union_type_vector@@Base+0x84>
   3d658:	mov	r3, #28
   3d65c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3d660:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3d664:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3d668:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3d66c:	mov	r3, r0
   3d670:	b	3da44 <flatcc_json_parser_union_type_vector@@Base+0x454>
   3d674:	ldr	r3, [fp, #-12]
   3d678:	mov	r2, #1
   3d67c:	strb	r2, [r3, #12]
   3d680:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d684:	ldr	r0, [r3]
   3d688:	mvn	r3, #0
   3d68c:	mov	r2, #1
   3d690:	mov	r1, #1
   3d694:	bl	2f838 <flatcc_builder_start_vector@@Base>
   3d698:	mov	r3, r0
   3d69c:	cmp	r3, #0
   3d6a0:	bne	3da10 <flatcc_json_parser_union_type_vector@@Base+0x420>
   3d6a4:	sub	r3, fp, #56	; 0x38
   3d6a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3d6ac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3d6b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3d6b4:	bl	36188 <flatcc_verify_union_vector_field@@Base+0x8d0>
   3d6b8:	str	r0, [fp, #-68]	; 0xffffffbc
   3d6bc:	b	3d7d8 <flatcc_json_parser_union_type_vector@@Base+0x1e8>
   3d6c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d6c4:	ldr	r3, [r3]
   3d6c8:	mov	r1, #1
   3d6cc:	mov	r0, r3
   3d6d0:	bl	2ef48 <flatcc_builder_extend_vector@@Base>
   3d6d4:	str	r0, [fp, #-16]
   3d6d8:	ldr	r3, [fp, #-16]
   3d6dc:	cmp	r3, #0
   3d6e0:	beq	3da18 <flatcc_json_parser_union_type_vector@@Base+0x428>
   3d6e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d6e8:	str	r3, [fp, #-20]	; 0xffffffec
   3d6ec:	sub	r3, fp, #57	; 0x39
   3d6f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3d6f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d6f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3d6fc:	bl	36a20 <flatcc_verify_union_vector_field@@Base+0x1168>
   3d700:	str	r0, [fp, #-68]	; 0xffffffbc
   3d704:	ldr	r2, [fp, #-20]	; 0xffffffec
   3d708:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d70c:	cmp	r2, r3
   3d710:	bne	3d75c <flatcc_json_parser_union_type_vector@@Base+0x16c>
   3d714:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d718:	str	r3, [fp, #-20]	; 0xffffffec
   3d71c:	sub	r3, fp, #57	; 0x39
   3d720:	str	r3, [sp]
   3d724:	ldr	r3, [fp, #12]
   3d728:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3d72c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d730:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3d734:	bl	36f8c <flatcc_verify_union_vector_field@@Base+0x16d4>
   3d738:	str	r0, [fp, #-68]	; 0xffffffbc
   3d73c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3d740:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d744:	cmp	r2, r3
   3d748:	beq	3da2c <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3d74c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3d750:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3d754:	cmp	r2, r3
   3d758:	beq	3da2c <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3d75c:	ldrb	r2, [fp, #-57]	; 0xffffffc7
   3d760:	ldr	r3, [fp, #20]
   3d764:	mov	r0, r2
   3d768:	blx	r3
   3d76c:	mov	r3, r0
   3d770:	cmp	r3, #0
   3d774:	bne	3d7b0 <flatcc_json_parser_union_type_vector@@Base+0x1c0>
   3d778:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d77c:	ldr	r3, [r3, #8]
   3d780:	and	r3, r3, #1
   3d784:	cmp	r3, #0
   3d788:	bne	3d7a8 <flatcc_json_parser_union_type_vector@@Base+0x1b8>
   3d78c:	mov	r3, #15
   3d790:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3d794:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3d798:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3d79c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3d7a0:	mov	r3, r0
   3d7a4:	b	3da44 <flatcc_json_parser_union_type_vector@@Base+0x454>
   3d7a8:	mov	r3, #0
   3d7ac:	strb	r3, [fp, #-57]	; 0xffffffc7
   3d7b0:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   3d7b4:	mov	r1, r3
   3d7b8:	ldr	r0, [fp, #-16]
   3d7bc:	bl	35b08 <flatcc_verify_union_vector_field@@Base+0x250>
   3d7c0:	sub	r3, fp, #56	; 0x38
   3d7c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3d7c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3d7cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3d7d0:	bl	36270 <flatcc_verify_union_vector_field@@Base+0x9b8>
   3d7d4:	str	r0, [fp, #-68]	; 0xffffffbc
   3d7d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3d7dc:	cmp	r3, #0
   3d7e0:	bne	3d6c0 <flatcc_json_parser_union_type_vector@@Base+0xd0>
   3d7e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d7e8:	ldr	r3, [r3]
   3d7ec:	mov	r0, r3
   3d7f0:	bl	30b60 <flatcc_builder_vector_count@@Base>
   3d7f4:	str	r0, [fp, #-24]	; 0xffffffe8
   3d7f8:	ldr	r3, [fp, #-12]
   3d7fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d800:	str	r2, [r3, #16]
   3d804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d808:	str	r3, [fp, #-28]	; 0xffffffe4
   3d80c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d810:	ldr	r3, [r3]
   3d814:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3d818:	mov	r0, r3
   3d81c:	bl	2da24 <flatcc_builder_enter_user_frame@@Base>
   3d820:	str	r0, [fp, #-32]	; 0xffffffe0
   3d824:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d828:	ldr	r3, [r3]
   3d82c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3d830:	mov	r0, r3
   3d834:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3d838:	str	r0, [fp, #-36]	; 0xffffffdc
   3d83c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d840:	ldr	r3, [r3]
   3d844:	mov	r0, r3
   3d848:	bl	30b8c <flatcc_builder_vector_edit@@Base>
   3d84c:	mov	r3, r0
   3d850:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d854:	mov	r1, r3
   3d858:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3d85c:	bl	14544 <memcpy@plt>
   3d860:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d864:	ldr	r3, [r3]
   3d868:	mov	r0, r3
   3d86c:	bl	30a90 <flatcc_builder_end_vector@@Base>
   3d870:	str	r0, [fp, #-40]	; 0xffffffd8
   3d874:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3d878:	cmp	r3, #0
   3d87c:	beq	3da20 <flatcc_json_parser_union_type_vector@@Base+0x430>
   3d880:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d884:	ldr	r2, [r3]
   3d888:	ldrh	r3, [fp, #4]
   3d88c:	sub	r3, r3, #1
   3d890:	mov	r1, r3
   3d894:	mov	r0, r2
   3d898:	bl	32220 <flatcc_builder_table_add_offset@@Base>
   3d89c:	str	r0, [fp, #-44]	; 0xffffffd4
   3d8a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3d8a4:	cmp	r3, #0
   3d8a8:	beq	3da28 <flatcc_json_parser_union_type_vector@@Base+0x438>
   3d8ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3d8b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3d8b4:	str	r2, [r3]
   3d8b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d8bc:	ldr	r3, [r3]
   3d8c0:	ldr	r1, [fp, #8]
   3d8c4:	mov	r0, r3
   3d8c8:	bl	2dc30 <flatcc_builder_get_user_frame_ptr@@Base>
   3d8cc:	str	r0, [fp, #-8]
   3d8d0:	ldr	r3, [fp, #-8]
   3d8d4:	add	r1, r3, #8
   3d8d8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3d8dc:	mov	r3, r2
   3d8e0:	lsl	r3, r3, #1
   3d8e4:	add	r3, r3, r2
   3d8e8:	lsl	r3, r3, #3
   3d8ec:	add	r3, r1, r3
   3d8f0:	str	r3, [fp, #-12]
   3d8f4:	ldr	r3, [fp, #-12]
   3d8f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d8fc:	str	r2, [r3, #20]
   3d900:	ldr	r3, [fp, #-12]
   3d904:	ldr	r3, [r3]
   3d908:	cmp	r3, #0
   3d90c:	bne	3d92c <flatcc_json_parser_union_type_vector@@Base+0x33c>
   3d910:	ldr	r3, [fp, #-8]
   3d914:	ldr	r3, [r3, #4]
   3d918:	add	r2, r3, #1
   3d91c:	ldr	r3, [fp, #-8]
   3d920:	str	r2, [r3, #4]
   3d924:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d928:	b	3da44 <flatcc_json_parser_union_type_vector@@Base+0x454>
   3d92c:	ldr	r3, [fp, #-8]
   3d930:	ldr	r3, [r3, #4]
   3d934:	cmp	r3, #0
   3d938:	bne	3d95c <flatcc_json_parser_union_type_vector@@Base+0x36c>
   3d93c:	ldr	r3, [pc, #268]	; 3da50 <flatcc_json_parser_union_type_vector@@Base+0x460>
   3d940:	add	r3, pc, r3
   3d944:	ldr	r2, [pc, #264]	; 3da54 <flatcc_json_parser_union_type_vector@@Base+0x464>
   3d948:	ldr	r1, [pc, #264]	; 3da58 <flatcc_json_parser_union_type_vector@@Base+0x468>
   3d94c:	add	r1, pc, r1
   3d950:	ldr	r0, [pc, #260]	; 3da5c <flatcc_json_parser_union_type_vector@@Base+0x46c>
   3d954:	add	r0, pc, r0
   3d958:	bl	14610 <__assert_fail@plt>
   3d95c:	ldr	r3, [fp, #-8]
   3d960:	ldr	r3, [r3, #4]
   3d964:	sub	r2, r3, #1
   3d968:	ldr	r3, [fp, #-8]
   3d96c:	str	r2, [r3, #4]
   3d970:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d974:	ldr	r3, [r3, #16]
   3d978:	str	r3, [fp, #-48]	; 0xffffffd0
   3d97c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d980:	ldr	r3, [r3, #4]
   3d984:	str	r3, [fp, #-52]	; 0xffffffcc
   3d988:	ldr	r3, [fp, #-12]
   3d98c:	ldr	r2, [r3, #8]
   3d990:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d994:	str	r2, [r3, #16]
   3d998:	ldr	r3, [fp, #-12]
   3d99c:	ldr	r2, [r3, #4]
   3d9a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d9a4:	str	r2, [r3, #4]
   3d9a8:	ldr	r3, [fp, #-12]
   3d9ac:	ldr	r1, [r3]
   3d9b0:	ldr	r3, [fp, #16]
   3d9b4:	str	r3, [sp, #8]
   3d9b8:	ldrh	r3, [fp, #4]
   3d9bc:	str	r3, [sp, #4]
   3d9c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d9c4:	str	r3, [sp]
   3d9c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d9cc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3d9d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3d9d4:	bl	3d260 <flatcc_json_parser_union_type@@Base+0x274>
   3d9d8:	mov	r2, r0
   3d9dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3d9e0:	cmp	r2, r3
   3d9e4:	bne	3d9f0 <flatcc_json_parser_union_type_vector@@Base+0x400>
   3d9e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3d9ec:	b	3da44 <flatcc_json_parser_union_type_vector@@Base+0x454>
   3d9f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3d9f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3d9f8:	str	r2, [r3, #16]
   3d9fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3da00:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3da04:	str	r2, [r3, #4]
   3da08:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3da0c:	b	3da44 <flatcc_json_parser_union_type_vector@@Base+0x454>
   3da10:	nop			; (mov r0, r0)
   3da14:	b	3da2c <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3da18:	nop			; (mov r0, r0)
   3da1c:	b	3da2c <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3da20:	nop			; (mov r0, r0)
   3da24:	b	3da2c <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3da28:	nop			; (mov r0, r0)
   3da2c:	mov	r3, #33	; 0x21
   3da30:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3da34:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3da38:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3da3c:	bl	3a9fc <flatcc_json_parser_set_error@@Base>
   3da40:	mov	r3, r0
   3da44:	mov	r0, r3
   3da48:	sub	sp, fp, #4
   3da4c:	pop	{fp, pc}
   3da50:	andeq	r4, r1, r4, lsl #25
   3da54:	andeq	r0, r0, r2, ror #8
   3da58:	andeq	r4, r1, r8, ror r7
   3da5c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>

0003da60 <flatcc_json_parser_table_as_root@@Base>:
   3da60:	push	{r4, fp, lr}
   3da64:	add	fp, sp, #8
   3da68:	sub	sp, sp, #84	; 0x54
   3da6c:	str	r0, [fp, #-72]	; 0xffffffb8
   3da70:	str	r1, [fp, #-76]	; 0xffffffb4
   3da74:	str	r2, [fp, #-80]	; 0xffffffb0
   3da78:	str	r3, [fp, #-84]	; 0xffffffac
   3da7c:	ldr	r3, [fp, #4]
   3da80:	and	r3, r3, #4
   3da84:	cmp	r3, #0
   3da88:	beq	3da94 <flatcc_json_parser_table_as_root@@Base+0x34>
   3da8c:	mov	r3, #2
   3da90:	b	3da98 <flatcc_json_parser_table_as_root@@Base+0x38>
   3da94:	mov	r3, #0
   3da98:	str	r3, [fp, #-16]
   3da9c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3daa0:	cmp	r3, #0
   3daa4:	bne	3dab0 <flatcc_json_parser_table_as_root@@Base+0x50>
   3daa8:	sub	r3, fp, #60	; 0x3c
   3daac:	b	3dab4 <flatcc_json_parser_table_as_root@@Base+0x54>
   3dab0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3dab4:	str	r3, [fp, #-76]	; 0xffffffb4
   3dab8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3dabc:	ldr	r3, [fp, #-84]	; 0xffffffac
   3dac0:	add	r2, r2, r3
   3dac4:	ldr	r3, [fp, #4]
   3dac8:	str	r3, [sp]
   3dacc:	mov	r3, r2
   3dad0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3dad4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   3dad8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   3dadc:	bl	35b48 <flatcc_verify_union_vector_field@@Base+0x290>
   3dae0:	ldr	r3, [fp, #-16]
   3dae4:	mov	r2, #0
   3dae8:	ldr	r1, [fp, #8]
   3daec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3daf0:	bl	2ea8c <flatcc_builder_start_buffer@@Base>
   3daf4:	mov	r3, r0
   3daf8:	cmp	r3, #0
   3dafc:	beq	3db08 <flatcc_json_parser_table_as_root@@Base+0xa8>
   3db00:	mvn	r3, #0
   3db04:	b	3db78 <flatcc_json_parser_table_as_root@@Base+0x118>
   3db08:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3db0c:	ldr	r3, [fp, #-84]	; 0xffffffac
   3db10:	add	r2, r2, r3
   3db14:	sub	r3, fp, #64	; 0x40
   3db18:	ldr	r4, [fp, #12]
   3db1c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   3db20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   3db24:	blx	r4
   3db28:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3db2c:	ldr	r3, [r3, #24]
   3db30:	cmp	r3, #0
   3db34:	beq	3db44 <flatcc_json_parser_table_as_root@@Base+0xe4>
   3db38:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3db3c:	ldr	r3, [r3, #24]
   3db40:	b	3db78 <flatcc_json_parser_table_as_root@@Base+0x118>
   3db44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3db48:	mov	r1, r3
   3db4c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3db50:	bl	2ebe4 <flatcc_builder_end_buffer@@Base>
   3db54:	mov	r3, r0
   3db58:	cmp	r3, #0
   3db5c:	bne	3db68 <flatcc_json_parser_table_as_root@@Base+0x108>
   3db60:	mvn	r3, #0
   3db64:	b	3db78 <flatcc_json_parser_table_as_root@@Base+0x118>
   3db68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3db6c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3db70:	str	r2, [r3, #40]	; 0x28
   3db74:	mov	r3, #0
   3db78:	mov	r0, r3
   3db7c:	sub	sp, fp, #8
   3db80:	pop	{r4, fp, pc}

0003db84 <flatcc_json_parser_struct_as_root@@Base>:
   3db84:	push	{r4, fp, lr}
   3db88:	add	fp, sp, #8
   3db8c:	sub	sp, sp, #84	; 0x54
   3db90:	str	r0, [fp, #-72]	; 0xffffffb8
   3db94:	str	r1, [fp, #-76]	; 0xffffffb4
   3db98:	str	r2, [fp, #-80]	; 0xffffffb0
   3db9c:	str	r3, [fp, #-84]	; 0xffffffac
   3dba0:	ldr	r3, [fp, #4]
   3dba4:	and	r3, r3, #4
   3dba8:	cmp	r3, #0
   3dbac:	beq	3dbb8 <flatcc_json_parser_struct_as_root@@Base+0x34>
   3dbb0:	mov	r3, #2
   3dbb4:	b	3dbbc <flatcc_json_parser_struct_as_root@@Base+0x38>
   3dbb8:	mov	r3, #0
   3dbbc:	str	r3, [fp, #-16]
   3dbc0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3dbc4:	cmp	r3, #0
   3dbc8:	bne	3dbd4 <flatcc_json_parser_struct_as_root@@Base+0x50>
   3dbcc:	sub	r3, fp, #60	; 0x3c
   3dbd0:	b	3dbd8 <flatcc_json_parser_struct_as_root@@Base+0x54>
   3dbd4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3dbd8:	str	r3, [fp, #-76]	; 0xffffffb4
   3dbdc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3dbe0:	ldr	r3, [fp, #-84]	; 0xffffffac
   3dbe4:	add	r2, r2, r3
   3dbe8:	ldr	r3, [fp, #4]
   3dbec:	str	r3, [sp]
   3dbf0:	mov	r3, r2
   3dbf4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3dbf8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   3dbfc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   3dc00:	bl	35b48 <flatcc_verify_union_vector_field@@Base+0x290>
   3dc04:	ldr	r3, [fp, #-16]
   3dc08:	mov	r2, #0
   3dc0c:	ldr	r1, [fp, #8]
   3dc10:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3dc14:	bl	2ea8c <flatcc_builder_start_buffer@@Base>
   3dc18:	mov	r3, r0
   3dc1c:	cmp	r3, #0
   3dc20:	beq	3dc2c <flatcc_json_parser_struct_as_root@@Base+0xa8>
   3dc24:	mvn	r3, #0
   3dc28:	b	3dc9c <flatcc_json_parser_struct_as_root@@Base+0x118>
   3dc2c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3dc30:	ldr	r3, [fp, #-84]	; 0xffffffac
   3dc34:	add	r2, r2, r3
   3dc38:	sub	r3, fp, #64	; 0x40
   3dc3c:	ldr	r4, [fp, #12]
   3dc40:	ldr	r1, [fp, #-80]	; 0xffffffb0
   3dc44:	ldr	r0, [fp, #-76]	; 0xffffffb4
   3dc48:	blx	r4
   3dc4c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3dc50:	ldr	r3, [r3, #24]
   3dc54:	cmp	r3, #0
   3dc58:	beq	3dc68 <flatcc_json_parser_struct_as_root@@Base+0xe4>
   3dc5c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3dc60:	ldr	r3, [r3, #24]
   3dc64:	b	3dc9c <flatcc_json_parser_struct_as_root@@Base+0x118>
   3dc68:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3dc6c:	mov	r1, r3
   3dc70:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3dc74:	bl	2ebe4 <flatcc_builder_end_buffer@@Base>
   3dc78:	mov	r3, r0
   3dc7c:	cmp	r3, #0
   3dc80:	bne	3dc8c <flatcc_json_parser_struct_as_root@@Base+0x108>
   3dc84:	mvn	r3, #0
   3dc88:	b	3dc9c <flatcc_json_parser_struct_as_root@@Base+0x118>
   3dc8c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3dc90:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3dc94:	str	r2, [r3, #40]	; 0x28
   3dc98:	mov	r3, #0
   3dc9c:	mov	r0, r3
   3dca0:	sub	sp, fp, #8
   3dca4:	pop	{r4, fp, pc}
   3dca8:	push	{fp}		; (str fp, [sp, #-4]!)
   3dcac:	add	fp, sp, #0
   3dcb0:	sub	sp, sp, #12
   3dcb4:	mov	r3, r0
   3dcb8:	strb	r3, [fp, #-5]
   3dcbc:	ldrb	r3, [fp, #-5]
   3dcc0:	mov	r0, r3
   3dcc4:	add	sp, fp, #0
   3dcc8:	pop	{fp}		; (ldr fp, [sp], #4)
   3dccc:	bx	lr
   3dcd0:	push	{fp, lr}
   3dcd4:	add	fp, sp, #4
   3dcd8:	sub	sp, sp, #8
   3dcdc:	str	r0, [fp, #-8]
   3dce0:	ldr	r3, [fp, #-8]
   3dce4:	ldrb	r3, [r3]
   3dce8:	mov	r0, r3
   3dcec:	bl	3dca8 <flatcc_json_parser_struct_as_root@@Base+0x124>
   3dcf0:	mov	r3, r0
   3dcf4:	mov	r0, r3
   3dcf8:	sub	sp, fp, #4
   3dcfc:	pop	{fp, pc}
   3dd00:	push	{fp}		; (str fp, [sp, #-4]!)
   3dd04:	add	fp, sp, #0
   3dd08:	sub	sp, sp, #12
   3dd0c:	mov	r3, r0
   3dd10:	strh	r3, [fp, #-6]
   3dd14:	ldrh	r3, [fp, #-6]
   3dd18:	mov	r0, r3
   3dd1c:	add	sp, fp, #0
   3dd20:	pop	{fp}		; (ldr fp, [sp], #4)
   3dd24:	bx	lr
   3dd28:	push	{fp, lr}
   3dd2c:	add	fp, sp, #4
   3dd30:	sub	sp, sp, #8
   3dd34:	str	r0, [fp, #-8]
   3dd38:	ldr	r3, [fp, #-8]
   3dd3c:	ldrh	r3, [r3]
   3dd40:	mov	r0, r3
   3dd44:	bl	3dd00 <flatcc_json_parser_struct_as_root@@Base+0x17c>
   3dd48:	mov	r3, r0
   3dd4c:	mov	r0, r3
   3dd50:	sub	sp, fp, #4
   3dd54:	pop	{fp, pc}
   3dd58:	push	{fp}		; (str fp, [sp, #-4]!)
   3dd5c:	add	fp, sp, #0
   3dd60:	sub	sp, sp, #12
   3dd64:	str	r0, [fp, #-8]
   3dd68:	ldr	r3, [fp, #-8]
   3dd6c:	mov	r0, r3
   3dd70:	add	sp, fp, #0
   3dd74:	pop	{fp}		; (ldr fp, [sp], #4)
   3dd78:	bx	lr
   3dd7c:	push	{fp, lr}
   3dd80:	add	fp, sp, #4
   3dd84:	sub	sp, sp, #8
   3dd88:	str	r0, [fp, #-8]
   3dd8c:	ldr	r3, [fp, #-8]
   3dd90:	ldr	r3, [r3]
   3dd94:	mov	r0, r3
   3dd98:	bl	3dd58 <flatcc_json_parser_struct_as_root@@Base+0x1d4>
   3dd9c:	mov	r3, r0
   3dda0:	mov	r0, r3
   3dda4:	sub	sp, fp, #4
   3dda8:	pop	{fp, pc}
   3ddac:	push	{fp}		; (str fp, [sp, #-4]!)
   3ddb0:	add	fp, sp, #0
   3ddb4:	sub	sp, sp, #12
   3ddb8:	strd	r0, [fp, #-12]
   3ddbc:	ldrd	r2, [fp, #-12]
   3ddc0:	mov	r0, r2
   3ddc4:	mov	r1, r3
   3ddc8:	add	sp, fp, #0
   3ddcc:	pop	{fp}		; (ldr fp, [sp], #4)
   3ddd0:	bx	lr
   3ddd4:	push	{fp, lr}
   3ddd8:	add	fp, sp, #4
   3dddc:	sub	sp, sp, #8
   3dde0:	str	r0, [fp, #-8]
   3dde4:	ldr	r3, [fp, #-8]
   3dde8:	ldrd	r2, [r3]
   3ddec:	mov	r0, r2
   3ddf0:	mov	r1, r3
   3ddf4:	bl	3ddac <flatcc_json_parser_struct_as_root@@Base+0x228>
   3ddf8:	mov	r2, r0
   3ddfc:	mov	r3, r1
   3de00:	mov	r0, r2
   3de04:	mov	r1, r3
   3de08:	sub	sp, fp, #4
   3de0c:	pop	{fp, pc}
   3de10:	push	{fp}		; (str fp, [sp, #-4]!)
   3de14:	add	fp, sp, #0
   3de18:	sub	sp, sp, #12
   3de1c:	mov	r3, r0
   3de20:	strb	r3, [fp, #-5]
   3de24:	ldrsb	r3, [fp, #-5]
   3de28:	mov	r0, r3
   3de2c:	add	sp, fp, #0
   3de30:	pop	{fp}		; (ldr fp, [sp], #4)
   3de34:	bx	lr
   3de38:	push	{fp, lr}
   3de3c:	add	fp, sp, #4
   3de40:	sub	sp, sp, #8
   3de44:	str	r0, [fp, #-8]
   3de48:	ldr	r3, [fp, #-8]
   3de4c:	ldrsb	r3, [r3]
   3de50:	mov	r0, r3
   3de54:	bl	3de10 <flatcc_json_parser_struct_as_root@@Base+0x28c>
   3de58:	mov	r3, r0
   3de5c:	mov	r0, r3
   3de60:	sub	sp, fp, #4
   3de64:	pop	{fp, pc}
   3de68:	push	{fp}		; (str fp, [sp, #-4]!)
   3de6c:	add	fp, sp, #0
   3de70:	sub	sp, sp, #12
   3de74:	mov	r3, r0
   3de78:	strh	r3, [fp, #-6]
   3de7c:	ldrsh	r3, [fp, #-6]
   3de80:	mov	r0, r3
   3de84:	add	sp, fp, #0
   3de88:	pop	{fp}		; (ldr fp, [sp], #4)
   3de8c:	bx	lr
   3de90:	push	{fp, lr}
   3de94:	add	fp, sp, #4
   3de98:	sub	sp, sp, #8
   3de9c:	str	r0, [fp, #-8]
   3dea0:	ldr	r3, [fp, #-8]
   3dea4:	ldrsh	r3, [r3]
   3dea8:	mov	r0, r3
   3deac:	bl	3de68 <flatcc_json_parser_struct_as_root@@Base+0x2e4>
   3deb0:	mov	r3, r0
   3deb4:	mov	r0, r3
   3deb8:	sub	sp, fp, #4
   3debc:	pop	{fp, pc}
   3dec0:	push	{fp}		; (str fp, [sp, #-4]!)
   3dec4:	add	fp, sp, #0
   3dec8:	sub	sp, sp, #12
   3decc:	str	r0, [fp, #-8]
   3ded0:	ldr	r3, [fp, #-8]
   3ded4:	mov	r0, r3
   3ded8:	add	sp, fp, #0
   3dedc:	pop	{fp}		; (ldr fp, [sp], #4)
   3dee0:	bx	lr
   3dee4:	push	{fp, lr}
   3dee8:	add	fp, sp, #4
   3deec:	sub	sp, sp, #8
   3def0:	str	r0, [fp, #-8]
   3def4:	ldr	r3, [fp, #-8]
   3def8:	ldr	r3, [r3]
   3defc:	mov	r0, r3
   3df00:	bl	3dec0 <flatcc_json_parser_struct_as_root@@Base+0x33c>
   3df04:	mov	r3, r0
   3df08:	mov	r0, r3
   3df0c:	sub	sp, fp, #4
   3df10:	pop	{fp, pc}
   3df14:	push	{fp}		; (str fp, [sp, #-4]!)
   3df18:	add	fp, sp, #0
   3df1c:	sub	sp, sp, #12
   3df20:	strd	r0, [fp, #-12]
   3df24:	ldrd	r2, [fp, #-12]
   3df28:	mov	r0, r2
   3df2c:	mov	r1, r3
   3df30:	add	sp, fp, #0
   3df34:	pop	{fp}		; (ldr fp, [sp], #4)
   3df38:	bx	lr
   3df3c:	push	{fp, lr}
   3df40:	add	fp, sp, #4
   3df44:	sub	sp, sp, #8
   3df48:	str	r0, [fp, #-8]
   3df4c:	ldr	r3, [fp, #-8]
   3df50:	ldrd	r2, [r3]
   3df54:	mov	r0, r2
   3df58:	mov	r1, r3
   3df5c:	bl	3df14 <flatcc_json_parser_struct_as_root@@Base+0x390>
   3df60:	mov	r2, r0
   3df64:	mov	r3, r1
   3df68:	mov	r0, r2
   3df6c:	mov	r1, r3
   3df70:	sub	sp, fp, #4
   3df74:	pop	{fp, pc}
   3df78:	push	{fp}		; (str fp, [sp, #-4]!)
   3df7c:	add	fp, sp, #0
   3df80:	sub	sp, sp, #20
   3df84:	vstr	s0, [fp, #-16]
   3df88:	ldr	r3, [fp, #-16]
   3df8c:	str	r3, [fp, #-8]
   3df90:	ldr	r3, [fp, #-8]
   3df94:	str	r3, [fp, #-8]
   3df98:	ldr	r3, [fp, #-8]
   3df9c:	vmov	s15, r3
   3dfa0:	vmov.f32	s0, s15
   3dfa4:	add	sp, fp, #0
   3dfa8:	pop	{fp}		; (ldr fp, [sp], #4)
   3dfac:	bx	lr
   3dfb0:	push	{fp, lr}
   3dfb4:	add	fp, sp, #4
   3dfb8:	sub	sp, sp, #8
   3dfbc:	str	r0, [fp, #-8]
   3dfc0:	ldr	r3, [fp, #-8]
   3dfc4:	vldr	s15, [r3]
   3dfc8:	vmov.f32	s0, s15
   3dfcc:	bl	3df78 <flatcc_json_parser_struct_as_root@@Base+0x3f4>
   3dfd0:	vmov.f32	s15, s0
   3dfd4:	vmov.f32	s0, s15
   3dfd8:	sub	sp, fp, #4
   3dfdc:	pop	{fp, pc}
   3dfe0:	push	{fp}		; (str fp, [sp, #-4]!)
   3dfe4:	add	fp, sp, #0
   3dfe8:	sub	sp, sp, #20
   3dfec:	vstr	d0, [fp, #-20]	; 0xffffffec
   3dff0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3dff4:	strd	r2, [fp, #-12]
   3dff8:	ldrd	r2, [fp, #-12]
   3dffc:	strd	r2, [fp, #-12]
   3e000:	ldrd	r2, [fp, #-12]
   3e004:	vmov	d7, r2, r3
   3e008:	vmov.f64	d0, d7
   3e00c:	add	sp, fp, #0
   3e010:	pop	{fp}		; (ldr fp, [sp], #4)
   3e014:	bx	lr
   3e018:	push	{fp, lr}
   3e01c:	add	fp, sp, #4
   3e020:	sub	sp, sp, #8
   3e024:	str	r0, [fp, #-8]
   3e028:	ldr	r3, [fp, #-8]
   3e02c:	vldr	d7, [r3]
   3e030:	vmov.f64	d0, d7
   3e034:	bl	3dfe0 <flatcc_json_parser_struct_as_root@@Base+0x45c>
   3e038:	vmov.f64	d7, d0
   3e03c:	vmov.f64	d0, d7
   3e040:	sub	sp, fp, #4
   3e044:	pop	{fp, pc}
   3e048:	push	{fp}		; (str fp, [sp, #-4]!)
   3e04c:	add	fp, sp, #0
   3e050:	sub	sp, sp, #12
   3e054:	mov	r3, r0
   3e058:	strb	r3, [fp, #-5]
   3e05c:	ldrb	r3, [fp, #-5]
   3e060:	mov	r0, r3
   3e064:	add	sp, fp, #0
   3e068:	pop	{fp}		; (ldr fp, [sp], #4)
   3e06c:	bx	lr
   3e070:	push	{fp, lr}
   3e074:	add	fp, sp, #4
   3e078:	sub	sp, sp, #8
   3e07c:	str	r0, [fp, #-8]
   3e080:	ldr	r3, [fp, #-8]
   3e084:	ldrb	r3, [r3]
   3e088:	mov	r0, r3
   3e08c:	bl	3e048 <flatcc_json_parser_struct_as_root@@Base+0x4c4>
   3e090:	mov	r3, r0
   3e094:	mov	r0, r3
   3e098:	sub	sp, fp, #4
   3e09c:	pop	{fp, pc}
   3e0a0:	push	{fp}		; (str fp, [sp, #-4]!)
   3e0a4:	add	fp, sp, #0
   3e0a8:	sub	sp, sp, #12
   3e0ac:	str	r0, [fp, #-8]
   3e0b0:	ldr	r3, [fp, #-8]
   3e0b4:	mov	r0, r3
   3e0b8:	add	sp, fp, #0
   3e0bc:	pop	{fp}		; (ldr fp, [sp], #4)
   3e0c0:	bx	lr
   3e0c4:	push	{fp, lr}
   3e0c8:	add	fp, sp, #4
   3e0cc:	sub	sp, sp, #8
   3e0d0:	str	r0, [fp, #-8]
   3e0d4:	ldr	r3, [fp, #-8]
   3e0d8:	ldr	r3, [r3]
   3e0dc:	mov	r0, r3
   3e0e0:	bl	3e0a0 <flatcc_json_parser_struct_as_root@@Base+0x51c>
   3e0e4:	mov	r3, r0
   3e0e8:	mov	r0, r3
   3e0ec:	sub	sp, fp, #4
   3e0f0:	pop	{fp, pc}
   3e0f4:	push	{fp}		; (str fp, [sp, #-4]!)
   3e0f8:	add	fp, sp, #0
   3e0fc:	sub	sp, sp, #12
   3e100:	str	r0, [fp, #-8]
   3e104:	ldr	r3, [fp, #-8]
   3e108:	mov	r0, r3
   3e10c:	add	sp, fp, #0
   3e110:	pop	{fp}		; (ldr fp, [sp], #4)
   3e114:	bx	lr
   3e118:	push	{fp, lr}
   3e11c:	add	fp, sp, #4
   3e120:	sub	sp, sp, #8
   3e124:	str	r0, [fp, #-8]
   3e128:	ldr	r3, [fp, #-8]
   3e12c:	ldr	r3, [r3]
   3e130:	mov	r0, r3
   3e134:	bl	3e0f4 <flatcc_json_parser_struct_as_root@@Base+0x570>
   3e138:	mov	r3, r0
   3e13c:	mov	r0, r3
   3e140:	sub	sp, fp, #4
   3e144:	pop	{fp, pc}
   3e148:	push	{fp}		; (str fp, [sp, #-4]!)
   3e14c:	add	fp, sp, #0
   3e150:	sub	sp, sp, #12
   3e154:	mov	r3, r0
   3e158:	strh	r3, [fp, #-6]
   3e15c:	ldrh	r3, [fp, #-6]
   3e160:	mov	r0, r3
   3e164:	add	sp, fp, #0
   3e168:	pop	{fp}		; (ldr fp, [sp], #4)
   3e16c:	bx	lr
   3e170:	push	{fp, lr}
   3e174:	add	fp, sp, #4
   3e178:	sub	sp, sp, #8
   3e17c:	str	r0, [fp, #-8]
   3e180:	ldr	r3, [fp, #-8]
   3e184:	ldrh	r3, [r3]
   3e188:	mov	r0, r3
   3e18c:	bl	3e148 <flatcc_json_parser_struct_as_root@@Base+0x5c4>
   3e190:	mov	r3, r0
   3e194:	mov	r0, r3
   3e198:	sub	sp, fp, #4
   3e19c:	pop	{fp, pc}
   3e1a0:	push	{fp}		; (str fp, [sp, #-4]!)
   3e1a4:	add	fp, sp, #0
   3e1a8:	sub	sp, sp, #12
   3e1ac:	mov	r3, r0
   3e1b0:	strb	r3, [fp, #-5]
   3e1b4:	ldrb	r3, [fp, #-5]
   3e1b8:	mov	r0, r3
   3e1bc:	add	sp, fp, #0
   3e1c0:	pop	{fp}		; (ldr fp, [sp], #4)
   3e1c4:	bx	lr
   3e1c8:	push	{fp, lr}
   3e1cc:	add	fp, sp, #4
   3e1d0:	sub	sp, sp, #8
   3e1d4:	str	r0, [fp, #-8]
   3e1d8:	ldr	r3, [fp, #-8]
   3e1dc:	ldrb	r3, [r3]
   3e1e0:	mov	r0, r3
   3e1e4:	bl	3e1a0 <flatcc_json_parser_struct_as_root@@Base+0x61c>
   3e1e8:	mov	r3, r0
   3e1ec:	mov	r0, r3
   3e1f0:	sub	sp, fp, #4
   3e1f4:	pop	{fp, pc}
   3e1f8:	push	{fp}		; (str fp, [sp, #-4]!)
   3e1fc:	add	fp, sp, #0
   3e200:	sub	sp, sp, #12
   3e204:	str	r0, [fp, #-8]
   3e208:	ldr	r3, [fp, #-8]
   3e20c:	mov	r0, r3
   3e210:	add	sp, fp, #0
   3e214:	pop	{fp}		; (ldr fp, [sp], #4)
   3e218:	bx	lr
   3e21c:	push	{fp}		; (str fp, [sp, #-4]!)
   3e220:	add	fp, sp, #0
   3e224:	sub	sp, sp, #12
   3e228:	str	r0, [fp, #-8]
   3e22c:	ldr	r3, [fp, #-8]
   3e230:	mov	r0, r3
   3e234:	add	sp, fp, #0
   3e238:	pop	{fp}		; (ldr fp, [sp], #4)
   3e23c:	bx	lr
   3e240:	push	{fp, lr}
   3e244:	add	fp, sp, #4
   3e248:	sub	sp, sp, #8
   3e24c:	str	r0, [fp, #-8]
   3e250:	ldr	r3, [fp, #-8]
   3e254:	ldr	r3, [r3]
   3e258:	mov	r0, r3
   3e25c:	bl	3e1f8 <flatcc_json_parser_struct_as_root@@Base+0x674>
   3e260:	mov	r3, r0
   3e264:	mov	r0, r3
   3e268:	sub	sp, fp, #4
   3e26c:	pop	{fp, pc}
   3e270:	push	{fp}		; (str fp, [sp, #-4]!)
   3e274:	add	fp, sp, #0
   3e278:	sub	sp, sp, #12
   3e27c:	str	r0, [fp, #-8]
   3e280:	str	r1, [fp, #-12]
   3e284:	ldr	r3, [fp, #-8]
   3e288:	ldr	r3, [r3, #36]	; 0x24
   3e28c:	cmp	r3, #0
   3e290:	bne	3e2a0 <flatcc_json_parser_struct_as_root@@Base+0x71c>
   3e294:	ldr	r3, [fp, #-8]
   3e298:	ldr	r2, [fp, #-12]
   3e29c:	str	r2, [r3, #36]	; 0x24
   3e2a0:	nop			; (mov r0, r0)
   3e2a4:	add	sp, fp, #0
   3e2a8:	pop	{fp}		; (ldr fp, [sp], #4)
   3e2ac:	bx	lr
   3e2b0:	push	{fp}		; (str fp, [sp, #-4]!)
   3e2b4:	add	fp, sp, #0
   3e2b8:	sub	sp, sp, #12
   3e2bc:	str	r0, [fp, #-8]
   3e2c0:	ldr	r3, [fp, #-8]
   3e2c4:	ldr	r3, [r3, #36]	; 0x24
   3e2c8:	mov	r0, r3
   3e2cc:	add	sp, fp, #0
   3e2d0:	pop	{fp}		; (ldr fp, [sp], #4)
   3e2d4:	bx	lr
   3e2d8:	push	{fp, lr}
   3e2dc:	add	fp, sp, #4
   3e2e0:	sub	sp, sp, #8
   3e2e4:	str	r0, [fp, #-8]
   3e2e8:	ldr	r3, [fp, #-8]
   3e2ec:	ldr	r2, [r3, #20]
   3e2f0:	ldr	r3, [fp, #-8]
   3e2f4:	ldr	r3, [r3, #16]
   3e2f8:	cmp	r2, r3
   3e2fc:	bcc	3e314 <flatcc_json_parser_struct_as_root@@Base+0x790>
   3e300:	ldr	r3, [fp, #-8]
   3e304:	ldr	r3, [r3, #44]	; 0x2c
   3e308:	mov	r1, #0
   3e30c:	ldr	r0, [fp, #-8]
   3e310:	blx	r3
   3e314:	nop			; (mov r0, r0)
   3e318:	sub	sp, fp, #4
   3e31c:	pop	{fp, pc}
   3e320:	push	{fp, lr}
   3e324:	add	fp, sp, #4
   3e328:	sub	sp, sp, #8
   3e32c:	str	r0, [fp, #-8]
   3e330:	str	r1, [fp, #-12]
   3e334:	ldr	r3, [fp, #-8]
   3e338:	cmp	r3, #0
   3e33c:	beq	3e360 <flatcc_json_parser_struct_as_root@@Base+0x7dc>
   3e340:	mov	r2, #5
   3e344:	ldr	r3, [pc, #60]	; 3e388 <flatcc_json_parser_struct_as_root@@Base+0x804>
   3e348:	add	r3, pc, r3
   3e34c:	mov	r1, r3
   3e350:	ldr	r0, [fp, #-12]
   3e354:	bl	14544 <memcpy@plt>
   3e358:	mov	r3, #4
   3e35c:	b	3e37c <flatcc_json_parser_struct_as_root@@Base+0x7f8>
   3e360:	mov	r2, #6
   3e364:	ldr	r3, [pc, #32]	; 3e38c <flatcc_json_parser_struct_as_root@@Base+0x808>
   3e368:	add	r3, pc, r3
   3e36c:	mov	r1, r3
   3e370:	ldr	r0, [fp, #-12]
   3e374:	bl	14544 <memcpy@plt>
   3e378:	mov	r3, #5
   3e37c:	mov	r0, r3
   3e380:	sub	sp, fp, #4
   3e384:	pop	{fp, pc}
   3e388:	andeq	r4, r1, r8, ror r3
   3e38c:	andeq	r4, r1, r0, ror #6
   3e390:	push	{fp}		; (str fp, [sp, #-4]!)
   3e394:	add	fp, sp, #0
   3e398:	sub	sp, sp, #20
   3e39c:	mov	r3, r0
   3e3a0:	str	r1, [fp, #-20]	; 0xffffffec
   3e3a4:	strb	r3, [fp, #-13]
   3e3a8:	ldrb	r3, [fp, #-13]
   3e3ac:	cmp	r3, #99	; 0x63
   3e3b0:	bls	3e468 <flatcc_json_parser_struct_as_root@@Base+0x8e4>
   3e3b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e3b8:	add	r3, r3, #3
   3e3bc:	str	r3, [fp, #-20]	; 0xffffffec
   3e3c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e3c4:	mov	r2, #0
   3e3c8:	strb	r2, [r3]
   3e3cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e3d0:	sub	r3, r3, #2
   3e3d4:	str	r3, [fp, #-20]	; 0xffffffec
   3e3d8:	ldrb	r3, [fp, #-13]
   3e3dc:	ldr	r2, [pc, #356]	; 3e548 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   3e3e0:	umull	r1, r2, r2, r3
   3e3e4:	lsr	r2, r2, #5
   3e3e8:	mov	r1, #100	; 0x64
   3e3ec:	mul	r2, r1, r2
   3e3f0:	sub	r3, r3, r2
   3e3f4:	uxtb	r3, r3
   3e3f8:	lsl	r3, r3, #1
   3e3fc:	mov	r2, r3
   3e400:	ldr	r3, [pc, #324]	; 3e54c <flatcc_json_parser_struct_as_root@@Base+0x9c8>
   3e404:	add	r3, pc, r3
   3e408:	add	r3, r2, r3
   3e40c:	str	r3, [fp, #-8]
   3e410:	ldrb	r3, [fp, #-13]
   3e414:	ldr	r2, [pc, #300]	; 3e548 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   3e418:	umull	r2, r3, r2, r3
   3e41c:	lsr	r3, r3, #5
   3e420:	strb	r3, [fp, #-13]
   3e424:	ldr	r3, [fp, #-8]
   3e428:	ldrb	r2, [r3]
   3e42c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e430:	strb	r2, [r3]
   3e434:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e438:	add	r3, r3, #1
   3e43c:	ldr	r2, [fp, #-8]
   3e440:	ldrb	r2, [r2, #1]
   3e444:	strb	r2, [r3]
   3e448:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e44c:	sub	r3, r3, #1
   3e450:	ldrb	r2, [fp, #-13]
   3e454:	add	r2, r2, #48	; 0x30
   3e458:	uxtb	r2, r2
   3e45c:	strb	r2, [r3]
   3e460:	mov	r3, #3
   3e464:	b	3e538 <flatcc_json_parser_struct_as_root@@Base+0x9b4>
   3e468:	ldrb	r3, [fp, #-13]
   3e46c:	cmp	r3, #9
   3e470:	bls	3e510 <flatcc_json_parser_struct_as_root@@Base+0x98c>
   3e474:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e478:	add	r3, r3, #2
   3e47c:	str	r3, [fp, #-20]	; 0xffffffec
   3e480:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e484:	mov	r2, #0
   3e488:	strb	r2, [r3]
   3e48c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e490:	sub	r3, r3, #2
   3e494:	str	r3, [fp, #-20]	; 0xffffffec
   3e498:	ldrb	r3, [fp, #-13]
   3e49c:	ldr	r2, [pc, #164]	; 3e548 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   3e4a0:	umull	r1, r2, r2, r3
   3e4a4:	lsr	r2, r2, #5
   3e4a8:	mov	r1, #100	; 0x64
   3e4ac:	mul	r2, r1, r2
   3e4b0:	sub	r3, r3, r2
   3e4b4:	uxtb	r3, r3
   3e4b8:	lsl	r3, r3, #1
   3e4bc:	mov	r2, r3
   3e4c0:	ldr	r3, [pc, #136]	; 3e550 <flatcc_json_parser_struct_as_root@@Base+0x9cc>
   3e4c4:	add	r3, pc, r3
   3e4c8:	add	r3, r2, r3
   3e4cc:	str	r3, [fp, #-8]
   3e4d0:	ldrb	r3, [fp, #-13]
   3e4d4:	ldr	r2, [pc, #108]	; 3e548 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   3e4d8:	umull	r2, r3, r2, r3
   3e4dc:	lsr	r3, r3, #5
   3e4e0:	strb	r3, [fp, #-13]
   3e4e4:	ldr	r3, [fp, #-8]
   3e4e8:	ldrb	r2, [r3]
   3e4ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e4f0:	strb	r2, [r3]
   3e4f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e4f8:	add	r3, r3, #1
   3e4fc:	ldr	r2, [fp, #-8]
   3e500:	ldrb	r2, [r2, #1]
   3e504:	strb	r2, [r3]
   3e508:	mov	r3, #2
   3e50c:	b	3e538 <flatcc_json_parser_struct_as_root@@Base+0x9b4>
   3e510:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e514:	add	r3, r3, #1
   3e518:	mov	r2, #0
   3e51c:	strb	r2, [r3]
   3e520:	ldrb	r3, [fp, #-13]
   3e524:	add	r3, r3, #48	; 0x30
   3e528:	uxtb	r2, r3
   3e52c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e530:	strb	r2, [r3]
   3e534:	mov	r3, #1
   3e538:	mov	r0, r3
   3e53c:	add	sp, fp, #0
   3e540:	pop	{fp}		; (ldr fp, [sp], #4)
   3e544:	bx	lr
   3e548:	mvnpl	r8, pc, lsl r5
   3e54c:	strdeq	r4, [r1], -r0
   3e550:	andeq	r4, r1, r0, lsr r1
   3e554:	push	{fp}		; (str fp, [sp, #-4]!)
   3e558:	add	fp, sp, #0
   3e55c:	sub	sp, sp, #20
   3e560:	mov	r3, r0
   3e564:	str	r1, [fp, #-20]	; 0xffffffec
   3e568:	strh	r3, [fp, #-14]
   3e56c:	mov	r3, #0
   3e570:	str	r3, [fp, #-8]
   3e574:	ldrh	r3, [fp, #-14]
   3e578:	cmp	r3, #1000	; 0x3e8
   3e57c:	bcc	3e5a8 <flatcc_json_parser_struct_as_root@@Base+0xa24>
   3e580:	ldrh	r3, [fp, #-14]
   3e584:	ldr	r2, [pc, #728]	; 3e864 <flatcc_json_parser_struct_as_root@@Base+0xce0>
   3e588:	cmp	r3, r2
   3e58c:	bls	3e59c <flatcc_json_parser_struct_as_root@@Base+0xa18>
   3e590:	mov	r3, #5
   3e594:	str	r3, [fp, #-8]
   3e598:	b	3e5e0 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   3e59c:	mov	r3, #4
   3e5a0:	str	r3, [fp, #-8]
   3e5a4:	b	3e5e0 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   3e5a8:	ldrh	r3, [fp, #-14]
   3e5ac:	cmp	r3, #99	; 0x63
   3e5b0:	bls	3e5c0 <flatcc_json_parser_struct_as_root@@Base+0xa3c>
   3e5b4:	mov	r3, #3
   3e5b8:	str	r3, [fp, #-8]
   3e5bc:	b	3e5e0 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   3e5c0:	ldrh	r3, [fp, #-14]
   3e5c4:	cmp	r3, #9
   3e5c8:	bls	3e5d8 <flatcc_json_parser_struct_as_root@@Base+0xa54>
   3e5cc:	mov	r3, #2
   3e5d0:	str	r3, [fp, #-8]
   3e5d4:	b	3e5e0 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   3e5d8:	mov	r3, #1
   3e5dc:	str	r3, [fp, #-8]
   3e5e0:	ldr	r3, [fp, #-8]
   3e5e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3e5e8:	add	r3, r2, r3
   3e5ec:	str	r3, [fp, #-20]	; 0xffffffec
   3e5f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e5f4:	mov	r2, #0
   3e5f8:	strb	r2, [r3]
   3e5fc:	ldr	r3, [fp, #-8]
   3e600:	and	r3, r3, #1
   3e604:	cmp	r3, #0
   3e608:	beq	3e744 <flatcc_json_parser_struct_as_root@@Base+0xbc0>
   3e60c:	ldr	r3, [fp, #-8]
   3e610:	cmp	r3, #3
   3e614:	beq	3e6a8 <flatcc_json_parser_struct_as_root@@Base+0xb24>
   3e618:	cmp	r3, #5
   3e61c:	beq	3e62c <flatcc_json_parser_struct_as_root@@Base+0xaa8>
   3e620:	cmp	r3, #1
   3e624:	beq	3e724 <flatcc_json_parser_struct_as_root@@Base+0xba0>
   3e628:	b	3e850 <flatcc_json_parser_struct_as_root@@Base+0xccc>
   3e62c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e630:	sub	r3, r3, #2
   3e634:	str	r3, [fp, #-20]	; 0xffffffec
   3e638:	ldrh	r3, [fp, #-14]
   3e63c:	ldr	r2, [pc, #548]	; 3e868 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3e640:	umull	r1, r2, r2, r3
   3e644:	lsr	r2, r2, #5
   3e648:	mov	r1, #100	; 0x64
   3e64c:	mul	r2, r1, r2
   3e650:	sub	r3, r3, r2
   3e654:	uxth	r3, r3
   3e658:	lsl	r3, r3, #1
   3e65c:	mov	r2, r3
   3e660:	ldr	r3, [pc, #516]	; 3e86c <flatcc_json_parser_struct_as_root@@Base+0xce8>
   3e664:	add	r3, pc, r3
   3e668:	add	r3, r2, r3
   3e66c:	str	r3, [fp, #-12]
   3e670:	ldrh	r3, [fp, #-14]
   3e674:	ldr	r2, [pc, #492]	; 3e868 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3e678:	umull	r2, r3, r2, r3
   3e67c:	lsr	r3, r3, #5
   3e680:	strh	r3, [fp, #-14]
   3e684:	ldr	r3, [fp, #-12]
   3e688:	ldrb	r2, [r3]
   3e68c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e690:	strb	r2, [r3]
   3e694:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e698:	add	r3, r3, #1
   3e69c:	ldr	r2, [fp, #-12]
   3e6a0:	ldrb	r2, [r2, #1]
   3e6a4:	strb	r2, [r3]
   3e6a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e6ac:	sub	r3, r3, #2
   3e6b0:	str	r3, [fp, #-20]	; 0xffffffec
   3e6b4:	ldrh	r3, [fp, #-14]
   3e6b8:	ldr	r2, [pc, #424]	; 3e868 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3e6bc:	umull	r1, r2, r2, r3
   3e6c0:	lsr	r2, r2, #5
   3e6c4:	mov	r1, #100	; 0x64
   3e6c8:	mul	r2, r1, r2
   3e6cc:	sub	r3, r3, r2
   3e6d0:	uxth	r3, r3
   3e6d4:	lsl	r3, r3, #1
   3e6d8:	mov	r2, r3
   3e6dc:	ldr	r3, [pc, #396]	; 3e870 <flatcc_json_parser_struct_as_root@@Base+0xcec>
   3e6e0:	add	r3, pc, r3
   3e6e4:	add	r3, r2, r3
   3e6e8:	str	r3, [fp, #-12]
   3e6ec:	ldrh	r3, [fp, #-14]
   3e6f0:	ldr	r2, [pc, #368]	; 3e868 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3e6f4:	umull	r2, r3, r2, r3
   3e6f8:	lsr	r3, r3, #5
   3e6fc:	strh	r3, [fp, #-14]
   3e700:	ldr	r3, [fp, #-12]
   3e704:	ldrb	r2, [r3]
   3e708:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e70c:	strb	r2, [r3]
   3e710:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e714:	add	r3, r3, #1
   3e718:	ldr	r2, [fp, #-12]
   3e71c:	ldrb	r2, [r2, #1]
   3e720:	strb	r2, [r3]
   3e724:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e728:	sub	r3, r3, #1
   3e72c:	ldrh	r2, [fp, #-14]
   3e730:	uxtb	r2, r2
   3e734:	add	r2, r2, #48	; 0x30
   3e738:	uxtb	r2, r2
   3e73c:	strb	r2, [r3]
   3e740:	b	3e850 <flatcc_json_parser_struct_as_root@@Base+0xccc>
   3e744:	ldr	r3, [fp, #-8]
   3e748:	cmp	r3, #2
   3e74c:	beq	3e7d4 <flatcc_json_parser_struct_as_root@@Base+0xc50>
   3e750:	cmp	r3, #4
   3e754:	bne	3e850 <flatcc_json_parser_struct_as_root@@Base+0xccc>
   3e758:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e75c:	sub	r3, r3, #2
   3e760:	str	r3, [fp, #-20]	; 0xffffffec
   3e764:	ldrh	r3, [fp, #-14]
   3e768:	ldr	r2, [pc, #248]	; 3e868 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3e76c:	umull	r1, r2, r2, r3
   3e770:	lsr	r2, r2, #5
   3e774:	mov	r1, #100	; 0x64
   3e778:	mul	r2, r1, r2
   3e77c:	sub	r3, r3, r2
   3e780:	uxth	r3, r3
   3e784:	lsl	r3, r3, #1
   3e788:	mov	r2, r3
   3e78c:	ldr	r3, [pc, #224]	; 3e874 <flatcc_json_parser_struct_as_root@@Base+0xcf0>
   3e790:	add	r3, pc, r3
   3e794:	add	r3, r2, r3
   3e798:	str	r3, [fp, #-12]
   3e79c:	ldrh	r3, [fp, #-14]
   3e7a0:	ldr	r2, [pc, #192]	; 3e868 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3e7a4:	umull	r2, r3, r2, r3
   3e7a8:	lsr	r3, r3, #5
   3e7ac:	strh	r3, [fp, #-14]
   3e7b0:	ldr	r3, [fp, #-12]
   3e7b4:	ldrb	r2, [r3]
   3e7b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e7bc:	strb	r2, [r3]
   3e7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e7c4:	add	r3, r3, #1
   3e7c8:	ldr	r2, [fp, #-12]
   3e7cc:	ldrb	r2, [r2, #1]
   3e7d0:	strb	r2, [r3]
   3e7d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e7d8:	sub	r3, r3, #2
   3e7dc:	str	r3, [fp, #-20]	; 0xffffffec
   3e7e0:	ldrh	r3, [fp, #-14]
   3e7e4:	ldr	r2, [pc, #124]	; 3e868 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3e7e8:	umull	r1, r2, r2, r3
   3e7ec:	lsr	r2, r2, #5
   3e7f0:	mov	r1, #100	; 0x64
   3e7f4:	mul	r2, r1, r2
   3e7f8:	sub	r3, r3, r2
   3e7fc:	uxth	r3, r3
   3e800:	lsl	r3, r3, #1
   3e804:	mov	r2, r3
   3e808:	ldr	r3, [pc, #104]	; 3e878 <flatcc_json_parser_struct_as_root@@Base+0xcf4>
   3e80c:	add	r3, pc, r3
   3e810:	add	r3, r2, r3
   3e814:	str	r3, [fp, #-12]
   3e818:	ldrh	r3, [fp, #-14]
   3e81c:	ldr	r2, [pc, #68]	; 3e868 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3e820:	umull	r2, r3, r2, r3
   3e824:	lsr	r3, r3, #5
   3e828:	strh	r3, [fp, #-14]
   3e82c:	ldr	r3, [fp, #-12]
   3e830:	ldrb	r2, [r3]
   3e834:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e838:	strb	r2, [r3]
   3e83c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e840:	add	r3, r3, #1
   3e844:	ldr	r2, [fp, #-12]
   3e848:	ldrb	r2, [r2, #1]
   3e84c:	strb	r2, [r3]
   3e850:	ldr	r3, [fp, #-8]
   3e854:	mov	r0, r3
   3e858:	add	sp, fp, #0
   3e85c:	pop	{fp}		; (ldr fp, [sp], #4)
   3e860:	bx	lr
   3e864:	andeq	r2, r0, pc, lsl #14
   3e868:	mvnpl	r8, pc, lsl r5
   3e86c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   3e870:	andeq	r3, r1, r4, lsl pc
   3e874:	andeq	r3, r1, r4, ror #28
   3e878:	andeq	r3, r1, r8, ror #27
   3e87c:	push	{fp}		; (str fp, [sp, #-4]!)
   3e880:	add	fp, sp, #0
   3e884:	sub	sp, sp, #20
   3e888:	str	r0, [fp, #-16]
   3e88c:	str	r1, [fp, #-20]	; 0xffffffec
   3e890:	mov	r3, #0
   3e894:	str	r3, [fp, #-8]
   3e898:	ldr	r3, [fp, #-16]
   3e89c:	ldr	r2, [pc, #1488]	; 3ee74 <flatcc_json_parser_struct_as_root@@Base+0x12f0>
   3e8a0:	cmp	r3, r2
   3e8a4:	bls	3e940 <flatcc_json_parser_struct_as_root@@Base+0xdbc>
   3e8a8:	ldr	r3, [fp, #-16]
   3e8ac:	ldr	r2, [pc, #1476]	; 3ee78 <flatcc_json_parser_struct_as_root@@Base+0x12f4>
   3e8b0:	cmp	r3, r2
   3e8b4:	bls	3e8fc <flatcc_json_parser_struct_as_root@@Base+0xd78>
   3e8b8:	ldr	r3, [fp, #-16]
   3e8bc:	ldr	r2, [pc, #1464]	; 3ee7c <flatcc_json_parser_struct_as_root@@Base+0x12f8>
   3e8c0:	cmp	r3, r2
   3e8c4:	bls	3e8d4 <flatcc_json_parser_struct_as_root@@Base+0xd50>
   3e8c8:	mov	r3, #10
   3e8cc:	str	r3, [fp, #-8]
   3e8d0:	b	3e990 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3e8d4:	ldr	r3, [fp, #-16]
   3e8d8:	ldr	r2, [pc, #1440]	; 3ee80 <flatcc_json_parser_struct_as_root@@Base+0x12fc>
   3e8dc:	cmp	r3, r2
   3e8e0:	bls	3e8f0 <flatcc_json_parser_struct_as_root@@Base+0xd6c>
   3e8e4:	mov	r3, #9
   3e8e8:	str	r3, [fp, #-8]
   3e8ec:	b	3e990 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3e8f0:	mov	r3, #8
   3e8f4:	str	r3, [fp, #-8]
   3e8f8:	b	3e990 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3e8fc:	ldr	r3, [fp, #-16]
   3e900:	ldr	r2, [pc, #1404]	; 3ee84 <flatcc_json_parser_struct_as_root@@Base+0x1300>
   3e904:	cmp	r3, r2
   3e908:	bls	3e918 <flatcc_json_parser_struct_as_root@@Base+0xd94>
   3e90c:	mov	r3, #7
   3e910:	str	r3, [fp, #-8]
   3e914:	b	3e990 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3e918:	ldr	r3, [fp, #-16]
   3e91c:	ldr	r2, [pc, #1380]	; 3ee88 <flatcc_json_parser_struct_as_root@@Base+0x1304>
   3e920:	cmp	r3, r2
   3e924:	bls	3e934 <flatcc_json_parser_struct_as_root@@Base+0xdb0>
   3e928:	mov	r3, #6
   3e92c:	str	r3, [fp, #-8]
   3e930:	b	3e990 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3e934:	mov	r3, #5
   3e938:	str	r3, [fp, #-8]
   3e93c:	b	3e990 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3e940:	ldr	r3, [fp, #-16]
   3e944:	cmp	r3, #99	; 0x63
   3e948:	bls	3e970 <flatcc_json_parser_struct_as_root@@Base+0xdec>
   3e94c:	ldr	r3, [fp, #-16]
   3e950:	cmp	r3, #1000	; 0x3e8
   3e954:	bcc	3e964 <flatcc_json_parser_struct_as_root@@Base+0xde0>
   3e958:	mov	r3, #4
   3e95c:	str	r3, [fp, #-8]
   3e960:	b	3e990 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3e964:	mov	r3, #3
   3e968:	str	r3, [fp, #-8]
   3e96c:	b	3e990 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3e970:	ldr	r3, [fp, #-16]
   3e974:	cmp	r3, #9
   3e978:	bls	3e988 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   3e97c:	mov	r3, #2
   3e980:	str	r3, [fp, #-8]
   3e984:	b	3e990 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3e988:	mov	r3, #1
   3e98c:	str	r3, [fp, #-8]
   3e990:	ldr	r3, [fp, #-8]
   3e994:	ldr	r2, [fp, #-20]	; 0xffffffec
   3e998:	add	r3, r2, r3
   3e99c:	str	r3, [fp, #-20]	; 0xffffffec
   3e9a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e9a4:	mov	r2, #0
   3e9a8:	strb	r2, [r3]
   3e9ac:	ldr	r3, [fp, #-8]
   3e9b0:	and	r3, r3, #1
   3e9b4:	cmp	r3, #0
   3e9b8:	beq	3ebe4 <flatcc_json_parser_struct_as_root@@Base+0x1060>
   3e9bc:	ldr	r3, [fp, #-8]
   3e9c0:	sub	r3, r3, #1
   3e9c4:	cmp	r3, #8
   3e9c8:	addls	pc, pc, r3, lsl #2
   3e9cc:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3e9d0:	b	3ebc4 <flatcc_json_parser_struct_as_root@@Base+0x1040>
   3e9d4:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3e9d8:	b	3eb50 <flatcc_json_parser_struct_as_root@@Base+0xfcc>
   3e9dc:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3e9e0:	b	3eadc <flatcc_json_parser_struct_as_root@@Base+0xf58>
   3e9e4:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3e9e8:	b	3ea68 <flatcc_json_parser_struct_as_root@@Base+0xee4>
   3e9ec:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3e9f0:	b	3e9f4 <flatcc_json_parser_struct_as_root@@Base+0xe70>
   3e9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e9f8:	sub	r3, r3, #2
   3e9fc:	str	r3, [fp, #-20]	; 0xffffffec
   3ea00:	ldr	r2, [fp, #-16]
   3ea04:	ldr	r3, [pc, #1152]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ea08:	umull	r1, r3, r3, r2
   3ea0c:	lsr	r3, r3, #5
   3ea10:	mov	r1, #100	; 0x64
   3ea14:	mul	r3, r1, r3
   3ea18:	sub	r3, r2, r3
   3ea1c:	lsl	r3, r3, #1
   3ea20:	ldr	r2, [pc, #1128]	; 3ee90 <flatcc_json_parser_struct_as_root@@Base+0x130c>
   3ea24:	add	r2, pc, r2
   3ea28:	add	r3, r3, r2
   3ea2c:	str	r3, [fp, #-12]
   3ea30:	ldr	r3, [fp, #-16]
   3ea34:	ldr	r2, [pc, #1104]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ea38:	umull	r2, r3, r2, r3
   3ea3c:	lsr	r3, r3, #5
   3ea40:	str	r3, [fp, #-16]
   3ea44:	ldr	r3, [fp, #-12]
   3ea48:	ldrb	r2, [r3]
   3ea4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ea50:	strb	r2, [r3]
   3ea54:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ea58:	add	r3, r3, #1
   3ea5c:	ldr	r2, [fp, #-12]
   3ea60:	ldrb	r2, [r2, #1]
   3ea64:	strb	r2, [r3]
   3ea68:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ea6c:	sub	r3, r3, #2
   3ea70:	str	r3, [fp, #-20]	; 0xffffffec
   3ea74:	ldr	r2, [fp, #-16]
   3ea78:	ldr	r3, [pc, #1036]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ea7c:	umull	r1, r3, r3, r2
   3ea80:	lsr	r3, r3, #5
   3ea84:	mov	r1, #100	; 0x64
   3ea88:	mul	r3, r1, r3
   3ea8c:	sub	r3, r2, r3
   3ea90:	lsl	r3, r3, #1
   3ea94:	ldr	r2, [pc, #1016]	; 3ee94 <flatcc_json_parser_struct_as_root@@Base+0x1310>
   3ea98:	add	r2, pc, r2
   3ea9c:	add	r3, r3, r2
   3eaa0:	str	r3, [fp, #-12]
   3eaa4:	ldr	r3, [fp, #-16]
   3eaa8:	ldr	r2, [pc, #988]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3eaac:	umull	r2, r3, r2, r3
   3eab0:	lsr	r3, r3, #5
   3eab4:	str	r3, [fp, #-16]
   3eab8:	ldr	r3, [fp, #-12]
   3eabc:	ldrb	r2, [r3]
   3eac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eac4:	strb	r2, [r3]
   3eac8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eacc:	add	r3, r3, #1
   3ead0:	ldr	r2, [fp, #-12]
   3ead4:	ldrb	r2, [r2, #1]
   3ead8:	strb	r2, [r3]
   3eadc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eae0:	sub	r3, r3, #2
   3eae4:	str	r3, [fp, #-20]	; 0xffffffec
   3eae8:	ldr	r2, [fp, #-16]
   3eaec:	ldr	r3, [pc, #920]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3eaf0:	umull	r1, r3, r3, r2
   3eaf4:	lsr	r3, r3, #5
   3eaf8:	mov	r1, #100	; 0x64
   3eafc:	mul	r3, r1, r3
   3eb00:	sub	r3, r2, r3
   3eb04:	lsl	r3, r3, #1
   3eb08:	ldr	r2, [pc, #904]	; 3ee98 <flatcc_json_parser_struct_as_root@@Base+0x1314>
   3eb0c:	add	r2, pc, r2
   3eb10:	add	r3, r3, r2
   3eb14:	str	r3, [fp, #-12]
   3eb18:	ldr	r3, [fp, #-16]
   3eb1c:	ldr	r2, [pc, #872]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3eb20:	umull	r2, r3, r2, r3
   3eb24:	lsr	r3, r3, #5
   3eb28:	str	r3, [fp, #-16]
   3eb2c:	ldr	r3, [fp, #-12]
   3eb30:	ldrb	r2, [r3]
   3eb34:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eb38:	strb	r2, [r3]
   3eb3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eb40:	add	r3, r3, #1
   3eb44:	ldr	r2, [fp, #-12]
   3eb48:	ldrb	r2, [r2, #1]
   3eb4c:	strb	r2, [r3]
   3eb50:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eb54:	sub	r3, r3, #2
   3eb58:	str	r3, [fp, #-20]	; 0xffffffec
   3eb5c:	ldr	r2, [fp, #-16]
   3eb60:	ldr	r3, [pc, #804]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3eb64:	umull	r1, r3, r3, r2
   3eb68:	lsr	r3, r3, #5
   3eb6c:	mov	r1, #100	; 0x64
   3eb70:	mul	r3, r1, r3
   3eb74:	sub	r3, r2, r3
   3eb78:	lsl	r3, r3, #1
   3eb7c:	ldr	r2, [pc, #792]	; 3ee9c <flatcc_json_parser_struct_as_root@@Base+0x1318>
   3eb80:	add	r2, pc, r2
   3eb84:	add	r3, r3, r2
   3eb88:	str	r3, [fp, #-12]
   3eb8c:	ldr	r3, [fp, #-16]
   3eb90:	ldr	r2, [pc, #756]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3eb94:	umull	r2, r3, r2, r3
   3eb98:	lsr	r3, r3, #5
   3eb9c:	str	r3, [fp, #-16]
   3eba0:	ldr	r3, [fp, #-12]
   3eba4:	ldrb	r2, [r3]
   3eba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ebac:	strb	r2, [r3]
   3ebb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ebb4:	add	r3, r3, #1
   3ebb8:	ldr	r2, [fp, #-12]
   3ebbc:	ldrb	r2, [r2, #1]
   3ebc0:	strb	r2, [r3]
   3ebc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ebc8:	sub	r3, r3, #1
   3ebcc:	ldr	r2, [fp, #-16]
   3ebd0:	uxtb	r2, r2
   3ebd4:	add	r2, r2, #48	; 0x30
   3ebd8:	uxtb	r2, r2
   3ebdc:	strb	r2, [r3]
   3ebe0:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3ebe4:	ldr	r3, [fp, #-8]
   3ebe8:	sub	r3, r3, #2
   3ebec:	cmp	r3, #8
   3ebf0:	addls	pc, pc, r3, lsl #2
   3ebf4:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3ebf8:	b	3edec <flatcc_json_parser_struct_as_root@@Base+0x1268>
   3ebfc:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3ec00:	b	3ed78 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   3ec04:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3ec08:	b	3ed04 <flatcc_json_parser_struct_as_root@@Base+0x1180>
   3ec0c:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3ec10:	b	3ec90 <flatcc_json_parser_struct_as_root@@Base+0x110c>
   3ec14:	b	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3ec18:	b	3ec1c <flatcc_json_parser_struct_as_root@@Base+0x1098>
   3ec1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ec20:	sub	r3, r3, #2
   3ec24:	str	r3, [fp, #-20]	; 0xffffffec
   3ec28:	ldr	r2, [fp, #-16]
   3ec2c:	ldr	r3, [pc, #600]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ec30:	umull	r1, r3, r3, r2
   3ec34:	lsr	r3, r3, #5
   3ec38:	mov	r1, #100	; 0x64
   3ec3c:	mul	r3, r1, r3
   3ec40:	sub	r3, r2, r3
   3ec44:	lsl	r3, r3, #1
   3ec48:	ldr	r2, [pc, #592]	; 3eea0 <flatcc_json_parser_struct_as_root@@Base+0x131c>
   3ec4c:	add	r2, pc, r2
   3ec50:	add	r3, r3, r2
   3ec54:	str	r3, [fp, #-12]
   3ec58:	ldr	r3, [fp, #-16]
   3ec5c:	ldr	r2, [pc, #552]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ec60:	umull	r2, r3, r2, r3
   3ec64:	lsr	r3, r3, #5
   3ec68:	str	r3, [fp, #-16]
   3ec6c:	ldr	r3, [fp, #-12]
   3ec70:	ldrb	r2, [r3]
   3ec74:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ec78:	strb	r2, [r3]
   3ec7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ec80:	add	r3, r3, #1
   3ec84:	ldr	r2, [fp, #-12]
   3ec88:	ldrb	r2, [r2, #1]
   3ec8c:	strb	r2, [r3]
   3ec90:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ec94:	sub	r3, r3, #2
   3ec98:	str	r3, [fp, #-20]	; 0xffffffec
   3ec9c:	ldr	r2, [fp, #-16]
   3eca0:	ldr	r3, [pc, #484]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3eca4:	umull	r1, r3, r3, r2
   3eca8:	lsr	r3, r3, #5
   3ecac:	mov	r1, #100	; 0x64
   3ecb0:	mul	r3, r1, r3
   3ecb4:	sub	r3, r2, r3
   3ecb8:	lsl	r3, r3, #1
   3ecbc:	ldr	r2, [pc, #480]	; 3eea4 <flatcc_json_parser_struct_as_root@@Base+0x1320>
   3ecc0:	add	r2, pc, r2
   3ecc4:	add	r3, r3, r2
   3ecc8:	str	r3, [fp, #-12]
   3eccc:	ldr	r3, [fp, #-16]
   3ecd0:	ldr	r2, [pc, #436]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ecd4:	umull	r2, r3, r2, r3
   3ecd8:	lsr	r3, r3, #5
   3ecdc:	str	r3, [fp, #-16]
   3ece0:	ldr	r3, [fp, #-12]
   3ece4:	ldrb	r2, [r3]
   3ece8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ecec:	strb	r2, [r3]
   3ecf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ecf4:	add	r3, r3, #1
   3ecf8:	ldr	r2, [fp, #-12]
   3ecfc:	ldrb	r2, [r2, #1]
   3ed00:	strb	r2, [r3]
   3ed04:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ed08:	sub	r3, r3, #2
   3ed0c:	str	r3, [fp, #-20]	; 0xffffffec
   3ed10:	ldr	r2, [fp, #-16]
   3ed14:	ldr	r3, [pc, #368]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ed18:	umull	r1, r3, r3, r2
   3ed1c:	lsr	r3, r3, #5
   3ed20:	mov	r1, #100	; 0x64
   3ed24:	mul	r3, r1, r3
   3ed28:	sub	r3, r2, r3
   3ed2c:	lsl	r3, r3, #1
   3ed30:	ldr	r2, [pc, #368]	; 3eea8 <flatcc_json_parser_struct_as_root@@Base+0x1324>
   3ed34:	add	r2, pc, r2
   3ed38:	add	r3, r3, r2
   3ed3c:	str	r3, [fp, #-12]
   3ed40:	ldr	r3, [fp, #-16]
   3ed44:	ldr	r2, [pc, #320]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ed48:	umull	r2, r3, r2, r3
   3ed4c:	lsr	r3, r3, #5
   3ed50:	str	r3, [fp, #-16]
   3ed54:	ldr	r3, [fp, #-12]
   3ed58:	ldrb	r2, [r3]
   3ed5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ed60:	strb	r2, [r3]
   3ed64:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ed68:	add	r3, r3, #1
   3ed6c:	ldr	r2, [fp, #-12]
   3ed70:	ldrb	r2, [r2, #1]
   3ed74:	strb	r2, [r3]
   3ed78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ed7c:	sub	r3, r3, #2
   3ed80:	str	r3, [fp, #-20]	; 0xffffffec
   3ed84:	ldr	r2, [fp, #-16]
   3ed88:	ldr	r3, [pc, #252]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ed8c:	umull	r1, r3, r3, r2
   3ed90:	lsr	r3, r3, #5
   3ed94:	mov	r1, #100	; 0x64
   3ed98:	mul	r3, r1, r3
   3ed9c:	sub	r3, r2, r3
   3eda0:	lsl	r3, r3, #1
   3eda4:	ldr	r2, [pc, #256]	; 3eeac <flatcc_json_parser_struct_as_root@@Base+0x1328>
   3eda8:	add	r2, pc, r2
   3edac:	add	r3, r3, r2
   3edb0:	str	r3, [fp, #-12]
   3edb4:	ldr	r3, [fp, #-16]
   3edb8:	ldr	r2, [pc, #204]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3edbc:	umull	r2, r3, r2, r3
   3edc0:	lsr	r3, r3, #5
   3edc4:	str	r3, [fp, #-16]
   3edc8:	ldr	r3, [fp, #-12]
   3edcc:	ldrb	r2, [r3]
   3edd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3edd4:	strb	r2, [r3]
   3edd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eddc:	add	r3, r3, #1
   3ede0:	ldr	r2, [fp, #-12]
   3ede4:	ldrb	r2, [r2, #1]
   3ede8:	strb	r2, [r3]
   3edec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3edf0:	sub	r3, r3, #2
   3edf4:	str	r3, [fp, #-20]	; 0xffffffec
   3edf8:	ldr	r2, [fp, #-16]
   3edfc:	ldr	r3, [pc, #136]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ee00:	umull	r1, r3, r3, r2
   3ee04:	lsr	r3, r3, #5
   3ee08:	mov	r1, #100	; 0x64
   3ee0c:	mul	r3, r1, r3
   3ee10:	sub	r3, r2, r3
   3ee14:	lsl	r3, r3, #1
   3ee18:	ldr	r2, [pc, #144]	; 3eeb0 <flatcc_json_parser_struct_as_root@@Base+0x132c>
   3ee1c:	add	r2, pc, r2
   3ee20:	add	r3, r3, r2
   3ee24:	str	r3, [fp, #-12]
   3ee28:	ldr	r3, [fp, #-16]
   3ee2c:	ldr	r2, [pc, #88]	; 3ee8c <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ee30:	umull	r2, r3, r2, r3
   3ee34:	lsr	r3, r3, #5
   3ee38:	str	r3, [fp, #-16]
   3ee3c:	ldr	r3, [fp, #-12]
   3ee40:	ldrb	r2, [r3]
   3ee44:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ee48:	strb	r2, [r3]
   3ee4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ee50:	add	r3, r3, #1
   3ee54:	ldr	r2, [fp, #-12]
   3ee58:	ldrb	r2, [r2, #1]
   3ee5c:	strb	r2, [r3]
   3ee60:	ldr	r3, [fp, #-8]
   3ee64:	mov	r0, r3
   3ee68:	add	sp, fp, #0
   3ee6c:	pop	{fp}		; (ldr fp, [sp], #4)
   3ee70:	bx	lr
   3ee74:	andeq	r2, r0, pc, lsl #14
   3ee78:	addseq	r9, r8, pc, ror r6
   3ee7c:	blcc	fe6f1680 <__bss_end__@@Base+0xfe68d1d4>
   3ee80:	ldrbeq	lr, [r5, #255]!	; 0xff
   3ee84:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   3ee88:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   3ee8c:	mvnpl	r8, pc, lsl r5
   3ee90:	ldrdeq	r3, [r1], -r0
   3ee94:	andeq	r3, r1, ip, asr fp
   3ee98:	andeq	r3, r1, r8, ror #21
   3ee9c:	andeq	r3, r1, r4, ror sl
   3eea0:	andeq	r3, r1, r8, lsr #19
   3eea4:	andeq	r3, r1, r4, lsr r9
   3eea8:	andeq	r3, r1, r0, asr #17
   3eeac:	andeq	r3, r1, ip, asr #16
   3eeb0:	ldrdeq	r3, [r1], -r8
   3eeb4:	push	{fp, lr}
   3eeb8:	add	fp, sp, #4
   3eebc:	sub	sp, sp, #40	; 0x28
   3eec0:	strd	r0, [fp, #-36]	; 0xffffffdc
   3eec4:	str	r2, [fp, #-40]	; 0xffffffd8
   3eec8:	mov	r3, #0
   3eecc:	str	r3, [fp, #-8]
   3eed0:	add	r3, pc, #920	; 0x398
   3eed4:	ldrd	r2, [r3]
   3eed8:	strd	r2, [fp, #-20]	; 0xffffffec
   3eedc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3eee0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3eee4:	cmp	r1, r3
   3eee8:	cmpeq	r0, r2
   3eeec:	bcs	3ef08 <flatcc_json_parser_struct_as_root@@Base+0x1384>
   3eef0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3eef4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3eef8:	mov	r0, r3
   3eefc:	bl	3e87c <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   3ef00:	mov	r3, r0
   3ef04:	b	3fa30 <flatcc_json_parser_struct_as_root@@Base+0x1eac>
   3ef08:	ldr	r3, [fp, #-16]
   3ef0c:	ldr	r2, [pc, #868]	; 3f278 <flatcc_json_parser_struct_as_root@@Base+0x16f4>
   3ef10:	mul	r2, r2, r3
   3ef14:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ef18:	mov	r1, #0
   3ef1c:	mul	r3, r1, r3
   3ef20:	add	r1, r2, r3
   3ef24:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ef28:	ldr	r2, [pc, #840]	; 3f278 <flatcc_json_parser_struct_as_root@@Base+0x16f4>
   3ef2c:	umull	r2, r3, r3, r2
   3ef30:	add	r1, r1, r3
   3ef34:	mov	r3, r1
   3ef38:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3ef3c:	cmp	r3, r1
   3ef40:	cmpeq	r2, r0
   3ef44:	bhi	3f11c <flatcc_json_parser_struct_as_root@@Base+0x1598>
   3ef48:	ldr	r3, [fp, #-16]
   3ef4c:	ldr	r2, [pc, #808]	; 3f27c <flatcc_json_parser_struct_as_root@@Base+0x16f8>
   3ef50:	mul	r2, r2, r3
   3ef54:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ef58:	mov	r1, #0
   3ef5c:	mul	r3, r1, r3
   3ef60:	add	r1, r2, r3
   3ef64:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ef68:	ldr	r2, [pc, #780]	; 3f27c <flatcc_json_parser_struct_as_root@@Base+0x16f8>
   3ef6c:	umull	r2, r3, r3, r2
   3ef70:	add	r1, r1, r3
   3ef74:	mov	r3, r1
   3ef78:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3ef7c:	cmp	r3, r1
   3ef80:	cmpeq	r2, r0
   3ef84:	bhi	3f078 <flatcc_json_parser_struct_as_root@@Base+0x14f4>
   3ef88:	ldr	r3, [fp, #-16]
   3ef8c:	ldr	r2, [pc, #748]	; 3f280 <flatcc_json_parser_struct_as_root@@Base+0x16fc>
   3ef90:	mul	r2, r2, r3
   3ef94:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ef98:	mov	r1, #0
   3ef9c:	mul	r3, r1, r3
   3efa0:	add	r1, r2, r3
   3efa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3efa8:	ldr	r2, [pc, #720]	; 3f280 <flatcc_json_parser_struct_as_root@@Base+0x16fc>
   3efac:	umull	r2, r3, r3, r2
   3efb0:	add	r1, r1, r3
   3efb4:	mov	r3, r1
   3efb8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3efbc:	cmp	r3, r1
   3efc0:	cmpeq	r2, r0
   3efc4:	bhi	3f020 <flatcc_json_parser_struct_as_root@@Base+0x149c>
   3efc8:	ldr	r3, [fp, #-16]
   3efcc:	ldr	r2, [pc, #688]	; 3f284 <flatcc_json_parser_struct_as_root@@Base+0x1700>
   3efd0:	mul	r2, r2, r3
   3efd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3efd8:	mov	r1, #2
   3efdc:	mul	r3, r1, r3
   3efe0:	add	r1, r2, r3
   3efe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3efe8:	ldr	r2, [pc, #660]	; 3f284 <flatcc_json_parser_struct_as_root@@Base+0x1700>
   3efec:	umull	r2, r3, r3, r2
   3eff0:	add	r1, r1, r3
   3eff4:	mov	r3, r1
   3eff8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3effc:	cmp	r3, r1
   3f000:	cmpeq	r2, r0
   3f004:	bhi	3f014 <flatcc_json_parser_struct_as_root@@Base+0x1490>
   3f008:	mov	r3, #20
   3f00c:	str	r3, [fp, #-8]
   3f010:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f014:	mov	r3, #19
   3f018:	str	r3, [fp, #-8]
   3f01c:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f020:	ldr	r3, [fp, #-16]
   3f024:	ldr	r2, [pc, #604]	; 3f288 <flatcc_json_parser_struct_as_root@@Base+0x1704>
   3f028:	mul	r2, r2, r3
   3f02c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f030:	mov	r1, #0
   3f034:	mul	r3, r1, r3
   3f038:	add	r1, r2, r3
   3f03c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f040:	ldr	r2, [pc, #576]	; 3f288 <flatcc_json_parser_struct_as_root@@Base+0x1704>
   3f044:	umull	r2, r3, r3, r2
   3f048:	add	r1, r1, r3
   3f04c:	mov	r3, r1
   3f050:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f054:	cmp	r3, r1
   3f058:	cmpeq	r2, r0
   3f05c:	bhi	3f06c <flatcc_json_parser_struct_as_root@@Base+0x14e8>
   3f060:	mov	r3, #18
   3f064:	str	r3, [fp, #-8]
   3f068:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f06c:	mov	r3, #17
   3f070:	str	r3, [fp, #-8]
   3f074:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f078:	ldr	r3, [fp, #-16]
   3f07c:	ldr	r2, [pc, #520]	; 3f28c <flatcc_json_parser_struct_as_root@@Base+0x1708>
   3f080:	mul	r2, r2, r3
   3f084:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f088:	mov	r1, #0
   3f08c:	mul	r3, r1, r3
   3f090:	add	r1, r2, r3
   3f094:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f098:	ldr	r2, [pc, #492]	; 3f28c <flatcc_json_parser_struct_as_root@@Base+0x1708>
   3f09c:	umull	r2, r3, r3, r2
   3f0a0:	add	r1, r1, r3
   3f0a4:	mov	r3, r1
   3f0a8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f0ac:	cmp	r3, r1
   3f0b0:	cmpeq	r2, r0
   3f0b4:	bhi	3f0c4 <flatcc_json_parser_struct_as_root@@Base+0x1540>
   3f0b8:	mov	r3, #16
   3f0bc:	str	r3, [fp, #-8]
   3f0c0:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f0c4:	ldr	r3, [fp, #-16]
   3f0c8:	ldr	r2, [pc, #448]	; 3f290 <flatcc_json_parser_struct_as_root@@Base+0x170c>
   3f0cc:	mul	r2, r2, r3
   3f0d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f0d4:	mov	r1, #0
   3f0d8:	mul	r3, r1, r3
   3f0dc:	add	r1, r2, r3
   3f0e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f0e4:	ldr	r2, [pc, #420]	; 3f290 <flatcc_json_parser_struct_as_root@@Base+0x170c>
   3f0e8:	umull	r2, r3, r3, r2
   3f0ec:	add	r1, r1, r3
   3f0f0:	mov	r3, r1
   3f0f4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f0f8:	cmp	r3, r1
   3f0fc:	cmpeq	r2, r0
   3f100:	bhi	3f110 <flatcc_json_parser_struct_as_root@@Base+0x158c>
   3f104:	mov	r3, #15
   3f108:	str	r3, [fp, #-8]
   3f10c:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f110:	mov	r3, #14
   3f114:	str	r3, [fp, #-8]
   3f118:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f11c:	ldr	r3, [fp, #-16]
   3f120:	mov	r2, #100	; 0x64
   3f124:	mul	r2, r2, r3
   3f128:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f12c:	mov	r1, #0
   3f130:	mul	r3, r1, r3
   3f134:	add	r1, r2, r3
   3f138:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f13c:	mov	r2, #100	; 0x64
   3f140:	umull	r2, r3, r3, r2
   3f144:	add	r1, r1, r3
   3f148:	mov	r3, r1
   3f14c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f150:	cmp	r3, r1
   3f154:	cmpeq	r2, r0
   3f158:	bhi	3f1b4 <flatcc_json_parser_struct_as_root@@Base+0x1630>
   3f15c:	ldr	r3, [fp, #-16]
   3f160:	mov	r2, #1000	; 0x3e8
   3f164:	mul	r2, r2, r3
   3f168:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f16c:	mov	r1, #0
   3f170:	mul	r3, r1, r3
   3f174:	add	r1, r2, r3
   3f178:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f17c:	mov	r2, #1000	; 0x3e8
   3f180:	umull	r2, r3, r3, r2
   3f184:	add	r1, r1, r3
   3f188:	mov	r3, r1
   3f18c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f190:	cmp	r3, r1
   3f194:	cmpeq	r2, r0
   3f198:	bhi	3f1a8 <flatcc_json_parser_struct_as_root@@Base+0x1624>
   3f19c:	mov	r3, #13
   3f1a0:	str	r3, [fp, #-8]
   3f1a4:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f1a8:	mov	r3, #12
   3f1ac:	str	r3, [fp, #-8]
   3f1b0:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f1b4:	ldr	r3, [fp, #-16]
   3f1b8:	mov	r2, #10
   3f1bc:	mul	r2, r2, r3
   3f1c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f1c4:	mov	r1, #0
   3f1c8:	mul	r3, r1, r3
   3f1cc:	add	r1, r2, r3
   3f1d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f1d4:	mov	r2, #10
   3f1d8:	umull	r2, r3, r3, r2
   3f1dc:	add	r1, r1, r3
   3f1e0:	mov	r3, r1
   3f1e4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f1e8:	cmp	r3, r1
   3f1ec:	cmpeq	r2, r0
   3f1f0:	bhi	3f200 <flatcc_json_parser_struct_as_root@@Base+0x167c>
   3f1f4:	mov	r3, #11
   3f1f8:	str	r3, [fp, #-8]
   3f1fc:	b	3f208 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3f200:	mov	r3, #10
   3f204:	str	r3, [fp, #-8]
   3f208:	ldr	r3, [fp, #-8]
   3f20c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3f210:	add	r3, r2, r3
   3f214:	str	r3, [fp, #-40]	; 0xffffffd8
   3f218:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f21c:	mov	r2, #0
   3f220:	strb	r2, [r3]
   3f224:	ldr	r3, [fp, #-8]
   3f228:	and	r3, r3, #1
   3f22c:	cmp	r3, #0
   3f230:	beq	3f564 <flatcc_json_parser_struct_as_root@@Base+0x19e0>
   3f234:	ldr	r3, [fp, #-8]
   3f238:	sub	r3, r3, #11
   3f23c:	cmp	r3, #8
   3f240:	addls	pc, pc, r3, lsl #2
   3f244:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f248:	b	3f4a0 <flatcc_json_parser_struct_as_root@@Base+0x191c>
   3f24c:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f250:	b	3f42c <flatcc_json_parser_struct_as_root@@Base+0x18a8>
   3f254:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f258:	b	3f3b8 <flatcc_json_parser_struct_as_root@@Base+0x1834>
   3f25c:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f260:	b	3f344 <flatcc_json_parser_struct_as_root@@Base+0x17c0>
   3f264:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f268:	b	3f2d0 <flatcc_json_parser_struct_as_root@@Base+0x174c>
   3f26c:	nop			; (mov r0, r0)
   3f270:	blcc	fe6f1a78 <__bss_end__@@Base+0xfe68d5cc>
   3f274:	andeq	r0, r0, r0
   3f278:	andeq	r2, r0, r0, lsl r7
   3f27c:	addseq	r9, r8, r0, lsl #13
   3f280:	blcc	fe6f1a88 <__bss_end__@@Base+0xfe68d5dc>
   3f284:	strpl	lr, [fp], #-1024	; 0xfffffc00
   3f288:	ldrbeq	lr, [r5, #256]!	; 0x100
   3f28c:	andeq	r4, pc, r0, asr #4
   3f290:	andeq	r8, r1, r0, lsr #13
   3f294:	strdeq	r3, [r1], -ip
   3f298:	andeq	r3, r1, r8, lsl #5
   3f29c:	andeq	r3, r1, r4, lsl r2
   3f2a0:	andeq	r3, r1, r0, lsr #3
   3f2a4:	andeq	r3, r1, ip, lsr #2
   3f2a8:	andeq	r3, r1, r8, lsr #32
   3f2ac:			; <UNDEFINED> instruction: 0x00012fb4
   3f2b0:	andeq	r2, r1, r0, asr #30
   3f2b4:	andeq	r2, r1, ip, asr #29
   3f2b8:	andeq	r2, r1, r8, asr lr
   3f2bc:	andeq	r2, r1, r4, ror #27
   3f2c0:	andeq	r2, r1, r0, ror sp
   3f2c4:	strdeq	r2, [r1], -ip
   3f2c8:	andeq	r2, r1, r8, lsl #25
   3f2cc:	andeq	r2, r1, r4, lsl ip
   3f2d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f2d4:	sub	r3, r3, #2
   3f2d8:	str	r3, [fp, #-40]	; 0xffffffd8
   3f2dc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f2e0:	mov	r2, #100	; 0x64
   3f2e4:	mov	r3, #0
   3f2e8:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f2ec:	mov	r3, r2
   3f2f0:	lsl	r3, r3, #1
   3f2f4:	ldr	r2, [pc, #-104]	; 3f294 <flatcc_json_parser_struct_as_root@@Base+0x1710>
   3f2f8:	add	r2, pc, r2
   3f2fc:	add	r3, r3, r2
   3f300:	str	r3, [fp, #-24]	; 0xffffffe8
   3f304:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f308:	mov	r2, #100	; 0x64
   3f30c:	mov	r3, #0
   3f310:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f314:	mov	r2, r0
   3f318:	mov	r3, r1
   3f31c:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f324:	ldrb	r2, [r3]
   3f328:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f32c:	strb	r2, [r3]
   3f330:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f334:	add	r3, r3, #1
   3f338:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f33c:	ldrb	r2, [r2, #1]
   3f340:	strb	r2, [r3]
   3f344:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f348:	sub	r3, r3, #2
   3f34c:	str	r3, [fp, #-40]	; 0xffffffd8
   3f350:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f354:	mov	r2, #100	; 0x64
   3f358:	mov	r3, #0
   3f35c:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f360:	mov	r3, r2
   3f364:	lsl	r3, r3, #1
   3f368:	ldr	r2, [pc, #-216]	; 3f298 <flatcc_json_parser_struct_as_root@@Base+0x1714>
   3f36c:	add	r2, pc, r2
   3f370:	add	r3, r3, r2
   3f374:	str	r3, [fp, #-24]	; 0xffffffe8
   3f378:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f37c:	mov	r2, #100	; 0x64
   3f380:	mov	r3, #0
   3f384:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f388:	mov	r2, r0
   3f38c:	mov	r3, r1
   3f390:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f394:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f398:	ldrb	r2, [r3]
   3f39c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f3a0:	strb	r2, [r3]
   3f3a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f3a8:	add	r3, r3, #1
   3f3ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f3b0:	ldrb	r2, [r2, #1]
   3f3b4:	strb	r2, [r3]
   3f3b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f3bc:	sub	r3, r3, #2
   3f3c0:	str	r3, [fp, #-40]	; 0xffffffd8
   3f3c4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f3c8:	mov	r2, #100	; 0x64
   3f3cc:	mov	r3, #0
   3f3d0:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f3d4:	mov	r3, r2
   3f3d8:	lsl	r3, r3, #1
   3f3dc:	ldr	r2, [pc, #-328]	; 3f29c <flatcc_json_parser_struct_as_root@@Base+0x1718>
   3f3e0:	add	r2, pc, r2
   3f3e4:	add	r3, r3, r2
   3f3e8:	str	r3, [fp, #-24]	; 0xffffffe8
   3f3ec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f3f0:	mov	r2, #100	; 0x64
   3f3f4:	mov	r3, #0
   3f3f8:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f3fc:	mov	r2, r0
   3f400:	mov	r3, r1
   3f404:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f40c:	ldrb	r2, [r3]
   3f410:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f414:	strb	r2, [r3]
   3f418:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f41c:	add	r3, r3, #1
   3f420:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f424:	ldrb	r2, [r2, #1]
   3f428:	strb	r2, [r3]
   3f42c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f430:	sub	r3, r3, #2
   3f434:	str	r3, [fp, #-40]	; 0xffffffd8
   3f438:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f43c:	mov	r2, #100	; 0x64
   3f440:	mov	r3, #0
   3f444:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f448:	mov	r3, r2
   3f44c:	lsl	r3, r3, #1
   3f450:	ldr	r2, [pc, #-440]	; 3f2a0 <flatcc_json_parser_struct_as_root@@Base+0x171c>
   3f454:	add	r2, pc, r2
   3f458:	add	r3, r3, r2
   3f45c:	str	r3, [fp, #-24]	; 0xffffffe8
   3f460:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f464:	mov	r2, #100	; 0x64
   3f468:	mov	r3, #0
   3f46c:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f470:	mov	r2, r0
   3f474:	mov	r3, r1
   3f478:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f47c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f480:	ldrb	r2, [r3]
   3f484:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f488:	strb	r2, [r3]
   3f48c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f490:	add	r3, r3, #1
   3f494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f498:	ldrb	r2, [r2, #1]
   3f49c:	strb	r2, [r3]
   3f4a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f4a4:	sub	r3, r3, #2
   3f4a8:	str	r3, [fp, #-40]	; 0xffffffd8
   3f4ac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f4b0:	mov	r2, #100	; 0x64
   3f4b4:	mov	r3, #0
   3f4b8:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f4bc:	mov	r3, r2
   3f4c0:	lsl	r3, r3, #1
   3f4c4:	ldr	r2, [pc, #-552]	; 3f2a4 <flatcc_json_parser_struct_as_root@@Base+0x1720>
   3f4c8:	add	r2, pc, r2
   3f4cc:	add	r3, r3, r2
   3f4d0:	str	r3, [fp, #-24]	; 0xffffffe8
   3f4d4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f4d8:	mov	r2, #100	; 0x64
   3f4dc:	mov	r3, #0
   3f4e0:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f4e4:	mov	r2, r0
   3f4e8:	mov	r3, r1
   3f4ec:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f4f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f4f4:	ldrb	r2, [r3]
   3f4f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f4fc:	strb	r2, [r3]
   3f500:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f504:	add	r3, r3, #1
   3f508:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f50c:	ldrb	r2, [r2, #1]
   3f510:	strb	r2, [r3]
   3f514:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f518:	sub	r3, r3, #1
   3f51c:	str	r3, [fp, #-40]	; 0xffffffd8
   3f520:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f524:	mov	r2, #10
   3f528:	mov	r3, #0
   3f52c:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f530:	uxtb	r3, r2
   3f534:	add	r3, r3, #48	; 0x30
   3f538:	uxtb	r2, r3
   3f53c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f540:	strb	r2, [r3]
   3f544:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f548:	mov	r2, #10
   3f54c:	mov	r3, #0
   3f550:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f554:	mov	r2, r0
   3f558:	mov	r3, r1
   3f55c:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f560:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f564:	ldr	r3, [fp, #-8]
   3f568:	sub	r3, r3, #10
   3f56c:	cmp	r3, #10
   3f570:	addls	pc, pc, r3, lsl #2
   3f574:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f578:	b	3f7e8 <flatcc_json_parser_struct_as_root@@Base+0x1c64>
   3f57c:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f580:	b	3f774 <flatcc_json_parser_struct_as_root@@Base+0x1bf0>
   3f584:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f588:	b	3f700 <flatcc_json_parser_struct_as_root@@Base+0x1b7c>
   3f58c:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f590:	b	3f68c <flatcc_json_parser_struct_as_root@@Base+0x1b08>
   3f594:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f598:	b	3f618 <flatcc_json_parser_struct_as_root@@Base+0x1a94>
   3f59c:	b	3f85c <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3f5a0:	b	3f5a4 <flatcc_json_parser_struct_as_root@@Base+0x1a20>
   3f5a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f5a8:	sub	r3, r3, #2
   3f5ac:	str	r3, [fp, #-40]	; 0xffffffd8
   3f5b0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f5b4:	mov	r2, #100	; 0x64
   3f5b8:	mov	r3, #0
   3f5bc:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f5c0:	mov	r3, r2
   3f5c4:	lsl	r3, r3, #1
   3f5c8:	ldr	r2, [pc, #-808]	; 3f2a8 <flatcc_json_parser_struct_as_root@@Base+0x1724>
   3f5cc:	add	r2, pc, r2
   3f5d0:	add	r3, r3, r2
   3f5d4:	str	r3, [fp, #-24]	; 0xffffffe8
   3f5d8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f5dc:	mov	r2, #100	; 0x64
   3f5e0:	mov	r3, #0
   3f5e4:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f5e8:	mov	r2, r0
   3f5ec:	mov	r3, r1
   3f5f0:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f5f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f5f8:	ldrb	r2, [r3]
   3f5fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f600:	strb	r2, [r3]
   3f604:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f608:	add	r3, r3, #1
   3f60c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f610:	ldrb	r2, [r2, #1]
   3f614:	strb	r2, [r3]
   3f618:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f61c:	sub	r3, r3, #2
   3f620:	str	r3, [fp, #-40]	; 0xffffffd8
   3f624:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f628:	mov	r2, #100	; 0x64
   3f62c:	mov	r3, #0
   3f630:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f634:	mov	r3, r2
   3f638:	lsl	r3, r3, #1
   3f63c:	ldr	r2, [pc, #-920]	; 3f2ac <flatcc_json_parser_struct_as_root@@Base+0x1728>
   3f640:	add	r2, pc, r2
   3f644:	add	r3, r3, r2
   3f648:	str	r3, [fp, #-24]	; 0xffffffe8
   3f64c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f650:	mov	r2, #100	; 0x64
   3f654:	mov	r3, #0
   3f658:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f65c:	mov	r2, r0
   3f660:	mov	r3, r1
   3f664:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f66c:	ldrb	r2, [r3]
   3f670:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f674:	strb	r2, [r3]
   3f678:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f67c:	add	r3, r3, #1
   3f680:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f684:	ldrb	r2, [r2, #1]
   3f688:	strb	r2, [r3]
   3f68c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f690:	sub	r3, r3, #2
   3f694:	str	r3, [fp, #-40]	; 0xffffffd8
   3f698:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f69c:	mov	r2, #100	; 0x64
   3f6a0:	mov	r3, #0
   3f6a4:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f6a8:	mov	r3, r2
   3f6ac:	lsl	r3, r3, #1
   3f6b0:	ldr	r2, [pc, #-1032]	; 3f2b0 <flatcc_json_parser_struct_as_root@@Base+0x172c>
   3f6b4:	add	r2, pc, r2
   3f6b8:	add	r3, r3, r2
   3f6bc:	str	r3, [fp, #-24]	; 0xffffffe8
   3f6c0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f6c4:	mov	r2, #100	; 0x64
   3f6c8:	mov	r3, #0
   3f6cc:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f6d0:	mov	r2, r0
   3f6d4:	mov	r3, r1
   3f6d8:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f6dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f6e0:	ldrb	r2, [r3]
   3f6e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f6e8:	strb	r2, [r3]
   3f6ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f6f0:	add	r3, r3, #1
   3f6f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f6f8:	ldrb	r2, [r2, #1]
   3f6fc:	strb	r2, [r3]
   3f700:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f704:	sub	r3, r3, #2
   3f708:	str	r3, [fp, #-40]	; 0xffffffd8
   3f70c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f710:	mov	r2, #100	; 0x64
   3f714:	mov	r3, #0
   3f718:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f71c:	mov	r3, r2
   3f720:	lsl	r3, r3, #1
   3f724:	ldr	r2, [pc, #-1144]	; 3f2b4 <flatcc_json_parser_struct_as_root@@Base+0x1730>
   3f728:	add	r2, pc, r2
   3f72c:	add	r3, r3, r2
   3f730:	str	r3, [fp, #-24]	; 0xffffffe8
   3f734:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f738:	mov	r2, #100	; 0x64
   3f73c:	mov	r3, #0
   3f740:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f744:	mov	r2, r0
   3f748:	mov	r3, r1
   3f74c:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f754:	ldrb	r2, [r3]
   3f758:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f75c:	strb	r2, [r3]
   3f760:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f764:	add	r3, r3, #1
   3f768:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f76c:	ldrb	r2, [r2, #1]
   3f770:	strb	r2, [r3]
   3f774:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f778:	sub	r3, r3, #2
   3f77c:	str	r3, [fp, #-40]	; 0xffffffd8
   3f780:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f784:	mov	r2, #100	; 0x64
   3f788:	mov	r3, #0
   3f78c:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f790:	mov	r3, r2
   3f794:	lsl	r3, r3, #1
   3f798:	ldr	r2, [pc, #-1256]	; 3f2b8 <flatcc_json_parser_struct_as_root@@Base+0x1734>
   3f79c:	add	r2, pc, r2
   3f7a0:	add	r3, r3, r2
   3f7a4:	str	r3, [fp, #-24]	; 0xffffffe8
   3f7a8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f7ac:	mov	r2, #100	; 0x64
   3f7b0:	mov	r3, #0
   3f7b4:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f7b8:	mov	r2, r0
   3f7bc:	mov	r3, r1
   3f7c0:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f7c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f7c8:	ldrb	r2, [r3]
   3f7cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f7d0:	strb	r2, [r3]
   3f7d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f7d8:	add	r3, r3, #1
   3f7dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f7e0:	ldrb	r2, [r2, #1]
   3f7e4:	strb	r2, [r3]
   3f7e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f7ec:	sub	r3, r3, #2
   3f7f0:	str	r3, [fp, #-40]	; 0xffffffd8
   3f7f4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f7f8:	mov	r2, #100	; 0x64
   3f7fc:	mov	r3, #0
   3f800:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f804:	mov	r3, r2
   3f808:	lsl	r3, r3, #1
   3f80c:	ldr	r2, [pc, #-1368]	; 3f2bc <flatcc_json_parser_struct_as_root@@Base+0x1738>
   3f810:	add	r2, pc, r2
   3f814:	add	r3, r3, r2
   3f818:	str	r3, [fp, #-24]	; 0xffffffe8
   3f81c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f820:	mov	r2, #100	; 0x64
   3f824:	mov	r3, #0
   3f828:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f82c:	mov	r2, r0
   3f830:	mov	r3, r1
   3f834:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f83c:	ldrb	r2, [r3]
   3f840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f844:	strb	r2, [r3]
   3f848:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f84c:	add	r3, r3, #1
   3f850:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f854:	ldrb	r2, [r2, #1]
   3f858:	strb	r2, [r3]
   3f85c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f860:	sub	r3, r3, #2
   3f864:	str	r3, [fp, #-40]	; 0xffffffd8
   3f868:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f86c:	mov	r2, #100	; 0x64
   3f870:	mov	r3, #0
   3f874:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f878:	mov	r3, r2
   3f87c:	lsl	r3, r3, #1
   3f880:	ldr	r2, [pc, #-1480]	; 3f2c0 <flatcc_json_parser_struct_as_root@@Base+0x173c>
   3f884:	add	r2, pc, r2
   3f888:	add	r3, r3, r2
   3f88c:	str	r3, [fp, #-24]	; 0xffffffe8
   3f890:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f894:	mov	r2, #100	; 0x64
   3f898:	mov	r3, #0
   3f89c:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f8a0:	mov	r2, r0
   3f8a4:	mov	r3, r1
   3f8a8:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f8ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f8b0:	ldrb	r2, [r3]
   3f8b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f8b8:	strb	r2, [r3]
   3f8bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f8c0:	add	r3, r3, #1
   3f8c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f8c8:	ldrb	r2, [r2, #1]
   3f8cc:	strb	r2, [r3]
   3f8d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f8d4:	sub	r3, r3, #2
   3f8d8:	str	r3, [fp, #-40]	; 0xffffffd8
   3f8dc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f8e0:	mov	r2, #100	; 0x64
   3f8e4:	mov	r3, #0
   3f8e8:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f8ec:	mov	r3, r2
   3f8f0:	lsl	r3, r3, #1
   3f8f4:	ldr	r2, [pc, #-1592]	; 3f2c4 <flatcc_json_parser_struct_as_root@@Base+0x1740>
   3f8f8:	add	r2, pc, r2
   3f8fc:	add	r3, r3, r2
   3f900:	str	r3, [fp, #-24]	; 0xffffffe8
   3f904:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f908:	mov	r2, #100	; 0x64
   3f90c:	mov	r3, #0
   3f910:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f914:	mov	r2, r0
   3f918:	mov	r3, r1
   3f91c:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f924:	ldrb	r2, [r3]
   3f928:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f92c:	strb	r2, [r3]
   3f930:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f934:	add	r3, r3, #1
   3f938:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f93c:	ldrb	r2, [r2, #1]
   3f940:	strb	r2, [r3]
   3f944:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f948:	sub	r3, r3, #2
   3f94c:	str	r3, [fp, #-40]	; 0xffffffd8
   3f950:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f954:	mov	r2, #100	; 0x64
   3f958:	mov	r3, #0
   3f95c:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f960:	mov	r3, r2
   3f964:	lsl	r3, r3, #1
   3f968:	ldr	r2, [pc, #-1704]	; 3f2c8 <flatcc_json_parser_struct_as_root@@Base+0x1744>
   3f96c:	add	r2, pc, r2
   3f970:	add	r3, r3, r2
   3f974:	str	r3, [fp, #-24]	; 0xffffffe8
   3f978:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f97c:	mov	r2, #100	; 0x64
   3f980:	mov	r3, #0
   3f984:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f988:	mov	r2, r0
   3f98c:	mov	r3, r1
   3f990:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f998:	ldrb	r2, [r3]
   3f99c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f9a0:	strb	r2, [r3]
   3f9a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f9a8:	add	r3, r3, #1
   3f9ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3f9b0:	ldrb	r2, [r2, #1]
   3f9b4:	strb	r2, [r3]
   3f9b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f9bc:	sub	r3, r3, #2
   3f9c0:	str	r3, [fp, #-40]	; 0xffffffd8
   3f9c4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f9c8:	mov	r2, #100	; 0x64
   3f9cc:	mov	r3, #0
   3f9d0:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f9d4:	mov	r3, r2
   3f9d8:	lsl	r3, r3, #1
   3f9dc:	ldr	r2, [pc, #-1816]	; 3f2cc <flatcc_json_parser_struct_as_root@@Base+0x1748>
   3f9e0:	add	r2, pc, r2
   3f9e4:	add	r3, r3, r2
   3f9e8:	str	r3, [fp, #-24]	; 0xffffffe8
   3f9ec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3f9f0:	mov	r2, #100	; 0x64
   3f9f4:	mov	r3, #0
   3f9f8:	bl	4c51c <flatcc_json_printer_clear@@Base+0xab0>
   3f9fc:	mov	r2, r0
   3fa00:	mov	r3, r1
   3fa04:	strd	r2, [fp, #-36]	; 0xffffffdc
   3fa08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3fa0c:	ldrb	r2, [r3]
   3fa10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3fa14:	strb	r2, [r3]
   3fa18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3fa1c:	add	r3, r3, #1
   3fa20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3fa24:	ldrb	r2, [r2, #1]
   3fa28:	strb	r2, [r3]
   3fa2c:	ldr	r3, [fp, #-8]
   3fa30:	mov	r0, r3
   3fa34:	sub	sp, fp, #4
   3fa38:	pop	{fp, pc}
   3fa3c:	push	{fp, lr}
   3fa40:	add	fp, sp, #4
   3fa44:	sub	sp, sp, #16
   3fa48:	mov	r3, r0
   3fa4c:	str	r1, [fp, #-20]	; 0xffffffec
   3fa50:	strb	r3, [fp, #-13]
   3fa54:	ldrb	r3, [fp, #-13]
   3fa58:	lsr	r3, r3, #7
   3fa5c:	uxtb	r3, r3
   3fa60:	str	r3, [fp, #-8]
   3fa64:	ldr	r3, [fp, #-8]
   3fa68:	cmp	r3, #0
   3fa6c:	beq	3fa94 <flatcc_json_parser_struct_as_root@@Base+0x1f10>
   3fa70:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fa74:	add	r2, r3, #1
   3fa78:	str	r2, [fp, #-20]	; 0xffffffec
   3fa7c:	mov	r2, #45	; 0x2d
   3fa80:	strb	r2, [r3]
   3fa84:	ldrb	r3, [fp, #-13]
   3fa88:	rsb	r3, r3, #0
   3fa8c:	uxtb	r3, r3
   3fa90:	strb	r3, [fp, #-13]
   3fa94:	ldrb	r3, [fp, #-13]
   3fa98:	ldr	r1, [fp, #-20]	; 0xffffffec
   3fa9c:	mov	r0, r3
   3faa0:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   3faa4:	mov	r2, r0
   3faa8:	ldr	r3, [fp, #-8]
   3faac:	add	r3, r2, r3
   3fab0:	mov	r0, r3
   3fab4:	sub	sp, fp, #4
   3fab8:	pop	{fp, pc}
   3fabc:	push	{fp, lr}
   3fac0:	add	fp, sp, #4
   3fac4:	sub	sp, sp, #16
   3fac8:	mov	r3, r0
   3facc:	str	r1, [fp, #-20]	; 0xffffffec
   3fad0:	strh	r3, [fp, #-14]
   3fad4:	ldrh	r3, [fp, #-14]
   3fad8:	lsr	r3, r3, #15
   3fadc:	uxtb	r3, r3
   3fae0:	str	r3, [fp, #-8]
   3fae4:	ldr	r3, [fp, #-8]
   3fae8:	cmp	r3, #0
   3faec:	beq	3fb14 <flatcc_json_parser_struct_as_root@@Base+0x1f90>
   3faf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3faf4:	add	r2, r3, #1
   3faf8:	str	r2, [fp, #-20]	; 0xffffffec
   3fafc:	mov	r2, #45	; 0x2d
   3fb00:	strb	r2, [r3]
   3fb04:	ldrh	r3, [fp, #-14]
   3fb08:	rsb	r3, r3, #0
   3fb0c:	uxth	r3, r3
   3fb10:	strh	r3, [fp, #-14]
   3fb14:	ldrh	r3, [fp, #-14]
   3fb18:	ldr	r1, [fp, #-20]	; 0xffffffec
   3fb1c:	mov	r0, r3
   3fb20:	bl	3e554 <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   3fb24:	mov	r2, r0
   3fb28:	ldr	r3, [fp, #-8]
   3fb2c:	add	r3, r2, r3
   3fb30:	mov	r0, r3
   3fb34:	sub	sp, fp, #4
   3fb38:	pop	{fp, pc}
   3fb3c:	push	{fp, lr}
   3fb40:	add	fp, sp, #4
   3fb44:	sub	sp, sp, #16
   3fb48:	str	r0, [fp, #-16]
   3fb4c:	str	r1, [fp, #-20]	; 0xffffffec
   3fb50:	ldr	r3, [fp, #-16]
   3fb54:	lsr	r3, r3, #31
   3fb58:	uxtb	r3, r3
   3fb5c:	str	r3, [fp, #-8]
   3fb60:	ldr	r3, [fp, #-8]
   3fb64:	cmp	r3, #0
   3fb68:	beq	3fb8c <flatcc_json_parser_struct_as_root@@Base+0x2008>
   3fb6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fb70:	add	r2, r3, #1
   3fb74:	str	r2, [fp, #-20]	; 0xffffffec
   3fb78:	mov	r2, #45	; 0x2d
   3fb7c:	strb	r2, [r3]
   3fb80:	ldr	r3, [fp, #-16]
   3fb84:	rsb	r3, r3, #0
   3fb88:	str	r3, [fp, #-16]
   3fb8c:	ldr	r3, [fp, #-16]
   3fb90:	ldr	r1, [fp, #-20]	; 0xffffffec
   3fb94:	mov	r0, r3
   3fb98:	bl	3e87c <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   3fb9c:	mov	r2, r0
   3fba0:	ldr	r3, [fp, #-8]
   3fba4:	add	r3, r2, r3
   3fba8:	mov	r0, r3
   3fbac:	sub	sp, fp, #4
   3fbb0:	pop	{fp, pc}
   3fbb4:	push	{fp, lr}
   3fbb8:	add	fp, sp, #4
   3fbbc:	sub	sp, sp, #24
   3fbc0:	strd	r0, [fp, #-20]	; 0xffffffec
   3fbc4:	str	r2, [fp, #-24]	; 0xffffffe8
   3fbc8:	ldr	r3, [fp, #-16]
   3fbcc:	lsr	r3, r3, #31
   3fbd0:	uxtb	r3, r3
   3fbd4:	str	r3, [fp, #-8]
   3fbd8:	ldr	r3, [fp, #-8]
   3fbdc:	cmp	r3, #0
   3fbe0:	beq	3fc08 <flatcc_json_parser_struct_as_root@@Base+0x2084>
   3fbe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3fbe8:	add	r2, r3, #1
   3fbec:	str	r2, [fp, #-24]	; 0xffffffe8
   3fbf0:	mov	r2, #45	; 0x2d
   3fbf4:	strb	r2, [r3]
   3fbf8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3fbfc:	rsbs	r2, r2, #0
   3fc00:	rsc	r3, r3, #0
   3fc04:	strd	r2, [fp, #-20]	; 0xffffffec
   3fc08:	ldrd	r0, [fp, #-20]	; 0xffffffec
   3fc0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3fc10:	bl	3eeb4 <flatcc_json_parser_struct_as_root@@Base+0x1330>
   3fc14:	mov	r2, r0
   3fc18:	ldr	r3, [fp, #-8]
   3fc1c:	add	r3, r2, r3
   3fc20:	mov	r0, r3
   3fc24:	sub	sp, fp, #4
   3fc28:	pop	{fp, pc}
   3fc2c:	push	{fp}		; (str fp, [sp, #-4]!)
   3fc30:	add	fp, sp, #0
   3fc34:	sub	sp, sp, #52	; 0x34
   3fc38:	str	r0, [fp, #-48]	; 0xffffffd0
   3fc3c:	str	r1, [fp, #-52]	; 0xffffffcc
   3fc40:	sub	r3, fp, #40	; 0x28
   3fc44:	add	r3, r3, #20
   3fc48:	str	r3, [fp, #-8]
   3fc4c:	ldr	r3, [fp, #-8]
   3fc50:	str	r3, [fp, #-12]
   3fc54:	b	3fcdc <flatcc_json_parser_struct_as_root@@Base+0x2158>
   3fc58:	ldr	r3, [fp, #-8]
   3fc5c:	sub	r3, r3, #2
   3fc60:	str	r3, [fp, #-8]
   3fc64:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3fc68:	ldr	r3, [pc, #332]	; 3fdbc <flatcc_json_parser_struct_as_root@@Base+0x2238>
   3fc6c:	umull	r1, r3, r3, r2
   3fc70:	lsr	r3, r3, #5
   3fc74:	mov	r1, #100	; 0x64
   3fc78:	mul	r3, r1, r3
   3fc7c:	sub	r3, r2, r3
   3fc80:	lsl	r3, r3, #1
   3fc84:	str	r3, [fp, #-16]
   3fc88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fc8c:	ldr	r2, [pc, #296]	; 3fdbc <flatcc_json_parser_struct_as_root@@Base+0x2238>
   3fc90:	umull	r2, r3, r2, r3
   3fc94:	lsr	r3, r3, #5
   3fc98:	str	r3, [fp, #-48]	; 0xffffffd0
   3fc9c:	ldr	r3, [fp, #-16]
   3fca0:	ldr	r2, [pc, #280]	; 3fdc0 <flatcc_json_parser_struct_as_root@@Base+0x223c>
   3fca4:	add	r2, pc, r2
   3fca8:	add	r3, r3, r2
   3fcac:	ldrb	r2, [r3]
   3fcb0:	ldr	r3, [fp, #-8]
   3fcb4:	strb	r2, [r3]
   3fcb8:	ldr	r3, [fp, #-8]
   3fcbc:	add	r3, r3, #1
   3fcc0:	ldr	r2, [fp, #-16]
   3fcc4:	add	r2, r2, #1
   3fcc8:	ldr	r1, [pc, #244]	; 3fdc4 <flatcc_json_parser_struct_as_root@@Base+0x2240>
   3fccc:	add	r1, pc, r1
   3fcd0:	add	r2, r2, r1
   3fcd4:	ldrb	r2, [r2]
   3fcd8:	strb	r2, [r3]
   3fcdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fce0:	cmp	r3, #99	; 0x63
   3fce4:	bhi	3fc58 <flatcc_json_parser_struct_as_root@@Base+0x20d4>
   3fce8:	ldr	r3, [fp, #-8]
   3fcec:	sub	r3, r3, #2
   3fcf0:	str	r3, [fp, #-8]
   3fcf4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fcf8:	lsl	r3, r3, #1
   3fcfc:	str	r3, [fp, #-16]
   3fd00:	ldr	r3, [fp, #-16]
   3fd04:	ldr	r2, [pc, #188]	; 3fdc8 <flatcc_json_parser_struct_as_root@@Base+0x2244>
   3fd08:	add	r2, pc, r2
   3fd0c:	add	r3, r3, r2
   3fd10:	ldrb	r2, [r3]
   3fd14:	ldr	r3, [fp, #-8]
   3fd18:	strb	r2, [r3]
   3fd1c:	ldr	r3, [fp, #-8]
   3fd20:	add	r3, r3, #1
   3fd24:	ldr	r2, [fp, #-16]
   3fd28:	add	r2, r2, #1
   3fd2c:	ldr	r1, [pc, #152]	; 3fdcc <flatcc_json_parser_struct_as_root@@Base+0x2248>
   3fd30:	add	r1, pc, r1
   3fd34:	add	r2, r2, r1
   3fd38:	ldrb	r2, [r2]
   3fd3c:	strb	r2, [r3]
   3fd40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fd44:	cmp	r3, #9
   3fd48:	bhi	3fd58 <flatcc_json_parser_struct_as_root@@Base+0x21d4>
   3fd4c:	ldr	r3, [fp, #-8]
   3fd50:	add	r3, r3, #1
   3fd54:	str	r3, [fp, #-8]
   3fd58:	ldr	r2, [fp, #-12]
   3fd5c:	ldr	r3, [fp, #-8]
   3fd60:	sub	r3, r2, r3
   3fd64:	str	r3, [fp, #-20]	; 0xffffffec
   3fd68:	b	3fd8c <flatcc_json_parser_struct_as_root@@Base+0x2208>
   3fd6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3fd70:	add	r2, r3, #1
   3fd74:	str	r2, [fp, #-52]	; 0xffffffcc
   3fd78:	ldr	r2, [fp, #-8]
   3fd7c:	add	r1, r2, #1
   3fd80:	str	r1, [fp, #-8]
   3fd84:	ldrb	r2, [r2]
   3fd88:	strb	r2, [r3]
   3fd8c:	ldr	r2, [fp, #-8]
   3fd90:	ldr	r3, [fp, #-12]
   3fd94:	cmp	r2, r3
   3fd98:	bne	3fd6c <flatcc_json_parser_struct_as_root@@Base+0x21e8>
   3fd9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3fda0:	mov	r2, #0
   3fda4:	strb	r2, [r3]
   3fda8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fdac:	mov	r0, r3
   3fdb0:	add	sp, fp, #0
   3fdb4:	pop	{fp}		; (ldr fp, [sp], #4)
   3fdb8:	bx	lr
   3fdbc:	mvnpl	r8, pc, lsl r5
   3fdc0:	andeq	r2, r1, r0, asr r9
   3fdc4:	andeq	r2, r1, r8, lsr #18
   3fdc8:	andeq	r2, r1, ip, ror #17
   3fdcc:	andeq	r2, r1, r4, asr #17
   3fdd0:	push	{fp, lr}
   3fdd4:	add	fp, sp, #4
   3fdd8:	sub	sp, sp, #16
   3fddc:	str	r0, [fp, #-16]
   3fde0:	str	r1, [fp, #-20]	; 0xffffffec
   3fde4:	ldr	r3, [fp, #-16]
   3fde8:	lsr	r3, r3, #31
   3fdec:	uxtb	r3, r3
   3fdf0:	str	r3, [fp, #-8]
   3fdf4:	ldr	r3, [fp, #-8]
   3fdf8:	cmp	r3, #0
   3fdfc:	beq	3fe20 <flatcc_json_parser_struct_as_root@@Base+0x229c>
   3fe00:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fe04:	add	r2, r3, #1
   3fe08:	str	r2, [fp, #-20]	; 0xffffffec
   3fe0c:	mov	r2, #45	; 0x2d
   3fe10:	strb	r2, [r3]
   3fe14:	ldr	r3, [fp, #-16]
   3fe18:	rsb	r3, r3, #0
   3fe1c:	str	r3, [fp, #-16]
   3fe20:	ldr	r3, [fp, #-16]
   3fe24:	ldr	r1, [fp, #-20]	; 0xffffffec
   3fe28:	mov	r0, r3
   3fe2c:	bl	3fc2c <flatcc_json_parser_struct_as_root@@Base+0x20a8>
   3fe30:	mov	r2, r0
   3fe34:	ldr	r3, [fp, #-8]
   3fe38:	add	r3, r2, r3
   3fe3c:	mov	r0, r3
   3fe40:	sub	sp, fp, #4
   3fe44:	pop	{fp, pc}
   3fe48:	push	{fp}		; (str fp, [sp, #-4]!)
   3fe4c:	add	fp, sp, #0
   3fe50:	sub	sp, sp, #52	; 0x34
   3fe54:	str	r0, [fp, #-48]	; 0xffffffd0
   3fe58:	str	r1, [fp, #-52]	; 0xffffffcc
   3fe5c:	sub	r3, fp, #40	; 0x28
   3fe60:	add	r3, r3, #20
   3fe64:	str	r3, [fp, #-8]
   3fe68:	ldr	r3, [fp, #-8]
   3fe6c:	str	r3, [fp, #-12]
   3fe70:	b	3fef8 <flatcc_json_parser_struct_as_root@@Base+0x2374>
   3fe74:	ldr	r3, [fp, #-8]
   3fe78:	sub	r3, r3, #2
   3fe7c:	str	r3, [fp, #-8]
   3fe80:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3fe84:	ldr	r3, [pc, #332]	; 3ffd8 <flatcc_json_parser_struct_as_root@@Base+0x2454>
   3fe88:	umull	r1, r3, r3, r2
   3fe8c:	lsr	r3, r3, #5
   3fe90:	mov	r1, #100	; 0x64
   3fe94:	mul	r3, r1, r3
   3fe98:	sub	r3, r2, r3
   3fe9c:	lsl	r3, r3, #1
   3fea0:	str	r3, [fp, #-16]
   3fea4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fea8:	ldr	r2, [pc, #296]	; 3ffd8 <flatcc_json_parser_struct_as_root@@Base+0x2454>
   3feac:	umull	r2, r3, r2, r3
   3feb0:	lsr	r3, r3, #5
   3feb4:	str	r3, [fp, #-48]	; 0xffffffd0
   3feb8:	ldr	r3, [fp, #-16]
   3febc:	ldr	r2, [pc, #280]	; 3ffdc <flatcc_json_parser_struct_as_root@@Base+0x2458>
   3fec0:	add	r2, pc, r2
   3fec4:	add	r3, r3, r2
   3fec8:	ldrb	r2, [r3]
   3fecc:	ldr	r3, [fp, #-8]
   3fed0:	strb	r2, [r3]
   3fed4:	ldr	r3, [fp, #-8]
   3fed8:	add	r3, r3, #1
   3fedc:	ldr	r2, [fp, #-16]
   3fee0:	add	r2, r2, #1
   3fee4:	ldr	r1, [pc, #244]	; 3ffe0 <flatcc_json_parser_struct_as_root@@Base+0x245c>
   3fee8:	add	r1, pc, r1
   3feec:	add	r2, r2, r1
   3fef0:	ldrb	r2, [r2]
   3fef4:	strb	r2, [r3]
   3fef8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fefc:	cmp	r3, #99	; 0x63
   3ff00:	bhi	3fe74 <flatcc_json_parser_struct_as_root@@Base+0x22f0>
   3ff04:	ldr	r3, [fp, #-8]
   3ff08:	sub	r3, r3, #2
   3ff0c:	str	r3, [fp, #-8]
   3ff10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ff14:	lsl	r3, r3, #1
   3ff18:	str	r3, [fp, #-16]
   3ff1c:	ldr	r3, [fp, #-16]
   3ff20:	ldr	r2, [pc, #188]	; 3ffe4 <flatcc_json_parser_struct_as_root@@Base+0x2460>
   3ff24:	add	r2, pc, r2
   3ff28:	add	r3, r3, r2
   3ff2c:	ldrb	r2, [r3]
   3ff30:	ldr	r3, [fp, #-8]
   3ff34:	strb	r2, [r3]
   3ff38:	ldr	r3, [fp, #-8]
   3ff3c:	add	r3, r3, #1
   3ff40:	ldr	r2, [fp, #-16]
   3ff44:	add	r2, r2, #1
   3ff48:	ldr	r1, [pc, #152]	; 3ffe8 <flatcc_json_parser_struct_as_root@@Base+0x2464>
   3ff4c:	add	r1, pc, r1
   3ff50:	add	r2, r2, r1
   3ff54:	ldrb	r2, [r2]
   3ff58:	strb	r2, [r3]
   3ff5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ff60:	cmp	r3, #9
   3ff64:	bhi	3ff74 <flatcc_json_parser_struct_as_root@@Base+0x23f0>
   3ff68:	ldr	r3, [fp, #-8]
   3ff6c:	add	r3, r3, #1
   3ff70:	str	r3, [fp, #-8]
   3ff74:	ldr	r2, [fp, #-12]
   3ff78:	ldr	r3, [fp, #-8]
   3ff7c:	sub	r3, r2, r3
   3ff80:	str	r3, [fp, #-20]	; 0xffffffec
   3ff84:	b	3ffa8 <flatcc_json_parser_struct_as_root@@Base+0x2424>
   3ff88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3ff8c:	add	r2, r3, #1
   3ff90:	str	r2, [fp, #-52]	; 0xffffffcc
   3ff94:	ldr	r2, [fp, #-8]
   3ff98:	add	r1, r2, #1
   3ff9c:	str	r1, [fp, #-8]
   3ffa0:	ldrb	r2, [r2]
   3ffa4:	strb	r2, [r3]
   3ffa8:	ldr	r2, [fp, #-8]
   3ffac:	ldr	r3, [fp, #-12]
   3ffb0:	cmp	r2, r3
   3ffb4:	bne	3ff88 <flatcc_json_parser_struct_as_root@@Base+0x2404>
   3ffb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3ffbc:	mov	r2, #0
   3ffc0:	strb	r2, [r3]
   3ffc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ffc8:	mov	r0, r3
   3ffcc:	add	sp, fp, #0
   3ffd0:	pop	{fp}		; (ldr fp, [sp], #4)
   3ffd4:	bx	lr
   3ffd8:	mvnpl	r8, pc, lsl r5
   3ffdc:	andeq	r2, r1, r4, lsr r7
   3ffe0:	andeq	r2, r1, ip, lsl #14
   3ffe4:	ldrdeq	r2, [r1], -r0
   3ffe8:	andeq	r2, r1, r8, lsr #13
   3ffec:	push	{fp, lr}
   3fff0:	add	fp, sp, #4
   3fff4:	sub	sp, sp, #16
   3fff8:	str	r0, [fp, #-16]
   3fffc:	str	r1, [fp, #-20]	; 0xffffffec
   40000:	ldr	r3, [fp, #-16]
   40004:	lsr	r3, r3, #31
   40008:	uxtb	r3, r3
   4000c:	str	r3, [fp, #-8]
   40010:	ldr	r3, [fp, #-8]
   40014:	cmp	r3, #0
   40018:	beq	4003c <flatcc_json_parser_struct_as_root@@Base+0x24b8>
   4001c:	ldr	r3, [fp, #-20]	; 0xffffffec
   40020:	add	r2, r3, #1
   40024:	str	r2, [fp, #-20]	; 0xffffffec
   40028:	mov	r2, #45	; 0x2d
   4002c:	strb	r2, [r3]
   40030:	ldr	r3, [fp, #-16]
   40034:	rsb	r3, r3, #0
   40038:	str	r3, [fp, #-16]
   4003c:	ldr	r3, [fp, #-16]
   40040:	ldr	r1, [fp, #-20]	; 0xffffffec
   40044:	mov	r0, r3
   40048:	bl	3fe48 <flatcc_json_parser_struct_as_root@@Base+0x22c4>
   4004c:	mov	r2, r0
   40050:	ldr	r3, [fp, #-8]
   40054:	add	r3, r2, r3
   40058:	mov	r0, r3
   4005c:	sub	sp, fp, #4
   40060:	pop	{fp, pc}
   40064:	push	{fp}		; (str fp, [sp, #-4]!)
   40068:	add	fp, sp, #0
   4006c:	sub	sp, sp, #20
   40070:	vstr	d0, [fp, #-20]	; 0xffffffec
   40074:	ldrd	r2, [fp, #-20]	; 0xffffffec
   40078:	strd	r2, [fp, #-12]
   4007c:	ldrd	r2, [fp, #-12]
   40080:	mov	r0, r2
   40084:	mov	r1, r3
   40088:	add	sp, fp, #0
   4008c:	pop	{fp}		; (ldr fp, [sp], #4)
   40090:	bx	lr
   40094:	push	{fp}		; (str fp, [sp, #-4]!)
   40098:	add	fp, sp, #0
   4009c:	sub	sp, sp, #20
   400a0:	strd	r0, [fp, #-20]	; 0xffffffec
   400a4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   400a8:	strd	r2, [fp, #-12]
   400ac:	ldrd	r2, [fp, #-12]
   400b0:	vmov	d7, r2, r3
   400b4:	vmov.f64	d0, d7
   400b8:	add	sp, fp, #0
   400bc:	pop	{fp}		; (ldr fp, [sp], #4)
   400c0:	bx	lr
   400c4:	push	{fp}		; (str fp, [sp, #-4]!)
   400c8:	add	fp, sp, #0
   400cc:	sub	sp, sp, #20
   400d0:	vstr	d0, [fp, #-20]	; 0xffffffec
   400d4:	vldr	d7, [fp, #-20]	; 0xffffffec
   400d8:	vcvt.s32.f64	s15, d7
   400dc:	vmov	r3, s15
   400e0:	str	r3, [fp, #-8]
   400e4:	vldr	d7, [fp, #-20]	; 0xffffffec
   400e8:	vcmpe.f64	d7, #0.0
   400ec:	vmrs	APSR_nzcv, fpscr
   400f0:	bpl	400fc <flatcc_json_parser_struct_as_root@@Base+0x2578>
   400f4:	ldr	r3, [fp, #-8]
   400f8:	b	4012c <flatcc_json_parser_struct_as_root@@Base+0x25a8>
   400fc:	ldr	r3, [fp, #-8]
   40100:	vmov	s15, r3
   40104:	vcvt.f64.s32	d7, s15
   40108:	vldr	d6, [fp, #-20]	; 0xffffffec
   4010c:	vsub.f64	d7, d6, d7
   40110:	vcmp.f64	d7, #0.0
   40114:	vmrs	APSR_nzcv, fpscr
   40118:	beq	40128 <flatcc_json_parser_struct_as_root@@Base+0x25a4>
   4011c:	ldr	r3, [fp, #-8]
   40120:	add	r3, r3, #1
   40124:	b	4012c <flatcc_json_parser_struct_as_root@@Base+0x25a8>
   40128:	ldr	r3, [fp, #-8]
   4012c:	mov	r0, r3
   40130:	add	sp, fp, #0
   40134:	pop	{fp}		; (ldr fp, [sp], #4)
   40138:	bx	lr
   4013c:	push	{fp, lr}
   40140:	add	fp, sp, #4
   40144:	sub	sp, sp, #16
   40148:	str	r0, [fp, #-16]
   4014c:	str	r1, [fp, #-20]	; 0xffffffec
   40150:	ldr	r3, [fp, #-16]
   40154:	add	r3, r3, #63	; 0x3f
   40158:	vmov	s15, r3
   4015c:	vcvt.f64.s32	d7, s15
   40160:	vldr	d6, [pc, #168]	; 40210 <flatcc_json_parser_struct_as_root@@Base+0x268c>
   40164:	vmul.f64	d7, d7, d6
   40168:	vmov.f64	d0, d7
   4016c:	bl	400c4 <flatcc_json_parser_struct_as_root@@Base+0x2540>
   40170:	str	r0, [fp, #-8]
   40174:	ldr	r3, [fp, #-8]
   40178:	add	r3, r3, #344	; 0x158
   4017c:	add	r3, r3, #3
   40180:	add	r2, r3, #7
   40184:	cmp	r3, #0
   40188:	movlt	r3, r2
   4018c:	movge	r3, r3
   40190:	asr	r3, r3, #3
   40194:	add	r3, r3, #1
   40198:	str	r3, [fp, #-12]
   4019c:	ldr	r2, [pc, #116]	; 40218 <flatcc_json_parser_struct_as_root@@Base+0x2694>
   401a0:	add	r2, pc, r2
   401a4:	ldr	r3, [fp, #-12]
   401a8:	lsl	r3, r3, #4
   401ac:	add	r3, r2, r3
   401b0:	ldrd	r2, [r3]
   401b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   401b8:	strd	r2, [r1]
   401bc:	ldr	r2, [pc, #88]	; 4021c <flatcc_json_parser_struct_as_root@@Base+0x2698>
   401c0:	add	r2, pc, r2
   401c4:	ldr	r3, [fp, #-12]
   401c8:	lsl	r3, r3, #4
   401cc:	add	r3, r2, r3
   401d0:	add	r3, r3, #8
   401d4:	ldrsh	r3, [r3]
   401d8:	mov	r2, r3
   401dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   401e0:	str	r2, [r3, #8]
   401e4:	ldr	r2, [pc, #52]	; 40220 <flatcc_json_parser_struct_as_root@@Base+0x269c>
   401e8:	add	r2, pc, r2
   401ec:	ldr	r3, [fp, #-12]
   401f0:	lsl	r3, r3, #4
   401f4:	add	r3, r2, r3
   401f8:	add	r3, r3, #10
   401fc:	ldrsh	r3, [r3]
   40200:	mov	r0, r3
   40204:	sub	sp, fp, #4
   40208:	pop	{fp, pc}
   4020c:	nop			; (mov r0, r0)
   40210:			; <UNDEFINED> instruction: 0x509f79fe
   40214:	svccc	0x00d34413
   40218:	andeq	r2, r1, r0, lsr r5
   4021c:	andeq	r2, r1, r0, lsl r5
   40220:	andeq	r2, r1, r8, ror #9
   40224:	sub	sp, sp, #8
   40228:	push	{fp, lr}
   4022c:	add	fp, sp, #4
   40230:	sub	sp, sp, #24
   40234:	str	r0, [fp, #-24]	; 0xffffffe8
   40238:	add	r1, fp, #4
   4023c:	stm	r1, {r2, r3}
   40240:	ldrd	r0, [fp, #4]
   40244:	ldrd	r2, [fp, #20]
   40248:	subs	r2, r0, r2
   4024c:	sbc	r3, r1, r3
   40250:	strd	r2, [fp, #-20]	; 0xffffffec
   40254:	ldr	r3, [fp, #12]
   40258:	str	r3, [fp, #-12]
   4025c:	ldr	r2, [fp, #12]
   40260:	ldr	r3, [fp, #28]
   40264:	cmp	r2, r3
   40268:	bne	40280 <flatcc_json_parser_struct_as_root@@Base+0x26fc>
   4026c:	ldrd	r0, [fp, #4]
   40270:	ldrd	r2, [fp, #20]
   40274:	cmp	r1, r3
   40278:	cmpeq	r0, r2
   4027c:	bcs	402a0 <flatcc_json_parser_struct_as_root@@Base+0x271c>
   40280:	ldr	r3, [pc, #64]	; 402c8 <flatcc_json_parser_struct_as_root@@Base+0x2744>
   40284:	add	r3, pc, r3
   40288:	mov	r2, #239	; 0xef
   4028c:	ldr	r1, [pc, #56]	; 402cc <flatcc_json_parser_struct_as_root@@Base+0x2748>
   40290:	add	r1, pc, r1
   40294:	ldr	r0, [pc, #52]	; 402d0 <flatcc_json_parser_struct_as_root@@Base+0x274c>
   40298:	add	r0, pc, r0
   4029c:	bl	14610 <__assert_fail@plt>
   402a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   402a4:	mov	ip, r3
   402a8:	sub	r3, fp, #20
   402ac:	ldm	r3, {r0, r1, r2, r3}
   402b0:	stm	ip, {r0, r1, r2, r3}
   402b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   402b8:	sub	sp, fp, #4
   402bc:	pop	{fp, lr}
   402c0:	add	sp, sp, #8
   402c4:	bx	lr
   402c8:	andeq	r2, r1, r8, lsr #27
   402cc:			; <UNDEFINED> instruction: 0x000129b0
   402d0:	andeq	r2, r1, r8, lsl sl
   402d4:	sub	sp, sp, #8
   402d8:	push	{r4, r5, r6, r7, r8, r9, fp}
   402dc:	add	fp, sp, #24
   402e0:	sub	sp, sp, #124	; 0x7c
   402e4:	str	r0, [fp, #-120]	; 0xffffff88
   402e8:	add	r1, fp, #4
   402ec:	stm	r1, {r2, r3}
   402f0:	ldrd	r2, [fp, #4]
   402f4:	mov	r4, r3
   402f8:	mov	r5, #0
   402fc:	strd	r4, [fp, #-36]	; 0xffffffdc
   40300:	ldrd	r2, [fp, #4]
   40304:	mvn	r0, #0
   40308:	mov	r1, #0
   4030c:	and	r2, r2, r0
   40310:	and	r3, r3, r1
   40314:	strd	r2, [fp, #-44]	; 0xffffffd4
   40318:	ldrd	r2, [fp, #20]
   4031c:	mov	r3, r3
   40320:	str	r3, [fp, #-148]	; 0xffffff6c
   40324:	mov	r3, #0
   40328:	str	r3, [fp, #-144]	; 0xffffff70
   4032c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   40330:	strd	r2, [fp, #-52]	; 0xffffffcc
   40334:	ldrd	r2, [fp, #20]
   40338:	mvn	r0, #0
   4033c:	mov	r1, #0
   40340:	and	r2, r2, r0
   40344:	and	r3, r3, r1
   40348:	strd	r2, [fp, #-60]	; 0xffffffc4
   4034c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40350:	ldr	r2, [fp, #-52]	; 0xffffffcc
   40354:	mul	r2, r2, r3
   40358:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4035c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   40360:	mul	r3, r1, r3
   40364:	add	r1, r2, r3
   40368:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4036c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   40370:	umull	r2, r3, r2, r3
   40374:	add	r1, r1, r3
   40378:	mov	r3, r1
   4037c:	strd	r2, [fp, #-68]	; 0xffffffbc
   40380:	strd	r2, [fp, #-68]	; 0xffffffbc
   40384:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40388:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4038c:	mul	r2, r2, r3
   40390:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40394:	ldr	r1, [fp, #-44]	; 0xffffffd4
   40398:	mul	r3, r1, r3
   4039c:	add	r1, r2, r3
   403a0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   403a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   403a8:	umull	r2, r3, r2, r3
   403ac:	add	r1, r1, r3
   403b0:	mov	r3, r1
   403b4:	strd	r2, [fp, #-76]	; 0xffffffb4
   403b8:	strd	r2, [fp, #-76]	; 0xffffffb4
   403bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   403c0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   403c4:	mul	r2, r2, r3
   403c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   403cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   403d0:	mul	r3, r1, r3
   403d4:	add	r1, r2, r3
   403d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   403dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   403e0:	umull	r2, r3, r2, r3
   403e4:	add	r1, r1, r3
   403e8:	mov	r3, r1
   403ec:	strd	r2, [fp, #-84]	; 0xffffffac
   403f0:	strd	r2, [fp, #-84]	; 0xffffffac
   403f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   403f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   403fc:	mul	r2, r2, r3
   40400:	ldr	r3, [fp, #-56]	; 0xffffffc8
   40404:	ldr	r1, [fp, #-44]	; 0xffffffd4
   40408:	mul	r3, r1, r3
   4040c:	add	r1, r2, r3
   40410:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40414:	ldr	r3, [fp, #-60]	; 0xffffffc4
   40418:	umull	r2, r3, r2, r3
   4041c:	add	r1, r1, r3
   40420:	mov	r3, r1
   40424:	strd	r2, [fp, #-92]	; 0xffffffa4
   40428:	strd	r2, [fp, #-92]	; 0xffffffa4
   4042c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   40430:	mov	r3, r3
   40434:	str	r3, [fp, #-132]	; 0xffffff7c
   40438:	mov	r3, #0
   4043c:	str	r3, [fp, #-128]	; 0xffffff80
   40440:	ldrd	r2, [fp, #-84]	; 0xffffffac
   40444:	mvn	r0, #0
   40448:	mov	r1, #0
   4044c:	and	r2, r2, r0
   40450:	and	r3, r3, r1
   40454:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   40458:	adds	r0, r0, r2
   4045c:	adc	r1, r1, r3
   40460:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   40464:	mvn	r4, #0
   40468:	mov	r5, #0
   4046c:	and	r2, r2, r4
   40470:	and	r3, r3, r5
   40474:	adds	r2, r2, r0
   40478:	adc	r3, r3, r1
   4047c:	strd	r2, [fp, #-100]	; 0xffffff9c
   40480:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   40484:	adds	r2, r2, #-2147483648	; 0x80000000
   40488:	adc	r3, r3, #0
   4048c:	strd	r2, [fp, #-100]	; 0xffffff9c
   40490:	ldrd	r2, [fp, #-84]	; 0xffffffac
   40494:	mov	r3, r3
   40498:	str	r3, [fp, #-140]	; 0xffffff74
   4049c:	mov	r3, #0
   404a0:	str	r3, [fp, #-136]	; 0xffffff78
   404a4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   404a8:	ldrd	r0, [fp, #-140]	; 0xffffff74
   404ac:	adds	r0, r0, r2
   404b0:	adc	r1, r1, r3
   404b4:	mov	r2, r0
   404b8:	mov	r3, r1
   404bc:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   404c0:	mov	r8, r1
   404c4:	mov	r9, #0
   404c8:	adds	r2, r2, r8
   404cc:	adc	r3, r3, r9
   404d0:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   404d4:	mov	r6, r1
   404d8:	mov	r7, #0
   404dc:	adds	r2, r2, r6
   404e0:	adc	r3, r3, r7
   404e4:	strd	r2, [fp, #-116]	; 0xffffff8c
   404e8:	ldr	r2, [fp, #12]
   404ec:	ldr	r3, [fp, #28]
   404f0:	add	r3, r2, r3
   404f4:	add	r3, r3, #64	; 0x40
   404f8:	str	r3, [fp, #-108]	; 0xffffff94
   404fc:	ldr	r3, [fp, #-120]	; 0xffffff88
   40500:	mov	ip, r3
   40504:	sub	r3, fp, #116	; 0x74
   40508:	ldm	r3, {r0, r1, r2, r3}
   4050c:	stm	ip, {r0, r1, r2, r3}
   40510:	ldr	r0, [fp, #-120]	; 0xffffff88
   40514:	sub	sp, fp, #24
   40518:	pop	{r4, r5, r6, r7, r8, r9, fp}
   4051c:	add	sp, sp, #8
   40520:	bx	lr
   40524:	sub	sp, sp, #8
   40528:	push	{r4, r5, fp, lr}
   4052c:	add	fp, sp, #12
   40530:	sub	sp, sp, #8
   40534:	str	r0, [fp, #-16]
   40538:	add	r1, fp, #4
   4053c:	stm	r1, {r2, r3}
   40540:	ldrd	r2, [fp, #4]
   40544:	orrs	r3, r2, r3
   40548:	bne	4058c <flatcc_json_parser_struct_as_root@@Base+0x2a08>
   4054c:	ldr	r3, [pc, #172]	; 40600 <flatcc_json_parser_struct_as_root@@Base+0x2a7c>
   40550:	add	r3, pc, r3
   40554:	mov	r2, #260	; 0x104
   40558:	ldr	r1, [pc, #164]	; 40604 <flatcc_json_parser_struct_as_root@@Base+0x2a80>
   4055c:	add	r1, pc, r1
   40560:	ldr	r0, [pc, #160]	; 40608 <flatcc_json_parser_struct_as_root@@Base+0x2a84>
   40564:	add	r0, pc, r0
   40568:	bl	14610 <__assert_fail@plt>
   4056c:	ldrd	r2, [fp, #4]
   40570:	lsl	r5, r3, #10
   40574:	orr	r5, r5, r2, lsr #22
   40578:	lsl	r4, r2, #10
   4057c:	strd	r4, [fp, #4]
   40580:	ldr	r3, [fp, #12]
   40584:	sub	r3, r3, #10
   40588:	str	r3, [fp, #12]
   4058c:	ldrd	r2, [fp, #4]
   40590:	mov	r0, #0
   40594:	ldr	r1, [pc, #112]	; 4060c <flatcc_json_parser_struct_as_root@@Base+0x2a88>
   40598:	and	r2, r2, r0
   4059c:	and	r3, r3, r1
   405a0:	orrs	r3, r2, r3
   405a4:	beq	4056c <flatcc_json_parser_struct_as_root@@Base+0x29e8>
   405a8:	b	405c8 <flatcc_json_parser_struct_as_root@@Base+0x2a44>
   405ac:	ldrd	r2, [fp, #4]
   405b0:	adds	r2, r2, r2
   405b4:	adc	r3, r3, r3
   405b8:	strd	r2, [fp, #4]
   405bc:	ldr	r3, [fp, #12]
   405c0:	sub	r3, r3, #1
   405c4:	str	r3, [fp, #12]
   405c8:	ldrd	r2, [fp, #4]
   405cc:	cmp	r2, #0
   405d0:	sbcs	r3, r3, #0
   405d4:	bge	405ac <flatcc_json_parser_struct_as_root@@Base+0x2a28>
   405d8:	ldr	r3, [fp, #-16]
   405dc:	mov	ip, r3
   405e0:	add	r3, fp, #4
   405e4:	ldm	r3, {r0, r1, r2, r3}
   405e8:	stm	ip, {r0, r1, r2, r3}
   405ec:	ldr	r0, [fp, #-16]
   405f0:	sub	sp, fp, #12
   405f4:	pop	{r4, r5, fp, lr}
   405f8:	add	sp, sp, #8
   405fc:	bx	lr
   40600:	strdeq	r2, [r1], -r0
   40604:	andeq	r2, r1, r4, ror #13
   40608:	andeq	r2, r1, r8, ror #14
   4060c:			; <UNDEFINED> instruction: 0xffc00000
   40610:	push	{r4, r5, fp, lr}
   40614:	add	fp, sp, #12
   40618:	sub	sp, sp, #40	; 0x28
   4061c:	str	r0, [fp, #-40]	; 0xffffffd8
   40620:	vstr	d0, [fp, #-52]	; 0xffffffcc
   40624:	vldr	d0, [fp, #-52]	; 0xffffffcc
   40628:	bl	40064 <flatcc_json_parser_struct_as_root@@Base+0x24e0>
   4062c:	strd	r0, [fp, #-20]	; 0xffffffec
   40630:	ldrd	r2, [fp, #-20]	; 0xffffffec
   40634:	mov	r0, #0
   40638:	ldr	r1, [pc, #148]	; 406d4 <flatcc_json_parser_struct_as_root@@Base+0x2b50>
   4063c:	and	r2, r2, r0
   40640:	and	r3, r3, r1
   40644:	orrs	r3, r2, r3
   40648:	bne	40670 <flatcc_json_parser_struct_as_root@@Base+0x2aec>
   4064c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   40650:	mvn	r0, #0
   40654:	ldr	r1, [pc, #124]	; 406d8 <flatcc_json_parser_struct_as_root@@Base+0x2b54>
   40658:	and	r2, r2, r0
   4065c:	and	r3, r3, r1
   40660:	strd	r2, [fp, #-36]	; 0xffffffdc
   40664:	ldr	r3, [pc, #112]	; 406dc <flatcc_json_parser_struct_as_root@@Base+0x2b58>
   40668:	str	r3, [fp, #-28]	; 0xffffffe4
   4066c:	b	406b4 <flatcc_json_parser_struct_as_root@@Base+0x2b30>
   40670:	ldrd	r2, [fp, #-20]	; 0xffffffec
   40674:	mvn	r0, #0
   40678:	ldr	r1, [pc, #88]	; 406d8 <flatcc_json_parser_struct_as_root@@Base+0x2b54>
   4067c:	and	r2, r2, r0
   40680:	and	r3, r3, r1
   40684:	adds	r2, r2, #0
   40688:	adc	r3, r3, #1048576	; 0x100000
   4068c:	strd	r2, [fp, #-36]	; 0xffffffdc
   40690:	ldrd	r2, [fp, #-20]	; 0xffffffec
   40694:	lsr	r4, r3, #20
   40698:	mov	r5, #0
   4069c:	mov	r3, r4
   406a0:	lsl	r3, r3, #21
   406a4:	lsr	r3, r3, #21
   406a8:	sub	r3, r3, #1072	; 0x430
   406ac:	sub	r3, r3, #3
   406b0:	str	r3, [fp, #-28]	; 0xffffffe4
   406b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   406b8:	mov	ip, r3
   406bc:	sub	r3, fp, #36	; 0x24
   406c0:	ldm	r3, {r0, r1, r2, r3}
   406c4:	stm	ip, {r0, r1, r2, r3}
   406c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   406cc:	sub	sp, fp, #12
   406d0:	pop	{r4, r5, fp, pc}
   406d4:	svcvc	0x00f00000	; IMB
   406d8:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   406dc:			; <UNDEFINED> instruction: 0xfffffbce
   406e0:	push	{r4, r5, r6, r7, fp, lr}
   406e4:	add	fp, sp, #20
   406e8:	sub	sp, sp, #72	; 0x48
   406ec:	sub	ip, fp, #92	; 0x5c
   406f0:	stm	ip, {r0, r1, r2, r3}
   406f4:	mov	r2, #0
   406f8:	mov	r3, #1048576	; 0x100000
   406fc:	strd	r2, [fp, #-36]	; 0xffffffdc
   40700:	mvn	r2, #0
   40704:	ldr	r3, [pc, #372]	; 40880 <flatcc_json_parser_struct_as_root@@Base+0x2cfc>
   40708:	strd	r2, [fp, #-44]	; 0xffffffd4
   4070c:	ldr	r3, [pc, #368]	; 40884 <flatcc_json_parser_struct_as_root@@Base+0x2d00>
   40710:	str	r3, [fp, #-48]	; 0xffffffd0
   40714:	ldr	r3, [pc, #364]	; 40888 <flatcc_json_parser_struct_as_root@@Base+0x2d04>
   40718:	str	r3, [fp, #-52]	; 0xffffffcc
   4071c:	mov	r3, #52	; 0x34
   40720:	str	r3, [fp, #-56]	; 0xffffffc8
   40724:	sub	ip, fp, #76	; 0x4c
   40728:	sub	r3, fp, #92	; 0x5c
   4072c:	ldm	r3, {r0, r1, r2, r3}
   40730:	stm	ip, {r0, r1, r2, r3}
   40734:	b	40754 <flatcc_json_parser_struct_as_root@@Base+0x2bd0>
   40738:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   4073c:	lsrs	r3, r3, #1
   40740:	rrx	r2, r2
   40744:	strd	r2, [fp, #-76]	; 0xffffffb4
   40748:	ldr	r3, [fp, #-68]	; 0xffffffbc
   4074c:	add	r3, r3, #1
   40750:	str	r3, [fp, #-68]	; 0xffffffbc
   40754:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   40758:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   4075c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   40760:	adds	r2, r2, r6
   40764:	adc	r3, r3, r7
   40768:	cmp	r1, r3
   4076c:	cmpeq	r0, r2
   40770:	bhi	40738 <flatcc_json_parser_struct_as_root@@Base+0x2bb4>
   40774:	ldr	r2, [fp, #-68]	; 0xffffffbc
   40778:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4077c:	cmp	r2, r3
   40780:	bge	407a8 <flatcc_json_parser_struct_as_root@@Base+0x2c24>
   40784:	vldr	d7, [pc, #236]	; 40878 <flatcc_json_parser_struct_as_root@@Base+0x2cf4>
   40788:	b	40868 <flatcc_json_parser_struct_as_root@@Base+0x2ce4>
   4078c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   40790:	adds	r2, r2, r2
   40794:	adc	r3, r3, r3
   40798:	strd	r2, [fp, #-76]	; 0xffffffb4
   4079c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   407a0:	sub	r3, r3, #1
   407a4:	str	r3, [fp, #-68]	; 0xffffffbc
   407a8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   407ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   407b0:	cmp	r2, r3
   407b4:	ble	407d0 <flatcc_json_parser_struct_as_root@@Base+0x2c4c>
   407b8:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   407bc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   407c0:	and	r2, r2, r0
   407c4:	and	r3, r3, r1
   407c8:	orrs	r3, r2, r3
   407cc:	beq	4078c <flatcc_json_parser_struct_as_root@@Base+0x2c08>
   407d0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   407d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   407d8:	cmp	r2, r3
   407dc:	bne	40808 <flatcc_json_parser_struct_as_root@@Base+0x2c84>
   407e0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   407e4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   407e8:	and	r2, r2, r0
   407ec:	and	r3, r3, r1
   407f0:	orrs	r3, r2, r3
   407f4:	bne	40808 <flatcc_json_parser_struct_as_root@@Base+0x2c84>
   407f8:	mov	r2, #0
   407fc:	mov	r3, #0
   40800:	strd	r2, [fp, #-28]	; 0xffffffe4
   40804:	b	40820 <flatcc_json_parser_struct_as_root@@Base+0x2c9c>
   40808:	ldr	r2, [fp, #-68]	; 0xffffffbc
   4080c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   40810:	add	r3, r2, r3
   40814:	mov	r2, r3
   40818:	asr	r3, r2, #31
   4081c:	strd	r2, [fp, #-28]	; 0xffffffe4
   40820:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   40824:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   40828:	and	r6, r0, r2
   4082c:	and	r7, r1, r3
   40830:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   40834:	ldr	r1, [fp, #-56]	; 0xffffffc8
   40838:	sub	ip, r1, #32
   4083c:	rsb	r0, r1, #32
   40840:	lsl	r5, r3, r1
   40844:	orr	r5, r5, r2, lsl ip
   40848:	orr	r5, r5, r2, lsr r0
   4084c:	lsl	r4, r2, r1
   40850:	orr	r2, r6, r4
   40854:	orr	r3, r7, r5
   40858:	mov	r0, r2
   4085c:	mov	r1, r3
   40860:	bl	40094 <flatcc_json_parser_struct_as_root@@Base+0x2510>
   40864:	vmov.f64	d7, d0
   40868:	vmov.f64	d0, d7
   4086c:	sub	sp, fp, #20
   40870:	pop	{r4, r5, r6, r7, fp, pc}
   40874:	nop			; (mov r0, r0)
	...
   40880:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   40884:			; <UNDEFINED> instruction: 0xfffffbce
   40888:	andeq	r0, r0, r3, lsr r4
   4088c:	push	{fp}		; (str fp, [sp, #-4]!)
   40890:	add	fp, sp, #0
   40894:	sub	sp, sp, #28
   40898:	str	r0, [fp, #-16]
   4089c:	str	r1, [fp, #-20]	; 0xffffffec
   408a0:	str	r2, [fp, #-24]	; 0xffffffe8
   408a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   408a8:	add	r2, r3, #1
   408ac:	mov	r3, r2
   408b0:	lsl	r3, r3, #4
   408b4:	add	r3, r3, r2
   408b8:	lsl	r3, r3, #3
   408bc:	add	r3, r3, r2
   408c0:	lsl	r2, r3, #3
   408c4:	add	r3, r3, r2
   408c8:	asr	r3, r3, #12
   408cc:	add	r3, r3, #1
   408d0:	str	r3, [fp, #-8]
   408d4:	ldr	r3, [pc, #76]	; 40928 <flatcc_json_parser_struct_as_root@@Base+0x2da4>
   408d8:	add	r3, pc, r3
   408dc:	ldr	r2, [fp, #-8]
   408e0:	ldr	r2, [r3, r2, lsl #2]
   408e4:	ldr	r3, [fp, #-16]
   408e8:	cmp	r2, r3
   408ec:	bls	408fc <flatcc_json_parser_struct_as_root@@Base+0x2d78>
   408f0:	ldr	r3, [fp, #-8]
   408f4:	sub	r3, r3, #1
   408f8:	str	r3, [fp, #-8]
   408fc:	ldr	r3, [pc, #40]	; 4092c <flatcc_json_parser_struct_as_root@@Base+0x2da8>
   40900:	add	r3, pc, r3
   40904:	ldr	r2, [fp, #-8]
   40908:	ldr	r2, [r3, r2, lsl #2]
   4090c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40910:	str	r2, [r3]
   40914:	ldr	r3, [fp, #-8]
   40918:	mov	r0, r3
   4091c:	add	sp, fp, #0
   40920:	pop	{fp}		; (ldr fp, [sp], #4)
   40924:	bx	lr
   40928:	andeq	r2, r1, r0, lsl #8
   4092c:	ldrdeq	r2, [r1], -r8
   40930:	push	{r4, r5, r6, r7, fp}
   40934:	add	fp, sp, #16
   40938:	sub	sp, sp, #36	; 0x24
   4093c:	str	r0, [fp, #-40]	; 0xffffffd8
   40940:	str	r1, [fp, #-44]	; 0xffffffd4
   40944:	strd	r2, [fp, #-52]	; 0xffffffcc
   40948:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   4094c:	ldrd	r2, [fp, #28]
   40950:	subs	r2, r0, r2
   40954:	sbc	r3, r1, r3
   40958:	strd	r2, [fp, #-28]	; 0xffffffe4
   4095c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   40960:	ldrd	r2, [fp, #28]
   40964:	adds	r2, r2, r0
   40968:	adc	r3, r3, r1
   4096c:	strd	r2, [fp, #-36]	; 0xffffffdc
   40970:	b	409a8 <flatcc_json_parser_struct_as_root@@Base+0x2e24>
   40974:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40978:	sub	r3, r3, #1
   4097c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   40980:	add	r3, r2, r3
   40984:	ldrb	r2, [r3]
   40988:	sub	r2, r2, #1
   4098c:	uxtb	r2, r2
   40990:	strb	r2, [r3]
   40994:	ldrd	r0, [fp, #12]
   40998:	ldrd	r2, [fp, #20]
   4099c:	adds	r2, r2, r0
   409a0:	adc	r3, r3, r1
   409a4:	strd	r2, [fp, #12]
   409a8:	ldrd	r0, [fp, #12]
   409ac:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   409b0:	cmp	r1, r3
   409b4:	cmpeq	r0, r2
   409b8:	bcs	40a34 <flatcc_json_parser_struct_as_root@@Base+0x2eb0>
   409bc:	ldrd	r0, [fp, #4]
   409c0:	ldrd	r2, [fp, #12]
   409c4:	subs	r0, r0, r2
   409c8:	sbc	r1, r1, r3
   409cc:	ldrd	r2, [fp, #20]
   409d0:	cmp	r1, r3
   409d4:	cmpeq	r0, r2
   409d8:	bcc	40a34 <flatcc_json_parser_struct_as_root@@Base+0x2eb0>
   409dc:	ldrd	r0, [fp, #12]
   409e0:	ldrd	r2, [fp, #20]
   409e4:	adds	r0, r0, r2
   409e8:	adc	r1, r1, r3
   409ec:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   409f0:	cmp	r1, r3
   409f4:	cmpeq	r0, r2
   409f8:	bcc	40974 <flatcc_json_parser_struct_as_root@@Base+0x2df0>
   409fc:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   40a00:	ldrd	r2, [fp, #12]
   40a04:	subs	r0, r0, r2
   40a08:	sbc	r1, r1, r3
   40a0c:	ldrd	r6, [fp, #12]
   40a10:	ldrd	r2, [fp, #20]
   40a14:	adds	r6, r6, r2
   40a18:	adc	r7, r7, r3
   40a1c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   40a20:	subs	r2, r6, r2
   40a24:	sbc	r3, r7, r3
   40a28:	cmp	r1, r3
   40a2c:	cmpeq	r0, r2
   40a30:	bcs	40974 <flatcc_json_parser_struct_as_root@@Base+0x2df0>
   40a34:	ldrd	r0, [fp, #12]
   40a38:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   40a3c:	cmp	r1, r3
   40a40:	cmpeq	r0, r2
   40a44:	bcs	40ac8 <flatcc_json_parser_struct_as_root@@Base+0x2f44>
   40a48:	ldrd	r0, [fp, #4]
   40a4c:	ldrd	r2, [fp, #12]
   40a50:	subs	r0, r0, r2
   40a54:	sbc	r1, r1, r3
   40a58:	ldrd	r2, [fp, #20]
   40a5c:	cmp	r1, r3
   40a60:	cmpeq	r0, r2
   40a64:	bcc	40ac8 <flatcc_json_parser_struct_as_root@@Base+0x2f44>
   40a68:	ldrd	r0, [fp, #12]
   40a6c:	ldrd	r2, [fp, #20]
   40a70:	adds	r0, r0, r2
   40a74:	adc	r1, r1, r3
   40a78:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   40a7c:	cmp	r1, r3
   40a80:	cmpeq	r0, r2
   40a84:	bcc	40ac0 <flatcc_json_parser_struct_as_root@@Base+0x2f3c>
   40a88:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   40a8c:	ldrd	r2, [fp, #12]
   40a90:	subs	r0, r0, r2
   40a94:	sbc	r1, r1, r3
   40a98:	ldrd	r6, [fp, #12]
   40a9c:	ldrd	r2, [fp, #20]
   40aa0:	adds	r6, r6, r2
   40aa4:	adc	r7, r7, r3
   40aa8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   40aac:	subs	r2, r6, r2
   40ab0:	sbc	r3, r7, r3
   40ab4:	cmp	r1, r3
   40ab8:	cmpeq	r0, r2
   40abc:	bls	40ac8 <flatcc_json_parser_struct_as_root@@Base+0x2f44>
   40ac0:	mov	r3, #0
   40ac4:	b	40b2c <flatcc_json_parser_struct_as_root@@Base+0x2fa8>
   40ac8:	ldrd	r2, [fp, #28]
   40acc:	adds	r2, r2, r2
   40ad0:	adc	r3, r3, r3
   40ad4:	mov	r0, r2
   40ad8:	mov	r1, r3
   40adc:	ldrd	r2, [fp, #12]
   40ae0:	cmp	r1, r3
   40ae4:	cmpeq	r0, r2
   40ae8:	bhi	40b28 <flatcc_json_parser_struct_as_root@@Base+0x2fa4>
   40aec:	ldrd	r2, [fp, #28]
   40af0:	lsl	r5, r3, #2
   40af4:	orr	r5, r5, r2, lsr #30
   40af8:	lsl	r4, r2, #2
   40afc:	ldrd	r2, [fp, #4]
   40b00:	subs	r2, r2, r4
   40b04:	sbc	r3, r3, r5
   40b08:	mov	r0, r2
   40b0c:	mov	r1, r3
   40b10:	ldrd	r2, [fp, #12]
   40b14:	cmp	r1, r3
   40b18:	cmpeq	r0, r2
   40b1c:	bcc	40b28 <flatcc_json_parser_struct_as_root@@Base+0x2fa4>
   40b20:	mov	r3, #1
   40b24:	b	40b2c <flatcc_json_parser_struct_as_root@@Base+0x2fa8>
   40b28:	mov	r3, #0
   40b2c:	mov	r0, r3
   40b30:	sub	sp, fp, #16
   40b34:	pop	{r4, r5, r6, r7, fp}
   40b38:	bx	lr
   40b3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   40b40:	add	fp, sp, #28
   40b44:	sub	sp, sp, #216	; 0xd8
   40b48:	sub	ip, fp, #196	; 0xc4
   40b4c:	stm	ip, {r0, r1, r2, r3}
   40b50:	mov	r2, #1
   40b54:	mov	r3, #0
   40b58:	strd	r2, [fp, #-36]	; 0xffffffdc
   40b5c:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   40b60:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   40b64:	subs	r2, r0, r2
   40b68:	sbc	r3, r1, r3
   40b6c:	strd	r2, [fp, #-124]	; 0xffffff84
   40b70:	ldr	r3, [fp, #-188]	; 0xffffff44
   40b74:	str	r3, [fp, #-116]	; 0xffffff8c
   40b78:	ldrd	r0, [fp, #20]
   40b7c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   40b80:	adds	r2, r2, r0
   40b84:	adc	r3, r3, r1
   40b88:	strd	r2, [fp, #-140]	; 0xffffff74
   40b8c:	ldr	r3, [fp, #28]
   40b90:	str	r3, [fp, #-132]	; 0xffffff7c
   40b94:	sub	lr, fp, #156	; 0x9c
   40b98:	add	ip, sp, #8
   40b9c:	sub	r3, fp, #124	; 0x7c
   40ba0:	ldm	r3, {r0, r1, r2, r3}
   40ba4:	stm	ip, {r0, r1, r2, r3}
   40ba8:	mov	r2, sp
   40bac:	sub	r3, fp, #132	; 0x84
   40bb0:	ldm	r3, {r0, r1}
   40bb4:	stm	r2, {r0, r1}
   40bb8:	sub	r3, fp, #140	; 0x8c
   40bbc:	ldm	r3, {r2, r3}
   40bc0:	mov	r0, lr
   40bc4:	bl	40224 <flatcc_json_parser_struct_as_root@@Base+0x26a0>
   40bc8:	ldr	r3, [fp, #12]
   40bcc:	rsb	r1, r3, #0
   40bd0:	mov	r2, #1
   40bd4:	mov	r3, #0
   40bd8:	sub	ip, r1, #32
   40bdc:	rsb	r0, r1, #32
   40be0:	lsl	r7, r3, r1
   40be4:	orr	r7, r7, r2, lsl ip
   40be8:	orr	r7, r7, r2, lsr r0
   40bec:	lsl	r6, r2, r1
   40bf0:	strd	r6, [fp, #-172]	; 0xffffff54
   40bf4:	ldr	r3, [fp, #12]
   40bf8:	str	r3, [fp, #-164]	; 0xffffff5c
   40bfc:	ldrd	r2, [fp, #-140]	; 0xffffff74
   40c00:	ldr	r1, [fp, #-164]	; 0xffffff5c
   40c04:	rsb	r1, r1, #0
   40c08:	rsb	ip, r1, #32
   40c0c:	sub	r0, r1, #32
   40c10:	lsr	lr, r2, r1
   40c14:	str	lr, [fp, #-204]	; 0xffffff34
   40c18:	ldr	lr, [fp, #-204]	; 0xffffff34
   40c1c:	orr	ip, lr, r3, lsl ip
   40c20:	str	ip, [fp, #-204]	; 0xffffff34
   40c24:	ldr	ip, [fp, #-204]	; 0xffffff34
   40c28:	orr	r0, ip, r3, lsr r0
   40c2c:	str	r0, [fp, #-204]	; 0xffffff34
   40c30:	lsr	r3, r3, r1
   40c34:	str	r3, [fp, #-200]	; 0xffffff38
   40c38:	ldr	r3, [fp, #-204]	; 0xffffff34
   40c3c:	str	r3, [fp, #-40]	; 0xffffffd8
   40c40:	ldrd	r0, [fp, #-140]	; 0xffffff74
   40c44:	ldrd	r2, [fp, #-172]	; 0xffffff54
   40c48:	subs	r2, r2, #1
   40c4c:	sbc	r3, r3, #0
   40c50:	and	r2, r2, r0
   40c54:	and	r3, r3, r1
   40c58:	strd	r2, [fp, #-52]	; 0xffffffcc
   40c5c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   40c60:	add	r3, r3, #64	; 0x40
   40c64:	sub	r2, fp, #176	; 0xb0
   40c68:	mov	r1, r3
   40c6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   40c70:	bl	4088c <flatcc_json_parser_struct_as_root@@Base+0x2d08>
   40c74:	mov	r2, r0
   40c78:	ldr	r3, [fp, #44]	; 0x2c
   40c7c:	str	r2, [r3]
   40c80:	ldr	r3, [fp, #40]	; 0x28
   40c84:	mov	r2, #0
   40c88:	str	r2, [r3]
   40c8c:	b	40e38 <flatcc_json_parser_struct_as_root@@Base+0x32b4>
   40c90:	ldr	r3, [fp, #-176]	; 0xffffff50
   40c94:	mov	r1, r3
   40c98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   40c9c:	bl	4bac8 <flatcc_json_printer_clear@@Base+0x5c>
   40ca0:	mov	r3, r0
   40ca4:	str	r3, [fp, #-56]	; 0xffffffc8
   40ca8:	ldr	r3, [fp, #40]	; 0x28
   40cac:	ldr	r3, [r3]
   40cb0:	mov	r2, r3
   40cb4:	ldr	r3, [fp, #36]	; 0x24
   40cb8:	add	r3, r3, r2
   40cbc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   40cc0:	uxtb	r2, r2
   40cc4:	add	r2, r2, #48	; 0x30
   40cc8:	uxtb	r2, r2
   40ccc:	strb	r2, [r3]
   40cd0:	ldr	r3, [fp, #40]	; 0x28
   40cd4:	ldr	r3, [r3]
   40cd8:	add	r2, r3, #1
   40cdc:	ldr	r3, [fp, #40]	; 0x28
   40ce0:	str	r2, [r3]
   40ce4:	ldr	r2, [fp, #-176]	; 0xffffff50
   40ce8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40cec:	mov	r1, r2
   40cf0:	mov	r0, r3
   40cf4:	bl	4bcb4 <flatcc_json_printer_clear@@Base+0x248>
   40cf8:	mov	r3, r1
   40cfc:	str	r3, [fp, #-40]	; 0xffffffd8
   40d00:	ldr	r3, [fp, #44]	; 0x2c
   40d04:	ldr	r3, [r3]
   40d08:	sub	r2, r3, #1
   40d0c:	ldr	r3, [fp, #44]	; 0x2c
   40d10:	str	r2, [r3]
   40d14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40d18:	mov	r2, r3
   40d1c:	mov	r3, #0
   40d20:	ldr	r1, [fp, #-164]	; 0xffffff5c
   40d24:	rsb	r1, r1, #0
   40d28:	sub	ip, r1, #32
   40d2c:	rsb	r0, r1, #32
   40d30:	lsl	r5, r3, r1
   40d34:	orr	r5, r5, r2, lsl ip
   40d38:	orr	r5, r5, r2, lsr r0
   40d3c:	lsl	r4, r2, r1
   40d40:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   40d44:	adds	r2, r2, r4
   40d48:	adc	r3, r3, r5
   40d4c:	strd	r2, [fp, #-68]	; 0xffffffbc
   40d50:	ldrd	r0, [fp, #-156]	; 0xffffff64
   40d54:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   40d58:	cmp	r1, r3
   40d5c:	cmpeq	r0, r2
   40d60:	bls	40e24 <flatcc_json_parser_struct_as_root@@Base+0x32a0>
   40d64:	ldr	r3, [fp, #40]	; 0x28
   40d68:	ldr	r8, [r3]
   40d6c:	sub	lr, fp, #108	; 0x6c
   40d70:	add	ip, sp, #8
   40d74:	add	r3, fp, #4
   40d78:	ldm	r3, {r0, r1, r2, r3}
   40d7c:	stm	ip, {r0, r1, r2, r3}
   40d80:	mov	r2, sp
   40d84:	sub	r3, fp, #132	; 0x84
   40d88:	ldm	r3, {r0, r1}
   40d8c:	stm	r2, {r0, r1}
   40d90:	sub	r3, fp, #140	; 0x8c
   40d94:	ldm	r3, {r2, r3}
   40d98:	mov	r0, lr
   40d9c:	bl	40224 <flatcc_json_parser_struct_as_root@@Base+0x26a0>
   40da0:	ldrd	r6, [fp, #-108]	; 0xffffff94
   40da4:	ldrd	r4, [fp, #-156]	; 0xffffff64
   40da8:	ldr	r3, [fp, #-176]	; 0xffffff50
   40dac:	mov	r2, r3
   40db0:	mov	r3, #0
   40db4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   40db8:	rsb	r1, r1, #0
   40dbc:	sub	ip, r1, #32
   40dc0:	rsb	r0, r1, #32
   40dc4:	lsl	lr, r3, r1
   40dc8:	str	lr, [fp, #-208]	; 0xffffff30
   40dcc:	ldr	lr, [fp, #-208]	; 0xffffff30
   40dd0:	orr	ip, lr, r2, lsl ip
   40dd4:	str	ip, [fp, #-208]	; 0xffffff30
   40dd8:	ldr	ip, [fp, #-208]	; 0xffffff30
   40ddc:	orr	r0, ip, r2, lsr r0
   40de0:	str	r0, [fp, #-208]	; 0xffffff30
   40de4:	lsl	r3, r2, r1
   40de8:	str	r3, [fp, #-212]	; 0xffffff2c
   40dec:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   40df0:	strd	r2, [sp, #24]
   40df4:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   40df8:	strd	r2, [sp, #16]
   40dfc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   40e00:	strd	r2, [sp, #8]
   40e04:	strd	r4, [sp]
   40e08:	mov	r2, r6
   40e0c:	mov	r3, r7
   40e10:	mov	r1, r8
   40e14:	ldr	r0, [fp, #36]	; 0x24
   40e18:	bl	40930 <flatcc_json_parser_struct_as_root@@Base+0x2dac>
   40e1c:	mov	r3, r0
   40e20:	b	41024 <flatcc_json_parser_struct_as_root@@Base+0x34a0>
   40e24:	ldr	r3, [fp, #-176]	; 0xffffff50
   40e28:	ldr	r2, [pc, #512]	; 41030 <flatcc_json_parser_struct_as_root@@Base+0x34ac>
   40e2c:	umull	r2, r3, r2, r3
   40e30:	lsr	r3, r3, #3
   40e34:	str	r3, [fp, #-176]	; 0xffffff50
   40e38:	ldr	r3, [fp, #44]	; 0x2c
   40e3c:	ldr	r3, [r3]
   40e40:	cmp	r3, #0
   40e44:	bgt	40c90 <flatcc_json_parser_struct_as_root@@Base+0x310c>
   40e48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40e4c:	mov	r2, #10
   40e50:	mul	r2, r2, r3
   40e54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   40e58:	mov	r1, #0
   40e5c:	mul	r3, r1, r3
   40e60:	add	r1, r2, r3
   40e64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   40e68:	mov	r2, #10
   40e6c:	umull	r2, r3, r3, r2
   40e70:	add	r1, r1, r3
   40e74:	mov	r3, r1
   40e78:	strd	r2, [fp, #-52]	; 0xffffffcc
   40e7c:	strd	r2, [fp, #-52]	; 0xffffffcc
   40e80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40e84:	mov	r2, #10
   40e88:	mul	r2, r2, r3
   40e8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   40e90:	mov	r1, #0
   40e94:	mul	r3, r1, r3
   40e98:	add	r1, r2, r3
   40e9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   40ea0:	mov	r2, #10
   40ea4:	umull	r2, r3, r3, r2
   40ea8:	add	r1, r1, r3
   40eac:	mov	r3, r1
   40eb0:	strd	r2, [fp, #-36]	; 0xffffffdc
   40eb4:	strd	r2, [fp, #-36]	; 0xffffffdc
   40eb8:	ldrd	r2, [fp, #-156]	; 0xffffff64
   40ebc:	mov	r1, #10
   40ec0:	mul	r0, r1, r3
   40ec4:	mov	r1, #0
   40ec8:	mul	r1, r1, r2
   40ecc:	add	r1, r0, r1
   40ed0:	mov	r0, #10
   40ed4:	umull	r2, r3, r2, r0
   40ed8:	add	r1, r1, r3
   40edc:	mov	r3, r1
   40ee0:	strd	r2, [fp, #-156]	; 0xffffff64
   40ee4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   40ee8:	rsb	r1, r3, #0
   40eec:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   40ef0:	rsb	ip, r1, #32
   40ef4:	sub	r0, r1, #32
   40ef8:	lsr	r8, r2, r1
   40efc:	orr	r8, r8, r3, lsl ip
   40f00:	orr	r8, r8, r3, lsr r0
   40f04:	lsr	r9, r3, r1
   40f08:	mov	r3, r8
   40f0c:	str	r3, [fp, #-72]	; 0xffffffb8
   40f10:	ldr	r3, [fp, #40]	; 0x28
   40f14:	ldr	r3, [r3]
   40f18:	mov	r2, r3
   40f1c:	ldr	r3, [fp, #36]	; 0x24
   40f20:	add	r3, r3, r2
   40f24:	ldr	r2, [fp, #-72]	; 0xffffffb8
   40f28:	uxtb	r2, r2
   40f2c:	add	r2, r2, #48	; 0x30
   40f30:	uxtb	r2, r2
   40f34:	strb	r2, [r3]
   40f38:	ldr	r3, [fp, #40]	; 0x28
   40f3c:	ldr	r3, [r3]
   40f40:	add	r2, r3, #1
   40f44:	ldr	r3, [fp, #40]	; 0x28
   40f48:	str	r2, [r3]
   40f4c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   40f50:	subs	r2, r2, #1
   40f54:	sbc	r3, r3, #0
   40f58:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   40f5c:	and	r2, r2, r0
   40f60:	and	r3, r3, r1
   40f64:	strd	r2, [fp, #-52]	; 0xffffffcc
   40f68:	ldr	r3, [fp, #44]	; 0x2c
   40f6c:	ldr	r3, [r3]
   40f70:	sub	r2, r3, #1
   40f74:	ldr	r3, [fp, #44]	; 0x2c
   40f78:	str	r2, [r3]
   40f7c:	ldrd	r0, [fp, #-156]	; 0xffffff64
   40f80:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   40f84:	cmp	r1, r3
   40f88:	cmpeq	r0, r2
   40f8c:	bls	40e48 <flatcc_json_parser_struct_as_root@@Base+0x32c4>
   40f90:	ldr	r3, [fp, #40]	; 0x28
   40f94:	ldr	r8, [r3]
   40f98:	sub	lr, fp, #92	; 0x5c
   40f9c:	add	ip, sp, #8
   40fa0:	add	r3, fp, #4
   40fa4:	ldm	r3, {r0, r1, r2, r3}
   40fa8:	stm	ip, {r0, r1, r2, r3}
   40fac:	mov	r2, sp
   40fb0:	sub	r3, fp, #132	; 0x84
   40fb4:	ldm	r3, {r0, r1}
   40fb8:	stm	r2, {r0, r1}
   40fbc:	sub	r3, fp, #140	; 0x8c
   40fc0:	ldm	r3, {r2, r3}
   40fc4:	mov	r0, lr
   40fc8:	bl	40224 <flatcc_json_parser_struct_as_root@@Base+0x26a0>
   40fcc:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   40fd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   40fd4:	mul	r0, r3, r1
   40fd8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   40fdc:	mul	r1, r2, r1
   40fe0:	add	r1, r0, r1
   40fe4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40fe8:	umull	r2, r3, r0, r2
   40fec:	add	r1, r1, r3
   40ff0:	mov	r3, r1
   40ff4:	ldrd	r0, [fp, #-156]	; 0xffffff64
   40ff8:	ldrd	r4, [fp, #-172]	; 0xffffff54
   40ffc:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   41000:	strd	r6, [sp, #24]
   41004:	strd	r4, [sp, #16]
   41008:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   4100c:	strd	r4, [sp, #8]
   41010:	strd	r0, [sp]
   41014:	mov	r1, r8
   41018:	ldr	r0, [fp, #36]	; 0x24
   4101c:	bl	40930 <flatcc_json_parser_struct_as_root@@Base+0x2dac>
   41020:	mov	r3, r0
   41024:	mov	r0, r3
   41028:	sub	sp, fp, #28
   4102c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   41030:	stclgt	12, cr12, [ip], {205}	; 0xcd
   41034:	push	{r4, r5, r6, r7, fp, lr}
   41038:	add	fp, sp, #20
   4103c:	sub	sp, sp, #208	; 0xd0
   41040:	vstr	d0, [fp, #-148]	; 0xffffff6c
   41044:	str	r0, [fp, #-152]	; 0xffffff68
   41048:	str	r1, [fp, #-156]	; 0xffffff64
   4104c:	str	r2, [fp, #-160]	; 0xffffff60
   41050:	sub	r3, fp, #60	; 0x3c
   41054:	vldr	d0, [fp, #-148]	; 0xffffff6c
   41058:	mov	r0, r3
   4105c:	bl	40610 <flatcc_json_parser_struct_as_root@@Base+0x2a8c>
   41060:	sub	ip, fp, #76	; 0x4c
   41064:	mov	r2, sp
   41068:	sub	r3, fp, #52	; 0x34
   4106c:	ldm	r3, {r0, r1}
   41070:	stm	r2, {r0, r1}
   41074:	sub	r3, fp, #60	; 0x3c
   41078:	ldm	r3, {r2, r3}
   4107c:	mov	r0, ip
   41080:	bl	40524 <flatcc_json_parser_struct_as_root@@Base+0x29a0>
   41084:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   41088:	adds	r2, r2, r2
   4108c:	adc	r3, r3, r3
   41090:	adds	r2, r2, #1
   41094:	adc	r3, r3, #0
   41098:	strd	r2, [fp, #-92]	; 0xffffffa4
   4109c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   410a0:	sub	r3, r3, #1
   410a4:	str	r3, [fp, #-84]	; 0xffffffac
   410a8:	sub	ip, fp, #108	; 0x6c
   410ac:	mov	r2, sp
   410b0:	sub	r3, fp, #84	; 0x54
   410b4:	ldm	r3, {r0, r1}
   410b8:	stm	r2, {r0, r1}
   410bc:	sub	r3, fp, #92	; 0x5c
   410c0:	ldm	r3, {r2, r3}
   410c4:	mov	r0, ip
   410c8:	bl	40524 <flatcc_json_parser_struct_as_root@@Base+0x29a0>
   410cc:	vldr	d0, [fp, #-148]	; 0xffffff6c
   410d0:	bl	40064 <flatcc_json_parser_struct_as_root@@Base+0x24e0>
   410d4:	strd	r0, [fp, #-28]	; 0xffffffe4
   410d8:	vldr	d7, [fp, #-148]	; 0xffffff6c
   410dc:	vcmpe.f64	d7, #0.0
   410e0:	vmrs	APSR_nzcv, fpscr
   410e4:	movgt	r3, #1
   410e8:	movle	r3, #0
   410ec:	uxtb	r3, r3
   410f0:	eor	r3, r3, #1
   410f4:	uxtb	r3, r3
   410f8:	cmp	r3, #0
   410fc:	bne	4112c <flatcc_json_parser_struct_as_root@@Base+0x35a8>
   41100:	vldr	d7, [fp, #-148]	; 0xffffff6c
   41104:	vldr	d6, [pc, #580]	; 41350 <flatcc_json_parser_struct_as_root@@Base+0x37cc>
   41108:	vcmpe.f64	d7, d6
   4110c:	vmrs	APSR_nzcv, fpscr
   41110:	movls	r3, #1
   41114:	movhi	r3, #0
   41118:	uxtb	r3, r3
   4111c:	eor	r3, r3, #1
   41120:	uxtb	r3, r3
   41124:	cmp	r3, #0
   41128:	beq	4114c <flatcc_json_parser_struct_as_root@@Base+0x35c8>
   4112c:	ldr	r3, [pc, #548]	; 41358 <flatcc_json_parser_struct_as_root@@Base+0x37d4>
   41130:	add	r3, pc, r3
   41134:	mov	r2, #138	; 0x8a
   41138:	ldr	r1, [pc, #540]	; 4135c <flatcc_json_parser_struct_as_root@@Base+0x37d8>
   4113c:	add	r1, pc, r1
   41140:	ldr	r0, [pc, #536]	; 41360 <flatcc_json_parser_struct_as_root@@Base+0x37dc>
   41144:	add	r0, pc, r0
   41148:	bl	14610 <__assert_fail@plt>
   4114c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   41150:	mvn	r0, #0
   41154:	ldr	r1, [pc, #520]	; 41364 <flatcc_json_parser_struct_as_root@@Base+0x37e0>
   41158:	and	r2, r2, r0
   4115c:	and	r3, r3, r1
   41160:	orrs	r3, r2, r3
   41164:	bne	411b0 <flatcc_json_parser_struct_as_root@@Base+0x362c>
   41168:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   4116c:	mov	r0, #0
   41170:	ldr	r1, [pc, #496]	; 41368 <flatcc_json_parser_struct_as_root@@Base+0x37e4>
   41174:	and	r2, r2, r0
   41178:	and	r3, r3, r1
   4117c:	orrs	r3, r2, r3
   41180:	beq	411b0 <flatcc_json_parser_struct_as_root@@Base+0x362c>
   41184:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   41188:	lsl	r7, r3, #2
   4118c:	orr	r7, r7, r2, lsr #30
   41190:	lsl	r6, r2, #2
   41194:	subs	r2, r6, #1
   41198:	sbc	r3, r7, #0
   4119c:	strd	r2, [fp, #-124]	; 0xffffff84
   411a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   411a4:	sub	r3, r3, #2
   411a8:	str	r3, [fp, #-116]	; 0xffffff8c
   411ac:	b	411d4 <flatcc_json_parser_struct_as_root@@Base+0x3650>
   411b0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   411b4:	adds	r2, r2, r2
   411b8:	adc	r3, r3, r3
   411bc:	subs	r2, r2, #1
   411c0:	sbc	r3, r3, #0
   411c4:	strd	r2, [fp, #-124]	; 0xffffff84
   411c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   411cc:	sub	r3, r3, #1
   411d0:	str	r3, [fp, #-116]	; 0xffffff8c
   411d4:	ldrd	r2, [fp, #-124]	; 0xffffff84
   411d8:	ldr	r0, [fp, #-116]	; 0xffffff8c
   411dc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   411e0:	sub	r1, r0, r1
   411e4:	sub	ip, r1, #32
   411e8:	rsb	r0, r1, #32
   411ec:	lsl	r5, r3, r1
   411f0:	orr	r5, r5, r2, lsl ip
   411f4:	orr	r5, r5, r2, lsr r0
   411f8:	lsl	r4, r2, r1
   411fc:	strd	r4, [fp, #-124]	; 0xffffff84
   41200:	ldr	r3, [fp, #-100]	; 0xffffff9c
   41204:	str	r3, [fp, #-116]	; 0xffffff8c
   41208:	ldr	r2, [fp, #-68]	; 0xffffffbc
   4120c:	mvn	r3, #123	; 0x7b
   41210:	sub	r3, r3, r2
   41214:	sub	r2, fp, #140	; 0x8c
   41218:	mov	r1, r2
   4121c:	mov	r0, r3
   41220:	bl	4013c <flatcc_json_parser_struct_as_root@@Base+0x25b8>
   41224:	str	r0, [fp, #-32]	; 0xffffffe0
   41228:	sub	lr, fp, #180	; 0xb4
   4122c:	add	ip, sp, #8
   41230:	sub	r3, fp, #140	; 0x8c
   41234:	ldm	r3, {r0, r1, r2, r3}
   41238:	stm	ip, {r0, r1, r2, r3}
   4123c:	mov	r2, sp
   41240:	sub	r3, fp, #68	; 0x44
   41244:	ldm	r3, {r0, r1}
   41248:	stm	r2, {r0, r1}
   4124c:	sub	r3, fp, #76	; 0x4c
   41250:	ldm	r3, {r2, r3}
   41254:	mov	r0, lr
   41258:	bl	402d4 <flatcc_json_parser_struct_as_root@@Base+0x2750>
   4125c:	sub	ip, fp, #76	; 0x4c
   41260:	sub	r3, fp, #180	; 0xb4
   41264:	ldm	r3, {r0, r1, r2, r3}
   41268:	stm	ip, {r0, r1, r2, r3}
   4126c:	sub	lr, fp, #124	; 0x7c
   41270:	add	ip, sp, #8
   41274:	sub	r3, fp, #140	; 0x8c
   41278:	ldm	r3, {r0, r1, r2, r3}
   4127c:	stm	ip, {r0, r1, r2, r3}
   41280:	mov	r2, sp
   41284:	sub	r3, fp, #116	; 0x74
   41288:	ldm	r3, {r0, r1}
   4128c:	stm	r2, {r0, r1}
   41290:	sub	r3, fp, #124	; 0x7c
   41294:	ldm	r3, {r2, r3}
   41298:	mov	r0, lr
   4129c:	bl	402d4 <flatcc_json_parser_struct_as_root@@Base+0x2750>
   412a0:	sub	lr, fp, #180	; 0xb4
   412a4:	add	ip, sp, #8
   412a8:	sub	r3, fp, #140	; 0x8c
   412ac:	ldm	r3, {r0, r1, r2, r3}
   412b0:	stm	ip, {r0, r1, r2, r3}
   412b4:	mov	r2, sp
   412b8:	sub	r3, fp, #100	; 0x64
   412bc:	ldm	r3, {r0, r1}
   412c0:	stm	r2, {r0, r1}
   412c4:	sub	r3, fp, #108	; 0x6c
   412c8:	ldm	r3, {r2, r3}
   412cc:	mov	r0, lr
   412d0:	bl	402d4 <flatcc_json_parser_struct_as_root@@Base+0x2750>
   412d4:	sub	ip, fp, #108	; 0x6c
   412d8:	sub	r3, fp, #180	; 0xb4
   412dc:	ldm	r3, {r0, r1, r2, r3}
   412e0:	stm	ip, {r0, r1, r2, r3}
   412e4:	sub	r3, fp, #40	; 0x28
   412e8:	str	r3, [sp, #40]	; 0x28
   412ec:	ldr	r3, [fp, #-156]	; 0xffffff64
   412f0:	str	r3, [sp, #36]	; 0x24
   412f4:	ldr	r3, [fp, #-152]	; 0xffffff68
   412f8:	str	r3, [sp, #32]
   412fc:	add	ip, sp, #16
   41300:	sub	r3, fp, #108	; 0x6c
   41304:	ldm	r3, {r0, r1, r2, r3}
   41308:	stm	ip, {r0, r1, r2, r3}
   4130c:	mov	ip, sp
   41310:	sub	r3, fp, #76	; 0x4c
   41314:	ldm	r3, {r0, r1, r2, r3}
   41318:	stm	ip, {r0, r1, r2, r3}
   4131c:	sub	r3, fp, #124	; 0x7c
   41320:	ldm	r3, {r0, r1, r2, r3}
   41324:	bl	40b3c <flatcc_json_parser_struct_as_root@@Base+0x2fb8>
   41328:	str	r0, [fp, #-36]	; 0xffffffdc
   4132c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   41330:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41334:	sub	r2, r2, r3
   41338:	ldr	r3, [fp, #-160]	; 0xffffff60
   4133c:	str	r2, [r3]
   41340:	ldr	r3, [fp, #-36]	; 0xffffffdc
   41344:	mov	r0, r3
   41348:	sub	sp, fp, #20
   4134c:	pop	{r4, r5, r6, r7, fp, pc}
   41350:			; <UNDEFINED> instruction: 0xffffffff
   41354:	svcvc	0x00efffff
   41358:	andeq	r1, r1, r8, lsr #30
   4135c:	andeq	r1, r1, r8, asr #23
   41360:	andeq	r1, r1, r0, lsr ip
   41364:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   41368:	svcvc	0x00f00000	; IMB
   4136c:	push	{fp}		; (str fp, [sp, #-4]!)
   41370:	add	fp, sp, #0
   41374:	sub	sp, sp, #44	; 0x2c
   41378:	str	r0, [fp, #-40]	; 0xffffffd8
   4137c:	str	r1, [fp, #-44]	; 0xffffffd4
   41380:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41384:	str	r3, [fp, #-16]
   41388:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4138c:	cmp	r3, #0
   41390:	bge	413b4 <flatcc_json_parser_struct_as_root@@Base+0x3830>
   41394:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41398:	add	r2, r3, #1
   4139c:	str	r2, [fp, #-44]	; 0xffffffd4
   413a0:	mov	r2, #45	; 0x2d
   413a4:	strb	r2, [r3]
   413a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   413ac:	rsb	r3, r3, #0
   413b0:	str	r3, [fp, #-40]	; 0xffffffd8
   413b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   413b8:	str	r3, [fp, #-12]
   413bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   413c0:	ldr	r2, [pc, #316]	; 41504 <flatcc_json_parser_struct_as_root@@Base+0x3980>
   413c4:	smull	r1, r2, r2, r3
   413c8:	asr	r2, r2, #2
   413cc:	asr	r3, r3, #31
   413d0:	sub	r3, r2, r3
   413d4:	str	r3, [fp, #-20]	; 0xffffffec
   413d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   413dc:	mvn	r2, #9
   413e0:	mul	r2, r2, r3
   413e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   413e8:	add	r3, r2, r3
   413ec:	str	r3, [fp, #-24]	; 0xffffffe8
   413f0:	ldr	r3, [fp, #-12]
   413f4:	add	r2, r3, #1
   413f8:	str	r2, [fp, #-12]
   413fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41400:	uxtb	r2, r2
   41404:	add	r2, r2, #48	; 0x30
   41408:	uxtb	r2, r2
   4140c:	strb	r2, [r3]
   41410:	ldr	r3, [fp, #-20]	; 0xffffffec
   41414:	cmp	r3, #0
   41418:	beq	41428 <flatcc_json_parser_struct_as_root@@Base+0x38a4>
   4141c:	ldr	r3, [fp, #-20]	; 0xffffffec
   41420:	str	r3, [fp, #-40]	; 0xffffffd8
   41424:	b	413bc <flatcc_json_parser_struct_as_root@@Base+0x3838>
   41428:	nop			; (mov r0, r0)
   4142c:	ldr	r3, [fp, #-12]
   41430:	mov	r2, #0
   41434:	strb	r2, [r3]
   41438:	ldr	r2, [fp, #-12]
   4143c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41440:	sub	r3, r2, r3
   41444:	str	r3, [fp, #-28]	; 0xffffffe4
   41448:	mov	r3, #0
   4144c:	str	r3, [fp, #-8]
   41450:	b	414c8 <flatcc_json_parser_struct_as_root@@Base+0x3944>
   41454:	ldr	r3, [fp, #-8]
   41458:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4145c:	add	r3, r2, r3
   41460:	ldrb	r3, [r3]
   41464:	strb	r3, [fp, #-29]	; 0xffffffe3
   41468:	ldr	r3, [fp, #-8]
   4146c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41470:	add	r3, r2, r3
   41474:	ldr	r2, [fp, #-28]	; 0xffffffe4
   41478:	sub	r1, r2, #1
   4147c:	ldr	r2, [fp, #-8]
   41480:	sub	r2, r1, r2
   41484:	mov	r1, r2
   41488:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4148c:	add	r2, r2, r1
   41490:	ldrb	r2, [r2]
   41494:	strb	r2, [r3]
   41498:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4149c:	sub	r2, r3, #1
   414a0:	ldr	r3, [fp, #-8]
   414a4:	sub	r3, r2, r3
   414a8:	mov	r2, r3
   414ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   414b0:	add	r3, r3, r2
   414b4:	ldrb	r2, [fp, #-29]	; 0xffffffe3
   414b8:	strb	r2, [r3]
   414bc:	ldr	r3, [fp, #-8]
   414c0:	add	r3, r3, #1
   414c4:	str	r3, [fp, #-8]
   414c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   414cc:	lsr	r2, r3, #31
   414d0:	add	r3, r2, r3
   414d4:	asr	r3, r3, #1
   414d8:	mov	r2, r3
   414dc:	ldr	r3, [fp, #-8]
   414e0:	cmp	r2, r3
   414e4:	bgt	41454 <flatcc_json_parser_struct_as_root@@Base+0x38d0>
   414e8:	ldr	r2, [fp, #-12]
   414ec:	ldr	r3, [fp, #-16]
   414f0:	sub	r3, r2, r3
   414f4:	mov	r0, r3
   414f8:	add	sp, fp, #0
   414fc:	pop	{fp}		; (ldr fp, [sp], #4)
   41500:	bx	lr
   41504:	strbtvs	r6, [r6], -r7, ror #12
   41508:	push	{r4, r5, fp, lr}
   4150c:	add	fp, sp, #12
   41510:	sub	sp, sp, #56	; 0x38
   41514:	vstr	d0, [fp, #-60]	; 0xffffffc4
   41518:	str	r0, [fp, #-64]	; 0xffffffc0
   4151c:	vldr	d0, [fp, #-60]	; 0xffffffc4
   41520:	bl	40064 <flatcc_json_parser_struct_as_root@@Base+0x24e0>
   41524:	strd	r0, [fp, #-28]	; 0xffffffe4
   41528:	ldr	r3, [fp, #-64]	; 0xffffffc0
   4152c:	str	r3, [fp, #-32]	; 0xffffffe0
   41530:	ldr	r3, [fp, #-64]	; 0xffffffc0
   41534:	cmp	r3, #0
   41538:	bne	4155c <flatcc_json_parser_struct_as_root@@Base+0x39d8>
   4153c:	ldr	r3, [pc, #1196]	; 419f0 <flatcc_json_parser_struct_as_root@@Base+0x3e6c>
   41540:	add	r3, pc, r3
   41544:	mov	r2, #189	; 0xbd
   41548:	ldr	r1, [pc, #1188]	; 419f4 <flatcc_json_parser_struct_as_root@@Base+0x3e70>
   4154c:	add	r1, pc, r1
   41550:	ldr	r0, [pc, #1184]	; 419f8 <flatcc_json_parser_struct_as_root@@Base+0x3e74>
   41554:	add	r0, pc, r0
   41558:	bl	14610 <__assert_fail@plt>
   4155c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   41560:	adds	r2, r2, r2
   41564:	adc	r3, r3, r3
   41568:	mov	r0, r2
   4156c:	mov	r1, r3
   41570:	mov	r2, #0
   41574:	ldr	r3, [pc, #1152]	; 419fc <flatcc_json_parser_struct_as_root@@Base+0x3e78>
   41578:	cmp	r1, r3
   4157c:	cmpeq	r0, r2
   41580:	bls	415b0 <flatcc_json_parser_struct_as_root@@Base+0x3a2c>
   41584:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   41588:	mov	r4, r3
   4158c:	mov	r5, #0
   41590:	mov	r2, r4
   41594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   41598:	ldr	r1, [pc, #1120]	; 41a00 <flatcc_json_parser_struct_as_root@@Base+0x3e7c>
   4159c:	add	r1, pc, r1
   415a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   415a4:	bl	145f8 <sprintf@plt>
   415a8:	mov	r3, r0
   415ac:	b	419e4 <flatcc_json_parser_struct_as_root@@Base+0x3e60>
   415b0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   415b4:	cmp	r2, #0
   415b8:	sbcs	r3, r3, #0
   415bc:	bge	415ec <flatcc_json_parser_struct_as_root@@Base+0x3a68>
   415c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   415c4:	add	r2, r3, #1
   415c8:	str	r2, [fp, #-32]	; 0xffffffe0
   415cc:	mov	r2, #45	; 0x2d
   415d0:	strb	r2, [r3]
   415d4:	vldr	d7, [fp, #-60]	; 0xffffffc4
   415d8:	vneg.f64	d7, d7
   415dc:	vstr	d7, [fp, #-60]	; 0xffffffc4
   415e0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   415e4:	add	r3, r3, #-2147483648	; 0x80000000
   415e8:	strd	r2, [fp, #-28]	; 0xffffffe4
   415ec:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   415f0:	orrs	r3, r2, r3
   415f4:	bne	41628 <flatcc_json_parser_struct_as_root@@Base+0x3aa4>
   415f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   415fc:	add	r2, r3, #1
   41600:	str	r2, [fp, #-32]	; 0xffffffe0
   41604:	mov	r2, #48	; 0x30
   41608:	strb	r2, [r3]
   4160c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41610:	mov	r2, #0
   41614:	strb	r2, [r3]
   41618:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4161c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   41620:	sub	r3, r2, r3
   41624:	b	419e4 <flatcc_json_parser_struct_as_root@@Base+0x3e60>
   41628:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   4162c:	mov	r0, #0
   41630:	ldr	r1, [pc, #972]	; 41a04 <flatcc_json_parser_struct_as_root@@Base+0x3e80>
   41634:	cmp	r3, r1
   41638:	cmpeq	r2, r0
   4163c:	bne	41698 <flatcc_json_parser_struct_as_root@@Base+0x3b14>
   41640:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41644:	add	r2, r3, #1
   41648:	str	r2, [fp, #-32]	; 0xffffffe0
   4164c:	mov	r2, #105	; 0x69
   41650:	strb	r2, [r3]
   41654:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41658:	add	r2, r3, #1
   4165c:	str	r2, [fp, #-32]	; 0xffffffe0
   41660:	mov	r2, #110	; 0x6e
   41664:	strb	r2, [r3]
   41668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4166c:	add	r2, r3, #1
   41670:	str	r2, [fp, #-32]	; 0xffffffe0
   41674:	mov	r2, #102	; 0x66
   41678:	strb	r2, [r3]
   4167c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41680:	mov	r2, #0
   41684:	strb	r2, [r3]
   41688:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4168c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   41690:	sub	r3, r2, r3
   41694:	b	419e4 <flatcc_json_parser_struct_as_root@@Base+0x3e60>
   41698:	sub	r2, fp, #44	; 0x2c
   4169c:	sub	r3, fp, #48	; 0x30
   416a0:	mov	r1, r3
   416a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   416a8:	vldr	d0, [fp, #-60]	; 0xffffffc4
   416ac:	bl	41034 <flatcc_json_parser_struct_as_root@@Base+0x34b0>
   416b0:	str	r0, [fp, #-36]	; 0xffffffdc
   416b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   416b8:	cmp	r3, #0
   416bc:	bne	416ec <flatcc_json_parser_struct_as_root@@Base+0x3b68>
   416c0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   416c4:	ldr	r1, [pc, #828]	; 41a08 <flatcc_json_parser_struct_as_root@@Base+0x3e84>
   416c8:	add	r1, pc, r1
   416cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   416d0:	bl	145f8 <sprintf@plt>
   416d4:	mov	r1, r0
   416d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   416dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   416e0:	sub	r3, r2, r3
   416e4:	add	r3, r1, r3
   416e8:	b	419e4 <flatcc_json_parser_struct_as_root@@Base+0x3e60>
   416ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   416f0:	rsb	r2, r3, #0
   416f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   416f8:	sub	r3, r3, #1
   416fc:	cmp	r3, #1
   41700:	movge	r3, r3
   41704:	movlt	r3, #1
   41708:	cmp	r2, r3
   4170c:	movlt	r3, r2
   41710:	movge	r3, r3
   41714:	str	r3, [fp, #-40]	; 0xffffffd8
   41718:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4171c:	cmp	r3, #0
   41720:	bge	417f0 <flatcc_json_parser_struct_as_root@@Base+0x3c6c>
   41724:	ldr	r2, [fp, #-48]	; 0xffffffd0
   41728:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4172c:	add	r3, r2, r3
   41730:	cmn	r3, #2
   41734:	blt	417f0 <flatcc_json_parser_struct_as_root@@Base+0x3c6c>
   41738:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4173c:	rsb	r2, r3, #0
   41740:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41744:	cmp	r2, r3
   41748:	blt	417f0 <flatcc_json_parser_struct_as_root@@Base+0x3c6c>
   4174c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41750:	rsb	r3, r3, #0
   41754:	ldr	r2, [fp, #-48]	; 0xffffffd0
   41758:	sub	r3, r3, r2
   4175c:	add	r3, r3, #2
   41760:	ldr	r2, [fp, #-32]	; 0xffffffe0
   41764:	add	r3, r2, r3
   41768:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4176c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   41770:	mov	r0, r3
   41774:	bl	1452c <memmove@plt>
   41778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4177c:	mov	r2, #48	; 0x30
   41780:	strb	r2, [r3]
   41784:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41788:	add	r3, r3, #1
   4178c:	mov	r2, #46	; 0x2e
   41790:	strb	r2, [r3]
   41794:	mov	r3, #2
   41798:	str	r3, [fp, #-16]
   4179c:	b	417c0 <flatcc_json_parser_struct_as_root@@Base+0x3c3c>
   417a0:	ldr	r3, [fp, #-16]
   417a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   417a8:	add	r3, r2, r3
   417ac:	mov	r2, #48	; 0x30
   417b0:	strb	r2, [r3]
   417b4:	ldr	r3, [fp, #-16]
   417b8:	add	r3, r3, #1
   417bc:	str	r3, [fp, #-16]
   417c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   417c4:	rsb	r2, r3, #2
   417c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   417cc:	sub	r2, r2, r3
   417d0:	ldr	r3, [fp, #-16]
   417d4:	cmp	r2, r3
   417d8:	bgt	417a0 <flatcc_json_parser_struct_as_root@@Base+0x3c1c>
   417dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   417e0:	ldr	r3, [fp, #-16]
   417e4:	add	r3, r2, r3
   417e8:	str	r3, [fp, #-48]	; 0xffffffd0
   417ec:	b	419b0 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   417f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   417f4:	cmp	r3, #0
   417f8:	bge	41900 <flatcc_json_parser_struct_as_root@@Base+0x3d7c>
   417fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41800:	cmp	r3, #1
   41804:	ble	41900 <flatcc_json_parser_struct_as_root@@Base+0x3d7c>
   41808:	mov	r3, #0
   4180c:	str	r3, [fp, #-16]
   41810:	b	41858 <flatcc_json_parser_struct_as_root@@Base+0x3cd4>
   41814:	ldr	r2, [fp, #-48]	; 0xffffffd0
   41818:	ldr	r3, [fp, #-16]
   4181c:	sub	r3, r2, r3
   41820:	mov	r2, r3
   41824:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41828:	add	r3, r3, r2
   4182c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   41830:	ldr	r2, [fp, #-16]
   41834:	sub	r2, r1, r2
   41838:	sub	r2, r2, #1
   4183c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   41840:	add	r2, r1, r2
   41844:	ldrb	r2, [r2]
   41848:	strb	r2, [r3]
   4184c:	ldr	r3, [fp, #-16]
   41850:	add	r3, r3, #1
   41854:	str	r3, [fp, #-16]
   41858:	ldr	r2, [fp, #-16]
   4185c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41860:	cmp	r2, r3
   41864:	blt	41814 <flatcc_json_parser_struct_as_root@@Base+0x3c90>
   41868:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4186c:	add	r2, r3, #1
   41870:	str	r2, [fp, #-48]	; 0xffffffd0
   41874:	ldr	r2, [fp, #-40]	; 0xffffffd8
   41878:	sub	r3, r3, r2
   4187c:	mov	r2, r3
   41880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41884:	add	r3, r3, r2
   41888:	mov	r2, #46	; 0x2e
   4188c:	strb	r2, [r3]
   41890:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41894:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41898:	add	r3, r2, r3
   4189c:	str	r3, [fp, #-44]	; 0xffffffd4
   418a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   418a4:	cmp	r3, #0
   418a8:	beq	419b0 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   418ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   418b0:	add	r2, r3, #1
   418b4:	str	r2, [fp, #-48]	; 0xffffffd0
   418b8:	mov	r2, r3
   418bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   418c0:	add	r3, r3, r2
   418c4:	mov	r2, #101	; 0x65
   418c8:	strb	r2, [r3]
   418cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   418d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   418d4:	mov	r1, r3
   418d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   418dc:	add	r3, r3, r1
   418e0:	mov	r1, r3
   418e4:	mov	r0, r2
   418e8:	bl	4136c <flatcc_json_parser_struct_as_root@@Base+0x37e8>
   418ec:	mov	r2, r0
   418f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   418f4:	add	r3, r2, r3
   418f8:	str	r3, [fp, #-48]	; 0xffffffd0
   418fc:	b	419b0 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   41900:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41904:	cmp	r3, #0
   41908:	blt	41918 <flatcc_json_parser_struct_as_root@@Base+0x3d94>
   4190c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41910:	cmp	r3, #2
   41914:	ble	4196c <flatcc_json_parser_struct_as_root@@Base+0x3de8>
   41918:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4191c:	add	r2, r3, #1
   41920:	str	r2, [fp, #-48]	; 0xffffffd0
   41924:	mov	r2, r3
   41928:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4192c:	add	r3, r3, r2
   41930:	mov	r2, #101	; 0x65
   41934:	strb	r2, [r3]
   41938:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4193c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41940:	mov	r1, r3
   41944:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41948:	add	r3, r3, r1
   4194c:	mov	r1, r3
   41950:	mov	r0, r2
   41954:	bl	4136c <flatcc_json_parser_struct_as_root@@Base+0x37e8>
   41958:	mov	r2, r0
   4195c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41960:	add	r3, r2, r3
   41964:	str	r3, [fp, #-48]	; 0xffffffd0
   41968:	b	419b0 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   4196c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41970:	cmp	r3, #0
   41974:	ble	419b0 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   41978:	b	4199c <flatcc_json_parser_struct_as_root@@Base+0x3e18>
   4197c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41980:	add	r2, r3, #1
   41984:	str	r2, [fp, #-48]	; 0xffffffd0
   41988:	mov	r2, r3
   4198c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41990:	add	r3, r3, r2
   41994:	mov	r2, #48	; 0x30
   41998:	strb	r2, [r3]
   4199c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   419a0:	sub	r2, r3, #1
   419a4:	str	r2, [fp, #-44]	; 0xffffffd4
   419a8:	cmp	r3, #0
   419ac:	bgt	4197c <flatcc_json_parser_struct_as_root@@Base+0x3df8>
   419b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   419b4:	mov	r2, r3
   419b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   419bc:	add	r3, r3, r2
   419c0:	mov	r2, #0
   419c4:	strb	r2, [r3]
   419c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   419cc:	mov	r2, r3
   419d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   419d4:	add	r3, r3, r2
   419d8:	mov	r2, r3
   419dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   419e0:	sub	r3, r2, r3
   419e4:	mov	r0, r3
   419e8:	sub	sp, fp, #12
   419ec:	pop	{r4, r5, fp, pc}
   419f0:	andeq	r1, r1, r0, lsr #22
   419f4:			; <UNDEFINED> instruction: 0x000117b8
   419f8:	andeq	r1, r1, r8, asr #16
   419fc:			; <UNDEFINED> instruction: 0xffe00000
   41a00:	andeq	r1, r1, r4, lsl #16
   41a04:	svcvc	0x00f00000	; IMB
   41a08:	andeq	r1, r1, r8, ror #13
   41a0c:	push	{fp}		; (str fp, [sp, #-4]!)
   41a10:	add	fp, sp, #0
   41a14:	sub	sp, sp, #12
   41a18:	str	r0, [fp, #-8]
   41a1c:	ldr	r3, [fp, #-8]
   41a20:	cmp	r3, #5
   41a24:	addls	pc, pc, r3, lsl #2
   41a28:	b	41a8c <flatcc_json_parser_struct_as_root@@Base+0x3f08>
   41a2c:	b	41a44 <flatcc_json_parser_struct_as_root@@Base+0x3ec0>
   41a30:	b	41a68 <flatcc_json_parser_struct_as_root@@Base+0x3ee4>
   41a34:	b	41a50 <flatcc_json_parser_struct_as_root@@Base+0x3ecc>
   41a38:	b	41a5c <flatcc_json_parser_struct_as_root@@Base+0x3ed8>
   41a3c:	b	41a74 <flatcc_json_parser_struct_as_root@@Base+0x3ef0>
   41a40:	b	41a80 <flatcc_json_parser_struct_as_root@@Base+0x3efc>
   41a44:	ldr	r3, [pc, #88]	; 41aa4 <flatcc_json_parser_struct_as_root@@Base+0x3f20>
   41a48:	add	r3, pc, r3
   41a4c:	b	41a94 <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   41a50:	ldr	r3, [pc, #80]	; 41aa8 <flatcc_json_parser_struct_as_root@@Base+0x3f24>
   41a54:	add	r3, pc, r3
   41a58:	b	41a94 <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   41a5c:	ldr	r3, [pc, #72]	; 41aac <flatcc_json_parser_struct_as_root@@Base+0x3f28>
   41a60:	add	r3, pc, r3
   41a64:	b	41a94 <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   41a68:	ldr	r3, [pc, #64]	; 41ab0 <flatcc_json_parser_struct_as_root@@Base+0x3f2c>
   41a6c:	add	r3, pc, r3
   41a70:	b	41a94 <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   41a74:	ldr	r3, [pc, #56]	; 41ab4 <flatcc_json_parser_struct_as_root@@Base+0x3f30>
   41a78:	add	r3, pc, r3
   41a7c:	b	41a94 <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   41a80:	ldr	r3, [pc, #48]	; 41ab8 <flatcc_json_parser_struct_as_root@@Base+0x3f34>
   41a84:	add	r3, pc, r3
   41a88:	b	41a94 <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   41a8c:	ldr	r3, [pc, #40]	; 41abc <flatcc_json_parser_struct_as_root@@Base+0x3f38>
   41a90:	add	r3, pc, r3
   41a94:	mov	r0, r3
   41a98:	add	sp, fp, #0
   41a9c:	pop	{fp}		; (ldr fp, [sp], #4)
   41aa0:	bx	lr
   41aa4:	andeq	r1, r1, r0, ror r3
   41aa8:	andeq	r1, r1, r8, ror #6
   41aac:	andeq	r1, r1, r0, ror r3
   41ab0:	andeq	r1, r1, r4, ror r3
   41ab4:	andeq	r1, r1, ip, ror r3
   41ab8:	andeq	r1, r1, r4, lsl #7
   41abc:	muleq	r1, r0, r3
   41ac0:	push	{fp}		; (str fp, [sp, #-4]!)
   41ac4:	add	fp, sp, #0
   41ac8:	sub	sp, sp, #28
   41acc:	str	r0, [fp, #-24]	; 0xffffffe8
   41ad0:	str	r1, [fp, #-28]	; 0xffffffe4
   41ad4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41ad8:	ldr	r3, [pc, #156]	; 41b7c <flatcc_json_parser_struct_as_root@@Base+0x3ff8>
   41adc:	umull	r1, r3, r3, r2
   41ae0:	lsr	r1, r3, #1
   41ae4:	mov	r3, r1
   41ae8:	lsl	r3, r3, #1
   41aec:	add	r3, r3, r1
   41af0:	sub	r3, r2, r3
   41af4:	str	r3, [fp, #-12]
   41af8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41afc:	lsl	r3, r3, #2
   41b00:	ldr	r2, [pc, #116]	; 41b7c <flatcc_json_parser_struct_as_root@@Base+0x3ff8>
   41b04:	umull	r2, r3, r2, r3
   41b08:	lsr	r3, r3, #1
   41b0c:	add	r3, r3, #3
   41b10:	bic	r3, r3, #3
   41b14:	str	r3, [fp, #-8]
   41b18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   41b1c:	and	r3, r3, #128	; 0x80
   41b20:	str	r3, [fp, #-16]
   41b24:	ldr	r3, [fp, #-16]
   41b28:	cmp	r3, #0
   41b2c:	bne	41b68 <flatcc_json_parser_struct_as_root@@Base+0x3fe4>
   41b30:	ldr	r3, [fp, #-12]
   41b34:	cmp	r3, #1
   41b38:	beq	41b58 <flatcc_json_parser_struct_as_root@@Base+0x3fd4>
   41b3c:	cmp	r3, #2
   41b40:	beq	41b48 <flatcc_json_parser_struct_as_root@@Base+0x3fc4>
   41b44:	b	41b68 <flatcc_json_parser_struct_as_root@@Base+0x3fe4>
   41b48:	ldr	r3, [fp, #-8]
   41b4c:	sub	r3, r3, #1
   41b50:	str	r3, [fp, #-8]
   41b54:	b	41b68 <flatcc_json_parser_struct_as_root@@Base+0x3fe4>
   41b58:	ldr	r3, [fp, #-8]
   41b5c:	sub	r3, r3, #2
   41b60:	str	r3, [fp, #-8]
   41b64:	nop			; (mov r0, r0)
   41b68:	ldr	r3, [fp, #-8]
   41b6c:	mov	r0, r3
   41b70:	add	sp, fp, #0
   41b74:	pop	{fp}		; (ldr fp, [sp], #4)
   41b78:	bx	lr
   41b7c:	bge	feaec630 <__bss_end__@@Base+0xfea88184>
   41b80:	push	{fp}		; (str fp, [sp, #-4]!)
   41b84:	add	fp, sp, #0
   41b88:	sub	sp, sp, #20
   41b8c:	str	r0, [fp, #-16]
   41b90:	ldr	r3, [fp, #-16]
   41b94:	and	r3, r3, #3
   41b98:	str	r3, [fp, #-8]
   41b9c:	ldr	r3, [fp, #-16]
   41ba0:	lsr	r2, r3, #2
   41ba4:	mov	r3, r2
   41ba8:	lsl	r3, r3, #1
   41bac:	add	r3, r3, r2
   41bb0:	str	r3, [fp, #-12]
   41bb4:	ldr	r3, [fp, #-8]
   41bb8:	cmp	r3, #2
   41bbc:	beq	41bd4 <flatcc_json_parser_struct_as_root@@Base+0x4050>
   41bc0:	cmp	r3, #3
   41bc4:	bne	41be0 <flatcc_json_parser_struct_as_root@@Base+0x405c>
   41bc8:	ldr	r3, [fp, #-12]
   41bcc:	add	r3, r3, #2
   41bd0:	b	41be4 <flatcc_json_parser_struct_as_root@@Base+0x4060>
   41bd4:	ldr	r3, [fp, #-12]
   41bd8:	add	r3, r3, #1
   41bdc:	b	41be4 <flatcc_json_parser_struct_as_root@@Base+0x4060>
   41be0:	ldr	r3, [fp, #-12]
   41be4:	mov	r0, r3
   41be8:	add	sp, fp, #0
   41bec:	pop	{fp}		; (ldr fp, [sp], #4)
   41bf0:	bx	lr
   41bf4:	push	{fp}		; (str fp, [sp, #-4]!)
   41bf8:	add	fp, sp, #0
   41bfc:	sub	sp, sp, #52	; 0x34
   41c00:	str	r0, [fp, #-40]	; 0xffffffd8
   41c04:	str	r1, [fp, #-44]	; 0xffffffd4
   41c08:	str	r2, [fp, #-48]	; 0xffffffd0
   41c0c:	str	r3, [fp, #-52]	; 0xffffffcc
   41c10:	ldr	r3, [pc, #920]	; 41fb0 <flatcc_json_parser_struct_as_root@@Base+0x442c>
   41c14:	add	r3, pc, r3
   41c18:	str	r3, [fp, #-20]	; 0xffffffec
   41c1c:	ldr	r3, [pc, #912]	; 41fb4 <flatcc_json_parser_struct_as_root@@Base+0x4430>
   41c20:	add	r3, pc, r3
   41c24:	str	r3, [fp, #-24]	; 0xffffffe8
   41c28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41c2c:	str	r3, [fp, #-28]	; 0xffffffe4
   41c30:	ldr	r3, [fp, #4]
   41c34:	and	r3, r3, #128	; 0x80
   41c38:	str	r3, [fp, #-32]	; 0xffffffe0
   41c3c:	mov	r3, #0
   41c40:	str	r3, [fp, #-12]
   41c44:	mov	r3, #3
   41c48:	str	r3, [fp, #-16]
   41c4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41c50:	cmp	r3, #0
   41c54:	bne	41c64 <flatcc_json_parser_struct_as_root@@Base+0x40e0>
   41c58:	mov	r3, #2
   41c5c:	str	r3, [fp, #-16]
   41c60:	b	41f54 <flatcc_json_parser_struct_as_root@@Base+0x43d0>
   41c64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41c68:	ldr	r3, [r3]
   41c6c:	str	r3, [fp, #-12]
   41c70:	ldr	r3, [fp, #4]
   41c74:	bic	r3, r3, #224	; 0xe0
   41c78:	str	r3, [fp, #4]
   41c7c:	ldr	r3, [fp, #4]
   41c80:	cmp	r3, #0
   41c84:	beq	41c94 <flatcc_json_parser_struct_as_root@@Base+0x4110>
   41c88:	cmp	r3, #1
   41c8c:	beq	41ca0 <flatcc_json_parser_struct_as_root@@Base+0x411c>
   41c90:	b	41f54 <flatcc_json_parser_struct_as_root@@Base+0x43d0>
   41c94:	ldr	r3, [fp, #-20]	; 0xffffffec
   41c98:	str	r3, [fp, #-8]
   41c9c:	b	41cac <flatcc_json_parser_struct_as_root@@Base+0x4128>
   41ca0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41ca4:	str	r3, [fp, #-8]
   41ca8:	nop			; (mov r0, r0)
   41cac:	mov	r3, #0
   41cb0:	str	r3, [fp, #-16]
   41cb4:	b	41db8 <flatcc_json_parser_struct_as_root@@Base+0x4234>
   41cb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41cbc:	ldrb	r3, [r3]
   41cc0:	lsr	r3, r3, #2
   41cc4:	uxtb	r3, r3
   41cc8:	mov	r2, r3
   41ccc:	ldr	r3, [fp, #-8]
   41cd0:	add	r3, r3, r2
   41cd4:	ldrb	r2, [r3]
   41cd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41cdc:	strb	r2, [r3]
   41ce0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41ce4:	add	r3, r3, #1
   41ce8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41cec:	ldrb	r2, [r2]
   41cf0:	lsl	r2, r2, #4
   41cf4:	and	r2, r2, #48	; 0x30
   41cf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41cfc:	add	r1, r1, #1
   41d00:	ldrb	r1, [r1]
   41d04:	lsr	r1, r1, #4
   41d08:	uxtb	r1, r1
   41d0c:	orr	r2, r2, r1
   41d10:	mov	r1, r2
   41d14:	ldr	r2, [fp, #-8]
   41d18:	add	r2, r2, r1
   41d1c:	ldrb	r2, [r2]
   41d20:	strb	r2, [r3]
   41d24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41d28:	add	r3, r3, #2
   41d2c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41d30:	add	r2, r2, #1
   41d34:	ldrb	r2, [r2]
   41d38:	lsl	r2, r2, #2
   41d3c:	and	r2, r2, #60	; 0x3c
   41d40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41d44:	add	r1, r1, #2
   41d48:	ldrb	r1, [r1]
   41d4c:	lsr	r1, r1, #6
   41d50:	uxtb	r1, r1
   41d54:	orr	r2, r2, r1
   41d58:	mov	r1, r2
   41d5c:	ldr	r2, [fp, #-8]
   41d60:	add	r2, r2, r1
   41d64:	ldrb	r2, [r2]
   41d68:	strb	r2, [r3]
   41d6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41d70:	add	r3, r3, #3
   41d74:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41d78:	add	r2, r2, #2
   41d7c:	ldrb	r2, [r2]
   41d80:	and	r2, r2, #63	; 0x3f
   41d84:	ldr	r1, [fp, #-8]
   41d88:	add	r2, r1, r2
   41d8c:	ldrb	r2, [r2]
   41d90:	strb	r2, [r3]
   41d94:	ldr	r3, [fp, #-12]
   41d98:	sub	r3, r3, #3
   41d9c:	str	r3, [fp, #-12]
   41da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41da4:	add	r3, r3, #4
   41da8:	str	r3, [fp, #-40]	; 0xffffffd8
   41dac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41db0:	add	r3, r3, #3
   41db4:	str	r3, [fp, #-44]	; 0xffffffd4
   41db8:	ldr	r3, [fp, #-12]
   41dbc:	cmp	r3, #2
   41dc0:	bhi	41cb8 <flatcc_json_parser_struct_as_root@@Base+0x4134>
   41dc4:	ldr	r3, [fp, #-12]
   41dc8:	cmp	r3, #1
   41dcc:	beq	41ea0 <flatcc_json_parser_struct_as_root@@Base+0x431c>
   41dd0:	cmp	r3, #2
   41dd4:	bne	41f34 <flatcc_json_parser_struct_as_root@@Base+0x43b0>
   41dd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41ddc:	ldrb	r3, [r3]
   41de0:	lsr	r3, r3, #2
   41de4:	uxtb	r3, r3
   41de8:	mov	r2, r3
   41dec:	ldr	r3, [fp, #-8]
   41df0:	add	r3, r3, r2
   41df4:	ldrb	r2, [r3]
   41df8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41dfc:	strb	r2, [r3]
   41e00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41e04:	add	r3, r3, #1
   41e08:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41e0c:	ldrb	r2, [r2]
   41e10:	lsl	r2, r2, #4
   41e14:	and	r2, r2, #48	; 0x30
   41e18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41e1c:	add	r1, r1, #1
   41e20:	ldrb	r1, [r1]
   41e24:	lsr	r1, r1, #4
   41e28:	uxtb	r1, r1
   41e2c:	orr	r2, r2, r1
   41e30:	mov	r1, r2
   41e34:	ldr	r2, [fp, #-8]
   41e38:	add	r2, r2, r1
   41e3c:	ldrb	r2, [r2]
   41e40:	strb	r2, [r3]
   41e44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41e48:	add	r3, r3, #2
   41e4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41e50:	add	r2, r2, #1
   41e54:	ldrb	r2, [r2]
   41e58:	lsl	r2, r2, #2
   41e5c:	and	r2, r2, #60	; 0x3c
   41e60:	ldr	r1, [fp, #-8]
   41e64:	add	r2, r1, r2
   41e68:	ldrb	r2, [r2]
   41e6c:	strb	r2, [r3]
   41e70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41e74:	add	r3, r3, #3
   41e78:	str	r3, [fp, #-40]	; 0xffffffd8
   41e7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41e80:	cmp	r3, #0
   41e84:	beq	41f40 <flatcc_json_parser_struct_as_root@@Base+0x43bc>
   41e88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41e8c:	add	r2, r3, #1
   41e90:	str	r2, [fp, #-40]	; 0xffffffd8
   41e94:	mov	r2, #61	; 0x3d
   41e98:	strb	r2, [r3]
   41e9c:	b	41f40 <flatcc_json_parser_struct_as_root@@Base+0x43bc>
   41ea0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41ea4:	ldrb	r3, [r3]
   41ea8:	lsr	r3, r3, #2
   41eac:	uxtb	r3, r3
   41eb0:	mov	r2, r3
   41eb4:	ldr	r3, [fp, #-8]
   41eb8:	add	r3, r3, r2
   41ebc:	ldrb	r2, [r3]
   41ec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41ec4:	strb	r2, [r3]
   41ec8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41ecc:	add	r3, r3, #1
   41ed0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41ed4:	ldrb	r2, [r2]
   41ed8:	lsl	r2, r2, #4
   41edc:	and	r2, r2, #48	; 0x30
   41ee0:	ldr	r1, [fp, #-8]
   41ee4:	add	r2, r1, r2
   41ee8:	ldrb	r2, [r2]
   41eec:	strb	r2, [r3]
   41ef0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41ef4:	add	r3, r3, #2
   41ef8:	str	r3, [fp, #-40]	; 0xffffffd8
   41efc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41f00:	cmp	r3, #0
   41f04:	beq	41f48 <flatcc_json_parser_struct_as_root@@Base+0x43c4>
   41f08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41f0c:	add	r2, r3, #1
   41f10:	str	r2, [fp, #-40]	; 0xffffffd8
   41f14:	mov	r2, #61	; 0x3d
   41f18:	strb	r2, [r3]
   41f1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41f20:	add	r2, r3, #1
   41f24:	str	r2, [fp, #-40]	; 0xffffffd8
   41f28:	mov	r2, #61	; 0x3d
   41f2c:	strb	r2, [r3]
   41f30:	b	41f48 <flatcc_json_parser_struct_as_root@@Base+0x43c4>
   41f34:	mov	r3, #0
   41f38:	str	r3, [fp, #-32]	; 0xffffffe0
   41f3c:	b	41f4c <flatcc_json_parser_struct_as_root@@Base+0x43c8>
   41f40:	nop			; (mov r0, r0)
   41f44:	b	41f4c <flatcc_json_parser_struct_as_root@@Base+0x43c8>
   41f48:	nop			; (mov r0, r0)
   41f4c:	mov	r3, #0
   41f50:	str	r3, [fp, #-12]
   41f54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41f58:	cmp	r3, #0
   41f5c:	beq	41f78 <flatcc_json_parser_struct_as_root@@Base+0x43f4>
   41f60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   41f64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   41f68:	sub	r3, r2, r3
   41f6c:	mov	r2, r3
   41f70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41f74:	str	r2, [r3]
   41f78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41f7c:	cmp	r3, #0
   41f80:	beq	41f9c <flatcc_json_parser_struct_as_root@@Base+0x4418>
   41f84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41f88:	ldr	r2, [r3]
   41f8c:	ldr	r3, [fp, #-12]
   41f90:	sub	r2, r2, r3
   41f94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   41f98:	str	r2, [r3]
   41f9c:	ldr	r3, [fp, #-16]
   41fa0:	mov	r0, r3
   41fa4:	add	sp, fp, #0
   41fa8:	pop	{fp}		; (ldr fp, [sp], #4)
   41fac:	bx	lr
   41fb0:	andeq	r1, r1, ip, lsl r2
   41fb4:	andeq	r1, r1, r4, asr r2
   41fb8:	push	{fp}		; (str fp, [sp, #-4]!)
   41fbc:	add	fp, sp, #0
   41fc0:	sub	sp, sp, #60	; 0x3c
   41fc4:	str	r0, [fp, #-48]	; 0xffffffd0
   41fc8:	str	r1, [fp, #-52]	; 0xffffffcc
   41fcc:	str	r2, [fp, #-56]	; 0xffffffc8
   41fd0:	str	r3, [fp, #-60]	; 0xffffffc4
   41fd4:	mov	r3, #0
   41fd8:	str	r3, [fp, #-8]
   41fdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41fe0:	str	r3, [fp, #-36]	; 0xffffffdc
   41fe4:	mvn	r3, #0
   41fe8:	str	r3, [fp, #-20]	; 0xffffffec
   41fec:	mvn	r3, #0
   41ff0:	str	r3, [fp, #-24]	; 0xffffffe8
   41ff4:	ldr	r3, [pc, #1376]	; 4255c <flatcc_json_parser_struct_as_root@@Base+0x49d8>
   41ff8:	add	r3, pc, r3
   41ffc:	str	r3, [fp, #-32]	; 0xffffffe0
   42000:	ldr	r3, [fp, #4]
   42004:	and	r3, r3, #32
   42008:	str	r3, [fp, #-40]	; 0xffffffd8
   4200c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   42010:	cmp	r3, #0
   42014:	beq	42024 <flatcc_json_parser_struct_as_root@@Base+0x44a0>
   42018:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4201c:	ldr	r3, [r3]
   42020:	str	r3, [fp, #-24]	; 0xffffffe8
   42024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42028:	str	r3, [fp, #-28]	; 0xffffffe4
   4202c:	ldr	r3, [fp, #4]
   42030:	bic	r3, r3, #224	; 0xe0
   42034:	str	r3, [fp, #4]
   42038:	ldr	r3, [fp, #4]
   4203c:	cmp	r3, #0
   42040:	beq	42050 <flatcc_json_parser_struct_as_root@@Base+0x44cc>
   42044:	cmp	r3, #1
   42048:	beq	42078 <flatcc_json_parser_struct_as_root@@Base+0x44f4>
   4204c:	b	420a0 <flatcc_json_parser_struct_as_root@@Base+0x451c>
   42050:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42054:	cmp	r3, #0
   42058:	beq	42068 <flatcc_json_parser_struct_as_root@@Base+0x44e4>
   4205c:	ldr	r3, [pc, #1276]	; 42560 <flatcc_json_parser_struct_as_root@@Base+0x49dc>
   42060:	add	r3, pc, r3
   42064:	b	42070 <flatcc_json_parser_struct_as_root@@Base+0x44ec>
   42068:	ldr	r3, [pc, #1268]	; 42564 <flatcc_json_parser_struct_as_root@@Base+0x49e0>
   4206c:	add	r3, pc, r3
   42070:	str	r3, [fp, #-32]	; 0xffffffe0
   42074:	b	420ac <flatcc_json_parser_struct_as_root@@Base+0x4528>
   42078:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4207c:	cmp	r3, #0
   42080:	beq	42090 <flatcc_json_parser_struct_as_root@@Base+0x450c>
   42084:	ldr	r3, [pc, #1244]	; 42568 <flatcc_json_parser_struct_as_root@@Base+0x49e4>
   42088:	add	r3, pc, r3
   4208c:	b	42098 <flatcc_json_parser_struct_as_root@@Base+0x4514>
   42090:	ldr	r3, [pc, #1236]	; 4256c <flatcc_json_parser_struct_as_root@@Base+0x49e8>
   42094:	add	r3, pc, r3
   42098:	str	r3, [fp, #-32]	; 0xffffffe0
   4209c:	b	420ac <flatcc_json_parser_struct_as_root@@Base+0x4528>
   420a0:	mov	r3, #3
   420a4:	str	r3, [fp, #-8]
   420a8:	b	42394 <flatcc_json_parser_struct_as_root@@Base+0x4810>
   420ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   420b0:	cmp	r3, #0
   420b4:	beq	42388 <flatcc_json_parser_struct_as_root@@Base+0x4804>
   420b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   420bc:	ldr	r3, [r3]
   420c0:	cmp	r3, #0
   420c4:	beq	42388 <flatcc_json_parser_struct_as_root@@Base+0x4804>
   420c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   420cc:	ldr	r3, [r3]
   420d0:	str	r3, [fp, #-20]	; 0xffffffec
   420d4:	b	42388 <flatcc_json_parser_struct_as_root@@Base+0x4804>
   420d8:	mov	r3, #0
   420dc:	str	r3, [fp, #-12]
   420e0:	b	422a8 <flatcc_json_parser_struct_as_root@@Base+0x4724>
   420e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   420e8:	ldr	r3, [fp, #-12]
   420ec:	cmp	r2, r3
   420f0:	bne	42110 <flatcc_json_parser_struct_as_root@@Base+0x458c>
   420f4:	ldr	r3, [fp, #-12]
   420f8:	str	r3, [fp, #-16]
   420fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42100:	ldr	r3, [fp, #-12]
   42104:	sub	r3, r2, r3
   42108:	str	r3, [fp, #-24]	; 0xffffffe8
   4210c:	b	423e4 <flatcc_json_parser_struct_as_root@@Base+0x4860>
   42110:	ldr	r2, [fp, #-52]	; 0xffffffcc
   42114:	ldr	r3, [fp, #-12]
   42118:	add	r3, r2, r3
   4211c:	ldrb	r3, [r3]
   42120:	mov	r2, r3
   42124:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42128:	add	r3, r3, r2
   4212c:	ldrb	r1, [r3]
   42130:	sub	r2, fp, #44	; 0x2c
   42134:	ldr	r3, [fp, #-12]
   42138:	add	r3, r2, r3
   4213c:	mov	r2, r1
   42140:	strb	r2, [r3]
   42144:	sub	r2, fp, #44	; 0x2c
   42148:	ldr	r3, [fp, #-12]
   4214c:	add	r3, r2, r3
   42150:	ldrb	r2, [r3]
   42154:	ldr	r3, [pc, #1044]	; 42570 <flatcc_json_parser_struct_as_root@@Base+0x49ec>
   42158:	add	r3, pc, r3
   4215c:	ldrb	r3, [r3]
   42160:	cmp	r2, r3
   42164:	bcc	4229c <flatcc_json_parser_struct_as_root@@Base+0x4718>
   42168:	sub	r2, fp, #44	; 0x2c
   4216c:	ldr	r3, [fp, #-12]
   42170:	add	r3, r2, r3
   42174:	ldrb	r2, [r3]
   42178:	ldr	r3, [pc, #1012]	; 42574 <flatcc_json_parser_struct_as_root@@Base+0x49f0>
   4217c:	add	r3, pc, r3
   42180:	ldrb	r3, [r3]
   42184:	cmp	r2, r3
   42188:	bne	421b4 <flatcc_json_parser_struct_as_root@@Base+0x4630>
   4218c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42190:	add	r3, r3, #1
   42194:	str	r3, [fp, #-52]	; 0xffffffcc
   42198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4219c:	sub	r3, r3, #1
   421a0:	str	r3, [fp, #-24]	; 0xffffffe8
   421a4:	ldr	r3, [fp, #-12]
   421a8:	sub	r3, r3, #1
   421ac:	str	r3, [fp, #-12]
   421b0:	b	4229c <flatcc_json_parser_struct_as_root@@Base+0x4718>
   421b4:	ldr	r3, [fp, #-12]
   421b8:	str	r3, [fp, #-16]
   421bc:	sub	r2, fp, #44	; 0x2c
   421c0:	ldr	r3, [fp, #-12]
   421c4:	add	r3, r2, r3
   421c8:	ldrb	r2, [r3]
   421cc:	ldr	r3, [pc, #932]	; 42578 <flatcc_json_parser_struct_as_root@@Base+0x49f4>
   421d0:	add	r3, pc, r3
   421d4:	ldrb	r3, [r3]
   421d8:	cmp	r2, r3
   421dc:	bne	42288 <flatcc_json_parser_struct_as_root@@Base+0x4704>
   421e0:	ldr	r3, [fp, #-12]
   421e4:	add	r3, r3, #1
   421e8:	str	r3, [fp, #-12]
   421ec:	b	42264 <flatcc_json_parser_struct_as_root@@Base+0x46e0>
   421f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   421f4:	ldr	r3, [fp, #-12]
   421f8:	add	r3, r2, r3
   421fc:	ldrb	r3, [r3]
   42200:	mov	r2, r3
   42204:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42208:	add	r3, r3, r2
   4220c:	ldrb	r2, [r3]
   42210:	ldr	r3, [pc, #868]	; 4257c <flatcc_json_parser_struct_as_root@@Base+0x49f8>
   42214:	add	r3, pc, r3
   42218:	ldrb	r3, [r3]
   4221c:	cmp	r2, r3
   42220:	beq	42258 <flatcc_json_parser_struct_as_root@@Base+0x46d4>
   42224:	ldr	r2, [fp, #-52]	; 0xffffffcc
   42228:	ldr	r3, [fp, #-12]
   4222c:	add	r3, r2, r3
   42230:	ldrb	r3, [r3]
   42234:	mov	r2, r3
   42238:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4223c:	add	r3, r3, r2
   42240:	ldrb	r2, [r3]
   42244:	ldr	r3, [pc, #820]	; 42580 <flatcc_json_parser_struct_as_root@@Base+0x49fc>
   42248:	add	r3, pc, r3
   4224c:	ldrb	r3, [r3]
   42250:	cmp	r2, r3
   42254:	bne	42284 <flatcc_json_parser_struct_as_root@@Base+0x4700>
   42258:	ldr	r3, [fp, #-12]
   4225c:	add	r3, r3, #1
   42260:	str	r3, [fp, #-12]
   42264:	ldr	r2, [fp, #-12]
   42268:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4226c:	cmp	r2, r3
   42270:	bcs	42288 <flatcc_json_parser_struct_as_root@@Base+0x4704>
   42274:	ldr	r3, [fp, #-12]
   42278:	cmp	r3, #7
   4227c:	bls	421f0 <flatcc_json_parser_struct_as_root@@Base+0x466c>
   42280:	b	42288 <flatcc_json_parser_struct_as_root@@Base+0x4704>
   42284:	nop			; (mov r0, r0)
   42288:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4228c:	ldr	r3, [fp, #-12]
   42290:	sub	r3, r2, r3
   42294:	str	r3, [fp, #-24]	; 0xffffffe8
   42298:	b	423e4 <flatcc_json_parser_struct_as_root@@Base+0x4860>
   4229c:	ldr	r3, [fp, #-12]
   422a0:	add	r3, r3, #1
   422a4:	str	r3, [fp, #-12]
   422a8:	ldr	r3, [fp, #-12]
   422ac:	cmp	r3, #3
   422b0:	bls	420e4 <flatcc_json_parser_struct_as_root@@Base+0x4560>
   422b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   422b8:	cmp	r3, #2
   422bc:	bls	4252c <flatcc_json_parser_struct_as_root@@Base+0x49a8>
   422c0:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   422c4:	lsl	r3, r3, #2
   422c8:	sxtb	r2, r3
   422cc:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   422d0:	lsr	r3, r3, #4
   422d4:	uxtb	r3, r3
   422d8:	sxtb	r3, r3
   422dc:	orr	r3, r2, r3
   422e0:	sxtb	r3, r3
   422e4:	uxtb	r2, r3
   422e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   422ec:	strb	r2, [r3]
   422f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   422f4:	add	r3, r3, #1
   422f8:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   422fc:	lsl	r2, r2, #4
   42300:	sxtb	r1, r2
   42304:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   42308:	lsr	r2, r2, #2
   4230c:	uxtb	r2, r2
   42310:	sxtb	r2, r2
   42314:	orr	r2, r1, r2
   42318:	sxtb	r2, r2
   4231c:	uxtb	r2, r2
   42320:	strb	r2, [r3]
   42324:	ldr	r3, [fp, #-48]	; 0xffffffd0
   42328:	add	r3, r3, #2
   4232c:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   42330:	lsl	r2, r2, #6
   42334:	sxtb	r1, r2
   42338:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   4233c:	sxtb	r2, r2
   42340:	orr	r2, r1, r2
   42344:	sxtb	r2, r2
   42348:	uxtb	r2, r2
   4234c:	strb	r2, [r3]
   42350:	ldr	r3, [fp, #-48]	; 0xffffffd0
   42354:	add	r3, r3, #3
   42358:	str	r3, [fp, #-48]	; 0xffffffd0
   4235c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   42360:	add	r3, r3, #4
   42364:	str	r3, [fp, #-52]	; 0xffffffcc
   42368:	ldr	r3, [fp, #-20]	; 0xffffffec
   4236c:	sub	r3, r3, #3
   42370:	str	r3, [fp, #-20]	; 0xffffffec
   42374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42378:	sub	r3, r3, #4
   4237c:	str	r3, [fp, #-24]	; 0xffffffe8
   42380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42384:	str	r3, [fp, #-28]	; 0xffffffe4
   42388:	ldr	r3, [fp, #-20]	; 0xffffffec
   4238c:	cmp	r3, #0
   42390:	bne	420d8 <flatcc_json_parser_struct_as_root@@Base+0x4554>
   42394:	ldr	r3, [fp, #-56]	; 0xffffffc8
   42398:	cmp	r3, #0
   4239c:	beq	423b8 <flatcc_json_parser_struct_as_root@@Base+0x4834>
   423a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   423a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   423a8:	sub	r3, r2, r3
   423ac:	mov	r2, r3
   423b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   423b4:	str	r2, [r3]
   423b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   423bc:	cmp	r3, #0
   423c0:	beq	423dc <flatcc_json_parser_struct_as_root@@Base+0x4858>
   423c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   423c8:	ldr	r2, [r3]
   423cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   423d0:	sub	r2, r2, r3
   423d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   423d8:	str	r2, [r3]
   423dc:	ldr	r3, [fp, #-8]
   423e0:	b	4254c <flatcc_json_parser_struct_as_root@@Base+0x49c8>
   423e4:	ldr	r3, [fp, #-16]
   423e8:	cmp	r3, #2
   423ec:	beq	42404 <flatcc_json_parser_struct_as_root@@Base+0x4880>
   423f0:	cmp	r3, #3
   423f4:	beq	42464 <flatcc_json_parser_struct_as_root@@Base+0x48e0>
   423f8:	cmp	r3, #0
   423fc:	beq	42504 <flatcc_json_parser_struct_as_root@@Base+0x4980>
   42400:	b	424f8 <flatcc_json_parser_struct_as_root@@Base+0x4974>
   42404:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   42408:	lsl	r3, r3, #4
   4240c:	uxtb	r3, r3
   42410:	cmp	r3, #0
   42414:	bne	42514 <flatcc_json_parser_struct_as_root@@Base+0x4990>
   42418:	ldr	r3, [fp, #-20]	; 0xffffffec
   4241c:	cmp	r3, #0
   42420:	beq	42534 <flatcc_json_parser_struct_as_root@@Base+0x49b0>
   42424:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   42428:	lsl	r3, r3, #2
   4242c:	sxtb	r2, r3
   42430:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   42434:	lsr	r3, r3, #4
   42438:	uxtb	r3, r3
   4243c:	sxtb	r3, r3
   42440:	orr	r3, r2, r3
   42444:	sxtb	r3, r3
   42448:	uxtb	r2, r3
   4244c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   42450:	strb	r2, [r3]
   42454:	ldr	r3, [fp, #-48]	; 0xffffffd0
   42458:	add	r3, r3, #1
   4245c:	str	r3, [fp, #-48]	; 0xffffffd0
   42460:	b	42508 <flatcc_json_parser_struct_as_root@@Base+0x4984>
   42464:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   42468:	lsl	r3, r3, #6
   4246c:	uxtb	r3, r3
   42470:	cmp	r3, #0
   42474:	bne	4251c <flatcc_json_parser_struct_as_root@@Base+0x4998>
   42478:	ldr	r3, [fp, #-20]	; 0xffffffec
   4247c:	cmp	r3, #1
   42480:	bls	4253c <flatcc_json_parser_struct_as_root@@Base+0x49b8>
   42484:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   42488:	lsl	r3, r3, #2
   4248c:	sxtb	r2, r3
   42490:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   42494:	lsr	r3, r3, #4
   42498:	uxtb	r3, r3
   4249c:	sxtb	r3, r3
   424a0:	orr	r3, r2, r3
   424a4:	sxtb	r3, r3
   424a8:	uxtb	r2, r3
   424ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   424b0:	strb	r2, [r3]
   424b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   424b8:	add	r3, r3, #1
   424bc:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   424c0:	lsl	r2, r2, #4
   424c4:	sxtb	r1, r2
   424c8:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   424cc:	lsr	r2, r2, #2
   424d0:	uxtb	r2, r2
   424d4:	sxtb	r2, r2
   424d8:	orr	r2, r1, r2
   424dc:	sxtb	r2, r2
   424e0:	uxtb	r2, r2
   424e4:	strb	r2, [r3]
   424e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   424ec:	add	r3, r3, #2
   424f0:	str	r3, [fp, #-48]	; 0xffffffd0
   424f4:	b	42508 <flatcc_json_parser_struct_as_root@@Base+0x4984>
   424f8:	mov	r3, #4
   424fc:	str	r3, [fp, #-8]
   42500:	b	42394 <flatcc_json_parser_struct_as_root@@Base+0x4810>
   42504:	nop			; (mov r0, r0)
   42508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4250c:	str	r3, [fp, #-28]	; 0xffffffe4
   42510:	b	42394 <flatcc_json_parser_struct_as_root@@Base+0x4810>
   42514:	nop			; (mov r0, r0)
   42518:	b	42520 <flatcc_json_parser_struct_as_root@@Base+0x499c>
   4251c:	nop			; (mov r0, r0)
   42520:	mov	r3, #5
   42524:	str	r3, [fp, #-8]
   42528:	b	42394 <flatcc_json_parser_struct_as_root@@Base+0x4810>
   4252c:	nop			; (mov r0, r0)
   42530:	b	42540 <flatcc_json_parser_struct_as_root@@Base+0x49bc>
   42534:	nop			; (mov r0, r0)
   42538:	b	42540 <flatcc_json_parser_struct_as_root@@Base+0x49bc>
   4253c:	nop			; (mov r0, r0)
   42540:	mov	r3, #1
   42544:	str	r3, [fp, #-8]
   42548:	b	42394 <flatcc_json_parser_struct_as_root@@Base+0x4810>
   4254c:	mov	r0, r3
   42550:	add	sp, fp, #0
   42554:	pop	{fp}		; (ldr fp, [sp], #4)
   42558:	bx	lr
   4255c:	andeq	r1, r1, ip, ror r0
   42560:	andeq	r1, r1, r4, lsl r1
   42564:	andeq	r1, r1, r8
   42568:	andeq	r1, r1, ip, ror #3
   4256c:	andeq	r1, r1, r0, ror #5
   42570:	andeq	r1, r1, ip, lsl r3
   42574:	strdeq	r1, [r1], -r9
   42578:	andeq	r1, r1, r6, lsr #5
   4257c:	andeq	r1, r1, r2, ror #4
   42580:	andeq	r1, r1, sp, lsr #4

00042584 <flatcc_json_printer_error_string@@Base>:
   42584:	push	{fp}		; (str fp, [sp, #-4]!)
   42588:	add	fp, sp, #0
   4258c:	sub	sp, sp, #12
   42590:	str	r0, [fp, #-8]
   42594:	ldr	r3, [fp, #-8]
   42598:	cmp	r3, #3
   4259c:	addls	pc, pc, r3, lsl #2
   425a0:	b	425e4 <flatcc_json_printer_error_string@@Base+0x60>
   425a4:	b	425b4 <flatcc_json_printer_error_string@@Base+0x30>
   425a8:	b	425c0 <flatcc_json_printer_error_string@@Base+0x3c>
   425ac:	b	425cc <flatcc_json_printer_error_string@@Base+0x48>
   425b0:	b	425d8 <flatcc_json_printer_error_string@@Base+0x54>
   425b4:	ldr	r3, [pc, #64]	; 425fc <flatcc_json_printer_error_string@@Base+0x78>
   425b8:	add	r3, pc, r3
   425bc:	b	425ec <flatcc_json_printer_error_string@@Base+0x68>
   425c0:	ldr	r3, [pc, #56]	; 42600 <flatcc_json_printer_error_string@@Base+0x7c>
   425c4:	add	r3, pc, r3
   425c8:	b	425ec <flatcc_json_printer_error_string@@Base+0x68>
   425cc:	ldr	r3, [pc, #48]	; 42604 <flatcc_json_printer_error_string@@Base+0x80>
   425d0:	add	r3, pc, r3
   425d4:	b	425ec <flatcc_json_printer_error_string@@Base+0x68>
   425d8:	ldr	r3, [pc, #40]	; 42608 <flatcc_json_printer_error_string@@Base+0x84>
   425dc:	add	r3, pc, r3
   425e0:	b	425ec <flatcc_json_printer_error_string@@Base+0x68>
   425e4:	ldr	r3, [pc, #32]	; 4260c <flatcc_json_printer_error_string@@Base+0x88>
   425e8:	add	r3, pc, r3
   425ec:	mov	r0, r3
   425f0:	add	sp, fp, #0
   425f4:	pop	{fp}		; (ldr fp, [sp], #4)
   425f8:	bx	lr
   425fc:	andeq	r0, r1, r0, lsl #16
   42600:	strdeq	r0, [r1], -r4
   42604:	strdeq	r0, [r1], -r4
   42608:	strdeq	r0, [r1], -r8
   4260c:	strdeq	r0, [r1], -r8
   42610:	push	{fp, lr}
   42614:	add	fp, sp, #4
   42618:	sub	sp, sp, #8
   4261c:	str	r0, [fp, #-8]
   42620:	ldr	r0, [fp, #-8]
   42624:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   42628:	mov	r2, r0
   4262c:	ldr	r3, [fp, #-8]
   42630:	add	r3, r3, r2
   42634:	mov	r0, r3
   42638:	sub	sp, fp, #4
   4263c:	pop	{fp, pc}
   42640:	push	{fp, lr}
   42644:	add	fp, sp, #4
   42648:	sub	sp, sp, #8
   4264c:	str	r0, [fp, #-8]
   42650:	str	r1, [fp, #-12]
   42654:	ldr	r2, [fp, #-8]
   42658:	ldr	r3, [fp, #-12]
   4265c:	add	r3, r2, r3
   42660:	mov	r0, r3
   42664:	bl	3e170 <flatcc_json_parser_struct_as_root@@Base+0x5ec>
   42668:	mov	r3, r0
   4266c:	mov	r0, r3
   42670:	sub	sp, fp, #4
   42674:	pop	{fp, pc}
   42678:	push	{fp, lr}
   4267c:	add	fp, sp, #4
   42680:	sub	sp, sp, #16
   42684:	str	r0, [fp, #-16]
   42688:	str	r1, [fp, #-20]	; 0xffffffec
   4268c:	ldr	r3, [fp, #-20]	; 0xffffffec
   42690:	add	r3, r3, #2
   42694:	lsl	r3, r3, #1
   42698:	str	r3, [fp, #-8]
   4269c:	ldr	r3, [fp, #-16]
   426a0:	ldr	r2, [r3, #8]
   426a4:	ldr	r3, [fp, #-8]
   426a8:	cmp	r2, r3
   426ac:	bgt	426b8 <flatcc_json_printer_error_string@@Base+0x134>
   426b0:	mov	r3, #0
   426b4:	b	426fc <flatcc_json_printer_error_string@@Base+0x178>
   426b8:	ldr	r3, [fp, #-16]
   426bc:	ldr	r3, [r3, #4]
   426c0:	ldr	r2, [fp, #-8]
   426c4:	mov	r1, r2
   426c8:	mov	r0, r3
   426cc:	bl	42640 <flatcc_json_printer_error_string@@Base+0xbc>
   426d0:	mov	r3, r0
   426d4:	str	r3, [fp, #-8]
   426d8:	ldr	r3, [fp, #-8]
   426dc:	cmp	r3, #0
   426e0:	bne	426ec <flatcc_json_printer_error_string@@Base+0x168>
   426e4:	mov	r3, #0
   426e8:	b	426fc <flatcc_json_printer_error_string@@Base+0x178>
   426ec:	ldr	r3, [fp, #-16]
   426f0:	ldr	r2, [r3]
   426f4:	ldr	r3, [fp, #-8]
   426f8:	add	r3, r2, r3
   426fc:	mov	r0, r3
   42700:	sub	sp, fp, #4
   42704:	pop	{fp, pc}

00042708 <flatcc_json_printer_fmt_float@@Base>:
   42708:	push	{fp, lr}
   4270c:	add	fp, sp, #4
   42710:	sub	sp, sp, #8
   42714:	str	r0, [fp, #-8]
   42718:	vstr	s0, [fp, #-12]
   4271c:	vldr	s15, [fp, #-12]
   42720:	vcvt.f64.f32	d7, s15
   42724:	ldr	r0, [fp, #-8]
   42728:	vmov.f64	d0, d7
   4272c:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   42730:	mov	r3, r0
   42734:	mov	r0, r3
   42738:	sub	sp, fp, #4
   4273c:	pop	{fp, pc}

00042740 <flatcc_json_printer_fmt_double@@Base>:
   42740:	push	{fp, lr}
   42744:	add	fp, sp, #4
   42748:	sub	sp, sp, #16
   4274c:	str	r0, [fp, #-8]
   42750:	vstr	d0, [fp, #-20]	; 0xffffffec
   42754:	ldr	r0, [fp, #-8]
   42758:	vldr	d0, [fp, #-20]	; 0xffffffec
   4275c:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   42760:	mov	r3, r0
   42764:	mov	r0, r3
   42768:	sub	sp, fp, #4
   4276c:	pop	{fp, pc}

00042770 <flatcc_json_printer_fmt_bool@@Base>:
   42770:	push	{fp, lr}
   42774:	add	fp, sp, #4
   42778:	sub	sp, sp, #8
   4277c:	str	r0, [fp, #-8]
   42780:	str	r1, [fp, #-12]
   42784:	ldr	r3, [fp, #-12]
   42788:	cmp	r3, #0
   4278c:	beq	427b0 <flatcc_json_printer_fmt_bool@@Base+0x40>
   42790:	mov	r2, #4
   42794:	ldr	r3, [pc, #60]	; 427d8 <flatcc_json_printer_fmt_bool@@Base+0x68>
   42798:	add	r3, pc, r3
   4279c:	mov	r1, r3
   427a0:	ldr	r0, [fp, #-8]
   427a4:	bl	14544 <memcpy@plt>
   427a8:	mov	r3, #4
   427ac:	b	427cc <flatcc_json_printer_fmt_bool@@Base+0x5c>
   427b0:	mov	r2, #5
   427b4:	ldr	r3, [pc, #32]	; 427dc <flatcc_json_printer_fmt_bool@@Base+0x6c>
   427b8:	add	r3, pc, r3
   427bc:	mov	r1, r3
   427c0:	ldr	r0, [fp, #-8]
   427c4:	bl	14544 <memcpy@plt>
   427c8:	mov	r3, #5
   427cc:	mov	r0, r3
   427d0:	sub	sp, fp, #4
   427d4:	pop	{fp, pc}
   427d8:	andeq	r0, r1, r0, asr r7
   427dc:	andeq	r0, r1, r8, lsr r7
   427e0:	push	{fp, lr}
   427e4:	add	fp, sp, #4
   427e8:	sub	sp, sp, #24
   427ec:	str	r0, [fp, #-16]
   427f0:	str	r1, [fp, #-20]	; 0xffffffec
   427f4:	str	r2, [fp, #-24]	; 0xffffffe8
   427f8:	ldr	r3, [fp, #-16]
   427fc:	ldr	r2, [r3, #20]
   42800:	ldr	r3, [fp, #-16]
   42804:	ldr	r3, [r3, #16]
   42808:	cmp	r2, r3
   4280c:	bcc	42824 <flatcc_json_printer_fmt_bool@@Base+0xb4>
   42810:	ldr	r3, [fp, #-16]
   42814:	ldr	r3, [r3, #44]	; 0x2c
   42818:	mov	r1, #0
   4281c:	ldr	r0, [fp, #-16]
   42820:	blx	r3
   42824:	ldr	r3, [fp, #-16]
   42828:	ldr	r3, [r3, #16]
   4282c:	mov	r2, r3
   42830:	ldr	r3, [fp, #-16]
   42834:	ldr	r3, [r3, #20]
   42838:	sub	r3, r2, r3
   4283c:	str	r3, [fp, #-8]
   42840:	b	428c4 <flatcc_json_printer_fmt_bool@@Base+0x154>
   42844:	ldr	r3, [fp, #-16]
   42848:	ldr	r3, [r3, #20]
   4284c:	ldr	r2, [fp, #-8]
   42850:	ldr	r1, [fp, #-20]	; 0xffffffec
   42854:	mov	r0, r3
   42858:	bl	14544 <memcpy@plt>
   4285c:	ldr	r3, [fp, #-16]
   42860:	ldr	r2, [r3, #20]
   42864:	ldr	r3, [fp, #-8]
   42868:	add	r2, r2, r3
   4286c:	ldr	r3, [fp, #-16]
   42870:	str	r2, [r3, #20]
   42874:	ldr	r2, [fp, #-20]	; 0xffffffec
   42878:	ldr	r3, [fp, #-8]
   4287c:	add	r3, r2, r3
   42880:	str	r3, [fp, #-20]	; 0xffffffec
   42884:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42888:	ldr	r3, [fp, #-8]
   4288c:	sub	r3, r2, r3
   42890:	str	r3, [fp, #-24]	; 0xffffffe8
   42894:	ldr	r3, [fp, #-16]
   42898:	ldr	r3, [r3, #44]	; 0x2c
   4289c:	mov	r1, #0
   428a0:	ldr	r0, [fp, #-16]
   428a4:	blx	r3
   428a8:	ldr	r3, [fp, #-16]
   428ac:	ldr	r3, [r3, #16]
   428b0:	mov	r2, r3
   428b4:	ldr	r3, [fp, #-16]
   428b8:	ldr	r3, [r3, #20]
   428bc:	sub	r3, r2, r3
   428c0:	str	r3, [fp, #-8]
   428c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   428c8:	ldr	r3, [fp, #-8]
   428cc:	cmp	r2, r3
   428d0:	bhi	42844 <flatcc_json_printer_fmt_bool@@Base+0xd4>
   428d4:	ldr	r3, [fp, #-16]
   428d8:	ldr	r3, [r3, #20]
   428dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   428e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   428e4:	mov	r0, r3
   428e8:	bl	14544 <memcpy@plt>
   428ec:	ldr	r3, [fp, #-16]
   428f0:	ldr	r2, [r3, #20]
   428f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   428f8:	add	r2, r2, r3
   428fc:	ldr	r3, [fp, #-16]
   42900:	str	r2, [r3, #20]
   42904:	nop			; (mov r0, r0)
   42908:	sub	sp, fp, #4
   4290c:	pop	{fp, pc}
   42910:	push	{fp, lr}
   42914:	add	fp, sp, #4
   42918:	sub	sp, sp, #16
   4291c:	str	r0, [fp, #-8]
   42920:	str	r1, [fp, #-12]
   42924:	str	r2, [fp, #-16]
   42928:	ldr	r3, [fp, #-8]
   4292c:	ldr	r2, [r3, #20]
   42930:	ldr	r3, [fp, #-16]
   42934:	add	r2, r2, r3
   42938:	ldr	r3, [fp, #-8]
   4293c:	ldr	r3, [r3, #16]
   42940:	cmp	r2, r3
   42944:	bcc	4295c <flatcc_json_printer_fmt_bool@@Base+0x1ec>
   42948:	ldr	r2, [fp, #-16]
   4294c:	ldr	r1, [fp, #-12]
   42950:	ldr	r0, [fp, #-8]
   42954:	bl	427e0 <flatcc_json_printer_fmt_bool@@Base+0x70>
   42958:	b	4298c <flatcc_json_printer_fmt_bool@@Base+0x21c>
   4295c:	ldr	r3, [fp, #-8]
   42960:	ldr	r3, [r3, #20]
   42964:	ldr	r2, [fp, #-16]
   42968:	ldr	r1, [fp, #-12]
   4296c:	mov	r0, r3
   42970:	bl	14544 <memcpy@plt>
   42974:	ldr	r3, [fp, #-8]
   42978:	ldr	r2, [r3, #20]
   4297c:	ldr	r3, [fp, #-16]
   42980:	add	r2, r2, r3
   42984:	ldr	r3, [fp, #-8]
   42988:	str	r2, [r3, #20]
   4298c:	nop			; (mov r0, r0)
   42990:	sub	sp, fp, #4
   42994:	pop	{fp, pc}
   42998:	push	{fp, lr}
   4299c:	add	fp, sp, #4
   429a0:	sub	sp, sp, #32
   429a4:	str	r0, [fp, #-24]	; 0xffffffe8
   429a8:	str	r1, [fp, #-28]	; 0xffffffe4
   429ac:	str	r2, [fp, #-32]	; 0xffffffe0
   429b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   429b4:	str	r3, [fp, #-8]
   429b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   429bc:	ldr	r3, [r3, #20]
   429c0:	add	r1, r3, #1
   429c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   429c8:	str	r1, [r2, #20]
   429cc:	mov	r2, #34	; 0x22
   429d0:	strb	r2, [r3]
   429d4:	ldr	r3, [fp, #-8]
   429d8:	ldrb	r3, [r3]
   429dc:	strb	r3, [fp, #-9]
   429e0:	b	429fc <flatcc_json_printer_fmt_bool@@Base+0x28c>
   429e4:	ldr	r3, [fp, #-8]
   429e8:	add	r3, r3, #1
   429ec:	str	r3, [fp, #-8]
   429f0:	ldr	r3, [fp, #-8]
   429f4:	ldrb	r3, [r3]
   429f8:	strb	r3, [fp, #-9]
   429fc:	ldrb	r3, [fp, #-9]
   42a00:	cmp	r3, #31
   42a04:	bls	42a20 <flatcc_json_printer_fmt_bool@@Base+0x2b0>
   42a08:	ldrb	r3, [fp, #-9]
   42a0c:	cmp	r3, #34	; 0x22
   42a10:	beq	42a20 <flatcc_json_printer_fmt_bool@@Base+0x2b0>
   42a14:	ldrb	r3, [fp, #-9]
   42a18:	cmp	r3, #92	; 0x5c
   42a1c:	bne	429e4 <flatcc_json_printer_fmt_bool@@Base+0x274>
   42a20:	ldr	r2, [fp, #-8]
   42a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   42a28:	sub	r3, r2, r3
   42a2c:	str	r3, [fp, #-16]
   42a30:	ldr	r2, [fp, #-16]
   42a34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   42a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   42a3c:	bl	42910 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   42a40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   42a44:	ldr	r3, [fp, #-16]
   42a48:	sub	r3, r2, r3
   42a4c:	str	r3, [fp, #-32]	; 0xffffffe0
   42a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42a54:	cmp	r3, #0
   42a58:	beq	42ccc <flatcc_json_printer_fmt_bool@@Base+0x55c>
   42a5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   42a60:	ldr	r3, [fp, #-16]
   42a64:	add	r3, r2, r3
   42a68:	str	r3, [fp, #-28]	; 0xffffffe4
   42a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42a70:	ldr	r3, [r3, #20]
   42a74:	add	r1, r3, #1
   42a78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42a7c:	str	r1, [r2, #20]
   42a80:	mov	r2, #92	; 0x5c
   42a84:	strb	r2, [r3]
   42a88:	ldrb	r3, [fp, #-9]
   42a8c:	cmp	r3, #12
   42a90:	beq	42b34 <flatcc_json_printer_fmt_bool@@Base+0x3c4>
   42a94:	cmp	r3, #12
   42a98:	bgt	42ab8 <flatcc_json_printer_fmt_bool@@Base+0x348>
   42a9c:	cmp	r3, #9
   42aa0:	beq	42b14 <flatcc_json_printer_fmt_bool@@Base+0x3a4>
   42aa4:	cmp	r3, #10
   42aa8:	beq	42b74 <flatcc_json_printer_fmt_bool@@Base+0x404>
   42aac:	cmp	r3, #8
   42ab0:	beq	42b94 <flatcc_json_printer_fmt_bool@@Base+0x424>
   42ab4:	b	42bb4 <flatcc_json_printer_fmt_bool@@Base+0x444>
   42ab8:	cmp	r3, #34	; 0x22
   42abc:	beq	42ad4 <flatcc_json_printer_fmt_bool@@Base+0x364>
   42ac0:	cmp	r3, #92	; 0x5c
   42ac4:	beq	42af4 <flatcc_json_printer_fmt_bool@@Base+0x384>
   42ac8:	cmp	r3, #13
   42acc:	beq	42b54 <flatcc_json_printer_fmt_bool@@Base+0x3e4>
   42ad0:	b	42bb4 <flatcc_json_printer_fmt_bool@@Base+0x444>
   42ad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42ad8:	ldr	r3, [r3, #20]
   42adc:	add	r1, r3, #1
   42ae0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42ae4:	str	r1, [r2, #20]
   42ae8:	mov	r2, #34	; 0x22
   42aec:	strb	r2, [r3]
   42af0:	b	42ca4 <flatcc_json_printer_fmt_bool@@Base+0x534>
   42af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42af8:	ldr	r3, [r3, #20]
   42afc:	add	r1, r3, #1
   42b00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42b04:	str	r1, [r2, #20]
   42b08:	mov	r2, #92	; 0x5c
   42b0c:	strb	r2, [r3]
   42b10:	b	42ca4 <flatcc_json_printer_fmt_bool@@Base+0x534>
   42b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42b18:	ldr	r3, [r3, #20]
   42b1c:	add	r1, r3, #1
   42b20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42b24:	str	r1, [r2, #20]
   42b28:	mov	r2, #116	; 0x74
   42b2c:	strb	r2, [r3]
   42b30:	b	42ca4 <flatcc_json_printer_fmt_bool@@Base+0x534>
   42b34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42b38:	ldr	r3, [r3, #20]
   42b3c:	add	r1, r3, #1
   42b40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42b44:	str	r1, [r2, #20]
   42b48:	mov	r2, #102	; 0x66
   42b4c:	strb	r2, [r3]
   42b50:	b	42ca4 <flatcc_json_printer_fmt_bool@@Base+0x534>
   42b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42b58:	ldr	r3, [r3, #20]
   42b5c:	add	r1, r3, #1
   42b60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42b64:	str	r1, [r2, #20]
   42b68:	mov	r2, #114	; 0x72
   42b6c:	strb	r2, [r3]
   42b70:	b	42ca4 <flatcc_json_printer_fmt_bool@@Base+0x534>
   42b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42b78:	ldr	r3, [r3, #20]
   42b7c:	add	r1, r3, #1
   42b80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42b84:	str	r1, [r2, #20]
   42b88:	mov	r2, #110	; 0x6e
   42b8c:	strb	r2, [r3]
   42b90:	b	42ca4 <flatcc_json_printer_fmt_bool@@Base+0x534>
   42b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42b98:	ldr	r3, [r3, #20]
   42b9c:	add	r1, r3, #1
   42ba0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42ba4:	str	r1, [r2, #20]
   42ba8:	mov	r2, #98	; 0x62
   42bac:	strb	r2, [r3]
   42bb0:	b	42ca4 <flatcc_json_printer_fmt_bool@@Base+0x534>
   42bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42bb8:	ldr	r3, [r3, #20]
   42bbc:	add	r1, r3, #1
   42bc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42bc4:	str	r1, [r2, #20]
   42bc8:	mov	r2, #117	; 0x75
   42bcc:	strb	r2, [r3]
   42bd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42bd4:	ldr	r3, [r3, #20]
   42bd8:	add	r1, r3, #1
   42bdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42be0:	str	r1, [r2, #20]
   42be4:	mov	r2, #48	; 0x30
   42be8:	strb	r2, [r3]
   42bec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42bf0:	ldr	r3, [r3, #20]
   42bf4:	add	r1, r3, #1
   42bf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42bfc:	str	r1, [r2, #20]
   42c00:	mov	r2, #48	; 0x30
   42c04:	strb	r2, [r3]
   42c08:	ldrb	r3, [fp, #-9]
   42c0c:	lsr	r3, r3, #4
   42c10:	strb	r3, [fp, #-17]	; 0xffffffef
   42c14:	ldrb	r3, [fp, #-17]	; 0xffffffef
   42c18:	cmp	r3, #9
   42c1c:	bhi	42c28 <flatcc_json_printer_fmt_bool@@Base+0x4b8>
   42c20:	mov	r2, #48	; 0x30
   42c24:	b	42c2c <flatcc_json_printer_fmt_bool@@Base+0x4bc>
   42c28:	mov	r2, #87	; 0x57
   42c2c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   42c30:	add	r3, r2, r3
   42c34:	strb	r3, [fp, #-17]	; 0xffffffef
   42c38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42c3c:	ldr	r3, [r3, #20]
   42c40:	add	r1, r3, #1
   42c44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42c48:	str	r1, [r2, #20]
   42c4c:	ldrb	r2, [fp, #-17]	; 0xffffffef
   42c50:	strb	r2, [r3]
   42c54:	ldrb	r3, [fp, #-9]
   42c58:	and	r3, r3, #15
   42c5c:	strb	r3, [fp, #-17]	; 0xffffffef
   42c60:	ldrb	r3, [fp, #-17]	; 0xffffffef
   42c64:	cmp	r3, #9
   42c68:	bhi	42c74 <flatcc_json_printer_fmt_bool@@Base+0x504>
   42c6c:	mov	r2, #48	; 0x30
   42c70:	b	42c78 <flatcc_json_printer_fmt_bool@@Base+0x508>
   42c74:	mov	r2, #87	; 0x57
   42c78:	ldrb	r3, [fp, #-17]	; 0xffffffef
   42c7c:	add	r3, r2, r3
   42c80:	strb	r3, [fp, #-17]	; 0xffffffef
   42c84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42c88:	ldr	r3, [r3, #20]
   42c8c:	add	r1, r3, #1
   42c90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42c94:	str	r1, [r2, #20]
   42c98:	ldrb	r2, [fp, #-17]	; 0xffffffef
   42c9c:	strb	r2, [r3]
   42ca0:	nop			; (mov r0, r0)
   42ca4:	ldr	r3, [fp, #-8]
   42ca8:	add	r3, r3, #1
   42cac:	str	r3, [fp, #-8]
   42cb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42cb4:	sub	r3, r3, #1
   42cb8:	str	r3, [fp, #-32]	; 0xffffffe0
   42cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   42cc0:	add	r3, r3, #1
   42cc4:	str	r3, [fp, #-28]	; 0xffffffe4
   42cc8:	b	429d4 <flatcc_json_printer_fmt_bool@@Base+0x264>
   42ccc:	nop			; (mov r0, r0)
   42cd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42cd4:	ldr	r3, [r3, #20]
   42cd8:	add	r1, r3, #1
   42cdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   42ce0:	str	r1, [r2, #20]
   42ce4:	mov	r2, #34	; 0x22
   42ce8:	strb	r2, [r3]
   42cec:	nop			; (mov r0, r0)
   42cf0:	sub	sp, fp, #4
   42cf4:	pop	{fp, pc}
   42cf8:	push	{fp, lr}
   42cfc:	add	fp, sp, #4
   42d00:	sub	sp, sp, #56	; 0x38
   42d04:	str	r0, [fp, #-40]	; 0xffffffd8
   42d08:	str	r1, [fp, #-44]	; 0xffffffd4
   42d0c:	str	r2, [fp, #-48]	; 0xffffffd0
   42d10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   42d14:	bic	r3, r3, #128	; 0x80
   42d18:	str	r3, [fp, #-16]
   42d1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   42d20:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   42d24:	mov	r3, r0
   42d28:	str	r3, [fp, #-28]	; 0xffffffe4
   42d2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42d30:	add	r3, r3, #4
   42d34:	str	r3, [fp, #-12]
   42d38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42d3c:	ldr	r3, [r3, #20]
   42d40:	add	r1, r3, #1
   42d44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42d48:	str	r1, [r2, #20]
   42d4c:	mov	r2, #34	; 0x22
   42d50:	strb	r2, [r3]
   42d54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   42d58:	ldr	r1, [fp, #-48]	; 0xffffffd0
   42d5c:	mov	r0, r3
   42d60:	bl	41ac0 <flatcc_json_parser_struct_as_root@@Base+0x3f3c>
   42d64:	str	r0, [fp, #-8]
   42d68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42d6c:	ldr	r2, [r3, #20]
   42d70:	ldr	r3, [fp, #-8]
   42d74:	add	r2, r2, r3
   42d78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42d7c:	ldr	r3, [r3, #16]
   42d80:	cmp	r2, r3
   42d84:	bcc	42ea0 <flatcc_json_printer_fmt_bool@@Base+0x730>
   42d88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42d8c:	ldr	r3, [r3, #44]	; 0x2c
   42d90:	mov	r1, #0
   42d94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   42d98:	blx	r3
   42d9c:	b	42ea0 <flatcc_json_printer_fmt_bool@@Base+0x730>
   42da0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42da4:	ldr	r3, [r3, #16]
   42da8:	mov	r2, r3
   42dac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42db0:	ldr	r3, [r3, #20]
   42db4:	sub	r3, r2, r3
   42db8:	bic	r3, r3, #3
   42dbc:	str	r3, [fp, #-20]	; 0xffffffec
   42dc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   42dc4:	mov	r3, r2
   42dc8:	lsl	r3, r3, #1
   42dcc:	add	r3, r3, r2
   42dd0:	lsr	r3, r3, #2
   42dd4:	str	r3, [fp, #-24]	; 0xffffffe8
   42dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42ddc:	cmp	r3, #0
   42de0:	bne	42e04 <flatcc_json_printer_fmt_bool@@Base+0x694>
   42de4:	ldr	r3, [pc, #312]	; 42f24 <flatcc_json_printer_fmt_bool@@Base+0x7b4>
   42de8:	add	r3, pc, r3
   42dec:	ldr	r2, [pc, #308]	; 42f28 <flatcc_json_printer_fmt_bool@@Base+0x7b8>
   42df0:	ldr	r1, [pc, #308]	; 42f2c <flatcc_json_printer_fmt_bool@@Base+0x7bc>
   42df4:	add	r1, pc, r1
   42df8:	ldr	r0, [pc, #304]	; 42f30 <flatcc_json_printer_fmt_bool@@Base+0x7c0>
   42dfc:	add	r0, pc, r0
   42e00:	bl	14610 <__assert_fail@plt>
   42e04:	ldr	r2, [fp, #-20]	; 0xffffffec
   42e08:	mov	r3, r2
   42e0c:	lsl	r3, r3, #1
   42e10:	add	r3, r3, r2
   42e14:	lsr	r3, r3, #2
   42e18:	str	r3, [fp, #-32]	; 0xffffffe0
   42e1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42e20:	ldr	r0, [r3, #20]
   42e24:	sub	r2, fp, #32
   42e28:	ldr	r3, [fp, #-16]
   42e2c:	str	r3, [sp]
   42e30:	mov	r3, r2
   42e34:	mov	r2, #0
   42e38:	ldr	r1, [fp, #-12]
   42e3c:	bl	41bf4 <flatcc_json_parser_struct_as_root@@Base+0x4070>
   42e40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42e44:	ldr	r2, [r3, #20]
   42e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   42e4c:	add	r2, r2, r3
   42e50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42e54:	str	r2, [r3, #20]
   42e58:	ldr	r2, [fp, #-12]
   42e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42e60:	add	r3, r2, r3
   42e64:	str	r3, [fp, #-12]
   42e68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   42e6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42e70:	sub	r3, r2, r3
   42e74:	str	r3, [fp, #-28]	; 0xffffffe4
   42e78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42e7c:	ldr	r3, [r3, #44]	; 0x2c
   42e80:	mov	r1, #0
   42e84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   42e88:	blx	r3
   42e8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   42e90:	ldr	r1, [fp, #-48]	; 0xffffffd0
   42e94:	mov	r0, r3
   42e98:	bl	41ac0 <flatcc_json_parser_struct_as_root@@Base+0x3f3c>
   42e9c:	str	r0, [fp, #-8]
   42ea0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42ea4:	ldr	r2, [r3, #20]
   42ea8:	ldr	r3, [fp, #-8]
   42eac:	add	r2, r2, r3
   42eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42eb4:	ldr	r3, [r3, #16]
   42eb8:	cmp	r2, r3
   42ebc:	bhi	42da0 <flatcc_json_printer_fmt_bool@@Base+0x630>
   42ec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42ec4:	ldr	r0, [r3, #20]
   42ec8:	sub	r2, fp, #28
   42ecc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   42ed0:	str	r3, [sp]
   42ed4:	mov	r3, r2
   42ed8:	mov	r2, #0
   42edc:	ldr	r1, [fp, #-12]
   42ee0:	bl	41bf4 <flatcc_json_parser_struct_as_root@@Base+0x4070>
   42ee4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42ee8:	ldr	r2, [r3, #20]
   42eec:	ldr	r3, [fp, #-8]
   42ef0:	add	r2, r2, r3
   42ef4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42ef8:	str	r2, [r3, #20]
   42efc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42f00:	ldr	r3, [r3, #20]
   42f04:	add	r1, r3, #1
   42f08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42f0c:	str	r1, [r2, #20]
   42f10:	mov	r2, #34	; 0x22
   42f14:	strb	r2, [r3]
   42f18:	nop			; (mov r0, r0)
   42f1c:	sub	sp, fp, #4
   42f20:	pop	{fp, pc}
   42f24:	muleq	r1, r0, r6
   42f28:	andeq	r0, r0, r5, lsl r1
   42f2c:	andeq	r0, r1, r4, lsl #2
   42f30:	andeq	r0, r1, r0, ror #2
   42f34:	push	{fp, lr}
   42f38:	add	fp, sp, #4
   42f3c:	sub	sp, sp, #16
   42f40:	str	r0, [fp, #-16]
   42f44:	str	r1, [fp, #-20]	; 0xffffffec
   42f48:	ldr	r3, [fp, #-16]
   42f4c:	ldr	r2, [r3, #20]
   42f50:	ldr	r3, [fp, #-16]
   42f54:	ldr	r3, [r3, #16]
   42f58:	cmp	r2, r3
   42f5c:	bcc	42f74 <flatcc_json_printer_fmt_bool@@Base+0x804>
   42f60:	ldr	r3, [fp, #-16]
   42f64:	ldr	r3, [r3, #44]	; 0x2c
   42f68:	mov	r1, #0
   42f6c:	ldr	r0, [fp, #-16]
   42f70:	blx	r3
   42f74:	ldr	r3, [fp, #-16]
   42f78:	ldr	r3, [r3, #16]
   42f7c:	mov	r2, r3
   42f80:	ldr	r3, [fp, #-16]
   42f84:	ldr	r3, [r3, #20]
   42f88:	sub	r3, r2, r3
   42f8c:	str	r3, [fp, #-8]
   42f90:	b	43004 <flatcc_json_printer_fmt_bool@@Base+0x894>
   42f94:	ldr	r3, [fp, #-16]
   42f98:	ldr	r3, [r3, #20]
   42f9c:	ldr	r2, [fp, #-8]
   42fa0:	mov	r1, #32
   42fa4:	mov	r0, r3
   42fa8:	bl	145bc <memset@plt>
   42fac:	ldr	r3, [fp, #-16]
   42fb0:	ldr	r2, [r3, #20]
   42fb4:	ldr	r3, [fp, #-8]
   42fb8:	add	r2, r2, r3
   42fbc:	ldr	r3, [fp, #-16]
   42fc0:	str	r2, [r3, #20]
   42fc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   42fc8:	ldr	r3, [fp, #-8]
   42fcc:	sub	r3, r2, r3
   42fd0:	str	r3, [fp, #-20]	; 0xffffffec
   42fd4:	ldr	r3, [fp, #-16]
   42fd8:	ldr	r3, [r3, #44]	; 0x2c
   42fdc:	mov	r1, #0
   42fe0:	ldr	r0, [fp, #-16]
   42fe4:	blx	r3
   42fe8:	ldr	r3, [fp, #-16]
   42fec:	ldr	r3, [r3, #16]
   42ff0:	mov	r2, r3
   42ff4:	ldr	r3, [fp, #-16]
   42ff8:	ldr	r3, [r3, #20]
   42ffc:	sub	r3, r2, r3
   43000:	str	r3, [fp, #-8]
   43004:	ldr	r2, [fp, #-20]	; 0xffffffec
   43008:	ldr	r3, [fp, #-8]
   4300c:	cmp	r2, r3
   43010:	bhi	42f94 <flatcc_json_printer_fmt_bool@@Base+0x824>
   43014:	ldr	r3, [fp, #-16]
   43018:	ldr	r3, [r3, #20]
   4301c:	ldr	r2, [fp, #-20]	; 0xffffffec
   43020:	mov	r1, #32
   43024:	mov	r0, r3
   43028:	bl	145bc <memset@plt>
   4302c:	ldr	r3, [fp, #-16]
   43030:	ldr	r2, [r3, #20]
   43034:	ldr	r3, [fp, #-20]	; 0xffffffec
   43038:	add	r2, r2, r3
   4303c:	ldr	r3, [fp, #-16]
   43040:	str	r2, [r3, #20]
   43044:	nop			; (mov r0, r0)
   43048:	sub	sp, fp, #4
   4304c:	pop	{fp, pc}
   43050:	push	{fp, lr}
   43054:	add	fp, sp, #4
   43058:	sub	sp, sp, #16
   4305c:	str	r0, [fp, #-16]
   43060:	ldr	r3, [fp, #-16]
   43064:	ldr	r3, [r3, #32]
   43068:	ldr	r2, [fp, #-16]
   4306c:	ldrb	r2, [r2, #25]
   43070:	mul	r3, r2, r3
   43074:	str	r3, [fp, #-8]
   43078:	ldr	r3, [fp, #-16]
   4307c:	ldr	r2, [r3, #20]
   43080:	ldr	r3, [fp, #-8]
   43084:	add	r2, r2, r3
   43088:	ldr	r3, [fp, #-16]
   4308c:	ldr	r3, [r3, #16]
   43090:	cmp	r2, r3
   43094:	bls	430a8 <flatcc_json_printer_fmt_bool@@Base+0x938>
   43098:	ldr	r1, [fp, #-8]
   4309c:	ldr	r0, [fp, #-16]
   430a0:	bl	42f34 <flatcc_json_printer_fmt_bool@@Base+0x7c4>
   430a4:	b	430d8 <flatcc_json_printer_fmt_bool@@Base+0x968>
   430a8:	ldr	r3, [fp, #-16]
   430ac:	ldr	r3, [r3, #20]
   430b0:	ldr	r2, [fp, #-8]
   430b4:	mov	r1, #32
   430b8:	mov	r0, r3
   430bc:	bl	145bc <memset@plt>
   430c0:	ldr	r3, [fp, #-16]
   430c4:	ldr	r2, [r3, #20]
   430c8:	ldr	r3, [fp, #-8]
   430cc:	add	r2, r2, r3
   430d0:	ldr	r3, [fp, #-16]
   430d4:	str	r2, [r3, #20]
   430d8:	nop			; (mov r0, r0)
   430dc:	sub	sp, fp, #4
   430e0:	pop	{fp, pc}

000430e4 <flatcc_json_printer_string@@Base>:
   430e4:	push	{fp, lr}
   430e8:	add	fp, sp, #4
   430ec:	sub	sp, sp, #16
   430f0:	str	r0, [fp, #-8]
   430f4:	str	r1, [fp, #-12]
   430f8:	str	r2, [fp, #-16]
   430fc:	ldr	r3, [fp, #-16]
   43100:	mov	r2, r3
   43104:	ldr	r1, [fp, #-12]
   43108:	ldr	r0, [fp, #-8]
   4310c:	bl	42998 <flatcc_json_printer_fmt_bool@@Base+0x228>
   43110:	nop			; (mov r0, r0)
   43114:	sub	sp, fp, #4
   43118:	pop	{fp, pc}

0004311c <flatcc_json_printer_write@@Base>:
   4311c:	push	{fp, lr}
   43120:	add	fp, sp, #4
   43124:	sub	sp, sp, #16
   43128:	str	r0, [fp, #-8]
   4312c:	str	r1, [fp, #-12]
   43130:	str	r2, [fp, #-16]
   43134:	ldr	r3, [fp, #-16]
   43138:	mov	r2, r3
   4313c:	ldr	r1, [fp, #-12]
   43140:	ldr	r0, [fp, #-8]
   43144:	bl	42910 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   43148:	nop			; (mov r0, r0)
   4314c:	sub	sp, fp, #4
   43150:	pop	{fp, pc}

00043154 <flatcc_json_printer_nl@@Base>:
   43154:	push	{fp, lr}
   43158:	add	fp, sp, #4
   4315c:	sub	sp, sp, #8
   43160:	str	r0, [fp, #-8]
   43164:	ldr	r3, [fp, #-8]
   43168:	ldr	r3, [r3, #20]
   4316c:	add	r1, r3, #1
   43170:	ldr	r2, [fp, #-8]
   43174:	str	r1, [r2, #20]
   43178:	mov	r2, #10
   4317c:	strb	r2, [r3]
   43180:	ldr	r0, [fp, #-8]
   43184:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   43188:	nop			; (mov r0, r0)
   4318c:	sub	sp, fp, #4
   43190:	pop	{fp, pc}

00043194 <flatcc_json_printer_char@@Base>:
   43194:	push	{fp}		; (str fp, [sp, #-4]!)
   43198:	add	fp, sp, #0
   4319c:	sub	sp, sp, #12
   431a0:	str	r0, [fp, #-8]
   431a4:	mov	r3, r1
   431a8:	strb	r3, [fp, #-9]
   431ac:	ldr	r3, [fp, #-8]
   431b0:	ldr	r3, [r3, #20]
   431b4:	add	r1, r3, #1
   431b8:	ldr	r2, [fp, #-8]
   431bc:	str	r1, [r2, #20]
   431c0:	ldrb	r2, [fp, #-9]
   431c4:	strb	r2, [r3]
   431c8:	nop			; (mov r0, r0)
   431cc:	add	sp, fp, #0
   431d0:	pop	{fp}		; (ldr fp, [sp], #4)
   431d4:	bx	lr

000431d8 <flatcc_json_printer_indent@@Base>:
   431d8:	push	{fp, lr}
   431dc:	add	fp, sp, #4
   431e0:	sub	sp, sp, #8
   431e4:	str	r0, [fp, #-8]
   431e8:	ldr	r0, [fp, #-8]
   431ec:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   431f0:	nop			; (mov r0, r0)
   431f4:	sub	sp, fp, #4
   431f8:	pop	{fp, pc}

000431fc <flatcc_json_printer_add_level@@Base>:
   431fc:	push	{fp}		; (str fp, [sp, #-4]!)
   43200:	add	fp, sp, #0
   43204:	sub	sp, sp, #12
   43208:	str	r0, [fp, #-8]
   4320c:	str	r1, [fp, #-12]
   43210:	ldr	r3, [fp, #-8]
   43214:	ldr	r2, [r3, #32]
   43218:	ldr	r3, [fp, #-12]
   4321c:	add	r2, r2, r3
   43220:	ldr	r3, [fp, #-8]
   43224:	str	r2, [r3, #32]
   43228:	nop			; (mov r0, r0)
   4322c:	add	sp, fp, #0
   43230:	pop	{fp}		; (ldr fp, [sp], #4)
   43234:	bx	lr

00043238 <flatcc_json_printer_get_level@@Base>:
   43238:	push	{fp}		; (str fp, [sp, #-4]!)
   4323c:	add	fp, sp, #0
   43240:	sub	sp, sp, #12
   43244:	str	r0, [fp, #-8]
   43248:	ldr	r3, [fp, #-8]
   4324c:	ldr	r3, [r3, #32]
   43250:	mov	r0, r3
   43254:	add	sp, fp, #0
   43258:	pop	{fp}		; (ldr fp, [sp], #4)
   4325c:	bx	lr
   43260:	push	{fp, lr}
   43264:	add	fp, sp, #4
   43268:	sub	sp, sp, #16
   4326c:	str	r0, [fp, #-8]
   43270:	str	r1, [fp, #-12]
   43274:	str	r2, [fp, #-16]
   43278:	ldr	r3, [fp, #-8]
   4327c:	ldr	r3, [r3, #20]
   43280:	mov	r2, #34	; 0x22
   43284:	strb	r2, [r3]
   43288:	ldr	r3, [fp, #-8]
   4328c:	ldr	r3, [r3, #20]
   43290:	ldr	r2, [fp, #-8]
   43294:	ldrb	r2, [r2, #26]
   43298:	cmp	r2, #0
   4329c:	moveq	r2, #1
   432a0:	movne	r2, #0
   432a4:	uxtb	r2, r2
   432a8:	add	r2, r3, r2
   432ac:	ldr	r3, [fp, #-8]
   432b0:	str	r2, [r3, #20]
   432b4:	ldr	r3, [fp, #-8]
   432b8:	ldr	r2, [r3, #20]
   432bc:	ldr	r3, [fp, #-16]
   432c0:	add	r2, r2, r3
   432c4:	ldr	r3, [fp, #-8]
   432c8:	ldr	r3, [r3, #16]
   432cc:	cmp	r2, r3
   432d0:	bcs	43308 <flatcc_json_printer_get_level@@Base+0xd0>
   432d4:	ldr	r3, [fp, #-8]
   432d8:	ldr	r3, [r3, #20]
   432dc:	ldr	r2, [fp, #-16]
   432e0:	ldr	r1, [fp, #-12]
   432e4:	mov	r0, r3
   432e8:	bl	14544 <memcpy@plt>
   432ec:	ldr	r3, [fp, #-8]
   432f0:	ldr	r2, [r3, #20]
   432f4:	ldr	r3, [fp, #-16]
   432f8:	add	r2, r2, r3
   432fc:	ldr	r3, [fp, #-8]
   43300:	str	r2, [r3, #20]
   43304:	b	43318 <flatcc_json_printer_get_level@@Base+0xe0>
   43308:	ldr	r2, [fp, #-16]
   4330c:	ldr	r1, [fp, #-12]
   43310:	ldr	r0, [fp, #-8]
   43314:	bl	42910 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   43318:	ldr	r3, [fp, #-8]
   4331c:	ldr	r3, [r3, #20]
   43320:	mov	r2, #34	; 0x22
   43324:	strb	r2, [r3]
   43328:	ldr	r3, [fp, #-8]
   4332c:	ldr	r3, [r3, #20]
   43330:	ldr	r2, [fp, #-8]
   43334:	ldrb	r2, [r2, #26]
   43338:	cmp	r2, #0
   4333c:	moveq	r2, #1
   43340:	movne	r2, #0
   43344:	uxtb	r2, r2
   43348:	add	r2, r3, r2
   4334c:	ldr	r3, [fp, #-8]
   43350:	str	r2, [r3, #20]
   43354:	nop			; (mov r0, r0)
   43358:	sub	sp, fp, #4
   4335c:	pop	{fp, pc}
   43360:	push	{fp, lr}
   43364:	add	fp, sp, #4
   43368:	sub	sp, sp, #16
   4336c:	str	r0, [fp, #-8]
   43370:	str	r1, [fp, #-12]
   43374:	str	r2, [fp, #-16]
   43378:	ldr	r3, [fp, #-8]
   4337c:	ldrb	r3, [r3, #25]
   43380:	cmp	r3, #0
   43384:	beq	433b0 <flatcc_json_printer_get_level@@Base+0x178>
   43388:	ldr	r3, [fp, #-8]
   4338c:	ldr	r3, [r3, #20]
   43390:	add	r1, r3, #1
   43394:	ldr	r2, [fp, #-8]
   43398:	str	r1, [r2, #20]
   4339c:	mov	r2, #10
   433a0:	strb	r2, [r3]
   433a4:	ldr	r0, [fp, #-8]
   433a8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   433ac:	b	433b8 <flatcc_json_printer_get_level@@Base+0x180>
   433b0:	ldr	r0, [fp, #-8]
   433b4:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   433b8:	ldr	r2, [fp, #-16]
   433bc:	ldr	r1, [fp, #-12]
   433c0:	ldr	r0, [fp, #-8]
   433c4:	bl	43260 <flatcc_json_printer_get_level@@Base+0x28>
   433c8:	ldr	r3, [fp, #-8]
   433cc:	ldr	r3, [r3, #20]
   433d0:	add	r1, r3, #1
   433d4:	ldr	r2, [fp, #-8]
   433d8:	str	r1, [r2, #20]
   433dc:	mov	r2, #58	; 0x3a
   433e0:	strb	r2, [r3]
   433e4:	ldr	r3, [fp, #-8]
   433e8:	ldr	r3, [r3, #20]
   433ec:	mov	r2, #32
   433f0:	strb	r2, [r3]
   433f4:	ldr	r3, [fp, #-8]
   433f8:	ldr	r3, [r3, #20]
   433fc:	ldr	r2, [fp, #-8]
   43400:	ldrb	r2, [r2, #25]
   43404:	cmp	r2, #0
   43408:	movne	r2, #1
   4340c:	moveq	r2, #0
   43410:	uxtb	r2, r2
   43414:	add	r2, r3, r2
   43418:	ldr	r3, [fp, #-8]
   4341c:	str	r2, [r3, #20]
   43420:	nop			; (mov r0, r0)
   43424:	sub	sp, fp, #4
   43428:	pop	{fp, pc}

0004342c <flatcc_json_printer_uint8@@Base>:
   4342c:	push	{fp, lr}
   43430:	add	fp, sp, #4
   43434:	sub	sp, sp, #8
   43438:	str	r0, [fp, #-8]
   4343c:	mov	r3, r1
   43440:	strb	r3, [fp, #-9]
   43444:	ldr	r3, [fp, #-8]
   43448:	ldr	r2, [r3, #20]
   4344c:	ldrb	r3, [fp, #-9]
   43450:	mov	r1, r2
   43454:	mov	r0, r3
   43458:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   4345c:	mov	r2, r0
   43460:	ldr	r3, [fp, #-8]
   43464:	ldr	r3, [r3, #20]
   43468:	add	r2, r3, r2
   4346c:	ldr	r3, [fp, #-8]
   43470:	str	r2, [r3, #20]
   43474:	nop			; (mov r0, r0)
   43478:	sub	sp, fp, #4
   4347c:	pop	{fp, pc}

00043480 <flatcc_json_printer_uint16@@Base>:
   43480:	push	{fp, lr}
   43484:	add	fp, sp, #4
   43488:	sub	sp, sp, #8
   4348c:	str	r0, [fp, #-8]
   43490:	mov	r3, r1
   43494:	strh	r3, [fp, #-10]
   43498:	ldr	r3, [fp, #-8]
   4349c:	ldr	r2, [r3, #20]
   434a0:	ldrh	r3, [fp, #-10]
   434a4:	mov	r1, r2
   434a8:	mov	r0, r3
   434ac:	bl	3e554 <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   434b0:	mov	r2, r0
   434b4:	ldr	r3, [fp, #-8]
   434b8:	ldr	r3, [r3, #20]
   434bc:	add	r2, r3, r2
   434c0:	ldr	r3, [fp, #-8]
   434c4:	str	r2, [r3, #20]
   434c8:	nop			; (mov r0, r0)
   434cc:	sub	sp, fp, #4
   434d0:	pop	{fp, pc}

000434d4 <flatcc_json_printer_uint32@@Base>:
   434d4:	push	{fp, lr}
   434d8:	add	fp, sp, #4
   434dc:	sub	sp, sp, #8
   434e0:	str	r0, [fp, #-8]
   434e4:	str	r1, [fp, #-12]
   434e8:	ldr	r3, [fp, #-8]
   434ec:	ldr	r3, [r3, #20]
   434f0:	mov	r1, r3
   434f4:	ldr	r0, [fp, #-12]
   434f8:	bl	3e87c <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   434fc:	mov	r2, r0
   43500:	ldr	r3, [fp, #-8]
   43504:	ldr	r3, [r3, #20]
   43508:	add	r2, r3, r2
   4350c:	ldr	r3, [fp, #-8]
   43510:	str	r2, [r3, #20]
   43514:	nop			; (mov r0, r0)
   43518:	sub	sp, fp, #4
   4351c:	pop	{fp, pc}

00043520 <flatcc_json_printer_uint64@@Base>:
   43520:	push	{fp, lr}
   43524:	add	fp, sp, #4
   43528:	sub	sp, sp, #16
   4352c:	str	r0, [fp, #-8]
   43530:	strd	r2, [fp, #-20]	; 0xffffffec
   43534:	ldr	r3, [fp, #-8]
   43538:	ldr	r3, [r3, #20]
   4353c:	mov	r2, r3
   43540:	ldrd	r0, [fp, #-20]	; 0xffffffec
   43544:	bl	3eeb4 <flatcc_json_parser_struct_as_root@@Base+0x1330>
   43548:	mov	r2, r0
   4354c:	ldr	r3, [fp, #-8]
   43550:	ldr	r3, [r3, #20]
   43554:	add	r2, r3, r2
   43558:	ldr	r3, [fp, #-8]
   4355c:	str	r2, [r3, #20]
   43560:	nop			; (mov r0, r0)
   43564:	sub	sp, fp, #4
   43568:	pop	{fp, pc}

0004356c <flatcc_json_printer_int8@@Base>:
   4356c:	push	{fp, lr}
   43570:	add	fp, sp, #4
   43574:	sub	sp, sp, #8
   43578:	str	r0, [fp, #-8]
   4357c:	mov	r3, r1
   43580:	strb	r3, [fp, #-9]
   43584:	ldr	r3, [fp, #-8]
   43588:	ldr	r2, [r3, #20]
   4358c:	ldrsb	r3, [fp, #-9]
   43590:	mov	r1, r2
   43594:	mov	r0, r3
   43598:	bl	3fa3c <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   4359c:	mov	r2, r0
   435a0:	ldr	r3, [fp, #-8]
   435a4:	ldr	r3, [r3, #20]
   435a8:	add	r2, r3, r2
   435ac:	ldr	r3, [fp, #-8]
   435b0:	str	r2, [r3, #20]
   435b4:	nop			; (mov r0, r0)
   435b8:	sub	sp, fp, #4
   435bc:	pop	{fp, pc}

000435c0 <flatcc_json_printer_int16@@Base>:
   435c0:	push	{fp, lr}
   435c4:	add	fp, sp, #4
   435c8:	sub	sp, sp, #8
   435cc:	str	r0, [fp, #-8]
   435d0:	mov	r3, r1
   435d4:	strh	r3, [fp, #-10]
   435d8:	ldr	r3, [fp, #-8]
   435dc:	ldr	r2, [r3, #20]
   435e0:	ldrsh	r3, [fp, #-10]
   435e4:	mov	r1, r2
   435e8:	mov	r0, r3
   435ec:	bl	3fabc <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   435f0:	mov	r2, r0
   435f4:	ldr	r3, [fp, #-8]
   435f8:	ldr	r3, [r3, #20]
   435fc:	add	r2, r3, r2
   43600:	ldr	r3, [fp, #-8]
   43604:	str	r2, [r3, #20]
   43608:	nop			; (mov r0, r0)
   4360c:	sub	sp, fp, #4
   43610:	pop	{fp, pc}

00043614 <flatcc_json_printer_int32@@Base>:
   43614:	push	{fp, lr}
   43618:	add	fp, sp, #4
   4361c:	sub	sp, sp, #8
   43620:	str	r0, [fp, #-8]
   43624:	str	r1, [fp, #-12]
   43628:	ldr	r3, [fp, #-8]
   4362c:	ldr	r3, [r3, #20]
   43630:	mov	r1, r3
   43634:	ldr	r0, [fp, #-12]
   43638:	bl	3fb3c <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   4363c:	mov	r2, r0
   43640:	ldr	r3, [fp, #-8]
   43644:	ldr	r3, [r3, #20]
   43648:	add	r2, r3, r2
   4364c:	ldr	r3, [fp, #-8]
   43650:	str	r2, [r3, #20]
   43654:	nop			; (mov r0, r0)
   43658:	sub	sp, fp, #4
   4365c:	pop	{fp, pc}

00043660 <flatcc_json_printer_int64@@Base>:
   43660:	push	{fp, lr}
   43664:	add	fp, sp, #4
   43668:	sub	sp, sp, #16
   4366c:	str	r0, [fp, #-8]
   43670:	strd	r2, [fp, #-20]	; 0xffffffec
   43674:	ldr	r3, [fp, #-8]
   43678:	ldr	r3, [r3, #20]
   4367c:	mov	r2, r3
   43680:	ldrd	r0, [fp, #-20]	; 0xffffffec
   43684:	bl	3fbb4 <flatcc_json_parser_struct_as_root@@Base+0x2030>
   43688:	mov	r2, r0
   4368c:	ldr	r3, [fp, #-8]
   43690:	ldr	r3, [r3, #20]
   43694:	add	r2, r3, r2
   43698:	ldr	r3, [fp, #-8]
   4369c:	str	r2, [r3, #20]
   436a0:	nop			; (mov r0, r0)
   436a4:	sub	sp, fp, #4
   436a8:	pop	{fp, pc}

000436ac <flatcc_json_printer_float@@Base>:
   436ac:	push	{fp, lr}
   436b0:	add	fp, sp, #4
   436b4:	sub	sp, sp, #8
   436b8:	str	r0, [fp, #-8]
   436bc:	vstr	s0, [fp, #-12]
   436c0:	vldr	s15, [fp, #-12]
   436c4:	vcvt.f64.f32	d7, s15
   436c8:	ldr	r3, [fp, #-8]
   436cc:	ldr	r3, [r3, #20]
   436d0:	mov	r0, r3
   436d4:	vmov.f64	d0, d7
   436d8:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   436dc:	mov	r2, r0
   436e0:	ldr	r3, [fp, #-8]
   436e4:	ldr	r3, [r3, #20]
   436e8:	add	r2, r3, r2
   436ec:	ldr	r3, [fp, #-8]
   436f0:	str	r2, [r3, #20]
   436f4:	nop			; (mov r0, r0)
   436f8:	sub	sp, fp, #4
   436fc:	pop	{fp, pc}

00043700 <flatcc_json_printer_double@@Base>:
   43700:	push	{fp, lr}
   43704:	add	fp, sp, #4
   43708:	sub	sp, sp, #16
   4370c:	str	r0, [fp, #-8]
   43710:	vstr	d0, [fp, #-20]	; 0xffffffec
   43714:	ldr	r3, [fp, #-8]
   43718:	ldr	r3, [r3, #20]
   4371c:	mov	r0, r3
   43720:	vldr	d0, [fp, #-20]	; 0xffffffec
   43724:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   43728:	mov	r2, r0
   4372c:	ldr	r3, [fp, #-8]
   43730:	ldr	r3, [r3, #20]
   43734:	add	r2, r3, r2
   43738:	ldr	r3, [fp, #-8]
   4373c:	str	r2, [r3, #20]
   43740:	nop			; (mov r0, r0)
   43744:	sub	sp, fp, #4
   43748:	pop	{fp, pc}

0004374c <flatcc_json_printer_enum@@Base>:
   4374c:	push	{fp, lr}
   43750:	add	fp, sp, #4
   43754:	sub	sp, sp, #16
   43758:	str	r0, [fp, #-8]
   4375c:	str	r1, [fp, #-12]
   43760:	str	r2, [fp, #-16]
   43764:	ldr	r3, [fp, #-16]
   43768:	mov	r2, r3
   4376c:	ldr	r1, [fp, #-12]
   43770:	ldr	r0, [fp, #-8]
   43774:	bl	43260 <flatcc_json_printer_get_level@@Base+0x28>
   43778:	nop			; (mov r0, r0)
   4377c:	sub	sp, fp, #4
   43780:	pop	{fp, pc}

00043784 <flatcc_json_printer_delimit_enum_flags@@Base>:
   43784:	push	{fp}		; (str fp, [sp, #-4]!)
   43788:	add	fp, sp, #0
   4378c:	sub	sp, sp, #20
   43790:	str	r0, [fp, #-16]
   43794:	str	r1, [fp, #-20]	; 0xffffffec
   43798:	ldr	r3, [fp, #-16]
   4379c:	ldrb	r3, [r3, #26]
   437a0:	cmp	r3, #0
   437a4:	beq	437b4 <flatcc_json_printer_delimit_enum_flags@@Base+0x30>
   437a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   437ac:	cmp	r3, #0
   437b0:	beq	437bc <flatcc_json_printer_delimit_enum_flags@@Base+0x38>
   437b4:	mov	r3, #1
   437b8:	b	437c0 <flatcc_json_printer_delimit_enum_flags@@Base+0x3c>
   437bc:	mov	r3, #0
   437c0:	str	r3, [fp, #-8]
   437c4:	ldr	r3, [fp, #-16]
   437c8:	ldr	r3, [r3, #20]
   437cc:	mov	r2, #34	; 0x22
   437d0:	strb	r2, [r3]
   437d4:	ldr	r3, [fp, #-16]
   437d8:	ldr	r2, [r3, #20]
   437dc:	ldr	r3, [fp, #-8]
   437e0:	add	r2, r2, r3
   437e4:	ldr	r3, [fp, #-16]
   437e8:	str	r2, [r3, #20]
   437ec:	nop			; (mov r0, r0)
   437f0:	add	sp, fp, #0
   437f4:	pop	{fp}		; (ldr fp, [sp], #4)
   437f8:	bx	lr

000437fc <flatcc_json_printer_enum_flag@@Base>:
   437fc:	push	{fp, lr}
   43800:	add	fp, sp, #4
   43804:	sub	sp, sp, #16
   43808:	str	r0, [fp, #-8]
   4380c:	str	r1, [fp, #-12]
   43810:	str	r2, [fp, #-16]
   43814:	str	r3, [fp, #-20]	; 0xffffffec
   43818:	ldr	r3, [fp, #-8]
   4381c:	ldr	r3, [r3, #20]
   43820:	mov	r2, #32
   43824:	strb	r2, [r3]
   43828:	ldr	r3, [fp, #-8]
   4382c:	ldr	r3, [r3, #20]
   43830:	ldr	r2, [fp, #-12]
   43834:	cmp	r2, #0
   43838:	movgt	r2, #1
   4383c:	movle	r2, #0
   43840:	uxtb	r2, r2
   43844:	add	r2, r3, r2
   43848:	ldr	r3, [fp, #-8]
   4384c:	str	r2, [r3, #20]
   43850:	ldr	r3, [fp, #-20]	; 0xffffffec
   43854:	mov	r2, r3
   43858:	ldr	r1, [fp, #-16]
   4385c:	ldr	r0, [fp, #-8]
   43860:	bl	42910 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   43864:	nop			; (mov r0, r0)
   43868:	sub	sp, fp, #4
   4386c:	pop	{fp, pc}
   43870:	push	{fp, lr}
   43874:	add	fp, sp, #4
   43878:	sub	sp, sp, #16
   4387c:	str	r0, [fp, #-16]
   43880:	str	r1, [fp, #-20]	; 0xffffffec
   43884:	ldr	r0, [fp, #-20]	; 0xffffffec
   43888:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   4388c:	str	r0, [fp, #-8]
   43890:	ldr	r3, [fp, #-20]	; 0xffffffec
   43894:	add	r3, r3, #4
   43898:	str	r3, [fp, #-12]
   4389c:	ldr	r2, [fp, #-8]
   438a0:	ldr	r1, [fp, #-12]
   438a4:	ldr	r0, [fp, #-16]
   438a8:	bl	42998 <flatcc_json_printer_fmt_bool@@Base+0x228>
   438ac:	nop			; (mov r0, r0)
   438b0:	sub	sp, fp, #4
   438b4:	pop	{fp, pc}
   438b8:	push	{fp, lr}
   438bc:	add	fp, sp, #4
   438c0:	sub	sp, sp, #40	; 0x28
   438c4:	str	r0, [fp, #-32]	; 0xffffffe0
   438c8:	str	r1, [fp, #-36]	; 0xffffffdc
   438cc:	str	r2, [fp, #-40]	; 0xffffffd8
   438d0:	str	r3, [fp, #-44]	; 0xffffffd4
   438d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   438d8:	sub	r3, r3, #1
   438dc:	str	r3, [fp, #-40]	; 0xffffffd8
   438e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   438e4:	cmp	r3, #0
   438e8:	bne	438fc <flatcc_json_printer_enum_flag@@Base+0x100>
   438ec:	mov	r1, #2
   438f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   438f4:	bl	3e270 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   438f8:	b	439ec <flatcc_json_printer_enum_flag@@Base+0x1f0>
   438fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43900:	ldr	r3, [r3, #32]
   43904:	add	r2, r3, #1
   43908:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4390c:	str	r2, [r3, #32]
   43910:	ldr	r3, [fp, #-32]	; 0xffffffe0
   43914:	ldr	r3, [r3, #20]
   43918:	add	r1, r3, #1
   4391c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   43920:	str	r1, [r2, #20]
   43924:	mov	r2, #123	; 0x7b
   43928:	strb	r2, [r3]
   4392c:	mov	r3, #0
   43930:	str	r3, [fp, #-8]
   43934:	ldr	r3, [fp, #-40]	; 0xffffffd8
   43938:	str	r3, [fp, #-12]
   4393c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   43940:	str	r3, [fp, #-24]	; 0xffffffe8
   43944:	ldr	r0, [fp, #-36]	; 0xffffffdc
   43948:	bl	3e118 <flatcc_json_parser_struct_as_root@@Base+0x594>
   4394c:	mov	r3, r0
   43950:	rsb	r3, r3, #0
   43954:	ldr	r2, [fp, #-36]	; 0xffffffdc
   43958:	add	r3, r2, r3
   4395c:	str	r3, [fp, #-20]	; 0xffffffec
   43960:	ldr	r3, [fp, #-20]	; 0xffffffec
   43964:	mov	r0, r3
   43968:	bl	3e170 <flatcc_json_parser_struct_as_root@@Base+0x5ec>
   4396c:	mov	r3, r0
   43970:	str	r3, [fp, #-16]
   43974:	sub	r2, fp, #24
   43978:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4397c:	mov	r1, r2
   43980:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43984:	blx	r3
   43988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4398c:	ldrb	r3, [r3, #25]
   43990:	cmp	r3, #0
   43994:	beq	439d0 <flatcc_json_printer_enum_flag@@Base+0x1d4>
   43998:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4399c:	ldr	r3, [r3, #20]
   439a0:	add	r1, r3, #1
   439a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   439a8:	str	r1, [r2, #20]
   439ac:	mov	r2, #10
   439b0:	strb	r2, [r3]
   439b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   439b8:	ldr	r3, [r3, #32]
   439bc:	sub	r2, r3, #1
   439c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   439c4:	str	r2, [r3, #32]
   439c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   439cc:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   439d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   439d4:	ldr	r3, [r3, #20]
   439d8:	add	r1, r3, #1
   439dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   439e0:	str	r1, [r2, #20]
   439e4:	mov	r2, #125	; 0x7d
   439e8:	strb	r2, [r3]
   439ec:	sub	sp, fp, #4
   439f0:	pop	{fp, pc}

000439f4 <flatcc_json_printer_string_field@@Base>:
   439f4:	push	{fp, lr}
   439f8:	add	fp, sp, #4
   439fc:	sub	sp, sp, #24
   43a00:	str	r0, [fp, #-16]
   43a04:	str	r1, [fp, #-20]	; 0xffffffec
   43a08:	str	r2, [fp, #-24]	; 0xffffffe8
   43a0c:	str	r3, [fp, #-28]	; 0xffffffe4
   43a10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43a14:	ldr	r0, [fp, #-20]	; 0xffffffec
   43a18:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   43a1c:	str	r0, [fp, #-8]
   43a20:	ldr	r3, [fp, #-8]
   43a24:	cmp	r3, #0
   43a28:	beq	43a90 <flatcc_json_printer_string_field@@Base+0x9c>
   43a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   43a30:	ldr	r3, [r3, #16]
   43a34:	add	r1, r3, #1
   43a38:	ldr	r2, [fp, #-20]	; 0xffffffec
   43a3c:	str	r1, [r2, #16]
   43a40:	cmp	r3, #0
   43a44:	beq	43a64 <flatcc_json_printer_string_field@@Base+0x70>
   43a48:	ldr	r3, [fp, #-16]
   43a4c:	ldr	r3, [r3, #20]
   43a50:	add	r1, r3, #1
   43a54:	ldr	r2, [fp, #-16]
   43a58:	str	r1, [r2, #20]
   43a5c:	mov	r2, #44	; 0x2c
   43a60:	strb	r2, [r3]
   43a64:	ldr	r3, [fp, #4]
   43a68:	mov	r2, r3
   43a6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43a70:	ldr	r0, [fp, #-16]
   43a74:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   43a78:	ldr	r0, [fp, #-8]
   43a7c:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   43a80:	mov	r3, r0
   43a84:	mov	r1, r3
   43a88:	ldr	r0, [fp, #-16]
   43a8c:	bl	43870 <flatcc_json_printer_enum_flag@@Base+0x74>
   43a90:	nop			; (mov r0, r0)
   43a94:	sub	sp, fp, #4
   43a98:	pop	{fp, pc}

00043a9c <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   43a9c:	push	{fp, lr}
   43aa0:	add	fp, sp, #4
   43aa4:	sub	sp, sp, #24
   43aa8:	str	r0, [fp, #-16]
   43aac:	str	r1, [fp, #-20]	; 0xffffffec
   43ab0:	str	r2, [fp, #-24]	; 0xffffffe8
   43ab4:	str	r3, [fp, #-28]	; 0xffffffe4
   43ab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   43ac0:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   43ac4:	str	r0, [fp, #-8]
   43ac8:	ldr	r3, [fp, #8]
   43acc:	cmp	r3, #0
   43ad0:	movne	r3, #1
   43ad4:	moveq	r3, #0
   43ad8:	uxtb	r3, r3
   43adc:	str	r3, [fp, #-12]
   43ae0:	ldr	r3, [fp, #-12]
   43ae4:	orr	r3, r3, #128	; 0x80
   43ae8:	str	r3, [fp, #-12]
   43aec:	ldr	r3, [fp, #-8]
   43af0:	cmp	r3, #0
   43af4:	beq	43b60 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xc4>
   43af8:	ldr	r3, [fp, #-20]	; 0xffffffec
   43afc:	ldr	r3, [r3, #16]
   43b00:	add	r1, r3, #1
   43b04:	ldr	r2, [fp, #-20]	; 0xffffffec
   43b08:	str	r1, [r2, #16]
   43b0c:	cmp	r3, #0
   43b10:	beq	43b30 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x94>
   43b14:	ldr	r3, [fp, #-16]
   43b18:	ldr	r3, [r3, #20]
   43b1c:	add	r1, r3, #1
   43b20:	ldr	r2, [fp, #-16]
   43b24:	str	r1, [r2, #20]
   43b28:	mov	r2, #44	; 0x2c
   43b2c:	strb	r2, [r3]
   43b30:	ldr	r3, [fp, #4]
   43b34:	mov	r2, r3
   43b38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43b3c:	ldr	r0, [fp, #-16]
   43b40:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   43b44:	ldr	r0, [fp, #-8]
   43b48:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   43b4c:	mov	r3, r0
   43b50:	ldr	r2, [fp, #-12]
   43b54:	mov	r1, r3
   43b58:	ldr	r0, [fp, #-16]
   43b5c:	bl	42cf8 <flatcc_json_printer_fmt_bool@@Base+0x588>
   43b60:	nop			; (mov r0, r0)
   43b64:	sub	sp, fp, #4
   43b68:	pop	{fp, pc}

00043b6c <flatcc_json_printer_uint8_field@@Base>:
   43b6c:	push	{fp, lr}
   43b70:	add	fp, sp, #4
   43b74:	sub	sp, sp, #24
   43b78:	str	r0, [fp, #-16]
   43b7c:	str	r1, [fp, #-20]	; 0xffffffec
   43b80:	str	r2, [fp, #-24]	; 0xffffffe8
   43b84:	str	r3, [fp, #-28]	; 0xffffffe4
   43b88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43b8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   43b90:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   43b94:	str	r0, [fp, #-12]
   43b98:	ldr	r3, [fp, #-12]
   43b9c:	cmp	r3, #0
   43ba0:	beq	43bd8 <flatcc_json_printer_uint8_field@@Base+0x6c>
   43ba4:	ldr	r0, [fp, #-12]
   43ba8:	bl	3dcd0 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   43bac:	mov	r3, r0
   43bb0:	strb	r3, [fp, #-5]
   43bb4:	ldrb	r2, [fp, #-5]
   43bb8:	ldrb	r3, [fp, #8]
   43bbc:	cmp	r2, r3
   43bc0:	bne	43bf0 <flatcc_json_printer_uint8_field@@Base+0x84>
   43bc4:	ldr	r3, [fp, #-16]
   43bc8:	ldrb	r3, [r3, #28]
   43bcc:	cmp	r3, #0
   43bd0:	beq	43bf0 <flatcc_json_printer_uint8_field@@Base+0x84>
   43bd4:	b	43c74 <flatcc_json_printer_uint8_field@@Base+0x108>
   43bd8:	ldr	r3, [fp, #-16]
   43bdc:	ldrb	r3, [r3, #29]
   43be0:	cmp	r3, #0
   43be4:	beq	43c70 <flatcc_json_printer_uint8_field@@Base+0x104>
   43be8:	ldrb	r3, [fp, #8]
   43bec:	strb	r3, [fp, #-5]
   43bf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   43bf4:	ldr	r3, [r3, #16]
   43bf8:	add	r1, r3, #1
   43bfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   43c00:	str	r1, [r2, #16]
   43c04:	cmp	r3, #0
   43c08:	beq	43c28 <flatcc_json_printer_uint8_field@@Base+0xbc>
   43c0c:	ldr	r3, [fp, #-16]
   43c10:	ldr	r3, [r3, #20]
   43c14:	add	r1, r3, #1
   43c18:	ldr	r2, [fp, #-16]
   43c1c:	str	r1, [r2, #20]
   43c20:	mov	r2, #44	; 0x2c
   43c24:	strb	r2, [r3]
   43c28:	ldr	r3, [fp, #4]
   43c2c:	mov	r2, r3
   43c30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43c34:	ldr	r0, [fp, #-16]
   43c38:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   43c3c:	ldr	r3, [fp, #-16]
   43c40:	ldr	r2, [r3, #20]
   43c44:	ldrb	r3, [fp, #-5]
   43c48:	mov	r1, r2
   43c4c:	mov	r0, r3
   43c50:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   43c54:	mov	r2, r0
   43c58:	ldr	r3, [fp, #-16]
   43c5c:	ldr	r3, [r3, #20]
   43c60:	add	r2, r3, r2
   43c64:	ldr	r3, [fp, #-16]
   43c68:	str	r2, [r3, #20]
   43c6c:	b	43c74 <flatcc_json_printer_uint8_field@@Base+0x108>
   43c70:	nop			; (mov r0, r0)
   43c74:	sub	sp, fp, #4
   43c78:	pop	{fp, pc}

00043c7c <flatcc_json_printer_uint16_field@@Base>:
   43c7c:	push	{fp, lr}
   43c80:	add	fp, sp, #4
   43c84:	sub	sp, sp, #24
   43c88:	str	r0, [fp, #-16]
   43c8c:	str	r1, [fp, #-20]	; 0xffffffec
   43c90:	str	r2, [fp, #-24]	; 0xffffffe8
   43c94:	str	r3, [fp, #-28]	; 0xffffffe4
   43c98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43c9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   43ca0:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   43ca4:	str	r0, [fp, #-12]
   43ca8:	ldr	r3, [fp, #-12]
   43cac:	cmp	r3, #0
   43cb0:	beq	43ce8 <flatcc_json_printer_uint16_field@@Base+0x6c>
   43cb4:	ldr	r0, [fp, #-12]
   43cb8:	bl	3dd28 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   43cbc:	mov	r3, r0
   43cc0:	strh	r3, [fp, #-6]
   43cc4:	ldrh	r2, [fp, #-6]
   43cc8:	ldrh	r3, [fp, #8]
   43ccc:	cmp	r2, r3
   43cd0:	bne	43d00 <flatcc_json_printer_uint16_field@@Base+0x84>
   43cd4:	ldr	r3, [fp, #-16]
   43cd8:	ldrb	r3, [r3, #28]
   43cdc:	cmp	r3, #0
   43ce0:	beq	43d00 <flatcc_json_printer_uint16_field@@Base+0x84>
   43ce4:	b	43d84 <flatcc_json_printer_uint16_field@@Base+0x108>
   43ce8:	ldr	r3, [fp, #-16]
   43cec:	ldrb	r3, [r3, #29]
   43cf0:	cmp	r3, #0
   43cf4:	beq	43d80 <flatcc_json_printer_uint16_field@@Base+0x104>
   43cf8:	ldrh	r3, [fp, #8]
   43cfc:	strh	r3, [fp, #-6]
   43d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   43d04:	ldr	r3, [r3, #16]
   43d08:	add	r1, r3, #1
   43d0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   43d10:	str	r1, [r2, #16]
   43d14:	cmp	r3, #0
   43d18:	beq	43d38 <flatcc_json_printer_uint16_field@@Base+0xbc>
   43d1c:	ldr	r3, [fp, #-16]
   43d20:	ldr	r3, [r3, #20]
   43d24:	add	r1, r3, #1
   43d28:	ldr	r2, [fp, #-16]
   43d2c:	str	r1, [r2, #20]
   43d30:	mov	r2, #44	; 0x2c
   43d34:	strb	r2, [r3]
   43d38:	ldr	r3, [fp, #4]
   43d3c:	mov	r2, r3
   43d40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43d44:	ldr	r0, [fp, #-16]
   43d48:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   43d4c:	ldr	r3, [fp, #-16]
   43d50:	ldr	r2, [r3, #20]
   43d54:	ldrh	r3, [fp, #-6]
   43d58:	mov	r1, r2
   43d5c:	mov	r0, r3
   43d60:	bl	3e554 <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   43d64:	mov	r2, r0
   43d68:	ldr	r3, [fp, #-16]
   43d6c:	ldr	r3, [r3, #20]
   43d70:	add	r2, r3, r2
   43d74:	ldr	r3, [fp, #-16]
   43d78:	str	r2, [r3, #20]
   43d7c:	b	43d84 <flatcc_json_printer_uint16_field@@Base+0x108>
   43d80:	nop			; (mov r0, r0)
   43d84:	sub	sp, fp, #4
   43d88:	pop	{fp, pc}

00043d8c <flatcc_json_printer_uint32_field@@Base>:
   43d8c:	push	{fp, lr}
   43d90:	add	fp, sp, #4
   43d94:	sub	sp, sp, #24
   43d98:	str	r0, [fp, #-16]
   43d9c:	str	r1, [fp, #-20]	; 0xffffffec
   43da0:	str	r2, [fp, #-24]	; 0xffffffe8
   43da4:	str	r3, [fp, #-28]	; 0xffffffe4
   43da8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43dac:	ldr	r0, [fp, #-20]	; 0xffffffec
   43db0:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   43db4:	str	r0, [fp, #-12]
   43db8:	ldr	r3, [fp, #-12]
   43dbc:	cmp	r3, #0
   43dc0:	beq	43df4 <flatcc_json_printer_uint32_field@@Base+0x68>
   43dc4:	ldr	r0, [fp, #-12]
   43dc8:	bl	3dd7c <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   43dcc:	str	r0, [fp, #-8]
   43dd0:	ldr	r2, [fp, #-8]
   43dd4:	ldr	r3, [fp, #8]
   43dd8:	cmp	r2, r3
   43ddc:	bne	43e0c <flatcc_json_printer_uint32_field@@Base+0x80>
   43de0:	ldr	r3, [fp, #-16]
   43de4:	ldrb	r3, [r3, #28]
   43de8:	cmp	r3, #0
   43dec:	beq	43e0c <flatcc_json_printer_uint32_field@@Base+0x80>
   43df0:	b	43e8c <flatcc_json_printer_uint32_field@@Base+0x100>
   43df4:	ldr	r3, [fp, #-16]
   43df8:	ldrb	r3, [r3, #29]
   43dfc:	cmp	r3, #0
   43e00:	beq	43e88 <flatcc_json_printer_uint32_field@@Base+0xfc>
   43e04:	ldr	r3, [fp, #8]
   43e08:	str	r3, [fp, #-8]
   43e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   43e10:	ldr	r3, [r3, #16]
   43e14:	add	r1, r3, #1
   43e18:	ldr	r2, [fp, #-20]	; 0xffffffec
   43e1c:	str	r1, [r2, #16]
   43e20:	cmp	r3, #0
   43e24:	beq	43e44 <flatcc_json_printer_uint32_field@@Base+0xb8>
   43e28:	ldr	r3, [fp, #-16]
   43e2c:	ldr	r3, [r3, #20]
   43e30:	add	r1, r3, #1
   43e34:	ldr	r2, [fp, #-16]
   43e38:	str	r1, [r2, #20]
   43e3c:	mov	r2, #44	; 0x2c
   43e40:	strb	r2, [r3]
   43e44:	ldr	r3, [fp, #4]
   43e48:	mov	r2, r3
   43e4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43e50:	ldr	r0, [fp, #-16]
   43e54:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   43e58:	ldr	r3, [fp, #-16]
   43e5c:	ldr	r3, [r3, #20]
   43e60:	mov	r1, r3
   43e64:	ldr	r0, [fp, #-8]
   43e68:	bl	3e87c <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   43e6c:	mov	r2, r0
   43e70:	ldr	r3, [fp, #-16]
   43e74:	ldr	r3, [r3, #20]
   43e78:	add	r2, r3, r2
   43e7c:	ldr	r3, [fp, #-16]
   43e80:	str	r2, [r3, #20]
   43e84:	b	43e8c <flatcc_json_printer_uint32_field@@Base+0x100>
   43e88:	nop			; (mov r0, r0)
   43e8c:	sub	sp, fp, #4
   43e90:	pop	{fp, pc}

00043e94 <flatcc_json_printer_uint64_field@@Base>:
   43e94:	push	{fp, lr}
   43e98:	add	fp, sp, #4
   43e9c:	sub	sp, sp, #32
   43ea0:	str	r0, [fp, #-24]	; 0xffffffe8
   43ea4:	str	r1, [fp, #-28]	; 0xffffffe4
   43ea8:	str	r2, [fp, #-32]	; 0xffffffe0
   43eac:	str	r3, [fp, #-36]	; 0xffffffdc
   43eb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   43eb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   43eb8:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   43ebc:	str	r0, [fp, #-16]
   43ec0:	ldr	r3, [fp, #-16]
   43ec4:	cmp	r3, #0
   43ec8:	beq	43f00 <flatcc_json_printer_uint64_field@@Base+0x6c>
   43ecc:	ldr	r0, [fp, #-16]
   43ed0:	bl	3ddd4 <flatcc_json_parser_struct_as_root@@Base+0x250>
   43ed4:	strd	r0, [fp, #-12]
   43ed8:	ldrd	r0, [fp, #-12]
   43edc:	ldrd	r2, [fp, #12]
   43ee0:	cmp	r1, r3
   43ee4:	cmpeq	r0, r2
   43ee8:	bne	43f18 <flatcc_json_printer_uint64_field@@Base+0x84>
   43eec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43ef0:	ldrb	r3, [r3, #28]
   43ef4:	cmp	r3, #0
   43ef8:	beq	43f18 <flatcc_json_printer_uint64_field@@Base+0x84>
   43efc:	b	43f98 <flatcc_json_printer_uint64_field@@Base+0x104>
   43f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43f04:	ldrb	r3, [r3, #29]
   43f08:	cmp	r3, #0
   43f0c:	beq	43f94 <flatcc_json_printer_uint64_field@@Base+0x100>
   43f10:	ldrd	r2, [fp, #12]
   43f14:	strd	r2, [fp, #-12]
   43f18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43f1c:	ldr	r3, [r3, #16]
   43f20:	add	r1, r3, #1
   43f24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   43f28:	str	r1, [r2, #16]
   43f2c:	cmp	r3, #0
   43f30:	beq	43f50 <flatcc_json_printer_uint64_field@@Base+0xbc>
   43f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43f38:	ldr	r3, [r3, #20]
   43f3c:	add	r1, r3, #1
   43f40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43f44:	str	r1, [r2, #20]
   43f48:	mov	r2, #44	; 0x2c
   43f4c:	strb	r2, [r3]
   43f50:	ldr	r3, [fp, #4]
   43f54:	mov	r2, r3
   43f58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   43f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43f60:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   43f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43f68:	ldr	r3, [r3, #20]
   43f6c:	mov	r2, r3
   43f70:	ldrd	r0, [fp, #-12]
   43f74:	bl	3eeb4 <flatcc_json_parser_struct_as_root@@Base+0x1330>
   43f78:	mov	r2, r0
   43f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43f80:	ldr	r3, [r3, #20]
   43f84:	add	r2, r3, r2
   43f88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43f8c:	str	r2, [r3, #20]
   43f90:	b	43f98 <flatcc_json_printer_uint64_field@@Base+0x104>
   43f94:	nop			; (mov r0, r0)
   43f98:	sub	sp, fp, #4
   43f9c:	pop	{fp, pc}

00043fa0 <flatcc_json_printer_int8_field@@Base>:
   43fa0:	push	{fp, lr}
   43fa4:	add	fp, sp, #4
   43fa8:	sub	sp, sp, #24
   43fac:	str	r0, [fp, #-16]
   43fb0:	str	r1, [fp, #-20]	; 0xffffffec
   43fb4:	str	r2, [fp, #-24]	; 0xffffffe8
   43fb8:	str	r3, [fp, #-28]	; 0xffffffe4
   43fbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43fc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   43fc4:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   43fc8:	str	r0, [fp, #-12]
   43fcc:	ldr	r3, [fp, #-12]
   43fd0:	cmp	r3, #0
   43fd4:	beq	4400c <flatcc_json_printer_int8_field@@Base+0x6c>
   43fd8:	ldr	r0, [fp, #-12]
   43fdc:	bl	3de38 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   43fe0:	mov	r3, r0
   43fe4:	strb	r3, [fp, #-5]
   43fe8:	ldrsb	r2, [fp, #-5]
   43fec:	ldrsb	r3, [fp, #8]
   43ff0:	cmp	r2, r3
   43ff4:	bne	44024 <flatcc_json_printer_int8_field@@Base+0x84>
   43ff8:	ldr	r3, [fp, #-16]
   43ffc:	ldrb	r3, [r3, #28]
   44000:	cmp	r3, #0
   44004:	beq	44024 <flatcc_json_printer_int8_field@@Base+0x84>
   44008:	b	440a8 <flatcc_json_printer_int8_field@@Base+0x108>
   4400c:	ldr	r3, [fp, #-16]
   44010:	ldrb	r3, [r3, #29]
   44014:	cmp	r3, #0
   44018:	beq	440a4 <flatcc_json_printer_int8_field@@Base+0x104>
   4401c:	ldrb	r3, [fp, #8]
   44020:	strb	r3, [fp, #-5]
   44024:	ldr	r3, [fp, #-20]	; 0xffffffec
   44028:	ldr	r3, [r3, #16]
   4402c:	add	r1, r3, #1
   44030:	ldr	r2, [fp, #-20]	; 0xffffffec
   44034:	str	r1, [r2, #16]
   44038:	cmp	r3, #0
   4403c:	beq	4405c <flatcc_json_printer_int8_field@@Base+0xbc>
   44040:	ldr	r3, [fp, #-16]
   44044:	ldr	r3, [r3, #20]
   44048:	add	r1, r3, #1
   4404c:	ldr	r2, [fp, #-16]
   44050:	str	r1, [r2, #20]
   44054:	mov	r2, #44	; 0x2c
   44058:	strb	r2, [r3]
   4405c:	ldr	r3, [fp, #4]
   44060:	mov	r2, r3
   44064:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44068:	ldr	r0, [fp, #-16]
   4406c:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   44070:	ldr	r3, [fp, #-16]
   44074:	ldr	r2, [r3, #20]
   44078:	ldrsb	r3, [fp, #-5]
   4407c:	mov	r1, r2
   44080:	mov	r0, r3
   44084:	bl	3fa3c <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   44088:	mov	r2, r0
   4408c:	ldr	r3, [fp, #-16]
   44090:	ldr	r3, [r3, #20]
   44094:	add	r2, r3, r2
   44098:	ldr	r3, [fp, #-16]
   4409c:	str	r2, [r3, #20]
   440a0:	b	440a8 <flatcc_json_printer_int8_field@@Base+0x108>
   440a4:	nop			; (mov r0, r0)
   440a8:	sub	sp, fp, #4
   440ac:	pop	{fp, pc}

000440b0 <flatcc_json_printer_int16_field@@Base>:
   440b0:	push	{fp, lr}
   440b4:	add	fp, sp, #4
   440b8:	sub	sp, sp, #24
   440bc:	str	r0, [fp, #-16]
   440c0:	str	r1, [fp, #-20]	; 0xffffffec
   440c4:	str	r2, [fp, #-24]	; 0xffffffe8
   440c8:	str	r3, [fp, #-28]	; 0xffffffe4
   440cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   440d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   440d4:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   440d8:	str	r0, [fp, #-12]
   440dc:	ldr	r3, [fp, #-12]
   440e0:	cmp	r3, #0
   440e4:	beq	4411c <flatcc_json_printer_int16_field@@Base+0x6c>
   440e8:	ldr	r0, [fp, #-12]
   440ec:	bl	3de90 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   440f0:	mov	r3, r0
   440f4:	strh	r3, [fp, #-6]
   440f8:	ldrsh	r2, [fp, #-6]
   440fc:	ldrsh	r3, [fp, #8]
   44100:	cmp	r2, r3
   44104:	bne	44134 <flatcc_json_printer_int16_field@@Base+0x84>
   44108:	ldr	r3, [fp, #-16]
   4410c:	ldrb	r3, [r3, #28]
   44110:	cmp	r3, #0
   44114:	beq	44134 <flatcc_json_printer_int16_field@@Base+0x84>
   44118:	b	441b8 <flatcc_json_printer_int16_field@@Base+0x108>
   4411c:	ldr	r3, [fp, #-16]
   44120:	ldrb	r3, [r3, #29]
   44124:	cmp	r3, #0
   44128:	beq	441b4 <flatcc_json_printer_int16_field@@Base+0x104>
   4412c:	ldrh	r3, [fp, #8]
   44130:	strh	r3, [fp, #-6]
   44134:	ldr	r3, [fp, #-20]	; 0xffffffec
   44138:	ldr	r3, [r3, #16]
   4413c:	add	r1, r3, #1
   44140:	ldr	r2, [fp, #-20]	; 0xffffffec
   44144:	str	r1, [r2, #16]
   44148:	cmp	r3, #0
   4414c:	beq	4416c <flatcc_json_printer_int16_field@@Base+0xbc>
   44150:	ldr	r3, [fp, #-16]
   44154:	ldr	r3, [r3, #20]
   44158:	add	r1, r3, #1
   4415c:	ldr	r2, [fp, #-16]
   44160:	str	r1, [r2, #20]
   44164:	mov	r2, #44	; 0x2c
   44168:	strb	r2, [r3]
   4416c:	ldr	r3, [fp, #4]
   44170:	mov	r2, r3
   44174:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44178:	ldr	r0, [fp, #-16]
   4417c:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   44180:	ldr	r3, [fp, #-16]
   44184:	ldr	r2, [r3, #20]
   44188:	ldrsh	r3, [fp, #-6]
   4418c:	mov	r1, r2
   44190:	mov	r0, r3
   44194:	bl	3fabc <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   44198:	mov	r2, r0
   4419c:	ldr	r3, [fp, #-16]
   441a0:	ldr	r3, [r3, #20]
   441a4:	add	r2, r3, r2
   441a8:	ldr	r3, [fp, #-16]
   441ac:	str	r2, [r3, #20]
   441b0:	b	441b8 <flatcc_json_printer_int16_field@@Base+0x108>
   441b4:	nop			; (mov r0, r0)
   441b8:	sub	sp, fp, #4
   441bc:	pop	{fp, pc}

000441c0 <flatcc_json_printer_int32_field@@Base>:
   441c0:	push	{fp, lr}
   441c4:	add	fp, sp, #4
   441c8:	sub	sp, sp, #24
   441cc:	str	r0, [fp, #-16]
   441d0:	str	r1, [fp, #-20]	; 0xffffffec
   441d4:	str	r2, [fp, #-24]	; 0xffffffe8
   441d8:	str	r3, [fp, #-28]	; 0xffffffe4
   441dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   441e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   441e4:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   441e8:	str	r0, [fp, #-12]
   441ec:	ldr	r3, [fp, #-12]
   441f0:	cmp	r3, #0
   441f4:	beq	44228 <flatcc_json_printer_int32_field@@Base+0x68>
   441f8:	ldr	r0, [fp, #-12]
   441fc:	bl	3dee4 <flatcc_json_parser_struct_as_root@@Base+0x360>
   44200:	str	r0, [fp, #-8]
   44204:	ldr	r2, [fp, #-8]
   44208:	ldr	r3, [fp, #8]
   4420c:	cmp	r2, r3
   44210:	bne	44240 <flatcc_json_printer_int32_field@@Base+0x80>
   44214:	ldr	r3, [fp, #-16]
   44218:	ldrb	r3, [r3, #28]
   4421c:	cmp	r3, #0
   44220:	beq	44240 <flatcc_json_printer_int32_field@@Base+0x80>
   44224:	b	442c0 <flatcc_json_printer_int32_field@@Base+0x100>
   44228:	ldr	r3, [fp, #-16]
   4422c:	ldrb	r3, [r3, #29]
   44230:	cmp	r3, #0
   44234:	beq	442bc <flatcc_json_printer_int32_field@@Base+0xfc>
   44238:	ldr	r3, [fp, #8]
   4423c:	str	r3, [fp, #-8]
   44240:	ldr	r3, [fp, #-20]	; 0xffffffec
   44244:	ldr	r3, [r3, #16]
   44248:	add	r1, r3, #1
   4424c:	ldr	r2, [fp, #-20]	; 0xffffffec
   44250:	str	r1, [r2, #16]
   44254:	cmp	r3, #0
   44258:	beq	44278 <flatcc_json_printer_int32_field@@Base+0xb8>
   4425c:	ldr	r3, [fp, #-16]
   44260:	ldr	r3, [r3, #20]
   44264:	add	r1, r3, #1
   44268:	ldr	r2, [fp, #-16]
   4426c:	str	r1, [r2, #20]
   44270:	mov	r2, #44	; 0x2c
   44274:	strb	r2, [r3]
   44278:	ldr	r3, [fp, #4]
   4427c:	mov	r2, r3
   44280:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44284:	ldr	r0, [fp, #-16]
   44288:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4428c:	ldr	r3, [fp, #-16]
   44290:	ldr	r3, [r3, #20]
   44294:	mov	r1, r3
   44298:	ldr	r0, [fp, #-8]
   4429c:	bl	3fb3c <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   442a0:	mov	r2, r0
   442a4:	ldr	r3, [fp, #-16]
   442a8:	ldr	r3, [r3, #20]
   442ac:	add	r2, r3, r2
   442b0:	ldr	r3, [fp, #-16]
   442b4:	str	r2, [r3, #20]
   442b8:	b	442c0 <flatcc_json_printer_int32_field@@Base+0x100>
   442bc:	nop			; (mov r0, r0)
   442c0:	sub	sp, fp, #4
   442c4:	pop	{fp, pc}

000442c8 <flatcc_json_printer_int64_field@@Base>:
   442c8:	push	{fp, lr}
   442cc:	add	fp, sp, #4
   442d0:	sub	sp, sp, #32
   442d4:	str	r0, [fp, #-24]	; 0xffffffe8
   442d8:	str	r1, [fp, #-28]	; 0xffffffe4
   442dc:	str	r2, [fp, #-32]	; 0xffffffe0
   442e0:	str	r3, [fp, #-36]	; 0xffffffdc
   442e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   442e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   442ec:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   442f0:	str	r0, [fp, #-16]
   442f4:	ldr	r3, [fp, #-16]
   442f8:	cmp	r3, #0
   442fc:	beq	44334 <flatcc_json_printer_int64_field@@Base+0x6c>
   44300:	ldr	r0, [fp, #-16]
   44304:	bl	3df3c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   44308:	strd	r0, [fp, #-12]
   4430c:	ldrd	r0, [fp, #-12]
   44310:	ldrd	r2, [fp, #12]
   44314:	cmp	r1, r3
   44318:	cmpeq	r0, r2
   4431c:	bne	4434c <flatcc_json_printer_int64_field@@Base+0x84>
   44320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44324:	ldrb	r3, [r3, #28]
   44328:	cmp	r3, #0
   4432c:	beq	4434c <flatcc_json_printer_int64_field@@Base+0x84>
   44330:	b	443cc <flatcc_json_printer_int64_field@@Base+0x104>
   44334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44338:	ldrb	r3, [r3, #29]
   4433c:	cmp	r3, #0
   44340:	beq	443c8 <flatcc_json_printer_int64_field@@Base+0x100>
   44344:	ldrd	r2, [fp, #12]
   44348:	strd	r2, [fp, #-12]
   4434c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44350:	ldr	r3, [r3, #16]
   44354:	add	r1, r3, #1
   44358:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4435c:	str	r1, [r2, #16]
   44360:	cmp	r3, #0
   44364:	beq	44384 <flatcc_json_printer_int64_field@@Base+0xbc>
   44368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4436c:	ldr	r3, [r3, #20]
   44370:	add	r1, r3, #1
   44374:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44378:	str	r1, [r2, #20]
   4437c:	mov	r2, #44	; 0x2c
   44380:	strb	r2, [r3]
   44384:	ldr	r3, [fp, #4]
   44388:	mov	r2, r3
   4438c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   44390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   44394:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   44398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4439c:	ldr	r3, [r3, #20]
   443a0:	mov	r2, r3
   443a4:	ldrd	r0, [fp, #-12]
   443a8:	bl	3fbb4 <flatcc_json_parser_struct_as_root@@Base+0x2030>
   443ac:	mov	r2, r0
   443b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   443b4:	ldr	r3, [r3, #20]
   443b8:	add	r2, r3, r2
   443bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   443c0:	str	r2, [r3, #20]
   443c4:	b	443cc <flatcc_json_printer_int64_field@@Base+0x104>
   443c8:	nop			; (mov r0, r0)
   443cc:	sub	sp, fp, #4
   443d0:	pop	{fp, pc}

000443d4 <flatcc_json_printer_bool_field@@Base>:
   443d4:	push	{fp, lr}
   443d8:	add	fp, sp, #4
   443dc:	sub	sp, sp, #24
   443e0:	str	r0, [fp, #-16]
   443e4:	str	r1, [fp, #-20]	; 0xffffffec
   443e8:	str	r2, [fp, #-24]	; 0xffffffe8
   443ec:	str	r3, [fp, #-28]	; 0xffffffe4
   443f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   443f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   443f8:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   443fc:	str	r0, [fp, #-12]
   44400:	ldr	r3, [fp, #-12]
   44404:	cmp	r3, #0
   44408:	beq	44440 <flatcc_json_printer_bool_field@@Base+0x6c>
   4440c:	ldr	r0, [fp, #-12]
   44410:	bl	3e070 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   44414:	mov	r3, r0
   44418:	strb	r3, [fp, #-5]
   4441c:	ldrb	r2, [fp, #-5]
   44420:	ldrb	r3, [fp, #8]
   44424:	cmp	r2, r3
   44428:	bne	44458 <flatcc_json_printer_bool_field@@Base+0x84>
   4442c:	ldr	r3, [fp, #-16]
   44430:	ldrb	r3, [r3, #28]
   44434:	cmp	r3, #0
   44438:	beq	44458 <flatcc_json_printer_bool_field@@Base+0x84>
   4443c:	b	444dc <flatcc_json_printer_bool_field@@Base+0x108>
   44440:	ldr	r3, [fp, #-16]
   44444:	ldrb	r3, [r3, #29]
   44448:	cmp	r3, #0
   4444c:	beq	444d8 <flatcc_json_printer_bool_field@@Base+0x104>
   44450:	ldrb	r3, [fp, #8]
   44454:	strb	r3, [fp, #-5]
   44458:	ldr	r3, [fp, #-20]	; 0xffffffec
   4445c:	ldr	r3, [r3, #16]
   44460:	add	r1, r3, #1
   44464:	ldr	r2, [fp, #-20]	; 0xffffffec
   44468:	str	r1, [r2, #16]
   4446c:	cmp	r3, #0
   44470:	beq	44490 <flatcc_json_printer_bool_field@@Base+0xbc>
   44474:	ldr	r3, [fp, #-16]
   44478:	ldr	r3, [r3, #20]
   4447c:	add	r1, r3, #1
   44480:	ldr	r2, [fp, #-16]
   44484:	str	r1, [r2, #20]
   44488:	mov	r2, #44	; 0x2c
   4448c:	strb	r2, [r3]
   44490:	ldr	r3, [fp, #4]
   44494:	mov	r2, r3
   44498:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4449c:	ldr	r0, [fp, #-16]
   444a0:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   444a4:	ldrb	r2, [fp, #-5]
   444a8:	ldr	r3, [fp, #-16]
   444ac:	ldr	r3, [r3, #20]
   444b0:	mov	r1, r3
   444b4:	mov	r0, r2
   444b8:	bl	3e320 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   444bc:	mov	r2, r0
   444c0:	ldr	r3, [fp, #-16]
   444c4:	ldr	r3, [r3, #20]
   444c8:	add	r2, r3, r2
   444cc:	ldr	r3, [fp, #-16]
   444d0:	str	r2, [r3, #20]
   444d4:	b	444dc <flatcc_json_printer_bool_field@@Base+0x108>
   444d8:	nop			; (mov r0, r0)
   444dc:	sub	sp, fp, #4
   444e0:	pop	{fp, pc}

000444e4 <flatcc_json_printer_float_field@@Base>:
   444e4:	push	{fp, lr}
   444e8:	add	fp, sp, #4
   444ec:	sub	sp, sp, #32
   444f0:	str	r0, [fp, #-16]
   444f4:	str	r1, [fp, #-20]	; 0xffffffec
   444f8:	str	r2, [fp, #-24]	; 0xffffffe8
   444fc:	str	r3, [fp, #-28]	; 0xffffffe4
   44500:	vstr	s0, [fp, #-32]	; 0xffffffe0
   44504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44508:	ldr	r0, [fp, #-20]	; 0xffffffec
   4450c:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   44510:	str	r0, [fp, #-12]
   44514:	ldr	r3, [fp, #-12]
   44518:	cmp	r3, #0
   4451c:	beq	44554 <flatcc_json_printer_float_field@@Base+0x70>
   44520:	ldr	r0, [fp, #-12]
   44524:	bl	3dfb0 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   44528:	vstr	s0, [fp, #-8]
   4452c:	vldr	s14, [fp, #-8]
   44530:	vldr	s15, [fp, #-32]	; 0xffffffe0
   44534:	vcmp.f32	s14, s15
   44538:	vmrs	APSR_nzcv, fpscr
   4453c:	bne	4456c <flatcc_json_printer_float_field@@Base+0x88>
   44540:	ldr	r3, [fp, #-16]
   44544:	ldrb	r3, [r3, #28]
   44548:	cmp	r3, #0
   4454c:	beq	4456c <flatcc_json_printer_float_field@@Base+0x88>
   44550:	b	445f4 <flatcc_json_printer_float_field@@Base+0x110>
   44554:	ldr	r3, [fp, #-16]
   44558:	ldrb	r3, [r3, #29]
   4455c:	cmp	r3, #0
   44560:	beq	445f0 <flatcc_json_printer_float_field@@Base+0x10c>
   44564:	ldr	r3, [fp, #-32]	; 0xffffffe0
   44568:	str	r3, [fp, #-8]
   4456c:	ldr	r3, [fp, #-20]	; 0xffffffec
   44570:	ldr	r3, [r3, #16]
   44574:	add	r1, r3, #1
   44578:	ldr	r2, [fp, #-20]	; 0xffffffec
   4457c:	str	r1, [r2, #16]
   44580:	cmp	r3, #0
   44584:	beq	445a4 <flatcc_json_printer_float_field@@Base+0xc0>
   44588:	ldr	r3, [fp, #-16]
   4458c:	ldr	r3, [r3, #20]
   44590:	add	r1, r3, #1
   44594:	ldr	r2, [fp, #-16]
   44598:	str	r1, [r2, #20]
   4459c:	mov	r2, #44	; 0x2c
   445a0:	strb	r2, [r3]
   445a4:	ldr	r3, [fp, #4]
   445a8:	mov	r2, r3
   445ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   445b0:	ldr	r0, [fp, #-16]
   445b4:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   445b8:	vldr	s15, [fp, #-8]
   445bc:	vcvt.f64.f32	d7, s15
   445c0:	ldr	r3, [fp, #-16]
   445c4:	ldr	r3, [r3, #20]
   445c8:	mov	r0, r3
   445cc:	vmov.f64	d0, d7
   445d0:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   445d4:	mov	r2, r0
   445d8:	ldr	r3, [fp, #-16]
   445dc:	ldr	r3, [r3, #20]
   445e0:	add	r2, r3, r2
   445e4:	ldr	r3, [fp, #-16]
   445e8:	str	r2, [r3, #20]
   445ec:	b	445f4 <flatcc_json_printer_float_field@@Base+0x110>
   445f0:	nop			; (mov r0, r0)
   445f4:	sub	sp, fp, #4
   445f8:	pop	{fp, pc}

000445fc <flatcc_json_printer_double_field@@Base>:
   445fc:	push	{fp, lr}
   44600:	add	fp, sp, #4
   44604:	sub	sp, sp, #40	; 0x28
   44608:	str	r0, [fp, #-24]	; 0xffffffe8
   4460c:	str	r1, [fp, #-28]	; 0xffffffe4
   44610:	str	r2, [fp, #-32]	; 0xffffffe0
   44614:	str	r3, [fp, #-36]	; 0xffffffdc
   44618:	vstr	d0, [fp, #-44]	; 0xffffffd4
   4461c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   44620:	ldr	r0, [fp, #-28]	; 0xffffffe4
   44624:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   44628:	str	r0, [fp, #-16]
   4462c:	ldr	r3, [fp, #-16]
   44630:	cmp	r3, #0
   44634:	beq	4466c <flatcc_json_printer_double_field@@Base+0x70>
   44638:	ldr	r0, [fp, #-16]
   4463c:	bl	3e018 <flatcc_json_parser_struct_as_root@@Base+0x494>
   44640:	vstr	d0, [fp, #-12]
   44644:	vldr	d6, [fp, #-12]
   44648:	vldr	d7, [fp, #-44]	; 0xffffffd4
   4464c:	vcmp.f64	d6, d7
   44650:	vmrs	APSR_nzcv, fpscr
   44654:	bne	44684 <flatcc_json_printer_double_field@@Base+0x88>
   44658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4465c:	ldrb	r3, [r3, #28]
   44660:	cmp	r3, #0
   44664:	beq	44684 <flatcc_json_printer_double_field@@Base+0x88>
   44668:	b	44704 <flatcc_json_printer_double_field@@Base+0x108>
   4466c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44670:	ldrb	r3, [r3, #29]
   44674:	cmp	r3, #0
   44678:	beq	44700 <flatcc_json_printer_double_field@@Base+0x104>
   4467c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   44680:	strd	r2, [fp, #-12]
   44684:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44688:	ldr	r3, [r3, #16]
   4468c:	add	r1, r3, #1
   44690:	ldr	r2, [fp, #-28]	; 0xffffffe4
   44694:	str	r1, [r2, #16]
   44698:	cmp	r3, #0
   4469c:	beq	446bc <flatcc_json_printer_double_field@@Base+0xc0>
   446a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   446a4:	ldr	r3, [r3, #20]
   446a8:	add	r1, r3, #1
   446ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   446b0:	str	r1, [r2, #20]
   446b4:	mov	r2, #44	; 0x2c
   446b8:	strb	r2, [r3]
   446bc:	ldr	r3, [fp, #4]
   446c0:	mov	r2, r3
   446c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   446c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   446cc:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   446d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   446d4:	ldr	r3, [r3, #20]
   446d8:	mov	r0, r3
   446dc:	vldr	d0, [fp, #-12]
   446e0:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   446e4:	mov	r2, r0
   446e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   446ec:	ldr	r3, [r3, #20]
   446f0:	add	r2, r3, r2
   446f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   446f8:	str	r2, [r3, #20]
   446fc:	b	44704 <flatcc_json_printer_double_field@@Base+0x108>
   44700:	nop			; (mov r0, r0)
   44704:	sub	sp, fp, #4
   44708:	pop	{fp, pc}

0004470c <flatcc_json_printer_uint8_enum_field@@Base>:
   4470c:	push	{fp, lr}
   44710:	add	fp, sp, #4
   44714:	sub	sp, sp, #24
   44718:	str	r0, [fp, #-16]
   4471c:	str	r1, [fp, #-20]	; 0xffffffec
   44720:	str	r2, [fp, #-24]	; 0xffffffe8
   44724:	str	r3, [fp, #-28]	; 0xffffffe4
   44728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4472c:	ldr	r0, [fp, #-20]	; 0xffffffec
   44730:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   44734:	str	r0, [fp, #-12]
   44738:	ldr	r3, [fp, #-12]
   4473c:	cmp	r3, #0
   44740:	beq	44778 <flatcc_json_printer_uint8_enum_field@@Base+0x6c>
   44744:	ldr	r0, [fp, #-12]
   44748:	bl	3dcd0 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   4474c:	mov	r3, r0
   44750:	strb	r3, [fp, #-5]
   44754:	ldrb	r2, [fp, #-5]
   44758:	ldrb	r3, [fp, #8]
   4475c:	cmp	r2, r3
   44760:	bne	44790 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   44764:	ldr	r3, [fp, #-16]
   44768:	ldrb	r3, [r3, #28]
   4476c:	cmp	r3, #0
   44770:	beq	44790 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   44774:	b	4483c <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   44778:	ldr	r3, [fp, #-16]
   4477c:	ldrb	r3, [r3, #29]
   44780:	cmp	r3, #0
   44784:	beq	44838 <flatcc_json_printer_uint8_enum_field@@Base+0x12c>
   44788:	ldrb	r3, [fp, #8]
   4478c:	strb	r3, [fp, #-5]
   44790:	ldr	r3, [fp, #-20]	; 0xffffffec
   44794:	ldr	r3, [r3, #16]
   44798:	add	r1, r3, #1
   4479c:	ldr	r2, [fp, #-20]	; 0xffffffec
   447a0:	str	r1, [r2, #16]
   447a4:	cmp	r3, #0
   447a8:	beq	447c8 <flatcc_json_printer_uint8_enum_field@@Base+0xbc>
   447ac:	ldr	r3, [fp, #-16]
   447b0:	ldr	r3, [r3, #20]
   447b4:	add	r1, r3, #1
   447b8:	ldr	r2, [fp, #-16]
   447bc:	str	r1, [r2, #20]
   447c0:	mov	r2, #44	; 0x2c
   447c4:	strb	r2, [r3]
   447c8:	ldr	r3, [fp, #4]
   447cc:	mov	r2, r3
   447d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   447d4:	ldr	r0, [fp, #-16]
   447d8:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   447dc:	ldr	r3, [fp, #-16]
   447e0:	ldrb	r3, [r3, #27]
   447e4:	cmp	r3, #0
   447e8:	beq	44820 <flatcc_json_printer_uint8_enum_field@@Base+0x114>
   447ec:	ldr	r3, [fp, #-16]
   447f0:	ldr	r2, [r3, #20]
   447f4:	ldrb	r3, [fp, #-5]
   447f8:	mov	r1, r2
   447fc:	mov	r0, r3
   44800:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   44804:	mov	r2, r0
   44808:	ldr	r3, [fp, #-16]
   4480c:	ldr	r3, [r3, #20]
   44810:	add	r2, r3, r2
   44814:	ldr	r3, [fp, #-16]
   44818:	str	r2, [r3, #20]
   4481c:	b	4483c <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   44820:	ldrb	r2, [fp, #-5]
   44824:	ldr	r3, [fp, #12]
   44828:	mov	r1, r2
   4482c:	ldr	r0, [fp, #-16]
   44830:	blx	r3
   44834:	b	4483c <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   44838:	nop			; (mov r0, r0)
   4483c:	sub	sp, fp, #4
   44840:	pop	{fp, pc}

00044844 <flatcc_json_printer_uint16_enum_field@@Base>:
   44844:	push	{fp, lr}
   44848:	add	fp, sp, #4
   4484c:	sub	sp, sp, #24
   44850:	str	r0, [fp, #-16]
   44854:	str	r1, [fp, #-20]	; 0xffffffec
   44858:	str	r2, [fp, #-24]	; 0xffffffe8
   4485c:	str	r3, [fp, #-28]	; 0xffffffe4
   44860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44864:	ldr	r0, [fp, #-20]	; 0xffffffec
   44868:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4486c:	str	r0, [fp, #-12]
   44870:	ldr	r3, [fp, #-12]
   44874:	cmp	r3, #0
   44878:	beq	448b0 <flatcc_json_printer_uint16_enum_field@@Base+0x6c>
   4487c:	ldr	r0, [fp, #-12]
   44880:	bl	3dd28 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   44884:	mov	r3, r0
   44888:	strh	r3, [fp, #-6]
   4488c:	ldrh	r2, [fp, #-6]
   44890:	ldrh	r3, [fp, #8]
   44894:	cmp	r2, r3
   44898:	bne	448c8 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   4489c:	ldr	r3, [fp, #-16]
   448a0:	ldrb	r3, [r3, #28]
   448a4:	cmp	r3, #0
   448a8:	beq	448c8 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   448ac:	b	44974 <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   448b0:	ldr	r3, [fp, #-16]
   448b4:	ldrb	r3, [r3, #29]
   448b8:	cmp	r3, #0
   448bc:	beq	44970 <flatcc_json_printer_uint16_enum_field@@Base+0x12c>
   448c0:	ldrh	r3, [fp, #8]
   448c4:	strh	r3, [fp, #-6]
   448c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   448cc:	ldr	r3, [r3, #16]
   448d0:	add	r1, r3, #1
   448d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   448d8:	str	r1, [r2, #16]
   448dc:	cmp	r3, #0
   448e0:	beq	44900 <flatcc_json_printer_uint16_enum_field@@Base+0xbc>
   448e4:	ldr	r3, [fp, #-16]
   448e8:	ldr	r3, [r3, #20]
   448ec:	add	r1, r3, #1
   448f0:	ldr	r2, [fp, #-16]
   448f4:	str	r1, [r2, #20]
   448f8:	mov	r2, #44	; 0x2c
   448fc:	strb	r2, [r3]
   44900:	ldr	r3, [fp, #4]
   44904:	mov	r2, r3
   44908:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4490c:	ldr	r0, [fp, #-16]
   44910:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   44914:	ldr	r3, [fp, #-16]
   44918:	ldrb	r3, [r3, #27]
   4491c:	cmp	r3, #0
   44920:	beq	44958 <flatcc_json_printer_uint16_enum_field@@Base+0x114>
   44924:	ldr	r3, [fp, #-16]
   44928:	ldr	r2, [r3, #20]
   4492c:	ldrh	r3, [fp, #-6]
   44930:	mov	r1, r2
   44934:	mov	r0, r3
   44938:	bl	3e554 <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   4493c:	mov	r2, r0
   44940:	ldr	r3, [fp, #-16]
   44944:	ldr	r3, [r3, #20]
   44948:	add	r2, r3, r2
   4494c:	ldr	r3, [fp, #-16]
   44950:	str	r2, [r3, #20]
   44954:	b	44974 <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   44958:	ldrh	r2, [fp, #-6]
   4495c:	ldr	r3, [fp, #12]
   44960:	mov	r1, r2
   44964:	ldr	r0, [fp, #-16]
   44968:	blx	r3
   4496c:	b	44974 <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   44970:	nop			; (mov r0, r0)
   44974:	sub	sp, fp, #4
   44978:	pop	{fp, pc}

0004497c <flatcc_json_printer_uint32_enum_field@@Base>:
   4497c:	push	{fp, lr}
   44980:	add	fp, sp, #4
   44984:	sub	sp, sp, #24
   44988:	str	r0, [fp, #-16]
   4498c:	str	r1, [fp, #-20]	; 0xffffffec
   44990:	str	r2, [fp, #-24]	; 0xffffffe8
   44994:	str	r3, [fp, #-28]	; 0xffffffe4
   44998:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4499c:	ldr	r0, [fp, #-20]	; 0xffffffec
   449a0:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   449a4:	str	r0, [fp, #-12]
   449a8:	ldr	r3, [fp, #-12]
   449ac:	cmp	r3, #0
   449b0:	beq	449e4 <flatcc_json_printer_uint32_enum_field@@Base+0x68>
   449b4:	ldr	r0, [fp, #-12]
   449b8:	bl	3dd7c <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   449bc:	str	r0, [fp, #-8]
   449c0:	ldr	r2, [fp, #-8]
   449c4:	ldr	r3, [fp, #8]
   449c8:	cmp	r2, r3
   449cc:	bne	449fc <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   449d0:	ldr	r3, [fp, #-16]
   449d4:	ldrb	r3, [r3, #28]
   449d8:	cmp	r3, #0
   449dc:	beq	449fc <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   449e0:	b	44aa0 <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   449e4:	ldr	r3, [fp, #-16]
   449e8:	ldrb	r3, [r3, #29]
   449ec:	cmp	r3, #0
   449f0:	beq	44a9c <flatcc_json_printer_uint32_enum_field@@Base+0x120>
   449f4:	ldr	r3, [fp, #8]
   449f8:	str	r3, [fp, #-8]
   449fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   44a00:	ldr	r3, [r3, #16]
   44a04:	add	r1, r3, #1
   44a08:	ldr	r2, [fp, #-20]	; 0xffffffec
   44a0c:	str	r1, [r2, #16]
   44a10:	cmp	r3, #0
   44a14:	beq	44a34 <flatcc_json_printer_uint32_enum_field@@Base+0xb8>
   44a18:	ldr	r3, [fp, #-16]
   44a1c:	ldr	r3, [r3, #20]
   44a20:	add	r1, r3, #1
   44a24:	ldr	r2, [fp, #-16]
   44a28:	str	r1, [r2, #20]
   44a2c:	mov	r2, #44	; 0x2c
   44a30:	strb	r2, [r3]
   44a34:	ldr	r3, [fp, #4]
   44a38:	mov	r2, r3
   44a3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44a40:	ldr	r0, [fp, #-16]
   44a44:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   44a48:	ldr	r3, [fp, #-16]
   44a4c:	ldrb	r3, [r3, #27]
   44a50:	cmp	r3, #0
   44a54:	beq	44a88 <flatcc_json_printer_uint32_enum_field@@Base+0x10c>
   44a58:	ldr	r3, [fp, #-16]
   44a5c:	ldr	r3, [r3, #20]
   44a60:	mov	r1, r3
   44a64:	ldr	r0, [fp, #-8]
   44a68:	bl	3e87c <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   44a6c:	mov	r2, r0
   44a70:	ldr	r3, [fp, #-16]
   44a74:	ldr	r3, [r3, #20]
   44a78:	add	r2, r3, r2
   44a7c:	ldr	r3, [fp, #-16]
   44a80:	str	r2, [r3, #20]
   44a84:	b	44aa0 <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   44a88:	ldr	r3, [fp, #12]
   44a8c:	ldr	r1, [fp, #-8]
   44a90:	ldr	r0, [fp, #-16]
   44a94:	blx	r3
   44a98:	b	44aa0 <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   44a9c:	nop			; (mov r0, r0)
   44aa0:	sub	sp, fp, #4
   44aa4:	pop	{fp, pc}

00044aa8 <flatcc_json_printer_uint64_enum_field@@Base>:
   44aa8:	push	{fp, lr}
   44aac:	add	fp, sp, #4
   44ab0:	sub	sp, sp, #32
   44ab4:	str	r0, [fp, #-24]	; 0xffffffe8
   44ab8:	str	r1, [fp, #-28]	; 0xffffffe4
   44abc:	str	r2, [fp, #-32]	; 0xffffffe0
   44ac0:	str	r3, [fp, #-36]	; 0xffffffdc
   44ac4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   44ac8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   44acc:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   44ad0:	str	r0, [fp, #-16]
   44ad4:	ldr	r3, [fp, #-16]
   44ad8:	cmp	r3, #0
   44adc:	beq	44b14 <flatcc_json_printer_uint64_enum_field@@Base+0x6c>
   44ae0:	ldr	r0, [fp, #-16]
   44ae4:	bl	3ddd4 <flatcc_json_parser_struct_as_root@@Base+0x250>
   44ae8:	strd	r0, [fp, #-12]
   44aec:	ldrd	r0, [fp, #-12]
   44af0:	ldrd	r2, [fp, #12]
   44af4:	cmp	r1, r3
   44af8:	cmpeq	r0, r2
   44afc:	bne	44b2c <flatcc_json_printer_uint64_enum_field@@Base+0x84>
   44b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44b04:	ldrb	r3, [r3, #28]
   44b08:	cmp	r3, #0
   44b0c:	beq	44b2c <flatcc_json_printer_uint64_enum_field@@Base+0x84>
   44b10:	b	44bd0 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   44b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44b18:	ldrb	r3, [r3, #29]
   44b1c:	cmp	r3, #0
   44b20:	beq	44bcc <flatcc_json_printer_uint64_enum_field@@Base+0x124>
   44b24:	ldrd	r2, [fp, #12]
   44b28:	strd	r2, [fp, #-12]
   44b2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44b30:	ldr	r3, [r3, #16]
   44b34:	add	r1, r3, #1
   44b38:	ldr	r2, [fp, #-28]	; 0xffffffe4
   44b3c:	str	r1, [r2, #16]
   44b40:	cmp	r3, #0
   44b44:	beq	44b64 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   44b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44b4c:	ldr	r3, [r3, #20]
   44b50:	add	r1, r3, #1
   44b54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44b58:	str	r1, [r2, #20]
   44b5c:	mov	r2, #44	; 0x2c
   44b60:	strb	r2, [r3]
   44b64:	ldr	r3, [fp, #4]
   44b68:	mov	r2, r3
   44b6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   44b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   44b74:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   44b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44b7c:	ldrb	r3, [r3, #27]
   44b80:	cmp	r3, #0
   44b84:	beq	44bb8 <flatcc_json_printer_uint64_enum_field@@Base+0x110>
   44b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44b8c:	ldr	r3, [r3, #20]
   44b90:	mov	r2, r3
   44b94:	ldrd	r0, [fp, #-12]
   44b98:	bl	3eeb4 <flatcc_json_parser_struct_as_root@@Base+0x1330>
   44b9c:	mov	r2, r0
   44ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44ba4:	ldr	r3, [r3, #20]
   44ba8:	add	r2, r3, r2
   44bac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44bb0:	str	r2, [r3, #20]
   44bb4:	b	44bd0 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   44bb8:	ldr	r1, [fp, #20]
   44bbc:	ldrd	r2, [fp, #-12]
   44bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   44bc4:	blx	r1
   44bc8:	b	44bd0 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   44bcc:	nop			; (mov r0, r0)
   44bd0:	sub	sp, fp, #4
   44bd4:	pop	{fp, pc}

00044bd8 <flatcc_json_printer_int8_enum_field@@Base>:
   44bd8:	push	{fp, lr}
   44bdc:	add	fp, sp, #4
   44be0:	sub	sp, sp, #24
   44be4:	str	r0, [fp, #-16]
   44be8:	str	r1, [fp, #-20]	; 0xffffffec
   44bec:	str	r2, [fp, #-24]	; 0xffffffe8
   44bf0:	str	r3, [fp, #-28]	; 0xffffffe4
   44bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   44bfc:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   44c00:	str	r0, [fp, #-12]
   44c04:	ldr	r3, [fp, #-12]
   44c08:	cmp	r3, #0
   44c0c:	beq	44c44 <flatcc_json_printer_int8_enum_field@@Base+0x6c>
   44c10:	ldr	r0, [fp, #-12]
   44c14:	bl	3de38 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   44c18:	mov	r3, r0
   44c1c:	strb	r3, [fp, #-5]
   44c20:	ldrsb	r2, [fp, #-5]
   44c24:	ldrsb	r3, [fp, #8]
   44c28:	cmp	r2, r3
   44c2c:	bne	44c5c <flatcc_json_printer_int8_enum_field@@Base+0x84>
   44c30:	ldr	r3, [fp, #-16]
   44c34:	ldrb	r3, [r3, #28]
   44c38:	cmp	r3, #0
   44c3c:	beq	44c5c <flatcc_json_printer_int8_enum_field@@Base+0x84>
   44c40:	b	44d08 <flatcc_json_printer_int8_enum_field@@Base+0x130>
   44c44:	ldr	r3, [fp, #-16]
   44c48:	ldrb	r3, [r3, #29]
   44c4c:	cmp	r3, #0
   44c50:	beq	44d04 <flatcc_json_printer_int8_enum_field@@Base+0x12c>
   44c54:	ldrb	r3, [fp, #8]
   44c58:	strb	r3, [fp, #-5]
   44c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   44c60:	ldr	r3, [r3, #16]
   44c64:	add	r1, r3, #1
   44c68:	ldr	r2, [fp, #-20]	; 0xffffffec
   44c6c:	str	r1, [r2, #16]
   44c70:	cmp	r3, #0
   44c74:	beq	44c94 <flatcc_json_printer_int8_enum_field@@Base+0xbc>
   44c78:	ldr	r3, [fp, #-16]
   44c7c:	ldr	r3, [r3, #20]
   44c80:	add	r1, r3, #1
   44c84:	ldr	r2, [fp, #-16]
   44c88:	str	r1, [r2, #20]
   44c8c:	mov	r2, #44	; 0x2c
   44c90:	strb	r2, [r3]
   44c94:	ldr	r3, [fp, #4]
   44c98:	mov	r2, r3
   44c9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44ca0:	ldr	r0, [fp, #-16]
   44ca4:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   44ca8:	ldr	r3, [fp, #-16]
   44cac:	ldrb	r3, [r3, #27]
   44cb0:	cmp	r3, #0
   44cb4:	beq	44cec <flatcc_json_printer_int8_enum_field@@Base+0x114>
   44cb8:	ldr	r3, [fp, #-16]
   44cbc:	ldr	r2, [r3, #20]
   44cc0:	ldrsb	r3, [fp, #-5]
   44cc4:	mov	r1, r2
   44cc8:	mov	r0, r3
   44ccc:	bl	3fa3c <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   44cd0:	mov	r2, r0
   44cd4:	ldr	r3, [fp, #-16]
   44cd8:	ldr	r3, [r3, #20]
   44cdc:	add	r2, r3, r2
   44ce0:	ldr	r3, [fp, #-16]
   44ce4:	str	r2, [r3, #20]
   44ce8:	b	44d08 <flatcc_json_printer_int8_enum_field@@Base+0x130>
   44cec:	ldrsb	r2, [fp, #-5]
   44cf0:	ldr	r3, [fp, #12]
   44cf4:	mov	r1, r2
   44cf8:	ldr	r0, [fp, #-16]
   44cfc:	blx	r3
   44d00:	b	44d08 <flatcc_json_printer_int8_enum_field@@Base+0x130>
   44d04:	nop			; (mov r0, r0)
   44d08:	sub	sp, fp, #4
   44d0c:	pop	{fp, pc}

00044d10 <flatcc_json_printer_int16_enum_field@@Base>:
   44d10:	push	{fp, lr}
   44d14:	add	fp, sp, #4
   44d18:	sub	sp, sp, #24
   44d1c:	str	r0, [fp, #-16]
   44d20:	str	r1, [fp, #-20]	; 0xffffffec
   44d24:	str	r2, [fp, #-24]	; 0xffffffe8
   44d28:	str	r3, [fp, #-28]	; 0xffffffe4
   44d2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44d30:	ldr	r0, [fp, #-20]	; 0xffffffec
   44d34:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   44d38:	str	r0, [fp, #-12]
   44d3c:	ldr	r3, [fp, #-12]
   44d40:	cmp	r3, #0
   44d44:	beq	44d7c <flatcc_json_printer_int16_enum_field@@Base+0x6c>
   44d48:	ldr	r0, [fp, #-12]
   44d4c:	bl	3de90 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   44d50:	mov	r3, r0
   44d54:	strh	r3, [fp, #-6]
   44d58:	ldrsh	r2, [fp, #-6]
   44d5c:	ldrsh	r3, [fp, #8]
   44d60:	cmp	r2, r3
   44d64:	bne	44d94 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   44d68:	ldr	r3, [fp, #-16]
   44d6c:	ldrb	r3, [r3, #28]
   44d70:	cmp	r3, #0
   44d74:	beq	44d94 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   44d78:	b	44e40 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   44d7c:	ldr	r3, [fp, #-16]
   44d80:	ldrb	r3, [r3, #29]
   44d84:	cmp	r3, #0
   44d88:	beq	44e3c <flatcc_json_printer_int16_enum_field@@Base+0x12c>
   44d8c:	ldrh	r3, [fp, #8]
   44d90:	strh	r3, [fp, #-6]
   44d94:	ldr	r3, [fp, #-20]	; 0xffffffec
   44d98:	ldr	r3, [r3, #16]
   44d9c:	add	r1, r3, #1
   44da0:	ldr	r2, [fp, #-20]	; 0xffffffec
   44da4:	str	r1, [r2, #16]
   44da8:	cmp	r3, #0
   44dac:	beq	44dcc <flatcc_json_printer_int16_enum_field@@Base+0xbc>
   44db0:	ldr	r3, [fp, #-16]
   44db4:	ldr	r3, [r3, #20]
   44db8:	add	r1, r3, #1
   44dbc:	ldr	r2, [fp, #-16]
   44dc0:	str	r1, [r2, #20]
   44dc4:	mov	r2, #44	; 0x2c
   44dc8:	strb	r2, [r3]
   44dcc:	ldr	r3, [fp, #4]
   44dd0:	mov	r2, r3
   44dd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44dd8:	ldr	r0, [fp, #-16]
   44ddc:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   44de0:	ldr	r3, [fp, #-16]
   44de4:	ldrb	r3, [r3, #27]
   44de8:	cmp	r3, #0
   44dec:	beq	44e24 <flatcc_json_printer_int16_enum_field@@Base+0x114>
   44df0:	ldr	r3, [fp, #-16]
   44df4:	ldr	r2, [r3, #20]
   44df8:	ldrsh	r3, [fp, #-6]
   44dfc:	mov	r1, r2
   44e00:	mov	r0, r3
   44e04:	bl	3fabc <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   44e08:	mov	r2, r0
   44e0c:	ldr	r3, [fp, #-16]
   44e10:	ldr	r3, [r3, #20]
   44e14:	add	r2, r3, r2
   44e18:	ldr	r3, [fp, #-16]
   44e1c:	str	r2, [r3, #20]
   44e20:	b	44e40 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   44e24:	ldrsh	r2, [fp, #-6]
   44e28:	ldr	r3, [fp, #12]
   44e2c:	mov	r1, r2
   44e30:	ldr	r0, [fp, #-16]
   44e34:	blx	r3
   44e38:	b	44e40 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   44e3c:	nop			; (mov r0, r0)
   44e40:	sub	sp, fp, #4
   44e44:	pop	{fp, pc}

00044e48 <flatcc_json_printer_int32_enum_field@@Base>:
   44e48:	push	{fp, lr}
   44e4c:	add	fp, sp, #4
   44e50:	sub	sp, sp, #24
   44e54:	str	r0, [fp, #-16]
   44e58:	str	r1, [fp, #-20]	; 0xffffffec
   44e5c:	str	r2, [fp, #-24]	; 0xffffffe8
   44e60:	str	r3, [fp, #-28]	; 0xffffffe4
   44e64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   44e6c:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   44e70:	str	r0, [fp, #-12]
   44e74:	ldr	r3, [fp, #-12]
   44e78:	cmp	r3, #0
   44e7c:	beq	44eb0 <flatcc_json_printer_int32_enum_field@@Base+0x68>
   44e80:	ldr	r0, [fp, #-12]
   44e84:	bl	3dee4 <flatcc_json_parser_struct_as_root@@Base+0x360>
   44e88:	str	r0, [fp, #-8]
   44e8c:	ldr	r2, [fp, #-8]
   44e90:	ldr	r3, [fp, #8]
   44e94:	cmp	r2, r3
   44e98:	bne	44ec8 <flatcc_json_printer_int32_enum_field@@Base+0x80>
   44e9c:	ldr	r3, [fp, #-16]
   44ea0:	ldrb	r3, [r3, #28]
   44ea4:	cmp	r3, #0
   44ea8:	beq	44ec8 <flatcc_json_printer_int32_enum_field@@Base+0x80>
   44eac:	b	44f6c <flatcc_json_printer_int32_enum_field@@Base+0x124>
   44eb0:	ldr	r3, [fp, #-16]
   44eb4:	ldrb	r3, [r3, #29]
   44eb8:	cmp	r3, #0
   44ebc:	beq	44f68 <flatcc_json_printer_int32_enum_field@@Base+0x120>
   44ec0:	ldr	r3, [fp, #8]
   44ec4:	str	r3, [fp, #-8]
   44ec8:	ldr	r3, [fp, #-20]	; 0xffffffec
   44ecc:	ldr	r3, [r3, #16]
   44ed0:	add	r1, r3, #1
   44ed4:	ldr	r2, [fp, #-20]	; 0xffffffec
   44ed8:	str	r1, [r2, #16]
   44edc:	cmp	r3, #0
   44ee0:	beq	44f00 <flatcc_json_printer_int32_enum_field@@Base+0xb8>
   44ee4:	ldr	r3, [fp, #-16]
   44ee8:	ldr	r3, [r3, #20]
   44eec:	add	r1, r3, #1
   44ef0:	ldr	r2, [fp, #-16]
   44ef4:	str	r1, [r2, #20]
   44ef8:	mov	r2, #44	; 0x2c
   44efc:	strb	r2, [r3]
   44f00:	ldr	r3, [fp, #4]
   44f04:	mov	r2, r3
   44f08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44f0c:	ldr	r0, [fp, #-16]
   44f10:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   44f14:	ldr	r3, [fp, #-16]
   44f18:	ldrb	r3, [r3, #27]
   44f1c:	cmp	r3, #0
   44f20:	beq	44f54 <flatcc_json_printer_int32_enum_field@@Base+0x10c>
   44f24:	ldr	r3, [fp, #-16]
   44f28:	ldr	r3, [r3, #20]
   44f2c:	mov	r1, r3
   44f30:	ldr	r0, [fp, #-8]
   44f34:	bl	3fb3c <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   44f38:	mov	r2, r0
   44f3c:	ldr	r3, [fp, #-16]
   44f40:	ldr	r3, [r3, #20]
   44f44:	add	r2, r3, r2
   44f48:	ldr	r3, [fp, #-16]
   44f4c:	str	r2, [r3, #20]
   44f50:	b	44f6c <flatcc_json_printer_int32_enum_field@@Base+0x124>
   44f54:	ldr	r3, [fp, #12]
   44f58:	ldr	r1, [fp, #-8]
   44f5c:	ldr	r0, [fp, #-16]
   44f60:	blx	r3
   44f64:	b	44f6c <flatcc_json_printer_int32_enum_field@@Base+0x124>
   44f68:	nop			; (mov r0, r0)
   44f6c:	sub	sp, fp, #4
   44f70:	pop	{fp, pc}

00044f74 <flatcc_json_printer_int64_enum_field@@Base>:
   44f74:	push	{fp, lr}
   44f78:	add	fp, sp, #4
   44f7c:	sub	sp, sp, #32
   44f80:	str	r0, [fp, #-24]	; 0xffffffe8
   44f84:	str	r1, [fp, #-28]	; 0xffffffe4
   44f88:	str	r2, [fp, #-32]	; 0xffffffe0
   44f8c:	str	r3, [fp, #-36]	; 0xffffffdc
   44f90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   44f94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   44f98:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   44f9c:	str	r0, [fp, #-16]
   44fa0:	ldr	r3, [fp, #-16]
   44fa4:	cmp	r3, #0
   44fa8:	beq	44fe0 <flatcc_json_printer_int64_enum_field@@Base+0x6c>
   44fac:	ldr	r0, [fp, #-16]
   44fb0:	bl	3df3c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   44fb4:	strd	r0, [fp, #-12]
   44fb8:	ldrd	r0, [fp, #-12]
   44fbc:	ldrd	r2, [fp, #12]
   44fc0:	cmp	r1, r3
   44fc4:	cmpeq	r0, r2
   44fc8:	bne	44ff8 <flatcc_json_printer_int64_enum_field@@Base+0x84>
   44fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44fd0:	ldrb	r3, [r3, #28]
   44fd4:	cmp	r3, #0
   44fd8:	beq	44ff8 <flatcc_json_printer_int64_enum_field@@Base+0x84>
   44fdc:	b	4509c <flatcc_json_printer_int64_enum_field@@Base+0x128>
   44fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44fe4:	ldrb	r3, [r3, #29]
   44fe8:	cmp	r3, #0
   44fec:	beq	45098 <flatcc_json_printer_int64_enum_field@@Base+0x124>
   44ff0:	ldrd	r2, [fp, #12]
   44ff4:	strd	r2, [fp, #-12]
   44ff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44ffc:	ldr	r3, [r3, #16]
   45000:	add	r1, r3, #1
   45004:	ldr	r2, [fp, #-28]	; 0xffffffe4
   45008:	str	r1, [r2, #16]
   4500c:	cmp	r3, #0
   45010:	beq	45030 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   45014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45018:	ldr	r3, [r3, #20]
   4501c:	add	r1, r3, #1
   45020:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45024:	str	r1, [r2, #20]
   45028:	mov	r2, #44	; 0x2c
   4502c:	strb	r2, [r3]
   45030:	ldr	r3, [fp, #4]
   45034:	mov	r2, r3
   45038:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4503c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   45040:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45048:	ldrb	r3, [r3, #27]
   4504c:	cmp	r3, #0
   45050:	beq	45084 <flatcc_json_printer_int64_enum_field@@Base+0x110>
   45054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45058:	ldr	r3, [r3, #20]
   4505c:	mov	r2, r3
   45060:	ldrd	r0, [fp, #-12]
   45064:	bl	3fbb4 <flatcc_json_parser_struct_as_root@@Base+0x2030>
   45068:	mov	r2, r0
   4506c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45070:	ldr	r3, [r3, #20]
   45074:	add	r2, r3, r2
   45078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4507c:	str	r2, [r3, #20]
   45080:	b	4509c <flatcc_json_printer_int64_enum_field@@Base+0x128>
   45084:	ldr	r1, [fp, #20]
   45088:	ldrd	r2, [fp, #-12]
   4508c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   45090:	blx	r1
   45094:	b	4509c <flatcc_json_printer_int64_enum_field@@Base+0x128>
   45098:	nop			; (mov r0, r0)
   4509c:	sub	sp, fp, #4
   450a0:	pop	{fp, pc}

000450a4 <flatcc_json_printer_bool_enum_field@@Base>:
   450a4:	push	{fp, lr}
   450a8:	add	fp, sp, #4
   450ac:	sub	sp, sp, #24
   450b0:	str	r0, [fp, #-16]
   450b4:	str	r1, [fp, #-20]	; 0xffffffec
   450b8:	str	r2, [fp, #-24]	; 0xffffffe8
   450bc:	str	r3, [fp, #-28]	; 0xffffffe4
   450c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   450c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   450c8:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   450cc:	str	r0, [fp, #-12]
   450d0:	ldr	r3, [fp, #-12]
   450d4:	cmp	r3, #0
   450d8:	beq	45110 <flatcc_json_printer_bool_enum_field@@Base+0x6c>
   450dc:	ldr	r0, [fp, #-12]
   450e0:	bl	3e070 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   450e4:	mov	r3, r0
   450e8:	strb	r3, [fp, #-5]
   450ec:	ldrb	r2, [fp, #-5]
   450f0:	ldrb	r3, [fp, #8]
   450f4:	cmp	r2, r3
   450f8:	bne	45128 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   450fc:	ldr	r3, [fp, #-16]
   45100:	ldrb	r3, [r3, #28]
   45104:	cmp	r3, #0
   45108:	beq	45128 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   4510c:	b	451d4 <flatcc_json_printer_bool_enum_field@@Base+0x130>
   45110:	ldr	r3, [fp, #-16]
   45114:	ldrb	r3, [r3, #29]
   45118:	cmp	r3, #0
   4511c:	beq	451d0 <flatcc_json_printer_bool_enum_field@@Base+0x12c>
   45120:	ldrb	r3, [fp, #8]
   45124:	strb	r3, [fp, #-5]
   45128:	ldr	r3, [fp, #-20]	; 0xffffffec
   4512c:	ldr	r3, [r3, #16]
   45130:	add	r1, r3, #1
   45134:	ldr	r2, [fp, #-20]	; 0xffffffec
   45138:	str	r1, [r2, #16]
   4513c:	cmp	r3, #0
   45140:	beq	45160 <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   45144:	ldr	r3, [fp, #-16]
   45148:	ldr	r3, [r3, #20]
   4514c:	add	r1, r3, #1
   45150:	ldr	r2, [fp, #-16]
   45154:	str	r1, [r2, #20]
   45158:	mov	r2, #44	; 0x2c
   4515c:	strb	r2, [r3]
   45160:	ldr	r3, [fp, #4]
   45164:	mov	r2, r3
   45168:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4516c:	ldr	r0, [fp, #-16]
   45170:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45174:	ldr	r3, [fp, #-16]
   45178:	ldrb	r3, [r3, #27]
   4517c:	cmp	r3, #0
   45180:	beq	451b8 <flatcc_json_printer_bool_enum_field@@Base+0x114>
   45184:	ldrb	r2, [fp, #-5]
   45188:	ldr	r3, [fp, #-16]
   4518c:	ldr	r3, [r3, #20]
   45190:	mov	r1, r3
   45194:	mov	r0, r2
   45198:	bl	3e320 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   4519c:	mov	r2, r0
   451a0:	ldr	r3, [fp, #-16]
   451a4:	ldr	r3, [r3, #20]
   451a8:	add	r2, r3, r2
   451ac:	ldr	r3, [fp, #-16]
   451b0:	str	r2, [r3, #20]
   451b4:	b	451d4 <flatcc_json_printer_bool_enum_field@@Base+0x130>
   451b8:	ldrb	r2, [fp, #-5]
   451bc:	ldr	r3, [fp, #12]
   451c0:	mov	r1, r2
   451c4:	ldr	r0, [fp, #-16]
   451c8:	blx	r3
   451cc:	b	451d4 <flatcc_json_printer_bool_enum_field@@Base+0x130>
   451d0:	nop			; (mov r0, r0)
   451d4:	sub	sp, fp, #4
   451d8:	pop	{fp, pc}

000451dc <flatcc_json_printer_uint8_struct_field@@Base>:
   451dc:	push	{fp, lr}
   451e0:	add	fp, sp, #4
   451e4:	sub	sp, sp, #24
   451e8:	str	r0, [fp, #-16]
   451ec:	str	r1, [fp, #-20]	; 0xffffffec
   451f0:	str	r2, [fp, #-24]	; 0xffffffe8
   451f4:	str	r3, [fp, #-28]	; 0xffffffe4
   451f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   451fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45200:	add	r3, r2, r3
   45204:	mov	r0, r3
   45208:	bl	3dcd0 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   4520c:	mov	r3, r0
   45210:	strb	r3, [fp, #-5]
   45214:	ldr	r3, [fp, #-20]	; 0xffffffec
   45218:	cmp	r3, #0
   4521c:	beq	4523c <flatcc_json_printer_uint8_struct_field@@Base+0x60>
   45220:	ldr	r3, [fp, #-16]
   45224:	ldr	r3, [r3, #20]
   45228:	add	r1, r3, #1
   4522c:	ldr	r2, [fp, #-16]
   45230:	str	r1, [r2, #20]
   45234:	mov	r2, #44	; 0x2c
   45238:	strb	r2, [r3]
   4523c:	ldr	r3, [fp, #8]
   45240:	mov	r2, r3
   45244:	ldr	r1, [fp, #4]
   45248:	ldr	r0, [fp, #-16]
   4524c:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45250:	ldr	r3, [fp, #-16]
   45254:	ldr	r2, [r3, #20]
   45258:	ldrb	r3, [fp, #-5]
   4525c:	mov	r1, r2
   45260:	mov	r0, r3
   45264:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   45268:	mov	r2, r0
   4526c:	ldr	r3, [fp, #-16]
   45270:	ldr	r3, [r3, #20]
   45274:	add	r2, r3, r2
   45278:	ldr	r3, [fp, #-16]
   4527c:	str	r2, [r3, #20]
   45280:	nop			; (mov r0, r0)
   45284:	sub	sp, fp, #4
   45288:	pop	{fp, pc}

0004528c <flatcc_json_printer_uint16_struct_field@@Base>:
   4528c:	push	{fp, lr}
   45290:	add	fp, sp, #4
   45294:	sub	sp, sp, #24
   45298:	str	r0, [fp, #-16]
   4529c:	str	r1, [fp, #-20]	; 0xffffffec
   452a0:	str	r2, [fp, #-24]	; 0xffffffe8
   452a4:	str	r3, [fp, #-28]	; 0xffffffe4
   452a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   452ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   452b0:	add	r3, r2, r3
   452b4:	mov	r0, r3
   452b8:	bl	3dd28 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   452bc:	mov	r3, r0
   452c0:	strh	r3, [fp, #-6]
   452c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   452c8:	cmp	r3, #0
   452cc:	beq	452ec <flatcc_json_printer_uint16_struct_field@@Base+0x60>
   452d0:	ldr	r3, [fp, #-16]
   452d4:	ldr	r3, [r3, #20]
   452d8:	add	r1, r3, #1
   452dc:	ldr	r2, [fp, #-16]
   452e0:	str	r1, [r2, #20]
   452e4:	mov	r2, #44	; 0x2c
   452e8:	strb	r2, [r3]
   452ec:	ldr	r3, [fp, #8]
   452f0:	mov	r2, r3
   452f4:	ldr	r1, [fp, #4]
   452f8:	ldr	r0, [fp, #-16]
   452fc:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45300:	ldr	r3, [fp, #-16]
   45304:	ldr	r2, [r3, #20]
   45308:	ldrh	r3, [fp, #-6]
   4530c:	mov	r1, r2
   45310:	mov	r0, r3
   45314:	bl	3e554 <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   45318:	mov	r2, r0
   4531c:	ldr	r3, [fp, #-16]
   45320:	ldr	r3, [r3, #20]
   45324:	add	r2, r3, r2
   45328:	ldr	r3, [fp, #-16]
   4532c:	str	r2, [r3, #20]
   45330:	nop			; (mov r0, r0)
   45334:	sub	sp, fp, #4
   45338:	pop	{fp, pc}

0004533c <flatcc_json_printer_uint32_struct_field@@Base>:
   4533c:	push	{fp, lr}
   45340:	add	fp, sp, #4
   45344:	sub	sp, sp, #24
   45348:	str	r0, [fp, #-16]
   4534c:	str	r1, [fp, #-20]	; 0xffffffec
   45350:	str	r2, [fp, #-24]	; 0xffffffe8
   45354:	str	r3, [fp, #-28]	; 0xffffffe4
   45358:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4535c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45360:	add	r3, r2, r3
   45364:	mov	r0, r3
   45368:	bl	3dd7c <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   4536c:	str	r0, [fp, #-8]
   45370:	ldr	r3, [fp, #-20]	; 0xffffffec
   45374:	cmp	r3, #0
   45378:	beq	45398 <flatcc_json_printer_uint32_struct_field@@Base+0x5c>
   4537c:	ldr	r3, [fp, #-16]
   45380:	ldr	r3, [r3, #20]
   45384:	add	r1, r3, #1
   45388:	ldr	r2, [fp, #-16]
   4538c:	str	r1, [r2, #20]
   45390:	mov	r2, #44	; 0x2c
   45394:	strb	r2, [r3]
   45398:	ldr	r3, [fp, #8]
   4539c:	mov	r2, r3
   453a0:	ldr	r1, [fp, #4]
   453a4:	ldr	r0, [fp, #-16]
   453a8:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   453ac:	ldr	r3, [fp, #-16]
   453b0:	ldr	r3, [r3, #20]
   453b4:	mov	r1, r3
   453b8:	ldr	r0, [fp, #-8]
   453bc:	bl	3e87c <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   453c0:	mov	r2, r0
   453c4:	ldr	r3, [fp, #-16]
   453c8:	ldr	r3, [r3, #20]
   453cc:	add	r2, r3, r2
   453d0:	ldr	r3, [fp, #-16]
   453d4:	str	r2, [r3, #20]
   453d8:	nop			; (mov r0, r0)
   453dc:	sub	sp, fp, #4
   453e0:	pop	{fp, pc}

000453e4 <flatcc_json_printer_uint64_struct_field@@Base>:
   453e4:	push	{fp, lr}
   453e8:	add	fp, sp, #4
   453ec:	sub	sp, sp, #24
   453f0:	str	r0, [fp, #-16]
   453f4:	str	r1, [fp, #-20]	; 0xffffffec
   453f8:	str	r2, [fp, #-24]	; 0xffffffe8
   453fc:	str	r3, [fp, #-28]	; 0xffffffe4
   45400:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45404:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45408:	add	r3, r2, r3
   4540c:	mov	r0, r3
   45410:	bl	3ddd4 <flatcc_json_parser_struct_as_root@@Base+0x250>
   45414:	strd	r0, [fp, #-12]
   45418:	ldr	r3, [fp, #-20]	; 0xffffffec
   4541c:	cmp	r3, #0
   45420:	beq	45440 <flatcc_json_printer_uint64_struct_field@@Base+0x5c>
   45424:	ldr	r3, [fp, #-16]
   45428:	ldr	r3, [r3, #20]
   4542c:	add	r1, r3, #1
   45430:	ldr	r2, [fp, #-16]
   45434:	str	r1, [r2, #20]
   45438:	mov	r2, #44	; 0x2c
   4543c:	strb	r2, [r3]
   45440:	ldr	r3, [fp, #8]
   45444:	mov	r2, r3
   45448:	ldr	r1, [fp, #4]
   4544c:	ldr	r0, [fp, #-16]
   45450:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45454:	ldr	r3, [fp, #-16]
   45458:	ldr	r3, [r3, #20]
   4545c:	mov	r2, r3
   45460:	ldrd	r0, [fp, #-12]
   45464:	bl	3eeb4 <flatcc_json_parser_struct_as_root@@Base+0x1330>
   45468:	mov	r2, r0
   4546c:	ldr	r3, [fp, #-16]
   45470:	ldr	r3, [r3, #20]
   45474:	add	r2, r3, r2
   45478:	ldr	r3, [fp, #-16]
   4547c:	str	r2, [r3, #20]
   45480:	nop			; (mov r0, r0)
   45484:	sub	sp, fp, #4
   45488:	pop	{fp, pc}

0004548c <flatcc_json_printer_int8_struct_field@@Base>:
   4548c:	push	{fp, lr}
   45490:	add	fp, sp, #4
   45494:	sub	sp, sp, #24
   45498:	str	r0, [fp, #-16]
   4549c:	str	r1, [fp, #-20]	; 0xffffffec
   454a0:	str	r2, [fp, #-24]	; 0xffffffe8
   454a4:	str	r3, [fp, #-28]	; 0xffffffe4
   454a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   454ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   454b0:	add	r3, r2, r3
   454b4:	mov	r0, r3
   454b8:	bl	3de38 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   454bc:	mov	r3, r0
   454c0:	strb	r3, [fp, #-5]
   454c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   454c8:	cmp	r3, #0
   454cc:	beq	454ec <flatcc_json_printer_int8_struct_field@@Base+0x60>
   454d0:	ldr	r3, [fp, #-16]
   454d4:	ldr	r3, [r3, #20]
   454d8:	add	r1, r3, #1
   454dc:	ldr	r2, [fp, #-16]
   454e0:	str	r1, [r2, #20]
   454e4:	mov	r2, #44	; 0x2c
   454e8:	strb	r2, [r3]
   454ec:	ldr	r3, [fp, #8]
   454f0:	mov	r2, r3
   454f4:	ldr	r1, [fp, #4]
   454f8:	ldr	r0, [fp, #-16]
   454fc:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45500:	ldr	r3, [fp, #-16]
   45504:	ldr	r2, [r3, #20]
   45508:	ldrsb	r3, [fp, #-5]
   4550c:	mov	r1, r2
   45510:	mov	r0, r3
   45514:	bl	3fa3c <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   45518:	mov	r2, r0
   4551c:	ldr	r3, [fp, #-16]
   45520:	ldr	r3, [r3, #20]
   45524:	add	r2, r3, r2
   45528:	ldr	r3, [fp, #-16]
   4552c:	str	r2, [r3, #20]
   45530:	nop			; (mov r0, r0)
   45534:	sub	sp, fp, #4
   45538:	pop	{fp, pc}

0004553c <flatcc_json_printer_int16_struct_field@@Base>:
   4553c:	push	{fp, lr}
   45540:	add	fp, sp, #4
   45544:	sub	sp, sp, #24
   45548:	str	r0, [fp, #-16]
   4554c:	str	r1, [fp, #-20]	; 0xffffffec
   45550:	str	r2, [fp, #-24]	; 0xffffffe8
   45554:	str	r3, [fp, #-28]	; 0xffffffe4
   45558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4555c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45560:	add	r3, r2, r3
   45564:	mov	r0, r3
   45568:	bl	3de90 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   4556c:	mov	r3, r0
   45570:	strh	r3, [fp, #-6]
   45574:	ldr	r3, [fp, #-20]	; 0xffffffec
   45578:	cmp	r3, #0
   4557c:	beq	4559c <flatcc_json_printer_int16_struct_field@@Base+0x60>
   45580:	ldr	r3, [fp, #-16]
   45584:	ldr	r3, [r3, #20]
   45588:	add	r1, r3, #1
   4558c:	ldr	r2, [fp, #-16]
   45590:	str	r1, [r2, #20]
   45594:	mov	r2, #44	; 0x2c
   45598:	strb	r2, [r3]
   4559c:	ldr	r3, [fp, #8]
   455a0:	mov	r2, r3
   455a4:	ldr	r1, [fp, #4]
   455a8:	ldr	r0, [fp, #-16]
   455ac:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   455b0:	ldr	r3, [fp, #-16]
   455b4:	ldr	r2, [r3, #20]
   455b8:	ldrsh	r3, [fp, #-6]
   455bc:	mov	r1, r2
   455c0:	mov	r0, r3
   455c4:	bl	3fabc <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   455c8:	mov	r2, r0
   455cc:	ldr	r3, [fp, #-16]
   455d0:	ldr	r3, [r3, #20]
   455d4:	add	r2, r3, r2
   455d8:	ldr	r3, [fp, #-16]
   455dc:	str	r2, [r3, #20]
   455e0:	nop			; (mov r0, r0)
   455e4:	sub	sp, fp, #4
   455e8:	pop	{fp, pc}

000455ec <flatcc_json_printer_int32_struct_field@@Base>:
   455ec:	push	{fp, lr}
   455f0:	add	fp, sp, #4
   455f4:	sub	sp, sp, #24
   455f8:	str	r0, [fp, #-16]
   455fc:	str	r1, [fp, #-20]	; 0xffffffec
   45600:	str	r2, [fp, #-24]	; 0xffffffe8
   45604:	str	r3, [fp, #-28]	; 0xffffffe4
   45608:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4560c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45610:	add	r3, r2, r3
   45614:	mov	r0, r3
   45618:	bl	3dee4 <flatcc_json_parser_struct_as_root@@Base+0x360>
   4561c:	str	r0, [fp, #-8]
   45620:	ldr	r3, [fp, #-20]	; 0xffffffec
   45624:	cmp	r3, #0
   45628:	beq	45648 <flatcc_json_printer_int32_struct_field@@Base+0x5c>
   4562c:	ldr	r3, [fp, #-16]
   45630:	ldr	r3, [r3, #20]
   45634:	add	r1, r3, #1
   45638:	ldr	r2, [fp, #-16]
   4563c:	str	r1, [r2, #20]
   45640:	mov	r2, #44	; 0x2c
   45644:	strb	r2, [r3]
   45648:	ldr	r3, [fp, #8]
   4564c:	mov	r2, r3
   45650:	ldr	r1, [fp, #4]
   45654:	ldr	r0, [fp, #-16]
   45658:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4565c:	ldr	r3, [fp, #-16]
   45660:	ldr	r3, [r3, #20]
   45664:	mov	r1, r3
   45668:	ldr	r0, [fp, #-8]
   4566c:	bl	3fb3c <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   45670:	mov	r2, r0
   45674:	ldr	r3, [fp, #-16]
   45678:	ldr	r3, [r3, #20]
   4567c:	add	r2, r3, r2
   45680:	ldr	r3, [fp, #-16]
   45684:	str	r2, [r3, #20]
   45688:	nop			; (mov r0, r0)
   4568c:	sub	sp, fp, #4
   45690:	pop	{fp, pc}

00045694 <flatcc_json_printer_int64_struct_field@@Base>:
   45694:	push	{fp, lr}
   45698:	add	fp, sp, #4
   4569c:	sub	sp, sp, #24
   456a0:	str	r0, [fp, #-16]
   456a4:	str	r1, [fp, #-20]	; 0xffffffec
   456a8:	str	r2, [fp, #-24]	; 0xffffffe8
   456ac:	str	r3, [fp, #-28]	; 0xffffffe4
   456b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   456b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   456b8:	add	r3, r2, r3
   456bc:	mov	r0, r3
   456c0:	bl	3df3c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   456c4:	strd	r0, [fp, #-12]
   456c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   456cc:	cmp	r3, #0
   456d0:	beq	456f0 <flatcc_json_printer_int64_struct_field@@Base+0x5c>
   456d4:	ldr	r3, [fp, #-16]
   456d8:	ldr	r3, [r3, #20]
   456dc:	add	r1, r3, #1
   456e0:	ldr	r2, [fp, #-16]
   456e4:	str	r1, [r2, #20]
   456e8:	mov	r2, #44	; 0x2c
   456ec:	strb	r2, [r3]
   456f0:	ldr	r3, [fp, #8]
   456f4:	mov	r2, r3
   456f8:	ldr	r1, [fp, #4]
   456fc:	ldr	r0, [fp, #-16]
   45700:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45704:	ldr	r3, [fp, #-16]
   45708:	ldr	r3, [r3, #20]
   4570c:	mov	r2, r3
   45710:	ldrd	r0, [fp, #-12]
   45714:	bl	3fbb4 <flatcc_json_parser_struct_as_root@@Base+0x2030>
   45718:	mov	r2, r0
   4571c:	ldr	r3, [fp, #-16]
   45720:	ldr	r3, [r3, #20]
   45724:	add	r2, r3, r2
   45728:	ldr	r3, [fp, #-16]
   4572c:	str	r2, [r3, #20]
   45730:	nop			; (mov r0, r0)
   45734:	sub	sp, fp, #4
   45738:	pop	{fp, pc}

0004573c <flatcc_json_printer_bool_struct_field@@Base>:
   4573c:	push	{fp, lr}
   45740:	add	fp, sp, #4
   45744:	sub	sp, sp, #24
   45748:	str	r0, [fp, #-16]
   4574c:	str	r1, [fp, #-20]	; 0xffffffec
   45750:	str	r2, [fp, #-24]	; 0xffffffe8
   45754:	str	r3, [fp, #-28]	; 0xffffffe4
   45758:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4575c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45760:	add	r3, r2, r3
   45764:	mov	r0, r3
   45768:	bl	3e070 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   4576c:	mov	r3, r0
   45770:	strb	r3, [fp, #-5]
   45774:	ldr	r3, [fp, #-20]	; 0xffffffec
   45778:	cmp	r3, #0
   4577c:	beq	4579c <flatcc_json_printer_bool_struct_field@@Base+0x60>
   45780:	ldr	r3, [fp, #-16]
   45784:	ldr	r3, [r3, #20]
   45788:	add	r1, r3, #1
   4578c:	ldr	r2, [fp, #-16]
   45790:	str	r1, [r2, #20]
   45794:	mov	r2, #44	; 0x2c
   45798:	strb	r2, [r3]
   4579c:	ldr	r3, [fp, #8]
   457a0:	mov	r2, r3
   457a4:	ldr	r1, [fp, #4]
   457a8:	ldr	r0, [fp, #-16]
   457ac:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   457b0:	ldrb	r2, [fp, #-5]
   457b4:	ldr	r3, [fp, #-16]
   457b8:	ldr	r3, [r3, #20]
   457bc:	mov	r1, r3
   457c0:	mov	r0, r2
   457c4:	bl	3e320 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   457c8:	mov	r2, r0
   457cc:	ldr	r3, [fp, #-16]
   457d0:	ldr	r3, [r3, #20]
   457d4:	add	r2, r3, r2
   457d8:	ldr	r3, [fp, #-16]
   457dc:	str	r2, [r3, #20]
   457e0:	nop			; (mov r0, r0)
   457e4:	sub	sp, fp, #4
   457e8:	pop	{fp, pc}

000457ec <flatcc_json_printer_float_struct_field@@Base>:
   457ec:	push	{fp, lr}
   457f0:	add	fp, sp, #4
   457f4:	sub	sp, sp, #24
   457f8:	str	r0, [fp, #-16]
   457fc:	str	r1, [fp, #-20]	; 0xffffffec
   45800:	str	r2, [fp, #-24]	; 0xffffffe8
   45804:	str	r3, [fp, #-28]	; 0xffffffe4
   45808:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4580c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45810:	add	r3, r2, r3
   45814:	mov	r0, r3
   45818:	bl	3dfb0 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   4581c:	vstr	s0, [fp, #-8]
   45820:	ldr	r3, [fp, #-20]	; 0xffffffec
   45824:	cmp	r3, #0
   45828:	beq	45848 <flatcc_json_printer_float_struct_field@@Base+0x5c>
   4582c:	ldr	r3, [fp, #-16]
   45830:	ldr	r3, [r3, #20]
   45834:	add	r1, r3, #1
   45838:	ldr	r2, [fp, #-16]
   4583c:	str	r1, [r2, #20]
   45840:	mov	r2, #44	; 0x2c
   45844:	strb	r2, [r3]
   45848:	ldr	r3, [fp, #8]
   4584c:	mov	r2, r3
   45850:	ldr	r1, [fp, #4]
   45854:	ldr	r0, [fp, #-16]
   45858:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4585c:	vldr	s15, [fp, #-8]
   45860:	vcvt.f64.f32	d7, s15
   45864:	ldr	r3, [fp, #-16]
   45868:	ldr	r3, [r3, #20]
   4586c:	mov	r0, r3
   45870:	vmov.f64	d0, d7
   45874:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   45878:	mov	r2, r0
   4587c:	ldr	r3, [fp, #-16]
   45880:	ldr	r3, [r3, #20]
   45884:	add	r2, r3, r2
   45888:	ldr	r3, [fp, #-16]
   4588c:	str	r2, [r3, #20]
   45890:	nop			; (mov r0, r0)
   45894:	sub	sp, fp, #4
   45898:	pop	{fp, pc}

0004589c <flatcc_json_printer_double_struct_field@@Base>:
   4589c:	push	{fp, lr}
   458a0:	add	fp, sp, #4
   458a4:	sub	sp, sp, #24
   458a8:	str	r0, [fp, #-16]
   458ac:	str	r1, [fp, #-20]	; 0xffffffec
   458b0:	str	r2, [fp, #-24]	; 0xffffffe8
   458b4:	str	r3, [fp, #-28]	; 0xffffffe4
   458b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   458bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   458c0:	add	r3, r2, r3
   458c4:	mov	r0, r3
   458c8:	bl	3e018 <flatcc_json_parser_struct_as_root@@Base+0x494>
   458cc:	vstr	d0, [fp, #-12]
   458d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   458d4:	cmp	r3, #0
   458d8:	beq	458f8 <flatcc_json_printer_double_struct_field@@Base+0x5c>
   458dc:	ldr	r3, [fp, #-16]
   458e0:	ldr	r3, [r3, #20]
   458e4:	add	r1, r3, #1
   458e8:	ldr	r2, [fp, #-16]
   458ec:	str	r1, [r2, #20]
   458f0:	mov	r2, #44	; 0x2c
   458f4:	strb	r2, [r3]
   458f8:	ldr	r3, [fp, #8]
   458fc:	mov	r2, r3
   45900:	ldr	r1, [fp, #4]
   45904:	ldr	r0, [fp, #-16]
   45908:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4590c:	ldr	r3, [fp, #-16]
   45910:	ldr	r3, [r3, #20]
   45914:	mov	r0, r3
   45918:	vldr	d0, [fp, #-12]
   4591c:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   45920:	mov	r2, r0
   45924:	ldr	r3, [fp, #-16]
   45928:	ldr	r3, [r3, #20]
   4592c:	add	r2, r3, r2
   45930:	ldr	r3, [fp, #-16]
   45934:	str	r2, [r3, #20]
   45938:	nop			; (mov r0, r0)
   4593c:	sub	sp, fp, #4
   45940:	pop	{fp, pc}

00045944 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   45944:	push	{fp, lr}
   45948:	add	fp, sp, #4
   4594c:	sub	sp, sp, #24
   45950:	str	r0, [fp, #-16]
   45954:	str	r1, [fp, #-20]	; 0xffffffec
   45958:	str	r2, [fp, #-24]	; 0xffffffe8
   4595c:	str	r3, [fp, #-28]	; 0xffffffe4
   45960:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45964:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45968:	add	r3, r2, r3
   4596c:	mov	r0, r3
   45970:	bl	3dcd0 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   45974:	mov	r3, r0
   45978:	strb	r3, [fp, #-5]
   4597c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45980:	cmp	r3, #0
   45984:	beq	459a4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x60>
   45988:	ldr	r3, [fp, #-16]
   4598c:	ldr	r3, [r3, #20]
   45990:	add	r1, r3, #1
   45994:	ldr	r2, [fp, #-16]
   45998:	str	r1, [r2, #20]
   4599c:	mov	r2, #44	; 0x2c
   459a0:	strb	r2, [r3]
   459a4:	ldr	r3, [fp, #8]
   459a8:	mov	r2, r3
   459ac:	ldr	r1, [fp, #4]
   459b0:	ldr	r0, [fp, #-16]
   459b4:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   459b8:	ldr	r3, [fp, #-16]
   459bc:	ldrb	r3, [r3, #27]
   459c0:	cmp	r3, #0
   459c4:	beq	459fc <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb8>
   459c8:	ldr	r3, [fp, #-16]
   459cc:	ldr	r2, [r3, #20]
   459d0:	ldrb	r3, [fp, #-5]
   459d4:	mov	r1, r2
   459d8:	mov	r0, r3
   459dc:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   459e0:	mov	r2, r0
   459e4:	ldr	r3, [fp, #-16]
   459e8:	ldr	r3, [r3, #20]
   459ec:	add	r2, r3, r2
   459f0:	ldr	r3, [fp, #-16]
   459f4:	str	r2, [r3, #20]
   459f8:	b	45a10 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xcc>
   459fc:	ldrb	r2, [fp, #-5]
   45a00:	ldr	r3, [fp, #12]
   45a04:	mov	r1, r2
   45a08:	ldr	r0, [fp, #-16]
   45a0c:	blx	r3
   45a10:	nop			; (mov r0, r0)
   45a14:	sub	sp, fp, #4
   45a18:	pop	{fp, pc}

00045a1c <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   45a1c:	push	{fp, lr}
   45a20:	add	fp, sp, #4
   45a24:	sub	sp, sp, #24
   45a28:	str	r0, [fp, #-16]
   45a2c:	str	r1, [fp, #-20]	; 0xffffffec
   45a30:	str	r2, [fp, #-24]	; 0xffffffe8
   45a34:	str	r3, [fp, #-28]	; 0xffffffe4
   45a38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45a3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45a40:	add	r3, r2, r3
   45a44:	mov	r0, r3
   45a48:	bl	3dd28 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   45a4c:	mov	r3, r0
   45a50:	strh	r3, [fp, #-6]
   45a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   45a58:	cmp	r3, #0
   45a5c:	beq	45a7c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x60>
   45a60:	ldr	r3, [fp, #-16]
   45a64:	ldr	r3, [r3, #20]
   45a68:	add	r1, r3, #1
   45a6c:	ldr	r2, [fp, #-16]
   45a70:	str	r1, [r2, #20]
   45a74:	mov	r2, #44	; 0x2c
   45a78:	strb	r2, [r3]
   45a7c:	ldr	r3, [fp, #8]
   45a80:	mov	r2, r3
   45a84:	ldr	r1, [fp, #4]
   45a88:	ldr	r0, [fp, #-16]
   45a8c:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45a90:	ldr	r3, [fp, #-16]
   45a94:	ldrb	r3, [r3, #27]
   45a98:	cmp	r3, #0
   45a9c:	beq	45ad4 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xb8>
   45aa0:	ldr	r3, [fp, #-16]
   45aa4:	ldr	r2, [r3, #20]
   45aa8:	ldrh	r3, [fp, #-6]
   45aac:	mov	r1, r2
   45ab0:	mov	r0, r3
   45ab4:	bl	3e554 <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   45ab8:	mov	r2, r0
   45abc:	ldr	r3, [fp, #-16]
   45ac0:	ldr	r3, [r3, #20]
   45ac4:	add	r2, r3, r2
   45ac8:	ldr	r3, [fp, #-16]
   45acc:	str	r2, [r3, #20]
   45ad0:	b	45ae8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xcc>
   45ad4:	ldrh	r2, [fp, #-6]
   45ad8:	ldr	r3, [fp, #12]
   45adc:	mov	r1, r2
   45ae0:	ldr	r0, [fp, #-16]
   45ae4:	blx	r3
   45ae8:	nop			; (mov r0, r0)
   45aec:	sub	sp, fp, #4
   45af0:	pop	{fp, pc}

00045af4 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   45af4:	push	{fp, lr}
   45af8:	add	fp, sp, #4
   45afc:	sub	sp, sp, #24
   45b00:	str	r0, [fp, #-16]
   45b04:	str	r1, [fp, #-20]	; 0xffffffec
   45b08:	str	r2, [fp, #-24]	; 0xffffffe8
   45b0c:	str	r3, [fp, #-28]	; 0xffffffe4
   45b10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45b14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45b18:	add	r3, r2, r3
   45b1c:	mov	r0, r3
   45b20:	bl	3dd7c <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   45b24:	str	r0, [fp, #-8]
   45b28:	ldr	r3, [fp, #-20]	; 0xffffffec
   45b2c:	cmp	r3, #0
   45b30:	beq	45b50 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x5c>
   45b34:	ldr	r3, [fp, #-16]
   45b38:	ldr	r3, [r3, #20]
   45b3c:	add	r1, r3, #1
   45b40:	ldr	r2, [fp, #-16]
   45b44:	str	r1, [r2, #20]
   45b48:	mov	r2, #44	; 0x2c
   45b4c:	strb	r2, [r3]
   45b50:	ldr	r3, [fp, #8]
   45b54:	mov	r2, r3
   45b58:	ldr	r1, [fp, #4]
   45b5c:	ldr	r0, [fp, #-16]
   45b60:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45b64:	ldr	r3, [fp, #-16]
   45b68:	ldrb	r3, [r3, #27]
   45b6c:	cmp	r3, #0
   45b70:	beq	45ba4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb0>
   45b74:	ldr	r3, [fp, #-16]
   45b78:	ldr	r3, [r3, #20]
   45b7c:	mov	r1, r3
   45b80:	ldr	r0, [fp, #-8]
   45b84:	bl	3e87c <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   45b88:	mov	r2, r0
   45b8c:	ldr	r3, [fp, #-16]
   45b90:	ldr	r3, [r3, #20]
   45b94:	add	r2, r3, r2
   45b98:	ldr	r3, [fp, #-16]
   45b9c:	str	r2, [r3, #20]
   45ba0:	b	45bb4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xc0>
   45ba4:	ldr	r3, [fp, #12]
   45ba8:	ldr	r1, [fp, #-8]
   45bac:	ldr	r0, [fp, #-16]
   45bb0:	blx	r3
   45bb4:	nop			; (mov r0, r0)
   45bb8:	sub	sp, fp, #4
   45bbc:	pop	{fp, pc}

00045bc0 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   45bc0:	push	{fp, lr}
   45bc4:	add	fp, sp, #4
   45bc8:	sub	sp, sp, #24
   45bcc:	str	r0, [fp, #-16]
   45bd0:	str	r1, [fp, #-20]	; 0xffffffec
   45bd4:	str	r2, [fp, #-24]	; 0xffffffe8
   45bd8:	str	r3, [fp, #-28]	; 0xffffffe4
   45bdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45be0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45be4:	add	r3, r2, r3
   45be8:	mov	r0, r3
   45bec:	bl	3ddd4 <flatcc_json_parser_struct_as_root@@Base+0x250>
   45bf0:	strd	r0, [fp, #-12]
   45bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   45bf8:	cmp	r3, #0
   45bfc:	beq	45c1c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x5c>
   45c00:	ldr	r3, [fp, #-16]
   45c04:	ldr	r3, [r3, #20]
   45c08:	add	r1, r3, #1
   45c0c:	ldr	r2, [fp, #-16]
   45c10:	str	r1, [r2, #20]
   45c14:	mov	r2, #44	; 0x2c
   45c18:	strb	r2, [r3]
   45c1c:	ldr	r3, [fp, #8]
   45c20:	mov	r2, r3
   45c24:	ldr	r1, [fp, #4]
   45c28:	ldr	r0, [fp, #-16]
   45c2c:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45c30:	ldr	r3, [fp, #-16]
   45c34:	ldrb	r3, [r3, #27]
   45c38:	cmp	r3, #0
   45c3c:	beq	45c70 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb0>
   45c40:	ldr	r3, [fp, #-16]
   45c44:	ldr	r3, [r3, #20]
   45c48:	mov	r2, r3
   45c4c:	ldrd	r0, [fp, #-12]
   45c50:	bl	3eeb4 <flatcc_json_parser_struct_as_root@@Base+0x1330>
   45c54:	mov	r2, r0
   45c58:	ldr	r3, [fp, #-16]
   45c5c:	ldr	r3, [r3, #20]
   45c60:	add	r2, r3, r2
   45c64:	ldr	r3, [fp, #-16]
   45c68:	str	r2, [r3, #20]
   45c6c:	b	45c80 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xc0>
   45c70:	ldr	r1, [fp, #12]
   45c74:	ldrd	r2, [fp, #-12]
   45c78:	ldr	r0, [fp, #-16]
   45c7c:	blx	r1
   45c80:	nop			; (mov r0, r0)
   45c84:	sub	sp, fp, #4
   45c88:	pop	{fp, pc}

00045c8c <flatcc_json_printer_int8_enum_struct_field@@Base>:
   45c8c:	push	{fp, lr}
   45c90:	add	fp, sp, #4
   45c94:	sub	sp, sp, #24
   45c98:	str	r0, [fp, #-16]
   45c9c:	str	r1, [fp, #-20]	; 0xffffffec
   45ca0:	str	r2, [fp, #-24]	; 0xffffffe8
   45ca4:	str	r3, [fp, #-28]	; 0xffffffe4
   45ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45cac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45cb0:	add	r3, r2, r3
   45cb4:	mov	r0, r3
   45cb8:	bl	3de38 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   45cbc:	mov	r3, r0
   45cc0:	strb	r3, [fp, #-5]
   45cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   45cc8:	cmp	r3, #0
   45ccc:	beq	45cec <flatcc_json_printer_int8_enum_struct_field@@Base+0x60>
   45cd0:	ldr	r3, [fp, #-16]
   45cd4:	ldr	r3, [r3, #20]
   45cd8:	add	r1, r3, #1
   45cdc:	ldr	r2, [fp, #-16]
   45ce0:	str	r1, [r2, #20]
   45ce4:	mov	r2, #44	; 0x2c
   45ce8:	strb	r2, [r3]
   45cec:	ldr	r3, [fp, #8]
   45cf0:	mov	r2, r3
   45cf4:	ldr	r1, [fp, #4]
   45cf8:	ldr	r0, [fp, #-16]
   45cfc:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45d00:	ldr	r3, [fp, #-16]
   45d04:	ldrb	r3, [r3, #27]
   45d08:	cmp	r3, #0
   45d0c:	beq	45d44 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb8>
   45d10:	ldr	r3, [fp, #-16]
   45d14:	ldr	r2, [r3, #20]
   45d18:	ldrsb	r3, [fp, #-5]
   45d1c:	mov	r1, r2
   45d20:	mov	r0, r3
   45d24:	bl	3fa3c <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   45d28:	mov	r2, r0
   45d2c:	ldr	r3, [fp, #-16]
   45d30:	ldr	r3, [r3, #20]
   45d34:	add	r2, r3, r2
   45d38:	ldr	r3, [fp, #-16]
   45d3c:	str	r2, [r3, #20]
   45d40:	b	45d58 <flatcc_json_printer_int8_enum_struct_field@@Base+0xcc>
   45d44:	ldrsb	r2, [fp, #-5]
   45d48:	ldr	r3, [fp, #12]
   45d4c:	mov	r1, r2
   45d50:	ldr	r0, [fp, #-16]
   45d54:	blx	r3
   45d58:	nop			; (mov r0, r0)
   45d5c:	sub	sp, fp, #4
   45d60:	pop	{fp, pc}

00045d64 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   45d64:	push	{fp, lr}
   45d68:	add	fp, sp, #4
   45d6c:	sub	sp, sp, #24
   45d70:	str	r0, [fp, #-16]
   45d74:	str	r1, [fp, #-20]	; 0xffffffec
   45d78:	str	r2, [fp, #-24]	; 0xffffffe8
   45d7c:	str	r3, [fp, #-28]	; 0xffffffe4
   45d80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45d84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45d88:	add	r3, r2, r3
   45d8c:	mov	r0, r3
   45d90:	bl	3de90 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   45d94:	mov	r3, r0
   45d98:	strh	r3, [fp, #-6]
   45d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45da0:	cmp	r3, #0
   45da4:	beq	45dc4 <flatcc_json_printer_int16_enum_struct_field@@Base+0x60>
   45da8:	ldr	r3, [fp, #-16]
   45dac:	ldr	r3, [r3, #20]
   45db0:	add	r1, r3, #1
   45db4:	ldr	r2, [fp, #-16]
   45db8:	str	r1, [r2, #20]
   45dbc:	mov	r2, #44	; 0x2c
   45dc0:	strb	r2, [r3]
   45dc4:	ldr	r3, [fp, #8]
   45dc8:	mov	r2, r3
   45dcc:	ldr	r1, [fp, #4]
   45dd0:	ldr	r0, [fp, #-16]
   45dd4:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45dd8:	ldr	r3, [fp, #-16]
   45ddc:	ldrb	r3, [r3, #27]
   45de0:	cmp	r3, #0
   45de4:	beq	45e1c <flatcc_json_printer_int16_enum_struct_field@@Base+0xb8>
   45de8:	ldr	r3, [fp, #-16]
   45dec:	ldr	r2, [r3, #20]
   45df0:	ldrsh	r3, [fp, #-6]
   45df4:	mov	r1, r2
   45df8:	mov	r0, r3
   45dfc:	bl	3fabc <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   45e00:	mov	r2, r0
   45e04:	ldr	r3, [fp, #-16]
   45e08:	ldr	r3, [r3, #20]
   45e0c:	add	r2, r3, r2
   45e10:	ldr	r3, [fp, #-16]
   45e14:	str	r2, [r3, #20]
   45e18:	b	45e30 <flatcc_json_printer_int16_enum_struct_field@@Base+0xcc>
   45e1c:	ldrsh	r2, [fp, #-6]
   45e20:	ldr	r3, [fp, #12]
   45e24:	mov	r1, r2
   45e28:	ldr	r0, [fp, #-16]
   45e2c:	blx	r3
   45e30:	nop			; (mov r0, r0)
   45e34:	sub	sp, fp, #4
   45e38:	pop	{fp, pc}

00045e3c <flatcc_json_printer_int32_enum_struct_field@@Base>:
   45e3c:	push	{fp, lr}
   45e40:	add	fp, sp, #4
   45e44:	sub	sp, sp, #24
   45e48:	str	r0, [fp, #-16]
   45e4c:	str	r1, [fp, #-20]	; 0xffffffec
   45e50:	str	r2, [fp, #-24]	; 0xffffffe8
   45e54:	str	r3, [fp, #-28]	; 0xffffffe4
   45e58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45e5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45e60:	add	r3, r2, r3
   45e64:	mov	r0, r3
   45e68:	bl	3dee4 <flatcc_json_parser_struct_as_root@@Base+0x360>
   45e6c:	str	r0, [fp, #-8]
   45e70:	ldr	r3, [fp, #-20]	; 0xffffffec
   45e74:	cmp	r3, #0
   45e78:	beq	45e98 <flatcc_json_printer_int32_enum_struct_field@@Base+0x5c>
   45e7c:	ldr	r3, [fp, #-16]
   45e80:	ldr	r3, [r3, #20]
   45e84:	add	r1, r3, #1
   45e88:	ldr	r2, [fp, #-16]
   45e8c:	str	r1, [r2, #20]
   45e90:	mov	r2, #44	; 0x2c
   45e94:	strb	r2, [r3]
   45e98:	ldr	r3, [fp, #8]
   45e9c:	mov	r2, r3
   45ea0:	ldr	r1, [fp, #4]
   45ea4:	ldr	r0, [fp, #-16]
   45ea8:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45eac:	ldr	r3, [fp, #-16]
   45eb0:	ldrb	r3, [r3, #27]
   45eb4:	cmp	r3, #0
   45eb8:	beq	45eec <flatcc_json_printer_int32_enum_struct_field@@Base+0xb0>
   45ebc:	ldr	r3, [fp, #-16]
   45ec0:	ldr	r3, [r3, #20]
   45ec4:	mov	r1, r3
   45ec8:	ldr	r0, [fp, #-8]
   45ecc:	bl	3fb3c <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   45ed0:	mov	r2, r0
   45ed4:	ldr	r3, [fp, #-16]
   45ed8:	ldr	r3, [r3, #20]
   45edc:	add	r2, r3, r2
   45ee0:	ldr	r3, [fp, #-16]
   45ee4:	str	r2, [r3, #20]
   45ee8:	b	45efc <flatcc_json_printer_int32_enum_struct_field@@Base+0xc0>
   45eec:	ldr	r3, [fp, #12]
   45ef0:	ldr	r1, [fp, #-8]
   45ef4:	ldr	r0, [fp, #-16]
   45ef8:	blx	r3
   45efc:	nop			; (mov r0, r0)
   45f00:	sub	sp, fp, #4
   45f04:	pop	{fp, pc}

00045f08 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   45f08:	push	{fp, lr}
   45f0c:	add	fp, sp, #4
   45f10:	sub	sp, sp, #24
   45f14:	str	r0, [fp, #-16]
   45f18:	str	r1, [fp, #-20]	; 0xffffffec
   45f1c:	str	r2, [fp, #-24]	; 0xffffffe8
   45f20:	str	r3, [fp, #-28]	; 0xffffffe4
   45f24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45f28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45f2c:	add	r3, r2, r3
   45f30:	mov	r0, r3
   45f34:	bl	3df3c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   45f38:	strd	r0, [fp, #-12]
   45f3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45f40:	cmp	r3, #0
   45f44:	beq	45f64 <flatcc_json_printer_int64_enum_struct_field@@Base+0x5c>
   45f48:	ldr	r3, [fp, #-16]
   45f4c:	ldr	r3, [r3, #20]
   45f50:	add	r1, r3, #1
   45f54:	ldr	r2, [fp, #-16]
   45f58:	str	r1, [r2, #20]
   45f5c:	mov	r2, #44	; 0x2c
   45f60:	strb	r2, [r3]
   45f64:	ldr	r3, [fp, #8]
   45f68:	mov	r2, r3
   45f6c:	ldr	r1, [fp, #4]
   45f70:	ldr	r0, [fp, #-16]
   45f74:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   45f78:	ldr	r3, [fp, #-16]
   45f7c:	ldrb	r3, [r3, #27]
   45f80:	cmp	r3, #0
   45f84:	beq	45fb8 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb0>
   45f88:	ldr	r3, [fp, #-16]
   45f8c:	ldr	r3, [r3, #20]
   45f90:	mov	r2, r3
   45f94:	ldrd	r0, [fp, #-12]
   45f98:	bl	3fbb4 <flatcc_json_parser_struct_as_root@@Base+0x2030>
   45f9c:	mov	r2, r0
   45fa0:	ldr	r3, [fp, #-16]
   45fa4:	ldr	r3, [r3, #20]
   45fa8:	add	r2, r3, r2
   45fac:	ldr	r3, [fp, #-16]
   45fb0:	str	r2, [r3, #20]
   45fb4:	b	45fc8 <flatcc_json_printer_int64_enum_struct_field@@Base+0xc0>
   45fb8:	ldr	r1, [fp, #12]
   45fbc:	ldrd	r2, [fp, #-12]
   45fc0:	ldr	r0, [fp, #-16]
   45fc4:	blx	r1
   45fc8:	nop			; (mov r0, r0)
   45fcc:	sub	sp, fp, #4
   45fd0:	pop	{fp, pc}

00045fd4 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   45fd4:	push	{fp, lr}
   45fd8:	add	fp, sp, #4
   45fdc:	sub	sp, sp, #24
   45fe0:	str	r0, [fp, #-16]
   45fe4:	str	r1, [fp, #-20]	; 0xffffffec
   45fe8:	str	r2, [fp, #-24]	; 0xffffffe8
   45fec:	str	r3, [fp, #-28]	; 0xffffffe4
   45ff0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45ff4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45ff8:	add	r3, r2, r3
   45ffc:	mov	r0, r3
   46000:	bl	3e070 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   46004:	mov	r3, r0
   46008:	strb	r3, [fp, #-5]
   4600c:	ldr	r3, [fp, #-20]	; 0xffffffec
   46010:	cmp	r3, #0
   46014:	beq	46034 <flatcc_json_printer_bool_enum_struct_field@@Base+0x60>
   46018:	ldr	r3, [fp, #-16]
   4601c:	ldr	r3, [r3, #20]
   46020:	add	r1, r3, #1
   46024:	ldr	r2, [fp, #-16]
   46028:	str	r1, [r2, #20]
   4602c:	mov	r2, #44	; 0x2c
   46030:	strb	r2, [r3]
   46034:	ldr	r3, [fp, #8]
   46038:	mov	r2, r3
   4603c:	ldr	r1, [fp, #4]
   46040:	ldr	r0, [fp, #-16]
   46044:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   46048:	ldr	r3, [fp, #-16]
   4604c:	ldrb	r3, [r3, #27]
   46050:	cmp	r3, #0
   46054:	beq	4608c <flatcc_json_printer_bool_enum_struct_field@@Base+0xb8>
   46058:	ldrb	r2, [fp, #-5]
   4605c:	ldr	r3, [fp, #-16]
   46060:	ldr	r3, [r3, #20]
   46064:	mov	r1, r3
   46068:	mov	r0, r2
   4606c:	bl	3e320 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   46070:	mov	r2, r0
   46074:	ldr	r3, [fp, #-16]
   46078:	ldr	r3, [r3, #20]
   4607c:	add	r2, r3, r2
   46080:	ldr	r3, [fp, #-16]
   46084:	str	r2, [r3, #20]
   46088:	b	460a0 <flatcc_json_printer_bool_enum_struct_field@@Base+0xcc>
   4608c:	ldrb	r2, [fp, #-5]
   46090:	ldr	r3, [fp, #12]
   46094:	mov	r1, r2
   46098:	ldr	r0, [fp, #-16]
   4609c:	blx	r3
   460a0:	nop			; (mov r0, r0)
   460a4:	sub	sp, fp, #4
   460a8:	pop	{fp, pc}

000460ac <flatcc_json_printer_utype_vector_field@@Base>:
   460ac:	push	{fp, lr}
   460b0:	add	fp, sp, #4
   460b4:	sub	sp, sp, #24
   460b8:	str	r0, [fp, #-16]
   460bc:	str	r1, [fp, #-20]	; 0xffffffec
   460c0:	str	r2, [fp, #-24]	; 0xffffffe8
   460c4:	str	r3, [fp, #-28]	; 0xffffffe4
   460c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   460cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   460d0:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   460d4:	str	r0, [fp, #-8]
   460d8:	ldr	r3, [fp, #-8]
   460dc:	cmp	r3, #0
   460e0:	beq	46344 <flatcc_json_printer_utype_vector_field@@Base+0x298>
   460e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   460e8:	ldr	r3, [r3, #16]
   460ec:	add	r1, r3, #1
   460f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   460f4:	str	r1, [r2, #16]
   460f8:	cmp	r3, #0
   460fc:	beq	4611c <flatcc_json_printer_utype_vector_field@@Base+0x70>
   46100:	ldr	r3, [fp, #-16]
   46104:	ldr	r3, [r3, #20]
   46108:	add	r1, r3, #1
   4610c:	ldr	r2, [fp, #-16]
   46110:	str	r1, [r2, #20]
   46114:	mov	r2, #44	; 0x2c
   46118:	strb	r2, [r3]
   4611c:	ldr	r0, [fp, #-8]
   46120:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   46124:	str	r0, [fp, #-8]
   46128:	ldr	r0, [fp, #-8]
   4612c:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   46130:	str	r0, [fp, #-12]
   46134:	ldr	r3, [fp, #-8]
   46138:	add	r3, r3, #4
   4613c:	str	r3, [fp, #-8]
   46140:	ldr	r3, [fp, #4]
   46144:	mov	r2, r3
   46148:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4614c:	ldr	r0, [fp, #-16]
   46150:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   46154:	ldr	r3, [fp, #-16]
   46158:	ldr	r3, [r3, #32]
   4615c:	add	r2, r3, #1
   46160:	ldr	r3, [fp, #-16]
   46164:	str	r2, [r3, #32]
   46168:	ldr	r3, [fp, #-16]
   4616c:	ldr	r3, [r3, #20]
   46170:	add	r1, r3, #1
   46174:	ldr	r2, [fp, #-16]
   46178:	str	r1, [r2, #20]
   4617c:	mov	r2, #91	; 0x5b
   46180:	strb	r2, [r3]
   46184:	ldr	r3, [fp, #-12]
   46188:	cmp	r3, #0
   4618c:	beq	462cc <flatcc_json_printer_utype_vector_field@@Base+0x220>
   46190:	ldr	r3, [fp, #-16]
   46194:	ldrb	r3, [r3, #25]
   46198:	cmp	r3, #0
   4619c:	beq	461c8 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   461a0:	ldr	r3, [fp, #-16]
   461a4:	ldr	r3, [r3, #20]
   461a8:	add	r1, r3, #1
   461ac:	ldr	r2, [fp, #-16]
   461b0:	str	r1, [r2, #20]
   461b4:	mov	r2, #10
   461b8:	strb	r2, [r3]
   461bc:	ldr	r0, [fp, #-16]
   461c0:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   461c4:	b	461d0 <flatcc_json_printer_utype_vector_field@@Base+0x124>
   461c8:	ldr	r0, [fp, #-16]
   461cc:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   461d0:	ldr	r0, [fp, #-8]
   461d4:	bl	3e1c8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   461d8:	mov	r3, r0
   461dc:	mov	r2, r3
   461e0:	ldr	r3, [fp, #-16]
   461e4:	ldr	r3, [r3, #20]
   461e8:	mov	r1, r3
   461ec:	mov	r0, r2
   461f0:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   461f4:	mov	r2, r0
   461f8:	ldr	r3, [fp, #-16]
   461fc:	ldr	r3, [r3, #20]
   46200:	add	r2, r3, r2
   46204:	ldr	r3, [fp, #-16]
   46208:	str	r2, [r3, #20]
   4620c:	ldr	r3, [fp, #-8]
   46210:	add	r3, r3, #1
   46214:	str	r3, [fp, #-8]
   46218:	ldr	r3, [fp, #-12]
   4621c:	sub	r3, r3, #1
   46220:	str	r3, [fp, #-12]
   46224:	b	462cc <flatcc_json_printer_utype_vector_field@@Base+0x220>
   46228:	ldr	r3, [fp, #-16]
   4622c:	ldr	r3, [r3, #20]
   46230:	add	r1, r3, #1
   46234:	ldr	r2, [fp, #-16]
   46238:	str	r1, [r2, #20]
   4623c:	mov	r2, #44	; 0x2c
   46240:	strb	r2, [r3]
   46244:	ldr	r3, [fp, #-16]
   46248:	ldrb	r3, [r3, #25]
   4624c:	cmp	r3, #0
   46250:	beq	4627c <flatcc_json_printer_utype_vector_field@@Base+0x1d0>
   46254:	ldr	r3, [fp, #-16]
   46258:	ldr	r3, [r3, #20]
   4625c:	add	r1, r3, #1
   46260:	ldr	r2, [fp, #-16]
   46264:	str	r1, [r2, #20]
   46268:	mov	r2, #10
   4626c:	strb	r2, [r3]
   46270:	ldr	r0, [fp, #-16]
   46274:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46278:	b	46284 <flatcc_json_printer_utype_vector_field@@Base+0x1d8>
   4627c:	ldr	r0, [fp, #-16]
   46280:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46284:	ldr	r0, [fp, #-8]
   46288:	bl	3e1c8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   4628c:	mov	r3, r0
   46290:	mov	r2, r3
   46294:	ldr	r3, [fp, #-16]
   46298:	ldr	r3, [r3, #20]
   4629c:	mov	r1, r3
   462a0:	mov	r0, r2
   462a4:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   462a8:	mov	r2, r0
   462ac:	ldr	r3, [fp, #-16]
   462b0:	ldr	r3, [r3, #20]
   462b4:	add	r2, r3, r2
   462b8:	ldr	r3, [fp, #-16]
   462bc:	str	r2, [r3, #20]
   462c0:	ldr	r3, [fp, #-8]
   462c4:	add	r3, r3, #1
   462c8:	str	r3, [fp, #-8]
   462cc:	ldr	r3, [fp, #-12]
   462d0:	sub	r2, r3, #1
   462d4:	str	r2, [fp, #-12]
   462d8:	cmp	r3, #0
   462dc:	bne	46228 <flatcc_json_printer_utype_vector_field@@Base+0x17c>
   462e0:	ldr	r3, [fp, #-16]
   462e4:	ldrb	r3, [r3, #25]
   462e8:	cmp	r3, #0
   462ec:	beq	46328 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   462f0:	ldr	r3, [fp, #-16]
   462f4:	ldr	r3, [r3, #20]
   462f8:	add	r1, r3, #1
   462fc:	ldr	r2, [fp, #-16]
   46300:	str	r1, [r2, #20]
   46304:	mov	r2, #10
   46308:	strb	r2, [r3]
   4630c:	ldr	r3, [fp, #-16]
   46310:	ldr	r3, [r3, #32]
   46314:	sub	r2, r3, #1
   46318:	ldr	r3, [fp, #-16]
   4631c:	str	r2, [r3, #32]
   46320:	ldr	r0, [fp, #-16]
   46324:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46328:	ldr	r3, [fp, #-16]
   4632c:	ldr	r3, [r3, #20]
   46330:	add	r1, r3, #1
   46334:	ldr	r2, [fp, #-16]
   46338:	str	r1, [r2, #20]
   4633c:	mov	r2, #93	; 0x5d
   46340:	strb	r2, [r3]
   46344:	nop			; (mov r0, r0)
   46348:	sub	sp, fp, #4
   4634c:	pop	{fp, pc}

00046350 <flatcc_json_printer_uint8_vector_field@@Base>:
   46350:	push	{fp, lr}
   46354:	add	fp, sp, #4
   46358:	sub	sp, sp, #24
   4635c:	str	r0, [fp, #-16]
   46360:	str	r1, [fp, #-20]	; 0xffffffec
   46364:	str	r2, [fp, #-24]	; 0xffffffe8
   46368:	str	r3, [fp, #-28]	; 0xffffffe4
   4636c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46370:	ldr	r0, [fp, #-20]	; 0xffffffec
   46374:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   46378:	str	r0, [fp, #-8]
   4637c:	ldr	r3, [fp, #-8]
   46380:	cmp	r3, #0
   46384:	beq	465e8 <flatcc_json_printer_uint8_vector_field@@Base+0x298>
   46388:	ldr	r3, [fp, #-20]	; 0xffffffec
   4638c:	ldr	r3, [r3, #16]
   46390:	add	r1, r3, #1
   46394:	ldr	r2, [fp, #-20]	; 0xffffffec
   46398:	str	r1, [r2, #16]
   4639c:	cmp	r3, #0
   463a0:	beq	463c0 <flatcc_json_printer_uint8_vector_field@@Base+0x70>
   463a4:	ldr	r3, [fp, #-16]
   463a8:	ldr	r3, [r3, #20]
   463ac:	add	r1, r3, #1
   463b0:	ldr	r2, [fp, #-16]
   463b4:	str	r1, [r2, #20]
   463b8:	mov	r2, #44	; 0x2c
   463bc:	strb	r2, [r3]
   463c0:	ldr	r0, [fp, #-8]
   463c4:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   463c8:	str	r0, [fp, #-8]
   463cc:	ldr	r0, [fp, #-8]
   463d0:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   463d4:	str	r0, [fp, #-12]
   463d8:	ldr	r3, [fp, #-8]
   463dc:	add	r3, r3, #4
   463e0:	str	r3, [fp, #-8]
   463e4:	ldr	r3, [fp, #4]
   463e8:	mov	r2, r3
   463ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   463f0:	ldr	r0, [fp, #-16]
   463f4:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   463f8:	ldr	r3, [fp, #-16]
   463fc:	ldr	r3, [r3, #32]
   46400:	add	r2, r3, #1
   46404:	ldr	r3, [fp, #-16]
   46408:	str	r2, [r3, #32]
   4640c:	ldr	r3, [fp, #-16]
   46410:	ldr	r3, [r3, #20]
   46414:	add	r1, r3, #1
   46418:	ldr	r2, [fp, #-16]
   4641c:	str	r1, [r2, #20]
   46420:	mov	r2, #91	; 0x5b
   46424:	strb	r2, [r3]
   46428:	ldr	r3, [fp, #-12]
   4642c:	cmp	r3, #0
   46430:	beq	46570 <flatcc_json_printer_uint8_vector_field@@Base+0x220>
   46434:	ldr	r3, [fp, #-16]
   46438:	ldrb	r3, [r3, #25]
   4643c:	cmp	r3, #0
   46440:	beq	4646c <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   46444:	ldr	r3, [fp, #-16]
   46448:	ldr	r3, [r3, #20]
   4644c:	add	r1, r3, #1
   46450:	ldr	r2, [fp, #-16]
   46454:	str	r1, [r2, #20]
   46458:	mov	r2, #10
   4645c:	strb	r2, [r3]
   46460:	ldr	r0, [fp, #-16]
   46464:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46468:	b	46474 <flatcc_json_printer_uint8_vector_field@@Base+0x124>
   4646c:	ldr	r0, [fp, #-16]
   46470:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46474:	ldr	r0, [fp, #-8]
   46478:	bl	3dcd0 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   4647c:	mov	r3, r0
   46480:	mov	r2, r3
   46484:	ldr	r3, [fp, #-16]
   46488:	ldr	r3, [r3, #20]
   4648c:	mov	r1, r3
   46490:	mov	r0, r2
   46494:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   46498:	mov	r2, r0
   4649c:	ldr	r3, [fp, #-16]
   464a0:	ldr	r3, [r3, #20]
   464a4:	add	r2, r3, r2
   464a8:	ldr	r3, [fp, #-16]
   464ac:	str	r2, [r3, #20]
   464b0:	ldr	r3, [fp, #-8]
   464b4:	add	r3, r3, #1
   464b8:	str	r3, [fp, #-8]
   464bc:	ldr	r3, [fp, #-12]
   464c0:	sub	r3, r3, #1
   464c4:	str	r3, [fp, #-12]
   464c8:	b	46570 <flatcc_json_printer_uint8_vector_field@@Base+0x220>
   464cc:	ldr	r3, [fp, #-16]
   464d0:	ldr	r3, [r3, #20]
   464d4:	add	r1, r3, #1
   464d8:	ldr	r2, [fp, #-16]
   464dc:	str	r1, [r2, #20]
   464e0:	mov	r2, #44	; 0x2c
   464e4:	strb	r2, [r3]
   464e8:	ldr	r3, [fp, #-16]
   464ec:	ldrb	r3, [r3, #25]
   464f0:	cmp	r3, #0
   464f4:	beq	46520 <flatcc_json_printer_uint8_vector_field@@Base+0x1d0>
   464f8:	ldr	r3, [fp, #-16]
   464fc:	ldr	r3, [r3, #20]
   46500:	add	r1, r3, #1
   46504:	ldr	r2, [fp, #-16]
   46508:	str	r1, [r2, #20]
   4650c:	mov	r2, #10
   46510:	strb	r2, [r3]
   46514:	ldr	r0, [fp, #-16]
   46518:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4651c:	b	46528 <flatcc_json_printer_uint8_vector_field@@Base+0x1d8>
   46520:	ldr	r0, [fp, #-16]
   46524:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46528:	ldr	r0, [fp, #-8]
   4652c:	bl	3dcd0 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   46530:	mov	r3, r0
   46534:	mov	r2, r3
   46538:	ldr	r3, [fp, #-16]
   4653c:	ldr	r3, [r3, #20]
   46540:	mov	r1, r3
   46544:	mov	r0, r2
   46548:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   4654c:	mov	r2, r0
   46550:	ldr	r3, [fp, #-16]
   46554:	ldr	r3, [r3, #20]
   46558:	add	r2, r3, r2
   4655c:	ldr	r3, [fp, #-16]
   46560:	str	r2, [r3, #20]
   46564:	ldr	r3, [fp, #-8]
   46568:	add	r3, r3, #1
   4656c:	str	r3, [fp, #-8]
   46570:	ldr	r3, [fp, #-12]
   46574:	sub	r2, r3, #1
   46578:	str	r2, [fp, #-12]
   4657c:	cmp	r3, #0
   46580:	bne	464cc <flatcc_json_printer_uint8_vector_field@@Base+0x17c>
   46584:	ldr	r3, [fp, #-16]
   46588:	ldrb	r3, [r3, #25]
   4658c:	cmp	r3, #0
   46590:	beq	465cc <flatcc_json_printer_uint8_vector_field@@Base+0x27c>
   46594:	ldr	r3, [fp, #-16]
   46598:	ldr	r3, [r3, #20]
   4659c:	add	r1, r3, #1
   465a0:	ldr	r2, [fp, #-16]
   465a4:	str	r1, [r2, #20]
   465a8:	mov	r2, #10
   465ac:	strb	r2, [r3]
   465b0:	ldr	r3, [fp, #-16]
   465b4:	ldr	r3, [r3, #32]
   465b8:	sub	r2, r3, #1
   465bc:	ldr	r3, [fp, #-16]
   465c0:	str	r2, [r3, #32]
   465c4:	ldr	r0, [fp, #-16]
   465c8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   465cc:	ldr	r3, [fp, #-16]
   465d0:	ldr	r3, [r3, #20]
   465d4:	add	r1, r3, #1
   465d8:	ldr	r2, [fp, #-16]
   465dc:	str	r1, [r2, #20]
   465e0:	mov	r2, #93	; 0x5d
   465e4:	strb	r2, [r3]
   465e8:	nop			; (mov r0, r0)
   465ec:	sub	sp, fp, #4
   465f0:	pop	{fp, pc}

000465f4 <flatcc_json_printer_uint16_vector_field@@Base>:
   465f4:	push	{fp, lr}
   465f8:	add	fp, sp, #4
   465fc:	sub	sp, sp, #24
   46600:	str	r0, [fp, #-16]
   46604:	str	r1, [fp, #-20]	; 0xffffffec
   46608:	str	r2, [fp, #-24]	; 0xffffffe8
   4660c:	str	r3, [fp, #-28]	; 0xffffffe4
   46610:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46614:	ldr	r0, [fp, #-20]	; 0xffffffec
   46618:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4661c:	str	r0, [fp, #-8]
   46620:	ldr	r3, [fp, #-8]
   46624:	cmp	r3, #0
   46628:	beq	4688c <flatcc_json_printer_uint16_vector_field@@Base+0x298>
   4662c:	ldr	r3, [fp, #-20]	; 0xffffffec
   46630:	ldr	r3, [r3, #16]
   46634:	add	r1, r3, #1
   46638:	ldr	r2, [fp, #-20]	; 0xffffffec
   4663c:	str	r1, [r2, #16]
   46640:	cmp	r3, #0
   46644:	beq	46664 <flatcc_json_printer_uint16_vector_field@@Base+0x70>
   46648:	ldr	r3, [fp, #-16]
   4664c:	ldr	r3, [r3, #20]
   46650:	add	r1, r3, #1
   46654:	ldr	r2, [fp, #-16]
   46658:	str	r1, [r2, #20]
   4665c:	mov	r2, #44	; 0x2c
   46660:	strb	r2, [r3]
   46664:	ldr	r0, [fp, #-8]
   46668:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4666c:	str	r0, [fp, #-8]
   46670:	ldr	r0, [fp, #-8]
   46674:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   46678:	str	r0, [fp, #-12]
   4667c:	ldr	r3, [fp, #-8]
   46680:	add	r3, r3, #4
   46684:	str	r3, [fp, #-8]
   46688:	ldr	r3, [fp, #4]
   4668c:	mov	r2, r3
   46690:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46694:	ldr	r0, [fp, #-16]
   46698:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4669c:	ldr	r3, [fp, #-16]
   466a0:	ldr	r3, [r3, #32]
   466a4:	add	r2, r3, #1
   466a8:	ldr	r3, [fp, #-16]
   466ac:	str	r2, [r3, #32]
   466b0:	ldr	r3, [fp, #-16]
   466b4:	ldr	r3, [r3, #20]
   466b8:	add	r1, r3, #1
   466bc:	ldr	r2, [fp, #-16]
   466c0:	str	r1, [r2, #20]
   466c4:	mov	r2, #91	; 0x5b
   466c8:	strb	r2, [r3]
   466cc:	ldr	r3, [fp, #-12]
   466d0:	cmp	r3, #0
   466d4:	beq	46814 <flatcc_json_printer_uint16_vector_field@@Base+0x220>
   466d8:	ldr	r3, [fp, #-16]
   466dc:	ldrb	r3, [r3, #25]
   466e0:	cmp	r3, #0
   466e4:	beq	46710 <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   466e8:	ldr	r3, [fp, #-16]
   466ec:	ldr	r3, [r3, #20]
   466f0:	add	r1, r3, #1
   466f4:	ldr	r2, [fp, #-16]
   466f8:	str	r1, [r2, #20]
   466fc:	mov	r2, #10
   46700:	strb	r2, [r3]
   46704:	ldr	r0, [fp, #-16]
   46708:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4670c:	b	46718 <flatcc_json_printer_uint16_vector_field@@Base+0x124>
   46710:	ldr	r0, [fp, #-16]
   46714:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46718:	ldr	r0, [fp, #-8]
   4671c:	bl	3dd28 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   46720:	mov	r3, r0
   46724:	mov	r2, r3
   46728:	ldr	r3, [fp, #-16]
   4672c:	ldr	r3, [r3, #20]
   46730:	mov	r1, r3
   46734:	mov	r0, r2
   46738:	bl	3e554 <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   4673c:	mov	r2, r0
   46740:	ldr	r3, [fp, #-16]
   46744:	ldr	r3, [r3, #20]
   46748:	add	r2, r3, r2
   4674c:	ldr	r3, [fp, #-16]
   46750:	str	r2, [r3, #20]
   46754:	ldr	r3, [fp, #-8]
   46758:	add	r3, r3, #2
   4675c:	str	r3, [fp, #-8]
   46760:	ldr	r3, [fp, #-12]
   46764:	sub	r3, r3, #1
   46768:	str	r3, [fp, #-12]
   4676c:	b	46814 <flatcc_json_printer_uint16_vector_field@@Base+0x220>
   46770:	ldr	r3, [fp, #-16]
   46774:	ldr	r3, [r3, #20]
   46778:	add	r1, r3, #1
   4677c:	ldr	r2, [fp, #-16]
   46780:	str	r1, [r2, #20]
   46784:	mov	r2, #44	; 0x2c
   46788:	strb	r2, [r3]
   4678c:	ldr	r3, [fp, #-16]
   46790:	ldrb	r3, [r3, #25]
   46794:	cmp	r3, #0
   46798:	beq	467c4 <flatcc_json_printer_uint16_vector_field@@Base+0x1d0>
   4679c:	ldr	r3, [fp, #-16]
   467a0:	ldr	r3, [r3, #20]
   467a4:	add	r1, r3, #1
   467a8:	ldr	r2, [fp, #-16]
   467ac:	str	r1, [r2, #20]
   467b0:	mov	r2, #10
   467b4:	strb	r2, [r3]
   467b8:	ldr	r0, [fp, #-16]
   467bc:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   467c0:	b	467cc <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   467c4:	ldr	r0, [fp, #-16]
   467c8:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   467cc:	ldr	r0, [fp, #-8]
   467d0:	bl	3dd28 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   467d4:	mov	r3, r0
   467d8:	mov	r2, r3
   467dc:	ldr	r3, [fp, #-16]
   467e0:	ldr	r3, [r3, #20]
   467e4:	mov	r1, r3
   467e8:	mov	r0, r2
   467ec:	bl	3e554 <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   467f0:	mov	r2, r0
   467f4:	ldr	r3, [fp, #-16]
   467f8:	ldr	r3, [r3, #20]
   467fc:	add	r2, r3, r2
   46800:	ldr	r3, [fp, #-16]
   46804:	str	r2, [r3, #20]
   46808:	ldr	r3, [fp, #-8]
   4680c:	add	r3, r3, #2
   46810:	str	r3, [fp, #-8]
   46814:	ldr	r3, [fp, #-12]
   46818:	sub	r2, r3, #1
   4681c:	str	r2, [fp, #-12]
   46820:	cmp	r3, #0
   46824:	bne	46770 <flatcc_json_printer_uint16_vector_field@@Base+0x17c>
   46828:	ldr	r3, [fp, #-16]
   4682c:	ldrb	r3, [r3, #25]
   46830:	cmp	r3, #0
   46834:	beq	46870 <flatcc_json_printer_uint16_vector_field@@Base+0x27c>
   46838:	ldr	r3, [fp, #-16]
   4683c:	ldr	r3, [r3, #20]
   46840:	add	r1, r3, #1
   46844:	ldr	r2, [fp, #-16]
   46848:	str	r1, [r2, #20]
   4684c:	mov	r2, #10
   46850:	strb	r2, [r3]
   46854:	ldr	r3, [fp, #-16]
   46858:	ldr	r3, [r3, #32]
   4685c:	sub	r2, r3, #1
   46860:	ldr	r3, [fp, #-16]
   46864:	str	r2, [r3, #32]
   46868:	ldr	r0, [fp, #-16]
   4686c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46870:	ldr	r3, [fp, #-16]
   46874:	ldr	r3, [r3, #20]
   46878:	add	r1, r3, #1
   4687c:	ldr	r2, [fp, #-16]
   46880:	str	r1, [r2, #20]
   46884:	mov	r2, #93	; 0x5d
   46888:	strb	r2, [r3]
   4688c:	nop			; (mov r0, r0)
   46890:	sub	sp, fp, #4
   46894:	pop	{fp, pc}

00046898 <flatcc_json_printer_uint32_vector_field@@Base>:
   46898:	push	{fp, lr}
   4689c:	add	fp, sp, #4
   468a0:	sub	sp, sp, #24
   468a4:	str	r0, [fp, #-16]
   468a8:	str	r1, [fp, #-20]	; 0xffffffec
   468ac:	str	r2, [fp, #-24]	; 0xffffffe8
   468b0:	str	r3, [fp, #-28]	; 0xffffffe4
   468b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   468b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   468bc:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   468c0:	str	r0, [fp, #-8]
   468c4:	ldr	r3, [fp, #-8]
   468c8:	cmp	r3, #0
   468cc:	beq	46b28 <flatcc_json_printer_uint32_vector_field@@Base+0x290>
   468d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   468d4:	ldr	r3, [r3, #16]
   468d8:	add	r1, r3, #1
   468dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   468e0:	str	r1, [r2, #16]
   468e4:	cmp	r3, #0
   468e8:	beq	46908 <flatcc_json_printer_uint32_vector_field@@Base+0x70>
   468ec:	ldr	r3, [fp, #-16]
   468f0:	ldr	r3, [r3, #20]
   468f4:	add	r1, r3, #1
   468f8:	ldr	r2, [fp, #-16]
   468fc:	str	r1, [r2, #20]
   46900:	mov	r2, #44	; 0x2c
   46904:	strb	r2, [r3]
   46908:	ldr	r0, [fp, #-8]
   4690c:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   46910:	str	r0, [fp, #-8]
   46914:	ldr	r0, [fp, #-8]
   46918:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   4691c:	str	r0, [fp, #-12]
   46920:	ldr	r3, [fp, #-8]
   46924:	add	r3, r3, #4
   46928:	str	r3, [fp, #-8]
   4692c:	ldr	r3, [fp, #4]
   46930:	mov	r2, r3
   46934:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46938:	ldr	r0, [fp, #-16]
   4693c:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   46940:	ldr	r3, [fp, #-16]
   46944:	ldr	r3, [r3, #32]
   46948:	add	r2, r3, #1
   4694c:	ldr	r3, [fp, #-16]
   46950:	str	r2, [r3, #32]
   46954:	ldr	r3, [fp, #-16]
   46958:	ldr	r3, [r3, #20]
   4695c:	add	r1, r3, #1
   46960:	ldr	r2, [fp, #-16]
   46964:	str	r1, [r2, #20]
   46968:	mov	r2, #91	; 0x5b
   4696c:	strb	r2, [r3]
   46970:	ldr	r3, [fp, #-12]
   46974:	cmp	r3, #0
   46978:	beq	46ab0 <flatcc_json_printer_uint32_vector_field@@Base+0x218>
   4697c:	ldr	r3, [fp, #-16]
   46980:	ldrb	r3, [r3, #25]
   46984:	cmp	r3, #0
   46988:	beq	469b4 <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   4698c:	ldr	r3, [fp, #-16]
   46990:	ldr	r3, [r3, #20]
   46994:	add	r1, r3, #1
   46998:	ldr	r2, [fp, #-16]
   4699c:	str	r1, [r2, #20]
   469a0:	mov	r2, #10
   469a4:	strb	r2, [r3]
   469a8:	ldr	r0, [fp, #-16]
   469ac:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   469b0:	b	469bc <flatcc_json_printer_uint32_vector_field@@Base+0x124>
   469b4:	ldr	r0, [fp, #-16]
   469b8:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   469bc:	ldr	r0, [fp, #-8]
   469c0:	bl	3dd7c <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   469c4:	mov	r2, r0
   469c8:	ldr	r3, [fp, #-16]
   469cc:	ldr	r3, [r3, #20]
   469d0:	mov	r1, r3
   469d4:	mov	r0, r2
   469d8:	bl	3e87c <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   469dc:	mov	r2, r0
   469e0:	ldr	r3, [fp, #-16]
   469e4:	ldr	r3, [r3, #20]
   469e8:	add	r2, r3, r2
   469ec:	ldr	r3, [fp, #-16]
   469f0:	str	r2, [r3, #20]
   469f4:	ldr	r3, [fp, #-8]
   469f8:	add	r3, r3, #4
   469fc:	str	r3, [fp, #-8]
   46a00:	ldr	r3, [fp, #-12]
   46a04:	sub	r3, r3, #1
   46a08:	str	r3, [fp, #-12]
   46a0c:	b	46ab0 <flatcc_json_printer_uint32_vector_field@@Base+0x218>
   46a10:	ldr	r3, [fp, #-16]
   46a14:	ldr	r3, [r3, #20]
   46a18:	add	r1, r3, #1
   46a1c:	ldr	r2, [fp, #-16]
   46a20:	str	r1, [r2, #20]
   46a24:	mov	r2, #44	; 0x2c
   46a28:	strb	r2, [r3]
   46a2c:	ldr	r3, [fp, #-16]
   46a30:	ldrb	r3, [r3, #25]
   46a34:	cmp	r3, #0
   46a38:	beq	46a64 <flatcc_json_printer_uint32_vector_field@@Base+0x1cc>
   46a3c:	ldr	r3, [fp, #-16]
   46a40:	ldr	r3, [r3, #20]
   46a44:	add	r1, r3, #1
   46a48:	ldr	r2, [fp, #-16]
   46a4c:	str	r1, [r2, #20]
   46a50:	mov	r2, #10
   46a54:	strb	r2, [r3]
   46a58:	ldr	r0, [fp, #-16]
   46a5c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46a60:	b	46a6c <flatcc_json_printer_uint32_vector_field@@Base+0x1d4>
   46a64:	ldr	r0, [fp, #-16]
   46a68:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46a6c:	ldr	r0, [fp, #-8]
   46a70:	bl	3dd7c <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   46a74:	mov	r2, r0
   46a78:	ldr	r3, [fp, #-16]
   46a7c:	ldr	r3, [r3, #20]
   46a80:	mov	r1, r3
   46a84:	mov	r0, r2
   46a88:	bl	3e87c <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   46a8c:	mov	r2, r0
   46a90:	ldr	r3, [fp, #-16]
   46a94:	ldr	r3, [r3, #20]
   46a98:	add	r2, r3, r2
   46a9c:	ldr	r3, [fp, #-16]
   46aa0:	str	r2, [r3, #20]
   46aa4:	ldr	r3, [fp, #-8]
   46aa8:	add	r3, r3, #4
   46aac:	str	r3, [fp, #-8]
   46ab0:	ldr	r3, [fp, #-12]
   46ab4:	sub	r2, r3, #1
   46ab8:	str	r2, [fp, #-12]
   46abc:	cmp	r3, #0
   46ac0:	bne	46a10 <flatcc_json_printer_uint32_vector_field@@Base+0x178>
   46ac4:	ldr	r3, [fp, #-16]
   46ac8:	ldrb	r3, [r3, #25]
   46acc:	cmp	r3, #0
   46ad0:	beq	46b0c <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   46ad4:	ldr	r3, [fp, #-16]
   46ad8:	ldr	r3, [r3, #20]
   46adc:	add	r1, r3, #1
   46ae0:	ldr	r2, [fp, #-16]
   46ae4:	str	r1, [r2, #20]
   46ae8:	mov	r2, #10
   46aec:	strb	r2, [r3]
   46af0:	ldr	r3, [fp, #-16]
   46af4:	ldr	r3, [r3, #32]
   46af8:	sub	r2, r3, #1
   46afc:	ldr	r3, [fp, #-16]
   46b00:	str	r2, [r3, #32]
   46b04:	ldr	r0, [fp, #-16]
   46b08:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46b0c:	ldr	r3, [fp, #-16]
   46b10:	ldr	r3, [r3, #20]
   46b14:	add	r1, r3, #1
   46b18:	ldr	r2, [fp, #-16]
   46b1c:	str	r1, [r2, #20]
   46b20:	mov	r2, #93	; 0x5d
   46b24:	strb	r2, [r3]
   46b28:	nop			; (mov r0, r0)
   46b2c:	sub	sp, fp, #4
   46b30:	pop	{fp, pc}

00046b34 <flatcc_json_printer_uint64_vector_field@@Base>:
   46b34:	push	{fp, lr}
   46b38:	add	fp, sp, #4
   46b3c:	sub	sp, sp, #24
   46b40:	str	r0, [fp, #-16]
   46b44:	str	r1, [fp, #-20]	; 0xffffffec
   46b48:	str	r2, [fp, #-24]	; 0xffffffe8
   46b4c:	str	r3, [fp, #-28]	; 0xffffffe4
   46b50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   46b58:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   46b5c:	str	r0, [fp, #-8]
   46b60:	ldr	r3, [fp, #-8]
   46b64:	cmp	r3, #0
   46b68:	beq	46db4 <flatcc_json_printer_uint64_vector_field@@Base+0x280>
   46b6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   46b70:	ldr	r3, [r3, #16]
   46b74:	add	r1, r3, #1
   46b78:	ldr	r2, [fp, #-20]	; 0xffffffec
   46b7c:	str	r1, [r2, #16]
   46b80:	cmp	r3, #0
   46b84:	beq	46ba4 <flatcc_json_printer_uint64_vector_field@@Base+0x70>
   46b88:	ldr	r3, [fp, #-16]
   46b8c:	ldr	r3, [r3, #20]
   46b90:	add	r1, r3, #1
   46b94:	ldr	r2, [fp, #-16]
   46b98:	str	r1, [r2, #20]
   46b9c:	mov	r2, #44	; 0x2c
   46ba0:	strb	r2, [r3]
   46ba4:	ldr	r0, [fp, #-8]
   46ba8:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   46bac:	str	r0, [fp, #-8]
   46bb0:	ldr	r0, [fp, #-8]
   46bb4:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   46bb8:	str	r0, [fp, #-12]
   46bbc:	ldr	r3, [fp, #-8]
   46bc0:	add	r3, r3, #4
   46bc4:	str	r3, [fp, #-8]
   46bc8:	ldr	r3, [fp, #4]
   46bcc:	mov	r2, r3
   46bd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46bd4:	ldr	r0, [fp, #-16]
   46bd8:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   46bdc:	ldr	r3, [fp, #-16]
   46be0:	ldr	r3, [r3, #32]
   46be4:	add	r2, r3, #1
   46be8:	ldr	r3, [fp, #-16]
   46bec:	str	r2, [r3, #32]
   46bf0:	ldr	r3, [fp, #-16]
   46bf4:	ldr	r3, [r3, #20]
   46bf8:	add	r1, r3, #1
   46bfc:	ldr	r2, [fp, #-16]
   46c00:	str	r1, [r2, #20]
   46c04:	mov	r2, #91	; 0x5b
   46c08:	strb	r2, [r3]
   46c0c:	ldr	r3, [fp, #-12]
   46c10:	cmp	r3, #0
   46c14:	beq	46d3c <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   46c18:	ldr	r3, [fp, #-16]
   46c1c:	ldrb	r3, [r3, #25]
   46c20:	cmp	r3, #0
   46c24:	beq	46c50 <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   46c28:	ldr	r3, [fp, #-16]
   46c2c:	ldr	r3, [r3, #20]
   46c30:	add	r1, r3, #1
   46c34:	ldr	r2, [fp, #-16]
   46c38:	str	r1, [r2, #20]
   46c3c:	mov	r2, #10
   46c40:	strb	r2, [r3]
   46c44:	ldr	r0, [fp, #-16]
   46c48:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46c4c:	b	46c58 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
   46c50:	ldr	r0, [fp, #-16]
   46c54:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46c58:	ldr	r0, [fp, #-8]
   46c5c:	bl	3ddd4 <flatcc_json_parser_struct_as_root@@Base+0x250>
   46c60:	ldr	r3, [fp, #-16]
   46c64:	ldr	r3, [r3, #20]
   46c68:	mov	r2, r3
   46c6c:	bl	3eeb4 <flatcc_json_parser_struct_as_root@@Base+0x1330>
   46c70:	mov	r2, r0
   46c74:	ldr	r3, [fp, #-16]
   46c78:	ldr	r3, [r3, #20]
   46c7c:	add	r2, r3, r2
   46c80:	ldr	r3, [fp, #-16]
   46c84:	str	r2, [r3, #20]
   46c88:	ldr	r3, [fp, #-8]
   46c8c:	add	r3, r3, #8
   46c90:	str	r3, [fp, #-8]
   46c94:	ldr	r3, [fp, #-12]
   46c98:	sub	r3, r3, #1
   46c9c:	str	r3, [fp, #-12]
   46ca0:	b	46d3c <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   46ca4:	ldr	r3, [fp, #-16]
   46ca8:	ldr	r3, [r3, #20]
   46cac:	add	r1, r3, #1
   46cb0:	ldr	r2, [fp, #-16]
   46cb4:	str	r1, [r2, #20]
   46cb8:	mov	r2, #44	; 0x2c
   46cbc:	strb	r2, [r3]
   46cc0:	ldr	r3, [fp, #-16]
   46cc4:	ldrb	r3, [r3, #25]
   46cc8:	cmp	r3, #0
   46ccc:	beq	46cf8 <flatcc_json_printer_uint64_vector_field@@Base+0x1c4>
   46cd0:	ldr	r3, [fp, #-16]
   46cd4:	ldr	r3, [r3, #20]
   46cd8:	add	r1, r3, #1
   46cdc:	ldr	r2, [fp, #-16]
   46ce0:	str	r1, [r2, #20]
   46ce4:	mov	r2, #10
   46ce8:	strb	r2, [r3]
   46cec:	ldr	r0, [fp, #-16]
   46cf0:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46cf4:	b	46d00 <flatcc_json_printer_uint64_vector_field@@Base+0x1cc>
   46cf8:	ldr	r0, [fp, #-16]
   46cfc:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46d00:	ldr	r0, [fp, #-8]
   46d04:	bl	3ddd4 <flatcc_json_parser_struct_as_root@@Base+0x250>
   46d08:	ldr	r3, [fp, #-16]
   46d0c:	ldr	r3, [r3, #20]
   46d10:	mov	r2, r3
   46d14:	bl	3eeb4 <flatcc_json_parser_struct_as_root@@Base+0x1330>
   46d18:	mov	r2, r0
   46d1c:	ldr	r3, [fp, #-16]
   46d20:	ldr	r3, [r3, #20]
   46d24:	add	r2, r3, r2
   46d28:	ldr	r3, [fp, #-16]
   46d2c:	str	r2, [r3, #20]
   46d30:	ldr	r3, [fp, #-8]
   46d34:	add	r3, r3, #8
   46d38:	str	r3, [fp, #-8]
   46d3c:	ldr	r3, [fp, #-12]
   46d40:	sub	r2, r3, #1
   46d44:	str	r2, [fp, #-12]
   46d48:	cmp	r3, #0
   46d4c:	bne	46ca4 <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   46d50:	ldr	r3, [fp, #-16]
   46d54:	ldrb	r3, [r3, #25]
   46d58:	cmp	r3, #0
   46d5c:	beq	46d98 <flatcc_json_printer_uint64_vector_field@@Base+0x264>
   46d60:	ldr	r3, [fp, #-16]
   46d64:	ldr	r3, [r3, #20]
   46d68:	add	r1, r3, #1
   46d6c:	ldr	r2, [fp, #-16]
   46d70:	str	r1, [r2, #20]
   46d74:	mov	r2, #10
   46d78:	strb	r2, [r3]
   46d7c:	ldr	r3, [fp, #-16]
   46d80:	ldr	r3, [r3, #32]
   46d84:	sub	r2, r3, #1
   46d88:	ldr	r3, [fp, #-16]
   46d8c:	str	r2, [r3, #32]
   46d90:	ldr	r0, [fp, #-16]
   46d94:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46d98:	ldr	r3, [fp, #-16]
   46d9c:	ldr	r3, [r3, #20]
   46da0:	add	r1, r3, #1
   46da4:	ldr	r2, [fp, #-16]
   46da8:	str	r1, [r2, #20]
   46dac:	mov	r2, #93	; 0x5d
   46db0:	strb	r2, [r3]
   46db4:	nop			; (mov r0, r0)
   46db8:	sub	sp, fp, #4
   46dbc:	pop	{fp, pc}

00046dc0 <flatcc_json_printer_int8_vector_field@@Base>:
   46dc0:	push	{fp, lr}
   46dc4:	add	fp, sp, #4
   46dc8:	sub	sp, sp, #24
   46dcc:	str	r0, [fp, #-16]
   46dd0:	str	r1, [fp, #-20]	; 0xffffffec
   46dd4:	str	r2, [fp, #-24]	; 0xffffffe8
   46dd8:	str	r3, [fp, #-28]	; 0xffffffe4
   46ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46de0:	ldr	r0, [fp, #-20]	; 0xffffffec
   46de4:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   46de8:	str	r0, [fp, #-8]
   46dec:	ldr	r3, [fp, #-8]
   46df0:	cmp	r3, #0
   46df4:	beq	47058 <flatcc_json_printer_int8_vector_field@@Base+0x298>
   46df8:	ldr	r3, [fp, #-20]	; 0xffffffec
   46dfc:	ldr	r3, [r3, #16]
   46e00:	add	r1, r3, #1
   46e04:	ldr	r2, [fp, #-20]	; 0xffffffec
   46e08:	str	r1, [r2, #16]
   46e0c:	cmp	r3, #0
   46e10:	beq	46e30 <flatcc_json_printer_int8_vector_field@@Base+0x70>
   46e14:	ldr	r3, [fp, #-16]
   46e18:	ldr	r3, [r3, #20]
   46e1c:	add	r1, r3, #1
   46e20:	ldr	r2, [fp, #-16]
   46e24:	str	r1, [r2, #20]
   46e28:	mov	r2, #44	; 0x2c
   46e2c:	strb	r2, [r3]
   46e30:	ldr	r0, [fp, #-8]
   46e34:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   46e38:	str	r0, [fp, #-8]
   46e3c:	ldr	r0, [fp, #-8]
   46e40:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   46e44:	str	r0, [fp, #-12]
   46e48:	ldr	r3, [fp, #-8]
   46e4c:	add	r3, r3, #4
   46e50:	str	r3, [fp, #-8]
   46e54:	ldr	r3, [fp, #4]
   46e58:	mov	r2, r3
   46e5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46e60:	ldr	r0, [fp, #-16]
   46e64:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   46e68:	ldr	r3, [fp, #-16]
   46e6c:	ldr	r3, [r3, #32]
   46e70:	add	r2, r3, #1
   46e74:	ldr	r3, [fp, #-16]
   46e78:	str	r2, [r3, #32]
   46e7c:	ldr	r3, [fp, #-16]
   46e80:	ldr	r3, [r3, #20]
   46e84:	add	r1, r3, #1
   46e88:	ldr	r2, [fp, #-16]
   46e8c:	str	r1, [r2, #20]
   46e90:	mov	r2, #91	; 0x5b
   46e94:	strb	r2, [r3]
   46e98:	ldr	r3, [fp, #-12]
   46e9c:	cmp	r3, #0
   46ea0:	beq	46fe0 <flatcc_json_printer_int8_vector_field@@Base+0x220>
   46ea4:	ldr	r3, [fp, #-16]
   46ea8:	ldrb	r3, [r3, #25]
   46eac:	cmp	r3, #0
   46eb0:	beq	46edc <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   46eb4:	ldr	r3, [fp, #-16]
   46eb8:	ldr	r3, [r3, #20]
   46ebc:	add	r1, r3, #1
   46ec0:	ldr	r2, [fp, #-16]
   46ec4:	str	r1, [r2, #20]
   46ec8:	mov	r2, #10
   46ecc:	strb	r2, [r3]
   46ed0:	ldr	r0, [fp, #-16]
   46ed4:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46ed8:	b	46ee4 <flatcc_json_printer_int8_vector_field@@Base+0x124>
   46edc:	ldr	r0, [fp, #-16]
   46ee0:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46ee4:	ldr	r0, [fp, #-8]
   46ee8:	bl	3de38 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   46eec:	mov	r3, r0
   46ef0:	mov	r2, r3
   46ef4:	ldr	r3, [fp, #-16]
   46ef8:	ldr	r3, [r3, #20]
   46efc:	mov	r1, r3
   46f00:	mov	r0, r2
   46f04:	bl	3fa3c <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   46f08:	mov	r2, r0
   46f0c:	ldr	r3, [fp, #-16]
   46f10:	ldr	r3, [r3, #20]
   46f14:	add	r2, r3, r2
   46f18:	ldr	r3, [fp, #-16]
   46f1c:	str	r2, [r3, #20]
   46f20:	ldr	r3, [fp, #-8]
   46f24:	add	r3, r3, #1
   46f28:	str	r3, [fp, #-8]
   46f2c:	ldr	r3, [fp, #-12]
   46f30:	sub	r3, r3, #1
   46f34:	str	r3, [fp, #-12]
   46f38:	b	46fe0 <flatcc_json_printer_int8_vector_field@@Base+0x220>
   46f3c:	ldr	r3, [fp, #-16]
   46f40:	ldr	r3, [r3, #20]
   46f44:	add	r1, r3, #1
   46f48:	ldr	r2, [fp, #-16]
   46f4c:	str	r1, [r2, #20]
   46f50:	mov	r2, #44	; 0x2c
   46f54:	strb	r2, [r3]
   46f58:	ldr	r3, [fp, #-16]
   46f5c:	ldrb	r3, [r3, #25]
   46f60:	cmp	r3, #0
   46f64:	beq	46f90 <flatcc_json_printer_int8_vector_field@@Base+0x1d0>
   46f68:	ldr	r3, [fp, #-16]
   46f6c:	ldr	r3, [r3, #20]
   46f70:	add	r1, r3, #1
   46f74:	ldr	r2, [fp, #-16]
   46f78:	str	r1, [r2, #20]
   46f7c:	mov	r2, #10
   46f80:	strb	r2, [r3]
   46f84:	ldr	r0, [fp, #-16]
   46f88:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46f8c:	b	46f98 <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   46f90:	ldr	r0, [fp, #-16]
   46f94:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46f98:	ldr	r0, [fp, #-8]
   46f9c:	bl	3de38 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   46fa0:	mov	r3, r0
   46fa4:	mov	r2, r3
   46fa8:	ldr	r3, [fp, #-16]
   46fac:	ldr	r3, [r3, #20]
   46fb0:	mov	r1, r3
   46fb4:	mov	r0, r2
   46fb8:	bl	3fa3c <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   46fbc:	mov	r2, r0
   46fc0:	ldr	r3, [fp, #-16]
   46fc4:	ldr	r3, [r3, #20]
   46fc8:	add	r2, r3, r2
   46fcc:	ldr	r3, [fp, #-16]
   46fd0:	str	r2, [r3, #20]
   46fd4:	ldr	r3, [fp, #-8]
   46fd8:	add	r3, r3, #1
   46fdc:	str	r3, [fp, #-8]
   46fe0:	ldr	r3, [fp, #-12]
   46fe4:	sub	r2, r3, #1
   46fe8:	str	r2, [fp, #-12]
   46fec:	cmp	r3, #0
   46ff0:	bne	46f3c <flatcc_json_printer_int8_vector_field@@Base+0x17c>
   46ff4:	ldr	r3, [fp, #-16]
   46ff8:	ldrb	r3, [r3, #25]
   46ffc:	cmp	r3, #0
   47000:	beq	4703c <flatcc_json_printer_int8_vector_field@@Base+0x27c>
   47004:	ldr	r3, [fp, #-16]
   47008:	ldr	r3, [r3, #20]
   4700c:	add	r1, r3, #1
   47010:	ldr	r2, [fp, #-16]
   47014:	str	r1, [r2, #20]
   47018:	mov	r2, #10
   4701c:	strb	r2, [r3]
   47020:	ldr	r3, [fp, #-16]
   47024:	ldr	r3, [r3, #32]
   47028:	sub	r2, r3, #1
   4702c:	ldr	r3, [fp, #-16]
   47030:	str	r2, [r3, #32]
   47034:	ldr	r0, [fp, #-16]
   47038:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4703c:	ldr	r3, [fp, #-16]
   47040:	ldr	r3, [r3, #20]
   47044:	add	r1, r3, #1
   47048:	ldr	r2, [fp, #-16]
   4704c:	str	r1, [r2, #20]
   47050:	mov	r2, #93	; 0x5d
   47054:	strb	r2, [r3]
   47058:	nop			; (mov r0, r0)
   4705c:	sub	sp, fp, #4
   47060:	pop	{fp, pc}

00047064 <flatcc_json_printer_int16_vector_field@@Base>:
   47064:	push	{fp, lr}
   47068:	add	fp, sp, #4
   4706c:	sub	sp, sp, #24
   47070:	str	r0, [fp, #-16]
   47074:	str	r1, [fp, #-20]	; 0xffffffec
   47078:	str	r2, [fp, #-24]	; 0xffffffe8
   4707c:	str	r3, [fp, #-28]	; 0xffffffe4
   47080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47084:	ldr	r0, [fp, #-20]	; 0xffffffec
   47088:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4708c:	str	r0, [fp, #-8]
   47090:	ldr	r3, [fp, #-8]
   47094:	cmp	r3, #0
   47098:	beq	472fc <flatcc_json_printer_int16_vector_field@@Base+0x298>
   4709c:	ldr	r3, [fp, #-20]	; 0xffffffec
   470a0:	ldr	r3, [r3, #16]
   470a4:	add	r1, r3, #1
   470a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   470ac:	str	r1, [r2, #16]
   470b0:	cmp	r3, #0
   470b4:	beq	470d4 <flatcc_json_printer_int16_vector_field@@Base+0x70>
   470b8:	ldr	r3, [fp, #-16]
   470bc:	ldr	r3, [r3, #20]
   470c0:	add	r1, r3, #1
   470c4:	ldr	r2, [fp, #-16]
   470c8:	str	r1, [r2, #20]
   470cc:	mov	r2, #44	; 0x2c
   470d0:	strb	r2, [r3]
   470d4:	ldr	r0, [fp, #-8]
   470d8:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   470dc:	str	r0, [fp, #-8]
   470e0:	ldr	r0, [fp, #-8]
   470e4:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   470e8:	str	r0, [fp, #-12]
   470ec:	ldr	r3, [fp, #-8]
   470f0:	add	r3, r3, #4
   470f4:	str	r3, [fp, #-8]
   470f8:	ldr	r3, [fp, #4]
   470fc:	mov	r2, r3
   47100:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47104:	ldr	r0, [fp, #-16]
   47108:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4710c:	ldr	r3, [fp, #-16]
   47110:	ldr	r3, [r3, #32]
   47114:	add	r2, r3, #1
   47118:	ldr	r3, [fp, #-16]
   4711c:	str	r2, [r3, #32]
   47120:	ldr	r3, [fp, #-16]
   47124:	ldr	r3, [r3, #20]
   47128:	add	r1, r3, #1
   4712c:	ldr	r2, [fp, #-16]
   47130:	str	r1, [r2, #20]
   47134:	mov	r2, #91	; 0x5b
   47138:	strb	r2, [r3]
   4713c:	ldr	r3, [fp, #-12]
   47140:	cmp	r3, #0
   47144:	beq	47284 <flatcc_json_printer_int16_vector_field@@Base+0x220>
   47148:	ldr	r3, [fp, #-16]
   4714c:	ldrb	r3, [r3, #25]
   47150:	cmp	r3, #0
   47154:	beq	47180 <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   47158:	ldr	r3, [fp, #-16]
   4715c:	ldr	r3, [r3, #20]
   47160:	add	r1, r3, #1
   47164:	ldr	r2, [fp, #-16]
   47168:	str	r1, [r2, #20]
   4716c:	mov	r2, #10
   47170:	strb	r2, [r3]
   47174:	ldr	r0, [fp, #-16]
   47178:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4717c:	b	47188 <flatcc_json_printer_int16_vector_field@@Base+0x124>
   47180:	ldr	r0, [fp, #-16]
   47184:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47188:	ldr	r0, [fp, #-8]
   4718c:	bl	3de90 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   47190:	mov	r3, r0
   47194:	mov	r2, r3
   47198:	ldr	r3, [fp, #-16]
   4719c:	ldr	r3, [r3, #20]
   471a0:	mov	r1, r3
   471a4:	mov	r0, r2
   471a8:	bl	3fabc <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   471ac:	mov	r2, r0
   471b0:	ldr	r3, [fp, #-16]
   471b4:	ldr	r3, [r3, #20]
   471b8:	add	r2, r3, r2
   471bc:	ldr	r3, [fp, #-16]
   471c0:	str	r2, [r3, #20]
   471c4:	ldr	r3, [fp, #-8]
   471c8:	add	r3, r3, #2
   471cc:	str	r3, [fp, #-8]
   471d0:	ldr	r3, [fp, #-12]
   471d4:	sub	r3, r3, #1
   471d8:	str	r3, [fp, #-12]
   471dc:	b	47284 <flatcc_json_printer_int16_vector_field@@Base+0x220>
   471e0:	ldr	r3, [fp, #-16]
   471e4:	ldr	r3, [r3, #20]
   471e8:	add	r1, r3, #1
   471ec:	ldr	r2, [fp, #-16]
   471f0:	str	r1, [r2, #20]
   471f4:	mov	r2, #44	; 0x2c
   471f8:	strb	r2, [r3]
   471fc:	ldr	r3, [fp, #-16]
   47200:	ldrb	r3, [r3, #25]
   47204:	cmp	r3, #0
   47208:	beq	47234 <flatcc_json_printer_int16_vector_field@@Base+0x1d0>
   4720c:	ldr	r3, [fp, #-16]
   47210:	ldr	r3, [r3, #20]
   47214:	add	r1, r3, #1
   47218:	ldr	r2, [fp, #-16]
   4721c:	str	r1, [r2, #20]
   47220:	mov	r2, #10
   47224:	strb	r2, [r3]
   47228:	ldr	r0, [fp, #-16]
   4722c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47230:	b	4723c <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   47234:	ldr	r0, [fp, #-16]
   47238:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   4723c:	ldr	r0, [fp, #-8]
   47240:	bl	3de90 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   47244:	mov	r3, r0
   47248:	mov	r2, r3
   4724c:	ldr	r3, [fp, #-16]
   47250:	ldr	r3, [r3, #20]
   47254:	mov	r1, r3
   47258:	mov	r0, r2
   4725c:	bl	3fabc <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   47260:	mov	r2, r0
   47264:	ldr	r3, [fp, #-16]
   47268:	ldr	r3, [r3, #20]
   4726c:	add	r2, r3, r2
   47270:	ldr	r3, [fp, #-16]
   47274:	str	r2, [r3, #20]
   47278:	ldr	r3, [fp, #-8]
   4727c:	add	r3, r3, #2
   47280:	str	r3, [fp, #-8]
   47284:	ldr	r3, [fp, #-12]
   47288:	sub	r2, r3, #1
   4728c:	str	r2, [fp, #-12]
   47290:	cmp	r3, #0
   47294:	bne	471e0 <flatcc_json_printer_int16_vector_field@@Base+0x17c>
   47298:	ldr	r3, [fp, #-16]
   4729c:	ldrb	r3, [r3, #25]
   472a0:	cmp	r3, #0
   472a4:	beq	472e0 <flatcc_json_printer_int16_vector_field@@Base+0x27c>
   472a8:	ldr	r3, [fp, #-16]
   472ac:	ldr	r3, [r3, #20]
   472b0:	add	r1, r3, #1
   472b4:	ldr	r2, [fp, #-16]
   472b8:	str	r1, [r2, #20]
   472bc:	mov	r2, #10
   472c0:	strb	r2, [r3]
   472c4:	ldr	r3, [fp, #-16]
   472c8:	ldr	r3, [r3, #32]
   472cc:	sub	r2, r3, #1
   472d0:	ldr	r3, [fp, #-16]
   472d4:	str	r2, [r3, #32]
   472d8:	ldr	r0, [fp, #-16]
   472dc:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   472e0:	ldr	r3, [fp, #-16]
   472e4:	ldr	r3, [r3, #20]
   472e8:	add	r1, r3, #1
   472ec:	ldr	r2, [fp, #-16]
   472f0:	str	r1, [r2, #20]
   472f4:	mov	r2, #93	; 0x5d
   472f8:	strb	r2, [r3]
   472fc:	nop			; (mov r0, r0)
   47300:	sub	sp, fp, #4
   47304:	pop	{fp, pc}

00047308 <flatcc_json_printer_int32_vector_field@@Base>:
   47308:	push	{fp, lr}
   4730c:	add	fp, sp, #4
   47310:	sub	sp, sp, #24
   47314:	str	r0, [fp, #-16]
   47318:	str	r1, [fp, #-20]	; 0xffffffec
   4731c:	str	r2, [fp, #-24]	; 0xffffffe8
   47320:	str	r3, [fp, #-28]	; 0xffffffe4
   47324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47328:	ldr	r0, [fp, #-20]	; 0xffffffec
   4732c:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   47330:	str	r0, [fp, #-8]
   47334:	ldr	r3, [fp, #-8]
   47338:	cmp	r3, #0
   4733c:	beq	47598 <flatcc_json_printer_int32_vector_field@@Base+0x290>
   47340:	ldr	r3, [fp, #-20]	; 0xffffffec
   47344:	ldr	r3, [r3, #16]
   47348:	add	r1, r3, #1
   4734c:	ldr	r2, [fp, #-20]	; 0xffffffec
   47350:	str	r1, [r2, #16]
   47354:	cmp	r3, #0
   47358:	beq	47378 <flatcc_json_printer_int32_vector_field@@Base+0x70>
   4735c:	ldr	r3, [fp, #-16]
   47360:	ldr	r3, [r3, #20]
   47364:	add	r1, r3, #1
   47368:	ldr	r2, [fp, #-16]
   4736c:	str	r1, [r2, #20]
   47370:	mov	r2, #44	; 0x2c
   47374:	strb	r2, [r3]
   47378:	ldr	r0, [fp, #-8]
   4737c:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   47380:	str	r0, [fp, #-8]
   47384:	ldr	r0, [fp, #-8]
   47388:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   4738c:	str	r0, [fp, #-12]
   47390:	ldr	r3, [fp, #-8]
   47394:	add	r3, r3, #4
   47398:	str	r3, [fp, #-8]
   4739c:	ldr	r3, [fp, #4]
   473a0:	mov	r2, r3
   473a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   473a8:	ldr	r0, [fp, #-16]
   473ac:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   473b0:	ldr	r3, [fp, #-16]
   473b4:	ldr	r3, [r3, #32]
   473b8:	add	r2, r3, #1
   473bc:	ldr	r3, [fp, #-16]
   473c0:	str	r2, [r3, #32]
   473c4:	ldr	r3, [fp, #-16]
   473c8:	ldr	r3, [r3, #20]
   473cc:	add	r1, r3, #1
   473d0:	ldr	r2, [fp, #-16]
   473d4:	str	r1, [r2, #20]
   473d8:	mov	r2, #91	; 0x5b
   473dc:	strb	r2, [r3]
   473e0:	ldr	r3, [fp, #-12]
   473e4:	cmp	r3, #0
   473e8:	beq	47520 <flatcc_json_printer_int32_vector_field@@Base+0x218>
   473ec:	ldr	r3, [fp, #-16]
   473f0:	ldrb	r3, [r3, #25]
   473f4:	cmp	r3, #0
   473f8:	beq	47424 <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   473fc:	ldr	r3, [fp, #-16]
   47400:	ldr	r3, [r3, #20]
   47404:	add	r1, r3, #1
   47408:	ldr	r2, [fp, #-16]
   4740c:	str	r1, [r2, #20]
   47410:	mov	r2, #10
   47414:	strb	r2, [r3]
   47418:	ldr	r0, [fp, #-16]
   4741c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47420:	b	4742c <flatcc_json_printer_int32_vector_field@@Base+0x124>
   47424:	ldr	r0, [fp, #-16]
   47428:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   4742c:	ldr	r0, [fp, #-8]
   47430:	bl	3dee4 <flatcc_json_parser_struct_as_root@@Base+0x360>
   47434:	mov	r2, r0
   47438:	ldr	r3, [fp, #-16]
   4743c:	ldr	r3, [r3, #20]
   47440:	mov	r1, r3
   47444:	mov	r0, r2
   47448:	bl	3fb3c <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   4744c:	mov	r2, r0
   47450:	ldr	r3, [fp, #-16]
   47454:	ldr	r3, [r3, #20]
   47458:	add	r2, r3, r2
   4745c:	ldr	r3, [fp, #-16]
   47460:	str	r2, [r3, #20]
   47464:	ldr	r3, [fp, #-8]
   47468:	add	r3, r3, #4
   4746c:	str	r3, [fp, #-8]
   47470:	ldr	r3, [fp, #-12]
   47474:	sub	r3, r3, #1
   47478:	str	r3, [fp, #-12]
   4747c:	b	47520 <flatcc_json_printer_int32_vector_field@@Base+0x218>
   47480:	ldr	r3, [fp, #-16]
   47484:	ldr	r3, [r3, #20]
   47488:	add	r1, r3, #1
   4748c:	ldr	r2, [fp, #-16]
   47490:	str	r1, [r2, #20]
   47494:	mov	r2, #44	; 0x2c
   47498:	strb	r2, [r3]
   4749c:	ldr	r3, [fp, #-16]
   474a0:	ldrb	r3, [r3, #25]
   474a4:	cmp	r3, #0
   474a8:	beq	474d4 <flatcc_json_printer_int32_vector_field@@Base+0x1cc>
   474ac:	ldr	r3, [fp, #-16]
   474b0:	ldr	r3, [r3, #20]
   474b4:	add	r1, r3, #1
   474b8:	ldr	r2, [fp, #-16]
   474bc:	str	r1, [r2, #20]
   474c0:	mov	r2, #10
   474c4:	strb	r2, [r3]
   474c8:	ldr	r0, [fp, #-16]
   474cc:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   474d0:	b	474dc <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   474d4:	ldr	r0, [fp, #-16]
   474d8:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   474dc:	ldr	r0, [fp, #-8]
   474e0:	bl	3dee4 <flatcc_json_parser_struct_as_root@@Base+0x360>
   474e4:	mov	r2, r0
   474e8:	ldr	r3, [fp, #-16]
   474ec:	ldr	r3, [r3, #20]
   474f0:	mov	r1, r3
   474f4:	mov	r0, r2
   474f8:	bl	3fb3c <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   474fc:	mov	r2, r0
   47500:	ldr	r3, [fp, #-16]
   47504:	ldr	r3, [r3, #20]
   47508:	add	r2, r3, r2
   4750c:	ldr	r3, [fp, #-16]
   47510:	str	r2, [r3, #20]
   47514:	ldr	r3, [fp, #-8]
   47518:	add	r3, r3, #4
   4751c:	str	r3, [fp, #-8]
   47520:	ldr	r3, [fp, #-12]
   47524:	sub	r2, r3, #1
   47528:	str	r2, [fp, #-12]
   4752c:	cmp	r3, #0
   47530:	bne	47480 <flatcc_json_printer_int32_vector_field@@Base+0x178>
   47534:	ldr	r3, [fp, #-16]
   47538:	ldrb	r3, [r3, #25]
   4753c:	cmp	r3, #0
   47540:	beq	4757c <flatcc_json_printer_int32_vector_field@@Base+0x274>
   47544:	ldr	r3, [fp, #-16]
   47548:	ldr	r3, [r3, #20]
   4754c:	add	r1, r3, #1
   47550:	ldr	r2, [fp, #-16]
   47554:	str	r1, [r2, #20]
   47558:	mov	r2, #10
   4755c:	strb	r2, [r3]
   47560:	ldr	r3, [fp, #-16]
   47564:	ldr	r3, [r3, #32]
   47568:	sub	r2, r3, #1
   4756c:	ldr	r3, [fp, #-16]
   47570:	str	r2, [r3, #32]
   47574:	ldr	r0, [fp, #-16]
   47578:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4757c:	ldr	r3, [fp, #-16]
   47580:	ldr	r3, [r3, #20]
   47584:	add	r1, r3, #1
   47588:	ldr	r2, [fp, #-16]
   4758c:	str	r1, [r2, #20]
   47590:	mov	r2, #93	; 0x5d
   47594:	strb	r2, [r3]
   47598:	nop			; (mov r0, r0)
   4759c:	sub	sp, fp, #4
   475a0:	pop	{fp, pc}

000475a4 <flatcc_json_printer_int64_vector_field@@Base>:
   475a4:	push	{fp, lr}
   475a8:	add	fp, sp, #4
   475ac:	sub	sp, sp, #24
   475b0:	str	r0, [fp, #-16]
   475b4:	str	r1, [fp, #-20]	; 0xffffffec
   475b8:	str	r2, [fp, #-24]	; 0xffffffe8
   475bc:	str	r3, [fp, #-28]	; 0xffffffe4
   475c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   475c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   475c8:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   475cc:	str	r0, [fp, #-8]
   475d0:	ldr	r3, [fp, #-8]
   475d4:	cmp	r3, #0
   475d8:	beq	47824 <flatcc_json_printer_int64_vector_field@@Base+0x280>
   475dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   475e0:	ldr	r3, [r3, #16]
   475e4:	add	r1, r3, #1
   475e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   475ec:	str	r1, [r2, #16]
   475f0:	cmp	r3, #0
   475f4:	beq	47614 <flatcc_json_printer_int64_vector_field@@Base+0x70>
   475f8:	ldr	r3, [fp, #-16]
   475fc:	ldr	r3, [r3, #20]
   47600:	add	r1, r3, #1
   47604:	ldr	r2, [fp, #-16]
   47608:	str	r1, [r2, #20]
   4760c:	mov	r2, #44	; 0x2c
   47610:	strb	r2, [r3]
   47614:	ldr	r0, [fp, #-8]
   47618:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4761c:	str	r0, [fp, #-8]
   47620:	ldr	r0, [fp, #-8]
   47624:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   47628:	str	r0, [fp, #-12]
   4762c:	ldr	r3, [fp, #-8]
   47630:	add	r3, r3, #4
   47634:	str	r3, [fp, #-8]
   47638:	ldr	r3, [fp, #4]
   4763c:	mov	r2, r3
   47640:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47644:	ldr	r0, [fp, #-16]
   47648:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4764c:	ldr	r3, [fp, #-16]
   47650:	ldr	r3, [r3, #32]
   47654:	add	r2, r3, #1
   47658:	ldr	r3, [fp, #-16]
   4765c:	str	r2, [r3, #32]
   47660:	ldr	r3, [fp, #-16]
   47664:	ldr	r3, [r3, #20]
   47668:	add	r1, r3, #1
   4766c:	ldr	r2, [fp, #-16]
   47670:	str	r1, [r2, #20]
   47674:	mov	r2, #91	; 0x5b
   47678:	strb	r2, [r3]
   4767c:	ldr	r3, [fp, #-12]
   47680:	cmp	r3, #0
   47684:	beq	477ac <flatcc_json_printer_int64_vector_field@@Base+0x208>
   47688:	ldr	r3, [fp, #-16]
   4768c:	ldrb	r3, [r3, #25]
   47690:	cmp	r3, #0
   47694:	beq	476c0 <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   47698:	ldr	r3, [fp, #-16]
   4769c:	ldr	r3, [r3, #20]
   476a0:	add	r1, r3, #1
   476a4:	ldr	r2, [fp, #-16]
   476a8:	str	r1, [r2, #20]
   476ac:	mov	r2, #10
   476b0:	strb	r2, [r3]
   476b4:	ldr	r0, [fp, #-16]
   476b8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   476bc:	b	476c8 <flatcc_json_printer_int64_vector_field@@Base+0x124>
   476c0:	ldr	r0, [fp, #-16]
   476c4:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   476c8:	ldr	r0, [fp, #-8]
   476cc:	bl	3df3c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   476d0:	ldr	r3, [fp, #-16]
   476d4:	ldr	r3, [r3, #20]
   476d8:	mov	r2, r3
   476dc:	bl	3fbb4 <flatcc_json_parser_struct_as_root@@Base+0x2030>
   476e0:	mov	r2, r0
   476e4:	ldr	r3, [fp, #-16]
   476e8:	ldr	r3, [r3, #20]
   476ec:	add	r2, r3, r2
   476f0:	ldr	r3, [fp, #-16]
   476f4:	str	r2, [r3, #20]
   476f8:	ldr	r3, [fp, #-8]
   476fc:	add	r3, r3, #8
   47700:	str	r3, [fp, #-8]
   47704:	ldr	r3, [fp, #-12]
   47708:	sub	r3, r3, #1
   4770c:	str	r3, [fp, #-12]
   47710:	b	477ac <flatcc_json_printer_int64_vector_field@@Base+0x208>
   47714:	ldr	r3, [fp, #-16]
   47718:	ldr	r3, [r3, #20]
   4771c:	add	r1, r3, #1
   47720:	ldr	r2, [fp, #-16]
   47724:	str	r1, [r2, #20]
   47728:	mov	r2, #44	; 0x2c
   4772c:	strb	r2, [r3]
   47730:	ldr	r3, [fp, #-16]
   47734:	ldrb	r3, [r3, #25]
   47738:	cmp	r3, #0
   4773c:	beq	47768 <flatcc_json_printer_int64_vector_field@@Base+0x1c4>
   47740:	ldr	r3, [fp, #-16]
   47744:	ldr	r3, [r3, #20]
   47748:	add	r1, r3, #1
   4774c:	ldr	r2, [fp, #-16]
   47750:	str	r1, [r2, #20]
   47754:	mov	r2, #10
   47758:	strb	r2, [r3]
   4775c:	ldr	r0, [fp, #-16]
   47760:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47764:	b	47770 <flatcc_json_printer_int64_vector_field@@Base+0x1cc>
   47768:	ldr	r0, [fp, #-16]
   4776c:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47770:	ldr	r0, [fp, #-8]
   47774:	bl	3df3c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   47778:	ldr	r3, [fp, #-16]
   4777c:	ldr	r3, [r3, #20]
   47780:	mov	r2, r3
   47784:	bl	3fbb4 <flatcc_json_parser_struct_as_root@@Base+0x2030>
   47788:	mov	r2, r0
   4778c:	ldr	r3, [fp, #-16]
   47790:	ldr	r3, [r3, #20]
   47794:	add	r2, r3, r2
   47798:	ldr	r3, [fp, #-16]
   4779c:	str	r2, [r3, #20]
   477a0:	ldr	r3, [fp, #-8]
   477a4:	add	r3, r3, #8
   477a8:	str	r3, [fp, #-8]
   477ac:	ldr	r3, [fp, #-12]
   477b0:	sub	r2, r3, #1
   477b4:	str	r2, [fp, #-12]
   477b8:	cmp	r3, #0
   477bc:	bne	47714 <flatcc_json_printer_int64_vector_field@@Base+0x170>
   477c0:	ldr	r3, [fp, #-16]
   477c4:	ldrb	r3, [r3, #25]
   477c8:	cmp	r3, #0
   477cc:	beq	47808 <flatcc_json_printer_int64_vector_field@@Base+0x264>
   477d0:	ldr	r3, [fp, #-16]
   477d4:	ldr	r3, [r3, #20]
   477d8:	add	r1, r3, #1
   477dc:	ldr	r2, [fp, #-16]
   477e0:	str	r1, [r2, #20]
   477e4:	mov	r2, #10
   477e8:	strb	r2, [r3]
   477ec:	ldr	r3, [fp, #-16]
   477f0:	ldr	r3, [r3, #32]
   477f4:	sub	r2, r3, #1
   477f8:	ldr	r3, [fp, #-16]
   477fc:	str	r2, [r3, #32]
   47800:	ldr	r0, [fp, #-16]
   47804:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47808:	ldr	r3, [fp, #-16]
   4780c:	ldr	r3, [r3, #20]
   47810:	add	r1, r3, #1
   47814:	ldr	r2, [fp, #-16]
   47818:	str	r1, [r2, #20]
   4781c:	mov	r2, #93	; 0x5d
   47820:	strb	r2, [r3]
   47824:	nop			; (mov r0, r0)
   47828:	sub	sp, fp, #4
   4782c:	pop	{fp, pc}

00047830 <flatcc_json_printer_bool_vector_field@@Base>:
   47830:	push	{fp, lr}
   47834:	add	fp, sp, #4
   47838:	sub	sp, sp, #24
   4783c:	str	r0, [fp, #-16]
   47840:	str	r1, [fp, #-20]	; 0xffffffec
   47844:	str	r2, [fp, #-24]	; 0xffffffe8
   47848:	str	r3, [fp, #-28]	; 0xffffffe4
   4784c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47850:	ldr	r0, [fp, #-20]	; 0xffffffec
   47854:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   47858:	str	r0, [fp, #-8]
   4785c:	ldr	r3, [fp, #-8]
   47860:	cmp	r3, #0
   47864:	beq	47ac8 <flatcc_json_printer_bool_vector_field@@Base+0x298>
   47868:	ldr	r3, [fp, #-20]	; 0xffffffec
   4786c:	ldr	r3, [r3, #16]
   47870:	add	r1, r3, #1
   47874:	ldr	r2, [fp, #-20]	; 0xffffffec
   47878:	str	r1, [r2, #16]
   4787c:	cmp	r3, #0
   47880:	beq	478a0 <flatcc_json_printer_bool_vector_field@@Base+0x70>
   47884:	ldr	r3, [fp, #-16]
   47888:	ldr	r3, [r3, #20]
   4788c:	add	r1, r3, #1
   47890:	ldr	r2, [fp, #-16]
   47894:	str	r1, [r2, #20]
   47898:	mov	r2, #44	; 0x2c
   4789c:	strb	r2, [r3]
   478a0:	ldr	r0, [fp, #-8]
   478a4:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   478a8:	str	r0, [fp, #-8]
   478ac:	ldr	r0, [fp, #-8]
   478b0:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   478b4:	str	r0, [fp, #-12]
   478b8:	ldr	r3, [fp, #-8]
   478bc:	add	r3, r3, #4
   478c0:	str	r3, [fp, #-8]
   478c4:	ldr	r3, [fp, #4]
   478c8:	mov	r2, r3
   478cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   478d0:	ldr	r0, [fp, #-16]
   478d4:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   478d8:	ldr	r3, [fp, #-16]
   478dc:	ldr	r3, [r3, #32]
   478e0:	add	r2, r3, #1
   478e4:	ldr	r3, [fp, #-16]
   478e8:	str	r2, [r3, #32]
   478ec:	ldr	r3, [fp, #-16]
   478f0:	ldr	r3, [r3, #20]
   478f4:	add	r1, r3, #1
   478f8:	ldr	r2, [fp, #-16]
   478fc:	str	r1, [r2, #20]
   47900:	mov	r2, #91	; 0x5b
   47904:	strb	r2, [r3]
   47908:	ldr	r3, [fp, #-12]
   4790c:	cmp	r3, #0
   47910:	beq	47a50 <flatcc_json_printer_bool_vector_field@@Base+0x220>
   47914:	ldr	r3, [fp, #-16]
   47918:	ldrb	r3, [r3, #25]
   4791c:	cmp	r3, #0
   47920:	beq	4794c <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   47924:	ldr	r3, [fp, #-16]
   47928:	ldr	r3, [r3, #20]
   4792c:	add	r1, r3, #1
   47930:	ldr	r2, [fp, #-16]
   47934:	str	r1, [r2, #20]
   47938:	mov	r2, #10
   4793c:	strb	r2, [r3]
   47940:	ldr	r0, [fp, #-16]
   47944:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47948:	b	47954 <flatcc_json_printer_bool_vector_field@@Base+0x124>
   4794c:	ldr	r0, [fp, #-16]
   47950:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47954:	ldr	r0, [fp, #-8]
   47958:	bl	3e070 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   4795c:	mov	r3, r0
   47960:	mov	r2, r3
   47964:	ldr	r3, [fp, #-16]
   47968:	ldr	r3, [r3, #20]
   4796c:	mov	r1, r3
   47970:	mov	r0, r2
   47974:	bl	3e320 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   47978:	mov	r2, r0
   4797c:	ldr	r3, [fp, #-16]
   47980:	ldr	r3, [r3, #20]
   47984:	add	r2, r3, r2
   47988:	ldr	r3, [fp, #-16]
   4798c:	str	r2, [r3, #20]
   47990:	ldr	r3, [fp, #-8]
   47994:	add	r3, r3, #1
   47998:	str	r3, [fp, #-8]
   4799c:	ldr	r3, [fp, #-12]
   479a0:	sub	r3, r3, #1
   479a4:	str	r3, [fp, #-12]
   479a8:	b	47a50 <flatcc_json_printer_bool_vector_field@@Base+0x220>
   479ac:	ldr	r3, [fp, #-16]
   479b0:	ldr	r3, [r3, #20]
   479b4:	add	r1, r3, #1
   479b8:	ldr	r2, [fp, #-16]
   479bc:	str	r1, [r2, #20]
   479c0:	mov	r2, #44	; 0x2c
   479c4:	strb	r2, [r3]
   479c8:	ldr	r3, [fp, #-16]
   479cc:	ldrb	r3, [r3, #25]
   479d0:	cmp	r3, #0
   479d4:	beq	47a00 <flatcc_json_printer_bool_vector_field@@Base+0x1d0>
   479d8:	ldr	r3, [fp, #-16]
   479dc:	ldr	r3, [r3, #20]
   479e0:	add	r1, r3, #1
   479e4:	ldr	r2, [fp, #-16]
   479e8:	str	r1, [r2, #20]
   479ec:	mov	r2, #10
   479f0:	strb	r2, [r3]
   479f4:	ldr	r0, [fp, #-16]
   479f8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   479fc:	b	47a08 <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   47a00:	ldr	r0, [fp, #-16]
   47a04:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47a08:	ldr	r0, [fp, #-8]
   47a0c:	bl	3e070 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   47a10:	mov	r3, r0
   47a14:	mov	r2, r3
   47a18:	ldr	r3, [fp, #-16]
   47a1c:	ldr	r3, [r3, #20]
   47a20:	mov	r1, r3
   47a24:	mov	r0, r2
   47a28:	bl	3e320 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   47a2c:	mov	r2, r0
   47a30:	ldr	r3, [fp, #-16]
   47a34:	ldr	r3, [r3, #20]
   47a38:	add	r2, r3, r2
   47a3c:	ldr	r3, [fp, #-16]
   47a40:	str	r2, [r3, #20]
   47a44:	ldr	r3, [fp, #-8]
   47a48:	add	r3, r3, #1
   47a4c:	str	r3, [fp, #-8]
   47a50:	ldr	r3, [fp, #-12]
   47a54:	sub	r2, r3, #1
   47a58:	str	r2, [fp, #-12]
   47a5c:	cmp	r3, #0
   47a60:	bne	479ac <flatcc_json_printer_bool_vector_field@@Base+0x17c>
   47a64:	ldr	r3, [fp, #-16]
   47a68:	ldrb	r3, [r3, #25]
   47a6c:	cmp	r3, #0
   47a70:	beq	47aac <flatcc_json_printer_bool_vector_field@@Base+0x27c>
   47a74:	ldr	r3, [fp, #-16]
   47a78:	ldr	r3, [r3, #20]
   47a7c:	add	r1, r3, #1
   47a80:	ldr	r2, [fp, #-16]
   47a84:	str	r1, [r2, #20]
   47a88:	mov	r2, #10
   47a8c:	strb	r2, [r3]
   47a90:	ldr	r3, [fp, #-16]
   47a94:	ldr	r3, [r3, #32]
   47a98:	sub	r2, r3, #1
   47a9c:	ldr	r3, [fp, #-16]
   47aa0:	str	r2, [r3, #32]
   47aa4:	ldr	r0, [fp, #-16]
   47aa8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47aac:	ldr	r3, [fp, #-16]
   47ab0:	ldr	r3, [r3, #20]
   47ab4:	add	r1, r3, #1
   47ab8:	ldr	r2, [fp, #-16]
   47abc:	str	r1, [r2, #20]
   47ac0:	mov	r2, #93	; 0x5d
   47ac4:	strb	r2, [r3]
   47ac8:	nop			; (mov r0, r0)
   47acc:	sub	sp, fp, #4
   47ad0:	pop	{fp, pc}

00047ad4 <flatcc_json_printer_float_vector_field@@Base>:
   47ad4:	push	{fp, lr}
   47ad8:	add	fp, sp, #4
   47adc:	sub	sp, sp, #24
   47ae0:	str	r0, [fp, #-16]
   47ae4:	str	r1, [fp, #-20]	; 0xffffffec
   47ae8:	str	r2, [fp, #-24]	; 0xffffffe8
   47aec:	str	r3, [fp, #-28]	; 0xffffffe4
   47af0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47af4:	ldr	r0, [fp, #-20]	; 0xffffffec
   47af8:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   47afc:	str	r0, [fp, #-8]
   47b00:	ldr	r3, [fp, #-8]
   47b04:	cmp	r3, #0
   47b08:	beq	47d6c <flatcc_json_printer_float_vector_field@@Base+0x298>
   47b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   47b10:	ldr	r3, [r3, #16]
   47b14:	add	r1, r3, #1
   47b18:	ldr	r2, [fp, #-20]	; 0xffffffec
   47b1c:	str	r1, [r2, #16]
   47b20:	cmp	r3, #0
   47b24:	beq	47b44 <flatcc_json_printer_float_vector_field@@Base+0x70>
   47b28:	ldr	r3, [fp, #-16]
   47b2c:	ldr	r3, [r3, #20]
   47b30:	add	r1, r3, #1
   47b34:	ldr	r2, [fp, #-16]
   47b38:	str	r1, [r2, #20]
   47b3c:	mov	r2, #44	; 0x2c
   47b40:	strb	r2, [r3]
   47b44:	ldr	r0, [fp, #-8]
   47b48:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   47b4c:	str	r0, [fp, #-8]
   47b50:	ldr	r0, [fp, #-8]
   47b54:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   47b58:	str	r0, [fp, #-12]
   47b5c:	ldr	r3, [fp, #-8]
   47b60:	add	r3, r3, #4
   47b64:	str	r3, [fp, #-8]
   47b68:	ldr	r3, [fp, #4]
   47b6c:	mov	r2, r3
   47b70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47b74:	ldr	r0, [fp, #-16]
   47b78:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   47b7c:	ldr	r3, [fp, #-16]
   47b80:	ldr	r3, [r3, #32]
   47b84:	add	r2, r3, #1
   47b88:	ldr	r3, [fp, #-16]
   47b8c:	str	r2, [r3, #32]
   47b90:	ldr	r3, [fp, #-16]
   47b94:	ldr	r3, [r3, #20]
   47b98:	add	r1, r3, #1
   47b9c:	ldr	r2, [fp, #-16]
   47ba0:	str	r1, [r2, #20]
   47ba4:	mov	r2, #91	; 0x5b
   47ba8:	strb	r2, [r3]
   47bac:	ldr	r3, [fp, #-12]
   47bb0:	cmp	r3, #0
   47bb4:	beq	47cf4 <flatcc_json_printer_float_vector_field@@Base+0x220>
   47bb8:	ldr	r3, [fp, #-16]
   47bbc:	ldrb	r3, [r3, #25]
   47bc0:	cmp	r3, #0
   47bc4:	beq	47bf0 <flatcc_json_printer_float_vector_field@@Base+0x11c>
   47bc8:	ldr	r3, [fp, #-16]
   47bcc:	ldr	r3, [r3, #20]
   47bd0:	add	r1, r3, #1
   47bd4:	ldr	r2, [fp, #-16]
   47bd8:	str	r1, [r2, #20]
   47bdc:	mov	r2, #10
   47be0:	strb	r2, [r3]
   47be4:	ldr	r0, [fp, #-16]
   47be8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47bec:	b	47bf8 <flatcc_json_printer_float_vector_field@@Base+0x124>
   47bf0:	ldr	r0, [fp, #-16]
   47bf4:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47bf8:	ldr	r0, [fp, #-8]
   47bfc:	bl	3dfb0 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   47c00:	vmov.f32	s15, s0
   47c04:	vcvt.f64.f32	d7, s15
   47c08:	ldr	r3, [fp, #-16]
   47c0c:	ldr	r3, [r3, #20]
   47c10:	mov	r0, r3
   47c14:	vmov.f64	d0, d7
   47c18:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   47c1c:	mov	r2, r0
   47c20:	ldr	r3, [fp, #-16]
   47c24:	ldr	r3, [r3, #20]
   47c28:	add	r2, r3, r2
   47c2c:	ldr	r3, [fp, #-16]
   47c30:	str	r2, [r3, #20]
   47c34:	ldr	r3, [fp, #-8]
   47c38:	add	r3, r3, #4
   47c3c:	str	r3, [fp, #-8]
   47c40:	ldr	r3, [fp, #-12]
   47c44:	sub	r3, r3, #1
   47c48:	str	r3, [fp, #-12]
   47c4c:	b	47cf4 <flatcc_json_printer_float_vector_field@@Base+0x220>
   47c50:	ldr	r3, [fp, #-16]
   47c54:	ldr	r3, [r3, #20]
   47c58:	add	r1, r3, #1
   47c5c:	ldr	r2, [fp, #-16]
   47c60:	str	r1, [r2, #20]
   47c64:	mov	r2, #44	; 0x2c
   47c68:	strb	r2, [r3]
   47c6c:	ldr	r3, [fp, #-16]
   47c70:	ldrb	r3, [r3, #25]
   47c74:	cmp	r3, #0
   47c78:	beq	47ca4 <flatcc_json_printer_float_vector_field@@Base+0x1d0>
   47c7c:	ldr	r3, [fp, #-16]
   47c80:	ldr	r3, [r3, #20]
   47c84:	add	r1, r3, #1
   47c88:	ldr	r2, [fp, #-16]
   47c8c:	str	r1, [r2, #20]
   47c90:	mov	r2, #10
   47c94:	strb	r2, [r3]
   47c98:	ldr	r0, [fp, #-16]
   47c9c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47ca0:	b	47cac <flatcc_json_printer_float_vector_field@@Base+0x1d8>
   47ca4:	ldr	r0, [fp, #-16]
   47ca8:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47cac:	ldr	r0, [fp, #-8]
   47cb0:	bl	3dfb0 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   47cb4:	vmov.f32	s15, s0
   47cb8:	vcvt.f64.f32	d7, s15
   47cbc:	ldr	r3, [fp, #-16]
   47cc0:	ldr	r3, [r3, #20]
   47cc4:	mov	r0, r3
   47cc8:	vmov.f64	d0, d7
   47ccc:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   47cd0:	mov	r2, r0
   47cd4:	ldr	r3, [fp, #-16]
   47cd8:	ldr	r3, [r3, #20]
   47cdc:	add	r2, r3, r2
   47ce0:	ldr	r3, [fp, #-16]
   47ce4:	str	r2, [r3, #20]
   47ce8:	ldr	r3, [fp, #-8]
   47cec:	add	r3, r3, #4
   47cf0:	str	r3, [fp, #-8]
   47cf4:	ldr	r3, [fp, #-12]
   47cf8:	sub	r2, r3, #1
   47cfc:	str	r2, [fp, #-12]
   47d00:	cmp	r3, #0
   47d04:	bne	47c50 <flatcc_json_printer_float_vector_field@@Base+0x17c>
   47d08:	ldr	r3, [fp, #-16]
   47d0c:	ldrb	r3, [r3, #25]
   47d10:	cmp	r3, #0
   47d14:	beq	47d50 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   47d18:	ldr	r3, [fp, #-16]
   47d1c:	ldr	r3, [r3, #20]
   47d20:	add	r1, r3, #1
   47d24:	ldr	r2, [fp, #-16]
   47d28:	str	r1, [r2, #20]
   47d2c:	mov	r2, #10
   47d30:	strb	r2, [r3]
   47d34:	ldr	r3, [fp, #-16]
   47d38:	ldr	r3, [r3, #32]
   47d3c:	sub	r2, r3, #1
   47d40:	ldr	r3, [fp, #-16]
   47d44:	str	r2, [r3, #32]
   47d48:	ldr	r0, [fp, #-16]
   47d4c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47d50:	ldr	r3, [fp, #-16]
   47d54:	ldr	r3, [r3, #20]
   47d58:	add	r1, r3, #1
   47d5c:	ldr	r2, [fp, #-16]
   47d60:	str	r1, [r2, #20]
   47d64:	mov	r2, #93	; 0x5d
   47d68:	strb	r2, [r3]
   47d6c:	nop			; (mov r0, r0)
   47d70:	sub	sp, fp, #4
   47d74:	pop	{fp, pc}

00047d78 <flatcc_json_printer_double_vector_field@@Base>:
   47d78:	push	{fp, lr}
   47d7c:	add	fp, sp, #4
   47d80:	sub	sp, sp, #24
   47d84:	str	r0, [fp, #-16]
   47d88:	str	r1, [fp, #-20]	; 0xffffffec
   47d8c:	str	r2, [fp, #-24]	; 0xffffffe8
   47d90:	str	r3, [fp, #-28]	; 0xffffffe4
   47d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   47d9c:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   47da0:	str	r0, [fp, #-8]
   47da4:	ldr	r3, [fp, #-8]
   47da8:	cmp	r3, #0
   47dac:	beq	48008 <flatcc_json_printer_double_vector_field@@Base+0x290>
   47db0:	ldr	r3, [fp, #-20]	; 0xffffffec
   47db4:	ldr	r3, [r3, #16]
   47db8:	add	r1, r3, #1
   47dbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   47dc0:	str	r1, [r2, #16]
   47dc4:	cmp	r3, #0
   47dc8:	beq	47de8 <flatcc_json_printer_double_vector_field@@Base+0x70>
   47dcc:	ldr	r3, [fp, #-16]
   47dd0:	ldr	r3, [r3, #20]
   47dd4:	add	r1, r3, #1
   47dd8:	ldr	r2, [fp, #-16]
   47ddc:	str	r1, [r2, #20]
   47de0:	mov	r2, #44	; 0x2c
   47de4:	strb	r2, [r3]
   47de8:	ldr	r0, [fp, #-8]
   47dec:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   47df0:	str	r0, [fp, #-8]
   47df4:	ldr	r0, [fp, #-8]
   47df8:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   47dfc:	str	r0, [fp, #-12]
   47e00:	ldr	r3, [fp, #-8]
   47e04:	add	r3, r3, #4
   47e08:	str	r3, [fp, #-8]
   47e0c:	ldr	r3, [fp, #4]
   47e10:	mov	r2, r3
   47e14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47e18:	ldr	r0, [fp, #-16]
   47e1c:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   47e20:	ldr	r3, [fp, #-16]
   47e24:	ldr	r3, [r3, #32]
   47e28:	add	r2, r3, #1
   47e2c:	ldr	r3, [fp, #-16]
   47e30:	str	r2, [r3, #32]
   47e34:	ldr	r3, [fp, #-16]
   47e38:	ldr	r3, [r3, #20]
   47e3c:	add	r1, r3, #1
   47e40:	ldr	r2, [fp, #-16]
   47e44:	str	r1, [r2, #20]
   47e48:	mov	r2, #91	; 0x5b
   47e4c:	strb	r2, [r3]
   47e50:	ldr	r3, [fp, #-12]
   47e54:	cmp	r3, #0
   47e58:	beq	47f90 <flatcc_json_printer_double_vector_field@@Base+0x218>
   47e5c:	ldr	r3, [fp, #-16]
   47e60:	ldrb	r3, [r3, #25]
   47e64:	cmp	r3, #0
   47e68:	beq	47e94 <flatcc_json_printer_double_vector_field@@Base+0x11c>
   47e6c:	ldr	r3, [fp, #-16]
   47e70:	ldr	r3, [r3, #20]
   47e74:	add	r1, r3, #1
   47e78:	ldr	r2, [fp, #-16]
   47e7c:	str	r1, [r2, #20]
   47e80:	mov	r2, #10
   47e84:	strb	r2, [r3]
   47e88:	ldr	r0, [fp, #-16]
   47e8c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47e90:	b	47e9c <flatcc_json_printer_double_vector_field@@Base+0x124>
   47e94:	ldr	r0, [fp, #-16]
   47e98:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47e9c:	ldr	r0, [fp, #-8]
   47ea0:	bl	3e018 <flatcc_json_parser_struct_as_root@@Base+0x494>
   47ea4:	vmov.f64	d7, d0
   47ea8:	ldr	r3, [fp, #-16]
   47eac:	ldr	r3, [r3, #20]
   47eb0:	mov	r0, r3
   47eb4:	vmov.f64	d0, d7
   47eb8:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   47ebc:	mov	r2, r0
   47ec0:	ldr	r3, [fp, #-16]
   47ec4:	ldr	r3, [r3, #20]
   47ec8:	add	r2, r3, r2
   47ecc:	ldr	r3, [fp, #-16]
   47ed0:	str	r2, [r3, #20]
   47ed4:	ldr	r3, [fp, #-8]
   47ed8:	add	r3, r3, #8
   47edc:	str	r3, [fp, #-8]
   47ee0:	ldr	r3, [fp, #-12]
   47ee4:	sub	r3, r3, #1
   47ee8:	str	r3, [fp, #-12]
   47eec:	b	47f90 <flatcc_json_printer_double_vector_field@@Base+0x218>
   47ef0:	ldr	r3, [fp, #-16]
   47ef4:	ldr	r3, [r3, #20]
   47ef8:	add	r1, r3, #1
   47efc:	ldr	r2, [fp, #-16]
   47f00:	str	r1, [r2, #20]
   47f04:	mov	r2, #44	; 0x2c
   47f08:	strb	r2, [r3]
   47f0c:	ldr	r3, [fp, #-16]
   47f10:	ldrb	r3, [r3, #25]
   47f14:	cmp	r3, #0
   47f18:	beq	47f44 <flatcc_json_printer_double_vector_field@@Base+0x1cc>
   47f1c:	ldr	r3, [fp, #-16]
   47f20:	ldr	r3, [r3, #20]
   47f24:	add	r1, r3, #1
   47f28:	ldr	r2, [fp, #-16]
   47f2c:	str	r1, [r2, #20]
   47f30:	mov	r2, #10
   47f34:	strb	r2, [r3]
   47f38:	ldr	r0, [fp, #-16]
   47f3c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47f40:	b	47f4c <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   47f44:	ldr	r0, [fp, #-16]
   47f48:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47f4c:	ldr	r0, [fp, #-8]
   47f50:	bl	3e018 <flatcc_json_parser_struct_as_root@@Base+0x494>
   47f54:	vmov.f64	d7, d0
   47f58:	ldr	r3, [fp, #-16]
   47f5c:	ldr	r3, [r3, #20]
   47f60:	mov	r0, r3
   47f64:	vmov.f64	d0, d7
   47f68:	bl	41508 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   47f6c:	mov	r2, r0
   47f70:	ldr	r3, [fp, #-16]
   47f74:	ldr	r3, [r3, #20]
   47f78:	add	r2, r3, r2
   47f7c:	ldr	r3, [fp, #-16]
   47f80:	str	r2, [r3, #20]
   47f84:	ldr	r3, [fp, #-8]
   47f88:	add	r3, r3, #8
   47f8c:	str	r3, [fp, #-8]
   47f90:	ldr	r3, [fp, #-12]
   47f94:	sub	r2, r3, #1
   47f98:	str	r2, [fp, #-12]
   47f9c:	cmp	r3, #0
   47fa0:	bne	47ef0 <flatcc_json_printer_double_vector_field@@Base+0x178>
   47fa4:	ldr	r3, [fp, #-16]
   47fa8:	ldrb	r3, [r3, #25]
   47fac:	cmp	r3, #0
   47fb0:	beq	47fec <flatcc_json_printer_double_vector_field@@Base+0x274>
   47fb4:	ldr	r3, [fp, #-16]
   47fb8:	ldr	r3, [r3, #20]
   47fbc:	add	r1, r3, #1
   47fc0:	ldr	r2, [fp, #-16]
   47fc4:	str	r1, [r2, #20]
   47fc8:	mov	r2, #10
   47fcc:	strb	r2, [r3]
   47fd0:	ldr	r3, [fp, #-16]
   47fd4:	ldr	r3, [r3, #32]
   47fd8:	sub	r2, r3, #1
   47fdc:	ldr	r3, [fp, #-16]
   47fe0:	str	r2, [r3, #32]
   47fe4:	ldr	r0, [fp, #-16]
   47fe8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47fec:	ldr	r3, [fp, #-16]
   47ff0:	ldr	r3, [r3, #20]
   47ff4:	add	r1, r3, #1
   47ff8:	ldr	r2, [fp, #-16]
   47ffc:	str	r1, [r2, #20]
   48000:	mov	r2, #93	; 0x5d
   48004:	strb	r2, [r3]
   48008:	nop			; (mov r0, r0)
   4800c:	sub	sp, fp, #4
   48010:	pop	{fp, pc}

00048014 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   48014:	push	{fp, lr}
   48018:	add	fp, sp, #4
   4801c:	sub	sp, sp, #32
   48020:	str	r0, [fp, #-16]
   48024:	str	r1, [fp, #-20]	; 0xffffffec
   48028:	str	r2, [fp, #-24]	; 0xffffffe8
   4802c:	str	r3, [fp, #-28]	; 0xffffffe4
   48030:	ldr	r3, [fp, #-16]
   48034:	ldrb	r3, [r3, #27]
   48038:	cmp	r3, #0
   4803c:	beq	48060 <flatcc_json_printer_utype_enum_vector_field@@Base+0x4c>
   48040:	ldr	r3, [fp, #4]
   48044:	str	r3, [sp]
   48048:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4804c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48050:	ldr	r1, [fp, #-20]	; 0xffffffec
   48054:	ldr	r0, [fp, #-16]
   48058:	bl	460ac <flatcc_json_printer_utype_vector_field@@Base>
   4805c:	b	482a4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x290>
   48060:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48064:	ldr	r0, [fp, #-20]	; 0xffffffec
   48068:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4806c:	str	r0, [fp, #-8]
   48070:	ldr	r3, [fp, #-8]
   48074:	cmp	r3, #0
   48078:	beq	482a4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x290>
   4807c:	ldr	r3, [fp, #-20]	; 0xffffffec
   48080:	ldr	r3, [r3, #16]
   48084:	add	r1, r3, #1
   48088:	ldr	r2, [fp, #-20]	; 0xffffffec
   4808c:	str	r1, [r2, #16]
   48090:	cmp	r3, #0
   48094:	beq	480b4 <flatcc_json_printer_utype_enum_vector_field@@Base+0xa0>
   48098:	ldr	r3, [fp, #-16]
   4809c:	ldr	r3, [r3, #20]
   480a0:	add	r1, r3, #1
   480a4:	ldr	r2, [fp, #-16]
   480a8:	str	r1, [r2, #20]
   480ac:	mov	r2, #44	; 0x2c
   480b0:	strb	r2, [r3]
   480b4:	ldr	r0, [fp, #-8]
   480b8:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   480bc:	str	r0, [fp, #-8]
   480c0:	ldr	r0, [fp, #-8]
   480c4:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   480c8:	str	r0, [fp, #-12]
   480cc:	ldr	r3, [fp, #-8]
   480d0:	add	r3, r3, #4
   480d4:	str	r3, [fp, #-8]
   480d8:	ldr	r3, [fp, #4]
   480dc:	mov	r2, r3
   480e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   480e4:	ldr	r0, [fp, #-16]
   480e8:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   480ec:	ldr	r3, [fp, #-16]
   480f0:	ldr	r3, [r3, #32]
   480f4:	add	r2, r3, #1
   480f8:	ldr	r3, [fp, #-16]
   480fc:	str	r2, [r3, #32]
   48100:	ldr	r3, [fp, #-16]
   48104:	ldr	r3, [r3, #20]
   48108:	add	r1, r3, #1
   4810c:	ldr	r2, [fp, #-16]
   48110:	str	r1, [r2, #20]
   48114:	mov	r2, #91	; 0x5b
   48118:	strb	r2, [r3]
   4811c:	ldr	r3, [fp, #-12]
   48120:	cmp	r3, #0
   48124:	beq	4822c <flatcc_json_printer_utype_enum_vector_field@@Base+0x218>
   48128:	ldr	r3, [fp, #-16]
   4812c:	ldrb	r3, [r3, #25]
   48130:	cmp	r3, #0
   48134:	beq	48160 <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
   48138:	ldr	r3, [fp, #-16]
   4813c:	ldr	r3, [r3, #20]
   48140:	add	r1, r3, #1
   48144:	ldr	r2, [fp, #-16]
   48148:	str	r1, [r2, #20]
   4814c:	mov	r2, #10
   48150:	strb	r2, [r3]
   48154:	ldr	r0, [fp, #-16]
   48158:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4815c:	b	48168 <flatcc_json_printer_utype_enum_vector_field@@Base+0x154>
   48160:	ldr	r0, [fp, #-16]
   48164:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48168:	ldr	r0, [fp, #-8]
   4816c:	bl	3e1c8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   48170:	mov	r3, r0
   48174:	mov	r2, r3
   48178:	ldr	r3, [fp, #8]
   4817c:	mov	r1, r2
   48180:	ldr	r0, [fp, #-16]
   48184:	blx	r3
   48188:	ldr	r3, [fp, #-8]
   4818c:	add	r3, r3, #1
   48190:	str	r3, [fp, #-8]
   48194:	ldr	r3, [fp, #-12]
   48198:	sub	r3, r3, #1
   4819c:	str	r3, [fp, #-12]
   481a0:	b	4822c <flatcc_json_printer_utype_enum_vector_field@@Base+0x218>
   481a4:	ldr	r3, [fp, #-16]
   481a8:	ldr	r3, [r3, #20]
   481ac:	add	r1, r3, #1
   481b0:	ldr	r2, [fp, #-16]
   481b4:	str	r1, [r2, #20]
   481b8:	mov	r2, #44	; 0x2c
   481bc:	strb	r2, [r3]
   481c0:	ldr	r3, [fp, #-16]
   481c4:	ldrb	r3, [r3, #25]
   481c8:	cmp	r3, #0
   481cc:	beq	481f8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1e4>
   481d0:	ldr	r3, [fp, #-16]
   481d4:	ldr	r3, [r3, #20]
   481d8:	add	r1, r3, #1
   481dc:	ldr	r2, [fp, #-16]
   481e0:	str	r1, [r2, #20]
   481e4:	mov	r2, #10
   481e8:	strb	r2, [r3]
   481ec:	ldr	r0, [fp, #-16]
   481f0:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   481f4:	b	48200 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   481f8:	ldr	r0, [fp, #-16]
   481fc:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48200:	ldr	r0, [fp, #-8]
   48204:	bl	3e1c8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   48208:	mov	r3, r0
   4820c:	mov	r2, r3
   48210:	ldr	r3, [fp, #8]
   48214:	mov	r1, r2
   48218:	ldr	r0, [fp, #-16]
   4821c:	blx	r3
   48220:	ldr	r3, [fp, #-8]
   48224:	add	r3, r3, #1
   48228:	str	r3, [fp, #-8]
   4822c:	ldr	r3, [fp, #-12]
   48230:	sub	r2, r3, #1
   48234:	str	r2, [fp, #-12]
   48238:	cmp	r3, #0
   4823c:	bne	481a4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x190>
   48240:	ldr	r3, [fp, #-16]
   48244:	ldrb	r3, [r3, #25]
   48248:	cmp	r3, #0
   4824c:	beq	48288 <flatcc_json_printer_utype_enum_vector_field@@Base+0x274>
   48250:	ldr	r3, [fp, #-16]
   48254:	ldr	r3, [r3, #20]
   48258:	add	r1, r3, #1
   4825c:	ldr	r2, [fp, #-16]
   48260:	str	r1, [r2, #20]
   48264:	mov	r2, #10
   48268:	strb	r2, [r3]
   4826c:	ldr	r3, [fp, #-16]
   48270:	ldr	r3, [r3, #32]
   48274:	sub	r2, r3, #1
   48278:	ldr	r3, [fp, #-16]
   4827c:	str	r2, [r3, #32]
   48280:	ldr	r0, [fp, #-16]
   48284:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48288:	ldr	r3, [fp, #-16]
   4828c:	ldr	r3, [r3, #20]
   48290:	add	r1, r3, #1
   48294:	ldr	r2, [fp, #-16]
   48298:	str	r1, [r2, #20]
   4829c:	mov	r2, #93	; 0x5d
   482a0:	strb	r2, [r3]
   482a4:	sub	sp, fp, #4
   482a8:	pop	{fp, pc}

000482ac <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   482ac:	push	{fp, lr}
   482b0:	add	fp, sp, #4
   482b4:	sub	sp, sp, #32
   482b8:	str	r0, [fp, #-16]
   482bc:	str	r1, [fp, #-20]	; 0xffffffec
   482c0:	str	r2, [fp, #-24]	; 0xffffffe8
   482c4:	str	r3, [fp, #-28]	; 0xffffffe4
   482c8:	ldr	r3, [fp, #-16]
   482cc:	ldrb	r3, [r3, #27]
   482d0:	cmp	r3, #0
   482d4:	beq	482f8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x4c>
   482d8:	ldr	r3, [fp, #4]
   482dc:	str	r3, [sp]
   482e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   482e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   482e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   482ec:	ldr	r0, [fp, #-16]
   482f0:	bl	46350 <flatcc_json_printer_uint8_vector_field@@Base>
   482f4:	b	4853c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x290>
   482f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   482fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   48300:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   48304:	str	r0, [fp, #-8]
   48308:	ldr	r3, [fp, #-8]
   4830c:	cmp	r3, #0
   48310:	beq	4853c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x290>
   48314:	ldr	r3, [fp, #-20]	; 0xffffffec
   48318:	ldr	r3, [r3, #16]
   4831c:	add	r1, r3, #1
   48320:	ldr	r2, [fp, #-20]	; 0xffffffec
   48324:	str	r1, [r2, #16]
   48328:	cmp	r3, #0
   4832c:	beq	4834c <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa0>
   48330:	ldr	r3, [fp, #-16]
   48334:	ldr	r3, [r3, #20]
   48338:	add	r1, r3, #1
   4833c:	ldr	r2, [fp, #-16]
   48340:	str	r1, [r2, #20]
   48344:	mov	r2, #44	; 0x2c
   48348:	strb	r2, [r3]
   4834c:	ldr	r0, [fp, #-8]
   48350:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   48354:	str	r0, [fp, #-8]
   48358:	ldr	r0, [fp, #-8]
   4835c:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   48360:	str	r0, [fp, #-12]
   48364:	ldr	r3, [fp, #-8]
   48368:	add	r3, r3, #4
   4836c:	str	r3, [fp, #-8]
   48370:	ldr	r3, [fp, #4]
   48374:	mov	r2, r3
   48378:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4837c:	ldr	r0, [fp, #-16]
   48380:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   48384:	ldr	r3, [fp, #-16]
   48388:	ldr	r3, [r3, #32]
   4838c:	add	r2, r3, #1
   48390:	ldr	r3, [fp, #-16]
   48394:	str	r2, [r3, #32]
   48398:	ldr	r3, [fp, #-16]
   4839c:	ldr	r3, [r3, #20]
   483a0:	add	r1, r3, #1
   483a4:	ldr	r2, [fp, #-16]
   483a8:	str	r1, [r2, #20]
   483ac:	mov	r2, #91	; 0x5b
   483b0:	strb	r2, [r3]
   483b4:	ldr	r3, [fp, #-12]
   483b8:	cmp	r3, #0
   483bc:	beq	484c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x218>
   483c0:	ldr	r3, [fp, #-16]
   483c4:	ldrb	r3, [r3, #25]
   483c8:	cmp	r3, #0
   483cc:	beq	483f8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
   483d0:	ldr	r3, [fp, #-16]
   483d4:	ldr	r3, [r3, #20]
   483d8:	add	r1, r3, #1
   483dc:	ldr	r2, [fp, #-16]
   483e0:	str	r1, [r2, #20]
   483e4:	mov	r2, #10
   483e8:	strb	r2, [r3]
   483ec:	ldr	r0, [fp, #-16]
   483f0:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   483f4:	b	48400 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x154>
   483f8:	ldr	r0, [fp, #-16]
   483fc:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48400:	ldr	r0, [fp, #-8]
   48404:	bl	3dcd0 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   48408:	mov	r3, r0
   4840c:	mov	r2, r3
   48410:	ldr	r3, [fp, #8]
   48414:	mov	r1, r2
   48418:	ldr	r0, [fp, #-16]
   4841c:	blx	r3
   48420:	ldr	r3, [fp, #-8]
   48424:	add	r3, r3, #1
   48428:	str	r3, [fp, #-8]
   4842c:	ldr	r3, [fp, #-12]
   48430:	sub	r3, r3, #1
   48434:	str	r3, [fp, #-12]
   48438:	b	484c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x218>
   4843c:	ldr	r3, [fp, #-16]
   48440:	ldr	r3, [r3, #20]
   48444:	add	r1, r3, #1
   48448:	ldr	r2, [fp, #-16]
   4844c:	str	r1, [r2, #20]
   48450:	mov	r2, #44	; 0x2c
   48454:	strb	r2, [r3]
   48458:	ldr	r3, [fp, #-16]
   4845c:	ldrb	r3, [r3, #25]
   48460:	cmp	r3, #0
   48464:	beq	48490 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1e4>
   48468:	ldr	r3, [fp, #-16]
   4846c:	ldr	r3, [r3, #20]
   48470:	add	r1, r3, #1
   48474:	ldr	r2, [fp, #-16]
   48478:	str	r1, [r2, #20]
   4847c:	mov	r2, #10
   48480:	strb	r2, [r3]
   48484:	ldr	r0, [fp, #-16]
   48488:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4848c:	b	48498 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   48490:	ldr	r0, [fp, #-16]
   48494:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48498:	ldr	r0, [fp, #-8]
   4849c:	bl	3dcd0 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   484a0:	mov	r3, r0
   484a4:	mov	r2, r3
   484a8:	ldr	r3, [fp, #8]
   484ac:	mov	r1, r2
   484b0:	ldr	r0, [fp, #-16]
   484b4:	blx	r3
   484b8:	ldr	r3, [fp, #-8]
   484bc:	add	r3, r3, #1
   484c0:	str	r3, [fp, #-8]
   484c4:	ldr	r3, [fp, #-12]
   484c8:	sub	r2, r3, #1
   484cc:	str	r2, [fp, #-12]
   484d0:	cmp	r3, #0
   484d4:	bne	4843c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x190>
   484d8:	ldr	r3, [fp, #-16]
   484dc:	ldrb	r3, [r3, #25]
   484e0:	cmp	r3, #0
   484e4:	beq	48520 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x274>
   484e8:	ldr	r3, [fp, #-16]
   484ec:	ldr	r3, [r3, #20]
   484f0:	add	r1, r3, #1
   484f4:	ldr	r2, [fp, #-16]
   484f8:	str	r1, [r2, #20]
   484fc:	mov	r2, #10
   48500:	strb	r2, [r3]
   48504:	ldr	r3, [fp, #-16]
   48508:	ldr	r3, [r3, #32]
   4850c:	sub	r2, r3, #1
   48510:	ldr	r3, [fp, #-16]
   48514:	str	r2, [r3, #32]
   48518:	ldr	r0, [fp, #-16]
   4851c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48520:	ldr	r3, [fp, #-16]
   48524:	ldr	r3, [r3, #20]
   48528:	add	r1, r3, #1
   4852c:	ldr	r2, [fp, #-16]
   48530:	str	r1, [r2, #20]
   48534:	mov	r2, #93	; 0x5d
   48538:	strb	r2, [r3]
   4853c:	sub	sp, fp, #4
   48540:	pop	{fp, pc}

00048544 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   48544:	push	{fp, lr}
   48548:	add	fp, sp, #4
   4854c:	sub	sp, sp, #32
   48550:	str	r0, [fp, #-16]
   48554:	str	r1, [fp, #-20]	; 0xffffffec
   48558:	str	r2, [fp, #-24]	; 0xffffffe8
   4855c:	str	r3, [fp, #-28]	; 0xffffffe4
   48560:	ldr	r3, [fp, #-16]
   48564:	ldrb	r3, [r3, #27]
   48568:	cmp	r3, #0
   4856c:	beq	48590 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x4c>
   48570:	ldr	r3, [fp, #4]
   48574:	str	r3, [sp]
   48578:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4857c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48580:	ldr	r1, [fp, #-20]	; 0xffffffec
   48584:	ldr	r0, [fp, #-16]
   48588:	bl	465f4 <flatcc_json_printer_uint16_vector_field@@Base>
   4858c:	b	487d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x290>
   48590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48594:	ldr	r0, [fp, #-20]	; 0xffffffec
   48598:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4859c:	str	r0, [fp, #-8]
   485a0:	ldr	r3, [fp, #-8]
   485a4:	cmp	r3, #0
   485a8:	beq	487d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x290>
   485ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   485b0:	ldr	r3, [r3, #16]
   485b4:	add	r1, r3, #1
   485b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   485bc:	str	r1, [r2, #16]
   485c0:	cmp	r3, #0
   485c4:	beq	485e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa0>
   485c8:	ldr	r3, [fp, #-16]
   485cc:	ldr	r3, [r3, #20]
   485d0:	add	r1, r3, #1
   485d4:	ldr	r2, [fp, #-16]
   485d8:	str	r1, [r2, #20]
   485dc:	mov	r2, #44	; 0x2c
   485e0:	strb	r2, [r3]
   485e4:	ldr	r0, [fp, #-8]
   485e8:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   485ec:	str	r0, [fp, #-8]
   485f0:	ldr	r0, [fp, #-8]
   485f4:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   485f8:	str	r0, [fp, #-12]
   485fc:	ldr	r3, [fp, #-8]
   48600:	add	r3, r3, #4
   48604:	str	r3, [fp, #-8]
   48608:	ldr	r3, [fp, #4]
   4860c:	mov	r2, r3
   48610:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48614:	ldr	r0, [fp, #-16]
   48618:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4861c:	ldr	r3, [fp, #-16]
   48620:	ldr	r3, [r3, #32]
   48624:	add	r2, r3, #1
   48628:	ldr	r3, [fp, #-16]
   4862c:	str	r2, [r3, #32]
   48630:	ldr	r3, [fp, #-16]
   48634:	ldr	r3, [r3, #20]
   48638:	add	r1, r3, #1
   4863c:	ldr	r2, [fp, #-16]
   48640:	str	r1, [r2, #20]
   48644:	mov	r2, #91	; 0x5b
   48648:	strb	r2, [r3]
   4864c:	ldr	r3, [fp, #-12]
   48650:	cmp	r3, #0
   48654:	beq	4875c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   48658:	ldr	r3, [fp, #-16]
   4865c:	ldrb	r3, [r3, #25]
   48660:	cmp	r3, #0
   48664:	beq	48690 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
   48668:	ldr	r3, [fp, #-16]
   4866c:	ldr	r3, [r3, #20]
   48670:	add	r1, r3, #1
   48674:	ldr	r2, [fp, #-16]
   48678:	str	r1, [r2, #20]
   4867c:	mov	r2, #10
   48680:	strb	r2, [r3]
   48684:	ldr	r0, [fp, #-16]
   48688:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4868c:	b	48698 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x154>
   48690:	ldr	r0, [fp, #-16]
   48694:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48698:	ldr	r0, [fp, #-8]
   4869c:	bl	3dd28 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   486a0:	mov	r3, r0
   486a4:	mov	r2, r3
   486a8:	ldr	r3, [fp, #8]
   486ac:	mov	r1, r2
   486b0:	ldr	r0, [fp, #-16]
   486b4:	blx	r3
   486b8:	ldr	r3, [fp, #-8]
   486bc:	add	r3, r3, #2
   486c0:	str	r3, [fp, #-8]
   486c4:	ldr	r3, [fp, #-12]
   486c8:	sub	r3, r3, #1
   486cc:	str	r3, [fp, #-12]
   486d0:	b	4875c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   486d4:	ldr	r3, [fp, #-16]
   486d8:	ldr	r3, [r3, #20]
   486dc:	add	r1, r3, #1
   486e0:	ldr	r2, [fp, #-16]
   486e4:	str	r1, [r2, #20]
   486e8:	mov	r2, #44	; 0x2c
   486ec:	strb	r2, [r3]
   486f0:	ldr	r3, [fp, #-16]
   486f4:	ldrb	r3, [r3, #25]
   486f8:	cmp	r3, #0
   486fc:	beq	48728 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e4>
   48700:	ldr	r3, [fp, #-16]
   48704:	ldr	r3, [r3, #20]
   48708:	add	r1, r3, #1
   4870c:	ldr	r2, [fp, #-16]
   48710:	str	r1, [r2, #20]
   48714:	mov	r2, #10
   48718:	strb	r2, [r3]
   4871c:	ldr	r0, [fp, #-16]
   48720:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48724:	b	48730 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   48728:	ldr	r0, [fp, #-16]
   4872c:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48730:	ldr	r0, [fp, #-8]
   48734:	bl	3dd28 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   48738:	mov	r3, r0
   4873c:	mov	r2, r3
   48740:	ldr	r3, [fp, #8]
   48744:	mov	r1, r2
   48748:	ldr	r0, [fp, #-16]
   4874c:	blx	r3
   48750:	ldr	r3, [fp, #-8]
   48754:	add	r3, r3, #2
   48758:	str	r3, [fp, #-8]
   4875c:	ldr	r3, [fp, #-12]
   48760:	sub	r2, r3, #1
   48764:	str	r2, [fp, #-12]
   48768:	cmp	r3, #0
   4876c:	bne	486d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x190>
   48770:	ldr	r3, [fp, #-16]
   48774:	ldrb	r3, [r3, #25]
   48778:	cmp	r3, #0
   4877c:	beq	487b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x274>
   48780:	ldr	r3, [fp, #-16]
   48784:	ldr	r3, [r3, #20]
   48788:	add	r1, r3, #1
   4878c:	ldr	r2, [fp, #-16]
   48790:	str	r1, [r2, #20]
   48794:	mov	r2, #10
   48798:	strb	r2, [r3]
   4879c:	ldr	r3, [fp, #-16]
   487a0:	ldr	r3, [r3, #32]
   487a4:	sub	r2, r3, #1
   487a8:	ldr	r3, [fp, #-16]
   487ac:	str	r2, [r3, #32]
   487b0:	ldr	r0, [fp, #-16]
   487b4:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   487b8:	ldr	r3, [fp, #-16]
   487bc:	ldr	r3, [r3, #20]
   487c0:	add	r1, r3, #1
   487c4:	ldr	r2, [fp, #-16]
   487c8:	str	r1, [r2, #20]
   487cc:	mov	r2, #93	; 0x5d
   487d0:	strb	r2, [r3]
   487d4:	sub	sp, fp, #4
   487d8:	pop	{fp, pc}

000487dc <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   487dc:	push	{fp, lr}
   487e0:	add	fp, sp, #4
   487e4:	sub	sp, sp, #32
   487e8:	str	r0, [fp, #-16]
   487ec:	str	r1, [fp, #-20]	; 0xffffffec
   487f0:	str	r2, [fp, #-24]	; 0xffffffe8
   487f4:	str	r3, [fp, #-28]	; 0xffffffe4
   487f8:	ldr	r3, [fp, #-16]
   487fc:	ldrb	r3, [r3, #27]
   48800:	cmp	r3, #0
   48804:	beq	48828 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x4c>
   48808:	ldr	r3, [fp, #4]
   4880c:	str	r3, [sp]
   48810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48814:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48818:	ldr	r1, [fp, #-20]	; 0xffffffec
   4881c:	ldr	r0, [fp, #-16]
   48820:	bl	46898 <flatcc_json_printer_uint32_vector_field@@Base>
   48824:	b	48a64 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   48828:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4882c:	ldr	r0, [fp, #-20]	; 0xffffffec
   48830:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   48834:	str	r0, [fp, #-8]
   48838:	ldr	r3, [fp, #-8]
   4883c:	cmp	r3, #0
   48840:	beq	48a64 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   48844:	ldr	r3, [fp, #-20]	; 0xffffffec
   48848:	ldr	r3, [r3, #16]
   4884c:	add	r1, r3, #1
   48850:	ldr	r2, [fp, #-20]	; 0xffffffec
   48854:	str	r1, [r2, #16]
   48858:	cmp	r3, #0
   4885c:	beq	4887c <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa0>
   48860:	ldr	r3, [fp, #-16]
   48864:	ldr	r3, [r3, #20]
   48868:	add	r1, r3, #1
   4886c:	ldr	r2, [fp, #-16]
   48870:	str	r1, [r2, #20]
   48874:	mov	r2, #44	; 0x2c
   48878:	strb	r2, [r3]
   4887c:	ldr	r0, [fp, #-8]
   48880:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   48884:	str	r0, [fp, #-8]
   48888:	ldr	r0, [fp, #-8]
   4888c:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   48890:	str	r0, [fp, #-12]
   48894:	ldr	r3, [fp, #-8]
   48898:	add	r3, r3, #4
   4889c:	str	r3, [fp, #-8]
   488a0:	ldr	r3, [fp, #4]
   488a4:	mov	r2, r3
   488a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   488ac:	ldr	r0, [fp, #-16]
   488b0:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   488b4:	ldr	r3, [fp, #-16]
   488b8:	ldr	r3, [r3, #32]
   488bc:	add	r2, r3, #1
   488c0:	ldr	r3, [fp, #-16]
   488c4:	str	r2, [r3, #32]
   488c8:	ldr	r3, [fp, #-16]
   488cc:	ldr	r3, [r3, #20]
   488d0:	add	r1, r3, #1
   488d4:	ldr	r2, [fp, #-16]
   488d8:	str	r1, [r2, #20]
   488dc:	mov	r2, #91	; 0x5b
   488e0:	strb	r2, [r3]
   488e4:	ldr	r3, [fp, #-12]
   488e8:	cmp	r3, #0
   488ec:	beq	489ec <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   488f0:	ldr	r3, [fp, #-16]
   488f4:	ldrb	r3, [r3, #25]
   488f8:	cmp	r3, #0
   488fc:	beq	48928 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
   48900:	ldr	r3, [fp, #-16]
   48904:	ldr	r3, [r3, #20]
   48908:	add	r1, r3, #1
   4890c:	ldr	r2, [fp, #-16]
   48910:	str	r1, [r2, #20]
   48914:	mov	r2, #10
   48918:	strb	r2, [r3]
   4891c:	ldr	r0, [fp, #-16]
   48920:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48924:	b	48930 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x154>
   48928:	ldr	r0, [fp, #-16]
   4892c:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48930:	ldr	r0, [fp, #-8]
   48934:	bl	3dd7c <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   48938:	mov	r2, r0
   4893c:	ldr	r3, [fp, #8]
   48940:	mov	r1, r2
   48944:	ldr	r0, [fp, #-16]
   48948:	blx	r3
   4894c:	ldr	r3, [fp, #-8]
   48950:	add	r3, r3, #4
   48954:	str	r3, [fp, #-8]
   48958:	ldr	r3, [fp, #-12]
   4895c:	sub	r3, r3, #1
   48960:	str	r3, [fp, #-12]
   48964:	b	489ec <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   48968:	ldr	r3, [fp, #-16]
   4896c:	ldr	r3, [r3, #20]
   48970:	add	r1, r3, #1
   48974:	ldr	r2, [fp, #-16]
   48978:	str	r1, [r2, #20]
   4897c:	mov	r2, #44	; 0x2c
   48980:	strb	r2, [r3]
   48984:	ldr	r3, [fp, #-16]
   48988:	ldrb	r3, [r3, #25]
   4898c:	cmp	r3, #0
   48990:	beq	489bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e0>
   48994:	ldr	r3, [fp, #-16]
   48998:	ldr	r3, [r3, #20]
   4899c:	add	r1, r3, #1
   489a0:	ldr	r2, [fp, #-16]
   489a4:	str	r1, [r2, #20]
   489a8:	mov	r2, #10
   489ac:	strb	r2, [r3]
   489b0:	ldr	r0, [fp, #-16]
   489b4:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   489b8:	b	489c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e8>
   489bc:	ldr	r0, [fp, #-16]
   489c0:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   489c4:	ldr	r0, [fp, #-8]
   489c8:	bl	3dd7c <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   489cc:	mov	r2, r0
   489d0:	ldr	r3, [fp, #8]
   489d4:	mov	r1, r2
   489d8:	ldr	r0, [fp, #-16]
   489dc:	blx	r3
   489e0:	ldr	r3, [fp, #-8]
   489e4:	add	r3, r3, #4
   489e8:	str	r3, [fp, #-8]
   489ec:	ldr	r3, [fp, #-12]
   489f0:	sub	r2, r3, #1
   489f4:	str	r2, [fp, #-12]
   489f8:	cmp	r3, #0
   489fc:	bne	48968 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18c>
   48a00:	ldr	r3, [fp, #-16]
   48a04:	ldrb	r3, [r3, #25]
   48a08:	cmp	r3, #0
   48a0c:	beq	48a48 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x26c>
   48a10:	ldr	r3, [fp, #-16]
   48a14:	ldr	r3, [r3, #20]
   48a18:	add	r1, r3, #1
   48a1c:	ldr	r2, [fp, #-16]
   48a20:	str	r1, [r2, #20]
   48a24:	mov	r2, #10
   48a28:	strb	r2, [r3]
   48a2c:	ldr	r3, [fp, #-16]
   48a30:	ldr	r3, [r3, #32]
   48a34:	sub	r2, r3, #1
   48a38:	ldr	r3, [fp, #-16]
   48a3c:	str	r2, [r3, #32]
   48a40:	ldr	r0, [fp, #-16]
   48a44:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48a48:	ldr	r3, [fp, #-16]
   48a4c:	ldr	r3, [r3, #20]
   48a50:	add	r1, r3, #1
   48a54:	ldr	r2, [fp, #-16]
   48a58:	str	r1, [r2, #20]
   48a5c:	mov	r2, #93	; 0x5d
   48a60:	strb	r2, [r3]
   48a64:	sub	sp, fp, #4
   48a68:	pop	{fp, pc}

00048a6c <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   48a6c:	push	{fp, lr}
   48a70:	add	fp, sp, #4
   48a74:	sub	sp, sp, #32
   48a78:	str	r0, [fp, #-16]
   48a7c:	str	r1, [fp, #-20]	; 0xffffffec
   48a80:	str	r2, [fp, #-24]	; 0xffffffe8
   48a84:	str	r3, [fp, #-28]	; 0xffffffe4
   48a88:	ldr	r3, [fp, #-16]
   48a8c:	ldrb	r3, [r3, #27]
   48a90:	cmp	r3, #0
   48a94:	beq	48ab8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x4c>
   48a98:	ldr	r3, [fp, #4]
   48a9c:	str	r3, [sp]
   48aa0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48aa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48aa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   48aac:	ldr	r0, [fp, #-16]
   48ab0:	bl	46b34 <flatcc_json_printer_uint64_vector_field@@Base>
   48ab4:	b	48cf4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   48ab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   48ac0:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   48ac4:	str	r0, [fp, #-8]
   48ac8:	ldr	r3, [fp, #-8]
   48acc:	cmp	r3, #0
   48ad0:	beq	48cf4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   48ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   48ad8:	ldr	r3, [r3, #16]
   48adc:	add	r1, r3, #1
   48ae0:	ldr	r2, [fp, #-20]	; 0xffffffec
   48ae4:	str	r1, [r2, #16]
   48ae8:	cmp	r3, #0
   48aec:	beq	48b0c <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa0>
   48af0:	ldr	r3, [fp, #-16]
   48af4:	ldr	r3, [r3, #20]
   48af8:	add	r1, r3, #1
   48afc:	ldr	r2, [fp, #-16]
   48b00:	str	r1, [r2, #20]
   48b04:	mov	r2, #44	; 0x2c
   48b08:	strb	r2, [r3]
   48b0c:	ldr	r0, [fp, #-8]
   48b10:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   48b14:	str	r0, [fp, #-8]
   48b18:	ldr	r0, [fp, #-8]
   48b1c:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   48b20:	str	r0, [fp, #-12]
   48b24:	ldr	r3, [fp, #-8]
   48b28:	add	r3, r3, #4
   48b2c:	str	r3, [fp, #-8]
   48b30:	ldr	r3, [fp, #4]
   48b34:	mov	r2, r3
   48b38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48b3c:	ldr	r0, [fp, #-16]
   48b40:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   48b44:	ldr	r3, [fp, #-16]
   48b48:	ldr	r3, [r3, #32]
   48b4c:	add	r2, r3, #1
   48b50:	ldr	r3, [fp, #-16]
   48b54:	str	r2, [r3, #32]
   48b58:	ldr	r3, [fp, #-16]
   48b5c:	ldr	r3, [r3, #20]
   48b60:	add	r1, r3, #1
   48b64:	ldr	r2, [fp, #-16]
   48b68:	str	r1, [r2, #20]
   48b6c:	mov	r2, #91	; 0x5b
   48b70:	strb	r2, [r3]
   48b74:	ldr	r3, [fp, #-12]
   48b78:	cmp	r3, #0
   48b7c:	beq	48c7c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>
   48b80:	ldr	r3, [fp, #-16]
   48b84:	ldrb	r3, [r3, #25]
   48b88:	cmp	r3, #0
   48b8c:	beq	48bb8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14c>
   48b90:	ldr	r3, [fp, #-16]
   48b94:	ldr	r3, [r3, #20]
   48b98:	add	r1, r3, #1
   48b9c:	ldr	r2, [fp, #-16]
   48ba0:	str	r1, [r2, #20]
   48ba4:	mov	r2, #10
   48ba8:	strb	r2, [r3]
   48bac:	ldr	r0, [fp, #-16]
   48bb0:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48bb4:	b	48bc0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x154>
   48bb8:	ldr	r0, [fp, #-16]
   48bbc:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48bc0:	ldr	r0, [fp, #-8]
   48bc4:	bl	3ddd4 <flatcc_json_parser_struct_as_root@@Base+0x250>
   48bc8:	mov	r2, r0
   48bcc:	mov	r3, r1
   48bd0:	ldr	r1, [fp, #8]
   48bd4:	ldr	r0, [fp, #-16]
   48bd8:	blx	r1
   48bdc:	ldr	r3, [fp, #-8]
   48be0:	add	r3, r3, #8
   48be4:	str	r3, [fp, #-8]
   48be8:	ldr	r3, [fp, #-12]
   48bec:	sub	r3, r3, #1
   48bf0:	str	r3, [fp, #-12]
   48bf4:	b	48c7c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>
   48bf8:	ldr	r3, [fp, #-16]
   48bfc:	ldr	r3, [r3, #20]
   48c00:	add	r1, r3, #1
   48c04:	ldr	r2, [fp, #-16]
   48c08:	str	r1, [r2, #20]
   48c0c:	mov	r2, #44	; 0x2c
   48c10:	strb	r2, [r3]
   48c14:	ldr	r3, [fp, #-16]
   48c18:	ldrb	r3, [r3, #25]
   48c1c:	cmp	r3, #0
   48c20:	beq	48c4c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e0>
   48c24:	ldr	r3, [fp, #-16]
   48c28:	ldr	r3, [r3, #20]
   48c2c:	add	r1, r3, #1
   48c30:	ldr	r2, [fp, #-16]
   48c34:	str	r1, [r2, #20]
   48c38:	mov	r2, #10
   48c3c:	strb	r2, [r3]
   48c40:	ldr	r0, [fp, #-16]
   48c44:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48c48:	b	48c54 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e8>
   48c4c:	ldr	r0, [fp, #-16]
   48c50:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48c54:	ldr	r0, [fp, #-8]
   48c58:	bl	3ddd4 <flatcc_json_parser_struct_as_root@@Base+0x250>
   48c5c:	mov	r2, r0
   48c60:	mov	r3, r1
   48c64:	ldr	r1, [fp, #8]
   48c68:	ldr	r0, [fp, #-16]
   48c6c:	blx	r1
   48c70:	ldr	r3, [fp, #-8]
   48c74:	add	r3, r3, #8
   48c78:	str	r3, [fp, #-8]
   48c7c:	ldr	r3, [fp, #-12]
   48c80:	sub	r2, r3, #1
   48c84:	str	r2, [fp, #-12]
   48c88:	cmp	r3, #0
   48c8c:	bne	48bf8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18c>
   48c90:	ldr	r3, [fp, #-16]
   48c94:	ldrb	r3, [r3, #25]
   48c98:	cmp	r3, #0
   48c9c:	beq	48cd8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x26c>
   48ca0:	ldr	r3, [fp, #-16]
   48ca4:	ldr	r3, [r3, #20]
   48ca8:	add	r1, r3, #1
   48cac:	ldr	r2, [fp, #-16]
   48cb0:	str	r1, [r2, #20]
   48cb4:	mov	r2, #10
   48cb8:	strb	r2, [r3]
   48cbc:	ldr	r3, [fp, #-16]
   48cc0:	ldr	r3, [r3, #32]
   48cc4:	sub	r2, r3, #1
   48cc8:	ldr	r3, [fp, #-16]
   48ccc:	str	r2, [r3, #32]
   48cd0:	ldr	r0, [fp, #-16]
   48cd4:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48cd8:	ldr	r3, [fp, #-16]
   48cdc:	ldr	r3, [r3, #20]
   48ce0:	add	r1, r3, #1
   48ce4:	ldr	r2, [fp, #-16]
   48ce8:	str	r1, [r2, #20]
   48cec:	mov	r2, #93	; 0x5d
   48cf0:	strb	r2, [r3]
   48cf4:	sub	sp, fp, #4
   48cf8:	pop	{fp, pc}

00048cfc <flatcc_json_printer_int8_enum_vector_field@@Base>:
   48cfc:	push	{fp, lr}
   48d00:	add	fp, sp, #4
   48d04:	sub	sp, sp, #32
   48d08:	str	r0, [fp, #-16]
   48d0c:	str	r1, [fp, #-20]	; 0xffffffec
   48d10:	str	r2, [fp, #-24]	; 0xffffffe8
   48d14:	str	r3, [fp, #-28]	; 0xffffffe4
   48d18:	ldr	r3, [fp, #-16]
   48d1c:	ldrb	r3, [r3, #27]
   48d20:	cmp	r3, #0
   48d24:	beq	48d48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x4c>
   48d28:	ldr	r3, [fp, #4]
   48d2c:	str	r3, [sp]
   48d30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48d34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48d38:	ldr	r1, [fp, #-20]	; 0xffffffec
   48d3c:	ldr	r0, [fp, #-16]
   48d40:	bl	46dc0 <flatcc_json_printer_int8_vector_field@@Base>
   48d44:	b	48f8c <flatcc_json_printer_int8_enum_vector_field@@Base+0x290>
   48d48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   48d50:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   48d54:	str	r0, [fp, #-8]
   48d58:	ldr	r3, [fp, #-8]
   48d5c:	cmp	r3, #0
   48d60:	beq	48f8c <flatcc_json_printer_int8_enum_vector_field@@Base+0x290>
   48d64:	ldr	r3, [fp, #-20]	; 0xffffffec
   48d68:	ldr	r3, [r3, #16]
   48d6c:	add	r1, r3, #1
   48d70:	ldr	r2, [fp, #-20]	; 0xffffffec
   48d74:	str	r1, [r2, #16]
   48d78:	cmp	r3, #0
   48d7c:	beq	48d9c <flatcc_json_printer_int8_enum_vector_field@@Base+0xa0>
   48d80:	ldr	r3, [fp, #-16]
   48d84:	ldr	r3, [r3, #20]
   48d88:	add	r1, r3, #1
   48d8c:	ldr	r2, [fp, #-16]
   48d90:	str	r1, [r2, #20]
   48d94:	mov	r2, #44	; 0x2c
   48d98:	strb	r2, [r3]
   48d9c:	ldr	r0, [fp, #-8]
   48da0:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   48da4:	str	r0, [fp, #-8]
   48da8:	ldr	r0, [fp, #-8]
   48dac:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   48db0:	str	r0, [fp, #-12]
   48db4:	ldr	r3, [fp, #-8]
   48db8:	add	r3, r3, #4
   48dbc:	str	r3, [fp, #-8]
   48dc0:	ldr	r3, [fp, #4]
   48dc4:	mov	r2, r3
   48dc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48dcc:	ldr	r0, [fp, #-16]
   48dd0:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   48dd4:	ldr	r3, [fp, #-16]
   48dd8:	ldr	r3, [r3, #32]
   48ddc:	add	r2, r3, #1
   48de0:	ldr	r3, [fp, #-16]
   48de4:	str	r2, [r3, #32]
   48de8:	ldr	r3, [fp, #-16]
   48dec:	ldr	r3, [r3, #20]
   48df0:	add	r1, r3, #1
   48df4:	ldr	r2, [fp, #-16]
   48df8:	str	r1, [r2, #20]
   48dfc:	mov	r2, #91	; 0x5b
   48e00:	strb	r2, [r3]
   48e04:	ldr	r3, [fp, #-12]
   48e08:	cmp	r3, #0
   48e0c:	beq	48f14 <flatcc_json_printer_int8_enum_vector_field@@Base+0x218>
   48e10:	ldr	r3, [fp, #-16]
   48e14:	ldrb	r3, [r3, #25]
   48e18:	cmp	r3, #0
   48e1c:	beq	48e48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
   48e20:	ldr	r3, [fp, #-16]
   48e24:	ldr	r3, [r3, #20]
   48e28:	add	r1, r3, #1
   48e2c:	ldr	r2, [fp, #-16]
   48e30:	str	r1, [r2, #20]
   48e34:	mov	r2, #10
   48e38:	strb	r2, [r3]
   48e3c:	ldr	r0, [fp, #-16]
   48e40:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48e44:	b	48e50 <flatcc_json_printer_int8_enum_vector_field@@Base+0x154>
   48e48:	ldr	r0, [fp, #-16]
   48e4c:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48e50:	ldr	r0, [fp, #-8]
   48e54:	bl	3de38 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   48e58:	mov	r3, r0
   48e5c:	mov	r2, r3
   48e60:	ldr	r3, [fp, #8]
   48e64:	mov	r1, r2
   48e68:	ldr	r0, [fp, #-16]
   48e6c:	blx	r3
   48e70:	ldr	r3, [fp, #-8]
   48e74:	add	r3, r3, #1
   48e78:	str	r3, [fp, #-8]
   48e7c:	ldr	r3, [fp, #-12]
   48e80:	sub	r3, r3, #1
   48e84:	str	r3, [fp, #-12]
   48e88:	b	48f14 <flatcc_json_printer_int8_enum_vector_field@@Base+0x218>
   48e8c:	ldr	r3, [fp, #-16]
   48e90:	ldr	r3, [r3, #20]
   48e94:	add	r1, r3, #1
   48e98:	ldr	r2, [fp, #-16]
   48e9c:	str	r1, [r2, #20]
   48ea0:	mov	r2, #44	; 0x2c
   48ea4:	strb	r2, [r3]
   48ea8:	ldr	r3, [fp, #-16]
   48eac:	ldrb	r3, [r3, #25]
   48eb0:	cmp	r3, #0
   48eb4:	beq	48ee0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1e4>
   48eb8:	ldr	r3, [fp, #-16]
   48ebc:	ldr	r3, [r3, #20]
   48ec0:	add	r1, r3, #1
   48ec4:	ldr	r2, [fp, #-16]
   48ec8:	str	r1, [r2, #20]
   48ecc:	mov	r2, #10
   48ed0:	strb	r2, [r3]
   48ed4:	ldr	r0, [fp, #-16]
   48ed8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48edc:	b	48ee8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   48ee0:	ldr	r0, [fp, #-16]
   48ee4:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48ee8:	ldr	r0, [fp, #-8]
   48eec:	bl	3de38 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   48ef0:	mov	r3, r0
   48ef4:	mov	r2, r3
   48ef8:	ldr	r3, [fp, #8]
   48efc:	mov	r1, r2
   48f00:	ldr	r0, [fp, #-16]
   48f04:	blx	r3
   48f08:	ldr	r3, [fp, #-8]
   48f0c:	add	r3, r3, #1
   48f10:	str	r3, [fp, #-8]
   48f14:	ldr	r3, [fp, #-12]
   48f18:	sub	r2, r3, #1
   48f1c:	str	r2, [fp, #-12]
   48f20:	cmp	r3, #0
   48f24:	bne	48e8c <flatcc_json_printer_int8_enum_vector_field@@Base+0x190>
   48f28:	ldr	r3, [fp, #-16]
   48f2c:	ldrb	r3, [r3, #25]
   48f30:	cmp	r3, #0
   48f34:	beq	48f70 <flatcc_json_printer_int8_enum_vector_field@@Base+0x274>
   48f38:	ldr	r3, [fp, #-16]
   48f3c:	ldr	r3, [r3, #20]
   48f40:	add	r1, r3, #1
   48f44:	ldr	r2, [fp, #-16]
   48f48:	str	r1, [r2, #20]
   48f4c:	mov	r2, #10
   48f50:	strb	r2, [r3]
   48f54:	ldr	r3, [fp, #-16]
   48f58:	ldr	r3, [r3, #32]
   48f5c:	sub	r2, r3, #1
   48f60:	ldr	r3, [fp, #-16]
   48f64:	str	r2, [r3, #32]
   48f68:	ldr	r0, [fp, #-16]
   48f6c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48f70:	ldr	r3, [fp, #-16]
   48f74:	ldr	r3, [r3, #20]
   48f78:	add	r1, r3, #1
   48f7c:	ldr	r2, [fp, #-16]
   48f80:	str	r1, [r2, #20]
   48f84:	mov	r2, #93	; 0x5d
   48f88:	strb	r2, [r3]
   48f8c:	sub	sp, fp, #4
   48f90:	pop	{fp, pc}

00048f94 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   48f94:	push	{fp, lr}
   48f98:	add	fp, sp, #4
   48f9c:	sub	sp, sp, #32
   48fa0:	str	r0, [fp, #-16]
   48fa4:	str	r1, [fp, #-20]	; 0xffffffec
   48fa8:	str	r2, [fp, #-24]	; 0xffffffe8
   48fac:	str	r3, [fp, #-28]	; 0xffffffe4
   48fb0:	ldr	r3, [fp, #-16]
   48fb4:	ldrb	r3, [r3, #27]
   48fb8:	cmp	r3, #0
   48fbc:	beq	48fe0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x4c>
   48fc0:	ldr	r3, [fp, #4]
   48fc4:	str	r3, [sp]
   48fc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48fcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48fd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   48fd4:	ldr	r0, [fp, #-16]
   48fd8:	bl	47064 <flatcc_json_printer_int16_vector_field@@Base>
   48fdc:	b	49224 <flatcc_json_printer_int16_enum_vector_field@@Base+0x290>
   48fe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   48fe8:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   48fec:	str	r0, [fp, #-8]
   48ff0:	ldr	r3, [fp, #-8]
   48ff4:	cmp	r3, #0
   48ff8:	beq	49224 <flatcc_json_printer_int16_enum_vector_field@@Base+0x290>
   48ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   49000:	ldr	r3, [r3, #16]
   49004:	add	r1, r3, #1
   49008:	ldr	r2, [fp, #-20]	; 0xffffffec
   4900c:	str	r1, [r2, #16]
   49010:	cmp	r3, #0
   49014:	beq	49034 <flatcc_json_printer_int16_enum_vector_field@@Base+0xa0>
   49018:	ldr	r3, [fp, #-16]
   4901c:	ldr	r3, [r3, #20]
   49020:	add	r1, r3, #1
   49024:	ldr	r2, [fp, #-16]
   49028:	str	r1, [r2, #20]
   4902c:	mov	r2, #44	; 0x2c
   49030:	strb	r2, [r3]
   49034:	ldr	r0, [fp, #-8]
   49038:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4903c:	str	r0, [fp, #-8]
   49040:	ldr	r0, [fp, #-8]
   49044:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   49048:	str	r0, [fp, #-12]
   4904c:	ldr	r3, [fp, #-8]
   49050:	add	r3, r3, #4
   49054:	str	r3, [fp, #-8]
   49058:	ldr	r3, [fp, #4]
   4905c:	mov	r2, r3
   49060:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49064:	ldr	r0, [fp, #-16]
   49068:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4906c:	ldr	r3, [fp, #-16]
   49070:	ldr	r3, [r3, #32]
   49074:	add	r2, r3, #1
   49078:	ldr	r3, [fp, #-16]
   4907c:	str	r2, [r3, #32]
   49080:	ldr	r3, [fp, #-16]
   49084:	ldr	r3, [r3, #20]
   49088:	add	r1, r3, #1
   4908c:	ldr	r2, [fp, #-16]
   49090:	str	r1, [r2, #20]
   49094:	mov	r2, #91	; 0x5b
   49098:	strb	r2, [r3]
   4909c:	ldr	r3, [fp, #-12]
   490a0:	cmp	r3, #0
   490a4:	beq	491ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   490a8:	ldr	r3, [fp, #-16]
   490ac:	ldrb	r3, [r3, #25]
   490b0:	cmp	r3, #0
   490b4:	beq	490e0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
   490b8:	ldr	r3, [fp, #-16]
   490bc:	ldr	r3, [r3, #20]
   490c0:	add	r1, r3, #1
   490c4:	ldr	r2, [fp, #-16]
   490c8:	str	r1, [r2, #20]
   490cc:	mov	r2, #10
   490d0:	strb	r2, [r3]
   490d4:	ldr	r0, [fp, #-16]
   490d8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   490dc:	b	490e8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x154>
   490e0:	ldr	r0, [fp, #-16]
   490e4:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   490e8:	ldr	r0, [fp, #-8]
   490ec:	bl	3de90 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   490f0:	mov	r3, r0
   490f4:	mov	r2, r3
   490f8:	ldr	r3, [fp, #8]
   490fc:	mov	r1, r2
   49100:	ldr	r0, [fp, #-16]
   49104:	blx	r3
   49108:	ldr	r3, [fp, #-8]
   4910c:	add	r3, r3, #2
   49110:	str	r3, [fp, #-8]
   49114:	ldr	r3, [fp, #-12]
   49118:	sub	r3, r3, #1
   4911c:	str	r3, [fp, #-12]
   49120:	b	491ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   49124:	ldr	r3, [fp, #-16]
   49128:	ldr	r3, [r3, #20]
   4912c:	add	r1, r3, #1
   49130:	ldr	r2, [fp, #-16]
   49134:	str	r1, [r2, #20]
   49138:	mov	r2, #44	; 0x2c
   4913c:	strb	r2, [r3]
   49140:	ldr	r3, [fp, #-16]
   49144:	ldrb	r3, [r3, #25]
   49148:	cmp	r3, #0
   4914c:	beq	49178 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e4>
   49150:	ldr	r3, [fp, #-16]
   49154:	ldr	r3, [r3, #20]
   49158:	add	r1, r3, #1
   4915c:	ldr	r2, [fp, #-16]
   49160:	str	r1, [r2, #20]
   49164:	mov	r2, #10
   49168:	strb	r2, [r3]
   4916c:	ldr	r0, [fp, #-16]
   49170:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49174:	b	49180 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   49178:	ldr	r0, [fp, #-16]
   4917c:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49180:	ldr	r0, [fp, #-8]
   49184:	bl	3de90 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   49188:	mov	r3, r0
   4918c:	mov	r2, r3
   49190:	ldr	r3, [fp, #8]
   49194:	mov	r1, r2
   49198:	ldr	r0, [fp, #-16]
   4919c:	blx	r3
   491a0:	ldr	r3, [fp, #-8]
   491a4:	add	r3, r3, #2
   491a8:	str	r3, [fp, #-8]
   491ac:	ldr	r3, [fp, #-12]
   491b0:	sub	r2, r3, #1
   491b4:	str	r2, [fp, #-12]
   491b8:	cmp	r3, #0
   491bc:	bne	49124 <flatcc_json_printer_int16_enum_vector_field@@Base+0x190>
   491c0:	ldr	r3, [fp, #-16]
   491c4:	ldrb	r3, [r3, #25]
   491c8:	cmp	r3, #0
   491cc:	beq	49208 <flatcc_json_printer_int16_enum_vector_field@@Base+0x274>
   491d0:	ldr	r3, [fp, #-16]
   491d4:	ldr	r3, [r3, #20]
   491d8:	add	r1, r3, #1
   491dc:	ldr	r2, [fp, #-16]
   491e0:	str	r1, [r2, #20]
   491e4:	mov	r2, #10
   491e8:	strb	r2, [r3]
   491ec:	ldr	r3, [fp, #-16]
   491f0:	ldr	r3, [r3, #32]
   491f4:	sub	r2, r3, #1
   491f8:	ldr	r3, [fp, #-16]
   491fc:	str	r2, [r3, #32]
   49200:	ldr	r0, [fp, #-16]
   49204:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49208:	ldr	r3, [fp, #-16]
   4920c:	ldr	r3, [r3, #20]
   49210:	add	r1, r3, #1
   49214:	ldr	r2, [fp, #-16]
   49218:	str	r1, [r2, #20]
   4921c:	mov	r2, #93	; 0x5d
   49220:	strb	r2, [r3]
   49224:	sub	sp, fp, #4
   49228:	pop	{fp, pc}

0004922c <flatcc_json_printer_int32_enum_vector_field@@Base>:
   4922c:	push	{fp, lr}
   49230:	add	fp, sp, #4
   49234:	sub	sp, sp, #32
   49238:	str	r0, [fp, #-16]
   4923c:	str	r1, [fp, #-20]	; 0xffffffec
   49240:	str	r2, [fp, #-24]	; 0xffffffe8
   49244:	str	r3, [fp, #-28]	; 0xffffffe4
   49248:	ldr	r3, [fp, #-16]
   4924c:	ldrb	r3, [r3, #27]
   49250:	cmp	r3, #0
   49254:	beq	49278 <flatcc_json_printer_int32_enum_vector_field@@Base+0x4c>
   49258:	ldr	r3, [fp, #4]
   4925c:	str	r3, [sp]
   49260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   49264:	ldr	r2, [fp, #-24]	; 0xffffffe8
   49268:	ldr	r1, [fp, #-20]	; 0xffffffec
   4926c:	ldr	r0, [fp, #-16]
   49270:	bl	47308 <flatcc_json_printer_int32_vector_field@@Base>
   49274:	b	494b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   49278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4927c:	ldr	r0, [fp, #-20]	; 0xffffffec
   49280:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   49284:	str	r0, [fp, #-8]
   49288:	ldr	r3, [fp, #-8]
   4928c:	cmp	r3, #0
   49290:	beq	494b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   49294:	ldr	r3, [fp, #-20]	; 0xffffffec
   49298:	ldr	r3, [r3, #16]
   4929c:	add	r1, r3, #1
   492a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   492a4:	str	r1, [r2, #16]
   492a8:	cmp	r3, #0
   492ac:	beq	492cc <flatcc_json_printer_int32_enum_vector_field@@Base+0xa0>
   492b0:	ldr	r3, [fp, #-16]
   492b4:	ldr	r3, [r3, #20]
   492b8:	add	r1, r3, #1
   492bc:	ldr	r2, [fp, #-16]
   492c0:	str	r1, [r2, #20]
   492c4:	mov	r2, #44	; 0x2c
   492c8:	strb	r2, [r3]
   492cc:	ldr	r0, [fp, #-8]
   492d0:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   492d4:	str	r0, [fp, #-8]
   492d8:	ldr	r0, [fp, #-8]
   492dc:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   492e0:	str	r0, [fp, #-12]
   492e4:	ldr	r3, [fp, #-8]
   492e8:	add	r3, r3, #4
   492ec:	str	r3, [fp, #-8]
   492f0:	ldr	r3, [fp, #4]
   492f4:	mov	r2, r3
   492f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   492fc:	ldr	r0, [fp, #-16]
   49300:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   49304:	ldr	r3, [fp, #-16]
   49308:	ldr	r3, [r3, #32]
   4930c:	add	r2, r3, #1
   49310:	ldr	r3, [fp, #-16]
   49314:	str	r2, [r3, #32]
   49318:	ldr	r3, [fp, #-16]
   4931c:	ldr	r3, [r3, #20]
   49320:	add	r1, r3, #1
   49324:	ldr	r2, [fp, #-16]
   49328:	str	r1, [r2, #20]
   4932c:	mov	r2, #91	; 0x5b
   49330:	strb	r2, [r3]
   49334:	ldr	r3, [fp, #-12]
   49338:	cmp	r3, #0
   4933c:	beq	4943c <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   49340:	ldr	r3, [fp, #-16]
   49344:	ldrb	r3, [r3, #25]
   49348:	cmp	r3, #0
   4934c:	beq	49378 <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
   49350:	ldr	r3, [fp, #-16]
   49354:	ldr	r3, [r3, #20]
   49358:	add	r1, r3, #1
   4935c:	ldr	r2, [fp, #-16]
   49360:	str	r1, [r2, #20]
   49364:	mov	r2, #10
   49368:	strb	r2, [r3]
   4936c:	ldr	r0, [fp, #-16]
   49370:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49374:	b	49380 <flatcc_json_printer_int32_enum_vector_field@@Base+0x154>
   49378:	ldr	r0, [fp, #-16]
   4937c:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49380:	ldr	r0, [fp, #-8]
   49384:	bl	3dee4 <flatcc_json_parser_struct_as_root@@Base+0x360>
   49388:	mov	r2, r0
   4938c:	ldr	r3, [fp, #8]
   49390:	mov	r1, r2
   49394:	ldr	r0, [fp, #-16]
   49398:	blx	r3
   4939c:	ldr	r3, [fp, #-8]
   493a0:	add	r3, r3, #4
   493a4:	str	r3, [fp, #-8]
   493a8:	ldr	r3, [fp, #-12]
   493ac:	sub	r3, r3, #1
   493b0:	str	r3, [fp, #-12]
   493b4:	b	4943c <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   493b8:	ldr	r3, [fp, #-16]
   493bc:	ldr	r3, [r3, #20]
   493c0:	add	r1, r3, #1
   493c4:	ldr	r2, [fp, #-16]
   493c8:	str	r1, [r2, #20]
   493cc:	mov	r2, #44	; 0x2c
   493d0:	strb	r2, [r3]
   493d4:	ldr	r3, [fp, #-16]
   493d8:	ldrb	r3, [r3, #25]
   493dc:	cmp	r3, #0
   493e0:	beq	4940c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e0>
   493e4:	ldr	r3, [fp, #-16]
   493e8:	ldr	r3, [r3, #20]
   493ec:	add	r1, r3, #1
   493f0:	ldr	r2, [fp, #-16]
   493f4:	str	r1, [r2, #20]
   493f8:	mov	r2, #10
   493fc:	strb	r2, [r3]
   49400:	ldr	r0, [fp, #-16]
   49404:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49408:	b	49414 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e8>
   4940c:	ldr	r0, [fp, #-16]
   49410:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49414:	ldr	r0, [fp, #-8]
   49418:	bl	3dee4 <flatcc_json_parser_struct_as_root@@Base+0x360>
   4941c:	mov	r2, r0
   49420:	ldr	r3, [fp, #8]
   49424:	mov	r1, r2
   49428:	ldr	r0, [fp, #-16]
   4942c:	blx	r3
   49430:	ldr	r3, [fp, #-8]
   49434:	add	r3, r3, #4
   49438:	str	r3, [fp, #-8]
   4943c:	ldr	r3, [fp, #-12]
   49440:	sub	r2, r3, #1
   49444:	str	r2, [fp, #-12]
   49448:	cmp	r3, #0
   4944c:	bne	493b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x18c>
   49450:	ldr	r3, [fp, #-16]
   49454:	ldrb	r3, [r3, #25]
   49458:	cmp	r3, #0
   4945c:	beq	49498 <flatcc_json_printer_int32_enum_vector_field@@Base+0x26c>
   49460:	ldr	r3, [fp, #-16]
   49464:	ldr	r3, [r3, #20]
   49468:	add	r1, r3, #1
   4946c:	ldr	r2, [fp, #-16]
   49470:	str	r1, [r2, #20]
   49474:	mov	r2, #10
   49478:	strb	r2, [r3]
   4947c:	ldr	r3, [fp, #-16]
   49480:	ldr	r3, [r3, #32]
   49484:	sub	r2, r3, #1
   49488:	ldr	r3, [fp, #-16]
   4948c:	str	r2, [r3, #32]
   49490:	ldr	r0, [fp, #-16]
   49494:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49498:	ldr	r3, [fp, #-16]
   4949c:	ldr	r3, [r3, #20]
   494a0:	add	r1, r3, #1
   494a4:	ldr	r2, [fp, #-16]
   494a8:	str	r1, [r2, #20]
   494ac:	mov	r2, #93	; 0x5d
   494b0:	strb	r2, [r3]
   494b4:	sub	sp, fp, #4
   494b8:	pop	{fp, pc}

000494bc <flatcc_json_printer_int64_enum_vector_field@@Base>:
   494bc:	push	{fp, lr}
   494c0:	add	fp, sp, #4
   494c4:	sub	sp, sp, #32
   494c8:	str	r0, [fp, #-16]
   494cc:	str	r1, [fp, #-20]	; 0xffffffec
   494d0:	str	r2, [fp, #-24]	; 0xffffffe8
   494d4:	str	r3, [fp, #-28]	; 0xffffffe4
   494d8:	ldr	r3, [fp, #-16]
   494dc:	ldrb	r3, [r3, #27]
   494e0:	cmp	r3, #0
   494e4:	beq	49508 <flatcc_json_printer_int64_enum_vector_field@@Base+0x4c>
   494e8:	ldr	r3, [fp, #4]
   494ec:	str	r3, [sp]
   494f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   494f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   494f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   494fc:	ldr	r0, [fp, #-16]
   49500:	bl	475a4 <flatcc_json_printer_int64_vector_field@@Base>
   49504:	b	49744 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   49508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4950c:	ldr	r0, [fp, #-20]	; 0xffffffec
   49510:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   49514:	str	r0, [fp, #-8]
   49518:	ldr	r3, [fp, #-8]
   4951c:	cmp	r3, #0
   49520:	beq	49744 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   49524:	ldr	r3, [fp, #-20]	; 0xffffffec
   49528:	ldr	r3, [r3, #16]
   4952c:	add	r1, r3, #1
   49530:	ldr	r2, [fp, #-20]	; 0xffffffec
   49534:	str	r1, [r2, #16]
   49538:	cmp	r3, #0
   4953c:	beq	4955c <flatcc_json_printer_int64_enum_vector_field@@Base+0xa0>
   49540:	ldr	r3, [fp, #-16]
   49544:	ldr	r3, [r3, #20]
   49548:	add	r1, r3, #1
   4954c:	ldr	r2, [fp, #-16]
   49550:	str	r1, [r2, #20]
   49554:	mov	r2, #44	; 0x2c
   49558:	strb	r2, [r3]
   4955c:	ldr	r0, [fp, #-8]
   49560:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   49564:	str	r0, [fp, #-8]
   49568:	ldr	r0, [fp, #-8]
   4956c:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   49570:	str	r0, [fp, #-12]
   49574:	ldr	r3, [fp, #-8]
   49578:	add	r3, r3, #4
   4957c:	str	r3, [fp, #-8]
   49580:	ldr	r3, [fp, #4]
   49584:	mov	r2, r3
   49588:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4958c:	ldr	r0, [fp, #-16]
   49590:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   49594:	ldr	r3, [fp, #-16]
   49598:	ldr	r3, [r3, #32]
   4959c:	add	r2, r3, #1
   495a0:	ldr	r3, [fp, #-16]
   495a4:	str	r2, [r3, #32]
   495a8:	ldr	r3, [fp, #-16]
   495ac:	ldr	r3, [r3, #20]
   495b0:	add	r1, r3, #1
   495b4:	ldr	r2, [fp, #-16]
   495b8:	str	r1, [r2, #20]
   495bc:	mov	r2, #91	; 0x5b
   495c0:	strb	r2, [r3]
   495c4:	ldr	r3, [fp, #-12]
   495c8:	cmp	r3, #0
   495cc:	beq	496cc <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>
   495d0:	ldr	r3, [fp, #-16]
   495d4:	ldrb	r3, [r3, #25]
   495d8:	cmp	r3, #0
   495dc:	beq	49608 <flatcc_json_printer_int64_enum_vector_field@@Base+0x14c>
   495e0:	ldr	r3, [fp, #-16]
   495e4:	ldr	r3, [r3, #20]
   495e8:	add	r1, r3, #1
   495ec:	ldr	r2, [fp, #-16]
   495f0:	str	r1, [r2, #20]
   495f4:	mov	r2, #10
   495f8:	strb	r2, [r3]
   495fc:	ldr	r0, [fp, #-16]
   49600:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49604:	b	49610 <flatcc_json_printer_int64_enum_vector_field@@Base+0x154>
   49608:	ldr	r0, [fp, #-16]
   4960c:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49610:	ldr	r0, [fp, #-8]
   49614:	bl	3df3c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   49618:	mov	r2, r0
   4961c:	mov	r3, r1
   49620:	ldr	r1, [fp, #8]
   49624:	ldr	r0, [fp, #-16]
   49628:	blx	r1
   4962c:	ldr	r3, [fp, #-8]
   49630:	add	r3, r3, #8
   49634:	str	r3, [fp, #-8]
   49638:	ldr	r3, [fp, #-12]
   4963c:	sub	r3, r3, #1
   49640:	str	r3, [fp, #-12]
   49644:	b	496cc <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>
   49648:	ldr	r3, [fp, #-16]
   4964c:	ldr	r3, [r3, #20]
   49650:	add	r1, r3, #1
   49654:	ldr	r2, [fp, #-16]
   49658:	str	r1, [r2, #20]
   4965c:	mov	r2, #44	; 0x2c
   49660:	strb	r2, [r3]
   49664:	ldr	r3, [fp, #-16]
   49668:	ldrb	r3, [r3, #25]
   4966c:	cmp	r3, #0
   49670:	beq	4969c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e0>
   49674:	ldr	r3, [fp, #-16]
   49678:	ldr	r3, [r3, #20]
   4967c:	add	r1, r3, #1
   49680:	ldr	r2, [fp, #-16]
   49684:	str	r1, [r2, #20]
   49688:	mov	r2, #10
   4968c:	strb	r2, [r3]
   49690:	ldr	r0, [fp, #-16]
   49694:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49698:	b	496a4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e8>
   4969c:	ldr	r0, [fp, #-16]
   496a0:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   496a4:	ldr	r0, [fp, #-8]
   496a8:	bl	3df3c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   496ac:	mov	r2, r0
   496b0:	mov	r3, r1
   496b4:	ldr	r1, [fp, #8]
   496b8:	ldr	r0, [fp, #-16]
   496bc:	blx	r1
   496c0:	ldr	r3, [fp, #-8]
   496c4:	add	r3, r3, #8
   496c8:	str	r3, [fp, #-8]
   496cc:	ldr	r3, [fp, #-12]
   496d0:	sub	r2, r3, #1
   496d4:	str	r2, [fp, #-12]
   496d8:	cmp	r3, #0
   496dc:	bne	49648 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18c>
   496e0:	ldr	r3, [fp, #-16]
   496e4:	ldrb	r3, [r3, #25]
   496e8:	cmp	r3, #0
   496ec:	beq	49728 <flatcc_json_printer_int64_enum_vector_field@@Base+0x26c>
   496f0:	ldr	r3, [fp, #-16]
   496f4:	ldr	r3, [r3, #20]
   496f8:	add	r1, r3, #1
   496fc:	ldr	r2, [fp, #-16]
   49700:	str	r1, [r2, #20]
   49704:	mov	r2, #10
   49708:	strb	r2, [r3]
   4970c:	ldr	r3, [fp, #-16]
   49710:	ldr	r3, [r3, #32]
   49714:	sub	r2, r3, #1
   49718:	ldr	r3, [fp, #-16]
   4971c:	str	r2, [r3, #32]
   49720:	ldr	r0, [fp, #-16]
   49724:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49728:	ldr	r3, [fp, #-16]
   4972c:	ldr	r3, [r3, #20]
   49730:	add	r1, r3, #1
   49734:	ldr	r2, [fp, #-16]
   49738:	str	r1, [r2, #20]
   4973c:	mov	r2, #93	; 0x5d
   49740:	strb	r2, [r3]
   49744:	sub	sp, fp, #4
   49748:	pop	{fp, pc}

0004974c <flatcc_json_printer_bool_enum_vector_field@@Base>:
   4974c:	push	{fp, lr}
   49750:	add	fp, sp, #4
   49754:	sub	sp, sp, #32
   49758:	str	r0, [fp, #-16]
   4975c:	str	r1, [fp, #-20]	; 0xffffffec
   49760:	str	r2, [fp, #-24]	; 0xffffffe8
   49764:	str	r3, [fp, #-28]	; 0xffffffe4
   49768:	ldr	r3, [fp, #-16]
   4976c:	ldrb	r3, [r3, #27]
   49770:	cmp	r3, #0
   49774:	beq	49798 <flatcc_json_printer_bool_enum_vector_field@@Base+0x4c>
   49778:	ldr	r3, [fp, #4]
   4977c:	str	r3, [sp]
   49780:	ldr	r3, [fp, #-28]	; 0xffffffe4
   49784:	ldr	r2, [fp, #-24]	; 0xffffffe8
   49788:	ldr	r1, [fp, #-20]	; 0xffffffec
   4978c:	ldr	r0, [fp, #-16]
   49790:	bl	47830 <flatcc_json_printer_bool_vector_field@@Base>
   49794:	b	499dc <flatcc_json_printer_bool_enum_vector_field@@Base+0x290>
   49798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4979c:	ldr	r0, [fp, #-20]	; 0xffffffec
   497a0:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   497a4:	str	r0, [fp, #-8]
   497a8:	ldr	r3, [fp, #-8]
   497ac:	cmp	r3, #0
   497b0:	beq	499dc <flatcc_json_printer_bool_enum_vector_field@@Base+0x290>
   497b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   497b8:	ldr	r3, [r3, #16]
   497bc:	add	r1, r3, #1
   497c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   497c4:	str	r1, [r2, #16]
   497c8:	cmp	r3, #0
   497cc:	beq	497ec <flatcc_json_printer_bool_enum_vector_field@@Base+0xa0>
   497d0:	ldr	r3, [fp, #-16]
   497d4:	ldr	r3, [r3, #20]
   497d8:	add	r1, r3, #1
   497dc:	ldr	r2, [fp, #-16]
   497e0:	str	r1, [r2, #20]
   497e4:	mov	r2, #44	; 0x2c
   497e8:	strb	r2, [r3]
   497ec:	ldr	r0, [fp, #-8]
   497f0:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   497f4:	str	r0, [fp, #-8]
   497f8:	ldr	r0, [fp, #-8]
   497fc:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   49800:	str	r0, [fp, #-12]
   49804:	ldr	r3, [fp, #-8]
   49808:	add	r3, r3, #4
   4980c:	str	r3, [fp, #-8]
   49810:	ldr	r3, [fp, #4]
   49814:	mov	r2, r3
   49818:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4981c:	ldr	r0, [fp, #-16]
   49820:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   49824:	ldr	r3, [fp, #-16]
   49828:	ldr	r3, [r3, #32]
   4982c:	add	r2, r3, #1
   49830:	ldr	r3, [fp, #-16]
   49834:	str	r2, [r3, #32]
   49838:	ldr	r3, [fp, #-16]
   4983c:	ldr	r3, [r3, #20]
   49840:	add	r1, r3, #1
   49844:	ldr	r2, [fp, #-16]
   49848:	str	r1, [r2, #20]
   4984c:	mov	r2, #91	; 0x5b
   49850:	strb	r2, [r3]
   49854:	ldr	r3, [fp, #-12]
   49858:	cmp	r3, #0
   4985c:	beq	49964 <flatcc_json_printer_bool_enum_vector_field@@Base+0x218>
   49860:	ldr	r3, [fp, #-16]
   49864:	ldrb	r3, [r3, #25]
   49868:	cmp	r3, #0
   4986c:	beq	49898 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
   49870:	ldr	r3, [fp, #-16]
   49874:	ldr	r3, [r3, #20]
   49878:	add	r1, r3, #1
   4987c:	ldr	r2, [fp, #-16]
   49880:	str	r1, [r2, #20]
   49884:	mov	r2, #10
   49888:	strb	r2, [r3]
   4988c:	ldr	r0, [fp, #-16]
   49890:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49894:	b	498a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x154>
   49898:	ldr	r0, [fp, #-16]
   4989c:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   498a0:	ldr	r0, [fp, #-8]
   498a4:	bl	3e070 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   498a8:	mov	r3, r0
   498ac:	mov	r2, r3
   498b0:	ldr	r3, [fp, #8]
   498b4:	mov	r1, r2
   498b8:	ldr	r0, [fp, #-16]
   498bc:	blx	r3
   498c0:	ldr	r3, [fp, #-8]
   498c4:	add	r3, r3, #1
   498c8:	str	r3, [fp, #-8]
   498cc:	ldr	r3, [fp, #-12]
   498d0:	sub	r3, r3, #1
   498d4:	str	r3, [fp, #-12]
   498d8:	b	49964 <flatcc_json_printer_bool_enum_vector_field@@Base+0x218>
   498dc:	ldr	r3, [fp, #-16]
   498e0:	ldr	r3, [r3, #20]
   498e4:	add	r1, r3, #1
   498e8:	ldr	r2, [fp, #-16]
   498ec:	str	r1, [r2, #20]
   498f0:	mov	r2, #44	; 0x2c
   498f4:	strb	r2, [r3]
   498f8:	ldr	r3, [fp, #-16]
   498fc:	ldrb	r3, [r3, #25]
   49900:	cmp	r3, #0
   49904:	beq	49930 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1e4>
   49908:	ldr	r3, [fp, #-16]
   4990c:	ldr	r3, [r3, #20]
   49910:	add	r1, r3, #1
   49914:	ldr	r2, [fp, #-16]
   49918:	str	r1, [r2, #20]
   4991c:	mov	r2, #10
   49920:	strb	r2, [r3]
   49924:	ldr	r0, [fp, #-16]
   49928:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4992c:	b	49938 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   49930:	ldr	r0, [fp, #-16]
   49934:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49938:	ldr	r0, [fp, #-8]
   4993c:	bl	3e070 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   49940:	mov	r3, r0
   49944:	mov	r2, r3
   49948:	ldr	r3, [fp, #8]
   4994c:	mov	r1, r2
   49950:	ldr	r0, [fp, #-16]
   49954:	blx	r3
   49958:	ldr	r3, [fp, #-8]
   4995c:	add	r3, r3, #1
   49960:	str	r3, [fp, #-8]
   49964:	ldr	r3, [fp, #-12]
   49968:	sub	r2, r3, #1
   4996c:	str	r2, [fp, #-12]
   49970:	cmp	r3, #0
   49974:	bne	498dc <flatcc_json_printer_bool_enum_vector_field@@Base+0x190>
   49978:	ldr	r3, [fp, #-16]
   4997c:	ldrb	r3, [r3, #25]
   49980:	cmp	r3, #0
   49984:	beq	499c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x274>
   49988:	ldr	r3, [fp, #-16]
   4998c:	ldr	r3, [r3, #20]
   49990:	add	r1, r3, #1
   49994:	ldr	r2, [fp, #-16]
   49998:	str	r1, [r2, #20]
   4999c:	mov	r2, #10
   499a0:	strb	r2, [r3]
   499a4:	ldr	r3, [fp, #-16]
   499a8:	ldr	r3, [r3, #32]
   499ac:	sub	r2, r3, #1
   499b0:	ldr	r3, [fp, #-16]
   499b4:	str	r2, [r3, #32]
   499b8:	ldr	r0, [fp, #-16]
   499bc:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   499c0:	ldr	r3, [fp, #-16]
   499c4:	ldr	r3, [r3, #20]
   499c8:	add	r1, r3, #1
   499cc:	ldr	r2, [fp, #-16]
   499d0:	str	r1, [r2, #20]
   499d4:	mov	r2, #93	; 0x5d
   499d8:	strb	r2, [r3]
   499dc:	sub	sp, fp, #4
   499e0:	pop	{fp, pc}

000499e4 <flatcc_json_printer_struct_vector_field@@Base>:
   499e4:	push	{fp, lr}
   499e8:	add	fp, sp, #4
   499ec:	sub	sp, sp, #24
   499f0:	str	r0, [fp, #-16]
   499f4:	str	r1, [fp, #-20]	; 0xffffffec
   499f8:	str	r2, [fp, #-24]	; 0xffffffe8
   499fc:	str	r3, [fp, #-28]	; 0xffffffe4
   49a00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49a04:	ldr	r0, [fp, #-20]	; 0xffffffec
   49a08:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   49a0c:	str	r0, [fp, #-8]
   49a10:	ldr	r3, [fp, #-8]
   49a14:	cmp	r3, #0
   49a18:	beq	49d44 <flatcc_json_printer_struct_vector_field@@Base+0x360>
   49a1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   49a20:	ldr	r3, [r3, #16]
   49a24:	add	r1, r3, #1
   49a28:	ldr	r2, [fp, #-20]	; 0xffffffec
   49a2c:	str	r1, [r2, #16]
   49a30:	cmp	r3, #0
   49a34:	beq	49a54 <flatcc_json_printer_struct_vector_field@@Base+0x70>
   49a38:	ldr	r3, [fp, #-16]
   49a3c:	ldr	r3, [r3, #20]
   49a40:	add	r1, r3, #1
   49a44:	ldr	r2, [fp, #-16]
   49a48:	str	r1, [r2, #20]
   49a4c:	mov	r2, #44	; 0x2c
   49a50:	strb	r2, [r3]
   49a54:	ldr	r0, [fp, #-8]
   49a58:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   49a5c:	str	r0, [fp, #-8]
   49a60:	ldr	r0, [fp, #-8]
   49a64:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   49a68:	str	r0, [fp, #-12]
   49a6c:	ldr	r3, [fp, #-8]
   49a70:	add	r3, r3, #4
   49a74:	str	r3, [fp, #-8]
   49a78:	ldr	r3, [fp, #4]
   49a7c:	mov	r2, r3
   49a80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49a84:	ldr	r0, [fp, #-16]
   49a88:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   49a8c:	ldr	r3, [fp, #-16]
   49a90:	ldr	r3, [r3, #32]
   49a94:	add	r2, r3, #1
   49a98:	ldr	r3, [fp, #-16]
   49a9c:	str	r2, [r3, #32]
   49aa0:	ldr	r3, [fp, #-16]
   49aa4:	ldr	r3, [r3, #20]
   49aa8:	add	r1, r3, #1
   49aac:	ldr	r2, [fp, #-16]
   49ab0:	str	r1, [r2, #20]
   49ab4:	mov	r2, #91	; 0x5b
   49ab8:	strb	r2, [r3]
   49abc:	ldr	r3, [fp, #-12]
   49ac0:	cmp	r3, #0
   49ac4:	beq	49ccc <flatcc_json_printer_struct_vector_field@@Base+0x2e8>
   49ac8:	ldr	r3, [fp, #-16]
   49acc:	ldrb	r3, [r3, #25]
   49ad0:	cmp	r3, #0
   49ad4:	beq	49b00 <flatcc_json_printer_struct_vector_field@@Base+0x11c>
   49ad8:	ldr	r3, [fp, #-16]
   49adc:	ldr	r3, [r3, #20]
   49ae0:	add	r1, r3, #1
   49ae4:	ldr	r2, [fp, #-16]
   49ae8:	str	r1, [r2, #20]
   49aec:	mov	r2, #10
   49af0:	strb	r2, [r3]
   49af4:	ldr	r0, [fp, #-16]
   49af8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49afc:	b	49b08 <flatcc_json_printer_struct_vector_field@@Base+0x124>
   49b00:	ldr	r0, [fp, #-16]
   49b04:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49b08:	ldr	r3, [fp, #-16]
   49b0c:	ldr	r3, [r3, #32]
   49b10:	add	r2, r3, #1
   49b14:	ldr	r3, [fp, #-16]
   49b18:	str	r2, [r3, #32]
   49b1c:	ldr	r3, [fp, #-16]
   49b20:	ldr	r3, [r3, #20]
   49b24:	add	r1, r3, #1
   49b28:	ldr	r2, [fp, #-16]
   49b2c:	str	r1, [r2, #20]
   49b30:	mov	r2, #123	; 0x7b
   49b34:	strb	r2, [r3]
   49b38:	ldr	r3, [fp, #12]
   49b3c:	ldr	r1, [fp, #-8]
   49b40:	ldr	r0, [fp, #-16]
   49b44:	blx	r3
   49b48:	ldr	r3, [fp, #-16]
   49b4c:	ldrb	r3, [r3, #25]
   49b50:	cmp	r3, #0
   49b54:	beq	49b90 <flatcc_json_printer_struct_vector_field@@Base+0x1ac>
   49b58:	ldr	r3, [fp, #-16]
   49b5c:	ldr	r3, [r3, #20]
   49b60:	add	r1, r3, #1
   49b64:	ldr	r2, [fp, #-16]
   49b68:	str	r1, [r2, #20]
   49b6c:	mov	r2, #10
   49b70:	strb	r2, [r3]
   49b74:	ldr	r3, [fp, #-16]
   49b78:	ldr	r3, [r3, #32]
   49b7c:	sub	r2, r3, #1
   49b80:	ldr	r3, [fp, #-16]
   49b84:	str	r2, [r3, #32]
   49b88:	ldr	r0, [fp, #-16]
   49b8c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49b90:	ldr	r3, [fp, #-16]
   49b94:	ldr	r3, [r3, #20]
   49b98:	add	r1, r3, #1
   49b9c:	ldr	r2, [fp, #-16]
   49ba0:	str	r1, [r2, #20]
   49ba4:	mov	r2, #125	; 0x7d
   49ba8:	strb	r2, [r3]
   49bac:	ldr	r3, [fp, #-12]
   49bb0:	sub	r3, r3, #1
   49bb4:	str	r3, [fp, #-12]
   49bb8:	b	49ccc <flatcc_json_printer_struct_vector_field@@Base+0x2e8>
   49bbc:	ldr	r2, [fp, #-8]
   49bc0:	ldr	r3, [fp, #8]
   49bc4:	add	r3, r2, r3
   49bc8:	str	r3, [fp, #-8]
   49bcc:	ldr	r3, [fp, #-16]
   49bd0:	ldr	r3, [r3, #20]
   49bd4:	add	r1, r3, #1
   49bd8:	ldr	r2, [fp, #-16]
   49bdc:	str	r1, [r2, #20]
   49be0:	mov	r2, #44	; 0x2c
   49be4:	strb	r2, [r3]
   49be8:	ldr	r3, [fp, #-16]
   49bec:	ldrb	r3, [r3, #25]
   49bf0:	cmp	r3, #0
   49bf4:	beq	49c20 <flatcc_json_printer_struct_vector_field@@Base+0x23c>
   49bf8:	ldr	r3, [fp, #-16]
   49bfc:	ldr	r3, [r3, #20]
   49c00:	add	r1, r3, #1
   49c04:	ldr	r2, [fp, #-16]
   49c08:	str	r1, [r2, #20]
   49c0c:	mov	r2, #10
   49c10:	strb	r2, [r3]
   49c14:	ldr	r0, [fp, #-16]
   49c18:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49c1c:	b	49c28 <flatcc_json_printer_struct_vector_field@@Base+0x244>
   49c20:	ldr	r0, [fp, #-16]
   49c24:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49c28:	ldr	r3, [fp, #-16]
   49c2c:	ldr	r3, [r3, #32]
   49c30:	add	r2, r3, #1
   49c34:	ldr	r3, [fp, #-16]
   49c38:	str	r2, [r3, #32]
   49c3c:	ldr	r3, [fp, #-16]
   49c40:	ldr	r3, [r3, #20]
   49c44:	add	r1, r3, #1
   49c48:	ldr	r2, [fp, #-16]
   49c4c:	str	r1, [r2, #20]
   49c50:	mov	r2, #123	; 0x7b
   49c54:	strb	r2, [r3]
   49c58:	ldr	r3, [fp, #12]
   49c5c:	ldr	r1, [fp, #-8]
   49c60:	ldr	r0, [fp, #-16]
   49c64:	blx	r3
   49c68:	ldr	r3, [fp, #-16]
   49c6c:	ldrb	r3, [r3, #25]
   49c70:	cmp	r3, #0
   49c74:	beq	49cb0 <flatcc_json_printer_struct_vector_field@@Base+0x2cc>
   49c78:	ldr	r3, [fp, #-16]
   49c7c:	ldr	r3, [r3, #20]
   49c80:	add	r1, r3, #1
   49c84:	ldr	r2, [fp, #-16]
   49c88:	str	r1, [r2, #20]
   49c8c:	mov	r2, #10
   49c90:	strb	r2, [r3]
   49c94:	ldr	r3, [fp, #-16]
   49c98:	ldr	r3, [r3, #32]
   49c9c:	sub	r2, r3, #1
   49ca0:	ldr	r3, [fp, #-16]
   49ca4:	str	r2, [r3, #32]
   49ca8:	ldr	r0, [fp, #-16]
   49cac:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49cb0:	ldr	r3, [fp, #-16]
   49cb4:	ldr	r3, [r3, #20]
   49cb8:	add	r1, r3, #1
   49cbc:	ldr	r2, [fp, #-16]
   49cc0:	str	r1, [r2, #20]
   49cc4:	mov	r2, #125	; 0x7d
   49cc8:	strb	r2, [r3]
   49ccc:	ldr	r3, [fp, #-12]
   49cd0:	sub	r2, r3, #1
   49cd4:	str	r2, [fp, #-12]
   49cd8:	cmp	r3, #0
   49cdc:	bne	49bbc <flatcc_json_printer_struct_vector_field@@Base+0x1d8>
   49ce0:	ldr	r3, [fp, #-16]
   49ce4:	ldrb	r3, [r3, #25]
   49ce8:	cmp	r3, #0
   49cec:	beq	49d28 <flatcc_json_printer_struct_vector_field@@Base+0x344>
   49cf0:	ldr	r3, [fp, #-16]
   49cf4:	ldr	r3, [r3, #20]
   49cf8:	add	r1, r3, #1
   49cfc:	ldr	r2, [fp, #-16]
   49d00:	str	r1, [r2, #20]
   49d04:	mov	r2, #10
   49d08:	strb	r2, [r3]
   49d0c:	ldr	r3, [fp, #-16]
   49d10:	ldr	r3, [r3, #32]
   49d14:	sub	r2, r3, #1
   49d18:	ldr	r3, [fp, #-16]
   49d1c:	str	r2, [r3, #32]
   49d20:	ldr	r0, [fp, #-16]
   49d24:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49d28:	ldr	r3, [fp, #-16]
   49d2c:	ldr	r3, [r3, #20]
   49d30:	add	r1, r3, #1
   49d34:	ldr	r2, [fp, #-16]
   49d38:	str	r1, [r2, #20]
   49d3c:	mov	r2, #93	; 0x5d
   49d40:	strb	r2, [r3]
   49d44:	nop			; (mov r0, r0)
   49d48:	sub	sp, fp, #4
   49d4c:	pop	{fp, pc}

00049d50 <flatcc_json_printer_string_vector_field@@Base>:
   49d50:	push	{fp, lr}
   49d54:	add	fp, sp, #4
   49d58:	sub	sp, sp, #24
   49d5c:	str	r0, [fp, #-16]
   49d60:	str	r1, [fp, #-20]	; 0xffffffec
   49d64:	str	r2, [fp, #-24]	; 0xffffffe8
   49d68:	str	r3, [fp, #-28]	; 0xffffffe4
   49d6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49d70:	ldr	r0, [fp, #-20]	; 0xffffffec
   49d74:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   49d78:	str	r0, [fp, #-8]
   49d7c:	ldr	r3, [fp, #-8]
   49d80:	cmp	r3, #0
   49d84:	beq	49f94 <flatcc_json_printer_string_vector_field@@Base+0x244>
   49d88:	ldr	r3, [fp, #-20]	; 0xffffffec
   49d8c:	ldr	r3, [r3, #16]
   49d90:	add	r1, r3, #1
   49d94:	ldr	r2, [fp, #-20]	; 0xffffffec
   49d98:	str	r1, [r2, #16]
   49d9c:	cmp	r3, #0
   49da0:	beq	49dc0 <flatcc_json_printer_string_vector_field@@Base+0x70>
   49da4:	ldr	r3, [fp, #-16]
   49da8:	ldr	r3, [r3, #20]
   49dac:	add	r1, r3, #1
   49db0:	ldr	r2, [fp, #-16]
   49db4:	str	r1, [r2, #20]
   49db8:	mov	r2, #44	; 0x2c
   49dbc:	strb	r2, [r3]
   49dc0:	ldr	r0, [fp, #-8]
   49dc4:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   49dc8:	str	r0, [fp, #-8]
   49dcc:	ldr	r0, [fp, #-8]
   49dd0:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   49dd4:	str	r0, [fp, #-12]
   49dd8:	ldr	r3, [fp, #-8]
   49ddc:	add	r3, r3, #4
   49de0:	str	r3, [fp, #-8]
   49de4:	ldr	r3, [fp, #4]
   49de8:	mov	r2, r3
   49dec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49df0:	ldr	r0, [fp, #-16]
   49df4:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   49df8:	ldr	r3, [fp, #-16]
   49dfc:	ldr	r3, [r3, #32]
   49e00:	add	r2, r3, #1
   49e04:	ldr	r3, [fp, #-16]
   49e08:	str	r2, [r3, #32]
   49e0c:	ldr	r3, [fp, #-16]
   49e10:	ldr	r3, [r3, #20]
   49e14:	add	r1, r3, #1
   49e18:	ldr	r2, [fp, #-16]
   49e1c:	str	r1, [r2, #20]
   49e20:	mov	r2, #91	; 0x5b
   49e24:	strb	r2, [r3]
   49e28:	ldr	r3, [fp, #-12]
   49e2c:	cmp	r3, #0
   49e30:	beq	49f1c <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   49e34:	ldr	r3, [fp, #-16]
   49e38:	ldrb	r3, [r3, #25]
   49e3c:	cmp	r3, #0
   49e40:	beq	49e6c <flatcc_json_printer_string_vector_field@@Base+0x11c>
   49e44:	ldr	r3, [fp, #-16]
   49e48:	ldr	r3, [r3, #20]
   49e4c:	add	r1, r3, #1
   49e50:	ldr	r2, [fp, #-16]
   49e54:	str	r1, [r2, #20]
   49e58:	mov	r2, #10
   49e5c:	strb	r2, [r3]
   49e60:	ldr	r0, [fp, #-16]
   49e64:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49e68:	b	49e74 <flatcc_json_printer_string_vector_field@@Base+0x124>
   49e6c:	ldr	r0, [fp, #-16]
   49e70:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49e74:	ldr	r0, [fp, #-8]
   49e78:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   49e7c:	mov	r3, r0
   49e80:	mov	r1, r3
   49e84:	ldr	r0, [fp, #-16]
   49e88:	bl	43870 <flatcc_json_printer_enum_flag@@Base+0x74>
   49e8c:	ldr	r3, [fp, #-12]
   49e90:	sub	r3, r3, #1
   49e94:	str	r3, [fp, #-12]
   49e98:	b	49f1c <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   49e9c:	ldr	r3, [fp, #-8]
   49ea0:	add	r3, r3, #4
   49ea4:	str	r3, [fp, #-8]
   49ea8:	ldr	r3, [fp, #-16]
   49eac:	ldr	r3, [r3, #20]
   49eb0:	add	r1, r3, #1
   49eb4:	ldr	r2, [fp, #-16]
   49eb8:	str	r1, [r2, #20]
   49ebc:	mov	r2, #44	; 0x2c
   49ec0:	strb	r2, [r3]
   49ec4:	ldr	r3, [fp, #-16]
   49ec8:	ldrb	r3, [r3, #25]
   49ecc:	cmp	r3, #0
   49ed0:	beq	49efc <flatcc_json_printer_string_vector_field@@Base+0x1ac>
   49ed4:	ldr	r3, [fp, #-16]
   49ed8:	ldr	r3, [r3, #20]
   49edc:	add	r1, r3, #1
   49ee0:	ldr	r2, [fp, #-16]
   49ee4:	str	r1, [r2, #20]
   49ee8:	mov	r2, #10
   49eec:	strb	r2, [r3]
   49ef0:	ldr	r0, [fp, #-16]
   49ef4:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49ef8:	b	49f04 <flatcc_json_printer_string_vector_field@@Base+0x1b4>
   49efc:	ldr	r0, [fp, #-16]
   49f00:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49f04:	ldr	r0, [fp, #-8]
   49f08:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   49f0c:	mov	r3, r0
   49f10:	mov	r1, r3
   49f14:	ldr	r0, [fp, #-16]
   49f18:	bl	43870 <flatcc_json_printer_enum_flag@@Base+0x74>
   49f1c:	ldr	r3, [fp, #-12]
   49f20:	sub	r2, r3, #1
   49f24:	str	r2, [fp, #-12]
   49f28:	cmp	r3, #0
   49f2c:	bne	49e9c <flatcc_json_printer_string_vector_field@@Base+0x14c>
   49f30:	ldr	r3, [fp, #-16]
   49f34:	ldrb	r3, [r3, #25]
   49f38:	cmp	r3, #0
   49f3c:	beq	49f78 <flatcc_json_printer_string_vector_field@@Base+0x228>
   49f40:	ldr	r3, [fp, #-16]
   49f44:	ldr	r3, [r3, #20]
   49f48:	add	r1, r3, #1
   49f4c:	ldr	r2, [fp, #-16]
   49f50:	str	r1, [r2, #20]
   49f54:	mov	r2, #10
   49f58:	strb	r2, [r3]
   49f5c:	ldr	r3, [fp, #-16]
   49f60:	ldr	r3, [r3, #32]
   49f64:	sub	r2, r3, #1
   49f68:	ldr	r3, [fp, #-16]
   49f6c:	str	r2, [r3, #32]
   49f70:	ldr	r0, [fp, #-16]
   49f74:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49f78:	ldr	r3, [fp, #-16]
   49f7c:	ldr	r3, [r3, #20]
   49f80:	add	r1, r3, #1
   49f84:	ldr	r2, [fp, #-16]
   49f88:	str	r1, [r2, #20]
   49f8c:	mov	r2, #93	; 0x5d
   49f90:	strb	r2, [r3]
   49f94:	nop			; (mov r0, r0)
   49f98:	sub	sp, fp, #4
   49f9c:	pop	{fp, pc}

00049fa0 <flatcc_json_printer_table_vector_field@@Base>:
   49fa0:	push	{fp, lr}
   49fa4:	add	fp, sp, #4
   49fa8:	sub	sp, sp, #24
   49fac:	str	r0, [fp, #-16]
   49fb0:	str	r1, [fp, #-20]	; 0xffffffec
   49fb4:	str	r2, [fp, #-24]	; 0xffffffe8
   49fb8:	str	r3, [fp, #-28]	; 0xffffffe4
   49fbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49fc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   49fc4:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   49fc8:	str	r0, [fp, #-8]
   49fcc:	ldr	r3, [fp, #-8]
   49fd0:	cmp	r3, #0
   49fd4:	beq	4a174 <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   49fd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   49fdc:	ldr	r3, [r3, #16]
   49fe0:	add	r1, r3, #1
   49fe4:	ldr	r2, [fp, #-20]	; 0xffffffec
   49fe8:	str	r1, [r2, #16]
   49fec:	cmp	r3, #0
   49ff0:	beq	4a010 <flatcc_json_printer_table_vector_field@@Base+0x70>
   49ff4:	ldr	r3, [fp, #-16]
   49ff8:	ldr	r3, [r3, #20]
   49ffc:	add	r1, r3, #1
   4a000:	ldr	r2, [fp, #-16]
   4a004:	str	r1, [r2, #20]
   4a008:	mov	r2, #44	; 0x2c
   4a00c:	strb	r2, [r3]
   4a010:	ldr	r0, [fp, #-8]
   4a014:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4a018:	str	r0, [fp, #-8]
   4a01c:	ldr	r0, [fp, #-8]
   4a020:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   4a024:	str	r0, [fp, #-12]
   4a028:	ldr	r3, [fp, #-8]
   4a02c:	add	r3, r3, #4
   4a030:	str	r3, [fp, #-8]
   4a034:	ldr	r3, [fp, #4]
   4a038:	mov	r2, r3
   4a03c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a040:	ldr	r0, [fp, #-16]
   4a044:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4a048:	ldr	r3, [fp, #-16]
   4a04c:	ldr	r3, [r3, #32]
   4a050:	add	r2, r3, #1
   4a054:	ldr	r3, [fp, #-16]
   4a058:	str	r2, [r3, #32]
   4a05c:	ldr	r3, [fp, #-16]
   4a060:	ldr	r3, [r3, #20]
   4a064:	add	r1, r3, #1
   4a068:	ldr	r2, [fp, #-16]
   4a06c:	str	r1, [r2, #20]
   4a070:	mov	r2, #91	; 0x5b
   4a074:	strb	r2, [r3]
   4a078:	ldr	r3, [fp, #-12]
   4a07c:	cmp	r3, #0
   4a080:	beq	4a0fc <flatcc_json_printer_table_vector_field@@Base+0x15c>
   4a084:	ldr	r0, [fp, #-8]
   4a088:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4a08c:	mov	r1, r0
   4a090:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a094:	ldr	r2, [r3, #12]
   4a098:	ldr	r3, [fp, #8]
   4a09c:	ldr	r0, [fp, #-16]
   4a0a0:	bl	438b8 <flatcc_json_printer_enum_flag@@Base+0xbc>
   4a0a4:	ldr	r3, [fp, #-12]
   4a0a8:	sub	r3, r3, #1
   4a0ac:	str	r3, [fp, #-12]
   4a0b0:	b	4a0fc <flatcc_json_printer_table_vector_field@@Base+0x15c>
   4a0b4:	ldr	r3, [fp, #-8]
   4a0b8:	add	r3, r3, #4
   4a0bc:	str	r3, [fp, #-8]
   4a0c0:	ldr	r3, [fp, #-16]
   4a0c4:	ldr	r3, [r3, #20]
   4a0c8:	add	r1, r3, #1
   4a0cc:	ldr	r2, [fp, #-16]
   4a0d0:	str	r1, [r2, #20]
   4a0d4:	mov	r2, #44	; 0x2c
   4a0d8:	strb	r2, [r3]
   4a0dc:	ldr	r0, [fp, #-8]
   4a0e0:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4a0e4:	mov	r1, r0
   4a0e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a0ec:	ldr	r2, [r3, #12]
   4a0f0:	ldr	r3, [fp, #8]
   4a0f4:	ldr	r0, [fp, #-16]
   4a0f8:	bl	438b8 <flatcc_json_printer_enum_flag@@Base+0xbc>
   4a0fc:	ldr	r3, [fp, #-12]
   4a100:	sub	r2, r3, #1
   4a104:	str	r2, [fp, #-12]
   4a108:	cmp	r3, #0
   4a10c:	bne	4a0b4 <flatcc_json_printer_table_vector_field@@Base+0x114>
   4a110:	ldr	r3, [fp, #-16]
   4a114:	ldrb	r3, [r3, #25]
   4a118:	cmp	r3, #0
   4a11c:	beq	4a158 <flatcc_json_printer_table_vector_field@@Base+0x1b8>
   4a120:	ldr	r3, [fp, #-16]
   4a124:	ldr	r3, [r3, #20]
   4a128:	add	r1, r3, #1
   4a12c:	ldr	r2, [fp, #-16]
   4a130:	str	r1, [r2, #20]
   4a134:	mov	r2, #10
   4a138:	strb	r2, [r3]
   4a13c:	ldr	r3, [fp, #-16]
   4a140:	ldr	r3, [r3, #32]
   4a144:	sub	r2, r3, #1
   4a148:	ldr	r3, [fp, #-16]
   4a14c:	str	r2, [r3, #32]
   4a150:	ldr	r0, [fp, #-16]
   4a154:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4a158:	ldr	r3, [fp, #-16]
   4a15c:	ldr	r3, [r3, #20]
   4a160:	add	r1, r3, #1
   4a164:	ldr	r2, [fp, #-16]
   4a168:	str	r1, [r2, #20]
   4a16c:	mov	r2, #93	; 0x5d
   4a170:	strb	r2, [r3]
   4a174:	nop			; (mov r0, r0)
   4a178:	sub	sp, fp, #4
   4a17c:	pop	{fp, pc}

0004a180 <flatcc_json_printer_union_vector_field@@Base>:
   4a180:	push	{fp, lr}
   4a184:	add	fp, sp, #4
   4a188:	sub	sp, sp, #160	; 0xa0
   4a18c:	str	r0, [fp, #-144]	; 0xffffff70
   4a190:	str	r1, [fp, #-148]	; 0xffffff6c
   4a194:	str	r2, [fp, #-152]	; 0xffffff68
   4a198:	str	r3, [fp, #-156]	; 0xffffff64
   4a19c:	ldr	r3, [fp, #-152]	; 0xffffff68
   4a1a0:	sub	r3, r3, #1
   4a1a4:	mov	r1, r3
   4a1a8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   4a1ac:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4a1b0:	str	r0, [fp, #-20]	; 0xffffffec
   4a1b4:	ldr	r1, [fp, #-152]	; 0xffffff68
   4a1b8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   4a1bc:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4a1c0:	str	r0, [fp, #-8]
   4a1c4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   4a1c8:	ldr	r3, [r3, #12]
   4a1cc:	str	r3, [fp, #-136]	; 0xffffff78
   4a1d0:	ldr	r3, [fp, #4]
   4a1d4:	cmp	r3, #100	; 0x64
   4a1d8:	ble	4a208 <flatcc_json_printer_union_vector_field@@Base+0x88>
   4a1dc:	mov	r1, #1
   4a1e0:	ldr	r0, [fp, #-144]	; 0xffffff70
   4a1e4:	bl	3e270 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4a1e8:	ldr	r3, [pc, #916]	; 4a584 <flatcc_json_printer_union_vector_field@@Base+0x404>
   4a1ec:	add	r3, pc, r3
   4a1f0:	ldr	r2, [pc, #912]	; 4a588 <flatcc_json_printer_union_vector_field@@Base+0x408>
   4a1f4:	ldr	r1, [pc, #912]	; 4a58c <flatcc_json_printer_union_vector_field@@Base+0x40c>
   4a1f8:	add	r1, pc, r1
   4a1fc:	ldr	r0, [pc, #908]	; 4a590 <flatcc_json_printer_union_vector_field@@Base+0x410>
   4a200:	add	r0, pc, r0
   4a204:	bl	14610 <__assert_fail@plt>
   4a208:	ldr	r2, [fp, #4]
   4a20c:	sub	r3, fp, #128	; 0x80
   4a210:	ldr	r1, [fp, #-156]	; 0xffffff64
   4a214:	mov	r0, r3
   4a218:	bl	14544 <memcpy@plt>
   4a21c:	ldr	r3, [fp, #4]
   4a220:	sub	r2, fp, #128	; 0x80
   4a224:	add	r3, r2, r3
   4a228:	mov	r2, #5
   4a22c:	ldr	r1, [pc, #864]	; 4a594 <flatcc_json_printer_union_vector_field@@Base+0x414>
   4a230:	add	r1, pc, r1
   4a234:	mov	r0, r3
   4a238:	bl	14544 <memcpy@plt>
   4a23c:	ldr	r3, [fp, #-8]
   4a240:	cmp	r3, #0
   4a244:	beq	4a578 <flatcc_json_printer_union_vector_field@@Base+0x3f8>
   4a248:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a24c:	cmp	r3, #0
   4a250:	beq	4a578 <flatcc_json_printer_union_vector_field@@Base+0x3f8>
   4a254:	ldr	r3, [fp, #-152]	; 0xffffff68
   4a258:	sub	r1, r3, #1
   4a25c:	ldr	r3, [fp, #4]
   4a260:	add	r3, r3, #5
   4a264:	sub	r0, fp, #128	; 0x80
   4a268:	ldr	r2, [fp, #8]
   4a26c:	str	r2, [sp, #4]
   4a270:	str	r3, [sp]
   4a274:	mov	r3, r0
   4a278:	mov	r2, r1
   4a27c:	ldr	r1, [fp, #-148]	; 0xffffff6c
   4a280:	ldr	r0, [fp, #-144]	; 0xffffff70
   4a284:	bl	48014 <flatcc_json_printer_utype_enum_vector_field@@Base>
   4a288:	ldr	r3, [fp, #-148]	; 0xffffff6c
   4a28c:	ldr	r3, [r3, #16]
   4a290:	add	r1, r3, #1
   4a294:	ldr	r2, [fp, #-148]	; 0xffffff6c
   4a298:	str	r1, [r2, #16]
   4a29c:	cmp	r3, #0
   4a2a0:	beq	4a2c0 <flatcc_json_printer_union_vector_field@@Base+0x140>
   4a2a4:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a2a8:	ldr	r3, [r3, #20]
   4a2ac:	add	r1, r3, #1
   4a2b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a2b4:	str	r1, [r2, #20]
   4a2b8:	mov	r2, #44	; 0x2c
   4a2bc:	strb	r2, [r3]
   4a2c0:	ldr	r0, [fp, #-8]
   4a2c4:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4a2c8:	str	r0, [fp, #-8]
   4a2cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a2d0:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4a2d4:	str	r0, [fp, #-20]	; 0xffffffec
   4a2d8:	ldr	r0, [fp, #-8]
   4a2dc:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   4a2e0:	str	r0, [fp, #-16]
   4a2e4:	ldr	r3, [fp, #-8]
   4a2e8:	add	r3, r3, #4
   4a2ec:	str	r3, [fp, #-8]
   4a2f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a2f4:	add	r3, r3, #4
   4a2f8:	str	r3, [fp, #-20]	; 0xffffffec
   4a2fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a300:	str	r3, [fp, #-12]
   4a304:	ldr	r3, [fp, #4]
   4a308:	mov	r2, r3
   4a30c:	ldr	r1, [fp, #-156]	; 0xffffff64
   4a310:	ldr	r0, [fp, #-144]	; 0xffffff70
   4a314:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4a318:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a31c:	ldr	r3, [r3, #32]
   4a320:	add	r2, r3, #1
   4a324:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a328:	str	r2, [r3, #32]
   4a32c:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a330:	ldr	r3, [r3, #20]
   4a334:	add	r1, r3, #1
   4a338:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a33c:	str	r1, [r2, #20]
   4a340:	mov	r2, #91	; 0x5b
   4a344:	strb	r2, [r3]
   4a348:	ldr	r3, [fp, #-16]
   4a34c:	cmp	r3, #0
   4a350:	beq	4a500 <flatcc_json_printer_union_vector_field@@Base+0x380>
   4a354:	ldr	r0, [fp, #-12]
   4a358:	bl	3e1c8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   4a35c:	mov	r3, r0
   4a360:	strb	r3, [fp, #-21]	; 0xffffffeb
   4a364:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   4a368:	cmp	r3, #0
   4a36c:	beq	4a398 <flatcc_json_printer_union_vector_field@@Base+0x218>
   4a370:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   4a374:	strb	r3, [fp, #-132]	; 0xffffff7c
   4a378:	ldr	r3, [fp, #-8]
   4a37c:	str	r3, [fp, #-140]	; 0xffffff74
   4a380:	sub	r2, fp, #140	; 0x8c
   4a384:	ldr	r3, [fp, #12]
   4a388:	mov	r1, r2
   4a38c:	ldr	r0, [fp, #-144]	; 0xffffff70
   4a390:	blx	r3
   4a394:	b	4a408 <flatcc_json_printer_union_vector_field@@Base+0x288>
   4a398:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a39c:	ldr	r3, [r3, #20]
   4a3a0:	add	r1, r3, #1
   4a3a4:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a3a8:	str	r1, [r2, #20]
   4a3ac:	mov	r2, #110	; 0x6e
   4a3b0:	strb	r2, [r3]
   4a3b4:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a3b8:	ldr	r3, [r3, #20]
   4a3bc:	add	r1, r3, #1
   4a3c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a3c4:	str	r1, [r2, #20]
   4a3c8:	mov	r2, #117	; 0x75
   4a3cc:	strb	r2, [r3]
   4a3d0:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a3d4:	ldr	r3, [r3, #20]
   4a3d8:	add	r1, r3, #1
   4a3dc:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a3e0:	str	r1, [r2, #20]
   4a3e4:	mov	r2, #108	; 0x6c
   4a3e8:	strb	r2, [r3]
   4a3ec:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a3f0:	ldr	r3, [r3, #20]
   4a3f4:	add	r1, r3, #1
   4a3f8:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a3fc:	str	r1, [r2, #20]
   4a400:	mov	r2, #108	; 0x6c
   4a404:	strb	r2, [r3]
   4a408:	ldr	r3, [fp, #-16]
   4a40c:	sub	r3, r3, #1
   4a410:	str	r3, [fp, #-16]
   4a414:	b	4a500 <flatcc_json_printer_union_vector_field@@Base+0x380>
   4a418:	ldr	r3, [fp, #-8]
   4a41c:	add	r3, r3, #4
   4a420:	str	r3, [fp, #-8]
   4a424:	ldr	r3, [fp, #-12]
   4a428:	add	r3, r3, #1
   4a42c:	str	r3, [fp, #-12]
   4a430:	ldr	r0, [fp, #-12]
   4a434:	bl	3e1c8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   4a438:	mov	r3, r0
   4a43c:	strb	r3, [fp, #-21]	; 0xffffffeb
   4a440:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a444:	ldr	r3, [r3, #20]
   4a448:	add	r1, r3, #1
   4a44c:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a450:	str	r1, [r2, #20]
   4a454:	mov	r2, #44	; 0x2c
   4a458:	strb	r2, [r3]
   4a45c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   4a460:	cmp	r3, #0
   4a464:	beq	4a490 <flatcc_json_printer_union_vector_field@@Base+0x310>
   4a468:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   4a46c:	strb	r3, [fp, #-132]	; 0xffffff7c
   4a470:	ldr	r3, [fp, #-8]
   4a474:	str	r3, [fp, #-140]	; 0xffffff74
   4a478:	sub	r2, fp, #140	; 0x8c
   4a47c:	ldr	r3, [fp, #12]
   4a480:	mov	r1, r2
   4a484:	ldr	r0, [fp, #-144]	; 0xffffff70
   4a488:	blx	r3
   4a48c:	b	4a500 <flatcc_json_printer_union_vector_field@@Base+0x380>
   4a490:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a494:	ldr	r3, [r3, #20]
   4a498:	add	r1, r3, #1
   4a49c:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a4a0:	str	r1, [r2, #20]
   4a4a4:	mov	r2, #110	; 0x6e
   4a4a8:	strb	r2, [r3]
   4a4ac:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a4b0:	ldr	r3, [r3, #20]
   4a4b4:	add	r1, r3, #1
   4a4b8:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a4bc:	str	r1, [r2, #20]
   4a4c0:	mov	r2, #117	; 0x75
   4a4c4:	strb	r2, [r3]
   4a4c8:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a4cc:	ldr	r3, [r3, #20]
   4a4d0:	add	r1, r3, #1
   4a4d4:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a4d8:	str	r1, [r2, #20]
   4a4dc:	mov	r2, #108	; 0x6c
   4a4e0:	strb	r2, [r3]
   4a4e4:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a4e8:	ldr	r3, [r3, #20]
   4a4ec:	add	r1, r3, #1
   4a4f0:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a4f4:	str	r1, [r2, #20]
   4a4f8:	mov	r2, #108	; 0x6c
   4a4fc:	strb	r2, [r3]
   4a500:	ldr	r3, [fp, #-16]
   4a504:	sub	r2, r3, #1
   4a508:	str	r2, [fp, #-16]
   4a50c:	cmp	r3, #0
   4a510:	bne	4a418 <flatcc_json_printer_union_vector_field@@Base+0x298>
   4a514:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a518:	ldrb	r3, [r3, #25]
   4a51c:	cmp	r3, #0
   4a520:	beq	4a55c <flatcc_json_printer_union_vector_field@@Base+0x3dc>
   4a524:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a528:	ldr	r3, [r3, #20]
   4a52c:	add	r1, r3, #1
   4a530:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a534:	str	r1, [r2, #20]
   4a538:	mov	r2, #10
   4a53c:	strb	r2, [r3]
   4a540:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a544:	ldr	r3, [r3, #32]
   4a548:	sub	r2, r3, #1
   4a54c:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a550:	str	r2, [r3, #32]
   4a554:	ldr	r0, [fp, #-144]	; 0xffffff70
   4a558:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4a55c:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a560:	ldr	r3, [r3, #20]
   4a564:	add	r1, r3, #1
   4a568:	ldr	r2, [fp, #-144]	; 0xffffff70
   4a56c:	str	r1, [r2, #20]
   4a570:	mov	r2, #93	; 0x5d
   4a574:	strb	r2, [r3]
   4a578:	nop			; (mov r0, r0)
   4a57c:	sub	sp, fp, #4
   4a580:	pop	{fp, pc}
   4a584:			; <UNDEFINED> instruction: 0x000092b0
   4a588:	andeq	r0, r0, fp, asr #6
   4a58c:	andeq	r8, r0, r0, lsl #26
   4a590:	andeq	r8, r0, r4, ror #26
   4a594:	andeq	r8, r0, r0, asr sp

0004a598 <flatcc_json_printer_table_field@@Base>:
   4a598:	push	{fp, lr}
   4a59c:	add	fp, sp, #4
   4a5a0:	sub	sp, sp, #24
   4a5a4:	str	r0, [fp, #-16]
   4a5a8:	str	r1, [fp, #-20]	; 0xffffffec
   4a5ac:	str	r2, [fp, #-24]	; 0xffffffe8
   4a5b0:	str	r3, [fp, #-28]	; 0xffffffe4
   4a5b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a5b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a5bc:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4a5c0:	str	r0, [fp, #-8]
   4a5c4:	ldr	r3, [fp, #-8]
   4a5c8:	cmp	r3, #0
   4a5cc:	beq	4a63c <flatcc_json_printer_table_field@@Base+0xa4>
   4a5d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a5d4:	ldr	r3, [r3, #16]
   4a5d8:	add	r1, r3, #1
   4a5dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a5e0:	str	r1, [r2, #16]
   4a5e4:	cmp	r3, #0
   4a5e8:	beq	4a608 <flatcc_json_printer_table_field@@Base+0x70>
   4a5ec:	ldr	r3, [fp, #-16]
   4a5f0:	ldr	r3, [r3, #20]
   4a5f4:	add	r1, r3, #1
   4a5f8:	ldr	r2, [fp, #-16]
   4a5fc:	str	r1, [r2, #20]
   4a600:	mov	r2, #44	; 0x2c
   4a604:	strb	r2, [r3]
   4a608:	ldr	r3, [fp, #4]
   4a60c:	mov	r2, r3
   4a610:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a614:	ldr	r0, [fp, #-16]
   4a618:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4a61c:	ldr	r0, [fp, #-8]
   4a620:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4a624:	mov	r1, r0
   4a628:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a62c:	ldr	r2, [r3, #12]
   4a630:	ldr	r3, [fp, #8]
   4a634:	ldr	r0, [fp, #-16]
   4a638:	bl	438b8 <flatcc_json_printer_enum_flag@@Base+0xbc>
   4a63c:	nop			; (mov r0, r0)
   4a640:	sub	sp, fp, #4
   4a644:	pop	{fp, pc}

0004a648 <flatcc_json_printer_union_field@@Base>:
   4a648:	push	{fp, lr}
   4a64c:	add	fp, sp, #4
   4a650:	sub	sp, sp, #40	; 0x28
   4a654:	str	r0, [fp, #-32]	; 0xffffffe0
   4a658:	str	r1, [fp, #-36]	; 0xffffffdc
   4a65c:	str	r2, [fp, #-40]	; 0xffffffd8
   4a660:	str	r3, [fp, #-44]	; 0xffffffd4
   4a664:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4a668:	sub	r3, r3, #1
   4a66c:	mov	r1, r3
   4a670:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4a674:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4a678:	str	r0, [fp, #-8]
   4a67c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   4a680:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4a684:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4a688:	str	r0, [fp, #-12]
   4a68c:	ldr	r3, [fp, #-12]
   4a690:	cmp	r3, #0
   4a694:	beq	4a944 <flatcc_json_printer_union_field@@Base+0x2fc>
   4a698:	ldr	r3, [fp, #-8]
   4a69c:	cmp	r3, #0
   4a6a0:	beq	4a944 <flatcc_json_printer_union_field@@Base+0x2fc>
   4a6a4:	ldr	r0, [fp, #-8]
   4a6a8:	bl	3e1c8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   4a6ac:	mov	r3, r0
   4a6b0:	strb	r3, [fp, #-13]
   4a6b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a6b8:	ldr	r3, [r3, #16]
   4a6bc:	add	r1, r3, #1
   4a6c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4a6c4:	str	r1, [r2, #16]
   4a6c8:	cmp	r3, #0
   4a6cc:	beq	4a6ec <flatcc_json_printer_union_field@@Base+0xa4>
   4a6d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a6d4:	ldr	r3, [r3, #20]
   4a6d8:	add	r1, r3, #1
   4a6dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a6e0:	str	r1, [r2, #20]
   4a6e4:	mov	r2, #44	; 0x2c
   4a6e8:	strb	r2, [r3]
   4a6ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a6f0:	ldrb	r3, [r3, #25]
   4a6f4:	cmp	r3, #0
   4a6f8:	beq	4a724 <flatcc_json_printer_union_field@@Base+0xdc>
   4a6fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a700:	ldr	r3, [r3, #20]
   4a704:	add	r1, r3, #1
   4a708:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a70c:	str	r1, [r2, #20]
   4a710:	mov	r2, #10
   4a714:	strb	r2, [r3]
   4a718:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a71c:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4a720:	b	4a72c <flatcc_json_printer_union_field@@Base+0xe4>
   4a724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a728:	bl	3e2d8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   4a72c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a730:	ldr	r3, [r3, #20]
   4a734:	mov	r2, #34	; 0x22
   4a738:	strb	r2, [r3]
   4a73c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a740:	ldr	r3, [r3, #20]
   4a744:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a748:	ldrb	r2, [r2, #26]
   4a74c:	cmp	r2, #0
   4a750:	moveq	r2, #1
   4a754:	movne	r2, #0
   4a758:	uxtb	r2, r2
   4a75c:	add	r2, r3, r2
   4a760:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a764:	str	r2, [r3, #20]
   4a768:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a76c:	ldr	r2, [r3, #20]
   4a770:	ldr	r3, [fp, #4]
   4a774:	add	r2, r2, r3
   4a778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a77c:	ldr	r3, [r3, #16]
   4a780:	cmp	r2, r3
   4a784:	bcs	4a7bc <flatcc_json_printer_union_field@@Base+0x174>
   4a788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a78c:	ldr	r3, [r3, #20]
   4a790:	ldr	r2, [fp, #4]
   4a794:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4a798:	mov	r0, r3
   4a79c:	bl	14544 <memcpy@plt>
   4a7a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a7a4:	ldr	r2, [r3, #20]
   4a7a8:	ldr	r3, [fp, #4]
   4a7ac:	add	r2, r2, r3
   4a7b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a7b4:	str	r2, [r3, #20]
   4a7b8:	b	4a7d0 <flatcc_json_printer_union_field@@Base+0x188>
   4a7bc:	ldr	r3, [fp, #4]
   4a7c0:	mov	r2, r3
   4a7c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4a7c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a7cc:	bl	42910 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   4a7d0:	mov	r2, #5
   4a7d4:	ldr	r3, [pc, #372]	; 4a950 <flatcc_json_printer_union_field@@Base+0x308>
   4a7d8:	add	r3, pc, r3
   4a7dc:	mov	r1, r3
   4a7e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a7e4:	bl	42910 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   4a7e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a7ec:	ldr	r3, [r3, #20]
   4a7f0:	mov	r2, #34	; 0x22
   4a7f4:	strb	r2, [r3]
   4a7f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a7fc:	ldr	r3, [r3, #20]
   4a800:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a804:	ldrb	r2, [r2, #26]
   4a808:	cmp	r2, #0
   4a80c:	moveq	r2, #1
   4a810:	movne	r2, #0
   4a814:	uxtb	r2, r2
   4a818:	add	r2, r3, r2
   4a81c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a820:	str	r2, [r3, #20]
   4a824:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a828:	ldr	r3, [r3, #20]
   4a82c:	add	r1, r3, #1
   4a830:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a834:	str	r1, [r2, #20]
   4a838:	mov	r2, #58	; 0x3a
   4a83c:	strb	r2, [r3]
   4a840:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a844:	ldr	r3, [r3, #20]
   4a848:	mov	r2, #32
   4a84c:	strb	r2, [r3]
   4a850:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a854:	ldr	r3, [r3, #20]
   4a858:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a85c:	ldrb	r2, [r2, #25]
   4a860:	cmp	r2, #0
   4a864:	movne	r2, #1
   4a868:	moveq	r2, #0
   4a86c:	uxtb	r2, r2
   4a870:	add	r2, r3, r2
   4a874:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a878:	str	r2, [r3, #20]
   4a87c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a880:	ldrb	r3, [r3, #27]
   4a884:	cmp	r3, #0
   4a888:	beq	4a8c0 <flatcc_json_printer_union_field@@Base+0x278>
   4a88c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a890:	ldr	r2, [r3, #20]
   4a894:	ldrb	r3, [fp, #-13]
   4a898:	mov	r1, r2
   4a89c:	mov	r0, r3
   4a8a0:	bl	3e390 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   4a8a4:	mov	r2, r0
   4a8a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a8ac:	ldr	r3, [r3, #20]
   4a8b0:	add	r2, r3, r2
   4a8b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a8b8:	str	r2, [r3, #20]
   4a8bc:	b	4a8d4 <flatcc_json_printer_union_field@@Base+0x28c>
   4a8c0:	ldrb	r2, [fp, #-13]
   4a8c4:	ldr	r3, [fp, #8]
   4a8c8:	mov	r1, r2
   4a8cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a8d0:	blx	r3
   4a8d4:	ldrb	r3, [fp, #-13]
   4a8d8:	cmp	r3, #0
   4a8dc:	beq	4a948 <flatcc_json_printer_union_field@@Base+0x300>
   4a8e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a8e4:	ldr	r3, [r3, #20]
   4a8e8:	add	r1, r3, #1
   4a8ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a8f0:	str	r1, [r2, #20]
   4a8f4:	mov	r2, #44	; 0x2c
   4a8f8:	strb	r2, [r3]
   4a8fc:	ldr	r3, [fp, #4]
   4a900:	mov	r2, r3
   4a904:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4a908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a90c:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4a910:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a914:	ldr	r3, [r3, #12]
   4a918:	str	r3, [fp, #-24]	; 0xffffffe8
   4a91c:	ldrb	r3, [fp, #-13]
   4a920:	strb	r3, [fp, #-20]	; 0xffffffec
   4a924:	ldr	r3, [fp, #-12]
   4a928:	str	r3, [fp, #-28]	; 0xffffffe4
   4a92c:	sub	r2, fp, #28
   4a930:	ldr	r3, [fp, #12]
   4a934:	mov	r1, r2
   4a938:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4a93c:	blx	r3
   4a940:	b	4a948 <flatcc_json_printer_union_field@@Base+0x300>
   4a944:	nop			; (mov r0, r0)
   4a948:	sub	sp, fp, #4
   4a94c:	pop	{fp, pc}
   4a950:	andeq	r8, r0, r8, lsr #15

0004a954 <flatcc_json_printer_union_table@@Base>:
   4a954:	push	{fp, lr}
   4a958:	add	fp, sp, #4
   4a95c:	sub	sp, sp, #16
   4a960:	str	r0, [fp, #-8]
   4a964:	str	r1, [fp, #-12]
   4a968:	str	r2, [fp, #-16]
   4a96c:	ldr	r3, [fp, #-12]
   4a970:	ldr	r3, [r3]
   4a974:	mov	r0, r3
   4a978:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4a97c:	mov	r1, r0
   4a980:	ldr	r3, [fp, #-12]
   4a984:	ldr	r2, [r3, #4]
   4a988:	ldr	r3, [fp, #-16]
   4a98c:	ldr	r0, [fp, #-8]
   4a990:	bl	438b8 <flatcc_json_printer_enum_flag@@Base+0xbc>
   4a994:	nop			; (mov r0, r0)
   4a998:	sub	sp, fp, #4
   4a99c:	pop	{fp, pc}

0004a9a0 <flatcc_json_printer_union_struct@@Base>:
   4a9a0:	push	{fp, lr}
   4a9a4:	add	fp, sp, #4
   4a9a8:	sub	sp, sp, #16
   4a9ac:	str	r0, [fp, #-8]
   4a9b0:	str	r1, [fp, #-12]
   4a9b4:	str	r2, [fp, #-16]
   4a9b8:	ldr	r3, [fp, #-8]
   4a9bc:	ldr	r3, [r3, #32]
   4a9c0:	add	r2, r3, #1
   4a9c4:	ldr	r3, [fp, #-8]
   4a9c8:	str	r2, [r3, #32]
   4a9cc:	ldr	r3, [fp, #-8]
   4a9d0:	ldr	r3, [r3, #20]
   4a9d4:	add	r1, r3, #1
   4a9d8:	ldr	r2, [fp, #-8]
   4a9dc:	str	r1, [r2, #20]
   4a9e0:	mov	r2, #123	; 0x7b
   4a9e4:	strb	r2, [r3]
   4a9e8:	ldr	r3, [fp, #-12]
   4a9ec:	ldr	r3, [r3]
   4a9f0:	mov	r0, r3
   4a9f4:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4a9f8:	mov	r2, r0
   4a9fc:	ldr	r3, [fp, #-16]
   4aa00:	mov	r1, r2
   4aa04:	ldr	r0, [fp, #-8]
   4aa08:	blx	r3
   4aa0c:	ldr	r3, [fp, #-8]
   4aa10:	ldrb	r3, [r3, #25]
   4aa14:	cmp	r3, #0
   4aa18:	beq	4aa54 <flatcc_json_printer_union_struct@@Base+0xb4>
   4aa1c:	ldr	r3, [fp, #-8]
   4aa20:	ldr	r3, [r3, #20]
   4aa24:	add	r1, r3, #1
   4aa28:	ldr	r2, [fp, #-8]
   4aa2c:	str	r1, [r2, #20]
   4aa30:	mov	r2, #10
   4aa34:	strb	r2, [r3]
   4aa38:	ldr	r3, [fp, #-8]
   4aa3c:	ldr	r3, [r3, #32]
   4aa40:	sub	r2, r3, #1
   4aa44:	ldr	r3, [fp, #-8]
   4aa48:	str	r2, [r3, #32]
   4aa4c:	ldr	r0, [fp, #-8]
   4aa50:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4aa54:	ldr	r3, [fp, #-8]
   4aa58:	ldr	r3, [r3, #20]
   4aa5c:	add	r1, r3, #1
   4aa60:	ldr	r2, [fp, #-8]
   4aa64:	str	r1, [r2, #20]
   4aa68:	mov	r2, #125	; 0x7d
   4aa6c:	strb	r2, [r3]
   4aa70:	nop			; (mov r0, r0)
   4aa74:	sub	sp, fp, #4
   4aa78:	pop	{fp, pc}

0004aa7c <flatcc_json_printer_union_string@@Base>:
   4aa7c:	push	{fp, lr}
   4aa80:	add	fp, sp, #4
   4aa84:	sub	sp, sp, #8
   4aa88:	str	r0, [fp, #-8]
   4aa8c:	str	r1, [fp, #-12]
   4aa90:	ldr	r3, [fp, #-12]
   4aa94:	ldr	r3, [r3]
   4aa98:	mov	r0, r3
   4aa9c:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4aaa0:	mov	r3, r0
   4aaa4:	mov	r1, r3
   4aaa8:	ldr	r0, [fp, #-8]
   4aaac:	bl	43870 <flatcc_json_printer_enum_flag@@Base+0x74>
   4aab0:	nop			; (mov r0, r0)
   4aab4:	sub	sp, fp, #4
   4aab8:	pop	{fp, pc}

0004aabc <flatcc_json_printer_embedded_struct_field@@Base>:
   4aabc:	push	{fp, lr}
   4aac0:	add	fp, sp, #4
   4aac4:	sub	sp, sp, #16
   4aac8:	str	r0, [fp, #-8]
   4aacc:	str	r1, [fp, #-12]
   4aad0:	str	r2, [fp, #-16]
   4aad4:	str	r3, [fp, #-20]	; 0xffffffec
   4aad8:	ldr	r3, [fp, #-12]
   4aadc:	cmp	r3, #0
   4aae0:	beq	4ab00 <flatcc_json_printer_embedded_struct_field@@Base+0x44>
   4aae4:	ldr	r3, [fp, #-8]
   4aae8:	ldr	r3, [r3, #20]
   4aaec:	add	r1, r3, #1
   4aaf0:	ldr	r2, [fp, #-8]
   4aaf4:	str	r1, [r2, #20]
   4aaf8:	mov	r2, #44	; 0x2c
   4aafc:	strb	r2, [r3]
   4ab00:	ldr	r3, [fp, #8]
   4ab04:	mov	r2, r3
   4ab08:	ldr	r1, [fp, #4]
   4ab0c:	ldr	r0, [fp, #-8]
   4ab10:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4ab14:	ldr	r3, [fp, #-8]
   4ab18:	ldr	r3, [r3, #32]
   4ab1c:	add	r2, r3, #1
   4ab20:	ldr	r3, [fp, #-8]
   4ab24:	str	r2, [r3, #32]
   4ab28:	ldr	r3, [fp, #-8]
   4ab2c:	ldr	r3, [r3, #20]
   4ab30:	add	r1, r3, #1
   4ab34:	ldr	r2, [fp, #-8]
   4ab38:	str	r1, [r2, #20]
   4ab3c:	mov	r2, #123	; 0x7b
   4ab40:	strb	r2, [r3]
   4ab44:	ldr	r2, [fp, #-16]
   4ab48:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ab4c:	add	r2, r2, r3
   4ab50:	ldr	r3, [fp, #12]
   4ab54:	mov	r1, r2
   4ab58:	ldr	r0, [fp, #-8]
   4ab5c:	blx	r3
   4ab60:	ldr	r3, [fp, #-8]
   4ab64:	ldrb	r3, [r3, #25]
   4ab68:	cmp	r3, #0
   4ab6c:	beq	4aba8 <flatcc_json_printer_embedded_struct_field@@Base+0xec>
   4ab70:	ldr	r3, [fp, #-8]
   4ab74:	ldr	r3, [r3, #20]
   4ab78:	add	r1, r3, #1
   4ab7c:	ldr	r2, [fp, #-8]
   4ab80:	str	r1, [r2, #20]
   4ab84:	mov	r2, #10
   4ab88:	strb	r2, [r3]
   4ab8c:	ldr	r3, [fp, #-8]
   4ab90:	ldr	r3, [r3, #32]
   4ab94:	sub	r2, r3, #1
   4ab98:	ldr	r3, [fp, #-8]
   4ab9c:	str	r2, [r3, #32]
   4aba0:	ldr	r0, [fp, #-8]
   4aba4:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4aba8:	ldr	r3, [fp, #-8]
   4abac:	ldr	r3, [r3, #20]
   4abb0:	add	r1, r3, #1
   4abb4:	ldr	r2, [fp, #-8]
   4abb8:	str	r1, [r2, #20]
   4abbc:	mov	r2, #125	; 0x7d
   4abc0:	strb	r2, [r3]
   4abc4:	nop			; (mov r0, r0)
   4abc8:	sub	sp, fp, #4
   4abcc:	pop	{fp, pc}

0004abd0 <flatcc_json_printer_struct_field@@Base>:
   4abd0:	push	{fp, lr}
   4abd4:	add	fp, sp, #4
   4abd8:	sub	sp, sp, #24
   4abdc:	str	r0, [fp, #-16]
   4abe0:	str	r1, [fp, #-20]	; 0xffffffec
   4abe4:	str	r2, [fp, #-24]	; 0xffffffe8
   4abe8:	str	r3, [fp, #-28]	; 0xffffffe4
   4abec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4abf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   4abf4:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4abf8:	str	r0, [fp, #-8]
   4abfc:	ldr	r3, [fp, #-8]
   4ac00:	cmp	r3, #0
   4ac04:	beq	4acf8 <flatcc_json_printer_struct_field@@Base+0x128>
   4ac08:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ac0c:	ldr	r3, [r3, #16]
   4ac10:	add	r1, r3, #1
   4ac14:	ldr	r2, [fp, #-20]	; 0xffffffec
   4ac18:	str	r1, [r2, #16]
   4ac1c:	cmp	r3, #0
   4ac20:	beq	4ac40 <flatcc_json_printer_struct_field@@Base+0x70>
   4ac24:	ldr	r3, [fp, #-16]
   4ac28:	ldr	r3, [r3, #20]
   4ac2c:	add	r1, r3, #1
   4ac30:	ldr	r2, [fp, #-16]
   4ac34:	str	r1, [r2, #20]
   4ac38:	mov	r2, #44	; 0x2c
   4ac3c:	strb	r2, [r3]
   4ac40:	ldr	r3, [fp, #4]
   4ac44:	mov	r2, r3
   4ac48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4ac4c:	ldr	r0, [fp, #-16]
   4ac50:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4ac54:	ldr	r3, [fp, #-16]
   4ac58:	ldr	r3, [r3, #32]
   4ac5c:	add	r2, r3, #1
   4ac60:	ldr	r3, [fp, #-16]
   4ac64:	str	r2, [r3, #32]
   4ac68:	ldr	r3, [fp, #-16]
   4ac6c:	ldr	r3, [r3, #20]
   4ac70:	add	r1, r3, #1
   4ac74:	ldr	r2, [fp, #-16]
   4ac78:	str	r1, [r2, #20]
   4ac7c:	mov	r2, #123	; 0x7b
   4ac80:	strb	r2, [r3]
   4ac84:	ldr	r3, [fp, #8]
   4ac88:	ldr	r1, [fp, #-8]
   4ac8c:	ldr	r0, [fp, #-16]
   4ac90:	blx	r3
   4ac94:	ldr	r3, [fp, #-16]
   4ac98:	ldrb	r3, [r3, #25]
   4ac9c:	cmp	r3, #0
   4aca0:	beq	4acdc <flatcc_json_printer_struct_field@@Base+0x10c>
   4aca4:	ldr	r3, [fp, #-16]
   4aca8:	ldr	r3, [r3, #20]
   4acac:	add	r1, r3, #1
   4acb0:	ldr	r2, [fp, #-16]
   4acb4:	str	r1, [r2, #20]
   4acb8:	mov	r2, #10
   4acbc:	strb	r2, [r3]
   4acc0:	ldr	r3, [fp, #-16]
   4acc4:	ldr	r3, [r3, #32]
   4acc8:	sub	r2, r3, #1
   4accc:	ldr	r3, [fp, #-16]
   4acd0:	str	r2, [r3, #32]
   4acd4:	ldr	r0, [fp, #-16]
   4acd8:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4acdc:	ldr	r3, [fp, #-16]
   4ace0:	ldr	r3, [r3, #20]
   4ace4:	add	r1, r3, #1
   4ace8:	ldr	r2, [fp, #-16]
   4acec:	str	r1, [r2, #20]
   4acf0:	mov	r2, #125	; 0x7d
   4acf4:	strb	r2, [r3]
   4acf8:	nop			; (mov r0, r0)
   4acfc:	sub	sp, fp, #4
   4ad00:	pop	{fp, pc}
   4ad04:	push	{fp, lr}
   4ad08:	add	fp, sp, #4
   4ad0c:	sub	sp, sp, #24
   4ad10:	str	r0, [fp, #-16]
   4ad14:	str	r1, [fp, #-20]	; 0xffffffec
   4ad18:	str	r2, [fp, #-24]	; 0xffffffe8
   4ad1c:	str	r3, [fp, #-28]	; 0xffffffe4
   4ad20:	mov	r3, #0
   4ad24:	str	r3, [fp, #-12]
   4ad28:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ad2c:	cmp	r3, #0
   4ad30:	beq	4ad40 <flatcc_json_printer_struct_field@@Base+0x170>
   4ad34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ad38:	cmp	r3, #7
   4ad3c:	bhi	4ad6c <flatcc_json_printer_struct_field@@Base+0x19c>
   4ad40:	mov	r1, #1
   4ad44:	ldr	r0, [fp, #-16]
   4ad48:	bl	3e270 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4ad4c:	ldr	r3, [pc, #184]	; 4ae0c <flatcc_json_printer_struct_field@@Base+0x23c>
   4ad50:	add	r3, pc, r3
   4ad54:	ldr	r2, [pc, #180]	; 4ae10 <flatcc_json_printer_struct_field@@Base+0x240>
   4ad58:	ldr	r1, [pc, #180]	; 4ae14 <flatcc_json_printer_struct_field@@Base+0x244>
   4ad5c:	add	r1, pc, r1
   4ad60:	ldr	r0, [pc, #176]	; 4ae18 <flatcc_json_printer_struct_field@@Base+0x248>
   4ad64:	add	r0, pc, r0
   4ad68:	bl	14610 <__assert_fail@plt>
   4ad6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ad70:	cmp	r3, #0
   4ad74:	beq	4adfc <flatcc_json_printer_struct_field@@Base+0x22c>
   4ad78:	sub	r3, fp, #12
   4ad7c:	mov	r2, #4
   4ad80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4ad84:	mov	r0, r3
   4ad88:	bl	145c8 <strncpy@plt>
   4ad8c:	ldr	r3, [fp, #-12]
   4ad90:	mov	r0, r3
   4ad94:	bl	3e21c <flatcc_json_parser_struct_as_root@@Base+0x698>
   4ad98:	mov	r3, r0
   4ad9c:	str	r3, [fp, #-12]
   4ada0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ada4:	add	r3, r3, #4
   4ada8:	mov	r0, r3
   4adac:	bl	3e240 <flatcc_json_parser_struct_as_root@@Base+0x6bc>
   4adb0:	str	r0, [fp, #-8]
   4adb4:	ldr	r3, [fp, #-12]
   4adb8:	cmp	r3, #0
   4adbc:	beq	4adfc <flatcc_json_printer_struct_field@@Base+0x22c>
   4adc0:	ldr	r3, [fp, #-12]
   4adc4:	ldr	r2, [fp, #-8]
   4adc8:	cmp	r2, r3
   4adcc:	beq	4adfc <flatcc_json_printer_struct_field@@Base+0x22c>
   4add0:	mov	r1, #1
   4add4:	ldr	r0, [fp, #-16]
   4add8:	bl	3e270 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4addc:	ldr	r3, [pc, #56]	; 4ae1c <flatcc_json_printer_struct_field@@Base+0x24c>
   4ade0:	add	r3, pc, r3
   4ade4:	ldr	r2, [pc, #52]	; 4ae20 <flatcc_json_printer_struct_field@@Base+0x250>
   4ade8:	ldr	r1, [pc, #52]	; 4ae24 <flatcc_json_printer_struct_field@@Base+0x254>
   4adec:	add	r1, pc, r1
   4adf0:	ldr	r0, [pc, #48]	; 4ae28 <flatcc_json_printer_struct_field@@Base+0x258>
   4adf4:	add	r0, pc, r0
   4adf8:	bl	14610 <__assert_fail@plt>
   4adfc:	mov	r3, #1
   4ae00:	mov	r0, r3
   4ae04:	sub	sp, fp, #4
   4ae08:	pop	{fp, pc}
   4ae0c:	andeq	r8, r0, r4, ror r7
   4ae10:	strdeq	r0, [r0], -fp
   4ae14:	muleq	r0, ip, r1
   4ae18:	andeq	r8, r0, r4, lsr #4
   4ae1c:	andeq	r8, r0, r4, ror #13
   4ae20:	andeq	r0, r0, r4, lsl #8
   4ae24:	andeq	r8, r0, ip, lsl #2
   4ae28:			; <UNDEFINED> instruction: 0x000081b4

0004ae2c <flatcc_json_printer_struct_as_root@@Base>:
   4ae2c:	push	{fp, lr}
   4ae30:	add	fp, sp, #4
   4ae34:	sub	sp, sp, #16
   4ae38:	str	r0, [fp, #-8]
   4ae3c:	str	r1, [fp, #-12]
   4ae40:	str	r2, [fp, #-16]
   4ae44:	str	r3, [fp, #-20]	; 0xffffffec
   4ae48:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ae4c:	ldr	r2, [fp, #-16]
   4ae50:	ldr	r1, [fp, #-12]
   4ae54:	ldr	r0, [fp, #-8]
   4ae58:	bl	4ad04 <flatcc_json_printer_struct_field@@Base+0x134>
   4ae5c:	mov	r3, r0
   4ae60:	cmp	r3, #0
   4ae64:	bne	4ae70 <flatcc_json_printer_struct_as_root@@Base+0x44>
   4ae68:	mvn	r3, #0
   4ae6c:	b	4afb0 <flatcc_json_printer_struct_as_root@@Base+0x184>
   4ae70:	ldr	r3, [fp, #-8]
   4ae74:	ldr	r3, [r3, #32]
   4ae78:	add	r2, r3, #1
   4ae7c:	ldr	r3, [fp, #-8]
   4ae80:	str	r2, [r3, #32]
   4ae84:	ldr	r3, [fp, #-8]
   4ae88:	ldr	r3, [r3, #20]
   4ae8c:	add	r1, r3, #1
   4ae90:	ldr	r2, [fp, #-8]
   4ae94:	str	r1, [r2, #20]
   4ae98:	mov	r2, #123	; 0x7b
   4ae9c:	strb	r2, [r3]
   4aea0:	ldr	r0, [fp, #-12]
   4aea4:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4aea8:	mov	r2, r0
   4aeac:	ldr	r3, [fp, #4]
   4aeb0:	mov	r1, r2
   4aeb4:	ldr	r0, [fp, #-8]
   4aeb8:	blx	r3
   4aebc:	ldr	r3, [fp, #-8]
   4aec0:	ldrb	r3, [r3, #25]
   4aec4:	cmp	r3, #0
   4aec8:	beq	4af04 <flatcc_json_printer_struct_as_root@@Base+0xd8>
   4aecc:	ldr	r3, [fp, #-8]
   4aed0:	ldr	r3, [r3, #20]
   4aed4:	add	r1, r3, #1
   4aed8:	ldr	r2, [fp, #-8]
   4aedc:	str	r1, [r2, #20]
   4aee0:	mov	r2, #10
   4aee4:	strb	r2, [r3]
   4aee8:	ldr	r3, [fp, #-8]
   4aeec:	ldr	r3, [r3, #32]
   4aef0:	sub	r2, r3, #1
   4aef4:	ldr	r3, [fp, #-8]
   4aef8:	str	r2, [r3, #32]
   4aefc:	ldr	r0, [fp, #-8]
   4af00:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4af04:	ldr	r3, [fp, #-8]
   4af08:	ldr	r3, [r3, #20]
   4af0c:	add	r1, r3, #1
   4af10:	ldr	r2, [fp, #-8]
   4af14:	str	r1, [r2, #20]
   4af18:	mov	r2, #125	; 0x7d
   4af1c:	strb	r2, [r3]
   4af20:	ldr	r3, [fp, #-8]
   4af24:	ldrb	r3, [r3, #25]
   4af28:	cmp	r3, #0
   4af2c:	beq	4af5c <flatcc_json_printer_struct_as_root@@Base+0x130>
   4af30:	ldr	r3, [fp, #-8]
   4af34:	ldr	r3, [r3, #32]
   4af38:	cmp	r3, #0
   4af3c:	bne	4af5c <flatcc_json_printer_struct_as_root@@Base+0x130>
   4af40:	ldr	r3, [fp, #-8]
   4af44:	ldr	r3, [r3, #20]
   4af48:	add	r1, r3, #1
   4af4c:	ldr	r2, [fp, #-8]
   4af50:	str	r1, [r2, #20]
   4af54:	mov	r2, #10
   4af58:	strb	r2, [r3]
   4af5c:	ldr	r3, [fp, #-8]
   4af60:	ldr	r3, [r3, #44]	; 0x2c
   4af64:	mov	r1, #1
   4af68:	ldr	r0, [fp, #-8]
   4af6c:	blx	r3
   4af70:	ldr	r0, [fp, #-8]
   4af74:	bl	3e2b0 <flatcc_json_parser_struct_as_root@@Base+0x72c>
   4af78:	mov	r3, r0
   4af7c:	cmp	r3, #0
   4af80:	bne	4afac <flatcc_json_printer_struct_as_root@@Base+0x180>
   4af84:	ldr	r3, [fp, #-8]
   4af88:	ldr	r3, [r3, #12]
   4af8c:	ldr	r2, [fp, #-8]
   4af90:	ldr	r2, [r2, #20]
   4af94:	mov	r1, r2
   4af98:	ldr	r2, [fp, #-8]
   4af9c:	ldr	r2, [r2]
   4afa0:	sub	r2, r1, r2
   4afa4:	add	r3, r3, r2
   4afa8:	b	4afb0 <flatcc_json_printer_struct_as_root@@Base+0x184>
   4afac:	mvn	r3, #0
   4afb0:	mov	r0, r3
   4afb4:	sub	sp, fp, #4
   4afb8:	pop	{fp, pc}

0004afbc <flatcc_json_printer_table_as_root@@Base>:
   4afbc:	push	{fp, lr}
   4afc0:	add	fp, sp, #4
   4afc4:	sub	sp, sp, #16
   4afc8:	str	r0, [fp, #-8]
   4afcc:	str	r1, [fp, #-12]
   4afd0:	str	r2, [fp, #-16]
   4afd4:	str	r3, [fp, #-20]	; 0xffffffec
   4afd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4afdc:	ldr	r2, [fp, #-16]
   4afe0:	ldr	r1, [fp, #-12]
   4afe4:	ldr	r0, [fp, #-8]
   4afe8:	bl	4ad04 <flatcc_json_printer_struct_field@@Base+0x134>
   4afec:	mov	r3, r0
   4aff0:	cmp	r3, #0
   4aff4:	bne	4b000 <flatcc_json_printer_table_as_root@@Base+0x44>
   4aff8:	mvn	r3, #0
   4affc:	b	4b0ac <flatcc_json_printer_table_as_root@@Base+0xf0>
   4b000:	ldr	r0, [fp, #-12]
   4b004:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4b008:	mov	r1, r0
   4b00c:	ldr	r3, [fp, #4]
   4b010:	mov	r2, #100	; 0x64
   4b014:	ldr	r0, [fp, #-8]
   4b018:	bl	438b8 <flatcc_json_printer_enum_flag@@Base+0xbc>
   4b01c:	ldr	r3, [fp, #-8]
   4b020:	ldrb	r3, [r3, #25]
   4b024:	cmp	r3, #0
   4b028:	beq	4b058 <flatcc_json_printer_table_as_root@@Base+0x9c>
   4b02c:	ldr	r3, [fp, #-8]
   4b030:	ldr	r3, [r3, #32]
   4b034:	cmp	r3, #0
   4b038:	bne	4b058 <flatcc_json_printer_table_as_root@@Base+0x9c>
   4b03c:	ldr	r3, [fp, #-8]
   4b040:	ldr	r3, [r3, #20]
   4b044:	add	r1, r3, #1
   4b048:	ldr	r2, [fp, #-8]
   4b04c:	str	r1, [r2, #20]
   4b050:	mov	r2, #10
   4b054:	strb	r2, [r3]
   4b058:	ldr	r3, [fp, #-8]
   4b05c:	ldr	r3, [r3, #44]	; 0x2c
   4b060:	mov	r1, #1
   4b064:	ldr	r0, [fp, #-8]
   4b068:	blx	r3
   4b06c:	ldr	r0, [fp, #-8]
   4b070:	bl	3e2b0 <flatcc_json_parser_struct_as_root@@Base+0x72c>
   4b074:	mov	r3, r0
   4b078:	cmp	r3, #0
   4b07c:	bne	4b0a8 <flatcc_json_printer_table_as_root@@Base+0xec>
   4b080:	ldr	r3, [fp, #-8]
   4b084:	ldr	r3, [r3, #12]
   4b088:	ldr	r2, [fp, #-8]
   4b08c:	ldr	r2, [r2, #20]
   4b090:	mov	r1, r2
   4b094:	ldr	r2, [fp, #-8]
   4b098:	ldr	r2, [r2]
   4b09c:	sub	r2, r1, r2
   4b0a0:	add	r3, r3, r2
   4b0a4:	b	4b0ac <flatcc_json_printer_table_as_root@@Base+0xf0>
   4b0a8:	mvn	r3, #0
   4b0ac:	mov	r0, r3
   4b0b0:	sub	sp, fp, #4
   4b0b4:	pop	{fp, pc}

0004b0b8 <flatcc_json_printer_struct_as_nested_root@@Base>:
   4b0b8:	push	{fp, lr}
   4b0bc:	add	fp, sp, #4
   4b0c0:	sub	sp, sp, #24
   4b0c4:	str	r0, [fp, #-16]
   4b0c8:	str	r1, [fp, #-20]	; 0xffffffec
   4b0cc:	str	r2, [fp, #-24]	; 0xffffffe8
   4b0d0:	str	r3, [fp, #-28]	; 0xffffffe4
   4b0d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b0d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b0dc:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4b0e0:	str	r0, [fp, #-8]
   4b0e4:	ldr	r3, [fp, #-8]
   4b0e8:	cmp	r3, #0
   4b0ec:	beq	4b234 <flatcc_json_printer_struct_as_nested_root@@Base+0x17c>
   4b0f0:	ldr	r0, [fp, #-8]
   4b0f4:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   4b0f8:	mov	r2, r0
   4b0fc:	ldr	r3, [fp, #-8]
   4b100:	add	r3, r2, r3
   4b104:	str	r3, [fp, #-8]
   4b108:	ldr	r0, [fp, #-8]
   4b10c:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   4b110:	str	r0, [fp, #-12]
   4b114:	ldr	r3, [fp, #8]
   4b118:	ldr	r2, [fp, #-12]
   4b11c:	ldr	r1, [fp, #-8]
   4b120:	ldr	r0, [fp, #-16]
   4b124:	bl	4ad04 <flatcc_json_printer_struct_field@@Base+0x134>
   4b128:	mov	r3, r0
   4b12c:	cmp	r3, #0
   4b130:	beq	4b23c <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   4b134:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b138:	ldr	r3, [r3, #16]
   4b13c:	add	r1, r3, #1
   4b140:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b144:	str	r1, [r2, #16]
   4b148:	cmp	r3, #0
   4b14c:	beq	4b16c <flatcc_json_printer_struct_as_nested_root@@Base+0xb4>
   4b150:	ldr	r3, [fp, #-16]
   4b154:	ldr	r3, [r3, #20]
   4b158:	add	r1, r3, #1
   4b15c:	ldr	r2, [fp, #-16]
   4b160:	str	r1, [r2, #20]
   4b164:	mov	r2, #44	; 0x2c
   4b168:	strb	r2, [r3]
   4b16c:	ldr	r3, [fp, #4]
   4b170:	mov	r2, r3
   4b174:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4b178:	ldr	r0, [fp, #-16]
   4b17c:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4b180:	ldr	r3, [fp, #-16]
   4b184:	ldr	r3, [r3, #32]
   4b188:	add	r2, r3, #1
   4b18c:	ldr	r3, [fp, #-16]
   4b190:	str	r2, [r3, #32]
   4b194:	ldr	r3, [fp, #-16]
   4b198:	ldr	r3, [r3, #20]
   4b19c:	add	r1, r3, #1
   4b1a0:	ldr	r2, [fp, #-16]
   4b1a4:	str	r1, [r2, #20]
   4b1a8:	mov	r2, #123	; 0x7b
   4b1ac:	strb	r2, [r3]
   4b1b0:	ldr	r0, [fp, #-8]
   4b1b4:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4b1b8:	mov	r2, r0
   4b1bc:	ldr	r3, [fp, #12]
   4b1c0:	mov	r1, r2
   4b1c4:	ldr	r0, [fp, #-16]
   4b1c8:	blx	r3
   4b1cc:	ldr	r3, [fp, #-16]
   4b1d0:	ldrb	r3, [r3, #25]
   4b1d4:	cmp	r3, #0
   4b1d8:	beq	4b214 <flatcc_json_printer_struct_as_nested_root@@Base+0x15c>
   4b1dc:	ldr	r3, [fp, #-16]
   4b1e0:	ldr	r3, [r3, #20]
   4b1e4:	add	r1, r3, #1
   4b1e8:	ldr	r2, [fp, #-16]
   4b1ec:	str	r1, [r2, #20]
   4b1f0:	mov	r2, #10
   4b1f4:	strb	r2, [r3]
   4b1f8:	ldr	r3, [fp, #-16]
   4b1fc:	ldr	r3, [r3, #32]
   4b200:	sub	r2, r3, #1
   4b204:	ldr	r3, [fp, #-16]
   4b208:	str	r2, [r3, #32]
   4b20c:	ldr	r0, [fp, #-16]
   4b210:	bl	43050 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4b214:	ldr	r3, [fp, #-16]
   4b218:	ldr	r3, [r3, #20]
   4b21c:	add	r1, r3, #1
   4b220:	ldr	r2, [fp, #-16]
   4b224:	str	r1, [r2, #20]
   4b228:	mov	r2, #125	; 0x7d
   4b22c:	strb	r2, [r3]
   4b230:	b	4b240 <flatcc_json_printer_struct_as_nested_root@@Base+0x188>
   4b234:	nop			; (mov r0, r0)
   4b238:	b	4b240 <flatcc_json_printer_struct_as_nested_root@@Base+0x188>
   4b23c:	nop			; (mov r0, r0)
   4b240:	sub	sp, fp, #4
   4b244:	pop	{fp, pc}

0004b248 <flatcc_json_printer_table_as_nested_root@@Base>:
   4b248:	push	{fp, lr}
   4b24c:	add	fp, sp, #4
   4b250:	sub	sp, sp, #24
   4b254:	str	r0, [fp, #-16]
   4b258:	str	r1, [fp, #-20]	; 0xffffffec
   4b25c:	str	r2, [fp, #-24]	; 0xffffffe8
   4b260:	str	r3, [fp, #-28]	; 0xffffffe4
   4b264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4b268:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b26c:	bl	42678 <flatcc_json_printer_error_string@@Base+0xf4>
   4b270:	str	r0, [fp, #-8]
   4b274:	ldr	r3, [fp, #-8]
   4b278:	cmp	r3, #0
   4b27c:	beq	4b340 <flatcc_json_printer_table_as_nested_root@@Base+0xf8>
   4b280:	ldr	r0, [fp, #-8]
   4b284:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   4b288:	mov	r2, r0
   4b28c:	ldr	r3, [fp, #-8]
   4b290:	add	r3, r2, r3
   4b294:	str	r3, [fp, #-8]
   4b298:	ldr	r0, [fp, #-8]
   4b29c:	bl	3e0c4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   4b2a0:	str	r0, [fp, #-12]
   4b2a4:	ldr	r3, [fp, #-8]
   4b2a8:	add	r3, r3, #4
   4b2ac:	str	r3, [fp, #-8]
   4b2b0:	ldr	r3, [fp, #8]
   4b2b4:	ldr	r2, [fp, #-12]
   4b2b8:	ldr	r1, [fp, #-8]
   4b2bc:	ldr	r0, [fp, #-16]
   4b2c0:	bl	4ad04 <flatcc_json_printer_struct_field@@Base+0x134>
   4b2c4:	mov	r3, r0
   4b2c8:	cmp	r3, #0
   4b2cc:	beq	4b348 <flatcc_json_printer_table_as_nested_root@@Base+0x100>
   4b2d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b2d4:	ldr	r3, [r3, #16]
   4b2d8:	add	r1, r3, #1
   4b2dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b2e0:	str	r1, [r2, #16]
   4b2e4:	cmp	r3, #0
   4b2e8:	beq	4b308 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
   4b2ec:	ldr	r3, [fp, #-16]
   4b2f0:	ldr	r3, [r3, #20]
   4b2f4:	add	r1, r3, #1
   4b2f8:	ldr	r2, [fp, #-16]
   4b2fc:	str	r1, [r2, #20]
   4b300:	mov	r2, #44	; 0x2c
   4b304:	strb	r2, [r3]
   4b308:	ldr	r3, [fp, #4]
   4b30c:	mov	r2, r3
   4b310:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4b314:	ldr	r0, [fp, #-16]
   4b318:	bl	43360 <flatcc_json_printer_get_level@@Base+0x128>
   4b31c:	ldr	r0, [fp, #-8]
   4b320:	bl	42610 <flatcc_json_printer_error_string@@Base+0x8c>
   4b324:	mov	r1, r0
   4b328:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b32c:	ldr	r2, [r3, #12]
   4b330:	ldr	r3, [fp, #12]
   4b334:	ldr	r0, [fp, #-16]
   4b338:	bl	438b8 <flatcc_json_printer_enum_flag@@Base+0xbc>
   4b33c:	b	4b34c <flatcc_json_printer_table_as_nested_root@@Base+0x104>
   4b340:	nop			; (mov r0, r0)
   4b344:	b	4b34c <flatcc_json_printer_table_as_nested_root@@Base+0x104>
   4b348:	nop			; (mov r0, r0)
   4b34c:	sub	sp, fp, #4
   4b350:	pop	{fp, pc}
   4b354:	push	{fp, lr}
   4b358:	add	fp, sp, #4
   4b35c:	sub	sp, sp, #16
   4b360:	str	r0, [fp, #-16]
   4b364:	str	r1, [fp, #-20]	; 0xffffffec
   4b368:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b36c:	cmp	r3, #0
   4b370:	bne	4b428 <flatcc_json_printer_table_as_nested_root@@Base+0x1e0>
   4b374:	ldr	r3, [fp, #-16]
   4b378:	ldr	r2, [r3, #20]
   4b37c:	ldr	r3, [fp, #-16]
   4b380:	ldr	r3, [r3, #16]
   4b384:	cmp	r2, r3
   4b388:	bcc	4b428 <flatcc_json_printer_table_as_nested_root@@Base+0x1e0>
   4b38c:	ldr	r3, [fp, #-16]
   4b390:	ldr	r3, [r3, #20]
   4b394:	mov	r2, r3
   4b398:	ldr	r3, [fp, #-16]
   4b39c:	ldr	r3, [r3, #16]
   4b3a0:	sub	r3, r2, r3
   4b3a4:	str	r3, [fp, #-8]
   4b3a8:	ldr	r3, [fp, #-16]
   4b3ac:	ldr	r0, [r3]
   4b3b0:	ldr	r3, [fp, #-16]
   4b3b4:	ldr	r1, [r3, #8]
   4b3b8:	ldr	r3, [fp, #-16]
   4b3bc:	ldr	r3, [r3, #40]	; 0x28
   4b3c0:	mov	r2, #1
   4b3c4:	bl	14568 <fwrite@plt>
   4b3c8:	ldr	r3, [fp, #-16]
   4b3cc:	ldr	r0, [r3]
   4b3d0:	ldr	r3, [fp, #-16]
   4b3d4:	ldr	r2, [r3]
   4b3d8:	ldr	r3, [fp, #-16]
   4b3dc:	ldr	r3, [r3, #8]
   4b3e0:	add	r3, r2, r3
   4b3e4:	ldr	r2, [fp, #-8]
   4b3e8:	mov	r1, r3
   4b3ec:	bl	14544 <memcpy@plt>
   4b3f0:	ldr	r3, [fp, #-16]
   4b3f4:	ldr	r2, [r3]
   4b3f8:	ldr	r3, [fp, #-8]
   4b3fc:	add	r2, r2, r3
   4b400:	ldr	r3, [fp, #-16]
   4b404:	str	r2, [r3, #20]
   4b408:	ldr	r3, [fp, #-16]
   4b40c:	ldr	r2, [r3, #12]
   4b410:	ldr	r3, [fp, #-16]
   4b414:	ldr	r3, [r3, #8]
   4b418:	add	r2, r2, r3
   4b41c:	ldr	r3, [fp, #-16]
   4b420:	str	r2, [r3, #12]
   4b424:	b	4b488 <flatcc_json_printer_table_as_nested_root@@Base+0x240>
   4b428:	ldr	r3, [fp, #-16]
   4b42c:	ldr	r3, [r3, #20]
   4b430:	mov	r2, r3
   4b434:	ldr	r3, [fp, #-16]
   4b438:	ldr	r3, [r3]
   4b43c:	sub	r3, r2, r3
   4b440:	str	r3, [fp, #-12]
   4b444:	ldr	r3, [fp, #-16]
   4b448:	ldr	r0, [r3]
   4b44c:	ldr	r3, [fp, #-16]
   4b450:	ldr	r3, [r3, #40]	; 0x28
   4b454:	mov	r2, #1
   4b458:	ldr	r1, [fp, #-12]
   4b45c:	bl	14568 <fwrite@plt>
   4b460:	ldr	r3, [fp, #-16]
   4b464:	ldr	r2, [r3]
   4b468:	ldr	r3, [fp, #-16]
   4b46c:	str	r2, [r3, #20]
   4b470:	ldr	r3, [fp, #-16]
   4b474:	ldr	r2, [r3, #12]
   4b478:	ldr	r3, [fp, #-12]
   4b47c:	add	r2, r2, r3
   4b480:	ldr	r3, [fp, #-16]
   4b484:	str	r2, [r3, #12]
   4b488:	ldr	r3, [fp, #-16]
   4b48c:	ldr	r3, [r3, #20]
   4b490:	mov	r2, #0
   4b494:	strb	r2, [r3]
   4b498:	nop			; (mov r0, r0)
   4b49c:	sub	sp, fp, #4
   4b4a0:	pop	{fp, pc}

0004b4a4 <flatcc_json_printer_init@@Base>:
   4b4a4:	push	{r4, fp, lr}
   4b4a8:	add	fp, sp, #8
   4b4ac:	sub	sp, sp, #12
   4b4b0:	str	r0, [fp, #-16]
   4b4b4:	str	r1, [fp, #-20]	; 0xffffffec
   4b4b8:	ldr	r4, [pc, #276]	; 4b5d4 <flatcc_json_printer_init@@Base+0x130>
   4b4bc:	add	r4, pc, r4
   4b4c0:	mov	r2, #48	; 0x30
   4b4c4:	mov	r1, #0
   4b4c8:	ldr	r0, [fp, #-16]
   4b4cc:	bl	145bc <memset@plt>
   4b4d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b4d4:	cmp	r3, #0
   4b4d8:	beq	4b4e4 <flatcc_json_printer_init@@Base+0x40>
   4b4dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b4e0:	b	4b4f0 <flatcc_json_printer_init@@Base+0x4c>
   4b4e4:	ldr	r3, [pc, #236]	; 4b5d8 <flatcc_json_printer_init@@Base+0x134>
   4b4e8:	ldr	r3, [r4, r3]
   4b4ec:	ldr	r3, [r3]
   4b4f0:	ldr	r2, [fp, #-16]
   4b4f4:	str	r3, [r2, #40]	; 0x28
   4b4f8:	ldr	r3, [fp, #-16]
   4b4fc:	ldr	r2, [pc, #216]	; 4b5dc <flatcc_json_printer_init@@Base+0x138>
   4b500:	add	r2, pc, r2
   4b504:	str	r2, [r3, #44]	; 0x2c
   4b508:	ldr	r0, [pc, #208]	; 4b5e0 <flatcc_json_printer_init@@Base+0x13c>
   4b50c:	bl	14574 <malloc@plt>
   4b510:	mov	r3, r0
   4b514:	mov	r2, r3
   4b518:	ldr	r3, [fp, #-16]
   4b51c:	str	r2, [r3]
   4b520:	ldr	r3, [fp, #-16]
   4b524:	ldr	r3, [r3]
   4b528:	cmp	r3, #0
   4b52c:	bne	4b538 <flatcc_json_printer_init@@Base+0x94>
   4b530:	mvn	r3, #0
   4b534:	b	4b5c8 <flatcc_json_printer_init@@Base+0x124>
   4b538:	ldr	r3, [fp, #-16]
   4b53c:	mov	r2, #1
   4b540:	strb	r2, [r3, #24]
   4b544:	ldr	r3, [fp, #-16]
   4b548:	ldr	r2, [pc, #144]	; 4b5e0 <flatcc_json_printer_init@@Base+0x13c>
   4b54c:	str	r2, [r3, #4]
   4b550:	ldr	r3, [fp, #-16]
   4b554:	mov	r2, #16384	; 0x4000
   4b558:	str	r2, [r3, #8]
   4b55c:	ldr	r3, [fp, #-16]
   4b560:	ldr	r2, [r3]
   4b564:	ldr	r3, [fp, #-16]
   4b568:	str	r2, [r3, #20]
   4b56c:	ldr	r3, [fp, #-16]
   4b570:	ldr	r2, [r3]
   4b574:	ldr	r3, [fp, #-16]
   4b578:	ldr	r3, [r3, #8]
   4b57c:	add	r2, r2, r3
   4b580:	ldr	r3, [fp, #-16]
   4b584:	str	r2, [r3, #16]
   4b588:	ldr	r3, [fp, #-16]
   4b58c:	ldr	r3, [r3, #8]
   4b590:	add	r2, r3, #64	; 0x40
   4b594:	ldr	r3, [fp, #-16]
   4b598:	ldr	r3, [r3, #4]
   4b59c:	cmp	r2, r3
   4b5a0:	bls	4b5c4 <flatcc_json_printer_init@@Base+0x120>
   4b5a4:	ldr	r3, [pc, #56]	; 4b5e4 <flatcc_json_printer_init@@Base+0x140>
   4b5a8:	add	r3, pc, r3
   4b5ac:	ldr	r2, [pc, #52]	; 4b5e8 <flatcc_json_printer_init@@Base+0x144>
   4b5b0:	ldr	r1, [pc, #52]	; 4b5ec <flatcc_json_printer_init@@Base+0x148>
   4b5b4:	add	r1, pc, r1
   4b5b8:	ldr	r0, [pc, #48]	; 4b5f0 <flatcc_json_printer_init@@Base+0x14c>
   4b5bc:	add	r0, pc, r0
   4b5c0:	bl	14610 <__assert_fail@plt>
   4b5c4:	mov	r3, #0
   4b5c8:	mov	r0, r3
   4b5cc:	sub	sp, fp, #8
   4b5d0:	pop	{r4, fp, pc}
   4b5d4:	andeq	r8, r1, ip, lsr fp
   4b5d8:	andeq	r0, r0, r4, ror r0
   4b5dc:			; <UNDEFINED> instruction: 0xfffffe4c
   4b5e0:	andeq	r4, r0, r0, asr #32
   4b5e4:	andeq	r7, r0, ip, lsr #30
   4b5e8:	andeq	r0, r0, fp, ror r4
   4b5ec:	andeq	r7, r0, r4, asr #18
   4b5f0:	andeq	r7, r0, r8, lsl #20
   4b5f4:	push	{fp, lr}
   4b5f8:	add	fp, sp, #4
   4b5fc:	sub	sp, sp, #8
   4b600:	str	r0, [fp, #-8]
   4b604:	str	r1, [fp, #-12]
   4b608:	ldr	r3, [fp, #-8]
   4b60c:	ldr	r2, [r3, #20]
   4b610:	ldr	r3, [fp, #-8]
   4b614:	ldr	r3, [r3, #16]
   4b618:	cmp	r2, r3
   4b61c:	bcc	4b668 <flatcc_json_printer_init@@Base+0x1c4>
   4b620:	mov	r1, #3
   4b624:	ldr	r0, [fp, #-8]
   4b628:	bl	3e270 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4b62c:	ldr	r3, [fp, #-8]
   4b630:	ldr	r3, [r3, #12]
   4b634:	ldr	r2, [fp, #-8]
   4b638:	ldr	r2, [r2, #20]
   4b63c:	mov	r1, r2
   4b640:	ldr	r2, [fp, #-8]
   4b644:	ldr	r2, [r2]
   4b648:	sub	r2, r1, r2
   4b64c:	add	r2, r3, r2
   4b650:	ldr	r3, [fp, #-8]
   4b654:	str	r2, [r3, #12]
   4b658:	ldr	r3, [fp, #-8]
   4b65c:	ldr	r2, [r3]
   4b660:	ldr	r3, [fp, #-8]
   4b664:	str	r2, [r3, #20]
   4b668:	ldr	r3, [fp, #-8]
   4b66c:	ldr	r3, [r3, #20]
   4b670:	mov	r2, #0
   4b674:	strb	r2, [r3]
   4b678:	nop			; (mov r0, r0)
   4b67c:	sub	sp, fp, #4
   4b680:	pop	{fp, pc}

0004b684 <flatcc_json_printer_init_buffer@@Base>:
   4b684:	push	{fp, lr}
   4b688:	add	fp, sp, #4
   4b68c:	sub	sp, sp, #16
   4b690:	str	r0, [fp, #-8]
   4b694:	str	r1, [fp, #-12]
   4b698:	str	r2, [fp, #-16]
   4b69c:	ldr	r3, [fp, #-16]
   4b6a0:	cmp	r3, #63	; 0x3f
   4b6a4:	bhi	4b6c8 <flatcc_json_printer_init_buffer@@Base+0x44>
   4b6a8:	ldr	r3, [pc, #180]	; 4b764 <flatcc_json_printer_init_buffer@@Base+0xe0>
   4b6ac:	add	r3, pc, r3
   4b6b0:	ldr	r2, [pc, #176]	; 4b768 <flatcc_json_printer_init_buffer@@Base+0xe4>
   4b6b4:	ldr	r1, [pc, #176]	; 4b76c <flatcc_json_printer_init_buffer@@Base+0xe8>
   4b6b8:	add	r1, pc, r1
   4b6bc:	ldr	r0, [pc, #172]	; 4b770 <flatcc_json_printer_init_buffer@@Base+0xec>
   4b6c0:	add	r0, pc, r0
   4b6c4:	bl	14610 <__assert_fail@plt>
   4b6c8:	ldr	r3, [fp, #-16]
   4b6cc:	cmp	r3, #63	; 0x3f
   4b6d0:	bhi	4b6dc <flatcc_json_printer_init_buffer@@Base+0x58>
   4b6d4:	mvn	r3, #0
   4b6d8:	b	4b758 <flatcc_json_printer_init_buffer@@Base+0xd4>
   4b6dc:	mov	r2, #48	; 0x30
   4b6e0:	mov	r1, #0
   4b6e4:	ldr	r0, [fp, #-8]
   4b6e8:	bl	145bc <memset@plt>
   4b6ec:	ldr	r3, [fp, #-8]
   4b6f0:	ldr	r2, [fp, #-12]
   4b6f4:	str	r2, [r3]
   4b6f8:	ldr	r3, [fp, #-8]
   4b6fc:	ldr	r2, [fp, #-16]
   4b700:	str	r2, [r3, #4]
   4b704:	ldr	r3, [fp, #-8]
   4b708:	ldr	r3, [r3, #4]
   4b70c:	sub	r2, r3, #64	; 0x40
   4b710:	ldr	r3, [fp, #-8]
   4b714:	str	r2, [r3, #8]
   4b718:	ldr	r3, [fp, #-8]
   4b71c:	ldr	r2, [r3]
   4b720:	ldr	r3, [fp, #-8]
   4b724:	str	r2, [r3, #20]
   4b728:	ldr	r3, [fp, #-8]
   4b72c:	ldr	r2, [r3]
   4b730:	ldr	r3, [fp, #-8]
   4b734:	ldr	r3, [r3, #8]
   4b738:	add	r2, r2, r3
   4b73c:	ldr	r3, [fp, #-8]
   4b740:	str	r2, [r3, #16]
   4b744:	ldr	r3, [fp, #-8]
   4b748:	ldr	r2, [pc, #36]	; 4b774 <flatcc_json_printer_init_buffer@@Base+0xf0>
   4b74c:	add	r2, pc, r2
   4b750:	str	r2, [r3, #44]	; 0x2c
   4b754:	mov	r3, #0
   4b758:	mov	r0, r3
   4b75c:	sub	sp, fp, #4
   4b760:	pop	{fp, pc}
   4b764:	andeq	r7, r0, r4, asr #28
   4b768:	andeq	r0, r0, sp, lsl #9
   4b76c:	andeq	r7, r0, r0, asr #16
   4b770:	andeq	r7, r0, r0, asr #18
   4b774:			; <UNDEFINED> instruction: 0xfffffea0
   4b778:	push	{fp, lr}
   4b77c:	add	fp, sp, #4
   4b780:	sub	sp, sp, #16
   4b784:	str	r0, [fp, #-16]
   4b788:	str	r1, [fp, #-20]	; 0xffffffec
   4b78c:	ldr	r3, [fp, #-16]
   4b790:	ldr	r3, [r3, #20]
   4b794:	mov	r2, r3
   4b798:	ldr	r3, [fp, #-16]
   4b79c:	ldr	r3, [r3]
   4b7a0:	sub	r3, r2, r3
   4b7a4:	str	r3, [fp, #-8]
   4b7a8:	ldr	r3, [fp, #-16]
   4b7ac:	ldr	r3, [r3, #20]
   4b7b0:	mov	r2, #0
   4b7b4:	strb	r2, [r3]
   4b7b8:	ldr	r3, [fp, #-16]
   4b7bc:	ldr	r2, [r3, #20]
   4b7c0:	ldr	r3, [fp, #-16]
   4b7c4:	ldr	r3, [r3, #16]
   4b7c8:	cmp	r2, r3
   4b7cc:	bcc	4b8ac <flatcc_json_printer_init_buffer@@Base+0x228>
   4b7d0:	ldr	r3, [fp, #-16]
   4b7d4:	ldr	r2, [r3]
   4b7d8:	ldr	r3, [fp, #-16]
   4b7dc:	ldr	r3, [r3, #4]
   4b7e0:	lsl	r3, r3, #1
   4b7e4:	mov	r1, r3
   4b7e8:	mov	r0, r2
   4b7ec:	bl	1455c <realloc@plt>
   4b7f0:	str	r0, [fp, #-12]
   4b7f4:	ldr	r3, [fp, #-12]
   4b7f8:	cmp	r3, #0
   4b7fc:	bne	4b838 <flatcc_json_printer_init_buffer@@Base+0x1b4>
   4b800:	mov	r1, #3
   4b804:	ldr	r0, [fp, #-16]
   4b808:	bl	3e270 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4b80c:	ldr	r3, [fp, #-16]
   4b810:	ldr	r2, [r3, #12]
   4b814:	ldr	r3, [fp, #-8]
   4b818:	add	r2, r2, r3
   4b81c:	ldr	r3, [fp, #-16]
   4b820:	str	r2, [r3, #12]
   4b824:	ldr	r3, [fp, #-16]
   4b828:	ldr	r2, [r3]
   4b82c:	ldr	r3, [fp, #-16]
   4b830:	str	r2, [r3, #20]
   4b834:	b	4b898 <flatcc_json_printer_init_buffer@@Base+0x214>
   4b838:	ldr	r3, [fp, #-16]
   4b83c:	ldr	r3, [r3, #4]
   4b840:	lsl	r2, r3, #1
   4b844:	ldr	r3, [fp, #-16]
   4b848:	str	r2, [r3, #4]
   4b84c:	ldr	r3, [fp, #-16]
   4b850:	ldr	r3, [r3, #4]
   4b854:	sub	r2, r3, #64	; 0x40
   4b858:	ldr	r3, [fp, #-16]
   4b85c:	str	r2, [r3, #8]
   4b860:	ldr	r3, [fp, #-16]
   4b864:	ldr	r2, [fp, #-12]
   4b868:	str	r2, [r3]
   4b86c:	ldr	r2, [fp, #-12]
   4b870:	ldr	r3, [fp, #-8]
   4b874:	add	r2, r2, r3
   4b878:	ldr	r3, [fp, #-16]
   4b87c:	str	r2, [r3, #20]
   4b880:	ldr	r3, [fp, #-16]
   4b884:	ldr	r3, [r3, #8]
   4b888:	ldr	r2, [fp, #-12]
   4b88c:	add	r2, r2, r3
   4b890:	ldr	r3, [fp, #-16]
   4b894:	str	r2, [r3, #16]
   4b898:	ldr	r3, [fp, #-16]
   4b89c:	ldr	r3, [r3, #20]
   4b8a0:	mov	r2, #0
   4b8a4:	strb	r2, [r3]
   4b8a8:	b	4b8b0 <flatcc_json_printer_init_buffer@@Base+0x22c>
   4b8ac:	nop			; (mov r0, r0)
   4b8b0:	sub	sp, fp, #4
   4b8b4:	pop	{fp, pc}

0004b8b8 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   4b8b8:	push	{fp, lr}
   4b8bc:	add	fp, sp, #4
   4b8c0:	sub	sp, sp, #8
   4b8c4:	str	r0, [fp, #-8]
   4b8c8:	str	r1, [fp, #-12]
   4b8cc:	ldr	r3, [fp, #-12]
   4b8d0:	cmp	r3, #0
   4b8d4:	bne	4b8e0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   4b8d8:	mov	r3, #4096	; 0x1000
   4b8dc:	str	r3, [fp, #-12]
   4b8e0:	ldr	r3, [fp, #-12]
   4b8e4:	cmp	r3, #63	; 0x3f
   4b8e8:	bhi	4b8f4 <flatcc_json_printer_init_dynamic_buffer@@Base+0x3c>
   4b8ec:	mov	r3, #64	; 0x40
   4b8f0:	str	r3, [fp, #-12]
   4b8f4:	mov	r2, #48	; 0x30
   4b8f8:	mov	r1, #0
   4b8fc:	ldr	r0, [fp, #-8]
   4b900:	bl	145bc <memset@plt>
   4b904:	ldr	r0, [fp, #-12]
   4b908:	bl	14574 <malloc@plt>
   4b90c:	mov	r3, r0
   4b910:	mov	r2, r3
   4b914:	ldr	r3, [fp, #-8]
   4b918:	str	r2, [r3]
   4b91c:	ldr	r3, [fp, #-8]
   4b920:	mov	r2, #1
   4b924:	strb	r2, [r3, #24]
   4b928:	ldr	r3, [fp, #-8]
   4b92c:	ldr	r2, [fp, #-12]
   4b930:	str	r2, [r3, #4]
   4b934:	ldr	r3, [fp, #-8]
   4b938:	ldr	r3, [r3, #4]
   4b93c:	sub	r2, r3, #64	; 0x40
   4b940:	ldr	r3, [fp, #-8]
   4b944:	str	r2, [r3, #8]
   4b948:	ldr	r3, [fp, #-8]
   4b94c:	ldr	r2, [r3]
   4b950:	ldr	r3, [fp, #-8]
   4b954:	str	r2, [r3, #20]
   4b958:	ldr	r3, [fp, #-8]
   4b95c:	ldr	r2, [r3]
   4b960:	ldr	r3, [fp, #-8]
   4b964:	ldr	r3, [r3, #8]
   4b968:	add	r2, r2, r3
   4b96c:	ldr	r3, [fp, #-8]
   4b970:	str	r2, [r3, #16]
   4b974:	ldr	r3, [fp, #-8]
   4b978:	ldr	r2, [pc, #56]	; 4b9b8 <flatcc_json_printer_init_dynamic_buffer@@Base+0x100>
   4b97c:	add	r2, pc, r2
   4b980:	str	r2, [r3, #44]	; 0x2c
   4b984:	ldr	r3, [fp, #-8]
   4b988:	ldr	r3, [r3]
   4b98c:	cmp	r3, #0
   4b990:	bne	4b9a8 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf0>
   4b994:	mov	r1, #3
   4b998:	ldr	r0, [fp, #-8]
   4b99c:	bl	3e270 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4b9a0:	mvn	r3, #0
   4b9a4:	b	4b9ac <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   4b9a8:	mov	r3, #0
   4b9ac:	mov	r0, r3
   4b9b0:	sub	sp, fp, #4
   4b9b4:	pop	{fp, pc}
   4b9b8:			; <UNDEFINED> instruction: 0xfffffdf4

0004b9bc <flatcc_json_printer_get_buffer@@Base>:
   4b9bc:	push	{fp, lr}
   4b9c0:	add	fp, sp, #4
   4b9c4:	sub	sp, sp, #8
   4b9c8:	str	r0, [fp, #-8]
   4b9cc:	str	r1, [fp, #-12]
   4b9d0:	ldr	r3, [fp, #-8]
   4b9d4:	ldr	r3, [r3, #44]	; 0x2c
   4b9d8:	mov	r1, #0
   4b9dc:	ldr	r0, [fp, #-8]
   4b9e0:	blx	r3
   4b9e4:	ldr	r3, [fp, #-12]
   4b9e8:	cmp	r3, #0
   4b9ec:	beq	4ba14 <flatcc_json_printer_get_buffer@@Base+0x58>
   4b9f0:	ldr	r3, [fp, #-8]
   4b9f4:	ldr	r3, [r3, #20]
   4b9f8:	mov	r2, r3
   4b9fc:	ldr	r3, [fp, #-8]
   4ba00:	ldr	r3, [r3]
   4ba04:	sub	r3, r2, r3
   4ba08:	mov	r2, r3
   4ba0c:	ldr	r3, [fp, #-12]
   4ba10:	str	r2, [r3]
   4ba14:	ldr	r3, [fp, #-8]
   4ba18:	ldr	r3, [r3]
   4ba1c:	mov	r0, r3
   4ba20:	sub	sp, fp, #4
   4ba24:	pop	{fp, pc}

0004ba28 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   4ba28:	push	{fp, lr}
   4ba2c:	add	fp, sp, #4
   4ba30:	sub	sp, sp, #16
   4ba34:	str	r0, [fp, #-16]
   4ba38:	str	r1, [fp, #-20]	; 0xffffffec
   4ba3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4ba40:	ldr	r0, [fp, #-16]
   4ba44:	bl	4b9bc <flatcc_json_printer_get_buffer@@Base>
   4ba48:	str	r0, [fp, #-8]
   4ba4c:	mov	r2, #48	; 0x30
   4ba50:	mov	r1, #0
   4ba54:	ldr	r0, [fp, #-16]
   4ba58:	bl	145bc <memset@plt>
   4ba5c:	ldr	r3, [fp, #-8]
   4ba60:	mov	r0, r3
   4ba64:	sub	sp, fp, #4
   4ba68:	pop	{fp, pc}

0004ba6c <flatcc_json_printer_clear@@Base>:
   4ba6c:	push	{fp, lr}
   4ba70:	add	fp, sp, #4
   4ba74:	sub	sp, sp, #8
   4ba78:	str	r0, [fp, #-8]
   4ba7c:	ldr	r3, [fp, #-8]
   4ba80:	ldrb	r3, [r3, #24]
   4ba84:	cmp	r3, #0
   4ba88:	beq	4baac <flatcc_json_printer_clear@@Base+0x40>
   4ba8c:	ldr	r3, [fp, #-8]
   4ba90:	ldr	r3, [r3]
   4ba94:	cmp	r3, #0
   4ba98:	beq	4baac <flatcc_json_printer_clear@@Base+0x40>
   4ba9c:	ldr	r3, [fp, #-8]
   4baa0:	ldr	r3, [r3]
   4baa4:	mov	r0, r3
   4baa8:	bl	14538 <free@plt>
   4baac:	mov	r2, #48	; 0x30
   4bab0:	mov	r1, #0
   4bab4:	ldr	r0, [fp, #-8]
   4bab8:	bl	145bc <memset@plt>
   4babc:	nop			; (mov r0, r0)
   4bac0:	sub	sp, fp, #4
   4bac4:	pop	{fp, pc}
   4bac8:	subs	r2, r1, #1
   4bacc:	bxeq	lr
   4bad0:	bcc	4bca8 <flatcc_json_printer_clear@@Base+0x23c>
   4bad4:	cmp	r0, r1
   4bad8:	bls	4bc8c <flatcc_json_printer_clear@@Base+0x220>
   4badc:	tst	r1, r2
   4bae0:	beq	4bc98 <flatcc_json_printer_clear@@Base+0x22c>
   4bae4:	clz	r3, r0
   4bae8:	clz	r2, r1
   4baec:	sub	r3, r2, r3
   4baf0:	rsbs	r3, r3, #31
   4baf4:	addne	r3, r3, r3, lsl #1
   4baf8:	mov	r2, #0
   4bafc:	addne	pc, pc, r3, lsl #2
   4bb00:	nop			; (mov r0, r0)
   4bb04:	cmp	r0, r1, lsl #31
   4bb08:	adc	r2, r2, r2
   4bb0c:	subcs	r0, r0, r1, lsl #31
   4bb10:	cmp	r0, r1, lsl #30
   4bb14:	adc	r2, r2, r2
   4bb18:	subcs	r0, r0, r1, lsl #30
   4bb1c:	cmp	r0, r1, lsl #29
   4bb20:	adc	r2, r2, r2
   4bb24:	subcs	r0, r0, r1, lsl #29
   4bb28:	cmp	r0, r1, lsl #28
   4bb2c:	adc	r2, r2, r2
   4bb30:	subcs	r0, r0, r1, lsl #28
   4bb34:	cmp	r0, r1, lsl #27
   4bb38:	adc	r2, r2, r2
   4bb3c:	subcs	r0, r0, r1, lsl #27
   4bb40:	cmp	r0, r1, lsl #26
   4bb44:	adc	r2, r2, r2
   4bb48:	subcs	r0, r0, r1, lsl #26
   4bb4c:	cmp	r0, r1, lsl #25
   4bb50:	adc	r2, r2, r2
   4bb54:	subcs	r0, r0, r1, lsl #25
   4bb58:	cmp	r0, r1, lsl #24
   4bb5c:	adc	r2, r2, r2
   4bb60:	subcs	r0, r0, r1, lsl #24
   4bb64:	cmp	r0, r1, lsl #23
   4bb68:	adc	r2, r2, r2
   4bb6c:	subcs	r0, r0, r1, lsl #23
   4bb70:	cmp	r0, r1, lsl #22
   4bb74:	adc	r2, r2, r2
   4bb78:	subcs	r0, r0, r1, lsl #22
   4bb7c:	cmp	r0, r1, lsl #21
   4bb80:	adc	r2, r2, r2
   4bb84:	subcs	r0, r0, r1, lsl #21
   4bb88:	cmp	r0, r1, lsl #20
   4bb8c:	adc	r2, r2, r2
   4bb90:	subcs	r0, r0, r1, lsl #20
   4bb94:	cmp	r0, r1, lsl #19
   4bb98:	adc	r2, r2, r2
   4bb9c:	subcs	r0, r0, r1, lsl #19
   4bba0:	cmp	r0, r1, lsl #18
   4bba4:	adc	r2, r2, r2
   4bba8:	subcs	r0, r0, r1, lsl #18
   4bbac:	cmp	r0, r1, lsl #17
   4bbb0:	adc	r2, r2, r2
   4bbb4:	subcs	r0, r0, r1, lsl #17
   4bbb8:	cmp	r0, r1, lsl #16
   4bbbc:	adc	r2, r2, r2
   4bbc0:	subcs	r0, r0, r1, lsl #16
   4bbc4:	cmp	r0, r1, lsl #15
   4bbc8:	adc	r2, r2, r2
   4bbcc:	subcs	r0, r0, r1, lsl #15
   4bbd0:	cmp	r0, r1, lsl #14
   4bbd4:	adc	r2, r2, r2
   4bbd8:	subcs	r0, r0, r1, lsl #14
   4bbdc:	cmp	r0, r1, lsl #13
   4bbe0:	adc	r2, r2, r2
   4bbe4:	subcs	r0, r0, r1, lsl #13
   4bbe8:	cmp	r0, r1, lsl #12
   4bbec:	adc	r2, r2, r2
   4bbf0:	subcs	r0, r0, r1, lsl #12
   4bbf4:	cmp	r0, r1, lsl #11
   4bbf8:	adc	r2, r2, r2
   4bbfc:	subcs	r0, r0, r1, lsl #11
   4bc00:	cmp	r0, r1, lsl #10
   4bc04:	adc	r2, r2, r2
   4bc08:	subcs	r0, r0, r1, lsl #10
   4bc0c:	cmp	r0, r1, lsl #9
   4bc10:	adc	r2, r2, r2
   4bc14:	subcs	r0, r0, r1, lsl #9
   4bc18:	cmp	r0, r1, lsl #8
   4bc1c:	adc	r2, r2, r2
   4bc20:	subcs	r0, r0, r1, lsl #8
   4bc24:	cmp	r0, r1, lsl #7
   4bc28:	adc	r2, r2, r2
   4bc2c:	subcs	r0, r0, r1, lsl #7
   4bc30:	cmp	r0, r1, lsl #6
   4bc34:	adc	r2, r2, r2
   4bc38:	subcs	r0, r0, r1, lsl #6
   4bc3c:	cmp	r0, r1, lsl #5
   4bc40:	adc	r2, r2, r2
   4bc44:	subcs	r0, r0, r1, lsl #5
   4bc48:	cmp	r0, r1, lsl #4
   4bc4c:	adc	r2, r2, r2
   4bc50:	subcs	r0, r0, r1, lsl #4
   4bc54:	cmp	r0, r1, lsl #3
   4bc58:	adc	r2, r2, r2
   4bc5c:	subcs	r0, r0, r1, lsl #3
   4bc60:	cmp	r0, r1, lsl #2
   4bc64:	adc	r2, r2, r2
   4bc68:	subcs	r0, r0, r1, lsl #2
   4bc6c:	cmp	r0, r1, lsl #1
   4bc70:	adc	r2, r2, r2
   4bc74:	subcs	r0, r0, r1, lsl #1
   4bc78:	cmp	r0, r1
   4bc7c:	adc	r2, r2, r2
   4bc80:	subcs	r0, r0, r1
   4bc84:	mov	r0, r2
   4bc88:	bx	lr
   4bc8c:	moveq	r0, #1
   4bc90:	movne	r0, #0
   4bc94:	bx	lr
   4bc98:	clz	r2, r1
   4bc9c:	rsb	r2, r2, #31
   4bca0:	lsr	r0, r0, r2
   4bca4:	bx	lr
   4bca8:	cmp	r0, #0
   4bcac:	mvnne	r0, #0
   4bcb0:	b	4c558 <flatcc_json_printer_clear@@Base+0xaec>
   4bcb4:	cmp	r1, #0
   4bcb8:	beq	4bca8 <flatcc_json_printer_clear@@Base+0x23c>
   4bcbc:	push	{r0, r1, lr}
   4bcc0:	bl	4bac8 <flatcc_json_printer_clear@@Base+0x5c>
   4bcc4:	pop	{r1, r2, lr}
   4bcc8:	mul	r3, r2, r0
   4bccc:	sub	r1, r1, r3
   4bcd0:	bx	lr
   4bcd4:	cmp	r1, #0
   4bcd8:	beq	4bee4 <flatcc_json_printer_clear@@Base+0x478>
   4bcdc:	eor	ip, r0, r1
   4bce0:	rsbmi	r1, r1, #0
   4bce4:	subs	r2, r1, #1
   4bce8:	beq	4beb0 <flatcc_json_printer_clear@@Base+0x444>
   4bcec:	movs	r3, r0
   4bcf0:	rsbmi	r3, r0, #0
   4bcf4:	cmp	r3, r1
   4bcf8:	bls	4bebc <flatcc_json_printer_clear@@Base+0x450>
   4bcfc:	tst	r1, r2
   4bd00:	beq	4becc <flatcc_json_printer_clear@@Base+0x460>
   4bd04:	clz	r2, r3
   4bd08:	clz	r0, r1
   4bd0c:	sub	r2, r0, r2
   4bd10:	rsbs	r2, r2, #31
   4bd14:	addne	r2, r2, r2, lsl #1
   4bd18:	mov	r0, #0
   4bd1c:	addne	pc, pc, r2, lsl #2
   4bd20:	nop			; (mov r0, r0)
   4bd24:	cmp	r3, r1, lsl #31
   4bd28:	adc	r0, r0, r0
   4bd2c:	subcs	r3, r3, r1, lsl #31
   4bd30:	cmp	r3, r1, lsl #30
   4bd34:	adc	r0, r0, r0
   4bd38:	subcs	r3, r3, r1, lsl #30
   4bd3c:	cmp	r3, r1, lsl #29
   4bd40:	adc	r0, r0, r0
   4bd44:	subcs	r3, r3, r1, lsl #29
   4bd48:	cmp	r3, r1, lsl #28
   4bd4c:	adc	r0, r0, r0
   4bd50:	subcs	r3, r3, r1, lsl #28
   4bd54:	cmp	r3, r1, lsl #27
   4bd58:	adc	r0, r0, r0
   4bd5c:	subcs	r3, r3, r1, lsl #27
   4bd60:	cmp	r3, r1, lsl #26
   4bd64:	adc	r0, r0, r0
   4bd68:	subcs	r3, r3, r1, lsl #26
   4bd6c:	cmp	r3, r1, lsl #25
   4bd70:	adc	r0, r0, r0
   4bd74:	subcs	r3, r3, r1, lsl #25
   4bd78:	cmp	r3, r1, lsl #24
   4bd7c:	adc	r0, r0, r0
   4bd80:	subcs	r3, r3, r1, lsl #24
   4bd84:	cmp	r3, r1, lsl #23
   4bd88:	adc	r0, r0, r0
   4bd8c:	subcs	r3, r3, r1, lsl #23
   4bd90:	cmp	r3, r1, lsl #22
   4bd94:	adc	r0, r0, r0
   4bd98:	subcs	r3, r3, r1, lsl #22
   4bd9c:	cmp	r3, r1, lsl #21
   4bda0:	adc	r0, r0, r0
   4bda4:	subcs	r3, r3, r1, lsl #21
   4bda8:	cmp	r3, r1, lsl #20
   4bdac:	adc	r0, r0, r0
   4bdb0:	subcs	r3, r3, r1, lsl #20
   4bdb4:	cmp	r3, r1, lsl #19
   4bdb8:	adc	r0, r0, r0
   4bdbc:	subcs	r3, r3, r1, lsl #19
   4bdc0:	cmp	r3, r1, lsl #18
   4bdc4:	adc	r0, r0, r0
   4bdc8:	subcs	r3, r3, r1, lsl #18
   4bdcc:	cmp	r3, r1, lsl #17
   4bdd0:	adc	r0, r0, r0
   4bdd4:	subcs	r3, r3, r1, lsl #17
   4bdd8:	cmp	r3, r1, lsl #16
   4bddc:	adc	r0, r0, r0
   4bde0:	subcs	r3, r3, r1, lsl #16
   4bde4:	cmp	r3, r1, lsl #15
   4bde8:	adc	r0, r0, r0
   4bdec:	subcs	r3, r3, r1, lsl #15
   4bdf0:	cmp	r3, r1, lsl #14
   4bdf4:	adc	r0, r0, r0
   4bdf8:	subcs	r3, r3, r1, lsl #14
   4bdfc:	cmp	r3, r1, lsl #13
   4be00:	adc	r0, r0, r0
   4be04:	subcs	r3, r3, r1, lsl #13
   4be08:	cmp	r3, r1, lsl #12
   4be0c:	adc	r0, r0, r0
   4be10:	subcs	r3, r3, r1, lsl #12
   4be14:	cmp	r3, r1, lsl #11
   4be18:	adc	r0, r0, r0
   4be1c:	subcs	r3, r3, r1, lsl #11
   4be20:	cmp	r3, r1, lsl #10
   4be24:	adc	r0, r0, r0
   4be28:	subcs	r3, r3, r1, lsl #10
   4be2c:	cmp	r3, r1, lsl #9
   4be30:	adc	r0, r0, r0
   4be34:	subcs	r3, r3, r1, lsl #9
   4be38:	cmp	r3, r1, lsl #8
   4be3c:	adc	r0, r0, r0
   4be40:	subcs	r3, r3, r1, lsl #8
   4be44:	cmp	r3, r1, lsl #7
   4be48:	adc	r0, r0, r0
   4be4c:	subcs	r3, r3, r1, lsl #7
   4be50:	cmp	r3, r1, lsl #6
   4be54:	adc	r0, r0, r0
   4be58:	subcs	r3, r3, r1, lsl #6
   4be5c:	cmp	r3, r1, lsl #5
   4be60:	adc	r0, r0, r0
   4be64:	subcs	r3, r3, r1, lsl #5
   4be68:	cmp	r3, r1, lsl #4
   4be6c:	adc	r0, r0, r0
   4be70:	subcs	r3, r3, r1, lsl #4
   4be74:	cmp	r3, r1, lsl #3
   4be78:	adc	r0, r0, r0
   4be7c:	subcs	r3, r3, r1, lsl #3
   4be80:	cmp	r3, r1, lsl #2
   4be84:	adc	r0, r0, r0
   4be88:	subcs	r3, r3, r1, lsl #2
   4be8c:	cmp	r3, r1, lsl #1
   4be90:	adc	r0, r0, r0
   4be94:	subcs	r3, r3, r1, lsl #1
   4be98:	cmp	r3, r1
   4be9c:	adc	r0, r0, r0
   4bea0:	subcs	r3, r3, r1
   4bea4:	cmp	ip, #0
   4bea8:	rsbmi	r0, r0, #0
   4beac:	bx	lr
   4beb0:	teq	ip, r0
   4beb4:	rsbmi	r0, r0, #0
   4beb8:	bx	lr
   4bebc:	movcc	r0, #0
   4bec0:	asreq	r0, ip, #31
   4bec4:	orreq	r0, r0, #1
   4bec8:	bx	lr
   4becc:	clz	r2, r1
   4bed0:	rsb	r2, r2, #31
   4bed4:	cmp	ip, #0
   4bed8:	lsr	r0, r3, r2
   4bedc:	rsbmi	r0, r0, #0
   4bee0:	bx	lr
   4bee4:	cmp	r0, #0
   4bee8:	mvngt	r0, #-2147483648	; 0x80000000
   4beec:	movlt	r0, #-2147483648	; 0x80000000
   4bef0:	b	4c558 <flatcc_json_printer_clear@@Base+0xaec>
   4bef4:	cmp	r1, #0
   4bef8:	beq	4bee4 <flatcc_json_printer_clear@@Base+0x478>
   4befc:	push	{r0, r1, lr}
   4bf00:	bl	4bcdc <flatcc_json_printer_clear@@Base+0x270>
   4bf04:	pop	{r1, r2, lr}
   4bf08:	mul	r3, r2, r0
   4bf0c:	sub	r1, r1, r3
   4bf10:	bx	lr
   4bf14:	eor	r1, r1, #-2147483648	; 0x80000000
   4bf18:	b	4bf20 <flatcc_json_printer_clear@@Base+0x4b4>
   4bf1c:	eor	r3, r3, #-2147483648	; 0x80000000
   4bf20:	push	{r4, r5, lr}
   4bf24:	lsl	r4, r1, #1
   4bf28:	lsl	r5, r3, #1
   4bf2c:	teq	r4, r5
   4bf30:	teqeq	r0, r2
   4bf34:	orrsne	ip, r4, r0
   4bf38:	orrsne	ip, r5, r2
   4bf3c:	mvnsne	ip, r4, asr #21
   4bf40:	mvnsne	ip, r5, asr #21
   4bf44:	beq	4c130 <flatcc_json_printer_clear@@Base+0x6c4>
   4bf48:	lsr	r4, r4, #21
   4bf4c:	rsbs	r5, r4, r5, lsr #21
   4bf50:	rsblt	r5, r5, #0
   4bf54:	ble	4bf74 <flatcc_json_printer_clear@@Base+0x508>
   4bf58:	add	r4, r4, r5
   4bf5c:	eor	r2, r0, r2
   4bf60:	eor	r3, r1, r3
   4bf64:	eor	r0, r2, r0
   4bf68:	eor	r1, r3, r1
   4bf6c:	eor	r2, r0, r2
   4bf70:	eor	r3, r1, r3
   4bf74:	cmp	r5, #54	; 0x36
   4bf78:	pophi	{r4, r5, pc}
   4bf7c:	tst	r1, #-2147483648	; 0x80000000
   4bf80:	lsl	r1, r1, #12
   4bf84:	mov	ip, #1048576	; 0x100000
   4bf88:	orr	r1, ip, r1, lsr #12
   4bf8c:	beq	4bf98 <flatcc_json_printer_clear@@Base+0x52c>
   4bf90:	rsbs	r0, r0, #0
   4bf94:	rsc	r1, r1, #0
   4bf98:	tst	r3, #-2147483648	; 0x80000000
   4bf9c:	lsl	r3, r3, #12
   4bfa0:	orr	r3, ip, r3, lsr #12
   4bfa4:	beq	4bfb0 <flatcc_json_printer_clear@@Base+0x544>
   4bfa8:	rsbs	r2, r2, #0
   4bfac:	rsc	r3, r3, #0
   4bfb0:	teq	r4, r5
   4bfb4:	beq	4c118 <flatcc_json_printer_clear@@Base+0x6ac>
   4bfb8:	sub	r4, r4, #1
   4bfbc:	rsbs	lr, r5, #32
   4bfc0:	blt	4bfdc <flatcc_json_printer_clear@@Base+0x570>
   4bfc4:	lsl	ip, r2, lr
   4bfc8:	adds	r0, r0, r2, lsr r5
   4bfcc:	adc	r1, r1, #0
   4bfd0:	adds	r0, r0, r3, lsl lr
   4bfd4:	adcs	r1, r1, r3, asr r5
   4bfd8:	b	4bff8 <flatcc_json_printer_clear@@Base+0x58c>
   4bfdc:	sub	r5, r5, #32
   4bfe0:	add	lr, lr, #32
   4bfe4:	cmp	r2, #1
   4bfe8:	lsl	ip, r3, lr
   4bfec:	orrcs	ip, ip, #2
   4bff0:	adds	r0, r0, r3, asr r5
   4bff4:	adcs	r1, r1, r3, asr #31
   4bff8:	and	r5, r1, #-2147483648	; 0x80000000
   4bffc:	bpl	4c00c <flatcc_json_printer_clear@@Base+0x5a0>
   4c000:	rsbs	ip, ip, #0
   4c004:	rscs	r0, r0, #0
   4c008:	rsc	r1, r1, #0
   4c00c:	cmp	r1, #1048576	; 0x100000
   4c010:	bcc	4c050 <flatcc_json_printer_clear@@Base+0x5e4>
   4c014:	cmp	r1, #2097152	; 0x200000
   4c018:	bcc	4c038 <flatcc_json_printer_clear@@Base+0x5cc>
   4c01c:	lsrs	r1, r1, #1
   4c020:	rrxs	r0, r0
   4c024:	rrx	ip, ip
   4c028:	add	r4, r4, #1
   4c02c:	lsl	r2, r4, #21
   4c030:	cmn	r2, #4194304	; 0x400000
   4c034:	bcs	4c190 <flatcc_json_printer_clear@@Base+0x724>
   4c038:	cmp	ip, #-2147483648	; 0x80000000
   4c03c:	lsrseq	ip, r0, #1
   4c040:	adcs	r0, r0, #0
   4c044:	adc	r1, r1, r4, lsl #20
   4c048:	orr	r1, r1, r5
   4c04c:	pop	{r4, r5, pc}
   4c050:	lsls	ip, ip, #1
   4c054:	adcs	r0, r0, r0
   4c058:	adc	r1, r1, r1
   4c05c:	tst	r1, #1048576	; 0x100000
   4c060:	sub	r4, r4, #1
   4c064:	bne	4c038 <flatcc_json_printer_clear@@Base+0x5cc>
   4c068:	teq	r1, #0
   4c06c:	moveq	r1, r0
   4c070:	moveq	r0, #0
   4c074:	clz	r3, r1
   4c078:	addeq	r3, r3, #32
   4c07c:	sub	r3, r3, #11
   4c080:	subs	r2, r3, #32
   4c084:	bge	4c0a8 <flatcc_json_printer_clear@@Base+0x63c>
   4c088:	adds	r2, r2, #12
   4c08c:	ble	4c0a4 <flatcc_json_printer_clear@@Base+0x638>
   4c090:	add	ip, r2, #20
   4c094:	rsb	r2, r2, #12
   4c098:	lsl	r0, r1, ip
   4c09c:	lsr	r1, r1, r2
   4c0a0:	b	4c0b8 <flatcc_json_printer_clear@@Base+0x64c>
   4c0a4:	add	r2, r2, #20
   4c0a8:	rsble	ip, r2, #32
   4c0ac:	lsl	r1, r1, r2
   4c0b0:	orrle	r1, r1, r0, lsr ip
   4c0b4:	lslle	r0, r0, r2
   4c0b8:	subs	r4, r4, r3
   4c0bc:	addge	r1, r1, r4, lsl #20
   4c0c0:	orrge	r1, r1, r5
   4c0c4:	popge	{r4, r5, pc}
   4c0c8:	mvn	r4, r4
   4c0cc:	subs	r4, r4, #31
   4c0d0:	bge	4c10c <flatcc_json_printer_clear@@Base+0x6a0>
   4c0d4:	adds	r4, r4, #12
   4c0d8:	bgt	4c0f4 <flatcc_json_printer_clear@@Base+0x688>
   4c0dc:	add	r4, r4, #20
   4c0e0:	rsb	r2, r4, #32
   4c0e4:	lsr	r0, r0, r4
   4c0e8:	orr	r0, r0, r1, lsl r2
   4c0ec:	orr	r1, r5, r1, lsr r4
   4c0f0:	pop	{r4, r5, pc}
   4c0f4:	rsb	r4, r4, #12
   4c0f8:	rsb	r2, r4, #32
   4c0fc:	lsr	r0, r0, r2
   4c100:	orr	r0, r0, r1, lsl r4
   4c104:	mov	r1, r5
   4c108:	pop	{r4, r5, pc}
   4c10c:	lsr	r0, r1, r4
   4c110:	mov	r1, r5
   4c114:	pop	{r4, r5, pc}
   4c118:	teq	r4, #0
   4c11c:	eor	r3, r3, #1048576	; 0x100000
   4c120:	eoreq	r1, r1, #1048576	; 0x100000
   4c124:	addeq	r4, r4, #1
   4c128:	subne	r5, r5, #1
   4c12c:	b	4bfb8 <flatcc_json_printer_clear@@Base+0x54c>
   4c130:	mvns	ip, r4, asr #21
   4c134:	mvnsne	ip, r5, asr #21
   4c138:	beq	4c1a0 <flatcc_json_printer_clear@@Base+0x734>
   4c13c:	teq	r4, r5
   4c140:	teqeq	r0, r2
   4c144:	beq	4c158 <flatcc_json_printer_clear@@Base+0x6ec>
   4c148:	orrs	ip, r4, r0
   4c14c:	moveq	r1, r3
   4c150:	moveq	r0, r2
   4c154:	pop	{r4, r5, pc}
   4c158:	teq	r1, r3
   4c15c:	movne	r1, #0
   4c160:	movne	r0, #0
   4c164:	popne	{r4, r5, pc}
   4c168:	lsrs	ip, r4, #21
   4c16c:	bne	4c180 <flatcc_json_printer_clear@@Base+0x714>
   4c170:	lsls	r0, r0, #1
   4c174:	adcs	r1, r1, r1
   4c178:	orrcs	r1, r1, #-2147483648	; 0x80000000
   4c17c:	pop	{r4, r5, pc}
   4c180:	adds	r4, r4, #4194304	; 0x400000
   4c184:	addcc	r1, r1, #1048576	; 0x100000
   4c188:	popcc	{r4, r5, pc}
   4c18c:	and	r5, r1, #-2147483648	; 0x80000000
   4c190:	orr	r1, r5, #2130706432	; 0x7f000000
   4c194:	orr	r1, r1, #15728640	; 0xf00000
   4c198:	mov	r0, #0
   4c19c:	pop	{r4, r5, pc}
   4c1a0:	mvns	ip, r4, asr #21
   4c1a4:	movne	r1, r3
   4c1a8:	movne	r0, r2
   4c1ac:	mvnseq	ip, r5, asr #21
   4c1b0:	movne	r3, r1
   4c1b4:	movne	r2, r0
   4c1b8:	orrs	r4, r0, r1, lsl #12
   4c1bc:	orrseq	r5, r2, r3, lsl #12
   4c1c0:	teqeq	r1, r3
   4c1c4:	orrne	r1, r1, #524288	; 0x80000
   4c1c8:	pop	{r4, r5, pc}
   4c1cc:	teq	r0, #0
   4c1d0:	moveq	r1, #0
   4c1d4:	bxeq	lr
   4c1d8:	push	{r4, r5, lr}
   4c1dc:	mov	r4, #1024	; 0x400
   4c1e0:	add	r4, r4, #50	; 0x32
   4c1e4:	mov	r5, #0
   4c1e8:	mov	r1, #0
   4c1ec:	b	4c068 <flatcc_json_printer_clear@@Base+0x5fc>
   4c1f0:	teq	r0, #0
   4c1f4:	moveq	r1, #0
   4c1f8:	bxeq	lr
   4c1fc:	push	{r4, r5, lr}
   4c200:	mov	r4, #1024	; 0x400
   4c204:	add	r4, r4, #50	; 0x32
   4c208:	ands	r5, r0, #-2147483648	; 0x80000000
   4c20c:	rsbmi	r0, r0, #0
   4c210:	mov	r1, #0
   4c214:	b	4c068 <flatcc_json_printer_clear@@Base+0x5fc>
   4c218:	lsls	r2, r0, #1
   4c21c:	asr	r1, r2, #3
   4c220:	rrx	r1, r1
   4c224:	lsl	r0, r2, #28
   4c228:	andsne	r3, r2, #-16777216	; 0xff000000
   4c22c:	teqne	r3, #-16777216	; 0xff000000
   4c230:	eorne	r1, r1, #939524096	; 0x38000000
   4c234:	bxne	lr
   4c238:	teq	r2, #0
   4c23c:	teqne	r3, #-16777216	; 0xff000000
   4c240:	bxeq	lr
   4c244:	push	{r4, r5, lr}
   4c248:	mov	r4, #896	; 0x380
   4c24c:	and	r5, r1, #-2147483648	; 0x80000000
   4c250:	bic	r1, r1, #-2147483648	; 0x80000000
   4c254:	b	4c068 <flatcc_json_printer_clear@@Base+0x5fc>
   4c258:	orrs	r2, r0, r1
   4c25c:	bxeq	lr
   4c260:	push	{r4, r5, lr}
   4c264:	mov	r5, #0
   4c268:	b	4c288 <flatcc_json_printer_clear@@Base+0x81c>
   4c26c:	orrs	r2, r0, r1
   4c270:	bxeq	lr
   4c274:	push	{r4, r5, lr}
   4c278:	ands	r5, r1, #-2147483648	; 0x80000000
   4c27c:	bpl	4c288 <flatcc_json_printer_clear@@Base+0x81c>
   4c280:	rsbs	r0, r0, #0
   4c284:	rsc	r1, r1, #0
   4c288:	mov	r4, #1024	; 0x400
   4c28c:	add	r4, r4, #50	; 0x32
   4c290:	lsrs	ip, r1, #22
   4c294:	beq	4c00c <flatcc_json_printer_clear@@Base+0x5a0>
   4c298:	mov	r2, #3
   4c29c:	lsrs	ip, ip, #3
   4c2a0:	addne	r2, r2, #3
   4c2a4:	lsrs	ip, ip, #3
   4c2a8:	addne	r2, r2, #3
   4c2ac:	add	r2, r2, ip, lsr #3
   4c2b0:	rsb	r3, r2, #32
   4c2b4:	lsl	ip, r0, r3
   4c2b8:	lsr	r0, r0, r2
   4c2bc:	orr	r0, r0, r1, lsl r3
   4c2c0:	lsr	r1, r1, r2
   4c2c4:	add	r4, r4, r2
   4c2c8:	b	4c00c <flatcc_json_printer_clear@@Base+0x5a0>
   4c2cc:	eor	r0, r0, #-2147483648	; 0x80000000
   4c2d0:	b	4c2d8 <flatcc_json_printer_clear@@Base+0x86c>
   4c2d4:	eor	r1, r1, #-2147483648	; 0x80000000
   4c2d8:	lsls	r2, r0, #1
   4c2dc:	lslsne	r3, r1, #1
   4c2e0:	teqne	r2, r3
   4c2e4:	mvnsne	ip, r2, asr #24
   4c2e8:	mvnsne	ip, r3, asr #24
   4c2ec:	beq	4c3e4 <flatcc_json_printer_clear@@Base+0x978>
   4c2f0:	lsr	r2, r2, #24
   4c2f4:	rsbs	r3, r2, r3, lsr #24
   4c2f8:	addgt	r2, r2, r3
   4c2fc:	eorgt	r1, r0, r1
   4c300:	eorgt	r0, r1, r0
   4c304:	eorgt	r1, r0, r1
   4c308:	rsblt	r3, r3, #0
   4c30c:	cmp	r3, #25
   4c310:	bxhi	lr
   4c314:	tst	r0, #-2147483648	; 0x80000000
   4c318:	orr	r0, r0, #8388608	; 0x800000
   4c31c:	bic	r0, r0, #-16777216	; 0xff000000
   4c320:	rsbne	r0, r0, #0
   4c324:	tst	r1, #-2147483648	; 0x80000000
   4c328:	orr	r1, r1, #8388608	; 0x800000
   4c32c:	bic	r1, r1, #-16777216	; 0xff000000
   4c330:	rsbne	r1, r1, #0
   4c334:	teq	r2, r3
   4c338:	beq	4c3cc <flatcc_json_printer_clear@@Base+0x960>
   4c33c:	sub	r2, r2, #1
   4c340:	adds	r0, r0, r1, asr r3
   4c344:	rsb	r3, r3, #32
   4c348:	lsl	r1, r1, r3
   4c34c:	and	r3, r0, #-2147483648	; 0x80000000
   4c350:	bpl	4c35c <flatcc_json_printer_clear@@Base+0x8f0>
   4c354:	rsbs	r1, r1, #0
   4c358:	rsc	r0, r0, #0
   4c35c:	cmp	r0, #8388608	; 0x800000
   4c360:	bcc	4c394 <flatcc_json_printer_clear@@Base+0x928>
   4c364:	cmp	r0, #16777216	; 0x1000000
   4c368:	bcc	4c380 <flatcc_json_printer_clear@@Base+0x914>
   4c36c:	lsrs	r0, r0, #1
   4c370:	rrx	r1, r1
   4c374:	add	r2, r2, #1
   4c378:	cmp	r2, #254	; 0xfe
   4c37c:	bcs	4c438 <flatcc_json_printer_clear@@Base+0x9cc>
   4c380:	cmp	r1, #-2147483648	; 0x80000000
   4c384:	adc	r0, r0, r2, lsl #23
   4c388:	biceq	r0, r0, #1
   4c38c:	orr	r0, r0, r3
   4c390:	bx	lr
   4c394:	lsls	r1, r1, #1
   4c398:	adc	r0, r0, r0
   4c39c:	tst	r0, #8388608	; 0x800000
   4c3a0:	sub	r2, r2, #1
   4c3a4:	bne	4c380 <flatcc_json_printer_clear@@Base+0x914>
   4c3a8:	clz	ip, r0
   4c3ac:	sub	ip, ip, #8
   4c3b0:	subs	r2, r2, ip
   4c3b4:	lsl	r0, r0, ip
   4c3b8:	addge	r0, r0, r2, lsl #23
   4c3bc:	rsblt	r2, r2, #0
   4c3c0:	orrge	r0, r0, r3
   4c3c4:	orrlt	r0, r3, r0, lsr r2
   4c3c8:	bx	lr
   4c3cc:	teq	r2, #0
   4c3d0:	eor	r1, r1, #8388608	; 0x800000
   4c3d4:	eoreq	r0, r0, #8388608	; 0x800000
   4c3d8:	addeq	r2, r2, #1
   4c3dc:	subne	r3, r3, #1
   4c3e0:	b	4c33c <flatcc_json_printer_clear@@Base+0x8d0>
   4c3e4:	lsl	r3, r1, #1
   4c3e8:	mvns	ip, r2, asr #24
   4c3ec:	mvnsne	ip, r3, asr #24
   4c3f0:	beq	4c444 <flatcc_json_printer_clear@@Base+0x9d8>
   4c3f4:	teq	r2, r3
   4c3f8:	beq	4c408 <flatcc_json_printer_clear@@Base+0x99c>
   4c3fc:	teq	r2, #0
   4c400:	moveq	r0, r1
   4c404:	bx	lr
   4c408:	teq	r0, r1
   4c40c:	movne	r0, #0
   4c410:	bxne	lr
   4c414:	tst	r2, #-16777216	; 0xff000000
   4c418:	bne	4c428 <flatcc_json_printer_clear@@Base+0x9bc>
   4c41c:	lsls	r0, r0, #1
   4c420:	orrcs	r0, r0, #-2147483648	; 0x80000000
   4c424:	bx	lr
   4c428:	adds	r2, r2, #33554432	; 0x2000000
   4c42c:	addcc	r0, r0, #8388608	; 0x800000
   4c430:	bxcc	lr
   4c434:	and	r3, r0, #-2147483648	; 0x80000000
   4c438:	orr	r0, r3, #2130706432	; 0x7f000000
   4c43c:	orr	r0, r0, #8388608	; 0x800000
   4c440:	bx	lr
   4c444:	mvns	r2, r2, asr #24
   4c448:	movne	r0, r1
   4c44c:	mvnseq	r3, r3, asr #24
   4c450:	movne	r1, r0
   4c454:	lsls	r2, r0, #9
   4c458:	lslseq	r3, r1, #9
   4c45c:	teqeq	r0, r1
   4c460:	orrne	r0, r0, #4194304	; 0x400000
   4c464:	bx	lr
   4c468:	mov	r3, #0
   4c46c:	b	4c478 <flatcc_json_printer_clear@@Base+0xa0c>
   4c470:	ands	r3, r0, #-2147483648	; 0x80000000
   4c474:	rsbmi	r0, r0, #0
   4c478:	movs	ip, r0
   4c47c:	bxeq	lr
   4c480:	orr	r3, r3, #1258291200	; 0x4b000000
   4c484:	mov	r1, r0
   4c488:	mov	r0, #0
   4c48c:	b	4c4d0 <flatcc_json_printer_clear@@Base+0xa64>
   4c490:	orrs	r2, r0, r1
   4c494:	bxeq	lr
   4c498:	mov	r3, #0
   4c49c:	b	4c4b8 <flatcc_json_printer_clear@@Base+0xa4c>
   4c4a0:	orrs	r2, r0, r1
   4c4a4:	bxeq	lr
   4c4a8:	ands	r3, r1, #-2147483648	; 0x80000000
   4c4ac:	bpl	4c4b8 <flatcc_json_printer_clear@@Base+0xa4c>
   4c4b0:	rsbs	r0, r0, #0
   4c4b4:	rsc	r1, r1, #0
   4c4b8:	movs	ip, r1
   4c4bc:	moveq	ip, r0
   4c4c0:	moveq	r1, r0
   4c4c4:	moveq	r0, #0
   4c4c8:	orr	r3, r3, #1526726656	; 0x5b000000
   4c4cc:	subeq	r3, r3, #268435456	; 0x10000000
   4c4d0:	sub	r3, r3, #8388608	; 0x800000
   4c4d4:	clz	r2, ip
   4c4d8:	subs	r2, r2, #8
   4c4dc:	sub	r3, r3, r2, lsl #23
   4c4e0:	blt	4c500 <flatcc_json_printer_clear@@Base+0xa94>
   4c4e4:	add	r3, r3, r1, lsl r2
   4c4e8:	lsl	ip, r0, r2
   4c4ec:	rsb	r2, r2, #32
   4c4f0:	cmp	ip, #-2147483648	; 0x80000000
   4c4f4:	adc	r0, r3, r0, lsr r2
   4c4f8:	biceq	r0, r0, #1
   4c4fc:	bx	lr
   4c500:	add	r2, r2, #32
   4c504:	lsl	ip, r1, r2
   4c508:	rsb	r2, r2, #32
   4c50c:	orrs	r0, r0, ip, lsl #1
   4c510:	adc	r0, r3, r1, lsr r2
   4c514:	biceq	r0, r0, ip, lsr #31
   4c518:	bx	lr
   4c51c:	cmp	r3, #0
   4c520:	cmpeq	r2, #0
   4c524:	bne	4c53c <flatcc_json_printer_clear@@Base+0xad0>
   4c528:	cmp	r1, #0
   4c52c:	cmpeq	r0, #0
   4c530:	mvnne	r1, #0
   4c534:	mvnne	r0, #0
   4c538:	b	4c558 <flatcc_json_printer_clear@@Base+0xaec>
   4c53c:	sub	sp, sp, #8
   4c540:	push	{sp, lr}
   4c544:	bl	4c568 <flatcc_json_printer_clear@@Base+0xafc>
   4c548:	ldr	lr, [sp, #4]
   4c54c:	add	sp, sp, #8
   4c550:	pop	{r2, r3}
   4c554:	bx	lr
   4c558:	push	{r1, lr}
   4c55c:	mov	r0, #8
   4c560:	bl	14514 <raise@plt>
   4c564:	pop	{r1, pc}
   4c568:	cmp	r1, r3
   4c56c:	push	{r4, r5, r6, r7, r8, r9, lr}
   4c570:	cmpeq	r0, r2
   4c574:	mov	r4, r0
   4c578:	mov	r5, r1
   4c57c:	ldr	r9, [sp, #28]
   4c580:	movcc	r0, #0
   4c584:	movcc	r1, #0
   4c588:	bcc	4c680 <flatcc_json_printer_clear@@Base+0xc14>
   4c58c:	cmp	r3, #0
   4c590:	clzeq	ip, r2
   4c594:	clzne	ip, r3
   4c598:	addeq	ip, ip, #32
   4c59c:	cmp	r5, #0
   4c5a0:	clzeq	r1, r4
   4c5a4:	addeq	r1, r1, #32
   4c5a8:	clzne	r1, r5
   4c5ac:	sub	ip, ip, r1
   4c5b0:	sub	lr, ip, #32
   4c5b4:	lsl	r7, r3, ip
   4c5b8:	rsb	r8, ip, #32
   4c5bc:	orr	r7, r7, r2, lsl lr
   4c5c0:	orr	r7, r7, r2, lsr r8
   4c5c4:	lsl	r6, r2, ip
   4c5c8:	cmp	r5, r7
   4c5cc:	cmpeq	r4, r6
   4c5d0:	movcc	r0, #0
   4c5d4:	movcc	r1, #0
   4c5d8:	bcc	4c5f4 <flatcc_json_printer_clear@@Base+0xb88>
   4c5dc:	mov	r3, #1
   4c5e0:	subs	r4, r4, r6
   4c5e4:	lsl	r1, r3, lr
   4c5e8:	lsl	r0, r3, ip
   4c5ec:	orr	r1, r1, r3, lsr r8
   4c5f0:	sbc	r5, r5, r7
   4c5f4:	cmp	ip, #0
   4c5f8:	beq	4c680 <flatcc_json_printer_clear@@Base+0xc14>
   4c5fc:	lsrs	r3, r7, #1
   4c600:	rrx	r2, r6
   4c604:	mov	r6, ip
   4c608:	b	4c62c <flatcc_json_printer_clear@@Base+0xbc0>
   4c60c:	subs	r4, r4, r2
   4c610:	sbc	r5, r5, r3
   4c614:	adds	r4, r4, r4
   4c618:	adc	r5, r5, r5
   4c61c:	adds	r4, r4, #1
   4c620:	adc	r5, r5, #0
   4c624:	subs	r6, r6, #1
   4c628:	beq	4c648 <flatcc_json_printer_clear@@Base+0xbdc>
   4c62c:	cmp	r5, r3
   4c630:	cmpeq	r4, r2
   4c634:	bcs	4c60c <flatcc_json_printer_clear@@Base+0xba0>
   4c638:	adds	r4, r4, r4
   4c63c:	adc	r5, r5, r5
   4c640:	subs	r6, r6, #1
   4c644:	bne	4c62c <flatcc_json_printer_clear@@Base+0xbc0>
   4c648:	lsr	r6, r4, ip
   4c64c:	lsr	r7, r5, ip
   4c650:	orr	r6, r6, r5, lsl r8
   4c654:	adds	r2, r0, r4
   4c658:	orr	r6, r6, r5, lsr lr
   4c65c:	adc	r3, r1, r5
   4c660:	lsl	r1, r7, ip
   4c664:	orr	r1, r1, r6, lsl lr
   4c668:	lsl	r0, r6, ip
   4c66c:	orr	r1, r1, r6, lsr r8
   4c670:	subs	r0, r2, r0
   4c674:	mov	r4, r6
   4c678:	mov	r5, r7
   4c67c:	sbc	r1, r3, r1
   4c680:	cmp	r9, #0
   4c684:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   4c688:	strd	r4, [r9]
   4c68c:	pop	{r4, r5, r6, r7, r8, r9, pc}

0004c690 <__libc_csu_init@@Base>:
   4c690:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4c694:	mov	r7, r0
   4c698:	ldr	r6, [pc, #72]	; 4c6e8 <__libc_csu_init@@Base+0x58>
   4c69c:	ldr	r5, [pc, #72]	; 4c6ec <__libc_csu_init@@Base+0x5c>
   4c6a0:	add	r6, pc, r6
   4c6a4:	add	r5, pc, r5
   4c6a8:	sub	r6, r6, r5
   4c6ac:	mov	r8, r1
   4c6b0:	mov	r9, r2
   4c6b4:	bl	144f4 <raise@plt-0x20>
   4c6b8:	asrs	r6, r6, #2
   4c6bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c6c0:	mov	r4, #0
   4c6c4:	add	r4, r4, #1
   4c6c8:	ldr	r3, [r5], #4
   4c6cc:	mov	r2, r9
   4c6d0:	mov	r1, r8
   4c6d4:	mov	r0, r7
   4c6d8:	blx	r3
   4c6dc:	cmp	r6, r4
   4c6e0:	bne	4c6c4 <__libc_csu_init@@Base+0x34>
   4c6e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c6e8:	andeq	r7, r1, r8, lsr r8
   4c6ec:	andeq	r7, r1, r0, lsr r8

0004c6f0 <__libc_csu_fini@@Base>:
   4c6f0:	bx	lr

Disassembly of section .fini:

0004c6f4 <.fini>:
   4c6f4:	push	{r3, lr}
   4c6f8:	pop	{r3, pc}
