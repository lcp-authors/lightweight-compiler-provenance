
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

0001122c <.init>:
   1122c:	push	{r3, lr}
   11230:	bl	11678 <sprintf@plt+0x48>
   11234:	pop	{r3, pc}

Disassembly of section .plt:

00011238 <sigemptyset@plt-0x14>:
   11238:	push	{lr}		; (str lr, [sp, #-4]!)
   1123c:	ldr	lr, [pc, #4]	; 11248 <sigemptyset@plt-0x4>
   11240:	add	lr, pc, lr
   11244:	ldr	pc, [lr, #8]!
   11248:			; <UNDEFINED> instruction: 0x00018db8

0001124c <sigemptyset@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #24, 20	; 0x18000
   11254:	ldr	pc, [ip, #3512]!	; 0xdb8

00011258 <strerror@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #24, 20	; 0x18000
   11260:	ldr	pc, [ip, #3504]!	; 0xdb0

00011264 <rb_helper_loop@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #24, 20	; 0x18000
   1126c:	ldr	pc, [ip, #3496]!	; 0xda8

00011270 <abort@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #24, 20	; 0x18000
   11278:	ldr	pc, [ip, #3488]!	; 0xda0

0001127c <rb_event_addish@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #24, 20	; 0x18000
   11284:	ldr	pc, [ip, #3480]!	; 0xd98

00011288 <getsockname@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #24, 20	; 0x18000
   11290:	ldr	pc, [ip, #3472]!	; 0xd90

00011294 <rb_ignore_errno@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #24, 20	; 0x18000
   1129c:	ldr	pc, [ip, #3464]!	; 0xd88

000112a0 <rb_connect_tcp_ssl@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #24, 20	; 0x18000
   112a8:	ldr	pc, [ip, #3456]!	; 0xd80

000112ac <rb_connect_tcp@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #24, 20	; 0x18000
   112b4:	ldr	pc, [ip, #3448]!	; 0xd78

000112b8 <memcmp@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #24, 20	; 0x18000
   112c0:	ldr	pc, [ip, #3440]!	; 0xd70

000112c4 <__libc_start_main@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #24, 20	; 0x18000
   112cc:	ldr	pc, [ip, #3432]!	; 0xd68

000112d0 <rb_event_delete@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #24, 20	; 0x18000
   112d8:	ldr	pc, [ip, #3424]!	; 0xd60

000112dc <rb_setselect@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #24, 20	; 0x18000
   112e4:	ldr	pc, [ip, #3416]!	; 0xd58

000112e8 <rb_get_fd@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #24, 20	; 0x18000
   112f0:	ldr	pc, [ip, #3408]!	; 0xd50

000112f4 <__gmon_start__@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #24, 20	; 0x18000
   112fc:	ldr	pc, [ip, #3400]!	; 0xd48

00011300 <vsnprintf@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #24, 20	; 0x18000
   11308:	ldr	pc, [ip, #3392]!	; 0xd40

0001130c <rb_socket@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #24, 20	; 0x18000
   11314:	ldr	pc, [ip, #3384]!	; 0xd38

00011318 <fclose@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #24, 20	; 0x18000
   11320:	ldr	pc, [ip, #3376]!	; 0xd30

00011324 <fgets@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #24, 20	; 0x18000
   1132c:	ldr	pc, [ip, #3368]!	; 0xd28

00011330 <rb_strtok_r@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #24, 20	; 0x18000
   11338:	ldr	pc, [ip, #3360]!	; 0xd20

0001133c <strchr@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #24, 20	; 0x18000
   11344:	ldr	pc, [ip, #3352]!	; 0xd18

00011348 <rb_dictionary_foreach_cur@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #24, 20	; 0x18000
   11350:	ldr	pc, [ip, #3344]!	; 0xd10

00011354 <strcasecmp@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #24, 20	; 0x18000
   1135c:	ldr	pc, [ip, #3336]!	; 0xd08

00011360 <calloc@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #24, 20	; 0x18000
   11368:	ldr	pc, [ip, #3328]!	; 0xd00

0001136c <rb_helper_child@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #24, 20	; 0x18000
   11374:	ldr	pc, [ip, #3320]!	; 0xcf8

00011378 <sendto@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #24, 20	; 0x18000
   11380:	ldr	pc, [ip, #3312]!	; 0xcf0

00011384 <fopen@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #24, 20	; 0x18000
   1138c:	ldr	pc, [ip, #3304]!	; 0xce8

00011390 <memset@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #24, 20	; 0x18000
   11398:	ldr	pc, [ip, #3296]!	; 0xce0

0001139c <freeaddrinfo@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #24, 20	; 0x18000
   113a4:	ldr	pc, [ip, #3288]!	; 0xcd8

000113a8 <strrchr@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #24, 20	; 0x18000
   113b0:	ldr	pc, [ip, #3280]!	; 0xcd0

000113b4 <rb_write@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #24, 20	; 0x18000
   113bc:	ldr	pc, [ip, #3272]!	; 0xcc8

000113c0 <__assert_fail@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #24, 20	; 0x18000
   113c8:	ldr	pc, [ip, #3264]!	; 0xcc0

000113cc <rb_strlcpy@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #24, 20	; 0x18000
   113d4:	ldr	pc, [ip, #3256]!	; 0xcb8

000113d8 <strtoull@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #24, 20	; 0x18000
   113e0:	ldr	pc, [ip, #3248]!	; 0xcb0

000113e4 <rb_dictionary_foreach_next@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #24, 20	; 0x18000
   113ec:	ldr	pc, [ip, #3240]!	; 0xca8

000113f0 <free@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #24, 20	; 0x18000
   113f8:	ldr	pc, [ip, #3232]!	; 0xca0

000113fc <rb_string_to_array@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #24, 20	; 0x18000
   11404:	ldr	pc, [ip, #3224]!	; 0xc98

00011408 <rb_read@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #24, 20	; 0x18000
   11410:	ldr	pc, [ip, #3216]!	; 0xc90

00011414 <rb_strcasecmp@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #24, 20	; 0x18000
   1141c:	ldr	pc, [ip, #3208]!	; 0xc88

00011420 <getaddrinfo@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #24, 20	; 0x18000
   11428:	ldr	pc, [ip, #3200]!	; 0xc80

0001142c <rb_dictionary_foreach_start@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #24, 20	; 0x18000
   11434:	ldr	pc, [ip, #3192]!	; 0xc78

00011438 <rb_inet_pton_sock@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #24, 20	; 0x18000
   11440:	ldr	pc, [ip, #3184]!	; 0xc70

00011444 <strlen@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #24, 20	; 0x18000
   1144c:	ldr	pc, [ip, #3176]!	; 0xc68

00011450 <rb_current_time@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #24, 20	; 0x18000
   11458:	ldr	pc, [ip, #3168]!	; 0xc60

0001145c <rb_dictionary_delete@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #24, 20	; 0x18000
   11464:	ldr	pc, [ip, #3160]!	; 0xc58

00011468 <memcpy@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #24, 20	; 0x18000
   11470:	ldr	pc, [ip, #3152]!	; 0xc50

00011474 <rb_free_rb_dlink_node@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #24, 20	; 0x18000
   1147c:	ldr	pc, [ip, #3144]!	; 0xc48

00011480 <rb_close@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #24, 20	; 0x18000
   11488:	ldr	pc, [ip, #3136]!	; 0xc40

0001148c <strtol@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #24, 20	; 0x18000
   11494:	ldr	pc, [ip, #3128]!	; 0xc38

00011498 <sigaddset@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #24, 20	; 0x18000
   114a0:	ldr	pc, [ip, #3120]!	; 0xc30

000114a4 <strcpy@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #24, 20	; 0x18000
   114ac:	ldr	pc, [ip, #3112]!	; 0xc28

000114b0 <raise@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #24, 20	; 0x18000
   114b8:	ldr	pc, [ip, #3104]!	; 0xc20

000114bc <rb_dictionary_destroy@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #24, 20	; 0x18000
   114c4:	ldr	pc, [ip, #3096]!	; 0xc18

000114c8 <bind@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #24, 20	; 0x18000
   114d0:	ldr	pc, [ip, #3088]!	; 0xc10

000114d4 <strstr@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #24, 20	; 0x18000
   114dc:	ldr	pc, [ip, #3080]!	; 0xc08

000114e0 <fwrite@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #24, 20	; 0x18000
   114e8:	ldr	pc, [ip, #3072]!	; 0xc00

000114ec <rb_init_prng@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #24, 20	; 0x18000
   114f4:	ldr	pc, [ip, #3064]!	; 0xbf8

000114f8 <rb_dictionary_retrieve@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #24, 20	; 0x18000
   11500:	ldr	pc, [ip, #3056]!	; 0xbf0

00011504 <rb_outofmemory@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #24, 20	; 0x18000
   1150c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011510 <__ctype_b_loc@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #24, 20	; 0x18000
   11518:	ldr	pc, [ip, #3040]!	; 0xbe0

0001151c <rb_dictionary_add@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #24, 20	; 0x18000
   11524:	ldr	pc, [ip, #3032]!	; 0xbd8

00011528 <rb_set_time@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #24, 20	; 0x18000
   11530:	ldr	pc, [ip, #3024]!	; 0xbd0

00011534 <malloc@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #24, 20	; 0x18000
   1153c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011540 <sigaction@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #24, 20	; 0x18000
   11548:	ldr	pc, [ip, #3008]!	; 0xbc0

0001154c <rb_helper_read@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #24, 20	; 0x18000
   11554:	ldr	pc, [ip, #3000]!	; 0xbb8

00011558 <rb_inet_ntop_sock@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #24, 20	; 0x18000
   11560:	ldr	pc, [ip, #2992]!	; 0xbb0

00011564 <rb_dictionary_find@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #24, 20	; 0x18000
   1156c:	ldr	pc, [ip, #2984]!	; 0xba8

00011570 <rb_dictionary_create@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #24, 20	; 0x18000
   11578:	ldr	pc, [ip, #2976]!	; 0xba0

0001157c <memmove@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #24, 20	; 0x18000
   11584:	ldr	pc, [ip, #2968]!	; 0xb98

00011588 <rb_accept_tcp@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #24, 20	; 0x18000
   11590:	ldr	pc, [ip, #2960]!	; 0xb90

00011594 <rb_helper_write@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #24, 20	; 0x18000
   1159c:	ldr	pc, [ip, #2952]!	; 0xb88

000115a0 <rb_event_add@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #24, 20	; 0x18000
   115a8:	ldr	pc, [ip, #2944]!	; 0xb80

000115ac <rb_get_random@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #24, 20	; 0x18000
   115b4:	ldr	pc, [ip, #2936]!	; 0xb78

000115b8 <rb_make_rb_dlink_node@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #24, 20	; 0x18000
   115c0:	ldr	pc, [ip, #2928]!	; 0xb70

000115c4 <snprintf@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #24, 20	; 0x18000
   115cc:	ldr	pc, [ip, #2920]!	; 0xb68

000115d0 <rb_listen@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #24, 20	; 0x18000
   115d8:	ldr	pc, [ip, #2912]!	; 0xb60

000115dc <strncmp@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #24, 20	; 0x18000
   115e4:	ldr	pc, [ip, #2904]!	; 0xb58

000115e8 <recvfrom@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #24, 20	; 0x18000
   115f0:	ldr	pc, [ip, #2896]!	; 0xb50

000115f4 <setsockopt@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #24, 20	; 0x18000
   115fc:	ldr	pc, [ip, #2888]!	; 0xb48

00011600 <strpbrk@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #24, 20	; 0x18000
   11608:	ldr	pc, [ip, #2880]!	; 0xb40

0001160c <strcmp@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #24, 20	; 0x18000
   11614:	ldr	pc, [ip, #2872]!	; 0xb38

00011618 <exit@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #24, 20	; 0x18000
   11620:	ldr	pc, [ip, #2864]!	; 0xb30

00011624 <__errno_location@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #24, 20	; 0x18000
   1162c:	ldr	pc, [ip, #2856]!	; 0xb28

00011630 <sprintf@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #24, 20	; 0x18000
   11638:	ldr	pc, [ip, #2848]!	; 0xb20

Disassembly of section .text:

0001163c <.text>:
   1163c:	mov	fp, #0
   11640:	mov	lr, #0
   11644:	pop	{r1}		; (ldr r1, [sp], #4)
   11648:	mov	r2, sp
   1164c:	push	{r2}		; (str r2, [sp, #-4]!)
   11650:	push	{r0}		; (str r0, [sp, #-4]!)
   11654:	ldr	ip, [pc, #16]	; 1166c <sprintf@plt+0x3c>
   11658:	push	{ip}		; (str ip, [sp, #-4]!)
   1165c:	ldr	r0, [pc, #12]	; 11670 <sprintf@plt+0x40>
   11660:	ldr	r3, [pc, #12]	; 11674 <sprintf@plt+0x44>
   11664:	bl	112c4 <__libc_start_main@plt>
   11668:	bl	11270 <abort@plt>
   1166c:	andeq	r8, r1, r0, lsl #25
   11670:	andeq	r1, r1, r0, lsr sl
   11674:	andeq	r8, r1, r0, lsr #24
   11678:	ldr	r3, [pc, #20]	; 11694 <sprintf@plt+0x64>
   1167c:	ldr	r2, [pc, #20]	; 11698 <sprintf@plt+0x68>
   11680:	add	r3, pc, r3
   11684:	ldr	r2, [r3, r2]
   11688:	cmp	r2, #0
   1168c:	bxeq	lr
   11690:	b	112f4 <__gmon_start__@plt>
   11694:	andeq	r8, r1, r8, ror r9
   11698:	andeq	r0, r0, ip, asr r1
   1169c:	ldr	r3, [pc, #28]	; 116c0 <sprintf@plt+0x90>
   116a0:	ldr	r0, [pc, #28]	; 116c4 <sprintf@plt+0x94>
   116a4:	sub	r3, r3, r0
   116a8:	cmp	r3, #6
   116ac:	bxls	lr
   116b0:	ldr	r3, [pc, #16]	; 116c8 <sprintf@plt+0x98>
   116b4:	cmp	r3, #0
   116b8:	bxeq	lr
   116bc:	bx	r3
   116c0:	andeq	sl, r2, r7, asr #30
   116c4:	andeq	sl, r2, r4, asr #30
   116c8:	andeq	r0, r0, r0
   116cc:	ldr	r1, [pc, #36]	; 116f8 <sprintf@plt+0xc8>
   116d0:	ldr	r0, [pc, #36]	; 116fc <sprintf@plt+0xcc>
   116d4:	sub	r1, r1, r0
   116d8:	asr	r1, r1, #2
   116dc:	add	r1, r1, r1, lsr #31
   116e0:	asrs	r1, r1, #1
   116e4:	bxeq	lr
   116e8:	ldr	r3, [pc, #16]	; 11700 <sprintf@plt+0xd0>
   116ec:	cmp	r3, #0
   116f0:	bxeq	lr
   116f4:	bx	r3
   116f8:	andeq	sl, r2, r4, asr #30
   116fc:	andeq	sl, r2, r4, asr #30
   11700:	andeq	r0, r0, r0
   11704:	push	{r4, lr}
   11708:	ldr	r4, [pc, #24]	; 11728 <sprintf@plt+0xf8>
   1170c:	ldrb	r3, [r4]
   11710:	cmp	r3, #0
   11714:	popne	{r4, pc}
   11718:	bl	1169c <sprintf@plt+0x6c>
   1171c:	mov	r3, #1
   11720:	strb	r3, [r4]
   11724:	pop	{r4, pc}
   11728:	andeq	sl, r2, ip, asr #30
   1172c:	ldr	r0, [pc, #40]	; 1175c <sprintf@plt+0x12c>
   11730:	ldr	r3, [r0]
   11734:	cmp	r3, #0
   11738:	bne	11740 <sprintf@plt+0x110>
   1173c:	b	116cc <sprintf@plt+0x9c>
   11740:	ldr	r3, [pc, #24]	; 11760 <sprintf@plt+0x130>
   11744:	cmp	r3, #0
   11748:	beq	1173c <sprintf@plt+0x10c>
   1174c:	push	{r4, lr}
   11750:	blx	r3
   11754:	pop	{r4, lr}
   11758:	b	116cc <sprintf@plt+0x9c>
   1175c:	andeq	r9, r2, ip, ror #29
   11760:	andeq	r0, r0, r0
   11764:	push	{r4, r5, r6, lr}
   11768:	cmp	r0, #2
   1176c:	bgt	117ac <sprintf@plt+0x17c>
   11770:	mov	r4, #0
   11774:	ldr	r5, [pc, #80]	; 117cc <sprintf@plt+0x19c>
   11778:	mov	r6, r4
   1177c:	b	1178c <sprintf@plt+0x15c>
   11780:	add	r4, r4, #1
   11784:	cmp	r4, #256	; 0x100
   11788:	beq	117a8 <sprintf@plt+0x178>
   1178c:	uxtb	r3, r4
   11790:	ldr	r3, [r5, r3, lsl #2]
   11794:	cmp	r3, #0
   11798:	beq	11780 <sprintf@plt+0x150>
   1179c:	mov	r0, r6
   117a0:	blx	r3
   117a4:	b	11780 <sprintf@plt+0x150>
   117a8:	pop	{r4, r5, r6, pc}
   117ac:	ldr	r3, [r1, #4]
   117b0:	ldrb	r0, [r3]
   117b4:	ldr	r3, [pc, #16]	; 117cc <sprintf@plt+0x19c>
   117b8:	ldr	r3, [r3, r0, lsl #2]
   117bc:	cmp	r3, #0
   117c0:	popeq	{r4, r5, r6, pc}
   117c4:	blx	r3
   117c8:	pop	{r4, r5, r6, pc}
   117cc:	andeq	sl, r2, r8, ror #2
   117d0:	bx	lr
   117d4:	push	{r4, lr}
   117d8:	cmp	r0, #2
   117dc:	ble	11830 <sprintf@plt+0x200>
   117e0:	mov	r4, r1
   117e4:	mov	r2, #16
   117e8:	mov	r1, #0
   117ec:	ldr	r0, [r4, #4]
   117f0:	bl	113d8 <strtoull@plt>
   117f4:	mvn	r2, #0
   117f8:	mov	r3, #0
   117fc:	cmp	r1, r3
   11800:	cmpeq	r0, r2
   11804:	bhi	11844 <sprintf@plt+0x214>
   11808:	ldr	r3, [r4, #8]
   1180c:	ldrb	r2, [r3]
   11810:	ldr	r3, [pc, #64]	; 11858 <sprintf@plt+0x228>
   11814:	add	r3, r3, r2, lsl #2
   11818:	ldr	r3, [r3, #1024]	; 0x400
   1181c:	cmp	r3, #0
   11820:	popeq	{r4, pc}
   11824:	mov	r1, r2
   11828:	blx	r3
   1182c:	pop	{r4, pc}
   11830:	mov	r2, r0
   11834:	ldr	r1, [pc, #32]	; 1185c <sprintf@plt+0x22c>
   11838:	mov	r0, #67	; 0x43
   1183c:	bl	121fc <sprintf@plt+0xbcc>
   11840:	pop	{r4, pc}
   11844:	ldr	r2, [r4, #4]
   11848:	ldr	r1, [pc, #16]	; 11860 <sprintf@plt+0x230>
   1184c:	mov	r0, #67	; 0x43
   11850:	bl	121fc <sprintf@plt+0xbcc>
   11854:	pop	{r4, pc}
   11858:	andeq	sl, r2, r8, ror #2
   1185c:	muleq	r1, r0, ip
   11860:	ldrdeq	r8, [r1], -ip
   11864:	push	{r4, r5, r6, lr}
   11868:	mov	r4, r0
   1186c:	cmp	r0, #1
   11870:	ble	118b4 <sprintf@plt+0x284>
   11874:	mov	r5, r1
   11878:	ldr	r1, [r1, #4]
   1187c:	ldr	r3, [pc, #108]	; 118f0 <sprintf@plt+0x2c0>
   11880:	ldr	r0, [r3]
   11884:	bl	114f8 <rb_dictionary_retrieve@plt>
   11888:	cmp	r0, #0
   1188c:	beq	118c8 <sprintf@plt+0x298>
   11890:	sub	r1, r4, #2
   11894:	ldr	r2, [r0, #4]
   11898:	cmp	r1, r2
   1189c:	blt	118dc <sprintf@plt+0x2ac>
   118a0:	ldr	r3, [r0, #8]
   118a4:	add	r2, r5, #8
   118a8:	ldr	r0, [r5, #4]
   118ac:	blx	r3
   118b0:	pop	{r4, r5, r6, pc}
   118b4:	mov	r2, r0
   118b8:	ldr	r1, [pc, #52]	; 118f4 <sprintf@plt+0x2c4>
   118bc:	mov	r0, #67	; 0x43
   118c0:	bl	121fc <sprintf@plt+0xbcc>
   118c4:	pop	{r4, r5, r6, pc}
   118c8:	ldr	r2, [r5, #4]
   118cc:	ldr	r1, [pc, #36]	; 118f8 <sprintf@plt+0x2c8>
   118d0:	mov	r0, #67	; 0x43
   118d4:	bl	121fc <sprintf@plt+0xbcc>
   118d8:	pop	{r4, r5, r6, pc}
   118dc:	mov	r3, r4
   118e0:	ldr	r1, [pc, #20]	; 118fc <sprintf@plt+0x2cc>
   118e4:	mov	r0, #67	; 0x43
   118e8:	bl	121fc <sprintf@plt+0xbcc>
   118ec:	pop	{r4, r5, r6, pc}
   118f0:	andeq	pc, r2, r4, ror r1	; <UNPREDICTABLE>
   118f4:	andeq	r8, r1, r0, lsl sp
   118f8:	andeq	r8, r1, r0, ror #26
   118fc:	muleq	r1, r0, sp
   11900:	push	{r4, lr}
   11904:	mov	r0, #1
   11908:	bl	11618 <exit@plt>
   1190c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11910:	mov	r7, r0
   11914:	ldr	r4, [pc, #100]	; 11980 <sprintf@plt+0x350>
   11918:	add	r5, r4, #44	; 0x2c
   1191c:	mov	r6, #16384	; 0x4000
   11920:	mov	r8, #10
   11924:	ldr	r9, [pc, #88]	; 11984 <sprintf@plt+0x354>
   11928:	mov	r2, r6
   1192c:	mov	r1, r5
   11930:	mov	r0, r7
   11934:	bl	1154c <rb_helper_read@plt>
   11938:	cmp	r0, #0
   1193c:	ble	1197c <sprintf@plt+0x34c>
   11940:	mov	r2, r8
   11944:	mov	r1, r4
   11948:	mov	r0, r5
   1194c:	bl	113fc <rb_string_to_array@plt>
   11950:	cmp	r0, #0
   11954:	ble	11928 <sprintf@plt+0x2f8>
   11958:	ldr	r3, [r4]
   1195c:	ldrb	r3, [r3]
   11960:	add	r3, r9, r3, lsl #2
   11964:	ldr	r3, [r3, #2048]	; 0x800
   11968:	cmp	r3, #0
   1196c:	beq	11928 <sprintf@plt+0x2f8>
   11970:	mov	r1, r4
   11974:	blx	r3
   11978:	b	11928 <sprintf@plt+0x2f8>
   1197c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11980:	andeq	sl, r2, r0, asr pc
   11984:	andeq	sl, r2, r8, ror #2
   11988:	push	{r4, r5, lr}
   1198c:	sub	sp, sp, #148	; 0x94
   11990:	mov	r5, #0
   11994:	str	r5, [sp, #136]	; 0x88
   11998:	add	r4, sp, #144	; 0x90
   1199c:	mov	r3, #1
   119a0:	str	r3, [r4, #-140]!	; 0xffffff74
   119a4:	add	r0, sp, #8
   119a8:	bl	1124c <sigemptyset@plt>
   119ac:	mov	r1, #13
   119b0:	add	r0, sp, #8
   119b4:	bl	11498 <sigaddset@plt>
   119b8:	mov	r1, #14
   119bc:	add	r0, sp, #8
   119c0:	bl	11498 <sigaddset@plt>
   119c4:	mov	r1, #5
   119c8:	add	r0, sp, #8
   119cc:	bl	11498 <sigaddset@plt>
   119d0:	mov	r1, #28
   119d4:	add	r0, sp, #8
   119d8:	bl	11498 <sigaddset@plt>
   119dc:	mov	r2, r5
   119e0:	mov	r1, r4
   119e4:	mov	r0, #28
   119e8:	bl	11540 <sigaction@plt>
   119ec:	mov	r2, r5
   119f0:	mov	r1, r4
   119f4:	mov	r0, #13
   119f8:	bl	11540 <sigaction@plt>
   119fc:	mov	r2, r5
   11a00:	mov	r1, r4
   11a04:	mov	r0, #5
   11a08:	bl	11540 <sigaction@plt>
   11a0c:	ldr	r3, [pc, #24]	; 11a2c <sprintf@plt+0x3fc>
   11a10:	str	r3, [sp, #4]
   11a14:	mov	r2, r5
   11a18:	mov	r1, r4
   11a1c:	mov	r0, #14
   11a20:	bl	11540 <sigaction@plt>
   11a24:	add	sp, sp, #148	; 0x94
   11a28:	pop	{r4, r5, pc}
   11a2c:	ldrdeq	r1, [r1], -r0
   11a30:	push	{lr}		; (str lr, [sp, #-4]!)
   11a34:	sub	sp, sp, #20
   11a38:	bl	11988 <sprintf@plt+0x358>
   11a3c:	mov	r3, #256	; 0x100
   11a40:	str	r3, [sp, #12]
   11a44:	str	r3, [sp, #8]
   11a48:	str	r3, [sp, #4]
   11a4c:	mov	r2, #0
   11a50:	str	r2, [sp]
   11a54:	mov	r3, r2
   11a58:	ldr	r1, [pc, #116]	; 11ad4 <sprintf@plt+0x4a4>
   11a5c:	ldr	r0, [pc, #116]	; 11ad8 <sprintf@plt+0x4a8>
   11a60:	bl	1136c <rb_helper_child@plt>
   11a64:	ldr	r3, [pc, #112]	; 11adc <sprintf@plt+0x4ac>
   11a68:	str	r0, [r3, #60]	; 0x3c
   11a6c:	cmp	r0, #0
   11a70:	beq	11ab4 <sprintf@plt+0x484>
   11a74:	bl	11528 <rb_set_time@plt>
   11a78:	bl	11988 <sprintf@plt+0x358>
   11a7c:	ldr	r1, [pc, #92]	; 11ae0 <sprintf@plt+0x4b0>
   11a80:	ldr	r0, [pc, #92]	; 11ae4 <sprintf@plt+0x4b4>
   11a84:	bl	11570 <rb_dictionary_create@plt>
   11a88:	ldr	r3, [pc, #88]	; 11ae8 <sprintf@plt+0x4b8>
   11a8c:	str	r0, [r3]
   11a90:	bl	134f4 <sprintf@plt+0x1ec4>
   11a94:	bl	12524 <sprintf@plt+0xef4>
   11a98:	mov	r1, #1
   11a9c:	mov	r0, #0
   11aa0:	bl	114ec <rb_init_prng@plt>
   11aa4:	mov	r1, #0
   11aa8:	ldr	r3, [pc, #44]	; 11adc <sprintf@plt+0x4ac>
   11aac:	ldr	r0, [r3, #60]	; 0x3c
   11ab0:	bl	11264 <rb_helper_loop@plt>
   11ab4:	ldr	r3, [pc, #48]	; 11aec <sprintf@plt+0x4bc>
   11ab8:	ldr	r3, [r3]
   11abc:	mov	r2, #46	; 0x2e
   11ac0:	mov	r1, #1
   11ac4:	ldr	r0, [pc, #36]	; 11af0 <sprintf@plt+0x4c0>
   11ac8:	bl	114e0 <fwrite@plt>
   11acc:	mov	r0, #1
   11ad0:	bl	11618 <exit@plt>
   11ad4:	andeq	r1, r1, r0, lsl #18
   11ad8:	andeq	r1, r1, ip, lsl #18
   11adc:	andeq	lr, r2, r0, asr #30
   11ae0:	andeq	r1, r1, r4, lsl r4
   11ae4:	andeq	r8, r1, r0, lsl lr
   11ae8:	andeq	pc, r2, r4, ror r1	; <UNPREDICTABLE>
   11aec:	andeq	sl, r2, r8, asr #30
   11af0:	andeq	r8, r1, r0, ror #27
   11af4:	push	{r4, r5, lr}
   11af8:	sub	sp, sp, #60	; 0x3c
   11afc:	mov	r4, r0
   11b00:	mov	r5, r1
   11b04:	mov	r3, #42	; 0x2a
   11b08:	str	r3, [sp]
   11b0c:	mov	r2, #49	; 0x31
   11b10:	mov	r1, #0
   11b14:	add	r0, sp, #4
   11b18:	bl	11390 <memset@plt>
   11b1c:	cmp	r4, #0
   11b20:	beq	11b54 <sprintf@plt+0x524>
   11b24:	cmp	r5, #0
   11b28:	beq	11b74 <sprintf@plt+0x544>
   11b2c:	ldr	r2, [r4, #8]
   11b30:	cmp	r2, #52	; 0x34
   11b34:	beq	11b68 <sprintf@plt+0x538>
   11b38:	cmp	r2, #54	; 0x36
   11b3c:	beq	11bc0 <sprintf@plt+0x590>
   11b40:	ldr	r1, [pc, #196]	; 11c0c <sprintf@plt+0x5dc>
   11b44:	mov	r0, #67	; 0x43
   11b48:	bl	121fc <sprintf@plt+0xbcc>
   11b4c:	mov	r0, #2
   11b50:	bl	11618 <exit@plt>
   11b54:	ldr	r1, [pc, #180]	; 11c10 <sprintf@plt+0x5e0>
   11b58:	mov	r0, #67	; 0x43
   11b5c:	bl	121fc <sprintf@plt+0xbcc>
   11b60:	mov	r0, #2
   11b64:	bl	11618 <exit@plt>
   11b68:	ldrh	r3, [r5, #4]
   11b6c:	cmp	r3, #2
   11b70:	beq	11bac <sprintf@plt+0x57c>
   11b74:	ldr	r5, [r4, #152]	; 0x98
   11b78:	cmp	r5, #0
   11b7c:	beq	11b9c <sprintf@plt+0x56c>
   11b80:	add	r0, sp, #56	; 0x38
   11b84:	ldrb	r1, [r0, #-56]!	; 0xffffffc8
   11b88:	ldr	r3, [r4, #156]	; 0x9c
   11b8c:	ldr	r2, [r4, #8]
   11b90:	subs	r1, r1, #42	; 0x2a
   11b94:	movne	r1, #1
   11b98:	blx	r5
   11b9c:	mov	r0, r4
   11ba0:	bl	113f0 <free@plt>
   11ba4:	add	sp, sp, #60	; 0x3c
   11ba8:	pop	{r4, r5, pc}
   11bac:	mov	r2, #53	; 0x35
   11bb0:	mov	r1, sp
   11bb4:	add	r0, r5, #4
   11bb8:	bl	11558 <rb_inet_ntop_sock@plt>
   11bbc:	b	11b74 <sprintf@plt+0x544>
   11bc0:	ldrh	r3, [r5, #4]
   11bc4:	cmp	r3, #10
   11bc8:	bne	11b74 <sprintf@plt+0x544>
   11bcc:	mov	r2, #53	; 0x35
   11bd0:	mov	r1, sp
   11bd4:	add	r0, r5, #4
   11bd8:	bl	11558 <rb_inet_ntop_sock@plt>
   11bdc:	ldrb	r3, [sp]
   11be0:	cmp	r3, #58	; 0x3a
   11be4:	bne	11b74 <sprintf@plt+0x544>
   11be8:	mov	r0, sp
   11bec:	bl	11444 <strlen@plt>
   11bf0:	mov	r2, r0
   11bf4:	mov	r1, sp
   11bf8:	add	r0, sp, #1
   11bfc:	bl	1157c <memmove@plt>
   11c00:	mov	r3, #48	; 0x30
   11c04:	strb	r3, [sp]
   11c08:	b	11b74 <sprintf@plt+0x544>
   11c0c:	andeq	r8, r1, r4, asr lr
   11c10:	andeq	r8, r1, r8, lsr #28
   11c14:	push	{r4, r5, r6, lr}
   11c18:	subs	r4, r0, #0
   11c1c:	beq	11c88 <sprintf@plt+0x658>
   11c20:	mov	r5, r1
   11c24:	cmp	r1, #0
   11c28:	beq	11cc8 <sprintf@plt+0x698>
   11c2c:	ldr	r2, [r4, #8]
   11c30:	cmp	r2, #82	; 0x52
   11c34:	beq	11c9c <sprintf@plt+0x66c>
   11c38:	cmp	r2, #83	; 0x53
   11c3c:	bne	11cb4 <sprintf@plt+0x684>
   11c40:	mov	r2, #16
   11c44:	add	r1, r1, #12
   11c48:	add	r0, r4, #20
   11c4c:	bl	112b8 <memcmp@plt>
   11c50:	cmp	r0, #0
   11c54:	movne	r0, #0
   11c58:	ldreq	r0, [r5]
   11c5c:	ldr	r5, [r4, #152]	; 0x98
   11c60:	cmp	r5, #0
   11c64:	beq	11c7c <sprintf@plt+0x64c>
   11c68:	ldr	r3, [r4, #156]	; 0x9c
   11c6c:	ldr	r2, [r4, #8]
   11c70:	adds	r1, r0, #0
   11c74:	movne	r1, #1
   11c78:	blx	r5
   11c7c:	mov	r0, r4
   11c80:	bl	113f0 <free@plt>
   11c84:	pop	{r4, r5, r6, pc}
   11c88:	ldr	r1, [pc, #64]	; 11cd0 <sprintf@plt+0x6a0>
   11c8c:	mov	r0, #67	; 0x43
   11c90:	bl	121fc <sprintf@plt+0xbcc>
   11c94:	mov	r0, #2
   11c98:	bl	11618 <exit@plt>
   11c9c:	ldr	r2, [r4, #16]
   11ca0:	ldr	r3, [r1, #8]
   11ca4:	cmp	r2, r3
   11ca8:	ldreq	r0, [r1]
   11cac:	movne	r0, #0
   11cb0:	b	11c5c <sprintf@plt+0x62c>
   11cb4:	ldr	r1, [pc, #24]	; 11cd4 <sprintf@plt+0x6a4>
   11cb8:	mov	r0, #67	; 0x43
   11cbc:	bl	121fc <sprintf@plt+0xbcc>
   11cc0:	mov	r0, #2
   11cc4:	bl	11618 <exit@plt>
   11cc8:	mov	r0, #0
   11ccc:	b	11c5c <sprintf@plt+0x62c>
   11cd0:	andeq	r8, r1, r8, lsl #29
   11cd4:			; <UNDEFINED> instruction: 0x00018ebc
   11cd8:	push	{r4, lr}
   11cdc:	sub	sp, sp, #8
   11ce0:	cmp	r2, #0
   11ce4:	cmpne	r3, #0
   11ce8:	beq	11d34 <sprintf@plt+0x704>
   11cec:	mov	r4, r3
   11cf0:	eor	r1, r1, #1
   11cf4:	cmp	r0, #0
   11cf8:	orreq	r1, r1, #1
   11cfc:	cmp	r1, #0
   11d00:	beq	11d48 <sprintf@plt+0x718>
   11d04:	mov	r3, r2
   11d08:	mov	r2, r4
   11d0c:	ldr	r1, [pc, #104]	; 11d7c <sprintf@plt+0x74c>
   11d10:	ldr	r0, [pc, #104]	; 11d80 <sprintf@plt+0x750>
   11d14:	ldr	r0, [r0]
   11d18:	bl	11594 <rb_helper_write@plt>
   11d1c:	cmp	r4, #0
   11d20:	beq	11d2c <sprintf@plt+0x6fc>
   11d24:	mov	r0, r4
   11d28:	bl	113f0 <free@plt>
   11d2c:	add	sp, sp, #8
   11d30:	pop	{r4, pc}
   11d34:	ldr	r1, [pc, #72]	; 11d84 <sprintf@plt+0x754>
   11d38:	mov	r0, #67	; 0x43
   11d3c:	bl	121fc <sprintf@plt+0xbcc>
   11d40:	mov	r0, #2
   11d44:	bl	11618 <exit@plt>
   11d48:	ldr	r3, [pc, #48]	; 11d80 <sprintf@plt+0x750>
   11d4c:	ldr	lr, [r3]
   11d50:	str	r0, [sp]
   11d54:	mov	r3, r2
   11d58:	mov	r2, r4
   11d5c:	ldr	r1, [pc, #36]	; 11d88 <sprintf@plt+0x758>
   11d60:	mov	r0, lr
   11d64:	bl	11594 <rb_helper_write@plt>
   11d68:	cmp	r4, #0
   11d6c:	beq	11d2c <sprintf@plt+0x6fc>
   11d70:	mov	r0, r4
   11d74:	bl	113f0 <free@plt>
   11d78:	b	11d2c <sprintf@plt+0x6fc>
   11d7c:	andeq	r8, r1, r4, lsr #30
   11d80:	andeq	lr, r2, ip, ror pc
   11d84:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11d88:	andeq	r8, r1, r0, lsr pc
   11d8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d90:	mov	r6, r0
   11d94:	mov	r5, r1
   11d98:	mov	r8, r2
   11d9c:	mov	r7, r3
   11da0:	mov	r1, #160	; 0xa0
   11da4:	mov	r0, #1
   11da8:	bl	11360 <calloc@plt>
   11dac:	subs	r4, r0, #0
   11db0:	beq	11dec <sprintf@plt+0x7bc>
   11db4:	cmp	r5, #2
   11db8:	moveq	r3, #52	; 0x34
   11dbc:	streq	r3, [r4, #8]
   11dc0:	moveq	r2, #1
   11dc4:	beq	11df0 <sprintf@plt+0x7c0>
   11dc8:	cmp	r5, #10
   11dcc:	moveq	r3, #54	; 0x36
   11dd0:	streq	r3, [r4, #8]
   11dd4:	moveq	r2, #28
   11dd8:	beq	11df0 <sprintf@plt+0x7c0>
   11ddc:	mov	r0, r4
   11de0:	bl	113f0 <free@plt>
   11de4:	mov	r0, #0
   11de8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11dec:	bl	11504 <rb_outofmemory@plt>
   11df0:	ldr	r3, [pc, #56]	; 11e30 <sprintf@plt+0x800>
   11df4:	ldrd	r0, [r3]
   11df8:	adds	sl, r0, #1
   11dfc:	adc	fp, r1, #0
   11e00:	strd	sl, [r3]
   11e04:	strd	r0, [r4, #144]	; 0x90
   11e08:	str	r8, [r4, #152]	; 0x98
   11e0c:	str	r7, [r4, #156]	; 0x9c
   11e10:	str	r4, [r4]
   11e14:	ldr	r3, [pc, #24]	; 11e34 <sprintf@plt+0x804>
   11e18:	str	r3, [r4, #4]
   11e1c:	mov	r1, r4
   11e20:	mov	r0, r6
   11e24:	bl	1352c <sprintf@plt+0x1efc>
   11e28:	mov	r0, r4
   11e2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e30:	andeq	lr, r2, r0, lsl #31
   11e34:	strdeq	r1, [r1], -r4
   11e38:	push	{r4, r5, r6, r7, r8, lr}
   11e3c:	mov	r6, r0
   11e40:	mov	r8, r1
   11e44:	mov	r7, r2
   11e48:	mov	r1, #160	; 0xa0
   11e4c:	mov	r0, #1
   11e50:	bl	11360 <calloc@plt>
   11e54:	subs	r4, r0, #0
   11e58:	beq	11e84 <sprintf@plt+0x854>
   11e5c:	add	r5, r4, #12
   11e60:	mov	r1, r5
   11e64:	mov	r0, r6
   11e68:	bl	11438 <rb_inet_pton_sock@plt>
   11e6c:	cmp	r0, #0
   11e70:	bne	11e88 <sprintf@plt+0x858>
   11e74:	mov	r0, r4
   11e78:	bl	113f0 <free@plt>
   11e7c:	mov	r0, #0
   11e80:	pop	{r4, r5, r6, r7, r8, pc}
   11e84:	bl	11504 <rb_outofmemory@plt>
   11e88:	ldrh	r3, [r4, #12]
   11e8c:	cmp	r3, #2
   11e90:	moveq	r3, #82	; 0x52
   11e94:	streq	r3, [r4, #8]
   11e98:	beq	11ebc <sprintf@plt+0x88c>
   11e9c:	cmp	r3, #10
   11ea0:	moveq	r3, #83	; 0x53
   11ea4:	streq	r3, [r4, #8]
   11ea8:	beq	11ebc <sprintf@plt+0x88c>
   11eac:	mov	r0, r4
   11eb0:	bl	113f0 <free@plt>
   11eb4:	mov	r0, #0
   11eb8:	pop	{r4, r5, r6, r7, r8, pc}
   11ebc:	ldr	ip, [pc, #56]	; 11efc <sprintf@plt+0x8cc>
   11ec0:	ldrd	r2, [ip]
   11ec4:	adds	r0, r2, #1
   11ec8:	adc	r1, r3, #0
   11ecc:	strd	r0, [ip]
   11ed0:	strd	r2, [r4, #144]	; 0x90
   11ed4:	str	r8, [r4, #152]	; 0x98
   11ed8:	str	r7, [r4, #156]	; 0x9c
   11edc:	str	r4, [r4]
   11ee0:	ldr	r3, [pc, #24]	; 11f00 <sprintf@plt+0x8d0>
   11ee4:	str	r3, [r4, #4]
   11ee8:	mov	r1, r4
   11eec:	mov	r0, r5
   11ef0:	bl	13f74 <sprintf@plt+0x2944>
   11ef4:	mov	r0, r4
   11ef8:	pop	{r4, r5, r6, r7, r8, pc}
   11efc:	andeq	lr, r2, r0, lsl #31
   11f00:	andeq	r1, r1, r4, lsl ip
   11f04:	mov	r3, #0
   11f08:	str	r3, [r0, #156]	; 0x9c
   11f0c:	str	r3, [r0, #152]	; 0x98
   11f10:	bx	lr
   11f14:	push	{r4, r5, r6, lr}
   11f18:	mov	r4, r1
   11f1c:	ldr	r5, [r1, #4]
   11f20:	mov	r0, r5
   11f24:	bl	11444 <strlen@plt>
   11f28:	add	r0, r0, #1
   11f2c:	bl	11534 <malloc@plt>
   11f30:	subs	r6, r0, #0
   11f34:	beq	11fe0 <sprintf@plt+0x9b0>
   11f38:	mov	r1, r5
   11f3c:	mov	r0, r6
   11f40:	bl	114a4 <strcpy@plt>
   11f44:	ldr	r3, [r4, #8]
   11f48:	ldrb	r5, [r3]
   11f4c:	ldr	r0, [r4, #12]
   11f50:	sub	r3, r5, #52	; 0x34
   11f54:	cmp	r3, #31
   11f58:	ldrls	pc, [pc, r3, lsl #2]
   11f5c:	b	12048 <sprintf@plt+0xa18>
   11f60:	andeq	r1, r1, ip, ror #31
   11f64:	andeq	r2, r1, r8, asr #32
   11f68:	andeq	r1, r1, r4, ror #31
   11f6c:	andeq	r2, r1, r8, asr #32
   11f70:	andeq	r2, r1, r8, asr #32
   11f74:	andeq	r2, r1, r8, asr #32
   11f78:	andeq	r2, r1, r8, asr #32
   11f7c:	andeq	r2, r1, r8, asr #32
   11f80:	andeq	r2, r1, r8, asr #32
   11f84:	andeq	r2, r1, r8, asr #32
   11f88:	andeq	r2, r1, r8, asr #32
   11f8c:	andeq	r2, r1, r8, asr #32
   11f90:	andeq	r2, r1, r8, asr #32
   11f94:	andeq	r2, r1, r8, asr #32
   11f98:	andeq	r2, r1, r8, asr #32
   11f9c:	andeq	r2, r1, r8, asr #32
   11fa0:	andeq	r2, r1, r8, asr #32
   11fa4:	andeq	r2, r1, r8, asr #32
   11fa8:	andeq	r2, r1, r8, asr #32
   11fac:	andeq	r2, r1, r8, asr #32
   11fb0:	andeq	r2, r1, r8, asr #32
   11fb4:	andeq	r2, r1, r8, asr #32
   11fb8:	andeq	r2, r1, r8, asr #32
   11fbc:	andeq	r2, r1, r8, asr #32
   11fc0:	andeq	r2, r1, r8, asr #32
   11fc4:	andeq	r2, r1, r8, asr #32
   11fc8:	andeq	r2, r1, r8, asr #32
   11fcc:	andeq	r2, r1, r8, asr #32
   11fd0:	andeq	r2, r1, r8, asr #32
   11fd4:	andeq	r2, r1, r8, asr #32
   11fd8:	andeq	r2, r1, ip, lsl r0
   11fdc:	andeq	r2, r1, ip, lsl r0
   11fe0:	bl	11504 <rb_outofmemory@plt>
   11fe4:	mov	r1, #10
   11fe8:	b	11ff0 <sprintf@plt+0x9c0>
   11fec:	mov	r1, #2
   11ff0:	mov	r3, r6
   11ff4:	ldr	r2, [pc, #100]	; 12060 <sprintf@plt+0xa30>
   11ff8:	bl	11d8c <sprintf@plt+0x75c>
   11ffc:	cmp	r0, #0
   12000:	popne	{r4, r5, r6, pc}
   12004:	mov	r3, #0
   12008:	mov	r2, r5
   1200c:	mov	r1, r3
   12010:	mov	r0, r3
   12014:	bl	11cd8 <sprintf@plt+0x6a8>
   12018:	pop	{r4, r5, r6, pc}
   1201c:	mov	r2, r6
   12020:	ldr	r1, [pc, #56]	; 12060 <sprintf@plt+0xa30>
   12024:	bl	11e38 <sprintf@plt+0x808>
   12028:	cmp	r0, #0
   1202c:	popne	{r4, r5, r6, pc}
   12030:	mov	r3, #0
   12034:	mov	r2, r5
   12038:	mov	r1, r3
   1203c:	mov	r0, r3
   12040:	bl	11cd8 <sprintf@plt+0x6a8>
   12044:	pop	{r4, r5, r6, pc}
   12048:	mov	r2, r5
   1204c:	ldr	r1, [pc, #16]	; 12064 <sprintf@plt+0xa34>
   12050:	mov	r0, #67	; 0x43
   12054:	bl	121fc <sprintf@plt+0xbcc>
   12058:	mov	r0, #2
   1205c:	bl	11618 <exit@plt>
   12060:	ldrdeq	r1, [r1], -r8
   12064:	andeq	r8, r1, r0, asr #30
   12068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1206c:	sub	sp, sp, #612	; 0x264
   12070:	str	r0, [sp, #4]
   12074:	mov	fp, r1
   12078:	ldr	r3, [pc, #248]	; 12178 <sprintf@plt+0xb48>
   1207c:	ldr	r3, [r3]
   12080:	cmp	r3, #0
   12084:	beq	12130 <sprintf@plt+0xb00>
   12088:	ble	12114 <sprintf@plt+0xae4>
   1208c:	ldr	r7, [pc, #232]	; 1217c <sprintf@plt+0xb4c>
   12090:	mov	r6, #0
   12094:	mov	r4, r6
   12098:	mov	sl, #53	; 0x35
   1209c:	ldr	r9, [pc, #220]	; 12180 <sprintf@plt+0xb50>
   120a0:	ldr	r8, [pc, #208]	; 12178 <sprintf@plt+0xb48>
   120a4:	mov	r2, sl
   120a8:	add	r1, sp, #12
   120ac:	mov	r0, r7
   120b0:	bl	11558 <rb_inet_ntop_sock@plt>
   120b4:	ldrb	r3, [sp, #12]
   120b8:	cmp	r3, #0
   120bc:	beq	12154 <sprintf@plt+0xb24>
   120c0:	add	r0, sp, #12
   120c4:	bl	11444 <strlen@plt>
   120c8:	mov	r5, r0
   120cc:	add	r3, sp, #12
   120d0:	mov	r2, r9
   120d4:	rsb	r1, r4, #540	; 0x21c
   120d8:	add	r0, sp, #68	; 0x44
   120dc:	add	r0, r0, r4
   120e0:	bl	115c4 <snprintf@plt>
   120e4:	add	r5, r5, #1
   120e8:	add	r4, r4, r5
   120ec:	add	r6, r6, #1
   120f0:	add	r7, r7, #128	; 0x80
   120f4:	ldr	r3, [r8]
   120f8:	cmp	r3, r6
   120fc:	bgt	120a4 <sprintf@plt+0xa74>
   12100:	cmp	r4, #0
   12104:	addne	r3, sp, #608	; 0x260
   12108:	addne	r4, r3, r4
   1210c:	movne	r3, #0
   12110:	strbne	r3, [r4, #-541]	; 0xfffffde3
   12114:	add	r3, sp, #68	; 0x44
   12118:	ldr	r2, [pc, #100]	; 12184 <sprintf@plt+0xb54>
   1211c:	mov	r1, fp
   12120:	ldr	r0, [sp, #4]
   12124:	bl	12254 <sprintf@plt+0xc24>
   12128:	add	sp, sp, #612	; 0x264
   1212c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12130:	ldr	r1, [pc, #80]	; 12188 <sprintf@plt+0xb58>
   12134:	mov	r0, #67	; 0x43
   12138:	bl	121fc <sprintf@plt+0xbcc>
   1213c:	ldr	r2, [pc, #72]	; 1218c <sprintf@plt+0xb5c>
   12140:	mov	r1, fp
   12144:	ldr	r0, [sp, #4]
   12148:	bl	122b8 <sprintf@plt+0xc88>
   1214c:	mov	r0, #2
   12150:	bl	11618 <exit@plt>
   12154:	ldr	r1, [pc, #52]	; 12190 <sprintf@plt+0xb60>
   12158:	mov	r0, #67	; 0x43
   1215c:	bl	121fc <sprintf@plt+0xbcc>
   12160:	ldr	r2, [pc, #44]	; 12194 <sprintf@plt+0xb64>
   12164:	mov	r1, fp
   12168:	ldr	r0, [sp, #4]
   1216c:	bl	122b8 <sprintf@plt+0xc88>
   12170:	mov	r0, #2
   12174:	bl	11618 <exit@plt>
   12178:	ldrdeq	lr, [r2], -ip
   1217c:	muleq	r2, ip, r2
   12180:	andeq	r8, r1, r8, asr #31
   12184:	andeq	r9, r1, r0, lsr #22
   12188:	andeq	r8, r1, r4, ror pc
   1218c:	andeq	r8, r1, ip, lsl #31
   12190:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12194:			; <UNDEFINED> instruction: 0x00018fb4
   12198:	push	{r4, lr}
   1219c:	bl	13500 <sprintf@plt+0x1ed0>
   121a0:	pop	{r4, pc}
   121a4:	push	{r1, r2, r3}
   121a8:	push	{r4, lr}
   121ac:	sub	sp, sp, #524	; 0x20c
   121b0:	mov	r4, r0
   121b4:	add	r3, sp, #536	; 0x218
   121b8:	str	r3, [sp, #4]
   121bc:	ldr	r2, [sp, #532]	; 0x214
   121c0:	mov	r1, #512	; 0x200
   121c4:	add	r0, sp, #8
   121c8:	bl	11300 <vsnprintf@plt>
   121cc:	add	r3, sp, #8
   121d0:	mov	r2, r4
   121d4:	ldr	r1, [pc, #24]	; 121f4 <sprintf@plt+0xbc4>
   121d8:	ldr	r0, [pc, #24]	; 121f8 <sprintf@plt+0xbc8>
   121dc:	ldr	r0, [r0]
   121e0:	bl	11594 <rb_helper_write@plt>
   121e4:	add	sp, sp, #524	; 0x20c
   121e8:	pop	{r4, lr}
   121ec:	add	sp, sp, #12
   121f0:	bx	lr
   121f4:	andeq	r8, r1, ip, asr #31
   121f8:	andeq	lr, r2, ip, ror pc
   121fc:	push	{r1, r2, r3}
   12200:	push	{r4, lr}
   12204:	sub	sp, sp, #524	; 0x20c
   12208:	mov	r4, r0
   1220c:	add	r3, sp, #536	; 0x218
   12210:	str	r3, [sp, #4]
   12214:	ldr	r2, [sp, #532]	; 0x214
   12218:	mov	r1, #512	; 0x200
   1221c:	add	r0, sp, #8
   12220:	bl	11300 <vsnprintf@plt>
   12224:	add	r3, sp, #8
   12228:	mov	r2, r4
   1222c:	ldr	r1, [pc, #24]	; 1224c <sprintf@plt+0xc1c>
   12230:	ldr	r0, [pc, #24]	; 12250 <sprintf@plt+0xc20>
   12234:	ldr	r0, [r0]
   12238:	bl	11594 <rb_helper_write@plt>
   1223c:	add	sp, sp, #524	; 0x20c
   12240:	pop	{r4, lr}
   12244:	add	sp, sp, #12
   12248:	bx	lr
   1224c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12250:	andeq	lr, r2, ip, ror pc
   12254:	push	{r2, r3}
   12258:	push	{r4, r5, r6, lr}
   1225c:	sub	sp, sp, #528	; 0x210
   12260:	mov	r5, r0
   12264:	mov	r6, r1
   12268:	add	r3, sp, #548	; 0x224
   1226c:	str	r3, [sp, #12]
   12270:	add	r4, sp, #16
   12274:	ldr	r2, [sp, #544]	; 0x220
   12278:	mov	r1, #512	; 0x200
   1227c:	mov	r0, r4
   12280:	bl	11300 <vsnprintf@plt>
   12284:	ldr	r3, [pc, #36]	; 122b0 <sprintf@plt+0xc80>
   12288:	ldr	r0, [r3]
   1228c:	str	r4, [sp]
   12290:	mov	r3, r6
   12294:	mov	r2, r5
   12298:	ldr	r1, [pc, #20]	; 122b4 <sprintf@plt+0xc84>
   1229c:	bl	11594 <rb_helper_write@plt>
   122a0:	add	sp, sp, #528	; 0x210
   122a4:	pop	{r4, r5, r6, lr}
   122a8:	add	sp, sp, #8
   122ac:	bx	lr
   122b0:	andeq	lr, r2, ip, ror pc
   122b4:	andeq	r8, r1, r4, ror #31
   122b8:	push	{r2, r3}
   122bc:	push	{r4, r5, r6, lr}
   122c0:	sub	sp, sp, #528	; 0x210
   122c4:	mov	r5, r0
   122c8:	mov	r6, r1
   122cc:	add	r3, sp, #548	; 0x224
   122d0:	str	r3, [sp, #12]
   122d4:	add	r4, sp, #16
   122d8:	ldr	r2, [sp, #544]	; 0x220
   122dc:	mov	r1, #512	; 0x200
   122e0:	mov	r0, r4
   122e4:	bl	11300 <vsnprintf@plt>
   122e8:	ldr	r3, [pc, #36]	; 12314 <sprintf@plt+0xce4>
   122ec:	ldr	r0, [r3]
   122f0:	str	r4, [sp]
   122f4:	mov	r3, r6
   122f8:	mov	r2, r5
   122fc:	ldr	r1, [pc, #20]	; 12318 <sprintf@plt+0xce8>
   12300:	bl	11594 <rb_helper_write@plt>
   12304:	add	sp, sp, #528	; 0x210
   12308:	pop	{r4, r5, r6, lr}
   1230c:	add	sp, sp, #8
   12310:	bx	lr
   12314:	andeq	lr, r2, ip, ror pc
   12318:	strdeq	r8, [r1], -r0
   1231c:	push	{r4, lr}
   12320:	mov	r3, r1
   12324:	mov	r2, r0
   12328:	ldr	r1, [pc, #12]	; 1233c <sprintf@plt+0xd0c>
   1232c:	ldr	r0, [pc, #12]	; 12340 <sprintf@plt+0xd10>
   12330:	ldr	r0, [r0]
   12334:	bl	11594 <rb_helper_write@plt>
   12338:	pop	{r4, pc}
   1233c:	strdeq	r8, [r1], -ip
   12340:	andeq	lr, r2, ip, ror pc
   12344:	sub	r0, r1, r0
   12348:	bx	lr
   1234c:	push	{r4, r5, r6, lr}
   12350:	mov	r5, r0
   12354:	ldr	r3, [pc, #416]	; 124fc <sprintf@plt+0xecc>
   12358:	ldr	r3, [r3, #8]
   1235c:	cmp	r3, #0
   12360:	bne	1242c <sprintf@plt+0xdfc>
   12364:	ldr	r3, [pc, #400]	; 124fc <sprintf@plt+0xecc>
   12368:	ldr	r3, [r3, #12]
   1236c:	cmn	r3, #1
   12370:	cmpne	r3, #32
   12374:	beq	124ac <sprintf@plt+0xe7c>
   12378:	add	r1, r3, #1
   1237c:	ldr	r2, [pc, #376]	; 124fc <sprintf@plt+0xecc>
   12380:	str	r1, [r2, #12]
   12384:	str	r3, [r0, #12]
   12388:	ldr	r4, [r5, #56]	; 0x38
   1238c:	cmp	r4, #0
   12390:	beq	123bc <sprintf@plt+0xd8c>
   12394:	ldr	r1, [r4]
   12398:	cmp	r1, #0
   1239c:	beq	123bc <sprintf@plt+0xd8c>
   123a0:	ldr	r6, [pc, #344]	; 12500 <sprintf@plt+0xed0>
   123a4:	mov	r2, r4
   123a8:	ldr	r0, [r6]
   123ac:	bl	1151c <rb_dictionary_add@plt>
   123b0:	ldr	r1, [r4, #12]!
   123b4:	cmp	r1, #0
   123b8:	bne	123a4 <sprintf@plt+0xd74>
   123bc:	ldrb	r3, [r5, #48]	; 0x30
   123c0:	cmp	r3, #0
   123c4:	ldrne	r1, [r5, #52]	; 0x34
   123c8:	ldrne	r2, [pc, #308]	; 12504 <sprintf@plt+0xed4>
   123cc:	strne	r1, [r2, r3, lsl #2]
   123d0:	ldr	r3, [r5, #24]
   123d4:	cmp	r3, #0
   123d8:	beq	123e0 <sprintf@plt+0xdb0>
   123dc:	blx	r3
   123e0:	cmp	r5, #0
   123e4:	beq	124bc <sprintf@plt+0xe8c>
   123e8:	cmp	r5, #0
   123ec:	beq	124d0 <sprintf@plt+0xea0>
   123f0:	str	r5, [r5]
   123f4:	mov	r3, #0
   123f8:	str	r3, [r5, #4]
   123fc:	ldr	r3, [pc, #260]	; 12508 <sprintf@plt+0xed8>
   12400:	ldr	r3, [r3]
   12404:	str	r3, [r5, #8]
   12408:	cmp	r3, #0
   1240c:	strne	r5, [r3, #4]
   12410:	beq	124e4 <sprintf@plt+0xeb4>
   12414:	ldr	r3, [pc, #236]	; 12508 <sprintf@plt+0xed8>
   12418:	str	r5, [r3]
   1241c:	ldr	r2, [r3, #8]
   12420:	add	r2, r2, #1
   12424:	str	r2, [r3, #8]
   12428:	pop	{r4, r5, r6, pc}
   1242c:	ldr	r3, [pc, #200]	; 124fc <sprintf@plt+0xecc>
   12430:	ldr	r3, [r3]
   12434:	ldr	r2, [r3]
   12438:	str	r2, [r0, #12]
   1243c:	cmp	r3, #0
   12440:	beq	12498 <sprintf@plt+0xe68>
   12444:	ldr	r2, [r3, #8]
   12448:	cmp	r2, #0
   1244c:	ldr	r1, [r3, #4]
   12450:	ldreq	r2, [pc, #164]	; 124fc <sprintf@plt+0xecc>
   12454:	str	r1, [r2, #4]
   12458:	ldr	r2, [r3, #4]
   1245c:	cmp	r2, #0
   12460:	ldr	r1, [r3, #8]
   12464:	strne	r1, [r2, #8]
   12468:	ldreq	r2, [pc, #140]	; 124fc <sprintf@plt+0xecc>
   1246c:	streq	r1, [r2]
   12470:	mov	r2, #0
   12474:	str	r2, [r3, #4]
   12478:	str	r2, [r3, #8]
   1247c:	ldr	r3, [pc, #120]	; 124fc <sprintf@plt+0xecc>
   12480:	ldr	r2, [r3, #8]
   12484:	sub	r2, r2, #1
   12488:	str	r2, [r3, #8]
   1248c:	ldr	r0, [r3]
   12490:	bl	11474 <rb_free_rb_dlink_node@plt>
   12494:	b	12388 <sprintf@plt+0xd58>
   12498:	ldr	r3, [pc, #108]	; 1250c <sprintf@plt+0xedc>
   1249c:	mov	r2, #235	; 0xeb
   124a0:	ldr	r1, [pc, #104]	; 12510 <sprintf@plt+0xee0>
   124a4:	ldr	r0, [pc, #104]	; 12514 <sprintf@plt+0xee4>
   124a8:	bl	113c0 <__assert_fail@plt>
   124ac:	ldr	r1, [pc, #100]	; 12518 <sprintf@plt+0xee8>
   124b0:	mov	r0, #87	; 0x57
   124b4:	bl	121fc <sprintf@plt+0xbcc>
   124b8:	pop	{r4, r5, r6, pc}
   124bc:	ldr	r3, [pc, #88]	; 1251c <sprintf@plt+0xeec>
   124c0:	mov	r2, #143	; 0x8f
   124c4:	ldr	r1, [pc, #68]	; 12510 <sprintf@plt+0xee0>
   124c8:	ldr	r0, [pc, #80]	; 12520 <sprintf@plt+0xef0>
   124cc:	bl	113c0 <__assert_fail@plt>
   124d0:	ldr	r3, [pc, #68]	; 1251c <sprintf@plt+0xeec>
   124d4:	mov	r2, #144	; 0x90
   124d8:	ldr	r1, [pc, #48]	; 12510 <sprintf@plt+0xee0>
   124dc:	ldr	r0, [pc, #48]	; 12514 <sprintf@plt+0xee4>
   124e0:	bl	113c0 <__assert_fail@plt>
   124e4:	ldr	r3, [pc, #28]	; 12508 <sprintf@plt+0xed8>
   124e8:	ldr	r3, [r3, #4]
   124ec:	cmp	r3, #0
   124f0:	ldreq	r3, [pc, #16]	; 12508 <sprintf@plt+0xed8>
   124f4:	streq	r5, [r3, #4]
   124f8:	b	12414 <sprintf@plt+0xde4>
   124fc:	andeq	lr, r2, r8, lsl #31
   12500:	andeq	pc, r2, r4, ror r1	; <UNPREDICTABLE>
   12504:	andeq	sl, r2, r8, ror #10
   12508:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   1250c:	andeq	r9, r1, r4
   12510:	andeq	r9, r1, r0, lsr #32
   12514:	andeq	r9, r1, ip, lsr r0
   12518:	andeq	r9, r1, r8, asr #32
   1251c:	andeq	r9, r1, r4, lsl r0
   12520:	andeq	r9, r1, r8, ror r0
   12524:	push	{r4, lr}
   12528:	ldr	r1, [pc, #76]	; 1257c <sprintf@plt+0xf4c>
   1252c:	ldr	r0, [pc, #76]	; 12580 <sprintf@plt+0xf50>
   12530:	bl	11570 <rb_dictionary_create@plt>
   12534:	ldr	r3, [pc, #72]	; 12584 <sprintf@plt+0xf54>
   12538:	str	r0, [r3]
   1253c:	mov	r3, #1
   12540:	mov	r2, #0
   12544:	ldr	r1, [pc, #60]	; 12588 <sprintf@plt+0xf58>
   12548:	ldr	r0, [pc, #60]	; 1258c <sprintf@plt+0xf5c>
   1254c:	bl	1127c <rb_event_addish@plt>
   12550:	ldr	r3, [pc, #56]	; 12590 <sprintf@plt+0xf60>
   12554:	str	r0, [r3, #16]
   12558:	ldr	r0, [pc, #52]	; 12594 <sprintf@plt+0xf64>
   1255c:	bl	1234c <sprintf@plt+0xd1c>
   12560:	ldr	r0, [pc, #48]	; 12598 <sprintf@plt+0xf68>
   12564:	bl	1234c <sprintf@plt+0xd1c>
   12568:	ldr	r0, [pc, #44]	; 1259c <sprintf@plt+0xf6c>
   1256c:	bl	1234c <sprintf@plt+0xd1c>
   12570:	ldr	r0, [pc, #40]	; 125a0 <sprintf@plt+0xf70>
   12574:	bl	1234c <sprintf@plt+0xd1c>
   12578:	pop	{r4, pc}
   1257c:	andeq	r2, r1, r4, asr #6
   12580:	andeq	r9, r1, r8, lsl #1
   12584:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   12588:	andeq	r2, r1, ip, asr r7
   1258c:	andeq	r9, r1, r0, lsr #1
   12590:	andeq	lr, r2, r8, lsl #31
   12594:	andeq	sl, r2, ip, ror #26
   12598:	andeq	sl, r2, r4, lsr #29
   1259c:	andeq	sl, r2, r0, asr lr
   125a0:	andeq	sl, r2, ip, ror #27
   125a4:	push	{r4, r5, r6, lr}
   125a8:	mov	r5, r0
   125ac:	ldr	r4, [r0, #56]	; 0x38
   125b0:	cmp	r4, #0
   125b4:	beq	125dc <sprintf@plt+0xfac>
   125b8:	ldr	r1, [r4]
   125bc:	cmp	r1, #0
   125c0:	beq	125dc <sprintf@plt+0xfac>
   125c4:	ldr	r6, [pc, #300]	; 126f8 <sprintf@plt+0x10c8>
   125c8:	ldr	r0, [r6]
   125cc:	bl	1145c <rb_dictionary_delete@plt>
   125d0:	ldr	r1, [r4, #12]!
   125d4:	cmp	r1, #0
   125d8:	bne	125c8 <sprintf@plt+0xf98>
   125dc:	ldrb	r3, [r5, #48]	; 0x30
   125e0:	cmp	r3, #0
   125e4:	movne	r1, #0
   125e8:	ldrne	r2, [pc, #268]	; 126fc <sprintf@plt+0x10cc>
   125ec:	strne	r1, [r2, r3, lsl #2]
   125f0:	ldr	r3, [r5, #28]
   125f4:	cmp	r3, #0
   125f8:	beq	12600 <sprintf@plt+0xfd0>
   125fc:	blx	r3
   12600:	cmp	r5, #0
   12604:	beq	126a4 <sprintf@plt+0x1074>
   12608:	ldr	r3, [r5, #8]
   1260c:	cmp	r3, #0
   12610:	ldr	r2, [r5, #4]
   12614:	ldreq	r3, [pc, #228]	; 12700 <sprintf@plt+0x10d0>
   12618:	str	r2, [r3, #4]
   1261c:	ldr	r3, [r5, #4]
   12620:	cmp	r3, #0
   12624:	ldr	r2, [r5, #8]
   12628:	strne	r2, [r3, #8]
   1262c:	ldreq	r3, [pc, #204]	; 12700 <sprintf@plt+0x10d0>
   12630:	streq	r2, [r3]
   12634:	mov	r3, #0
   12638:	str	r3, [r5, #4]
   1263c:	str	r3, [r5, #8]
   12640:	ldr	r2, [pc, #184]	; 12700 <sprintf@plt+0x10d0>
   12644:	ldr	r3, [r2, #8]
   12648:	sub	r3, r3, #1
   1264c:	str	r3, [r2, #8]
   12650:	ldr	r4, [r5, #12]
   12654:	bl	115b8 <rb_make_rb_dlink_node@plt>
   12658:	cmp	r4, #0
   1265c:	beq	126b8 <sprintf@plt+0x1088>
   12660:	cmp	r0, #0
   12664:	beq	126cc <sprintf@plt+0x109c>
   12668:	str	r4, [r0]
   1266c:	mov	r3, #0
   12670:	str	r3, [r0, #4]
   12674:	ldr	r3, [pc, #136]	; 12704 <sprintf@plt+0x10d4>
   12678:	ldr	r3, [r3]
   1267c:	str	r3, [r0, #8]
   12680:	cmp	r3, #0
   12684:	strne	r0, [r3, #4]
   12688:	beq	126e0 <sprintf@plt+0x10b0>
   1268c:	ldr	r3, [pc, #112]	; 12704 <sprintf@plt+0x10d4>
   12690:	str	r0, [r3]
   12694:	ldr	r2, [r3, #8]
   12698:	add	r2, r2, #1
   1269c:	str	r2, [r3, #8]
   126a0:	pop	{r4, r5, r6, pc}
   126a4:	ldr	r3, [pc, #92]	; 12708 <sprintf@plt+0x10d8>
   126a8:	mov	r2, #235	; 0xeb
   126ac:	ldr	r1, [pc, #88]	; 1270c <sprintf@plt+0x10dc>
   126b0:	ldr	r0, [pc, #88]	; 12710 <sprintf@plt+0x10e0>
   126b4:	bl	113c0 <__assert_fail@plt>
   126b8:	ldr	r3, [pc, #84]	; 12714 <sprintf@plt+0x10e4>
   126bc:	mov	r2, #143	; 0x8f
   126c0:	ldr	r1, [pc, #68]	; 1270c <sprintf@plt+0x10dc>
   126c4:	ldr	r0, [pc, #76]	; 12718 <sprintf@plt+0x10e8>
   126c8:	bl	113c0 <__assert_fail@plt>
   126cc:	ldr	r3, [pc, #64]	; 12714 <sprintf@plt+0x10e4>
   126d0:	mov	r2, #144	; 0x90
   126d4:	ldr	r1, [pc, #48]	; 1270c <sprintf@plt+0x10dc>
   126d8:	ldr	r0, [pc, #48]	; 12710 <sprintf@plt+0x10e0>
   126dc:	bl	113c0 <__assert_fail@plt>
   126e0:	ldr	r3, [pc, #28]	; 12704 <sprintf@plt+0x10d4>
   126e4:	ldr	r3, [r3, #4]
   126e8:	cmp	r3, #0
   126ec:	ldreq	r3, [pc, #16]	; 12704 <sprintf@plt+0x10d4>
   126f0:	streq	r0, [r3, #4]
   126f4:	b	1268c <sprintf@plt+0x105c>
   126f8:	andeq	pc, r2, r4, ror r1	; <UNPREDICTABLE>
   126fc:	andeq	sl, r2, r8, ror #10
   12700:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   12704:	andeq	lr, r2, r8, lsl #31
   12708:	andeq	r9, r1, r4
   1270c:	andeq	r9, r1, r0, lsr #32
   12710:	andeq	r9, r1, ip, lsr r0
   12714:	andeq	r9, r1, r4, lsl r0
   12718:	andeq	r9, r1, r8, ror r0
   1271c:	push	{r4, lr}
   12720:	mov	r4, r0
   12724:	ldr	r1, [r0]
   12728:	ldr	r3, [pc, #40]	; 12758 <sprintf@plt+0x1128>
   1272c:	ldr	r0, [r3]
   12730:	bl	1145c <rb_dictionary_delete@plt>
   12734:	ldr	r0, [r4, #464]	; 0x1d0
   12738:	cmp	r0, #0
   1273c:	beq	12744 <sprintf@plt+0x1114>
   12740:	bl	113f0 <free@plt>
   12744:	cmp	r4, #0
   12748:	popeq	{r4, pc}
   1274c:	mov	r0, r4
   12750:	bl	113f0 <free@plt>
   12754:	pop	{r4, pc}
   12758:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   1275c:	push	{r4, r5, r6, r7, r8, lr}
   12760:	sub	sp, sp, #8
   12764:	bl	11450 <rb_current_time@plt>
   12768:	mov	r6, r0
   1276c:	mov	r1, sp
   12770:	ldr	r3, [pc, #196]	; 1283c <sprintf@plt+0x120c>
   12774:	ldr	r0, [r3]
   12778:	bl	1142c <rb_dictionary_foreach_start@plt>
   1277c:	ldr	r7, [pc, #184]	; 1283c <sprintf@plt+0x120c>
   12780:	ldr	r8, [pc, #184]	; 12840 <sprintf@plt+0x1210>
   12784:	b	127f8 <sprintf@plt+0x11c8>
   12788:	ldr	r4, [r4, #8]
   1278c:	cmp	r4, #0
   12790:	beq	127d8 <sprintf@plt+0x11a8>
   12794:	ldr	r2, [r4]
   12798:	ldr	r1, [r2, #12]
   1279c:	ldr	r3, [r5, #464]	; 0x1d0
   127a0:	add	r3, r3, r1, lsl #4
   127a4:	ldr	r1, [r3, #12]
   127a8:	cmp	r1, #1
   127ac:	bne	12788 <sprintf@plt+0x1158>
   127b0:	ldr	r2, [r2, #40]	; 0x28
   127b4:	cmp	r2, #0
   127b8:	beq	12788 <sprintf@plt+0x1158>
   127bc:	ldr	r3, [r3, #4]
   127c0:	cmp	r3, #0
   127c4:	cmpgt	r6, r3
   127c8:	ble	12788 <sprintf@plt+0x1158>
   127cc:	mov	r0, r5
   127d0:	blx	r2
   127d4:	b	12788 <sprintf@plt+0x1158>
   127d8:	ldr	r3, [r5, #460]	; 0x1cc
   127dc:	sub	r3, r3, #1
   127e0:	str	r3, [r5, #460]	; 0x1cc
   127e4:	cmp	r3, #0
   127e8:	beq	12828 <sprintf@plt+0x11f8>
   127ec:	mov	r1, sp
   127f0:	ldr	r0, [r7]
   127f4:	bl	113e4 <rb_dictionary_foreach_next@plt>
   127f8:	mov	r1, sp
   127fc:	ldr	r0, [r7]
   12800:	bl	11348 <rb_dictionary_foreach_cur@plt>
   12804:	subs	r5, r0, #0
   12808:	beq	12834 <sprintf@plt+0x1204>
   1280c:	ldr	r3, [r5, #460]	; 0x1cc
   12810:	add	r3, r3, #1
   12814:	str	r3, [r5, #460]	; 0x1cc
   12818:	ldr	r4, [r8]
   1281c:	cmp	r4, #0
   12820:	bne	12794 <sprintf@plt+0x1164>
   12824:	b	127d8 <sprintf@plt+0x11a8>
   12828:	mov	r0, r5
   1282c:	bl	1271c <sprintf@plt+0x10ec>
   12830:	b	127ec <sprintf@plt+0x11bc>
   12834:	add	sp, sp, #8
   12838:	pop	{r4, r5, r6, r7, r8, pc}
   1283c:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   12840:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   12844:	ldrb	r3, [r0, #452]	; 0x1c4
   12848:	cmp	r3, #0
   1284c:	bxne	lr
   12850:	mov	r3, #1
   12854:	strb	r3, [r0, #452]	; 0x1c4
   12858:	ldr	r3, [r0, #456]	; 0x1c8
   1285c:	cmp	r3, #0
   12860:	bxeq	lr
   12864:	push	{r4, r5, r6, lr}
   12868:	mov	r5, r0
   1286c:	ldr	r3, [pc, #80]	; 128c4 <sprintf@plt+0x1294>
   12870:	ldr	r4, [r3]
   12874:	cmp	r4, #0
   12878:	bne	1288c <sprintf@plt+0x125c>
   1287c:	pop	{r4, r5, r6, pc}
   12880:	ldr	r4, [r4, #8]
   12884:	cmp	r4, #0
   12888:	beq	128c0 <sprintf@plt+0x1290>
   1288c:	ldr	r3, [r4]
   12890:	ldr	r2, [r3, #36]	; 0x24
   12894:	cmp	r2, #0
   12898:	beq	12880 <sprintf@plt+0x1250>
   1289c:	ldr	r1, [r3, #12]
   128a0:	ldr	r3, [r5, #464]	; 0x1d0
   128a4:	add	r3, r3, r1, lsl #4
   128a8:	ldr	r3, [r3, #12]
   128ac:	cmp	r3, #1
   128b0:	bne	12880 <sprintf@plt+0x1250>
   128b4:	mov	r0, r5
   128b8:	blx	r2
   128bc:	b	12880 <sprintf@plt+0x1250>
   128c0:	pop	{r4, r5, r6, pc}
   128c4:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   128c8:	push	{r3}		; (str r3, [sp, #-4]!)
   128cc:	push	{r4, r5, r6, lr}
   128d0:	sub	sp, sp, #540	; 0x21c
   128d4:	mov	r4, r0
   128d8:	mov	r5, r1
   128dc:	mov	r6, r2
   128e0:	add	r3, sp, #560	; 0x230
   128e4:	str	r3, [sp, #20]
   128e8:	ldr	r2, [sp, #556]	; 0x22c
   128ec:	mov	r1, #512	; 0x200
   128f0:	add	r0, sp, #24
   128f4:	bl	11300 <vsnprintf@plt>
   128f8:	ldr	r3, [pc, #248]	; 129f8 <sprintf@plt+0x13c8>
   128fc:	ldr	r0, [r3]
   12900:	ldr	r2, [r4]
   12904:	cmn	r5, #1
   12908:	beq	129a0 <sprintf@plt+0x1370>
   1290c:	ldr	r3, [r4, #464]	; 0x1d0
   12910:	ldr	r3, [r3, r5, lsl #4]
   12914:	ldrb	r3, [r3, #20]
   12918:	add	r1, r4, #440	; 0x1b8
   1291c:	add	ip, r4, #376	; 0x178
   12920:	cmp	r6, #0
   12924:	beq	129d4 <sprintf@plt+0x13a4>
   12928:	add	lr, sp, #24
   1292c:	str	lr, [sp, #12]
   12930:	str	r6, [sp, #8]
   12934:	str	ip, [sp, #4]
   12938:	str	r1, [sp]
   1293c:	ldr	r1, [pc, #184]	; 129fc <sprintf@plt+0x13cc>
   12940:	bl	11594 <rb_helper_write@plt>
   12944:	ldr	r3, [r4, #464]	; 0x1d0
   12948:	add	r5, r3, r5, lsl #4
   1294c:	mov	r3, #2
   12950:	str	r3, [r5, #12]
   12954:	ldr	r3, [r4, #456]	; 0x1c8
   12958:	sub	r3, r3, #1
   1295c:	str	r3, [r4, #456]	; 0x1c8
   12960:	mov	r0, r4
   12964:	bl	12844 <sprintf@plt+0x1214>
   12968:	add	sp, sp, #540	; 0x21c
   1296c:	pop	{r4, r5, r6, lr}
   12970:	add	sp, sp, #4
   12974:	bx	lr
   12978:	add	ip, sp, #24
   1297c:	str	ip, [sp, #12]
   12980:	ldr	ip, [pc, #120]	; 12a00 <sprintf@plt+0x13d0>
   12984:	str	ip, [sp, #8]
   12988:	str	r1, [sp, #4]
   1298c:	str	r3, [sp]
   12990:	mov	r3, #42	; 0x2a
   12994:	ldr	r1, [pc, #96]	; 129fc <sprintf@plt+0x13cc>
   12998:	bl	11594 <rb_helper_write@plt>
   1299c:	b	12960 <sprintf@plt+0x1330>
   129a0:	add	r3, r4, #440	; 0x1b8
   129a4:	add	r1, r4, #376	; 0x178
   129a8:	cmp	r6, #0
   129ac:	beq	12978 <sprintf@plt+0x1348>
   129b0:	add	ip, sp, #24
   129b4:	str	ip, [sp, #12]
   129b8:	str	r6, [sp, #8]
   129bc:	str	r1, [sp, #4]
   129c0:	str	r3, [sp]
   129c4:	mov	r3, #42	; 0x2a
   129c8:	ldr	r1, [pc, #44]	; 129fc <sprintf@plt+0x13cc>
   129cc:	bl	11594 <rb_helper_write@plt>
   129d0:	b	12960 <sprintf@plt+0x1330>
   129d4:	add	lr, sp, #24
   129d8:	str	lr, [sp, #12]
   129dc:	ldr	lr, [pc, #28]	; 12a00 <sprintf@plt+0x13d0>
   129e0:	str	lr, [sp, #8]
   129e4:	str	ip, [sp, #4]
   129e8:	str	r1, [sp]
   129ec:	ldr	r1, [pc, #8]	; 129fc <sprintf@plt+0x13cc>
   129f0:	bl	11594 <rb_helper_write@plt>
   129f4:	b	12944 <sprintf@plt+0x1314>
   129f8:	andeq	lr, r2, ip, ror pc
   129fc:	strheq	r9, [r1], -r8
   12a00:	ldrdeq	r9, [r1], -r0
   12a04:	push	{r4, r5, r6, r7, r8, lr}
   12a08:	sub	sp, sp, #8
   12a0c:	mov	r1, sp
   12a10:	ldr	r3, [pc, #300]	; 12b44 <sprintf@plt+0x1514>
   12a14:	ldr	r0, [r3]
   12a18:	bl	1142c <rb_dictionary_foreach_start@plt>
   12a1c:	ldr	r5, [pc, #288]	; 12b44 <sprintf@plt+0x1514>
   12a20:	ldr	r8, [pc, #288]	; 12b48 <sprintf@plt+0x1518>
   12a24:	ldr	r7, [pc, #288]	; 12b4c <sprintf@plt+0x151c>
   12a28:	mvn	r6, #0
   12a2c:	b	12a3c <sprintf@plt+0x140c>
   12a30:	mov	r1, sp
   12a34:	ldr	r0, [r5]
   12a38:	bl	113e4 <rb_dictionary_foreach_next@plt>
   12a3c:	mov	r1, sp
   12a40:	ldr	r0, [r5]
   12a44:	bl	11348 <rb_dictionary_foreach_cur@plt>
   12a48:	subs	r4, r0, #0
   12a4c:	beq	12a90 <sprintf@plt+0x1460>
   12a50:	ldr	r3, [r4, #460]	; 0x1cc
   12a54:	add	r3, r3, #1
   12a58:	str	r3, [r4, #460]	; 0x1cc
   12a5c:	mov	r3, r8
   12a60:	mov	r2, r7
   12a64:	mov	r1, r6
   12a68:	mov	r0, r4
   12a6c:	bl	128c8 <sprintf@plt+0x1298>
   12a70:	ldr	r3, [r4, #460]	; 0x1cc
   12a74:	sub	r3, r3, #1
   12a78:	str	r3, [r4, #460]	; 0x1cc
   12a7c:	cmp	r3, #0
   12a80:	bne	12a30 <sprintf@plt+0x1400>
   12a84:	mov	r0, r4
   12a88:	bl	1271c <sprintf@plt+0x10ec>
   12a8c:	b	12a30 <sprintf@plt+0x1400>
   12a90:	ldr	r3, [pc, #184]	; 12b50 <sprintf@plt+0x1520>
   12a94:	ldr	r4, [r3]
   12a98:	cmp	r4, #0
   12a9c:	beq	12b1c <sprintf@plt+0x14ec>
   12aa0:	ldr	r5, [r4, #8]
   12aa4:	mov	r6, r3
   12aa8:	mov	r7, #0
   12aac:	b	12b04 <sprintf@plt+0x14d4>
   12ab0:	ldr	r3, [r4, #8]
   12ab4:	cmp	r3, #0
   12ab8:	ldrne	r2, [r4, #4]
   12abc:	strne	r2, [r3, #4]
   12ac0:	ldreq	r3, [r4, #4]
   12ac4:	streq	r3, [r6, #4]
   12ac8:	ldr	r3, [r4, #4]
   12acc:	cmp	r3, #0
   12ad0:	ldrne	r2, [r4, #8]
   12ad4:	strne	r2, [r3, #8]
   12ad8:	ldreq	r3, [r4, #8]
   12adc:	streq	r3, [r6]
   12ae0:	str	r7, [r4, #4]
   12ae4:	str	r7, [r4, #8]
   12ae8:	ldr	r3, [r6, #8]
   12aec:	sub	r3, r3, #1
   12af0:	str	r3, [r6, #8]
   12af4:	cmp	r5, #0
   12af8:	beq	12b1c <sprintf@plt+0x14ec>
   12afc:	mov	r4, r5
   12b00:	ldr	r5, [r5, #8]
   12b04:	ldr	r3, [r4]
   12b08:	ldr	r3, [r3, #28]
   12b0c:	cmp	r3, #0
   12b10:	beq	12ab0 <sprintf@plt+0x1480>
   12b14:	blx	r3
   12b18:	b	12ab0 <sprintf@plt+0x1480>
   12b1c:	mov	r2, #0
   12b20:	mov	r1, r2
   12b24:	ldr	r3, [pc, #24]	; 12b44 <sprintf@plt+0x1514>
   12b28:	ldr	r0, [r3]
   12b2c:	bl	114bc <rb_dictionary_destroy@plt>
   12b30:	ldr	r3, [pc, #28]	; 12b54 <sprintf@plt+0x1524>
   12b34:	ldr	r0, [r3, #16]
   12b38:	bl	112d0 <rb_event_delete@plt>
   12b3c:	add	sp, sp, #8
   12b40:	pop	{r4, r5, r6, r7, r8, pc}
   12b44:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   12b48:	ldrdeq	r9, [r1], -r4
   12b4c:	andeq	r9, r1, r8, lsl r1
   12b50:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   12b54:	andeq	lr, r2, r8, lsl #31
   12b58:	push	{r4, lr}
   12b5c:	sub	sp, sp, #8
   12b60:	mov	r4, r0
   12b64:	mov	r3, r0
   12b68:	ldr	r2, [r3], #376	; 0x178
   12b6c:	ldr	r1, [pc, #32]	; 12b94 <sprintf@plt+0x1564>
   12b70:	ldr	r0, [r1]
   12b74:	str	r3, [sp]
   12b78:	add	r3, r4, #440	; 0x1b8
   12b7c:	ldr	r1, [pc, #20]	; 12b98 <sprintf@plt+0x1568>
   12b80:	bl	11594 <rb_helper_write@plt>
   12b84:	mov	r0, r4
   12b88:	bl	12844 <sprintf@plt+0x1214>
   12b8c:	add	sp, sp, #8
   12b90:	pop	{r4, pc}
   12b94:	andeq	lr, r2, ip, ror pc
   12b98:	andeq	r9, r1, r0, lsr #2
   12b9c:	push	{r4, r5, r6, lr}
   12ba0:	mov	r5, r0
   12ba4:	mov	r6, r1
   12ba8:	ldr	r3, [r0, #464]	; 0x1d0
   12bac:	add	r3, r3, r1, lsl #4
   12bb0:	mov	r2, #2
   12bb4:	str	r2, [r3, #12]
   12bb8:	ldr	r3, [r0, #456]	; 0x1c8
   12bbc:	sub	r3, r3, #1
   12bc0:	str	r3, [r0, #456]	; 0x1c8
   12bc4:	cmp	r3, #0
   12bc8:	bne	12bd8 <sprintf@plt+0x15a8>
   12bcc:	ldrb	r3, [r0, #451]	; 0x1c3
   12bd0:	cmp	r3, #0
   12bd4:	beq	12bec <sprintf@plt+0x15bc>
   12bd8:	ldr	r3, [pc, #92]	; 12c3c <sprintf@plt+0x160c>
   12bdc:	ldr	r4, [r3]
   12be0:	cmp	r4, #0
   12be4:	bne	12c00 <sprintf@plt+0x15d0>
   12be8:	pop	{r4, r5, r6, pc}
   12bec:	bl	12b58 <sprintf@plt+0x1528>
   12bf0:	pop	{r4, r5, r6, pc}
   12bf4:	ldr	r4, [r4, #8]
   12bf8:	cmp	r4, #0
   12bfc:	beq	12c38 <sprintf@plt+0x1608>
   12c00:	ldr	r3, [r4]
   12c04:	ldr	r2, [r3, #44]	; 0x2c
   12c08:	cmp	r2, #0
   12c0c:	beq	12bf4 <sprintf@plt+0x15c4>
   12c10:	ldr	r1, [r3, #12]
   12c14:	ldr	r3, [r5, #464]	; 0x1d0
   12c18:	add	r3, r3, r1, lsl #4
   12c1c:	ldr	r3, [r3, #12]
   12c20:	cmp	r3, #1
   12c24:	bne	12bf4 <sprintf@plt+0x15c4>
   12c28:	mov	r1, r6
   12c2c:	mov	r0, r5
   12c30:	blx	r2
   12c34:	b	12bf4 <sprintf@plt+0x15c4>
   12c38:	pop	{r4, r5, r6, pc}
   12c3c:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   12c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c44:	sub	sp, sp, #12
   12c48:	cmp	r0, #5
   12c4c:	ble	12cac <sprintf@plt+0x167c>
   12c50:	ldr	r5, [r1, #4]
   12c54:	ldr	r9, [r1, #8]
   12c58:	ldr	fp, [r1, #12]
   12c5c:	ldr	r8, [r1, #16]
   12c60:	ldr	sl, [r1, #20]
   12c64:	cmp	r0, #6
   12c68:	ldrgt	r3, [r1, #24]
   12c6c:	ldrle	r3, [pc, #608]	; 12ed4 <sprintf@plt+0x18a4>
   12c70:	str	r3, [sp, #4]
   12c74:	mov	r2, #16
   12c78:	mov	r1, #0
   12c7c:	mov	r0, r5
   12c80:	bl	113d8 <strtoull@plt>
   12c84:	mov	r6, r0
   12c88:	subs	r0, r0, #1
   12c8c:	sbc	r1, r1, #0
   12c90:	mvn	r2, #1
   12c94:	mov	r3, #0
   12c98:	cmp	r1, r3
   12c9c:	cmpeq	r0, r2
   12ca0:	bls	12cc4 <sprintf@plt+0x1694>
   12ca4:	add	sp, sp, #12
   12ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cac:	mov	r2, r0
   12cb0:	ldr	r1, [pc, #544]	; 12ed8 <sprintf@plt+0x18a8>
   12cb4:	mov	r0, #67	; 0x43
   12cb8:	bl	121fc <sprintf@plt+0xbcc>
   12cbc:	mov	r0, #3
   12cc0:	bl	11618 <exit@plt>
   12cc4:	mov	r1, #468	; 0x1d4
   12cc8:	mov	r0, #1
   12ccc:	bl	11360 <calloc@plt>
   12cd0:	subs	r4, r0, #0
   12cd4:	beq	12e98 <sprintf@plt+0x1868>
   12cd8:	ldr	r3, [r4, #460]	; 0x1cc
   12cdc:	add	r3, r3, #1
   12ce0:	str	r3, [r4, #460]	; 0x1cc
   12ce4:	str	r6, [r4]
   12ce8:	mov	r1, r6
   12cec:	ldr	r3, [pc, #488]	; 12edc <sprintf@plt+0x18ac>
   12cf0:	ldr	r0, [r3]
   12cf4:	bl	11564 <rb_dictionary_find@plt>
   12cf8:	cmp	r0, #0
   12cfc:	bne	12e9c <sprintf@plt+0x186c>
   12d00:	mov	r2, r4
   12d04:	ldr	r1, [r4]
   12d08:	ldr	r3, [pc, #460]	; 12edc <sprintf@plt+0x18ac>
   12d0c:	ldr	r0, [r3]
   12d10:	bl	1151c <rb_dictionary_add@plt>
   12d14:	mov	r2, #16
   12d18:	mov	r1, #0
   12d1c:	ldr	r0, [sp, #4]
   12d20:	bl	113d8 <strtoull@plt>
   12d24:	str	r0, [r4, #4]
   12d28:	mov	r2, #54	; 0x36
   12d2c:	mov	r1, r9
   12d30:	add	r0, r4, #8
   12d34:	bl	113cc <rb_strlcpy@plt>
   12d38:	mov	r2, #10
   12d3c:	mov	r1, #0
   12d40:	mov	r0, fp
   12d44:	bl	1148c <strtol@plt>
   12d48:	strh	r0, [r4, #62]	; 0x3e
   12d4c:	add	r1, r4, #64	; 0x40
   12d50:	mov	r0, r9
   12d54:	bl	11438 <rb_inet_pton_sock@plt>
   12d58:	ldrh	r3, [r4, #64]	; 0x40
   12d5c:	cmp	r3, #2
   12d60:	beq	12eb4 <sprintf@plt+0x1884>
   12d64:	ldrh	r3, [r4, #62]	; 0x3e
   12d68:	rev16	r3, r3
   12d6c:	strh	r3, [r4, #66]	; 0x42
   12d70:	mov	r2, #54	; 0x36
   12d74:	mov	r1, r8
   12d78:	add	r0, r4, #192	; 0xc0
   12d7c:	bl	113cc <rb_strlcpy@plt>
   12d80:	mov	r2, #10
   12d84:	mov	r1, #0
   12d88:	mov	r0, sl
   12d8c:	bl	1148c <strtol@plt>
   12d90:	strh	r0, [r4, #246]	; 0xf6
   12d94:	add	r1, r4, #248	; 0xf8
   12d98:	mov	r0, r8
   12d9c:	bl	11438 <rb_inet_pton_sock@plt>
   12da0:	ldrh	r3, [r4, #246]	; 0xf6
   12da4:	rev16	r3, r3
   12da8:	strh	r3, [r4, #250]	; 0xfa
   12dac:	ldr	r5, [pc, #300]	; 12ee0 <sprintf@plt+0x18b0>
   12db0:	mov	r2, #64	; 0x40
   12db4:	mov	r1, r5
   12db8:	add	r0, r4, #376	; 0x178
   12dbc:	bl	113cc <rb_strlcpy@plt>
   12dc0:	mov	r2, #11
   12dc4:	mov	r1, r5
   12dc8:	add	r0, r4, #440	; 0x1b8
   12dcc:	bl	113cc <rb_strlcpy@plt>
   12dd0:	ldr	r3, [pc, #268]	; 12ee4 <sprintf@plt+0x18b4>
   12dd4:	ldr	r1, [r3, #12]
   12dd8:	lsl	r1, r1, #4
   12ddc:	mov	r0, #1
   12de0:	bl	11360 <calloc@plt>
   12de4:	cmp	r0, #0
   12de8:	beq	12ec4 <sprintf@plt+0x1894>
   12dec:	str	r0, [r4, #464]	; 0x1d0
   12df0:	mov	r3, #1
   12df4:	strb	r3, [r4, #451]	; 0x1c3
   12df8:	ldr	r3, [pc, #232]	; 12ee8 <sprintf@plt+0x18b8>
   12dfc:	ldr	r5, [r3]
   12e00:	cmp	r5, #0
   12e04:	beq	12e64 <sprintf@plt+0x1834>
   12e08:	mov	r6, #1
   12e0c:	ldr	r3, [r5]
   12e10:	ldr	r1, [r3, #12]
   12e14:	ldr	r2, [r4, #464]	; 0x1d0
   12e18:	str	r3, [r2, r1, lsl #4]
   12e1c:	ldr	r0, [r3, #12]
   12e20:	ldr	r1, [r4, #456]	; 0x1c8
   12e24:	add	r1, r1, #1
   12e28:	str	r1, [r4, #456]	; 0x1c8
   12e2c:	ldr	r2, [r4, #464]	; 0x1d0
   12e30:	add	r2, r2, r0, lsl #4
   12e34:	str	r6, [r2, #12]
   12e38:	ldr	r3, [r3, #32]
   12e3c:	mov	r0, r4
   12e40:	blx	r3
   12e44:	cmp	r0, #0
   12e48:	beq	12e78 <sprintf@plt+0x1848>
   12e4c:	ldrb	r3, [r4, #452]	; 0x1c4
   12e50:	cmp	r3, #0
   12e54:	bne	12e64 <sprintf@plt+0x1834>
   12e58:	ldr	r5, [r5, #8]
   12e5c:	cmp	r5, #0
   12e60:	bne	12e0c <sprintf@plt+0x17dc>
   12e64:	mov	r3, #0
   12e68:	strb	r3, [r4, #451]	; 0x1c3
   12e6c:	ldr	r3, [r4, #456]	; 0x1c8
   12e70:	cmp	r3, #0
   12e74:	beq	12ec8 <sprintf@plt+0x1898>
   12e78:	ldr	r3, [r4, #460]	; 0x1cc
   12e7c:	sub	r3, r3, #1
   12e80:	str	r3, [r4, #460]	; 0x1cc
   12e84:	cmp	r3, #0
   12e88:	bne	12ca4 <sprintf@plt+0x1674>
   12e8c:	mov	r0, r4
   12e90:	bl	1271c <sprintf@plt+0x10ec>
   12e94:	b	12ca4 <sprintf@plt+0x1674>
   12e98:	bl	11504 <rb_outofmemory@plt>
   12e9c:	mov	r2, r5
   12ea0:	ldr	r1, [pc, #68]	; 12eec <sprintf@plt+0x18bc>
   12ea4:	mov	r0, #67	; 0x43
   12ea8:	bl	121fc <sprintf@plt+0xbcc>
   12eac:	mov	r0, #3
   12eb0:	bl	11618 <exit@plt>
   12eb4:	ldrh	r3, [r4, #62]	; 0x3e
   12eb8:	rev16	r3, r3
   12ebc:	strh	r3, [r4, #66]	; 0x42
   12ec0:	b	12d70 <sprintf@plt+0x1740>
   12ec4:	bl	11504 <rb_outofmemory@plt>
   12ec8:	mov	r0, r4
   12ecc:	bl	12b58 <sprintf@plt+0x1528>
   12ed0:	b	12e78 <sprintf@plt+0x1848>
   12ed4:	andeq	r9, r1, r0, asr #5
   12ed8:	andeq	r9, r1, ip, lsr #2
   12edc:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   12ee0:	ldrdeq	r9, [r1], -r0
   12ee4:	andeq	lr, r2, r8, lsl #31
   12ee8:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   12eec:	andeq	r9, r1, r8, ror r1
   12ef0:	push	{r4, r6, r7, lr}
   12ef4:	cmp	r0, #1
   12ef8:	ble	12f78 <sprintf@plt+0x1948>
   12efc:	mov	r4, r1
   12f00:	mov	r2, #16
   12f04:	mov	r1, #0
   12f08:	ldr	r0, [r4, #4]
   12f0c:	bl	113d8 <strtoull@plt>
   12f10:	subs	r6, r0, #1
   12f14:	sbc	r7, r1, #0
   12f18:	mvn	r2, #1
   12f1c:	mov	r3, #0
   12f20:	cmp	r7, r3
   12f24:	cmpeq	r6, r2
   12f28:	bhi	12f90 <sprintf@plt+0x1960>
   12f2c:	mov	r1, r0
   12f30:	ldr	r3, [pc, #112]	; 12fa8 <sprintf@plt+0x1978>
   12f34:	ldr	r0, [r3]
   12f38:	bl	114f8 <rb_dictionary_retrieve@plt>
   12f3c:	subs	r4, r0, #0
   12f40:	popeq	{r4, r6, r7, pc}
   12f44:	ldr	r3, [r4, #460]	; 0x1cc
   12f48:	add	r3, r3, #1
   12f4c:	str	r3, [r4, #460]	; 0x1cc
   12f50:	mov	r0, r4
   12f54:	bl	12844 <sprintf@plt+0x1214>
   12f58:	ldr	r3, [r4, #460]	; 0x1cc
   12f5c:	sub	r3, r3, #1
   12f60:	str	r3, [r4, #460]	; 0x1cc
   12f64:	cmp	r3, #0
   12f68:	popne	{r4, r6, r7, pc}
   12f6c:	mov	r0, r4
   12f70:	bl	1271c <sprintf@plt+0x10ec>
   12f74:	pop	{r4, r6, r7, pc}
   12f78:	mov	r2, r0
   12f7c:	ldr	r1, [pc, #40]	; 12fac <sprintf@plt+0x197c>
   12f80:	mov	r0, #67	; 0x43
   12f84:	bl	121fc <sprintf@plt+0xbcc>
   12f88:	mov	r0, #3
   12f8c:	bl	11618 <exit@plt>
   12f90:	ldr	r2, [r4, #4]
   12f94:	ldr	r1, [pc, #20]	; 12fb0 <sprintf@plt+0x1980>
   12f98:	mov	r0, #67	; 0x43
   12f9c:	bl	121fc <sprintf@plt+0xbcc>
   12fa0:	mov	r0, #3
   12fa4:	bl	11618 <exit@plt>
   12fa8:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   12fac:	andeq	r9, r1, ip, lsr #3
   12fb0:	strdeq	r9, [r1], -r8
   12fb4:	push	{r4, lr}
   12fb8:	bl	14744 <sprintf@plt+0x3114>
   12fbc:	ldr	r3, [pc, #136]	; 1304c <sprintf@plt+0x1a1c>
   12fc0:	ldr	r2, [r3]
   12fc4:	cmp	r2, #0
   12fc8:	ble	12fe4 <sprintf@plt+0x19b4>
   12fcc:	ldr	r3, [pc, #124]	; 13050 <sprintf@plt+0x1a20>
   12fd0:	add	r2, r3, r2, lsl #2
   12fd4:	mov	r1, #0
   12fd8:	str	r1, [r3], #4
   12fdc:	cmp	r3, r2
   12fe0:	bne	12fd8 <sprintf@plt+0x19a8>
   12fe4:	ldr	r3, [pc, #100]	; 13050 <sprintf@plt+0x1a20>
   12fe8:	ldr	r3, [r3, #40]	; 0x28
   12fec:	cmp	r3, #0
   12ff0:	popne	{r4, pc}
   12ff4:	ldr	r3, [pc, #88]	; 13054 <sprintf@plt+0x1a24>
   12ff8:	mov	r2, #0
   12ffc:	mov	r1, #2
   13000:	ldr	r0, [pc, #80]	; 13058 <sprintf@plt+0x1a28>
   13004:	ldrh	r0, [r0]
   13008:	bl	1130c <rb_socket@plt>
   1300c:	ldr	r3, [pc, #60]	; 13050 <sprintf@plt+0x1a20>
   13010:	str	r0, [r3, #40]	; 0x28
   13014:	cmp	r0, #0
   13018:	popeq	{r4, pc}
   1301c:	mov	r3, #0
   13020:	ldr	r2, [pc, #52]	; 1305c <sprintf@plt+0x1a2c>
   13024:	mov	r1, #1
   13028:	bl	112dc <rb_setselect@plt>
   1302c:	mov	r3, #1
   13030:	mov	r2, #0
   13034:	ldr	r1, [pc, #36]	; 13060 <sprintf@plt+0x1a30>
   13038:	ldr	r0, [pc, #36]	; 13064 <sprintf@plt+0x1a34>
   1303c:	bl	115a0 <rb_event_add@plt>
   13040:	ldr	r3, [pc, #8]	; 13050 <sprintf@plt+0x1a20>
   13044:	str	r0, [r3, #44]	; 0x2c
   13048:	pop	{r4, pc}
   1304c:	ldrdeq	lr, [r2], -ip
   13050:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   13054:	andeq	r9, r1, r8, lsl #5
   13058:	muleq	r2, ip, r2
   1305c:	andeq	r3, r1, r8, lsr pc
   13060:	andeq	r3, r1, ip, asr #17
   13064:	muleq	r1, ip, r2
   13068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1306c:	sub	sp, sp, #1024	; 0x400
   13070:	sub	sp, sp, #12
   13074:	mov	fp, r0
   13078:	mov	r4, #1024	; 0x400
   1307c:	mov	r2, r4
   13080:	mov	r1, #0
   13084:	add	r0, sp, #8
   13088:	bl	11390 <memset@plt>
   1308c:	ldrb	r2, [fp, #20]
   13090:	str	r4, [sp]
   13094:	add	r3, sp, #8
   13098:	mov	r1, #1
   1309c:	add	r0, fp, #21
   130a0:	bl	14a78 <sprintf@plt+0x3448>
   130a4:	subs	r8, r0, #0
   130a8:	ble	13244 <sprintf@plt+0x1c14>
   130ac:	ldr	r3, [fp, #12]
   130b0:	strh	r3, [sp, #8]
   130b4:	ldrb	r7, [fp, #278]	; 0x116
   130b8:	add	r7, r7, #1
   130bc:	uxtb	r7, r7
   130c0:	strb	r7, [fp, #278]	; 0x116
   130c4:	ldr	r2, [pc, #388]	; 13250 <sprintf@plt+0x1c20>
   130c8:	ldr	r3, [r2, #48]	; 0x30
   130cc:	add	r3, r3, #1
   130d0:	str	r3, [r2, #48]	; 0x30
   130d4:	ldr	r3, [pc, #376]	; 13254 <sprintf@plt+0x1c24>
   130d8:	ldr	r1, [r3]
   130dc:	cmp	r1, #0
   130e0:	ble	13244 <sprintf@plt+0x1c14>
   130e4:	mov	r5, #0
   130e8:	sub	r7, r7, #1
   130ec:	mov	r6, r2
   130f0:	ldr	r9, [pc, #352]	; 13258 <sprintf@plt+0x1c28>
   130f4:	mov	sl, r3
   130f8:	b	1317c <sprintf@plt+0x1b4c>
   130fc:	mov	r1, #9
   13100:	b	13120 <sprintf@plt+0x1af0>
   13104:	mov	r1, #27
   13108:	b	13120 <sprintf@plt+0x1af0>
   1310c:	mov	r1, #81	; 0x51
   13110:	b	13120 <sprintf@plt+0x1af0>
   13114:	mov	r1, #243	; 0xf3
   13118:	b	13120 <sprintf@plt+0x1af0>
   1311c:	mov	r1, #3
   13120:	bl	18bf0 <sprintf@plt+0x75c0>
   13124:	cmp	r1, #0
   13128:	bne	1316c <sprintf@plt+0x1b3c>
   1312c:	ldr	r0, [r6, #40]	; 0x28
   13130:	bl	112e8 <rb_get_fd@plt>
   13134:	lsl	r3, r4, #7
   13138:	add	r2, r3, r9
   1313c:	ldrh	r3, [r3, r9]
   13140:	cmp	r3, #2
   13144:	moveq	r3, #16
   13148:	movne	r3, #28
   1314c:	str	r3, [sp, #4]
   13150:	str	r2, [sp]
   13154:	mov	r3, #0
   13158:	mov	r2, r8
   1315c:	add	r1, sp, #8
   13160:	bl	11378 <sendto@plt>
   13164:	cmp	r8, r0
   13168:	beq	1323c <sprintf@plt+0x1c0c>
   1316c:	add	r5, r5, #1
   13170:	ldr	r1, [sl]
   13174:	cmp	r1, r5
   13178:	ble	131b8 <sprintf@plt+0x1b88>
   1317c:	add	r0, r5, r7
   13180:	bl	18bf0 <sprintf@plt+0x75c0>
   13184:	mov	r4, r1
   13188:	ldr	r3, [r6, r1, lsl #2]
   1318c:	cmp	r3, #0
   13190:	beq	1312c <sprintf@plt+0x1afc>
   13194:	ldr	r0, [r6, #48]	; 0x30
   13198:	sub	r3, r3, #1
   1319c:	cmp	r3, #3
   131a0:	ldrls	pc, [pc, r3, lsl #2]
   131a4:	b	13114 <sprintf@plt+0x1ae4>
   131a8:	andeq	r3, r1, ip, lsl r1
   131ac:	strdeq	r3, [r1], -ip
   131b0:	andeq	r3, r1, r4, lsl #2
   131b4:	andeq	r3, r1, ip, lsl #2
   131b8:	cmp	r1, #0
   131bc:	ble	13244 <sprintf@plt+0x1c14>
   131c0:	mov	r5, #0
   131c4:	ldr	r6, [pc, #132]	; 13250 <sprintf@plt+0x1c20>
   131c8:	ldr	sl, [pc, #136]	; 13258 <sprintf@plt+0x1c28>
   131cc:	ldr	r9, [pc, #128]	; 13254 <sprintf@plt+0x1c24>
   131d0:	b	131e4 <sprintf@plt+0x1bb4>
   131d4:	add	r5, r5, #1
   131d8:	ldr	r1, [r9]
   131dc:	cmp	r1, r5
   131e0:	ble	13244 <sprintf@plt+0x1c14>
   131e4:	add	r0, r5, r7
   131e8:	bl	18bf0 <sprintf@plt+0x75c0>
   131ec:	mov	r4, r1
   131f0:	ldr	r3, [r6, r1, lsl #2]
   131f4:	cmp	r3, #0
   131f8:	beq	131d4 <sprintf@plt+0x1ba4>
   131fc:	ldr	r0, [r6, #40]	; 0x28
   13200:	bl	112e8 <rb_get_fd@plt>
   13204:	lsl	r3, r4, #7
   13208:	add	r2, r3, sl
   1320c:	ldrh	r3, [r3, sl]
   13210:	cmp	r3, #2
   13214:	moveq	r3, #16
   13218:	movne	r3, #28
   1321c:	str	r3, [sp, #4]
   13220:	str	r2, [sp]
   13224:	mov	r3, #0
   13228:	mov	r2, r8
   1322c:	add	r1, sp, #8
   13230:	bl	11378 <sendto@plt>
   13234:	cmp	r8, r0
   13238:	bne	131d4 <sprintf@plt+0x1ba4>
   1323c:	cmn	r4, #1
   13240:	strne	r4, [fp, #288]	; 0x120
   13244:	add	sp, sp, #1024	; 0x400
   13248:	add	sp, sp, #12
   1324c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13250:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   13254:	ldrdeq	lr, [r2], -ip
   13258:	muleq	r2, ip, r2
   1325c:	push	{r4, lr}
   13260:	subs	r4, r0, #0
   13264:	beq	132d8 <sprintf@plt+0x1ca8>
   13268:	ldr	r3, [r4, #8]
   1326c:	cmp	r3, #0
   13270:	ldr	r2, [r4, #4]
   13274:	strne	r2, [r3, #4]
   13278:	ldreq	r3, [pc, #108]	; 132ec <sprintf@plt+0x1cbc>
   1327c:	streq	r2, [r3, #56]	; 0x38
   13280:	ldr	r3, [r4, #4]
   13284:	cmp	r3, #0
   13288:	ldr	r2, [r4, #8]
   1328c:	strne	r2, [r3, #8]
   13290:	ldreq	r3, [pc, #84]	; 132ec <sprintf@plt+0x1cbc>
   13294:	streq	r2, [r3, #52]	; 0x34
   13298:	mov	r3, #0
   1329c:	str	r3, [r4, #4]
   132a0:	str	r3, [r4, #8]
   132a4:	ldr	r2, [pc, #64]	; 132ec <sprintf@plt+0x1cbc>
   132a8:	ldr	r3, [r2, #60]	; 0x3c
   132ac:	sub	r3, r3, #1
   132b0:	str	r3, [r2, #60]	; 0x3c
   132b4:	ldr	r0, [r4, #420]	; 0x1a4
   132b8:	cmp	r0, #0
   132bc:	beq	132c4 <sprintf@plt+0x1c94>
   132c0:	bl	113f0 <free@plt>
   132c4:	cmp	r4, #0
   132c8:	popeq	{r4, pc}
   132cc:	mov	r0, r4
   132d0:	bl	113f0 <free@plt>
   132d4:	pop	{r4, pc}
   132d8:	ldr	r3, [pc, #16]	; 132f0 <sprintf@plt+0x1cc0>
   132dc:	mov	r2, #235	; 0xeb
   132e0:	ldr	r1, [pc, #12]	; 132f4 <sprintf@plt+0x1cc4>
   132e4:	ldr	r0, [pc, #12]	; 132f8 <sprintf@plt+0x1cc8>
   132e8:	bl	113c0 <__assert_fail@plt>
   132ec:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   132f0:	andeq	r9, r1, ip, lsr r2
   132f4:	andeq	r9, r1, r0, lsr #32
   132f8:	andeq	r9, r1, ip, lsr r0
   132fc:	push	{r4, r5, r6, lr}
   13300:	sub	sp, sp, #8
   13304:	mov	r5, r0
   13308:	mov	r1, #428	; 0x1ac
   1330c:	mov	r0, #1
   13310:	bl	11360 <calloc@plt>
   13314:	subs	r4, r0, #0
   13318:	beq	13344 <sprintf@plt+0x1d14>
   1331c:	bl	11450 <rb_current_time@plt>
   13320:	str	r0, [r4, #280]	; 0x118
   13324:	mov	r3, #3
   13328:	strb	r3, [r4, #277]	; 0x115
   1332c:	mov	r3, #4
   13330:	str	r3, [r4, #284]	; 0x11c
   13334:	str	r5, [r4, #424]	; 0x1a8
   13338:	mov	r6, #2
   1333c:	ldr	r5, [pc, #236]	; 13430 <sprintf@plt+0x1e00>
   13340:	b	13350 <sprintf@plt+0x1d20>
   13344:	bl	11504 <rb_outofmemory@plt>
   13348:	cmp	r2, #0
   1334c:	beq	133a0 <sprintf@plt+0x1d70>
   13350:	mov	r1, r6
   13354:	add	r0, sp, #6
   13358:	bl	115ac <rb_get_random@plt>
   1335c:	ldrh	r0, [sp, #6]
   13360:	ldr	ip, [r5, #52]	; 0x34
   13364:	cmp	ip, #0
   13368:	beq	1340c <sprintf@plt+0x1ddc>
   1336c:	ldr	r2, [ip]
   13370:	ldr	r3, [r2, #12]
   13374:	cmp	r0, r3
   13378:	beq	13348 <sprintf@plt+0x1d18>
   1337c:	mov	r3, ip
   13380:	ldr	r3, [r3, #8]
   13384:	cmp	r3, #0
   13388:	beq	133a0 <sprintf@plt+0x1d70>
   1338c:	ldr	r2, [r3]
   13390:	ldr	r1, [r2, #12]
   13394:	cmp	r0, r1
   13398:	bne	13380 <sprintf@plt+0x1d50>
   1339c:	b	13348 <sprintf@plt+0x1d18>
   133a0:	str	r0, [r4, #12]
   133a4:	mov	r2, r4
   133a8:	cmp	r4, #0
   133ac:	beq	1341c <sprintf@plt+0x1dec>
   133b0:	str	r4, [r4]
   133b4:	mov	r3, #0
   133b8:	str	r3, [r4, #4]
   133bc:	str	ip, [r4, #8]
   133c0:	str	r4, [ip, #4]
   133c4:	ldr	r3, [pc, #100]	; 13430 <sprintf@plt+0x1e00>
   133c8:	str	r2, [r3, #52]	; 0x34
   133cc:	ldr	r2, [r3, #60]	; 0x3c
   133d0:	add	r2, r2, #1
   133d4:	str	r2, [r3, #60]	; 0x3c
   133d8:	mov	r0, r4
   133dc:	add	sp, sp, #8
   133e0:	pop	{r4, r5, r6, pc}
   133e4:	str	r4, [r4]
   133e8:	mov	r3, #0
   133ec:	str	r3, [r4, #4]
   133f0:	str	r3, [r4, #8]
   133f4:	ldr	r3, [pc, #52]	; 13430 <sprintf@plt+0x1e00>
   133f8:	ldr	r3, [r3, #56]	; 0x38
   133fc:	cmp	r3, #0
   13400:	ldreq	r3, [pc, #40]	; 13430 <sprintf@plt+0x1e00>
   13404:	streq	r4, [r3, #56]	; 0x38
   13408:	b	133c4 <sprintf@plt+0x1d94>
   1340c:	str	r0, [r4, #12]
   13410:	mov	r2, r4
   13414:	cmp	r4, #0
   13418:	bne	133e4 <sprintf@plt+0x1db4>
   1341c:	ldr	r3, [pc, #16]	; 13434 <sprintf@plt+0x1e04>
   13420:	mov	r2, #144	; 0x90
   13424:	ldr	r1, [pc, #12]	; 13438 <sprintf@plt+0x1e08>
   13428:	ldr	r0, [pc, #12]	; 1343c <sprintf@plt+0x1e0c>
   1342c:	bl	113c0 <__assert_fail@plt>
   13430:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   13434:	andeq	r9, r1, ip, asr #4
   13438:	andeq	r9, r1, r0, lsr #32
   1343c:	andeq	r9, r1, ip, lsr r0
   13440:	push	{r4, r5, r6, r7, r8, lr}
   13444:	mov	r5, r1
   13448:	mov	r6, r3
   1344c:	subs	r4, r2, #0
   13450:	beq	13474 <sprintf@plt+0x1e44>
   13454:	mov	r2, #256	; 0x100
   13458:	mov	r1, r5
   1345c:	add	r0, r4, #21
   13460:	bl	113cc <rb_strlcpy@plt>
   13464:	strb	r6, [r4, #20]
   13468:	mov	r0, r4
   1346c:	bl	13068 <sprintf@plt+0x1a38>
   13470:	pop	{r4, r5, r6, r7, r8, pc}
   13474:	bl	132fc <sprintf@plt+0x1ccc>
   13478:	mov	r4, r0
   1347c:	mov	r0, r5
   13480:	bl	11444 <strlen@plt>
   13484:	add	r0, r0, #1
   13488:	bl	11534 <malloc@plt>
   1348c:	subs	r7, r0, #0
   13490:	beq	134a8 <sprintf@plt+0x1e78>
   13494:	mov	r1, r5
   13498:	mov	r0, r7
   1349c:	bl	114a4 <strcpy@plt>
   134a0:	str	r7, [r4, #420]	; 0x1a4
   134a4:	b	13454 <sprintf@plt+0x1e24>
   134a8:	bl	11504 <rb_outofmemory@plt>
   134ac:	push	{r4, lr}
   134b0:	mov	ip, r1
   134b4:	subs	r1, r0, #0
   134b8:	beq	134d0 <sprintf@plt+0x1ea0>
   134bc:	mov	r3, r2
   134c0:	mov	r2, #0
   134c4:	mov	r0, ip
   134c8:	bl	13440 <sprintf@plt+0x1e10>
   134cc:	pop	{r4, pc}
   134d0:	ldr	r3, [pc, #12]	; 134e4 <sprintf@plt+0x1eb4>
   134d4:	ldr	r2, [pc, #12]	; 134e8 <sprintf@plt+0x1eb8>
   134d8:	ldr	r1, [pc, #12]	; 134ec <sprintf@plt+0x1ebc>
   134dc:	ldr	r0, [pc, #12]	; 134f0 <sprintf@plt+0x1ec0>
   134e0:	bl	113c0 <__assert_fail@plt>
   134e4:	andeq	r9, r1, r8, asr r2
   134e8:	andeq	r0, r0, r9, lsr #3
   134ec:			; <UNDEFINED> instruction: 0x000192b0
   134f0:			; <UNDEFINED> instruction: 0x000192b8
   134f4:	push	{r4, lr}
   134f8:	bl	12fb4 <sprintf@plt+0x1984>
   134fc:	pop	{r4, pc}
   13500:	push	{r4, lr}
   13504:	ldr	r4, [pc, #28]	; 13528 <sprintf@plt+0x1ef8>
   13508:	ldr	r0, [r4, #40]	; 0x28
   1350c:	bl	11480 <rb_close@plt>
   13510:	mov	r3, #0
   13514:	str	r3, [r4, #40]	; 0x28
   13518:	ldr	r0, [r4, #44]	; 0x2c
   1351c:	bl	112d0 <rb_event_delete@plt>
   13520:	bl	12fb4 <sprintf@plt+0x1984>
   13524:	pop	{r4, pc}
   13528:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   1352c:	push	{r4, r5, r6, lr}
   13530:	sub	sp, sp, #256	; 0x100
   13534:	mov	r4, r1
   13538:	subs	r1, r0, #0
   1353c:	beq	1357c <sprintf@plt+0x1f4c>
   13540:	mov	r5, r2
   13544:	mov	r2, #256	; 0x100
   13548:	mov	r0, sp
   1354c:	bl	113cc <rb_strlcpy@plt>
   13550:	mov	r1, #46	; 0x2e
   13554:	mov	r0, sp
   13558:	bl	1133c <strchr@plt>
   1355c:	cmp	r0, #0
   13560:	beq	13590 <sprintf@plt+0x1f60>
   13564:	mov	r2, r5
   13568:	mov	r1, r4
   1356c:	mov	r0, sp
   13570:	bl	134ac <sprintf@plt+0x1e7c>
   13574:	add	sp, sp, #256	; 0x100
   13578:	pop	{r4, r5, r6, pc}
   1357c:	ldr	r3, [pc, #104]	; 135ec <sprintf@plt+0x1fbc>
   13580:	mov	r2, #412	; 0x19c
   13584:	ldr	r1, [pc, #100]	; 135f0 <sprintf@plt+0x1fc0>
   13588:	ldr	r0, [pc, #100]	; 135f4 <sprintf@plt+0x1fc4>
   1358c:	bl	113c0 <__assert_fail@plt>
   13590:	ldr	r3, [pc, #96]	; 135f8 <sprintf@plt+0x1fc8>
   13594:	ldrb	r3, [r3]
   13598:	cmp	r3, #0
   1359c:	beq	13564 <sprintf@plt+0x1f34>
   135a0:	mov	r0, sp
   135a4:	bl	11444 <strlen@plt>
   135a8:	mov	r6, r0
   135ac:	ldr	r0, [pc, #68]	; 135f8 <sprintf@plt+0x1fc8>
   135b0:	bl	11444 <strlen@plt>
   135b4:	add	r0, r6, r0
   135b8:	add	r0, r0, #2
   135bc:	cmp	r0, #254	; 0xfe
   135c0:	bhi	13564 <sprintf@plt+0x1f34>
   135c4:	add	r3, sp, #256	; 0x100
   135c8:	add	r3, r3, r6
   135cc:	mov	r2, #46	; 0x2e
   135d0:	strb	r2, [r3, #-256]	; 0xffffff00
   135d4:	add	r3, sp, #256	; 0x100
   135d8:	add	r0, r3, r6
   135dc:	ldr	r1, [pc, #20]	; 135f8 <sprintf@plt+0x1fc8>
   135e0:	sub	r0, r0, #255	; 0xff
   135e4:	bl	114a4 <strcpy@plt>
   135e8:	b	13564 <sprintf@plt+0x1f34>
   135ec:	andeq	r9, r1, r4, ror r2
   135f0:			; <UNDEFINED> instruction: 0x000192b0
   135f4:			; <UNDEFINED> instruction: 0x000192b8
   135f8:	muleq	r2, ip, r1
   135fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13600:	sub	sp, sp, #140	; 0x8c
   13604:	str	r0, [sp, #128]	; 0x80
   13608:	str	r1, [sp, #132]	; 0x84
   1360c:	ldrh	r1, [r2]
   13610:	cmp	r1, #2
   13614:	beq	13628 <sprintf@plt+0x1ff8>
   13618:	cmp	r1, #10
   1361c:	beq	1366c <sprintf@plt+0x203c>
   13620:	add	sp, sp, #140	; 0x8c
   13624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13628:	ldrb	r1, [r2, #7]
   1362c:	ldrb	r0, [r2, #6]
   13630:	ldrb	ip, [r2, #5]
   13634:	ldrb	r2, [r2, #4]
   13638:	ldr	lr, [pc, #396]	; 137cc <sprintf@plt+0x219c>
   1363c:	cmp	r3, #0
   13640:	moveq	r3, lr
   13644:	str	r3, [sp, #12]
   13648:	str	r2, [sp, #8]
   1364c:	str	ip, [sp, #4]
   13650:	str	r0, [sp]
   13654:	mov	r3, r1
   13658:	ldr	r2, [pc, #368]	; 137d0 <sprintf@plt+0x21a0>
   1365c:	ldr	r1, [sp, #132]	; 0x84
   13660:	ldr	r0, [sp, #128]	; 0x80
   13664:	bl	115c4 <snprintf@plt>
   13668:	b	13620 <sprintf@plt+0x1ff0>
   1366c:	ldrb	fp, [r2, #23]
   13670:	lsr	r1, fp, #4
   13674:	str	r1, [sp]
   13678:	ldrb	r1, [r2, #22]
   1367c:	and	r0, r1, #15
   13680:	str	r0, [sp, #4]
   13684:	lsr	r1, r1, #4
   13688:	str	r1, [sp, #8]
   1368c:	ldrb	r1, [r2, #21]
   13690:	and	r0, r1, #15
   13694:	str	r0, [sp, #12]
   13698:	lsr	r1, r1, #4
   1369c:	str	r1, [sp, #16]
   136a0:	ldrb	r1, [r2, #20]
   136a4:	and	r0, r1, #15
   136a8:	str	r0, [sp, #20]
   136ac:	lsr	r1, r1, #4
   136b0:	str	r1, [sp, #24]
   136b4:	ldrb	r1, [r2, #19]
   136b8:	and	r0, r1, #15
   136bc:	str	r0, [sp, #28]
   136c0:	lsr	r1, r1, #4
   136c4:	str	r1, [sp, #32]
   136c8:	ldrb	r1, [r2, #18]
   136cc:	and	r0, r1, #15
   136d0:	str	r0, [sp, #36]	; 0x24
   136d4:	lsr	r1, r1, #4
   136d8:	str	r1, [sp, #40]	; 0x28
   136dc:	ldrb	r1, [r2, #17]
   136e0:	and	r0, r1, #15
   136e4:	str	r0, [sp, #44]	; 0x2c
   136e8:	lsr	r1, r1, #4
   136ec:	str	r1, [sp, #48]	; 0x30
   136f0:	ldrb	r1, [r2, #16]
   136f4:	and	r0, r1, #15
   136f8:	str	r0, [sp, #52]	; 0x34
   136fc:	lsr	r1, r1, #4
   13700:	str	r1, [sp, #56]	; 0x38
   13704:	ldrb	r1, [r2, #15]
   13708:	and	r0, r1, #15
   1370c:	str	r0, [sp, #60]	; 0x3c
   13710:	lsr	r1, r1, #4
   13714:	str	r1, [sp, #64]	; 0x40
   13718:	ldrb	r1, [r2, #14]
   1371c:	and	r0, r1, #15
   13720:	str	r0, [sp, #68]	; 0x44
   13724:	lsr	r1, r1, #4
   13728:	str	r1, [sp, #72]	; 0x48
   1372c:	ldrb	r1, [r2, #13]
   13730:	and	r5, r1, #15
   13734:	lsr	r1, r1, #4
   13738:	ldrb	r0, [r2, #12]
   1373c:	and	r6, r0, #15
   13740:	lsr	r0, r0, #4
   13744:	ldrb	ip, [r2, #11]
   13748:	and	r7, ip, #15
   1374c:	lsr	ip, ip, #4
   13750:	ldrb	lr, [r2, #10]
   13754:	and	r8, lr, #15
   13758:	lsr	lr, lr, #4
   1375c:	ldrb	r4, [r2, #9]
   13760:	and	r9, r4, #15
   13764:	lsr	r4, r4, #4
   13768:	ldrb	r2, [r2, #8]
   1376c:	and	sl, r2, #15
   13770:	lsr	r2, r2, #4
   13774:	str	r2, [sp, #120]	; 0x78
   13778:	ldr	r2, [pc, #84]	; 137d4 <sprintf@plt+0x21a4>
   1377c:	cmp	r3, #0
   13780:	moveq	r3, r2
   13784:	str	r3, [sp, #124]	; 0x7c
   13788:	str	sl, [sp, #116]	; 0x74
   1378c:	str	r4, [sp, #112]	; 0x70
   13790:	str	r9, [sp, #108]	; 0x6c
   13794:	str	lr, [sp, #104]	; 0x68
   13798:	str	r8, [sp, #100]	; 0x64
   1379c:	str	ip, [sp, #96]	; 0x60
   137a0:	str	r7, [sp, #92]	; 0x5c
   137a4:	str	r0, [sp, #88]	; 0x58
   137a8:	str	r6, [sp, #84]	; 0x54
   137ac:	str	r1, [sp, #80]	; 0x50
   137b0:	str	r5, [sp, #76]	; 0x4c
   137b4:	and	r3, fp, #15
   137b8:	ldr	r2, [pc, #24]	; 137d8 <sprintf@plt+0x21a8>
   137bc:	ldr	r1, [sp, #132]	; 0x84
   137c0:	ldr	r0, [sp, #128]	; 0x80
   137c4:	bl	115c4 <snprintf@plt>
   137c8:	b	13620 <sprintf@plt+0x1ff0>
   137cc:	andeq	r9, r1, r4, asr #5
   137d0:	andeq	r9, r1, r0, ror #5
   137d4:	ldrdeq	r9, [r1], -r4
   137d8:	strdeq	r9, [r1], -r0
   137dc:	push	{r4, r5, r6, lr}
   137e0:	mov	r5, r1
   137e4:	subs	r4, r2, #0
   137e8:	beq	13814 <sprintf@plt+0x21e4>
   137ec:	mov	r3, #0
   137f0:	mov	r2, r5
   137f4:	mov	r1, #256	; 0x100
   137f8:	add	r0, r4, #21
   137fc:	bl	135fc <sprintf@plt+0x1fcc>
   13800:	mov	r3, #12
   13804:	strb	r3, [r4, #20]
   13808:	mov	r0, r4
   1380c:	bl	13068 <sprintf@plt+0x1a38>
   13810:	pop	{r4, r5, r6, pc}
   13814:	bl	132fc <sprintf@plt+0x1ccc>
   13818:	mov	r4, r0
   1381c:	mov	r2, #128	; 0x80
   13820:	mov	r1, r5
   13824:	add	r0, r0, #292	; 0x124
   13828:	bl	11468 <memcpy@plt>
   1382c:	mov	r1, #256	; 0x100
   13830:	mov	r0, #1
   13834:	bl	11360 <calloc@plt>
   13838:	cmp	r0, #0
   1383c:	strne	r0, [r4, #420]	; 0x1a4
   13840:	bne	137ec <sprintf@plt+0x21bc>
   13844:	bl	11504 <rb_outofmemory@plt>
   13848:	push	{r4, lr}
   1384c:	mov	r4, r0
   13850:	ldrb	r3, [r0, #277]	; 0x115
   13854:	sub	r3, r3, #1
   13858:	uxtb	r3, r3
   1385c:	strb	r3, [r0, #277]	; 0x115
   13860:	cmp	r3, #0
   13864:	beq	13898 <sprintf@plt+0x2268>
   13868:	ldrb	r3, [r0, #20]
   1386c:	cmp	r3, #12
   13870:	beq	138b8 <sprintf@plt+0x2288>
   13874:	cmp	r3, #28
   13878:	beq	13884 <sprintf@plt+0x2254>
   1387c:	cmp	r3, #1
   13880:	popne	{r4, pc}
   13884:	mov	r2, r4
   13888:	ldr	r1, [r4, #420]	; 0x1a4
   1388c:	mov	r0, #0
   13890:	bl	13440 <sprintf@plt+0x1e10>
   13894:	pop	{r4, pc}
   13898:	ldr	r3, [r0, #424]	; 0x1a8
   1389c:	ldr	r2, [r3, #4]
   138a0:	mov	r1, #0
   138a4:	ldr	r0, [r3]
   138a8:	blx	r2
   138ac:	mov	r0, r4
   138b0:	bl	1325c <sprintf@plt+0x1c2c>
   138b4:	pop	{r4, pc}
   138b8:	mov	r2, r0
   138bc:	add	r1, r0, #292	; 0x124
   138c0:	mov	r0, #0
   138c4:	bl	137dc <sprintf@plt+0x21ac>
   138c8:	pop	{r4, pc}
   138cc:	push	{r4, r5, r6, r7, r8, lr}
   138d0:	bl	11450 <rb_current_time@plt>
   138d4:	ldr	r3, [pc, #132]	; 13960 <sprintf@plt+0x2330>
   138d8:	ldr	r3, [r3, #52]	; 0x34
   138dc:	cmp	r3, #0
   138e0:	popeq	{r4, r5, r6, r7, r8, pc}
   138e4:	mov	r7, r0
   138e8:	ldr	r6, [r3, #8]
   138ec:	mov	r5, #0
   138f0:	ldr	r8, [pc, #104]	; 13960 <sprintf@plt+0x2330>
   138f4:	b	13924 <sprintf@plt+0x22f4>
   138f8:	cmp	r4, r5
   138fc:	movge	r3, #0
   13900:	movlt	r3, #1
   13904:	cmp	r5, #0
   13908:	orreq	r3, r3, #1
   1390c:	cmp	r3, #0
   13910:	movne	r5, r4
   13914:	cmp	r6, #0
   13918:	popeq	{r4, r5, r6, r7, r8, pc}
   1391c:	mov	r3, r6
   13920:	ldr	r6, [r6, #8]
   13924:	ldr	r0, [r3]
   13928:	ldr	r3, [r0, #284]	; 0x11c
   1392c:	ldr	r4, [r0, #280]	; 0x118
   13930:	add	r4, r3, r4
   13934:	cmp	r7, r4
   13938:	blt	138f8 <sprintf@plt+0x22c8>
   1393c:	ldr	r1, [r0, #288]	; 0x120
   13940:	ldr	r2, [r8, r1, lsl #2]
   13944:	add	r2, r2, #1
   13948:	str	r2, [r8, r1, lsl #2]
   1394c:	str	r7, [r0, #280]	; 0x118
   13950:	lsl	r3, r3, #1
   13954:	str	r3, [r0, #284]	; 0x11c
   13958:	bl	13848 <sprintf@plt+0x2218>
   1395c:	b	138f8 <sprintf@plt+0x22c8>
   13960:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   13964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13968:	sub	sp, sp, #1552	; 0x610
   1396c:	sub	sp, sp, #4
   13970:	mov	r3, #128	; 0x80
   13974:	str	r3, [sp, #512]	; 0x200
   13978:	bl	112e8 <rb_get_fd@plt>
   1397c:	add	r3, sp, #512	; 0x200
   13980:	str	r3, [sp, #4]
   13984:	add	r3, sp, #384	; 0x180
   13988:	str	r3, [sp]
   1398c:	mov	r3, #0
   13990:	ldr	r2, [pc, #1416]	; 13f20 <sprintf@plt+0x28f0>
   13994:	add	r1, sp, #516	; 0x204
   13998:	bl	115e8 <recvfrom@plt>
   1399c:	add	r3, r0, #1
   139a0:	cmp	r3, #1
   139a4:	bls	13f00 <sprintf@plt+0x28d0>
   139a8:	mov	sl, r0
   139ac:	cmp	r0, #12
   139b0:	movle	r0, #1
   139b4:	bgt	139c4 <sprintf@plt+0x2394>
   139b8:	add	sp, sp, #1552	; 0x610
   139bc:	add	sp, sp, #4
   139c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139c4:	add	r1, sp, #528	; 0x210
   139c8:	ldrh	r2, [r1, #-6]
   139cc:	rev16	r2, r2
   139d0:	strh	r2, [r1, #-6]
   139d4:	ldrh	r2, [r1, #-8]
   139d8:	rev16	r2, r2
   139dc:	uxth	r0, r2
   139e0:	str	r0, [sp, #20]
   139e4:	strh	r2, [r1, #-8]
   139e8:	ldrh	r2, [r1, #-4]
   139ec:	rev16	r2, r2
   139f0:	strh	r2, [r1, #-4]
   139f4:	ldrh	r2, [r1, #-2]
   139f8:	rev16	r2, r2
   139fc:	strh	r2, [r1, #-2]
   13a00:	ldrh	r1, [r1, #-12]
   13a04:	ldr	r3, [pc, #1304]	; 13f24 <sprintf@plt+0x28f4>
   13a08:	ldr	r3, [r3, #52]	; 0x34
   13a0c:	cmp	r3, #0
   13a10:	beq	13f08 <sprintf@plt+0x28d8>
   13a14:	ldr	r8, [r3]
   13a18:	ldr	r2, [r8, #12]
   13a1c:	cmp	r1, r2
   13a20:	beq	13a40 <sprintf@plt+0x2410>
   13a24:	ldr	r3, [r3, #8]
   13a28:	cmp	r3, #0
   13a2c:	beq	13a80 <sprintf@plt+0x2450>
   13a30:	ldr	r8, [r3]
   13a34:	ldr	r2, [r8, #12]
   13a38:	cmp	r1, r2
   13a3c:	bne	13a24 <sprintf@plt+0x23f4>
   13a40:	cmp	r8, #0
   13a44:	beq	13f10 <sprintf@plt+0x28e0>
   13a48:	ldr	r3, [pc, #1240]	; 13f28 <sprintf@plt+0x28f8>
   13a4c:	ldr	r7, [r3]
   13a50:	cmp	r7, #0
   13a54:	ble	13b5c <sprintf@plt+0x252c>
   13a58:	add	r3, sp, #384	; 0x180
   13a5c:	ldrh	r9, [r3]
   13a60:	ldrh	fp, [r3, #2]
   13a64:	ldr	r3, [sp, #388]	; 0x184
   13a68:	str	r3, [sp, #12]
   13a6c:	ldr	r4, [pc, #1208]	; 13f2c <sprintf@plt+0x28fc>
   13a70:	mov	r5, #0
   13a74:	add	r3, sp, #392	; 0x188
   13a78:	str	r3, [sp, #16]
   13a7c:	b	13aa0 <sprintf@plt+0x2470>
   13a80:	mov	r0, #1
   13a84:	b	139b8 <sprintf@plt+0x2388>
   13a88:	cmp	r9, #2
   13a8c:	beq	13b00 <sprintf@plt+0x24d0>
   13a90:	add	r5, r5, #1
   13a94:	add	r4, r4, #128	; 0x80
   13a98:	cmp	r7, r5
   13a9c:	beq	13b2c <sprintf@plt+0x24fc>
   13aa0:	ldrh	r3, [r4, #-8]
   13aa4:	cmp	r3, #2
   13aa8:	beq	13a88 <sprintf@plt+0x2458>
   13aac:	cmp	r3, #10
   13ab0:	bne	13a90 <sprintf@plt+0x2460>
   13ab4:	cmp	r9, #10
   13ab8:	bne	13a90 <sprintf@plt+0x2460>
   13abc:	ldrh	r3, [r4, #-6]
   13ac0:	cmp	r3, fp
   13ac4:	bne	13a90 <sprintf@plt+0x2460>
   13ac8:	mov	r2, #16
   13acc:	ldr	r1, [sp, #16]
   13ad0:	mov	r0, r4
   13ad4:	bl	112b8 <memcmp@plt>
   13ad8:	cmp	r0, #0
   13adc:	beq	13b64 <sprintf@plt+0x2534>
   13ae0:	mov	r2, #16
   13ae4:	ldr	r1, [pc, #1092]	; 13f30 <sprintf@plt+0x2900>
   13ae8:	mov	r0, r4
   13aec:	bl	112b8 <memcmp@plt>
   13af0:	cmp	r0, #0
   13af4:	bne	13a90 <sprintf@plt+0x2460>
   13af8:	mov	r4, #1
   13afc:	b	13b30 <sprintf@plt+0x2500>
   13b00:	ldrh	r3, [r4, #-6]
   13b04:	cmp	r3, fp
   13b08:	bne	13a90 <sprintf@plt+0x2460>
   13b0c:	ldr	r3, [r4, #-4]
   13b10:	cmp	r3, #0
   13b14:	beq	13b6c <sprintf@plt+0x253c>
   13b18:	ldr	r2, [sp, #12]
   13b1c:	cmp	r3, r2
   13b20:	bne	13a90 <sprintf@plt+0x2460>
   13b24:	mov	r4, #1
   13b28:	b	13b30 <sprintf@plt+0x2500>
   13b2c:	mov	r4, #0
   13b30:	ldr	r3, [r8, #288]	; 0x120
   13b34:	cmp	r3, r4
   13b38:	ldrne	r2, [pc, #996]	; 13f24 <sprintf@plt+0x28f4>
   13b3c:	ldrne	r3, [r2, r4, lsl #2]
   13b40:	addne	r3, r3, #3
   13b44:	strne	r3, [r2, r4, lsl #2]
   13b48:	ldr	r3, [sp, #20]
   13b4c:	cmp	r3, #1
   13b50:	beq	13b74 <sprintf@plt+0x2544>
   13b54:	mov	r0, #1
   13b58:	b	139b8 <sprintf@plt+0x2388>
   13b5c:	mov	r4, #0
   13b60:	b	13b30 <sprintf@plt+0x2500>
   13b64:	mov	r4, #1
   13b68:	b	13b30 <sprintf@plt+0x2500>
   13b6c:	mov	r4, #1
   13b70:	b	13b30 <sprintf@plt+0x2500>
   13b74:	add	r3, sp, #516	; 0x204
   13b78:	add	sl, r3, sl
   13b7c:	mov	r3, #256	; 0x100
   13b80:	str	r3, [sp]
   13b84:	add	r3, sp, #28
   13b88:	add	r2, sp, #528	; 0x210
   13b8c:	mov	r1, sl
   13b90:	add	r0, sp, #516	; 0x204
   13b94:	bl	1490c <sprintf@plt+0x32dc>
   13b98:	cmp	r0, #0
   13b9c:	ble	13b54 <sprintf@plt+0x2524>
   13ba0:	add	r1, r8, #21
   13ba4:	add	r0, sp, #28
   13ba8:	bl	11414 <rb_strcasecmp@plt>
   13bac:	cmp	r0, #0
   13bb0:	bne	13f18 <sprintf@plt+0x28e8>
   13bb4:	ldrb	r3, [sp, #519]	; 0x207
   13bb8:	ands	r3, r3, #15
   13bbc:	bne	13d08 <sprintf@plt+0x26d8>
   13bc0:	add	r3, sp, #528	; 0x210
   13bc4:	ldrh	r3, [r3, #-6]
   13bc8:	cmp	r3, #0
   13bcc:	bne	13bf4 <sprintf@plt+0x25c4>
   13bd0:	ldr	r3, [r8, #424]	; 0x1a8
   13bd4:	ldr	r2, [r3, #4]
   13bd8:	mov	r1, #0
   13bdc:	ldr	r0, [r3]
   13be0:	blx	r2
   13be4:	mov	r0, r8
   13be8:	bl	1325c <sprintf@plt+0x1c2c>
   13bec:	mov	r0, #1
   13bf0:	b	139b8 <sprintf@plt+0x2388>
   13bf4:	add	r3, sp, #528	; 0x210
   13bf8:	ldrh	r3, [r3, #-8]
   13bfc:	cmp	r3, #0
   13c00:	addeq	r5, sp, #528	; 0x210
   13c04:	beq	13c44 <sprintf@plt+0x2614>
   13c08:	add	r5, sp, #528	; 0x210
   13c0c:	sub	r6, r5, #12
   13c10:	mov	r1, sl
   13c14:	mov	r0, r5
   13c18:	bl	14944 <sprintf@plt+0x3314>
   13c1c:	cmp	r0, #0
   13c20:	blt	13df8 <sprintf@plt+0x27c8>
   13c24:	add	r0, r0, #4
   13c28:	add	r5, r5, r0
   13c2c:	ldrh	r3, [r6, #4]
   13c30:	sub	r3, r3, #1
   13c34:	uxth	r3, r3
   13c38:	strh	r3, [r6, #4]
   13c3c:	cmp	r3, #0
   13c40:	bne	13c10 <sprintf@plt+0x25e0>
   13c44:	add	r3, sp, #528	; 0x210
   13c48:	ldrh	r3, [r3, #-6]
   13c4c:	cmp	r3, #0
   13c50:	cmpne	sl, r5
   13c54:	bls	13d88 <sprintf@plt+0x2758>
   13c58:	add	r7, sp, #516	; 0x204
   13c5c:	add	r2, sp, #28
   13c60:	str	r2, [sp, #12]
   13c64:	ldr	fp, [pc, #712]	; 13f34 <sprintf@plt+0x2904>
   13c68:	mov	r9, #0
   13c6c:	mov	r6, r5
   13c70:	sub	r3, r3, #1
   13c74:	strh	r3, [r7, #6]
   13c78:	str	fp, [sp]
   13c7c:	ldr	r3, [sp, #12]
   13c80:	mov	r2, r6
   13c84:	mov	r1, sl
   13c88:	mov	r0, r7
   13c8c:	bl	1490c <sprintf@plt+0x32dc>
   13c90:	cmp	r0, #0
   13c94:	ble	13df8 <sprintf@plt+0x27c8>
   13c98:	strb	r9, [sp, #283]	; 0x11b
   13c9c:	add	r6, r6, r0
   13ca0:	add	r3, r6, #10
   13ca4:	cmp	sl, r3
   13ca8:	bls	13d88 <sprintf@plt+0x2758>
   13cac:	mov	r0, r6
   13cb0:	bl	14a14 <sprintf@plt+0x33e4>
   13cb4:	mov	r5, r0
   13cb8:	add	r0, r6, #2
   13cbc:	bl	14a14 <sprintf@plt+0x33e4>
   13cc0:	add	r0, r6, #4
   13cc4:	bl	14a24 <sprintf@plt+0x33f4>
   13cc8:	str	r0, [r8, #16]
   13ccc:	add	r0, r6, #8
   13cd0:	bl	14a14 <sprintf@plt+0x33e4>
   13cd4:	add	r2, r6, #10
   13cd8:	cmp	r5, #12
   13cdc:	beq	13e48 <sprintf@plt+0x2818>
   13ce0:	cmp	r5, #28
   13ce4:	beq	13de8 <sprintf@plt+0x27b8>
   13ce8:	cmp	r5, #1
   13cec:	beq	13d64 <sprintf@plt+0x2734>
   13cf0:	add	r6, r2, r0
   13cf4:	ldrh	r3, [r7, #6]
   13cf8:	cmp	r3, #0
   13cfc:	cmpne	sl, r6
   13d00:	bhi	13c70 <sprintf@plt+0x2640>
   13d04:	b	13d88 <sprintf@plt+0x2758>
   13d08:	sub	r2, r3, #4
   13d0c:	uxtb	r2, r2
   13d10:	cmp	r3, #2
   13d14:	cmpne	r2, #1
   13d18:	bls	13d44 <sprintf@plt+0x2714>
   13d1c:	cmp	r3, #3
   13d20:	bne	13bd0 <sprintf@plt+0x25a0>
   13d24:	ldr	r2, [pc, #504]	; 13f24 <sprintf@plt+0x28f4>
   13d28:	ldr	r3, [r2, r4, lsl #2]
   13d2c:	add	r1, r3, #3
   13d30:	cmp	r3, #0
   13d34:	movlt	r3, r1
   13d38:	asr	r3, r3, #2
   13d3c:	str	r3, [r2, r4, lsl #2]
   13d40:	b	13bd0 <sprintf@plt+0x25a0>
   13d44:	ldr	r2, [pc, #472]	; 13f24 <sprintf@plt+0x28f4>
   13d48:	ldr	r3, [r2, r4, lsl #2]
   13d4c:	add	r3, r3, #1
   13d50:	str	r3, [r2, r4, lsl #2]
   13d54:	mov	r0, r8
   13d58:	bl	13848 <sprintf@plt+0x2218>
   13d5c:	mov	r0, #1
   13d60:	b	139b8 <sprintf@plt+0x2388>
   13d64:	ldrb	r2, [r8, #20]
   13d68:	cmp	r0, #4
   13d6c:	cmpeq	r2, #1
   13d70:	bne	13df8 <sprintf@plt+0x27c8>
   13d74:	add	r3, r8, #292	; 0x124
   13d78:	mov	r2, #2
   13d7c:	strh	r2, [r3]
   13d80:	ldr	r3, [r6, #10]
   13d84:	str	r3, [r8, #296]	; 0x128
   13d88:	ldrb	r3, [r8, #20]
   13d8c:	cmp	r3, #12
   13d90:	beq	13e88 <sprintf@plt+0x2858>
   13d94:	mov	r1, #132	; 0x84
   13d98:	mov	r0, #1
   13d9c:	bl	11360 <calloc@plt>
   13da0:	subs	r5, r0, #0
   13da4:	beq	13efc <sprintf@plt+0x28cc>
   13da8:	ldr	r3, [r8, #420]	; 0x1a4
   13dac:	mov	r0, r5
   13db0:	str	r3, [r0], #4
   13db4:	mov	r2, #128	; 0x80
   13db8:	add	r1, r8, #292	; 0x124
   13dbc:	bl	11468 <memcpy@plt>
   13dc0:	ldr	r3, [r8, #424]	; 0x1a8
   13dc4:	ldr	r2, [r3, #4]
   13dc8:	mov	r1, r5
   13dcc:	ldr	r0, [r3]
   13dd0:	blx	r2
   13dd4:	mov	r0, r5
   13dd8:	bl	113f0 <free@plt>
   13ddc:	mov	r0, r8
   13de0:	bl	1325c <sprintf@plt+0x1c2c>
   13de4:	b	13eb8 <sprintf@plt+0x2888>
   13de8:	ldrb	r1, [r8, #20]
   13dec:	cmp	r0, #16
   13df0:	cmpeq	r1, #28
   13df4:	beq	13e18 <sprintf@plt+0x27e8>
   13df8:	ldr	r2, [pc, #292]	; 13f24 <sprintf@plt+0x28f4>
   13dfc:	ldr	r3, [r2, r4, lsl #2]
   13e00:	add	r3, r3, #1
   13e04:	str	r3, [r2, r4, lsl #2]
   13e08:	mov	r0, r8
   13e0c:	bl	13848 <sprintf@plt+0x2218>
   13e10:	mov	r0, #1
   13e14:	b	139b8 <sprintf@plt+0x2388>
   13e18:	add	r3, r8, #292	; 0x124
   13e1c:	mov	r1, #10
   13e20:	strh	r1, [r3]
   13e24:	ldr	ip, [r2]
   13e28:	ldr	r0, [r2, #4]
   13e2c:	ldr	r1, [r2, #8]
   13e30:	ldr	r2, [r2, #12]
   13e34:	str	ip, [r8, #300]	; 0x12c
   13e38:	str	r0, [r8, #304]	; 0x130
   13e3c:	str	r1, [r8, #308]	; 0x134
   13e40:	str	r2, [r8, #312]	; 0x138
   13e44:	b	13d88 <sprintf@plt+0x2758>
   13e48:	ldrb	r3, [r8, #20]
   13e4c:	cmp	r3, #12
   13e50:	bne	13df8 <sprintf@plt+0x27c8>
   13e54:	ldr	r3, [pc, #216]	; 13f34 <sprintf@plt+0x2904>
   13e58:	str	r3, [sp]
   13e5c:	add	r3, sp, #28
   13e60:	mov	r1, sl
   13e64:	add	r0, sp, #516	; 0x204
   13e68:	bl	1490c <sprintf@plt+0x32dc>
   13e6c:	cmp	r0, #0
   13e70:	ble	13df8 <sprintf@plt+0x27c8>
   13e74:	mov	r2, #256	; 0x100
   13e78:	add	r1, sp, #28
   13e7c:	ldr	r0, [r8, #420]	; 0x1a4
   13e80:	bl	113cc <rb_strlcpy@plt>
   13e84:	b	13d88 <sprintf@plt+0x2758>
   13e88:	ldr	r0, [r8, #420]	; 0x1a4
   13e8c:	cmp	r0, #0
   13e90:	beq	13edc <sprintf@plt+0x28ac>
   13e94:	add	r3, r8, #292	; 0x124
   13e98:	ldrh	r3, [r3]
   13e9c:	cmp	r3, #10
   13ea0:	moveq	r2, #28
   13ea4:	movne	r2, #1
   13ea8:	ldr	r1, [r8, #424]	; 0x1a8
   13eac:	bl	134ac <sprintf@plt+0x1e7c>
   13eb0:	mov	r0, r8
   13eb4:	bl	1325c <sprintf@plt+0x1c2c>
   13eb8:	ldr	r2, [pc, #100]	; 13f24 <sprintf@plt+0x28f4>
   13ebc:	ldr	r3, [r2, r4, lsl #2]
   13ec0:	add	r1, r3, #3
   13ec4:	cmp	r3, #0
   13ec8:	movlt	r3, r1
   13ecc:	asr	r3, r3, #2
   13ed0:	str	r3, [r2, r4, lsl #2]
   13ed4:	mov	r0, #1
   13ed8:	b	139b8 <sprintf@plt+0x2388>
   13edc:	ldr	r2, [pc, #64]	; 13f24 <sprintf@plt+0x28f4>
   13ee0:	ldr	r3, [r2, r4, lsl #2]
   13ee4:	add	r3, r3, #1
   13ee8:	str	r3, [r2, r4, lsl #2]
   13eec:	mov	r0, r8
   13ef0:	bl	13848 <sprintf@plt+0x2218>
   13ef4:	mov	r0, #1
   13ef8:	b	139b8 <sprintf@plt+0x2388>
   13efc:	bl	11504 <rb_outofmemory@plt>
   13f00:	mov	r0, #0
   13f04:	b	139b8 <sprintf@plt+0x2388>
   13f08:	mov	r0, #1
   13f0c:	b	139b8 <sprintf@plt+0x2388>
   13f10:	mov	r0, #1
   13f14:	b	139b8 <sprintf@plt+0x2388>
   13f18:	mov	r0, #1
   13f1c:	b	139b8 <sprintf@plt+0x2388>
   13f20:	andeq	r0, r0, ip, lsl #8
   13f24:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   13f28:	ldrdeq	lr, [r2], -ip
   13f2c:	andeq	pc, r2, r4, lsr #5
   13f30:	strdeq	r9, [r2], -r0
   13f34:	andeq	r0, r0, r3, ror #2
   13f38:	push	{r4, r5, r6, lr}
   13f3c:	mov	r4, r0
   13f40:	mov	r5, r1
   13f44:	mov	r1, r5
   13f48:	mov	r0, r4
   13f4c:	bl	13964 <sprintf@plt+0x2334>
   13f50:	cmp	r0, #0
   13f54:	bne	13f44 <sprintf@plt+0x2914>
   13f58:	mov	r3, #0
   13f5c:	ldr	r2, [pc, #12]	; 13f70 <sprintf@plt+0x2940>
   13f60:	mov	r1, #1
   13f64:	mov	r0, r4
   13f68:	bl	112dc <rb_setselect@plt>
   13f6c:	pop	{r4, r5, r6, pc}
   13f70:	andeq	r3, r1, r8, lsr pc
   13f74:	push	{r4, lr}
   13f78:	mov	r3, r1
   13f7c:	mov	r2, #0
   13f80:	mov	r1, r0
   13f84:	mov	r0, r3
   13f88:	bl	137dc <sprintf@plt+0x21ac>
   13f8c:	pop	{r4, pc}
   13f90:	ldrb	r3, [r0]
   13f94:	and	r2, r3, #192	; 0xc0
   13f98:	cmp	r2, #192	; 0xc0
   13f9c:	beq	13fdc <sprintf@plt+0x29ac>
   13fa0:	cmp	r2, #64	; 0x40
   13fa4:	beq	13fb0 <sprintf@plt+0x2980>
   13fa8:	mov	r0, r3
   13fac:	bx	lr
   13fb0:	cmp	r3, #65	; 0x41
   13fb4:	bne	13fe4 <sprintf@plt+0x29b4>
   13fb8:	ldrb	r0, [r0, #1]
   13fbc:	cmp	r0, #0
   13fc0:	moveq	r0, #256	; 0x100
   13fc4:	add	r3, r0, #7
   13fc8:	cmp	r3, #0
   13fcc:	addlt	r3, r0, #14
   13fd0:	asr	r3, r3, #3
   13fd4:	add	r0, r3, #1
   13fd8:	bx	lr
   13fdc:	mvn	r0, #0
   13fe0:	bx	lr
   13fe4:	mvn	r0, #0
   13fe8:	bx	lr
   13fec:	ldr	r3, [pc, #144]	; 14084 <sprintf@plt+0x2a54>
   13ff0:	ldr	r3, [r3]
   13ff4:	cmp	r3, #9
   13ff8:	bxgt	lr
   13ffc:	push	{r4, r5, r6, lr}
   14000:	sub	sp, sp, #40	; 0x28
   14004:	mov	r4, r0
   14008:	mov	r2, #32
   1400c:	mov	r1, #0
   14010:	add	r0, sp, #8
   14014:	bl	11390 <memset@plt>
   14018:	mov	r3, #2
   1401c:	str	r3, [sp, #16]
   14020:	mov	r3, #5
   14024:	str	r3, [sp, #8]
   14028:	add	r3, sp, #4
   1402c:	add	r2, sp, #8
   14030:	ldr	r1, [pc, #80]	; 14088 <sprintf@plt+0x2a58>
   14034:	mov	r0, r4
   14038:	bl	11420 <getaddrinfo@plt>
   1403c:	cmp	r0, #0
   14040:	bne	1407c <sprintf@plt+0x2a4c>
   14044:	ldr	r4, [sp, #4]
   14048:	cmp	r4, #0
   1404c:	beq	1407c <sprintf@plt+0x2a4c>
   14050:	ldr	r6, [pc, #44]	; 14084 <sprintf@plt+0x2a54>
   14054:	ldr	r5, [r6]
   14058:	ldr	r2, [r4, #16]
   1405c:	ldr	r1, [r4, #20]
   14060:	ldr	r0, [pc, #36]	; 1408c <sprintf@plt+0x2a5c>
   14064:	add	r0, r0, r5, lsl #7
   14068:	bl	11468 <memcpy@plt>
   1406c:	add	r5, r5, #1
   14070:	str	r5, [r6]
   14074:	mov	r0, r4
   14078:	bl	1139c <freeaddrinfo@plt>
   1407c:	add	sp, sp, #40	; 0x28
   14080:	pop	{r4, r5, r6, pc}
   14084:	ldrdeq	lr, [r2], -ip
   14088:	andeq	r9, r1, r0, ror #8
   1408c:	muleq	r2, ip, r2
   14090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14094:	sub	sp, sp, #276	; 0x114
   14098:	str	r2, [sp, #8]
   1409c:	str	r3, [sp, #4]
   140a0:	cmp	r0, r2
   140a4:	cmpls	r2, r1
   140a8:	bcs	1411c <sprintf@plt+0x2aec>
   140ac:	mov	fp, r0
   140b0:	mov	r9, r1
   140b4:	ldr	r4, [sp, #8]
   140b8:	mov	r7, #0
   140bc:	mvn	r3, #0
   140c0:	str	r3, [sp]
   140c4:	add	sl, sp, #16
   140c8:	sub	r3, r1, r0
   140cc:	str	r3, [sp, #12]
   140d0:	add	r6, r4, #1
   140d4:	ldrb	r5, [r4]
   140d8:	cmp	r5, #0
   140dc:	beq	14238 <sprintf@plt+0x2c08>
   140e0:	and	r3, r5, #192	; 0xc0
   140e4:	cmp	r3, #64	; 0x40
   140e8:	beq	1412c <sprintf@plt+0x2afc>
   140ec:	cmp	r3, #192	; 0xc0
   140f0:	beq	141ac <sprintf@plt+0x2b7c>
   140f4:	cmp	r3, #0
   140f8:	beq	1412c <sprintf@plt+0x2afc>
   140fc:	bl	11624 <__errno_location@plt>
   14100:	mov	r3, #90	; 0x5a
   14104:	str	r3, [r0]
   14108:	mvn	r3, #0
   1410c:	str	r3, [sp]
   14110:	ldr	r0, [sp]
   14114:	add	sp, sp, #276	; 0x114
   14118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1411c:	bl	11624 <__errno_location@plt>
   14120:	mov	r3, #90	; 0x5a
   14124:	str	r3, [r0]
   14128:	b	14108 <sprintf@plt+0x2ad8>
   1412c:	mov	r0, r4
   14130:	bl	13f90 <sprintf@plt+0x2960>
   14134:	subs	r8, r0, #0
   14138:	blt	1418c <sprintf@plt+0x2b5c>
   1413c:	add	r3, r8, #1
   14140:	add	r3, sl, r3
   14144:	add	r2, sp, #268	; 0x10c
   14148:	add	r2, r2, #3
   1414c:	cmp	r2, r3
   14150:	bls	1419c <sprintf@plt+0x2b6c>
   14154:	add	r4, r6, r8
   14158:	cmp	r9, r4
   1415c:	bls	1419c <sprintf@plt+0x2b6c>
   14160:	add	r3, r8, #1
   14164:	add	r7, r7, r3
   14168:	add	r3, sl, #1
   1416c:	strb	r5, [sl]
   14170:	mov	r2, r8
   14174:	mov	r1, r6
   14178:	mov	r5, r3
   1417c:	mov	r0, r3
   14180:	bl	11468 <memcpy@plt>
   14184:	add	sl, r5, r8
   14188:	b	140d0 <sprintf@plt+0x2aa0>
   1418c:	bl	11624 <__errno_location@plt>
   14190:	mov	r3, #90	; 0x5a
   14194:	str	r3, [r0]
   14198:	b	14108 <sprintf@plt+0x2ad8>
   1419c:	bl	11624 <__errno_location@plt>
   141a0:	mov	r3, #90	; 0x5a
   141a4:	str	r3, [r0]
   141a8:	b	14108 <sprintf@plt+0x2ad8>
   141ac:	cmp	r9, r6
   141b0:	bls	14218 <sprintf@plt+0x2be8>
   141b4:	ldr	r3, [sp]
   141b8:	cmp	r3, #0
   141bc:	ldrlt	r3, [sp, #8]
   141c0:	sublt	r6, r6, r3
   141c4:	addlt	r3, r6, #1
   141c8:	strlt	r3, [sp]
   141cc:	lsl	r5, r5, #8
   141d0:	and	r5, r5, #16128	; 0x3f00
   141d4:	ldrb	r4, [r4, #1]
   141d8:	orr	r4, r5, r4
   141dc:	adds	r4, fp, r4
   141e0:	movcs	r3, #1
   141e4:	movcc	r3, #0
   141e8:	cmp	r9, r4
   141ec:	orrls	r3, r3, #1
   141f0:	cmp	r3, #0
   141f4:	bne	14228 <sprintf@plt+0x2bf8>
   141f8:	add	r7, r7, #2
   141fc:	ldr	r3, [sp, #12]
   14200:	cmp	r7, r3
   14204:	blt	140d0 <sprintf@plt+0x2aa0>
   14208:	bl	11624 <__errno_location@plt>
   1420c:	mov	r3, #90	; 0x5a
   14210:	str	r3, [r0]
   14214:	b	14108 <sprintf@plt+0x2ad8>
   14218:	bl	11624 <__errno_location@plt>
   1421c:	mov	r3, #90	; 0x5a
   14220:	str	r3, [r0]
   14224:	b	14108 <sprintf@plt+0x2ad8>
   14228:	bl	11624 <__errno_location@plt>
   1422c:	mov	r3, #90	; 0x5a
   14230:	str	r3, [r0]
   14234:	b	14108 <sprintf@plt+0x2ad8>
   14238:	mov	r3, #0
   1423c:	strb	r3, [sl]
   14240:	ldr	r3, [sp]
   14244:	cmp	r3, #0
   14248:	ldrlt	r3, [sp, #8]
   1424c:	sublt	r3, r6, r3
   14250:	strlt	r3, [sp]
   14254:	ldr	r3, [sp]
   14258:	cmn	r3, #1
   1425c:	beq	14110 <sprintf@plt+0x2ae0>
   14260:	ldr	r7, [sp, #312]	; 0x138
   14264:	ldr	r3, [sp, #4]
   14268:	add	r7, r3, r7
   1426c:	add	r6, sp, #16
   14270:	ldr	sl, [pc, #1200]	; 14728 <sprintf@plt+0x30f8>
   14274:	ldr	fp, [pc, #1200]	; 1472c <sprintf@plt+0x30fc>
   14278:	b	146a8 <sprintf@plt+0x3078>
   1427c:	bl	11624 <__errno_location@plt>
   14280:	mov	r3, #90	; 0x5a
   14284:	str	r3, [r0]
   14288:	b	144b4 <sprintf@plt+0x2e84>
   1428c:	bl	11624 <__errno_location@plt>
   14290:	mov	r3, #90	; 0x5a
   14294:	str	r3, [r0]
   14298:	b	144b4 <sprintf@plt+0x2e84>
   1429c:	mov	r4, r3
   142a0:	b	146e0 <sprintf@plt+0x30b0>
   142a4:	bl	11624 <__errno_location@plt>
   142a8:	mov	r3, #90	; 0x5a
   142ac:	str	r3, [r0]
   142b0:	b	144b4 <sprintf@plt+0x2e84>
   142b4:	bl	11624 <__errno_location@plt>
   142b8:	mov	r3, #90	; 0x5a
   142bc:	str	r3, [r0]
   142c0:	b	144b4 <sprintf@plt+0x2e84>
   142c4:	cmp	r5, #65	; 0x41
   142c8:	bne	14338 <sprintf@plt+0x2d08>
   142cc:	ldrb	r3, [r6, #1]
   142d0:	str	r3, [sp, #8]
   142d4:	mov	r2, r3
   142d8:	cmp	r3, #0
   142dc:	beq	145c4 <sprintf@plt+0x2f94>
   142e0:	add	r3, r3, #3
   142e4:	asr	r3, r3, #2
   142e8:	cmp	r2, #99	; 0x63
   142ec:	movgt	r2, #9
   142f0:	bgt	14300 <sprintf@plt+0x2cd0>
   142f4:	cmp	r2, #9
   142f8:	movgt	r2, #8
   142fc:	movle	r2, #7
   14300:	add	r3, r3, r2
   14304:	add	r3, r4, r3
   14308:	cmp	r7, r3
   1430c:	bls	14374 <sprintf@plt+0x2d44>
   14310:	add	r5, r6, #2
   14314:	ldr	r3, [pc, #1044]	; 14730 <sprintf@plt+0x3100>
   14318:	ldr	r0, [r3]
   1431c:	mov	r8, r4
   14320:	str	r0, [r8], #3
   14324:	ldr	r3, [sp, #8]
   14328:	cmp	r3, #7
   1432c:	bgt	145ec <sprintf@plt+0x2fbc>
   14330:	ldr	r3, [sp, #8]
   14334:	b	14640 <sprintf@plt+0x3010>
   14338:	bl	11624 <__errno_location@plt>
   1433c:	mov	r3, #22
   14340:	str	r3, [r0]
   14344:	b	144b4 <sprintf@plt+0x2e84>
   14348:	add	r6, r5, #1
   1434c:	rsb	r3, r3, #8
   14350:	ldrb	r2, [r5]
   14354:	mov	r1, #255	; 0xff
   14358:	and	r2, r2, r1, lsl r3
   1435c:	ldr	r1, [pc, #976]	; 14734 <sprintf@plt+0x3104>
   14360:	mov	r0, r8
   14364:	bl	11630 <sprintf@plt>
   14368:	add	r8, r8, r0
   1436c:	mov	r5, r6
   14370:	b	1467c <sprintf@plt+0x304c>
   14374:	bl	11624 <__errno_location@plt>
   14378:	mov	r3, #90	; 0x5a
   1437c:	str	r3, [r0]
   14380:	b	144b4 <sprintf@plt+0x2e84>
   14384:	add	r2, r4, #1
   14388:	cmp	r7, r2
   1438c:	bls	144a8 <sprintf@plt+0x2e78>
   14390:	mov	r2, r4
   14394:	strb	r1, [r2], #2
   14398:	strb	r3, [r4, #1]
   1439c:	mov	r4, r2
   143a0:	cmp	r5, r9
   143a4:	beq	146a0 <sprintf@plt+0x3070>
   143a8:	ldrb	r3, [r5], #1
   143ac:	sub	r2, r3, #34	; 0x22
   143b0:	cmp	r2, #58	; 0x3a
   143b4:	ldrls	pc, [pc, r2, lsl #2]
   143b8:	b	144c0 <sprintf@plt+0x2e90>
   143bc:	andeq	r4, r1, r4, lsl #7
   143c0:	andeq	r4, r1, r0, asr #9
   143c4:	andeq	r4, r1, r4, lsl #7
   143c8:	andeq	r4, r1, r0, asr #9
   143cc:	andeq	r4, r1, r0, asr #9
   143d0:	andeq	r4, r1, r0, asr #9
   143d4:	andeq	r4, r1, r4, lsl #7
   143d8:	andeq	r4, r1, r4, lsl #7
   143dc:	andeq	r4, r1, r0, asr #9
   143e0:	andeq	r4, r1, r0, asr #9
   143e4:	andeq	r4, r1, r0, asr #9
   143e8:	andeq	r4, r1, r0, asr #9
   143ec:	andeq	r4, r1, r4, lsl #7
   143f0:	andeq	r4, r1, r0, asr #9
   143f4:	andeq	r4, r1, r0, asr #9
   143f8:	andeq	r4, r1, r0, asr #9
   143fc:	andeq	r4, r1, r0, asr #9
   14400:	andeq	r4, r1, r0, asr #9
   14404:	andeq	r4, r1, r0, asr #9
   14408:	andeq	r4, r1, r0, asr #9
   1440c:	andeq	r4, r1, r0, asr #9
   14410:	andeq	r4, r1, r0, asr #9
   14414:	andeq	r4, r1, r0, asr #9
   14418:	andeq	r4, r1, r0, asr #9
   1441c:	andeq	r4, r1, r0, asr #9
   14420:	andeq	r4, r1, r4, lsl #7
   14424:	andeq	r4, r1, r0, asr #9
   14428:	andeq	r4, r1, r0, asr #9
   1442c:	andeq	r4, r1, r0, asr #9
   14430:	andeq	r4, r1, r0, asr #9
   14434:	andeq	r4, r1, r4, lsl #7
   14438:	andeq	r4, r1, r0, asr #9
   1443c:	andeq	r4, r1, r0, asr #9
   14440:	andeq	r4, r1, r0, asr #9
   14444:	andeq	r4, r1, r0, asr #9
   14448:	andeq	r4, r1, r0, asr #9
   1444c:	andeq	r4, r1, r0, asr #9
   14450:	andeq	r4, r1, r0, asr #9
   14454:	andeq	r4, r1, r0, asr #9
   14458:	andeq	r4, r1, r0, asr #9
   1445c:	andeq	r4, r1, r0, asr #9
   14460:	andeq	r4, r1, r0, asr #9
   14464:	andeq	r4, r1, r0, asr #9
   14468:	andeq	r4, r1, r0, asr #9
   1446c:	andeq	r4, r1, r0, asr #9
   14470:	andeq	r4, r1, r0, asr #9
   14474:	andeq	r4, r1, r0, asr #9
   14478:	andeq	r4, r1, r0, asr #9
   1447c:	andeq	r4, r1, r0, asr #9
   14480:	andeq	r4, r1, r0, asr #9
   14484:	andeq	r4, r1, r0, asr #9
   14488:	andeq	r4, r1, r0, asr #9
   1448c:	andeq	r4, r1, r0, asr #9
   14490:	andeq	r4, r1, r0, asr #9
   14494:	andeq	r4, r1, r0, asr #9
   14498:	andeq	r4, r1, r0, asr #9
   1449c:	andeq	r4, r1, r0, asr #9
   144a0:	andeq	r4, r1, r0, asr #9
   144a4:	andeq	r4, r1, r4, lsl #7
   144a8:	bl	11624 <__errno_location@plt>
   144ac:	mov	r3, #90	; 0x5a
   144b0:	str	r3, [r0]
   144b4:	mvn	r3, #0
   144b8:	str	r3, [sp]
   144bc:	b	14110 <sprintf@plt+0x2ae0>
   144c0:	sub	r2, r3, #33	; 0x21
   144c4:	cmp	r2, #93	; 0x5d
   144c8:	bls	14538 <sprintf@plt+0x2f08>
   144cc:	add	r2, r4, #3
   144d0:	cmp	r7, r2
   144d4:	bls	14528 <sprintf@plt+0x2ef8>
   144d8:	strb	r1, [r4]
   144dc:	umull	r2, lr, sl, r3
   144e0:	lsr	r2, lr, #5
   144e4:	ldrb	lr, [r0, lr, lsr #5]
   144e8:	strb	lr, [r4, #1]
   144ec:	mul	r2, ip, r2
   144f0:	sub	r2, r3, r2
   144f4:	uxtb	r2, r2
   144f8:	umull	lr, r2, fp, r2
   144fc:	ldrb	r2, [r0, r2, lsr #3]
   14500:	strb	r2, [r4, #2]
   14504:	umull	lr, r2, fp, r3
   14508:	lsr	r2, r2, #3
   1450c:	add	r2, r2, r2, lsl #2
   14510:	sub	r3, r3, r2, lsl #1
   14514:	uxtb	r3, r3
   14518:	ldrb	r3, [r0, r3]
   1451c:	strb	r3, [r4, #3]
   14520:	add	r4, r4, #4
   14524:	b	143a0 <sprintf@plt+0x2d70>
   14528:	bl	11624 <__errno_location@plt>
   1452c:	mov	r3, #90	; 0x5a
   14530:	str	r3, [r0]
   14534:	b	144b4 <sprintf@plt+0x2e84>
   14538:	cmp	r7, r4
   1453c:	strbhi	r3, [r4]
   14540:	addhi	r4, r4, #1
   14544:	bhi	143a0 <sprintf@plt+0x2d70>
   14548:	bl	11624 <__errno_location@plt>
   1454c:	mov	r3, #90	; 0x5a
   14550:	str	r3, [r0]
   14554:	b	144b4 <sprintf@plt+0x2e84>
   14558:	ldr	r2, [sp, #4]
   1455c:	cmp	r2, r3
   14560:	beq	14590 <sprintf@plt+0x2f60>
   14564:	cmp	r7, r3
   14568:	bls	145b4 <sprintf@plt+0x2f84>
   1456c:	mov	r2, #0
   14570:	strb	r2, [r3], #1
   14574:	ldr	r2, [sp, #4]
   14578:	sub	r3, r3, r2
   1457c:	cmn	r3, #1
   14580:	ldr	r2, [sp]
   14584:	moveq	r2, r3
   14588:	str	r2, [sp]
   1458c:	b	14110 <sprintf@plt+0x2ae0>
   14590:	cmp	r7, r3
   14594:	movhi	r2, #46	; 0x2e
   14598:	strbhi	r2, [r3]
   1459c:	addhi	r3, r3, #1
   145a0:	bhi	14564 <sprintf@plt+0x2f34>
   145a4:	bl	11624 <__errno_location@plt>
   145a8:	mov	r3, #90	; 0x5a
   145ac:	str	r3, [r0]
   145b0:	b	144b4 <sprintf@plt+0x2e84>
   145b4:	bl	11624 <__errno_location@plt>
   145b8:	mov	r3, #90	; 0x5a
   145bc:	str	r3, [r0]
   145c0:	b	144b4 <sprintf@plt+0x2e84>
   145c4:	add	r3, r4, #73	; 0x49
   145c8:	cmp	r7, r3
   145cc:	bls	14374 <sprintf@plt+0x2d44>
   145d0:	add	r5, r6, #2
   145d4:	ldr	r3, [pc, #340]	; 14730 <sprintf@plt+0x3100>
   145d8:	ldr	r0, [r3]
   145dc:	mov	r8, r4
   145e0:	str	r0, [r8], #3
   145e4:	mov	r3, #256	; 0x100
   145e8:	str	r3, [sp, #8]
   145ec:	ldr	r3, [sp, #8]
   145f0:	sub	r3, r3, #8
   145f4:	lsr	r3, r3, #3
   145f8:	str	r3, [sp, #12]
   145fc:	add	r9, r3, #3
   14600:	add	r9, r6, r9
   14604:	mov	r6, r5
   14608:	ldrb	r2, [r6], #1
   1460c:	ldr	r1, [pc, #288]	; 14734 <sprintf@plt+0x3104>
   14610:	mov	r0, r8
   14614:	bl	11630 <sprintf@plt>
   14618:	add	r8, r8, r0
   1461c:	cmp	r9, r6
   14620:	bne	14608 <sprintf@plt+0x2fd8>
   14624:	ldr	r3, [sp, #8]
   14628:	sub	r3, r3, #8
   1462c:	ldr	r1, [sp, #12]
   14630:	rsb	r2, r1, r1, lsl #29
   14634:	add	r3, r3, r2, lsl #3
   14638:	add	r2, r1, #1
   1463c:	add	r5, r5, r2
   14640:	cmp	r3, #4
   14644:	bgt	14348 <sprintf@plt+0x2d18>
   14648:	cmp	r3, #0
   1464c:	ble	1467c <sprintf@plt+0x304c>
   14650:	add	r6, r5, #1
   14654:	ldrb	r2, [r5]
   14658:	rsb	r3, r3, #4
   1465c:	mov	r1, #15
   14660:	lsl	r3, r1, r3
   14664:	and	r2, r3, r2, lsr #4
   14668:	ldr	r1, [pc, #200]	; 14738 <sprintf@plt+0x3108>
   1466c:	mov	r0, r8
   14670:	bl	11630 <sprintf@plt>
   14674:	add	r8, r8, r0
   14678:	mov	r5, r6
   1467c:	ldr	r2, [sp, #8]
   14680:	ldr	r1, [pc, #180]	; 1473c <sprintf@plt+0x310c>
   14684:	mov	r0, r8
   14688:	bl	11630 <sprintf@plt>
   1468c:	add	r0, r8, r0
   14690:	sub	r4, r0, r4
   14694:	cmp	r4, #0
   14698:	blt	14374 <sprintf@plt+0x2d44>
   1469c:	mov	r4, r0
   146a0:	mov	r6, r5
   146a4:	mov	r3, r4
   146a8:	ldrb	r5, [r6]
   146ac:	cmp	r5, #0
   146b0:	beq	14558 <sprintf@plt+0x2f28>
   146b4:	and	r8, r5, #192	; 0xc0
   146b8:	cmp	r8, #192	; 0xc0
   146bc:	beq	1427c <sprintf@plt+0x2c4c>
   146c0:	ldr	r2, [sp, #4]
   146c4:	cmp	r2, r3
   146c8:	beq	1429c <sprintf@plt+0x2c6c>
   146cc:	cmp	r7, r3
   146d0:	bls	1428c <sprintf@plt+0x2c5c>
   146d4:	add	r4, r3, #1
   146d8:	mov	r2, #46	; 0x2e
   146dc:	strb	r2, [r3]
   146e0:	mov	r0, r6
   146e4:	bl	13f90 <sprintf@plt+0x2960>
   146e8:	cmp	r0, #0
   146ec:	blt	142a4 <sprintf@plt+0x2c74>
   146f0:	add	r3, r4, r0
   146f4:	cmp	r7, r3
   146f8:	bls	142b4 <sprintf@plt+0x2c84>
   146fc:	cmp	r8, #64	; 0x40
   14700:	beq	142c4 <sprintf@plt+0x2c94>
   14704:	add	r5, r6, #1
   14708:	cmp	r0, #0
   1470c:	ble	146a0 <sprintf@plt+0x3070>
   14710:	add	r9, r0, #1
   14714:	add	r9, r6, r9
   14718:	mov	r1, #92	; 0x5c
   1471c:	ldr	r0, [pc, #28]	; 14740 <sprintf@plt+0x3110>
   14720:	mov	ip, #100	; 0x64
   14724:	b	143a8 <sprintf@plt+0x2d78>
   14728:	mvnpl	r8, pc, lsl r5
   1472c:	stclgt	12, cr12, [ip], {205}	; 0xcd
   14730:	andeq	r9, r1, r8, ror #8
   14734:	andeq	r9, r1, ip, ror #8
   14738:	andeq	r9, r1, r4, ror r4
   1473c:	andeq	r9, r1, r8, ror r4
   14740:	andeq	r9, r1, r4, asr r3
   14744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14748:	sub	sp, sp, #132	; 0x84
   1474c:	mov	r2, #0
   14750:	ldr	r3, [pc, #400]	; 148e8 <sprintf@plt+0x32b8>
   14754:	str	r2, [r3]
   14758:	ldr	r1, [pc, #396]	; 148ec <sprintf@plt+0x32bc>
   1475c:	ldr	r0, [pc, #396]	; 148f0 <sprintf@plt+0x32c0>
   14760:	bl	11384 <fopen@plt>
   14764:	subs	r5, r0, #0
   14768:	beq	148c0 <sprintf@plt+0x3290>
   1476c:	ldr	r6, [pc, #384]	; 148f4 <sprintf@plt+0x32c4>
   14770:	ldr	r8, [pc, #384]	; 148f8 <sprintf@plt+0x32c8>
   14774:	ldr	r7, [pc, #384]	; 148fc <sprintf@plt+0x32cc>
   14778:	ldr	sl, [pc, #384]	; 14900 <sprintf@plt+0x32d0>
   1477c:	ldr	r9, [pc, #384]	; 14904 <sprintf@plt+0x32d4>
   14780:	mov	r2, r5
   14784:	mov	r1, #128	; 0x80
   14788:	mov	r0, sp
   1478c:	bl	11324 <fgets@plt>
   14790:	cmp	r0, #0
   14794:	beq	148b8 <sprintf@plt+0x3288>
   14798:	mov	r1, r6
   1479c:	mov	r0, sp
   147a0:	bl	11600 <strpbrk@plt>
   147a4:	cmp	r0, #0
   147a8:	movne	r3, #0
   147ac:	strbne	r3, [r0]
   147b0:	bl	11510 <__ctype_b_loc@plt>
   147b4:	ldr	r0, [r0]
   147b8:	mov	r3, sp
   147bc:	mov	r4, r3
   147c0:	ldrb	r2, [r3], #1
   147c4:	lsl	r1, r2, #1
   147c8:	ldrh	r1, [r0, r1]
   147cc:	tst	r1, #8192	; 0x2000
   147d0:	bne	147bc <sprintf@plt+0x318c>
   147d4:	cmp	r2, #0
   147d8:	beq	14780 <sprintf@plt+0x3150>
   147dc:	cmp	r2, #59	; 0x3b
   147e0:	cmpne	r2, #35	; 0x23
   147e4:	movne	fp, r4
   147e8:	bne	147f4 <sprintf@plt+0x31c4>
   147ec:	b	14780 <sprintf@plt+0x3150>
   147f0:	mov	fp, r2
   147f4:	add	r2, fp, #1
   147f8:	ldrb	r1, [fp, #1]
   147fc:	lsl	r3, r1, #1
   14800:	ldrh	r3, [r0, r3]
   14804:	lsr	r3, r3, #13
   14808:	eor	r3, r3, #1
   1480c:	cmp	r1, #0
   14810:	moveq	r3, #0
   14814:	andne	r3, r3, #1
   14818:	cmp	r3, #0
   1481c:	bne	147f0 <sprintf@plt+0x31c0>
   14820:	cmp	r1, #0
   14824:	beq	14780 <sprintf@plt+0x3150>
   14828:	add	fp, fp, #2
   1482c:	strb	r3, [r2]
   14830:	ldrb	r3, [r2, #1]
   14834:	lsl	r3, r3, #1
   14838:	ldrh	r3, [r0, r3]
   1483c:	tst	r3, #8192	; 0x2000
   14840:	beq	14858 <sprintf@plt+0x3228>
   14844:	ldrb	r3, [fp, #1]!
   14848:	lsl	r3, r3, #1
   1484c:	ldrh	r3, [r0, r3]
   14850:	tst	r3, #8192	; 0x2000
   14854:	bne	14844 <sprintf@plt+0x3214>
   14858:	mov	r1, r8
   1485c:	mov	r0, fp
   14860:	bl	11600 <strpbrk@plt>
   14864:	cmp	r0, #0
   14868:	movne	r3, #0
   1486c:	strbne	r3, [r0]
   14870:	mov	r1, r7
   14874:	mov	r0, r4
   14878:	bl	11414 <rb_strcasecmp@plt>
   1487c:	cmp	r0, #0
   14880:	bne	14898 <sprintf@plt+0x3268>
   14884:	mov	r2, #256	; 0x100
   14888:	mov	r1, fp
   1488c:	mov	r0, r9
   14890:	bl	113cc <rb_strlcpy@plt>
   14894:	b	14780 <sprintf@plt+0x3150>
   14898:	mov	r1, sl
   1489c:	mov	r0, r4
   148a0:	bl	11414 <rb_strcasecmp@plt>
   148a4:	cmp	r0, #0
   148a8:	bne	14780 <sprintf@plt+0x3150>
   148ac:	mov	r0, fp
   148b0:	bl	13fec <sprintf@plt+0x29bc>
   148b4:	b	14780 <sprintf@plt+0x3150>
   148b8:	mov	r0, r5
   148bc:	bl	11318 <fclose@plt>
   148c0:	ldr	r3, [pc, #32]	; 148e8 <sprintf@plt+0x32b8>
   148c4:	ldr	r3, [r3]
   148c8:	cmp	r3, #0
   148cc:	beq	148dc <sprintf@plt+0x32ac>
   148d0:	mov	r0, #0
   148d4:	add	sp, sp, #132	; 0x84
   148d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148dc:	ldr	r0, [pc, #36]	; 14908 <sprintf@plt+0x32d8>
   148e0:	bl	13fec <sprintf@plt+0x29bc>
   148e4:	b	148d0 <sprintf@plt+0x32a0>
   148e8:	ldrdeq	lr, [r2], -ip
   148ec:	andeq	r9, r1, r0, lsl #9
   148f0:	andeq	r9, r1, r4, lsl #9
   148f4:	muleq	r1, r8, r4
   148f8:	muleq	r1, ip, r4
   148fc:	andeq	r9, r1, r0, ror #8
   14900:	andeq	r9, r1, r0, lsr #9
   14904:	muleq	r2, ip, r1
   14908:	andeq	r9, r1, ip, lsr #9
   1490c:	push	{r4, lr}
   14910:	sub	sp, sp, #8
   14914:	mov	r4, r3
   14918:	ldr	ip, [sp, #16]
   1491c:	str	ip, [sp]
   14920:	bl	14090 <sprintf@plt+0x2a60>
   14924:	cmp	r0, #0
   14928:	ble	1493c <sprintf@plt+0x330c>
   1492c:	ldrb	r3, [r4]
   14930:	cmp	r3, #46	; 0x2e
   14934:	moveq	r3, #0
   14938:	strbeq	r3, [r4]
   1493c:	add	sp, sp, #8
   14940:	pop	{r4, pc}
   14944:	push	{r4, r5, r6, lr}
   14948:	mov	r5, r0
   1494c:	mov	r6, r1
   14950:	cmp	r1, r0
   14954:	bls	149f4 <sprintf@plt+0x33c4>
   14958:	add	r4, r0, #1
   1495c:	ldrb	r3, [r0]
   14960:	mov	r2, r3
   14964:	cmp	r3, #0
   14968:	beq	149e4 <sprintf@plt+0x33b4>
   1496c:	and	r3, r3, #192	; 0xc0
   14970:	cmp	r3, #64	; 0x40
   14974:	beq	149c0 <sprintf@plt+0x3390>
   14978:	cmp	r3, #192	; 0xc0
   1497c:	beq	149e0 <sprintf@plt+0x33b0>
   14980:	cmp	r3, #0
   14984:	beq	1499c <sprintf@plt+0x336c>
   14988:	bl	11624 <__errno_location@plt>
   1498c:	mov	r3, #90	; 0x5a
   14990:	str	r3, [r0]
   14994:	mvn	r0, #0
   14998:	pop	{r4, r5, r6, pc}
   1499c:	add	r0, r4, r2
   149a0:	cmp	r6, r0
   149a4:	bls	149fc <sprintf@plt+0x33cc>
   149a8:	add	r4, r0, #1
   149ac:	ldrb	r3, [r0]
   149b0:	mov	r2, r3
   149b4:	cmp	r3, #0
   149b8:	bne	1496c <sprintf@plt+0x333c>
   149bc:	b	149e4 <sprintf@plt+0x33b4>
   149c0:	bl	13f90 <sprintf@plt+0x2960>
   149c4:	cmp	r0, #0
   149c8:	addge	r0, r4, r0
   149cc:	bge	149a0 <sprintf@plt+0x3370>
   149d0:	bl	11624 <__errno_location@plt>
   149d4:	mov	r3, #90	; 0x5a
   149d8:	str	r3, [r0]
   149dc:	b	14994 <sprintf@plt+0x3364>
   149e0:	add	r4, r0, #2
   149e4:	cmp	r6, r4
   149e8:	bcc	14a04 <sprintf@plt+0x33d4>
   149ec:	sub	r0, r4, r5
   149f0:	pop	{r4, r5, r6, pc}
   149f4:	mov	r4, r0
   149f8:	b	149e4 <sprintf@plt+0x33b4>
   149fc:	mov	r4, r0
   14a00:	b	149e4 <sprintf@plt+0x33b4>
   14a04:	bl	11624 <__errno_location@plt>
   14a08:	mov	r3, #90	; 0x5a
   14a0c:	str	r3, [r0]
   14a10:	b	14994 <sprintf@plt+0x3364>
   14a14:	ldrb	r2, [r0]
   14a18:	ldrb	r0, [r0, #1]
   14a1c:	orr	r0, r0, r2, lsl #8
   14a20:	bx	lr
   14a24:	ldrb	r2, [r0]
   14a28:	ldrb	r3, [r0, #1]
   14a2c:	lsl	r3, r3, #16
   14a30:	orr	r3, r3, r2, lsl #24
   14a34:	ldrb	r2, [r0, #3]
   14a38:	orr	r3, r3, r2
   14a3c:	ldrb	r0, [r0, #2]
   14a40:	orr	r0, r3, r0, lsl #8
   14a44:	bx	lr
   14a48:	lsr	r3, r0, #8
   14a4c:	strb	r3, [r1]
   14a50:	strb	r0, [r1, #1]
   14a54:	bx	lr
   14a58:	lsr	r3, r0, #24
   14a5c:	strb	r3, [r1]
   14a60:	lsr	r3, r0, #16
   14a64:	strb	r3, [r1, #1]
   14a68:	lsr	r3, r0, #8
   14a6c:	strb	r3, [r1, #2]
   14a70:	strb	r0, [r1, #3]
   14a74:	bx	lr
   14a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a7c:	sub	sp, sp, #396	; 0x18c
   14a80:	str	r1, [sp, #12]
   14a84:	str	r2, [sp, #16]
   14a88:	ldr	r1, [sp, #432]	; 0x1b0
   14a8c:	cmp	r3, #0
   14a90:	cmpne	r1, #11
   14a94:	ble	15384 <sprintf@plt+0x3d54>
   14a98:	mov	r9, r0
   14a9c:	mov	fp, r3
   14aa0:	mov	r3, #0
   14aa4:	str	r3, [fp]
   14aa8:	str	r3, [fp, #4]
   14aac:	str	r3, [fp, #8]
   14ab0:	strh	r3, [fp]
   14ab4:	ldrb	r2, [fp, #2]
   14ab8:	and	r2, r2, #135	; 0x87
   14abc:	orr	r2, r2, #1
   14ac0:	strb	r2, [fp, #2]
   14ac4:	ldrb	r2, [fp, #3]
   14ac8:	bic	r2, r2, #15
   14acc:	strb	r2, [fp, #3]
   14ad0:	add	r2, fp, #12
   14ad4:	str	r2, [sp, #8]
   14ad8:	str	fp, [sp, #312]	; 0x138
   14adc:	str	r3, [sp, #316]	; 0x13c
   14ae0:	subs	r3, r1, #16
   14ae4:	str	r3, [sp, #4]
   14ae8:	bmi	1538c <sprintf@plt+0x3d5c>
   14aec:	add	r3, sp, #57	; 0x39
   14af0:	str	r3, [sp, #48]	; 0x30
   14af4:	add	sl, sp, #56	; 0x38
   14af8:	mov	r4, #0
   14afc:	add	r6, sp, #308	; 0x134
   14b00:	add	r6, r6, #3
   14b04:	ldr	r5, [pc, #2384]	; 1545c <sprintf@plt+0x3e2c>
   14b08:	b	14d9c <sprintf@plt+0x376c>
   14b0c:	mov	r1, #93	; 0x5d
   14b10:	mov	r0, r8
   14b14:	bl	1133c <strchr@plt>
   14b18:	cmp	r0, #0
   14b1c:	beq	14b58 <sprintf@plt+0x3528>
   14b20:	add	r7, r0, #2
   14b24:	mov	r3, #0
   14b28:	str	r3, [sp, #52]	; 0x34
   14b2c:	sub	r8, r7, r8
   14b30:	cmp	r8, #1
   14b34:	ble	15394 <sprintf@plt+0x3d64>
   14b38:	ldrb	r3, [r9, #1]
   14b3c:	cmp	r3, #120	; 0x78
   14b40:	beq	14b68 <sprintf@plt+0x3538>
   14b44:	mov	r4, #22
   14b48:	bl	11624 <__errno_location@plt>
   14b4c:	str	r4, [r0]
   14b50:	mvn	r0, #0
   14b54:	b	1536c <sprintf@plt+0x3d3c>
   14b58:	bl	11624 <__errno_location@plt>
   14b5c:	mov	r3, #22
   14b60:	str	r3, [r0]
   14b64:	b	14b50 <sprintf@plt+0x3520>
   14b68:	bl	11510 <__ctype_b_loc@plt>
   14b6c:	ldr	r1, [r0]
   14b70:	ldrb	r3, [r9, #2]
   14b74:	lsl	r3, r3, #1
   14b78:	ldrh	r3, [r1, r3]
   14b7c:	tst	r3, #4096	; 0x1000
   14b80:	moveq	r4, #22
   14b84:	beq	14b48 <sprintf@plt+0x3518>
   14b88:	add	r2, r9, #2
   14b8c:	add	r3, sp, #52	; 0x34
   14b90:	cmp	r7, r2
   14b94:	cmphi	r6, r3
   14b98:	bls	153cc <sprintf@plt+0x3d9c>
   14b9c:	mov	r3, r2
   14ba0:	mov	r9, #0
   14ba4:	str	r9, [sp, #24]
   14ba8:	add	r8, sp, #52	; 0x34
   14bac:	str	r9, [sp, #28]
   14bb0:	mov	r0, r9
   14bb4:	mov	ip, r9
   14bb8:	b	14cac <sprintf@plt+0x367c>
   14bbc:	ldr	r3, [sp, #28]
   14bc0:	cmp	r3, #0
   14bc4:	ldrne	r3, [sp, #24]
   14bc8:	lslne	r3, r3, #4
   14bcc:	strbne	r3, [r8]
   14bd0:	addne	r8, r8, #1
   14bd4:	ldr	r3, [sp, #20]
   14bd8:	add	r2, r3, #1
   14bdc:	cmp	r8, r6
   14be0:	movcc	r3, #0
   14be4:	movcs	r3, #1
   14be8:	cmp	r7, r2
   14bec:	movhi	r7, r3
   14bf0:	orrls	r7, r3, #1
   14bf4:	cmp	r7, #0
   14bf8:	beq	14cfc <sprintf@plt+0x36cc>
   14bfc:	mov	r4, #90	; 0x5a
   14c00:	b	14b48 <sprintf@plt+0x3518>
   14c04:	cmp	ip, #0
   14c08:	beq	14c34 <sprintf@plt+0x3604>
   14c0c:	lsl	lr, r2, #1
   14c10:	ldrh	lr, [r1, lr]
   14c14:	tst	lr, #2048	; 0x800
   14c18:	beq	153a4 <sprintf@plt+0x3d74>
   14c1c:	cmp	r0, #0
   14c20:	bne	14c8c <sprintf@plt+0x365c>
   14c24:	cmp	r2, #48	; 0x30
   14c28:	beq	153ac <sprintf@plt+0x3d7c>
   14c2c:	ldr	r0, [sp, #20]
   14c30:	b	14c8c <sprintf@plt+0x365c>
   14c34:	lsl	lr, r2, #1
   14c38:	ldrh	lr, [r1, lr]
   14c3c:	tst	lr, #4096	; 0x1000
   14c40:	beq	153b4 <sprintf@plt+0x3d84>
   14c44:	add	r2, r5, r2
   14c48:	ldrb	r2, [r2, #12]
   14c4c:	ldr	lr, [sp, #24]
   14c50:	add	r2, r2, lr, lsl #4
   14c54:	str	r2, [sp, #24]
   14c58:	ldr	r2, [sp, #28]
   14c5c:	add	r2, r2, #4
   14c60:	str	r2, [sp, #28]
   14c64:	add	r9, r9, #4
   14c68:	cmp	r9, #256	; 0x100
   14c6c:	bgt	153bc <sprintf@plt+0x3d8c>
   14c70:	cmp	r2, #8
   14c74:	ldrbeq	r2, [sp, #24]
   14c78:	strbeq	r2, [r8]
   14c7c:	streq	ip, [sp, #28]
   14c80:	addeq	r8, r8, #1
   14c84:	b	14c8c <sprintf@plt+0x365c>
   14c88:	mov	ip, r4
   14c8c:	mov	r2, r3
   14c90:	cmp	r7, r3
   14c94:	movls	lr, #0
   14c98:	movhi	lr, #1
   14c9c:	cmp	r8, r6
   14ca0:	movcs	lr, #0
   14ca4:	cmp	lr, #0
   14ca8:	beq	153d4 <sprintf@plt+0x3da4>
   14cac:	str	r3, [sp, #20]
   14cb0:	ldrb	r2, [r3], #1
   14cb4:	cmp	r2, #47	; 0x2f
   14cb8:	beq	14c88 <sprintf@plt+0x3658>
   14cbc:	cmp	r2, #93	; 0x5d
   14cc0:	bne	14c04 <sprintf@plt+0x35d4>
   14cc4:	cmp	ip, #0
   14cc8:	beq	14bbc <sprintf@plt+0x358c>
   14ccc:	cmp	r0, #0
   14cd0:	beq	1539c <sprintf@plt+0x3d6c>
   14cd4:	mov	r2, #10
   14cd8:	add	r1, sp, #52	; 0x34
   14cdc:	bl	1148c <strtol@plt>
   14ce0:	mov	ip, r0
   14ce4:	ldr	r3, [sp, #52]	; 0x34
   14ce8:	ldrb	r3, [r3]
   14cec:	cmp	r3, #93	; 0x5d
   14cf0:	beq	14bbc <sprintf@plt+0x358c>
   14cf4:	mov	r4, #22
   14cf8:	b	14b48 <sprintf@plt+0x3518>
   14cfc:	cmp	ip, #0
   14d00:	ble	153f0 <sprintf@plt+0x3dc0>
   14d04:	add	r3, ip, #3
   14d08:	bic	r3, r3, #3
   14d0c:	cmp	r9, r3
   14d10:	movne	r4, #22
   14d14:	bne	14b48 <sprintf@plt+0x3518>
   14d18:	sub	r3, r3, ip
   14d1c:	rsb	r3, r3, #8
   14d20:	ldr	r1, [sp, #24]
   14d24:	lsl	r3, r1, r3
   14d28:	tst	r3, #255	; 0xff
   14d2c:	movne	r4, #22
   14d30:	bne	14b48 <sprintf@plt+0x3518>
   14d34:	mov	r9, ip
   14d38:	b	153f0 <sprintf@plt+0x3dc0>
   14d3c:	bl	11624 <__errno_location@plt>
   14d40:	mov	r3, #22
   14d44:	str	r3, [r0]
   14d48:	b	14b50 <sprintf@plt+0x3520>
   14d4c:	bl	11624 <__errno_location@plt>
   14d50:	mov	r3, #90	; 0x5a
   14d54:	str	r3, [r0]
   14d58:	b	14b50 <sprintf@plt+0x3520>
   14d5c:	bl	11624 <__errno_location@plt>
   14d60:	mov	r3, #90	; 0x5a
   14d64:	str	r3, [r0]
   14d68:	b	14b50 <sprintf@plt+0x3520>
   14d6c:	cmp	r7, #92	; 0x5c
   14d70:	beq	14f30 <sprintf@plt+0x3900>
   14d74:	cmp	r7, #46	; 0x2e
   14d78:	beq	14e44 <sprintf@plt+0x3814>
   14d7c:	ldr	r3, [sp, #48]	; 0x30
   14d80:	cmp	r3, r6
   14d84:	bcs	14f20 <sprintf@plt+0x38f0>
   14d88:	add	r2, r3, #1
   14d8c:	str	r2, [sp, #48]	; 0x30
   14d90:	strb	r7, [r3]
   14d94:	mov	r9, r8
   14d98:	mov	r4, #0
   14d9c:	add	r8, r9, #1
   14da0:	ldrb	r7, [r9]
   14da4:	cmp	r7, #0
   14da8:	beq	14f3c <sprintf@plt+0x390c>
   14dac:	cmp	r4, #0
   14db0:	beq	14d6c <sprintf@plt+0x373c>
   14db4:	cmp	r7, #91	; 0x5b
   14db8:	beq	14b0c <sprintf@plt+0x34dc>
   14dbc:	mov	r1, r7
   14dc0:	mov	r0, r5
   14dc4:	bl	1133c <strchr@plt>
   14dc8:	cmp	r0, #0
   14dcc:	beq	14d7c <sprintf@plt+0x374c>
   14dd0:	sub	r0, r0, r5
   14dd4:	mov	r3, #100	; 0x64
   14dd8:	mul	r4, r3, r0
   14ddc:	ldrb	r1, [r9, #1]
   14de0:	cmp	r1, #0
   14de4:	beq	14d4c <sprintf@plt+0x371c>
   14de8:	mov	r0, r5
   14dec:	bl	1133c <strchr@plt>
   14df0:	cmp	r0, #0
   14df4:	beq	14d4c <sprintf@plt+0x371c>
   14df8:	sub	r0, r0, r5
   14dfc:	add	r0, r0, r0, lsl #2
   14e00:	add	r4, r4, r0, lsl #1
   14e04:	add	r8, r9, #3
   14e08:	ldrb	r1, [r9, #2]
   14e0c:	cmp	r1, #0
   14e10:	beq	14d5c <sprintf@plt+0x372c>
   14e14:	mov	r0, r5
   14e18:	bl	1133c <strchr@plt>
   14e1c:	cmp	r0, #0
   14e20:	beq	14d5c <sprintf@plt+0x372c>
   14e24:	sub	r0, r0, r5
   14e28:	add	r7, r0, r4
   14e2c:	cmp	r7, #255	; 0xff
   14e30:	ble	14d7c <sprintf@plt+0x374c>
   14e34:	bl	11624 <__errno_location@plt>
   14e38:	mov	r3, #90	; 0x5a
   14e3c:	str	r3, [r0]
   14e40:	b	14b50 <sprintf@plt+0x3520>
   14e44:	ldr	r3, [sp, #48]	; 0x30
   14e48:	sub	r3, r3, sl
   14e4c:	sub	r3, r3, #1
   14e50:	ands	r4, r3, #192	; 0xc0
   14e54:	bne	14e90 <sprintf@plt+0x3860>
   14e58:	cmp	sl, r6
   14e5c:	bcs	14ea0 <sprintf@plt+0x3870>
   14e60:	strb	r3, [sl]
   14e64:	ldrb	r2, [r9, #1]
   14e68:	cmp	r2, #0
   14e6c:	beq	14eb0 <sprintf@plt+0x3880>
   14e70:	cmp	r2, #46	; 0x2e
   14e74:	cmpne	r3, #0
   14e78:	beq	14f10 <sprintf@plt+0x38e0>
   14e7c:	ldr	sl, [sp, #48]	; 0x30
   14e80:	add	r3, sl, #1
   14e84:	str	r3, [sp, #48]	; 0x30
   14e88:	mov	r9, r8
   14e8c:	b	14d9c <sprintf@plt+0x376c>
   14e90:	bl	11624 <__errno_location@plt>
   14e94:	mov	r3, #90	; 0x5a
   14e98:	str	r3, [r0]
   14e9c:	b	14b50 <sprintf@plt+0x3520>
   14ea0:	bl	11624 <__errno_location@plt>
   14ea4:	mov	r3, #90	; 0x5a
   14ea8:	str	r3, [r0]
   14eac:	b	14b50 <sprintf@plt+0x3520>
   14eb0:	cmp	r3, #0
   14eb4:	beq	14edc <sprintf@plt+0x38ac>
   14eb8:	ldr	r3, [sp, #48]	; 0x30
   14ebc:	add	r2, sp, #308	; 0x134
   14ec0:	add	r2, r2, #3
   14ec4:	cmp	r3, r2
   14ec8:	addcc	r2, r3, #1
   14ecc:	strcc	r2, [sp, #48]	; 0x30
   14ed0:	movcc	r2, #0
   14ed4:	strbcc	r2, [r3]
   14ed8:	bcs	14f00 <sprintf@plt+0x38d0>
   14edc:	ldr	r3, [sp, #48]	; 0x30
   14ee0:	add	r2, sp, #56	; 0x38
   14ee4:	sub	r3, r3, r2
   14ee8:	cmp	r3, #255	; 0xff
   14eec:	ble	14fa4 <sprintf@plt+0x3974>
   14ef0:	bl	11624 <__errno_location@plt>
   14ef4:	mov	r3, #90	; 0x5a
   14ef8:	str	r3, [r0]
   14efc:	b	14b50 <sprintf@plt+0x3520>
   14f00:	bl	11624 <__errno_location@plt>
   14f04:	mov	r3, #90	; 0x5a
   14f08:	str	r3, [r0]
   14f0c:	b	14b50 <sprintf@plt+0x3520>
   14f10:	bl	11624 <__errno_location@plt>
   14f14:	mov	r3, #90	; 0x5a
   14f18:	str	r3, [r0]
   14f1c:	b	14b50 <sprintf@plt+0x3520>
   14f20:	bl	11624 <__errno_location@plt>
   14f24:	mov	r3, #90	; 0x5a
   14f28:	str	r3, [r0]
   14f2c:	b	14b50 <sprintf@plt+0x3520>
   14f30:	mov	r9, r8
   14f34:	mov	r4, #1
   14f38:	b	14d9c <sprintf@plt+0x376c>
   14f3c:	ldr	r3, [sp, #48]	; 0x30
   14f40:	sub	r3, r3, sl
   14f44:	sub	r3, r3, #1
   14f48:	tst	r3, #192	; 0xc0
   14f4c:	bne	1504c <sprintf@plt+0x3a1c>
   14f50:	add	r2, sp, #308	; 0x134
   14f54:	add	r2, r2, #3
   14f58:	cmp	sl, r2
   14f5c:	bcs	1544c <sprintf@plt+0x3e1c>
   14f60:	strb	r3, [sl]
   14f64:	cmp	r3, #0
   14f68:	beq	14f90 <sprintf@plt+0x3960>
   14f6c:	ldr	r3, [sp, #48]	; 0x30
   14f70:	add	r2, sp, #308	; 0x134
   14f74:	add	r2, r2, #3
   14f78:	cmp	r3, r2
   14f7c:	addcc	r2, r3, #1
   14f80:	strcc	r2, [sp, #48]	; 0x30
   14f84:	movcc	r2, #0
   14f88:	strbcc	r2, [r3]
   14f8c:	bcs	1505c <sprintf@plt+0x3a2c>
   14f90:	ldr	r3, [sp, #48]	; 0x30
   14f94:	add	r2, sp, #56	; 0x38
   14f98:	sub	r3, r3, r2
   14f9c:	cmp	r3, #255	; 0xff
   14fa0:	bgt	1506c <sprintf@plt+0x3a3c>
   14fa4:	ldr	r9, [sp, #312]	; 0x138
   14fa8:	cmp	r9, #0
   14fac:	moveq	r5, #0
   14fb0:	beq	14fd0 <sprintf@plt+0x39a0>
   14fb4:	ldr	r3, [sp, #316]	; 0x13c
   14fb8:	cmp	r3, #0
   14fbc:	beq	1507c <sprintf@plt+0x3a4c>
   14fc0:	add	r5, sp, #316	; 0x13c
   14fc4:	ldr	r3, [r5, #4]!
   14fc8:	cmp	r3, #0
   14fcc:	bne	14fc4 <sprintf@plt+0x3994>
   14fd0:	mov	r6, #0
   14fd4:	add	r4, sp, #56	; 0x38
   14fd8:	ldrb	r7, [r4]
   14fdc:	and	r3, r7, #192	; 0xc0
   14fe0:	cmp	r3, #192	; 0xc0
   14fe4:	beq	15084 <sprintf@plt+0x3a54>
   14fe8:	mov	r0, r4
   14fec:	bl	13f90 <sprintf@plt+0x2960>
   14ff0:	cmp	r0, #0
   14ff4:	blt	15098 <sprintf@plt+0x3a68>
   14ff8:	add	r3, r0, #1
   14ffc:	add	r6, r6, r3
   15000:	cmp	r6, #255	; 0xff
   15004:	bgt	150a8 <sprintf@plt+0x3a78>
   15008:	add	r0, r0, #1
   1500c:	add	r4, r4, r0
   15010:	cmp	r7, #0
   15014:	bne	14fd8 <sprintf@plt+0x39a8>
   15018:	ldr	r3, [sp, #8]
   1501c:	ldr	r2, [sp, #4]
   15020:	add	r2, r3, r2
   15024:	str	r2, [sp, #4]
   15028:	str	r5, [sp, #36]	; 0x24
   1502c:	mov	sl, r3
   15030:	mov	r3, #1
   15034:	str	r3, [sp, #40]	; 0x28
   15038:	add	r8, sp, #56	; 0x38
   1503c:	str	r5, [sp, #32]
   15040:	mov	r7, sl
   15044:	str	fp, [sp, #44]	; 0x2c
   15048:	b	15230 <sprintf@plt+0x3c00>
   1504c:	bl	11624 <__errno_location@plt>
   15050:	mov	r3, #90	; 0x5a
   15054:	str	r3, [r0]
   15058:	b	14b50 <sprintf@plt+0x3520>
   1505c:	bl	11624 <__errno_location@plt>
   15060:	mov	r3, #90	; 0x5a
   15064:	str	r3, [r0]
   15068:	b	14b50 <sprintf@plt+0x3520>
   1506c:	bl	11624 <__errno_location@plt>
   15070:	mov	r3, #90	; 0x5a
   15074:	str	r3, [r0]
   15078:	b	14b50 <sprintf@plt+0x3520>
   1507c:	add	r5, sp, #316	; 0x13c
   15080:	b	14fd0 <sprintf@plt+0x39a0>
   15084:	bl	11624 <__errno_location@plt>
   15088:	mov	r3, #90	; 0x5a
   1508c:	str	r3, [r0]
   15090:	mvn	r0, #0
   15094:	b	1536c <sprintf@plt+0x3d3c>
   15098:	bl	11624 <__errno_location@plt>
   1509c:	mov	r3, #22
   150a0:	str	r3, [r0]
   150a4:	b	15090 <sprintf@plt+0x3a60>
   150a8:	bl	11624 <__errno_location@plt>
   150ac:	mov	r3, #90	; 0x5a
   150b0:	str	r3, [r0]
   150b4:	b	15090 <sprintf@plt+0x3a60>
   150b8:	mov	r0, r4
   150bc:	bl	13f90 <sprintf@plt+0x2960>
   150c0:	add	ip, r6, #1
   150c4:	ldrb	r1, [r6]
   150c8:	cmp	r0, r1
   150cc:	bne	15124 <sprintf@plt+0x3af4>
   150d0:	add	r4, r4, #1
   150d4:	cmp	r1, #0
   150d8:	beq	1510c <sprintf@plt+0x3adc>
   150dc:	ldrb	r3, [ip], #1
   150e0:	sub	r2, r3, #65	; 0x41
   150e4:	cmp	r2, #25
   150e8:	addls	r3, r3, #32
   150ec:	ldrb	r2, [r4], #1
   150f0:	sub	r0, r2, #65	; 0x41
   150f4:	cmp	r0, #25
   150f8:	addls	r2, r2, #32
   150fc:	cmp	r2, r3
   15100:	bne	15124 <sprintf@plt+0x3af4>
   15104:	subs	r1, r1, #1
   15108:	bne	150dc <sprintf@plt+0x3aac>
   1510c:	ldrb	r3, [ip]
   15110:	cmp	r3, #0
   15114:	bne	15190 <sprintf@plt+0x3b60>
   15118:	ldrb	r3, [r4]
   1511c:	cmp	r3, #0
   15120:	beq	15198 <sprintf@plt+0x3b68>
   15124:	add	r5, r5, #1
   15128:	ldrb	r5, [r7, r5]!
   1512c:	cmp	r5, #0
   15130:	beq	15154 <sprintf@plt+0x3b24>
   15134:	tst	r5, #192	; 0xc0
   15138:	bne	15154 <sprintf@plt+0x3b24>
   1513c:	ldr	r3, [sp, #28]
   15140:	sub	sl, r7, r3
   15144:	mov	r4, r7
   15148:	ldr	r3, [pc, #784]	; 15460 <sprintf@plt+0x3e30>
   1514c:	cmp	sl, r3
   15150:	ble	1528c <sprintf@plt+0x3c5c>
   15154:	ldr	r3, [sp, #32]
   15158:	cmp	r3, fp
   1515c:	bhi	1525c <sprintf@plt+0x3c2c>
   15160:	ldr	r5, [sp, #20]
   15164:	ldr	r7, [sp, #24]
   15168:	bl	11624 <__errno_location@plt>
   1516c:	mov	r3, #2
   15170:	str	r3, [r0]
   15174:	b	152c0 <sprintf@plt+0x3c90>
   15178:	lsl	r3, r3, #8
   1517c:	and	r3, r3, #16128	; 0x3f00
   15180:	ldrb	r4, [r4, #1]
   15184:	orr	r4, r3, r4
   15188:	add	r4, r9, r4
   1518c:	b	15290 <sprintf@plt+0x3c60>
   15190:	mov	r6, ip
   15194:	b	15290 <sprintf@plt+0x3c60>
   15198:	ldr	r5, [sp, #20]
   1519c:	ldr	r7, [sp, #24]
   151a0:	cmp	sl, #0
   151a4:	blt	152c0 <sprintf@plt+0x3c90>
   151a8:	mov	r2, sl
   151ac:	mov	sl, r7
   151b0:	ldr	fp, [sp, #44]	; 0x2c
   151b4:	add	r3, r7, #1
   151b8:	ldr	r1, [sp, #4]
   151bc:	cmp	r1, r3
   151c0:	bls	15374 <sprintf@plt+0x3d44>
   151c4:	mvn	r3, #63	; 0x3f
   151c8:	orr	r3, r3, r2, asr #8
   151cc:	strb	r3, [r7]
   151d0:	strb	r2, [sl, #1]
   151d4:	add	r4, r7, #2
   151d8:	ldr	r3, [sp, #8]
   151dc:	sub	r4, r4, r3
   151e0:	b	15328 <sprintf@plt+0x3cf8>
   151e4:	and	r5, r5, #192	; 0xc0
   151e8:	cmp	r5, #192	; 0xc0
   151ec:	beq	15374 <sprintf@plt+0x3d44>
   151f0:	mov	r0, r8
   151f4:	bl	13f90 <sprintf@plt+0x2960>
   151f8:	mov	r5, r0
   151fc:	add	r6, r0, #1
   15200:	add	r4, r7, r6
   15204:	ldr	r3, [sp, #4]
   15208:	cmp	r3, r4
   1520c:	bls	15374 <sprintf@plt+0x3d44>
   15210:	mov	r2, r6
   15214:	mov	r1, r8
   15218:	mov	r0, r7
   1521c:	bl	11468 <memcpy@plt>
   15220:	add	r8, r8, r6
   15224:	mov	r7, r4
   15228:	cmp	r5, #0
   1522c:	beq	15310 <sprintf@plt+0x3ce0>
   15230:	ldrb	r5, [r8]
   15234:	cmp	r5, #0
   15238:	cmpne	r9, #0
   1523c:	beq	151e4 <sprintf@plt+0x3bb4>
   15240:	ldr	r3, [sp, #32]
   15244:	add	r2, sp, #316	; 0x13c
   15248:	cmp	r3, r2
   1524c:	bls	15168 <sprintf@plt+0x3b38>
   15250:	mov	fp, r2
   15254:	str	r5, [sp, #20]
   15258:	str	r7, [sp, #24]
   1525c:	ldr	r4, [fp], #4
   15260:	ldrb	r5, [r4]
   15264:	cmp	r5, #0
   15268:	beq	15154 <sprintf@plt+0x3b24>
   1526c:	tst	r5, #192	; 0xc0
   15270:	bne	15154 <sprintf@plt+0x3b24>
   15274:	str	r9, [sp, #28]
   15278:	sub	sl, r4, r9
   1527c:	ldr	r3, [pc, #476]	; 15460 <sprintf@plt+0x3e30>
   15280:	cmp	sl, r3
   15284:	movle	r7, r4
   15288:	bgt	15154 <sprintf@plt+0x3b24>
   1528c:	mov	r6, r8
   15290:	ldrb	r3, [r4]
   15294:	cmp	r3, #0
   15298:	beq	15124 <sprintf@plt+0x3af4>
   1529c:	ands	r2, r3, #192	; 0xc0
   152a0:	beq	150b8 <sprintf@plt+0x3a88>
   152a4:	cmp	r2, #192	; 0xc0
   152a8:	beq	15178 <sprintf@plt+0x3b48>
   152ac:	ldr	r5, [sp, #20]
   152b0:	ldr	r7, [sp, #24]
   152b4:	bl	11624 <__errno_location@plt>
   152b8:	mov	r3, #90	; 0x5a
   152bc:	str	r3, [r0]
   152c0:	ldr	r2, [sp, #36]	; 0x24
   152c4:	add	r1, sp, #388	; 0x184
   152c8:	cmp	r2, r1
   152cc:	bcs	151e4 <sprintf@plt+0x3bb4>
   152d0:	sub	r3, r7, r9
   152d4:	ldr	r1, [sp, #40]	; 0x28
   152d8:	ldr	r0, [pc, #384]	; 15460 <sprintf@plt+0x3e30>
   152dc:	cmp	r3, r0
   152e0:	movgt	r1, #0
   152e4:	andle	r1, r1, #1
   152e8:	cmp	r1, #0
   152ec:	beq	151e4 <sprintf@plt+0x3bb4>
   152f0:	mov	r3, r2
   152f4:	str	r7, [r2]
   152f8:	mov	r2, #0
   152fc:	str	r2, [r3, #4]
   15300:	add	r3, r3, #4
   15304:	str	r3, [sp, #36]	; 0x24
   15308:	str	r2, [sp, #40]	; 0x28
   1530c:	b	151e4 <sprintf@plt+0x3bb4>
   15310:	ldr	fp, [sp, #44]	; 0x2c
   15314:	ldr	r3, [sp, #4]
   15318:	cmp	r3, r4
   1531c:	bcc	15374 <sprintf@plt+0x3d44>
   15320:	ldr	r3, [sp, #8]
   15324:	sub	r4, r4, r3
   15328:	cmp	r4, #0
   1532c:	mvnlt	r0, #0
   15330:	blt	1536c <sprintf@plt+0x3d3c>
   15334:	ldr	r2, [sp, #8]
   15338:	add	r0, r2, r4
   1533c:	ldr	r1, [sp, #16]
   15340:	lsr	r3, r1, #8
   15344:	strb	r3, [r2, r4]
   15348:	strb	r1, [r0, #1]
   1534c:	ldr	r2, [sp, #12]
   15350:	lsr	r3, r2, #8
   15354:	strb	r3, [r0, #2]
   15358:	strb	r2, [r0, #3]
   1535c:	mov	r3, #256	; 0x100
   15360:	strh	r3, [fp, #4]
   15364:	add	r0, r0, #4
   15368:	sub	r0, r0, fp
   1536c:	add	sp, sp, #396	; 0x18c
   15370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15374:	bl	11624 <__errno_location@plt>
   15378:	mov	r3, #90	; 0x5a
   1537c:	str	r3, [r0]
   15380:	b	15090 <sprintf@plt+0x3a60>
   15384:	mvn	r0, #0
   15388:	b	1536c <sprintf@plt+0x3d3c>
   1538c:	mvn	r0, #0
   15390:	b	1536c <sprintf@plt+0x3d3c>
   15394:	mov	r4, #22
   15398:	b	14b48 <sprintf@plt+0x3518>
   1539c:	mov	r4, #22
   153a0:	b	14b48 <sprintf@plt+0x3518>
   153a4:	mov	r4, #22
   153a8:	b	14b48 <sprintf@plt+0x3518>
   153ac:	mov	r4, #22
   153b0:	b	14b48 <sprintf@plt+0x3518>
   153b4:	mov	r4, #22
   153b8:	b	14b48 <sprintf@plt+0x3518>
   153bc:	mov	r4, #22
   153c0:	b	14b48 <sprintf@plt+0x3518>
   153c4:	mov	r4, #90	; 0x5a
   153c8:	b	14b48 <sprintf@plt+0x3518>
   153cc:	mov	r9, #0
   153d0:	add	r8, sp, #52	; 0x34
   153d4:	cmp	r7, r2
   153d8:	movhi	r3, #0
   153dc:	movls	r3, #1
   153e0:	cmp	r8, r6
   153e4:	orrcs	r3, r3, #1
   153e8:	cmp	r3, #0
   153ec:	bne	153c4 <sprintf@plt+0x3d94>
   153f0:	cmp	r9, #256	; 0x100
   153f4:	moveq	r9, #0
   153f8:	mov	r3, #65	; 0x41
   153fc:	strb	r3, [sl]
   15400:	ldr	r3, [sp, #48]	; 0x30
   15404:	strb	r9, [r3]
   15408:	add	r3, r8, #1
   1540c:	str	r3, [sp, #48]	; 0x30
   15410:	add	r9, r2, #1
   15414:	ldrb	r3, [r2]
   15418:	cmp	r3, #0
   1541c:	beq	15434 <sprintf@plt+0x3e04>
   15420:	cmp	r3, #46	; 0x2e
   15424:	bne	14d3c <sprintf@plt+0x370c>
   15428:	mov	sl, r8
   1542c:	mov	r4, #0
   15430:	b	14d9c <sprintf@plt+0x376c>
   15434:	add	r3, sp, #308	; 0x134
   15438:	add	r3, r3, #3
   1543c:	cmp	r8, r3
   15440:	movcc	r3, #0
   15444:	strbcc	r3, [r8]
   15448:	bcc	14f90 <sprintf@plt+0x3960>
   1544c:	bl	11624 <__errno_location@plt>
   15450:	mov	r3, #90	; 0x5a
   15454:	str	r3, [r0]
   15458:	b	14b50 <sprintf@plt+0x3520>
   1545c:	andeq	r9, r1, r4, asr r3
   15460:	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   15464:	push	{r4, lr}
   15468:	ldr	r0, [r2]
   1546c:	mov	r2, #10
   15470:	mov	r1, #0
   15474:	bl	1148c <strtol@plt>
   15478:	cmp	r0, #0
   1547c:	blt	1548c <sprintf@plt+0x3e5c>
   15480:	ldr	r3, [pc, #28]	; 154a4 <sprintf@plt+0x3e74>
   15484:	str	r0, [r3]
   15488:	pop	{r4, pc}
   1548c:	mov	r2, r0
   15490:	ldr	r1, [pc, #16]	; 154a8 <sprintf@plt+0x3e78>
   15494:	mov	r0, #67	; 0x43
   15498:	bl	121fc <sprintf@plt+0xbcc>
   1549c:	mov	r0, #3
   154a0:	bl	11618 <exit@plt>
   154a4:	andeq	sl, r2, r8, ror #26
   154a8:	strdeq	r9, [r1], -ip
   154ac:	push	{r4, r5, r6, lr}
   154b0:	mov	r6, r0
   154b4:	ldr	r3, [pc, #64]	; 154fc <sprintf@plt+0x3ecc>
   154b8:	ldr	r4, [r3]
   154bc:	cmp	r4, #0
   154c0:	beq	154f4 <sprintf@plt+0x3ec4>
   154c4:	ldr	r5, [r4]
   154c8:	mov	r1, r6
   154cc:	mov	r0, r5
   154d0:	bl	11354 <strcasecmp@plt>
   154d4:	cmp	r0, #0
   154d8:	beq	154ec <sprintf@plt+0x3ebc>
   154dc:	ldr	r4, [r4, #8]
   154e0:	cmp	r4, #0
   154e4:	bne	154c4 <sprintf@plt+0x3e94>
   154e8:	mov	r5, #0
   154ec:	mov	r0, r5
   154f0:	pop	{r4, r5, r6, pc}
   154f4:	mov	r5, #0
   154f8:	b	154ec <sprintf@plt+0x3ebc>
   154fc:	andeq	lr, r2, r0, ror #31
   15500:	ldr	r3, [pc, #236]	; 155f4 <sprintf@plt+0x3fc4>
   15504:	ldr	r3, [r3]
   15508:	cmp	r3, #0
   1550c:	bxeq	lr
   15510:	push	{r4, r5, r6, r7, r8, lr}
   15514:	ldr	r5, [r3, #8]
   15518:	ldr	r7, [pc, #212]	; 155f4 <sprintf@plt+0x3fc4>
   1551c:	mov	r8, #0
   15520:	mov	r6, #1
   15524:	b	155a4 <sprintf@plt+0x3f74>
   15528:	ldr	r3, [pc, #200]	; 155f8 <sprintf@plt+0x3fc8>
   1552c:	mov	r2, #288	; 0x120
   15530:	ldr	r1, [pc, #196]	; 155fc <sprintf@plt+0x3fcc>
   15534:	ldr	r0, [pc, #196]	; 15600 <sprintf@plt+0x3fd0>
   15538:	bl	113c0 <__assert_fail@plt>
   1553c:	ldr	r3, [r0, #8]
   15540:	cmp	r3, #0
   15544:	ldrne	r2, [r0, #4]
   15548:	strne	r2, [r3, #4]
   1554c:	ldreq	r3, [r0, #4]
   15550:	streq	r3, [r7, #4]
   15554:	ldr	r3, [r0, #4]
   15558:	cmp	r3, #0
   1555c:	ldrne	r2, [r0, #8]
   15560:	strne	r2, [r3, #8]
   15564:	ldreq	r3, [r0, #8]
   15568:	streq	r3, [r7]
   1556c:	str	r8, [r0, #4]
   15570:	str	r8, [r0, #8]
   15574:	ldr	r3, [r7, #8]
   15578:	sub	r3, r3, #1
   1557c:	str	r3, [r7, #8]
   15580:	cmp	r0, #0
   15584:	beq	1558c <sprintf@plt+0x3f5c>
   15588:	bl	11474 <rb_free_rb_dlink_node@plt>
   1558c:	mov	r0, r4
   15590:	bl	113f0 <free@plt>
   15594:	cmp	r5, #0
   15598:	popeq	{r4, r5, r6, r7, r8, pc}
   1559c:	mov	r3, r5
   155a0:	ldr	r5, [r5, #8]
   155a4:	ldr	r4, [r3]
   155a8:	ldr	r3, [r4, #788]	; 0x314
   155ac:	cmp	r3, #0
   155b0:	strbgt	r6, [r4, #784]	; 0x310
   155b4:	bgt	15594 <sprintf@plt+0x3f64>
   155b8:	cmp	r4, #0
   155bc:	beq	15528 <sprintf@plt+0x3ef8>
   155c0:	ldr	r0, [r7]
   155c4:	cmp	r0, #0
   155c8:	beq	1558c <sprintf@plt+0x3f5c>
   155cc:	ldr	r3, [r0]
   155d0:	cmp	r3, r4
   155d4:	beq	1553c <sprintf@plt+0x3f0c>
   155d8:	ldr	r0, [r0, #8]
   155dc:	cmp	r0, #0
   155e0:	beq	1558c <sprintf@plt+0x3f5c>
   155e4:	ldr	r3, [r0]
   155e8:	cmp	r4, r3
   155ec:	bne	155d8 <sprintf@plt+0x3fa8>
   155f0:	b	1553c <sprintf@plt+0x3f0c>
   155f4:	andeq	lr, r2, r0, ror #31
   155f8:			; <UNDEFINED> instruction: 0x000194b8
   155fc:	andeq	r9, r1, r0, lsr #32
   15600:	andeq	r9, r1, r8, ror r0
   15604:	push	{r4, lr}
   15608:	bl	15500 <sprintf@plt+0x3ed0>
   1560c:	pop	{r4, pc}
   15610:	push	{r4, r5, r6, lr}
   15614:	ldr	r5, [r2]
   15618:	mov	r0, r5
   1561c:	bl	154ac <sprintf@plt+0x3e7c>
   15620:	subs	r4, r0, #0
   15624:	beq	15640 <sprintf@plt+0x4010>
   15628:	ldr	r3, [r4, #788]	; 0x314
   1562c:	cmp	r3, #0
   15630:	ble	15654 <sprintf@plt+0x4024>
   15634:	mov	r3, #1
   15638:	strb	r3, [r4, #784]	; 0x310
   1563c:	pop	{r4, r5, r6, pc}
   15640:	mov	r2, r5
   15644:	ldr	r1, [pc, #156]	; 156e8 <sprintf@plt+0x40b8>
   15648:	mov	r0, #87	; 0x57
   1564c:	bl	121fc <sprintf@plt+0xbcc>
   15650:	pop	{r4, r5, r6, pc}
   15654:	ldr	r3, [pc, #144]	; 156ec <sprintf@plt+0x40bc>
   15658:	ldr	r0, [r3]
   1565c:	cmp	r0, #0
   15660:	beq	156dc <sprintf@plt+0x40ac>
   15664:	ldr	r3, [r0]
   15668:	cmp	r4, r3
   1566c:	beq	15688 <sprintf@plt+0x4058>
   15670:	ldr	r0, [r0, #8]
   15674:	cmp	r0, #0
   15678:	beq	156dc <sprintf@plt+0x40ac>
   1567c:	ldr	r3, [r0]
   15680:	cmp	r4, r3
   15684:	bne	15670 <sprintf@plt+0x4040>
   15688:	ldr	r3, [r0, #8]
   1568c:	cmp	r3, #0
   15690:	ldr	r2, [r0, #4]
   15694:	ldreq	r3, [pc, #80]	; 156ec <sprintf@plt+0x40bc>
   15698:	str	r2, [r3, #4]
   1569c:	ldr	r3, [r0, #4]
   156a0:	cmp	r3, #0
   156a4:	ldr	r2, [r0, #8]
   156a8:	strne	r2, [r3, #8]
   156ac:	ldreq	r3, [pc, #56]	; 156ec <sprintf@plt+0x40bc>
   156b0:	streq	r2, [r3]
   156b4:	mov	r3, #0
   156b8:	str	r3, [r0, #4]
   156bc:	str	r3, [r0, #8]
   156c0:	ldr	r2, [pc, #36]	; 156ec <sprintf@plt+0x40bc>
   156c4:	ldr	r3, [r2, #8]
   156c8:	sub	r3, r3, #1
   156cc:	str	r3, [r2, #8]
   156d0:	cmp	r0, #0
   156d4:	beq	156dc <sprintf@plt+0x40ac>
   156d8:	bl	11474 <rb_free_rb_dlink_node@plt>
   156dc:	mov	r0, r4
   156e0:	bl	113f0 <free@plt>
   156e4:	pop	{r4, r5, r6, pc}
   156e8:	andeq	r9, r1, r4, lsr #10
   156ec:	andeq	lr, r2, r0, ror #31
   156f0:	ldr	r3, [r0, #788]	; 0x314
   156f4:	sub	r3, r3, #1
   156f8:	str	r3, [r0, #788]	; 0x314
   156fc:	ldrb	r2, [r0, #784]	; 0x310
   15700:	cmp	r3, #0
   15704:	movgt	r3, #0
   15708:	andle	r3, r2, #1
   1570c:	cmp	r3, #0
   15710:	bxeq	lr
   15714:	push	{r4, r5, r6, lr}
   15718:	mov	r4, r0
   1571c:	ldr	r0, [r0, #772]	; 0x304
   15720:	cmp	r0, #0
   15724:	beq	157a4 <sprintf@plt+0x4174>
   15728:	ldr	r5, [r0, #8]
   1572c:	cmn	r4, #772	; 0x304
   15730:	movne	r6, #0
   15734:	bne	15754 <sprintf@plt+0x4124>
   15738:	ldr	r3, [pc, #276]	; 15854 <sprintf@plt+0x4224>
   1573c:	mov	r2, #236	; 0xec
   15740:	ldr	r1, [pc, #272]	; 15858 <sprintf@plt+0x4228>
   15744:	ldr	r0, [pc, #272]	; 1585c <sprintf@plt+0x422c>
   15748:	bl	113c0 <__assert_fail@plt>
   1574c:	mov	r0, r5
   15750:	ldr	r5, [r5, #8]
   15754:	ldr	r3, [r0, #8]
   15758:	cmp	r3, #0
   1575c:	ldrne	r2, [r0, #4]
   15760:	strne	r2, [r3, #4]
   15764:	ldreq	r3, [r0, #4]
   15768:	streq	r3, [r4, #776]	; 0x308
   1576c:	ldr	r3, [r0, #4]
   15770:	cmp	r3, #0
   15774:	ldrne	r2, [r0, #8]
   15778:	strne	r2, [r3, #8]
   1577c:	ldreq	r3, [r0, #8]
   15780:	streq	r3, [r4, #772]	; 0x304
   15784:	str	r6, [r0, #4]
   15788:	str	r6, [r0, #8]
   1578c:	ldr	r3, [r4, #780]	; 0x30c
   15790:	sub	r3, r3, #1
   15794:	str	r3, [r4, #780]	; 0x30c
   15798:	bl	113f0 <free@plt>
   1579c:	cmp	r5, #0
   157a0:	bne	1574c <sprintf@plt+0x411c>
   157a4:	cmp	r4, #0
   157a8:	beq	15840 <sprintf@plt+0x4210>
   157ac:	ldr	r3, [pc, #172]	; 15860 <sprintf@plt+0x4230>
   157b0:	ldr	r0, [r3]
   157b4:	cmp	r0, #0
   157b8:	beq	15834 <sprintf@plt+0x4204>
   157bc:	ldr	r3, [r0]
   157c0:	cmp	r4, r3
   157c4:	beq	157e0 <sprintf@plt+0x41b0>
   157c8:	ldr	r0, [r0, #8]
   157cc:	cmp	r0, #0
   157d0:	beq	15834 <sprintf@plt+0x4204>
   157d4:	ldr	r3, [r0]
   157d8:	cmp	r4, r3
   157dc:	bne	157c8 <sprintf@plt+0x4198>
   157e0:	ldr	r3, [r0, #8]
   157e4:	cmp	r3, #0
   157e8:	ldr	r2, [r0, #4]
   157ec:	ldreq	r3, [pc, #108]	; 15860 <sprintf@plt+0x4230>
   157f0:	str	r2, [r3, #4]
   157f4:	ldr	r3, [r0, #4]
   157f8:	cmp	r3, #0
   157fc:	ldr	r2, [r0, #8]
   15800:	strne	r2, [r3, #8]
   15804:	ldreq	r3, [pc, #84]	; 15860 <sprintf@plt+0x4230>
   15808:	streq	r2, [r3]
   1580c:	mov	r3, #0
   15810:	str	r3, [r0, #4]
   15814:	str	r3, [r0, #8]
   15818:	ldr	r2, [pc, #64]	; 15860 <sprintf@plt+0x4230>
   1581c:	ldr	r3, [r2, #8]
   15820:	sub	r3, r3, #1
   15824:	str	r3, [r2, #8]
   15828:	cmp	r0, #0
   1582c:	beq	15834 <sprintf@plt+0x4204>
   15830:	bl	11474 <rb_free_rb_dlink_node@plt>
   15834:	mov	r0, r4
   15838:	bl	113f0 <free@plt>
   1583c:	pop	{r4, r5, r6, pc}
   15840:	ldr	r3, [pc, #28]	; 15864 <sprintf@plt+0x4234>
   15844:	mov	r2, #288	; 0x120
   15848:	ldr	r1, [pc, #8]	; 15858 <sprintf@plt+0x4228>
   1584c:	ldr	r0, [pc, #20]	; 15868 <sprintf@plt+0x4238>
   15850:	bl	113c0 <__assert_fail@plt>
   15854:	andeq	r9, r1, ip, asr #9
   15858:	andeq	r9, r1, r0, lsr #32
   1585c:	andeq	r9, r1, r0, asr r5
   15860:	andeq	lr, r2, r0, ror #31
   15864:			; <UNDEFINED> instruction: 0x000194b8
   15868:	andeq	r9, r1, r8, ror r0
   1586c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15870:	ldr	r3, [pc, #348]	; 159d4 <sprintf@plt+0x43a4>
   15874:	ldr	r2, [r3, #16]
   15878:	ldr	r3, [r0, #464]	; 0x1d0
   1587c:	add	r3, r3, r2, lsl #4
   15880:	ldr	r5, [r3, #8]
   15884:	cmp	r5, #0
   15888:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1588c:	mov	r8, r0
   15890:	ldr	r3, [r5, #12]
   15894:	cmp	r3, #0
   15898:	bne	158f8 <sprintf@plt+0x42c8>
   1589c:	mov	r0, r5
   158a0:	bl	113f0 <free@plt>
   158a4:	ldr	r3, [pc, #296]	; 159d4 <sprintf@plt+0x43a4>
   158a8:	ldr	r1, [r3, #16]
   158ac:	ldr	r2, [r8, #464]	; 0x1d0
   158b0:	add	r2, r2, r1, lsl #4
   158b4:	mov	r1, #0
   158b8:	str	r1, [r2, #8]
   158bc:	ldr	r0, [r3, #16]
   158c0:	ldr	r2, [r8, #464]	; 0x1d0
   158c4:	add	r2, r2, r0, lsl #4
   158c8:	str	r1, [r2, #4]
   158cc:	ldr	r1, [r3, #16]
   158d0:	mov	r0, r8
   158d4:	bl	12b9c <sprintf@plt+0x156c>
   158d8:	ldr	r3, [r8, #460]	; 0x1cc
   158dc:	sub	r3, r3, #1
   158e0:	str	r3, [r8, #460]	; 0x1cc
   158e4:	cmp	r3, #0
   158e8:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   158ec:	mov	r0, r8
   158f0:	bl	1271c <sprintf@plt+0x10ec>
   158f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   158f8:	ldr	r1, [pc, #216]	; 159d8 <sprintf@plt+0x43a8>
   158fc:	ldr	r0, [r0]
   15900:	bl	121a4 <sprintf@plt+0xb74>
   15904:	ldr	r3, [r5, #4]
   15908:	cmp	r3, #0
   1590c:	beq	1589c <sprintf@plt+0x426c>
   15910:	ldr	r7, [r3, #8]
   15914:	add	sl, r5, #4
   15918:	mov	r9, #0
   1591c:	ldr	r4, [r3]
   15920:	ldr	r0, [r4, #8]
   15924:	bl	11f04 <sprintf@plt+0x8d4>
   15928:	mov	r6, r4
   1592c:	ldr	r0, [r6], #12
   15930:	bl	156f0 <sprintf@plt+0x40c0>
   15934:	cmp	r6, #0
   15938:	beq	159ac <sprintf@plt+0x437c>
   1593c:	cmp	sl, #0
   15940:	beq	159c0 <sprintf@plt+0x4390>
   15944:	ldr	r3, [r4, #20]
   15948:	cmp	r3, #0
   1594c:	ldrne	r2, [r4, #16]
   15950:	strne	r2, [r3, #4]
   15954:	ldreq	r3, [r4, #16]
   15958:	streq	r3, [r5, #8]
   1595c:	ldr	r3, [r4, #16]
   15960:	cmp	r3, #0
   15964:	ldrne	r2, [r4, #20]
   15968:	strne	r2, [r3, #8]
   1596c:	ldreq	r3, [r4, #20]
   15970:	streq	r3, [r5, #4]
   15974:	str	r9, [r4, #16]
   15978:	str	r9, [r4, #20]
   1597c:	ldr	r3, [r5, #12]
   15980:	sub	r3, r3, #1
   15984:	str	r3, [r5, #12]
   15988:	cmp	r4, #0
   1598c:	beq	15998 <sprintf@plt+0x4368>
   15990:	mov	r0, r4
   15994:	bl	113f0 <free@plt>
   15998:	cmp	r7, #0
   1599c:	beq	1589c <sprintf@plt+0x426c>
   159a0:	mov	r3, r7
   159a4:	ldr	r7, [r7, #8]
   159a8:	b	1591c <sprintf@plt+0x42ec>
   159ac:	ldr	r3, [pc, #40]	; 159dc <sprintf@plt+0x43ac>
   159b0:	mov	r2, #235	; 0xeb
   159b4:	ldr	r1, [pc, #36]	; 159e0 <sprintf@plt+0x43b0>
   159b8:	ldr	r0, [pc, #36]	; 159e4 <sprintf@plt+0x43b4>
   159bc:	bl	113c0 <__assert_fail@plt>
   159c0:	ldr	r3, [pc, #20]	; 159dc <sprintf@plt+0x43ac>
   159c4:	mov	r2, #236	; 0xec
   159c8:	ldr	r1, [pc, #16]	; 159e0 <sprintf@plt+0x43b0>
   159cc:	ldr	r0, [pc, #20]	; 159e8 <sprintf@plt+0x43b8>
   159d0:	bl	113c0 <__assert_fail@plt>
   159d4:	andeq	sl, r2, r8, ror #26
   159d8:	andeq	r9, r1, r0, ror #10
   159dc:	andeq	r9, r1, ip, asr #9
   159e0:	andeq	r9, r1, r0, lsr #32
   159e4:	andeq	r9, r1, ip, lsr r0
   159e8:	andeq	r9, r1, r0, asr r5
   159ec:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159f0:	ldr	r9, [r3]
   159f4:	ldr	r8, [r3, #4]
   159f8:	ldr	r2, [pc, #572]	; 15c3c <sprintf@plt+0x460c>
   159fc:	ldr	fp, [r2, #16]
   15a00:	ldr	r2, [r8, #464]	; 0x1d0
   15a04:	add	r2, r2, fp, lsl #4
   15a08:	ldr	r6, [r2, #8]
   15a0c:	cmp	r6, #0
   15a10:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a14:	mov	r4, r3
   15a18:	mov	r7, r0
   15a1c:	cmp	r0, #0
   15a20:	moveq	r1, #0
   15a24:	andne	r1, r1, #1
   15a28:	cmp	r1, #0
   15a2c:	beq	15ad8 <sprintf@plt+0x44a8>
   15a30:	ldr	r3, [r9, #780]	; 0x30c
   15a34:	cmp	r3, #0
   15a38:	beq	15c10 <sprintf@plt+0x45e0>
   15a3c:	mov	r1, #46	; 0x2e
   15a40:	bl	113a8 <strrchr@plt>
   15a44:	cmp	r0, #0
   15a48:	beq	15ac4 <sprintf@plt+0x4494>
   15a4c:	ldrb	r3, [r0, #1]
   15a50:	cmp	r3, #0
   15a54:	beq	15ac4 <sprintf@plt+0x4494>
   15a58:	ldr	r5, [r9, #772]	; 0x304
   15a5c:	cmp	r5, #0
   15a60:	beq	15ad8 <sprintf@plt+0x44a8>
   15a64:	add	sl, r0, #1
   15a68:	b	15aa4 <sprintf@plt+0x4474>
   15a6c:	mov	r2, r9
   15a70:	ldr	r1, [pc, #456]	; 15c40 <sprintf@plt+0x4610>
   15a74:	mov	r0, #67	; 0x43
   15a78:	bl	121fc <sprintf@plt+0xbcc>
   15a7c:	mov	r0, #3
   15a80:	bl	11618 <exit@plt>
   15a84:	mov	r0, r7
   15a88:	add	r1, r1, #4
   15a8c:	bl	1160c <strcmp@plt>
   15a90:	cmp	r0, #0
   15a94:	beq	15c10 <sprintf@plt+0x45e0>
   15a98:	ldr	r5, [r5, #8]
   15a9c:	cmp	r5, #0
   15aa0:	beq	15ad8 <sprintf@plt+0x44a8>
   15aa4:	ldr	r1, [r5]
   15aa8:	ldr	r3, [r1]
   15aac:	cmp	r3, #1
   15ab0:	beq	15a84 <sprintf@plt+0x4454>
   15ab4:	cmp	r3, #2
   15ab8:	bne	15a6c <sprintf@plt+0x443c>
   15abc:	mov	r0, sl
   15ac0:	b	15a88 <sprintf@plt+0x4458>
   15ac4:	ldr	r5, [r9, #796]	; 0x31c
   15ac8:	add	r5, r5, #3600	; 0xe10
   15acc:	bl	11450 <rb_current_time@plt>
   15ad0:	cmp	r5, r0
   15ad4:	blt	15bc8 <sprintf@plt+0x4598>
   15ad8:	mov	r0, r9
   15adc:	bl	156f0 <sprintf@plt+0x40c0>
   15ae0:	ldr	r0, [r4, #8]
   15ae4:	bl	11f04 <sprintf@plt+0x8d4>
   15ae8:	add	r3, r6, #4
   15aec:	cmn	r4, #12
   15af0:	beq	15be8 <sprintf@plt+0x45b8>
   15af4:	cmp	r3, #0
   15af8:	beq	15bfc <sprintf@plt+0x45cc>
   15afc:	ldr	r3, [r4, #20]
   15b00:	cmp	r3, #0
   15b04:	ldrne	r2, [r4, #16]
   15b08:	strne	r2, [r3, #4]
   15b0c:	ldreq	r3, [r4, #16]
   15b10:	streq	r3, [r6, #8]
   15b14:	ldr	r3, [r4, #16]
   15b18:	cmp	r3, #0
   15b1c:	ldrne	r2, [r4, #20]
   15b20:	strne	r2, [r3, #8]
   15b24:	ldreq	r3, [r4, #20]
   15b28:	streq	r3, [r6, #4]
   15b2c:	mov	r3, #0
   15b30:	str	r3, [r4, #16]
   15b34:	str	r3, [r4, #20]
   15b38:	ldr	r3, [r6, #12]
   15b3c:	sub	r3, r3, #1
   15b40:	str	r3, [r6, #12]
   15b44:	cmp	r4, #0
   15b48:	beq	15b54 <sprintf@plt+0x4524>
   15b4c:	mov	r0, r4
   15b50:	bl	113f0 <free@plt>
   15b54:	ldr	r3, [r6, #12]
   15b58:	cmp	r3, #0
   15b5c:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b60:	ldr	r1, [pc, #220]	; 15c44 <sprintf@plt+0x4614>
   15b64:	ldr	r0, [r8]
   15b68:	bl	121a4 <sprintf@plt+0xb74>
   15b6c:	mov	r0, r6
   15b70:	bl	113f0 <free@plt>
   15b74:	ldr	r3, [pc, #192]	; 15c3c <sprintf@plt+0x460c>
   15b78:	ldr	r1, [r3, #16]
   15b7c:	ldr	r2, [r8, #464]	; 0x1d0
   15b80:	add	r2, r2, r1, lsl #4
   15b84:	mov	r1, #0
   15b88:	str	r1, [r2, #8]
   15b8c:	ldr	r0, [r3, #16]
   15b90:	ldr	r2, [r8, #464]	; 0x1d0
   15b94:	add	r2, r2, r0, lsl #4
   15b98:	str	r1, [r2, #4]
   15b9c:	ldr	r1, [r3, #16]
   15ba0:	mov	r0, r8
   15ba4:	bl	12b9c <sprintf@plt+0x156c>
   15ba8:	ldr	r3, [r8, #460]	; 0x1cc
   15bac:	sub	r3, r3, #1
   15bb0:	str	r3, [r8, #460]	; 0x1cc
   15bb4:	cmp	r3, #0
   15bb8:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bbc:	mov	r0, r8
   15bc0:	bl	1271c <sprintf@plt+0x10ec>
   15bc4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bc8:	mov	r3, r7
   15bcc:	mov	r2, r9
   15bd0:	ldr	r1, [pc, #112]	; 15c48 <sprintf@plt+0x4618>
   15bd4:	mov	r0, #87	; 0x57
   15bd8:	bl	121fc <sprintf@plt+0xbcc>
   15bdc:	bl	11450 <rb_current_time@plt>
   15be0:	str	r0, [r9, #796]	; 0x31c
   15be4:	b	15ad8 <sprintf@plt+0x44a8>
   15be8:	ldr	r3, [pc, #92]	; 15c4c <sprintf@plt+0x461c>
   15bec:	mov	r2, #235	; 0xeb
   15bf0:	ldr	r1, [pc, #88]	; 15c50 <sprintf@plt+0x4620>
   15bf4:	ldr	r0, [pc, #88]	; 15c54 <sprintf@plt+0x4624>
   15bf8:	bl	113c0 <__assert_fail@plt>
   15bfc:	ldr	r3, [pc, #72]	; 15c4c <sprintf@plt+0x461c>
   15c00:	mov	r2, #236	; 0xec
   15c04:	ldr	r1, [pc, #68]	; 15c50 <sprintf@plt+0x4620>
   15c08:	ldr	r0, [pc, #72]	; 15c58 <sprintf@plt+0x4628>
   15c0c:	bl	113c0 <__assert_fail@plt>
   15c10:	ldr	r3, [r9, #792]	; 0x318
   15c14:	add	r3, r3, #1
   15c18:	str	r3, [r9, #792]	; 0x318
   15c1c:	add	r3, r9, #256	; 0x100
   15c20:	mov	r2, r9
   15c24:	mov	r1, fp
   15c28:	mov	r0, r8
   15c2c:	bl	128c8 <sprintf@plt+0x1298>
   15c30:	mov	r0, r8
   15c34:	bl	1586c <sprintf@plt+0x423c>
   15c38:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c3c:	andeq	sl, r2, r8, ror #26
   15c40:	andeq	r9, r1, ip, ror r5
   15c44:	andeq	r9, r1, ip, ror #11
   15c48:	andeq	r9, r1, ip, lsr #11
   15c4c:	andeq	r9, r1, ip, asr #9
   15c50:	andeq	r9, r1, r0, lsr #32
   15c54:	andeq	r9, r1, ip, lsr r0
   15c58:	andeq	r9, r1, r0, asr r5
   15c5c:	push	{r4, lr}
   15c60:	sub	sp, sp, #8
   15c64:	mov	r1, sp
   15c68:	ldr	r3, [pc, #60]	; 15cac <sprintf@plt+0x467c>
   15c6c:	ldr	r0, [r3]
   15c70:	bl	1142c <rb_dictionary_foreach_start@plt>
   15c74:	ldr	r4, [pc, #48]	; 15cac <sprintf@plt+0x467c>
   15c78:	b	15c8c <sprintf@plt+0x465c>
   15c7c:	bl	1586c <sprintf@plt+0x423c>
   15c80:	mov	r1, sp
   15c84:	ldr	r0, [r4]
   15c88:	bl	113e4 <rb_dictionary_foreach_next@plt>
   15c8c:	mov	r1, sp
   15c90:	ldr	r0, [r4]
   15c94:	bl	11348 <rb_dictionary_foreach_cur@plt>
   15c98:	cmp	r0, #0
   15c9c:	bne	15c7c <sprintf@plt+0x464c>
   15ca0:	bl	15500 <sprintf@plt+0x3ed0>
   15ca4:	add	sp, sp, #8
   15ca8:	pop	{r4, pc}
   15cac:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   15cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cb4:	sub	sp, sp, #28
   15cb8:	str	r2, [sp, #12]
   15cbc:	ldr	r4, [r2, #8]
   15cc0:	mov	r0, r4
   15cc4:	bl	11444 <strlen@plt>
   15cc8:	add	r0, r0, #1
   15ccc:	bl	11534 <malloc@plt>
   15cd0:	subs	r3, r0, #0
   15cd4:	str	r3, [sp, #8]
   15cd8:	beq	15d20 <sprintf@plt+0x46f0>
   15cdc:	mov	r1, r4
   15ce0:	ldr	r4, [sp, #8]
   15ce4:	mov	r0, r4
   15ce8:	bl	114a4 <strcpy@plt>
   15cec:	ldrb	r3, [r4]
   15cf0:	cmp	r3, #42	; 0x2a
   15cf4:	beq	15e50 <sprintf@plt+0x4820>
   15cf8:	add	r2, sp, #20
   15cfc:	ldr	r1, [pc, #764]	; 16000 <sprintf@plt+0x49d0>
   15d00:	mov	r0, r4
   15d04:	bl	11330 <rb_strtok_r@plt>
   15d08:	subs	r9, r0, #0
   15d0c:	beq	15f3c <sprintf@plt+0x490c>
   15d10:	mov	fp, #0
   15d14:	str	fp, [sp, #4]
   15d18:	mov	sl, fp
   15d1c:	b	15df0 <sprintf@plt+0x47c0>
   15d20:	bl	11504 <rb_outofmemory@plt>
   15d24:	bl	11504 <rb_outofmemory@plt>
   15d28:	add	r6, r6, #1
   15d2c:	cmp	r6, #3
   15d30:	bgt	15d7c <sprintf@plt+0x474c>
   15d34:	mov	r7, #1
   15d38:	ldrb	r4, [r5, #1]!
   15d3c:	cmp	r4, #0
   15d40:	beq	15d90 <sprintf@plt+0x4760>
   15d44:	cmp	r4, #46	; 0x2e
   15d48:	beq	15d28 <sprintf@plt+0x46f8>
   15d4c:	bl	11510 <__ctype_b_loc@plt>
   15d50:	ldr	r2, [r0]
   15d54:	lsl	r3, r4, #1
   15d58:	ldrh	r3, [r2, r3]
   15d5c:	tst	r3, #2048	; 0x800
   15d60:	bne	15d38 <sprintf@plt+0x4708>
   15d64:	mov	r2, r4
   15d68:	ldr	r1, [pc, #660]	; 16004 <sprintf@plt+0x49d4>
   15d6c:	mov	r0, #67	; 0x43
   15d70:	bl	121fc <sprintf@plt+0xbcc>
   15d74:	mov	r0, #3
   15d78:	bl	11618 <exit@plt>
   15d7c:	ldr	r1, [pc, #644]	; 16008 <sprintf@plt+0x49d8>
   15d80:	mov	r0, #67	; 0x43
   15d84:	bl	121fc <sprintf@plt+0xbcc>
   15d88:	mov	r0, #3
   15d8c:	bl	11618 <exit@plt>
   15d90:	sub	r6, r6, #1
   15d94:	cmp	r6, #1
   15d98:	bls	15e24 <sprintf@plt+0x47f4>
   15d9c:	mov	r0, r8
   15da0:	str	r7, [r0], #4
   15da4:	mov	r2, #53	; 0x35
   15da8:	mov	r1, r9
   15dac:	bl	113cc <rb_strlcpy@plt>
   15db0:	add	r4, r8, #60	; 0x3c
   15db4:	str	r8, [r8, #60]	; 0x3c
   15db8:	mov	r3, #0
   15dbc:	str	r3, [r8, #64]	; 0x40
   15dc0:	str	sl, [r8, #68]	; 0x44
   15dc4:	cmp	sl, r3
   15dc8:	strne	r4, [sl, #4]
   15dcc:	beq	15e38 <sprintf@plt+0x4808>
   15dd0:	add	fp, fp, #1
   15dd4:	add	r2, sp, #20
   15dd8:	ldr	r1, [pc, #544]	; 16000 <sprintf@plt+0x49d0>
   15ddc:	mov	r0, #0
   15de0:	bl	11330 <rb_strtok_r@plt>
   15de4:	mov	sl, r4
   15de8:	subs	r9, r0, #0
   15dec:	beq	15e5c <sprintf@plt+0x482c>
   15df0:	mov	r1, #72	; 0x48
   15df4:	mov	r0, #1
   15df8:	bl	11360 <calloc@plt>
   15dfc:	subs	r8, r0, #0
   15e00:	beq	15d24 <sprintf@plt+0x46f4>
   15e04:	ldrb	r4, [r9]
   15e08:	cmp	r4, #0
   15e0c:	moveq	r7, #2
   15e10:	beq	15d9c <sprintf@plt+0x476c>
   15e14:	mov	r5, r9
   15e18:	mov	r7, #2
   15e1c:	mov	r6, #0
   15e20:	b	15d44 <sprintf@plt+0x4714>
   15e24:	ldr	r1, [pc, #480]	; 1600c <sprintf@plt+0x49dc>
   15e28:	mov	r0, #67	; 0x43
   15e2c:	bl	121fc <sprintf@plt+0xbcc>
   15e30:	mov	r0, #3
   15e34:	bl	11618 <exit@plt>
   15e38:	ldr	r2, [sp, #4]
   15e3c:	mov	r3, r2
   15e40:	cmp	r2, #0
   15e44:	moveq	r3, r4
   15e48:	str	r3, [sp, #4]
   15e4c:	b	15dd0 <sprintf@plt+0x47a0>
   15e50:	mov	fp, #0
   15e54:	str	fp, [sp, #4]
   15e58:	mov	r4, fp
   15e5c:	ldr	r0, [sp, #8]
   15e60:	bl	113f0 <free@plt>
   15e64:	mov	r2, #10
   15e68:	mov	r1, #0
   15e6c:	ldr	r5, [sp, #12]
   15e70:	ldr	r0, [r5, #4]
   15e74:	bl	1148c <strtol@plt>
   15e78:	mov	r3, r5
   15e7c:	ldr	r6, [r5]
   15e80:	ldr	r7, [r5, #12]
   15e84:	cmp	r7, #0
   15e88:	cmpne	r6, #0
   15e8c:	moveq	r3, #1
   15e90:	movne	r3, #0
   15e94:	ands	r8, r0, #3
   15e98:	orreq	r3, r3, #1
   15e9c:	cmp	r3, #0
   15ea0:	bne	15fec <sprintf@plt+0x49bc>
   15ea4:	mov	r0, r6
   15ea8:	bl	154ac <sprintf@plt+0x3e7c>
   15eac:	subs	r5, r0, #0
   15eb0:	movne	r3, #0
   15eb4:	strbne	r3, [r5, #784]	; 0x310
   15eb8:	beq	15f4c <sprintf@plt+0x491c>
   15ebc:	mov	r2, #256	; 0x100
   15ec0:	mov	r1, r6
   15ec4:	mov	r0, r5
   15ec8:	bl	113cc <rb_strlcpy@plt>
   15ecc:	mov	r2, #512	; 0x200
   15ed0:	mov	r1, r7
   15ed4:	add	r0, r5, #256	; 0x100
   15ed8:	bl	113cc <rb_strlcpy@plt>
   15edc:	strb	r8, [r5, #768]	; 0x300
   15ee0:	cmn	r5, #772	; 0x304
   15ee4:	beq	15fd8 <sprintf@plt+0x49a8>
   15ee8:	cmp	r4, #0
   15eec:	beq	15f24 <sprintf@plt+0x48f4>
   15ef0:	ldr	r3, [r5, #772]	; 0x304
   15ef4:	cmp	r3, #0
   15ef8:	streq	r4, [r5, #772]	; 0x304
   15efc:	ldreq	r3, [sp, #4]
   15f00:	streq	r3, [r5, #776]	; 0x308
   15f04:	ldrne	r2, [sp, #4]
   15f08:	strne	r3, [r2, #8]
   15f0c:	ldrne	r3, [r5, #772]	; 0x304
   15f10:	strne	r2, [r3, #4]
   15f14:	strne	r4, [r5, #772]	; 0x304
   15f18:	ldrne	r3, [r5, #780]	; 0x30c
   15f1c:	addne	fp, r3, fp
   15f20:	str	fp, [r5, #780]	; 0x30c
   15f24:	mov	r3, #0
   15f28:	str	r3, [r5, #796]	; 0x31c
   15f2c:	cmp	r5, r3
   15f30:	beq	15fec <sprintf@plt+0x49bc>
   15f34:	add	sp, sp, #28
   15f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f3c:	mov	fp, #0
   15f40:	str	fp, [sp, #4]
   15f44:	mov	r4, fp
   15f48:	b	15e5c <sprintf@plt+0x482c>
   15f4c:	mov	r1, #800	; 0x320
   15f50:	mov	r0, #1
   15f54:	bl	11360 <calloc@plt>
   15f58:	subs	r5, r0, #0
   15f5c:	beq	15fa8 <sprintf@plt+0x4978>
   15f60:	bl	115b8 <rb_make_rb_dlink_node@plt>
   15f64:	cmp	r0, #0
   15f68:	beq	15fac <sprintf@plt+0x497c>
   15f6c:	str	r5, [r0]
   15f70:	mov	r3, #0
   15f74:	str	r3, [r0, #4]
   15f78:	ldr	r3, [pc, #144]	; 16010 <sprintf@plt+0x49e0>
   15f7c:	ldr	r3, [r3]
   15f80:	str	r3, [r0, #8]
   15f84:	cmp	r3, #0
   15f88:	strne	r0, [r3, #4]
   15f8c:	beq	15fc0 <sprintf@plt+0x4990>
   15f90:	ldr	r3, [pc, #120]	; 16010 <sprintf@plt+0x49e0>
   15f94:	str	r0, [r3]
   15f98:	ldr	r2, [r3, #8]
   15f9c:	add	r2, r2, #1
   15fa0:	str	r2, [r3, #8]
   15fa4:	b	15ebc <sprintf@plt+0x488c>
   15fa8:	bl	11504 <rb_outofmemory@plt>
   15fac:	ldr	r3, [pc, #96]	; 16014 <sprintf@plt+0x49e4>
   15fb0:	mov	r2, #144	; 0x90
   15fb4:	ldr	r1, [pc, #92]	; 16018 <sprintf@plt+0x49e8>
   15fb8:	ldr	r0, [pc, #92]	; 1601c <sprintf@plt+0x49ec>
   15fbc:	bl	113c0 <__assert_fail@plt>
   15fc0:	ldr	r3, [pc, #72]	; 16010 <sprintf@plt+0x49e0>
   15fc4:	ldr	r3, [r3, #4]
   15fc8:	cmp	r3, #0
   15fcc:	ldreq	r3, [pc, #60]	; 16010 <sprintf@plt+0x49e0>
   15fd0:	streq	r0, [r3, #4]
   15fd4:	b	15f90 <sprintf@plt+0x4960>
   15fd8:	ldr	r3, [pc, #64]	; 16020 <sprintf@plt+0x49f0>
   15fdc:	ldr	r2, [pc, #64]	; 16024 <sprintf@plt+0x49f4>
   15fe0:	ldr	r1, [pc, #48]	; 16018 <sprintf@plt+0x49e8>
   15fe4:	ldr	r0, [pc, #60]	; 16028 <sprintf@plt+0x49f8>
   15fe8:	bl	113c0 <__assert_fail@plt>
   15fec:	ldr	r1, [pc, #56]	; 1602c <sprintf@plt+0x49fc>
   15ff0:	mov	r0, #67	; 0x43
   15ff4:	bl	121fc <sprintf@plt+0xbcc>
   15ff8:	mov	r0, #3
   15ffc:	bl	11618 <exit@plt>
   16000:	andeq	r9, r1, r4, lsl r6
   16004:	andeq	r9, r1, r4, asr r6
   16008:	andeq	r9, r1, r8, lsl r6
   1600c:	andeq	r9, r1, r4, lsr #13
   16010:	andeq	lr, r2, r0, ror #31
   16014:	ldrdeq	r9, [r1], -ip
   16018:	andeq	r9, r1, r0, lsr #32
   1601c:	andeq	r9, r1, ip, lsr r0
   16020:	andeq	r9, r1, r8, ror #9
   16024:	andeq	r0, r0, r5, asr #2
   16028:	andeq	r9, r1, r4, ror #13
   1602c:	strdeq	r9, [r1], -r0
   16030:	push	{r4, r5, r6, r7, lr}
   16034:	sub	sp, sp, #260	; 0x104
   16038:	mov	r7, r0
   1603c:	mov	r6, r1
   16040:	mov	r1, #24
   16044:	mov	r0, #1
   16048:	bl	11360 <calloc@plt>
   1604c:	subs	r4, r0, #0
   16050:	beq	1609c <sprintf@plt+0x4a6c>
   16054:	ldr	r3, [pc, #244]	; 16150 <sprintf@plt+0x4b20>
   16058:	ldr	r2, [r3, #16]
   1605c:	ldr	r3, [r6, #464]	; 0x1d0
   16060:	add	r3, r3, r2, lsl #4
   16064:	ldr	r5, [r3, #8]
   16068:	str	r7, [r4]
   1606c:	str	r6, [r4, #4]
   16070:	ldrh	r3, [r6, #248]	; 0xf8
   16074:	cmp	r3, #2
   16078:	beq	160a0 <sprintf@plt+0x4a70>
   1607c:	cmp	r3, #10
   16080:	bne	160ac <sprintf@plt+0x4a7c>
   16084:	ldrb	r3, [r7, #768]	; 0x300
   16088:	tst	r3, #2
   1608c:	bne	160ac <sprintf@plt+0x4a7c>
   16090:	mov	r0, r4
   16094:	bl	113f0 <free@plt>
   16098:	b	16124 <sprintf@plt+0x4af4>
   1609c:	bl	11504 <rb_outofmemory@plt>
   160a0:	ldrb	r3, [r7, #768]	; 0x300
   160a4:	tst	r3, #1
   160a8:	beq	16090 <sprintf@plt+0x4a60>
   160ac:	mov	r3, r7
   160b0:	add	r2, r6, #248	; 0xf8
   160b4:	mov	r1, #256	; 0x100
   160b8:	mov	r0, sp
   160bc:	bl	135fc <sprintf@plt+0x1fcc>
   160c0:	mov	r3, r4
   160c4:	ldr	r2, [pc, #136]	; 16154 <sprintf@plt+0x4b24>
   160c8:	mov	r1, #2
   160cc:	mov	r0, sp
   160d0:	bl	11d8c <sprintf@plt+0x75c>
   160d4:	str	r0, [r4, #8]
   160d8:	add	r3, r4, #12
   160dc:	cmn	r5, #4
   160e0:	beq	1612c <sprintf@plt+0x4afc>
   160e4:	str	r4, [r4, #12]
   160e8:	mov	r2, #0
   160ec:	str	r2, [r4, #16]
   160f0:	ldr	r2, [r5, #4]
   160f4:	str	r2, [r4, #20]
   160f8:	ldr	r2, [r5, #4]
   160fc:	cmp	r2, #0
   16100:	strne	r3, [r2, #4]
   16104:	beq	16140 <sprintf@plt+0x4b10>
   16108:	str	r3, [r5, #4]
   1610c:	ldr	r3, [r5, #12]
   16110:	add	r3, r3, #1
   16114:	str	r3, [r5, #12]
   16118:	ldr	r3, [r7, #788]	; 0x314
   1611c:	add	r3, r3, #1
   16120:	str	r3, [r7, #788]	; 0x314
   16124:	add	sp, sp, #260	; 0x104
   16128:	pop	{r4, r5, r6, r7, pc}
   1612c:	ldr	r3, [pc, #36]	; 16158 <sprintf@plt+0x4b28>
   16130:	mov	r2, #145	; 0x91
   16134:	ldr	r1, [pc, #32]	; 1615c <sprintf@plt+0x4b2c>
   16138:	ldr	r0, [pc, #32]	; 16160 <sprintf@plt+0x4b30>
   1613c:	bl	113c0 <__assert_fail@plt>
   16140:	ldr	r2, [r5, #8]
   16144:	cmp	r2, #0
   16148:	streq	r3, [r5, #8]
   1614c:	b	16108 <sprintf@plt+0x4ad8>
   16150:	andeq	sl, r2, r8, ror #26
   16154:	andeq	r5, r1, ip, ror #19
   16158:	ldrdeq	r9, [r1], -ip
   1615c:	andeq	r9, r1, r0, lsr #32
   16160:	andeq	r9, r1, r0, asr r5
   16164:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16168:	ldr	r3, [pc, #348]	; 162cc <sprintf@plt+0x4c9c>
   1616c:	ldr	r2, [r3, #16]
   16170:	ldr	r3, [r0, #464]	; 0x1d0
   16174:	add	r3, r3, r2, lsl #4
   16178:	ldr	r5, [r3, #8]
   1617c:	cmp	r5, #0
   16180:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16184:	mov	r8, r0
   16188:	ldr	r3, [r5, #12]
   1618c:	cmp	r3, #0
   16190:	bne	161f0 <sprintf@plt+0x4bc0>
   16194:	mov	r0, r5
   16198:	bl	113f0 <free@plt>
   1619c:	ldr	r3, [pc, #296]	; 162cc <sprintf@plt+0x4c9c>
   161a0:	ldr	r1, [r3, #16]
   161a4:	ldr	r2, [r8, #464]	; 0x1d0
   161a8:	add	r2, r2, r1, lsl #4
   161ac:	mov	r1, #0
   161b0:	str	r1, [r2, #8]
   161b4:	ldr	r0, [r3, #16]
   161b8:	ldr	r2, [r8, #464]	; 0x1d0
   161bc:	add	r2, r2, r0, lsl #4
   161c0:	str	r1, [r2, #4]
   161c4:	ldr	r1, [r3, #16]
   161c8:	mov	r0, r8
   161cc:	bl	12b9c <sprintf@plt+0x156c>
   161d0:	ldr	r3, [r8, #460]	; 0x1cc
   161d4:	sub	r3, r3, #1
   161d8:	str	r3, [r8, #460]	; 0x1cc
   161dc:	cmp	r3, #0
   161e0:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   161e4:	mov	r0, r8
   161e8:	bl	1271c <sprintf@plt+0x10ec>
   161ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   161f0:	ldr	r1, [pc, #216]	; 162d0 <sprintf@plt+0x4ca0>
   161f4:	ldr	r0, [r0]
   161f8:	bl	121a4 <sprintf@plt+0xb74>
   161fc:	ldr	r3, [r5, #4]
   16200:	cmp	r3, #0
   16204:	beq	16194 <sprintf@plt+0x4b64>
   16208:	ldr	r7, [r3, #8]
   1620c:	add	sl, r5, #4
   16210:	mov	r9, #0
   16214:	ldr	r4, [r3]
   16218:	ldr	r0, [r4, #8]
   1621c:	bl	11f04 <sprintf@plt+0x8d4>
   16220:	mov	r6, r4
   16224:	ldr	r0, [r6], #12
   16228:	bl	156f0 <sprintf@plt+0x40c0>
   1622c:	cmp	r6, #0
   16230:	beq	162a4 <sprintf@plt+0x4c74>
   16234:	cmp	sl, #0
   16238:	beq	162b8 <sprintf@plt+0x4c88>
   1623c:	ldr	r3, [r4, #20]
   16240:	cmp	r3, #0
   16244:	ldrne	r2, [r4, #16]
   16248:	strne	r2, [r3, #4]
   1624c:	ldreq	r3, [r4, #16]
   16250:	streq	r3, [r5, #8]
   16254:	ldr	r3, [r4, #16]
   16258:	cmp	r3, #0
   1625c:	ldrne	r2, [r4, #20]
   16260:	strne	r2, [r3, #8]
   16264:	ldreq	r3, [r4, #20]
   16268:	streq	r3, [r5, #4]
   1626c:	str	r9, [r4, #16]
   16270:	str	r9, [r4, #20]
   16274:	ldr	r3, [r5, #12]
   16278:	sub	r3, r3, #1
   1627c:	str	r3, [r5, #12]
   16280:	cmp	r4, #0
   16284:	beq	16290 <sprintf@plt+0x4c60>
   16288:	mov	r0, r4
   1628c:	bl	113f0 <free@plt>
   16290:	cmp	r7, #0
   16294:	beq	16194 <sprintf@plt+0x4b64>
   16298:	mov	r3, r7
   1629c:	ldr	r7, [r7, #8]
   162a0:	b	16214 <sprintf@plt+0x4be4>
   162a4:	ldr	r3, [pc, #40]	; 162d4 <sprintf@plt+0x4ca4>
   162a8:	mov	r2, #235	; 0xeb
   162ac:	ldr	r1, [pc, #36]	; 162d8 <sprintf@plt+0x4ca8>
   162b0:	ldr	r0, [pc, #36]	; 162dc <sprintf@plt+0x4cac>
   162b4:	bl	113c0 <__assert_fail@plt>
   162b8:	ldr	r3, [pc, #20]	; 162d4 <sprintf@plt+0x4ca4>
   162bc:	mov	r2, #236	; 0xec
   162c0:	ldr	r1, [pc, #16]	; 162d8 <sprintf@plt+0x4ca8>
   162c4:	ldr	r0, [pc, #20]	; 162e0 <sprintf@plt+0x4cb0>
   162c8:	bl	113c0 <__assert_fail@plt>
   162cc:	andeq	sl, r2, r8, ror #26
   162d0:	andeq	r9, r1, r0, lsr #14
   162d4:	andeq	r9, r1, ip, asr #9
   162d8:	andeq	r9, r1, r0, lsr #32
   162dc:	andeq	r9, r1, ip, lsr r0
   162e0:	andeq	r9, r1, r0, asr r5
   162e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   162e8:	ldr	r8, [r0, #464]	; 0x1d0
   162ec:	ldr	r3, [pc, #372]	; 16468 <sprintf@plt+0x4e38>
   162f0:	ldr	r3, [r3, #16]
   162f4:	add	r3, r8, r3, lsl #4
   162f8:	ldr	r9, [r3, #8]
   162fc:	cmp	r9, #0
   16300:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16304:	ldrb	r3, [r9]
   16308:	cmp	r3, #0
   1630c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   16310:	mov	sl, r0
   16314:	ldr	r3, [pc, #336]	; 1646c <sprintf@plt+0x4e3c>
   16318:	ldr	r6, [r3]
   1631c:	cmp	r6, #0
   16320:	beq	16378 <sprintf@plt+0x4d48>
   16324:	mov	r4, r6
   16328:	ldr	r7, [pc, #320]	; 16470 <sprintf@plt+0x4e40>
   1632c:	ldr	r5, [r4]
   16330:	mov	r1, r7
   16334:	ldr	r0, [r5, #16]
   16338:	bl	11354 <strcasecmp@plt>
   1633c:	cmp	r0, #0
   16340:	beq	1639c <sprintf@plt+0x4d6c>
   16344:	ldr	r4, [r4, #8]
   16348:	cmp	r4, #0
   1634c:	bne	1632c <sprintf@plt+0x4cfc>
   16350:	ldr	r5, [pc, #284]	; 16474 <sprintf@plt+0x4e44>
   16354:	ldr	r4, [r6]
   16358:	mov	r1, r5
   1635c:	ldr	r0, [r4, #16]
   16360:	bl	11354 <strcasecmp@plt>
   16364:	cmp	r0, #0
   16368:	beq	163bc <sprintf@plt+0x4d8c>
   1636c:	ldr	r6, [r6, #8]
   16370:	cmp	r6, #0
   16374:	bne	16354 <sprintf@plt+0x4d24>
   16378:	ldrh	r3, [sl, #248]	; 0xf8
   1637c:	cmp	r3, #2
   16380:	beq	163dc <sprintf@plt+0x4dac>
   16384:	cmp	r3, #10
   16388:	moveq	r5, #2
   1638c:	beq	163e0 <sprintf@plt+0x4db0>
   16390:	mov	r0, sl
   16394:	bl	16164 <sprintf@plt+0x4b34>
   16398:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1639c:	cmp	r5, #0
   163a0:	beq	16350 <sprintf@plt+0x4d20>
   163a4:	ldr	r3, [r5, #12]
   163a8:	add	r3, r8, r3, lsl #4
   163ac:	ldr	r3, [r3, #12]
   163b0:	cmp	r3, #2
   163b4:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   163b8:	b	16350 <sprintf@plt+0x4d20>
   163bc:	cmp	r4, #0
   163c0:	beq	16378 <sprintf@plt+0x4d48>
   163c4:	ldr	r3, [r4, #12]
   163c8:	add	r8, r8, r3, lsl #4
   163cc:	ldr	r3, [r8, #12]
   163d0:	cmp	r3, #2
   163d4:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   163d8:	b	16378 <sprintf@plt+0x4d48>
   163dc:	mov	r5, #1
   163e0:	mov	r3, #1
   163e4:	strb	r3, [r9]
   163e8:	ldr	r1, [pc, #136]	; 16478 <sprintf@plt+0x4e48>
   163ec:	ldr	r0, [sl]
   163f0:	bl	121a4 <sprintf@plt+0xb74>
   163f4:	ldr	r3, [pc, #128]	; 1647c <sprintf@plt+0x4e4c>
   163f8:	ldr	r4, [r3]
   163fc:	cmp	r4, #0
   16400:	bne	16440 <sprintf@plt+0x4e10>
   16404:	ldr	r3, [r9, #12]
   16408:	cmp	r3, #0
   1640c:	beq	16390 <sprintf@plt+0x4d60>
   16410:	ldr	r3, [pc, #80]	; 16468 <sprintf@plt+0x4e38>
   16414:	ldr	r5, [r3]
   16418:	ldr	r3, [r3, #16]
   1641c:	ldr	r4, [sl, #464]	; 0x1d0
   16420:	add	r4, r4, r3, lsl #4
   16424:	bl	11450 <rb_current_time@plt>
   16428:	add	r0, r5, r0
   1642c:	str	r0, [r4, #4]
   16430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16434:	ldr	r4, [r4, #8]
   16438:	cmp	r4, #0
   1643c:	beq	16404 <sprintf@plt+0x4dd4>
   16440:	ldr	r0, [r4]
   16444:	ldrb	r3, [r0, #784]	; 0x310
   16448:	cmp	r3, #0
   1644c:	bne	16434 <sprintf@plt+0x4e04>
   16450:	ldrb	r3, [r0, #768]	; 0x300
   16454:	tst	r3, r5
   16458:	beq	16434 <sprintf@plt+0x4e04>
   1645c:	mov	r1, sl
   16460:	bl	16030 <sprintf@plt+0x4a00>
   16464:	b	16434 <sprintf@plt+0x4e04>
   16468:	andeq	sl, r2, r8, ror #26
   1646c:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   16470:	andeq	r9, r1, ip, lsr r7
   16474:	andeq	r9, r1, r4, asr #14
   16478:	andeq	r9, r1, ip, asr #14
   1647c:	andeq	lr, r2, r0, ror #31
   16480:	push	{r4, r5, r6, r7, r8, lr}
   16484:	mov	r8, r0
   16488:	ldr	r3, [pc, #452]	; 16654 <sprintf@plt+0x5024>
   1648c:	ldr	r3, [r3, #8]
   16490:	cmp	r3, #0
   16494:	beq	16554 <sprintf@plt+0x4f24>
   16498:	ldr	r3, [r0, #460]	; 0x1cc
   1649c:	add	r3, r3, #1
   164a0:	str	r3, [r0, #460]	; 0x1cc
   164a4:	ldr	r3, [pc, #428]	; 16658 <sprintf@plt+0x5028>
   164a8:	ldr	r4, [r3, #16]
   164ac:	mov	r1, #16
   164b0:	mov	r0, #1
   164b4:	bl	11360 <calloc@plt>
   164b8:	cmp	r0, #0
   164bc:	beq	16568 <sprintf@plt+0x4f38>
   164c0:	ldr	r3, [r8, #464]	; 0x1d0
   164c4:	add	r3, r3, r4, lsl #4
   164c8:	str	r0, [r3, #8]
   164cc:	ldr	r3, [pc, #392]	; 1665c <sprintf@plt+0x502c>
   164d0:	ldr	r6, [r3]
   164d4:	cmp	r6, #0
   164d8:	beq	16530 <sprintf@plt+0x4f00>
   164dc:	mov	r4, r6
   164e0:	ldr	r7, [pc, #376]	; 16660 <sprintf@plt+0x5030>
   164e4:	ldr	r5, [r4]
   164e8:	mov	r1, r7
   164ec:	ldr	r0, [r5, #16]
   164f0:	bl	11354 <strcasecmp@plt>
   164f4:	cmp	r0, #0
   164f8:	beq	1656c <sprintf@plt+0x4f3c>
   164fc:	ldr	r4, [r4, #8]
   16500:	cmp	r4, #0
   16504:	bne	164e4 <sprintf@plt+0x4eb4>
   16508:	ldr	r5, [pc, #340]	; 16664 <sprintf@plt+0x5034>
   1650c:	ldr	r4, [r6]
   16510:	mov	r1, r5
   16514:	ldr	r0, [r4, #16]
   16518:	bl	11354 <strcasecmp@plt>
   1651c:	cmp	r0, #0
   16520:	beq	16590 <sprintf@plt+0x4f60>
   16524:	ldr	r6, [r6, #8]
   16528:	cmp	r6, #0
   1652c:	bne	1650c <sprintf@plt+0x4edc>
   16530:	ldrh	r3, [r8, #248]	; 0xf8
   16534:	cmp	r3, #2
   16538:	beq	165b4 <sprintf@plt+0x4f84>
   1653c:	cmp	r3, #10
   16540:	moveq	r5, #2
   16544:	beq	165b8 <sprintf@plt+0x4f88>
   16548:	mov	r0, r8
   1654c:	bl	16164 <sprintf@plt+0x4b34>
   16550:	b	16560 <sprintf@plt+0x4f30>
   16554:	ldr	r3, [pc, #252]	; 16658 <sprintf@plt+0x5028>
   16558:	ldr	r1, [r3, #16]
   1655c:	bl	12b9c <sprintf@plt+0x156c>
   16560:	mov	r0, #1
   16564:	pop	{r4, r5, r6, r7, r8, pc}
   16568:	bl	11504 <rb_outofmemory@plt>
   1656c:	cmp	r5, #0
   16570:	beq	16508 <sprintf@plt+0x4ed8>
   16574:	ldr	r2, [r5, #12]
   16578:	ldr	r3, [r8, #464]	; 0x1d0
   1657c:	add	r3, r3, r2, lsl #4
   16580:	ldr	r3, [r3, #12]
   16584:	cmp	r3, #2
   16588:	bne	16560 <sprintf@plt+0x4f30>
   1658c:	b	16508 <sprintf@plt+0x4ed8>
   16590:	cmp	r4, #0
   16594:	beq	16530 <sprintf@plt+0x4f00>
   16598:	ldr	r2, [r4, #12]
   1659c:	ldr	r3, [r8, #464]	; 0x1d0
   165a0:	add	r3, r3, r2, lsl #4
   165a4:	ldr	r3, [r3, #12]
   165a8:	cmp	r3, #2
   165ac:	bne	16560 <sprintf@plt+0x4f30>
   165b0:	b	16530 <sprintf@plt+0x4f00>
   165b4:	mov	r5, #1
   165b8:	ldr	r3, [pc, #152]	; 16658 <sprintf@plt+0x5028>
   165bc:	ldr	r2, [r3, #16]
   165c0:	ldr	r3, [r8, #464]	; 0x1d0
   165c4:	add	r3, r3, r2, lsl #4
   165c8:	ldr	r6, [r3, #8]
   165cc:	mov	r3, #1
   165d0:	strb	r3, [r6]
   165d4:	ldr	r1, [pc, #140]	; 16668 <sprintf@plt+0x5038>
   165d8:	ldr	r0, [r8]
   165dc:	bl	121a4 <sprintf@plt+0xb74>
   165e0:	ldr	r3, [pc, #108]	; 16654 <sprintf@plt+0x5024>
   165e4:	ldr	r4, [r3]
   165e8:	cmp	r4, #0
   165ec:	bne	1662c <sprintf@plt+0x4ffc>
   165f0:	ldr	r3, [r6, #12]
   165f4:	cmp	r3, #0
   165f8:	beq	16548 <sprintf@plt+0x4f18>
   165fc:	ldr	r3, [pc, #84]	; 16658 <sprintf@plt+0x5028>
   16600:	ldr	r5, [r3]
   16604:	ldr	r3, [r3, #16]
   16608:	ldr	r4, [r8, #464]	; 0x1d0
   1660c:	add	r4, r4, r3, lsl #4
   16610:	bl	11450 <rb_current_time@plt>
   16614:	add	r0, r5, r0
   16618:	str	r0, [r4, #4]
   1661c:	b	16560 <sprintf@plt+0x4f30>
   16620:	ldr	r4, [r4, #8]
   16624:	cmp	r4, #0
   16628:	beq	165f0 <sprintf@plt+0x4fc0>
   1662c:	ldr	r0, [r4]
   16630:	ldrb	r3, [r0, #784]	; 0x310
   16634:	cmp	r3, #0
   16638:	bne	16620 <sprintf@plt+0x4ff0>
   1663c:	ldrb	r3, [r0, #768]	; 0x300
   16640:	tst	r3, r5
   16644:	beq	16620 <sprintf@plt+0x4ff0>
   16648:	mov	r1, r8
   1664c:	bl	16030 <sprintf@plt+0x4a00>
   16650:	b	16620 <sprintf@plt+0x4ff0>
   16654:	andeq	lr, r2, r0, ror #31
   16658:	andeq	sl, r2, r8, ror #26
   1665c:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   16660:	andeq	r9, r1, ip, lsr r7
   16664:	andeq	r9, r1, r4, asr #14
   16668:	andeq	r9, r1, ip, asr #14
   1666c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16670:	ldr	r3, [pc, #348]	; 167d4 <sprintf@plt+0x51a4>
   16674:	ldr	r2, [r3, #16]
   16678:	ldr	r3, [r0, #464]	; 0x1d0
   1667c:	add	r3, r3, r2, lsl #4
   16680:	ldr	r5, [r3, #8]
   16684:	cmp	r5, #0
   16688:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1668c:	mov	r8, r0
   16690:	ldr	r3, [r5, #12]
   16694:	cmp	r3, #0
   16698:	bne	166f8 <sprintf@plt+0x50c8>
   1669c:	mov	r0, r5
   166a0:	bl	113f0 <free@plt>
   166a4:	ldr	r3, [pc, #296]	; 167d4 <sprintf@plt+0x51a4>
   166a8:	ldr	r1, [r3, #16]
   166ac:	ldr	r2, [r8, #464]	; 0x1d0
   166b0:	add	r2, r2, r1, lsl #4
   166b4:	mov	r1, #0
   166b8:	str	r1, [r2, #8]
   166bc:	ldr	r0, [r3, #16]
   166c0:	ldr	r2, [r8, #464]	; 0x1d0
   166c4:	add	r2, r2, r0, lsl #4
   166c8:	str	r1, [r2, #4]
   166cc:	ldr	r1, [r3, #16]
   166d0:	mov	r0, r8
   166d4:	bl	12b9c <sprintf@plt+0x156c>
   166d8:	ldr	r3, [r8, #460]	; 0x1cc
   166dc:	sub	r3, r3, #1
   166e0:	str	r3, [r8, #460]	; 0x1cc
   166e4:	cmp	r3, #0
   166e8:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   166ec:	mov	r0, r8
   166f0:	bl	1271c <sprintf@plt+0x10ec>
   166f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   166f8:	ldr	r1, [pc, #216]	; 167d8 <sprintf@plt+0x51a8>
   166fc:	ldr	r0, [r0]
   16700:	bl	121a4 <sprintf@plt+0xb74>
   16704:	ldr	r3, [r5, #4]
   16708:	cmp	r3, #0
   1670c:	beq	1669c <sprintf@plt+0x506c>
   16710:	ldr	r7, [r3, #8]
   16714:	add	sl, r5, #4
   16718:	mov	r9, #0
   1671c:	ldr	r4, [r3]
   16720:	ldr	r0, [r4, #8]
   16724:	bl	11f04 <sprintf@plt+0x8d4>
   16728:	mov	r6, r4
   1672c:	ldr	r0, [r6], #12
   16730:	bl	156f0 <sprintf@plt+0x40c0>
   16734:	cmp	r6, #0
   16738:	beq	167ac <sprintf@plt+0x517c>
   1673c:	cmp	sl, #0
   16740:	beq	167c0 <sprintf@plt+0x5190>
   16744:	ldr	r3, [r4, #20]
   16748:	cmp	r3, #0
   1674c:	ldrne	r2, [r4, #16]
   16750:	strne	r2, [r3, #4]
   16754:	ldreq	r3, [r4, #16]
   16758:	streq	r3, [r5, #8]
   1675c:	ldr	r3, [r4, #16]
   16760:	cmp	r3, #0
   16764:	ldrne	r2, [r4, #20]
   16768:	strne	r2, [r3, #8]
   1676c:	ldreq	r3, [r4, #20]
   16770:	streq	r3, [r5, #4]
   16774:	str	r9, [r4, #16]
   16778:	str	r9, [r4, #20]
   1677c:	ldr	r3, [r5, #12]
   16780:	sub	r3, r3, #1
   16784:	str	r3, [r5, #12]
   16788:	cmp	r4, #0
   1678c:	beq	16798 <sprintf@plt+0x5168>
   16790:	mov	r0, r4
   16794:	bl	113f0 <free@plt>
   16798:	cmp	r7, #0
   1679c:	beq	1669c <sprintf@plt+0x506c>
   167a0:	mov	r3, r7
   167a4:	ldr	r7, [r7, #8]
   167a8:	b	1671c <sprintf@plt+0x50ec>
   167ac:	ldr	r3, [pc, #40]	; 167dc <sprintf@plt+0x51ac>
   167b0:	mov	r2, #235	; 0xeb
   167b4:	ldr	r1, [pc, #36]	; 167e0 <sprintf@plt+0x51b0>
   167b8:	ldr	r0, [pc, #36]	; 167e4 <sprintf@plt+0x51b4>
   167bc:	bl	113c0 <__assert_fail@plt>
   167c0:	ldr	r3, [pc, #20]	; 167dc <sprintf@plt+0x51ac>
   167c4:	mov	r2, #236	; 0xec
   167c8:	ldr	r1, [pc, #16]	; 167e0 <sprintf@plt+0x51b0>
   167cc:	ldr	r0, [pc, #20]	; 167e8 <sprintf@plt+0x51b8>
   167d0:	bl	113c0 <__assert_fail@plt>
   167d4:	andeq	sl, r2, r8, ror #26
   167d8:	andeq	r9, r1, r0, ror r7
   167dc:	andeq	r9, r1, ip, asr #9
   167e0:	andeq	r9, r1, r0, lsr #32
   167e4:	andeq	r9, r1, ip, lsr r0
   167e8:	andeq	r9, r1, r0, asr r5
   167ec:	ldr	r3, [r2]
   167f0:	ldrb	r3, [r3]
   167f4:	cmp	r3, #49	; 0x31
   167f8:	movne	r3, #0
   167fc:	moveq	r3, #1
   16800:	ldr	r2, [pc, #4]	; 1680c <sprintf@plt+0x51dc>
   16804:	strb	r3, [r2]
   16808:	bx	lr
   1680c:	andeq	sl, r2, r4, ror #27
   16810:	push	{r4, lr}
   16814:	ldr	r0, [r2]
   16818:	mov	r2, #10
   1681c:	mov	r1, #0
   16820:	bl	1148c <strtol@plt>
   16824:	cmp	r0, #0
   16828:	blt	16838 <sprintf@plt+0x5208>
   1682c:	ldr	r3, [pc, #28]	; 16850 <sprintf@plt+0x5220>
   16830:	str	r0, [r3, #4]
   16834:	pop	{r4, pc}
   16838:	mov	r2, r0
   1683c:	ldr	r1, [pc, #16]	; 16854 <sprintf@plt+0x5224>
   16840:	mov	r0, #67	; 0x43
   16844:	bl	121fc <sprintf@plt+0xbcc>
   16848:	mov	r0, #3
   1684c:	bl	11618 <exit@plt>
   16850:	andeq	sl, r2, r4, ror #27
   16854:	andeq	r9, r1, ip, asr #15
   16858:	push	{r4, r5, r6, lr}
   1685c:	mov	r4, r0
   16860:	mov	r6, r1
   16864:	ldr	r3, [pc, #160]	; 1690c <sprintf@plt+0x52dc>
   16868:	ldr	r2, [r3, #20]
   1686c:	ldr	r3, [r0, #464]	; 0x1d0
   16870:	add	r3, r3, r2, lsl #4
   16874:	ldr	r5, [r3, #8]
   16878:	mov	r2, #11
   1687c:	ldr	r1, [pc, #140]	; 16910 <sprintf@plt+0x52e0>
   16880:	add	r0, r0, #440	; 0x1b8
   16884:	bl	113cc <rb_strlcpy@plt>
   16888:	ldr	r0, [r5]
   1688c:	cmp	r0, #0
   16890:	beq	16898 <sprintf@plt+0x5268>
   16894:	bl	11480 <rb_close@plt>
   16898:	cmp	r5, #0
   1689c:	beq	168a8 <sprintf@plt+0x5278>
   168a0:	mov	r0, r5
   168a4:	bl	113f0 <free@plt>
   168a8:	ldr	r5, [pc, #92]	; 1690c <sprintf@plt+0x52dc>
   168ac:	ldr	r2, [r5, #20]
   168b0:	ldr	r3, [r4, #464]	; 0x1d0
   168b4:	add	r3, r3, r2, lsl #4
   168b8:	mov	r2, #0
   168bc:	str	r2, [r3, #8]
   168c0:	ldr	r1, [r5, #20]
   168c4:	ldr	r3, [r4, #464]	; 0x1d0
   168c8:	add	r3, r3, r1, lsl #4
   168cc:	str	r2, [r3, #4]
   168d0:	ldr	r3, [pc, #60]	; 16914 <sprintf@plt+0x52e4>
   168d4:	ldr	r1, [r3, r6, lsl #2]
   168d8:	ldr	r0, [r4]
   168dc:	bl	121a4 <sprintf@plt+0xb74>
   168e0:	ldr	r1, [r5, #20]
   168e4:	mov	r0, r4
   168e8:	bl	12b9c <sprintf@plt+0x156c>
   168ec:	ldr	r3, [r4, #460]	; 0x1cc
   168f0:	sub	r3, r3, #1
   168f4:	str	r3, [r4, #460]	; 0x1cc
   168f8:	cmp	r3, #0
   168fc:	popne	{r4, r5, r6, pc}
   16900:	mov	r0, r4
   16904:	bl	1271c <sprintf@plt+0x10ec>
   16908:	pop	{r4, r5, r6, pc}
   1690c:	andeq	sl, r2, r4, ror #27
   16910:	ldrdeq	r9, [r1], -r0
   16914:			; <UNDEFINED> instruction: 0x000197b8
   16918:	ldr	r3, [pc, #36]	; 16944 <sprintf@plt+0x5314>
   1691c:	ldr	r2, [r3, #20]
   16920:	ldr	r3, [r0, #464]	; 0x1d0
   16924:	add	r3, r3, r2, lsl #4
   16928:	ldr	r3, [r3, #8]
   1692c:	cmp	r3, #0
   16930:	bxeq	lr
   16934:	push	{r4, lr}
   16938:	mov	r1, #2
   1693c:	bl	16858 <sprintf@plt+0x5228>
   16940:	pop	{r4, pc}
   16944:	andeq	sl, r2, r4, ror #27
   16948:	push	{r4, r5, r6, r7, lr}
   1694c:	sub	sp, sp, #140	; 0x8c
   16950:	mov	r5, r0
   16954:	mov	r4, r1
   16958:	mov	r2, #129	; 0x81
   1695c:	mov	r1, #0
   16960:	add	r0, sp, #4
   16964:	bl	11390 <memset@plt>
   16968:	mov	r2, #128	; 0x80
   1696c:	add	r1, sp, #4
   16970:	mov	r0, r5
   16974:	bl	11408 <rb_read@plt>
   16978:	subs	r6, r0, #0
   1697c:	blt	16b70 <sprintf@plt+0x5540>
   16980:	cmp	r6, #0
   16984:	ble	16bb8 <sprintf@plt+0x5588>
   16988:	mov	r1, #58	; 0x3a
   1698c:	add	r0, sp, #4
   16990:	bl	1133c <strchr@plt>
   16994:	subs	r5, r0, #0
   16998:	beq	16bb0 <sprintf@plt+0x5580>
   1699c:	mov	r3, #0
   169a0:	strb	r3, [r5], #1
   169a4:	mov	r1, #58	; 0x3a
   169a8:	mov	r0, r5
   169ac:	bl	1133c <strchr@plt>
   169b0:	subs	r7, r0, #0
   169b4:	beq	16bb0 <sprintf@plt+0x5580>
   169b8:	mov	r3, #0
   169bc:	strb	r3, [r7]
   169c0:	mov	r1, #44	; 0x2c
   169c4:	add	r0, sp, #4
   169c8:	bl	1133c <strchr@plt>
   169cc:	subs	r6, r0, #0
   169d0:	beq	16bb0 <sprintf@plt+0x5580>
   169d4:	mov	r1, #0
   169d8:	strb	r1, [r6], #1
   169dc:	mov	r2, #10
   169e0:	add	r0, sp, #4
   169e4:	bl	1148c <strtol@plt>
   169e8:	cmp	r0, #0
   169ec:	beq	16bb0 <sprintf@plt+0x5580>
   169f0:	mov	r2, #10
   169f4:	mov	r1, #0
   169f8:	mov	r0, r6
   169fc:	bl	1148c <strtol@plt>
   16a00:	cmp	r0, #0
   16a04:	beq	16bb0 <sprintf@plt+0x5580>
   16a08:	ldr	r1, [pc, #448]	; 16bd0 <sprintf@plt+0x55a0>
   16a0c:	mov	r0, r5
   16a10:	bl	114d4 <strstr@plt>
   16a14:	cmp	r0, #0
   16a18:	beq	16bb0 <sprintf@plt+0x5580>
   16a1c:	mov	r1, #58	; 0x3a
   16a20:	add	r0, r7, #1
   16a24:	bl	1133c <strchr@plt>
   16a28:	cmp	r0, #0
   16a2c:	beq	16bb0 <sprintf@plt+0x5580>
   16a30:	mov	r2, r0
   16a34:	mov	r3, #0
   16a38:	strb	r3, [r2], #1
   16a3c:	cmp	r2, r3
   16a40:	beq	16bc8 <sprintf@plt+0x5598>
   16a44:	add	ip, r4, #440	; 0x1b8
   16a48:	ldrb	r3, [r0, #1]
   16a4c:	and	r3, r3, #223	; 0xdf
   16a50:	cmp	r3, #94	; 0x5e
   16a54:	bne	16a68 <sprintf@plt+0x5438>
   16a58:	ldrb	r3, [r2, #1]!
   16a5c:	and	r3, r3, #223	; 0xdf
   16a60:	cmp	r3, #94	; 0x5e
   16a64:	beq	16a58 <sprintf@plt+0x5428>
   16a68:	ldrb	r3, [r2]
   16a6c:	tst	r3, #191	; 0xbf
   16a70:	beq	16ad0 <sprintf@plt+0x54a0>
   16a74:	cmp	r3, #10
   16a78:	cmpne	r3, #13
   16a7c:	beq	16ad0 <sprintf@plt+0x54a0>
   16a80:	mov	r0, #10
   16a84:	cmp	r3, #32
   16a88:	cmpne	r3, #58	; 0x3a
   16a8c:	movne	r1, #1
   16a90:	moveq	r1, #0
   16a94:	cmp	r3, #91	; 0x5b
   16a98:	moveq	r1, #0
   16a9c:	andne	r1, r1, #1
   16aa0:	cmp	r1, #0
   16aa4:	strbne	r3, [ip]
   16aa8:	subne	r0, r0, #1
   16aac:	addne	ip, ip, #1
   16ab0:	ldrb	r3, [r2, #1]!
   16ab4:	and	r1, r3, #191	; 0xbf
   16ab8:	cmp	r0, #0
   16abc:	cmpne	r1, #0
   16ac0:	beq	16ad0 <sprintf@plt+0x54a0>
   16ac4:	cmp	r3, #10
   16ac8:	cmpne	r3, #13
   16acc:	bne	16a84 <sprintf@plt+0x5454>
   16ad0:	mov	r3, #0
   16ad4:	strb	r3, [ip]
   16ad8:	cmp	r2, r3
   16adc:	beq	16b9c <sprintf@plt+0x556c>
   16ae0:	ldr	r3, [pc, #236]	; 16bd4 <sprintf@plt+0x55a4>
   16ae4:	ldr	r2, [r3, #20]
   16ae8:	ldr	r3, [r4, #464]	; 0x1d0
   16aec:	add	r3, r3, r2, lsl #4
   16af0:	ldr	r5, [r3, #8]
   16af4:	ldr	r0, [r5]
   16af8:	cmp	r0, #0
   16afc:	beq	16b04 <sprintf@plt+0x54d4>
   16b00:	bl	11480 <rb_close@plt>
   16b04:	cmp	r5, #0
   16b08:	beq	16b14 <sprintf@plt+0x54e4>
   16b0c:	mov	r0, r5
   16b10:	bl	113f0 <free@plt>
   16b14:	ldr	r5, [pc, #184]	; 16bd4 <sprintf@plt+0x55a4>
   16b18:	ldr	r2, [r5, #20]
   16b1c:	ldr	r3, [r4, #464]	; 0x1d0
   16b20:	add	r3, r3, r2, lsl #4
   16b24:	mov	r2, #0
   16b28:	str	r2, [r3, #8]
   16b2c:	ldr	r1, [r5, #20]
   16b30:	ldr	r3, [r4, #464]	; 0x1d0
   16b34:	add	r3, r3, r1, lsl #4
   16b38:	str	r2, [r3, #4]
   16b3c:	ldr	r1, [pc, #148]	; 16bd8 <sprintf@plt+0x55a8>
   16b40:	ldr	r0, [r4]
   16b44:	bl	121a4 <sprintf@plt+0xb74>
   16b48:	ldr	r1, [r5, #20]
   16b4c:	mov	r0, r4
   16b50:	bl	12b9c <sprintf@plt+0x156c>
   16b54:	ldr	r3, [r4, #460]	; 0x1cc
   16b58:	sub	r3, r3, #1
   16b5c:	str	r3, [r4, #460]	; 0x1cc
   16b60:	cmp	r3, #0
   16b64:	beq	16ba4 <sprintf@plt+0x5574>
   16b68:	add	sp, sp, #140	; 0x8c
   16b6c:	pop	{r4, r5, r6, r7, pc}
   16b70:	bl	11624 <__errno_location@plt>
   16b74:	ldr	r0, [r0]
   16b78:	bl	11294 <rb_ignore_errno@plt>
   16b7c:	cmp	r0, #0
   16b80:	beq	16980 <sprintf@plt+0x5350>
   16b84:	mov	r3, r4
   16b88:	ldr	r2, [pc, #76]	; 16bdc <sprintf@plt+0x55ac>
   16b8c:	mov	r1, #1
   16b90:	mov	r0, r5
   16b94:	bl	112dc <rb_setselect@plt>
   16b98:	b	16b68 <sprintf@plt+0x5538>
   16b9c:	mov	r1, #2
   16ba0:	b	16bbc <sprintf@plt+0x558c>
   16ba4:	mov	r0, r4
   16ba8:	bl	1271c <sprintf@plt+0x10ec>
   16bac:	b	16b68 <sprintf@plt+0x5538>
   16bb0:	mov	r1, #3
   16bb4:	b	16bbc <sprintf@plt+0x558c>
   16bb8:	mov	r1, #2
   16bbc:	mov	r0, r4
   16bc0:	bl	16858 <sprintf@plt+0x5228>
   16bc4:	b	16b68 <sprintf@plt+0x5538>
   16bc8:	mov	r1, #3
   16bcc:	b	16bbc <sprintf@plt+0x558c>
   16bd0:	strdeq	r9, [r1], -r4
   16bd4:	andeq	sl, r2, r4, ror #27
   16bd8:	strdeq	r9, [r1], -ip
   16bdc:	andeq	r6, r1, r8, asr #18
   16be0:	push	{r4, r5, r6, lr}
   16be4:	sub	sp, sp, #40	; 0x28
   16be8:	mov	r4, r2
   16bec:	cmp	r1, #0
   16bf0:	beq	16c08 <sprintf@plt+0x55d8>
   16bf4:	mov	r1, #2
   16bf8:	mov	r0, r2
   16bfc:	bl	16858 <sprintf@plt+0x5228>
   16c00:	add	sp, sp, #40	; 0x28
   16c04:	pop	{r4, r5, r6, pc}
   16c08:	ldr	r3, [pc, #108]	; 16c7c <sprintf@plt+0x564c>
   16c0c:	ldr	r2, [r3, #20]
   16c10:	ldr	r3, [r4, #464]	; 0x1d0
   16c14:	add	r3, r3, r2, lsl #4
   16c18:	ldr	r6, [r3, #8]
   16c1c:	ldrh	r3, [r4, #246]	; 0xf6
   16c20:	ldrh	r2, [r4, #62]	; 0x3e
   16c24:	str	r2, [sp]
   16c28:	ldr	r2, [pc, #80]	; 16c80 <sprintf@plt+0x5650>
   16c2c:	mov	r1, #32
   16c30:	add	r0, sp, #8
   16c34:	bl	115c4 <snprintf@plt>
   16c38:	add	r0, sp, #8
   16c3c:	bl	11444 <strlen@plt>
   16c40:	mov	r5, r0
   16c44:	mov	r2, r0
   16c48:	add	r1, sp, #8
   16c4c:	ldr	r0, [r6]
   16c50:	bl	113b4 <rb_write@plt>
   16c54:	cmp	r5, r0
   16c58:	beq	16c6c <sprintf@plt+0x563c>
   16c5c:	mov	r1, #2
   16c60:	mov	r0, r4
   16c64:	bl	16858 <sprintf@plt+0x5228>
   16c68:	b	16c00 <sprintf@plt+0x55d0>
   16c6c:	mov	r1, r4
   16c70:	ldr	r0, [r6]
   16c74:	bl	16948 <sprintf@plt+0x5318>
   16c78:	b	16c00 <sprintf@plt+0x55d0>
   16c7c:	andeq	sl, r2, r4, ror #27
   16c80:	andeq	r9, r1, r4, lsl r8
   16c84:	push	{r4, r5, r6, r7, r8, lr}
   16c88:	sub	sp, sp, #264	; 0x108
   16c8c:	mov	r4, r0
   16c90:	mov	r1, #4
   16c94:	mov	r0, #1
   16c98:	bl	11360 <calloc@plt>
   16c9c:	subs	r5, r0, #0
   16ca0:	beq	16ce4 <sprintf@plt+0x56b4>
   16ca4:	ldr	r3, [pc, #308]	; 16de0 <sprintf@plt+0x57b0>
   16ca8:	ldrb	r3, [r3]
   16cac:	cmp	r3, #0
   16cb0:	bne	16ce8 <sprintf@plt+0x56b8>
   16cb4:	mov	r0, r5
   16cb8:	bl	113f0 <free@plt>
   16cbc:	ldr	r1, [pc, #288]	; 16de4 <sprintf@plt+0x57b4>
   16cc0:	ldr	r0, [r4]
   16cc4:	bl	121a4 <sprintf@plt+0xb74>
   16cc8:	ldr	r3, [pc, #272]	; 16de0 <sprintf@plt+0x57b0>
   16ccc:	ldr	r1, [r3, #20]
   16cd0:	mov	r0, r4
   16cd4:	bl	12b9c <sprintf@plt+0x156c>
   16cd8:	mov	r0, #1
   16cdc:	add	sp, sp, #264	; 0x108
   16ce0:	pop	{r4, r5, r6, r7, r8, pc}
   16ce4:	bl	11504 <rb_outofmemory@plt>
   16ce8:	ldrh	r8, [r4, #248]	; 0xf8
   16cec:	ldr	r3, [r4, #460]	; 0x1cc
   16cf0:	add	r3, r3, #1
   16cf4:	str	r3, [r4, #460]	; 0x1cc
   16cf8:	ldr	r1, [pc, #232]	; 16de8 <sprintf@plt+0x57b8>
   16cfc:	ldr	r0, [r4]
   16d00:	bl	121a4 <sprintf@plt+0xb74>
   16d04:	ldr	r3, [pc, #212]	; 16de0 <sprintf@plt+0x57b0>
   16d08:	ldr	r1, [r3, #20]
   16d0c:	ldr	r2, [r4, #464]	; 0x1d0
   16d10:	add	r2, r2, r1, lsl #4
   16d14:	str	r5, [r2, #8]
   16d18:	ldr	r7, [r3, #4]
   16d1c:	ldr	r3, [r3, #20]
   16d20:	ldr	r6, [r4, #464]	; 0x1d0
   16d24:	add	r6, r6, r3, lsl #4
   16d28:	bl	11450 <rb_current_time@plt>
   16d2c:	add	r0, r7, r0
   16d30:	str	r0, [r6, #4]
   16d34:	ldr	r3, [pc, #176]	; 16dec <sprintf@plt+0x57bc>
   16d38:	ldr	r2, [r4, #4]
   16d3c:	mov	r1, #1
   16d40:	mov	r0, r8
   16d44:	bl	1130c <rb_socket@plt>
   16d48:	mov	r6, r0
   16d4c:	str	r0, [r5]
   16d50:	cmp	r0, #0
   16d54:	beq	16db4 <sprintf@plt+0x5784>
   16d58:	mov	r5, #128	; 0x80
   16d5c:	mov	r2, r5
   16d60:	add	r1, r4, #64	; 0x40
   16d64:	add	r0, sp, #136	; 0x88
   16d68:	bl	11468 <memcpy@plt>
   16d6c:	mov	r2, r5
   16d70:	add	r1, r4, #248	; 0xf8
   16d74:	add	r0, sp, #8
   16d78:	bl	11468 <memcpy@plt>
   16d7c:	mov	r3, #0
   16d80:	strh	r3, [sp, #138]	; 0x8a
   16d84:	mov	r3, #28928	; 0x7100
   16d88:	strh	r3, [sp, #10]
   16d8c:	ldr	r3, [pc, #76]	; 16de0 <sprintf@plt+0x57b0>
   16d90:	ldr	r3, [r3, #4]
   16d94:	str	r3, [sp, #4]
   16d98:	str	r4, [sp]
   16d9c:	ldr	r3, [pc, #76]	; 16df0 <sprintf@plt+0x57c0>
   16da0:	add	r2, sp, #136	; 0x88
   16da4:	add	r1, sp, #8
   16da8:	mov	r0, r6
   16dac:	bl	112ac <rb_connect_tcp@plt>
   16db0:	b	16cd8 <sprintf@plt+0x56a8>
   16db4:	bl	11624 <__errno_location@plt>
   16db8:	ldr	r0, [r0]
   16dbc:	bl	11258 <strerror@plt>
   16dc0:	mov	r2, r0
   16dc4:	ldr	r1, [pc, #40]	; 16df4 <sprintf@plt+0x57c4>
   16dc8:	mov	r0, #68	; 0x44
   16dcc:	bl	121fc <sprintf@plt+0xbcc>
   16dd0:	mov	r1, #2
   16dd4:	mov	r0, r4
   16dd8:	bl	16858 <sprintf@plt+0x5228>
   16ddc:	b	16cd8 <sprintf@plt+0x56a8>
   16de0:	andeq	sl, r2, r4, ror #27
   16de4:	andeq	r9, r1, r0, lsr #16
   16de8:	andeq	r9, r1, r8, asr #16
   16dec:	andeq	r9, r1, r4, asr #14
   16df0:	andeq	r6, r1, r0, ror #23
   16df4:	andeq	r9, r1, ip, asr r8
   16df8:	push	{r4, r5, r6, lr}
   16dfc:	sub	sp, sp, #8
   16e00:	mov	r1, sp
   16e04:	ldr	r3, [pc, #96]	; 16e6c <sprintf@plt+0x583c>
   16e08:	ldr	r0, [r3]
   16e0c:	bl	1142c <rb_dictionary_foreach_start@plt>
   16e10:	ldr	r4, [pc, #84]	; 16e6c <sprintf@plt+0x583c>
   16e14:	ldr	r5, [pc, #84]	; 16e70 <sprintf@plt+0x5840>
   16e18:	mov	r6, #2
   16e1c:	b	16e2c <sprintf@plt+0x57fc>
   16e20:	mov	r1, sp
   16e24:	ldr	r0, [r4]
   16e28:	bl	113e4 <rb_dictionary_foreach_next@plt>
   16e2c:	mov	r1, sp
   16e30:	ldr	r0, [r4]
   16e34:	bl	11348 <rb_dictionary_foreach_cur@plt>
   16e38:	cmp	r0, #0
   16e3c:	beq	16e64 <sprintf@plt+0x5834>
   16e40:	ldr	r3, [r0, #464]	; 0x1d0
   16e44:	ldr	r2, [r5, #20]
   16e48:	add	r3, r3, r2, lsl #4
   16e4c:	ldr	r3, [r3, #8]
   16e50:	cmp	r3, #0
   16e54:	beq	16e20 <sprintf@plt+0x57f0>
   16e58:	mov	r1, r6
   16e5c:	bl	16858 <sprintf@plt+0x5228>
   16e60:	b	16e20 <sprintf@plt+0x57f0>
   16e64:	add	sp, sp, #8
   16e68:	pop	{r4, r5, r6, pc}
   16e6c:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   16e70:	andeq	sl, r2, r4, ror #27
   16e74:	push	{r4, lr}
   16e78:	ldr	r0, [r2]
   16e7c:	mov	r2, #10
   16e80:	mov	r1, #0
   16e84:	bl	1148c <strtol@plt>
   16e88:	cmp	r0, #0
   16e8c:	blt	16e9c <sprintf@plt+0x586c>
   16e90:	ldr	r3, [pc, #28]	; 16eb4 <sprintf@plt+0x5884>
   16e94:	str	r0, [r3]
   16e98:	pop	{r4, pc}
   16e9c:	mov	r2, r0
   16ea0:	ldr	r1, [pc, #16]	; 16eb8 <sprintf@plt+0x5888>
   16ea4:	mov	r0, #67	; 0x43
   16ea8:	bl	121fc <sprintf@plt+0xbcc>
   16eac:	mov	r0, #3
   16eb0:	bl	11618 <exit@plt>
   16eb4:	andeq	sl, r2, ip, asr #28
   16eb8:	strdeq	r9, [r1], -r8
   16ebc:	push	{r4, r5, r6, lr}
   16ec0:	mov	r4, r0
   16ec4:	mov	r6, r1
   16ec8:	ldr	r3, [pc, #152]	; 16f68 <sprintf@plt+0x5938>
   16ecc:	ldr	r2, [r3, #16]
   16ed0:	ldr	r3, [r0, #464]	; 0x1d0
   16ed4:	add	r3, r3, r2, lsl #4
   16ed8:	ldr	r5, [r3, #8]
   16edc:	mov	r2, #64	; 0x40
   16ee0:	ldr	r1, [pc, #132]	; 16f6c <sprintf@plt+0x593c>
   16ee4:	add	r0, r0, #376	; 0x178
   16ee8:	bl	113cc <rb_strlcpy@plt>
   16eec:	ldr	r3, [pc, #124]	; 16f70 <sprintf@plt+0x5940>
   16ef0:	ldr	r1, [r3, r6, lsl #2]
   16ef4:	ldr	r0, [r4]
   16ef8:	bl	121a4 <sprintf@plt+0xb74>
   16efc:	ldr	r0, [r5]
   16f00:	bl	11f04 <sprintf@plt+0x8d4>
   16f04:	cmp	r5, #0
   16f08:	beq	16f14 <sprintf@plt+0x58e4>
   16f0c:	mov	r0, r5
   16f10:	bl	113f0 <free@plt>
   16f14:	ldr	r3, [pc, #76]	; 16f68 <sprintf@plt+0x5938>
   16f18:	ldr	r1, [r3, #16]
   16f1c:	ldr	r2, [r4, #464]	; 0x1d0
   16f20:	add	r2, r2, r1, lsl #4
   16f24:	mov	r1, #0
   16f28:	str	r1, [r2, #8]
   16f2c:	ldr	r0, [r3, #16]
   16f30:	ldr	r2, [r4, #464]	; 0x1d0
   16f34:	add	r2, r2, r0, lsl #4
   16f38:	str	r1, [r2, #4]
   16f3c:	ldr	r1, [r3, #16]
   16f40:	mov	r0, r4
   16f44:	bl	12b9c <sprintf@plt+0x156c>
   16f48:	ldr	r3, [r4, #460]	; 0x1cc
   16f4c:	sub	r3, r3, #1
   16f50:	str	r3, [r4, #460]	; 0x1cc
   16f54:	cmp	r3, #0
   16f58:	popne	{r4, r5, r6, pc}
   16f5c:	mov	r0, r4
   16f60:	bl	1271c <sprintf@plt+0x10ec>
   16f64:	pop	{r4, r5, r6, pc}
   16f68:	andeq	sl, r2, ip, asr #28
   16f6c:	ldrdeq	r9, [r1], -r0
   16f70:	andeq	r9, r1, ip, ror #17
   16f74:	ldr	r3, [pc, #36]	; 16fa0 <sprintf@plt+0x5970>
   16f78:	ldr	r2, [r3, #16]
   16f7c:	ldr	r3, [r0, #464]	; 0x1d0
   16f80:	add	r3, r3, r2, lsl #4
   16f84:	ldr	r3, [r3, #8]
   16f88:	cmp	r3, #0
   16f8c:	bxeq	lr
   16f90:	push	{r4, lr}
   16f94:	mov	r1, #1
   16f98:	bl	16ebc <sprintf@plt+0x588c>
   16f9c:	pop	{r4, pc}
   16fa0:	andeq	sl, r2, ip, asr #28
   16fa4:	push	{r4, r5, r6, lr}
   16fa8:	mov	r4, r3
   16fac:	eor	r1, r1, #1
   16fb0:	cmp	r0, #0
   16fb4:	orreq	r1, r1, #1
   16fb8:	cmp	r1, #0
   16fbc:	bne	17074 <sprintf@plt+0x5a44>
   16fc0:	mov	r6, r0
   16fc4:	bl	11444 <strlen@plt>
   16fc8:	cmp	r0, #63	; 0x3f
   16fcc:	bhi	17084 <sprintf@plt+0x5a54>
   16fd0:	add	r5, r4, #376	; 0x178
   16fd4:	mov	r2, #64	; 0x40
   16fd8:	mov	r1, r6
   16fdc:	mov	r0, r5
   16fe0:	bl	113cc <rb_strlcpy@plt>
   16fe4:	ldr	r3, [pc, #168]	; 17094 <sprintf@plt+0x5a64>
   16fe8:	ldr	r2, [r3, #16]
   16fec:	ldr	r3, [r4, #464]	; 0x1d0
   16ff0:	add	r3, r3, r2, lsl #4
   16ff4:	ldr	r6, [r3, #8]
   16ff8:	mov	r2, r5
   16ffc:	ldr	r1, [pc, #148]	; 17098 <sprintf@plt+0x5a68>
   17000:	ldr	r0, [r4]
   17004:	bl	121a4 <sprintf@plt+0xb74>
   17008:	ldr	r0, [r6]
   1700c:	bl	11f04 <sprintf@plt+0x8d4>
   17010:	cmp	r6, #0
   17014:	beq	17020 <sprintf@plt+0x59f0>
   17018:	mov	r0, r6
   1701c:	bl	113f0 <free@plt>
   17020:	ldr	r3, [pc, #108]	; 17094 <sprintf@plt+0x5a64>
   17024:	ldr	r1, [r3, #16]
   17028:	ldr	r2, [r4, #464]	; 0x1d0
   1702c:	add	r2, r2, r1, lsl #4
   17030:	mov	r1, #0
   17034:	str	r1, [r2, #8]
   17038:	ldr	r0, [r3, #16]
   1703c:	ldr	r2, [r4, #464]	; 0x1d0
   17040:	add	r2, r2, r0, lsl #4
   17044:	str	r1, [r2, #4]
   17048:	ldr	r1, [r3, #16]
   1704c:	mov	r0, r4
   17050:	bl	12b9c <sprintf@plt+0x156c>
   17054:	ldr	r3, [r4, #460]	; 0x1cc
   17058:	sub	r3, r3, #1
   1705c:	str	r3, [r4, #460]	; 0x1cc
   17060:	cmp	r3, #0
   17064:	popne	{r4, r5, r6, pc}
   17068:	mov	r0, r4
   1706c:	bl	1271c <sprintf@plt+0x10ec>
   17070:	pop	{r4, r5, r6, pc}
   17074:	mov	r1, #1
   17078:	mov	r0, r3
   1707c:	bl	16ebc <sprintf@plt+0x588c>
   17080:	pop	{r4, r5, r6, pc}
   17084:	mov	r1, #2
   17088:	mov	r0, r4
   1708c:	bl	16ebc <sprintf@plt+0x588c>
   17090:	pop	{r4, r5, r6, pc}
   17094:	andeq	sl, r2, ip, asr #28
   17098:	andeq	r9, r1, ip, lsl r9
   1709c:	push	{r4, r5, r6, r7, r8, lr}
   170a0:	mov	r4, r0
   170a4:	mov	r1, #4
   170a8:	mov	r0, #1
   170ac:	bl	11360 <calloc@plt>
   170b0:	subs	r7, r0, #0
   170b4:	beq	1711c <sprintf@plt+0x5aec>
   170b8:	ldr	r3, [r4, #460]	; 0x1cc
   170bc:	add	r3, r3, #1
   170c0:	str	r3, [r4, #460]	; 0x1cc
   170c4:	ldr	r3, [pc, #84]	; 17120 <sprintf@plt+0x5af0>
   170c8:	ldr	r1, [r3, #16]
   170cc:	ldr	r2, [r4, #464]	; 0x1d0
   170d0:	add	r2, r2, r1, lsl #4
   170d4:	str	r7, [r2, #8]
   170d8:	ldr	r6, [r3]
   170dc:	ldr	r3, [r3, #16]
   170e0:	ldr	r5, [r4, #464]	; 0x1d0
   170e4:	add	r5, r5, r3, lsl #4
   170e8:	bl	11450 <rb_current_time@plt>
   170ec:	add	r0, r6, r0
   170f0:	str	r0, [r5, #4]
   170f4:	mov	r2, r4
   170f8:	ldr	r1, [pc, #36]	; 17124 <sprintf@plt+0x5af4>
   170fc:	add	r0, r4, #192	; 0xc0
   17100:	bl	11e38 <sprintf@plt+0x808>
   17104:	str	r0, [r7]
   17108:	ldr	r1, [pc, #24]	; 17128 <sprintf@plt+0x5af8>
   1710c:	ldr	r0, [r4]
   17110:	bl	121a4 <sprintf@plt+0xb74>
   17114:	mov	r0, #1
   17118:	pop	{r4, r5, r6, r7, r8, pc}
   1711c:	bl	11504 <rb_outofmemory@plt>
   17120:	andeq	sl, r2, ip, asr #28
   17124:	andeq	r6, r1, r4, lsr #31
   17128:	andeq	r9, r1, r8, lsr r9
   1712c:	push	{r4, r5, r6, lr}
   17130:	sub	sp, sp, #8
   17134:	mov	r1, sp
   17138:	ldr	r3, [pc, #96]	; 171a0 <sprintf@plt+0x5b70>
   1713c:	ldr	r0, [r3]
   17140:	bl	1142c <rb_dictionary_foreach_start@plt>
   17144:	ldr	r4, [pc, #84]	; 171a0 <sprintf@plt+0x5b70>
   17148:	ldr	r5, [pc, #84]	; 171a4 <sprintf@plt+0x5b74>
   1714c:	mov	r6, #1
   17150:	b	17160 <sprintf@plt+0x5b30>
   17154:	mov	r1, sp
   17158:	ldr	r0, [r4]
   1715c:	bl	113e4 <rb_dictionary_foreach_next@plt>
   17160:	mov	r1, sp
   17164:	ldr	r0, [r4]
   17168:	bl	11348 <rb_dictionary_foreach_cur@plt>
   1716c:	cmp	r0, #0
   17170:	beq	17198 <sprintf@plt+0x5b68>
   17174:	ldr	r3, [r0, #464]	; 0x1d0
   17178:	ldr	r2, [r5, #16]
   1717c:	add	r3, r3, r2, lsl #4
   17180:	ldr	r3, [r3, #8]
   17184:	cmp	r3, #0
   17188:	beq	17154 <sprintf@plt+0x5b24>
   1718c:	mov	r1, r6
   17190:	bl	16ebc <sprintf@plt+0x588c>
   17194:	b	17154 <sprintf@plt+0x5b24>
   17198:	add	sp, sp, #8
   1719c:	pop	{r4, r5, r6, pc}
   171a0:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   171a4:	andeq	sl, r2, ip, asr #28
   171a8:	push	{r4, r5, r6, r7, r8, lr}
   171ac:	ldr	r3, [pc, #188]	; 17270 <sprintf@plt+0x5c40>
   171b0:	ldr	r2, [r3, #12]
   171b4:	ldr	r3, [r0, #464]	; 0x1d0
   171b8:	add	r3, r3, r2, lsl #4
   171bc:	ldr	r7, [r3, #8]
   171c0:	cmp	r7, #0
   171c4:	popeq	{r4, r5, r6, r7, r8, pc}
   171c8:	mov	r6, r0
   171cc:	ldr	r1, [pc, #160]	; 17274 <sprintf@plt+0x5c44>
   171d0:	ldr	r0, [r0]
   171d4:	bl	121a4 <sprintf@plt+0xb74>
   171d8:	ldr	r3, [r7]
   171dc:	cmp	r3, #0
   171e0:	beq	17214 <sprintf@plt+0x5be4>
   171e4:	ldr	r5, [r3, #8]
   171e8:	ldr	r4, [r3]
   171ec:	ldr	r0, [r4, #4]
   171f0:	bl	11480 <rb_close@plt>
   171f4:	cmp	r4, #0
   171f8:	beq	17204 <sprintf@plt+0x5bd4>
   171fc:	mov	r0, r4
   17200:	bl	113f0 <free@plt>
   17204:	cmp	r5, #0
   17208:	movne	r3, r5
   1720c:	ldrne	r5, [r5, #8]
   17210:	bne	171e8 <sprintf@plt+0x5bb8>
   17214:	mov	r0, r7
   17218:	bl	113f0 <free@plt>
   1721c:	ldr	r3, [pc, #76]	; 17270 <sprintf@plt+0x5c40>
   17220:	ldr	r1, [r3, #12]
   17224:	ldr	r2, [r6, #464]	; 0x1d0
   17228:	add	r2, r2, r1, lsl #4
   1722c:	mov	r1, #0
   17230:	str	r1, [r2, #8]
   17234:	ldr	r0, [r3, #12]
   17238:	ldr	r2, [r6, #464]	; 0x1d0
   1723c:	add	r2, r2, r0, lsl #4
   17240:	str	r1, [r2, #4]
   17244:	ldr	r1, [r3, #12]
   17248:	mov	r0, r6
   1724c:	bl	12b9c <sprintf@plt+0x156c>
   17250:	ldr	r3, [r6, #460]	; 0x1cc
   17254:	sub	r3, r3, #1
   17258:	str	r3, [r6, #460]	; 0x1cc
   1725c:	cmp	r3, #0
   17260:	popne	{r4, r5, r6, r7, r8, pc}
   17264:	mov	r0, r6
   17268:	bl	1271c <sprintf@plt+0x10ec>
   1726c:	pop	{r4, r5, r6, r7, r8, pc}
   17270:	andeq	sl, r2, r4, lsr #29
   17274:	andeq	r9, r1, r4, ror #19
   17278:	push	{r4, lr}
   1727c:	sub	sp, sp, #8
   17280:	mov	r1, sp
   17284:	ldr	r3, [pc, #56]	; 172c4 <sprintf@plt+0x5c94>
   17288:	ldr	r0, [r3]
   1728c:	bl	1142c <rb_dictionary_foreach_start@plt>
   17290:	ldr	r4, [pc, #44]	; 172c4 <sprintf@plt+0x5c94>
   17294:	b	172a8 <sprintf@plt+0x5c78>
   17298:	bl	171a8 <sprintf@plt+0x5b78>
   1729c:	mov	r1, sp
   172a0:	ldr	r0, [r4]
   172a4:	bl	113e4 <rb_dictionary_foreach_next@plt>
   172a8:	mov	r1, sp
   172ac:	ldr	r0, [r4]
   172b0:	bl	11348 <rb_dictionary_foreach_cur@plt>
   172b4:	cmp	r0, #0
   172b8:	bne	17298 <sprintf@plt+0x5c68>
   172bc:	add	sp, sp, #8
   172c0:	pop	{r4, pc}
   172c4:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   172c8:	push	{r4, lr}
   172cc:	ldr	r0, [r2]
   172d0:	mov	r2, #10
   172d4:	mov	r1, #0
   172d8:	bl	1148c <strtol@plt>
   172dc:	subs	r2, r0, #0
   172e0:	blt	172f0 <sprintf@plt+0x5cc0>
   172e4:	ldr	r3, [pc, #20]	; 17300 <sprintf@plt+0x5cd0>
   172e8:	str	r2, [r3, #60]	; 0x3c
   172ec:	pop	{r4, pc}
   172f0:	ldr	r1, [pc, #12]	; 17304 <sprintf@plt+0x5cd4>
   172f4:	mov	r0, #67	; 0x43
   172f8:	bl	121fc <sprintf@plt+0xbcc>
   172fc:	pop	{r4, pc}
   17300:	andeq	sl, r2, r4, lsr #29
   17304:	andeq	r9, r1, r4, lsl #20
   17308:	push	{r4, r5, lr}
   1730c:	sub	sp, sp, #140	; 0x8c
   17310:	mov	r4, r0
   17314:	ldr	r3, [r0, #12]
   17318:	ldrh	r2, [r3, #54]	; 0x36
   1731c:	str	r2, [sp]
   17320:	ldr	r2, [pc, #100]	; 1738c <sprintf@plt+0x5d5c>
   17324:	mov	r1, #128	; 0x80
   17328:	add	r0, sp, #8
   1732c:	bl	115c4 <snprintf@plt>
   17330:	add	r0, sp, #8
   17334:	bl	11444 <strlen@plt>
   17338:	mov	r2, r0
   1733c:	add	r1, sp, #8
   17340:	ldr	r0, [r4, #4]
   17344:	bl	113b4 <rb_write@plt>
   17348:	cmp	r0, #0
   1734c:	ble	17384 <sprintf@plt+0x5d54>
   17350:	ldr	r5, [r4, #8]
   17354:	mov	r0, r5
   17358:	bl	11444 <strlen@plt>
   1735c:	add	r2, r0, #1
   17360:	mov	r1, r5
   17364:	ldr	r0, [r4, #4]
   17368:	bl	113b4 <rb_write@plt>
   1736c:	cmp	r0, #0
   17370:	ble	17384 <sprintf@plt+0x5d54>
   17374:	mov	r2, #2
   17378:	ldr	r1, [pc, #16]	; 17390 <sprintf@plt+0x5d60>
   1737c:	ldr	r0, [r4, #4]
   17380:	bl	113b4 <rb_write@plt>
   17384:	add	sp, sp, #140	; 0x8c
   17388:	pop	{r4, r5, pc}
   1738c:	andeq	r9, r1, r8, lsr #20
   17390:	muleq	r1, r8, r4
   17394:	push	{r4, r5, lr}
   17398:	sub	sp, sp, #36	; 0x24
   1739c:	mov	r4, r0
   173a0:	ldr	ip, [r0]
   173a4:	ldr	r2, [pc, #184]	; 17464 <sprintf@plt+0x5e34>
   173a8:	ldm	r2, {r0, r1}
   173ac:	str	r0, [sp, #4]
   173b0:	strh	r1, [sp, #8]
   173b4:	ldrh	r2, [ip, #248]	; 0xf8
   173b8:	cmp	r2, #2
   173bc:	beq	17408 <sprintf@plt+0x5dd8>
   173c0:	cmp	r2, #10
   173c4:	bne	1745c <sprintf@plt+0x5e2c>
   173c8:	mov	r2, #4
   173cc:	strb	r2, [sp, #10]
   173d0:	ldr	r1, [r4, #12]
   173d4:	mov	r2, r1
   173d8:	ldr	lr, [r2, #64]!	; 0x40
   173dc:	ldr	ip, [r2, #4]
   173e0:	ldr	r0, [r2, #8]
   173e4:	ldr	r2, [r2, #12]
   173e8:	str	lr, [sp, #11]
   173ec:	str	ip, [sp, #15]
   173f0:	str	r0, [sp, #19]
   173f4:	str	r2, [sp, #23]
   173f8:	ldrh	r2, [r1, #58]	; 0x3a
   173fc:	strh	r2, [sp, #27]
   17400:	add	r2, sp, #29
   17404:	b	17428 <sprintf@plt+0x5df8>
   17408:	mov	r2, #1
   1740c:	strb	r2, [sp, #10]
   17410:	ldr	r2, [r4, #12]
   17414:	ldr	r1, [r2, #60]	; 0x3c
   17418:	str	r1, [sp, #11]
   1741c:	ldrh	r2, [r2, #58]	; 0x3a
   17420:	strh	r2, [sp, #15]
   17424:	add	r2, sp, #17
   17428:	add	r1, sp, #4
   1742c:	sub	r2, r1, r2
   17430:	ldr	r0, [r4, #4]
   17434:	bl	113b4 <rb_write@plt>
   17438:	cmp	r0, #0
   1743c:	ble	1745c <sprintf@plt+0x5e2c>
   17440:	ldr	r5, [r4, #8]
   17444:	mov	r0, r5
   17448:	bl	11444 <strlen@plt>
   1744c:	add	r2, r0, #1
   17450:	mov	r1, r5
   17454:	ldr	r0, [r4, #4]
   17458:	bl	113b4 <rb_write@plt>
   1745c:	add	sp, sp, #36	; 0x24
   17460:	pop	{r4, r5, pc}
   17464:	andeq	r9, r1, r0, asr #19
   17468:	push	{r4, r5, lr}
   1746c:	sub	sp, sp, #20
   17470:	mov	r4, r0
   17474:	mov	r3, #260	; 0x104
   17478:	strh	r3, [sp, #4]
   1747c:	ldr	r3, [r0, #12]
   17480:	ldrh	r2, [r3, #58]	; 0x3a
   17484:	strh	r2, [sp, #6]
   17488:	ldr	r3, [r3, #60]	; 0x3c
   1748c:	str	r3, [sp, #8]
   17490:	mov	r3, #0
   17494:	strb	r3, [sp, #12]
   17498:	mov	r2, #9
   1749c:	add	r1, sp, #4
   174a0:	ldr	r0, [r0, #4]
   174a4:	bl	113b4 <rb_write@plt>
   174a8:	cmp	r0, #0
   174ac:	blt	174cc <sprintf@plt+0x5e9c>
   174b0:	ldr	r5, [r4, #8]
   174b4:	mov	r0, r5
   174b8:	bl	11444 <strlen@plt>
   174bc:	add	r2, r0, #1
   174c0:	mov	r1, r5
   174c4:	ldr	r0, [r4, #4]
   174c8:	bl	113b4 <rb_write@plt>
   174cc:	add	sp, sp, #20
   174d0:	pop	{r4, r5, pc}
   174d4:	push	{r4, lr}
   174d8:	ldr	r3, [pc, #52]	; 17514 <sprintf@plt+0x5ee4>
   174dc:	ldr	r0, [r3, #184]	; 0xb8
   174e0:	cmp	r0, #0
   174e4:	beq	174ec <sprintf@plt+0x5ebc>
   174e8:	bl	11480 <rb_close@plt>
   174ec:	ldr	r3, [pc, #32]	; 17514 <sprintf@plt+0x5ee4>
   174f0:	ldr	r0, [r3, #372]	; 0x174
   174f4:	cmp	r0, #0
   174f8:	beq	17500 <sprintf@plt+0x5ed0>
   174fc:	bl	11480 <rb_close@plt>
   17500:	mov	r2, #376	; 0x178
   17504:	mov	r1, #0
   17508:	ldr	r0, [pc, #4]	; 17514 <sprintf@plt+0x5ee4>
   1750c:	bl	11390 <memset@plt>
   17510:	pop	{r4, pc}
   17514:	andeq	lr, r2, ip, ror #31
   17518:	push	{r4, r5, lr}
   1751c:	sub	sp, sp, #148	; 0x94
   17520:	mov	r5, r0
   17524:	mov	r3, #128	; 0x80
   17528:	str	r3, [sp, #12]
   1752c:	ldr	r3, [sp, #160]	; 0xa0
   17530:	clz	r3, r3
   17534:	lsr	r3, r3, #5
   17538:	cmp	r1, #0
   1753c:	moveq	r1, r3
   17540:	orrne	r1, r3, #1
   17544:	cmp	r1, #0
   17548:	beq	17558 <sprintf@plt+0x5f28>
   1754c:	bl	11480 <rb_close@plt>
   17550:	add	sp, sp, #148	; 0x94
   17554:	pop	{r4, r5, pc}
   17558:	bl	112e8 <rb_get_fd@plt>
   1755c:	add	r2, sp, #12
   17560:	add	r1, sp, #16
   17564:	bl	11288 <getsockname@plt>
   17568:	cmp	r0, #0
   1756c:	beq	1757c <sprintf@plt+0x5f4c>
   17570:	mov	r0, r5
   17574:	bl	11480 <rb_close@plt>
   17578:	b	17550 <sprintf@plt+0x5f20>
   1757c:	add	r1, sp, #4
   17580:	ldr	r3, [pc, #236]	; 17674 <sprintf@plt+0x6044>
   17584:	ldr	r0, [r3]
   17588:	bl	1142c <rb_dictionary_foreach_start@plt>
   1758c:	ldr	r4, [pc, #224]	; 17674 <sprintf@plt+0x6044>
   17590:	b	175b0 <sprintf@plt+0x5f80>
   17594:	ldr	r3, [r0, #252]	; 0xfc
   17598:	ldr	r2, [sp, #20]
   1759c:	cmp	r2, r3
   175a0:	beq	175f8 <sprintf@plt+0x5fc8>
   175a4:	add	r1, sp, #4
   175a8:	ldr	r0, [r4]
   175ac:	bl	113e4 <rb_dictionary_foreach_next@plt>
   175b0:	add	r1, sp, #4
   175b4:	ldr	r0, [r4]
   175b8:	bl	11348 <rb_dictionary_foreach_cur@plt>
   175bc:	cmp	r0, #0
   175c0:	beq	17668 <sprintf@plt+0x6038>
   175c4:	ldrh	r2, [r0, #248]	; 0xf8
   175c8:	ldrh	r3, [sp, #16]
   175cc:	cmp	r3, r2
   175d0:	bne	175a4 <sprintf@plt+0x5f74>
   175d4:	cmp	r2, #2
   175d8:	beq	17594 <sprintf@plt+0x5f64>
   175dc:	cmp	r2, #10
   175e0:	beq	17610 <sprintf@plt+0x5fe0>
   175e4:	ldr	r1, [pc, #140]	; 17678 <sprintf@plt+0x6048>
   175e8:	mov	r0, #67	; 0x43
   175ec:	bl	121fc <sprintf@plt+0xbcc>
   175f0:	mov	r0, #3
   175f4:	bl	11618 <exit@plt>
   175f8:	mov	r3, r0
   175fc:	ldr	r2, [pc, #120]	; 1767c <sprintf@plt+0x604c>
   17600:	mov	r1, #1
   17604:	mov	r0, r5
   17608:	bl	112dc <rb_setselect@plt>
   1760c:	b	17550 <sprintf@plt+0x5f20>
   17610:	ldr	r3, [r0, #256]	; 0x100
   17614:	ldr	r2, [sp, #24]
   17618:	cmp	r2, r3
   1761c:	bne	175a4 <sprintf@plt+0x5f74>
   17620:	ldr	r3, [r0, #260]	; 0x104
   17624:	ldr	r2, [sp, #28]
   17628:	cmp	r2, r3
   1762c:	bne	175a4 <sprintf@plt+0x5f74>
   17630:	ldr	r3, [r0, #264]	; 0x108
   17634:	ldr	r2, [sp, #32]
   17638:	cmp	r2, r3
   1763c:	bne	175a4 <sprintf@plt+0x5f74>
   17640:	ldr	r3, [r0, #268]	; 0x10c
   17644:	ldr	r2, [sp, #36]	; 0x24
   17648:	cmp	r2, r3
   1764c:	bne	175a4 <sprintf@plt+0x5f74>
   17650:	mov	r3, r0
   17654:	ldr	r2, [pc, #32]	; 1767c <sprintf@plt+0x604c>
   17658:	mov	r1, #1
   1765c:	mov	r0, r5
   17660:	bl	112dc <rb_setselect@plt>
   17664:	b	17550 <sprintf@plt+0x5f20>
   17668:	mov	r0, r5
   1766c:	bl	11480 <rb_close@plt>
   17670:	b	17550 <sprintf@plt+0x5f20>
   17674:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   17678:	andeq	r9, r1, r4, asr #20
   1767c:	andeq	r7, r1, r0, lsl #13
   17680:	push	{r4, r5, r6, r7, r8, lr}
   17684:	sub	sp, sp, #128	; 0x80
   17688:	mov	r7, r0
   1768c:	mov	r6, r1
   17690:	ldr	r3, [pc, #280]	; 177b0 <sprintf@plt+0x6180>
   17694:	ldr	r2, [r3, #12]
   17698:	ldr	r3, [r1, #464]	; 0x1d0
   1769c:	add	r3, r3, r2, lsl #4
   176a0:	ldr	r8, [r3, #8]
   176a4:	mov	r2, #128	; 0x80
   176a8:	mov	r1, sp
   176ac:	bl	11408 <rb_read@plt>
   176b0:	cmp	r0, #0
   176b4:	blt	17704 <sprintf@plt+0x60d4>
   176b8:	cmp	r0, #0
   176bc:	ble	17718 <sprintf@plt+0x60e8>
   176c0:	ldr	r3, [pc, #236]	; 177b4 <sprintf@plt+0x6184>
   176c4:	ldr	r4, [r3, #376]	; 0x178
   176c8:	cmp	r4, #0
   176cc:	beq	177a0 <sprintf@plt+0x6170>
   176d0:	ldr	r5, [r4]
   176d4:	mov	r0, r5
   176d8:	bl	11444 <strlen@plt>
   176dc:	mov	r2, r0
   176e0:	mov	r1, sp
   176e4:	mov	r0, r5
   176e8:	bl	115dc <strncmp@plt>
   176ec:	cmp	r0, #0
   176f0:	beq	1773c <sprintf@plt+0x610c>
   176f4:	ldr	r4, [r4, #8]
   176f8:	cmp	r4, #0
   176fc:	bne	176d0 <sprintf@plt+0x60a0>
   17700:	b	177a0 <sprintf@plt+0x6170>
   17704:	bl	11624 <__errno_location@plt>
   17708:	ldr	r0, [r0]
   1770c:	bl	11294 <rb_ignore_errno@plt>
   17710:	cmp	r0, #0
   17714:	bne	17724 <sprintf@plt+0x60f4>
   17718:	mov	r0, r7
   1771c:	bl	11480 <rb_close@plt>
   17720:	b	177a8 <sprintf@plt+0x6178>
   17724:	mov	r3, r6
   17728:	ldr	r2, [pc, #136]	; 177b8 <sprintf@plt+0x6188>
   1772c:	mov	r1, #1
   17730:	mov	r0, r7
   17734:	bl	112dc <rb_setselect@plt>
   17738:	b	177a8 <sprintf@plt+0x6178>
   1773c:	ldr	r3, [r8]
   17740:	cmp	r3, #0
   17744:	beq	17778 <sprintf@plt+0x6148>
   17748:	ldr	r5, [r3, #8]
   1774c:	ldr	r4, [r3]
   17750:	ldr	r0, [r4, #4]
   17754:	bl	11480 <rb_close@plt>
   17758:	cmp	r4, #0
   1775c:	beq	17768 <sprintf@plt+0x6138>
   17760:	mov	r0, r4
   17764:	bl	113f0 <free@plt>
   17768:	cmp	r5, #0
   1776c:	movne	r3, r5
   17770:	ldrne	r5, [r5, #8]
   17774:	bne	1774c <sprintf@plt+0x611c>
   17778:	cmp	r8, #0
   1777c:	beq	17788 <sprintf@plt+0x6158>
   17780:	mov	r0, r8
   17784:	bl	113f0 <free@plt>
   17788:	ldr	r3, [pc, #44]	; 177bc <sprintf@plt+0x618c>
   1778c:	mov	r2, sp
   17790:	ldr	r1, [pc, #24]	; 177b0 <sprintf@plt+0x6180>
   17794:	ldr	r1, [r1, #12]
   17798:	mov	r0, r6
   1779c:	bl	128c8 <sprintf@plt+0x1298>
   177a0:	mov	r0, r7
   177a4:	bl	11480 <rb_close@plt>
   177a8:	add	sp, sp, #128	; 0x80
   177ac:	pop	{r4, r5, r6, r7, r8, pc}
   177b0:	andeq	sl, r2, r4, lsr #29
   177b4:	andeq	lr, r2, ip, ror #31
   177b8:	andeq	r7, r1, r0, lsl #13
   177bc:	andeq	r9, r1, r4, ror sl
   177c0:	push	{r4, r5, r6, r7, lr}
   177c4:	sub	sp, sp, #156	; 0x9c
   177c8:	mov	r7, r0
   177cc:	mov	r6, r1
   177d0:	mov	r3, #1
   177d4:	str	r3, [sp, #12]
   177d8:	add	r1, sp, #24
   177dc:	bl	11438 <rb_inet_pton_sock@plt>
   177e0:	cmp	r0, #0
   177e4:	beq	178cc <sprintf@plt+0x629c>
   177e8:	ldrh	r0, [sp, #24]
   177ec:	cmp	r0, #2
   177f0:	beq	178e8 <sprintf@plt+0x62b8>
   177f4:	rev16	r3, r6
   177f8:	uxth	r2, r3
   177fc:	strh	r3, [sp, #26]
   17800:	cmp	r0, #10
   17804:	beq	1790c <sprintf@plt+0x62dc>
   17808:	ldr	r3, [pc, #732]	; 17aec <sprintf@plt+0x64bc>
   1780c:	ldr	r3, [r3, #60]	; 0x3c
   17810:	ldr	r2, [sp, #28]
   17814:	cmp	r2, r3
   17818:	beq	179a4 <sprintf@plt+0x6374>
   1781c:	ldr	r5, [pc, #712]	; 17aec <sprintf@plt+0x64bc>
   17820:	ldr	r3, [pc, #712]	; 17af0 <sprintf@plt+0x64c0>
   17824:	mov	r2, #0
   17828:	mov	r1, #1
   1782c:	bl	1130c <rb_socket@plt>
   17830:	subs	r4, r0, #0
   17834:	beq	179d8 <sprintf@plt+0x63a8>
   17838:	mov	r0, r4
   1783c:	bl	112e8 <rb_get_fd@plt>
   17840:	mov	r3, #4
   17844:	str	r3, [sp]
   17848:	add	r3, sp, #12
   1784c:	mov	r2, #2
   17850:	mov	r1, #1
   17854:	bl	115f4 <setsockopt@plt>
   17858:	cmp	r0, #0
   1785c:	bne	179fc <sprintf@plt+0x63cc>
   17860:	mov	r0, r4
   17864:	bl	112e8 <rb_get_fd@plt>
   17868:	add	r1, sp, #152	; 0x98
   1786c:	ldrh	r2, [r1, #-128]!	; 0xffffff80
   17870:	cmp	r2, #2
   17874:	moveq	r2, #16
   17878:	movne	r2, #28
   1787c:	bl	114c8 <bind@plt>
   17880:	cmp	r0, #0
   17884:	bne	17a20 <sprintf@plt+0x63f0>
   17888:	mov	r2, #0
   1788c:	mov	r1, #128	; 0x80
   17890:	mov	r0, r4
   17894:	bl	115d0 <rb_listen@plt>
   17898:	cmp	r0, #0
   1789c:	bne	17a4c <sprintf@plt+0x641c>
   178a0:	ldr	r0, [r5, #184]	; 0xb8
   178a4:	cmp	r0, #0
   178a8:	beq	178b0 <sprintf@plt+0x6280>
   178ac:	bl	11480 <rb_close@plt>
   178b0:	str	r4, [r5, #184]	; 0xb8
   178b4:	add	r1, sp, #16
   178b8:	ldr	r3, [pc, #564]	; 17af4 <sprintf@plt+0x64c4>
   178bc:	ldr	r0, [r3]
   178c0:	bl	1142c <rb_dictionary_foreach_start@plt>
   178c4:	ldr	r4, [pc, #552]	; 17af4 <sprintf@plt+0x64c4>
   178c8:	b	17a88 <sprintf@plt+0x6458>
   178cc:	mov	r3, r6
   178d0:	mov	r2, r7
   178d4:	ldr	r1, [pc, #540]	; 17af8 <sprintf@plt+0x64c8>
   178d8:	mov	r0, #67	; 0x43
   178dc:	bl	121fc <sprintf@plt+0xbcc>
   178e0:	mov	r0, #3
   178e4:	bl	11618 <exit@plt>
   178e8:	rev16	r3, r6
   178ec:	strh	r3, [sp, #26]
   178f0:	ldr	r3, [pc, #500]	; 17aec <sprintf@plt+0x64bc>
   178f4:	ldr	r3, [r3, #60]	; 0x3c
   178f8:	ldr	r2, [sp, #28]
   178fc:	cmp	r2, r3
   17900:	beq	1799c <sprintf@plt+0x636c>
   17904:	ldr	r5, [pc, #480]	; 17aec <sprintf@plt+0x64bc>
   17908:	b	17820 <sprintf@plt+0x61f0>
   1790c:	ldr	r3, [pc, #472]	; 17aec <sprintf@plt+0x64bc>
   17910:	ldr	r3, [r3, #252]	; 0xfc
   17914:	ldr	r1, [sp, #32]
   17918:	cmp	r1, r3
   1791c:	ldrne	r5, [pc, #472]	; 17afc <sprintf@plt+0x64cc>
   17920:	bne	17820 <sprintf@plt+0x61f0>
   17924:	ldr	r3, [pc, #448]	; 17aec <sprintf@plt+0x64bc>
   17928:	ldr	r3, [r3, #256]	; 0x100
   1792c:	ldr	r1, [sp, #36]	; 0x24
   17930:	cmp	r1, r3
   17934:	ldrne	r5, [pc, #448]	; 17afc <sprintf@plt+0x64cc>
   17938:	bne	17820 <sprintf@plt+0x61f0>
   1793c:	ldr	r3, [pc, #424]	; 17aec <sprintf@plt+0x64bc>
   17940:	ldr	r3, [r3, #260]	; 0x104
   17944:	ldr	r1, [sp, #40]	; 0x28
   17948:	cmp	r1, r3
   1794c:	ldrne	r5, [pc, #424]	; 17afc <sprintf@plt+0x64cc>
   17950:	bne	17820 <sprintf@plt+0x61f0>
   17954:	ldr	r3, [pc, #400]	; 17aec <sprintf@plt+0x64bc>
   17958:	ldr	r3, [r3, #264]	; 0x108
   1795c:	ldr	r1, [sp, #44]	; 0x2c
   17960:	cmp	r1, r3
   17964:	ldrne	r5, [pc, #400]	; 17afc <sprintf@plt+0x64cc>
   17968:	bne	17820 <sprintf@plt+0x61f0>
   1796c:	ldr	r3, [pc, #376]	; 17aec <sprintf@plt+0x64bc>
   17970:	ldrh	r3, [r3, #246]	; 0xf6
   17974:	cmp	r3, r2
   17978:	ldrne	r5, [pc, #380]	; 17afc <sprintf@plt+0x64cc>
   1797c:	bne	17820 <sprintf@plt+0x61f0>
   17980:	ldr	r3, [pc, #356]	; 17aec <sprintf@plt+0x64bc>
   17984:	ldr	r3, [r3, #372]	; 0x174
   17988:	cmp	r3, #0
   1798c:	ldreq	r5, [pc, #360]	; 17afc <sprintf@plt+0x64cc>
   17990:	beq	17820 <sprintf@plt+0x61f0>
   17994:	mov	r0, #0
   17998:	b	17ae4 <sprintf@plt+0x64b4>
   1799c:	ldrh	r2, [sp, #26]
   179a0:	b	179a8 <sprintf@plt+0x6378>
   179a4:	ldrh	r2, [sp, #26]
   179a8:	ldr	r3, [pc, #316]	; 17aec <sprintf@plt+0x64bc>
   179ac:	ldrh	r3, [r3, #58]	; 0x3a
   179b0:	cmp	r2, r3
   179b4:	ldrne	r5, [pc, #304]	; 17aec <sprintf@plt+0x64bc>
   179b8:	bne	17820 <sprintf@plt+0x61f0>
   179bc:	ldr	r3, [pc, #296]	; 17aec <sprintf@plt+0x64bc>
   179c0:	ldr	r3, [r3, #184]	; 0xb8
   179c4:	cmp	r3, #0
   179c8:	ldreq	r5, [pc, #284]	; 17aec <sprintf@plt+0x64bc>
   179cc:	beq	17820 <sprintf@plt+0x61f0>
   179d0:	mov	r0, #0
   179d4:	b	17ae4 <sprintf@plt+0x64b4>
   179d8:	bl	11624 <__errno_location@plt>
   179dc:	ldr	r0, [r0]
   179e0:	bl	11258 <strerror@plt>
   179e4:	mov	r2, r0
   179e8:	ldr	r1, [pc, #272]	; 17b00 <sprintf@plt+0x64d0>
   179ec:	mov	r0, #67	; 0x43
   179f0:	bl	121fc <sprintf@plt+0xbcc>
   179f4:	mov	r0, #3
   179f8:	bl	11618 <exit@plt>
   179fc:	bl	11624 <__errno_location@plt>
   17a00:	ldr	r0, [r0]
   17a04:	bl	11258 <strerror@plt>
   17a08:	mov	r2, r0
   17a0c:	ldr	r1, [pc, #240]	; 17b04 <sprintf@plt+0x64d4>
   17a10:	mov	r0, #67	; 0x43
   17a14:	bl	121fc <sprintf@plt+0xbcc>
   17a18:	mov	r0, #3
   17a1c:	bl	11618 <exit@plt>
   17a20:	bl	11624 <__errno_location@plt>
   17a24:	ldr	r0, [r0]
   17a28:	bl	11258 <strerror@plt>
   17a2c:	mov	r2, r0
   17a30:	ldr	r1, [pc, #208]	; 17b08 <sprintf@plt+0x64d8>
   17a34:	mov	r0, #87	; 0x57
   17a38:	bl	121fc <sprintf@plt+0xbcc>
   17a3c:	mov	r0, r4
   17a40:	bl	11480 <rb_close@plt>
   17a44:	mov	r0, #0
   17a48:	b	17ae4 <sprintf@plt+0x64b4>
   17a4c:	bl	11624 <__errno_location@plt>
   17a50:	ldr	r0, [r0]
   17a54:	bl	11258 <strerror@plt>
   17a58:	mov	r2, r0
   17a5c:	ldr	r1, [pc, #168]	; 17b0c <sprintf@plt+0x64dc>
   17a60:	mov	r0, #87	; 0x57
   17a64:	bl	121fc <sprintf@plt+0xbcc>
   17a68:	mov	r0, r4
   17a6c:	bl	11480 <rb_close@plt>
   17a70:	mov	r0, #0
   17a74:	b	17ae4 <sprintf@plt+0x64b4>
   17a78:	bl	171a8 <sprintf@plt+0x5b78>
   17a7c:	add	r1, sp, #16
   17a80:	ldr	r0, [r4]
   17a84:	bl	113e4 <rb_dictionary_foreach_next@plt>
   17a88:	add	r1, sp, #16
   17a8c:	ldr	r0, [r4]
   17a90:	bl	11348 <rb_dictionary_foreach_cur@plt>
   17a94:	cmp	r0, #0
   17a98:	bne	17a78 <sprintf@plt+0x6448>
   17a9c:	mov	r2, #53	; 0x35
   17aa0:	mov	r1, r7
   17aa4:	mov	r0, r5
   17aa8:	bl	113cc <rb_strlcpy@plt>
   17aac:	strh	r6, [r5, #54]	; 0x36
   17ab0:	mov	r2, #128	; 0x80
   17ab4:	add	r1, sp, #24
   17ab8:	add	r0, r5, #56	; 0x38
   17abc:	bl	11468 <memcpy@plt>
   17ac0:	mov	r4, #1
   17ac4:	ldr	r3, [pc, #32]	; 17aec <sprintf@plt+0x64bc>
   17ac8:	strb	r4, [r3, #388]	; 0x184
   17acc:	mov	r3, r5
   17ad0:	ldr	r2, [pc, #56]	; 17b10 <sprintf@plt+0x64e0>
   17ad4:	mov	r1, #0
   17ad8:	ldr	r0, [r5, #184]	; 0xb8
   17adc:	bl	11588 <rb_accept_tcp@plt>
   17ae0:	mov	r0, r4
   17ae4:	add	sp, sp, #156	; 0x9c
   17ae8:	pop	{r4, r5, r6, r7, pc}
   17aec:	andeq	lr, r2, ip, ror #31
   17af0:	andeq	r9, r1, r8, lsr #21
   17af4:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   17af8:	andeq	r9, r1, r8, lsl #21
   17afc:	andeq	pc, r2, r8, lsr #1
   17b00:			; <UNDEFINED> instruction: 0x00019abc
   17b04:	ldrdeq	r9, [r1], -ip
   17b08:	andeq	r9, r1, r4, lsl #22
   17b0c:	andeq	r9, r1, r4, lsr #22
   17b10:	andeq	r7, r1, r8, lsl r5
   17b14:	push	{r4, r5, r6, lr}
   17b18:	mov	r4, r2
   17b1c:	ldr	r5, [r2]
   17b20:	mov	r2, #10
   17b24:	mov	r1, #0
   17b28:	ldr	r0, [r4, #4]
   17b2c:	bl	1148c <strtol@plt>
   17b30:	sub	r2, r0, #1
   17b34:	ldr	r3, [pc, #48]	; 17b6c <sprintf@plt+0x653c>
   17b38:	cmp	r2, r3
   17b3c:	bhi	17b50 <sprintf@plt+0x6520>
   17b40:	uxth	r1, r0
   17b44:	mov	r0, r5
   17b48:	bl	177c0 <sprintf@plt+0x6190>
   17b4c:	pop	{r4, r5, r6, pc}
   17b50:	ldr	r3, [r4, #4]
   17b54:	ldr	r2, [r4]
   17b58:	ldr	r1, [pc, #16]	; 17b70 <sprintf@plt+0x6540>
   17b5c:	mov	r0, #67	; 0x43
   17b60:	bl	121fc <sprintf@plt+0xbcc>
   17b64:	mov	r0, #3
   17b68:	bl	11618 <exit@plt>
   17b6c:	strdeq	pc, [r0], -lr
   17b70:	andeq	r9, r1, r8, asr #22
   17b74:	push	{r4, r5, lr}
   17b78:	sub	sp, sp, #12
   17b7c:	ldr	r3, [r2]
   17b80:	ldrb	r3, [r3]
   17b84:	cmp	r3, #49	; 0x31
   17b88:	moveq	r5, #1
   17b8c:	movne	r5, #0
   17b90:	beq	17c30 <sprintf@plt+0x6600>
   17b94:	ldr	r3, [pc, #260]	; 17ca0 <sprintf@plt+0x6670>
   17b98:	ldr	r0, [r3, #184]	; 0xb8
   17b9c:	cmp	r0, #0
   17ba0:	beq	17be4 <sprintf@plt+0x65b4>
   17ba4:	bl	11480 <rb_close@plt>
   17ba8:	ldr	r3, [pc, #240]	; 17ca0 <sprintf@plt+0x6670>
   17bac:	ldr	r0, [r3, #372]	; 0x174
   17bb0:	cmp	r0, #0
   17bb4:	beq	17bbc <sprintf@plt+0x658c>
   17bb8:	bl	11480 <rb_close@plt>
   17bbc:	ldr	r3, [pc, #220]	; 17ca0 <sprintf@plt+0x6670>
   17bc0:	mov	r2, #0
   17bc4:	str	r2, [r3, #372]	; 0x174
   17bc8:	str	r2, [r3, #184]	; 0xb8
   17bcc:	mov	r1, sp
   17bd0:	ldr	r3, [pc, #204]	; 17ca4 <sprintf@plt+0x6674>
   17bd4:	ldr	r0, [r3]
   17bd8:	bl	1142c <rb_dictionary_foreach_start@plt>
   17bdc:	ldr	r4, [pc, #192]	; 17ca4 <sprintf@plt+0x6674>
   17be0:	b	17c0c <sprintf@plt+0x65dc>
   17be4:	ldr	r3, [r3, #372]	; 0x174
   17be8:	cmp	r3, #0
   17bec:	beq	17c20 <sprintf@plt+0x65f0>
   17bf0:	ldr	r3, [pc, #168]	; 17ca0 <sprintf@plt+0x6670>
   17bf4:	ldr	r0, [r3, #372]	; 0x174
   17bf8:	b	17bb8 <sprintf@plt+0x6588>
   17bfc:	bl	171a8 <sprintf@plt+0x5b78>
   17c00:	mov	r1, sp
   17c04:	ldr	r0, [r4]
   17c08:	bl	113e4 <rb_dictionary_foreach_next@plt>
   17c0c:	mov	r1, sp
   17c10:	ldr	r0, [r4]
   17c14:	bl	11348 <rb_dictionary_foreach_cur@plt>
   17c18:	cmp	r0, #0
   17c1c:	bne	17bfc <sprintf@plt+0x65cc>
   17c20:	ldr	r3, [pc, #120]	; 17ca0 <sprintf@plt+0x6670>
   17c24:	strb	r5, [r3, #388]	; 0x184
   17c28:	add	sp, sp, #12
   17c2c:	pop	{r4, r5, pc}
   17c30:	ldr	r3, [pc, #104]	; 17ca0 <sprintf@plt+0x6670>
   17c34:	ldrb	r3, [r3]
   17c38:	cmp	r3, #0
   17c3c:	beq	17c5c <sprintf@plt+0x662c>
   17c40:	ldr	r3, [pc, #88]	; 17ca0 <sprintf@plt+0x6670>
   17c44:	ldrh	r1, [r3, #54]	; 0x36
   17c48:	cmp	r1, #0
   17c4c:	beq	17c5c <sprintf@plt+0x662c>
   17c50:	ldr	r3, [r3, #184]	; 0xb8
   17c54:	cmp	r3, #0
   17c58:	beq	17c94 <sprintf@plt+0x6664>
   17c5c:	ldr	r3, [pc, #60]	; 17ca0 <sprintf@plt+0x6670>
   17c60:	ldrb	r3, [r3, #188]	; 0xbc
   17c64:	cmp	r3, #0
   17c68:	beq	17c20 <sprintf@plt+0x65f0>
   17c6c:	ldr	r3, [pc, #44]	; 17ca0 <sprintf@plt+0x6670>
   17c70:	ldrh	r1, [r3, #242]	; 0xf2
   17c74:	cmp	r1, #0
   17c78:	beq	17c20 <sprintf@plt+0x65f0>
   17c7c:	ldr	r3, [r3, #372]	; 0x174
   17c80:	cmp	r3, #0
   17c84:	bne	17c20 <sprintf@plt+0x65f0>
   17c88:	ldr	r0, [pc, #24]	; 17ca8 <sprintf@plt+0x6678>
   17c8c:	bl	177c0 <sprintf@plt+0x6190>
   17c90:	b	17c20 <sprintf@plt+0x65f0>
   17c94:	ldr	r0, [pc, #4]	; 17ca0 <sprintf@plt+0x6670>
   17c98:	bl	177c0 <sprintf@plt+0x6190>
   17c9c:	b	17c5c <sprintf@plt+0x662c>
   17ca0:	andeq	lr, r2, ip, ror #31
   17ca4:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   17ca8:	andeq	pc, r2, r8, lsr #1
   17cac:	push	{r4, r5, r6, r7, lr}
   17cb0:	sub	sp, sp, #12
   17cb4:	ldr	r3, [pc, #200]	; 17d84 <sprintf@plt+0x6754>
   17cb8:	ldr	r4, [r3, #376]	; 0x178
   17cbc:	cmp	r4, #0
   17cc0:	beq	17d34 <sprintf@plt+0x6704>
   17cc4:	ldr	r5, [r4, #8]
   17cc8:	mov	r6, r3
   17ccc:	mov	r7, #0
   17cd0:	ldr	r0, [r4]
   17cd4:	cmp	r0, #0
   17cd8:	beq	17ce0 <sprintf@plt+0x66b0>
   17cdc:	bl	113f0 <free@plt>
   17ce0:	ldr	r3, [r4, #8]
   17ce4:	cmp	r3, #0
   17ce8:	ldrne	r2, [r4, #4]
   17cec:	strne	r2, [r3, #4]
   17cf0:	ldreq	r3, [r4, #4]
   17cf4:	streq	r3, [r6, #380]	; 0x17c
   17cf8:	ldr	r3, [r4, #4]
   17cfc:	cmp	r3, #0
   17d00:	ldrne	r2, [r4, #8]
   17d04:	strne	r2, [r3, #8]
   17d08:	ldreq	r3, [r4, #8]
   17d0c:	streq	r3, [r6, #376]	; 0x178
   17d10:	str	r7, [r4, #4]
   17d14:	str	r7, [r4, #8]
   17d18:	ldr	r3, [r6, #384]	; 0x180
   17d1c:	sub	r3, r3, #1
   17d20:	str	r3, [r6, #384]	; 0x180
   17d24:	cmp	r5, #0
   17d28:	movne	r4, r5
   17d2c:	ldrne	r5, [r5, #8]
   17d30:	bne	17cd0 <sprintf@plt+0x66a0>
   17d34:	mov	r1, sp
   17d38:	ldr	r3, [pc, #72]	; 17d88 <sprintf@plt+0x6758>
   17d3c:	ldr	r0, [r3]
   17d40:	bl	1142c <rb_dictionary_foreach_start@plt>
   17d44:	ldr	r4, [pc, #60]	; 17d88 <sprintf@plt+0x6758>
   17d48:	b	17d5c <sprintf@plt+0x672c>
   17d4c:	bl	171a8 <sprintf@plt+0x5b78>
   17d50:	mov	r1, sp
   17d54:	ldr	r0, [r4]
   17d58:	bl	113e4 <rb_dictionary_foreach_next@plt>
   17d5c:	mov	r1, sp
   17d60:	ldr	r0, [r4]
   17d64:	bl	11348 <rb_dictionary_foreach_cur@plt>
   17d68:	cmp	r0, #0
   17d6c:	bne	17d4c <sprintf@plt+0x671c>
   17d70:	mov	r2, #0
   17d74:	ldr	r3, [pc, #8]	; 17d84 <sprintf@plt+0x6754>
   17d78:	strb	r2, [r3, #388]	; 0x184
   17d7c:	add	sp, sp, #12
   17d80:	pop	{r4, r5, r6, r7, pc}
   17d84:	andeq	lr, r2, ip, ror #31
   17d88:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   17d8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17d90:	sub	sp, sp, #272	; 0x110
   17d94:	mov	r6, r0
   17d98:	mov	r7, r1
   17d9c:	ldr	r3, [pc, #504]	; 17f9c <sprintf@plt+0x696c>
   17da0:	ldr	r2, [r3, #12]
   17da4:	ldr	r3, [r0, #464]	; 0x1d0
   17da8:	add	r3, r3, r2, lsl #4
   17dac:	ldr	r5, [r3, #8]
   17db0:	mov	r1, #28
   17db4:	mov	r0, #1
   17db8:	bl	11360 <calloc@plt>
   17dbc:	subs	r4, r0, #0
   17dc0:	beq	17ee4 <sprintf@plt+0x68b4>
   17dc4:	mov	r3, #1
   17dc8:	str	r3, [sp, #12]
   17dcc:	ldrh	r9, [r6, #248]	; 0xf8
   17dd0:	cmp	r9, #10
   17dd4:	ldrne	r8, [pc, #452]	; 17fa0 <sprintf@plt+0x6970>
   17dd8:	beq	17ee8 <sprintf@plt+0x68b8>
   17ddc:	ldr	r3, [r8, #184]	; 0xb8
   17de0:	cmp	r3, #0
   17de4:	beq	17f04 <sprintf@plt+0x68d4>
   17de8:	mov	sl, #128	; 0x80
   17dec:	mov	r2, sl
   17df0:	add	r1, r6, #248	; 0xf8
   17df4:	add	r0, sp, #144	; 0x90
   17df8:	bl	11468 <memcpy@plt>
   17dfc:	mov	r2, sl
   17e00:	add	r1, r8, #56	; 0x38
   17e04:	add	r0, sp, #16
   17e08:	bl	11468 <memcpy@plt>
   17e0c:	str	r6, [r4]
   17e10:	str	r7, [r4, #8]
   17e14:	str	r8, [r4, #12]
   17e18:	mov	r3, r7
   17e1c:	mov	r2, #0
   17e20:	mov	r1, #1
   17e24:	mov	r0, r9
   17e28:	bl	1130c <rb_socket@plt>
   17e2c:	str	r0, [r4, #4]
   17e30:	cmp	r0, #0
   17e34:	beq	17f10 <sprintf@plt+0x68e0>
   17e38:	bl	112e8 <rb_get_fd@plt>
   17e3c:	mov	r3, #4
   17e40:	str	r3, [sp]
   17e44:	add	r3, sp, #12
   17e48:	mov	r2, #1
   17e4c:	mov	r1, #6
   17e50:	bl	115f4 <setsockopt@plt>
   17e54:	mov	r3, #0
   17e58:	strh	r3, [sp, #18]
   17e5c:	ldrh	r3, [r7, #20]
   17e60:	rev16	r3, r3
   17e64:	strh	r3, [sp, #146]	; 0x92
   17e68:	adds	r3, r4, #16
   17e6c:	beq	17f3c <sprintf@plt+0x690c>
   17e70:	cmp	r5, #0
   17e74:	beq	17f50 <sprintf@plt+0x6920>
   17e78:	str	r4, [r4, #16]
   17e7c:	mov	r2, #0
   17e80:	str	r2, [r4, #20]
   17e84:	ldr	r2, [r5]
   17e88:	str	r2, [r4, #24]
   17e8c:	ldr	r2, [r5]
   17e90:	cmp	r2, #0
   17e94:	strne	r3, [r2, #4]
   17e98:	beq	17f64 <sprintf@plt+0x6934>
   17e9c:	str	r3, [r5]
   17ea0:	ldr	r3, [r5, #8]
   17ea4:	add	r3, r3, #1
   17ea8:	str	r3, [r5, #8]
   17eac:	ldrb	r3, [r7, #22]
   17eb0:	cmp	r3, #0
   17eb4:	bne	17f74 <sprintf@plt+0x6944>
   17eb8:	ldr	r0, [r4, #4]
   17ebc:	ldr	r3, [pc, #216]	; 17f9c <sprintf@plt+0x696c>
   17ec0:	ldr	r3, [r3, #60]	; 0x3c
   17ec4:	str	r3, [sp, #4]
   17ec8:	str	r4, [sp]
   17ecc:	ldr	r3, [pc, #208]	; 17fa4 <sprintf@plt+0x6974>
   17ed0:	add	r2, sp, #16
   17ed4:	add	r1, sp, #144	; 0x90
   17ed8:	bl	112ac <rb_connect_tcp@plt>
   17edc:	add	sp, sp, #272	; 0x110
   17ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17ee4:	bl	11504 <rb_outofmemory@plt>
   17ee8:	ldr	r3, [r7, #16]
   17eec:	cmp	r3, #1
   17ef0:	ldrne	r8, [pc, #176]	; 17fa8 <sprintf@plt+0x6978>
   17ef4:	bne	17ddc <sprintf@plt+0x67ac>
   17ef8:	mov	r0, r4
   17efc:	bl	113f0 <free@plt>
   17f00:	b	17edc <sprintf@plt+0x68ac>
   17f04:	mov	r0, r4
   17f08:	bl	113f0 <free@plt>
   17f0c:	b	17edc <sprintf@plt+0x68ac>
   17f10:	bl	11624 <__errno_location@plt>
   17f14:	ldr	r0, [r0]
   17f18:	bl	11258 <strerror@plt>
   17f1c:	mov	r3, r0
   17f20:	mov	r2, r7
   17f24:	ldr	r1, [pc, #128]	; 17fac <sprintf@plt+0x697c>
   17f28:	mov	r0, #87	; 0x57
   17f2c:	bl	121fc <sprintf@plt+0xbcc>
   17f30:	mov	r0, r4
   17f34:	bl	113f0 <free@plt>
   17f38:	b	17edc <sprintf@plt+0x68ac>
   17f3c:	ldr	r3, [pc, #108]	; 17fb0 <sprintf@plt+0x6980>
   17f40:	mov	r2, #144	; 0x90
   17f44:	ldr	r1, [pc, #104]	; 17fb4 <sprintf@plt+0x6984>
   17f48:	ldr	r0, [pc, #104]	; 17fb8 <sprintf@plt+0x6988>
   17f4c:	bl	113c0 <__assert_fail@plt>
   17f50:	ldr	r3, [pc, #88]	; 17fb0 <sprintf@plt+0x6980>
   17f54:	mov	r2, #145	; 0x91
   17f58:	ldr	r1, [pc, #84]	; 17fb4 <sprintf@plt+0x6984>
   17f5c:	ldr	r0, [pc, #88]	; 17fbc <sprintf@plt+0x698c>
   17f60:	bl	113c0 <__assert_fail@plt>
   17f64:	ldr	r2, [r5, #4]
   17f68:	cmp	r2, #0
   17f6c:	streq	r3, [r5, #4]
   17f70:	b	17e9c <sprintf@plt+0x686c>
   17f74:	ldr	r0, [r4, #4]
   17f78:	ldr	r3, [pc, #28]	; 17f9c <sprintf@plt+0x696c>
   17f7c:	ldr	r3, [r3, #60]	; 0x3c
   17f80:	str	r3, [sp, #4]
   17f84:	str	r4, [sp]
   17f88:	ldr	r3, [pc, #20]	; 17fa4 <sprintf@plt+0x6974>
   17f8c:	add	r2, sp, #16
   17f90:	add	r1, sp, #144	; 0x90
   17f94:	bl	112a0 <rb_connect_tcp_ssl@plt>
   17f98:	b	17edc <sprintf@plt+0x68ac>
   17f9c:	andeq	sl, r2, r4, lsr #29
   17fa0:	andeq	lr, r2, ip, ror #31
   17fa4:	andeq	r8, r1, r4, lsr #10
   17fa8:	andeq	pc, r2, r8, lsr #1
   17fac:	andeq	r9, r1, r8, ror #22
   17fb0:	andeq	r9, r1, r8, asr #19
   17fb4:	andeq	r9, r1, r0, lsr #32
   17fb8:	andeq	r9, r1, ip, lsr r0
   17fbc:	andeq	r9, r1, r0, asr r5
   17fc0:	push	{r4, r5, r6, r7, r8, lr}
   17fc4:	mov	r5, r0
   17fc8:	ldr	r3, [pc, #92]	; 1802c <sprintf@plt+0x69fc>
   17fcc:	ldr	r2, [r3, #12]
   17fd0:	ldr	r4, [r0, #464]	; 0x1d0
   17fd4:	add	r4, r4, r2, lsl #4
   17fd8:	ldr	r7, [r4, #8]
   17fdc:	ldr	r6, [r3, #60]	; 0x3c
   17fe0:	bl	11450 <rb_current_time@plt>
   17fe4:	add	r0, r6, r0
   17fe8:	str	r0, [r4, #4]
   17fec:	mov	r3, #1
   17ff0:	strb	r3, [r7, #12]
   17ff4:	ldr	r3, [pc, #52]	; 18030 <sprintf@plt+0x6a00>
   17ff8:	ldr	r4, [r3, #376]	; 0x178
   17ffc:	cmp	r4, #0
   18000:	beq	1801c <sprintf@plt+0x69ec>
   18004:	ldr	r1, [r4]
   18008:	mov	r0, r5
   1800c:	bl	17d8c <sprintf@plt+0x675c>
   18010:	ldr	r4, [r4, #8]
   18014:	cmp	r4, #0
   18018:	bne	18004 <sprintf@plt+0x69d4>
   1801c:	ldr	r1, [pc, #16]	; 18034 <sprintf@plt+0x6a04>
   18020:	ldr	r0, [r5]
   18024:	bl	121a4 <sprintf@plt+0xb74>
   18028:	pop	{r4, r5, r6, r7, r8, pc}
   1802c:	andeq	sl, r2, r4, lsr #29
   18030:	andeq	lr, r2, ip, ror #31
   18034:	muleq	r1, r8, fp
   18038:	push	{r4, r5, r6, r7, r8, lr}
   1803c:	mov	r5, r2
   18040:	mov	r2, #10
   18044:	mov	r1, #0
   18048:	ldr	r0, [r5, #4]
   1804c:	bl	1148c <strtol@plt>
   18050:	mov	r6, r0
   18054:	mov	r1, #40	; 0x28
   18058:	mov	r0, #1
   1805c:	bl	11360 <calloc@plt>
   18060:	subs	r4, r0, #0
   18064:	beq	180f4 <sprintf@plt+0x6ac4>
   18068:	sub	r2, r6, #1
   1806c:	ldr	r3, [pc, #572]	; 182b0 <sprintf@plt+0x6c80>
   18070:	cmp	r2, r3
   18074:	bhi	180f8 <sprintf@plt+0x6ac8>
   18078:	strh	r6, [r4, #20]
   1807c:	ldr	r7, [r5]
   18080:	ldr	r1, [pc, #556]	; 182b4 <sprintf@plt+0x6c84>
   18084:	mov	r0, r7
   18088:	bl	11354 <strcasecmp@plt>
   1808c:	cmp	r0, #0
   18090:	beq	1820c <sprintf@plt+0x6bdc>
   18094:	ldr	r1, [pc, #540]	; 182b8 <sprintf@plt+0x6c88>
   18098:	mov	r0, r7
   1809c:	bl	11354 <strcasecmp@plt>
   180a0:	cmp	r0, #0
   180a4:	bne	18114 <sprintf@plt+0x6ae4>
   180a8:	mov	r3, #2
   180ac:	str	r3, [r4, #16]
   180b0:	uxth	r3, r6
   180b4:	ldr	r2, [pc, #512]	; 182bc <sprintf@plt+0x6c8c>
   180b8:	mov	r1, #16
   180bc:	mov	r0, r4
   180c0:	bl	115c4 <snprintf@plt>
   180c4:	mov	r3, #0
   180c8:	strb	r3, [r4, #22]
   180cc:	ldr	r3, [pc, #492]	; 182c0 <sprintf@plt+0x6c90>
   180d0:	str	r3, [r4, #24]
   180d4:	ldr	ip, [r4, #16]
   180d8:	ldrh	r3, [r4, #20]
   180dc:	ldr	r2, [pc, #480]	; 182c4 <sprintf@plt+0x6c94>
   180e0:	ldr	lr, [r2, #376]	; 0x178
   180e4:	cmp	lr, #0
   180e8:	beq	18284 <sprintf@plt+0x6c54>
   180ec:	mov	r2, lr
   180f0:	b	181a8 <sprintf@plt+0x6b78>
   180f4:	bl	11504 <rb_outofmemory@plt>
   180f8:	ldr	r3, [r5, #4]
   180fc:	ldr	r2, [r5]
   18100:	ldr	r1, [pc, #448]	; 182c8 <sprintf@plt+0x6c98>
   18104:	mov	r0, #67	; 0x43
   18108:	bl	121fc <sprintf@plt+0xbcc>
   1810c:	mov	r0, #3
   18110:	bl	11618 <exit@plt>
   18114:	ldr	r1, [pc, #432]	; 182cc <sprintf@plt+0x6c9c>
   18118:	mov	r0, r7
   1811c:	bl	11354 <strcasecmp@plt>
   18120:	cmp	r0, #0
   18124:	bne	18158 <sprintf@plt+0x6b28>
   18128:	mov	r3, #3
   1812c:	str	r3, [r4, #16]
   18130:	uxth	r3, r6
   18134:	ldr	r2, [pc, #404]	; 182d0 <sprintf@plt+0x6ca0>
   18138:	mov	r1, #16
   1813c:	mov	r0, r4
   18140:	bl	115c4 <snprintf@plt>
   18144:	mov	r3, #0
   18148:	strb	r3, [r4, #22]
   1814c:	ldr	r3, [pc, #384]	; 182d4 <sprintf@plt+0x6ca4>
   18150:	str	r3, [r4, #24]
   18154:	b	180d4 <sprintf@plt+0x6aa4>
   18158:	ldr	r1, [pc, #376]	; 182d8 <sprintf@plt+0x6ca8>
   1815c:	mov	r0, r7
   18160:	bl	11354 <strcasecmp@plt>
   18164:	cmp	r0, #0
   18168:	bne	181e8 <sprintf@plt+0x6bb8>
   1816c:	mov	r3, #4
   18170:	str	r3, [r4, #16]
   18174:	uxth	r3, r6
   18178:	ldr	r2, [pc, #348]	; 182dc <sprintf@plt+0x6cac>
   1817c:	mov	r1, #16
   18180:	mov	r0, r4
   18184:	bl	115c4 <snprintf@plt>
   18188:	ldr	r3, [pc, #324]	; 182d4 <sprintf@plt+0x6ca4>
   1818c:	str	r3, [r4, #24]
   18190:	mov	r3, #1
   18194:	strb	r3, [r4, #22]
   18198:	b	180d4 <sprintf@plt+0x6aa4>
   1819c:	ldr	r2, [r2, #8]
   181a0:	cmp	r2, #0
   181a4:	beq	18254 <sprintf@plt+0x6c24>
   181a8:	ldr	r1, [r2]
   181ac:	ldr	r0, [r1, #16]
   181b0:	cmp	ip, r0
   181b4:	bne	1819c <sprintf@plt+0x6b6c>
   181b8:	ldrh	r0, [r1, #20]
   181bc:	cmp	r0, r3
   181c0:	bne	1819c <sprintf@plt+0x6b6c>
   181c4:	cmp	r1, #0
   181c8:	beq	1823c <sprintf@plt+0x6c0c>
   181cc:	ldr	r2, [r5]
   181d0:	ldr	r1, [pc, #264]	; 182e0 <sprintf@plt+0x6cb0>
   181d4:	mov	r0, #67	; 0x43
   181d8:	bl	121fc <sprintf@plt+0xbcc>
   181dc:	mov	r0, r4
   181e0:	bl	113f0 <free@plt>
   181e4:	pop	{r4, r5, r6, r7, r8, pc}
   181e8:	mov	r3, #0
   181ec:	str	r3, [r4, #16]
   181f0:	uxth	r3, r6
   181f4:	mov	r2, r7
   181f8:	ldr	r1, [pc, #228]	; 182e4 <sprintf@plt+0x6cb4>
   181fc:	mov	r0, #67	; 0x43
   18200:	bl	121fc <sprintf@plt+0xbcc>
   18204:	mov	r0, #3
   18208:	bl	11618 <exit@plt>
   1820c:	mov	r3, #1
   18210:	str	r3, [r4, #16]
   18214:	uxth	r3, r6
   18218:	ldr	r2, [pc, #200]	; 182e8 <sprintf@plt+0x6cb8>
   1821c:	mov	r1, #16
   18220:	mov	r0, r4
   18224:	bl	115c4 <snprintf@plt>
   18228:	mov	r3, #0
   1822c:	strb	r3, [r4, #22]
   18230:	ldr	r3, [pc, #180]	; 182ec <sprintf@plt+0x6cbc>
   18234:	str	r3, [r4, #24]
   18238:	b	180d4 <sprintf@plt+0x6aa4>
   1823c:	add	r2, r4, #28
   18240:	str	r4, [r4, #28]
   18244:	mov	r3, #0
   18248:	str	r3, [r4, #32]
   1824c:	str	lr, [r4, #36]	; 0x24
   18250:	b	18268 <sprintf@plt+0x6c38>
   18254:	add	r2, r4, #28
   18258:	str	r4, [r4, #28]
   1825c:	mov	r3, #0
   18260:	str	r3, [r4, #32]
   18264:	str	lr, [r4, #36]	; 0x24
   18268:	str	r2, [lr, #4]
   1826c:	ldr	r3, [pc, #80]	; 182c4 <sprintf@plt+0x6c94>
   18270:	str	r2, [r3, #376]	; 0x178
   18274:	ldr	r2, [r3, #384]	; 0x180
   18278:	add	r2, r2, #1
   1827c:	str	r2, [r3, #384]	; 0x180
   18280:	pop	{r4, r5, r6, r7, r8, pc}
   18284:	add	r2, r4, #28
   18288:	str	r4, [r4, #28]
   1828c:	mov	r3, #0
   18290:	str	r3, [r4, #32]
   18294:	str	lr, [r4, #36]	; 0x24
   18298:	ldr	r3, [pc, #36]	; 182c4 <sprintf@plt+0x6c94>
   1829c:	ldr	r3, [r3, #380]	; 0x17c
   182a0:	cmp	r3, #0
   182a4:	ldreq	r3, [pc, #24]	; 182c4 <sprintf@plt+0x6c94>
   182a8:	streq	r2, [r3, #380]	; 0x17c
   182ac:	b	1826c <sprintf@plt+0x6c3c>
   182b0:	strdeq	pc, [r0], -lr
   182b4:	andeq	r9, r1, r4, ror #23
   182b8:	andeq	r9, r1, ip, ror #23
   182bc:	muleq	r1, ip, ip
   182c0:	muleq	r1, r4, r3
   182c4:	andeq	lr, r2, ip, ror #31
   182c8:			; <UNDEFINED> instruction: 0x00019bbc
   182cc:	strdeq	r9, [r1], -r4
   182d0:	andeq	r9, r1, ip, lsr ip
   182d4:	andeq	r7, r1, r8, lsl #6
   182d8:	andeq	r9, r1, r0, lsl #24
   182dc:	andeq	r9, r1, ip, asr #24
   182e0:	andeq	r9, r1, r0, lsl ip
   182e4:	andeq	r9, r1, r0, ror #24
   182e8:	muleq	r1, r0, ip
   182ec:	andeq	r7, r1, r8, ror #8
   182f0:	push	{r4, r5, r6, r7, r8, lr}
   182f4:	mov	r8, r0
   182f8:	ldr	r3, [pc, #288]	; 18420 <sprintf@plt+0x6df0>
   182fc:	ldrb	r3, [r3, #388]	; 0x184
   18300:	cmp	r3, #0
   18304:	beq	18318 <sprintf@plt+0x6ce8>
   18308:	ldr	r3, [pc, #272]	; 18420 <sprintf@plt+0x6df0>
   1830c:	ldr	r3, [r3, #384]	; 0x180
   18310:	cmp	r3, #0
   18314:	bne	18330 <sprintf@plt+0x6d00>
   18318:	ldr	r3, [pc, #260]	; 18424 <sprintf@plt+0x6df4>
   1831c:	ldr	r1, [r3, #12]
   18320:	mov	r0, r8
   18324:	bl	12b9c <sprintf@plt+0x156c>
   18328:	mov	r0, #1
   1832c:	pop	{r4, r5, r6, r7, r8, pc}
   18330:	ldr	r3, [r0, #460]	; 0x1cc
   18334:	add	r3, r3, #1
   18338:	str	r3, [r0, #460]	; 0x1cc
   1833c:	ldr	r3, [pc, #224]	; 18424 <sprintf@plt+0x6df4>
   18340:	ldr	r4, [r3, #12]
   18344:	mov	r1, #16
   18348:	mov	r0, #1
   1834c:	bl	11360 <calloc@plt>
   18350:	cmp	r0, #0
   18354:	beq	183d4 <sprintf@plt+0x6da4>
   18358:	ldr	r3, [r8, #464]	; 0x1d0
   1835c:	add	r3, r3, r4, lsl #4
   18360:	str	r0, [r3, #8]
   18364:	ldr	r3, [pc, #188]	; 18428 <sprintf@plt+0x6df8>
   18368:	ldr	r6, [r3]
   1836c:	cmp	r6, #0
   18370:	beq	183c8 <sprintf@plt+0x6d98>
   18374:	mov	r4, r6
   18378:	ldr	r7, [pc, #172]	; 1842c <sprintf@plt+0x6dfc>
   1837c:	ldr	r5, [r4]
   18380:	mov	r1, r7
   18384:	ldr	r0, [r5, #16]
   18388:	bl	11354 <strcasecmp@plt>
   1838c:	cmp	r0, #0
   18390:	beq	183d8 <sprintf@plt+0x6da8>
   18394:	ldr	r4, [r4, #8]
   18398:	cmp	r4, #0
   1839c:	bne	1837c <sprintf@plt+0x6d4c>
   183a0:	ldr	r5, [pc, #136]	; 18430 <sprintf@plt+0x6e00>
   183a4:	ldr	r4, [r6]
   183a8:	mov	r1, r5
   183ac:	ldr	r0, [r4, #16]
   183b0:	bl	11354 <strcasecmp@plt>
   183b4:	cmp	r0, #0
   183b8:	beq	183fc <sprintf@plt+0x6dcc>
   183bc:	ldr	r6, [r6, #8]
   183c0:	cmp	r6, #0
   183c4:	bne	183a4 <sprintf@plt+0x6d74>
   183c8:	mov	r0, r8
   183cc:	bl	17fc0 <sprintf@plt+0x6990>
   183d0:	b	18328 <sprintf@plt+0x6cf8>
   183d4:	bl	11504 <rb_outofmemory@plt>
   183d8:	cmp	r5, #0
   183dc:	beq	183a0 <sprintf@plt+0x6d70>
   183e0:	ldr	r2, [r5, #12]
   183e4:	ldr	r3, [r8, #464]	; 0x1d0
   183e8:	add	r3, r3, r2, lsl #4
   183ec:	ldr	r3, [r3, #12]
   183f0:	cmp	r3, #2
   183f4:	bne	18328 <sprintf@plt+0x6cf8>
   183f8:	b	183a0 <sprintf@plt+0x6d70>
   183fc:	cmp	r4, #0
   18400:	beq	183c8 <sprintf@plt+0x6d98>
   18404:	ldr	r2, [r4, #12]
   18408:	ldr	r3, [r8, #464]	; 0x1d0
   1840c:	add	r3, r3, r2, lsl #4
   18410:	ldr	r3, [r3, #12]
   18414:	cmp	r3, #2
   18418:	bne	18328 <sprintf@plt+0x6cf8>
   1841c:	b	183c8 <sprintf@plt+0x6d98>
   18420:	andeq	lr, r2, ip, ror #31
   18424:	andeq	sl, r2, r4, lsr #29
   18428:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   1842c:	andeq	r9, r1, ip, lsr r7
   18430:	andeq	r9, r1, r4, asr #14
   18434:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18438:	ldr	r8, [r0, #464]	; 0x1d0
   1843c:	ldr	r3, [pc, #208]	; 18514 <sprintf@plt+0x6ee4>
   18440:	ldr	r3, [r3, #12]
   18444:	add	r3, r8, r3, lsl #4
   18448:	ldr	r3, [r3, #8]
   1844c:	cmp	r3, #0
   18450:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18454:	ldrb	r3, [r3, #12]
   18458:	cmp	r3, #0
   1845c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   18460:	mov	r9, r0
   18464:	ldr	r3, [pc, #172]	; 18518 <sprintf@plt+0x6ee8>
   18468:	ldr	r6, [r3]
   1846c:	cmp	r6, #0
   18470:	beq	184c8 <sprintf@plt+0x6e98>
   18474:	mov	r4, r6
   18478:	ldr	r7, [pc, #156]	; 1851c <sprintf@plt+0x6eec>
   1847c:	ldr	r5, [r4]
   18480:	mov	r1, r7
   18484:	ldr	r0, [r5, #16]
   18488:	bl	11354 <strcasecmp@plt>
   1848c:	cmp	r0, #0
   18490:	beq	184d4 <sprintf@plt+0x6ea4>
   18494:	ldr	r4, [r4, #8]
   18498:	cmp	r4, #0
   1849c:	bne	1847c <sprintf@plt+0x6e4c>
   184a0:	ldr	r5, [pc, #120]	; 18520 <sprintf@plt+0x6ef0>
   184a4:	ldr	r4, [r6]
   184a8:	mov	r1, r5
   184ac:	ldr	r0, [r4, #16]
   184b0:	bl	11354 <strcasecmp@plt>
   184b4:	cmp	r0, #0
   184b8:	beq	184f4 <sprintf@plt+0x6ec4>
   184bc:	ldr	r6, [r6, #8]
   184c0:	cmp	r6, #0
   184c4:	bne	184a4 <sprintf@plt+0x6e74>
   184c8:	mov	r0, r9
   184cc:	bl	17fc0 <sprintf@plt+0x6990>
   184d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   184d4:	cmp	r5, #0
   184d8:	beq	184a0 <sprintf@plt+0x6e70>
   184dc:	ldr	r3, [r5, #12]
   184e0:	add	r3, r8, r3, lsl #4
   184e4:	ldr	r3, [r3, #12]
   184e8:	cmp	r3, #2
   184ec:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   184f0:	b	184a0 <sprintf@plt+0x6e70>
   184f4:	cmp	r4, #0
   184f8:	beq	184c8 <sprintf@plt+0x6e98>
   184fc:	ldr	r3, [r4, #12]
   18500:	add	r8, r8, r3, lsl #4
   18504:	ldr	r3, [r8, #12]
   18508:	cmp	r3, #2
   1850c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   18510:	b	184c8 <sprintf@plt+0x6e98>
   18514:	andeq	sl, r2, r4, lsr #29
   18518:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   1851c:	andeq	r9, r1, ip, lsr r7
   18520:	andeq	r9, r1, r4, asr #14
   18524:	push	{r4, r5, r6, lr}
   18528:	mov	r4, r2
   1852c:	ldr	r2, [r2]
   18530:	ldr	r3, [pc, #276]	; 1864c <sprintf@plt+0x701c>
   18534:	ldr	r0, [r3, #12]
   18538:	ldr	r3, [r2, #464]	; 0x1d0
   1853c:	add	r3, r3, r0, lsl #4
   18540:	ldr	r5, [r3, #8]
   18544:	cmp	r1, #0
   18548:	bne	185b0 <sprintf@plt+0x6f80>
   1854c:	ldr	r3, [pc, #252]	; 18650 <sprintf@plt+0x7020>
   18550:	ldrb	r3, [r3, #388]	; 0x184
   18554:	cmp	r3, #0
   18558:	beq	185b0 <sprintf@plt+0x6f80>
   1855c:	ldr	r1, [r4, #8]
   18560:	ldrh	r3, [r2, #248]	; 0xf8
   18564:	cmp	r3, #2
   18568:	beq	18594 <sprintf@plt+0x6f64>
   1856c:	cmp	r3, #10
   18570:	bne	185b0 <sprintf@plt+0x6f80>
   18574:	ldrb	r3, [r1, #23]
   18578:	cmp	r3, #0
   1857c:	beq	185b0 <sprintf@plt+0x6f80>
   18580:	ldr	r3, [pc, #200]	; 18650 <sprintf@plt+0x7020>
   18584:	ldr	r3, [r3, #372]	; 0x174
   18588:	cmp	r3, #0
   1858c:	bne	185a4 <sprintf@plt+0x6f74>
   18590:	b	185b0 <sprintf@plt+0x6f80>
   18594:	ldr	r3, [pc, #180]	; 18650 <sprintf@plt+0x7020>
   18598:	ldr	r3, [r3, #184]	; 0xb8
   1859c:	cmp	r3, #0
   185a0:	beq	185b0 <sprintf@plt+0x6f80>
   185a4:	ldr	r3, [r1, #24]
   185a8:	mov	r0, r4
   185ac:	blx	r3
   185b0:	ldr	r0, [r4, #4]
   185b4:	bl	11480 <rb_close@plt>
   185b8:	cmn	r4, #16
   185bc:	beq	18624 <sprintf@plt+0x6ff4>
   185c0:	cmp	r5, #0
   185c4:	beq	18638 <sprintf@plt+0x7008>
   185c8:	ldr	r3, [r4, #24]
   185cc:	cmp	r3, #0
   185d0:	ldrne	r2, [r4, #20]
   185d4:	strne	r2, [r3, #4]
   185d8:	ldreq	r3, [r4, #20]
   185dc:	streq	r3, [r5, #4]
   185e0:	ldr	r3, [r4, #20]
   185e4:	cmp	r3, #0
   185e8:	ldrne	r2, [r4, #24]
   185ec:	strne	r2, [r3, #8]
   185f0:	ldreq	r3, [r4, #24]
   185f4:	streq	r3, [r5]
   185f8:	mov	r3, #0
   185fc:	str	r3, [r4, #20]
   18600:	str	r3, [r4, #24]
   18604:	ldr	r3, [r5, #8]
   18608:	sub	r3, r3, #1
   1860c:	str	r3, [r5, #8]
   18610:	cmp	r4, #0
   18614:	popeq	{r4, r5, r6, pc}
   18618:	mov	r0, r4
   1861c:	bl	113f0 <free@plt>
   18620:	pop	{r4, r5, r6, pc}
   18624:	ldr	r3, [pc, #40]	; 18654 <sprintf@plt+0x7024>
   18628:	mov	r2, #235	; 0xeb
   1862c:	ldr	r1, [pc, #36]	; 18658 <sprintf@plt+0x7028>
   18630:	ldr	r0, [pc, #36]	; 1865c <sprintf@plt+0x702c>
   18634:	bl	113c0 <__assert_fail@plt>
   18638:	ldr	r3, [pc, #20]	; 18654 <sprintf@plt+0x7024>
   1863c:	mov	r2, #236	; 0xec
   18640:	ldr	r1, [pc, #16]	; 18658 <sprintf@plt+0x7028>
   18644:	ldr	r0, [pc, #20]	; 18660 <sprintf@plt+0x7030>
   18648:	bl	113c0 <__assert_fail@plt>
   1864c:	andeq	sl, r2, r4, lsr #29
   18650:	andeq	lr, r2, ip, ror #31
   18654:	ldrdeq	r9, [r1], -r4
   18658:	andeq	r9, r1, r0, lsr #32
   1865c:	andeq	r9, r1, ip, lsr r0
   18660:	andeq	r9, r1, r0, asr r5
   18664:	push	{r4, r5, r6, r7, r8, r9, lr}
   18668:	sub	sp, sp, #12
   1866c:	mov	r6, r2
   18670:	ldr	r4, [r2]
   18674:	ldr	r1, [pc, #792]	; 18994 <sprintf@plt+0x7364>
   18678:	mov	r0, r4
   1867c:	bl	11354 <strcasecmp@plt>
   18680:	cmp	r0, #0
   18684:	beq	1898c <sprintf@plt+0x735c>
   18688:	ldr	r1, [pc, #776]	; 18998 <sprintf@plt+0x7368>
   1868c:	mov	r0, r4
   18690:	bl	11354 <strcasecmp@plt>
   18694:	cmp	r0, #0
   18698:	moveq	r5, #2
   1869c:	bne	186f0 <sprintf@plt+0x70c0>
   186a0:	mov	r2, #10
   186a4:	mov	r1, #0
   186a8:	ldr	r0, [r6, #4]
   186ac:	bl	1148c <strtol@plt>
   186b0:	sub	r2, r0, #1
   186b4:	ldr	r3, [pc, #736]	; 1899c <sprintf@plt+0x736c>
   186b8:	cmp	r2, r3
   186bc:	bhi	18744 <sprintf@plt+0x7114>
   186c0:	uxth	ip, r0
   186c4:	ldr	r3, [pc, #724]	; 189a0 <sprintf@plt+0x7370>
   186c8:	ldr	r2, [r3, #376]	; 0x178
   186cc:	cmp	r2, #0
   186d0:	bne	18784 <sprintf@plt+0x7154>
   186d4:	mov	r3, r0
   186d8:	ldr	r2, [r6]
   186dc:	ldr	r1, [pc, #704]	; 189a4 <sprintf@plt+0x7374>
   186e0:	mov	r0, #67	; 0x43
   186e4:	bl	121fc <sprintf@plt+0xbcc>
   186e8:	mov	r0, #3
   186ec:	bl	11618 <exit@plt>
   186f0:	ldr	r1, [pc, #688]	; 189a8 <sprintf@plt+0x7378>
   186f4:	mov	r0, r4
   186f8:	bl	11354 <strcasecmp@plt>
   186fc:	cmp	r0, #0
   18700:	moveq	r5, #3
   18704:	beq	186a0 <sprintf@plt+0x7070>
   18708:	ldr	r1, [pc, #668]	; 189ac <sprintf@plt+0x737c>
   1870c:	mov	r0, r4
   18710:	bl	11354 <strcasecmp@plt>
   18714:	cmp	r0, #0
   18718:	moveq	r5, #4
   1871c:	beq	186a0 <sprintf@plt+0x7070>
   18720:	mov	r2, #10
   18724:	mov	r1, #0
   18728:	ldr	r0, [r6, #4]
   1872c:	bl	1148c <strtol@plt>
   18730:	mov	r3, r0
   18734:	sub	r1, r0, #1
   18738:	ldr	r2, [pc, #604]	; 1899c <sprintf@plt+0x736c>
   1873c:	cmp	r1, r2
   18740:	bls	18760 <sprintf@plt+0x7130>
   18744:	ldr	r3, [r6, #4]
   18748:	ldr	r2, [r6]
   1874c:	ldr	r1, [pc, #604]	; 189b0 <sprintf@plt+0x7380>
   18750:	mov	r0, #67	; 0x43
   18754:	bl	121fc <sprintf@plt+0xbcc>
   18758:	mov	r0, #3
   1875c:	bl	11618 <exit@plt>
   18760:	ldr	r2, [r6]
   18764:	ldr	r1, [pc, #584]	; 189b4 <sprintf@plt+0x7384>
   18768:	mov	r0, #67	; 0x43
   1876c:	bl	121fc <sprintf@plt+0xbcc>
   18770:	mov	r0, #3
   18774:	bl	11618 <exit@plt>
   18778:	ldr	r2, [r2, #8]
   1877c:	cmp	r2, #0
   18780:	beq	186d4 <sprintf@plt+0x70a4>
   18784:	ldr	r4, [r2]
   18788:	ldr	r1, [r4, #16]
   1878c:	cmp	r1, r5
   18790:	bne	18778 <sprintf@plt+0x7148>
   18794:	ldrh	r1, [r4, #20]
   18798:	cmp	r1, ip
   1879c:	bne	18778 <sprintf@plt+0x7148>
   187a0:	cmp	r4, #0
   187a4:	beq	186d4 <sprintf@plt+0x70a4>
   187a8:	mov	r1, sp
   187ac:	ldr	r3, [pc, #516]	; 189b8 <sprintf@plt+0x7388>
   187b0:	ldr	r0, [r3]
   187b4:	bl	1142c <rb_dictionary_foreach_start@plt>
   187b8:	ldr	r7, [pc, #504]	; 189b8 <sprintf@plt+0x7388>
   187bc:	ldr	r8, [pc, #504]	; 189bc <sprintf@plt+0x738c>
   187c0:	mov	r9, #0
   187c4:	b	188b8 <sprintf@plt+0x7288>
   187c8:	ldr	r3, [pc, #496]	; 189c0 <sprintf@plt+0x7390>
   187cc:	mov	r2, #235	; 0xeb
   187d0:	ldr	r1, [pc, #492]	; 189c4 <sprintf@plt+0x7394>
   187d4:	ldr	r0, [pc, #492]	; 189c8 <sprintf@plt+0x7398>
   187d8:	bl	113c0 <__assert_fail@plt>
   187dc:	ldr	r3, [pc, #476]	; 189c0 <sprintf@plt+0x7390>
   187e0:	mov	r2, #236	; 0xec
   187e4:	ldr	r1, [pc, #472]	; 189c4 <sprintf@plt+0x7394>
   187e8:	ldr	r0, [pc, #476]	; 189cc <sprintf@plt+0x739c>
   187ec:	bl	113c0 <__assert_fail@plt>
   187f0:	mov	r0, r5
   187f4:	bl	171a8 <sprintf@plt+0x5b78>
   187f8:	b	18898 <sprintf@plt+0x7268>
   187fc:	ldr	r3, [r3, #8]
   18800:	cmp	r3, #0
   18804:	beq	18898 <sprintf@plt+0x7268>
   18808:	ldr	r0, [r3]
   1880c:	ldr	r2, [r0, #8]
   18810:	ldrh	r1, [r2, #20]
   18814:	cmp	r1, ip
   18818:	bne	187fc <sprintf@plt+0x71cc>
   1881c:	ldr	r1, [r2, #16]
   18820:	ldr	r2, [r4, #16]
   18824:	cmp	r1, r2
   18828:	bne	187fc <sprintf@plt+0x71cc>
   1882c:	cmn	r0, #16
   18830:	beq	187c8 <sprintf@plt+0x7198>
   18834:	cmp	r6, #0
   18838:	beq	187dc <sprintf@plt+0x71ac>
   1883c:	ldr	r3, [r0, #24]
   18840:	cmp	r3, #0
   18844:	ldrne	r2, [r0, #20]
   18848:	strne	r2, [r3, #4]
   1884c:	ldreq	r3, [r0, #20]
   18850:	streq	r3, [r6, #4]
   18854:	ldr	r3, [r0, #20]
   18858:	cmp	r3, #0
   1885c:	ldrne	r2, [r0, #24]
   18860:	strne	r2, [r3, #8]
   18864:	ldreq	r3, [r0, #24]
   18868:	streq	r3, [r6]
   1886c:	str	r9, [r0, #20]
   18870:	str	r9, [r0, #24]
   18874:	ldr	r3, [r6, #8]
   18878:	sub	r3, r3, #1
   1887c:	str	r3, [r6, #8]
   18880:	cmp	r0, #0
   18884:	beq	1888c <sprintf@plt+0x725c>
   18888:	bl	113f0 <free@plt>
   1888c:	ldr	r3, [r6, #8]
   18890:	cmp	r3, #0
   18894:	beq	187f0 <sprintf@plt+0x71c0>
   18898:	ldr	r3, [r5, #460]	; 0x1cc
   1889c:	sub	r3, r3, #1
   188a0:	str	r3, [r5, #460]	; 0x1cc
   188a4:	cmp	r3, #0
   188a8:	beq	18904 <sprintf@plt+0x72d4>
   188ac:	mov	r1, sp
   188b0:	ldr	r0, [r7]
   188b4:	bl	113e4 <rb_dictionary_foreach_next@plt>
   188b8:	mov	r1, sp
   188bc:	ldr	r0, [r7]
   188c0:	bl	11348 <rb_dictionary_foreach_cur@plt>
   188c4:	subs	r5, r0, #0
   188c8:	beq	18910 <sprintf@plt+0x72e0>
   188cc:	ldr	r3, [r5, #464]	; 0x1d0
   188d0:	ldr	r2, [r8, #12]
   188d4:	add	r3, r3, r2, lsl #4
   188d8:	ldr	r6, [r3, #8]
   188dc:	cmp	r6, #0
   188e0:	beq	188ac <sprintf@plt+0x727c>
   188e4:	ldr	r3, [r5, #460]	; 0x1cc
   188e8:	add	r3, r3, #1
   188ec:	str	r3, [r5, #460]	; 0x1cc
   188f0:	ldr	r3, [r6]
   188f4:	cmp	r3, #0
   188f8:	beq	18898 <sprintf@plt+0x7268>
   188fc:	ldrh	ip, [r4, #20]
   18900:	b	18808 <sprintf@plt+0x71d8>
   18904:	mov	r0, r5
   18908:	bl	1271c <sprintf@plt+0x10ec>
   1890c:	b	188ac <sprintf@plt+0x727c>
   18910:	cmn	r4, #28
   18914:	beq	18978 <sprintf@plt+0x7348>
   18918:	ldr	r3, [r4, #36]	; 0x24
   1891c:	cmp	r3, #0
   18920:	ldr	r2, [r4, #32]
   18924:	strne	r2, [r3, #4]
   18928:	ldreq	r3, [pc, #112]	; 189a0 <sprintf@plt+0x7370>
   1892c:	streq	r2, [r3, #380]	; 0x17c
   18930:	ldr	r3, [r4, #32]
   18934:	cmp	r3, #0
   18938:	ldr	r2, [r4, #36]	; 0x24
   1893c:	strne	r2, [r3, #8]
   18940:	ldreq	r3, [pc, #88]	; 189a0 <sprintf@plt+0x7370>
   18944:	streq	r2, [r3, #376]	; 0x178
   18948:	ldr	r5, [pc, #80]	; 189a0 <sprintf@plt+0x7370>
   1894c:	ldr	r3, [r5, #384]	; 0x180
   18950:	sub	r3, r3, #1
   18954:	str	r3, [r5, #384]	; 0x180
   18958:	mov	r0, r4
   1895c:	bl	113f0 <free@plt>
   18960:	ldr	r3, [r5, #384]	; 0x180
   18964:	cmp	r3, #0
   18968:	moveq	r2, #0
   1896c:	strbeq	r2, [r5, #388]	; 0x184
   18970:	add	sp, sp, #12
   18974:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18978:	ldr	r3, [pc, #64]	; 189c0 <sprintf@plt+0x7390>
   1897c:	mov	r2, #235	; 0xeb
   18980:	ldr	r1, [pc, #60]	; 189c4 <sprintf@plt+0x7394>
   18984:	ldr	r0, [pc, #60]	; 189c8 <sprintf@plt+0x7398>
   18988:	bl	113c0 <__assert_fail@plt>
   1898c:	mov	r5, #1
   18990:	b	186a0 <sprintf@plt+0x7070>
   18994:	andeq	r9, r1, r4, ror #23
   18998:	andeq	r9, r1, ip, ror #23
   1899c:	strdeq	pc, [r0], -lr
   189a0:	andeq	lr, r2, ip, ror #31
   189a4:	andeq	r9, r1, r0, lsl sp
   189a8:	strdeq	r9, [r1], -r4
   189ac:	andeq	r9, r1, r0, lsl #24
   189b0:	andeq	r9, r1, r8, lsr #25
   189b4:	ldrdeq	r9, [r1], -r8
   189b8:	andeq	pc, r2, r8, ror r1	; <UNPREDICTABLE>
   189bc:	andeq	sl, r2, r4, lsr #29
   189c0:	ldrdeq	r9, [r1], -r4
   189c4:	andeq	r9, r1, r0, lsr #32
   189c8:	andeq	r9, r1, ip, lsr r0
   189cc:	andeq	r9, r1, r0, asr r5
   189d0:	cmp	r1, #0
   189d4:	beq	18be0 <sprintf@plt+0x75b0>
   189d8:	eor	ip, r0, r1
   189dc:	rsbmi	r1, r1, #0
   189e0:	subs	r2, r1, #1
   189e4:	beq	18bac <sprintf@plt+0x757c>
   189e8:	movs	r3, r0
   189ec:	rsbmi	r3, r0, #0
   189f0:	cmp	r3, r1
   189f4:	bls	18bb8 <sprintf@plt+0x7588>
   189f8:	tst	r1, r2
   189fc:	beq	18bc8 <sprintf@plt+0x7598>
   18a00:	clz	r2, r3
   18a04:	clz	r0, r1
   18a08:	sub	r2, r0, r2
   18a0c:	rsbs	r2, r2, #31
   18a10:	addne	r2, r2, r2, lsl #1
   18a14:	mov	r0, #0
   18a18:	addne	pc, pc, r2, lsl #2
   18a1c:	nop			; (mov r0, r0)
   18a20:	cmp	r3, r1, lsl #31
   18a24:	adc	r0, r0, r0
   18a28:	subcs	r3, r3, r1, lsl #31
   18a2c:	cmp	r3, r1, lsl #30
   18a30:	adc	r0, r0, r0
   18a34:	subcs	r3, r3, r1, lsl #30
   18a38:	cmp	r3, r1, lsl #29
   18a3c:	adc	r0, r0, r0
   18a40:	subcs	r3, r3, r1, lsl #29
   18a44:	cmp	r3, r1, lsl #28
   18a48:	adc	r0, r0, r0
   18a4c:	subcs	r3, r3, r1, lsl #28
   18a50:	cmp	r3, r1, lsl #27
   18a54:	adc	r0, r0, r0
   18a58:	subcs	r3, r3, r1, lsl #27
   18a5c:	cmp	r3, r1, lsl #26
   18a60:	adc	r0, r0, r0
   18a64:	subcs	r3, r3, r1, lsl #26
   18a68:	cmp	r3, r1, lsl #25
   18a6c:	adc	r0, r0, r0
   18a70:	subcs	r3, r3, r1, lsl #25
   18a74:	cmp	r3, r1, lsl #24
   18a78:	adc	r0, r0, r0
   18a7c:	subcs	r3, r3, r1, lsl #24
   18a80:	cmp	r3, r1, lsl #23
   18a84:	adc	r0, r0, r0
   18a88:	subcs	r3, r3, r1, lsl #23
   18a8c:	cmp	r3, r1, lsl #22
   18a90:	adc	r0, r0, r0
   18a94:	subcs	r3, r3, r1, lsl #22
   18a98:	cmp	r3, r1, lsl #21
   18a9c:	adc	r0, r0, r0
   18aa0:	subcs	r3, r3, r1, lsl #21
   18aa4:	cmp	r3, r1, lsl #20
   18aa8:	adc	r0, r0, r0
   18aac:	subcs	r3, r3, r1, lsl #20
   18ab0:	cmp	r3, r1, lsl #19
   18ab4:	adc	r0, r0, r0
   18ab8:	subcs	r3, r3, r1, lsl #19
   18abc:	cmp	r3, r1, lsl #18
   18ac0:	adc	r0, r0, r0
   18ac4:	subcs	r3, r3, r1, lsl #18
   18ac8:	cmp	r3, r1, lsl #17
   18acc:	adc	r0, r0, r0
   18ad0:	subcs	r3, r3, r1, lsl #17
   18ad4:	cmp	r3, r1, lsl #16
   18ad8:	adc	r0, r0, r0
   18adc:	subcs	r3, r3, r1, lsl #16
   18ae0:	cmp	r3, r1, lsl #15
   18ae4:	adc	r0, r0, r0
   18ae8:	subcs	r3, r3, r1, lsl #15
   18aec:	cmp	r3, r1, lsl #14
   18af0:	adc	r0, r0, r0
   18af4:	subcs	r3, r3, r1, lsl #14
   18af8:	cmp	r3, r1, lsl #13
   18afc:	adc	r0, r0, r0
   18b00:	subcs	r3, r3, r1, lsl #13
   18b04:	cmp	r3, r1, lsl #12
   18b08:	adc	r0, r0, r0
   18b0c:	subcs	r3, r3, r1, lsl #12
   18b10:	cmp	r3, r1, lsl #11
   18b14:	adc	r0, r0, r0
   18b18:	subcs	r3, r3, r1, lsl #11
   18b1c:	cmp	r3, r1, lsl #10
   18b20:	adc	r0, r0, r0
   18b24:	subcs	r3, r3, r1, lsl #10
   18b28:	cmp	r3, r1, lsl #9
   18b2c:	adc	r0, r0, r0
   18b30:	subcs	r3, r3, r1, lsl #9
   18b34:	cmp	r3, r1, lsl #8
   18b38:	adc	r0, r0, r0
   18b3c:	subcs	r3, r3, r1, lsl #8
   18b40:	cmp	r3, r1, lsl #7
   18b44:	adc	r0, r0, r0
   18b48:	subcs	r3, r3, r1, lsl #7
   18b4c:	cmp	r3, r1, lsl #6
   18b50:	adc	r0, r0, r0
   18b54:	subcs	r3, r3, r1, lsl #6
   18b58:	cmp	r3, r1, lsl #5
   18b5c:	adc	r0, r0, r0
   18b60:	subcs	r3, r3, r1, lsl #5
   18b64:	cmp	r3, r1, lsl #4
   18b68:	adc	r0, r0, r0
   18b6c:	subcs	r3, r3, r1, lsl #4
   18b70:	cmp	r3, r1, lsl #3
   18b74:	adc	r0, r0, r0
   18b78:	subcs	r3, r3, r1, lsl #3
   18b7c:	cmp	r3, r1, lsl #2
   18b80:	adc	r0, r0, r0
   18b84:	subcs	r3, r3, r1, lsl #2
   18b88:	cmp	r3, r1, lsl #1
   18b8c:	adc	r0, r0, r0
   18b90:	subcs	r3, r3, r1, lsl #1
   18b94:	cmp	r3, r1
   18b98:	adc	r0, r0, r0
   18b9c:	subcs	r3, r3, r1
   18ba0:	cmp	ip, #0
   18ba4:	rsbmi	r0, r0, #0
   18ba8:	bx	lr
   18bac:	teq	ip, r0
   18bb0:	rsbmi	r0, r0, #0
   18bb4:	bx	lr
   18bb8:	movcc	r0, #0
   18bbc:	asreq	r0, ip, #31
   18bc0:	orreq	r0, r0, #1
   18bc4:	bx	lr
   18bc8:	clz	r2, r1
   18bcc:	rsb	r2, r2, #31
   18bd0:	cmp	ip, #0
   18bd4:	lsr	r0, r3, r2
   18bd8:	rsbmi	r0, r0, #0
   18bdc:	bx	lr
   18be0:	cmp	r0, #0
   18be4:	mvngt	r0, #-2147483648	; 0x80000000
   18be8:	movlt	r0, #-2147483648	; 0x80000000
   18bec:	b	18c10 <sprintf@plt+0x75e0>
   18bf0:	cmp	r1, #0
   18bf4:	beq	18be0 <sprintf@plt+0x75b0>
   18bf8:	push	{r0, r1, lr}
   18bfc:	bl	189d8 <sprintf@plt+0x73a8>
   18c00:	pop	{r1, r2, lr}
   18c04:	mul	r3, r2, r0
   18c08:	sub	r1, r1, r3
   18c0c:	bx	lr
   18c10:	push	{r1, lr}
   18c14:	mov	r0, #8
   18c18:	bl	114b0 <raise@plt>
   18c1c:	pop	{r1, pc}
   18c20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18c24:	mov	r7, r0
   18c28:	ldr	r6, [pc, #72]	; 18c78 <sprintf@plt+0x7648>
   18c2c:	ldr	r5, [pc, #72]	; 18c7c <sprintf@plt+0x764c>
   18c30:	add	r6, pc, r6
   18c34:	add	r5, pc, r5
   18c38:	sub	r6, r6, r5
   18c3c:	mov	r8, r1
   18c40:	mov	r9, r2
   18c44:	bl	1122c <sigemptyset@plt-0x20>
   18c48:	asrs	r6, r6, #2
   18c4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c50:	mov	r4, #0
   18c54:	add	r4, r4, #1
   18c58:	ldr	r3, [r5], #4
   18c5c:	mov	r2, r9
   18c60:	mov	r1, r8
   18c64:	mov	r0, r7
   18c68:	blx	r3
   18c6c:	cmp	r6, r4
   18c70:	bne	18c54 <sprintf@plt+0x7624>
   18c74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c78:			; <UNDEFINED> instruction: 0x000112b0
   18c7c:	andeq	r1, r1, r8, lsr #5
   18c80:	bx	lr

Disassembly of section .fini:

00018c84 <.fini>:
   18c84:	push	{r3, lr}
   18c88:	pop	{r3, pc}
