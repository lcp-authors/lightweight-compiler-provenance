
../repos/tbeu-matio-3dd266d/test/test_snprintf:     file format elf32-littlearm


Disassembly of section .init:

00010424 <.init>:
   10424:	push	{r3, lr}
   10428:	bl	104fc <abort@plt+0x4c>
   1042c:	pop	{r3, pc}

Disassembly of section .plt:

00010430 <strcmp@plt-0x14>:
   10430:	push	{lr}		; (str lr, [sp, #-4]!)
   10434:	ldr	lr, [pc, #4]	; 10440 <strcmp@plt-0x4>
   10438:	add	lr, pc, lr
   1043c:	ldr	pc, [lr, #8]!
   10440:	andeq	r0, r1, r0, asr #23

00010444 <strcmp@plt>:
   10444:	add	ip, pc, #0, 12
   10448:	add	ip, ip, #16, 20	; 0x10000
   1044c:	ldr	pc, [ip, #3008]!	; 0xbc0

00010450 <printf@plt>:
   10450:	add	ip, pc, #0, 12
   10454:	add	ip, ip, #16, 20	; 0x10000
   10458:	ldr	pc, [ip, #3000]!	; 0xbb8

0001045c <memcpy@plt>:
   1045c:	add	ip, pc, #0, 12
   10460:	add	ip, ip, #16, 20	; 0x10000
   10464:	ldr	pc, [ip, #2992]!	; 0xbb0

00010468 <pow@plt>:
   10468:	add	ip, pc, #0, 12
   1046c:	add	ip, ip, #16, 20	; 0x10000
   10470:	ldr	pc, [ip, #2984]!	; 0xba8

00010474 <puts@plt>:
   10474:	add	ip, pc, #0, 12
   10478:	add	ip, ip, #16, 20	; 0x10000
   1047c:	ldr	pc, [ip, #2976]!	; 0xba0

00010480 <__libc_start_main@plt>:
   10480:	add	ip, pc, #0, 12
   10484:	add	ip, ip, #16, 20	; 0x10000
   10488:	ldr	pc, [ip, #2968]!	; 0xb98

0001048c <__gmon_start__@plt>:
   1048c:	add	ip, pc, #0, 12
   10490:	add	ip, ip, #16, 20	; 0x10000
   10494:	ldr	pc, [ip, #2960]!	; 0xb90

00010498 <snprintf@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #16, 20	; 0x10000
   104a0:	ldr	pc, [ip, #2952]!	; 0xb88

000104a4 <sprintf@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2944]!	; 0xb80

000104b0 <abort@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2936]!	; 0xb78

Disassembly of section .text:

000104c0 <.text>:
   104c0:	mov	fp, #0
   104c4:	mov	lr, #0
   104c8:	pop	{r1}		; (ldr r1, [sp], #4)
   104cc:	mov	r2, sp
   104d0:	push	{r2}		; (str r2, [sp, #-4]!)
   104d4:	push	{r0}		; (str r0, [sp, #-4]!)
   104d8:	ldr	ip, [pc, #16]	; 104f0 <abort@plt+0x40>
   104dc:	push	{ip}		; (str ip, [sp, #-4]!)
   104e0:	ldr	r0, [pc, #12]	; 104f4 <abort@plt+0x44>
   104e4:	ldr	r3, [pc, #12]	; 104f8 <abort@plt+0x48>
   104e8:	bl	10480 <__libc_start_main@plt>
   104ec:	bl	104b0 <abort@plt>
   104f0:	andeq	r0, r1, r0, lsr #22
   104f4:			; <UNDEFINED> instruction: 0x000105b0
   104f8:	andeq	r0, r1, r0, asr #21
   104fc:	ldr	r3, [pc, #20]	; 10518 <abort@plt+0x68>
   10500:	ldr	r2, [pc, #20]	; 1051c <abort@plt+0x6c>
   10504:	add	r3, pc, r3
   10508:	ldr	r2, [r3, r2]
   1050c:	cmp	r2, #0
   10510:	bxeq	lr
   10514:	b	1048c <__gmon_start__@plt>
   10518:	strdeq	r0, [r1], -r4
   1051c:	andeq	r0, r0, r4, lsr r0
   10520:	ldr	r0, [pc, #24]	; 10540 <abort@plt+0x90>
   10524:	ldr	r3, [pc, #24]	; 10544 <abort@plt+0x94>
   10528:	cmp	r3, r0
   1052c:	bxeq	lr
   10530:	ldr	r3, [pc, #16]	; 10548 <abort@plt+0x98>
   10534:	cmp	r3, #0
   10538:	bxeq	lr
   1053c:	bx	r3
   10540:	andeq	r1, r2, r0, asr #32
   10544:	andeq	r1, r2, r0, asr #32
   10548:	andeq	r0, r0, r0
   1054c:	ldr	r0, [pc, #36]	; 10578 <abort@plt+0xc8>
   10550:	ldr	r1, [pc, #36]	; 1057c <abort@plt+0xcc>
   10554:	sub	r1, r1, r0
   10558:	asr	r1, r1, #2
   1055c:	add	r1, r1, r1, lsr #31
   10560:	asrs	r1, r1, #1
   10564:	bxeq	lr
   10568:	ldr	r3, [pc, #16]	; 10580 <abort@plt+0xd0>
   1056c:	cmp	r3, #0
   10570:	bxeq	lr
   10574:	bx	r3
   10578:	andeq	r1, r2, r0, asr #32
   1057c:	andeq	r1, r2, r0, asr #32
   10580:	andeq	r0, r0, r0
   10584:	push	{r4, lr}
   10588:	ldr	r4, [pc, #24]	; 105a8 <abort@plt+0xf8>
   1058c:	ldrb	r3, [r4]
   10590:	cmp	r3, #0
   10594:	popne	{r4, pc}
   10598:	bl	10520 <abort@plt+0x70>
   1059c:	mov	r3, #1
   105a0:	strb	r3, [r4]
   105a4:	pop	{r4, pc}
   105a8:	andeq	r1, r2, r0, asr #32
   105ac:	b	1054c <abort@plt+0x9c>
   105b0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   105b4:	strd	r6, [sp, #8]
   105b8:	strd	r8, [sp, #16]
   105bc:	strd	sl, [sp, #24]
   105c0:	str	lr, [sp, #32]
   105c4:	vpush	{d8-d10}
   105c8:	sub	sp, sp, #2368	; 0x940
   105cc:	sub	sp, sp, #12
   105d0:	movw	r4, #2872	; 0xb38
   105d4:	movt	r4, #1
   105d8:	add	r3, sp, #264	; 0x108
   105dc:	ldrd	r0, [r4]
   105e0:	strd	r0, [r3]
   105e4:	ldrd	r0, [r4, #8]
   105e8:	strd	r0, [r3, #8]
   105ec:	ldrd	r0, [r4, #16]
   105f0:	strd	r0, [r3, #16]
   105f4:	ldrd	r0, [r4, #24]
   105f8:	strd	r0, [r3, #24]
   105fc:	ldrd	r0, [r4, #32]
   10600:	strd	r0, [r3, #32]
   10604:	ldrd	r0, [r4, #40]	; 0x28
   10608:	strd	r0, [r3, #40]	; 0x28
   1060c:	ldrd	r0, [r4, #48]	; 0x30
   10610:	strd	r0, [r3, #48]	; 0x30
   10614:	ldrd	r0, [r4, #56]	; 0x38
   10618:	strd	r0, [r3, #56]	; 0x38
   1061c:	mov	r2, #112	; 0x70
   10620:	add	r1, r4, #64	; 0x40
   10624:	add	r0, sp, #152	; 0x98
   10628:	bl	1045c <memcpy@plt>
   1062c:	ldrd	r0, [r4, #176]	; 0xb0
   10630:	strd	r0, [sp, #108]	; 0x6c
   10634:	ldrd	r0, [r4, #184]	; 0xb8
   10638:	strd	r0, [sp, #116]	; 0x74
   1063c:	ldrd	r0, [r4, #192]	; 0xc0
   10640:	strd	r0, [sp, #124]	; 0x7c
   10644:	ldrd	r0, [r4, #200]	; 0xc8
   10648:	strd	r0, [sp, #132]	; 0x84
   1064c:	ldrd	r0, [r4, #208]	; 0xd0
   10650:	strd	r0, [sp, #140]	; 0x8c
   10654:	ldr	r3, [r4, #216]	; 0xd8
   10658:	str	r3, [sp, #148]	; 0x94
   1065c:	ldrd	r0, [r4, #220]	; 0xdc
   10660:	strd	r0, [sp, #84]	; 0x54
   10664:	ldrd	r0, [r4, #228]	; 0xe4
   10668:	strd	r0, [sp, #92]	; 0x5c
   1066c:	ldrd	r2, [r4, #236]	; 0xec
   10670:	strd	r2, [sp, #100]	; 0x64
   10674:	add	r3, r4, #244	; 0xf4
   10678:	ldrd	r0, [r4, #244]	; 0xf4
   1067c:	strd	r0, [sp, #40]	; 0x28
   10680:	ldrd	r0, [r4, #252]	; 0xfc
   10684:	strd	r0, [sp, #48]	; 0x30
   10688:	ldrd	r0, [r3, #16]
   1068c:	strd	r0, [sp, #56]	; 0x38
   10690:	ldrd	r0, [r3, #24]
   10694:	strd	r0, [sp, #64]	; 0x40
   10698:	ldrd	r0, [r3, #32]
   1069c:	strd	r0, [sp, #72]	; 0x48
   106a0:	ldr	r3, [r4, #284]	; 0x11c
   106a4:	str	r3, [sp, #80]	; 0x50
   106a8:	add	r4, r4, #288	; 0x120
   106ac:	ldrd	r2, [r4]
   106b0:	strd	r2, [sp, #20]
   106b4:	ldrd	r2, [r4, #8]
   106b8:	strd	r2, [sp, #28]
   106bc:	ldr	r3, [r4, #16]
   106c0:	str	r3, [sp, #36]	; 0x24
   106c4:	movw	r0, #3180	; 0xc6c
   106c8:	movt	r0, #1
   106cc:	bl	10474 <puts@plt>
   106d0:	ldr	r6, [sp, #264]	; 0x108
   106d4:	cmp	r6, #0
   106d8:	beq	107e0 <abort@plt+0x330>
   106dc:	add	fp, sp, #264	; 0x108
   106e0:	mov	r4, #0
   106e4:	mov	r5, r4
   106e8:	movw	r3, #3236	; 0xca4
   106ec:	movt	r3, #1
   106f0:	str	r3, [sp, #12]
   106f4:	movw	r3, #3308	; 0xcec
   106f8:	movt	r3, #1
   106fc:	str	r3, [sp, #8]
   10700:	b	107c4 <abort@plt+0x314>
   10704:	add	r3, sp, #328	; 0x148
   10708:	add	r2, sp, #1344	; 0x540
   1070c:	add	r2, r2, #8
   10710:	mov	r1, r6
   10714:	ldr	r0, [sp, #12]
   10718:	bl	10450 <printf@plt>
   1071c:	add	r5, r5, #1
   10720:	b	107ac <abort@plt+0x2fc>
   10724:	mov	r3, r6
   10728:	mov	r2, r8
   1072c:	mov	r1, r7
   10730:	ldr	r0, [sp, #8]
   10734:	bl	10450 <printf@plt>
   10738:	add	r5, r5, #1
   1073c:	add	r4, r4, #1
   10740:	vldmia	r9!, {d8}
   10744:	vcmp.f64	d8, #0.0
   10748:	vmrs	APSR_nzcv, fpscr
   1074c:	beq	107b8 <abort@plt+0x308>
   10750:	vstr	d8, [sp]
   10754:	mov	r2, r6
   10758:	mov	r1, sl
   1075c:	mov	r0, sl
   10760:	bl	10498 <snprintf@plt>
   10764:	mov	r7, r0
   10768:	vstr	d8, [sp]
   1076c:	mov	r2, r6
   10770:	mov	r1, #1024	; 0x400
   10774:	add	r0, sp, #1344	; 0x540
   10778:	add	r0, r0, #8
   1077c:	bl	10498 <snprintf@plt>
   10780:	mov	r8, r0
   10784:	vmov	r2, r3, d8
   10788:	mov	r1, r6
   1078c:	add	r0, sp, #328	; 0x148
   10790:	bl	104a4 <sprintf@plt>
   10794:	add	r1, sp, #328	; 0x148
   10798:	add	r0, sp, #1344	; 0x540
   1079c:	add	r0, r0, #8
   107a0:	bl	10444 <strcmp@plt>
   107a4:	cmp	r0, #0
   107a8:	bne	10704 <abort@plt+0x254>
   107ac:	cmp	r7, r8
   107b0:	beq	1073c <abort@plt+0x28c>
   107b4:	b	10724 <abort@plt+0x274>
   107b8:	ldr	r6, [fp, #4]!
   107bc:	cmp	r6, #0
   107c0:	beq	107e8 <abort@plt+0x338>
   107c4:	vldr	d8, [sp, #152]	; 0x98
   107c8:	vcmp.f64	d8, #0.0
   107cc:	vmrs	APSR_nzcv, fpscr
   107d0:	addne	r9, sp, #160	; 0xa0
   107d4:	movne	sl, #0
   107d8:	bne	10750 <abort@plt+0x2a0>
   107dc:	b	107b8 <abort@plt+0x308>
   107e0:	mov	r4, #0
   107e4:	mov	r5, r4
   107e8:	ldr	r7, [sp, #108]	; 0x6c
   107ec:	cmp	r7, #0
   107f0:	beq	108e4 <abort@plt+0x434>
   107f4:	add	fp, sp, #108	; 0x6c
   107f8:	movw	r3, #3236	; 0xca4
   107fc:	movt	r3, #1
   10800:	str	r3, [sp, #12]
   10804:	movw	r3, #3308	; 0xcec
   10808:	movt	r3, #1
   1080c:	str	r3, [sp, #8]
   10810:	b	108d0 <abort@plt+0x420>
   10814:	add	r3, sp, #328	; 0x148
   10818:	add	r2, sp, #1344	; 0x540
   1081c:	add	r2, r2, #8
   10820:	mov	r1, r7
   10824:	ldr	r0, [sp, #12]
   10828:	bl	10450 <printf@plt>
   1082c:	add	r5, r5, #1
   10830:	b	108b8 <abort@plt+0x408>
   10834:	mov	r3, r7
   10838:	mov	r2, r9
   1083c:	mov	r1, r8
   10840:	ldr	r0, [sp, #8]
   10844:	bl	10450 <printf@plt>
   10848:	add	r5, r5, #1
   1084c:	add	r4, r4, #1
   10850:	ldr	r6, [sl, #4]!
   10854:	cmp	r6, #0
   10858:	beq	108c4 <abort@plt+0x414>
   1085c:	mov	r3, r6
   10860:	mov	r2, r7
   10864:	mov	r1, #0
   10868:	mov	r0, r1
   1086c:	bl	10498 <snprintf@plt>
   10870:	mov	r8, r0
   10874:	mov	r3, r6
   10878:	mov	r2, r7
   1087c:	mov	r1, #1024	; 0x400
   10880:	add	r0, sp, #1344	; 0x540
   10884:	add	r0, r0, #8
   10888:	bl	10498 <snprintf@plt>
   1088c:	mov	r9, r0
   10890:	mov	r2, r6
   10894:	mov	r1, r7
   10898:	add	r0, sp, #328	; 0x148
   1089c:	bl	104a4 <sprintf@plt>
   108a0:	add	r1, sp, #328	; 0x148
   108a4:	add	r0, sp, #1344	; 0x540
   108a8:	add	r0, r0, #8
   108ac:	bl	10444 <strcmp@plt>
   108b0:	cmp	r0, #0
   108b4:	bne	10814 <abort@plt+0x364>
   108b8:	cmp	r8, r9
   108bc:	beq	1084c <abort@plt+0x39c>
   108c0:	b	10834 <abort@plt+0x384>
   108c4:	ldr	r7, [fp, #4]!
   108c8:	cmp	r7, #0
   108cc:	beq	108e4 <abort@plt+0x434>
   108d0:	ldr	r6, [sp, #84]	; 0x54
   108d4:	cmp	r6, #0
   108d8:	addne	sl, sp, #84	; 0x54
   108dc:	bne	1085c <abort@plt+0x3ac>
   108e0:	b	108c4 <abort@plt+0x414>
   108e4:	ldr	r7, [sp, #40]	; 0x28
   108e8:	cmp	r7, #0
   108ec:	beq	109e0 <abort@plt+0x530>
   108f0:	add	fp, sp, #40	; 0x28
   108f4:	movw	r3, #3236	; 0xca4
   108f8:	movt	r3, #1
   108fc:	str	r3, [sp, #12]
   10900:	movw	r3, #3308	; 0xcec
   10904:	movt	r3, #1
   10908:	str	r3, [sp, #8]
   1090c:	b	109cc <abort@plt+0x51c>
   10910:	add	r3, sp, #328	; 0x148
   10914:	add	r2, sp, #1344	; 0x540
   10918:	add	r2, r2, #8
   1091c:	mov	r1, r7
   10920:	ldr	r0, [sp, #12]
   10924:	bl	10450 <printf@plt>
   10928:	add	r5, r5, #1
   1092c:	b	109b4 <abort@plt+0x504>
   10930:	mov	r3, r7
   10934:	mov	r2, r9
   10938:	mov	r1, r8
   1093c:	ldr	r0, [sp, #8]
   10940:	bl	10450 <printf@plt>
   10944:	add	r5, r5, #1
   10948:	add	r4, r4, #1
   1094c:	ldr	r6, [sl], #4
   10950:	cmp	r6, #0
   10954:	beq	109c0 <abort@plt+0x510>
   10958:	mov	r3, r6
   1095c:	mov	r2, r7
   10960:	mov	r1, #0
   10964:	mov	r0, r1
   10968:	bl	10498 <snprintf@plt>
   1096c:	mov	r8, r0
   10970:	mov	r3, r6
   10974:	mov	r2, r7
   10978:	mov	r1, #1024	; 0x400
   1097c:	add	r0, sp, #1344	; 0x540
   10980:	add	r0, r0, #8
   10984:	bl	10498 <snprintf@plt>
   10988:	mov	r9, r0
   1098c:	mov	r2, r6
   10990:	mov	r1, r7
   10994:	add	r0, sp, #328	; 0x148
   10998:	bl	104a4 <sprintf@plt>
   1099c:	add	r1, sp, #328	; 0x148
   109a0:	add	r0, sp, #1344	; 0x540
   109a4:	add	r0, r0, #8
   109a8:	bl	10444 <strcmp@plt>
   109ac:	cmp	r0, #0
   109b0:	bne	10910 <abort@plt+0x460>
   109b4:	cmp	r8, r9
   109b8:	beq	10948 <abort@plt+0x498>
   109bc:	b	10930 <abort@plt+0x480>
   109c0:	ldr	r7, [fp, #4]!
   109c4:	cmp	r7, #0
   109c8:	beq	109e0 <abort@plt+0x530>
   109cc:	ldr	r6, [sp, #20]
   109d0:	cmp	r6, #0
   109d4:	addne	sl, sp, #24
   109d8:	bne	10958 <abort@plt+0x4a8>
   109dc:	b	109c0 <abort@plt+0x510>
   109e0:	mov	r2, r4
   109e4:	mov	r1, r5
   109e8:	movw	r0, #3340	; 0xd0c
   109ec:	movt	r0, #1
   109f0:	bl	10450 <printf@plt>
   109f4:	movw	r0, #3368	; 0xd28
   109f8:	movt	r0, #1
   109fc:	bl	10474 <puts@plt>
   10a00:	mov	r4, #0
   10a04:	vldr	d10, [pc, #164]	; 10ab0 <abort@plt+0x600>
   10a08:	vldr	d9, [pc, #168]	; 10ab8 <abort@plt+0x608>
   10a0c:	movw	r5, #3404	; 0xd4c
   10a10:	movt	r5, #1
   10a14:	vmov	s15, r4
   10a18:	vcvt.f64.s32	d1, s15
   10a1c:	vmov.f64	d0, d10
   10a20:	bl	10468 <pow@plt>
   10a24:	vmul.f64	d8, d0, d9
   10a28:	vstr	d8, [sp]
   10a2c:	mov	r2, r5
   10a30:	mov	r1, #1024	; 0x400
   10a34:	add	r0, sp, #1344	; 0x540
   10a38:	add	r0, r0, #8
   10a3c:	bl	10498 <snprintf@plt>
   10a40:	vmov	r2, r3, d8
   10a44:	mov	r1, r5
   10a48:	add	r0, sp, #328	; 0x148
   10a4c:	bl	104a4 <sprintf@plt>
   10a50:	add	r1, sp, #328	; 0x148
   10a54:	add	r0, sp, #1344	; 0x540
   10a58:	add	r0, r0, #8
   10a5c:	bl	10444 <strcmp@plt>
   10a60:	cmp	r0, #0
   10a64:	bne	10a78 <abort@plt+0x5c8>
   10a68:	add	r4, r4, #1
   10a6c:	cmp	r4, #100	; 0x64
   10a70:	bne	10a14 <abort@plt+0x564>
   10a74:	b	10a88 <abort@plt+0x5d8>
   10a78:	sub	r1, r4, #1
   10a7c:	movw	r0, #3412	; 0xd54
   10a80:	movt	r0, #1
   10a84:	bl	10450 <printf@plt>
   10a88:	mov	r0, #0
   10a8c:	add	sp, sp, #2368	; 0x940
   10a90:	add	sp, sp, #12
   10a94:	vpop	{d8-d10}
   10a98:	ldrd	r4, [sp]
   10a9c:	ldrd	r6, [sp, #8]
   10aa0:	ldrd	r8, [sp, #16]
   10aa4:	ldrd	sl, [sp, #24]
   10aa8:	add	sp, sp, #32
   10aac:	pop	{pc}		; (ldr pc, [sp], #4)
   10ab0:	andeq	r0, r0, r0
   10ab4:	eormi	r0, r4, r0
   10ab8:	smlsldcc	pc, r6, pc, r6	; <UNPREDICTABLE>
   10abc:	svccc	0x00bf9add
   10ac0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ac4:	mov	r7, r0
   10ac8:	ldr	r6, [pc, #72]	; 10b18 <abort@plt+0x668>
   10acc:	ldr	r5, [pc, #72]	; 10b1c <abort@plt+0x66c>
   10ad0:	add	r6, pc, r6
   10ad4:	add	r5, pc, r5
   10ad8:	sub	r6, r6, r5
   10adc:	mov	r8, r1
   10ae0:	mov	r9, r2
   10ae4:	bl	10424 <strcmp@plt-0x20>
   10ae8:	asrs	r6, r6, #2
   10aec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10af0:	mov	r4, #0
   10af4:	add	r4, r4, #1
   10af8:	ldr	r3, [r5], #4
   10afc:	mov	r2, r9
   10b00:	mov	r1, r8
   10b04:	mov	r0, r7
   10b08:	blx	r3
   10b0c:	cmp	r6, r4
   10b10:	bne	10af4 <abort@plt+0x644>
   10b14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b18:	andeq	r0, r1, r4, lsr r4
   10b1c:	andeq	r0, r1, ip, lsr #8
   10b20:	bx	lr

Disassembly of section .fini:

00010b24 <.fini>:
   10b24:	push	{r3, lr}
   10b28:	pop	{r3, pc}
