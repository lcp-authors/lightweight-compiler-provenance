
../repos/sgerbino-table-2fdd8d0/bin/table_row_test:     file format elf32-littlearm


Disassembly of section .init:

00011ee0 <.init>:
   11ee0:	push	{r3, lr}
   11ee4:	bl	11ff0 <_start@@Base+0x3c>
   11ee8:	pop	{r3, pc}

Disassembly of section .plt:

00011eec <strcmp@plt-0x14>:
   11eec:	push	{lr}		; (str lr, [sp, #-4]!)
   11ef0:	ldr	lr, [pc, #4]	; 11efc <strcmp@plt-0x4>
   11ef4:	add	lr, pc, lr
   11ef8:	ldr	pc, [lr, #8]!
   11efc:	andeq	r4, r1, r4, lsl #2

00011f00 <strcmp@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #20, 20	; 0x14000
   11f08:	ldr	pc, [ip, #260]!	; 0x104

00011f0c <printf@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #20, 20	; 0x14000
   11f14:	ldr	pc, [ip, #252]!	; 0xfc

00011f18 <free@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #20, 20	; 0x14000
   11f20:	ldr	pc, [ip, #244]!	; 0xf4

00011f24 <time@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #20, 20	; 0x14000
   11f2c:	ldr	pc, [ip, #236]!	; 0xec

00011f30 <realloc@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #20, 20	; 0x14000
   11f38:	ldr	pc, [ip, #228]!	; 0xe4

00011f3c <strcpy@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #20, 20	; 0x14000
   11f44:	ldr	pc, [ip, #220]!	; 0xdc

00011f48 <malloc@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #20, 20	; 0x14000
   11f50:	ldr	pc, [ip, #212]!	; 0xd4

00011f54 <__libc_start_main@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #20, 20	; 0x14000
   11f5c:	ldr	pc, [ip, #204]!	; 0xcc

00011f60 <__gmon_start__@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #20, 20	; 0x14000
   11f68:	ldr	pc, [ip, #196]!	; 0xc4

00011f6c <strlen@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #20, 20	; 0x14000
   11f74:	ldr	pc, [ip, #188]!	; 0xbc

00011f78 <srand@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #20, 20	; 0x14000
   11f80:	ldr	pc, [ip, #180]!	; 0xb4

00011f84 <snprintf@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #20, 20	; 0x14000
   11f8c:	ldr	pc, [ip, #172]!	; 0xac

00011f90 <__isoc99_sscanf@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #20, 20	; 0x14000
   11f98:	ldr	pc, [ip, #164]!	; 0xa4

00011f9c <rand@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #20, 20	; 0x14000
   11fa4:	ldr	pc, [ip, #156]!	; 0x9c

00011fa8 <abort@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #20, 20	; 0x14000
   11fb0:	ldr	pc, [ip, #148]!	; 0x94

Disassembly of section .text:

00011fb4 <_start@@Base>:
   11fb4:	mov	fp, #0
   11fb8:	mov	lr, #0
   11fbc:	pop	{r1}		; (ldr r1, [sp], #4)
   11fc0:	mov	r2, sp
   11fc4:	push	{r2}		; (str r2, [sp, #-4]!)
   11fc8:	push	{r0}		; (str r0, [sp, #-4]!)
   11fcc:	ldr	ip, [pc, #16]	; 11fe4 <_start@@Base+0x30>
   11fd0:	push	{ip}		; (str ip, [sp, #-4]!)
   11fd4:	ldr	r0, [pc, #12]	; 11fe8 <_start@@Base+0x34>
   11fd8:	ldr	r3, [pc, #12]	; 11fec <_start@@Base+0x38>
   11fdc:	bl	11f54 <__libc_start_main@plt>
   11fe0:	bl	11fa8 <abort@plt>
   11fe4:	andeq	r5, r1, ip, ror r5
   11fe8:	andeq	r2, r1, r4, lsr #1
   11fec:	andeq	r5, r1, ip, lsl r5
   11ff0:	ldr	r3, [pc, #20]	; 1200c <_start@@Base+0x58>
   11ff4:	ldr	r2, [pc, #20]	; 12010 <_start@@Base+0x5c>
   11ff8:	add	r3, pc, r3
   11ffc:	ldr	r2, [r3, r2]
   12000:	cmp	r2, #0
   12004:	bxeq	lr
   12008:	b	11f60 <__gmon_start__@plt>
   1200c:	andeq	r4, r1, r0
   12010:	andeq	r0, r0, r8, asr #32
   12014:	ldr	r0, [pc, #24]	; 12034 <_start@@Base+0x80>
   12018:	ldr	r3, [pc, #24]	; 12038 <_start@@Base+0x84>
   1201c:	cmp	r3, r0
   12020:	bxeq	lr
   12024:	ldr	r3, [pc, #16]	; 1203c <_start@@Base+0x88>
   12028:	cmp	r3, #0
   1202c:	bxeq	lr
   12030:	bx	r3
   12034:	andeq	r6, r2, r4, asr r0
   12038:	andeq	r6, r2, r4, asr r0
   1203c:	andeq	r0, r0, r0
   12040:	ldr	r0, [pc, #36]	; 1206c <_start@@Base+0xb8>
   12044:	ldr	r1, [pc, #36]	; 12070 <_start@@Base+0xbc>
   12048:	sub	r1, r1, r0
   1204c:	asr	r1, r1, #2
   12050:	add	r1, r1, r1, lsr #31
   12054:	asrs	r1, r1, #1
   12058:	bxeq	lr
   1205c:	ldr	r3, [pc, #16]	; 12074 <_start@@Base+0xc0>
   12060:	cmp	r3, #0
   12064:	bxeq	lr
   12068:	bx	r3
   1206c:	andeq	r6, r2, r4, asr r0
   12070:	andeq	r6, r2, r4, asr r0
   12074:	andeq	r0, r0, r0
   12078:	push	{r4, lr}
   1207c:	ldr	r4, [pc, #24]	; 1209c <_start@@Base+0xe8>
   12080:	ldrb	r3, [r4]
   12084:	cmp	r3, #0
   12088:	popne	{r4, pc}
   1208c:	bl	12014 <_start@@Base+0x60>
   12090:	mov	r3, #1
   12094:	strb	r3, [r4]
   12098:	pop	{r4, pc}
   1209c:	andeq	r6, r2, r4, asr r0
   120a0:	b	12040 <_start@@Base+0x8c>

000120a4 <main@@Base>:
   120a4:	push	{r4, r5, r6, sl, fp, lr}
   120a8:	add	fp, sp, #16
   120ac:	sub	sp, sp, #64	; 0x40
   120b0:	add	r0, sp, #4
   120b4:	bl	11f24 <time@plt>
   120b8:	bl	11f78 <srand@plt>
   120bc:	bl	11f9c <rand@plt>
   120c0:	add	r5, sp, #8
   120c4:	mov	r4, r0
   120c8:	mov	r0, r5
   120cc:	bl	12194 <table_init@@Base>
   120d0:	movw	r0, #34079	; 0x851f
   120d4:	mov	r6, #0
   120d8:	movt	r0, #20971	; 0x51eb
   120dc:	umull	r0, r1, r4, r0
   120e0:	lsr	r0, r1, #5
   120e4:	mov	r1, #100	; 0x64
   120e8:	mls	r0, r0, r1, r4
   120ec:	add	r4, r0, #100	; 0x64
   120f0:	mov	r0, r5
   120f4:	bl	139ec <table_add_row@@Base>
   120f8:	add	r6, r6, #1
   120fc:	cmp	r6, r4
   12100:	bcc	120f0 <main@@Base+0x4c>
   12104:	add	r0, sp, #8
   12108:	bl	139e4 <table_get_row_length@@Base>
   1210c:	mov	r5, #0
   12110:	cmp	r0, r4
   12114:	beq	12130 <main@@Base+0x8c>
   12118:	mov	r2, r0
   1211c:	movw	r0, #21908	; 0x5594
   12120:	mov	r1, r4
   12124:	movt	r0, #1
   12128:	bl	11f0c <printf@plt>
   1212c:	mvn	r5, #0
   12130:	add	r0, sp, #8
   12134:	bl	121f0 <table_destroy@@Base>
   12138:	mov	r0, r5
   1213c:	sub	sp, fp, #16
   12140:	pop	{r4, r5, r6, sl, fp, pc}

00012144 <table_new@@Base>:
   12144:	push	{fp, lr}
   12148:	mov	fp, sp
   1214c:	mov	r0, #56	; 0x38
   12150:	bl	11f48 <malloc@plt>
   12154:	mov	r1, #0
   12158:	mov	r2, #10
   1215c:	mov	r3, #20
   12160:	vmov.i32	q8, #0	; 0x00000000
   12164:	str	r1, [r0]
   12168:	stmib	r0, {r1, r2}
   1216c:	str	r1, [r0, #12]
   12170:	str	r1, [r0, #16]
   12174:	str	r1, [r0, #20]
   12178:	str	r3, [r0, #24]
   1217c:	str	r1, [r0, #28]
   12180:	str	r2, [r0, #48]	; 0x30
   12184:	str	r1, [r0, #52]	; 0x34
   12188:	add	r1, r0, #32
   1218c:	vst1.32	{d16-d17}, [r1]
   12190:	pop	{fp, pc}

00012194 <table_init@@Base>:
   12194:	mov	r1, #0
   12198:	mov	r2, #10
   1219c:	mov	r3, #20
   121a0:	vmov.i32	q8, #0	; 0x00000000
   121a4:	str	r1, [r0]
   121a8:	stmib	r0, {r1, r2}
   121ac:	str	r1, [r0, #12]
   121b0:	str	r1, [r0, #16]
   121b4:	str	r1, [r0, #20]
   121b8:	str	r3, [r0, #24]
   121bc:	str	r1, [r0, #28]
   121c0:	str	r2, [r0, #48]	; 0x30
   121c4:	str	r1, [r0, #52]	; 0x34
   121c8:	add	r0, r0, #32
   121cc:	vst1.32	{d16-d17}, [r0]
   121d0:	bx	lr

000121d4 <table_delete@@Base>:
   121d4:	push	{r4, sl, fp, lr}
   121d8:	add	fp, sp, #8
   121dc:	mov	r4, r0
   121e0:	bl	121f0 <table_destroy@@Base>
   121e4:	mov	r0, r4
   121e8:	pop	{r4, sl, fp, lr}
   121ec:	b	11f18 <free@plt>

000121f0 <table_destroy@@Base>:
   121f0:	cmp	r0, #0
   121f4:	bxeq	lr
   121f8:	push	{r4, r5, r6, sl, fp, lr}
   121fc:	add	fp, sp, #16
   12200:	mvn	r1, #0
   12204:	mvn	r2, #0
   12208:	mov	r3, #64	; 0x40
   1220c:	mov	r4, r0
   12210:	bl	12b98 <table_notify@@Base>
   12214:	mov	r0, r4
   12218:	bl	139e4 <table_get_row_length@@Base>
   1221c:	cmp	r0, #1
   12220:	blt	12244 <table_destroy@@Base+0x54>
   12224:	mov	r5, r0
   12228:	mov	r6, #0
   1222c:	mov	r0, r4
   12230:	mov	r1, r6
   12234:	bl	1398c <table_row_destroy@@Base>
   12238:	add	r6, r6, #1
   1223c:	cmp	r5, r6
   12240:	bne	1222c <table_destroy@@Base+0x3c>
   12244:	ldr	r0, [r4, #16]
   12248:	cmp	r0, #0
   1224c:	beq	12254 <table_destroy@@Base+0x64>
   12250:	bl	11f18 <free@plt>
   12254:	mov	r0, r4
   12258:	bl	12c8c <table_get_column_length@@Base>
   1225c:	cmp	r0, #1
   12260:	blt	12284 <table_destroy@@Base+0x94>
   12264:	mov	r5, r0
   12268:	mov	r6, #0
   1226c:	mov	r0, r4
   12270:	mov	r1, r6
   12274:	bl	12c74 <table_column_destroy@@Base>
   12278:	add	r6, r6, #1
   1227c:	cmp	r5, r6
   12280:	bne	1226c <table_destroy@@Base+0x7c>
   12284:	ldr	r0, [r4]
   12288:	cmp	r0, #0
   1228c:	beq	12294 <table_destroy@@Base+0xa4>
   12290:	bl	11f18 <free@plt>
   12294:	ldr	r0, [r4, #36]	; 0x24
   12298:	cmp	r0, #0
   1229c:	beq	122a4 <table_destroy@@Base+0xb4>
   122a0:	bl	11f18 <free@plt>
   122a4:	ldr	r0, [r4, #40]	; 0x28
   122a8:	cmp	r0, #0
   122ac:	beq	122b4 <table_destroy@@Base+0xc4>
   122b0:	bl	11f18 <free@plt>
   122b4:	ldr	r0, [r4, #44]	; 0x2c
   122b8:	cmp	r0, #0
   122bc:	pop	{r4, r5, r6, sl, fp, lr}
   122c0:	beq	122c8 <table_destroy@@Base+0xd8>
   122c4:	b	11f18 <free@plt>
   122c8:	bx	lr

000122cc <table_dupe@@Base>:
   122cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d0:	add	fp, sp, #28
   122d4:	sub	sp, sp, #12
   122d8:	mov	r4, r0
   122dc:	bl	139e4 <table_get_row_length@@Base>
   122e0:	mov	r8, r0
   122e4:	mov	r0, r4
   122e8:	bl	12c8c <table_get_column_length@@Base>
   122ec:	mov	r6, r0
   122f0:	mov	r0, #56	; 0x38
   122f4:	bl	11f48 <malloc@plt>
   122f8:	mov	sl, r0
   122fc:	mov	r5, #0
   12300:	mov	r0, #10
   12304:	mov	r1, #20
   12308:	cmp	r6, #1
   1230c:	vmov.i32	q8, #0	; 0x00000000
   12310:	str	r5, [sl]
   12314:	str	r5, [sl, #4]
   12318:	str	r0, [sl, #8]
   1231c:	str	r5, [sl, #12]
   12320:	str	r5, [sl, #16]
   12324:	str	r5, [sl, #20]
   12328:	str	r1, [sl, #24]
   1232c:	str	r5, [sl, #28]
   12330:	str	r0, [sl, #48]	; 0x30
   12334:	add	r0, sl, #32
   12338:	str	r5, [sl, #52]	; 0x34
   1233c:	vst1.32	{d16-d17}, [r0]
   12340:	blt	1237c <table_dupe@@Base+0xb0>
   12344:	mov	r0, r4
   12348:	mov	r1, r5
   1234c:	bl	12cfc <table_get_column_name@@Base>
   12350:	mov	r7, r0
   12354:	mov	r0, r4
   12358:	mov	r1, r5
   1235c:	bl	12d0c <table_get_column_data_type@@Base>
   12360:	mov	r2, r0
   12364:	mov	r0, sl
   12368:	mov	r1, r7
   1236c:	bl	12d20 <table_add_column@@Base>
   12370:	add	r5, r5, #1
   12374:	cmp	r6, r5
   12378:	bne	12344 <table_dupe@@Base+0x78>
   1237c:	cmp	r8, #1
   12380:	blt	128fc <table_dupe@@Base+0x630>
   12384:	mov	r5, #0
   12388:	add	r9, sp, #8
   1238c:	mov	r0, sl
   12390:	bl	139ec <table_add_row@@Base>
   12394:	cmp	r6, #1
   12398:	blt	128f0 <table_dupe@@Base+0x624>
   1239c:	mov	r7, #0
   123a0:	mov	r0, r4
   123a4:	mov	r1, r7
   123a8:	bl	12d0c <table_get_column_data_type@@Base>
   123ac:	cmp	r0, #23
   123b0:	bhi	12440 <table_dupe@@Base+0x174>
   123b4:	add	r1, pc, #0
   123b8:	ldr	pc, [r1, r0, lsl #2]
   123bc:	andeq	r2, r1, ip, lsl r4
   123c0:	andeq	r2, r1, r0, asr r4
   123c4:	andeq	r2, r1, r4, lsl #9
   123c8:			; <UNDEFINED> instruction: 0x000124b8
   123cc:	andeq	r2, r1, ip, ror #9
   123d0:	andeq	r2, r1, r0, lsr #10
   123d4:	andeq	r2, r1, r4, asr r5
   123d8:	andeq	r2, r1, r8, lsl #11
   123dc:			; <UNDEFINED> instruction: 0x000125bc
   123e0:	strdeq	r2, [r1], -r0
   123e4:	andeq	r2, r1, r4, lsr #12
   123e8:	andeq	r2, r1, r8, asr r6
   123ec:	andeq	r2, r1, ip, lsl #13
   123f0:	andeq	r2, r1, r0, asr #13
   123f4:	strdeq	r2, [r1], -r4
   123f8:	andeq	r2, r1, r8, lsr #14
   123fc:	andeq	r2, r1, ip, asr r7
   12400:	andeq	r2, r1, ip, lsl #15
   12404:			; <UNDEFINED> instruction: 0x000127bc
   12408:	andeq	r2, r1, ip, ror #15
   1240c:	andeq	r2, r1, r0, lsr #16
   12410:	andeq	r2, r1, r4, asr r8
   12414:	andeq	r2, r1, r8, lsl #17
   12418:			; <UNDEFINED> instruction: 0x000128bc
   1241c:	mov	r0, r4
   12420:	mov	r1, r5
   12424:	mov	r2, r7
   12428:	bl	1373c <table_get_int@@Base>
   1242c:	mov	r3, r0
   12430:	mov	r0, sl
   12434:	mov	r1, r5
   12438:	mov	r2, r7
   1243c:	bl	13f44 <table_set_int@@Base>
   12440:	add	r7, r7, #1
   12444:	cmp	r6, r7
   12448:	bne	123a0 <table_dupe@@Base+0xd4>
   1244c:	b	128f0 <table_dupe@@Base+0x624>
   12450:	mov	r0, r4
   12454:	mov	r1, r5
   12458:	mov	r2, r7
   1245c:	bl	13754 <table_get_uint@@Base>
   12460:	mov	r3, r0
   12464:	mov	r0, sl
   12468:	mov	r1, r5
   1246c:	mov	r2, r7
   12470:	bl	13fc4 <table_set_uint@@Base>
   12474:	add	r7, r7, #1
   12478:	cmp	r6, r7
   1247c:	bne	123a0 <table_dupe@@Base+0xd4>
   12480:	b	128f0 <table_dupe@@Base+0x624>
   12484:	mov	r0, r4
   12488:	mov	r1, r5
   1248c:	mov	r2, r7
   12490:	bl	1376c <table_get_int8@@Base>
   12494:	mov	r3, r0
   12498:	mov	r0, sl
   1249c:	mov	r1, r5
   124a0:	mov	r2, r7
   124a4:	bl	14044 <table_set_int8@@Base>
   124a8:	add	r7, r7, #1
   124ac:	cmp	r6, r7
   124b0:	bne	123a0 <table_dupe@@Base+0xd4>
   124b4:	b	128f0 <table_dupe@@Base+0x624>
   124b8:	mov	r0, r4
   124bc:	mov	r1, r5
   124c0:	mov	r2, r7
   124c4:	bl	13784 <table_get_uint8@@Base>
   124c8:	mov	r3, r0
   124cc:	mov	r0, sl
   124d0:	mov	r1, r5
   124d4:	mov	r2, r7
   124d8:	bl	140c4 <table_set_uint8@@Base>
   124dc:	add	r7, r7, #1
   124e0:	cmp	r6, r7
   124e4:	bne	123a0 <table_dupe@@Base+0xd4>
   124e8:	b	128f0 <table_dupe@@Base+0x624>
   124ec:	mov	r0, r4
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	1379c <table_get_int16@@Base>
   124fc:	mov	r3, r0
   12500:	mov	r0, sl
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	14144 <table_set_int16@@Base>
   12510:	add	r7, r7, #1
   12514:	cmp	r6, r7
   12518:	bne	123a0 <table_dupe@@Base+0xd4>
   1251c:	b	128f0 <table_dupe@@Base+0x624>
   12520:	mov	r0, r4
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	137b4 <table_get_uint16@@Base>
   12530:	mov	r3, r0
   12534:	mov	r0, sl
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	141c4 <table_set_uint16@@Base>
   12544:	add	r7, r7, #1
   12548:	cmp	r6, r7
   1254c:	bne	123a0 <table_dupe@@Base+0xd4>
   12550:	b	128f0 <table_dupe@@Base+0x624>
   12554:	mov	r0, r4
   12558:	mov	r1, r5
   1255c:	mov	r2, r7
   12560:	bl	137cc <table_get_int32@@Base>
   12564:	mov	r3, r0
   12568:	mov	r0, sl
   1256c:	mov	r1, r5
   12570:	mov	r2, r7
   12574:	bl	14244 <table_set_int32@@Base>
   12578:	add	r7, r7, #1
   1257c:	cmp	r6, r7
   12580:	bne	123a0 <table_dupe@@Base+0xd4>
   12584:	b	128f0 <table_dupe@@Base+0x624>
   12588:	mov	r0, r4
   1258c:	mov	r1, r5
   12590:	mov	r2, r7
   12594:	bl	137e4 <table_get_uint32@@Base>
   12598:	mov	r3, r0
   1259c:	mov	r0, sl
   125a0:	mov	r1, r5
   125a4:	mov	r2, r7
   125a8:	bl	142c4 <table_set_uint32@@Base>
   125ac:	add	r7, r7, #1
   125b0:	cmp	r6, r7
   125b4:	bne	123a0 <table_dupe@@Base+0xd4>
   125b8:	b	128f0 <table_dupe@@Base+0x624>
   125bc:	mov	r0, r4
   125c0:	mov	r1, r5
   125c4:	mov	r2, r7
   125c8:	bl	137fc <table_get_int64@@Base>
   125cc:	stm	sp, {r0, r1}
   125d0:	mov	r0, sl
   125d4:	mov	r1, r5
   125d8:	mov	r2, r7
   125dc:	bl	14344 <table_set_int64@@Base>
   125e0:	add	r7, r7, #1
   125e4:	cmp	r6, r7
   125e8:	bne	123a0 <table_dupe@@Base+0xd4>
   125ec:	b	128f0 <table_dupe@@Base+0x624>
   125f0:	mov	r0, r4
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	13814 <table_get_uint64@@Base>
   12600:	stm	sp, {r0, r1}
   12604:	mov	r0, sl
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	143cc <table_set_uint64@@Base>
   12614:	add	r7, r7, #1
   12618:	cmp	r6, r7
   1261c:	bne	123a0 <table_dupe@@Base+0xd4>
   12620:	b	128f0 <table_dupe@@Base+0x624>
   12624:	mov	r0, r4
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	1382c <table_get_short@@Base>
   12634:	mov	r3, r0
   12638:	mov	r0, sl
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	14454 <table_set_short@@Base>
   12648:	add	r7, r7, #1
   1264c:	cmp	r6, r7
   12650:	bne	123a0 <table_dupe@@Base+0xd4>
   12654:	b	128f0 <table_dupe@@Base+0x624>
   12658:	mov	r0, r4
   1265c:	mov	r1, r5
   12660:	mov	r2, r7
   12664:	bl	13844 <table_get_ushort@@Base>
   12668:	mov	r3, r0
   1266c:	mov	r0, sl
   12670:	mov	r1, r5
   12674:	mov	r2, r7
   12678:	bl	144d4 <table_set_ushort@@Base>
   1267c:	add	r7, r7, #1
   12680:	cmp	r6, r7
   12684:	bne	123a0 <table_dupe@@Base+0xd4>
   12688:	b	128f0 <table_dupe@@Base+0x624>
   1268c:	mov	r0, r4
   12690:	mov	r1, r5
   12694:	mov	r2, r7
   12698:	bl	1385c <table_get_long@@Base>
   1269c:	mov	r3, r0
   126a0:	mov	r0, sl
   126a4:	mov	r1, r5
   126a8:	mov	r2, r7
   126ac:	bl	14554 <table_set_long@@Base>
   126b0:	add	r7, r7, #1
   126b4:	cmp	r6, r7
   126b8:	bne	123a0 <table_dupe@@Base+0xd4>
   126bc:	b	128f0 <table_dupe@@Base+0x624>
   126c0:	mov	r0, r4
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	13874 <table_get_ulong@@Base>
   126d0:	mov	r3, r0
   126d4:	mov	r0, sl
   126d8:	mov	r1, r5
   126dc:	mov	r2, r7
   126e0:	bl	145d4 <table_set_ulong@@Base>
   126e4:	add	r7, r7, #1
   126e8:	cmp	r6, r7
   126ec:	bne	123a0 <table_dupe@@Base+0xd4>
   126f0:	b	128f0 <table_dupe@@Base+0x624>
   126f4:	mov	r0, r4
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	1388c <table_get_llong@@Base>
   12704:	stm	sp, {r0, r1}
   12708:	mov	r0, sl
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	14654 <table_set_llong@@Base>
   12718:	add	r7, r7, #1
   1271c:	cmp	r6, r7
   12720:	bne	123a0 <table_dupe@@Base+0xd4>
   12724:	b	128f0 <table_dupe@@Base+0x624>
   12728:	mov	r0, r4
   1272c:	mov	r1, r5
   12730:	mov	r2, r7
   12734:	bl	138a4 <table_get_ullong@@Base>
   12738:	stm	sp, {r0, r1}
   1273c:	mov	r0, sl
   12740:	mov	r1, r5
   12744:	mov	r2, r7
   12748:	bl	146dc <table_set_ullong@@Base>
   1274c:	add	r7, r7, #1
   12750:	cmp	r6, r7
   12754:	bne	123a0 <table_dupe@@Base+0xd4>
   12758:	b	128f0 <table_dupe@@Base+0x624>
   1275c:	mov	r0, r4
   12760:	mov	r1, r5
   12764:	mov	r2, r7
   12768:	bl	138bc <table_get_float@@Base>
   1276c:	mov	r0, sl
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	14764 <table_set_float@@Base>
   1277c:	add	r7, r7, #1
   12780:	cmp	r6, r7
   12784:	bne	123a0 <table_dupe@@Base+0xd4>
   12788:	b	128f0 <table_dupe@@Base+0x624>
   1278c:	mov	r0, r4
   12790:	mov	r1, r5
   12794:	mov	r2, r7
   12798:	bl	138d4 <table_get_double@@Base>
   1279c:	mov	r0, sl
   127a0:	mov	r1, r5
   127a4:	mov	r2, r7
   127a8:	bl	147f0 <table_set_double@@Base>
   127ac:	add	r7, r7, #1
   127b0:	cmp	r6, r7
   127b4:	bne	123a0 <table_dupe@@Base+0xd4>
   127b8:	b	128f0 <table_dupe@@Base+0x624>
   127bc:	mov	r0, r4
   127c0:	mov	r1, r5
   127c4:	mov	r2, r7
   127c8:	bl	138ec <table_get_ldouble@@Base>
   127cc:	mov	r0, sl
   127d0:	mov	r1, r5
   127d4:	mov	r2, r7
   127d8:	bl	14878 <table_set_ldouble@@Base>
   127dc:	add	r7, r7, #1
   127e0:	cmp	r6, r7
   127e4:	bne	123a0 <table_dupe@@Base+0xd4>
   127e8:	b	128f0 <table_dupe@@Base+0x624>
   127ec:	mov	r0, r4
   127f0:	mov	r1, r5
   127f4:	mov	r2, r7
   127f8:	bl	13904 <table_get_char@@Base>
   127fc:	mov	r3, r0
   12800:	mov	r0, sl
   12804:	mov	r1, r5
   12808:	mov	r2, r7
   1280c:	bl	14988 <table_set_char@@Base>
   12810:	add	r7, r7, #1
   12814:	cmp	r6, r7
   12818:	bne	123a0 <table_dupe@@Base+0xd4>
   1281c:	b	128f0 <table_dupe@@Base+0x624>
   12820:	mov	r0, r4
   12824:	mov	r1, r5
   12828:	mov	r2, r7
   1282c:	bl	1391c <table_get_uchar@@Base>
   12830:	mov	r3, r0
   12834:	mov	r0, sl
   12838:	mov	r1, r5
   1283c:	mov	r2, r7
   12840:	bl	14a08 <table_set_uchar@@Base>
   12844:	add	r7, r7, #1
   12848:	cmp	r6, r7
   1284c:	bne	123a0 <table_dupe@@Base+0xd4>
   12850:	b	128f0 <table_dupe@@Base+0x624>
   12854:	mov	r0, r4
   12858:	mov	r1, r5
   1285c:	mov	r2, r7
   12860:	bl	13934 <table_get_string@@Base>
   12864:	mov	r3, r0
   12868:	mov	r0, sl
   1286c:	mov	r1, r5
   12870:	mov	r2, r7
   12874:	bl	14900 <table_set_string@@Base>
   12878:	add	r7, r7, #1
   1287c:	cmp	r6, r7
   12880:	bne	123a0 <table_dupe@@Base+0xd4>
   12884:	b	128f0 <table_dupe@@Base+0x624>
   12888:	mov	r0, r4
   1288c:	mov	r1, r5
   12890:	mov	r2, r7
   12894:	bl	13724 <table_get_bool@@Base>
   12898:	mov	r3, r0
   1289c:	mov	r0, sl
   128a0:	mov	r1, r5
   128a4:	mov	r2, r7
   128a8:	bl	13ec4 <table_set_bool@@Base>
   128ac:	add	r7, r7, #1
   128b0:	cmp	r6, r7
   128b4:	bne	123a0 <table_dupe@@Base+0xd4>
   128b8:	b	128f0 <table_dupe@@Base+0x624>
   128bc:	mov	r0, r4
   128c0:	mov	r1, r5
   128c4:	mov	r2, r7
   128c8:	bl	13948 <table_get_ptr@@Base>
   128cc:	str	r0, [sp, #8]
   128d0:	mov	r0, sl
   128d4:	mov	r1, r5
   128d8:	mov	r2, r7
   128dc:	mov	r3, r9
   128e0:	bl	14a88 <table_set_ptr@@Base>
   128e4:	add	r7, r7, #1
   128e8:	cmp	r6, r7
   128ec:	bne	123a0 <table_dupe@@Base+0xd4>
   128f0:	add	r5, r5, #1
   128f4:	cmp	r5, r8
   128f8:	bne	1238c <table_dupe@@Base+0xc0>
   128fc:	mov	r0, sl
   12900:	sub	sp, fp, #28
   12904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012908 <table_get_major_version@@Base>:
   12908:	mov	r0, #0
   1290c:	bx	lr

00012910 <table_get_minor_version@@Base>:
   12910:	mov	r0, #0
   12914:	bx	lr

00012918 <table_get_patch_version@@Base>:
   12918:	mov	r0, #0
   1291c:	bx	lr

00012920 <table_get_version@@Base>:
   12920:	movw	r0, #22109	; 0x565d
   12924:	movt	r0, #1
   12928:	bx	lr

0001292c <table_get_callback_length@@Base>:
   1292c:	ldr	r0, [r0, #32]
   12930:	bx	lr

00012934 <table_register_callback@@Base>:
   12934:	push	{r4, r5, r6, r7, fp, lr}
   12938:	add	fp, sp, #16
   1293c:	mov	r5, r0
   12940:	ldr	r0, [r0, #32]
   12944:	mov	r4, r3
   12948:	mov	r6, r2
   1294c:	mov	r7, r1
   12950:	cmp	r0, #1
   12954:	blt	12988 <table_register_callback@@Base+0x54>
   12958:	ldr	r2, [r5, #36]	; 0x24
   1295c:	mov	r1, #0
   12960:	ldr	r3, [r2, r1, lsl #2]
   12964:	cmp	r3, r7
   12968:	bne	1297c <table_register_callback@@Base+0x48>
   1296c:	ldr	r3, [r5, #40]	; 0x28
   12970:	ldr	r3, [r3, r1, lsl #2]
   12974:	cmp	r3, r6
   12978:	beq	12a0c <table_register_callback@@Base+0xd8>
   1297c:	add	r1, r1, #1
   12980:	cmp	r1, r0
   12984:	blt	12960 <table_register_callback@@Base+0x2c>
   12988:	ldr	r1, [r5, #48]	; 0x30
   1298c:	udiv	r2, r0, r1
   12990:	mls	r2, r2, r1, r0
   12994:	cmp	r2, #0
   12998:	bne	129e4 <table_register_callback@@Base+0xb0>
   1299c:	ldr	r2, [r5, #52]	; 0x34
   129a0:	ldr	r0, [r5, #36]	; 0x24
   129a4:	add	r1, r2, r1
   129a8:	str	r1, [r5, #52]	; 0x34
   129ac:	lsl	r1, r1, #2
   129b0:	bl	11f30 <realloc@plt>
   129b4:	str	r0, [r5, #36]	; 0x24
   129b8:	ldr	r1, [r5, #52]	; 0x34
   129bc:	ldr	r0, [r5, #40]	; 0x28
   129c0:	lsl	r1, r1, #2
   129c4:	bl	11f30 <realloc@plt>
   129c8:	str	r0, [r5, #40]	; 0x28
   129cc:	ldr	r1, [r5, #52]	; 0x34
   129d0:	ldr	r0, [r5, #44]	; 0x2c
   129d4:	lsl	r1, r1, #2
   129d8:	bl	11f30 <realloc@plt>
   129dc:	str	r0, [r5, #44]	; 0x2c
   129e0:	ldr	r0, [r5, #32]
   129e4:	ldr	r1, [r5, #36]	; 0x24
   129e8:	str	r7, [r1, r0, lsl #2]
   129ec:	ldr	r1, [r5, #40]	; 0x28
   129f0:	str	r6, [r1, r0, lsl #2]
   129f4:	ldr	r1, [r5, #44]	; 0x2c
   129f8:	str	r4, [r1, r0, lsl #2]
   129fc:	ldr	r0, [r5, #32]
   12a00:	add	r0, r0, #1
   12a04:	str	r0, [r5, #32]
   12a08:	pop	{r4, r5, r6, r7, fp, pc}
   12a0c:	cmp	r1, #0
   12a10:	ldrne	r0, [r5, #44]	; 0x2c
   12a14:	ldrne	r2, [r0, r1, lsl #2]
   12a18:	orrne	r2, r2, r4
   12a1c:	strne	r2, [r0, r1, lsl #2]
   12a20:	popne	{r4, r5, r6, r7, fp, pc}
   12a24:	b	12988 <table_register_callback@@Base+0x54>

00012a28 <table_unregister_callback@@Base>:
   12a28:	push	{r4, r5, r6, sl, fp, lr}
   12a2c:	add	fp, sp, #16
   12a30:	ldr	r4, [r0, #32]
   12a34:	cmp	r4, #1
   12a38:	blt	12a70 <table_unregister_callback@@Base+0x48>
   12a3c:	ldr	r3, [r0, #36]	; 0x24
   12a40:	mov	r6, r0
   12a44:	mov	r0, #0
   12a48:	ldr	r5, [r3, r0, lsl #2]
   12a4c:	cmp	r5, r1
   12a50:	bne	12a64 <table_unregister_callback@@Base+0x3c>
   12a54:	ldr	r5, [r6, #40]	; 0x28
   12a58:	ldr	r5, [r5, r0, lsl #2]
   12a5c:	cmp	r5, r2
   12a60:	beq	12a74 <table_unregister_callback@@Base+0x4c>
   12a64:	add	r0, r0, #1
   12a68:	cmp	r0, r4
   12a6c:	blt	12a48 <table_unregister_callback@@Base+0x20>
   12a70:	pop	{r4, r5, r6, sl, fp, pc}
   12a74:	sub	r1, r4, #1
   12a78:	cmp	r0, r1
   12a7c:	bge	12b0c <table_unregister_callback@@Base+0xe4>
   12a80:	add	r1, r3, r0, lsl #2
   12a84:	ldr	r1, [r1, #4]
   12a88:	str	r1, [r3, r0, lsl #2]
   12a8c:	ldr	r1, [r6, #40]	; 0x28
   12a90:	add	r2, r1, r0, lsl #2
   12a94:	ldr	r2, [r2, #4]
   12a98:	str	r2, [r1, r0, lsl #2]
   12a9c:	ldr	r1, [r6, #44]	; 0x2c
   12aa0:	add	r2, r1, r0, lsl #2
   12aa4:	ldr	r2, [r2, #4]
   12aa8:	str	r2, [r1, r0, lsl #2]
   12aac:	add	r2, r0, #1
   12ab0:	ldr	r1, [r6, #32]
   12ab4:	sub	r1, r1, #1
   12ab8:	cmp	r2, r1
   12abc:	bge	12b0c <table_unregister_callback@@Base+0xe4>
   12ac0:	ldr	r1, [r6, #36]	; 0x24
   12ac4:	add	r1, r1, r0, lsl #2
   12ac8:	ldr	r2, [r1, #8]
   12acc:	str	r2, [r1, #4]
   12ad0:	ldr	r1, [r6, #40]	; 0x28
   12ad4:	add	r1, r1, r0, lsl #2
   12ad8:	ldr	r2, [r1, #8]
   12adc:	str	r2, [r1, #4]
   12ae0:	ldr	r1, [r6, #44]	; 0x2c
   12ae4:	add	r1, r1, r0, lsl #2
   12ae8:	ldr	r2, [r1, #8]
   12aec:	str	r2, [r1, #4]
   12af0:	add	r2, r0, #1
   12af4:	add	r0, r0, #2
   12af8:	ldr	r1, [r6, #32]
   12afc:	sub	r1, r1, #1
   12b00:	cmp	r0, r1
   12b04:	mov	r0, r2
   12b08:	blt	12ac0 <table_unregister_callback@@Base+0x98>
   12b0c:	str	r1, [r6, #32]
   12b10:	ldr	r2, [r6, #48]	; 0x30
   12b14:	udiv	r0, r1, r2
   12b18:	mls	r0, r0, r2, r1
   12b1c:	cmp	r0, #0
   12b20:	popne	{r4, r5, r6, sl, fp, pc}
   12b24:	ldr	r1, [r6, #52]	; 0x34
   12b28:	ldr	r0, [r6, #36]	; 0x24
   12b2c:	subs	r1, r1, r2
   12b30:	str	r1, [r6, #52]	; 0x34
   12b34:	beq	12b70 <table_unregister_callback@@Base+0x148>
   12b38:	lsl	r1, r1, #2
   12b3c:	bl	11f30 <realloc@plt>
   12b40:	str	r0, [r6, #36]	; 0x24
   12b44:	ldr	r1, [r6, #52]	; 0x34
   12b48:	ldr	r0, [r6, #40]	; 0x28
   12b4c:	lsl	r1, r1, #2
   12b50:	bl	11f30 <realloc@plt>
   12b54:	str	r0, [r6, #40]	; 0x28
   12b58:	ldr	r1, [r6, #52]	; 0x34
   12b5c:	ldr	r0, [r6, #44]	; 0x2c
   12b60:	lsl	r1, r1, #2
   12b64:	bl	11f30 <realloc@plt>
   12b68:	str	r0, [r6, #44]	; 0x2c
   12b6c:	pop	{r4, r5, r6, sl, fp, pc}
   12b70:	bl	11f18 <free@plt>
   12b74:	ldr	r0, [r6, #40]	; 0x28
   12b78:	bl	11f18 <free@plt>
   12b7c:	ldr	r0, [r6, #44]	; 0x2c
   12b80:	bl	11f18 <free@plt>
   12b84:	mov	r0, #0
   12b88:	str	r0, [r6, #36]	; 0x24
   12b8c:	str	r0, [r6, #40]	; 0x28
   12b90:	str	r0, [r6, #44]	; 0x2c
   12b94:	pop	{r4, r5, r6, sl, fp, pc}

00012b98 <table_notify@@Base>:
   12b98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b9c:	add	fp, sp, #24
   12ba0:	sub	sp, sp, #8
   12ba4:	mov	r7, r0
   12ba8:	ldr	r0, [r0, #32]
   12bac:	cmp	r0, #1
   12bb0:	blt	12c0c <table_notify@@Base+0x74>
   12bb4:	mov	r4, r3
   12bb8:	mov	r8, r2
   12bbc:	mov	r9, r1
   12bc0:	mov	r5, #0
   12bc4:	ldr	r1, [r7, #44]	; 0x2c
   12bc8:	ldr	r1, [r1, r5, lsl #2]
   12bcc:	tst	r1, r4
   12bd0:	beq	12c00 <table_notify@@Base+0x68>
   12bd4:	ldr	r0, [r7, #36]	; 0x24
   12bd8:	ldr	r1, [r7, #40]	; 0x28
   12bdc:	mov	r2, r8
   12be0:	mov	r3, r4
   12be4:	ldr	r6, [r0, r5, lsl #2]
   12be8:	ldr	r0, [r1, r5, lsl #2]
   12bec:	mov	r1, r9
   12bf0:	str	r0, [sp]
   12bf4:	mov	r0, r7
   12bf8:	blx	r6
   12bfc:	ldr	r0, [r7, #32]
   12c00:	add	r5, r5, #1
   12c04:	cmp	r5, r0
   12c08:	blt	12bc4 <table_notify@@Base+0x2c>
   12c0c:	sub	sp, fp, #24
   12c10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012c14 <table_column_init@@Base>:
   12c14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c18:	add	fp, sp, #24
   12c1c:	ldr	r7, [r0]
   12c20:	mov	r0, r2
   12c24:	mov	r4, r3
   12c28:	mov	r5, r2
   12c2c:	mov	r6, r1
   12c30:	bl	11f6c <strlen@plt>
   12c34:	add	r0, r0, #1
   12c38:	bl	11f48 <malloc@plt>
   12c3c:	ldr	r8, [fp, #8]
   12c40:	add	r6, r6, r6, lsl #1
   12c44:	cmp	r0, #0
   12c48:	str	r0, [r7, r6, lsl #2]
   12c4c:	beq	12c58 <table_column_init@@Base+0x44>
   12c50:	mov	r1, r5
   12c54:	bl	11f3c <strcpy@plt>
   12c58:	add	r0, r7, r6, lsl #2
   12c5c:	stmib	r0, {r4, r8}
   12c60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012c64 <table_get_col_ptr@@Base>:
   12c64:	ldr	r0, [r0]
   12c68:	add	r1, r1, r1, lsl #1
   12c6c:	add	r0, r0, r1, lsl #2
   12c70:	bx	lr

00012c74 <table_column_destroy@@Base>:
   12c74:	ldr	r0, [r0]
   12c78:	add	r1, r1, r1, lsl #1
   12c7c:	ldr	r0, [r0, r1, lsl #2]
   12c80:	cmp	r0, #0
   12c84:	bxeq	lr
   12c88:	b	11f18 <free@plt>

00012c8c <table_get_column_length@@Base>:
   12c8c:	ldr	r0, [r0, #4]
   12c90:	bx	lr

00012c94 <table_get_column@@Base>:
   12c94:	push	{r4, r5, r6, r7, fp, lr}
   12c98:	add	fp, sp, #16
   12c9c:	ldr	r6, [r0, #4]
   12ca0:	cmp	r6, #1
   12ca4:	blt	12ce8 <table_get_column@@Base+0x54>
   12ca8:	ldr	r7, [r0]
   12cac:	mov	r5, r1
   12cb0:	mov	r4, #0
   12cb4:	ldr	r0, [r7]
   12cb8:	mov	r1, r5
   12cbc:	bl	11f00 <strcmp@plt>
   12cc0:	cmp	r0, #0
   12cc4:	beq	12cd8 <table_get_column@@Base+0x44>
   12cc8:	add	r4, r4, #1
   12ccc:	add	r7, r7, #12
   12cd0:	cmp	r4, r6
   12cd4:	blt	12cb4 <table_get_column@@Base+0x20>
   12cd8:	cmp	r4, r6
   12cdc:	mvneq	r4, #0
   12ce0:	mov	r0, r4
   12ce4:	pop	{r4, r5, r6, r7, fp, pc}
   12ce8:	mov	r4, #0
   12cec:	cmp	r4, r6
   12cf0:	mvneq	r4, #0
   12cf4:	mov	r0, r4
   12cf8:	pop	{r4, r5, r6, r7, fp, pc}

00012cfc <table_get_column_name@@Base>:
   12cfc:	ldr	r0, [r0]
   12d00:	add	r1, r1, r1, lsl #1
   12d04:	ldr	r0, [r0, r1, lsl #2]
   12d08:	bx	lr

00012d0c <table_get_column_data_type@@Base>:
   12d0c:	ldr	r0, [r0]
   12d10:	add	r1, r1, r1, lsl #1
   12d14:	add	r0, r0, r1, lsl #2
   12d18:	ldr	r0, [r0, #4]
   12d1c:	bx	lr

00012d20 <table_add_column@@Base>:
   12d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d24:	add	fp, sp, #28
   12d28:	sub	sp, sp, #4
   12d2c:	mov	r4, r0
   12d30:	mov	r8, r1
   12d34:	ldr	r0, [r0, #4]
   12d38:	mov	r9, r2
   12d3c:	ldr	r1, [r4, #8]
   12d40:	udiv	r2, r0, r1
   12d44:	mls	r0, r2, r1, r0
   12d48:	cmp	r0, #0
   12d4c:	bne	12db8 <table_add_column@@Base+0x98>
   12d50:	ldr	r2, [r4, #12]
   12d54:	ldr	r0, [r4]
   12d58:	add	r1, r2, r1
   12d5c:	str	r1, [r4, #12]
   12d60:	add	r1, r1, r1, lsl #1
   12d64:	lsl	r1, r1, #2
   12d68:	bl	11f30 <realloc@plt>
   12d6c:	str	r0, [r4]
   12d70:	mov	r0, r4
   12d74:	bl	139e4 <table_get_row_length@@Base>
   12d78:	cmp	r0, #1
   12d7c:	blt	12db8 <table_add_column@@Base+0x98>
   12d80:	mov	r6, r0
   12d84:	mov	r5, #0
   12d88:	mov	r0, r4
   12d8c:	mov	r1, r5
   12d90:	bl	13980 <table_get_row_ptr@@Base>
   12d94:	ldr	r1, [r4, #12]
   12d98:	mov	r7, r0
   12d9c:	ldr	r0, [r0]
   12da0:	lsl	r1, r1, #2
   12da4:	bl	11f30 <realloc@plt>
   12da8:	add	r5, r5, #1
   12dac:	str	r0, [r7]
   12db0:	cmp	r6, r5
   12db4:	bne	12d88 <table_add_column@@Base+0x68>
   12db8:	mov	r0, r4
   12dbc:	bl	139e4 <table_get_row_length@@Base>
   12dc0:	ldr	r6, [r4, #4]
   12dc4:	mov	r7, r0
   12dc8:	mov	r0, r9
   12dcc:	bl	136f8 <table_get_default_compare_function_for_data_type@@Base>
   12dd0:	ldr	r5, [r4]
   12dd4:	mov	sl, r0
   12dd8:	mov	r0, r8
   12ddc:	bl	11f6c <strlen@plt>
   12de0:	add	r0, r0, #1
   12de4:	bl	11f48 <malloc@plt>
   12de8:	mov	r1, r8
   12dec:	add	r8, r6, r6, lsl #1
   12df0:	cmp	r0, #0
   12df4:	str	r0, [r5, r8, lsl #2]
   12df8:	beq	12e00 <table_add_column@@Base+0xe0>
   12dfc:	bl	11f3c <strcpy@plt>
   12e00:	add	r0, r5, r8, lsl #2
   12e04:	cmp	r7, #1
   12e08:	stmib	r0, {r9, sl}
   12e0c:	blt	12e30 <table_add_column@@Base+0x110>
   12e10:	mov	r5, #0
   12e14:	mov	r0, r4
   12e18:	mov	r1, r5
   12e1c:	mov	r2, r6
   12e20:	bl	14ae4 <table_cell_init@@Base>
   12e24:	add	r5, r5, #1
   12e28:	cmp	r7, r5
   12e2c:	bne	12e14 <table_add_column@@Base+0xf4>
   12e30:	ldr	r2, [r4, #4]
   12e34:	mov	r0, r4
   12e38:	mvn	r1, #0
   12e3c:	mov	r3, #8
   12e40:	bl	12b98 <table_notify@@Base>
   12e44:	ldr	r0, [r4, #4]
   12e48:	add	r1, r0, #1
   12e4c:	str	r1, [r4, #4]
   12e50:	sub	sp, fp, #28
   12e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012e58 <table_remove_column@@Base>:
   12e58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e5c:	add	fp, sp, #24
   12e60:	mov	r5, r0
   12e64:	ldr	r0, [r0]
   12e68:	add	r6, r1, r1, lsl #1
   12e6c:	mov	r9, r1
   12e70:	ldr	r0, [r0, r6, lsl #2]
   12e74:	cmp	r0, #0
   12e78:	beq	12e80 <table_remove_column@@Base+0x28>
   12e7c:	bl	11f18 <free@plt>
   12e80:	ldr	r0, [r5, #4]
   12e84:	sub	r4, r0, #1
   12e88:	cmp	r4, r9
   12e8c:	ble	12ebc <table_remove_column@@Base+0x64>
   12e90:	sub	r0, r4, r9
   12e94:	lsl	r1, r6, #2
   12e98:	ldr	r2, [r5]
   12e9c:	subs	r0, r0, #1
   12ea0:	add	r2, r2, r1
   12ea4:	add	r1, r1, #12
   12ea8:	vldr	d16, [r2, #12]
   12eac:	ldr	r3, [r2, #20]
   12eb0:	str	r3, [r2, #8]
   12eb4:	vstr	d16, [r2]
   12eb8:	bne	12e98 <table_remove_column@@Base+0x40>
   12ebc:	mov	r0, r5
   12ec0:	bl	139e4 <table_get_row_length@@Base>
   12ec4:	cmp	r0, #1
   12ec8:	blt	12f50 <table_remove_column@@Base+0xf8>
   12ecc:	mov	r6, r0
   12ed0:	mov	r7, #0
   12ed4:	cmp	r4, r9
   12ed8:	ble	12f28 <table_remove_column@@Base+0xd0>
   12edc:	mov	r0, r5
   12ee0:	mov	r1, r7
   12ee4:	mov	r2, r9
   12ee8:	bl	14b20 <table_cell_destroy@@Base>
   12eec:	mov	r0, r5
   12ef0:	mov	r1, r7
   12ef4:	bl	13980 <table_get_row_ptr@@Base>
   12ef8:	mov	r1, r9
   12efc:	ldr	r2, [r0]
   12f00:	add	r3, r2, r1, lsl #2
   12f04:	ldr	r3, [r3, #4]
   12f08:	str	r3, [r2, r1, lsl #2]
   12f0c:	add	r1, r1, #1
   12f10:	cmp	r4, r1
   12f14:	bne	12efc <table_remove_column@@Base+0xa4>
   12f18:	add	r7, r7, #1
   12f1c:	cmp	r7, r6
   12f20:	bne	12edc <table_remove_column@@Base+0x84>
   12f24:	b	12f50 <table_remove_column@@Base+0xf8>
   12f28:	mov	r0, r5
   12f2c:	mov	r1, r7
   12f30:	mov	r2, r9
   12f34:	bl	14b20 <table_cell_destroy@@Base>
   12f38:	mov	r0, r5
   12f3c:	mov	r1, r7
   12f40:	bl	13980 <table_get_row_ptr@@Base>
   12f44:	add	r7, r7, #1
   12f48:	cmp	r6, r7
   12f4c:	bne	12f28 <table_remove_column@@Base+0xd0>
   12f50:	ldmib	r5, {r0, r1}
   12f54:	sub	r0, r0, #1
   12f58:	udiv	r2, r0, r1
   12f5c:	str	r0, [r5, #4]
   12f60:	mls	r0, r2, r1, r0
   12f64:	cmp	r0, #0
   12f68:	bne	12fd4 <table_remove_column@@Base+0x17c>
   12f6c:	ldr	r2, [r5, #12]
   12f70:	ldr	r0, [r5]
   12f74:	sub	r1, r2, r1
   12f78:	str	r1, [r5, #12]
   12f7c:	add	r1, r1, r1, lsl #1
   12f80:	lsl	r1, r1, #2
   12f84:	bl	11f30 <realloc@plt>
   12f88:	str	r0, [r5]
   12f8c:	mov	r0, r5
   12f90:	bl	139e4 <table_get_row_length@@Base>
   12f94:	cmp	r0, #1
   12f98:	blt	12fd4 <table_remove_column@@Base+0x17c>
   12f9c:	mov	r8, r0
   12fa0:	mov	r7, #0
   12fa4:	mov	r0, r5
   12fa8:	mov	r1, r7
   12fac:	bl	13980 <table_get_row_ptr@@Base>
   12fb0:	ldr	r1, [r5, #12]
   12fb4:	mov	r6, r0
   12fb8:	ldr	r0, [r0]
   12fbc:	lsl	r1, r1, #2
   12fc0:	bl	11f30 <realloc@plt>
   12fc4:	add	r7, r7, #1
   12fc8:	str	r0, [r6]
   12fcc:	cmp	r8, r7
   12fd0:	bne	12fa4 <table_remove_column@@Base+0x14c>
   12fd4:	mov	r0, r5
   12fd8:	mvn	r1, #0
   12fdc:	mov	r2, r9
   12fe0:	mov	r3, #16
   12fe4:	bl	12b98 <table_notify@@Base>
   12fe8:	mov	r0, #0
   12fec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ff0 <table_get_column_compare_function@@Base>:
   12ff0:	ldr	r0, [r0]
   12ff4:	add	r1, r1, r1, lsl #1
   12ff8:	add	r0, r0, r1, lsl #2
   12ffc:	ldr	r0, [r0, #8]
   13000:	bx	lr

00013004 <table_set_column_compare_function@@Base>:
   13004:	ldr	r0, [r0]
   13008:	add	r1, r1, r1, lsl #1
   1300c:	add	r0, r0, r1, lsl #2
   13010:	str	r2, [r0, #8]
   13014:	bx	lr

00013018 <table_compare_bool@@Base>:
   13018:	cmp	r0, #0
   1301c:	beq	13050 <table_compare_bool@@Base+0x38>
   13020:	cmp	r1, #0
   13024:	moveq	r1, #1
   13028:	moveq	r0, r1
   1302c:	bxeq	lr
   13030:	ldrb	r2, [r1]
   13034:	ldrb	r0, [r0]
   13038:	mov	r1, #0
   1303c:	cmp	r0, r2
   13040:	mvncc	r1, #0
   13044:	movwhi	r1, #1
   13048:	mov	r0, r1
   1304c:	bx	lr
   13050:	cmp	r1, #0
   13054:	mvnne	r1, #0
   13058:	mov	r0, r1
   1305c:	bx	lr

00013060 <table_compare_int@@Base>:
   13060:	cmp	r0, #0
   13064:	beq	13098 <table_compare_int@@Base+0x38>
   13068:	cmp	r1, #0
   1306c:	moveq	r1, #1
   13070:	moveq	r0, r1
   13074:	bxeq	lr
   13078:	ldr	r2, [r1]
   1307c:	ldr	r0, [r0]
   13080:	mov	r1, #0
   13084:	cmp	r0, r2
   13088:	mvnlt	r1, #0
   1308c:	movwgt	r1, #1
   13090:	mov	r0, r1
   13094:	bx	lr
   13098:	cmp	r1, #0
   1309c:	mvnne	r1, #0
   130a0:	mov	r0, r1
   130a4:	bx	lr

000130a8 <table_compare_uint@@Base>:
   130a8:	cmp	r0, #0
   130ac:	beq	130e0 <table_compare_uint@@Base+0x38>
   130b0:	cmp	r1, #0
   130b4:	moveq	r1, #1
   130b8:	moveq	r0, r1
   130bc:	bxeq	lr
   130c0:	ldr	r2, [r1]
   130c4:	ldr	r0, [r0]
   130c8:	mov	r1, #0
   130cc:	cmp	r0, r2
   130d0:	mvncc	r1, #0
   130d4:	movwhi	r1, #1
   130d8:	mov	r0, r1
   130dc:	bx	lr
   130e0:	cmp	r1, #0
   130e4:	mvnne	r1, #0
   130e8:	mov	r0, r1
   130ec:	bx	lr

000130f0 <table_compare_int8@@Base>:
   130f0:	cmp	r0, #0
   130f4:	beq	13128 <table_compare_int8@@Base+0x38>
   130f8:	cmp	r1, #0
   130fc:	moveq	r1, #1
   13100:	moveq	r0, r1
   13104:	bxeq	lr
   13108:	ldrsb	r2, [r1]
   1310c:	ldrsb	r0, [r0]
   13110:	mov	r1, #0
   13114:	cmp	r0, r2
   13118:	mvnlt	r1, #0
   1311c:	movwgt	r1, #1
   13120:	mov	r0, r1
   13124:	bx	lr
   13128:	cmp	r1, #0
   1312c:	mvnne	r1, #0
   13130:	mov	r0, r1
   13134:	bx	lr

00013138 <table_compare_uint8@@Base>:
   13138:	cmp	r0, #0
   1313c:	beq	13170 <table_compare_uint8@@Base+0x38>
   13140:	cmp	r1, #0
   13144:	moveq	r1, #1
   13148:	moveq	r0, r1
   1314c:	bxeq	lr
   13150:	ldrb	r2, [r1]
   13154:	ldrb	r0, [r0]
   13158:	mov	r1, #0
   1315c:	cmp	r0, r2
   13160:	mvncc	r1, #0
   13164:	movwhi	r1, #1
   13168:	mov	r0, r1
   1316c:	bx	lr
   13170:	cmp	r1, #0
   13174:	mvnne	r1, #0
   13178:	mov	r0, r1
   1317c:	bx	lr

00013180 <table_compare_int16@@Base>:
   13180:	cmp	r0, #0
   13184:	beq	131b8 <table_compare_int16@@Base+0x38>
   13188:	cmp	r1, #0
   1318c:	moveq	r1, #1
   13190:	moveq	r0, r1
   13194:	bxeq	lr
   13198:	ldrsh	r2, [r1]
   1319c:	ldrsh	r0, [r0]
   131a0:	mov	r1, #0
   131a4:	cmp	r0, r2
   131a8:	mvnlt	r1, #0
   131ac:	movwgt	r1, #1
   131b0:	mov	r0, r1
   131b4:	bx	lr
   131b8:	cmp	r1, #0
   131bc:	mvnne	r1, #0
   131c0:	mov	r0, r1
   131c4:	bx	lr

000131c8 <table_compare_uint16@@Base>:
   131c8:	cmp	r0, #0
   131cc:	beq	13200 <table_compare_uint16@@Base+0x38>
   131d0:	cmp	r1, #0
   131d4:	moveq	r1, #1
   131d8:	moveq	r0, r1
   131dc:	bxeq	lr
   131e0:	ldrh	r2, [r1]
   131e4:	ldrh	r0, [r0]
   131e8:	mov	r1, #0
   131ec:	cmp	r0, r2
   131f0:	mvncc	r1, #0
   131f4:	movwhi	r1, #1
   131f8:	mov	r0, r1
   131fc:	bx	lr
   13200:	cmp	r1, #0
   13204:	mvnne	r1, #0
   13208:	mov	r0, r1
   1320c:	bx	lr

00013210 <table_compare_int32@@Base>:
   13210:	cmp	r0, #0
   13214:	beq	13248 <table_compare_int32@@Base+0x38>
   13218:	cmp	r1, #0
   1321c:	moveq	r1, #1
   13220:	moveq	r0, r1
   13224:	bxeq	lr
   13228:	ldr	r2, [r1]
   1322c:	ldr	r0, [r0]
   13230:	mov	r1, #0
   13234:	cmp	r0, r2
   13238:	mvnlt	r1, #0
   1323c:	movwgt	r1, #1
   13240:	mov	r0, r1
   13244:	bx	lr
   13248:	cmp	r1, #0
   1324c:	mvnne	r1, #0
   13250:	mov	r0, r1
   13254:	bx	lr

00013258 <table_compare_uint32@@Base>:
   13258:	cmp	r0, #0
   1325c:	beq	13290 <table_compare_uint32@@Base+0x38>
   13260:	cmp	r1, #0
   13264:	moveq	r1, #1
   13268:	moveq	r0, r1
   1326c:	bxeq	lr
   13270:	ldr	r2, [r1]
   13274:	ldr	r0, [r0]
   13278:	mov	r1, #0
   1327c:	cmp	r0, r2
   13280:	mvncc	r1, #0
   13284:	movwhi	r1, #1
   13288:	mov	r0, r1
   1328c:	bx	lr
   13290:	cmp	r1, #0
   13294:	mvnne	r1, #0
   13298:	mov	r0, r1
   1329c:	bx	lr

000132a0 <table_compare_int64@@Base>:
   132a0:	cmp	r0, #0
   132a4:	beq	132f8 <table_compare_int64@@Base+0x58>
   132a8:	cmp	r1, #0
   132ac:	moveq	r1, #1
   132b0:	moveq	r0, r1
   132b4:	bxeq	lr
   132b8:	push	{r5, r7, fp, lr}
   132bc:	add	fp, sp, #8
   132c0:	ldm	r1, {r2, r7}
   132c4:	ldm	r0, {r0, r5}
   132c8:	mov	r1, #0
   132cc:	subs	r3, r0, r2
   132d0:	sbcs	r3, r5, r7
   132d4:	movwlt	r1, #1
   132d8:	cmp	r1, #0
   132dc:	mvnne	r1, #0
   132e0:	subs	r0, r2, r0
   132e4:	sbcs	r0, r7, r5
   132e8:	movwlt	r1, #1
   132ec:	pop	{r5, r7, fp, lr}
   132f0:	mov	r0, r1
   132f4:	bx	lr
   132f8:	cmp	r1, #0
   132fc:	mvnne	r1, #0
   13300:	mov	r0, r1
   13304:	bx	lr

00013308 <table_compare_uint64@@Base>:
   13308:	cmp	r0, #0
   1330c:	beq	13360 <table_compare_uint64@@Base+0x58>
   13310:	cmp	r1, #0
   13314:	moveq	r1, #1
   13318:	moveq	r0, r1
   1331c:	bxeq	lr
   13320:	push	{r5, r7, fp, lr}
   13324:	add	fp, sp, #8
   13328:	ldm	r1, {r2, r7}
   1332c:	ldm	r0, {r0, r5}
   13330:	mov	r1, #0
   13334:	subs	r3, r0, r2
   13338:	sbcs	r3, r5, r7
   1333c:	movwcc	r1, #1
   13340:	cmp	r1, #0
   13344:	mvnne	r1, #0
   13348:	subs	r0, r2, r0
   1334c:	sbcs	r0, r7, r5
   13350:	movwcc	r1, #1
   13354:	pop	{r5, r7, fp, lr}
   13358:	mov	r0, r1
   1335c:	bx	lr
   13360:	cmp	r1, #0
   13364:	mvnne	r1, #0
   13368:	mov	r0, r1
   1336c:	bx	lr

00013370 <table_compare_short@@Base>:
   13370:	cmp	r0, #0
   13374:	beq	133a8 <table_compare_short@@Base+0x38>
   13378:	cmp	r1, #0
   1337c:	moveq	r1, #1
   13380:	moveq	r0, r1
   13384:	bxeq	lr
   13388:	ldrsh	r2, [r1]
   1338c:	ldrsh	r0, [r0]
   13390:	mov	r1, #0
   13394:	cmp	r0, r2
   13398:	mvnlt	r1, #0
   1339c:	movwgt	r1, #1
   133a0:	mov	r0, r1
   133a4:	bx	lr
   133a8:	cmp	r1, #0
   133ac:	mvnne	r1, #0
   133b0:	mov	r0, r1
   133b4:	bx	lr

000133b8 <table_compare_ushort@@Base>:
   133b8:	cmp	r0, #0
   133bc:	beq	133f0 <table_compare_ushort@@Base+0x38>
   133c0:	cmp	r1, #0
   133c4:	moveq	r1, #1
   133c8:	moveq	r0, r1
   133cc:	bxeq	lr
   133d0:	ldrh	r2, [r1]
   133d4:	ldrh	r0, [r0]
   133d8:	mov	r1, #0
   133dc:	cmp	r0, r2
   133e0:	mvncc	r1, #0
   133e4:	movwhi	r1, #1
   133e8:	mov	r0, r1
   133ec:	bx	lr
   133f0:	cmp	r1, #0
   133f4:	mvnne	r1, #0
   133f8:	mov	r0, r1
   133fc:	bx	lr

00013400 <table_compare_long@@Base>:
   13400:	cmp	r0, #0
   13404:	beq	13438 <table_compare_long@@Base+0x38>
   13408:	cmp	r1, #0
   1340c:	moveq	r1, #1
   13410:	moveq	r0, r1
   13414:	bxeq	lr
   13418:	ldr	r2, [r1]
   1341c:	ldr	r0, [r0]
   13420:	mov	r1, #0
   13424:	cmp	r0, r2
   13428:	mvnlt	r1, #0
   1342c:	movwgt	r1, #1
   13430:	mov	r0, r1
   13434:	bx	lr
   13438:	cmp	r1, #0
   1343c:	mvnne	r1, #0
   13440:	mov	r0, r1
   13444:	bx	lr

00013448 <table_compare_ulong@@Base>:
   13448:	cmp	r0, #0
   1344c:	beq	13480 <table_compare_ulong@@Base+0x38>
   13450:	cmp	r1, #0
   13454:	moveq	r1, #1
   13458:	moveq	r0, r1
   1345c:	bxeq	lr
   13460:	ldr	r2, [r1]
   13464:	ldr	r0, [r0]
   13468:	mov	r1, #0
   1346c:	cmp	r0, r2
   13470:	mvncc	r1, #0
   13474:	movwhi	r1, #1
   13478:	mov	r0, r1
   1347c:	bx	lr
   13480:	cmp	r1, #0
   13484:	mvnne	r1, #0
   13488:	mov	r0, r1
   1348c:	bx	lr

00013490 <table_compare_llong@@Base>:
   13490:	cmp	r0, #0
   13494:	beq	134e8 <table_compare_llong@@Base+0x58>
   13498:	cmp	r1, #0
   1349c:	moveq	r1, #1
   134a0:	moveq	r0, r1
   134a4:	bxeq	lr
   134a8:	push	{r5, r7, fp, lr}
   134ac:	add	fp, sp, #8
   134b0:	ldm	r1, {r2, r7}
   134b4:	ldm	r0, {r0, r5}
   134b8:	mov	r1, #0
   134bc:	subs	r3, r0, r2
   134c0:	sbcs	r3, r5, r7
   134c4:	movwlt	r1, #1
   134c8:	cmp	r1, #0
   134cc:	mvnne	r1, #0
   134d0:	subs	r0, r2, r0
   134d4:	sbcs	r0, r7, r5
   134d8:	movwlt	r1, #1
   134dc:	pop	{r5, r7, fp, lr}
   134e0:	mov	r0, r1
   134e4:	bx	lr
   134e8:	cmp	r1, #0
   134ec:	mvnne	r1, #0
   134f0:	mov	r0, r1
   134f4:	bx	lr

000134f8 <table_compare_ullong@@Base>:
   134f8:	cmp	r0, #0
   134fc:	beq	13530 <table_compare_ullong@@Base+0x38>
   13500:	cmp	r1, #0
   13504:	moveq	r1, #1
   13508:	moveq	r0, r1
   1350c:	bxeq	lr
   13510:	ldr	r2, [r1]
   13514:	ldr	r0, [r0]
   13518:	mov	r1, #0
   1351c:	cmp	r0, r2
   13520:	mvncc	r1, #0
   13524:	movwhi	r1, #1
   13528:	mov	r0, r1
   1352c:	bx	lr
   13530:	cmp	r1, #0
   13534:	mvnne	r1, #0
   13538:	mov	r0, r1
   1353c:	bx	lr

00013540 <table_compare_float@@Base>:
   13540:	cmp	r0, #0
   13544:	beq	1357c <table_compare_float@@Base+0x3c>
   13548:	cmp	r1, #0
   1354c:	moveq	r1, #1
   13550:	moveq	r0, r1
   13554:	bxeq	lr
   13558:	vldr	s0, [r1]
   1355c:	vldr	s2, [r0]
   13560:	mov	r1, #0
   13564:	vcmpe.f32	s2, s0
   13568:	vmrs	APSR_nzcv, fpscr
   1356c:	mvnmi	r1, #0
   13570:	movwgt	r1, #1
   13574:	mov	r0, r1
   13578:	bx	lr
   1357c:	cmp	r1, #0
   13580:	mvnne	r1, #0
   13584:	mov	r0, r1
   13588:	bx	lr

0001358c <table_compare_double@@Base>:
   1358c:	cmp	r0, #0
   13590:	beq	135c8 <table_compare_double@@Base+0x3c>
   13594:	cmp	r1, #0
   13598:	moveq	r1, #1
   1359c:	moveq	r0, r1
   135a0:	bxeq	lr
   135a4:	vldr	d16, [r1]
   135a8:	vldr	d17, [r0]
   135ac:	mov	r1, #0
   135b0:	vcmpe.f64	d17, d16
   135b4:	vmrs	APSR_nzcv, fpscr
   135b8:	mvnmi	r1, #0
   135bc:	movwgt	r1, #1
   135c0:	mov	r0, r1
   135c4:	bx	lr
   135c8:	cmp	r1, #0
   135cc:	mvnne	r1, #0
   135d0:	mov	r0, r1
   135d4:	bx	lr

000135d8 <table_compare_ldouble@@Base>:
   135d8:	cmp	r0, #0
   135dc:	beq	13614 <table_compare_ldouble@@Base+0x3c>
   135e0:	cmp	r1, #0
   135e4:	moveq	r1, #1
   135e8:	moveq	r0, r1
   135ec:	bxeq	lr
   135f0:	vldr	d16, [r1]
   135f4:	vldr	d17, [r0]
   135f8:	mov	r1, #0
   135fc:	vcmpe.f64	d17, d16
   13600:	vmrs	APSR_nzcv, fpscr
   13604:	mvnmi	r1, #0
   13608:	movwgt	r1, #1
   1360c:	mov	r0, r1
   13610:	bx	lr
   13614:	cmp	r1, #0
   13618:	mvnne	r1, #0
   1361c:	mov	r0, r1
   13620:	bx	lr

00013624 <table_compare_char@@Base>:
   13624:	cmp	r0, #0
   13628:	beq	1365c <table_compare_char@@Base+0x38>
   1362c:	cmp	r1, #0
   13630:	moveq	r1, #1
   13634:	moveq	r0, r1
   13638:	bxeq	lr
   1363c:	ldrb	r2, [r1]
   13640:	ldrb	r0, [r0]
   13644:	mov	r1, #0
   13648:	cmp	r0, r2
   1364c:	mvncc	r1, #0
   13650:	movwhi	r1, #1
   13654:	mov	r0, r1
   13658:	bx	lr
   1365c:	cmp	r1, #0
   13660:	mvnne	r1, #0
   13664:	mov	r0, r1
   13668:	bx	lr

0001366c <table_compare_uchar@@Base>:
   1366c:	cmp	r0, #0
   13670:	beq	136a4 <table_compare_uchar@@Base+0x38>
   13674:	cmp	r1, #0
   13678:	moveq	r1, #1
   1367c:	moveq	r0, r1
   13680:	bxeq	lr
   13684:	ldrb	r2, [r1]
   13688:	ldrb	r0, [r0]
   1368c:	mov	r1, #0
   13690:	cmp	r0, r2
   13694:	mvncc	r1, #0
   13698:	movwhi	r1, #1
   1369c:	mov	r0, r1
   136a0:	bx	lr
   136a4:	cmp	r1, #0
   136a8:	mvnne	r1, #0
   136ac:	mov	r0, r1
   136b0:	bx	lr

000136b4 <table_compare_string@@Base>:
   136b4:	cmp	r0, #0
   136b8:	beq	136d0 <table_compare_string@@Base+0x1c>
   136bc:	cmp	r1, #0
   136c0:	moveq	r1, #1
   136c4:	moveq	r0, r1
   136c8:	bxeq	lr
   136cc:	b	11f00 <strcmp@plt>
   136d0:	cmp	r1, #0
   136d4:	mvnne	r1, #0
   136d8:	mov	r0, r1
   136dc:	bx	lr

000136e0 <table_compare_ptr@@Base>:
   136e0:	mov	r2, #0
   136e4:	cmp	r0, r1
   136e8:	mvncc	r2, #0
   136ec:	movwhi	r2, #1
   136f0:	mov	r0, r2
   136f4:	bx	lr

000136f8 <table_get_default_compare_function_for_data_type@@Base>:
   136f8:	cmp	r0, #23
   136fc:	movwls	r1, #21968	; 0x55d0
   13700:	movhi	r0, #0
   13704:	movtls	r1, #1
   13708:	ldrls	r0, [r1, r0, lsl #2]
   1370c:	bx	lr

00013710 <table_get@@Base>:
   13710:	push	{fp, lr}
   13714:	mov	fp, sp
   13718:	bl	14b04 <table_get_cell_ptr@@Base>
   1371c:	ldr	r0, [r0]
   13720:	pop	{fp, pc}

00013724 <table_get_bool@@Base>:
   13724:	push	{fp, lr}
   13728:	mov	fp, sp
   1372c:	bl	14b04 <table_get_cell_ptr@@Base>
   13730:	ldr	r0, [r0]
   13734:	ldrb	r0, [r0]
   13738:	pop	{fp, pc}

0001373c <table_get_int@@Base>:
   1373c:	push	{fp, lr}
   13740:	mov	fp, sp
   13744:	bl	14b04 <table_get_cell_ptr@@Base>
   13748:	ldr	r0, [r0]
   1374c:	ldr	r0, [r0]
   13750:	pop	{fp, pc}

00013754 <table_get_uint@@Base>:
   13754:	push	{fp, lr}
   13758:	mov	fp, sp
   1375c:	bl	14b04 <table_get_cell_ptr@@Base>
   13760:	ldr	r0, [r0]
   13764:	ldr	r0, [r0]
   13768:	pop	{fp, pc}

0001376c <table_get_int8@@Base>:
   1376c:	push	{fp, lr}
   13770:	mov	fp, sp
   13774:	bl	14b04 <table_get_cell_ptr@@Base>
   13778:	ldr	r0, [r0]
   1377c:	ldrsb	r0, [r0]
   13780:	pop	{fp, pc}

00013784 <table_get_uint8@@Base>:
   13784:	push	{fp, lr}
   13788:	mov	fp, sp
   1378c:	bl	14b04 <table_get_cell_ptr@@Base>
   13790:	ldr	r0, [r0]
   13794:	ldrb	r0, [r0]
   13798:	pop	{fp, pc}

0001379c <table_get_int16@@Base>:
   1379c:	push	{fp, lr}
   137a0:	mov	fp, sp
   137a4:	bl	14b04 <table_get_cell_ptr@@Base>
   137a8:	ldr	r0, [r0]
   137ac:	ldrsh	r0, [r0]
   137b0:	pop	{fp, pc}

000137b4 <table_get_uint16@@Base>:
   137b4:	push	{fp, lr}
   137b8:	mov	fp, sp
   137bc:	bl	14b04 <table_get_cell_ptr@@Base>
   137c0:	ldr	r0, [r0]
   137c4:	ldrh	r0, [r0]
   137c8:	pop	{fp, pc}

000137cc <table_get_int32@@Base>:
   137cc:	push	{fp, lr}
   137d0:	mov	fp, sp
   137d4:	bl	14b04 <table_get_cell_ptr@@Base>
   137d8:	ldr	r0, [r0]
   137dc:	ldr	r0, [r0]
   137e0:	pop	{fp, pc}

000137e4 <table_get_uint32@@Base>:
   137e4:	push	{fp, lr}
   137e8:	mov	fp, sp
   137ec:	bl	14b04 <table_get_cell_ptr@@Base>
   137f0:	ldr	r0, [r0]
   137f4:	ldr	r0, [r0]
   137f8:	pop	{fp, pc}

000137fc <table_get_int64@@Base>:
   137fc:	push	{fp, lr}
   13800:	mov	fp, sp
   13804:	bl	14b04 <table_get_cell_ptr@@Base>
   13808:	ldr	r0, [r0]
   1380c:	ldrd	r0, [r0]
   13810:	pop	{fp, pc}

00013814 <table_get_uint64@@Base>:
   13814:	push	{fp, lr}
   13818:	mov	fp, sp
   1381c:	bl	14b04 <table_get_cell_ptr@@Base>
   13820:	ldr	r0, [r0]
   13824:	ldrd	r0, [r0]
   13828:	pop	{fp, pc}

0001382c <table_get_short@@Base>:
   1382c:	push	{fp, lr}
   13830:	mov	fp, sp
   13834:	bl	14b04 <table_get_cell_ptr@@Base>
   13838:	ldr	r0, [r0]
   1383c:	ldrsh	r0, [r0]
   13840:	pop	{fp, pc}

00013844 <table_get_ushort@@Base>:
   13844:	push	{fp, lr}
   13848:	mov	fp, sp
   1384c:	bl	14b04 <table_get_cell_ptr@@Base>
   13850:	ldr	r0, [r0]
   13854:	ldrh	r0, [r0]
   13858:	pop	{fp, pc}

0001385c <table_get_long@@Base>:
   1385c:	push	{fp, lr}
   13860:	mov	fp, sp
   13864:	bl	14b04 <table_get_cell_ptr@@Base>
   13868:	ldr	r0, [r0]
   1386c:	ldr	r0, [r0]
   13870:	pop	{fp, pc}

00013874 <table_get_ulong@@Base>:
   13874:	push	{fp, lr}
   13878:	mov	fp, sp
   1387c:	bl	14b04 <table_get_cell_ptr@@Base>
   13880:	ldr	r0, [r0]
   13884:	ldr	r0, [r0]
   13888:	pop	{fp, pc}

0001388c <table_get_llong@@Base>:
   1388c:	push	{fp, lr}
   13890:	mov	fp, sp
   13894:	bl	14b04 <table_get_cell_ptr@@Base>
   13898:	ldr	r0, [r0]
   1389c:	ldrd	r0, [r0]
   138a0:	pop	{fp, pc}

000138a4 <table_get_ullong@@Base>:
   138a4:	push	{fp, lr}
   138a8:	mov	fp, sp
   138ac:	bl	14b04 <table_get_cell_ptr@@Base>
   138b0:	ldr	r0, [r0]
   138b4:	ldrd	r0, [r0]
   138b8:	pop	{fp, pc}

000138bc <table_get_float@@Base>:
   138bc:	push	{fp, lr}
   138c0:	mov	fp, sp
   138c4:	bl	14b04 <table_get_cell_ptr@@Base>
   138c8:	ldr	r0, [r0]
   138cc:	vldr	s0, [r0]
   138d0:	pop	{fp, pc}

000138d4 <table_get_double@@Base>:
   138d4:	push	{fp, lr}
   138d8:	mov	fp, sp
   138dc:	bl	14b04 <table_get_cell_ptr@@Base>
   138e0:	ldr	r0, [r0]
   138e4:	vldr	d0, [r0]
   138e8:	pop	{fp, pc}

000138ec <table_get_ldouble@@Base>:
   138ec:	push	{fp, lr}
   138f0:	mov	fp, sp
   138f4:	bl	14b04 <table_get_cell_ptr@@Base>
   138f8:	ldr	r0, [r0]
   138fc:	vldr	d0, [r0]
   13900:	pop	{fp, pc}

00013904 <table_get_char@@Base>:
   13904:	push	{fp, lr}
   13908:	mov	fp, sp
   1390c:	bl	14b04 <table_get_cell_ptr@@Base>
   13910:	ldr	r0, [r0]
   13914:	ldrb	r0, [r0]
   13918:	pop	{fp, pc}

0001391c <table_get_uchar@@Base>:
   1391c:	push	{fp, lr}
   13920:	mov	fp, sp
   13924:	bl	14b04 <table_get_cell_ptr@@Base>
   13928:	ldr	r0, [r0]
   1392c:	ldrb	r0, [r0]
   13930:	pop	{fp, pc}

00013934 <table_get_string@@Base>:
   13934:	push	{fp, lr}
   13938:	mov	fp, sp
   1393c:	bl	14b04 <table_get_cell_ptr@@Base>
   13940:	ldr	r0, [r0]
   13944:	pop	{fp, pc}

00013948 <table_get_ptr@@Base>:
   13948:	push	{fp, lr}
   1394c:	mov	fp, sp
   13950:	bl	14b04 <table_get_cell_ptr@@Base>
   13954:	ldr	r0, [r0]
   13958:	pop	{fp, pc}

0001395c <table_row_init@@Base>:
   1395c:	push	{r4, r5, fp, lr}
   13960:	add	fp, sp, #8
   13964:	mov	r4, r1
   13968:	ldr	r1, [r0, #12]
   1396c:	ldr	r5, [r0, #16]
   13970:	lsl	r0, r1, #2
   13974:	bl	11f48 <malloc@plt>
   13978:	str	r0, [r5, r4, lsl #2]
   1397c:	pop	{r4, r5, fp, pc}

00013980 <table_get_row_ptr@@Base>:
   13980:	ldr	r0, [r0, #16]
   13984:	add	r0, r0, r1, lsl #2
   13988:	bx	lr

0001398c <table_row_destroy@@Base>:
   1398c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13990:	add	fp, sp, #24
   13994:	mov	r4, r1
   13998:	mov	r5, r0
   1399c:	bl	12c8c <table_get_column_length@@Base>
   139a0:	ldr	r8, [r5, #16]
   139a4:	cmp	r0, #1
   139a8:	blt	139d0 <table_row_destroy@@Base+0x44>
   139ac:	mov	r6, r0
   139b0:	mov	r7, #0
   139b4:	mov	r0, r5
   139b8:	mov	r1, r4
   139bc:	mov	r2, r7
   139c0:	bl	14b20 <table_cell_destroy@@Base>
   139c4:	add	r7, r7, #1
   139c8:	cmp	r6, r7
   139cc:	bne	139b4 <table_row_destroy@@Base+0x28>
   139d0:	ldr	r0, [r8, r4, lsl #2]
   139d4:	cmp	r0, #0
   139d8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   139dc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   139e0:	b	11f18 <free@plt>

000139e4 <table_get_row_length@@Base>:
   139e4:	ldr	r0, [r0, #20]
   139e8:	bx	lr

000139ec <table_add_row@@Base>:
   139ec:	push	{r4, r5, r6, r7, fp, lr}
   139f0:	add	fp, sp, #16
   139f4:	ldr	r5, [r0, #20]
   139f8:	ldr	r1, [r0, #24]
   139fc:	mov	r4, r0
   13a00:	udiv	r0, r5, r1
   13a04:	mls	r0, r0, r1, r5
   13a08:	cmp	r0, #0
   13a0c:	bne	13a30 <table_add_row@@Base+0x44>
   13a10:	ldr	r2, [r4, #28]
   13a14:	ldr	r0, [r4, #16]
   13a18:	add	r1, r2, r1
   13a1c:	str	r1, [r4, #28]
   13a20:	lsl	r1, r1, #2
   13a24:	bl	11f30 <realloc@plt>
   13a28:	str	r0, [r4, #16]
   13a2c:	ldr	r5, [r4, #20]
   13a30:	mov	r0, r4
   13a34:	bl	12c8c <table_get_column_length@@Base>
   13a38:	mov	r6, r0
   13a3c:	ldr	r0, [r4, #12]
   13a40:	ldr	r7, [r4, #16]
   13a44:	lsl	r0, r0, #2
   13a48:	bl	11f48 <malloc@plt>
   13a4c:	cmp	r6, #1
   13a50:	str	r0, [r7, r5, lsl #2]
   13a54:	blt	13a78 <table_add_row@@Base+0x8c>
   13a58:	mov	r7, #0
   13a5c:	mov	r0, r4
   13a60:	mov	r1, r5
   13a64:	mov	r2, r7
   13a68:	bl	14ae4 <table_cell_init@@Base>
   13a6c:	add	r7, r7, #1
   13a70:	cmp	r6, r7
   13a74:	bne	13a5c <table_add_row@@Base+0x70>
   13a78:	ldr	r1, [r4, #20]
   13a7c:	mov	r0, r4
   13a80:	mvn	r2, #0
   13a84:	mov	r3, #2
   13a88:	bl	12b98 <table_notify@@Base>
   13a8c:	ldr	r0, [r4, #20]
   13a90:	add	r1, r0, #1
   13a94:	str	r1, [r4, #20]
   13a98:	pop	{r4, r5, r6, r7, fp, pc}

00013a9c <table_remove_row@@Base>:
   13a9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13aa0:	add	fp, sp, #24
   13aa4:	ldr	r8, [r0, #20]
   13aa8:	mov	r4, r1
   13aac:	mov	r5, r0
   13ab0:	bl	12c8c <table_get_column_length@@Base>
   13ab4:	cmp	r0, #1
   13ab8:	blt	13b04 <table_remove_row@@Base+0x68>
   13abc:	mov	r6, r0
   13ac0:	mov	r7, #0
   13ac4:	mov	r0, r5
   13ac8:	mov	r1, r7
   13acc:	bl	12d0c <table_get_column_data_type@@Base>
   13ad0:	cmp	r0, #23
   13ad4:	beq	13af8 <table_remove_row@@Base+0x5c>
   13ad8:	mov	r0, r5
   13adc:	mov	r1, r4
   13ae0:	mov	r2, r7
   13ae4:	bl	14b04 <table_get_cell_ptr@@Base>
   13ae8:	ldr	r0, [r0]
   13aec:	cmp	r0, #0
   13af0:	beq	13af8 <table_remove_row@@Base+0x5c>
   13af4:	bl	11f18 <free@plt>
   13af8:	add	r7, r7, #1
   13afc:	cmp	r6, r7
   13b00:	bne	13ac4 <table_remove_row@@Base+0x28>
   13b04:	ldr	r0, [r5, #16]
   13b08:	ldr	r0, [r0, r4, lsl #2]
   13b0c:	cmp	r0, #0
   13b10:	beq	13b18 <table_remove_row@@Base+0x7c>
   13b14:	bl	11f18 <free@plt>
   13b18:	sub	r0, r8, #1
   13b1c:	cmp	r0, r4
   13b20:	ble	13b44 <table_remove_row@@Base+0xa8>
   13b24:	mov	r1, r4
   13b28:	ldr	r2, [r5, #16]
   13b2c:	add	r3, r2, r1, lsl #2
   13b30:	ldr	r3, [r3, #4]
   13b34:	str	r3, [r2, r1, lsl #2]
   13b38:	add	r1, r1, #1
   13b3c:	cmp	r0, r1
   13b40:	bne	13b28 <table_remove_row@@Base+0x8c>
   13b44:	ldr	r0, [r5, #20]
   13b48:	ldr	r1, [r5, #24]
   13b4c:	sub	r0, r0, #1
   13b50:	udiv	r2, r0, r1
   13b54:	str	r0, [r5, #20]
   13b58:	mls	r0, r2, r1, r0
   13b5c:	cmp	r0, #0
   13b60:	bne	13b80 <table_remove_row@@Base+0xe4>
   13b64:	ldr	r2, [r5, #28]
   13b68:	ldr	r0, [r5, #16]
   13b6c:	sub	r1, r2, r1
   13b70:	str	r1, [r5, #28]
   13b74:	lsl	r1, r1, #2
   13b78:	bl	11f30 <realloc@plt>
   13b7c:	str	r0, [r5, #16]
   13b80:	mov	r0, r5
   13b84:	mov	r1, r4
   13b88:	mvn	r2, #0
   13b8c:	mov	r3, #4
   13b90:	bl	12b98 <table_notify@@Base>
   13b94:	mov	r0, #0
   13b98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013b9c <table_set_row_ptr@@Base>:
   13b9c:	ldr	r2, [r2]
   13ba0:	ldr	r0, [r0, #16]
   13ba4:	str	r2, [r0, r1, lsl #2]
   13ba8:	bx	lr

00013bac <table_set@@Base>:
   13bac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13bb0:	add	fp, sp, #24
   13bb4:	mov	r8, r3
   13bb8:	mov	r4, r2
   13bbc:	mov	r9, r1
   13bc0:	mov	r6, r0
   13bc4:	bl	14b04 <table_get_cell_ptr@@Base>
   13bc8:	mov	r5, r0
   13bcc:	mov	r0, r6
   13bd0:	mov	r1, r4
   13bd4:	bl	12c64 <table_get_col_ptr@@Base>
   13bd8:	ldr	r1, [fp, #8]
   13bdc:	mvn	r7, #0
   13be0:	cmp	r1, #23
   13be4:	bhi	13ea8 <table_set@@Base+0x2fc>
   13be8:	add	r2, pc, #0
   13bec:	ldr	pc, [r2, r1, lsl #2]
   13bf0:	andeq	r3, r1, r0, asr ip
   13bf4:	andeq	r3, r1, r0, ror #24
   13bf8:	andeq	r3, r1, r0, ror ip
   13bfc:	andeq	r3, r1, r0, lsl #25
   13c00:	muleq	r1, r0, ip
   13c04:	andeq	r3, r1, r0, lsr #25
   13c08:			; <UNDEFINED> instruction: 0x00013cb0
   13c0c:	andeq	r3, r1, r0, asr #25
   13c10:	ldrdeq	r3, [r1], -r0
   13c14:	andeq	r3, r1, r0, ror #25
   13c18:	strdeq	r3, [r1], -r0
   13c1c:	andeq	r3, r1, r0, lsl #26
   13c20:	andeq	r3, r1, r8, lsr sp
   13c24:	andeq	r3, r1, r8, asr #26
   13c28:	andeq	r3, r1, r8, asr sp
   13c2c:	andeq	r3, r1, r8, ror #26
   13c30:	andeq	r3, r1, r8, ror sp
   13c34:			; <UNDEFINED> instruction: 0x00013db0
   13c38:	andeq	r3, r1, r0, asr #27
   13c3c:	andeq	r3, r1, r0, lsl #28
   13c40:	andeq	r3, r1, r0, lsl lr
   13c44:	andeq	r3, r1, r0, lsr #28
   13c48:	andeq	r3, r1, ip, asr lr
   13c4c:			; <UNDEFINED> instruction: 0x00013eb0
   13c50:	ldr	r0, [r0, #4]
   13c54:	cmp	r0, #0
   13c58:	bne	13ea8 <table_set@@Base+0x2fc>
   13c5c:	b	13d84 <table_set@@Base+0x1d8>
   13c60:	ldr	r0, [r0, #4]
   13c64:	cmp	r0, #1
   13c68:	beq	13d84 <table_set@@Base+0x1d8>
   13c6c:	b	13ea8 <table_set@@Base+0x2fc>
   13c70:	ldr	r0, [r0, #4]
   13c74:	cmp	r0, #2
   13c78:	beq	13e68 <table_set@@Base+0x2bc>
   13c7c:	b	13ea8 <table_set@@Base+0x2fc>
   13c80:	ldr	r0, [r0, #4]
   13c84:	cmp	r0, #3
   13c88:	beq	13e68 <table_set@@Base+0x2bc>
   13c8c:	b	13ea8 <table_set@@Base+0x2fc>
   13c90:	ldr	r0, [r0, #4]
   13c94:	cmp	r0, #4
   13c98:	beq	13d0c <table_set@@Base+0x160>
   13c9c:	b	13ea8 <table_set@@Base+0x2fc>
   13ca0:	ldr	r0, [r0, #4]
   13ca4:	cmp	r0, #5
   13ca8:	beq	13d0c <table_set@@Base+0x160>
   13cac:	b	13ea8 <table_set@@Base+0x2fc>
   13cb0:	ldr	r0, [r0, #4]
   13cb4:	cmp	r0, #6
   13cb8:	beq	13d84 <table_set@@Base+0x1d8>
   13cbc:	b	13ea8 <table_set@@Base+0x2fc>
   13cc0:	ldr	r0, [r0, #4]
   13cc4:	cmp	r0, #7
   13cc8:	beq	13d84 <table_set@@Base+0x1d8>
   13ccc:	b	13ea8 <table_set@@Base+0x2fc>
   13cd0:	ldr	r0, [r0, #4]
   13cd4:	cmp	r0, #8
   13cd8:	beq	13dcc <table_set@@Base+0x220>
   13cdc:	b	13ea8 <table_set@@Base+0x2fc>
   13ce0:	ldr	r0, [r0, #4]
   13ce4:	cmp	r0, #9
   13ce8:	beq	13dcc <table_set@@Base+0x220>
   13cec:	b	13ea8 <table_set@@Base+0x2fc>
   13cf0:	ldr	r0, [r0, #4]
   13cf4:	cmp	r0, #10
   13cf8:	beq	13d0c <table_set@@Base+0x160>
   13cfc:	b	13ea8 <table_set@@Base+0x2fc>
   13d00:	ldr	r0, [r0, #4]
   13d04:	cmp	r0, #11
   13d08:	bne	13ea8 <table_set@@Base+0x2fc>
   13d0c:	ldr	r0, [r5]
   13d10:	cmp	r0, #0
   13d14:	bne	13d2c <table_set@@Base+0x180>
   13d18:	mov	r0, #2
   13d1c:	bl	11f48 <malloc@plt>
   13d20:	cmp	r0, #0
   13d24:	str	r0, [r5]
   13d28:	beq	13ea8 <table_set@@Base+0x2fc>
   13d2c:	ldrh	r1, [r8]
   13d30:	strh	r1, [r0]
   13d34:	b	13e90 <table_set@@Base+0x2e4>
   13d38:	ldr	r0, [r0, #4]
   13d3c:	cmp	r0, #12
   13d40:	beq	13d84 <table_set@@Base+0x1d8>
   13d44:	b	13ea8 <table_set@@Base+0x2fc>
   13d48:	ldr	r0, [r0, #4]
   13d4c:	cmp	r0, #13
   13d50:	beq	13d84 <table_set@@Base+0x1d8>
   13d54:	b	13ea8 <table_set@@Base+0x2fc>
   13d58:	ldr	r0, [r0, #4]
   13d5c:	cmp	r0, #14
   13d60:	beq	13dcc <table_set@@Base+0x220>
   13d64:	b	13ea8 <table_set@@Base+0x2fc>
   13d68:	ldr	r0, [r0, #4]
   13d6c:	cmp	r0, #15
   13d70:	beq	13dcc <table_set@@Base+0x220>
   13d74:	b	13ea8 <table_set@@Base+0x2fc>
   13d78:	ldr	r0, [r0, #4]
   13d7c:	cmp	r0, #16
   13d80:	bne	13ea8 <table_set@@Base+0x2fc>
   13d84:	ldr	r0, [r5]
   13d88:	cmp	r0, #0
   13d8c:	bne	13da4 <table_set@@Base+0x1f8>
   13d90:	mov	r0, #4
   13d94:	bl	11f48 <malloc@plt>
   13d98:	cmp	r0, #0
   13d9c:	str	r0, [r5]
   13da0:	beq	13ea8 <table_set@@Base+0x2fc>
   13da4:	ldr	r1, [r8]
   13da8:	str	r1, [r0]
   13dac:	b	13e90 <table_set@@Base+0x2e4>
   13db0:	ldr	r0, [r0, #4]
   13db4:	cmp	r0, #17
   13db8:	beq	13dcc <table_set@@Base+0x220>
   13dbc:	b	13ea8 <table_set@@Base+0x2fc>
   13dc0:	ldr	r0, [r0, #4]
   13dc4:	cmp	r0, #18
   13dc8:	bne	13ea8 <table_set@@Base+0x2fc>
   13dcc:	ldr	r0, [r5]
   13dd0:	cmp	r0, #0
   13dd4:	bne	13dec <table_set@@Base+0x240>
   13dd8:	mov	r0, #8
   13ddc:	bl	11f48 <malloc@plt>
   13de0:	cmp	r0, #0
   13de4:	str	r0, [r5]
   13de8:	beq	13ea8 <table_set@@Base+0x2fc>
   13dec:	ldr	r1, [r8]
   13df0:	ldr	r2, [r8, #4]
   13df4:	str	r2, [r0, #4]
   13df8:	str	r1, [r0]
   13dfc:	b	13e90 <table_set@@Base+0x2e4>
   13e00:	ldr	r0, [r0, #4]
   13e04:	cmp	r0, #19
   13e08:	beq	13e68 <table_set@@Base+0x2bc>
   13e0c:	b	13ea8 <table_set@@Base+0x2fc>
   13e10:	ldr	r0, [r0, #4]
   13e14:	cmp	r0, #20
   13e18:	beq	13e68 <table_set@@Base+0x2bc>
   13e1c:	b	13ea8 <table_set@@Base+0x2fc>
   13e20:	ldr	r0, [r0, #4]
   13e24:	cmp	r0, #21
   13e28:	bne	13ea8 <table_set@@Base+0x2fc>
   13e2c:	mov	r0, r8
   13e30:	bl	11f6c <strlen@plt>
   13e34:	ldr	r2, [r5]
   13e38:	add	r1, r0, #1
   13e3c:	mov	r0, r2
   13e40:	bl	11f30 <realloc@plt>
   13e44:	cmp	r0, #0
   13e48:	str	r0, [r5]
   13e4c:	beq	13ea8 <table_set@@Base+0x2fc>
   13e50:	mov	r1, r8
   13e54:	bl	11f3c <strcpy@plt>
   13e58:	b	13e90 <table_set@@Base+0x2e4>
   13e5c:	ldr	r0, [r0, #4]
   13e60:	cmp	r0, #22
   13e64:	bne	13ea8 <table_set@@Base+0x2fc>
   13e68:	ldr	r0, [r5]
   13e6c:	cmp	r0, #0
   13e70:	bne	13e88 <table_set@@Base+0x2dc>
   13e74:	mov	r0, #1
   13e78:	bl	11f48 <malloc@plt>
   13e7c:	cmp	r0, #0
   13e80:	str	r0, [r5]
   13e84:	beq	13ea8 <table_set@@Base+0x2fc>
   13e88:	ldrb	r1, [r8]
   13e8c:	strb	r1, [r0]
   13e90:	mov	r0, r6
   13e94:	mov	r1, r9
   13e98:	mov	r2, r4
   13e9c:	mov	r3, #1
   13ea0:	bl	12b98 <table_notify@@Base>
   13ea4:	mov	r7, #0
   13ea8:	mov	r0, r7
   13eac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13eb0:	ldr	r0, [r0, #4]
   13eb4:	cmp	r0, #23
   13eb8:	bne	13ea8 <table_set@@Base+0x2fc>
   13ebc:	str	r8, [r5]
   13ec0:	b	13e90 <table_set@@Base+0x2e4>

00013ec4 <table_set_bool@@Base>:
   13ec4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ec8:	add	fp, sp, #24
   13ecc:	mov	r8, r3
   13ed0:	mov	r4, r2
   13ed4:	mov	r9, r1
   13ed8:	mov	r6, r0
   13edc:	bl	14b04 <table_get_cell_ptr@@Base>
   13ee0:	mov	r5, r0
   13ee4:	mov	r0, r6
   13ee8:	mov	r1, r4
   13eec:	bl	12c64 <table_get_col_ptr@@Base>
   13ef0:	ldr	r0, [r0, #4]
   13ef4:	mvn	r7, #0
   13ef8:	cmp	r0, #22
   13efc:	bne	13f3c <table_set_bool@@Base+0x78>
   13f00:	ldr	r0, [r5]
   13f04:	cmp	r0, #0
   13f08:	bne	13f20 <table_set_bool@@Base+0x5c>
   13f0c:	mov	r0, #1
   13f10:	bl	11f48 <malloc@plt>
   13f14:	cmp	r0, #0
   13f18:	str	r0, [r5]
   13f1c:	beq	13f3c <table_set_bool@@Base+0x78>
   13f20:	strb	r8, [r0]
   13f24:	mov	r0, r6
   13f28:	mov	r1, r9
   13f2c:	mov	r2, r4
   13f30:	mov	r3, #1
   13f34:	bl	12b98 <table_notify@@Base>
   13f38:	mov	r7, #0
   13f3c:	mov	r0, r7
   13f40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f44 <table_set_int@@Base>:
   13f44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f48:	add	fp, sp, #24
   13f4c:	mov	r8, r3
   13f50:	mov	r4, r2
   13f54:	mov	r5, r1
   13f58:	mov	r6, r0
   13f5c:	bl	14b04 <table_get_cell_ptr@@Base>
   13f60:	mov	r9, r0
   13f64:	mov	r0, r6
   13f68:	mov	r1, r4
   13f6c:	bl	12c64 <table_get_col_ptr@@Base>
   13f70:	ldr	r0, [r0, #4]
   13f74:	mvn	r7, #0
   13f78:	cmp	r0, #0
   13f7c:	bne	13fbc <table_set_int@@Base+0x78>
   13f80:	ldr	r0, [r9]
   13f84:	cmp	r0, #0
   13f88:	bne	13fa0 <table_set_int@@Base+0x5c>
   13f8c:	mov	r0, #4
   13f90:	bl	11f48 <malloc@plt>
   13f94:	cmp	r0, #0
   13f98:	str	r0, [r9]
   13f9c:	beq	13fbc <table_set_int@@Base+0x78>
   13fa0:	str	r8, [r0]
   13fa4:	mov	r0, r6
   13fa8:	mov	r1, r5
   13fac:	mov	r2, r4
   13fb0:	mov	r3, #1
   13fb4:	bl	12b98 <table_notify@@Base>
   13fb8:	mov	r7, #0
   13fbc:	mov	r0, r7
   13fc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013fc4 <table_set_uint@@Base>:
   13fc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fc8:	add	fp, sp, #24
   13fcc:	mov	r8, r3
   13fd0:	mov	r4, r2
   13fd4:	mov	r5, r1
   13fd8:	mov	r6, r0
   13fdc:	bl	14b04 <table_get_cell_ptr@@Base>
   13fe0:	mov	r9, r0
   13fe4:	mov	r0, r6
   13fe8:	mov	r1, r4
   13fec:	bl	12c64 <table_get_col_ptr@@Base>
   13ff0:	ldr	r0, [r0, #4]
   13ff4:	mvn	r7, #0
   13ff8:	cmp	r0, #1
   13ffc:	bne	1403c <table_set_uint@@Base+0x78>
   14000:	ldr	r0, [r9]
   14004:	cmp	r0, #0
   14008:	bne	14020 <table_set_uint@@Base+0x5c>
   1400c:	mov	r0, #4
   14010:	bl	11f48 <malloc@plt>
   14014:	cmp	r0, #0
   14018:	str	r0, [r9]
   1401c:	beq	1403c <table_set_uint@@Base+0x78>
   14020:	str	r8, [r0]
   14024:	mov	r0, r6
   14028:	mov	r1, r5
   1402c:	mov	r2, r4
   14030:	mov	r3, #1
   14034:	bl	12b98 <table_notify@@Base>
   14038:	mov	r7, #0
   1403c:	mov	r0, r7
   14040:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014044 <table_set_int8@@Base>:
   14044:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14048:	add	fp, sp, #24
   1404c:	mov	r8, r3
   14050:	mov	r4, r2
   14054:	mov	r9, r1
   14058:	mov	r6, r0
   1405c:	bl	14b04 <table_get_cell_ptr@@Base>
   14060:	mov	r5, r0
   14064:	mov	r0, r6
   14068:	mov	r1, r4
   1406c:	bl	12c64 <table_get_col_ptr@@Base>
   14070:	ldr	r0, [r0, #4]
   14074:	mvn	r7, #0
   14078:	cmp	r0, #2
   1407c:	bne	140bc <table_set_int8@@Base+0x78>
   14080:	ldr	r0, [r5]
   14084:	cmp	r0, #0
   14088:	bne	140a0 <table_set_int8@@Base+0x5c>
   1408c:	mov	r0, #1
   14090:	bl	11f48 <malloc@plt>
   14094:	cmp	r0, #0
   14098:	str	r0, [r5]
   1409c:	beq	140bc <table_set_int8@@Base+0x78>
   140a0:	strb	r8, [r0]
   140a4:	mov	r0, r6
   140a8:	mov	r1, r9
   140ac:	mov	r2, r4
   140b0:	mov	r3, #1
   140b4:	bl	12b98 <table_notify@@Base>
   140b8:	mov	r7, #0
   140bc:	mov	r0, r7
   140c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140c4 <table_set_uint8@@Base>:
   140c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140c8:	add	fp, sp, #24
   140cc:	mov	r8, r3
   140d0:	mov	r4, r2
   140d4:	mov	r9, r1
   140d8:	mov	r6, r0
   140dc:	bl	14b04 <table_get_cell_ptr@@Base>
   140e0:	mov	r5, r0
   140e4:	mov	r0, r6
   140e8:	mov	r1, r4
   140ec:	bl	12c64 <table_get_col_ptr@@Base>
   140f0:	ldr	r0, [r0, #4]
   140f4:	mvn	r7, #0
   140f8:	cmp	r0, #3
   140fc:	bne	1413c <table_set_uint8@@Base+0x78>
   14100:	ldr	r0, [r5]
   14104:	cmp	r0, #0
   14108:	bne	14120 <table_set_uint8@@Base+0x5c>
   1410c:	mov	r0, #1
   14110:	bl	11f48 <malloc@plt>
   14114:	cmp	r0, #0
   14118:	str	r0, [r5]
   1411c:	beq	1413c <table_set_uint8@@Base+0x78>
   14120:	strb	r8, [r0]
   14124:	mov	r0, r6
   14128:	mov	r1, r9
   1412c:	mov	r2, r4
   14130:	mov	r3, #1
   14134:	bl	12b98 <table_notify@@Base>
   14138:	mov	r7, #0
   1413c:	mov	r0, r7
   14140:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014144 <table_set_int16@@Base>:
   14144:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14148:	add	fp, sp, #24
   1414c:	mov	r8, r3
   14150:	mov	r4, r2
   14154:	mov	r9, r1
   14158:	mov	r6, r0
   1415c:	bl	14b04 <table_get_cell_ptr@@Base>
   14160:	mov	r5, r0
   14164:	mov	r0, r6
   14168:	mov	r1, r4
   1416c:	bl	12c64 <table_get_col_ptr@@Base>
   14170:	ldr	r0, [r0, #4]
   14174:	mvn	r7, #0
   14178:	cmp	r0, #4
   1417c:	bne	141bc <table_set_int16@@Base+0x78>
   14180:	ldr	r0, [r5]
   14184:	cmp	r0, #0
   14188:	bne	141a0 <table_set_int16@@Base+0x5c>
   1418c:	mov	r0, #2
   14190:	bl	11f48 <malloc@plt>
   14194:	cmp	r0, #0
   14198:	str	r0, [r5]
   1419c:	beq	141bc <table_set_int16@@Base+0x78>
   141a0:	strh	r8, [r0]
   141a4:	mov	r0, r6
   141a8:	mov	r1, r9
   141ac:	mov	r2, r4
   141b0:	mov	r3, #1
   141b4:	bl	12b98 <table_notify@@Base>
   141b8:	mov	r7, #0
   141bc:	mov	r0, r7
   141c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141c4 <table_set_uint16@@Base>:
   141c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141c8:	add	fp, sp, #24
   141cc:	mov	r8, r3
   141d0:	mov	r4, r2
   141d4:	mov	r9, r1
   141d8:	mov	r6, r0
   141dc:	bl	14b04 <table_get_cell_ptr@@Base>
   141e0:	mov	r5, r0
   141e4:	mov	r0, r6
   141e8:	mov	r1, r4
   141ec:	bl	12c64 <table_get_col_ptr@@Base>
   141f0:	ldr	r0, [r0, #4]
   141f4:	mvn	r7, #0
   141f8:	cmp	r0, #5
   141fc:	bne	1423c <table_set_uint16@@Base+0x78>
   14200:	ldr	r0, [r5]
   14204:	cmp	r0, #0
   14208:	bne	14220 <table_set_uint16@@Base+0x5c>
   1420c:	mov	r0, #2
   14210:	bl	11f48 <malloc@plt>
   14214:	cmp	r0, #0
   14218:	str	r0, [r5]
   1421c:	beq	1423c <table_set_uint16@@Base+0x78>
   14220:	strh	r8, [r0]
   14224:	mov	r0, r6
   14228:	mov	r1, r9
   1422c:	mov	r2, r4
   14230:	mov	r3, #1
   14234:	bl	12b98 <table_notify@@Base>
   14238:	mov	r7, #0
   1423c:	mov	r0, r7
   14240:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014244 <table_set_int32@@Base>:
   14244:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14248:	add	fp, sp, #24
   1424c:	mov	r8, r3
   14250:	mov	r4, r2
   14254:	mov	r5, r1
   14258:	mov	r6, r0
   1425c:	bl	14b04 <table_get_cell_ptr@@Base>
   14260:	mov	r9, r0
   14264:	mov	r0, r6
   14268:	mov	r1, r4
   1426c:	bl	12c64 <table_get_col_ptr@@Base>
   14270:	ldr	r0, [r0, #4]
   14274:	mvn	r7, #0
   14278:	cmp	r0, #6
   1427c:	bne	142bc <table_set_int32@@Base+0x78>
   14280:	ldr	r0, [r9]
   14284:	cmp	r0, #0
   14288:	bne	142a0 <table_set_int32@@Base+0x5c>
   1428c:	mov	r0, #4
   14290:	bl	11f48 <malloc@plt>
   14294:	cmp	r0, #0
   14298:	str	r0, [r9]
   1429c:	beq	142bc <table_set_int32@@Base+0x78>
   142a0:	str	r8, [r0]
   142a4:	mov	r0, r6
   142a8:	mov	r1, r5
   142ac:	mov	r2, r4
   142b0:	mov	r3, #1
   142b4:	bl	12b98 <table_notify@@Base>
   142b8:	mov	r7, #0
   142bc:	mov	r0, r7
   142c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142c4 <table_set_uint32@@Base>:
   142c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142c8:	add	fp, sp, #24
   142cc:	mov	r8, r3
   142d0:	mov	r4, r2
   142d4:	mov	r5, r1
   142d8:	mov	r6, r0
   142dc:	bl	14b04 <table_get_cell_ptr@@Base>
   142e0:	mov	r9, r0
   142e4:	mov	r0, r6
   142e8:	mov	r1, r4
   142ec:	bl	12c64 <table_get_col_ptr@@Base>
   142f0:	ldr	r0, [r0, #4]
   142f4:	mvn	r7, #0
   142f8:	cmp	r0, #7
   142fc:	bne	1433c <table_set_uint32@@Base+0x78>
   14300:	ldr	r0, [r9]
   14304:	cmp	r0, #0
   14308:	bne	14320 <table_set_uint32@@Base+0x5c>
   1430c:	mov	r0, #4
   14310:	bl	11f48 <malloc@plt>
   14314:	cmp	r0, #0
   14318:	str	r0, [r9]
   1431c:	beq	1433c <table_set_uint32@@Base+0x78>
   14320:	str	r8, [r0]
   14324:	mov	r0, r6
   14328:	mov	r1, r5
   1432c:	mov	r2, r4
   14330:	mov	r3, #1
   14334:	bl	12b98 <table_notify@@Base>
   14338:	mov	r7, #0
   1433c:	mov	r0, r7
   14340:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014344 <table_set_int64@@Base>:
   14344:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14348:	add	fp, sp, #24
   1434c:	mov	r4, r2
   14350:	mov	r8, r1
   14354:	mov	r6, r0
   14358:	bl	14b04 <table_get_cell_ptr@@Base>
   1435c:	mov	r5, r0
   14360:	mov	r0, r6
   14364:	mov	r1, r4
   14368:	bl	12c64 <table_get_col_ptr@@Base>
   1436c:	ldr	r0, [r0, #4]
   14370:	mvn	r7, #0
   14374:	cmp	r0, #8
   14378:	bne	143c4 <table_set_int64@@Base+0x80>
   1437c:	ldr	r0, [r5]
   14380:	cmp	r0, #0
   14384:	bne	1439c <table_set_int64@@Base+0x58>
   14388:	mov	r0, #8
   1438c:	bl	11f48 <malloc@plt>
   14390:	cmp	r0, #0
   14394:	str	r0, [r5]
   14398:	beq	143c4 <table_set_int64@@Base+0x80>
   1439c:	ldr	r1, [fp, #12]
   143a0:	ldr	r2, [fp, #8]
   143a4:	mov	r3, #1
   143a8:	str	r2, [r0]
   143ac:	str	r1, [r0, #4]
   143b0:	mov	r0, r6
   143b4:	mov	r1, r8
   143b8:	mov	r2, r4
   143bc:	bl	12b98 <table_notify@@Base>
   143c0:	mov	r7, #0
   143c4:	mov	r0, r7
   143c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000143cc <table_set_uint64@@Base>:
   143cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   143d0:	add	fp, sp, #24
   143d4:	mov	r4, r2
   143d8:	mov	r8, r1
   143dc:	mov	r6, r0
   143e0:	bl	14b04 <table_get_cell_ptr@@Base>
   143e4:	mov	r5, r0
   143e8:	mov	r0, r6
   143ec:	mov	r1, r4
   143f0:	bl	12c64 <table_get_col_ptr@@Base>
   143f4:	ldr	r0, [r0, #4]
   143f8:	mvn	r7, #0
   143fc:	cmp	r0, #9
   14400:	bne	1444c <table_set_uint64@@Base+0x80>
   14404:	ldr	r0, [r5]
   14408:	cmp	r0, #0
   1440c:	bne	14424 <table_set_uint64@@Base+0x58>
   14410:	mov	r0, #8
   14414:	bl	11f48 <malloc@plt>
   14418:	cmp	r0, #0
   1441c:	str	r0, [r5]
   14420:	beq	1444c <table_set_uint64@@Base+0x80>
   14424:	ldr	r1, [fp, #12]
   14428:	ldr	r2, [fp, #8]
   1442c:	mov	r3, #1
   14430:	str	r2, [r0]
   14434:	str	r1, [r0, #4]
   14438:	mov	r0, r6
   1443c:	mov	r1, r8
   14440:	mov	r2, r4
   14444:	bl	12b98 <table_notify@@Base>
   14448:	mov	r7, #0
   1444c:	mov	r0, r7
   14450:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014454 <table_set_short@@Base>:
   14454:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14458:	add	fp, sp, #24
   1445c:	mov	r8, r3
   14460:	mov	r4, r2
   14464:	mov	r9, r1
   14468:	mov	r6, r0
   1446c:	bl	14b04 <table_get_cell_ptr@@Base>
   14470:	mov	r5, r0
   14474:	mov	r0, r6
   14478:	mov	r1, r4
   1447c:	bl	12c64 <table_get_col_ptr@@Base>
   14480:	ldr	r0, [r0, #4]
   14484:	mvn	r7, #0
   14488:	cmp	r0, #10
   1448c:	bne	144cc <table_set_short@@Base+0x78>
   14490:	ldr	r0, [r5]
   14494:	cmp	r0, #0
   14498:	bne	144b0 <table_set_short@@Base+0x5c>
   1449c:	mov	r0, #2
   144a0:	bl	11f48 <malloc@plt>
   144a4:	cmp	r0, #0
   144a8:	str	r0, [r5]
   144ac:	beq	144cc <table_set_short@@Base+0x78>
   144b0:	strh	r8, [r0]
   144b4:	mov	r0, r6
   144b8:	mov	r1, r9
   144bc:	mov	r2, r4
   144c0:	mov	r3, #1
   144c4:	bl	12b98 <table_notify@@Base>
   144c8:	mov	r7, #0
   144cc:	mov	r0, r7
   144d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144d4 <table_set_ushort@@Base>:
   144d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144d8:	add	fp, sp, #24
   144dc:	mov	r8, r3
   144e0:	mov	r4, r2
   144e4:	mov	r9, r1
   144e8:	mov	r6, r0
   144ec:	bl	14b04 <table_get_cell_ptr@@Base>
   144f0:	mov	r5, r0
   144f4:	mov	r0, r6
   144f8:	mov	r1, r4
   144fc:	bl	12c64 <table_get_col_ptr@@Base>
   14500:	ldr	r0, [r0, #4]
   14504:	mvn	r7, #0
   14508:	cmp	r0, #11
   1450c:	bne	1454c <table_set_ushort@@Base+0x78>
   14510:	ldr	r0, [r5]
   14514:	cmp	r0, #0
   14518:	bne	14530 <table_set_ushort@@Base+0x5c>
   1451c:	mov	r0, #2
   14520:	bl	11f48 <malloc@plt>
   14524:	cmp	r0, #0
   14528:	str	r0, [r5]
   1452c:	beq	1454c <table_set_ushort@@Base+0x78>
   14530:	strh	r8, [r0]
   14534:	mov	r0, r6
   14538:	mov	r1, r9
   1453c:	mov	r2, r4
   14540:	mov	r3, #1
   14544:	bl	12b98 <table_notify@@Base>
   14548:	mov	r7, #0
   1454c:	mov	r0, r7
   14550:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014554 <table_set_long@@Base>:
   14554:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14558:	add	fp, sp, #24
   1455c:	mov	r8, r3
   14560:	mov	r4, r2
   14564:	mov	r5, r1
   14568:	mov	r6, r0
   1456c:	bl	14b04 <table_get_cell_ptr@@Base>
   14570:	mov	r9, r0
   14574:	mov	r0, r6
   14578:	mov	r1, r4
   1457c:	bl	12c64 <table_get_col_ptr@@Base>
   14580:	ldr	r0, [r0, #4]
   14584:	mvn	r7, #0
   14588:	cmp	r0, #12
   1458c:	bne	145cc <table_set_long@@Base+0x78>
   14590:	ldr	r0, [r9]
   14594:	cmp	r0, #0
   14598:	bne	145b0 <table_set_long@@Base+0x5c>
   1459c:	mov	r0, #4
   145a0:	bl	11f48 <malloc@plt>
   145a4:	cmp	r0, #0
   145a8:	str	r0, [r9]
   145ac:	beq	145cc <table_set_long@@Base+0x78>
   145b0:	str	r8, [r0]
   145b4:	mov	r0, r6
   145b8:	mov	r1, r5
   145bc:	mov	r2, r4
   145c0:	mov	r3, #1
   145c4:	bl	12b98 <table_notify@@Base>
   145c8:	mov	r7, #0
   145cc:	mov	r0, r7
   145d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145d4 <table_set_ulong@@Base>:
   145d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145d8:	add	fp, sp, #24
   145dc:	mov	r8, r3
   145e0:	mov	r4, r2
   145e4:	mov	r5, r1
   145e8:	mov	r6, r0
   145ec:	bl	14b04 <table_get_cell_ptr@@Base>
   145f0:	mov	r9, r0
   145f4:	mov	r0, r6
   145f8:	mov	r1, r4
   145fc:	bl	12c64 <table_get_col_ptr@@Base>
   14600:	ldr	r0, [r0, #4]
   14604:	mvn	r7, #0
   14608:	cmp	r0, #13
   1460c:	bne	1464c <table_set_ulong@@Base+0x78>
   14610:	ldr	r0, [r9]
   14614:	cmp	r0, #0
   14618:	bne	14630 <table_set_ulong@@Base+0x5c>
   1461c:	mov	r0, #4
   14620:	bl	11f48 <malloc@plt>
   14624:	cmp	r0, #0
   14628:	str	r0, [r9]
   1462c:	beq	1464c <table_set_ulong@@Base+0x78>
   14630:	str	r8, [r0]
   14634:	mov	r0, r6
   14638:	mov	r1, r5
   1463c:	mov	r2, r4
   14640:	mov	r3, #1
   14644:	bl	12b98 <table_notify@@Base>
   14648:	mov	r7, #0
   1464c:	mov	r0, r7
   14650:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014654 <table_set_llong@@Base>:
   14654:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14658:	add	fp, sp, #24
   1465c:	mov	r4, r2
   14660:	mov	r8, r1
   14664:	mov	r6, r0
   14668:	bl	14b04 <table_get_cell_ptr@@Base>
   1466c:	mov	r5, r0
   14670:	mov	r0, r6
   14674:	mov	r1, r4
   14678:	bl	12c64 <table_get_col_ptr@@Base>
   1467c:	ldr	r0, [r0, #4]
   14680:	mvn	r7, #0
   14684:	cmp	r0, #14
   14688:	bne	146d4 <table_set_llong@@Base+0x80>
   1468c:	ldr	r0, [r5]
   14690:	cmp	r0, #0
   14694:	bne	146ac <table_set_llong@@Base+0x58>
   14698:	mov	r0, #8
   1469c:	bl	11f48 <malloc@plt>
   146a0:	cmp	r0, #0
   146a4:	str	r0, [r5]
   146a8:	beq	146d4 <table_set_llong@@Base+0x80>
   146ac:	ldr	r1, [fp, #12]
   146b0:	ldr	r2, [fp, #8]
   146b4:	mov	r3, #1
   146b8:	str	r2, [r0]
   146bc:	str	r1, [r0, #4]
   146c0:	mov	r0, r6
   146c4:	mov	r1, r8
   146c8:	mov	r2, r4
   146cc:	bl	12b98 <table_notify@@Base>
   146d0:	mov	r7, #0
   146d4:	mov	r0, r7
   146d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000146dc <table_set_ullong@@Base>:
   146dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146e0:	add	fp, sp, #24
   146e4:	mov	r4, r2
   146e8:	mov	r8, r1
   146ec:	mov	r6, r0
   146f0:	bl	14b04 <table_get_cell_ptr@@Base>
   146f4:	mov	r5, r0
   146f8:	mov	r0, r6
   146fc:	mov	r1, r4
   14700:	bl	12c64 <table_get_col_ptr@@Base>
   14704:	ldr	r0, [r0, #4]
   14708:	mvn	r7, #0
   1470c:	cmp	r0, #15
   14710:	bne	1475c <table_set_ullong@@Base+0x80>
   14714:	ldr	r0, [r5]
   14718:	cmp	r0, #0
   1471c:	bne	14734 <table_set_ullong@@Base+0x58>
   14720:	mov	r0, #8
   14724:	bl	11f48 <malloc@plt>
   14728:	cmp	r0, #0
   1472c:	str	r0, [r5]
   14730:	beq	1475c <table_set_ullong@@Base+0x80>
   14734:	ldr	r1, [fp, #12]
   14738:	ldr	r2, [fp, #8]
   1473c:	mov	r3, #1
   14740:	str	r2, [r0]
   14744:	str	r1, [r0, #4]
   14748:	mov	r0, r6
   1474c:	mov	r1, r8
   14750:	mov	r2, r4
   14754:	bl	12b98 <table_notify@@Base>
   14758:	mov	r7, #0
   1475c:	mov	r0, r7
   14760:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014764 <table_set_float@@Base>:
   14764:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14768:	add	fp, sp, #24
   1476c:	vpush	{d8}
   14770:	vmov.f32	s16, s0
   14774:	mov	r4, r2
   14778:	mov	r8, r1
   1477c:	mov	r6, r0
   14780:	bl	14b04 <table_get_cell_ptr@@Base>
   14784:	mov	r5, r0
   14788:	mov	r0, r6
   1478c:	mov	r1, r4
   14790:	bl	12c64 <table_get_col_ptr@@Base>
   14794:	ldr	r0, [r0, #4]
   14798:	mvn	r7, #0
   1479c:	cmp	r0, #16
   147a0:	bne	147e4 <table_set_float@@Base+0x80>
   147a4:	ldr	r0, [r5]
   147a8:	cmp	r0, #0
   147ac:	bne	147c4 <table_set_float@@Base+0x60>
   147b0:	mov	r0, #4
   147b4:	bl	11f48 <malloc@plt>
   147b8:	cmp	r0, #0
   147bc:	str	r0, [r5]
   147c0:	beq	147e4 <table_set_float@@Base+0x80>
   147c4:	vmov	r1, s16
   147c8:	mov	r2, r4
   147cc:	mov	r3, #1
   147d0:	str	r1, [r0]
   147d4:	mov	r0, r6
   147d8:	mov	r1, r8
   147dc:	bl	12b98 <table_notify@@Base>
   147e0:	mov	r7, #0
   147e4:	mov	r0, r7
   147e8:	vpop	{d8}
   147ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147f0 <table_set_double@@Base>:
   147f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147f4:	add	fp, sp, #24
   147f8:	vpush	{d8}
   147fc:	vorr	d8, d0, d0
   14800:	mov	r4, r2
   14804:	mov	r5, r1
   14808:	mov	r6, r0
   1480c:	bl	14b04 <table_get_cell_ptr@@Base>
   14810:	mov	r8, r0
   14814:	mov	r0, r6
   14818:	mov	r1, r4
   1481c:	bl	12c64 <table_get_col_ptr@@Base>
   14820:	ldr	r0, [r0, #4]
   14824:	mvn	r7, #0
   14828:	cmp	r0, #17
   1482c:	bne	1486c <table_set_double@@Base+0x7c>
   14830:	ldr	r0, [r8]
   14834:	cmp	r0, #0
   14838:	bne	14850 <table_set_double@@Base+0x60>
   1483c:	mov	r0, #8
   14840:	bl	11f48 <malloc@plt>
   14844:	cmp	r0, #0
   14848:	str	r0, [r8]
   1484c:	beq	1486c <table_set_double@@Base+0x7c>
   14850:	vst1.8	{d8}, [r0]
   14854:	mov	r0, r6
   14858:	mov	r1, r5
   1485c:	mov	r2, r4
   14860:	mov	r3, #1
   14864:	bl	12b98 <table_notify@@Base>
   14868:	mov	r7, #0
   1486c:	mov	r0, r7
   14870:	vpop	{d8}
   14874:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014878 <table_set_ldouble@@Base>:
   14878:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1487c:	add	fp, sp, #24
   14880:	vpush	{d8}
   14884:	vorr	d8, d0, d0
   14888:	mov	r4, r2
   1488c:	mov	r5, r1
   14890:	mov	r6, r0
   14894:	bl	14b04 <table_get_cell_ptr@@Base>
   14898:	mov	r8, r0
   1489c:	mov	r0, r6
   148a0:	mov	r1, r4
   148a4:	bl	12c64 <table_get_col_ptr@@Base>
   148a8:	ldr	r0, [r0, #4]
   148ac:	mvn	r7, #0
   148b0:	cmp	r0, #18
   148b4:	bne	148f4 <table_set_ldouble@@Base+0x7c>
   148b8:	ldr	r0, [r8]
   148bc:	cmp	r0, #0
   148c0:	bne	148d8 <table_set_ldouble@@Base+0x60>
   148c4:	mov	r0, #8
   148c8:	bl	11f48 <malloc@plt>
   148cc:	cmp	r0, #0
   148d0:	str	r0, [r8]
   148d4:	beq	148f4 <table_set_ldouble@@Base+0x7c>
   148d8:	vst1.8	{d8}, [r0]
   148dc:	mov	r0, r6
   148e0:	mov	r1, r5
   148e4:	mov	r2, r4
   148e8:	mov	r3, #1
   148ec:	bl	12b98 <table_notify@@Base>
   148f0:	mov	r7, #0
   148f4:	mov	r0, r7
   148f8:	vpop	{d8}
   148fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014900 <table_set_string@@Base>:
   14900:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14904:	add	fp, sp, #24
   14908:	mov	r8, r3
   1490c:	mov	r4, r2
   14910:	mov	r9, r1
   14914:	mov	r6, r0
   14918:	bl	14b04 <table_get_cell_ptr@@Base>
   1491c:	mov	r5, r0
   14920:	mov	r0, r6
   14924:	mov	r1, r4
   14928:	bl	12c64 <table_get_col_ptr@@Base>
   1492c:	ldr	r0, [r0, #4]
   14930:	mvn	r7, #0
   14934:	cmp	r0, #21
   14938:	bne	14980 <table_set_string@@Base+0x80>
   1493c:	mov	r0, r8
   14940:	bl	11f6c <strlen@plt>
   14944:	ldr	r2, [r5]
   14948:	add	r1, r0, #1
   1494c:	mov	r0, r2
   14950:	bl	11f30 <realloc@plt>
   14954:	cmp	r0, #0
   14958:	str	r0, [r5]
   1495c:	beq	14980 <table_set_string@@Base+0x80>
   14960:	mov	r1, r8
   14964:	bl	11f3c <strcpy@plt>
   14968:	mov	r0, r6
   1496c:	mov	r1, r9
   14970:	mov	r2, r4
   14974:	mov	r3, #1
   14978:	bl	12b98 <table_notify@@Base>
   1497c:	mov	r7, #0
   14980:	mov	r0, r7
   14984:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014988 <table_set_char@@Base>:
   14988:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1498c:	add	fp, sp, #24
   14990:	mov	r8, r3
   14994:	mov	r4, r2
   14998:	mov	r9, r1
   1499c:	mov	r6, r0
   149a0:	bl	14b04 <table_get_cell_ptr@@Base>
   149a4:	mov	r5, r0
   149a8:	mov	r0, r6
   149ac:	mov	r1, r4
   149b0:	bl	12c64 <table_get_col_ptr@@Base>
   149b4:	ldr	r0, [r0, #4]
   149b8:	mvn	r7, #0
   149bc:	cmp	r0, #19
   149c0:	bne	14a00 <table_set_char@@Base+0x78>
   149c4:	ldr	r0, [r5]
   149c8:	cmp	r0, #0
   149cc:	bne	149e4 <table_set_char@@Base+0x5c>
   149d0:	mov	r0, #1
   149d4:	bl	11f48 <malloc@plt>
   149d8:	cmp	r0, #0
   149dc:	str	r0, [r5]
   149e0:	beq	14a00 <table_set_char@@Base+0x78>
   149e4:	strb	r8, [r0]
   149e8:	mov	r0, r6
   149ec:	mov	r1, r9
   149f0:	mov	r2, r4
   149f4:	mov	r3, #1
   149f8:	bl	12b98 <table_notify@@Base>
   149fc:	mov	r7, #0
   14a00:	mov	r0, r7
   14a04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a08 <table_set_uchar@@Base>:
   14a08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a0c:	add	fp, sp, #24
   14a10:	mov	r8, r3
   14a14:	mov	r4, r2
   14a18:	mov	r9, r1
   14a1c:	mov	r6, r0
   14a20:	bl	14b04 <table_get_cell_ptr@@Base>
   14a24:	mov	r5, r0
   14a28:	mov	r0, r6
   14a2c:	mov	r1, r4
   14a30:	bl	12c64 <table_get_col_ptr@@Base>
   14a34:	ldr	r0, [r0, #4]
   14a38:	mvn	r7, #0
   14a3c:	cmp	r0, #20
   14a40:	bne	14a80 <table_set_uchar@@Base+0x78>
   14a44:	ldr	r0, [r5]
   14a48:	cmp	r0, #0
   14a4c:	bne	14a64 <table_set_uchar@@Base+0x5c>
   14a50:	mov	r0, #1
   14a54:	bl	11f48 <malloc@plt>
   14a58:	cmp	r0, #0
   14a5c:	str	r0, [r5]
   14a60:	beq	14a80 <table_set_uchar@@Base+0x78>
   14a64:	strb	r8, [r0]
   14a68:	mov	r0, r6
   14a6c:	mov	r1, r9
   14a70:	mov	r2, r4
   14a74:	mov	r3, #1
   14a78:	bl	12b98 <table_notify@@Base>
   14a7c:	mov	r7, #0
   14a80:	mov	r0, r7
   14a84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a88 <table_set_ptr@@Base>:
   14a88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a8c:	add	fp, sp, #24
   14a90:	mov	r8, r3
   14a94:	mov	r4, r2
   14a98:	mov	r5, r1
   14a9c:	mov	r6, r0
   14aa0:	bl	14b04 <table_get_cell_ptr@@Base>
   14aa4:	mov	r7, r0
   14aa8:	mov	r0, r6
   14aac:	mov	r1, r4
   14ab0:	bl	12c64 <table_get_col_ptr@@Base>
   14ab4:	ldr	r1, [r0, #4]
   14ab8:	mvn	r0, #0
   14abc:	cmp	r1, #23
   14ac0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ac4:	mov	r0, r6
   14ac8:	mov	r1, r5
   14acc:	mov	r2, r4
   14ad0:	mov	r3, #1
   14ad4:	str	r8, [r7]
   14ad8:	bl	12b98 <table_notify@@Base>
   14adc:	mov	r0, #0
   14ae0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014ae4 <table_cell_init@@Base>:
   14ae4:	push	{r4, sl, fp, lr}
   14ae8:	add	fp, sp, #8
   14aec:	mov	r4, r2
   14af0:	bl	13980 <table_get_row_ptr@@Base>
   14af4:	ldr	r0, [r0]
   14af8:	mov	r1, #0
   14afc:	str	r1, [r0, r4, lsl #2]
   14b00:	pop	{r4, sl, fp, pc}

00014b04 <table_get_cell_ptr@@Base>:
   14b04:	push	{r4, sl, fp, lr}
   14b08:	add	fp, sp, #8
   14b0c:	mov	r4, r2
   14b10:	bl	13980 <table_get_row_ptr@@Base>
   14b14:	ldr	r0, [r0]
   14b18:	add	r0, r0, r4, lsl #2
   14b1c:	pop	{r4, sl, fp, pc}

00014b20 <table_cell_destroy@@Base>:
   14b20:	push	{r4, r5, r6, sl, fp, lr}
   14b24:	add	fp, sp, #16
   14b28:	mov	r5, r1
   14b2c:	mov	r1, r2
   14b30:	mov	r4, r2
   14b34:	mov	r6, r0
   14b38:	bl	12d0c <table_get_column_data_type@@Base>
   14b3c:	cmp	r0, #23
   14b40:	popeq	{r4, r5, r6, sl, fp, pc}
   14b44:	mov	r0, r6
   14b48:	mov	r1, r5
   14b4c:	bl	13980 <table_get_row_ptr@@Base>
   14b50:	ldr	r0, [r0]
   14b54:	ldr	r0, [r0, r4, lsl #2]
   14b58:	cmp	r0, #0
   14b5c:	beq	14b68 <table_cell_destroy@@Base+0x48>
   14b60:	pop	{r4, r5, r6, sl, fp, lr}
   14b64:	b	11f18 <free@plt>
   14b68:	pop	{r4, r5, r6, sl, fp, pc}

00014b6c <table_cell_to_buffer@@Base>:
   14b6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b70:	add	fp, sp, #24
   14b74:	sub	sp, sp, #8
   14b78:	mov	r7, r1
   14b7c:	mov	r1, r2
   14b80:	mov	r5, r3
   14b84:	mov	r6, r2
   14b88:	mov	r4, r0
   14b8c:	bl	12d0c <table_get_column_data_type@@Base>
   14b90:	cmp	r0, #23
   14b94:	bhi	14e04 <table_cell_to_buffer@@Base+0x298>
   14b98:	ldr	r8, [fp, #8]
   14b9c:	add	r1, pc, #0
   14ba0:	ldr	pc, [r1, r0, lsl #2]
   14ba4:	andeq	r4, r1, r4, lsl #24
   14ba8:	andeq	r4, r1, r8, lsl ip
   14bac:	andeq	r4, r1, ip, lsr #24
   14bb0:	andeq	r4, r1, r0, asr #24
   14bb4:	andeq	r4, r1, r4, asr ip
   14bb8:	andeq	r4, r1, r8, ror #24
   14bbc:	andeq	r4, r1, ip, ror ip
   14bc0:	muleq	r1, r0, ip
   14bc4:			; <UNDEFINED> instruction: 0x00014cb0
   14bc8:	andeq	r4, r1, r4, asr #25
   14bcc:	ldrdeq	r4, [r1], -r8
   14bd0:	strdeq	r4, [r1], -r8
   14bd4:	andeq	r4, r1, r8, lsl sp
   14bd8:	andeq	r4, r1, r8, lsr sp
   14bdc:	andeq	r4, r1, r8, asr sp
   14be0:	andeq	r4, r1, r8, ror sp
   14be4:	muleq	r1, r8, sp
   14be8:			; <UNDEFINED> instruction: 0x00014dbc
   14bec:	ldrdeq	r4, [r1], -ip
   14bf0:	andeq	r4, r1, r0, lsl lr
   14bf4:	andeq	r4, r1, r4, lsr #28
   14bf8:	andeq	r4, r1, r4, asr #28
   14bfc:	andeq	r4, r1, r4, ror #28
   14c00:	muleq	r1, r8, lr
   14c04:	mov	r0, r4
   14c08:	mov	r1, r7
   14c0c:	mov	r2, r6
   14c10:	bl	1373c <table_get_int@@Base>
   14c14:	b	14e74 <table_cell_to_buffer@@Base+0x308>
   14c18:	mov	r0, r4
   14c1c:	mov	r1, r7
   14c20:	mov	r2, r6
   14c24:	bl	13754 <table_get_uint@@Base>
   14c28:	b	14ca0 <table_cell_to_buffer@@Base+0x134>
   14c2c:	mov	r0, r4
   14c30:	mov	r1, r7
   14c34:	mov	r2, r6
   14c38:	bl	1376c <table_get_int8@@Base>
   14c3c:	b	14e74 <table_cell_to_buffer@@Base+0x308>
   14c40:	mov	r0, r4
   14c44:	mov	r1, r7
   14c48:	mov	r2, r6
   14c4c:	bl	13784 <table_get_uint8@@Base>
   14c50:	b	14ca0 <table_cell_to_buffer@@Base+0x134>
   14c54:	mov	r0, r4
   14c58:	mov	r1, r7
   14c5c:	mov	r2, r6
   14c60:	bl	1379c <table_get_int16@@Base>
   14c64:	b	14e74 <table_cell_to_buffer@@Base+0x308>
   14c68:	mov	r0, r4
   14c6c:	mov	r1, r7
   14c70:	mov	r2, r6
   14c74:	bl	137b4 <table_get_uint16@@Base>
   14c78:	b	14ca0 <table_cell_to_buffer@@Base+0x134>
   14c7c:	mov	r0, r4
   14c80:	mov	r1, r7
   14c84:	mov	r2, r6
   14c88:	bl	137cc <table_get_int32@@Base>
   14c8c:	b	14e74 <table_cell_to_buffer@@Base+0x308>
   14c90:	mov	r0, r4
   14c94:	mov	r1, r7
   14c98:	mov	r2, r6
   14c9c:	bl	137e4 <table_get_uint32@@Base>
   14ca0:	movw	r2, #22064	; 0x5630
   14ca4:	mov	r3, r0
   14ca8:	movt	r2, #1
   14cac:	b	14e80 <table_cell_to_buffer@@Base+0x314>
   14cb0:	mov	r0, r4
   14cb4:	mov	r1, r7
   14cb8:	mov	r2, r6
   14cbc:	bl	137fc <table_get_int64@@Base>
   14cc0:	b	14d68 <table_cell_to_buffer@@Base+0x1fc>
   14cc4:	mov	r0, r4
   14cc8:	mov	r1, r7
   14ccc:	mov	r2, r6
   14cd0:	bl	13814 <table_get_uint64@@Base>
   14cd4:	b	14d88 <table_cell_to_buffer@@Base+0x21c>
   14cd8:	mov	r0, r4
   14cdc:	mov	r1, r7
   14ce0:	mov	r2, r6
   14ce4:	bl	1382c <table_get_short@@Base>
   14ce8:	movw	r2, #22077	; 0x563d
   14cec:	mov	r3, r0
   14cf0:	movt	r2, #1
   14cf4:	b	14e80 <table_cell_to_buffer@@Base+0x314>
   14cf8:	mov	r0, r4
   14cfc:	mov	r1, r7
   14d00:	mov	r2, r6
   14d04:	bl	13844 <table_get_ushort@@Base>
   14d08:	movw	r2, #22081	; 0x5641
   14d0c:	mov	r3, r0
   14d10:	movt	r2, #1
   14d14:	b	14e80 <table_cell_to_buffer@@Base+0x314>
   14d18:	mov	r0, r4
   14d1c:	mov	r1, r7
   14d20:	mov	r2, r6
   14d24:	bl	1385c <table_get_long@@Base>
   14d28:	movw	r2, #22085	; 0x5645
   14d2c:	mov	r3, r0
   14d30:	movt	r2, #1
   14d34:	b	14e80 <table_cell_to_buffer@@Base+0x314>
   14d38:	mov	r0, r4
   14d3c:	mov	r1, r7
   14d40:	mov	r2, r6
   14d44:	bl	13874 <table_get_ulong@@Base>
   14d48:	movw	r2, #22089	; 0x5649
   14d4c:	mov	r3, r0
   14d50:	movt	r2, #1
   14d54:	b	14e80 <table_cell_to_buffer@@Base+0x314>
   14d58:	mov	r0, r4
   14d5c:	mov	r1, r7
   14d60:	mov	r2, r6
   14d64:	bl	1388c <table_get_llong@@Base>
   14d68:	movw	r2, #22067	; 0x5633
   14d6c:	stm	sp, {r0, r1}
   14d70:	movt	r2, #1
   14d74:	b	14df8 <table_cell_to_buffer@@Base+0x28c>
   14d78:	mov	r0, r4
   14d7c:	mov	r1, r7
   14d80:	mov	r2, r6
   14d84:	bl	138a4 <table_get_ullong@@Base>
   14d88:	movw	r2, #22072	; 0x5638
   14d8c:	stm	sp, {r0, r1}
   14d90:	movt	r2, #1
   14d94:	b	14df8 <table_cell_to_buffer@@Base+0x28c>
   14d98:	mov	r0, r4
   14d9c:	mov	r1, r7
   14da0:	mov	r2, r6
   14da4:	bl	138bc <table_get_float@@Base>
   14da8:	movw	r2, #22096	; 0x5650
   14dac:	vcvt.f64.f32	d16, s0
   14db0:	vstr	d16, [sp]
   14db4:	movt	r2, #1
   14db8:	b	14df8 <table_cell_to_buffer@@Base+0x28c>
   14dbc:	mov	r0, r4
   14dc0:	mov	r1, r7
   14dc4:	mov	r2, r6
   14dc8:	bl	138d4 <table_get_double@@Base>
   14dcc:	movw	r2, #22099	; 0x5653
   14dd0:	vstr	d0, [sp]
   14dd4:	movt	r2, #1
   14dd8:	b	14df8 <table_cell_to_buffer@@Base+0x28c>
   14ddc:	mov	r0, r4
   14de0:	mov	r1, r7
   14de4:	mov	r2, r6
   14de8:	bl	138ec <table_get_ldouble@@Base>
   14dec:	movw	r2, #22103	; 0x5657
   14df0:	vstr	d0, [sp]
   14df4:	movt	r2, #1
   14df8:	mov	r0, r5
   14dfc:	mov	r1, r8
   14e00:	bl	11f84 <snprintf@plt>
   14e04:	mov	r0, #0
   14e08:	sub	sp, fp, #24
   14e0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e10:	mov	r0, r4
   14e14:	mov	r1, r7
   14e18:	mov	r2, r6
   14e1c:	bl	13904 <table_get_char@@Base>
   14e20:	b	14e34 <table_cell_to_buffer@@Base+0x2c8>
   14e24:	mov	r0, r4
   14e28:	mov	r1, r7
   14e2c:	mov	r2, r6
   14e30:	bl	1391c <table_get_uchar@@Base>
   14e34:	movw	r2, #22107	; 0x565b
   14e38:	mov	r3, r0
   14e3c:	movt	r2, #1
   14e40:	b	14e80 <table_cell_to_buffer@@Base+0x314>
   14e44:	mov	r0, r4
   14e48:	mov	r1, r7
   14e4c:	mov	r2, r6
   14e50:	bl	13934 <table_get_string@@Base>
   14e54:	movw	r2, #22093	; 0x564d
   14e58:	mov	r3, r0
   14e5c:	movt	r2, #1
   14e60:	b	14e80 <table_cell_to_buffer@@Base+0x314>
   14e64:	mov	r0, r4
   14e68:	mov	r1, r7
   14e6c:	mov	r2, r6
   14e70:	bl	13724 <table_get_bool@@Base>
   14e74:	movw	r2, #21964	; 0x55cc
   14e78:	mov	r3, r0
   14e7c:	movt	r2, #1
   14e80:	mov	r0, r5
   14e84:	mov	r1, r8
   14e88:	bl	11f84 <snprintf@plt>
   14e8c:	mov	r0, #0
   14e90:	sub	sp, fp, #24
   14e94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e98:	mov	r0, r4
   14e9c:	mov	r1, r7
   14ea0:	mov	r2, r6
   14ea4:	bl	13948 <table_get_ptr@@Base>
   14ea8:	movw	r2, #22110	; 0x565e
   14eac:	mov	r3, r0
   14eb0:	movt	r2, #1
   14eb4:	b	14e80 <table_cell_to_buffer@@Base+0x314>

00014eb8 <table_cell_from_buffer@@Base>:
   14eb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ebc:	add	fp, sp, #24
   14ec0:	sub	sp, sp, #264	; 0x108
   14ec4:	mov	r5, r1
   14ec8:	mov	r1, r2
   14ecc:	mov	r7, r3
   14ed0:	mov	r4, r2
   14ed4:	mov	r6, r0
   14ed8:	bl	12d0c <table_get_column_data_type@@Base>
   14edc:	cmp	r0, #23
   14ee0:	bhi	154b4 <table_cell_from_buffer@@Base+0x5fc>
   14ee4:	add	r1, pc, #0
   14ee8:	ldr	pc, [r1, r0, lsl #2]
   14eec:	andeq	r4, r1, ip, asr #30
   14ef0:	andeq	r4, r1, r4, lsl #31
   14ef4:			; <UNDEFINED> instruction: 0x00014fbc
   14ef8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14efc:	andeq	r5, r1, ip, lsr #32
   14f00:	andeq	r5, r1, r4, rrx
   14f04:	muleq	r1, ip, r0
   14f08:	ldrdeq	r5, [r1], -r4
   14f0c:	andeq	r5, r1, ip, lsl #2
   14f10:	andeq	r5, r1, ip, asr #2
   14f14:	andeq	r5, r1, ip, lsl #3
   14f18:	andeq	r5, r1, r4, asr #3
   14f1c:	strdeq	r5, [r1], -ip
   14f20:	andeq	r5, r1, r4, lsr r2
   14f24:	andeq	r5, r1, ip, ror #4
   14f28:	andeq	r5, r1, ip, lsr #5
   14f2c:	andeq	r5, r1, ip, ror #5
   14f30:	andeq	r5, r1, r4, lsr #6
   14f34:	andeq	r5, r1, ip, asr r3
   14f38:	muleq	r1, r4, r3
   14f3c:	andeq	r5, r1, ip, asr #7
   14f40:	andeq	r5, r1, r4, lsl #8
   14f44:	andeq	r5, r1, ip, lsr r4
   14f48:	andeq	r5, r1, r0, lsl #9
   14f4c:	movw	r1, #21964	; 0x55cc
   14f50:	add	r2, sp, #8
   14f54:	mov	r0, r7
   14f58:	movt	r1, #1
   14f5c:	bl	11f90 <__isoc99_sscanf@plt>
   14f60:	mvn	r7, #0
   14f64:	cmp	r0, #1
   14f68:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   14f6c:	ldr	r3, [sp, #8]
   14f70:	mov	r0, r6
   14f74:	mov	r1, r5
   14f78:	mov	r2, r4
   14f7c:	bl	13f44 <table_set_int@@Base>
   14f80:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   14f84:	movw	r1, #22064	; 0x5630
   14f88:	add	r2, sp, #8
   14f8c:	mov	r0, r7
   14f90:	movt	r1, #1
   14f94:	bl	11f90 <__isoc99_sscanf@plt>
   14f98:	mvn	r7, #0
   14f9c:	cmp	r0, #1
   14fa0:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   14fa4:	ldr	r3, [sp, #8]
   14fa8:	mov	r0, r6
   14fac:	mov	r1, r5
   14fb0:	mov	r2, r4
   14fb4:	bl	13fc4 <table_set_uint@@Base>
   14fb8:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   14fbc:	movw	r1, #22113	; 0x5661
   14fc0:	add	r2, sp, #8
   14fc4:	mov	r0, r7
   14fc8:	movt	r1, #1
   14fcc:	bl	11f90 <__isoc99_sscanf@plt>
   14fd0:	mvn	r7, #0
   14fd4:	cmp	r0, #1
   14fd8:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   14fdc:	ldrsb	r3, [sp, #8]
   14fe0:	mov	r0, r6
   14fe4:	mov	r1, r5
   14fe8:	mov	r2, r4
   14fec:	bl	14044 <table_set_int8@@Base>
   14ff0:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   14ff4:	movw	r1, #22118	; 0x5666
   14ff8:	add	r2, sp, #8
   14ffc:	mov	r0, r7
   15000:	movt	r1, #1
   15004:	bl	11f90 <__isoc99_sscanf@plt>
   15008:	mvn	r7, #0
   1500c:	cmp	r0, #1
   15010:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   15014:	ldrb	r3, [sp, #8]
   15018:	mov	r0, r6
   1501c:	mov	r1, r5
   15020:	mov	r2, r4
   15024:	bl	140c4 <table_set_uint8@@Base>
   15028:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   1502c:	movw	r1, #22077	; 0x563d
   15030:	add	r2, sp, #8
   15034:	mov	r0, r7
   15038:	movt	r1, #1
   1503c:	bl	11f90 <__isoc99_sscanf@plt>
   15040:	mvn	r7, #0
   15044:	cmp	r0, #1
   15048:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   1504c:	ldrsh	r3, [sp, #8]
   15050:	mov	r0, r6
   15054:	mov	r1, r5
   15058:	mov	r2, r4
   1505c:	bl	14144 <table_set_int16@@Base>
   15060:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   15064:	movw	r1, #22081	; 0x5641
   15068:	add	r2, sp, #8
   1506c:	mov	r0, r7
   15070:	movt	r1, #1
   15074:	bl	11f90 <__isoc99_sscanf@plt>
   15078:	mvn	r7, #0
   1507c:	cmp	r0, #1
   15080:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   15084:	ldrh	r3, [sp, #8]
   15088:	mov	r0, r6
   1508c:	mov	r1, r5
   15090:	mov	r2, r4
   15094:	bl	141c4 <table_set_uint16@@Base>
   15098:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   1509c:	movw	r1, #21964	; 0x55cc
   150a0:	add	r2, sp, #8
   150a4:	mov	r0, r7
   150a8:	movt	r1, #1
   150ac:	bl	11f90 <__isoc99_sscanf@plt>
   150b0:	mvn	r7, #0
   150b4:	cmp	r0, #1
   150b8:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   150bc:	ldr	r3, [sp, #8]
   150c0:	mov	r0, r6
   150c4:	mov	r1, r5
   150c8:	mov	r2, r4
   150cc:	bl	14244 <table_set_int32@@Base>
   150d0:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   150d4:	movw	r1, #22064	; 0x5630
   150d8:	add	r2, sp, #8
   150dc:	mov	r0, r7
   150e0:	movt	r1, #1
   150e4:	bl	11f90 <__isoc99_sscanf@plt>
   150e8:	mvn	r7, #0
   150ec:	cmp	r0, #1
   150f0:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   150f4:	ldr	r3, [sp, #8]
   150f8:	mov	r0, r6
   150fc:	mov	r1, r5
   15100:	mov	r2, r4
   15104:	bl	142c4 <table_set_uint32@@Base>
   15108:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   1510c:	movw	r1, #22067	; 0x5633
   15110:	add	r2, sp, #8
   15114:	mov	r0, r7
   15118:	movt	r1, #1
   1511c:	bl	11f90 <__isoc99_sscanf@plt>
   15120:	mvn	r7, #0
   15124:	cmp	r0, #1
   15128:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   1512c:	ldr	r0, [sp, #8]
   15130:	ldr	r1, [sp, #12]
   15134:	mov	r2, r4
   15138:	stm	sp, {r0, r1}
   1513c:	mov	r0, r6
   15140:	mov	r1, r5
   15144:	bl	14344 <table_set_int64@@Base>
   15148:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   1514c:	movw	r1, #22072	; 0x5638
   15150:	add	r2, sp, #8
   15154:	mov	r0, r7
   15158:	movt	r1, #1
   1515c:	bl	11f90 <__isoc99_sscanf@plt>
   15160:	mvn	r7, #0
   15164:	cmp	r0, #1
   15168:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   1516c:	ldr	r0, [sp, #8]
   15170:	ldr	r1, [sp, #12]
   15174:	mov	r2, r4
   15178:	stm	sp, {r0, r1}
   1517c:	mov	r0, r6
   15180:	mov	r1, r5
   15184:	bl	143cc <table_set_uint64@@Base>
   15188:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   1518c:	movw	r1, #22077	; 0x563d
   15190:	add	r2, sp, #8
   15194:	mov	r0, r7
   15198:	movt	r1, #1
   1519c:	bl	11f90 <__isoc99_sscanf@plt>
   151a0:	mvn	r7, #0
   151a4:	cmp	r0, #1
   151a8:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   151ac:	ldrsh	r3, [sp, #8]
   151b0:	mov	r0, r6
   151b4:	mov	r1, r5
   151b8:	mov	r2, r4
   151bc:	bl	14454 <table_set_short@@Base>
   151c0:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   151c4:	movw	r1, #22081	; 0x5641
   151c8:	add	r2, sp, #8
   151cc:	mov	r0, r7
   151d0:	movt	r1, #1
   151d4:	bl	11f90 <__isoc99_sscanf@plt>
   151d8:	mvn	r7, #0
   151dc:	cmp	r0, #1
   151e0:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   151e4:	ldrh	r3, [sp, #8]
   151e8:	mov	r0, r6
   151ec:	mov	r1, r5
   151f0:	mov	r2, r4
   151f4:	bl	144d4 <table_set_ushort@@Base>
   151f8:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   151fc:	movw	r1, #22085	; 0x5645
   15200:	add	r2, sp, #8
   15204:	mov	r0, r7
   15208:	movt	r1, #1
   1520c:	bl	11f90 <__isoc99_sscanf@plt>
   15210:	mvn	r7, #0
   15214:	cmp	r0, #1
   15218:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   1521c:	ldr	r3, [sp, #8]
   15220:	mov	r0, r6
   15224:	mov	r1, r5
   15228:	mov	r2, r4
   1522c:	bl	14554 <table_set_long@@Base>
   15230:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   15234:	movw	r1, #22089	; 0x5649
   15238:	add	r2, sp, #8
   1523c:	mov	r0, r7
   15240:	movt	r1, #1
   15244:	bl	11f90 <__isoc99_sscanf@plt>
   15248:	mvn	r7, #0
   1524c:	cmp	r0, #1
   15250:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   15254:	ldr	r3, [sp, #8]
   15258:	mov	r0, r6
   1525c:	mov	r1, r5
   15260:	mov	r2, r4
   15264:	bl	145d4 <table_set_ulong@@Base>
   15268:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   1526c:	movw	r1, #22067	; 0x5633
   15270:	add	r2, sp, #8
   15274:	mov	r0, r7
   15278:	movt	r1, #1
   1527c:	bl	11f90 <__isoc99_sscanf@plt>
   15280:	mvn	r7, #0
   15284:	cmp	r0, #1
   15288:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   1528c:	ldr	r0, [sp, #8]
   15290:	ldr	r1, [sp, #12]
   15294:	mov	r2, r4
   15298:	stm	sp, {r0, r1}
   1529c:	mov	r0, r6
   152a0:	mov	r1, r5
   152a4:	bl	14654 <table_set_llong@@Base>
   152a8:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   152ac:	movw	r1, #22072	; 0x5638
   152b0:	add	r2, sp, #8
   152b4:	mov	r0, r7
   152b8:	movt	r1, #1
   152bc:	bl	11f90 <__isoc99_sscanf@plt>
   152c0:	mvn	r7, #0
   152c4:	cmp	r0, #1
   152c8:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   152cc:	ldr	r0, [sp, #8]
   152d0:	ldr	r1, [sp, #12]
   152d4:	mov	r2, r4
   152d8:	stm	sp, {r0, r1}
   152dc:	mov	r0, r6
   152e0:	mov	r1, r5
   152e4:	bl	146dc <table_set_ullong@@Base>
   152e8:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   152ec:	movw	r1, #22096	; 0x5650
   152f0:	add	r2, sp, #8
   152f4:	mov	r0, r7
   152f8:	movt	r1, #1
   152fc:	bl	11f90 <__isoc99_sscanf@plt>
   15300:	mvn	r7, #0
   15304:	cmp	r0, #1
   15308:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   1530c:	vldr	s0, [sp, #8]
   15310:	mov	r0, r6
   15314:	mov	r1, r5
   15318:	mov	r2, r4
   1531c:	bl	14764 <table_set_float@@Base>
   15320:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   15324:	movw	r1, #22099	; 0x5653
   15328:	add	r2, sp, #8
   1532c:	mov	r0, r7
   15330:	movt	r1, #1
   15334:	bl	11f90 <__isoc99_sscanf@plt>
   15338:	mvn	r7, #0
   1533c:	cmp	r0, #1
   15340:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   15344:	vldr	d0, [sp, #8]
   15348:	mov	r0, r6
   1534c:	mov	r1, r5
   15350:	mov	r2, r4
   15354:	bl	147f0 <table_set_double@@Base>
   15358:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   1535c:	movw	r1, #22103	; 0x5657
   15360:	add	r2, sp, #8
   15364:	mov	r0, r7
   15368:	movt	r1, #1
   1536c:	bl	11f90 <__isoc99_sscanf@plt>
   15370:	mvn	r7, #0
   15374:	cmp	r0, #1
   15378:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   1537c:	vldr	d0, [sp, #8]
   15380:	mov	r0, r6
   15384:	mov	r1, r5
   15388:	mov	r2, r4
   1538c:	bl	14878 <table_set_ldouble@@Base>
   15390:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   15394:	movw	r1, #22107	; 0x565b
   15398:	add	r2, sp, #8
   1539c:	mov	r0, r7
   153a0:	movt	r1, #1
   153a4:	bl	11f90 <__isoc99_sscanf@plt>
   153a8:	mvn	r7, #0
   153ac:	cmp	r0, #1
   153b0:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   153b4:	ldrb	r3, [sp, #8]
   153b8:	mov	r0, r6
   153bc:	mov	r1, r5
   153c0:	mov	r2, r4
   153c4:	bl	14988 <table_set_char@@Base>
   153c8:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   153cc:	movw	r1, #22107	; 0x565b
   153d0:	add	r2, sp, #8
   153d4:	mov	r0, r7
   153d8:	movt	r1, #1
   153dc:	bl	11f90 <__isoc99_sscanf@plt>
   153e0:	mvn	r7, #0
   153e4:	cmp	r0, #1
   153e8:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   153ec:	ldrb	r3, [sp, #8]
   153f0:	mov	r0, r6
   153f4:	mov	r1, r5
   153f8:	mov	r2, r4
   153fc:	bl	14a08 <table_set_uchar@@Base>
   15400:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   15404:	movw	r1, #22093	; 0x564d
   15408:	add	r2, sp, #8
   1540c:	mov	r0, r7
   15410:	movt	r1, #1
   15414:	bl	11f90 <__isoc99_sscanf@plt>
   15418:	mvn	r7, #0
   1541c:	cmp	r0, #1
   15420:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   15424:	add	r3, sp, #8
   15428:	mov	r0, r6
   1542c:	mov	r1, r5
   15430:	mov	r2, r4
   15434:	bl	14900 <table_set_string@@Base>
   15438:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   1543c:	movw	r1, #21964	; 0x55cc
   15440:	add	r2, sp, #8
   15444:	mov	r0, r7
   15448:	movt	r1, #1
   1544c:	bl	11f90 <__isoc99_sscanf@plt>
   15450:	mvn	r7, #0
   15454:	cmp	r0, #1
   15458:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   1545c:	ldr	r0, [sp, #8]
   15460:	cmp	r0, #0
   15464:	beq	154c4 <table_cell_from_buffer@@Base+0x60c>
   15468:	mov	r0, r6
   1546c:	mov	r1, r5
   15470:	mov	r2, r4
   15474:	mov	r3, #1
   15478:	bl	13ec4 <table_set_bool@@Base>
   1547c:	b	154b4 <table_cell_from_buffer@@Base+0x5fc>
   15480:	movw	r1, #22110	; 0x565e
   15484:	add	r2, sp, #8
   15488:	mov	r0, r7
   1548c:	movt	r1, #1
   15490:	bl	11f90 <__isoc99_sscanf@plt>
   15494:	mvn	r7, #0
   15498:	cmp	r0, #1
   1549c:	bne	154b8 <table_cell_from_buffer@@Base+0x600>
   154a0:	ldr	r3, [sp, #8]
   154a4:	mov	r0, r6
   154a8:	mov	r1, r5
   154ac:	mov	r2, r4
   154b0:	bl	14a88 <table_set_ptr@@Base>
   154b4:	mov	r7, #0
   154b8:	mov	r0, r7
   154bc:	sub	sp, fp, #24
   154c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   154c4:	mov	r0, r6
   154c8:	mov	r1, r5
   154cc:	mov	r2, r4
   154d0:	mov	r3, #0
   154d4:	mov	r7, #0
   154d8:	bl	13ec4 <table_set_bool@@Base>
   154dc:	mov	r0, r7
   154e0:	sub	sp, fp, #24
   154e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000154e8 <table_cell_nullify@@Base>:
   154e8:	push	{r4, r5, fp, lr}
   154ec:	add	fp, sp, #8
   154f0:	mov	r4, r2
   154f4:	bl	13980 <table_get_row_ptr@@Base>
   154f8:	ldr	r5, [r0]
   154fc:	ldr	r0, [r5, r4, lsl #2]
   15500:	cmp	r0, #0
   15504:	beq	15514 <table_cell_nullify@@Base+0x2c>
   15508:	bl	11f18 <free@plt>
   1550c:	mov	r0, #0
   15510:	str	r0, [r5, r4, lsl #2]
   15514:	mov	r0, #0
   15518:	pop	{r4, r5, fp, pc}

0001551c <__libc_csu_init@@Base>:
   1551c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15520:	mov	r7, r0
   15524:	ldr	r6, [pc, #72]	; 15574 <__libc_csu_init@@Base+0x58>
   15528:	ldr	r5, [pc, #72]	; 15578 <__libc_csu_init@@Base+0x5c>
   1552c:	add	r6, pc, r6
   15530:	add	r5, pc, r5
   15534:	sub	r6, r6, r5
   15538:	mov	r8, r1
   1553c:	mov	r9, r2
   15540:	bl	11ee0 <strcmp@plt-0x20>
   15544:	asrs	r6, r6, #2
   15548:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1554c:	mov	r4, #0
   15550:	add	r4, r4, #1
   15554:	ldr	r3, [r5], #4
   15558:	mov	r2, r9
   1555c:	mov	r1, r8
   15560:	mov	r0, r7
   15564:	blx	r3
   15568:	cmp	r6, r4
   1556c:	bne	15550 <__libc_csu_init@@Base+0x34>
   15570:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15574:	ldrdeq	r0, [r1], -r8
   15578:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

0001557c <__libc_csu_fini@@Base>:
   1557c:	bx	lr

Disassembly of section .fini:

00015580 <.fini>:
   15580:	push	{r3, lr}
   15584:	pop	{r3, pc}
