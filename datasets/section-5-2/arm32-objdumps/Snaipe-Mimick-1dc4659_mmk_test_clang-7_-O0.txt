
../repos/Snaipe-Mimick-1dc4659/test/mmk_test:     file format elf32-littlearm


Disassembly of section .init:

000114d8 <.init>:
   114d8:	push	{r3, lr}
   114dc:	bl	1163c <_start@@Base+0x3c>
   114e0:	pop	{r3, pc}

Disassembly of section .plt:

000114e4 <strstr@plt-0x14>:
   114e4:	push	{lr}		; (str lr, [sp, #-4]!)
   114e8:	ldr	lr, [pc, #4]	; 114f4 <strstr@plt-0x4>
   114ec:	add	lr, pc, lr
   114f0:	ldr	pc, [lr, #8]!
   114f4:	andeq	r5, r1, ip, lsl #22

000114f8 <strstr@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #86016	; 0x15000
   11500:	ldr	pc, [ip, #2828]!	; 0xb0c

00011504 <strcmp@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #86016	; 0x15000
   1150c:	ldr	pc, [ip, #2820]!	; 0xb04

00011510 <mprotect@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #86016	; 0x15000
   11518:	ldr	pc, [ip, #2812]!	; 0xafc

0001151c <free@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #86016	; 0x15000
   11524:	ldr	pc, [ip, #2804]!	; 0xaf4

00011528 <memcpy@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #86016	; 0x15000
   11530:	ldr	pc, [ip, #2796]!	; 0xaec

00011534 <fn_vv@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #86016	; 0x15000
   1153c:	ldr	pc, [ip, #2788]!	; 0xae4

00011540 <realloc@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #86016	; 0x15000
   11548:	ldr	pc, [ip, #2780]!	; 0xadc

0001154c <fn_ii@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #86016	; 0x15000
   11554:	ldr	pc, [ip, #2772]!	; 0xad4

00011558 <fn_ii_va@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #86016	; 0x15000
   11560:	ldr	pc, [ip, #2764]!	; 0xacc

00011564 <malloc@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #86016	; 0x15000
   1156c:	ldr	pc, [ip, #2756]!	; 0xac4

00011570 <__libc_start_main@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #86016	; 0x15000
   11578:	ldr	pc, [ip, #2748]!	; 0xabc

0001157c <__gmon_start__@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #86016	; 0x15000
   11584:	ldr	pc, [ip, #2740]!	; 0xab4

00011588 <strlen@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #86016	; 0x15000
   11590:	ldr	pc, [ip, #2732]!	; 0xaac

00011594 <mmap@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #86016	; 0x15000
   1159c:	ldr	pc, [ip, #2724]!	; 0xaa4

000115a0 <strchr@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #86016	; 0x15000
   115a8:	ldr	pc, [ip, #2716]!	; 0xa9c

000115ac <fprintf@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #86016	; 0x15000
   115b4:	ldr	pc, [ip, #2708]!	; 0xa94

000115b8 <__errno_location@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #86016	; 0x15000
   115c0:	ldr	pc, [ip, #2700]!	; 0xa8c

000115c4 <snprintf@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #86016	; 0x15000
   115cc:	ldr	pc, [ip, #2692]!	; 0xa84

000115d0 <munmap@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #86016	; 0x15000
   115d8:	ldr	pc, [ip, #2684]!	; 0xa7c

000115dc <__tls_get_addr@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #86016	; 0x15000
   115e4:	ldr	pc, [ip, #2676]!	; 0xa74

000115e8 <strncmp@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #86016	; 0x15000
   115f0:	ldr	pc, [ip, #2668]!	; 0xa6c

000115f4 <abort@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #86016	; 0x15000
   115fc:	ldr	pc, [ip, #2660]!	; 0xa64

Disassembly of section .text:

00011600 <_start@@Base>:
   11600:	mov	fp, #0
   11604:	mov	lr, #0
   11608:	pop	{r1}		; (ldr r1, [sp], #4)
   1160c:	mov	r2, sp
   11610:	push	{r2}		; (str r2, [sp, #-4]!)
   11614:	push	{r0}		; (str r0, [sp, #-4]!)
   11618:	ldr	ip, [pc, #16]	; 11630 <_start@@Base+0x30>
   1161c:	push	{ip}		; (str ip, [sp, #-4]!)
   11620:	ldr	r0, [pc, #12]	; 11634 <_start@@Base+0x34>
   11624:	ldr	r3, [pc, #12]	; 11638 <_start@@Base+0x38>
   11628:	bl	11570 <__libc_start_main@plt>
   1162c:	bl	115f4 <abort@plt>
   11630:	andeq	r5, r1, r4, asr sp
   11634:	andeq	r1, r1, r8, lsl #14
   11638:	strdeq	r5, [r1], -r4
   1163c:	ldr	r3, [pc, #20]	; 11658 <_start@@Base+0x58>
   11640:	ldr	r2, [pc, #20]	; 1165c <_start@@Base+0x5c>
   11644:	add	r3, pc, r3
   11648:	ldr	r2, [r3, r2]
   1164c:	cmp	r2, #0
   11650:	bxeq	lr
   11654:	b	1157c <__gmon_start__@plt>
   11658:			; <UNDEFINED> instruction: 0x000159b4
   1165c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   11660:	ldr	r0, [pc, #24]	; 11680 <_start@@Base+0x80>
   11664:	ldr	r3, [pc, #24]	; 11684 <_start@@Base+0x84>
   11668:	cmp	r3, r0
   1166c:	bxeq	lr
   11670:	ldr	r3, [pc, #16]	; 11688 <_start@@Base+0x88>
   11674:	cmp	r3, #0
   11678:	bxeq	lr
   1167c:	bx	r3
   11680:	ldrdeq	r7, [r2], -r8
   11684:	ldrdeq	r7, [r2], -r8
   11688:	andeq	r0, r0, r0
   1168c:	ldr	r0, [pc, #36]	; 116b8 <_start@@Base+0xb8>
   11690:	ldr	r1, [pc, #36]	; 116bc <_start@@Base+0xbc>
   11694:	sub	r1, r1, r0
   11698:	asr	r1, r1, #2
   1169c:	add	r1, r1, r1, lsr #31
   116a0:	asrs	r1, r1, #1
   116a4:	bxeq	lr
   116a8:	ldr	r3, [pc, #16]	; 116c0 <_start@@Base+0xc0>
   116ac:	cmp	r3, #0
   116b0:	bxeq	lr
   116b4:	bx	r3
   116b8:	ldrdeq	r7, [r2], -r8
   116bc:	ldrdeq	r7, [r2], -r8
   116c0:	andeq	r0, r0, r0
   116c4:	push	{r4, lr}
   116c8:	ldr	r4, [pc, #24]	; 116e8 <_start@@Base+0xe8>
   116cc:	ldrb	r3, [r4]
   116d0:	cmp	r3, #0
   116d4:	popne	{r4, pc}
   116d8:	bl	11660 <_start@@Base+0x60>
   116dc:	mov	r3, #1
   116e0:	strb	r3, [r4]
   116e4:	pop	{r4, pc}
   116e8:	ldrdeq	r7, [r2], -r8
   116ec:	b	1168c <_start@@Base+0x8c>

000116f0 <set_valid@@Base>:
   116f0:	ldr	r0, [pc, #12]	; 11704 <set_valid@@Base+0x14>
   116f4:	add	r0, pc, r0
   116f8:	movw	r1, #1
   116fc:	str	r1, [r0]
   11700:	bx	lr
   11704:	andeq	r5, r1, r0, ror #19

00011708 <main@@Base>:
   11708:	push	{r4, r5, fp, lr}
   1170c:	add	fp, sp, #8
   11710:	sub	sp, sp, #672	; 0x2a0
   11714:	ldr	r0, [pc, #3016]	; 122e4 <main@@Base+0xbdc>
   11718:	add	r0, pc, r0
   1171c:	movw	r1, #0
   11720:	str	r1, [fp, #-12]
   11724:	bl	12444 <main@@Base+0xd3c>
   11728:	movw	r1, #0
   1172c:	str	r0, [sp, #204]	; 0xcc
   11730:	mov	r0, r1
   11734:	bl	13984 <mmk_matcher_init@@Base>
   11738:	ldr	r0, [pc, #2976]	; 122e0 <main@@Base+0xbd8>
   1173c:	ldr	r0, [pc, r0]
   11740:	sub	r1, fp, #32
   11744:	mov	lr, r1
   11748:	vmov.i32	q8, #0	; 0x00000000
   1174c:	vst1.32	{d16-d17}, [lr]!
   11750:	mov	r2, #0
   11754:	str	r2, [lr]
   11758:	str	r0, [fp, #-20]	; 0xffffffec
   1175c:	mov	r0, r1
   11760:	bl	15bec <mmk_when_init@@Base>
   11764:	bl	11534 <fn_vv@plt>
   11768:	bl	139f4 <mmk_matcher_term@@Base>
   1176c:	movw	r0, #1
   11770:	bl	13984 <mmk_matcher_init@@Base>
   11774:	bl	11534 <fn_vv@plt>
   11778:	bl	139f4 <mmk_matcher_term@@Base>
   1177c:	movw	r0, #1
   11780:	str	r0, [fp, #-56]	; 0xffffffc8
   11784:	str	r0, [fp, #-52]	; 0xffffffcc
   11788:	movw	r0, #0
   1178c:	str	r0, [fp, #-48]	; 0xffffffd0
   11790:	str	r0, [fp, #-44]	; 0xffffffd4
   11794:	str	r0, [fp, #-40]	; 0xffffffd8
   11798:	str	r0, [fp, #-36]	; 0xffffffdc
   1179c:	sub	r0, fp, #56	; 0x38
   117a0:	bl	150cc <mmk_verify_times@@Base>
   117a4:	cmp	r0, #0
   117a8:	bne	117f0 <main@@Base+0xe8>
   117ac:	ldr	r0, [pc, #2868]	; 122e8 <main@@Base+0xbe0>
   117b0:	add	r1, pc, r0
   117b4:	ldr	r0, [pc, #2864]	; 122ec <main@@Base+0xbe4>
   117b8:	add	r2, pc, r0
   117bc:	ldr	r0, [pc, #2860]	; 122f0 <main@@Base+0xbe8>
   117c0:	add	r0, pc, r0
   117c4:	ldr	r3, [pc, #2856]	; 122f4 <main@@Base+0xbec>
   117c8:	ldr	r3, [pc, r3]
   117cc:	ldr	r3, [r3]
   117d0:	str	r0, [sp, #200]	; 0xc8
   117d4:	mov	r0, r3
   117d8:	movw	r3, #42	; 0x2a
   117dc:	ldr	ip, [sp, #200]	; 0xc8
   117e0:	str	ip, [sp]
   117e4:	bl	115ac <fprintf@plt>
   117e8:	str	r0, [sp, #196]	; 0xc4
   117ec:	bl	115f4 <abort@plt>
   117f0:	b	117f4 <main@@Base+0xec>
   117f4:	b	117f8 <main@@Base+0xf0>
   117f8:	movw	r0, #1
   117fc:	bl	13984 <mmk_matcher_init@@Base>
   11800:	bl	11534 <fn_vv@plt>
   11804:	bl	139f4 <mmk_matcher_term@@Base>
   11808:	movw	r0, #1
   1180c:	str	r0, [fp, #-80]	; 0xffffffb0
   11810:	movw	lr, #0
   11814:	str	lr, [fp, #-76]	; 0xffffffb4
   11818:	str	lr, [fp, #-72]	; 0xffffffb8
   1181c:	str	r0, [fp, #-68]	; 0xffffffbc
   11820:	str	lr, [fp, #-64]	; 0xffffffc0
   11824:	str	lr, [fp, #-60]	; 0xffffffc4
   11828:	sub	r0, fp, #80	; 0x50
   1182c:	bl	150cc <mmk_verify_times@@Base>
   11830:	cmp	r0, #0
   11834:	bne	1187c <main@@Base+0x174>
   11838:	ldr	r0, [pc, #2744]	; 122f8 <main@@Base+0xbf0>
   1183c:	add	r1, pc, r0
   11840:	ldr	r0, [pc, #2740]	; 122fc <main@@Base+0xbf4>
   11844:	add	r2, pc, r0
   11848:	ldr	r0, [pc, #2736]	; 12300 <main@@Base+0xbf8>
   1184c:	add	r0, pc, r0
   11850:	ldr	r3, [pc, #2732]	; 12304 <main@@Base+0xbfc>
   11854:	ldr	r3, [pc, r3]
   11858:	ldr	r3, [r3]
   1185c:	str	r0, [sp, #192]	; 0xc0
   11860:	mov	r0, r3
   11864:	movw	r3, #43	; 0x2b
   11868:	ldr	ip, [sp, #192]	; 0xc0
   1186c:	str	ip, [sp]
   11870:	bl	115ac <fprintf@plt>
   11874:	str	r0, [sp, #188]	; 0xbc
   11878:	bl	115f4 <abort@plt>
   1187c:	b	11880 <main@@Base+0x178>
   11880:	b	11884 <main@@Base+0x17c>
   11884:	movw	r0, #1
   11888:	bl	13984 <mmk_matcher_init@@Base>
   1188c:	bl	11534 <fn_vv@plt>
   11890:	bl	139f4 <mmk_matcher_term@@Base>
   11894:	movw	r0, #1
   11898:	str	r0, [fp, #-104]	; 0xffffff98
   1189c:	movw	lr, #0
   118a0:	str	lr, [fp, #-100]	; 0xffffff9c
   118a4:	str	lr, [fp, #-96]	; 0xffffffa0
   118a8:	str	lr, [fp, #-92]	; 0xffffffa4
   118ac:	str	r0, [fp, #-88]	; 0xffffffa8
   118b0:	str	lr, [fp, #-84]	; 0xffffffac
   118b4:	sub	r0, fp, #104	; 0x68
   118b8:	bl	150cc <mmk_verify_times@@Base>
   118bc:	cmp	r0, #0
   118c0:	beq	11908 <main@@Base+0x200>
   118c4:	ldr	r0, [pc, #2920]	; 12434 <main@@Base+0xd2c>
   118c8:	add	r1, pc, r0
   118cc:	ldr	r0, [pc, #2916]	; 12438 <main@@Base+0xd30>
   118d0:	add	r2, pc, r0
   118d4:	ldr	r0, [pc, #2912]	; 1243c <main@@Base+0xd34>
   118d8:	add	r0, pc, r0
   118dc:	ldr	r3, [pc, #2908]	; 12440 <main@@Base+0xd38>
   118e0:	ldr	r3, [pc, r3]
   118e4:	ldr	r3, [r3]
   118e8:	str	r0, [sp, #184]	; 0xb8
   118ec:	mov	r0, r3
   118f0:	movw	r3, #45	; 0x2d
   118f4:	ldr	ip, [sp, #184]	; 0xb8
   118f8:	str	ip, [sp]
   118fc:	bl	115ac <fprintf@plt>
   11900:	str	r0, [sp, #180]	; 0xb4
   11904:	bl	115f4 <abort@plt>
   11908:	b	1190c <main@@Base+0x204>
   1190c:	b	11910 <main@@Base+0x208>
   11910:	movw	r0, #1
   11914:	bl	13984 <mmk_matcher_init@@Base>
   11918:	bl	11534 <fn_vv@plt>
   1191c:	bl	139f4 <mmk_matcher_term@@Base>
   11920:	movw	r0, #1
   11924:	str	r0, [fp, #-128]	; 0xffffff80
   11928:	movw	lr, #0
   1192c:	str	lr, [fp, #-124]	; 0xffffff84
   11930:	str	r0, [fp, #-120]	; 0xffffff88
   11934:	str	lr, [fp, #-116]	; 0xffffff8c
   11938:	str	lr, [fp, #-112]	; 0xffffff90
   1193c:	str	lr, [fp, #-108]	; 0xffffff94
   11940:	sub	r0, fp, #128	; 0x80
   11944:	bl	150cc <mmk_verify_times@@Base>
   11948:	cmp	r0, #0
   1194c:	beq	11994 <main@@Base+0x28c>
   11950:	ldr	r0, [pc, #2764]	; 12424 <main@@Base+0xd1c>
   11954:	add	r1, pc, r0
   11958:	ldr	r0, [pc, #2760]	; 12428 <main@@Base+0xd20>
   1195c:	add	r2, pc, r0
   11960:	ldr	r0, [pc, #2756]	; 1242c <main@@Base+0xd24>
   11964:	add	r0, pc, r0
   11968:	ldr	r3, [pc, #2752]	; 12430 <main@@Base+0xd28>
   1196c:	ldr	r3, [pc, r3]
   11970:	ldr	r3, [r3]
   11974:	str	r0, [sp, #176]	; 0xb0
   11978:	mov	r0, r3
   1197c:	movw	r3, #46	; 0x2e
   11980:	ldr	ip, [sp, #176]	; 0xb0
   11984:	str	ip, [sp]
   11988:	bl	115ac <fprintf@plt>
   1198c:	str	r0, [sp, #172]	; 0xac
   11990:	bl	115f4 <abort@plt>
   11994:	b	11998 <main@@Base+0x290>
   11998:	b	1199c <main@@Base+0x294>
   1199c:	movw	r0, #1
   119a0:	bl	13984 <mmk_matcher_init@@Base>
   119a4:	bl	11534 <fn_vv@plt>
   119a8:	bl	139f4 <mmk_matcher_term@@Base>
   119ac:	movw	r0, #1
   119b0:	str	r0, [fp, #-152]	; 0xffffff68
   119b4:	movw	lr, #0
   119b8:	str	lr, [fp, #-148]	; 0xffffff6c
   119bc:	str	r0, [fp, #-144]	; 0xffffff70
   119c0:	str	r0, [fp, #-140]	; 0xffffff74
   119c4:	str	lr, [fp, #-136]	; 0xffffff78
   119c8:	str	lr, [fp, #-132]	; 0xffffff7c
   119cc:	sub	r0, fp, #152	; 0x98
   119d0:	bl	150cc <mmk_verify_times@@Base>
   119d4:	cmp	r0, #0
   119d8:	beq	11a20 <main@@Base+0x318>
   119dc:	ldr	r0, [pc, #2608]	; 12414 <main@@Base+0xd0c>
   119e0:	add	r1, pc, r0
   119e4:	ldr	r0, [pc, #2604]	; 12418 <main@@Base+0xd10>
   119e8:	add	r2, pc, r0
   119ec:	ldr	r0, [pc, #2600]	; 1241c <main@@Base+0xd14>
   119f0:	add	r0, pc, r0
   119f4:	ldr	r3, [pc, #2596]	; 12420 <main@@Base+0xd18>
   119f8:	ldr	r3, [pc, r3]
   119fc:	ldr	r3, [r3]
   11a00:	str	r0, [sp, #168]	; 0xa8
   11a04:	mov	r0, r3
   11a08:	movw	r3, #47	; 0x2f
   11a0c:	ldr	ip, [sp, #168]	; 0xa8
   11a10:	str	ip, [sp]
   11a14:	bl	115ac <fprintf@plt>
   11a18:	str	r0, [sp, #164]	; 0xa4
   11a1c:	bl	115f4 <abort@plt>
   11a20:	b	11a24 <main@@Base+0x31c>
   11a24:	bl	11534 <fn_vv@plt>
   11a28:	ldr	r0, [pc, #2264]	; 12308 <main@@Base+0xc00>
   11a2c:	add	r0, pc, r0
   11a30:	ldr	r0, [r0]
   11a34:	cmp	r0, #0
   11a38:	bne	11a80 <main@@Base+0x378>
   11a3c:	ldr	r0, [pc, #2248]	; 1230c <main@@Base+0xc04>
   11a40:	add	r1, pc, r0
   11a44:	ldr	r0, [pc, #2244]	; 12310 <main@@Base+0xc08>
   11a48:	add	r2, pc, r0
   11a4c:	ldr	r0, [pc, #2240]	; 12314 <main@@Base+0xc0c>
   11a50:	add	r0, pc, r0
   11a54:	ldr	r3, [pc, #2236]	; 12318 <main@@Base+0xc10>
   11a58:	ldr	r3, [pc, r3]
   11a5c:	ldr	r3, [r3]
   11a60:	str	r0, [sp, #160]	; 0xa0
   11a64:	mov	r0, r3
   11a68:	movw	r3, #50	; 0x32
   11a6c:	ldr	ip, [sp, #160]	; 0xa0
   11a70:	str	ip, [sp]
   11a74:	bl	115ac <fprintf@plt>
   11a78:	str	r0, [sp, #156]	; 0x9c
   11a7c:	bl	115f4 <abort@plt>
   11a80:	b	11a84 <main@@Base+0x37c>
   11a84:	b	11a88 <main@@Base+0x380>
   11a88:	movw	r0, #1
   11a8c:	bl	13984 <mmk_matcher_init@@Base>
   11a90:	bl	11534 <fn_vv@plt>
   11a94:	bl	139f4 <mmk_matcher_term@@Base>
   11a98:	movw	r0, #1
   11a9c:	str	r0, [fp, #-176]	; 0xffffff50
   11aa0:	movw	lr, #0
   11aa4:	str	lr, [fp, #-172]	; 0xffffff54
   11aa8:	str	lr, [fp, #-168]	; 0xffffff58
   11aac:	str	lr, [fp, #-164]	; 0xffffff5c
   11ab0:	str	r0, [fp, #-160]	; 0xffffff60
   11ab4:	str	lr, [fp, #-156]	; 0xffffff64
   11ab8:	sub	r0, fp, #176	; 0xb0
   11abc:	bl	150cc <mmk_verify_times@@Base>
   11ac0:	cmp	r0, #0
   11ac4:	bne	11b0c <main@@Base+0x404>
   11ac8:	ldr	r0, [pc, #2124]	; 1231c <main@@Base+0xc14>
   11acc:	add	r1, pc, r0
   11ad0:	ldr	r0, [pc, #2120]	; 12320 <main@@Base+0xc18>
   11ad4:	add	r2, pc, r0
   11ad8:	ldr	r0, [pc, #2116]	; 12324 <main@@Base+0xc1c>
   11adc:	add	r0, pc, r0
   11ae0:	ldr	r3, [pc, #2112]	; 12328 <main@@Base+0xc20>
   11ae4:	ldr	r3, [pc, r3]
   11ae8:	ldr	r3, [r3]
   11aec:	str	r0, [sp, #152]	; 0x98
   11af0:	mov	r0, r3
   11af4:	movw	r3, #51	; 0x33
   11af8:	ldr	ip, [sp, #152]	; 0x98
   11afc:	str	ip, [sp]
   11b00:	bl	115ac <fprintf@plt>
   11b04:	str	r0, [sp, #148]	; 0x94
   11b08:	bl	115f4 <abort@plt>
   11b0c:	b	11b10 <main@@Base+0x408>
   11b10:	b	11b14 <main@@Base+0x40c>
   11b14:	movw	r0, #1
   11b18:	bl	13984 <mmk_matcher_init@@Base>
   11b1c:	bl	11534 <fn_vv@plt>
   11b20:	bl	139f4 <mmk_matcher_term@@Base>
   11b24:	movw	r0, #1
   11b28:	str	r0, [fp, #-200]	; 0xffffff38
   11b2c:	movw	lr, #0
   11b30:	str	lr, [fp, #-196]	; 0xffffff3c
   11b34:	str	r0, [fp, #-192]	; 0xffffff40
   11b38:	str	lr, [fp, #-188]	; 0xffffff44
   11b3c:	str	lr, [fp, #-184]	; 0xffffff48
   11b40:	str	lr, [fp, #-180]	; 0xffffff4c
   11b44:	sub	r0, fp, #200	; 0xc8
   11b48:	bl	150cc <mmk_verify_times@@Base>
   11b4c:	cmp	r0, #0
   11b50:	bne	11b98 <main@@Base+0x490>
   11b54:	ldr	r0, [pc, #2000]	; 1232c <main@@Base+0xc24>
   11b58:	add	r1, pc, r0
   11b5c:	ldr	r0, [pc, #1996]	; 12330 <main@@Base+0xc28>
   11b60:	add	r2, pc, r0
   11b64:	ldr	r0, [pc, #1992]	; 12334 <main@@Base+0xc2c>
   11b68:	add	r0, pc, r0
   11b6c:	ldr	r3, [pc, #1988]	; 12338 <main@@Base+0xc30>
   11b70:	ldr	r3, [pc, r3]
   11b74:	ldr	r3, [r3]
   11b78:	str	r0, [sp, #144]	; 0x90
   11b7c:	mov	r0, r3
   11b80:	movw	r3, #52	; 0x34
   11b84:	ldr	ip, [sp, #144]	; 0x90
   11b88:	str	ip, [sp]
   11b8c:	bl	115ac <fprintf@plt>
   11b90:	str	r0, [sp, #140]	; 0x8c
   11b94:	bl	115f4 <abort@plt>
   11b98:	b	11b9c <main@@Base+0x494>
   11b9c:	b	11ba0 <main@@Base+0x498>
   11ba0:	movw	r0, #1
   11ba4:	bl	13984 <mmk_matcher_init@@Base>
   11ba8:	bl	11534 <fn_vv@plt>
   11bac:	bl	139f4 <mmk_matcher_term@@Base>
   11bb0:	movw	r0, #1
   11bb4:	str	r0, [fp, #-224]	; 0xffffff20
   11bb8:	movw	lr, #0
   11bbc:	str	lr, [fp, #-220]	; 0xffffff24
   11bc0:	str	lr, [fp, #-216]	; 0xffffff28
   11bc4:	str	r0, [fp, #-212]	; 0xffffff2c
   11bc8:	str	lr, [fp, #-208]	; 0xffffff30
   11bcc:	str	lr, [fp, #-204]	; 0xffffff34
   11bd0:	sub	r0, fp, #224	; 0xe0
   11bd4:	bl	150cc <mmk_verify_times@@Base>
   11bd8:	cmp	r0, #0
   11bdc:	bne	11c24 <main@@Base+0x51c>
   11be0:	ldr	r0, [pc, #1876]	; 1233c <main@@Base+0xc34>
   11be4:	add	r1, pc, r0
   11be8:	ldr	r0, [pc, #1872]	; 12340 <main@@Base+0xc38>
   11bec:	add	r2, pc, r0
   11bf0:	ldr	r0, [pc, #1868]	; 12344 <main@@Base+0xc3c>
   11bf4:	add	r0, pc, r0
   11bf8:	ldr	r3, [pc, #1864]	; 12348 <main@@Base+0xc40>
   11bfc:	ldr	r3, [pc, r3]
   11c00:	ldr	r3, [r3]
   11c04:	str	r0, [sp, #136]	; 0x88
   11c08:	mov	r0, r3
   11c0c:	movw	r3, #53	; 0x35
   11c10:	ldr	ip, [sp, #136]	; 0x88
   11c14:	str	ip, [sp]
   11c18:	bl	115ac <fprintf@plt>
   11c1c:	str	r0, [sp, #132]	; 0x84
   11c20:	bl	115f4 <abort@plt>
   11c24:	b	11c28 <main@@Base+0x520>
   11c28:	b	11c2c <main@@Base+0x524>
   11c2c:	movw	r0, #1
   11c30:	bl	13984 <mmk_matcher_init@@Base>
   11c34:	bl	11534 <fn_vv@plt>
   11c38:	bl	139f4 <mmk_matcher_term@@Base>
   11c3c:	movw	r0, #1
   11c40:	str	r0, [fp, #-248]	; 0xffffff08
   11c44:	movw	lr, #0
   11c48:	str	lr, [fp, #-244]	; 0xffffff0c
   11c4c:	str	r0, [fp, #-240]	; 0xffffff10
   11c50:	str	r0, [fp, #-236]	; 0xffffff14
   11c54:	str	lr, [fp, #-232]	; 0xffffff18
   11c58:	str	lr, [fp, #-228]	; 0xffffff1c
   11c5c:	sub	r0, fp, #248	; 0xf8
   11c60:	bl	150cc <mmk_verify_times@@Base>
   11c64:	cmp	r0, #0
   11c68:	bne	11cb0 <main@@Base+0x5a8>
   11c6c:	ldr	r0, [pc, #1752]	; 1234c <main@@Base+0xc44>
   11c70:	add	r1, pc, r0
   11c74:	ldr	r0, [pc, #1748]	; 12350 <main@@Base+0xc48>
   11c78:	add	r2, pc, r0
   11c7c:	ldr	r0, [pc, #1744]	; 12354 <main@@Base+0xc4c>
   11c80:	add	r0, pc, r0
   11c84:	ldr	r3, [pc, #1740]	; 12358 <main@@Base+0xc50>
   11c88:	ldr	r3, [pc, r3]
   11c8c:	ldr	r3, [r3]
   11c90:	str	r0, [sp, #128]	; 0x80
   11c94:	mov	r0, r3
   11c98:	movw	r3, #54	; 0x36
   11c9c:	ldr	ip, [sp, #128]	; 0x80
   11ca0:	str	ip, [sp]
   11ca4:	bl	115ac <fprintf@plt>
   11ca8:	str	r0, [sp, #124]	; 0x7c
   11cac:	bl	115f4 <abort@plt>
   11cb0:	b	11cb4 <main@@Base+0x5ac>
   11cb4:	b	11cb8 <main@@Base+0x5b0>
   11cb8:	movw	r0, #1
   11cbc:	bl	13984 <mmk_matcher_init@@Base>
   11cc0:	bl	11534 <fn_vv@plt>
   11cc4:	bl	139f4 <mmk_matcher_term@@Base>
   11cc8:	movw	r0, #1
   11ccc:	str	r0, [fp, #-272]	; 0xfffffef0
   11cd0:	str	r0, [fp, #-268]	; 0xfffffef4
   11cd4:	movw	r0, #0
   11cd8:	str	r0, [fp, #-264]	; 0xfffffef8
   11cdc:	str	r0, [fp, #-260]	; 0xfffffefc
   11ce0:	str	r0, [fp, #-256]	; 0xffffff00
   11ce4:	str	r0, [fp, #-252]	; 0xffffff04
   11ce8:	sub	r0, fp, #272	; 0x110
   11cec:	bl	150cc <mmk_verify_times@@Base>
   11cf0:	cmp	r0, #0
   11cf4:	beq	11d3c <main@@Base+0x634>
   11cf8:	ldr	r0, [pc, #1796]	; 12404 <main@@Base+0xcfc>
   11cfc:	add	r1, pc, r0
   11d00:	ldr	r0, [pc, #1792]	; 12408 <main@@Base+0xd00>
   11d04:	add	r2, pc, r0
   11d08:	ldr	r0, [pc, #1788]	; 1240c <main@@Base+0xd04>
   11d0c:	add	r0, pc, r0
   11d10:	ldr	r3, [pc, #1784]	; 12410 <main@@Base+0xd08>
   11d14:	ldr	r3, [pc, r3]
   11d18:	ldr	r3, [r3]
   11d1c:	str	r0, [sp, #120]	; 0x78
   11d20:	mov	r0, r3
   11d24:	movw	r3, #55	; 0x37
   11d28:	ldr	ip, [sp, #120]	; 0x78
   11d2c:	str	ip, [sp]
   11d30:	bl	115ac <fprintf@plt>
   11d34:	str	r0, [sp, #116]	; 0x74
   11d38:	bl	115f4 <abort@plt>
   11d3c:	b	11d40 <main@@Base+0x638>
   11d40:	b	11d44 <main@@Base+0x63c>
   11d44:	movw	r0, #1
   11d48:	bl	13984 <mmk_matcher_init@@Base>
   11d4c:	bl	11534 <fn_vv@plt>
   11d50:	bl	139f4 <mmk_matcher_term@@Base>
   11d54:	movw	r0, #1
   11d58:	str	r0, [fp, #-296]	; 0xfffffed8
   11d5c:	movw	r0, #0
   11d60:	str	r0, [fp, #-292]	; 0xfffffedc
   11d64:	str	r0, [fp, #-288]	; 0xfffffee0
   11d68:	str	r0, [fp, #-284]	; 0xfffffee4
   11d6c:	movw	lr, #2
   11d70:	str	lr, [fp, #-280]	; 0xfffffee8
   11d74:	str	r0, [fp, #-276]	; 0xfffffeec
   11d78:	sub	r0, fp, #296	; 0x128
   11d7c:	bl	150cc <mmk_verify_times@@Base>
   11d80:	cmp	r0, #0
   11d84:	beq	11dcc <main@@Base+0x6c4>
   11d88:	ldr	r0, [pc, #1636]	; 123f4 <main@@Base+0xcec>
   11d8c:	add	r1, pc, r0
   11d90:	ldr	r0, [pc, #1632]	; 123f8 <main@@Base+0xcf0>
   11d94:	add	r2, pc, r0
   11d98:	ldr	r0, [pc, #1628]	; 123fc <main@@Base+0xcf4>
   11d9c:	add	r0, pc, r0
   11da0:	ldr	r3, [pc, #1624]	; 12400 <main@@Base+0xcf8>
   11da4:	ldr	r3, [pc, r3]
   11da8:	ldr	r3, [r3]
   11dac:	str	r0, [sp, #112]	; 0x70
   11db0:	mov	r0, r3
   11db4:	movw	r3, #56	; 0x38
   11db8:	ldr	ip, [sp, #112]	; 0x70
   11dbc:	str	ip, [sp]
   11dc0:	bl	115ac <fprintf@plt>
   11dc4:	str	r0, [sp, #108]	; 0x6c
   11dc8:	bl	115f4 <abort@plt>
   11dcc:	b	11dd0 <main@@Base+0x6c8>
   11dd0:	b	11dd4 <main@@Base+0x6cc>
   11dd4:	movw	r0, #1
   11dd8:	bl	13984 <mmk_matcher_init@@Base>
   11ddc:	bl	11534 <fn_vv@plt>
   11de0:	bl	139f4 <mmk_matcher_term@@Base>
   11de4:	movw	r0, #1
   11de8:	str	r0, [fp, #-320]	; 0xfffffec0
   11dec:	movw	r0, #0
   11df0:	str	r0, [fp, #-316]	; 0xfffffec4
   11df4:	movw	lr, #2
   11df8:	str	lr, [fp, #-312]	; 0xfffffec8
   11dfc:	str	r0, [fp, #-308]	; 0xfffffecc
   11e00:	str	r0, [fp, #-304]	; 0xfffffed0
   11e04:	str	r0, [fp, #-300]	; 0xfffffed4
   11e08:	sub	r0, fp, #320	; 0x140
   11e0c:	bl	150cc <mmk_verify_times@@Base>
   11e10:	cmp	r0, #0
   11e14:	beq	11e5c <main@@Base+0x754>
   11e18:	ldr	r0, [pc, #1476]	; 123e4 <main@@Base+0xcdc>
   11e1c:	add	r1, pc, r0
   11e20:	ldr	r0, [pc, #1472]	; 123e8 <main@@Base+0xce0>
   11e24:	add	r2, pc, r0
   11e28:	ldr	r0, [pc, #1468]	; 123ec <main@@Base+0xce4>
   11e2c:	add	r0, pc, r0
   11e30:	ldr	r3, [pc, #1464]	; 123f0 <main@@Base+0xce8>
   11e34:	ldr	r3, [pc, r3]
   11e38:	ldr	r3, [r3]
   11e3c:	str	r0, [sp, #104]	; 0x68
   11e40:	mov	r0, r3
   11e44:	movw	r3, #57	; 0x39
   11e48:	ldr	ip, [sp, #104]	; 0x68
   11e4c:	str	ip, [sp]
   11e50:	bl	115ac <fprintf@plt>
   11e54:	str	r0, [sp, #100]	; 0x64
   11e58:	bl	115f4 <abort@plt>
   11e5c:	b	11e60 <main@@Base+0x758>
   11e60:	ldr	r0, [pc, #1276]	; 12364 <main@@Base+0xc5c>
   11e64:	ldr	r0, [pc, r0]
   11e68:	bl	13938 <mmk_reset@@Base>
   11e6c:	ldr	r0, [pc, #1256]	; 1235c <main@@Base+0xc54>
   11e70:	add	r0, pc, r0
   11e74:	ldr	lr, [pc, #1252]	; 12360 <main@@Base+0xc58>
   11e78:	str	lr, [fp, #-324]	; 0xfffffebc
   11e7c:	bl	12470 <main@@Base+0xd68>
   11e80:	movw	lr, #0
   11e84:	str	r0, [sp, #96]	; 0x60
   11e88:	mov	r0, lr
   11e8c:	bl	13984 <mmk_matcher_init@@Base>
   11e90:	movw	r0, #0
   11e94:	str	r0, [sp, #336]	; 0x150
   11e98:	ldr	lr, [fp, #-324]	; 0xfffffebc
   11e9c:	str	lr, [sp, #340]	; 0x154
   11ea0:	movw	lr, #1
   11ea4:	str	lr, [sp, #332]	; 0x14c
   11ea8:	add	lr, sp, #332	; 0x14c
   11eac:	str	lr, [sp, #344]	; 0x158
   11eb0:	str	r0, [sp, #348]	; 0x15c
   11eb4:	str	r0, [sp, #352]	; 0x160
   11eb8:	add	r0, sp, #336	; 0x150
   11ebc:	bl	15bec <mmk_when_init@@Base>
   11ec0:	movw	r0, #1
   11ec4:	bl	1154c <fn_ii@plt>
   11ec8:	str	r0, [sp, #92]	; 0x5c
   11ecc:	bl	139f4 <mmk_matcher_term@@Base>
   11ed0:	movw	r0, #1
   11ed4:	bl	1154c <fn_ii@plt>
   11ed8:	cmp	r0, #1
   11edc:	bne	11ef4 <main@@Base+0x7ec>
   11ee0:	bl	115b8 <__errno_location@plt>
   11ee4:	ldr	r0, [r0]
   11ee8:	ldr	lr, [fp, #-324]	; 0xfffffebc
   11eec:	cmp	r0, lr
   11ef0:	beq	11f38 <main@@Base+0x830>
   11ef4:	ldr	r0, [pc, #1132]	; 12368 <main@@Base+0xc60>
   11ef8:	add	r1, pc, r0
   11efc:	ldr	r0, [pc, #1128]	; 1236c <main@@Base+0xc64>
   11f00:	add	r2, pc, r0
   11f04:	ldr	r0, [pc, #1124]	; 12370 <main@@Base+0xc68>
   11f08:	add	r0, pc, r0
   11f0c:	ldr	r3, [pc, #1120]	; 12374 <main@@Base+0xc6c>
   11f10:	ldr	r3, [pc, r3]
   11f14:	ldr	r3, [r3]
   11f18:	str	r0, [sp, #88]	; 0x58
   11f1c:	mov	r0, r3
   11f20:	movw	r3, #64	; 0x40
   11f24:	ldr	ip, [sp, #88]	; 0x58
   11f28:	str	ip, [sp]
   11f2c:	bl	115ac <fprintf@plt>
   11f30:	str	r0, [sp, #84]	; 0x54
   11f34:	bl	115f4 <abort@plt>
   11f38:	b	11f3c <main@@Base+0x834>
   11f3c:	b	11f40 <main@@Base+0x838>
   11f40:	movw	r0, #42	; 0x2a
   11f44:	bl	1154c <fn_ii@plt>
   11f48:	cmp	r0, #0
   11f4c:	beq	11f94 <main@@Base+0x88c>
   11f50:	ldr	r0, [pc, #1056]	; 12378 <main@@Base+0xc70>
   11f54:	add	r1, pc, r0
   11f58:	ldr	r0, [pc, #1052]	; 1237c <main@@Base+0xc74>
   11f5c:	add	r2, pc, r0
   11f60:	ldr	r0, [pc, #1048]	; 12380 <main@@Base+0xc78>
   11f64:	add	r0, pc, r0
   11f68:	ldr	r3, [pc, #1044]	; 12384 <main@@Base+0xc7c>
   11f6c:	ldr	r3, [pc, r3]
   11f70:	ldr	r3, [r3]
   11f74:	str	r0, [sp, #80]	; 0x50
   11f78:	mov	r0, r3
   11f7c:	movw	r3, #65	; 0x41
   11f80:	ldr	ip, [sp, #80]	; 0x50
   11f84:	str	ip, [sp]
   11f88:	bl	115ac <fprintf@plt>
   11f8c:	str	r0, [sp, #76]	; 0x4c
   11f90:	bl	115f4 <abort@plt>
   11f94:	b	11f98 <main@@Base+0x890>
   11f98:	b	11f9c <main@@Base+0x894>
   11f9c:	movw	r0, #1
   11fa0:	bl	13984 <mmk_matcher_init@@Base>
   11fa4:	movw	r0, #0
   11fa8:	str	r0, [sp, #72]	; 0x48
   11fac:	ldr	r1, [sp, #72]	; 0x48
   11fb0:	bl	13a38 <mmk_matcher_add@@Base>
   11fb4:	movw	r0, #0
   11fb8:	str	r0, [sp, #328]	; 0x148
   11fbc:	ldr	r0, [sp, #328]	; 0x148
   11fc0:	bl	1154c <fn_ii@plt>
   11fc4:	str	r0, [sp, #68]	; 0x44
   11fc8:	bl	139f4 <mmk_matcher_term@@Base>
   11fcc:	movw	r0, #1
   11fd0:	str	r0, [sp, #304]	; 0x130
   11fd4:	movw	r0, #0
   11fd8:	str	r0, [sp, #308]	; 0x134
   11fdc:	str	r0, [sp, #312]	; 0x138
   11fe0:	str	r0, [sp, #316]	; 0x13c
   11fe4:	movw	r1, #2
   11fe8:	str	r1, [sp, #320]	; 0x140
   11fec:	str	r0, [sp, #324]	; 0x144
   11ff0:	add	r0, sp, #304	; 0x130
   11ff4:	bl	150cc <mmk_verify_times@@Base>
   11ff8:	cmp	r0, #0
   11ffc:	bne	12044 <main@@Base+0x93c>
   12000:	ldr	r0, [pc, #896]	; 12388 <main@@Base+0xc80>
   12004:	add	r1, pc, r0
   12008:	ldr	r0, [pc, #892]	; 1238c <main@@Base+0xc84>
   1200c:	add	r2, pc, r0
   12010:	ldr	r0, [pc, #888]	; 12390 <main@@Base+0xc88>
   12014:	add	r0, pc, r0
   12018:	ldr	r3, [pc, #884]	; 12394 <main@@Base+0xc8c>
   1201c:	ldr	r3, [pc, r3]
   12020:	ldr	r3, [r3]
   12024:	str	r0, [sp, #64]	; 0x40
   12028:	mov	r0, r3
   1202c:	movw	r3, #67	; 0x43
   12030:	ldr	ip, [sp, #64]	; 0x40
   12034:	str	ip, [sp]
   12038:	bl	115ac <fprintf@plt>
   1203c:	str	r0, [sp, #60]	; 0x3c
   12040:	bl	115f4 <abort@plt>
   12044:	b	12048 <main@@Base+0x940>
   12048:	b	1204c <main@@Base+0x944>
   1204c:	movw	r0, #1
   12050:	bl	13984 <mmk_matcher_init@@Base>
   12054:	movw	r0, #1
   12058:	bl	1154c <fn_ii@plt>
   1205c:	str	r0, [sp, #56]	; 0x38
   12060:	bl	139f4 <mmk_matcher_term@@Base>
   12064:	movw	r0, #1
   12068:	str	r0, [sp, #280]	; 0x118
   1206c:	movw	lr, #0
   12070:	str	lr, [sp, #284]	; 0x11c
   12074:	str	lr, [sp, #288]	; 0x120
   12078:	str	lr, [sp, #292]	; 0x124
   1207c:	str	r0, [sp, #296]	; 0x128
   12080:	str	lr, [sp, #300]	; 0x12c
   12084:	add	r0, sp, #280	; 0x118
   12088:	bl	150cc <mmk_verify_times@@Base>
   1208c:	cmp	r0, #0
   12090:	bne	120d8 <main@@Base+0x9d0>
   12094:	ldr	r0, [pc, #764]	; 12398 <main@@Base+0xc90>
   12098:	add	r1, pc, r0
   1209c:	ldr	r0, [pc, #760]	; 1239c <main@@Base+0xc94>
   120a0:	add	r2, pc, r0
   120a4:	ldr	r0, [pc, #756]	; 123a0 <main@@Base+0xc98>
   120a8:	add	r0, pc, r0
   120ac:	ldr	r3, [pc, #752]	; 123a4 <main@@Base+0xc9c>
   120b0:	ldr	r3, [pc, r3]
   120b4:	ldr	r3, [r3]
   120b8:	str	r0, [sp, #52]	; 0x34
   120bc:	mov	r0, r3
   120c0:	movw	r3, #68	; 0x44
   120c4:	ldr	ip, [sp, #52]	; 0x34
   120c8:	str	ip, [sp]
   120cc:	bl	115ac <fprintf@plt>
   120d0:	str	r0, [sp, #48]	; 0x30
   120d4:	bl	115f4 <abort@plt>
   120d8:	b	120dc <main@@Base+0x9d4>
   120dc:	b	120e0 <main@@Base+0x9d8>
   120e0:	movw	r0, #1
   120e4:	bl	13984 <mmk_matcher_init@@Base>
   120e8:	movw	r0, #42	; 0x2a
   120ec:	bl	1154c <fn_ii@plt>
   120f0:	str	r0, [sp, #44]	; 0x2c
   120f4:	bl	139f4 <mmk_matcher_term@@Base>
   120f8:	movw	r0, #1
   120fc:	str	r0, [sp, #256]	; 0x100
   12100:	movw	lr, #0
   12104:	str	lr, [sp, #260]	; 0x104
   12108:	str	lr, [sp, #264]	; 0x108
   1210c:	str	lr, [sp, #268]	; 0x10c
   12110:	str	r0, [sp, #272]	; 0x110
   12114:	str	lr, [sp, #276]	; 0x114
   12118:	add	r0, sp, #256	; 0x100
   1211c:	bl	150cc <mmk_verify_times@@Base>
   12120:	cmp	r0, #0
   12124:	bne	1216c <main@@Base+0xa64>
   12128:	ldr	r0, [pc, #632]	; 123a8 <main@@Base+0xca0>
   1212c:	add	r1, pc, r0
   12130:	ldr	r0, [pc, #628]	; 123ac <main@@Base+0xca4>
   12134:	add	r2, pc, r0
   12138:	ldr	r0, [pc, #624]	; 123b0 <main@@Base+0xca8>
   1213c:	add	r0, pc, r0
   12140:	ldr	r3, [pc, #620]	; 123b4 <main@@Base+0xcac>
   12144:	ldr	r3, [pc, r3]
   12148:	ldr	r3, [r3]
   1214c:	str	r0, [sp, #40]	; 0x28
   12150:	mov	r0, r3
   12154:	movw	r3, #69	; 0x45
   12158:	ldr	ip, [sp, #40]	; 0x28
   1215c:	str	ip, [sp]
   12160:	bl	115ac <fprintf@plt>
   12164:	str	r0, [sp, #36]	; 0x24
   12168:	bl	115f4 <abort@plt>
   1216c:	b	12170 <main@@Base+0xa68>
   12170:	b	12174 <main@@Base+0xa6c>
   12174:	movw	r0, #1
   12178:	bl	13984 <mmk_matcher_init@@Base>
   1217c:	movw	r0, #12
   12180:	bl	1154c <fn_ii@plt>
   12184:	str	r0, [sp, #32]
   12188:	bl	139f4 <mmk_matcher_term@@Base>
   1218c:	movw	r0, #1
   12190:	str	r0, [sp, #232]	; 0xe8
   12194:	str	r0, [sp, #236]	; 0xec
   12198:	movw	r0, #0
   1219c:	str	r0, [sp, #240]	; 0xf0
   121a0:	str	r0, [sp, #244]	; 0xf4
   121a4:	str	r0, [sp, #248]	; 0xf8
   121a8:	str	r0, [sp, #252]	; 0xfc
   121ac:	add	r0, sp, #232	; 0xe8
   121b0:	bl	150cc <mmk_verify_times@@Base>
   121b4:	cmp	r0, #0
   121b8:	bne	12200 <main@@Base+0xaf8>
   121bc:	ldr	r0, [pc, #500]	; 123b8 <main@@Base+0xcb0>
   121c0:	add	r1, pc, r0
   121c4:	ldr	r0, [pc, #496]	; 123bc <main@@Base+0xcb4>
   121c8:	add	r2, pc, r0
   121cc:	ldr	r0, [pc, #492]	; 123c0 <main@@Base+0xcb8>
   121d0:	add	r0, pc, r0
   121d4:	ldr	r3, [pc, #488]	; 123c4 <main@@Base+0xcbc>
   121d8:	ldr	r3, [pc, r3]
   121dc:	ldr	r3, [r3]
   121e0:	str	r0, [sp, #28]
   121e4:	mov	r0, r3
   121e8:	movw	r3, #70	; 0x46
   121ec:	ldr	ip, [sp, #28]
   121f0:	str	ip, [sp]
   121f4:	bl	115ac <fprintf@plt>
   121f8:	str	r0, [sp, #24]
   121fc:	bl	115f4 <abort@plt>
   12200:	b	12204 <main@@Base+0xafc>
   12204:	ldr	r0, [pc, #448]	; 123cc <main@@Base+0xcc4>
   12208:	ldr	r0, [pc, r0]
   1220c:	bl	13938 <mmk_reset@@Base>
   12210:	ldr	r0, [pc, #432]	; 123c8 <main@@Base+0xcc0>
   12214:	add	r0, pc, r0
   12218:	bl	1249c <main@@Base+0xd94>
   1221c:	movw	lr, #0
   12220:	str	r0, [sp, #20]
   12224:	mov	r0, lr
   12228:	bl	13984 <mmk_matcher_init@@Base>
   1222c:	add	r0, sp, #212	; 0xd4
   12230:	mov	lr, r0
   12234:	vmov.i32	q8, #0	; 0x00000000
   12238:	vst1.32	{d16-d17}, [lr]!
   1223c:	mov	r1, #0
   12240:	str	r1, [lr]
   12244:	movw	r1, #1
   12248:	str	r1, [sp, #208]	; 0xd0
   1224c:	add	r1, sp, #208	; 0xd0
   12250:	str	r1, [sp, #220]	; 0xdc
   12254:	bl	15bec <mmk_when_init@@Base>
   12258:	movw	r0, #1
   1225c:	movw	r1, #42	; 0x2a
   12260:	bl	11558 <fn_ii_va@plt>
   12264:	str	r0, [sp, #16]
   12268:	bl	139f4 <mmk_matcher_term@@Base>
   1226c:	movw	r0, #1
   12270:	movw	r1, #42	; 0x2a
   12274:	bl	11558 <fn_ii_va@plt>
   12278:	cmp	r0, #1
   1227c:	beq	122c4 <main@@Base+0xbbc>
   12280:	ldr	r0, [pc, #328]	; 123d0 <main@@Base+0xcc8>
   12284:	add	r1, pc, r0
   12288:	ldr	r0, [pc, #324]	; 123d4 <main@@Base+0xccc>
   1228c:	add	r2, pc, r0
   12290:	ldr	r0, [pc, #320]	; 123d8 <main@@Base+0xcd0>
   12294:	add	r0, pc, r0
   12298:	ldr	r3, [pc, #316]	; 123dc <main@@Base+0xcd4>
   1229c:	ldr	r3, [pc, r3]
   122a0:	ldr	r3, [r3]
   122a4:	str	r0, [sp, #12]
   122a8:	mov	r0, r3
   122ac:	movw	r3, #77	; 0x4d
   122b0:	ldr	ip, [sp, #12]
   122b4:	str	ip, [sp]
   122b8:	bl	115ac <fprintf@plt>
   122bc:	str	r0, [sp, #8]
   122c0:	bl	115f4 <abort@plt>
   122c4:	b	122c8 <main@@Base+0xbc0>
   122c8:	ldr	r0, [pc, #272]	; 123e0 <main@@Base+0xcd8>
   122cc:	ldr	r0, [pc, r0]
   122d0:	bl	13938 <mmk_reset@@Base>
   122d4:	movw	r0, #0
   122d8:	sub	sp, fp, #8
   122dc:	pop	{r4, r5, fp, pc}
   122e0:	andeq	r5, r1, r0, asr r9
   122e4:	andeq	r4, r0, r4, asr #12
   122e8:			; <UNDEFINED> instruction: 0x000045b2
   122ec:	andeq	r4, r0, r7, asr #11
   122f0:	andeq	r4, r0, pc, lsr #13
   122f4:	andeq	r5, r1, ip, asr #17
   122f8:	andeq	r4, r0, r6, lsr #10
   122fc:	andeq	r4, r0, fp, lsr r5
   12300:	andeq	r4, r0, r3, lsl #11
   12304:	andeq	r5, r1, r0, asr #16
   12308:	andeq	r5, r1, r8, lsr #13
   1230c:	andeq	r4, r0, r2, lsr #6
   12310:	andeq	r4, r0, r7, lsr r3
   12314:	andeq	r4, r0, r8, lsl r4
   12318:	andeq	r5, r1, ip, lsr r6
   1231c:	muleq	r0, r6, r2
   12320:	andeq	r4, r0, fp, lsr #5
   12324:	andeq	r4, r0, r6, lsl r3
   12328:			; <UNDEFINED> instruction: 0x000155b0
   1232c:	andeq	r4, r0, sl, lsl #4
   12330:	andeq	r4, r0, pc, lsl r2
   12334:	andeq	r4, r0, fp, lsr #5
   12338:	andeq	r5, r1, r4, lsr #10
   1233c:	andeq	r4, r0, lr, ror r1
   12340:	muleq	r0, r3, r1
   12344:	ldrdeq	r4, [r0], -fp
   12348:	muleq	r1, r8, r4
   1234c:	strdeq	r4, [r0], -r2
   12350:	andeq	r4, r0, r7, lsl #2
   12354:			; <UNDEFINED> instruction: 0x000041b7
   12358:	andeq	r5, r1, ip, lsl #8
   1235c:	andeq	r4, r0, r4, rrx
   12360:	mrc2	14, 7, pc, cr14, cr14, {7}
   12364:	andeq	r5, r1, r0, lsr #4
   12368:	andeq	r3, r0, sl, ror #28
   1236c:	andeq	r3, r0, pc, ror lr
   12370:	ldrdeq	r3, [r0], -r2
   12374:	andeq	r5, r1, r4, lsl #3
   12378:	andeq	r3, r0, lr, lsl #28
   1237c:	andeq	r3, r0, r3, lsr #28
   12380:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   12384:	andeq	r5, r1, r8, lsr #2
   12388:	andeq	r3, r0, lr, asr sp
   1238c:	andeq	r3, r0, r3, ror sp
   12390:	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
   12394:	andeq	r5, r1, r8, ror r0
   12398:	andeq	r3, r0, sl, asr #25
   1239c:	ldrdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   123a0:	andeq	r3, r0, fp, lsl #29
   123a4:	andeq	r4, r1, r4, ror #31
   123a8:	andeq	r3, r0, r6, lsr ip
   123ac:	andeq	r3, r0, fp, asr #24
   123b0:	andeq	r3, r0, r8, lsl lr
   123b4:	andeq	r4, r1, r0, asr pc
   123b8:	andeq	r3, r0, r2, lsr #23
   123bc:			; <UNDEFINED> instruction: 0x00003bb7
   123c0:	andeq	r3, r0, r6, lsr #27
   123c4:			; <UNDEFINED> instruction: 0x00014ebc
   123c8:	andeq	r3, r0, r4, lsl #27
   123cc:	andeq	r4, r1, r8, lsl #29
   123d0:	ldrdeq	r3, [r0], -lr
   123d4:	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
   123d8:	andeq	r3, r0, sp, lsl #26
   123dc:	strdeq	r4, [r1], -r8
   123e0:	andeq	r4, r1, ip, asr #27
   123e4:	andeq	r3, r0, r6, asr #30
   123e8:	andeq	r3, r0, fp, asr pc
   123ec:	andeq	r4, r0, r4, lsl #1
   123f0:	andeq	r5, r1, r0, ror #4
   123f4:	ldrdeq	r3, [r0], -r6
   123f8:	andeq	r3, r0, fp, ror #31
   123fc:	strdeq	r4, [r0], -r3
   12400:	strdeq	r5, [r1], -r0
   12404:	andeq	r4, r0, r6, rrx
   12408:	andeq	r4, r0, fp, ror r0
   1240c:	andeq	r4, r0, r2, ror #2
   12410:	andeq	r5, r1, r0, lsl #7
   12414:	andeq	r4, r0, r2, lsl #7
   12418:	muleq	r0, r7, r3
   1241c:	andeq	r4, r0, r6, asr #8
   12420:	muleq	r1, ip, r6
   12424:	andeq	r4, r0, lr, lsl #8
   12428:	andeq	r4, r0, r3, lsr #8
   1242c:	andeq	r4, r0, lr, lsr #9
   12430:	andeq	r5, r1, r8, lsr #14
   12434:	muleq	r0, sl, r4
   12438:	andeq	r4, r0, pc, lsr #9
   1243c:	andeq	r4, r0, r9, lsl r5
   12440:			; <UNDEFINED> instruction: 0x000157b4
   12444:	push	{fp, lr}
   12448:	mov	fp, sp
   1244c:	sub	sp, sp, #8
   12450:	ldr	r1, [pc, #20]	; 1246c <main@@Base+0xd64>
   12454:	add	r1, pc, r1
   12458:	str	r0, [sp, #4]
   1245c:	ldr	r0, [sp, #4]
   12460:	bl	13b44 <mmk_mock_create_internal@@Base>
   12464:	mov	sp, fp
   12468:	pop	{fp, pc}
   1246c:	andeq	r0, r0, ip, rrx
   12470:	push	{fp, lr}
   12474:	mov	fp, sp
   12478:	sub	sp, sp, #8
   1247c:	ldr	r1, [pc, #20]	; 12498 <main@@Base+0xd90>
   12480:	add	r1, pc, r1
   12484:	str	r0, [sp, #4]
   12488:	ldr	r0, [sp, #4]
   1248c:	bl	13b44 <mmk_mock_create_internal@@Base>
   12490:	mov	sp, fp
   12494:	pop	{fp, pc}
   12498:	andeq	r0, r0, r8, ror #5
   1249c:	push	{fp, lr}
   124a0:	mov	fp, sp
   124a4:	sub	sp, sp, #8
   124a8:	ldr	r1, [pc, #20]	; 124c4 <main@@Base+0xdbc>
   124ac:	add	r1, pc, r1
   124b0:	str	r0, [sp, #4]
   124b4:	ldr	r0, [sp, #4]
   124b8:	bl	13b44 <mmk_mock_create_internal@@Base>
   124bc:	mov	sp, fp
   124c0:	pop	{fp, pc}
   124c4:	andeq	r0, r0, ip, lsr #17
   124c8:	push	{fp, lr}
   124cc:	mov	fp, sp
   124d0:	sub	sp, sp, #72	; 0x48
   124d4:	b	124d8 <main@@Base+0xdd0>
   124d8:	b	124dc <main@@Base+0xdd4>
   124dc:	b	124e0 <main@@Base+0xdd8>
   124e0:	bl	13a18 <mmk_matcher_ctx@@Base>
   124e4:	str	r0, [fp, #-4]
   124e8:	ldr	r0, [fp, #-4]
   124ec:	movw	lr, #0
   124f0:	cmp	r0, lr
   124f4:	beq	12618 <main@@Base+0xf10>
   124f8:	bl	14d80 <mmk_ctx@@Base>
   124fc:	bl	14ad0 <mmk_stub_context@@Base>
   12500:	str	r0, [fp, #-8]
   12504:	ldr	r0, [fp, #-4]
   12508:	ldr	r0, [r0]
   1250c:	cmp	r0, #0
   12510:	bne	1255c <main@@Base+0xe54>
   12514:	movw	r0, #40	; 0x28
   12518:	bl	15960 <mmk_malloc@@Base>
   1251c:	str	r0, [fp, #-12]
   12520:	ldr	r0, [fp, #-12]
   12524:	add	r0, r0, #8
   12528:	str	r0, [sp, #8]
   1252c:	bl	15c28 <mmk_when_get_result@@Base>
   12530:	ldr	lr, [sp, #8]
   12534:	str	r0, [sp, #4]
   12538:	mov	r0, lr
   1253c:	ldr	r1, [sp, #4]
   12540:	movw	r2, #20
   12544:	bl	11528 <memcpy@plt>
   12548:	b	1254c <main@@Base+0xe44>
   1254c:	ldr	r0, [fp, #-8]
   12550:	ldr	r1, [fp, #-12]
   12554:	bl	15c48 <mmk_when_impl@@Base>
   12558:	b	1260c <main@@Base+0xf04>
   1255c:	ldr	r0, [fp, #-4]
   12560:	ldr	r0, [r0]
   12564:	cmp	r0, #1
   12568:	bne	12608 <main@@Base+0xf00>
   1256c:	movw	r0, #0
   12570:	str	r0, [fp, #-16]
   12574:	ldr	r0, [fp, #-8]
   12578:	bl	13e38 <mmk_mock_params_begin@@Base>
   1257c:	str	r0, [fp, #-20]	; 0xffffffec
   12580:	ldr	r0, [fp, #-20]	; 0xffffffec
   12584:	movw	r1, #0
   12588:	cmp	r0, r1
   1258c:	beq	125c8 <main@@Base+0xec0>
   12590:	ldr	r0, [fp, #-4]
   12594:	str	r0, [fp, #-24]	; 0xffffffe8
   12598:	b	1259c <main@@Base+0xe94>
   1259c:	ldr	r0, [fp, #-20]	; 0xffffffec
   125a0:	ldr	r0, [r0]
   125a4:	ldr	r1, [fp, #-16]
   125a8:	add	r0, r1, r0
   125ac:	str	r0, [fp, #-16]
   125b0:	b	125b4 <main@@Base+0xeac>
   125b4:	ldr	r0, [fp, #-8]
   125b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   125bc:	bl	13e8c <mmk_mock_params_next@@Base>
   125c0:	str	r0, [fp, #-20]	; 0xffffffec
   125c4:	b	12580 <main@@Base+0xe78>
   125c8:	ldr	r0, [fp, #-4]
   125cc:	str	r0, [fp, #-28]	; 0xffffffe4
   125d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125d4:	movw	r1, #0
   125d8:	cmp	r0, r1
   125dc:	beq	12600 <main@@Base+0xef8>
   125e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125e4:	ldr	r0, [r0, #8]
   125e8:	str	r0, [fp, #-32]	; 0xffffffe0
   125ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125f0:	bl	159e4 <mmk_free@@Base>
   125f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   125f8:	str	r0, [fp, #-28]	; 0xffffffe4
   125fc:	b	125d0 <main@@Base+0xec8>
   12600:	ldr	r0, [fp, #-16]
   12604:	bl	15090 <mmk_verify_set_times@@Base>
   12608:	b	1260c <main@@Base+0xf04>
   1260c:	b	12610 <main@@Base+0xf08>
   12610:	b	12614 <main@@Base+0xf0c>
   12614:	b	12768 <main@@Base+0x1060>
   12618:	movw	r0, #0
   1261c:	str	r0, [sp, #24]
   12620:	str	r0, [sp, #28]
   12624:	str	r0, [sp, #32]
   12628:	add	r0, sp, #24
   1262c:	str	r0, [sp, #36]	; 0x24
   12630:	b	12634 <main@@Base+0xf2c>
   12634:	ldr	r0, [sp, #36]	; 0x24
   12638:	movw	r1, #12
   1263c:	bl	15218 <mmk_verify_register_call@@Base>
   12640:	bl	13f08 <mmk_mock_get_params@@Base>
   12644:	str	r0, [sp, #20]
   12648:	ldr	r0, [sp, #20]
   1264c:	movw	r1, #0
   12650:	cmp	r0, r1
   12654:	beq	1275c <main@@Base+0x1054>
   12658:	ldr	r0, [sp, #20]
   1265c:	str	r0, [sp, #16]
   12660:	ldr	r0, [sp, #20]
   12664:	ldr	r0, [r0]
   12668:	str	r0, [sp, #12]
   1266c:	ldr	r0, [sp, #16]
   12670:	ldr	r0, [r0, #12]
   12674:	cmp	r0, #0
   12678:	beq	12694 <main@@Base+0xf8c>
   1267c:	ldr	r0, [sp, #16]
   12680:	ldr	r0, [r0, #12]
   12684:	str	r0, [sp]
   12688:	bl	115b8 <__errno_location@plt>
   1268c:	ldr	lr, [sp]
   12690:	str	lr, [r0]
   12694:	ldr	r0, [sp, #16]
   12698:	ldr	r0, [r0, #20]
   1269c:	movw	r1, #0
   126a0:	cmp	r0, r1
   126a4:	beq	126e4 <main@@Base+0xfdc>
   126a8:	ldr	r0, [sp, #16]
   126ac:	ldr	r0, [r0, #16]
   126b0:	movw	r1, #0
   126b4:	cmp	r0, r1
   126b8:	bne	126e4 <main@@Base+0xfdc>
   126bc:	b	126c0 <main@@Base+0xfb8>
   126c0:	b	126c4 <main@@Base+0xfbc>
   126c4:	b	126c8 <main@@Base+0xfc0>
   126c8:	ldr	r0, [sp, #16]
   126cc:	ldr	r0, [r0, #20]
   126d0:	blx	r0
   126d4:	b	126d8 <main@@Base+0xfd0>
   126d8:	b	126dc <main@@Base+0xfd4>
   126dc:	b	126e0 <main@@Base+0xfd8>
   126e0:	b	12768 <main@@Base+0x1060>
   126e4:	ldr	r0, [sp, #16]
   126e8:	ldr	r0, [r0, #20]
   126ec:	movw	r1, #0
   126f0:	cmp	r0, r1
   126f4:	beq	12730 <main@@Base+0x1028>
   126f8:	ldr	r0, [sp, #16]
   126fc:	ldr	r0, [r0, #16]
   12700:	movw	r1, #0
   12704:	cmp	r0, r1
   12708:	beq	12730 <main@@Base+0x1028>
   1270c:	b	12710 <main@@Base+0x1008>
   12710:	b	12714 <main@@Base+0x100c>
   12714:	ldr	r0, [sp, #16]
   12718:	ldr	r0, [r0, #20]
   1271c:	blx	r0
   12720:	b	12724 <main@@Base+0x101c>
   12724:	b	12728 <main@@Base+0x1020>
   12728:	b	1272c <main@@Base+0x1024>
   1272c:	b	12768 <main@@Base+0x1060>
   12730:	ldr	r0, [sp, #16]
   12734:	ldr	r0, [r0, #16]
   12738:	movw	r1, #0
   1273c:	cmp	r0, r1
   12740:	beq	12750 <main@@Base+0x1048>
   12744:	b	12748 <main@@Base+0x1040>
   12748:	b	1274c <main@@Base+0x1044>
   1274c:	b	12768 <main@@Base+0x1060>
   12750:	b	12754 <main@@Base+0x104c>
   12754:	b	12758 <main@@Base+0x1050>
   12758:	b	12768 <main@@Base+0x1060>
   1275c:	b	12760 <main@@Base+0x1058>
   12760:	b	12764 <main@@Base+0x105c>
   12764:	b	12768 <main@@Base+0x1060>
   12768:	mov	sp, fp
   1276c:	pop	{fp, pc}
   12770:	push	{fp, lr}
   12774:	mov	fp, sp
   12778:	sub	sp, sp, #128	; 0x80
   1277c:	str	r0, [fp, #-8]
   12780:	b	12784 <main@@Base+0x107c>
   12784:	bl	13a18 <mmk_matcher_ctx@@Base>
   12788:	str	r0, [fp, #-12]
   1278c:	ldr	r0, [fp, #-12]
   12790:	movw	lr, #0
   12794:	cmp	r0, lr
   12798:	beq	12a24 <main@@Base+0x131c>
   1279c:	bl	14d80 <mmk_ctx@@Base>
   127a0:	bl	14ad0 <mmk_stub_context@@Base>
   127a4:	str	r0, [fp, #-16]
   127a8:	ldr	r0, [fp, #-12]
   127ac:	ldr	r0, [r0]
   127b0:	cmp	r0, #0
   127b4:	bne	1280c <main@@Base+0x1104>
   127b8:	movw	r0, #44	; 0x2c
   127bc:	bl	15960 <mmk_malloc@@Base>
   127c0:	str	r0, [fp, #-20]	; 0xffffffec
   127c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   127c8:	add	r0, r0, #8
   127cc:	str	r0, [sp, #32]
   127d0:	bl	15c28 <mmk_when_get_result@@Base>
   127d4:	ldr	lr, [sp, #32]
   127d8:	str	r0, [sp, #28]
   127dc:	mov	r0, lr
   127e0:	ldr	r1, [sp, #28]
   127e4:	movw	r2, #20
   127e8:	bl	11528 <memcpy@plt>
   127ec:	ldr	r0, [fp, #-8]
   127f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   127f4:	str	r0, [r1, #40]	; 0x28
   127f8:	b	127fc <main@@Base+0x10f4>
   127fc:	ldr	r0, [fp, #-16]
   12800:	ldr	r1, [fp, #-20]	; 0xffffffec
   12804:	bl	15c48 <mmk_when_impl@@Base>
   12808:	b	12a08 <main@@Base+0x1300>
   1280c:	ldr	r0, [fp, #-12]
   12810:	ldr	r0, [r0]
   12814:	cmp	r0, #1
   12818:	bne	12a04 <main@@Base+0x12fc>
   1281c:	movw	r0, #0
   12820:	str	r0, [fp, #-24]	; 0xffffffe8
   12824:	ldr	r0, [fp, #-16]
   12828:	bl	13e38 <mmk_mock_params_begin@@Base>
   1282c:	str	r0, [fp, #-28]	; 0xffffffe4
   12830:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12834:	movw	r1, #0
   12838:	cmp	r0, r1
   1283c:	beq	129c4 <main@@Base+0x12bc>
   12840:	ldr	r0, [fp, #-12]
   12844:	str	r0, [fp, #-32]	; 0xffffffe0
   12848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1284c:	ldr	r0, [r0, #8]
   12850:	movw	r1, #0
   12854:	cmp	r0, r1
   12858:	beq	1296c <main@@Base+0x1264>
   1285c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12860:	ldr	r0, [r0, #8]
   12864:	str	r0, [fp, #-32]	; 0xffffffe0
   12868:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1286c:	ldr	r0, [r0]
   12870:	cmp	r0, #0
   12874:	bne	1287c <main@@Base+0x1174>
   12878:	b	12968 <main@@Base+0x1260>
   1287c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12880:	ldr	r0, [r0]
   12884:	and	r0, r0, #-2147483648	; 0x80000000
   12888:	cmp	r0, #0
   1288c:	beq	12918 <main@@Base+0x1210>
   12890:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12894:	add	r0, r0, #12
   12898:	sub	r1, fp, #8
   1289c:	movw	r2, #4
   128a0:	bl	15520 <mmk_memcmp@@Base>
   128a4:	str	r0, [fp, #-36]	; 0xffffffdc
   128a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   128ac:	cmp	r0, #0
   128b0:	bne	128cc <main@@Base+0x11c4>
   128b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128b8:	ldr	r0, [r0]
   128bc:	and	r0, r0, #2
   128c0:	cmp	r0, #0
   128c4:	bne	128cc <main@@Base+0x11c4>
   128c8:	b	129ac <main@@Base+0x12a4>
   128cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   128d0:	cmp	r0, #0
   128d4:	bge	128f0 <main@@Base+0x11e8>
   128d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128dc:	ldr	r0, [r0]
   128e0:	and	r0, r0, #4
   128e4:	cmp	r0, #0
   128e8:	bne	128f0 <main@@Base+0x11e8>
   128ec:	b	129ac <main@@Base+0x12a4>
   128f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   128f4:	cmp	r0, #0
   128f8:	ble	12914 <main@@Base+0x120c>
   128fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12900:	ldr	r0, [r0]
   12904:	and	r0, r0, #8
   12908:	cmp	r0, #0
   1290c:	bne	12914 <main@@Base+0x120c>
   12910:	b	129ac <main@@Base+0x12a4>
   12914:	b	12964 <main@@Base+0x125c>
   12918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1291c:	ldr	r0, [r0]
   12920:	cmp	r0, #1
   12924:	bne	12960 <main@@Base+0x1258>
   12928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1292c:	bl	13b2c <mmk_matcher_get_predicate@@Base>
   12930:	str	r0, [fp, #-40]	; 0xffffffd8
   12934:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12938:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1293c:	ldr	lr, [lr, #12]
   12940:	str	r0, [sp, #24]
   12944:	mov	r0, lr
   12948:	ldr	lr, [sp, #24]
   1294c:	blx	lr
   12950:	cmp	r0, #0
   12954:	bne	1295c <main@@Base+0x1254>
   12958:	b	129ac <main@@Base+0x12a4>
   1295c:	b	12960 <main@@Base+0x1258>
   12960:	b	12964 <main@@Base+0x125c>
   12964:	b	12968 <main@@Base+0x1260>
   12968:	b	12990 <main@@Base+0x1288>
   1296c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12970:	add	r0, r0, #12
   12974:	sub	r1, fp, #8
   12978:	movw	r2, #4
   1297c:	bl	15520 <mmk_memcmp@@Base>
   12980:	cmp	r0, #0
   12984:	beq	1298c <main@@Base+0x1284>
   12988:	b	129ac <main@@Base+0x12a4>
   1298c:	b	12990 <main@@Base+0x1288>
   12990:	b	12994 <main@@Base+0x128c>
   12994:	b	12998 <main@@Base+0x1290>
   12998:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1299c:	ldr	r0, [r0]
   129a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   129a4:	add	r0, r1, r0
   129a8:	str	r0, [fp, #-24]	; 0xffffffe8
   129ac:	b	129b0 <main@@Base+0x12a8>
   129b0:	ldr	r0, [fp, #-16]
   129b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129b8:	bl	13e8c <mmk_mock_params_next@@Base>
   129bc:	str	r0, [fp, #-28]	; 0xffffffe4
   129c0:	b	12830 <main@@Base+0x1128>
   129c4:	ldr	r0, [fp, #-12]
   129c8:	str	r0, [fp, #-44]	; 0xffffffd4
   129cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129d0:	movw	r1, #0
   129d4:	cmp	r0, r1
   129d8:	beq	129fc <main@@Base+0x12f4>
   129dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129e0:	ldr	r0, [r0, #8]
   129e4:	str	r0, [fp, #-48]	; 0xffffffd0
   129e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129ec:	bl	159e4 <mmk_free@@Base>
   129f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   129f4:	str	r0, [fp, #-44]	; 0xffffffd4
   129f8:	b	129cc <main@@Base+0x12c4>
   129fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a00:	bl	15090 <mmk_verify_set_times@@Base>
   12a04:	b	12a08 <main@@Base+0x1300>
   12a08:	b	12a0c <main@@Base+0x1304>
   12a0c:	b	12a10 <main@@Base+0x1308>
   12a10:	ldr	r0, [pc, #836]	; 12d5c <main@@Base+0x1654>
   12a14:	add	r0, pc, r0
   12a18:	ldr	r0, [r0]
   12a1c:	str	r0, [fp, #-4]
   12a20:	b	12d48 <main@@Base+0x1640>
   12a24:	movw	r0, #0
   12a28:	str	r0, [sp, #60]	; 0x3c
   12a2c:	str	r0, [sp, #64]	; 0x40
   12a30:	str	r0, [sp, #68]	; 0x44
   12a34:	ldr	r0, [fp, #-8]
   12a38:	str	r0, [sp, #72]	; 0x48
   12a3c:	add	r0, sp, #60	; 0x3c
   12a40:	str	r0, [fp, #-52]	; 0xffffffcc
   12a44:	b	12a48 <main@@Base+0x1340>
   12a48:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12a4c:	movw	r1, #16
   12a50:	bl	15218 <mmk_verify_register_call@@Base>
   12a54:	bl	13f08 <mmk_mock_get_params@@Base>
   12a58:	str	r0, [sp, #56]	; 0x38
   12a5c:	ldr	r0, [sp, #56]	; 0x38
   12a60:	movw	r1, #0
   12a64:	cmp	r0, r1
   12a68:	beq	12d30 <main@@Base+0x1628>
   12a6c:	ldr	r0, [sp, #56]	; 0x38
   12a70:	str	r0, [sp, #52]	; 0x34
   12a74:	ldr	r0, [sp, #56]	; 0x38
   12a78:	ldr	r0, [r0]
   12a7c:	str	r0, [sp, #48]	; 0x30
   12a80:	ldr	r0, [sp, #48]	; 0x30
   12a84:	ldr	r0, [r0, #8]
   12a88:	movw	r1, #0
   12a8c:	cmp	r0, r1
   12a90:	beq	12ba8 <main@@Base+0x14a0>
   12a94:	ldr	r0, [sp, #48]	; 0x30
   12a98:	ldr	r0, [r0, #8]
   12a9c:	str	r0, [sp, #48]	; 0x30
   12aa0:	ldr	r0, [sp, #48]	; 0x30
   12aa4:	ldr	r0, [r0]
   12aa8:	cmp	r0, #0
   12aac:	bne	12ab4 <main@@Base+0x13ac>
   12ab0:	b	12ba4 <main@@Base+0x149c>
   12ab4:	ldr	r0, [sp, #48]	; 0x30
   12ab8:	ldr	r0, [r0]
   12abc:	and	r0, r0, #-2147483648	; 0x80000000
   12ac0:	cmp	r0, #0
   12ac4:	beq	12b58 <main@@Base+0x1450>
   12ac8:	sub	r0, fp, #8
   12acc:	mov	r1, r0
   12ad0:	str	r0, [sp, #20]
   12ad4:	mov	r0, r1
   12ad8:	ldr	r1, [sp, #20]
   12adc:	movw	r2, #4
   12ae0:	bl	15520 <mmk_memcmp@@Base>
   12ae4:	str	r0, [sp, #44]	; 0x2c
   12ae8:	ldr	r0, [sp, #44]	; 0x2c
   12aec:	cmp	r0, #0
   12af0:	bne	12b0c <main@@Base+0x1404>
   12af4:	ldr	r0, [sp, #48]	; 0x30
   12af8:	ldr	r0, [r0]
   12afc:	and	r0, r0, #2
   12b00:	cmp	r0, #0
   12b04:	bne	12b0c <main@@Base+0x1404>
   12b08:	b	12d20 <main@@Base+0x1618>
   12b0c:	ldr	r0, [sp, #44]	; 0x2c
   12b10:	cmp	r0, #0
   12b14:	bge	12b30 <main@@Base+0x1428>
   12b18:	ldr	r0, [sp, #48]	; 0x30
   12b1c:	ldr	r0, [r0]
   12b20:	and	r0, r0, #4
   12b24:	cmp	r0, #0
   12b28:	bne	12b30 <main@@Base+0x1428>
   12b2c:	b	12d20 <main@@Base+0x1618>
   12b30:	ldr	r0, [sp, #44]	; 0x2c
   12b34:	cmp	r0, #0
   12b38:	ble	12b54 <main@@Base+0x144c>
   12b3c:	ldr	r0, [sp, #48]	; 0x30
   12b40:	ldr	r0, [r0]
   12b44:	and	r0, r0, #8
   12b48:	cmp	r0, #0
   12b4c:	bne	12b54 <main@@Base+0x144c>
   12b50:	b	12d20 <main@@Base+0x1618>
   12b54:	b	12ba0 <main@@Base+0x1498>
   12b58:	ldr	r0, [sp, #48]	; 0x30
   12b5c:	ldr	r0, [r0]
   12b60:	cmp	r0, #1
   12b64:	bne	12b9c <main@@Base+0x1494>
   12b68:	ldr	r0, [sp, #48]	; 0x30
   12b6c:	bl	13b2c <mmk_matcher_get_predicate@@Base>
   12b70:	str	r0, [sp, #40]	; 0x28
   12b74:	ldr	r0, [sp, #40]	; 0x28
   12b78:	ldr	lr, [fp, #-8]
   12b7c:	str	r0, [sp, #16]
   12b80:	mov	r0, lr
   12b84:	ldr	lr, [sp, #16]
   12b88:	blx	lr
   12b8c:	cmp	r0, #0
   12b90:	bne	12b98 <main@@Base+0x1490>
   12b94:	b	12d20 <main@@Base+0x1618>
   12b98:	b	12b9c <main@@Base+0x1494>
   12b9c:	b	12ba0 <main@@Base+0x1498>
   12ba0:	b	12ba4 <main@@Base+0x149c>
   12ba4:	b	12bd0 <main@@Base+0x14c8>
   12ba8:	sub	r0, fp, #8
   12bac:	ldr	r1, [sp, #52]	; 0x34
   12bb0:	add	r1, r1, #28
   12bb4:	add	r1, r1, #12
   12bb8:	movw	r2, #4
   12bbc:	bl	15520 <mmk_memcmp@@Base>
   12bc0:	cmp	r0, #0
   12bc4:	beq	12bcc <main@@Base+0x14c4>
   12bc8:	b	12d20 <main@@Base+0x1618>
   12bcc:	b	12bd0 <main@@Base+0x14c8>
   12bd0:	ldr	r0, [sp, #52]	; 0x34
   12bd4:	ldr	r0, [r0, #12]
   12bd8:	cmp	r0, #0
   12bdc:	beq	12bf8 <main@@Base+0x14f0>
   12be0:	ldr	r0, [sp, #52]	; 0x34
   12be4:	ldr	r0, [r0, #12]
   12be8:	str	r0, [sp, #12]
   12bec:	bl	115b8 <__errno_location@plt>
   12bf0:	ldr	lr, [sp, #12]
   12bf4:	str	lr, [r0]
   12bf8:	ldr	r0, [sp, #52]	; 0x34
   12bfc:	ldr	r0, [r0, #20]
   12c00:	movw	r1, #0
   12c04:	cmp	r0, r1
   12c08:	beq	12c64 <main@@Base+0x155c>
   12c0c:	ldr	r0, [sp, #52]	; 0x34
   12c10:	ldr	r0, [r0, #16]
   12c14:	movw	r1, #0
   12c18:	cmp	r0, r1
   12c1c:	bne	12c64 <main@@Base+0x155c>
   12c20:	b	12c24 <main@@Base+0x151c>
   12c24:	b	12c28 <main@@Base+0x1520>
   12c28:	b	12c2c <main@@Base+0x1524>
   12c2c:	ldr	r0, [sp, #52]	; 0x34
   12c30:	ldr	r0, [r0, #20]
   12c34:	ldr	r1, [fp, #-8]
   12c38:	str	r0, [sp, #8]
   12c3c:	mov	r0, r1
   12c40:	ldr	r1, [sp, #8]
   12c44:	blx	r1
   12c48:	str	r0, [sp, #36]	; 0x24
   12c4c:	b	12c50 <main@@Base+0x1548>
   12c50:	b	12c54 <main@@Base+0x154c>
   12c54:	b	12c58 <main@@Base+0x1550>
   12c58:	ldr	r0, [sp, #36]	; 0x24
   12c5c:	str	r0, [fp, #-4]
   12c60:	b	12d48 <main@@Base+0x1640>
   12c64:	ldr	r0, [sp, #52]	; 0x34
   12c68:	ldr	r0, [r0, #20]
   12c6c:	movw	r1, #0
   12c70:	cmp	r0, r1
   12c74:	beq	12cd4 <main@@Base+0x15cc>
   12c78:	ldr	r0, [sp, #52]	; 0x34
   12c7c:	ldr	r0, [r0, #16]
   12c80:	movw	r1, #0
   12c84:	cmp	r0, r1
   12c88:	beq	12cd4 <main@@Base+0x15cc>
   12c8c:	b	12c90 <main@@Base+0x1588>
   12c90:	b	12c94 <main@@Base+0x158c>
   12c94:	ldr	r0, [sp, #52]	; 0x34
   12c98:	ldr	r0, [r0, #20]
   12c9c:	ldr	r1, [fp, #-8]
   12ca0:	str	r0, [sp, #4]
   12ca4:	mov	r0, r1
   12ca8:	ldr	r1, [sp, #4]
   12cac:	blx	r1
   12cb0:	str	r0, [sp]
   12cb4:	b	12cb8 <main@@Base+0x15b0>
   12cb8:	b	12cbc <main@@Base+0x15b4>
   12cbc:	b	12cc0 <main@@Base+0x15b8>
   12cc0:	ldr	r0, [sp, #52]	; 0x34
   12cc4:	ldr	r0, [r0, #16]
   12cc8:	ldr	r0, [r0]
   12ccc:	str	r0, [fp, #-4]
   12cd0:	b	12d48 <main@@Base+0x1640>
   12cd4:	ldr	r0, [sp, #52]	; 0x34
   12cd8:	ldr	r0, [r0, #16]
   12cdc:	movw	r1, #0
   12ce0:	cmp	r0, r1
   12ce4:	beq	12d04 <main@@Base+0x15fc>
   12ce8:	b	12cec <main@@Base+0x15e4>
   12cec:	b	12cf0 <main@@Base+0x15e8>
   12cf0:	ldr	r0, [sp, #52]	; 0x34
   12cf4:	ldr	r0, [r0, #16]
   12cf8:	ldr	r0, [r0]
   12cfc:	str	r0, [fp, #-4]
   12d00:	b	12d48 <main@@Base+0x1640>
   12d04:	b	12d08 <main@@Base+0x1600>
   12d08:	b	12d0c <main@@Base+0x1604>
   12d0c:	ldr	r0, [pc, #68]	; 12d58 <main@@Base+0x1650>
   12d10:	add	r0, pc, r0
   12d14:	ldr	r0, [r0]
   12d18:	str	r0, [fp, #-4]
   12d1c:	b	12d48 <main@@Base+0x1640>
   12d20:	ldr	r0, [sp, #56]	; 0x38
   12d24:	ldr	r0, [r0, #4]
   12d28:	str	r0, [sp, #56]	; 0x38
   12d2c:	b	12a5c <main@@Base+0x1354>
   12d30:	b	12d34 <main@@Base+0x162c>
   12d34:	b	12d38 <main@@Base+0x1630>
   12d38:	ldr	r0, [pc, #20]	; 12d54 <main@@Base+0x164c>
   12d3c:	add	r0, pc, r0
   12d40:	ldr	r0, [r0]
   12d44:	str	r0, [fp, #-4]
   12d48:	ldr	r0, [fp, #-4]
   12d4c:	mov	sp, fp
   12d50:	pop	{fp, pc}
   12d54:	muleq	r1, ip, r3
   12d58:	andeq	r4, r1, r8, asr #7
   12d5c:	andeq	r4, r1, r4, asr #13
   12d60:	sub	sp, sp, #12
   12d64:	push	{r4, r5, fp, lr}
   12d68:	add	fp, sp, #8
   12d6c:	sub	sp, sp, #260	; 0x104
   12d70:	str	r3, [fp, #16]
   12d74:	str	r2, [fp, #12]
   12d78:	str	r1, [fp, #8]
   12d7c:	ldr	r1, [pc, #2348]	; 136b0 <main@@Base+0x1fa8>
   12d80:	add	r1, pc, r1
   12d84:	str	r0, [fp, #-16]
   12d88:	str	r1, [fp, #-20]	; 0xffffffec
   12d8c:	sub	r0, fp, #24
   12d90:	add	r1, fp, #8
   12d94:	str	r1, [r0]
   12d98:	bl	13a18 <mmk_matcher_ctx@@Base>
   12d9c:	str	r0, [fp, #-32]	; 0xffffffe0
   12da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12da4:	movw	r1, #0
   12da8:	cmp	r0, r1
   12dac:	beq	132ec <main@@Base+0x1be4>
   12db0:	bl	14d80 <mmk_ctx@@Base>
   12db4:	bl	14ad0 <mmk_stub_context@@Base>
   12db8:	str	r0, [fp, #-36]	; 0xffffffdc
   12dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dc0:	ldr	r0, [r0]
   12dc4:	cmp	r0, #0
   12dc8:	bne	12e94 <main@@Base+0x178c>
   12dcc:	movw	r0, #44	; 0x2c
   12dd0:	bl	15960 <mmk_malloc@@Base>
   12dd4:	str	r0, [fp, #-40]	; 0xffffffd8
   12dd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ddc:	add	r0, r0, #8
   12de0:	str	r0, [sp, #96]	; 0x60
   12de4:	bl	15c28 <mmk_when_get_result@@Base>
   12de8:	ldr	lr, [sp, #96]	; 0x60
   12dec:	str	r0, [sp, #92]	; 0x5c
   12df0:	mov	r0, lr
   12df4:	ldr	r1, [sp, #92]	; 0x5c
   12df8:	movw	r2, #20
   12dfc:	bl	11528 <memcpy@plt>
   12e00:	ldr	r0, [fp, #-16]
   12e04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e08:	str	r0, [r1, #40]	; 0x28
   12e0c:	mov	r0, #0
   12e10:	str	r0, [fp, #-44]	; 0xffffffd4
   12e14:	str	r0, [fp, #-48]	; 0xffffffd0
   12e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e1c:	str	r0, [fp, #-28]	; 0xffffffe4
   12e20:	ldr	r0, [fp, #-20]	; 0xffffffec
   12e24:	ldr	r1, [fp, #-16]
   12e28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12e2c:	sub	r3, fp, #44	; 0x2c
   12e30:	sub	ip, fp, #48	; 0x30
   12e34:	str	r0, [sp, #88]	; 0x58
   12e38:	mov	r0, r1
   12e3c:	mov	r1, r2
   12e40:	mov	r2, r3
   12e44:	mov	r3, ip
   12e48:	ldr	ip, [sp, #88]	; 0x58
   12e4c:	blx	ip
   12e50:	str	r0, [fp, #-52]	; 0xffffffcc
   12e54:	sub	r0, fp, #28
   12e58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12e5c:	cmp	r1, #0
   12e60:	str	r0, [sp, #84]	; 0x54
   12e64:	beq	12e80 <main@@Base+0x1778>
   12e68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e70:	str	r0, [r1, #32]
   12e74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12e78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e7c:	str	r0, [r1, #36]	; 0x24
   12e80:	b	12e84 <main@@Base+0x177c>
   12e84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12e88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e8c:	bl	15c48 <mmk_when_impl@@Base>
   12e90:	b	132d0 <main@@Base+0x1bc8>
   12e94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e98:	ldr	r0, [r0]
   12e9c:	cmp	r0, #1
   12ea0:	bne	132cc <main@@Base+0x1bc4>
   12ea4:	movw	r0, #0
   12ea8:	str	r0, [fp, #-56]	; 0xffffffc8
   12eac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12eb0:	bl	13e38 <mmk_mock_params_begin@@Base>
   12eb4:	str	r0, [fp, #-60]	; 0xffffffc4
   12eb8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12ebc:	movw	r1, #0
   12ec0:	cmp	r0, r1
   12ec4:	beq	1328c <main@@Base+0x1b84>
   12ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ecc:	str	r0, [fp, #-64]	; 0xffffffc0
   12ed0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12ed4:	ldr	r0, [r0, #8]
   12ed8:	movw	r1, #0
   12edc:	cmp	r0, r1
   12ee0:	beq	12ff4 <main@@Base+0x18ec>
   12ee4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12ee8:	ldr	r0, [r0, #8]
   12eec:	str	r0, [fp, #-64]	; 0xffffffc0
   12ef0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12ef4:	ldr	r0, [r0]
   12ef8:	cmp	r0, #0
   12efc:	bne	12f04 <main@@Base+0x17fc>
   12f00:	b	12ff0 <main@@Base+0x18e8>
   12f04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12f08:	ldr	r0, [r0]
   12f0c:	and	r0, r0, #-2147483648	; 0x80000000
   12f10:	cmp	r0, #0
   12f14:	beq	12fa0 <main@@Base+0x1898>
   12f18:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12f1c:	add	r0, r0, #12
   12f20:	sub	r1, fp, #16
   12f24:	movw	r2, #4
   12f28:	bl	15520 <mmk_memcmp@@Base>
   12f2c:	str	r0, [fp, #-68]	; 0xffffffbc
   12f30:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12f34:	cmp	r0, #0
   12f38:	bne	12f54 <main@@Base+0x184c>
   12f3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12f40:	ldr	r0, [r0]
   12f44:	and	r0, r0, #2
   12f48:	cmp	r0, #0
   12f4c:	bne	12f54 <main@@Base+0x184c>
   12f50:	b	13274 <main@@Base+0x1b6c>
   12f54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12f58:	cmp	r0, #0
   12f5c:	bge	12f78 <main@@Base+0x1870>
   12f60:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12f64:	ldr	r0, [r0]
   12f68:	and	r0, r0, #4
   12f6c:	cmp	r0, #0
   12f70:	bne	12f78 <main@@Base+0x1870>
   12f74:	b	13274 <main@@Base+0x1b6c>
   12f78:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12f7c:	cmp	r0, #0
   12f80:	ble	12f9c <main@@Base+0x1894>
   12f84:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12f88:	ldr	r0, [r0]
   12f8c:	and	r0, r0, #8
   12f90:	cmp	r0, #0
   12f94:	bne	12f9c <main@@Base+0x1894>
   12f98:	b	13274 <main@@Base+0x1b6c>
   12f9c:	b	12fec <main@@Base+0x18e4>
   12fa0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12fa4:	ldr	r0, [r0]
   12fa8:	cmp	r0, #1
   12fac:	bne	12fe8 <main@@Base+0x18e0>
   12fb0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12fb4:	bl	13b2c <mmk_matcher_get_predicate@@Base>
   12fb8:	str	r0, [fp, #-72]	; 0xffffffb8
   12fbc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12fc0:	ldr	lr, [fp, #-60]	; 0xffffffc4
   12fc4:	ldr	lr, [lr, #12]
   12fc8:	str	r0, [sp, #80]	; 0x50
   12fcc:	mov	r0, lr
   12fd0:	ldr	lr, [sp, #80]	; 0x50
   12fd4:	blx	lr
   12fd8:	cmp	r0, #0
   12fdc:	bne	12fe4 <main@@Base+0x18dc>
   12fe0:	b	13274 <main@@Base+0x1b6c>
   12fe4:	b	12fe8 <main@@Base+0x18e0>
   12fe8:	b	12fec <main@@Base+0x18e4>
   12fec:	b	12ff0 <main@@Base+0x18e8>
   12ff0:	b	13018 <main@@Base+0x1910>
   12ff4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12ff8:	add	r0, r0, #12
   12ffc:	sub	r1, fp, #16
   13000:	movw	r2, #4
   13004:	bl	15520 <mmk_memcmp@@Base>
   13008:	cmp	r0, #0
   1300c:	beq	13014 <main@@Base+0x190c>
   13010:	b	13274 <main@@Base+0x1b6c>
   13014:	b	13018 <main@@Base+0x1910>
   13018:	b	1301c <main@@Base+0x1914>
   1301c:	mov	r0, #0
   13020:	str	r0, [fp, #-76]	; 0xffffffb4
   13024:	str	r0, [fp, #-80]	; 0xffffffb0
   13028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1302c:	str	r0, [fp, #-28]	; 0xffffffe4
   13030:	ldr	r0, [fp, #-20]	; 0xffffffec
   13034:	ldr	r1, [fp, #-16]
   13038:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1303c:	sub	r3, fp, #76	; 0x4c
   13040:	sub	ip, fp, #80	; 0x50
   13044:	str	r0, [sp, #76]	; 0x4c
   13048:	mov	r0, r1
   1304c:	mov	r1, r2
   13050:	mov	r2, r3
   13054:	mov	r3, ip
   13058:	ldr	ip, [sp, #76]	; 0x4c
   1305c:	blx	ip
   13060:	str	r0, [fp, #-84]	; 0xffffffac
   13064:	sub	r0, fp, #28
   13068:	ldr	r1, [fp, #-84]	; 0xffffffac
   1306c:	cmp	r1, #0
   13070:	str	r0, [sp, #72]	; 0x48
   13074:	beq	1308c <main@@Base+0x1984>
   13078:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1307c:	ldr	r0, [r0, #4]
   13080:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13084:	cmp	r0, r1
   13088:	beq	13090 <main@@Base+0x1988>
   1308c:	b	13274 <main@@Base+0x1b6c>
   13090:	movw	r0, #0
   13094:	str	r0, [fp, #-88]	; 0xffffffa8
   13098:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1309c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   130a0:	cmp	r0, r1
   130a4:	bcs	13258 <main@@Base+0x1b50>
   130a8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   130ac:	ldr	r0, [r0, #8]
   130b0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   130b4:	ldr	r0, [r0, r1, lsl #2]
   130b8:	str	r0, [fp, #-92]	; 0xffffffa4
   130bc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   130c0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   130c4:	add	r0, r0, r1, lsl #2
   130c8:	ldr	r0, [r0]
   130cc:	str	r0, [fp, #-96]	; 0xffffffa0
   130d0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   130d4:	ldr	r0, [r0]
   130d8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   130dc:	ldr	r1, [r1]
   130e0:	cmp	r0, r1
   130e4:	beq	130ec <main@@Base+0x19e4>
   130e8:	b	13274 <main@@Base+0x1b6c>
   130ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   130f0:	ldr	r0, [r0, #8]
   130f4:	movw	r1, #0
   130f8:	cmp	r0, r1
   130fc:	beq	13214 <main@@Base+0x1b0c>
   13100:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13104:	ldr	r0, [r0, #8]
   13108:	str	r0, [fp, #-64]	; 0xffffffc0
   1310c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13110:	ldr	r0, [r0]
   13114:	cmp	r0, #0
   13118:	bne	13120 <main@@Base+0x1a18>
   1311c:	b	13210 <main@@Base+0x1b08>
   13120:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13124:	ldr	r0, [r0]
   13128:	and	r0, r0, #-2147483648	; 0x80000000
   1312c:	cmp	r0, #0
   13130:	beq	131c4 <main@@Base+0x1abc>
   13134:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13138:	add	r0, r0, #4
   1313c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   13140:	add	r1, r1, #4
   13144:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13148:	ldr	r2, [r2]
   1314c:	bl	15520 <mmk_memcmp@@Base>
   13150:	str	r0, [fp, #-100]	; 0xffffff9c
   13154:	ldr	r0, [fp, #-100]	; 0xffffff9c
   13158:	cmp	r0, #0
   1315c:	bne	13178 <main@@Base+0x1a70>
   13160:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13164:	ldr	r0, [r0]
   13168:	and	r0, r0, #2
   1316c:	cmp	r0, #0
   13170:	bne	13178 <main@@Base+0x1a70>
   13174:	b	13274 <main@@Base+0x1b6c>
   13178:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1317c:	cmp	r0, #0
   13180:	bge	1319c <main@@Base+0x1a94>
   13184:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13188:	ldr	r0, [r0]
   1318c:	and	r0, r0, #4
   13190:	cmp	r0, #0
   13194:	bne	1319c <main@@Base+0x1a94>
   13198:	b	13274 <main@@Base+0x1b6c>
   1319c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   131a0:	cmp	r0, #0
   131a4:	ble	131c0 <main@@Base+0x1ab8>
   131a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   131ac:	ldr	r0, [r0]
   131b0:	and	r0, r0, #8
   131b4:	cmp	r0, #0
   131b8:	bne	131c0 <main@@Base+0x1ab8>
   131bc:	b	13274 <main@@Base+0x1b6c>
   131c0:	b	1320c <main@@Base+0x1b04>
   131c4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   131c8:	ldr	r0, [r0]
   131cc:	cmp	r0, #1
   131d0:	bne	13208 <main@@Base+0x1b00>
   131d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   131d8:	bl	13b2c <mmk_matcher_get_predicate@@Base>
   131dc:	str	r0, [fp, #-104]	; 0xffffff98
   131e0:	ldr	r0, [fp, #-104]	; 0xffffff98
   131e4:	ldr	lr, [fp, #-92]	; 0xffffffa4
   131e8:	str	r0, [sp, #68]	; 0x44
   131ec:	mov	r0, lr
   131f0:	ldr	lr, [sp, #68]	; 0x44
   131f4:	blx	lr
   131f8:	cmp	r0, #0
   131fc:	bne	13204 <main@@Base+0x1afc>
   13200:	b	13274 <main@@Base+0x1b6c>
   13204:	b	13208 <main@@Base+0x1b00>
   13208:	b	1320c <main@@Base+0x1b04>
   1320c:	b	13210 <main@@Base+0x1b08>
   13210:	b	13240 <main@@Base+0x1b38>
   13214:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13218:	add	r0, r0, #4
   1321c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   13220:	add	r1, r1, #4
   13224:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13228:	ldr	r2, [r2]
   1322c:	bl	15520 <mmk_memcmp@@Base>
   13230:	cmp	r0, #0
   13234:	beq	1323c <main@@Base+0x1b34>
   13238:	b	13274 <main@@Base+0x1b6c>
   1323c:	b	13240 <main@@Base+0x1b38>
   13240:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13244:	bl	159e4 <mmk_free@@Base>
   13248:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1324c:	add	r0, r0, #1
   13250:	str	r0, [fp, #-88]	; 0xffffffa8
   13254:	b	13098 <main@@Base+0x1990>
   13258:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1325c:	bl	159e4 <mmk_free@@Base>
   13260:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13264:	ldr	r0, [r0]
   13268:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1326c:	add	r0, r1, r0
   13270:	str	r0, [fp, #-56]	; 0xffffffc8
   13274:	b	13278 <main@@Base+0x1b70>
   13278:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1327c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13280:	bl	13e8c <mmk_mock_params_next@@Base>
   13284:	str	r0, [fp, #-60]	; 0xffffffc4
   13288:	b	12eb8 <main@@Base+0x17b0>
   1328c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13290:	str	r0, [fp, #-108]	; 0xffffff94
   13294:	ldr	r0, [fp, #-108]	; 0xffffff94
   13298:	movw	r1, #0
   1329c:	cmp	r0, r1
   132a0:	beq	132c4 <main@@Base+0x1bbc>
   132a4:	ldr	r0, [fp, #-108]	; 0xffffff94
   132a8:	ldr	r0, [r0, #8]
   132ac:	str	r0, [fp, #-112]	; 0xffffff90
   132b0:	ldr	r0, [fp, #-108]	; 0xffffff94
   132b4:	bl	159e4 <mmk_free@@Base>
   132b8:	ldr	r0, [fp, #-112]	; 0xffffff90
   132bc:	str	r0, [fp, #-108]	; 0xffffff94
   132c0:	b	13294 <main@@Base+0x1b8c>
   132c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   132c8:	bl	15090 <mmk_verify_set_times@@Base>
   132cc:	b	132d0 <main@@Base+0x1bc8>
   132d0:	ldr	r0, [pc, #996]	; 136bc <main@@Base+0x1fb4>
   132d4:	add	r0, pc, r0
   132d8:	sub	r1, fp, #24
   132dc:	ldr	r0, [r0]
   132e0:	str	r0, [fp, #-12]
   132e4:	str	r1, [sp, #64]	; 0x40
   132e8:	b	1369c <main@@Base+0x1f94>
   132ec:	movw	r0, #0
   132f0:	str	r0, [fp, #-132]	; 0xffffff7c
   132f4:	str	r0, [fp, #-128]	; 0xffffff80
   132f8:	str	r0, [fp, #-124]	; 0xffffff84
   132fc:	ldr	r0, [fp, #-16]
   13300:	str	r0, [fp, #-120]	; 0xffffff88
   13304:	sub	r0, fp, #132	; 0x84
   13308:	str	r0, [fp, #-116]	; 0xffffff8c
   1330c:	mov	r0, #0
   13310:	str	r0, [sp, #132]	; 0x84
   13314:	str	r0, [sp, #128]	; 0x80
   13318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1331c:	str	r0, [fp, #-28]	; 0xffffffe4
   13320:	ldr	r0, [fp, #-20]	; 0xffffffec
   13324:	ldr	r1, [fp, #-16]
   13328:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1332c:	add	r3, sp, #132	; 0x84
   13330:	add	ip, sp, #128	; 0x80
   13334:	str	r0, [sp, #60]	; 0x3c
   13338:	mov	r0, r1
   1333c:	mov	r1, r2
   13340:	mov	r2, r3
   13344:	mov	r3, ip
   13348:	ldr	ip, [sp, #60]	; 0x3c
   1334c:	blx	ip
   13350:	str	r0, [sp, #124]	; 0x7c
   13354:	sub	r0, fp, #28
   13358:	ldr	r1, [sp, #124]	; 0x7c
   1335c:	cmp	r1, #0
   13360:	str	r0, [sp, #56]	; 0x38
   13364:	beq	13380 <main@@Base+0x1c78>
   13368:	ldr	r0, [sp, #132]	; 0x84
   1336c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   13370:	str	r0, [r1, #4]
   13374:	ldr	r0, [sp, #128]	; 0x80
   13378:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1337c:	str	r0, [r1, #8]
   13380:	b	13384 <main@@Base+0x1c7c>
   13384:	ldr	r0, [fp, #-116]	; 0xffffff8c
   13388:	movw	r1, #16
   1338c:	bl	15218 <mmk_verify_register_call@@Base>
   13390:	bl	13f08 <mmk_mock_get_params@@Base>
   13394:	str	r0, [sp, #120]	; 0x78
   13398:	ldr	r0, [sp, #120]	; 0x78
   1339c:	movw	r1, #0
   133a0:	cmp	r0, r1
   133a4:	beq	13684 <main@@Base+0x1f7c>
   133a8:	ldr	r0, [sp, #120]	; 0x78
   133ac:	str	r0, [sp, #116]	; 0x74
   133b0:	ldr	r0, [sp, #120]	; 0x78
   133b4:	ldr	r0, [r0]
   133b8:	str	r0, [sp, #112]	; 0x70
   133bc:	ldr	r0, [sp, #112]	; 0x70
   133c0:	ldr	r0, [r0, #8]
   133c4:	movw	r1, #0
   133c8:	cmp	r0, r1
   133cc:	beq	134e4 <main@@Base+0x1ddc>
   133d0:	ldr	r0, [sp, #112]	; 0x70
   133d4:	ldr	r0, [r0, #8]
   133d8:	str	r0, [sp, #112]	; 0x70
   133dc:	ldr	r0, [sp, #112]	; 0x70
   133e0:	ldr	r0, [r0]
   133e4:	cmp	r0, #0
   133e8:	bne	133f0 <main@@Base+0x1ce8>
   133ec:	b	134e0 <main@@Base+0x1dd8>
   133f0:	ldr	r0, [sp, #112]	; 0x70
   133f4:	ldr	r0, [r0]
   133f8:	and	r0, r0, #-2147483648	; 0x80000000
   133fc:	cmp	r0, #0
   13400:	beq	13494 <main@@Base+0x1d8c>
   13404:	sub	r0, fp, #16
   13408:	mov	r1, r0
   1340c:	str	r0, [sp, #52]	; 0x34
   13410:	mov	r0, r1
   13414:	ldr	r1, [sp, #52]	; 0x34
   13418:	movw	r2, #4
   1341c:	bl	15520 <mmk_memcmp@@Base>
   13420:	str	r0, [sp, #108]	; 0x6c
   13424:	ldr	r0, [sp, #108]	; 0x6c
   13428:	cmp	r0, #0
   1342c:	bne	13448 <main@@Base+0x1d40>
   13430:	ldr	r0, [sp, #112]	; 0x70
   13434:	ldr	r0, [r0]
   13438:	and	r0, r0, #2
   1343c:	cmp	r0, #0
   13440:	bne	13448 <main@@Base+0x1d40>
   13444:	b	13674 <main@@Base+0x1f6c>
   13448:	ldr	r0, [sp, #108]	; 0x6c
   1344c:	cmp	r0, #0
   13450:	bge	1346c <main@@Base+0x1d64>
   13454:	ldr	r0, [sp, #112]	; 0x70
   13458:	ldr	r0, [r0]
   1345c:	and	r0, r0, #4
   13460:	cmp	r0, #0
   13464:	bne	1346c <main@@Base+0x1d64>
   13468:	b	13674 <main@@Base+0x1f6c>
   1346c:	ldr	r0, [sp, #108]	; 0x6c
   13470:	cmp	r0, #0
   13474:	ble	13490 <main@@Base+0x1d88>
   13478:	ldr	r0, [sp, #112]	; 0x70
   1347c:	ldr	r0, [r0]
   13480:	and	r0, r0, #8
   13484:	cmp	r0, #0
   13488:	bne	13490 <main@@Base+0x1d88>
   1348c:	b	13674 <main@@Base+0x1f6c>
   13490:	b	134dc <main@@Base+0x1dd4>
   13494:	ldr	r0, [sp, #112]	; 0x70
   13498:	ldr	r0, [r0]
   1349c:	cmp	r0, #1
   134a0:	bne	134d8 <main@@Base+0x1dd0>
   134a4:	ldr	r0, [sp, #112]	; 0x70
   134a8:	bl	13b2c <mmk_matcher_get_predicate@@Base>
   134ac:	str	r0, [sp, #104]	; 0x68
   134b0:	ldr	r0, [sp, #104]	; 0x68
   134b4:	ldr	lr, [fp, #-16]
   134b8:	str	r0, [sp, #48]	; 0x30
   134bc:	mov	r0, lr
   134c0:	ldr	lr, [sp, #48]	; 0x30
   134c4:	blx	lr
   134c8:	cmp	r0, #0
   134cc:	bne	134d4 <main@@Base+0x1dcc>
   134d0:	b	13674 <main@@Base+0x1f6c>
   134d4:	b	134d8 <main@@Base+0x1dd0>
   134d8:	b	134dc <main@@Base+0x1dd4>
   134dc:	b	134e0 <main@@Base+0x1dd8>
   134e0:	b	1350c <main@@Base+0x1e04>
   134e4:	sub	r0, fp, #16
   134e8:	ldr	r1, [sp, #116]	; 0x74
   134ec:	add	r1, r1, #28
   134f0:	add	r1, r1, #12
   134f4:	movw	r2, #4
   134f8:	bl	15520 <mmk_memcmp@@Base>
   134fc:	cmp	r0, #0
   13500:	beq	13508 <main@@Base+0x1e00>
   13504:	b	13674 <main@@Base+0x1f6c>
   13508:	b	1350c <main@@Base+0x1e04>
   1350c:	ldr	r0, [sp, #116]	; 0x74
   13510:	ldr	r0, [r0, #12]
   13514:	cmp	r0, #0
   13518:	beq	13534 <main@@Base+0x1e2c>
   1351c:	ldr	r0, [sp, #116]	; 0x74
   13520:	ldr	r0, [r0, #12]
   13524:	str	r0, [sp, #44]	; 0x2c
   13528:	bl	115b8 <__errno_location@plt>
   1352c:	ldr	lr, [sp, #44]	; 0x2c
   13530:	str	lr, [r0]
   13534:	ldr	r0, [sp, #116]	; 0x74
   13538:	ldr	r0, [r0, #20]
   1353c:	movw	r1, #0
   13540:	cmp	r0, r1
   13544:	beq	135ac <main@@Base+0x1ea4>
   13548:	ldr	r0, [sp, #116]	; 0x74
   1354c:	ldr	r0, [r0, #16]
   13550:	movw	r1, #0
   13554:	cmp	r0, r1
   13558:	bne	135ac <main@@Base+0x1ea4>
   1355c:	b	13560 <main@@Base+0x1e58>
   13560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13564:	str	r0, [fp, #-28]	; 0xffffffe4
   13568:	ldr	r0, [sp, #116]	; 0x74
   1356c:	ldr	r0, [r0, #20]
   13570:	ldr	r1, [fp, #-16]
   13574:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13578:	str	r0, [sp, #40]	; 0x28
   1357c:	mov	r0, r1
   13580:	mov	r1, r2
   13584:	ldr	r2, [sp, #40]	; 0x28
   13588:	blx	r2
   1358c:	str	r0, [sp, #100]	; 0x64
   13590:	sub	r0, fp, #28
   13594:	sub	r1, fp, #24
   13598:	ldr	r2, [sp, #100]	; 0x64
   1359c:	str	r2, [fp, #-12]
   135a0:	str	r0, [sp, #36]	; 0x24
   135a4:	str	r1, [sp, #32]
   135a8:	b	1369c <main@@Base+0x1f94>
   135ac:	ldr	r0, [sp, #116]	; 0x74
   135b0:	ldr	r0, [r0, #20]
   135b4:	movw	r1, #0
   135b8:	cmp	r0, r1
   135bc:	beq	13628 <main@@Base+0x1f20>
   135c0:	ldr	r0, [sp, #116]	; 0x74
   135c4:	ldr	r0, [r0, #16]
   135c8:	movw	r1, #0
   135cc:	cmp	r0, r1
   135d0:	beq	13628 <main@@Base+0x1f20>
   135d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135d8:	str	r0, [fp, #-28]	; 0xffffffe4
   135dc:	ldr	r0, [sp, #116]	; 0x74
   135e0:	ldr	r0, [r0, #20]
   135e4:	ldr	r1, [fp, #-16]
   135e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   135ec:	str	r0, [sp, #28]
   135f0:	mov	r0, r1
   135f4:	mov	r1, r2
   135f8:	ldr	r2, [sp, #28]
   135fc:	blx	r2
   13600:	sub	r1, fp, #28
   13604:	sub	r2, fp, #24
   13608:	ldr	lr, [sp, #116]	; 0x74
   1360c:	ldr	lr, [lr, #16]
   13610:	ldr	lr, [lr]
   13614:	str	lr, [fp, #-12]
   13618:	str	r0, [sp, #24]
   1361c:	str	r1, [sp, #20]
   13620:	str	r2, [sp, #16]
   13624:	b	1369c <main@@Base+0x1f94>
   13628:	ldr	r0, [sp, #116]	; 0x74
   1362c:	ldr	r0, [r0, #16]
   13630:	movw	r1, #0
   13634:	cmp	r0, r1
   13638:	beq	13658 <main@@Base+0x1f50>
   1363c:	sub	r0, fp, #24
   13640:	ldr	r1, [sp, #116]	; 0x74
   13644:	ldr	r1, [r1, #16]
   13648:	ldr	r1, [r1]
   1364c:	str	r1, [fp, #-12]
   13650:	str	r0, [sp, #12]
   13654:	b	1369c <main@@Base+0x1f94>
   13658:	ldr	r0, [pc, #88]	; 136b8 <main@@Base+0x1fb0>
   1365c:	add	r0, pc, r0
   13660:	sub	r1, fp, #24
   13664:	ldr	r0, [r0]
   13668:	str	r0, [fp, #-12]
   1366c:	str	r1, [sp, #8]
   13670:	b	1369c <main@@Base+0x1f94>
   13674:	ldr	r0, [sp, #120]	; 0x78
   13678:	ldr	r0, [r0, #4]
   1367c:	str	r0, [sp, #120]	; 0x78
   13680:	b	13398 <main@@Base+0x1c90>
   13684:	ldr	r0, [pc, #40]	; 136b4 <main@@Base+0x1fac>
   13688:	add	r0, pc, r0
   1368c:	sub	r1, fp, #24
   13690:	ldr	r0, [r0]
   13694:	str	r0, [fp, #-12]
   13698:	str	r1, [sp, #4]
   1369c:	ldr	r0, [fp, #-12]
   136a0:	sub	sp, fp, #8
   136a4:	pop	{r4, r5, fp, lr}
   136a8:	add	sp, sp, #12
   136ac:	bx	lr
   136b0:	andeq	r0, r0, r8, lsr r9
   136b4:	andeq	r3, r1, r4, asr sl
   136b8:	andeq	r3, r1, r0, lsl #21
   136bc:	andeq	r3, r1, r8, lsl #28
   136c0:	push	{fp, lr}
   136c4:	mov	fp, sp
   136c8:	sub	sp, sp, #40	; 0x28
   136cc:	str	r1, [fp, #-8]
   136d0:	str	r0, [fp, #-12]
   136d4:	str	r2, [fp, #-16]
   136d8:	str	r3, [sp, #20]
   136dc:	ldr	r0, [fp, #-12]
   136e0:	cmp	r0, #0
   136e4:	bgt	136f4 <main@@Base+0x1fec>
   136e8:	movw	r0, #0
   136ec:	str	r0, [fp, #-4]
   136f0:	b	137b4 <main@@Base+0x20ac>
   136f4:	ldr	r0, [fp, #-12]
   136f8:	lsl	r0, r0, #2
   136fc:	bl	15960 <mmk_malloc@@Base>
   13700:	str	r0, [sp, #16]
   13704:	movw	r0, #0
   13708:	str	r0, [sp, #12]
   1370c:	ldr	r0, [sp, #12]
   13710:	ldr	r1, [fp, #-12]
   13714:	cmp	r0, r1
   13718:	bge	13794 <main@@Base+0x208c>
   1371c:	b	13720 <main@@Base+0x2018>
   13720:	mov	r0, #8
   13724:	bl	15960 <mmk_malloc@@Base>
   13728:	ldr	lr, [sp, #16]
   1372c:	ldr	r1, [sp, #12]
   13730:	str	r0, [lr, r1, lsl #2]
   13734:	ldr	r0, [sp, #16]
   13738:	ldr	r1, [sp, #12]
   1373c:	ldr	r0, [r0, r1, lsl #2]
   13740:	mov	r1, #4
   13744:	str	r1, [r0]
   13748:	ldr	r0, [fp, #-8]
   1374c:	add	r1, r0, #4
   13750:	str	r1, [fp, #-8]
   13754:	ldr	r0, [r0]
   13758:	str	r0, [sp, #8]
   1375c:	ldr	r0, [sp, #16]
   13760:	ldr	r1, [sp, #12]
   13764:	add	r0, r0, r1, lsl #2
   13768:	ldr	r0, [r0]
   1376c:	add	r0, r0, #4
   13770:	add	r1, sp, #8
   13774:	movw	r2, #4
   13778:	bl	155d8 <mmk_memcpy@@Base>
   1377c:	str	r0, [sp, #4]
   13780:	b	13784 <main@@Base+0x207c>
   13784:	ldr	r0, [sp, #12]
   13788:	add	r0, r0, #1
   1378c:	str	r0, [sp, #12]
   13790:	b	1370c <main@@Base+0x2004>
   13794:	ldr	r0, [fp, #-12]
   13798:	ldr	r1, [fp, #-16]
   1379c:	str	r0, [r1]
   137a0:	ldr	r0, [sp, #16]
   137a4:	ldr	r1, [sp, #20]
   137a8:	str	r0, [r1]
   137ac:	movw	r0, #1
   137b0:	str	r0, [fp, #-4]
   137b4:	ldr	r0, [fp, #-4]
   137b8:	mov	sp, fp
   137bc:	pop	{fp, pc}

000137c0 <mmk_init@@Base>:
   137c0:	push	{fp, lr}
   137c4:	mov	fp, sp
   137c8:	sub	sp, sp, #16
   137cc:	ldr	r0, [pc, #168]	; 1387c <mmk_init@@Base+0xbc>
   137d0:	add	r0, pc, r0
   137d4:	ldr	r0, [r0]
   137d8:	cmp	r0, #0
   137dc:	beq	137e4 <mmk_init@@Base+0x24>
   137e0:	b	13874 <mmk_init@@Base+0xb4>
   137e4:	bl	13f30 <plt_init_ctx@@Base>
   137e8:	ldr	lr, [pc, #144]	; 13880 <mmk_init@@Base+0xc0>
   137ec:	add	lr, pc, lr
   137f0:	str	r0, [lr, #4]
   137f4:	ldr	r0, [pc, #136]	; 13884 <mmk_init@@Base+0xc4>
   137f8:	add	r0, pc, r0
   137fc:	ldr	r0, [r0, #4]
   13800:	mvn	r1, #0
   13804:	cmp	r0, r1
   13808:	bne	13850 <mmk_init@@Base+0x90>
   1380c:	ldr	r0, [pc, #116]	; 13888 <mmk_init@@Base+0xc8>
   13810:	add	r1, pc, r0
   13814:	ldr	r0, [pc, #112]	; 1388c <mmk_init@@Base+0xcc>
   13818:	add	r2, pc, r0
   1381c:	ldr	r0, [pc, #108]	; 13890 <mmk_init@@Base+0xd0>
   13820:	add	r0, pc, r0
   13824:	ldr	r3, [pc, #104]	; 13894 <mmk_init@@Base+0xd4>
   13828:	ldr	r3, [pc, r3]
   1382c:	ldr	r3, [r3]
   13830:	str	r0, [fp, #-4]
   13834:	mov	r0, r3
   13838:	movw	r3, #45	; 0x2d
   1383c:	ldr	ip, [fp, #-4]
   13840:	str	ip, [sp]
   13844:	bl	115ac <fprintf@plt>
   13848:	str	r0, [sp, #8]
   1384c:	bl	115f4 <abort@plt>
   13850:	b	13854 <mmk_init@@Base+0x94>
   13854:	ldr	r0, [pc, #64]	; 1389c <mmk_init@@Base+0xdc>
   13858:	add	r0, pc, r0
   1385c:	ldr	r0, [r0, #4]
   13860:	bl	15a20 <mmk_init_vital_functions@@Base>
   13864:	ldr	r0, [pc, #44]	; 13898 <mmk_init@@Base+0xd8>
   13868:	add	r0, pc, r0
   1386c:	movw	lr, #1
   13870:	str	lr, [r0]
   13874:	mov	sp, fp
   13878:	pop	{fp, pc}
   1387c:	andeq	r3, r1, r0, lsl r9
   13880:	strdeq	r3, [r1], -r4
   13884:	andeq	r3, r1, r8, ror #17
   13888:	andeq	r2, r0, r2, asr r5
   1388c:	muleq	r0, lr, r7
   13890:	andeq	r2, r0, r5, ror #15
   13894:	andeq	r3, r1, ip, ror #16
   13898:	andeq	r3, r1, r8, ror r8
   1389c:	andeq	r3, r1, r8, lsl #17

000138a0 <mmk_plt_ctx@@Base>:
   138a0:	push	{fp, lr}
   138a4:	mov	fp, sp
   138a8:	sub	sp, sp, #16
   138ac:	b	138b0 <mmk_plt_ctx@@Base+0x10>
   138b0:	ldr	r0, [pc, #104]	; 13920 <mmk_plt_ctx@@Base+0x80>
   138b4:	add	r0, pc, r0
   138b8:	ldr	r0, [r0]
   138bc:	cmp	r0, #0
   138c0:	bne	13908 <mmk_plt_ctx@@Base+0x68>
   138c4:	ldr	r0, [pc, #88]	; 13924 <mmk_plt_ctx@@Base+0x84>
   138c8:	add	r1, pc, r0
   138cc:	ldr	r0, [pc, #84]	; 13928 <mmk_plt_ctx@@Base+0x88>
   138d0:	add	r2, pc, r0
   138d4:	ldr	r0, [pc, #80]	; 1392c <mmk_plt_ctx@@Base+0x8c>
   138d8:	add	r0, pc, r0
   138dc:	ldr	r3, [pc, #76]	; 13930 <mmk_plt_ctx@@Base+0x90>
   138e0:	ldr	r3, [pc, r3]
   138e4:	ldr	r3, [r3]
   138e8:	str	r0, [fp, #-4]
   138ec:	mov	r0, r3
   138f0:	movw	r3, #54	; 0x36
   138f4:	ldr	ip, [fp, #-4]
   138f8:	str	ip, [sp]
   138fc:	bl	115ac <fprintf@plt>
   13900:	str	r0, [sp, #8]
   13904:	bl	115f4 <abort@plt>
   13908:	b	1390c <mmk_plt_ctx@@Base+0x6c>
   1390c:	ldr	r0, [pc, #32]	; 13934 <mmk_plt_ctx@@Base+0x94>
   13910:	add	r0, pc, r0
   13914:	ldr	r0, [r0, #4]
   13918:	mov	sp, fp
   1391c:	pop	{fp, pc}
   13920:	andeq	r3, r1, ip, lsr #16
   13924:	muleq	r0, sl, r4
   13928:	andeq	r2, r0, r6, ror #13
   1392c:	andeq	r2, r0, r4, asr #14
   13930:			; <UNDEFINED> instruction: 0x000137b4
   13934:	ldrdeq	r3, [r1], -r0

00013938 <mmk_reset@@Base>:
   13938:	push	{fp, lr}
   1393c:	mov	fp, sp
   13940:	sub	sp, sp, #16
   13944:	str	r0, [fp, #-4]
   13948:	ldr	r0, [fp, #-4]
   1394c:	movw	r1, #0
   13950:	cmp	r0, r1
   13954:	bne	1395c <mmk_reset@@Base+0x24>
   13958:	b	1397c <mmk_reset@@Base+0x44>
   1395c:	ldr	r0, [fp, #-4]
   13960:	bl	14e94 <mmk_ask_ctx@@Base>
   13964:	str	r0, [sp, #8]
   13968:	ldr	r0, [sp, #8]
   1396c:	bl	14ad0 <mmk_stub_context@@Base>
   13970:	str	r0, [sp, #4]
   13974:	ldr	r0, [sp, #4]
   13978:	bl	13d58 <mmk_mock_destroy_internal@@Base>
   1397c:	mov	sp, fp
   13980:	pop	{fp, pc}

00013984 <mmk_matcher_init@@Base>:
   13984:	push	{fp, lr}
   13988:	mov	fp, sp
   1398c:	sub	sp, sp, #24
   13990:	str	r0, [fp, #-4]
   13994:	mov	r0, #12
   13998:	bl	15960 <mmk_malloc@@Base>
   1399c:	str	r0, [fp, #-8]
   139a0:	ldr	r0, [fp, #-8]
   139a4:	ldr	lr, [fp, #-4]
   139a8:	str	lr, [sp, #4]
   139ac:	mov	lr, #0
   139b0:	str	lr, [sp, #8]
   139b4:	str	lr, [sp, #12]
   139b8:	ldr	lr, [sp, #12]
   139bc:	str	lr, [r0, #8]
   139c0:	vldr	d16, [sp, #4]
   139c4:	vstr	d16, [r0]
   139c8:	ldr	r0, [fp, #-8]
   139cc:	ldr	lr, [pc, #28]	; 139f0 <mmk_matcher_init@@Base+0x6c>
   139d0:	add	lr, pc, lr
   139d4:	str	r0, [sp]
   139d8:	mov	r0, lr
   139dc:	bl	115dc <__tls_get_addr@plt>
   139e0:	ldr	lr, [sp]
   139e4:	str	lr, [r0]
   139e8:	mov	sp, fp
   139ec:	pop	{fp, pc}
   139f0:	andeq	r3, r1, ip, lsl #13

000139f4 <mmk_matcher_term@@Base>:
   139f4:	push	{fp, lr}
   139f8:	mov	fp, sp
   139fc:	ldr	r0, [pc, #16]	; 13a14 <mmk_matcher_term@@Base+0x20>
   13a00:	add	r0, pc, r0
   13a04:	bl	115dc <__tls_get_addr@plt>
   13a08:	mov	lr, #0
   13a0c:	str	lr, [r0]
   13a10:	pop	{fp, pc}
   13a14:	andeq	r3, r1, ip, asr r6

00013a18 <mmk_matcher_ctx@@Base>:
   13a18:	push	{fp, lr}
   13a1c:	mov	fp, sp
   13a20:	ldr	r0, [pc, #12]	; 13a34 <mmk_matcher_ctx@@Base+0x1c>
   13a24:	add	r0, pc, r0
   13a28:	bl	115dc <__tls_get_addr@plt>
   13a2c:	ldr	r0, [r0]
   13a30:	pop	{fp, pc}
   13a34:	andeq	r3, r1, r8, lsr r6

00013a38 <mmk_matcher_add@@Base>:
   13a38:	push	{fp, lr}
   13a3c:	mov	fp, sp
   13a40:	sub	sp, sp, #40	; 0x28
   13a44:	str	r0, [fp, #-4]
   13a48:	str	r1, [fp, #-8]
   13a4c:	mov	r0, #12
   13a50:	bl	15960 <mmk_malloc@@Base>
   13a54:	str	r0, [fp, #-12]
   13a58:	ldr	r0, [pc, #200]	; 13b28 <mmk_matcher_add@@Base+0xf0>
   13a5c:	add	r0, pc, r0
   13a60:	bl	115dc <__tls_get_addr@plt>
   13a64:	ldr	r1, [r0]
   13a68:	str	r1, [fp, #-16]
   13a6c:	ldr	r1, [fp, #-12]
   13a70:	ldr	lr, [fp, #-4]
   13a74:	str	lr, [sp, #12]
   13a78:	ldr	lr, [fp, #-8]
   13a7c:	str	lr, [sp, #16]
   13a80:	mov	lr, #0
   13a84:	str	lr, [sp, #20]
   13a88:	ldr	lr, [sp, #20]
   13a8c:	str	lr, [r1, #8]
   13a90:	vldr	d16, [sp, #12]
   13a94:	vstr	d16, [r1]
   13a98:	ldr	r0, [r0]
   13a9c:	ldr	r0, [r0, #8]
   13aa0:	str	r0, [sp, #8]
   13aa4:	ldr	r0, [sp, #8]
   13aa8:	movw	r1, #0
   13aac:	cmp	r0, r1
   13ab0:	movw	r0, #0
   13ab4:	str	r0, [sp, #4]
   13ab8:	beq	13adc <mmk_matcher_add@@Base+0xa4>
   13abc:	ldr	r0, [sp, #8]
   13ac0:	ldr	r0, [r0, #4]
   13ac4:	ldr	r1, [fp, #-12]
   13ac8:	ldr	r1, [r1, #4]
   13acc:	cmp	r0, r1
   13ad0:	movw	r0, #0
   13ad4:	movcc	r0, #1
   13ad8:	str	r0, [sp, #4]
   13adc:	ldr	r0, [sp, #4]
   13ae0:	tst	r0, #1
   13ae4:	beq	13b04 <mmk_matcher_add@@Base+0xcc>
   13ae8:	b	13aec <mmk_matcher_add@@Base+0xb4>
   13aec:	ldr	r0, [sp, #8]
   13af0:	str	r0, [fp, #-16]
   13af4:	ldr	r0, [sp, #8]
   13af8:	ldr	r0, [r0, #8]
   13afc:	str	r0, [sp, #8]
   13b00:	b	13aa4 <mmk_matcher_add@@Base+0x6c>
   13b04:	ldr	r0, [fp, #-16]
   13b08:	ldr	r0, [r0, #8]
   13b0c:	ldr	r1, [fp, #-12]
   13b10:	str	r0, [r1, #8]
   13b14:	ldr	r0, [fp, #-12]
   13b18:	ldr	r1, [fp, #-16]
   13b1c:	str	r0, [r1, #8]
   13b20:	mov	sp, fp
   13b24:	pop	{fp, pc}
   13b28:	andeq	r3, r1, r0, lsl #12

00013b2c <mmk_matcher_get_predicate@@Base>:
   13b2c:	sub	sp, sp, #4
   13b30:	str	r0, [sp]
   13b34:	ldr	r0, [sp]
   13b38:	add	r0, r0, #12
   13b3c:	add	sp, sp, #4
   13b40:	bx	lr

00013b44 <mmk_mock_create_internal@@Base>:
   13b44:	push	{fp, lr}
   13b48:	mov	fp, sp
   13b4c:	sub	sp, sp, #72	; 0x48
   13b50:	str	r0, [fp, #-4]
   13b54:	str	r1, [fp, #-8]
   13b58:	bl	137c0 <mmk_init@@Base>
   13b5c:	movw	r0, #20
   13b60:	bl	15960 <mmk_malloc@@Base>
   13b64:	str	r0, [fp, #-12]
   13b68:	ldr	r0, [fp, #-12]
   13b6c:	movw	r1, #0
   13b70:	cmp	r0, r1
   13b74:	bne	13bbc <mmk_mock_create_internal@@Base+0x78>
   13b78:	ldr	r0, [pc, #444]	; 13d3c <mmk_mock_create_internal@@Base+0x1f8>
   13b7c:	add	r1, pc, r0
   13b80:	ldr	r0, [pc, #440]	; 13d40 <mmk_mock_create_internal@@Base+0x1fc>
   13b84:	add	r2, pc, r0
   13b88:	ldr	r0, [pc, #436]	; 13d44 <mmk_mock_create_internal@@Base+0x200>
   13b8c:	add	r0, pc, r0
   13b90:	ldr	r3, [pc, #432]	; 13d48 <mmk_mock_create_internal@@Base+0x204>
   13b94:	ldr	r3, [pc, r3]
   13b98:	ldr	r3, [r3]
   13b9c:	str	r0, [sp, #20]
   13ba0:	mov	r0, r3
   13ba4:	movw	r3, #36	; 0x24
   13ba8:	ldr	ip, [sp, #20]
   13bac:	str	ip, [sp]
   13bb0:	bl	115ac <fprintf@plt>
   13bb4:	str	r0, [sp, #16]
   13bb8:	bl	115f4 <abort@plt>
   13bbc:	b	13bc0 <mmk_mock_create_internal@@Base+0x7c>
   13bc0:	ldr	r0, [fp, #-12]
   13bc4:	sub	r1, fp, #32
   13bc8:	mov	r2, r1
   13bcc:	vmov.i32	q8, #0	; 0x00000000
   13bd0:	vst1.32	{d16-d17}, [r2]!
   13bd4:	mov	r3, #0
   13bd8:	str	r3, [r2]
   13bdc:	movw	r2, #20
   13be0:	bl	11528 <memcpy@plt>
   13be4:	ldr	r0, [fp, #-4]
   13be8:	movw	r1, #64	; 0x40
   13bec:	bl	1574c <mmk_strchr@@Base>
   13bf0:	str	r0, [sp, #36]	; 0x24
   13bf4:	ldr	r0, [sp, #36]	; 0x24
   13bf8:	movw	r1, #0
   13bfc:	cmp	r0, r1
   13c00:	bne	13c14 <mmk_mock_create_internal@@Base+0xd0>
   13c04:	ldr	r0, [fp, #-4]
   13c08:	bl	158ac <mmk_strlen@@Base>
   13c0c:	str	r0, [sp, #32]
   13c10:	b	13c24 <mmk_mock_create_internal@@Base+0xe0>
   13c14:	ldr	r0, [sp, #36]	; 0x24
   13c18:	ldr	r1, [fp, #-4]
   13c1c:	sub	r0, r0, r1
   13c20:	str	r0, [sp, #32]
   13c24:	ldr	r0, [sp, #32]
   13c28:	add	r0, r0, #1
   13c2c:	bl	15960 <mmk_malloc@@Base>
   13c30:	str	r0, [sp, #28]
   13c34:	ldr	r0, [sp, #28]
   13c38:	ldr	r1, [fp, #-4]
   13c3c:	ldr	r2, [sp, #32]
   13c40:	bl	15810 <mmk_strncpy@@Base>
   13c44:	ldr	r1, [sp, #28]
   13c48:	ldr	r2, [sp, #32]
   13c4c:	add	r1, r1, r2
   13c50:	movw	r2, #0
   13c54:	strb	r2, [r1]
   13c58:	ldr	r1, [sp, #36]	; 0x24
   13c5c:	movw	r2, #0
   13c60:	cmp	r1, r2
   13c64:	movw	r1, #1
   13c68:	str	r0, [sp, #12]
   13c6c:	str	r1, [sp, #8]
   13c70:	beq	13c9c <mmk_mock_create_internal@@Base+0x158>
   13c74:	ldr	r0, [pc, #208]	; 13d4c <mmk_mock_create_internal@@Base+0x208>
   13c78:	add	r1, pc, r0
   13c7c:	ldr	r0, [sp, #36]	; 0x24
   13c80:	add	r0, r0, #1
   13c84:	movw	r2, #4
   13c88:	bl	1564c <mmk_strneq@@Base>
   13c8c:	cmp	r0, #0
   13c90:	movw	r0, #0
   13c94:	movne	r0, #1
   13c98:	str	r0, [sp, #8]
   13c9c:	ldr	r0, [sp, #8]
   13ca0:	and	r0, r0, #1
   13ca4:	str	r0, [sp, #24]
   13ca8:	ldr	r0, [fp, #-4]
   13cac:	ldr	r1, [fp, #-8]
   13cb0:	ldr	r2, [fp, #-12]
   13cb4:	bl	14da0 <mmk_stub_create@@Base>
   13cb8:	ldr	r1, [fp, #-12]
   13cbc:	str	r0, [r1, #4]
   13cc0:	ldr	r0, [fp, #-12]
   13cc4:	ldr	r0, [r0, #4]
   13cc8:	movw	r1, #0
   13ccc:	cmp	r0, r1
   13cd0:	bne	13cf8 <mmk_mock_create_internal@@Base+0x1b4>
   13cd4:	ldr	r0, [pc, #116]	; 13d50 <mmk_mock_create_internal@@Base+0x20c>
   13cd8:	add	r1, pc, r0
   13cdc:	ldr	r0, [pc, #112]	; 13d54 <mmk_mock_create_internal@@Base+0x210>
   13ce0:	ldr	r0, [pc, r0]
   13ce4:	ldr	r0, [r0]
   13ce8:	ldr	r2, [fp, #-4]
   13cec:	bl	115ac <fprintf@plt>
   13cf0:	str	r0, [sp, #4]
   13cf4:	bl	115f4 <abort@plt>
   13cf8:	ldr	r0, [sp, #24]
   13cfc:	cmp	r0, #0
   13d00:	bne	13d20 <mmk_mock_create_internal@@Base+0x1dc>
   13d04:	ldr	r0, [sp, #28]
   13d08:	ldr	r1, [fp, #-8]
   13d0c:	ldr	r2, [fp, #-12]
   13d10:	bl	14da0 <mmk_stub_create@@Base>
   13d14:	ldr	r1, [fp, #-12]
   13d18:	ldr	r1, [r1, #4]
   13d1c:	str	r0, [r1, #36]	; 0x24
   13d20:	ldr	r0, [sp, #28]
   13d24:	bl	159e4 <mmk_free@@Base>
   13d28:	ldr	r0, [fp, #-12]
   13d2c:	ldr	r0, [r0, #4]
   13d30:	ldr	r0, [r0, #32]
   13d34:	mov	sp, fp
   13d38:	pop	{fp, pc}
   13d3c:	andeq	r2, r0, r6, ror #3
   13d40:	andeq	r2, r0, r9, lsr #9
   13d44:	strdeq	r2, [r0], -r0
   13d48:	andeq	r3, r1, r0, lsl #10
   13d4c:	andeq	r2, r0, r8, lsl #8
   13d50:	andeq	r2, r0, sp, lsr #7
   13d54:			; <UNDEFINED> instruction: 0x000133b4

00013d58 <mmk_mock_destroy_internal@@Base>:
   13d58:	push	{fp, lr}
   13d5c:	mov	fp, sp
   13d60:	sub	sp, sp, #32
   13d64:	str	r0, [fp, #-4]
   13d68:	ldr	r0, [fp, #-4]
   13d6c:	ldr	r0, [r0, #4]
   13d70:	str	r0, [fp, #-8]
   13d74:	ldr	r0, [fp, #-8]
   13d78:	movw	r1, #0
   13d7c:	cmp	r0, r1
   13d80:	beq	13da4 <mmk_mock_destroy_internal@@Base+0x4c>
   13d84:	ldr	r0, [fp, #-8]
   13d88:	ldr	r0, [r0, #36]	; 0x24
   13d8c:	str	r0, [fp, #-12]
   13d90:	ldr	r0, [fp, #-8]
   13d94:	bl	14e6c <mmk_stub_destroy@@Base>
   13d98:	ldr	r0, [fp, #-12]
   13d9c:	str	r0, [fp, #-8]
   13da0:	b	13d74 <mmk_mock_destroy_internal@@Base+0x1c>
   13da4:	ldr	r0, [fp, #-4]
   13da8:	ldr	r0, [r0, #8]
   13dac:	bl	159e4 <mmk_free@@Base>
   13db0:	ldr	r0, [fp, #-4]
   13db4:	ldr	r0, [r0]
   13db8:	str	r0, [sp, #16]
   13dbc:	ldr	r0, [sp, #16]
   13dc0:	movw	r1, #0
   13dc4:	cmp	r0, r1
   13dc8:	beq	13e28 <mmk_mock_destroy_internal@@Base+0xd0>
   13dcc:	ldr	r0, [sp, #16]
   13dd0:	ldr	r0, [r0, #4]
   13dd4:	str	r0, [sp, #12]
   13dd8:	ldr	r0, [sp, #16]
   13ddc:	ldr	r0, [r0]
   13de0:	str	r0, [sp, #8]
   13de4:	ldr	r0, [sp, #8]
   13de8:	movw	r1, #0
   13dec:	cmp	r0, r1
   13df0:	beq	13e14 <mmk_mock_destroy_internal@@Base+0xbc>
   13df4:	ldr	r0, [sp, #8]
   13df8:	ldr	r0, [r0, #8]
   13dfc:	str	r0, [sp, #4]
   13e00:	ldr	r0, [sp, #8]
   13e04:	bl	159e4 <mmk_free@@Base>
   13e08:	ldr	r0, [sp, #4]
   13e0c:	str	r0, [sp, #8]
   13e10:	b	13de4 <mmk_mock_destroy_internal@@Base+0x8c>
   13e14:	ldr	r0, [sp, #16]
   13e18:	bl	159e4 <mmk_free@@Base>
   13e1c:	ldr	r0, [sp, #12]
   13e20:	str	r0, [sp, #16]
   13e24:	b	13dbc <mmk_mock_destroy_internal@@Base+0x64>
   13e28:	ldr	r0, [fp, #-4]
   13e2c:	bl	159e4 <mmk_free@@Base>
   13e30:	mov	sp, fp
   13e34:	pop	{fp, pc}

00013e38 <mmk_mock_params_begin@@Base>:
   13e38:	sub	sp, sp, #8
   13e3c:	str	r0, [sp]
   13e40:	ldr	r0, [sp]
   13e44:	ldr	r0, [r0, #8]
   13e48:	movw	r1, #0
   13e4c:	cmp	r0, r1
   13e50:	beq	13e64 <mmk_mock_params_begin@@Base+0x2c>
   13e54:	ldr	r0, [sp]
   13e58:	ldr	r0, [r0, #12]
   13e5c:	cmp	r0, #0
   13e60:	bne	13e70 <mmk_mock_params_begin@@Base+0x38>
   13e64:	movw	r0, #0
   13e68:	str	r0, [sp, #4]
   13e6c:	b	13e80 <mmk_mock_params_begin@@Base+0x48>
   13e70:	ldr	r0, [sp]
   13e74:	ldr	r0, [r0, #8]
   13e78:	add	r0, r0, #4
   13e7c:	str	r0, [sp, #4]
   13e80:	ldr	r0, [sp, #4]
   13e84:	add	sp, sp, #8
   13e88:	bx	lr

00013e8c <mmk_mock_params_next@@Base>:
   13e8c:	sub	sp, sp, #20
   13e90:	str	r0, [sp, #12]
   13e94:	str	r1, [sp, #8]
   13e98:	ldr	r0, [sp, #8]
   13e9c:	str	r0, [sp, #4]
   13ea0:	ldr	r0, [sp, #4]
   13ea4:	mvn	r1, #3
   13ea8:	add	r0, r0, r1
   13eac:	ldr	r0, [r0]
   13eb0:	str	r0, [sp]
   13eb4:	ldr	r0, [sp]
   13eb8:	add	r0, r0, #4
   13ebc:	ldr	r1, [sp, #4]
   13ec0:	add	r0, r1, r0
   13ec4:	str	r0, [sp, #4]
   13ec8:	ldr	r0, [sp, #4]
   13ecc:	ldr	r1, [sp, #12]
   13ed0:	ldr	r1, [r1, #8]
   13ed4:	ldr	r2, [sp, #12]
   13ed8:	ldr	r2, [r2, #12]
   13edc:	add	r1, r1, r2
   13ee0:	cmp	r0, r1
   13ee4:	bcc	13ef4 <mmk_mock_params_next@@Base+0x68>
   13ee8:	movw	r0, #0
   13eec:	str	r0, [sp, #16]
   13ef0:	b	13efc <mmk_mock_params_next@@Base+0x70>
   13ef4:	ldr	r0, [sp, #4]
   13ef8:	str	r0, [sp, #16]
   13efc:	ldr	r0, [sp, #16]
   13f00:	add	sp, sp, #20
   13f04:	bx	lr

00013f08 <mmk_mock_get_params@@Base>:
   13f08:	push	{fp, lr}
   13f0c:	mov	fp, sp
   13f10:	sub	sp, sp, #8
   13f14:	bl	14d80 <mmk_ctx@@Base>
   13f18:	bl	14ad0 <mmk_stub_context@@Base>
   13f1c:	str	r0, [sp, #4]
   13f20:	ldr	r0, [sp, #4]
   13f24:	ldr	r0, [r0]
   13f28:	mov	sp, fp
   13f2c:	pop	{fp, pc}

00013f30 <plt_init_ctx@@Base>:
   13f30:	push	{fp, lr}
   13f34:	mov	fp, sp
   13f38:	ldr	r0, [pc, #48]	; 13f70 <plt_init_ctx@@Base+0x40>
   13f3c:	add	r0, pc, r0
   13f40:	ldr	r0, [r0]
   13f44:	mvn	r1, #0
   13f48:	cmp	r0, r1
   13f4c:	bne	13f60 <plt_init_ctx@@Base+0x30>
   13f50:	bl	13f7c <plt_init_ctx@@Base+0x4c>
   13f54:	ldr	lr, [pc, #24]	; 13f74 <plt_init_ctx@@Base+0x44>
   13f58:	add	lr, pc, lr
   13f5c:	str	r0, [lr]
   13f60:	ldr	r0, [pc, #16]	; 13f78 <plt_init_ctx@@Base+0x48>
   13f64:	add	r0, pc, r0
   13f68:	ldr	r0, [r0]
   13f6c:	pop	{fp, pc}
   13f70:	muleq	r1, r0, r1
   13f74:	andeq	r3, r1, r4, ror r1
   13f78:	andeq	r3, r1, r8, ror #2
   13f7c:	push	{fp, lr}
   13f80:	mov	fp, sp
   13f84:	sub	sp, sp, #24
   13f88:	ldr	r0, [pc, #180]	; 14044 <plt_init_ctx@@Base+0x114>
   13f8c:	ldr	r0, [pc, r0]
   13f90:	movw	r1, #0
   13f94:	str	r1, [fp, #-4]
   13f98:	str	r0, [fp, #-4]
   13f9c:	ldr	r0, [fp, #-4]
   13fa0:	cmp	r0, r1
   13fa4:	bne	14038 <plt_init_ctx@@Base+0x108>
   13fa8:	ldr	r0, [pc, #152]	; 14048 <plt_init_ctx@@Base+0x118>
   13fac:	ldr	r0, [pc, r0]
   13fb0:	ldr	r0, [r0]
   13fb4:	str	r0, [fp, #-8]
   13fb8:	ldr	r0, [fp, #-8]
   13fbc:	add	r1, r0, #4
   13fc0:	str	r1, [fp, #-8]
   13fc4:	ldr	r0, [r0]
   13fc8:	movw	r1, #0
   13fcc:	cmp	r0, r1
   13fd0:	beq	13fd8 <plt_init_ctx@@Base+0xa8>
   13fd4:	b	13fb8 <plt_init_ctx@@Base+0x88>
   13fd8:	ldr	r0, [fp, #-8]
   13fdc:	str	r0, [sp, #12]
   13fe0:	ldr	r0, [sp, #12]
   13fe4:	movw	r1, #3
   13fe8:	bl	14790 <plt_get_real_fn@@Base+0x88>
   13fec:	str	r0, [sp, #8]
   13ff0:	ldr	r0, [sp, #12]
   13ff4:	movw	r1, #4
   13ff8:	bl	14790 <plt_get_real_fn@@Base+0x88>
   13ffc:	str	r0, [sp, #4]
   14000:	ldr	r0, [sp, #8]
   14004:	cmn	r0, #1
   14008:	beq	14034 <plt_init_ctx@@Base+0x104>
   1400c:	ldr	r0, [sp, #4]
   14010:	cmn	r0, #1
   14014:	beq	14034 <plt_init_ctx@@Base+0x104>
   14018:	ldr	r0, [sp, #8]
   1401c:	ldr	r1, [sp, #4]
   14020:	bl	147f8 <plt_get_real_fn@@Base+0xf0>
   14024:	str	r0, [sp]
   14028:	ldr	r0, [sp]
   1402c:	bl	14874 <plt_get_real_fn@@Base+0x16c>
   14030:	str	r0, [fp, #-4]
   14034:	b	14038 <plt_init_ctx@@Base+0x108>
   14038:	ldr	r0, [fp, #-4]
   1403c:	mov	sp, fp
   14040:	pop	{fp, pc}
   14044:	andeq	r3, r1, ip, lsr #2
   14048:	andeq	r3, r1, r4, lsl r1

0001404c <plt_get_lib@@Base>:
   1404c:	push	{r4, r5, fp, lr}
   14050:	add	fp, sp, #8
   14054:	sub	sp, sp, #88	; 0x58
   14058:	str	r0, [fp, #-16]
   1405c:	str	r1, [fp, #-20]	; 0xffffffec
   14060:	ldr	r0, [fp, #-20]	; 0xffffffec
   14064:	movw	r1, #0
   14068:	cmp	r0, r1
   1406c:	bne	1407c <plt_get_lib@@Base+0x30>
   14070:	ldr	r0, [pc, #928]	; 14418 <plt_get_lib@@Base+0x3cc>
   14074:	add	r0, pc, r0
   14078:	str	r0, [fp, #-20]	; 0xffffffec
   1407c:	ldr	r0, [pc, #920]	; 1441c <plt_get_lib@@Base+0x3d0>
   14080:	add	r1, pc, r0
   14084:	movw	r0, #0
   14088:	str	r0, [fp, #-24]	; 0xffffffe8
   1408c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14090:	movw	r2, #4
   14094:	bl	115e8 <strncmp@plt>
   14098:	cmp	r0, #0
   1409c:	bne	140ac <plt_get_lib@@Base+0x60>
   140a0:	movw	r0, #1
   140a4:	str	r0, [fp, #-24]	; 0xffffffe8
   140a8:	b	141b0 <plt_get_lib@@Base+0x164>
   140ac:	ldr	r0, [pc, #876]	; 14420 <plt_get_lib@@Base+0x3d4>
   140b0:	add	r1, pc, r0
   140b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   140b8:	movw	r2, #5
   140bc:	bl	115e8 <strncmp@plt>
   140c0:	cmp	r0, #0
   140c4:	bne	140d4 <plt_get_lib@@Base+0x88>
   140c8:	movw	r0, #2
   140cc:	str	r0, [fp, #-24]	; 0xffffffe8
   140d0:	b	141ac <plt_get_lib@@Base+0x160>
   140d4:	ldr	r0, [pc, #840]	; 14424 <plt_get_lib@@Base+0x3d8>
   140d8:	add	r1, pc, r0
   140dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   140e0:	movw	r2, #4
   140e4:	bl	115e8 <strncmp@plt>
   140e8:	cmp	r0, #0
   140ec:	bne	140fc <plt_get_lib@@Base+0xb0>
   140f0:	movw	r0, #3
   140f4:	str	r0, [fp, #-24]	; 0xffffffe8
   140f8:	b	141a8 <plt_get_lib@@Base+0x15c>
   140fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14100:	ldr	r1, [pc, #832]	; 14448 <plt_get_lib@@Base+0x3fc>
   14104:	add	r1, pc, r1
   14108:	bl	11504 <strcmp@plt>
   1410c:	cmp	r0, #0
   14110:	bne	14124 <plt_get_lib@@Base+0xd8>
   14114:	ldr	r0, [pc, #780]	; 14428 <plt_get_lib@@Base+0x3dc>
   14118:	add	r0, pc, r0
   1411c:	str	r0, [fp, #-20]	; 0xffffffec
   14120:	b	141a4 <plt_get_lib@@Base+0x158>
   14124:	ldr	r0, [fp, #-20]	; 0xffffffec
   14128:	movw	r1, #58	; 0x3a
   1412c:	bl	115a0 <strchr@plt>
   14130:	str	r0, [fp, #-28]	; 0xffffffe4
   14134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14138:	movw	r1, #0
   1413c:	cmp	r0, r1
   14140:	beq	14180 <plt_get_lib@@Base+0x134>
   14144:	ldr	r0, [pc, #756]	; 14440 <plt_get_lib@@Base+0x3f4>
   14148:	add	r1, pc, r0
   1414c:	ldr	r0, [pc, #752]	; 14444 <plt_get_lib@@Base+0x3f8>
   14150:	ldr	r0, [pc, r0]
   14154:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14158:	ldr	r3, [fp, #-20]	; 0xffffffec
   1415c:	sub	r2, r2, r3
   14160:	add	r2, r2, #1
   14164:	str	r2, [fp, #-32]	; 0xffffffe0
   14168:	ldr	r0, [r0]
   1416c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14170:	ldr	r3, [fp, #-20]	; 0xffffffec
   14174:	bl	115ac <fprintf@plt>
   14178:	str	r0, [fp, #-72]	; 0xffffffb8
   1417c:	b	141a0 <plt_get_lib@@Base+0x154>
   14180:	ldr	r0, [pc, #688]	; 14438 <plt_get_lib@@Base+0x3ec>
   14184:	add	r1, pc, r0
   14188:	ldr	r0, [pc, #684]	; 1443c <plt_get_lib@@Base+0x3f0>
   1418c:	ldr	r0, [pc, r0]
   14190:	ldr	r0, [r0]
   14194:	ldr	r2, [fp, #-20]	; 0xffffffec
   14198:	bl	115ac <fprintf@plt>
   1419c:	str	r0, [fp, #-76]	; 0xffffffb4
   141a0:	bl	115f4 <abort@plt>
   141a4:	b	141a8 <plt_get_lib@@Base+0x15c>
   141a8:	b	141ac <plt_get_lib@@Base+0x160>
   141ac:	b	141b0 <plt_get_lib@@Base+0x164>
   141b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141b4:	cmp	r0, #0
   141b8:	bne	141c8 <plt_get_lib@@Base+0x17c>
   141bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   141c0:	str	r0, [fp, #-80]	; 0xffffffb0
   141c4:	b	141dc <plt_get_lib@@Base+0x190>
   141c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   141cc:	movw	r1, #58	; 0x3a
   141d0:	bl	115a0 <strchr@plt>
   141d4:	add	r0, r0, #1
   141d8:	str	r0, [fp, #-80]	; 0xffffffb0
   141dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   141e0:	str	r0, [fp, #-36]	; 0xffffffdc
   141e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   141e8:	bl	11588 <strlen@plt>
   141ec:	str	r0, [fp, #-40]	; 0xffffffd8
   141f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   141f4:	ldr	r1, [pc, #592]	; 1444c <plt_get_lib@@Base+0x400>
   141f8:	add	r1, pc, r1
   141fc:	bl	11504 <strcmp@plt>
   14200:	cmp	r0, #0
   14204:	movw	r0, #0
   14208:	movne	r0, #1
   1420c:	mvn	r1, #0
   14210:	eor	r0, r0, r1
   14214:	and	r0, r0, #1
   14218:	str	r0, [fp, #-44]	; 0xffffffd4
   1421c:	ldr	r0, [fp, #-16]
   14220:	ldr	r0, [r0, #4]
   14224:	str	r0, [fp, #-48]	; 0xffffffd0
   14228:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1422c:	movw	r1, #0
   14230:	cmp	r0, r1
   14234:	beq	14404 <plt_get_lib@@Base+0x3b8>
   14238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1423c:	cmp	r0, #1
   14240:	bne	1436c <plt_get_lib@@Base+0x320>
   14244:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14248:	cmp	r0, #0
   1424c:	beq	142a0 <plt_get_lib@@Base+0x254>
   14250:	ldr	r0, [pc, #472]	; 14430 <plt_get_lib@@Base+0x3e4>
   14254:	add	r1, pc, r0
   14258:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1425c:	ldr	r0, [r0, #4]
   14260:	bl	114f8 <strstr@plt>
   14264:	movw	r1, #0
   14268:	cmp	r0, r1
   1426c:	bne	14290 <plt_get_lib@@Base+0x244>
   14270:	ldr	r0, [pc, #444]	; 14434 <plt_get_lib@@Base+0x3e8>
   14274:	add	r1, pc, r0
   14278:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1427c:	ldr	r0, [r0, #4]
   14280:	bl	114f8 <strstr@plt>
   14284:	movw	r1, #0
   14288:	cmp	r0, r1
   1428c:	beq	1429c <plt_get_lib@@Base+0x250>
   14290:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14294:	str	r0, [fp, #-12]
   14298:	b	1440c <plt_get_lib@@Base+0x3c0>
   1429c:	b	14368 <plt_get_lib@@Base+0x31c>
   142a0:	ldr	r0, [pc, #388]	; 1442c <plt_get_lib@@Base+0x3e0>
   142a4:	add	r2, pc, r0
   142a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   142ac:	add	r0, r0, #8
   142b0:	str	r0, [fp, #-52]	; 0xffffffcc
   142b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   142b8:	mov	r1, sp
   142bc:	str	r1, [fp, #-56]	; 0xffffffc8
   142c0:	add	r1, r0, #7
   142c4:	bic	r1, r1, #7
   142c8:	mov	r3, sp
   142cc:	sub	r1, r3, r1
   142d0:	mov	sp, r1
   142d4:	str	r0, [fp, #-60]	; 0xffffffc4
   142d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   142dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   142e0:	str	r0, [fp, #-84]	; 0xffffffac
   142e4:	mov	r0, r1
   142e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   142ec:	str	r1, [fp, #-88]	; 0xffffffa8
   142f0:	mov	r1, ip
   142f4:	bl	115c4 <snprintf@plt>
   142f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   142fc:	ldr	r1, [r1, #4]
   14300:	str	r0, [fp, #-92]	; 0xffffffa4
   14304:	mov	r0, r1
   14308:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1430c:	bl	114f8 <strstr@plt>
   14310:	movw	r1, #0
   14314:	cmp	r0, r1
   14318:	beq	14330 <plt_get_lib@@Base+0x2e4>
   1431c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14320:	str	r0, [fp, #-12]
   14324:	movw	r0, #1
   14328:	str	r0, [fp, #-64]	; 0xffffffc0
   1432c:	b	14338 <plt_get_lib@@Base+0x2ec>
   14330:	movw	r0, #0
   14334:	str	r0, [fp, #-64]	; 0xffffffc0
   14338:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1433c:	mov	sp, r0
   14340:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14344:	cmp	r0, #0
   14348:	str	r0, [fp, #-96]	; 0xffffffa0
   1434c:	beq	14364 <plt_get_lib@@Base+0x318>
   14350:	b	14354 <plt_get_lib@@Base+0x308>
   14354:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14358:	cmp	r0, #1
   1435c:	beq	1440c <plt_get_lib@@Base+0x3c0>
   14360:	b	14418 <plt_get_lib@@Base+0x3cc>
   14364:	b	14368 <plt_get_lib@@Base+0x31c>
   14368:	b	143f0 <plt_get_lib@@Base+0x3a4>
   1436c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14370:	cmp	r0, #0
   14374:	beq	14384 <plt_get_lib@@Base+0x338>
   14378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1437c:	cmp	r0, #2
   14380:	bne	143ac <plt_get_lib@@Base+0x360>
   14384:	ldr	r0, [fp, #-20]	; 0xffffffec
   14388:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1438c:	ldr	r1, [r1, #4]
   14390:	bl	11504 <strcmp@plt>
   14394:	cmp	r0, #0
   14398:	bne	143a8 <plt_get_lib@@Base+0x35c>
   1439c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   143a0:	str	r0, [fp, #-12]
   143a4:	b	1440c <plt_get_lib@@Base+0x3c0>
   143a8:	b	143ec <plt_get_lib@@Base+0x3a0>
   143ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143b0:	cmp	r0, #3
   143b4:	bne	143e8 <plt_get_lib@@Base+0x39c>
   143b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   143bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   143c0:	bl	14450 <plt_get_lib@@Base+0x404>
   143c4:	str	r0, [fp, #-68]	; 0xffffffbc
   143c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   143cc:	movw	r1, #0
   143d0:	cmp	r0, r1
   143d4:	beq	143e4 <plt_get_lib@@Base+0x398>
   143d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   143dc:	str	r0, [fp, #-12]
   143e0:	b	1440c <plt_get_lib@@Base+0x3c0>
   143e4:	b	143e8 <plt_get_lib@@Base+0x39c>
   143e8:	b	143ec <plt_get_lib@@Base+0x3a0>
   143ec:	b	143f0 <plt_get_lib@@Base+0x3a4>
   143f0:	b	143f4 <plt_get_lib@@Base+0x3a8>
   143f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   143f8:	ldr	r0, [r0, #12]
   143fc:	str	r0, [fp, #-48]	; 0xffffffd0
   14400:	b	14228 <plt_get_lib@@Base+0x1dc>
   14404:	movw	r0, #0
   14408:	str	r0, [fp, #-12]
   1440c:	ldr	r0, [fp, #-12]
   14410:	sub	sp, fp, #8
   14414:	pop	{r4, r5, fp, pc}
   14418:	andeq	r2, r0, ip
   1441c:	andeq	r2, r0, r8, lsr r0
   14420:	andeq	r2, r0, sp
   14424:	andeq	r1, r0, fp, ror #31
   14428:	strdeq	r1, [r0], -r4
   1442c:	andeq	r1, r0, fp, ror lr
   14430:			; <UNDEFINED> instruction: 0x00001eb9
   14434:	andeq	r1, r0, r2, lsr #29
   14438:	andeq	r1, r0, r6, ror #30
   1443c:	andeq	r2, r1, r8, lsl #30
   14440:	andeq	r1, r0, r0, lsl #31
   14444:	andeq	r2, r1, r4, asr #30
   14448:	andeq	r1, r0, ip, ror pc
   1444c:	andeq	r1, r0, r4, lsl #31
   14450:	push	{fp, lr}
   14454:	mov	fp, sp
   14458:	sub	sp, sp, #56	; 0x38
   1445c:	str	r0, [fp, #-8]
   14460:	str	r1, [fp, #-12]
   14464:	ldr	r0, [fp, #-8]
   14468:	movw	r1, #6
   1446c:	bl	148dc <plt_get_real_fn@@Base+0x1d4>
   14470:	str	r0, [fp, #-16]
   14474:	ldr	r0, [fp, #-8]
   14478:	movw	r1, #5
   1447c:	bl	148dc <plt_get_real_fn@@Base+0x1d4>
   14480:	str	r0, [fp, #-20]	; 0xffffffec
   14484:	ldr	r0, [fp, #-8]
   14488:	movw	r1, #20
   1448c:	bl	14988 <plt_get_real_fn@@Base+0x280>
   14490:	str	r0, [fp, #-24]	; 0xffffffe8
   14494:	ldr	r0, [fp, #-8]
   14498:	movw	r1, #23
   1449c:	bl	148dc <plt_get_real_fn@@Base+0x1d4>
   144a0:	str	r0, [sp, #28]
   144a4:	ldr	r0, [fp, #-8]
   144a8:	movw	r1, #2
   144ac:	bl	14988 <plt_get_real_fn@@Base+0x280>
   144b0:	str	r0, [sp, #24]
   144b4:	ldr	r0, [fp, #-8]
   144b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   144bc:	add	r1, r1, #2
   144c0:	bl	14988 <plt_get_real_fn@@Base+0x280>
   144c4:	str	r0, [sp, #20]
   144c8:	ldr	r0, [fp, #-16]
   144cc:	movw	r1, #0
   144d0:	cmp	r0, r1
   144d4:	beq	1451c <plt_get_lib@@Base+0x4d0>
   144d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   144dc:	movw	r1, #0
   144e0:	cmp	r0, r1
   144e4:	beq	1451c <plt_get_lib@@Base+0x4d0>
   144e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144ec:	cmp	r0, #0
   144f0:	beq	1451c <plt_get_lib@@Base+0x4d0>
   144f4:	ldr	r0, [sp, #28]
   144f8:	movw	r1, #0
   144fc:	cmp	r0, r1
   14500:	beq	1451c <plt_get_lib@@Base+0x4d0>
   14504:	ldr	r0, [sp, #24]
   14508:	cmp	r0, #0
   1450c:	beq	1451c <plt_get_lib@@Base+0x4d0>
   14510:	ldr	r0, [sp, #20]
   14514:	cmp	r0, #0
   14518:	bne	14528 <plt_get_lib@@Base+0x4dc>
   1451c:	movw	r0, #0
   14520:	str	r0, [fp, #-4]
   14524:	b	1458c <plt_get_lib@@Base+0x540>
   14528:	ldr	r0, [sp, #28]
   1452c:	str	r0, [sp, #8]
   14530:	ldr	r0, [sp, #24]
   14534:	str	r0, [sp, #12]
   14538:	ldr	r0, [sp, #20]
   1453c:	str	r0, [sp, #16]
   14540:	ldr	r0, [fp, #-8]
   14544:	ldr	r0, [r0]
   14548:	str	r0, [sp, #4]
   1454c:	ldr	r1, [fp, #-16]
   14550:	ldr	r2, [fp, #-20]	; 0xffffffec
   14554:	ldr	r3, [fp, #-12]
   14558:	add	r0, sp, #8
   1455c:	bl	149fc <plt_get_real_fn@@Base+0x2f4>
   14560:	str	r0, [sp]
   14564:	ldr	r0, [sp]
   14568:	cmp	r0, #0
   1456c:	beq	14584 <plt_get_lib@@Base+0x538>
   14570:	ldr	r0, [sp]
   14574:	ldr	r1, [sp, #4]
   14578:	add	r0, r0, r1
   1457c:	str	r0, [fp, #-4]
   14580:	b	1458c <plt_get_lib@@Base+0x540>
   14584:	movw	r0, #0
   14588:	str	r0, [fp, #-4]
   1458c:	ldr	r0, [fp, #-4]
   14590:	mov	sp, fp
   14594:	pop	{fp, pc}

00014598 <plt_get_offsets@@Base>:
   14598:	push	{fp, lr}
   1459c:	mov	fp, sp
   145a0:	sub	sp, sp, #32
   145a4:	str	r0, [fp, #-8]
   145a8:	str	r1, [fp, #-12]
   145ac:	str	r2, [sp, #16]
   145b0:	ldr	r0, [fp, #-8]
   145b4:	ldr	r1, [fp, #-12]
   145b8:	bl	14450 <plt_get_lib@@Base+0x404>
   145bc:	str	r0, [sp, #12]
   145c0:	ldr	r0, [sp, #12]
   145c4:	movw	r1, #0
   145c8:	cmp	r0, r1
   145cc:	beq	14618 <plt_get_offsets@@Base+0x80>
   145d0:	movw	r0, #8
   145d4:	bl	15960 <mmk_malloc@@Base>
   145d8:	str	r0, [sp, #8]
   145dc:	ldr	r0, [sp, #16]
   145e0:	movw	lr, #1
   145e4:	str	lr, [r0]
   145e8:	ldr	r0, [sp, #8]
   145ec:	ldr	lr, [sp, #12]
   145f0:	str	lr, [sp]
   145f4:	movw	lr, #0
   145f8:	str	lr, [sp, #4]
   145fc:	ldr	lr, [sp]
   14600:	str	lr, [r0]
   14604:	ldr	lr, [sp, #4]
   14608:	str	lr, [r0, #4]
   1460c:	ldr	r0, [sp, #8]
   14610:	str	r0, [fp, #-4]
   14614:	b	14620 <plt_get_offsets@@Base+0x88>
   14618:	movw	r0, #0
   1461c:	str	r0, [fp, #-4]
   14620:	ldr	r0, [fp, #-4]
   14624:	mov	sp, fp
   14628:	pop	{fp, pc}

0001462c <plt_set_offsets@@Base>:
   1462c:	sub	sp, sp, #16
   14630:	str	r0, [sp, #12]
   14634:	str	r1, [sp, #8]
   14638:	str	r2, [sp, #4]
   1463c:	movw	r0, #0
   14640:	str	r0, [sp]
   14644:	ldr	r0, [sp]
   14648:	ldr	r1, [sp, #8]
   1464c:	cmp	r0, r1
   14650:	bcs	146ac <plt_set_offsets@@Base+0x80>
   14654:	ldr	r0, [sp, #12]
   14658:	ldr	r1, [sp]
   1465c:	add	r0, r0, r1, lsl #3
   14660:	ldr	r0, [r0, #4]
   14664:	movw	r1, #0
   14668:	cmp	r0, r1
   1466c:	bne	14684 <plt_set_offsets@@Base+0x58>
   14670:	ldr	r0, [sp, #12]
   14674:	ldr	r1, [sp]
   14678:	ldr	r1, [r0, r1, lsl #3]!
   1467c:	ldr	r1, [r1]
   14680:	str	r1, [r0, #4]
   14684:	ldr	r0, [sp, #4]
   14688:	ldr	r1, [sp, #12]
   1468c:	ldr	r2, [sp]
   14690:	add	r1, r1, r2, lsl #3
   14694:	ldr	r1, [r1]
   14698:	str	r0, [r1]
   1469c:	ldr	r0, [sp]
   146a0:	add	r0, r0, #1
   146a4:	str	r0, [sp]
   146a8:	b	14644 <plt_set_offsets@@Base+0x18>
   146ac:	add	sp, sp, #16
   146b0:	bx	lr

000146b4 <plt_reset_offsets@@Base>:
   146b4:	sub	sp, sp, #12
   146b8:	str	r0, [sp, #8]
   146bc:	str	r1, [sp, #4]
   146c0:	movw	r0, #0
   146c4:	str	r0, [sp]
   146c8:	ldr	r0, [sp]
   146cc:	ldr	r1, [sp, #4]
   146d0:	cmp	r0, r1
   146d4:	bcs	14700 <plt_reset_offsets@@Base+0x4c>
   146d8:	ldr	r0, [sp, #8]
   146dc:	ldr	r1, [sp]
   146e0:	add	r0, r0, r1, lsl #3
   146e4:	ldr	r1, [r0, #4]
   146e8:	ldr	r0, [r0]
   146ec:	str	r1, [r0]
   146f0:	ldr	r0, [sp]
   146f4:	add	r0, r0, #1
   146f8:	str	r0, [sp]
   146fc:	b	146c8 <plt_reset_offsets@@Base+0x14>
   14700:	add	sp, sp, #12
   14704:	bx	lr

00014708 <plt_get_real_fn@@Base>:
   14708:	push	{fp, lr}
   1470c:	mov	fp, sp
   14710:	sub	sp, sp, #24
   14714:	str	r0, [fp, #-8]
   14718:	str	r1, [sp, #12]
   1471c:	ldr	r0, [fp, #-8]
   14720:	ldr	r0, [r0, #4]
   14724:	str	r0, [sp, #8]
   14728:	ldr	r0, [sp, #8]
   1472c:	movw	r1, #0
   14730:	cmp	r0, r1
   14734:	beq	1477c <plt_get_real_fn@@Base+0x74>
   14738:	ldr	r0, [sp, #8]
   1473c:	ldr	r1, [sp, #12]
   14740:	bl	14450 <plt_get_lib@@Base+0x404>
   14744:	str	r0, [sp, #4]
   14748:	ldr	r0, [sp, #4]
   1474c:	movw	r1, #0
   14750:	cmp	r0, r1
   14754:	beq	14768 <plt_get_real_fn@@Base+0x60>
   14758:	ldr	r0, [sp, #4]
   1475c:	ldr	r0, [r0]
   14760:	str	r0, [fp, #-4]
   14764:	b	14784 <plt_get_real_fn@@Base+0x7c>
   14768:	b	1476c <plt_get_real_fn@@Base+0x64>
   1476c:	ldr	r0, [sp, #8]
   14770:	ldr	r0, [r0, #12]
   14774:	str	r0, [sp, #8]
   14778:	b	14728 <plt_get_real_fn@@Base+0x20>
   1477c:	movw	r0, #0
   14780:	str	r0, [fp, #-4]
   14784:	ldr	r0, [fp, #-4]
   14788:	mov	sp, fp
   1478c:	pop	{fp, pc}
   14790:	sub	sp, sp, #12
   14794:	str	r0, [sp, #4]
   14798:	str	r1, [sp]
   1479c:	ldr	r0, [sp, #4]
   147a0:	ldr	r0, [r0]
   147a4:	cmp	r0, #0
   147a8:	beq	147e4 <plt_get_real_fn@@Base+0xdc>
   147ac:	ldr	r0, [sp, #4]
   147b0:	ldr	r0, [r0]
   147b4:	ldr	r1, [sp]
   147b8:	cmp	r0, r1
   147bc:	bne	147d0 <plt_get_real_fn@@Base+0xc8>
   147c0:	ldr	r0, [sp, #4]
   147c4:	ldr	r0, [r0, #4]
   147c8:	str	r0, [sp, #8]
   147cc:	b	147ec <plt_get_real_fn@@Base+0xe4>
   147d0:	b	147d4 <plt_get_real_fn@@Base+0xcc>
   147d4:	ldr	r0, [sp, #4]
   147d8:	add	r0, r0, #8
   147dc:	str	r0, [sp, #4]
   147e0:	b	1479c <plt_get_real_fn@@Base+0x94>
   147e4:	mvn	r0, #0
   147e8:	str	r0, [sp, #8]
   147ec:	ldr	r0, [sp, #8]
   147f0:	add	sp, sp, #12
   147f4:	bx	lr
   147f8:	sub	sp, sp, #16
   147fc:	str	r0, [sp, #8]
   14800:	str	r1, [sp, #4]
   14804:	movw	r0, #0
   14808:	str	r0, [sp]
   1480c:	ldr	r0, [sp]
   14810:	ldr	r1, [sp, #4]
   14814:	cmp	r0, r1
   14818:	bcs	14860 <plt_get_real_fn@@Base+0x158>
   1481c:	ldr	r0, [sp, #8]
   14820:	ldr	r1, [sp]
   14824:	add	r0, r0, r1, lsl #5
   14828:	ldr	r0, [r0]
   1482c:	cmp	r0, #2
   14830:	bne	1484c <plt_get_real_fn@@Base+0x144>
   14834:	ldr	r0, [sp, #8]
   14838:	ldr	r1, [sp]
   1483c:	add	r0, r0, r1, lsl #5
   14840:	ldr	r0, [r0, #8]
   14844:	str	r0, [sp, #12]
   14848:	b	14868 <plt_get_real_fn@@Base+0x160>
   1484c:	b	14850 <plt_get_real_fn@@Base+0x148>
   14850:	ldr	r0, [sp]
   14854:	add	r0, r0, #1
   14858:	str	r0, [sp]
   1485c:	b	1480c <plt_get_real_fn@@Base+0x104>
   14860:	movw	r0, #0
   14864:	str	r0, [sp, #12]
   14868:	ldr	r0, [sp, #12]
   1486c:	add	sp, sp, #16
   14870:	bx	lr
   14874:	sub	sp, sp, #12
   14878:	str	r0, [sp, #4]
   1487c:	ldr	r0, [sp, #4]
   14880:	str	r0, [sp]
   14884:	ldr	r0, [sp]
   14888:	ldr	r0, [r0]
   1488c:	cmp	r0, #0
   14890:	beq	148c8 <plt_get_real_fn@@Base+0x1c0>
   14894:	ldr	r0, [sp]
   14898:	ldr	r0, [r0]
   1489c:	cmp	r0, #21
   148a0:	bne	148b4 <plt_get_real_fn@@Base+0x1ac>
   148a4:	ldr	r0, [sp]
   148a8:	ldr	r0, [r0, #4]
   148ac:	str	r0, [sp, #8]
   148b0:	b	148d0 <plt_get_real_fn@@Base+0x1c8>
   148b4:	b	148b8 <plt_get_real_fn@@Base+0x1b0>
   148b8:	ldr	r0, [sp]
   148bc:	add	r0, r0, #8
   148c0:	str	r0, [sp]
   148c4:	b	14884 <plt_get_real_fn@@Base+0x17c>
   148c8:	movw	r0, #0
   148cc:	str	r0, [sp, #8]
   148d0:	ldr	r0, [sp, #8]
   148d4:	add	sp, sp, #12
   148d8:	bx	lr
   148dc:	sub	sp, sp, #20
   148e0:	str	r0, [sp, #12]
   148e4:	str	r1, [sp, #8]
   148e8:	ldr	r0, [sp, #12]
   148ec:	ldr	r0, [r0]
   148f0:	str	r0, [sp, #4]
   148f4:	ldr	r0, [sp, #12]
   148f8:	ldr	r0, [r0, #8]
   148fc:	str	r0, [sp]
   14900:	ldr	r0, [sp]
   14904:	ldr	r0, [r0]
   14908:	cmp	r0, #0
   1490c:	beq	14974 <plt_get_real_fn@@Base+0x26c>
   14910:	ldr	r0, [sp]
   14914:	ldr	r0, [r0]
   14918:	ldr	r1, [sp, #8]
   1491c:	cmp	r0, r1
   14920:	bne	14960 <plt_get_real_fn@@Base+0x258>
   14924:	ldr	r0, [sp]
   14928:	ldr	r0, [r0, #4]
   1492c:	ldr	r1, [sp, #4]
   14930:	cmp	r0, r1
   14934:	bcc	14948 <plt_get_real_fn@@Base+0x240>
   14938:	ldr	r0, [sp]
   1493c:	ldr	r0, [r0, #4]
   14940:	str	r0, [sp, #16]
   14944:	b	1497c <plt_get_real_fn@@Base+0x274>
   14948:	ldr	r0, [sp, #4]
   1494c:	ldr	r1, [sp]
   14950:	ldr	r1, [r1, #4]
   14954:	add	r0, r0, r1
   14958:	str	r0, [sp, #16]
   1495c:	b	1497c <plt_get_real_fn@@Base+0x274>
   14960:	b	14964 <plt_get_real_fn@@Base+0x25c>
   14964:	ldr	r0, [sp]
   14968:	add	r0, r0, #8
   1496c:	str	r0, [sp]
   14970:	b	14900 <plt_get_real_fn@@Base+0x1f8>
   14974:	movw	r0, #0
   14978:	str	r0, [sp, #16]
   1497c:	ldr	r0, [sp, #16]
   14980:	add	sp, sp, #20
   14984:	bx	lr
   14988:	sub	sp, sp, #16
   1498c:	str	r0, [sp, #8]
   14990:	str	r1, [sp, #4]
   14994:	ldr	r0, [sp, #8]
   14998:	ldr	r0, [r0, #8]
   1499c:	str	r0, [sp]
   149a0:	ldr	r0, [sp]
   149a4:	ldr	r0, [r0]
   149a8:	cmp	r0, #0
   149ac:	beq	149e8 <plt_get_real_fn@@Base+0x2e0>
   149b0:	ldr	r0, [sp]
   149b4:	ldr	r0, [r0]
   149b8:	ldr	r1, [sp, #4]
   149bc:	cmp	r0, r1
   149c0:	bne	149d4 <plt_get_real_fn@@Base+0x2cc>
   149c4:	ldr	r0, [sp]
   149c8:	ldr	r0, [r0, #4]
   149cc:	str	r0, [sp, #12]
   149d0:	b	149f0 <plt_get_real_fn@@Base+0x2e8>
   149d4:	b	149d8 <plt_get_real_fn@@Base+0x2d0>
   149d8:	ldr	r0, [sp]
   149dc:	add	r0, r0, #8
   149e0:	str	r0, [sp]
   149e4:	b	149a0 <plt_get_real_fn@@Base+0x298>
   149e8:	movw	r0, #0
   149ec:	str	r0, [sp, #12]
   149f0:	ldr	r0, [sp, #12]
   149f4:	add	sp, sp, #16
   149f8:	bx	lr
   149fc:	push	{fp, lr}
   14a00:	mov	fp, sp
   14a04:	sub	sp, sp, #32
   14a08:	str	r0, [fp, #-8]
   14a0c:	str	r1, [fp, #-12]
   14a10:	str	r2, [sp, #16]
   14a14:	str	r3, [sp, #12]
   14a18:	ldr	r0, [fp, #-8]
   14a1c:	ldr	r0, [r0]
   14a20:	str	r0, [sp, #8]
   14a24:	movw	r0, #0
   14a28:	str	r0, [sp, #4]
   14a2c:	ldr	r0, [sp, #4]
   14a30:	ldr	r1, [fp, #-8]
   14a34:	ldr	r1, [r1, #4]
   14a38:	ldr	r2, [fp, #-8]
   14a3c:	ldr	r2, [r2, #8]
   14a40:	udiv	r1, r1, r2
   14a44:	cmp	r0, r1
   14a48:	bcs	14abc <plt_get_real_fn@@Base+0x3b4>
   14a4c:	ldr	r0, [fp, #-12]
   14a50:	ldr	r1, [sp, #8]
   14a54:	ldr	r1, [r1, #4]
   14a58:	lsr	r1, r1, #8
   14a5c:	add	r0, r0, r1, lsl #4
   14a60:	str	r0, [sp]
   14a64:	ldr	r0, [sp, #16]
   14a68:	ldr	r1, [sp]
   14a6c:	ldr	r1, [r1]
   14a70:	add	r0, r0, r1
   14a74:	ldr	r1, [sp, #12]
   14a78:	bl	11504 <strcmp@plt>
   14a7c:	cmp	r0, #0
   14a80:	bne	14a94 <plt_get_real_fn@@Base+0x38c>
   14a84:	ldr	r0, [sp, #8]
   14a88:	ldr	r0, [r0]
   14a8c:	str	r0, [fp, #-4]
   14a90:	b	14ac4 <plt_get_real_fn@@Base+0x3bc>
   14a94:	b	14a98 <plt_get_real_fn@@Base+0x390>
   14a98:	ldr	r0, [sp, #4]
   14a9c:	add	r0, r0, #1
   14aa0:	str	r0, [sp, #4]
   14aa4:	ldr	r0, [sp, #8]
   14aa8:	ldr	r1, [fp, #-8]
   14aac:	ldr	r1, [r1, #8]
   14ab0:	add	r0, r0, r1
   14ab4:	str	r0, [sp, #8]
   14ab8:	b	14a2c <plt_get_real_fn@@Base+0x324>
   14abc:	movw	r0, #0
   14ac0:	str	r0, [fp, #-4]
   14ac4:	ldr	r0, [fp, #-4]
   14ac8:	mov	sp, fp
   14acc:	pop	{fp, pc}

00014ad0 <mmk_stub_context@@Base>:
   14ad0:	sub	sp, sp, #8
   14ad4:	str	r0, [sp]
   14ad8:	ldr	r0, [sp]
   14adc:	movw	r1, #0
   14ae0:	cmp	r0, r1
   14ae4:	bne	14af4 <mmk_stub_context@@Base+0x24>
   14ae8:	movw	r0, #0
   14aec:	str	r0, [sp, #4]
   14af0:	b	14b00 <mmk_stub_context@@Base+0x30>
   14af4:	ldr	r0, [sp]
   14af8:	ldr	r0, [r0, #12]
   14afc:	str	r0, [sp, #4]
   14b00:	ldr	r0, [sp, #4]
   14b04:	add	sp, sp, #8
   14b08:	bx	lr

00014b0c <mmk_stub_create_static@@Base>:
   14b0c:	push	{fp, lr}
   14b10:	mov	fp, sp
   14b14:	sub	sp, sp, #96	; 0x60
   14b18:	str	r0, [fp, #-8]
   14b1c:	str	r1, [fp, #-12]
   14b20:	str	r2, [fp, #-16]
   14b24:	str	r3, [fp, #-20]	; 0xffffffec
   14b28:	ldr	r0, [pc, #456]	; 14cf8 <mmk_stub_create_static@@Base+0x1ec>
   14b2c:	add	r0, pc, r0
   14b30:	bl	115dc <__tls_get_addr@plt>
   14b34:	mov	r1, #0
   14b38:	str	r1, [r0]
   14b3c:	ldr	r0, [pc, #440]	; 14cfc <mmk_stub_create_static@@Base+0x1f0>
   14b40:	add	r0, pc, r0
   14b44:	str	r1, [sp, #8]
   14b48:	bl	115dc <__tls_get_addr@plt>
   14b4c:	ldr	r1, [sp, #8]
   14b50:	str	r1, [r0]
   14b54:	ldr	r0, [fp, #-12]
   14b58:	bl	158ac <mmk_strlen@@Base>
   14b5c:	add	r0, r0, #1
   14b60:	bl	15960 <mmk_malloc@@Base>
   14b64:	str	r0, [fp, #-24]	; 0xffffffe8
   14b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b6c:	movw	r1, #0
   14b70:	cmp	r0, r1
   14b74:	bne	14b84 <mmk_stub_create_static@@Base+0x78>
   14b78:	mvn	r0, #11
   14b7c:	str	r0, [fp, #-4]
   14b80:	b	14cec <mmk_stub_create_static@@Base+0x1e0>
   14b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b88:	ldr	r1, [fp, #-12]
   14b8c:	bl	157b0 <mmk_strcpy@@Base>
   14b90:	movw	r1, #0
   14b94:	str	r1, [fp, #-28]	; 0xffffffe4
   14b98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14b9c:	str	r0, [sp, #4]
   14ba0:	mov	r0, r1
   14ba4:	movw	r1, #64	; 0x40
   14ba8:	bl	1574c <mmk_strchr@@Base>
   14bac:	str	r0, [fp, #-32]	; 0xffffffe0
   14bb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bb4:	movw	r1, #0
   14bb8:	cmp	r0, r1
   14bbc:	beq	14bd8 <mmk_stub_create_static@@Base+0xcc>
   14bc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bc4:	movw	r1, #0
   14bc8:	strb	r1, [r0]
   14bcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14bd0:	add	r0, r0, #1
   14bd4:	str	r0, [fp, #-28]	; 0xffffffe4
   14bd8:	bl	138a0 <mmk_plt_ctx@@Base>
   14bdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14be0:	bl	1404c <plt_get_lib@@Base>
   14be4:	str	r0, [fp, #-36]	; 0xffffffdc
   14be8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14bec:	movw	r1, #0
   14bf0:	cmp	r0, r1
   14bf4:	bne	14c04 <mmk_stub_create_static@@Base+0xf8>
   14bf8:	mvn	r0, #1
   14bfc:	str	r0, [fp, #-4]
   14c00:	b	14cec <mmk_stub_create_static@@Base+0x1e0>
   14c04:	movw	r0, #0
   14c08:	str	r0, [fp, #-40]	; 0xffffffd8
   14c0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14c10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c14:	sub	r2, fp, #40	; 0x28
   14c18:	bl	14598 <plt_get_offsets@@Base>
   14c1c:	str	r0, [fp, #-44]	; 0xffffffd4
   14c20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c24:	movw	r1, #0
   14c28:	cmp	r0, r1
   14c2c:	beq	14c3c <mmk_stub_create_static@@Base+0x130>
   14c30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c34:	cmp	r0, #0
   14c38:	bne	14c48 <mmk_stub_create_static@@Base+0x13c>
   14c3c:	mvn	r0, #1
   14c40:	str	r0, [fp, #-4]
   14c44:	b	14cec <mmk_stub_create_static@@Base+0x1e0>
   14c48:	ldr	r0, [pc, #176]	; 14d00 <mmk_stub_create_static@@Base+0x1f4>
   14c4c:	ldr	r0, [pc, r0]
   14c50:	ldr	r1, [pc, #172]	; 14d04 <mmk_stub_create_static@@Base+0x1f8>
   14c54:	ldr	r1, [pc, r1]
   14c58:	ldr	r2, [pc, #168]	; 14d08 <mmk_stub_create_static@@Base+0x1fc>
   14c5c:	ldr	r2, [pc, r2]
   14c60:	ldr	r3, [fp, #-8]
   14c64:	str	r2, [sp, #12]
   14c68:	str	r1, [sp, #16]
   14c6c:	str	r0, [sp, #20]
   14c70:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c74:	str	r0, [sp, #24]
   14c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c7c:	str	r0, [sp, #28]
   14c80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c84:	str	r0, [sp, #32]
   14c88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c8c:	str	r0, [sp, #36]	; 0x24
   14c90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c94:	str	r0, [sp, #40]	; 0x28
   14c98:	movw	r0, #0
   14c9c:	str	r0, [sp, #44]	; 0x2c
   14ca0:	str	r0, [sp, #48]	; 0x30
   14ca4:	add	r0, sp, #12
   14ca8:	str	r0, [sp]
   14cac:	mov	r0, r3
   14cb0:	ldr	r1, [sp]
   14cb4:	movw	r2, #40	; 0x28
   14cb8:	bl	11528 <memcpy@plt>
   14cbc:	ldr	r0, [fp, #-8]
   14cc0:	ldr	r1, [fp, #-16]
   14cc4:	bl	14ecc <create_trampoline@@Base>
   14cc8:	ldr	r1, [fp, #-8]
   14ccc:	str	r0, [r1, #32]
   14cd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14cd8:	ldr	r2, [fp, #-8]
   14cdc:	ldr	r2, [r2, #32]
   14ce0:	bl	1462c <plt_set_offsets@@Base>
   14ce4:	movw	r0, #0
   14ce8:	str	r0, [fp, #-4]
   14cec:	ldr	r0, [fp, #-4]
   14cf0:	mov	sp, fp
   14cf4:	pop	{fp, pc}
   14cf8:	andeq	r2, r1, r8, lsr r5
   14cfc:	andeq	r2, r1, ip, lsr #10
   14d00:	andeq	r2, r1, r0, ror #8
   14d04:	andeq	r2, r1, ip, asr #8
   14d08:	andeq	r2, r1, r0, ror #8

00014d0c <mmk_ctx_asked@@Base>:
   14d0c:	push	{fp, lr}
   14d10:	mov	fp, sp
   14d14:	sub	sp, sp, #8
   14d18:	ldr	r0, [pc, #32]	; 14d40 <mmk_ctx_asked@@Base+0x34>
   14d1c:	add	r0, pc, r0
   14d20:	bl	115dc <__tls_get_addr@plt>
   14d24:	ldr	lr, [r0]
   14d28:	str	lr, [sp, #4]
   14d2c:	mov	lr, #0
   14d30:	str	lr, [r0]
   14d34:	ldr	r0, [sp, #4]
   14d38:	mov	sp, fp
   14d3c:	pop	{fp, pc}
   14d40:	andeq	r2, r1, r8, asr #6

00014d44 <mmk_set_ctx@@Base>:
   14d44:	push	{fp, lr}
   14d48:	mov	fp, sp
   14d4c:	sub	sp, sp, #8
   14d50:	str	r0, [sp, #4]
   14d54:	ldr	r0, [sp, #4]
   14d58:	ldr	r1, [pc, #28]	; 14d7c <mmk_set_ctx@@Base+0x38>
   14d5c:	add	r1, pc, r1
   14d60:	str	r0, [sp]
   14d64:	mov	r0, r1
   14d68:	bl	115dc <__tls_get_addr@plt>
   14d6c:	ldr	r1, [sp]
   14d70:	str	r1, [r0]
   14d74:	mov	sp, fp
   14d78:	pop	{fp, pc}
   14d7c:	andeq	r2, r1, r0, lsl r3

00014d80 <mmk_ctx@@Base>:
   14d80:	push	{fp, lr}
   14d84:	mov	fp, sp
   14d88:	ldr	r0, [pc, #12]	; 14d9c <mmk_ctx@@Base+0x1c>
   14d8c:	add	r0, pc, r0
   14d90:	bl	115dc <__tls_get_addr@plt>
   14d94:	ldr	r0, [r0]
   14d98:	pop	{fp, pc}
   14d9c:	andeq	r2, r1, r0, ror #5

00014da0 <mmk_stub_create@@Base>:
   14da0:	push	{fp, lr}
   14da4:	mov	fp, sp
   14da8:	sub	sp, sp, #24
   14dac:	str	r0, [fp, #-4]
   14db0:	str	r1, [fp, #-8]
   14db4:	str	r2, [sp, #12]
   14db8:	bl	137c0 <mmk_init@@Base>
   14dbc:	movw	r0, #40	; 0x28
   14dc0:	bl	15960 <mmk_malloc@@Base>
   14dc4:	str	r0, [sp, #8]
   14dc8:	ldr	r0, [sp, #8]
   14dcc:	ldr	r1, [fp, #-4]
   14dd0:	ldr	r2, [fp, #-8]
   14dd4:	ldr	r3, [sp, #12]
   14dd8:	bl	14b0c <mmk_stub_create_static@@Base>
   14ddc:	str	r0, [sp, #4]
   14de0:	ldr	r0, [sp, #4]
   14de4:	cmp	r0, #0
   14de8:	bge	14e10 <mmk_stub_create@@Base+0x70>
   14dec:	ldr	r0, [sp, #8]
   14df0:	bl	159e4 <mmk_free@@Base>
   14df4:	ldr	r0, [sp, #4]
   14df8:	str	r0, [sp]
   14dfc:	bl	115b8 <__errno_location@plt>
   14e00:	ldr	lr, [sp]
   14e04:	str	lr, [r0]
   14e08:	movw	r0, #0
   14e0c:	str	r0, [sp, #8]
   14e10:	ldr	r0, [sp, #8]
   14e14:	mov	sp, fp
   14e18:	pop	{fp, pc}

00014e1c <mmk_stub_destroy_static@@Base>:
   14e1c:	push	{fp, lr}
   14e20:	mov	fp, sp
   14e24:	sub	sp, sp, #8
   14e28:	str	r0, [sp, #4]
   14e2c:	ldr	r0, [sp, #4]
   14e30:	ldr	r0, [r0, #24]
   14e34:	ldr	r1, [sp, #4]
   14e38:	ldr	r1, [r1, #28]
   14e3c:	bl	146b4 <plt_reset_offsets@@Base>
   14e40:	ldr	r0, [sp, #4]
   14e44:	ldr	r0, [r0, #24]
   14e48:	bl	159e4 <mmk_free@@Base>
   14e4c:	ldr	r0, [sp, #4]
   14e50:	ldr	r0, [r0, #32]
   14e54:	bl	15060 <destroy_trampoline@@Base>
   14e58:	ldr	r0, [sp, #4]
   14e5c:	ldr	r0, [r0, #16]
   14e60:	bl	159e4 <mmk_free@@Base>
   14e64:	mov	sp, fp
   14e68:	pop	{fp, pc}

00014e6c <mmk_stub_destroy@@Base>:
   14e6c:	push	{fp, lr}
   14e70:	mov	fp, sp
   14e74:	sub	sp, sp, #8
   14e78:	str	r0, [sp, #4]
   14e7c:	ldr	r0, [sp, #4]
   14e80:	bl	14e1c <mmk_stub_destroy_static@@Base>
   14e84:	ldr	r0, [sp, #4]
   14e88:	bl	159e4 <mmk_free@@Base>
   14e8c:	mov	sp, fp
   14e90:	pop	{fp, pc}

00014e94 <mmk_ask_ctx@@Base>:
   14e94:	push	{fp, lr}
   14e98:	mov	fp, sp
   14e9c:	sub	sp, sp, #8
   14ea0:	str	r0, [sp, #4]
   14ea4:	ldr	r0, [pc, #28]	; 14ec8 <mmk_ask_ctx@@Base+0x34>
   14ea8:	add	r0, pc, r0
   14eac:	bl	115dc <__tls_get_addr@plt>
   14eb0:	mov	lr, #1
   14eb4:	str	lr, [r0]
   14eb8:	ldr	r0, [sp, #4]
   14ebc:	blx	r0
   14ec0:	mov	sp, fp
   14ec4:	pop	{fp, pc}
   14ec8:			; <UNDEFINED> instruction: 0x000121bc

00014ecc <create_trampoline@@Base>:
   14ecc:	push	{fp, lr}
   14ed0:	mov	fp, sp
   14ed4:	sub	sp, sp, #56	; 0x38
   14ed8:	ldr	r2, [pc, #340]	; 15034 <create_trampoline@@Base+0x168>
   14edc:	ldr	r2, [pc, r2]
   14ee0:	ldr	r3, [pc, #336]	; 15038 <create_trampoline@@Base+0x16c>
   14ee4:	ldr	r3, [pc, r3]
   14ee8:	sub	r2, r2, r3
   14eec:	str	r0, [fp, #-4]
   14ef0:	str	r1, [fp, #-8]
   14ef4:	str	r2, [fp, #-12]
   14ef8:	ldr	r0, [fp, #-12]
   14efc:	cmp	r0, #4096	; 0x1000
   14f00:	bcc	14f48 <create_trampoline@@Base+0x7c>
   14f04:	ldr	r0, [pc, #304]	; 1503c <create_trampoline@@Base+0x170>
   14f08:	add	r1, pc, r0
   14f0c:	ldr	r0, [pc, #300]	; 15040 <create_trampoline@@Base+0x174>
   14f10:	add	r2, pc, r0
   14f14:	ldr	r0, [pc, #296]	; 15044 <create_trampoline@@Base+0x178>
   14f18:	add	r0, pc, r0
   14f1c:	ldr	r3, [pc, #292]	; 15048 <create_trampoline@@Base+0x17c>
   14f20:	ldr	r3, [pc, r3]
   14f24:	ldr	r3, [r3]
   14f28:	str	r0, [fp, #-20]	; 0xffffffec
   14f2c:	mov	r0, r3
   14f30:	movw	r3, #45	; 0x2d
   14f34:	ldr	ip, [fp, #-20]	; 0xffffffec
   14f38:	str	ip, [sp]
   14f3c:	bl	115ac <fprintf@plt>
   14f40:	str	r0, [fp, #-24]	; 0xffffffe8
   14f44:	bl	115f4 <abort@plt>
   14f48:	b	14f4c <create_trampoline@@Base+0x80>
   14f4c:	movw	r0, #0
   14f50:	str	r0, [sp, #28]
   14f54:	movw	r1, #4096	; 0x1000
   14f58:	movw	r2, #7
   14f5c:	movw	r3, #34	; 0x22
   14f60:	mvn	ip, #0
   14f64:	str	ip, [sp]
   14f68:	ldr	ip, [sp, #28]
   14f6c:	str	ip, [sp, #4]
   14f70:	bl	11594 <mmap@plt>
   14f74:	str	r0, [fp, #-16]
   14f78:	ldr	r0, [fp, #-16]
   14f7c:	mvn	r1, #0
   14f80:	cmp	r0, r1
   14f84:	bne	14fcc <create_trampoline@@Base+0x100>
   14f88:	ldr	r0, [pc, #188]	; 1504c <create_trampoline@@Base+0x180>
   14f8c:	add	r1, pc, r0
   14f90:	ldr	r0, [pc, #184]	; 15050 <create_trampoline@@Base+0x184>
   14f94:	add	r2, pc, r0
   14f98:	ldr	r0, [pc, #180]	; 15054 <create_trampoline@@Base+0x188>
   14f9c:	add	r0, pc, r0
   14fa0:	ldr	r3, [pc, #176]	; 15058 <create_trampoline@@Base+0x18c>
   14fa4:	ldr	r3, [pc, r3]
   14fa8:	ldr	r3, [r3]
   14fac:	str	r0, [sp, #24]
   14fb0:	mov	r0, r3
   14fb4:	movw	r3, #69	; 0x45
   14fb8:	ldr	ip, [sp, #24]
   14fbc:	str	ip, [sp]
   14fc0:	bl	115ac <fprintf@plt>
   14fc4:	str	r0, [sp, #20]
   14fc8:	bl	115f4 <abort@plt>
   14fcc:	b	14fd0 <create_trampoline@@Base+0x104>
   14fd0:	ldr	r0, [pc, #132]	; 1505c <create_trampoline@@Base+0x190>
   14fd4:	ldr	r0, [pc, r0]
   14fd8:	ldr	r1, [fp, #-4]
   14fdc:	ldr	r2, [fp, #-16]
   14fe0:	str	r1, [r2]
   14fe4:	ldr	r1, [fp, #-8]
   14fe8:	ldr	r2, [fp, #-16]
   14fec:	str	r1, [r2, #4]
   14ff0:	ldr	r1, [fp, #-16]
   14ff4:	add	r1, r1, #8
   14ff8:	ldr	r2, [fp, #-12]
   14ffc:	str	r0, [sp, #16]
   15000:	mov	r0, r1
   15004:	ldr	r1, [sp, #16]
   15008:	bl	11528 <memcpy@plt>
   1500c:	ldr	r0, [fp, #-16]
   15010:	movw	r1, #4096	; 0x1000
   15014:	movw	r2, #5
   15018:	bl	11510 <mprotect@plt>
   1501c:	ldr	r1, [fp, #-16]
   15020:	add	r1, r1, #8
   15024:	str	r0, [sp, #12]
   15028:	mov	r0, r1
   1502c:	mov	sp, fp
   15030:	pop	{fp, pc}
   15034:	andeq	r2, r1, ip, lsr #3
   15038:			; <UNDEFINED> instruction: 0x000121b8
   1503c:	andeq	r0, r0, sl, asr lr
   15040:	andeq	r1, r0, r9, lsl r2
   15044:	andeq	r1, r0, r6, ror #4
   15048:	andeq	r2, r1, r4, ror r1
   1504c:	ldrdeq	r0, [r0], -r6
   15050:	muleq	r0, r5, r1
   15054:	strdeq	r1, [r0], -ip
   15058:	strdeq	r2, [r1], -r0
   1505c:	andeq	r2, r1, r8, asr #1

00015060 <destroy_trampoline@@Base>:
   15060:	push	{fp, lr}
   15064:	mov	fp, sp
   15068:	sub	sp, sp, #8
   1506c:	str	r0, [sp, #4]
   15070:	ldr	r0, [sp, #4]
   15074:	mvn	r1, #7
   15078:	add	r0, r0, r1
   1507c:	movw	r1, #4096	; 0x1000
   15080:	bl	115d0 <munmap@plt>
   15084:	str	r0, [sp]
   15088:	mov	sp, fp
   1508c:	pop	{fp, pc}

00015090 <mmk_verify_set_times@@Base>:
   15090:	push	{fp, lr}
   15094:	mov	fp, sp
   15098:	sub	sp, sp, #8
   1509c:	str	r0, [sp, #4]
   150a0:	ldr	r0, [sp, #4]
   150a4:	ldr	r1, [pc, #28]	; 150c8 <mmk_verify_set_times@@Base+0x38>
   150a8:	add	r1, pc, r1
   150ac:	str	r0, [sp]
   150b0:	mov	r0, r1
   150b4:	bl	115dc <__tls_get_addr@plt>
   150b8:	ldr	r1, [sp]
   150bc:	str	r1, [r0]
   150c0:	mov	sp, fp
   150c4:	pop	{fp, pc}
   150c8:	andeq	r1, r1, ip, asr #31

000150cc <mmk_verify_times@@Base>:
   150cc:	push	{fp, lr}
   150d0:	mov	fp, sp
   150d4:	sub	sp, sp, #32
   150d8:	str	r0, [fp, #-8]
   150dc:	ldr	r0, [pc, #304]	; 15214 <mmk_verify_times@@Base+0x148>
   150e0:	add	r0, pc, r0
   150e4:	bl	115dc <__tls_get_addr@plt>
   150e8:	ldr	r0, [r0]
   150ec:	str	r0, [fp, #-12]
   150f0:	ldr	r0, [fp, #-8]
   150f4:	ldr	r0, [r0, #4]
   150f8:	cmp	r0, #0
   150fc:	beq	1511c <mmk_verify_times@@Base+0x50>
   15100:	ldr	r0, [fp, #-12]
   15104:	cmp	r0, #0
   15108:	movw	r0, #0
   1510c:	moveq	r0, #1
   15110:	and	r0, r0, #1
   15114:	str	r0, [fp, #-4]
   15118:	b	15208 <mmk_verify_times@@Base+0x13c>
   1511c:	ldr	r0, [fp, #-8]
   15120:	ldr	r0, [r0, #8]
   15124:	cmp	r0, #0
   15128:	bne	1513c <mmk_verify_times@@Base+0x70>
   1512c:	ldr	r0, [fp, #-8]
   15130:	ldr	r0, [r0, #12]
   15134:	cmp	r0, #0
   15138:	beq	151b0 <mmk_verify_times@@Base+0xe4>
   1513c:	ldr	r0, [fp, #-8]
   15140:	ldr	r0, [r0, #12]
   15144:	cmp	r0, #0
   15148:	beq	1515c <mmk_verify_times@@Base+0x90>
   1514c:	ldr	r0, [fp, #-8]
   15150:	ldr	r0, [r0, #12]
   15154:	str	r0, [sp, #12]
   15158:	b	15164 <mmk_verify_times@@Base+0x98>
   1515c:	ldr	r0, [fp, #-12]
   15160:	str	r0, [sp, #12]
   15164:	ldr	r0, [sp, #12]
   15168:	str	r0, [sp, #16]
   1516c:	ldr	r0, [fp, #-12]
   15170:	ldr	r1, [fp, #-8]
   15174:	ldr	r1, [r1, #8]
   15178:	cmp	r0, r1
   1517c:	movw	r0, #0
   15180:	str	r0, [sp, #8]
   15184:	bcc	151a0 <mmk_verify_times@@Base+0xd4>
   15188:	ldr	r0, [fp, #-12]
   1518c:	ldr	r1, [sp, #16]
   15190:	cmp	r0, r1
   15194:	movw	r0, #0
   15198:	movls	r0, #1
   1519c:	str	r0, [sp, #8]
   151a0:	ldr	r0, [sp, #8]
   151a4:	and	r0, r0, #1
   151a8:	str	r0, [fp, #-4]
   151ac:	b	15208 <mmk_verify_times@@Base+0x13c>
   151b0:	ldr	r0, [fp, #-8]
   151b4:	ldr	r0, [r0, #20]
   151b8:	movw	r1, #0
   151bc:	cmp	r0, r1
   151c0:	beq	151e8 <mmk_verify_times@@Base+0x11c>
   151c4:	ldr	r0, [fp, #-8]
   151c8:	ldr	r0, [r0, #20]
   151cc:	ldr	r1, [fp, #-12]
   151d0:	str	r0, [sp, #4]
   151d4:	mov	r0, r1
   151d8:	ldr	r1, [sp, #4]
   151dc:	blx	r1
   151e0:	str	r0, [fp, #-4]
   151e4:	b	15208 <mmk_verify_times@@Base+0x13c>
   151e8:	ldr	r0, [fp, #-8]
   151ec:	ldr	r0, [r0, #16]
   151f0:	ldr	r1, [fp, #-12]
   151f4:	cmp	r0, r1
   151f8:	movw	r0, #0
   151fc:	moveq	r0, #1
   15200:	and	r0, r0, #1
   15204:	str	r0, [fp, #-4]
   15208:	ldr	r0, [fp, #-4]
   1520c:	mov	sp, fp
   15210:	pop	{fp, pc}
   15214:	muleq	r1, r4, pc	; <UNPREDICTABLE>

00015218 <mmk_verify_register_call@@Base>:
   15218:	push	{fp, lr}
   1521c:	mov	fp, sp
   15220:	sub	sp, sp, #40	; 0x28
   15224:	str	r0, [fp, #-4]
   15228:	str	r1, [fp, #-8]
   1522c:	bl	14d80 <mmk_ctx@@Base>
   15230:	bl	14ad0 <mmk_stub_context@@Base>
   15234:	str	r0, [fp, #-12]
   15238:	ldr	r0, [fp, #-12]
   1523c:	ldr	r0, [r0, #8]
   15240:	movw	r1, #0
   15244:	cmp	r0, r1
   15248:	bne	152c4 <mmk_verify_register_call@@Base+0xac>
   1524c:	movw	r0, #4096	; 0x1000
   15250:	bl	15960 <mmk_malloc@@Base>
   15254:	ldr	lr, [fp, #-12]
   15258:	str	r0, [lr, #8]
   1525c:	ldr	r0, [fp, #-12]
   15260:	ldr	r0, [r0, #8]
   15264:	movw	r1, #0
   15268:	cmp	r0, r1
   1526c:	bne	152b4 <mmk_verify_register_call@@Base+0x9c>
   15270:	ldr	r0, [pc, #456]	; 15440 <mmk_verify_register_call@@Base+0x228>
   15274:	add	r1, pc, r0
   15278:	ldr	r0, [pc, #452]	; 15444 <mmk_verify_register_call@@Base+0x22c>
   1527c:	add	r2, pc, r0
   15280:	ldr	r0, [pc, #448]	; 15448 <mmk_verify_register_call@@Base+0x230>
   15284:	add	r0, pc, r0
   15288:	ldr	r3, [pc, #444]	; 1544c <mmk_verify_register_call@@Base+0x234>
   1528c:	ldr	r3, [pc, r3]
   15290:	ldr	r3, [r3]
   15294:	str	r0, [sp, #20]
   15298:	mov	r0, r3
   1529c:	movw	r3, #79	; 0x4f
   152a0:	ldr	ip, [sp, #20]
   152a4:	str	ip, [sp]
   152a8:	bl	115ac <fprintf@plt>
   152ac:	str	r0, [sp, #16]
   152b0:	bl	115f4 <abort@plt>
   152b4:	b	152b8 <mmk_verify_register_call@@Base+0xa0>
   152b8:	ldr	r0, [fp, #-12]
   152bc:	movw	r1, #4096	; 0x1000
   152c0:	str	r1, [r0, #16]
   152c4:	ldr	r0, [fp, #-12]
   152c8:	ldr	r1, [fp, #-4]
   152cc:	ldr	r2, [fp, #-8]
   152d0:	bl	15460 <mmk_verify_register_call@@Base+0x248>
   152d4:	cmp	r0, #0
   152d8:	beq	152e0 <mmk_verify_register_call@@Base+0xc8>
   152dc:	b	15438 <mmk_verify_register_call@@Base+0x220>
   152e0:	ldr	r0, [fp, #-12]
   152e4:	ldr	r0, [r0, #12]
   152e8:	ldr	r1, [fp, #-8]
   152ec:	add	r0, r0, r1
   152f0:	add	r0, r0, #4
   152f4:	ldr	r1, [fp, #-12]
   152f8:	ldr	r1, [r1, #16]
   152fc:	cmp	r0, r1
   15300:	bcc	153bc <mmk_verify_register_call@@Base+0x1a4>
   15304:	b	15308 <mmk_verify_register_call@@Base+0xf0>
   15308:	ldr	r0, [fp, #-12]
   1530c:	ldr	r0, [r0, #12]
   15310:	ldr	r1, [fp, #-8]
   15314:	add	r0, r0, r1
   15318:	add	r0, r0, #4
   1531c:	ldr	r1, [fp, #-12]
   15320:	ldr	r1, [r1, #16]
   15324:	cmp	r0, r1
   15328:	bcc	15340 <mmk_verify_register_call@@Base+0x128>
   1532c:	ldr	r0, [fp, #-12]
   15330:	ldr	r1, [r0, #16]
   15334:	add	r1, r1, #4096	; 0x1000
   15338:	str	r1, [r0, #16]
   1533c:	b	15308 <mmk_verify_register_call@@Base+0xf0>
   15340:	ldr	r0, [fp, #-12]
   15344:	ldr	r0, [r0, #8]
   15348:	ldr	r1, [fp, #-12]
   1534c:	ldr	r1, [r1, #16]
   15350:	bl	1599c <mmk_realloc@@Base>
   15354:	ldr	r1, [fp, #-12]
   15358:	str	r0, [r1, #8]
   1535c:	ldr	r0, [fp, #-12]
   15360:	ldr	r0, [r0, #8]
   15364:	movw	r1, #0
   15368:	cmp	r0, r1
   1536c:	bne	153b4 <mmk_verify_register_call@@Base+0x19c>
   15370:	ldr	r0, [pc, #216]	; 15450 <mmk_verify_register_call@@Base+0x238>
   15374:	add	r1, pc, r0
   15378:	ldr	r0, [pc, #212]	; 15454 <mmk_verify_register_call@@Base+0x23c>
   1537c:	add	r2, pc, r0
   15380:	ldr	r0, [pc, #208]	; 15458 <mmk_verify_register_call@@Base+0x240>
   15384:	add	r0, pc, r0
   15388:	ldr	r3, [pc, #204]	; 1545c <mmk_verify_register_call@@Base+0x244>
   1538c:	ldr	r3, [pc, r3]
   15390:	ldr	r3, [r3]
   15394:	str	r0, [sp, #12]
   15398:	mov	r0, r3
   1539c:	movw	r3, #91	; 0x5b
   153a0:	ldr	ip, [sp, #12]
   153a4:	str	ip, [sp]
   153a8:	bl	115ac <fprintf@plt>
   153ac:	str	r0, [sp, #8]
   153b0:	bl	115f4 <abort@plt>
   153b4:	b	153b8 <mmk_verify_register_call@@Base+0x1a0>
   153b8:	b	153bc <mmk_verify_register_call@@Base+0x1a4>
   153bc:	ldr	r0, [fp, #-12]
   153c0:	ldr	r0, [r0, #8]
   153c4:	ldr	r1, [fp, #-12]
   153c8:	ldr	r1, [r1, #12]
   153cc:	add	r0, r0, r1
   153d0:	sub	r1, fp, #8
   153d4:	movw	r2, #4
   153d8:	bl	155d8 <mmk_memcpy@@Base>
   153dc:	ldr	r1, [fp, #-12]
   153e0:	ldr	r1, [r1, #8]
   153e4:	ldr	r2, [fp, #-12]
   153e8:	ldr	r2, [r2, #12]
   153ec:	add	r1, r1, r2
   153f0:	add	r1, r1, #4
   153f4:	ldr	r2, [fp, #-4]
   153f8:	ldr	lr, [fp, #-8]
   153fc:	str	r0, [sp, #4]
   15400:	mov	r0, r1
   15404:	mov	r1, r2
   15408:	mov	r2, lr
   1540c:	bl	155d8 <mmk_memcpy@@Base>
   15410:	str	r0, [fp, #-16]
   15414:	ldr	r0, [fp, #-16]
   15418:	movw	r1, #1
   1541c:	str	r1, [r0]
   15420:	ldr	r0, [fp, #-8]
   15424:	add	r0, r0, #4
   15428:	ldr	r1, [fp, #-12]
   1542c:	ldr	r2, [r1, #12]
   15430:	add	r0, r2, r0
   15434:	str	r0, [r1, #12]
   15438:	mov	sp, fp
   1543c:	pop	{fp, pc}
   15440:	andeq	r0, r0, lr, ror #21
   15444:	andeq	r0, r0, lr, lsr #30
   15448:	andeq	r0, r0, r7, ror pc
   1544c:	andeq	r1, r1, r8, lsl #28
   15450:	andeq	r0, r0, lr, ror #19
   15454:	andeq	r0, r0, lr, lsr #28
   15458:	andeq	r0, r0, r7, ror lr
   1545c:	andeq	r1, r1, r8, lsl #26
   15460:	push	{fp, lr}
   15464:	mov	fp, sp
   15468:	sub	sp, sp, #32
   1546c:	str	r0, [fp, #-8]
   15470:	str	r1, [fp, #-12]
   15474:	str	r2, [sp, #16]
   15478:	ldr	r0, [fp, #-12]
   1547c:	add	r0, r0, #4
   15480:	str	r0, [fp, #-12]
   15484:	ldr	r0, [sp, #16]
   15488:	sub	r0, r0, #4
   1548c:	str	r0, [sp, #16]
   15490:	ldr	r0, [fp, #-8]
   15494:	bl	13e38 <mmk_mock_params_begin@@Base>
   15498:	str	r0, [sp, #12]
   1549c:	ldr	r0, [sp, #12]
   154a0:	movw	r1, #0
   154a4:	cmp	r0, r1
   154a8:	beq	1550c <mmk_verify_register_call@@Base+0x2f4>
   154ac:	ldr	r0, [sp, #12]
   154b0:	add	r0, r0, #4
   154b4:	ldr	r1, [fp, #-12]
   154b8:	ldr	r2, [sp, #16]
   154bc:	bl	15520 <mmk_memcmp@@Base>
   154c0:	str	r0, [sp, #8]
   154c4:	ldr	r0, [sp, #8]
   154c8:	cmp	r0, #0
   154cc:	bne	154f4 <mmk_verify_register_call@@Base+0x2dc>
   154d0:	ldr	r0, [sp, #12]
   154d4:	str	r0, [sp, #4]
   154d8:	ldr	r0, [sp, #4]
   154dc:	ldr	r1, [r0]
   154e0:	add	r1, r1, #1
   154e4:	str	r1, [r0]
   154e8:	movw	r0, #1
   154ec:	str	r0, [fp, #-4]
   154f0:	b	15514 <mmk_verify_register_call@@Base+0x2fc>
   154f4:	b	154f8 <mmk_verify_register_call@@Base+0x2e0>
   154f8:	ldr	r0, [fp, #-8]
   154fc:	ldr	r1, [sp, #12]
   15500:	bl	13e8c <mmk_mock_params_next@@Base>
   15504:	str	r0, [sp, #12]
   15508:	b	1549c <mmk_verify_register_call@@Base+0x284>
   1550c:	movw	r0, #0
   15510:	str	r0, [fp, #-4]
   15514:	ldr	r0, [fp, #-4]
   15518:	mov	sp, fp
   1551c:	pop	{fp, pc}

00015520 <mmk_memcmp@@Base>:
   15520:	sub	sp, sp, #24
   15524:	str	r0, [sp, #16]
   15528:	str	r1, [sp, #12]
   1552c:	str	r2, [sp, #8]
   15530:	ldr	r0, [sp, #16]
   15534:	str	r0, [sp, #4]
   15538:	ldr	r0, [sp, #12]
   1553c:	str	r0, [sp]
   15540:	ldr	r0, [sp, #8]
   15544:	cmp	r0, #0
   15548:	beq	155c4 <mmk_memcmp@@Base+0xa4>
   1554c:	ldr	r0, [sp, #4]
   15550:	ldrb	r0, [r0]
   15554:	ldr	r1, [sp]
   15558:	ldrb	r1, [r1]
   1555c:	cmp	r0, r1
   15560:	beq	15594 <mmk_memcmp@@Base+0x74>
   15564:	ldr	r0, [sp, #4]
   15568:	ldrb	r0, [r0]
   1556c:	ldr	r1, [sp]
   15570:	ldrb	r1, [r1]
   15574:	cmp	r0, r1
   15578:	movw	r0, #0
   1557c:	movlt	r0, #1
   15580:	tst	r0, #1
   15584:	mvn	r0, #0
   15588:	moveq	r0, #1
   1558c:	str	r0, [sp, #20]
   15590:	b	155cc <mmk_memcmp@@Base+0xac>
   15594:	b	15598 <mmk_memcmp@@Base+0x78>
   15598:	ldr	r0, [sp, #4]
   1559c:	add	r0, r0, #1
   155a0:	str	r0, [sp, #4]
   155a4:	ldr	r0, [sp]
   155a8:	add	r0, r0, #1
   155ac:	str	r0, [sp]
   155b0:	ldr	r0, [sp, #8]
   155b4:	mvn	r1, #0
   155b8:	add	r0, r0, r1
   155bc:	str	r0, [sp, #8]
   155c0:	b	15540 <mmk_memcmp@@Base+0x20>
   155c4:	movw	r0, #0
   155c8:	str	r0, [sp, #20]
   155cc:	ldr	r0, [sp, #20]
   155d0:	add	sp, sp, #24
   155d4:	bx	lr

000155d8 <mmk_memcpy@@Base>:
   155d8:	sub	sp, sp, #20
   155dc:	str	r0, [sp, #16]
   155e0:	str	r1, [sp, #12]
   155e4:	str	r2, [sp, #8]
   155e8:	ldr	r0, [sp, #12]
   155ec:	str	r0, [sp, #4]
   155f0:	ldr	r0, [sp, #16]
   155f4:	str	r0, [sp]
   155f8:	ldr	r0, [sp, #8]
   155fc:	cmp	r0, #0
   15600:	beq	15640 <mmk_memcpy@@Base+0x68>
   15604:	ldr	r0, [sp, #4]
   15608:	ldrb	r0, [r0]
   1560c:	ldr	r1, [sp]
   15610:	strb	r0, [r1]
   15614:	ldr	r0, [sp]
   15618:	add	r0, r0, #1
   1561c:	str	r0, [sp]
   15620:	ldr	r0, [sp, #4]
   15624:	add	r0, r0, #1
   15628:	str	r0, [sp, #4]
   1562c:	ldr	r0, [sp, #8]
   15630:	mvn	r1, #0
   15634:	add	r0, r0, r1
   15638:	str	r0, [sp, #8]
   1563c:	b	155f8 <mmk_memcpy@@Base+0x20>
   15640:	ldr	r0, [sp, #16]
   15644:	add	sp, sp, #20
   15648:	bx	lr

0001564c <mmk_strneq@@Base>:
   1564c:	sub	sp, sp, #24
   15650:	str	r0, [sp, #16]
   15654:	str	r1, [sp, #12]
   15658:	str	r2, [sp, #8]
   1565c:	ldr	r0, [sp, #16]
   15660:	ldrb	r0, [r0]
   15664:	cmp	r0, #0
   15668:	movw	r0, #0
   1566c:	str	r0, [sp, #4]
   15670:	beq	156a0 <mmk_strneq@@Base+0x54>
   15674:	ldr	r0, [sp, #12]
   15678:	ldrb	r0, [r0]
   1567c:	cmp	r0, #0
   15680:	movw	r0, #0
   15684:	str	r0, [sp, #4]
   15688:	beq	156a0 <mmk_strneq@@Base+0x54>
   1568c:	ldr	r0, [sp, #8]
   15690:	cmp	r0, #0
   15694:	movw	r0, #0
   15698:	movne	r0, #1
   1569c:	str	r0, [sp, #4]
   156a0:	ldr	r0, [sp, #4]
   156a4:	tst	r0, #1
   156a8:	beq	15700 <mmk_strneq@@Base+0xb4>
   156ac:	ldr	r0, [sp, #16]
   156b0:	ldrb	r0, [r0]
   156b4:	ldr	r1, [sp, #12]
   156b8:	ldrb	r1, [r1]
   156bc:	cmp	r0, r1
   156c0:	beq	156d0 <mmk_strneq@@Base+0x84>
   156c4:	movw	r0, #0
   156c8:	str	r0, [sp, #20]
   156cc:	b	15740 <mmk_strneq@@Base+0xf4>
   156d0:	b	156d4 <mmk_strneq@@Base+0x88>
   156d4:	ldr	r0, [sp, #16]
   156d8:	add	r0, r0, #1
   156dc:	str	r0, [sp, #16]
   156e0:	ldr	r0, [sp, #12]
   156e4:	add	r0, r0, #1
   156e8:	str	r0, [sp, #12]
   156ec:	ldr	r0, [sp, #8]
   156f0:	mvn	r1, #0
   156f4:	add	r0, r0, r1
   156f8:	str	r0, [sp, #8]
   156fc:	b	1565c <mmk_strneq@@Base+0x10>
   15700:	ldr	r0, [sp, #8]
   15704:	cmp	r0, #0
   15708:	movw	r0, #1
   1570c:	str	r0, [sp]
   15710:	beq	15734 <mmk_strneq@@Base+0xe8>
   15714:	ldr	r0, [sp, #12]
   15718:	ldrsb	r0, [r0]
   1571c:	cmp	r0, #0
   15720:	movw	r0, #0
   15724:	movne	r0, #1
   15728:	mvn	r1, #0
   1572c:	eor	r0, r0, r1
   15730:	str	r0, [sp]
   15734:	ldr	r0, [sp]
   15738:	and	r0, r0, #1
   1573c:	str	r0, [sp, #20]
   15740:	ldr	r0, [sp, #20]
   15744:	add	sp, sp, #24
   15748:	bx	lr

0001574c <mmk_strchr@@Base>:
   1574c:	sub	sp, sp, #12
   15750:	str	r0, [sp, #4]
   15754:	str	r1, [sp]
   15758:	ldr	r0, [sp, #4]
   1575c:	ldrsb	r0, [r0]
   15760:	cmp	r0, #0
   15764:	beq	1579c <mmk_strchr@@Base+0x50>
   15768:	ldr	r0, [sp, #4]
   1576c:	ldrb	r0, [r0]
   15770:	ldr	r1, [sp]
   15774:	cmp	r0, r1
   15778:	bne	15788 <mmk_strchr@@Base+0x3c>
   1577c:	ldr	r0, [sp, #4]
   15780:	str	r0, [sp, #8]
   15784:	b	157a4 <mmk_strchr@@Base+0x58>
   15788:	b	1578c <mmk_strchr@@Base+0x40>
   1578c:	ldr	r0, [sp, #4]
   15790:	add	r0, r0, #1
   15794:	str	r0, [sp, #4]
   15798:	b	15758 <mmk_strchr@@Base+0xc>
   1579c:	movw	r0, #0
   157a0:	str	r0, [sp, #8]
   157a4:	ldr	r0, [sp, #8]
   157a8:	add	sp, sp, #12
   157ac:	bx	lr

000157b0 <mmk_strcpy@@Base>:
   157b0:	sub	sp, sp, #8
   157b4:	str	r0, [sp, #4]
   157b8:	str	r1, [sp]
   157bc:	ldr	r0, [sp]
   157c0:	ldrsb	r0, [r0]
   157c4:	cmp	r0, #0
   157c8:	beq	157f8 <mmk_strcpy@@Base+0x48>
   157cc:	ldr	r0, [sp]
   157d0:	ldrb	r0, [r0]
   157d4:	ldr	r1, [sp, #4]
   157d8:	strb	r0, [r1]
   157dc:	ldr	r0, [sp, #4]
   157e0:	add	r0, r0, #1
   157e4:	str	r0, [sp, #4]
   157e8:	ldr	r0, [sp]
   157ec:	add	r0, r0, #1
   157f0:	str	r0, [sp]
   157f4:	b	157bc <mmk_strcpy@@Base+0xc>
   157f8:	ldr	r0, [sp, #4]
   157fc:	movw	r1, #0
   15800:	strb	r1, [r0]
   15804:	ldr	r0, [sp, #4]
   15808:	add	sp, sp, #8
   1580c:	bx	lr

00015810 <mmk_strncpy@@Base>:
   15810:	sub	sp, sp, #16
   15814:	str	r0, [sp, #12]
   15818:	str	r1, [sp, #8]
   1581c:	str	r2, [sp, #4]
   15820:	ldr	r0, [sp, #8]
   15824:	ldrb	r0, [r0]
   15828:	cmp	r0, #0
   1582c:	movw	r0, #0
   15830:	str	r0, [sp]
   15834:	beq	1584c <mmk_strncpy@@Base+0x3c>
   15838:	ldr	r0, [sp, #4]
   1583c:	cmp	r0, #0
   15840:	movw	r0, #0
   15844:	movne	r0, #1
   15848:	str	r0, [sp]
   1584c:	ldr	r0, [sp]
   15850:	tst	r0, #1
   15854:	beq	15894 <mmk_strncpy@@Base+0x84>
   15858:	ldr	r0, [sp, #8]
   1585c:	ldrb	r0, [r0]
   15860:	ldr	r1, [sp, #12]
   15864:	strb	r0, [r1]
   15868:	ldr	r0, [sp, #12]
   1586c:	add	r0, r0, #1
   15870:	str	r0, [sp, #12]
   15874:	ldr	r0, [sp, #8]
   15878:	add	r0, r0, #1
   1587c:	str	r0, [sp, #8]
   15880:	ldr	r0, [sp, #4]
   15884:	mvn	r1, #0
   15888:	add	r0, r0, r1
   1588c:	str	r0, [sp, #4]
   15890:	b	15820 <mmk_strncpy@@Base+0x10>
   15894:	ldr	r0, [sp, #12]
   15898:	movw	r1, #0
   1589c:	strb	r1, [r0]
   158a0:	ldr	r0, [sp, #12]
   158a4:	add	sp, sp, #16
   158a8:	bx	lr

000158ac <mmk_strlen@@Base>:
   158ac:	sub	sp, sp, #8
   158b0:	str	r0, [sp, #4]
   158b4:	movw	r0, #0
   158b8:	str	r0, [sp]
   158bc:	ldr	r0, [sp, #4]
   158c0:	ldrsb	r0, [r0]
   158c4:	cmp	r0, #0
   158c8:	beq	158ec <mmk_strlen@@Base+0x40>
   158cc:	b	158d0 <mmk_strlen@@Base+0x24>
   158d0:	ldr	r0, [sp]
   158d4:	add	r0, r0, #1
   158d8:	str	r0, [sp]
   158dc:	ldr	r0, [sp, #4]
   158e0:	add	r0, r0, #1
   158e4:	str	r0, [sp, #4]
   158e8:	b	158bc <mmk_strlen@@Base+0x10>
   158ec:	ldr	r0, [sp]
   158f0:	add	sp, sp, #8
   158f4:	bx	lr

000158f8 <mmk_isspace@@Base>:
   158f8:	sub	sp, sp, #8
   158fc:	str	r0, [sp, #4]
   15900:	ldr	r0, [sp, #4]
   15904:	cmp	r0, #32
   15908:	movw	r0, #1
   1590c:	str	r0, [sp]
   15910:	beq	15950 <mmk_isspace@@Base+0x58>
   15914:	ldr	r0, [sp, #4]
   15918:	cmp	r0, #9
   1591c:	movw	r0, #1
   15920:	str	r0, [sp]
   15924:	beq	15950 <mmk_isspace@@Base+0x58>
   15928:	ldr	r0, [sp, #4]
   1592c:	cmp	r0, #13
   15930:	movw	r0, #1
   15934:	str	r0, [sp]
   15938:	beq	15950 <mmk_isspace@@Base+0x58>
   1593c:	ldr	r0, [sp, #4]
   15940:	cmp	r0, #10
   15944:	movw	r0, #0
   15948:	moveq	r0, #1
   1594c:	str	r0, [sp]
   15950:	ldr	r0, [sp]
   15954:	and	r0, r0, #1
   15958:	add	sp, sp, #8
   1595c:	bx	lr

00015960 <mmk_malloc@@Base>:
   15960:	push	{fp, lr}
   15964:	mov	fp, sp
   15968:	sub	sp, sp, #8
   1596c:	ldr	r1, [pc, #36]	; 15998 <mmk_malloc@@Base+0x38>
   15970:	ldr	r1, [pc, r1]
   15974:	str	r0, [sp, #4]
   15978:	ldr	r0, [r1]
   1597c:	ldr	r1, [sp, #4]
   15980:	str	r0, [sp]
   15984:	mov	r0, r1
   15988:	ldr	r1, [sp]
   1598c:	blx	r1
   15990:	mov	sp, fp
   15994:	pop	{fp, pc}
   15998:	andeq	r1, r1, r4, asr #14

0001599c <mmk_realloc@@Base>:
   1599c:	push	{fp, lr}
   159a0:	mov	fp, sp
   159a4:	sub	sp, sp, #16
   159a8:	ldr	r2, [pc, #48]	; 159e0 <mmk_realloc@@Base+0x44>
   159ac:	ldr	r2, [pc, r2]
   159b0:	str	r0, [fp, #-4]
   159b4:	str	r1, [sp, #8]
   159b8:	ldr	r0, [r2]
   159bc:	ldr	r1, [fp, #-4]
   159c0:	ldr	r2, [sp, #8]
   159c4:	str	r0, [sp, #4]
   159c8:	mov	r0, r1
   159cc:	mov	r1, r2
   159d0:	ldr	r2, [sp, #4]
   159d4:	blx	r2
   159d8:	mov	sp, fp
   159dc:	pop	{fp, pc}
   159e0:	strdeq	r1, [r1], -r8

000159e4 <mmk_free@@Base>:
   159e4:	push	{fp, lr}
   159e8:	mov	fp, sp
   159ec:	sub	sp, sp, #8
   159f0:	ldr	r1, [pc, #36]	; 15a1c <mmk_free@@Base+0x38>
   159f4:	ldr	r1, [pc, r1]
   159f8:	str	r0, [sp, #4]
   159fc:	ldr	r0, [r1]
   15a00:	ldr	r1, [sp, #4]
   15a04:	str	r0, [sp]
   15a08:	mov	r0, r1
   15a0c:	ldr	r1, [sp]
   15a10:	blx	r1
   15a14:	mov	sp, fp
   15a18:	pop	{fp, pc}
   15a1c:			; <UNDEFINED> instruction: 0x000116bc

00015a20 <mmk_init_vital_functions@@Base>:
   15a20:	push	{fp, lr}
   15a24:	mov	fp, sp
   15a28:	sub	sp, sp, #32
   15a2c:	str	r0, [fp, #-4]
   15a30:	movw	r0, #0
   15a34:	bl	11564 <malloc@plt>
   15a38:	movw	r1, #0
   15a3c:	bl	11540 <realloc@plt>
   15a40:	bl	1151c <free@plt>
   15a44:	ldr	r0, [pc, #348]	; 15ba8 <mmk_init_vital_functions@@Base+0x188>
   15a48:	add	r1, pc, r0
   15a4c:	ldr	r0, [fp, #-4]
   15a50:	bl	14708 <plt_get_real_fn@@Base>
   15a54:	ldr	r1, [pc, #328]	; 15ba4 <mmk_init_vital_functions@@Base+0x184>
   15a58:	ldr	r1, [pc, r1]
   15a5c:	str	r0, [r1]
   15a60:	movw	r1, #0
   15a64:	cmp	r0, r1
   15a68:	bne	15ab0 <mmk_init_vital_functions@@Base+0x90>
   15a6c:	ldr	r0, [pc, #312]	; 15bac <mmk_init_vital_functions@@Base+0x18c>
   15a70:	add	r1, pc, r0
   15a74:	ldr	r0, [pc, #308]	; 15bb0 <mmk_init_vital_functions@@Base+0x190>
   15a78:	add	r2, pc, r0
   15a7c:	ldr	r0, [pc, #304]	; 15bb4 <mmk_init_vital_functions@@Base+0x194>
   15a80:	add	r0, pc, r0
   15a84:	ldr	r3, [pc, #300]	; 15bb8 <mmk_init_vital_functions@@Base+0x198>
   15a88:	ldr	r3, [pc, r3]
   15a8c:	ldr	r3, [r3]
   15a90:	str	r0, [fp, #-8]
   15a94:	mov	r0, r3
   15a98:	movw	r3, #88	; 0x58
   15a9c:	ldr	ip, [fp, #-8]
   15aa0:	str	ip, [sp]
   15aa4:	bl	115ac <fprintf@plt>
   15aa8:	str	r0, [fp, #-12]
   15aac:	bl	115f4 <abort@plt>
   15ab0:	b	15ab4 <mmk_init_vital_functions@@Base+0x94>
   15ab4:	b	15ab8 <mmk_init_vital_functions@@Base+0x98>
   15ab8:	ldr	r0, [pc, #256]	; 15bc0 <mmk_init_vital_functions@@Base+0x1a0>
   15abc:	add	r1, pc, r0
   15ac0:	ldr	r0, [fp, #-4]
   15ac4:	bl	14708 <plt_get_real_fn@@Base>
   15ac8:	ldr	r1, [pc, #236]	; 15bbc <mmk_init_vital_functions@@Base+0x19c>
   15acc:	ldr	r1, [pc, r1]
   15ad0:	str	r0, [r1]
   15ad4:	movw	r1, #0
   15ad8:	cmp	r0, r1
   15adc:	bne	15b24 <mmk_init_vital_functions@@Base+0x104>
   15ae0:	ldr	r0, [pc, #220]	; 15bc4 <mmk_init_vital_functions@@Base+0x1a4>
   15ae4:	add	r1, pc, r0
   15ae8:	ldr	r0, [pc, #216]	; 15bc8 <mmk_init_vital_functions@@Base+0x1a8>
   15aec:	add	r2, pc, r0
   15af0:	ldr	r0, [pc, #212]	; 15bcc <mmk_init_vital_functions@@Base+0x1ac>
   15af4:	add	r0, pc, r0
   15af8:	ldr	r3, [pc, #208]	; 15bd0 <mmk_init_vital_functions@@Base+0x1b0>
   15afc:	ldr	r3, [pc, r3]
   15b00:	ldr	r3, [r3]
   15b04:	str	r0, [sp, #16]
   15b08:	mov	r0, r3
   15b0c:	movw	r3, #89	; 0x59
   15b10:	ldr	ip, [sp, #16]
   15b14:	str	ip, [sp]
   15b18:	bl	115ac <fprintf@plt>
   15b1c:	str	r0, [sp, #12]
   15b20:	bl	115f4 <abort@plt>
   15b24:	b	15b28 <mmk_init_vital_functions@@Base+0x108>
   15b28:	b	15b2c <mmk_init_vital_functions@@Base+0x10c>
   15b2c:	ldr	r0, [pc, #164]	; 15bd8 <mmk_init_vital_functions@@Base+0x1b8>
   15b30:	add	r1, pc, r0
   15b34:	ldr	r0, [fp, #-4]
   15b38:	bl	14708 <plt_get_real_fn@@Base>
   15b3c:	ldr	r1, [pc, #144]	; 15bd4 <mmk_init_vital_functions@@Base+0x1b4>
   15b40:	ldr	r1, [pc, r1]
   15b44:	str	r0, [r1]
   15b48:	movw	r1, #0
   15b4c:	cmp	r0, r1
   15b50:	bne	15b98 <mmk_init_vital_functions@@Base+0x178>
   15b54:	ldr	r0, [pc, #128]	; 15bdc <mmk_init_vital_functions@@Base+0x1bc>
   15b58:	add	r1, pc, r0
   15b5c:	ldr	r0, [pc, #124]	; 15be0 <mmk_init_vital_functions@@Base+0x1c0>
   15b60:	add	r2, pc, r0
   15b64:	ldr	r0, [pc, #120]	; 15be4 <mmk_init_vital_functions@@Base+0x1c4>
   15b68:	add	r0, pc, r0
   15b6c:	ldr	r3, [pc, #116]	; 15be8 <mmk_init_vital_functions@@Base+0x1c8>
   15b70:	ldr	r3, [pc, r3]
   15b74:	ldr	r3, [r3]
   15b78:	str	r0, [sp, #8]
   15b7c:	mov	r0, r3
   15b80:	movw	r3, #90	; 0x5a
   15b84:	ldr	ip, [sp, #8]
   15b88:	str	ip, [sp]
   15b8c:	bl	115ac <fprintf@plt>
   15b90:	str	r0, [sp, #4]
   15b94:	bl	115f4 <abort@plt>
   15b98:	b	15b9c <mmk_init_vital_functions@@Base+0x17c>
   15b9c:	mov	sp, fp
   15ba0:	pop	{fp, pc}
   15ba4:	andeq	r1, r1, ip, asr r6
   15ba8:	andeq	r0, r0, r3, asr #15
   15bac:	strdeq	r0, [r0], -r2
   15bb0:	muleq	r0, sl, r7
   15bb4:	andeq	r0, r0, r3, ror #15
   15bb8:	andeq	r1, r1, ip, lsl #12
   15bbc:	ldrdeq	r1, [r1], -r8
   15bc0:	ldrdeq	r0, [r0], -sp
   15bc4:	andeq	r0, r0, lr, ror r2
   15bc8:	andeq	r0, r0, r6, lsr #14
   15bcc:	andeq	r0, r0, sp, lsr #15
   15bd0:	muleq	r1, r8, r5
   15bd4:	andeq	r1, r1, r0, ror r5
   15bd8:	andeq	r0, r0, r9, lsr #15
   15bdc:	andeq	r0, r0, sl, lsl #4
   15be0:			; <UNDEFINED> instruction: 0x000006b2
   15be4:	andeq	r0, r0, r6, ror r7
   15be8:	andeq	r1, r1, r4, lsr #10

00015bec <mmk_when_init@@Base>:
   15bec:	push	{fp, lr}
   15bf0:	mov	fp, sp
   15bf4:	sub	sp, sp, #8
   15bf8:	str	r0, [sp, #4]
   15bfc:	ldr	r0, [sp, #4]
   15c00:	ldr	r1, [pc, #28]	; 15c24 <mmk_when_init@@Base+0x38>
   15c04:	add	r1, pc, r1
   15c08:	str	r0, [sp]
   15c0c:	mov	r0, r1
   15c10:	bl	115dc <__tls_get_addr@plt>
   15c14:	ldr	r1, [sp]
   15c18:	str	r1, [r0]
   15c1c:	mov	sp, fp
   15c20:	pop	{fp, pc}
   15c24:	andeq	r1, r1, r8, ror r4

00015c28 <mmk_when_get_result@@Base>:
   15c28:	push	{fp, lr}
   15c2c:	mov	fp, sp
   15c30:	ldr	r0, [pc, #12]	; 15c44 <mmk_when_get_result@@Base+0x1c>
   15c34:	add	r0, pc, r0
   15c38:	bl	115dc <__tls_get_addr@plt>
   15c3c:	ldr	r0, [r0]
   15c40:	pop	{fp, pc}
   15c44:	andeq	r1, r1, r8, asr #8

00015c48 <mmk_when_impl@@Base>:
   15c48:	push	{fp, lr}
   15c4c:	mov	fp, sp
   15c50:	sub	sp, sp, #16
   15c54:	str	r0, [fp, #-4]
   15c58:	str	r1, [sp, #8]
   15c5c:	ldr	r0, [sp, #8]
   15c60:	str	r0, [sp, #4]
   15c64:	bl	13a18 <mmk_matcher_ctx@@Base>
   15c68:	ldr	r1, [sp, #4]
   15c6c:	str	r0, [r1]
   15c70:	ldr	r0, [fp, #-4]
   15c74:	ldr	r0, [r0]
   15c78:	ldr	r1, [sp, #4]
   15c7c:	str	r0, [r1, #4]
   15c80:	ldr	r0, [sp, #4]
   15c84:	ldr	r1, [fp, #-4]
   15c88:	str	r0, [r1]
   15c8c:	mov	sp, fp
   15c90:	pop	{fp, pc}

00015c94 <mmk_trampoline@@Base>:
   15c94:	sub	ip, pc, #8
   15c98:	push	{r0, r1, r2, r3}
   15c9c:	push	{ip, lr}
   15ca0:	ldr	r0, [ip, #-8]
   15ca4:	ldr	ip, [r0, #4]
   15ca8:	blx	ip
   15cac:	pop	{ip, lr}
   15cb0:	push	{ip, lr}
   15cb4:	ldr	ip, [ip, #-8]
   15cb8:	ldr	ip, [ip]
   15cbc:	blx	ip
   15cc0:	cmp	r0, #0
   15cc4:	bne	15cd4 <mmk_trampoline@@Base+0x40>
   15cc8:	pop	{ip, lr}
   15ccc:	pop	{r0, r1, r2, r3}
   15cd0:	ldr	pc, [ip, #-4]
   15cd4:	pop	{ip, lr}
   15cd8:	pop	{r0, r1, r2, r3}
   15cdc:	push	{ip, lr}
   15ce0:	ldr	ip, [ip, #-8]
   15ce4:	ldr	ip, [ip, #8]
   15ce8:	blx	ip
   15cec:	pop	{ip, pc}

00015cf0 <mmk_trampoline_end@@Base>:
   15cf0:	nop	{0}

00015cf4 <__libc_csu_init@@Base>:
   15cf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15cf8:	mov	r7, r0
   15cfc:	ldr	r6, [pc, #72]	; 15d4c <__libc_csu_init@@Base+0x58>
   15d00:	ldr	r5, [pc, #72]	; 15d50 <__libc_csu_init@@Base+0x5c>
   15d04:	add	r6, pc, r6
   15d08:	add	r5, pc, r5
   15d0c:	sub	r6, r6, r5
   15d10:	mov	r8, r1
   15d14:	mov	r9, r2
   15d18:	bl	114d8 <strstr@plt-0x20>
   15d1c:	asrs	r6, r6, #2
   15d20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d24:	mov	r4, #0
   15d28:	add	r4, r4, #1
   15d2c:	ldr	r3, [r5], #4
   15d30:	mov	r2, r9
   15d34:	mov	r1, r8
   15d38:	mov	r0, r7
   15d3c:	blx	r3
   15d40:	cmp	r6, r4
   15d44:	bne	15d28 <__libc_csu_init@@Base+0x34>
   15d48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d4c:	andeq	r1, r1, r8, ror #3
   15d50:	andeq	r1, r1, r0, ror #3

00015d54 <__libc_csu_fini@@Base>:
   15d54:	bx	lr

Disassembly of section .fini:

00015d58 <.fini>:
   15d58:	push	{r3, lr}
   15d5c:	pop	{r3, pc}
