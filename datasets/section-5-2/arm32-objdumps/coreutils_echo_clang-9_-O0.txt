
../repos/coreutils/src/echo:     file format elf32-littlearm


Disassembly of section .init:

00010c38 <.init>:
   10c38:	push	{r3, lr}
   10c3c:	bl	10eb0 <__assert_fail@plt+0x48>
   10c40:	pop	{r3, pc}

Disassembly of section .plt:

00010c44 <calloc@plt-0x14>:
   10c44:	push	{lr}		; (str lr, [sp, #-4]!)
   10c48:	ldr	lr, [pc, #4]	; 10c54 <calloc@plt-0x4>
   10c4c:	add	lr, pc, lr
   10c50:	ldr	pc, [lr, #8]!
   10c54:	andeq	sl, r1, ip, lsr #7

00010c58 <calloc@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #106496	; 0x1a000
   10c60:	ldr	pc, [ip, #940]!	; 0x3ac

00010c64 <fputs_unlocked@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #106496	; 0x1a000
   10c6c:	ldr	pc, [ip, #932]!	; 0x3a4

00010c70 <raise@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #106496	; 0x1a000
   10c78:	ldr	pc, [ip, #924]!	; 0x39c

00010c7c <strcmp@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #106496	; 0x1a000
   10c84:	ldr	pc, [ip, #916]!	; 0x394

00010c88 <printf@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #106496	; 0x1a000
   10c90:	ldr	pc, [ip, #908]!	; 0x38c

00010c94 <fflush@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #106496	; 0x1a000
   10c9c:	ldr	pc, [ip, #900]!	; 0x384

00010ca0 <free@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #106496	; 0x1a000
   10ca8:	ldr	pc, [ip, #892]!	; 0x37c

00010cac <_exit@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #106496	; 0x1a000
   10cb4:	ldr	pc, [ip, #884]!	; 0x374

00010cb8 <memcpy@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #106496	; 0x1a000
   10cc0:	ldr	pc, [ip, #876]!	; 0x36c

00010cc4 <mbsinit@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #106496	; 0x1a000
   10ccc:	ldr	pc, [ip, #868]!	; 0x364

00010cd0 <memcmp@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #106496	; 0x1a000
   10cd8:	ldr	pc, [ip, #860]!	; 0x35c

00010cdc <realloc@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #106496	; 0x1a000
   10ce4:	ldr	pc, [ip, #852]!	; 0x354

00010ce8 <textdomain@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #106496	; 0x1a000
   10cf0:	ldr	pc, [ip, #844]!	; 0x34c

00010cf4 <iswprint@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #106496	; 0x1a000
   10cfc:	ldr	pc, [ip, #836]!	; 0x344

00010d00 <lseek64@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #106496	; 0x1a000
   10d08:	ldr	pc, [ip, #828]!	; 0x33c

00010d0c <__ctype_get_mb_cur_max@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #106496	; 0x1a000
   10d14:	ldr	pc, [ip, #820]!	; 0x334

00010d18 <__fpending@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #106496	; 0x1a000
   10d20:	ldr	pc, [ip, #812]!	; 0x32c

00010d24 <ferror_unlocked@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #106496	; 0x1a000
   10d2c:	ldr	pc, [ip, #804]!	; 0x324

00010d30 <mbrtowc@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #106496	; 0x1a000
   10d38:	ldr	pc, [ip, #796]!	; 0x31c

00010d3c <error@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #106496	; 0x1a000
   10d44:	ldr	pc, [ip, #788]!	; 0x314

00010d48 <getenv@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #106496	; 0x1a000
   10d50:	ldr	pc, [ip, #780]!	; 0x30c

00010d54 <malloc@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #106496	; 0x1a000
   10d5c:	ldr	pc, [ip, #772]!	; 0x304

00010d60 <__libc_start_main@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #106496	; 0x1a000
   10d68:	ldr	pc, [ip, #764]!	; 0x2fc

00010d6c <__freading@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #106496	; 0x1a000
   10d74:	ldr	pc, [ip, #756]!	; 0x2f4

00010d78 <__gmon_start__@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #106496	; 0x1a000
   10d80:	ldr	pc, [ip, #748]!	; 0x2ec

00010d84 <__ctype_b_loc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #106496	; 0x1a000
   10d8c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d90 <exit@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #106496	; 0x1a000
   10d98:	ldr	pc, [ip, #732]!	; 0x2dc

00010d9c <gettext@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #106496	; 0x1a000
   10da4:	ldr	pc, [ip, #724]!	; 0x2d4

00010da8 <strlen@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #106496	; 0x1a000
   10db0:	ldr	pc, [ip, #716]!	; 0x2cc

00010db4 <fprintf@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #106496	; 0x1a000
   10dbc:	ldr	pc, [ip, #708]!	; 0x2c4

00010dc0 <__errno_location@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #106496	; 0x1a000
   10dc8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dcc <__cxa_atexit@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #106496	; 0x1a000
   10dd4:	ldr	pc, [ip, #692]!	; 0x2b4

00010dd8 <memset@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #106496	; 0x1a000
   10de0:	ldr	pc, [ip, #684]!	; 0x2ac

00010de4 <fileno@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #106496	; 0x1a000
   10dec:	ldr	pc, [ip, #676]!	; 0x2a4

00010df0 <fclose@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #106496	; 0x1a000
   10df8:	ldr	pc, [ip, #668]!	; 0x29c

00010dfc <fseeko64@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #106496	; 0x1a000
   10e04:	ldr	pc, [ip, #660]!	; 0x294

00010e08 <setlocale@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #106496	; 0x1a000
   10e10:	ldr	pc, [ip, #652]!	; 0x28c

00010e14 <strrchr@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #106496	; 0x1a000
   10e1c:	ldr	pc, [ip, #644]!	; 0x284

00010e20 <nl_langinfo@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #106496	; 0x1a000
   10e28:	ldr	pc, [ip, #636]!	; 0x27c

00010e2c <bindtextdomain@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #106496	; 0x1a000
   10e34:	ldr	pc, [ip, #628]!	; 0x274

00010e38 <fputs@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #106496	; 0x1a000
   10e40:	ldr	pc, [ip, #620]!	; 0x26c

00010e44 <strncmp@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #106496	; 0x1a000
   10e4c:	ldr	pc, [ip, #612]!	; 0x264

00010e50 <abort@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #106496	; 0x1a000
   10e58:	ldr	pc, [ip, #604]!	; 0x25c

00010e5c <putchar_unlocked@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #106496	; 0x1a000
   10e64:	ldr	pc, [ip, #596]!	; 0x254

00010e68 <__assert_fail@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #106496	; 0x1a000
   10e70:	ldr	pc, [ip, #588]!	; 0x24c

Disassembly of section .text:

00010e74 <.text>:
   10e74:	mov	fp, #0
   10e78:	mov	lr, #0
   10e7c:	pop	{r1}		; (ldr r1, [sp], #4)
   10e80:	mov	r2, sp
   10e84:	push	{r2}		; (str r2, [sp, #-4]!)
   10e88:	push	{r0}		; (str r0, [sp, #-4]!)
   10e8c:	ldr	ip, [pc, #16]	; 10ea4 <__assert_fail@plt+0x3c>
   10e90:	push	{ip}		; (str ip, [sp, #-4]!)
   10e94:	ldr	r0, [pc, #12]	; 10ea8 <__assert_fail@plt+0x40>
   10e98:	ldr	r3, [pc, #12]	; 10eac <__assert_fail@plt+0x44>
   10e9c:	bl	10d60 <__libc_start_main@plt>
   10ea0:	bl	10e50 <abort@plt>
   10ea4:	muleq	r1, r8, r2
   10ea8:	ldrdeq	r1, [r1], -r8
   10eac:	andeq	sl, r1, r8, lsr r2
   10eb0:	ldr	r3, [pc, #20]	; 10ecc <__assert_fail@plt+0x64>
   10eb4:	ldr	r2, [pc, #20]	; 10ed0 <__assert_fail@plt+0x68>
   10eb8:	add	r3, pc, r3
   10ebc:	ldr	r2, [r3, r2]
   10ec0:	cmp	r2, #0
   10ec4:	bxeq	lr
   10ec8:	b	10d78 <__gmon_start__@plt>
   10ecc:	andeq	sl, r1, r0, asr #2
   10ed0:	andeq	r0, r0, r0, asr #1
   10ed4:	ldr	r0, [pc, #24]	; 10ef4 <__assert_fail@plt+0x8c>
   10ed8:	ldr	r3, [pc, #24]	; 10ef8 <__assert_fail@plt+0x90>
   10edc:	cmp	r3, r0
   10ee0:	bxeq	lr
   10ee4:	ldr	r3, [pc, #16]	; 10efc <__assert_fail@plt+0x94>
   10ee8:	cmp	r3, #0
   10eec:	bxeq	lr
   10ef0:	bx	r3
   10ef4:	andeq	fp, r2, r4, lsl r1
   10ef8:	andeq	fp, r2, r4, lsl r1
   10efc:	andeq	r0, r0, r0
   10f00:	ldr	r0, [pc, #36]	; 10f2c <__assert_fail@plt+0xc4>
   10f04:	ldr	r1, [pc, #36]	; 10f30 <__assert_fail@plt+0xc8>
   10f08:	sub	r1, r1, r0
   10f0c:	asr	r1, r1, #2
   10f10:	add	r1, r1, r1, lsr #31
   10f14:	asrs	r1, r1, #1
   10f18:	bxeq	lr
   10f1c:	ldr	r3, [pc, #16]	; 10f34 <__assert_fail@plt+0xcc>
   10f20:	cmp	r3, #0
   10f24:	bxeq	lr
   10f28:	bx	r3
   10f2c:	andeq	fp, r2, r4, lsl r1
   10f30:	andeq	fp, r2, r4, lsl r1
   10f34:	andeq	r0, r0, r0
   10f38:	push	{r4, lr}
   10f3c:	ldr	r4, [pc, #24]	; 10f5c <__assert_fail@plt+0xf4>
   10f40:	ldrb	r3, [r4]
   10f44:	cmp	r3, #0
   10f48:	popne	{r4, pc}
   10f4c:	bl	10ed4 <__assert_fail@plt+0x6c>
   10f50:	mov	r3, #1
   10f54:	strb	r3, [r4]
   10f58:	pop	{r4, pc}
   10f5c:	andeq	fp, r2, r8, lsr #2
   10f60:	b	10f00 <__assert_fail@plt+0x98>
   10f64:	push	{fp, lr}
   10f68:	mov	fp, sp
   10f6c:	sub	sp, sp, #48	; 0x30
   10f70:	str	r0, [fp, #-4]
   10f74:	ldr	r0, [fp, #-4]
   10f78:	cmp	r0, #0
   10f7c:	bne	10f84 <__assert_fail@plt+0x11c>
   10f80:	b	10fa4 <__assert_fail@plt+0x13c>
   10f84:	movw	r0, #41664	; 0xa2c0
   10f88:	movt	r0, #1
   10f8c:	movw	r1, #41687	; 0xa2d7
   10f90:	movt	r1, #1
   10f94:	movw	r2, #40	; 0x28
   10f98:	movw	r3, #41698	; 0xa2e2
   10f9c:	movt	r3, #1
   10fa0:	bl	10e68 <__assert_fail@plt>
   10fa4:	movw	r0, #41714	; 0xa2f2
   10fa8:	movt	r0, #1
   10fac:	bl	10d9c <gettext@plt>
   10fb0:	movw	r1, #45364	; 0xb134
   10fb4:	movt	r1, #2
   10fb8:	ldr	r2, [r1]
   10fbc:	ldr	r1, [r1]
   10fc0:	str	r1, [fp, #-8]
   10fc4:	mov	r1, r2
   10fc8:	ldr	r2, [fp, #-8]
   10fcc:	bl	10c88 <printf@plt>
   10fd0:	movw	r1, #41777	; 0xa331
   10fd4:	movt	r1, #1
   10fd8:	str	r0, [fp, #-12]
   10fdc:	mov	r0, r1
   10fe0:	bl	10d9c <gettext@plt>
   10fe4:	movw	r1, #45348	; 0xb124
   10fe8:	movt	r1, #2
   10fec:	ldr	r1, [r1]
   10ff0:	bl	10c64 <fputs_unlocked@plt>
   10ff4:	movw	r1, #41870	; 0xa38e
   10ff8:	movt	r1, #1
   10ffc:	str	r0, [fp, #-16]
   11000:	mov	r0, r1
   11004:	bl	10d9c <gettext@plt>
   11008:	movw	r1, #45348	; 0xb124
   1100c:	movt	r1, #2
   11010:	ldr	r1, [r1]
   11014:	bl	10c64 <fputs_unlocked@plt>
   11018:	movw	r1, #42002	; 0xa412
   1101c:	movt	r1, #1
   11020:	str	r0, [fp, #-20]	; 0xffffffec
   11024:	mov	r0, r1
   11028:	bl	10d9c <gettext@plt>
   1102c:	movw	r1, #45348	; 0xb124
   11030:	movt	r1, #2
   11034:	ldr	r1, [r1]
   11038:	bl	10c64 <fputs_unlocked@plt>
   1103c:	movw	r1, #42047	; 0xa43f
   11040:	movt	r1, #1
   11044:	str	r0, [sp, #24]
   11048:	mov	r0, r1
   1104c:	bl	10d9c <gettext@plt>
   11050:	movw	r1, #45348	; 0xb124
   11054:	movt	r1, #2
   11058:	ldr	r1, [r1]
   1105c:	bl	10c64 <fputs_unlocked@plt>
   11060:	movw	r1, #42101	; 0xa475
   11064:	movt	r1, #1
   11068:	str	r0, [sp, #20]
   1106c:	mov	r0, r1
   11070:	bl	10d9c <gettext@plt>
   11074:	movw	r1, #45348	; 0xb124
   11078:	movt	r1, #2
   1107c:	ldr	r1, [r1]
   11080:	bl	10c64 <fputs_unlocked@plt>
   11084:	movw	r1, #42164	; 0xa4b4
   11088:	movt	r1, #1
   1108c:	str	r0, [sp, #16]
   11090:	mov	r0, r1
   11094:	bl	10d9c <gettext@plt>
   11098:	movw	r1, #45348	; 0xb124
   1109c:	movt	r1, #2
   110a0:	ldr	r1, [r1]
   110a4:	bl	10c64 <fputs_unlocked@plt>
   110a8:	movw	r1, #42393	; 0xa599
   110ac:	movt	r1, #1
   110b0:	str	r0, [sp, #12]
   110b4:	mov	r0, r1
   110b8:	bl	10d9c <gettext@plt>
   110bc:	movw	r1, #45348	; 0xb124
   110c0:	movt	r1, #2
   110c4:	ldr	r1, [r1]
   110c8:	bl	10c64 <fputs_unlocked@plt>
   110cc:	movw	r1, #42503	; 0xa607
   110d0:	movt	r1, #1
   110d4:	str	r0, [sp, #8]
   110d8:	mov	r0, r1
   110dc:	bl	10d9c <gettext@plt>
   110e0:	movw	r1, #42694	; 0xa6c6
   110e4:	movt	r1, #1
   110e8:	bl	10c88 <printf@plt>
   110ec:	movw	r1, #42699	; 0xa6cb
   110f0:	movt	r1, #1
   110f4:	str	r0, [sp, #4]
   110f8:	mov	r0, r1
   110fc:	bl	10d9c <gettext@plt>
   11100:	movw	r1, #45348	; 0xb124
   11104:	movt	r1, #2
   11108:	ldr	r1, [r1]
   1110c:	bl	10c64 <fputs_unlocked@plt>
   11110:	movw	r1, #42694	; 0xa6c6
   11114:	movt	r1, #1
   11118:	str	r0, [sp]
   1111c:	mov	r0, r1
   11120:	bl	1112c <__assert_fail@plt+0x2c4>
   11124:	ldr	r0, [fp, #-4]
   11128:	bl	10d90 <exit@plt>
   1112c:	push	{fp, lr}
   11130:	mov	fp, sp
   11134:	sub	sp, sp, #88	; 0x58
   11138:	add	r1, sp, #28
   1113c:	movw	r2, #43212	; 0xa8cc
   11140:	movt	r2, #1
   11144:	str	r0, [fp, #-4]
   11148:	mov	r0, r1
   1114c:	str	r1, [sp, #12]
   11150:	mov	r1, r2
   11154:	movw	r2, #56	; 0x38
   11158:	bl	10cb8 <memcpy@plt>
   1115c:	ldr	r0, [fp, #-4]
   11160:	str	r0, [sp, #24]
   11164:	ldr	r0, [sp, #12]
   11168:	str	r0, [sp, #20]
   1116c:	ldr	r0, [sp, #20]
   11170:	ldr	r0, [r0]
   11174:	movw	r1, #0
   11178:	cmp	r0, r1
   1117c:	movw	r0, #0
   11180:	str	r0, [sp, #8]
   11184:	beq	111b0 <__assert_fail@plt+0x348>
   11188:	ldr	r0, [fp, #-4]
   1118c:	ldr	r1, [sp, #20]
   11190:	ldr	r1, [r1]
   11194:	bl	10c7c <strcmp@plt>
   11198:	cmp	r0, #0
   1119c:	movw	r0, #0
   111a0:	moveq	r0, #1
   111a4:	mvn	r1, #0
   111a8:	eor	r0, r0, r1
   111ac:	str	r0, [sp, #8]
   111b0:	ldr	r0, [sp, #8]
   111b4:	tst	r0, #1
   111b8:	beq	111cc <__assert_fail@plt+0x364>
   111bc:	ldr	r0, [sp, #20]
   111c0:	add	r0, r0, #8
   111c4:	str	r0, [sp, #20]
   111c8:	b	1116c <__assert_fail@plt+0x304>
   111cc:	ldr	r0, [sp, #20]
   111d0:	ldr	r0, [r0, #4]
   111d4:	movw	r1, #0
   111d8:	cmp	r0, r1
   111dc:	beq	111ec <__assert_fail@plt+0x384>
   111e0:	ldr	r0, [sp, #20]
   111e4:	ldr	r0, [r0, #4]
   111e8:	str	r0, [sp, #24]
   111ec:	movw	r0, #42994	; 0xa7f2
   111f0:	movt	r0, #1
   111f4:	bl	10d9c <gettext@plt>
   111f8:	movw	r1, #42864	; 0xa770
   111fc:	movt	r1, #1
   11200:	movw	r2, #43017	; 0xa809
   11204:	movt	r2, #1
   11208:	bl	10c88 <printf@plt>
   1120c:	movw	r1, #5
   11210:	str	r0, [sp, #4]
   11214:	mov	r0, r1
   11218:	movw	r1, #0
   1121c:	bl	10e08 <setlocale@plt>
   11220:	str	r0, [sp, #16]
   11224:	ldr	r0, [sp, #16]
   11228:	movw	r1, #0
   1122c:	cmp	r0, r1
   11230:	beq	1126c <__assert_fail@plt+0x404>
   11234:	ldr	r0, [sp, #16]
   11238:	movw	r1, #43057	; 0xa831
   1123c:	movt	r1, #1
   11240:	movw	r2, #3
   11244:	bl	10e44 <strncmp@plt>
   11248:	cmp	r0, #0
   1124c:	beq	1126c <__assert_fail@plt+0x404>
   11250:	movw	r0, #43061	; 0xa835
   11254:	movt	r0, #1
   11258:	bl	10d9c <gettext@plt>
   1125c:	movw	r1, #45348	; 0xb124
   11260:	movt	r1, #2
   11264:	ldr	r1, [r1]
   11268:	bl	10c64 <fputs_unlocked@plt>
   1126c:	movw	r0, #43132	; 0xa87c
   11270:	movt	r0, #1
   11274:	bl	10d9c <gettext@plt>
   11278:	ldr	r2, [fp, #-4]
   1127c:	movw	r1, #43017	; 0xa809
   11280:	movt	r1, #1
   11284:	bl	10c88 <printf@plt>
   11288:	movw	r1, #43159	; 0xa897
   1128c:	movt	r1, #1
   11290:	str	r0, [sp]
   11294:	mov	r0, r1
   11298:	bl	10d9c <gettext@plt>
   1129c:	ldr	r1, [sp, #24]
   112a0:	ldr	r2, [sp, #24]
   112a4:	ldr	r3, [fp, #-4]
   112a8:	cmp	r2, r3
   112ac:	movw	r2, #0
   112b0:	moveq	r2, #1
   112b4:	tst	r2, #1
   112b8:	movw	r2, #42163	; 0xa4b3
   112bc:	movt	r2, #1
   112c0:	movw	r3, #42927	; 0xa7af
   112c4:	movt	r3, #1
   112c8:	movne	r2, r3
   112cc:	bl	10c88 <printf@plt>
   112d0:	mov	sp, fp
   112d4:	pop	{fp, pc}
   112d8:	push	{fp, lr}
   112dc:	mov	fp, sp
   112e0:	sub	sp, sp, #88	; 0x58
   112e4:	movw	r2, #0
   112e8:	str	r2, [fp, #-4]
   112ec:	str	r0, [fp, #-8]
   112f0:	str	r1, [fp, #-12]
   112f4:	movw	r0, #1
   112f8:	strb	r0, [fp, #-13]
   112fc:	movw	r0, #42804	; 0xa734
   11300:	movt	r0, #1
   11304:	bl	10d48 <getenv@plt>
   11308:	movw	r1, #0
   1130c:	cmp	r0, r1
   11310:	movw	r0, #0
   11314:	movne	r0, #1
   11318:	mvn	r1, #0
   1131c:	eor	r0, r0, r1
   11320:	eor	r0, r0, r1
   11324:	and	r0, r0, #1
   11328:	strb	r0, [fp, #-14]
   1132c:	ldrb	r0, [fp, #-14]
   11330:	tst	r0, #1
   11334:	movw	r0, #1
   11338:	str	r0, [fp, #-36]	; 0xffffffdc
   1133c:	beq	11384 <__assert_fail@plt+0x51c>
   11340:	ldr	r0, [fp, #-8]
   11344:	movw	r1, #1
   11348:	cmp	r1, r0
   1134c:	movw	r0, #0
   11350:	str	r0, [fp, #-40]	; 0xffffffd8
   11354:	bge	1137c <__assert_fail@plt+0x514>
   11358:	ldr	r0, [fp, #-12]
   1135c:	ldr	r0, [r0, #4]
   11360:	movw	r1, #42820	; 0xa744
   11364:	movt	r1, #1
   11368:	bl	10c7c <strcmp@plt>
   1136c:	cmp	r0, #0
   11370:	movw	r0, #0
   11374:	moveq	r0, #1
   11378:	str	r0, [fp, #-40]	; 0xffffffd8
   1137c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11380:	str	r0, [fp, #-36]	; 0xffffffdc
   11384:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11388:	and	r0, r0, #1
   1138c:	strb	r0, [fp, #-15]
   11390:	movw	r0, #0
   11394:	strb	r0, [fp, #-16]
   11398:	ldr	r0, [fp, #-12]
   1139c:	ldr	r0, [r0]
   113a0:	bl	11d98 <__assert_fail@plt+0xf30>
   113a4:	movw	r0, #6
   113a8:	movw	r1, #42163	; 0xa4b3
   113ac:	movt	r1, #1
   113b0:	bl	10e08 <setlocale@plt>
   113b4:	movw	r1, #42868	; 0xa774
   113b8:	movt	r1, #1
   113bc:	str	r0, [sp, #44]	; 0x2c
   113c0:	mov	r0, r1
   113c4:	movw	r1, #42823	; 0xa747
   113c8:	movt	r1, #1
   113cc:	bl	10e2c <bindtextdomain@plt>
   113d0:	movw	r1, #42868	; 0xa774
   113d4:	movt	r1, #1
   113d8:	str	r0, [sp, #40]	; 0x28
   113dc:	mov	r0, r1
   113e0:	bl	10ce8 <textdomain@plt>
   113e4:	movw	r1, #7288	; 0x1c78
   113e8:	movt	r1, #1
   113ec:	str	r0, [sp, #36]	; 0x24
   113f0:	mov	r0, r1
   113f4:	bl	1a29c <__assert_fail@plt+0x9434>
   113f8:	ldrb	r1, [fp, #-15]
   113fc:	tst	r1, #1
   11400:	beq	114ac <__assert_fail@plt+0x644>
   11404:	ldr	r0, [fp, #-8]
   11408:	cmp	r0, #2
   1140c:	bne	114ac <__assert_fail@plt+0x644>
   11410:	ldr	r0, [fp, #-12]
   11414:	ldr	r0, [r0, #4]
   11418:	movw	r1, #42847	; 0xa75f
   1141c:	movt	r1, #1
   11420:	bl	10c7c <strcmp@plt>
   11424:	cmp	r0, #0
   11428:	bne	11434 <__assert_fail@plt+0x5cc>
   1142c:	movw	r0, #0
   11430:	bl	10f64 <__assert_fail@plt+0xfc>
   11434:	ldr	r0, [fp, #-12]
   11438:	ldr	r0, [r0, #4]
   1143c:	movw	r1, #42854	; 0xa766
   11440:	movt	r1, #1
   11444:	bl	10c7c <strcmp@plt>
   11448:	cmp	r0, #0
   1144c:	bne	114a8 <__assert_fail@plt+0x640>
   11450:	movw	r0, #45348	; 0xb124
   11454:	movt	r0, #2
   11458:	ldr	r0, [r0]
   1145c:	movw	r1, #45260	; 0xb0cc
   11460:	movt	r1, #2
   11464:	ldr	r3, [r1]
   11468:	movw	r1, #42694	; 0xa6c6
   1146c:	movt	r1, #1
   11470:	movw	r2, #42864	; 0xa770
   11474:	movt	r2, #1
   11478:	movw	ip, #42878	; 0xa77e
   1147c:	movt	ip, #1
   11480:	str	ip, [sp]
   11484:	movw	ip, #42888	; 0xa788
   11488:	movt	ip, #1
   1148c:	str	ip, [sp, #4]
   11490:	movw	ip, #0
   11494:	str	ip, [sp, #8]
   11498:	bl	14c70 <__assert_fail@plt+0x3e08>
   1149c:	movw	r0, #0
   114a0:	str	r0, [fp, #-4]
   114a4:	b	11b00 <__assert_fail@plt+0xc98>
   114a8:	b	114ac <__assert_fail@plt+0x644>
   114ac:	ldr	r0, [fp, #-8]
   114b0:	mvn	r1, #0
   114b4:	add	r0, r0, r1
   114b8:	str	r0, [fp, #-8]
   114bc:	ldr	r0, [fp, #-12]
   114c0:	add	r0, r0, #4
   114c4:	str	r0, [fp, #-12]
   114c8:	ldrb	r0, [fp, #-15]
   114cc:	tst	r0, #1
   114d0:	beq	11650 <__assert_fail@plt+0x7e8>
   114d4:	b	114d8 <__assert_fail@plt+0x670>
   114d8:	ldr	r0, [fp, #-8]
   114dc:	cmp	r0, #0
   114e0:	movw	r0, #0
   114e4:	str	r0, [sp, #32]
   114e8:	ble	11508 <__assert_fail@plt+0x6a0>
   114ec:	ldr	r0, [fp, #-12]
   114f0:	ldr	r0, [r0]
   114f4:	ldrb	r0, [r0]
   114f8:	cmp	r0, #45	; 0x2d
   114fc:	movw	r0, #0
   11500:	moveq	r0, #1
   11504:	str	r0, [sp, #32]
   11508:	ldr	r0, [sp, #32]
   1150c:	tst	r0, #1
   11510:	beq	1164c <__assert_fail@plt+0x7e4>
   11514:	ldr	r0, [fp, #-12]
   11518:	ldr	r0, [r0]
   1151c:	add	r0, r0, #1
   11520:	str	r0, [fp, #-20]	; 0xffffffec
   11524:	movw	r0, #0
   11528:	str	r0, [fp, #-24]	; 0xffffffe8
   1152c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11530:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11534:	add	r0, r0, r1
   11538:	ldrsb	r0, [r0]
   1153c:	cmp	r0, #0
   11540:	beq	115a0 <__assert_fail@plt+0x738>
   11544:	ldr	r0, [fp, #-20]	; 0xffffffec
   11548:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1154c:	ldrb	r0, [r0, r1]
   11550:	mov	r1, r0
   11554:	cmp	r0, #69	; 0x45
   11558:	str	r1, [sp, #28]
   1155c:	beq	11584 <__assert_fail@plt+0x71c>
   11560:	b	11564 <__assert_fail@plt+0x6fc>
   11564:	ldr	r0, [sp, #28]
   11568:	cmp	r0, #101	; 0x65
   1156c:	beq	11584 <__assert_fail@plt+0x71c>
   11570:	b	11574 <__assert_fail@plt+0x70c>
   11574:	ldr	r0, [sp, #28]
   11578:	cmp	r0, #110	; 0x6e
   1157c:	bne	11588 <__assert_fail@plt+0x720>
   11580:	b	11584 <__assert_fail@plt+0x71c>
   11584:	b	1158c <__assert_fail@plt+0x724>
   11588:	b	11654 <__assert_fail@plt+0x7ec>
   1158c:	b	11590 <__assert_fail@plt+0x728>
   11590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11594:	add	r0, r0, #1
   11598:	str	r0, [fp, #-24]	; 0xffffffe8
   1159c:	b	1152c <__assert_fail@plt+0x6c4>
   115a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115a4:	cmp	r0, #0
   115a8:	bne	115b0 <__assert_fail@plt+0x748>
   115ac:	b	11654 <__assert_fail@plt+0x7ec>
   115b0:	b	115b4 <__assert_fail@plt+0x74c>
   115b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   115b8:	ldrsb	r0, [r0]
   115bc:	cmp	r0, #0
   115c0:	beq	1162c <__assert_fail@plt+0x7c4>
   115c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   115c8:	add	r1, r0, #1
   115cc:	str	r1, [fp, #-20]	; 0xffffffec
   115d0:	ldrb	r0, [r0]
   115d4:	mov	r1, r0
   115d8:	cmp	r0, #69	; 0x45
   115dc:	str	r1, [sp, #24]
   115e0:	beq	11614 <__assert_fail@plt+0x7ac>
   115e4:	b	115e8 <__assert_fail@plt+0x780>
   115e8:	ldr	r0, [sp, #24]
   115ec:	cmp	r0, #101	; 0x65
   115f0:	beq	11608 <__assert_fail@plt+0x7a0>
   115f4:	b	115f8 <__assert_fail@plt+0x790>
   115f8:	ldr	r0, [sp, #24]
   115fc:	cmp	r0, #110	; 0x6e
   11600:	beq	11620 <__assert_fail@plt+0x7b8>
   11604:	b	11628 <__assert_fail@plt+0x7c0>
   11608:	movw	r0, #1
   1160c:	strb	r0, [fp, #-16]
   11610:	b	11628 <__assert_fail@plt+0x7c0>
   11614:	movw	r0, #0
   11618:	strb	r0, [fp, #-16]
   1161c:	b	11628 <__assert_fail@plt+0x7c0>
   11620:	movw	r0, #0
   11624:	strb	r0, [fp, #-13]
   11628:	b	115b4 <__assert_fail@plt+0x74c>
   1162c:	ldr	r0, [fp, #-8]
   11630:	mvn	r1, #0
   11634:	add	r0, r0, r1
   11638:	str	r0, [fp, #-8]
   1163c:	ldr	r0, [fp, #-12]
   11640:	add	r0, r0, #4
   11644:	str	r0, [fp, #-12]
   11648:	b	114d8 <__assert_fail@plt+0x670>
   1164c:	b	11650 <__assert_fail@plt+0x7e8>
   11650:	b	11654 <__assert_fail@plt+0x7ec>
   11654:	ldrb	r0, [fp, #-16]
   11658:	tst	r0, #1
   1165c:	bne	1166c <__assert_fail@plt+0x804>
   11660:	ldrb	r0, [fp, #-14]
   11664:	tst	r0, #1
   11668:	beq	11a84 <__assert_fail@plt+0xc1c>
   1166c:	b	11670 <__assert_fail@plt+0x808>
   11670:	ldr	r0, [fp, #-8]
   11674:	cmp	r0, #0
   11678:	ble	11a80 <__assert_fail@plt+0xc18>
   1167c:	ldr	r0, [fp, #-12]
   11680:	ldr	r0, [r0]
   11684:	str	r0, [fp, #-28]	; 0xffffffe4
   11688:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1168c:	add	r1, r0, #1
   11690:	str	r1, [fp, #-28]	; 0xffffffe4
   11694:	ldrb	r0, [r0]
   11698:	strb	r0, [fp, #-29]	; 0xffffffe3
   1169c:	sxtb	r0, r0
   116a0:	cmp	r0, #0
   116a4:	beq	11a4c <__assert_fail@plt+0xbe4>
   116a8:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   116ac:	cmp	r0, #92	; 0x5c
   116b0:	bne	11a40 <__assert_fail@plt+0xbd8>
   116b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   116b8:	ldrb	r0, [r0]
   116bc:	cmp	r0, #0
   116c0:	beq	11a40 <__assert_fail@plt+0xbd8>
   116c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   116c8:	add	r1, r0, #1
   116cc:	str	r1, [fp, #-28]	; 0xffffffe4
   116d0:	ldrb	r0, [r0]
   116d4:	strb	r0, [fp, #-29]	; 0xffffffe3
   116d8:	sub	r0, r0, #48	; 0x30
   116dc:	cmp	r0, #72	; 0x48
   116e0:	str	r0, [sp, #20]
   116e4:	bhi	11a34 <__assert_fail@plt+0xbcc>
   116e8:	add	r0, pc, #8
   116ec:	ldr	r1, [sp, #20]
   116f0:	ldr	r0, [r0, r1, lsl #2]
   116f4:	mov	pc, r0
   116f8:	andeq	r1, r1, r0, asr #18
   116fc:	andeq	r1, r1, r4, lsl #19
   11700:	andeq	r1, r1, r4, lsl #19
   11704:	andeq	r1, r1, r4, lsl #19
   11708:	andeq	r1, r1, r4, lsl #19
   1170c:	andeq	r1, r1, r4, lsl #19
   11710:	andeq	r1, r1, r4, lsl #19
   11714:	andeq	r1, r1, r4, lsl #19
   11718:	andeq	r1, r1, r4, lsr sl
   1171c:	andeq	r1, r1, r4, lsr sl
   11720:	andeq	r1, r1, r4, lsr sl
   11724:	andeq	r1, r1, r4, lsr sl
   11728:	andeq	r1, r1, r4, lsr sl
   1172c:	andeq	r1, r1, r4, lsr sl
   11730:	andeq	r1, r1, r4, lsr sl
   11734:	andeq	r1, r1, r4, lsr sl
   11738:	andeq	r1, r1, r4, lsr sl
   1173c:	andeq	r1, r1, r4, lsr sl
   11740:	andeq	r1, r1, r4, lsr sl
   11744:	andeq	r1, r1, r4, lsr sl
   11748:	andeq	r1, r1, r4, lsr sl
   1174c:	andeq	r1, r1, r4, lsr sl
   11750:	andeq	r1, r1, r4, lsr sl
   11754:	andeq	r1, r1, r4, lsr sl
   11758:	andeq	r1, r1, r4, lsr sl
   1175c:	andeq	r1, r1, r4, lsr sl
   11760:	andeq	r1, r1, r4, lsr sl
   11764:	andeq	r1, r1, r4, lsr sl
   11768:	andeq	r1, r1, r4, lsr sl
   1176c:	andeq	r1, r1, r4, lsr sl
   11770:	andeq	r1, r1, r4, lsr sl
   11774:	andeq	r1, r1, r4, lsr sl
   11778:	andeq	r1, r1, r4, lsr sl
   1177c:	andeq	r1, r1, r4, lsr sl
   11780:	andeq	r1, r1, r4, lsr sl
   11784:	andeq	r1, r1, r4, lsr sl
   11788:	andeq	r1, r1, r4, lsr sl
   1178c:	andeq	r1, r1, r4, lsr sl
   11790:	andeq	r1, r1, r4, lsr sl
   11794:	andeq	r1, r1, r4, lsr sl
   11798:	andeq	r1, r1, r4, lsr sl
   1179c:	andeq	r1, r1, r4, lsr sl
   117a0:	andeq	r1, r1, r4, lsr sl
   117a4:	andeq	r1, r1, r4, lsr sl
   117a8:	andeq	r1, r1, ip, lsr #20
   117ac:	andeq	r1, r1, r4, lsr sl
   117b0:	andeq	r1, r1, r4, lsr sl
   117b4:	andeq	r1, r1, r4, lsr sl
   117b8:	andeq	r1, r1, r4, lsr sl
   117bc:	andeq	r1, r1, ip, lsl r8
   117c0:	andeq	r1, r1, r8, lsr #16
   117c4:	andeq	r1, r1, r4, lsr r8
   117c8:	andeq	r1, r1, r4, lsr sl
   117cc:	andeq	r1, r1, r0, asr #16
   117d0:	andeq	r1, r1, ip, asr #16
   117d4:	andeq	r1, r1, r4, lsr sl
   117d8:	andeq	r1, r1, r4, lsr sl
   117dc:	andeq	r1, r1, r4, lsr sl
   117e0:	andeq	r1, r1, r4, lsr sl
   117e4:	andeq	r1, r1, r4, lsr sl
   117e8:	andeq	r1, r1, r4, lsr sl
   117ec:	andeq	r1, r1, r4, lsr sl
   117f0:	andeq	r1, r1, r8, asr r8
   117f4:	andeq	r1, r1, r4, lsr sl
   117f8:	andeq	r1, r1, r4, lsr sl
   117fc:	andeq	r1, r1, r4, lsr sl
   11800:	andeq	r1, r1, r4, ror #16
   11804:	andeq	r1, r1, r4, lsr sl
   11808:	andeq	r1, r1, r0, ror r8
   1180c:	andeq	r1, r1, r4, lsr sl
   11810:	andeq	r1, r1, ip, ror r8
   11814:	andeq	r1, r1, r4, lsr sl
   11818:	andeq	r1, r1, r8, lsl #17
   1181c:	movw	r0, #7
   11820:	strb	r0, [fp, #-29]	; 0xffffffe3
   11824:	b	11a3c <__assert_fail@plt+0xbd4>
   11828:	movw	r0, #8
   1182c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11830:	b	11a3c <__assert_fail@plt+0xbd4>
   11834:	movw	r0, #0
   11838:	str	r0, [fp, #-4]
   1183c:	b	11b00 <__assert_fail@plt+0xc98>
   11840:	movw	r0, #27
   11844:	strb	r0, [fp, #-29]	; 0xffffffe3
   11848:	b	11a3c <__assert_fail@plt+0xbd4>
   1184c:	movw	r0, #12
   11850:	strb	r0, [fp, #-29]	; 0xffffffe3
   11854:	b	11a3c <__assert_fail@plt+0xbd4>
   11858:	movw	r0, #10
   1185c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11860:	b	11a3c <__assert_fail@plt+0xbd4>
   11864:	movw	r0, #13
   11868:	strb	r0, [fp, #-29]	; 0xffffffe3
   1186c:	b	11a3c <__assert_fail@plt+0xbd4>
   11870:	movw	r0, #9
   11874:	strb	r0, [fp, #-29]	; 0xffffffe3
   11878:	b	11a3c <__assert_fail@plt+0xbd4>
   1187c:	movw	r0, #11
   11880:	strb	r0, [fp, #-29]	; 0xffffffe3
   11884:	b	11a3c <__assert_fail@plt+0xbd4>
   11888:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1188c:	ldrb	r0, [r0]
   11890:	strb	r0, [fp, #-30]	; 0xffffffe2
   11894:	bl	10d84 <__ctype_b_loc@plt>
   11898:	ldr	r0, [r0]
   1189c:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   118a0:	mov	r2, r1
   118a4:	add	r0, r0, r1, lsl #1
   118a8:	ldrh	r0, [r0]
   118ac:	and	r0, r0, #4096	; 0x1000
   118b0:	cmp	r0, #0
   118b4:	bne	118bc <__assert_fail@plt+0xa54>
   118b8:	b	11a30 <__assert_fail@plt+0xbc8>
   118bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   118c0:	add	r0, r0, #1
   118c4:	str	r0, [fp, #-28]	; 0xffffffe4
   118c8:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   118cc:	bl	11b0c <__assert_fail@plt+0xca4>
   118d0:	strb	r0, [fp, #-29]	; 0xffffffe3
   118d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   118d8:	ldrb	r0, [r0]
   118dc:	strb	r0, [fp, #-30]	; 0xffffffe2
   118e0:	bl	10d84 <__ctype_b_loc@plt>
   118e4:	ldr	r0, [r0]
   118e8:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   118ec:	mov	r2, r1
   118f0:	add	r0, r0, r1, lsl #1
   118f4:	ldrh	r0, [r0]
   118f8:	and	r0, r0, #4096	; 0x1000
   118fc:	cmp	r0, #0
   11900:	beq	1193c <__assert_fail@plt+0xad4>
   11904:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11908:	add	r0, r0, #1
   1190c:	str	r0, [fp, #-28]	; 0xffffffe4
   11910:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11914:	mov	r1, r0
   11918:	lsl	r0, r0, #4
   1191c:	ldrb	r2, [fp, #-30]	; 0xffffffe2
   11920:	str	r0, [sp, #16]
   11924:	mov	r0, r2
   11928:	str	r1, [sp, #12]
   1192c:	bl	11b0c <__assert_fail@plt+0xca4>
   11930:	ldr	r1, [sp, #16]
   11934:	add	r0, r1, r0
   11938:	strb	r0, [fp, #-29]	; 0xffffffe3
   1193c:	b	11a3c <__assert_fail@plt+0xbd4>
   11940:	movw	r0, #0
   11944:	strb	r0, [fp, #-29]	; 0xffffffe3
   11948:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1194c:	ldrb	r0, [r0]
   11950:	movw	r1, #48	; 0x30
   11954:	cmp	r1, r0
   11958:	bgt	1196c <__assert_fail@plt+0xb04>
   1195c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11960:	ldrb	r0, [r0]
   11964:	cmp	r0, #55	; 0x37
   11968:	ble	11970 <__assert_fail@plt+0xb08>
   1196c:	b	11a3c <__assert_fail@plt+0xbd4>
   11970:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11974:	add	r1, r0, #1
   11978:	str	r1, [fp, #-28]	; 0xffffffe4
   1197c:	ldrb	r0, [r0]
   11980:	strb	r0, [fp, #-29]	; 0xffffffe3
   11984:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11988:	sub	r0, r0, #48	; 0x30
   1198c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11990:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11994:	ldrb	r0, [r0]
   11998:	movw	r1, #48	; 0x30
   1199c:	cmp	r1, r0
   119a0:	bgt	119dc <__assert_fail@plt+0xb74>
   119a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   119a8:	ldrb	r0, [r0]
   119ac:	cmp	r0, #55	; 0x37
   119b0:	bgt	119dc <__assert_fail@plt+0xb74>
   119b4:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   119b8:	mov	r1, r0
   119bc:	lsl	r0, r0, #3
   119c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   119c4:	add	r3, r2, #1
   119c8:	str	r3, [fp, #-28]	; 0xffffffe4
   119cc:	ldrb	r2, [r2]
   119d0:	sub	r2, r2, #48	; 0x30
   119d4:	add	r0, r0, r2
   119d8:	strb	r0, [fp, #-29]	; 0xffffffe3
   119dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   119e0:	ldrb	r0, [r0]
   119e4:	movw	r1, #48	; 0x30
   119e8:	cmp	r1, r0
   119ec:	bgt	11a28 <__assert_fail@plt+0xbc0>
   119f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   119f4:	ldrb	r0, [r0]
   119f8:	cmp	r0, #55	; 0x37
   119fc:	bgt	11a28 <__assert_fail@plt+0xbc0>
   11a00:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11a04:	mov	r1, r0
   11a08:	lsl	r0, r0, #3
   11a0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11a10:	add	r3, r2, #1
   11a14:	str	r3, [fp, #-28]	; 0xffffffe4
   11a18:	ldrb	r2, [r2]
   11a1c:	sub	r2, r2, #48	; 0x30
   11a20:	add	r0, r0, r2
   11a24:	strb	r0, [fp, #-29]	; 0xffffffe3
   11a28:	b	11a3c <__assert_fail@plt+0xbd4>
   11a2c:	b	11a3c <__assert_fail@plt+0xbd4>
   11a30:	b	11a34 <__assert_fail@plt+0xbcc>
   11a34:	movw	r0, #92	; 0x5c
   11a38:	bl	10e5c <putchar_unlocked@plt>
   11a3c:	b	11a40 <__assert_fail@plt+0xbd8>
   11a40:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11a44:	bl	10e5c <putchar_unlocked@plt>
   11a48:	b	11688 <__assert_fail@plt+0x820>
   11a4c:	ldr	r0, [fp, #-8]
   11a50:	mvn	r1, #0
   11a54:	add	r0, r0, r1
   11a58:	str	r0, [fp, #-8]
   11a5c:	ldr	r0, [fp, #-12]
   11a60:	add	r0, r0, #4
   11a64:	str	r0, [fp, #-12]
   11a68:	ldr	r0, [fp, #-8]
   11a6c:	cmp	r0, #0
   11a70:	ble	11a7c <__assert_fail@plt+0xc14>
   11a74:	movw	r0, #32
   11a78:	bl	10e5c <putchar_unlocked@plt>
   11a7c:	b	11670 <__assert_fail@plt+0x808>
   11a80:	b	11ae4 <__assert_fail@plt+0xc7c>
   11a84:	b	11a88 <__assert_fail@plt+0xc20>
   11a88:	ldr	r0, [fp, #-8]
   11a8c:	cmp	r0, #0
   11a90:	ble	11ae0 <__assert_fail@plt+0xc78>
   11a94:	ldr	r0, [fp, #-12]
   11a98:	ldr	r0, [r0]
   11a9c:	movw	r1, #45348	; 0xb124
   11aa0:	movt	r1, #2
   11aa4:	ldr	r1, [r1]
   11aa8:	bl	10c64 <fputs_unlocked@plt>
   11aac:	ldr	r1, [fp, #-8]
   11ab0:	mvn	r2, #0
   11ab4:	add	r1, r1, r2
   11ab8:	str	r1, [fp, #-8]
   11abc:	ldr	r1, [fp, #-12]
   11ac0:	add	r1, r1, #4
   11ac4:	str	r1, [fp, #-12]
   11ac8:	ldr	r1, [fp, #-8]
   11acc:	cmp	r1, #0
   11ad0:	ble	11adc <__assert_fail@plt+0xc74>
   11ad4:	movw	r0, #32
   11ad8:	bl	10e5c <putchar_unlocked@plt>
   11adc:	b	11a88 <__assert_fail@plt+0xc20>
   11ae0:	b	11ae4 <__assert_fail@plt+0xc7c>
   11ae4:	ldrb	r0, [fp, #-13]
   11ae8:	tst	r0, #1
   11aec:	beq	11af8 <__assert_fail@plt+0xc90>
   11af0:	movw	r0, #10
   11af4:	bl	10e5c <putchar_unlocked@plt>
   11af8:	movw	r0, #0
   11afc:	str	r0, [fp, #-4]
   11b00:	ldr	r0, [fp, #-4]
   11b04:	mov	sp, fp
   11b08:	pop	{fp, pc}
   11b0c:	sub	sp, sp, #12
   11b10:	strb	r0, [sp, #7]
   11b14:	ldrb	r0, [sp, #7]
   11b18:	sub	r0, r0, #65	; 0x41
   11b1c:	cmp	r0, #37	; 0x25
   11b20:	str	r0, [sp]
   11b24:	bhi	11bd0 <__assert_fail@plt+0xd68>
   11b28:	add	r0, pc, #8
   11b2c:	ldr	r1, [sp]
   11b30:	ldr	r0, [r0, r1, lsl #2]
   11b34:	mov	pc, r0
   11b38:	andeq	r1, r1, r0, ror #23
   11b3c:	andeq	r1, r1, ip, ror #23
   11b40:	strdeq	r1, [r1], -r8
   11b44:	andeq	r1, r1, r4, lsl #24
   11b48:	andeq	r1, r1, r0, lsl ip
   11b4c:	andeq	r1, r1, ip, lsl ip
   11b50:	ldrdeq	r1, [r1], -r0
   11b54:	ldrdeq	r1, [r1], -r0
   11b58:	ldrdeq	r1, [r1], -r0
   11b5c:	ldrdeq	r1, [r1], -r0
   11b60:	ldrdeq	r1, [r1], -r0
   11b64:	ldrdeq	r1, [r1], -r0
   11b68:	ldrdeq	r1, [r1], -r0
   11b6c:	ldrdeq	r1, [r1], -r0
   11b70:	ldrdeq	r1, [r1], -r0
   11b74:	ldrdeq	r1, [r1], -r0
   11b78:	ldrdeq	r1, [r1], -r0
   11b7c:	ldrdeq	r1, [r1], -r0
   11b80:	ldrdeq	r1, [r1], -r0
   11b84:	ldrdeq	r1, [r1], -r0
   11b88:	ldrdeq	r1, [r1], -r0
   11b8c:	ldrdeq	r1, [r1], -r0
   11b90:	ldrdeq	r1, [r1], -r0
   11b94:	ldrdeq	r1, [r1], -r0
   11b98:	ldrdeq	r1, [r1], -r0
   11b9c:	ldrdeq	r1, [r1], -r0
   11ba0:	ldrdeq	r1, [r1], -r0
   11ba4:	ldrdeq	r1, [r1], -r0
   11ba8:	ldrdeq	r1, [r1], -r0
   11bac:	ldrdeq	r1, [r1], -r0
   11bb0:	ldrdeq	r1, [r1], -r0
   11bb4:	ldrdeq	r1, [r1], -r0
   11bb8:	andeq	r1, r1, r0, ror #23
   11bbc:	andeq	r1, r1, ip, ror #23
   11bc0:	strdeq	r1, [r1], -r8
   11bc4:	andeq	r1, r1, r4, lsl #24
   11bc8:	andeq	r1, r1, r0, lsl ip
   11bcc:	andeq	r1, r1, ip, lsl ip
   11bd0:	ldrb	r0, [sp, #7]
   11bd4:	sub	r0, r0, #48	; 0x30
   11bd8:	str	r0, [sp, #8]
   11bdc:	b	11c24 <__assert_fail@plt+0xdbc>
   11be0:	movw	r0, #10
   11be4:	str	r0, [sp, #8]
   11be8:	b	11c24 <__assert_fail@plt+0xdbc>
   11bec:	movw	r0, #11
   11bf0:	str	r0, [sp, #8]
   11bf4:	b	11c24 <__assert_fail@plt+0xdbc>
   11bf8:	movw	r0, #12
   11bfc:	str	r0, [sp, #8]
   11c00:	b	11c24 <__assert_fail@plt+0xdbc>
   11c04:	movw	r0, #13
   11c08:	str	r0, [sp, #8]
   11c0c:	b	11c24 <__assert_fail@plt+0xdbc>
   11c10:	movw	r0, #14
   11c14:	str	r0, [sp, #8]
   11c18:	b	11c24 <__assert_fail@plt+0xdbc>
   11c1c:	movw	r0, #15
   11c20:	str	r0, [sp, #8]
   11c24:	ldr	r0, [sp, #8]
   11c28:	add	sp, sp, #12
   11c2c:	bx	lr
   11c30:	sub	sp, sp, #4
   11c34:	str	r0, [sp]
   11c38:	ldr	r0, [sp]
   11c3c:	movw	r1, #45356	; 0xb12c
   11c40:	movt	r1, #2
   11c44:	str	r0, [r1]
   11c48:	add	sp, sp, #4
   11c4c:	bx	lr
   11c50:	sub	sp, sp, #4
   11c54:	and	r0, r0, #1
   11c58:	strb	r0, [sp, #3]
   11c5c:	ldrb	r0, [sp, #3]
   11c60:	and	r0, r0, #1
   11c64:	movw	r1, #45360	; 0xb130
   11c68:	movt	r1, #2
   11c6c:	strb	r0, [r1]
   11c70:	add	sp, sp, #4
   11c74:	bx	lr
   11c78:	push	{fp, lr}
   11c7c:	mov	fp, sp
   11c80:	sub	sp, sp, #24
   11c84:	movw	r0, #45348	; 0xb124
   11c88:	movt	r0, #2
   11c8c:	ldr	r0, [r0]
   11c90:	bl	17de8 <__assert_fail@plt+0x6f80>
   11c94:	cmp	r0, #0
   11c98:	beq	11d68 <__assert_fail@plt+0xf00>
   11c9c:	movw	r0, #45360	; 0xb130
   11ca0:	movt	r0, #2
   11ca4:	ldrb	r0, [r0]
   11ca8:	tst	r0, #1
   11cac:	beq	11cc0 <__assert_fail@plt+0xe58>
   11cb0:	bl	10dc0 <__errno_location@plt>
   11cb4:	ldr	r0, [r0]
   11cb8:	cmp	r0, #32
   11cbc:	beq	11d68 <__assert_fail@plt+0xf00>
   11cc0:	movw	r0, #43283	; 0xa913
   11cc4:	movt	r0, #1
   11cc8:	bl	10d9c <gettext@plt>
   11ccc:	str	r0, [fp, #-4]
   11cd0:	movw	r0, #45356	; 0xb12c
   11cd4:	movt	r0, #2
   11cd8:	ldr	r0, [r0]
   11cdc:	movw	r1, #0
   11ce0:	cmp	r0, r1
   11ce4:	beq	11d3c <__assert_fail@plt+0xed4>
   11ce8:	bl	10dc0 <__errno_location@plt>
   11cec:	ldr	r1, [r0]
   11cf0:	movw	r0, #45356	; 0xb12c
   11cf4:	movt	r0, #2
   11cf8:	ldr	r0, [r0]
   11cfc:	str	r1, [fp, #-8]
   11d00:	bl	14158 <__assert_fail@plt+0x32f0>
   11d04:	ldr	r1, [fp, #-4]
   11d08:	movw	r2, #0
   11d0c:	str	r0, [sp, #12]
   11d10:	mov	r0, r2
   11d14:	ldr	r2, [fp, #-8]
   11d18:	str	r1, [sp, #8]
   11d1c:	mov	r1, r2
   11d20:	movw	r2, #43295	; 0xa91f
   11d24:	movt	r2, #1
   11d28:	ldr	r3, [sp, #12]
   11d2c:	ldr	ip, [sp, #8]
   11d30:	str	ip, [sp]
   11d34:	bl	10d3c <error@plt>
   11d38:	b	11d58 <__assert_fail@plt+0xef0>
   11d3c:	bl	10dc0 <__errno_location@plt>
   11d40:	ldr	r1, [r0]
   11d44:	ldr	r3, [fp, #-4]
   11d48:	movw	r0, #0
   11d4c:	movw	r2, #43299	; 0xa923
   11d50:	movt	r2, #1
   11d54:	bl	10d3c <error@plt>
   11d58:	movw	r0, #45264	; 0xb0d0
   11d5c:	movt	r0, #2
   11d60:	ldr	r0, [r0]
   11d64:	bl	10cac <_exit@plt>
   11d68:	movw	r0, #45344	; 0xb120
   11d6c:	movt	r0, #2
   11d70:	ldr	r0, [r0]
   11d74:	bl	17de8 <__assert_fail@plt+0x6f80>
   11d78:	cmp	r0, #0
   11d7c:	beq	11d90 <__assert_fail@plt+0xf28>
   11d80:	movw	r0, #45264	; 0xb0d0
   11d84:	movt	r0, #2
   11d88:	ldr	r0, [r0]
   11d8c:	bl	10cac <_exit@plt>
   11d90:	mov	sp, fp
   11d94:	pop	{fp, pc}
   11d98:	push	{fp, lr}
   11d9c:	mov	fp, sp
   11da0:	sub	sp, sp, #24
   11da4:	str	r0, [fp, #-4]
   11da8:	ldr	r0, [fp, #-4]
   11dac:	movw	r1, #0
   11db0:	cmp	r0, r1
   11db4:	bne	11dd8 <__assert_fail@plt+0xf70>
   11db8:	movw	r0, #45344	; 0xb120
   11dbc:	movt	r0, #2
   11dc0:	ldr	r1, [r0]
   11dc4:	movw	r0, #43302	; 0xa926
   11dc8:	movt	r0, #1
   11dcc:	bl	10e38 <fputs@plt>
   11dd0:	str	r0, [sp, #8]
   11dd4:	bl	10e50 <abort@plt>
   11dd8:	ldr	r0, [fp, #-4]
   11ddc:	movw	r1, #47	; 0x2f
   11de0:	bl	10e14 <strrchr@plt>
   11de4:	str	r0, [fp, #-8]
   11de8:	ldr	r0, [fp, #-8]
   11dec:	movw	r1, #0
   11df0:	cmp	r0, r1
   11df4:	beq	11e08 <__assert_fail@plt+0xfa0>
   11df8:	ldr	r0, [fp, #-8]
   11dfc:	add	r0, r0, #1
   11e00:	str	r0, [sp, #4]
   11e04:	b	11e10 <__assert_fail@plt+0xfa8>
   11e08:	ldr	r0, [fp, #-4]
   11e0c:	str	r0, [sp, #4]
   11e10:	ldr	r0, [sp, #4]
   11e14:	str	r0, [sp, #12]
   11e18:	ldr	r0, [sp, #12]
   11e1c:	ldr	r1, [fp, #-4]
   11e20:	sub	r0, r0, r1
   11e24:	cmp	r0, #7
   11e28:	blt	11e94 <__assert_fail@plt+0x102c>
   11e2c:	ldr	r0, [sp, #12]
   11e30:	mvn	r1, #6
   11e34:	add	r0, r0, r1
   11e38:	movw	r1, #43358	; 0xa95e
   11e3c:	movt	r1, #1
   11e40:	movw	r2, #7
   11e44:	bl	10e44 <strncmp@plt>
   11e48:	cmp	r0, #0
   11e4c:	bne	11e94 <__assert_fail@plt+0x102c>
   11e50:	ldr	r0, [sp, #12]
   11e54:	str	r0, [fp, #-4]
   11e58:	ldr	r0, [sp, #12]
   11e5c:	movw	r1, #43366	; 0xa966
   11e60:	movt	r1, #1
   11e64:	movw	r2, #3
   11e68:	bl	10e44 <strncmp@plt>
   11e6c:	cmp	r0, #0
   11e70:	bne	11e90 <__assert_fail@plt+0x1028>
   11e74:	ldr	r0, [sp, #12]
   11e78:	add	r0, r0, #3
   11e7c:	str	r0, [fp, #-4]
   11e80:	ldr	r0, [fp, #-4]
   11e84:	movw	r1, #45336	; 0xb118
   11e88:	movt	r1, #2
   11e8c:	str	r0, [r1]
   11e90:	b	11e94 <__assert_fail@plt+0x102c>
   11e94:	ldr	r0, [fp, #-4]
   11e98:	movw	r1, #45364	; 0xb134
   11e9c:	movt	r1, #2
   11ea0:	str	r0, [r1]
   11ea4:	ldr	r0, [fp, #-4]
   11ea8:	movw	r1, #45340	; 0xb11c
   11eac:	movt	r1, #2
   11eb0:	str	r0, [r1]
   11eb4:	mov	sp, fp
   11eb8:	pop	{fp, pc}
   11ebc:	push	{fp, lr}
   11ec0:	mov	fp, sp
   11ec4:	sub	sp, sp, #24
   11ec8:	str	r0, [fp, #-4]
   11ecc:	bl	10dc0 <__errno_location@plt>
   11ed0:	ldr	r0, [r0]
   11ed4:	str	r0, [fp, #-8]
   11ed8:	ldr	r0, [fp, #-4]
   11edc:	movw	r1, #0
   11ee0:	cmp	r0, r1
   11ee4:	beq	11ef4 <__assert_fail@plt+0x108c>
   11ee8:	ldr	r0, [fp, #-4]
   11eec:	str	r0, [sp, #8]
   11ef0:	b	11f04 <__assert_fail@plt+0x109c>
   11ef4:	movw	r0, #45368	; 0xb138
   11ef8:	movt	r0, #2
   11efc:	str	r0, [sp, #8]
   11f00:	b	11f04 <__assert_fail@plt+0x109c>
   11f04:	ldr	r0, [sp, #8]
   11f08:	movw	r1, #48	; 0x30
   11f0c:	bl	17a30 <__assert_fail@plt+0x6bc8>
   11f10:	str	r0, [sp, #12]
   11f14:	ldr	r0, [fp, #-8]
   11f18:	str	r0, [sp, #4]
   11f1c:	bl	10dc0 <__errno_location@plt>
   11f20:	ldr	r1, [sp, #4]
   11f24:	str	r1, [r0]
   11f28:	ldr	r0, [sp, #12]
   11f2c:	mov	sp, fp
   11f30:	pop	{fp, pc}
   11f34:	sub	sp, sp, #8
   11f38:	str	r0, [sp, #4]
   11f3c:	ldr	r0, [sp, #4]
   11f40:	movw	r1, #0
   11f44:	cmp	r0, r1
   11f48:	beq	11f58 <__assert_fail@plt+0x10f0>
   11f4c:	ldr	r0, [sp, #4]
   11f50:	str	r0, [sp]
   11f54:	b	11f68 <__assert_fail@plt+0x1100>
   11f58:	movw	r0, #45368	; 0xb138
   11f5c:	movt	r0, #2
   11f60:	str	r0, [sp]
   11f64:	b	11f68 <__assert_fail@plt+0x1100>
   11f68:	ldr	r0, [sp]
   11f6c:	ldr	r0, [r0]
   11f70:	add	sp, sp, #8
   11f74:	bx	lr
   11f78:	sub	sp, sp, #16
   11f7c:	str	r0, [sp, #12]
   11f80:	str	r1, [sp, #8]
   11f84:	ldr	r0, [sp, #8]
   11f88:	ldr	r1, [sp, #12]
   11f8c:	movw	r2, #0
   11f90:	cmp	r1, r2
   11f94:	str	r0, [sp, #4]
   11f98:	beq	11fa8 <__assert_fail@plt+0x1140>
   11f9c:	ldr	r0, [sp, #12]
   11fa0:	str	r0, [sp]
   11fa4:	b	11fb8 <__assert_fail@plt+0x1150>
   11fa8:	movw	r0, #45368	; 0xb138
   11fac:	movt	r0, #2
   11fb0:	str	r0, [sp]
   11fb4:	b	11fb8 <__assert_fail@plt+0x1150>
   11fb8:	ldr	r0, [sp]
   11fbc:	ldr	r1, [sp, #4]
   11fc0:	str	r1, [r0]
   11fc4:	add	sp, sp, #16
   11fc8:	bx	lr
   11fcc:	sub	sp, sp, #32
   11fd0:	str	r0, [sp, #28]
   11fd4:	strb	r1, [sp, #27]
   11fd8:	str	r2, [sp, #20]
   11fdc:	ldrb	r0, [sp, #27]
   11fe0:	strb	r0, [sp, #19]
   11fe4:	ldr	r0, [sp, #28]
   11fe8:	movw	r1, #0
   11fec:	cmp	r0, r1
   11ff0:	beq	12000 <__assert_fail@plt+0x1198>
   11ff4:	ldr	r0, [sp, #28]
   11ff8:	str	r0, [sp]
   11ffc:	b	12010 <__assert_fail@plt+0x11a8>
   12000:	movw	r0, #45368	; 0xb138
   12004:	movt	r0, #2
   12008:	str	r0, [sp]
   1200c:	b	12010 <__assert_fail@plt+0x11a8>
   12010:	ldr	r0, [sp]
   12014:	add	r0, r0, #8
   12018:	ldrb	r1, [sp, #19]
   1201c:	lsr	r1, r1, #5
   12020:	add	r0, r0, r1, lsl #2
   12024:	str	r0, [sp, #12]
   12028:	ldrb	r0, [sp, #19]
   1202c:	and	r0, r0, #31
   12030:	str	r0, [sp, #8]
   12034:	ldr	r0, [sp, #12]
   12038:	ldr	r0, [r0]
   1203c:	ldr	r1, [sp, #8]
   12040:	lsr	r0, r0, r1
   12044:	and	r0, r0, #1
   12048:	str	r0, [sp, #4]
   1204c:	ldr	r0, [sp, #20]
   12050:	and	r0, r0, #1
   12054:	ldr	r1, [sp, #4]
   12058:	eor	r0, r0, r1
   1205c:	ldr	r1, [sp, #8]
   12060:	lsl	r0, r0, r1
   12064:	ldr	r1, [sp, #12]
   12068:	ldr	r2, [r1]
   1206c:	eor	r0, r2, r0
   12070:	str	r0, [r1]
   12074:	ldr	r0, [sp, #4]
   12078:	add	sp, sp, #32
   1207c:	bx	lr
   12080:	sub	sp, sp, #12
   12084:	str	r0, [sp, #8]
   12088:	str	r1, [sp, #4]
   1208c:	ldr	r0, [sp, #8]
   12090:	movw	r1, #0
   12094:	cmp	r0, r1
   12098:	bne	120a8 <__assert_fail@plt+0x1240>
   1209c:	movw	r0, #45368	; 0xb138
   120a0:	movt	r0, #2
   120a4:	str	r0, [sp, #8]
   120a8:	ldr	r0, [sp, #8]
   120ac:	ldr	r0, [r0, #4]
   120b0:	str	r0, [sp]
   120b4:	ldr	r0, [sp, #4]
   120b8:	ldr	r1, [sp, #8]
   120bc:	str	r0, [r1, #4]
   120c0:	ldr	r0, [sp]
   120c4:	add	sp, sp, #12
   120c8:	bx	lr
   120cc:	push	{fp, lr}
   120d0:	mov	fp, sp
   120d4:	sub	sp, sp, #16
   120d8:	str	r0, [fp, #-4]
   120dc:	str	r1, [sp, #8]
   120e0:	str	r2, [sp, #4]
   120e4:	ldr	r0, [fp, #-4]
   120e8:	movw	r1, #0
   120ec:	cmp	r0, r1
   120f0:	bne	12100 <__assert_fail@plt+0x1298>
   120f4:	movw	r0, #45368	; 0xb138
   120f8:	movt	r0, #2
   120fc:	str	r0, [fp, #-4]
   12100:	ldr	r0, [fp, #-4]
   12104:	movw	r1, #10
   12108:	str	r1, [r0]
   1210c:	ldr	r0, [sp, #8]
   12110:	movw	r1, #0
   12114:	cmp	r0, r1
   12118:	beq	1212c <__assert_fail@plt+0x12c4>
   1211c:	ldr	r0, [sp, #4]
   12120:	movw	r1, #0
   12124:	cmp	r0, r1
   12128:	bne	12130 <__assert_fail@plt+0x12c8>
   1212c:	bl	10e50 <abort@plt>
   12130:	ldr	r0, [sp, #8]
   12134:	ldr	r1, [fp, #-4]
   12138:	str	r0, [r1, #40]	; 0x28
   1213c:	ldr	r0, [sp, #4]
   12140:	ldr	r1, [fp, #-4]
   12144:	str	r0, [r1, #44]	; 0x2c
   12148:	mov	sp, fp
   1214c:	pop	{fp, pc}
   12150:	push	{r4, r5, r6, sl, fp, lr}
   12154:	add	fp, sp, #16
   12158:	sub	sp, sp, #56	; 0x38
   1215c:	ldr	ip, [fp, #8]
   12160:	str	r0, [fp, #-20]	; 0xffffffec
   12164:	str	r1, [fp, #-24]	; 0xffffffe8
   12168:	str	r2, [fp, #-28]	; 0xffffffe4
   1216c:	str	r3, [fp, #-32]	; 0xffffffe0
   12170:	ldr	r0, [fp, #8]
   12174:	movw	r1, #0
   12178:	cmp	r0, r1
   1217c:	beq	1218c <__assert_fail@plt+0x1324>
   12180:	ldr	r0, [fp, #8]
   12184:	str	r0, [sp, #24]
   12188:	b	1219c <__assert_fail@plt+0x1334>
   1218c:	movw	r0, #45368	; 0xb138
   12190:	movt	r0, #2
   12194:	str	r0, [sp, #24]
   12198:	b	1219c <__assert_fail@plt+0x1334>
   1219c:	ldr	r0, [sp, #24]
   121a0:	str	r0, [sp, #36]	; 0x24
   121a4:	bl	10dc0 <__errno_location@plt>
   121a8:	ldr	r0, [r0]
   121ac:	str	r0, [sp, #32]
   121b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   121b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   121bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121c0:	ldr	ip, [sp, #36]	; 0x24
   121c4:	ldr	ip, [ip]
   121c8:	ldr	lr, [sp, #36]	; 0x24
   121cc:	ldr	lr, [lr, #4]
   121d0:	ldr	r4, [sp, #36]	; 0x24
   121d4:	add	r4, r4, #8
   121d8:	ldr	r5, [sp, #36]	; 0x24
   121dc:	ldr	r5, [r5, #40]	; 0x28
   121e0:	ldr	r6, [sp, #36]	; 0x24
   121e4:	ldr	r6, [r6, #44]	; 0x2c
   121e8:	str	ip, [sp]
   121ec:	str	lr, [sp, #4]
   121f0:	str	r4, [sp, #8]
   121f4:	str	r5, [sp, #12]
   121f8:	str	r6, [sp, #16]
   121fc:	bl	12224 <__assert_fail@plt+0x13bc>
   12200:	str	r0, [sp, #28]
   12204:	ldr	r0, [sp, #32]
   12208:	str	r0, [sp, #20]
   1220c:	bl	10dc0 <__errno_location@plt>
   12210:	ldr	r1, [sp, #20]
   12214:	str	r1, [r0]
   12218:	ldr	r0, [sp, #28]
   1221c:	sub	sp, fp, #16
   12220:	pop	{r4, r5, r6, sl, fp, pc}
   12224:	push	{r4, r5, r6, sl, fp, lr}
   12228:	add	fp, sp, #16
   1222c:	sub	sp, sp, #160	; 0xa0
   12230:	ldr	ip, [fp, #24]
   12234:	ldr	lr, [fp, #20]
   12238:	ldr	r4, [fp, #16]
   1223c:	ldr	r5, [fp, #12]
   12240:	ldr	r6, [fp, #8]
   12244:	str	r0, [fp, #-24]	; 0xffffffe8
   12248:	str	r1, [fp, #-28]	; 0xffffffe4
   1224c:	str	r2, [fp, #-32]	; 0xffffffe0
   12250:	str	r3, [fp, #-36]	; 0xffffffdc
   12254:	movw	r0, #0
   12258:	str	r0, [fp, #-44]	; 0xffffffd4
   1225c:	str	r0, [fp, #-48]	; 0xffffffd0
   12260:	str	r0, [fp, #-52]	; 0xffffffcc
   12264:	str	r0, [fp, #-56]	; 0xffffffc8
   12268:	movw	r0, #0
   1226c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12270:	str	ip, [sp, #72]	; 0x48
   12274:	str	lr, [sp, #68]	; 0x44
   12278:	str	r4, [sp, #64]	; 0x40
   1227c:	str	r5, [sp, #60]	; 0x3c
   12280:	str	r6, [sp, #56]	; 0x38
   12284:	bl	10d0c <__ctype_get_mb_cur_max@plt>
   12288:	cmp	r0, #1
   1228c:	movw	r0, #0
   12290:	moveq	r0, #1
   12294:	and	r0, r0, #1
   12298:	strb	r0, [fp, #-58]	; 0xffffffc6
   1229c:	ldr	r0, [fp, #12]
   122a0:	and	r0, r0, #2
   122a4:	cmp	r0, #0
   122a8:	movw	r0, #0
   122ac:	movne	r0, #1
   122b0:	and	r0, r0, #1
   122b4:	strb	r0, [fp, #-59]	; 0xffffffc5
   122b8:	movw	r0, #0
   122bc:	strb	r0, [fp, #-60]	; 0xffffffc4
   122c0:	strb	r0, [fp, #-61]	; 0xffffffc3
   122c4:	movw	r0, #1
   122c8:	strb	r0, [fp, #-62]	; 0xffffffc2
   122cc:	ldr	r0, [fp, #8]
   122d0:	cmp	r0, #10
   122d4:	str	r0, [sp, #52]	; 0x34
   122d8:	bhi	12500 <__assert_fail@plt+0x1698>
   122dc:	add	r0, pc, #8
   122e0:	ldr	r1, [sp, #52]	; 0x34
   122e4:	ldr	r0, [r0, r1, lsl #2]
   122e8:	mov	pc, r0
   122ec:	strdeq	r2, [r1], -r4
   122f0:	andeq	r2, r1, r0, ror r4
   122f4:	muleq	r1, r0, r4
   122f8:	andeq	r2, r1, r8, ror #8
   122fc:	andeq	r2, r1, r8, ror r4
   12300:	andeq	r2, r1, r8, lsr #6
   12304:	andeq	r2, r1, r8, lsl r3
   12308:	andeq	r2, r1, ip, lsl #7
   1230c:	andeq	r2, r1, r0, lsr #7
   12310:	andeq	r2, r1, r0, lsr #7
   12314:	andeq	r2, r1, r0, lsr #7
   12318:	movw	r0, #5
   1231c:	str	r0, [fp, #8]
   12320:	movw	r0, #1
   12324:	strb	r0, [fp, #-59]	; 0xffffffc5
   12328:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1232c:	tst	r0, #1
   12330:	bne	1236c <__assert_fail@plt+0x1504>
   12334:	b	12338 <__assert_fail@plt+0x14d0>
   12338:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1233c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12340:	cmp	r0, r1
   12344:	bcs	1235c <__assert_fail@plt+0x14f4>
   12348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1234c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12350:	add	r0, r0, r1
   12354:	movw	r1, #34	; 0x22
   12358:	strb	r1, [r0]
   1235c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12360:	add	r0, r0, #1
   12364:	str	r0, [fp, #-44]	; 0xffffffd4
   12368:	b	1236c <__assert_fail@plt+0x1504>
   1236c:	movw	r0, #1
   12370:	strb	r0, [fp, #-57]	; 0xffffffc7
   12374:	movw	r0, #43446	; 0xa9b6
   12378:	movt	r0, #1
   1237c:	str	r0, [fp, #-52]	; 0xffffffcc
   12380:	movw	r0, #1
   12384:	str	r0, [fp, #-56]	; 0xffffffc8
   12388:	b	12504 <__assert_fail@plt+0x169c>
   1238c:	movw	r0, #1
   12390:	strb	r0, [fp, #-57]	; 0xffffffc7
   12394:	movw	r0, #0
   12398:	strb	r0, [fp, #-59]	; 0xffffffc5
   1239c:	b	12504 <__assert_fail@plt+0x169c>
   123a0:	ldr	r0, [fp, #8]
   123a4:	cmp	r0, #10
   123a8:	beq	123d4 <__assert_fail@plt+0x156c>
   123ac:	ldr	r1, [fp, #8]
   123b0:	movw	r0, #43448	; 0xa9b8
   123b4:	movt	r0, #1
   123b8:	bl	14418 <__assert_fail@plt+0x35b0>
   123bc:	str	r0, [fp, #20]
   123c0:	ldr	r1, [fp, #8]
   123c4:	movw	r0, #43450	; 0xa9ba
   123c8:	movt	r0, #1
   123cc:	bl	14418 <__assert_fail@plt+0x35b0>
   123d0:	str	r0, [fp, #24]
   123d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   123d8:	tst	r0, #1
   123dc:	bne	12448 <__assert_fail@plt+0x15e0>
   123e0:	ldr	r0, [fp, #20]
   123e4:	str	r0, [fp, #-52]	; 0xffffffcc
   123e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   123ec:	ldrsb	r0, [r0]
   123f0:	cmp	r0, #0
   123f4:	beq	12444 <__assert_fail@plt+0x15dc>
   123f8:	b	123fc <__assert_fail@plt+0x1594>
   123fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12400:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12404:	cmp	r0, r1
   12408:	bcs	12424 <__assert_fail@plt+0x15bc>
   1240c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12410:	ldrb	r0, [r0]
   12414:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12418:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1241c:	add	r1, r1, r2
   12420:	strb	r0, [r1]
   12424:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12428:	add	r0, r0, #1
   1242c:	str	r0, [fp, #-44]	; 0xffffffd4
   12430:	b	12434 <__assert_fail@plt+0x15cc>
   12434:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12438:	add	r0, r0, #1
   1243c:	str	r0, [fp, #-52]	; 0xffffffcc
   12440:	b	123e8 <__assert_fail@plt+0x1580>
   12444:	b	12448 <__assert_fail@plt+0x15e0>
   12448:	movw	r0, #1
   1244c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12450:	ldr	r0, [fp, #24]
   12454:	str	r0, [fp, #-52]	; 0xffffffcc
   12458:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1245c:	bl	10da8 <strlen@plt>
   12460:	str	r0, [fp, #-56]	; 0xffffffc8
   12464:	b	12504 <__assert_fail@plt+0x169c>
   12468:	movw	r0, #1
   1246c:	strb	r0, [fp, #-57]	; 0xffffffc7
   12470:	movw	r0, #1
   12474:	strb	r0, [fp, #-59]	; 0xffffffc5
   12478:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1247c:	tst	r0, #1
   12480:	bne	1248c <__assert_fail@plt+0x1624>
   12484:	movw	r0, #1
   12488:	strb	r0, [fp, #-57]	; 0xffffffc7
   1248c:	b	12490 <__assert_fail@plt+0x1628>
   12490:	movw	r0, #2
   12494:	str	r0, [fp, #8]
   12498:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1249c:	tst	r0, #1
   124a0:	bne	124dc <__assert_fail@plt+0x1674>
   124a4:	b	124a8 <__assert_fail@plt+0x1640>
   124a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   124ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   124b0:	cmp	r0, r1
   124b4:	bcs	124cc <__assert_fail@plt+0x1664>
   124b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   124c0:	add	r0, r0, r1
   124c4:	movw	r1, #39	; 0x27
   124c8:	strb	r1, [r0]
   124cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   124d0:	add	r0, r0, #1
   124d4:	str	r0, [fp, #-44]	; 0xffffffd4
   124d8:	b	124dc <__assert_fail@plt+0x1674>
   124dc:	movw	r0, #43450	; 0xa9ba
   124e0:	movt	r0, #1
   124e4:	str	r0, [fp, #-52]	; 0xffffffcc
   124e8:	movw	r0, #1
   124ec:	str	r0, [fp, #-56]	; 0xffffffc8
   124f0:	b	12504 <__assert_fail@plt+0x169c>
   124f4:	movw	r0, #0
   124f8:	strb	r0, [fp, #-59]	; 0xffffffc5
   124fc:	b	12504 <__assert_fail@plt+0x169c>
   12500:	bl	10e50 <abort@plt>
   12504:	movw	r0, #0
   12508:	str	r0, [fp, #-40]	; 0xffffffd8
   1250c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12510:	cmn	r0, #1
   12514:	bne	12540 <__assert_fail@plt+0x16d8>
   12518:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1251c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12520:	add	r0, r0, r1
   12524:	ldrb	r0, [r0]
   12528:	cmp	r0, #0
   1252c:	movw	r0, #0
   12530:	moveq	r0, #1
   12534:	and	r0, r0, #1
   12538:	str	r0, [sp, #48]	; 0x30
   1253c:	b	1255c <__assert_fail@plt+0x16f4>
   12540:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12544:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12548:	cmp	r0, r1
   1254c:	movw	r0, #0
   12550:	moveq	r0, #1
   12554:	and	r0, r0, #1
   12558:	str	r0, [sp, #48]	; 0x30
   1255c:	ldr	r0, [sp, #48]	; 0x30
   12560:	cmp	r0, #0
   12564:	movw	r0, #0
   12568:	movne	r0, #1
   1256c:	mvn	r1, #0
   12570:	eor	r0, r0, r1
   12574:	tst	r0, #1
   12578:	beq	13764 <__assert_fail@plt+0x28fc>
   1257c:	movw	r0, #0
   12580:	strb	r0, [fp, #-65]	; 0xffffffbf
   12584:	strb	r0, [fp, #-66]	; 0xffffffbe
   12588:	strb	r0, [fp, #-67]	; 0xffffffbd
   1258c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12590:	tst	r0, #1
   12594:	beq	12640 <__assert_fail@plt+0x17d8>
   12598:	ldr	r0, [fp, #8]
   1259c:	cmp	r0, #2
   125a0:	beq	12640 <__assert_fail@plt+0x17d8>
   125a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   125a8:	cmp	r0, #0
   125ac:	beq	12640 <__assert_fail@plt+0x17d8>
   125b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   125b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   125b8:	add	r0, r0, r1
   125bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   125c0:	cmn	r1, #1
   125c4:	str	r0, [sp, #44]	; 0x2c
   125c8:	bne	125f0 <__assert_fail@plt+0x1788>
   125cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   125d0:	movw	r1, #1
   125d4:	cmp	r1, r0
   125d8:	bcs	125f0 <__assert_fail@plt+0x1788>
   125dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   125e0:	bl	10da8 <strlen@plt>
   125e4:	str	r0, [fp, #-36]	; 0xffffffdc
   125e8:	str	r0, [sp, #40]	; 0x28
   125ec:	b	125f8 <__assert_fail@plt+0x1790>
   125f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   125f4:	str	r0, [sp, #40]	; 0x28
   125f8:	ldr	r0, [sp, #40]	; 0x28
   125fc:	ldr	r1, [sp, #44]	; 0x2c
   12600:	cmp	r1, r0
   12604:	bhi	12640 <__assert_fail@plt+0x17d8>
   12608:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1260c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12610:	add	r0, r0, r1
   12614:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12618:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1261c:	bl	10cd0 <memcmp@plt>
   12620:	cmp	r0, #0
   12624:	bne	12640 <__assert_fail@plt+0x17d8>
   12628:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1262c:	tst	r0, #1
   12630:	beq	12638 <__assert_fail@plt+0x17d0>
   12634:	b	138e4 <__assert_fail@plt+0x2a7c>
   12638:	movw	r0, #1
   1263c:	strb	r0, [fp, #-65]	; 0xffffffbf
   12640:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12644:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12648:	ldrb	r0, [r0, r1]
   1264c:	strb	r0, [fp, #-63]	; 0xffffffc1
   12650:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12654:	mov	r1, r0
   12658:	cmp	r0, #126	; 0x7e
   1265c:	str	r1, [sp, #36]	; 0x24
   12660:	bhi	12ed0 <__assert_fail@plt+0x2068>
   12664:	add	r0, pc, #8
   12668:	ldr	r1, [sp, #36]	; 0x24
   1266c:	ldr	r0, [r0, r1, lsl #2]
   12670:	mov	pc, r0
   12674:	andeq	r2, r1, r0, ror r8
   12678:	ldrdeq	r2, [r1], -r0
   1267c:	ldrdeq	r2, [r1], -r0
   12680:	ldrdeq	r2, [r1], -r0
   12684:	ldrdeq	r2, [r1], -r0
   12688:	ldrdeq	r2, [r1], -r0
   1268c:	ldrdeq	r2, [r1], -r0
   12690:	andeq	r2, r1, r8, ror ip
   12694:	andeq	r2, r1, r4, lsl #25
   12698:			; <UNDEFINED> instruction: 0x00012cb4
   1269c:	muleq	r1, ip, ip
   126a0:	andeq	r2, r1, r0, asr #25
   126a4:	muleq	r1, r0, ip
   126a8:	andeq	r2, r1, r8, lsr #25
   126ac:	ldrdeq	r2, [r1], -r0
   126b0:	ldrdeq	r2, [r1], -r0
   126b4:	ldrdeq	r2, [r1], -r0
   126b8:	ldrdeq	r2, [r1], -r0
   126bc:	ldrdeq	r2, [r1], -r0
   126c0:	ldrdeq	r2, [r1], -r0
   126c4:	ldrdeq	r2, [r1], -r0
   126c8:	ldrdeq	r2, [r1], -r0
   126cc:	ldrdeq	r2, [r1], -r0
   126d0:	ldrdeq	r2, [r1], -r0
   126d4:	ldrdeq	r2, [r1], -r0
   126d8:	ldrdeq	r2, [r1], -r0
   126dc:	ldrdeq	r2, [r1], -r0
   126e0:	ldrdeq	r2, [r1], -r0
   126e4:	ldrdeq	r2, [r1], -r0
   126e8:	ldrdeq	r2, [r1], -r0
   126ec:	ldrdeq	r2, [r1], -r0
   126f0:	ldrdeq	r2, [r1], -r0
   126f4:	andeq	r2, r1, r4, lsr #27
   126f8:	andeq	r2, r1, ip, lsr #27
   126fc:	andeq	r2, r1, ip, lsr #27
   12700:	muleq	r1, r0, sp
   12704:	andeq	r2, r1, ip, lsr #27
   12708:	andeq	r2, r1, r4, asr #29
   1270c:	andeq	r2, r1, ip, lsr #27
   12710:	andeq	r2, r1, ip, asr #27
   12714:	andeq	r2, r1, ip, lsr #27
   12718:	andeq	r2, r1, ip, lsr #27
   1271c:	andeq	r2, r1, ip, lsr #27
   12720:	andeq	r2, r1, r4, asr #29
   12724:	andeq	r2, r1, r4, asr #29
   12728:	andeq	r2, r1, r4, asr #29
   1272c:	andeq	r2, r1, r4, asr #29
   12730:	andeq	r2, r1, r4, asr #29
   12734:	andeq	r2, r1, r4, asr #29
   12738:	andeq	r2, r1, r4, asr #29
   1273c:	andeq	r2, r1, r4, asr #29
   12740:	andeq	r2, r1, r4, asr #29
   12744:	andeq	r2, r1, r4, asr #29
   12748:	andeq	r2, r1, r4, asr #29
   1274c:	andeq	r2, r1, r4, asr #29
   12750:	andeq	r2, r1, r4, asr #29
   12754:	andeq	r2, r1, r4, asr #29
   12758:	andeq	r2, r1, r4, asr #29
   1275c:	andeq	r2, r1, r4, asr #29
   12760:	andeq	r2, r1, ip, lsr #27
   12764:	andeq	r2, r1, ip, lsr #27
   12768:	andeq	r2, r1, ip, lsr #27
   1276c:	andeq	r2, r1, ip, lsr #27
   12770:	andeq	r2, r1, ip, ror sl
   12774:	ldrdeq	r2, [r1], -r0
   12778:	andeq	r2, r1, r4, asr #29
   1277c:	andeq	r2, r1, r4, asr #29
   12780:	andeq	r2, r1, r4, asr #29
   12784:	andeq	r2, r1, r4, asr #29
   12788:	andeq	r2, r1, r4, asr #29
   1278c:	andeq	r2, r1, r4, asr #29
   12790:	andeq	r2, r1, r4, asr #29
   12794:	andeq	r2, r1, r4, asr #29
   12798:	andeq	r2, r1, r4, asr #29
   1279c:	andeq	r2, r1, r4, asr #29
   127a0:	andeq	r2, r1, r4, asr #29
   127a4:	andeq	r2, r1, r4, asr #29
   127a8:	andeq	r2, r1, r4, asr #29
   127ac:	andeq	r2, r1, r4, asr #29
   127b0:	andeq	r2, r1, r4, asr #29
   127b4:	andeq	r2, r1, r4, asr #29
   127b8:	andeq	r2, r1, r4, asr #29
   127bc:	andeq	r2, r1, r4, asr #29
   127c0:	andeq	r2, r1, r4, asr #29
   127c4:	andeq	r2, r1, r4, asr #29
   127c8:	andeq	r2, r1, r4, asr #29
   127cc:	andeq	r2, r1, r4, asr #29
   127d0:	andeq	r2, r1, r4, asr #29
   127d4:	andeq	r2, r1, r4, asr #29
   127d8:	andeq	r2, r1, r4, asr #29
   127dc:	andeq	r2, r1, r4, asr #29
   127e0:	andeq	r2, r1, ip, lsr #27
   127e4:	andeq	r2, r1, ip, asr #25
   127e8:	andeq	r2, r1, r4, asr #29
   127ec:	andeq	r2, r1, ip, lsr #27
   127f0:	andeq	r2, r1, r4, asr #29
   127f4:	andeq	r2, r1, ip, lsr #27
   127f8:	andeq	r2, r1, r4, asr #29
   127fc:	andeq	r2, r1, r4, asr #29
   12800:	andeq	r2, r1, r4, asr #29
   12804:	andeq	r2, r1, r4, asr #29
   12808:	andeq	r2, r1, r4, asr #29
   1280c:	andeq	r2, r1, r4, asr #29
   12810:	andeq	r2, r1, r4, asr #29
   12814:	andeq	r2, r1, r4, asr #29
   12818:	andeq	r2, r1, r4, asr #29
   1281c:	andeq	r2, r1, r4, asr #29
   12820:	andeq	r2, r1, r4, asr #29
   12824:	andeq	r2, r1, r4, asr #29
   12828:	andeq	r2, r1, r4, asr #29
   1282c:	andeq	r2, r1, r4, asr #29
   12830:	andeq	r2, r1, r4, asr #29
   12834:	andeq	r2, r1, r4, asr #29
   12838:	andeq	r2, r1, r4, asr #29
   1283c:	andeq	r2, r1, r4, asr #29
   12840:	andeq	r2, r1, r4, asr #29
   12844:	andeq	r2, r1, r4, asr #29
   12848:	andeq	r2, r1, r4, asr #29
   1284c:	andeq	r2, r1, r4, asr #29
   12850:	andeq	r2, r1, r4, asr #29
   12854:	andeq	r2, r1, r4, asr #29
   12858:	andeq	r2, r1, r4, asr #29
   1285c:	andeq	r2, r1, r4, asr #29
   12860:	andeq	r2, r1, ip, asr sp
   12864:	andeq	r2, r1, ip, lsr #27
   12868:	andeq	r2, r1, ip, asr sp
   1286c:	muleq	r1, r0, sp
   12870:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12874:	tst	r0, #1
   12878:	beq	12a60 <__assert_fail@plt+0x1bf8>
   1287c:	b	12880 <__assert_fail@plt+0x1a18>
   12880:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12884:	tst	r0, #1
   12888:	beq	12890 <__assert_fail@plt+0x1a28>
   1288c:	b	138e4 <__assert_fail@plt+0x2a7c>
   12890:	movw	r0, #1
   12894:	strb	r0, [fp, #-66]	; 0xffffffbe
   12898:	ldr	r0, [fp, #8]
   1289c:	cmp	r0, #2
   128a0:	bne	12954 <__assert_fail@plt+0x1aec>
   128a4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   128a8:	tst	r0, #1
   128ac:	bne	12954 <__assert_fail@plt+0x1aec>
   128b0:	b	128b4 <__assert_fail@plt+0x1a4c>
   128b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   128b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128bc:	cmp	r0, r1
   128c0:	bcs	128d8 <__assert_fail@plt+0x1a70>
   128c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   128cc:	add	r0, r0, r1
   128d0:	movw	r1, #39	; 0x27
   128d4:	strb	r1, [r0]
   128d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   128dc:	add	r0, r0, #1
   128e0:	str	r0, [fp, #-44]	; 0xffffffd4
   128e4:	b	128e8 <__assert_fail@plt+0x1a80>
   128e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   128ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128f0:	cmp	r0, r1
   128f4:	bcs	1290c <__assert_fail@plt+0x1aa4>
   128f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12900:	add	r0, r0, r1
   12904:	movw	r1, #36	; 0x24
   12908:	strb	r1, [r0]
   1290c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12910:	add	r0, r0, #1
   12914:	str	r0, [fp, #-44]	; 0xffffffd4
   12918:	b	1291c <__assert_fail@plt+0x1ab4>
   1291c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12924:	cmp	r0, r1
   12928:	bcs	12940 <__assert_fail@plt+0x1ad8>
   1292c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12930:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12934:	add	r0, r0, r1
   12938:	movw	r1, #39	; 0x27
   1293c:	strb	r1, [r0]
   12940:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12944:	add	r0, r0, #1
   12948:	str	r0, [fp, #-44]	; 0xffffffd4
   1294c:	movw	r0, #1
   12950:	strb	r0, [fp, #-60]	; 0xffffffc4
   12954:	b	12958 <__assert_fail@plt+0x1af0>
   12958:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1295c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12960:	cmp	r0, r1
   12964:	bcs	1297c <__assert_fail@plt+0x1b14>
   12968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1296c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12970:	add	r0, r0, r1
   12974:	movw	r1, #92	; 0x5c
   12978:	strb	r1, [r0]
   1297c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12980:	add	r0, r0, #1
   12984:	str	r0, [fp, #-44]	; 0xffffffd4
   12988:	b	1298c <__assert_fail@plt+0x1b24>
   1298c:	ldr	r0, [fp, #8]
   12990:	cmp	r0, #2
   12994:	beq	12a54 <__assert_fail@plt+0x1bec>
   12998:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1299c:	add	r0, r0, #1
   129a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   129a4:	cmp	r0, r1
   129a8:	bcs	12a54 <__assert_fail@plt+0x1bec>
   129ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   129b4:	add	r1, r1, #1
   129b8:	add	r0, r0, r1
   129bc:	ldrb	r0, [r0]
   129c0:	movw	r1, #48	; 0x30
   129c4:	cmp	r1, r0
   129c8:	bgt	12a54 <__assert_fail@plt+0x1bec>
   129cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   129d4:	add	r1, r1, #1
   129d8:	add	r0, r0, r1
   129dc:	ldrb	r0, [r0]
   129e0:	cmp	r0, #57	; 0x39
   129e4:	bgt	12a54 <__assert_fail@plt+0x1bec>
   129e8:	b	129ec <__assert_fail@plt+0x1b84>
   129ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129f4:	cmp	r0, r1
   129f8:	bcs	12a10 <__assert_fail@plt+0x1ba8>
   129fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a04:	add	r0, r0, r1
   12a08:	movw	r1, #48	; 0x30
   12a0c:	strb	r1, [r0]
   12a10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a14:	add	r0, r0, #1
   12a18:	str	r0, [fp, #-44]	; 0xffffffd4
   12a1c:	b	12a20 <__assert_fail@plt+0x1bb8>
   12a20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12a28:	cmp	r0, r1
   12a2c:	bcs	12a44 <__assert_fail@plt+0x1bdc>
   12a30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12a38:	add	r0, r0, r1
   12a3c:	movw	r1, #48	; 0x30
   12a40:	strb	r1, [r0]
   12a44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12a48:	add	r0, r0, #1
   12a4c:	str	r0, [fp, #-44]	; 0xffffffd4
   12a50:	b	12a54 <__assert_fail@plt+0x1bec>
   12a54:	movw	r0, #48	; 0x30
   12a58:	strb	r0, [fp, #-63]	; 0xffffffc1
   12a5c:	b	12a78 <__assert_fail@plt+0x1c10>
   12a60:	ldr	r0, [fp, #12]
   12a64:	and	r0, r0, #1
   12a68:	cmp	r0, #0
   12a6c:	beq	12a74 <__assert_fail@plt+0x1c0c>
   12a70:	b	13754 <__assert_fail@plt+0x28ec>
   12a74:	b	12a78 <__assert_fail@plt+0x1c10>
   12a78:	b	134f0 <__assert_fail@plt+0x2688>
   12a7c:	ldr	r0, [fp, #8]
   12a80:	cmp	r0, #2
   12a84:	str	r0, [sp, #32]
   12a88:	beq	12aa0 <__assert_fail@plt+0x1c38>
   12a8c:	b	12a90 <__assert_fail@plt+0x1c28>
   12a90:	ldr	r0, [sp, #32]
   12a94:	cmp	r0, #5
   12a98:	beq	12ab4 <__assert_fail@plt+0x1c4c>
   12a9c:	b	12c70 <__assert_fail@plt+0x1e08>
   12aa0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12aa4:	tst	r0, #1
   12aa8:	beq	12ab0 <__assert_fail@plt+0x1c48>
   12aac:	b	138e4 <__assert_fail@plt+0x2a7c>
   12ab0:	b	12c74 <__assert_fail@plt+0x1e0c>
   12ab4:	ldr	r0, [fp, #12]
   12ab8:	and	r0, r0, #4
   12abc:	cmp	r0, #0
   12ac0:	beq	12c6c <__assert_fail@plt+0x1e04>
   12ac4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ac8:	add	r0, r0, #2
   12acc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12ad0:	cmp	r0, r1
   12ad4:	bcs	12c6c <__assert_fail@plt+0x1e04>
   12ad8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12adc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ae0:	add	r1, r1, #1
   12ae4:	add	r0, r0, r1
   12ae8:	ldrb	r0, [r0]
   12aec:	cmp	r0, #63	; 0x3f
   12af0:	bne	12c6c <__assert_fail@plt+0x1e04>
   12af4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12af8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12afc:	add	r0, r1, r0
   12b00:	ldrb	r0, [r0, #2]
   12b04:	mov	r1, r0
   12b08:	cmp	r0, #33	; 0x21
   12b0c:	str	r1, [sp, #28]
   12b10:	beq	12b60 <__assert_fail@plt+0x1cf8>
   12b14:	b	12b18 <__assert_fail@plt+0x1cb0>
   12b18:	ldr	r0, [sp, #28]
   12b1c:	sub	r1, r0, #39	; 0x27
   12b20:	cmp	r1, #3
   12b24:	bcc	12b60 <__assert_fail@plt+0x1cf8>
   12b28:	b	12b2c <__assert_fail@plt+0x1cc4>
   12b2c:	ldr	r0, [sp, #28]
   12b30:	cmp	r0, #45	; 0x2d
   12b34:	beq	12b60 <__assert_fail@plt+0x1cf8>
   12b38:	b	12b3c <__assert_fail@plt+0x1cd4>
   12b3c:	ldr	r0, [sp, #28]
   12b40:	cmp	r0, #47	; 0x2f
   12b44:	beq	12b60 <__assert_fail@plt+0x1cf8>
   12b48:	b	12b4c <__assert_fail@plt+0x1ce4>
   12b4c:	ldr	r0, [sp, #28]
   12b50:	sub	r1, r0, #60	; 0x3c
   12b54:	cmp	r1, #2
   12b58:	bhi	12c64 <__assert_fail@plt+0x1dfc>
   12b5c:	b	12b60 <__assert_fail@plt+0x1cf8>
   12b60:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12b64:	tst	r0, #1
   12b68:	beq	12b70 <__assert_fail@plt+0x1d08>
   12b6c:	b	138e4 <__assert_fail@plt+0x2a7c>
   12b70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12b74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12b78:	add	r1, r1, #2
   12b7c:	add	r0, r0, r1
   12b80:	ldrb	r0, [r0]
   12b84:	strb	r0, [fp, #-63]	; 0xffffffc1
   12b88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b8c:	add	r0, r0, #2
   12b90:	str	r0, [fp, #-40]	; 0xffffffd8
   12b94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12b9c:	cmp	r0, r1
   12ba0:	bcs	12bb8 <__assert_fail@plt+0x1d50>
   12ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ba8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12bac:	add	r0, r0, r1
   12bb0:	movw	r1, #63	; 0x3f
   12bb4:	strb	r1, [r0]
   12bb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bbc:	add	r0, r0, #1
   12bc0:	str	r0, [fp, #-44]	; 0xffffffd4
   12bc4:	b	12bc8 <__assert_fail@plt+0x1d60>
   12bc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bd0:	cmp	r0, r1
   12bd4:	bcs	12bec <__assert_fail@plt+0x1d84>
   12bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12be0:	add	r0, r0, r1
   12be4:	movw	r1, #34	; 0x22
   12be8:	strb	r1, [r0]
   12bec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bf0:	add	r0, r0, #1
   12bf4:	str	r0, [fp, #-44]	; 0xffffffd4
   12bf8:	b	12bfc <__assert_fail@plt+0x1d94>
   12bfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c04:	cmp	r0, r1
   12c08:	bcs	12c20 <__assert_fail@plt+0x1db8>
   12c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c14:	add	r0, r0, r1
   12c18:	movw	r1, #34	; 0x22
   12c1c:	strb	r1, [r0]
   12c20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c24:	add	r0, r0, #1
   12c28:	str	r0, [fp, #-44]	; 0xffffffd4
   12c2c:	b	12c30 <__assert_fail@plt+0x1dc8>
   12c30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c38:	cmp	r0, r1
   12c3c:	bcs	12c54 <__assert_fail@plt+0x1dec>
   12c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c48:	add	r0, r0, r1
   12c4c:	movw	r1, #63	; 0x3f
   12c50:	strb	r1, [r0]
   12c54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c58:	add	r0, r0, #1
   12c5c:	str	r0, [fp, #-44]	; 0xffffffd4
   12c60:	b	12c68 <__assert_fail@plt+0x1e00>
   12c64:	b	12c68 <__assert_fail@plt+0x1e00>
   12c68:	b	12c6c <__assert_fail@plt+0x1e04>
   12c6c:	b	12c74 <__assert_fail@plt+0x1e0c>
   12c70:	b	12c74 <__assert_fail@plt+0x1e0c>
   12c74:	b	134f0 <__assert_fail@plt+0x2688>
   12c78:	movw	r0, #97	; 0x61
   12c7c:	strb	r0, [fp, #-64]	; 0xffffffc0
   12c80:	b	12d40 <__assert_fail@plt+0x1ed8>
   12c84:	movw	r0, #98	; 0x62
   12c88:	strb	r0, [fp, #-64]	; 0xffffffc0
   12c8c:	b	12d40 <__assert_fail@plt+0x1ed8>
   12c90:	movw	r0, #102	; 0x66
   12c94:	strb	r0, [fp, #-64]	; 0xffffffc0
   12c98:	b	12d40 <__assert_fail@plt+0x1ed8>
   12c9c:	movw	r0, #110	; 0x6e
   12ca0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12ca4:	b	12d20 <__assert_fail@plt+0x1eb8>
   12ca8:	movw	r0, #114	; 0x72
   12cac:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cb0:	b	12d20 <__assert_fail@plt+0x1eb8>
   12cb4:	movw	r0, #116	; 0x74
   12cb8:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cbc:	b	12d20 <__assert_fail@plt+0x1eb8>
   12cc0:	movw	r0, #118	; 0x76
   12cc4:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cc8:	b	12d40 <__assert_fail@plt+0x1ed8>
   12ccc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   12cd0:	strb	r0, [fp, #-64]	; 0xffffffc0
   12cd4:	ldr	r0, [fp, #8]
   12cd8:	cmp	r0, #2
   12cdc:	bne	12cf4 <__assert_fail@plt+0x1e8c>
   12ce0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ce4:	tst	r0, #1
   12ce8:	beq	12cf0 <__assert_fail@plt+0x1e88>
   12cec:	b	138e4 <__assert_fail@plt+0x2a7c>
   12cf0:	b	13678 <__assert_fail@plt+0x2810>
   12cf4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12cf8:	tst	r0, #1
   12cfc:	beq	12d1c <__assert_fail@plt+0x1eb4>
   12d00:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d04:	tst	r0, #1
   12d08:	beq	12d1c <__assert_fail@plt+0x1eb4>
   12d0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12d10:	cmp	r0, #0
   12d14:	beq	12d1c <__assert_fail@plt+0x1eb4>
   12d18:	b	13678 <__assert_fail@plt+0x2810>
   12d1c:	b	12d20 <__assert_fail@plt+0x1eb8>
   12d20:	ldr	r0, [fp, #8]
   12d24:	cmp	r0, #2
   12d28:	bne	12d3c <__assert_fail@plt+0x1ed4>
   12d2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d30:	tst	r0, #1
   12d34:	beq	12d3c <__assert_fail@plt+0x1ed4>
   12d38:	b	138e4 <__assert_fail@plt+0x2a7c>
   12d3c:	b	12d40 <__assert_fail@plt+0x1ed8>
   12d40:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12d44:	tst	r0, #1
   12d48:	beq	12d58 <__assert_fail@plt+0x1ef0>
   12d4c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   12d50:	strb	r0, [fp, #-63]	; 0xffffffc1
   12d54:	b	13564 <__assert_fail@plt+0x26fc>
   12d58:	b	134f0 <__assert_fail@plt+0x2688>
   12d5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d60:	cmn	r0, #1
   12d64:	bne	12d7c <__assert_fail@plt+0x1f14>
   12d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d6c:	ldrb	r0, [r0, #1]
   12d70:	cmp	r0, #0
   12d74:	beq	12d8c <__assert_fail@plt+0x1f24>
   12d78:	b	12d88 <__assert_fail@plt+0x1f20>
   12d7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d80:	cmp	r0, #1
   12d84:	beq	12d8c <__assert_fail@plt+0x1f24>
   12d88:	b	134f0 <__assert_fail@plt+0x2688>
   12d8c:	b	12d90 <__assert_fail@plt+0x1f28>
   12d90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d94:	cmp	r0, #0
   12d98:	beq	12da0 <__assert_fail@plt+0x1f38>
   12d9c:	b	134f0 <__assert_fail@plt+0x2688>
   12da0:	b	12da4 <__assert_fail@plt+0x1f3c>
   12da4:	movw	r0, #1
   12da8:	strb	r0, [fp, #-67]	; 0xffffffbd
   12dac:	ldr	r0, [fp, #8]
   12db0:	cmp	r0, #2
   12db4:	bne	12dc8 <__assert_fail@plt+0x1f60>
   12db8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12dbc:	tst	r0, #1
   12dc0:	beq	12dc8 <__assert_fail@plt+0x1f60>
   12dc4:	b	138e4 <__assert_fail@plt+0x2a7c>
   12dc8:	b	134f0 <__assert_fail@plt+0x2688>
   12dcc:	movw	r0, #1
   12dd0:	strb	r0, [fp, #-61]	; 0xffffffc3
   12dd4:	strb	r0, [fp, #-67]	; 0xffffffbd
   12dd8:	ldr	r0, [fp, #8]
   12ddc:	cmp	r0, #2
   12de0:	bne	12ec0 <__assert_fail@plt+0x2058>
   12de4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12de8:	tst	r0, #1
   12dec:	beq	12df4 <__assert_fail@plt+0x1f8c>
   12df0:	b	138e4 <__assert_fail@plt+0x2a7c>
   12df4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12df8:	cmp	r0, #0
   12dfc:	beq	12e1c <__assert_fail@plt+0x1fb4>
   12e00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12e04:	cmp	r0, #0
   12e08:	bne	12e1c <__assert_fail@plt+0x1fb4>
   12e0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12e10:	str	r0, [fp, #-48]	; 0xffffffd0
   12e14:	movw	r0, #0
   12e18:	str	r0, [fp, #-28]	; 0xffffffe4
   12e1c:	b	12e20 <__assert_fail@plt+0x1fb8>
   12e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e28:	cmp	r0, r1
   12e2c:	bcs	12e44 <__assert_fail@plt+0x1fdc>
   12e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12e38:	add	r0, r0, r1
   12e3c:	movw	r1, #39	; 0x27
   12e40:	strb	r1, [r0]
   12e44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e48:	add	r0, r0, #1
   12e4c:	str	r0, [fp, #-44]	; 0xffffffd4
   12e50:	b	12e54 <__assert_fail@plt+0x1fec>
   12e54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e5c:	cmp	r0, r1
   12e60:	bcs	12e78 <__assert_fail@plt+0x2010>
   12e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12e6c:	add	r0, r0, r1
   12e70:	movw	r1, #92	; 0x5c
   12e74:	strb	r1, [r0]
   12e78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e7c:	add	r0, r0, #1
   12e80:	str	r0, [fp, #-44]	; 0xffffffd4
   12e84:	b	12e88 <__assert_fail@plt+0x2020>
   12e88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e90:	cmp	r0, r1
   12e94:	bcs	12eac <__assert_fail@plt+0x2044>
   12e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12ea0:	add	r0, r0, r1
   12ea4:	movw	r1, #39	; 0x27
   12ea8:	strb	r1, [r0]
   12eac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12eb0:	add	r0, r0, #1
   12eb4:	str	r0, [fp, #-44]	; 0xffffffd4
   12eb8:	movw	r0, #0
   12ebc:	strb	r0, [fp, #-60]	; 0xffffffc4
   12ec0:	b	134f0 <__assert_fail@plt+0x2688>
   12ec4:	movw	r0, #1
   12ec8:	strb	r0, [fp, #-67]	; 0xffffffbd
   12ecc:	b	134f0 <__assert_fail@plt+0x2688>
   12ed0:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   12ed4:	tst	r0, #1
   12ed8:	beq	12f18 <__assert_fail@plt+0x20b0>
   12edc:	mov	r0, #1
   12ee0:	str	r0, [fp, #-72]	; 0xffffffb8
   12ee4:	bl	10d84 <__ctype_b_loc@plt>
   12ee8:	ldr	r0, [r0]
   12eec:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   12ef0:	mov	r2, r1
   12ef4:	add	r0, r0, r1, lsl #1
   12ef8:	ldrh	r0, [r0]
   12efc:	and	r0, r0, #16384	; 0x4000
   12f00:	cmp	r0, #0
   12f04:	movw	r0, #0
   12f08:	movne	r0, #1
   12f0c:	and	r0, r0, #1
   12f10:	strb	r0, [fp, #-73]	; 0xffffffb7
   12f14:	b	131a4 <__assert_fail@plt+0x233c>
   12f18:	sub	r0, fp, #84	; 0x54
   12f1c:	movw	r1, #0
   12f20:	and	r1, r1, #255	; 0xff
   12f24:	movw	r2, #8
   12f28:	bl	10dd8 <memset@plt>
   12f2c:	movw	r0, #0
   12f30:	str	r0, [fp, #-72]	; 0xffffffb8
   12f34:	movw	r0, #1
   12f38:	strb	r0, [fp, #-73]	; 0xffffffb7
   12f3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f40:	cmn	r0, #1
   12f44:	bne	12f54 <__assert_fail@plt+0x20ec>
   12f48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f4c:	bl	10da8 <strlen@plt>
   12f50:	str	r0, [fp, #-36]	; 0xffffffdc
   12f54:	b	12f58 <__assert_fail@plt+0x20f0>
   12f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12f60:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12f64:	add	r1, r1, r2
   12f68:	add	r1, r0, r1
   12f6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12f74:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12f78:	add	r2, r2, r3
   12f7c:	sub	r2, r0, r2
   12f80:	add	r0, sp, #88	; 0x58
   12f84:	sub	r3, fp, #84	; 0x54
   12f88:	bl	183c8 <__assert_fail@plt+0x7560>
   12f8c:	str	r0, [sp, #84]	; 0x54
   12f90:	ldr	r0, [sp, #84]	; 0x54
   12f94:	cmp	r0, #0
   12f98:	bne	12fa0 <__assert_fail@plt+0x2138>
   12f9c:	b	131a0 <__assert_fail@plt+0x2338>
   12fa0:	ldr	r0, [sp, #84]	; 0x54
   12fa4:	cmn	r0, #1
   12fa8:	bne	12fb8 <__assert_fail@plt+0x2150>
   12fac:	movw	r0, #0
   12fb0:	strb	r0, [fp, #-73]	; 0xffffffb7
   12fb4:	b	131a0 <__assert_fail@plt+0x2338>
   12fb8:	ldr	r0, [sp, #84]	; 0x54
   12fbc:	cmn	r0, #2
   12fc0:	bne	13034 <__assert_fail@plt+0x21cc>
   12fc4:	movw	r0, #0
   12fc8:	strb	r0, [fp, #-73]	; 0xffffffb7
   12fcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fd0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12fd4:	add	r0, r0, r1
   12fd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12fdc:	cmp	r0, r1
   12fe0:	movw	r0, #0
   12fe4:	str	r0, [sp, #24]
   12fe8:	bcs	13014 <__assert_fail@plt+0x21ac>
   12fec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ff0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ff4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12ff8:	add	r1, r1, r2
   12ffc:	add	r0, r0, r1
   13000:	ldrb	r0, [r0]
   13004:	cmp	r0, #0
   13008:	movw	r0, #0
   1300c:	movne	r0, #1
   13010:	str	r0, [sp, #24]
   13014:	ldr	r0, [sp, #24]
   13018:	tst	r0, #1
   1301c:	beq	13030 <__assert_fail@plt+0x21c8>
   13020:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13024:	add	r0, r0, #1
   13028:	str	r0, [fp, #-72]	; 0xffffffb8
   1302c:	b	12fcc <__assert_fail@plt+0x2164>
   13030:	b	131a0 <__assert_fail@plt+0x2338>
   13034:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13038:	tst	r0, #1
   1303c:	beq	13148 <__assert_fail@plt+0x22e0>
   13040:	ldr	r0, [fp, #8]
   13044:	cmp	r0, #2
   13048:	bne	13148 <__assert_fail@plt+0x22e0>
   1304c:	movw	r0, #1
   13050:	str	r0, [sp, #80]	; 0x50
   13054:	ldr	r0, [sp, #80]	; 0x50
   13058:	ldr	r1, [sp, #84]	; 0x54
   1305c:	cmp	r0, r1
   13060:	bcs	13144 <__assert_fail@plt+0x22dc>
   13064:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13068:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1306c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13070:	add	r1, r1, r2
   13074:	ldr	r2, [sp, #80]	; 0x50
   13078:	add	r1, r1, r2
   1307c:	ldrb	r0, [r0, r1]
   13080:	sub	r0, r0, #91	; 0x5b
   13084:	cmp	r0, #33	; 0x21
   13088:	str	r0, [sp, #20]
   1308c:	bhi	1312c <__assert_fail@plt+0x22c4>
   13090:	add	r0, pc, #8
   13094:	ldr	r1, [sp, #20]
   13098:	ldr	r0, [r0, r1, lsl #2]
   1309c:	mov	pc, r0
   130a0:	andeq	r3, r1, r8, lsr #2
   130a4:	andeq	r3, r1, r8, lsr #2
   130a8:	andeq	r3, r1, ip, lsr #2
   130ac:	andeq	r3, r1, r8, lsr #2
   130b0:	andeq	r3, r1, ip, lsr #2
   130b4:	andeq	r3, r1, r8, lsr #2
   130b8:	andeq	r3, r1, ip, lsr #2
   130bc:	andeq	r3, r1, ip, lsr #2
   130c0:	andeq	r3, r1, ip, lsr #2
   130c4:	andeq	r3, r1, ip, lsr #2
   130c8:	andeq	r3, r1, ip, lsr #2
   130cc:	andeq	r3, r1, ip, lsr #2
   130d0:	andeq	r3, r1, ip, lsr #2
   130d4:	andeq	r3, r1, ip, lsr #2
   130d8:	andeq	r3, r1, ip, lsr #2
   130dc:	andeq	r3, r1, ip, lsr #2
   130e0:	andeq	r3, r1, ip, lsr #2
   130e4:	andeq	r3, r1, ip, lsr #2
   130e8:	andeq	r3, r1, ip, lsr #2
   130ec:	andeq	r3, r1, ip, lsr #2
   130f0:	andeq	r3, r1, ip, lsr #2
   130f4:	andeq	r3, r1, ip, lsr #2
   130f8:	andeq	r3, r1, ip, lsr #2
   130fc:	andeq	r3, r1, ip, lsr #2
   13100:	andeq	r3, r1, ip, lsr #2
   13104:	andeq	r3, r1, ip, lsr #2
   13108:	andeq	r3, r1, ip, lsr #2
   1310c:	andeq	r3, r1, ip, lsr #2
   13110:	andeq	r3, r1, ip, lsr #2
   13114:	andeq	r3, r1, ip, lsr #2
   13118:	andeq	r3, r1, ip, lsr #2
   1311c:	andeq	r3, r1, ip, lsr #2
   13120:	andeq	r3, r1, ip, lsr #2
   13124:	andeq	r3, r1, r8, lsr #2
   13128:	b	138e4 <__assert_fail@plt+0x2a7c>
   1312c:	b	13130 <__assert_fail@plt+0x22c8>
   13130:	b	13134 <__assert_fail@plt+0x22cc>
   13134:	ldr	r0, [sp, #80]	; 0x50
   13138:	add	r0, r0, #1
   1313c:	str	r0, [sp, #80]	; 0x50
   13140:	b	13054 <__assert_fail@plt+0x21ec>
   13144:	b	13148 <__assert_fail@plt+0x22e0>
   13148:	ldr	r0, [sp, #88]	; 0x58
   1314c:	bl	10cf4 <iswprint@plt>
   13150:	cmp	r0, #0
   13154:	bne	13160 <__assert_fail@plt+0x22f8>
   13158:	movw	r0, #0
   1315c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13160:	ldr	r0, [sp, #84]	; 0x54
   13164:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13168:	add	r0, r1, r0
   1316c:	str	r0, [fp, #-72]	; 0xffffffb8
   13170:	b	13174 <__assert_fail@plt+0x230c>
   13174:	b	13178 <__assert_fail@plt+0x2310>
   13178:	b	1317c <__assert_fail@plt+0x2314>
   1317c:	sub	r0, fp, #84	; 0x54
   13180:	bl	10cc4 <mbsinit@plt>
   13184:	cmp	r0, #0
   13188:	movw	r0, #0
   1318c:	movne	r0, #1
   13190:	mvn	r1, #0
   13194:	eor	r0, r0, r1
   13198:	tst	r0, #1
   1319c:	bne	12f58 <__assert_fail@plt+0x20f0>
   131a0:	b	131a4 <__assert_fail@plt+0x233c>
   131a4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   131a8:	and	r0, r0, #1
   131ac:	strb	r0, [fp, #-67]	; 0xffffffbd
   131b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   131b4:	movw	r1, #1
   131b8:	cmp	r1, r0
   131bc:	bcc	131d8 <__assert_fail@plt+0x2370>
   131c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   131c4:	tst	r0, #1
   131c8:	beq	134ec <__assert_fail@plt+0x2684>
   131cc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   131d0:	tst	r0, #1
   131d4:	bne	134ec <__assert_fail@plt+0x2684>
   131d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   131dc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   131e0:	add	r0, r0, r1
   131e4:	str	r0, [sp, #76]	; 0x4c
   131e8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   131ec:	tst	r0, #1
   131f0:	beq	133a0 <__assert_fail@plt+0x2538>
   131f4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   131f8:	tst	r0, #1
   131fc:	bne	133a0 <__assert_fail@plt+0x2538>
   13200:	b	13204 <__assert_fail@plt+0x239c>
   13204:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13208:	tst	r0, #1
   1320c:	beq	13214 <__assert_fail@plt+0x23ac>
   13210:	b	138e4 <__assert_fail@plt+0x2a7c>
   13214:	movw	r0, #1
   13218:	strb	r0, [fp, #-66]	; 0xffffffbe
   1321c:	ldr	r0, [fp, #8]
   13220:	cmp	r0, #2
   13224:	bne	132d8 <__assert_fail@plt+0x2470>
   13228:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1322c:	tst	r0, #1
   13230:	bne	132d8 <__assert_fail@plt+0x2470>
   13234:	b	13238 <__assert_fail@plt+0x23d0>
   13238:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1323c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13240:	cmp	r0, r1
   13244:	bcs	1325c <__assert_fail@plt+0x23f4>
   13248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1324c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13250:	add	r0, r0, r1
   13254:	movw	r1, #39	; 0x27
   13258:	strb	r1, [r0]
   1325c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13260:	add	r0, r0, #1
   13264:	str	r0, [fp, #-44]	; 0xffffffd4
   13268:	b	1326c <__assert_fail@plt+0x2404>
   1326c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13270:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13274:	cmp	r0, r1
   13278:	bcs	13290 <__assert_fail@plt+0x2428>
   1327c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13280:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13284:	add	r0, r0, r1
   13288:	movw	r1, #36	; 0x24
   1328c:	strb	r1, [r0]
   13290:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13294:	add	r0, r0, #1
   13298:	str	r0, [fp, #-44]	; 0xffffffd4
   1329c:	b	132a0 <__assert_fail@plt+0x2438>
   132a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132a8:	cmp	r0, r1
   132ac:	bcs	132c4 <__assert_fail@plt+0x245c>
   132b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132b8:	add	r0, r0, r1
   132bc:	movw	r1, #39	; 0x27
   132c0:	strb	r1, [r0]
   132c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132c8:	add	r0, r0, #1
   132cc:	str	r0, [fp, #-44]	; 0xffffffd4
   132d0:	movw	r0, #1
   132d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   132d8:	b	132dc <__assert_fail@plt+0x2474>
   132dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132e4:	cmp	r0, r1
   132e8:	bcs	13300 <__assert_fail@plt+0x2498>
   132ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132f4:	add	r0, r0, r1
   132f8:	movw	r1, #92	; 0x5c
   132fc:	strb	r1, [r0]
   13300:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13304:	add	r0, r0, #1
   13308:	str	r0, [fp, #-44]	; 0xffffffd4
   1330c:	b	13310 <__assert_fail@plt+0x24a8>
   13310:	b	13314 <__assert_fail@plt+0x24ac>
   13314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1331c:	cmp	r0, r1
   13320:	bcs	13340 <__assert_fail@plt+0x24d8>
   13324:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13328:	asr	r0, r0, #6
   1332c:	add	r0, r0, #48	; 0x30
   13330:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13334:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13338:	add	r1, r1, r2
   1333c:	strb	r0, [r1]
   13340:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13344:	add	r0, r0, #1
   13348:	str	r0, [fp, #-44]	; 0xffffffd4
   1334c:	b	13350 <__assert_fail@plt+0x24e8>
   13350:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13354:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13358:	cmp	r0, r1
   1335c:	bcs	13380 <__assert_fail@plt+0x2518>
   13360:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13364:	asr	r0, r0, #3
   13368:	and	r0, r0, #7
   1336c:	add	r0, r0, #48	; 0x30
   13370:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13374:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13378:	add	r1, r1, r2
   1337c:	strb	r0, [r1]
   13380:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13384:	add	r0, r0, #1
   13388:	str	r0, [fp, #-44]	; 0xffffffd4
   1338c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13390:	and	r0, r0, #7
   13394:	add	r0, r0, #48	; 0x30
   13398:	strb	r0, [fp, #-63]	; 0xffffffc1
   1339c:	b	133ec <__assert_fail@plt+0x2584>
   133a0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   133a4:	tst	r0, #1
   133a8:	beq	133e8 <__assert_fail@plt+0x2580>
   133ac:	b	133b0 <__assert_fail@plt+0x2548>
   133b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133b8:	cmp	r0, r1
   133bc:	bcs	133d4 <__assert_fail@plt+0x256c>
   133c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   133c8:	add	r0, r0, r1
   133cc:	movw	r1, #92	; 0x5c
   133d0:	strb	r1, [r0]
   133d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133d8:	add	r0, r0, #1
   133dc:	str	r0, [fp, #-44]	; 0xffffffd4
   133e0:	movw	r0, #0
   133e4:	strb	r0, [fp, #-65]	; 0xffffffbf
   133e8:	b	133ec <__assert_fail@plt+0x2584>
   133ec:	ldr	r0, [sp, #76]	; 0x4c
   133f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   133f4:	add	r1, r1, #1
   133f8:	cmp	r0, r1
   133fc:	bhi	13404 <__assert_fail@plt+0x259c>
   13400:	b	134e8 <__assert_fail@plt+0x2680>
   13404:	b	13408 <__assert_fail@plt+0x25a0>
   13408:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1340c:	tst	r0, #1
   13410:	beq	13490 <__assert_fail@plt+0x2628>
   13414:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13418:	tst	r0, #1
   1341c:	bne	13490 <__assert_fail@plt+0x2628>
   13420:	b	13424 <__assert_fail@plt+0x25bc>
   13424:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13428:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1342c:	cmp	r0, r1
   13430:	bcs	13448 <__assert_fail@plt+0x25e0>
   13434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13438:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1343c:	add	r0, r0, r1
   13440:	movw	r1, #39	; 0x27
   13444:	strb	r1, [r0]
   13448:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1344c:	add	r0, r0, #1
   13450:	str	r0, [fp, #-44]	; 0xffffffd4
   13454:	b	13458 <__assert_fail@plt+0x25f0>
   13458:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1345c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13460:	cmp	r0, r1
   13464:	bcs	1347c <__assert_fail@plt+0x2614>
   13468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1346c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13470:	add	r0, r0, r1
   13474:	movw	r1, #39	; 0x27
   13478:	strb	r1, [r0]
   1347c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13480:	add	r0, r0, #1
   13484:	str	r0, [fp, #-44]	; 0xffffffd4
   13488:	movw	r0, #0
   1348c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13490:	b	13494 <__assert_fail@plt+0x262c>
   13494:	b	13498 <__assert_fail@plt+0x2630>
   13498:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1349c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   134a0:	cmp	r0, r1
   134a4:	bcs	134bc <__assert_fail@plt+0x2654>
   134a8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   134ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   134b4:	add	r1, r1, r2
   134b8:	strb	r0, [r1]
   134bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   134c0:	add	r0, r0, #1
   134c4:	str	r0, [fp, #-44]	; 0xffffffd4
   134c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   134cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   134d0:	add	r1, r1, #1
   134d4:	str	r1, [fp, #-40]	; 0xffffffd8
   134d8:	add	r0, r0, r1
   134dc:	ldrb	r0, [r0]
   134e0:	strb	r0, [fp, #-63]	; 0xffffffc1
   134e4:	b	131e8 <__assert_fail@plt+0x2380>
   134e8:	b	13678 <__assert_fail@plt+0x2810>
   134ec:	b	134f0 <__assert_fail@plt+0x2688>
   134f0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   134f4:	tst	r0, #1
   134f8:	beq	13508 <__assert_fail@plt+0x26a0>
   134fc:	ldr	r0, [fp, #8]
   13500:	cmp	r0, #2
   13504:	bne	13514 <__assert_fail@plt+0x26ac>
   13508:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1350c:	tst	r0, #1
   13510:	beq	13550 <__assert_fail@plt+0x26e8>
   13514:	ldr	r0, [fp, #16]
   13518:	movw	r1, #0
   1351c:	cmp	r0, r1
   13520:	beq	13550 <__assert_fail@plt+0x26e8>
   13524:	ldr	r0, [fp, #16]
   13528:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1352c:	lsr	r1, r1, #5
   13530:	add	r0, r0, r1, lsl #2
   13534:	ldr	r0, [r0]
   13538:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1353c:	and	r1, r1, #31
   13540:	lsr	r0, r0, r1
   13544:	and	r0, r0, #1
   13548:	cmp	r0, #0
   1354c:	bne	13560 <__assert_fail@plt+0x26f8>
   13550:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13554:	tst	r0, #1
   13558:	bne	13560 <__assert_fail@plt+0x26f8>
   1355c:	b	13678 <__assert_fail@plt+0x2810>
   13560:	b	13564 <__assert_fail@plt+0x26fc>
   13564:	b	13568 <__assert_fail@plt+0x2700>
   13568:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1356c:	tst	r0, #1
   13570:	beq	13578 <__assert_fail@plt+0x2710>
   13574:	b	138e4 <__assert_fail@plt+0x2a7c>
   13578:	movw	r0, #1
   1357c:	strb	r0, [fp, #-66]	; 0xffffffbe
   13580:	ldr	r0, [fp, #8]
   13584:	cmp	r0, #2
   13588:	bne	1363c <__assert_fail@plt+0x27d4>
   1358c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13590:	tst	r0, #1
   13594:	bne	1363c <__assert_fail@plt+0x27d4>
   13598:	b	1359c <__assert_fail@plt+0x2734>
   1359c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135a4:	cmp	r0, r1
   135a8:	bcs	135c0 <__assert_fail@plt+0x2758>
   135ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135b4:	add	r0, r0, r1
   135b8:	movw	r1, #39	; 0x27
   135bc:	strb	r1, [r0]
   135c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135c4:	add	r0, r0, #1
   135c8:	str	r0, [fp, #-44]	; 0xffffffd4
   135cc:	b	135d0 <__assert_fail@plt+0x2768>
   135d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135d8:	cmp	r0, r1
   135dc:	bcs	135f4 <__assert_fail@plt+0x278c>
   135e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135e8:	add	r0, r0, r1
   135ec:	movw	r1, #36	; 0x24
   135f0:	strb	r1, [r0]
   135f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135f8:	add	r0, r0, #1
   135fc:	str	r0, [fp, #-44]	; 0xffffffd4
   13600:	b	13604 <__assert_fail@plt+0x279c>
   13604:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13608:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1360c:	cmp	r0, r1
   13610:	bcs	13628 <__assert_fail@plt+0x27c0>
   13614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13618:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1361c:	add	r0, r0, r1
   13620:	movw	r1, #39	; 0x27
   13624:	strb	r1, [r0]
   13628:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1362c:	add	r0, r0, #1
   13630:	str	r0, [fp, #-44]	; 0xffffffd4
   13634:	movw	r0, #1
   13638:	strb	r0, [fp, #-60]	; 0xffffffc4
   1363c:	b	13640 <__assert_fail@plt+0x27d8>
   13640:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13644:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13648:	cmp	r0, r1
   1364c:	bcs	13664 <__assert_fail@plt+0x27fc>
   13650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13654:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13658:	add	r0, r0, r1
   1365c:	movw	r1, #92	; 0x5c
   13660:	strb	r1, [r0]
   13664:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13668:	add	r0, r0, #1
   1366c:	str	r0, [fp, #-44]	; 0xffffffd4
   13670:	b	13674 <__assert_fail@plt+0x280c>
   13674:	b	13678 <__assert_fail@plt+0x2810>
   13678:	b	1367c <__assert_fail@plt+0x2814>
   1367c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13680:	tst	r0, #1
   13684:	beq	13704 <__assert_fail@plt+0x289c>
   13688:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1368c:	tst	r0, #1
   13690:	bne	13704 <__assert_fail@plt+0x289c>
   13694:	b	13698 <__assert_fail@plt+0x2830>
   13698:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1369c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136a0:	cmp	r0, r1
   136a4:	bcs	136bc <__assert_fail@plt+0x2854>
   136a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   136b0:	add	r0, r0, r1
   136b4:	movw	r1, #39	; 0x27
   136b8:	strb	r1, [r0]
   136bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136c0:	add	r0, r0, #1
   136c4:	str	r0, [fp, #-44]	; 0xffffffd4
   136c8:	b	136cc <__assert_fail@plt+0x2864>
   136cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136d4:	cmp	r0, r1
   136d8:	bcs	136f0 <__assert_fail@plt+0x2888>
   136dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   136e4:	add	r0, r0, r1
   136e8:	movw	r1, #39	; 0x27
   136ec:	strb	r1, [r0]
   136f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136f4:	add	r0, r0, #1
   136f8:	str	r0, [fp, #-44]	; 0xffffffd4
   136fc:	movw	r0, #0
   13700:	strb	r0, [fp, #-60]	; 0xffffffc4
   13704:	b	13708 <__assert_fail@plt+0x28a0>
   13708:	b	1370c <__assert_fail@plt+0x28a4>
   1370c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13710:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13714:	cmp	r0, r1
   13718:	bcs	13730 <__assert_fail@plt+0x28c8>
   1371c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13720:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13724:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13728:	add	r1, r1, r2
   1372c:	strb	r0, [r1]
   13730:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13734:	add	r0, r0, #1
   13738:	str	r0, [fp, #-44]	; 0xffffffd4
   1373c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   13740:	tst	r0, #1
   13744:	bne	13750 <__assert_fail@plt+0x28e8>
   13748:	movw	r0, #0
   1374c:	strb	r0, [fp, #-62]	; 0xffffffc2
   13750:	b	13754 <__assert_fail@plt+0x28ec>
   13754:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13758:	add	r0, r0, #1
   1375c:	str	r0, [fp, #-40]	; 0xffffffd8
   13760:	b	1250c <__assert_fail@plt+0x16a4>
   13764:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13768:	cmp	r0, #0
   1376c:	bne	1378c <__assert_fail@plt+0x2924>
   13770:	ldr	r0, [fp, #8]
   13774:	cmp	r0, #2
   13778:	bne	1378c <__assert_fail@plt+0x2924>
   1377c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13780:	tst	r0, #1
   13784:	beq	1378c <__assert_fail@plt+0x2924>
   13788:	b	138e4 <__assert_fail@plt+0x2a7c>
   1378c:	ldr	r0, [fp, #8]
   13790:	cmp	r0, #2
   13794:	bne	13834 <__assert_fail@plt+0x29cc>
   13798:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1379c:	tst	r0, #1
   137a0:	bne	13834 <__assert_fail@plt+0x29cc>
   137a4:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   137a8:	tst	r0, #1
   137ac:	beq	13834 <__assert_fail@plt+0x29cc>
   137b0:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   137b4:	tst	r0, #1
   137b8:	beq	13800 <__assert_fail@plt+0x2998>
   137bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   137c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137cc:	ldr	ip, [fp, #12]
   137d0:	ldr	lr, [fp, #16]
   137d4:	ldr	r4, [fp, #20]
   137d8:	ldr	r5, [fp, #24]
   137dc:	movw	r6, #5
   137e0:	str	r6, [sp]
   137e4:	str	ip, [sp, #4]
   137e8:	str	lr, [sp, #8]
   137ec:	str	r4, [sp, #12]
   137f0:	str	r5, [sp, #16]
   137f4:	bl	12224 <__assert_fail@plt+0x13bc>
   137f8:	str	r0, [fp, #-20]	; 0xffffffec
   137fc:	b	1394c <__assert_fail@plt+0x2ae4>
   13800:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13804:	cmp	r0, #0
   13808:	bne	1382c <__assert_fail@plt+0x29c4>
   1380c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13810:	cmp	r0, #0
   13814:	beq	1382c <__assert_fail@plt+0x29c4>
   13818:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1381c:	str	r0, [fp, #-28]	; 0xffffffe4
   13820:	movw	r0, #0
   13824:	str	r0, [fp, #-44]	; 0xffffffd4
   13828:	b	122cc <__assert_fail@plt+0x1464>
   1382c:	b	13830 <__assert_fail@plt+0x29c8>
   13830:	b	13834 <__assert_fail@plt+0x29cc>
   13834:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13838:	movw	r1, #0
   1383c:	cmp	r0, r1
   13840:	beq	138b4 <__assert_fail@plt+0x2a4c>
   13844:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13848:	tst	r0, #1
   1384c:	bne	138b4 <__assert_fail@plt+0x2a4c>
   13850:	b	13854 <__assert_fail@plt+0x29ec>
   13854:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13858:	ldrsb	r0, [r0]
   1385c:	cmp	r0, #0
   13860:	beq	138b0 <__assert_fail@plt+0x2a48>
   13864:	b	13868 <__assert_fail@plt+0x2a00>
   13868:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1386c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13870:	cmp	r0, r1
   13874:	bcs	13890 <__assert_fail@plt+0x2a28>
   13878:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1387c:	ldrb	r0, [r0]
   13880:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13884:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13888:	add	r1, r1, r2
   1388c:	strb	r0, [r1]
   13890:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13894:	add	r0, r0, #1
   13898:	str	r0, [fp, #-44]	; 0xffffffd4
   1389c:	b	138a0 <__assert_fail@plt+0x2a38>
   138a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   138a4:	add	r0, r0, #1
   138a8:	str	r0, [fp, #-52]	; 0xffffffcc
   138ac:	b	13854 <__assert_fail@plt+0x29ec>
   138b0:	b	138b4 <__assert_fail@plt+0x2a4c>
   138b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138bc:	cmp	r0, r1
   138c0:	bcs	138d8 <__assert_fail@plt+0x2a70>
   138c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138cc:	add	r0, r0, r1
   138d0:	movw	r1, #0
   138d4:	strb	r1, [r0]
   138d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138dc:	str	r0, [fp, #-20]	; 0xffffffec
   138e0:	b	1394c <__assert_fail@plt+0x2ae4>
   138e4:	ldr	r0, [fp, #8]
   138e8:	cmp	r0, #2
   138ec:	bne	13904 <__assert_fail@plt+0x2a9c>
   138f0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   138f4:	tst	r0, #1
   138f8:	beq	13904 <__assert_fail@plt+0x2a9c>
   138fc:	movw	r0, #4
   13900:	str	r0, [fp, #8]
   13904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13908:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1390c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13910:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13914:	ldr	ip, [fp, #8]
   13918:	ldr	lr, [fp, #12]
   1391c:	mvn	r4, #2
   13920:	and	lr, lr, r4
   13924:	ldr	r4, [fp, #20]
   13928:	ldr	r5, [fp, #24]
   1392c:	str	ip, [sp]
   13930:	str	lr, [sp, #4]
   13934:	movw	ip, #0
   13938:	str	ip, [sp, #8]
   1393c:	str	r4, [sp, #12]
   13940:	str	r5, [sp, #16]
   13944:	bl	12224 <__assert_fail@plt+0x13bc>
   13948:	str	r0, [fp, #-20]	; 0xffffffec
   1394c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13950:	sub	sp, fp, #16
   13954:	pop	{r4, r5, r6, sl, fp, pc}
   13958:	push	{fp, lr}
   1395c:	mov	fp, sp
   13960:	sub	sp, sp, #16
   13964:	str	r0, [fp, #-4]
   13968:	str	r1, [sp, #8]
   1396c:	str	r2, [sp, #4]
   13970:	ldr	r0, [fp, #-4]
   13974:	ldr	r1, [sp, #8]
   13978:	ldr	r3, [sp, #4]
   1397c:	movw	r2, #0
   13980:	bl	1398c <__assert_fail@plt+0x2b24>
   13984:	mov	sp, fp
   13988:	pop	{fp, pc}
   1398c:	push	{r4, r5, r6, sl, fp, lr}
   13990:	add	fp, sp, #16
   13994:	sub	sp, sp, #80	; 0x50
   13998:	str	r0, [fp, #-20]	; 0xffffffec
   1399c:	str	r1, [fp, #-24]	; 0xffffffe8
   139a0:	str	r2, [fp, #-28]	; 0xffffffe4
   139a4:	str	r3, [fp, #-32]	; 0xffffffe0
   139a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139ac:	movw	r1, #0
   139b0:	cmp	r0, r1
   139b4:	beq	139c4 <__assert_fail@plt+0x2b5c>
   139b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139bc:	str	r0, [sp, #40]	; 0x28
   139c0:	b	139d4 <__assert_fail@plt+0x2b6c>
   139c4:	movw	r0, #45368	; 0xb138
   139c8:	movt	r0, #2
   139cc:	str	r0, [sp, #40]	; 0x28
   139d0:	b	139d4 <__assert_fail@plt+0x2b6c>
   139d4:	ldr	r0, [sp, #40]	; 0x28
   139d8:	str	r0, [fp, #-36]	; 0xffffffdc
   139dc:	bl	10dc0 <__errno_location@plt>
   139e0:	ldr	r0, [r0]
   139e4:	str	r0, [fp, #-40]	; 0xffffffd8
   139e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   139ec:	ldr	r0, [r0, #4]
   139f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   139f4:	movw	r2, #0
   139f8:	cmp	r1, r2
   139fc:	movw	r1, #0
   13a00:	movne	r1, #1
   13a04:	tst	r1, #1
   13a08:	mov	r1, r2
   13a0c:	moveq	r1, #1
   13a10:	orr	r0, r0, r1
   13a14:	str	r0, [fp, #-44]	; 0xffffffd4
   13a18:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13a24:	ldr	r1, [r1]
   13a28:	ldr	ip, [fp, #-44]	; 0xffffffd4
   13a2c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13a30:	add	lr, lr, #8
   13a34:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13a38:	ldr	r4, [r4, #40]	; 0x28
   13a3c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13a40:	ldr	r5, [r5, #44]	; 0x2c
   13a44:	str	r0, [sp, #36]	; 0x24
   13a48:	mov	r0, r2
   13a4c:	str	r1, [sp, #32]
   13a50:	mov	r1, r2
   13a54:	ldr	r2, [sp, #36]	; 0x24
   13a58:	ldr	r6, [sp, #32]
   13a5c:	str	r6, [sp]
   13a60:	str	ip, [sp, #4]
   13a64:	str	lr, [sp, #8]
   13a68:	str	r4, [sp, #12]
   13a6c:	str	r5, [sp, #16]
   13a70:	bl	12224 <__assert_fail@plt+0x13bc>
   13a74:	add	r0, r0, #1
   13a78:	str	r0, [sp, #48]	; 0x30
   13a7c:	ldr	r0, [sp, #48]	; 0x30
   13a80:	bl	14e70 <__assert_fail@plt+0x4008>
   13a84:	str	r0, [sp, #44]	; 0x2c
   13a88:	ldr	r0, [sp, #44]	; 0x2c
   13a8c:	ldr	r1, [sp, #48]	; 0x30
   13a90:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a98:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13a9c:	ldr	ip, [ip]
   13aa0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   13aa4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13aa8:	add	r4, r4, #8
   13aac:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13ab0:	ldr	r5, [r5, #40]	; 0x28
   13ab4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13ab8:	ldr	r6, [r6, #44]	; 0x2c
   13abc:	str	ip, [sp]
   13ac0:	str	lr, [sp, #4]
   13ac4:	str	r4, [sp, #8]
   13ac8:	str	r5, [sp, #12]
   13acc:	str	r6, [sp, #16]
   13ad0:	bl	12224 <__assert_fail@plt+0x13bc>
   13ad4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ad8:	str	r0, [sp, #28]
   13adc:	str	r1, [sp, #24]
   13ae0:	bl	10dc0 <__errno_location@plt>
   13ae4:	ldr	r1, [sp, #24]
   13ae8:	str	r1, [r0]
   13aec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13af0:	movw	r2, #0
   13af4:	cmp	r0, r2
   13af8:	beq	13b0c <__assert_fail@plt+0x2ca4>
   13afc:	ldr	r0, [sp, #48]	; 0x30
   13b00:	sub	r0, r0, #1
   13b04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b08:	str	r0, [r1]
   13b0c:	ldr	r0, [sp, #44]	; 0x2c
   13b10:	sub	sp, fp, #16
   13b14:	pop	{r4, r5, r6, sl, fp, pc}
   13b18:	push	{fp, lr}
   13b1c:	mov	fp, sp
   13b20:	sub	sp, sp, #8
   13b24:	movw	r0, #45268	; 0xb0d4
   13b28:	movt	r0, #2
   13b2c:	ldr	r0, [r0]
   13b30:	str	r0, [sp, #4]
   13b34:	movw	r0, #1
   13b38:	str	r0, [sp]
   13b3c:	ldr	r0, [sp]
   13b40:	movw	r1, #45272	; 0xb0d8
   13b44:	movt	r1, #2
   13b48:	ldr	r1, [r1]
   13b4c:	cmp	r0, r1
   13b50:	bge	13b78 <__assert_fail@plt+0x2d10>
   13b54:	ldr	r0, [sp, #4]
   13b58:	ldr	r1, [sp]
   13b5c:	add	r0, r0, r1, lsl #3
   13b60:	ldr	r0, [r0, #4]
   13b64:	bl	18050 <__assert_fail@plt+0x71e8>
   13b68:	ldr	r0, [sp]
   13b6c:	add	r0, r0, #1
   13b70:	str	r0, [sp]
   13b74:	b	13b3c <__assert_fail@plt+0x2cd4>
   13b78:	ldr	r0, [sp, #4]
   13b7c:	ldr	r0, [r0, #4]
   13b80:	movw	r1, #45416	; 0xb168
   13b84:	movt	r1, #2
   13b88:	cmp	r0, r1
   13b8c:	beq	13bb8 <__assert_fail@plt+0x2d50>
   13b90:	ldr	r0, [sp, #4]
   13b94:	ldr	r0, [r0, #4]
   13b98:	bl	18050 <__assert_fail@plt+0x71e8>
   13b9c:	movw	r0, #256	; 0x100
   13ba0:	movw	r1, #45276	; 0xb0dc
   13ba4:	movt	r1, #2
   13ba8:	str	r0, [r1]
   13bac:	movw	r0, #45416	; 0xb168
   13bb0:	movt	r0, #2
   13bb4:	str	r0, [r1, #4]
   13bb8:	ldr	r0, [sp, #4]
   13bbc:	movw	r1, #45276	; 0xb0dc
   13bc0:	movt	r1, #2
   13bc4:	cmp	r0, r1
   13bc8:	beq	13be8 <__assert_fail@plt+0x2d80>
   13bcc:	ldr	r0, [sp, #4]
   13bd0:	bl	18050 <__assert_fail@plt+0x71e8>
   13bd4:	movw	r0, #45268	; 0xb0d4
   13bd8:	movt	r0, #2
   13bdc:	movw	r1, #45276	; 0xb0dc
   13be0:	movt	r1, #2
   13be4:	str	r1, [r0]
   13be8:	movw	r0, #45272	; 0xb0d8
   13bec:	movt	r0, #2
   13bf0:	movw	r1, #1
   13bf4:	str	r1, [r0]
   13bf8:	mov	sp, fp
   13bfc:	pop	{fp, pc}
   13c00:	push	{fp, lr}
   13c04:	mov	fp, sp
   13c08:	sub	sp, sp, #8
   13c0c:	str	r0, [sp, #4]
   13c10:	str	r1, [sp]
   13c14:	ldr	r0, [sp, #4]
   13c18:	ldr	r1, [sp]
   13c1c:	mvn	r2, #0
   13c20:	movw	r3, #45368	; 0xb138
   13c24:	movt	r3, #2
   13c28:	bl	13c34 <__assert_fail@plt+0x2dcc>
   13c2c:	mov	sp, fp
   13c30:	pop	{fp, pc}
   13c34:	push	{r4, r5, r6, sl, fp, lr}
   13c38:	add	fp, sp, #16
   13c3c:	sub	sp, sp, #80	; 0x50
   13c40:	str	r0, [fp, #-20]	; 0xffffffec
   13c44:	str	r1, [fp, #-24]	; 0xffffffe8
   13c48:	str	r2, [fp, #-28]	; 0xffffffe4
   13c4c:	str	r3, [fp, #-32]	; 0xffffffe0
   13c50:	bl	10dc0 <__errno_location@plt>
   13c54:	ldr	r1, [pc, #672]	; 13efc <__assert_fail@plt+0x3094>
   13c58:	ldr	r0, [r0]
   13c5c:	str	r0, [fp, #-36]	; 0xffffffdc
   13c60:	movw	r0, #45268	; 0xb0d4
   13c64:	movt	r0, #2
   13c68:	ldr	r0, [r0]
   13c6c:	str	r0, [fp, #-40]	; 0xffffffd8
   13c70:	str	r1, [fp, #-44]	; 0xffffffd4
   13c74:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c78:	movw	r1, #0
   13c7c:	cmp	r1, r0
   13c80:	bgt	13c94 <__assert_fail@plt+0x2e2c>
   13c84:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c8c:	cmp	r0, r1
   13c90:	blt	13c98 <__assert_fail@plt+0x2e30>
   13c94:	bl	10e50 <abort@plt>
   13c98:	movw	r0, #45272	; 0xb0d8
   13c9c:	movt	r0, #2
   13ca0:	ldr	r0, [r0]
   13ca4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ca8:	cmp	r0, r1
   13cac:	bgt	13da4 <__assert_fail@plt+0x2f3c>
   13cb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13cb4:	movw	r1, #45276	; 0xb0dc
   13cb8:	movt	r1, #2
   13cbc:	cmp	r0, r1
   13cc0:	movw	r0, #0
   13cc4:	moveq	r0, #1
   13cc8:	and	r0, r0, #1
   13ccc:	strb	r0, [fp, #-45]	; 0xffffffd3
   13cd0:	movw	r0, #45272	; 0xb0d8
   13cd4:	movt	r0, #2
   13cd8:	ldr	r0, [r0]
   13cdc:	str	r0, [sp, #44]	; 0x2c
   13ce0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13ce4:	tst	r0, #1
   13ce8:	beq	13cf8 <__assert_fail@plt+0x2e90>
   13cec:	movw	r0, #0
   13cf0:	str	r0, [sp, #24]
   13cf4:	b	13d00 <__assert_fail@plt+0x2e98>
   13cf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13cfc:	str	r0, [sp, #24]
   13d00:	ldr	r0, [sp, #24]
   13d04:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d08:	movw	r2, #45272	; 0xb0d8
   13d0c:	movt	r2, #2
   13d10:	ldr	r2, [r2]
   13d14:	sub	r1, r1, r2
   13d18:	add	r2, r1, #1
   13d1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13d20:	add	r1, sp, #44	; 0x2c
   13d24:	movw	ip, #8
   13d28:	str	ip, [sp]
   13d2c:	bl	150ac <__assert_fail@plt+0x4244>
   13d30:	str	r0, [fp, #-40]	; 0xffffffd8
   13d34:	movw	r1, #45268	; 0xb0d4
   13d38:	movt	r1, #2
   13d3c:	str	r0, [r1]
   13d40:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   13d44:	tst	r0, #1
   13d48:	beq	13d68 <__assert_fail@plt+0x2f00>
   13d4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d50:	movw	r1, #45276	; 0xb0dc
   13d54:	movt	r1, #2
   13d58:	ldr	r2, [r1]
   13d5c:	str	r2, [r0]
   13d60:	ldr	r1, [r1, #4]
   13d64:	str	r1, [r0, #4]
   13d68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d6c:	movw	r1, #45272	; 0xb0d8
   13d70:	movt	r1, #2
   13d74:	ldr	r1, [r1]
   13d78:	add	r0, r0, r1, lsl #3
   13d7c:	ldr	r2, [sp, #44]	; 0x2c
   13d80:	sub	r1, r2, r1
   13d84:	lsl	r2, r1, #3
   13d88:	movw	r1, #0
   13d8c:	and	r1, r1, #255	; 0xff
   13d90:	bl	10dd8 <memset@plt>
   13d94:	ldr	r0, [sp, #44]	; 0x2c
   13d98:	movw	r1, #45272	; 0xb0d8
   13d9c:	movt	r1, #2
   13da0:	str	r0, [r1]
   13da4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13da8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13dac:	ldr	r0, [r0, r1, lsl #3]
   13db0:	str	r0, [sp, #40]	; 0x28
   13db4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13db8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13dbc:	add	r0, r0, r1, lsl #3
   13dc0:	ldr	r0, [r0, #4]
   13dc4:	str	r0, [sp, #36]	; 0x24
   13dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13dcc:	ldr	r0, [r0, #4]
   13dd0:	orr	r0, r0, #1
   13dd4:	str	r0, [sp, #32]
   13dd8:	ldr	r0, [sp, #36]	; 0x24
   13ddc:	ldr	r1, [sp, #40]	; 0x28
   13de0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13de4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13de8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13dec:	ldr	ip, [ip]
   13df0:	ldr	lr, [sp, #32]
   13df4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13df8:	add	r4, r4, #8
   13dfc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13e00:	ldr	r5, [r5, #40]	; 0x28
   13e04:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13e08:	ldr	r6, [r6, #44]	; 0x2c
   13e0c:	str	ip, [sp]
   13e10:	str	lr, [sp, #4]
   13e14:	str	r4, [sp, #8]
   13e18:	str	r5, [sp, #12]
   13e1c:	str	r6, [sp, #16]
   13e20:	bl	12224 <__assert_fail@plt+0x13bc>
   13e24:	str	r0, [sp, #28]
   13e28:	ldr	r0, [sp, #40]	; 0x28
   13e2c:	ldr	r1, [sp, #28]
   13e30:	cmp	r0, r1
   13e34:	bhi	13edc <__assert_fail@plt+0x3074>
   13e38:	ldr	r0, [sp, #28]
   13e3c:	add	r0, r0, #1
   13e40:	str	r0, [sp, #40]	; 0x28
   13e44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e48:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e4c:	add	r1, r1, r2, lsl #3
   13e50:	str	r0, [r1]
   13e54:	ldr	r0, [sp, #36]	; 0x24
   13e58:	movw	r1, #45416	; 0xb168
   13e5c:	movt	r1, #2
   13e60:	cmp	r0, r1
   13e64:	beq	13e70 <__assert_fail@plt+0x3008>
   13e68:	ldr	r0, [sp, #36]	; 0x24
   13e6c:	bl	18050 <__assert_fail@plt+0x71e8>
   13e70:	ldr	r0, [sp, #40]	; 0x28
   13e74:	bl	14e70 <__assert_fail@plt+0x4008>
   13e78:	mov	r1, r0
   13e7c:	str	r0, [sp, #36]	; 0x24
   13e80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e84:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e88:	add	r0, r0, r2, lsl #3
   13e8c:	str	r1, [r0, #4]
   13e90:	ldr	r0, [sp, #36]	; 0x24
   13e94:	ldr	r1, [sp, #40]	; 0x28
   13e98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ea0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13ea4:	ldr	ip, [ip]
   13ea8:	ldr	lr, [sp, #32]
   13eac:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13eb0:	add	r4, r4, #8
   13eb4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13eb8:	ldr	r5, [r5, #40]	; 0x28
   13ebc:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13ec0:	ldr	r6, [r6, #44]	; 0x2c
   13ec4:	str	ip, [sp]
   13ec8:	str	lr, [sp, #4]
   13ecc:	str	r4, [sp, #8]
   13ed0:	str	r5, [sp, #12]
   13ed4:	str	r6, [sp, #16]
   13ed8:	bl	12224 <__assert_fail@plt+0x13bc>
   13edc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13ee0:	str	r0, [sp, #20]
   13ee4:	bl	10dc0 <__errno_location@plt>
   13ee8:	ldr	r1, [sp, #20]
   13eec:	str	r1, [r0]
   13ef0:	ldr	r0, [sp, #36]	; 0x24
   13ef4:	sub	sp, fp, #16
   13ef8:	pop	{r4, r5, r6, sl, fp, pc}
   13efc:	svcvc	0x00ffffff
   13f00:	push	{fp, lr}
   13f04:	mov	fp, sp
   13f08:	sub	sp, sp, #16
   13f0c:	str	r0, [fp, #-4]
   13f10:	str	r1, [sp, #8]
   13f14:	str	r2, [sp, #4]
   13f18:	ldr	r0, [fp, #-4]
   13f1c:	ldr	r1, [sp, #8]
   13f20:	ldr	r2, [sp, #4]
   13f24:	movw	r3, #45368	; 0xb138
   13f28:	movt	r3, #2
   13f2c:	bl	13c34 <__assert_fail@plt+0x2dcc>
   13f30:	mov	sp, fp
   13f34:	pop	{fp, pc}
   13f38:	push	{fp, lr}
   13f3c:	mov	fp, sp
   13f40:	sub	sp, sp, #8
   13f44:	str	r0, [sp, #4]
   13f48:	ldr	r1, [sp, #4]
   13f4c:	movw	r0, #0
   13f50:	bl	13c00 <__assert_fail@plt+0x2d98>
   13f54:	mov	sp, fp
   13f58:	pop	{fp, pc}
   13f5c:	push	{fp, lr}
   13f60:	mov	fp, sp
   13f64:	sub	sp, sp, #8
   13f68:	str	r0, [sp, #4]
   13f6c:	str	r1, [sp]
   13f70:	ldr	r1, [sp, #4]
   13f74:	ldr	r2, [sp]
   13f78:	movw	r0, #0
   13f7c:	bl	13f00 <__assert_fail@plt+0x3098>
   13f80:	mov	sp, fp
   13f84:	pop	{fp, pc}
   13f88:	push	{fp, lr}
   13f8c:	mov	fp, sp
   13f90:	sub	sp, sp, #64	; 0x40
   13f94:	str	r0, [fp, #-4]
   13f98:	str	r1, [fp, #-8]
   13f9c:	str	r2, [fp, #-12]
   13fa0:	ldr	r1, [fp, #-8]
   13fa4:	add	r0, sp, #4
   13fa8:	bl	13fc8 <__assert_fail@plt+0x3160>
   13fac:	ldr	r0, [fp, #-4]
   13fb0:	ldr	r1, [fp, #-12]
   13fb4:	mvn	r2, #0
   13fb8:	add	r3, sp, #4
   13fbc:	bl	13c34 <__assert_fail@plt+0x2dcc>
   13fc0:	mov	sp, fp
   13fc4:	pop	{fp, pc}
   13fc8:	push	{fp, lr}
   13fcc:	mov	fp, sp
   13fd0:	sub	sp, sp, #8
   13fd4:	str	r1, [sp, #4]
   13fd8:	mov	r1, r0
   13fdc:	str	r0, [sp]
   13fe0:	mov	r0, r1
   13fe4:	movw	r1, #0
   13fe8:	and	r1, r1, #255	; 0xff
   13fec:	movw	r2, #48	; 0x30
   13ff0:	bl	10dd8 <memset@plt>
   13ff4:	ldr	r0, [sp, #4]
   13ff8:	cmp	r0, #10
   13ffc:	bne	14004 <__assert_fail@plt+0x319c>
   14000:	bl	10e50 <abort@plt>
   14004:	ldr	r0, [sp, #4]
   14008:	ldr	r1, [sp]
   1400c:	str	r0, [r1]
   14010:	mov	sp, fp
   14014:	pop	{fp, pc}
   14018:	push	{fp, lr}
   1401c:	mov	fp, sp
   14020:	sub	sp, sp, #64	; 0x40
   14024:	str	r0, [fp, #-4]
   14028:	str	r1, [fp, #-8]
   1402c:	str	r2, [fp, #-12]
   14030:	str	r3, [fp, #-16]
   14034:	ldr	r1, [fp, #-8]
   14038:	mov	r0, sp
   1403c:	bl	13fc8 <__assert_fail@plt+0x3160>
   14040:	ldr	r0, [fp, #-4]
   14044:	ldr	r1, [fp, #-12]
   14048:	ldr	r2, [fp, #-16]
   1404c:	mov	r3, sp
   14050:	bl	13c34 <__assert_fail@plt+0x2dcc>
   14054:	mov	sp, fp
   14058:	pop	{fp, pc}
   1405c:	push	{fp, lr}
   14060:	mov	fp, sp
   14064:	sub	sp, sp, #8
   14068:	str	r0, [sp, #4]
   1406c:	str	r1, [sp]
   14070:	ldr	r1, [sp, #4]
   14074:	ldr	r2, [sp]
   14078:	movw	r0, #0
   1407c:	bl	13f88 <__assert_fail@plt+0x3120>
   14080:	mov	sp, fp
   14084:	pop	{fp, pc}
   14088:	push	{fp, lr}
   1408c:	mov	fp, sp
   14090:	sub	sp, sp, #16
   14094:	str	r0, [fp, #-4]
   14098:	str	r1, [sp, #8]
   1409c:	str	r2, [sp, #4]
   140a0:	ldr	r1, [fp, #-4]
   140a4:	ldr	r2, [sp, #8]
   140a8:	ldr	r3, [sp, #4]
   140ac:	movw	r0, #0
   140b0:	bl	14018 <__assert_fail@plt+0x31b0>
   140b4:	mov	sp, fp
   140b8:	pop	{fp, pc}
   140bc:	push	{fp, lr}
   140c0:	mov	fp, sp
   140c4:	sub	sp, sp, #72	; 0x48
   140c8:	movw	r3, #45368	; 0xb138
   140cc:	movt	r3, #2
   140d0:	str	r0, [fp, #-4]
   140d4:	str	r1, [fp, #-8]
   140d8:	strb	r2, [fp, #-9]
   140dc:	add	r0, sp, #12
   140e0:	mov	r1, r0
   140e4:	str	r0, [sp, #8]
   140e8:	mov	r0, r1
   140ec:	mov	r1, r3
   140f0:	movw	r2, #48	; 0x30
   140f4:	bl	10cb8 <memcpy@plt>
   140f8:	ldr	r0, [sp, #8]
   140fc:	ldrb	r1, [fp, #-9]
   14100:	movw	r2, #1
   14104:	bl	11fcc <__assert_fail@plt+0x1164>
   14108:	ldr	r1, [fp, #-4]
   1410c:	ldr	r2, [fp, #-8]
   14110:	movw	r3, #0
   14114:	str	r0, [sp, #4]
   14118:	mov	r0, r3
   1411c:	add	r3, sp, #12
   14120:	bl	13c34 <__assert_fail@plt+0x2dcc>
   14124:	mov	sp, fp
   14128:	pop	{fp, pc}
   1412c:	push	{fp, lr}
   14130:	mov	fp, sp
   14134:	sub	sp, sp, #8
   14138:	str	r0, [sp, #4]
   1413c:	strb	r1, [sp, #3]
   14140:	ldr	r0, [sp, #4]
   14144:	mvn	r1, #0
   14148:	ldrb	r2, [sp, #3]
   1414c:	bl	140bc <__assert_fail@plt+0x3254>
   14150:	mov	sp, fp
   14154:	pop	{fp, pc}
   14158:	push	{fp, lr}
   1415c:	mov	fp, sp
   14160:	sub	sp, sp, #8
   14164:	str	r0, [sp, #4]
   14168:	ldr	r0, [sp, #4]
   1416c:	movw	r1, #58	; 0x3a
   14170:	and	r1, r1, #255	; 0xff
   14174:	bl	1412c <__assert_fail@plt+0x32c4>
   14178:	mov	sp, fp
   1417c:	pop	{fp, pc}
   14180:	push	{fp, lr}
   14184:	mov	fp, sp
   14188:	sub	sp, sp, #8
   1418c:	str	r0, [sp, #4]
   14190:	str	r1, [sp]
   14194:	ldr	r0, [sp, #4]
   14198:	ldr	r1, [sp]
   1419c:	movw	r2, #58	; 0x3a
   141a0:	and	r2, r2, #255	; 0xff
   141a4:	bl	140bc <__assert_fail@plt+0x3254>
   141a8:	mov	sp, fp
   141ac:	pop	{fp, pc}
   141b0:	push	{fp, lr}
   141b4:	mov	fp, sp
   141b8:	sub	sp, sp, #120	; 0x78
   141bc:	str	r0, [fp, #-4]
   141c0:	str	r1, [fp, #-8]
   141c4:	str	r2, [fp, #-12]
   141c8:	ldr	r1, [fp, #-8]
   141cc:	add	r0, sp, #12
   141d0:	bl	13fc8 <__assert_fail@plt+0x3160>
   141d4:	add	r0, sp, #60	; 0x3c
   141d8:	mov	r1, r0
   141dc:	add	r2, sp, #12
   141e0:	str	r0, [sp, #8]
   141e4:	mov	r0, r1
   141e8:	mov	r1, r2
   141ec:	movw	r2, #48	; 0x30
   141f0:	bl	10cb8 <memcpy@plt>
   141f4:	ldr	r0, [sp, #8]
   141f8:	movw	r1, #58	; 0x3a
   141fc:	and	r1, r1, #255	; 0xff
   14200:	movw	r2, #1
   14204:	bl	11fcc <__assert_fail@plt+0x1164>
   14208:	ldr	r1, [fp, #-4]
   1420c:	ldr	r2, [fp, #-12]
   14210:	str	r0, [sp, #4]
   14214:	mov	r0, r1
   14218:	mov	r1, r2
   1421c:	mvn	r2, #0
   14220:	add	r3, sp, #60	; 0x3c
   14224:	bl	13c34 <__assert_fail@plt+0x2dcc>
   14228:	mov	sp, fp
   1422c:	pop	{fp, pc}
   14230:	push	{fp, lr}
   14234:	mov	fp, sp
   14238:	sub	sp, sp, #24
   1423c:	str	r0, [fp, #-4]
   14240:	str	r1, [fp, #-8]
   14244:	str	r2, [sp, #12]
   14248:	str	r3, [sp, #8]
   1424c:	ldr	r0, [fp, #-4]
   14250:	ldr	r1, [fp, #-8]
   14254:	ldr	r2, [sp, #12]
   14258:	ldr	r3, [sp, #8]
   1425c:	mvn	ip, #0
   14260:	str	ip, [sp]
   14264:	bl	14270 <__assert_fail@plt+0x3408>
   14268:	mov	sp, fp
   1426c:	pop	{fp, pc}
   14270:	push	{fp, lr}
   14274:	mov	fp, sp
   14278:	sub	sp, sp, #72	; 0x48
   1427c:	ldr	ip, [fp, #8]
   14280:	movw	lr, #45368	; 0xb138
   14284:	movt	lr, #2
   14288:	str	r0, [fp, #-4]
   1428c:	str	r1, [fp, #-8]
   14290:	str	r2, [fp, #-12]
   14294:	str	r3, [fp, #-16]
   14298:	add	r0, sp, #8
   1429c:	mov	r1, r0
   142a0:	str	r0, [sp, #4]
   142a4:	mov	r0, r1
   142a8:	mov	r1, lr
   142ac:	movw	r2, #48	; 0x30
   142b0:	str	ip, [sp]
   142b4:	bl	10cb8 <memcpy@plt>
   142b8:	ldr	r1, [fp, #-8]
   142bc:	ldr	r2, [fp, #-12]
   142c0:	ldr	r0, [sp, #4]
   142c4:	bl	120cc <__assert_fail@plt+0x1264>
   142c8:	ldr	r0, [fp, #-4]
   142cc:	ldr	r1, [fp, #-16]
   142d0:	ldr	r2, [fp, #8]
   142d4:	add	r3, sp, #8
   142d8:	bl	13c34 <__assert_fail@plt+0x2dcc>
   142dc:	mov	sp, fp
   142e0:	pop	{fp, pc}
   142e4:	push	{fp, lr}
   142e8:	mov	fp, sp
   142ec:	sub	sp, sp, #16
   142f0:	str	r0, [fp, #-4]
   142f4:	str	r1, [sp, #8]
   142f8:	str	r2, [sp, #4]
   142fc:	ldr	r1, [fp, #-4]
   14300:	ldr	r2, [sp, #8]
   14304:	ldr	r3, [sp, #4]
   14308:	movw	r0, #0
   1430c:	bl	14230 <__assert_fail@plt+0x33c8>
   14310:	mov	sp, fp
   14314:	pop	{fp, pc}
   14318:	push	{fp, lr}
   1431c:	mov	fp, sp
   14320:	sub	sp, sp, #24
   14324:	str	r0, [fp, #-4]
   14328:	str	r1, [fp, #-8]
   1432c:	str	r2, [sp, #12]
   14330:	str	r3, [sp, #8]
   14334:	ldr	r1, [fp, #-4]
   14338:	ldr	r2, [fp, #-8]
   1433c:	ldr	r3, [sp, #12]
   14340:	ldr	r0, [sp, #8]
   14344:	movw	ip, #0
   14348:	str	r0, [sp, #4]
   1434c:	mov	r0, ip
   14350:	ldr	ip, [sp, #4]
   14354:	str	ip, [sp]
   14358:	bl	14270 <__assert_fail@plt+0x3408>
   1435c:	mov	sp, fp
   14360:	pop	{fp, pc}
   14364:	push	{fp, lr}
   14368:	mov	fp, sp
   1436c:	sub	sp, sp, #16
   14370:	str	r0, [fp, #-4]
   14374:	str	r1, [sp, #8]
   14378:	str	r2, [sp, #4]
   1437c:	ldr	r0, [fp, #-4]
   14380:	ldr	r1, [sp, #8]
   14384:	ldr	r2, [sp, #4]
   14388:	movw	r3, #45284	; 0xb0e4
   1438c:	movt	r3, #2
   14390:	bl	13c34 <__assert_fail@plt+0x2dcc>
   14394:	mov	sp, fp
   14398:	pop	{fp, pc}
   1439c:	push	{fp, lr}
   143a0:	mov	fp, sp
   143a4:	sub	sp, sp, #8
   143a8:	str	r0, [sp, #4]
   143ac:	str	r1, [sp]
   143b0:	ldr	r1, [sp, #4]
   143b4:	ldr	r2, [sp]
   143b8:	movw	r0, #0
   143bc:	bl	14364 <__assert_fail@plt+0x34fc>
   143c0:	mov	sp, fp
   143c4:	pop	{fp, pc}
   143c8:	push	{fp, lr}
   143cc:	mov	fp, sp
   143d0:	sub	sp, sp, #8
   143d4:	str	r0, [sp, #4]
   143d8:	str	r1, [sp]
   143dc:	ldr	r0, [sp, #4]
   143e0:	ldr	r1, [sp]
   143e4:	mvn	r2, #0
   143e8:	bl	14364 <__assert_fail@plt+0x34fc>
   143ec:	mov	sp, fp
   143f0:	pop	{fp, pc}
   143f4:	push	{fp, lr}
   143f8:	mov	fp, sp
   143fc:	sub	sp, sp, #8
   14400:	str	r0, [sp, #4]
   14404:	ldr	r1, [sp, #4]
   14408:	movw	r0, #0
   1440c:	bl	143c8 <__assert_fail@plt+0x3560>
   14410:	mov	sp, fp
   14414:	pop	{fp, pc}
   14418:	push	{fp, lr}
   1441c:	mov	fp, sp
   14420:	sub	sp, sp, #24
   14424:	str	r0, [fp, #-8]
   14428:	str	r1, [sp, #12]
   1442c:	ldr	r0, [fp, #-8]
   14430:	bl	10d9c <gettext@plt>
   14434:	str	r0, [sp, #8]
   14438:	ldr	r0, [sp, #8]
   1443c:	ldr	r1, [fp, #-8]
   14440:	cmp	r0, r1
   14444:	beq	14454 <__assert_fail@plt+0x35ec>
   14448:	ldr	r0, [sp, #8]
   1444c:	str	r0, [fp, #-4]
   14450:	b	14520 <__assert_fail@plt+0x36b8>
   14454:	bl	1836c <__assert_fail@plt+0x7504>
   14458:	str	r0, [sp, #4]
   1445c:	ldr	r0, [sp, #4]
   14460:	movw	r1, #43452	; 0xa9bc
   14464:	movt	r1, #1
   14468:	bl	17d30 <__assert_fail@plt+0x6ec8>
   1446c:	cmp	r0, #0
   14470:	bne	144a8 <__assert_fail@plt+0x3640>
   14474:	ldr	r0, [fp, #-8]
   14478:	ldrb	r0, [r0]
   1447c:	cmp	r0, #96	; 0x60
   14480:	movw	r0, #0
   14484:	moveq	r0, #1
   14488:	tst	r0, #1
   1448c:	movw	r0, #43462	; 0xa9c6
   14490:	movt	r0, #1
   14494:	movw	r1, #43458	; 0xa9c2
   14498:	movt	r1, #1
   1449c:	movne	r0, r1
   144a0:	str	r0, [fp, #-4]
   144a4:	b	14520 <__assert_fail@plt+0x36b8>
   144a8:	ldr	r0, [sp, #4]
   144ac:	movw	r1, #43466	; 0xa9ca
   144b0:	movt	r1, #1
   144b4:	bl	17d30 <__assert_fail@plt+0x6ec8>
   144b8:	cmp	r0, #0
   144bc:	bne	144f4 <__assert_fail@plt+0x368c>
   144c0:	ldr	r0, [fp, #-8]
   144c4:	ldrb	r0, [r0]
   144c8:	cmp	r0, #96	; 0x60
   144cc:	movw	r0, #0
   144d0:	moveq	r0, #1
   144d4:	tst	r0, #1
   144d8:	movw	r0, #43478	; 0xa9d6
   144dc:	movt	r0, #1
   144e0:	movw	r1, #43474	; 0xa9d2
   144e4:	movt	r1, #1
   144e8:	movne	r0, r1
   144ec:	str	r0, [fp, #-4]
   144f0:	b	14520 <__assert_fail@plt+0x36b8>
   144f4:	ldr	r0, [sp, #12]
   144f8:	cmp	r0, #9
   144fc:	movw	r0, #0
   14500:	moveq	r0, #1
   14504:	tst	r0, #1
   14508:	movw	r0, #43450	; 0xa9ba
   1450c:	movt	r0, #1
   14510:	movw	r1, #43446	; 0xa9b6
   14514:	movt	r1, #1
   14518:	movne	r0, r1
   1451c:	str	r0, [fp, #-4]
   14520:	ldr	r0, [fp, #-4]
   14524:	mov	sp, fp
   14528:	pop	{fp, pc}
   1452c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14530:	add	fp, sp, #28
   14534:	sub	sp, sp, #196	; 0xc4
   14538:	ldr	ip, [fp, #12]
   1453c:	ldr	lr, [fp, #8]
   14540:	str	r0, [fp, #-32]	; 0xffffffe0
   14544:	str	r1, [fp, #-36]	; 0xffffffdc
   14548:	str	r2, [fp, #-40]	; 0xffffffd8
   1454c:	str	r3, [fp, #-44]	; 0xffffffd4
   14550:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14554:	movw	r1, #0
   14558:	cmp	r0, r1
   1455c:	beq	14590 <__assert_fail@plt+0x3728>
   14560:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14564:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14568:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1456c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14570:	movw	ip, #43568	; 0xaa30
   14574:	movt	ip, #1
   14578:	str	r1, [fp, #-48]	; 0xffffffd0
   1457c:	mov	r1, ip
   14580:	ldr	ip, [fp, #-48]	; 0xffffffd0
   14584:	str	ip, [sp]
   14588:	bl	10db4 <fprintf@plt>
   1458c:	b	145a8 <__assert_fail@plt+0x3740>
   14590:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14594:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14598:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1459c:	movw	r1, #43580	; 0xaa3c
   145a0:	movt	r1, #1
   145a4:	bl	10db4 <fprintf@plt>
   145a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145ac:	movw	r1, #43587	; 0xaa43
   145b0:	movt	r1, #1
   145b4:	str	r0, [fp, #-52]	; 0xffffffcc
   145b8:	mov	r0, r1
   145bc:	bl	10d9c <gettext@plt>
   145c0:	movw	r1, #44305	; 0xad11
   145c4:	movt	r1, #1
   145c8:	movw	r3, #2022	; 0x7e6
   145cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   145d0:	str	r0, [fp, #-56]	; 0xffffffc8
   145d4:	mov	r0, r2
   145d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   145dc:	bl	10db4 <fprintf@plt>
   145e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   145e4:	movw	r2, #42162	; 0xa4b2
   145e8:	movt	r2, #1
   145ec:	str	r0, [fp, #-60]	; 0xffffffc4
   145f0:	mov	r0, r2
   145f4:	str	r2, [fp, #-64]	; 0xffffffc0
   145f8:	bl	10c64 <fputs_unlocked@plt>
   145fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14600:	movw	r2, #43591	; 0xaa47
   14604:	movt	r2, #1
   14608:	str	r0, [fp, #-68]	; 0xffffffbc
   1460c:	mov	r0, r2
   14610:	str	r1, [fp, #-72]	; 0xffffffb8
   14614:	bl	10d9c <gettext@plt>
   14618:	movw	r2, #43762	; 0xaaf2
   1461c:	movt	r2, #1
   14620:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14624:	str	r0, [fp, #-76]	; 0xffffffb4
   14628:	mov	r0, r1
   1462c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14630:	bl	10db4 <fprintf@plt>
   14634:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14638:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1463c:	str	r0, [fp, #-80]	; 0xffffffb0
   14640:	mov	r0, r2
   14644:	bl	10c64 <fputs_unlocked@plt>
   14648:	ldr	r1, [fp, #12]
   1464c:	cmp	r1, #9
   14650:	str	r1, [fp, #-84]	; 0xffffffac
   14654:	bhi	14a70 <__assert_fail@plt+0x3c08>
   14658:	add	r0, pc, #8
   1465c:	ldr	r1, [fp, #-84]	; 0xffffffac
   14660:	ldr	r0, [r0, r1, lsl #2]
   14664:	mov	pc, r0
   14668:	muleq	r1, r0, r6
   1466c:	muleq	r1, r4, r6
   14670:	andeq	r4, r1, ip, asr #13
   14674:	andeq	r4, r1, ip, lsl #14
   14678:	andeq	r4, r1, r4, ror #14
   1467c:	andeq	r4, r1, r8, asr #15
   14680:	andeq	r4, r1, r8, lsr r8
   14684:			; <UNDEFINED> instruction: 0x000148b4
   14688:	andeq	r4, r1, ip, lsr r9
   1468c:	ldrdeq	r4, [r1], -r0
   14690:	b	14b0c <__assert_fail@plt+0x3ca4>
   14694:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14698:	movw	r1, #43796	; 0xab14
   1469c:	movt	r1, #1
   146a0:	str	r0, [fp, #-88]	; 0xffffffa8
   146a4:	mov	r0, r1
   146a8:	bl	10d9c <gettext@plt>
   146ac:	ldr	r1, [fp, #8]
   146b0:	ldr	r2, [r1]
   146b4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   146b8:	str	r0, [fp, #-92]	; 0xffffffa4
   146bc:	mov	r0, r1
   146c0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   146c4:	bl	10db4 <fprintf@plt>
   146c8:	b	14b0c <__assert_fail@plt+0x3ca4>
   146cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   146d0:	movw	r1, #43812	; 0xab24
   146d4:	movt	r1, #1
   146d8:	str	r0, [fp, #-96]	; 0xffffffa0
   146dc:	mov	r0, r1
   146e0:	bl	10d9c <gettext@plt>
   146e4:	ldr	r1, [fp, #8]
   146e8:	ldr	r2, [r1]
   146ec:	ldr	r1, [fp, #8]
   146f0:	ldr	r3, [r1, #4]
   146f4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   146f8:	str	r0, [fp, #-100]	; 0xffffff9c
   146fc:	mov	r0, r1
   14700:	ldr	r1, [fp, #-100]	; 0xffffff9c
   14704:	bl	10db4 <fprintf@plt>
   14708:	b	14b0c <__assert_fail@plt+0x3ca4>
   1470c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14710:	movw	r1, #43835	; 0xab3b
   14714:	movt	r1, #1
   14718:	str	r0, [fp, #-104]	; 0xffffff98
   1471c:	mov	r0, r1
   14720:	bl	10d9c <gettext@plt>
   14724:	ldr	r1, [fp, #8]
   14728:	ldr	r2, [r1]
   1472c:	ldr	r1, [fp, #8]
   14730:	ldr	r3, [r1, #4]
   14734:	ldr	r1, [fp, #8]
   14738:	ldr	r1, [r1, #8]
   1473c:	ldr	ip, [fp, #-104]	; 0xffffff98
   14740:	str	r0, [fp, #-108]	; 0xffffff94
   14744:	mov	r0, ip
   14748:	ldr	lr, [fp, #-108]	; 0xffffff94
   1474c:	str	r1, [sp, #112]	; 0x70
   14750:	mov	r1, lr
   14754:	ldr	r4, [sp, #112]	; 0x70
   14758:	str	r4, [sp]
   1475c:	bl	10db4 <fprintf@plt>
   14760:	b	14b0c <__assert_fail@plt+0x3ca4>
   14764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14768:	movw	r1, #43863	; 0xab57
   1476c:	movt	r1, #1
   14770:	str	r0, [sp, #108]	; 0x6c
   14774:	mov	r0, r1
   14778:	bl	10d9c <gettext@plt>
   1477c:	ldr	r1, [fp, #8]
   14780:	ldr	r2, [r1]
   14784:	ldr	r1, [fp, #8]
   14788:	ldr	r3, [r1, #4]
   1478c:	ldr	r1, [fp, #8]
   14790:	ldr	r1, [r1, #8]
   14794:	ldr	ip, [fp, #8]
   14798:	ldr	ip, [ip, #12]
   1479c:	ldr	lr, [sp, #108]	; 0x6c
   147a0:	str	r0, [sp, #104]	; 0x68
   147a4:	mov	r0, lr
   147a8:	ldr	r4, [sp, #104]	; 0x68
   147ac:	str	r1, [sp, #100]	; 0x64
   147b0:	mov	r1, r4
   147b4:	ldr	r5, [sp, #100]	; 0x64
   147b8:	str	r5, [sp]
   147bc:	str	ip, [sp, #4]
   147c0:	bl	10db4 <fprintf@plt>
   147c4:	b	14b0c <__assert_fail@plt+0x3ca4>
   147c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147cc:	movw	r1, #43895	; 0xab77
   147d0:	movt	r1, #1
   147d4:	str	r0, [sp, #96]	; 0x60
   147d8:	mov	r0, r1
   147dc:	bl	10d9c <gettext@plt>
   147e0:	ldr	r1, [fp, #8]
   147e4:	ldr	r2, [r1]
   147e8:	ldr	r1, [fp, #8]
   147ec:	ldr	r3, [r1, #4]
   147f0:	ldr	r1, [fp, #8]
   147f4:	ldr	r1, [r1, #8]
   147f8:	ldr	ip, [fp, #8]
   147fc:	ldr	ip, [ip, #12]
   14800:	ldr	lr, [fp, #8]
   14804:	ldr	lr, [lr, #16]
   14808:	ldr	r4, [sp, #96]	; 0x60
   1480c:	str	r0, [sp, #92]	; 0x5c
   14810:	mov	r0, r4
   14814:	ldr	r5, [sp, #92]	; 0x5c
   14818:	str	r1, [sp, #88]	; 0x58
   1481c:	mov	r1, r5
   14820:	ldr	r6, [sp, #88]	; 0x58
   14824:	str	r6, [sp]
   14828:	str	ip, [sp, #4]
   1482c:	str	lr, [sp, #8]
   14830:	bl	10db4 <fprintf@plt>
   14834:	b	14b0c <__assert_fail@plt+0x3ca4>
   14838:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1483c:	movw	r1, #43931	; 0xab9b
   14840:	movt	r1, #1
   14844:	str	r0, [sp, #84]	; 0x54
   14848:	mov	r0, r1
   1484c:	bl	10d9c <gettext@plt>
   14850:	ldr	r1, [fp, #8]
   14854:	ldr	r2, [r1]
   14858:	ldr	r1, [fp, #8]
   1485c:	ldr	r3, [r1, #4]
   14860:	ldr	r1, [fp, #8]
   14864:	ldr	r1, [r1, #8]
   14868:	ldr	ip, [fp, #8]
   1486c:	ldr	ip, [ip, #12]
   14870:	ldr	lr, [fp, #8]
   14874:	ldr	lr, [lr, #16]
   14878:	ldr	r4, [fp, #8]
   1487c:	ldr	r4, [r4, #20]
   14880:	ldr	r5, [sp, #84]	; 0x54
   14884:	str	r0, [sp, #80]	; 0x50
   14888:	mov	r0, r5
   1488c:	ldr	r6, [sp, #80]	; 0x50
   14890:	str	r1, [sp, #76]	; 0x4c
   14894:	mov	r1, r6
   14898:	ldr	r7, [sp, #76]	; 0x4c
   1489c:	str	r7, [sp]
   148a0:	str	ip, [sp, #4]
   148a4:	str	lr, [sp, #8]
   148a8:	str	r4, [sp, #12]
   148ac:	bl	10db4 <fprintf@plt>
   148b0:	b	14b0c <__assert_fail@plt+0x3ca4>
   148b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148b8:	movw	r1, #43971	; 0xabc3
   148bc:	movt	r1, #1
   148c0:	str	r0, [sp, #72]	; 0x48
   148c4:	mov	r0, r1
   148c8:	bl	10d9c <gettext@plt>
   148cc:	ldr	r1, [fp, #8]
   148d0:	ldr	r2, [r1]
   148d4:	ldr	r1, [fp, #8]
   148d8:	ldr	r3, [r1, #4]
   148dc:	ldr	r1, [fp, #8]
   148e0:	ldr	r1, [r1, #8]
   148e4:	ldr	ip, [fp, #8]
   148e8:	ldr	ip, [ip, #12]
   148ec:	ldr	lr, [fp, #8]
   148f0:	ldr	lr, [lr, #16]
   148f4:	ldr	r4, [fp, #8]
   148f8:	ldr	r4, [r4, #20]
   148fc:	ldr	r5, [fp, #8]
   14900:	ldr	r5, [r5, #24]
   14904:	ldr	r6, [sp, #72]	; 0x48
   14908:	str	r0, [sp, #68]	; 0x44
   1490c:	mov	r0, r6
   14910:	ldr	r7, [sp, #68]	; 0x44
   14914:	str	r1, [sp, #64]	; 0x40
   14918:	mov	r1, r7
   1491c:	ldr	r8, [sp, #64]	; 0x40
   14920:	str	r8, [sp]
   14924:	str	ip, [sp, #4]
   14928:	str	lr, [sp, #8]
   1492c:	str	r4, [sp, #12]
   14930:	str	r5, [sp, #16]
   14934:	bl	10db4 <fprintf@plt>
   14938:	b	14b0c <__assert_fail@plt+0x3ca4>
   1493c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14940:	movw	r1, #44015	; 0xabef
   14944:	movt	r1, #1
   14948:	str	r0, [sp, #60]	; 0x3c
   1494c:	mov	r0, r1
   14950:	bl	10d9c <gettext@plt>
   14954:	ldr	r1, [fp, #8]
   14958:	ldr	r2, [r1]
   1495c:	ldr	r1, [fp, #8]
   14960:	ldr	r3, [r1, #4]
   14964:	ldr	r1, [fp, #8]
   14968:	ldr	r1, [r1, #8]
   1496c:	ldr	ip, [fp, #8]
   14970:	ldr	ip, [ip, #12]
   14974:	ldr	lr, [fp, #8]
   14978:	ldr	lr, [lr, #16]
   1497c:	ldr	r4, [fp, #8]
   14980:	ldr	r4, [r4, #20]
   14984:	ldr	r5, [fp, #8]
   14988:	ldr	r5, [r5, #24]
   1498c:	ldr	r6, [fp, #8]
   14990:	ldr	r6, [r6, #28]
   14994:	ldr	r7, [sp, #60]	; 0x3c
   14998:	str	r0, [sp, #56]	; 0x38
   1499c:	mov	r0, r7
   149a0:	ldr	r8, [sp, #56]	; 0x38
   149a4:	str	r1, [sp, #52]	; 0x34
   149a8:	mov	r1, r8
   149ac:	ldr	r9, [sp, #52]	; 0x34
   149b0:	str	r9, [sp]
   149b4:	str	ip, [sp, #4]
   149b8:	str	lr, [sp, #8]
   149bc:	str	r4, [sp, #12]
   149c0:	str	r5, [sp, #16]
   149c4:	str	r6, [sp, #20]
   149c8:	bl	10db4 <fprintf@plt>
   149cc:	b	14b0c <__assert_fail@plt+0x3ca4>
   149d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149d4:	movw	r1, #44063	; 0xac1f
   149d8:	movt	r1, #1
   149dc:	str	r0, [sp, #48]	; 0x30
   149e0:	mov	r0, r1
   149e4:	bl	10d9c <gettext@plt>
   149e8:	ldr	r1, [fp, #8]
   149ec:	ldr	r2, [r1]
   149f0:	ldr	r1, [fp, #8]
   149f4:	ldr	r3, [r1, #4]
   149f8:	ldr	r1, [fp, #8]
   149fc:	ldr	r1, [r1, #8]
   14a00:	ldr	ip, [fp, #8]
   14a04:	ldr	ip, [ip, #12]
   14a08:	ldr	lr, [fp, #8]
   14a0c:	ldr	lr, [lr, #16]
   14a10:	ldr	r4, [fp, #8]
   14a14:	ldr	r4, [r4, #20]
   14a18:	ldr	r5, [fp, #8]
   14a1c:	ldr	r5, [r5, #24]
   14a20:	ldr	r6, [fp, #8]
   14a24:	ldr	r6, [r6, #28]
   14a28:	ldr	r7, [fp, #8]
   14a2c:	ldr	r7, [r7, #32]
   14a30:	ldr	r8, [sp, #48]	; 0x30
   14a34:	str	r0, [sp, #44]	; 0x2c
   14a38:	mov	r0, r8
   14a3c:	ldr	r9, [sp, #44]	; 0x2c
   14a40:	str	r1, [sp, #40]	; 0x28
   14a44:	mov	r1, r9
   14a48:	ldr	sl, [sp, #40]	; 0x28
   14a4c:	str	sl, [sp]
   14a50:	str	ip, [sp, #4]
   14a54:	str	lr, [sp, #8]
   14a58:	str	r4, [sp, #12]
   14a5c:	str	r5, [sp, #16]
   14a60:	str	r6, [sp, #20]
   14a64:	str	r7, [sp, #24]
   14a68:	bl	10db4 <fprintf@plt>
   14a6c:	b	14b0c <__assert_fail@plt+0x3ca4>
   14a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a74:	movw	r1, #44115	; 0xac53
   14a78:	movt	r1, #1
   14a7c:	str	r0, [sp, #36]	; 0x24
   14a80:	mov	r0, r1
   14a84:	bl	10d9c <gettext@plt>
   14a88:	ldr	r1, [fp, #8]
   14a8c:	ldr	r2, [r1]
   14a90:	ldr	r1, [fp, #8]
   14a94:	ldr	r3, [r1, #4]
   14a98:	ldr	r1, [fp, #8]
   14a9c:	ldr	r1, [r1, #8]
   14aa0:	ldr	ip, [fp, #8]
   14aa4:	ldr	ip, [ip, #12]
   14aa8:	ldr	lr, [fp, #8]
   14aac:	ldr	lr, [lr, #16]
   14ab0:	ldr	r4, [fp, #8]
   14ab4:	ldr	r4, [r4, #20]
   14ab8:	ldr	r5, [fp, #8]
   14abc:	ldr	r5, [r5, #24]
   14ac0:	ldr	r6, [fp, #8]
   14ac4:	ldr	r6, [r6, #28]
   14ac8:	ldr	r7, [fp, #8]
   14acc:	ldr	r7, [r7, #32]
   14ad0:	ldr	r8, [sp, #36]	; 0x24
   14ad4:	str	r0, [sp, #32]
   14ad8:	mov	r0, r8
   14adc:	ldr	r9, [sp, #32]
   14ae0:	str	r1, [sp, #28]
   14ae4:	mov	r1, r9
   14ae8:	ldr	sl, [sp, #28]
   14aec:	str	sl, [sp]
   14af0:	str	ip, [sp, #4]
   14af4:	str	lr, [sp, #8]
   14af8:	str	r4, [sp, #12]
   14afc:	str	r5, [sp, #16]
   14b00:	str	r6, [sp, #20]
   14b04:	str	r7, [sp, #24]
   14b08:	bl	10db4 <fprintf@plt>
   14b0c:	sub	sp, fp, #28
   14b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b14:	push	{fp, lr}
   14b18:	mov	fp, sp
   14b1c:	sub	sp, sp, #32
   14b20:	ldr	ip, [fp, #8]
   14b24:	str	r0, [fp, #-4]
   14b28:	str	r1, [fp, #-8]
   14b2c:	str	r2, [fp, #-12]
   14b30:	str	r3, [sp, #16]
   14b34:	movw	r0, #0
   14b38:	str	r0, [sp, #12]
   14b3c:	ldr	r0, [fp, #8]
   14b40:	ldr	r1, [sp, #12]
   14b44:	add	r0, r0, r1, lsl #2
   14b48:	ldr	r0, [r0]
   14b4c:	movw	r1, #0
   14b50:	cmp	r0, r1
   14b54:	beq	14b6c <__assert_fail@plt+0x3d04>
   14b58:	b	14b5c <__assert_fail@plt+0x3cf4>
   14b5c:	ldr	r0, [sp, #12]
   14b60:	add	r0, r0, #1
   14b64:	str	r0, [sp, #12]
   14b68:	b	14b3c <__assert_fail@plt+0x3cd4>
   14b6c:	ldr	r0, [fp, #-4]
   14b70:	ldr	r1, [fp, #-8]
   14b74:	ldr	r2, [fp, #-12]
   14b78:	ldr	r3, [sp, #16]
   14b7c:	ldr	ip, [fp, #8]
   14b80:	ldr	lr, [sp, #12]
   14b84:	str	ip, [sp]
   14b88:	str	lr, [sp, #4]
   14b8c:	bl	1452c <__assert_fail@plt+0x36c4>
   14b90:	mov	sp, fp
   14b94:	pop	{fp, pc}
   14b98:	push	{fp, lr}
   14b9c:	mov	fp, sp
   14ba0:	sub	sp, sp, #80	; 0x50
   14ba4:	ldr	ip, [fp, #8]
   14ba8:	str	ip, [fp, #-4]
   14bac:	str	r0, [fp, #-8]
   14bb0:	str	r1, [fp, #-12]
   14bb4:	str	r2, [fp, #-16]
   14bb8:	str	r3, [fp, #-20]	; 0xffffffec
   14bbc:	movw	r0, #0
   14bc0:	str	r0, [fp, #-24]	; 0xffffffe8
   14bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bc8:	cmp	r0, #10
   14bcc:	movw	r0, #0
   14bd0:	str	r0, [sp, #12]
   14bd4:	bcs	14c0c <__assert_fail@plt+0x3da4>
   14bd8:	ldr	r0, [fp, #-4]
   14bdc:	add	r1, r0, #4
   14be0:	str	r1, [fp, #-4]
   14be4:	ldr	r0, [r0]
   14be8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14bec:	add	r2, sp, #16
   14bf0:	add	r1, r2, r1, lsl #2
   14bf4:	str	r0, [r1]
   14bf8:	movw	r1, #0
   14bfc:	cmp	r0, r1
   14c00:	movw	r0, #0
   14c04:	movne	r0, #1
   14c08:	str	r0, [sp, #12]
   14c0c:	ldr	r0, [sp, #12]
   14c10:	tst	r0, #1
   14c14:	beq	14c2c <__assert_fail@plt+0x3dc4>
   14c18:	b	14c1c <__assert_fail@plt+0x3db4>
   14c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c20:	add	r0, r0, #1
   14c24:	str	r0, [fp, #-24]	; 0xffffffe8
   14c28:	b	14bc4 <__assert_fail@plt+0x3d5c>
   14c2c:	add	r0, sp, #16
   14c30:	ldr	r1, [fp, #-8]
   14c34:	ldr	r2, [fp, #-12]
   14c38:	ldr	r3, [fp, #-16]
   14c3c:	ldr	ip, [fp, #-20]	; 0xffffffec
   14c40:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14c44:	str	r0, [sp, #8]
   14c48:	mov	r0, r1
   14c4c:	mov	r1, r2
   14c50:	mov	r2, r3
   14c54:	mov	r3, ip
   14c58:	ldr	ip, [sp, #8]
   14c5c:	str	ip, [sp]
   14c60:	str	lr, [sp, #4]
   14c64:	bl	1452c <__assert_fail@plt+0x36c4>
   14c68:	mov	sp, fp
   14c6c:	pop	{fp, pc}
   14c70:	push	{fp, lr}
   14c74:	mov	fp, sp
   14c78:	sub	sp, sp, #24
   14c7c:	str	r0, [fp, #-4]
   14c80:	str	r1, [fp, #-8]
   14c84:	str	r2, [sp, #12]
   14c88:	str	r3, [sp, #8]
   14c8c:	add	r0, fp, #8
   14c90:	str	r0, [sp, #4]
   14c94:	ldr	r0, [fp, #-4]
   14c98:	ldr	r1, [fp, #-8]
   14c9c:	ldr	r2, [sp, #12]
   14ca0:	ldr	r3, [sp, #8]
   14ca4:	ldr	ip, [sp, #4]
   14ca8:	mov	lr, sp
   14cac:	str	ip, [lr]
   14cb0:	bl	14b98 <__assert_fail@plt+0x3d30>
   14cb4:	add	r0, sp, #4
   14cb8:	mov	sp, fp
   14cbc:	pop	{fp, pc}
   14cc0:	push	{fp, lr}
   14cc4:	mov	fp, sp
   14cc8:	sub	sp, sp, #16
   14ccc:	movw	r0, #45348	; 0xb124
   14cd0:	movt	r0, #2
   14cd4:	ldr	r1, [r0]
   14cd8:	movw	r0, #42162	; 0xa4b2
   14cdc:	movt	r0, #1
   14ce0:	bl	10c64 <fputs_unlocked@plt>
   14ce4:	movw	r1, #44175	; 0xac8f
   14ce8:	movt	r1, #1
   14cec:	str	r0, [fp, #-4]
   14cf0:	mov	r0, r1
   14cf4:	bl	10d9c <gettext@plt>
   14cf8:	movw	r1, #44195	; 0xaca3
   14cfc:	movt	r1, #1
   14d00:	bl	10c88 <printf@plt>
   14d04:	movw	r1, #44217	; 0xacb9
   14d08:	movt	r1, #1
   14d0c:	str	r0, [sp, #8]
   14d10:	mov	r0, r1
   14d14:	bl	10d9c <gettext@plt>
   14d18:	movw	r1, #42864	; 0xa770
   14d1c:	movt	r1, #1
   14d20:	movw	r2, #43017	; 0xa809
   14d24:	movt	r2, #1
   14d28:	bl	10c88 <printf@plt>
   14d2c:	movw	r1, #44237	; 0xaccd
   14d30:	movt	r1, #1
   14d34:	str	r0, [sp, #4]
   14d38:	mov	r0, r1
   14d3c:	bl	10d9c <gettext@plt>
   14d40:	movw	r1, #44276	; 0xacf4
   14d44:	movt	r1, #1
   14d48:	bl	10c88 <printf@plt>
   14d4c:	mov	sp, fp
   14d50:	pop	{fp, pc}
   14d54:	push	{fp, lr}
   14d58:	mov	fp, sp
   14d5c:	sub	sp, sp, #16
   14d60:	str	r0, [fp, #-4]
   14d64:	str	r1, [sp, #8]
   14d68:	str	r2, [sp, #4]
   14d6c:	ldr	r0, [fp, #-4]
   14d70:	ldr	r1, [sp, #8]
   14d74:	ldr	r2, [sp, #4]
   14d78:	bl	14d84 <__assert_fail@plt+0x3f1c>
   14d7c:	mov	sp, fp
   14d80:	pop	{fp, pc}
   14d84:	push	{fp, lr}
   14d88:	mov	fp, sp
   14d8c:	sub	sp, sp, #16
   14d90:	str	r0, [fp, #-4]
   14d94:	str	r1, [sp, #8]
   14d98:	str	r2, [sp, #4]
   14d9c:	ldr	r0, [fp, #-4]
   14da0:	ldr	r1, [sp, #8]
   14da4:	ldr	r2, [sp, #4]
   14da8:	bl	18478 <__assert_fail@plt+0x7610>
   14dac:	str	r0, [sp]
   14db0:	ldr	r0, [sp]
   14db4:	movw	r1, #0
   14db8:	cmp	r0, r1
   14dbc:	bne	14dec <__assert_fail@plt+0x3f84>
   14dc0:	ldr	r0, [fp, #-4]
   14dc4:	movw	r1, #0
   14dc8:	cmp	r0, r1
   14dcc:	beq	14de8 <__assert_fail@plt+0x3f80>
   14dd0:	ldr	r0, [sp, #8]
   14dd4:	cmp	r0, #0
   14dd8:	beq	14dec <__assert_fail@plt+0x3f84>
   14ddc:	ldr	r0, [sp, #4]
   14de0:	cmp	r0, #0
   14de4:	beq	14dec <__assert_fail@plt+0x3f84>
   14de8:	bl	17b30 <__assert_fail@plt+0x6cc8>
   14dec:	ldr	r0, [sp]
   14df0:	mov	sp, fp
   14df4:	pop	{fp, pc}
   14df8:	push	{fp, lr}
   14dfc:	mov	fp, sp
   14e00:	sub	sp, sp, #8
   14e04:	str	r0, [sp, #4]
   14e08:	ldr	r0, [sp, #4]
   14e0c:	bl	17c1c <__assert_fail@plt+0x6db4>
   14e10:	bl	14e1c <__assert_fail@plt+0x3fb4>
   14e14:	mov	sp, fp
   14e18:	pop	{fp, pc}
   14e1c:	push	{fp, lr}
   14e20:	mov	fp, sp
   14e24:	sub	sp, sp, #8
   14e28:	str	r0, [sp, #4]
   14e2c:	ldr	r0, [sp, #4]
   14e30:	movw	r1, #0
   14e34:	cmp	r0, r1
   14e38:	bne	14e40 <__assert_fail@plt+0x3fd8>
   14e3c:	bl	17b30 <__assert_fail@plt+0x6cc8>
   14e40:	ldr	r0, [sp, #4]
   14e44:	mov	sp, fp
   14e48:	pop	{fp, pc}
   14e4c:	push	{fp, lr}
   14e50:	mov	fp, sp
   14e54:	sub	sp, sp, #8
   14e58:	str	r0, [sp, #4]
   14e5c:	ldr	r0, [sp, #4]
   14e60:	bl	181b4 <__assert_fail@plt+0x734c>
   14e64:	bl	14e1c <__assert_fail@plt+0x3fb4>
   14e68:	mov	sp, fp
   14e6c:	pop	{fp, pc}
   14e70:	push	{fp, lr}
   14e74:	mov	fp, sp
   14e78:	sub	sp, sp, #8
   14e7c:	str	r0, [sp, #4]
   14e80:	ldr	r0, [sp, #4]
   14e84:	bl	14df8 <__assert_fail@plt+0x3f90>
   14e88:	mov	sp, fp
   14e8c:	pop	{fp, pc}
   14e90:	push	{fp, lr}
   14e94:	mov	fp, sp
   14e98:	sub	sp, sp, #16
   14e9c:	str	r0, [fp, #-4]
   14ea0:	str	r1, [sp, #8]
   14ea4:	ldr	r0, [fp, #-4]
   14ea8:	ldr	r1, [sp, #8]
   14eac:	bl	17c8c <__assert_fail@plt+0x6e24>
   14eb0:	str	r0, [sp, #4]
   14eb4:	ldr	r0, [sp, #4]
   14eb8:	movw	r1, #0
   14ebc:	cmp	r0, r1
   14ec0:	bne	14ee4 <__assert_fail@plt+0x407c>
   14ec4:	ldr	r0, [fp, #-4]
   14ec8:	movw	r1, #0
   14ecc:	cmp	r0, r1
   14ed0:	beq	14ee0 <__assert_fail@plt+0x4078>
   14ed4:	ldr	r0, [sp, #8]
   14ed8:	cmp	r0, #0
   14edc:	beq	14ee4 <__assert_fail@plt+0x407c>
   14ee0:	bl	17b30 <__assert_fail@plt+0x6cc8>
   14ee4:	ldr	r0, [sp, #4]
   14ee8:	mov	sp, fp
   14eec:	pop	{fp, pc}
   14ef0:	push	{fp, lr}
   14ef4:	mov	fp, sp
   14ef8:	sub	sp, sp, #8
   14efc:	str	r0, [sp, #4]
   14f00:	str	r1, [sp]
   14f04:	ldr	r0, [sp, #4]
   14f08:	ldr	r1, [sp]
   14f0c:	bl	181f4 <__assert_fail@plt+0x738c>
   14f10:	bl	14e1c <__assert_fail@plt+0x3fb4>
   14f14:	mov	sp, fp
   14f18:	pop	{fp, pc}
   14f1c:	push	{fp, lr}
   14f20:	mov	fp, sp
   14f24:	sub	sp, sp, #16
   14f28:	str	r0, [fp, #-4]
   14f2c:	str	r1, [sp, #8]
   14f30:	str	r2, [sp, #4]
   14f34:	ldr	r0, [fp, #-4]
   14f38:	ldr	r1, [sp, #8]
   14f3c:	ldr	r2, [sp, #4]
   14f40:	bl	182ec <__assert_fail@plt+0x7484>
   14f44:	bl	14e1c <__assert_fail@plt+0x3fb4>
   14f48:	mov	sp, fp
   14f4c:	pop	{fp, pc}
   14f50:	push	{fp, lr}
   14f54:	mov	fp, sp
   14f58:	sub	sp, sp, #8
   14f5c:	str	r0, [sp, #4]
   14f60:	str	r1, [sp]
   14f64:	ldr	r1, [sp, #4]
   14f68:	ldr	r2, [sp]
   14f6c:	movw	r0, #0
   14f70:	bl	14d84 <__assert_fail@plt+0x3f1c>
   14f74:	mov	sp, fp
   14f78:	pop	{fp, pc}
   14f7c:	push	{fp, lr}
   14f80:	mov	fp, sp
   14f84:	sub	sp, sp, #8
   14f88:	str	r0, [sp, #4]
   14f8c:	str	r1, [sp]
   14f90:	ldr	r1, [sp, #4]
   14f94:	ldr	r2, [sp]
   14f98:	movw	r0, #0
   14f9c:	bl	14f1c <__assert_fail@plt+0x40b4>
   14fa0:	mov	sp, fp
   14fa4:	pop	{fp, pc}
   14fa8:	push	{fp, lr}
   14fac:	mov	fp, sp
   14fb0:	sub	sp, sp, #8
   14fb4:	str	r0, [sp, #4]
   14fb8:	str	r1, [sp]
   14fbc:	ldr	r0, [sp, #4]
   14fc0:	ldr	r1, [sp]
   14fc4:	movw	r2, #1
   14fc8:	bl	14fd4 <__assert_fail@plt+0x416c>
   14fcc:	mov	sp, fp
   14fd0:	pop	{fp, pc}
   14fd4:	push	{fp, lr}
   14fd8:	mov	fp, sp
   14fdc:	sub	sp, sp, #16
   14fe0:	str	r0, [fp, #-4]
   14fe4:	str	r1, [sp, #8]
   14fe8:	str	r2, [sp, #4]
   14fec:	ldr	r0, [sp, #8]
   14ff0:	ldr	r0, [r0]
   14ff4:	str	r0, [sp]
   14ff8:	ldr	r0, [fp, #-4]
   14ffc:	movw	r1, #0
   15000:	cmp	r0, r1
   15004:	bne	15050 <__assert_fail@plt+0x41e8>
   15008:	ldr	r0, [sp]
   1500c:	cmp	r0, #0
   15010:	bne	1504c <__assert_fail@plt+0x41e4>
   15014:	ldr	r0, [sp, #4]
   15018:	movw	r1, #64	; 0x40
   1501c:	udiv	r0, r1, r0
   15020:	str	r0, [sp]
   15024:	ldr	r0, [sp]
   15028:	cmp	r0, #0
   1502c:	movw	r0, #0
   15030:	movne	r0, #1
   15034:	mvn	r1, #0
   15038:	eor	r0, r0, r1
   1503c:	and	r0, r0, #1
   15040:	ldr	r1, [sp]
   15044:	add	r0, r1, r0
   15048:	str	r0, [sp]
   1504c:	b	15080 <__assert_fail@plt+0x4218>
   15050:	ldr	r0, [sp]
   15054:	ldr	r1, [sp]
   15058:	lsr	r1, r1, #1
   1505c:	add	r1, r1, #1
   15060:	adds	r0, r0, r1
   15064:	mov	r1, #0
   15068:	adc	r1, r1, #0
   1506c:	str	r0, [sp]
   15070:	tst	r1, #1
   15074:	beq	1507c <__assert_fail@plt+0x4214>
   15078:	bl	17b30 <__assert_fail@plt+0x6cc8>
   1507c:	b	15080 <__assert_fail@plt+0x4218>
   15080:	ldr	r0, [fp, #-4]
   15084:	ldr	r1, [sp]
   15088:	ldr	r2, [sp, #4]
   1508c:	bl	14d84 <__assert_fail@plt+0x3f1c>
   15090:	str	r0, [fp, #-4]
   15094:	ldr	r0, [sp]
   15098:	ldr	r1, [sp, #8]
   1509c:	str	r0, [r1]
   150a0:	ldr	r0, [fp, #-4]
   150a4:	mov	sp, fp
   150a8:	pop	{fp, pc}
   150ac:	push	{fp, lr}
   150b0:	mov	fp, sp
   150b4:	sub	sp, sp, #216	; 0xd8
   150b8:	ldr	ip, [fp, #8]
   150bc:	str	r0, [fp, #-4]
   150c0:	str	r1, [fp, #-8]
   150c4:	str	r2, [fp, #-12]
   150c8:	str	r3, [fp, #-16]
   150cc:	ldr	r0, [fp, #-8]
   150d0:	ldr	r0, [r0]
   150d4:	str	r0, [fp, #-20]	; 0xffffffec
   150d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   150dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   150e0:	asr	r1, r1, #1
   150e4:	add	r1, r0, r1
   150e8:	mov	r2, #1
   150ec:	cmp	r1, r0
   150f0:	movwvc	r2, #0
   150f4:	str	r1, [fp, #-24]	; 0xffffffe8
   150f8:	tst	r2, #1
   150fc:	beq	15108 <__assert_fail@plt+0x42a0>
   15100:	ldr	r0, [pc, #4036]	; 160cc <__assert_fail@plt+0x5264>
   15104:	str	r0, [fp, #-24]	; 0xffffffe8
   15108:	ldr	r0, [fp, #-16]
   1510c:	movw	r1, #0
   15110:	cmp	r1, r0
   15114:	bgt	15130 <__assert_fail@plt+0x42c8>
   15118:	ldr	r0, [fp, #-16]
   1511c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15120:	cmp	r0, r1
   15124:	bge	15130 <__assert_fail@plt+0x42c8>
   15128:	ldr	r0, [fp, #-16]
   1512c:	str	r0, [fp, #-24]	; 0xffffffe8
   15130:	b	15508 <__assert_fail@plt+0x46a0>
   15134:	b	15138 <__assert_fail@plt+0x42d0>
   15138:	ldr	r0, [fp, #8]
   1513c:	cmp	r0, #0
   15140:	bge	15254 <__assert_fail@plt+0x43ec>
   15144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15148:	cmp	r0, #0
   1514c:	bge	151d8 <__assert_fail@plt+0x4370>
   15150:	b	15154 <__assert_fail@plt+0x42ec>
   15154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15158:	ldr	r1, [fp, #8]
   1515c:	movw	r2, #127	; 0x7f
   15160:	sdiv	r1, r2, r1
   15164:	cmp	r0, r1
   15168:	blt	152f4 <__assert_fail@plt+0x448c>
   1516c:	b	1530c <__assert_fail@plt+0x44a4>
   15170:	b	15174 <__assert_fail@plt+0x430c>
   15174:	ldr	r0, [pc, #4084]	; 16170 <__assert_fail@plt+0x5308>
   15178:	ldr	r1, [fp, #8]
   1517c:	cmp	r1, r0
   15180:	blt	15198 <__assert_fail@plt+0x4330>
   15184:	b	151a4 <__assert_fail@plt+0x433c>
   15188:	ldr	r0, [fp, #8]
   1518c:	movw	r1, #0
   15190:	cmp	r1, r0
   15194:	bge	151a4 <__assert_fail@plt+0x433c>
   15198:	movw	r0, #0
   1519c:	str	r0, [fp, #-36]	; 0xffffffdc
   151a0:	b	151bc <__assert_fail@plt+0x4354>
   151a4:	ldr	r0, [fp, #8]
   151a8:	movw	r1, #0
   151ac:	sub	r0, r1, r0
   151b0:	movw	r1, #127	; 0x7f
   151b4:	sdiv	r0, r1, r0
   151b8:	str	r0, [fp, #-36]	; 0xffffffdc
   151bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   151c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   151c4:	mvn	r2, #0
   151c8:	sub	r1, r2, r1
   151cc:	cmp	r0, r1
   151d0:	ble	152f4 <__assert_fail@plt+0x448c>
   151d4:	b	1530c <__assert_fail@plt+0x44a4>
   151d8:	b	151dc <__assert_fail@plt+0x4374>
   151dc:	b	15238 <__assert_fail@plt+0x43d0>
   151e0:	b	15238 <__assert_fail@plt+0x43d0>
   151e4:	ldr	r0, [fp, #8]
   151e8:	cmn	r0, #1
   151ec:	bne	15238 <__assert_fail@plt+0x43d0>
   151f0:	b	151f4 <__assert_fail@plt+0x438c>
   151f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151f8:	mvn	r1, #127	; 0x7f
   151fc:	add	r0, r0, r1
   15200:	movw	r1, #0
   15204:	cmp	r1, r0
   15208:	blt	152f4 <__assert_fail@plt+0x448c>
   1520c:	b	1530c <__assert_fail@plt+0x44a4>
   15210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15214:	movw	r1, #0
   15218:	cmp	r1, r0
   1521c:	bge	1530c <__assert_fail@plt+0x44a4>
   15220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15224:	sub	r0, r0, #1
   15228:	movw	r1, #127	; 0x7f
   1522c:	cmp	r1, r0
   15230:	blt	152f4 <__assert_fail@plt+0x448c>
   15234:	b	1530c <__assert_fail@plt+0x44a4>
   15238:	ldr	r0, [fp, #8]
   1523c:	mvn	r1, #127	; 0x7f
   15240:	sdiv	r0, r1, r0
   15244:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15248:	cmp	r0, r1
   1524c:	blt	152f4 <__assert_fail@plt+0x448c>
   15250:	b	1530c <__assert_fail@plt+0x44a4>
   15254:	ldr	r0, [fp, #8]
   15258:	cmp	r0, #0
   1525c:	bne	15264 <__assert_fail@plt+0x43fc>
   15260:	b	1530c <__assert_fail@plt+0x44a4>
   15264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15268:	cmp	r0, #0
   1526c:	bge	152dc <__assert_fail@plt+0x4474>
   15270:	b	15274 <__assert_fail@plt+0x440c>
   15274:	b	152c0 <__assert_fail@plt+0x4458>
   15278:	b	152c0 <__assert_fail@plt+0x4458>
   1527c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15280:	cmn	r0, #1
   15284:	bne	152c0 <__assert_fail@plt+0x4458>
   15288:	b	1528c <__assert_fail@plt+0x4424>
   1528c:	ldr	r0, [fp, #8]
   15290:	mvn	r1, #127	; 0x7f
   15294:	add	r0, r0, r1
   15298:	movw	r1, #0
   1529c:	cmp	r1, r0
   152a0:	blt	152f4 <__assert_fail@plt+0x448c>
   152a4:	b	1530c <__assert_fail@plt+0x44a4>
   152a8:	ldr	r0, [fp, #8]
   152ac:	sub	r0, r0, #1
   152b0:	movw	r1, #127	; 0x7f
   152b4:	cmp	r1, r0
   152b8:	blt	152f4 <__assert_fail@plt+0x448c>
   152bc:	b	1530c <__assert_fail@plt+0x44a4>
   152c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152c4:	mvn	r1, #127	; 0x7f
   152c8:	sdiv	r0, r1, r0
   152cc:	ldr	r1, [fp, #8]
   152d0:	cmp	r0, r1
   152d4:	blt	152f4 <__assert_fail@plt+0x448c>
   152d8:	b	1530c <__assert_fail@plt+0x44a4>
   152dc:	ldr	r0, [fp, #8]
   152e0:	movw	r1, #127	; 0x7f
   152e4:	sdiv	r0, r1, r0
   152e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   152ec:	cmp	r0, r1
   152f0:	bge	1530c <__assert_fail@plt+0x44a4>
   152f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152f8:	ldr	r1, [fp, #8]
   152fc:	mul	r0, r0, r1
   15300:	sxtb	r0, r0
   15304:	str	r0, [fp, #-28]	; 0xffffffe4
   15308:	b	164d0 <__assert_fail@plt+0x5668>
   1530c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15310:	ldr	r1, [fp, #8]
   15314:	mul	r0, r0, r1
   15318:	sxtb	r0, r0
   1531c:	str	r0, [fp, #-28]	; 0xffffffe4
   15320:	b	164dc <__assert_fail@plt+0x5674>
   15324:	ldr	r0, [fp, #8]
   15328:	cmp	r0, #0
   1532c:	bge	1543c <__assert_fail@plt+0x45d4>
   15330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15334:	cmp	r0, #0
   15338:	bge	153c4 <__assert_fail@plt+0x455c>
   1533c:	b	15340 <__assert_fail@plt+0x44d8>
   15340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15344:	ldr	r1, [fp, #8]
   15348:	movw	r2, #255	; 0xff
   1534c:	sdiv	r1, r2, r1
   15350:	cmp	r0, r1
   15354:	blt	154d8 <__assert_fail@plt+0x4670>
   15358:	b	154f0 <__assert_fail@plt+0x4688>
   1535c:	b	15360 <__assert_fail@plt+0x44f8>
   15360:	ldr	r0, [pc, #3592]	; 16170 <__assert_fail@plt+0x5308>
   15364:	ldr	r1, [fp, #8]
   15368:	cmp	r1, r0
   1536c:	blt	15384 <__assert_fail@plt+0x451c>
   15370:	b	15390 <__assert_fail@plt+0x4528>
   15374:	ldr	r0, [fp, #8]
   15378:	movw	r1, #0
   1537c:	cmp	r1, r0
   15380:	bge	15390 <__assert_fail@plt+0x4528>
   15384:	movw	r0, #0
   15388:	str	r0, [fp, #-40]	; 0xffffffd8
   1538c:	b	153a8 <__assert_fail@plt+0x4540>
   15390:	ldr	r0, [fp, #8]
   15394:	movw	r1, #0
   15398:	sub	r0, r1, r0
   1539c:	movw	r1, #255	; 0xff
   153a0:	sdiv	r0, r1, r0
   153a4:	str	r0, [fp, #-40]	; 0xffffffd8
   153a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   153ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153b0:	mvn	r2, #0
   153b4:	sub	r1, r2, r1
   153b8:	cmp	r0, r1
   153bc:	ble	154d8 <__assert_fail@plt+0x4670>
   153c0:	b	154f0 <__assert_fail@plt+0x4688>
   153c4:	b	153c8 <__assert_fail@plt+0x4560>
   153c8:	b	15420 <__assert_fail@plt+0x45b8>
   153cc:	b	15420 <__assert_fail@plt+0x45b8>
   153d0:	ldr	r0, [fp, #8]
   153d4:	cmn	r0, #1
   153d8:	bne	15420 <__assert_fail@plt+0x45b8>
   153dc:	b	153e0 <__assert_fail@plt+0x4578>
   153e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153e4:	add	r0, r0, #0
   153e8:	movw	r1, #0
   153ec:	cmp	r1, r0
   153f0:	blt	154d8 <__assert_fail@plt+0x4670>
   153f4:	b	154f0 <__assert_fail@plt+0x4688>
   153f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153fc:	movw	r1, #0
   15400:	cmp	r1, r0
   15404:	bge	154f0 <__assert_fail@plt+0x4688>
   15408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1540c:	sub	r0, r0, #1
   15410:	mvn	r1, #0
   15414:	cmp	r1, r0
   15418:	blt	154d8 <__assert_fail@plt+0x4670>
   1541c:	b	154f0 <__assert_fail@plt+0x4688>
   15420:	ldr	r0, [fp, #8]
   15424:	movw	r1, #0
   15428:	sdiv	r0, r1, r0
   1542c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15430:	cmp	r0, r1
   15434:	blt	154d8 <__assert_fail@plt+0x4670>
   15438:	b	154f0 <__assert_fail@plt+0x4688>
   1543c:	ldr	r0, [fp, #8]
   15440:	cmp	r0, #0
   15444:	bne	1544c <__assert_fail@plt+0x45e4>
   15448:	b	154f0 <__assert_fail@plt+0x4688>
   1544c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15450:	cmp	r0, #0
   15454:	bge	154c0 <__assert_fail@plt+0x4658>
   15458:	b	1545c <__assert_fail@plt+0x45f4>
   1545c:	b	154a4 <__assert_fail@plt+0x463c>
   15460:	b	154a4 <__assert_fail@plt+0x463c>
   15464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15468:	cmn	r0, #1
   1546c:	bne	154a4 <__assert_fail@plt+0x463c>
   15470:	b	15474 <__assert_fail@plt+0x460c>
   15474:	ldr	r0, [fp, #8]
   15478:	add	r0, r0, #0
   1547c:	movw	r1, #0
   15480:	cmp	r1, r0
   15484:	blt	154d8 <__assert_fail@plt+0x4670>
   15488:	b	154f0 <__assert_fail@plt+0x4688>
   1548c:	ldr	r0, [fp, #8]
   15490:	sub	r0, r0, #1
   15494:	mvn	r1, #0
   15498:	cmp	r1, r0
   1549c:	blt	154d8 <__assert_fail@plt+0x4670>
   154a0:	b	154f0 <__assert_fail@plt+0x4688>
   154a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154a8:	movw	r1, #0
   154ac:	sdiv	r0, r1, r0
   154b0:	ldr	r1, [fp, #8]
   154b4:	cmp	r0, r1
   154b8:	blt	154d8 <__assert_fail@plt+0x4670>
   154bc:	b	154f0 <__assert_fail@plt+0x4688>
   154c0:	ldr	r0, [fp, #8]
   154c4:	movw	r1, #255	; 0xff
   154c8:	sdiv	r0, r1, r0
   154cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   154d0:	cmp	r0, r1
   154d4:	bge	154f0 <__assert_fail@plt+0x4688>
   154d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154dc:	ldr	r1, [fp, #8]
   154e0:	mul	r0, r0, r1
   154e4:	and	r0, r0, #255	; 0xff
   154e8:	str	r0, [fp, #-28]	; 0xffffffe4
   154ec:	b	164d0 <__assert_fail@plt+0x5668>
   154f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154f4:	ldr	r1, [fp, #8]
   154f8:	mul	r0, r0, r1
   154fc:	and	r0, r0, #255	; 0xff
   15500:	str	r0, [fp, #-28]	; 0xffffffe4
   15504:	b	164dc <__assert_fail@plt+0x5674>
   15508:	b	158e0 <__assert_fail@plt+0x4a78>
   1550c:	b	15510 <__assert_fail@plt+0x46a8>
   15510:	ldr	r0, [fp, #8]
   15514:	cmp	r0, #0
   15518:	bge	1562c <__assert_fail@plt+0x47c4>
   1551c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15520:	cmp	r0, #0
   15524:	bge	155b0 <__assert_fail@plt+0x4748>
   15528:	b	1552c <__assert_fail@plt+0x46c4>
   1552c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15530:	ldr	r1, [fp, #8]
   15534:	movw	r2, #32767	; 0x7fff
   15538:	sdiv	r1, r2, r1
   1553c:	cmp	r0, r1
   15540:	blt	156cc <__assert_fail@plt+0x4864>
   15544:	b	156e4 <__assert_fail@plt+0x487c>
   15548:	b	1554c <__assert_fail@plt+0x46e4>
   1554c:	ldr	r0, [pc, #3100]	; 16170 <__assert_fail@plt+0x5308>
   15550:	ldr	r1, [fp, #8]
   15554:	cmp	r1, r0
   15558:	blt	15570 <__assert_fail@plt+0x4708>
   1555c:	b	1557c <__assert_fail@plt+0x4714>
   15560:	ldr	r0, [fp, #8]
   15564:	movw	r1, #0
   15568:	cmp	r1, r0
   1556c:	bge	1557c <__assert_fail@plt+0x4714>
   15570:	movw	r0, #0
   15574:	str	r0, [fp, #-44]	; 0xffffffd4
   15578:	b	15594 <__assert_fail@plt+0x472c>
   1557c:	ldr	r0, [fp, #8]
   15580:	movw	r1, #0
   15584:	sub	r0, r1, r0
   15588:	movw	r1, #32767	; 0x7fff
   1558c:	sdiv	r0, r1, r0
   15590:	str	r0, [fp, #-44]	; 0xffffffd4
   15594:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1559c:	mvn	r2, #0
   155a0:	sub	r1, r2, r1
   155a4:	cmp	r0, r1
   155a8:	ble	156cc <__assert_fail@plt+0x4864>
   155ac:	b	156e4 <__assert_fail@plt+0x487c>
   155b0:	b	155b4 <__assert_fail@plt+0x474c>
   155b4:	b	15610 <__assert_fail@plt+0x47a8>
   155b8:	b	15610 <__assert_fail@plt+0x47a8>
   155bc:	ldr	r0, [fp, #8]
   155c0:	cmn	r0, #1
   155c4:	bne	15610 <__assert_fail@plt+0x47a8>
   155c8:	b	155cc <__assert_fail@plt+0x4764>
   155cc:	ldr	r0, [pc, #4068]	; 165b8 <__assert_fail@plt+0x5750>
   155d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155d4:	add	r0, r1, r0
   155d8:	movw	r1, #0
   155dc:	cmp	r1, r0
   155e0:	blt	156cc <__assert_fail@plt+0x4864>
   155e4:	b	156e4 <__assert_fail@plt+0x487c>
   155e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155ec:	movw	r1, #0
   155f0:	cmp	r1, r0
   155f4:	bge	156e4 <__assert_fail@plt+0x487c>
   155f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155fc:	sub	r0, r0, #1
   15600:	movw	r1, #32767	; 0x7fff
   15604:	cmp	r1, r0
   15608:	blt	156cc <__assert_fail@plt+0x4864>
   1560c:	b	156e4 <__assert_fail@plt+0x487c>
   15610:	ldr	r0, [pc, #4000]	; 165b8 <__assert_fail@plt+0x5750>
   15614:	ldr	r1, [fp, #8]
   15618:	sdiv	r0, r0, r1
   1561c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15620:	cmp	r0, r1
   15624:	blt	156cc <__assert_fail@plt+0x4864>
   15628:	b	156e4 <__assert_fail@plt+0x487c>
   1562c:	ldr	r0, [fp, #8]
   15630:	cmp	r0, #0
   15634:	bne	1563c <__assert_fail@plt+0x47d4>
   15638:	b	156e4 <__assert_fail@plt+0x487c>
   1563c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15640:	cmp	r0, #0
   15644:	bge	156b4 <__assert_fail@plt+0x484c>
   15648:	b	1564c <__assert_fail@plt+0x47e4>
   1564c:	b	15698 <__assert_fail@plt+0x4830>
   15650:	b	15698 <__assert_fail@plt+0x4830>
   15654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15658:	cmn	r0, #1
   1565c:	bne	15698 <__assert_fail@plt+0x4830>
   15660:	b	15664 <__assert_fail@plt+0x47fc>
   15664:	ldr	r0, [pc, #3916]	; 165b8 <__assert_fail@plt+0x5750>
   15668:	ldr	r1, [fp, #8]
   1566c:	add	r0, r1, r0
   15670:	movw	r1, #0
   15674:	cmp	r1, r0
   15678:	blt	156cc <__assert_fail@plt+0x4864>
   1567c:	b	156e4 <__assert_fail@plt+0x487c>
   15680:	ldr	r0, [fp, #8]
   15684:	sub	r0, r0, #1
   15688:	movw	r1, #32767	; 0x7fff
   1568c:	cmp	r1, r0
   15690:	blt	156cc <__assert_fail@plt+0x4864>
   15694:	b	156e4 <__assert_fail@plt+0x487c>
   15698:	ldr	r0, [pc, #3864]	; 165b8 <__assert_fail@plt+0x5750>
   1569c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156a0:	sdiv	r0, r0, r1
   156a4:	ldr	r1, [fp, #8]
   156a8:	cmp	r0, r1
   156ac:	blt	156cc <__assert_fail@plt+0x4864>
   156b0:	b	156e4 <__assert_fail@plt+0x487c>
   156b4:	ldr	r0, [fp, #8]
   156b8:	movw	r1, #32767	; 0x7fff
   156bc:	sdiv	r0, r1, r0
   156c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156c4:	cmp	r0, r1
   156c8:	bge	156e4 <__assert_fail@plt+0x487c>
   156cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156d0:	ldr	r1, [fp, #8]
   156d4:	mul	r0, r0, r1
   156d8:	sxth	r0, r0
   156dc:	str	r0, [fp, #-28]	; 0xffffffe4
   156e0:	b	164d0 <__assert_fail@plt+0x5668>
   156e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156e8:	ldr	r1, [fp, #8]
   156ec:	mul	r0, r0, r1
   156f0:	sxth	r0, r0
   156f4:	str	r0, [fp, #-28]	; 0xffffffe4
   156f8:	b	164dc <__assert_fail@plt+0x5674>
   156fc:	ldr	r0, [fp, #8]
   15700:	cmp	r0, #0
   15704:	bge	15814 <__assert_fail@plt+0x49ac>
   15708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1570c:	cmp	r0, #0
   15710:	bge	1579c <__assert_fail@plt+0x4934>
   15714:	b	15718 <__assert_fail@plt+0x48b0>
   15718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1571c:	ldr	r1, [fp, #8]
   15720:	movw	r2, #65535	; 0xffff
   15724:	sdiv	r1, r2, r1
   15728:	cmp	r0, r1
   1572c:	blt	158b0 <__assert_fail@plt+0x4a48>
   15730:	b	158c8 <__assert_fail@plt+0x4a60>
   15734:	b	15738 <__assert_fail@plt+0x48d0>
   15738:	ldr	r0, [pc, #2608]	; 16170 <__assert_fail@plt+0x5308>
   1573c:	ldr	r1, [fp, #8]
   15740:	cmp	r1, r0
   15744:	blt	1575c <__assert_fail@plt+0x48f4>
   15748:	b	15768 <__assert_fail@plt+0x4900>
   1574c:	ldr	r0, [fp, #8]
   15750:	movw	r1, #0
   15754:	cmp	r1, r0
   15758:	bge	15768 <__assert_fail@plt+0x4900>
   1575c:	movw	r0, #0
   15760:	str	r0, [fp, #-48]	; 0xffffffd0
   15764:	b	15780 <__assert_fail@plt+0x4918>
   15768:	ldr	r0, [fp, #8]
   1576c:	movw	r1, #0
   15770:	sub	r0, r1, r0
   15774:	movw	r1, #65535	; 0xffff
   15778:	sdiv	r0, r1, r0
   1577c:	str	r0, [fp, #-48]	; 0xffffffd0
   15780:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15784:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15788:	mvn	r2, #0
   1578c:	sub	r1, r2, r1
   15790:	cmp	r0, r1
   15794:	ble	158b0 <__assert_fail@plt+0x4a48>
   15798:	b	158c8 <__assert_fail@plt+0x4a60>
   1579c:	b	157a0 <__assert_fail@plt+0x4938>
   157a0:	b	157f8 <__assert_fail@plt+0x4990>
   157a4:	b	157f8 <__assert_fail@plt+0x4990>
   157a8:	ldr	r0, [fp, #8]
   157ac:	cmn	r0, #1
   157b0:	bne	157f8 <__assert_fail@plt+0x4990>
   157b4:	b	157b8 <__assert_fail@plt+0x4950>
   157b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157bc:	add	r0, r0, #0
   157c0:	movw	r1, #0
   157c4:	cmp	r1, r0
   157c8:	blt	158b0 <__assert_fail@plt+0x4a48>
   157cc:	b	158c8 <__assert_fail@plt+0x4a60>
   157d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157d4:	movw	r1, #0
   157d8:	cmp	r1, r0
   157dc:	bge	158c8 <__assert_fail@plt+0x4a60>
   157e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157e4:	sub	r0, r0, #1
   157e8:	mvn	r1, #0
   157ec:	cmp	r1, r0
   157f0:	blt	158b0 <__assert_fail@plt+0x4a48>
   157f4:	b	158c8 <__assert_fail@plt+0x4a60>
   157f8:	ldr	r0, [fp, #8]
   157fc:	movw	r1, #0
   15800:	sdiv	r0, r1, r0
   15804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15808:	cmp	r0, r1
   1580c:	blt	158b0 <__assert_fail@plt+0x4a48>
   15810:	b	158c8 <__assert_fail@plt+0x4a60>
   15814:	ldr	r0, [fp, #8]
   15818:	cmp	r0, #0
   1581c:	bne	15824 <__assert_fail@plt+0x49bc>
   15820:	b	158c8 <__assert_fail@plt+0x4a60>
   15824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15828:	cmp	r0, #0
   1582c:	bge	15898 <__assert_fail@plt+0x4a30>
   15830:	b	15834 <__assert_fail@plt+0x49cc>
   15834:	b	1587c <__assert_fail@plt+0x4a14>
   15838:	b	1587c <__assert_fail@plt+0x4a14>
   1583c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15840:	cmn	r0, #1
   15844:	bne	1587c <__assert_fail@plt+0x4a14>
   15848:	b	1584c <__assert_fail@plt+0x49e4>
   1584c:	ldr	r0, [fp, #8]
   15850:	add	r0, r0, #0
   15854:	movw	r1, #0
   15858:	cmp	r1, r0
   1585c:	blt	158b0 <__assert_fail@plt+0x4a48>
   15860:	b	158c8 <__assert_fail@plt+0x4a60>
   15864:	ldr	r0, [fp, #8]
   15868:	sub	r0, r0, #1
   1586c:	mvn	r1, #0
   15870:	cmp	r1, r0
   15874:	blt	158b0 <__assert_fail@plt+0x4a48>
   15878:	b	158c8 <__assert_fail@plt+0x4a60>
   1587c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15880:	movw	r1, #0
   15884:	sdiv	r0, r1, r0
   15888:	ldr	r1, [fp, #8]
   1588c:	cmp	r0, r1
   15890:	blt	158b0 <__assert_fail@plt+0x4a48>
   15894:	b	158c8 <__assert_fail@plt+0x4a60>
   15898:	ldr	r0, [fp, #8]
   1589c:	movw	r1, #65535	; 0xffff
   158a0:	sdiv	r0, r1, r0
   158a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   158a8:	cmp	r0, r1
   158ac:	bge	158c8 <__assert_fail@plt+0x4a60>
   158b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158b4:	ldr	r1, [fp, #8]
   158b8:	mul	r0, r0, r1
   158bc:	uxth	r0, r0
   158c0:	str	r0, [fp, #-28]	; 0xffffffe4
   158c4:	b	164d0 <__assert_fail@plt+0x5668>
   158c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158cc:	ldr	r1, [fp, #8]
   158d0:	mul	r0, r0, r1
   158d4:	uxth	r0, r0
   158d8:	str	r0, [fp, #-28]	; 0xffffffe4
   158dc:	b	164dc <__assert_fail@plt+0x5674>
   158e0:	b	158e4 <__assert_fail@plt+0x4a7c>
   158e4:	b	158e8 <__assert_fail@plt+0x4a80>
   158e8:	ldr	r0, [fp, #8]
   158ec:	cmp	r0, #0
   158f0:	bge	159f4 <__assert_fail@plt+0x4b8c>
   158f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158f8:	cmp	r0, #0
   158fc:	bge	15988 <__assert_fail@plt+0x4b20>
   15900:	b	15904 <__assert_fail@plt+0x4a9c>
   15904:	ldr	r0, [pc, #1984]	; 160cc <__assert_fail@plt+0x5264>
   15908:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1590c:	ldr	r2, [fp, #8]
   15910:	sdiv	r0, r0, r2
   15914:	cmp	r1, r0
   15918:	blt	15a84 <__assert_fail@plt+0x4c1c>
   1591c:	b	15a98 <__assert_fail@plt+0x4c30>
   15920:	b	15924 <__assert_fail@plt+0x4abc>
   15924:	ldr	r0, [pc, #2116]	; 16170 <__assert_fail@plt+0x5308>
   15928:	ldr	r1, [fp, #8]
   1592c:	cmp	r1, r0
   15930:	blt	15948 <__assert_fail@plt+0x4ae0>
   15934:	b	15954 <__assert_fail@plt+0x4aec>
   15938:	ldr	r0, [fp, #8]
   1593c:	movw	r1, #0
   15940:	cmp	r1, r0
   15944:	bge	15954 <__assert_fail@plt+0x4aec>
   15948:	movw	r0, #0
   1594c:	str	r0, [fp, #-52]	; 0xffffffcc
   15950:	b	1596c <__assert_fail@plt+0x4b04>
   15954:	ldr	r0, [pc, #1904]	; 160cc <__assert_fail@plt+0x5264>
   15958:	ldr	r1, [fp, #8]
   1595c:	movw	r2, #0
   15960:	sub	r1, r2, r1
   15964:	sdiv	r0, r0, r1
   15968:	str	r0, [fp, #-52]	; 0xffffffcc
   1596c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15970:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15974:	mvn	r2, #0
   15978:	sub	r1, r2, r1
   1597c:	cmp	r0, r1
   15980:	ble	15a84 <__assert_fail@plt+0x4c1c>
   15984:	b	15a98 <__assert_fail@plt+0x4c30>
   15988:	ldr	r0, [fp, #8]
   1598c:	cmn	r0, #1
   15990:	bne	159d8 <__assert_fail@plt+0x4b70>
   15994:	b	15998 <__assert_fail@plt+0x4b30>
   15998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1599c:	add	r0, r0, #-2147483648	; 0x80000000
   159a0:	movw	r1, #0
   159a4:	cmp	r1, r0
   159a8:	blt	15a84 <__assert_fail@plt+0x4c1c>
   159ac:	b	15a98 <__assert_fail@plt+0x4c30>
   159b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159b4:	movw	r1, #0
   159b8:	cmp	r1, r0
   159bc:	bge	15a98 <__assert_fail@plt+0x4c30>
   159c0:	ldr	r0, [pc, #1796]	; 160cc <__assert_fail@plt+0x5264>
   159c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159c8:	sub	r1, r1, #1
   159cc:	cmp	r0, r1
   159d0:	blt	15a84 <__assert_fail@plt+0x4c1c>
   159d4:	b	15a98 <__assert_fail@plt+0x4c30>
   159d8:	ldr	r0, [pc, #4080]	; 169d0 <__assert_fail@plt+0x5b68>
   159dc:	ldr	r1, [fp, #8]
   159e0:	sdiv	r0, r0, r1
   159e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159e8:	cmp	r0, r1
   159ec:	blt	15a84 <__assert_fail@plt+0x4c1c>
   159f0:	b	15a98 <__assert_fail@plt+0x4c30>
   159f4:	ldr	r0, [fp, #8]
   159f8:	cmp	r0, #0
   159fc:	bne	15a04 <__assert_fail@plt+0x4b9c>
   15a00:	b	15a98 <__assert_fail@plt+0x4c30>
   15a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a08:	cmp	r0, #0
   15a0c:	bge	15a6c <__assert_fail@plt+0x4c04>
   15a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a14:	cmn	r0, #1
   15a18:	bne	15a50 <__assert_fail@plt+0x4be8>
   15a1c:	b	15a20 <__assert_fail@plt+0x4bb8>
   15a20:	ldr	r0, [fp, #8]
   15a24:	add	r0, r0, #-2147483648	; 0x80000000
   15a28:	movw	r1, #0
   15a2c:	cmp	r1, r0
   15a30:	blt	15a84 <__assert_fail@plt+0x4c1c>
   15a34:	b	15a98 <__assert_fail@plt+0x4c30>
   15a38:	ldr	r0, [pc, #1676]	; 160cc <__assert_fail@plt+0x5264>
   15a3c:	ldr	r1, [fp, #8]
   15a40:	sub	r1, r1, #1
   15a44:	cmp	r0, r1
   15a48:	blt	15a84 <__assert_fail@plt+0x4c1c>
   15a4c:	b	15a98 <__assert_fail@plt+0x4c30>
   15a50:	ldr	r0, [pc, #3960]	; 169d0 <__assert_fail@plt+0x5b68>
   15a54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a58:	sdiv	r0, r0, r1
   15a5c:	ldr	r1, [fp, #8]
   15a60:	cmp	r0, r1
   15a64:	blt	15a84 <__assert_fail@plt+0x4c1c>
   15a68:	b	15a98 <__assert_fail@plt+0x4c30>
   15a6c:	ldr	r0, [pc, #1624]	; 160cc <__assert_fail@plt+0x5264>
   15a70:	ldr	r1, [fp, #8]
   15a74:	sdiv	r0, r0, r1
   15a78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a7c:	cmp	r0, r1
   15a80:	bge	15a98 <__assert_fail@plt+0x4c30>
   15a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a88:	ldr	r1, [fp, #8]
   15a8c:	mul	r0, r0, r1
   15a90:	str	r0, [fp, #-28]	; 0xffffffe4
   15a94:	b	164d0 <__assert_fail@plt+0x5668>
   15a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a9c:	ldr	r1, [fp, #8]
   15aa0:	mul	r0, r0, r1
   15aa4:	str	r0, [fp, #-28]	; 0xffffffe4
   15aa8:	b	164dc <__assert_fail@plt+0x5674>
   15aac:	ldr	r0, [fp, #8]
   15ab0:	cmp	r0, #0
   15ab4:	bge	15bc4 <__assert_fail@plt+0x4d5c>
   15ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15abc:	cmp	r0, #0
   15ac0:	bge	15b4c <__assert_fail@plt+0x4ce4>
   15ac4:	b	15ae4 <__assert_fail@plt+0x4c7c>
   15ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15acc:	ldr	r1, [fp, #8]
   15ad0:	mvn	r2, #0
   15ad4:	udiv	r1, r2, r1
   15ad8:	cmp	r0, r1
   15adc:	bcc	15c60 <__assert_fail@plt+0x4df8>
   15ae0:	b	15c74 <__assert_fail@plt+0x4e0c>
   15ae4:	b	15ae8 <__assert_fail@plt+0x4c80>
   15ae8:	ldr	r0, [pc, #1664]	; 16170 <__assert_fail@plt+0x5308>
   15aec:	ldr	r1, [fp, #8]
   15af0:	cmp	r1, r0
   15af4:	blt	15b0c <__assert_fail@plt+0x4ca4>
   15af8:	b	15b18 <__assert_fail@plt+0x4cb0>
   15afc:	ldr	r0, [fp, #8]
   15b00:	movw	r1, #0
   15b04:	cmp	r1, r0
   15b08:	bge	15b18 <__assert_fail@plt+0x4cb0>
   15b0c:	movw	r0, #1
   15b10:	str	r0, [fp, #-56]	; 0xffffffc8
   15b14:	b	15b30 <__assert_fail@plt+0x4cc8>
   15b18:	ldr	r0, [fp, #8]
   15b1c:	movw	r1, #0
   15b20:	sub	r0, r1, r0
   15b24:	mvn	r1, #0
   15b28:	udiv	r0, r1, r0
   15b2c:	str	r0, [fp, #-56]	; 0xffffffc8
   15b30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15b34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b38:	mvn	r2, #0
   15b3c:	sub	r1, r2, r1
   15b40:	cmp	r0, r1
   15b44:	bls	15c60 <__assert_fail@plt+0x4df8>
   15b48:	b	15c74 <__assert_fail@plt+0x4e0c>
   15b4c:	b	15b50 <__assert_fail@plt+0x4ce8>
   15b50:	b	15ba8 <__assert_fail@plt+0x4d40>
   15b54:	b	15ba8 <__assert_fail@plt+0x4d40>
   15b58:	ldr	r0, [fp, #8]
   15b5c:	cmn	r0, #1
   15b60:	bne	15ba8 <__assert_fail@plt+0x4d40>
   15b64:	b	15b68 <__assert_fail@plt+0x4d00>
   15b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b6c:	add	r0, r0, #0
   15b70:	movw	r1, #0
   15b74:	cmp	r1, r0
   15b78:	blt	15c60 <__assert_fail@plt+0x4df8>
   15b7c:	b	15c74 <__assert_fail@plt+0x4e0c>
   15b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b84:	movw	r1, #0
   15b88:	cmp	r1, r0
   15b8c:	bge	15c74 <__assert_fail@plt+0x4e0c>
   15b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b94:	sub	r0, r0, #1
   15b98:	mvn	r1, #0
   15b9c:	cmp	r1, r0
   15ba0:	blt	15c60 <__assert_fail@plt+0x4df8>
   15ba4:	b	15c74 <__assert_fail@plt+0x4e0c>
   15ba8:	ldr	r0, [fp, #8]
   15bac:	movw	r1, #0
   15bb0:	sdiv	r0, r1, r0
   15bb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bb8:	cmp	r0, r1
   15bbc:	blt	15c60 <__assert_fail@plt+0x4df8>
   15bc0:	b	15c74 <__assert_fail@plt+0x4e0c>
   15bc4:	ldr	r0, [fp, #8]
   15bc8:	cmp	r0, #0
   15bcc:	bne	15bd4 <__assert_fail@plt+0x4d6c>
   15bd0:	b	15c74 <__assert_fail@plt+0x4e0c>
   15bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bd8:	cmp	r0, #0
   15bdc:	bge	15c48 <__assert_fail@plt+0x4de0>
   15be0:	b	15be4 <__assert_fail@plt+0x4d7c>
   15be4:	b	15c2c <__assert_fail@plt+0x4dc4>
   15be8:	b	15c2c <__assert_fail@plt+0x4dc4>
   15bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bf0:	cmn	r0, #1
   15bf4:	bne	15c2c <__assert_fail@plt+0x4dc4>
   15bf8:	b	15bfc <__assert_fail@plt+0x4d94>
   15bfc:	ldr	r0, [fp, #8]
   15c00:	add	r0, r0, #0
   15c04:	movw	r1, #0
   15c08:	cmp	r1, r0
   15c0c:	blt	15c60 <__assert_fail@plt+0x4df8>
   15c10:	b	15c74 <__assert_fail@plt+0x4e0c>
   15c14:	ldr	r0, [fp, #8]
   15c18:	sub	r0, r0, #1
   15c1c:	mvn	r1, #0
   15c20:	cmp	r1, r0
   15c24:	blt	15c60 <__assert_fail@plt+0x4df8>
   15c28:	b	15c74 <__assert_fail@plt+0x4e0c>
   15c2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c30:	movw	r1, #0
   15c34:	sdiv	r0, r1, r0
   15c38:	ldr	r1, [fp, #8]
   15c3c:	cmp	r0, r1
   15c40:	blt	15c60 <__assert_fail@plt+0x4df8>
   15c44:	b	15c74 <__assert_fail@plt+0x4e0c>
   15c48:	ldr	r0, [fp, #8]
   15c4c:	mvn	r1, #0
   15c50:	udiv	r0, r1, r0
   15c54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c58:	cmp	r0, r1
   15c5c:	bcs	15c74 <__assert_fail@plt+0x4e0c>
   15c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c64:	ldr	r1, [fp, #8]
   15c68:	mul	r0, r0, r1
   15c6c:	str	r0, [fp, #-28]	; 0xffffffe4
   15c70:	b	164d0 <__assert_fail@plt+0x5668>
   15c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c78:	ldr	r1, [fp, #8]
   15c7c:	mul	r0, r0, r1
   15c80:	str	r0, [fp, #-28]	; 0xffffffe4
   15c84:	b	164dc <__assert_fail@plt+0x5674>
   15c88:	b	15c8c <__assert_fail@plt+0x4e24>
   15c8c:	b	15c90 <__assert_fail@plt+0x4e28>
   15c90:	ldr	r0, [fp, #8]
   15c94:	cmp	r0, #0
   15c98:	bge	15d9c <__assert_fail@plt+0x4f34>
   15c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ca0:	cmp	r0, #0
   15ca4:	bge	15d30 <__assert_fail@plt+0x4ec8>
   15ca8:	b	15cac <__assert_fail@plt+0x4e44>
   15cac:	ldr	r0, [pc, #1048]	; 160cc <__assert_fail@plt+0x5264>
   15cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cb4:	ldr	r2, [fp, #8]
   15cb8:	sdiv	r0, r0, r2
   15cbc:	cmp	r1, r0
   15cc0:	blt	15e2c <__assert_fail@plt+0x4fc4>
   15cc4:	b	15e40 <__assert_fail@plt+0x4fd8>
   15cc8:	b	15ccc <__assert_fail@plt+0x4e64>
   15ccc:	ldr	r0, [pc, #1180]	; 16170 <__assert_fail@plt+0x5308>
   15cd0:	ldr	r1, [fp, #8]
   15cd4:	cmp	r1, r0
   15cd8:	blt	15cf0 <__assert_fail@plt+0x4e88>
   15cdc:	b	15cfc <__assert_fail@plt+0x4e94>
   15ce0:	ldr	r0, [fp, #8]
   15ce4:	movw	r1, #0
   15ce8:	cmp	r1, r0
   15cec:	bge	15cfc <__assert_fail@plt+0x4e94>
   15cf0:	movw	r0, #0
   15cf4:	str	r0, [fp, #-60]	; 0xffffffc4
   15cf8:	b	15d14 <__assert_fail@plt+0x4eac>
   15cfc:	ldr	r0, [pc, #968]	; 160cc <__assert_fail@plt+0x5264>
   15d00:	ldr	r1, [fp, #8]
   15d04:	movw	r2, #0
   15d08:	sub	r1, r2, r1
   15d0c:	sdiv	r0, r0, r1
   15d10:	str	r0, [fp, #-60]	; 0xffffffc4
   15d14:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15d18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d1c:	mvn	r2, #0
   15d20:	sub	r1, r2, r1
   15d24:	cmp	r0, r1
   15d28:	ble	15e2c <__assert_fail@plt+0x4fc4>
   15d2c:	b	15e40 <__assert_fail@plt+0x4fd8>
   15d30:	ldr	r0, [fp, #8]
   15d34:	cmn	r0, #1
   15d38:	bne	15d80 <__assert_fail@plt+0x4f18>
   15d3c:	b	15d40 <__assert_fail@plt+0x4ed8>
   15d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d44:	add	r0, r0, #-2147483648	; 0x80000000
   15d48:	movw	r1, #0
   15d4c:	cmp	r1, r0
   15d50:	blt	15e2c <__assert_fail@plt+0x4fc4>
   15d54:	b	15e40 <__assert_fail@plt+0x4fd8>
   15d58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d5c:	movw	r1, #0
   15d60:	cmp	r1, r0
   15d64:	bge	15e40 <__assert_fail@plt+0x4fd8>
   15d68:	ldr	r0, [pc, #860]	; 160cc <__assert_fail@plt+0x5264>
   15d6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d70:	sub	r1, r1, #1
   15d74:	cmp	r0, r1
   15d78:	blt	15e2c <__assert_fail@plt+0x4fc4>
   15d7c:	b	15e40 <__assert_fail@plt+0x4fd8>
   15d80:	ldr	r0, [pc, #3144]	; 169d0 <__assert_fail@plt+0x5b68>
   15d84:	ldr	r1, [fp, #8]
   15d88:	sdiv	r0, r0, r1
   15d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d90:	cmp	r0, r1
   15d94:	blt	15e2c <__assert_fail@plt+0x4fc4>
   15d98:	b	15e40 <__assert_fail@plt+0x4fd8>
   15d9c:	ldr	r0, [fp, #8]
   15da0:	cmp	r0, #0
   15da4:	bne	15dac <__assert_fail@plt+0x4f44>
   15da8:	b	15e40 <__assert_fail@plt+0x4fd8>
   15dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15db0:	cmp	r0, #0
   15db4:	bge	15e14 <__assert_fail@plt+0x4fac>
   15db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dbc:	cmn	r0, #1
   15dc0:	bne	15df8 <__assert_fail@plt+0x4f90>
   15dc4:	b	15dc8 <__assert_fail@plt+0x4f60>
   15dc8:	ldr	r0, [fp, #8]
   15dcc:	add	r0, r0, #-2147483648	; 0x80000000
   15dd0:	movw	r1, #0
   15dd4:	cmp	r1, r0
   15dd8:	blt	15e2c <__assert_fail@plt+0x4fc4>
   15ddc:	b	15e40 <__assert_fail@plt+0x4fd8>
   15de0:	ldr	r0, [pc, #740]	; 160cc <__assert_fail@plt+0x5264>
   15de4:	ldr	r1, [fp, #8]
   15de8:	sub	r1, r1, #1
   15dec:	cmp	r0, r1
   15df0:	blt	15e2c <__assert_fail@plt+0x4fc4>
   15df4:	b	15e40 <__assert_fail@plt+0x4fd8>
   15df8:	ldr	r0, [pc, #3024]	; 169d0 <__assert_fail@plt+0x5b68>
   15dfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e00:	sdiv	r0, r0, r1
   15e04:	ldr	r1, [fp, #8]
   15e08:	cmp	r0, r1
   15e0c:	blt	15e2c <__assert_fail@plt+0x4fc4>
   15e10:	b	15e40 <__assert_fail@plt+0x4fd8>
   15e14:	ldr	r0, [pc, #688]	; 160cc <__assert_fail@plt+0x5264>
   15e18:	ldr	r1, [fp, #8]
   15e1c:	sdiv	r0, r0, r1
   15e20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e24:	cmp	r0, r1
   15e28:	bge	15e40 <__assert_fail@plt+0x4fd8>
   15e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e30:	ldr	r1, [fp, #8]
   15e34:	mul	r0, r0, r1
   15e38:	str	r0, [fp, #-28]	; 0xffffffe4
   15e3c:	b	164d0 <__assert_fail@plt+0x5668>
   15e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e44:	ldr	r1, [fp, #8]
   15e48:	mul	r0, r0, r1
   15e4c:	str	r0, [fp, #-28]	; 0xffffffe4
   15e50:	b	164dc <__assert_fail@plt+0x5674>
   15e54:	ldr	r0, [fp, #8]
   15e58:	cmp	r0, #0
   15e5c:	bge	15f6c <__assert_fail@plt+0x5104>
   15e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e64:	cmp	r0, #0
   15e68:	bge	15ef4 <__assert_fail@plt+0x508c>
   15e6c:	b	15e8c <__assert_fail@plt+0x5024>
   15e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e74:	ldr	r1, [fp, #8]
   15e78:	mvn	r2, #0
   15e7c:	udiv	r1, r2, r1
   15e80:	cmp	r0, r1
   15e84:	bcc	16008 <__assert_fail@plt+0x51a0>
   15e88:	b	1601c <__assert_fail@plt+0x51b4>
   15e8c:	b	15e90 <__assert_fail@plt+0x5028>
   15e90:	ldr	r0, [pc, #728]	; 16170 <__assert_fail@plt+0x5308>
   15e94:	ldr	r1, [fp, #8]
   15e98:	cmp	r1, r0
   15e9c:	blt	15eb4 <__assert_fail@plt+0x504c>
   15ea0:	b	15ec0 <__assert_fail@plt+0x5058>
   15ea4:	ldr	r0, [fp, #8]
   15ea8:	movw	r1, #0
   15eac:	cmp	r1, r0
   15eb0:	bge	15ec0 <__assert_fail@plt+0x5058>
   15eb4:	movw	r0, #1
   15eb8:	str	r0, [fp, #-64]	; 0xffffffc0
   15ebc:	b	15ed8 <__assert_fail@plt+0x5070>
   15ec0:	ldr	r0, [fp, #8]
   15ec4:	movw	r1, #0
   15ec8:	sub	r0, r1, r0
   15ecc:	mvn	r1, #0
   15ed0:	udiv	r0, r1, r0
   15ed4:	str	r0, [fp, #-64]	; 0xffffffc0
   15ed8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15edc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ee0:	mvn	r2, #0
   15ee4:	sub	r1, r2, r1
   15ee8:	cmp	r0, r1
   15eec:	bls	16008 <__assert_fail@plt+0x51a0>
   15ef0:	b	1601c <__assert_fail@plt+0x51b4>
   15ef4:	b	15ef8 <__assert_fail@plt+0x5090>
   15ef8:	b	15f50 <__assert_fail@plt+0x50e8>
   15efc:	b	15f50 <__assert_fail@plt+0x50e8>
   15f00:	ldr	r0, [fp, #8]
   15f04:	cmn	r0, #1
   15f08:	bne	15f50 <__assert_fail@plt+0x50e8>
   15f0c:	b	15f10 <__assert_fail@plt+0x50a8>
   15f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f14:	add	r0, r0, #0
   15f18:	movw	r1, #0
   15f1c:	cmp	r1, r0
   15f20:	blt	16008 <__assert_fail@plt+0x51a0>
   15f24:	b	1601c <__assert_fail@plt+0x51b4>
   15f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f2c:	movw	r1, #0
   15f30:	cmp	r1, r0
   15f34:	bge	1601c <__assert_fail@plt+0x51b4>
   15f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f3c:	sub	r0, r0, #1
   15f40:	mvn	r1, #0
   15f44:	cmp	r1, r0
   15f48:	blt	16008 <__assert_fail@plt+0x51a0>
   15f4c:	b	1601c <__assert_fail@plt+0x51b4>
   15f50:	ldr	r0, [fp, #8]
   15f54:	movw	r1, #0
   15f58:	sdiv	r0, r1, r0
   15f5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f60:	cmp	r0, r1
   15f64:	blt	16008 <__assert_fail@plt+0x51a0>
   15f68:	b	1601c <__assert_fail@plt+0x51b4>
   15f6c:	ldr	r0, [fp, #8]
   15f70:	cmp	r0, #0
   15f74:	bne	15f7c <__assert_fail@plt+0x5114>
   15f78:	b	1601c <__assert_fail@plt+0x51b4>
   15f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f80:	cmp	r0, #0
   15f84:	bge	15ff0 <__assert_fail@plt+0x5188>
   15f88:	b	15f8c <__assert_fail@plt+0x5124>
   15f8c:	b	15fd4 <__assert_fail@plt+0x516c>
   15f90:	b	15fd4 <__assert_fail@plt+0x516c>
   15f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f98:	cmn	r0, #1
   15f9c:	bne	15fd4 <__assert_fail@plt+0x516c>
   15fa0:	b	15fa4 <__assert_fail@plt+0x513c>
   15fa4:	ldr	r0, [fp, #8]
   15fa8:	add	r0, r0, #0
   15fac:	movw	r1, #0
   15fb0:	cmp	r1, r0
   15fb4:	blt	16008 <__assert_fail@plt+0x51a0>
   15fb8:	b	1601c <__assert_fail@plt+0x51b4>
   15fbc:	ldr	r0, [fp, #8]
   15fc0:	sub	r0, r0, #1
   15fc4:	mvn	r1, #0
   15fc8:	cmp	r1, r0
   15fcc:	blt	16008 <__assert_fail@plt+0x51a0>
   15fd0:	b	1601c <__assert_fail@plt+0x51b4>
   15fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fd8:	movw	r1, #0
   15fdc:	sdiv	r0, r1, r0
   15fe0:	ldr	r1, [fp, #8]
   15fe4:	cmp	r0, r1
   15fe8:	blt	16008 <__assert_fail@plt+0x51a0>
   15fec:	b	1601c <__assert_fail@plt+0x51b4>
   15ff0:	ldr	r0, [fp, #8]
   15ff4:	mvn	r1, #0
   15ff8:	udiv	r0, r1, r0
   15ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16000:	cmp	r0, r1
   16004:	bcs	1601c <__assert_fail@plt+0x51b4>
   16008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1600c:	ldr	r1, [fp, #8]
   16010:	mul	r0, r0, r1
   16014:	str	r0, [fp, #-28]	; 0xffffffe4
   16018:	b	164d0 <__assert_fail@plt+0x5668>
   1601c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16020:	ldr	r1, [fp, #8]
   16024:	mul	r0, r0, r1
   16028:	str	r0, [fp, #-28]	; 0xffffffe4
   1602c:	b	164dc <__assert_fail@plt+0x5674>
   16030:	b	16034 <__assert_fail@plt+0x51cc>
   16034:	ldr	r0, [fp, #8]
   16038:	cmp	r0, #0
   1603c:	bge	161ac <__assert_fail@plt+0x5344>
   16040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16044:	cmp	r0, #0
   16048:	bge	16124 <__assert_fail@plt+0x52bc>
   1604c:	b	16050 <__assert_fail@plt+0x51e8>
   16050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16054:	ldr	r1, [fp, #8]
   16058:	asr	r3, r1, #31
   1605c:	mvn	r2, #0
   16060:	mvn	ip, #-2147483648	; 0x80000000
   16064:	str	r0, [fp, #-68]	; 0xffffffbc
   16068:	mov	r0, r2
   1606c:	str	r1, [fp, #-72]	; 0xffffffb8
   16070:	mov	r1, ip
   16074:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16078:	bl	19ff0 <__assert_fail@plt+0x9188>
   1607c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16080:	subs	r0, r2, r0
   16084:	rscs	r1, r1, r2, asr #31
   16088:	blt	16274 <__assert_fail@plt+0x540c>
   1608c:	b	16288 <__assert_fail@plt+0x5420>
   16090:	b	16094 <__assert_fail@plt+0x522c>
   16094:	ldr	r0, [pc, #212]	; 16170 <__assert_fail@plt+0x5308>
   16098:	ldr	r1, [fp, #8]
   1609c:	cmp	r1, r0
   160a0:	blt	160b8 <__assert_fail@plt+0x5250>
   160a4:	b	160d0 <__assert_fail@plt+0x5268>
   160a8:	ldr	r0, [fp, #8]
   160ac:	movw	r1, #0
   160b0:	cmp	r1, r0
   160b4:	bge	160d0 <__assert_fail@plt+0x5268>
   160b8:	mov	r0, #0
   160bc:	mvn	r1, #0
   160c0:	str	r1, [fp, #-76]	; 0xffffffb4
   160c4:	str	r0, [fp, #-80]	; 0xffffffb0
   160c8:	b	16104 <__assert_fail@plt+0x529c>
   160cc:	svcvc	0x00ffffff
   160d0:	ldr	r0, [fp, #8]
   160d4:	rsb	r0, r0, #0
   160d8:	asr	r3, r0, #31
   160dc:	mvn	r1, #0
   160e0:	mvn	r2, #-2147483648	; 0x80000000
   160e4:	str	r0, [fp, #-84]	; 0xffffffac
   160e8:	mov	r0, r1
   160ec:	mov	r1, r2
   160f0:	ldr	r2, [fp, #-84]	; 0xffffffac
   160f4:	bl	19ff0 <__assert_fail@plt+0x9188>
   160f8:	str	r0, [fp, #-76]	; 0xffffffb4
   160fc:	str	r1, [fp, #-80]	; 0xffffffb0
   16100:	b	16104 <__assert_fail@plt+0x529c>
   16104:	ldr	r0, [fp, #-80]	; 0xffffffb0
   16108:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1610c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16110:	mvn	r2, r2
   16114:	subs	r1, r2, r1
   16118:	rscs	r0, r0, r2, asr #31
   1611c:	bge	16274 <__assert_fail@plt+0x540c>
   16120:	b	16288 <__assert_fail@plt+0x5420>
   16124:	ldr	r0, [fp, #8]
   16128:	cmn	r0, #1
   1612c:	bne	16174 <__assert_fail@plt+0x530c>
   16130:	b	16134 <__assert_fail@plt+0x52cc>
   16134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16138:	mov	r1, #-2147483648	; 0x80000000
   1613c:	add	r1, r1, r0, asr #31
   16140:	rsbs	r0, r0, #0
   16144:	rscs	r1, r1, #0
   16148:	blt	16274 <__assert_fail@plt+0x540c>
   1614c:	b	16288 <__assert_fail@plt+0x5420>
   16150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16154:	movw	r1, #0
   16158:	cmp	r1, r0
   1615c:	bge	16288 <__assert_fail@plt+0x5420>
   16160:	mov	r0, #0
   16164:	cmp	r0, #0
   16168:	bne	16274 <__assert_fail@plt+0x540c>
   1616c:	b	16288 <__assert_fail@plt+0x5420>
   16170:	andhi	r0, r0, r1
   16174:	ldr	r0, [fp, #8]
   16178:	asr	r3, r0, #31
   1617c:	mov	r1, #0
   16180:	mov	r2, #-2147483648	; 0x80000000
   16184:	str	r0, [fp, #-88]	; 0xffffffa8
   16188:	mov	r0, r1
   1618c:	mov	r1, r2
   16190:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16194:	bl	19ff0 <__assert_fail@plt+0x9188>
   16198:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1619c:	subs	r0, r0, r2
   161a0:	sbcs	r1, r1, r2, asr #31
   161a4:	blt	16274 <__assert_fail@plt+0x540c>
   161a8:	b	16288 <__assert_fail@plt+0x5420>
   161ac:	ldr	r0, [fp, #8]
   161b0:	cmp	r0, #0
   161b4:	bne	161bc <__assert_fail@plt+0x5354>
   161b8:	b	16288 <__assert_fail@plt+0x5420>
   161bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161c0:	cmp	r0, #0
   161c4:	bge	1623c <__assert_fail@plt+0x53d4>
   161c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161cc:	cmn	r0, #1
   161d0:	bne	16204 <__assert_fail@plt+0x539c>
   161d4:	b	161d8 <__assert_fail@plt+0x5370>
   161d8:	ldr	r0, [fp, #8]
   161dc:	mov	r1, #-2147483648	; 0x80000000
   161e0:	add	r1, r1, r0, asr #31
   161e4:	rsbs	r0, r0, #0
   161e8:	rscs	r1, r1, #0
   161ec:	blt	16274 <__assert_fail@plt+0x540c>
   161f0:	b	16288 <__assert_fail@plt+0x5420>
   161f4:	mov	r0, #0
   161f8:	cmp	r0, #0
   161fc:	bne	16274 <__assert_fail@plt+0x540c>
   16200:	b	16288 <__assert_fail@plt+0x5420>
   16204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16208:	asr	r3, r0, #31
   1620c:	mov	r1, #0
   16210:	mov	r2, #-2147483648	; 0x80000000
   16214:	str	r0, [fp, #-92]	; 0xffffffa4
   16218:	mov	r0, r1
   1621c:	mov	r1, r2
   16220:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16224:	bl	19ff0 <__assert_fail@plt+0x9188>
   16228:	ldr	r2, [fp, #8]
   1622c:	subs	r0, r0, r2
   16230:	sbcs	r1, r1, r2, asr #31
   16234:	blt	16274 <__assert_fail@plt+0x540c>
   16238:	b	16288 <__assert_fail@plt+0x5420>
   1623c:	ldr	r0, [fp, #8]
   16240:	asr	r3, r0, #31
   16244:	mvn	r1, #0
   16248:	mvn	r2, #-2147483648	; 0x80000000
   1624c:	str	r0, [fp, #-96]	; 0xffffffa0
   16250:	mov	r0, r1
   16254:	mov	r1, r2
   16258:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1625c:	bl	19ff0 <__assert_fail@plt+0x9188>
   16260:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16264:	subs	r0, r0, r2
   16268:	sbcs	r1, r1, r2, asr #31
   1626c:	bge	16288 <__assert_fail@plt+0x5420>
   16270:	b	16274 <__assert_fail@plt+0x540c>
   16274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16278:	ldr	r1, [fp, #8]
   1627c:	mul	r0, r0, r1
   16280:	str	r0, [fp, #-28]	; 0xffffffe4
   16284:	b	164d0 <__assert_fail@plt+0x5668>
   16288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1628c:	ldr	r1, [fp, #8]
   16290:	mul	r0, r0, r1
   16294:	str	r0, [fp, #-28]	; 0xffffffe4
   16298:	b	164dc <__assert_fail@plt+0x5674>
   1629c:	ldr	r0, [fp, #8]
   162a0:	cmp	r0, #0
   162a4:	bge	163f4 <__assert_fail@plt+0x558c>
   162a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162ac:	cmp	r0, #0
   162b0:	bge	1637c <__assert_fail@plt+0x5514>
   162b4:	b	162f4 <__assert_fail@plt+0x548c>
   162b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162bc:	ldr	r1, [fp, #8]
   162c0:	asr	r3, r1, #31
   162c4:	mvn	r2, #0
   162c8:	str	r0, [fp, #-100]	; 0xffffff9c
   162cc:	mov	r0, r2
   162d0:	str	r1, [fp, #-104]	; 0xffffff98
   162d4:	mov	r1, r2
   162d8:	ldr	r2, [fp, #-104]	; 0xffffff98
   162dc:	bl	1a0c4 <__assert_fail@plt+0x925c>
   162e0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   162e4:	subs	r0, r2, r0
   162e8:	rscs	r1, r1, r2, asr #31
   162ec:	bcc	164a8 <__assert_fail@plt+0x5640>
   162f0:	b	164bc <__assert_fail@plt+0x5654>
   162f4:	b	162f8 <__assert_fail@plt+0x5490>
   162f8:	ldr	r0, [pc, #-400]	; 16170 <__assert_fail@plt+0x5308>
   162fc:	ldr	r1, [fp, #8]
   16300:	cmp	r1, r0
   16304:	blt	1631c <__assert_fail@plt+0x54b4>
   16308:	b	16330 <__assert_fail@plt+0x54c8>
   1630c:	ldr	r0, [fp, #8]
   16310:	movw	r1, #0
   16314:	cmp	r1, r0
   16318:	bge	16330 <__assert_fail@plt+0x54c8>
   1631c:	mov	r0, #1
   16320:	mvn	r1, #0
   16324:	str	r1, [sp, #108]	; 0x6c
   16328:	str	r0, [sp, #104]	; 0x68
   1632c:	b	1635c <__assert_fail@plt+0x54f4>
   16330:	ldr	r0, [fp, #8]
   16334:	rsb	r0, r0, #0
   16338:	asr	r3, r0, #31
   1633c:	mvn	r1, #0
   16340:	str	r0, [sp, #100]	; 0x64
   16344:	mov	r0, r1
   16348:	ldr	r2, [sp, #100]	; 0x64
   1634c:	bl	1a0c4 <__assert_fail@plt+0x925c>
   16350:	str	r0, [sp, #108]	; 0x6c
   16354:	str	r1, [sp, #104]	; 0x68
   16358:	b	1635c <__assert_fail@plt+0x54f4>
   1635c:	ldr	r0, [sp, #104]	; 0x68
   16360:	ldr	r1, [sp, #108]	; 0x6c
   16364:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16368:	mvn	r2, r2
   1636c:	subs	r1, r2, r1
   16370:	rscs	r0, r0, r2, asr #31
   16374:	bcs	164a8 <__assert_fail@plt+0x5640>
   16378:	b	164bc <__assert_fail@plt+0x5654>
   1637c:	b	16380 <__assert_fail@plt+0x5518>
   16380:	b	163d8 <__assert_fail@plt+0x5570>
   16384:	b	163d8 <__assert_fail@plt+0x5570>
   16388:	ldr	r0, [fp, #8]
   1638c:	cmn	r0, #1
   16390:	bne	163d8 <__assert_fail@plt+0x5570>
   16394:	b	16398 <__assert_fail@plt+0x5530>
   16398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1639c:	add	r0, r0, #0
   163a0:	movw	r1, #0
   163a4:	cmp	r1, r0
   163a8:	blt	164a8 <__assert_fail@plt+0x5640>
   163ac:	b	164bc <__assert_fail@plt+0x5654>
   163b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163b4:	movw	r1, #0
   163b8:	cmp	r1, r0
   163bc:	bge	164bc <__assert_fail@plt+0x5654>
   163c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163c4:	sub	r0, r0, #1
   163c8:	mvn	r1, #0
   163cc:	cmp	r1, r0
   163d0:	blt	164a8 <__assert_fail@plt+0x5640>
   163d4:	b	164bc <__assert_fail@plt+0x5654>
   163d8:	ldr	r0, [fp, #8]
   163dc:	movw	r1, #0
   163e0:	sdiv	r0, r1, r0
   163e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   163e8:	cmp	r0, r1
   163ec:	blt	164a8 <__assert_fail@plt+0x5640>
   163f0:	b	164bc <__assert_fail@plt+0x5654>
   163f4:	ldr	r0, [fp, #8]
   163f8:	cmp	r0, #0
   163fc:	bne	16404 <__assert_fail@plt+0x559c>
   16400:	b	164bc <__assert_fail@plt+0x5654>
   16404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16408:	cmp	r0, #0
   1640c:	bge	16478 <__assert_fail@plt+0x5610>
   16410:	b	16414 <__assert_fail@plt+0x55ac>
   16414:	b	1645c <__assert_fail@plt+0x55f4>
   16418:	b	1645c <__assert_fail@plt+0x55f4>
   1641c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16420:	cmn	r0, #1
   16424:	bne	1645c <__assert_fail@plt+0x55f4>
   16428:	b	1642c <__assert_fail@plt+0x55c4>
   1642c:	ldr	r0, [fp, #8]
   16430:	add	r0, r0, #0
   16434:	movw	r1, #0
   16438:	cmp	r1, r0
   1643c:	blt	164a8 <__assert_fail@plt+0x5640>
   16440:	b	164bc <__assert_fail@plt+0x5654>
   16444:	ldr	r0, [fp, #8]
   16448:	sub	r0, r0, #1
   1644c:	mvn	r1, #0
   16450:	cmp	r1, r0
   16454:	blt	164a8 <__assert_fail@plt+0x5640>
   16458:	b	164bc <__assert_fail@plt+0x5654>
   1645c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16460:	movw	r1, #0
   16464:	sdiv	r0, r1, r0
   16468:	ldr	r1, [fp, #8]
   1646c:	cmp	r0, r1
   16470:	blt	164a8 <__assert_fail@plt+0x5640>
   16474:	b	164bc <__assert_fail@plt+0x5654>
   16478:	ldr	r0, [fp, #8]
   1647c:	asr	r3, r0, #31
   16480:	mvn	r1, #0
   16484:	str	r0, [sp, #96]	; 0x60
   16488:	mov	r0, r1
   1648c:	ldr	r2, [sp, #96]	; 0x60
   16490:	bl	1a0c4 <__assert_fail@plt+0x925c>
   16494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16498:	subs	r0, r0, r2
   1649c:	sbcs	r1, r1, r2, asr #31
   164a0:	bcs	164bc <__assert_fail@plt+0x5654>
   164a4:	b	164a8 <__assert_fail@plt+0x5640>
   164a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164ac:	ldr	r1, [fp, #8]
   164b0:	mul	r0, r0, r1
   164b4:	str	r0, [fp, #-28]	; 0xffffffe4
   164b8:	b	164d0 <__assert_fail@plt+0x5668>
   164bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164c0:	ldr	r1, [fp, #8]
   164c4:	mul	r0, r0, r1
   164c8:	str	r0, [fp, #-28]	; 0xffffffe4
   164cc:	b	164dc <__assert_fail@plt+0x5674>
   164d0:	ldr	r0, [pc, #-1036]	; 160cc <__assert_fail@plt+0x5264>
   164d4:	str	r0, [sp, #92]	; 0x5c
   164d8:	b	164fc <__assert_fail@plt+0x5694>
   164dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   164e0:	cmp	r0, #64	; 0x40
   164e4:	movw	r0, #0
   164e8:	movlt	r0, #1
   164ec:	tst	r0, #1
   164f0:	movw	r0, #64	; 0x40
   164f4:	moveq	r0, #0
   164f8:	str	r0, [sp, #92]	; 0x5c
   164fc:	ldr	r0, [sp, #92]	; 0x5c
   16500:	str	r0, [fp, #-32]	; 0xffffffe0
   16504:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16508:	cmp	r0, #0
   1650c:	beq	1653c <__assert_fail@plt+0x56d4>
   16510:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16514:	ldr	r1, [fp, #8]
   16518:	sdiv	r0, r0, r1
   1651c:	str	r0, [fp, #-24]	; 0xffffffe8
   16520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16524:	mov	r1, r0
   16528:	ldr	r2, [fp, #8]
   1652c:	sdiv	r3, r0, r2
   16530:	mls	r0, r3, r2, r0
   16534:	sub	r0, r1, r0
   16538:	str	r0, [fp, #-28]	; 0xffffffe4
   1653c:	ldr	r0, [fp, #-4]
   16540:	movw	r1, #0
   16544:	cmp	r0, r1
   16548:	bne	16558 <__assert_fail@plt+0x56f0>
   1654c:	ldr	r0, [fp, #-8]
   16550:	movw	r1, #0
   16554:	str	r1, [r0]
   16558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1655c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16560:	sub	r0, r0, r1
   16564:	ldr	r1, [fp, #-12]
   16568:	cmp	r0, r1
   1656c:	bge	17958 <__assert_fail@plt+0x6af0>
   16570:	ldr	r0, [fp, #-20]	; 0xffffffec
   16574:	ldr	r1, [fp, #-12]
   16578:	add	r1, r0, r1
   1657c:	mov	r2, #1
   16580:	cmp	r1, r0
   16584:	movwvc	r2, #0
   16588:	str	r1, [fp, #-24]	; 0xffffffe8
   1658c:	tst	r2, #1
   16590:	bne	17954 <__assert_fail@plt+0x6aec>
   16594:	ldr	r0, [fp, #-16]
   16598:	movw	r1, #0
   1659c:	cmp	r1, r0
   165a0:	bgt	165b4 <__assert_fail@plt+0x574c>
   165a4:	ldr	r0, [fp, #-16]
   165a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165ac:	cmp	r0, r1
   165b0:	blt	17954 <__assert_fail@plt+0x6aec>
   165b4:	b	16990 <__assert_fail@plt+0x5b28>
   165b8:			; <UNDEFINED> instruction: 0xffff8000
   165bc:	b	165c0 <__assert_fail@plt+0x5758>
   165c0:	ldr	r0, [fp, #8]
   165c4:	cmp	r0, #0
   165c8:	bge	166dc <__assert_fail@plt+0x5874>
   165cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165d0:	cmp	r0, #0
   165d4:	bge	16660 <__assert_fail@plt+0x57f8>
   165d8:	b	165dc <__assert_fail@plt+0x5774>
   165dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165e0:	ldr	r1, [fp, #8]
   165e4:	movw	r2, #127	; 0x7f
   165e8:	sdiv	r1, r2, r1
   165ec:	cmp	r0, r1
   165f0:	blt	1677c <__assert_fail@plt+0x5914>
   165f4:	b	16794 <__assert_fail@plt+0x592c>
   165f8:	b	165fc <__assert_fail@plt+0x5794>
   165fc:	ldr	r0, [pc, #-1172]	; 16170 <__assert_fail@plt+0x5308>
   16600:	ldr	r1, [fp, #8]
   16604:	cmp	r1, r0
   16608:	blt	16620 <__assert_fail@plt+0x57b8>
   1660c:	b	1662c <__assert_fail@plt+0x57c4>
   16610:	ldr	r0, [fp, #8]
   16614:	movw	r1, #0
   16618:	cmp	r1, r0
   1661c:	bge	1662c <__assert_fail@plt+0x57c4>
   16620:	movw	r0, #0
   16624:	str	r0, [sp, #88]	; 0x58
   16628:	b	16644 <__assert_fail@plt+0x57dc>
   1662c:	ldr	r0, [fp, #8]
   16630:	movw	r1, #0
   16634:	sub	r0, r1, r0
   16638:	movw	r1, #127	; 0x7f
   1663c:	sdiv	r0, r1, r0
   16640:	str	r0, [sp, #88]	; 0x58
   16644:	ldr	r0, [sp, #88]	; 0x58
   16648:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1664c:	mvn	r2, #0
   16650:	sub	r1, r2, r1
   16654:	cmp	r0, r1
   16658:	ble	1677c <__assert_fail@plt+0x5914>
   1665c:	b	16794 <__assert_fail@plt+0x592c>
   16660:	b	16664 <__assert_fail@plt+0x57fc>
   16664:	b	166c0 <__assert_fail@plt+0x5858>
   16668:	b	166c0 <__assert_fail@plt+0x5858>
   1666c:	ldr	r0, [fp, #8]
   16670:	cmn	r0, #1
   16674:	bne	166c0 <__assert_fail@plt+0x5858>
   16678:	b	1667c <__assert_fail@plt+0x5814>
   1667c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16680:	mvn	r1, #127	; 0x7f
   16684:	add	r0, r0, r1
   16688:	movw	r1, #0
   1668c:	cmp	r1, r0
   16690:	blt	1677c <__assert_fail@plt+0x5914>
   16694:	b	16794 <__assert_fail@plt+0x592c>
   16698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1669c:	movw	r1, #0
   166a0:	cmp	r1, r0
   166a4:	bge	16794 <__assert_fail@plt+0x592c>
   166a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166ac:	sub	r0, r0, #1
   166b0:	movw	r1, #127	; 0x7f
   166b4:	cmp	r1, r0
   166b8:	blt	1677c <__assert_fail@plt+0x5914>
   166bc:	b	16794 <__assert_fail@plt+0x592c>
   166c0:	ldr	r0, [fp, #8]
   166c4:	mvn	r1, #127	; 0x7f
   166c8:	sdiv	r0, r1, r0
   166cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166d0:	cmp	r0, r1
   166d4:	blt	1677c <__assert_fail@plt+0x5914>
   166d8:	b	16794 <__assert_fail@plt+0x592c>
   166dc:	ldr	r0, [fp, #8]
   166e0:	cmp	r0, #0
   166e4:	bne	166ec <__assert_fail@plt+0x5884>
   166e8:	b	16794 <__assert_fail@plt+0x592c>
   166ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166f0:	cmp	r0, #0
   166f4:	bge	16764 <__assert_fail@plt+0x58fc>
   166f8:	b	166fc <__assert_fail@plt+0x5894>
   166fc:	b	16748 <__assert_fail@plt+0x58e0>
   16700:	b	16748 <__assert_fail@plt+0x58e0>
   16704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16708:	cmn	r0, #1
   1670c:	bne	16748 <__assert_fail@plt+0x58e0>
   16710:	b	16714 <__assert_fail@plt+0x58ac>
   16714:	ldr	r0, [fp, #8]
   16718:	mvn	r1, #127	; 0x7f
   1671c:	add	r0, r0, r1
   16720:	movw	r1, #0
   16724:	cmp	r1, r0
   16728:	blt	1677c <__assert_fail@plt+0x5914>
   1672c:	b	16794 <__assert_fail@plt+0x592c>
   16730:	ldr	r0, [fp, #8]
   16734:	sub	r0, r0, #1
   16738:	movw	r1, #127	; 0x7f
   1673c:	cmp	r1, r0
   16740:	blt	1677c <__assert_fail@plt+0x5914>
   16744:	b	16794 <__assert_fail@plt+0x592c>
   16748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1674c:	mvn	r1, #127	; 0x7f
   16750:	sdiv	r0, r1, r0
   16754:	ldr	r1, [fp, #8]
   16758:	cmp	r0, r1
   1675c:	blt	1677c <__assert_fail@plt+0x5914>
   16760:	b	16794 <__assert_fail@plt+0x592c>
   16764:	ldr	r0, [fp, #8]
   16768:	movw	r1, #127	; 0x7f
   1676c:	sdiv	r0, r1, r0
   16770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16774:	cmp	r0, r1
   16778:	bge	16794 <__assert_fail@plt+0x592c>
   1677c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16780:	ldr	r1, [fp, #8]
   16784:	mul	r0, r0, r1
   16788:	sxtb	r0, r0
   1678c:	str	r0, [fp, #-28]	; 0xffffffe4
   16790:	b	17954 <__assert_fail@plt+0x6aec>
   16794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16798:	ldr	r1, [fp, #8]
   1679c:	mul	r0, r0, r1
   167a0:	sxtb	r0, r0
   167a4:	str	r0, [fp, #-28]	; 0xffffffe4
   167a8:	b	17958 <__assert_fail@plt+0x6af0>
   167ac:	ldr	r0, [fp, #8]
   167b0:	cmp	r0, #0
   167b4:	bge	168c4 <__assert_fail@plt+0x5a5c>
   167b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167bc:	cmp	r0, #0
   167c0:	bge	1684c <__assert_fail@plt+0x59e4>
   167c4:	b	167c8 <__assert_fail@plt+0x5960>
   167c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167cc:	ldr	r1, [fp, #8]
   167d0:	movw	r2, #255	; 0xff
   167d4:	sdiv	r1, r2, r1
   167d8:	cmp	r0, r1
   167dc:	blt	16960 <__assert_fail@plt+0x5af8>
   167e0:	b	16978 <__assert_fail@plt+0x5b10>
   167e4:	b	167e8 <__assert_fail@plt+0x5980>
   167e8:	ldr	r0, [pc, #-1664]	; 16170 <__assert_fail@plt+0x5308>
   167ec:	ldr	r1, [fp, #8]
   167f0:	cmp	r1, r0
   167f4:	blt	1680c <__assert_fail@plt+0x59a4>
   167f8:	b	16818 <__assert_fail@plt+0x59b0>
   167fc:	ldr	r0, [fp, #8]
   16800:	movw	r1, #0
   16804:	cmp	r1, r0
   16808:	bge	16818 <__assert_fail@plt+0x59b0>
   1680c:	movw	r0, #0
   16810:	str	r0, [sp, #84]	; 0x54
   16814:	b	16830 <__assert_fail@plt+0x59c8>
   16818:	ldr	r0, [fp, #8]
   1681c:	movw	r1, #0
   16820:	sub	r0, r1, r0
   16824:	movw	r1, #255	; 0xff
   16828:	sdiv	r0, r1, r0
   1682c:	str	r0, [sp, #84]	; 0x54
   16830:	ldr	r0, [sp, #84]	; 0x54
   16834:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16838:	mvn	r2, #0
   1683c:	sub	r1, r2, r1
   16840:	cmp	r0, r1
   16844:	ble	16960 <__assert_fail@plt+0x5af8>
   16848:	b	16978 <__assert_fail@plt+0x5b10>
   1684c:	b	16850 <__assert_fail@plt+0x59e8>
   16850:	b	168a8 <__assert_fail@plt+0x5a40>
   16854:	b	168a8 <__assert_fail@plt+0x5a40>
   16858:	ldr	r0, [fp, #8]
   1685c:	cmn	r0, #1
   16860:	bne	168a8 <__assert_fail@plt+0x5a40>
   16864:	b	16868 <__assert_fail@plt+0x5a00>
   16868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1686c:	add	r0, r0, #0
   16870:	movw	r1, #0
   16874:	cmp	r1, r0
   16878:	blt	16960 <__assert_fail@plt+0x5af8>
   1687c:	b	16978 <__assert_fail@plt+0x5b10>
   16880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16884:	movw	r1, #0
   16888:	cmp	r1, r0
   1688c:	bge	16978 <__assert_fail@plt+0x5b10>
   16890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16894:	sub	r0, r0, #1
   16898:	mvn	r1, #0
   1689c:	cmp	r1, r0
   168a0:	blt	16960 <__assert_fail@plt+0x5af8>
   168a4:	b	16978 <__assert_fail@plt+0x5b10>
   168a8:	ldr	r0, [fp, #8]
   168ac:	movw	r1, #0
   168b0:	sdiv	r0, r1, r0
   168b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168b8:	cmp	r0, r1
   168bc:	blt	16960 <__assert_fail@plt+0x5af8>
   168c0:	b	16978 <__assert_fail@plt+0x5b10>
   168c4:	ldr	r0, [fp, #8]
   168c8:	cmp	r0, #0
   168cc:	bne	168d4 <__assert_fail@plt+0x5a6c>
   168d0:	b	16978 <__assert_fail@plt+0x5b10>
   168d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168d8:	cmp	r0, #0
   168dc:	bge	16948 <__assert_fail@plt+0x5ae0>
   168e0:	b	168e4 <__assert_fail@plt+0x5a7c>
   168e4:	b	1692c <__assert_fail@plt+0x5ac4>
   168e8:	b	1692c <__assert_fail@plt+0x5ac4>
   168ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168f0:	cmn	r0, #1
   168f4:	bne	1692c <__assert_fail@plt+0x5ac4>
   168f8:	b	168fc <__assert_fail@plt+0x5a94>
   168fc:	ldr	r0, [fp, #8]
   16900:	add	r0, r0, #0
   16904:	movw	r1, #0
   16908:	cmp	r1, r0
   1690c:	blt	16960 <__assert_fail@plt+0x5af8>
   16910:	b	16978 <__assert_fail@plt+0x5b10>
   16914:	ldr	r0, [fp, #8]
   16918:	sub	r0, r0, #1
   1691c:	mvn	r1, #0
   16920:	cmp	r1, r0
   16924:	blt	16960 <__assert_fail@plt+0x5af8>
   16928:	b	16978 <__assert_fail@plt+0x5b10>
   1692c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16930:	movw	r1, #0
   16934:	sdiv	r0, r1, r0
   16938:	ldr	r1, [fp, #8]
   1693c:	cmp	r0, r1
   16940:	blt	16960 <__assert_fail@plt+0x5af8>
   16944:	b	16978 <__assert_fail@plt+0x5b10>
   16948:	ldr	r0, [fp, #8]
   1694c:	movw	r1, #255	; 0xff
   16950:	sdiv	r0, r1, r0
   16954:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16958:	cmp	r0, r1
   1695c:	bge	16978 <__assert_fail@plt+0x5b10>
   16960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16964:	ldr	r1, [fp, #8]
   16968:	mul	r0, r0, r1
   1696c:	and	r0, r0, #255	; 0xff
   16970:	str	r0, [fp, #-28]	; 0xffffffe4
   16974:	b	17954 <__assert_fail@plt+0x6aec>
   16978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1697c:	ldr	r1, [fp, #8]
   16980:	mul	r0, r0, r1
   16984:	and	r0, r0, #255	; 0xff
   16988:	str	r0, [fp, #-28]	; 0xffffffe4
   1698c:	b	17958 <__assert_fail@plt+0x6af0>
   16990:	b	16d6c <__assert_fail@plt+0x5f04>
   16994:	b	16998 <__assert_fail@plt+0x5b30>
   16998:	ldr	r0, [fp, #8]
   1699c:	cmp	r0, #0
   169a0:	bge	16ab8 <__assert_fail@plt+0x5c50>
   169a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169a8:	cmp	r0, #0
   169ac:	bge	16a3c <__assert_fail@plt+0x5bd4>
   169b0:	b	169b4 <__assert_fail@plt+0x5b4c>
   169b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169b8:	ldr	r1, [fp, #8]
   169bc:	movw	r2, #32767	; 0x7fff
   169c0:	sdiv	r1, r2, r1
   169c4:	cmp	r0, r1
   169c8:	blt	16b58 <__assert_fail@plt+0x5cf0>
   169cc:	b	16b70 <__assert_fail@plt+0x5d08>
   169d0:	andhi	r0, r0, r0
   169d4:	b	169d8 <__assert_fail@plt+0x5b70>
   169d8:	ldr	r0, [pc, #4004]	; 17984 <__assert_fail@plt+0x6b1c>
   169dc:	ldr	r1, [fp, #8]
   169e0:	cmp	r1, r0
   169e4:	blt	169fc <__assert_fail@plt+0x5b94>
   169e8:	b	16a08 <__assert_fail@plt+0x5ba0>
   169ec:	ldr	r0, [fp, #8]
   169f0:	movw	r1, #0
   169f4:	cmp	r1, r0
   169f8:	bge	16a08 <__assert_fail@plt+0x5ba0>
   169fc:	movw	r0, #0
   16a00:	str	r0, [sp, #80]	; 0x50
   16a04:	b	16a20 <__assert_fail@plt+0x5bb8>
   16a08:	ldr	r0, [fp, #8]
   16a0c:	movw	r1, #0
   16a10:	sub	r0, r1, r0
   16a14:	movw	r1, #32767	; 0x7fff
   16a18:	sdiv	r0, r1, r0
   16a1c:	str	r0, [sp, #80]	; 0x50
   16a20:	ldr	r0, [sp, #80]	; 0x50
   16a24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a28:	mvn	r2, #0
   16a2c:	sub	r1, r2, r1
   16a30:	cmp	r0, r1
   16a34:	ble	16b58 <__assert_fail@plt+0x5cf0>
   16a38:	b	16b70 <__assert_fail@plt+0x5d08>
   16a3c:	b	16a40 <__assert_fail@plt+0x5bd8>
   16a40:	b	16a9c <__assert_fail@plt+0x5c34>
   16a44:	b	16a9c <__assert_fail@plt+0x5c34>
   16a48:	ldr	r0, [fp, #8]
   16a4c:	cmn	r0, #1
   16a50:	bne	16a9c <__assert_fail@plt+0x5c34>
   16a54:	b	16a58 <__assert_fail@plt+0x5bf0>
   16a58:	ldr	r0, [pc, #3884]	; 1798c <__assert_fail@plt+0x6b24>
   16a5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a60:	add	r0, r1, r0
   16a64:	movw	r1, #0
   16a68:	cmp	r1, r0
   16a6c:	blt	16b58 <__assert_fail@plt+0x5cf0>
   16a70:	b	16b70 <__assert_fail@plt+0x5d08>
   16a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a78:	movw	r1, #0
   16a7c:	cmp	r1, r0
   16a80:	bge	16b70 <__assert_fail@plt+0x5d08>
   16a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a88:	sub	r0, r0, #1
   16a8c:	movw	r1, #32767	; 0x7fff
   16a90:	cmp	r1, r0
   16a94:	blt	16b58 <__assert_fail@plt+0x5cf0>
   16a98:	b	16b70 <__assert_fail@plt+0x5d08>
   16a9c:	ldr	r0, [pc, #3816]	; 1798c <__assert_fail@plt+0x6b24>
   16aa0:	ldr	r1, [fp, #8]
   16aa4:	sdiv	r0, r0, r1
   16aa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16aac:	cmp	r0, r1
   16ab0:	blt	16b58 <__assert_fail@plt+0x5cf0>
   16ab4:	b	16b70 <__assert_fail@plt+0x5d08>
   16ab8:	ldr	r0, [fp, #8]
   16abc:	cmp	r0, #0
   16ac0:	bne	16ac8 <__assert_fail@plt+0x5c60>
   16ac4:	b	16b70 <__assert_fail@plt+0x5d08>
   16ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16acc:	cmp	r0, #0
   16ad0:	bge	16b40 <__assert_fail@plt+0x5cd8>
   16ad4:	b	16ad8 <__assert_fail@plt+0x5c70>
   16ad8:	b	16b24 <__assert_fail@plt+0x5cbc>
   16adc:	b	16b24 <__assert_fail@plt+0x5cbc>
   16ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ae4:	cmn	r0, #1
   16ae8:	bne	16b24 <__assert_fail@plt+0x5cbc>
   16aec:	b	16af0 <__assert_fail@plt+0x5c88>
   16af0:	ldr	r0, [pc, #3732]	; 1798c <__assert_fail@plt+0x6b24>
   16af4:	ldr	r1, [fp, #8]
   16af8:	add	r0, r1, r0
   16afc:	movw	r1, #0
   16b00:	cmp	r1, r0
   16b04:	blt	16b58 <__assert_fail@plt+0x5cf0>
   16b08:	b	16b70 <__assert_fail@plt+0x5d08>
   16b0c:	ldr	r0, [fp, #8]
   16b10:	sub	r0, r0, #1
   16b14:	movw	r1, #32767	; 0x7fff
   16b18:	cmp	r1, r0
   16b1c:	blt	16b58 <__assert_fail@plt+0x5cf0>
   16b20:	b	16b70 <__assert_fail@plt+0x5d08>
   16b24:	ldr	r0, [pc, #3680]	; 1798c <__assert_fail@plt+0x6b24>
   16b28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b2c:	sdiv	r0, r0, r1
   16b30:	ldr	r1, [fp, #8]
   16b34:	cmp	r0, r1
   16b38:	blt	16b58 <__assert_fail@plt+0x5cf0>
   16b3c:	b	16b70 <__assert_fail@plt+0x5d08>
   16b40:	ldr	r0, [fp, #8]
   16b44:	movw	r1, #32767	; 0x7fff
   16b48:	sdiv	r0, r1, r0
   16b4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b50:	cmp	r0, r1
   16b54:	bge	16b70 <__assert_fail@plt+0x5d08>
   16b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b5c:	ldr	r1, [fp, #8]
   16b60:	mul	r0, r0, r1
   16b64:	sxth	r0, r0
   16b68:	str	r0, [fp, #-28]	; 0xffffffe4
   16b6c:	b	17954 <__assert_fail@plt+0x6aec>
   16b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b74:	ldr	r1, [fp, #8]
   16b78:	mul	r0, r0, r1
   16b7c:	sxth	r0, r0
   16b80:	str	r0, [fp, #-28]	; 0xffffffe4
   16b84:	b	17958 <__assert_fail@plt+0x6af0>
   16b88:	ldr	r0, [fp, #8]
   16b8c:	cmp	r0, #0
   16b90:	bge	16ca0 <__assert_fail@plt+0x5e38>
   16b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b98:	cmp	r0, #0
   16b9c:	bge	16c28 <__assert_fail@plt+0x5dc0>
   16ba0:	b	16ba4 <__assert_fail@plt+0x5d3c>
   16ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ba8:	ldr	r1, [fp, #8]
   16bac:	movw	r2, #65535	; 0xffff
   16bb0:	sdiv	r1, r2, r1
   16bb4:	cmp	r0, r1
   16bb8:	blt	16d3c <__assert_fail@plt+0x5ed4>
   16bbc:	b	16d54 <__assert_fail@plt+0x5eec>
   16bc0:	b	16bc4 <__assert_fail@plt+0x5d5c>
   16bc4:	ldr	r0, [pc, #3512]	; 17984 <__assert_fail@plt+0x6b1c>
   16bc8:	ldr	r1, [fp, #8]
   16bcc:	cmp	r1, r0
   16bd0:	blt	16be8 <__assert_fail@plt+0x5d80>
   16bd4:	b	16bf4 <__assert_fail@plt+0x5d8c>
   16bd8:	ldr	r0, [fp, #8]
   16bdc:	movw	r1, #0
   16be0:	cmp	r1, r0
   16be4:	bge	16bf4 <__assert_fail@plt+0x5d8c>
   16be8:	movw	r0, #0
   16bec:	str	r0, [sp, #76]	; 0x4c
   16bf0:	b	16c0c <__assert_fail@plt+0x5da4>
   16bf4:	ldr	r0, [fp, #8]
   16bf8:	movw	r1, #0
   16bfc:	sub	r0, r1, r0
   16c00:	movw	r1, #65535	; 0xffff
   16c04:	sdiv	r0, r1, r0
   16c08:	str	r0, [sp, #76]	; 0x4c
   16c0c:	ldr	r0, [sp, #76]	; 0x4c
   16c10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c14:	mvn	r2, #0
   16c18:	sub	r1, r2, r1
   16c1c:	cmp	r0, r1
   16c20:	ble	16d3c <__assert_fail@plt+0x5ed4>
   16c24:	b	16d54 <__assert_fail@plt+0x5eec>
   16c28:	b	16c2c <__assert_fail@plt+0x5dc4>
   16c2c:	b	16c84 <__assert_fail@plt+0x5e1c>
   16c30:	b	16c84 <__assert_fail@plt+0x5e1c>
   16c34:	ldr	r0, [fp, #8]
   16c38:	cmn	r0, #1
   16c3c:	bne	16c84 <__assert_fail@plt+0x5e1c>
   16c40:	b	16c44 <__assert_fail@plt+0x5ddc>
   16c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c48:	add	r0, r0, #0
   16c4c:	movw	r1, #0
   16c50:	cmp	r1, r0
   16c54:	blt	16d3c <__assert_fail@plt+0x5ed4>
   16c58:	b	16d54 <__assert_fail@plt+0x5eec>
   16c5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c60:	movw	r1, #0
   16c64:	cmp	r1, r0
   16c68:	bge	16d54 <__assert_fail@plt+0x5eec>
   16c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c70:	sub	r0, r0, #1
   16c74:	mvn	r1, #0
   16c78:	cmp	r1, r0
   16c7c:	blt	16d3c <__assert_fail@plt+0x5ed4>
   16c80:	b	16d54 <__assert_fail@plt+0x5eec>
   16c84:	ldr	r0, [fp, #8]
   16c88:	movw	r1, #0
   16c8c:	sdiv	r0, r1, r0
   16c90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c94:	cmp	r0, r1
   16c98:	blt	16d3c <__assert_fail@plt+0x5ed4>
   16c9c:	b	16d54 <__assert_fail@plt+0x5eec>
   16ca0:	ldr	r0, [fp, #8]
   16ca4:	cmp	r0, #0
   16ca8:	bne	16cb0 <__assert_fail@plt+0x5e48>
   16cac:	b	16d54 <__assert_fail@plt+0x5eec>
   16cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cb4:	cmp	r0, #0
   16cb8:	bge	16d24 <__assert_fail@plt+0x5ebc>
   16cbc:	b	16cc0 <__assert_fail@plt+0x5e58>
   16cc0:	b	16d08 <__assert_fail@plt+0x5ea0>
   16cc4:	b	16d08 <__assert_fail@plt+0x5ea0>
   16cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ccc:	cmn	r0, #1
   16cd0:	bne	16d08 <__assert_fail@plt+0x5ea0>
   16cd4:	b	16cd8 <__assert_fail@plt+0x5e70>
   16cd8:	ldr	r0, [fp, #8]
   16cdc:	add	r0, r0, #0
   16ce0:	movw	r1, #0
   16ce4:	cmp	r1, r0
   16ce8:	blt	16d3c <__assert_fail@plt+0x5ed4>
   16cec:	b	16d54 <__assert_fail@plt+0x5eec>
   16cf0:	ldr	r0, [fp, #8]
   16cf4:	sub	r0, r0, #1
   16cf8:	mvn	r1, #0
   16cfc:	cmp	r1, r0
   16d00:	blt	16d3c <__assert_fail@plt+0x5ed4>
   16d04:	b	16d54 <__assert_fail@plt+0x5eec>
   16d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d0c:	movw	r1, #0
   16d10:	sdiv	r0, r1, r0
   16d14:	ldr	r1, [fp, #8]
   16d18:	cmp	r0, r1
   16d1c:	blt	16d3c <__assert_fail@plt+0x5ed4>
   16d20:	b	16d54 <__assert_fail@plt+0x5eec>
   16d24:	ldr	r0, [fp, #8]
   16d28:	movw	r1, #65535	; 0xffff
   16d2c:	sdiv	r0, r1, r0
   16d30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d34:	cmp	r0, r1
   16d38:	bge	16d54 <__assert_fail@plt+0x5eec>
   16d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d40:	ldr	r1, [fp, #8]
   16d44:	mul	r0, r0, r1
   16d48:	uxth	r0, r0
   16d4c:	str	r0, [fp, #-28]	; 0xffffffe4
   16d50:	b	17954 <__assert_fail@plt+0x6aec>
   16d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d58:	ldr	r1, [fp, #8]
   16d5c:	mul	r0, r0, r1
   16d60:	uxth	r0, r0
   16d64:	str	r0, [fp, #-28]	; 0xffffffe4
   16d68:	b	17958 <__assert_fail@plt+0x6af0>
   16d6c:	b	16d70 <__assert_fail@plt+0x5f08>
   16d70:	b	16d74 <__assert_fail@plt+0x5f0c>
   16d74:	ldr	r0, [fp, #8]
   16d78:	cmp	r0, #0
   16d7c:	bge	16e80 <__assert_fail@plt+0x6018>
   16d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d84:	cmp	r0, #0
   16d88:	bge	16e14 <__assert_fail@plt+0x5fac>
   16d8c:	b	16d90 <__assert_fail@plt+0x5f28>
   16d90:	ldr	r0, [pc, #3048]	; 17980 <__assert_fail@plt+0x6b18>
   16d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d98:	ldr	r2, [fp, #8]
   16d9c:	sdiv	r0, r0, r2
   16da0:	cmp	r1, r0
   16da4:	blt	16f10 <__assert_fail@plt+0x60a8>
   16da8:	b	16f24 <__assert_fail@plt+0x60bc>
   16dac:	b	16db0 <__assert_fail@plt+0x5f48>
   16db0:	ldr	r0, [pc, #3020]	; 17984 <__assert_fail@plt+0x6b1c>
   16db4:	ldr	r1, [fp, #8]
   16db8:	cmp	r1, r0
   16dbc:	blt	16dd4 <__assert_fail@plt+0x5f6c>
   16dc0:	b	16de0 <__assert_fail@plt+0x5f78>
   16dc4:	ldr	r0, [fp, #8]
   16dc8:	movw	r1, #0
   16dcc:	cmp	r1, r0
   16dd0:	bge	16de0 <__assert_fail@plt+0x5f78>
   16dd4:	movw	r0, #0
   16dd8:	str	r0, [sp, #72]	; 0x48
   16ddc:	b	16df8 <__assert_fail@plt+0x5f90>
   16de0:	ldr	r0, [pc, #2968]	; 17980 <__assert_fail@plt+0x6b18>
   16de4:	ldr	r1, [fp, #8]
   16de8:	movw	r2, #0
   16dec:	sub	r1, r2, r1
   16df0:	sdiv	r0, r0, r1
   16df4:	str	r0, [sp, #72]	; 0x48
   16df8:	ldr	r0, [sp, #72]	; 0x48
   16dfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e00:	mvn	r2, #0
   16e04:	sub	r1, r2, r1
   16e08:	cmp	r0, r1
   16e0c:	ble	16f10 <__assert_fail@plt+0x60a8>
   16e10:	b	16f24 <__assert_fail@plt+0x60bc>
   16e14:	ldr	r0, [fp, #8]
   16e18:	cmn	r0, #1
   16e1c:	bne	16e64 <__assert_fail@plt+0x5ffc>
   16e20:	b	16e24 <__assert_fail@plt+0x5fbc>
   16e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e28:	add	r0, r0, #-2147483648	; 0x80000000
   16e2c:	movw	r1, #0
   16e30:	cmp	r1, r0
   16e34:	blt	16f10 <__assert_fail@plt+0x60a8>
   16e38:	b	16f24 <__assert_fail@plt+0x60bc>
   16e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e40:	movw	r1, #0
   16e44:	cmp	r1, r0
   16e48:	bge	16f24 <__assert_fail@plt+0x60bc>
   16e4c:	ldr	r0, [pc, #2860]	; 17980 <__assert_fail@plt+0x6b18>
   16e50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e54:	sub	r1, r1, #1
   16e58:	cmp	r0, r1
   16e5c:	blt	16f10 <__assert_fail@plt+0x60a8>
   16e60:	b	16f24 <__assert_fail@plt+0x60bc>
   16e64:	ldr	r0, [pc, #2844]	; 17988 <__assert_fail@plt+0x6b20>
   16e68:	ldr	r1, [fp, #8]
   16e6c:	sdiv	r0, r0, r1
   16e70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e74:	cmp	r0, r1
   16e78:	blt	16f10 <__assert_fail@plt+0x60a8>
   16e7c:	b	16f24 <__assert_fail@plt+0x60bc>
   16e80:	ldr	r0, [fp, #8]
   16e84:	cmp	r0, #0
   16e88:	bne	16e90 <__assert_fail@plt+0x6028>
   16e8c:	b	16f24 <__assert_fail@plt+0x60bc>
   16e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e94:	cmp	r0, #0
   16e98:	bge	16ef8 <__assert_fail@plt+0x6090>
   16e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ea0:	cmn	r0, #1
   16ea4:	bne	16edc <__assert_fail@plt+0x6074>
   16ea8:	b	16eac <__assert_fail@plt+0x6044>
   16eac:	ldr	r0, [fp, #8]
   16eb0:	add	r0, r0, #-2147483648	; 0x80000000
   16eb4:	movw	r1, #0
   16eb8:	cmp	r1, r0
   16ebc:	blt	16f10 <__assert_fail@plt+0x60a8>
   16ec0:	b	16f24 <__assert_fail@plt+0x60bc>
   16ec4:	ldr	r0, [pc, #2740]	; 17980 <__assert_fail@plt+0x6b18>
   16ec8:	ldr	r1, [fp, #8]
   16ecc:	sub	r1, r1, #1
   16ed0:	cmp	r0, r1
   16ed4:	blt	16f10 <__assert_fail@plt+0x60a8>
   16ed8:	b	16f24 <__assert_fail@plt+0x60bc>
   16edc:	ldr	r0, [pc, #2724]	; 17988 <__assert_fail@plt+0x6b20>
   16ee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ee4:	sdiv	r0, r0, r1
   16ee8:	ldr	r1, [fp, #8]
   16eec:	cmp	r0, r1
   16ef0:	blt	16f10 <__assert_fail@plt+0x60a8>
   16ef4:	b	16f24 <__assert_fail@plt+0x60bc>
   16ef8:	ldr	r0, [pc, #2688]	; 17980 <__assert_fail@plt+0x6b18>
   16efc:	ldr	r1, [fp, #8]
   16f00:	sdiv	r0, r0, r1
   16f04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f08:	cmp	r0, r1
   16f0c:	bge	16f24 <__assert_fail@plt+0x60bc>
   16f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f14:	ldr	r1, [fp, #8]
   16f18:	mul	r0, r0, r1
   16f1c:	str	r0, [fp, #-28]	; 0xffffffe4
   16f20:	b	17954 <__assert_fail@plt+0x6aec>
   16f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f28:	ldr	r1, [fp, #8]
   16f2c:	mul	r0, r0, r1
   16f30:	str	r0, [fp, #-28]	; 0xffffffe4
   16f34:	b	17958 <__assert_fail@plt+0x6af0>
   16f38:	ldr	r0, [fp, #8]
   16f3c:	cmp	r0, #0
   16f40:	bge	17050 <__assert_fail@plt+0x61e8>
   16f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f48:	cmp	r0, #0
   16f4c:	bge	16fd8 <__assert_fail@plt+0x6170>
   16f50:	b	16f70 <__assert_fail@plt+0x6108>
   16f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f58:	ldr	r1, [fp, #8]
   16f5c:	mvn	r2, #0
   16f60:	udiv	r1, r2, r1
   16f64:	cmp	r0, r1
   16f68:	bcc	170ec <__assert_fail@plt+0x6284>
   16f6c:	b	17100 <__assert_fail@plt+0x6298>
   16f70:	b	16f74 <__assert_fail@plt+0x610c>
   16f74:	ldr	r0, [pc, #2568]	; 17984 <__assert_fail@plt+0x6b1c>
   16f78:	ldr	r1, [fp, #8]
   16f7c:	cmp	r1, r0
   16f80:	blt	16f98 <__assert_fail@plt+0x6130>
   16f84:	b	16fa4 <__assert_fail@plt+0x613c>
   16f88:	ldr	r0, [fp, #8]
   16f8c:	movw	r1, #0
   16f90:	cmp	r1, r0
   16f94:	bge	16fa4 <__assert_fail@plt+0x613c>
   16f98:	movw	r0, #1
   16f9c:	str	r0, [sp, #68]	; 0x44
   16fa0:	b	16fbc <__assert_fail@plt+0x6154>
   16fa4:	ldr	r0, [fp, #8]
   16fa8:	movw	r1, #0
   16fac:	sub	r0, r1, r0
   16fb0:	mvn	r1, #0
   16fb4:	udiv	r0, r1, r0
   16fb8:	str	r0, [sp, #68]	; 0x44
   16fbc:	ldr	r0, [sp, #68]	; 0x44
   16fc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fc4:	mvn	r2, #0
   16fc8:	sub	r1, r2, r1
   16fcc:	cmp	r0, r1
   16fd0:	bls	170ec <__assert_fail@plt+0x6284>
   16fd4:	b	17100 <__assert_fail@plt+0x6298>
   16fd8:	b	16fdc <__assert_fail@plt+0x6174>
   16fdc:	b	17034 <__assert_fail@plt+0x61cc>
   16fe0:	b	17034 <__assert_fail@plt+0x61cc>
   16fe4:	ldr	r0, [fp, #8]
   16fe8:	cmn	r0, #1
   16fec:	bne	17034 <__assert_fail@plt+0x61cc>
   16ff0:	b	16ff4 <__assert_fail@plt+0x618c>
   16ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ff8:	add	r0, r0, #0
   16ffc:	movw	r1, #0
   17000:	cmp	r1, r0
   17004:	blt	170ec <__assert_fail@plt+0x6284>
   17008:	b	17100 <__assert_fail@plt+0x6298>
   1700c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17010:	movw	r1, #0
   17014:	cmp	r1, r0
   17018:	bge	17100 <__assert_fail@plt+0x6298>
   1701c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17020:	sub	r0, r0, #1
   17024:	mvn	r1, #0
   17028:	cmp	r1, r0
   1702c:	blt	170ec <__assert_fail@plt+0x6284>
   17030:	b	17100 <__assert_fail@plt+0x6298>
   17034:	ldr	r0, [fp, #8]
   17038:	movw	r1, #0
   1703c:	sdiv	r0, r1, r0
   17040:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17044:	cmp	r0, r1
   17048:	blt	170ec <__assert_fail@plt+0x6284>
   1704c:	b	17100 <__assert_fail@plt+0x6298>
   17050:	ldr	r0, [fp, #8]
   17054:	cmp	r0, #0
   17058:	bne	17060 <__assert_fail@plt+0x61f8>
   1705c:	b	17100 <__assert_fail@plt+0x6298>
   17060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17064:	cmp	r0, #0
   17068:	bge	170d4 <__assert_fail@plt+0x626c>
   1706c:	b	17070 <__assert_fail@plt+0x6208>
   17070:	b	170b8 <__assert_fail@plt+0x6250>
   17074:	b	170b8 <__assert_fail@plt+0x6250>
   17078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1707c:	cmn	r0, #1
   17080:	bne	170b8 <__assert_fail@plt+0x6250>
   17084:	b	17088 <__assert_fail@plt+0x6220>
   17088:	ldr	r0, [fp, #8]
   1708c:	add	r0, r0, #0
   17090:	movw	r1, #0
   17094:	cmp	r1, r0
   17098:	blt	170ec <__assert_fail@plt+0x6284>
   1709c:	b	17100 <__assert_fail@plt+0x6298>
   170a0:	ldr	r0, [fp, #8]
   170a4:	sub	r0, r0, #1
   170a8:	mvn	r1, #0
   170ac:	cmp	r1, r0
   170b0:	blt	170ec <__assert_fail@plt+0x6284>
   170b4:	b	17100 <__assert_fail@plt+0x6298>
   170b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170bc:	movw	r1, #0
   170c0:	sdiv	r0, r1, r0
   170c4:	ldr	r1, [fp, #8]
   170c8:	cmp	r0, r1
   170cc:	blt	170ec <__assert_fail@plt+0x6284>
   170d0:	b	17100 <__assert_fail@plt+0x6298>
   170d4:	ldr	r0, [fp, #8]
   170d8:	mvn	r1, #0
   170dc:	udiv	r0, r1, r0
   170e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170e4:	cmp	r0, r1
   170e8:	bcs	17100 <__assert_fail@plt+0x6298>
   170ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170f0:	ldr	r1, [fp, #8]
   170f4:	mul	r0, r0, r1
   170f8:	str	r0, [fp, #-28]	; 0xffffffe4
   170fc:	b	17954 <__assert_fail@plt+0x6aec>
   17100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17104:	ldr	r1, [fp, #8]
   17108:	mul	r0, r0, r1
   1710c:	str	r0, [fp, #-28]	; 0xffffffe4
   17110:	b	17958 <__assert_fail@plt+0x6af0>
   17114:	b	17118 <__assert_fail@plt+0x62b0>
   17118:	b	1711c <__assert_fail@plt+0x62b4>
   1711c:	ldr	r0, [fp, #8]
   17120:	cmp	r0, #0
   17124:	bge	17228 <__assert_fail@plt+0x63c0>
   17128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1712c:	cmp	r0, #0
   17130:	bge	171bc <__assert_fail@plt+0x6354>
   17134:	b	17138 <__assert_fail@plt+0x62d0>
   17138:	ldr	r0, [pc, #2112]	; 17980 <__assert_fail@plt+0x6b18>
   1713c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17140:	ldr	r2, [fp, #8]
   17144:	sdiv	r0, r0, r2
   17148:	cmp	r1, r0
   1714c:	blt	172b8 <__assert_fail@plt+0x6450>
   17150:	b	172cc <__assert_fail@plt+0x6464>
   17154:	b	17158 <__assert_fail@plt+0x62f0>
   17158:	ldr	r0, [pc, #2084]	; 17984 <__assert_fail@plt+0x6b1c>
   1715c:	ldr	r1, [fp, #8]
   17160:	cmp	r1, r0
   17164:	blt	1717c <__assert_fail@plt+0x6314>
   17168:	b	17188 <__assert_fail@plt+0x6320>
   1716c:	ldr	r0, [fp, #8]
   17170:	movw	r1, #0
   17174:	cmp	r1, r0
   17178:	bge	17188 <__assert_fail@plt+0x6320>
   1717c:	movw	r0, #0
   17180:	str	r0, [sp, #64]	; 0x40
   17184:	b	171a0 <__assert_fail@plt+0x6338>
   17188:	ldr	r0, [pc, #2032]	; 17980 <__assert_fail@plt+0x6b18>
   1718c:	ldr	r1, [fp, #8]
   17190:	movw	r2, #0
   17194:	sub	r1, r2, r1
   17198:	sdiv	r0, r0, r1
   1719c:	str	r0, [sp, #64]	; 0x40
   171a0:	ldr	r0, [sp, #64]	; 0x40
   171a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171a8:	mvn	r2, #0
   171ac:	sub	r1, r2, r1
   171b0:	cmp	r0, r1
   171b4:	ble	172b8 <__assert_fail@plt+0x6450>
   171b8:	b	172cc <__assert_fail@plt+0x6464>
   171bc:	ldr	r0, [fp, #8]
   171c0:	cmn	r0, #1
   171c4:	bne	1720c <__assert_fail@plt+0x63a4>
   171c8:	b	171cc <__assert_fail@plt+0x6364>
   171cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171d0:	add	r0, r0, #-2147483648	; 0x80000000
   171d4:	movw	r1, #0
   171d8:	cmp	r1, r0
   171dc:	blt	172b8 <__assert_fail@plt+0x6450>
   171e0:	b	172cc <__assert_fail@plt+0x6464>
   171e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171e8:	movw	r1, #0
   171ec:	cmp	r1, r0
   171f0:	bge	172cc <__assert_fail@plt+0x6464>
   171f4:	ldr	r0, [pc, #1924]	; 17980 <__assert_fail@plt+0x6b18>
   171f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171fc:	sub	r1, r1, #1
   17200:	cmp	r0, r1
   17204:	blt	172b8 <__assert_fail@plt+0x6450>
   17208:	b	172cc <__assert_fail@plt+0x6464>
   1720c:	ldr	r0, [pc, #1908]	; 17988 <__assert_fail@plt+0x6b20>
   17210:	ldr	r1, [fp, #8]
   17214:	sdiv	r0, r0, r1
   17218:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1721c:	cmp	r0, r1
   17220:	blt	172b8 <__assert_fail@plt+0x6450>
   17224:	b	172cc <__assert_fail@plt+0x6464>
   17228:	ldr	r0, [fp, #8]
   1722c:	cmp	r0, #0
   17230:	bne	17238 <__assert_fail@plt+0x63d0>
   17234:	b	172cc <__assert_fail@plt+0x6464>
   17238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1723c:	cmp	r0, #0
   17240:	bge	172a0 <__assert_fail@plt+0x6438>
   17244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17248:	cmn	r0, #1
   1724c:	bne	17284 <__assert_fail@plt+0x641c>
   17250:	b	17254 <__assert_fail@plt+0x63ec>
   17254:	ldr	r0, [fp, #8]
   17258:	add	r0, r0, #-2147483648	; 0x80000000
   1725c:	movw	r1, #0
   17260:	cmp	r1, r0
   17264:	blt	172b8 <__assert_fail@plt+0x6450>
   17268:	b	172cc <__assert_fail@plt+0x6464>
   1726c:	ldr	r0, [pc, #1804]	; 17980 <__assert_fail@plt+0x6b18>
   17270:	ldr	r1, [fp, #8]
   17274:	sub	r1, r1, #1
   17278:	cmp	r0, r1
   1727c:	blt	172b8 <__assert_fail@plt+0x6450>
   17280:	b	172cc <__assert_fail@plt+0x6464>
   17284:	ldr	r0, [pc, #1788]	; 17988 <__assert_fail@plt+0x6b20>
   17288:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1728c:	sdiv	r0, r0, r1
   17290:	ldr	r1, [fp, #8]
   17294:	cmp	r0, r1
   17298:	blt	172b8 <__assert_fail@plt+0x6450>
   1729c:	b	172cc <__assert_fail@plt+0x6464>
   172a0:	ldr	r0, [pc, #1752]	; 17980 <__assert_fail@plt+0x6b18>
   172a4:	ldr	r1, [fp, #8]
   172a8:	sdiv	r0, r0, r1
   172ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172b0:	cmp	r0, r1
   172b4:	bge	172cc <__assert_fail@plt+0x6464>
   172b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172bc:	ldr	r1, [fp, #8]
   172c0:	mul	r0, r0, r1
   172c4:	str	r0, [fp, #-28]	; 0xffffffe4
   172c8:	b	17954 <__assert_fail@plt+0x6aec>
   172cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d0:	ldr	r1, [fp, #8]
   172d4:	mul	r0, r0, r1
   172d8:	str	r0, [fp, #-28]	; 0xffffffe4
   172dc:	b	17958 <__assert_fail@plt+0x6af0>
   172e0:	ldr	r0, [fp, #8]
   172e4:	cmp	r0, #0
   172e8:	bge	173f8 <__assert_fail@plt+0x6590>
   172ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172f0:	cmp	r0, #0
   172f4:	bge	17380 <__assert_fail@plt+0x6518>
   172f8:	b	17318 <__assert_fail@plt+0x64b0>
   172fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17300:	ldr	r1, [fp, #8]
   17304:	mvn	r2, #0
   17308:	udiv	r1, r2, r1
   1730c:	cmp	r0, r1
   17310:	bcc	17494 <__assert_fail@plt+0x662c>
   17314:	b	174a8 <__assert_fail@plt+0x6640>
   17318:	b	1731c <__assert_fail@plt+0x64b4>
   1731c:	ldr	r0, [pc, #1632]	; 17984 <__assert_fail@plt+0x6b1c>
   17320:	ldr	r1, [fp, #8]
   17324:	cmp	r1, r0
   17328:	blt	17340 <__assert_fail@plt+0x64d8>
   1732c:	b	1734c <__assert_fail@plt+0x64e4>
   17330:	ldr	r0, [fp, #8]
   17334:	movw	r1, #0
   17338:	cmp	r1, r0
   1733c:	bge	1734c <__assert_fail@plt+0x64e4>
   17340:	movw	r0, #1
   17344:	str	r0, [sp, #60]	; 0x3c
   17348:	b	17364 <__assert_fail@plt+0x64fc>
   1734c:	ldr	r0, [fp, #8]
   17350:	movw	r1, #0
   17354:	sub	r0, r1, r0
   17358:	mvn	r1, #0
   1735c:	udiv	r0, r1, r0
   17360:	str	r0, [sp, #60]	; 0x3c
   17364:	ldr	r0, [sp, #60]	; 0x3c
   17368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1736c:	mvn	r2, #0
   17370:	sub	r1, r2, r1
   17374:	cmp	r0, r1
   17378:	bls	17494 <__assert_fail@plt+0x662c>
   1737c:	b	174a8 <__assert_fail@plt+0x6640>
   17380:	b	17384 <__assert_fail@plt+0x651c>
   17384:	b	173dc <__assert_fail@plt+0x6574>
   17388:	b	173dc <__assert_fail@plt+0x6574>
   1738c:	ldr	r0, [fp, #8]
   17390:	cmn	r0, #1
   17394:	bne	173dc <__assert_fail@plt+0x6574>
   17398:	b	1739c <__assert_fail@plt+0x6534>
   1739c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173a0:	add	r0, r0, #0
   173a4:	movw	r1, #0
   173a8:	cmp	r1, r0
   173ac:	blt	17494 <__assert_fail@plt+0x662c>
   173b0:	b	174a8 <__assert_fail@plt+0x6640>
   173b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173b8:	movw	r1, #0
   173bc:	cmp	r1, r0
   173c0:	bge	174a8 <__assert_fail@plt+0x6640>
   173c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c8:	sub	r0, r0, #1
   173cc:	mvn	r1, #0
   173d0:	cmp	r1, r0
   173d4:	blt	17494 <__assert_fail@plt+0x662c>
   173d8:	b	174a8 <__assert_fail@plt+0x6640>
   173dc:	ldr	r0, [fp, #8]
   173e0:	movw	r1, #0
   173e4:	sdiv	r0, r1, r0
   173e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173ec:	cmp	r0, r1
   173f0:	blt	17494 <__assert_fail@plt+0x662c>
   173f4:	b	174a8 <__assert_fail@plt+0x6640>
   173f8:	ldr	r0, [fp, #8]
   173fc:	cmp	r0, #0
   17400:	bne	17408 <__assert_fail@plt+0x65a0>
   17404:	b	174a8 <__assert_fail@plt+0x6640>
   17408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1740c:	cmp	r0, #0
   17410:	bge	1747c <__assert_fail@plt+0x6614>
   17414:	b	17418 <__assert_fail@plt+0x65b0>
   17418:	b	17460 <__assert_fail@plt+0x65f8>
   1741c:	b	17460 <__assert_fail@plt+0x65f8>
   17420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17424:	cmn	r0, #1
   17428:	bne	17460 <__assert_fail@plt+0x65f8>
   1742c:	b	17430 <__assert_fail@plt+0x65c8>
   17430:	ldr	r0, [fp, #8]
   17434:	add	r0, r0, #0
   17438:	movw	r1, #0
   1743c:	cmp	r1, r0
   17440:	blt	17494 <__assert_fail@plt+0x662c>
   17444:	b	174a8 <__assert_fail@plt+0x6640>
   17448:	ldr	r0, [fp, #8]
   1744c:	sub	r0, r0, #1
   17450:	mvn	r1, #0
   17454:	cmp	r1, r0
   17458:	blt	17494 <__assert_fail@plt+0x662c>
   1745c:	b	174a8 <__assert_fail@plt+0x6640>
   17460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17464:	movw	r1, #0
   17468:	sdiv	r0, r1, r0
   1746c:	ldr	r1, [fp, #8]
   17470:	cmp	r0, r1
   17474:	blt	17494 <__assert_fail@plt+0x662c>
   17478:	b	174a8 <__assert_fail@plt+0x6640>
   1747c:	ldr	r0, [fp, #8]
   17480:	mvn	r1, #0
   17484:	udiv	r0, r1, r0
   17488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1748c:	cmp	r0, r1
   17490:	bcs	174a8 <__assert_fail@plt+0x6640>
   17494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17498:	ldr	r1, [fp, #8]
   1749c:	mul	r0, r0, r1
   174a0:	str	r0, [fp, #-28]	; 0xffffffe4
   174a4:	b	17954 <__assert_fail@plt+0x6aec>
   174a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174ac:	ldr	r1, [fp, #8]
   174b0:	mul	r0, r0, r1
   174b4:	str	r0, [fp, #-28]	; 0xffffffe4
   174b8:	b	17958 <__assert_fail@plt+0x6af0>
   174bc:	b	174c0 <__assert_fail@plt+0x6658>
   174c0:	ldr	r0, [fp, #8]
   174c4:	cmp	r0, #0
   174c8:	bge	17630 <__assert_fail@plt+0x67c8>
   174cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174d0:	cmp	r0, #0
   174d4:	bge	175ac <__assert_fail@plt+0x6744>
   174d8:	b	174dc <__assert_fail@plt+0x6674>
   174dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e0:	ldr	r1, [fp, #8]
   174e4:	asr	r3, r1, #31
   174e8:	mvn	r2, #0
   174ec:	mvn	ip, #-2147483648	; 0x80000000
   174f0:	str	r0, [sp, #56]	; 0x38
   174f4:	mov	r0, r2
   174f8:	str	r1, [sp, #52]	; 0x34
   174fc:	mov	r1, ip
   17500:	ldr	r2, [sp, #52]	; 0x34
   17504:	bl	19ff0 <__assert_fail@plt+0x9188>
   17508:	ldr	r2, [sp, #56]	; 0x38
   1750c:	subs	r0, r2, r0
   17510:	rscs	r1, r1, r2, asr #31
   17514:	blt	176f8 <__assert_fail@plt+0x6890>
   17518:	b	1770c <__assert_fail@plt+0x68a4>
   1751c:	b	17520 <__assert_fail@plt+0x66b8>
   17520:	ldr	r0, [pc, #1116]	; 17984 <__assert_fail@plt+0x6b1c>
   17524:	ldr	r1, [fp, #8]
   17528:	cmp	r1, r0
   1752c:	blt	17544 <__assert_fail@plt+0x66dc>
   17530:	b	17558 <__assert_fail@plt+0x66f0>
   17534:	ldr	r0, [fp, #8]
   17538:	movw	r1, #0
   1753c:	cmp	r1, r0
   17540:	bge	17558 <__assert_fail@plt+0x66f0>
   17544:	mov	r0, #0
   17548:	mvn	r1, #0
   1754c:	str	r1, [sp, #48]	; 0x30
   17550:	str	r0, [sp, #44]	; 0x2c
   17554:	b	1758c <__assert_fail@plt+0x6724>
   17558:	ldr	r0, [fp, #8]
   1755c:	rsb	r0, r0, #0
   17560:	asr	r3, r0, #31
   17564:	mvn	r1, #0
   17568:	mvn	r2, #-2147483648	; 0x80000000
   1756c:	str	r0, [sp, #40]	; 0x28
   17570:	mov	r0, r1
   17574:	mov	r1, r2
   17578:	ldr	r2, [sp, #40]	; 0x28
   1757c:	bl	19ff0 <__assert_fail@plt+0x9188>
   17580:	str	r0, [sp, #48]	; 0x30
   17584:	str	r1, [sp, #44]	; 0x2c
   17588:	b	1758c <__assert_fail@plt+0x6724>
   1758c:	ldr	r0, [sp, #44]	; 0x2c
   17590:	ldr	r1, [sp, #48]	; 0x30
   17594:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17598:	mvn	r2, r2
   1759c:	subs	r1, r2, r1
   175a0:	rscs	r0, r0, r2, asr #31
   175a4:	bge	176f8 <__assert_fail@plt+0x6890>
   175a8:	b	1770c <__assert_fail@plt+0x68a4>
   175ac:	ldr	r0, [fp, #8]
   175b0:	cmn	r0, #1
   175b4:	bne	175f8 <__assert_fail@plt+0x6790>
   175b8:	b	175bc <__assert_fail@plt+0x6754>
   175bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175c0:	mov	r1, #-2147483648	; 0x80000000
   175c4:	add	r1, r1, r0, asr #31
   175c8:	rsbs	r0, r0, #0
   175cc:	rscs	r1, r1, #0
   175d0:	blt	176f8 <__assert_fail@plt+0x6890>
   175d4:	b	1770c <__assert_fail@plt+0x68a4>
   175d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175dc:	movw	r1, #0
   175e0:	cmp	r1, r0
   175e4:	bge	1770c <__assert_fail@plt+0x68a4>
   175e8:	mov	r0, #0
   175ec:	cmp	r0, #0
   175f0:	bne	176f8 <__assert_fail@plt+0x6890>
   175f4:	b	1770c <__assert_fail@plt+0x68a4>
   175f8:	ldr	r0, [fp, #8]
   175fc:	asr	r3, r0, #31
   17600:	mov	r1, #0
   17604:	mov	r2, #-2147483648	; 0x80000000
   17608:	str	r0, [sp, #36]	; 0x24
   1760c:	mov	r0, r1
   17610:	mov	r1, r2
   17614:	ldr	r2, [sp, #36]	; 0x24
   17618:	bl	19ff0 <__assert_fail@plt+0x9188>
   1761c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17620:	subs	r0, r0, r2
   17624:	sbcs	r1, r1, r2, asr #31
   17628:	blt	176f8 <__assert_fail@plt+0x6890>
   1762c:	b	1770c <__assert_fail@plt+0x68a4>
   17630:	ldr	r0, [fp, #8]
   17634:	cmp	r0, #0
   17638:	bne	17640 <__assert_fail@plt+0x67d8>
   1763c:	b	1770c <__assert_fail@plt+0x68a4>
   17640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17644:	cmp	r0, #0
   17648:	bge	176c0 <__assert_fail@plt+0x6858>
   1764c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17650:	cmn	r0, #1
   17654:	bne	17688 <__assert_fail@plt+0x6820>
   17658:	b	1765c <__assert_fail@plt+0x67f4>
   1765c:	ldr	r0, [fp, #8]
   17660:	mov	r1, #-2147483648	; 0x80000000
   17664:	add	r1, r1, r0, asr #31
   17668:	rsbs	r0, r0, #0
   1766c:	rscs	r1, r1, #0
   17670:	blt	176f8 <__assert_fail@plt+0x6890>
   17674:	b	1770c <__assert_fail@plt+0x68a4>
   17678:	mov	r0, #0
   1767c:	cmp	r0, #0
   17680:	bne	176f8 <__assert_fail@plt+0x6890>
   17684:	b	1770c <__assert_fail@plt+0x68a4>
   17688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1768c:	asr	r3, r0, #31
   17690:	mov	r1, #0
   17694:	mov	r2, #-2147483648	; 0x80000000
   17698:	str	r0, [sp, #32]
   1769c:	mov	r0, r1
   176a0:	mov	r1, r2
   176a4:	ldr	r2, [sp, #32]
   176a8:	bl	19ff0 <__assert_fail@plt+0x9188>
   176ac:	ldr	r2, [fp, #8]
   176b0:	subs	r0, r0, r2
   176b4:	sbcs	r1, r1, r2, asr #31
   176b8:	blt	176f8 <__assert_fail@plt+0x6890>
   176bc:	b	1770c <__assert_fail@plt+0x68a4>
   176c0:	ldr	r0, [fp, #8]
   176c4:	asr	r3, r0, #31
   176c8:	mvn	r1, #0
   176cc:	mvn	r2, #-2147483648	; 0x80000000
   176d0:	str	r0, [sp, #28]
   176d4:	mov	r0, r1
   176d8:	mov	r1, r2
   176dc:	ldr	r2, [sp, #28]
   176e0:	bl	19ff0 <__assert_fail@plt+0x9188>
   176e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176e8:	subs	r0, r0, r2
   176ec:	sbcs	r1, r1, r2, asr #31
   176f0:	bge	1770c <__assert_fail@plt+0x68a4>
   176f4:	b	176f8 <__assert_fail@plt+0x6890>
   176f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176fc:	ldr	r1, [fp, #8]
   17700:	mul	r0, r0, r1
   17704:	str	r0, [fp, #-28]	; 0xffffffe4
   17708:	b	17954 <__assert_fail@plt+0x6aec>
   1770c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17710:	ldr	r1, [fp, #8]
   17714:	mul	r0, r0, r1
   17718:	str	r0, [fp, #-28]	; 0xffffffe4
   1771c:	b	17958 <__assert_fail@plt+0x6af0>
   17720:	ldr	r0, [fp, #8]
   17724:	cmp	r0, #0
   17728:	bge	17878 <__assert_fail@plt+0x6a10>
   1772c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17730:	cmp	r0, #0
   17734:	bge	17800 <__assert_fail@plt+0x6998>
   17738:	b	17778 <__assert_fail@plt+0x6910>
   1773c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17740:	ldr	r1, [fp, #8]
   17744:	asr	r3, r1, #31
   17748:	mvn	r2, #0
   1774c:	str	r0, [sp, #24]
   17750:	mov	r0, r2
   17754:	str	r1, [sp, #20]
   17758:	mov	r1, r2
   1775c:	ldr	r2, [sp, #20]
   17760:	bl	1a0c4 <__assert_fail@plt+0x925c>
   17764:	ldr	r2, [sp, #24]
   17768:	subs	r0, r2, r0
   1776c:	rscs	r1, r1, r2, asr #31
   17770:	bcc	1792c <__assert_fail@plt+0x6ac4>
   17774:	b	17940 <__assert_fail@plt+0x6ad8>
   17778:	b	1777c <__assert_fail@plt+0x6914>
   1777c:	ldr	r0, [pc, #512]	; 17984 <__assert_fail@plt+0x6b1c>
   17780:	ldr	r1, [fp, #8]
   17784:	cmp	r1, r0
   17788:	blt	177a0 <__assert_fail@plt+0x6938>
   1778c:	b	177b4 <__assert_fail@plt+0x694c>
   17790:	ldr	r0, [fp, #8]
   17794:	movw	r1, #0
   17798:	cmp	r1, r0
   1779c:	bge	177b4 <__assert_fail@plt+0x694c>
   177a0:	mov	r0, #1
   177a4:	mvn	r1, #0
   177a8:	str	r1, [sp, #16]
   177ac:	str	r0, [sp, #12]
   177b0:	b	177e0 <__assert_fail@plt+0x6978>
   177b4:	ldr	r0, [fp, #8]
   177b8:	rsb	r0, r0, #0
   177bc:	asr	r3, r0, #31
   177c0:	mvn	r1, #0
   177c4:	str	r0, [sp, #8]
   177c8:	mov	r0, r1
   177cc:	ldr	r2, [sp, #8]
   177d0:	bl	1a0c4 <__assert_fail@plt+0x925c>
   177d4:	str	r0, [sp, #16]
   177d8:	str	r1, [sp, #12]
   177dc:	b	177e0 <__assert_fail@plt+0x6978>
   177e0:	ldr	r0, [sp, #12]
   177e4:	ldr	r1, [sp, #16]
   177e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177ec:	mvn	r2, r2
   177f0:	subs	r1, r2, r1
   177f4:	rscs	r0, r0, r2, asr #31
   177f8:	bcs	1792c <__assert_fail@plt+0x6ac4>
   177fc:	b	17940 <__assert_fail@plt+0x6ad8>
   17800:	b	17804 <__assert_fail@plt+0x699c>
   17804:	b	1785c <__assert_fail@plt+0x69f4>
   17808:	b	1785c <__assert_fail@plt+0x69f4>
   1780c:	ldr	r0, [fp, #8]
   17810:	cmn	r0, #1
   17814:	bne	1785c <__assert_fail@plt+0x69f4>
   17818:	b	1781c <__assert_fail@plt+0x69b4>
   1781c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17820:	add	r0, r0, #0
   17824:	movw	r1, #0
   17828:	cmp	r1, r0
   1782c:	blt	1792c <__assert_fail@plt+0x6ac4>
   17830:	b	17940 <__assert_fail@plt+0x6ad8>
   17834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17838:	movw	r1, #0
   1783c:	cmp	r1, r0
   17840:	bge	17940 <__assert_fail@plt+0x6ad8>
   17844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17848:	sub	r0, r0, #1
   1784c:	mvn	r1, #0
   17850:	cmp	r1, r0
   17854:	blt	1792c <__assert_fail@plt+0x6ac4>
   17858:	b	17940 <__assert_fail@plt+0x6ad8>
   1785c:	ldr	r0, [fp, #8]
   17860:	movw	r1, #0
   17864:	sdiv	r0, r1, r0
   17868:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1786c:	cmp	r0, r1
   17870:	blt	1792c <__assert_fail@plt+0x6ac4>
   17874:	b	17940 <__assert_fail@plt+0x6ad8>
   17878:	ldr	r0, [fp, #8]
   1787c:	cmp	r0, #0
   17880:	bne	17888 <__assert_fail@plt+0x6a20>
   17884:	b	17940 <__assert_fail@plt+0x6ad8>
   17888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1788c:	cmp	r0, #0
   17890:	bge	178fc <__assert_fail@plt+0x6a94>
   17894:	b	17898 <__assert_fail@plt+0x6a30>
   17898:	b	178e0 <__assert_fail@plt+0x6a78>
   1789c:	b	178e0 <__assert_fail@plt+0x6a78>
   178a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178a4:	cmn	r0, #1
   178a8:	bne	178e0 <__assert_fail@plt+0x6a78>
   178ac:	b	178b0 <__assert_fail@plt+0x6a48>
   178b0:	ldr	r0, [fp, #8]
   178b4:	add	r0, r0, #0
   178b8:	movw	r1, #0
   178bc:	cmp	r1, r0
   178c0:	blt	1792c <__assert_fail@plt+0x6ac4>
   178c4:	b	17940 <__assert_fail@plt+0x6ad8>
   178c8:	ldr	r0, [fp, #8]
   178cc:	sub	r0, r0, #1
   178d0:	mvn	r1, #0
   178d4:	cmp	r1, r0
   178d8:	blt	1792c <__assert_fail@plt+0x6ac4>
   178dc:	b	17940 <__assert_fail@plt+0x6ad8>
   178e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178e4:	movw	r1, #0
   178e8:	sdiv	r0, r1, r0
   178ec:	ldr	r1, [fp, #8]
   178f0:	cmp	r0, r1
   178f4:	blt	1792c <__assert_fail@plt+0x6ac4>
   178f8:	b	17940 <__assert_fail@plt+0x6ad8>
   178fc:	ldr	r0, [fp, #8]
   17900:	asr	r3, r0, #31
   17904:	mvn	r1, #0
   17908:	str	r0, [sp, #4]
   1790c:	mov	r0, r1
   17910:	ldr	r2, [sp, #4]
   17914:	bl	1a0c4 <__assert_fail@plt+0x925c>
   17918:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1791c:	subs	r0, r0, r2
   17920:	sbcs	r1, r1, r2, asr #31
   17924:	bcs	17940 <__assert_fail@plt+0x6ad8>
   17928:	b	1792c <__assert_fail@plt+0x6ac4>
   1792c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17930:	ldr	r1, [fp, #8]
   17934:	mul	r0, r0, r1
   17938:	str	r0, [fp, #-28]	; 0xffffffe4
   1793c:	b	17954 <__assert_fail@plt+0x6aec>
   17940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17944:	ldr	r1, [fp, #8]
   17948:	mul	r0, r0, r1
   1794c:	str	r0, [fp, #-28]	; 0xffffffe4
   17950:	b	17958 <__assert_fail@plt+0x6af0>
   17954:	bl	17b30 <__assert_fail@plt+0x6cc8>
   17958:	ldr	r0, [fp, #-4]
   1795c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17960:	bl	14e90 <__assert_fail@plt+0x4028>
   17964:	str	r0, [fp, #-4]
   17968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1796c:	ldr	r1, [fp, #-8]
   17970:	str	r0, [r1]
   17974:	ldr	r0, [fp, #-4]
   17978:	mov	sp, fp
   1797c:	pop	{fp, pc}
   17980:	svcvc	0x00ffffff
   17984:	andhi	r0, r0, r1
   17988:	andhi	r0, r0, r0
   1798c:			; <UNDEFINED> instruction: 0xffff8000
   17990:	push	{fp, lr}
   17994:	mov	fp, sp
   17998:	sub	sp, sp, #8
   1799c:	str	r0, [sp, #4]
   179a0:	ldr	r0, [sp, #4]
   179a4:	movw	r1, #1
   179a8:	bl	179b4 <__assert_fail@plt+0x6b4c>
   179ac:	mov	sp, fp
   179b0:	pop	{fp, pc}
   179b4:	push	{fp, lr}
   179b8:	mov	fp, sp
   179bc:	sub	sp, sp, #8
   179c0:	str	r0, [sp, #4]
   179c4:	str	r1, [sp]
   179c8:	ldr	r0, [sp, #4]
   179cc:	ldr	r1, [sp]
   179d0:	bl	17b80 <__assert_fail@plt+0x6d18>
   179d4:	bl	14e1c <__assert_fail@plt+0x3fb4>
   179d8:	mov	sp, fp
   179dc:	pop	{fp, pc}
   179e0:	push	{fp, lr}
   179e4:	mov	fp, sp
   179e8:	sub	sp, sp, #8
   179ec:	str	r0, [sp, #4]
   179f0:	ldr	r0, [sp, #4]
   179f4:	movw	r1, #1
   179f8:	bl	17a04 <__assert_fail@plt+0x6b9c>
   179fc:	mov	sp, fp
   17a00:	pop	{fp, pc}
   17a04:	push	{fp, lr}
   17a08:	mov	fp, sp
   17a0c:	sub	sp, sp, #8
   17a10:	str	r0, [sp, #4]
   17a14:	str	r1, [sp]
   17a18:	ldr	r0, [sp, #4]
   17a1c:	ldr	r1, [sp]
   17a20:	bl	1825c <__assert_fail@plt+0x73f4>
   17a24:	bl	14e1c <__assert_fail@plt+0x3fb4>
   17a28:	mov	sp, fp
   17a2c:	pop	{fp, pc}
   17a30:	push	{fp, lr}
   17a34:	mov	fp, sp
   17a38:	sub	sp, sp, #16
   17a3c:	str	r0, [fp, #-4]
   17a40:	str	r1, [sp, #8]
   17a44:	ldr	r0, [sp, #8]
   17a48:	bl	14df8 <__assert_fail@plt+0x3f90>
   17a4c:	ldr	r1, [fp, #-4]
   17a50:	ldr	r2, [sp, #8]
   17a54:	str	r0, [sp, #4]
   17a58:	bl	10cb8 <memcpy@plt>
   17a5c:	ldr	r0, [sp, #4]
   17a60:	mov	sp, fp
   17a64:	pop	{fp, pc}
   17a68:	push	{fp, lr}
   17a6c:	mov	fp, sp
   17a70:	sub	sp, sp, #16
   17a74:	str	r0, [fp, #-4]
   17a78:	str	r1, [sp, #8]
   17a7c:	ldr	r0, [sp, #8]
   17a80:	bl	14e4c <__assert_fail@plt+0x3fe4>
   17a84:	ldr	r1, [fp, #-4]
   17a88:	ldr	r2, [sp, #8]
   17a8c:	str	r0, [sp, #4]
   17a90:	bl	10cb8 <memcpy@plt>
   17a94:	ldr	r0, [sp, #4]
   17a98:	mov	sp, fp
   17a9c:	pop	{fp, pc}
   17aa0:	push	{fp, lr}
   17aa4:	mov	fp, sp
   17aa8:	sub	sp, sp, #16
   17aac:	str	r0, [fp, #-4]
   17ab0:	str	r1, [sp, #8]
   17ab4:	ldr	r0, [sp, #8]
   17ab8:	add	r0, r0, #1
   17abc:	bl	14e4c <__assert_fail@plt+0x3fe4>
   17ac0:	str	r0, [sp, #4]
   17ac4:	ldr	r0, [sp, #4]
   17ac8:	ldr	r1, [sp, #8]
   17acc:	add	r0, r0, r1
   17ad0:	movw	r1, #0
   17ad4:	strb	r1, [r0]
   17ad8:	ldr	r0, [sp, #4]
   17adc:	ldr	r1, [fp, #-4]
   17ae0:	ldr	r2, [sp, #8]
   17ae4:	str	r0, [sp]
   17ae8:	bl	10cb8 <memcpy@plt>
   17aec:	ldr	r0, [sp]
   17af0:	mov	sp, fp
   17af4:	pop	{fp, pc}
   17af8:	push	{fp, lr}
   17afc:	mov	fp, sp
   17b00:	sub	sp, sp, #8
   17b04:	str	r0, [sp, #4]
   17b08:	ldr	r0, [sp, #4]
   17b0c:	ldr	r1, [sp, #4]
   17b10:	str	r0, [sp]
   17b14:	mov	r0, r1
   17b18:	bl	10da8 <strlen@plt>
   17b1c:	add	r1, r0, #1
   17b20:	ldr	r0, [sp]
   17b24:	bl	17a30 <__assert_fail@plt+0x6bc8>
   17b28:	mov	sp, fp
   17b2c:	pop	{fp, pc}
   17b30:	push	{fp, lr}
   17b34:	mov	fp, sp
   17b38:	sub	sp, sp, #8
   17b3c:	movw	r0, #45264	; 0xb0d0
   17b40:	movt	r0, #2
   17b44:	ldr	r0, [r0]
   17b48:	movw	r1, #44352	; 0xad40
   17b4c:	movt	r1, #1
   17b50:	str	r0, [sp, #4]
   17b54:	mov	r0, r1
   17b58:	bl	10d9c <gettext@plt>
   17b5c:	ldr	r1, [sp, #4]
   17b60:	str	r0, [sp]
   17b64:	mov	r0, r1
   17b68:	movw	r1, #0
   17b6c:	movw	r2, #43299	; 0xa923
   17b70:	movt	r2, #1
   17b74:	ldr	r3, [sp]
   17b78:	bl	10d3c <error@plt>
   17b7c:	bl	10e50 <abort@plt>
   17b80:	push	{fp, lr}
   17b84:	mov	fp, sp
   17b88:	sub	sp, sp, #16
   17b8c:	str	r0, [sp, #8]
   17b90:	str	r1, [sp, #4]
   17b94:	ldr	r0, [sp, #8]
   17b98:	cmp	r0, #0
   17b9c:	beq	17bac <__assert_fail@plt+0x6d44>
   17ba0:	ldr	r0, [sp, #4]
   17ba4:	cmp	r0, #0
   17ba8:	bne	17bb8 <__assert_fail@plt+0x6d50>
   17bac:	movw	r0, #1
   17bb0:	str	r0, [sp, #4]
   17bb4:	str	r0, [sp, #8]
   17bb8:	ldr	r0, [sp, #4]
   17bbc:	cmp	r0, #0
   17bc0:	beq	17bf4 <__assert_fail@plt+0x6d8c>
   17bc4:	ldr	r0, [pc, #76]	; 17c18 <__assert_fail@plt+0x6db0>
   17bc8:	ldr	r1, [sp, #4]
   17bcc:	udiv	r0, r0, r1
   17bd0:	ldr	r1, [sp, #8]
   17bd4:	cmp	r0, r1
   17bd8:	bcs	17bf4 <__assert_fail@plt+0x6d8c>
   17bdc:	bl	10dc0 <__errno_location@plt>
   17be0:	movw	r1, #12
   17be4:	str	r1, [r0]
   17be8:	movw	r0, #0
   17bec:	str	r0, [fp, #-4]
   17bf0:	b	17c0c <__assert_fail@plt+0x6da4>
   17bf4:	ldr	r0, [sp, #8]
   17bf8:	ldr	r1, [sp, #4]
   17bfc:	bl	10c58 <calloc@plt>
   17c00:	str	r0, [sp]
   17c04:	ldr	r0, [sp]
   17c08:	str	r0, [fp, #-4]
   17c0c:	ldr	r0, [fp, #-4]
   17c10:	mov	sp, fp
   17c14:	pop	{fp, pc}
   17c18:	svcvc	0x00ffffff
   17c1c:	push	{fp, lr}
   17c20:	mov	fp, sp
   17c24:	sub	sp, sp, #16
   17c28:	str	r0, [sp, #8]
   17c2c:	ldr	r0, [sp, #8]
   17c30:	cmp	r0, #0
   17c34:	bne	17c40 <__assert_fail@plt+0x6dd8>
   17c38:	movw	r0, #1
   17c3c:	str	r0, [sp, #8]
   17c40:	ldr	r0, [pc, #64]	; 17c88 <__assert_fail@plt+0x6e20>
   17c44:	ldr	r1, [sp, #8]
   17c48:	cmp	r0, r1
   17c4c:	bcs	17c68 <__assert_fail@plt+0x6e00>
   17c50:	bl	10dc0 <__errno_location@plt>
   17c54:	movw	r1, #12
   17c58:	str	r1, [r0]
   17c5c:	movw	r0, #0
   17c60:	str	r0, [fp, #-4]
   17c64:	b	17c7c <__assert_fail@plt+0x6e14>
   17c68:	ldr	r0, [sp, #8]
   17c6c:	bl	10d54 <malloc@plt>
   17c70:	str	r0, [sp, #4]
   17c74:	ldr	r0, [sp, #4]
   17c78:	str	r0, [fp, #-4]
   17c7c:	ldr	r0, [fp, #-4]
   17c80:	mov	sp, fp
   17c84:	pop	{fp, pc}
   17c88:	svcvc	0x00ffffff
   17c8c:	push	{fp, lr}
   17c90:	mov	fp, sp
   17c94:	sub	sp, sp, #16
   17c98:	str	r0, [sp, #8]
   17c9c:	str	r1, [sp, #4]
   17ca0:	ldr	r0, [sp, #8]
   17ca4:	movw	r1, #0
   17ca8:	cmp	r0, r1
   17cac:	bne	17cc0 <__assert_fail@plt+0x6e58>
   17cb0:	ldr	r0, [sp, #4]
   17cb4:	bl	17c1c <__assert_fail@plt+0x6db4>
   17cb8:	str	r0, [fp, #-4]
   17cbc:	b	17d20 <__assert_fail@plt+0x6eb8>
   17cc0:	ldr	r0, [sp, #4]
   17cc4:	cmp	r0, #0
   17cc8:	bne	17ce0 <__assert_fail@plt+0x6e78>
   17ccc:	ldr	r0, [sp, #8]
   17cd0:	bl	18050 <__assert_fail@plt+0x71e8>
   17cd4:	movw	r0, #0
   17cd8:	str	r0, [fp, #-4]
   17cdc:	b	17d20 <__assert_fail@plt+0x6eb8>
   17ce0:	ldr	r0, [pc, #68]	; 17d2c <__assert_fail@plt+0x6ec4>
   17ce4:	ldr	r1, [sp, #4]
   17ce8:	cmp	r0, r1
   17cec:	bcs	17d08 <__assert_fail@plt+0x6ea0>
   17cf0:	bl	10dc0 <__errno_location@plt>
   17cf4:	movw	r1, #12
   17cf8:	str	r1, [r0]
   17cfc:	movw	r0, #0
   17d00:	str	r0, [fp, #-4]
   17d04:	b	17d20 <__assert_fail@plt+0x6eb8>
   17d08:	ldr	r0, [sp, #8]
   17d0c:	ldr	r1, [sp, #4]
   17d10:	bl	10cdc <realloc@plt>
   17d14:	str	r0, [sp]
   17d18:	ldr	r0, [sp]
   17d1c:	str	r0, [fp, #-4]
   17d20:	ldr	r0, [fp, #-4]
   17d24:	mov	sp, fp
   17d28:	pop	{fp, pc}
   17d2c:	svcvc	0x00ffffff
   17d30:	push	{fp, lr}
   17d34:	mov	fp, sp
   17d38:	sub	sp, sp, #24
   17d3c:	str	r0, [fp, #-8]
   17d40:	str	r1, [sp, #12]
   17d44:	ldr	r0, [fp, #-8]
   17d48:	str	r0, [sp, #8]
   17d4c:	ldr	r0, [sp, #12]
   17d50:	str	r0, [sp, #4]
   17d54:	ldr	r0, [sp, #8]
   17d58:	ldr	r1, [sp, #4]
   17d5c:	cmp	r0, r1
   17d60:	bne	17d70 <__assert_fail@plt+0x6f08>
   17d64:	movw	r0, #0
   17d68:	str	r0, [fp, #-4]
   17d6c:	b	17ddc <__assert_fail@plt+0x6f74>
   17d70:	b	17d74 <__assert_fail@plt+0x6f0c>
   17d74:	ldr	r0, [sp, #8]
   17d78:	ldrb	r0, [r0]
   17d7c:	bl	19d70 <__assert_fail@plt+0x8f08>
   17d80:	strb	r0, [sp, #3]
   17d84:	ldr	r0, [sp, #4]
   17d88:	ldrb	r0, [r0]
   17d8c:	bl	19d70 <__assert_fail@plt+0x8f08>
   17d90:	strb	r0, [sp, #2]
   17d94:	ldrb	r0, [sp, #3]
   17d98:	cmp	r0, #0
   17d9c:	bne	17da4 <__assert_fail@plt+0x6f3c>
   17da0:	b	17dcc <__assert_fail@plt+0x6f64>
   17da4:	ldr	r0, [sp, #8]
   17da8:	add	r0, r0, #1
   17dac:	str	r0, [sp, #8]
   17db0:	ldr	r0, [sp, #4]
   17db4:	add	r0, r0, #1
   17db8:	str	r0, [sp, #4]
   17dbc:	ldrb	r0, [sp, #3]
   17dc0:	ldrb	r1, [sp, #2]
   17dc4:	cmp	r0, r1
   17dc8:	beq	17d74 <__assert_fail@plt+0x6f0c>
   17dcc:	ldrb	r0, [sp, #3]
   17dd0:	ldrb	r1, [sp, #2]
   17dd4:	sub	r0, r0, r1
   17dd8:	str	r0, [fp, #-4]
   17ddc:	ldr	r0, [fp, #-4]
   17de0:	mov	sp, fp
   17de4:	pop	{fp, pc}
   17de8:	push	{fp, lr}
   17dec:	mov	fp, sp
   17df0:	sub	sp, sp, #16
   17df4:	str	r0, [sp, #8]
   17df8:	ldr	r0, [sp, #8]
   17dfc:	bl	10d18 <__fpending@plt>
   17e00:	cmp	r0, #0
   17e04:	movw	r0, #0
   17e08:	movne	r0, #1
   17e0c:	and	r0, r0, #1
   17e10:	strb	r0, [sp, #7]
   17e14:	ldr	r0, [sp, #8]
   17e18:	bl	10d24 <ferror_unlocked@plt>
   17e1c:	cmp	r0, #0
   17e20:	movw	r0, #0
   17e24:	movne	r0, #1
   17e28:	and	r0, r0, #1
   17e2c:	strb	r0, [sp, #6]
   17e30:	ldr	r0, [sp, #8]
   17e34:	bl	17eb8 <__assert_fail@plt+0x7050>
   17e38:	cmp	r0, #0
   17e3c:	movw	r0, #0
   17e40:	movne	r0, #1
   17e44:	and	r0, r0, #1
   17e48:	strb	r0, [sp, #5]
   17e4c:	ldrb	r0, [sp, #6]
   17e50:	tst	r0, #1
   17e54:	bne	17e80 <__assert_fail@plt+0x7018>
   17e58:	ldrb	r0, [sp, #5]
   17e5c:	tst	r0, #1
   17e60:	beq	17ea4 <__assert_fail@plt+0x703c>
   17e64:	ldrb	r0, [sp, #7]
   17e68:	tst	r0, #1
   17e6c:	bne	17e80 <__assert_fail@plt+0x7018>
   17e70:	bl	10dc0 <__errno_location@plt>
   17e74:	ldr	r0, [r0]
   17e78:	cmp	r0, #9
   17e7c:	beq	17ea4 <__assert_fail@plt+0x703c>
   17e80:	ldrb	r0, [sp, #5]
   17e84:	tst	r0, #1
   17e88:	bne	17e98 <__assert_fail@plt+0x7030>
   17e8c:	bl	10dc0 <__errno_location@plt>
   17e90:	movw	r1, #0
   17e94:	str	r1, [r0]
   17e98:	mvn	r0, #0
   17e9c:	str	r0, [fp, #-4]
   17ea0:	b	17eac <__assert_fail@plt+0x7044>
   17ea4:	movw	r0, #0
   17ea8:	str	r0, [fp, #-4]
   17eac:	ldr	r0, [fp, #-4]
   17eb0:	mov	sp, fp
   17eb4:	pop	{fp, pc}
   17eb8:	push	{fp, lr}
   17ebc:	mov	fp, sp
   17ec0:	sub	sp, sp, #32
   17ec4:	str	r0, [fp, #-8]
   17ec8:	movw	r0, #0
   17ecc:	str	r0, [fp, #-12]
   17ed0:	str	r0, [sp, #12]
   17ed4:	ldr	r0, [fp, #-8]
   17ed8:	bl	10de4 <fileno@plt>
   17edc:	str	r0, [sp, #16]
   17ee0:	ldr	r0, [sp, #16]
   17ee4:	cmp	r0, #0
   17ee8:	bge	17efc <__assert_fail@plt+0x7094>
   17eec:	ldr	r0, [fp, #-8]
   17ef0:	bl	10df0 <fclose@plt>
   17ef4:	str	r0, [fp, #-4]
   17ef8:	b	17f98 <__assert_fail@plt+0x7130>
   17efc:	ldr	r0, [fp, #-8]
   17f00:	bl	10d6c <__freading@plt>
   17f04:	cmp	r0, #0
   17f08:	beq	17f40 <__assert_fail@plt+0x70d8>
   17f0c:	ldr	r0, [fp, #-8]
   17f10:	bl	10de4 <fileno@plt>
   17f14:	mov	r1, sp
   17f18:	mov	r2, #1
   17f1c:	str	r2, [r1]
   17f20:	mov	r1, #0
   17f24:	mov	r2, r1
   17f28:	mov	r3, r1
   17f2c:	bl	10d00 <lseek64@plt>
   17f30:	and	r0, r0, r1
   17f34:	cmn	r0, #1
   17f38:	beq	17f5c <__assert_fail@plt+0x70f4>
   17f3c:	b	17f40 <__assert_fail@plt+0x70d8>
   17f40:	ldr	r0, [fp, #-8]
   17f44:	bl	17fa4 <__assert_fail@plt+0x713c>
   17f48:	cmp	r0, #0
   17f4c:	beq	17f5c <__assert_fail@plt+0x70f4>
   17f50:	bl	10dc0 <__errno_location@plt>
   17f54:	ldr	r0, [r0]
   17f58:	str	r0, [fp, #-12]
   17f5c:	ldr	r0, [fp, #-8]
   17f60:	bl	10df0 <fclose@plt>
   17f64:	str	r0, [sp, #12]
   17f68:	ldr	r0, [fp, #-12]
   17f6c:	cmp	r0, #0
   17f70:	beq	17f90 <__assert_fail@plt+0x7128>
   17f74:	ldr	r0, [fp, #-12]
   17f78:	str	r0, [sp, #8]
   17f7c:	bl	10dc0 <__errno_location@plt>
   17f80:	ldr	r1, [sp, #8]
   17f84:	str	r1, [r0]
   17f88:	mvn	r0, #0
   17f8c:	str	r0, [sp, #12]
   17f90:	ldr	r0, [sp, #12]
   17f94:	str	r0, [fp, #-4]
   17f98:	ldr	r0, [fp, #-4]
   17f9c:	mov	sp, fp
   17fa0:	pop	{fp, pc}
   17fa4:	push	{fp, lr}
   17fa8:	mov	fp, sp
   17fac:	sub	sp, sp, #8
   17fb0:	str	r0, [sp]
   17fb4:	ldr	r0, [sp]
   17fb8:	movw	r1, #0
   17fbc:	cmp	r0, r1
   17fc0:	beq	17fd4 <__assert_fail@plt+0x716c>
   17fc4:	ldr	r0, [sp]
   17fc8:	bl	10d6c <__freading@plt>
   17fcc:	cmp	r0, #0
   17fd0:	bne	17fe4 <__assert_fail@plt+0x717c>
   17fd4:	ldr	r0, [sp]
   17fd8:	bl	10c94 <fflush@plt>
   17fdc:	str	r0, [sp, #4]
   17fe0:	b	17ff8 <__assert_fail@plt+0x7190>
   17fe4:	ldr	r0, [sp]
   17fe8:	bl	18004 <__assert_fail@plt+0x719c>
   17fec:	ldr	r0, [sp]
   17ff0:	bl	10c94 <fflush@plt>
   17ff4:	str	r0, [sp, #4]
   17ff8:	ldr	r0, [sp, #4]
   17ffc:	mov	sp, fp
   18000:	pop	{fp, pc}
   18004:	push	{fp, lr}
   18008:	mov	fp, sp
   1800c:	sub	sp, sp, #8
   18010:	str	r0, [sp, #4]
   18014:	ldr	r0, [sp, #4]
   18018:	ldr	r0, [r0]
   1801c:	and	r0, r0, #256	; 0x100
   18020:	cmp	r0, #0
   18024:	beq	18048 <__assert_fail@plt+0x71e0>
   18028:	ldr	r0, [sp, #4]
   1802c:	mov	r1, sp
   18030:	mov	r2, #1
   18034:	str	r2, [r1]
   18038:	mov	r1, #0
   1803c:	mov	r2, r1
   18040:	mov	r3, r1
   18044:	bl	18090 <__assert_fail@plt+0x7228>
   18048:	mov	sp, fp
   1804c:	pop	{fp, pc}
   18050:	push	{fp, lr}
   18054:	mov	fp, sp
   18058:	sub	sp, sp, #16
   1805c:	str	r0, [fp, #-4]
   18060:	bl	10dc0 <__errno_location@plt>
   18064:	ldr	r0, [r0]
   18068:	str	r0, [sp, #8]
   1806c:	ldr	r0, [fp, #-4]
   18070:	bl	10ca0 <free@plt>
   18074:	ldr	r0, [sp, #8]
   18078:	str	r0, [sp, #4]
   1807c:	bl	10dc0 <__errno_location@plt>
   18080:	ldr	r1, [sp, #4]
   18084:	str	r1, [r0]
   18088:	mov	sp, fp
   1808c:	pop	{fp, pc}
   18090:	push	{fp, lr}
   18094:	mov	fp, sp
   18098:	sub	sp, sp, #32
   1809c:	ldr	r1, [fp, #8]
   180a0:	str	r0, [fp, #-8]
   180a4:	str	r3, [sp, #20]
   180a8:	str	r2, [sp, #16]
   180ac:	ldr	r0, [fp, #-8]
   180b0:	ldr	r0, [r0, #8]
   180b4:	ldr	r2, [fp, #-8]
   180b8:	ldr	r2, [r2, #4]
   180bc:	cmp	r0, r2
   180c0:	bne	1816c <__assert_fail@plt+0x7304>
   180c4:	ldr	r0, [fp, #-8]
   180c8:	ldr	r0, [r0, #20]
   180cc:	ldr	r1, [fp, #-8]
   180d0:	ldr	r1, [r1, #16]
   180d4:	cmp	r0, r1
   180d8:	bne	1816c <__assert_fail@plt+0x7304>
   180dc:	ldr	r0, [fp, #-8]
   180e0:	ldr	r0, [r0, #36]	; 0x24
   180e4:	movw	r1, #0
   180e8:	cmp	r0, r1
   180ec:	bne	1816c <__assert_fail@plt+0x7304>
   180f0:	ldr	r0, [fp, #-8]
   180f4:	bl	10de4 <fileno@plt>
   180f8:	ldr	r2, [sp, #16]
   180fc:	ldr	r3, [sp, #20]
   18100:	ldr	r1, [fp, #8]
   18104:	mov	ip, sp
   18108:	str	r1, [ip]
   1810c:	bl	10d00 <lseek64@plt>
   18110:	str	r1, [sp, #12]
   18114:	str	r0, [sp, #8]
   18118:	ldr	r0, [sp, #8]
   1811c:	ldr	r1, [sp, #12]
   18120:	and	r0, r0, r1
   18124:	cmn	r0, #1
   18128:	bne	1813c <__assert_fail@plt+0x72d4>
   1812c:	b	18130 <__assert_fail@plt+0x72c8>
   18130:	mvn	r0, #0
   18134:	str	r0, [fp, #-4]
   18138:	b	1818c <__assert_fail@plt+0x7324>
   1813c:	ldr	r0, [fp, #-8]
   18140:	ldr	r1, [r0]
   18144:	bic	r1, r1, #16
   18148:	str	r1, [r0]
   1814c:	ldr	r0, [sp, #8]
   18150:	ldr	r1, [sp, #12]
   18154:	ldr	r2, [fp, #-8]
   18158:	str	r1, [r2, #84]	; 0x54
   1815c:	str	r0, [r2, #80]	; 0x50
   18160:	movw	r0, #0
   18164:	str	r0, [fp, #-4]
   18168:	b	1818c <__assert_fail@plt+0x7324>
   1816c:	ldr	r0, [fp, #-8]
   18170:	ldr	r2, [sp, #16]
   18174:	ldr	r3, [sp, #20]
   18178:	ldr	r1, [fp, #8]
   1817c:	mov	ip, sp
   18180:	str	r1, [ip]
   18184:	bl	10dfc <fseeko64@plt>
   18188:	str	r0, [fp, #-4]
   1818c:	ldr	r0, [fp, #-4]
   18190:	mov	sp, fp
   18194:	pop	{fp, pc}
   18198:	push	{fp, lr}
   1819c:	mov	fp, sp
   181a0:	bl	10dc0 <__errno_location@plt>
   181a4:	movw	r1, #12
   181a8:	str	r1, [r0]
   181ac:	movw	r0, #0
   181b0:	pop	{fp, pc}
   181b4:	push	{fp, lr}
   181b8:	mov	fp, sp
   181bc:	sub	sp, sp, #8
   181c0:	str	r0, [sp, #4]
   181c4:	ldr	r0, [sp, #4]
   181c8:	cmn	r0, #1
   181cc:	bhi	181e0 <__assert_fail@plt+0x7378>
   181d0:	ldr	r0, [sp, #4]
   181d4:	bl	17c1c <__assert_fail@plt+0x6db4>
   181d8:	str	r0, [sp]
   181dc:	b	181e8 <__assert_fail@plt+0x7380>
   181e0:	bl	18198 <__assert_fail@plt+0x7330>
   181e4:	str	r0, [sp]
   181e8:	ldr	r0, [sp]
   181ec:	mov	sp, fp
   181f0:	pop	{fp, pc}
   181f4:	push	{fp, lr}
   181f8:	mov	fp, sp
   181fc:	sub	sp, sp, #16
   18200:	str	r0, [fp, #-4]
   18204:	str	r1, [sp, #8]
   18208:	ldr	r0, [sp, #8]
   1820c:	cmn	r0, #1
   18210:	bhi	18248 <__assert_fail@plt+0x73e0>
   18214:	ldr	r0, [fp, #-4]
   18218:	ldr	r1, [sp, #8]
   1821c:	ldr	r2, [sp, #8]
   18220:	cmp	r2, #0
   18224:	movw	r2, #0
   18228:	movne	r2, #1
   1822c:	mvn	r3, #0
   18230:	eor	r2, r2, r3
   18234:	and	r2, r2, #1
   18238:	orr	r1, r1, r2
   1823c:	bl	17c8c <__assert_fail@plt+0x6e24>
   18240:	str	r0, [sp, #4]
   18244:	b	18250 <__assert_fail@plt+0x73e8>
   18248:	bl	18198 <__assert_fail@plt+0x7330>
   1824c:	str	r0, [sp, #4]
   18250:	ldr	r0, [sp, #4]
   18254:	mov	sp, fp
   18258:	pop	{fp, pc}
   1825c:	push	{fp, lr}
   18260:	mov	fp, sp
   18264:	sub	sp, sp, #16
   18268:	str	r0, [sp, #8]
   1826c:	str	r1, [sp, #4]
   18270:	ldr	r0, [sp, #8]
   18274:	mvn	r1, #0
   18278:	cmp	r1, r0
   1827c:	bcs	182a0 <__assert_fail@plt+0x7438>
   18280:	ldr	r0, [sp, #4]
   18284:	cmp	r0, #0
   18288:	beq	18298 <__assert_fail@plt+0x7430>
   1828c:	bl	18198 <__assert_fail@plt+0x7330>
   18290:	str	r0, [fp, #-4]
   18294:	b	182e0 <__assert_fail@plt+0x7478>
   18298:	movw	r0, #0
   1829c:	str	r0, [sp, #8]
   182a0:	ldr	r0, [sp, #4]
   182a4:	mvn	r1, #0
   182a8:	cmp	r1, r0
   182ac:	bcs	182d0 <__assert_fail@plt+0x7468>
   182b0:	ldr	r0, [sp, #8]
   182b4:	cmp	r0, #0
   182b8:	beq	182c8 <__assert_fail@plt+0x7460>
   182bc:	bl	18198 <__assert_fail@plt+0x7330>
   182c0:	str	r0, [fp, #-4]
   182c4:	b	182e0 <__assert_fail@plt+0x7478>
   182c8:	movw	r0, #0
   182cc:	str	r0, [sp, #4]
   182d0:	ldr	r0, [sp, #8]
   182d4:	ldr	r1, [sp, #4]
   182d8:	bl	17b80 <__assert_fail@plt+0x6d18>
   182dc:	str	r0, [fp, #-4]
   182e0:	ldr	r0, [fp, #-4]
   182e4:	mov	sp, fp
   182e8:	pop	{fp, pc}
   182ec:	push	{fp, lr}
   182f0:	mov	fp, sp
   182f4:	sub	sp, sp, #16
   182f8:	str	r0, [fp, #-4]
   182fc:	str	r1, [sp, #8]
   18300:	str	r2, [sp, #4]
   18304:	ldr	r0, [sp, #8]
   18308:	cmp	r0, #0
   1830c:	beq	1831c <__assert_fail@plt+0x74b4>
   18310:	ldr	r0, [sp, #4]
   18314:	cmp	r0, #0
   18318:	bne	18328 <__assert_fail@plt+0x74c0>
   1831c:	movw	r0, #1
   18320:	str	r0, [sp, #4]
   18324:	str	r0, [sp, #8]
   18328:	ldr	r0, [sp, #8]
   1832c:	cmn	r0, #1
   18330:	bhi	18358 <__assert_fail@plt+0x74f0>
   18334:	ldr	r0, [sp, #4]
   18338:	cmn	r0, #1
   1833c:	bhi	18358 <__assert_fail@plt+0x74f0>
   18340:	ldr	r0, [fp, #-4]
   18344:	ldr	r1, [sp, #8]
   18348:	ldr	r2, [sp, #4]
   1834c:	bl	18478 <__assert_fail@plt+0x7610>
   18350:	str	r0, [sp]
   18354:	b	18360 <__assert_fail@plt+0x74f8>
   18358:	bl	18198 <__assert_fail@plt+0x7330>
   1835c:	str	r0, [sp]
   18360:	ldr	r0, [sp]
   18364:	mov	sp, fp
   18368:	pop	{fp, pc}
   1836c:	push	{fp, lr}
   18370:	mov	fp, sp
   18374:	sub	sp, sp, #8
   18378:	movw	r0, #14
   1837c:	bl	10e20 <nl_langinfo@plt>
   18380:	str	r0, [sp, #4]
   18384:	ldr	r0, [sp, #4]
   18388:	movw	r1, #0
   1838c:	cmp	r0, r1
   18390:	bne	183a0 <__assert_fail@plt+0x7538>
   18394:	movw	r0, #42163	; 0xa4b3
   18398:	movt	r0, #1
   1839c:	str	r0, [sp, #4]
   183a0:	ldr	r0, [sp, #4]
   183a4:	ldrb	r0, [r0]
   183a8:	cmp	r0, #0
   183ac:	bne	183bc <__assert_fail@plt+0x7554>
   183b0:	movw	r0, #44369	; 0xad51
   183b4:	movt	r0, #1
   183b8:	str	r0, [sp, #4]
   183bc:	ldr	r0, [sp, #4]
   183c0:	mov	sp, fp
   183c4:	pop	{fp, pc}
   183c8:	push	{fp, lr}
   183cc:	mov	fp, sp
   183d0:	sub	sp, sp, #32
   183d4:	str	r0, [fp, #-8]
   183d8:	str	r1, [fp, #-12]
   183dc:	str	r2, [sp, #16]
   183e0:	str	r3, [sp, #12]
   183e4:	ldr	r0, [fp, #-8]
   183e8:	movw	r1, #0
   183ec:	cmp	r0, r1
   183f0:	bne	183fc <__assert_fail@plt+0x7594>
   183f4:	add	r0, sp, #4
   183f8:	str	r0, [fp, #-8]
   183fc:	ldr	r0, [fp, #-8]
   18400:	ldr	r1, [fp, #-12]
   18404:	ldr	r2, [sp, #16]
   18408:	ldr	r3, [sp, #12]
   1840c:	bl	10d30 <mbrtowc@plt>
   18410:	str	r0, [sp, #8]
   18414:	ldr	r0, [sp, #8]
   18418:	mvn	r1, #1
   1841c:	cmp	r1, r0
   18420:	bhi	18464 <__assert_fail@plt+0x75fc>
   18424:	ldr	r0, [sp, #16]
   18428:	cmp	r0, #0
   1842c:	beq	18464 <__assert_fail@plt+0x75fc>
   18430:	movw	r0, #0
   18434:	bl	19df8 <__assert_fail@plt+0x8f90>
   18438:	tst	r0, #1
   1843c:	bne	18464 <__assert_fail@plt+0x75fc>
   18440:	ldr	r0, [fp, #-12]
   18444:	ldrb	r0, [r0]
   18448:	strb	r0, [sp, #3]
   1844c:	ldrb	r0, [sp, #3]
   18450:	ldr	r1, [fp, #-8]
   18454:	str	r0, [r1]
   18458:	movw	r0, #1
   1845c:	str	r0, [fp, #-4]
   18460:	b	1846c <__assert_fail@plt+0x7604>
   18464:	ldr	r0, [sp, #8]
   18468:	str	r0, [fp, #-4]
   1846c:	ldr	r0, [fp, #-4]
   18470:	mov	sp, fp
   18474:	pop	{fp, pc}
   18478:	push	{fp, lr}
   1847c:	mov	fp, sp
   18480:	sub	sp, sp, #96	; 0x60
   18484:	str	r0, [fp, #-8]
   18488:	str	r1, [fp, #-12]
   1848c:	str	r2, [fp, #-16]
   18490:	b	18848 <__assert_fail@plt+0x79e0>
   18494:	b	18668 <__assert_fail@plt+0x7800>
   18498:	ldr	r0, [fp, #-16]
   1849c:	cmp	r0, #0
   184a0:	bcs	185a4 <__assert_fail@plt+0x773c>
   184a4:	ldr	r0, [fp, #-12]
   184a8:	cmp	r0, #0
   184ac:	bcs	18534 <__assert_fail@plt+0x76cc>
   184b0:	b	184d0 <__assert_fail@plt+0x7668>
   184b4:	ldr	r0, [fp, #-12]
   184b8:	ldr	r1, [fp, #-16]
   184bc:	movw	r2, #127	; 0x7f
   184c0:	udiv	r1, r2, r1
   184c4:	cmp	r0, r1
   184c8:	bcc	18638 <__assert_fail@plt+0x77d0>
   184cc:	b	18650 <__assert_fail@plt+0x77e8>
   184d0:	b	184e4 <__assert_fail@plt+0x767c>
   184d4:	ldr	r0, [fp, #-16]
   184d8:	cmp	r0, #1
   184dc:	bcc	184f4 <__assert_fail@plt+0x768c>
   184e0:	b	18500 <__assert_fail@plt+0x7698>
   184e4:	ldr	r0, [fp, #-16]
   184e8:	movw	r1, #0
   184ec:	cmp	r1, r0
   184f0:	bcs	18500 <__assert_fail@plt+0x7698>
   184f4:	movw	r0, #0
   184f8:	str	r0, [fp, #-24]	; 0xffffffe8
   184fc:	b	18518 <__assert_fail@plt+0x76b0>
   18500:	ldr	r0, [fp, #-16]
   18504:	movw	r1, #0
   18508:	sub	r0, r1, r0
   1850c:	movw	r1, #127	; 0x7f
   18510:	udiv	r0, r1, r0
   18514:	str	r0, [fp, #-24]	; 0xffffffe8
   18518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1851c:	ldr	r1, [fp, #-12]
   18520:	mvn	r2, #0
   18524:	sub	r1, r2, r1
   18528:	cmp	r0, r1
   1852c:	bls	18638 <__assert_fail@plt+0x77d0>
   18530:	b	18650 <__assert_fail@plt+0x77e8>
   18534:	ldr	r0, [fp, #-16]
   18538:	cmn	r0, #1
   1853c:	bne	18588 <__assert_fail@plt+0x7720>
   18540:	b	18560 <__assert_fail@plt+0x76f8>
   18544:	ldr	r0, [fp, #-12]
   18548:	mvn	r1, #127	; 0x7f
   1854c:	add	r0, r0, r1
   18550:	movw	r1, #0
   18554:	cmp	r1, r0
   18558:	bcc	18638 <__assert_fail@plt+0x77d0>
   1855c:	b	18650 <__assert_fail@plt+0x77e8>
   18560:	ldr	r0, [fp, #-12]
   18564:	movw	r1, #0
   18568:	cmp	r1, r0
   1856c:	bcs	18650 <__assert_fail@plt+0x77e8>
   18570:	ldr	r0, [fp, #-12]
   18574:	sub	r0, r0, #1
   18578:	movw	r1, #127	; 0x7f
   1857c:	cmp	r1, r0
   18580:	bcc	18638 <__assert_fail@plt+0x77d0>
   18584:	b	18650 <__assert_fail@plt+0x77e8>
   18588:	ldr	r0, [fp, #-16]
   1858c:	mvn	r1, #127	; 0x7f
   18590:	udiv	r0, r1, r0
   18594:	ldr	r1, [fp, #-12]
   18598:	cmp	r0, r1
   1859c:	bcc	18638 <__assert_fail@plt+0x77d0>
   185a0:	b	18650 <__assert_fail@plt+0x77e8>
   185a4:	ldr	r0, [fp, #-16]
   185a8:	cmp	r0, #0
   185ac:	bne	185b4 <__assert_fail@plt+0x774c>
   185b0:	b	18650 <__assert_fail@plt+0x77e8>
   185b4:	ldr	r0, [fp, #-12]
   185b8:	cmp	r0, #0
   185bc:	bcs	18620 <__assert_fail@plt+0x77b8>
   185c0:	ldr	r0, [fp, #-12]
   185c4:	cmn	r0, #1
   185c8:	bne	18604 <__assert_fail@plt+0x779c>
   185cc:	b	185ec <__assert_fail@plt+0x7784>
   185d0:	ldr	r0, [fp, #-16]
   185d4:	mvn	r1, #127	; 0x7f
   185d8:	add	r0, r0, r1
   185dc:	movw	r1, #0
   185e0:	cmp	r1, r0
   185e4:	bcc	18638 <__assert_fail@plt+0x77d0>
   185e8:	b	18650 <__assert_fail@plt+0x77e8>
   185ec:	ldr	r0, [fp, #-16]
   185f0:	sub	r0, r0, #1
   185f4:	movw	r1, #127	; 0x7f
   185f8:	cmp	r1, r0
   185fc:	bcc	18638 <__assert_fail@plt+0x77d0>
   18600:	b	18650 <__assert_fail@plt+0x77e8>
   18604:	ldr	r0, [fp, #-12]
   18608:	mvn	r1, #127	; 0x7f
   1860c:	udiv	r0, r1, r0
   18610:	ldr	r1, [fp, #-16]
   18614:	cmp	r0, r1
   18618:	bcc	18638 <__assert_fail@plt+0x77d0>
   1861c:	b	18650 <__assert_fail@plt+0x77e8>
   18620:	ldr	r0, [fp, #-16]
   18624:	movw	r1, #127	; 0x7f
   18628:	udiv	r0, r1, r0
   1862c:	ldr	r1, [fp, #-12]
   18630:	cmp	r0, r1
   18634:	bcs	18650 <__assert_fail@plt+0x77e8>
   18638:	ldr	r0, [fp, #-12]
   1863c:	ldr	r1, [fp, #-16]
   18640:	mul	r0, r0, r1
   18644:	sxtb	r0, r0
   18648:	str	r0, [fp, #-20]	; 0xffffffec
   1864c:	b	19778 <__assert_fail@plt+0x8910>
   18650:	ldr	r0, [fp, #-12]
   18654:	ldr	r1, [fp, #-16]
   18658:	mul	r0, r0, r1
   1865c:	sxtb	r0, r0
   18660:	str	r0, [fp, #-20]	; 0xffffffec
   18664:	b	19790 <__assert_fail@plt+0x8928>
   18668:	ldr	r0, [fp, #-16]
   1866c:	cmp	r0, #0
   18670:	bcs	1877c <__assert_fail@plt+0x7914>
   18674:	ldr	r0, [fp, #-12]
   18678:	cmp	r0, #0
   1867c:	bcs	18704 <__assert_fail@plt+0x789c>
   18680:	b	186a0 <__assert_fail@plt+0x7838>
   18684:	ldr	r0, [fp, #-12]
   18688:	ldr	r1, [fp, #-16]
   1868c:	movw	r2, #255	; 0xff
   18690:	udiv	r1, r2, r1
   18694:	cmp	r0, r1
   18698:	bcc	18818 <__assert_fail@plt+0x79b0>
   1869c:	b	18830 <__assert_fail@plt+0x79c8>
   186a0:	b	186b4 <__assert_fail@plt+0x784c>
   186a4:	ldr	r0, [fp, #-16]
   186a8:	cmp	r0, #1
   186ac:	bcc	186c4 <__assert_fail@plt+0x785c>
   186b0:	b	186d0 <__assert_fail@plt+0x7868>
   186b4:	ldr	r0, [fp, #-16]
   186b8:	movw	r1, #0
   186bc:	cmp	r1, r0
   186c0:	bcs	186d0 <__assert_fail@plt+0x7868>
   186c4:	movw	r0, #0
   186c8:	str	r0, [fp, #-28]	; 0xffffffe4
   186cc:	b	186e8 <__assert_fail@plt+0x7880>
   186d0:	ldr	r0, [fp, #-16]
   186d4:	movw	r1, #0
   186d8:	sub	r0, r1, r0
   186dc:	movw	r1, #255	; 0xff
   186e0:	udiv	r0, r1, r0
   186e4:	str	r0, [fp, #-28]	; 0xffffffe4
   186e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   186ec:	ldr	r1, [fp, #-12]
   186f0:	mvn	r2, #0
   186f4:	sub	r1, r2, r1
   186f8:	cmp	r0, r1
   186fc:	bls	18818 <__assert_fail@plt+0x79b0>
   18700:	b	18830 <__assert_fail@plt+0x79c8>
   18704:	b	1870c <__assert_fail@plt+0x78a4>
   18708:	b	18710 <__assert_fail@plt+0x78a8>
   1870c:	b	18760 <__assert_fail@plt+0x78f8>
   18710:	ldr	r0, [fp, #-16]
   18714:	cmn	r0, #1
   18718:	bne	18760 <__assert_fail@plt+0x78f8>
   1871c:	b	18738 <__assert_fail@plt+0x78d0>
   18720:	ldr	r0, [fp, #-12]
   18724:	add	r0, r0, #0
   18728:	movw	r1, #0
   1872c:	cmp	r1, r0
   18730:	bcc	18818 <__assert_fail@plt+0x79b0>
   18734:	b	18830 <__assert_fail@plt+0x79c8>
   18738:	ldr	r0, [fp, #-12]
   1873c:	movw	r1, #0
   18740:	cmp	r1, r0
   18744:	bcs	18830 <__assert_fail@plt+0x79c8>
   18748:	ldr	r0, [fp, #-12]
   1874c:	sub	r0, r0, #1
   18750:	mvn	r1, #0
   18754:	cmp	r1, r0
   18758:	bcc	18818 <__assert_fail@plt+0x79b0>
   1875c:	b	18830 <__assert_fail@plt+0x79c8>
   18760:	ldr	r0, [fp, #-16]
   18764:	movw	r1, #0
   18768:	udiv	r0, r1, r0
   1876c:	ldr	r1, [fp, #-12]
   18770:	cmp	r0, r1
   18774:	bcc	18818 <__assert_fail@plt+0x79b0>
   18778:	b	18830 <__assert_fail@plt+0x79c8>
   1877c:	ldr	r0, [fp, #-16]
   18780:	cmp	r0, #0
   18784:	bne	1878c <__assert_fail@plt+0x7924>
   18788:	b	18830 <__assert_fail@plt+0x79c8>
   1878c:	ldr	r0, [fp, #-12]
   18790:	cmp	r0, #0
   18794:	bcs	18800 <__assert_fail@plt+0x7998>
   18798:	b	187a0 <__assert_fail@plt+0x7938>
   1879c:	b	187a4 <__assert_fail@plt+0x793c>
   187a0:	b	187e4 <__assert_fail@plt+0x797c>
   187a4:	ldr	r0, [fp, #-12]
   187a8:	cmn	r0, #1
   187ac:	bne	187e4 <__assert_fail@plt+0x797c>
   187b0:	b	187cc <__assert_fail@plt+0x7964>
   187b4:	ldr	r0, [fp, #-16]
   187b8:	add	r0, r0, #0
   187bc:	movw	r1, #0
   187c0:	cmp	r1, r0
   187c4:	bcc	18818 <__assert_fail@plt+0x79b0>
   187c8:	b	18830 <__assert_fail@plt+0x79c8>
   187cc:	ldr	r0, [fp, #-16]
   187d0:	sub	r0, r0, #1
   187d4:	mvn	r1, #0
   187d8:	cmp	r1, r0
   187dc:	bcc	18818 <__assert_fail@plt+0x79b0>
   187e0:	b	18830 <__assert_fail@plt+0x79c8>
   187e4:	ldr	r0, [fp, #-12]
   187e8:	movw	r1, #0
   187ec:	udiv	r0, r1, r0
   187f0:	ldr	r1, [fp, #-16]
   187f4:	cmp	r0, r1
   187f8:	bcc	18818 <__assert_fail@plt+0x79b0>
   187fc:	b	18830 <__assert_fail@plt+0x79c8>
   18800:	ldr	r0, [fp, #-16]
   18804:	movw	r1, #255	; 0xff
   18808:	udiv	r0, r1, r0
   1880c:	ldr	r1, [fp, #-12]
   18810:	cmp	r0, r1
   18814:	bcs	18830 <__assert_fail@plt+0x79c8>
   18818:	ldr	r0, [fp, #-12]
   1881c:	ldr	r1, [fp, #-16]
   18820:	mul	r0, r0, r1
   18824:	and	r0, r0, #255	; 0xff
   18828:	str	r0, [fp, #-20]	; 0xffffffec
   1882c:	b	19778 <__assert_fail@plt+0x8910>
   18830:	ldr	r0, [fp, #-12]
   18834:	ldr	r1, [fp, #-16]
   18838:	mul	r0, r0, r1
   1883c:	and	r0, r0, #255	; 0xff
   18840:	str	r0, [fp, #-20]	; 0xffffffec
   18844:	b	19790 <__assert_fail@plt+0x8928>
   18848:	b	18c00 <__assert_fail@plt+0x7d98>
   1884c:	b	18a20 <__assert_fail@plt+0x7bb8>
   18850:	ldr	r0, [fp, #-16]
   18854:	cmp	r0, #0
   18858:	bcs	1895c <__assert_fail@plt+0x7af4>
   1885c:	ldr	r0, [fp, #-12]
   18860:	cmp	r0, #0
   18864:	bcs	188ec <__assert_fail@plt+0x7a84>
   18868:	b	18888 <__assert_fail@plt+0x7a20>
   1886c:	ldr	r0, [fp, #-12]
   18870:	ldr	r1, [fp, #-16]
   18874:	movw	r2, #32767	; 0x7fff
   18878:	udiv	r1, r2, r1
   1887c:	cmp	r0, r1
   18880:	bcc	189f0 <__assert_fail@plt+0x7b88>
   18884:	b	18a08 <__assert_fail@plt+0x7ba0>
   18888:	b	1889c <__assert_fail@plt+0x7a34>
   1888c:	ldr	r0, [fp, #-16]
   18890:	cmp	r0, #1
   18894:	bcc	188ac <__assert_fail@plt+0x7a44>
   18898:	b	188b8 <__assert_fail@plt+0x7a50>
   1889c:	ldr	r0, [fp, #-16]
   188a0:	movw	r1, #0
   188a4:	cmp	r1, r0
   188a8:	bcs	188b8 <__assert_fail@plt+0x7a50>
   188ac:	movw	r0, #0
   188b0:	str	r0, [fp, #-32]	; 0xffffffe0
   188b4:	b	188d0 <__assert_fail@plt+0x7a68>
   188b8:	ldr	r0, [fp, #-16]
   188bc:	movw	r1, #0
   188c0:	sub	r0, r1, r0
   188c4:	movw	r1, #32767	; 0x7fff
   188c8:	udiv	r0, r1, r0
   188cc:	str	r0, [fp, #-32]	; 0xffffffe0
   188d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188d4:	ldr	r1, [fp, #-12]
   188d8:	mvn	r2, #0
   188dc:	sub	r1, r2, r1
   188e0:	cmp	r0, r1
   188e4:	bls	189f0 <__assert_fail@plt+0x7b88>
   188e8:	b	18a08 <__assert_fail@plt+0x7ba0>
   188ec:	ldr	r0, [fp, #-16]
   188f0:	cmn	r0, #1
   188f4:	bne	18940 <__assert_fail@plt+0x7ad8>
   188f8:	b	18918 <__assert_fail@plt+0x7ab0>
   188fc:	ldr	r0, [pc, #3760]	; 197b4 <__assert_fail@plt+0x894c>
   18900:	ldr	r1, [fp, #-12]
   18904:	add	r0, r1, r0
   18908:	movw	r1, #0
   1890c:	cmp	r1, r0
   18910:	bcc	189f0 <__assert_fail@plt+0x7b88>
   18914:	b	18a08 <__assert_fail@plt+0x7ba0>
   18918:	ldr	r0, [fp, #-12]
   1891c:	movw	r1, #0
   18920:	cmp	r1, r0
   18924:	bcs	18a08 <__assert_fail@plt+0x7ba0>
   18928:	ldr	r0, [fp, #-12]
   1892c:	sub	r0, r0, #1
   18930:	movw	r1, #32767	; 0x7fff
   18934:	cmp	r1, r0
   18938:	bcc	189f0 <__assert_fail@plt+0x7b88>
   1893c:	b	18a08 <__assert_fail@plt+0x7ba0>
   18940:	ldr	r0, [pc, #3692]	; 197b4 <__assert_fail@plt+0x894c>
   18944:	ldr	r1, [fp, #-16]
   18948:	udiv	r0, r0, r1
   1894c:	ldr	r1, [fp, #-12]
   18950:	cmp	r0, r1
   18954:	bcc	189f0 <__assert_fail@plt+0x7b88>
   18958:	b	18a08 <__assert_fail@plt+0x7ba0>
   1895c:	ldr	r0, [fp, #-16]
   18960:	cmp	r0, #0
   18964:	bne	1896c <__assert_fail@plt+0x7b04>
   18968:	b	18a08 <__assert_fail@plt+0x7ba0>
   1896c:	ldr	r0, [fp, #-12]
   18970:	cmp	r0, #0
   18974:	bcs	189d8 <__assert_fail@plt+0x7b70>
   18978:	ldr	r0, [fp, #-12]
   1897c:	cmn	r0, #1
   18980:	bne	189bc <__assert_fail@plt+0x7b54>
   18984:	b	189a4 <__assert_fail@plt+0x7b3c>
   18988:	ldr	r0, [pc, #3620]	; 197b4 <__assert_fail@plt+0x894c>
   1898c:	ldr	r1, [fp, #-16]
   18990:	add	r0, r1, r0
   18994:	movw	r1, #0
   18998:	cmp	r1, r0
   1899c:	bcc	189f0 <__assert_fail@plt+0x7b88>
   189a0:	b	18a08 <__assert_fail@plt+0x7ba0>
   189a4:	ldr	r0, [fp, #-16]
   189a8:	sub	r0, r0, #1
   189ac:	movw	r1, #32767	; 0x7fff
   189b0:	cmp	r1, r0
   189b4:	bcc	189f0 <__assert_fail@plt+0x7b88>
   189b8:	b	18a08 <__assert_fail@plt+0x7ba0>
   189bc:	ldr	r0, [pc, #3568]	; 197b4 <__assert_fail@plt+0x894c>
   189c0:	ldr	r1, [fp, #-12]
   189c4:	udiv	r0, r0, r1
   189c8:	ldr	r1, [fp, #-16]
   189cc:	cmp	r0, r1
   189d0:	bcc	189f0 <__assert_fail@plt+0x7b88>
   189d4:	b	18a08 <__assert_fail@plt+0x7ba0>
   189d8:	ldr	r0, [fp, #-16]
   189dc:	movw	r1, #32767	; 0x7fff
   189e0:	udiv	r0, r1, r0
   189e4:	ldr	r1, [fp, #-12]
   189e8:	cmp	r0, r1
   189ec:	bcs	18a08 <__assert_fail@plt+0x7ba0>
   189f0:	ldr	r0, [fp, #-12]
   189f4:	ldr	r1, [fp, #-16]
   189f8:	mul	r0, r0, r1
   189fc:	sxth	r0, r0
   18a00:	str	r0, [fp, #-20]	; 0xffffffec
   18a04:	b	19778 <__assert_fail@plt+0x8910>
   18a08:	ldr	r0, [fp, #-12]
   18a0c:	ldr	r1, [fp, #-16]
   18a10:	mul	r0, r0, r1
   18a14:	sxth	r0, r0
   18a18:	str	r0, [fp, #-20]	; 0xffffffec
   18a1c:	b	19790 <__assert_fail@plt+0x8928>
   18a20:	ldr	r0, [fp, #-16]
   18a24:	cmp	r0, #0
   18a28:	bcs	18b34 <__assert_fail@plt+0x7ccc>
   18a2c:	ldr	r0, [fp, #-12]
   18a30:	cmp	r0, #0
   18a34:	bcs	18abc <__assert_fail@plt+0x7c54>
   18a38:	b	18a58 <__assert_fail@plt+0x7bf0>
   18a3c:	ldr	r0, [fp, #-12]
   18a40:	ldr	r1, [fp, #-16]
   18a44:	movw	r2, #65535	; 0xffff
   18a48:	udiv	r1, r2, r1
   18a4c:	cmp	r0, r1
   18a50:	bcc	18bd0 <__assert_fail@plt+0x7d68>
   18a54:	b	18be8 <__assert_fail@plt+0x7d80>
   18a58:	b	18a6c <__assert_fail@plt+0x7c04>
   18a5c:	ldr	r0, [fp, #-16]
   18a60:	cmp	r0, #1
   18a64:	bcc	18a7c <__assert_fail@plt+0x7c14>
   18a68:	b	18a88 <__assert_fail@plt+0x7c20>
   18a6c:	ldr	r0, [fp, #-16]
   18a70:	movw	r1, #0
   18a74:	cmp	r1, r0
   18a78:	bcs	18a88 <__assert_fail@plt+0x7c20>
   18a7c:	movw	r0, #0
   18a80:	str	r0, [fp, #-36]	; 0xffffffdc
   18a84:	b	18aa0 <__assert_fail@plt+0x7c38>
   18a88:	ldr	r0, [fp, #-16]
   18a8c:	movw	r1, #0
   18a90:	sub	r0, r1, r0
   18a94:	movw	r1, #65535	; 0xffff
   18a98:	udiv	r0, r1, r0
   18a9c:	str	r0, [fp, #-36]	; 0xffffffdc
   18aa0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18aa4:	ldr	r1, [fp, #-12]
   18aa8:	mvn	r2, #0
   18aac:	sub	r1, r2, r1
   18ab0:	cmp	r0, r1
   18ab4:	bls	18bd0 <__assert_fail@plt+0x7d68>
   18ab8:	b	18be8 <__assert_fail@plt+0x7d80>
   18abc:	b	18ac4 <__assert_fail@plt+0x7c5c>
   18ac0:	b	18ac8 <__assert_fail@plt+0x7c60>
   18ac4:	b	18b18 <__assert_fail@plt+0x7cb0>
   18ac8:	ldr	r0, [fp, #-16]
   18acc:	cmn	r0, #1
   18ad0:	bne	18b18 <__assert_fail@plt+0x7cb0>
   18ad4:	b	18af0 <__assert_fail@plt+0x7c88>
   18ad8:	ldr	r0, [fp, #-12]
   18adc:	add	r0, r0, #0
   18ae0:	movw	r1, #0
   18ae4:	cmp	r1, r0
   18ae8:	bcc	18bd0 <__assert_fail@plt+0x7d68>
   18aec:	b	18be8 <__assert_fail@plt+0x7d80>
   18af0:	ldr	r0, [fp, #-12]
   18af4:	movw	r1, #0
   18af8:	cmp	r1, r0
   18afc:	bcs	18be8 <__assert_fail@plt+0x7d80>
   18b00:	ldr	r0, [fp, #-12]
   18b04:	sub	r0, r0, #1
   18b08:	mvn	r1, #0
   18b0c:	cmp	r1, r0
   18b10:	bcc	18bd0 <__assert_fail@plt+0x7d68>
   18b14:	b	18be8 <__assert_fail@plt+0x7d80>
   18b18:	ldr	r0, [fp, #-16]
   18b1c:	movw	r1, #0
   18b20:	udiv	r0, r1, r0
   18b24:	ldr	r1, [fp, #-12]
   18b28:	cmp	r0, r1
   18b2c:	bcc	18bd0 <__assert_fail@plt+0x7d68>
   18b30:	b	18be8 <__assert_fail@plt+0x7d80>
   18b34:	ldr	r0, [fp, #-16]
   18b38:	cmp	r0, #0
   18b3c:	bne	18b44 <__assert_fail@plt+0x7cdc>
   18b40:	b	18be8 <__assert_fail@plt+0x7d80>
   18b44:	ldr	r0, [fp, #-12]
   18b48:	cmp	r0, #0
   18b4c:	bcs	18bb8 <__assert_fail@plt+0x7d50>
   18b50:	b	18b58 <__assert_fail@plt+0x7cf0>
   18b54:	b	18b5c <__assert_fail@plt+0x7cf4>
   18b58:	b	18b9c <__assert_fail@plt+0x7d34>
   18b5c:	ldr	r0, [fp, #-12]
   18b60:	cmn	r0, #1
   18b64:	bne	18b9c <__assert_fail@plt+0x7d34>
   18b68:	b	18b84 <__assert_fail@plt+0x7d1c>
   18b6c:	ldr	r0, [fp, #-16]
   18b70:	add	r0, r0, #0
   18b74:	movw	r1, #0
   18b78:	cmp	r1, r0
   18b7c:	bcc	18bd0 <__assert_fail@plt+0x7d68>
   18b80:	b	18be8 <__assert_fail@plt+0x7d80>
   18b84:	ldr	r0, [fp, #-16]
   18b88:	sub	r0, r0, #1
   18b8c:	mvn	r1, #0
   18b90:	cmp	r1, r0
   18b94:	bcc	18bd0 <__assert_fail@plt+0x7d68>
   18b98:	b	18be8 <__assert_fail@plt+0x7d80>
   18b9c:	ldr	r0, [fp, #-12]
   18ba0:	movw	r1, #0
   18ba4:	udiv	r0, r1, r0
   18ba8:	ldr	r1, [fp, #-16]
   18bac:	cmp	r0, r1
   18bb0:	bcc	18bd0 <__assert_fail@plt+0x7d68>
   18bb4:	b	18be8 <__assert_fail@plt+0x7d80>
   18bb8:	ldr	r0, [fp, #-16]
   18bbc:	movw	r1, #65535	; 0xffff
   18bc0:	udiv	r0, r1, r0
   18bc4:	ldr	r1, [fp, #-12]
   18bc8:	cmp	r0, r1
   18bcc:	bcs	18be8 <__assert_fail@plt+0x7d80>
   18bd0:	ldr	r0, [fp, #-12]
   18bd4:	ldr	r1, [fp, #-16]
   18bd8:	mul	r0, r0, r1
   18bdc:	uxth	r0, r0
   18be0:	str	r0, [fp, #-20]	; 0xffffffec
   18be4:	b	19778 <__assert_fail@plt+0x8910>
   18be8:	ldr	r0, [fp, #-12]
   18bec:	ldr	r1, [fp, #-16]
   18bf0:	mul	r0, r0, r1
   18bf4:	uxth	r0, r0
   18bf8:	str	r0, [fp, #-20]	; 0xffffffec
   18bfc:	b	19790 <__assert_fail@plt+0x8928>
   18c00:	b	18c04 <__assert_fail@plt+0x7d9c>
   18c04:	b	18dc8 <__assert_fail@plt+0x7f60>
   18c08:	ldr	r0, [fp, #-16]
   18c0c:	cmp	r0, #0
   18c10:	bcs	18d10 <__assert_fail@plt+0x7ea8>
   18c14:	ldr	r0, [fp, #-12]
   18c18:	cmp	r0, #0
   18c1c:	bcs	18ca4 <__assert_fail@plt+0x7e3c>
   18c20:	b	18c40 <__assert_fail@plt+0x7dd8>
   18c24:	ldr	r0, [pc, #2944]	; 197ac <__assert_fail@plt+0x8944>
   18c28:	ldr	r1, [fp, #-12]
   18c2c:	ldr	r2, [fp, #-16]
   18c30:	udiv	r0, r0, r2
   18c34:	cmp	r1, r0
   18c38:	bcc	18da0 <__assert_fail@plt+0x7f38>
   18c3c:	b	18db4 <__assert_fail@plt+0x7f4c>
   18c40:	b	18c54 <__assert_fail@plt+0x7dec>
   18c44:	ldr	r0, [fp, #-16]
   18c48:	cmp	r0, #1
   18c4c:	bcc	18c64 <__assert_fail@plt+0x7dfc>
   18c50:	b	18c70 <__assert_fail@plt+0x7e08>
   18c54:	ldr	r0, [fp, #-16]
   18c58:	movw	r1, #0
   18c5c:	cmp	r1, r0
   18c60:	bcs	18c70 <__assert_fail@plt+0x7e08>
   18c64:	movw	r0, #0
   18c68:	str	r0, [fp, #-40]	; 0xffffffd8
   18c6c:	b	18c88 <__assert_fail@plt+0x7e20>
   18c70:	ldr	r0, [pc, #2868]	; 197ac <__assert_fail@plt+0x8944>
   18c74:	ldr	r1, [fp, #-16]
   18c78:	movw	r2, #0
   18c7c:	sub	r1, r2, r1
   18c80:	udiv	r0, r0, r1
   18c84:	str	r0, [fp, #-40]	; 0xffffffd8
   18c88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c8c:	ldr	r1, [fp, #-12]
   18c90:	mvn	r2, #0
   18c94:	sub	r1, r2, r1
   18c98:	cmp	r0, r1
   18c9c:	bls	18da0 <__assert_fail@plt+0x7f38>
   18ca0:	b	18db4 <__assert_fail@plt+0x7f4c>
   18ca4:	ldr	r0, [fp, #-16]
   18ca8:	cmn	r0, #1
   18cac:	bne	18cf4 <__assert_fail@plt+0x7e8c>
   18cb0:	b	18ccc <__assert_fail@plt+0x7e64>
   18cb4:	ldr	r0, [fp, #-12]
   18cb8:	add	r0, r0, #-2147483648	; 0x80000000
   18cbc:	movw	r1, #0
   18cc0:	cmp	r1, r0
   18cc4:	bcc	18da0 <__assert_fail@plt+0x7f38>
   18cc8:	b	18db4 <__assert_fail@plt+0x7f4c>
   18ccc:	ldr	r0, [fp, #-12]
   18cd0:	movw	r1, #0
   18cd4:	cmp	r1, r0
   18cd8:	bcs	18db4 <__assert_fail@plt+0x7f4c>
   18cdc:	ldr	r0, [pc, #2760]	; 197ac <__assert_fail@plt+0x8944>
   18ce0:	ldr	r1, [fp, #-12]
   18ce4:	sub	r1, r1, #1
   18ce8:	cmp	r0, r1
   18cec:	bcc	18da0 <__assert_fail@plt+0x7f38>
   18cf0:	b	18db4 <__assert_fail@plt+0x7f4c>
   18cf4:	ldr	r0, [pc, #2740]	; 197b0 <__assert_fail@plt+0x8948>
   18cf8:	ldr	r1, [fp, #-16]
   18cfc:	udiv	r0, r0, r1
   18d00:	ldr	r1, [fp, #-12]
   18d04:	cmp	r0, r1
   18d08:	bcc	18da0 <__assert_fail@plt+0x7f38>
   18d0c:	b	18db4 <__assert_fail@plt+0x7f4c>
   18d10:	ldr	r0, [fp, #-16]
   18d14:	cmp	r0, #0
   18d18:	bne	18d20 <__assert_fail@plt+0x7eb8>
   18d1c:	b	18db4 <__assert_fail@plt+0x7f4c>
   18d20:	ldr	r0, [fp, #-12]
   18d24:	cmp	r0, #0
   18d28:	bcs	18d88 <__assert_fail@plt+0x7f20>
   18d2c:	ldr	r0, [fp, #-12]
   18d30:	cmn	r0, #1
   18d34:	bne	18d6c <__assert_fail@plt+0x7f04>
   18d38:	b	18d54 <__assert_fail@plt+0x7eec>
   18d3c:	ldr	r0, [fp, #-16]
   18d40:	add	r0, r0, #-2147483648	; 0x80000000
   18d44:	movw	r1, #0
   18d48:	cmp	r1, r0
   18d4c:	bcc	18da0 <__assert_fail@plt+0x7f38>
   18d50:	b	18db4 <__assert_fail@plt+0x7f4c>
   18d54:	ldr	r0, [pc, #2640]	; 197ac <__assert_fail@plt+0x8944>
   18d58:	ldr	r1, [fp, #-16]
   18d5c:	sub	r1, r1, #1
   18d60:	cmp	r0, r1
   18d64:	bcc	18da0 <__assert_fail@plt+0x7f38>
   18d68:	b	18db4 <__assert_fail@plt+0x7f4c>
   18d6c:	ldr	r0, [pc, #2620]	; 197b0 <__assert_fail@plt+0x8948>
   18d70:	ldr	r1, [fp, #-12]
   18d74:	udiv	r0, r0, r1
   18d78:	ldr	r1, [fp, #-16]
   18d7c:	cmp	r0, r1
   18d80:	bcc	18da0 <__assert_fail@plt+0x7f38>
   18d84:	b	18db4 <__assert_fail@plt+0x7f4c>
   18d88:	ldr	r0, [pc, #2588]	; 197ac <__assert_fail@plt+0x8944>
   18d8c:	ldr	r1, [fp, #-16]
   18d90:	udiv	r0, r0, r1
   18d94:	ldr	r1, [fp, #-12]
   18d98:	cmp	r0, r1
   18d9c:	bcs	18db4 <__assert_fail@plt+0x7f4c>
   18da0:	ldr	r0, [fp, #-12]
   18da4:	ldr	r1, [fp, #-16]
   18da8:	mul	r0, r0, r1
   18dac:	str	r0, [fp, #-20]	; 0xffffffec
   18db0:	b	19778 <__assert_fail@plt+0x8910>
   18db4:	ldr	r0, [fp, #-12]
   18db8:	ldr	r1, [fp, #-16]
   18dbc:	mul	r0, r0, r1
   18dc0:	str	r0, [fp, #-20]	; 0xffffffec
   18dc4:	b	19790 <__assert_fail@plt+0x8928>
   18dc8:	ldr	r0, [fp, #-16]
   18dcc:	cmp	r0, #0
   18dd0:	bcs	18edc <__assert_fail@plt+0x8074>
   18dd4:	ldr	r0, [fp, #-12]
   18dd8:	cmp	r0, #0
   18ddc:	bcs	18e64 <__assert_fail@plt+0x7ffc>
   18de0:	b	18e00 <__assert_fail@plt+0x7f98>
   18de4:	ldr	r0, [fp, #-12]
   18de8:	ldr	r1, [fp, #-16]
   18dec:	mvn	r2, #0
   18df0:	udiv	r1, r2, r1
   18df4:	cmp	r0, r1
   18df8:	bcc	18f78 <__assert_fail@plt+0x8110>
   18dfc:	b	18f8c <__assert_fail@plt+0x8124>
   18e00:	b	18e14 <__assert_fail@plt+0x7fac>
   18e04:	ldr	r0, [fp, #-16]
   18e08:	cmp	r0, #1
   18e0c:	bcc	18e24 <__assert_fail@plt+0x7fbc>
   18e10:	b	18e30 <__assert_fail@plt+0x7fc8>
   18e14:	ldr	r0, [fp, #-16]
   18e18:	movw	r1, #0
   18e1c:	cmp	r1, r0
   18e20:	bcs	18e30 <__assert_fail@plt+0x7fc8>
   18e24:	movw	r0, #1
   18e28:	str	r0, [fp, #-44]	; 0xffffffd4
   18e2c:	b	18e48 <__assert_fail@plt+0x7fe0>
   18e30:	ldr	r0, [fp, #-16]
   18e34:	movw	r1, #0
   18e38:	sub	r0, r1, r0
   18e3c:	mvn	r1, #0
   18e40:	udiv	r0, r1, r0
   18e44:	str	r0, [fp, #-44]	; 0xffffffd4
   18e48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18e4c:	ldr	r1, [fp, #-12]
   18e50:	mvn	r2, #0
   18e54:	sub	r1, r2, r1
   18e58:	cmp	r0, r1
   18e5c:	bls	18f78 <__assert_fail@plt+0x8110>
   18e60:	b	18f8c <__assert_fail@plt+0x8124>
   18e64:	b	18e6c <__assert_fail@plt+0x8004>
   18e68:	b	18e70 <__assert_fail@plt+0x8008>
   18e6c:	b	18ec0 <__assert_fail@plt+0x8058>
   18e70:	ldr	r0, [fp, #-16]
   18e74:	cmn	r0, #1
   18e78:	bne	18ec0 <__assert_fail@plt+0x8058>
   18e7c:	b	18e98 <__assert_fail@plt+0x8030>
   18e80:	ldr	r0, [fp, #-12]
   18e84:	add	r0, r0, #0
   18e88:	movw	r1, #0
   18e8c:	cmp	r1, r0
   18e90:	bcc	18f78 <__assert_fail@plt+0x8110>
   18e94:	b	18f8c <__assert_fail@plt+0x8124>
   18e98:	ldr	r0, [fp, #-12]
   18e9c:	movw	r1, #0
   18ea0:	cmp	r1, r0
   18ea4:	bcs	18f8c <__assert_fail@plt+0x8124>
   18ea8:	ldr	r0, [fp, #-12]
   18eac:	sub	r0, r0, #1
   18eb0:	mvn	r1, #0
   18eb4:	cmp	r1, r0
   18eb8:	bcc	18f78 <__assert_fail@plt+0x8110>
   18ebc:	b	18f8c <__assert_fail@plt+0x8124>
   18ec0:	ldr	r0, [fp, #-16]
   18ec4:	movw	r1, #0
   18ec8:	udiv	r0, r1, r0
   18ecc:	ldr	r1, [fp, #-12]
   18ed0:	cmp	r0, r1
   18ed4:	bcc	18f78 <__assert_fail@plt+0x8110>
   18ed8:	b	18f8c <__assert_fail@plt+0x8124>
   18edc:	ldr	r0, [fp, #-16]
   18ee0:	cmp	r0, #0
   18ee4:	bne	18eec <__assert_fail@plt+0x8084>
   18ee8:	b	18f8c <__assert_fail@plt+0x8124>
   18eec:	ldr	r0, [fp, #-12]
   18ef0:	cmp	r0, #0
   18ef4:	bcs	18f60 <__assert_fail@plt+0x80f8>
   18ef8:	b	18f00 <__assert_fail@plt+0x8098>
   18efc:	b	18f04 <__assert_fail@plt+0x809c>
   18f00:	b	18f44 <__assert_fail@plt+0x80dc>
   18f04:	ldr	r0, [fp, #-12]
   18f08:	cmn	r0, #1
   18f0c:	bne	18f44 <__assert_fail@plt+0x80dc>
   18f10:	b	18f2c <__assert_fail@plt+0x80c4>
   18f14:	ldr	r0, [fp, #-16]
   18f18:	add	r0, r0, #0
   18f1c:	movw	r1, #0
   18f20:	cmp	r1, r0
   18f24:	bcc	18f78 <__assert_fail@plt+0x8110>
   18f28:	b	18f8c <__assert_fail@plt+0x8124>
   18f2c:	ldr	r0, [fp, #-16]
   18f30:	sub	r0, r0, #1
   18f34:	mvn	r1, #0
   18f38:	cmp	r1, r0
   18f3c:	bcc	18f78 <__assert_fail@plt+0x8110>
   18f40:	b	18f8c <__assert_fail@plt+0x8124>
   18f44:	ldr	r0, [fp, #-12]
   18f48:	movw	r1, #0
   18f4c:	udiv	r0, r1, r0
   18f50:	ldr	r1, [fp, #-16]
   18f54:	cmp	r0, r1
   18f58:	bcc	18f78 <__assert_fail@plt+0x8110>
   18f5c:	b	18f8c <__assert_fail@plt+0x8124>
   18f60:	ldr	r0, [fp, #-16]
   18f64:	mvn	r1, #0
   18f68:	udiv	r0, r1, r0
   18f6c:	ldr	r1, [fp, #-12]
   18f70:	cmp	r0, r1
   18f74:	bcs	18f8c <__assert_fail@plt+0x8124>
   18f78:	ldr	r0, [fp, #-12]
   18f7c:	ldr	r1, [fp, #-16]
   18f80:	mul	r0, r0, r1
   18f84:	str	r0, [fp, #-20]	; 0xffffffec
   18f88:	b	19778 <__assert_fail@plt+0x8910>
   18f8c:	ldr	r0, [fp, #-12]
   18f90:	ldr	r1, [fp, #-16]
   18f94:	mul	r0, r0, r1
   18f98:	str	r0, [fp, #-20]	; 0xffffffec
   18f9c:	b	19790 <__assert_fail@plt+0x8928>
   18fa0:	b	18fa4 <__assert_fail@plt+0x813c>
   18fa4:	b	19168 <__assert_fail@plt+0x8300>
   18fa8:	ldr	r0, [fp, #-16]
   18fac:	cmp	r0, #0
   18fb0:	bcs	190b0 <__assert_fail@plt+0x8248>
   18fb4:	ldr	r0, [fp, #-12]
   18fb8:	cmp	r0, #0
   18fbc:	bcs	19044 <__assert_fail@plt+0x81dc>
   18fc0:	b	18fe0 <__assert_fail@plt+0x8178>
   18fc4:	ldr	r0, [pc, #2016]	; 197ac <__assert_fail@plt+0x8944>
   18fc8:	ldr	r1, [fp, #-12]
   18fcc:	ldr	r2, [fp, #-16]
   18fd0:	udiv	r0, r0, r2
   18fd4:	cmp	r1, r0
   18fd8:	bcc	19140 <__assert_fail@plt+0x82d8>
   18fdc:	b	19154 <__assert_fail@plt+0x82ec>
   18fe0:	b	18ff4 <__assert_fail@plt+0x818c>
   18fe4:	ldr	r0, [fp, #-16]
   18fe8:	cmp	r0, #1
   18fec:	bcc	19004 <__assert_fail@plt+0x819c>
   18ff0:	b	19010 <__assert_fail@plt+0x81a8>
   18ff4:	ldr	r0, [fp, #-16]
   18ff8:	movw	r1, #0
   18ffc:	cmp	r1, r0
   19000:	bcs	19010 <__assert_fail@plt+0x81a8>
   19004:	movw	r0, #0
   19008:	str	r0, [sp, #48]	; 0x30
   1900c:	b	19028 <__assert_fail@plt+0x81c0>
   19010:	ldr	r0, [pc, #1940]	; 197ac <__assert_fail@plt+0x8944>
   19014:	ldr	r1, [fp, #-16]
   19018:	movw	r2, #0
   1901c:	sub	r1, r2, r1
   19020:	udiv	r0, r0, r1
   19024:	str	r0, [sp, #48]	; 0x30
   19028:	ldr	r0, [sp, #48]	; 0x30
   1902c:	ldr	r1, [fp, #-12]
   19030:	mvn	r2, #0
   19034:	sub	r1, r2, r1
   19038:	cmp	r0, r1
   1903c:	bls	19140 <__assert_fail@plt+0x82d8>
   19040:	b	19154 <__assert_fail@plt+0x82ec>
   19044:	ldr	r0, [fp, #-16]
   19048:	cmn	r0, #1
   1904c:	bne	19094 <__assert_fail@plt+0x822c>
   19050:	b	1906c <__assert_fail@plt+0x8204>
   19054:	ldr	r0, [fp, #-12]
   19058:	add	r0, r0, #-2147483648	; 0x80000000
   1905c:	movw	r1, #0
   19060:	cmp	r1, r0
   19064:	bcc	19140 <__assert_fail@plt+0x82d8>
   19068:	b	19154 <__assert_fail@plt+0x82ec>
   1906c:	ldr	r0, [fp, #-12]
   19070:	movw	r1, #0
   19074:	cmp	r1, r0
   19078:	bcs	19154 <__assert_fail@plt+0x82ec>
   1907c:	ldr	r0, [pc, #1832]	; 197ac <__assert_fail@plt+0x8944>
   19080:	ldr	r1, [fp, #-12]
   19084:	sub	r1, r1, #1
   19088:	cmp	r0, r1
   1908c:	bcc	19140 <__assert_fail@plt+0x82d8>
   19090:	b	19154 <__assert_fail@plt+0x82ec>
   19094:	ldr	r0, [pc, #1812]	; 197b0 <__assert_fail@plt+0x8948>
   19098:	ldr	r1, [fp, #-16]
   1909c:	udiv	r0, r0, r1
   190a0:	ldr	r1, [fp, #-12]
   190a4:	cmp	r0, r1
   190a8:	bcc	19140 <__assert_fail@plt+0x82d8>
   190ac:	b	19154 <__assert_fail@plt+0x82ec>
   190b0:	ldr	r0, [fp, #-16]
   190b4:	cmp	r0, #0
   190b8:	bne	190c0 <__assert_fail@plt+0x8258>
   190bc:	b	19154 <__assert_fail@plt+0x82ec>
   190c0:	ldr	r0, [fp, #-12]
   190c4:	cmp	r0, #0
   190c8:	bcs	19128 <__assert_fail@plt+0x82c0>
   190cc:	ldr	r0, [fp, #-12]
   190d0:	cmn	r0, #1
   190d4:	bne	1910c <__assert_fail@plt+0x82a4>
   190d8:	b	190f4 <__assert_fail@plt+0x828c>
   190dc:	ldr	r0, [fp, #-16]
   190e0:	add	r0, r0, #-2147483648	; 0x80000000
   190e4:	movw	r1, #0
   190e8:	cmp	r1, r0
   190ec:	bcc	19140 <__assert_fail@plt+0x82d8>
   190f0:	b	19154 <__assert_fail@plt+0x82ec>
   190f4:	ldr	r0, [pc, #1712]	; 197ac <__assert_fail@plt+0x8944>
   190f8:	ldr	r1, [fp, #-16]
   190fc:	sub	r1, r1, #1
   19100:	cmp	r0, r1
   19104:	bcc	19140 <__assert_fail@plt+0x82d8>
   19108:	b	19154 <__assert_fail@plt+0x82ec>
   1910c:	ldr	r0, [pc, #1692]	; 197b0 <__assert_fail@plt+0x8948>
   19110:	ldr	r1, [fp, #-12]
   19114:	udiv	r0, r0, r1
   19118:	ldr	r1, [fp, #-16]
   1911c:	cmp	r0, r1
   19120:	bcc	19140 <__assert_fail@plt+0x82d8>
   19124:	b	19154 <__assert_fail@plt+0x82ec>
   19128:	ldr	r0, [pc, #1660]	; 197ac <__assert_fail@plt+0x8944>
   1912c:	ldr	r1, [fp, #-16]
   19130:	udiv	r0, r0, r1
   19134:	ldr	r1, [fp, #-12]
   19138:	cmp	r0, r1
   1913c:	bcs	19154 <__assert_fail@plt+0x82ec>
   19140:	ldr	r0, [fp, #-12]
   19144:	ldr	r1, [fp, #-16]
   19148:	mul	r0, r0, r1
   1914c:	str	r0, [fp, #-20]	; 0xffffffec
   19150:	b	19778 <__assert_fail@plt+0x8910>
   19154:	ldr	r0, [fp, #-12]
   19158:	ldr	r1, [fp, #-16]
   1915c:	mul	r0, r0, r1
   19160:	str	r0, [fp, #-20]	; 0xffffffec
   19164:	b	19790 <__assert_fail@plt+0x8928>
   19168:	ldr	r0, [fp, #-16]
   1916c:	cmp	r0, #0
   19170:	bcs	1927c <__assert_fail@plt+0x8414>
   19174:	ldr	r0, [fp, #-12]
   19178:	cmp	r0, #0
   1917c:	bcs	19204 <__assert_fail@plt+0x839c>
   19180:	b	191a0 <__assert_fail@plt+0x8338>
   19184:	ldr	r0, [fp, #-12]
   19188:	ldr	r1, [fp, #-16]
   1918c:	mvn	r2, #0
   19190:	udiv	r1, r2, r1
   19194:	cmp	r0, r1
   19198:	bcc	19318 <__assert_fail@plt+0x84b0>
   1919c:	b	1932c <__assert_fail@plt+0x84c4>
   191a0:	b	191b4 <__assert_fail@plt+0x834c>
   191a4:	ldr	r0, [fp, #-16]
   191a8:	cmp	r0, #1
   191ac:	bcc	191c4 <__assert_fail@plt+0x835c>
   191b0:	b	191d0 <__assert_fail@plt+0x8368>
   191b4:	ldr	r0, [fp, #-16]
   191b8:	movw	r1, #0
   191bc:	cmp	r1, r0
   191c0:	bcs	191d0 <__assert_fail@plt+0x8368>
   191c4:	movw	r0, #1
   191c8:	str	r0, [sp, #44]	; 0x2c
   191cc:	b	191e8 <__assert_fail@plt+0x8380>
   191d0:	ldr	r0, [fp, #-16]
   191d4:	movw	r1, #0
   191d8:	sub	r0, r1, r0
   191dc:	mvn	r1, #0
   191e0:	udiv	r0, r1, r0
   191e4:	str	r0, [sp, #44]	; 0x2c
   191e8:	ldr	r0, [sp, #44]	; 0x2c
   191ec:	ldr	r1, [fp, #-12]
   191f0:	mvn	r2, #0
   191f4:	sub	r1, r2, r1
   191f8:	cmp	r0, r1
   191fc:	bls	19318 <__assert_fail@plt+0x84b0>
   19200:	b	1932c <__assert_fail@plt+0x84c4>
   19204:	b	1920c <__assert_fail@plt+0x83a4>
   19208:	b	19210 <__assert_fail@plt+0x83a8>
   1920c:	b	19260 <__assert_fail@plt+0x83f8>
   19210:	ldr	r0, [fp, #-16]
   19214:	cmn	r0, #1
   19218:	bne	19260 <__assert_fail@plt+0x83f8>
   1921c:	b	19238 <__assert_fail@plt+0x83d0>
   19220:	ldr	r0, [fp, #-12]
   19224:	add	r0, r0, #0
   19228:	movw	r1, #0
   1922c:	cmp	r1, r0
   19230:	bcc	19318 <__assert_fail@plt+0x84b0>
   19234:	b	1932c <__assert_fail@plt+0x84c4>
   19238:	ldr	r0, [fp, #-12]
   1923c:	movw	r1, #0
   19240:	cmp	r1, r0
   19244:	bcs	1932c <__assert_fail@plt+0x84c4>
   19248:	ldr	r0, [fp, #-12]
   1924c:	sub	r0, r0, #1
   19250:	mvn	r1, #0
   19254:	cmp	r1, r0
   19258:	bcc	19318 <__assert_fail@plt+0x84b0>
   1925c:	b	1932c <__assert_fail@plt+0x84c4>
   19260:	ldr	r0, [fp, #-16]
   19264:	movw	r1, #0
   19268:	udiv	r0, r1, r0
   1926c:	ldr	r1, [fp, #-12]
   19270:	cmp	r0, r1
   19274:	bcc	19318 <__assert_fail@plt+0x84b0>
   19278:	b	1932c <__assert_fail@plt+0x84c4>
   1927c:	ldr	r0, [fp, #-16]
   19280:	cmp	r0, #0
   19284:	bne	1928c <__assert_fail@plt+0x8424>
   19288:	b	1932c <__assert_fail@plt+0x84c4>
   1928c:	ldr	r0, [fp, #-12]
   19290:	cmp	r0, #0
   19294:	bcs	19300 <__assert_fail@plt+0x8498>
   19298:	b	192a0 <__assert_fail@plt+0x8438>
   1929c:	b	192a4 <__assert_fail@plt+0x843c>
   192a0:	b	192e4 <__assert_fail@plt+0x847c>
   192a4:	ldr	r0, [fp, #-12]
   192a8:	cmn	r0, #1
   192ac:	bne	192e4 <__assert_fail@plt+0x847c>
   192b0:	b	192cc <__assert_fail@plt+0x8464>
   192b4:	ldr	r0, [fp, #-16]
   192b8:	add	r0, r0, #0
   192bc:	movw	r1, #0
   192c0:	cmp	r1, r0
   192c4:	bcc	19318 <__assert_fail@plt+0x84b0>
   192c8:	b	1932c <__assert_fail@plt+0x84c4>
   192cc:	ldr	r0, [fp, #-16]
   192d0:	sub	r0, r0, #1
   192d4:	mvn	r1, #0
   192d8:	cmp	r1, r0
   192dc:	bcc	19318 <__assert_fail@plt+0x84b0>
   192e0:	b	1932c <__assert_fail@plt+0x84c4>
   192e4:	ldr	r0, [fp, #-12]
   192e8:	movw	r1, #0
   192ec:	udiv	r0, r1, r0
   192f0:	ldr	r1, [fp, #-16]
   192f4:	cmp	r0, r1
   192f8:	bcc	19318 <__assert_fail@plt+0x84b0>
   192fc:	b	1932c <__assert_fail@plt+0x84c4>
   19300:	ldr	r0, [fp, #-16]
   19304:	mvn	r1, #0
   19308:	udiv	r0, r1, r0
   1930c:	ldr	r1, [fp, #-12]
   19310:	cmp	r0, r1
   19314:	bcs	1932c <__assert_fail@plt+0x84c4>
   19318:	ldr	r0, [fp, #-12]
   1931c:	ldr	r1, [fp, #-16]
   19320:	mul	r0, r0, r1
   19324:	str	r0, [fp, #-20]	; 0xffffffec
   19328:	b	19778 <__assert_fail@plt+0x8910>
   1932c:	ldr	r0, [fp, #-12]
   19330:	ldr	r1, [fp, #-16]
   19334:	mul	r0, r0, r1
   19338:	str	r0, [fp, #-20]	; 0xffffffec
   1933c:	b	19790 <__assert_fail@plt+0x8928>
   19340:	b	1955c <__assert_fail@plt+0x86f4>
   19344:	ldr	r0, [fp, #-16]
   19348:	cmp	r0, #0
   1934c:	bcs	1948c <__assert_fail@plt+0x8624>
   19350:	ldr	r0, [fp, #-12]
   19354:	cmp	r0, #0
   19358:	bcs	19418 <__assert_fail@plt+0x85b0>
   1935c:	b	19360 <__assert_fail@plt+0x84f8>
   19360:	ldr	r0, [fp, #-12]
   19364:	ldr	r2, [fp, #-16]
   19368:	mvn	r1, #0
   1936c:	mvn	r3, #-2147483648	; 0x80000000
   19370:	mov	ip, #0
   19374:	str	r0, [sp, #40]	; 0x28
   19378:	mov	r0, r1
   1937c:	mov	r1, r3
   19380:	mov	r3, ip
   19384:	bl	1a0c4 <__assert_fail@plt+0x925c>
   19388:	ldr	r2, [sp, #40]	; 0x28
   1938c:	subs	r0, r2, r0
   19390:	rscs	r1, r1, #0
   19394:	blt	19534 <__assert_fail@plt+0x86cc>
   19398:	b	19548 <__assert_fail@plt+0x86e0>
   1939c:	b	193b0 <__assert_fail@plt+0x8548>
   193a0:	ldr	r0, [fp, #-16]
   193a4:	cmp	r0, #1
   193a8:	bcc	193c0 <__assert_fail@plt+0x8558>
   193ac:	b	193d4 <__assert_fail@plt+0x856c>
   193b0:	ldr	r0, [fp, #-16]
   193b4:	movw	r1, #0
   193b8:	cmp	r1, r0
   193bc:	bcs	193d4 <__assert_fail@plt+0x856c>
   193c0:	mov	r0, #0
   193c4:	mvn	r1, #0
   193c8:	str	r1, [sp, #36]	; 0x24
   193cc:	str	r0, [sp, #32]
   193d0:	b	193f8 <__assert_fail@plt+0x8590>
   193d4:	ldr	r0, [fp, #-16]
   193d8:	rsb	r2, r0, #0
   193dc:	mvn	r0, #0
   193e0:	mvn	r1, #-2147483648	; 0x80000000
   193e4:	mov	r3, #0
   193e8:	bl	1a0c4 <__assert_fail@plt+0x925c>
   193ec:	str	r0, [sp, #36]	; 0x24
   193f0:	str	r1, [sp, #32]
   193f4:	b	193f8 <__assert_fail@plt+0x8590>
   193f8:	ldr	r0, [sp, #32]
   193fc:	ldr	r1, [sp, #36]	; 0x24
   19400:	ldr	r2, [fp, #-12]
   19404:	mvn	r2, r2
   19408:	subs	r1, r2, r1
   1940c:	rscs	r0, r0, #0
   19410:	bge	19534 <__assert_fail@plt+0x86cc>
   19414:	b	19548 <__assert_fail@plt+0x86e0>
   19418:	ldr	r0, [fp, #-16]
   1941c:	cmn	r0, #1
   19420:	bne	19460 <__assert_fail@plt+0x85f8>
   19424:	b	19440 <__assert_fail@plt+0x85d8>
   19428:	ldr	r0, [fp, #-12]
   1942c:	rsbs	r0, r0, #0
   19430:	mov	r1, #0
   19434:	sbcs	r1, r1, #-2147483648	; 0x80000000
   19438:	blt	19534 <__assert_fail@plt+0x86cc>
   1943c:	b	19548 <__assert_fail@plt+0x86e0>
   19440:	ldr	r0, [fp, #-12]
   19444:	movw	r1, #0
   19448:	cmp	r1, r0
   1944c:	bcs	19548 <__assert_fail@plt+0x86e0>
   19450:	mov	r0, #0
   19454:	cmp	r0, #0
   19458:	bne	19534 <__assert_fail@plt+0x86cc>
   1945c:	b	19548 <__assert_fail@plt+0x86e0>
   19460:	ldr	r2, [fp, #-16]
   19464:	mov	r1, #-2147483648	; 0x80000000
   19468:	mov	r0, #0
   1946c:	str	r0, [sp, #28]
   19470:	ldr	r3, [sp, #28]
   19474:	bl	19ff0 <__assert_fail@plt+0x9188>
   19478:	ldr	r2, [fp, #-12]
   1947c:	subs	r0, r0, r2
   19480:	sbcs	r1, r1, #0
   19484:	blt	19534 <__assert_fail@plt+0x86cc>
   19488:	b	19548 <__assert_fail@plt+0x86e0>
   1948c:	ldr	r0, [fp, #-16]
   19490:	cmp	r0, #0
   19494:	bne	1949c <__assert_fail@plt+0x8634>
   19498:	b	19548 <__assert_fail@plt+0x86e0>
   1949c:	ldr	r0, [fp, #-12]
   194a0:	cmp	r0, #0
   194a4:	bcs	1950c <__assert_fail@plt+0x86a4>
   194a8:	ldr	r0, [fp, #-12]
   194ac:	cmn	r0, #1
   194b0:	bne	194e0 <__assert_fail@plt+0x8678>
   194b4:	b	194d0 <__assert_fail@plt+0x8668>
   194b8:	ldr	r0, [fp, #-16]
   194bc:	rsbs	r0, r0, #0
   194c0:	mov	r1, #0
   194c4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   194c8:	blt	19534 <__assert_fail@plt+0x86cc>
   194cc:	b	19548 <__assert_fail@plt+0x86e0>
   194d0:	mov	r0, #0
   194d4:	cmp	r0, #0
   194d8:	bne	19534 <__assert_fail@plt+0x86cc>
   194dc:	b	19548 <__assert_fail@plt+0x86e0>
   194e0:	ldr	r2, [fp, #-12]
   194e4:	mov	r1, #-2147483648	; 0x80000000
   194e8:	mov	r0, #0
   194ec:	str	r0, [sp, #24]
   194f0:	ldr	r3, [sp, #24]
   194f4:	bl	19ff0 <__assert_fail@plt+0x9188>
   194f8:	ldr	r2, [fp, #-16]
   194fc:	subs	r0, r0, r2
   19500:	sbcs	r1, r1, #0
   19504:	blt	19534 <__assert_fail@plt+0x86cc>
   19508:	b	19548 <__assert_fail@plt+0x86e0>
   1950c:	ldr	r2, [fp, #-16]
   19510:	mvn	r0, #0
   19514:	mvn	r1, #-2147483648	; 0x80000000
   19518:	mov	r3, #0
   1951c:	bl	1a0c4 <__assert_fail@plt+0x925c>
   19520:	ldr	r2, [fp, #-12]
   19524:	subs	r0, r0, r2
   19528:	sbcs	r1, r1, #0
   1952c:	bge	19548 <__assert_fail@plt+0x86e0>
   19530:	b	19534 <__assert_fail@plt+0x86cc>
   19534:	ldr	r0, [fp, #-12]
   19538:	ldr	r1, [fp, #-16]
   1953c:	mul	r0, r0, r1
   19540:	str	r0, [fp, #-20]	; 0xffffffec
   19544:	b	19778 <__assert_fail@plt+0x8910>
   19548:	ldr	r0, [fp, #-12]
   1954c:	ldr	r1, [fp, #-16]
   19550:	mul	r0, r0, r1
   19554:	str	r0, [fp, #-20]	; 0xffffffec
   19558:	b	19790 <__assert_fail@plt+0x8928>
   1955c:	ldr	r0, [fp, #-16]
   19560:	cmp	r0, #0
   19564:	bcs	196a0 <__assert_fail@plt+0x8838>
   19568:	ldr	r0, [fp, #-12]
   1956c:	cmp	r0, #0
   19570:	bcs	19628 <__assert_fail@plt+0x87c0>
   19574:	b	195a8 <__assert_fail@plt+0x8740>
   19578:	ldr	r0, [fp, #-12]
   1957c:	ldr	r2, [fp, #-16]
   19580:	mvn	r1, #0
   19584:	mov	r3, #0
   19588:	str	r0, [sp, #20]
   1958c:	mov	r0, r1
   19590:	bl	1a0c4 <__assert_fail@plt+0x925c>
   19594:	ldr	r2, [sp, #20]
   19598:	subs	r0, r2, r0
   1959c:	rscs	r1, r1, #0
   195a0:	bcc	19750 <__assert_fail@plt+0x88e8>
   195a4:	b	19764 <__assert_fail@plt+0x88fc>
   195a8:	b	195bc <__assert_fail@plt+0x8754>
   195ac:	ldr	r0, [fp, #-16]
   195b0:	cmp	r0, #1
   195b4:	bcc	195cc <__assert_fail@plt+0x8764>
   195b8:	b	195e0 <__assert_fail@plt+0x8778>
   195bc:	ldr	r0, [fp, #-16]
   195c0:	movw	r1, #0
   195c4:	cmp	r1, r0
   195c8:	bcs	195e0 <__assert_fail@plt+0x8778>
   195cc:	mov	r0, #1
   195d0:	mvn	r1, #0
   195d4:	str	r1, [sp, #16]
   195d8:	str	r0, [sp, #12]
   195dc:	b	19608 <__assert_fail@plt+0x87a0>
   195e0:	ldr	r0, [fp, #-16]
   195e4:	rsb	r2, r0, #0
   195e8:	mvn	r0, #0
   195ec:	mov	r3, #0
   195f0:	str	r0, [sp, #8]
   195f4:	ldr	r1, [sp, #8]
   195f8:	bl	1a0c4 <__assert_fail@plt+0x925c>
   195fc:	str	r0, [sp, #16]
   19600:	str	r1, [sp, #12]
   19604:	b	19608 <__assert_fail@plt+0x87a0>
   19608:	ldr	r0, [sp, #12]
   1960c:	ldr	r1, [sp, #16]
   19610:	ldr	r2, [fp, #-12]
   19614:	mvn	r2, r2
   19618:	subs	r1, r2, r1
   1961c:	rscs	r0, r0, #0
   19620:	bcs	19750 <__assert_fail@plt+0x88e8>
   19624:	b	19764 <__assert_fail@plt+0x88fc>
   19628:	b	19630 <__assert_fail@plt+0x87c8>
   1962c:	b	19634 <__assert_fail@plt+0x87cc>
   19630:	b	19684 <__assert_fail@plt+0x881c>
   19634:	ldr	r0, [fp, #-16]
   19638:	cmn	r0, #1
   1963c:	bne	19684 <__assert_fail@plt+0x881c>
   19640:	b	1965c <__assert_fail@plt+0x87f4>
   19644:	ldr	r0, [fp, #-12]
   19648:	add	r0, r0, #0
   1964c:	movw	r1, #0
   19650:	cmp	r1, r0
   19654:	bcc	19750 <__assert_fail@plt+0x88e8>
   19658:	b	19764 <__assert_fail@plt+0x88fc>
   1965c:	ldr	r0, [fp, #-12]
   19660:	movw	r1, #0
   19664:	cmp	r1, r0
   19668:	bcs	19764 <__assert_fail@plt+0x88fc>
   1966c:	ldr	r0, [fp, #-12]
   19670:	sub	r0, r0, #1
   19674:	mvn	r1, #0
   19678:	cmp	r1, r0
   1967c:	bcc	19750 <__assert_fail@plt+0x88e8>
   19680:	b	19764 <__assert_fail@plt+0x88fc>
   19684:	ldr	r0, [fp, #-16]
   19688:	movw	r1, #0
   1968c:	udiv	r0, r1, r0
   19690:	ldr	r1, [fp, #-12]
   19694:	cmp	r0, r1
   19698:	bcc	19750 <__assert_fail@plt+0x88e8>
   1969c:	b	19764 <__assert_fail@plt+0x88fc>
   196a0:	ldr	r0, [fp, #-16]
   196a4:	cmp	r0, #0
   196a8:	bne	196b0 <__assert_fail@plt+0x8848>
   196ac:	b	19764 <__assert_fail@plt+0x88fc>
   196b0:	ldr	r0, [fp, #-12]
   196b4:	cmp	r0, #0
   196b8:	bcs	19724 <__assert_fail@plt+0x88bc>
   196bc:	b	196c4 <__assert_fail@plt+0x885c>
   196c0:	b	196c8 <__assert_fail@plt+0x8860>
   196c4:	b	19708 <__assert_fail@plt+0x88a0>
   196c8:	ldr	r0, [fp, #-12]
   196cc:	cmn	r0, #1
   196d0:	bne	19708 <__assert_fail@plt+0x88a0>
   196d4:	b	196f0 <__assert_fail@plt+0x8888>
   196d8:	ldr	r0, [fp, #-16]
   196dc:	add	r0, r0, #0
   196e0:	movw	r1, #0
   196e4:	cmp	r1, r0
   196e8:	bcc	19750 <__assert_fail@plt+0x88e8>
   196ec:	b	19764 <__assert_fail@plt+0x88fc>
   196f0:	ldr	r0, [fp, #-16]
   196f4:	sub	r0, r0, #1
   196f8:	mvn	r1, #0
   196fc:	cmp	r1, r0
   19700:	bcc	19750 <__assert_fail@plt+0x88e8>
   19704:	b	19764 <__assert_fail@plt+0x88fc>
   19708:	ldr	r0, [fp, #-12]
   1970c:	movw	r1, #0
   19710:	udiv	r0, r1, r0
   19714:	ldr	r1, [fp, #-16]
   19718:	cmp	r0, r1
   1971c:	bcc	19750 <__assert_fail@plt+0x88e8>
   19720:	b	19764 <__assert_fail@plt+0x88fc>
   19724:	ldr	r2, [fp, #-16]
   19728:	mvn	r0, #0
   1972c:	mov	r3, #0
   19730:	str	r0, [sp, #4]
   19734:	ldr	r1, [sp, #4]
   19738:	bl	1a0c4 <__assert_fail@plt+0x925c>
   1973c:	ldr	r2, [fp, #-12]
   19740:	subs	r0, r0, r2
   19744:	sbcs	r1, r1, #0
   19748:	bcs	19764 <__assert_fail@plt+0x88fc>
   1974c:	b	19750 <__assert_fail@plt+0x88e8>
   19750:	ldr	r0, [fp, #-12]
   19754:	ldr	r1, [fp, #-16]
   19758:	mul	r0, r0, r1
   1975c:	str	r0, [fp, #-20]	; 0xffffffec
   19760:	b	19778 <__assert_fail@plt+0x8910>
   19764:	ldr	r0, [fp, #-12]
   19768:	ldr	r1, [fp, #-16]
   1976c:	mul	r0, r0, r1
   19770:	str	r0, [fp, #-20]	; 0xffffffec
   19774:	b	19790 <__assert_fail@plt+0x8928>
   19778:	bl	10dc0 <__errno_location@plt>
   1977c:	movw	r1, #12
   19780:	str	r1, [r0]
   19784:	movw	r0, #0
   19788:	str	r0, [fp, #-4]
   1978c:	b	197a0 <__assert_fail@plt+0x8938>
   19790:	ldr	r0, [fp, #-8]
   19794:	ldr	r1, [fp, #-20]	; 0xffffffec
   19798:	bl	17c8c <__assert_fail@plt+0x6e24>
   1979c:	str	r0, [fp, #-4]
   197a0:	ldr	r0, [fp, #-4]
   197a4:	mov	sp, fp
   197a8:	pop	{fp, pc}
   197ac:	svcvc	0x00ffffff
   197b0:	andhi	r0, r0, r0
   197b4:			; <UNDEFINED> instruction: 0xffff8000
   197b8:	sub	sp, sp, #12
   197bc:	str	r0, [sp, #4]
   197c0:	ldr	r0, [sp, #4]
   197c4:	sub	r1, r0, #48	; 0x30
   197c8:	cmp	r1, #10
   197cc:	str	r0, [sp]
   197d0:	bcc	19800 <__assert_fail@plt+0x8998>
   197d4:	b	197d8 <__assert_fail@plt+0x8970>
   197d8:	ldr	r0, [sp]
   197dc:	sub	r1, r0, #65	; 0x41
   197e0:	cmp	r1, #26
   197e4:	bcc	19800 <__assert_fail@plt+0x8998>
   197e8:	b	197ec <__assert_fail@plt+0x8984>
   197ec:	ldr	r0, [sp]
   197f0:	sub	r1, r0, #97	; 0x61
   197f4:	cmp	r1, #25
   197f8:	bhi	19810 <__assert_fail@plt+0x89a8>
   197fc:	b	19800 <__assert_fail@plt+0x8998>
   19800:	movw	r0, #1
   19804:	and	r0, r0, #1
   19808:	strb	r0, [sp, #11]
   1980c:	b	1981c <__assert_fail@plt+0x89b4>
   19810:	movw	r0, #0
   19814:	and	r0, r0, #1
   19818:	strb	r0, [sp, #11]
   1981c:	ldrb	r0, [sp, #11]
   19820:	and	r0, r0, #1
   19824:	add	sp, sp, #12
   19828:	bx	lr
   1982c:	sub	sp, sp, #12
   19830:	str	r0, [sp, #4]
   19834:	ldr	r0, [sp, #4]
   19838:	sub	r1, r0, #65	; 0x41
   1983c:	cmp	r1, #26
   19840:	str	r0, [sp]
   19844:	bcc	19860 <__assert_fail@plt+0x89f8>
   19848:	b	1984c <__assert_fail@plt+0x89e4>
   1984c:	ldr	r0, [sp]
   19850:	sub	r1, r0, #97	; 0x61
   19854:	cmp	r1, #25
   19858:	bhi	19870 <__assert_fail@plt+0x8a08>
   1985c:	b	19860 <__assert_fail@plt+0x89f8>
   19860:	movw	r0, #1
   19864:	and	r0, r0, #1
   19868:	strb	r0, [sp, #11]
   1986c:	b	1987c <__assert_fail@plt+0x8a14>
   19870:	movw	r0, #0
   19874:	and	r0, r0, #1
   19878:	strb	r0, [sp, #11]
   1987c:	ldrb	r0, [sp, #11]
   19880:	and	r0, r0, #1
   19884:	add	sp, sp, #12
   19888:	bx	lr
   1988c:	sub	sp, sp, #8
   19890:	str	r0, [sp]
   19894:	ldr	r0, [sp]
   19898:	cmp	r0, #127	; 0x7f
   1989c:	bhi	198b4 <__assert_fail@plt+0x8a4c>
   198a0:	b	198a4 <__assert_fail@plt+0x8a3c>
   198a4:	movw	r0, #1
   198a8:	and	r0, r0, #1
   198ac:	strb	r0, [sp, #7]
   198b0:	b	198c0 <__assert_fail@plt+0x8a58>
   198b4:	movw	r0, #0
   198b8:	and	r0, r0, #1
   198bc:	strb	r0, [sp, #7]
   198c0:	ldrb	r0, [sp, #7]
   198c4:	and	r0, r0, #1
   198c8:	add	sp, sp, #8
   198cc:	bx	lr
   198d0:	sub	sp, sp, #8
   198d4:	str	r0, [sp, #4]
   198d8:	ldr	r0, [sp, #4]
   198dc:	cmp	r0, #32
   198e0:	movw	r0, #1
   198e4:	str	r0, [sp]
   198e8:	beq	19900 <__assert_fail@plt+0x8a98>
   198ec:	ldr	r0, [sp, #4]
   198f0:	cmp	r0, #9
   198f4:	movw	r0, #0
   198f8:	moveq	r0, #1
   198fc:	str	r0, [sp]
   19900:	ldr	r0, [sp]
   19904:	and	r0, r0, #1
   19908:	add	sp, sp, #8
   1990c:	bx	lr
   19910:	sub	sp, sp, #12
   19914:	str	r0, [sp, #4]
   19918:	ldr	r0, [sp, #4]
   1991c:	cmp	r0, #32
   19920:	str	r0, [sp]
   19924:	bcc	1993c <__assert_fail@plt+0x8ad4>
   19928:	b	1992c <__assert_fail@plt+0x8ac4>
   1992c:	ldr	r0, [sp]
   19930:	cmp	r0, #127	; 0x7f
   19934:	bne	1994c <__assert_fail@plt+0x8ae4>
   19938:	b	1993c <__assert_fail@plt+0x8ad4>
   1993c:	movw	r0, #1
   19940:	and	r0, r0, #1
   19944:	strb	r0, [sp, #11]
   19948:	b	19958 <__assert_fail@plt+0x8af0>
   1994c:	movw	r0, #0
   19950:	and	r0, r0, #1
   19954:	strb	r0, [sp, #11]
   19958:	ldrb	r0, [sp, #11]
   1995c:	and	r0, r0, #1
   19960:	add	sp, sp, #12
   19964:	bx	lr
   19968:	sub	sp, sp, #8
   1996c:	str	r0, [sp]
   19970:	ldr	r0, [sp]
   19974:	sub	r0, r0, #48	; 0x30
   19978:	cmp	r0, #9
   1997c:	bhi	19994 <__assert_fail@plt+0x8b2c>
   19980:	b	19984 <__assert_fail@plt+0x8b1c>
   19984:	movw	r0, #1
   19988:	and	r0, r0, #1
   1998c:	strb	r0, [sp, #7]
   19990:	b	199a0 <__assert_fail@plt+0x8b38>
   19994:	movw	r0, #0
   19998:	and	r0, r0, #1
   1999c:	strb	r0, [sp, #7]
   199a0:	ldrb	r0, [sp, #7]
   199a4:	and	r0, r0, #1
   199a8:	add	sp, sp, #8
   199ac:	bx	lr
   199b0:	sub	sp, sp, #8
   199b4:	str	r0, [sp]
   199b8:	ldr	r0, [sp]
   199bc:	sub	r0, r0, #33	; 0x21
   199c0:	cmp	r0, #93	; 0x5d
   199c4:	bhi	199dc <__assert_fail@plt+0x8b74>
   199c8:	b	199cc <__assert_fail@plt+0x8b64>
   199cc:	movw	r0, #1
   199d0:	and	r0, r0, #1
   199d4:	strb	r0, [sp, #7]
   199d8:	b	199e8 <__assert_fail@plt+0x8b80>
   199dc:	movw	r0, #0
   199e0:	and	r0, r0, #1
   199e4:	strb	r0, [sp, #7]
   199e8:	ldrb	r0, [sp, #7]
   199ec:	and	r0, r0, #1
   199f0:	add	sp, sp, #8
   199f4:	bx	lr
   199f8:	sub	sp, sp, #8
   199fc:	str	r0, [sp]
   19a00:	ldr	r0, [sp]
   19a04:	sub	r0, r0, #97	; 0x61
   19a08:	cmp	r0, #25
   19a0c:	bhi	19a24 <__assert_fail@plt+0x8bbc>
   19a10:	b	19a14 <__assert_fail@plt+0x8bac>
   19a14:	movw	r0, #1
   19a18:	and	r0, r0, #1
   19a1c:	strb	r0, [sp, #7]
   19a20:	b	19a30 <__assert_fail@plt+0x8bc8>
   19a24:	movw	r0, #0
   19a28:	and	r0, r0, #1
   19a2c:	strb	r0, [sp, #7]
   19a30:	ldrb	r0, [sp, #7]
   19a34:	and	r0, r0, #1
   19a38:	add	sp, sp, #8
   19a3c:	bx	lr
   19a40:	sub	sp, sp, #8
   19a44:	str	r0, [sp]
   19a48:	ldr	r0, [sp]
   19a4c:	sub	r0, r0, #32
   19a50:	cmp	r0, #94	; 0x5e
   19a54:	bhi	19a6c <__assert_fail@plt+0x8c04>
   19a58:	b	19a5c <__assert_fail@plt+0x8bf4>
   19a5c:	movw	r0, #1
   19a60:	and	r0, r0, #1
   19a64:	strb	r0, [sp, #7]
   19a68:	b	19a78 <__assert_fail@plt+0x8c10>
   19a6c:	movw	r0, #0
   19a70:	and	r0, r0, #1
   19a74:	strb	r0, [sp, #7]
   19a78:	ldrb	r0, [sp, #7]
   19a7c:	and	r0, r0, #1
   19a80:	add	sp, sp, #8
   19a84:	bx	lr
   19a88:	sub	sp, sp, #12
   19a8c:	str	r0, [sp, #4]
   19a90:	ldr	r0, [sp, #4]
   19a94:	sub	r0, r0, #33	; 0x21
   19a98:	cmp	r0, #93	; 0x5d
   19a9c:	str	r0, [sp]
   19aa0:	bhi	19c3c <__assert_fail@plt+0x8dd4>
   19aa4:	add	r0, pc, #8
   19aa8:	ldr	r1, [sp]
   19aac:	ldr	r0, [r0, r1, lsl #2]
   19ab0:	mov	pc, r0
   19ab4:	andeq	r9, r1, ip, lsr #24
   19ab8:	andeq	r9, r1, ip, lsr #24
   19abc:	andeq	r9, r1, ip, lsr #24
   19ac0:	andeq	r9, r1, ip, lsr #24
   19ac4:	andeq	r9, r1, ip, lsr #24
   19ac8:	andeq	r9, r1, ip, lsr #24
   19acc:	andeq	r9, r1, ip, lsr #24
   19ad0:	andeq	r9, r1, ip, lsr #24
   19ad4:	andeq	r9, r1, ip, lsr #24
   19ad8:	andeq	r9, r1, ip, lsr #24
   19adc:	andeq	r9, r1, ip, lsr #24
   19ae0:	andeq	r9, r1, ip, lsr #24
   19ae4:	andeq	r9, r1, ip, lsr #24
   19ae8:	andeq	r9, r1, ip, lsr #24
   19aec:	andeq	r9, r1, ip, lsr #24
   19af0:	andeq	r9, r1, ip, lsr ip
   19af4:	andeq	r9, r1, ip, lsr ip
   19af8:	andeq	r9, r1, ip, lsr ip
   19afc:	andeq	r9, r1, ip, lsr ip
   19b00:	andeq	r9, r1, ip, lsr ip
   19b04:	andeq	r9, r1, ip, lsr ip
   19b08:	andeq	r9, r1, ip, lsr ip
   19b0c:	andeq	r9, r1, ip, lsr ip
   19b10:	andeq	r9, r1, ip, lsr ip
   19b14:	andeq	r9, r1, ip, lsr ip
   19b18:	andeq	r9, r1, ip, lsr #24
   19b1c:	andeq	r9, r1, ip, lsr #24
   19b20:	andeq	r9, r1, ip, lsr #24
   19b24:	andeq	r9, r1, ip, lsr #24
   19b28:	andeq	r9, r1, ip, lsr #24
   19b2c:	andeq	r9, r1, ip, lsr #24
   19b30:	andeq	r9, r1, ip, lsr #24
   19b34:	andeq	r9, r1, ip, lsr ip
   19b38:	andeq	r9, r1, ip, lsr ip
   19b3c:	andeq	r9, r1, ip, lsr ip
   19b40:	andeq	r9, r1, ip, lsr ip
   19b44:	andeq	r9, r1, ip, lsr ip
   19b48:	andeq	r9, r1, ip, lsr ip
   19b4c:	andeq	r9, r1, ip, lsr ip
   19b50:	andeq	r9, r1, ip, lsr ip
   19b54:	andeq	r9, r1, ip, lsr ip
   19b58:	andeq	r9, r1, ip, lsr ip
   19b5c:	andeq	r9, r1, ip, lsr ip
   19b60:	andeq	r9, r1, ip, lsr ip
   19b64:	andeq	r9, r1, ip, lsr ip
   19b68:	andeq	r9, r1, ip, lsr ip
   19b6c:	andeq	r9, r1, ip, lsr ip
   19b70:	andeq	r9, r1, ip, lsr ip
   19b74:	andeq	r9, r1, ip, lsr ip
   19b78:	andeq	r9, r1, ip, lsr ip
   19b7c:	andeq	r9, r1, ip, lsr ip
   19b80:	andeq	r9, r1, ip, lsr ip
   19b84:	andeq	r9, r1, ip, lsr ip
   19b88:	andeq	r9, r1, ip, lsr ip
   19b8c:	andeq	r9, r1, ip, lsr ip
   19b90:	andeq	r9, r1, ip, lsr ip
   19b94:	andeq	r9, r1, ip, lsr ip
   19b98:	andeq	r9, r1, ip, lsr ip
   19b9c:	andeq	r9, r1, ip, lsr #24
   19ba0:	andeq	r9, r1, ip, lsr #24
   19ba4:	andeq	r9, r1, ip, lsr #24
   19ba8:	andeq	r9, r1, ip, lsr #24
   19bac:	andeq	r9, r1, ip, lsr #24
   19bb0:	andeq	r9, r1, ip, lsr #24
   19bb4:	andeq	r9, r1, ip, lsr ip
   19bb8:	andeq	r9, r1, ip, lsr ip
   19bbc:	andeq	r9, r1, ip, lsr ip
   19bc0:	andeq	r9, r1, ip, lsr ip
   19bc4:	andeq	r9, r1, ip, lsr ip
   19bc8:	andeq	r9, r1, ip, lsr ip
   19bcc:	andeq	r9, r1, ip, lsr ip
   19bd0:	andeq	r9, r1, ip, lsr ip
   19bd4:	andeq	r9, r1, ip, lsr ip
   19bd8:	andeq	r9, r1, ip, lsr ip
   19bdc:	andeq	r9, r1, ip, lsr ip
   19be0:	andeq	r9, r1, ip, lsr ip
   19be4:	andeq	r9, r1, ip, lsr ip
   19be8:	andeq	r9, r1, ip, lsr ip
   19bec:	andeq	r9, r1, ip, lsr ip
   19bf0:	andeq	r9, r1, ip, lsr ip
   19bf4:	andeq	r9, r1, ip, lsr ip
   19bf8:	andeq	r9, r1, ip, lsr ip
   19bfc:	andeq	r9, r1, ip, lsr ip
   19c00:	andeq	r9, r1, ip, lsr ip
   19c04:	andeq	r9, r1, ip, lsr ip
   19c08:	andeq	r9, r1, ip, lsr ip
   19c0c:	andeq	r9, r1, ip, lsr ip
   19c10:	andeq	r9, r1, ip, lsr ip
   19c14:	andeq	r9, r1, ip, lsr ip
   19c18:	andeq	r9, r1, ip, lsr ip
   19c1c:	andeq	r9, r1, ip, lsr #24
   19c20:	andeq	r9, r1, ip, lsr #24
   19c24:	andeq	r9, r1, ip, lsr #24
   19c28:	andeq	r9, r1, ip, lsr #24
   19c2c:	movw	r0, #1
   19c30:	and	r0, r0, #1
   19c34:	strb	r0, [sp, #11]
   19c38:	b	19c48 <__assert_fail@plt+0x8de0>
   19c3c:	movw	r0, #0
   19c40:	and	r0, r0, #1
   19c44:	strb	r0, [sp, #11]
   19c48:	ldrb	r0, [sp, #11]
   19c4c:	and	r0, r0, #1
   19c50:	add	sp, sp, #12
   19c54:	bx	lr
   19c58:	sub	sp, sp, #12
   19c5c:	str	r0, [sp, #4]
   19c60:	ldr	r0, [sp, #4]
   19c64:	sub	r1, r0, #9
   19c68:	cmp	r1, #5
   19c6c:	str	r0, [sp]
   19c70:	bcc	19c88 <__assert_fail@plt+0x8e20>
   19c74:	b	19c78 <__assert_fail@plt+0x8e10>
   19c78:	ldr	r0, [sp]
   19c7c:	cmp	r0, #32
   19c80:	bne	19c98 <__assert_fail@plt+0x8e30>
   19c84:	b	19c88 <__assert_fail@plt+0x8e20>
   19c88:	movw	r0, #1
   19c8c:	and	r0, r0, #1
   19c90:	strb	r0, [sp, #11]
   19c94:	b	19ca4 <__assert_fail@plt+0x8e3c>
   19c98:	movw	r0, #0
   19c9c:	and	r0, r0, #1
   19ca0:	strb	r0, [sp, #11]
   19ca4:	ldrb	r0, [sp, #11]
   19ca8:	and	r0, r0, #1
   19cac:	add	sp, sp, #12
   19cb0:	bx	lr
   19cb4:	sub	sp, sp, #8
   19cb8:	str	r0, [sp]
   19cbc:	ldr	r0, [sp]
   19cc0:	sub	r0, r0, #65	; 0x41
   19cc4:	cmp	r0, #25
   19cc8:	bhi	19ce0 <__assert_fail@plt+0x8e78>
   19ccc:	b	19cd0 <__assert_fail@plt+0x8e68>
   19cd0:	movw	r0, #1
   19cd4:	and	r0, r0, #1
   19cd8:	strb	r0, [sp, #7]
   19cdc:	b	19cec <__assert_fail@plt+0x8e84>
   19ce0:	movw	r0, #0
   19ce4:	and	r0, r0, #1
   19ce8:	strb	r0, [sp, #7]
   19cec:	ldrb	r0, [sp, #7]
   19cf0:	and	r0, r0, #1
   19cf4:	add	sp, sp, #8
   19cf8:	bx	lr
   19cfc:	sub	sp, sp, #12
   19d00:	str	r0, [sp, #4]
   19d04:	ldr	r0, [sp, #4]
   19d08:	sub	r1, r0, #48	; 0x30
   19d0c:	cmp	r1, #10
   19d10:	str	r0, [sp]
   19d14:	bcc	19d44 <__assert_fail@plt+0x8edc>
   19d18:	b	19d1c <__assert_fail@plt+0x8eb4>
   19d1c:	ldr	r0, [sp]
   19d20:	sub	r1, r0, #65	; 0x41
   19d24:	cmp	r1, #6
   19d28:	bcc	19d44 <__assert_fail@plt+0x8edc>
   19d2c:	b	19d30 <__assert_fail@plt+0x8ec8>
   19d30:	ldr	r0, [sp]
   19d34:	sub	r1, r0, #97	; 0x61
   19d38:	cmp	r1, #5
   19d3c:	bhi	19d54 <__assert_fail@plt+0x8eec>
   19d40:	b	19d44 <__assert_fail@plt+0x8edc>
   19d44:	movw	r0, #1
   19d48:	and	r0, r0, #1
   19d4c:	strb	r0, [sp, #11]
   19d50:	b	19d60 <__assert_fail@plt+0x8ef8>
   19d54:	movw	r0, #0
   19d58:	and	r0, r0, #1
   19d5c:	strb	r0, [sp, #11]
   19d60:	ldrb	r0, [sp, #11]
   19d64:	and	r0, r0, #1
   19d68:	add	sp, sp, #12
   19d6c:	bx	lr
   19d70:	sub	sp, sp, #8
   19d74:	str	r0, [sp]
   19d78:	ldr	r0, [sp]
   19d7c:	sub	r0, r0, #65	; 0x41
   19d80:	cmp	r0, #25
   19d84:	bhi	19da0 <__assert_fail@plt+0x8f38>
   19d88:	b	19d8c <__assert_fail@plt+0x8f24>
   19d8c:	ldr	r0, [sp]
   19d90:	sub	r0, r0, #65	; 0x41
   19d94:	add	r0, r0, #97	; 0x61
   19d98:	str	r0, [sp, #4]
   19d9c:	b	19da8 <__assert_fail@plt+0x8f40>
   19da0:	ldr	r0, [sp]
   19da4:	str	r0, [sp, #4]
   19da8:	ldr	r0, [sp, #4]
   19dac:	add	sp, sp, #8
   19db0:	bx	lr
   19db4:	sub	sp, sp, #8
   19db8:	str	r0, [sp]
   19dbc:	ldr	r0, [sp]
   19dc0:	sub	r0, r0, #97	; 0x61
   19dc4:	cmp	r0, #25
   19dc8:	bhi	19de4 <__assert_fail@plt+0x8f7c>
   19dcc:	b	19dd0 <__assert_fail@plt+0x8f68>
   19dd0:	ldr	r0, [sp]
   19dd4:	sub	r0, r0, #97	; 0x61
   19dd8:	add	r0, r0, #65	; 0x41
   19ddc:	str	r0, [sp, #4]
   19de0:	b	19dec <__assert_fail@plt+0x8f84>
   19de4:	ldr	r0, [sp]
   19de8:	str	r0, [sp, #4]
   19dec:	ldr	r0, [sp, #4]
   19df0:	add	sp, sp, #8
   19df4:	bx	lr
   19df8:	push	{r4, r5, fp, lr}
   19dfc:	add	fp, sp, #8
   19e00:	sub	sp, sp, #272	; 0x110
   19e04:	add	r1, sp, #7
   19e08:	str	r0, [fp, #-16]
   19e0c:	ldr	r0, [fp, #-16]
   19e10:	movw	r2, #257	; 0x101
   19e14:	bl	19e94 <__assert_fail@plt+0x902c>
   19e18:	cmp	r0, #0
   19e1c:	beq	19e30 <__assert_fail@plt+0x8fc8>
   19e20:	movw	r0, #0
   19e24:	and	r0, r0, #1
   19e28:	strb	r0, [fp, #-9]
   19e2c:	b	19e84 <__assert_fail@plt+0x901c>
   19e30:	add	r0, sp, #7
   19e34:	movw	r1, #44375	; 0xad57
   19e38:	movt	r1, #1
   19e3c:	bl	10c7c <strcmp@plt>
   19e40:	cmp	r0, #0
   19e44:	movw	r0, #1
   19e48:	str	r0, [sp]
   19e4c:	beq	19e70 <__assert_fail@plt+0x9008>
   19e50:	add	r0, sp, #7
   19e54:	movw	r1, #44377	; 0xad59
   19e58:	movt	r1, #1
   19e5c:	bl	10c7c <strcmp@plt>
   19e60:	cmp	r0, #0
   19e64:	movw	r0, #0
   19e68:	moveq	r0, #1
   19e6c:	str	r0, [sp]
   19e70:	ldr	r0, [sp]
   19e74:	mvn	r1, #0
   19e78:	eor	r0, r0, r1
   19e7c:	and	r0, r0, #1
   19e80:	strb	r0, [fp, #-9]
   19e84:	ldrb	r0, [fp, #-9]
   19e88:	and	r0, r0, #1
   19e8c:	sub	sp, fp, #8
   19e90:	pop	{r4, r5, fp, pc}
   19e94:	push	{fp, lr}
   19e98:	mov	fp, sp
   19e9c:	sub	sp, sp, #16
   19ea0:	str	r0, [fp, #-4]
   19ea4:	str	r1, [sp, #8]
   19ea8:	str	r2, [sp, #4]
   19eac:	ldr	r0, [fp, #-4]
   19eb0:	ldr	r1, [sp, #8]
   19eb4:	ldr	r2, [sp, #4]
   19eb8:	bl	19ec4 <__assert_fail@plt+0x905c>
   19ebc:	mov	sp, fp
   19ec0:	pop	{fp, pc}
   19ec4:	push	{fp, lr}
   19ec8:	mov	fp, sp
   19ecc:	sub	sp, sp, #24
   19ed0:	str	r0, [fp, #-8]
   19ed4:	str	r1, [sp, #12]
   19ed8:	str	r2, [sp, #8]
   19edc:	ldr	r0, [fp, #-8]
   19ee0:	bl	19fc4 <__assert_fail@plt+0x915c>
   19ee4:	str	r0, [sp, #4]
   19ee8:	ldr	r0, [sp, #4]
   19eec:	movw	r1, #0
   19ef0:	cmp	r0, r1
   19ef4:	bne	19f1c <__assert_fail@plt+0x90b4>
   19ef8:	ldr	r0, [sp, #8]
   19efc:	cmp	r0, #0
   19f00:	bls	19f10 <__assert_fail@plt+0x90a8>
   19f04:	ldr	r0, [sp, #12]
   19f08:	movw	r1, #0
   19f0c:	strb	r1, [r0]
   19f10:	movw	r0, #22
   19f14:	str	r0, [fp, #-4]
   19f18:	b	19f98 <__assert_fail@plt+0x9130>
   19f1c:	ldr	r0, [sp, #4]
   19f20:	bl	10da8 <strlen@plt>
   19f24:	str	r0, [sp]
   19f28:	ldr	r0, [sp]
   19f2c:	ldr	r1, [sp, #8]
   19f30:	cmp	r0, r1
   19f34:	bcs	19f58 <__assert_fail@plt+0x90f0>
   19f38:	ldr	r0, [sp, #12]
   19f3c:	ldr	r1, [sp, #4]
   19f40:	ldr	r2, [sp]
   19f44:	add	r2, r2, #1
   19f48:	bl	10cb8 <memcpy@plt>
   19f4c:	movw	r0, #0
   19f50:	str	r0, [fp, #-4]
   19f54:	b	19f98 <__assert_fail@plt+0x9130>
   19f58:	ldr	r0, [sp, #8]
   19f5c:	cmp	r0, #0
   19f60:	bls	19f90 <__assert_fail@plt+0x9128>
   19f64:	ldr	r0, [sp, #12]
   19f68:	ldr	r1, [sp, #4]
   19f6c:	ldr	r2, [sp, #8]
   19f70:	sub	r2, r2, #1
   19f74:	bl	10cb8 <memcpy@plt>
   19f78:	ldr	r0, [sp, #12]
   19f7c:	ldr	r1, [sp, #8]
   19f80:	sub	r1, r1, #1
   19f84:	add	r0, r0, r1
   19f88:	movw	r1, #0
   19f8c:	strb	r1, [r0]
   19f90:	movw	r0, #34	; 0x22
   19f94:	str	r0, [fp, #-4]
   19f98:	ldr	r0, [fp, #-4]
   19f9c:	mov	sp, fp
   19fa0:	pop	{fp, pc}
   19fa4:	push	{fp, lr}
   19fa8:	mov	fp, sp
   19fac:	sub	sp, sp, #8
   19fb0:	str	r0, [sp, #4]
   19fb4:	ldr	r0, [sp, #4]
   19fb8:	bl	19fc4 <__assert_fail@plt+0x915c>
   19fbc:	mov	sp, fp
   19fc0:	pop	{fp, pc}
   19fc4:	push	{fp, lr}
   19fc8:	mov	fp, sp
   19fcc:	sub	sp, sp, #8
   19fd0:	str	r0, [sp, #4]
   19fd4:	ldr	r0, [sp, #4]
   19fd8:	movw	r1, #0
   19fdc:	bl	10e08 <setlocale@plt>
   19fe0:	str	r0, [sp]
   19fe4:	ldr	r0, [sp]
   19fe8:	mov	sp, fp
   19fec:	pop	{fp, pc}
   19ff0:	cmp	r3, #0
   19ff4:	cmpeq	r2, #0
   19ff8:	bne	1a01c <__assert_fail@plt+0x91b4>
   19ffc:	cmp	r1, #0
   1a000:	movlt	r1, #-2147483648	; 0x80000000
   1a004:	movlt	r0, #0
   1a008:	blt	1a018 <__assert_fail@plt+0x91b0>
   1a00c:	cmpeq	r0, #0
   1a010:	mvnne	r1, #-2147483648	; 0x80000000
   1a014:	mvnne	r0, #0
   1a018:	b	1a100 <__assert_fail@plt+0x9298>
   1a01c:	sub	sp, sp, #8
   1a020:	push	{sp, lr}
   1a024:	cmp	r1, #0
   1a028:	blt	1a048 <__assert_fail@plt+0x91e0>
   1a02c:	cmp	r3, #0
   1a030:	blt	1a07c <__assert_fail@plt+0x9214>
   1a034:	bl	1a110 <__assert_fail@plt+0x92a8>
   1a038:	ldr	lr, [sp, #4]
   1a03c:	add	sp, sp, #8
   1a040:	pop	{r2, r3}
   1a044:	bx	lr
   1a048:	rsbs	r0, r0, #0
   1a04c:	sbc	r1, r1, r1, lsl #1
   1a050:	cmp	r3, #0
   1a054:	blt	1a0a0 <__assert_fail@plt+0x9238>
   1a058:	bl	1a110 <__assert_fail@plt+0x92a8>
   1a05c:	ldr	lr, [sp, #4]
   1a060:	add	sp, sp, #8
   1a064:	pop	{r2, r3}
   1a068:	rsbs	r0, r0, #0
   1a06c:	sbc	r1, r1, r1, lsl #1
   1a070:	rsbs	r2, r2, #0
   1a074:	sbc	r3, r3, r3, lsl #1
   1a078:	bx	lr
   1a07c:	rsbs	r2, r2, #0
   1a080:	sbc	r3, r3, r3, lsl #1
   1a084:	bl	1a110 <__assert_fail@plt+0x92a8>
   1a088:	ldr	lr, [sp, #4]
   1a08c:	add	sp, sp, #8
   1a090:	pop	{r2, r3}
   1a094:	rsbs	r0, r0, #0
   1a098:	sbc	r1, r1, r1, lsl #1
   1a09c:	bx	lr
   1a0a0:	rsbs	r2, r2, #0
   1a0a4:	sbc	r3, r3, r3, lsl #1
   1a0a8:	bl	1a110 <__assert_fail@plt+0x92a8>
   1a0ac:	ldr	lr, [sp, #4]
   1a0b0:	add	sp, sp, #8
   1a0b4:	pop	{r2, r3}
   1a0b8:	rsbs	r2, r2, #0
   1a0bc:	sbc	r3, r3, r3, lsl #1
   1a0c0:	bx	lr
   1a0c4:	cmp	r3, #0
   1a0c8:	cmpeq	r2, #0
   1a0cc:	bne	1a0e4 <__assert_fail@plt+0x927c>
   1a0d0:	cmp	r1, #0
   1a0d4:	cmpeq	r0, #0
   1a0d8:	mvnne	r1, #0
   1a0dc:	mvnne	r0, #0
   1a0e0:	b	1a100 <__assert_fail@plt+0x9298>
   1a0e4:	sub	sp, sp, #8
   1a0e8:	push	{sp, lr}
   1a0ec:	bl	1a110 <__assert_fail@plt+0x92a8>
   1a0f0:	ldr	lr, [sp, #4]
   1a0f4:	add	sp, sp, #8
   1a0f8:	pop	{r2, r3}
   1a0fc:	bx	lr
   1a100:	push	{r1, lr}
   1a104:	mov	r0, #8
   1a108:	bl	10c70 <raise@plt>
   1a10c:	pop	{r1, pc}
   1a110:	cmp	r1, r3
   1a114:	cmpeq	r0, r2
   1a118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a11c:	mov	r4, r0
   1a120:	movcc	r0, #0
   1a124:	mov	r5, r1
   1a128:	ldr	lr, [sp, #36]	; 0x24
   1a12c:	movcc	r1, r0
   1a130:	bcc	1a22c <__assert_fail@plt+0x93c4>
   1a134:	cmp	r3, #0
   1a138:	clzeq	ip, r2
   1a13c:	clzne	ip, r3
   1a140:	addeq	ip, ip, #32
   1a144:	cmp	r5, #0
   1a148:	clzeq	r1, r4
   1a14c:	addeq	r1, r1, #32
   1a150:	clzne	r1, r5
   1a154:	sub	ip, ip, r1
   1a158:	sub	sl, ip, #32
   1a15c:	lsl	r9, r3, ip
   1a160:	rsb	fp, ip, #32
   1a164:	orr	r9, r9, r2, lsl sl
   1a168:	orr	r9, r9, r2, lsr fp
   1a16c:	lsl	r8, r2, ip
   1a170:	cmp	r5, r9
   1a174:	cmpeq	r4, r8
   1a178:	movcc	r0, #0
   1a17c:	movcc	r1, r0
   1a180:	bcc	1a19c <__assert_fail@plt+0x9334>
   1a184:	mov	r0, #1
   1a188:	subs	r4, r4, r8
   1a18c:	lsl	r1, r0, sl
   1a190:	orr	r1, r1, r0, lsr fp
   1a194:	lsl	r0, r0, ip
   1a198:	sbc	r5, r5, r9
   1a19c:	cmp	ip, #0
   1a1a0:	beq	1a22c <__assert_fail@plt+0x93c4>
   1a1a4:	lsr	r6, r8, #1
   1a1a8:	orr	r6, r6, r9, lsl #31
   1a1ac:	lsr	r7, r9, #1
   1a1b0:	mov	r2, ip
   1a1b4:	b	1a1d8 <__assert_fail@plt+0x9370>
   1a1b8:	subs	r3, r4, r6
   1a1bc:	sbc	r8, r5, r7
   1a1c0:	adds	r3, r3, r3
   1a1c4:	adc	r8, r8, r8
   1a1c8:	adds	r4, r3, #1
   1a1cc:	adc	r5, r8, #0
   1a1d0:	subs	r2, r2, #1
   1a1d4:	beq	1a1f4 <__assert_fail@plt+0x938c>
   1a1d8:	cmp	r5, r7
   1a1dc:	cmpeq	r4, r6
   1a1e0:	bcs	1a1b8 <__assert_fail@plt+0x9350>
   1a1e4:	adds	r4, r4, r4
   1a1e8:	adc	r5, r5, r5
   1a1ec:	subs	r2, r2, #1
   1a1f0:	bne	1a1d8 <__assert_fail@plt+0x9370>
   1a1f4:	lsr	r3, r4, ip
   1a1f8:	orr	r3, r3, r5, lsl fp
   1a1fc:	lsr	r2, r5, ip
   1a200:	orr	r3, r3, r5, lsr sl
   1a204:	adds	r0, r0, r4
   1a208:	mov	r4, r3
   1a20c:	lsl	r3, r2, ip
   1a210:	orr	r3, r3, r4, lsl sl
   1a214:	lsl	ip, r4, ip
   1a218:	orr	r3, r3, r4, lsr fp
   1a21c:	adc	r1, r1, r5
   1a220:	subs	r0, r0, ip
   1a224:	mov	r5, r2
   1a228:	sbc	r1, r1, r3
   1a22c:	cmp	lr, #0
   1a230:	strdne	r4, [lr]
   1a234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a238:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a23c:	mov	r7, r0
   1a240:	ldr	r6, [pc, #72]	; 1a290 <__assert_fail@plt+0x9428>
   1a244:	ldr	r5, [pc, #72]	; 1a294 <__assert_fail@plt+0x942c>
   1a248:	add	r6, pc, r6
   1a24c:	add	r5, pc, r5
   1a250:	sub	r6, r6, r5
   1a254:	mov	r8, r1
   1a258:	mov	r9, r2
   1a25c:	bl	10c38 <calloc@plt-0x20>
   1a260:	asrs	r6, r6, #2
   1a264:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a268:	mov	r4, #0
   1a26c:	add	r4, r4, #1
   1a270:	ldr	r3, [r5], #4
   1a274:	mov	r2, r9
   1a278:	mov	r1, r8
   1a27c:	mov	r0, r7
   1a280:	blx	r3
   1a284:	cmp	r6, r4
   1a288:	bne	1a26c <__assert_fail@plt+0x9404>
   1a28c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a290:			; <UNDEFINED> instruction: 0x00010cbc
   1a294:			; <UNDEFINED> instruction: 0x00010cb4
   1a298:	bx	lr
   1a29c:	ldr	r3, [pc, #12]	; 1a2b0 <__assert_fail@plt+0x9448>
   1a2a0:	mov	r1, #0
   1a2a4:	add	r3, pc, r3
   1a2a8:	ldr	r2, [r3]
   1a2ac:	b	10dcc <__cxa_atexit@plt>
   1a2b0:	andeq	r0, r1, ip, lsl lr

Disassembly of section .fini:

0001a2b4 <.fini>:
   1a2b4:	push	{r3, lr}
   1a2b8:	pop	{r3, pc}
