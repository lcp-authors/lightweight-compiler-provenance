
../repos/coreutils/src/b2sum:     file format elf32-littlearm


Disassembly of section .init:

00011030 <.init>:
   11030:	push	{r3, lr}
   11034:	bl	1135c <__assert_fail@plt+0x54>
   11038:	pop	{r3, pc}

Disassembly of section .plt:

0001103c <fdopen@plt-0x14>:
   1103c:	push	{lr}		; (str lr, [sp, #-4]!)
   11040:	ldr	lr, [pc, #4]	; 1104c <fdopen@plt-0x4>
   11044:	add	lr, pc, lr
   11048:	ldr	pc, [lr, #8]!
   1104c:			; <UNDEFINED> instruction: 0x0001efb4

00011050 <fdopen@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #122880	; 0x1e000
   11058:	ldr	pc, [ip, #4020]!	; 0xfb4

0001105c <calloc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #122880	; 0x1e000
   11064:	ldr	pc, [ip, #4012]!	; 0xfac

00011068 <fputs_unlocked@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #122880	; 0x1e000
   11070:	ldr	pc, [ip, #4004]!	; 0xfa4

00011074 <raise@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #122880	; 0x1e000
   1107c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011080 <__getdelim@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #122880	; 0x1e000
   11088:	ldr	pc, [ip, #3988]!	; 0xf94

0001108c <strcmp@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #122880	; 0x1e000
   11094:	ldr	pc, [ip, #3980]!	; 0xf8c

00011098 <posix_fadvise64@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #122880	; 0x1e000
   110a0:	ldr	pc, [ip, #3972]!	; 0xf84

000110a4 <fflush@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #122880	; 0x1e000
   110ac:	ldr	pc, [ip, #3964]!	; 0xf7c

000110b0 <free@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #122880	; 0x1e000
   110b8:	ldr	pc, [ip, #3956]!	; 0xf74

000110bc <ferror@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #122880	; 0x1e000
   110c4:	ldr	pc, [ip, #3948]!	; 0xf6c

000110c8 <_exit@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #122880	; 0x1e000
   110d0:	ldr	pc, [ip, #3940]!	; 0xf64

000110d4 <memcpy@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #122880	; 0x1e000
   110dc:	ldr	pc, [ip, #3932]!	; 0xf5c

000110e0 <__strtoull_internal@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #122880	; 0x1e000
   110e8:	ldr	pc, [ip, #3924]!	; 0xf54

000110ec <mbsinit@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #122880	; 0x1e000
   110f4:	ldr	pc, [ip, #3916]!	; 0xf4c

000110f8 <memcmp@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #122880	; 0x1e000
   11100:	ldr	pc, [ip, #3908]!	; 0xf44

00011104 <dcgettext@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #122880	; 0x1e000
   1110c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011110 <realloc@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #122880	; 0x1e000
   11118:	ldr	pc, [ip, #3892]!	; 0xf34

0001111c <textdomain@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #122880	; 0x1e000
   11124:	ldr	pc, [ip, #3884]!	; 0xf2c

00011128 <iswprint@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #122880	; 0x1e000
   11130:	ldr	pc, [ip, #3876]!	; 0xf24

00011134 <fwrite@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #122880	; 0x1e000
   1113c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011140 <lseek64@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #122880	; 0x1e000
   11148:	ldr	pc, [ip, #3860]!	; 0xf14

0001114c <__ctype_get_mb_cur_max@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #122880	; 0x1e000
   11154:	ldr	pc, [ip, #3852]!	; 0xf0c

00011158 <fread@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #122880	; 0x1e000
   11160:	ldr	pc, [ip, #3844]!	; 0xf04

00011164 <__fpending@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #122880	; 0x1e000
   1116c:	ldr	pc, [ip, #3836]!	; 0xefc

00011170 <mbrtowc@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #122880	; 0x1e000
   11178:	ldr	pc, [ip, #3828]!	; 0xef4

0001117c <error@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #122880	; 0x1e000
   11184:	ldr	pc, [ip, #3820]!	; 0xeec

00011188 <malloc@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #122880	; 0x1e000
   11190:	ldr	pc, [ip, #3812]!	; 0xee4

00011194 <__libc_start_main@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #122880	; 0x1e000
   1119c:	ldr	pc, [ip, #3804]!	; 0xedc

000111a0 <__freading@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #122880	; 0x1e000
   111a8:	ldr	pc, [ip, #3796]!	; 0xed4

000111ac <__ctype_tolower_loc@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #122880	; 0x1e000
   111b4:	ldr	pc, [ip, #3788]!	; 0xecc

000111b8 <__gmon_start__@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #122880	; 0x1e000
   111c0:	ldr	pc, [ip, #3780]!	; 0xec4

000111c4 <getopt_long@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #122880	; 0x1e000
   111cc:	ldr	pc, [ip, #3772]!	; 0xebc

000111d0 <__ctype_b_loc@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #122880	; 0x1e000
   111d8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111dc <exit@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #122880	; 0x1e000
   111e4:	ldr	pc, [ip, #3756]!	; 0xeac

000111e8 <feof@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #122880	; 0x1e000
   111f0:	ldr	pc, [ip, #3748]!	; 0xea4

000111f4 <strlen@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #122880	; 0x1e000
   111fc:	ldr	pc, [ip, #3740]!	; 0xe9c

00011200 <strchr@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #122880	; 0x1e000
   11208:	ldr	pc, [ip, #3732]!	; 0xe94

0001120c <__errno_location@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #122880	; 0x1e000
   11214:	ldr	pc, [ip, #3724]!	; 0xe8c

00011218 <__cxa_atexit@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #122880	; 0x1e000
   11220:	ldr	pc, [ip, #3716]!	; 0xe84

00011224 <setvbuf@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #122880	; 0x1e000
   1122c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011230 <memset@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #122880	; 0x1e000
   11238:	ldr	pc, [ip, #3700]!	; 0xe74

0001123c <__printf_chk@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #122880	; 0x1e000
   11244:	ldr	pc, [ip, #3692]!	; 0xe6c

00011248 <fileno@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #122880	; 0x1e000
   11250:	ldr	pc, [ip, #3684]!	; 0xe64

00011254 <__fprintf_chk@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #122880	; 0x1e000
   1125c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011260 <fclose@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #122880	; 0x1e000
   11268:	ldr	pc, [ip, #3668]!	; 0xe54

0001126c <fseeko64@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #122880	; 0x1e000
   11274:	ldr	pc, [ip, #3660]!	; 0xe4c

00011278 <fcntl64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #122880	; 0x1e000
   11280:	ldr	pc, [ip, #3652]!	; 0xe44

00011284 <__overflow@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #122880	; 0x1e000
   1128c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011290 <setlocale@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #122880	; 0x1e000
   11298:	ldr	pc, [ip, #3636]!	; 0xe34

0001129c <strrchr@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #122880	; 0x1e000
   112a4:	ldr	pc, [ip, #3628]!	; 0xe2c

000112a8 <nl_langinfo@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #122880	; 0x1e000
   112b0:	ldr	pc, [ip, #3620]!	; 0xe24

000112b4 <clearerr_unlocked@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #122880	; 0x1e000
   112bc:	ldr	pc, [ip, #3612]!	; 0xe1c

000112c0 <fopen64@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #122880	; 0x1e000
   112c8:	ldr	pc, [ip, #3604]!	; 0xe14

000112cc <bindtextdomain@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #122880	; 0x1e000
   112d4:	ldr	pc, [ip, #3596]!	; 0xe0c

000112d8 <strncmp@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #122880	; 0x1e000
   112e0:	ldr	pc, [ip, #3588]!	; 0xe04

000112e4 <abort@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #122880	; 0x1e000
   112ec:	ldr	pc, [ip, #3580]!	; 0xdfc

000112f0 <close@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #122880	; 0x1e000
   112f8:	ldr	pc, [ip, #3572]!	; 0xdf4

000112fc <dcngettext@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #122880	; 0x1e000
   11304:	ldr	pc, [ip, #3564]!	; 0xdec

00011308 <__assert_fail@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #122880	; 0x1e000
   11310:	ldr	pc, [ip, #3556]!	; 0xde4

Disassembly of section .text:

00011320 <.text>:
   11320:	mov	fp, #0
   11324:	mov	lr, #0
   11328:	pop	{r1}		; (ldr r1, [sp], #4)
   1132c:	mov	r2, sp
   11330:	push	{r2}		; (str r2, [sp, #-4]!)
   11334:	push	{r0}		; (str r0, [sp, #-4]!)
   11338:	ldr	ip, [pc, #16]	; 11350 <__assert_fail@plt+0x48>
   1133c:	push	{ip}		; (str ip, [sp, #-4]!)
   11340:	ldr	r0, [pc, #12]	; 11354 <__assert_fail@plt+0x4c>
   11344:	ldr	r3, [pc, #12]	; 11358 <__assert_fail@plt+0x50>
   11348:	bl	11194 <__libc_start_main@plt>
   1134c:	bl	112e4 <abort@plt>
   11350:	strdeq	sp, [r1], -r8
   11354:	andeq	r1, r1, r4, lsr #15
   11358:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1135c:	ldr	r3, [pc, #20]	; 11378 <__assert_fail@plt+0x70>
   11360:	ldr	r2, [pc, #20]	; 1137c <__assert_fail@plt+0x74>
   11364:	add	r3, pc, r3
   11368:	ldr	r2, [r3, r2]
   1136c:	cmp	r2, #0
   11370:	bxeq	lr
   11374:	b	111b8 <__gmon_start__@plt>
   11378:	muleq	r1, r4, ip
   1137c:	strdeq	r0, [r0], -r8
   11380:	ldr	r0, [pc, #24]	; 113a0 <__assert_fail@plt+0x98>
   11384:	ldr	r3, [pc, #24]	; 113a4 <__assert_fail@plt+0x9c>
   11388:	cmp	r3, r0
   1138c:	bxeq	lr
   11390:	ldr	r3, [pc, #16]	; 113a8 <__assert_fail@plt+0xa0>
   11394:	cmp	r3, #0
   11398:	bxeq	lr
   1139c:	bx	r3
   113a0:	andeq	r0, r3, r8, asr r1
   113a4:	andeq	r0, r3, r8, asr r1
   113a8:	andeq	r0, r0, r0
   113ac:	ldr	r0, [pc, #36]	; 113d8 <__assert_fail@plt+0xd0>
   113b0:	ldr	r1, [pc, #36]	; 113dc <__assert_fail@plt+0xd4>
   113b4:	sub	r1, r1, r0
   113b8:	asr	r1, r1, #2
   113bc:	add	r1, r1, r1, lsr #31
   113c0:	asrs	r1, r1, #1
   113c4:	bxeq	lr
   113c8:	ldr	r3, [pc, #16]	; 113e0 <__assert_fail@plt+0xd8>
   113cc:	cmp	r3, #0
   113d0:	bxeq	lr
   113d4:	bx	r3
   113d8:	andeq	r0, r3, r8, asr r1
   113dc:	andeq	r0, r3, r8, asr r1
   113e0:	andeq	r0, r0, r0
   113e4:	push	{r4, lr}
   113e8:	ldr	r4, [pc, #24]	; 11408 <__assert_fail@plt+0x100>
   113ec:	ldrb	r3, [r4]
   113f0:	cmp	r3, #0
   113f4:	popne	{r4, pc}
   113f8:	bl	11380 <__assert_fail@plt+0x78>
   113fc:	mov	r3, #1
   11400:	strb	r3, [r4]
   11404:	pop	{r4, pc}
   11408:	andeq	r0, r3, ip, ror r1
   1140c:	b	113ac <__assert_fail@plt+0xa4>
   11410:	push	{fp, lr}
   11414:	mov	fp, sp
   11418:	sub	sp, sp, #56	; 0x38
   1141c:	mov	r4, r0
   11420:	cmp	r0, #0
   11424:	bne	11760 <__assert_fail@plt+0x458>
   11428:	movw	r1, #57419	; 0xe04b
   1142c:	mov	r0, #0
   11430:	mov	r2, #5
   11434:	movt	r1, #1
   11438:	bl	11104 <dcgettext@plt>
   1143c:	mov	r1, r0
   11440:	movw	r0, #416	; 0x1a0
   11444:	movt	r0, #3
   11448:	ldr	r2, [r0]
   1144c:	mov	r0, #1
   11450:	bl	1123c <__printf_chk@plt>
   11454:	movw	r1, #57452	; 0xe06c
   11458:	mov	r0, #0
   1145c:	mov	r2, #5
   11460:	movt	r1, #1
   11464:	bl	11104 <dcgettext@plt>
   11468:	movw	r2, #57491	; 0xe093
   1146c:	mov	r1, r0
   11470:	mov	r0, #1
   11474:	mov	r3, #512	; 0x200
   11478:	movt	r2, #1
   1147c:	bl	1123c <__printf_chk@plt>
   11480:	movw	r1, #59669	; 0xe915
   11484:	mov	r0, #0
   11488:	mov	r2, #5
   1148c:	movt	r1, #1
   11490:	bl	11104 <dcgettext@plt>
   11494:	movw	r7, #372	; 0x174
   11498:	movt	r7, #3
   1149c:	ldr	r1, [r7]
   114a0:	bl	11068 <fputs_unlocked@plt>
   114a4:	movw	r1, #59725	; 0xe94d
   114a8:	mov	r0, #0
   114ac:	mov	r2, #5
   114b0:	movt	r1, #1
   114b4:	bl	11104 <dcgettext@plt>
   114b8:	ldr	r1, [r7]
   114bc:	bl	11068 <fputs_unlocked@plt>
   114c0:	movw	r1, #57499	; 0xe09b
   114c4:	mov	r0, #0
   114c8:	mov	r2, #5
   114cc:	movt	r1, #1
   114d0:	bl	11104 <dcgettext@plt>
   114d4:	ldr	r1, [r7]
   114d8:	bl	11068 <fputs_unlocked@plt>
   114dc:	movw	r1, #57544	; 0xe0c8
   114e0:	mov	r0, #0
   114e4:	mov	r2, #5
   114e8:	movt	r1, #1
   114ec:	bl	11104 <dcgettext@plt>
   114f0:	ldr	r1, [r7]
   114f4:	bl	11068 <fputs_unlocked@plt>
   114f8:	movw	r1, #57614	; 0xe10e
   114fc:	mov	r0, #0
   11500:	mov	r2, #5
   11504:	movt	r1, #1
   11508:	bl	11104 <dcgettext@plt>
   1150c:	ldr	r1, [r7]
   11510:	bl	11068 <fputs_unlocked@plt>
   11514:	movw	r1, #57765	; 0xe1a5
   11518:	mov	r0, #0
   1151c:	mov	r2, #5
   11520:	movt	r1, #1
   11524:	bl	11104 <dcgettext@plt>
   11528:	ldr	r1, [r7]
   1152c:	bl	11068 <fputs_unlocked@plt>
   11530:	movw	r1, #57818	; 0xe1da
   11534:	mov	r0, #0
   11538:	mov	r2, #5
   1153c:	movt	r1, #1
   11540:	bl	11104 <dcgettext@plt>
   11544:	ldr	r1, [r7]
   11548:	bl	11068 <fputs_unlocked@plt>
   1154c:	movw	r1, #57871	; 0xe20f
   11550:	mov	r0, #0
   11554:	mov	r2, #5
   11558:	movt	r1, #1
   1155c:	bl	11104 <dcgettext@plt>
   11560:	ldr	r1, [r7]
   11564:	bl	11068 <fputs_unlocked@plt>
   11568:	movw	r1, #57997	; 0xe28d
   1156c:	mov	r0, #0
   11570:	mov	r2, #5
   11574:	movt	r1, #1
   11578:	bl	11104 <dcgettext@plt>
   1157c:	ldr	r1, [r7]
   11580:	bl	11068 <fputs_unlocked@plt>
   11584:	movw	r1, #58436	; 0xe444
   11588:	mov	r0, #0
   1158c:	mov	r2, #5
   11590:	movt	r1, #1
   11594:	bl	11104 <dcgettext@plt>
   11598:	ldr	r1, [r7]
   1159c:	bl	11068 <fputs_unlocked@plt>
   115a0:	movw	r1, #58481	; 0xe471
   115a4:	mov	r0, #0
   115a8:	mov	r2, #5
   115ac:	movt	r1, #1
   115b0:	bl	11104 <dcgettext@plt>
   115b4:	ldr	r1, [r7]
   115b8:	bl	11068 <fputs_unlocked@plt>
   115bc:	movw	r1, #58535	; 0xe4a7
   115c0:	mov	r0, #0
   115c4:	mov	r2, #5
   115c8:	movt	r1, #1
   115cc:	bl	11104 <dcgettext@plt>
   115d0:	movw	r2, #58579	; 0xe4d3
   115d4:	mov	r1, r0
   115d8:	mov	r0, #1
   115dc:	movt	r2, #1
   115e0:	bl	1123c <__printf_chk@plt>
   115e4:	movw	r1, #58588	; 0xe4dc
   115e8:	mov	r0, #0
   115ec:	mov	r2, #5
   115f0:	movt	r1, #1
   115f4:	bl	11104 <dcgettext@plt>
   115f8:	ldr	r1, [r7]
   115fc:	bl	11068 <fputs_unlocked@plt>
   11600:	movw	r0, #60912	; 0xedf0
   11604:	mov	r2, #48	; 0x30
   11608:	mov	r6, sp
   1160c:	movw	r5, #58921	; 0xe629
   11610:	movt	r0, #1
   11614:	movt	r5, #1
   11618:	add	r1, r0, #32
   1161c:	add	r3, r0, #16
   11620:	vld1.64	{d18-d19}, [r0], r2
   11624:	vld1.64	{d16-d17}, [r1]
   11628:	vld1.64	{d20-d21}, [r3]
   1162c:	add	r1, r6, #32
   11630:	vldr	d22, [r0]
   11634:	add	r0, r6, #16
   11638:	vst1.64	{d16-d17}, [r1]
   1163c:	movw	r1, #59800	; 0xe998
   11640:	vst1.64	{d20-d21}, [r0]
   11644:	mov	r0, r6
   11648:	vst1.64	{d18-d19}, [r0], r2
   1164c:	movt	r1, #1
   11650:	vstr	d22, [r0]
   11654:	mov	r0, r5
   11658:	bl	1108c <strcmp@plt>
   1165c:	cmp	r0, #0
   11660:	ldrne	r1, [r6, #8]!
   11664:	cmpne	r1, #0
   11668:	bne	11654 <__assert_fail@plt+0x34c>
   1166c:	ldr	r6, [r6, #4]
   11670:	movw	r1, #59895	; 0xe9f7
   11674:	mov	r0, #0
   11678:	mov	r2, #5
   1167c:	movt	r1, #1
   11680:	bl	11104 <dcgettext@plt>
   11684:	movw	r2, #59023	; 0xe68f
   11688:	movw	r3, #59918	; 0xea0e
   1168c:	mov	r1, r0
   11690:	mov	r0, #1
   11694:	movt	r2, #1
   11698:	movt	r3, #1
   1169c:	bl	1123c <__printf_chk@plt>
   116a0:	cmp	r6, #0
   116a4:	mov	r0, #5
   116a8:	mov	r1, #0
   116ac:	moveq	r6, r5
   116b0:	bl	11290 <setlocale@plt>
   116b4:	cmp	r0, #0
   116b8:	beq	116f0 <__assert_fail@plt+0x3e8>
   116bc:	movw	r1, #59958	; 0xea36
   116c0:	mov	r2, #3
   116c4:	movt	r1, #1
   116c8:	bl	112d8 <strncmp@plt>
   116cc:	cmp	r0, #0
   116d0:	beq	116f0 <__assert_fail@plt+0x3e8>
   116d4:	movw	r1, #59962	; 0xea3a
   116d8:	mov	r0, #0
   116dc:	mov	r2, #5
   116e0:	movt	r1, #1
   116e4:	bl	11104 <dcgettext@plt>
   116e8:	ldr	r1, [r7]
   116ec:	bl	11068 <fputs_unlocked@plt>
   116f0:	movw	r1, #60033	; 0xea81
   116f4:	mov	r0, #0
   116f8:	mov	r2, #5
   116fc:	movt	r1, #1
   11700:	bl	11104 <dcgettext@plt>
   11704:	movw	r2, #59918	; 0xea0e
   11708:	mov	r1, r0
   1170c:	mov	r0, #1
   11710:	mov	r3, r5
   11714:	movt	r2, #1
   11718:	bl	1123c <__printf_chk@plt>
   1171c:	movw	r1, #60060	; 0xea9c
   11720:	mov	r0, #0
   11724:	mov	r2, #5
   11728:	movt	r1, #1
   1172c:	bl	11104 <dcgettext@plt>
   11730:	movw	r3, #58435	; 0xe443
   11734:	mov	r1, r0
   11738:	movw	r0, #59828	; 0xe9b4
   1173c:	cmp	r6, r5
   11740:	mov	r2, r6
   11744:	movt	r0, #1
   11748:	movt	r3, #1
   1174c:	moveq	r3, r0
   11750:	mov	r0, #1
   11754:	bl	1123c <__printf_chk@plt>
   11758:	mov	r0, r4
   1175c:	bl	111dc <exit@plt>
   11760:	movw	r0, #360	; 0x168
   11764:	movw	r1, #57380	; 0xe024
   11768:	mov	r2, #5
   1176c:	movt	r0, #3
   11770:	movt	r1, #1
   11774:	ldr	r5, [r0]
   11778:	mov	r0, #0
   1177c:	bl	11104 <dcgettext@plt>
   11780:	mov	r2, r0
   11784:	movw	r0, #416	; 0x1a0
   11788:	mov	r1, #1
   1178c:	movt	r0, #3
   11790:	ldr	r3, [r0]
   11794:	mov	r0, r5
   11798:	bl	11254 <__fprintf_chk@plt>
   1179c:	mov	r0, r4
   117a0:	bl	111dc <exit@plt>
   117a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117a8:	add	fp, sp, #28
   117ac:	sub	sp, sp, #316	; 0x13c
   117b0:	mov	r5, r0
   117b4:	ldr	r0, [r1]
   117b8:	mov	r4, r1
   117bc:	bl	19f58 <__assert_fail@plt+0x8c50>
   117c0:	movw	r7, #58435	; 0xe443
   117c4:	mov	r0, #6
   117c8:	movt	r7, #1
   117cc:	mov	r1, r7
   117d0:	bl	11290 <setlocale@plt>
   117d4:	movw	r6, #59027	; 0xe693
   117d8:	movw	r1, #58927	; 0xe62f
   117dc:	movt	r6, #1
   117e0:	movt	r1, #1
   117e4:	mov	r0, r6
   117e8:	bl	112cc <bindtextdomain@plt>
   117ec:	mov	r0, r6
   117f0:	bl	1111c <textdomain@plt>
   117f4:	movw	r0, #39848	; 0x9ba8
   117f8:	movt	r0, #1
   117fc:	bl	1dffc <__assert_fail@plt+0xccf4>
   11800:	movw	r0, #372	; 0x174
   11804:	mov	r1, #0
   11808:	mov	r2, #1
   1180c:	mov	r3, #0
   11810:	movt	r0, #3
   11814:	ldr	r0, [r0]
   11818:	bl	11224 <setvbuf@plt>
   1181c:	add	r0, sp, #148	; 0x94
   11820:	movw	r6, #58951	; 0xe647
   11824:	movw	r3, #60688	; 0xed10
   11828:	mvn	r8, #0
   1182c:	add	r0, r0, #7
   11830:	movt	r6, #1
   11834:	movt	r3, #1
   11838:	and	r1, r0, #7
   1183c:	sub	r0, r0, r1
   11840:	str	r1, [sp, #144]	; 0x90
   11844:	str	r0, [sp, #64]	; 0x40
   11848:	mov	r0, #0
   1184c:	str	r0, [sp, #68]	; 0x44
   11850:	mov	r0, #0
   11854:	b	1187c <__assert_fail@plt+0x574>
   11858:	strb	r1, [r0, #2]
   1185c:	ldr	r0, [sp, #88]	; 0x58
   11860:	b	1187c <__assert_fail@plt+0x574>
   11864:	movw	r0, #384	; 0x180
   11868:	mov	r1, #0
   1186c:	movt	r0, #3
   11870:	strh	r1, [r0]
   11874:	mov	r1, #1
   11878:	b	11858 <__assert_fail@plt+0x550>
   1187c:	str	r0, [sp, #88]	; 0x58
   11880:	mov	r0, #0
   11884:	mov	r1, r4
   11888:	mov	r2, r6
   1188c:	mov	sl, r3
   11890:	str	r0, [sp]
   11894:	mov	r0, r5
   11898:	bl	111c4 <getopt_long@plt>
   1189c:	cmp	r0, #97	; 0x61
   118a0:	ble	11a74 <__assert_fail@plt+0x76c>
   118a4:	sub	r1, r0, #98	; 0x62
   118a8:	mov	r9, r6
   118ac:	cmp	r1, #24
   118b0:	bhi	11938 <__assert_fail@plt+0x630>
   118b4:	add	r2, pc, #12
   118b8:	mov	r0, #1
   118bc:	mov	r6, r9
   118c0:	mov	r3, sl
   118c4:	ldr	pc, [r2, r1, lsl #2]
   118c8:	andeq	r1, r1, ip, lsr #18
   118cc:	andeq	r1, r1, ip, ror r8
   118d0:	andeq	r3, r1, r0, lsl #5
   118d4:	andeq	r3, r1, r0, lsl #5
   118d8:	andeq	r3, r1, r0, lsl #5
   118dc:	andeq	r3, r1, r0, lsl #5
   118e0:	andeq	r3, r1, r0, lsl #5
   118e4:	andeq	r3, r1, r0, lsl #5
   118e8:	andeq	r3, r1, r0, lsl #5
   118ec:	andeq	r3, r1, r0, lsl #5
   118f0:	andeq	r1, r1, r0, lsr #19
   118f4:	andeq	r3, r1, r0, lsl #5
   118f8:	andeq	r3, r1, r0, lsl #5
   118fc:	andeq	r3, r1, r0, lsl #5
   11900:	andeq	r3, r1, r0, lsl #5
   11904:	andeq	r3, r1, r0, lsl #5
   11908:	andeq	r3, r1, r0, lsl #5
   1190c:	andeq	r3, r1, r0, lsl #5
   11910:	andeq	r1, r1, r0, lsr #20
   11914:	andeq	r3, r1, r0, lsl #5
   11918:	andeq	r3, r1, r0, lsl #5
   1191c:	muleq	r1, r4, r9
   11920:	andeq	r3, r1, r0, lsl #5
   11924:	andeq	r3, r1, r0, lsl #5
   11928:	andeq	r1, r1, ip, asr sl
   1192c:	ldr	r0, [sp, #88]	; 0x58
   11930:	mov	r8, #1
   11934:	b	1187c <__assert_fail@plt+0x574>
   11938:	sub	r0, r0, #256	; 0x100
   1193c:	cmp	r0, #4
   11940:	bhi	13280 <__assert_fail@plt+0x1f78>
   11944:	add	r1, pc, #8
   11948:	mov	r6, r9
   1194c:	mov	r3, sl
   11950:	ldr	pc, [r1, r0, lsl #2]
   11954:	andeq	r1, r1, r8, ror #18
   11958:	andeq	r1, r1, r4, asr #20
   1195c:	andeq	r1, r1, r4, ror #16
   11960:	andeq	r1, r1, ip, lsr #20
   11964:	andeq	r1, r1, r0, lsl #19
   11968:	movw	r0, #384	; 0x180
   1196c:	mov	r1, #1
   11970:	movt	r0, #3
   11974:	strb	r1, [r0, #3]
   11978:	ldr	r0, [sp, #88]	; 0x58
   1197c:	b	1187c <__assert_fail@plt+0x574>
   11980:	mov	r0, #1
   11984:	mov	r8, #1
   11988:	str	r0, [sp, #68]	; 0x44
   1198c:	ldr	r0, [sp, #88]	; 0x58
   11990:	b	1187c <__assert_fail@plt+0x574>
   11994:	movw	r0, #384	; 0x180
   11998:	mov	r1, #256	; 0x100
   1199c:	b	11a4c <__assert_fail@plt+0x744>
   119a0:	movw	r0, #376	; 0x178
   119a4:	movw	r1, #58959	; 0xe64f
   119a8:	mov	r2, #5
   119ac:	movt	r0, #3
   119b0:	movt	r1, #1
   119b4:	ldr	r6, [r0]
   119b8:	mov	r7, r0
   119bc:	mov	r0, #0
   119c0:	bl	11104 <dcgettext@plt>
   119c4:	mvn	r1, #0
   119c8:	str	r0, [sp, #12]
   119cc:	mov	r0, #0
   119d0:	mov	r2, #0
   119d4:	mov	r3, #0
   119d8:	str	r1, [sp]
   119dc:	str	r1, [sp, #4]
   119e0:	movw	r1, #58435	; 0xe443
   119e4:	str	r0, [sp, #16]
   119e8:	mov	r0, r6
   119ec:	movt	r1, #1
   119f0:	str	r1, [sp, #8]
   119f4:	bl	1cc50 <__assert_fail@plt+0xb948>
   119f8:	movw	r2, #384	; 0x180
   119fc:	ldr	r7, [r7]
   11a00:	tst	r0, #7
   11a04:	mov	r3, sl
   11a08:	mov	r6, r9
   11a0c:	movt	r2, #3
   11a10:	strd	r0, [r2, #16]
   11a14:	ldr	r0, [sp, #88]	; 0x58
   11a18:	beq	1187c <__assert_fail@plt+0x574>
   11a1c:	b	13228 <__assert_fail@plt+0x1f20>
   11a20:	ldr	r0, [sp, #88]	; 0x58
   11a24:	mov	r8, #0
   11a28:	b	1187c <__assert_fail@plt+0x574>
   11a2c:	movw	r0, #384	; 0x180
   11a30:	mov	r1, #1
   11a34:	movt	r0, #3
   11a38:	strb	r1, [r0, #4]
   11a3c:	ldr	r0, [sp, #88]	; 0x58
   11a40:	b	1187c <__assert_fail@plt+0x574>
   11a44:	movw	r0, #384	; 0x180
   11a48:	mov	r1, #1
   11a4c:	movt	r0, #3
   11a50:	strh	r1, [r0]
   11a54:	mov	r1, #0
   11a58:	b	11858 <__assert_fail@plt+0x550>
   11a5c:	movw	r0, #384	; 0x180
   11a60:	mov	r1, #1
   11a64:	movt	r0, #3
   11a68:	strb	r1, [r0, #5]
   11a6c:	ldr	r0, [sp, #88]	; 0x58
   11a70:	b	1187c <__assert_fail@plt+0x574>
   11a74:	cmn	r0, #1
   11a78:	bne	131bc <__assert_fail@plt+0x1eb4>
   11a7c:	movw	r1, #384	; 0x180
   11a80:	mov	r0, #1
   11a84:	ldr	r3, [sp, #88]	; 0x58
   11a88:	movw	r2, #513	; 0x201
   11a8c:	movw	r9, #372	; 0x174
   11a90:	movt	r1, #3
   11a94:	movt	r9, #3
   11a98:	strb	r0, [r1, #8]
   11a9c:	ldrd	r0, [r1, #16]
   11aa0:	subs	r2, r0, r2
   11aa4:	sbcs	r2, r1, #0
   11aa8:	bcs	13288 <__assert_fail@plt+0x1f80>
   11aac:	orrs	r2, r0, r1
   11ab0:	beq	11ac8 <__assert_fail@plt+0x7c0>
   11ab4:	lsr	r0, r0, #2
   11ab8:	movw	r2, #384	; 0x180
   11abc:	orr	r0, r0, r1, lsl #30
   11ac0:	movt	r2, #3
   11ac4:	b	11ae0 <__assert_fail@plt+0x7d8>
   11ac8:	movw	r2, #384	; 0x180
   11acc:	mov	r1, #0
   11ad0:	mov	r0, #512	; 0x200
   11ad4:	movt	r2, #3
   11ad8:	strd	r0, [r2, #16]
   11adc:	mov	r0, #128	; 0x80
   11ae0:	str	r0, [r2, #12]
   11ae4:	ldr	r0, [sp, #68]	; 0x44
   11ae8:	cmp	r8, #0
   11aec:	eor	r1, r0, #1
   11af0:	tsteq	r1, #1
   11af4:	beq	132fc <__assert_fail@plt+0x1ff4>
   11af8:	eor	r0, r3, #1
   11afc:	tst	r0, #1
   11b00:	bne	11b18 <__assert_fail@plt+0x810>
   11b04:	movw	r2, #384	; 0x180
   11b08:	movt	r2, #3
   11b0c:	ldrb	r2, [r2, #5]
   11b10:	cmp	r2, #0
   11b14:	bne	13308 <__assert_fail@plt+0x2000>
   11b18:	orr	r1, r1, r0
   11b1c:	tst	r1, #1
   11b20:	beq	13314 <__assert_fail@plt+0x200c>
   11b24:	mov	r1, #0
   11b28:	cmp	r8, #0
   11b2c:	movwlt	r1, #1
   11b30:	orr	r1, r1, r0
   11b34:	tst	r1, #1
   11b38:	beq	13320 <__assert_fail@plt+0x2018>
   11b3c:	movw	r2, #384	; 0x180
   11b40:	movt	r2, #3
   11b44:	ldrb	r1, [r2, #3]
   11b48:	mvn	r1, r1
   11b4c:	orr	r1, r3, r1
   11b50:	tst	r1, #1
   11b54:	beq	1332c <__assert_fail@plt+0x2024>
   11b58:	ldrb	r1, [r2]
   11b5c:	mvn	r1, r1
   11b60:	orr	r1, r3, r1
   11b64:	tst	r1, #1
   11b68:	beq	13338 <__assert_fail@plt+0x2030>
   11b6c:	ldrb	r1, [r2, #1]
   11b70:	mvn	r1, r1
   11b74:	orr	r1, r3, r1
   11b78:	tst	r1, #1
   11b7c:	beq	13344 <__assert_fail@plt+0x203c>
   11b80:	ldrb	r1, [r2, #2]
   11b84:	mvn	r1, r1
   11b88:	orr	r1, r3, r1
   11b8c:	tst	r1, #1
   11b90:	beq	13350 <__assert_fail@plt+0x2048>
   11b94:	ldrb	r1, [r2, #4]
   11b98:	and	r0, r1, r0
   11b9c:	tst	r0, #1
   11ba0:	bne	1335c <__assert_fail@plt+0x2054>
   11ba4:	movw	r0, #352	; 0x160
   11ba8:	add	r6, r4, r5, lsl #2
   11bac:	movt	r0, #3
   11bb0:	ldr	r0, [r0]
   11bb4:	cmp	r0, r5
   11bb8:	add	r0, r4, r0, lsl #2
   11bbc:	mov	r4, #1
   11bc0:	movweq	r1, #61152	; 0xeee0
   11bc4:	movteq	r1, #1
   11bc8:	streq	r1, [r6], #4
   11bcc:	cmp	r0, r6
   11bd0:	bcs	13144 <__assert_fail@plt+0x1e3c>
   11bd4:	mov	r2, r0
   11bd8:	ldr	r0, [sp, #144]	; 0x90
   11bdc:	mov	r1, #42	; 0x2a
   11be0:	cmp	r8, #1
   11be4:	sub	r3, fp, #116	; 0x74
   11be8:	movw	r7, #60677	; 0xed05
   11bec:	str	r6, [sp, #80]	; 0x50
   11bf0:	movwlt	r1, #32
   11bf4:	movt	r7, #1
   11bf8:	str	r1, [sp, #36]	; 0x24
   11bfc:	add	r1, sp, #148	; 0x94
   11c00:	rsb	r0, r0, #7
   11c04:	add	sl, r1, r0
   11c08:	add	r0, r3, #7
   11c0c:	and	r1, r0, #7
   11c10:	str	sl, [sp, #56]	; 0x38
   11c14:	sub	r0, r0, r1
   11c18:	str	r0, [sp, #24]
   11c1c:	rsb	r0, r1, #7
   11c20:	mov	r1, #1
   11c24:	add	r0, r3, r0
   11c28:	str	r0, [sp, #28]
   11c2c:	mov	r0, r2
   11c30:	b	11c4c <__assert_fail@plt+0x944>
   11c34:	ldr	r1, [sp, #144]	; 0x90
   11c38:	bl	11284 <__overflow@plt>
   11c3c:	b	1312c <__assert_fail@plt+0x1e24>
   11c40:	mov	r1, #92	; 0x5c
   11c44:	bl	11284 <__overflow@plt>
   11c48:	b	11d60 <__assert_fail@plt+0xa58>
   11c4c:	str	r0, [sp, #112]	; 0x70
   11c50:	ldr	r4, [r0]
   11c54:	ldr	r0, [sp, #88]	; 0x58
   11c58:	str	r1, [sp, #96]	; 0x60
   11c5c:	tst	r0, #1
   11c60:	beq	11cbc <__assert_fail@plt+0x9b4>
   11c64:	movw	r1, #61152	; 0xeee0
   11c68:	mov	r0, r4
   11c6c:	movt	r1, #1
   11c70:	bl	1108c <strcmp@plt>
   11c74:	movw	sl, #384	; 0x180
   11c78:	mov	r6, r0
   11c7c:	cmp	r0, #0
   11c80:	movt	sl, #3
   11c84:	beq	11e64 <__assert_fail@plt+0xb5c>
   11c88:	movw	r1, #60658	; 0xecf2
   11c8c:	mov	r0, r4
   11c90:	movt	r1, #1
   11c94:	bl	19dd8 <__assert_fail@plt+0x8ad0>
   11c98:	mov	r8, r4
   11c9c:	cmp	r0, #0
   11ca0:	sub	r4, fp, #120	; 0x78
   11ca4:	sub	r5, fp, #124	; 0x7c
   11ca8:	beq	12fac <__assert_fail@plt+0x1ca4>
   11cac:	mov	r3, r0
   11cb0:	str	r6, [sp, #76]	; 0x4c
   11cb4:	str	r8, [sp, #92]	; 0x5c
   11cb8:	b	11e9c <__assert_fail@plt+0xb94>
   11cbc:	ldr	r1, [sp, #64]	; 0x40
   11cc0:	mov	r0, r4
   11cc4:	sub	r2, fp, #116	; 0x74
   11cc8:	mov	r8, r4
   11ccc:	bl	133b4 <__assert_fail@plt+0x20ac>
   11cd0:	movw	r5, #384	; 0x180
   11cd4:	mov	r4, #0
   11cd8:	cmp	r0, #0
   11cdc:	movt	r5, #3
   11ce0:	beq	13130 <__assert_fail@plt+0x1e28>
   11ce4:	ldrb	r0, [r5, #5]
   11ce8:	mov	r4, #0
   11cec:	cmp	r0, #0
   11cf0:	mov	r0, #10
   11cf4:	movwne	r0, #0
   11cf8:	str	r0, [sp, #144]	; 0x90
   11cfc:	bne	11d64 <__assert_fail@plt+0xa5c>
   11d00:	mov	r0, r8
   11d04:	mov	r1, #92	; 0x5c
   11d08:	bl	11200 <strchr@plt>
   11d0c:	cmp	r0, #0
   11d10:	bne	11d3c <__assert_fail@plt+0xa34>
   11d14:	mov	r0, r8
   11d18:	mov	r1, #10
   11d1c:	bl	11200 <strchr@plt>
   11d20:	cmp	r0, #0
   11d24:	bne	11d3c <__assert_fail@plt+0xa34>
   11d28:	mov	r0, r8
   11d2c:	mov	r1, #13
   11d30:	bl	11200 <strchr@plt>
   11d34:	cmp	r0, #0
   11d38:	beq	11d64 <__assert_fail@plt+0xa5c>
   11d3c:	ldr	r0, [r9]
   11d40:	ldr	r1, [r0, #20]
   11d44:	ldr	r2, [r0, #24]
   11d48:	cmp	r1, r2
   11d4c:	bcs	11c40 <__assert_fail@plt+0x938>
   11d50:	add	r2, r1, #1
   11d54:	str	r2, [r0, #20]
   11d58:	mov	r0, #92	; 0x5c
   11d5c:	strb	r0, [r1]
   11d60:	mov	r4, #1
   11d64:	ldr	r0, [sp, #68]	; 0x44
   11d68:	tst	r0, #1
   11d6c:	beq	12f08 <__assert_fail@plt+0x1c00>
   11d70:	ldr	r1, [r9]
   11d74:	movw	r0, #57491	; 0xe093
   11d78:	movt	r0, #1
   11d7c:	bl	11068 <fputs_unlocked@plt>
   11d80:	ldrd	r2, [r5, #16]
   11d84:	lsr	r0, r2, #9
   11d88:	orr	r0, r0, r3, lsl #23
   11d8c:	orr	r0, r0, r3, lsr #9
   11d90:	cmp	r0, #0
   11d94:	bne	11da8 <__assert_fail@plt+0xaa0>
   11d98:	movw	r1, #60663	; 0xecf7
   11d9c:	mov	r0, #1
   11da0:	movt	r1, #1
   11da4:	bl	1123c <__printf_chk@plt>
   11da8:	ldr	r1, [r9]
   11dac:	movw	r0, #60669	; 0xecfd
   11db0:	movt	r0, #1
   11db4:	bl	11068 <fputs_unlocked@plt>
   11db8:	cmp	r4, #0
   11dbc:	mov	r6, r8
   11dc0:	bne	11dd8 <__assert_fail@plt+0xad0>
   11dc4:	ldr	r1, [r9]
   11dc8:	mov	r0, r8
   11dcc:	bl	11068 <fputs_unlocked@plt>
   11dd0:	b	12ef8 <__assert_fail@plt+0x1bf0>
   11dd4:	add	r6, r6, #1
   11dd8:	ldrb	r1, [r6]
   11ddc:	cmp	r1, #12
   11de0:	ble	11e04 <__assert_fail@plt+0xafc>
   11de4:	cmp	r1, #13
   11de8:	beq	11e1c <__assert_fail@plt+0xb14>
   11dec:	cmp	r1, #92	; 0x5c
   11df0:	bne	11e38 <__assert_fail@plt+0xb30>
   11df4:	ldr	r1, [r9]
   11df8:	movw	r0, #60660	; 0xecf4
   11dfc:	movt	r0, #1
   11e00:	b	11e28 <__assert_fail@plt+0xb20>
   11e04:	cmp	r1, #10
   11e08:	bne	11e30 <__assert_fail@plt+0xb28>
   11e0c:	ldr	r1, [r9]
   11e10:	movw	r0, #60654	; 0xecee
   11e14:	movt	r0, #1
   11e18:	b	11e28 <__assert_fail@plt+0xb20>
   11e1c:	ldr	r1, [r9]
   11e20:	movw	r0, #60657	; 0xecf1
   11e24:	movt	r0, #1
   11e28:	bl	11068 <fputs_unlocked@plt>
   11e2c:	b	11dd4 <__assert_fail@plt+0xacc>
   11e30:	cmp	r1, #0
   11e34:	beq	12ef8 <__assert_fail@plt+0x1bf0>
   11e38:	ldr	r0, [r9]
   11e3c:	ldr	r2, [r0, #20]
   11e40:	ldr	r3, [r0, #24]
   11e44:	cmp	r2, r3
   11e48:	bcs	11e5c <__assert_fail@plt+0xb54>
   11e4c:	add	r3, r2, #1
   11e50:	str	r3, [r0, #20]
   11e54:	strb	r1, [r2]
   11e58:	b	11dd4 <__assert_fail@plt+0xacc>
   11e5c:	bl	11284 <__overflow@plt>
   11e60:	b	11dd4 <__assert_fail@plt+0xacc>
   11e64:	movw	r1, #59654	; 0xe906
   11e68:	mov	r0, #1
   11e6c:	mov	r2, #5
   11e70:	str	r6, [sp, #76]	; 0x4c
   11e74:	strb	r0, [sl, #9]
   11e78:	mov	r0, #0
   11e7c:	movt	r1, #1
   11e80:	bl	11104 <dcgettext@plt>
   11e84:	str	r0, [sp, #92]	; 0x5c
   11e88:	movw	r0, #368	; 0x170
   11e8c:	sub	r4, fp, #120	; 0x78
   11e90:	sub	r5, fp, #124	; 0x7c
   11e94:	movt	r0, #3
   11e98:	ldr	r3, [r0]
   11e9c:	mov	r0, #0
   11ea0:	mov	r1, #0
   11ea4:	mov	r9, #0
   11ea8:	mov	r8, #0
   11eac:	mov	r6, #0
   11eb0:	str	r3, [sp, #132]	; 0x84
   11eb4:	str	r0, [sp, #48]	; 0x30
   11eb8:	mov	r0, #0
   11ebc:	str	r1, [fp, #-124]	; 0xffffff84
   11ec0:	str	r1, [fp, #-120]	; 0xffffff88
   11ec4:	mov	r1, #0
   11ec8:	str	r0, [sp, #144]	; 0x90
   11ecc:	mov	r0, #0
   11ed0:	str	r0, [sp, #60]	; 0x3c
   11ed4:	mov	r0, #0
   11ed8:	str	r0, [sp, #72]	; 0x48
   11edc:	mov	r0, #0
   11ee0:	str	r0, [sp, #84]	; 0x54
   11ee4:	mov	r0, #0
   11ee8:	str	r0, [sp, #52]	; 0x34
   11eec:	mov	r0, #0
   11ef0:	str	r0, [sp, #124]	; 0x7c
   11ef4:	mov	r0, #0
   11ef8:	str	r0, [sp, #120]	; 0x78
   11efc:	b	128b4 <__assert_fail@plt+0x15ac>
   11f00:	mov	r1, r7
   11f04:	add	r7, r4, #7
   11f08:	mov	r0, #0
   11f0c:	ldrb	sl, [r5, r7]
   11f10:	strb	r0, [r5, r7]
   11f14:	mov	r0, r6
   11f18:	bl	1108c <strcmp@plt>
   11f1c:	cmp	r0, #0
   11f20:	bne	123f4 <__assert_fail@plt+0x10ec>
   11f24:	cmp	sl, #40	; 0x28
   11f28:	movw	r6, #384	; 0x180
   11f2c:	mov	r1, #0
   11f30:	mov	r2, #128	; 0x80
   11f34:	moveq	r0, #40	; 0x28
   11f38:	movt	r6, #3
   11f3c:	strbeq	r0, [r5, r7]
   11f40:	addne	r7, r4, #8
   11f44:	mov	r0, #512	; 0x200
   11f48:	cmp	sl, #45	; 0x2d
   11f4c:	strd	r0, [r6, #16]
   11f50:	bne	11fac <__assert_fail@plt+0xca4>
   11f54:	str	r1, [sp]
   11f58:	add	r0, r5, r7
   11f5c:	sub	r1, fp, #44	; 0x2c
   11f60:	mov	r2, #0
   11f64:	sub	r3, fp, #40	; 0x28
   11f68:	bl	1cc58 <__assert_fail@plt+0xb950>
   11f6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11f70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11f74:	subs	r4, r2, #1
   11f78:	sbc	r7, r3, #0
   11f7c:	tst	r2, #7
   11f80:	cmpeq	r0, #0
   11f84:	bne	123f4 <__assert_fail@plt+0x10ec>
   11f88:	ldrd	r0, [r6, #16]
   11f8c:	subs	r0, r4, r0
   11f90:	sbcs	r0, r7, r1
   11f94:	bcs	123f4 <__assert_fail@plt+0x10ec>
   11f98:	lsr	r0, r2, #2
   11f9c:	strd	r2, [r6, #16]
   11fa0:	orr	r2, r0, r3, lsl #30
   11fa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11fa8:	sub	r7, r0, r5
   11fac:	str	r2, [r6, #12]
   11fb0:	str	r2, [sp, #44]	; 0x2c
   11fb4:	ldrb	r0, [r5, r7]
   11fb8:	sub	r0, r0, #32
   11fbc:	clz	r0, r0
   11fc0:	lsr	r2, r0, #5
   11fc4:	add	r0, r7, r2
   11fc8:	ldrb	r1, [r5, r0]
   11fcc:	cmp	r1, #40	; 0x28
   11fd0:	bne	123f4 <__assert_fail@plt+0x10ec>
   11fd4:	ldr	r1, [sp, #116]	; 0x74
   11fd8:	add	r0, r0, #1
   11fdc:	subs	r1, r1, r0
   11fe0:	beq	123f4 <__assert_fail@plt+0x10ec>
   11fe4:	ldr	r3, [sp, #108]	; 0x6c
   11fe8:	ldr	r6, [sp, #104]	; 0x68
   11fec:	add	r0, r5, r0
   11ff0:	str	r9, [sp, #32]
   11ff4:	str	r0, [sp, #40]	; 0x28
   11ff8:	add	r1, r3, r6
   11ffc:	add	r3, r7, r3
   12000:	sub	r0, r5, r1
   12004:	sub	r1, r8, r1
   12008:	add	r3, r3, r6
   1200c:	add	r7, r3, r2
   12010:	add	r1, r5, r1
   12014:	add	r4, r1, #2
   12018:	add	r1, r1, #1
   1201c:	add	r3, r7, #2
   12020:	add	r2, r7, #3
   12024:	add	r9, r7, #1
   12028:	mov	ip, r3
   1202c:	mov	r5, r2
   12030:	mov	r3, r0
   12034:	mov	r2, r1
   12038:	mov	r7, r4
   1203c:	cmp	r8, ip
   12040:	beq	12154 <__assert_fail@plt+0xe4c>
   12044:	add	r0, r3, r8
   12048:	mov	lr, r9
   1204c:	sub	r1, r2, #1
   12050:	mov	r6, r2
   12054:	mov	sl, r7
   12058:	add	r2, r5, #1
   1205c:	add	r9, r9, #1
   12060:	ldrb	r0, [r0, #-1]
   12064:	str	r0, [sp, #116]	; 0x74
   12068:	sub	r0, r7, #1
   1206c:	mov	r7, r3
   12070:	ldr	r4, [sp, #116]	; 0x74
   12074:	str	r0, [sp, #108]	; 0x6c
   12078:	sub	r0, r3, #1
   1207c:	add	r3, ip, #1
   12080:	cmp	r4, #41	; 0x29
   12084:	ldr	r4, [sp, #108]	; 0x6c
   12088:	bne	12028 <__assert_fail@plt+0xd20>
   1208c:	str	lr, [sp, #108]	; 0x6c
   12090:	ldr	lr, [sp, #40]	; 0x28
   12094:	ldr	r9, [sp, #32]
   12098:	add	r1, r0, r8
   1209c:	str	r7, [sp, #116]	; 0x74
   120a0:	mov	r7, sl
   120a4:	mov	r0, #0
   120a8:	mov	sl, r1
   120ac:	ldr	r1, [sp, #100]	; 0x64
   120b0:	cmp	r1, #0
   120b4:	beq	12188 <__assert_fail@plt+0xe80>
   120b8:	cmp	r0, #0
   120bc:	mov	r4, lr
   120c0:	bne	12144 <__assert_fail@plt+0xe3c>
   120c4:	sub	r0, r8, ip
   120c8:	mov	r3, #0
   120cc:	mov	r4, lr
   120d0:	ldrb	r1, [lr, r3]
   120d4:	cmp	r1, #92	; 0x5c
   120d8:	beq	120e8 <__assert_fail@plt+0xde0>
   120dc:	cmp	r1, #0
   120e0:	bne	1211c <__assert_fail@plt+0xe14>
   120e4:	b	123f4 <__assert_fail@plt+0x10ec>
   120e8:	sub	r1, r8, r3
   120ec:	cmp	r1, r5
   120f0:	beq	123f4 <__assert_fail@plt+0x10ec>
   120f4:	add	r3, r3, #1
   120f8:	ldrb	r2, [lr, r3]
   120fc:	cmp	r2, #92	; 0x5c
   12100:	beq	12130 <__assert_fail@plt+0xe28>
   12104:	mov	r1, #10
   12108:	cmp	r2, #110	; 0x6e
   1210c:	beq	1211c <__assert_fail@plt+0xe14>
   12110:	cmp	r2, #114	; 0x72
   12114:	bne	123f4 <__assert_fail@plt+0x10ec>
   12118:	mov	r1, #13
   1211c:	add	r3, r3, #1
   12120:	strb	r1, [r4], #1
   12124:	cmp	r3, r0
   12128:	bcc	120d0 <__assert_fail@plt+0xdc8>
   1212c:	b	12144 <__assert_fail@plt+0xe3c>
   12130:	mov	r1, #92	; 0x5c
   12134:	add	r3, r3, #1
   12138:	strb	r1, [r4], #1
   1213c:	cmp	r3, r0
   12140:	bcc	120d0 <__assert_fail@plt+0xdc8>
   12144:	cmp	r4, sl
   12148:	movcc	r0, #0
   1214c:	strbcc	r0, [r4]
   12150:	b	12188 <__assert_fail@plt+0xe80>
   12154:	ldr	lr, [sp, #40]	; 0x28
   12158:	str	r9, [sp, #108]	; 0x6c
   1215c:	ldr	r9, [sp, #32]
   12160:	mov	r6, r2
   12164:	mov	r0, #1
   12168:	str	r3, [sp, #116]	; 0x74
   1216c:	ldrb	r1, [lr]
   12170:	mov	sl, lr
   12174:	cmp	r1, #41	; 0x29
   12178:	bne	123f4 <__assert_fail@plt+0x10ec>
   1217c:	ldr	r1, [sp, #100]	; 0x64
   12180:	cmp	r1, #0
   12184:	bne	120b8 <__assert_fail@plt+0xdb0>
   12188:	ldr	r0, [sp, #108]	; 0x6c
   1218c:	ldr	r2, [sp, #116]	; 0x74
   12190:	mov	r1, #0
   12194:	strb	r1, [sl]
   12198:	mov	sl, r6
   1219c:	sub	r0, r8, r0
   121a0:	ldrb	r1, [r2, r8]
   121a4:	cmp	r1, #9
   121a8:	cmpne	r1, #32
   121ac:	bne	121d0 <__assert_fail@plt+0xec8>
   121b0:	add	r7, r7, #1
   121b4:	add	sl, sl, #1
   121b8:	add	r8, r8, #1
   121bc:	add	r0, r0, #1
   121c0:	ldrb	r1, [r2, r8]
   121c4:	cmp	r1, #9
   121c8:	cmpne	r1, #32
   121cc:	beq	121b0 <__assert_fail@plt+0xea8>
   121d0:	cmp	r1, #61	; 0x3d
   121d4:	beq	121e8 <__assert_fail@plt+0xee0>
   121d8:	b	123f4 <__assert_fail@plt+0x10ec>
   121dc:	add	r0, r0, #1
   121e0:	add	r7, r7, #1
   121e4:	mov	sl, r0
   121e8:	ldrb	r5, [sl]
   121ec:	mov	r0, sl
   121f0:	cmp	r5, #32
   121f4:	cmpne	r5, #9
   121f8:	beq	121dc <__assert_fail@plt+0xed4>
   121fc:	ldr	r0, [sp, #44]	; 0x2c
   12200:	cmp	r0, #0
   12204:	beq	12240 <__assert_fail@plt+0xf38>
   12208:	bl	111d0 <__ctype_b_loc@plt>
   1220c:	ldr	lr, [sp, #40]	; 0x28
   12210:	ldr	r0, [r0]
   12214:	mov	r1, #0
   12218:	uxtb	r2, r5
   1221c:	add	r2, r0, r2, lsl #1
   12220:	ldrb	r2, [r2, #1]
   12224:	tst	r2, #16
   12228:	beq	123f4 <__assert_fail@plt+0x10ec>
   1222c:	ldr	r2, [sp, #44]	; 0x2c
   12230:	ldrb	r5, [r7], #1
   12234:	add	r1, r1, #1
   12238:	cmp	r1, r2
   1223c:	bcc	12218 <__assert_fail@plt+0xf10>
   12240:	cmp	r5, #0
   12244:	bne	123f4 <__assert_fail@plt+0x10ec>
   12248:	b	12280 <__assert_fail@plt+0xf78>
   1224c:	movw	r0, #264	; 0x108
   12250:	movt	r0, #3
   12254:	ldr	r0, [r0]
   12258:	cmp	r0, #0
   1225c:	beq	123f4 <__assert_fail@plt+0x10ec>
   12260:	movw	r1, #264	; 0x108
   12264:	mov	r0, #1
   12268:	movt	r1, #3
   1226c:	str	r0, [r1]
   12270:	ldr	r0, [sp, #100]	; 0x64
   12274:	add	lr, r5, ip
   12278:	cmp	r0, #0
   1227c:	bne	12b3c <__assert_fail@plt+0x1834>
   12280:	ldr	r0, [sp, #76]	; 0x4c
   12284:	str	lr, [sp, #40]	; 0x28
   12288:	cmp	r0, #0
   1228c:	bne	122ac <__assert_fail@plt+0xfa4>
   12290:	movw	r1, #61152	; 0xeee0
   12294:	mov	r0, lr
   12298:	movt	r1, #1
   1229c:	bl	1108c <strcmp@plt>
   122a0:	ldr	lr, [sp, #40]	; 0x28
   122a4:	cmp	r0, #0
   122a8:	beq	123f4 <__assert_fail@plt+0x10ec>
   122ac:	movw	r0, #384	; 0x180
   122b0:	mov	r8, #0
   122b4:	movt	r0, #3
   122b8:	ldrb	r0, [r0]
   122bc:	cmp	r0, #0
   122c0:	bne	122e0 <__assert_fail@plt+0xfd8>
   122c4:	mov	r0, lr
   122c8:	mov	r1, #10
   122cc:	bl	11200 <strchr@plt>
   122d0:	ldr	lr, [sp, #40]	; 0x28
   122d4:	mov	r8, r0
   122d8:	cmp	r0, #0
   122dc:	movwne	r8, #1
   122e0:	ldr	r1, [sp, #24]
   122e4:	mov	r0, lr
   122e8:	sub	r2, fp, #40	; 0x28
   122ec:	bl	133b4 <__assert_fail@plt+0x20ac>
   122f0:	ldr	r1, [sp, #84]	; 0x54
   122f4:	cmp	r0, #0
   122f8:	beq	124a8 <__assert_fail@plt+0x11a0>
   122fc:	ldrb	r0, [fp, #-40]	; 0xffffffd8
   12300:	sub	r5, fp, #124	; 0x7c
   12304:	cmp	r0, #0
   12308:	movwne	r0, #384	; 0x180
   1230c:	movtne	r0, #3
   12310:	ldrbne	r0, [r0, #3]
   12314:	cmpne	r0, #0
   12318:	bne	125f0 <__assert_fail@plt+0x12e8>
   1231c:	movw	r0, #384	; 0x180
   12320:	ldr	r6, [sp, #52]	; 0x34
   12324:	ldr	r4, [sp, #40]	; 0x28
   12328:	movw	r7, #60968	; 0xee28
   1232c:	mov	r5, #0
   12330:	movt	r0, #3
   12334:	movt	r7, #1
   12338:	ldr	r0, [r0, #12]
   1233c:	lsr	ip, r0, #1
   12340:	cmp	r5, r0, lsr #1
   12344:	beq	123a0 <__assert_fail@plt+0x1098>
   12348:	mov	r4, ip
   1234c:	bl	111ac <__ctype_tolower_loc@plt>
   12350:	mov	ip, r4
   12354:	ldr	r4, [sp, #40]	; 0x28
   12358:	ldr	r0, [r0]
   1235c:	mov	r5, #0
   12360:	ldr	r1, [sp, #28]
   12364:	ldrb	r3, [sl, r5, lsl #1]
   12368:	ldrb	r1, [r1, r5]
   1236c:	ldr	r3, [r0, r3, lsl #2]
   12370:	ldrb	r2, [r7, r1, lsr #4]
   12374:	cmp	r3, r2
   12378:	addeq	r2, sl, r5, lsl #1
   1237c:	andeq	r1, r1, #15
   12380:	ldrbeq	r2, [r2, #1]
   12384:	ldrbeq	r1, [r7, r1]
   12388:	ldreq	r2, [r0, r2, lsl #2]
   1238c:	cmpeq	r2, r1
   12390:	bne	123a0 <__assert_fail@plt+0x1098>
   12394:	add	r5, r5, #1
   12398:	cmp	r5, ip
   1239c:	bcc	12360 <__assert_fail@plt+0x1058>
   123a0:	movw	r2, #384	; 0x180
   123a4:	ldr	r1, [sp, #136]	; 0x88
   123a8:	adds	r7, r6, #1
   123ac:	mov	r0, r6
   123b0:	movt	r2, #3
   123b4:	ldrb	r2, [r2]
   123b8:	adc	sl, r1, #0
   123bc:	cmp	r5, ip
   123c0:	movne	r0, r7
   123c4:	movne	r1, sl
   123c8:	cmp	r2, #0
   123cc:	beq	12610 <__assert_fail@plt+0x1308>
   123d0:	ldr	r3, [sp, #48]	; 0x30
   123d4:	sub	r2, r5, ip
   123d8:	mov	r8, r1
   123dc:	str	r0, [sp, #52]	; 0x34
   123e0:	clz	r2, r2
   123e4:	lsr	r2, r2, #5
   123e8:	orr	r3, r3, r2
   123ec:	str	r3, [sp, #48]	; 0x30
   123f0:	b	12824 <__assert_fail@plt+0x151c>
   123f4:	ldr	r1, [sp, #140]	; 0x8c
   123f8:	ldr	r0, [sp, #120]	; 0x78
   123fc:	movw	sl, #384	; 0x180
   12400:	movw	r7, #57491	; 0xe093
   12404:	movt	sl, #3
   12408:	movt	r7, #1
   1240c:	adds	r1, r1, #1
   12410:	adc	r0, r0, #0
   12414:	str	r0, [sp, #120]	; 0x78
   12418:	ldrb	r0, [sl, #1]
   1241c:	cmp	r0, #1
   12420:	bne	12474 <__assert_fail@plt+0x116c>
   12424:	mov	r4, r1
   12428:	movw	r1, #60219	; 0xeb3b
   1242c:	mov	r0, #0
   12430:	mov	r2, #5
   12434:	movt	r1, #1
   12438:	bl	11104 <dcgettext@plt>
   1243c:	ldr	r2, [sp, #92]	; 0x5c
   12440:	mov	r5, r0
   12444:	mov	r0, #0
   12448:	mov	r1, #3
   1244c:	bl	1bc28 <__assert_fail@plt+0xa920>
   12450:	mov	r3, r0
   12454:	ldr	r0, [sp, #144]	; 0x90
   12458:	mov	r1, #0
   1245c:	mov	r2, r5
   12460:	stm	sp, {r0, r9}
   12464:	mov	r0, #0
   12468:	str	r7, [sp, #8]
   1246c:	bl	1117c <error@plt>
   12470:	mov	r1, r4
   12474:	ldr	r6, [sp, #128]	; 0x80
   12478:	ldr	r0, [sp, #124]	; 0x7c
   1247c:	ldr	r8, [sp, #136]	; 0x88
   12480:	ldr	r3, [sp, #132]	; 0x84
   12484:	sub	r4, fp, #120	; 0x78
   12488:	sub	r5, fp, #124	; 0x7c
   1248c:	adds	r6, r6, #1
   12490:	adc	r0, r0, #0
   12494:	str	r0, [sp, #124]	; 0x7c
   12498:	ldrb	r0, [r3]
   1249c:	tst	r0, #48	; 0x30
   124a0:	beq	128b4 <__assert_fail@plt+0x15ac>
   124a4:	b	12c08 <__assert_fail@plt+0x1900>
   124a8:	ldr	r0, [sp, #72]	; 0x48
   124ac:	movw	sl, #384	; 0x180
   124b0:	ldr	r3, [sp, #132]	; 0x84
   124b4:	sub	r4, fp, #120	; 0x78
   124b8:	sub	r5, fp, #124	; 0x7c
   124bc:	movt	sl, #3
   124c0:	adds	r0, r0, #1
   124c4:	str	r0, [sp, #72]	; 0x48
   124c8:	ldrb	r0, [sl]
   124cc:	adc	r1, r1, #0
   124d0:	str	r1, [sp, #84]	; 0x54
   124d4:	cmp	r0, #0
   124d8:	beq	124e8 <__assert_fail@plt+0x11e0>
   124dc:	ldr	r8, [sp, #136]	; 0x88
   124e0:	ldr	r1, [sp, #140]	; 0x8c
   124e4:	b	1283c <__assert_fail@plt+0x1534>
   124e8:	movw	r0, #372	; 0x174
   124ec:	ldr	r6, [sp, #128]	; 0x80
   124f0:	cmp	r8, #0
   124f4:	movt	r0, #3
   124f8:	ldr	r1, [r0]
   124fc:	beq	12648 <__assert_fail@plt+0x1340>
   12500:	ldr	r0, [r1, #20]
   12504:	ldr	r2, [r1, #24]
   12508:	ldr	r3, [sp, #40]	; 0x28
   1250c:	cmp	r0, r2
   12510:	bcs	126ec <__assert_fail@plt+0x13e4>
   12514:	add	r2, r0, #1
   12518:	str	r2, [r1, #20]
   1251c:	mov	r1, #92	; 0x5c
   12520:	strb	r1, [r0]
   12524:	ldr	r8, [sp, #136]	; 0x88
   12528:	ldrb	r1, [r3]
   1252c:	str	r3, [sp, #40]	; 0x28
   12530:	cmp	r1, #12
   12534:	ble	12578 <__assert_fail@plt+0x1270>
   12538:	cmp	r1, #13
   1253c:	beq	12560 <__assert_fail@plt+0x1258>
   12540:	cmp	r1, #92	; 0x5c
   12544:	bne	125a4 <__assert_fail@plt+0x129c>
   12548:	movw	r0, #372	; 0x174
   1254c:	movt	r0, #3
   12550:	ldr	r1, [r0]
   12554:	movw	r0, #60660	; 0xecf4
   12558:	movt	r0, #1
   1255c:	b	12594 <__assert_fail@plt+0x128c>
   12560:	movw	r0, #372	; 0x174
   12564:	movt	r0, #3
   12568:	ldr	r1, [r0]
   1256c:	movw	r0, #60657	; 0xecf1
   12570:	movt	r0, #1
   12574:	b	12594 <__assert_fail@plt+0x128c>
   12578:	cmp	r1, #10
   1257c:	bne	1259c <__assert_fail@plt+0x1294>
   12580:	movw	r0, #372	; 0x174
   12584:	movt	r0, #3
   12588:	ldr	r1, [r0]
   1258c:	movw	r0, #60654	; 0xecee
   12590:	movt	r0, #1
   12594:	bl	11068 <fputs_unlocked@plt>
   12598:	b	125cc <__assert_fail@plt+0x12c4>
   1259c:	cmp	r1, #0
   125a0:	beq	12654 <__assert_fail@plt+0x134c>
   125a4:	movw	r0, #372	; 0x174
   125a8:	movt	r0, #3
   125ac:	ldr	r0, [r0]
   125b0:	ldr	r2, [r0, #20]
   125b4:	ldr	r3, [r0, #24]
   125b8:	cmp	r2, r3
   125bc:	bcs	125e8 <__assert_fail@plt+0x12e0>
   125c0:	add	r3, r2, #1
   125c4:	str	r3, [r0, #20]
   125c8:	strb	r1, [r2]
   125cc:	ldr	r3, [sp, #40]	; 0x28
   125d0:	add	r3, r3, #1
   125d4:	ldrb	r1, [r3]
   125d8:	str	r3, [sp, #40]	; 0x28
   125dc:	cmp	r1, #12
   125e0:	bgt	12538 <__assert_fail@plt+0x1230>
   125e4:	b	12578 <__assert_fail@plt+0x1270>
   125e8:	bl	11284 <__overflow@plt>
   125ec:	b	125cc <__assert_fail@plt+0x12c4>
   125f0:	ldr	r8, [sp, #136]	; 0x88
   125f4:	ldr	r1, [sp, #140]	; 0x8c
   125f8:	ldr	r3, [sp, #132]	; 0x84
   125fc:	ldr	r6, [sp, #128]	; 0x80
   12600:	movw	sl, #384	; 0x180
   12604:	sub	r4, fp, #120	; 0x78
   12608:	movt	sl, #3
   1260c:	b	12840 <__assert_fail@plt+0x1538>
   12610:	cmp	r5, ip
   12614:	bne	12688 <__assert_fail@plt+0x1380>
   12618:	movw	r0, #384	; 0x180
   1261c:	movt	r0, #3
   12620:	ldrb	r0, [r0, #2]
   12624:	cmp	r0, #0
   12628:	beq	12688 <__assert_fail@plt+0x1380>
   1262c:	ldr	r8, [sp, #136]	; 0x88
   12630:	movw	sl, #384	; 0x180
   12634:	mov	r0, #1
   12638:	sub	r4, fp, #120	; 0x78
   1263c:	sub	r5, fp, #124	; 0x7c
   12640:	str	r0, [sp, #48]	; 0x30
   12644:	b	12830 <__assert_fail@plt+0x1528>
   12648:	ldr	r0, [sp, #40]	; 0x28
   1264c:	bl	11068 <fputs_unlocked@plt>
   12650:	ldr	r8, [sp, #136]	; 0x88
   12654:	movw	r1, #60267	; 0xeb6b
   12658:	mov	r0, #0
   1265c:	mov	r2, #5
   12660:	movt	r1, #1
   12664:	bl	11104 <dcgettext@plt>
   12668:	movw	r1, #61957	; 0xf205
   1266c:	mov	r2, r0
   12670:	mov	r0, #1
   12674:	movt	r1, #1
   12678:	bl	1123c <__printf_chk@plt>
   1267c:	ldr	r1, [sp, #140]	; 0x8c
   12680:	ldr	r3, [sp, #132]	; 0x84
   12684:	b	12840 <__assert_fail@plt+0x1538>
   12688:	movw	r0, #372	; 0x174
   1268c:	mov	r6, ip
   12690:	cmp	r8, #0
   12694:	movt	r0, #3
   12698:	ldr	r1, [r0]
   1269c:	beq	126d4 <__assert_fail@plt+0x13cc>
   126a0:	ldr	r0, [r1, #20]
   126a4:	ldr	r2, [r1, #24]
   126a8:	cmp	r0, r2
   126ac:	bcs	12700 <__assert_fail@plt+0x13f8>
   126b0:	add	r2, r0, #1
   126b4:	str	r2, [r1, #20]
   126b8:	mov	r1, #92	; 0x5c
   126bc:	strb	r1, [r0]
   126c0:	ldr	r8, [sp, #136]	; 0x88
   126c4:	ldrb	r1, [r4]
   126c8:	cmp	r1, #12
   126cc:	bgt	12774 <__assert_fail@plt+0x146c>
   126d0:	b	127c4 <__assert_fail@plt+0x14bc>
   126d4:	mov	r0, r4
   126d8:	bl	11068 <fputs_unlocked@plt>
   126dc:	ldr	r8, [sp, #136]	; 0x88
   126e0:	cmp	r5, r6
   126e4:	beq	12858 <__assert_fail@plt+0x1550>
   126e8:	b	127f4 <__assert_fail@plt+0x14ec>
   126ec:	mov	r0, r1
   126f0:	mov	r1, #92	; 0x5c
   126f4:	bl	11284 <__overflow@plt>
   126f8:	ldr	r3, [sp, #40]	; 0x28
   126fc:	b	12524 <__assert_fail@plt+0x121c>
   12700:	mov	r0, r1
   12704:	mov	r1, #92	; 0x5c
   12708:	bl	11284 <__overflow@plt>
   1270c:	ldr	r4, [sp, #40]	; 0x28
   12710:	ldr	r8, [sp, #136]	; 0x88
   12714:	ldrb	r1, [r4]
   12718:	cmp	r1, #12
   1271c:	bgt	12774 <__assert_fail@plt+0x146c>
   12720:	b	127c4 <__assert_fail@plt+0x14bc>
   12724:	movw	r0, #372	; 0x174
   12728:	movt	r0, #3
   1272c:	ldr	r0, [r0]
   12730:	ldr	r2, [r0, #20]
   12734:	ldr	r3, [r0, #24]
   12738:	cmp	r2, r3
   1273c:	bcs	12760 <__assert_fail@plt+0x1458>
   12740:	add	r3, r2, #1
   12744:	add	r4, r4, #1
   12748:	str	r3, [r0, #20]
   1274c:	strb	r1, [r2]
   12750:	ldrb	r1, [r4]
   12754:	cmp	r1, #12
   12758:	bgt	12774 <__assert_fail@plt+0x146c>
   1275c:	b	127c4 <__assert_fail@plt+0x14bc>
   12760:	bl	11284 <__overflow@plt>
   12764:	add	r4, r4, #1
   12768:	ldrb	r1, [r4]
   1276c:	cmp	r1, #12
   12770:	ble	127c4 <__assert_fail@plt+0x14bc>
   12774:	cmp	r1, #13
   12778:	beq	1279c <__assert_fail@plt+0x1494>
   1277c:	cmp	r1, #92	; 0x5c
   12780:	bne	12724 <__assert_fail@plt+0x141c>
   12784:	movw	r0, #372	; 0x174
   12788:	movt	r0, #3
   1278c:	ldr	r1, [r0]
   12790:	movw	r0, #60660	; 0xecf4
   12794:	movt	r0, #1
   12798:	b	127b0 <__assert_fail@plt+0x14a8>
   1279c:	movw	r0, #372	; 0x174
   127a0:	movt	r0, #3
   127a4:	ldr	r1, [r0]
   127a8:	movw	r0, #60657	; 0xecf1
   127ac:	movt	r0, #1
   127b0:	bl	11068 <fputs_unlocked@plt>
   127b4:	add	r4, r4, #1
   127b8:	ldrb	r1, [r4]
   127bc:	cmp	r1, #12
   127c0:	bgt	12774 <__assert_fail@plt+0x146c>
   127c4:	cmp	r1, #10
   127c8:	bne	127e4 <__assert_fail@plt+0x14dc>
   127cc:	movw	r0, #372	; 0x174
   127d0:	movt	r0, #3
   127d4:	ldr	r1, [r0]
   127d8:	movw	r0, #60654	; 0xecee
   127dc:	movt	r0, #1
   127e0:	b	127b0 <__assert_fail@plt+0x14a8>
   127e4:	cmp	r1, #0
   127e8:	bne	12724 <__assert_fail@plt+0x141c>
   127ec:	cmp	r5, r6
   127f0:	beq	12858 <__assert_fail@plt+0x1550>
   127f4:	movw	r1, #60287	; 0xeb7f
   127f8:	mov	r0, #0
   127fc:	mov	r2, #5
   12800:	movt	r1, #1
   12804:	bl	11104 <dcgettext@plt>
   12808:	movw	r1, #61957	; 0xf205
   1280c:	mov	r2, r0
   12810:	mov	r0, #1
   12814:	movt	r1, #1
   12818:	bl	1123c <__printf_chk@plt>
   1281c:	str	r7, [sp, #52]	; 0x34
   12820:	mov	r8, sl
   12824:	movw	sl, #384	; 0x180
   12828:	sub	r4, fp, #120	; 0x78
   1282c:	sub	r5, fp, #124	; 0x7c
   12830:	movt	sl, #3
   12834:	ldr	r1, [sp, #140]	; 0x8c
   12838:	ldr	r3, [sp, #132]	; 0x84
   1283c:	ldr	r6, [sp, #128]	; 0x80
   12840:	mov	r0, #1
   12844:	str	r0, [sp, #60]	; 0x3c
   12848:	ldrb	r0, [r3]
   1284c:	tst	r0, #48	; 0x30
   12850:	beq	128b4 <__assert_fail@plt+0x15ac>
   12854:	b	12c08 <__assert_fail@plt+0x1900>
   12858:	movw	sl, #384	; 0x180
   1285c:	ldr	r6, [sp, #128]	; 0x80
   12860:	mov	r1, #1
   12864:	sub	r4, fp, #120	; 0x78
   12868:	movt	sl, #3
   1286c:	str	r1, [sp, #48]	; 0x30
   12870:	ldrb	r0, [sl, #2]
   12874:	cmp	r0, #0
   12878:	bne	128ac <__assert_fail@plt+0x15a4>
   1287c:	movw	r1, #60294	; 0xeb86
   12880:	mov	r0, #0
   12884:	mov	r2, #5
   12888:	movt	r1, #1
   1288c:	bl	11104 <dcgettext@plt>
   12890:	movw	r1, #61957	; 0xf205
   12894:	mov	r2, r0
   12898:	mov	r0, #1
   1289c:	str	r0, [sp, #48]	; 0x30
   128a0:	mov	r0, #1
   128a4:	movt	r1, #1
   128a8:	bl	1123c <__printf_chk@plt>
   128ac:	sub	r5, fp, #124	; 0x7c
   128b0:	b	1267c <__assert_fail@plt+0x1374>
   128b4:	ldr	r0, [sp, #144]	; 0x90
   128b8:	str	r1, [sp, #140]	; 0x8c
   128bc:	str	r8, [sp, #136]	; 0x88
   128c0:	adds	r0, r0, #1
   128c4:	adc	r9, r9, #0
   128c8:	str	r0, [sp, #144]	; 0x90
   128cc:	orrs	r0, r0, r9
   128d0:	beq	13180 <__assert_fail@plt+0x1e78>
   128d4:	mov	r0, r4
   128d8:	mov	r1, r5
   128dc:	mov	r2, #10
   128e0:	bl	11080 <__getdelim@plt>
   128e4:	cmp	r0, #1
   128e8:	blt	12c00 <__assert_fail@plt+0x18f8>
   128ec:	mov	r8, r0
   128f0:	ldr	r0, [fp, #-120]	; 0xffffff88
   128f4:	ldr	r3, [sp, #132]	; 0x84
   128f8:	ldrb	r1, [r0]
   128fc:	cmp	r1, #35	; 0x23
   12900:	beq	12be8 <__assert_fail@plt+0x18e0>
   12904:	add	r1, r0, r8
   12908:	ldrb	r1, [r1, #-1]
   1290c:	sub	r1, r1, #10
   12910:	clz	r1, r1
   12914:	lsr	r7, r1, #5
   12918:	sub	r1, r8, r7
   1291c:	cmp	r1, #0
   12920:	mov	r2, r1
   12924:	subgt	r2, r2, #1
   12928:	ldrb	r2, [r0, r2]
   1292c:	sub	r2, r2, #13
   12930:	clz	r2, r2
   12934:	lsr	r2, r2, #5
   12938:	subs	r1, r1, r2
   1293c:	beq	12be8 <__assert_fail@plt+0x18e0>
   12940:	mov	r4, #0
   12944:	strb	r4, [r0, r1]
   12948:	ldr	r5, [fp, #-120]	; 0xffffff88
   1294c:	ldrb	r0, [r5, r4]
   12950:	cmp	r0, #9
   12954:	cmpne	r0, #32
   12958:	bne	12970 <__assert_fail@plt+0x1668>
   1295c:	add	r4, r4, #1
   12960:	ldrb	r0, [r5, r4]
   12964:	cmp	r0, #9
   12968:	cmpne	r0, #32
   1296c:	beq	1295c <__assert_fail@plt+0x1654>
   12970:	cmp	r0, #92	; 0x5c
   12974:	str	r7, [sp, #108]	; 0x6c
   12978:	movw	r7, #57491	; 0xe093
   1297c:	str	r6, [sp, #128]	; 0x80
   12980:	str	r2, [sp, #104]	; 0x68
   12984:	str	r1, [sp, #116]	; 0x74
   12988:	mov	r2, #7
   1298c:	movne	r0, #0
   12990:	addeq	r4, r4, #1
   12994:	movt	r7, #1
   12998:	moveq	r0, #1
   1299c:	add	r6, r5, r4
   129a0:	mov	r1, r7
   129a4:	str	r0, [sp, #100]	; 0x64
   129a8:	mov	r0, r6
   129ac:	bl	112d8 <strncmp@plt>
   129b0:	cmp	r0, #0
   129b4:	beq	11f00 <__assert_fail@plt+0xbf8>
   129b8:	ldrb	r0, [sl, #8]
   129bc:	ldrb	r1, [r6]
   129c0:	cmp	r0, #0
   129c4:	ldr	r0, [sp, #116]	; 0x74
   129c8:	sub	r1, r1, #92	; 0x5c
   129cc:	clz	r1, r1
   129d0:	lsr	r1, r1, #5
   129d4:	addne	r1, r1, #3
   129d8:	sub	r0, r0, r4
   129dc:	cmp	r0, r1
   129e0:	bcc	123f4 <__assert_fail@plt+0x10ec>
   129e4:	movw	r1, #384	; 0x180
   129e8:	mov	r0, #0
   129ec:	mov	sl, r6
   129f0:	movt	r1, #3
   129f4:	str	r0, [r1, #12]
   129f8:	bl	111d0 <__ctype_b_loc@plt>
   129fc:	ldrb	r1, [r6]
   12a00:	ldr	r7, [r0]
   12a04:	add	r1, r7, r1, lsl #1
   12a08:	ldrb	r1, [r1, #1]
   12a0c:	tst	r1, #16
   12a10:	beq	123f4 <__assert_fail@plt+0x10ec>
   12a14:	add	lr, r5, r4
   12a18:	mov	r3, #0
   12a1c:	mov	r2, #0
   12a20:	add	r1, lr, #1
   12a24:	ldrb	r6, [r1, r2]
   12a28:	add	r3, r3, #4
   12a2c:	add	r2, r2, #1
   12a30:	add	r6, r7, r6, lsl #1
   12a34:	ldrb	r6, [r6, #1]
   12a38:	tst	r6, #16
   12a3c:	bne	12a24 <__assert_fail@plt+0x171c>
   12a40:	movw	r1, #384	; 0x180
   12a44:	cmp	r2, #2
   12a48:	movt	r1, #3
   12a4c:	str	r2, [r1, #12]
   12a50:	bcc	123f4 <__assert_fail@plt+0x10ec>
   12a54:	cmp	r2, #128	; 0x80
   12a58:	bhi	123f4 <__assert_fail@plt+0x10ec>
   12a5c:	ands	r1, r2, #1
   12a60:	bne	123f4 <__assert_fail@plt+0x10ec>
   12a64:	movw	r7, #384	; 0x180
   12a68:	mov	r1, #0
   12a6c:	movt	r7, #3
   12a70:	str	r3, [r7, #16]
   12a74:	str	r1, [r7, #20]
   12a78:	mov	r1, lr
   12a7c:	ldrb	r3, [r1, r2]!
   12a80:	cmp	r3, #32
   12a84:	cmpne	r3, #9
   12a88:	bne	123f4 <__assert_fail@plt+0x10ec>
   12a8c:	add	r1, r1, #1
   12a90:	mov	r3, #0
   12a94:	add	r7, r4, r2
   12a98:	strb	r3, [r1, #-1]
   12a9c:	add	ip, r7, #1
   12aa0:	ldr	r0, [r0]
   12aa4:	ldrb	r1, [sl, r3]
   12aa8:	add	r1, r0, r1, lsl #1
   12aac:	ldrb	r1, [r1, #1]
   12ab0:	tst	r1, #16
   12ab4:	beq	123f4 <__assert_fail@plt+0x10ec>
   12ab8:	add	r3, r3, #1
   12abc:	cmp	r3, r2
   12ac0:	bcc	12aa4 <__assert_fail@plt+0x179c>
   12ac4:	ldrb	r0, [sl, r3]
   12ac8:	cmp	r0, #0
   12acc:	bne	123f4 <__assert_fail@plt+0x10ec>
   12ad0:	ldr	r0, [sp, #108]	; 0x6c
   12ad4:	ldr	r1, [sp, #104]	; 0x68
   12ad8:	add	r0, r0, r1
   12adc:	add	r0, r0, #2
   12ae0:	sub	r0, r0, r8
   12ae4:	add	r0, r4, r0
   12ae8:	adds	r0, r0, r2
   12aec:	beq	1224c <__assert_fail@plt+0xf44>
   12af0:	add	r0, lr, r2
   12af4:	ldrb	r0, [r0, #1]
   12af8:	cmp	r0, #32
   12afc:	cmpne	r0, #42	; 0x2a
   12b00:	bne	1224c <__assert_fail@plt+0xf44>
   12b04:	movw	r0, #264	; 0x108
   12b08:	movt	r0, #3
   12b0c:	ldr	r0, [r0]
   12b10:	cmp	r0, #1
   12b14:	beq	12b2c <__assert_fail@plt+0x1824>
   12b18:	movw	r0, #264	; 0x108
   12b1c:	add	ip, r7, #2
   12b20:	mov	r1, #0
   12b24:	movt	r0, #3
   12b28:	str	r1, [r0]
   12b2c:	ldr	r0, [sp, #100]	; 0x64
   12b30:	add	lr, r5, ip
   12b34:	cmp	r0, #0
   12b38:	beq	12280 <__assert_fail@plt+0xf78>
   12b3c:	ldr	r0, [sp, #116]	; 0x74
   12b40:	subs	r1, r0, ip
   12b44:	mov	r0, lr
   12b48:	beq	12bc8 <__assert_fail@plt+0x18c0>
   12b4c:	sub	r2, r1, #1
   12b50:	mov	r3, #0
   12b54:	mov	r0, lr
   12b58:	ldrb	r7, [lr, r3]
   12b5c:	cmp	r7, #92	; 0x5c
   12b60:	beq	12b70 <__assert_fail@plt+0x1868>
   12b64:	cmp	r7, #0
   12b68:	bne	12ba0 <__assert_fail@plt+0x1898>
   12b6c:	b	123f4 <__assert_fail@plt+0x10ec>
   12b70:	cmp	r3, r2
   12b74:	beq	123f4 <__assert_fail@plt+0x10ec>
   12b78:	add	r3, r3, #1
   12b7c:	ldrb	r4, [lr, r3]
   12b80:	cmp	r4, #92	; 0x5c
   12b84:	beq	12bb4 <__assert_fail@plt+0x18ac>
   12b88:	mov	r7, #10
   12b8c:	cmp	r4, #110	; 0x6e
   12b90:	beq	12ba0 <__assert_fail@plt+0x1898>
   12b94:	cmp	r4, #114	; 0x72
   12b98:	bne	123f4 <__assert_fail@plt+0x10ec>
   12b9c:	mov	r7, #13
   12ba0:	add	r3, r3, #1
   12ba4:	strb	r7, [r0], #1
   12ba8:	cmp	r3, r1
   12bac:	bcc	12b58 <__assert_fail@plt+0x1850>
   12bb0:	b	12bc8 <__assert_fail@plt+0x18c0>
   12bb4:	mov	r7, #92	; 0x5c
   12bb8:	add	r3, r3, #1
   12bbc:	strb	r7, [r0], #1
   12bc0:	cmp	r3, r1
   12bc4:	bcc	12b58 <__assert_fail@plt+0x1850>
   12bc8:	ldr	r1, [sp, #116]	; 0x74
   12bcc:	add	r1, r5, r1
   12bd0:	cmp	r0, r1
   12bd4:	movcc	r1, #0
   12bd8:	strbcc	r1, [r0]
   12bdc:	cmp	lr, #0
   12be0:	bne	12280 <__assert_fail@plt+0xf78>
   12be4:	b	123f4 <__assert_fail@plt+0x10ec>
   12be8:	ldr	r8, [sp, #136]	; 0x88
   12bec:	ldr	r1, [sp, #140]	; 0x8c
   12bf0:	ldrb	r0, [r3]
   12bf4:	tst	r0, #48	; 0x30
   12bf8:	beq	128b4 <__assert_fail@plt+0x15ac>
   12bfc:	b	12c08 <__assert_fail@plt+0x1900>
   12c00:	ldr	r8, [sp, #136]	; 0x88
   12c04:	ldr	r1, [sp, #140]	; 0x8c
   12c08:	ldr	r0, [fp, #-120]	; 0xffffff88
   12c0c:	str	r6, [sp, #128]	; 0x80
   12c10:	mov	r6, r1
   12c14:	bl	19e8c <__assert_fail@plt+0x8b84>
   12c18:	ldr	r1, [sp, #132]	; 0x84
   12c1c:	mov	r5, #0
   12c20:	ldr	r0, [r1]
   12c24:	ands	r4, r0, #32
   12c28:	ldr	r0, [sp, #76]	; 0x4c
   12c2c:	mvneq	r5, #0
   12c30:	cmp	r0, #0
   12c34:	beq	12cb8 <__assert_fail@plt+0x19b0>
   12c38:	mov	r0, r1
   12c3c:	bl	19cd4 <__assert_fail@plt+0x89cc>
   12c40:	movw	r9, #372	; 0x174
   12c44:	cmp	r4, #0
   12c48:	movt	r9, #3
   12c4c:	bne	12cc8 <__assert_fail@plt+0x19c0>
   12c50:	ldr	r7, [sp, #72]	; 0x48
   12c54:	ldr	r4, [sp, #84]	; 0x54
   12c58:	cmp	r0, #0
   12c5c:	beq	12c68 <__assert_fail@plt+0x1960>
   12c60:	bl	1120c <__errno_location@plt>
   12c64:	ldr	r5, [r0]
   12c68:	cmp	r5, #0
   12c6c:	blt	12cd8 <__assert_fail@plt+0x19d0>
   12c70:	movw	r4, #58990	; 0xe66e
   12c74:	movt	r4, #1
   12c78:	bne	12c94 <__assert_fail@plt+0x198c>
   12c7c:	movw	r1, #60297	; 0xeb89
   12c80:	mov	r0, #0
   12c84:	mov	r2, #5
   12c88:	movt	r1, #1
   12c8c:	bl	11104 <dcgettext@plt>
   12c90:	mov	r4, r0
   12c94:	ldr	r2, [sp, #92]	; 0x5c
   12c98:	mov	r0, #0
   12c9c:	mov	r1, #3
   12ca0:	mov	r7, #0
   12ca4:	bl	1bc28 <__assert_fail@plt+0xa920>
   12ca8:	mov	r3, r0
   12cac:	mov	r0, #0
   12cb0:	mov	r1, r5
   12cb4:	b	13018 <__assert_fail@plt+0x1d10>
   12cb8:	mov	r0, r1
   12cbc:	bl	112b4 <clearerr_unlocked@plt>
   12cc0:	movw	r9, #372	; 0x174
   12cc4:	movt	r9, #3
   12cc8:	ldr	r7, [sp, #72]	; 0x48
   12ccc:	ldr	r4, [sp, #84]	; 0x54
   12cd0:	cmp	r5, #0
   12cd4:	bge	12c70 <__assert_fail@plt+0x1968>
   12cd8:	ldr	r0, [sp, #60]	; 0x3c
   12cdc:	tst	r0, #1
   12ce0:	beq	12fe0 <__assert_fail@plt+0x1cd8>
   12ce4:	ldrb	r0, [sl]
   12ce8:	ldr	r5, [sp, #96]	; 0x60
   12cec:	cmp	r0, #0
   12cf0:	bne	12ea8 <__assert_fail@plt+0x1ba0>
   12cf4:	ldr	r1, [sp, #120]	; 0x78
   12cf8:	orrs	r0, r6, r1
   12cfc:	beq	12d70 <__assert_fail@plt+0x1a68>
   12d00:	cmp	r1, #0
   12d04:	mov	r3, r6
   12d08:	str	r6, [sp, #140]	; 0x8c
   12d0c:	mov	r6, r1
   12d10:	beq	12d38 <__assert_fail@plt+0x1a30>
   12d14:	ldr	r0, [sp, #140]	; 0x8c
   12d18:	movw	r4, #16960	; 0x4240
   12d1c:	mov	r1, r6
   12d20:	mov	r3, #0
   12d24:	movt	r4, #15
   12d28:	mov	r2, r4
   12d2c:	bl	1de24 <__assert_fail@plt+0xcb1c>
   12d30:	add	r3, r2, r4
   12d34:	ldr	r4, [sp, #84]	; 0x54
   12d38:	movw	r1, #60359	; 0xebc7
   12d3c:	movw	r2, #60402	; 0xebf2
   12d40:	mov	r0, #5
   12d44:	str	r0, [sp]
   12d48:	mov	r0, #0
   12d4c:	movt	r1, #1
   12d50:	movt	r2, #1
   12d54:	bl	112fc <dcngettext@plt>
   12d58:	mov	r2, r0
   12d5c:	ldr	r0, [sp, #140]	; 0x8c
   12d60:	mov	r1, #0
   12d64:	stm	sp, {r0, r6}
   12d68:	mov	r0, #0
   12d6c:	bl	1117c <error@plt>
   12d70:	orrs	r0, r7, r4
   12d74:	beq	12de0 <__assert_fail@plt+0x1ad8>
   12d78:	cmp	r4, #0
   12d7c:	mov	r3, r7
   12d80:	beq	12da8 <__assert_fail@plt+0x1aa0>
   12d84:	mov	r1, r4
   12d88:	movw	r4, #16960	; 0x4240
   12d8c:	mov	r0, r7
   12d90:	mov	r3, #0
   12d94:	movt	r4, #15
   12d98:	mov	r2, r4
   12d9c:	bl	1de24 <__assert_fail@plt+0xcb1c>
   12da0:	add	r3, r2, r4
   12da4:	ldr	r4, [sp, #84]	; 0x54
   12da8:	movw	r1, #60447	; 0xec1f
   12dac:	movw	r2, #60491	; 0xec4b
   12db0:	mov	r0, #5
   12db4:	str	r0, [sp]
   12db8:	mov	r0, #0
   12dbc:	movt	r1, #1
   12dc0:	movt	r2, #1
   12dc4:	bl	112fc <dcngettext@plt>
   12dc8:	mov	r2, r0
   12dcc:	mov	r0, #0
   12dd0:	mov	r1, #0
   12dd4:	str	r7, [sp]
   12dd8:	str	r4, [sp, #4]
   12ddc:	bl	1117c <error@plt>
   12de0:	ldr	r6, [sp, #52]	; 0x34
   12de4:	orrs	r0, r6, r8
   12de8:	beq	12e50 <__assert_fail@plt+0x1b48>
   12dec:	cmp	r8, #0
   12df0:	mov	r3, r6
   12df4:	beq	12e1c <__assert_fail@plt+0x1b14>
   12df8:	movw	r4, #16960	; 0x4240
   12dfc:	mov	r0, r6
   12e00:	mov	r1, r8
   12e04:	mov	r3, #0
   12e08:	movt	r4, #15
   12e0c:	mov	r2, r4
   12e10:	bl	1de24 <__assert_fail@plt+0xcb1c>
   12e14:	add	r3, r2, r4
   12e18:	ldr	r4, [sp, #84]	; 0x54
   12e1c:	movw	r1, #60536	; 0xec78
   12e20:	movw	r2, #60582	; 0xeca6
   12e24:	mov	r0, #5
   12e28:	str	r0, [sp]
   12e2c:	mov	r0, #0
   12e30:	movt	r1, #1
   12e34:	movt	r2, #1
   12e38:	bl	112fc <dcngettext@plt>
   12e3c:	mov	r2, r0
   12e40:	mov	r0, #0
   12e44:	mov	r1, #0
   12e48:	stm	sp, {r6, r8}
   12e4c:	bl	1117c <error@plt>
   12e50:	ldrb	r0, [sl, #3]
   12e54:	ldr	r1, [sp, #48]	; 0x30
   12e58:	mvn	r0, r0
   12e5c:	orr	r0, r1, r0
   12e60:	tst	r0, #1
   12e64:	bne	12ea8 <__assert_fail@plt+0x1ba0>
   12e68:	movw	r1, #60629	; 0xecd5
   12e6c:	mov	r0, #0
   12e70:	mov	r2, #5
   12e74:	movt	r1, #1
   12e78:	bl	11104 <dcgettext@plt>
   12e7c:	ldr	r2, [sp, #92]	; 0x5c
   12e80:	mov	r4, r0
   12e84:	mov	r0, #0
   12e88:	mov	r1, #3
   12e8c:	bl	1bc28 <__assert_fail@plt+0xa920>
   12e90:	mov	r2, r4
   12e94:	ldr	r4, [sp, #84]	; 0x54
   12e98:	mov	r3, r0
   12e9c:	mov	r0, #0
   12ea0:	mov	r1, #0
   12ea4:	bl	1117c <error@plt>
   12ea8:	ldr	r0, [sp, #52]	; 0x34
   12eac:	orr	r1, r4, r8
   12eb0:	orr	r0, r7, r0
   12eb4:	mov	r7, #0
   12eb8:	orrs	r0, r0, r1
   12ebc:	ldr	r1, [sp, #48]	; 0x30
   12ec0:	movwne	r0, #1
   12ec4:	mvn	r1, r1
   12ec8:	orr	r0, r1, r0
   12ecc:	tst	r0, #1
   12ed0:	bne	13024 <__assert_fail@plt+0x1d1c>
   12ed4:	ldr	r0, [sp, #124]	; 0x7c
   12ed8:	ldr	r1, [sp, #128]	; 0x80
   12edc:	orr	r0, r1, r0
   12ee0:	ldrb	r1, [sl, #4]
   12ee4:	clz	r0, r0
   12ee8:	lsr	r0, r0, #5
   12eec:	eor	r1, r1, #1
   12ef0:	orr	r7, r0, r1
   12ef4:	b	13024 <__assert_fail@plt+0x1d1c>
   12ef8:	ldr	r1, [r9]
   12efc:	movw	r0, #60672	; 0xed00
   12f00:	movt	r0, #1
   12f04:	bl	11068 <fputs_unlocked@plt>
   12f08:	ldr	r0, [r5, #12]
   12f0c:	cmp	r0, #2
   12f10:	bcc	12f38 <__assert_fail@plt+0x1c30>
   12f14:	mov	r6, #0
   12f18:	ldrb	r2, [sl, r6]
   12f1c:	mov	r0, #1
   12f20:	mov	r1, r7
   12f24:	bl	1123c <__printf_chk@plt>
   12f28:	ldr	r0, [r5, #12]
   12f2c:	add	r6, r6, #1
   12f30:	cmp	r6, r0, lsr #1
   12f34:	bcc	12f18 <__assert_fail@plt+0x1c10>
   12f38:	ldr	r0, [sp, #68]	; 0x44
   12f3c:	ldr	r6, [sp, #80]	; 0x50
   12f40:	ldr	r5, [sp, #96]	; 0x60
   12f44:	tst	r0, #1
   12f48:	bne	13108 <__assert_fail@plt+0x1e00>
   12f4c:	ldr	r0, [r9]
   12f50:	ldr	r1, [r0, #20]
   12f54:	ldr	r2, [r0, #24]
   12f58:	cmp	r1, r2
   12f5c:	bcs	13050 <__assert_fail@plt+0x1d48>
   12f60:	add	r2, r1, #1
   12f64:	str	r2, [r0, #20]
   12f68:	mov	r0, #32
   12f6c:	strb	r0, [r1]
   12f70:	ldr	r0, [r9]
   12f74:	ldr	r1, [r0, #20]
   12f78:	ldr	r2, [r0, #24]
   12f7c:	cmp	r1, r2
   12f80:	bcs	1305c <__assert_fail@plt+0x1d54>
   12f84:	add	r2, r1, #1
   12f88:	str	r2, [r0, #20]
   12f8c:	ldr	r0, [sp, #36]	; 0x24
   12f90:	strb	r0, [r1]
   12f94:	cmp	r4, #0
   12f98:	bne	13078 <__assert_fail@plt+0x1d70>
   12f9c:	ldr	r1, [r9]
   12fa0:	mov	r0, r8
   12fa4:	bl	11068 <fputs_unlocked@plt>
   12fa8:	b	13108 <__assert_fail@plt+0x1e00>
   12fac:	bl	1120c <__errno_location@plt>
   12fb0:	ldr	r4, [r0]
   12fb4:	mov	r0, #0
   12fb8:	mov	r1, #3
   12fbc:	mov	r2, r8
   12fc0:	mov	r7, #0
   12fc4:	bl	1bc28 <__assert_fail@plt+0xa920>
   12fc8:	movw	r2, #58990	; 0xe66e
   12fcc:	mov	r3, r0
   12fd0:	mov	r0, #0
   12fd4:	mov	r1, r4
   12fd8:	movt	r2, #1
   12fdc:	b	1301c <__assert_fail@plt+0x1d14>
   12fe0:	movw	r1, #60312	; 0xeb98
   12fe4:	mov	r0, #0
   12fe8:	mov	r2, #5
   12fec:	mov	r7, #0
   12ff0:	movt	r1, #1
   12ff4:	bl	11104 <dcgettext@plt>
   12ff8:	ldr	r2, [sp, #92]	; 0x5c
   12ffc:	mov	r4, r0
   13000:	mov	r0, #0
   13004:	mov	r1, #3
   13008:	bl	1bc28 <__assert_fail@plt+0xa920>
   1300c:	mov	r3, r0
   13010:	mov	r0, #0
   13014:	mov	r1, #0
   13018:	mov	r2, r4
   1301c:	bl	1117c <error@plt>
   13020:	ldr	r5, [sp, #96]	; 0x60
   13024:	ldr	r6, [sp, #80]	; 0x50
   13028:	ldr	r0, [sp, #112]	; 0x70
   1302c:	ldr	sl, [sp, #56]	; 0x38
   13030:	and	r4, r5, r7
   13034:	movw	r7, #60677	; 0xed05
   13038:	movt	r7, #1
   1303c:	add	r0, r0, #4
   13040:	mov	r1, r4
   13044:	cmp	r0, r6
   13048:	bcc	11c4c <__assert_fail@plt+0x944>
   1304c:	b	13144 <__assert_fail@plt+0x1e3c>
   13050:	mov	r1, #32
   13054:	bl	11284 <__overflow@plt>
   13058:	b	12f70 <__assert_fail@plt+0x1c68>
   1305c:	ldr	r1, [sp, #36]	; 0x24
   13060:	bl	11284 <__overflow@plt>
   13064:	cmp	r4, #0
   13068:	bne	13078 <__assert_fail@plt+0x1d70>
   1306c:	b	12f9c <__assert_fail@plt+0x1c94>
   13070:	mov	r8, r4
   13074:	add	r8, r4, #1
   13078:	ldrb	r1, [r8]
   1307c:	mov	r4, r8
   13080:	cmp	r1, #12
   13084:	ble	130a8 <__assert_fail@plt+0x1da0>
   13088:	cmp	r1, #13
   1308c:	beq	130c0 <__assert_fail@plt+0x1db8>
   13090:	cmp	r1, #92	; 0x5c
   13094:	bne	130dc <__assert_fail@plt+0x1dd4>
   13098:	ldr	r1, [r9]
   1309c:	movw	r0, #60660	; 0xecf4
   130a0:	movt	r0, #1
   130a4:	b	130cc <__assert_fail@plt+0x1dc4>
   130a8:	cmp	r1, #10
   130ac:	bne	130d4 <__assert_fail@plt+0x1dcc>
   130b0:	ldr	r1, [r9]
   130b4:	movw	r0, #60654	; 0xecee
   130b8:	movt	r0, #1
   130bc:	b	130cc <__assert_fail@plt+0x1dc4>
   130c0:	ldr	r1, [r9]
   130c4:	movw	r0, #60657	; 0xecf1
   130c8:	movt	r0, #1
   130cc:	bl	11068 <fputs_unlocked@plt>
   130d0:	b	13070 <__assert_fail@plt+0x1d68>
   130d4:	cmp	r1, #0
   130d8:	beq	13108 <__assert_fail@plt+0x1e00>
   130dc:	ldr	r0, [r9]
   130e0:	ldr	r2, [r0, #20]
   130e4:	ldr	r3, [r0, #24]
   130e8:	cmp	r2, r3
   130ec:	bcs	13100 <__assert_fail@plt+0x1df8>
   130f0:	add	r3, r2, #1
   130f4:	str	r3, [r0, #20]
   130f8:	strb	r1, [r2]
   130fc:	b	13070 <__assert_fail@plt+0x1d68>
   13100:	bl	11284 <__overflow@plt>
   13104:	b	13070 <__assert_fail@plt+0x1d68>
   13108:	ldr	r0, [r9]
   1310c:	ldr	r1, [r0, #20]
   13110:	ldr	r2, [r0, #24]
   13114:	cmp	r1, r2
   13118:	bcs	11c34 <__assert_fail@plt+0x92c>
   1311c:	add	r2, r1, #1
   13120:	str	r2, [r0, #20]
   13124:	ldr	r0, [sp, #144]	; 0x90
   13128:	strb	r0, [r1]
   1312c:	mov	r4, r5
   13130:	ldr	r0, [sp, #112]	; 0x70
   13134:	add	r0, r0, #4
   13138:	mov	r1, r4
   1313c:	cmp	r0, r6
   13140:	bcc	11c4c <__assert_fail@plt+0x944>
   13144:	movw	r0, #384	; 0x180
   13148:	movt	r0, #3
   1314c:	ldrb	r0, [r0, #9]
   13150:	cmp	r0, #0
   13154:	beq	13170 <__assert_fail@plt+0x1e68>
   13158:	movw	r0, #368	; 0x170
   1315c:	movt	r0, #3
   13160:	ldr	r0, [r0]
   13164:	bl	19cd4 <__assert_fail@plt+0x89cc>
   13168:	cmn	r0, #1
   1316c:	beq	13388 <__assert_fail@plt+0x2080>
   13170:	mov	r0, #1
   13174:	bic	r0, r0, r4
   13178:	sub	sp, fp, #28
   1317c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13180:	movw	r1, #60191	; 0xeb1f
   13184:	mov	r0, #0
   13188:	mov	r2, #5
   1318c:	movt	r1, #1
   13190:	bl	11104 <dcgettext@plt>
   13194:	ldr	r2, [sp, #92]	; 0x5c
   13198:	mov	r4, r0
   1319c:	mov	r0, #0
   131a0:	mov	r1, #3
   131a4:	bl	1bc28 <__assert_fail@plt+0xa920>
   131a8:	mov	r3, r0
   131ac:	mov	r0, #1
   131b0:	mov	r1, #0
   131b4:	mov	r2, r4
   131b8:	bl	1117c <error@plt>
   131bc:	cmn	r0, #3
   131c0:	bne	13218 <__assert_fail@plt+0x1f10>
   131c4:	movw	r0, #268	; 0x10c
   131c8:	movw	r2, #59051	; 0xe6ab
   131cc:	mov	r1, #0
   131d0:	movw	r7, #59037	; 0xe69d
   131d4:	movt	r0, #3
   131d8:	movt	r2, #1
   131dc:	str	r1, [sp, #8]
   131e0:	movw	r1, #58921	; 0xe629
   131e4:	movt	r7, #1
   131e8:	ldr	r3, [r0]
   131ec:	movw	r0, #372	; 0x174
   131f0:	str	r2, [sp, #4]
   131f4:	movw	r2, #59023	; 0xe68f
   131f8:	movt	r1, #1
   131fc:	str	r7, [sp]
   13200:	movt	r0, #3
   13204:	movt	r2, #1
   13208:	ldr	r0, [r0]
   1320c:	bl	1c384 <__assert_fail@plt+0xb07c>
   13210:	mov	r0, #0
   13214:	bl	111dc <exit@plt>
   13218:	cmn	r0, #2
   1321c:	bne	13280 <__assert_fail@plt+0x1f78>
   13220:	mov	r0, #0
   13224:	bl	11410 <__assert_fail@plt+0x108>
   13228:	movw	r1, #58974	; 0xe65e
   1322c:	mov	r0, #0
   13230:	mov	r2, #5
   13234:	movt	r1, #1
   13238:	bl	11104 <dcgettext@plt>
   1323c:	mov	r4, r0
   13240:	mov	r0, r7
   13244:	bl	1bed4 <__assert_fail@plt+0xabcc>
   13248:	mov	r3, r0
   1324c:	mov	r0, #0
   13250:	mov	r1, #0
   13254:	mov	r2, r4
   13258:	bl	1117c <error@plt>
   1325c:	movw	r1, #58993	; 0xe671
   13260:	mov	r0, #0
   13264:	mov	r2, #5
   13268:	movt	r1, #1
   1326c:	bl	11104 <dcgettext@plt>
   13270:	mov	r2, r0
   13274:	mov	r0, #1
   13278:	mov	r1, #0
   1327c:	bl	1117c <error@plt>
   13280:	mov	r0, #1
   13284:	bl	11410 <__assert_fail@plt+0x108>
   13288:	movw	r1, #58974	; 0xe65e
   1328c:	mov	r0, #0
   13290:	mov	r2, #5
   13294:	movt	r1, #1
   13298:	bl	11104 <dcgettext@plt>
   1329c:	mov	r4, r0
   132a0:	mov	r0, r7
   132a4:	bl	1bed4 <__assert_fail@plt+0xabcc>
   132a8:	mov	r3, r0
   132ac:	mov	r0, #0
   132b0:	mov	r1, #0
   132b4:	mov	r2, r4
   132b8:	bl	1117c <error@plt>
   132bc:	movw	r1, #59064	; 0xe6b8
   132c0:	mov	r0, #0
   132c4:	mov	r2, #5
   132c8:	movt	r1, #1
   132cc:	bl	11104 <dcgettext@plt>
   132d0:	mov	r4, r0
   132d4:	movw	r0, #57491	; 0xe093
   132d8:	movt	r0, #1
   132dc:	bl	1bed4 <__assert_fail@plt+0xabcc>
   132e0:	mov	r3, r0
   132e4:	mov	r0, #512	; 0x200
   132e8:	str	r0, [sp]
   132ec:	mov	r0, #1
   132f0:	mov	r1, #0
   132f4:	mov	r2, r4
   132f8:	bl	1117c <error@plt>
   132fc:	movw	r1, #59104	; 0xe6e0
   13300:	movt	r1, #1
   13304:	b	13364 <__assert_fail@plt+0x205c>
   13308:	movw	r1, #59139	; 0xe703
   1330c:	movt	r1, #1
   13310:	b	13364 <__assert_fail@plt+0x205c>
   13314:	movw	r1, #59199	; 0xe73f
   13318:	movt	r1, #1
   1331c:	b	13364 <__assert_fail@plt+0x205c>
   13320:	movw	r1, #59256	; 0xe778
   13324:	movt	r1, #1
   13328:	b	13364 <__assert_fail@plt+0x205c>
   1332c:	movw	r1, #59329	; 0xe7c1
   13330:	movt	r1, #1
   13334:	b	13364 <__assert_fail@plt+0x205c>
   13338:	movw	r1, #59401	; 0xe809
   1333c:	movt	r1, #1
   13340:	b	13364 <__assert_fail@plt+0x205c>
   13344:	movw	r1, #59465	; 0xe849
   13348:	movt	r1, #1
   1334c:	b	13364 <__assert_fail@plt+0x205c>
   13350:	movw	r1, #59527	; 0xe887
   13354:	movt	r1, #1
   13358:	b	13364 <__assert_fail@plt+0x205c>
   1335c:	movw	r1, #59590	; 0xe8c6
   13360:	movt	r1, #1
   13364:	mov	r0, #0
   13368:	mov	r2, #5
   1336c:	bl	11104 <dcgettext@plt>
   13370:	mov	r2, r0
   13374:	mov	r0, #0
   13378:	mov	r1, #0
   1337c:	bl	1117c <error@plt>
   13380:	mov	r0, #1
   13384:	bl	11410 <__assert_fail@plt+0x108>
   13388:	bl	1120c <__errno_location@plt>
   1338c:	ldr	r4, [r0]
   13390:	movw	r1, #59654	; 0xe906
   13394:	mov	r0, #0
   13398:	mov	r2, #5
   1339c:	movt	r1, #1
   133a0:	bl	11104 <dcgettext@plt>
   133a4:	mov	r2, r0
   133a8:	mov	r0, #1
   133ac:	mov	r1, r4
   133b0:	bl	1117c <error@plt>
   133b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   133b8:	add	fp, sp, #24
   133bc:	mov	r6, r1
   133c0:	movw	r1, #61152	; 0xeee0
   133c4:	mov	r4, r2
   133c8:	mov	r8, r0
   133cc:	movt	r1, #1
   133d0:	bl	1108c <strcmp@plt>
   133d4:	mov	r5, r0
   133d8:	mov	r0, #0
   133dc:	cmp	r5, #0
   133e0:	strb	r0, [r4]
   133e4:	beq	1345c <__assert_fail@plt+0x2154>
   133e8:	movw	r1, #60658	; 0xecf2
   133ec:	mov	r0, r8
   133f0:	movt	r1, #1
   133f4:	bl	19dd8 <__assert_fail@plt+0x8ad0>
   133f8:	mov	r7, r0
   133fc:	cmp	r0, #0
   13400:	bne	13478 <__assert_fail@plt+0x2170>
   13404:	movw	r0, #384	; 0x180
   13408:	movt	r0, #3
   1340c:	ldrb	r5, [r0, #3]
   13410:	bl	1120c <__errno_location@plt>
   13414:	cmp	r5, #1
   13418:	ldreq	r1, [r0]
   1341c:	cmpeq	r1, #2
   13420:	beq	13538 <__assert_fail@plt+0x2230>
   13424:	ldr	r4, [r0]
   13428:	mov	r0, #0
   1342c:	mov	r1, #3
   13430:	mov	r2, r8
   13434:	mov	r5, #0
   13438:	bl	1bc28 <__assert_fail@plt+0xa920>
   1343c:	movw	r2, #58990	; 0xe66e
   13440:	mov	r3, r0
   13444:	mov	r0, #0
   13448:	mov	r1, r4
   1344c:	movt	r2, #1
   13450:	bl	1117c <error@plt>
   13454:	mov	r0, r5
   13458:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1345c:	movw	r0, #384	; 0x180
   13460:	mov	r1, #1
   13464:	movt	r0, #3
   13468:	strb	r1, [r0, #9]
   1346c:	movw	r0, #368	; 0x170
   13470:	movt	r0, #3
   13474:	ldr	r7, [r0]
   13478:	mov	r0, r7
   1347c:	mov	r1, #2
   13480:	bl	19c98 <__assert_fail@plt+0x8990>
   13484:	movw	r0, #384	; 0x180
   13488:	movt	r0, #3
   1348c:	ldrd	r0, [r0, #16]
   13490:	lsr	r0, r0, #3
   13494:	orr	r2, r0, r1, lsl #29
   13498:	mov	r0, r7
   1349c:	mov	r1, r6
   134a0:	bl	19a94 <__assert_fail@plt+0x878c>
   134a4:	cmp	r0, #0
   134a8:	beq	134e0 <__assert_fail@plt+0x21d8>
   134ac:	bl	1120c <__errno_location@plt>
   134b0:	ldr	r6, [r0]
   134b4:	mov	r0, r7
   134b8:	cmp	r5, #0
   134bc:	beq	134f0 <__assert_fail@plt+0x21e8>
   134c0:	bl	19cd4 <__assert_fail@plt+0x89cc>
   134c4:	cmp	r6, #0
   134c8:	bne	134f4 <__assert_fail@plt+0x21ec>
   134cc:	cmp	r0, #0
   134d0:	beq	134f4 <__assert_fail@plt+0x21ec>
   134d4:	bl	1120c <__errno_location@plt>
   134d8:	ldr	r6, [r0]
   134dc:	b	134f4 <__assert_fail@plt+0x21ec>
   134e0:	mov	r6, #0
   134e4:	mov	r0, r7
   134e8:	cmp	r5, #0
   134ec:	bne	134c0 <__assert_fail@plt+0x21b8>
   134f0:	bl	112b4 <clearerr_unlocked@plt>
   134f4:	cmp	r6, #0
   134f8:	moveq	r5, #1
   134fc:	moveq	r0, r5
   13500:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13504:	mov	r0, #0
   13508:	mov	r1, #3
   1350c:	mov	r2, r8
   13510:	mov	r5, #0
   13514:	bl	1bc28 <__assert_fail@plt+0xa920>
   13518:	movw	r2, #58990	; 0xe66e
   1351c:	mov	r3, r0
   13520:	mov	r0, #0
   13524:	mov	r1, r6
   13528:	movt	r2, #1
   1352c:	bl	1117c <error@plt>
   13530:	mov	r0, r5
   13534:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13538:	mov	r5, #1
   1353c:	mov	r0, r5
   13540:	strb	r5, [r4]
   13544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
	...
   13550:	push	{r4, r5, fp, lr}
   13554:	add	fp, sp, #8
   13558:	mov	r5, r1
   1355c:	mov	r4, r0
   13560:	add	r0, r0, #64	; 0x40
   13564:	mov	r1, #0
   13568:	mov	r2, #176	; 0xb0
   1356c:	bl	11230 <memset@plt>
   13570:	movw	r0, #60984	; 0xee38
   13574:	mov	r2, #48	; 0x30
   13578:	movt	r0, #1
   1357c:	add	r1, r0, #32
   13580:	add	r3, r0, #16
   13584:	vld1.64	{d18-d19}, [r0], r2
   13588:	vld1.64	{d20-d21}, [r3]
   1358c:	vld1.64	{d16-d17}, [r1]
   13590:	add	r1, r4, #32
   13594:	movw	r3, #58983	; 0xe667
   13598:	movt	r3, #27145	; 0x6a09
   1359c:	vld1.64	{d22-d23}, [r0]
   135a0:	add	r0, r4, #16
   135a4:	vst1.64	{d20-d21}, [r0]
   135a8:	add	r0, r4, #48	; 0x30
   135ac:	vst1.64	{d16-d17}, [r1]
   135b0:	mov	r1, #228	; 0xe4
   135b4:	vst1.64	{d22-d23}, [r0]
   135b8:	mov	r0, r4
   135bc:	vst1.64	{d18-d19}, [r0], r1
   135c0:	movw	r1, #44677	; 0xae85
   135c4:	ldr	r2, [r5, #4]
   135c8:	ldr	ip, [r5]
   135cc:	movt	r1, #47975	; 0xbb67
   135d0:	eor	r2, r2, r3
   135d4:	str	r2, [r4, #4]
   135d8:	movw	r2, #51464	; 0xc908
   135dc:	movt	r2, #62396	; 0xf3bc
   135e0:	eor	r2, ip, r2
   135e4:	str	r2, [r4]
   135e8:	ldr	r3, [r5, #12]
   135ec:	ldr	r2, [r5, #8]
   135f0:	eor	r1, r3, r1
   135f4:	movw	r3, #62322	; 0xf372
   135f8:	str	r1, [r4, #12]
   135fc:	movw	r1, #42811	; 0xa73b
   13600:	movt	r3, #15470	; 0x3c6e
   13604:	movt	r1, #33994	; 0x84ca
   13608:	eor	r1, r2, r1
   1360c:	str	r1, [r4, #8]
   13610:	ldr	r2, [r5, #20]
   13614:	ldr	r1, [r5, #16]
   13618:	eor	r2, r2, r3
   1361c:	movw	r3, #62778	; 0xf53a
   13620:	str	r2, [r4, #20]
   13624:	movw	r2, #63531	; 0xf82b
   13628:	movt	r3, #42319	; 0xa54f
   1362c:	movt	r2, #65172	; 0xfe94
   13630:	eor	r1, r1, r2
   13634:	str	r1, [r4, #16]
   13638:	ldr	r2, [r5, #28]
   1363c:	ldr	r1, [r5, #24]
   13640:	eor	r2, r2, r3
   13644:	movw	r3, #21119	; 0x527f
   13648:	str	r2, [r4, #28]
   1364c:	movw	r2, #14065	; 0x36f1
   13650:	movt	r3, #20750	; 0x510e
   13654:	movt	r2, #24349	; 0x5f1d
   13658:	eor	r1, r1, r2
   1365c:	str	r1, [r4, #24]
   13660:	ldr	r2, [r5, #36]	; 0x24
   13664:	ldr	r1, [r5, #32]
   13668:	eor	r2, r2, r3
   1366c:	movw	r3, #26764	; 0x688c
   13670:	str	r2, [r4, #36]	; 0x24
   13674:	movw	r2, #33489	; 0x82d1
   13678:	movt	r3, #39685	; 0x9b05
   1367c:	movt	r2, #44518	; 0xade6
   13680:	eor	r1, r1, r2
   13684:	str	r1, [r4, #32]
   13688:	ldr	r2, [r5, #44]	; 0x2c
   1368c:	ldr	r1, [r5, #40]	; 0x28
   13690:	eor	r2, r2, r3
   13694:	movw	r3, #55723	; 0xd9ab
   13698:	str	r2, [r4, #44]	; 0x2c
   1369c:	movw	r2, #27679	; 0x6c1f
   136a0:	movt	r3, #8067	; 0x1f83
   136a4:	movt	r2, #11070	; 0x2b3e
   136a8:	eor	r1, r1, r2
   136ac:	str	r1, [r4, #40]	; 0x28
   136b0:	ldr	r2, [r5, #52]	; 0x34
   136b4:	ldr	r1, [r5, #48]	; 0x30
   136b8:	eor	r2, r2, r3
   136bc:	uxtb	r3, ip
   136c0:	str	r2, [r4, #52]	; 0x34
   136c4:	movw	r2, #48491	; 0xbd6b
   136c8:	movt	r2, #64321	; 0xfb41
   136cc:	eor	r1, r1, r2
   136d0:	str	r1, [r4, #48]	; 0x30
   136d4:	ldr	r2, [r5, #60]	; 0x3c
   136d8:	ldr	r1, [r5, #56]	; 0x38
   136dc:	str	r3, [r0]
   136e0:	movw	r0, #52505	; 0xcd19
   136e4:	movt	r0, #23520	; 0x5be0
   136e8:	eor	r0, r2, r0
   136ec:	str	r0, [r4, #60]	; 0x3c
   136f0:	movw	r0, #8569	; 0x2179
   136f4:	movt	r0, #4990	; 0x137e
   136f8:	eor	r0, r1, r0
   136fc:	str	r0, [r4, #56]	; 0x38
   13700:	mov	r0, #0
   13704:	pop	{r4, r5, fp, pc}
   13708:	nop	{0}
   1370c:	nop	{0}
   13710:	push	{r4, r5, r6, sl, fp, lr}
   13714:	add	fp, sp, #16
   13718:	mov	r4, r0
   1371c:	sub	r0, r1, #1
   13720:	mvn	r5, #0
   13724:	cmp	r0, #63	; 0x3f
   13728:	bhi	137b4 <__assert_fail@plt+0x24ac>
   1372c:	mov	r6, r1
   13730:	add	r0, r4, #64	; 0x40
   13734:	mov	r1, #0
   13738:	mov	r2, #176	; 0xb0
   1373c:	mov	r5, #0
   13740:	bl	11230 <memset@plt>
   13744:	movw	r0, #58983	; 0xe667
   13748:	add	r1, pc, #112	; 0x70
   1374c:	add	r2, pc, #124	; 0x7c
   13750:	add	r3, pc, #136	; 0x88
   13754:	movt	r0, #27145	; 0x6a09
   13758:	vld1.64	{d20-d21}, [r1 :128]
   1375c:	movw	r1, #52505	; 0xcd19
   13760:	vld1.64	{d16-d17}, [r3 :128]
   13764:	vld1.64	{d18-d19}, [r2 :128]
   13768:	str	r0, [r4, #4]
   1376c:	movw	r0, #8569	; 0x2179
   13770:	movt	r1, #23520	; 0x5be0
   13774:	movt	r0, #4990	; 0x137e
   13778:	strd	r0, [r4, #56]	; 0x38
   1377c:	uxtb	r0, r6
   13780:	movw	r1, #51464	; 0xc908
   13784:	str	r0, [r4, #228]	; 0xe4
   13788:	orr	r0, r0, #65536	; 0x10000
   1378c:	movt	r1, #62396	; 0xf3bc
   13790:	orr	r0, r0, #16777216	; 0x1000000
   13794:	eor	r0, r0, r1
   13798:	str	r0, [r4]
   1379c:	add	r0, r4, #8
   137a0:	vst1.64	{d16-d17}, [r0]
   137a4:	add	r0, r4, #24
   137a8:	vst1.64	{d18-d19}, [r0]
   137ac:	add	r0, r4, #40	; 0x28
   137b0:	vst1.64	{d20-d21}, [r0]
   137b4:	mov	r0, r5
   137b8:	pop	{r4, r5, r6, sl, fp, pc}
   137bc:	nop	{0}
   137c0:	blcs	fae844 <optarg@@GLIBC_2.4+0xf7e6cc>
   137c4:	blls	16d9fc <optarg@@GLIBC_2.4+0x13d884>
   137c8:	blx	1082d7e <optarg@@GLIBC_2.4+0x1052c06>
   137cc:	svcne	0x0083d9ab
   137d0:	svcpl	0x001d36f1
   137d4:	strbge	pc, [pc, #-1338]	; 132a2 <__assert_fail@plt+0x1f9a>	; <UNPREDICTABLE>
   137d8:	sfmge	f0, 3, [r6, #836]!	; 0x344
   137dc:	tstpl	lr, pc, ror r2
   137e0:	strbhi	sl, [sl], #1851	; 0x73b
   137e4:	bllt	19ff200 <optarg@@GLIBC_2.4+0x19cf088>
   137e8:	vcmla.f32	d15, d4, d27[0], #90
   137ec:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   137f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   137f4:	add	fp, sp, #24
   137f8:	sub	sp, sp, #128	; 0x80
   137fc:	mov	r5, r0
   13800:	sub	r0, r1, #1
   13804:	mvn	r4, #0
   13808:	cmp	r0, #63	; 0x3f
   1380c:	bhi	13918 <__assert_fail@plt+0x2610>
   13810:	mov	r8, r2
   13814:	cmp	r2, #0
   13818:	beq	13918 <__assert_fail@plt+0x2610>
   1381c:	sub	r0, r3, #1
   13820:	mov	r6, r3
   13824:	cmp	r0, #63	; 0x3f
   13828:	bhi	13918 <__assert_fail@plt+0x2610>
   1382c:	mov	r7, r1
   13830:	add	r0, r5, #64	; 0x40
   13834:	mov	r1, #0
   13838:	mov	r2, #176	; 0xb0
   1383c:	mov	r4, #0
   13840:	bl	11230 <memset@plt>
   13844:	movw	r0, #58983	; 0xe667
   13848:	add	r1, pc, #224	; 0xe0
   1384c:	add	r2, pc, #236	; 0xec
   13850:	add	r3, pc, #248	; 0xf8
   13854:	movt	r0, #27145	; 0x6a09
   13858:	vld1.64	{d16-d17}, [r3 :128]
   1385c:	vld1.64	{d18-d19}, [r2 :128]
   13860:	vld1.64	{d20-d21}, [r1 :128]
   13864:	movw	r1, #52505	; 0xcd19
   13868:	rsb	r2, r6, #128	; 0x80
   1386c:	str	r0, [r5, #4]
   13870:	movw	r0, #8569	; 0x2179
   13874:	movt	r1, #23520	; 0x5be0
   13878:	movt	r0, #4990	; 0x137e
   1387c:	strd	r0, [r5, #56]	; 0x38
   13880:	uxtb	r0, r7
   13884:	add	r1, r5, #8
   13888:	mov	r7, sp
   1388c:	str	r0, [r5, #228]	; 0xe4
   13890:	vst1.64	{d16-d17}, [r1]
   13894:	add	r1, r5, #24
   13898:	vst1.64	{d18-d19}, [r1]
   1389c:	add	r1, r5, #40	; 0x28
   138a0:	vst1.64	{d20-d21}, [r1]
   138a4:	uxtb	r1, r6
   138a8:	orr	r0, r0, r1, lsl #8
   138ac:	movw	r1, #51464	; 0xc908
   138b0:	orr	r0, r0, #65536	; 0x10000
   138b4:	movt	r1, #62396	; 0xf3bc
   138b8:	orr	r0, r0, #16777216	; 0x1000000
   138bc:	eor	r0, r0, r1
   138c0:	mov	r1, #0
   138c4:	str	r0, [r5]
   138c8:	add	r0, r7, r6
   138cc:	bl	11230 <memset@plt>
   138d0:	mov	r0, r7
   138d4:	mov	r1, r8
   138d8:	mov	r2, r6
   138dc:	bl	110d4 <memcpy@plt>
   138e0:	add	r0, r5, #96	; 0x60
   138e4:	mov	r1, r7
   138e8:	mov	r2, #128	; 0x80
   138ec:	bl	110d4 <memcpy@plt>
   138f0:	ldr	r0, [r5, #224]	; 0xe0
   138f4:	mov	r1, #0
   138f8:	mov	r2, #128	; 0x80
   138fc:	add	r0, r0, #128	; 0x80
   13900:	str	r0, [r5, #224]	; 0xe0
   13904:	movw	r0, #61048	; 0xee78
   13908:	movt	r0, #1
   1390c:	ldr	r3, [r0]
   13910:	mov	r0, r7
   13914:	blx	r3
   13918:	mov	r0, r4
   1391c:	sub	sp, fp, #24
   13920:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13924:	nop	{0}
   13928:	nop	{0}
   1392c:	nop	{0}
   13930:	blcs	fae9b4 <optarg@@GLIBC_2.4+0xf7e83c>
   13934:	blls	16db6c <optarg@@GLIBC_2.4+0x13d9f4>
   13938:	blx	1082eee <optarg@@GLIBC_2.4+0x1052d76>
   1393c:	svcne	0x0083d9ab
   13940:	svcpl	0x001d36f1
   13944:	strbge	pc, [pc, #-1338]	; 13412 <__assert_fail@plt+0x210a>	; <UNPREDICTABLE>
   13948:	sfmge	f0, 3, [r6, #836]!	; 0x344
   1394c:	tstpl	lr, pc, ror r2
   13950:	strbhi	sl, [sl], #1851	; 0x73b
   13954:	bllt	19ff370 <optarg@@GLIBC_2.4+0x19cf1f8>
   13958:	vcmla.f32	d15, d4, d27[0], #90
   1395c:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13960:	cmp	r2, #0
   13964:	beq	13b1c <__assert_fail@plt+0x2814>
   13968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1396c:	add	fp, sp, #28
   13970:	sub	sp, sp, #20
   13974:	mov	r6, r0
   13978:	ldr	r0, [r0, #224]	; 0xe0
   1397c:	mov	r4, r2
   13980:	mov	r5, r1
   13984:	rsb	r7, r0, #128	; 0x80
   13988:	cmp	r7, r2
   1398c:	bcs	13af0 <__assert_fail@plt+0x27e8>
   13990:	add	r1, r6, #96	; 0x60
   13994:	mov	sl, #0
   13998:	str	r0, [sp, #8]
   1399c:	mov	r2, r7
   139a0:	str	r1, [sp, #16]
   139a4:	add	r0, r1, r0
   139a8:	mov	r1, r5
   139ac:	str	sl, [r6, #224]	; 0xe0
   139b0:	bl	110d4 <memcpy@plt>
   139b4:	mov	r8, r6
   139b8:	mov	r9, r6
   139bc:	ldr	r0, [r8, #64]!	; 0x40
   139c0:	adds	r1, r0, #128	; 0x80
   139c4:	str	r1, [r8]
   139c8:	ldr	r1, [r6, #68]	; 0x44
   139cc:	ldr	ip, [r6, #76]	; 0x4c
   139d0:	adc	r3, r1, #0
   139d4:	str	r3, [r6, #68]	; 0x44
   139d8:	str	ip, [sp, #12]
   139dc:	ldr	lr, [r9, #72]!	; 0x48
   139e0:	adds	r2, lr, #1
   139e4:	adc	r3, ip, #0
   139e8:	mvn	ip, #128	; 0x80
   139ec:	subs	r0, ip, r0
   139f0:	mvn	r0, #0
   139f4:	sbcs	r0, r0, r1
   139f8:	ldr	r1, [sp, #16]
   139fc:	ldr	r0, [sp, #12]
   13a00:	movwcc	sl, #1
   13a04:	cmp	sl, #0
   13a08:	moveq	r2, lr
   13a0c:	str	r2, [r9]
   13a10:	moveq	r3, r0
   13a14:	mov	r0, r6
   13a18:	str	r3, [r6, #76]	; 0x4c
   13a1c:	bl	13b30 <__assert_fail@plt+0x2828>
   13a20:	sub	sl, r4, r7
   13a24:	add	r7, r5, r7
   13a28:	cmp	sl, #129	; 0x81
   13a2c:	bcc	13ae8 <__assert_fail@plt+0x27e0>
   13a30:	ldr	r2, [sp, #8]
   13a34:	movw	r1, #257	; 0x101
   13a38:	str	r5, [sp, #16]
   13a3c:	add	r0, r2, r4
   13a40:	sub	r1, r0, r1
   13a44:	sub	r0, r0, #256	; 0x100
   13a48:	bic	r1, r1, #127	; 0x7f
   13a4c:	str	r0, [sp, #4]
   13a50:	str	r1, [sp, #12]
   13a54:	add	r1, r1, #256	; 0x100
   13a58:	sub	r1, r1, r2
   13a5c:	str	r1, [sp, #8]
   13a60:	ldm	r8, {r2, r5}
   13a64:	mov	ip, r6
   13a68:	mvn	r6, #128	; 0x80
   13a6c:	adds	r0, r2, #128	; 0x80
   13a70:	adc	r3, r5, #0
   13a74:	stm	r8, {r0, r3}
   13a78:	ldr	r4, [r9]
   13a7c:	ldr	r3, [r9, #4]
   13a80:	adds	r0, r4, #1
   13a84:	adc	r1, r3, #0
   13a88:	subs	r2, r6, r2
   13a8c:	mov	r6, ip
   13a90:	mvn	r2, #0
   13a94:	sbcs	r2, r2, r5
   13a98:	mov	r2, #0
   13a9c:	movwcc	r2, #1
   13aa0:	cmp	r2, #0
   13aa4:	moveq	r0, r4
   13aa8:	moveq	r1, r3
   13aac:	strd	r0, [r9]
   13ab0:	mov	r0, ip
   13ab4:	mov	r1, r7
   13ab8:	bl	13b30 <__assert_fail@plt+0x2828>
   13abc:	sub	sl, sl, #128	; 0x80
   13ac0:	add	r7, r7, #128	; 0x80
   13ac4:	cmp	sl, #128	; 0x80
   13ac8:	bhi	13a60 <__assert_fail@plt+0x2758>
   13acc:	ldr	r0, [sp, #12]
   13ad0:	ldr	r1, [sp, #4]
   13ad4:	ldr	r5, [sp, #16]
   13ad8:	sub	r4, r1, r0
   13adc:	ldr	r0, [sp, #8]
   13ae0:	add	r5, r5, r0
   13ae4:	b	13af0 <__assert_fail@plt+0x27e8>
   13ae8:	mov	r5, r7
   13aec:	mov	r4, sl
   13af0:	ldr	r0, [r6, #224]	; 0xe0
   13af4:	mov	r1, r5
   13af8:	mov	r2, r4
   13afc:	add	r0, r6, r0
   13b00:	add	r0, r0, #96	; 0x60
   13b04:	bl	110d4 <memcpy@plt>
   13b08:	ldr	r0, [r6, #224]	; 0xe0
   13b0c:	add	r0, r0, r4
   13b10:	str	r0, [r6, #224]	; 0xe0
   13b14:	sub	sp, fp, #28
   13b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b1c:	mov	r0, #0
   13b20:	bx	lr
   13b24:	nop	{0}
   13b28:	nop	{0}
   13b2c:	nop	{0}
   13b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b34:	add	fp, sp, #28
   13b38:	sub	sp, sp, #556	; 0x22c
   13b3c:	mov	r4, r0
   13b40:	sub	r0, fp, #160	; 0xa0
   13b44:	mov	r2, #128	; 0x80
   13b48:	bl	110d4 <memcpy@plt>
   13b4c:	add	r0, r4, #32
   13b50:	add	r1, r4, #48	; 0x30
   13b54:	add	r2, r4, #16
   13b58:	sub	r6, fp, #288	; 0x120
   13b5c:	mov	r3, #72	; 0x48
   13b60:	mov	ip, r4
   13b64:	vld1.64	{d16-d17}, [r0]
   13b68:	add	r0, pc, #1008	; 0x3f0
   13b6c:	vld1.64	{d24-d25}, [r1]
   13b70:	vld1.64	{d22-d23}, [r2]
   13b74:	vld1.64	{d20-d21}, [ip], r3
   13b78:	add	r7, r6, #32
   13b7c:	add	r1, r6, #80	; 0x50
   13b80:	ldr	r3, [fp, #-156]	; 0xffffff64
   13b84:	ldr	r8, [fp, #-152]	; 0xffffff68
   13b88:	ldr	sl, [fp, #-148]	; 0xffffff6c
   13b8c:	str	r4, [sp, #160]	; 0xa0
   13b90:	vld1.64	{d18-d19}, [r0 :128]
   13b94:	ldr	r0, [fp, #-160]	; 0xffffff60
   13b98:	vst1.64	{d16-d17}, [r7]
   13b9c:	str	r3, [sp, #232]	; 0xe8
   13ba0:	str	r8, [sp, #176]	; 0xb0
   13ba4:	str	sl, [sp, #172]	; 0xac
   13ba8:	vst1.64	{d18-d19}, [r1]
   13bac:	add	r1, r6, #48	; 0x30
   13bb0:	str	r0, [sp, #228]	; 0xe4
   13bb4:	vst1.64	{d24-d25}, [r1]
   13bb8:	add	r1, r6, #16
   13bbc:	vst1.64	{d22-d23}, [r1]
   13bc0:	mov	r1, #56	; 0x38
   13bc4:	vst1.64	{d20-d21}, [r6], r1
   13bc8:	ldr	r1, [fp, #-288]	; 0xfffffee0
   13bcc:	ldr	r7, [fp, #-256]	; 0xffffff00
   13bd0:	str	r6, [sp, #292]	; 0x124
   13bd4:	ldr	r2, [fp, #-284]	; 0xfffffee4
   13bd8:	ldr	r6, [fp, #-252]	; 0xffffff04
   13bdc:	adds	r1, r7, r1
   13be0:	adc	r2, r6, r2
   13be4:	adds	r9, r1, r0
   13be8:	mov	r0, r4
   13bec:	ldrd	r4, [r4, #64]	; 0x40
   13bf0:	adc	r2, r2, r3
   13bf4:	movw	r3, #21119	; 0x527f
   13bf8:	ldr	r1, [r0, #80]	; 0x50
   13bfc:	movt	r3, #20750	; 0x510e
   13c00:	eor	r5, r2, r5
   13c04:	eor	r3, r5, r3
   13c08:	eor	r5, r9, r4
   13c0c:	movw	r4, #33489	; 0x82d1
   13c10:	str	r1, [sp, #280]	; 0x118
   13c14:	ldr	r1, [r0, #84]	; 0x54
   13c18:	movw	r0, #58983	; 0xe667
   13c1c:	movt	r4, #44518	; 0xade6
   13c20:	movt	r0, #27145	; 0x6a09
   13c24:	eor	r5, r5, r4
   13c28:	movw	r4, #51464	; 0xc908
   13c2c:	movt	r4, #62396	; 0xf3bc
   13c30:	adds	r4, r3, r4
   13c34:	str	r1, [sp, #276]	; 0x114
   13c38:	adc	r0, r5, r0
   13c3c:	eor	r7, r4, r7
   13c40:	lsl	r1, r7, #8
   13c44:	eor	r6, r0, r6
   13c48:	lsr	r7, r7, #24
   13c4c:	orr	r1, r1, r6, lsr #24
   13c50:	orr	r7, r7, r6, lsl #8
   13c54:	adds	r6, r8, r9
   13c58:	adc	r2, sl, r2
   13c5c:	adds	lr, r6, r7
   13c60:	adc	sl, r2, r1
   13c64:	eor	r3, lr, r3
   13c68:	str	lr, [sp, #240]	; 0xf0
   13c6c:	eor	r5, sl, r5
   13c70:	lsl	r2, r3, #16
   13c74:	orr	r6, r2, r5, lsr #16
   13c78:	lsr	r2, r3, #16
   13c7c:	orr	r3, r2, r5, lsl #16
   13c80:	str	r6, [sp, #260]	; 0x104
   13c84:	adds	r2, r3, r4
   13c88:	mov	r8, r3
   13c8c:	str	r3, [sp, #264]	; 0x108
   13c90:	adc	r3, r6, r0
   13c94:	str	r2, [sp, #252]	; 0xfc
   13c98:	eor	r0, r3, r1
   13c9c:	eor	r1, r2, r7
   13ca0:	mov	r7, r2
   13ca4:	str	r3, [sp, #256]	; 0x100
   13ca8:	mov	r9, r3
   13cac:	movw	r3, #8569	; 0x2179
   13cb0:	lsl	r2, r0, #1
   13cb4:	movt	r3, #4990	; 0x137e
   13cb8:	orr	r4, r2, r1, lsr #31
   13cbc:	lsl	r1, r1, #1
   13cc0:	orr	r5, r1, r0, lsr #31
   13cc4:	str	r4, [sp, #144]	; 0x90
   13cc8:	str	r5, [sp, #140]	; 0x8c
   13ccc:	ldrd	r0, [ip]
   13cd0:	ldr	ip, [sp, #160]	; 0xa0
   13cd4:	ldr	r2, [ip, #88]	; 0x58
   13cd8:	ldr	ip, [ip, #92]	; 0x5c
   13cdc:	eor	r2, r2, r3
   13ce0:	movw	r3, #52505	; 0xcd19
   13ce4:	movt	r3, #23520	; 0x5be0
   13ce8:	str	r2, [fp, #-168]	; 0xffffff58
   13cec:	str	r2, [sp, #244]	; 0xf4
   13cf0:	eor	r3, ip, r3
   13cf4:	str	r3, [fp, #-164]	; 0xffffff5c
   13cf8:	str	lr, [fp, #-288]	; 0xfffffee0
   13cfc:	str	sl, [fp, #-284]	; 0xfffffee4
   13d00:	str	r6, [fp, #-188]	; 0xffffff44
   13d04:	str	r8, [fp, #-192]	; 0xffffff40
   13d08:	str	r7, [fp, #-224]	; 0xffffff20
   13d0c:	str	r9, [fp, #-220]	; 0xffffff24
   13d10:	str	r4, [fp, #-252]	; 0xffffff04
   13d14:	str	r5, [fp, #-256]	; 0xffffff00
   13d18:	str	r3, [sp, #248]	; 0xf8
   13d1c:	ldr	r7, [fp, #-144]	; 0xffffff70
   13d20:	ldr	r6, [fp, #-140]	; 0xffffff74
   13d24:	movw	r4, #27679	; 0x6c1f
   13d28:	ldr	r9, [fp, #-136]	; 0xffffff78
   13d2c:	ldr	r8, [fp, #-132]	; 0xffffff7c
   13d30:	ldr	r2, [fp, #-280]	; 0xfffffee8
   13d34:	ldr	lr, [fp, #-248]	; 0xffffff08
   13d38:	ldr	r3, [fp, #-276]	; 0xfffffeec
   13d3c:	ldr	r5, [fp, #-244]	; 0xffffff0c
   13d40:	movt	r4, #11070	; 0x2b3e
   13d44:	str	r7, [sp, #288]	; 0x120
   13d48:	str	r6, [sp, #284]	; 0x11c
   13d4c:	str	r8, [sp, #180]	; 0xb4
   13d50:	str	r9, [sp, #184]	; 0xb8
   13d54:	adds	r2, lr, r2
   13d58:	adc	r3, r5, r3
   13d5c:	adds	r2, r2, r7
   13d60:	eor	r0, r2, r0
   13d64:	adc	r3, r3, r6
   13d68:	eor	ip, r0, r4
   13d6c:	movw	r4, #26764	; 0x688c
   13d70:	eor	r1, r3, r1
   13d74:	movt	r4, #39685	; 0x9b05
   13d78:	eor	r1, r1, r4
   13d7c:	movw	r4, #42811	; 0xa73b
   13d80:	movt	r4, #33994	; 0x84ca
   13d84:	adds	r7, r1, r4
   13d88:	movw	r4, #44677	; 0xae85
   13d8c:	movt	r4, #47975	; 0xbb67
   13d90:	adc	r0, ip, r4
   13d94:	adds	r2, r9, r2
   13d98:	eor	r4, r0, r5
   13d9c:	eor	r5, r7, lr
   13da0:	adc	r3, r8, r3
   13da4:	lsl	r6, r5, #8
   13da8:	lsr	r5, r5, #24
   13dac:	orr	lr, r6, r4, lsr #24
   13db0:	orr	r6, r5, r4, lsl #8
   13db4:	adds	r4, r2, r6
   13db8:	adc	r3, r3, lr
   13dbc:	eor	r1, r4, r1
   13dc0:	mov	r8, r4
   13dc4:	str	r4, [sp, #268]	; 0x10c
   13dc8:	eor	r2, r3, ip
   13dcc:	mov	ip, r3
   13dd0:	str	r3, [sp, #272]	; 0x110
   13dd4:	lsl	r3, r1, #16
   13dd8:	lsr	r1, r1, #16
   13ddc:	str	r8, [fp, #-280]	; 0xfffffee8
   13de0:	orr	r1, r1, r2, lsl #16
   13de4:	orr	r3, r3, r2, lsr #16
   13de8:	str	ip, [fp, #-276]	; 0xfffffeec
   13dec:	ldr	ip, [fp, #-120]	; 0xffffff88
   13df0:	adds	r2, r1, r7
   13df4:	mov	r5, r1
   13df8:	str	r1, [sp, #200]	; 0xc8
   13dfc:	str	r3, [fp, #-180]	; 0xffffff4c
   13e00:	str	r3, [sp, #196]	; 0xc4
   13e04:	adc	r1, r3, r0
   13e08:	mov	r7, r2
   13e0c:	str	r2, [sp, #132]	; 0x84
   13e10:	str	r5, [fp, #-184]	; 0xffffff48
   13e14:	ldr	r5, [fp, #-124]	; 0xffffff84
   13e18:	eor	r0, r1, lr
   13e1c:	mov	r4, r1
   13e20:	str	r1, [sp, #136]	; 0x88
   13e24:	eor	r1, r2, r6
   13e28:	str	r7, [fp, #-216]	; 0xffffff28
   13e2c:	ldr	r7, [fp, #-128]	; 0xffffff80
   13e30:	ldr	lr, [fp, #-116]	; 0xffffff8c
   13e34:	lsl	r2, r0, #1
   13e38:	str	r4, [fp, #-212]	; 0xffffff2c
   13e3c:	movw	r4, #55723	; 0xd9ab
   13e40:	str	ip, [sp, #208]	; 0xd0
   13e44:	orr	r2, r2, r1, lsr #31
   13e48:	lsl	r1, r1, #1
   13e4c:	ldr	r3, [fp, #-236]	; 0xffffff14
   13e50:	movt	r4, #8067	; 0x1f83
   13e54:	orr	r0, r1, r0, lsr #31
   13e58:	ldr	r1, [sp, #240]	; 0xf0
   13e5c:	str	r2, [sp, #148]	; 0x94
   13e60:	str	r5, [sp, #212]	; 0xd4
   13e64:	str	r0, [sp, #152]	; 0x98
   13e68:	str	r7, [sp, #216]	; 0xd8
   13e6c:	str	lr, [sp, #204]	; 0xcc
   13e70:	adds	r0, r0, r1
   13e74:	ldr	r1, [fp, #-268]	; 0xfffffef4
   13e78:	str	r0, [sp, #128]	; 0x80
   13e7c:	adc	r0, r2, sl
   13e80:	ldr	r2, [fp, #-240]	; 0xffffff10
   13e84:	str	r0, [sp, #124]	; 0x7c
   13e88:	ldr	r0, [fp, #-272]	; 0xfffffef0
   13e8c:	adds	r0, r2, r0
   13e90:	adc	r1, r3, r1
   13e94:	adds	r6, r0, r7
   13e98:	ldr	r0, [sp, #276]	; 0x114
   13e9c:	adc	r1, r1, r5
   13ea0:	movw	r5, #48491	; 0xbd6b
   13ea4:	movt	r5, #64321	; 0xfb41
   13ea8:	eor	r0, r1, r0
   13eac:	eor	r4, r0, r4
   13eb0:	ldr	r0, [sp, #280]	; 0x118
   13eb4:	eor	r0, r6, r0
   13eb8:	eor	r5, r0, r5
   13ebc:	movw	r0, #63531	; 0xf82b
   13ec0:	movt	r0, #65172	; 0xfe94
   13ec4:	adds	r7, r4, r0
   13ec8:	movw	r0, #62322	; 0xf372
   13ecc:	movt	r0, #15470	; 0x3c6e
   13ed0:	eor	r2, r7, r2
   13ed4:	str	r7, [sp, #116]	; 0x74
   13ed8:	adc	r0, r5, r0
   13edc:	lsl	r7, r2, #8
   13ee0:	lsr	r2, r2, #24
   13ee4:	eor	r3, r0, r3
   13ee8:	str	r0, [sp, #120]	; 0x78
   13eec:	orr	r0, r7, r3, lsr #24
   13ef0:	orr	r3, r2, r3, lsl #8
   13ef4:	adds	r2, ip, r6
   13ef8:	str	r3, [sp, #92]	; 0x5c
   13efc:	adc	r1, lr, r1
   13f00:	adds	r3, r2, r3
   13f04:	str	r0, [sp, #88]	; 0x58
   13f08:	adc	r7, r1, r0
   13f0c:	eor	r2, r3, r4
   13f10:	ldr	r0, [sp, #292]	; 0x124
   13f14:	str	r3, [sp, #224]	; 0xe0
   13f18:	str	r3, [fp, #-272]	; 0xfffffef0
   13f1c:	lsr	r4, r2, #16
   13f20:	eor	r1, r7, r5
   13f24:	lsl	r2, r2, #16
   13f28:	str	r7, [sp, #220]	; 0xdc
   13f2c:	str	r7, [fp, #-268]	; 0xfffffef4
   13f30:	orr	r9, r4, r1, lsl #16
   13f34:	orr	r1, r2, r1, lsr #16
   13f38:	str	r1, [sp, #156]	; 0x9c
   13f3c:	str	r1, [fp, #-172]	; 0xffffff54
   13f40:	str	r9, [fp, #-176]	; 0xffffff50
   13f44:	str	r9, [sp, #112]	; 0x70
   13f48:	ldm	r0, {r2, r5}
   13f4c:	ldr	r1, [fp, #-264]	; 0xfffffef8
   13f50:	ldr	r0, [fp, #-112]	; 0xffffff90
   13f54:	b	13f70 <__assert_fail@plt+0x2c68>
   13f58:	nop	{0}
   13f5c:	nop	{0}
   13f60:	vcmla.f32	d15, d4, d27[0], #90
   13f64:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13f68:	svcpl	0x001d36f1
   13f6c:	strbge	pc, [pc, #-1338]	; 13a3a <__assert_fail@plt+0x2732>	; <UNPREDICTABLE>
   13f70:	ldr	r4, [fp, #-260]	; 0xfffffefc
   13f74:	ldr	ip, [fp, #-104]	; 0xffffff98
   13f78:	ldr	r7, [fp, #-100]	; 0xffffff9c
   13f7c:	ldr	lr, [fp, #-84]	; 0xffffffac
   13f80:	adds	r6, r2, r1
   13f84:	str	r0, [sp, #168]	; 0xa8
   13f88:	ldr	r1, [fp, #-108]	; 0xffffff94
   13f8c:	str	r7, [sp, #188]	; 0xbc
   13f90:	str	ip, [sp, #192]	; 0xc0
   13f94:	str	lr, [sp, #276]	; 0x114
   13f98:	adc	r4, r5, r4
   13f9c:	adds	r6, r6, r0
   13fa0:	ldr	r0, [sp, #244]	; 0xf4
   13fa4:	str	r1, [sp, #164]	; 0xa4
   13fa8:	adc	r4, r4, r1
   13fac:	movw	r1, #14065	; 0x36f1
   13fb0:	eor	r8, r6, r0
   13fb4:	ldr	r0, [sp, #248]	; 0xf8
   13fb8:	movt	r1, #24349	; 0x5f1d
   13fbc:	eor	r0, r4, r0
   13fc0:	adds	r3, r0, r1
   13fc4:	movw	r1, #62778	; 0xf53a
   13fc8:	movt	r1, #42319	; 0xa54f
   13fcc:	eor	r2, r3, r2
   13fd0:	str	r3, [sp, #76]	; 0x4c
   13fd4:	adc	r1, r8, r1
   13fd8:	lsl	sl, r2, #8
   13fdc:	lsr	r2, r2, #24
   13fe0:	eor	r5, r1, r5
   13fe4:	str	r1, [sp, #80]	; 0x50
   13fe8:	orr	r1, r2, r5, lsl #8
   13fec:	adds	r2, ip, r6
   13ff0:	orr	r3, sl, r5, lsr #24
   13ff4:	ldr	ip, [fp, #-88]	; 0xffffffa8
   13ff8:	str	r1, [sp, #84]	; 0x54
   13ffc:	adc	r4, r7, r4
   14000:	adds	r1, r2, r1
   14004:	str	r3, [sp, #72]	; 0x48
   14008:	adc	r2, r4, r3
   1400c:	mov	r3, r1
   14010:	str	r1, [fp, #-264]	; 0xfffffef8
   14014:	str	r1, [sp, #104]	; 0x68
   14018:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1401c:	ldr	r4, [sp, #128]	; 0x80
   14020:	mov	r6, r2
   14024:	str	r2, [fp, #-260]	; 0xfffffefc
   14028:	str	r2, [sp, #108]	; 0x6c
   1402c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   14030:	eor	r0, r3, r0
   14034:	lsr	r3, r0, #16
   14038:	eor	r7, r6, r8
   1403c:	lsl	r0, r0, #16
   14040:	str	ip, [sp, #280]	; 0x118
   14044:	orr	r0, r0, r7, lsr #16
   14048:	str	r1, [sp, #240]	; 0xf0
   1404c:	adds	sl, r4, r1
   14050:	ldr	r1, [sp, #124]	; 0x7c
   14054:	str	r0, [sp, #68]	; 0x44
   14058:	str	r2, [sp, #236]	; 0xec
   1405c:	adc	r5, r1, r2
   14060:	ldr	r1, [sp, #116]	; 0x74
   14064:	ldr	r2, [sp, #120]	; 0x78
   14068:	adds	r4, r9, r1
   1406c:	ldr	r1, [sp, #156]	; 0x9c
   14070:	str	r4, [sp, #248]	; 0xf8
   14074:	adc	r2, r1, r2
   14078:	orr	r1, r3, r7, lsl #16
   1407c:	eor	r3, r0, r5
   14080:	ldr	r0, [sp, #148]	; 0x94
   14084:	eor	r7, r1, sl
   14088:	adds	r8, r3, r4
   1408c:	str	r1, [sp, #60]	; 0x3c
   14090:	str	r2, [sp, #244]	; 0xf4
   14094:	adc	r6, r7, r2
   14098:	eor	r1, r6, r0
   1409c:	ldr	r0, [sp, #152]	; 0x98
   140a0:	eor	r0, r8, r0
   140a4:	lsl	r9, r0, #8
   140a8:	lsr	r0, r0, #24
   140ac:	orr	r9, r9, r1, lsr #24
   140b0:	orr	r0, r0, r1, lsl #8
   140b4:	adds	r1, ip, sl
   140b8:	adc	r4, lr, r5
   140bc:	adds	r5, r1, r0
   140c0:	adc	r4, r4, r9
   140c4:	eor	r3, r5, r3
   140c8:	mov	lr, r5
   140cc:	str	r5, [sp, #96]	; 0x60
   140d0:	mov	ip, r4
   140d4:	eor	r1, r4, r7
   140d8:	str	r4, [sp, #100]	; 0x64
   140dc:	lsl	r4, r3, #16
   140e0:	lsr	r3, r3, #16
   140e4:	str	lr, [fp, #-288]	; 0xfffffee0
   140e8:	orr	r7, r4, r1, lsr #16
   140ec:	orr	r1, r3, r1, lsl #16
   140f0:	str	ip, [fp, #-284]	; 0xfffffee4
   140f4:	adds	r2, r1, r8
   140f8:	mov	r8, r1
   140fc:	str	r1, [sp, #128]	; 0x80
   14100:	str	r7, [sp, #124]	; 0x7c
   14104:	str	r7, [fp, #-164]	; 0xffffff5c
   14108:	adc	r3, r7, r6
   1410c:	eor	r0, r2, r0
   14110:	mov	r4, r2
   14114:	str	r2, [sp, #116]	; 0x74
   14118:	ldr	r7, [fp, #-80]	; 0xffffffb0
   1411c:	str	r8, [fp, #-168]	; 0xffffff58
   14120:	eor	r1, r3, r9
   14124:	mov	r6, r3
   14128:	str	r3, [sp, #120]	; 0x78
   1412c:	str	r4, [fp, #-208]	; 0xffffff30
   14130:	lsl	r2, r1, #1
   14134:	str	r6, [fp, #-204]	; 0xffffff34
   14138:	ldr	r6, [fp, #-76]	; 0xffffffb4
   1413c:	orr	r5, r2, r0, lsr #31
   14140:	lsl	r0, r0, #1
   14144:	ldr	r2, [sp, #248]	; 0xf8
   14148:	orr	sl, r0, r1, lsr #31
   1414c:	ldr	r0, [sp, #88]	; 0x58
   14150:	ldr	r1, [sp, #244]	; 0xf4
   14154:	str	r5, [sp, #152]	; 0x98
   14158:	str	r5, [fp, #-244]	; 0xffffff0c
   1415c:	ldr	r5, [fp, #-72]	; 0xffffffb8
   14160:	mov	r4, sl
   14164:	str	sl, [sp, #64]	; 0x40
   14168:	str	sl, [fp, #-248]	; 0xffffff08
   1416c:	eor	r0, r1, r0
   14170:	ldr	r1, [sp, #92]	; 0x5c
   14174:	str	r5, [sp, #248]	; 0xf8
   14178:	eor	r1, r2, r1
   1417c:	lsl	r2, r0, #1
   14180:	orr	r9, r2, r1, lsr #31
   14184:	lsl	r1, r1, #1
   14188:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1418c:	orr	r3, r1, r0, lsr #31
   14190:	ldr	r0, [sp, #268]	; 0x10c
   14194:	str	r6, [sp, #268]	; 0x10c
   14198:	str	r2, [sp, #244]	; 0xf4
   1419c:	adds	r1, r3, r0
   141a0:	ldr	r0, [sp, #272]	; 0x110
   141a4:	str	r7, [sp, #272]	; 0x110
   141a8:	adc	r0, r9, r0
   141ac:	adds	r1, r1, r7
   141b0:	ldr	r7, [sp, #60]	; 0x3c
   141b4:	adc	r6, r0, r6
   141b8:	ldr	r0, [sp, #260]	; 0x104
   141bc:	eor	ip, r6, r0
   141c0:	ldr	r0, [sp, #76]	; 0x4c
   141c4:	adds	r8, r7, r0
   141c8:	ldr	r0, [sp, #80]	; 0x50
   141cc:	ldr	r7, [sp, #68]	; 0x44
   141d0:	str	r8, [sp, #260]	; 0x104
   141d4:	adc	r7, r7, r0
   141d8:	ldr	r0, [sp, #264]	; 0x108
   141dc:	adds	sl, ip, r8
   141e0:	eor	r3, sl, r3
   141e4:	str	r7, [sp, #56]	; 0x38
   141e8:	eor	lr, r1, r0
   141ec:	adc	r8, lr, r7
   141f0:	lsl	r7, r3, #8
   141f4:	adds	r1, r5, r1
   141f8:	lsr	r3, r3, #24
   141fc:	ldr	r5, [sp, #220]	; 0xdc
   14200:	eor	r0, r8, r9
   14204:	orr	r9, r7, r0, lsr #24
   14208:	orr	r0, r3, r0, lsl #8
   1420c:	adc	r3, r2, r6
   14210:	ldr	r2, [sp, #216]	; 0xd8
   14214:	ldr	r7, [sp, #152]	; 0x98
   14218:	adds	r1, r1, r0
   1421c:	adc	r3, r3, r9
   14220:	adds	r6, r4, r2
   14224:	ldr	r2, [sp, #212]	; 0xd4
   14228:	adc	r7, r7, r2
   1422c:	adds	r2, r6, r1
   14230:	eor	r1, r1, ip
   14234:	ldr	ip, [fp, #-52]	; 0xffffffcc
   14238:	str	r2, [sp, #52]	; 0x34
   1423c:	adc	r2, r7, r3
   14240:	str	r2, [sp, #148]	; 0x94
   14244:	eor	r2, r3, lr
   14248:	lsl	r3, r1, #16
   1424c:	lsr	r1, r1, #16
   14250:	orr	r1, r1, r2, lsl #16
   14254:	orr	r3, r3, r2, lsr #16
   14258:	adds	r2, r1, sl
   1425c:	str	r3, [sp, #76]	; 0x4c
   14260:	str	r1, [sp, #80]	; 0x50
   14264:	adc	r3, r3, r8
   14268:	mov	r7, r2
   1426c:	eor	r0, r2, r0
   14270:	str	r2, [sp, #88]	; 0x58
   14274:	eor	r1, r3, r9
   14278:	str	r7, [fp, #-200]	; 0xffffff38
   1427c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14280:	str	r3, [fp, #-196]	; 0xffffff3c
   14284:	str	r3, [sp, #92]	; 0x5c
   14288:	lsl	r2, r1, #1
   1428c:	orr	r6, r2, r0, lsr #31
   14290:	lsl	r0, r0, #1
   14294:	ldr	r2, [sp, #260]	; 0x104
   14298:	str	ip, [sp, #260]	; 0x104
   1429c:	orr	r4, r0, r1, lsr #31
   142a0:	ldr	r0, [sp, #72]	; 0x48
   142a4:	ldr	r1, [sp, #56]	; 0x38
   142a8:	str	r6, [sp, #68]	; 0x44
   142ac:	str	r6, [fp, #-236]	; 0xffffff14
   142b0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   142b4:	str	r4, [sp, #60]	; 0x3c
   142b8:	str	r4, [fp, #-240]	; 0xffffff10
   142bc:	ldr	r4, [sp, #252]	; 0xfc
   142c0:	eor	r0, r1, r0
   142c4:	ldr	r1, [sp, #84]	; 0x54
   142c8:	str	r6, [sp, #220]	; 0xdc
   142cc:	eor	r1, r2, r1
   142d0:	lsl	r2, r0, #1
   142d4:	orr	r2, r2, r1, lsr #31
   142d8:	lsl	r1, r1, #1
   142dc:	orr	r0, r1, r0, lsr #31
   142e0:	ldr	r1, [sp, #224]	; 0xe0
   142e4:	str	r7, [sp, #224]	; 0xe0
   142e8:	adds	r1, r0, r1
   142ec:	adc	lr, r2, r5
   142f0:	adds	r1, r1, r7
   142f4:	ldr	r7, [sp, #196]	; 0xc4
   142f8:	ldr	r5, [fp, #-56]	; 0xffffffc8
   142fc:	adc	r3, lr, r6
   14300:	ldr	r6, [sp, #200]	; 0xc8
   14304:	eor	r7, r3, r7
   14308:	str	r5, [sp, #264]	; 0x108
   1430c:	adds	r8, r7, r4
   14310:	ldr	r4, [sp, #256]	; 0x100
   14314:	eor	r6, r1, r6
   14318:	eor	r0, r8, r0
   1431c:	adc	lr, r6, r4
   14320:	lsl	r4, r0, #8
   14324:	lsr	r0, r0, #24
   14328:	eor	r2, lr, r2
   1432c:	orr	r4, r4, r2, lsr #24
   14330:	orr	r2, r0, r2, lsl #8
   14334:	adds	r0, r5, r1
   14338:	ldr	r5, [sp, #144]	; 0x90
   1433c:	adc	r1, ip, r3
   14340:	adds	r3, r0, r2
   14344:	adc	r0, r1, r4
   14348:	eor	r1, r3, r7
   1434c:	str	r3, [sp, #40]	; 0x28
   14350:	str	r0, [sp, #44]	; 0x2c
   14354:	lsl	r3, r1, #16
   14358:	eor	r0, r0, r6
   1435c:	lsr	r1, r1, #16
   14360:	orr	r7, r1, r0, lsl #16
   14364:	orr	r3, r3, r0, lsr #16
   14368:	ldr	r0, [sp, #148]	; 0x94
   1436c:	adds	r6, r7, r8
   14370:	eor	r2, r6, r2
   14374:	str	r6, [sp, #28]
   14378:	eor	r0, r3, r0
   1437c:	str	r0, [sp, #32]
   14380:	adc	r0, r3, lr
   14384:	eor	r1, r0, r4
   14388:	str	r0, [sp, #48]	; 0x30
   1438c:	ldr	r0, [sp, #104]	; 0x68
   14390:	lsl	r3, r1, #1
   14394:	orr	r3, r3, r2, lsr #31
   14398:	lsl	r2, r2, #1
   1439c:	orr	r6, r2, r1, lsr #31
   143a0:	ldr	r2, [sp, #140]	; 0x8c
   143a4:	str	r3, [sp, #56]	; 0x38
   143a8:	str	r6, [sp, #36]	; 0x24
   143ac:	adds	r1, r0, r2
   143b0:	ldr	r0, [sp, #108]	; 0x6c
   143b4:	adc	ip, r0, r5
   143b8:	ldr	r0, [sp, #292]	; 0x124
   143bc:	str	r6, [r0]
   143c0:	str	r3, [r0, #4]
   143c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   143c8:	ldr	r6, [fp, #-44]	; 0xffffffd4
   143cc:	ldr	r4, [fp, #-40]	; 0xffffffd8
   143d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   143d4:	str	r3, [sp, #256]	; 0x100
   143d8:	adds	r3, r1, r3
   143dc:	ldr	r1, [sp, #156]	; 0x9c
   143e0:	str	r6, [sp, #252]	; 0xfc
   143e4:	str	r0, [sp, #196]	; 0xc4
   143e8:	str	r4, [sp, #200]	; 0xc8
   143ec:	adc	sl, ip, r6
   143f0:	eor	r9, sl, r1
   143f4:	ldr	r1, [sp, #112]	; 0x70
   143f8:	eor	r6, r3, r1
   143fc:	ldr	r1, [sp, #132]	; 0x84
   14400:	adds	ip, r9, r1
   14404:	ldr	r1, [sp, #136]	; 0x88
   14408:	eor	r2, ip, r2
   1440c:	adc	r1, r6, r1
   14410:	eor	lr, r1, r5
   14414:	lsl	r5, r2, #8
   14418:	lsr	r2, r2, #24
   1441c:	orr	r8, r2, lr, lsl #8
   14420:	adds	r2, r4, r3
   14424:	orr	r5, r5, lr, lsr #24
   14428:	adc	r3, r0, sl
   1442c:	adds	r0, r2, r8
   14430:	str	r5, [sp, #132]	; 0x84
   14434:	adc	r2, r3, r5
   14438:	eor	r4, r0, r9
   1443c:	str	r0, [sp, #144]	; 0x90
   14440:	str	r2, [sp, #156]	; 0x9c
   14444:	lsl	r3, r4, #16
   14448:	eor	r2, r2, r6
   1444c:	lsr	r4, r4, #16
   14450:	orr	r9, r4, r2, lsl #16
   14454:	orr	r0, r3, r2, lsr #16
   14458:	ldr	r3, [sp, #52]	; 0x34
   1445c:	adds	r5, r9, ip
   14460:	ldr	ip, [sp, #32]
   14464:	str	r0, [sp, #136]	; 0x88
   14468:	adc	r4, r0, r1
   1446c:	ldr	r0, [sp, #152]	; 0x98
   14470:	eor	r2, r7, r3
   14474:	ldr	r7, [sp, #148]	; 0x94
   14478:	adds	r6, r5, ip
   1447c:	adc	lr, r4, r2
   14480:	eor	r1, lr, r0
   14484:	ldr	r0, [sp, #64]	; 0x40
   14488:	eor	r0, r6, r0
   1448c:	lsl	sl, r0, #8
   14490:	lsr	r0, r0, #24
   14494:	orr	sl, sl, r1, lsr #24
   14498:	orr	r0, r0, r1, lsl #8
   1449c:	ldr	r1, [sp, #240]	; 0xf0
   144a0:	adds	r1, r3, r1
   144a4:	ldr	r3, [sp, #236]	; 0xec
   144a8:	adc	r3, r7, r3
   144ac:	adds	r7, r1, r0
   144b0:	adc	r1, r3, sl
   144b4:	str	r7, [sp, #72]	; 0x48
   144b8:	str	r1, [sp, #84]	; 0x54
   144bc:	eor	r1, r1, r2
   144c0:	eor	r2, r7, ip
   144c4:	ldr	r7, [sp, #100]	; 0x64
   144c8:	lsl	r3, r2, #16
   144cc:	lsr	r2, r2, #16
   144d0:	orr	r3, r3, r1, lsr #16
   144d4:	orr	r1, r2, r1, lsl #16
   144d8:	adds	r2, r1, r6
   144dc:	str	r1, [sp, #112]	; 0x70
   144e0:	str	r3, [sp, #140]	; 0x8c
   144e4:	adc	r1, r3, lr
   144e8:	str	r2, [sp, #104]	; 0x68
   144ec:	eor	r0, r2, r0
   144f0:	ldr	r3, [sp, #96]	; 0x60
   144f4:	str	r1, [sp, #108]	; 0x6c
   144f8:	eor	r1, r1, sl
   144fc:	lsl	r2, r1, #1
   14500:	orr	sl, r2, r0, lsr #31
   14504:	lsl	r0, r0, #1
   14508:	orr	ip, r0, r1, lsr #31
   1450c:	ldr	r0, [sp, #132]	; 0x84
   14510:	eor	r1, r5, r8
   14514:	ldr	r5, [sp, #28]
   14518:	str	ip, [sp, #152]	; 0x98
   1451c:	eor	r0, r4, r0
   14520:	lsl	r2, r0, #1
   14524:	orr	r2, r2, r1, lsr #31
   14528:	lsl	r1, r1, #1
   1452c:	orr	r0, r1, r0, lsr #31
   14530:	ldr	r1, [sp, #256]	; 0x100
   14534:	adds	r1, r1, r3
   14538:	ldr	r3, [sp, #252]	; 0xfc
   1453c:	adc	r3, r3, r7
   14540:	ldr	r7, [sp, #76]	; 0x4c
   14544:	adds	r1, r1, r0
   14548:	adc	r3, r3, r2
   1454c:	eor	r6, r3, r7
   14550:	ldr	r7, [sp, #80]	; 0x50
   14554:	str	r6, [sp, #96]	; 0x60
   14558:	adds	r6, r6, r5
   1455c:	ldr	r5, [sp, #48]	; 0x30
   14560:	eor	r0, r6, r0
   14564:	str	r6, [sp, #64]	; 0x40
   14568:	ldr	r6, [sp, #68]	; 0x44
   1456c:	eor	r7, r1, r7
   14570:	str	r7, [sp, #32]
   14574:	adc	r7, r7, r5
   14578:	ldr	r5, [sp, #60]	; 0x3c
   1457c:	str	r7, [sp, #76]	; 0x4c
   14580:	eor	r2, r7, r2
   14584:	lsl	r7, r0, #8
   14588:	lsr	r0, r0, #24
   1458c:	orr	r7, r7, r2, lsr #24
   14590:	orr	r2, r0, r2, lsl #8
   14594:	ldr	r0, [sp, #272]	; 0x110
   14598:	str	r2, [sp, #52]	; 0x34
   1459c:	str	r7, [sp, #48]	; 0x30
   145a0:	adds	r0, r1, r0
   145a4:	ldr	r1, [sp, #268]	; 0x10c
   145a8:	adc	r1, r3, r1
   145ac:	adds	r2, r0, r2
   145b0:	ldr	r0, [sp, #176]	; 0xb0
   145b4:	adc	r3, r1, r7
   145b8:	ldr	r1, [sp, #172]	; 0xac
   145bc:	str	r2, [sp, #28]
   145c0:	ldr	r7, [sp, #116]	; 0x74
   145c4:	str	r3, [sp, #24]
   145c8:	adds	r0, ip, r0
   145cc:	adc	r1, sl, r1
   145d0:	adds	r0, r0, r2
   145d4:	ldr	r2, [sp, #40]	; 0x28
   145d8:	str	r0, [sp, #148]	; 0x94
   145dc:	ldr	r0, [sp, #280]	; 0x118
   145e0:	adc	lr, r1, r3
   145e4:	ldr	r1, [sp, #276]	; 0x114
   145e8:	adds	r0, r5, r0
   145ec:	adc	r1, r6, r1
   145f0:	adds	r0, r0, r2
   145f4:	ldr	r2, [sp, #44]	; 0x2c
   145f8:	eor	r3, r9, r0
   145fc:	adc	r1, r1, r2
   14600:	ldr	r2, [sp, #136]	; 0x88
   14604:	eor	r2, r2, r1
   14608:	adds	r8, r2, r7
   1460c:	ldr	r7, [sp, #120]	; 0x78
   14610:	eor	r5, r8, r5
   14614:	lsl	r4, r5, #8
   14618:	lsr	r5, r5, #24
   1461c:	adc	r9, r3, r7
   14620:	eor	r7, r9, r6
   14624:	orr	r6, r4, r7, lsr #24
   14628:	orr	r5, r5, r7, lsl #8
   1462c:	ldr	r7, [sp, #200]	; 0xc8
   14630:	str	r5, [sp, #68]	; 0x44
   14634:	str	r6, [sp, #60]	; 0x3c
   14638:	adds	r0, r7, r0
   1463c:	ldr	r7, [sp, #196]	; 0xc4
   14640:	adc	r1, r7, r1
   14644:	adds	r7, r0, r5
   14648:	adc	r0, r1, r6
   1464c:	eor	r1, r7, r2
   14650:	str	r7, [sp, #80]	; 0x50
   14654:	ldr	r7, [sp, #36]	; 0x24
   14658:	ldr	r6, [sp, #56]	; 0x38
   1465c:	str	r0, [sp, #120]	; 0x78
   14660:	lsl	r2, r1, #16
   14664:	eor	r0, r0, r3
   14668:	lsr	r1, r1, #16
   1466c:	orr	r2, r2, r0, lsr #16
   14670:	orr	r0, r1, r0, lsl #16
   14674:	ldr	r1, [sp, #260]	; 0x104
   14678:	adds	r5, r0, r8
   1467c:	str	r0, [sp, #44]	; 0x2c
   14680:	ldr	r0, [sp, #264]	; 0x108
   14684:	str	r2, [sp, #40]	; 0x28
   14688:	adc	r9, r2, r9
   1468c:	ldr	r2, [sp, #144]	; 0x90
   14690:	str	r5, [sp, #12]
   14694:	str	r9, [sp, #8]
   14698:	adds	r0, r7, r0
   1469c:	adc	r1, r6, r1
   146a0:	adds	r8, r0, r2
   146a4:	ldr	r0, [sp, #156]	; 0x9c
   146a8:	adc	r2, r1, r0
   146ac:	ldr	r0, [sp, #124]	; 0x7c
   146b0:	eor	ip, r2, r0
   146b4:	ldr	r0, [sp, #128]	; 0x80
   146b8:	eor	r3, r8, r0
   146bc:	ldr	r0, [sp, #88]	; 0x58
   146c0:	adds	r4, ip, r0
   146c4:	ldr	r0, [sp, #92]	; 0x5c
   146c8:	str	r4, [sp, #88]	; 0x58
   146cc:	adc	r0, r3, r0
   146d0:	str	r0, [sp, #92]	; 0x5c
   146d4:	eor	r1, r0, r6
   146d8:	eor	r0, r4, r7
   146dc:	lsl	r7, r0, #8
   146e0:	lsr	r0, r0, #24
   146e4:	orr	r6, r0, r1, lsl #8
   146e8:	ldr	r0, [sp, #168]	; 0xa8
   146ec:	orr	r7, r7, r1, lsr #24
   146f0:	ldr	r1, [sp, #164]	; 0xa4
   146f4:	str	r6, [sp, #128]	; 0x80
   146f8:	str	r7, [sp, #124]	; 0x7c
   146fc:	adds	r0, r8, r0
   14700:	adc	r1, r2, r1
   14704:	adds	r2, r0, r6
   14708:	str	r2, [sp, #16]
   1470c:	adc	r0, r1, r7
   14710:	eor	r2, r2, ip
   14714:	str	r0, [sp, #20]
   14718:	lsr	r1, r2, #16
   1471c:	eor	r0, r0, r3
   14720:	lsl	r2, r2, #16
   14724:	orr	r6, r2, r0, lsr #16
   14728:	mov	r2, lr
   1472c:	orr	r1, r1, r0, lsl #16
   14730:	ldr	r0, [sp, #152]	; 0x98
   14734:	eor	r4, lr, r6
   14738:	ldr	lr, [sp, #148]	; 0x94
   1473c:	str	r1, [sp, #56]	; 0x38
   14740:	adds	r7, r4, r5
   14744:	eor	r0, r7, r0
   14748:	eor	r3, lr, r1
   1474c:	lsl	r8, r0, #8
   14750:	lsr	r0, r0, #24
   14754:	adc	r5, r3, r9
   14758:	ldr	r9, [sp, #224]	; 0xe0
   1475c:	eor	r1, r5, sl
   14760:	ldr	sl, [sp, #220]	; 0xdc
   14764:	orr	r8, r8, r1, lsr #24
   14768:	orr	ip, r0, r1, lsl #8
   1476c:	adds	r1, lr, r9
   14770:	adc	lr, r2, sl
   14774:	adds	r0, r1, ip
   14778:	adc	r1, lr, r8
   1477c:	eor	r2, r0, r4
   14780:	str	r0, [sp, #100]	; 0x64
   14784:	eor	lr, r1, r3
   14788:	lsl	r3, r2, #16
   1478c:	lsr	r2, r2, #16
   14790:	str	r1, [sp, #116]	; 0x74
   14794:	orr	r1, r2, lr, lsl #16
   14798:	orr	r3, r3, lr, lsr #16
   1479c:	adds	r2, r1, r7
   147a0:	str	r1, [sp, #156]	; 0x9c
   147a4:	str	r3, [sp, #152]	; 0x98
   147a8:	ldr	r7, [sp, #84]	; 0x54
   147ac:	adc	r1, r3, r5
   147b0:	str	r2, [sp, #144]	; 0x90
   147b4:	eor	r0, r2, ip
   147b8:	ldr	r3, [sp, #72]	; 0x48
   147bc:	str	r1, [sp, #148]	; 0x94
   147c0:	eor	r1, r1, r8
   147c4:	lsl	r2, r1, #1
   147c8:	orr	r2, r2, r0, lsr #31
   147cc:	lsl	r0, r0, #1
   147d0:	orr	r0, r0, r1, lsr #31
   147d4:	ldr	r1, [sp, #8]
   147d8:	str	r2, [sp, #132]	; 0x84
   147dc:	ldr	r2, [sp, #12]
   147e0:	str	r0, [sp, #136]	; 0x88
   147e4:	ldr	r0, [sp, #60]	; 0x3c
   147e8:	eor	r0, r1, r0
   147ec:	ldr	r1, [sp, #68]	; 0x44
   147f0:	eor	r1, r2, r1
   147f4:	lsl	r2, r0, #1
   147f8:	orr	lr, r2, r1, lsr #31
   147fc:	lsl	r1, r1, #1
   14800:	orr	ip, r1, r0, lsr #31
   14804:	ldr	r1, [sp, #228]	; 0xe4
   14808:	ldr	r0, [sp, #88]	; 0x58
   1480c:	adds	r1, r3, r1
   14810:	ldr	r3, [sp, #232]	; 0xe8
   14814:	adc	r3, r7, r3
   14818:	adds	r8, r1, ip
   1481c:	ldr	r1, [sp, #56]	; 0x38
   14820:	adc	r7, r3, lr
   14824:	ldr	r3, [sp, #24]
   14828:	adds	r0, r1, r0
   1482c:	ldr	r1, [sp, #92]	; 0x5c
   14830:	str	r0, [sp, #12]
   14834:	adc	r2, r6, r1
   14838:	ldr	r1, [sp, #32]
   1483c:	str	r2, [sp, #8]
   14840:	eor	r6, r3, r1
   14844:	ldr	r1, [sp, #96]	; 0x60
   14848:	ldr	r3, [sp, #28]
   1484c:	eor	r5, r3, r1
   14850:	lsr	r4, r5, #16
   14854:	lsl	r5, r5, #16
   14858:	orr	r4, r4, r6, lsl #16
   1485c:	orr	r6, r5, r6, lsr #16
   14860:	eor	r3, r6, r7
   14864:	eor	r1, r4, r8
   14868:	str	r6, [fp, #-188]	; 0xffffff44
   1486c:	str	r4, [fp, #-192]	; 0xffffff40
   14870:	str	r3, [sp, #72]	; 0x48
   14874:	adds	r3, r3, r0
   14878:	str	r1, [sp, #68]	; 0x44
   1487c:	adc	r5, r1, r2
   14880:	eor	r0, r3, ip
   14884:	str	r3, [sp, #92]	; 0x5c
   14888:	ldr	r1, [sp, #284]	; 0x11c
   1488c:	str	r5, [sp, #96]	; 0x60
   14890:	eor	r2, r5, lr
   14894:	lsl	r5, r0, #8
   14898:	lsr	r0, r0, #24
   1489c:	orr	r3, r5, r2, lsr #24
   148a0:	orr	r2, r0, r2, lsl #8
   148a4:	ldr	r0, [sp, #288]	; 0x120
   148a8:	str	r2, [sp, #88]	; 0x58
   148ac:	str	r3, [sp, #84]	; 0x54
   148b0:	adds	r0, r8, r0
   148b4:	adc	r1, r7, r1
   148b8:	adds	r0, r0, r2
   148bc:	ldr	r2, [sp, #136]	; 0x88
   148c0:	adc	r1, r1, r3
   148c4:	str	r0, [sp, #60]	; 0x3c
   148c8:	adds	r0, r0, r9
   148cc:	ldr	r3, [sp, #40]	; 0x28
   148d0:	str	r1, [sp, #56]	; 0x38
   148d4:	adc	r1, r1, sl
   148d8:	ldr	sl, [sp, #112]	; 0x70
   148dc:	adds	r0, r0, r2
   148e0:	str	r0, [sp, #36]	; 0x24
   148e4:	ldr	r0, [sp, #132]	; 0x84
   148e8:	adc	r0, r1, r0
   148ec:	ldr	r1, [sp, #16]
   148f0:	str	r0, [sp, #32]
   148f4:	ldr	r0, [sp, #64]	; 0x40
   148f8:	adds	r9, r4, r0
   148fc:	ldr	r0, [sp, #76]	; 0x4c
   14900:	str	r9, [fp, #-224]	; 0xffffff20
   14904:	adc	r8, r6, r0
   14908:	ldr	r0, [sp, #48]	; 0x30
   1490c:	str	r8, [fp, #-220]	; 0xffffff24
   14910:	eor	r2, r8, r0
   14914:	ldr	r0, [sp, #52]	; 0x34
   14918:	lsl	r6, r2, #1
   1491c:	eor	r7, r9, r0
   14920:	ldr	r0, [sp, #208]	; 0xd0
   14924:	orr	r6, r6, r7, lsr #31
   14928:	lsl	r7, r7, #1
   1492c:	orr	r2, r7, r2, lsr #31
   14930:	str	r6, [fp, #-252]	; 0xffffff04
   14934:	str	r2, [fp, #-256]	; 0xffffff00
   14938:	str	sl, [fp, #-184]	; 0xffffff48
   1493c:	adds	r7, r1, r0
   14940:	ldr	r0, [sp, #204]	; 0xcc
   14944:	ldr	r1, [sp, #20]
   14948:	adc	r5, r1, r0
   1494c:	ldr	r0, [sp, #140]	; 0x8c
   14950:	ldr	r1, [sp, #108]	; 0x6c
   14954:	adds	lr, r7, r2
   14958:	adc	r5, r5, r6
   1495c:	eor	r7, r5, r3
   14960:	str	r0, [fp, #-180]	; 0xffffff4c
   14964:	ldr	r0, [sp, #104]	; 0x68
   14968:	str	r1, [fp, #-212]	; 0xffffff2c
   1496c:	str	r0, [fp, #-216]	; 0xffffff28
   14970:	str	r3, [fp, #-172]	; 0xffffff54
   14974:	ldr	r3, [sp, #44]	; 0x2c
   14978:	adds	ip, r7, r0
   1497c:	eor	r2, ip, r2
   14980:	lsl	r4, r2, #8
   14984:	lsr	r2, r2, #24
   14988:	str	r3, [fp, #-176]	; 0xffffff50
   1498c:	eor	r3, lr, r3
   14990:	adc	r1, r3, r1
   14994:	eor	r6, r1, r6
   14998:	orr	r0, r2, r6, lsl #8
   1499c:	ldr	r2, [sp, #184]	; 0xb8
   149a0:	orr	r4, r4, r6, lsr #24
   149a4:	ldr	r6, [sp, #180]	; 0xb4
   149a8:	str	r4, [sp, #52]	; 0x34
   149ac:	str	r0, [sp, #64]	; 0x40
   149b0:	adds	r2, lr, r2
   149b4:	adc	r5, r5, r6
   149b8:	adds	r6, r2, r0
   149bc:	adc	r2, r5, r4
   149c0:	str	r6, [sp, #76]	; 0x4c
   149c4:	str	r2, [sp, #104]	; 0x68
   149c8:	eor	r2, r2, r3
   149cc:	eor	r3, r6, r7
   149d0:	lsl	r7, r3, #16
   149d4:	lsr	r3, r3, #16
   149d8:	orr	r7, r7, r2, lsr #16
   149dc:	orr	r2, r3, r2, lsl #16
   149e0:	adds	r4, r2, ip
   149e4:	str	r2, [sp, #48]	; 0x30
   149e8:	ldr	r2, [sp, #12]
   149ec:	str	r7, [sp, #44]	; 0x2c
   149f0:	adc	r0, r7, r1
   149f4:	ldr	r1, [sp, #8]
   149f8:	str	r4, [sp]
   149fc:	str	r0, [sp, #4]
   14a00:	ldr	r0, [sp, #124]	; 0x7c
   14a04:	eor	r0, r1, r0
   14a08:	ldr	r1, [sp, #128]	; 0x80
   14a0c:	lsl	r3, r0, #1
   14a10:	eor	r1, r2, r1
   14a14:	ldr	r2, [sp, #248]	; 0xf8
   14a18:	orr	r7, r3, r1, lsr #31
   14a1c:	lsl	r1, r1, #1
   14a20:	ldr	r3, [sp, #244]	; 0xf4
   14a24:	orr	r0, r1, r0, lsr #31
   14a28:	ldr	r1, [sp, #80]	; 0x50
   14a2c:	adds	r1, r1, r2
   14a30:	ldr	r2, [sp, #120]	; 0x78
   14a34:	adc	r3, r2, r3
   14a38:	ldr	r2, [sp, #140]	; 0x8c
   14a3c:	adds	r1, r1, r0
   14a40:	adc	r5, r3, r7
   14a44:	eor	r3, r1, sl
   14a48:	eor	r2, r5, r2
   14a4c:	adds	sl, r2, r9
   14a50:	adc	r6, r3, r8
   14a54:	eor	r0, sl, r0
   14a58:	ldr	r8, [sp, #4]
   14a5c:	str	r6, [sp, #28]
   14a60:	eor	r7, r6, r7
   14a64:	lsl	r6, r0, #8
   14a68:	lsr	r0, r0, #24
   14a6c:	orr	r6, r6, r7, lsr #24
   14a70:	orr	r7, r0, r7, lsl #8
   14a74:	ldr	r0, [sp, #192]	; 0xc0
   14a78:	str	r7, [sp, #140]	; 0x8c
   14a7c:	str	r6, [sp, #112]	; 0x70
   14a80:	adds	r0, r1, r0
   14a84:	ldr	r1, [sp, #188]	; 0xbc
   14a88:	adc	r1, r5, r1
   14a8c:	adds	r7, r0, r7
   14a90:	adc	r0, r1, r6
   14a94:	eor	r2, r7, r2
   14a98:	ldr	r6, [sp, #36]	; 0x24
   14a9c:	str	r7, [sp, #24]
   14aa0:	str	r0, [sp, #40]	; 0x28
   14aa4:	lsr	r1, r2, #16
   14aa8:	eor	r0, r0, r3
   14aac:	lsl	r2, r2, #16
   14ab0:	orr	r3, r2, r0, lsr #16
   14ab4:	orr	r1, r1, r0, lsl #16
   14ab8:	ldr	r0, [sp, #152]	; 0x98
   14abc:	ldr	r2, [sp, #32]
   14ac0:	str	r3, [sp, #20]
   14ac4:	str	r1, [sp, #12]
   14ac8:	str	r0, [fp, #-164]	; 0xffffff5c
   14acc:	ldr	r0, [sp, #156]	; 0x9c
   14ad0:	eor	lr, r2, r3
   14ad4:	eor	r3, r6, r1
   14ad8:	ldr	r1, [sp, #228]	; 0xe4
   14adc:	adds	r4, lr, r4
   14ae0:	adc	r7, r3, r8
   14ae4:	str	r0, [fp, #-168]	; 0xffffff58
   14ae8:	ldr	r0, [sp, #144]	; 0x90
   14aec:	str	r0, [fp, #-208]	; 0xffffff30
   14af0:	ldr	r0, [sp, #148]	; 0x94
   14af4:	str	r0, [fp, #-204]	; 0xffffff34
   14af8:	ldr	r0, [sp, #132]	; 0x84
   14afc:	str	r0, [fp, #-244]	; 0xffffff0c
   14b00:	eor	r5, r7, r0
   14b04:	ldr	r0, [sp, #136]	; 0x88
   14b08:	str	r0, [fp, #-248]	; 0xffffff08
   14b0c:	eor	r0, r4, r0
   14b10:	lsl	r9, r0, #8
   14b14:	lsr	r0, r0, #24
   14b18:	orr	r9, r9, r5, lsr #24
   14b1c:	orr	ip, r0, r5, lsl #8
   14b20:	adds	r5, r6, r1
   14b24:	ldr	r1, [sp, #232]	; 0xe8
   14b28:	adc	r1, r2, r1
   14b2c:	adds	r5, r5, ip
   14b30:	adc	r0, r1, r9
   14b34:	eor	r2, r5, lr
   14b38:	str	r5, [sp, #80]	; 0x50
   14b3c:	eor	r1, r0, r3
   14b40:	lsl	r3, r2, #16
   14b44:	lsr	r2, r2, #16
   14b48:	str	r0, [sp, #108]	; 0x6c
   14b4c:	orr	r3, r3, r1, lsr #16
   14b50:	orr	r1, r2, r1, lsl #16
   14b54:	adds	r2, r1, r4
   14b58:	str	r1, [sp, #132]	; 0x84
   14b5c:	str	r3, [sp, #120]	; 0x78
   14b60:	adc	r1, r3, r7
   14b64:	str	r2, [sp, #124]	; 0x7c
   14b68:	eor	r0, r2, ip
   14b6c:	ldr	r7, [sp, #244]	; 0xf4
   14b70:	str	r1, [sp, #128]	; 0x80
   14b74:	eor	r1, r1, r9
   14b78:	lsl	r2, r1, #1
   14b7c:	orr	r9, r2, r0, lsr #31
   14b80:	lsl	r0, r0, #1
   14b84:	ldr	r2, [sp]
   14b88:	orr	lr, r0, r1, lsr #31
   14b8c:	ldr	r0, [sp, #52]	; 0x34
   14b90:	ldr	r1, [sp, #64]	; 0x40
   14b94:	str	r9, [sp, #16]
   14b98:	str	lr, [sp, #136]	; 0x88
   14b9c:	eor	r0, r8, r0
   14ba0:	eor	r1, r2, r1
   14ba4:	lsl	r2, r0, #1
   14ba8:	orr	r3, r2, r1, lsr #31
   14bac:	lsl	r1, r1, #1
   14bb0:	ldr	r2, [sp, #248]	; 0xf8
   14bb4:	orr	r0, r1, r0, lsr #31
   14bb8:	ldr	r1, [sp, #100]	; 0x64
   14bbc:	adds	r1, r1, r2
   14bc0:	ldr	r2, [sp, #116]	; 0x74
   14bc4:	adc	r2, r2, r7
   14bc8:	adds	r5, r1, r0
   14bcc:	ldr	r1, [sp, #12]
   14bd0:	adc	r6, r2, r3
   14bd4:	ldr	r2, [sp, #20]
   14bd8:	adds	sl, r1, sl
   14bdc:	ldr	r1, [sp, #28]
   14be0:	adc	r8, r2, r1
   14be4:	ldr	r1, [sp, #68]	; 0x44
   14be8:	ldr	r2, [sp, #56]	; 0x38
   14bec:	eor	r7, r2, r1
   14bf0:	ldr	r1, [sp, #72]	; 0x48
   14bf4:	ldr	r2, [sp, #60]	; 0x3c
   14bf8:	eor	r4, r2, r1
   14bfc:	lsr	r2, r4, #16
   14c00:	lsl	r4, r4, #16
   14c04:	orr	r4, r4, r7, lsr #16
   14c08:	orr	ip, r2, r7, lsl #16
   14c0c:	eor	r1, r6, r4
   14c10:	eor	r7, r5, ip
   14c14:	adds	r2, r1, sl
   14c18:	str	r1, [sp, #56]	; 0x38
   14c1c:	str	r7, [sp, #52]	; 0x34
   14c20:	adc	r1, r7, r8
   14c24:	eor	r0, r2, r0
   14c28:	str	r2, [sp, #68]	; 0x44
   14c2c:	lsl	r7, r0, #8
   14c30:	eor	r3, r1, r3
   14c34:	lsr	r0, r0, #24
   14c38:	str	r1, [sp, #72]	; 0x48
   14c3c:	ldr	r1, [sp, #236]	; 0xec
   14c40:	orr	r2, r0, r3, lsl #8
   14c44:	ldr	r0, [sp, #240]	; 0xf0
   14c48:	orr	r7, r7, r3, lsr #24
   14c4c:	str	r2, [sp, #64]	; 0x40
   14c50:	str	r7, [sp, #60]	; 0x3c
   14c54:	adds	r0, r5, r0
   14c58:	adc	r3, r6, r1
   14c5c:	adds	r2, r0, r2
   14c60:	ldr	r0, [sp, #272]	; 0x110
   14c64:	ldr	r1, [sp, #268]	; 0x10c
   14c68:	adc	r5, r3, r7
   14c6c:	str	r2, [sp, #32]
   14c70:	str	r5, [sp, #28]
   14c74:	adds	r0, lr, r0
   14c78:	adc	r3, r9, r1
   14c7c:	adds	r0, r0, r2
   14c80:	ldr	r1, [sp, #24]
   14c84:	str	r0, [sp, #116]	; 0x74
   14c88:	adc	r0, r3, r5
   14c8c:	str	r0, [sp, #8]
   14c90:	ldr	r0, [sp, #92]	; 0x5c
   14c94:	adds	lr, ip, r0
   14c98:	ldr	r0, [sp, #96]	; 0x60
   14c9c:	adc	r9, r4, r0
   14ca0:	ldr	r0, [sp, #84]	; 0x54
   14ca4:	eor	r2, r9, r0
   14ca8:	ldr	r0, [sp, #88]	; 0x58
   14cac:	lsl	r6, r2, #1
   14cb0:	eor	r3, lr, r0
   14cb4:	ldr	r0, [sp, #208]	; 0xd0
   14cb8:	orr	r6, r6, r3, lsr #31
   14cbc:	lsl	r3, r3, #1
   14cc0:	orr	r2, r3, r2, lsr #31
   14cc4:	str	r6, [fp, #-236]	; 0xffffff14
   14cc8:	str	r2, [fp, #-240]	; 0xffffff10
   14ccc:	str	lr, [fp, #-200]	; 0xffffff38
   14cd0:	str	r9, [fp, #-196]	; 0xffffff3c
   14cd4:	adds	r3, r1, r0
   14cd8:	ldr	r0, [sp, #204]	; 0xcc
   14cdc:	ldr	r1, [sp, #40]	; 0x28
   14ce0:	adc	r5, r1, r0
   14ce4:	ldr	r0, [sp, #44]	; 0x2c
   14ce8:	adds	r3, r3, r2
   14cec:	ldr	r1, [sp, #148]	; 0x94
   14cf0:	adc	r5, r5, r6
   14cf4:	eor	ip, r0, r5
   14cf8:	ldr	r0, [sp, #48]	; 0x30
   14cfc:	eor	r4, r0, r3
   14d00:	ldr	r0, [sp, #144]	; 0x90
   14d04:	adds	r0, ip, r0
   14d08:	adc	r1, r4, r1
   14d0c:	eor	r2, r0, r2
   14d10:	lsl	r7, r2, #8
   14d14:	eor	r6, r1, r6
   14d18:	lsr	r2, r2, #24
   14d1c:	orr	r7, r7, r6, lsr #24
   14d20:	orr	r6, r2, r6, lsl #8
   14d24:	ldr	r2, [sp, #288]	; 0x120
   14d28:	str	r7, [sp, #84]	; 0x54
   14d2c:	str	r6, [sp, #92]	; 0x5c
   14d30:	adds	r2, r3, r2
   14d34:	ldr	r3, [sp, #284]	; 0x11c
   14d38:	adc	r3, r5, r3
   14d3c:	adds	r5, r2, r6
   14d40:	adc	r2, r3, r7
   14d44:	eor	r3, r5, ip
   14d48:	str	r5, [sp, #96]	; 0x60
   14d4c:	str	r2, [sp, #100]	; 0x64
   14d50:	lsl	r5, r3, #16
   14d54:	eor	r2, r2, r4
   14d58:	lsr	r3, r3, #16
   14d5c:	orr	r7, r5, r2, lsr #16
   14d60:	orr	r2, r3, r2, lsl #16
   14d64:	ldr	r3, [sp, #76]	; 0x4c
   14d68:	adds	r0, r2, r0
   14d6c:	str	r2, [sp, #88]	; 0x58
   14d70:	str	r7, [sp, #40]	; 0x28
   14d74:	str	r0, [sp, #44]	; 0x2c
   14d78:	ldr	r0, [sp, #112]	; 0x70
   14d7c:	adc	ip, r7, r1
   14d80:	ldr	r1, [sp, #140]	; 0x8c
   14d84:	str	ip, [sp, #24]
   14d88:	eor	r0, r8, r0
   14d8c:	eor	r1, sl, r1
   14d90:	lsl	r2, r0, #1
   14d94:	orr	r4, r2, r1, lsr #31
   14d98:	lsl	r1, r1, #1
   14d9c:	ldr	r2, [sp, #196]	; 0xc4
   14da0:	orr	r0, r1, r0, lsr #31
   14da4:	ldr	r1, [sp, #200]	; 0xc8
   14da8:	adds	r1, r0, r1
   14dac:	adc	r2, r4, r2
   14db0:	adds	r1, r1, r3
   14db4:	ldr	r3, [sp, #104]	; 0x68
   14db8:	adc	r3, r2, r3
   14dbc:	ldr	r2, [sp, #152]	; 0x98
   14dc0:	eor	sl, r3, r2
   14dc4:	ldr	r2, [sp, #156]	; 0x9c
   14dc8:	adds	r5, sl, lr
   14dcc:	str	r5, [sp, #48]	; 0x30
   14dd0:	eor	r2, r1, r2
   14dd4:	adc	r7, r2, r9
   14dd8:	str	r7, [sp, #104]	; 0x68
   14ddc:	eor	lr, r7, r4
   14de0:	ldr	r7, [sp, #292]	; 0x124
   14de4:	stm	r7, {r0, r4}
   14de8:	eor	r0, r5, r0
   14dec:	lsl	r4, r0, #8
   14df0:	lsr	r0, r0, #24
   14df4:	ldr	r9, [sp, #44]	; 0x2c
   14df8:	orr	r6, r0, lr, lsl #8
   14dfc:	ldr	r0, [sp, #264]	; 0x108
   14e00:	orr	r7, r4, lr, lsr #24
   14e04:	str	r6, [sp, #76]	; 0x4c
   14e08:	str	r7, [sp, #36]	; 0x24
   14e0c:	adds	r0, r1, r0
   14e10:	ldr	r1, [sp, #260]	; 0x104
   14e14:	adc	r1, r3, r1
   14e18:	adds	r3, r0, r6
   14e1c:	ldr	r6, [sp, #116]	; 0x74
   14e20:	adc	r0, r1, r7
   14e24:	str	r3, [sp, #12]
   14e28:	str	r0, [sp, #20]
   14e2c:	eor	r0, r0, r2
   14e30:	eor	r2, r3, sl
   14e34:	lsr	r1, r2, #16
   14e38:	lsl	r2, r2, #16
   14e3c:	orr	r4, r2, r0, lsr #16
   14e40:	ldr	r2, [sp, #8]
   14e44:	orr	r5, r1, r0, lsl #16
   14e48:	ldr	r0, [sp, #16]
   14e4c:	eor	r3, r6, r5
   14e50:	eor	r8, r2, r4
   14e54:	adds	sl, r8, r9
   14e58:	adc	lr, r3, ip
   14e5c:	eor	r1, lr, r0
   14e60:	ldr	r0, [sp, #136]	; 0x88
   14e64:	eor	r0, sl, r0
   14e68:	lsl	r7, r0, #8
   14e6c:	lsr	r0, r0, #24
   14e70:	orr	r7, r7, r1, lsr #24
   14e74:	orr	r0, r0, r1, lsl #8
   14e78:	ldr	r1, [sp, #256]	; 0x100
   14e7c:	adds	r1, r6, r1
   14e80:	ldr	r6, [sp, #252]	; 0xfc
   14e84:	adc	ip, r2, r6
   14e88:	adds	r6, r1, r0
   14e8c:	adc	r1, ip, r7
   14e90:	eor	r2, r6, r8
   14e94:	str	r6, [sp, #112]	; 0x70
   14e98:	eor	ip, r1, r3
   14e9c:	lsl	r3, r2, #16
   14ea0:	lsr	r2, r2, #16
   14ea4:	str	r1, [sp, #116]	; 0x74
   14ea8:	orr	r1, r2, ip, lsl #16
   14eac:	orr	r3, r3, ip, lsr #16
   14eb0:	ldr	ip, [sp, #180]	; 0xb4
   14eb4:	adds	r2, r1, sl
   14eb8:	str	r1, [sp, #156]	; 0x9c
   14ebc:	str	r3, [sp, #152]	; 0x98
   14ec0:	adc	r1, r3, lr
   14ec4:	str	r2, [sp, #144]	; 0x90
   14ec8:	eor	r0, r2, r0
   14ecc:	ldr	r3, [sp, #108]	; 0x6c
   14ed0:	str	r1, [sp, #148]	; 0x94
   14ed4:	eor	r1, r1, r7
   14ed8:	ldr	r7, [sp, #184]	; 0xb8
   14edc:	lsl	r2, r1, #1
   14ee0:	orr	r2, r2, r0, lsr #31
   14ee4:	lsl	r0, r0, #1
   14ee8:	orr	r0, r0, r1, lsr #31
   14eec:	ldr	r1, [sp, #24]
   14ef0:	str	r2, [sp, #136]	; 0x88
   14ef4:	str	r0, [sp, #140]	; 0x8c
   14ef8:	ldr	r0, [sp, #84]	; 0x54
   14efc:	eor	r0, r1, r0
   14f00:	ldr	r1, [sp, #92]	; 0x5c
   14f04:	lsl	r2, r0, #1
   14f08:	eor	r1, r9, r1
   14f0c:	orr	sl, r2, r1, lsr #31
   14f10:	lsl	r1, r1, #1
   14f14:	ldr	r2, [sp, #52]	; 0x34
   14f18:	orr	lr, r1, r0, lsr #31
   14f1c:	ldr	r1, [sp, #80]	; 0x50
   14f20:	ldr	r0, [sp, #48]	; 0x30
   14f24:	adds	r6, r1, r7
   14f28:	ldr	r1, [sp, #104]	; 0x68
   14f2c:	adc	r3, r3, ip
   14f30:	adds	r8, r6, lr
   14f34:	adc	r9, r3, sl
   14f38:	ldr	r3, [sp, #28]
   14f3c:	adds	r0, r5, r0
   14f40:	str	r0, [sp, #8]
   14f44:	adc	r1, r4, r1
   14f48:	str	r1, [sp, #4]
   14f4c:	eor	r5, r3, r2
   14f50:	ldr	r2, [sp, #56]	; 0x38
   14f54:	ldr	r3, [sp, #32]
   14f58:	eor	r4, r3, r2
   14f5c:	lsr	r6, r4, #16
   14f60:	lsl	r4, r4, #16
   14f64:	orr	r6, r6, r5, lsl #16
   14f68:	orr	r5, r4, r5, lsr #16
   14f6c:	eor	r3, r5, r9
   14f70:	eor	r2, r6, r8
   14f74:	str	r6, [fp, #-192]	; 0xffffff40
   14f78:	str	r5, [fp, #-188]	; 0xffffff44
   14f7c:	adds	r4, r3, r0
   14f80:	str	r3, [sp, #56]	; 0x38
   14f84:	str	r2, [sp, #52]	; 0x34
   14f88:	adc	r3, r2, r1
   14f8c:	eor	r0, r4, lr
   14f90:	str	r4, [sp, #104]	; 0x68
   14f94:	ldr	r1, [sp, #140]	; 0x8c
   14f98:	eor	r2, r3, sl
   14f9c:	lsl	r4, r0, #8
   14fa0:	lsr	r0, r0, #24
   14fa4:	str	r3, [sp, #108]	; 0x6c
   14fa8:	ldr	sl, [sp, #120]	; 0x78
   14fac:	orr	r3, r4, r2, lsr #24
   14fb0:	orr	r4, r0, r2, lsl #8
   14fb4:	ldr	r0, [sp, #168]	; 0xa8
   14fb8:	ldr	r2, [sp, #164]	; 0xa4
   14fbc:	str	r3, [sp, #84]	; 0x54
   14fc0:	str	r4, [sp, #92]	; 0x5c
   14fc4:	adds	r0, r8, r0
   14fc8:	adc	r2, r9, r2
   14fcc:	adds	r0, r0, r4
   14fd0:	adc	r2, r2, r3
   14fd4:	str	r0, [sp, #48]	; 0x30
   14fd8:	adds	r0, r0, r7
   14fdc:	ldr	r3, [sp, #132]	; 0x84
   14fe0:	ldr	r7, [sp, #40]	; 0x28
   14fe4:	str	r2, [sp, #44]	; 0x2c
   14fe8:	adc	r2, r2, ip
   14fec:	adds	r0, r0, r1
   14ff0:	str	r0, [sp, #24]
   14ff4:	ldr	r0, [sp, #136]	; 0x88
   14ff8:	adc	r0, r2, r0
   14ffc:	str	r0, [sp, #16]
   15000:	ldr	r0, [sp, #68]	; 0x44
   15004:	adds	r8, r6, r0
   15008:	ldr	r0, [sp, #72]	; 0x48
   1500c:	str	r8, [fp, #-224]	; 0xffffff20
   15010:	adc	ip, r5, r0
   15014:	ldr	r0, [sp, #60]	; 0x3c
   15018:	str	ip, [fp, #-220]	; 0xffffff24
   1501c:	eor	r1, ip, r0
   15020:	ldr	r0, [sp, #64]	; 0x40
   15024:	lsl	r6, r1, #1
   15028:	eor	r2, r8, r0
   1502c:	ldr	r0, [sp, #280]	; 0x118
   15030:	orr	r9, r6, r2, lsr #31
   15034:	lsl	r2, r2, #1
   15038:	orr	r6, r2, r1, lsr #31
   1503c:	ldr	r1, [sp, #12]
   15040:	str	r9, [fp, #-252]	; 0xffffff04
   15044:	str	r6, [fp, #-256]	; 0xffffff00
   15048:	str	sl, [fp, #-180]	; 0xffffff4c
   1504c:	str	r3, [fp, #-184]	; 0xffffff48
   15050:	adds	r2, r1, r0
   15054:	ldr	r0, [sp, #276]	; 0x114
   15058:	ldr	r1, [sp, #20]
   1505c:	adc	r5, r1, r0
   15060:	ldr	r0, [sp, #128]	; 0x80
   15064:	ldr	r1, [sp, #124]	; 0x7c
   15068:	adds	r2, r2, r6
   1506c:	adc	r4, r5, r9
   15070:	eor	r5, r4, r7
   15074:	str	r0, [fp, #-212]	; 0xffffff2c
   15078:	str	r1, [fp, #-216]	; 0xffffff28
   1507c:	str	r7, [fp, #-172]	; 0xffffff54
   15080:	ldr	r7, [sp, #88]	; 0x58
   15084:	adds	lr, r5, r1
   15088:	eor	r1, lr, r6
   1508c:	lsl	r6, r1, #8
   15090:	lsr	r1, r1, #24
   15094:	str	r7, [fp, #-176]	; 0xffffff50
   15098:	eor	r7, r2, r7
   1509c:	adc	r0, r7, r0
   150a0:	eor	r9, r0, r9
   150a4:	orr	r6, r6, r9, lsr #24
   150a8:	orr	r9, r1, r9, lsl #8
   150ac:	ldr	r1, [sp, #216]	; 0xd8
   150b0:	str	r9, [sp, #72]	; 0x48
   150b4:	str	r6, [sp, #68]	; 0x44
   150b8:	adds	r1, r2, r1
   150bc:	ldr	r2, [sp, #212]	; 0xd4
   150c0:	adc	r2, r4, r2
   150c4:	adds	r4, r1, r9
   150c8:	adc	r1, r2, r6
   150cc:	eor	r2, r4, r5
   150d0:	str	r4, [sp, #80]	; 0x50
   150d4:	ldr	r6, [sp, #188]	; 0xbc
   150d8:	str	r1, [sp, #88]	; 0x58
   150dc:	lsl	r4, r2, #16
   150e0:	eor	r1, r1, r7
   150e4:	lsr	r2, r2, #16
   150e8:	orr	r4, r4, r1, lsr #16
   150ec:	orr	r1, r2, r1, lsl #16
   150f0:	ldr	r2, [sp, #8]
   150f4:	str	r1, [sp, #40]	; 0x28
   150f8:	adds	r1, r1, lr
   150fc:	str	r4, [sp, #28]
   15100:	str	r1, [sp]
   15104:	adc	r9, r4, r0
   15108:	ldr	r0, [sp, #36]	; 0x24
   1510c:	ldr	r1, [sp, #4]
   15110:	eor	r0, r1, r0
   15114:	ldr	r1, [sp, #76]	; 0x4c
   15118:	lsl	r7, r0, #1
   1511c:	eor	r2, r2, r1
   15120:	ldr	r1, [sp, #192]	; 0xc0
   15124:	orr	r7, r7, r2, lsr #31
   15128:	lsl	r2, r2, #1
   1512c:	orr	r2, r2, r0, lsr #31
   15130:	ldr	r0, [sp, #96]	; 0x60
   15134:	adds	r0, r0, r1
   15138:	ldr	r1, [sp, #100]	; 0x64
   1513c:	adc	r4, r1, r6
   15140:	adds	r5, r0, r2
   15144:	adc	r0, r4, r7
   15148:	eor	r1, r5, r3
   1514c:	eor	r4, r0, sl
   15150:	adds	r3, r4, r8
   15154:	str	r3, [sp, #60]	; 0x3c
   15158:	eor	r2, r3, r2
   1515c:	ldr	r3, [sp, #176]	; 0xb0
   15160:	adc	r6, r1, ip
   15164:	ldr	ip, [sp]
   15168:	str	r6, [sp, #64]	; 0x40
   1516c:	eor	r7, r6, r7
   15170:	lsl	r6, r2, #8
   15174:	lsr	r2, r2, #24
   15178:	orr	r6, r6, r7, lsr #24
   1517c:	orr	r7, r2, r7, lsl #8
   15180:	str	r7, [sp, #36]	; 0x24
   15184:	str	r6, [sp, #32]
   15188:	adds	r2, r5, r3
   1518c:	ldr	r5, [sp, #172]	; 0xac
   15190:	adc	r0, r0, r5
   15194:	adds	r2, r2, r7
   15198:	adc	r0, r0, r6
   1519c:	str	r2, [sp, #20]
   151a0:	str	r0, [sp, #100]	; 0x64
   151a4:	eor	r0, r0, r1
   151a8:	eor	r1, r2, r4
   151ac:	ldr	r4, [sp, #16]
   151b0:	lsr	r2, r1, #16
   151b4:	lsl	r1, r1, #16
   151b8:	orr	r7, r2, r0, lsl #16
   151bc:	orr	r1, r1, r0, lsr #16
   151c0:	ldr	r0, [sp, #152]	; 0x98
   151c4:	ldr	r2, [sp, #24]
   151c8:	str	r1, [sp, #12]
   151cc:	str	r7, [sp, #8]
   151d0:	eor	lr, r4, r1
   151d4:	adds	sl, lr, ip
   151d8:	str	r0, [fp, #-164]	; 0xffffff5c
   151dc:	ldr	r0, [sp, #156]	; 0x9c
   151e0:	eor	r1, r2, r7
   151e4:	adc	r6, r1, r9
   151e8:	str	r0, [fp, #-168]	; 0xffffff58
   151ec:	ldr	r0, [sp, #144]	; 0x90
   151f0:	str	r0, [fp, #-208]	; 0xffffff30
   151f4:	ldr	r0, [sp, #148]	; 0x94
   151f8:	str	r0, [fp, #-204]	; 0xffffff34
   151fc:	ldr	r0, [sp, #136]	; 0x88
   15200:	str	r0, [fp, #-244]	; 0xffffff0c
   15204:	eor	r7, r6, r0
   15208:	ldr	r0, [sp, #140]	; 0x8c
   1520c:	str	r0, [fp, #-248]	; 0xffffff08
   15210:	eor	r0, sl, r0
   15214:	lsl	r8, r0, #8
   15218:	lsr	r0, r0, #24
   1521c:	orr	r8, r8, r7, lsr #24
   15220:	orr	r0, r0, r7, lsl #8
   15224:	adds	r7, r2, r3
   15228:	adc	r2, r4, r5
   1522c:	adds	r3, r7, r0
   15230:	ldr	r7, [sp, #188]	; 0xbc
   15234:	ldr	r5, [sp, #48]	; 0x30
   15238:	adc	r2, r2, r8
   1523c:	str	r3, [sp, #76]	; 0x4c
   15240:	str	r2, [sp, #96]	; 0x60
   15244:	eor	r1, r2, r1
   15248:	eor	r2, r3, lr
   1524c:	lsl	r3, r2, #16
   15250:	lsr	r2, r2, #16
   15254:	orr	r3, r3, r1, lsr #16
   15258:	orr	r1, r2, r1, lsl #16
   1525c:	adds	r2, r1, sl
   15260:	str	r1, [sp, #132]	; 0x84
   15264:	str	r3, [sp, #128]	; 0x80
   15268:	adc	r1, r3, r6
   1526c:	str	r2, [sp, #120]	; 0x78
   15270:	eor	r0, r2, r0
   15274:	ldr	r3, [sp, #192]	; 0xc0
   15278:	str	r1, [sp, #124]	; 0x7c
   1527c:	eor	r1, r1, r8
   15280:	lsl	r2, r1, #1
   15284:	orr	r8, r2, r0, lsr #31
   15288:	lsl	r0, r0, #1
   1528c:	orr	sl, r0, r1, lsr #31
   15290:	ldr	r0, [sp, #68]	; 0x44
   15294:	ldr	r1, [sp, #72]	; 0x48
   15298:	str	r8, [sp, #136]	; 0x88
   1529c:	str	sl, [sp, #140]	; 0x8c
   152a0:	eor	r0, r9, r0
   152a4:	eor	r1, ip, r1
   152a8:	lsl	r2, r0, #1
   152ac:	orr	r2, r2, r1, lsr #31
   152b0:	lsl	r1, r1, #1
   152b4:	orr	r0, r1, r0, lsr #31
   152b8:	ldr	r1, [sp, #112]	; 0x70
   152bc:	adds	r1, r1, r3
   152c0:	ldr	r3, [sp, #116]	; 0x74
   152c4:	adc	r3, r3, r7
   152c8:	adds	r6, r1, r0
   152cc:	ldr	r1, [sp, #60]	; 0x3c
   152d0:	ldr	r7, [sp, #12]
   152d4:	adc	r9, r3, r2
   152d8:	ldr	r3, [sp, #8]
   152dc:	adds	r3, r3, r1
   152e0:	ldr	r1, [sp, #64]	; 0x40
   152e4:	str	r3, [sp, #16]
   152e8:	adc	lr, r7, r1
   152ec:	ldr	r1, [sp, #52]	; 0x34
   152f0:	ldr	r7, [sp, #44]	; 0x2c
   152f4:	eor	r7, r7, r1
   152f8:	ldr	r1, [sp, #56]	; 0x38
   152fc:	eor	r4, r5, r1
   15300:	lsr	r5, r4, #16
   15304:	lsl	r4, r4, #16
   15308:	orr	r4, r4, r7, lsr #16
   1530c:	orr	ip, r5, r7, lsl #16
   15310:	eor	r1, r9, r4
   15314:	eor	r7, r6, ip
   15318:	adds	r5, r1, r3
   1531c:	str	r1, [sp, #56]	; 0x38
   15320:	str	r7, [sp, #52]	; 0x34
   15324:	adc	r1, r7, lr
   15328:	eor	r0, r5, r0
   1532c:	str	r5, [sp, #68]	; 0x44
   15330:	lsl	r7, r0, #8
   15334:	eor	r2, r1, r2
   15338:	lsr	r0, r0, #24
   1533c:	str	r1, [sp, #72]	; 0x48
   15340:	ldr	r1, [sp, #276]	; 0x114
   15344:	orr	r5, r0, r2, lsl #8
   15348:	ldr	r0, [sp, #280]	; 0x118
   1534c:	orr	r7, r7, r2, lsr #24
   15350:	str	r5, [sp, #64]	; 0x40
   15354:	str	r7, [sp, #60]	; 0x3c
   15358:	adds	r0, r6, r0
   1535c:	adc	r2, r9, r1
   15360:	adds	r3, r0, r5
   15364:	ldr	r0, [sp, #288]	; 0x120
   15368:	ldr	r1, [sp, #284]	; 0x11c
   1536c:	adc	r5, r2, r7
   15370:	str	r3, [sp, #48]	; 0x30
   15374:	str	r5, [sp, #24]
   15378:	adds	r0, sl, r0
   1537c:	adc	r2, r8, r1
   15380:	adds	r0, r0, r3
   15384:	ldr	r1, [sp, #20]
   15388:	str	r0, [sp, #116]	; 0x74
   1538c:	adc	r0, r2, r5
   15390:	str	r0, [sp, #112]	; 0x70
   15394:	ldr	r0, [sp, #104]	; 0x68
   15398:	adds	r8, ip, r0
   1539c:	ldr	r0, [sp, #108]	; 0x6c
   153a0:	str	r8, [fp, #-200]	; 0xffffff38
   153a4:	adc	r9, r4, r0
   153a8:	ldr	r0, [sp, #84]	; 0x54
   153ac:	str	r9, [fp, #-196]	; 0xffffff3c
   153b0:	eor	r2, r9, r0
   153b4:	ldr	r0, [sp, #92]	; 0x5c
   153b8:	lsl	r5, r2, #1
   153bc:	eor	r3, r8, r0
   153c0:	ldr	r0, [sp, #264]	; 0x108
   153c4:	orr	r5, r5, r3, lsr #31
   153c8:	lsl	r3, r3, #1
   153cc:	orr	r2, r3, r2, lsr #31
   153d0:	str	r5, [fp, #-236]	; 0xffffff14
   153d4:	str	r2, [fp, #-240]	; 0xffffff10
   153d8:	adds	r3, r1, r0
   153dc:	ldr	r0, [sp, #260]	; 0x104
   153e0:	ldr	r1, [sp, #100]	; 0x64
   153e4:	adc	r4, r1, r0
   153e8:	ldr	r0, [sp, #28]
   153ec:	adds	r3, r3, r2
   153f0:	ldr	r1, [sp, #148]	; 0x94
   153f4:	adc	r4, r4, r5
   153f8:	eor	ip, r0, r4
   153fc:	ldr	r0, [sp, #40]	; 0x28
   15400:	eor	sl, r0, r3
   15404:	ldr	r0, [sp, #144]	; 0x90
   15408:	adds	r0, ip, r0
   1540c:	adc	r1, sl, r1
   15410:	eor	r2, r0, r2
   15414:	lsl	r6, r2, #8
   15418:	eor	r5, r1, r5
   1541c:	lsr	r2, r2, #24
   15420:	orr	r6, r6, r5, lsr #24
   15424:	orr	r5, r2, r5, lsl #8
   15428:	ldr	r2, [sp, #224]	; 0xe0
   1542c:	str	r5, [sp, #108]	; 0x6c
   15430:	str	r6, [sp, #104]	; 0x68
   15434:	adds	r2, r3, r2
   15438:	ldr	r3, [sp, #220]	; 0xdc
   1543c:	adc	r3, r4, r3
   15440:	adds	r4, r2, r5
   15444:	adc	r2, r3, r6
   15448:	eor	r3, r4, ip
   1544c:	str	r4, [sp, #84]	; 0x54
   15450:	str	r2, [sp, #100]	; 0x64
   15454:	lsl	r4, r3, #16
   15458:	eor	r2, r2, sl
   1545c:	lsr	r3, r3, #16
   15460:	orr	r7, r4, r2, lsr #16
   15464:	orr	r2, r3, r2, lsl #16
   15468:	ldr	r4, [sp, #292]	; 0x124
   1546c:	adds	r0, r2, r0
   15470:	str	r2, [sp, #92]	; 0x5c
   15474:	ldr	r2, [sp, #16]
   15478:	str	r7, [sp, #40]	; 0x28
   1547c:	str	r0, [sp, #12]
   15480:	ldr	r0, [sp, #32]
   15484:	adc	r5, r7, r1
   15488:	ldr	r1, [sp, #36]	; 0x24
   1548c:	ldr	r7, [sp, #80]	; 0x50
   15490:	eor	r0, lr, r0
   15494:	eor	r3, r2, r1
   15498:	lsl	r2, r0, #1
   1549c:	orr	r1, r2, r3, lsr #31
   154a0:	lsl	r2, r3, #1
   154a4:	ldr	r3, [sp, #244]	; 0xf4
   154a8:	orr	r0, r2, r0, lsr #31
   154ac:	ldr	r2, [sp, #248]	; 0xf8
   154b0:	strd	r0, [r4]
   154b4:	adds	r2, r0, r2
   154b8:	adc	r3, r1, r3
   154bc:	adds	sl, r2, r7
   154c0:	ldr	r2, [sp, #88]	; 0x58
   154c4:	ldr	r7, [sp, #116]	; 0x74
   154c8:	adc	r3, r3, r2
   154cc:	ldr	r2, [sp, #152]	; 0x98
   154d0:	eor	lr, r3, r2
   154d4:	ldr	r2, [sp, #156]	; 0x9c
   154d8:	adds	r6, lr, r8
   154dc:	eor	r0, r6, r0
   154e0:	str	r6, [sp, #28]
   154e4:	eor	ip, sl, r2
   154e8:	adc	r2, ip, r9
   154ec:	str	r2, [sp, #88]	; 0x58
   154f0:	eor	r2, r2, r1
   154f4:	lsl	r1, r0, #8
   154f8:	lsr	r0, r0, #24
   154fc:	orr	r4, r1, r2, lsr #24
   15500:	orr	r2, r0, r2, lsl #8
   15504:	ldr	r0, [sp, #256]	; 0x100
   15508:	ldr	r1, [sp, #252]	; 0xfc
   1550c:	str	r2, [sp, #44]	; 0x2c
   15510:	str	r4, [sp, #36]	; 0x24
   15514:	adds	r0, sl, r0
   15518:	ldr	sl, [sp, #12]
   1551c:	adc	r1, r3, r1
   15520:	adds	r2, r0, r2
   15524:	adc	r0, r1, r4
   15528:	ldr	r4, [sp, #112]	; 0x70
   1552c:	str	r2, [sp, #32]
   15530:	eor	r2, r2, lr
   15534:	str	r0, [sp, #80]	; 0x50
   15538:	lsr	r1, r2, #16
   1553c:	eor	r0, r0, ip
   15540:	lsl	r2, r2, #16
   15544:	orr	r1, r1, r0, lsl #16
   15548:	orr	r6, r2, r0, lsr #16
   1554c:	ldr	r0, [sp, #136]	; 0x88
   15550:	eor	r3, r7, r1
   15554:	str	r1, [sp, #20]
   15558:	eor	r2, r4, r6
   1555c:	adds	lr, r2, sl
   15560:	adc	r8, r3, r5
   15564:	eor	r1, r8, r0
   15568:	ldr	r0, [sp, #140]	; 0x8c
   1556c:	eor	r0, lr, r0
   15570:	lsl	r9, r0, #8
   15574:	lsr	r0, r0, #24
   15578:	orr	r9, r9, r1, lsr #24
   1557c:	orr	r0, r0, r1, lsl #8
   15580:	ldr	r1, [sp, #168]	; 0xa8
   15584:	adds	r1, r7, r1
   15588:	ldr	r7, [sp, #164]	; 0xa4
   1558c:	adc	ip, r4, r7
   15590:	adds	r7, r1, r0
   15594:	ldr	r4, [sp, #208]	; 0xd0
   15598:	adc	r1, ip, r9
   1559c:	eor	r2, r7, r2
   155a0:	str	r7, [sp, #112]	; 0x70
   155a4:	eor	ip, r1, r3
   155a8:	lsl	r3, r2, #16
   155ac:	lsr	r2, r2, #16
   155b0:	str	r1, [sp, #116]	; 0x74
   155b4:	orr	r1, r2, ip, lsl #16
   155b8:	orr	r3, r3, ip, lsr #16
   155bc:	ldr	ip, [sp, #204]	; 0xcc
   155c0:	adds	r2, r1, lr
   155c4:	str	r1, [sp, #156]	; 0x9c
   155c8:	str	r3, [sp, #152]	; 0x98
   155cc:	adc	r1, r3, r8
   155d0:	str	r2, [sp, #136]	; 0x88
   155d4:	eor	r0, r2, r0
   155d8:	str	r1, [sp, #140]	; 0x8c
   155dc:	eor	r1, r1, r9
   155e0:	lsl	r2, r1, #1
   155e4:	orr	r2, r2, r0, lsr #31
   155e8:	lsl	r0, r0, #1
   155ec:	orr	r0, r0, r1, lsr #31
   155f0:	ldr	r1, [sp, #108]	; 0x6c
   155f4:	str	r2, [sp, #144]	; 0x90
   155f8:	str	r0, [sp, #148]	; 0x94
   155fc:	ldr	r0, [sp, #104]	; 0x68
   15600:	eor	r1, sl, r1
   15604:	eor	r0, r5, r0
   15608:	lsl	r2, r0, #1
   1560c:	orr	r8, r2, r1, lsr #31
   15610:	lsl	r1, r1, #1
   15614:	ldr	r2, [sp, #96]	; 0x60
   15618:	orr	lr, r1, r0, lsr #31
   1561c:	ldr	r1, [sp, #76]	; 0x4c
   15620:	ldr	r0, [sp, #28]
   15624:	adds	r3, r1, r4
   15628:	ldr	r1, [sp, #20]
   1562c:	adc	r2, r2, ip
   15630:	adds	sl, r3, lr
   15634:	ldr	r3, [sp, #24]
   15638:	adc	r9, r2, r8
   1563c:	ldr	r2, [sp, #52]	; 0x34
   15640:	adds	r0, r1, r0
   15644:	ldr	r1, [sp, #88]	; 0x58
   15648:	str	r0, [sp, #20]
   1564c:	eor	r7, r3, r2
   15650:	ldr	r2, [sp, #56]	; 0x38
   15654:	ldr	r3, [sp, #48]	; 0x30
   15658:	adc	r1, r6, r1
   1565c:	str	r1, [sp, #16]
   15660:	eor	r5, r3, r2
   15664:	lsr	r6, r5, #16
   15668:	lsl	r5, r5, #16
   1566c:	orr	r6, r6, r7, lsl #16
   15670:	orr	r7, r5, r7, lsr #16
   15674:	eor	r2, r7, r9
   15678:	eor	r3, r6, sl
   1567c:	str	r7, [fp, #-188]	; 0xffffff44
   15680:	str	r6, [fp, #-192]	; 0xffffff40
   15684:	adds	r5, r2, r0
   15688:	str	r2, [sp, #76]	; 0x4c
   1568c:	str	r3, [sp, #56]	; 0x38
   15690:	adc	r2, r3, r1
   15694:	eor	r0, r5, lr
   15698:	str	r5, [sp, #104]	; 0x68
   1569c:	ldr	r1, [sp, #148]	; 0x94
   156a0:	lsl	r5, r0, #8
   156a4:	eor	r3, r2, r8
   156a8:	lsr	r0, r0, #24
   156ac:	str	r2, [sp, #108]	; 0x6c
   156b0:	orr	r2, r0, r3, lsl #8
   156b4:	ldr	r0, [sp, #272]	; 0x110
   156b8:	orr	r5, r5, r3, lsr #24
   156bc:	ldr	r3, [sp, #268]	; 0x10c
   156c0:	str	r2, [sp, #96]	; 0x60
   156c4:	str	r5, [sp, #88]	; 0x58
   156c8:	adds	r0, sl, r0
   156cc:	adc	r3, r9, r3
   156d0:	adds	r0, r0, r2
   156d4:	adc	r2, r3, r5
   156d8:	str	r0, [sp, #52]	; 0x34
   156dc:	adds	r0, r0, r4
   156e0:	ldr	r4, [sp, #40]	; 0x28
   156e4:	str	r2, [sp, #48]	; 0x30
   156e8:	adc	r2, r2, ip
   156ec:	adds	r0, r0, r1
   156f0:	str	r0, [sp, #28]
   156f4:	ldr	r0, [sp, #144]	; 0x90
   156f8:	adc	r0, r2, r0
   156fc:	ldr	r2, [sp, #32]
   15700:	str	r0, [sp, #24]
   15704:	ldr	r0, [sp, #68]	; 0x44
   15708:	adds	r9, r6, r0
   1570c:	ldr	r0, [sp, #72]	; 0x48
   15710:	str	r9, [fp, #-224]	; 0xffffff20
   15714:	adc	r8, r7, r0
   15718:	ldr	r0, [sp, #60]	; 0x3c
   1571c:	str	r8, [fp, #-220]	; 0xffffff24
   15720:	eor	r1, r8, r0
   15724:	ldr	r0, [sp, #64]	; 0x40
   15728:	lsl	r6, r1, #1
   1572c:	eor	r7, r9, r0
   15730:	ldr	r0, [sp, #200]	; 0xc8
   15734:	orr	r6, r6, r7, lsr #31
   15738:	lsl	r7, r7, #1
   1573c:	orr	r1, r7, r1, lsr #31
   15740:	str	r6, [fp, #-252]	; 0xffffff04
   15744:	str	r1, [fp, #-256]	; 0xffffff00
   15748:	adds	r7, r2, r0
   1574c:	ldr	r0, [sp, #196]	; 0xc4
   15750:	ldr	r2, [sp, #80]	; 0x50
   15754:	adc	r5, r2, r0
   15758:	ldr	r0, [sp, #128]	; 0x80
   1575c:	ldr	r2, [sp, #120]	; 0x78
   15760:	adds	sl, r7, r1
   15764:	adc	lr, r5, r6
   15768:	eor	r5, lr, r4
   1576c:	str	r0, [fp, #-180]	; 0xffffff4c
   15770:	ldr	r0, [sp, #132]	; 0x84
   15774:	adds	r7, r5, r2
   15778:	eor	r1, r7, r1
   1577c:	str	r0, [fp, #-184]	; 0xffffff48
   15780:	ldr	r0, [sp, #124]	; 0x7c
   15784:	str	r2, [fp, #-216]	; 0xffffff28
   15788:	lsl	r2, r1, #8
   1578c:	lsr	r1, r1, #24
   15790:	str	r0, [fp, #-212]	; 0xffffff2c
   15794:	str	r4, [fp, #-172]	; 0xffffff54
   15798:	ldr	r4, [sp, #92]	; 0x5c
   1579c:	str	r4, [fp, #-176]	; 0xffffff50
   157a0:	eor	r4, sl, r4
   157a4:	adc	ip, r4, r0
   157a8:	eor	r6, ip, r6
   157ac:	orr	r0, r1, r6, lsl #8
   157b0:	ldr	r1, [sp, #240]	; 0xf0
   157b4:	orr	r3, r2, r6, lsr #24
   157b8:	ldr	r2, [sp, #236]	; 0xec
   157bc:	str	r0, [sp, #72]	; 0x48
   157c0:	str	r3, [sp, #68]	; 0x44
   157c4:	adds	r1, sl, r1
   157c8:	adc	r2, lr, r2
   157cc:	adds	r6, r1, r0
   157d0:	ldr	r0, [sp, #36]	; 0x24
   157d4:	adc	r1, r2, r3
   157d8:	eor	r2, r6, r5
   157dc:	str	r6, [sp, #80]	; 0x50
   157e0:	str	r1, [sp, #92]	; 0x5c
   157e4:	lsl	r5, r2, #16
   157e8:	eor	r1, r1, r4
   157ec:	lsr	r2, r2, #16
   157f0:	orr	r6, r5, r1, lsr #16
   157f4:	orr	r1, r2, r1, lsl #16
   157f8:	ldr	r2, [sp, #20]
   157fc:	adds	lr, r1, r7
   15800:	str	r1, [sp, #120]	; 0x78
   15804:	ldr	r1, [sp, #16]
   15808:	ldr	r7, [sp, #100]	; 0x64
   1580c:	str	r6, [sp, #32]
   15810:	adc	ip, r6, ip
   15814:	str	lr, [sp, #12]
   15818:	str	ip, [sp, #8]
   1581c:	eor	r0, r1, r0
   15820:	ldr	r1, [sp, #44]	; 0x2c
   15824:	eor	r1, r2, r1
   15828:	lsl	r2, r0, #1
   1582c:	orr	r4, r2, r1, lsr #31
   15830:	lsl	r1, r1, #1
   15834:	ldr	r2, [sp, #84]	; 0x54
   15838:	orr	r0, r1, r0, lsr #31
   1583c:	ldr	r1, [sp, #216]	; 0xd8
   15840:	adds	r1, r2, r1
   15844:	ldr	r2, [sp, #212]	; 0xd4
   15848:	adc	r2, r7, r2
   1584c:	adds	r5, r1, r0
   15850:	ldr	r1, [sp, #128]	; 0x80
   15854:	adc	r7, r2, r4
   15858:	ldr	r2, [sp, #132]	; 0x84
   1585c:	eor	sl, r7, r1
   15860:	adds	r6, sl, r9
   15864:	eor	r2, r5, r2
   15868:	adc	r1, r2, r8
   1586c:	eor	r0, r6, r0
   15870:	str	r6, [sp, #60]	; 0x3c
   15874:	eor	r3, r1, r4
   15878:	lsl	r4, r0, #8
   1587c:	lsr	r0, r0, #24
   15880:	str	r1, [sp, #64]	; 0x40
   15884:	orr	r6, r4, r3, lsr #24
   15888:	orr	r3, r0, r3, lsl #8
   1588c:	ldr	r0, [sp, #228]	; 0xe4
   15890:	ldr	r4, [sp, #232]	; 0xe8
   15894:	str	r3, [sp, #132]	; 0x84
   15898:	str	r6, [sp, #40]	; 0x28
   1589c:	adds	r0, r5, r0
   158a0:	ldr	r5, [sp, #24]
   158a4:	adc	r7, r7, r4
   158a8:	adds	r3, r0, r3
   158ac:	adc	r0, r7, r6
   158b0:	eor	r1, r3, sl
   158b4:	str	r3, [sp, #36]	; 0x24
   158b8:	ldr	r3, [sp, #28]
   158bc:	str	r0, [sp, #44]	; 0x2c
   158c0:	eor	r0, r0, r2
   158c4:	lsr	r2, r1, #16
   158c8:	lsl	r1, r1, #16
   158cc:	orr	sl, r2, r0, lsl #16
   158d0:	orr	r6, r1, r0, lsr #16
   158d4:	ldr	r0, [sp, #152]	; 0x98
   158d8:	eor	r4, r5, r6
   158dc:	eor	r2, r3, sl
   158e0:	adds	r8, r4, lr
   158e4:	adc	r7, r2, ip
   158e8:	str	r0, [fp, #-164]	; 0xffffff5c
   158ec:	ldr	r0, [sp, #156]	; 0x9c
   158f0:	str	r0, [fp, #-168]	; 0xffffff58
   158f4:	ldr	r0, [sp, #136]	; 0x88
   158f8:	str	r0, [fp, #-208]	; 0xffffff30
   158fc:	ldr	r0, [sp, #140]	; 0x8c
   15900:	str	r0, [fp, #-204]	; 0xffffff34
   15904:	ldr	r0, [sp, #144]	; 0x90
   15908:	str	r0, [fp, #-244]	; 0xffffff0c
   1590c:	eor	r1, r7, r0
   15910:	ldr	r0, [sp, #148]	; 0x94
   15914:	str	r0, [fp, #-248]	; 0xffffff08
   15918:	eor	r0, r8, r0
   1591c:	lsl	lr, r0, #8
   15920:	lsr	r0, r0, #24
   15924:	orr	lr, lr, r1, lsr #24
   15928:	orr	ip, r0, r1, lsl #8
   1592c:	ldr	r1, [sp, #192]	; 0xc0
   15930:	adds	r1, r3, r1
   15934:	ldr	r3, [sp, #188]	; 0xbc
   15938:	adc	r3, r5, r3
   1593c:	adds	r0, r1, ip
   15940:	ldr	r5, [sp, #52]	; 0x34
   15944:	adc	r1, r3, lr
   15948:	str	r0, [sp, #84]	; 0x54
   1594c:	str	r1, [sp, #100]	; 0x64
   15950:	eor	r1, r1, r2
   15954:	eor	r2, r0, r4
   15958:	lsl	r3, r2, #16
   1595c:	lsr	r2, r2, #16
   15960:	orr	r3, r3, r1, lsr #16
   15964:	orr	r1, r2, r1, lsl #16
   15968:	adds	r2, r1, r8
   1596c:	str	r1, [sp, #148]	; 0x94
   15970:	str	r3, [sp, #144]	; 0x90
   15974:	adc	r1, r3, r7
   15978:	str	r2, [sp, #124]	; 0x7c
   1597c:	eor	r0, r2, ip
   15980:	ldr	r3, [sp, #112]	; 0x70
   15984:	ldr	r7, [sp, #116]	; 0x74
   15988:	str	r1, [sp, #128]	; 0x80
   1598c:	eor	r1, r1, lr
   15990:	lsl	r2, r1, #1
   15994:	orr	r9, r2, r0, lsr #31
   15998:	lsl	r0, r0, #1
   1599c:	ldr	r2, [sp, #12]
   159a0:	orr	r8, r0, r1, lsr #31
   159a4:	ldr	r0, [sp, #68]	; 0x44
   159a8:	ldr	r1, [sp, #8]
   159ac:	str	r9, [sp, #24]
   159b0:	str	r8, [sp, #28]
   159b4:	eor	r0, r1, r0
   159b8:	ldr	r1, [sp, #72]	; 0x48
   159bc:	eor	r1, r2, r1
   159c0:	lsl	r2, r0, #1
   159c4:	orr	r2, r2, r1, lsr #31
   159c8:	lsl	r1, r1, #1
   159cc:	orr	ip, r1, r0, lsr #31
   159d0:	ldr	r1, [sp, #280]	; 0x118
   159d4:	ldr	r0, [sp, #60]	; 0x3c
   159d8:	adds	r1, r3, r1
   159dc:	ldr	r3, [sp, #276]	; 0x114
   159e0:	adc	r3, r7, r3
   159e4:	adds	r1, r1, ip
   159e8:	ldr	r7, [sp, #56]	; 0x38
   159ec:	adc	r3, r3, r2
   159f0:	adds	sl, sl, r0
   159f4:	ldr	r0, [sp, #64]	; 0x40
   159f8:	str	sl, [sp, #20]
   159fc:	adc	r0, r6, r0
   15a00:	ldr	r6, [sp, #48]	; 0x30
   15a04:	str	r0, [sp, #16]
   15a08:	eor	r6, r6, r7
   15a0c:	ldr	r7, [sp, #76]	; 0x4c
   15a10:	eor	r4, r5, r7
   15a14:	lsr	r5, r4, #16
   15a18:	lsl	r4, r4, #16
   15a1c:	orr	lr, r5, r6, lsl #16
   15a20:	orr	r6, r4, r6, lsr #16
   15a24:	eor	r7, r3, r6
   15a28:	eor	r5, r1, lr
   15a2c:	adds	r4, r7, sl
   15a30:	str	r7, [sp, #60]	; 0x3c
   15a34:	str	r5, [sp, #56]	; 0x38
   15a38:	adc	r7, r5, r0
   15a3c:	eor	r0, r4, ip
   15a40:	str	r4, [sp, #72]	; 0x48
   15a44:	lsl	r4, r0, #8
   15a48:	eor	r2, r7, r2
   15a4c:	lsr	r0, r0, #24
   15a50:	str	r7, [sp, #76]	; 0x4c
   15a54:	orr	r7, r4, r2, lsr #24
   15a58:	orr	r2, r0, r2, lsl #8
   15a5c:	ldr	r0, [sp, #228]	; 0xe4
   15a60:	str	r2, [sp, #68]	; 0x44
   15a64:	str	r7, [sp, #64]	; 0x40
   15a68:	adds	r0, r1, r0
   15a6c:	ldr	r1, [sp, #232]	; 0xe8
   15a70:	adc	r1, r3, r1
   15a74:	adds	r2, r0, r2
   15a78:	ldr	r0, [sp, #256]	; 0x100
   15a7c:	adc	r3, r1, r7
   15a80:	ldr	r1, [sp, #252]	; 0xfc
   15a84:	str	r2, [sp, #52]	; 0x34
   15a88:	ldr	r7, [sp, #44]	; 0x2c
   15a8c:	str	r3, [sp, #48]	; 0x30
   15a90:	adds	r0, r8, r0
   15a94:	adc	r1, r9, r1
   15a98:	adds	r0, r0, r2
   15a9c:	str	r0, [sp, #116]	; 0x74
   15aa0:	adc	r0, r1, r3
   15aa4:	str	r0, [sp, #112]	; 0x70
   15aa8:	ldr	r0, [sp, #104]	; 0x68
   15aac:	adds	r4, lr, r0
   15ab0:	ldr	r0, [sp, #108]	; 0x6c
   15ab4:	str	r4, [fp, #-200]	; 0xffffff38
   15ab8:	adc	r5, r6, r0
   15abc:	ldr	r0, [sp, #88]	; 0x58
   15ac0:	str	r5, [fp, #-196]	; 0xffffff3c
   15ac4:	eor	r1, r5, r0
   15ac8:	ldr	r0, [sp, #96]	; 0x60
   15acc:	lsl	r3, r1, #1
   15ad0:	eor	r2, r4, r0
   15ad4:	ldr	r0, [sp, #288]	; 0x120
   15ad8:	orr	r3, r3, r2, lsr #31
   15adc:	lsl	r2, r2, #1
   15ae0:	orr	r1, r2, r1, lsr #31
   15ae4:	ldr	r2, [sp, #36]	; 0x24
   15ae8:	str	r3, [fp, #-236]	; 0xffffff14
   15aec:	str	r1, [fp, #-240]	; 0xffffff10
   15af0:	adds	r2, r2, r0
   15af4:	ldr	r0, [sp, #284]	; 0x11c
   15af8:	adc	r6, r7, r0
   15afc:	ldr	r0, [sp, #32]
   15b00:	ldr	r7, [sp, #136]	; 0x88
   15b04:	adds	r2, r2, r1
   15b08:	adc	r6, r6, r3
   15b0c:	eor	sl, r0, r6
   15b10:	ldr	r0, [sp, #120]	; 0x78
   15b14:	adds	ip, sl, r7
   15b18:	ldr	r7, [sp, #140]	; 0x8c
   15b1c:	eor	r1, ip, r1
   15b20:	eor	r8, r0, r2
   15b24:	adc	lr, r8, r7
   15b28:	lsl	r7, r1, #8
   15b2c:	lsr	r1, r1, #24
   15b30:	eor	r3, lr, r3
   15b34:	orr	r0, r1, r3, lsl #8
   15b38:	ldr	r1, [sp, #216]	; 0xd8
   15b3c:	orr	r7, r7, r3, lsr #24
   15b40:	str	r0, [sp, #108]	; 0x6c
   15b44:	str	r7, [sp, #104]	; 0x68
   15b48:	adds	r1, r2, r1
   15b4c:	ldr	r2, [sp, #212]	; 0xd4
   15b50:	adc	r2, r6, r2
   15b54:	adds	r3, r1, r0
   15b58:	adc	r1, r2, r7
   15b5c:	str	r3, [sp, #88]	; 0x58
   15b60:	str	r1, [sp, #120]	; 0x78
   15b64:	eor	r0, r1, r8
   15b68:	eor	r1, r3, sl
   15b6c:	ldr	r3, [sp, #156]	; 0x9c
   15b70:	lsl	r2, r1, #16
   15b74:	lsr	r1, r1, #16
   15b78:	orr	r2, r2, r0, lsr #16
   15b7c:	orr	r0, r1, r0, lsl #16
   15b80:	ldr	r1, [sp, #16]
   15b84:	adds	sl, r0, ip
   15b88:	str	r0, [sp, #96]	; 0x60
   15b8c:	ldr	r0, [sp, #40]	; 0x28
   15b90:	str	r2, [sp, #44]	; 0x2c
   15b94:	adc	lr, r2, lr
   15b98:	ldr	r2, [sp, #20]
   15b9c:	str	sl, [sp, #8]
   15ba0:	eor	r0, r1, r0
   15ba4:	ldr	r1, [sp, #132]	; 0x84
   15ba8:	lsl	r7, r0, #1
   15bac:	eor	r1, r2, r1
   15bb0:	ldr	r2, [sp, #80]	; 0x50
   15bb4:	orr	r9, r7, r1, lsr #31
   15bb8:	lsl	r1, r1, #1
   15bbc:	orr	r8, r1, r0, lsr #31
   15bc0:	ldr	r0, [sp, #272]	; 0x110
   15bc4:	ldr	r1, [sp, #268]	; 0x10c
   15bc8:	adds	r0, r8, r0
   15bcc:	adc	r1, r9, r1
   15bd0:	adds	r0, r0, r2
   15bd4:	ldr	r2, [sp, #92]	; 0x5c
   15bd8:	eor	ip, r0, r3
   15bdc:	adc	r1, r1, r2
   15be0:	ldr	r2, [sp, #152]	; 0x98
   15be4:	eor	r2, r1, r2
   15be8:	adds	r7, r2, r4
   15bec:	adc	r3, ip, r5
   15bf0:	eor	r5, r7, r8
   15bf4:	str	r7, [sp, #16]
   15bf8:	str	r3, [sp, #20]
   15bfc:	eor	r4, r3, r9
   15c00:	ldr	r3, [sp, #292]	; 0x124
   15c04:	strd	r8, [r3]
   15c08:	lsl	r3, r5, #8
   15c0c:	orr	r7, r3, r4, lsr #24
   15c10:	lsr	r3, r5, #24
   15c14:	orr	r6, r3, r4, lsl #8
   15c18:	ldr	r3, [sp, #200]	; 0xc8
   15c1c:	str	r7, [sp, #40]	; 0x28
   15c20:	str	r6, [sp, #92]	; 0x5c
   15c24:	adds	r0, r0, r3
   15c28:	ldr	r3, [sp, #196]	; 0xc4
   15c2c:	adc	r1, r1, r3
   15c30:	adds	r3, r0, r6
   15c34:	ldr	r6, [sp, #112]	; 0x70
   15c38:	adc	r0, r1, r7
   15c3c:	eor	r2, r3, r2
   15c40:	ldr	r7, [sp, #116]	; 0x74
   15c44:	str	r3, [sp, #36]	; 0x24
   15c48:	str	r0, [sp, #80]	; 0x50
   15c4c:	lsr	r1, r2, #16
   15c50:	eor	r0, r0, ip
   15c54:	lsl	r2, r2, #16
   15c58:	orr	r1, r1, r0, lsl #16
   15c5c:	orr	r9, r2, r0, lsr #16
   15c60:	ldr	r0, [sp, #24]
   15c64:	eor	r2, r6, r9
   15c68:	str	r1, [sp, #12]
   15c6c:	eor	r3, r7, r1
   15c70:	adds	r4, r2, sl
   15c74:	adc	r5, r3, lr
   15c78:	eor	r1, r5, r0
   15c7c:	ldr	r0, [sp, #28]
   15c80:	eor	r0, r4, r0
   15c84:	lsl	r8, r0, #8
   15c88:	lsr	r0, r0, #24
   15c8c:	orr	r8, r8, r1, lsr #24
   15c90:	orr	r0, r0, r1, lsl #8
   15c94:	ldr	r1, [sp, #176]	; 0xb0
   15c98:	adds	r1, r7, r1
   15c9c:	ldr	r7, [sp, #172]	; 0xac
   15ca0:	adc	ip, r6, r7
   15ca4:	adds	r6, r1, r0
   15ca8:	ldr	r7, [sp, #100]	; 0x64
   15cac:	adc	r1, ip, r8
   15cb0:	eor	r2, r6, r2
   15cb4:	str	r6, [sp, #112]	; 0x70
   15cb8:	str	r1, [sp, #116]	; 0x74
   15cbc:	eor	r1, r1, r3
   15cc0:	lsl	r3, r2, #16
   15cc4:	lsr	r2, r2, #16
   15cc8:	orr	r3, r3, r1, lsr #16
   15ccc:	orr	r1, r2, r1, lsl #16
   15cd0:	adds	r2, r1, r4
   15cd4:	str	r1, [sp, #156]	; 0x9c
   15cd8:	str	r3, [sp, #152]	; 0x98
   15cdc:	adc	r1, r3, r5
   15ce0:	str	r2, [sp, #136]	; 0x88
   15ce4:	eor	r0, r2, r0
   15ce8:	str	r1, [sp, #140]	; 0x8c
   15cec:	eor	r1, r1, r8
   15cf0:	lsl	r2, r1, #1
   15cf4:	orr	r2, r2, r0, lsr #31
   15cf8:	lsl	r0, r0, #1
   15cfc:	orr	sl, r0, r1, lsr #31
   15d00:	ldr	r0, [sp, #104]	; 0x68
   15d04:	str	r2, [sp, #132]	; 0x84
   15d08:	ldr	r1, [sp, #108]	; 0x6c
   15d0c:	ldr	r2, [sp, #8]
   15d10:	str	sl, [sp, #32]
   15d14:	eor	r0, lr, r0
   15d18:	eor	r1, r2, r1
   15d1c:	lsl	r2, r0, #1
   15d20:	orr	lr, r2, r1, lsr #31
   15d24:	lsl	r1, r1, #1
   15d28:	ldr	r2, [sp, #84]	; 0x54
   15d2c:	orr	r0, r1, r0, lsr #31
   15d30:	ldr	r1, [sp, #248]	; 0xf8
   15d34:	adds	r1, r2, r1
   15d38:	ldr	r2, [sp, #244]	; 0xf4
   15d3c:	adc	r2, r7, r2
   15d40:	adds	ip, r1, r0
   15d44:	ldr	r1, [sp, #16]
   15d48:	adc	r8, r2, lr
   15d4c:	ldr	r2, [sp, #12]
   15d50:	adds	r5, r2, r1
   15d54:	ldr	r1, [sp, #20]
   15d58:	ldr	r2, [sp, #48]	; 0x30
   15d5c:	str	r5, [sp, #28]
   15d60:	adc	r3, r9, r1
   15d64:	ldr	r1, [sp, #56]	; 0x38
   15d68:	ldr	r9, [sp, #168]	; 0xa8
   15d6c:	str	r3, [sp, #16]
   15d70:	eor	r6, r2, r1
   15d74:	ldr	r1, [sp, #60]	; 0x3c
   15d78:	ldr	r2, [sp, #52]	; 0x34
   15d7c:	eor	r4, r2, r1
   15d80:	lsr	r2, r4, #16
   15d84:	lsl	r4, r4, #16
   15d88:	orr	r4, r4, r6, lsr #16
   15d8c:	orr	r2, r2, r6, lsl #16
   15d90:	eor	r7, r4, r8
   15d94:	eor	r1, r2, ip
   15d98:	str	r2, [fp, #-192]	; 0xffffff40
   15d9c:	str	r4, [fp, #-188]	; 0xffffff44
   15da0:	str	r7, [sp, #60]	; 0x3c
   15da4:	adds	r7, r7, r5
   15da8:	str	r1, [sp, #56]	; 0x38
   15dac:	adc	r6, r1, r3
   15db0:	eor	r0, r7, r0
   15db4:	str	r7, [sp, #104]	; 0x68
   15db8:	ldr	r1, [sp, #220]	; 0xdc
   15dbc:	str	r6, [sp, #108]	; 0x6c
   15dc0:	eor	r3, r6, lr
   15dc4:	lsl	r6, r0, #8
   15dc8:	lsr	r0, r0, #24
   15dcc:	orr	r7, r6, r3, lsr #24
   15dd0:	orr	r3, r0, r3, lsl #8
   15dd4:	ldr	r0, [sp, #224]	; 0xe0
   15dd8:	str	r3, [sp, #100]	; 0x64
   15ddc:	str	r7, [sp, #84]	; 0x54
   15de0:	adds	r0, ip, r0
   15de4:	adc	r1, r8, r1
   15de8:	ldr	r8, [sp, #164]	; 0xa4
   15dec:	adds	r0, r0, r3
   15df0:	adc	r1, r1, r7
   15df4:	str	r0, [sp, #52]	; 0x34
   15df8:	adds	r0, r0, r9
   15dfc:	ldr	r7, [sp, #80]	; 0x50
   15e00:	str	r1, [sp, #48]	; 0x30
   15e04:	adc	r1, r1, r8
   15e08:	adds	r0, r0, sl
   15e0c:	str	r0, [sp, #24]
   15e10:	ldr	r0, [sp, #132]	; 0x84
   15e14:	adc	r0, r1, r0
   15e18:	str	r0, [sp, #20]
   15e1c:	ldr	r0, [sp, #72]	; 0x48
   15e20:	adds	r5, r2, r0
   15e24:	ldr	r0, [sp, #76]	; 0x4c
   15e28:	str	r5, [fp, #-224]	; 0xffffff20
   15e2c:	str	r5, [sp, #12]
   15e30:	adc	r6, r4, r0
   15e34:	ldr	r0, [sp, #64]	; 0x40
   15e38:	str	r6, [fp, #-220]	; 0xffffff24
   15e3c:	eor	r1, r6, r0
   15e40:	ldr	r0, [sp, #68]	; 0x44
   15e44:	lsl	r3, r1, #1
   15e48:	eor	r2, r5, r0
   15e4c:	ldr	r0, [sp, #184]	; 0xb8
   15e50:	ldr	r5, [sp, #128]	; 0x80
   15e54:	orr	r3, r3, r2, lsr #31
   15e58:	lsl	r2, r2, #1
   15e5c:	orr	r1, r2, r1, lsr #31
   15e60:	ldr	r2, [sp, #36]	; 0x24
   15e64:	str	r3, [fp, #-252]	; 0xffffff04
   15e68:	str	r1, [fp, #-256]	; 0xffffff00
   15e6c:	adds	r2, r2, r0
   15e70:	ldr	r0, [sp, #180]	; 0xb4
   15e74:	adc	r4, r7, r0
   15e78:	ldr	r0, [sp, #144]	; 0x90
   15e7c:	adds	sl, r2, r1
   15e80:	ldr	r2, [sp, #44]	; 0x2c
   15e84:	adc	r4, r4, r3
   15e88:	str	r0, [fp, #-180]	; 0xffffff4c
   15e8c:	ldr	r0, [sp, #148]	; 0x94
   15e90:	eor	r7, r4, r2
   15e94:	str	r0, [fp, #-184]	; 0xffffff48
   15e98:	ldr	r0, [sp, #124]	; 0x7c
   15e9c:	str	r5, [fp, #-212]	; 0xffffff2c
   15ea0:	str	r0, [fp, #-216]	; 0xffffff28
   15ea4:	str	r2, [fp, #-172]	; 0xffffff54
   15ea8:	ldr	r2, [sp, #96]	; 0x60
   15eac:	adds	lr, r7, r0
   15eb0:	eor	r1, lr, r1
   15eb4:	str	r2, [fp, #-176]	; 0xffffff50
   15eb8:	eor	r2, sl, r2
   15ebc:	adc	ip, r2, r5
   15ec0:	lsl	r5, r1, #8
   15ec4:	lsr	r1, r1, #24
   15ec8:	eor	r3, ip, r3
   15ecc:	orr	r0, r1, r3, lsl #8
   15ed0:	ldr	r1, [sp, #264]	; 0x108
   15ed4:	orr	r5, r5, r3, lsr #24
   15ed8:	ldr	r3, [sp, #260]	; 0x104
   15edc:	str	r0, [sp, #76]	; 0x4c
   15ee0:	str	r5, [sp, #72]	; 0x48
   15ee4:	adds	r1, sl, r1
   15ee8:	adc	r3, r4, r3
   15eec:	adds	r4, r1, r0
   15ef0:	adc	r1, r3, r5
   15ef4:	str	r4, [sp, #80]	; 0x50
   15ef8:	str	r1, [sp, #96]	; 0x60
   15efc:	eor	r1, r1, r2
   15f00:	eor	r2, r4, r7
   15f04:	lsl	r3, r2, #16
   15f08:	lsr	r2, r2, #16
   15f0c:	orr	r3, r3, r1, lsr #16
   15f10:	orr	r1, r2, r1, lsl #16
   15f14:	ldr	r2, [sp, #28]
   15f18:	adds	r0, r1, lr
   15f1c:	str	r1, [sp, #44]	; 0x2c
   15f20:	ldr	r1, [sp, #16]
   15f24:	str	r3, [sp, #36]	; 0x24
   15f28:	str	r0, [sp, #8]
   15f2c:	ldr	r0, [sp, #40]	; 0x28
   15f30:	adc	ip, r3, ip
   15f34:	ldr	r3, [sp, #12]
   15f38:	str	ip, [sp, #4]
   15f3c:	eor	r0, r1, r0
   15f40:	ldr	r1, [sp, #92]	; 0x5c
   15f44:	lsl	r7, r0, #1
   15f48:	eor	r2, r2, r1
   15f4c:	ldr	r1, [sp, #120]	; 0x78
   15f50:	orr	r7, r7, r2, lsr #31
   15f54:	lsl	r2, r2, #1
   15f58:	orr	r4, r2, r0, lsr #31
   15f5c:	ldr	r0, [sp, #88]	; 0x58
   15f60:	adds	r0, r0, r9
   15f64:	adc	r2, r1, r8
   15f68:	adds	r1, r0, r4
   15f6c:	adc	r0, r2, r7
   15f70:	ldr	r2, [sp, #144]	; 0x90
   15f74:	eor	r8, r0, r2
   15f78:	ldr	r2, [sp, #148]	; 0x94
   15f7c:	adds	r3, r8, r3
   15f80:	eor	r4, r3, r4
   15f84:	str	r3, [sp, #64]	; 0x40
   15f88:	ldr	r3, [sp, #240]	; 0xf0
   15f8c:	lsl	r5, r4, #8
   15f90:	lsr	r4, r4, #24
   15f94:	eor	r2, r1, r2
   15f98:	adc	r6, r2, r6
   15f9c:	adds	r1, r1, r3
   15fa0:	ldr	r3, [sp, #236]	; 0xec
   15fa4:	eor	r7, r6, r7
   15fa8:	str	r6, [sp, #68]	; 0x44
   15fac:	ldr	r6, [sp, #8]
   15fb0:	orr	r5, r5, r7, lsr #24
   15fb4:	orr	r7, r4, r7, lsl #8
   15fb8:	str	r5, [sp, #144]	; 0x90
   15fbc:	str	r7, [sp, #148]	; 0x94
   15fc0:	adc	r0, r0, r3
   15fc4:	adds	r1, r1, r7
   15fc8:	ldr	r3, [sp, #24]
   15fcc:	adc	r0, r0, r5
   15fd0:	str	r1, [sp, #28]
   15fd4:	str	r0, [sp, #40]	; 0x28
   15fd8:	eor	r0, r0, r2
   15fdc:	eor	r2, r1, r8
   15fe0:	lsr	r5, r2, #16
   15fe4:	lsl	r2, r2, #16
   15fe8:	orr	sl, r5, r0, lsl #16
   15fec:	orr	r9, r2, r0, lsr #16
   15ff0:	ldr	r0, [sp, #152]	; 0x98
   15ff4:	ldr	r5, [sp, #20]
   15ff8:	eor	r2, r3, sl
   15ffc:	str	r0, [fp, #-164]	; 0xffffff5c
   16000:	ldr	r0, [sp, #156]	; 0x9c
   16004:	eor	lr, r5, r9
   16008:	adds	r8, lr, r6
   1600c:	adc	r7, r2, ip
   16010:	str	r0, [fp, #-168]	; 0xffffff58
   16014:	ldr	r0, [sp, #136]	; 0x88
   16018:	str	r0, [fp, #-208]	; 0xffffff30
   1601c:	ldr	r0, [sp, #140]	; 0x8c
   16020:	str	r0, [fp, #-204]	; 0xffffff34
   16024:	ldr	r0, [sp, #132]	; 0x84
   16028:	str	r0, [fp, #-244]	; 0xffffff0c
   1602c:	eor	r1, r7, r0
   16030:	ldr	r0, [sp, #32]
   16034:	str	r0, [fp, #-248]	; 0xffffff08
   16038:	eor	r0, r8, r0
   1603c:	lsl	r4, r0, #8
   16040:	lsr	r0, r0, #24
   16044:	orr	r4, r4, r1, lsr #24
   16048:	orr	ip, r0, r1, lsl #8
   1604c:	ldr	r1, [sp, #272]	; 0x110
   16050:	adds	r1, r3, r1
   16054:	ldr	r3, [sp, #268]	; 0x10c
   16058:	adc	r3, r5, r3
   1605c:	adds	r0, r1, ip
   16060:	ldr	r5, [sp, #52]	; 0x34
   16064:	adc	r1, r3, r4
   16068:	str	r0, [sp, #88]	; 0x58
   1606c:	str	r1, [sp, #92]	; 0x5c
   16070:	eor	r1, r1, r2
   16074:	eor	r2, r0, lr
   16078:	lsl	r3, r2, #16
   1607c:	lsr	r2, r2, #16
   16080:	orr	r3, r3, r1, lsr #16
   16084:	orr	r1, r2, r1, lsl #16
   16088:	adds	r2, r1, r8
   1608c:	str	r1, [sp, #132]	; 0x84
   16090:	str	r3, [sp, #120]	; 0x78
   16094:	adc	r1, r3, r7
   16098:	str	r2, [sp, #124]	; 0x7c
   1609c:	eor	r0, r2, ip
   160a0:	ldr	r3, [sp, #112]	; 0x70
   160a4:	ldr	r7, [sp, #116]	; 0x74
   160a8:	str	r1, [sp, #128]	; 0x80
   160ac:	eor	r1, r1, r4
   160b0:	lsl	r2, r1, #1
   160b4:	orr	r8, r2, r0, lsr #31
   160b8:	lsl	r0, r0, #1
   160bc:	orr	lr, r0, r1, lsr #31
   160c0:	ldr	r0, [sp, #72]	; 0x48
   160c4:	ldr	r1, [sp, #4]
   160c8:	str	r8, [sp, #24]
   160cc:	str	lr, [sp, #32]
   160d0:	eor	r0, r1, r0
   160d4:	ldr	r1, [sp, #76]	; 0x4c
   160d8:	lsl	r2, r0, #1
   160dc:	eor	r1, r6, r1
   160e0:	ldr	r6, [sp, #48]	; 0x30
   160e4:	orr	r2, r2, r1, lsr #31
   160e8:	lsl	r1, r1, #1
   160ec:	orr	r1, r1, r0, lsr #31
   160f0:	ldr	r0, [sp, #288]	; 0x120
   160f4:	adds	r0, r3, r0
   160f8:	ldr	r3, [sp, #284]	; 0x11c
   160fc:	adc	r3, r7, r3
   16100:	adds	r7, r0, r1
   16104:	ldr	r0, [sp, #64]	; 0x40
   16108:	adc	r3, r3, r2
   1610c:	adds	sl, sl, r0
   16110:	ldr	r0, [sp, #68]	; 0x44
   16114:	str	sl, [sp, #20]
   16118:	adc	r9, r9, r0
   1611c:	ldr	r0, [sp, #56]	; 0x38
   16120:	eor	r6, r6, r0
   16124:	ldr	r0, [sp, #60]	; 0x3c
   16128:	eor	r5, r5, r0
   1612c:	lsr	r4, r5, #16
   16130:	lsl	r5, r5, #16
   16134:	orr	ip, r4, r6, lsl #16
   16138:	orr	r6, r5, r6, lsr #16
   1613c:	eor	r0, r3, r6
   16140:	eor	r4, r7, ip
   16144:	adds	r5, r0, sl
   16148:	str	r0, [sp, #112]	; 0x70
   1614c:	str	r4, [sp, #60]	; 0x3c
   16150:	adc	r0, r4, r9
   16154:	eor	r1, r5, r1
   16158:	str	r5, [sp, #72]	; 0x48
   1615c:	str	r0, [sp, #76]	; 0x4c
   16160:	eor	r2, r0, r2
   16164:	ldr	r0, [sp, #224]	; 0xe0
   16168:	lsl	r5, r1, #8
   1616c:	lsr	r1, r1, #24
   16170:	orr	r4, r1, r2, lsl #8
   16174:	orr	r5, r5, r2, lsr #24
   16178:	str	r4, [sp, #68]	; 0x44
   1617c:	str	r5, [sp, #64]	; 0x40
   16180:	adds	r1, r7, r0
   16184:	ldr	r0, [sp, #220]	; 0xdc
   16188:	adc	r2, r3, r0
   1618c:	ldr	r0, [sp, #216]	; 0xd8
   16190:	adds	r3, r1, r4
   16194:	adc	r4, r2, r5
   16198:	str	r3, [sp, #56]	; 0x38
   1619c:	str	r4, [sp, #52]	; 0x34
   161a0:	adds	r1, lr, r0
   161a4:	ldr	r0, [sp, #212]	; 0xd4
   161a8:	adc	r2, r8, r0
   161ac:	adds	r0, r1, r3
   161b0:	ldr	r3, [sp, #40]	; 0x28
   161b4:	str	r0, [sp, #116]	; 0x74
   161b8:	adc	r0, r2, r4
   161bc:	str	r0, [sp, #48]	; 0x30
   161c0:	ldr	r0, [sp, #104]	; 0x68
   161c4:	adds	r5, ip, r0
   161c8:	ldr	r0, [sp, #108]	; 0x6c
   161cc:	str	r5, [fp, #-200]	; 0xffffff38
   161d0:	adc	r7, r6, r0
   161d4:	ldr	r0, [sp, #84]	; 0x54
   161d8:	str	r7, [fp, #-196]	; 0xffffff3c
   161dc:	eor	r1, r7, r0
   161e0:	ldr	r0, [sp, #100]	; 0x64
   161e4:	lsl	r6, r1, #1
   161e8:	eor	r2, r5, r0
   161ec:	ldr	r0, [sp, #228]	; 0xe4
   161f0:	orr	r6, r6, r2, lsr #31
   161f4:	lsl	r2, r2, #1
   161f8:	orr	r1, r2, r1, lsr #31
   161fc:	ldr	r2, [sp, #28]
   16200:	str	r6, [fp, #-236]	; 0xffffff14
   16204:	str	r1, [fp, #-240]	; 0xffffff10
   16208:	adds	r2, r2, r0
   1620c:	ldr	r0, [sp, #232]	; 0xe8
   16210:	adc	r4, r3, r0
   16214:	ldr	r0, [sp, #36]	; 0x24
   16218:	adds	r2, r2, r1
   1621c:	ldr	r3, [sp, #136]	; 0x88
   16220:	adc	ip, r4, r6
   16224:	ldr	r4, [sp, #140]	; 0x8c
   16228:	eor	sl, r0, ip
   1622c:	ldr	r0, [sp, #44]	; 0x2c
   16230:	adds	r8, sl, r3
   16234:	eor	r1, r8, r1
   16238:	eor	r0, r0, r2
   1623c:	adc	lr, r0, r4
   16240:	eor	r4, lr, r6
   16244:	lsl	r6, r1, #8
   16248:	lsr	r1, r1, #24
   1624c:	orr	r3, r6, r4, lsr #24
   16250:	orr	r4, r1, r4, lsl #8
   16254:	ldr	r1, [sp, #248]	; 0xf8
   16258:	str	r3, [sp, #104]	; 0x68
   1625c:	str	r4, [sp, #108]	; 0x6c
   16260:	adds	r1, r2, r1
   16264:	ldr	r2, [sp, #244]	; 0xf4
   16268:	adc	r2, ip, r2
   1626c:	adds	r6, r1, r4
   16270:	adc	r1, r2, r3
   16274:	str	r6, [sp, #100]	; 0x64
   16278:	str	r1, [sp, #140]	; 0x8c
   1627c:	eor	r0, r1, r0
   16280:	eor	r1, r6, sl
   16284:	ldr	r6, [sp, #80]	; 0x50
   16288:	lsl	r2, r1, #16
   1628c:	lsr	r1, r1, #16
   16290:	orr	r2, r2, r0, lsr #16
   16294:	orr	r0, r1, r0, lsl #16
   16298:	ldr	r1, [sp, #148]	; 0x94
   1629c:	adds	ip, r0, r8
   162a0:	str	r0, [sp, #84]	; 0x54
   162a4:	str	r2, [sp, #44]	; 0x2c
   162a8:	adc	r0, r2, lr
   162ac:	ldr	r2, [sp, #20]
   162b0:	str	ip, [sp, #8]
   162b4:	str	r0, [sp, #12]
   162b8:	ldr	r0, [sp, #144]	; 0x90
   162bc:	eor	r1, r2, r1
   162c0:	eor	r0, r9, r0
   162c4:	lsl	r2, r0, #1
   162c8:	orr	r3, r2, r1, lsr #31
   162cc:	lsl	r1, r1, #1
   162d0:	ldr	r2, [sp, #236]	; 0xec
   162d4:	orr	r0, r1, r0, lsr #31
   162d8:	ldr	r1, [sp, #240]	; 0xf0
   162dc:	adds	r1, r0, r1
   162e0:	adc	r2, r3, r2
   162e4:	adds	r1, r1, r6
   162e8:	ldr	r6, [sp, #96]	; 0x60
   162ec:	adc	r2, r2, r6
   162f0:	ldr	r6, [sp, #152]	; 0x98
   162f4:	eor	lr, r2, r6
   162f8:	ldr	r6, [sp, #156]	; 0x9c
   162fc:	adds	r4, lr, r5
   16300:	str	r4, [sp, #28]
   16304:	eor	r8, r1, r6
   16308:	adc	r5, r8, r7
   1630c:	str	r5, [sp, #16]
   16310:	eor	r7, r5, r3
   16314:	ldr	r5, [sp, #292]	; 0x124
   16318:	stm	r5, {r0, r3}
   1631c:	eor	r0, r4, r0
   16320:	lsl	r3, r0, #8
   16324:	lsr	r0, r0, #24
   16328:	ldr	r6, [sp, #116]	; 0x74
   1632c:	ldr	r4, [sp, #12]
   16330:	orr	r3, r3, r7, lsr #24
   16334:	orr	r7, r0, r7, lsl #8
   16338:	ldr	r0, [sp, #184]	; 0xb8
   1633c:	str	r3, [sp, #40]	; 0x28
   16340:	str	r7, [sp, #80]	; 0x50
   16344:	adds	r0, r1, r0
   16348:	ldr	r1, [sp, #180]	; 0xb4
   1634c:	adc	r1, r2, r1
   16350:	adds	r2, r0, r7
   16354:	adc	r0, r1, r3
   16358:	ldr	r3, [sp, #48]	; 0x30
   1635c:	str	r2, [sp, #36]	; 0x24
   16360:	eor	r2, r2, lr
   16364:	str	r0, [sp, #96]	; 0x60
   16368:	lsr	r1, r2, #16
   1636c:	eor	r0, r0, r8
   16370:	lsl	r2, r2, #16
   16374:	orr	r5, r2, r0, lsr #16
   16378:	orr	sl, r1, r0, lsl #16
   1637c:	ldr	r0, [sp, #24]
   16380:	eor	r2, r6, sl
   16384:	eor	r9, r3, r5
   16388:	adds	r8, r9, ip
   1638c:	adc	lr, r2, r4
   16390:	eor	r1, lr, r0
   16394:	ldr	r0, [sp, #32]
   16398:	eor	r0, r8, r0
   1639c:	lsl	r7, r0, #8
   163a0:	lsr	r0, r0, #24
   163a4:	orr	r7, r7, r1, lsr #24
   163a8:	orr	r0, r0, r1, lsl #8
   163ac:	ldr	r1, [sp, #264]	; 0x108
   163b0:	adds	r1, r6, r1
   163b4:	ldr	r6, [sp, #260]	; 0x104
   163b8:	adc	ip, r3, r6
   163bc:	adds	r6, r1, r0
   163c0:	adc	r1, ip, r7
   163c4:	str	r6, [sp, #116]	; 0x74
   163c8:	eor	ip, r1, r2
   163cc:	eor	r2, r6, r9
   163d0:	str	r1, [sp, #136]	; 0x88
   163d4:	lsl	r3, r2, #16
   163d8:	lsr	r2, r2, #16
   163dc:	orr	r1, r2, ip, lsl #16
   163e0:	orr	r3, r3, ip, lsr #16
   163e4:	adds	r2, r1, r8
   163e8:	str	r1, [sp, #156]	; 0x9c
   163ec:	str	r3, [sp, #152]	; 0x98
   163f0:	adc	r1, r3, lr
   163f4:	str	r2, [sp, #144]	; 0x90
   163f8:	eor	r0, r2, r0
   163fc:	ldr	r3, [sp, #88]	; 0x58
   16400:	str	r1, [sp, #148]	; 0x94
   16404:	eor	r1, r1, r7
   16408:	ldr	r7, [sp, #92]	; 0x5c
   1640c:	lsl	r2, r1, #1
   16410:	orr	r9, r2, r0, lsr #31
   16414:	lsl	r0, r0, #1
   16418:	ldr	r2, [sp, #8]
   1641c:	orr	r8, r0, r1, lsr #31
   16420:	ldr	r0, [sp, #104]	; 0x68
   16424:	ldr	r1, [sp, #108]	; 0x6c
   16428:	str	r9, [sp, #20]
   1642c:	str	r8, [sp, #32]
   16430:	eor	r0, r4, r0
   16434:	eor	r1, r2, r1
   16438:	lsl	r2, r0, #1
   1643c:	orr	r2, r2, r1, lsr #31
   16440:	lsl	r1, r1, #1
   16444:	orr	r0, r1, r0, lsr #31
   16448:	ldr	r1, [sp, #192]	; 0xc0
   1644c:	adds	r1, r3, r1
   16450:	ldr	r3, [sp, #188]	; 0xbc
   16454:	adc	r3, r7, r3
   16458:	adds	lr, r1, r0
   1645c:	ldr	r1, [sp, #28]
   16460:	adc	ip, r3, r2
   16464:	ldr	r3, [sp, #52]	; 0x34
   16468:	adds	r7, sl, r1
   1646c:	ldr	r1, [sp, #16]
   16470:	str	r7, [sp, #28]
   16474:	adc	sl, r5, r1
   16478:	ldr	r1, [sp, #60]	; 0x3c
   1647c:	str	sl, [sp, #16]
   16480:	eor	r6, r3, r1
   16484:	ldr	r1, [sp, #112]	; 0x70
   16488:	ldr	r3, [sp, #56]	; 0x38
   1648c:	eor	r4, r3, r1
   16490:	lsr	r5, r4, #16
   16494:	lsl	r4, r4, #16
   16498:	orr	r5, r5, r6, lsl #16
   1649c:	orr	r6, r4, r6, lsr #16
   164a0:	eor	r1, r6, ip
   164a4:	eor	r3, r5, lr
   164a8:	str	r5, [fp, #-192]	; 0xffffff40
   164ac:	str	r6, [fp, #-188]	; 0xffffff44
   164b0:	str	r1, [sp, #60]	; 0x3c
   164b4:	adds	r1, r1, r7
   164b8:	str	r3, [sp, #56]	; 0x38
   164bc:	adc	r4, r3, sl
   164c0:	eor	r0, r1, r0
   164c4:	str	r1, [sp, #108]	; 0x6c
   164c8:	ldr	r1, [sp, #204]	; 0xcc
   164cc:	str	r4, [sp, #112]	; 0x70
   164d0:	eor	r2, r4, r2
   164d4:	lsl	r4, r0, #8
   164d8:	lsr	r0, r0, #24
   164dc:	orr	r3, r0, r2, lsl #8
   164e0:	ldr	r0, [sp, #208]	; 0xd0
   164e4:	orr	r4, r4, r2, lsr #24
   164e8:	str	r3, [sp, #104]	; 0x68
   164ec:	str	r4, [sp, #88]	; 0x58
   164f0:	adds	r0, lr, r0
   164f4:	adc	r2, ip, r1
   164f8:	ldr	r1, [sp, #176]	; 0xb0
   164fc:	adds	r0, r0, r3
   16500:	adc	r2, r2, r4
   16504:	str	r0, [sp, #52]	; 0x34
   16508:	str	r2, [sp, #48]	; 0x30
   1650c:	adds	r3, r0, r1
   16510:	ldr	r0, [sp, #172]	; 0xac
   16514:	adc	r2, r2, r0
   16518:	adds	r3, r3, r8
   1651c:	adc	r2, r2, r9
   16520:	str	r3, [sp, #92]	; 0x5c
   16524:	ldr	r3, [sp, #68]	; 0x44
   16528:	ldr	r9, [sp, #120]	; 0x78
   1652c:	str	r2, [sp, #24]
   16530:	ldr	r2, [sp, #72]	; 0x48
   16534:	adds	r5, r5, r2
   16538:	ldr	r2, [sp, #76]	; 0x4c
   1653c:	eor	r3, r5, r3
   16540:	str	r5, [fp, #-224]	; 0xffffff20
   16544:	str	r5, [sp, #12]
   16548:	ldr	r5, [sp, #84]	; 0x54
   1654c:	adc	r8, r6, r2
   16550:	ldr	r2, [sp, #64]	; 0x40
   16554:	str	r8, [fp, #-220]	; 0xffffff24
   16558:	eor	r2, r8, r2
   1655c:	lsl	r7, r2, #1
   16560:	orr	r7, r7, r3, lsr #31
   16564:	lsl	r3, r3, #1
   16568:	orr	r2, r3, r2, lsr #31
   1656c:	ldr	r3, [sp, #36]	; 0x24
   16570:	str	r7, [fp, #-252]	; 0xffffff04
   16574:	str	r2, [fp, #-256]	; 0xffffff00
   16578:	str	r9, [fp, #-180]	; 0xffffff4c
   1657c:	adds	r3, r3, r1
   16580:	ldr	r1, [sp, #96]	; 0x60
   16584:	adc	r6, r1, r0
   16588:	ldr	r0, [sp, #132]	; 0x84
   1658c:	adds	lr, r3, r2
   16590:	ldr	r1, [sp, #128]	; 0x80
   16594:	ldr	r3, [sp, #44]	; 0x2c
   16598:	adc	sl, r6, r7
   1659c:	str	r0, [fp, #-184]	; 0xffffff48
   165a0:	ldr	r0, [sp, #124]	; 0x7c
   165a4:	str	r1, [fp, #-212]	; 0xffffff2c
   165a8:	str	r0, [fp, #-216]	; 0xffffff28
   165ac:	str	r3, [fp, #-172]	; 0xffffff54
   165b0:	eor	r3, sl, r3
   165b4:	str	r5, [fp, #-176]	; 0xffffff50
   165b8:	eor	r5, lr, r5
   165bc:	adds	ip, r3, r0
   165c0:	adc	r4, r5, r1
   165c4:	eor	r2, ip, r2
   165c8:	eor	r6, r4, r7
   165cc:	lsl	r7, r2, #8
   165d0:	lsr	r2, r2, #24
   165d4:	orr	r0, r2, r6, lsl #8
   165d8:	ldr	r2, [sp, #280]	; 0x118
   165dc:	orr	r1, r7, r6, lsr #24
   165e0:	ldr	r7, [sp, #276]	; 0x114
   165e4:	str	r1, [sp, #72]	; 0x48
   165e8:	str	r0, [sp, #76]	; 0x4c
   165ec:	adds	r2, lr, r2
   165f0:	adc	lr, sl, r7
   165f4:	adds	r6, r2, r0
   165f8:	ldr	r0, [sp, #40]	; 0x28
   165fc:	adc	r2, lr, r1
   16600:	ldr	r1, [sp, #16]
   16604:	eor	r3, r6, r3
   16608:	str	r6, [sp, #84]	; 0x54
   1660c:	ldr	r6, [sp, #200]	; 0xc8
   16610:	str	r2, [sp, #96]	; 0x60
   16614:	eor	r2, r2, r5
   16618:	lsl	r5, r3, #16
   1661c:	lsr	r3, r3, #16
   16620:	orr	r7, r5, r2, lsr #16
   16624:	orr	r2, r3, r2, lsl #16
   16628:	adds	lr, r2, ip
   1662c:	str	r2, [sp, #44]	; 0x2c
   16630:	ldr	r2, [sp, #28]
   16634:	str	r7, [sp, #36]	; 0x24
   16638:	eor	r0, r1, r0
   1663c:	ldr	r1, [sp, #80]	; 0x50
   16640:	adc	sl, r7, r4
   16644:	ldr	r7, [sp, #196]	; 0xc4
   16648:	lsl	r3, r0, #1
   1664c:	eor	r1, r2, r1
   16650:	ldr	r2, [sp, #140]	; 0x8c
   16654:	orr	r4, r3, r1, lsr #31
   16658:	lsl	r1, r1, #1
   1665c:	orr	r0, r1, r0, lsr #31
   16660:	ldr	r1, [sp, #100]	; 0x64
   16664:	adds	r1, r1, r6
   16668:	adc	r3, r2, r7
   1666c:	ldr	r2, [sp, #132]	; 0x84
   16670:	adds	r1, r1, r0
   16674:	adc	r3, r3, r4
   16678:	eor	r9, r3, r9
   1667c:	eor	ip, r1, r2
   16680:	ldr	r2, [sp, #12]
   16684:	adds	r2, r9, r2
   16688:	adc	r5, ip, r8
   1668c:	eor	r0, r2, r0
   16690:	str	r2, [sp, #64]	; 0x40
   16694:	str	r5, [sp, #68]	; 0x44
   16698:	eor	r4, r5, r4
   1669c:	lsl	r5, r0, #8
   166a0:	lsr	r0, r0, #24
   166a4:	orr	r5, r5, r4, lsr #24
   166a8:	orr	r4, r0, r4, lsl #8
   166ac:	ldr	r0, [sp, #256]	; 0x100
   166b0:	str	r4, [sp, #132]	; 0x84
   166b4:	str	r5, [sp, #40]	; 0x28
   166b8:	adds	r0, r1, r0
   166bc:	ldr	r1, [sp, #252]	; 0xfc
   166c0:	adc	r1, r3, r1
   166c4:	adds	r3, r0, r4
   166c8:	ldr	r4, [sp, #24]
   166cc:	adc	r0, r1, r5
   166d0:	eor	r2, r3, r9
   166d4:	str	r3, [sp, #28]
   166d8:	mov	r9, lr
   166dc:	str	r0, [sp, #100]	; 0x64
   166e0:	lsr	r1, r2, #16
   166e4:	eor	r0, r0, ip
   166e8:	lsl	r2, r2, #16
   166ec:	orr	r2, r2, r0, lsr #16
   166f0:	orr	r1, r1, r0, lsl #16
   166f4:	ldr	r0, [sp, #152]	; 0x98
   166f8:	eor	ip, r4, r2
   166fc:	str	r2, [sp, #16]
   16700:	ldr	r2, [sp, #92]	; 0x5c
   16704:	str	r1, [sp, #8]
   16708:	adds	lr, ip, lr
   1670c:	str	r0, [fp, #-164]	; 0xffffff5c
   16710:	ldr	r0, [sp, #156]	; 0x9c
   16714:	eor	r3, r2, r1
   16718:	adc	r8, r3, sl
   1671c:	str	r0, [fp, #-168]	; 0xffffff58
   16720:	ldr	r0, [sp, #144]	; 0x90
   16724:	str	r0, [fp, #-208]	; 0xffffff30
   16728:	ldr	r0, [sp, #148]	; 0x94
   1672c:	str	r0, [fp, #-204]	; 0xffffff34
   16730:	ldr	r0, [sp, #20]
   16734:	str	r0, [fp, #-244]	; 0xffffff0c
   16738:	eor	r1, r8, r0
   1673c:	ldr	r0, [sp, #32]
   16740:	str	r0, [fp, #-248]	; 0xffffff08
   16744:	eor	r0, lr, r0
   16748:	lsl	r5, r0, #8
   1674c:	lsr	r0, r0, #24
   16750:	orr	r5, r5, r1, lsr #24
   16754:	orr	r0, r0, r1, lsl #8
   16758:	adds	r1, r2, r6
   1675c:	adc	r2, r4, r7
   16760:	adds	r6, r1, r0
   16764:	ldr	r7, [sp, #136]	; 0x88
   16768:	adc	r1, r2, r5
   1676c:	eor	r2, r6, ip
   16770:	str	r6, [sp, #80]	; 0x50
   16774:	str	r1, [sp, #92]	; 0x5c
   16778:	eor	r1, r1, r3
   1677c:	lsl	r3, r2, #16
   16780:	lsr	r2, r2, #16
   16784:	orr	r3, r3, r1, lsr #16
   16788:	orr	r1, r2, r1, lsl #16
   1678c:	adds	r2, r1, lr
   16790:	str	r1, [sp, #140]	; 0x8c
   16794:	str	r3, [sp, #120]	; 0x78
   16798:	adc	r1, r3, r8
   1679c:	str	r2, [sp, #124]	; 0x7c
   167a0:	eor	r0, r2, r0
   167a4:	str	r1, [sp, #128]	; 0x80
   167a8:	eor	r1, r1, r5
   167ac:	lsl	r2, r1, #1
   167b0:	orr	r8, r2, r0, lsr #31
   167b4:	lsl	r0, r0, #1
   167b8:	orr	lr, r0, r1, lsr #31
   167bc:	ldr	r0, [sp, #72]	; 0x48
   167c0:	ldr	r1, [sp, #76]	; 0x4c
   167c4:	str	r8, [sp, #12]
   167c8:	str	lr, [sp, #24]
   167cc:	eor	r0, sl, r0
   167d0:	eor	r1, r9, r1
   167d4:	lsl	r2, r0, #1
   167d8:	orr	r3, r2, r1, lsr #31
   167dc:	lsl	r1, r1, #1
   167e0:	ldr	r2, [sp, #116]	; 0x74
   167e4:	orr	r0, r1, r0, lsr #31
   167e8:	ldr	r1, [sp, #224]	; 0xe0
   167ec:	adds	r1, r2, r1
   167f0:	ldr	r2, [sp, #220]	; 0xdc
   167f4:	adc	r2, r7, r2
   167f8:	adds	r5, r1, r0
   167fc:	ldr	r1, [sp, #64]	; 0x40
   16800:	adc	sl, r2, r3
   16804:	ldr	r2, [sp, #8]
   16808:	adds	r4, r2, r1
   1680c:	ldr	r1, [sp, #68]	; 0x44
   16810:	ldr	r2, [sp, #16]
   16814:	str	r4, [sp, #32]
   16818:	adc	r9, r2, r1
   1681c:	ldr	r1, [sp, #56]	; 0x38
   16820:	ldr	r2, [sp, #48]	; 0x30
   16824:	eor	r7, r2, r1
   16828:	ldr	r1, [sp, #60]	; 0x3c
   1682c:	ldr	r2, [sp, #52]	; 0x34
   16830:	eor	r6, r2, r1
   16834:	lsr	r2, r6, #16
   16838:	lsl	r6, r6, #16
   1683c:	orr	ip, r2, r7, lsl #16
   16840:	orr	r7, r6, r7, lsr #16
   16844:	eor	r1, sl, r7
   16848:	eor	r6, r5, ip
   1684c:	adds	r2, r1, r4
   16850:	str	r1, [sp, #60]	; 0x3c
   16854:	str	r6, [sp, #56]	; 0x38
   16858:	adc	r1, r6, r9
   1685c:	eor	r0, r2, r0
   16860:	str	r2, [sp, #72]	; 0x48
   16864:	lsl	r6, r0, #8
   16868:	eor	r3, r1, r3
   1686c:	lsr	r0, r0, #24
   16870:	str	r1, [sp, #76]	; 0x4c
   16874:	ldr	r1, [sp, #204]	; 0xcc
   16878:	orr	r2, r0, r3, lsl #8
   1687c:	ldr	r0, [sp, #208]	; 0xd0
   16880:	orr	r6, r6, r3, lsr #24
   16884:	str	r2, [sp, #68]	; 0x44
   16888:	str	r6, [sp, #64]	; 0x40
   1688c:	adds	r0, r5, r0
   16890:	adc	r3, sl, r1
   16894:	adds	r2, r0, r2
   16898:	ldr	r0, [sp, #228]	; 0xe4
   1689c:	ldr	r1, [sp, #232]	; 0xe8
   168a0:	adc	r4, r3, r6
   168a4:	str	r2, [sp, #52]	; 0x34
   168a8:	str	r4, [sp, #48]	; 0x30
   168ac:	adds	r0, lr, r0
   168b0:	adc	r3, r8, r1
   168b4:	adds	r0, r0, r2
   168b8:	ldr	r1, [sp, #28]
   168bc:	str	r0, [sp, #136]	; 0x88
   168c0:	adc	r0, r3, r4
   168c4:	ldr	r4, [sp, #148]	; 0x94
   168c8:	str	r0, [sp, #116]	; 0x74
   168cc:	ldr	r0, [sp, #108]	; 0x6c
   168d0:	adds	r6, ip, r0
   168d4:	ldr	r0, [sp, #112]	; 0x70
   168d8:	str	r6, [fp, #-200]	; 0xffffff38
   168dc:	adc	sl, r7, r0
   168e0:	ldr	r0, [sp, #88]	; 0x58
   168e4:	str	sl, [fp, #-196]	; 0xffffff3c
   168e8:	eor	r2, sl, r0
   168ec:	ldr	r0, [sp, #104]	; 0x68
   168f0:	lsl	r7, r2, #1
   168f4:	eor	r3, r6, r0
   168f8:	ldr	r0, [sp, #256]	; 0x100
   168fc:	orr	r7, r7, r3, lsr #31
   16900:	lsl	r3, r3, #1
   16904:	orr	r2, r3, r2, lsr #31
   16908:	str	r7, [fp, #-236]	; 0xffffff14
   1690c:	str	r2, [fp, #-240]	; 0xffffff10
   16910:	adds	r3, r1, r0
   16914:	ldr	r0, [sp, #252]	; 0xfc
   16918:	ldr	r1, [sp, #100]	; 0x64
   1691c:	adc	r5, r1, r0
   16920:	ldr	r0, [sp, #36]	; 0x24
   16924:	adds	r3, r3, r2
   16928:	ldr	r1, [sp, #144]	; 0x90
   1692c:	adc	r5, r5, r7
   16930:	eor	lr, r0, r5
   16934:	ldr	r0, [sp, #44]	; 0x2c
   16938:	adds	r8, lr, r1
   1693c:	eor	r2, r8, r2
   16940:	eor	r0, r0, r3
   16944:	adc	ip, r0, r4
   16948:	lsl	r4, r2, #8
   1694c:	lsr	r2, r2, #24
   16950:	eor	r7, ip, r7
   16954:	orr	r1, r4, r7, lsr #24
   16958:	orr	r4, r2, r7, lsl #8
   1695c:	ldr	r2, [sp, #264]	; 0x108
   16960:	str	r4, [sp, #108]	; 0x6c
   16964:	str	r1, [sp, #104]	; 0x68
   16968:	adds	r2, r3, r2
   1696c:	ldr	r3, [sp, #260]	; 0x104
   16970:	adc	r3, r5, r3
   16974:	adds	r4, r2, r4
   16978:	adc	r2, r3, r1
   1697c:	ldr	r1, [sp, #132]	; 0x84
   16980:	str	r4, [sp, #88]	; 0x58
   16984:	str	r2, [sp, #100]	; 0x64
   16988:	eor	r0, r2, r0
   1698c:	eor	r2, r4, lr
   16990:	lsl	r3, r2, #16
   16994:	lsr	r2, r2, #16
   16998:	orr	r3, r3, r0, lsr #16
   1699c:	orr	r0, r2, r0, lsl #16
   169a0:	ldr	r2, [sp, #32]
   169a4:	adds	r7, r0, r8
   169a8:	str	r0, [sp, #44]	; 0x2c
   169ac:	ldr	r0, [sp, #40]	; 0x28
   169b0:	str	r3, [sp, #36]	; 0x24
   169b4:	adc	ip, r3, ip
   169b8:	ldr	r3, [sp, #84]	; 0x54
   169bc:	str	r7, [sp, #4]
   169c0:	eor	r1, r2, r1
   169c4:	eor	r0, r9, r0
   169c8:	lsl	r2, r0, #1
   169cc:	orr	r5, r2, r1, lsr #31
   169d0:	lsl	r1, r1, #1
   169d4:	ldr	r2, [sp, #212]	; 0xd4
   169d8:	orr	r0, r1, r0, lsr #31
   169dc:	ldr	r1, [sp, #216]	; 0xd8
   169e0:	adds	r1, r0, r1
   169e4:	adc	r2, r5, r2
   169e8:	adds	r1, r1, r3
   169ec:	ldr	r3, [sp, #96]	; 0x60
   169f0:	adc	r2, r2, r3
   169f4:	ldr	r3, [sp, #152]	; 0x98
   169f8:	eor	r8, r2, r3
   169fc:	ldr	r3, [sp, #156]	; 0x9c
   16a00:	eor	lr, r1, r3
   16a04:	adds	r3, r8, r6
   16a08:	adc	r4, lr, sl
   16a0c:	str	r3, [sp, #84]	; 0x54
   16a10:	str	r4, [sp, #96]	; 0x60
   16a14:	eor	r6, r4, r5
   16a18:	ldr	r4, [sp, #292]	; 0x124
   16a1c:	stm	r4, {r0, r5}
   16a20:	eor	r0, r3, r0
   16a24:	lsl	r5, r0, #8
   16a28:	lsr	r0, r0, #24
   16a2c:	ldr	sl, [sp, #192]	; 0xc0
   16a30:	ldr	r9, [sp, #188]	; 0xbc
   16a34:	orr	r5, r5, r6, lsr #24
   16a38:	orr	r6, r0, r6, lsl #8
   16a3c:	ldr	r0, [sp, #272]	; 0x110
   16a40:	str	r6, [sp, #40]	; 0x28
   16a44:	str	r5, [sp, #32]
   16a48:	adds	r0, r1, r0
   16a4c:	ldr	r1, [sp, #268]	; 0x10c
   16a50:	adc	r1, r2, r1
   16a54:	adds	r2, r0, r6
   16a58:	str	r2, [sp, #16]
   16a5c:	adc	r0, r1, r5
   16a60:	eor	r2, r2, r8
   16a64:	str	r0, [sp, #20]
   16a68:	eor	r0, r0, lr
   16a6c:	lsr	r1, r2, #16
   16a70:	lsl	r2, r2, #16
   16a74:	ldr	lr, [sp, #136]	; 0x88
   16a78:	orr	r1, r1, r0, lsl #16
   16a7c:	orr	r0, r2, r0, lsr #16
   16a80:	ldr	r2, [sp, #116]	; 0x74
   16a84:	str	r0, [sp, #28]
   16a88:	str	r1, [sp, #8]
   16a8c:	eor	r3, lr, r1
   16a90:	eor	r4, r2, r0
   16a94:	ldr	r0, [sp, #12]
   16a98:	adds	r6, r4, r7
   16a9c:	mov	r7, ip
   16aa0:	adc	r8, r3, ip
   16aa4:	eor	r1, r8, r0
   16aa8:	ldr	r0, [sp, #24]
   16aac:	eor	r0, r6, r0
   16ab0:	lsl	r5, r0, #8
   16ab4:	lsr	r0, r0, #24
   16ab8:	orr	r5, r5, r1, lsr #24
   16abc:	orr	ip, r0, r1, lsl #8
   16ac0:	adds	r1, lr, sl
   16ac4:	adc	lr, r2, r9
   16ac8:	adds	r0, r1, ip
   16acc:	adc	r1, lr, r5
   16ad0:	eor	r2, r0, r4
   16ad4:	str	r0, [sp, #112]	; 0x70
   16ad8:	eor	lr, r1, r3
   16adc:	lsl	r3, r2, #16
   16ae0:	lsr	r2, r2, #16
   16ae4:	str	r1, [sp, #116]	; 0x74
   16ae8:	orr	r1, r2, lr, lsl #16
   16aec:	orr	r3, r3, lr, lsr #16
   16af0:	adds	r2, r1, r6
   16af4:	str	r1, [sp, #156]	; 0x9c
   16af8:	str	r3, [sp, #152]	; 0x98
   16afc:	adc	r1, r3, r8
   16b00:	str	r2, [sp, #144]	; 0x90
   16b04:	eor	r0, r2, ip
   16b08:	ldr	r3, [sp, #80]	; 0x50
   16b0c:	str	r1, [sp, #148]	; 0x94
   16b10:	eor	r1, r1, r5
   16b14:	lsl	r2, r1, #1
   16b18:	orr	r2, r2, r0, lsr #31
   16b1c:	lsl	r0, r0, #1
   16b20:	orr	r0, r0, r1, lsr #31
   16b24:	str	r2, [sp, #132]	; 0x84
   16b28:	ldr	r1, [sp, #108]	; 0x6c
   16b2c:	ldr	r2, [sp, #4]
   16b30:	str	r0, [sp, #136]	; 0x88
   16b34:	ldr	r0, [sp, #104]	; 0x68
   16b38:	eor	r1, r2, r1
   16b3c:	eor	r0, r7, r0
   16b40:	ldr	r7, [sp, #92]	; 0x5c
   16b44:	lsl	r2, r0, #1
   16b48:	orr	lr, r2, r1, lsr #31
   16b4c:	lsl	r1, r1, #1
   16b50:	ldr	r2, [sp, #28]
   16b54:	orr	ip, r1, r0, lsr #31
   16b58:	ldr	r1, [sp, #168]	; 0xa8
   16b5c:	ldr	r0, [sp, #84]	; 0x54
   16b60:	adds	r1, r3, r1
   16b64:	ldr	r3, [sp, #164]	; 0xa4
   16b68:	adc	r3, r7, r3
   16b6c:	adds	r8, r1, ip
   16b70:	ldr	r1, [sp, #8]
   16b74:	adc	r7, r3, lr
   16b78:	ldr	r3, [sp, #48]	; 0x30
   16b7c:	adds	r0, r1, r0
   16b80:	ldr	r1, [sp, #96]	; 0x60
   16b84:	str	r0, [sp, #12]
   16b88:	adc	r2, r2, r1
   16b8c:	ldr	r1, [sp, #56]	; 0x38
   16b90:	str	r2, [sp, #8]
   16b94:	eor	r6, r3, r1
   16b98:	ldr	r1, [sp, #60]	; 0x3c
   16b9c:	ldr	r3, [sp, #52]	; 0x34
   16ba0:	eor	r5, r3, r1
   16ba4:	lsr	r4, r5, #16
   16ba8:	lsl	r5, r5, #16
   16bac:	orr	r4, r4, r6, lsl #16
   16bb0:	orr	r6, r5, r6, lsr #16
   16bb4:	eor	r3, r6, r7
   16bb8:	eor	r1, r4, r8
   16bbc:	str	r6, [fp, #-188]	; 0xffffff44
   16bc0:	str	r4, [fp, #-192]	; 0xffffff40
   16bc4:	str	r3, [sp, #60]	; 0x3c
   16bc8:	adds	r3, r3, r0
   16bcc:	str	r1, [sp, #56]	; 0x38
   16bd0:	adc	r5, r1, r2
   16bd4:	eor	r0, r3, ip
   16bd8:	str	r3, [sp, #104]	; 0x68
   16bdc:	ldr	r1, [sp, #180]	; 0xb4
   16be0:	str	r5, [sp, #108]	; 0x6c
   16be4:	eor	r2, r5, lr
   16be8:	lsl	r5, r0, #8
   16bec:	lsr	r0, r0, #24
   16bf0:	orr	r3, r5, r2, lsr #24
   16bf4:	orr	r2, r0, r2, lsl #8
   16bf8:	ldr	r0, [sp, #184]	; 0xb8
   16bfc:	str	r2, [sp, #96]	; 0x60
   16c00:	str	r3, [sp, #84]	; 0x54
   16c04:	adds	r0, r8, r0
   16c08:	adc	r1, r7, r1
   16c0c:	adds	r0, r0, r2
   16c10:	ldr	r2, [sp, #136]	; 0x88
   16c14:	adc	r1, r1, r3
   16c18:	str	r0, [sp, #52]	; 0x34
   16c1c:	adds	r0, r0, sl
   16c20:	ldr	r3, [sp, #36]	; 0x24
   16c24:	str	r1, [sp, #48]	; 0x30
   16c28:	adc	r1, r1, r9
   16c2c:	ldr	r9, [sp, #120]	; 0x78
   16c30:	adds	r0, r0, r2
   16c34:	ldr	r2, [sp, #16]
   16c38:	str	r0, [sp, #28]
   16c3c:	ldr	r0, [sp, #132]	; 0x84
   16c40:	adc	r0, r1, r0
   16c44:	str	r0, [sp, #24]
   16c48:	ldr	r0, [sp, #72]	; 0x48
   16c4c:	adds	sl, r4, r0
   16c50:	ldr	r0, [sp, #76]	; 0x4c
   16c54:	str	sl, [fp, #-224]	; 0xffffff20
   16c58:	adc	r8, r6, r0
   16c5c:	ldr	r0, [sp, #64]	; 0x40
   16c60:	str	r8, [fp, #-220]	; 0xffffff24
   16c64:	eor	r1, r8, r0
   16c68:	ldr	r0, [sp, #68]	; 0x44
   16c6c:	lsl	r6, r1, #1
   16c70:	eor	r7, sl, r0
   16c74:	ldr	r0, [sp, #240]	; 0xf0
   16c78:	orr	r6, r6, r7, lsr #31
   16c7c:	lsl	r7, r7, #1
   16c80:	orr	r1, r7, r1, lsr #31
   16c84:	str	r6, [fp, #-252]	; 0xffffff04
   16c88:	str	r1, [fp, #-256]	; 0xffffff00
   16c8c:	str	r9, [fp, #-180]	; 0xffffff4c
   16c90:	adds	r7, r2, r0
   16c94:	ldr	r0, [sp, #236]	; 0xec
   16c98:	ldr	r2, [sp, #20]
   16c9c:	adc	r5, r2, r0
   16ca0:	ldr	r0, [sp, #140]	; 0x8c
   16ca4:	ldr	r2, [sp, #128]	; 0x80
   16ca8:	adds	r4, r7, r1
   16cac:	adc	r5, r5, r6
   16cb0:	eor	r7, r5, r3
   16cb4:	str	r0, [fp, #-184]	; 0xffffff48
   16cb8:	ldr	r0, [sp, #124]	; 0x7c
   16cbc:	str	r2, [fp, #-212]	; 0xffffff2c
   16cc0:	str	r0, [fp, #-216]	; 0xffffff28
   16cc4:	str	r3, [fp, #-172]	; 0xffffff54
   16cc8:	ldr	r3, [sp, #44]	; 0x2c
   16ccc:	adds	ip, r7, r0
   16cd0:	eor	r1, ip, r1
   16cd4:	eor	lr, r4, r3
   16cd8:	str	r3, [fp, #-176]	; 0xffffff50
   16cdc:	lsl	r3, r1, #8
   16ce0:	lsr	r1, r1, #24
   16ce4:	adc	r2, lr, r2
   16ce8:	eor	r6, r2, r6
   16cec:	orr	r0, r3, r6, lsr #24
   16cf0:	orr	r6, r1, r6, lsl #8
   16cf4:	ldr	r1, [sp, #248]	; 0xf8
   16cf8:	ldr	r3, [sp, #244]	; 0xf4
   16cfc:	str	r0, [sp, #72]	; 0x48
   16d00:	str	r6, [sp, #76]	; 0x4c
   16d04:	adds	r1, r4, r1
   16d08:	adc	r3, r5, r3
   16d0c:	adds	r4, r1, r6
   16d10:	adc	r1, r3, r0
   16d14:	eor	r3, r4, r7
   16d18:	ldr	r0, [sp, #32]
   16d1c:	str	r4, [sp, #80]	; 0x50
   16d20:	str	r1, [sp, #92]	; 0x5c
   16d24:	lsl	r7, r3, #16
   16d28:	eor	r1, r1, lr
   16d2c:	lsr	r3, r3, #16
   16d30:	orr	r7, r7, r1, lsr #16
   16d34:	orr	r1, r3, r1, lsl #16
   16d38:	adds	ip, r1, ip
   16d3c:	str	r1, [sp, #124]	; 0x7c
   16d40:	ldr	r1, [sp, #8]
   16d44:	str	r7, [sp, #44]	; 0x2c
   16d48:	adc	lr, r7, r2
   16d4c:	ldr	r2, [sp, #12]
   16d50:	ldr	r7, [sp, #100]	; 0x64
   16d54:	str	ip, [sp, #20]
   16d58:	eor	r0, r1, r0
   16d5c:	ldr	r1, [sp, #40]	; 0x28
   16d60:	lsl	r3, r0, #1
   16d64:	eor	r2, r2, r1
   16d68:	ldr	r1, [sp, #88]	; 0x58
   16d6c:	orr	r3, r3, r2, lsr #31
   16d70:	lsl	r2, r2, #1
   16d74:	orr	r2, r2, r0, lsr #31
   16d78:	ldr	r0, [sp, #280]	; 0x118
   16d7c:	adds	r0, r1, r0
   16d80:	ldr	r1, [sp, #276]	; 0x114
   16d84:	adc	r7, r7, r1
   16d88:	adds	r4, r0, r2
   16d8c:	ldr	r0, [sp, #140]	; 0x8c
   16d90:	adc	r1, r7, r3
   16d94:	eor	r9, r1, r9
   16d98:	adds	r5, r9, sl
   16d9c:	eor	r0, r4, r0
   16da0:	eor	r2, r5, r2
   16da4:	str	r5, [sp, #64]	; 0x40
   16da8:	adc	r6, r0, r8
   16dac:	str	r6, [sp, #68]	; 0x44
   16db0:	eor	r3, r6, r3
   16db4:	lsl	r6, r2, #8
   16db8:	lsr	r2, r2, #24
   16dbc:	orr	r7, r6, r3, lsr #24
   16dc0:	orr	r6, r2, r3, lsl #8
   16dc4:	ldr	r2, [sp, #288]	; 0x120
   16dc8:	ldr	r3, [sp, #284]	; 0x11c
   16dcc:	str	r7, [sp, #40]	; 0x28
   16dd0:	str	r6, [sp, #120]	; 0x78
   16dd4:	adds	r2, r4, r2
   16dd8:	adc	r3, r1, r3
   16ddc:	adds	r1, r2, r6
   16de0:	adc	r2, r3, r7
   16de4:	eor	r4, r1, r9
   16de8:	ldr	r7, [sp, #24]
   16dec:	str	r1, [sp, #32]
   16df0:	lsr	r3, r4, #16
   16df4:	eor	r0, r2, r0
   16df8:	lsl	r4, r4, #16
   16dfc:	str	r2, [sp, #36]	; 0x24
   16e00:	ldr	r2, [sp, #28]
   16e04:	orr	r9, r3, r0, lsl #16
   16e08:	orr	r5, r4, r0, lsr #16
   16e0c:	ldr	r0, [sp, #152]	; 0x98
   16e10:	mov	r4, lr
   16e14:	eor	r3, r7, r5
   16e18:	eor	r6, r2, r9
   16e1c:	adds	r8, r3, ip
   16e20:	str	r0, [fp, #-164]	; 0xffffff5c
   16e24:	ldr	r0, [sp, #156]	; 0x9c
   16e28:	adc	lr, r6, lr
   16e2c:	str	r0, [fp, #-168]	; 0xffffff58
   16e30:	ldr	r0, [sp, #144]	; 0x90
   16e34:	str	r0, [fp, #-208]	; 0xffffff30
   16e38:	ldr	r0, [sp, #148]	; 0x94
   16e3c:	str	r0, [fp, #-204]	; 0xffffff34
   16e40:	ldr	r0, [sp, #132]	; 0x84
   16e44:	str	r0, [fp, #-244]	; 0xffffff0c
   16e48:	eor	r1, lr, r0
   16e4c:	ldr	r0, [sp, #136]	; 0x88
   16e50:	str	r0, [fp, #-248]	; 0xffffff08
   16e54:	eor	r0, r8, r0
   16e58:	lsl	sl, r0, #8
   16e5c:	lsr	r0, r0, #24
   16e60:	orr	sl, sl, r1, lsr #24
   16e64:	orr	ip, r0, r1, lsl #8
   16e68:	ldr	r1, [sp, #256]	; 0x100
   16e6c:	adds	r1, r2, r1
   16e70:	ldr	r2, [sp, #252]	; 0xfc
   16e74:	adc	r2, r7, r2
   16e78:	adds	r0, r1, ip
   16e7c:	ldr	r7, [sp, #116]	; 0x74
   16e80:	adc	r1, r2, sl
   16e84:	eor	r2, r0, r3
   16e88:	str	r0, [sp, #88]	; 0x58
   16e8c:	str	r1, [sp, #100]	; 0x64
   16e90:	eor	r1, r1, r6
   16e94:	lsl	r3, r2, #16
   16e98:	lsr	r2, r2, #16
   16e9c:	ldr	r6, [sp, #48]	; 0x30
   16ea0:	orr	r3, r3, r1, lsr #16
   16ea4:	orr	r1, r2, r1, lsl #16
   16ea8:	adds	r2, r1, r8
   16eac:	str	r1, [sp, #140]	; 0x8c
   16eb0:	str	r3, [sp, #136]	; 0x88
   16eb4:	adc	r1, r3, lr
   16eb8:	str	r2, [sp, #128]	; 0x80
   16ebc:	eor	r0, r2, ip
   16ec0:	ldr	r3, [sp, #112]	; 0x70
   16ec4:	str	r1, [sp, #132]	; 0x84
   16ec8:	eor	r1, r1, sl
   16ecc:	lsl	r2, r1, #1
   16ed0:	orr	r8, r2, r0, lsr #31
   16ed4:	lsl	r0, r0, #1
   16ed8:	ldr	r2, [sp, #20]
   16edc:	orr	lr, r0, r1, lsr #31
   16ee0:	ldr	r0, [sp, #72]	; 0x48
   16ee4:	ldr	r1, [sp, #76]	; 0x4c
   16ee8:	str	r8, [sp, #24]
   16eec:	str	lr, [sp, #28]
   16ef0:	eor	r0, r4, r0
   16ef4:	eor	r1, r2, r1
   16ef8:	lsl	r2, r0, #1
   16efc:	orr	r2, r2, r1, lsr #31
   16f00:	lsl	r1, r1, #1
   16f04:	orr	r0, r1, r0, lsr #31
   16f08:	ldr	r1, [sp, #264]	; 0x108
   16f0c:	adds	r1, r3, r1
   16f10:	ldr	r3, [sp, #260]	; 0x104
   16f14:	adc	r3, r7, r3
   16f18:	ldr	r7, [sp, #64]	; 0x40
   16f1c:	adds	r1, r1, r0
   16f20:	adc	r3, r3, r2
   16f24:	adds	r9, r9, r7
   16f28:	ldr	r7, [sp, #68]	; 0x44
   16f2c:	str	r9, [sp, #20]
   16f30:	adc	sl, r5, r7
   16f34:	ldr	r7, [sp, #56]	; 0x38
   16f38:	ldr	r5, [sp, #52]	; 0x34
   16f3c:	eor	r7, r6, r7
   16f40:	ldr	r6, [sp, #60]	; 0x3c
   16f44:	eor	r6, r5, r6
   16f48:	lsr	r5, r6, #16
   16f4c:	lsl	r6, r6, #16
   16f50:	orr	r6, r6, r7, lsr #16
   16f54:	orr	ip, r5, r7, lsl #16
   16f58:	eor	r7, r3, r6
   16f5c:	eor	r4, r1, ip
   16f60:	adds	r5, r7, r9
   16f64:	str	r7, [sp, #112]	; 0x70
   16f68:	str	r4, [sp, #60]	; 0x3c
   16f6c:	adc	r7, r4, sl
   16f70:	eor	r0, r5, r0
   16f74:	str	r5, [sp, #72]	; 0x48
   16f78:	ldr	r4, [sp, #148]	; 0x94
   16f7c:	str	r7, [sp, #76]	; 0x4c
   16f80:	eor	r2, r7, r2
   16f84:	lsl	r7, r0, #8
   16f88:	lsr	r0, r0, #24
   16f8c:	orr	r7, r7, r2, lsr #24
   16f90:	orr	r2, r0, r2, lsl #8
   16f94:	ldr	r0, [sp, #248]	; 0xf8
   16f98:	str	r2, [sp, #68]	; 0x44
   16f9c:	str	r7, [sp, #64]	; 0x40
   16fa0:	adds	r0, r1, r0
   16fa4:	ldr	r1, [sp, #244]	; 0xf4
   16fa8:	adc	r1, r3, r1
   16fac:	adds	r2, r0, r2
   16fb0:	ldr	r0, [sp, #208]	; 0xd0
   16fb4:	adc	r3, r1, r7
   16fb8:	ldr	r1, [sp, #204]	; 0xcc
   16fbc:	str	r2, [sp, #56]	; 0x38
   16fc0:	str	r3, [sp, #52]	; 0x34
   16fc4:	adds	r0, lr, r0
   16fc8:	adc	r1, r8, r1
   16fcc:	adds	r0, r0, r2
   16fd0:	str	r0, [sp, #116]	; 0x74
   16fd4:	adc	r0, r1, r3
   16fd8:	ldr	r1, [sp, #96]	; 0x60
   16fdc:	ldr	r3, [sp, #32]
   16fe0:	str	r0, [sp, #48]	; 0x30
   16fe4:	ldr	r0, [sp, #104]	; 0x68
   16fe8:	adds	r7, ip, r0
   16fec:	ldr	r0, [sp, #108]	; 0x6c
   16ff0:	eor	r1, r7, r1
   16ff4:	str	r7, [fp, #-200]	; 0xffffff38
   16ff8:	adc	r5, r6, r0
   16ffc:	ldr	r0, [sp, #84]	; 0x54
   17000:	ldr	r6, [sp, #36]	; 0x24
   17004:	str	r5, [fp, #-196]	; 0xffffff3c
   17008:	eor	r0, r5, r0
   1700c:	lsl	r2, r0, #1
   17010:	orr	r2, r2, r1, lsr #31
   17014:	lsl	r1, r1, #1
   17018:	orr	r0, r1, r0, lsr #31
   1701c:	ldr	r1, [sp, #224]	; 0xe0
   17020:	str	r2, [fp, #-236]	; 0xffffff14
   17024:	str	r0, [fp, #-240]	; 0xffffff10
   17028:	adds	r1, r3, r1
   1702c:	ldr	r3, [sp, #220]	; 0xdc
   17030:	adc	r6, r6, r3
   17034:	ldr	r3, [sp, #44]	; 0x2c
   17038:	adds	r1, r1, r0
   1703c:	adc	lr, r6, r2
   17040:	ldr	r6, [sp, #144]	; 0x90
   17044:	eor	r9, r3, lr
   17048:	ldr	r3, [sp, #124]	; 0x7c
   1704c:	adds	ip, r9, r6
   17050:	eor	r0, ip, r0
   17054:	lsl	r6, r0, #8
   17058:	lsr	r0, r0, #24
   1705c:	eor	r3, r3, r1
   17060:	adc	r8, r3, r4
   17064:	eor	r2, r8, r2
   17068:	orr	r4, r6, r2, lsr #24
   1706c:	orr	r2, r0, r2, lsl #8
   17070:	ldr	r0, [sp, #176]	; 0xb0
   17074:	str	r2, [sp, #108]	; 0x6c
   17078:	str	r4, [sp, #104]	; 0x68
   1707c:	adds	r0, r1, r0
   17080:	ldr	r1, [sp, #172]	; 0xac
   17084:	adc	r1, lr, r1
   17088:	adds	r2, r0, r2
   1708c:	adc	r0, r1, r4
   17090:	eor	r1, r2, r9
   17094:	str	r2, [sp, #96]	; 0x60
   17098:	str	r0, [sp, #124]	; 0x7c
   1709c:	lsl	r2, r1, #16
   170a0:	eor	r0, r0, r3
   170a4:	lsr	r1, r1, #16
   170a8:	orr	r2, r2, r0, lsr #16
   170ac:	orr	r0, r1, r0, lsl #16
   170b0:	ldr	r1, [sp, #120]	; 0x78
   170b4:	adds	lr, r0, ip
   170b8:	str	r0, [sp, #84]	; 0x54
   170bc:	ldr	r0, [sp, #40]	; 0x28
   170c0:	str	r2, [sp, #44]	; 0x2c
   170c4:	adc	r6, r2, r8
   170c8:	ldr	r2, [sp, #20]
   170cc:	str	lr, [sp, #8]
   170d0:	eor	r0, sl, r0
   170d4:	eor	r4, r2, r1
   170d8:	ldr	r2, [sp, #184]	; 0xb8
   170dc:	lsl	r3, r0, #1
   170e0:	orr	r1, r3, r4, lsr #31
   170e4:	lsl	r3, r4, #1
   170e8:	orr	r0, r3, r0, lsr #31
   170ec:	adds	r3, r0, r2
   170f0:	ldr	r2, [sp, #180]	; 0xb4
   170f4:	adc	r4, r1, r2
   170f8:	ldr	r2, [sp, #80]	; 0x50
   170fc:	adds	r3, r3, r2
   17100:	ldr	r2, [sp, #92]	; 0x5c
   17104:	adc	r4, r4, r2
   17108:	ldr	r2, [sp, #152]	; 0x98
   1710c:	eor	ip, r4, r2
   17110:	ldr	r2, [sp, #156]	; 0x9c
   17114:	adds	r7, ip, r7
   17118:	str	r7, [sp, #12]
   1711c:	eor	r8, r3, r2
   17120:	adc	r2, r8, r5
   17124:	str	r2, [sp, #20]
   17128:	eor	r5, r2, r1
   1712c:	ldr	r2, [sp, #292]	; 0x124
   17130:	strd	r0, [r2]
   17134:	eor	r0, r7, r0
   17138:	lsl	r1, r0, #8
   1713c:	lsr	r0, r0, #24
   17140:	orr	r7, r0, r5, lsl #8
   17144:	ldr	r0, [sp, #280]	; 0x118
   17148:	orr	r2, r1, r5, lsr #24
   1714c:	ldr	r1, [sp, #276]	; 0x114
   17150:	str	r7, [sp, #92]	; 0x5c
   17154:	str	r2, [sp, #80]	; 0x50
   17158:	adds	r0, r3, r0
   1715c:	adc	r1, r4, r1
   17160:	adds	r3, r0, r7
   17164:	ldr	r4, [sp, #48]	; 0x30
   17168:	ldr	r7, [sp, #116]	; 0x74
   1716c:	str	r3, [sp, #36]	; 0x24
   17170:	adc	r0, r1, r2
   17174:	eor	r3, r3, ip
   17178:	str	r0, [sp, #40]	; 0x28
   1717c:	lsr	r1, r3, #16
   17180:	eor	r0, r0, r8
   17184:	lsl	r3, r3, #16
   17188:	orr	sl, r3, r0, lsr #16
   1718c:	orr	r9, r1, r0, lsl #16
   17190:	ldr	r0, [sp, #24]
   17194:	eor	r3, r4, sl
   17198:	eor	r2, r7, r9
   1719c:	adds	r8, r3, lr
   171a0:	adc	lr, r2, r6
   171a4:	eor	r1, lr, r0
   171a8:	ldr	r0, [sp, #28]
   171ac:	eor	r0, r8, r0
   171b0:	lsl	r5, r0, #8
   171b4:	lsr	r0, r0, #24
   171b8:	orr	r5, r5, r1, lsr #24
   171bc:	orr	r0, r0, r1, lsl #8
   171c0:	ldr	r1, [sp, #228]	; 0xe4
   171c4:	adds	r1, r7, r1
   171c8:	ldr	r7, [sp, #232]	; 0xe8
   171cc:	adc	ip, r4, r7
   171d0:	adds	r7, r1, r0
   171d4:	adc	r1, ip, r5
   171d8:	str	r7, [sp, #116]	; 0x74
   171dc:	eor	ip, r1, r2
   171e0:	eor	r2, r7, r3
   171e4:	str	r1, [sp, #120]	; 0x78
   171e8:	ldr	r7, [sp, #100]	; 0x64
   171ec:	lsl	r3, r2, #16
   171f0:	lsr	r2, r2, #16
   171f4:	orr	r1, r2, ip, lsl #16
   171f8:	orr	r3, r3, ip, lsr #16
   171fc:	adds	r2, r1, r8
   17200:	str	r1, [sp, #156]	; 0x9c
   17204:	str	r3, [sp, #152]	; 0x98
   17208:	adc	r1, r3, lr
   1720c:	str	r2, [sp, #144]	; 0x90
   17210:	eor	r0, r2, r0
   17214:	str	r1, [sp, #148]	; 0x94
   17218:	eor	r1, r1, r5
   1721c:	lsl	r2, r1, #1
   17220:	orr	r8, r2, r0, lsr #31
   17224:	lsl	r0, r0, #1
   17228:	ldr	r2, [sp, #8]
   1722c:	orr	lr, r0, r1, lsr #31
   17230:	ldr	r0, [sp, #104]	; 0x68
   17234:	ldr	r1, [sp, #108]	; 0x6c
   17238:	str	r8, [sp, #16]
   1723c:	str	lr, [sp, #32]
   17240:	eor	r0, r6, r0
   17244:	eor	r1, r2, r1
   17248:	lsl	r2, r0, #1
   1724c:	orr	r3, r2, r1, lsr #31
   17250:	lsl	r1, r1, #1
   17254:	ldr	r2, [sp, #88]	; 0x58
   17258:	orr	r0, r1, r0, lsr #31
   1725c:	ldr	r1, [sp, #200]	; 0xc8
   17260:	adds	r1, r2, r1
   17264:	ldr	r2, [sp, #196]	; 0xc4
   17268:	adc	r2, r7, r2
   1726c:	adds	ip, r1, r0
   17270:	ldr	r1, [sp, #12]
   17274:	adc	r5, r2, r3
   17278:	ldr	r2, [sp, #52]	; 0x34
   1727c:	adds	r9, r9, r1
   17280:	ldr	r1, [sp, #20]
   17284:	str	r9, [sp, #28]
   17288:	adc	r6, sl, r1
   1728c:	ldr	r1, [sp, #60]	; 0x3c
   17290:	str	r6, [sp, #12]
   17294:	eor	r7, r2, r1
   17298:	ldr	r1, [sp, #112]	; 0x70
   1729c:	ldr	r2, [sp, #56]	; 0x38
   172a0:	eor	r4, r2, r1
   172a4:	lsr	r2, r4, #16
   172a8:	lsl	r4, r4, #16
   172ac:	orr	r4, r4, r7, lsr #16
   172b0:	orr	r2, r2, r7, lsl #16
   172b4:	eor	r7, r4, r5
   172b8:	eor	r1, r2, ip
   172bc:	str	r2, [fp, #-192]	; 0xffffff40
   172c0:	str	r4, [fp, #-188]	; 0xffffff44
   172c4:	str	r7, [sp, #60]	; 0x3c
   172c8:	adds	r7, r7, r9
   172cc:	str	r1, [sp, #56]	; 0x38
   172d0:	adc	r6, r1, r6
   172d4:	eor	r0, r7, r0
   172d8:	str	r7, [sp, #108]	; 0x6c
   172dc:	ldr	r1, [sp, #212]	; 0xd4
   172e0:	lsl	r7, r0, #8
   172e4:	eor	r3, r6, r3
   172e8:	lsr	r0, r0, #24
   172ec:	str	r6, [sp, #112]	; 0x70
   172f0:	orr	r7, r7, r3, lsr #24
   172f4:	orr	r3, r0, r3, lsl #8
   172f8:	ldr	r0, [sp, #216]	; 0xd8
   172fc:	str	r3, [sp, #104]	; 0x68
   17300:	str	r7, [sp, #88]	; 0x58
   17304:	adds	r0, ip, r0
   17308:	adc	r1, r5, r1
   1730c:	adds	r3, r0, r3
   17310:	ldr	r0, [sp, #256]	; 0x100
   17314:	adc	r7, r1, r7
   17318:	ldr	r1, [sp, #252]	; 0xfc
   1731c:	str	r3, [sp, #52]	; 0x34
   17320:	str	r7, [sp, #48]	; 0x30
   17324:	adds	r0, r3, r0
   17328:	ldr	r3, [sp, #36]	; 0x24
   1732c:	adc	r1, r7, r1
   17330:	adds	r0, r0, lr
   17334:	ldr	r7, [sp, #40]	; 0x28
   17338:	str	r0, [sp, #24]
   1733c:	adc	r0, r1, r8
   17340:	ldr	r1, [sp, #68]	; 0x44
   17344:	str	r0, [sp, #20]
   17348:	ldr	r0, [sp, #72]	; 0x48
   1734c:	adds	sl, r2, r0
   17350:	ldr	r0, [sp, #76]	; 0x4c
   17354:	eor	r1, sl, r1
   17358:	str	sl, [fp, #-224]	; 0xffffff20
   1735c:	adc	r9, r4, r0
   17360:	ldr	r0, [sp, #64]	; 0x40
   17364:	str	r9, [fp, #-220]	; 0xffffff24
   17368:	eor	r0, r9, r0
   1736c:	lsl	r2, r0, #1
   17370:	orr	r2, r2, r1, lsr #31
   17374:	lsl	r1, r1, #1
   17378:	orr	r0, r1, r0, lsr #31
   1737c:	ldr	r1, [sp, #288]	; 0x120
   17380:	str	r2, [fp, #-252]	; 0xffffff04
   17384:	str	r0, [fp, #-256]	; 0xffffff00
   17388:	adds	r1, r3, r1
   1738c:	ldr	r3, [sp, #284]	; 0x11c
   17390:	adc	r5, r7, r3
   17394:	adds	r6, r1, r0
   17398:	ldr	r1, [sp, #136]	; 0x88
   1739c:	ldr	r7, [sp, #132]	; 0x84
   173a0:	ldr	r3, [sp, #128]	; 0x80
   173a4:	adc	r8, r5, r2
   173a8:	str	r1, [fp, #-180]	; 0xffffff4c
   173ac:	ldr	r1, [sp, #140]	; 0x8c
   173b0:	str	r1, [fp, #-184]	; 0xffffff48
   173b4:	ldr	r1, [sp, #44]	; 0x2c
   173b8:	str	r7, [fp, #-212]	; 0xffffff2c
   173bc:	str	r3, [fp, #-216]	; 0xffffff28
   173c0:	eor	r4, r8, r1
   173c4:	str	r1, [fp, #-172]	; 0xffffff54
   173c8:	ldr	r1, [sp, #84]	; 0x54
   173cc:	adds	r5, r4, r3
   173d0:	eor	r0, r5, r0
   173d4:	eor	ip, r6, r1
   173d8:	str	r1, [fp, #-176]	; 0xffffff50
   173dc:	adc	lr, ip, r7
   173e0:	lsl	r7, r0, #8
   173e4:	lsr	r0, r0, #24
   173e8:	eor	r2, lr, r2
   173ec:	orr	r1, r0, r2, lsl #8
   173f0:	ldr	r0, [sp, #272]	; 0x110
   173f4:	orr	r3, r7, r2, lsr #24
   173f8:	ldr	r2, [sp, #268]	; 0x10c
   173fc:	str	r1, [sp, #76]	; 0x4c
   17400:	str	r3, [sp, #72]	; 0x48
   17404:	adds	r0, r6, r0
   17408:	adc	r2, r8, r2
   1740c:	adds	r7, r0, r1
   17410:	ldr	r8, [sp, #164]	; 0xa4
   17414:	adc	r0, r2, r3
   17418:	eor	r1, r7, r4
   1741c:	str	r7, [sp, #84]	; 0x54
   17420:	ldr	r7, [sp, #124]	; 0x7c
   17424:	str	r0, [sp, #100]	; 0x64
   17428:	lsl	r2, r1, #16
   1742c:	eor	r0, r0, ip
   17430:	lsr	r1, r1, #16
   17434:	orr	r2, r2, r0, lsr #16
   17438:	orr	r0, r1, r0, lsl #16
   1743c:	ldr	r1, [sp, #12]
   17440:	adds	ip, r0, r5
   17444:	str	r0, [sp, #44]	; 0x2c
   17448:	str	r2, [sp, #36]	; 0x24
   1744c:	adc	r0, r2, lr
   17450:	ldr	r2, [sp, #28]
   17454:	str	ip, [sp]
   17458:	str	r0, [sp, #8]
   1745c:	ldr	r0, [sp, #80]	; 0x50
   17460:	eor	r0, r1, r0
   17464:	ldr	r1, [sp, #92]	; 0x5c
   17468:	lsl	r3, r0, #1
   1746c:	eor	r2, r2, r1
   17470:	ldr	r1, [sp, #240]	; 0xf0
   17474:	orr	r3, r3, r2, lsr #31
   17478:	lsl	r2, r2, #1
   1747c:	orr	r0, r2, r0, lsr #31
   17480:	ldr	r2, [sp, #96]	; 0x60
   17484:	adds	r2, r2, r1
   17488:	ldr	r1, [sp, #236]	; 0xec
   1748c:	adc	r7, r7, r1
   17490:	ldr	r1, [sp, #136]	; 0x88
   17494:	adds	r5, r2, r0
   17498:	ldr	r2, [sp, #140]	; 0x8c
   1749c:	adc	r7, r7, r3
   174a0:	eor	r1, r7, r1
   174a4:	eor	r2, r5, r2
   174a8:	adds	r6, r1, sl
   174ac:	adc	r4, r2, r9
   174b0:	ldr	r9, [sp, #168]	; 0xa8
   174b4:	eor	r0, r6, r0
   174b8:	str	r6, [sp, #64]	; 0x40
   174bc:	str	r4, [sp, #68]	; 0x44
   174c0:	eor	r3, r4, r3
   174c4:	lsl	r4, r0, #8
   174c8:	lsr	r0, r0, #24
   174cc:	orr	r6, r4, r3, lsr #24
   174d0:	orr	r4, r0, r3, lsl #8
   174d4:	str	r4, [sp, #140]	; 0x8c
   174d8:	str	r6, [sp, #40]	; 0x28
   174dc:	adds	r0, r5, r9
   174e0:	adc	r3, r7, r8
   174e4:	adds	r7, r0, r4
   174e8:	ldr	r4, [sp, #20]
   174ec:	adc	r0, r3, r6
   174f0:	eor	r1, r7, r1
   174f4:	ldr	r3, [sp, #24]
   174f8:	str	r7, [sp, #28]
   174fc:	ldr	r7, [sp, #8]
   17500:	str	r0, [sp, #96]	; 0x60
   17504:	eor	r0, r0, r2
   17508:	lsr	r2, r1, #16
   1750c:	lsl	r1, r1, #16
   17510:	orr	r1, r1, r0, lsr #16
   17514:	orr	r2, r2, r0, lsl #16
   17518:	ldr	r0, [sp, #152]	; 0x98
   1751c:	eor	lr, r4, r1
   17520:	str	r2, [sp, #4]
   17524:	str	r1, [sp, #12]
   17528:	eor	r2, r3, r2
   1752c:	adds	sl, lr, ip
   17530:	adc	r6, r2, r7
   17534:	str	r0, [fp, #-164]	; 0xffffff5c
   17538:	ldr	r0, [sp, #156]	; 0x9c
   1753c:	str	r0, [fp, #-168]	; 0xffffff58
   17540:	ldr	r0, [sp, #144]	; 0x90
   17544:	str	r0, [fp, #-208]	; 0xffffff30
   17548:	ldr	r0, [sp, #148]	; 0x94
   1754c:	str	r0, [fp, #-204]	; 0xffffff34
   17550:	ldr	r0, [sp, #16]
   17554:	str	r0, [fp, #-244]	; 0xffffff0c
   17558:	eor	r1, r6, r0
   1755c:	ldr	r0, [sp, #32]
   17560:	str	r0, [fp, #-248]	; 0xffffff08
   17564:	eor	r0, sl, r0
   17568:	lsl	r5, r0, #8
   1756c:	lsr	r0, r0, #24
   17570:	orr	r5, r5, r1, lsr #24
   17574:	orr	ip, r0, r1, lsl #8
   17578:	ldr	r1, [sp, #280]	; 0x118
   1757c:	adds	r1, r3, r1
   17580:	ldr	r3, [sp, #276]	; 0x114
   17584:	adc	r3, r4, r3
   17588:	adds	r0, r1, ip
   1758c:	adc	r1, r3, r5
   17590:	str	r0, [sp, #80]	; 0x50
   17594:	str	r1, [sp, #92]	; 0x5c
   17598:	eor	r1, r1, r2
   1759c:	eor	r2, r0, lr
   175a0:	lsl	r3, r2, #16
   175a4:	lsr	r2, r2, #16
   175a8:	orr	r3, r3, r1, lsr #16
   175ac:	orr	r1, r2, r1, lsl #16
   175b0:	adds	r2, r1, sl
   175b4:	str	r1, [sp, #136]	; 0x88
   175b8:	str	r3, [sp, #124]	; 0x7c
   175bc:	adc	r1, r3, r6
   175c0:	str	r2, [sp, #128]	; 0x80
   175c4:	eor	r0, r2, ip
   175c8:	ldr	r3, [sp, #120]	; 0x78
   175cc:	str	r1, [sp, #132]	; 0x84
   175d0:	eor	r1, r1, r5
   175d4:	ldr	r5, [sp, #52]	; 0x34
   175d8:	lsl	r2, r1, #1
   175dc:	orr	sl, r2, r0, lsr #31
   175e0:	lsl	r0, r0, #1
   175e4:	ldr	r2, [sp]
   175e8:	orr	lr, r0, r1, lsr #31
   175ec:	ldr	r0, [sp, #72]	; 0x48
   175f0:	ldr	r1, [sp, #76]	; 0x4c
   175f4:	str	sl, [sp, #20]
   175f8:	str	lr, [sp, #24]
   175fc:	eor	r0, r7, r0
   17600:	eor	r1, r2, r1
   17604:	ldr	r7, [sp, #12]
   17608:	lsl	r2, r0, #1
   1760c:	orr	r2, r2, r1, lsr #31
   17610:	lsl	r1, r1, #1
   17614:	orr	r1, r1, r0, lsr #31
   17618:	ldr	r0, [sp, #116]	; 0x74
   1761c:	adds	r0, r0, r9
   17620:	adc	r3, r3, r8
   17624:	adds	r6, r0, r1
   17628:	ldr	r0, [sp, #64]	; 0x40
   1762c:	adc	r9, r3, r2
   17630:	ldr	r3, [sp, #4]
   17634:	adds	r3, r3, r0
   17638:	ldr	r0, [sp, #68]	; 0x44
   1763c:	str	r3, [sp, #32]
   17640:	adc	r8, r7, r0
   17644:	ldr	r0, [sp, #56]	; 0x38
   17648:	ldr	r7, [sp, #48]	; 0x30
   1764c:	eor	r7, r7, r0
   17650:	ldr	r0, [sp, #60]	; 0x3c
   17654:	eor	r5, r5, r0
   17658:	lsr	r4, r5, #16
   1765c:	lsl	r5, r5, #16
   17660:	orr	ip, r4, r7, lsl #16
   17664:	orr	r7, r5, r7, lsr #16
   17668:	eor	r0, r9, r7
   1766c:	eor	r4, r6, ip
   17670:	adds	r5, r0, r3
   17674:	str	r0, [sp, #60]	; 0x3c
   17678:	str	r4, [sp, #56]	; 0x38
   1767c:	adc	r0, r4, r8
   17680:	eor	r1, r5, r1
   17684:	str	r5, [sp, #72]	; 0x48
   17688:	str	r0, [sp, #76]	; 0x4c
   1768c:	eor	r2, r0, r2
   17690:	ldr	r0, [sp, #200]	; 0xc8
   17694:	lsl	r5, r1, #8
   17698:	lsr	r1, r1, #24
   1769c:	orr	r4, r1, r2, lsl #8
   176a0:	orr	r5, r5, r2, lsr #24
   176a4:	str	r4, [sp, #68]	; 0x44
   176a8:	str	r5, [sp, #64]	; 0x40
   176ac:	adds	r1, r6, r0
   176b0:	ldr	r0, [sp, #196]	; 0xc4
   176b4:	adc	r2, r9, r0
   176b8:	ldr	r0, [sp, #224]	; 0xe0
   176bc:	adds	r3, r1, r4
   176c0:	adc	r4, r2, r5
   176c4:	str	r3, [sp, #52]	; 0x34
   176c8:	str	r4, [sp, #48]	; 0x30
   176cc:	adds	r1, lr, r0
   176d0:	ldr	r0, [sp, #220]	; 0xdc
   176d4:	adc	r2, sl, r0
   176d8:	adds	r0, r1, r3
   176dc:	ldr	r1, [sp, #28]
   176e0:	str	r0, [sp, #120]	; 0x78
   176e4:	adc	r0, r2, r4
   176e8:	str	r0, [sp, #116]	; 0x74
   176ec:	ldr	r0, [sp, #108]	; 0x6c
   176f0:	adds	r9, ip, r0
   176f4:	ldr	r0, [sp, #112]	; 0x70
   176f8:	str	r9, [fp, #-200]	; 0xffffff38
   176fc:	adc	r6, r7, r0
   17700:	ldr	r0, [sp, #88]	; 0x58
   17704:	str	r6, [fp, #-196]	; 0xffffff3c
   17708:	eor	r2, r6, r0
   1770c:	ldr	r0, [sp, #104]	; 0x68
   17710:	lsl	r7, r2, #1
   17714:	eor	r3, r9, r0
   17718:	ldr	r0, [sp, #248]	; 0xf8
   1771c:	orr	r7, r7, r3, lsr #31
   17720:	lsl	r3, r3, #1
   17724:	orr	r2, r3, r2, lsr #31
   17728:	str	r7, [fp, #-236]	; 0xffffff14
   1772c:	str	r2, [fp, #-240]	; 0xffffff10
   17730:	adds	r3, r1, r0
   17734:	ldr	r0, [sp, #244]	; 0xf4
   17738:	ldr	r1, [sp, #96]	; 0x60
   1773c:	adc	r5, r1, r0
   17740:	ldr	r0, [sp, #36]	; 0x24
   17744:	adds	r3, r3, r2
   17748:	ldr	r1, [sp, #144]	; 0x90
   1774c:	adc	ip, r5, r7
   17750:	ldr	r5, [sp, #148]	; 0x94
   17754:	eor	sl, r0, ip
   17758:	ldr	r0, [sp, #44]	; 0x2c
   1775c:	adds	r1, sl, r1
   17760:	eor	r2, r1, r2
   17764:	eor	r0, r0, r3
   17768:	adc	lr, r0, r5
   1776c:	eor	r5, lr, r7
   17770:	lsl	r7, r2, #8
   17774:	lsr	r2, r2, #24
   17778:	orr	r4, r7, r5, lsr #24
   1777c:	orr	r5, r2, r5, lsl #8
   17780:	ldr	r2, [sp, #184]	; 0xb8
   17784:	str	r4, [sp, #108]	; 0x6c
   17788:	str	r5, [sp, #112]	; 0x70
   1778c:	adds	r2, r3, r2
   17790:	ldr	r3, [sp, #180]	; 0xb4
   17794:	adc	r3, ip, r3
   17798:	adds	r7, r2, r5
   1779c:	adc	r2, r3, r4
   177a0:	str	r7, [sp, #96]	; 0x60
   177a4:	ldr	r4, [sp, #292]	; 0x124
   177a8:	str	r2, [sp, #148]	; 0x94
   177ac:	eor	r0, r2, r0
   177b0:	eor	r2, r7, sl
   177b4:	ldr	r7, [sp, #84]	; 0x54
   177b8:	lsl	r3, r2, #16
   177bc:	lsr	r2, r2, #16
   177c0:	orr	r3, r3, r0, lsr #16
   177c4:	orr	r0, r2, r0, lsl #16
   177c8:	ldr	r2, [sp, #32]
   177cc:	adds	ip, r0, r1
   177d0:	str	r0, [sp, #44]	; 0x2c
   177d4:	ldr	r0, [sp, #40]	; 0x28
   177d8:	ldr	r1, [sp, #140]	; 0x8c
   177dc:	str	r3, [sp, #36]	; 0x24
   177e0:	adc	lr, r3, lr
   177e4:	str	ip, [sp, #16]
   177e8:	str	lr, [sp, #12]
   177ec:	eor	r0, r8, r0
   177f0:	eor	r3, r2, r1
   177f4:	lsl	r2, r0, #1
   177f8:	orr	r1, r2, r3, lsr #31
   177fc:	lsl	r2, r3, #1
   17800:	ldr	r3, [sp, #232]	; 0xe8
   17804:	orr	r0, r2, r0, lsr #31
   17808:	ldr	r2, [sp, #228]	; 0xe4
   1780c:	strd	r0, [r4]
   17810:	ldr	r4, [sp, #116]	; 0x74
   17814:	adds	r2, r0, r2
   17818:	adc	r3, r1, r3
   1781c:	adds	r7, r2, r7
   17820:	ldr	r2, [sp, #100]	; 0x64
   17824:	adc	r2, r3, r2
   17828:	ldr	r3, [sp, #152]	; 0x98
   1782c:	eor	r8, r2, r3
   17830:	ldr	r3, [sp, #156]	; 0x9c
   17834:	adds	r5, r8, r9
   17838:	eor	r0, r5, r0
   1783c:	str	r5, [sp, #88]	; 0x58
   17840:	eor	r3, r7, r3
   17844:	adc	r6, r3, r6
   17848:	str	r6, [sp, #104]	; 0x68
   1784c:	eor	r6, r6, r1
   17850:	lsl	r1, r0, #8
   17854:	lsr	r0, r0, #24
   17858:	orr	r5, r1, r6, lsr #24
   1785c:	orr	r6, r0, r6, lsl #8
   17860:	ldr	r0, [sp, #240]	; 0xf0
   17864:	ldr	r1, [sp, #236]	; 0xec
   17868:	str	r5, [sp, #32]
   1786c:	str	r6, [sp, #40]	; 0x28
   17870:	adds	r0, r7, r0
   17874:	adc	r1, r2, r1
   17878:	adds	r2, r0, r6
   1787c:	adc	r0, r1, r5
   17880:	str	r2, [sp, #84]	; 0x54
   17884:	str	r0, [sp, #100]	; 0x64
   17888:	eor	r0, r0, r3
   1788c:	eor	r3, r2, r8
   17890:	ldr	r2, [sp, #120]	; 0x78
   17894:	lsr	r1, r3, #16
   17898:	lsl	r3, r3, #16
   1789c:	orr	r5, r3, r0, lsr #16
   178a0:	orr	r9, r1, r0, lsl #16
   178a4:	ldr	r0, [sp, #20]
   178a8:	eor	r3, r4, r5
   178ac:	eor	r7, r2, r9
   178b0:	adds	r8, r3, ip
   178b4:	adc	lr, r7, lr
   178b8:	eor	r1, lr, r0
   178bc:	ldr	r0, [sp, #24]
   178c0:	eor	r0, r8, r0
   178c4:	lsl	r6, r0, #8
   178c8:	lsr	r0, r0, #24
   178cc:	orr	r6, r6, r1, lsr #24
   178d0:	orr	ip, r0, r1, lsl #8
   178d4:	ldr	r1, [sp, #288]	; 0x120
   178d8:	adds	r1, r2, r1
   178dc:	ldr	r2, [sp, #284]	; 0x11c
   178e0:	adc	r2, r4, r2
   178e4:	adds	r0, r1, ip
   178e8:	adc	r1, r2, r6
   178ec:	eor	r2, r0, r3
   178f0:	str	r0, [sp, #116]	; 0x74
   178f4:	str	r1, [sp, #120]	; 0x78
   178f8:	eor	r1, r1, r7
   178fc:	lsl	r3, r2, #16
   17900:	lsr	r2, r2, #16
   17904:	ldr	r7, [sp, #92]	; 0x5c
   17908:	orr	r3, r3, r1, lsr #16
   1790c:	orr	r1, r2, r1, lsl #16
   17910:	adds	r2, r1, r8
   17914:	str	r1, [sp, #156]	; 0x9c
   17918:	str	r3, [sp, #152]	; 0x98
   1791c:	adc	r1, r3, lr
   17920:	str	r2, [sp, #140]	; 0x8c
   17924:	eor	r0, r2, ip
   17928:	ldr	r3, [sp, #80]	; 0x50
   1792c:	str	r1, [sp, #144]	; 0x90
   17930:	eor	r1, r1, r6
   17934:	lsl	r2, r1, #1
   17938:	orr	sl, r2, r0, lsr #31
   1793c:	lsl	r0, r0, #1
   17940:	ldr	r2, [sp, #16]
   17944:	orr	r8, r0, r1, lsr #31
   17948:	ldr	r0, [sp, #108]	; 0x6c
   1794c:	ldr	r1, [sp, #12]
   17950:	str	sl, [sp, #24]
   17954:	str	r8, [sp, #28]
   17958:	eor	r0, r1, r0
   1795c:	ldr	r1, [sp, #112]	; 0x70
   17960:	eor	r1, r2, r1
   17964:	lsl	r2, r0, #1
   17968:	orr	r2, r2, r1, lsr #31
   1796c:	lsl	r1, r1, #1
   17970:	orr	ip, r1, r0, lsr #31
   17974:	ldr	r0, [sp, #264]	; 0x108
   17978:	adds	r0, r3, r0
   1797c:	ldr	r3, [sp, #260]	; 0x104
   17980:	adc	r3, r7, r3
   17984:	adds	lr, r0, ip
   17988:	ldr	r0, [sp, #88]	; 0x58
   1798c:	adc	r6, r3, r2
   17990:	ldr	r3, [sp, #48]	; 0x30
   17994:	adds	r1, r9, r0
   17998:	ldr	r0, [sp, #104]	; 0x68
   1799c:	str	r1, [sp, #20]
   179a0:	adc	r9, r5, r0
   179a4:	ldr	r0, [sp, #56]	; 0x38
   179a8:	str	r9, [sp, #16]
   179ac:	eor	r5, r3, r0
   179b0:	ldr	r0, [sp, #60]	; 0x3c
   179b4:	ldr	r3, [sp, #52]	; 0x34
   179b8:	eor	r4, r3, r0
   179bc:	lsr	r7, r4, #16
   179c0:	lsl	r4, r4, #16
   179c4:	orr	r4, r4, r5, lsr #16
   179c8:	orr	r7, r7, r5, lsl #16
   179cc:	eor	r0, r4, r6
   179d0:	eor	r3, r7, lr
   179d4:	str	r7, [fp, #-192]	; 0xffffff40
   179d8:	str	r4, [fp, #-188]	; 0xffffff44
   179dc:	str	r0, [sp, #60]	; 0x3c
   179e0:	adds	r0, r0, r1
   179e4:	str	r3, [sp, #56]	; 0x38
   179e8:	str	r0, [sp, #108]	; 0x6c
   179ec:	eor	r1, r0, ip
   179f0:	ldr	r0, [sp, #192]	; 0xc0
   179f4:	adc	r5, r3, r9
   179f8:	str	r5, [sp, #112]	; 0x70
   179fc:	eor	r2, r5, r2
   17a00:	lsl	r5, r1, #8
   17a04:	lsr	r1, r1, #24
   17a08:	orr	r3, r1, r2, lsl #8
   17a0c:	orr	r5, r5, r2, lsr #24
   17a10:	str	r3, [sp, #104]	; 0x68
   17a14:	str	r5, [sp, #88]	; 0x58
   17a18:	adds	r1, lr, r0
   17a1c:	ldr	r0, [sp, #188]	; 0xbc
   17a20:	adc	r2, r6, r0
   17a24:	adds	r0, r1, r3
   17a28:	ldr	r1, [sp, #240]	; 0xf0
   17a2c:	ldr	r3, [sp, #128]	; 0x80
   17a30:	adc	r2, r2, r5
   17a34:	str	r0, [sp, #52]	; 0x34
   17a38:	str	r2, [sp, #48]	; 0x30
   17a3c:	adds	r1, r0, r1
   17a40:	ldr	r0, [sp, #236]	; 0xec
   17a44:	adc	r2, r2, r0
   17a48:	adds	r0, r1, r8
   17a4c:	ldr	r1, [sp, #84]	; 0x54
   17a50:	str	r0, [sp, #92]	; 0x5c
   17a54:	adc	r0, r2, sl
   17a58:	ldr	sl, [sp, #124]	; 0x7c
   17a5c:	str	r0, [sp, #80]	; 0x50
   17a60:	ldr	r0, [sp, #72]	; 0x48
   17a64:	adds	r9, r7, r0
   17a68:	ldr	r0, [sp, #76]	; 0x4c
   17a6c:	str	r9, [fp, #-224]	; 0xffffff20
   17a70:	adc	lr, r4, r0
   17a74:	ldr	r0, [sp, #64]	; 0x40
   17a78:	str	lr, [fp, #-220]	; 0xffffff24
   17a7c:	eor	r2, lr, r0
   17a80:	ldr	r0, [sp, #68]	; 0x44
   17a84:	lsl	r6, r2, #1
   17a88:	eor	r7, r9, r0
   17a8c:	ldr	r0, [sp, #272]	; 0x110
   17a90:	orr	r6, r6, r7, lsr #31
   17a94:	lsl	r7, r7, #1
   17a98:	orr	r2, r7, r2, lsr #31
   17a9c:	str	r6, [fp, #-252]	; 0xffffff04
   17aa0:	str	r2, [fp, #-256]	; 0xffffff00
   17aa4:	str	sl, [fp, #-180]	; 0xffffff4c
   17aa8:	adds	r7, r1, r0
   17aac:	ldr	r0, [sp, #268]	; 0x10c
   17ab0:	ldr	r1, [sp, #100]	; 0x64
   17ab4:	adc	r4, r1, r0
   17ab8:	ldr	r0, [sp, #136]	; 0x88
   17abc:	ldr	r1, [sp, #132]	; 0x84
   17ac0:	adds	r7, r7, r2
   17ac4:	adc	r8, r4, r6
   17ac8:	str	r0, [fp, #-184]	; 0xffffff48
   17acc:	ldr	r0, [sp, #36]	; 0x24
   17ad0:	str	r1, [fp, #-212]	; 0xffffff2c
   17ad4:	str	r3, [fp, #-216]	; 0xffffff28
   17ad8:	eor	r5, r8, r0
   17adc:	str	r0, [fp, #-172]	; 0xffffff54
   17ae0:	ldr	r0, [sp, #44]	; 0x2c
   17ae4:	adds	r4, r5, r3
   17ae8:	eor	r2, r4, r2
   17aec:	lsl	r3, r2, #8
   17af0:	lsr	r2, r2, #24
   17af4:	eor	ip, r7, r0
   17af8:	str	r0, [fp, #-176]	; 0xffffff50
   17afc:	adc	r1, ip, r1
   17b00:	eor	r6, r1, r6
   17b04:	orr	r0, r3, r6, lsr #24
   17b08:	orr	r3, r2, r6, lsl #8
   17b0c:	ldr	r2, [sp, #208]	; 0xd0
   17b10:	str	r3, [sp, #76]	; 0x4c
   17b14:	str	r0, [sp, #72]	; 0x48
   17b18:	adds	r7, r7, r2
   17b1c:	ldr	r2, [sp, #204]	; 0xcc
   17b20:	adc	r6, r8, r2
   17b24:	adds	r2, r7, r3
   17b28:	adc	r3, r6, r0
   17b2c:	str	r2, [sp, #84]	; 0x54
   17b30:	str	r3, [sp, #100]	; 0x64
   17b34:	eor	r0, r3, ip
   17b38:	eor	r3, r2, r5
   17b3c:	lsl	r5, r3, #16
   17b40:	lsr	r3, r3, #16
   17b44:	orr	r2, r5, r0, lsr #16
   17b48:	orr	r0, r3, r0, lsl #16
   17b4c:	adds	ip, r0, r4
   17b50:	str	r0, [sp, #44]	; 0x2c
   17b54:	str	r2, [sp, #36]	; 0x24
   17b58:	adc	r0, r2, r1
   17b5c:	ldr	r1, [sp, #16]
   17b60:	ldr	r2, [sp, #20]
   17b64:	str	ip, [sp, #8]
   17b68:	str	r0, [sp, #12]
   17b6c:	ldr	r0, [sp, #32]
   17b70:	eor	r0, r1, r0
   17b74:	ldr	r1, [sp, #40]	; 0x28
   17b78:	lsl	r3, r0, #1
   17b7c:	eor	r1, r2, r1
   17b80:	ldr	r2, [sp, #148]	; 0x94
   17b84:	orr	r3, r3, r1, lsr #31
   17b88:	lsl	r1, r1, #1
   17b8c:	orr	r5, r1, r0, lsr #31
   17b90:	ldr	r0, [sp, #176]	; 0xb0
   17b94:	ldr	r1, [sp, #96]	; 0x60
   17b98:	adds	r0, r1, r0
   17b9c:	ldr	r1, [sp, #172]	; 0xac
   17ba0:	adc	r1, r2, r1
   17ba4:	adds	r6, r0, r5
   17ba8:	adc	r7, r1, r3
   17bac:	ldr	r1, [sp, #136]	; 0x88
   17bb0:	eor	r0, r7, sl
   17bb4:	adds	r2, r0, r9
   17bb8:	eor	r5, r2, r5
   17bbc:	str	r2, [sp, #64]	; 0x40
   17bc0:	eor	r1, r6, r1
   17bc4:	lsl	r2, r5, #8
   17bc8:	adc	r4, r1, lr
   17bcc:	eor	r3, r4, r3
   17bd0:	str	r4, [sp, #68]	; 0x44
   17bd4:	orr	r4, r2, r3, lsr #24
   17bd8:	lsr	r2, r5, #24
   17bdc:	ldr	r5, [sp, #212]	; 0xd4
   17be0:	orr	r2, r2, r3, lsl #8
   17be4:	ldr	r3, [sp, #216]	; 0xd8
   17be8:	str	r4, [sp, #32]
   17bec:	str	r2, [sp, #40]	; 0x28
   17bf0:	adds	r6, r6, r3
   17bf4:	adc	r7, r7, r5
   17bf8:	adds	r2, r6, r2
   17bfc:	adc	r7, r7, r4
   17c00:	eor	r0, r2, r0
   17c04:	str	r2, [sp, #96]	; 0x60
   17c08:	ldr	r4, [sp, #80]	; 0x50
   17c0c:	lsr	r2, r0, #16
   17c10:	eor	r1, r7, r1
   17c14:	lsl	r0, r0, #16
   17c18:	str	r7, [sp, #124]	; 0x7c
   17c1c:	orr	sl, r0, r1, lsr #16
   17c20:	ldr	r0, [sp, #152]	; 0x98
   17c24:	orr	r6, r2, r1, lsl #16
   17c28:	ldr	r2, [sp, #92]	; 0x5c
   17c2c:	str	r6, [sp, #20]
   17c30:	eor	lr, r4, sl
   17c34:	adds	r8, lr, ip
   17c38:	str	r0, [fp, #-164]	; 0xffffff5c
   17c3c:	ldr	r0, [sp, #156]	; 0x9c
   17c40:	eor	r1, r2, r6
   17c44:	ldr	r6, [sp, #12]
   17c48:	str	r0, [fp, #-168]	; 0xffffff58
   17c4c:	ldr	r0, [sp, #140]	; 0x8c
   17c50:	adc	ip, r1, r6
   17c54:	str	r0, [fp, #-208]	; 0xffffff30
   17c58:	ldr	r0, [sp, #144]	; 0x90
   17c5c:	str	r0, [fp, #-204]	; 0xffffff34
   17c60:	ldr	r0, [sp, #24]
   17c64:	str	r0, [fp, #-244]	; 0xffffff0c
   17c68:	eor	r7, ip, r0
   17c6c:	ldr	r0, [sp, #28]
   17c70:	str	r0, [fp, #-248]	; 0xffffff08
   17c74:	eor	r0, r8, r0
   17c78:	lsl	r9, r0, #8
   17c7c:	lsr	r0, r0, #24
   17c80:	orr	r9, r9, r7, lsr #24
   17c84:	orr	r0, r0, r7, lsl #8
   17c88:	adds	r7, r2, r3
   17c8c:	adc	r2, r4, r5
   17c90:	adds	r3, r7, r0
   17c94:	ldr	r7, [sp, #120]	; 0x78
   17c98:	adc	r2, r2, r9
   17c9c:	str	r3, [sp, #80]	; 0x50
   17ca0:	str	r2, [sp, #92]	; 0x5c
   17ca4:	eor	r1, r2, r1
   17ca8:	eor	r2, r3, lr
   17cac:	lsl	r3, r2, #16
   17cb0:	lsr	r2, r2, #16
   17cb4:	orr	r3, r3, r1, lsr #16
   17cb8:	orr	r1, r2, r1, lsl #16
   17cbc:	adds	r2, r1, r8
   17cc0:	str	r1, [sp, #136]	; 0x88
   17cc4:	str	r3, [sp, #148]	; 0x94
   17cc8:	adc	r1, r3, ip
   17ccc:	str	r2, [sp, #128]	; 0x80
   17cd0:	eor	r0, r2, r0
   17cd4:	str	r1, [sp, #132]	; 0x84
   17cd8:	eor	r1, r1, r9
   17cdc:	lsl	r2, r1, #1
   17ce0:	orr	r8, r2, r0, lsr #31
   17ce4:	lsl	r0, r0, #1
   17ce8:	ldr	r2, [sp, #8]
   17cec:	orr	lr, r0, r1, lsr #31
   17cf0:	ldr	r0, [sp, #72]	; 0x48
   17cf4:	ldr	r1, [sp, #76]	; 0x4c
   17cf8:	str	r8, [sp, #24]
   17cfc:	str	lr, [sp, #28]
   17d00:	eor	r0, r6, r0
   17d04:	eor	r1, r2, r1
   17d08:	ldr	r6, [sp, #48]	; 0x30
   17d0c:	lsl	r2, r0, #1
   17d10:	orr	r3, r2, r1, lsr #31
   17d14:	lsl	r1, r1, #1
   17d18:	ldr	r2, [sp, #116]	; 0x74
   17d1c:	orr	r0, r1, r0, lsr #31
   17d20:	ldr	r1, [sp, #272]	; 0x110
   17d24:	adds	r1, r2, r1
   17d28:	ldr	r2, [sp, #268]	; 0x10c
   17d2c:	adc	r2, r7, r2
   17d30:	adds	ip, r1, r0
   17d34:	ldr	r1, [sp, #20]
   17d38:	adc	r7, r2, r3
   17d3c:	ldr	r2, [sp, #64]	; 0x40
   17d40:	adds	r1, r1, r2
   17d44:	ldr	r2, [sp, #68]	; 0x44
   17d48:	str	r1, [sp, #20]
   17d4c:	adc	r9, sl, r2
   17d50:	ldr	r2, [sp, #56]	; 0x38
   17d54:	eor	r5, r6, r2
   17d58:	ldr	r2, [sp, #60]	; 0x3c
   17d5c:	ldr	r6, [sp, #52]	; 0x34
   17d60:	eor	r4, r6, r2
   17d64:	lsr	r2, r4, #16
   17d68:	lsl	r4, r4, #16
   17d6c:	orr	sl, r2, r5, lsl #16
   17d70:	orr	r5, r4, r5, lsr #16
   17d74:	eor	r6, r7, r5
   17d78:	eor	r2, ip, sl
   17d7c:	adds	r4, r6, r1
   17d80:	str	r6, [sp, #60]	; 0x3c
   17d84:	ldr	r1, [sp, #284]	; 0x11c
   17d88:	str	r2, [sp, #56]	; 0x38
   17d8c:	adc	r6, r2, r9
   17d90:	eor	r0, r4, r0
   17d94:	str	r4, [sp, #72]	; 0x48
   17d98:	lsl	r4, r0, #8
   17d9c:	eor	r3, r6, r3
   17da0:	lsr	r0, r0, #24
   17da4:	str	r6, [sp, #76]	; 0x4c
   17da8:	orr	r6, r4, r3, lsr #24
   17dac:	orr	r3, r0, r3, lsl #8
   17db0:	ldr	r0, [sp, #288]	; 0x120
   17db4:	str	r3, [sp, #68]	; 0x44
   17db8:	str	r6, [sp, #64]	; 0x40
   17dbc:	adds	r0, ip, r0
   17dc0:	adc	r1, r7, r1
   17dc4:	adds	r2, r0, r3
   17dc8:	ldr	r0, [sp, #200]	; 0xc8
   17dcc:	adc	r3, r1, r6
   17dd0:	ldr	r1, [sp, #196]	; 0xc4
   17dd4:	str	r2, [sp, #52]	; 0x34
   17dd8:	str	r3, [sp, #48]	; 0x30
   17ddc:	adds	r0, lr, r0
   17de0:	adc	r1, r8, r1
   17de4:	adds	r0, r0, r2
   17de8:	str	r0, [sp, #120]	; 0x78
   17dec:	adc	r0, r1, r3
   17df0:	ldr	r1, [sp, #96]	; 0x60
   17df4:	str	r0, [sp, #116]	; 0x74
   17df8:	ldr	r0, [sp, #108]	; 0x6c
   17dfc:	adds	r6, sl, r0
   17e00:	ldr	r0, [sp, #112]	; 0x70
   17e04:	str	r6, [fp, #-200]	; 0xffffff38
   17e08:	adc	r7, r5, r0
   17e0c:	ldr	r0, [sp, #88]	; 0x58
   17e10:	str	r7, [fp, #-196]	; 0xffffff3c
   17e14:	eor	r2, r7, r0
   17e18:	ldr	r0, [sp, #104]	; 0x68
   17e1c:	lsl	r5, r2, #1
   17e20:	eor	r3, r6, r0
   17e24:	ldr	r0, [sp, #192]	; 0xc0
   17e28:	orr	r5, r5, r3, lsr #31
   17e2c:	lsl	r3, r3, #1
   17e30:	orr	r2, r3, r2, lsr #31
   17e34:	str	r5, [fp, #-236]	; 0xffffff14
   17e38:	str	r2, [fp, #-240]	; 0xffffff10
   17e3c:	adds	r3, r1, r0
   17e40:	ldr	r0, [sp, #188]	; 0xbc
   17e44:	ldr	r1, [sp, #124]	; 0x7c
   17e48:	adc	r4, r1, r0
   17e4c:	ldr	r0, [sp, #36]	; 0x24
   17e50:	adds	r3, r3, r2
   17e54:	ldr	r1, [sp, #144]	; 0x90
   17e58:	adc	ip, r4, r5
   17e5c:	eor	lr, r0, ip
   17e60:	ldr	r0, [sp, #44]	; 0x2c
   17e64:	eor	sl, r0, r3
   17e68:	ldr	r0, [sp, #140]	; 0x8c
   17e6c:	adds	r8, lr, r0
   17e70:	adc	r1, sl, r1
   17e74:	eor	r2, r8, r2
   17e78:	eor	r4, r1, r5
   17e7c:	lsl	r5, r2, #8
   17e80:	lsr	r2, r2, #24
   17e84:	orr	r0, r5, r4, lsr #24
   17e88:	orr	r4, r2, r4, lsl #8
   17e8c:	ldr	r2, [sp, #168]	; 0xa8
   17e90:	str	r0, [sp, #108]	; 0x6c
   17e94:	str	r4, [sp, #112]	; 0x70
   17e98:	adds	r2, r3, r2
   17e9c:	ldr	r3, [sp, #164]	; 0xa4
   17ea0:	adc	r3, ip, r3
   17ea4:	adds	r5, r2, r4
   17ea8:	adc	r2, r3, r0
   17eac:	eor	r3, r5, lr
   17eb0:	str	r5, [sp, #96]	; 0x60
   17eb4:	ldr	r0, [sp, #32]
   17eb8:	str	r2, [sp, #124]	; 0x7c
   17ebc:	lsl	r5, r3, #16
   17ec0:	eor	r2, r2, sl
   17ec4:	lsr	r3, r3, #16
   17ec8:	orr	r5, r5, r2, lsr #16
   17ecc:	orr	r2, r3, r2, lsl #16
   17ed0:	ldr	r3, [sp, #84]	; 0x54
   17ed4:	adds	sl, r2, r8
   17ed8:	str	r2, [sp, #44]	; 0x2c
   17edc:	ldr	r2, [sp, #20]
   17ee0:	str	r5, [sp, #36]	; 0x24
   17ee4:	adc	lr, r5, r1
   17ee8:	ldr	r1, [sp, #40]	; 0x28
   17eec:	eor	r0, r9, r0
   17ef0:	str	sl, [sp, #12]
   17ef4:	eor	r1, r2, r1
   17ef8:	lsl	r2, r0, #1
   17efc:	orr	r5, r2, r1, lsr #31
   17f00:	lsl	r1, r1, #1
   17f04:	ldr	r2, [sp, #172]	; 0xac
   17f08:	orr	r0, r1, r0, lsr #31
   17f0c:	ldr	r1, [sp, #176]	; 0xb0
   17f10:	adds	r1, r0, r1
   17f14:	adc	r2, r5, r2
   17f18:	adds	r1, r1, r3
   17f1c:	ldr	r3, [sp, #100]	; 0x64
   17f20:	adc	r3, r2, r3
   17f24:	ldr	r2, [sp, #152]	; 0x98
   17f28:	eor	r8, r3, r2
   17f2c:	ldr	r2, [sp, #156]	; 0x9c
   17f30:	adds	r4, r8, r6
   17f34:	str	r4, [sp, #88]	; 0x58
   17f38:	eor	r9, r1, r2
   17f3c:	adc	r2, r9, r7
   17f40:	str	r2, [sp, #104]	; 0x68
   17f44:	eor	r6, r2, r5
   17f48:	ldr	r2, [sp, #292]	; 0x124
   17f4c:	stm	r2, {r0, r5}
   17f50:	eor	r0, r4, r0
   17f54:	lsl	r5, r0, #8
   17f58:	lsr	r0, r0, #24
   17f5c:	orr	r2, r5, r6, lsr #24
   17f60:	orr	r6, r0, r6, lsl #8
   17f64:	ldr	r0, [sp, #208]	; 0xd0
   17f68:	str	r2, [sp, #32]
   17f6c:	str	r6, [sp, #40]	; 0x28
   17f70:	adds	r0, r1, r0
   17f74:	ldr	r1, [sp, #204]	; 0xcc
   17f78:	adc	r1, r3, r1
   17f7c:	adds	r3, r0, r6
   17f80:	adc	r0, r1, r2
   17f84:	ldr	r2, [sp, #116]	; 0x74
   17f88:	eor	r5, r3, r8
   17f8c:	str	r3, [sp, #84]	; 0x54
   17f90:	ldr	r3, [sp, #120]	; 0x78
   17f94:	str	r0, [sp, #100]	; 0x64
   17f98:	lsr	r1, r5, #16
   17f9c:	eor	r0, r0, r9
   17fa0:	lsl	r5, r5, #16
   17fa4:	orr	r7, r5, r0, lsr #16
   17fa8:	orr	r9, r1, r0, lsl #16
   17fac:	ldr	r0, [sp, #24]
   17fb0:	eor	r5, r2, r7
   17fb4:	eor	ip, r3, r9
   17fb8:	adds	r8, r5, sl
   17fbc:	mov	sl, lr
   17fc0:	adc	r4, ip, lr
   17fc4:	eor	r1, r4, r0
   17fc8:	ldr	r0, [sp, #28]
   17fcc:	eor	r0, r8, r0
   17fd0:	lsl	r6, r0, #8
   17fd4:	lsr	r0, r0, #24
   17fd8:	orr	r6, r6, r1, lsr #24
   17fdc:	orr	lr, r0, r1, lsl #8
   17fe0:	ldr	r1, [sp, #248]	; 0xf8
   17fe4:	adds	r1, r3, r1
   17fe8:	ldr	r3, [sp, #244]	; 0xf4
   17fec:	adc	r3, r2, r3
   17ff0:	adds	r0, r1, lr
   17ff4:	adc	r1, r3, r6
   17ff8:	eor	r2, r0, r5
   17ffc:	str	r0, [sp, #116]	; 0x74
   18000:	str	r1, [sp, #120]	; 0x78
   18004:	lsl	r3, r2, #16
   18008:	eor	r1, r1, ip
   1800c:	lsr	r2, r2, #16
   18010:	orr	r3, r3, r1, lsr #16
   18014:	orr	r1, r2, r1, lsl #16
   18018:	adds	r2, r1, r8
   1801c:	str	r1, [sp, #156]	; 0x9c
   18020:	str	r3, [sp, #152]	; 0x98
   18024:	adc	r1, r3, r4
   18028:	str	r2, [sp, #140]	; 0x8c
   1802c:	eor	r0, r2, lr
   18030:	ldr	r3, [sp, #80]	; 0x50
   18034:	str	r1, [sp, #144]	; 0x90
   18038:	eor	r1, r1, r6
   1803c:	ldr	r6, [sp, #92]	; 0x5c
   18040:	lsl	r2, r1, #1
   18044:	orr	r8, r2, r0, lsr #31
   18048:	lsl	r0, r0, #1
   1804c:	ldr	r2, [sp, #12]
   18050:	orr	lr, r0, r1, lsr #31
   18054:	ldr	r0, [sp, #108]	; 0x6c
   18058:	ldr	r1, [sp, #112]	; 0x70
   1805c:	str	r8, [sp, #16]
   18060:	str	lr, [sp, #24]
   18064:	eor	r0, sl, r0
   18068:	eor	r1, r2, r1
   1806c:	lsl	r2, r0, #1
   18070:	orr	r2, r2, r1, lsr #31
   18074:	lsl	r1, r1, #1
   18078:	orr	r0, r1, r0, lsr #31
   1807c:	ldr	r1, [sp, #280]	; 0x118
   18080:	adds	r1, r3, r1
   18084:	ldr	r3, [sp, #276]	; 0x114
   18088:	adc	r3, r6, r3
   1808c:	adds	sl, r1, r0
   18090:	ldr	r1, [sp, #88]	; 0x58
   18094:	adc	ip, r3, r2
   18098:	ldr	r3, [sp, #48]	; 0x30
   1809c:	adds	r4, r9, r1
   180a0:	ldr	r1, [sp, #104]	; 0x68
   180a4:	str	r4, [sp, #20]
   180a8:	adc	r6, r7, r1
   180ac:	ldr	r1, [sp, #56]	; 0x38
   180b0:	str	r6, [sp, #12]
   180b4:	eor	r7, r3, r1
   180b8:	ldr	r1, [sp, #60]	; 0x3c
   180bc:	ldr	r3, [sp, #52]	; 0x34
   180c0:	eor	r5, r3, r1
   180c4:	lsr	r1, r5, #16
   180c8:	lsl	r5, r5, #16
   180cc:	orr	r1, r1, r7, lsl #16
   180d0:	orr	r7, r5, r7, lsr #16
   180d4:	eor	r5, r7, ip
   180d8:	eor	r3, r1, sl
   180dc:	str	r1, [fp, #-192]	; 0xffffff40
   180e0:	str	r7, [fp, #-188]	; 0xffffff44
   180e4:	str	r5, [sp, #60]	; 0x3c
   180e8:	adds	r5, r5, r4
   180ec:	str	r3, [sp, #56]	; 0x38
   180f0:	adc	r4, r3, r6
   180f4:	eor	r0, r5, r0
   180f8:	str	r5, [sp, #108]	; 0x6c
   180fc:	lsl	r5, r0, #8
   18100:	eor	r2, r4, r2
   18104:	lsr	r0, r0, #24
   18108:	str	r4, [sp, #112]	; 0x70
   1810c:	orr	r4, r0, r2, lsl #8
   18110:	ldr	r0, [sp, #256]	; 0x100
   18114:	orr	r5, r5, r2, lsr #24
   18118:	ldr	r2, [sp, #252]	; 0xfc
   1811c:	str	r4, [sp, #104]	; 0x68
   18120:	str	r5, [sp, #88]	; 0x58
   18124:	adds	r0, sl, r0
   18128:	adc	r2, ip, r2
   1812c:	adds	r3, r0, r4
   18130:	ldr	r0, [sp, #288]	; 0x120
   18134:	adc	r6, r2, r5
   18138:	ldr	r2, [sp, #284]	; 0x11c
   1813c:	str	r3, [sp, #52]	; 0x34
   18140:	str	r6, [sp, #48]	; 0x30
   18144:	adds	r0, r3, r0
   18148:	adc	r2, r6, r2
   1814c:	adds	r0, r0, lr
   18150:	str	r0, [sp, #92]	; 0x5c
   18154:	adc	r0, r2, r8
   18158:	str	r0, [sp, #80]	; 0x50
   1815c:	ldr	r0, [sp, #72]	; 0x48
   18160:	adds	sl, r1, r0
   18164:	ldr	r0, [sp, #76]	; 0x4c
   18168:	str	sl, [fp, #-224]	; 0xffffff20
   1816c:	adc	r9, r7, r0
   18170:	ldr	r0, [sp, #64]	; 0x40
   18174:	ldr	r7, [sp, #100]	; 0x64
   18178:	str	r9, [fp, #-220]	; 0xffffff24
   1817c:	eor	r1, r9, r0
   18180:	ldr	r0, [sp, #68]	; 0x44
   18184:	lsl	r3, r1, #1
   18188:	eor	r2, sl, r0
   1818c:	ldr	r0, [sp, #264]	; 0x108
   18190:	orr	r3, r3, r2, lsr #31
   18194:	lsl	r2, r2, #1
   18198:	orr	r1, r2, r1, lsr #31
   1819c:	ldr	r2, [sp, #84]	; 0x54
   181a0:	str	r3, [fp, #-252]	; 0xffffff04
   181a4:	str	r1, [fp, #-256]	; 0xffffff00
   181a8:	adds	r2, r2, r0
   181ac:	ldr	r0, [sp, #260]	; 0x104
   181b0:	adc	r6, r7, r0
   181b4:	ldr	r0, [sp, #148]	; 0x94
   181b8:	adds	r4, r2, r1
   181bc:	ldr	r7, [sp, #132]	; 0x84
   181c0:	ldr	r2, [sp, #36]	; 0x24
   181c4:	adc	r8, r6, r3
   181c8:	ldr	r6, [sp, #44]	; 0x2c
   181cc:	str	r0, [fp, #-180]	; 0xffffff4c
   181d0:	ldr	r0, [sp, #136]	; 0x88
   181d4:	str	r0, [fp, #-184]	; 0xffffff48
   181d8:	ldr	r0, [sp, #128]	; 0x80
   181dc:	str	r7, [fp, #-212]	; 0xffffff2c
   181e0:	str	r0, [fp, #-216]	; 0xffffff28
   181e4:	str	r2, [fp, #-172]	; 0xffffff54
   181e8:	eor	r2, r8, r2
   181ec:	str	r6, [fp, #-176]	; 0xffffff50
   181f0:	eor	r6, r4, r6
   181f4:	adds	lr, r2, r0
   181f8:	adc	ip, r6, r7
   181fc:	eor	r1, lr, r1
   18200:	lsl	r5, r1, #8
   18204:	eor	r3, ip, r3
   18208:	lsr	r1, r1, #24
   1820c:	orr	r0, r1, r3, lsl #8
   18210:	ldr	r1, [sp, #228]	; 0xe4
   18214:	orr	r5, r5, r3, lsr #24
   18218:	ldr	r3, [sp, #232]	; 0xe8
   1821c:	str	r0, [sp, #76]	; 0x4c
   18220:	str	r5, [sp, #72]	; 0x48
   18224:	adds	r1, r4, r1
   18228:	adc	r3, r8, r3
   1822c:	adds	r7, r1, r0
   18230:	adc	r1, r3, r5
   18234:	eor	r2, r7, r2
   18238:	str	r7, [sp, #84]	; 0x54
   1823c:	ldr	r7, [sp, #180]	; 0xb4
   18240:	str	r1, [sp, #100]	; 0x64
   18244:	lsl	r3, r2, #16
   18248:	eor	r1, r1, r6
   1824c:	lsr	r2, r2, #16
   18250:	orr	r3, r3, r1, lsr #16
   18254:	orr	r1, r2, r1, lsl #16
   18258:	ldr	r2, [sp, #20]
   1825c:	adds	r8, r1, lr
   18260:	str	r1, [sp, #36]	; 0x24
   18264:	ldr	r1, [sp, #12]
   18268:	ldr	lr, [sp, #184]	; 0xb8
   1826c:	str	r3, [sp, #28]
   18270:	adc	r0, r3, ip
   18274:	ldr	r3, [sp, #136]	; 0x88
   18278:	str	r0, [sp, #8]
   1827c:	ldr	r0, [sp, #32]
   18280:	eor	r0, r1, r0
   18284:	ldr	r1, [sp, #40]	; 0x28
   18288:	eor	r1, r2, r1
   1828c:	lsl	r2, r0, #1
   18290:	orr	r4, r2, r1, lsr #31
   18294:	lsl	r1, r1, #1
   18298:	ldr	r2, [sp, #124]	; 0x7c
   1829c:	orr	r0, r1, r0, lsr #31
   182a0:	ldr	r1, [sp, #96]	; 0x60
   182a4:	adds	r1, r1, lr
   182a8:	adc	r2, r2, r7
   182ac:	adds	r1, r1, r0
   182b0:	adc	r6, r2, r4
   182b4:	ldr	r2, [sp, #148]	; 0x94
   182b8:	eor	r3, r1, r3
   182bc:	eor	ip, r6, r2
   182c0:	adds	r5, ip, sl
   182c4:	mov	sl, r8
   182c8:	adc	r2, r3, r9
   182cc:	eor	r0, r5, r0
   182d0:	str	r5, [sp, #64]	; 0x40
   182d4:	ldr	r9, [sp, #8]
   182d8:	lsl	r5, r0, #8
   182dc:	eor	r4, r2, r4
   182e0:	lsr	r0, r0, #24
   182e4:	str	r2, [sp, #68]	; 0x44
   182e8:	orr	r5, r5, r4, lsr #24
   182ec:	orr	r4, r0, r4, lsl #8
   182f0:	ldr	r0, [sp, #224]	; 0xe0
   182f4:	str	r5, [sp, #44]	; 0x2c
   182f8:	str	r4, [sp, #148]	; 0x94
   182fc:	adds	r0, r1, r0
   18300:	ldr	r1, [sp, #220]	; 0xdc
   18304:	adc	r1, r6, r1
   18308:	adds	r6, r0, r4
   1830c:	adc	r0, r1, r5
   18310:	eor	r2, r6, ip
   18314:	ldr	r5, [sp, #80]	; 0x50
   18318:	str	r6, [sp, #20]
   1831c:	str	r0, [sp, #96]	; 0x60
   18320:	lsr	r1, r2, #16
   18324:	eor	r0, r0, r3
   18328:	lsl	r2, r2, #16
   1832c:	orr	r2, r2, r0, lsr #16
   18330:	orr	r1, r1, r0, lsl #16
   18334:	ldr	r0, [sp, #152]	; 0x98
   18338:	str	r2, [sp, #40]	; 0x28
   1833c:	str	r1, [sp, #32]
   18340:	eor	ip, r5, r2
   18344:	ldr	r2, [sp, #92]	; 0x5c
   18348:	adds	r8, ip, r8
   1834c:	str	r0, [fp, #-164]	; 0xffffff5c
   18350:	ldr	r0, [sp, #156]	; 0x9c
   18354:	eor	r3, r2, r1
   18358:	adc	r6, r3, r9
   1835c:	str	r0, [fp, #-168]	; 0xffffff58
   18360:	ldr	r0, [sp, #140]	; 0x8c
   18364:	str	r0, [fp, #-208]	; 0xffffff30
   18368:	ldr	r0, [sp, #144]	; 0x90
   1836c:	str	r0, [fp, #-204]	; 0xffffff34
   18370:	ldr	r0, [sp, #16]
   18374:	str	r0, [fp, #-244]	; 0xffffff0c
   18378:	eor	r1, r6, r0
   1837c:	ldr	r0, [sp, #24]
   18380:	str	r0, [fp, #-248]	; 0xffffff08
   18384:	eor	r0, r8, r0
   18388:	lsl	r4, r0, #8
   1838c:	lsr	r0, r0, #24
   18390:	orr	r4, r4, r1, lsr #24
   18394:	orr	r0, r0, r1, lsl #8
   18398:	adds	r1, r2, lr
   1839c:	adc	r2, r5, r7
   183a0:	adds	r7, r1, r0
   183a4:	ldr	r5, [sp, #52]	; 0x34
   183a8:	adc	r1, r2, r4
   183ac:	eor	r2, r7, ip
   183b0:	str	r7, [sp, #80]	; 0x50
   183b4:	ldr	r7, [sp, #120]	; 0x78
   183b8:	str	r1, [sp, #92]	; 0x5c
   183bc:	eor	r1, r1, r3
   183c0:	lsl	r3, r2, #16
   183c4:	lsr	r2, r2, #16
   183c8:	orr	r3, r3, r1, lsr #16
   183cc:	orr	r1, r2, r1, lsl #16
   183d0:	adds	r2, r1, r8
   183d4:	str	r1, [sp, #136]	; 0x88
   183d8:	str	r3, [sp, #124]	; 0x7c
   183dc:	adc	r1, r3, r6
   183e0:	str	r2, [sp, #128]	; 0x80
   183e4:	eor	r0, r2, r0
   183e8:	ldr	r3, [sp, #116]	; 0x74
   183ec:	str	r1, [sp, #132]	; 0x84
   183f0:	eor	r1, r1, r4
   183f4:	lsl	r2, r1, #1
   183f8:	orr	r8, r2, r0, lsr #31
   183fc:	lsl	r0, r0, #1
   18400:	orr	lr, r0, r1, lsr #31
   18404:	ldr	r0, [sp, #72]	; 0x48
   18408:	ldr	r1, [sp, #76]	; 0x4c
   1840c:	str	r8, [sp, #16]
   18410:	str	lr, [sp, #24]
   18414:	eor	r0, r9, r0
   18418:	eor	r1, sl, r1
   1841c:	lsl	r2, r0, #1
   18420:	orr	r2, r2, r1, lsr #31
   18424:	lsl	r1, r1, #1
   18428:	orr	r0, r1, r0, lsr #31
   1842c:	ldr	r1, [sp, #228]	; 0xe4
   18430:	adds	r1, r3, r1
   18434:	ldr	r3, [sp, #232]	; 0xe8
   18438:	adc	r3, r7, r3
   1843c:	adds	r9, r1, r0
   18440:	ldr	r1, [sp, #64]	; 0x40
   18444:	ldr	r7, [sp, #40]	; 0x28
   18448:	adc	r6, r3, r2
   1844c:	ldr	r3, [sp, #32]
   18450:	adds	r1, r3, r1
   18454:	ldr	r3, [sp, #68]	; 0x44
   18458:	str	r1, [sp, #8]
   1845c:	adc	sl, r7, r3
   18460:	ldr	r3, [sp, #56]	; 0x38
   18464:	ldr	r7, [sp, #48]	; 0x30
   18468:	eor	r7, r7, r3
   1846c:	ldr	r3, [sp, #60]	; 0x3c
   18470:	eor	r5, r5, r3
   18474:	lsr	r4, r5, #16
   18478:	lsl	r5, r5, #16
   1847c:	orr	r5, r5, r7, lsr #16
   18480:	orr	ip, r4, r7, lsl #16
   18484:	eor	r3, r6, r5
   18488:	eor	r4, r9, ip
   1848c:	adds	r7, r3, r1
   18490:	str	r3, [sp, #116]	; 0x74
   18494:	ldr	r1, [sp, #172]	; 0xac
   18498:	str	r4, [sp, #60]	; 0x3c
   1849c:	adc	r3, r4, sl
   184a0:	eor	r0, r7, r0
   184a4:	str	r7, [sp, #72]	; 0x48
   184a8:	lsl	r7, r0, #8
   184ac:	eor	r2, r3, r2
   184b0:	lsr	r0, r0, #24
   184b4:	str	r3, [sp, #76]	; 0x4c
   184b8:	orr	r3, r7, r2, lsr #24
   184bc:	orr	r2, r0, r2, lsl #8
   184c0:	ldr	r0, [sp, #176]	; 0xb0
   184c4:	str	r2, [sp, #68]	; 0x44
   184c8:	str	r3, [sp, #64]	; 0x40
   184cc:	adds	r0, r9, r0
   184d0:	adc	r1, r6, r1
   184d4:	adds	r2, r0, r2
   184d8:	ldr	r0, [sp, #240]	; 0xf0
   184dc:	adc	r3, r1, r3
   184e0:	ldr	r1, [sp, #236]	; 0xec
   184e4:	str	r2, [sp, #40]	; 0x28
   184e8:	str	r3, [sp, #32]
   184ec:	adds	r0, lr, r0
   184f0:	adc	r1, r8, r1
   184f4:	adds	r0, r0, r2
   184f8:	ldr	r2, [sp, #20]
   184fc:	str	r0, [sp, #120]	; 0x78
   18500:	adc	r0, r1, r3
   18504:	str	r0, [sp, #12]
   18508:	ldr	r0, [sp, #108]	; 0x6c
   1850c:	adds	lr, ip, r0
   18510:	ldr	r0, [sp, #112]	; 0x70
   18514:	str	lr, [fp, #-200]	; 0xffffff38
   18518:	adc	r9, r5, r0
   1851c:	ldr	r0, [sp, #88]	; 0x58
   18520:	str	r9, [fp, #-196]	; 0xffffff3c
   18524:	eor	r1, r9, r0
   18528:	ldr	r0, [sp, #104]	; 0x68
   1852c:	lsl	r5, r1, #1
   18530:	eor	r4, lr, r0
   18534:	ldr	r0, [sp, #216]	; 0xd8
   18538:	orr	r5, r5, r4, lsr #31
   1853c:	lsl	r4, r4, #1
   18540:	orr	r1, r4, r1, lsr #31
   18544:	str	r5, [fp, #-236]	; 0xffffff14
   18548:	str	r1, [fp, #-240]	; 0xffffff10
   1854c:	adds	r4, r2, r0
   18550:	ldr	r0, [sp, #212]	; 0xd4
   18554:	ldr	r2, [sp, #96]	; 0x60
   18558:	adc	r6, r2, r0
   1855c:	ldr	r0, [sp, #28]
   18560:	adds	r4, r4, r1
   18564:	ldr	r2, [sp, #144]	; 0x90
   18568:	adc	r6, r6, r5
   1856c:	eor	r8, r0, r6
   18570:	ldr	r0, [sp, #36]	; 0x24
   18574:	eor	r7, r0, r4
   18578:	ldr	r0, [sp, #140]	; 0x8c
   1857c:	adds	ip, r8, r0
   18580:	adc	r2, r7, r2
   18584:	eor	r1, ip, r1
   18588:	lsl	r3, r1, #8
   1858c:	eor	r5, r2, r5
   18590:	lsr	r1, r1, #24
   18594:	orr	r0, r3, r5, lsr #24
   18598:	orr	r5, r1, r5, lsl #8
   1859c:	ldr	r1, [sp, #208]	; 0xd0
   185a0:	ldr	r3, [sp, #204]	; 0xcc
   185a4:	str	r0, [sp, #104]	; 0x68
   185a8:	str	r5, [sp, #112]	; 0x70
   185ac:	adds	r1, r4, r1
   185b0:	adc	r4, r6, r3
   185b4:	adds	r3, r1, r5
   185b8:	adc	r1, r4, r0
   185bc:	eor	r4, r3, r8
   185c0:	str	r3, [sp, #96]	; 0x60
   185c4:	str	r1, [sp, #108]	; 0x6c
   185c8:	lsl	r6, r4, #16
   185cc:	eor	r1, r1, r7
   185d0:	lsr	r4, r4, #16
   185d4:	orr	r3, r6, r1, lsr #16
   185d8:	orr	r1, r4, r1, lsl #16
   185dc:	ldr	r4, [sp, #292]	; 0x124
   185e0:	adds	ip, r1, ip
   185e4:	str	r1, [sp, #56]	; 0x38
   185e8:	ldr	r1, [sp, #148]	; 0x94
   185ec:	str	r3, [sp, #48]	; 0x30
   185f0:	adc	r0, r3, r2
   185f4:	ldr	r2, [sp, #8]
   185f8:	ldr	r3, [sp, #84]	; 0x54
   185fc:	str	ip, [sp]
   18600:	str	r0, [sp, #4]
   18604:	ldr	r0, [sp, #44]	; 0x2c
   18608:	eor	r1, r2, r1
   1860c:	eor	r0, sl, r0
   18610:	lsl	r2, r0, #1
   18614:	orr	r7, r2, r1, lsr #31
   18618:	lsl	r1, r1, #1
   1861c:	ldr	r2, [sp, #164]	; 0xa4
   18620:	orr	r0, r1, r0, lsr #31
   18624:	ldr	r1, [sp, #168]	; 0xa8
   18628:	adds	r1, r0, r1
   1862c:	adc	r2, r7, r2
   18630:	adds	r1, r1, r3
   18634:	ldr	r3, [sp, #100]	; 0x64
   18638:	adc	r2, r2, r3
   1863c:	ldr	r3, [sp, #152]	; 0x98
   18640:	eor	sl, r2, r3
   18644:	ldr	r3, [sp, #156]	; 0x9c
   18648:	adds	r6, sl, lr
   1864c:	str	r6, [sp, #88]	; 0x58
   18650:	eor	r3, r1, r3
   18654:	adc	r5, r3, r9
   18658:	str	r5, [sp, #100]	; 0x64
   1865c:	stm	r4, {r0, r7}
   18660:	eor	r0, r6, r0
   18664:	eor	r9, r5, r7
   18668:	lsl	r7, r0, #8
   1866c:	lsr	r0, r0, #24
   18670:	ldr	r4, [sp, #12]
   18674:	ldr	r6, [sp, #4]
   18678:	orr	r5, r0, r9, lsl #8
   1867c:	ldr	r0, [sp, #192]	; 0xc0
   18680:	orr	r7, r7, r9, lsr #24
   18684:	str	r5, [sp, #52]	; 0x34
   18688:	str	r7, [sp, #44]	; 0x2c
   1868c:	adds	r0, r1, r0
   18690:	ldr	r1, [sp, #188]	; 0xbc
   18694:	adc	r1, r2, r1
   18698:	adds	r2, r0, r5
   1869c:	ldr	r5, [sp, #120]	; 0x78
   186a0:	adc	r0, r1, r7
   186a4:	str	r2, [sp, #20]
   186a8:	str	r0, [sp, #28]
   186ac:	eor	r0, r0, r3
   186b0:	eor	r3, r2, sl
   186b4:	lsr	r1, r3, #16
   186b8:	lsl	r3, r3, #16
   186bc:	orr	sl, r3, r0, lsr #16
   186c0:	orr	r9, r1, r0, lsl #16
   186c4:	ldr	r0, [sp, #16]
   186c8:	eor	r3, r4, sl
   186cc:	eor	r2, r5, r9
   186d0:	adds	r8, r3, ip
   186d4:	adc	lr, r2, r6
   186d8:	eor	r1, lr, r0
   186dc:	ldr	r0, [sp, #24]
   186e0:	eor	r0, r8, r0
   186e4:	lsl	r7, r0, #8
   186e8:	lsr	r0, r0, #24
   186ec:	orr	r7, r7, r1, lsr #24
   186f0:	orr	r0, r0, r1, lsl #8
   186f4:	ldr	r1, [sp, #280]	; 0x118
   186f8:	adds	r1, r5, r1
   186fc:	ldr	r5, [sp, #276]	; 0x114
   18700:	adc	ip, r4, r5
   18704:	adds	r5, r1, r0
   18708:	adc	r1, ip, r7
   1870c:	str	r5, [sp, #120]	; 0x78
   18710:	eor	ip, r1, r2
   18714:	eor	r2, r5, r3
   18718:	str	r1, [sp, #140]	; 0x8c
   1871c:	lsl	r3, r2, #16
   18720:	lsr	r2, r2, #16
   18724:	orr	r1, r2, ip, lsl #16
   18728:	orr	r3, r3, ip, lsr #16
   1872c:	adds	r2, r1, r8
   18730:	str	r1, [sp, #156]	; 0x9c
   18734:	str	r3, [sp, #152]	; 0x98
   18738:	adc	r1, r3, lr
   1873c:	str	r2, [sp, #144]	; 0x90
   18740:	eor	r0, r2, r0
   18744:	ldr	r3, [sp, #80]	; 0x50
   18748:	str	r1, [sp, #148]	; 0x94
   1874c:	eor	r1, r1, r7
   18750:	ldr	r7, [sp, #92]	; 0x5c
   18754:	lsl	r2, r1, #1
   18758:	orr	r8, r2, r0, lsr #31
   1875c:	lsl	r0, r0, #1
   18760:	ldr	r2, [sp]
   18764:	orr	lr, r0, r1, lsr #31
   18768:	ldr	r0, [sp, #104]	; 0x68
   1876c:	ldr	r1, [sp, #112]	; 0x70
   18770:	str	r8, [sp, #24]
   18774:	str	lr, [sp, #36]	; 0x24
   18778:	eor	r0, r6, r0
   1877c:	eor	r1, r2, r1
   18780:	lsl	r2, r0, #1
   18784:	orr	r2, r2, r1, lsr #31
   18788:	lsl	r1, r1, #1
   1878c:	orr	r0, r1, r0, lsr #31
   18790:	ldr	r1, [sp, #272]	; 0x110
   18794:	adds	r1, r3, r1
   18798:	ldr	r3, [sp, #268]	; 0x10c
   1879c:	adc	r3, r7, r3
   187a0:	adds	ip, r1, r0
   187a4:	ldr	r1, [sp, #88]	; 0x58
   187a8:	adc	r7, r3, r2
   187ac:	ldr	r3, [sp, #32]
   187b0:	adds	r4, r9, r1
   187b4:	ldr	r1, [sp, #100]	; 0x64
   187b8:	str	r4, [sp, #16]
   187bc:	adc	r9, sl, r1
   187c0:	ldr	r1, [sp, #60]	; 0x3c
   187c4:	ldr	sl, [sp, #124]	; 0x7c
   187c8:	str	r9, [sp, #12]
   187cc:	eor	r6, r3, r1
   187d0:	ldr	r1, [sp, #116]	; 0x74
   187d4:	ldr	r3, [sp, #40]	; 0x28
   187d8:	eor	r5, r3, r1
   187dc:	lsr	r3, r5, #16
   187e0:	lsl	r5, r5, #16
   187e4:	orr	r3, r3, r6, lsl #16
   187e8:	orr	r6, r5, r6, lsr #16
   187ec:	eor	r5, r6, r7
   187f0:	eor	r1, r3, ip
   187f4:	str	r3, [fp, #-192]	; 0xffffff40
   187f8:	str	r6, [fp, #-188]	; 0xffffff44
   187fc:	str	r5, [sp, #92]	; 0x5c
   18800:	adds	r5, r5, r4
   18804:	str	r1, [sp, #88]	; 0x58
   18808:	adc	r4, r1, r9
   1880c:	eor	r0, r5, r0
   18810:	str	r5, [sp, #112]	; 0x70
   18814:	ldr	r1, [sp, #244]	; 0xf4
   18818:	lsl	r5, r0, #8
   1881c:	eor	r2, r4, r2
   18820:	lsr	r0, r0, #24
   18824:	str	r4, [sp, #116]	; 0x74
   18828:	ldr	r4, [sp, #48]	; 0x30
   1882c:	orr	r5, r5, r2, lsr #24
   18830:	orr	r2, r0, r2, lsl #8
   18834:	ldr	r0, [sp, #248]	; 0xf8
   18838:	str	r2, [sp, #104]	; 0x68
   1883c:	str	r5, [sp, #100]	; 0x64
   18840:	adds	r0, ip, r0
   18844:	adc	r1, r7, r1
   18848:	adds	r2, r0, r2
   1884c:	ldr	r0, [sp, #216]	; 0xd8
   18850:	adc	r7, r1, r5
   18854:	ldr	r1, [sp, #212]	; 0xd4
   18858:	str	r2, [sp, #84]	; 0x54
   1885c:	str	r7, [sp, #80]	; 0x50
   18860:	adds	r0, r2, r0
   18864:	adc	r1, r7, r1
   18868:	adds	r0, r0, lr
   1886c:	ldr	r7, [sp, #28]
   18870:	str	r0, [sp, #216]	; 0xd8
   18874:	adc	r0, r1, r8
   18878:	str	r0, [sp, #212]	; 0xd4
   1887c:	ldr	r0, [sp, #72]	; 0x48
   18880:	adds	r9, r3, r0
   18884:	ldr	r0, [sp, #76]	; 0x4c
   18888:	str	r9, [fp, #-224]	; 0xffffff20
   1888c:	adc	r8, r6, r0
   18890:	ldr	r0, [sp, #64]	; 0x40
   18894:	str	r8, [fp, #-220]	; 0xffffff24
   18898:	eor	r1, r8, r0
   1889c:	ldr	r0, [sp, #68]	; 0x44
   188a0:	lsl	r3, r1, #1
   188a4:	eor	r2, r9, r0
   188a8:	ldr	r0, [sp, #256]	; 0x100
   188ac:	orr	r3, r3, r2, lsr #31
   188b0:	lsl	r2, r2, #1
   188b4:	orr	r1, r2, r1, lsr #31
   188b8:	ldr	r2, [sp, #20]
   188bc:	str	r3, [fp, #-252]	; 0xffffff04
   188c0:	str	r1, [fp, #-256]	; 0xffffff00
   188c4:	str	sl, [fp, #-180]	; 0xffffff4c
   188c8:	adds	r2, r2, r0
   188cc:	ldr	r0, [sp, #252]	; 0xfc
   188d0:	adc	r7, r7, r0
   188d4:	ldr	r0, [sp, #136]	; 0x88
   188d8:	adds	lr, r2, r1
   188dc:	ldr	r2, [sp, #132]	; 0x84
   188e0:	adc	r6, r7, r3
   188e4:	eor	r7, r6, r4
   188e8:	str	r0, [fp, #-184]	; 0xffffff48
   188ec:	ldr	r0, [sp, #128]	; 0x80
   188f0:	str	r2, [fp, #-212]	; 0xffffff2c
   188f4:	str	r0, [fp, #-216]	; 0xffffff28
   188f8:	str	r4, [fp, #-172]	; 0xffffff54
   188fc:	ldr	r4, [sp, #56]	; 0x38
   18900:	adds	ip, r7, r0
   18904:	eor	r1, ip, r1
   18908:	lsl	r5, r1, #8
   1890c:	lsr	r1, r1, #24
   18910:	str	r4, [fp, #-176]	; 0xffffff50
   18914:	eor	r4, lr, r4
   18918:	adc	r2, r4, r2
   1891c:	eor	r3, r2, r3
   18920:	orr	r0, r1, r3, lsl #8
   18924:	ldr	r1, [sp, #200]	; 0xc8
   18928:	orr	r5, r5, r3, lsr #24
   1892c:	ldr	r3, [sp, #196]	; 0xc4
   18930:	str	r0, [sp, #48]	; 0x30
   18934:	str	r5, [sp, #40]	; 0x28
   18938:	adds	r1, lr, r1
   1893c:	adc	r6, r6, r3
   18940:	adds	r3, r1, r0
   18944:	adc	r1, r6, r5
   18948:	eor	r7, r3, r7
   1894c:	str	r3, [sp, #128]	; 0x80
   18950:	str	r1, [sp, #132]	; 0x84
   18954:	lsl	r6, r7, #16
   18958:	eor	r1, r1, r4
   1895c:	lsr	r7, r7, #16
   18960:	orr	r3, r6, r1, lsr #16
   18964:	orr	r1, r7, r1, lsl #16
   18968:	ldr	r6, [sp, #216]	; 0xd8
   1896c:	adds	lr, r1, ip
   18970:	str	r1, [sp, #76]	; 0x4c
   18974:	ldr	r1, [sp, #12]
   18978:	str	r3, [sp, #72]	; 0x48
   1897c:	adc	r0, r3, r2
   18980:	ldr	r2, [sp, #16]
   18984:	ldr	r3, [sp, #108]	; 0x6c
   18988:	str	lr, [sp, #28]
   1898c:	str	r0, [sp, #32]
   18990:	ldr	r0, [sp, #44]	; 0x2c
   18994:	eor	r0, r1, r0
   18998:	ldr	r1, [sp, #52]	; 0x34
   1899c:	lsl	r7, r0, #1
   189a0:	eor	r2, r2, r1
   189a4:	ldr	r1, [sp, #224]	; 0xe0
   189a8:	orr	r7, r7, r2, lsr #31
   189ac:	lsl	r2, r2, #1
   189b0:	orr	r0, r2, r0, lsr #31
   189b4:	ldr	r2, [sp, #96]	; 0x60
   189b8:	adds	r2, r2, r1
   189bc:	ldr	r1, [sp, #220]	; 0xdc
   189c0:	adc	r5, r3, r1
   189c4:	ldr	r1, [sp, #136]	; 0x88
   189c8:	adds	r2, r2, r0
   189cc:	adc	r5, r5, r7
   189d0:	eor	ip, r5, sl
   189d4:	eor	r4, r2, r1
   189d8:	adds	r1, ip, r9
   189dc:	adc	r3, r4, r8
   189e0:	eor	r0, r1, r0
   189e4:	str	r1, [sp, #44]	; 0x2c
   189e8:	ldr	r1, [sp, #260]	; 0x104
   189ec:	ldr	r8, [sp, #32]
   189f0:	str	r3, [sp, #52]	; 0x34
   189f4:	eor	r7, r3, r7
   189f8:	lsl	r3, r0, #8
   189fc:	lsr	r0, r0, #24
   18a00:	orr	r3, r3, r7, lsr #24
   18a04:	orr	r7, r0, r7, lsl #8
   18a08:	ldr	r0, [sp, #264]	; 0x108
   18a0c:	str	r3, [sp, #96]	; 0x60
   18a10:	str	r7, [sp, #108]	; 0x6c
   18a14:	adds	r0, r2, r0
   18a18:	adc	r2, r5, r1
   18a1c:	adds	r1, r0, r7
   18a20:	adc	r0, r2, r3
   18a24:	eor	r2, r1, ip
   18a28:	str	r1, [sp, #56]	; 0x38
   18a2c:	ldr	r1, [sp, #240]	; 0xf0
   18a30:	str	r0, [sp, #60]	; 0x3c
   18a34:	lsr	r3, r2, #16
   18a38:	eor	r0, r0, r4
   18a3c:	lsl	r2, r2, #16
   18a40:	orr	sl, r3, r0, lsl #16
   18a44:	orr	r9, r2, r0, lsr #16
   18a48:	ldr	r0, [sp, #152]	; 0x98
   18a4c:	ldr	r2, [sp, #212]	; 0xd4
   18a50:	eor	r3, r6, sl
   18a54:	str	r0, [fp, #-164]	; 0xffffff5c
   18a58:	ldr	r0, [sp, #156]	; 0x9c
   18a5c:	eor	ip, r2, r9
   18a60:	adds	r7, ip, lr
   18a64:	adc	r5, r3, r8
   18a68:	str	r0, [fp, #-168]	; 0xffffff58
   18a6c:	ldr	r0, [sp, #144]	; 0x90
   18a70:	str	r0, [fp, #-208]	; 0xffffff30
   18a74:	ldr	r0, [sp, #148]	; 0x94
   18a78:	str	r0, [fp, #-204]	; 0xffffff34
   18a7c:	ldr	r0, [sp, #24]
   18a80:	str	r0, [fp, #-244]	; 0xffffff0c
   18a84:	eor	r4, r5, r0
   18a88:	ldr	r0, [sp, #36]	; 0x24
   18a8c:	str	r0, [fp, #-248]	; 0xffffff08
   18a90:	eor	r0, r7, r0
   18a94:	lsl	lr, r0, #8
   18a98:	lsr	r0, r0, #24
   18a9c:	orr	lr, lr, r4, lsr #24
   18aa0:	orr	r0, r0, r4, lsl #8
   18aa4:	adds	r4, r6, r1
   18aa8:	ldr	r1, [sp, #236]	; 0xec
   18aac:	adc	r1, r2, r1
   18ab0:	adds	r4, r4, r0
   18ab4:	adc	r1, r1, lr
   18ab8:	eor	r2, r4, ip
   18abc:	str	r4, [sp, #212]	; 0xd4
   18ac0:	str	r1, [sp, #216]	; 0xd8
   18ac4:	eor	r1, r1, r3
   18ac8:	lsl	r3, r2, #16
   18acc:	lsr	r2, r2, #16
   18ad0:	orr	r3, r3, r1, lsr #16
   18ad4:	orr	r1, r2, r1, lsl #16
   18ad8:	adds	r2, r1, r7
   18adc:	str	r1, [sp, #136]	; 0x88
   18ae0:	str	r3, [sp, #124]	; 0x7c
   18ae4:	adc	r1, r3, r5
   18ae8:	str	r2, [sp, #236]	; 0xec
   18aec:	eor	r0, r2, r0
   18af0:	ldr	r3, [sp, #140]	; 0x8c
   18af4:	str	r1, [sp, #240]	; 0xf0
   18af8:	eor	r1, r1, lr
   18afc:	lsl	r2, r1, #1
   18b00:	orr	r2, r2, r0, lsr #31
   18b04:	lsl	r0, r0, #1
   18b08:	orr	r1, r0, r1, lsr #31
   18b0c:	ldr	r0, [sp, #176]	; 0xb0
   18b10:	str	r2, [sp, #64]	; 0x40
   18b14:	str	r1, [sp, #68]	; 0x44
   18b18:	adds	lr, r1, r0
   18b1c:	ldr	r0, [sp, #172]	; 0xac
   18b20:	ldr	r1, [sp, #48]	; 0x30
   18b24:	adc	ip, r2, r0
   18b28:	ldr	r0, [sp, #40]	; 0x28
   18b2c:	ldr	r2, [sp, #28]
   18b30:	eor	r0, r8, r0
   18b34:	eor	r1, r2, r1
   18b38:	lsl	r2, r0, #1
   18b3c:	orr	r4, r2, r1, lsr #31
   18b40:	lsl	r1, r1, #1
   18b44:	ldr	r2, [sp, #120]	; 0x78
   18b48:	orr	r0, r1, r0, lsr #31
   18b4c:	ldr	r1, [sp, #256]	; 0x100
   18b50:	adds	r1, r2, r1
   18b54:	ldr	r2, [sp, #252]	; 0xfc
   18b58:	adc	r2, r3, r2
   18b5c:	adds	r8, r1, r0
   18b60:	ldr	r3, [sp, #80]	; 0x50
   18b64:	adc	r7, r2, r4
   18b68:	ldr	r2, [sp, #44]	; 0x2c
   18b6c:	adds	r1, sl, r2
   18b70:	ldr	r2, [sp, #52]	; 0x34
   18b74:	str	r1, [sp, #44]	; 0x2c
   18b78:	adc	sl, r9, r2
   18b7c:	ldr	r2, [sp, #88]	; 0x58
   18b80:	eor	r5, r3, r2
   18b84:	ldr	r2, [sp, #92]	; 0x5c
   18b88:	ldr	r3, [sp, #84]	; 0x54
   18b8c:	eor	r6, r3, r2
   18b90:	lsr	r3, r6, #16
   18b94:	lsl	r6, r6, #16
   18b98:	orr	r6, r6, r5, lsr #16
   18b9c:	orr	r9, r3, r5, lsl #16
   18ba0:	eor	r2, r7, r6
   18ba4:	eor	r3, r8, r9
   18ba8:	str	r2, [sp, #140]	; 0x8c
   18bac:	adds	r2, r2, r1
   18bb0:	str	r3, [sp, #120]	; 0x78
   18bb4:	ldr	r1, [sp, #268]	; 0x10c
   18bb8:	adc	r5, r3, sl
   18bbc:	eor	r0, r2, r0
   18bc0:	str	r2, [sp, #252]	; 0xfc
   18bc4:	str	r5, [sp, #256]	; 0x100
   18bc8:	eor	r4, r5, r4
   18bcc:	lsl	r5, r0, #8
   18bd0:	lsr	r0, r0, #24
   18bd4:	orr	r3, r0, r4, lsl #8
   18bd8:	ldr	r0, [sp, #272]	; 0x110
   18bdc:	orr	r2, r5, r4, lsr #24
   18be0:	ldr	r5, [sp, #148]	; 0x94
   18be4:	str	r2, [sp, #88]	; 0x58
   18be8:	str	r3, [sp, #92]	; 0x5c
   18bec:	adds	r0, r8, r0
   18bf0:	adc	r1, r7, r1
   18bf4:	adds	r0, r0, r3
   18bf8:	adc	r1, r1, r2
   18bfc:	str	r0, [sp, #84]	; 0x54
   18c00:	adds	r0, lr, r0
   18c04:	ldr	r2, [sp, #56]	; 0x38
   18c08:	str	r0, [sp, #52]	; 0x34
   18c0c:	adc	r0, ip, r1
   18c10:	str	r1, [sp, #80]	; 0x50
   18c14:	str	r0, [sp, #48]	; 0x30
   18c18:	ldr	r0, [sp, #112]	; 0x70
   18c1c:	adds	lr, r9, r0
   18c20:	ldr	r0, [sp, #116]	; 0x74
   18c24:	str	lr, [fp, #-200]	; 0xffffff38
   18c28:	adc	r8, r6, r0
   18c2c:	ldr	r0, [sp, #100]	; 0x64
   18c30:	str	r8, [fp, #-196]	; 0xffffff3c
   18c34:	eor	r1, r8, r0
   18c38:	ldr	r0, [sp, #104]	; 0x68
   18c3c:	lsl	r6, r1, #1
   18c40:	eor	r3, lr, r0
   18c44:	ldr	r0, [sp, #280]	; 0x118
   18c48:	orr	r6, r6, r3, lsr #31
   18c4c:	lsl	r3, r3, #1
   18c50:	orr	r1, r3, r1, lsr #31
   18c54:	str	r6, [fp, #-236]	; 0xffffff14
   18c58:	str	r1, [fp, #-240]	; 0xffffff10
   18c5c:	adds	r3, r2, r0
   18c60:	ldr	r0, [sp, #276]	; 0x114
   18c64:	ldr	r2, [sp, #60]	; 0x3c
   18c68:	adc	r2, r2, r0
   18c6c:	ldr	r0, [sp, #72]	; 0x48
   18c70:	adds	r3, r3, r1
   18c74:	adc	r2, r2, r6
   18c78:	eor	r4, r0, r2
   18c7c:	ldr	r0, [sp, #76]	; 0x4c
   18c80:	eor	r7, r0, r3
   18c84:	ldr	r0, [sp, #144]	; 0x90
   18c88:	adds	r0, r4, r0
   18c8c:	adc	ip, r7, r5
   18c90:	eor	r1, r0, r1
   18c94:	lsl	r9, r1, #8
   18c98:	eor	r6, ip, r6
   18c9c:	lsr	r1, r1, #24
   18ca0:	orr	r5, r9, r6, lsr #24
   18ca4:	orr	r6, r1, r6, lsl #8
   18ca8:	ldr	r1, [sp, #200]	; 0xc8
   18cac:	str	r6, [sp, #176]	; 0xb0
   18cb0:	str	r5, [sp, #172]	; 0xac
   18cb4:	adds	r1, r3, r1
   18cb8:	ldr	r3, [sp, #196]	; 0xc4
   18cbc:	adc	r2, r2, r3
   18cc0:	adds	r3, r1, r6
   18cc4:	ldr	r6, [sp, #156]	; 0x9c
   18cc8:	adc	r1, r2, r5
   18ccc:	eor	r2, r3, r4
   18cd0:	str	r3, [sp, #268]	; 0x10c
   18cd4:	ldr	r4, [sp, #292]	; 0x124
   18cd8:	str	r1, [sp, #272]	; 0x110
   18cdc:	eor	r1, r1, r7
   18ce0:	lsl	r3, r2, #16
   18ce4:	lsr	r2, r2, #16
   18ce8:	ldr	r7, [sp, #128]	; 0x80
   18cec:	orr	r3, r3, r1, lsr #16
   18cf0:	orr	r1, r2, r1, lsl #16
   18cf4:	ldr	r2, [sp, #44]	; 0x2c
   18cf8:	adds	r9, r1, r0
   18cfc:	ldr	r0, [sp, #96]	; 0x60
   18d00:	str	r1, [sp, #276]	; 0x114
   18d04:	ldr	r1, [sp, #108]	; 0x6c
   18d08:	str	r3, [sp, #280]	; 0x118
   18d0c:	adc	ip, r3, ip
   18d10:	str	r9, [sp, #148]	; 0x94
   18d14:	str	ip, [sp, #144]	; 0x90
   18d18:	eor	r0, sl, r0
   18d1c:	eor	r1, r2, r1
   18d20:	lsl	r2, r0, #1
   18d24:	orr	r3, r2, r1, lsr #31
   18d28:	lsl	r1, r1, #1
   18d2c:	orr	r2, r1, r0, lsr #31
   18d30:	ldr	r0, [sp, #264]	; 0x108
   18d34:	ldr	r1, [sp, #260]	; 0x104
   18d38:	strd	r2, [r4]
   18d3c:	adds	r0, r2, r0
   18d40:	adc	r1, r3, r1
   18d44:	adds	r0, r0, r7
   18d48:	ldr	r7, [sp, #132]	; 0x84
   18d4c:	eor	r6, r0, r6
   18d50:	adc	r1, r1, r7
   18d54:	ldr	r7, [sp, #152]	; 0x98
   18d58:	eor	sl, r1, r7
   18d5c:	adds	r7, sl, lr
   18d60:	adc	r5, r6, r8
   18d64:	eor	r2, r7, r2
   18d68:	str	r7, [sp, #260]	; 0x104
   18d6c:	str	r5, [sp, #264]	; 0x108
   18d70:	eor	r5, r5, r3
   18d74:	lsl	r3, r2, #8
   18d78:	lsr	r2, r2, #24
   18d7c:	orr	r7, r2, r5, lsl #8
   18d80:	ldr	r2, [sp, #168]	; 0xa8
   18d84:	orr	r3, r3, r5, lsr #24
   18d88:	str	r7, [sp, #132]	; 0x84
   18d8c:	str	r3, [sp, #128]	; 0x80
   18d90:	adds	r0, r0, r2
   18d94:	ldr	r2, [sp, #164]	; 0xa4
   18d98:	adc	r1, r1, r2
   18d9c:	adds	r2, r0, r7
   18da0:	ldr	r7, [sp, #52]	; 0x34
   18da4:	adc	r0, r1, r3
   18da8:	eor	r1, r2, sl
   18dac:	str	r2, [sp, #196]	; 0xc4
   18db0:	str	r0, [sp, #200]	; 0xc8
   18db4:	eor	r0, r0, r6
   18db8:	ldr	r6, [sp, #48]	; 0x30
   18dbc:	lsr	r2, r1, #16
   18dc0:	lsl	r1, r1, #16
   18dc4:	orr	r2, r2, r0, lsl #16
   18dc8:	orr	r0, r1, r0, lsr #16
   18dcc:	str	r2, [sp, #112]	; 0x70
   18dd0:	eor	r1, r7, r2
   18dd4:	ldr	r2, [sp, #64]	; 0x40
   18dd8:	str	r0, [sp, #116]	; 0x74
   18ddc:	eor	r0, r6, r0
   18de0:	adds	r5, r0, r9
   18de4:	adc	r3, r1, ip
   18de8:	str	r5, [sp, #104]	; 0x68
   18dec:	str	r3, [sp, #108]	; 0x6c
   18df0:	eor	r2, r3, r2
   18df4:	ldr	r3, [sp, #68]	; 0x44
   18df8:	eor	r4, r5, r3
   18dfc:	lsl	r3, r4, #8
   18e00:	lsr	r4, r4, #24
   18e04:	orr	r5, r3, r2, lsr #24
   18e08:	orr	r8, r4, r2, lsl #8
   18e0c:	ldr	r2, [sp, #224]	; 0xe0
   18e10:	str	r5, [sp, #100]	; 0x64
   18e14:	adds	r4, r7, r2
   18e18:	ldr	r2, [sp, #220]	; 0xdc
   18e1c:	adc	r3, r6, r2
   18e20:	adds	ip, r4, r8
   18e24:	adc	r7, r3, r5
   18e28:	eor	r0, ip, r0
   18e2c:	ldr	r5, [sp, #84]	; 0x54
   18e30:	str	ip, [sp, #224]	; 0xe0
   18e34:	eor	r4, r7, r1
   18e38:	lsl	r1, r0, #16
   18e3c:	lsr	r0, r0, #16
   18e40:	str	r7, [sp, #220]	; 0xdc
   18e44:	orr	r9, r1, r4, lsr #16
   18e48:	orr	r3, r0, r4, lsl #16
   18e4c:	ldr	r0, [sp, #120]	; 0x78
   18e50:	ldr	r1, [sp, #80]	; 0x50
   18e54:	eor	r1, r1, r0
   18e58:	ldr	r0, [sp, #140]	; 0x8c
   18e5c:	eor	r4, r5, r0
   18e60:	ldr	r0, [sp, #252]	; 0xfc
   18e64:	lsl	r5, r4, #16
   18e68:	lsr	r4, r4, #16
   18e6c:	orr	r2, r4, r1, lsl #16
   18e70:	orr	r6, r5, r1, lsr #16
   18e74:	str	r6, [fp, #-188]	; 0xffffff44
   18e78:	str	r2, [fp, #-192]	; 0xffffff40
   18e7c:	str	r2, [sp, #152]	; 0x98
   18e80:	str	r6, [sp, #156]	; 0x9c
   18e84:	adds	r5, r2, r0
   18e88:	ldr	r0, [sp, #256]	; 0x100
   18e8c:	ldr	r2, [sp, #100]	; 0x64
   18e90:	str	r5, [fp, #-224]	; 0xffffff20
   18e94:	adc	lr, r6, r0
   18e98:	ldr	r0, [sp, #88]	; 0x58
   18e9c:	str	lr, [fp, #-220]	; 0xffffff24
   18ea0:	eor	r1, lr, r0
   18ea4:	ldr	r0, [sp, #92]	; 0x5c
   18ea8:	lsl	sl, r1, #1
   18eac:	eor	r0, r5, r0
   18eb0:	orr	r4, sl, r0, lsr #31
   18eb4:	lsl	r0, r0, #1
   18eb8:	ldr	sl, [sp, #124]	; 0x7c
   18ebc:	orr	r0, r0, r1, lsr #31
   18ec0:	str	r4, [sp, #168]	; 0xa8
   18ec4:	str	r4, [fp, #-252]	; 0xffffff04
   18ec8:	ldr	r4, [sp, #136]	; 0x88
   18ecc:	ldr	r1, [sp, #108]	; 0x6c
   18ed0:	str	r0, [fp, #-256]	; 0xffffff00
   18ed4:	str	r0, [sp, #164]	; 0xa4
   18ed8:	ldr	r0, [sp, #240]	; 0xf0
   18edc:	str	sl, [fp, #-180]	; 0xffffff4c
   18ee0:	str	r4, [fp, #-184]	; 0xffffff48
   18ee4:	str	r0, [fp, #-212]	; 0xffffff2c
   18ee8:	ldr	r0, [sp, #236]	; 0xec
   18eec:	str	r0, [fp, #-216]	; 0xffffff28
   18ef0:	ldr	r0, [sp, #280]	; 0x118
   18ef4:	str	r0, [fp, #-172]	; 0xffffff54
   18ef8:	ldr	r0, [sp, #276]	; 0x114
   18efc:	str	r0, [fp, #-176]	; 0xffffff50
   18f00:	ldr	r0, [sp, #104]	; 0x68
   18f04:	str	ip, [fp, #-288]	; 0xfffffee0
   18f08:	str	r7, [fp, #-284]	; 0xfffffee4
   18f0c:	str	r3, [fp, #-168]	; 0xffffff58
   18f10:	str	r9, [fp, #-164]	; 0xffffff5c
   18f14:	adds	r0, r3, r0
   18f18:	ldr	r3, [sp, #272]	; 0x110
   18f1c:	adc	r1, r9, r1
   18f20:	str	r0, [fp, #-208]	; 0xffffff30
   18f24:	eor	r0, r0, r8
   18f28:	str	r1, [fp, #-204]	; 0xffffff34
   18f2c:	eor	r1, r1, r2
   18f30:	lsl	r2, r0, #1
   18f34:	orr	r2, r2, r1, lsr #31
   18f38:	lsl	r1, r1, #1
   18f3c:	orr	r0, r1, r0, lsr #31
   18f40:	ldr	r1, [sp, #112]	; 0x70
   18f44:	str	r2, [fp, #-248]	; 0xffffff08
   18f48:	str	r0, [fp, #-244]	; 0xffffff0c
   18f4c:	ldr	r0, [sp, #260]	; 0x104
   18f50:	adds	r9, r1, r0
   18f54:	ldr	r0, [sp, #264]	; 0x108
   18f58:	ldr	r1, [sp, #116]	; 0x74
   18f5c:	adc	ip, r1, r0
   18f60:	ldr	r0, [sp, #128]	; 0x80
   18f64:	eor	r1, ip, r0
   18f68:	ldr	r0, [sp, #132]	; 0x84
   18f6c:	lsl	r6, r1, #1
   18f70:	eor	r2, r9, r0
   18f74:	ldr	r0, [sp, #248]	; 0xf8
   18f78:	orr	r6, r6, r2, lsr #31
   18f7c:	lsl	r2, r2, #1
   18f80:	orr	r1, r2, r1, lsr #31
   18f84:	ldr	r2, [sp, #268]	; 0x10c
   18f88:	adds	r2, r2, r0
   18f8c:	ldr	r0, [sp, #244]	; 0xf4
   18f90:	adc	r0, r3, r0
   18f94:	adds	r2, r2, r1
   18f98:	adc	r0, r0, r6
   18f9c:	eor	r7, r2, r4
   18fa0:	eor	r8, r0, sl
   18fa4:	adds	r5, r8, r5
   18fa8:	adc	r3, r7, lr
   18fac:	eor	r1, r5, r1
   18fb0:	lsl	r4, r1, #8
   18fb4:	eor	r6, r3, r6
   18fb8:	lsr	r1, r1, #24
   18fbc:	orr	r4, r4, r6, lsr #24
   18fc0:	orr	r1, r1, r6, lsl #8
   18fc4:	ldr	r6, [sp, #192]	; 0xc0
   18fc8:	adds	r2, r2, r6
   18fcc:	ldr	r6, [sp, #188]	; 0xbc
   18fd0:	adc	r0, r0, r6
   18fd4:	adds	r2, r2, r1
   18fd8:	str	r2, [sp, #264]	; 0x108
   18fdc:	adc	r0, r0, r4
   18fe0:	eor	r2, r2, r8
   18fe4:	str	r0, [sp, #260]	; 0x104
   18fe8:	lsl	r6, r2, #16
   18fec:	eor	r0, r0, r7
   18ff0:	lsr	r2, r2, #16
   18ff4:	orr	r7, r6, r0, lsr #16
   18ff8:	orr	r0, r2, r0, lsl #16
   18ffc:	adds	r2, r0, r5
   19000:	mov	sl, r0
   19004:	str	r0, [sp, #244]	; 0xf4
   19008:	ldr	r5, [sp, #152]	; 0x98
   1900c:	str	r7, [sp, #268]	; 0x10c
   19010:	adc	r0, r7, r3
   19014:	eor	r1, r2, r1
   19018:	str	r2, [sp, #256]	; 0x100
   1901c:	ldr	r3, [sp, #212]	; 0xd4
   19020:	str	r0, [sp, #252]	; 0xfc
   19024:	eor	r0, r0, r4
   19028:	lsl	r2, r1, #1
   1902c:	ldr	r4, [sp, #216]	; 0xd8
   19030:	orr	lr, r2, r0, lsr #31
   19034:	lsl	r0, r0, #1
   19038:	ldr	r2, [sp, #148]	; 0x94
   1903c:	orr	r0, r0, r1, lsr #31
   19040:	ldr	r1, [sp, #144]	; 0x90
   19044:	str	lr, [sp, #248]	; 0xf8
   19048:	str	r0, [sp, #272]	; 0x110
   1904c:	ldr	r0, [sp, #172]	; 0xac
   19050:	eor	r0, r1, r0
   19054:	ldr	r1, [sp, #176]	; 0xb0
   19058:	eor	r1, r2, r1
   1905c:	lsl	r2, r0, #1
   19060:	orr	r2, r2, r1, lsr #31
   19064:	lsl	r1, r1, #1
   19068:	orr	r0, r1, r0, lsr #31
   1906c:	ldr	r1, [sp, #228]	; 0xe4
   19070:	adds	r1, r3, r1
   19074:	ldr	r3, [sp, #232]	; 0xe8
   19078:	adc	r3, r4, r3
   1907c:	ldr	r4, [sp, #156]	; 0x9c
   19080:	adds	r1, r1, r0
   19084:	adc	r3, r3, r2
   19088:	eor	r5, r5, r1
   1908c:	eor	r4, r4, r3
   19090:	adds	r9, r4, r9
   19094:	adc	r8, r5, ip
   19098:	eor	r0, r9, r0
   1909c:	lsl	r7, r0, #8
   190a0:	eor	r2, r8, r2
   190a4:	lsr	r0, r0, #24
   190a8:	orr	ip, r7, r2, lsr #24
   190ac:	orr	r0, r0, r2, lsl #8
   190b0:	ldr	r2, [sp, #288]	; 0x120
   190b4:	adds	r1, r1, r2
   190b8:	ldr	r2, [sp, #284]	; 0x11c
   190bc:	adc	r2, r3, r2
   190c0:	adds	r3, r1, r0
   190c4:	adc	r2, r2, ip
   190c8:	str	r3, [sp, #192]	; 0xc0
   190cc:	mov	r6, r2
   190d0:	eor	r1, r2, r5
   190d4:	str	r2, [sp, #188]	; 0xbc
   190d8:	eor	r2, r3, r4
   190dc:	mov	r4, r3
   190e0:	lsl	r3, r2, #16
   190e4:	lsr	r2, r2, #16
   190e8:	str	r6, [fp, #-276]	; 0xfffffeec
   190ec:	str	r4, [fp, #-280]	; 0xfffffee8
   190f0:	orr	r7, r3, r1, lsr #16
   190f4:	orr	r1, r2, r1, lsl #16
   190f8:	adds	r5, r1, r9
   190fc:	mov	r9, r1
   19100:	str	r1, [sp, #232]	; 0xe8
   19104:	str	r7, [fp, #-188]	; 0xffffff44
   19108:	str	r7, [sp, #228]	; 0xe4
   1910c:	adc	r2, r7, r8
   19110:	eor	r0, r5, r0
   19114:	str	r9, [fp, #-192]	; 0xffffff40
   19118:	str	r5, [fp, #-200]	; 0xffffff38
   1911c:	str	r5, [sp, #216]	; 0xd8
   19120:	mov	r3, r2
   19124:	eor	r1, r2, ip
   19128:	str	r2, [sp, #212]	; 0xd4
   1912c:	lsl	r2, r0, #1
   19130:	orr	r2, r2, r1, lsr #31
   19134:	lsl	r1, r1, #1
   19138:	str	r3, [fp, #-196]	; 0xffffff3c
   1913c:	orr	r0, r1, r0, lsr #31
   19140:	str	r2, [fp, #-240]	; 0xffffff10
   19144:	ldr	r1, [sp, #272]	; 0x110
   19148:	str	r2, [sp, #288]	; 0x120
   1914c:	str	r0, [fp, #-236]	; 0xffffff14
   19150:	str	r0, [sp, #284]	; 0x11c
   19154:	ldr	r0, [sp, #268]	; 0x10c
   19158:	str	sl, [fp, #-184]	; 0xffffff48
   1915c:	str	r0, [fp, #-180]	; 0xffffff4c
   19160:	ldr	r0, [sp, #260]	; 0x104
   19164:	str	r0, [fp, #-268]	; 0xfffffef4
   19168:	ldr	r0, [sp, #264]	; 0x108
   1916c:	str	r0, [fp, #-272]	; 0xfffffef0
   19170:	ldr	r0, [sp, #252]	; 0xfc
   19174:	str	r0, [fp, #-220]	; 0xffffff24
   19178:	ldr	r0, [sp, #256]	; 0x100
   1917c:	str	r0, [fp, #-224]	; 0xffffff20
   19180:	ldr	r0, [sp, #292]	; 0x124
   19184:	str	lr, [r0]
   19188:	str	r1, [r0, #4]
   1918c:	ldr	r0, [sp, #208]	; 0xd0
   19190:	ldr	r1, [sp, #196]	; 0xc4
   19194:	ldr	r2, [sp, #200]	; 0xc8
   19198:	ldr	r5, [sp, #164]	; 0xa4
   1919c:	ldr	r7, [sp, #168]	; 0xa8
   191a0:	adds	r0, r1, r0
   191a4:	ldr	r1, [sp, #204]	; 0xcc
   191a8:	adc	r1, r2, r1
   191ac:	ldr	r2, [sp, #280]	; 0x118
   191b0:	adds	r0, r0, r5
   191b4:	adc	r1, r1, r7
   191b8:	eor	r8, r1, r2
   191bc:	ldr	r2, [sp, #276]	; 0x114
   191c0:	eor	sl, r0, r2
   191c4:	ldr	r2, [sp, #236]	; 0xec
   191c8:	adds	r3, r8, r2
   191cc:	ldr	r2, [sp, #240]	; 0xf0
   191d0:	adc	ip, sl, r2
   191d4:	eor	r2, r3, r5
   191d8:	eor	r6, ip, r7
   191dc:	ldr	r7, [sp, #184]	; 0xb8
   191e0:	lsl	r9, r2, #8
   191e4:	lsr	r2, r2, #24
   191e8:	orr	r2, r2, r6, lsl #8
   191ec:	orr	r9, r9, r6, lsr #24
   191f0:	adds	r0, r0, r7
   191f4:	ldr	r7, [sp, #180]	; 0xb4
   191f8:	adc	r1, r1, r7
   191fc:	adds	r6, r0, r2
   19200:	adc	lr, r1, r9
   19204:	eor	r8, r6, r8
   19208:	eor	r1, lr, sl
   1920c:	lsl	r5, r8, #16
   19210:	orr	r7, r5, r1, lsr #16
   19214:	lsr	r5, r8, #16
   19218:	orr	r0, r5, r1, lsl #16
   1921c:	str	r7, [sp, #280]	; 0x118
   19220:	str	r7, [fp, #-172]	; 0xffffff54
   19224:	adds	r3, r0, r3
   19228:	str	r0, [fp, #-176]	; 0xffffff50
   1922c:	str	r0, [sp, #292]	; 0x124
   19230:	ldr	r0, [sp, #160]	; 0xa0
   19234:	adc	r5, r7, ip
   19238:	eor	r2, r3, r2
   1923c:	str	r3, [fp, #-216]	; 0xffffff28
   19240:	eor	r1, r5, r9
   19244:	str	r5, [fp, #-212]	; 0xffffff2c
   19248:	lsl	r4, r1, #1
   1924c:	orr	r9, r4, r2, lsr #31
   19250:	lsl	r2, r2, #1
   19254:	orr	sl, r2, r1, lsr #31
   19258:	str	r9, [fp, #-252]	; 0xffffff04
   1925c:	str	sl, [fp, #-256]	; 0xffffff00
   19260:	str	lr, [fp, #-260]	; 0xfffffefc
   19264:	str	r6, [fp, #-264]	; 0xfffffef8
   19268:	ldm	r0, {r2, r4, ip}
   1926c:	ldr	r8, [sp, #220]	; 0xdc
   19270:	ldr	r7, [sp, #252]	; 0xfc
   19274:	ldr	r1, [r0, #12]
   19278:	eor	r4, r8, r4
   1927c:	eor	r4, r4, r7
   19280:	str	r4, [r0, #4]
   19284:	mov	r4, r0
   19288:	ldr	r0, [sp, #224]	; 0xe0
   1928c:	eor	r2, r0, r2
   19290:	ldr	r0, [sp, #256]	; 0x100
   19294:	eor	r2, r2, r0
   19298:	ldr	r0, [sp, #188]	; 0xbc
   1929c:	str	r2, [r4]
   192a0:	eor	r0, r0, r1
   192a4:	ldr	r1, [sp, #212]	; 0xd4
   192a8:	eor	r0, r0, r5
   192ac:	str	r0, [r4, #12]
   192b0:	ldr	r0, [sp, #192]	; 0xc0
   192b4:	eor	r0, r0, ip
   192b8:	eor	r0, r0, r3
   192bc:	ldr	r3, [sp, #216]	; 0xd8
   192c0:	str	r0, [r4, #8]
   192c4:	ldr	r0, [r4, #28]
   192c8:	ldr	r2, [fp, #-204]	; 0xffffff34
   192cc:	eor	r0, lr, r0
   192d0:	eor	r0, r0, r1
   192d4:	ldr	r1, [fp, #-208]	; 0xffffff30
   192d8:	str	r0, [r4, #28]
   192dc:	ldr	r0, [r4, #24]
   192e0:	eor	r0, r6, r0
   192e4:	eor	r0, r0, r3
   192e8:	ldr	r3, [sp, #228]	; 0xe4
   192ec:	str	r0, [r4, #24]
   192f0:	ldr	r0, [r4, #36]	; 0x24
   192f4:	eor	r0, r9, r0
   192f8:	eor	r0, r0, r3
   192fc:	ldr	r3, [sp, #232]	; 0xe8
   19300:	str	r0, [r4, #36]	; 0x24
   19304:	ldr	r0, [r4, #32]
   19308:	eor	r0, sl, r0
   1930c:	eor	r0, r0, r3
   19310:	ldr	r3, [sp, #260]	; 0x104
   19314:	str	r0, [r4, #32]
   19318:	ldr	r0, [r4, #20]
   1931c:	eor	r0, r3, r0
   19320:	ldr	r3, [sp, #288]	; 0x120
   19324:	eor	r0, r0, r2
   19328:	ldr	r2, [sp, #264]	; 0x108
   1932c:	str	r0, [r4, #20]
   19330:	ldr	r0, [r4, #16]
   19334:	eor	r0, r2, r0
   19338:	eor	r0, r0, r1
   1933c:	ldr	r1, [sp, #284]	; 0x11c
   19340:	str	r0, [r4, #16]
   19344:	ldr	r0, [r4, #52]	; 0x34
   19348:	ldr	r2, [fp, #-244]	; 0xffffff0c
   1934c:	eor	r0, r1, r0
   19350:	ldr	r1, [sp, #280]	; 0x118
   19354:	eor	r0, r0, r1
   19358:	ldr	r1, [fp, #-248]	; 0xffffff08
   1935c:	str	r0, [r4, #52]	; 0x34
   19360:	ldr	r0, [r4, #48]	; 0x30
   19364:	eor	r0, r3, r0
   19368:	ldr	r3, [sp, #292]	; 0x124
   1936c:	eor	r0, r0, r3
   19370:	str	r0, [r4, #48]	; 0x30
   19374:	ldr	r0, [r4, #44]	; 0x2c
   19378:	eor	r0, r2, r0
   1937c:	ldr	r2, [sp, #268]	; 0x10c
   19380:	eor	r0, r0, r2
   19384:	ldr	r2, [sp, #272]	; 0x110
   19388:	str	r0, [r4, #44]	; 0x2c
   1938c:	ldr	r0, [r4, #40]	; 0x28
   19390:	eor	r0, r1, r0
   19394:	ldr	r1, [sp, #244]	; 0xf4
   19398:	eor	r0, r0, r1
   1939c:	str	r0, [r4, #40]	; 0x28
   193a0:	ldr	r1, [r4, #60]	; 0x3c
   193a4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   193a8:	ldr	r0, [r4, #56]	; 0x38
   193ac:	eor	r1, r2, r1
   193b0:	ldr	r2, [fp, #-168]	; 0xffffff58
   193b4:	eor	r1, r1, r3
   193b8:	str	r1, [r4, #60]	; 0x3c
   193bc:	ldr	r1, [sp, #248]	; 0xf8
   193c0:	eor	r0, r1, r0
   193c4:	eor	r0, r0, r2
   193c8:	str	r0, [r4, #56]	; 0x38
   193cc:	sub	sp, fp, #28
   193d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193d8:	add	fp, sp, #28
   193dc:	sub	sp, sp, #68	; 0x44
   193e0:	mov	r9, sp
   193e4:	mov	sl, r1
   193e8:	mov	r6, r0
   193ec:	vmov.i32	q8, #0	; 0x00000000
   193f0:	mov	r0, #48	; 0x30
   193f4:	mvn	r7, #0
   193f8:	mov	r1, r9
   193fc:	add	r4, r9, #32
   19400:	add	r5, r9, #16
   19404:	cmp	sl, #0
   19408:	vst1.64	{d16-d17}, [r1], r0
   1940c:	vst1.64	{d16-d17}, [r4]
   19410:	vst1.64	{d16-d17}, [r5]
   19414:	vst1.64	{d16-d17}, [r1]
   19418:	beq	1943c <__assert_fail@plt+0x8134>
   1941c:	ldr	r0, [r6, #228]	; 0xe4
   19420:	cmp	r0, r2
   19424:	bhi	1943c <__assert_fail@plt+0x8134>
   19428:	mov	r0, r6
   1942c:	ldr	r1, [r0, #80]!	; 0x50
   19430:	ldr	r2, [r0, #4]
   19434:	orrs	r1, r1, r2
   19438:	beq	19448 <__assert_fail@plt+0x8140>
   1943c:	mov	r0, r7
   19440:	sub	sp, fp, #28
   19444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19448:	add	ip, r6, #64	; 0x40
   1944c:	ldr	r1, [r6, #224]	; 0xe0
   19450:	add	lr, r6, #64	; 0x40
   19454:	add	r8, r6, #96	; 0x60
   19458:	ldm	ip, {r2, r3, r7, ip}
   1945c:	adds	r2, r2, r1
   19460:	adcs	r3, r3, #0
   19464:	adcs	r7, r7, #0
   19468:	adc	ip, ip, #0
   1946c:	stm	lr, {r2, r3, r7, ip}
   19470:	mvn	r3, #0
   19474:	mov	r7, #0
   19478:	ldrb	r2, [r6, #232]	; 0xe8
   1947c:	cmp	r2, #0
   19480:	rsb	r2, r1, #128	; 0x80
   19484:	strne	r3, [r6, #88]	; 0x58
   19488:	strne	r3, [r6, #92]	; 0x5c
   1948c:	str	r3, [r0]
   19490:	str	r3, [r0, #4]
   19494:	add	r0, r8, r1
   19498:	mov	r1, #0
   1949c:	bl	11230 <memset@plt>
   194a0:	mov	r0, r6
   194a4:	mov	r1, r8
   194a8:	bl	13b30 <__assert_fail@plt+0x2828>
   194ac:	add	r1, r6, #32
   194b0:	mov	r2, #228	; 0xe4
   194b4:	add	r0, r6, #48	; 0x30
   194b8:	vld1.64	{d16-d17}, [r1]
   194bc:	add	r1, r6, #16
   194c0:	vld1.64	{d20-d21}, [r6], r2
   194c4:	vld1.64	{d22-d23}, [r0]
   194c8:	mov	r0, #48	; 0x30
   194cc:	vld1.64	{d18-d19}, [r1]
   194d0:	mov	r1, r9
   194d4:	vst1.64	{d20-d21}, [r1], r0
   194d8:	vst1.64	{d16-d17}, [r4]
   194dc:	mov	r0, sl
   194e0:	vst1.64	{d22-d23}, [r1]
   194e4:	vst1.64	{d18-d19}, [r5]
   194e8:	mov	r1, r9
   194ec:	ldr	r2, [r6]
   194f0:	bl	110d4 <memcpy@plt>
   194f4:	movw	r0, #61048	; 0xee78
   194f8:	mov	r1, #0
   194fc:	mov	r2, #64	; 0x40
   19500:	movt	r0, #1
   19504:	ldr	r3, [r0]
   19508:	mov	r0, r9
   1950c:	blx	r3
   19510:	mov	r0, r7
   19514:	sub	sp, fp, #28
   19518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1951c:	nop	{0}
   19520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19524:	add	fp, sp, #28
   19528:	sub	sp, sp, #396	; 0x18c
   1952c:	mov	r5, r1
   19530:	mov	sl, r0
   19534:	cmp	r3, #0
   19538:	mov	r1, r3
   1953c:	mvn	r0, #0
   19540:	movwne	r1, #1
   19544:	cmp	sl, #0
   19548:	beq	19580 <__assert_fail@plt+0x8278>
   1954c:	mov	r6, r2
   19550:	clz	r2, r2
   19554:	lsr	r2, r2, #5
   19558:	ands	r1, r2, r1
   1955c:	bne	19580 <__assert_fail@plt+0x8278>
   19560:	ldr	r4, [fp, #12]
   19564:	cmp	r4, #0
   19568:	mov	r1, r4
   1956c:	movwne	r1, #1
   19570:	cmp	r4, #64	; 0x40
   19574:	subls	r2, r5, #1
   19578:	cmpls	r2, #63	; 0x3f
   1957c:	bls	19588 <__assert_fail@plt+0x8280>
   19580:	sub	sp, fp, #28
   19584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19588:	ldr	r7, [fp, #8]
   1958c:	clz	r2, r7
   19590:	lsr	r2, r2, #5
   19594:	ands	r1, r2, r1
   19598:	bne	19580 <__assert_fail@plt+0x8278>
   1959c:	mov	r9, r3
   195a0:	cmp	r4, #0
   195a4:	beq	196bc <__assert_fail@plt+0x83b4>
   195a8:	cmp	r7, #0
   195ac:	beq	19580 <__assert_fail@plt+0x8278>
   195b0:	sub	r1, r4, #1
   195b4:	cmp	r1, #63	; 0x3f
   195b8:	bhi	19580 <__assert_fail@plt+0x8278>
   195bc:	add	r8, sp, #24
   195c0:	mov	r1, #0
   195c4:	mov	r2, #176	; 0xb0
   195c8:	add	r0, r8, #64	; 0x40
   195cc:	bl	11230 <memset@plt>
   195d0:	add	r0, pc, #744	; 0x2e8
   195d4:	add	r1, pc, #756	; 0x2f4
   195d8:	rsb	r2, r4, #128	; 0x80
   195dc:	vld1.64	{d16-d17}, [r1 :128]
   195e0:	vld1.64	{d18-d19}, [r0 :128]
   195e4:	add	r1, pc, #756	; 0x2f4
   195e8:	add	r0, r8, #8
   195ec:	vld1.64	{d20-d21}, [r1 :128]
   195f0:	uxtb	r1, r4
   195f4:	vst1.64	{d16-d17}, [r0]
   195f8:	add	r0, r8, #24
   195fc:	vst1.64	{d18-d19}, [r0]
   19600:	add	r0, r8, #40	; 0x28
   19604:	mov	r8, r6
   19608:	sub	r6, fp, #160	; 0xa0
   1960c:	vst1.64	{d20-d21}, [r0]
   19610:	movw	r0, #58983	; 0xe667
   19614:	movt	r0, #27145	; 0x6a09
   19618:	str	r0, [sp, #28]
   1961c:	movw	r0, #52505	; 0xcd19
   19620:	movt	r0, #23520	; 0x5be0
   19624:	str	r0, [sp, #84]	; 0x54
   19628:	movw	r0, #8569	; 0x2179
   1962c:	movt	r0, #4990	; 0x137e
   19630:	str	r0, [sp, #80]	; 0x50
   19634:	uxtb	r0, r5
   19638:	str	r0, [sp, #252]	; 0xfc
   1963c:	orr	r0, r0, r1, lsl #8
   19640:	movw	r1, #51464	; 0xc908
   19644:	orr	r0, r0, #65536	; 0x10000
   19648:	movt	r1, #62396	; 0xf3bc
   1964c:	orr	r0, r0, #16777216	; 0x1000000
   19650:	eor	r0, r0, r1
   19654:	mov	r1, #0
   19658:	str	r0, [sp, #24]
   1965c:	add	r0, r6, r4
   19660:	bl	11230 <memset@plt>
   19664:	mov	r0, r6
   19668:	mov	r1, r7
   1966c:	mov	r2, r4
   19670:	bl	110d4 <memcpy@plt>
   19674:	add	r0, sp, #24
   19678:	mov	r1, r6
   1967c:	mov	r2, #128	; 0x80
   19680:	mov	r4, #128	; 0x80
   19684:	add	r0, r0, #96	; 0x60
   19688:	bl	110d4 <memcpy@plt>
   1968c:	movw	r0, #61048	; 0xee78
   19690:	str	r4, [sp, #248]	; 0xf8
   19694:	mov	r1, #0
   19698:	mov	r2, #128	; 0x80
   1969c:	movt	r0, #1
   196a0:	ldr	r3, [r0]
   196a4:	mov	r0, r6
   196a8:	mov	r6, r8
   196ac:	blx	r3
   196b0:	cmp	r9, #0
   196b4:	bne	1974c <__assert_fail@plt+0x8444>
   196b8:	b	19920 <__assert_fail@plt+0x8618>
   196bc:	add	r4, sp, #24
   196c0:	mov	r1, #0
   196c4:	mov	r2, #176	; 0xb0
   196c8:	add	r0, r4, #64	; 0x40
   196cc:	bl	11230 <memset@plt>
   196d0:	add	r0, pc, #904	; 0x388
   196d4:	add	r1, pc, #916	; 0x394
   196d8:	vld1.64	{d16-d17}, [r1 :128]
   196dc:	vld1.64	{d18-d19}, [r0 :128]
   196e0:	add	r1, pc, #920	; 0x398
   196e4:	add	r0, r4, #8
   196e8:	vld1.64	{d20-d21}, [r1 :128]
   196ec:	movw	r1, #51464	; 0xc908
   196f0:	movt	r1, #62396	; 0xf3bc
   196f4:	vst1.64	{d16-d17}, [r0]
   196f8:	add	r0, r4, #24
   196fc:	vst1.64	{d18-d19}, [r0]
   19700:	add	r0, r4, #40	; 0x28
   19704:	vst1.64	{d20-d21}, [r0]
   19708:	movw	r0, #58983	; 0xe667
   1970c:	movt	r0, #27145	; 0x6a09
   19710:	str	r0, [sp, #28]
   19714:	movw	r0, #52505	; 0xcd19
   19718:	movt	r0, #23520	; 0x5be0
   1971c:	str	r0, [sp, #84]	; 0x54
   19720:	movw	r0, #8569	; 0x2179
   19724:	movt	r0, #4990	; 0x137e
   19728:	str	r0, [sp, #80]	; 0x50
   1972c:	uxtb	r0, r5
   19730:	str	r0, [sp, #252]	; 0xfc
   19734:	orr	r0, r0, #65536	; 0x10000
   19738:	orr	r0, r0, #16777216	; 0x1000000
   1973c:	eor	r0, r0, r1
   19740:	str	r0, [sp, #24]
   19744:	cmp	r9, #0
   19748:	beq	19920 <__assert_fail@plt+0x8618>
   1974c:	ldr	r0, [sp, #248]	; 0xf8
   19750:	rsb	r4, r0, #128	; 0x80
   19754:	cmp	r4, r9
   19758:	bcs	198f8 <__assert_fail@plt+0x85f0>
   1975c:	add	r1, sp, #24
   19760:	mov	r8, #0
   19764:	str	r0, [sp, #16]
   19768:	mov	r2, r4
   1976c:	add	r1, r1, #96	; 0x60
   19770:	str	r8, [sp, #248]	; 0xf8
   19774:	str	r1, [sp, #20]
   19778:	add	r0, r1, r0
   1977c:	mov	r1, r6
   19780:	bl	110d4 <memcpy@plt>
   19784:	add	ip, sp, #88	; 0x58
   19788:	mvn	lr, #128	; 0x80
   1978c:	ldm	ip, {r0, r1, ip}
   19790:	ldr	r3, [sp, #100]	; 0x64
   19794:	adds	r7, r0, #128	; 0x80
   19798:	str	r7, [sp, #88]	; 0x58
   1979c:	adc	r7, r1, #0
   197a0:	str	r7, [sp, #92]	; 0x5c
   197a4:	adds	r7, ip, #1
   197a8:	adc	r2, r3, #0
   197ac:	subs	r0, lr, r0
   197b0:	mvn	r0, #0
   197b4:	sbcs	r0, r0, r1
   197b8:	ldr	r1, [sp, #20]
   197bc:	movwcc	r8, #1
   197c0:	cmp	r8, #0
   197c4:	add	r8, sp, #24
   197c8:	moveq	r2, r3
   197cc:	moveq	r7, ip
   197d0:	mov	r0, r8
   197d4:	str	r2, [sp, #100]	; 0x64
   197d8:	str	r7, [sp, #96]	; 0x60
   197dc:	bl	13b30 <__assert_fail@plt+0x2828>
   197e0:	sub	r7, r9, r4
   197e4:	add	r4, r6, r4
   197e8:	cmp	r7, #129	; 0x81
   197ec:	bcc	198f0 <__assert_fail@plt+0x85e8>
   197f0:	ldr	r1, [sp, #16]
   197f4:	movw	r0, #257	; 0x101
   197f8:	str	sl, [sp, #20]
   197fc:	add	sl, r8, #72	; 0x48
   19800:	add	r8, r8, #64	; 0x40
   19804:	str	r6, [sp, #8]
   19808:	str	r5, [sp, #12]
   1980c:	add	r2, r1, r9
   19810:	add	r9, sp, #24
   19814:	sub	r0, r2, r0
   19818:	str	r2, [sp, #4]
   1981c:	bic	r2, r0, #127	; 0x7f
   19820:	rsb	r0, r1, #256	; 0x100
   19824:	add	r0, r0, r2
   19828:	str	r2, [sp, #16]
   1982c:	str	r0, [sp]
   19830:	ldm	r8, {r2, r5}
   19834:	adds	r0, r2, #128	; 0x80
   19838:	adc	r3, r5, #0
   1983c:	stm	r8, {r0, r3}
   19840:	mvn	r3, #128	; 0x80
   19844:	ldm	sl, {r6, ip}
   19848:	adds	r0, r6, #1
   1984c:	adc	r1, ip, #0
   19850:	subs	r2, r3, r2
   19854:	mvn	r2, #0
   19858:	sbcs	r2, r2, r5
   1985c:	mov	r2, #0
   19860:	movwcc	r2, #1
   19864:	cmp	r2, #0
   19868:	moveq	r0, r6
   1986c:	moveq	r1, ip
   19870:	strd	r0, [sl]
   19874:	mov	r0, r9
   19878:	mov	r1, r4
   1987c:	bl	13b30 <__assert_fail@plt+0x2828>
   19880:	sub	r7, r7, #128	; 0x80
   19884:	add	r4, r4, #128	; 0x80
   19888:	cmp	r7, #128	; 0x80
   1988c:	bhi	19830 <__assert_fail@plt+0x8528>
   19890:	ldr	r6, [sp, #8]
   19894:	ldr	r0, [sp]
   19898:	ldr	r1, [sp, #16]
   1989c:	ldr	sl, [sp, #20]
   198a0:	ldr	r5, [sp, #12]
   198a4:	add	r6, r6, r0
   198a8:	ldr	r0, [sp, #4]
   198ac:	sub	r0, r0, #256	; 0x100
   198b0:	sub	r9, r0, r1
   198b4:	b	198f8 <__assert_fail@plt+0x85f0>
   198b8:	nop	{0}
   198bc:	nop	{0}
   198c0:	svcpl	0x001d36f1
   198c4:	strbge	pc, [pc, #-1338]	; 19392 <__assert_fail@plt+0x808a>	; <UNPREDICTABLE>
   198c8:	sfmge	f0, 3, [r6, #836]!	; 0x344
   198cc:	tstpl	lr, pc, ror r2
   198d0:	strbhi	sl, [sl], #1851	; 0x73b
   198d4:	bllt	1a052f0 <optarg@@GLIBC_2.4+0x19d5178>
   198d8:	vcmla.f32	d15, d4, d27[0], #90
   198dc:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   198e0:	blcs	fb4964 <optarg@@GLIBC_2.4+0xf847ec>
   198e4:	blls	173b1c <optarg@@GLIBC_2.4+0x1439a4>
   198e8:	blx	1088e9e <optarg@@GLIBC_2.4+0x1058d26>
   198ec:	svcne	0x0083d9ab
   198f0:	mov	r6, r4
   198f4:	mov	r9, r7
   198f8:	ldr	r0, [sp, #248]	; 0xf8
   198fc:	add	r1, sp, #24
   19900:	mov	r2, r9
   19904:	add	r0, r1, r0
   19908:	mov	r1, r6
   1990c:	add	r0, r0, #96	; 0x60
   19910:	bl	110d4 <memcpy@plt>
   19914:	ldr	r0, [sp, #248]	; 0xf8
   19918:	add	r0, r0, r9
   1991c:	str	r0, [sp, #248]	; 0xf8
   19920:	sub	r9, fp, #160	; 0xa0
   19924:	vmov.i32	q8, #0	; 0x00000000
   19928:	mov	r0, #48	; 0x30
   1992c:	mov	r1, r9
   19930:	add	r7, r9, #32
   19934:	add	r4, r9, #16
   19938:	vst1.64	{d16-d17}, [r1], r0
   1993c:	ldr	r0, [sp, #252]	; 0xfc
   19940:	vst1.64	{d16-d17}, [r7]
   19944:	vst1.64	{d16-d17}, [r4]
   19948:	vst1.64	{d16-d17}, [r1]
   1994c:	cmp	r0, r5
   19950:	bhi	19a54 <__assert_fail@plt+0x874c>
   19954:	ldr	r0, [sp, #104]	; 0x68
   19958:	ldr	r1, [sp, #108]	; 0x6c
   1995c:	orrs	r0, r0, r1
   19960:	bne	19a54 <__assert_fail@plt+0x874c>
   19964:	ldr	r1, [sp, #248]	; 0xf8
   19968:	ldr	r2, [sp, #88]	; 0x58
   1996c:	ldr	r3, [sp, #92]	; 0x5c
   19970:	ldr	r0, [sp, #96]	; 0x60
   19974:	ldr	lr, [sp, #100]	; 0x64
   19978:	add	r5, sp, #24
   1997c:	add	ip, r5, #80	; 0x50
   19980:	adds	r2, r2, r1
   19984:	str	r2, [sp, #88]	; 0x58
   19988:	adcs	r2, r3, #0
   1998c:	mvn	r3, #128	; 0x80
   19990:	str	r2, [sp, #92]	; 0x5c
   19994:	adcs	r2, r0, #0
   19998:	adc	r0, lr, #0
   1999c:	str	r2, [sp, #96]	; 0x60
   199a0:	mvn	r2, #0
   199a4:	str	r0, [sp, #100]	; 0x64
   199a8:	ldrb	r0, [sp, #256]	; 0x100
   199ac:	cmp	r0, #0
   199b0:	beq	199c4 <__assert_fail@plt+0x86bc>
   199b4:	adds	r0, r3, #128	; 0x80
   199b8:	str	r0, [sp, #112]	; 0x70
   199bc:	adc	r0, r2, #0
   199c0:	str	r0, [sp, #116]	; 0x74
   199c4:	adds	r0, r3, #128	; 0x80
   199c8:	add	r8, r5, #96	; 0x60
   199cc:	adc	r3, r2, #0
   199d0:	rsb	r2, r1, #128	; 0x80
   199d4:	stm	ip, {r0, r3}
   199d8:	add	r0, r8, r1
   199dc:	mov	r1, #0
   199e0:	bl	11230 <memset@plt>
   199e4:	mov	r0, r5
   199e8:	mov	r1, r8
   199ec:	bl	13b30 <__assert_fail@plt+0x2828>
   199f0:	add	r1, r5, #32
   199f4:	mov	r2, #228	; 0xe4
   199f8:	add	r0, r5, #48	; 0x30
   199fc:	vld1.64	{d16-d17}, [r1]
   19a00:	add	r1, r5, #16
   19a04:	vld1.64	{d20-d21}, [r5], r2
   19a08:	vld1.64	{d22-d23}, [r0]
   19a0c:	mov	r0, #48	; 0x30
   19a10:	vld1.64	{d18-d19}, [r1]
   19a14:	mov	r1, r9
   19a18:	ldr	r2, [r5]
   19a1c:	vst1.64	{d20-d21}, [r1], r0
   19a20:	mov	r0, sl
   19a24:	vst1.64	{d16-d17}, [r7]
   19a28:	vst1.64	{d22-d23}, [r1]
   19a2c:	mov	r1, r9
   19a30:	vst1.64	{d18-d19}, [r4]
   19a34:	bl	110d4 <memcpy@plt>
   19a38:	movw	r0, #61048	; 0xee78
   19a3c:	mov	r1, #0
   19a40:	mov	r2, #64	; 0x40
   19a44:	movt	r0, #1
   19a48:	ldr	r3, [r0]
   19a4c:	mov	r0, r9
   19a50:	blx	r3
   19a54:	mov	r0, #0
   19a58:	sub	sp, fp, #28
   19a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a60:	svcpl	0x001d36f1
   19a64:	strbge	pc, [pc, #-1338]	; 19532 <__assert_fail@plt+0x822a>	; <UNPREDICTABLE>
   19a68:	sfmge	f0, 3, [r6, #836]!	; 0x344
   19a6c:	tstpl	lr, pc, ror r2
   19a70:	strbhi	sl, [sl], #1851	; 0x73b
   19a74:	bllt	1a05490 <optarg@@GLIBC_2.4+0x19d5318>
   19a78:	vcmla.f32	d15, d4, d27[0], #90
   19a7c:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   19a80:	blcs	fb4b04 <optarg@@GLIBC_2.4+0xf8498c>
   19a84:	blls	173cbc <optarg@@GLIBC_2.4+0x143b44>
   19a88:	blx	108903e <optarg@@GLIBC_2.4+0x1058ec6>
   19a8c:	svcne	0x0083d9ab
   19a90:	b	19520 <__assert_fail@plt+0x8218>
   19a94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19a98:	add	fp, sp, #24
   19a9c:	sub	sp, sp, #248	; 0xf8
   19aa0:	mov	r7, r0
   19aa4:	mov	r0, #32768	; 0x8000
   19aa8:	mov	r9, r2
   19aac:	mov	r8, r1
   19ab0:	bl	1d960 <__assert_fail@plt+0xc658>
   19ab4:	cmp	r0, #0
   19ab8:	beq	19b24 <__assert_fail@plt+0x881c>
   19abc:	mov	r4, sp
   19ac0:	mov	r5, r0
   19ac4:	mov	r1, r9
   19ac8:	mov	r0, r4
   19acc:	bl	13710 <__assert_fail@plt+0x2408>
   19ad0:	b	19ae4 <__assert_fail@plt+0x87dc>
   19ad4:	mov	r0, r4
   19ad8:	mov	r1, r5
   19adc:	mov	r2, #32768	; 0x8000
   19ae0:	bl	13960 <__assert_fail@plt+0x2658>
   19ae4:	mov	r6, #0
   19ae8:	add	r0, r5, r6
   19aec:	rsb	r2, r6, #32768	; 0x8000
   19af0:	mov	r1, #1
   19af4:	mov	r3, r7
   19af8:	bl	11158 <fread@plt>
   19afc:	add	r6, r0, r6
   19b00:	cmp	r6, #32768	; 0x8000
   19b04:	beq	19ad4 <__assert_fail@plt+0x87cc>
   19b08:	cmp	r0, #0
   19b0c:	beq	19b34 <__assert_fail@plt+0x882c>
   19b10:	mov	r0, r7
   19b14:	bl	111e8 <feof@plt>
   19b18:	cmp	r0, #0
   19b1c:	beq	19ae8 <__assert_fail@plt+0x87e0>
   19b20:	b	19b48 <__assert_fail@plt+0x8840>
   19b24:	mvn	r4, #0
   19b28:	mov	r0, r4
   19b2c:	sub	sp, fp, #24
   19b30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19b34:	mov	r0, r7
   19b38:	bl	110bc <ferror@plt>
   19b3c:	mvn	r4, #0
   19b40:	cmp	r0, #0
   19b44:	bne	19b74 <__assert_fail@plt+0x886c>
   19b48:	cmp	r6, #0
   19b4c:	beq	19b60 <__assert_fail@plt+0x8858>
   19b50:	mov	r0, sp
   19b54:	mov	r1, r5
   19b58:	mov	r2, r6
   19b5c:	bl	13960 <__assert_fail@plt+0x2658>
   19b60:	mov	r0, sp
   19b64:	mov	r1, r8
   19b68:	mov	r2, r9
   19b6c:	bl	193d4 <__assert_fail@plt+0x80cc>
   19b70:	mov	r4, #0
   19b74:	mov	r0, r5
   19b78:	bl	19e8c <__assert_fail@plt+0x8b84>
   19b7c:	mov	r0, r4
   19b80:	sub	sp, fp, #24
   19b84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19b88:	movw	r1, #408	; 0x198
   19b8c:	movt	r1, #3
   19b90:	str	r0, [r1, #4]
   19b94:	bx	lr
   19b98:	movw	r1, #408	; 0x198
   19b9c:	movt	r1, #3
   19ba0:	strb	r0, [r1]
   19ba4:	bx	lr
   19ba8:	push	{r4, r5, r6, sl, fp, lr}
   19bac:	add	fp, sp, #16
   19bb0:	sub	sp, sp, #8
   19bb4:	movw	r0, #372	; 0x174
   19bb8:	movt	r0, #3
   19bbc:	ldr	r0, [r0]
   19bc0:	bl	1d9e4 <__assert_fail@plt+0xc6dc>
   19bc4:	cmp	r0, #0
   19bc8:	beq	19bf0 <__assert_fail@plt+0x88e8>
   19bcc:	movw	r5, #408	; 0x198
   19bd0:	movt	r5, #3
   19bd4:	ldrb	r0, [r5]
   19bd8:	cmp	r0, #0
   19bdc:	beq	19c1c <__assert_fail@plt+0x8914>
   19be0:	bl	1120c <__errno_location@plt>
   19be4:	ldr	r0, [r0]
   19be8:	cmp	r0, #32
   19bec:	bne	19c1c <__assert_fail@plt+0x8914>
   19bf0:	movw	r0, #360	; 0x168
   19bf4:	movt	r0, #3
   19bf8:	ldr	r0, [r0]
   19bfc:	bl	1d9e4 <__assert_fail@plt+0xc6dc>
   19c00:	cmp	r0, #0
   19c04:	subeq	sp, fp, #16
   19c08:	popeq	{r4, r5, r6, sl, fp, pc}
   19c0c:	movw	r0, #272	; 0x110
   19c10:	movt	r0, #3
   19c14:	ldr	r0, [r0]
   19c18:	bl	110c8 <_exit@plt>
   19c1c:	movw	r1, #61067	; 0xee8b
   19c20:	mov	r0, #0
   19c24:	mov	r2, #5
   19c28:	movt	r1, #1
   19c2c:	bl	11104 <dcgettext@plt>
   19c30:	ldr	r6, [r5, #4]
   19c34:	mov	r4, r0
   19c38:	bl	1120c <__errno_location@plt>
   19c3c:	ldr	r5, [r0]
   19c40:	cmp	r6, #0
   19c44:	bne	19c60 <__assert_fail@plt+0x8958>
   19c48:	movw	r2, #58990	; 0xe66e
   19c4c:	mov	r0, #0
   19c50:	mov	r1, r5
   19c54:	mov	r3, r4
   19c58:	movt	r2, #1
   19c5c:	b	19c80 <__assert_fail@plt+0x8978>
   19c60:	mov	r0, r6
   19c64:	bl	1bb4c <__assert_fail@plt+0xa844>
   19c68:	movw	r2, #61079	; 0xee97
   19c6c:	mov	r3, r0
   19c70:	str	r4, [sp]
   19c74:	mov	r0, #0
   19c78:	mov	r1, r5
   19c7c:	movt	r2, #1
   19c80:	bl	1117c <error@plt>
   19c84:	movw	r0, #272	; 0x110
   19c88:	movt	r0, #3
   19c8c:	ldr	r0, [r0]
   19c90:	bl	110c8 <_exit@plt>
   19c94:	b	11098 <posix_fadvise64@plt>
   19c98:	cmp	r0, #0
   19c9c:	bxeq	lr
   19ca0:	push	{r4, sl, fp, lr}
   19ca4:	add	fp, sp, #8
   19ca8:	sub	sp, sp, #16
   19cac:	mov	r4, r1
   19cb0:	bl	11248 <fileno@plt>
   19cb4:	mov	r1, #0
   19cb8:	mov	r2, #0
   19cbc:	mov	r3, #0
   19cc0:	str	r1, [sp]
   19cc4:	stmib	sp, {r1, r4}
   19cc8:	bl	11098 <posix_fadvise64@plt>
   19ccc:	sub	sp, fp, #8
   19cd0:	pop	{r4, sl, fp, pc}
   19cd4:	push	{r4, r5, r6, sl, fp, lr}
   19cd8:	add	fp, sp, #16
   19cdc:	sub	sp, sp, #8
   19ce0:	mov	r4, r0
   19ce4:	bl	11248 <fileno@plt>
   19ce8:	cmn	r0, #1
   19cec:	ble	19d60 <__assert_fail@plt+0x8a58>
   19cf0:	mov	r0, r4
   19cf4:	bl	111a0 <__freading@plt>
   19cf8:	cmp	r0, #0
   19cfc:	beq	19d28 <__assert_fail@plt+0x8a20>
   19d00:	mov	r0, r4
   19d04:	bl	11248 <fileno@plt>
   19d08:	mov	r1, #1
   19d0c:	mov	r2, #0
   19d10:	mov	r3, #0
   19d14:	str	r1, [sp]
   19d18:	bl	11140 <lseek64@plt>
   19d1c:	and	r0, r0, r1
   19d20:	cmn	r0, #1
   19d24:	beq	19d60 <__assert_fail@plt+0x8a58>
   19d28:	mov	r0, r4
   19d2c:	bl	19d70 <__assert_fail@plt+0x8a68>
   19d30:	cmp	r0, #0
   19d34:	beq	19d60 <__assert_fail@plt+0x8a58>
   19d38:	bl	1120c <__errno_location@plt>
   19d3c:	ldr	r6, [r0]
   19d40:	mov	r5, r0
   19d44:	mov	r0, r4
   19d48:	bl	11260 <fclose@plt>
   19d4c:	cmp	r6, #0
   19d50:	strne	r6, [r5]
   19d54:	mvnne	r0, #0
   19d58:	sub	sp, fp, #16
   19d5c:	pop	{r4, r5, r6, sl, fp, pc}
   19d60:	mov	r0, r4
   19d64:	sub	sp, fp, #16
   19d68:	pop	{r4, r5, r6, sl, fp, lr}
   19d6c:	b	11260 <fclose@plt>
   19d70:	push	{r4, sl, fp, lr}
   19d74:	add	fp, sp, #8
   19d78:	sub	sp, sp, #8
   19d7c:	mov	r4, r0
   19d80:	cmp	r0, #0
   19d84:	beq	19da0 <__assert_fail@plt+0x8a98>
   19d88:	mov	r0, r4
   19d8c:	bl	111a0 <__freading@plt>
   19d90:	cmp	r0, #0
   19d94:	ldrbne	r0, [r4, #1]
   19d98:	tstne	r0, #1
   19d9c:	bne	19db0 <__assert_fail@plt+0x8aa8>
   19da0:	mov	r0, r4
   19da4:	sub	sp, fp, #8
   19da8:	pop	{r4, sl, fp, lr}
   19dac:	b	110a4 <fflush@plt>
   19db0:	mov	r0, #1
   19db4:	mov	r2, #0
   19db8:	mov	r3, #0
   19dbc:	str	r0, [sp]
   19dc0:	mov	r0, r4
   19dc4:	bl	19eb4 <__assert_fail@plt+0x8bac>
   19dc8:	mov	r0, r4
   19dcc:	sub	sp, fp, #8
   19dd0:	pop	{r4, sl, fp, lr}
   19dd4:	b	110a4 <fflush@plt>
   19dd8:	push	{r4, r5, r6, r7, fp, lr}
   19ddc:	add	fp, sp, #16
   19de0:	mov	r5, r1
   19de4:	bl	112c0 <fopen64@plt>
   19de8:	mov	r4, #0
   19dec:	cmp	r0, #0
   19df0:	beq	19e40 <__assert_fail@plt+0x8b38>
   19df4:	mov	r6, r0
   19df8:	bl	11248 <fileno@plt>
   19dfc:	cmp	r0, #2
   19e00:	movhi	r0, r6
   19e04:	pophi	{r4, r5, r6, r7, fp, pc}
   19e08:	bl	1beec <__assert_fail@plt+0xabe4>
   19e0c:	cmn	r0, #1
   19e10:	ble	19e6c <__assert_fail@plt+0x8b64>
   19e14:	mov	r7, r0
   19e18:	mov	r0, r6
   19e1c:	bl	19cd4 <__assert_fail@plt+0x89cc>
   19e20:	cmp	r0, #0
   19e24:	bne	19e48 <__assert_fail@plt+0x8b40>
   19e28:	mov	r0, r7
   19e2c:	mov	r1, r5
   19e30:	bl	11050 <fdopen@plt>
   19e34:	mov	r4, r0
   19e38:	cmp	r0, #0
   19e3c:	beq	19e48 <__assert_fail@plt+0x8b40>
   19e40:	mov	r0, r4
   19e44:	pop	{r4, r5, r6, r7, fp, pc}
   19e48:	bl	1120c <__errno_location@plt>
   19e4c:	ldr	r5, [r0]
   19e50:	mov	r4, r0
   19e54:	mov	r0, r7
   19e58:	bl	112f0 <close@plt>
   19e5c:	str	r5, [r4]
   19e60:	mov	r4, #0
   19e64:	mov	r0, r4
   19e68:	pop	{r4, r5, r6, r7, fp, pc}
   19e6c:	bl	1120c <__errno_location@plt>
   19e70:	ldr	r7, [r0]
   19e74:	mov	r5, r0
   19e78:	mov	r0, r6
   19e7c:	bl	19cd4 <__assert_fail@plt+0x89cc>
   19e80:	mov	r0, r4
   19e84:	str	r7, [r5]
   19e88:	pop	{r4, r5, r6, r7, fp, pc}
   19e8c:	push	{r4, r5, r6, sl, fp, lr}
   19e90:	add	fp, sp, #16
   19e94:	mov	r4, r0
   19e98:	bl	1120c <__errno_location@plt>
   19e9c:	ldr	r6, [r0]
   19ea0:	mov	r5, r0
   19ea4:	mov	r0, r4
   19ea8:	bl	110b0 <free@plt>
   19eac:	str	r6, [r5]
   19eb0:	pop	{r4, r5, r6, sl, fp, pc}
   19eb4:	push	{r4, r5, r6, r7, fp, lr}
   19eb8:	add	fp, sp, #16
   19ebc:	sub	sp, sp, #8
   19ec0:	mov	r4, r0
   19ec4:	ldr	r0, [r0, #4]
   19ec8:	mov	r5, r3
   19ecc:	mov	r6, r2
   19ed0:	ldr	r1, [r4, #8]
   19ed4:	cmp	r1, r0
   19ed8:	bne	19ef4 <__assert_fail@plt+0x8bec>
   19edc:	ldrd	r0, [r4, #16]
   19ee0:	cmp	r1, r0
   19ee4:	bne	19ef4 <__assert_fail@plt+0x8bec>
   19ee8:	ldr	r0, [r4, #36]	; 0x24
   19eec:	cmp	r0, #0
   19ef0:	beq	19f0c <__assert_fail@plt+0x8c04>
   19ef4:	mov	r0, r4
   19ef8:	mov	r2, r6
   19efc:	mov	r3, r5
   19f00:	sub	sp, fp, #16
   19f04:	pop	{r4, r5, r6, r7, fp, lr}
   19f08:	b	1126c <fseeko64@plt>
   19f0c:	ldr	r7, [fp, #8]
   19f10:	mov	r0, r4
   19f14:	bl	11248 <fileno@plt>
   19f18:	mov	r2, r6
   19f1c:	mov	r3, r5
   19f20:	str	r7, [sp]
   19f24:	bl	11140 <lseek64@plt>
   19f28:	and	r2, r0, r1
   19f2c:	cmn	r2, #1
   19f30:	mvneq	r0, #0
   19f34:	subeq	sp, fp, #16
   19f38:	popeq	{r4, r5, r6, r7, fp, pc}
   19f3c:	strd	r0, [r4, #80]	; 0x50
   19f40:	ldr	r0, [r4]
   19f44:	bic	r0, r0, #16
   19f48:	str	r0, [r4]
   19f4c:	mov	r0, #0
   19f50:	sub	sp, fp, #16
   19f54:	pop	{r4, r5, r6, r7, fp, pc}
   19f58:	push	{r4, r5, fp, lr}
   19f5c:	add	fp, sp, #8
   19f60:	cmp	r0, #0
   19f64:	beq	19ff8 <__assert_fail@plt+0x8cf0>
   19f68:	mov	r1, #47	; 0x2f
   19f6c:	mov	r4, r0
   19f70:	bl	1129c <strrchr@plt>
   19f74:	cmp	r0, #0
   19f78:	mov	r5, r4
   19f7c:	addne	r5, r0, #1
   19f80:	sub	r0, r5, r4
   19f84:	cmp	r0, #7
   19f88:	blt	19fdc <__assert_fail@plt+0x8cd4>
   19f8c:	movw	r1, #61142	; 0xeed6
   19f90:	sub	r0, r5, #7
   19f94:	mov	r2, #7
   19f98:	movt	r1, #1
   19f9c:	bl	112d8 <strncmp@plt>
   19fa0:	cmp	r0, #0
   19fa4:	bne	19fdc <__assert_fail@plt+0x8cd4>
   19fa8:	movw	r1, #61150	; 0xeede
   19fac:	mov	r0, r5
   19fb0:	mov	r2, #3
   19fb4:	movt	r1, #1
   19fb8:	bl	112d8 <strncmp@plt>
   19fbc:	cmp	r0, #0
   19fc0:	beq	19fcc <__assert_fail@plt+0x8cc4>
   19fc4:	mov	r4, r5
   19fc8:	b	19fdc <__assert_fail@plt+0x8cd4>
   19fcc:	movw	r0, #344	; 0x158
   19fd0:	add	r4, r5, #3
   19fd4:	movt	r0, #3
   19fd8:	str	r4, [r0]
   19fdc:	movw	r0, #348	; 0x15c
   19fe0:	movt	r0, #3
   19fe4:	str	r4, [r0]
   19fe8:	movw	r0, #416	; 0x1a0
   19fec:	movt	r0, #3
   19ff0:	str	r4, [r0]
   19ff4:	pop	{r4, r5, fp, pc}
   19ff8:	movw	r0, #360	; 0x168
   19ffc:	mov	r1, #55	; 0x37
   1a000:	mov	r2, #1
   1a004:	movt	r0, #3
   1a008:	ldr	r3, [r0]
   1a00c:	movw	r0, #61086	; 0xee9e
   1a010:	movt	r0, #1
   1a014:	bl	11134 <fwrite@plt>
   1a018:	bl	112e4 <abort@plt>
   1a01c:	push	{r4, r5, r6, sl, fp, lr}
   1a020:	add	fp, sp, #16
   1a024:	mov	r4, r0
   1a028:	movw	r0, #424	; 0x1a8
   1a02c:	movt	r0, #3
   1a030:	cmp	r4, #0
   1a034:	moveq	r4, r0
   1a038:	bl	1120c <__errno_location@plt>
   1a03c:	ldr	r6, [r0]
   1a040:	mov	r5, r0
   1a044:	mov	r0, r4
   1a048:	mov	r1, #48	; 0x30
   1a04c:	bl	1ca18 <__assert_fail@plt+0xb710>
   1a050:	str	r6, [r5]
   1a054:	pop	{r4, r5, r6, sl, fp, pc}
   1a058:	movw	r1, #424	; 0x1a8
   1a05c:	cmp	r0, #0
   1a060:	movt	r1, #3
   1a064:	movne	r1, r0
   1a068:	ldr	r0, [r1]
   1a06c:	bx	lr
   1a070:	movw	r2, #424	; 0x1a8
   1a074:	cmp	r0, #0
   1a078:	movt	r2, #3
   1a07c:	movne	r2, r0
   1a080:	str	r1, [r2]
   1a084:	bx	lr
   1a088:	movw	r3, #424	; 0x1a8
   1a08c:	cmp	r0, #0
   1a090:	movt	r3, #3
   1a094:	movne	r3, r0
   1a098:	ubfx	r0, r1, #5, #3
   1a09c:	and	r1, r1, #31
   1a0a0:	add	r0, r3, r0, lsl #2
   1a0a4:	ldr	r3, [r0, #8]
   1a0a8:	eor	r2, r2, r3, lsr r1
   1a0ac:	and	r2, r2, #1
   1a0b0:	eor	r2, r3, r2, lsl r1
   1a0b4:	str	r2, [r0, #8]
   1a0b8:	mov	r0, #1
   1a0bc:	and	r0, r0, r3, lsr r1
   1a0c0:	bx	lr
   1a0c4:	movw	r2, #424	; 0x1a8
   1a0c8:	cmp	r0, #0
   1a0cc:	movt	r2, #3
   1a0d0:	movne	r2, r0
   1a0d4:	ldr	r0, [r2, #4]
   1a0d8:	str	r1, [r2, #4]
   1a0dc:	bx	lr
   1a0e0:	movw	r3, #424	; 0x1a8
   1a0e4:	cmp	r0, #0
   1a0e8:	movt	r3, #3
   1a0ec:	movne	r3, r0
   1a0f0:	cmp	r1, #0
   1a0f4:	mov	r0, #10
   1a0f8:	cmpne	r2, #0
   1a0fc:	str	r0, [r3]
   1a100:	bne	1a110 <__assert_fail@plt+0x8e08>
   1a104:	push	{fp, lr}
   1a108:	mov	fp, sp
   1a10c:	bl	112e4 <abort@plt>
   1a110:	str	r1, [r3, #40]	; 0x28
   1a114:	str	r2, [r3, #44]	; 0x2c
   1a118:	bx	lr
   1a11c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a120:	add	fp, sp, #28
   1a124:	sub	sp, sp, #20
   1a128:	mov	r7, r0
   1a12c:	ldr	r0, [fp, #8]
   1a130:	movw	r5, #424	; 0x1a8
   1a134:	mov	r8, r3
   1a138:	mov	r9, r2
   1a13c:	mov	sl, r1
   1a140:	movt	r5, #3
   1a144:	cmp	r0, #0
   1a148:	movne	r5, r0
   1a14c:	bl	1120c <__errno_location@plt>
   1a150:	mov	r4, r0
   1a154:	ldm	r5, {r0, r1}
   1a158:	ldr	r2, [r5, #40]	; 0x28
   1a15c:	ldr	r3, [r5, #44]	; 0x2c
   1a160:	add	r5, r5, #8
   1a164:	ldr	r6, [r4]
   1a168:	stm	sp, {r0, r1, r5}
   1a16c:	str	r2, [sp, #12]
   1a170:	str	r3, [sp, #16]
   1a174:	mov	r0, r7
   1a178:	mov	r1, sl
   1a17c:	mov	r2, r9
   1a180:	mov	r3, r8
   1a184:	bl	1a194 <__assert_fail@plt+0x8e8c>
   1a188:	str	r6, [r4]
   1a18c:	sub	sp, fp, #28
   1a190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a198:	add	fp, sp, #28
   1a19c:	sub	sp, sp, #156	; 0x9c
   1a1a0:	str	r0, [sp, #76]	; 0x4c
   1a1a4:	ldr	r0, [fp, #12]
   1a1a8:	mov	r6, r1
   1a1ac:	str	r3, [sp, #84]	; 0x54
   1a1b0:	str	r2, [fp, #-84]	; 0xffffffac
   1a1b4:	and	r1, r0, #4
   1a1b8:	str	r1, [sp, #24]
   1a1bc:	and	r1, r0, #1
   1a1c0:	str	r1, [sp, #28]
   1a1c4:	ubfx	r8, r0, #1, #1
   1a1c8:	bl	1114c <__ctype_get_mb_cur_max@plt>
   1a1cc:	str	r0, [sp, #32]
   1a1d0:	ldr	r0, [fp, #24]
   1a1d4:	ldr	r7, [fp, #8]
   1a1d8:	mov	r1, #0
   1a1dc:	mov	r2, #0
   1a1e0:	mov	r4, #1
   1a1e4:	str	r1, [sp, #52]	; 0x34
   1a1e8:	str	r0, [sp, #72]	; 0x48
   1a1ec:	ldr	r0, [fp, #20]
   1a1f0:	str	r0, [sp, #68]	; 0x44
   1a1f4:	mov	r0, #0
   1a1f8:	str	r0, [sp, #48]	; 0x30
   1a1fc:	mov	r0, #0
   1a200:	str	r0, [sp, #92]	; 0x5c
   1a204:	mov	r0, #0
   1a208:	str	r0, [fp, #-76]	; 0xffffffb4
   1a20c:	mov	r0, #0
   1a210:	cmp	r7, #10
   1a214:	bhi	1b4fc <__assert_fail@plt+0xa1f4>
   1a218:	add	r1, pc, #28
   1a21c:	mov	sl, r6
   1a220:	ldr	r6, [sp, #76]	; 0x4c
   1a224:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a228:	ldr	lr, [sp, #84]	; 0x54
   1a22c:	mov	r9, #0
   1a230:	mov	r3, #1
   1a234:	mov	r5, #0
   1a238:	ldr	pc, [r1, r7, lsl #2]
   1a23c:	andeq	sl, r1, ip, lsl #6
   1a240:	andeq	sl, r1, r8, asr #6
   1a244:	andeq	sl, r1, ip, lsl r3
   1a248:	andeq	sl, r1, r4, lsl #6
   1a24c:	andeq	sl, r1, ip, lsr r3
   1a250:	andeq	sl, r1, r0, ror r3
   1a254:	andeq	sl, r1, ip, lsr #6
   1a258:	andeq	sl, r1, ip, ror r5
   1a25c:	andeq	sl, r1, r8, ror #4
   1a260:	andeq	sl, r1, r8, ror #4
   1a264:	andeq	sl, r1, r0, lsl r5
   1a268:	mov	r9, r4
   1a26c:	movw	r4, #61232	; 0xef30
   1a270:	mov	r5, r8
   1a274:	mov	r8, r2
   1a278:	mov	r0, #0
   1a27c:	mov	r2, #5
   1a280:	movt	r4, #1
   1a284:	mov	r1, r4
   1a288:	bl	11104 <dcgettext@plt>
   1a28c:	cmp	r0, r4
   1a290:	str	r0, [sp, #68]	; 0x44
   1a294:	bne	1a424 <__assert_fail@plt+0x911c>
   1a298:	bl	1dc48 <__assert_fail@plt+0xc940>
   1a29c:	ldrb	r1, [r0]
   1a2a0:	and	r1, r1, #223	; 0xdf
   1a2a4:	cmp	r1, #71	; 0x47
   1a2a8:	beq	1a3f0 <__assert_fail@plt+0x90e8>
   1a2ac:	cmp	r1, #85	; 0x55
   1a2b0:	bne	1a408 <__assert_fail@plt+0x9100>
   1a2b4:	ldrb	r1, [r0, #1]
   1a2b8:	and	r1, r1, #223	; 0xdf
   1a2bc:	cmp	r1, #84	; 0x54
   1a2c0:	bne	1a408 <__assert_fail@plt+0x9100>
   1a2c4:	ldrb	r1, [r0, #2]
   1a2c8:	and	r1, r1, #223	; 0xdf
   1a2cc:	cmp	r1, #70	; 0x46
   1a2d0:	bne	1a408 <__assert_fail@plt+0x9100>
   1a2d4:	ldrb	r1, [r0, #3]
   1a2d8:	cmp	r1, #45	; 0x2d
   1a2dc:	ldrbeq	r1, [r0, #4]
   1a2e0:	cmpeq	r1, #56	; 0x38
   1a2e4:	bne	1a408 <__assert_fail@plt+0x9100>
   1a2e8:	ldrb	r0, [r0, #5]
   1a2ec:	cmp	r0, #0
   1a2f0:	movw	r0, #61236	; 0xef34
   1a2f4:	movt	r0, #1
   1a2f8:	str	r0, [sp, #68]	; 0x44
   1a2fc:	bne	1a408 <__assert_fail@plt+0x9100>
   1a300:	b	1a424 <__assert_fail@plt+0x911c>
   1a304:	mov	r0, #1
   1a308:	b	1a348 <__assert_fail@plt+0x9040>
   1a30c:	mov	r7, #0
   1a310:	mov	r9, #0
   1a314:	mov	r3, r0
   1a318:	b	1a3e8 <__assert_fail@plt+0x90e0>
   1a31c:	tst	r8, #1
   1a320:	bne	1a348 <__assert_fail@plt+0x9040>
   1a324:	mov	r3, r0
   1a328:	b	1a3a0 <__assert_fail@plt+0x9098>
   1a32c:	mov	r0, #1
   1a330:	mov	r9, #0
   1a334:	mov	r7, #5
   1a338:	b	1a384 <__assert_fail@plt+0x907c>
   1a33c:	mov	r3, #1
   1a340:	tst	r8, #1
   1a344:	beq	1a3a0 <__assert_fail@plt+0x9098>
   1a348:	mov	r1, #1
   1a34c:	mov	r9, #0
   1a350:	mov	r7, #2
   1a354:	mov	r3, r0
   1a358:	mov	r5, #1
   1a35c:	str	r1, [fp, #-76]	; 0xffffffb4
   1a360:	movw	r1, #61234	; 0xef32
   1a364:	movt	r1, #1
   1a368:	str	r1, [sp, #92]	; 0x5c
   1a36c:	b	1a57c <__assert_fail@plt+0x9274>
   1a370:	mov	r7, #5
   1a374:	tst	r8, #1
   1a378:	beq	1a3c0 <__assert_fail@plt+0x90b8>
   1a37c:	mov	r0, #1
   1a380:	mov	r9, #0
   1a384:	str	r0, [fp, #-76]	; 0xffffffb4
   1a388:	movw	r0, #61230	; 0xef2e
   1a38c:	mov	r3, #1
   1a390:	mov	r5, #1
   1a394:	movt	r0, #1
   1a398:	str	r0, [sp, #92]	; 0x5c
   1a39c:	b	1a57c <__assert_fail@plt+0x9274>
   1a3a0:	cmp	sl, #0
   1a3a4:	mov	r9, #1
   1a3a8:	mov	r7, #2
   1a3ac:	movne	r0, #39	; 0x27
   1a3b0:	strbne	r0, [r6]
   1a3b4:	movw	r0, #61234	; 0xef32
   1a3b8:	movt	r0, #1
   1a3bc:	b	1a3dc <__assert_fail@plt+0x90d4>
   1a3c0:	cmp	sl, #0
   1a3c4:	mov	r9, #1
   1a3c8:	mov	r3, #1
   1a3cc:	movne	r0, #34	; 0x22
   1a3d0:	strbne	r0, [r6]
   1a3d4:	movw	r0, #61230	; 0xef2e
   1a3d8:	movt	r0, #1
   1a3dc:	str	r0, [sp, #92]	; 0x5c
   1a3e0:	mov	r0, #1
   1a3e4:	str	r0, [fp, #-76]	; 0xffffffb4
   1a3e8:	mov	r5, #0
   1a3ec:	b	1a57c <__assert_fail@plt+0x9274>
   1a3f0:	ldrb	r1, [r0, #1]
   1a3f4:	and	r1, r1, #223	; 0xdf
   1a3f8:	cmp	r1, #66	; 0x42
   1a3fc:	ldrbeq	r1, [r0, #2]
   1a400:	cmpeq	r1, #49	; 0x31
   1a404:	beq	1b324 <__assert_fail@plt+0xa01c>
   1a408:	movw	r0, #61234	; 0xef32
   1a40c:	movw	r1, #61230	; 0xef2e
   1a410:	cmp	r7, #9
   1a414:	movt	r0, #1
   1a418:	movt	r1, #1
   1a41c:	moveq	r0, r1
   1a420:	str	r0, [sp, #68]	; 0x44
   1a424:	movw	r4, #61234	; 0xef32
   1a428:	mov	r0, #0
   1a42c:	mov	r2, #5
   1a430:	movt	r4, #1
   1a434:	mov	r1, r4
   1a438:	bl	11104 <dcgettext@plt>
   1a43c:	cmp	r0, r4
   1a440:	str	r0, [sp, #72]	; 0x48
   1a444:	beq	1a454 <__assert_fail@plt+0x914c>
   1a448:	mov	r4, r9
   1a44c:	mov	r2, r8
   1a450:	b	1a50c <__assert_fail@plt+0x9204>
   1a454:	bl	1dc48 <__assert_fail@plt+0xc940>
   1a458:	ldrb	r1, [r0]
   1a45c:	mov	r4, r9
   1a460:	and	r1, r1, #223	; 0xdf
   1a464:	cmp	r1, #71	; 0x47
   1a468:	beq	1a4c4 <__assert_fail@plt+0x91bc>
   1a46c:	cmp	r1, #85	; 0x55
   1a470:	mov	r2, r8
   1a474:	bne	1a4ec <__assert_fail@plt+0x91e4>
   1a478:	ldrb	r1, [r0, #1]
   1a47c:	and	r1, r1, #223	; 0xdf
   1a480:	cmp	r1, #84	; 0x54
   1a484:	bne	1a4ec <__assert_fail@plt+0x91e4>
   1a488:	ldrb	r1, [r0, #2]
   1a48c:	and	r1, r1, #223	; 0xdf
   1a490:	cmp	r1, #70	; 0x46
   1a494:	ldrbeq	r1, [r0, #3]
   1a498:	cmpeq	r1, #45	; 0x2d
   1a49c:	bne	1a4ec <__assert_fail@plt+0x91e4>
   1a4a0:	ldrb	r1, [r0, #4]
   1a4a4:	cmp	r1, #56	; 0x38
   1a4a8:	ldrbeq	r0, [r0, #5]
   1a4ac:	cmpeq	r0, #0
   1a4b0:	bne	1a4ec <__assert_fail@plt+0x91e4>
   1a4b4:	movw	r0, #61240	; 0xef38
   1a4b8:	movt	r0, #1
   1a4bc:	str	r0, [sp, #72]	; 0x48
   1a4c0:	b	1a50c <__assert_fail@plt+0x9204>
   1a4c4:	ldrb	r1, [r0, #1]
   1a4c8:	mov	r2, r8
   1a4cc:	and	r1, r1, #223	; 0xdf
   1a4d0:	cmp	r1, #66	; 0x42
   1a4d4:	bne	1a4ec <__assert_fail@plt+0x91e4>
   1a4d8:	ldrb	r1, [r0, #2]
   1a4dc:	cmp	r1, #49	; 0x31
   1a4e0:	ldrbeq	r1, [r0, #3]
   1a4e4:	cmpeq	r1, #56	; 0x38
   1a4e8:	beq	1b368 <__assert_fail@plt+0xa060>
   1a4ec:	movw	r0, #61234	; 0xef32
   1a4f0:	cmp	r7, #9
   1a4f4:	movt	r0, #1
   1a4f8:	mov	r1, r0
   1a4fc:	movw	r0, #61230	; 0xef2e
   1a500:	movt	r0, #1
   1a504:	moveq	r1, r0
   1a508:	str	r1, [sp, #72]	; 0x48
   1a50c:	mov	r8, r5
   1a510:	mov	r9, #0
   1a514:	tst	r8, #1
   1a518:	mov	r5, r8
   1a51c:	str	r2, [fp, #-48]	; 0xffffffd0
   1a520:	bne	1a558 <__assert_fail@plt+0x9250>
   1a524:	ldr	r0, [sp, #68]	; 0x44
   1a528:	ldrb	r0, [r0]
   1a52c:	cmp	r0, #0
   1a530:	beq	1a558 <__assert_fail@plt+0x9250>
   1a534:	ldr	r1, [sp, #68]	; 0x44
   1a538:	mov	r9, #0
   1a53c:	add	r1, r1, #1
   1a540:	cmp	r9, sl
   1a544:	strbcc	r0, [r6, r9]
   1a548:	ldrb	r0, [r1, r9]
   1a54c:	add	r9, r9, #1
   1a550:	cmp	r0, #0
   1a554:	bne	1a540 <__assert_fail@plt+0x9238>
   1a558:	ldr	r8, [sp, #72]	; 0x48
   1a55c:	mov	r0, r8
   1a560:	bl	111f4 <strlen@plt>
   1a564:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a568:	ldr	lr, [sp, #84]	; 0x54
   1a56c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a570:	str	r0, [fp, #-76]	; 0xffffffb4
   1a574:	str	r8, [sp, #92]	; 0x5c
   1a578:	mov	r3, #1
   1a57c:	ldr	r0, [fp, #16]
   1a580:	str	r7, [fp, #-64]	; 0xffffffc0
   1a584:	str	r5, [fp, #-72]	; 0xffffffb8
   1a588:	str	r3, [sp, #80]	; 0x50
   1a58c:	cmp	r0, #0
   1a590:	movwne	r0, #1
   1a594:	and	r0, r0, r5
   1a598:	str	r0, [fp, #-88]	; 0xffffffa8
   1a59c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a5a0:	cmp	r0, #0
   1a5a4:	movwne	r0, #1
   1a5a8:	subs	r7, r7, #2
   1a5ac:	and	r1, r0, r5
   1a5b0:	str	r7, [fp, #-80]	; 0xffffffb0
   1a5b4:	and	r1, r3, r1
   1a5b8:	str	r1, [sp, #40]	; 0x28
   1a5bc:	clz	r1, r7
   1a5c0:	lsr	r1, r1, #5
   1a5c4:	and	r1, r1, r5
   1a5c8:	eor	r5, r5, #1
   1a5cc:	str	r1, [sp, #36]	; 0x24
   1a5d0:	mov	r1, r7
   1a5d4:	str	r5, [sp, #88]	; 0x58
   1a5d8:	mov	r7, #0
   1a5dc:	movwne	r1, #1
   1a5e0:	orr	r5, r1, r5
   1a5e4:	and	r1, r1, r3
   1a5e8:	and	r0, r0, r1
   1a5ec:	str	r5, [sp, #60]	; 0x3c
   1a5f0:	str	r1, [fp, #-68]	; 0xffffffbc
   1a5f4:	str	r0, [fp, #-60]	; 0xffffffc4
   1a5f8:	eor	r0, r3, #1
   1a5fc:	str	r0, [sp, #44]	; 0x2c
   1a600:	cmn	lr, #1
   1a604:	beq	1a614 <__assert_fail@plt+0x930c>
   1a608:	cmp	r7, lr
   1a60c:	bne	1a620 <__assert_fail@plt+0x9318>
   1a610:	b	1b298 <__assert_fail@plt+0x9f90>
   1a614:	ldrb	r0, [ip, r7]
   1a618:	cmp	r0, #0
   1a61c:	beq	1b2a0 <__assert_fail@plt+0x9f98>
   1a620:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a624:	mov	r8, #0
   1a628:	str	r4, [fp, #-52]	; 0xffffffcc
   1a62c:	str	r2, [fp, #-48]	; 0xffffffd0
   1a630:	cmp	r0, #0
   1a634:	beq	1a668 <__assert_fail@plt+0x9360>
   1a638:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a63c:	add	r4, r7, r0
   1a640:	cmp	r0, #2
   1a644:	bcc	1a660 <__assert_fail@plt+0x9358>
   1a648:	cmn	lr, #1
   1a64c:	bne	1a660 <__assert_fail@plt+0x9358>
   1a650:	mov	r0, ip
   1a654:	bl	111f4 <strlen@plt>
   1a658:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a65c:	mov	lr, r0
   1a660:	cmp	r4, lr
   1a664:	bls	1a680 <__assert_fail@plt+0x9378>
   1a668:	mov	r0, #0
   1a66c:	str	r0, [fp, #-56]	; 0xffffffc8
   1a670:	ldrb	r5, [ip, r7]
   1a674:	cmp	r5, #126	; 0x7e
   1a678:	bls	1a6d0 <__assert_fail@plt+0x93c8>
   1a67c:	b	1aad8 <__assert_fail@plt+0x97d0>
   1a680:	ldr	r1, [sp, #92]	; 0x5c
   1a684:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a688:	add	r0, ip, r7
   1a68c:	mov	r4, lr
   1a690:	bl	110f8 <memcmp@plt>
   1a694:	ldr	r2, [sp, #88]	; 0x58
   1a698:	cmp	r0, #0
   1a69c:	mov	r1, r0
   1a6a0:	movwne	r1, #1
   1a6a4:	orr	r1, r1, r2
   1a6a8:	tst	r1, #1
   1a6ac:	beq	1b3ac <__assert_fail@plt+0xa0a4>
   1a6b0:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a6b4:	clz	r0, r0
   1a6b8:	mov	lr, r4
   1a6bc:	lsr	r0, r0, #5
   1a6c0:	str	r0, [fp, #-56]	; 0xffffffc8
   1a6c4:	ldrb	r5, [ip, r7]
   1a6c8:	cmp	r5, #126	; 0x7e
   1a6cc:	bhi	1aad8 <__assert_fail@plt+0x97d0>
   1a6d0:	add	r3, pc, #16
   1a6d4:	mov	r4, #1
   1a6d8:	mov	r2, #110	; 0x6e
   1a6dc:	mov	r0, #97	; 0x61
   1a6e0:	mov	r1, #0
   1a6e4:	ldr	pc, [r3, r5, lsl #2]
   1a6e8:			; <UNDEFINED> instruction: 0x0001a9b8
   1a6ec:	ldrdeq	sl, [r1], -r8
   1a6f0:	ldrdeq	sl, [r1], -r8
   1a6f4:	ldrdeq	sl, [r1], -r8
   1a6f8:	ldrdeq	sl, [r1], -r8
   1a6fc:	ldrdeq	sl, [r1], -r8
   1a700:	ldrdeq	sl, [r1], -r8
   1a704:			; <UNDEFINED> instruction: 0x0001abb4
   1a708:	muleq	r1, r8, r9
   1a70c:	andeq	sl, r1, r0, lsl #19
   1a710:	andeq	sl, r1, r4, lsr #19
   1a714:	andeq	sl, r1, r4, lsr sl
   1a718:	andeq	sl, r1, r8, ror r9
   1a71c:	andeq	sl, r1, r0, lsr #19
   1a720:	ldrdeq	sl, [r1], -r8
   1a724:	ldrdeq	sl, [r1], -r8
   1a728:	ldrdeq	sl, [r1], -r8
   1a72c:	ldrdeq	sl, [r1], -r8
   1a730:	ldrdeq	sl, [r1], -r8
   1a734:	ldrdeq	sl, [r1], -r8
   1a738:	ldrdeq	sl, [r1], -r8
   1a73c:	ldrdeq	sl, [r1], -r8
   1a740:	ldrdeq	sl, [r1], -r8
   1a744:	ldrdeq	sl, [r1], -r8
   1a748:	ldrdeq	sl, [r1], -r8
   1a74c:	ldrdeq	sl, [r1], -r8
   1a750:	ldrdeq	sl, [r1], -r8
   1a754:	ldrdeq	sl, [r1], -r8
   1a758:	ldrdeq	sl, [r1], -r8
   1a75c:	ldrdeq	sl, [r1], -r8
   1a760:	ldrdeq	sl, [r1], -r8
   1a764:	ldrdeq	sl, [r1], -r8
   1a768:	andeq	sl, r1, r0, lsr fp
   1a76c:	andeq	sl, r1, r4, lsr fp
   1a770:	andeq	sl, r1, r4, lsr fp
   1a774:	andeq	sl, r1, r4, lsl #18
   1a778:	andeq	sl, r1, r4, lsr fp
   1a77c:	andeq	sl, r1, r4, ror #17
   1a780:	andeq	sl, r1, r4, lsr fp
   1a784:	andeq	sl, r1, ip, lsr sl
   1a788:	andeq	sl, r1, r4, lsr fp
   1a78c:	andeq	sl, r1, r4, lsr fp
   1a790:	andeq	sl, r1, r4, lsr fp
   1a794:	andeq	sl, r1, r4, ror #17
   1a798:	andeq	sl, r1, r4, ror #17
   1a79c:	andeq	sl, r1, r4, ror #17
   1a7a0:	andeq	sl, r1, r4, ror #17
   1a7a4:	andeq	sl, r1, r4, ror #17
   1a7a8:	andeq	sl, r1, r4, ror #17
   1a7ac:	andeq	sl, r1, r4, ror #17
   1a7b0:	andeq	sl, r1, r4, ror #17
   1a7b4:	andeq	sl, r1, r4, ror #17
   1a7b8:	andeq	sl, r1, r4, ror #17
   1a7bc:	andeq	sl, r1, r4, ror #17
   1a7c0:	andeq	sl, r1, r4, ror #17
   1a7c4:	andeq	sl, r1, r4, ror #17
   1a7c8:	andeq	sl, r1, r4, ror #17
   1a7cc:	andeq	sl, r1, r4, ror #17
   1a7d0:	andeq	sl, r1, r4, ror #17
   1a7d4:	andeq	sl, r1, r4, lsr fp
   1a7d8:	andeq	sl, r1, r4, lsr fp
   1a7dc:	andeq	sl, r1, r4, lsr fp
   1a7e0:	andeq	sl, r1, r4, lsr fp
   1a7e4:	strdeq	sl, [r1], -r8
   1a7e8:	ldrdeq	sl, [r1], -r8
   1a7ec:	andeq	sl, r1, r4, ror #17
   1a7f0:	andeq	sl, r1, r4, ror #17
   1a7f4:	andeq	sl, r1, r4, ror #17
   1a7f8:	andeq	sl, r1, r4, ror #17
   1a7fc:	andeq	sl, r1, r4, ror #17
   1a800:	andeq	sl, r1, r4, ror #17
   1a804:	andeq	sl, r1, r4, ror #17
   1a808:	andeq	sl, r1, r4, ror #17
   1a80c:	andeq	sl, r1, r4, ror #17
   1a810:	andeq	sl, r1, r4, ror #17
   1a814:	andeq	sl, r1, r4, ror #17
   1a818:	andeq	sl, r1, r4, ror #17
   1a81c:	andeq	sl, r1, r4, ror #17
   1a820:	andeq	sl, r1, r4, ror #17
   1a824:	andeq	sl, r1, r4, ror #17
   1a828:	andeq	sl, r1, r4, ror #17
   1a82c:	andeq	sl, r1, r4, ror #17
   1a830:	andeq	sl, r1, r4, ror #17
   1a834:	andeq	sl, r1, r4, ror #17
   1a838:	andeq	sl, r1, r4, ror #17
   1a83c:	andeq	sl, r1, r4, ror #17
   1a840:	andeq	sl, r1, r4, ror #17
   1a844:	andeq	sl, r1, r4, ror #17
   1a848:	andeq	sl, r1, r4, ror #17
   1a84c:	andeq	sl, r1, r4, ror #17
   1a850:	andeq	sl, r1, r4, ror #17
   1a854:	andeq	sl, r1, r4, lsr fp
   1a858:	andeq	sl, r1, r4, asr #18
   1a85c:	andeq	sl, r1, r4, ror #17
   1a860:	andeq	sl, r1, r4, lsr fp
   1a864:	andeq	sl, r1, r4, ror #17
   1a868:	andeq	sl, r1, r4, lsr fp
   1a86c:	andeq	sl, r1, r4, ror #17
   1a870:	andeq	sl, r1, r4, ror #17
   1a874:	andeq	sl, r1, r4, ror #17
   1a878:	andeq	sl, r1, r4, ror #17
   1a87c:	andeq	sl, r1, r4, ror #17
   1a880:	andeq	sl, r1, r4, ror #17
   1a884:	andeq	sl, r1, r4, ror #17
   1a888:	andeq	sl, r1, r4, ror #17
   1a88c:	andeq	sl, r1, r4, ror #17
   1a890:	andeq	sl, r1, r4, ror #17
   1a894:	andeq	sl, r1, r4, ror #17
   1a898:	andeq	sl, r1, r4, ror #17
   1a89c:	andeq	sl, r1, r4, ror #17
   1a8a0:	andeq	sl, r1, r4, ror #17
   1a8a4:	andeq	sl, r1, r4, ror #17
   1a8a8:	andeq	sl, r1, r4, ror #17
   1a8ac:	andeq	sl, r1, r4, ror #17
   1a8b0:	andeq	sl, r1, r4, ror #17
   1a8b4:	andeq	sl, r1, r4, ror #17
   1a8b8:	andeq	sl, r1, r4, ror #17
   1a8bc:	andeq	sl, r1, r4, ror #17
   1a8c0:	andeq	sl, r1, r4, ror #17
   1a8c4:	andeq	sl, r1, r4, ror #17
   1a8c8:	andeq	sl, r1, r4, ror #17
   1a8cc:	andeq	sl, r1, r4, ror #17
   1a8d0:	andeq	sl, r1, r4, ror #17
   1a8d4:	andeq	sl, r1, r4, lsr #18
   1a8d8:	andeq	sl, r1, r4, lsr fp
   1a8dc:	andeq	sl, r1, r4, lsr #18
   1a8e0:	andeq	sl, r1, r4, lsl #18
   1a8e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a8e8:	cmp	r0, #0
   1a8ec:	beq	1abc8 <__assert_fail@plt+0x98c0>
   1a8f0:	ldr	r0, [fp, #16]
   1a8f4:	cmp	r0, #0
   1a8f8:	mov	r0, r5
   1a8fc:	bne	1abd8 <__assert_fail@plt+0x98d0>
   1a900:	b	1abf8 <__assert_fail@plt+0x98f0>
   1a904:	mov	r4, #0
   1a908:	cmp	r7, #0
   1a90c:	beq	1ab30 <__assert_fail@plt+0x9828>
   1a910:	mov	r8, #0
   1a914:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a918:	cmp	r0, #0
   1a91c:	bne	1a8f0 <__assert_fail@plt+0x95e8>
   1a920:	b	1abc8 <__assert_fail@plt+0x98c0>
   1a924:	mov	r4, #0
   1a928:	cmn	lr, #1
   1a92c:	beq	1ab08 <__assert_fail@plt+0x9800>
   1a930:	cmp	r7, #0
   1a934:	bne	1a910 <__assert_fail@plt+0x9608>
   1a938:	cmp	lr, #1
   1a93c:	beq	1ab30 <__assert_fail@plt+0x9828>
   1a940:	b	1a910 <__assert_fail@plt+0x9608>
   1a944:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a948:	cmp	r0, #2
   1a94c:	bne	1ab60 <__assert_fail@plt+0x9858>
   1a950:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a954:	tst	r0, #1
   1a958:	bne	1b3c0 <__assert_fail@plt+0xa0b8>
   1a95c:	mov	r8, #0
   1a960:	mov	r0, #92	; 0x5c
   1a964:	mov	r4, #0
   1a968:	cmp	r8, #0
   1a96c:	beq	1ab80 <__assert_fail@plt+0x9878>
   1a970:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a974:	b	1ac74 <__assert_fail@plt+0x996c>
   1a978:	mov	r0, #102	; 0x66
   1a97c:	b	1abb4 <__assert_fail@plt+0x98ac>
   1a980:	mov	r2, #116	; 0x74
   1a984:	ldr	r0, [sp, #60]	; 0x3c
   1a988:	tst	r0, #1
   1a98c:	mov	r0, r2
   1a990:	bne	1abb4 <__assert_fail@plt+0x98ac>
   1a994:	b	1b3c0 <__assert_fail@plt+0xa0b8>
   1a998:	mov	r0, #98	; 0x62
   1a99c:	b	1abb4 <__assert_fail@plt+0x98ac>
   1a9a0:	mov	r2, #114	; 0x72
   1a9a4:	ldr	r0, [sp, #60]	; 0x3c
   1a9a8:	tst	r0, #1
   1a9ac:	mov	r0, r2
   1a9b0:	bne	1abb4 <__assert_fail@plt+0x98ac>
   1a9b4:	b	1b3c0 <__assert_fail@plt+0xa0b8>
   1a9b8:	ldr	r0, [sp, #80]	; 0x50
   1a9bc:	tst	r0, #1
   1a9c0:	beq	1ac9c <__assert_fail@plt+0x9994>
   1a9c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a9c8:	tst	r0, #1
   1a9cc:	bne	1b4e8 <__assert_fail@plt+0xa1e0>
   1a9d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a9d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a9d8:	cmp	r0, #2
   1a9dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a9e0:	movwne	r0, #1
   1a9e4:	orr	r0, r0, r2
   1a9e8:	tst	r0, #1
   1a9ec:	beq	1af94 <__assert_fail@plt+0x9c8c>
   1a9f0:	mov	r0, r9
   1a9f4:	b	1afc8 <__assert_fail@plt+0x9cc0>
   1a9f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a9fc:	mov	r8, #0
   1aa00:	mov	r5, #63	; 0x3f
   1aa04:	cmp	r0, #5
   1aa08:	beq	1ae50 <__assert_fail@plt+0x9b48>
   1aa0c:	cmp	r0, #2
   1aa10:	bne	1af00 <__assert_fail@plt+0x9bf8>
   1aa14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aa18:	tst	r0, #1
   1aa1c:	bne	1b3c0 <__assert_fail@plt+0xa0b8>
   1aa20:	mov	r4, #0
   1aa24:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1aa28:	cmp	r0, #0
   1aa2c:	bne	1a8f0 <__assert_fail@plt+0x95e8>
   1aa30:	b	1abc8 <__assert_fail@plt+0x98c0>
   1aa34:	mov	r0, #118	; 0x76
   1aa38:	b	1abb4 <__assert_fail@plt+0x98ac>
   1aa3c:	mov	r0, #1
   1aa40:	mov	r5, #39	; 0x27
   1aa44:	str	r0, [sp, #52]	; 0x34
   1aa48:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1aa4c:	cmp	r0, #2
   1aa50:	bne	1aac4 <__assert_fail@plt+0x97bc>
   1aa54:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aa58:	tst	r0, #1
   1aa5c:	bne	1b3c0 <__assert_fail@plt+0xa0b8>
   1aa60:	ldr	r2, [sp, #48]	; 0x30
   1aa64:	clz	r1, sl
   1aa68:	mov	r8, #0
   1aa6c:	lsr	r1, r1, #5
   1aa70:	cmp	r2, #0
   1aa74:	mov	r0, r2
   1aa78:	movwne	r0, #1
   1aa7c:	orrs	r0, r0, r1
   1aa80:	moveq	r2, sl
   1aa84:	moveq	sl, r0
   1aa88:	cmp	r9, sl
   1aa8c:	str	r2, [sp, #48]	; 0x30
   1aa90:	movcc	r0, #39	; 0x27
   1aa94:	strbcc	r0, [r6, r9]
   1aa98:	add	r0, r9, #1
   1aa9c:	cmp	r0, sl
   1aaa0:	movcc	r1, #92	; 0x5c
   1aaa4:	strbcc	r1, [r6, r0]
   1aaa8:	add	r0, r9, #2
   1aaac:	add	r9, r9, #3
   1aab0:	cmp	r0, sl
   1aab4:	movcc	r1, #39	; 0x27
   1aab8:	strbcc	r1, [r6, r0]
   1aabc:	mov	r0, #0
   1aac0:	str	r0, [fp, #-48]	; 0xffffffd0
   1aac4:	mov	r4, #1
   1aac8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1aacc:	cmp	r0, #0
   1aad0:	bne	1a8f0 <__assert_fail@plt+0x95e8>
   1aad4:	b	1abc8 <__assert_fail@plt+0x98c0>
   1aad8:	ldr	r0, [sp, #32]
   1aadc:	cmp	r0, #1
   1aae0:	bne	1accc <__assert_fail@plt+0x99c4>
   1aae4:	str	lr, [sp, #84]	; 0x54
   1aae8:	bl	111d0 <__ctype_b_loc@plt>
   1aaec:	ldr	r0, [r0]
   1aaf0:	ldr	ip, [fp, #-84]	; 0xffffffac
   1aaf4:	mov	r1, #1
   1aaf8:	add	r0, r0, r5, lsl #1
   1aafc:	ldrb	r0, [r0, #1]
   1ab00:	ubfx	r4, r0, #6, #1
   1ab04:	b	1b0c4 <__assert_fail@plt+0x9dbc>
   1ab08:	cmp	r7, #0
   1ab0c:	ldrbeq	r0, [ip, #1]
   1ab10:	cmpeq	r0, #0
   1ab14:	beq	1ab30 <__assert_fail@plt+0x9828>
   1ab18:	mvn	lr, #0
   1ab1c:	mov	r8, #0
   1ab20:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1ab24:	cmp	r0, #0
   1ab28:	bne	1a8f0 <__assert_fail@plt+0x95e8>
   1ab2c:	b	1abc8 <__assert_fail@plt+0x98c0>
   1ab30:	mov	r1, #1
   1ab34:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1ab38:	cmp	r0, #2
   1ab3c:	bne	1ab4c <__assert_fail@plt+0x9844>
   1ab40:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ab44:	tst	r0, #1
   1ab48:	bne	1b3c0 <__assert_fail@plt+0xa0b8>
   1ab4c:	mov	r4, r1
   1ab50:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1ab54:	cmp	r0, #0
   1ab58:	bne	1a8f0 <__assert_fail@plt+0x95e8>
   1ab5c:	b	1abc8 <__assert_fail@plt+0x98c0>
   1ab60:	ldr	r1, [sp, #40]	; 0x28
   1ab64:	mov	r8, #0
   1ab68:	mov	r0, #92	; 0x5c
   1ab6c:	cmp	r1, #0
   1ab70:	beq	1abb4 <__assert_fail@plt+0x98ac>
   1ab74:	mov	r4, #0
   1ab78:	cmp	r8, #0
   1ab7c:	bne	1a970 <__assert_fail@plt+0x9668>
   1ab80:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ab84:	tst	r2, #1
   1ab88:	beq	1ac74 <__assert_fail@plt+0x996c>
   1ab8c:	cmp	r9, sl
   1ab90:	movcc	r1, #39	; 0x27
   1ab94:	strbcc	r1, [r6, r9]
   1ab98:	add	r1, r9, #1
   1ab9c:	add	r9, r9, #2
   1aba0:	cmp	r1, sl
   1aba4:	movcc	r2, #39	; 0x27
   1aba8:	strbcc	r2, [r6, r1]
   1abac:	mov	r2, #0
   1abb0:	b	1ac74 <__assert_fail@plt+0x996c>
   1abb4:	ldr	r1, [sp, #80]	; 0x50
   1abb8:	mov	r4, #0
   1abbc:	mov	r8, #0
   1abc0:	tst	r1, #1
   1abc4:	bne	1ac04 <__assert_fail@plt+0x98fc>
   1abc8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1abcc:	cmp	r0, #0
   1abd0:	mov	r0, r5
   1abd4:	beq	1abf8 <__assert_fail@plt+0x98f0>
   1abd8:	ldr	r1, [fp, #16]
   1abdc:	ubfx	r0, r5, #5, #3
   1abe0:	mov	r2, #1
   1abe4:	ldr	r0, [r1, r0, lsl #2]
   1abe8:	and	r1, r5, #31
   1abec:	tst	r0, r2, lsl r1
   1abf0:	mov	r0, r5
   1abf4:	bne	1ac04 <__assert_fail@plt+0x98fc>
   1abf8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1abfc:	cmp	r1, #0
   1ac00:	beq	1b05c <__assert_fail@plt+0x9d54>
   1ac04:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1ac08:	tst	r1, #1
   1ac0c:	bne	1b3a0 <__assert_fail@plt+0xa098>
   1ac10:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1ac14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ac18:	cmp	r1, #2
   1ac1c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1ac20:	movwne	r1, #1
   1ac24:	orr	r1, r1, r2
   1ac28:	tst	r1, #1
   1ac2c:	bne	1ac64 <__assert_fail@plt+0x995c>
   1ac30:	cmp	r9, sl
   1ac34:	movcc	r1, #39	; 0x27
   1ac38:	strbcc	r1, [r6, r9]
   1ac3c:	add	r1, r9, #1
   1ac40:	cmp	r1, sl
   1ac44:	movcc	r2, #36	; 0x24
   1ac48:	strbcc	r2, [r6, r1]
   1ac4c:	add	r1, r9, #2
   1ac50:	add	r9, r9, #3
   1ac54:	cmp	r1, sl
   1ac58:	movcc	r2, #39	; 0x27
   1ac5c:	strbcc	r2, [r6, r1]
   1ac60:	mov	r2, #1
   1ac64:	cmp	r9, sl
   1ac68:	movcc	r1, #92	; 0x5c
   1ac6c:	strbcc	r1, [r6, r9]
   1ac70:	add	r9, r9, #1
   1ac74:	cmp	r9, sl
   1ac78:	add	r7, r7, #1
   1ac7c:	strbcc	r0, [r6, r9]
   1ac80:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ac84:	add	r9, r9, #1
   1ac88:	and	r0, r0, r4
   1ac8c:	mov	r4, r0
   1ac90:	cmn	lr, #1
   1ac94:	bne	1a608 <__assert_fail@plt+0x9300>
   1ac98:	b	1a614 <__assert_fail@plt+0x930c>
   1ac9c:	ldr	r0, [sp, #28]
   1aca0:	mov	r4, #0
   1aca4:	mov	r8, #0
   1aca8:	mov	r5, #0
   1acac:	cmp	r0, #0
   1acb0:	beq	1abc8 <__assert_fail@plt+0x98c0>
   1acb4:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1acb8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1acbc:	add	r7, r7, #1
   1acc0:	cmn	lr, #1
   1acc4:	bne	1a608 <__assert_fail@plt+0x9300>
   1acc8:	b	1a614 <__assert_fail@plt+0x930c>
   1accc:	mov	r0, #0
   1acd0:	cmn	lr, #1
   1acd4:	str	r0, [fp, #-36]	; 0xffffffdc
   1acd8:	str	r0, [fp, #-40]	; 0xffffffd8
   1acdc:	bne	1acf0 <__assert_fail@plt+0x99e8>
   1ace0:	mov	r0, ip
   1ace4:	bl	111f4 <strlen@plt>
   1ace8:	ldr	ip, [fp, #-84]	; 0xffffffac
   1acec:	mov	lr, r0
   1acf0:	ldr	r0, [sp, #36]	; 0x24
   1acf4:	str	sl, [sp, #56]	; 0x38
   1acf8:	str	lr, [sp, #84]	; 0x54
   1acfc:	cmp	r0, #0
   1ad00:	beq	1af18 <__assert_fail@plt+0x9c10>
   1ad04:	add	r0, ip, r7
   1ad08:	mov	r4, #1
   1ad0c:	mov	r6, #0
   1ad10:	sub	sl, fp, #40	; 0x28
   1ad14:	str	r0, [sp, #20]
   1ad18:	str	r6, [sp, #64]	; 0x40
   1ad1c:	add	r6, r6, r7
   1ad20:	sub	r0, fp, #44	; 0x2c
   1ad24:	mov	r3, sl
   1ad28:	add	r1, ip, r6
   1ad2c:	sub	r2, lr, r6
   1ad30:	bl	1dc80 <__assert_fail@plt+0xc978>
   1ad34:	cmn	r0, #2
   1ad38:	beq	1b074 <__assert_fail@plt+0x9d6c>
   1ad3c:	ldr	sl, [sp, #56]	; 0x38
   1ad40:	cmn	r0, #1
   1ad44:	beq	1b068 <__assert_fail@plt+0x9d60>
   1ad48:	cmp	r0, #0
   1ad4c:	beq	1b06c <__assert_fail@plt+0x9d64>
   1ad50:	cmp	r0, #2
   1ad54:	bcc	1ae14 <__assert_fail@plt+0x9b0c>
   1ad58:	ldr	r1, [sp, #64]	; 0x40
   1ad5c:	ldr	r2, [sp, #20]
   1ad60:	add	r1, r2, r1
   1ad64:	mov	r2, #1
   1ad68:	ldrb	r3, [r1, r2]
   1ad6c:	sub	r3, r3, #91	; 0x5b
   1ad70:	cmp	r3, #33	; 0x21
   1ad74:	bhi	1ae08 <__assert_fail@plt+0x9b00>
   1ad78:	add	r6, pc, #0
   1ad7c:	ldr	pc, [r6, r3, lsl #2]
   1ad80:	andeq	fp, r1, ip, asr #7
   1ad84:	andeq	fp, r1, ip, asr #7
   1ad88:	andeq	sl, r1, r8, lsl #28
   1ad8c:	andeq	fp, r1, ip, asr #7
   1ad90:	andeq	sl, r1, r8, lsl #28
   1ad94:	andeq	fp, r1, ip, asr #7
   1ad98:	andeq	sl, r1, r8, lsl #28
   1ad9c:	andeq	sl, r1, r8, lsl #28
   1ada0:	andeq	sl, r1, r8, lsl #28
   1ada4:	andeq	sl, r1, r8, lsl #28
   1ada8:	andeq	sl, r1, r8, lsl #28
   1adac:	andeq	sl, r1, r8, lsl #28
   1adb0:	andeq	sl, r1, r8, lsl #28
   1adb4:	andeq	sl, r1, r8, lsl #28
   1adb8:	andeq	sl, r1, r8, lsl #28
   1adbc:	andeq	sl, r1, r8, lsl #28
   1adc0:	andeq	sl, r1, r8, lsl #28
   1adc4:	andeq	sl, r1, r8, lsl #28
   1adc8:	andeq	sl, r1, r8, lsl #28
   1adcc:	andeq	sl, r1, r8, lsl #28
   1add0:	andeq	sl, r1, r8, lsl #28
   1add4:	andeq	sl, r1, r8, lsl #28
   1add8:	andeq	sl, r1, r8, lsl #28
   1addc:	andeq	sl, r1, r8, lsl #28
   1ade0:	andeq	sl, r1, r8, lsl #28
   1ade4:	andeq	sl, r1, r8, lsl #28
   1ade8:	andeq	sl, r1, r8, lsl #28
   1adec:	andeq	sl, r1, r8, lsl #28
   1adf0:	andeq	sl, r1, r8, lsl #28
   1adf4:	andeq	sl, r1, r8, lsl #28
   1adf8:	andeq	sl, r1, r8, lsl #28
   1adfc:	andeq	sl, r1, r8, lsl #28
   1ae00:	andeq	sl, r1, r8, lsl #28
   1ae04:	andeq	fp, r1, ip, asr #7
   1ae08:	add	r2, r2, #1
   1ae0c:	cmp	r2, r0
   1ae10:	bcc	1ad68 <__assert_fail@plt+0x9a60>
   1ae14:	ldr	r6, [sp, #64]	; 0x40
   1ae18:	add	r6, r0, r6
   1ae1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae20:	bl	11128 <iswprint@plt>
   1ae24:	cmp	r0, #0
   1ae28:	sub	sl, fp, #40	; 0x28
   1ae2c:	movwne	r0, #1
   1ae30:	and	r4, r4, r0
   1ae34:	mov	r0, sl
   1ae38:	bl	110ec <mbsinit@plt>
   1ae3c:	ldr	ip, [fp, #-84]	; 0xffffffac
   1ae40:	ldr	lr, [sp, #84]	; 0x54
   1ae44:	cmp	r0, #0
   1ae48:	beq	1ad18 <__assert_fail@plt+0x9a10>
   1ae4c:	b	1b0b8 <__assert_fail@plt+0x9db0>
   1ae50:	ldr	r0, [sp, #24]
   1ae54:	cmp	r0, #0
   1ae58:	beq	1af00 <__assert_fail@plt+0x9bf8>
   1ae5c:	add	r0, r7, #2
   1ae60:	cmp	r0, lr
   1ae64:	bcs	1af00 <__assert_fail@plt+0x9bf8>
   1ae68:	add	r1, ip, r7
   1ae6c:	ldrb	r1, [r1, #1]
   1ae70:	cmp	r1, #63	; 0x3f
   1ae74:	bne	1af00 <__assert_fail@plt+0x9bf8>
   1ae78:	ldrb	r5, [ip, r0]
   1ae7c:	sub	r1, r5, #33	; 0x21
   1ae80:	cmp	r1, #29
   1ae84:	bhi	1af00 <__assert_fail@plt+0x9bf8>
   1ae88:	movw	r3, #20929	; 0x51c1
   1ae8c:	mov	r2, #1
   1ae90:	movt	r3, #14336	; 0x3800
   1ae94:	tst	r3, r2, lsl r1
   1ae98:	beq	1af00 <__assert_fail@plt+0x9bf8>
   1ae9c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1aea0:	tst	r1, #1
   1aea4:	bne	1b4f0 <__assert_fail@plt+0xa1e8>
   1aea8:	cmp	r9, sl
   1aeac:	mov	r7, r0
   1aeb0:	mov	r4, #0
   1aeb4:	movcc	r1, #63	; 0x3f
   1aeb8:	strbcc	r1, [r6, r9]
   1aebc:	add	r1, r9, #1
   1aec0:	cmp	r1, sl
   1aec4:	movcc	r2, #34	; 0x22
   1aec8:	strbcc	r2, [r6, r1]
   1aecc:	add	r1, r9, #2
   1aed0:	cmp	r1, sl
   1aed4:	movcc	r2, #34	; 0x22
   1aed8:	strbcc	r2, [r6, r1]
   1aedc:	add	r1, r9, #3
   1aee0:	add	r9, r9, #4
   1aee4:	cmp	r1, sl
   1aee8:	movcc	r2, #63	; 0x3f
   1aeec:	strbcc	r2, [r6, r1]
   1aef0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1aef4:	cmp	r0, #0
   1aef8:	bne	1a8f0 <__assert_fail@plt+0x95e8>
   1aefc:	b	1abc8 <__assert_fail@plt+0x98c0>
   1af00:	mov	r5, #63	; 0x3f
   1af04:	mov	r4, #0
   1af08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1af0c:	cmp	r0, #0
   1af10:	bne	1a8f0 <__assert_fail@plt+0x95e8>
   1af14:	b	1abc8 <__assert_fail@plt+0x98c0>
   1af18:	mov	r4, #1
   1af1c:	mov	r6, #0
   1af20:	sub	sl, fp, #40	; 0x28
   1af24:	str	r6, [sp, #64]	; 0x40
   1af28:	add	r6, r6, r7
   1af2c:	sub	r0, fp, #44	; 0x2c
   1af30:	mov	r3, sl
   1af34:	add	r1, ip, r6
   1af38:	sub	r2, lr, r6
   1af3c:	bl	1dc80 <__assert_fail@plt+0xc978>
   1af40:	cmn	r0, #2
   1af44:	beq	1b074 <__assert_fail@plt+0x9d6c>
   1af48:	cmn	r0, #1
   1af4c:	beq	1b068 <__assert_fail@plt+0x9d60>
   1af50:	ldr	r6, [sp, #64]	; 0x40
   1af54:	cmp	r0, #0
   1af58:	beq	1b0b4 <__assert_fail@plt+0x9dac>
   1af5c:	add	r6, r0, r6
   1af60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1af64:	bl	11128 <iswprint@plt>
   1af68:	cmp	r0, #0
   1af6c:	sub	sl, fp, #40	; 0x28
   1af70:	movwne	r0, #1
   1af74:	and	r4, r4, r0
   1af78:	mov	r0, sl
   1af7c:	bl	110ec <mbsinit@plt>
   1af80:	ldr	ip, [fp, #-84]	; 0xffffffac
   1af84:	ldr	lr, [sp, #84]	; 0x54
   1af88:	cmp	r0, #0
   1af8c:	beq	1af24 <__assert_fail@plt+0x9c1c>
   1af90:	b	1b0b8 <__assert_fail@plt+0x9db0>
   1af94:	cmp	r9, sl
   1af98:	mov	r2, #1
   1af9c:	movcc	r0, #39	; 0x27
   1afa0:	strbcc	r0, [r6, r9]
   1afa4:	add	r0, r9, #1
   1afa8:	cmp	r0, sl
   1afac:	movcc	r1, #36	; 0x24
   1afb0:	strbcc	r1, [r6, r0]
   1afb4:	add	r0, r9, #2
   1afb8:	cmp	r0, sl
   1afbc:	movcc	r1, #39	; 0x27
   1afc0:	strbcc	r1, [r6, r0]
   1afc4:	add	r0, r9, #3
   1afc8:	cmp	r0, sl
   1afcc:	add	r9, r0, #1
   1afd0:	str	r2, [fp, #-48]	; 0xffffffd0
   1afd4:	movcc	r1, #92	; 0x5c
   1afd8:	strbcc	r1, [r6, r0]
   1afdc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1afe0:	cmp	r1, #2
   1afe4:	beq	1b044 <__assert_fail@plt+0x9d3c>
   1afe8:	add	r1, r7, #1
   1afec:	mov	r4, #0
   1aff0:	mov	r8, #1
   1aff4:	mov	r5, #48	; 0x30
   1aff8:	cmp	r1, lr
   1affc:	bcs	1a8e4 <__assert_fail@plt+0x95dc>
   1b000:	ldrb	r1, [ip, r1]
   1b004:	sub	r1, r1, #48	; 0x30
   1b008:	uxtb	r1, r1
   1b00c:	cmp	r1, #9
   1b010:	bhi	1a8e4 <__assert_fail@plt+0x95dc>
   1b014:	cmp	r9, sl
   1b018:	movcc	r1, #48	; 0x30
   1b01c:	strbcc	r1, [r6, r9]
   1b020:	add	r1, r0, #2
   1b024:	add	r9, r0, #3
   1b028:	cmp	r1, sl
   1b02c:	movcc	r2, #48	; 0x30
   1b030:	strbcc	r2, [r6, r1]
   1b034:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1b038:	cmp	r0, #0
   1b03c:	bne	1a8f0 <__assert_fail@plt+0x95e8>
   1b040:	b	1abc8 <__assert_fail@plt+0x98c0>
   1b044:	mov	r0, #48	; 0x30
   1b048:	mov	r8, #1
   1b04c:	mov	r4, #0
   1b050:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1b054:	cmp	r1, #0
   1b058:	bne	1ac04 <__assert_fail@plt+0x98fc>
   1b05c:	cmp	r8, #0
   1b060:	beq	1ab80 <__assert_fail@plt+0x9878>
   1b064:	b	1a970 <__assert_fail@plt+0x9668>
   1b068:	mov	r4, #0
   1b06c:	ldr	ip, [fp, #-84]	; 0xffffffac
   1b070:	b	1b0ac <__assert_fail@plt+0x9da4>
   1b074:	ldr	r1, [sp, #84]	; 0x54
   1b078:	ldr	ip, [fp, #-84]	; 0xffffffac
   1b07c:	mov	r4, #0
   1b080:	cmp	r6, r1
   1b084:	bcs	1b0ac <__assert_fail@plt+0x9da4>
   1b088:	ldrb	r0, [ip, r6]
   1b08c:	cmp	r0, #0
   1b090:	beq	1b0ac <__assert_fail@plt+0x9da4>
   1b094:	ldr	r0, [sp, #64]	; 0x40
   1b098:	add	r0, r0, #1
   1b09c:	add	r6, r0, r7
   1b0a0:	str	r0, [sp, #64]	; 0x40
   1b0a4:	cmp	r6, r1
   1b0a8:	bcc	1b088 <__assert_fail@plt+0x9d80>
   1b0ac:	ldr	r6, [sp, #64]	; 0x40
   1b0b0:	b	1b0b8 <__assert_fail@plt+0x9db0>
   1b0b4:	ldr	ip, [fp, #-84]	; 0xffffffac
   1b0b8:	mov	r1, r6
   1b0bc:	ldr	r6, [sp, #76]	; 0x4c
   1b0c0:	ldr	sl, [sp, #56]	; 0x38
   1b0c4:	ldr	r0, [sp, #44]	; 0x2c
   1b0c8:	cmp	r1, #1
   1b0cc:	orr	r2, r4, r0
   1b0d0:	mov	r0, r1
   1b0d4:	bhi	1b0f4 <__assert_fail@plt+0x9dec>
   1b0d8:	tst	r2, #1
   1b0dc:	beq	1b0f4 <__assert_fail@plt+0x9dec>
   1b0e0:	ldr	lr, [sp, #84]	; 0x54
   1b0e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1b0e8:	cmp	r0, #0
   1b0ec:	bne	1a8f0 <__assert_fail@plt+0x95e8>
   1b0f0:	b	1abc8 <__assert_fail@plt+0x98c0>
   1b0f4:	str	r2, [sp, #64]	; 0x40
   1b0f8:	add	r0, r0, r7
   1b0fc:	add	r1, r7, #1
   1b100:	ldr	lr, [sp, #84]	; 0x54
   1b104:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1b108:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b10c:	mov	r3, #0
   1b110:	str	r0, [sp, #56]	; 0x38
   1b114:	ldr	r0, [sp, #64]	; 0x40
   1b118:	tst	r0, #1
   1b11c:	bne	1b204 <__assert_fail@plt+0x9efc>
   1b120:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b124:	tst	r0, #1
   1b128:	bne	1b3a4 <__assert_fail@plt+0xa09c>
   1b12c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b130:	cmp	r7, #2
   1b134:	movwne	r3, #1
   1b138:	orr	r3, r3, r2
   1b13c:	tst	r3, #1
   1b140:	bne	1b178 <__assert_fail@plt+0x9e70>
   1b144:	cmp	r9, sl
   1b148:	add	r3, r9, #1
   1b14c:	movcc	r2, #39	; 0x27
   1b150:	strbcc	r2, [r6, r9]
   1b154:	cmp	r3, sl
   1b158:	movcc	r2, #36	; 0x24
   1b15c:	strbcc	r2, [r6, r3]
   1b160:	add	r3, r9, #2
   1b164:	add	r9, r9, #3
   1b168:	cmp	r3, sl
   1b16c:	movcc	r2, #39	; 0x27
   1b170:	strbcc	r2, [r6, r3]
   1b174:	mov	r2, #1
   1b178:	cmp	r9, sl
   1b17c:	mov	r0, r2
   1b180:	movcc	r3, #92	; 0x5c
   1b184:	strbcc	r3, [r6, r9]
   1b188:	add	r3, r9, #1
   1b18c:	cmp	r3, sl
   1b190:	andcc	r7, r5, #192	; 0xc0
   1b194:	movcc	r2, #48	; 0x30
   1b198:	orrcc	r7, r2, r7, lsr #6
   1b19c:	strbcc	r7, [r6, r3]
   1b1a0:	add	r3, r9, #2
   1b1a4:	add	r9, r9, #3
   1b1a8:	cmp	r3, sl
   1b1ac:	lsrcc	r7, r5, #3
   1b1b0:	movcc	r2, #6
   1b1b4:	bficc	r7, r2, #3, #29
   1b1b8:	mov	r2, #6
   1b1bc:	strbcc	r7, [r6, r3]
   1b1c0:	bfi	r5, r2, #3, #29
   1b1c4:	mov	r3, #1
   1b1c8:	mov	r2, r0
   1b1cc:	ldr	r0, [sp, #56]	; 0x38
   1b1d0:	and	r8, r3, #1
   1b1d4:	cmp	r0, r1
   1b1d8:	bhi	1b238 <__assert_fail@plt+0x9f30>
   1b1dc:	b	1b278 <__assert_fail@plt+0x9f70>
   1b1e0:	cmp	r9, sl
   1b1e4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1b1e8:	strbcc	r5, [r6, r9]
   1b1ec:	add	r9, r9, #1
   1b1f0:	ldrb	r5, [ip, r1]
   1b1f4:	add	r1, r1, #1
   1b1f8:	ldr	r0, [sp, #64]	; 0x40
   1b1fc:	tst	r0, #1
   1b200:	beq	1b120 <__assert_fail@plt+0x9e18>
   1b204:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1b208:	tst	r7, #1
   1b20c:	beq	1b220 <__assert_fail@plt+0x9f18>
   1b210:	cmp	r9, sl
   1b214:	movcc	r7, #92	; 0x5c
   1b218:	strbcc	r7, [r6, r9]
   1b21c:	add	r9, r9, #1
   1b220:	mov	r7, #0
   1b224:	str	r7, [fp, #-56]	; 0xffffffc8
   1b228:	ldr	r0, [sp, #56]	; 0x38
   1b22c:	and	r8, r3, #1
   1b230:	cmp	r0, r1
   1b234:	bls	1b278 <__assert_fail@plt+0x9f70>
   1b238:	cmp	r8, #0
   1b23c:	mvn	r7, r2
   1b240:	movwne	r8, #1
   1b244:	orr	r7, r7, r8
   1b248:	tst	r7, #1
   1b24c:	bne	1b1e0 <__assert_fail@plt+0x9ed8>
   1b250:	cmp	r9, sl
   1b254:	movcc	r7, #39	; 0x27
   1b258:	strbcc	r7, [r6, r9]
   1b25c:	add	r7, r9, #1
   1b260:	add	r9, r9, #2
   1b264:	cmp	r7, sl
   1b268:	movcc	r2, #39	; 0x27
   1b26c:	strbcc	r2, [r6, r7]
   1b270:	mov	r2, #0
   1b274:	b	1b1e0 <__assert_fail@plt+0x9ed8>
   1b278:	cmp	r8, #0
   1b27c:	sub	r7, r1, #1
   1b280:	mov	r0, r5
   1b284:	str	r2, [fp, #-48]	; 0xffffffd0
   1b288:	movwne	r8, #1
   1b28c:	cmp	r8, #0
   1b290:	beq	1ab80 <__assert_fail@plt+0x9878>
   1b294:	b	1a970 <__assert_fail@plt+0x9668>
   1b298:	mov	lr, r7
   1b29c:	b	1b2a4 <__assert_fail@plt+0x9f9c>
   1b2a0:	mvn	lr, #0
   1b2a4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1b2a8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1b2ac:	eor	r0, r7, #2
   1b2b0:	orr	r0, r0, r9
   1b2b4:	clz	r0, r0
   1b2b8:	lsr	r0, r0, #5
   1b2bc:	tst	r1, r0
   1b2c0:	bne	1b3c0 <__assert_fail@plt+0xa0b8>
   1b2c4:	mov	r0, r1
   1b2c8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1b2cc:	cmp	r7, #2
   1b2d0:	movwne	r1, #1
   1b2d4:	orr	r0, r0, r1
   1b2d8:	tst	r0, #1
   1b2dc:	ldreq	r0, [sp, #52]	; 0x34
   1b2e0:	streq	lr, [sp, #84]	; 0x54
   1b2e4:	eoreq	r0, r0, #1
   1b2e8:	tsteq	r0, #1
   1b2ec:	bne	1b484 <__assert_fail@plt+0xa17c>
   1b2f0:	tst	r4, #1
   1b2f4:	bne	1b440 <__assert_fail@plt+0xa138>
   1b2f8:	ldr	r6, [sp, #48]	; 0x30
   1b2fc:	mov	r8, #0
   1b300:	cmp	r6, #0
   1b304:	beq	1b47c <__assert_fail@plt+0xa174>
   1b308:	ldr	r0, [sp, #80]	; 0x50
   1b30c:	mov	r1, #0
   1b310:	cmp	sl, #0
   1b314:	mov	r4, #0
   1b318:	str	r1, [fp, #-72]	; 0xffffffb8
   1b31c:	beq	1a210 <__assert_fail@plt+0x8f08>
   1b320:	b	1b484 <__assert_fail@plt+0xa17c>
   1b324:	ldrb	r1, [r0, #3]
   1b328:	cmp	r1, #56	; 0x38
   1b32c:	ldrbeq	r1, [r0, #4]
   1b330:	cmpeq	r1, #48	; 0x30
   1b334:	bne	1a408 <__assert_fail@plt+0x9100>
   1b338:	ldrb	r1, [r0, #5]
   1b33c:	cmp	r1, #51	; 0x33
   1b340:	ldrbeq	r1, [r0, #6]
   1b344:	cmpeq	r1, #48	; 0x30
   1b348:	bne	1a408 <__assert_fail@plt+0x9100>
   1b34c:	ldrb	r0, [r0, #7]
   1b350:	cmp	r0, #0
   1b354:	movw	r0, #61244	; 0xef3c
   1b358:	movt	r0, #1
   1b35c:	str	r0, [sp, #68]	; 0x44
   1b360:	bne	1a408 <__assert_fail@plt+0x9100>
   1b364:	b	1a424 <__assert_fail@plt+0x911c>
   1b368:	ldrb	r1, [r0, #4]
   1b36c:	cmp	r1, #48	; 0x30
   1b370:	ldrbeq	r1, [r0, #5]
   1b374:	cmpeq	r1, #51	; 0x33
   1b378:	bne	1a4ec <__assert_fail@plt+0x91e4>
   1b37c:	ldrb	r1, [r0, #6]
   1b380:	cmp	r1, #48	; 0x30
   1b384:	ldrbeq	r0, [r0, #7]
   1b388:	cmpeq	r0, #0
   1b38c:	bne	1a4ec <__assert_fail@plt+0x91e4>
   1b390:	movw	r0, #61248	; 0xef40
   1b394:	movt	r0, #1
   1b398:	str	r0, [sp, #72]	; 0x48
   1b39c:	b	1a50c <__assert_fail@plt+0x9204>
   1b3a0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1b3a4:	ldr	r2, [sp, #80]	; 0x50
   1b3a8:	b	1b3e0 <__assert_fail@plt+0xa0d8>
   1b3ac:	ldr	ip, [fp, #-84]	; 0xffffffac
   1b3b0:	mov	r2, #1
   1b3b4:	mov	lr, r4
   1b3b8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1b3bc:	b	1b3e0 <__assert_fail@plt+0xa0d8>
   1b3c0:	ldr	r2, [sp, #80]	; 0x50
   1b3c4:	mov	r7, #2
   1b3c8:	b	1b3e0 <__assert_fail@plt+0xa0d8>
   1b3cc:	ldr	r6, [sp, #76]	; 0x4c
   1b3d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   1b3d4:	ldr	lr, [sp, #84]	; 0x54
   1b3d8:	ldr	r2, [sp, #80]	; 0x50
   1b3dc:	mov	r7, #2
   1b3e0:	mov	r0, #0
   1b3e4:	ldr	r1, [fp, #12]
   1b3e8:	tst	r2, #1
   1b3ec:	mov	r2, r7
   1b3f0:	mov	r3, lr
   1b3f4:	str	r0, [sp, #8]
   1b3f8:	ldr	r0, [sp, #68]	; 0x44
   1b3fc:	movwne	r2, #4
   1b400:	cmp	r7, #2
   1b404:	movne	r2, r7
   1b408:	str	r2, [sp]
   1b40c:	mov	r2, ip
   1b410:	bic	r1, r1, #2
   1b414:	str	r0, [sp, #12]
   1b418:	ldr	r0, [sp, #72]	; 0x48
   1b41c:	str	r1, [sp, #4]
   1b420:	mov	r1, sl
   1b424:	str	r0, [sp, #16]
   1b428:	mov	r0, r6
   1b42c:	bl	1a194 <__assert_fail@plt+0x8e8c>
   1b430:	mov	r9, r0
   1b434:	mov	r0, r9
   1b438:	sub	sp, fp, #28
   1b43c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b440:	mov	r0, #5
   1b444:	ldr	r1, [sp, #48]	; 0x30
   1b448:	ldr	r2, [fp, #-84]	; 0xffffffac
   1b44c:	ldr	r3, [sp, #84]	; 0x54
   1b450:	str	r0, [sp]
   1b454:	ldr	r0, [fp, #12]
   1b458:	str	r0, [sp, #4]
   1b45c:	ldr	r0, [fp, #16]
   1b460:	str	r0, [sp, #8]
   1b464:	ldr	r0, [sp, #68]	; 0x44
   1b468:	str	r0, [sp, #12]
   1b46c:	ldr	r0, [sp, #72]	; 0x48
   1b470:	str	r0, [sp, #16]
   1b474:	ldr	r0, [sp, #76]	; 0x4c
   1b478:	b	1b42c <__assert_fail@plt+0xa124>
   1b47c:	mov	r0, #0
   1b480:	str	r0, [fp, #-72]	; 0xffffffb8
   1b484:	ldr	r1, [sp, #92]	; 0x5c
   1b488:	cmp	r1, #0
   1b48c:	beq	1b4cc <__assert_fail@plt+0xa1c4>
   1b490:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b494:	ldr	r2, [sp, #76]	; 0x4c
   1b498:	tst	r0, #1
   1b49c:	bne	1b4d0 <__assert_fail@plt+0xa1c8>
   1b4a0:	ldrb	r0, [r1]
   1b4a4:	cmp	r0, #0
   1b4a8:	beq	1b4d0 <__assert_fail@plt+0xa1c8>
   1b4ac:	add	r1, r1, #1
   1b4b0:	cmp	r9, sl
   1b4b4:	strbcc	r0, [r2, r9]
   1b4b8:	add	r9, r9, #1
   1b4bc:	ldrb	r0, [r1], #1
   1b4c0:	cmp	r0, #0
   1b4c4:	bne	1b4b0 <__assert_fail@plt+0xa1a8>
   1b4c8:	b	1b4d0 <__assert_fail@plt+0xa1c8>
   1b4cc:	ldr	r2, [sp, #76]	; 0x4c
   1b4d0:	cmp	r9, sl
   1b4d4:	movcc	r0, #0
   1b4d8:	strbcc	r0, [r2, r9]
   1b4dc:	mov	r0, r9
   1b4e0:	sub	sp, fp, #28
   1b4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4e8:	mov	r2, #1
   1b4ec:	b	1b3b8 <__assert_fail@plt+0xa0b0>
   1b4f0:	ldr	r2, [sp, #80]	; 0x50
   1b4f4:	mov	r7, #5
   1b4f8:	b	1b3e0 <__assert_fail@plt+0xa0d8>
   1b4fc:	bl	112e4 <abort@plt>
   1b500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b504:	add	fp, sp, #28
   1b508:	sub	sp, sp, #28
   1b50c:	movw	r5, #424	; 0x1a8
   1b510:	cmp	r2, #0
   1b514:	mov	r4, r1
   1b518:	mov	r7, r0
   1b51c:	str	r0, [sp, #20]
   1b520:	movt	r5, #3
   1b524:	movne	r5, r2
   1b528:	bl	1120c <__errno_location@plt>
   1b52c:	mov	sl, r0
   1b530:	ldm	r5, {r0, r1}
   1b534:	ldr	r2, [r5, #40]	; 0x28
   1b538:	ldr	r3, [r5, #44]	; 0x2c
   1b53c:	add	r9, r5, #8
   1b540:	ldr	r6, [sl]
   1b544:	orr	r8, r1, #1
   1b548:	mov	r1, #0
   1b54c:	str	r6, [sp, #24]
   1b550:	stm	sp, {r0, r8, r9}
   1b554:	str	r2, [sp, #12]
   1b558:	str	r3, [sp, #16]
   1b55c:	mov	r0, #0
   1b560:	mov	r2, r7
   1b564:	mov	r3, r4
   1b568:	mov	r6, r4
   1b56c:	bl	1a194 <__assert_fail@plt+0x8e8c>
   1b570:	add	r7, r0, #1
   1b574:	mov	r0, r7
   1b578:	bl	1c5e8 <__assert_fail@plt+0xb2e0>
   1b57c:	mov	r4, r0
   1b580:	ldr	r0, [r5]
   1b584:	ldr	r2, [r5, #44]	; 0x2c
   1b588:	ldr	r1, [r5, #40]	; 0x28
   1b58c:	mov	r3, r6
   1b590:	stm	sp, {r0, r8, r9}
   1b594:	str	r2, [sp, #16]
   1b598:	str	r1, [sp, #12]
   1b59c:	mov	r0, r4
   1b5a0:	mov	r1, r7
   1b5a4:	ldr	r2, [sp, #20]
   1b5a8:	bl	1a194 <__assert_fail@plt+0x8e8c>
   1b5ac:	ldr	r0, [sp, #24]
   1b5b0:	str	r0, [sl]
   1b5b4:	mov	r0, r4
   1b5b8:	sub	sp, fp, #28
   1b5bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5c4:	add	fp, sp, #28
   1b5c8:	sub	sp, sp, #36	; 0x24
   1b5cc:	movw	r8, #424	; 0x1a8
   1b5d0:	cmp	r3, #0
   1b5d4:	mov	r4, r2
   1b5d8:	str	r2, [sp, #24]
   1b5dc:	mov	r5, r1
   1b5e0:	mov	r6, r0
   1b5e4:	str	r0, [sp, #20]
   1b5e8:	movt	r8, #3
   1b5ec:	movne	r8, r3
   1b5f0:	bl	1120c <__errno_location@plt>
   1b5f4:	str	r0, [sp, #28]
   1b5f8:	cmp	r4, #0
   1b5fc:	add	sl, r8, #8
   1b600:	ldm	r8, {r3, r9}
   1b604:	ldr	r7, [r0]
   1b608:	ldr	r1, [r8, #40]	; 0x28
   1b60c:	ldr	r2, [r8, #44]	; 0x2c
   1b610:	mov	r0, #0
   1b614:	orreq	r9, r9, #1
   1b618:	str	r7, [sp, #32]
   1b61c:	mov	r7, r5
   1b620:	stm	sp, {r3, r9, sl}
   1b624:	str	r1, [sp, #12]
   1b628:	str	r2, [sp, #16]
   1b62c:	mov	r1, #0
   1b630:	mov	r2, r6
   1b634:	mov	r3, r5
   1b638:	bl	1a194 <__assert_fail@plt+0x8e8c>
   1b63c:	add	r4, r0, #1
   1b640:	mov	r5, r0
   1b644:	mov	r0, r4
   1b648:	bl	1c5e8 <__assert_fail@plt+0xb2e0>
   1b64c:	mov	r6, r0
   1b650:	ldr	r0, [r8]
   1b654:	ldr	r2, [r8, #44]	; 0x2c
   1b658:	ldr	r1, [r8, #40]	; 0x28
   1b65c:	mov	r3, r7
   1b660:	stm	sp, {r0, r9, sl}
   1b664:	str	r2, [sp, #16]
   1b668:	str	r1, [sp, #12]
   1b66c:	mov	r0, r6
   1b670:	mov	r1, r4
   1b674:	ldr	r2, [sp, #20]
   1b678:	bl	1a194 <__assert_fail@plt+0x8e8c>
   1b67c:	ldr	r0, [sp, #24]
   1b680:	ldr	r1, [sp, #32]
   1b684:	ldr	r2, [sp, #28]
   1b688:	cmp	r0, #0
   1b68c:	str	r1, [r2]
   1b690:	strne	r5, [r0]
   1b694:	mov	r0, r6
   1b698:	sub	sp, fp, #28
   1b69c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6a0:	push	{r4, r5, r6, r7, fp, lr}
   1b6a4:	add	fp, sp, #16
   1b6a8:	movw	r4, #328	; 0x148
   1b6ac:	movt	r4, #3
   1b6b0:	ldrd	r6, [r4]
   1b6b4:	cmp	r7, #2
   1b6b8:	blt	1b6e4 <__assert_fail@plt+0xa3dc>
   1b6bc:	add	r5, r6, #12
   1b6c0:	mov	r7, #0
   1b6c4:	ldr	r0, [r5, r7, lsl #3]
   1b6c8:	bl	19e8c <__assert_fail@plt+0x8b84>
   1b6cc:	ldr	r1, [r4, #4]
   1b6d0:	add	r2, r7, #2
   1b6d4:	add	r0, r7, #1
   1b6d8:	mov	r7, r0
   1b6dc:	cmp	r2, r1
   1b6e0:	blt	1b6c4 <__assert_fail@plt+0xa3bc>
   1b6e4:	ldr	r0, [r6, #4]
   1b6e8:	movw	r5, #472	; 0x1d8
   1b6ec:	movt	r5, #3
   1b6f0:	cmp	r0, r5
   1b6f4:	beq	1b708 <__assert_fail@plt+0xa400>
   1b6f8:	bl	19e8c <__assert_fail@plt+0x8b84>
   1b6fc:	mov	r0, #256	; 0x100
   1b700:	str	r0, [r4, #8]
   1b704:	str	r5, [r4, #12]
   1b708:	add	r5, r4, #8
   1b70c:	cmp	r6, r5
   1b710:	beq	1b720 <__assert_fail@plt+0xa418>
   1b714:	mov	r0, r6
   1b718:	bl	19e8c <__assert_fail@plt+0x8b84>
   1b71c:	str	r5, [r4]
   1b720:	mov	r0, #1
   1b724:	str	r0, [r4, #4]
   1b728:	pop	{r4, r5, r6, r7, fp, pc}
   1b72c:	movw	r3, #424	; 0x1a8
   1b730:	mvn	r2, #0
   1b734:	movt	r3, #3
   1b738:	b	1b73c <__assert_fail@plt+0xa434>
   1b73c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b740:	add	fp, sp, #28
   1b744:	sub	sp, sp, #44	; 0x2c
   1b748:	mov	r7, r3
   1b74c:	str	r2, [sp, #36]	; 0x24
   1b750:	str	r1, [sp, #32]
   1b754:	mov	r5, r0
   1b758:	bl	1120c <__errno_location@plt>
   1b75c:	cmp	r5, #0
   1b760:	blt	1b8c4 <__assert_fail@plt+0xa5bc>
   1b764:	cmn	r5, #-2147483647	; 0x80000001
   1b768:	beq	1b8c4 <__assert_fail@plt+0xa5bc>
   1b76c:	movw	r8, #328	; 0x148
   1b770:	mov	r4, r0
   1b774:	movt	r8, #3
   1b778:	ldr	r6, [r8]
   1b77c:	ldr	r1, [r8, #4]
   1b780:	ldr	r0, [r0]
   1b784:	str	r4, [sp, #28]
   1b788:	cmp	r1, r5
   1b78c:	str	r0, [sp, #24]
   1b790:	ble	1b79c <__assert_fail@plt+0xa494>
   1b794:	mov	sl, r6
   1b798:	b	1b800 <__assert_fail@plt+0xa4f8>
   1b79c:	mov	r0, #8
   1b7a0:	add	r9, r8, #8
   1b7a4:	add	r2, r5, #1
   1b7a8:	str	r1, [fp, #-32]	; 0xffffffe0
   1b7ac:	mvn	r3, #-2147483648	; 0x80000000
   1b7b0:	str	r0, [sp]
   1b7b4:	subs	r0, r6, r9
   1b7b8:	sub	r2, r2, r1
   1b7bc:	sub	r1, fp, #32
   1b7c0:	movne	r0, r6
   1b7c4:	bl	1c7e8 <__assert_fail@plt+0xb4e0>
   1b7c8:	str	r0, [r8]
   1b7cc:	cmp	r6, r9
   1b7d0:	mov	sl, r0
   1b7d4:	ldrdeq	r0, [r8, #8]
   1b7d8:	stmeq	sl, {r0, r1}
   1b7dc:	ldr	r1, [r8, #4]
   1b7e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b7e4:	add	r0, sl, r1, lsl #3
   1b7e8:	sub	r1, r2, r1
   1b7ec:	lsl	r2, r1, #3
   1b7f0:	mov	r1, #0
   1b7f4:	bl	11230 <memset@plt>
   1b7f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b7fc:	str	r0, [r8, #4]
   1b800:	mov	r9, sl
   1b804:	ldr	r6, [r9, r5, lsl #3]!
   1b808:	ldr	r4, [r9, #4]!
   1b80c:	ldm	r7, {r0, r1}
   1b810:	ldr	r2, [r7, #40]	; 0x28
   1b814:	ldr	r3, [r7, #44]	; 0x2c
   1b818:	orr	r8, r1, #1
   1b81c:	add	r1, r7, #8
   1b820:	stm	sp, {r0, r8}
   1b824:	add	r0, sp, #8
   1b828:	str	r1, [sp, #20]
   1b82c:	stm	r0, {r1, r2, r3}
   1b830:	mov	r0, r4
   1b834:	mov	r1, r6
   1b838:	ldr	r2, [sp, #32]
   1b83c:	ldr	r3, [sp, #36]	; 0x24
   1b840:	bl	1a194 <__assert_fail@plt+0x8e8c>
   1b844:	cmp	r6, r0
   1b848:	bhi	1b8ac <__assert_fail@plt+0xa5a4>
   1b84c:	add	r6, r0, #1
   1b850:	movw	r0, #472	; 0x1d8
   1b854:	movt	r0, #3
   1b858:	str	r6, [sl, r5, lsl #3]
   1b85c:	cmp	r4, r0
   1b860:	beq	1b86c <__assert_fail@plt+0xa564>
   1b864:	mov	r0, r4
   1b868:	bl	19e8c <__assert_fail@plt+0x8b84>
   1b86c:	mov	r0, r6
   1b870:	bl	1c5e8 <__assert_fail@plt+0xb2e0>
   1b874:	str	r0, [r9]
   1b878:	mov	r4, r0
   1b87c:	add	r3, sp, #8
   1b880:	ldr	r0, [r7]
   1b884:	ldr	r1, [r7, #40]	; 0x28
   1b888:	ldr	r2, [r7, #44]	; 0x2c
   1b88c:	stm	sp, {r0, r8}
   1b890:	ldr	r0, [sp, #20]
   1b894:	stm	r3, {r0, r1, r2}
   1b898:	mov	r0, r4
   1b89c:	mov	r1, r6
   1b8a0:	ldr	r2, [sp, #32]
   1b8a4:	ldr	r3, [sp, #36]	; 0x24
   1b8a8:	bl	1a194 <__assert_fail@plt+0x8e8c>
   1b8ac:	ldr	r1, [sp, #24]
   1b8b0:	ldr	r0, [sp, #28]
   1b8b4:	str	r1, [r0]
   1b8b8:	mov	r0, r4
   1b8bc:	sub	sp, fp, #28
   1b8c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b8c4:	bl	112e4 <abort@plt>
   1b8c8:	movw	r3, #424	; 0x1a8
   1b8cc:	movt	r3, #3
   1b8d0:	b	1b73c <__assert_fail@plt+0xa434>
   1b8d4:	movw	r3, #424	; 0x1a8
   1b8d8:	mov	r1, r0
   1b8dc:	mov	r0, #0
   1b8e0:	mvn	r2, #0
   1b8e4:	movt	r3, #3
   1b8e8:	b	1b73c <__assert_fail@plt+0xa434>
   1b8ec:	movw	r3, #424	; 0x1a8
   1b8f0:	mov	r2, r1
   1b8f4:	mov	r1, r0
   1b8f8:	mov	r0, #0
   1b8fc:	movt	r3, #3
   1b900:	b	1b73c <__assert_fail@plt+0xa434>
   1b904:	push	{fp, lr}
   1b908:	mov	fp, sp
   1b90c:	sub	sp, sp, #48	; 0x30
   1b910:	vmov.i32	q8, #0	; 0x00000000
   1b914:	mov	ip, #32
   1b918:	mov	r3, sp
   1b91c:	mov	lr, r2
   1b920:	cmp	r1, #10
   1b924:	add	r2, r3, #16
   1b928:	vst1.64	{d16-d17}, [r3], ip
   1b92c:	vst1.64	{d16-d17}, [r3]
   1b930:	vst1.64	{d16-d17}, [r2]
   1b934:	beq	1b954 <__assert_fail@plt+0xa64c>
   1b938:	str	r1, [sp]
   1b93c:	mov	r3, sp
   1b940:	mov	r1, lr
   1b944:	mvn	r2, #0
   1b948:	bl	1b73c <__assert_fail@plt+0xa434>
   1b94c:	mov	sp, fp
   1b950:	pop	{fp, pc}
   1b954:	bl	112e4 <abort@plt>
   1b958:	push	{r4, sl, fp, lr}
   1b95c:	add	fp, sp, #8
   1b960:	sub	sp, sp, #48	; 0x30
   1b964:	mov	ip, r3
   1b968:	mov	r3, sp
   1b96c:	vmov.i32	q8, #0	; 0x00000000
   1b970:	mov	lr, #32
   1b974:	cmp	r1, #10
   1b978:	add	r4, r3, #16
   1b97c:	vst1.64	{d16-d17}, [r3], lr
   1b980:	vst1.64	{d16-d17}, [r3]
   1b984:	vst1.64	{d16-d17}, [r4]
   1b988:	beq	1b9a8 <__assert_fail@plt+0xa6a0>
   1b98c:	str	r1, [sp]
   1b990:	mov	r1, r2
   1b994:	mov	r3, sp
   1b998:	mov	r2, ip
   1b99c:	bl	1b73c <__assert_fail@plt+0xa434>
   1b9a0:	sub	sp, fp, #8
   1b9a4:	pop	{r4, sl, fp, pc}
   1b9a8:	bl	112e4 <abort@plt>
   1b9ac:	push	{fp, lr}
   1b9b0:	mov	fp, sp
   1b9b4:	sub	sp, sp, #48	; 0x30
   1b9b8:	mov	r3, sp
   1b9bc:	vmov.i32	q8, #0	; 0x00000000
   1b9c0:	mov	ip, #32
   1b9c4:	cmp	r0, #10
   1b9c8:	add	r2, r3, #16
   1b9cc:	vst1.64	{d16-d17}, [r3], ip
   1b9d0:	vst1.64	{d16-d17}, [r3]
   1b9d4:	vst1.64	{d16-d17}, [r2]
   1b9d8:	beq	1b9f8 <__assert_fail@plt+0xa6f0>
   1b9dc:	str	r0, [sp]
   1b9e0:	mov	r3, sp
   1b9e4:	mov	r0, #0
   1b9e8:	mvn	r2, #0
   1b9ec:	bl	1b73c <__assert_fail@plt+0xa434>
   1b9f0:	mov	sp, fp
   1b9f4:	pop	{fp, pc}
   1b9f8:	bl	112e4 <abort@plt>
   1b9fc:	push	{fp, lr}
   1ba00:	mov	fp, sp
   1ba04:	sub	sp, sp, #48	; 0x30
   1ba08:	mov	r3, sp
   1ba0c:	vmov.i32	q8, #0	; 0x00000000
   1ba10:	mov	ip, #32
   1ba14:	cmp	r0, #10
   1ba18:	add	lr, r3, #16
   1ba1c:	vst1.64	{d16-d17}, [r3], ip
   1ba20:	vst1.64	{d16-d17}, [r3]
   1ba24:	vst1.64	{d16-d17}, [lr]
   1ba28:	beq	1ba44 <__assert_fail@plt+0xa73c>
   1ba2c:	str	r0, [sp]
   1ba30:	mov	r3, sp
   1ba34:	mov	r0, #0
   1ba38:	bl	1b73c <__assert_fail@plt+0xa434>
   1ba3c:	mov	sp, fp
   1ba40:	pop	{fp, pc}
   1ba44:	bl	112e4 <abort@plt>
   1ba48:	push	{r4, sl, fp, lr}
   1ba4c:	add	fp, sp, #8
   1ba50:	sub	sp, sp, #48	; 0x30
   1ba54:	mov	lr, r0
   1ba58:	movw	r0, #424	; 0x1a8
   1ba5c:	mov	r3, #32
   1ba60:	mov	ip, r1
   1ba64:	mov	r4, #1
   1ba68:	movt	r0, #3
   1ba6c:	add	r1, r0, #16
   1ba70:	vld1.64	{d16-d17}, [r0], r3
   1ba74:	mov	r3, sp
   1ba78:	vld1.64	{d18-d19}, [r1]
   1ba7c:	add	r1, r3, #16
   1ba80:	vld1.64	{d20-d21}, [r0]
   1ba84:	add	r0, r3, #32
   1ba88:	vst1.64	{d18-d19}, [r1]
   1ba8c:	mov	r1, r3
   1ba90:	vst1.64	{d20-d21}, [r0]
   1ba94:	mov	r0, #28
   1ba98:	and	r0, r0, r2, lsr #3
   1ba9c:	and	r2, r2, #31
   1baa0:	vst1.64	{d16-d17}, [r1], r0
   1baa4:	ldr	r0, [r1, #8]
   1baa8:	bic	r4, r4, r0, lsr r2
   1baac:	eor	r0, r0, r4, lsl r2
   1bab0:	mov	r2, ip
   1bab4:	str	r0, [r1, #8]
   1bab8:	mov	r0, #0
   1babc:	mov	r1, lr
   1bac0:	bl	1b73c <__assert_fail@plt+0xa434>
   1bac4:	sub	sp, fp, #8
   1bac8:	pop	{r4, sl, fp, pc}
   1bacc:	push	{fp, lr}
   1bad0:	mov	fp, sp
   1bad4:	sub	sp, sp, #48	; 0x30
   1bad8:	mov	ip, r0
   1badc:	movw	r0, #424	; 0x1a8
   1bae0:	mov	r3, #32
   1bae4:	movt	r0, #3
   1bae8:	add	r2, r0, #16
   1baec:	vld1.64	{d16-d17}, [r0], r3
   1baf0:	mov	r3, sp
   1baf4:	vld1.64	{d18-d19}, [r2]
   1baf8:	add	r2, r3, #16
   1bafc:	vld1.64	{d20-d21}, [r0]
   1bb00:	add	r0, r3, #32
   1bb04:	vst1.64	{d18-d19}, [r2]
   1bb08:	mov	r2, r3
   1bb0c:	vst1.64	{d20-d21}, [r0]
   1bb10:	mov	r0, #28
   1bb14:	and	r0, r0, r1, lsr #3
   1bb18:	and	r1, r1, #31
   1bb1c:	vst1.64	{d16-d17}, [r2], r0
   1bb20:	mov	r0, #1
   1bb24:	ldr	lr, [r2, #8]
   1bb28:	bic	r0, r0, lr, lsr r1
   1bb2c:	eor	r0, lr, r0, lsl r1
   1bb30:	mov	r1, ip
   1bb34:	str	r0, [r2, #8]
   1bb38:	mov	r0, #0
   1bb3c:	mvn	r2, #0
   1bb40:	bl	1b73c <__assert_fail@plt+0xa434>
   1bb44:	mov	sp, fp
   1bb48:	pop	{fp, pc}
   1bb4c:	push	{fp, lr}
   1bb50:	mov	fp, sp
   1bb54:	sub	sp, sp, #48	; 0x30
   1bb58:	movw	r2, #424	; 0x1a8
   1bb5c:	mov	r3, #32
   1bb60:	mov	r1, r0
   1bb64:	movt	r2, #3
   1bb68:	add	r0, r2, #16
   1bb6c:	vld1.64	{d16-d17}, [r2], r3
   1bb70:	mov	r3, sp
   1bb74:	vld1.64	{d18-d19}, [r0]
   1bb78:	add	r0, r3, #16
   1bb7c:	vld1.64	{d20-d21}, [r2]
   1bb80:	mov	r2, r3
   1bb84:	vst1.64	{d18-d19}, [r0]
   1bb88:	add	r0, r3, #32
   1bb8c:	vst1.64	{d20-d21}, [r0]
   1bb90:	mov	r0, #12
   1bb94:	vst1.64	{d16-d17}, [r2], r0
   1bb98:	ldr	r0, [r2]
   1bb9c:	orr	r0, r0, #67108864	; 0x4000000
   1bba0:	str	r0, [r2]
   1bba4:	mov	r0, #0
   1bba8:	mvn	r2, #0
   1bbac:	bl	1b73c <__assert_fail@plt+0xa434>
   1bbb0:	mov	sp, fp
   1bbb4:	pop	{fp, pc}
   1bbb8:	push	{fp, lr}
   1bbbc:	mov	fp, sp
   1bbc0:	sub	sp, sp, #48	; 0x30
   1bbc4:	mov	ip, r1
   1bbc8:	mov	r1, r0
   1bbcc:	movw	r0, #424	; 0x1a8
   1bbd0:	mov	r3, #32
   1bbd4:	movt	r0, #3
   1bbd8:	add	r2, r0, #16
   1bbdc:	vld1.64	{d16-d17}, [r0], r3
   1bbe0:	mov	r3, sp
   1bbe4:	vld1.64	{d18-d19}, [r2]
   1bbe8:	add	r2, r3, #16
   1bbec:	vld1.64	{d20-d21}, [r0]
   1bbf0:	add	r0, r3, #32
   1bbf4:	vst1.64	{d18-d19}, [r2]
   1bbf8:	mov	r2, r3
   1bbfc:	vst1.64	{d20-d21}, [r0]
   1bc00:	mov	r0, #12
   1bc04:	vst1.64	{d16-d17}, [r2], r0
   1bc08:	ldr	r0, [r2]
   1bc0c:	orr	r0, r0, #67108864	; 0x4000000
   1bc10:	str	r0, [r2]
   1bc14:	mov	r0, #0
   1bc18:	mov	r2, ip
   1bc1c:	bl	1b73c <__assert_fail@plt+0xa434>
   1bc20:	mov	sp, fp
   1bc24:	pop	{fp, pc}
   1bc28:	push	{r4, sl, fp, lr}
   1bc2c:	add	fp, sp, #8
   1bc30:	sub	sp, sp, #96	; 0x60
   1bc34:	mov	ip, r2
   1bc38:	mov	r2, sp
   1bc3c:	vmov.i32	q8, #0	; 0x00000000
   1bc40:	mov	r4, #28
   1bc44:	cmp	r1, #10
   1bc48:	mov	r3, r2
   1bc4c:	add	lr, r2, #16
   1bc50:	vst1.64	{d16-d17}, [r3], r4
   1bc54:	vst1.64	{d16-d17}, [lr]
   1bc58:	vst1.32	{d16-d17}, [r3]
   1bc5c:	beq	1bcac <__assert_fail@plt+0xa9a4>
   1bc60:	vld1.64	{d16-d17}, [r2], r4
   1bc64:	vld1.64	{d18-d19}, [lr]
   1bc68:	add	r3, sp, #48	; 0x30
   1bc6c:	add	r4, r3, #4
   1bc70:	vld1.32	{d20-d21}, [r2]
   1bc74:	add	r2, r3, #20
   1bc78:	vst1.32	{d16-d17}, [r4]
   1bc7c:	vst1.32	{d18-d19}, [r2]
   1bc80:	add	r2, r3, #32
   1bc84:	vst1.32	{d20-d21}, [r2]
   1bc88:	str	r1, [sp, #48]	; 0x30
   1bc8c:	mvn	r2, #0
   1bc90:	ldr	r1, [sp, #60]	; 0x3c
   1bc94:	orr	r1, r1, #67108864	; 0x4000000
   1bc98:	str	r1, [sp, #60]	; 0x3c
   1bc9c:	mov	r1, ip
   1bca0:	bl	1b73c <__assert_fail@plt+0xa434>
   1bca4:	sub	sp, fp, #8
   1bca8:	pop	{r4, sl, fp, pc}
   1bcac:	bl	112e4 <abort@plt>
   1bcb0:	push	{r4, r5, fp, lr}
   1bcb4:	add	fp, sp, #8
   1bcb8:	sub	sp, sp, #48	; 0x30
   1bcbc:	mov	ip, r3
   1bcc0:	movw	r3, #424	; 0x1a8
   1bcc4:	mov	lr, #32
   1bcc8:	cmp	r1, #0
   1bccc:	mov	r5, sp
   1bcd0:	movt	r3, #3
   1bcd4:	cmpne	r2, #0
   1bcd8:	add	r4, r3, #16
   1bcdc:	vld1.64	{d16-d17}, [r3], lr
   1bce0:	vld1.64	{d18-d19}, [r4]
   1bce4:	add	r4, r5, #16
   1bce8:	vld1.64	{d20-d21}, [r3]
   1bcec:	vst1.64	{d16-d17}, [r5], lr
   1bcf0:	mov	r3, #10
   1bcf4:	vst1.64	{d18-d19}, [r4]
   1bcf8:	vst1.64	{d20-d21}, [r5]
   1bcfc:	str	r3, [sp]
   1bd00:	bne	1bd08 <__assert_fail@plt+0xaa00>
   1bd04:	bl	112e4 <abort@plt>
   1bd08:	str	r2, [sp, #44]	; 0x2c
   1bd0c:	str	r1, [sp, #40]	; 0x28
   1bd10:	mov	r3, sp
   1bd14:	mov	r1, ip
   1bd18:	mvn	r2, #0
   1bd1c:	bl	1b73c <__assert_fail@plt+0xa434>
   1bd20:	sub	sp, fp, #8
   1bd24:	pop	{r4, r5, fp, pc}
   1bd28:	push	{r4, r5, fp, lr}
   1bd2c:	add	fp, sp, #8
   1bd30:	sub	sp, sp, #48	; 0x30
   1bd34:	mov	lr, r3
   1bd38:	movw	r3, #424	; 0x1a8
   1bd3c:	mov	ip, #32
   1bd40:	cmp	r1, #0
   1bd44:	mov	r5, sp
   1bd48:	movt	r3, #3
   1bd4c:	cmpne	r2, #0
   1bd50:	add	r4, r3, #16
   1bd54:	vld1.64	{d16-d17}, [r3], ip
   1bd58:	vld1.64	{d18-d19}, [r4]
   1bd5c:	add	r4, r5, #16
   1bd60:	vld1.64	{d20-d21}, [r3]
   1bd64:	vst1.64	{d16-d17}, [r5], ip
   1bd68:	mov	r3, #10
   1bd6c:	vst1.64	{d18-d19}, [r4]
   1bd70:	vst1.64	{d20-d21}, [r5]
   1bd74:	str	r3, [sp]
   1bd78:	bne	1bd80 <__assert_fail@plt+0xaa78>
   1bd7c:	bl	112e4 <abort@plt>
   1bd80:	ldr	ip, [fp, #8]
   1bd84:	str	r2, [sp, #44]	; 0x2c
   1bd88:	str	r1, [sp, #40]	; 0x28
   1bd8c:	mov	r3, sp
   1bd90:	mov	r1, lr
   1bd94:	mov	r2, ip
   1bd98:	bl	1b73c <__assert_fail@plt+0xa434>
   1bd9c:	sub	sp, fp, #8
   1bda0:	pop	{r4, r5, fp, pc}
   1bda4:	push	{r4, sl, fp, lr}
   1bda8:	add	fp, sp, #8
   1bdac:	sub	sp, sp, #48	; 0x30
   1bdb0:	mov	ip, r2
   1bdb4:	movw	r2, #424	; 0x1a8
   1bdb8:	mov	lr, #32
   1bdbc:	cmp	r0, #0
   1bdc0:	mov	r4, sp
   1bdc4:	movt	r2, #3
   1bdc8:	cmpne	r1, #0
   1bdcc:	add	r3, r2, #16
   1bdd0:	vld1.64	{d16-d17}, [r2], lr
   1bdd4:	vld1.64	{d18-d19}, [r3]
   1bdd8:	add	r3, r4, #16
   1bddc:	vld1.64	{d20-d21}, [r2]
   1bde0:	vst1.64	{d16-d17}, [r4], lr
   1bde4:	mov	r2, #10
   1bde8:	vst1.64	{d18-d19}, [r3]
   1bdec:	vst1.64	{d20-d21}, [r4]
   1bdf0:	str	r2, [sp]
   1bdf4:	bne	1bdfc <__assert_fail@plt+0xaaf4>
   1bdf8:	bl	112e4 <abort@plt>
   1bdfc:	str	r1, [sp, #44]	; 0x2c
   1be00:	str	r0, [sp, #40]	; 0x28
   1be04:	mov	r3, sp
   1be08:	mov	r0, #0
   1be0c:	mov	r1, ip
   1be10:	mvn	r2, #0
   1be14:	bl	1b73c <__assert_fail@plt+0xa434>
   1be18:	sub	sp, fp, #8
   1be1c:	pop	{r4, sl, fp, pc}
   1be20:	push	{r4, r5, fp, lr}
   1be24:	add	fp, sp, #8
   1be28:	sub	sp, sp, #48	; 0x30
   1be2c:	mov	lr, r2
   1be30:	movw	r2, #424	; 0x1a8
   1be34:	mov	ip, r3
   1be38:	mov	r3, #32
   1be3c:	cmp	r0, #0
   1be40:	mov	r5, sp
   1be44:	movt	r2, #3
   1be48:	cmpne	r1, #0
   1be4c:	add	r4, r2, #16
   1be50:	vld1.64	{d16-d17}, [r2], r3
   1be54:	vld1.64	{d18-d19}, [r4]
   1be58:	add	r4, r5, #16
   1be5c:	vld1.64	{d20-d21}, [r2]
   1be60:	vst1.64	{d16-d17}, [r5], r3
   1be64:	mov	r2, #10
   1be68:	vst1.64	{d18-d19}, [r4]
   1be6c:	vst1.64	{d20-d21}, [r5]
   1be70:	str	r2, [sp]
   1be74:	bne	1be7c <__assert_fail@plt+0xab74>
   1be78:	bl	112e4 <abort@plt>
   1be7c:	str	r1, [sp, #44]	; 0x2c
   1be80:	str	r0, [sp, #40]	; 0x28
   1be84:	mov	r3, sp
   1be88:	mov	r0, #0
   1be8c:	mov	r1, lr
   1be90:	mov	r2, ip
   1be94:	bl	1b73c <__assert_fail@plt+0xa434>
   1be98:	sub	sp, fp, #8
   1be9c:	pop	{r4, r5, fp, pc}
   1bea0:	movw	r3, #280	; 0x118
   1bea4:	movt	r3, #3
   1bea8:	b	1b73c <__assert_fail@plt+0xa434>
   1beac:	movw	r3, #280	; 0x118
   1beb0:	mov	r2, r1
   1beb4:	mov	r1, r0
   1beb8:	mov	r0, #0
   1bebc:	movt	r3, #3
   1bec0:	b	1b73c <__assert_fail@plt+0xa434>
   1bec4:	movw	r3, #280	; 0x118
   1bec8:	mvn	r2, #0
   1becc:	movt	r3, #3
   1bed0:	b	1b73c <__assert_fail@plt+0xa434>
   1bed4:	movw	r3, #280	; 0x118
   1bed8:	mov	r1, r0
   1bedc:	mov	r0, #0
   1bee0:	mvn	r2, #0
   1bee4:	movt	r3, #3
   1bee8:	b	1b73c <__assert_fail@plt+0xa434>
   1beec:	mov	r1, #0
   1bef0:	mov	r2, #3
   1bef4:	b	1da68 <__assert_fail@plt+0xc760>
   1bef8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1befc:	add	fp, sp, #24
   1bf00:	sub	sp, sp, #32
   1bf04:	ldr	r6, [fp, #12]
   1bf08:	ldr	r7, [fp, #8]
   1bf0c:	mov	r4, r2
   1bf10:	mov	r8, r0
   1bf14:	cmp	r1, #0
   1bf18:	beq	1bf40 <__assert_fail@plt+0xac38>
   1bf1c:	movw	r2, #61336	; 0xef98
   1bf20:	mov	r5, r1
   1bf24:	str	r3, [sp, #4]
   1bf28:	str	r4, [sp]
   1bf2c:	mov	r0, r8
   1bf30:	mov	r1, #1
   1bf34:	movt	r2, #1
   1bf38:	mov	r3, r5
   1bf3c:	b	1bf58 <__assert_fail@plt+0xac50>
   1bf40:	movw	r2, #61348	; 0xefa4
   1bf44:	str	r3, [sp]
   1bf48:	mov	r0, r8
   1bf4c:	mov	r1, #1
   1bf50:	mov	r3, r4
   1bf54:	movt	r2, #1
   1bf58:	bl	11254 <__fprintf_chk@plt>
   1bf5c:	movw	r1, #61355	; 0xefab
   1bf60:	mov	r0, #0
   1bf64:	mov	r2, #5
   1bf68:	movt	r1, #1
   1bf6c:	bl	11104 <dcgettext@plt>
   1bf70:	movw	r2, #62073	; 0xf279
   1bf74:	mov	r3, r0
   1bf78:	movw	r0, #2022	; 0x7e6
   1bf7c:	mov	r1, #1
   1bf80:	str	r0, [sp]
   1bf84:	movt	r2, #1
   1bf88:	mov	r0, r8
   1bf8c:	bl	11254 <__fprintf_chk@plt>
   1bf90:	movw	r4, #58434	; 0xe442
   1bf94:	mov	r1, r8
   1bf98:	movt	r4, #1
   1bf9c:	mov	r0, r4
   1bfa0:	bl	11068 <fputs_unlocked@plt>
   1bfa4:	movw	r1, #61359	; 0xefaf
   1bfa8:	mov	r0, #0
   1bfac:	mov	r2, #5
   1bfb0:	movt	r1, #1
   1bfb4:	bl	11104 <dcgettext@plt>
   1bfb8:	movw	r3, #61530	; 0xf05a
   1bfbc:	mov	r2, r0
   1bfc0:	mov	r0, r8
   1bfc4:	mov	r1, #1
   1bfc8:	movt	r3, #1
   1bfcc:	bl	11254 <__fprintf_chk@plt>
   1bfd0:	mov	r0, r4
   1bfd4:	mov	r1, r8
   1bfd8:	bl	11068 <fputs_unlocked@plt>
   1bfdc:	cmp	r6, #9
   1bfe0:	bhi	1c01c <__assert_fail@plt+0xad14>
   1bfe4:	add	r0, pc, #0
   1bfe8:	ldr	pc, [r0, r6, lsl #2]
   1bfec:	andeq	ip, r1, r4, lsl r0
   1bff0:	andeq	ip, r1, r8, lsr #32
   1bff4:	andeq	ip, r1, r8, asr r0
   1bff8:	andeq	ip, r1, r0, lsl #1
   1bffc:	andeq	ip, r1, r8, lsr #1
   1c000:	ldrdeq	ip, [r1], -r0
   1c004:	strdeq	ip, [r1], -r8
   1c008:	andeq	ip, r1, r0, lsr r1
   1c00c:	ldrdeq	ip, [r1], -r8
   1c010:	andeq	ip, r1, r0, lsl #3
   1c014:	sub	sp, fp, #24
   1c018:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c01c:	movw	r1, #61883	; 0xf1bb
   1c020:	movt	r1, #1
   1c024:	b	1c188 <__assert_fail@plt+0xae80>
   1c028:	movw	r1, #61564	; 0xf07c
   1c02c:	mov	r0, #0
   1c030:	mov	r2, #5
   1c034:	movt	r1, #1
   1c038:	bl	11104 <dcgettext@plt>
   1c03c:	ldr	r3, [r7]
   1c040:	mov	r2, r0
   1c044:	mov	r0, r8
   1c048:	mov	r1, #1
   1c04c:	sub	sp, fp, #24
   1c050:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c054:	b	11254 <__fprintf_chk@plt>
   1c058:	movw	r1, #61580	; 0xf08c
   1c05c:	mov	r0, #0
   1c060:	mov	r2, #5
   1c064:	movt	r1, #1
   1c068:	bl	11104 <dcgettext@plt>
   1c06c:	mov	r2, r0
   1c070:	ldr	r3, [r7]
   1c074:	ldr	r0, [r7, #4]
   1c078:	str	r0, [sp]
   1c07c:	b	1c16c <__assert_fail@plt+0xae64>
   1c080:	movw	r1, #61603	; 0xf0a3
   1c084:	mov	r0, #0
   1c088:	mov	r2, #5
   1c08c:	movt	r1, #1
   1c090:	bl	11104 <dcgettext@plt>
   1c094:	ldr	r3, [r7]
   1c098:	mov	r2, r0
   1c09c:	ldmib	r7, {r0, r1}
   1c0a0:	stm	sp, {r0, r1}
   1c0a4:	b	1c16c <__assert_fail@plt+0xae64>
   1c0a8:	movw	r1, #61631	; 0xf0bf
   1c0ac:	mov	r0, #0
   1c0b0:	mov	r2, #5
   1c0b4:	movt	r1, #1
   1c0b8:	bl	11104 <dcgettext@plt>
   1c0bc:	ldr	r3, [r7]
   1c0c0:	mov	r2, r0
   1c0c4:	ldmib	r7, {r0, r1, r7}
   1c0c8:	stm	sp, {r0, r1, r7}
   1c0cc:	b	1c16c <__assert_fail@plt+0xae64>
   1c0d0:	movw	r1, #61663	; 0xf0df
   1c0d4:	mov	r0, #0
   1c0d8:	mov	r2, #5
   1c0dc:	movt	r1, #1
   1c0e0:	bl	11104 <dcgettext@plt>
   1c0e4:	ldr	r3, [r7]
   1c0e8:	mov	r2, r0
   1c0ec:	ldmib	r7, {r0, r1, r6, r7}
   1c0f0:	stm	sp, {r0, r1, r6, r7}
   1c0f4:	b	1c16c <__assert_fail@plt+0xae64>
   1c0f8:	movw	r1, #61699	; 0xf103
   1c0fc:	mov	r0, #0
   1c100:	mov	r2, #5
   1c104:	movt	r1, #1
   1c108:	bl	11104 <dcgettext@plt>
   1c10c:	ldr	r3, [r7]
   1c110:	mov	r2, r0
   1c114:	ldmib	r7, {r0, r1, r6}
   1c118:	ldr	r5, [r7, #16]
   1c11c:	ldr	r7, [r7, #20]
   1c120:	stm	sp, {r0, r1, r6}
   1c124:	str	r5, [sp, #12]
   1c128:	str	r7, [sp, #16]
   1c12c:	b	1c16c <__assert_fail@plt+0xae64>
   1c130:	movw	r1, #61739	; 0xf12b
   1c134:	mov	r0, #0
   1c138:	mov	r2, #5
   1c13c:	movt	r1, #1
   1c140:	bl	11104 <dcgettext@plt>
   1c144:	ldr	r3, [r7]
   1c148:	mov	r2, r0
   1c14c:	ldmib	r7, {r0, r1, r6}
   1c150:	ldr	r5, [r7, #16]
   1c154:	ldr	r4, [r7, #20]
   1c158:	ldr	r7, [r7, #24]
   1c15c:	stm	sp, {r0, r1, r6}
   1c160:	str	r5, [sp, #12]
   1c164:	str	r4, [sp, #16]
   1c168:	str	r7, [sp, #20]
   1c16c:	mov	r0, r8
   1c170:	mov	r1, #1
   1c174:	bl	11254 <__fprintf_chk@plt>
   1c178:	sub	sp, fp, #24
   1c17c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c180:	movw	r1, #61831	; 0xf187
   1c184:	movt	r1, #1
   1c188:	mov	r0, #0
   1c18c:	mov	r2, #5
   1c190:	bl	11104 <dcgettext@plt>
   1c194:	mov	ip, r0
   1c198:	ldr	r3, [r7]
   1c19c:	ldr	r0, [r7, #4]
   1c1a0:	ldr	r1, [r7, #8]
   1c1a4:	ldr	r6, [r7, #12]
   1c1a8:	ldr	r5, [r7, #16]
   1c1ac:	ldr	r4, [r7, #20]
   1c1b0:	ldr	r2, [r7, #24]
   1c1b4:	ldr	lr, [r7, #28]
   1c1b8:	ldr	r7, [r7, #32]
   1c1bc:	stm	sp, {r0, r1, r6}
   1c1c0:	str	r5, [sp, #12]
   1c1c4:	str	r4, [sp, #16]
   1c1c8:	str	r2, [sp, #20]
   1c1cc:	str	lr, [sp, #24]
   1c1d0:	str	r7, [sp, #28]
   1c1d4:	b	1c21c <__assert_fail@plt+0xaf14>
   1c1d8:	movw	r1, #61783	; 0xf157
   1c1dc:	mov	r0, #0
   1c1e0:	mov	r2, #5
   1c1e4:	movt	r1, #1
   1c1e8:	bl	11104 <dcgettext@plt>
   1c1ec:	mov	ip, r0
   1c1f0:	ldr	r3, [r7]
   1c1f4:	ldmib	r7, {r0, r1, r6}
   1c1f8:	ldr	r5, [r7, #16]
   1c1fc:	ldr	r4, [r7, #20]
   1c200:	ldr	r2, [r7, #24]
   1c204:	ldr	r7, [r7, #28]
   1c208:	stm	sp, {r0, r1, r6}
   1c20c:	str	r5, [sp, #12]
   1c210:	str	r4, [sp, #16]
   1c214:	str	r2, [sp, #20]
   1c218:	str	r7, [sp, #24]
   1c21c:	mov	r0, r8
   1c220:	mov	r1, #1
   1c224:	mov	r2, ip
   1c228:	bl	11254 <__fprintf_chk@plt>
   1c22c:	sub	sp, fp, #24
   1c230:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c234:	push	{r4, sl, fp, lr}
   1c238:	add	fp, sp, #8
   1c23c:	sub	sp, sp, #8
   1c240:	ldr	ip, [fp, #8]
   1c244:	mov	lr, #0
   1c248:	ldr	r4, [ip, lr, lsl #2]
   1c24c:	add	lr, lr, #1
   1c250:	cmp	r4, #0
   1c254:	bne	1c248 <__assert_fail@plt+0xaf40>
   1c258:	sub	r4, lr, #1
   1c25c:	str	ip, [sp]
   1c260:	str	r4, [sp, #4]
   1c264:	bl	1bef8 <__assert_fail@plt+0xabf0>
   1c268:	sub	sp, fp, #8
   1c26c:	pop	{r4, sl, fp, pc}
   1c270:	push	{fp, lr}
   1c274:	mov	fp, sp
   1c278:	sub	sp, sp, #48	; 0x30
   1c27c:	ldr	ip, [fp, #8]
   1c280:	ldr	lr, [ip]
   1c284:	cmp	lr, #0
   1c288:	str	lr, [sp, #8]
   1c28c:	beq	1c328 <__assert_fail@plt+0xb020>
   1c290:	ldr	lr, [ip, #4]
   1c294:	cmp	lr, #0
   1c298:	str	lr, [sp, #12]
   1c29c:	beq	1c330 <__assert_fail@plt+0xb028>
   1c2a0:	ldr	lr, [ip, #8]
   1c2a4:	cmp	lr, #0
   1c2a8:	str	lr, [sp, #16]
   1c2ac:	beq	1c338 <__assert_fail@plt+0xb030>
   1c2b0:	ldr	lr, [ip, #12]
   1c2b4:	cmp	lr, #0
   1c2b8:	str	lr, [sp, #20]
   1c2bc:	beq	1c340 <__assert_fail@plt+0xb038>
   1c2c0:	ldr	lr, [ip, #16]
   1c2c4:	cmp	lr, #0
   1c2c8:	str	lr, [sp, #24]
   1c2cc:	beq	1c348 <__assert_fail@plt+0xb040>
   1c2d0:	ldr	lr, [ip, #20]
   1c2d4:	cmp	lr, #0
   1c2d8:	str	lr, [sp, #28]
   1c2dc:	beq	1c350 <__assert_fail@plt+0xb048>
   1c2e0:	ldr	lr, [ip, #24]
   1c2e4:	cmp	lr, #0
   1c2e8:	str	lr, [sp, #32]
   1c2ec:	beq	1c358 <__assert_fail@plt+0xb050>
   1c2f0:	ldr	lr, [ip, #28]
   1c2f4:	cmp	lr, #0
   1c2f8:	str	lr, [sp, #36]	; 0x24
   1c2fc:	beq	1c360 <__assert_fail@plt+0xb058>
   1c300:	ldr	lr, [ip, #32]
   1c304:	cmp	lr, #0
   1c308:	str	lr, [sp, #40]	; 0x28
   1c30c:	beq	1c368 <__assert_fail@plt+0xb060>
   1c310:	ldr	lr, [ip, #36]	; 0x24
   1c314:	mov	ip, #10
   1c318:	cmp	lr, #0
   1c31c:	str	lr, [sp, #44]	; 0x2c
   1c320:	movweq	ip, #9
   1c324:	b	1c36c <__assert_fail@plt+0xb064>
   1c328:	mov	ip, #0
   1c32c:	b	1c36c <__assert_fail@plt+0xb064>
   1c330:	mov	ip, #1
   1c334:	b	1c36c <__assert_fail@plt+0xb064>
   1c338:	mov	ip, #2
   1c33c:	b	1c36c <__assert_fail@plt+0xb064>
   1c340:	mov	ip, #3
   1c344:	b	1c36c <__assert_fail@plt+0xb064>
   1c348:	mov	ip, #4
   1c34c:	b	1c36c <__assert_fail@plt+0xb064>
   1c350:	mov	ip, #5
   1c354:	b	1c36c <__assert_fail@plt+0xb064>
   1c358:	mov	ip, #6
   1c35c:	b	1c36c <__assert_fail@plt+0xb064>
   1c360:	mov	ip, #7
   1c364:	b	1c36c <__assert_fail@plt+0xb064>
   1c368:	mov	ip, #8
   1c36c:	add	lr, sp, #8
   1c370:	str	ip, [sp, #4]
   1c374:	str	lr, [sp]
   1c378:	bl	1bef8 <__assert_fail@plt+0xabf0>
   1c37c:	mov	sp, fp
   1c380:	pop	{fp, pc}
   1c384:	push	{fp, lr}
   1c388:	mov	fp, sp
   1c38c:	sub	sp, sp, #56	; 0x38
   1c390:	add	ip, fp, #8
   1c394:	str	ip, [sp, #12]
   1c398:	ldr	lr, [fp, #8]
   1c39c:	cmp	lr, #0
   1c3a0:	str	lr, [sp, #16]
   1c3a4:	beq	1c440 <__assert_fail@plt+0xb138>
   1c3a8:	ldr	lr, [ip, #4]
   1c3ac:	cmp	lr, #0
   1c3b0:	str	lr, [sp, #20]
   1c3b4:	beq	1c448 <__assert_fail@plt+0xb140>
   1c3b8:	ldr	lr, [ip, #8]
   1c3bc:	cmp	lr, #0
   1c3c0:	str	lr, [sp, #24]
   1c3c4:	beq	1c450 <__assert_fail@plt+0xb148>
   1c3c8:	ldr	lr, [ip, #12]
   1c3cc:	cmp	lr, #0
   1c3d0:	str	lr, [sp, #28]
   1c3d4:	beq	1c458 <__assert_fail@plt+0xb150>
   1c3d8:	ldr	lr, [ip, #16]
   1c3dc:	cmp	lr, #0
   1c3e0:	str	lr, [sp, #32]
   1c3e4:	beq	1c460 <__assert_fail@plt+0xb158>
   1c3e8:	ldr	lr, [ip, #20]
   1c3ec:	cmp	lr, #0
   1c3f0:	str	lr, [sp, #36]	; 0x24
   1c3f4:	beq	1c468 <__assert_fail@plt+0xb160>
   1c3f8:	ldr	lr, [ip, #24]
   1c3fc:	cmp	lr, #0
   1c400:	str	lr, [sp, #40]	; 0x28
   1c404:	beq	1c470 <__assert_fail@plt+0xb168>
   1c408:	ldr	lr, [ip, #28]
   1c40c:	cmp	lr, #0
   1c410:	str	lr, [sp, #44]	; 0x2c
   1c414:	beq	1c478 <__assert_fail@plt+0xb170>
   1c418:	ldr	lr, [ip, #32]
   1c41c:	cmp	lr, #0
   1c420:	str	lr, [sp, #48]	; 0x30
   1c424:	beq	1c480 <__assert_fail@plt+0xb178>
   1c428:	ldr	lr, [ip, #36]	; 0x24
   1c42c:	mov	ip, #10
   1c430:	cmp	lr, #0
   1c434:	str	lr, [sp, #52]	; 0x34
   1c438:	movweq	ip, #9
   1c43c:	b	1c484 <__assert_fail@plt+0xb17c>
   1c440:	mov	ip, #0
   1c444:	b	1c484 <__assert_fail@plt+0xb17c>
   1c448:	mov	ip, #1
   1c44c:	b	1c484 <__assert_fail@plt+0xb17c>
   1c450:	mov	ip, #2
   1c454:	b	1c484 <__assert_fail@plt+0xb17c>
   1c458:	mov	ip, #3
   1c45c:	b	1c484 <__assert_fail@plt+0xb17c>
   1c460:	mov	ip, #4
   1c464:	b	1c484 <__assert_fail@plt+0xb17c>
   1c468:	mov	ip, #5
   1c46c:	b	1c484 <__assert_fail@plt+0xb17c>
   1c470:	mov	ip, #6
   1c474:	b	1c484 <__assert_fail@plt+0xb17c>
   1c478:	mov	ip, #7
   1c47c:	b	1c484 <__assert_fail@plt+0xb17c>
   1c480:	mov	ip, #8
   1c484:	add	lr, sp, #16
   1c488:	str	ip, [sp, #4]
   1c48c:	str	lr, [sp]
   1c490:	bl	1bef8 <__assert_fail@plt+0xabf0>
   1c494:	mov	sp, fp
   1c498:	pop	{fp, pc}
   1c49c:	push	{fp, lr}
   1c4a0:	mov	fp, sp
   1c4a4:	movw	r0, #372	; 0x174
   1c4a8:	movt	r0, #3
   1c4ac:	ldr	r1, [r0]
   1c4b0:	movw	r0, #58434	; 0xe442
   1c4b4:	movt	r0, #1
   1c4b8:	bl	11068 <fputs_unlocked@plt>
   1c4bc:	movw	r1, #61943	; 0xf1f7
   1c4c0:	mov	r0, #0
   1c4c4:	mov	r2, #5
   1c4c8:	movt	r1, #1
   1c4cc:	bl	11104 <dcgettext@plt>
   1c4d0:	movw	r2, #61963	; 0xf20b
   1c4d4:	mov	r1, r0
   1c4d8:	mov	r0, #1
   1c4dc:	movt	r2, #1
   1c4e0:	bl	1123c <__printf_chk@plt>
   1c4e4:	movw	r1, #61985	; 0xf221
   1c4e8:	mov	r0, #0
   1c4ec:	mov	r2, #5
   1c4f0:	movt	r1, #1
   1c4f4:	bl	11104 <dcgettext@plt>
   1c4f8:	movw	r2, #59023	; 0xe68f
   1c4fc:	movw	r3, #59918	; 0xea0e
   1c500:	mov	r1, r0
   1c504:	mov	r0, #1
   1c508:	movt	r2, #1
   1c50c:	movt	r3, #1
   1c510:	bl	1123c <__printf_chk@plt>
   1c514:	movw	r1, #62005	; 0xf235
   1c518:	mov	r0, #0
   1c51c:	mov	r2, #5
   1c520:	movt	r1, #1
   1c524:	bl	11104 <dcgettext@plt>
   1c528:	movw	r2, #62044	; 0xf25c
   1c52c:	mov	r1, r0
   1c530:	mov	r0, #1
   1c534:	movt	r2, #1
   1c538:	pop	{fp, lr}
   1c53c:	b	1123c <__printf_chk@plt>
   1c540:	push	{r4, r5, r6, sl, fp, lr}
   1c544:	add	fp, sp, #16
   1c548:	mov	r4, r2
   1c54c:	mov	r5, r1
   1c550:	mov	r6, r0
   1c554:	bl	1dce0 <__assert_fail@plt+0xc9d8>
   1c558:	cmp	r0, #0
   1c55c:	popne	{r4, r5, r6, sl, fp, pc}
   1c560:	cmp	r6, #0
   1c564:	beq	1c578 <__assert_fail@plt+0xb270>
   1c568:	cmp	r5, #0
   1c56c:	cmpne	r4, #0
   1c570:	bne	1c578 <__assert_fail@plt+0xb270>
   1c574:	pop	{r4, r5, r6, sl, fp, pc}
   1c578:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c57c:	push	{r4, r5, r6, sl, fp, lr}
   1c580:	add	fp, sp, #16
   1c584:	mov	r4, r2
   1c588:	mov	r5, r1
   1c58c:	mov	r6, r0
   1c590:	bl	1dce0 <__assert_fail@plt+0xc9d8>
   1c594:	cmp	r0, #0
   1c598:	popne	{r4, r5, r6, sl, fp, pc}
   1c59c:	cmp	r6, #0
   1c5a0:	beq	1c5b4 <__assert_fail@plt+0xb2ac>
   1c5a4:	cmp	r5, #0
   1c5a8:	cmpne	r4, #0
   1c5ac:	bne	1c5b4 <__assert_fail@plt+0xb2ac>
   1c5b0:	pop	{r4, r5, r6, sl, fp, pc}
   1c5b4:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c5b8:	push	{fp, lr}
   1c5bc:	mov	fp, sp
   1c5c0:	bl	1d960 <__assert_fail@plt+0xc658>
   1c5c4:	cmp	r0, #0
   1c5c8:	popne	{fp, pc}
   1c5cc:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c5d0:	push	{fp, lr}
   1c5d4:	mov	fp, sp
   1c5d8:	bl	1d960 <__assert_fail@plt+0xc658>
   1c5dc:	cmp	r0, #0
   1c5e0:	popne	{fp, pc}
   1c5e4:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c5e8:	push	{fp, lr}
   1c5ec:	mov	fp, sp
   1c5f0:	bl	1d960 <__assert_fail@plt+0xc658>
   1c5f4:	cmp	r0, #0
   1c5f8:	popne	{fp, pc}
   1c5fc:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c600:	push	{r4, r5, fp, lr}
   1c604:	add	fp, sp, #8
   1c608:	mov	r4, r1
   1c60c:	mov	r5, r0
   1c610:	bl	1d990 <__assert_fail@plt+0xc688>
   1c614:	cmp	r0, #0
   1c618:	popne	{r4, r5, fp, pc}
   1c61c:	cmp	r5, #0
   1c620:	beq	1c630 <__assert_fail@plt+0xb328>
   1c624:	cmp	r4, #0
   1c628:	bne	1c630 <__assert_fail@plt+0xb328>
   1c62c:	pop	{r4, r5, fp, pc}
   1c630:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c634:	push	{fp, lr}
   1c638:	mov	fp, sp
   1c63c:	cmp	r1, #0
   1c640:	orreq	r1, r1, #1
   1c644:	bl	1d990 <__assert_fail@plt+0xc688>
   1c648:	cmp	r0, #0
   1c64c:	popne	{fp, pc}
   1c650:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c654:	push	{fp, lr}
   1c658:	mov	fp, sp
   1c65c:	clz	r3, r2
   1c660:	lsr	ip, r3, #5
   1c664:	clz	r3, r1
   1c668:	lsr	r3, r3, #5
   1c66c:	orrs	r3, r3, ip
   1c670:	movwne	r1, #1
   1c674:	movwne	r2, #1
   1c678:	bl	1dce0 <__assert_fail@plt+0xc9d8>
   1c67c:	cmp	r0, #0
   1c680:	popne	{fp, pc}
   1c684:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c688:	push	{fp, lr}
   1c68c:	mov	fp, sp
   1c690:	mov	r2, r1
   1c694:	mov	r1, r0
   1c698:	mov	r0, #0
   1c69c:	bl	1dce0 <__assert_fail@plt+0xc9d8>
   1c6a0:	cmp	r0, #0
   1c6a4:	popne	{fp, pc}
   1c6a8:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c6ac:	push	{fp, lr}
   1c6b0:	mov	fp, sp
   1c6b4:	mov	r2, r1
   1c6b8:	mov	r1, r0
   1c6bc:	clz	r0, r2
   1c6c0:	clz	r3, r1
   1c6c4:	lsr	r0, r0, #5
   1c6c8:	lsr	r3, r3, #5
   1c6cc:	orrs	r0, r3, r0
   1c6d0:	movwne	r1, #1
   1c6d4:	movwne	r2, #1
   1c6d8:	mov	r0, #0
   1c6dc:	bl	1dce0 <__assert_fail@plt+0xc9d8>
   1c6e0:	cmp	r0, #0
   1c6e4:	popne	{fp, pc}
   1c6e8:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c6ec:	push	{r4, r5, r6, sl, fp, lr}
   1c6f0:	add	fp, sp, #16
   1c6f4:	ldr	r5, [r1]
   1c6f8:	mov	r4, r1
   1c6fc:	mov	r6, r0
   1c700:	cmp	r0, #0
   1c704:	beq	1c71c <__assert_fail@plt+0xb414>
   1c708:	mov	r0, #1
   1c70c:	add	r0, r0, r5, lsr #1
   1c710:	adds	r5, r5, r0
   1c714:	bcc	1c724 <__assert_fail@plt+0xb41c>
   1c718:	b	1c760 <__assert_fail@plt+0xb458>
   1c71c:	cmp	r5, #0
   1c720:	movweq	r5, #64	; 0x40
   1c724:	mov	r0, r6
   1c728:	mov	r1, r5
   1c72c:	mov	r2, #1
   1c730:	bl	1dce0 <__assert_fail@plt+0xc9d8>
   1c734:	cmp	r5, #0
   1c738:	mov	r1, r5
   1c73c:	movwne	r1, #1
   1c740:	cmp	r0, #0
   1c744:	bne	1c758 <__assert_fail@plt+0xb450>
   1c748:	clz	r2, r6
   1c74c:	lsr	r2, r2, #5
   1c750:	orrs	r1, r2, r1
   1c754:	bne	1c760 <__assert_fail@plt+0xb458>
   1c758:	str	r5, [r4]
   1c75c:	pop	{r4, r5, r6, sl, fp, pc}
   1c760:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c764:	push	{r4, r5, r6, r7, fp, lr}
   1c768:	add	fp, sp, #16
   1c76c:	ldr	r5, [r1]
   1c770:	mov	r6, r2
   1c774:	mov	r4, r1
   1c778:	mov	r7, r0
   1c77c:	cmp	r0, #0
   1c780:	beq	1c798 <__assert_fail@plt+0xb490>
   1c784:	mov	r0, #1
   1c788:	add	r0, r0, r5, lsr #1
   1c78c:	adds	r5, r5, r0
   1c790:	bcc	1c7b0 <__assert_fail@plt+0xb4a8>
   1c794:	b	1c7e4 <__assert_fail@plt+0xb4dc>
   1c798:	cmp	r5, #0
   1c79c:	bne	1c7b0 <__assert_fail@plt+0xb4a8>
   1c7a0:	mov	r0, #64	; 0x40
   1c7a4:	cmp	r6, #64	; 0x40
   1c7a8:	udiv	r5, r0, r6
   1c7ac:	addhi	r5, r5, #1
   1c7b0:	mov	r0, r7
   1c7b4:	mov	r1, r5
   1c7b8:	mov	r2, r6
   1c7bc:	bl	1dce0 <__assert_fail@plt+0xc9d8>
   1c7c0:	cmp	r0, #0
   1c7c4:	bne	1c7dc <__assert_fail@plt+0xb4d4>
   1c7c8:	cmp	r7, #0
   1c7cc:	beq	1c7e4 <__assert_fail@plt+0xb4dc>
   1c7d0:	cmp	r6, #0
   1c7d4:	cmpne	r5, #0
   1c7d8:	bne	1c7e4 <__assert_fail@plt+0xb4dc>
   1c7dc:	str	r5, [r4]
   1c7e0:	pop	{r4, r5, r6, r7, fp, pc}
   1c7e4:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c7e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c7ec:	add	fp, sp, #24
   1c7f0:	mov	r8, r1
   1c7f4:	ldr	r1, [r1]
   1c7f8:	mov	r5, r0
   1c7fc:	add	r0, r1, r1, asr #1
   1c800:	cmp	r0, r1
   1c804:	mvnvs	r0, #-2147483648	; 0x80000000
   1c808:	cmp	r0, r3
   1c80c:	mov	r7, r0
   1c810:	movgt	r7, r3
   1c814:	cmn	r3, #1
   1c818:	movle	r7, r0
   1c81c:	ldr	r0, [fp, #8]
   1c820:	cmn	r0, #1
   1c824:	ble	1c84c <__assert_fail@plt+0xb544>
   1c828:	cmp	r0, #0
   1c82c:	beq	1c8a0 <__assert_fail@plt+0xb598>
   1c830:	cmn	r7, #1
   1c834:	ble	1c874 <__assert_fail@plt+0xb56c>
   1c838:	mvn	r4, #-2147483648	; 0x80000000
   1c83c:	udiv	r6, r4, r0
   1c840:	cmp	r6, r7
   1c844:	bge	1c8a0 <__assert_fail@plt+0xb598>
   1c848:	b	1c8b0 <__assert_fail@plt+0xb5a8>
   1c84c:	cmn	r7, #1
   1c850:	ble	1c890 <__assert_fail@plt+0xb588>
   1c854:	cmn	r0, #1
   1c858:	beq	1c8a0 <__assert_fail@plt+0xb598>
   1c85c:	mov	r6, #-2147483648	; 0x80000000
   1c860:	mvn	r4, #-2147483648	; 0x80000000
   1c864:	sdiv	r6, r6, r0
   1c868:	cmp	r6, r7
   1c86c:	bge	1c8a0 <__assert_fail@plt+0xb598>
   1c870:	b	1c8b0 <__assert_fail@plt+0xb5a8>
   1c874:	beq	1c8a0 <__assert_fail@plt+0xb598>
   1c878:	mov	r6, #-2147483648	; 0x80000000
   1c87c:	mvn	r4, #-2147483648	; 0x80000000
   1c880:	sdiv	r6, r6, r7
   1c884:	cmp	r6, r0
   1c888:	bge	1c8a0 <__assert_fail@plt+0xb598>
   1c88c:	b	1c8b0 <__assert_fail@plt+0xb5a8>
   1c890:	mvn	r4, #-2147483648	; 0x80000000
   1c894:	sdiv	r6, r4, r0
   1c898:	cmp	r7, r6
   1c89c:	blt	1c8b0 <__assert_fail@plt+0xb5a8>
   1c8a0:	mul	r6, r7, r0
   1c8a4:	mov	r4, #64	; 0x40
   1c8a8:	cmp	r6, #63	; 0x3f
   1c8ac:	bgt	1c8b8 <__assert_fail@plt+0xb5b0>
   1c8b0:	sdiv	r7, r4, r0
   1c8b4:	mul	r6, r7, r0
   1c8b8:	cmp	r5, #0
   1c8bc:	moveq	r4, #0
   1c8c0:	streq	r4, [r8]
   1c8c4:	sub	r4, r7, r1
   1c8c8:	cmp	r4, r2
   1c8cc:	bge	1c978 <__assert_fail@plt+0xb670>
   1c8d0:	add	r7, r1, r2
   1c8d4:	mov	r6, #0
   1c8d8:	mov	r2, #0
   1c8dc:	cmp	r7, r3
   1c8e0:	movwgt	r6, #1
   1c8e4:	cmn	r3, #1
   1c8e8:	movwgt	r2, #1
   1c8ec:	cmp	r7, r1
   1c8f0:	bvs	1c9ac <__assert_fail@plt+0xb6a4>
   1c8f4:	ands	r1, r2, r6
   1c8f8:	bne	1c9ac <__assert_fail@plt+0xb6a4>
   1c8fc:	cmn	r0, #1
   1c900:	ble	1c928 <__assert_fail@plt+0xb620>
   1c904:	cmp	r0, #0
   1c908:	beq	1c974 <__assert_fail@plt+0xb66c>
   1c90c:	cmn	r7, #1
   1c910:	ble	1c94c <__assert_fail@plt+0xb644>
   1c914:	mvn	r1, #-2147483648	; 0x80000000
   1c918:	udiv	r1, r1, r0
   1c91c:	cmp	r1, r7
   1c920:	bge	1c974 <__assert_fail@plt+0xb66c>
   1c924:	b	1c9ac <__assert_fail@plt+0xb6a4>
   1c928:	cmn	r7, #1
   1c92c:	ble	1c964 <__assert_fail@plt+0xb65c>
   1c930:	cmn	r0, #1
   1c934:	beq	1c974 <__assert_fail@plt+0xb66c>
   1c938:	mov	r1, #-2147483648	; 0x80000000
   1c93c:	sdiv	r1, r1, r0
   1c940:	cmp	r1, r7
   1c944:	bge	1c974 <__assert_fail@plt+0xb66c>
   1c948:	b	1c9ac <__assert_fail@plt+0xb6a4>
   1c94c:	beq	1c974 <__assert_fail@plt+0xb66c>
   1c950:	mov	r1, #-2147483648	; 0x80000000
   1c954:	sdiv	r1, r1, r7
   1c958:	cmp	r1, r0
   1c95c:	bge	1c974 <__assert_fail@plt+0xb66c>
   1c960:	b	1c9ac <__assert_fail@plt+0xb6a4>
   1c964:	mvn	r1, #-2147483648	; 0x80000000
   1c968:	sdiv	r1, r1, r0
   1c96c:	cmp	r7, r1
   1c970:	blt	1c9ac <__assert_fail@plt+0xb6a4>
   1c974:	mul	r6, r7, r0
   1c978:	mov	r0, r5
   1c97c:	mov	r1, r6
   1c980:	bl	1d990 <__assert_fail@plt+0xc688>
   1c984:	cmp	r6, #0
   1c988:	movwne	r6, #1
   1c98c:	cmp	r0, #0
   1c990:	bne	1c9a4 <__assert_fail@plt+0xb69c>
   1c994:	clz	r1, r5
   1c998:	lsr	r1, r1, #5
   1c99c:	orrs	r1, r1, r6
   1c9a0:	bne	1c9ac <__assert_fail@plt+0xb6a4>
   1c9a4:	str	r7, [r8]
   1c9a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c9ac:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c9b0:	push	{fp, lr}
   1c9b4:	mov	fp, sp
   1c9b8:	mov	r1, #1
   1c9bc:	bl	1d90c <__assert_fail@plt+0xc604>
   1c9c0:	cmp	r0, #0
   1c9c4:	popne	{fp, pc}
   1c9c8:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c9cc:	push	{fp, lr}
   1c9d0:	mov	fp, sp
   1c9d4:	bl	1d90c <__assert_fail@plt+0xc604>
   1c9d8:	cmp	r0, #0
   1c9dc:	popne	{fp, pc}
   1c9e0:	bl	1cb18 <__assert_fail@plt+0xb810>
   1c9e4:	push	{fp, lr}
   1c9e8:	mov	fp, sp
   1c9ec:	mov	r1, #1
   1c9f0:	bl	1d90c <__assert_fail@plt+0xc604>
   1c9f4:	cmp	r0, #0
   1c9f8:	popne	{fp, pc}
   1c9fc:	bl	1cb18 <__assert_fail@plt+0xb810>
   1ca00:	push	{fp, lr}
   1ca04:	mov	fp, sp
   1ca08:	bl	1d90c <__assert_fail@plt+0xc604>
   1ca0c:	cmp	r0, #0
   1ca10:	popne	{fp, pc}
   1ca14:	bl	1cb18 <__assert_fail@plt+0xb810>
   1ca18:	push	{r4, r5, r6, sl, fp, lr}
   1ca1c:	add	fp, sp, #16
   1ca20:	mov	r5, r0
   1ca24:	mov	r0, r1
   1ca28:	mov	r4, r1
   1ca2c:	bl	1d960 <__assert_fail@plt+0xc658>
   1ca30:	cmp	r0, #0
   1ca34:	beq	1ca50 <__assert_fail@plt+0xb748>
   1ca38:	mov	r1, r5
   1ca3c:	mov	r2, r4
   1ca40:	mov	r6, r0
   1ca44:	bl	110d4 <memcpy@plt>
   1ca48:	mov	r0, r6
   1ca4c:	pop	{r4, r5, r6, sl, fp, pc}
   1ca50:	bl	1cb18 <__assert_fail@plt+0xb810>
   1ca54:	push	{r4, r5, r6, sl, fp, lr}
   1ca58:	add	fp, sp, #16
   1ca5c:	mov	r5, r0
   1ca60:	mov	r0, r1
   1ca64:	mov	r4, r1
   1ca68:	bl	1d960 <__assert_fail@plt+0xc658>
   1ca6c:	cmp	r0, #0
   1ca70:	beq	1ca8c <__assert_fail@plt+0xb784>
   1ca74:	mov	r1, r5
   1ca78:	mov	r2, r4
   1ca7c:	mov	r6, r0
   1ca80:	bl	110d4 <memcpy@plt>
   1ca84:	mov	r0, r6
   1ca88:	pop	{r4, r5, r6, sl, fp, pc}
   1ca8c:	bl	1cb18 <__assert_fail@plt+0xb810>
   1ca90:	push	{r4, r5, r6, sl, fp, lr}
   1ca94:	add	fp, sp, #16
   1ca98:	mov	r5, r0
   1ca9c:	add	r0, r1, #1
   1caa0:	mov	r4, r1
   1caa4:	bl	1d960 <__assert_fail@plt+0xc658>
   1caa8:	cmp	r0, #0
   1caac:	beq	1cad4 <__assert_fail@plt+0xb7cc>
   1cab0:	mov	r6, r0
   1cab4:	mov	r0, #0
   1cab8:	mov	r1, r5
   1cabc:	mov	r2, r4
   1cac0:	strb	r0, [r6, r4]
   1cac4:	mov	r0, r6
   1cac8:	bl	110d4 <memcpy@plt>
   1cacc:	mov	r0, r6
   1cad0:	pop	{r4, r5, r6, sl, fp, pc}
   1cad4:	bl	1cb18 <__assert_fail@plt+0xb810>
   1cad8:	push	{r4, r5, r6, sl, fp, lr}
   1cadc:	add	fp, sp, #16
   1cae0:	mov	r4, r0
   1cae4:	bl	111f4 <strlen@plt>
   1cae8:	add	r5, r0, #1
   1caec:	mov	r0, r5
   1caf0:	bl	1d960 <__assert_fail@plt+0xc658>
   1caf4:	cmp	r0, #0
   1caf8:	beq	1cb14 <__assert_fail@plt+0xb80c>
   1cafc:	mov	r1, r4
   1cb00:	mov	r2, r5
   1cb04:	mov	r6, r0
   1cb08:	bl	110d4 <memcpy@plt>
   1cb0c:	mov	r0, r6
   1cb10:	pop	{r4, r5, r6, sl, fp, pc}
   1cb14:	bl	1cb18 <__assert_fail@plt+0xb810>
   1cb18:	push	{fp, lr}
   1cb1c:	mov	fp, sp
   1cb20:	movw	r0, #272	; 0x110
   1cb24:	movw	r1, #62120	; 0xf2a8
   1cb28:	mov	r2, #5
   1cb2c:	movt	r0, #3
   1cb30:	movt	r1, #1
   1cb34:	ldr	r4, [r0]
   1cb38:	mov	r0, #0
   1cb3c:	bl	11104 <dcgettext@plt>
   1cb40:	movw	r2, #58990	; 0xe66e
   1cb44:	mov	r3, r0
   1cb48:	mov	r0, r4
   1cb4c:	mov	r1, #0
   1cb50:	movt	r2, #1
   1cb54:	bl	1117c <error@plt>
   1cb58:	bl	112e4 <abort@plt>
   1cb5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cb60:	add	fp, sp, #24
   1cb64:	sub	sp, sp, #16
   1cb68:	mov	r8, r0
   1cb6c:	ldr	r0, [fp, #16]
   1cb70:	mov	r5, r3
   1cb74:	mov	r6, r2
   1cb78:	mov	r2, r1
   1cb7c:	add	r3, sp, #8
   1cb80:	mov	r1, #0
   1cb84:	str	r0, [sp]
   1cb88:	mov	r0, r8
   1cb8c:	bl	1cc58 <__assert_fail@plt+0xb950>
   1cb90:	cmp	r0, #0
   1cb94:	bne	1cc20 <__assert_fail@plt+0xb918>
   1cb98:	ldr	r4, [sp, #8]
   1cb9c:	ldr	r7, [sp, #12]
   1cba0:	subs	r0, r4, r6
   1cba4:	sbcs	r0, r7, r5
   1cba8:	bcc	1cbcc <__assert_fail@plt+0xb8c4>
   1cbac:	ldr	r1, [fp, #8]
   1cbb0:	ldr	r0, [fp, #12]
   1cbb4:	subs	r1, r1, r4
   1cbb8:	sbcs	r0, r0, r7
   1cbbc:	movcs	r0, r4
   1cbc0:	movcs	r1, r7
   1cbc4:	subcs	sp, fp, #24
   1cbc8:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cbcc:	bl	1120c <__errno_location@plt>
   1cbd0:	subs	r1, r4, #1073741824	; 0x40000000
   1cbd4:	sbcs	r1, r7, #0
   1cbd8:	movcc	r1, #34	; 0x22
   1cbdc:	movcs	r1, #75	; 0x4b
   1cbe0:	str	r1, [r0]
   1cbe4:	ldr	r6, [r0]
   1cbe8:	ldr	r4, [fp, #24]
   1cbec:	ldr	r5, [fp, #20]
   1cbf0:	mov	r0, r8
   1cbf4:	bl	1bed4 <__assert_fail@plt+0xabcc>
   1cbf8:	subs	r1, r6, #22
   1cbfc:	movw	r2, #61079	; 0xee97
   1cc00:	str	r0, [sp]
   1cc04:	mov	r3, r5
   1cc08:	movne	r1, r6
   1cc0c:	cmp	r4, #0
   1cc10:	movt	r2, #1
   1cc14:	movweq	r4, #1
   1cc18:	mov	r0, r4
   1cc1c:	bl	1117c <error@plt>
   1cc20:	cmp	r0, #1
   1cc24:	beq	1cc3c <__assert_fail@plt+0xb934>
   1cc28:	cmp	r0, #3
   1cc2c:	bne	1cc48 <__assert_fail@plt+0xb940>
   1cc30:	bl	1120c <__errno_location@plt>
   1cc34:	mov	r1, #0
   1cc38:	b	1cbe0 <__assert_fail@plt+0xb8d8>
   1cc3c:	bl	1120c <__errno_location@plt>
   1cc40:	mov	r1, #75	; 0x4b
   1cc44:	b	1cbe0 <__assert_fail@plt+0xb8d8>
   1cc48:	bl	1120c <__errno_location@plt>
   1cc4c:	b	1cbe4 <__assert_fail@plt+0xb8dc>
   1cc50:	mov	r1, #10
   1cc54:	b	1cb5c <__assert_fail@plt+0xb854>
   1cc58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc5c:	add	fp, sp, #28
   1cc60:	sub	sp, sp, #44	; 0x2c
   1cc64:	cmp	r2, #37	; 0x25
   1cc68:	bcs	1d8ec <__assert_fail@plt+0xc5e4>
   1cc6c:	ldr	sl, [fp, #8]
   1cc70:	mov	r6, r2
   1cc74:	mov	r7, r1
   1cc78:	mov	r4, r0
   1cc7c:	str	r3, [sp, #36]	; 0x24
   1cc80:	bl	1120c <__errno_location@plt>
   1cc84:	mov	r5, r0
   1cc88:	mov	r0, #0
   1cc8c:	str	r0, [r5]
   1cc90:	bl	111d0 <__ctype_b_loc@plt>
   1cc94:	ldr	r1, [r0]
   1cc98:	mov	r2, r4
   1cc9c:	ldrb	r0, [r2], #1
   1cca0:	add	r3, r1, r0, lsl #1
   1cca4:	ldrb	r3, [r3, #1]
   1cca8:	tst	r3, #32
   1ccac:	bne	1cc9c <__assert_fail@plt+0xb994>
   1ccb0:	sub	r9, fp, #32
   1ccb4:	cmp	r7, #0
   1ccb8:	mov	r8, #4
   1ccbc:	movne	r9, r7
   1ccc0:	cmp	r0, #45	; 0x2d
   1ccc4:	beq	1d084 <__assert_fail@plt+0xbd7c>
   1ccc8:	mov	r0, r4
   1cccc:	mov	r1, r9
   1ccd0:	mov	r2, r6
   1ccd4:	mov	r3, #0
   1ccd8:	bl	110e0 <__strtoull_internal@plt>
   1ccdc:	mov	r7, r1
   1cce0:	ldr	r1, [r9]
   1cce4:	cmp	r1, r4
   1cce8:	beq	1cd20 <__assert_fail@plt+0xba18>
   1ccec:	mov	r6, r0
   1ccf0:	ldr	r0, [r5]
   1ccf4:	cmp	r0, #0
   1ccf8:	beq	1d03c <__assert_fail@plt+0xbd34>
   1ccfc:	cmp	r0, #34	; 0x22
   1cd00:	bne	1d084 <__assert_fail@plt+0xbd7c>
   1cd04:	mov	r8, #1
   1cd08:	cmp	sl, #0
   1cd0c:	beq	1d8d8 <__assert_fail@plt+0xc5d0>
   1cd10:	ldrb	r4, [r1]
   1cd14:	cmp	r4, #0
   1cd18:	bne	1cd64 <__assert_fail@plt+0xba5c>
   1cd1c:	b	1d8d8 <__assert_fail@plt+0xc5d0>
   1cd20:	cmp	sl, #0
   1cd24:	beq	1d084 <__assert_fail@plt+0xbd7c>
   1cd28:	mov	r5, r1
   1cd2c:	ldrb	r1, [r4]
   1cd30:	cmp	r1, #0
   1cd34:	beq	1d084 <__assert_fail@plt+0xbd7c>
   1cd38:	mov	r0, sl
   1cd3c:	bl	11200 <strchr@plt>
   1cd40:	cmp	r0, #0
   1cd44:	beq	1d084 <__assert_fail@plt+0xbd7c>
   1cd48:	mov	r1, r5
   1cd4c:	mov	r8, #0
   1cd50:	mov	r6, #1
   1cd54:	mov	r7, #0
   1cd58:	ldrb	r4, [r1]
   1cd5c:	cmp	r4, #0
   1cd60:	beq	1d8d8 <__assert_fail@plt+0xc5d0>
   1cd64:	str	r1, [sp, #32]
   1cd68:	mov	r0, sl
   1cd6c:	mov	r1, r4
   1cd70:	bl	11200 <strchr@plt>
   1cd74:	cmp	r0, #0
   1cd78:	beq	1d078 <__assert_fail@plt+0xbd70>
   1cd7c:	sub	r0, r4, #69	; 0x45
   1cd80:	mov	r1, #1
   1cd84:	mov	r3, #0
   1cd88:	mov	r5, #1024	; 0x400
   1cd8c:	cmp	r0, #47	; 0x2f
   1cd90:	str	r1, [sp, #28]
   1cd94:	bhi	1ce98 <__assert_fail@plt+0xbb90>
   1cd98:	add	r1, pc, #0
   1cd9c:	ldr	pc, [r1, r0, lsl #2]
   1cda0:	andeq	ip, r1, r0, ror #28
   1cda4:	muleq	r1, r8, lr
   1cda8:	andeq	ip, r1, r0, ror #28
   1cdac:	muleq	r1, r8, lr
   1cdb0:	muleq	r1, r8, lr
   1cdb4:	muleq	r1, r8, lr
   1cdb8:	andeq	ip, r1, r0, ror #28
   1cdbc:	muleq	r1, r8, lr
   1cdc0:	andeq	ip, r1, r0, ror #28
   1cdc4:	muleq	r1, r8, lr
   1cdc8:	muleq	r1, r8, lr
   1cdcc:	andeq	ip, r1, r0, ror #28
   1cdd0:	muleq	r1, r8, lr
   1cdd4:	muleq	r1, r8, lr
   1cdd8:	muleq	r1, r8, lr
   1cddc:	andeq	ip, r1, r0, ror #28
   1cde0:	muleq	r1, r8, lr
   1cde4:	muleq	r1, r8, lr
   1cde8:	muleq	r1, r8, lr
   1cdec:	muleq	r1, r8, lr
   1cdf0:	andeq	ip, r1, r0, ror #28
   1cdf4:	andeq	ip, r1, r0, ror #28
   1cdf8:	muleq	r1, r8, lr
   1cdfc:	muleq	r1, r8, lr
   1ce00:	muleq	r1, r8, lr
   1ce04:	muleq	r1, r8, lr
   1ce08:	muleq	r1, r8, lr
   1ce0c:	muleq	r1, r8, lr
   1ce10:	muleq	r1, r8, lr
   1ce14:	muleq	r1, r8, lr
   1ce18:	muleq	r1, r8, lr
   1ce1c:	muleq	r1, r8, lr
   1ce20:	muleq	r1, r8, lr
   1ce24:	muleq	r1, r8, lr
   1ce28:	andeq	ip, r1, r0, ror #28
   1ce2c:	muleq	r1, r8, lr
   1ce30:	muleq	r1, r8, lr
   1ce34:	muleq	r1, r8, lr
   1ce38:	andeq	ip, r1, r0, ror #28
   1ce3c:	muleq	r1, r8, lr
   1ce40:	andeq	ip, r1, r0, ror #28
   1ce44:	muleq	r1, r8, lr
   1ce48:	muleq	r1, r8, lr
   1ce4c:	muleq	r1, r8, lr
   1ce50:	muleq	r1, r8, lr
   1ce54:	muleq	r1, r8, lr
   1ce58:	muleq	r1, r8, lr
   1ce5c:	andeq	ip, r1, r0, ror #28
   1ce60:	mov	r0, sl
   1ce64:	mov	r1, #48	; 0x30
   1ce68:	bl	11200 <strchr@plt>
   1ce6c:	cmp	r0, #0
   1ce70:	beq	1ce94 <__assert_fail@plt+0xbb8c>
   1ce74:	ldr	r1, [sp, #32]
   1ce78:	ldrb	r0, [r1, #1]
   1ce7c:	cmp	r0, #66	; 0x42
   1ce80:	cmpne	r0, #68	; 0x44
   1ce84:	bne	1d04c <__assert_fail@plt+0xbd44>
   1ce88:	mov	r5, #1000	; 0x3e8
   1ce8c:	mov	r0, #2
   1ce90:	str	r0, [sp, #28]
   1ce94:	mov	r3, #0
   1ce98:	sub	r0, r4, #66	; 0x42
   1ce9c:	cmp	r0, #53	; 0x35
   1cea0:	bhi	1d078 <__assert_fail@plt+0xbd70>
   1cea4:	add	r1, pc, #0
   1cea8:	ldr	pc, [r1, r0, lsl #2]
   1ceac:	andeq	sp, r1, r8, ror #7
   1ceb0:	andeq	sp, r1, r8, ror r0
   1ceb4:	andeq	sp, r1, r8, ror r0
   1ceb8:	andeq	sp, r1, r0, lsl r4
   1cebc:	andeq	sp, r1, r8, ror r0
   1cec0:	andeq	ip, r1, r4, lsl #31
   1cec4:	andeq	sp, r1, r8, ror r0
   1cec8:	andeq	sp, r1, r8, ror r0
   1cecc:	andeq	sp, r1, r8, ror r0
   1ced0:	muleq	r1, r0, r0
   1ced4:	andeq	sp, r1, r8, ror r0
   1ced8:	ldrdeq	sp, [r1], -r8
   1cedc:	andeq	sp, r1, r8, ror r0
   1cee0:	andeq	sp, r1, r8, ror r0
   1cee4:	andeq	sp, r1, r4, ror #10
   1cee8:	andeq	sp, r1, r8, ror r0
   1ceec:	andeq	sp, r1, r8, ror r0
   1cef0:	andeq	sp, r1, r8, ror r0
   1cef4:	andeq	sp, r1, r4, ror #2
   1cef8:	andeq	sp, r1, r8, ror r0
   1cefc:	andeq	sp, r1, r8, ror r0
   1cf00:	andeq	sp, r1, r8, ror r0
   1cf04:	andeq	sp, r1, r8, ror r0
   1cf08:	andeq	sp, r1, ip, lsl #13
   1cf0c:	andeq	sp, r1, ip, asr #4
   1cf10:	andeq	sp, r1, r8, ror r0
   1cf14:	andeq	sp, r1, r8, ror r0
   1cf18:	andeq	sp, r1, r8, ror r0
   1cf1c:	andeq	sp, r1, r8, ror r0
   1cf20:	andeq	sp, r1, r8, ror r0
   1cf24:	andeq	sp, r1, r8, ror r0
   1cf28:	andeq	sp, r1, r8, ror r0
   1cf2c:	andeq	sp, r1, r0, ror #16
   1cf30:			; <UNDEFINED> instruction: 0x0001d8b8
   1cf34:	andeq	sp, r1, r8, ror r0
   1cf38:	andeq	sp, r1, r8, ror r0
   1cf3c:	andeq	sp, r1, r8, ror r0
   1cf40:	andeq	ip, r1, r4, lsl #31
   1cf44:	andeq	sp, r1, r8, ror r0
   1cf48:	andeq	sp, r1, r8, ror r0
   1cf4c:	andeq	sp, r1, r8, ror r0
   1cf50:	muleq	r1, r0, r0
   1cf54:	andeq	sp, r1, r8, ror r0
   1cf58:	ldrdeq	sp, [r1], -r8
   1cf5c:	andeq	sp, r1, r8, ror r0
   1cf60:	andeq	sp, r1, r8, ror r0
   1cf64:	andeq	sp, r1, r8, ror r0
   1cf68:	andeq	sp, r1, r8, ror r0
   1cf6c:	andeq	sp, r1, r8, ror r0
   1cf70:	andeq	sp, r1, r8, ror r0
   1cf74:	andeq	sp, r1, r4, ror #2
   1cf78:	andeq	sp, r1, r8, ror r0
   1cf7c:	andeq	sp, r1, r8, ror r0
   1cf80:	muleq	r1, r4, r8
   1cf84:	mvn	r0, #0
   1cf88:	mvn	r1, #0
   1cf8c:	mov	r2, r5
   1cf90:	mov	sl, r3
   1cf94:	bl	1de24 <__assert_fail@plt+0xcb1c>
   1cf98:	subs	r3, r0, r6
   1cf9c:	mov	lr, #0
   1cfa0:	umull	r4, r2, r6, r5
   1cfa4:	str	r1, [sp, #20]
   1cfa8:	sbcs	r3, r1, r7
   1cfac:	mla	ip, r6, sl, r2
   1cfb0:	mov	r2, r1
   1cfb4:	movwcc	lr, #1
   1cfb8:	mla	r7, r7, r5, ip
   1cfbc:	mov	r2, #0
   1cfc0:	cmp	lr, #0
   1cfc4:	mvnne	r4, #0
   1cfc8:	mvnne	r7, #0
   1cfcc:	subs	r6, r0, r4
   1cfd0:	sbcs	r6, r1, r7
   1cfd4:	movwcc	r2, #1
   1cfd8:	umull	r3, r6, r4, r5
   1cfdc:	cmp	r2, #0
   1cfe0:	str	r6, [sp, #16]
   1cfe4:	mvnne	r3, #0
   1cfe8:	cmp	r2, #0
   1cfec:	umull	r6, ip, r3, r5
   1cff0:	mla	r1, r3, sl, ip
   1cff4:	ldr	ip, [sp, #16]
   1cff8:	str	r1, [sp, #12]
   1cffc:	mla	r4, r4, sl, ip
   1d000:	mla	r4, r7, r5, r4
   1d004:	ldr	r7, [sp, #12]
   1d008:	mvnne	r4, #0
   1d00c:	subs	r0, r0, r3
   1d010:	ldr	r0, [sp, #20]
   1d014:	mla	r7, r4, r5, r7
   1d018:	sbcs	r0, r0, r4
   1d01c:	mov	r0, #0
   1d020:	movwcc	r0, #1
   1d024:	cmp	r0, #0
   1d028:	mov	r1, r0
   1d02c:	orr	r0, lr, r2
   1d030:	mvnne	r7, #0
   1d034:	mvnne	r6, #0
   1d038:	b	1d684 <__assert_fail@plt+0xc37c>
   1d03c:	mov	r8, r0
   1d040:	cmp	sl, #0
   1d044:	bne	1cd10 <__assert_fail@plt+0xba08>
   1d048:	b	1d8d8 <__assert_fail@plt+0xc5d0>
   1d04c:	cmp	r0, #105	; 0x69
   1d050:	mov	r3, #0
   1d054:	bne	1ce98 <__assert_fail@plt+0xbb90>
   1d058:	ldrb	r0, [r1, #2]
   1d05c:	mov	r1, #1
   1d060:	cmp	r0, #66	; 0x42
   1d064:	movweq	r1, #3
   1d068:	str	r1, [sp, #28]
   1d06c:	sub	r0, r4, #66	; 0x42
   1d070:	cmp	r0, #53	; 0x35
   1d074:	bls	1cea4 <__assert_fail@plt+0xbb9c>
   1d078:	ldr	r0, [sp, #36]	; 0x24
   1d07c:	orr	r8, r8, #2
   1d080:	strd	r6, [r0]
   1d084:	mov	r0, r8
   1d088:	sub	sp, fp, #28
   1d08c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d090:	mvn	r0, #0
   1d094:	mvn	r1, #0
   1d098:	mov	r2, r5
   1d09c:	mov	r4, r3
   1d0a0:	bl	1de24 <__assert_fail@plt+0xcb1c>
   1d0a4:	subs	r0, r0, r6
   1d0a8:	mov	r2, #0
   1d0ac:	sbcs	r0, r1, r7
   1d0b0:	movwcc	r2, #1
   1d0b4:	umull	r0, r1, r6, r5
   1d0b8:	mla	r1, r6, r4, r1
   1d0bc:	cmp	r2, #0
   1d0c0:	mov	r3, r2
   1d0c4:	mla	r7, r7, r5, r1
   1d0c8:	mvnne	r0, #0
   1d0cc:	mvnne	r7, #0
   1d0d0:	mov	r6, r0
   1d0d4:	b	1d8b8 <__assert_fail@plt+0xc5b0>
   1d0d8:	mvn	r0, #0
   1d0dc:	mvn	r1, #0
   1d0e0:	mov	r2, r5
   1d0e4:	str	r3, [sp, #24]
   1d0e8:	bl	1de24 <__assert_fail@plt+0xcb1c>
   1d0ec:	subs	r3, r0, r6
   1d0f0:	mov	ip, r0
   1d0f4:	umull	r4, r0, r6, r5
   1d0f8:	mov	sl, #0
   1d0fc:	sbcs	r3, r1, r7
   1d100:	str	r0, [sp, #20]
   1d104:	ldr	r0, [sp, #24]
   1d108:	mov	r3, #0
   1d10c:	movwcc	r3, #1
   1d110:	cmp	r3, #0
   1d114:	mvnne	r4, #0
   1d118:	cmp	r3, #0
   1d11c:	umull	lr, r2, r4, r5
   1d120:	mla	r2, r4, r0, r2
   1d124:	str	r2, [sp, #16]
   1d128:	ldr	r2, [sp, #20]
   1d12c:	mla	r6, r6, r0, r2
   1d130:	ldr	r0, [sp, #16]
   1d134:	mla	r6, r7, r5, r6
   1d138:	mvnne	r6, #0
   1d13c:	mla	r7, r6, r5, r0
   1d140:	subs	r0, ip, r4
   1d144:	sbcs	r0, r1, r6
   1d148:	movwcc	sl, #1
   1d14c:	cmp	sl, #0
   1d150:	orr	r3, r3, sl
   1d154:	mvnne	lr, #0
   1d158:	mvnne	r7, #0
   1d15c:	mov	r6, lr
   1d160:	b	1d8b8 <__assert_fail@plt+0xc5b0>
   1d164:	mvn	r0, #0
   1d168:	mvn	r1, #0
   1d16c:	mov	r2, r5
   1d170:	mov	sl, r3
   1d174:	bl	1de24 <__assert_fail@plt+0xcb1c>
   1d178:	subs	r3, r0, r6
   1d17c:	mov	ip, r1
   1d180:	umull	r2, lr, r6, r5
   1d184:	str	r0, [sp, #20]
   1d188:	sbcs	r3, r1, r7
   1d18c:	mov	r1, #0
   1d190:	mla	r6, r6, sl, lr
   1d194:	mov	lr, #0
   1d198:	str	ip, [sp, #16]
   1d19c:	movwcc	r1, #1
   1d1a0:	mla	r7, r7, r5, r6
   1d1a4:	cmp	r1, #0
   1d1a8:	mvnne	r2, #0
   1d1ac:	cmp	r1, #0
   1d1b0:	umull	r3, r4, r2, r5
   1d1b4:	mvnne	r7, #0
   1d1b8:	mla	r4, r2, sl, r4
   1d1bc:	subs	r2, r0, r2
   1d1c0:	sbcs	r2, ip, r7
   1d1c4:	mla	r4, r7, r5, r4
   1d1c8:	movwcc	lr, #1
   1d1cc:	mov	r2, #0
   1d1d0:	cmp	lr, #0
   1d1d4:	mvnne	r3, #0
   1d1d8:	mvnne	r4, #0
   1d1dc:	subs	r7, r0, r3
   1d1e0:	mov	r0, r5
   1d1e4:	sbcs	r7, ip, r4
   1d1e8:	movwcc	r2, #1
   1d1ec:	umull	r5, r7, r3, r5
   1d1f0:	cmp	r2, #0
   1d1f4:	mla	r3, r3, sl, r7
   1d1f8:	mvnne	r5, #0
   1d1fc:	mla	r3, r4, r0, r3
   1d200:	cmp	r2, #0
   1d204:	umull	r6, ip, r5, r0
   1d208:	mvnne	r3, #0
   1d20c:	mla	ip, r5, sl, ip
   1d210:	mla	r7, r3, r0, ip
   1d214:	ldr	r0, [sp, #20]
   1d218:	subs	r0, r0, r5
   1d21c:	ldr	r0, [sp, #16]
   1d220:	sbcs	r0, r0, r3
   1d224:	mov	r0, #0
   1d228:	movwcc	r0, #1
   1d22c:	cmp	r0, #0
   1d230:	mov	r3, r0
   1d234:	orr	r0, r1, lr
   1d238:	orr	r0, r0, r2
   1d23c:	mvnne	r7, #0
   1d240:	mvnne	r6, #0
   1d244:	orr	r3, r0, r3
   1d248:	b	1d8b8 <__assert_fail@plt+0xc5b0>
   1d24c:	mvn	r0, #0
   1d250:	mvn	r1, #0
   1d254:	mov	r2, r5
   1d258:	mov	r4, r3
   1d25c:	str	r3, [sp, #24]
   1d260:	bl	1de24 <__assert_fail@plt+0xcb1c>
   1d264:	umull	r3, r2, r6, r5
   1d268:	mla	r2, r6, r4, r2
   1d26c:	subs	r6, r0, r6
   1d270:	sbcs	r6, r1, r7
   1d274:	mla	r2, r7, r5, r2
   1d278:	mov	r7, #0
   1d27c:	mov	r6, #0
   1d280:	movwcc	r6, #1
   1d284:	cmp	r6, #0
   1d288:	str	r6, [sp, #20]
   1d28c:	mvnne	r3, #0
   1d290:	mvnne	r2, #0
   1d294:	subs	r4, r0, r3
   1d298:	umull	r6, ip, r3, r5
   1d29c:	sbcs	r4, r1, r2
   1d2a0:	ldr	r4, [sp, #24]
   1d2a4:	movwcc	r7, #1
   1d2a8:	cmp	r7, #0
   1d2ac:	mov	lr, r7
   1d2b0:	str	r7, [sp, #16]
   1d2b4:	mvnne	r6, #0
   1d2b8:	cmp	lr, #0
   1d2bc:	mov	lr, #0
   1d2c0:	umull	sl, r7, r6, r5
   1d2c4:	mla	r3, r3, r4, ip
   1d2c8:	mla	r7, r6, r4, r7
   1d2cc:	mov	r4, r0
   1d2d0:	mla	r2, r2, r5, r3
   1d2d4:	mvnne	r2, #0
   1d2d8:	subs	r3, r0, r6
   1d2dc:	mov	r0, #0
   1d2e0:	mla	r7, r2, r5, r7
   1d2e4:	sbcs	r2, r1, r2
   1d2e8:	mov	r3, r4
   1d2ec:	movwcc	r0, #1
   1d2f0:	str	r3, [sp, #4]
   1d2f4:	cmp	r0, #0
   1d2f8:	str	r0, [sp, #12]
   1d2fc:	mov	r0, r1
   1d300:	mvnne	sl, #0
   1d304:	mvnne	r7, #0
   1d308:	str	r0, [sp, #8]
   1d30c:	subs	r2, r4, sl
   1d310:	ldr	r4, [sp, #24]
   1d314:	sbcs	r2, r1, r7
   1d318:	movwcc	lr, #1
   1d31c:	umull	r6, r2, sl, r5
   1d320:	cmp	lr, #0
   1d324:	mvnne	r6, #0
   1d328:	mla	r2, sl, r4, r2
   1d32c:	cmp	lr, #0
   1d330:	umull	r1, ip, r6, r5
   1d334:	mla	r2, r7, r5, r2
   1d338:	mla	ip, r6, r4, ip
   1d33c:	mvnne	r2, #0
   1d340:	subs	r6, r3, r6
   1d344:	mla	r7, r2, r5, ip
   1d348:	sbcs	r2, r0, r2
   1d34c:	mov	ip, #0
   1d350:	movwcc	ip, #1
   1d354:	mov	r2, #0
   1d358:	cmp	ip, #0
   1d35c:	mvnne	r1, #0
   1d360:	mvnne	r7, #0
   1d364:	subs	r6, r3, r1
   1d368:	ldr	r3, [sp, #24]
   1d36c:	sbcs	r6, r0, r7
   1d370:	umull	r0, sl, r1, r5
   1d374:	movwcc	r2, #1
   1d378:	cmp	r2, #0
   1d37c:	mvnne	r0, #0
   1d380:	mla	r1, r1, r3, sl
   1d384:	cmp	r2, #0
   1d388:	umull	r6, r4, r0, r5
   1d38c:	mla	r1, r7, r5, r1
   1d390:	mla	r4, r0, r3, r4
   1d394:	ldr	r3, [sp, #4]
   1d398:	mvnne	r1, #0
   1d39c:	mla	r7, r1, r5, r4
   1d3a0:	ldr	r5, [sp, #16]
   1d3a4:	subs	r0, r3, r0
   1d3a8:	ldr	r0, [sp, #8]
   1d3ac:	sbcs	r0, r0, r1
   1d3b0:	mov	r0, #0
   1d3b4:	movwcc	r0, #1
   1d3b8:	cmp	r0, #0
   1d3bc:	mov	r1, r0
   1d3c0:	ldr	r0, [sp, #20]
   1d3c4:	mvnne	r7, #0
   1d3c8:	mvnne	r6, #0
   1d3cc:	orr	r0, r0, r5
   1d3d0:	ldr	r5, [sp, #12]
   1d3d4:	orr	r0, r0, r5
   1d3d8:	orr	r0, r0, lr
   1d3dc:	orr	r0, r0, ip
   1d3e0:	orr	r0, r0, r2
   1d3e4:	b	1d854 <__assert_fail@plt+0xc54c>
   1d3e8:	mov	r1, #0
   1d3ec:	lsl	r2, r7, #10
   1d3f0:	lsl	r0, r6, #10
   1d3f4:	lsr	r3, r7, #22
   1d3f8:	cmp	r1, r7, lsr #22
   1d3fc:	orr	r2, r2, r6, lsr #22
   1d400:	mvnne	r0, #0
   1d404:	movwne	r3, #1
   1d408:	cmp	r1, r7, lsr #22
   1d40c:	b	1d884 <__assert_fail@plt+0xc57c>
   1d410:	mvn	r0, #0
   1d414:	mvn	r1, #0
   1d418:	mov	r2, r5
   1d41c:	mov	sl, r3
   1d420:	bl	1de24 <__assert_fail@plt+0xcb1c>
   1d424:	subs	r2, r0, r6
   1d428:	mov	ip, r0
   1d42c:	mov	r0, #0
   1d430:	sbcs	r2, r1, r7
   1d434:	movwcc	r0, #1
   1d438:	umull	r4, r2, r6, r5
   1d43c:	cmp	r0, #0
   1d440:	mla	r2, r6, sl, r2
   1d444:	str	r0, [sp, #20]
   1d448:	mvnne	r4, #0
   1d44c:	cmp	r0, #0
   1d450:	mla	r2, r7, r5, r2
   1d454:	mov	r0, #0
   1d458:	umull	lr, r3, r4, r5
   1d45c:	mvnne	r2, #0
   1d460:	mla	r3, r4, sl, r3
   1d464:	mla	r6, r2, r5, r3
   1d468:	subs	r3, ip, r4
   1d46c:	sbcs	r2, r1, r2
   1d470:	mov	r3, r1
   1d474:	movwcc	r0, #1
   1d478:	str	r3, [sp, #8]
   1d47c:	cmp	r0, #0
   1d480:	str	r0, [sp, #16]
   1d484:	mov	r0, ip
   1d488:	mvnne	lr, #0
   1d48c:	mvnne	r6, #0
   1d490:	str	r0, [sp, #12]
   1d494:	subs	r2, ip, lr
   1d498:	umull	r7, r4, lr, r5
   1d49c:	sbcs	r2, r1, r6
   1d4a0:	mla	r4, lr, sl, r4
   1d4a4:	mov	r2, #0
   1d4a8:	mla	r6, r6, r5, r4
   1d4ac:	mov	r4, #0
   1d4b0:	movwcc	r2, #1
   1d4b4:	cmp	r2, #0
   1d4b8:	mvnne	r7, #0
   1d4bc:	cmp	r2, #0
   1d4c0:	umull	r1, ip, r7, r5
   1d4c4:	mvnne	r6, #0
   1d4c8:	mla	ip, r7, sl, ip
   1d4cc:	subs	r7, r0, r7
   1d4d0:	mla	lr, r6, r5, ip
   1d4d4:	sbcs	r7, r3, r6
   1d4d8:	mov	ip, #0
   1d4dc:	movwcc	ip, #1
   1d4e0:	cmp	ip, #0
   1d4e4:	mvnne	r1, #0
   1d4e8:	mvnne	lr, #0
   1d4ec:	subs	r7, r0, r1
   1d4f0:	sbcs	r7, r3, lr
   1d4f4:	movwcc	r4, #1
   1d4f8:	umull	r0, r7, r1, r5
   1d4fc:	cmp	r4, #0
   1d500:	mla	r1, r1, sl, r7
   1d504:	mvnne	r0, #0
   1d508:	mla	r1, lr, r5, r1
   1d50c:	cmp	r4, #0
   1d510:	umull	r6, r3, r0, r5
   1d514:	mvnne	r1, #0
   1d518:	mla	r3, r0, sl, r3
   1d51c:	mla	r7, r1, r5, r3
   1d520:	ldr	r3, [sp, #12]
   1d524:	subs	r0, r3, r0
   1d528:	ldr	r3, [sp, #16]
   1d52c:	ldr	r0, [sp, #8]
   1d530:	sbcs	r0, r0, r1
   1d534:	mov	r0, #0
   1d538:	movwcc	r0, #1
   1d53c:	cmp	r0, #0
   1d540:	mov	r1, r0
   1d544:	ldr	r0, [sp, #20]
   1d548:	mvnne	r7, #0
   1d54c:	mvnne	r6, #0
   1d550:	orr	r0, r0, r3
   1d554:	orr	r0, r0, r2
   1d558:	orr	r0, r0, ip
   1d55c:	orr	r0, r0, r4
   1d560:	b	1d684 <__assert_fail@plt+0xc37c>
   1d564:	mvn	r0, #0
   1d568:	mvn	r1, #0
   1d56c:	mov	r2, r5
   1d570:	mov	sl, r3
   1d574:	bl	1de24 <__assert_fail@plt+0xcb1c>
   1d578:	umull	r3, r2, r6, r5
   1d57c:	mov	lr, r1
   1d580:	mov	r1, r0
   1d584:	mla	r2, r6, sl, r2
   1d588:	subs	r6, r0, r6
   1d58c:	mov	r0, #0
   1d590:	sbcs	r6, lr, r7
   1d594:	mla	r2, r7, r5, r2
   1d598:	movwcc	r0, #1
   1d59c:	cmp	r0, #0
   1d5a0:	str	r0, [sp, #20]
   1d5a4:	mov	r0, r1
   1d5a8:	mvnne	r3, #0
   1d5ac:	mvnne	r2, #0
   1d5b0:	str	r0, [sp, #16]
   1d5b4:	subs	r4, r1, r3
   1d5b8:	umull	r7, ip, r3, r5
   1d5bc:	sbcs	r4, lr, r2
   1d5c0:	mla	r3, r3, sl, ip
   1d5c4:	mov	ip, #0
   1d5c8:	mov	r4, #0
   1d5cc:	mla	r2, r2, r5, r3
   1d5d0:	movwcc	r4, #1
   1d5d4:	cmp	r4, #0
   1d5d8:	mvnne	r7, #0
   1d5dc:	cmp	r4, #0
   1d5e0:	umull	r1, r6, r7, r5
   1d5e4:	mvnne	r2, #0
   1d5e8:	mla	r6, r7, sl, r6
   1d5ec:	mla	r3, r2, r5, r6
   1d5f0:	subs	r6, r0, r7
   1d5f4:	sbcs	r2, lr, r2
   1d5f8:	movwcc	ip, #1
   1d5fc:	mov	r2, #0
   1d600:	cmp	ip, #0
   1d604:	mvnne	r1, #0
   1d608:	mvnne	r3, #0
   1d60c:	subs	r6, r0, r1
   1d610:	sbcs	r6, lr, r3
   1d614:	movwcc	r2, #1
   1d618:	umull	r0, r6, r1, r5
   1d61c:	cmp	r2, #0
   1d620:	str	r6, [sp, #12]
   1d624:	mvnne	r0, #0
   1d628:	cmp	r2, #0
   1d62c:	umull	r6, r7, r0, r5
   1d630:	mla	r7, r0, sl, r7
   1d634:	str	r7, [sp, #8]
   1d638:	ldr	r7, [sp, #12]
   1d63c:	mla	r1, r1, sl, r7
   1d640:	mla	r1, r3, r5, r1
   1d644:	ldr	r3, [sp, #8]
   1d648:	mvnne	r1, #0
   1d64c:	mla	r7, r1, r5, r3
   1d650:	ldr	r3, [sp, #16]
   1d654:	subs	r0, r3, r0
   1d658:	sbcs	r0, lr, r1
   1d65c:	mov	r0, #0
   1d660:	movwcc	r0, #1
   1d664:	cmp	r0, #0
   1d668:	mov	r1, r0
   1d66c:	ldr	r0, [sp, #20]
   1d670:	mvnne	r7, #0
   1d674:	mvnne	r6, #0
   1d678:	orr	r0, r0, r4
   1d67c:	orr	r0, r0, ip
   1d680:	orr	r0, r0, r2
   1d684:	orr	r3, r0, r1
   1d688:	b	1d8b8 <__assert_fail@plt+0xc5b0>
   1d68c:	mvn	r0, #0
   1d690:	mvn	r1, #0
   1d694:	mov	r2, r5
   1d698:	mov	sl, r3
   1d69c:	bl	1de24 <__assert_fail@plt+0xcb1c>
   1d6a0:	mov	ip, r1
   1d6a4:	subs	r1, r0, r6
   1d6a8:	umull	r3, lr, r6, r5
   1d6ac:	mov	r2, r5
   1d6b0:	sbcs	r1, ip, r7
   1d6b4:	mla	r6, r6, sl, lr
   1d6b8:	str	ip, [sp, #4]
   1d6bc:	mov	r1, #0
   1d6c0:	mla	r7, r7, r2, r6
   1d6c4:	movwcc	r1, #1
   1d6c8:	cmp	r1, #0
   1d6cc:	str	r1, [sp, #20]
   1d6d0:	mvnne	r3, #0
   1d6d4:	cmp	r1, #0
   1d6d8:	mov	r1, r0
   1d6dc:	umull	r4, r5, r3, r5
   1d6e0:	mvnne	r7, #0
   1d6e4:	mov	lr, r1
   1d6e8:	mla	r5, r3, sl, r5
   1d6ec:	subs	r3, r0, r3
   1d6f0:	sbcs	r0, ip, r7
   1d6f4:	mla	r5, r7, r2, r5
   1d6f8:	mov	r0, #0
   1d6fc:	movwcc	r0, #1
   1d700:	cmp	r0, #0
   1d704:	str	r0, [sp, #16]
   1d708:	mvnne	r4, #0
   1d70c:	mvnne	r5, #0
   1d710:	subs	r0, r1, r4
   1d714:	mov	r1, #0
   1d718:	sbcs	r0, ip, r5
   1d71c:	movwcc	r1, #1
   1d720:	umull	r3, r0, r4, r2
   1d724:	cmp	r1, #0
   1d728:	mla	r0, r4, sl, r0
   1d72c:	mov	r4, lr
   1d730:	str	r1, [sp, #12]
   1d734:	mvnne	r3, #0
   1d738:	mla	r0, r5, r2, r0
   1d73c:	cmp	r1, #0
   1d740:	str	r4, [sp]
   1d744:	umull	r7, r6, r3, r2
   1d748:	mvnne	r0, #0
   1d74c:	mla	r6, r3, sl, r6
   1d750:	subs	r3, lr, r3
   1d754:	mla	r5, r0, r2, r6
   1d758:	sbcs	r0, ip, r0
   1d75c:	mov	r3, #0
   1d760:	mov	r0, #0
   1d764:	movwcc	r0, #1
   1d768:	cmp	r0, #0
   1d76c:	str	r0, [sp, #8]
   1d770:	mvnne	r7, #0
   1d774:	mvnne	r5, #0
   1d778:	subs	r0, lr, r7
   1d77c:	sbcs	r0, ip, r5
   1d780:	movwcc	r3, #1
   1d784:	umull	r6, r0, r7, r2
   1d788:	cmp	r3, #0
   1d78c:	mla	r7, r7, sl, r0
   1d790:	mov	r0, ip
   1d794:	mvnne	r6, #0
   1d798:	mla	r7, r5, r2, r7
   1d79c:	cmp	r3, #0
   1d7a0:	mov	r5, #0
   1d7a4:	umull	r1, lr, r6, r2
   1d7a8:	mvnne	r7, #0
   1d7ac:	mla	lr, r6, sl, lr
   1d7b0:	subs	r6, r4, r6
   1d7b4:	mla	lr, r7, r2, lr
   1d7b8:	sbcs	r7, ip, r7
   1d7bc:	mov	ip, #0
   1d7c0:	movwcc	ip, #1
   1d7c4:	cmp	ip, #0
   1d7c8:	mvnne	r1, #0
   1d7cc:	mvnne	lr, #0
   1d7d0:	subs	r7, r4, r1
   1d7d4:	sbcs	r7, r0, lr
   1d7d8:	movwcc	r5, #1
   1d7dc:	umull	r0, r7, r1, r2
   1d7e0:	cmp	r5, #0
   1d7e4:	mla	r1, r1, sl, r7
   1d7e8:	mvnne	r0, #0
   1d7ec:	mla	r1, lr, r2, r1
   1d7f0:	cmp	r5, #0
   1d7f4:	umull	r6, r4, r0, r2
   1d7f8:	mvnne	r1, #0
   1d7fc:	mla	r4, r0, sl, r4
   1d800:	mla	r7, r1, r2, r4
   1d804:	ldr	r2, [sp]
   1d808:	subs	r0, r2, r0
   1d80c:	ldr	r2, [sp, #16]
   1d810:	ldr	r0, [sp, #4]
   1d814:	sbcs	r0, r0, r1
   1d818:	mov	r0, #0
   1d81c:	movwcc	r0, #1
   1d820:	cmp	r0, #0
   1d824:	mov	r1, r0
   1d828:	ldr	r0, [sp, #20]
   1d82c:	mvnne	r7, #0
   1d830:	mvnne	r6, #0
   1d834:	orr	r0, r0, r2
   1d838:	ldr	r2, [sp, #12]
   1d83c:	orr	r0, r0, r2
   1d840:	ldr	r2, [sp, #8]
   1d844:	orr	r0, r0, r2
   1d848:	orr	r0, r0, r3
   1d84c:	orr	r0, r0, ip
   1d850:	orr	r0, r0, r5
   1d854:	orr	r0, r0, r1
   1d858:	and	r3, r0, #1
   1d85c:	b	1d8b8 <__assert_fail@plt+0xc5b0>
   1d860:	mov	r1, #0
   1d864:	lsl	r2, r7, #9
   1d868:	lsl	r0, r6, #9
   1d86c:	lsr	r3, r7, #23
   1d870:	cmp	r1, r7, lsr #23
   1d874:	orr	r2, r2, r6, lsr #23
   1d878:	mvnne	r0, #0
   1d87c:	movwne	r3, #1
   1d880:	cmp	r1, r7, lsr #23
   1d884:	mvnne	r2, #0
   1d888:	mov	r6, r0
   1d88c:	mov	r7, r2
   1d890:	b	1d8b8 <__assert_fail@plt+0xc5b0>
   1d894:	lsl	r1, r7, #1
   1d898:	lsl	r0, r6, #1
   1d89c:	cmp	r7, #0
   1d8a0:	lsr	r3, r7, #31
   1d8a4:	orr	r1, r1, r6, lsr #31
   1d8a8:	mvnlt	r0, #0
   1d8ac:	mvnlt	r1, #0
   1d8b0:	mov	r6, r0
   1d8b4:	mov	r7, r1
   1d8b8:	ldr	r1, [sp, #32]
   1d8bc:	ldr	r2, [sp, #28]
   1d8c0:	orr	r8, r3, r8
   1d8c4:	add	r0, r1, r2
   1d8c8:	str	r0, [r9]
   1d8cc:	ldrb	r0, [r1, r2]
   1d8d0:	cmp	r0, #0
   1d8d4:	orrne	r8, r8, #2
   1d8d8:	ldr	r0, [sp, #36]	; 0x24
   1d8dc:	strd	r6, [r0]
   1d8e0:	mov	r0, r8
   1d8e4:	sub	sp, fp, #28
   1d8e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d8ec:	movw	r0, #62137	; 0xf2b9
   1d8f0:	movw	r1, #62175	; 0xf2df
   1d8f4:	movw	r3, #62191	; 0xf2ef
   1d8f8:	mov	r2, #85	; 0x55
   1d8fc:	movt	r0, #1
   1d900:	movt	r1, #1
   1d904:	movt	r3, #1
   1d908:	bl	11308 <__assert_fail@plt>
   1d90c:	clz	r2, r1
   1d910:	clz	r3, r0
   1d914:	lsr	r2, r2, #5
   1d918:	lsr	r3, r3, #5
   1d91c:	orrs	r2, r3, r2
   1d920:	movwne	r1, #1
   1d924:	movwne	r0, #1
   1d928:	cmp	r1, #0
   1d92c:	beq	1d95c <__assert_fail@plt+0xc654>
   1d930:	mvn	r2, #-2147483648	; 0x80000000
   1d934:	udiv	r2, r2, r1
   1d938:	cmp	r2, r0
   1d93c:	bcs	1d95c <__assert_fail@plt+0xc654>
   1d940:	push	{fp, lr}
   1d944:	mov	fp, sp
   1d948:	bl	1120c <__errno_location@plt>
   1d94c:	mov	r1, #12
   1d950:	str	r1, [r0]
   1d954:	mov	r0, #0
   1d958:	pop	{fp, pc}
   1d95c:	b	1105c <calloc@plt>
   1d960:	cmp	r0, #0
   1d964:	movweq	r0, #1
   1d968:	cmn	r0, #1
   1d96c:	ble	1d974 <__assert_fail@plt+0xc66c>
   1d970:	b	11188 <malloc@plt>
   1d974:	push	{fp, lr}
   1d978:	mov	fp, sp
   1d97c:	bl	1120c <__errno_location@plt>
   1d980:	mov	r1, #12
   1d984:	str	r1, [r0]
   1d988:	mov	r0, #0
   1d98c:	pop	{fp, pc}
   1d990:	push	{fp, lr}
   1d994:	mov	fp, sp
   1d998:	cmp	r0, #0
   1d99c:	beq	1d9b8 <__assert_fail@plt+0xc6b0>
   1d9a0:	cmp	r1, #0
   1d9a4:	beq	1d9c4 <__assert_fail@plt+0xc6bc>
   1d9a8:	cmn	r1, #1
   1d9ac:	ble	1d9d0 <__assert_fail@plt+0xc6c8>
   1d9b0:	pop	{fp, lr}
   1d9b4:	b	11110 <realloc@plt>
   1d9b8:	mov	r0, r1
   1d9bc:	pop	{fp, lr}
   1d9c0:	b	1d960 <__assert_fail@plt+0xc658>
   1d9c4:	bl	19e8c <__assert_fail@plt+0x8b84>
   1d9c8:	mov	r0, #0
   1d9cc:	pop	{fp, pc}
   1d9d0:	bl	1120c <__errno_location@plt>
   1d9d4:	mov	r1, #12
   1d9d8:	str	r1, [r0]
   1d9dc:	mov	r0, #0
   1d9e0:	pop	{fp, pc}
   1d9e4:	push	{r4, r5, r6, sl, fp, lr}
   1d9e8:	add	fp, sp, #16
   1d9ec:	mov	r4, r0
   1d9f0:	bl	11164 <__fpending@plt>
   1d9f4:	ldr	r6, [r4]
   1d9f8:	mov	r5, r0
   1d9fc:	mov	r0, r4
   1da00:	bl	19cd4 <__assert_fail@plt+0x89cc>
   1da04:	tst	r6, #32
   1da08:	bne	1da40 <__assert_fail@plt+0xc738>
   1da0c:	cmp	r0, #0
   1da10:	mov	r4, r0
   1da14:	mvnne	r4, #0
   1da18:	cmp	r5, #0
   1da1c:	bne	1da4c <__assert_fail@plt+0xc744>
   1da20:	cmp	r0, #0
   1da24:	beq	1da4c <__assert_fail@plt+0xc744>
   1da28:	bl	1120c <__errno_location@plt>
   1da2c:	ldr	r0, [r0]
   1da30:	subs	r4, r0, #9
   1da34:	mvnne	r4, #0
   1da38:	mov	r0, r4
   1da3c:	pop	{r4, r5, r6, sl, fp, pc}
   1da40:	mvn	r4, #0
   1da44:	cmp	r0, #0
   1da48:	beq	1da54 <__assert_fail@plt+0xc74c>
   1da4c:	mov	r0, r4
   1da50:	pop	{r4, r5, r6, sl, fp, pc}
   1da54:	bl	1120c <__errno_location@plt>
   1da58:	mov	r1, #0
   1da5c:	str	r1, [r0]
   1da60:	mov	r0, r4
   1da64:	pop	{r4, r5, r6, sl, fp, pc}
   1da68:	sub	sp, sp, #8
   1da6c:	push	{r4, r5, r6, r7, fp, lr}
   1da70:	add	fp, sp, #16
   1da74:	sub	sp, sp, #8
   1da78:	mov	r5, r0
   1da7c:	add	r0, fp, #8
   1da80:	cmp	r1, #11
   1da84:	str	r3, [fp, #12]
   1da88:	str	r2, [fp, #8]
   1da8c:	str	r0, [sp, #4]
   1da90:	bhi	1dacc <__assert_fail@plt+0xc7c4>
   1da94:	mov	r0, #1
   1da98:	movw	r2, #1300	; 0x514
   1da9c:	tst	r2, r0, lsl r1
   1daa0:	bne	1db8c <__assert_fail@plt+0xc884>
   1daa4:	movw	r2, #2570	; 0xa0a
   1daa8:	tst	r2, r0, lsl r1
   1daac:	bne	1daf4 <__assert_fail@plt+0xc7ec>
   1dab0:	cmp	r1, #0
   1dab4:	bne	1dacc <__assert_fail@plt+0xc7c4>
   1dab8:	ldr	r0, [sp, #4]
   1dabc:	add	r1, r0, #4
   1dac0:	str	r1, [sp, #4]
   1dac4:	mov	r1, #0
   1dac8:	b	1db98 <__assert_fail@plt+0xc890>
   1dacc:	sub	r0, r1, #1024	; 0x400
   1dad0:	cmp	r0, #10
   1dad4:	bhi	1db8c <__assert_fail@plt+0xc884>
   1dad8:	mov	r2, #1
   1dadc:	movw	r3, #645	; 0x285
   1dae0:	tst	r3, r2, lsl r0
   1dae4:	bne	1db8c <__assert_fail@plt+0xc884>
   1dae8:	movw	r3, #1282	; 0x502
   1daec:	tst	r3, r2, lsl r0
   1daf0:	beq	1db00 <__assert_fail@plt+0xc7f8>
   1daf4:	mov	r0, r5
   1daf8:	bl	11278 <fcntl64@plt>
   1dafc:	b	1dba4 <__assert_fail@plt+0xc89c>
   1db00:	cmp	r0, #6
   1db04:	bne	1db8c <__assert_fail@plt+0xc884>
   1db08:	ldr	r0, [sp, #4]
   1db0c:	movw	r7, #728	; 0x2d8
   1db10:	movt	r7, #3
   1db14:	add	r1, r0, #4
   1db18:	str	r1, [sp, #4]
   1db1c:	ldr	r6, [r0]
   1db20:	ldr	r0, [r7]
   1db24:	cmp	r0, #0
   1db28:	blt	1dbc8 <__assert_fail@plt+0xc8c0>
   1db2c:	mov	r0, r5
   1db30:	movw	r1, #1030	; 0x406
   1db34:	mov	r2, r6
   1db38:	bl	11278 <fcntl64@plt>
   1db3c:	mov	r4, r0
   1db40:	cmn	r0, #1
   1db44:	bgt	1dbbc <__assert_fail@plt+0xc8b4>
   1db48:	bl	1120c <__errno_location@plt>
   1db4c:	ldr	r0, [r0]
   1db50:	cmp	r0, #22
   1db54:	bne	1dbbc <__assert_fail@plt+0xc8b4>
   1db58:	mov	r0, r5
   1db5c:	mov	r1, #0
   1db60:	mov	r2, r6
   1db64:	bl	11278 <fcntl64@plt>
   1db68:	mov	r4, r0
   1db6c:	cmp	r0, #0
   1db70:	blt	1dba8 <__assert_fail@plt+0xc8a0>
   1db74:	mvn	r0, #0
   1db78:	str	r0, [r7]
   1db7c:	mov	r0, #1
   1db80:	cmp	r0, #0
   1db84:	bne	1dbf4 <__assert_fail@plt+0xc8ec>
   1db88:	b	1dba8 <__assert_fail@plt+0xc8a0>
   1db8c:	ldr	r0, [sp, #4]
   1db90:	add	r2, r0, #4
   1db94:	str	r2, [sp, #4]
   1db98:	ldr	r2, [r0]
   1db9c:	mov	r0, r5
   1dba0:	bl	11278 <fcntl64@plt>
   1dba4:	mov	r4, r0
   1dba8:	mov	r0, r4
   1dbac:	sub	sp, fp, #16
   1dbb0:	pop	{r4, r5, r6, r7, fp, lr}
   1dbb4:	add	sp, sp, #8
   1dbb8:	bx	lr
   1dbbc:	mov	r0, #1
   1dbc0:	str	r0, [r7]
   1dbc4:	b	1dba8 <__assert_fail@plt+0xc8a0>
   1dbc8:	mov	r0, r5
   1dbcc:	mov	r1, #0
   1dbd0:	mov	r2, r6
   1dbd4:	bl	11278 <fcntl64@plt>
   1dbd8:	mov	r4, r0
   1dbdc:	ldr	r0, [r7]
   1dbe0:	add	r0, r0, #1
   1dbe4:	clz	r0, r0
   1dbe8:	lsr	r0, r0, #5
   1dbec:	cmp	r0, #0
   1dbf0:	beq	1dba8 <__assert_fail@plt+0xc8a0>
   1dbf4:	cmp	r4, #0
   1dbf8:	blt	1dba8 <__assert_fail@plt+0xc8a0>
   1dbfc:	mov	r0, r4
   1dc00:	mov	r1, #1
   1dc04:	bl	11278 <fcntl64@plt>
   1dc08:	cmp	r0, #0
   1dc0c:	blt	1dc28 <__assert_fail@plt+0xc920>
   1dc10:	orr	r2, r0, #1
   1dc14:	mov	r0, r4
   1dc18:	mov	r1, #2
   1dc1c:	bl	11278 <fcntl64@plt>
   1dc20:	cmn	r0, #1
   1dc24:	bne	1dba8 <__assert_fail@plt+0xc8a0>
   1dc28:	bl	1120c <__errno_location@plt>
   1dc2c:	ldr	r6, [r0]
   1dc30:	mov	r5, r0
   1dc34:	mov	r0, r4
   1dc38:	bl	112f0 <close@plt>
   1dc3c:	str	r6, [r5]
   1dc40:	mvn	r4, #0
   1dc44:	b	1dba8 <__assert_fail@plt+0xc8a0>
   1dc48:	push	{fp, lr}
   1dc4c:	mov	fp, sp
   1dc50:	mov	r0, #14
   1dc54:	bl	112a8 <nl_langinfo@plt>
   1dc58:	movw	r1, #58435	; 0xe443
   1dc5c:	cmp	r0, #0
   1dc60:	movt	r1, #1
   1dc64:	movne	r1, r0
   1dc68:	movw	r0, #62270	; 0xf33e
   1dc6c:	ldrb	r2, [r1]
   1dc70:	movt	r0, #1
   1dc74:	cmp	r2, #0
   1dc78:	movne	r0, r1
   1dc7c:	pop	{fp, pc}
   1dc80:	push	{r4, r5, r6, r7, fp, lr}
   1dc84:	add	fp, sp, #16
   1dc88:	sub	sp, sp, #8
   1dc8c:	add	r5, sp, #4
   1dc90:	cmp	r0, #0
   1dc94:	mov	r7, r2
   1dc98:	mov	r4, r1
   1dc9c:	movne	r5, r0
   1dca0:	mov	r0, r5
   1dca4:	bl	11170 <mbrtowc@plt>
   1dca8:	mov	r6, r0
   1dcac:	cmp	r7, #0
   1dcb0:	beq	1dcd4 <__assert_fail@plt+0xc9cc>
   1dcb4:	cmn	r6, #2
   1dcb8:	bcc	1dcd4 <__assert_fail@plt+0xc9cc>
   1dcbc:	mov	r0, #0
   1dcc0:	bl	1dd1c <__assert_fail@plt+0xca14>
   1dcc4:	cmp	r0, #0
   1dcc8:	ldrbeq	r0, [r4]
   1dccc:	moveq	r6, #1
   1dcd0:	streq	r0, [r5]
   1dcd4:	mov	r0, r6
   1dcd8:	sub	sp, fp, #16
   1dcdc:	pop	{r4, r5, r6, r7, fp, pc}
   1dce0:	cmp	r2, #0
   1dce4:	beq	1dd14 <__assert_fail@plt+0xca0c>
   1dce8:	mvn	r3, #0
   1dcec:	udiv	r3, r3, r2
   1dcf0:	cmp	r3, r1
   1dcf4:	bcs	1dd14 <__assert_fail@plt+0xca0c>
   1dcf8:	push	{fp, lr}
   1dcfc:	mov	fp, sp
   1dd00:	bl	1120c <__errno_location@plt>
   1dd04:	mov	r1, #12
   1dd08:	str	r1, [r0]
   1dd0c:	mov	r0, #0
   1dd10:	pop	{fp, pc}
   1dd14:	mul	r1, r2, r1
   1dd18:	b	1d990 <__assert_fail@plt+0xc688>
   1dd1c:	push	{r4, sl, fp, lr}
   1dd20:	add	fp, sp, #8
   1dd24:	sub	sp, sp, #264	; 0x108
   1dd28:	add	r1, sp, #7
   1dd2c:	movw	r2, #257	; 0x101
   1dd30:	bl	1dd80 <__assert_fail@plt+0xca78>
   1dd34:	mov	r4, #0
   1dd38:	cmp	r0, #0
   1dd3c:	bne	1dd74 <__assert_fail@plt+0xca6c>
   1dd40:	movw	r1, #62276	; 0xf344
   1dd44:	add	r0, sp, #7
   1dd48:	movt	r1, #1
   1dd4c:	bl	1108c <strcmp@plt>
   1dd50:	cmp	r0, #0
   1dd54:	beq	1dd74 <__assert_fail@plt+0xca6c>
   1dd58:	movw	r1, #62278	; 0xf346
   1dd5c:	add	r0, sp, #7
   1dd60:	movt	r1, #1
   1dd64:	bl	1108c <strcmp@plt>
   1dd68:	mov	r4, r0
   1dd6c:	cmp	r0, #0
   1dd70:	movwne	r4, #1
   1dd74:	mov	r0, r4
   1dd78:	sub	sp, fp, #8
   1dd7c:	pop	{r4, sl, fp, pc}
   1dd80:	push	{r4, r5, r6, r7, fp, lr}
   1dd84:	add	fp, sp, #16
   1dd88:	mov	r4, r1
   1dd8c:	mov	r1, #0
   1dd90:	mov	r6, r2
   1dd94:	bl	11290 <setlocale@plt>
   1dd98:	cmp	r0, #0
   1dd9c:	beq	1ddcc <__assert_fail@plt+0xcac4>
   1dda0:	mov	r7, r0
   1dda4:	bl	111f4 <strlen@plt>
   1dda8:	cmp	r0, r6
   1ddac:	bcs	1ddec <__assert_fail@plt+0xcae4>
   1ddb0:	add	r2, r0, #1
   1ddb4:	mov	r0, r4
   1ddb8:	mov	r1, r7
   1ddbc:	bl	110d4 <memcpy@plt>
   1ddc0:	mov	r5, #0
   1ddc4:	mov	r0, r5
   1ddc8:	pop	{r4, r5, r6, r7, fp, pc}
   1ddcc:	cmp	r6, #0
   1ddd0:	mov	r5, #22
   1ddd4:	movne	r0, #0
   1ddd8:	strbne	r0, [r4]
   1dddc:	movne	r0, r5
   1dde0:	popne	{r4, r5, r6, r7, fp, pc}
   1dde4:	mov	r0, r5
   1dde8:	pop	{r4, r5, r6, r7, fp, pc}
   1ddec:	mov	r5, #34	; 0x22
   1ddf0:	cmp	r6, #0
   1ddf4:	beq	1de14 <__assert_fail@plt+0xcb0c>
   1ddf8:	sub	r6, r6, #1
   1ddfc:	mov	r0, r4
   1de00:	mov	r1, r7
   1de04:	mov	r2, r6
   1de08:	bl	110d4 <memcpy@plt>
   1de0c:	mov	r0, #0
   1de10:	strb	r0, [r4, r6]
   1de14:	mov	r0, r5
   1de18:	pop	{r4, r5, r6, r7, fp, pc}
   1de1c:	mov	r1, #0
   1de20:	b	11290 <setlocale@plt>
   1de24:	cmp	r3, #0
   1de28:	cmpeq	r2, #0
   1de2c:	bne	1de44 <__assert_fail@plt+0xcb3c>
   1de30:	cmp	r1, #0
   1de34:	cmpeq	r0, #0
   1de38:	mvnne	r1, #0
   1de3c:	mvnne	r0, #0
   1de40:	b	1de60 <__assert_fail@plt+0xcb58>
   1de44:	sub	sp, sp, #8
   1de48:	push	{sp, lr}
   1de4c:	bl	1de70 <__assert_fail@plt+0xcb68>
   1de50:	ldr	lr, [sp, #4]
   1de54:	add	sp, sp, #8
   1de58:	pop	{r2, r3}
   1de5c:	bx	lr
   1de60:	push	{r1, lr}
   1de64:	mov	r0, #8
   1de68:	bl	11074 <raise@plt>
   1de6c:	pop	{r1, pc}
   1de70:	cmp	r1, r3
   1de74:	cmpeq	r0, r2
   1de78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de7c:	mov	r4, r0
   1de80:	movcc	r0, #0
   1de84:	mov	r5, r1
   1de88:	ldr	lr, [sp, #36]	; 0x24
   1de8c:	movcc	r1, r0
   1de90:	bcc	1df8c <__assert_fail@plt+0xcc84>
   1de94:	cmp	r3, #0
   1de98:	clzeq	ip, r2
   1de9c:	clzne	ip, r3
   1dea0:	addeq	ip, ip, #32
   1dea4:	cmp	r5, #0
   1dea8:	clzeq	r1, r4
   1deac:	addeq	r1, r1, #32
   1deb0:	clzne	r1, r5
   1deb4:	sub	ip, ip, r1
   1deb8:	sub	sl, ip, #32
   1debc:	lsl	r9, r3, ip
   1dec0:	rsb	fp, ip, #32
   1dec4:	orr	r9, r9, r2, lsl sl
   1dec8:	orr	r9, r9, r2, lsr fp
   1decc:	lsl	r8, r2, ip
   1ded0:	cmp	r5, r9
   1ded4:	cmpeq	r4, r8
   1ded8:	movcc	r0, #0
   1dedc:	movcc	r1, r0
   1dee0:	bcc	1defc <__assert_fail@plt+0xcbf4>
   1dee4:	mov	r0, #1
   1dee8:	subs	r4, r4, r8
   1deec:	lsl	r1, r0, sl
   1def0:	orr	r1, r1, r0, lsr fp
   1def4:	lsl	r0, r0, ip
   1def8:	sbc	r5, r5, r9
   1defc:	cmp	ip, #0
   1df00:	beq	1df8c <__assert_fail@plt+0xcc84>
   1df04:	lsr	r6, r8, #1
   1df08:	orr	r6, r6, r9, lsl #31
   1df0c:	lsr	r7, r9, #1
   1df10:	mov	r2, ip
   1df14:	b	1df38 <__assert_fail@plt+0xcc30>
   1df18:	subs	r3, r4, r6
   1df1c:	sbc	r8, r5, r7
   1df20:	adds	r3, r3, r3
   1df24:	adc	r8, r8, r8
   1df28:	adds	r4, r3, #1
   1df2c:	adc	r5, r8, #0
   1df30:	subs	r2, r2, #1
   1df34:	beq	1df54 <__assert_fail@plt+0xcc4c>
   1df38:	cmp	r5, r7
   1df3c:	cmpeq	r4, r6
   1df40:	bcs	1df18 <__assert_fail@plt+0xcc10>
   1df44:	adds	r4, r4, r4
   1df48:	adc	r5, r5, r5
   1df4c:	subs	r2, r2, #1
   1df50:	bne	1df38 <__assert_fail@plt+0xcc30>
   1df54:	lsr	r3, r4, ip
   1df58:	orr	r3, r3, r5, lsl fp
   1df5c:	lsr	r2, r5, ip
   1df60:	orr	r3, r3, r5, lsr sl
   1df64:	adds	r0, r0, r4
   1df68:	mov	r4, r3
   1df6c:	lsl	r3, r2, ip
   1df70:	orr	r3, r3, r4, lsl sl
   1df74:	lsl	ip, r4, ip
   1df78:	orr	r3, r3, r4, lsr fp
   1df7c:	adc	r1, r1, r5
   1df80:	subs	r0, r0, ip
   1df84:	mov	r5, r2
   1df88:	sbc	r1, r1, r3
   1df8c:	cmp	lr, #0
   1df90:	strdne	r4, [lr]
   1df94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1df9c:	mov	r7, r0
   1dfa0:	ldr	r6, [pc, #72]	; 1dff0 <__assert_fail@plt+0xcce8>
   1dfa4:	ldr	r5, [pc, #72]	; 1dff4 <__assert_fail@plt+0xccec>
   1dfa8:	add	r6, pc, r6
   1dfac:	add	r5, pc, r5
   1dfb0:	sub	r6, r6, r5
   1dfb4:	mov	r8, r1
   1dfb8:	mov	r9, r2
   1dfbc:	bl	11030 <fdopen@plt-0x20>
   1dfc0:	asrs	r6, r6, #2
   1dfc4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dfc8:	mov	r4, #0
   1dfcc:	add	r4, r4, #1
   1dfd0:	ldr	r3, [r5], #4
   1dfd4:	mov	r2, r9
   1dfd8:	mov	r1, r8
   1dfdc:	mov	r0, r7
   1dfe0:	blx	r3
   1dfe4:	cmp	r6, r4
   1dfe8:	bne	1dfcc <__assert_fail@plt+0xccc4>
   1dfec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dff0:	andeq	r1, r1, ip, asr pc
   1dff4:	andeq	r1, r1, r4, asr pc
   1dff8:	bx	lr
   1dffc:	ldr	r3, [pc, #12]	; 1e010 <__assert_fail@plt+0xcd08>
   1e000:	mov	r1, #0
   1e004:	add	r3, pc, r3
   1e008:	ldr	r2, [r3]
   1e00c:	b	11218 <__cxa_atexit@plt>
   1e010:	strdeq	r2, [r1], -r8

Disassembly of section .fini:

0001e014 <.fini>:
   1e014:	push	{r3, lr}
   1e018:	pop	{r3, pc}
