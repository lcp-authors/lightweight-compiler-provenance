
../repos/coreutils/src/b2sum:     file format elf32-littlearm


Disassembly of section .init:

00011030 <.init>:
   11030:	push	{r3, lr}
   11034:	bl	1135c <__assert_fail@plt+0x54>
   11038:	pop	{r3, pc}

Disassembly of section .plt:

0001103c <fdopen@plt-0x14>:
   1103c:	push	{lr}		; (str lr, [sp, #-4]!)
   11040:	ldr	lr, [pc, #4]	; 1104c <fdopen@plt-0x4>
   11044:	add	lr, pc, lr
   11048:	ldr	pc, [lr, #8]!
   1104c:			; <UNDEFINED> instruction: 0x0001dfb4

00011050 <fdopen@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #118784	; 0x1d000
   11058:	ldr	pc, [ip, #4020]!	; 0xfb4

0001105c <calloc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #118784	; 0x1d000
   11064:	ldr	pc, [ip, #4012]!	; 0xfac

00011068 <fputs_unlocked@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #118784	; 0x1d000
   11070:	ldr	pc, [ip, #4004]!	; 0xfa4

00011074 <raise@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #118784	; 0x1d000
   1107c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011080 <__getdelim@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #118784	; 0x1d000
   11088:	ldr	pc, [ip, #3988]!	; 0xf94

0001108c <strcmp@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #118784	; 0x1d000
   11094:	ldr	pc, [ip, #3980]!	; 0xf8c

00011098 <posix_fadvise64@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #118784	; 0x1d000
   110a0:	ldr	pc, [ip, #3972]!	; 0xf84

000110a4 <fflush@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #118784	; 0x1d000
   110ac:	ldr	pc, [ip, #3964]!	; 0xf7c

000110b0 <free@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #118784	; 0x1d000
   110b8:	ldr	pc, [ip, #3956]!	; 0xf74

000110bc <ferror@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #118784	; 0x1d000
   110c4:	ldr	pc, [ip, #3948]!	; 0xf6c

000110c8 <_exit@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #118784	; 0x1d000
   110d0:	ldr	pc, [ip, #3940]!	; 0xf64

000110d4 <memcpy@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #118784	; 0x1d000
   110dc:	ldr	pc, [ip, #3932]!	; 0xf5c

000110e0 <__strtoull_internal@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #118784	; 0x1d000
   110e8:	ldr	pc, [ip, #3924]!	; 0xf54

000110ec <mbsinit@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #118784	; 0x1d000
   110f4:	ldr	pc, [ip, #3916]!	; 0xf4c

000110f8 <memcmp@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #118784	; 0x1d000
   11100:	ldr	pc, [ip, #3908]!	; 0xf44

00011104 <dcgettext@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #118784	; 0x1d000
   1110c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011110 <realloc@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #118784	; 0x1d000
   11118:	ldr	pc, [ip, #3892]!	; 0xf34

0001111c <textdomain@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #118784	; 0x1d000
   11124:	ldr	pc, [ip, #3884]!	; 0xf2c

00011128 <iswprint@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #118784	; 0x1d000
   11130:	ldr	pc, [ip, #3876]!	; 0xf24

00011134 <fwrite@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #118784	; 0x1d000
   1113c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011140 <lseek64@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #118784	; 0x1d000
   11148:	ldr	pc, [ip, #3860]!	; 0xf14

0001114c <__ctype_get_mb_cur_max@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #118784	; 0x1d000
   11154:	ldr	pc, [ip, #3852]!	; 0xf0c

00011158 <fread@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #118784	; 0x1d000
   11160:	ldr	pc, [ip, #3844]!	; 0xf04

00011164 <__fpending@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #118784	; 0x1d000
   1116c:	ldr	pc, [ip, #3836]!	; 0xefc

00011170 <mbrtowc@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #118784	; 0x1d000
   11178:	ldr	pc, [ip, #3828]!	; 0xef4

0001117c <error@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #118784	; 0x1d000
   11184:	ldr	pc, [ip, #3820]!	; 0xeec

00011188 <malloc@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #118784	; 0x1d000
   11190:	ldr	pc, [ip, #3812]!	; 0xee4

00011194 <__libc_start_main@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #118784	; 0x1d000
   1119c:	ldr	pc, [ip, #3804]!	; 0xedc

000111a0 <__freading@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #118784	; 0x1d000
   111a8:	ldr	pc, [ip, #3796]!	; 0xed4

000111ac <__ctype_tolower_loc@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #118784	; 0x1d000
   111b4:	ldr	pc, [ip, #3788]!	; 0xecc

000111b8 <__gmon_start__@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #118784	; 0x1d000
   111c0:	ldr	pc, [ip, #3780]!	; 0xec4

000111c4 <getopt_long@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #118784	; 0x1d000
   111cc:	ldr	pc, [ip, #3772]!	; 0xebc

000111d0 <__ctype_b_loc@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #118784	; 0x1d000
   111d8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111dc <exit@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #118784	; 0x1d000
   111e4:	ldr	pc, [ip, #3756]!	; 0xeac

000111e8 <feof@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #118784	; 0x1d000
   111f0:	ldr	pc, [ip, #3748]!	; 0xea4

000111f4 <strlen@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #118784	; 0x1d000
   111fc:	ldr	pc, [ip, #3740]!	; 0xe9c

00011200 <strchr@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #118784	; 0x1d000
   11208:	ldr	pc, [ip, #3732]!	; 0xe94

0001120c <__errno_location@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #118784	; 0x1d000
   11214:	ldr	pc, [ip, #3724]!	; 0xe8c

00011218 <__cxa_atexit@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #118784	; 0x1d000
   11220:	ldr	pc, [ip, #3716]!	; 0xe84

00011224 <setvbuf@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #118784	; 0x1d000
   1122c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011230 <memset@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #118784	; 0x1d000
   11238:	ldr	pc, [ip, #3700]!	; 0xe74

0001123c <__printf_chk@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #118784	; 0x1d000
   11244:	ldr	pc, [ip, #3692]!	; 0xe6c

00011248 <fileno@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #118784	; 0x1d000
   11250:	ldr	pc, [ip, #3684]!	; 0xe64

00011254 <__fprintf_chk@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #118784	; 0x1d000
   1125c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011260 <fclose@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #118784	; 0x1d000
   11268:	ldr	pc, [ip, #3668]!	; 0xe54

0001126c <fseeko64@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #118784	; 0x1d000
   11274:	ldr	pc, [ip, #3660]!	; 0xe4c

00011278 <fcntl64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #118784	; 0x1d000
   11280:	ldr	pc, [ip, #3652]!	; 0xe44

00011284 <__overflow@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #118784	; 0x1d000
   1128c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011290 <setlocale@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #118784	; 0x1d000
   11298:	ldr	pc, [ip, #3636]!	; 0xe34

0001129c <strrchr@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #118784	; 0x1d000
   112a4:	ldr	pc, [ip, #3628]!	; 0xe2c

000112a8 <nl_langinfo@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #118784	; 0x1d000
   112b0:	ldr	pc, [ip, #3620]!	; 0xe24

000112b4 <clearerr_unlocked@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #118784	; 0x1d000
   112bc:	ldr	pc, [ip, #3612]!	; 0xe1c

000112c0 <fopen64@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #118784	; 0x1d000
   112c8:	ldr	pc, [ip, #3604]!	; 0xe14

000112cc <bindtextdomain@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #118784	; 0x1d000
   112d4:	ldr	pc, [ip, #3596]!	; 0xe0c

000112d8 <strncmp@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #118784	; 0x1d000
   112e0:	ldr	pc, [ip, #3588]!	; 0xe04

000112e4 <abort@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #118784	; 0x1d000
   112ec:	ldr	pc, [ip, #3580]!	; 0xdfc

000112f0 <close@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #118784	; 0x1d000
   112f8:	ldr	pc, [ip, #3572]!	; 0xdf4

000112fc <dcngettext@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #118784	; 0x1d000
   11304:	ldr	pc, [ip, #3564]!	; 0xdec

00011308 <__assert_fail@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #118784	; 0x1d000
   11310:	ldr	pc, [ip, #3556]!	; 0xde4

Disassembly of section .text:

00011320 <.text>:
   11320:	mov	fp, #0
   11324:	mov	lr, #0
   11328:	pop	{r1}		; (ldr r1, [sp], #4)
   1132c:	mov	r2, sp
   11330:	push	{r2}		; (str r2, [sp, #-4]!)
   11334:	push	{r0}		; (str r0, [sp, #-4]!)
   11338:	ldr	ip, [pc, #16]	; 11350 <__assert_fail@plt+0x48>
   1133c:	push	{ip}		; (str ip, [sp, #-4]!)
   11340:	ldr	r0, [pc, #12]	; 11354 <__assert_fail@plt+0x4c>
   11344:	ldr	r3, [pc, #12]	; 11358 <__assert_fail@plt+0x50>
   11348:	bl	11194 <__libc_start_main@plt>
   1134c:	bl	112e4 <abort@plt>
   11350:	ldrdeq	sp, [r1], -ip
   11354:	andeq	r1, r1, r4, lsr #15
   11358:	andeq	sp, r1, ip, ror r8
   1135c:	ldr	r3, [pc, #20]	; 11378 <__assert_fail@plt+0x70>
   11360:	ldr	r2, [pc, #20]	; 1137c <__assert_fail@plt+0x74>
   11364:	add	r3, pc, r3
   11368:	ldr	r2, [r3, r2]
   1136c:	cmp	r2, #0
   11370:	bxeq	lr
   11374:	b	111b8 <__gmon_start__@plt>
   11378:	muleq	r1, r4, ip
   1137c:	strdeq	r0, [r0], -r8
   11380:	ldr	r0, [pc, #24]	; 113a0 <__assert_fail@plt+0x98>
   11384:	ldr	r3, [pc, #24]	; 113a4 <__assert_fail@plt+0x9c>
   11388:	cmp	r3, r0
   1138c:	bxeq	lr
   11390:	ldr	r3, [pc, #16]	; 113a8 <__assert_fail@plt+0xa0>
   11394:	cmp	r3, #0
   11398:	bxeq	lr
   1139c:	bx	r3
   113a0:	andeq	pc, r2, r8, asr r1	; <UNPREDICTABLE>
   113a4:	andeq	pc, r2, r8, asr r1	; <UNPREDICTABLE>
   113a8:	andeq	r0, r0, r0
   113ac:	ldr	r0, [pc, #36]	; 113d8 <__assert_fail@plt+0xd0>
   113b0:	ldr	r1, [pc, #36]	; 113dc <__assert_fail@plt+0xd4>
   113b4:	sub	r1, r1, r0
   113b8:	asr	r1, r1, #2
   113bc:	add	r1, r1, r1, lsr #31
   113c0:	asrs	r1, r1, #1
   113c4:	bxeq	lr
   113c8:	ldr	r3, [pc, #16]	; 113e0 <__assert_fail@plt+0xd8>
   113cc:	cmp	r3, #0
   113d0:	bxeq	lr
   113d4:	bx	r3
   113d8:	andeq	pc, r2, r8, asr r1	; <UNPREDICTABLE>
   113dc:	andeq	pc, r2, r8, asr r1	; <UNPREDICTABLE>
   113e0:	andeq	r0, r0, r0
   113e4:	push	{r4, lr}
   113e8:	ldr	r4, [pc, #24]	; 11408 <__assert_fail@plt+0x100>
   113ec:	ldrb	r3, [r4]
   113f0:	cmp	r3, #0
   113f4:	popne	{r4, pc}
   113f8:	bl	11380 <__assert_fail@plt+0x78>
   113fc:	mov	r3, #1
   11400:	strb	r3, [r4]
   11404:	pop	{r4, pc}
   11408:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   1140c:	b	113ac <__assert_fail@plt+0xa4>
   11410:	push	{fp, lr}
   11414:	mov	fp, sp
   11418:	sub	sp, sp, #56	; 0x38
   1141c:	mov	r4, r0
   11420:	cmp	r0, #0
   11424:	bne	11760 <__assert_fail@plt+0x458>
   11428:	movw	r1, #55595	; 0xd92b
   1142c:	mov	r0, #0
   11430:	mov	r2, #5
   11434:	movt	r1, #1
   11438:	bl	11104 <dcgettext@plt>
   1143c:	mov	r1, r0
   11440:	movw	r0, #61860	; 0xf1a4
   11444:	movt	r0, #2
   11448:	ldr	r2, [r0]
   1144c:	mov	r0, #1
   11450:	bl	1123c <__printf_chk@plt>
   11454:	movw	r1, #55628	; 0xd94c
   11458:	mov	r0, #0
   1145c:	mov	r2, #5
   11460:	movt	r1, #1
   11464:	bl	11104 <dcgettext@plt>
   11468:	movw	r2, #55667	; 0xd973
   1146c:	mov	r1, r0
   11470:	mov	r0, #1
   11474:	mov	r3, #512	; 0x200
   11478:	movt	r2, #1
   1147c:	bl	1123c <__printf_chk@plt>
   11480:	movw	r1, #57845	; 0xe1f5
   11484:	mov	r0, #0
   11488:	mov	r2, #5
   1148c:	movt	r1, #1
   11490:	bl	11104 <dcgettext@plt>
   11494:	movw	r7, #61812	; 0xf174
   11498:	movt	r7, #2
   1149c:	ldr	r1, [r7]
   114a0:	bl	11068 <fputs_unlocked@plt>
   114a4:	movw	r1, #57901	; 0xe22d
   114a8:	mov	r0, #0
   114ac:	mov	r2, #5
   114b0:	movt	r1, #1
   114b4:	bl	11104 <dcgettext@plt>
   114b8:	ldr	r1, [r7]
   114bc:	bl	11068 <fputs_unlocked@plt>
   114c0:	movw	r1, #55675	; 0xd97b
   114c4:	mov	r0, #0
   114c8:	mov	r2, #5
   114cc:	movt	r1, #1
   114d0:	bl	11104 <dcgettext@plt>
   114d4:	ldr	r1, [r7]
   114d8:	bl	11068 <fputs_unlocked@plt>
   114dc:	movw	r1, #55720	; 0xd9a8
   114e0:	mov	r0, #0
   114e4:	mov	r2, #5
   114e8:	movt	r1, #1
   114ec:	bl	11104 <dcgettext@plt>
   114f0:	ldr	r1, [r7]
   114f4:	bl	11068 <fputs_unlocked@plt>
   114f8:	movw	r1, #55790	; 0xd9ee
   114fc:	mov	r0, #0
   11500:	mov	r2, #5
   11504:	movt	r1, #1
   11508:	bl	11104 <dcgettext@plt>
   1150c:	ldr	r1, [r7]
   11510:	bl	11068 <fputs_unlocked@plt>
   11514:	movw	r1, #55941	; 0xda85
   11518:	mov	r0, #0
   1151c:	mov	r2, #5
   11520:	movt	r1, #1
   11524:	bl	11104 <dcgettext@plt>
   11528:	ldr	r1, [r7]
   1152c:	bl	11068 <fputs_unlocked@plt>
   11530:	movw	r1, #55994	; 0xdaba
   11534:	mov	r0, #0
   11538:	mov	r2, #5
   1153c:	movt	r1, #1
   11540:	bl	11104 <dcgettext@plt>
   11544:	ldr	r1, [r7]
   11548:	bl	11068 <fputs_unlocked@plt>
   1154c:	movw	r1, #56047	; 0xdaef
   11550:	mov	r0, #0
   11554:	mov	r2, #5
   11558:	movt	r1, #1
   1155c:	bl	11104 <dcgettext@plt>
   11560:	ldr	r1, [r7]
   11564:	bl	11068 <fputs_unlocked@plt>
   11568:	movw	r1, #56173	; 0xdb6d
   1156c:	mov	r0, #0
   11570:	mov	r2, #5
   11574:	movt	r1, #1
   11578:	bl	11104 <dcgettext@plt>
   1157c:	ldr	r1, [r7]
   11580:	bl	11068 <fputs_unlocked@plt>
   11584:	movw	r1, #56612	; 0xdd24
   11588:	mov	r0, #0
   1158c:	mov	r2, #5
   11590:	movt	r1, #1
   11594:	bl	11104 <dcgettext@plt>
   11598:	ldr	r1, [r7]
   1159c:	bl	11068 <fputs_unlocked@plt>
   115a0:	movw	r1, #56657	; 0xdd51
   115a4:	mov	r0, #0
   115a8:	mov	r2, #5
   115ac:	movt	r1, #1
   115b0:	bl	11104 <dcgettext@plt>
   115b4:	ldr	r1, [r7]
   115b8:	bl	11068 <fputs_unlocked@plt>
   115bc:	movw	r1, #56711	; 0xdd87
   115c0:	mov	r0, #0
   115c4:	mov	r2, #5
   115c8:	movt	r1, #1
   115cc:	bl	11104 <dcgettext@plt>
   115d0:	movw	r2, #56755	; 0xddb3
   115d4:	mov	r1, r0
   115d8:	mov	r0, #1
   115dc:	movt	r2, #1
   115e0:	bl	1123c <__printf_chk@plt>
   115e4:	movw	r1, #56764	; 0xddbc
   115e8:	mov	r0, #0
   115ec:	mov	r2, #5
   115f0:	movt	r1, #1
   115f4:	bl	11104 <dcgettext@plt>
   115f8:	ldr	r1, [r7]
   115fc:	bl	11068 <fputs_unlocked@plt>
   11600:	movw	r0, #59088	; 0xe6d0
   11604:	mov	r2, #48	; 0x30
   11608:	mov	r6, sp
   1160c:	movw	r5, #57097	; 0xdf09
   11610:	movt	r0, #1
   11614:	movt	r5, #1
   11618:	add	r1, r0, #32
   1161c:	add	r3, r0, #16
   11620:	vld1.64	{d18-d19}, [r0], r2
   11624:	vld1.64	{d16-d17}, [r1]
   11628:	vld1.64	{d20-d21}, [r3]
   1162c:	add	r1, r6, #32
   11630:	vldr	d22, [r0]
   11634:	add	r0, r6, #16
   11638:	vst1.64	{d16-d17}, [r1]
   1163c:	movw	r1, #57976	; 0xe278
   11640:	vst1.64	{d20-d21}, [r0]
   11644:	mov	r0, r6
   11648:	vst1.64	{d18-d19}, [r0], r2
   1164c:	movt	r1, #1
   11650:	vstr	d22, [r0]
   11654:	mov	r0, r5
   11658:	bl	1108c <strcmp@plt>
   1165c:	cmp	r0, #0
   11660:	ldrne	r1, [r6, #8]!
   11664:	cmpne	r1, #0
   11668:	bne	11654 <__assert_fail@plt+0x34c>
   1166c:	ldr	r6, [r6, #4]
   11670:	movw	r1, #58071	; 0xe2d7
   11674:	mov	r0, #0
   11678:	mov	r2, #5
   1167c:	movt	r1, #1
   11680:	bl	11104 <dcgettext@plt>
   11684:	movw	r2, #57199	; 0xdf6f
   11688:	movw	r3, #58094	; 0xe2ee
   1168c:	mov	r1, r0
   11690:	mov	r0, #1
   11694:	movt	r2, #1
   11698:	movt	r3, #1
   1169c:	bl	1123c <__printf_chk@plt>
   116a0:	cmp	r6, #0
   116a4:	mov	r0, #5
   116a8:	mov	r1, #0
   116ac:	moveq	r6, r5
   116b0:	bl	11290 <setlocale@plt>
   116b4:	cmp	r0, #0
   116b8:	beq	116f0 <__assert_fail@plt+0x3e8>
   116bc:	movw	r1, #58134	; 0xe316
   116c0:	mov	r2, #3
   116c4:	movt	r1, #1
   116c8:	bl	112d8 <strncmp@plt>
   116cc:	cmp	r0, #0
   116d0:	beq	116f0 <__assert_fail@plt+0x3e8>
   116d4:	movw	r1, #58138	; 0xe31a
   116d8:	mov	r0, #0
   116dc:	mov	r2, #5
   116e0:	movt	r1, #1
   116e4:	bl	11104 <dcgettext@plt>
   116e8:	ldr	r1, [r7]
   116ec:	bl	11068 <fputs_unlocked@plt>
   116f0:	movw	r1, #58209	; 0xe361
   116f4:	mov	r0, #0
   116f8:	mov	r2, #5
   116fc:	movt	r1, #1
   11700:	bl	11104 <dcgettext@plt>
   11704:	movw	r2, #58094	; 0xe2ee
   11708:	mov	r1, r0
   1170c:	mov	r0, #1
   11710:	mov	r3, r5
   11714:	movt	r2, #1
   11718:	bl	1123c <__printf_chk@plt>
   1171c:	movw	r1, #58236	; 0xe37c
   11720:	mov	r0, #0
   11724:	mov	r2, #5
   11728:	movt	r1, #1
   1172c:	bl	11104 <dcgettext@plt>
   11730:	movw	r3, #56611	; 0xdd23
   11734:	mov	r1, r0
   11738:	movw	r0, #58004	; 0xe294
   1173c:	cmp	r6, r5
   11740:	mov	r2, r6
   11744:	movt	r0, #1
   11748:	movt	r3, #1
   1174c:	moveq	r3, r0
   11750:	mov	r0, #1
   11754:	bl	1123c <__printf_chk@plt>
   11758:	mov	r0, r4
   1175c:	bl	111dc <exit@plt>
   11760:	movw	r0, #61800	; 0xf168
   11764:	movw	r1, #55556	; 0xd904
   11768:	mov	r2, #5
   1176c:	movt	r0, #2
   11770:	movt	r1, #1
   11774:	ldr	r5, [r0]
   11778:	mov	r0, #0
   1177c:	bl	11104 <dcgettext@plt>
   11780:	mov	r2, r0
   11784:	movw	r0, #61860	; 0xf1a4
   11788:	mov	r1, #1
   1178c:	movt	r0, #2
   11790:	ldr	r3, [r0]
   11794:	mov	r0, r5
   11798:	bl	11254 <__fprintf_chk@plt>
   1179c:	mov	r0, r4
   117a0:	bl	111dc <exit@plt>
   117a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117a8:	add	fp, sp, #28
   117ac:	sub	sp, sp, #316	; 0x13c
   117b0:	mov	r5, r0
   117b4:	ldr	r0, [r1]
   117b8:	mov	r4, r1
   117bc:	bl	19a80 <__assert_fail@plt+0x8778>
   117c0:	movw	r7, #56611	; 0xdd23
   117c4:	mov	r0, #6
   117c8:	movt	r7, #1
   117cc:	mov	r1, r7
   117d0:	bl	11290 <setlocale@plt>
   117d4:	movw	r6, #57203	; 0xdf73
   117d8:	movw	r1, #57103	; 0xdf0f
   117dc:	movt	r6, #1
   117e0:	movt	r1, #1
   117e4:	mov	r0, r6
   117e8:	bl	112cc <bindtextdomain@plt>
   117ec:	mov	r0, r6
   117f0:	bl	1111c <textdomain@plt>
   117f4:	movw	r0, #38624	; 0x96e0
   117f8:	movt	r0, #1
   117fc:	bl	1d8e0 <__assert_fail@plt+0xc5d8>
   11800:	movw	r0, #61812	; 0xf174
   11804:	mov	r1, #0
   11808:	mov	r2, #1
   1180c:	mov	r3, #0
   11810:	mov	r9, #0
   11814:	movt	r0, #2
   11818:	ldr	r0, [r0]
   1181c:	bl	11224 <setvbuf@plt>
   11820:	add	r0, sp, #148	; 0x94
   11824:	movw	r1, #57127	; 0xdf27
   11828:	movw	r6, #58864	; 0xe5f0
   1182c:	mvn	r8, #0
   11830:	str	r7, [sp, #144]	; 0x90
   11834:	add	r0, r0, #7
   11838:	movt	r1, #1
   1183c:	movt	r6, #1
   11840:	and	sl, r0, #7
   11844:	mov	r7, r1
   11848:	sub	r0, r0, sl
   1184c:	str	r0, [sp, #68]	; 0x44
   11850:	mov	r0, #0
   11854:	str	r0, [sp, #72]	; 0x48
   11858:	mov	r0, #0
   1185c:	b	1187c <__assert_fail@plt+0x574>
   11860:	mov	r1, #1
   11864:	strb	r1, [r0]
   11868:	mov	r0, r2
   1186c:	b	1187c <__assert_fail@plt+0x574>
   11870:	movw	r0, #61835	; 0xf18b
   11874:	movt	r0, #2
   11878:	b	11860 <__assert_fail@plt+0x558>
   1187c:	str	r0, [sp, #88]	; 0x58
   11880:	mov	r0, r5
   11884:	mov	r1, r4
   11888:	mov	r2, r7
   1188c:	mov	r3, r6
   11890:	str	r9, [sp]
   11894:	bl	111c4 <getopt_long@plt>
   11898:	cmp	r0, #97	; 0x61
   1189c:	ble	11aa0 <__assert_fail@plt+0x798>
   118a0:	sub	r1, r0, #98	; 0x62
   118a4:	cmp	r1, #24
   118a8:	bhi	1192c <__assert_fail@plt+0x624>
   118ac:	add	r2, pc, #8
   118b0:	ldr	r3, [sp, #88]	; 0x58
   118b4:	mov	r0, #1
   118b8:	ldr	pc, [r2, r1, lsl #2]
   118bc:	andeq	r1, r1, r0, lsr #18
   118c0:	andeq	r1, r1, ip, ror r8
   118c4:	andeq	r2, r1, r8, lsr #30
   118c8:	andeq	r2, r1, r8, lsr #30
   118cc:	andeq	r2, r1, r8, lsr #30
   118d0:	andeq	r2, r1, r8, lsr #30
   118d4:	andeq	r2, r1, r8, lsr #30
   118d8:	andeq	r2, r1, r8, lsr #30
   118dc:	andeq	r2, r1, r8, lsr #30
   118e0:	andeq	r2, r1, r8, lsr #30
   118e4:	andeq	r1, r1, ip, asr #19
   118e8:	andeq	r2, r1, r8, lsr #30
   118ec:	andeq	r2, r1, r8, lsr #30
   118f0:	andeq	r2, r1, r8, lsr #30
   118f4:	andeq	r2, r1, r8, lsr #30
   118f8:	andeq	r2, r1, r8, lsr #30
   118fc:	andeq	r2, r1, r8, lsr #30
   11900:	andeq	r2, r1, r8, lsr #30
   11904:	andeq	r1, r1, r0, ror sl
   11908:	andeq	r2, r1, r8, lsr #30
   1190c:	andeq	r2, r1, r8, lsr #30
   11910:	muleq	r1, ip, r9
   11914:	andeq	r2, r1, r8, lsr #30
   11918:	andeq	r2, r1, r8, lsr #30
   1191c:	andeq	r1, r1, r8, lsl #21
   11920:	mov	r8, #1
   11924:	mov	r0, r3
   11928:	b	1187c <__assert_fail@plt+0x574>
   1192c:	ldr	r2, [sp, #88]	; 0x58
   11930:	sub	r0, r0, #256	; 0x100
   11934:	cmp	r0, #4
   11938:	bhi	12f28 <__assert_fail@plt+0x1c20>
   1193c:	add	r1, pc, #0
   11940:	ldr	pc, [r1, r0, lsl #2]
   11944:	andeq	r1, r1, r0, ror r8
   11948:	andeq	r1, r1, r8, asr r9
   1194c:	andeq	r1, r1, ip, asr #20
   11950:	andeq	r1, r1, ip, ror sl
   11954:	andeq	r1, r1, r8, lsl #19
   11958:	movw	r0, #61833	; 0xf189
   1195c:	mov	r1, #1
   11960:	movt	r0, #2
   11964:	strb	r9, [r0]
   11968:	movw	r0, #61832	; 0xf188
   1196c:	movt	r0, #2
   11970:	strb	r1, [r0]
   11974:	movw	r0, #61834	; 0xf18a
   11978:	movt	r0, #2
   1197c:	strb	r9, [r0]
   11980:	mov	r0, r2
   11984:	b	1187c <__assert_fail@plt+0x574>
   11988:	mov	r0, #1
   1198c:	mov	r8, #1
   11990:	str	r0, [sp, #72]	; 0x48
   11994:	mov	r0, r2
   11998:	b	1187c <__assert_fail@plt+0x574>
   1199c:	movw	r0, #61833	; 0xf189
   119a0:	mov	r1, #1
   119a4:	movt	r0, #2
   119a8:	strb	r1, [r0]
   119ac:	movw	r0, #61832	; 0xf188
   119b0:	movt	r0, #2
   119b4:	strb	r9, [r0]
   119b8:	movw	r0, #61834	; 0xf18a
   119bc:	movt	r0, #2
   119c0:	strb	r9, [r0]
   119c4:	mov	r0, r3
   119c8:	b	1187c <__assert_fail@plt+0x574>
   119cc:	movw	r0, #61816	; 0xf178
   119d0:	movw	r1, #57135	; 0xdf2f
   119d4:	mov	r2, #5
   119d8:	movt	r0, #2
   119dc:	movt	r1, #1
   119e0:	ldr	r0, [r0]
   119e4:	str	r0, [sp, #144]	; 0x90
   119e8:	mov	r0, #0
   119ec:	bl	11104 <dcgettext@plt>
   119f0:	str	r0, [sp, #12]
   119f4:	ldr	r0, [sp, #144]	; 0x90
   119f8:	mvn	r1, #0
   119fc:	mov	r2, #0
   11a00:	mov	r3, #0
   11a04:	str	r9, [sp, #16]
   11a08:	str	r1, [sp]
   11a0c:	str	r1, [sp, #4]
   11a10:	movw	r1, #56611	; 0xdd23
   11a14:	movt	r1, #1
   11a18:	str	r1, [sp, #8]
   11a1c:	bl	1c548 <__assert_fail@plt+0xb240>
   11a20:	movw	r2, #61824	; 0xf180
   11a24:	tst	r0, #7
   11a28:	movt	r2, #2
   11a2c:	strd	r0, [r2]
   11a30:	movw	r1, #61816	; 0xf178
   11a34:	ldr	r0, [sp, #88]	; 0x58
   11a38:	movt	r1, #2
   11a3c:	ldr	r1, [r1]
   11a40:	str	r1, [sp, #144]	; 0x90
   11a44:	beq	1187c <__assert_fail@plt+0x574>
   11a48:	b	12ed0 <__assert_fail@plt+0x1bc8>
   11a4c:	movw	r0, #61833	; 0xf189
   11a50:	movt	r0, #2
   11a54:	strb	r9, [r0]
   11a58:	movw	r0, #61832	; 0xf188
   11a5c:	movt	r0, #2
   11a60:	strb	r9, [r0]
   11a64:	movw	r0, #61834	; 0xf18a
   11a68:	movt	r0, #2
   11a6c:	b	11860 <__assert_fail@plt+0x558>
   11a70:	mov	r8, #0
   11a74:	mov	r0, r3
   11a78:	b	1187c <__assert_fail@plt+0x574>
   11a7c:	movw	r0, #61836	; 0xf18c
   11a80:	movt	r0, #2
   11a84:	b	11860 <__assert_fail@plt+0x558>
   11a88:	movw	r0, #61837	; 0xf18d
   11a8c:	mov	r1, #1
   11a90:	movt	r0, #2
   11a94:	strb	r1, [r0]
   11a98:	mov	r0, r3
   11a9c:	b	1187c <__assert_fail@plt+0x574>
   11aa0:	cmn	r0, #1
   11aa4:	bne	12e64 <__assert_fail@plt+0x1b5c>
   11aa8:	movw	r1, #61840	; 0xf190
   11aac:	mov	r0, #1
   11ab0:	ldr	r3, [sp, #88]	; 0x58
   11ab4:	movw	r2, #513	; 0x201
   11ab8:	movt	r1, #2
   11abc:	strb	r0, [r1]
   11ac0:	movw	r0, #61824	; 0xf180
   11ac4:	movt	r0, #2
   11ac8:	ldrd	r0, [r0]
   11acc:	subs	r2, r0, r2
   11ad0:	sbcs	r2, r1, #0
   11ad4:	bcs	12f30 <__assert_fail@plt+0x1c28>
   11ad8:	orrs	r2, r0, r1
   11adc:	beq	11aec <__assert_fail@plt+0x7e4>
   11ae0:	lsr	r0, r0, #2
   11ae4:	orr	r0, r0, r1, lsl #30
   11ae8:	b	11b04 <__assert_fail@plt+0x7fc>
   11aec:	movw	r2, #61824	; 0xf180
   11af0:	mov	r1, #0
   11af4:	mov	r0, #512	; 0x200
   11af8:	movt	r2, #2
   11afc:	strd	r0, [r2]
   11b00:	mov	r0, #128	; 0x80
   11b04:	movw	r1, #61844	; 0xf194
   11b08:	cmp	r8, #0
   11b0c:	movt	r1, #2
   11b10:	str	r0, [r1]
   11b14:	ldr	r0, [sp, #72]	; 0x48
   11b18:	eor	r1, r0, #1
   11b1c:	tsteq	r1, #1
   11b20:	beq	12f98 <__assert_fail@plt+0x1c90>
   11b24:	eor	r0, r3, #1
   11b28:	tst	r0, #1
   11b2c:	bne	11b44 <__assert_fail@plt+0x83c>
   11b30:	movw	r2, #61837	; 0xf18d
   11b34:	movt	r2, #2
   11b38:	ldrb	r2, [r2]
   11b3c:	cmp	r2, #0
   11b40:	bne	12fa4 <__assert_fail@plt+0x1c9c>
   11b44:	orr	r1, r1, r0
   11b48:	tst	r1, #1
   11b4c:	beq	12fb0 <__assert_fail@plt+0x1ca8>
   11b50:	mov	r1, #0
   11b54:	cmp	r8, #0
   11b58:	movwlt	r1, #1
   11b5c:	orr	r1, r1, r0
   11b60:	tst	r1, #1
   11b64:	beq	12fbc <__assert_fail@plt+0x1cb4>
   11b68:	movw	r1, #61835	; 0xf18b
   11b6c:	movt	r1, #2
   11b70:	ldrb	r1, [r1]
   11b74:	mvn	r1, r1
   11b78:	orr	r1, r3, r1
   11b7c:	tst	r1, #1
   11b80:	beq	12fc8 <__assert_fail@plt+0x1cc0>
   11b84:	movw	r1, #61832	; 0xf188
   11b88:	movt	r1, #2
   11b8c:	ldrb	r1, [r1]
   11b90:	mvn	r1, r1
   11b94:	orr	r1, r3, r1
   11b98:	tst	r1, #1
   11b9c:	beq	12fd4 <__assert_fail@plt+0x1ccc>
   11ba0:	movw	r1, #61833	; 0xf189
   11ba4:	movt	r1, #2
   11ba8:	ldrb	r1, [r1]
   11bac:	mvn	r1, r1
   11bb0:	orr	r1, r3, r1
   11bb4:	tst	r1, #1
   11bb8:	beq	12fe0 <__assert_fail@plt+0x1cd8>
   11bbc:	movw	r1, #61834	; 0xf18a
   11bc0:	movt	r1, #2
   11bc4:	ldrb	r1, [r1]
   11bc8:	mvn	r1, r1
   11bcc:	orr	r1, r3, r1
   11bd0:	tst	r1, #1
   11bd4:	beq	12fec <__assert_fail@plt+0x1ce4>
   11bd8:	movw	r1, #61836	; 0xf18c
   11bdc:	movt	r1, #2
   11be0:	ldrb	r1, [r1]
   11be4:	and	r0, r1, r0
   11be8:	tst	r0, #1
   11bec:	bne	12ff8 <__assert_fail@plt+0x1cf0>
   11bf0:	movw	r0, #61792	; 0xf160
   11bf4:	add	r2, r4, r5, lsl #2
   11bf8:	movt	r0, #2
   11bfc:	ldr	r0, [r0]
   11c00:	cmp	r0, r5
   11c04:	add	r0, r4, r0, lsl #2
   11c08:	mov	r4, #1
   11c0c:	movweq	r1, #59328	; 0xe7c0
   11c10:	movteq	r1, #1
   11c14:	streq	r1, [r2], #4
   11c18:	cmp	r0, r2
   11c1c:	bcs	12dec <__assert_fail@plt+0x1ae4>
   11c20:	mov	r1, #42	; 0x2a
   11c24:	cmp	r8, #1
   11c28:	mov	r7, r0
   11c2c:	rsb	r0, sl, #7
   11c30:	sub	r6, fp, #116	; 0x74
   11c34:	movw	sl, #58853	; 0xe5e5
   11c38:	sub	r9, fp, #120	; 0x78
   11c3c:	str	r2, [sp, #84]	; 0x54
   11c40:	movwlt	r1, #32
   11c44:	movt	sl, #1
   11c48:	str	r1, [sp, #32]
   11c4c:	add	r1, sp, #148	; 0x94
   11c50:	add	r8, r1, r0
   11c54:	add	r0, r6, #7
   11c58:	and	r1, r0, #7
   11c5c:	str	r8, [sp, #44]	; 0x2c
   11c60:	sub	r0, r0, r1
   11c64:	str	r0, [sp, #24]
   11c68:	rsb	r0, r1, #7
   11c6c:	mov	r1, #1
   11c70:	add	r0, r6, r0
   11c74:	str	r0, [sp, #28]
   11c78:	mov	r0, r7
   11c7c:	sub	r7, fp, #124	; 0x7c
   11c80:	b	11cc4 <__assert_fail@plt+0x9bc>
   11c84:	ldr	r4, [sp, #76]	; 0x4c
   11c88:	cmp	r6, #0
   11c8c:	bge	12ab0 <__assert_fail@plt+0x17a8>
   11c90:	b	12b18 <__assert_fail@plt+0x1810>
   11c94:	mov	r1, r4
   11c98:	bl	11284 <__overflow@plt>
   11c9c:	b	11f28 <__assert_fail@plt+0xc20>
   11ca0:	mov	r1, #32
   11ca4:	bl	11284 <__overflow@plt>
   11ca8:	b	11ec8 <__assert_fail@plt+0xbc0>
   11cac:	ldr	r1, [sp, #32]
   11cb0:	bl	11284 <__overflow@plt>
   11cb4:	b	11ef4 <__assert_fail@plt+0xbec>
   11cb8:	mov	r1, #92	; 0x5c
   11cbc:	bl	11284 <__overflow@plt>
   11cc0:	b	11dcc <__assert_fail@plt+0xac4>
   11cc4:	ldr	r6, [r0]
   11cc8:	tst	r3, #1
   11ccc:	str	r1, [sp, #96]	; 0x60
   11cd0:	str	r0, [sp, #116]	; 0x74
   11cd4:	beq	11d18 <__assert_fail@plt+0xa10>
   11cd8:	movw	r1, #59328	; 0xe7c0
   11cdc:	mov	r0, r6
   11ce0:	movt	r1, #1
   11ce4:	bl	1108c <strcmp@plt>
   11ce8:	cmp	r0, #0
   11cec:	str	r0, [sp, #80]	; 0x50
   11cf0:	beq	11f40 <__assert_fail@plt+0xc38>
   11cf4:	movw	r1, #58834	; 0xe5d2
   11cf8:	mov	r0, r6
   11cfc:	movt	r1, #1
   11d00:	bl	19900 <__assert_fail@plt+0x85f8>
   11d04:	cmp	r0, #0
   11d08:	beq	11fdc <__assert_fail@plt+0xcd4>
   11d0c:	mov	r5, r0
   11d10:	str	r6, [sp, #92]	; 0x5c
   11d14:	b	11f74 <__assert_fail@plt+0xc6c>
   11d18:	ldr	r1, [sp, #68]	; 0x44
   11d1c:	mov	r0, r6
   11d20:	sub	r2, fp, #116	; 0x74
   11d24:	mov	r5, r6
   11d28:	bl	13050 <__assert_fail@plt+0x1d48>
   11d2c:	movw	r7, #61844	; 0xf194
   11d30:	mov	r4, #0
   11d34:	cmp	r0, #0
   11d38:	movt	r7, #2
   11d3c:	beq	11f2c <__assert_fail@plt+0xc24>
   11d40:	movw	r0, #61837	; 0xf18d
   11d44:	mov	r4, #10
   11d48:	movt	r0, #2
   11d4c:	ldrb	r0, [r0]
   11d50:	cmp	r0, #0
   11d54:	mov	r0, #0
   11d58:	movwne	r4, #0
   11d5c:	str	r0, [sp, #144]	; 0x90
   11d60:	bne	11dd4 <__assert_fail@plt+0xacc>
   11d64:	mov	r0, r5
   11d68:	mov	r1, #92	; 0x5c
   11d6c:	bl	11200 <strchr@plt>
   11d70:	cmp	r0, #0
   11d74:	bne	11da0 <__assert_fail@plt+0xa98>
   11d78:	mov	r0, r5
   11d7c:	mov	r1, #10
   11d80:	bl	11200 <strchr@plt>
   11d84:	cmp	r0, #0
   11d88:	bne	11da0 <__assert_fail@plt+0xa98>
   11d8c:	mov	r0, r5
   11d90:	mov	r1, #13
   11d94:	bl	11200 <strchr@plt>
   11d98:	cmp	r0, #0
   11d9c:	beq	11dd4 <__assert_fail@plt+0xacc>
   11da0:	movw	r0, #61812	; 0xf174
   11da4:	movt	r0, #2
   11da8:	ldr	r0, [r0]
   11dac:	ldr	r1, [r0, #20]
   11db0:	ldr	r2, [r0, #24]
   11db4:	cmp	r1, r2
   11db8:	bcs	11cb8 <__assert_fail@plt+0x9b0>
   11dbc:	add	r2, r1, #1
   11dc0:	str	r2, [r0, #20]
   11dc4:	mov	r0, #92	; 0x5c
   11dc8:	strb	r0, [r1]
   11dcc:	mov	r0, #1
   11dd0:	str	r0, [sp, #144]	; 0x90
   11dd4:	ldr	r0, [sp, #72]	; 0x48
   11dd8:	tst	r0, #1
   11ddc:	beq	11e60 <__assert_fail@plt+0xb58>
   11de0:	movw	r0, #61812	; 0xf174
   11de4:	movt	r0, #2
   11de8:	ldr	r1, [r0]
   11dec:	movw	r0, #55667	; 0xd973
   11df0:	movt	r0, #1
   11df4:	bl	11068 <fputs_unlocked@plt>
   11df8:	movw	r0, #61824	; 0xf180
   11dfc:	movt	r0, #2
   11e00:	ldrd	r2, [r0]
   11e04:	lsr	r0, r2, #9
   11e08:	orr	r0, r0, r3, lsl #23
   11e0c:	orr	r0, r0, r3, lsr #9
   11e10:	cmp	r0, #0
   11e14:	bne	11e28 <__assert_fail@plt+0xb20>
   11e18:	movw	r1, #58839	; 0xe5d7
   11e1c:	mov	r0, #1
   11e20:	movt	r1, #1
   11e24:	bl	1123c <__printf_chk@plt>
   11e28:	movw	r0, #61812	; 0xf174
   11e2c:	movt	r0, #2
   11e30:	ldr	r1, [r0]
   11e34:	mov	r6, r0
   11e38:	movw	r0, #58845	; 0xe5dd
   11e3c:	movt	r0, #1
   11e40:	bl	11068 <fputs_unlocked@plt>
   11e44:	ldr	r1, [sp, #144]	; 0x90
   11e48:	mov	r0, r5
   11e4c:	bl	131d0 <__assert_fail@plt+0x1ec8>
   11e50:	ldr	r1, [r6]
   11e54:	movw	r0, #58848	; 0xe5e0
   11e58:	movt	r0, #1
   11e5c:	bl	11068 <fputs_unlocked@plt>
   11e60:	ldr	r0, [r7]
   11e64:	cmp	r0, #2
   11e68:	bcc	11e90 <__assert_fail@plt+0xb88>
   11e6c:	mov	r6, #0
   11e70:	ldrb	r2, [r8, r6]
   11e74:	mov	r0, #1
   11e78:	mov	r1, sl
   11e7c:	bl	1123c <__printf_chk@plt>
   11e80:	ldr	r0, [r7]
   11e84:	add	r6, r6, #1
   11e88:	cmp	r6, r0, lsr #1
   11e8c:	bcc	11e70 <__assert_fail@plt+0xb68>
   11e90:	ldr	r0, [sp, #72]	; 0x48
   11e94:	tst	r0, #1
   11e98:	bne	11f00 <__assert_fail@plt+0xbf8>
   11e9c:	movw	r0, #61812	; 0xf174
   11ea0:	movt	r0, #2
   11ea4:	ldr	r0, [r0]
   11ea8:	ldr	r1, [r0, #20]
   11eac:	ldr	r2, [r0, #24]
   11eb0:	cmp	r1, r2
   11eb4:	bcs	11ca0 <__assert_fail@plt+0x998>
   11eb8:	add	r2, r1, #1
   11ebc:	str	r2, [r0, #20]
   11ec0:	mov	r0, #32
   11ec4:	strb	r0, [r1]
   11ec8:	movw	r0, #61812	; 0xf174
   11ecc:	movt	r0, #2
   11ed0:	ldr	r0, [r0]
   11ed4:	ldr	r1, [r0, #20]
   11ed8:	ldr	r2, [r0, #24]
   11edc:	cmp	r1, r2
   11ee0:	bcs	11cac <__assert_fail@plt+0x9a4>
   11ee4:	add	r2, r1, #1
   11ee8:	str	r2, [r0, #20]
   11eec:	ldr	r0, [sp, #32]
   11ef0:	strb	r0, [r1]
   11ef4:	ldr	r1, [sp, #144]	; 0x90
   11ef8:	mov	r0, r5
   11efc:	bl	131d0 <__assert_fail@plt+0x1ec8>
   11f00:	movw	r0, #61812	; 0xf174
   11f04:	movt	r0, #2
   11f08:	ldr	r0, [r0]
   11f0c:	ldr	r1, [r0, #20]
   11f10:	ldr	r2, [r0, #24]
   11f14:	cmp	r1, r2
   11f18:	bcs	11c94 <__assert_fail@plt+0x98c>
   11f1c:	add	r2, r1, #1
   11f20:	str	r2, [r0, #20]
   11f24:	strb	r4, [r1]
   11f28:	ldr	r4, [sp, #96]	; 0x60
   11f2c:	ldr	r3, [sp, #88]	; 0x58
   11f30:	ldr	r2, [sp, #84]	; 0x54
   11f34:	ldr	r0, [sp, #116]	; 0x74
   11f38:	sub	r7, fp, #124	; 0x7c
   11f3c:	b	12ddc <__assert_fail@plt+0x1ad4>
   11f40:	movw	r1, #61848	; 0xf198
   11f44:	mov	r0, #1
   11f48:	mov	r2, #5
   11f4c:	movt	r1, #2
   11f50:	strb	r0, [r1]
   11f54:	movw	r1, #57830	; 0xe1e6
   11f58:	mov	r0, #0
   11f5c:	movt	r1, #1
   11f60:	bl	11104 <dcgettext@plt>
   11f64:	str	r0, [sp, #92]	; 0x5c
   11f68:	movw	r0, #61808	; 0xf170
   11f6c:	movt	r0, #2
   11f70:	ldr	r5, [r0]
   11f74:	mov	r0, #0
   11f78:	mov	r1, #0
   11f7c:	mov	r6, #0
   11f80:	mov	r4, #0
   11f84:	mov	sl, #0
   11f88:	str	r5, [sp, #140]	; 0x8c
   11f8c:	str	r0, [sp, #60]	; 0x3c
   11f90:	mov	r0, #0
   11f94:	str	r1, [fp, #-124]	; 0xffffff84
   11f98:	str	r1, [fp, #-120]	; 0xffffff88
   11f9c:	str	r0, [sp, #64]	; 0x40
   11fa0:	mov	r0, #0
   11fa4:	str	r0, [sp, #56]	; 0x38
   11fa8:	mov	r0, #0
   11fac:	str	r0, [sp, #52]	; 0x34
   11fb0:	mov	r0, #0
   11fb4:	str	r0, [sp, #48]	; 0x30
   11fb8:	mov	r0, #0
   11fbc:	str	r0, [sp, #76]	; 0x4c
   11fc0:	mov	r0, #0
   11fc4:	str	r0, [sp, #128]	; 0x80
   11fc8:	mov	r0, #0
   11fcc:	str	r0, [sp, #132]	; 0x84
   11fd0:	mov	r0, #0
   11fd4:	str	r0, [sp, #124]	; 0x7c
   11fd8:	b	121f8 <__assert_fail@plt+0xef0>
   11fdc:	bl	1120c <__errno_location@plt>
   11fe0:	ldr	r4, [r0]
   11fe4:	mov	r0, #0
   11fe8:	mov	r1, #3
   11fec:	mov	r2, r6
   11ff0:	mov	r5, #0
   11ff4:	bl	1b408 <__assert_fail@plt+0xa100>
   11ff8:	movw	r2, #57166	; 0xdf4e
   11ffc:	mov	r3, r0
   12000:	mov	r0, #0
   12004:	mov	r1, r4
   12008:	movt	r2, #1
   1200c:	b	12dc4 <__assert_fail@plt+0x1abc>
   12010:	adds	r0, r0, #1
   12014:	sub	r9, fp, #120	; 0x78
   12018:	sub	r7, fp, #124	; 0x7c
   1201c:	str	r0, [sp, #56]	; 0x38
   12020:	movw	r0, #61832	; 0xf188
   12024:	adc	r1, r1, #0
   12028:	movt	r0, #2
   1202c:	str	r1, [sp, #52]	; 0x34
   12030:	ldrb	r0, [r0]
   12034:	cmp	r0, #0
   12038:	bne	12160 <__assert_fail@plt+0xe58>
   1203c:	ldr	sl, [sp, #136]	; 0x88
   12040:	ldr	r4, [sp, #120]	; 0x78
   12044:	cmp	r8, #0
   12048:	beq	12078 <__assert_fail@plt+0xd70>
   1204c:	movw	r0, #61812	; 0xf174
   12050:	movt	r0, #2
   12054:	ldr	r0, [r0]
   12058:	ldr	r1, [r0, #20]
   1205c:	ldr	r2, [r0, #24]
   12060:	cmp	r1, r2
   12064:	bcs	121e0 <__assert_fail@plt+0xed8>
   12068:	add	r2, r1, #1
   1206c:	str	r2, [r0, #20]
   12070:	mov	r0, #92	; 0x5c
   12074:	strb	r0, [r1]
   12078:	ldr	r0, [sp, #36]	; 0x24
   1207c:	mov	r1, r8
   12080:	bl	131d0 <__assert_fail@plt+0x1ec8>
   12084:	movw	r1, #58443	; 0xe44b
   12088:	mov	r0, #0
   1208c:	mov	r2, #5
   12090:	movt	r1, #1
   12094:	bl	11104 <dcgettext@plt>
   12098:	movw	r1, #60133	; 0xeae5
   1209c:	mov	r2, r0
   120a0:	mov	r0, #1
   120a4:	movt	r1, #1
   120a8:	bl	1123c <__printf_chk@plt>
   120ac:	ldr	r5, [sp, #140]	; 0x8c
   120b0:	ldr	r6, [sp, #144]	; 0x90
   120b4:	b	12170 <__assert_fail@plt+0xe68>
   120b8:	cmp	r7, r6
   120bc:	bne	120e0 <__assert_fail@plt+0xdd8>
   120c0:	movw	r0, #61834	; 0xf18a
   120c4:	movt	r0, #2
   120c8:	ldrb	r0, [r0]
   120cc:	cmp	r0, #0
   120d0:	beq	120e0 <__assert_fail@plt+0xdd8>
   120d4:	mov	r0, #1
   120d8:	str	r0, [sp, #60]	; 0x3c
   120dc:	b	12158 <__assert_fail@plt+0xe50>
   120e0:	cmp	r8, #0
   120e4:	beq	12114 <__assert_fail@plt+0xe0c>
   120e8:	movw	r0, #61812	; 0xf174
   120ec:	movt	r0, #2
   120f0:	ldr	r0, [r0]
   120f4:	ldr	r1, [r0, #20]
   120f8:	ldr	r2, [r0, #24]
   120fc:	cmp	r1, r2
   12100:	bcs	121ec <__assert_fail@plt+0xee4>
   12104:	add	r2, r1, #1
   12108:	str	r2, [r0, #20]
   1210c:	mov	r0, #92	; 0x5c
   12110:	strb	r0, [r1]
   12114:	ldr	r0, [sp, #36]	; 0x24
   12118:	mov	r1, r8
   1211c:	bl	131d0 <__assert_fail@plt+0x1ec8>
   12120:	cmp	r7, r6
   12124:	beq	1217c <__assert_fail@plt+0xe74>
   12128:	movw	r1, #58463	; 0xe45f
   1212c:	mov	r0, #0
   12130:	mov	r2, #5
   12134:	movt	r1, #1
   12138:	bl	11104 <dcgettext@plt>
   1213c:	movw	r1, #60133	; 0xeae5
   12140:	mov	r2, r0
   12144:	mov	r0, #1
   12148:	movt	r1, #1
   1214c:	bl	1123c <__printf_chk@plt>
   12150:	str	r9, [sp, #48]	; 0x30
   12154:	str	r4, [sp, #76]	; 0x4c
   12158:	sub	r9, fp, #120	; 0x78
   1215c:	sub	r7, fp, #124	; 0x7c
   12160:	ldr	sl, [sp, #136]	; 0x88
   12164:	ldr	r5, [sp, #140]	; 0x8c
   12168:	ldr	r6, [sp, #144]	; 0x90
   1216c:	ldr	r4, [sp, #120]	; 0x78
   12170:	mov	r0, #1
   12174:	str	r0, [sp, #64]	; 0x40
   12178:	b	12a3c <__assert_fail@plt+0x1734>
   1217c:	movw	r0, #61834	; 0xf18a
   12180:	ldr	sl, [sp, #136]	; 0x88
   12184:	ldr	r5, [sp, #140]	; 0x8c
   12188:	ldr	r6, [sp, #144]	; 0x90
   1218c:	mov	r1, #1
   12190:	sub	r7, fp, #124	; 0x7c
   12194:	movt	r0, #2
   12198:	str	r1, [sp, #60]	; 0x3c
   1219c:	ldrb	r0, [r0]
   121a0:	cmp	r0, #0
   121a4:	bne	121d8 <__assert_fail@plt+0xed0>
   121a8:	movw	r1, #58470	; 0xe466
   121ac:	mov	r0, #0
   121b0:	mov	r2, #5
   121b4:	movt	r1, #1
   121b8:	bl	11104 <dcgettext@plt>
   121bc:	movw	r1, #60133	; 0xeae5
   121c0:	mov	r2, r0
   121c4:	mov	r0, #1
   121c8:	str	r0, [sp, #60]	; 0x3c
   121cc:	mov	r0, #1
   121d0:	movt	r1, #1
   121d4:	bl	1123c <__printf_chk@plt>
   121d8:	sub	r9, fp, #120	; 0x78
   121dc:	b	1216c <__assert_fail@plt+0xe64>
   121e0:	mov	r1, #92	; 0x5c
   121e4:	bl	11284 <__overflow@plt>
   121e8:	b	12078 <__assert_fail@plt+0xd70>
   121ec:	mov	r1, #92	; 0x5c
   121f0:	bl	11284 <__overflow@plt>
   121f4:	b	12114 <__assert_fail@plt+0xe0c>
   121f8:	adds	r6, r6, #1
   121fc:	adc	r4, r4, #0
   12200:	str	r6, [sp, #144]	; 0x90
   12204:	orrs	r0, r6, r4
   12208:	beq	12e28 <__assert_fail@plt+0x1b20>
   1220c:	mov	r0, r9
   12210:	mov	r1, r7
   12214:	mov	r2, #10
   12218:	mov	r3, r5
   1221c:	bl	11080 <__getdelim@plt>
   12220:	cmp	r0, #1
   12224:	blt	12a4c <__assert_fail@plt+0x1744>
   12228:	mov	r8, r0
   1222c:	ldr	r0, [fp, #-120]	; 0xffffff88
   12230:	ldrb	r1, [r0]
   12234:	cmp	r1, #35	; 0x23
   12238:	beq	12458 <__assert_fail@plt+0x1150>
   1223c:	add	r1, r0, r8
   12240:	ldrb	r1, [r1, #-1]
   12244:	sub	r1, r1, #10
   12248:	clz	r1, r1
   1224c:	lsr	r3, r1, #5
   12250:	sub	r1, r8, r3
   12254:	cmp	r1, #0
   12258:	mov	r2, r1
   1225c:	subgt	r2, r2, #1
   12260:	ldrb	r2, [r0, r2]
   12264:	sub	r2, r2, #13
   12268:	clz	r2, r2
   1226c:	lsr	r2, r2, #5
   12270:	subs	r5, r1, r2
   12274:	beq	12458 <__assert_fail@plt+0x1150>
   12278:	mov	r7, #0
   1227c:	str	sl, [sp, #136]	; 0x88
   12280:	strb	r7, [r0, r5]
   12284:	ldr	r6, [fp, #-120]	; 0xffffff88
   12288:	b	12290 <__assert_fail@plt+0xf88>
   1228c:	add	r7, r7, #1
   12290:	ldrb	r0, [r6, r7]
   12294:	cmp	r0, #9
   12298:	cmpne	r0, #32
   1229c:	beq	1228c <__assert_fail@plt+0xf84>
   122a0:	cmp	r0, #92	; 0x5c
   122a4:	movw	r9, #55667	; 0xd973
   122a8:	str	r2, [sp, #104]	; 0x68
   122ac:	mov	r2, #7
   122b0:	str	r4, [sp, #120]	; 0x78
   122b4:	str	r3, [sp, #108]	; 0x6c
   122b8:	mov	r4, #0
   122bc:	movne	r0, #0
   122c0:	addeq	r7, r7, #1
   122c4:	movt	r9, #1
   122c8:	moveq	r0, #1
   122cc:	add	sl, r6, r7
   122d0:	mov	r1, r9
   122d4:	str	r0, [sp, #100]	; 0x64
   122d8:	mov	r0, sl
   122dc:	bl	112d8 <strncmp@plt>
   122e0:	cmp	r0, #0
   122e4:	str	r5, [sp, #112]	; 0x70
   122e8:	beq	12464 <__assert_fail@plt+0x115c>
   122ec:	movw	r0, #61840	; 0xf190
   122f0:	ldrb	r1, [sl]
   122f4:	movt	r0, #2
   122f8:	ldrb	r0, [r0]
   122fc:	sub	r1, r1, #92	; 0x5c
   12300:	clz	r1, r1
   12304:	cmp	r0, #0
   12308:	lsr	r1, r1, #5
   1230c:	sub	r0, r5, r7
   12310:	addne	r1, r1, #3
   12314:	cmp	r0, r1
   12318:	bcc	12994 <__assert_fail@plt+0x168c>
   1231c:	movw	r0, #61844	; 0xf194
   12320:	mov	r9, sl
   12324:	movt	r0, #2
   12328:	str	r4, [r0]
   1232c:	bl	111d0 <__ctype_b_loc@plt>
   12330:	ldrb	r2, [sl]
   12334:	ldr	r1, [r0]
   12338:	add	r2, r1, r2, lsl #1
   1233c:	ldrb	r2, [r2, #1]
   12340:	tst	r2, #16
   12344:	beq	12994 <__assert_fail@plt+0x168c>
   12348:	add	lr, r6, r7
   1234c:	mov	r3, #0
   12350:	mov	r2, #0
   12354:	add	r4, lr, #1
   12358:	ldrb	r5, [r4, r2]
   1235c:	add	r3, r3, #4
   12360:	add	r2, r2, #1
   12364:	add	r5, r1, r5, lsl #1
   12368:	ldrb	r5, [r5, #1]
   1236c:	tst	r5, #16
   12370:	bne	12358 <__assert_fail@plt+0x1050>
   12374:	movw	r1, #61844	; 0xf194
   12378:	cmp	r2, #2
   1237c:	mov	r5, #0
   12380:	movt	r1, #2
   12384:	str	r2, [r1]
   12388:	bcc	12994 <__assert_fail@plt+0x168c>
   1238c:	cmp	r2, #128	; 0x80
   12390:	bhi	12994 <__assert_fail@plt+0x168c>
   12394:	ands	r1, r2, #1
   12398:	bne	12994 <__assert_fail@plt+0x168c>
   1239c:	movw	r1, #61824	; 0xf180
   123a0:	movt	r1, #2
   123a4:	stm	r1, {r3, r5}
   123a8:	mov	r1, lr
   123ac:	ldrb	r3, [r1, r2]!
   123b0:	cmp	r3, #32
   123b4:	cmpne	r3, #9
   123b8:	bne	12994 <__assert_fail@plt+0x168c>
   123bc:	add	r3, r1, #1
   123c0:	mov	r1, #0
   123c4:	strb	r1, [r3, #-1]
   123c8:	add	r3, r7, r2
   123cc:	ldr	r0, [r0]
   123d0:	add	ip, r3, #1
   123d4:	ldrb	r4, [r9, r1]
   123d8:	add	r4, r0, r4, lsl #1
   123dc:	ldrb	r4, [r4, #1]
   123e0:	tst	r4, #16
   123e4:	beq	12994 <__assert_fail@plt+0x168c>
   123e8:	add	r1, r1, #1
   123ec:	cmp	r1, r2
   123f0:	bcc	123d4 <__assert_fail@plt+0x10cc>
   123f4:	ldrb	r0, [r9, r1]
   123f8:	cmp	r0, #0
   123fc:	bne	12994 <__assert_fail@plt+0x168c>
   12400:	ldr	r0, [sp, #108]	; 0x6c
   12404:	ldr	r1, [sp, #104]	; 0x68
   12408:	add	r0, r0, r1
   1240c:	add	r0, r0, #2
   12410:	sub	r0, r0, r8
   12414:	add	r0, r7, r0
   12418:	adds	r0, r0, r2
   1241c:	beq	12758 <__assert_fail@plt+0x1450>
   12420:	add	r0, lr, r2
   12424:	ldrb	r0, [r0, #1]
   12428:	cmp	r0, #32
   1242c:	cmpne	r0, #42	; 0x2a
   12430:	bne	12758 <__assert_fail@plt+0x1450>
   12434:	movw	r0, #61704	; 0xf108
   12438:	movt	r0, #2
   1243c:	ldr	r0, [r0]
   12440:	cmp	r0, #1
   12444:	movwne	r0, #61704	; 0xf108
   12448:	addne	ip, r3, #2
   1244c:	movtne	r0, #2
   12450:	strne	r5, [r0]
   12454:	b	1277c <__assert_fail@plt+0x1474>
   12458:	ldr	r5, [sp, #140]	; 0x8c
   1245c:	ldr	r6, [sp, #144]	; 0x90
   12460:	b	12a3c <__assert_fail@plt+0x1734>
   12464:	add	r5, r7, #7
   12468:	mov	r0, sl
   1246c:	mov	r1, r9
   12470:	ldrb	sl, [r6, r5]
   12474:	strb	r4, [r6, r5]
   12478:	bl	1108c <strcmp@plt>
   1247c:	cmp	r0, #0
   12480:	bne	12994 <__assert_fail@plt+0x168c>
   12484:	cmp	sl, #40	; 0x28
   12488:	mov	r2, #0
   1248c:	mov	r1, #512	; 0x200
   12490:	moveq	r0, #40	; 0x28
   12494:	strbeq	r0, [r6, r5]
   12498:	movw	r0, #61824	; 0xf180
   1249c:	addne	r5, r7, #8
   124a0:	cmp	sl, #45	; 0x2d
   124a4:	movt	r0, #2
   124a8:	stm	r0, {r1, r2}
   124ac:	mov	r1, #128	; 0x80
   124b0:	bne	1251c <__assert_fail@plt+0x1214>
   124b4:	str	r2, [sp]
   124b8:	add	r0, r6, r5
   124bc:	sub	r1, fp, #44	; 0x2c
   124c0:	mov	r2, #0
   124c4:	sub	r3, fp, #40	; 0x28
   124c8:	bl	1c550 <__assert_fail@plt+0xb248>
   124cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   124d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   124d4:	subs	r1, r2, #1
   124d8:	sbc	r7, r3, #0
   124dc:	tst	r2, #7
   124e0:	cmpeq	r0, #0
   124e4:	bne	12994 <__assert_fail@plt+0x168c>
   124e8:	movw	r0, #61824	; 0xf180
   124ec:	movt	r0, #2
   124f0:	ldm	r0, {r0, r9}
   124f4:	subs	r0, r1, r0
   124f8:	sbcs	r0, r7, r9
   124fc:	bcs	12994 <__assert_fail@plt+0x168c>
   12500:	movw	r0, #61824	; 0xf180
   12504:	movt	r0, #2
   12508:	strd	r2, [r0]
   1250c:	lsr	r0, r2, #2
   12510:	orr	r1, r0, r3, lsl #30
   12514:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12518:	sub	r5, r0, r6
   1251c:	movw	r0, #61844	; 0xf194
   12520:	str	r1, [sp, #40]	; 0x28
   12524:	movt	r0, #2
   12528:	str	r1, [r0]
   1252c:	ldrb	r0, [r6, r5]
   12530:	sub	r0, r0, #32
   12534:	clz	r0, r0
   12538:	lsr	r1, r0, #5
   1253c:	add	r0, r5, r1
   12540:	ldrb	r2, [r6, r0]
   12544:	cmp	r2, #40	; 0x28
   12548:	bne	12994 <__assert_fail@plt+0x168c>
   1254c:	ldr	r2, [sp, #112]	; 0x70
   12550:	add	r0, r0, #1
   12554:	subs	r2, r2, r0
   12558:	beq	12994 <__assert_fail@plt+0x168c>
   1255c:	ldr	r3, [sp, #108]	; 0x6c
   12560:	ldr	r7, [sp, #104]	; 0x68
   12564:	add	r0, r6, r0
   12568:	str	r0, [sp, #36]	; 0x24
   1256c:	add	r2, r3, r7
   12570:	add	r3, r5, r3
   12574:	sub	r0, r6, r2
   12578:	sub	r2, r8, r2
   1257c:	add	r3, r3, r7
   12580:	add	r1, r3, r1
   12584:	add	r2, r6, r2
   12588:	add	r6, r2, #2
   1258c:	add	r2, r2, #1
   12590:	add	r3, r1, #2
   12594:	add	ip, r1, #3
   12598:	add	r9, r1, #1
   1259c:	mov	r4, r9
   125a0:	mov	lr, ip
   125a4:	mov	r1, r3
   125a8:	mov	r7, r0
   125ac:	mov	r9, r2
   125b0:	mov	sl, r6
   125b4:	cmp	r8, r3
   125b8:	beq	12608 <__assert_fail@plt+0x1300>
   125bc:	add	r0, r7, r8
   125c0:	sub	r2, r9, #1
   125c4:	mov	r5, r9
   125c8:	add	r3, r1, #1
   125cc:	add	ip, lr, #1
   125d0:	add	r9, r4, #1
   125d4:	ldrb	r0, [r0, #-1]
   125d8:	str	r0, [sp, #112]	; 0x70
   125dc:	sub	r0, sl, #1
   125e0:	ldr	r6, [sp, #112]	; 0x70
   125e4:	str	r0, [sp, #108]	; 0x6c
   125e8:	sub	r0, r7, #1
   125ec:	cmp	r6, #41	; 0x29
   125f0:	ldr	r6, [sp, #108]	; 0x6c
   125f4:	bne	1259c <__assert_fail@plt+0x1294>
   125f8:	add	ip, r0, r8
   125fc:	mov	r0, #0
   12600:	mov	r9, r5
   12604:	b	1261c <__assert_fail@plt+0x1314>
   12608:	ldr	ip, [sp, #36]	; 0x24
   1260c:	mov	r0, #1
   12610:	ldrb	r2, [ip]
   12614:	cmp	r2, #41	; 0x29
   12618:	bne	12994 <__assert_fail@plt+0x168c>
   1261c:	ldr	r2, [sp, #100]	; 0x64
   12620:	cmp	r2, #0
   12624:	beq	126b8 <__assert_fail@plt+0x13b0>
   12628:	cmp	r0, #0
   1262c:	ldr	r0, [sp, #36]	; 0x24
   12630:	bne	126ac <__assert_fail@plt+0x13a4>
   12634:	ldr	r0, [sp, #36]	; 0x24
   12638:	sub	r1, r8, r1
   1263c:	mov	r3, #0
   12640:	ldr	r2, [sp, #36]	; 0x24
   12644:	ldrb	r6, [r2, r3]
   12648:	cmp	r6, #92	; 0x5c
   1264c:	beq	1265c <__assert_fail@plt+0x1354>
   12650:	cmp	r6, #0
   12654:	bne	1269c <__assert_fail@plt+0x1394>
   12658:	b	12994 <__assert_fail@plt+0x168c>
   1265c:	sub	r2, r8, r3
   12660:	cmp	r2, lr
   12664:	beq	12994 <__assert_fail@plt+0x168c>
   12668:	ldr	r2, [sp, #36]	; 0x24
   1266c:	add	r3, r3, #1
   12670:	ldrb	r2, [r2, r3]
   12674:	cmp	r2, #92	; 0x5c
   12678:	beq	12698 <__assert_fail@plt+0x1390>
   1267c:	mov	r6, #10
   12680:	cmp	r2, #110	; 0x6e
   12684:	beq	1269c <__assert_fail@plt+0x1394>
   12688:	cmp	r2, #114	; 0x72
   1268c:	bne	12994 <__assert_fail@plt+0x168c>
   12690:	mov	r6, #13
   12694:	b	1269c <__assert_fail@plt+0x1394>
   12698:	mov	r6, #92	; 0x5c
   1269c:	add	r3, r3, #1
   126a0:	strb	r6, [r0], #1
   126a4:	cmp	r3, r1
   126a8:	bcc	12640 <__assert_fail@plt+0x1338>
   126ac:	cmp	r0, ip
   126b0:	movcc	r1, #0
   126b4:	strbcc	r1, [r0]
   126b8:	sub	r0, r8, r4
   126bc:	mov	r1, #0
   126c0:	strb	r1, [ip]
   126c4:	b	126d8 <__assert_fail@plt+0x13d0>
   126c8:	add	sl, sl, #1
   126cc:	add	r9, r9, #1
   126d0:	add	r8, r8, #1
   126d4:	add	r0, r0, #1
   126d8:	ldrb	r1, [r7, r8]
   126dc:	cmp	r1, #9
   126e0:	cmpne	r1, #32
   126e4:	beq	126c8 <__assert_fail@plt+0x13c0>
   126e8:	cmp	r1, #61	; 0x3d
   126ec:	beq	126fc <__assert_fail@plt+0x13f4>
   126f0:	b	12994 <__assert_fail@plt+0x168c>
   126f4:	add	sl, sl, #1
   126f8:	add	r9, r9, #1
   126fc:	ldrb	r6, [r9]
   12700:	cmp	r6, #32
   12704:	cmpne	r6, #9
   12708:	beq	126f4 <__assert_fail@plt+0x13ec>
   1270c:	ldr	r0, [sp, #40]	; 0x28
   12710:	cmp	r0, #0
   12714:	beq	1274c <__assert_fail@plt+0x1444>
   12718:	bl	111d0 <__ctype_b_loc@plt>
   1271c:	ldr	r0, [r0]
   12720:	mov	r1, #0
   12724:	uxtb	r2, r6
   12728:	add	r2, r0, r2, lsl #1
   1272c:	ldrb	r2, [r2, #1]
   12730:	tst	r2, #16
   12734:	beq	12994 <__assert_fail@plt+0x168c>
   12738:	ldr	r2, [sp, #40]	; 0x28
   1273c:	ldrb	r6, [sl], #1
   12740:	add	r1, r1, #1
   12744:	cmp	r1, r2
   12748:	bcc	12724 <__assert_fail@plt+0x141c>
   1274c:	cmp	r6, #0
   12750:	bne	12994 <__assert_fail@plt+0x168c>
   12754:	b	12834 <__assert_fail@plt+0x152c>
   12758:	movw	r0, #61704	; 0xf108
   1275c:	movt	r0, #2
   12760:	ldr	r0, [r0]
   12764:	cmp	r0, #0
   12768:	beq	12994 <__assert_fail@plt+0x168c>
   1276c:	movw	r1, #61704	; 0xf108
   12770:	mov	r0, #1
   12774:	movt	r1, #2
   12778:	str	r0, [r1]
   1277c:	ldr	r0, [sp, #100]	; 0x64
   12780:	add	r2, r6, ip
   12784:	cmp	r0, #0
   12788:	beq	12830 <__assert_fail@plt+0x1528>
   1278c:	ldr	r0, [sp, #112]	; 0x70
   12790:	subs	lr, r0, ip
   12794:	mov	r0, r2
   12798:	beq	12810 <__assert_fail@plt+0x1508>
   1279c:	sub	ip, lr, #1
   127a0:	mov	r3, #0
   127a4:	mov	r0, r2
   127a8:	ldrb	r7, [r2, r3]
   127ac:	mov	r1, r2
   127b0:	cmp	r7, #92	; 0x5c
   127b4:	beq	127c4 <__assert_fail@plt+0x14bc>
   127b8:	cmp	r7, #0
   127bc:	bne	127fc <__assert_fail@plt+0x14f4>
   127c0:	b	12994 <__assert_fail@plt+0x168c>
   127c4:	cmp	r3, ip
   127c8:	beq	12994 <__assert_fail@plt+0x168c>
   127cc:	add	r3, r3, #1
   127d0:	ldrb	r4, [r1, r3]
   127d4:	cmp	r4, #92	; 0x5c
   127d8:	beq	127f8 <__assert_fail@plt+0x14f0>
   127dc:	mov	r7, #10
   127e0:	cmp	r4, #110	; 0x6e
   127e4:	beq	127fc <__assert_fail@plt+0x14f4>
   127e8:	cmp	r4, #114	; 0x72
   127ec:	bne	12994 <__assert_fail@plt+0x168c>
   127f0:	mov	r7, #13
   127f4:	b	127fc <__assert_fail@plt+0x14f4>
   127f8:	mov	r7, #92	; 0x5c
   127fc:	add	r3, r3, #1
   12800:	strb	r7, [r0], #1
   12804:	mov	r2, r1
   12808:	cmp	r3, lr
   1280c:	bcc	127a8 <__assert_fail@plt+0x14a0>
   12810:	ldr	r1, [sp, #112]	; 0x70
   12814:	str	r2, [sp, #36]	; 0x24
   12818:	add	r1, r6, r1
   1281c:	cmp	r0, r1
   12820:	strbcc	r5, [r0]
   12824:	cmp	r2, #0
   12828:	bne	12834 <__assert_fail@plt+0x152c>
   1282c:	b	12994 <__assert_fail@plt+0x168c>
   12830:	str	r2, [sp, #36]	; 0x24
   12834:	ldr	r0, [sp, #80]	; 0x50
   12838:	cmp	r0, #0
   1283c:	bne	12858 <__assert_fail@plt+0x1550>
   12840:	ldr	r0, [sp, #36]	; 0x24
   12844:	movw	r1, #59328	; 0xe7c0
   12848:	movt	r1, #1
   1284c:	bl	1108c <strcmp@plt>
   12850:	cmp	r0, #0
   12854:	beq	12994 <__assert_fail@plt+0x168c>
   12858:	movw	r0, #61832	; 0xf188
   1285c:	ldr	r5, [sp, #36]	; 0x24
   12860:	mov	r8, #0
   12864:	movt	r0, #2
   12868:	ldrb	r0, [r0]
   1286c:	cmp	r0, #0
   12870:	bne	1288c <__assert_fail@plt+0x1584>
   12874:	mov	r0, r5
   12878:	mov	r1, #10
   1287c:	bl	11200 <strchr@plt>
   12880:	mov	r8, r0
   12884:	cmp	r0, #0
   12888:	movwne	r8, #1
   1288c:	ldr	r1, [sp, #24]
   12890:	mov	r0, r5
   12894:	sub	r2, fp, #40	; 0x28
   12898:	bl	13050 <__assert_fail@plt+0x1d48>
   1289c:	cmp	r0, #0
   128a0:	ldr	r0, [sp, #56]	; 0x38
   128a4:	ldr	r1, [sp, #52]	; 0x34
   128a8:	beq	12010 <__assert_fail@plt+0xd08>
   128ac:	ldrb	r0, [fp, #-40]	; 0xffffffd8
   128b0:	mov	r5, r9
   128b4:	sub	r9, fp, #120	; 0x78
   128b8:	cmp	r0, #0
   128bc:	movwne	r0, #61835	; 0xf18b
   128c0:	movtne	r0, #2
   128c4:	ldrbne	r0, [r0]
   128c8:	cmpne	r0, #0
   128cc:	bne	1215c <__assert_fail@plt+0xe54>
   128d0:	movw	r0, #61844	; 0xf194
   128d4:	movw	r4, #59144	; 0xe708
   128d8:	mov	r7, #0
   128dc:	movt	r0, #2
   128e0:	movt	r4, #1
   128e4:	ldr	r0, [r0]
   128e8:	lsr	r6, r0, #1
   128ec:	cmp	r7, r0, lsr #1
   128f0:	beq	12940 <__assert_fail@plt+0x1638>
   128f4:	bl	111ac <__ctype_tolower_loc@plt>
   128f8:	ldr	r0, [r0]
   128fc:	mov	r7, #0
   12900:	ldr	r1, [sp, #28]
   12904:	ldrb	r3, [r5, r7, lsl #1]
   12908:	ldrb	r1, [r1, r7]
   1290c:	ldr	r3, [r0, r3, lsl #2]
   12910:	ldrb	r2, [r4, r1, lsr #4]
   12914:	cmp	r3, r2
   12918:	addeq	r2, r5, r7, lsl #1
   1291c:	andeq	r1, r1, #15
   12920:	ldrbeq	r2, [r2, #1]
   12924:	ldrbeq	r1, [r4, r1]
   12928:	ldreq	r2, [r0, r2, lsl #2]
   1292c:	cmpeq	r2, r1
   12930:	bne	12940 <__assert_fail@plt+0x1638>
   12934:	add	r7, r7, #1
   12938:	cmp	r7, r6
   1293c:	bcc	12900 <__assert_fail@plt+0x15f8>
   12940:	movw	r2, #61832	; 0xf188
   12944:	ldr	r0, [sp, #48]	; 0x30
   12948:	ldr	r1, [sp, #76]	; 0x4c
   1294c:	movt	r2, #2
   12950:	ldrb	r2, [r2]
   12954:	adds	r9, r0, #1
   12958:	adc	r4, r1, #0
   1295c:	cmp	r7, r6
   12960:	movne	r0, r9
   12964:	movne	r1, r4
   12968:	cmp	r2, #0
   1296c:	beq	120b8 <__assert_fail@plt+0xdb0>
   12970:	ldr	r3, [sp, #60]	; 0x3c
   12974:	sub	r2, r7, r6
   12978:	str	r0, [sp, #48]	; 0x30
   1297c:	str	r1, [sp, #76]	; 0x4c
   12980:	clz	r2, r2
   12984:	lsr	r2, r2, #5
   12988:	orr	r3, r3, r2
   1298c:	str	r3, [sp, #60]	; 0x3c
   12990:	b	12158 <__assert_fail@plt+0xe50>
   12994:	ldr	r0, [sp, #124]	; 0x7c
   12998:	ldr	sl, [sp, #136]	; 0x88
   1299c:	ldr	r6, [sp, #144]	; 0x90
   129a0:	ldr	r4, [sp, #120]	; 0x78
   129a4:	adds	r0, r0, #1
   129a8:	str	r0, [sp, #124]	; 0x7c
   129ac:	movw	r0, #61833	; 0xf189
   129b0:	adc	sl, sl, #0
   129b4:	movt	r0, #2
   129b8:	ldrb	r0, [r0]
   129bc:	cmp	r0, #1
   129c0:	bne	12a18 <__assert_fail@plt+0x1710>
   129c4:	movw	r1, #58395	; 0xe41b
   129c8:	mov	r0, #0
   129cc:	mov	r2, #5
   129d0:	movt	r1, #1
   129d4:	bl	11104 <dcgettext@plt>
   129d8:	ldr	r2, [sp, #92]	; 0x5c
   129dc:	mov	r7, r0
   129e0:	mov	r0, #0
   129e4:	mov	r1, #3
   129e8:	mov	r5, sl
   129ec:	bl	1b408 <__assert_fail@plt+0xa100>
   129f0:	mov	r3, r0
   129f4:	movw	r0, #55667	; 0xd973
   129f8:	mov	r1, #0
   129fc:	mov	r2, r7
   12a00:	str	r6, [sp]
   12a04:	str	r4, [sp, #4]
   12a08:	movt	r0, #1
   12a0c:	str	r0, [sp, #8]
   12a10:	mov	r0, #0
   12a14:	bl	1117c <error@plt>
   12a18:	ldr	r0, [sp, #128]	; 0x80
   12a1c:	ldr	r5, [sp, #140]	; 0x8c
   12a20:	sub	r9, fp, #120	; 0x78
   12a24:	sub	r7, fp, #124	; 0x7c
   12a28:	adds	r0, r0, #1
   12a2c:	str	r0, [sp, #128]	; 0x80
   12a30:	ldr	r0, [sp, #132]	; 0x84
   12a34:	adc	r0, r0, #0
   12a38:	str	r0, [sp, #132]	; 0x84
   12a3c:	ldrb	r0, [r5]
   12a40:	tst	r0, #48	; 0x30
   12a44:	beq	121f8 <__assert_fail@plt+0xef0>
   12a48:	b	12a50 <__assert_fail@plt+0x1748>
   12a4c:	ldr	r5, [sp, #140]	; 0x8c
   12a50:	ldr	r0, [fp, #-120]	; 0xffffff88
   12a54:	str	sl, [sp, #136]	; 0x88
   12a58:	bl	199b4 <__assert_fail@plt+0x86ac>
   12a5c:	ldr	r0, [r5]
   12a60:	mov	r6, #0
   12a64:	ands	r4, r0, #32
   12a68:	ldr	r0, [sp, #80]	; 0x50
   12a6c:	mvneq	r6, #0
   12a70:	cmp	r0, #0
   12a74:	beq	12af8 <__assert_fail@plt+0x17f0>
   12a78:	mov	r0, r5
   12a7c:	bl	19808 <__assert_fail@plt+0x8500>
   12a80:	ldr	r8, [sp, #44]	; 0x2c
   12a84:	movw	sl, #58853	; 0xe5e5
   12a88:	cmp	r4, #0
   12a8c:	movt	sl, #1
   12a90:	bne	11c84 <__assert_fail@plt+0x97c>
   12a94:	ldr	r4, [sp, #76]	; 0x4c
   12a98:	cmp	r0, #0
   12a9c:	beq	12aa8 <__assert_fail@plt+0x17a0>
   12aa0:	bl	1120c <__errno_location@plt>
   12aa4:	ldr	r6, [r0]
   12aa8:	cmp	r6, #0
   12aac:	blt	12b18 <__assert_fail@plt+0x1810>
   12ab0:	movw	r4, #57166	; 0xdf4e
   12ab4:	movt	r4, #1
   12ab8:	bne	12ad4 <__assert_fail@plt+0x17cc>
   12abc:	movw	r1, #58473	; 0xe469
   12ac0:	mov	r0, #0
   12ac4:	mov	r2, #5
   12ac8:	movt	r1, #1
   12acc:	bl	11104 <dcgettext@plt>
   12ad0:	mov	r4, r0
   12ad4:	ldr	r2, [sp, #92]	; 0x5c
   12ad8:	mov	r0, #0
   12adc:	mov	r1, #3
   12ae0:	mov	r5, #0
   12ae4:	bl	1b408 <__assert_fail@plt+0xa100>
   12ae8:	mov	r3, r0
   12aec:	mov	r0, #0
   12af0:	mov	r1, r6
   12af4:	b	12dc0 <__assert_fail@plt+0x1ab8>
   12af8:	mov	r0, r5
   12afc:	bl	112b4 <clearerr_unlocked@plt>
   12b00:	ldr	r8, [sp, #44]	; 0x2c
   12b04:	ldr	r4, [sp, #76]	; 0x4c
   12b08:	movw	sl, #58853	; 0xe5e5
   12b0c:	movt	sl, #1
   12b10:	cmp	r6, #0
   12b14:	bge	12ab0 <__assert_fail@plt+0x17a8>
   12b18:	ldr	r0, [sp, #64]	; 0x40
   12b1c:	tst	r0, #1
   12b20:	beq	12d88 <__assert_fail@plt+0x1a80>
   12b24:	movw	r0, #61832	; 0xf188
   12b28:	ldr	r3, [sp, #88]	; 0x58
   12b2c:	ldr	r2, [sp, #84]	; 0x54
   12b30:	ldr	r5, [sp, #60]	; 0x3c
   12b34:	ldr	r6, [sp, #48]	; 0x30
   12b38:	movt	r0, #2
   12b3c:	ldrb	r0, [r0]
   12b40:	cmp	r0, #0
   12b44:	bne	12d30 <__assert_fail@plt+0x1a28>
   12b48:	str	r5, [sp, #60]	; 0x3c
   12b4c:	ldr	r6, [sp, #124]	; 0x7c
   12b50:	ldr	r5, [sp, #136]	; 0x88
   12b54:	orrs	r0, r6, r5
   12b58:	beq	12bcc <__assert_fail@plt+0x18c4>
   12b5c:	cmp	r5, #0
   12b60:	mov	r3, r6
   12b64:	beq	12b8c <__assert_fail@plt+0x1884>
   12b68:	movw	r4, #16960	; 0x4240
   12b6c:	mov	r0, r6
   12b70:	mov	r1, r5
   12b74:	mov	r3, #0
   12b78:	movt	r4, #15
   12b7c:	mov	r2, r4
   12b80:	bl	1d708 <__assert_fail@plt+0xc400>
   12b84:	add	r3, r2, r4
   12b88:	ldr	r4, [sp, #76]	; 0x4c
   12b8c:	movw	r1, #58535	; 0xe4a7
   12b90:	movw	r2, #58578	; 0xe4d2
   12b94:	mov	r0, #5
   12b98:	str	r0, [sp]
   12b9c:	mov	r0, #0
   12ba0:	movt	r1, #1
   12ba4:	movt	r2, #1
   12ba8:	bl	112fc <dcngettext@plt>
   12bac:	mov	r2, r0
   12bb0:	mov	r0, #0
   12bb4:	mov	r1, #0
   12bb8:	str	r6, [sp]
   12bbc:	str	r5, [sp, #4]
   12bc0:	bl	1117c <error@plt>
   12bc4:	ldr	r3, [sp, #88]	; 0x58
   12bc8:	ldr	r2, [sp, #84]	; 0x54
   12bcc:	ldr	r6, [sp, #56]	; 0x38
   12bd0:	ldr	r5, [sp, #52]	; 0x34
   12bd4:	orrs	r0, r6, r5
   12bd8:	beq	12c4c <__assert_fail@plt+0x1944>
   12bdc:	cmp	r5, #0
   12be0:	mov	r3, r6
   12be4:	beq	12c0c <__assert_fail@plt+0x1904>
   12be8:	movw	r4, #16960	; 0x4240
   12bec:	mov	r0, r6
   12bf0:	mov	r1, r5
   12bf4:	mov	r3, #0
   12bf8:	movt	r4, #15
   12bfc:	mov	r2, r4
   12c00:	bl	1d708 <__assert_fail@plt+0xc400>
   12c04:	add	r3, r2, r4
   12c08:	ldr	r4, [sp, #76]	; 0x4c
   12c0c:	movw	r1, #58623	; 0xe4ff
   12c10:	movw	r2, #58667	; 0xe52b
   12c14:	mov	r0, #5
   12c18:	str	r0, [sp]
   12c1c:	mov	r0, #0
   12c20:	movt	r1, #1
   12c24:	movt	r2, #1
   12c28:	bl	112fc <dcngettext@plt>
   12c2c:	mov	r2, r0
   12c30:	mov	r0, #0
   12c34:	mov	r1, #0
   12c38:	str	r6, [sp]
   12c3c:	str	r5, [sp, #4]
   12c40:	bl	1117c <error@plt>
   12c44:	ldr	r3, [sp, #88]	; 0x58
   12c48:	ldr	r2, [sp, #84]	; 0x54
   12c4c:	ldr	r6, [sp, #48]	; 0x30
   12c50:	ldr	r5, [sp, #60]	; 0x3c
   12c54:	orrs	r0, r6, r4
   12c58:	beq	12ccc <__assert_fail@plt+0x19c4>
   12c5c:	cmp	r4, #0
   12c60:	mov	r3, r6
   12c64:	beq	12c8c <__assert_fail@plt+0x1984>
   12c68:	mov	r1, r4
   12c6c:	movw	r4, #16960	; 0x4240
   12c70:	mov	r0, r6
   12c74:	mov	r3, #0
   12c78:	movt	r4, #15
   12c7c:	mov	r2, r4
   12c80:	bl	1d708 <__assert_fail@plt+0xc400>
   12c84:	add	r3, r2, r4
   12c88:	ldr	r4, [sp, #76]	; 0x4c
   12c8c:	movw	r1, #58712	; 0xe558
   12c90:	movw	r2, #58758	; 0xe586
   12c94:	mov	r0, #5
   12c98:	str	r0, [sp]
   12c9c:	mov	r0, #0
   12ca0:	movt	r1, #1
   12ca4:	movt	r2, #1
   12ca8:	bl	112fc <dcngettext@plt>
   12cac:	mov	r2, r0
   12cb0:	mov	r0, #0
   12cb4:	mov	r1, #0
   12cb8:	str	r6, [sp]
   12cbc:	str	r4, [sp, #4]
   12cc0:	bl	1117c <error@plt>
   12cc4:	ldr	r3, [sp, #88]	; 0x58
   12cc8:	ldr	r2, [sp, #84]	; 0x54
   12ccc:	movw	r0, #61835	; 0xf18b
   12cd0:	movt	r0, #2
   12cd4:	ldrb	r0, [r0]
   12cd8:	mvn	r0, r0
   12cdc:	orr	r0, r5, r0
   12ce0:	tst	r0, #1
   12ce4:	bne	12d30 <__assert_fail@plt+0x1a28>
   12ce8:	movw	r1, #58805	; 0xe5b5
   12cec:	mov	r0, #0
   12cf0:	mov	r2, #5
   12cf4:	movt	r1, #1
   12cf8:	bl	11104 <dcgettext@plt>
   12cfc:	ldr	r2, [sp, #92]	; 0x5c
   12d00:	mov	r4, r0
   12d04:	mov	r0, #0
   12d08:	mov	r1, #3
   12d0c:	bl	1b408 <__assert_fail@plt+0xa100>
   12d10:	mov	r2, r4
   12d14:	ldr	r4, [sp, #76]	; 0x4c
   12d18:	mov	r3, r0
   12d1c:	mov	r0, #0
   12d20:	mov	r1, #0
   12d24:	bl	1117c <error@plt>
   12d28:	ldr	r2, [sp, #84]	; 0x54
   12d2c:	ldr	r3, [sp, #88]	; 0x58
   12d30:	ldr	r0, [sp, #56]	; 0x38
   12d34:	ldr	r1, [sp, #52]	; 0x34
   12d38:	orr	r0, r0, r6
   12d3c:	orr	r1, r1, r4
   12d40:	orrs	r0, r0, r1
   12d44:	mvn	r1, r5
   12d48:	mov	r5, #0
   12d4c:	movwne	r0, #1
   12d50:	orr	r0, r1, r0
   12d54:	tst	r0, #1
   12d58:	bne	12dd0 <__assert_fail@plt+0x1ac8>
   12d5c:	ldr	r0, [sp, #132]	; 0x84
   12d60:	ldr	r1, [sp, #128]	; 0x80
   12d64:	orr	r0, r1, r0
   12d68:	movw	r1, #61836	; 0xf18c
   12d6c:	movt	r1, #2
   12d70:	clz	r0, r0
   12d74:	ldrb	r1, [r1]
   12d78:	lsr	r0, r0, #5
   12d7c:	eor	r1, r1, #1
   12d80:	orr	r5, r0, r1
   12d84:	b	12dd0 <__assert_fail@plt+0x1ac8>
   12d88:	movw	r1, #58488	; 0xe478
   12d8c:	mov	r0, #0
   12d90:	mov	r2, #5
   12d94:	mov	r5, #0
   12d98:	movt	r1, #1
   12d9c:	bl	11104 <dcgettext@plt>
   12da0:	ldr	r2, [sp, #92]	; 0x5c
   12da4:	mov	r4, r0
   12da8:	mov	r0, #0
   12dac:	mov	r1, #3
   12db0:	bl	1b408 <__assert_fail@plt+0xa100>
   12db4:	mov	r3, r0
   12db8:	mov	r0, #0
   12dbc:	mov	r1, #0
   12dc0:	mov	r2, r4
   12dc4:	bl	1117c <error@plt>
   12dc8:	ldr	r3, [sp, #88]	; 0x58
   12dcc:	ldr	r2, [sp, #84]	; 0x54
   12dd0:	ldr	r0, [sp, #96]	; 0x60
   12dd4:	and	r4, r0, r5
   12dd8:	ldr	r0, [sp, #116]	; 0x74
   12ddc:	add	r0, r0, #4
   12de0:	mov	r1, r4
   12de4:	cmp	r0, r2
   12de8:	bcc	11cc4 <__assert_fail@plt+0x9bc>
   12dec:	movw	r0, #61848	; 0xf198
   12df0:	movt	r0, #2
   12df4:	ldrb	r0, [r0]
   12df8:	cmp	r0, #0
   12dfc:	beq	12e18 <__assert_fail@plt+0x1b10>
   12e00:	movw	r0, #61808	; 0xf170
   12e04:	movt	r0, #2
   12e08:	ldr	r0, [r0]
   12e0c:	bl	19808 <__assert_fail@plt+0x8500>
   12e10:	cmn	r0, #1
   12e14:	beq	13024 <__assert_fail@plt+0x1d1c>
   12e18:	mov	r0, #1
   12e1c:	bic	r0, r0, r4
   12e20:	sub	sp, fp, #28
   12e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e28:	movw	r1, #58367	; 0xe3ff
   12e2c:	mov	r0, #0
   12e30:	mov	r2, #5
   12e34:	movt	r1, #1
   12e38:	bl	11104 <dcgettext@plt>
   12e3c:	ldr	r2, [sp, #92]	; 0x5c
   12e40:	mov	r4, r0
   12e44:	mov	r0, #0
   12e48:	mov	r1, #3
   12e4c:	bl	1b408 <__assert_fail@plt+0xa100>
   12e50:	mov	r3, r0
   12e54:	mov	r0, #1
   12e58:	mov	r1, #0
   12e5c:	mov	r2, r4
   12e60:	bl	1117c <error@plt>
   12e64:	cmn	r0, #3
   12e68:	bne	12ec0 <__assert_fail@plt+0x1bb8>
   12e6c:	movw	r0, #61708	; 0xf10c
   12e70:	movw	r2, #57227	; 0xdf8b
   12e74:	mov	r1, #0
   12e78:	movw	r7, #57213	; 0xdf7d
   12e7c:	movt	r0, #2
   12e80:	movt	r2, #1
   12e84:	str	r1, [sp, #8]
   12e88:	movw	r1, #57097	; 0xdf09
   12e8c:	movt	r7, #1
   12e90:	ldr	r3, [r0]
   12e94:	movw	r0, #61812	; 0xf174
   12e98:	str	r2, [sp, #4]
   12e9c:	movw	r2, #57199	; 0xdf6f
   12ea0:	movt	r1, #1
   12ea4:	str	r7, [sp]
   12ea8:	movt	r0, #2
   12eac:	movt	r2, #1
   12eb0:	ldr	r0, [r0]
   12eb4:	bl	1bc7c <__assert_fail@plt+0xa974>
   12eb8:	mov	r0, #0
   12ebc:	bl	111dc <exit@plt>
   12ec0:	cmn	r0, #2
   12ec4:	bne	12f28 <__assert_fail@plt+0x1c20>
   12ec8:	mov	r0, #0
   12ecc:	bl	11410 <__assert_fail@plt+0x108>
   12ed0:	movw	r1, #57150	; 0xdf3e
   12ed4:	mov	r0, #0
   12ed8:	mov	r2, #5
   12edc:	movt	r1, #1
   12ee0:	bl	11104 <dcgettext@plt>
   12ee4:	mov	r4, r0
   12ee8:	ldr	r0, [sp, #144]	; 0x90
   12eec:	bl	1b6b4 <__assert_fail@plt+0xa3ac>
   12ef0:	mov	r3, r0
   12ef4:	mov	r0, #0
   12ef8:	mov	r1, #0
   12efc:	mov	r2, r4
   12f00:	bl	1117c <error@plt>
   12f04:	movw	r1, #57169	; 0xdf51
   12f08:	mov	r0, #0
   12f0c:	mov	r2, #5
   12f10:	movt	r1, #1
   12f14:	bl	11104 <dcgettext@plt>
   12f18:	mov	r2, r0
   12f1c:	mov	r0, #1
   12f20:	mov	r1, #0
   12f24:	bl	1117c <error@plt>
   12f28:	mov	r0, #1
   12f2c:	bl	11410 <__assert_fail@plt+0x108>
   12f30:	movw	r1, #57150	; 0xdf3e
   12f34:	mov	r0, #0
   12f38:	mov	r2, #5
   12f3c:	movt	r1, #1
   12f40:	bl	11104 <dcgettext@plt>
   12f44:	mov	r4, r0
   12f48:	ldr	r0, [sp, #144]	; 0x90
   12f4c:	bl	1b6b4 <__assert_fail@plt+0xa3ac>
   12f50:	mov	r3, r0
   12f54:	mov	r0, #0
   12f58:	mov	r1, #0
   12f5c:	mov	r2, r4
   12f60:	bl	1117c <error@plt>
   12f64:	movw	r1, #57240	; 0xdf98
   12f68:	mov	r0, #0
   12f6c:	mov	r2, #5
   12f70:	movt	r1, #1
   12f74:	bl	11104 <dcgettext@plt>
   12f78:	mov	r4, r0
   12f7c:	movw	r0, #55667	; 0xd973
   12f80:	movt	r0, #1
   12f84:	bl	1b6b4 <__assert_fail@plt+0xa3ac>
   12f88:	mov	r3, r0
   12f8c:	mov	r0, #512	; 0x200
   12f90:	str	r0, [sp]
   12f94:	b	12e54 <__assert_fail@plt+0x1b4c>
   12f98:	movw	r1, #57280	; 0xdfc0
   12f9c:	movt	r1, #1
   12fa0:	b	13000 <__assert_fail@plt+0x1cf8>
   12fa4:	movw	r1, #57315	; 0xdfe3
   12fa8:	movt	r1, #1
   12fac:	b	13000 <__assert_fail@plt+0x1cf8>
   12fb0:	movw	r1, #57375	; 0xe01f
   12fb4:	movt	r1, #1
   12fb8:	b	13000 <__assert_fail@plt+0x1cf8>
   12fbc:	movw	r1, #57432	; 0xe058
   12fc0:	movt	r1, #1
   12fc4:	b	13000 <__assert_fail@plt+0x1cf8>
   12fc8:	movw	r1, #57505	; 0xe0a1
   12fcc:	movt	r1, #1
   12fd0:	b	13000 <__assert_fail@plt+0x1cf8>
   12fd4:	movw	r1, #57577	; 0xe0e9
   12fd8:	movt	r1, #1
   12fdc:	b	13000 <__assert_fail@plt+0x1cf8>
   12fe0:	movw	r1, #57641	; 0xe129
   12fe4:	movt	r1, #1
   12fe8:	b	13000 <__assert_fail@plt+0x1cf8>
   12fec:	movw	r1, #57703	; 0xe167
   12ff0:	movt	r1, #1
   12ff4:	b	13000 <__assert_fail@plt+0x1cf8>
   12ff8:	movw	r1, #57766	; 0xe1a6
   12ffc:	movt	r1, #1
   13000:	mov	r0, #0
   13004:	mov	r2, #5
   13008:	bl	11104 <dcgettext@plt>
   1300c:	mov	r2, r0
   13010:	mov	r0, #0
   13014:	mov	r1, #0
   13018:	bl	1117c <error@plt>
   1301c:	mov	r0, #1
   13020:	bl	11410 <__assert_fail@plt+0x108>
   13024:	bl	1120c <__errno_location@plt>
   13028:	ldr	r4, [r0]
   1302c:	movw	r1, #57830	; 0xe1e6
   13030:	mov	r0, #0
   13034:	mov	r2, #5
   13038:	movt	r1, #1
   1303c:	bl	11104 <dcgettext@plt>
   13040:	mov	r2, r0
   13044:	mov	r0, #1
   13048:	mov	r1, r4
   1304c:	bl	1117c <error@plt>
   13050:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13054:	add	fp, sp, #24
   13058:	mov	r6, r1
   1305c:	movw	r1, #59328	; 0xe7c0
   13060:	mov	r4, r2
   13064:	mov	r8, r0
   13068:	movt	r1, #1
   1306c:	bl	1108c <strcmp@plt>
   13070:	mov	r5, r0
   13074:	mov	r0, #0
   13078:	cmp	r5, #0
   1307c:	strb	r0, [r4]
   13080:	beq	130ec <__assert_fail@plt+0x1de4>
   13084:	movw	r1, #58834	; 0xe5d2
   13088:	mov	r0, r8
   1308c:	movt	r1, #1
   13090:	bl	19900 <__assert_fail@plt+0x85f8>
   13094:	mov	r7, r0
   13098:	cmp	r0, #0
   1309c:	bne	13108 <__assert_fail@plt+0x1e00>
   130a0:	movw	r0, #61835	; 0xf18b
   130a4:	movt	r0, #2
   130a8:	ldrb	r5, [r0]
   130ac:	bl	1120c <__errno_location@plt>
   130b0:	cmp	r5, #1
   130b4:	ldreq	r1, [r0]
   130b8:	cmpeq	r1, #2
   130bc:	beq	131c0 <__assert_fail@plt+0x1eb8>
   130c0:	ldr	r4, [r0]
   130c4:	mov	r0, #0
   130c8:	mov	r1, #3
   130cc:	mov	r2, r8
   130d0:	mov	r5, #0
   130d4:	bl	1b408 <__assert_fail@plt+0xa100>
   130d8:	movw	r2, #57166	; 0xdf4e
   130dc:	mov	r3, r0
   130e0:	mov	r0, #0
   130e4:	mov	r1, r4
   130e8:	b	131b0 <__assert_fail@plt+0x1ea8>
   130ec:	movw	r0, #61848	; 0xf198
   130f0:	mov	r1, #1
   130f4:	movt	r0, #2
   130f8:	strb	r1, [r0]
   130fc:	movw	r0, #61808	; 0xf170
   13100:	movt	r0, #2
   13104:	ldr	r7, [r0]
   13108:	mov	r0, r7
   1310c:	mov	r1, #2
   13110:	bl	197cc <__assert_fail@plt+0x84c4>
   13114:	movw	r0, #61824	; 0xf180
   13118:	movt	r0, #2
   1311c:	ldrd	r0, [r0]
   13120:	lsr	r0, r0, #3
   13124:	orr	r2, r0, r1, lsl #29
   13128:	mov	r0, r7
   1312c:	mov	r1, r6
   13130:	bl	195d4 <__assert_fail@plt+0x82cc>
   13134:	cmp	r0, #0
   13138:	beq	13148 <__assert_fail@plt+0x1e40>
   1313c:	bl	1120c <__errno_location@plt>
   13140:	ldr	r6, [r0]
   13144:	b	1314c <__assert_fail@plt+0x1e44>
   13148:	mov	r6, #0
   1314c:	mov	r0, r7
   13150:	cmp	r5, #0
   13154:	beq	13178 <__assert_fail@plt+0x1e70>
   13158:	bl	19808 <__assert_fail@plt+0x8500>
   1315c:	cmp	r6, #0
   13160:	bne	1317c <__assert_fail@plt+0x1e74>
   13164:	cmp	r0, #0
   13168:	beq	1317c <__assert_fail@plt+0x1e74>
   1316c:	bl	1120c <__errno_location@plt>
   13170:	ldr	r6, [r0]
   13174:	b	1317c <__assert_fail@plt+0x1e74>
   13178:	bl	112b4 <clearerr_unlocked@plt>
   1317c:	cmp	r6, #0
   13180:	moveq	r5, #1
   13184:	moveq	r0, r5
   13188:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1318c:	mov	r0, #0
   13190:	mov	r1, #3
   13194:	mov	r2, r8
   13198:	mov	r5, #0
   1319c:	bl	1b408 <__assert_fail@plt+0xa100>
   131a0:	movw	r2, #57166	; 0xdf4e
   131a4:	mov	r3, r0
   131a8:	mov	r0, #0
   131ac:	mov	r1, r6
   131b0:	movt	r2, #1
   131b4:	bl	1117c <error@plt>
   131b8:	mov	r0, r5
   131bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131c0:	mov	r5, #1
   131c4:	mov	r0, r5
   131c8:	strb	r5, [r4]
   131cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131d4:	add	fp, sp, #24
   131d8:	mov	r4, r0
   131dc:	cmp	r1, #0
   131e0:	beq	13294 <__assert_fail@plt+0x1f8c>
   131e4:	movw	r5, #61812	; 0xf174
   131e8:	movw	r8, #58830	; 0xe5ce
   131ec:	movw	r6, #58833	; 0xe5d1
   131f0:	movw	r7, #58836	; 0xe5d4
   131f4:	movt	r5, #2
   131f8:	movt	r8, #1
   131fc:	movt	r6, #1
   13200:	movt	r7, #1
   13204:	b	13210 <__assert_fail@plt+0x1f08>
   13208:	bl	11068 <fputs_unlocked@plt>
   1320c:	add	r4, r4, #1
   13210:	ldrb	r1, [r4]
   13214:	cmp	r1, #12
   13218:	ble	13238 <__assert_fail@plt+0x1f30>
   1321c:	cmp	r1, #13
   13220:	beq	1324c <__assert_fail@plt+0x1f44>
   13224:	cmp	r1, #92	; 0x5c
   13228:	bne	13260 <__assert_fail@plt+0x1f58>
   1322c:	ldr	r1, [r5]
   13230:	mov	r0, r7
   13234:	b	13208 <__assert_fail@plt+0x1f00>
   13238:	cmp	r1, #10
   1323c:	bne	13258 <__assert_fail@plt+0x1f50>
   13240:	ldr	r1, [r5]
   13244:	mov	r0, r8
   13248:	b	13208 <__assert_fail@plt+0x1f00>
   1324c:	ldr	r1, [r5]
   13250:	mov	r0, r6
   13254:	b	13208 <__assert_fail@plt+0x1f00>
   13258:	cmp	r1, #0
   1325c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13260:	ldr	r0, [r5]
   13264:	ldr	r2, [r0, #20]
   13268:	ldr	r3, [r0, #24]
   1326c:	cmp	r2, r3
   13270:	bcs	13288 <__assert_fail@plt+0x1f80>
   13274:	add	r3, r2, #1
   13278:	add	r4, r4, #1
   1327c:	str	r3, [r0, #20]
   13280:	strb	r1, [r2]
   13284:	b	13210 <__assert_fail@plt+0x1f08>
   13288:	bl	11284 <__overflow@plt>
   1328c:	add	r4, r4, #1
   13290:	b	13210 <__assert_fail@plt+0x1f08>
   13294:	movw	r0, #61812	; 0xf174
   13298:	movt	r0, #2
   1329c:	ldr	r1, [r0]
   132a0:	mov	r0, r4
   132a4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   132a8:	b	11068 <fputs_unlocked@plt>
   132ac:	andeq	r0, r0, r0
   132b0:	push	{r4, r5, fp, lr}
   132b4:	add	fp, sp, #8
   132b8:	mov	r5, r1
   132bc:	mov	r4, r0
   132c0:	add	r0, r0, #64	; 0x40
   132c4:	mov	r1, #0
   132c8:	mov	r2, #176	; 0xb0
   132cc:	bl	11230 <memset@plt>
   132d0:	movw	r0, #59160	; 0xe718
   132d4:	mov	r2, #48	; 0x30
   132d8:	movt	r0, #1
   132dc:	add	r1, r0, #32
   132e0:	add	r3, r0, #16
   132e4:	vld1.64	{d18-d19}, [r0], r2
   132e8:	vld1.64	{d20-d21}, [r3]
   132ec:	vld1.64	{d16-d17}, [r1]
   132f0:	add	r1, r4, #32
   132f4:	movw	r3, #58983	; 0xe667
   132f8:	movt	r3, #27145	; 0x6a09
   132fc:	vld1.64	{d22-d23}, [r0]
   13300:	add	r0, r4, #16
   13304:	vst1.64	{d20-d21}, [r0]
   13308:	add	r0, r4, #48	; 0x30
   1330c:	vst1.64	{d16-d17}, [r1]
   13310:	mov	r1, #228	; 0xe4
   13314:	vst1.64	{d22-d23}, [r0]
   13318:	mov	r0, r4
   1331c:	vst1.64	{d18-d19}, [r0], r1
   13320:	movw	r1, #44677	; 0xae85
   13324:	ldr	r2, [r5, #4]
   13328:	ldr	ip, [r5]
   1332c:	movt	r1, #47975	; 0xbb67
   13330:	eor	r2, r2, r3
   13334:	str	r2, [r4, #4]
   13338:	movw	r2, #51464	; 0xc908
   1333c:	movt	r2, #62396	; 0xf3bc
   13340:	eor	r2, ip, r2
   13344:	str	r2, [r4]
   13348:	ldr	r3, [r5, #12]
   1334c:	ldr	r2, [r5, #8]
   13350:	eor	r1, r3, r1
   13354:	movw	r3, #62322	; 0xf372
   13358:	str	r1, [r4, #12]
   1335c:	movw	r1, #42811	; 0xa73b
   13360:	movt	r3, #15470	; 0x3c6e
   13364:	movt	r1, #33994	; 0x84ca
   13368:	eor	r1, r2, r1
   1336c:	str	r1, [r4, #8]
   13370:	ldr	r2, [r5, #20]
   13374:	ldr	r1, [r5, #16]
   13378:	eor	r2, r2, r3
   1337c:	movw	r3, #62778	; 0xf53a
   13380:	str	r2, [r4, #20]
   13384:	movw	r2, #63531	; 0xf82b
   13388:	movt	r3, #42319	; 0xa54f
   1338c:	movt	r2, #65172	; 0xfe94
   13390:	eor	r1, r1, r2
   13394:	str	r1, [r4, #16]
   13398:	ldr	r2, [r5, #28]
   1339c:	ldr	r1, [r5, #24]
   133a0:	eor	r2, r2, r3
   133a4:	movw	r3, #21119	; 0x527f
   133a8:	str	r2, [r4, #28]
   133ac:	movw	r2, #14065	; 0x36f1
   133b0:	movt	r3, #20750	; 0x510e
   133b4:	movt	r2, #24349	; 0x5f1d
   133b8:	eor	r1, r1, r2
   133bc:	str	r1, [r4, #24]
   133c0:	ldr	r2, [r5, #36]	; 0x24
   133c4:	ldr	r1, [r5, #32]
   133c8:	eor	r2, r2, r3
   133cc:	movw	r3, #26764	; 0x688c
   133d0:	str	r2, [r4, #36]	; 0x24
   133d4:	movw	r2, #33489	; 0x82d1
   133d8:	movt	r3, #39685	; 0x9b05
   133dc:	movt	r2, #44518	; 0xade6
   133e0:	eor	r1, r1, r2
   133e4:	str	r1, [r4, #32]
   133e8:	ldr	r2, [r5, #44]	; 0x2c
   133ec:	ldr	r1, [r5, #40]	; 0x28
   133f0:	eor	r2, r2, r3
   133f4:	movw	r3, #55723	; 0xd9ab
   133f8:	str	r2, [r4, #44]	; 0x2c
   133fc:	movw	r2, #27679	; 0x6c1f
   13400:	movt	r3, #8067	; 0x1f83
   13404:	movt	r2, #11070	; 0x2b3e
   13408:	eor	r1, r1, r2
   1340c:	str	r1, [r4, #40]	; 0x28
   13410:	ldr	r2, [r5, #52]	; 0x34
   13414:	ldr	r1, [r5, #48]	; 0x30
   13418:	eor	r2, r2, r3
   1341c:	uxtb	r3, ip
   13420:	str	r2, [r4, #52]	; 0x34
   13424:	movw	r2, #48491	; 0xbd6b
   13428:	movt	r2, #64321	; 0xfb41
   1342c:	eor	r1, r1, r2
   13430:	str	r1, [r4, #48]	; 0x30
   13434:	ldr	r2, [r5, #60]	; 0x3c
   13438:	ldr	r1, [r5, #56]	; 0x38
   1343c:	str	r3, [r0]
   13440:	movw	r0, #52505	; 0xcd19
   13444:	movt	r0, #23520	; 0x5be0
   13448:	eor	r0, r2, r0
   1344c:	str	r0, [r4, #60]	; 0x3c
   13450:	movw	r0, #8569	; 0x2179
   13454:	movt	r0, #4990	; 0x137e
   13458:	eor	r0, r1, r0
   1345c:	str	r0, [r4, #56]	; 0x38
   13460:	mov	r0, #0
   13464:	pop	{r4, r5, fp, pc}
   13468:	nop	{0}
   1346c:	nop	{0}
   13470:	push	{r4, r5, r6, sl, fp, lr}
   13474:	add	fp, sp, #16
   13478:	mov	r4, r0
   1347c:	sub	r0, r1, #1
   13480:	mvn	r5, #0
   13484:	cmp	r0, #63	; 0x3f
   13488:	bhi	13514 <__assert_fail@plt+0x220c>
   1348c:	mov	r6, r1
   13490:	add	r0, r4, #64	; 0x40
   13494:	mov	r1, #0
   13498:	mov	r2, #176	; 0xb0
   1349c:	mov	r5, #0
   134a0:	bl	11230 <memset@plt>
   134a4:	movw	r0, #58983	; 0xe667
   134a8:	add	r1, pc, #112	; 0x70
   134ac:	add	r2, pc, #124	; 0x7c
   134b0:	add	r3, pc, #136	; 0x88
   134b4:	movt	r0, #27145	; 0x6a09
   134b8:	vld1.64	{d20-d21}, [r1 :128]
   134bc:	movw	r1, #52505	; 0xcd19
   134c0:	vld1.64	{d16-d17}, [r3 :128]
   134c4:	vld1.64	{d18-d19}, [r2 :128]
   134c8:	str	r0, [r4, #4]
   134cc:	movw	r0, #8569	; 0x2179
   134d0:	movt	r1, #23520	; 0x5be0
   134d4:	movt	r0, #4990	; 0x137e
   134d8:	strd	r0, [r4, #56]	; 0x38
   134dc:	uxtb	r0, r6
   134e0:	movw	r1, #51464	; 0xc908
   134e4:	str	r0, [r4, #228]	; 0xe4
   134e8:	orr	r0, r0, #65536	; 0x10000
   134ec:	movt	r1, #62396	; 0xf3bc
   134f0:	orr	r0, r0, #16777216	; 0x1000000
   134f4:	eor	r0, r0, r1
   134f8:	str	r0, [r4]
   134fc:	add	r0, r4, #8
   13500:	vst1.64	{d16-d17}, [r0]
   13504:	add	r0, r4, #24
   13508:	vst1.64	{d18-d19}, [r0]
   1350c:	add	r0, r4, #40	; 0x28
   13510:	vst1.64	{d20-d21}, [r0]
   13514:	mov	r0, r5
   13518:	pop	{r4, r5, r6, sl, fp, pc}
   1351c:	nop	{0}
   13520:	blcs	fae5a4 <optarg@@GLIBC_2.4+0xf7f42c>
   13524:	blls	16d75c <optarg@@GLIBC_2.4+0x13e5e4>
   13528:	blx	1082ade <optarg@@GLIBC_2.4+0x1053966>
   1352c:	svcne	0x0083d9ab
   13530:	svcpl	0x001d36f1
   13534:	strbge	pc, [pc, #-1338]	; 13002 <__assert_fail@plt+0x1cfa>	; <UNPREDICTABLE>
   13538:	sfmge	f0, 3, [r6, #836]!	; 0x344
   1353c:	tstpl	lr, pc, ror r2
   13540:	strbhi	sl, [sl], #1851	; 0x73b
   13544:	bllt	19fef60 <optarg@@GLIBC_2.4+0x19cfde8>
   13548:	vcmla.f32	d15, d4, d27[0], #90
   1354c:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13550:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13554:	add	fp, sp, #24
   13558:	sub	sp, sp, #128	; 0x80
   1355c:	mov	r5, r0
   13560:	sub	r0, r1, #1
   13564:	mvn	r4, #0
   13568:	cmp	r0, #63	; 0x3f
   1356c:	bhi	1366c <__assert_fail@plt+0x2364>
   13570:	mov	r8, r2
   13574:	cmp	r2, #0
   13578:	beq	1366c <__assert_fail@plt+0x2364>
   1357c:	sub	r0, r3, #1
   13580:	mov	r6, r3
   13584:	cmp	r0, #63	; 0x3f
   13588:	bhi	1366c <__assert_fail@plt+0x2364>
   1358c:	mov	r7, r1
   13590:	add	r0, r5, #64	; 0x40
   13594:	mov	r1, #0
   13598:	mov	r2, #176	; 0xb0
   1359c:	mov	r4, #0
   135a0:	bl	11230 <memset@plt>
   135a4:	movw	r0, #58983	; 0xe667
   135a8:	add	r1, pc, #208	; 0xd0
   135ac:	add	r2, pc, #220	; 0xdc
   135b0:	add	r3, pc, #232	; 0xe8
   135b4:	movt	r0, #27145	; 0x6a09
   135b8:	vld1.64	{d16-d17}, [r3 :128]
   135bc:	vld1.64	{d18-d19}, [r2 :128]
   135c0:	vld1.64	{d20-d21}, [r1 :128]
   135c4:	movw	r1, #52505	; 0xcd19
   135c8:	rsb	r2, r6, #128	; 0x80
   135cc:	str	r0, [r5, #4]
   135d0:	movw	r0, #8569	; 0x2179
   135d4:	movt	r1, #23520	; 0x5be0
   135d8:	movt	r0, #4990	; 0x137e
   135dc:	strd	r0, [r5, #56]	; 0x38
   135e0:	uxtb	r0, r7
   135e4:	add	r1, r5, #8
   135e8:	mov	r7, sp
   135ec:	str	r0, [r5, #228]	; 0xe4
   135f0:	vst1.64	{d16-d17}, [r1]
   135f4:	add	r1, r5, #24
   135f8:	vst1.64	{d18-d19}, [r1]
   135fc:	add	r1, r5, #40	; 0x28
   13600:	vst1.64	{d20-d21}, [r1]
   13604:	uxtb	r1, r6
   13608:	orr	r0, r0, r1, lsl #8
   1360c:	movw	r1, #51464	; 0xc908
   13610:	orr	r0, r0, #65536	; 0x10000
   13614:	movt	r1, #62396	; 0xf3bc
   13618:	orr	r0, r0, #16777216	; 0x1000000
   1361c:	eor	r0, r0, r1
   13620:	mov	r1, #0
   13624:	str	r0, [r5]
   13628:	add	r0, r7, r6
   1362c:	bl	11230 <memset@plt>
   13630:	mov	r0, r7
   13634:	mov	r1, r8
   13638:	mov	r2, r6
   1363c:	bl	110d4 <memcpy@plt>
   13640:	mov	r0, r5
   13644:	mov	r1, r7
   13648:	mov	r2, #128	; 0x80
   1364c:	bl	136b0 <__assert_fail@plt+0x23a8>
   13650:	movw	r0, #59224	; 0xe758
   13654:	mov	r1, #0
   13658:	mov	r2, #128	; 0x80
   1365c:	movt	r0, #1
   13660:	ldr	r3, [r0]
   13664:	mov	r0, r7
   13668:	blx	r3
   1366c:	mov	r0, r4
   13670:	sub	sp, fp, #24
   13674:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13678:	nop	{0}
   1367c:	nop	{0}
   13680:	blcs	fae704 <optarg@@GLIBC_2.4+0xf7f58c>
   13684:	blls	16d8bc <optarg@@GLIBC_2.4+0x13e744>
   13688:	blx	1082c3e <optarg@@GLIBC_2.4+0x1053ac6>
   1368c:	svcne	0x0083d9ab
   13690:	svcpl	0x001d36f1
   13694:	strbge	pc, [pc, #-1338]	; 13162 <__assert_fail@plt+0x1e5a>	; <UNPREDICTABLE>
   13698:	sfmge	f0, 3, [r6, #836]!	; 0x344
   1369c:	tstpl	lr, pc, ror r2
   136a0:	strbhi	sl, [sl], #1851	; 0x73b
   136a4:	bllt	19ff0c0 <optarg@@GLIBC_2.4+0x19cff48>
   136a8:	vcmla.f32	d15, d4, d27[0], #90
   136ac:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   136b0:	cmp	r2, #0
   136b4:	beq	1386c <__assert_fail@plt+0x2564>
   136b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136bc:	add	fp, sp, #28
   136c0:	sub	sp, sp, #20
   136c4:	mov	r6, r0
   136c8:	ldr	r0, [r0, #224]	; 0xe0
   136cc:	mov	r4, r2
   136d0:	mov	r5, r1
   136d4:	rsb	r7, r0, #128	; 0x80
   136d8:	cmp	r7, r2
   136dc:	bcs	13840 <__assert_fail@plt+0x2538>
   136e0:	add	r1, r6, #96	; 0x60
   136e4:	mov	sl, #0
   136e8:	str	r0, [sp, #8]
   136ec:	mov	r2, r7
   136f0:	str	r1, [sp, #16]
   136f4:	add	r0, r1, r0
   136f8:	mov	r1, r5
   136fc:	str	sl, [r6, #224]	; 0xe0
   13700:	bl	110d4 <memcpy@plt>
   13704:	mov	r8, r6
   13708:	mov	r9, r6
   1370c:	ldr	r0, [r8, #64]!	; 0x40
   13710:	adds	r1, r0, #128	; 0x80
   13714:	str	r1, [r8]
   13718:	ldr	r1, [r6, #68]	; 0x44
   1371c:	ldr	ip, [r6, #76]	; 0x4c
   13720:	adc	r3, r1, #0
   13724:	str	r3, [r6, #68]	; 0x44
   13728:	str	ip, [sp, #12]
   1372c:	ldr	lr, [r9, #72]!	; 0x48
   13730:	adds	r2, lr, #1
   13734:	adc	r3, ip, #0
   13738:	mvn	ip, #128	; 0x80
   1373c:	subs	r0, ip, r0
   13740:	mvn	r0, #0
   13744:	sbcs	r0, r0, r1
   13748:	ldr	r1, [sp, #16]
   1374c:	ldr	r0, [sp, #12]
   13750:	movwcc	sl, #1
   13754:	cmp	sl, #0
   13758:	moveq	r2, lr
   1375c:	str	r2, [r9]
   13760:	moveq	r3, r0
   13764:	mov	r0, r6
   13768:	str	r3, [r6, #76]	; 0x4c
   1376c:	bl	13880 <__assert_fail@plt+0x2578>
   13770:	sub	sl, r4, r7
   13774:	add	r7, r5, r7
   13778:	cmp	sl, #129	; 0x81
   1377c:	bcc	13838 <__assert_fail@plt+0x2530>
   13780:	ldr	r2, [sp, #8]
   13784:	movw	r1, #257	; 0x101
   13788:	str	r5, [sp, #16]
   1378c:	add	r0, r2, r4
   13790:	sub	r1, r0, r1
   13794:	sub	r0, r0, #256	; 0x100
   13798:	bic	r1, r1, #127	; 0x7f
   1379c:	str	r0, [sp, #4]
   137a0:	str	r1, [sp, #12]
   137a4:	add	r1, r1, #256	; 0x100
   137a8:	sub	r1, r1, r2
   137ac:	str	r1, [sp, #8]
   137b0:	ldm	r8, {r2, r5}
   137b4:	mov	ip, r6
   137b8:	mvn	r6, #128	; 0x80
   137bc:	adds	r0, r2, #128	; 0x80
   137c0:	adc	r3, r5, #0
   137c4:	stm	r8, {r0, r3}
   137c8:	ldr	r4, [r9]
   137cc:	ldr	r3, [r9, #4]
   137d0:	adds	r0, r4, #1
   137d4:	adc	r1, r3, #0
   137d8:	subs	r2, r6, r2
   137dc:	mov	r6, ip
   137e0:	mvn	r2, #0
   137e4:	sbcs	r2, r2, r5
   137e8:	mov	r2, #0
   137ec:	movwcc	r2, #1
   137f0:	cmp	r2, #0
   137f4:	moveq	r0, r4
   137f8:	moveq	r1, r3
   137fc:	strd	r0, [r9]
   13800:	mov	r0, ip
   13804:	mov	r1, r7
   13808:	bl	13880 <__assert_fail@plt+0x2578>
   1380c:	sub	sl, sl, #128	; 0x80
   13810:	add	r7, r7, #128	; 0x80
   13814:	cmp	sl, #128	; 0x80
   13818:	bhi	137b0 <__assert_fail@plt+0x24a8>
   1381c:	ldr	r0, [sp, #12]
   13820:	ldr	r1, [sp, #4]
   13824:	ldr	r5, [sp, #16]
   13828:	sub	r4, r1, r0
   1382c:	ldr	r0, [sp, #8]
   13830:	add	r5, r5, r0
   13834:	b	13840 <__assert_fail@plt+0x2538>
   13838:	mov	r5, r7
   1383c:	mov	r4, sl
   13840:	ldr	r0, [r6, #224]	; 0xe0
   13844:	mov	r1, r5
   13848:	mov	r2, r4
   1384c:	add	r0, r6, r0
   13850:	add	r0, r0, #96	; 0x60
   13854:	bl	110d4 <memcpy@plt>
   13858:	ldr	r0, [r6, #224]	; 0xe0
   1385c:	add	r0, r0, r4
   13860:	str	r0, [r6, #224]	; 0xe0
   13864:	sub	sp, fp, #28
   13868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1386c:	mov	r0, #0
   13870:	bx	lr
   13874:	nop	{0}
   13878:	nop	{0}
   1387c:	nop	{0}
   13880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13884:	add	fp, sp, #28
   13888:	sub	sp, sp, #556	; 0x22c
   1388c:	mov	r4, r0
   13890:	sub	r0, fp, #160	; 0xa0
   13894:	mov	r2, #128	; 0x80
   13898:	bl	110d4 <memcpy@plt>
   1389c:	add	r0, r4, #32
   138a0:	add	r1, r4, #48	; 0x30
   138a4:	add	r2, r4, #16
   138a8:	sub	r6, fp, #288	; 0x120
   138ac:	mov	r3, #72	; 0x48
   138b0:	mov	ip, r4
   138b4:	vld1.64	{d16-d17}, [r0]
   138b8:	add	r0, pc, #1008	; 0x3f0
   138bc:	vld1.64	{d24-d25}, [r1]
   138c0:	vld1.64	{d22-d23}, [r2]
   138c4:	vld1.64	{d20-d21}, [ip], r3
   138c8:	add	r7, r6, #32
   138cc:	add	r1, r6, #80	; 0x50
   138d0:	ldr	r3, [fp, #-156]	; 0xffffff64
   138d4:	ldr	r8, [fp, #-152]	; 0xffffff68
   138d8:	ldr	sl, [fp, #-148]	; 0xffffff6c
   138dc:	str	r4, [sp, #160]	; 0xa0
   138e0:	vld1.64	{d18-d19}, [r0 :128]
   138e4:	ldr	r0, [fp, #-160]	; 0xffffff60
   138e8:	vst1.64	{d16-d17}, [r7]
   138ec:	str	r3, [sp, #232]	; 0xe8
   138f0:	str	r8, [sp, #176]	; 0xb0
   138f4:	str	sl, [sp, #172]	; 0xac
   138f8:	vst1.64	{d18-d19}, [r1]
   138fc:	add	r1, r6, #48	; 0x30
   13900:	str	r0, [sp, #228]	; 0xe4
   13904:	vst1.64	{d24-d25}, [r1]
   13908:	add	r1, r6, #16
   1390c:	vst1.64	{d22-d23}, [r1]
   13910:	mov	r1, #56	; 0x38
   13914:	vst1.64	{d20-d21}, [r6], r1
   13918:	ldr	r1, [fp, #-288]	; 0xfffffee0
   1391c:	ldr	r7, [fp, #-256]	; 0xffffff00
   13920:	str	r6, [sp, #292]	; 0x124
   13924:	ldr	r2, [fp, #-284]	; 0xfffffee4
   13928:	ldr	r6, [fp, #-252]	; 0xffffff04
   1392c:	adds	r1, r7, r1
   13930:	adc	r2, r6, r2
   13934:	adds	r9, r1, r0
   13938:	mov	r0, r4
   1393c:	ldrd	r4, [r4, #64]	; 0x40
   13940:	adc	r2, r2, r3
   13944:	movw	r3, #21119	; 0x527f
   13948:	ldr	r1, [r0, #80]	; 0x50
   1394c:	movt	r3, #20750	; 0x510e
   13950:	eor	r5, r2, r5
   13954:	eor	r3, r5, r3
   13958:	eor	r5, r9, r4
   1395c:	movw	r4, #33489	; 0x82d1
   13960:	str	r1, [sp, #280]	; 0x118
   13964:	ldr	r1, [r0, #84]	; 0x54
   13968:	movw	r0, #58983	; 0xe667
   1396c:	movt	r4, #44518	; 0xade6
   13970:	movt	r0, #27145	; 0x6a09
   13974:	eor	r5, r5, r4
   13978:	movw	r4, #51464	; 0xc908
   1397c:	movt	r4, #62396	; 0xf3bc
   13980:	adds	r4, r3, r4
   13984:	str	r1, [sp, #276]	; 0x114
   13988:	adc	r0, r5, r0
   1398c:	eor	r7, r4, r7
   13990:	lsl	r1, r7, #8
   13994:	eor	r6, r0, r6
   13998:	lsr	r7, r7, #24
   1399c:	orr	r1, r1, r6, lsr #24
   139a0:	orr	r7, r7, r6, lsl #8
   139a4:	adds	r6, r8, r9
   139a8:	adc	r2, sl, r2
   139ac:	adds	lr, r6, r7
   139b0:	adc	sl, r2, r1
   139b4:	eor	r3, lr, r3
   139b8:	str	lr, [sp, #240]	; 0xf0
   139bc:	eor	r5, sl, r5
   139c0:	lsl	r2, r3, #16
   139c4:	orr	r6, r2, r5, lsr #16
   139c8:	lsr	r2, r3, #16
   139cc:	orr	r3, r2, r5, lsl #16
   139d0:	str	r6, [sp, #260]	; 0x104
   139d4:	adds	r2, r3, r4
   139d8:	mov	r8, r3
   139dc:	str	r3, [sp, #264]	; 0x108
   139e0:	adc	r3, r6, r0
   139e4:	str	r2, [sp, #252]	; 0xfc
   139e8:	eor	r0, r3, r1
   139ec:	eor	r1, r2, r7
   139f0:	mov	r7, r2
   139f4:	str	r3, [sp, #256]	; 0x100
   139f8:	mov	r9, r3
   139fc:	movw	r3, #8569	; 0x2179
   13a00:	lsl	r2, r0, #1
   13a04:	movt	r3, #4990	; 0x137e
   13a08:	orr	r4, r2, r1, lsr #31
   13a0c:	lsl	r1, r1, #1
   13a10:	orr	r5, r1, r0, lsr #31
   13a14:	str	r4, [sp, #144]	; 0x90
   13a18:	str	r5, [sp, #140]	; 0x8c
   13a1c:	ldrd	r0, [ip]
   13a20:	ldr	ip, [sp, #160]	; 0xa0
   13a24:	ldr	r2, [ip, #88]	; 0x58
   13a28:	ldr	ip, [ip, #92]	; 0x5c
   13a2c:	eor	r2, r2, r3
   13a30:	movw	r3, #52505	; 0xcd19
   13a34:	movt	r3, #23520	; 0x5be0
   13a38:	str	r2, [fp, #-168]	; 0xffffff58
   13a3c:	str	r2, [sp, #244]	; 0xf4
   13a40:	eor	r3, ip, r3
   13a44:	str	r3, [fp, #-164]	; 0xffffff5c
   13a48:	str	lr, [fp, #-288]	; 0xfffffee0
   13a4c:	str	sl, [fp, #-284]	; 0xfffffee4
   13a50:	str	r6, [fp, #-188]	; 0xffffff44
   13a54:	str	r8, [fp, #-192]	; 0xffffff40
   13a58:	str	r7, [fp, #-224]	; 0xffffff20
   13a5c:	str	r9, [fp, #-220]	; 0xffffff24
   13a60:	str	r4, [fp, #-252]	; 0xffffff04
   13a64:	str	r5, [fp, #-256]	; 0xffffff00
   13a68:	str	r3, [sp, #248]	; 0xf8
   13a6c:	ldr	r7, [fp, #-144]	; 0xffffff70
   13a70:	ldr	r6, [fp, #-140]	; 0xffffff74
   13a74:	movw	r4, #27679	; 0x6c1f
   13a78:	ldr	r9, [fp, #-136]	; 0xffffff78
   13a7c:	ldr	r8, [fp, #-132]	; 0xffffff7c
   13a80:	ldr	r2, [fp, #-280]	; 0xfffffee8
   13a84:	ldr	lr, [fp, #-248]	; 0xffffff08
   13a88:	ldr	r3, [fp, #-276]	; 0xfffffeec
   13a8c:	ldr	r5, [fp, #-244]	; 0xffffff0c
   13a90:	movt	r4, #11070	; 0x2b3e
   13a94:	str	r7, [sp, #288]	; 0x120
   13a98:	str	r6, [sp, #284]	; 0x11c
   13a9c:	str	r8, [sp, #180]	; 0xb4
   13aa0:	str	r9, [sp, #184]	; 0xb8
   13aa4:	adds	r2, lr, r2
   13aa8:	adc	r3, r5, r3
   13aac:	adds	r2, r2, r7
   13ab0:	eor	r0, r2, r0
   13ab4:	adc	r3, r3, r6
   13ab8:	eor	ip, r0, r4
   13abc:	movw	r4, #26764	; 0x688c
   13ac0:	eor	r1, r3, r1
   13ac4:	movt	r4, #39685	; 0x9b05
   13ac8:	eor	r1, r1, r4
   13acc:	movw	r4, #42811	; 0xa73b
   13ad0:	movt	r4, #33994	; 0x84ca
   13ad4:	adds	r7, r1, r4
   13ad8:	movw	r4, #44677	; 0xae85
   13adc:	movt	r4, #47975	; 0xbb67
   13ae0:	adc	r0, ip, r4
   13ae4:	adds	r2, r9, r2
   13ae8:	eor	r4, r0, r5
   13aec:	eor	r5, r7, lr
   13af0:	adc	r3, r8, r3
   13af4:	lsl	r6, r5, #8
   13af8:	lsr	r5, r5, #24
   13afc:	orr	lr, r6, r4, lsr #24
   13b00:	orr	r6, r5, r4, lsl #8
   13b04:	adds	r4, r2, r6
   13b08:	adc	r3, r3, lr
   13b0c:	eor	r1, r4, r1
   13b10:	mov	r8, r4
   13b14:	str	r4, [sp, #268]	; 0x10c
   13b18:	eor	r2, r3, ip
   13b1c:	mov	ip, r3
   13b20:	str	r3, [sp, #272]	; 0x110
   13b24:	lsl	r3, r1, #16
   13b28:	lsr	r1, r1, #16
   13b2c:	str	r8, [fp, #-280]	; 0xfffffee8
   13b30:	orr	r1, r1, r2, lsl #16
   13b34:	orr	r3, r3, r2, lsr #16
   13b38:	str	ip, [fp, #-276]	; 0xfffffeec
   13b3c:	ldr	ip, [fp, #-120]	; 0xffffff88
   13b40:	adds	r2, r1, r7
   13b44:	mov	r5, r1
   13b48:	str	r1, [sp, #200]	; 0xc8
   13b4c:	str	r3, [fp, #-180]	; 0xffffff4c
   13b50:	str	r3, [sp, #196]	; 0xc4
   13b54:	adc	r1, r3, r0
   13b58:	mov	r7, r2
   13b5c:	str	r2, [sp, #132]	; 0x84
   13b60:	str	r5, [fp, #-184]	; 0xffffff48
   13b64:	ldr	r5, [fp, #-124]	; 0xffffff84
   13b68:	eor	r0, r1, lr
   13b6c:	mov	r4, r1
   13b70:	str	r1, [sp, #136]	; 0x88
   13b74:	eor	r1, r2, r6
   13b78:	str	r7, [fp, #-216]	; 0xffffff28
   13b7c:	ldr	r7, [fp, #-128]	; 0xffffff80
   13b80:	ldr	lr, [fp, #-116]	; 0xffffff8c
   13b84:	lsl	r2, r0, #1
   13b88:	str	r4, [fp, #-212]	; 0xffffff2c
   13b8c:	movw	r4, #55723	; 0xd9ab
   13b90:	str	ip, [sp, #208]	; 0xd0
   13b94:	orr	r2, r2, r1, lsr #31
   13b98:	lsl	r1, r1, #1
   13b9c:	ldr	r3, [fp, #-236]	; 0xffffff14
   13ba0:	movt	r4, #8067	; 0x1f83
   13ba4:	orr	r0, r1, r0, lsr #31
   13ba8:	ldr	r1, [sp, #240]	; 0xf0
   13bac:	str	r2, [sp, #148]	; 0x94
   13bb0:	str	r5, [sp, #212]	; 0xd4
   13bb4:	str	r0, [sp, #152]	; 0x98
   13bb8:	str	r7, [sp, #216]	; 0xd8
   13bbc:	str	lr, [sp, #204]	; 0xcc
   13bc0:	adds	r0, r0, r1
   13bc4:	ldr	r1, [fp, #-268]	; 0xfffffef4
   13bc8:	str	r0, [sp, #128]	; 0x80
   13bcc:	adc	r0, r2, sl
   13bd0:	ldr	r2, [fp, #-240]	; 0xffffff10
   13bd4:	str	r0, [sp, #124]	; 0x7c
   13bd8:	ldr	r0, [fp, #-272]	; 0xfffffef0
   13bdc:	adds	r0, r2, r0
   13be0:	adc	r1, r3, r1
   13be4:	adds	r6, r0, r7
   13be8:	ldr	r0, [sp, #276]	; 0x114
   13bec:	adc	r1, r1, r5
   13bf0:	movw	r5, #48491	; 0xbd6b
   13bf4:	movt	r5, #64321	; 0xfb41
   13bf8:	eor	r0, r1, r0
   13bfc:	eor	r4, r0, r4
   13c00:	ldr	r0, [sp, #280]	; 0x118
   13c04:	eor	r0, r6, r0
   13c08:	eor	r5, r0, r5
   13c0c:	movw	r0, #63531	; 0xf82b
   13c10:	movt	r0, #65172	; 0xfe94
   13c14:	adds	r7, r4, r0
   13c18:	movw	r0, #62322	; 0xf372
   13c1c:	movt	r0, #15470	; 0x3c6e
   13c20:	eor	r2, r7, r2
   13c24:	str	r7, [sp, #116]	; 0x74
   13c28:	adc	r0, r5, r0
   13c2c:	lsl	r7, r2, #8
   13c30:	lsr	r2, r2, #24
   13c34:	eor	r3, r0, r3
   13c38:	str	r0, [sp, #120]	; 0x78
   13c3c:	orr	r0, r7, r3, lsr #24
   13c40:	orr	r3, r2, r3, lsl #8
   13c44:	adds	r2, ip, r6
   13c48:	str	r3, [sp, #92]	; 0x5c
   13c4c:	adc	r1, lr, r1
   13c50:	adds	r3, r2, r3
   13c54:	str	r0, [sp, #88]	; 0x58
   13c58:	adc	r7, r1, r0
   13c5c:	eor	r2, r3, r4
   13c60:	ldr	r0, [sp, #292]	; 0x124
   13c64:	str	r3, [sp, #224]	; 0xe0
   13c68:	str	r3, [fp, #-272]	; 0xfffffef0
   13c6c:	lsr	r4, r2, #16
   13c70:	eor	r1, r7, r5
   13c74:	lsl	r2, r2, #16
   13c78:	str	r7, [sp, #220]	; 0xdc
   13c7c:	str	r7, [fp, #-268]	; 0xfffffef4
   13c80:	orr	r9, r4, r1, lsl #16
   13c84:	orr	r1, r2, r1, lsr #16
   13c88:	str	r1, [sp, #156]	; 0x9c
   13c8c:	str	r1, [fp, #-172]	; 0xffffff54
   13c90:	str	r9, [fp, #-176]	; 0xffffff50
   13c94:	str	r9, [sp, #112]	; 0x70
   13c98:	ldm	r0, {r2, r5}
   13c9c:	ldr	r1, [fp, #-264]	; 0xfffffef8
   13ca0:	ldr	r0, [fp, #-112]	; 0xffffff90
   13ca4:	b	13cc0 <__assert_fail@plt+0x29b8>
   13ca8:	nop	{0}
   13cac:	nop	{0}
   13cb0:	vcmla.f32	d15, d4, d27[0], #90
   13cb4:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13cb8:	svcpl	0x001d36f1
   13cbc:	strbge	pc, [pc, #-1338]	; 1378a <__assert_fail@plt+0x2482>	; <UNPREDICTABLE>
   13cc0:	ldr	r4, [fp, #-260]	; 0xfffffefc
   13cc4:	ldr	ip, [fp, #-104]	; 0xffffff98
   13cc8:	ldr	r7, [fp, #-100]	; 0xffffff9c
   13ccc:	ldr	lr, [fp, #-84]	; 0xffffffac
   13cd0:	adds	r6, r2, r1
   13cd4:	str	r0, [sp, #168]	; 0xa8
   13cd8:	ldr	r1, [fp, #-108]	; 0xffffff94
   13cdc:	str	r7, [sp, #188]	; 0xbc
   13ce0:	str	ip, [sp, #192]	; 0xc0
   13ce4:	str	lr, [sp, #276]	; 0x114
   13ce8:	adc	r4, r5, r4
   13cec:	adds	r6, r6, r0
   13cf0:	ldr	r0, [sp, #244]	; 0xf4
   13cf4:	str	r1, [sp, #164]	; 0xa4
   13cf8:	adc	r4, r4, r1
   13cfc:	movw	r1, #14065	; 0x36f1
   13d00:	eor	r8, r6, r0
   13d04:	ldr	r0, [sp, #248]	; 0xf8
   13d08:	movt	r1, #24349	; 0x5f1d
   13d0c:	eor	r0, r4, r0
   13d10:	adds	r3, r0, r1
   13d14:	movw	r1, #62778	; 0xf53a
   13d18:	movt	r1, #42319	; 0xa54f
   13d1c:	eor	r2, r3, r2
   13d20:	str	r3, [sp, #76]	; 0x4c
   13d24:	adc	r1, r8, r1
   13d28:	lsl	sl, r2, #8
   13d2c:	lsr	r2, r2, #24
   13d30:	eor	r5, r1, r5
   13d34:	str	r1, [sp, #80]	; 0x50
   13d38:	orr	r1, r2, r5, lsl #8
   13d3c:	adds	r2, ip, r6
   13d40:	orr	r3, sl, r5, lsr #24
   13d44:	ldr	ip, [fp, #-88]	; 0xffffffa8
   13d48:	str	r1, [sp, #84]	; 0x54
   13d4c:	adc	r4, r7, r4
   13d50:	adds	r1, r2, r1
   13d54:	str	r3, [sp, #72]	; 0x48
   13d58:	adc	r2, r4, r3
   13d5c:	mov	r3, r1
   13d60:	str	r1, [fp, #-264]	; 0xfffffef8
   13d64:	str	r1, [sp, #104]	; 0x68
   13d68:	ldr	r1, [fp, #-96]	; 0xffffffa0
   13d6c:	ldr	r4, [sp, #128]	; 0x80
   13d70:	mov	r6, r2
   13d74:	str	r2, [fp, #-260]	; 0xfffffefc
   13d78:	str	r2, [sp, #108]	; 0x6c
   13d7c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13d80:	eor	r0, r3, r0
   13d84:	lsr	r3, r0, #16
   13d88:	eor	r7, r6, r8
   13d8c:	lsl	r0, r0, #16
   13d90:	str	ip, [sp, #280]	; 0x118
   13d94:	orr	r0, r0, r7, lsr #16
   13d98:	str	r1, [sp, #240]	; 0xf0
   13d9c:	adds	sl, r4, r1
   13da0:	ldr	r1, [sp, #124]	; 0x7c
   13da4:	str	r0, [sp, #68]	; 0x44
   13da8:	str	r2, [sp, #236]	; 0xec
   13dac:	adc	r5, r1, r2
   13db0:	ldr	r1, [sp, #116]	; 0x74
   13db4:	ldr	r2, [sp, #120]	; 0x78
   13db8:	adds	r4, r9, r1
   13dbc:	ldr	r1, [sp, #156]	; 0x9c
   13dc0:	str	r4, [sp, #248]	; 0xf8
   13dc4:	adc	r2, r1, r2
   13dc8:	orr	r1, r3, r7, lsl #16
   13dcc:	eor	r3, r0, r5
   13dd0:	ldr	r0, [sp, #148]	; 0x94
   13dd4:	eor	r7, r1, sl
   13dd8:	adds	r8, r3, r4
   13ddc:	str	r1, [sp, #60]	; 0x3c
   13de0:	str	r2, [sp, #244]	; 0xf4
   13de4:	adc	r6, r7, r2
   13de8:	eor	r1, r6, r0
   13dec:	ldr	r0, [sp, #152]	; 0x98
   13df0:	eor	r0, r8, r0
   13df4:	lsl	r9, r0, #8
   13df8:	lsr	r0, r0, #24
   13dfc:	orr	r9, r9, r1, lsr #24
   13e00:	orr	r0, r0, r1, lsl #8
   13e04:	adds	r1, ip, sl
   13e08:	adc	r4, lr, r5
   13e0c:	adds	r5, r1, r0
   13e10:	adc	r4, r4, r9
   13e14:	eor	r3, r5, r3
   13e18:	mov	lr, r5
   13e1c:	str	r5, [sp, #96]	; 0x60
   13e20:	mov	ip, r4
   13e24:	eor	r1, r4, r7
   13e28:	str	r4, [sp, #100]	; 0x64
   13e2c:	lsl	r4, r3, #16
   13e30:	lsr	r3, r3, #16
   13e34:	str	lr, [fp, #-288]	; 0xfffffee0
   13e38:	orr	r7, r4, r1, lsr #16
   13e3c:	orr	r1, r3, r1, lsl #16
   13e40:	str	ip, [fp, #-284]	; 0xfffffee4
   13e44:	adds	r2, r1, r8
   13e48:	mov	r8, r1
   13e4c:	str	r1, [sp, #128]	; 0x80
   13e50:	str	r7, [sp, #124]	; 0x7c
   13e54:	str	r7, [fp, #-164]	; 0xffffff5c
   13e58:	adc	r3, r7, r6
   13e5c:	eor	r0, r2, r0
   13e60:	mov	r4, r2
   13e64:	str	r2, [sp, #116]	; 0x74
   13e68:	ldr	r7, [fp, #-80]	; 0xffffffb0
   13e6c:	str	r8, [fp, #-168]	; 0xffffff58
   13e70:	eor	r1, r3, r9
   13e74:	mov	r6, r3
   13e78:	str	r3, [sp, #120]	; 0x78
   13e7c:	str	r4, [fp, #-208]	; 0xffffff30
   13e80:	lsl	r2, r1, #1
   13e84:	str	r6, [fp, #-204]	; 0xffffff34
   13e88:	ldr	r6, [fp, #-76]	; 0xffffffb4
   13e8c:	orr	r5, r2, r0, lsr #31
   13e90:	lsl	r0, r0, #1
   13e94:	ldr	r2, [sp, #248]	; 0xf8
   13e98:	orr	sl, r0, r1, lsr #31
   13e9c:	ldr	r0, [sp, #88]	; 0x58
   13ea0:	ldr	r1, [sp, #244]	; 0xf4
   13ea4:	str	r5, [sp, #152]	; 0x98
   13ea8:	str	r5, [fp, #-244]	; 0xffffff0c
   13eac:	ldr	r5, [fp, #-72]	; 0xffffffb8
   13eb0:	mov	r4, sl
   13eb4:	str	sl, [sp, #64]	; 0x40
   13eb8:	str	sl, [fp, #-248]	; 0xffffff08
   13ebc:	eor	r0, r1, r0
   13ec0:	ldr	r1, [sp, #92]	; 0x5c
   13ec4:	str	r5, [sp, #248]	; 0xf8
   13ec8:	eor	r1, r2, r1
   13ecc:	lsl	r2, r0, #1
   13ed0:	orr	r9, r2, r1, lsr #31
   13ed4:	lsl	r1, r1, #1
   13ed8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13edc:	orr	r3, r1, r0, lsr #31
   13ee0:	ldr	r0, [sp, #268]	; 0x10c
   13ee4:	str	r6, [sp, #268]	; 0x10c
   13ee8:	str	r2, [sp, #244]	; 0xf4
   13eec:	adds	r1, r3, r0
   13ef0:	ldr	r0, [sp, #272]	; 0x110
   13ef4:	str	r7, [sp, #272]	; 0x110
   13ef8:	adc	r0, r9, r0
   13efc:	adds	r1, r1, r7
   13f00:	ldr	r7, [sp, #60]	; 0x3c
   13f04:	adc	r6, r0, r6
   13f08:	ldr	r0, [sp, #260]	; 0x104
   13f0c:	eor	ip, r6, r0
   13f10:	ldr	r0, [sp, #76]	; 0x4c
   13f14:	adds	r8, r7, r0
   13f18:	ldr	r0, [sp, #80]	; 0x50
   13f1c:	ldr	r7, [sp, #68]	; 0x44
   13f20:	str	r8, [sp, #260]	; 0x104
   13f24:	adc	r7, r7, r0
   13f28:	ldr	r0, [sp, #264]	; 0x108
   13f2c:	adds	sl, ip, r8
   13f30:	eor	r3, sl, r3
   13f34:	str	r7, [sp, #56]	; 0x38
   13f38:	eor	lr, r1, r0
   13f3c:	adc	r8, lr, r7
   13f40:	lsl	r7, r3, #8
   13f44:	adds	r1, r5, r1
   13f48:	lsr	r3, r3, #24
   13f4c:	ldr	r5, [sp, #220]	; 0xdc
   13f50:	eor	r0, r8, r9
   13f54:	orr	r9, r7, r0, lsr #24
   13f58:	orr	r0, r3, r0, lsl #8
   13f5c:	adc	r3, r2, r6
   13f60:	ldr	r2, [sp, #216]	; 0xd8
   13f64:	ldr	r7, [sp, #152]	; 0x98
   13f68:	adds	r1, r1, r0
   13f6c:	adc	r3, r3, r9
   13f70:	adds	r6, r4, r2
   13f74:	ldr	r2, [sp, #212]	; 0xd4
   13f78:	adc	r7, r7, r2
   13f7c:	adds	r2, r6, r1
   13f80:	eor	r1, r1, ip
   13f84:	ldr	ip, [fp, #-52]	; 0xffffffcc
   13f88:	str	r2, [sp, #52]	; 0x34
   13f8c:	adc	r2, r7, r3
   13f90:	str	r2, [sp, #148]	; 0x94
   13f94:	eor	r2, r3, lr
   13f98:	lsl	r3, r1, #16
   13f9c:	lsr	r1, r1, #16
   13fa0:	orr	r1, r1, r2, lsl #16
   13fa4:	orr	r3, r3, r2, lsr #16
   13fa8:	adds	r2, r1, sl
   13fac:	str	r3, [sp, #76]	; 0x4c
   13fb0:	str	r1, [sp, #80]	; 0x50
   13fb4:	adc	r3, r3, r8
   13fb8:	mov	r7, r2
   13fbc:	eor	r0, r2, r0
   13fc0:	str	r2, [sp, #88]	; 0x58
   13fc4:	eor	r1, r3, r9
   13fc8:	str	r7, [fp, #-200]	; 0xffffff38
   13fcc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13fd0:	str	r3, [fp, #-196]	; 0xffffff3c
   13fd4:	str	r3, [sp, #92]	; 0x5c
   13fd8:	lsl	r2, r1, #1
   13fdc:	orr	r6, r2, r0, lsr #31
   13fe0:	lsl	r0, r0, #1
   13fe4:	ldr	r2, [sp, #260]	; 0x104
   13fe8:	str	ip, [sp, #260]	; 0x104
   13fec:	orr	r4, r0, r1, lsr #31
   13ff0:	ldr	r0, [sp, #72]	; 0x48
   13ff4:	ldr	r1, [sp, #56]	; 0x38
   13ff8:	str	r6, [sp, #68]	; 0x44
   13ffc:	str	r6, [fp, #-236]	; 0xffffff14
   14000:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14004:	str	r4, [sp, #60]	; 0x3c
   14008:	str	r4, [fp, #-240]	; 0xffffff10
   1400c:	ldr	r4, [sp, #252]	; 0xfc
   14010:	eor	r0, r1, r0
   14014:	ldr	r1, [sp, #84]	; 0x54
   14018:	str	r6, [sp, #220]	; 0xdc
   1401c:	eor	r1, r2, r1
   14020:	lsl	r2, r0, #1
   14024:	orr	r2, r2, r1, lsr #31
   14028:	lsl	r1, r1, #1
   1402c:	orr	r0, r1, r0, lsr #31
   14030:	ldr	r1, [sp, #224]	; 0xe0
   14034:	str	r7, [sp, #224]	; 0xe0
   14038:	adds	r1, r0, r1
   1403c:	adc	lr, r2, r5
   14040:	adds	r1, r1, r7
   14044:	ldr	r7, [sp, #196]	; 0xc4
   14048:	ldr	r5, [fp, #-56]	; 0xffffffc8
   1404c:	adc	r3, lr, r6
   14050:	ldr	r6, [sp, #200]	; 0xc8
   14054:	eor	r7, r3, r7
   14058:	str	r5, [sp, #264]	; 0x108
   1405c:	adds	r8, r7, r4
   14060:	ldr	r4, [sp, #256]	; 0x100
   14064:	eor	r6, r1, r6
   14068:	eor	r0, r8, r0
   1406c:	adc	lr, r6, r4
   14070:	lsl	r4, r0, #8
   14074:	lsr	r0, r0, #24
   14078:	eor	r2, lr, r2
   1407c:	orr	r4, r4, r2, lsr #24
   14080:	orr	r2, r0, r2, lsl #8
   14084:	adds	r0, r5, r1
   14088:	ldr	r5, [sp, #144]	; 0x90
   1408c:	adc	r1, ip, r3
   14090:	adds	r3, r0, r2
   14094:	adc	r0, r1, r4
   14098:	eor	r1, r3, r7
   1409c:	str	r3, [sp, #40]	; 0x28
   140a0:	str	r0, [sp, #44]	; 0x2c
   140a4:	lsl	r3, r1, #16
   140a8:	eor	r0, r0, r6
   140ac:	lsr	r1, r1, #16
   140b0:	orr	r7, r1, r0, lsl #16
   140b4:	orr	r3, r3, r0, lsr #16
   140b8:	ldr	r0, [sp, #148]	; 0x94
   140bc:	adds	r6, r7, r8
   140c0:	eor	r2, r6, r2
   140c4:	str	r6, [sp, #28]
   140c8:	eor	r0, r3, r0
   140cc:	str	r0, [sp, #32]
   140d0:	adc	r0, r3, lr
   140d4:	eor	r1, r0, r4
   140d8:	str	r0, [sp, #48]	; 0x30
   140dc:	ldr	r0, [sp, #104]	; 0x68
   140e0:	lsl	r3, r1, #1
   140e4:	orr	r3, r3, r2, lsr #31
   140e8:	lsl	r2, r2, #1
   140ec:	orr	r6, r2, r1, lsr #31
   140f0:	ldr	r2, [sp, #140]	; 0x8c
   140f4:	str	r3, [sp, #56]	; 0x38
   140f8:	str	r6, [sp, #36]	; 0x24
   140fc:	adds	r1, r0, r2
   14100:	ldr	r0, [sp, #108]	; 0x6c
   14104:	adc	ip, r0, r5
   14108:	ldr	r0, [sp, #292]	; 0x124
   1410c:	str	r6, [r0]
   14110:	str	r3, [r0, #4]
   14114:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14118:	ldr	r6, [fp, #-44]	; 0xffffffd4
   1411c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14120:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14124:	str	r3, [sp, #256]	; 0x100
   14128:	adds	r3, r1, r3
   1412c:	ldr	r1, [sp, #156]	; 0x9c
   14130:	str	r6, [sp, #252]	; 0xfc
   14134:	str	r0, [sp, #196]	; 0xc4
   14138:	str	r4, [sp, #200]	; 0xc8
   1413c:	adc	sl, ip, r6
   14140:	eor	r9, sl, r1
   14144:	ldr	r1, [sp, #112]	; 0x70
   14148:	eor	r6, r3, r1
   1414c:	ldr	r1, [sp, #132]	; 0x84
   14150:	adds	ip, r9, r1
   14154:	ldr	r1, [sp, #136]	; 0x88
   14158:	eor	r2, ip, r2
   1415c:	adc	r1, r6, r1
   14160:	eor	lr, r1, r5
   14164:	lsl	r5, r2, #8
   14168:	lsr	r2, r2, #24
   1416c:	orr	r8, r2, lr, lsl #8
   14170:	adds	r2, r4, r3
   14174:	orr	r5, r5, lr, lsr #24
   14178:	adc	r3, r0, sl
   1417c:	adds	r0, r2, r8
   14180:	str	r5, [sp, #132]	; 0x84
   14184:	adc	r2, r3, r5
   14188:	eor	r4, r0, r9
   1418c:	str	r0, [sp, #144]	; 0x90
   14190:	str	r2, [sp, #156]	; 0x9c
   14194:	lsl	r3, r4, #16
   14198:	eor	r2, r2, r6
   1419c:	lsr	r4, r4, #16
   141a0:	orr	r9, r4, r2, lsl #16
   141a4:	orr	r0, r3, r2, lsr #16
   141a8:	ldr	r3, [sp, #52]	; 0x34
   141ac:	adds	r5, r9, ip
   141b0:	ldr	ip, [sp, #32]
   141b4:	str	r0, [sp, #136]	; 0x88
   141b8:	adc	r4, r0, r1
   141bc:	ldr	r0, [sp, #152]	; 0x98
   141c0:	eor	r2, r7, r3
   141c4:	ldr	r7, [sp, #148]	; 0x94
   141c8:	adds	r6, r5, ip
   141cc:	adc	lr, r4, r2
   141d0:	eor	r1, lr, r0
   141d4:	ldr	r0, [sp, #64]	; 0x40
   141d8:	eor	r0, r6, r0
   141dc:	lsl	sl, r0, #8
   141e0:	lsr	r0, r0, #24
   141e4:	orr	sl, sl, r1, lsr #24
   141e8:	orr	r0, r0, r1, lsl #8
   141ec:	ldr	r1, [sp, #240]	; 0xf0
   141f0:	adds	r1, r3, r1
   141f4:	ldr	r3, [sp, #236]	; 0xec
   141f8:	adc	r3, r7, r3
   141fc:	adds	r7, r1, r0
   14200:	adc	r1, r3, sl
   14204:	str	r7, [sp, #72]	; 0x48
   14208:	str	r1, [sp, #84]	; 0x54
   1420c:	eor	r1, r1, r2
   14210:	eor	r2, r7, ip
   14214:	ldr	r7, [sp, #100]	; 0x64
   14218:	lsl	r3, r2, #16
   1421c:	lsr	r2, r2, #16
   14220:	orr	r3, r3, r1, lsr #16
   14224:	orr	r1, r2, r1, lsl #16
   14228:	adds	r2, r1, r6
   1422c:	str	r1, [sp, #112]	; 0x70
   14230:	str	r3, [sp, #140]	; 0x8c
   14234:	adc	r1, r3, lr
   14238:	str	r2, [sp, #104]	; 0x68
   1423c:	eor	r0, r2, r0
   14240:	ldr	r3, [sp, #96]	; 0x60
   14244:	str	r1, [sp, #108]	; 0x6c
   14248:	eor	r1, r1, sl
   1424c:	lsl	r2, r1, #1
   14250:	orr	sl, r2, r0, lsr #31
   14254:	lsl	r0, r0, #1
   14258:	orr	ip, r0, r1, lsr #31
   1425c:	ldr	r0, [sp, #132]	; 0x84
   14260:	eor	r1, r5, r8
   14264:	ldr	r5, [sp, #28]
   14268:	str	ip, [sp, #152]	; 0x98
   1426c:	eor	r0, r4, r0
   14270:	lsl	r2, r0, #1
   14274:	orr	r2, r2, r1, lsr #31
   14278:	lsl	r1, r1, #1
   1427c:	orr	r0, r1, r0, lsr #31
   14280:	ldr	r1, [sp, #256]	; 0x100
   14284:	adds	r1, r1, r3
   14288:	ldr	r3, [sp, #252]	; 0xfc
   1428c:	adc	r3, r3, r7
   14290:	ldr	r7, [sp, #76]	; 0x4c
   14294:	adds	r1, r1, r0
   14298:	adc	r3, r3, r2
   1429c:	eor	r6, r3, r7
   142a0:	ldr	r7, [sp, #80]	; 0x50
   142a4:	str	r6, [sp, #96]	; 0x60
   142a8:	adds	r6, r6, r5
   142ac:	ldr	r5, [sp, #48]	; 0x30
   142b0:	eor	r0, r6, r0
   142b4:	str	r6, [sp, #64]	; 0x40
   142b8:	ldr	r6, [sp, #68]	; 0x44
   142bc:	eor	r7, r1, r7
   142c0:	str	r7, [sp, #32]
   142c4:	adc	r7, r7, r5
   142c8:	ldr	r5, [sp, #60]	; 0x3c
   142cc:	str	r7, [sp, #76]	; 0x4c
   142d0:	eor	r2, r7, r2
   142d4:	lsl	r7, r0, #8
   142d8:	lsr	r0, r0, #24
   142dc:	orr	r7, r7, r2, lsr #24
   142e0:	orr	r2, r0, r2, lsl #8
   142e4:	ldr	r0, [sp, #272]	; 0x110
   142e8:	str	r2, [sp, #52]	; 0x34
   142ec:	str	r7, [sp, #48]	; 0x30
   142f0:	adds	r0, r1, r0
   142f4:	ldr	r1, [sp, #268]	; 0x10c
   142f8:	adc	r1, r3, r1
   142fc:	adds	r2, r0, r2
   14300:	ldr	r0, [sp, #176]	; 0xb0
   14304:	adc	r3, r1, r7
   14308:	ldr	r1, [sp, #172]	; 0xac
   1430c:	str	r2, [sp, #28]
   14310:	ldr	r7, [sp, #116]	; 0x74
   14314:	str	r3, [sp, #24]
   14318:	adds	r0, ip, r0
   1431c:	adc	r1, sl, r1
   14320:	adds	r0, r0, r2
   14324:	ldr	r2, [sp, #40]	; 0x28
   14328:	str	r0, [sp, #148]	; 0x94
   1432c:	ldr	r0, [sp, #280]	; 0x118
   14330:	adc	lr, r1, r3
   14334:	ldr	r1, [sp, #276]	; 0x114
   14338:	adds	r0, r5, r0
   1433c:	adc	r1, r6, r1
   14340:	adds	r0, r0, r2
   14344:	ldr	r2, [sp, #44]	; 0x2c
   14348:	eor	r3, r9, r0
   1434c:	adc	r1, r1, r2
   14350:	ldr	r2, [sp, #136]	; 0x88
   14354:	eor	r2, r2, r1
   14358:	adds	r8, r2, r7
   1435c:	ldr	r7, [sp, #120]	; 0x78
   14360:	eor	r5, r8, r5
   14364:	lsl	r4, r5, #8
   14368:	lsr	r5, r5, #24
   1436c:	adc	r9, r3, r7
   14370:	eor	r7, r9, r6
   14374:	orr	r6, r4, r7, lsr #24
   14378:	orr	r5, r5, r7, lsl #8
   1437c:	ldr	r7, [sp, #200]	; 0xc8
   14380:	str	r5, [sp, #68]	; 0x44
   14384:	str	r6, [sp, #60]	; 0x3c
   14388:	adds	r0, r7, r0
   1438c:	ldr	r7, [sp, #196]	; 0xc4
   14390:	adc	r1, r7, r1
   14394:	adds	r7, r0, r5
   14398:	adc	r0, r1, r6
   1439c:	eor	r1, r7, r2
   143a0:	str	r7, [sp, #80]	; 0x50
   143a4:	ldr	r7, [sp, #36]	; 0x24
   143a8:	ldr	r6, [sp, #56]	; 0x38
   143ac:	str	r0, [sp, #120]	; 0x78
   143b0:	lsl	r2, r1, #16
   143b4:	eor	r0, r0, r3
   143b8:	lsr	r1, r1, #16
   143bc:	orr	r2, r2, r0, lsr #16
   143c0:	orr	r0, r1, r0, lsl #16
   143c4:	ldr	r1, [sp, #260]	; 0x104
   143c8:	adds	r5, r0, r8
   143cc:	str	r0, [sp, #44]	; 0x2c
   143d0:	ldr	r0, [sp, #264]	; 0x108
   143d4:	str	r2, [sp, #40]	; 0x28
   143d8:	adc	r9, r2, r9
   143dc:	ldr	r2, [sp, #144]	; 0x90
   143e0:	str	r5, [sp, #12]
   143e4:	str	r9, [sp, #8]
   143e8:	adds	r0, r7, r0
   143ec:	adc	r1, r6, r1
   143f0:	adds	r8, r0, r2
   143f4:	ldr	r0, [sp, #156]	; 0x9c
   143f8:	adc	r2, r1, r0
   143fc:	ldr	r0, [sp, #124]	; 0x7c
   14400:	eor	ip, r2, r0
   14404:	ldr	r0, [sp, #128]	; 0x80
   14408:	eor	r3, r8, r0
   1440c:	ldr	r0, [sp, #88]	; 0x58
   14410:	adds	r4, ip, r0
   14414:	ldr	r0, [sp, #92]	; 0x5c
   14418:	str	r4, [sp, #88]	; 0x58
   1441c:	adc	r0, r3, r0
   14420:	str	r0, [sp, #92]	; 0x5c
   14424:	eor	r1, r0, r6
   14428:	eor	r0, r4, r7
   1442c:	lsl	r7, r0, #8
   14430:	lsr	r0, r0, #24
   14434:	orr	r6, r0, r1, lsl #8
   14438:	ldr	r0, [sp, #168]	; 0xa8
   1443c:	orr	r7, r7, r1, lsr #24
   14440:	ldr	r1, [sp, #164]	; 0xa4
   14444:	str	r6, [sp, #128]	; 0x80
   14448:	str	r7, [sp, #124]	; 0x7c
   1444c:	adds	r0, r8, r0
   14450:	adc	r1, r2, r1
   14454:	adds	r2, r0, r6
   14458:	str	r2, [sp, #16]
   1445c:	adc	r0, r1, r7
   14460:	eor	r2, r2, ip
   14464:	str	r0, [sp, #20]
   14468:	lsr	r1, r2, #16
   1446c:	eor	r0, r0, r3
   14470:	lsl	r2, r2, #16
   14474:	orr	r6, r2, r0, lsr #16
   14478:	mov	r2, lr
   1447c:	orr	r1, r1, r0, lsl #16
   14480:	ldr	r0, [sp, #152]	; 0x98
   14484:	eor	r4, lr, r6
   14488:	ldr	lr, [sp, #148]	; 0x94
   1448c:	str	r1, [sp, #56]	; 0x38
   14490:	adds	r7, r4, r5
   14494:	eor	r0, r7, r0
   14498:	eor	r3, lr, r1
   1449c:	lsl	r8, r0, #8
   144a0:	lsr	r0, r0, #24
   144a4:	adc	r5, r3, r9
   144a8:	ldr	r9, [sp, #224]	; 0xe0
   144ac:	eor	r1, r5, sl
   144b0:	ldr	sl, [sp, #220]	; 0xdc
   144b4:	orr	r8, r8, r1, lsr #24
   144b8:	orr	ip, r0, r1, lsl #8
   144bc:	adds	r1, lr, r9
   144c0:	adc	lr, r2, sl
   144c4:	adds	r0, r1, ip
   144c8:	adc	r1, lr, r8
   144cc:	eor	r2, r0, r4
   144d0:	str	r0, [sp, #100]	; 0x64
   144d4:	eor	lr, r1, r3
   144d8:	lsl	r3, r2, #16
   144dc:	lsr	r2, r2, #16
   144e0:	str	r1, [sp, #116]	; 0x74
   144e4:	orr	r1, r2, lr, lsl #16
   144e8:	orr	r3, r3, lr, lsr #16
   144ec:	adds	r2, r1, r7
   144f0:	str	r1, [sp, #156]	; 0x9c
   144f4:	str	r3, [sp, #152]	; 0x98
   144f8:	ldr	r7, [sp, #84]	; 0x54
   144fc:	adc	r1, r3, r5
   14500:	str	r2, [sp, #144]	; 0x90
   14504:	eor	r0, r2, ip
   14508:	ldr	r3, [sp, #72]	; 0x48
   1450c:	str	r1, [sp, #148]	; 0x94
   14510:	eor	r1, r1, r8
   14514:	lsl	r2, r1, #1
   14518:	orr	r2, r2, r0, lsr #31
   1451c:	lsl	r0, r0, #1
   14520:	orr	r0, r0, r1, lsr #31
   14524:	ldr	r1, [sp, #8]
   14528:	str	r2, [sp, #132]	; 0x84
   1452c:	ldr	r2, [sp, #12]
   14530:	str	r0, [sp, #136]	; 0x88
   14534:	ldr	r0, [sp, #60]	; 0x3c
   14538:	eor	r0, r1, r0
   1453c:	ldr	r1, [sp, #68]	; 0x44
   14540:	eor	r1, r2, r1
   14544:	lsl	r2, r0, #1
   14548:	orr	lr, r2, r1, lsr #31
   1454c:	lsl	r1, r1, #1
   14550:	orr	ip, r1, r0, lsr #31
   14554:	ldr	r1, [sp, #228]	; 0xe4
   14558:	ldr	r0, [sp, #88]	; 0x58
   1455c:	adds	r1, r3, r1
   14560:	ldr	r3, [sp, #232]	; 0xe8
   14564:	adc	r3, r7, r3
   14568:	adds	r8, r1, ip
   1456c:	ldr	r1, [sp, #56]	; 0x38
   14570:	adc	r7, r3, lr
   14574:	ldr	r3, [sp, #24]
   14578:	adds	r0, r1, r0
   1457c:	ldr	r1, [sp, #92]	; 0x5c
   14580:	str	r0, [sp, #12]
   14584:	adc	r2, r6, r1
   14588:	ldr	r1, [sp, #32]
   1458c:	str	r2, [sp, #8]
   14590:	eor	r6, r3, r1
   14594:	ldr	r1, [sp, #96]	; 0x60
   14598:	ldr	r3, [sp, #28]
   1459c:	eor	r5, r3, r1
   145a0:	lsr	r4, r5, #16
   145a4:	lsl	r5, r5, #16
   145a8:	orr	r4, r4, r6, lsl #16
   145ac:	orr	r6, r5, r6, lsr #16
   145b0:	eor	r3, r6, r7
   145b4:	eor	r1, r4, r8
   145b8:	str	r6, [fp, #-188]	; 0xffffff44
   145bc:	str	r4, [fp, #-192]	; 0xffffff40
   145c0:	str	r3, [sp, #72]	; 0x48
   145c4:	adds	r3, r3, r0
   145c8:	str	r1, [sp, #68]	; 0x44
   145cc:	adc	r5, r1, r2
   145d0:	eor	r0, r3, ip
   145d4:	str	r3, [sp, #92]	; 0x5c
   145d8:	ldr	r1, [sp, #284]	; 0x11c
   145dc:	str	r5, [sp, #96]	; 0x60
   145e0:	eor	r2, r5, lr
   145e4:	lsl	r5, r0, #8
   145e8:	lsr	r0, r0, #24
   145ec:	orr	r3, r5, r2, lsr #24
   145f0:	orr	r2, r0, r2, lsl #8
   145f4:	ldr	r0, [sp, #288]	; 0x120
   145f8:	str	r2, [sp, #88]	; 0x58
   145fc:	str	r3, [sp, #84]	; 0x54
   14600:	adds	r0, r8, r0
   14604:	adc	r1, r7, r1
   14608:	adds	r0, r0, r2
   1460c:	ldr	r2, [sp, #136]	; 0x88
   14610:	adc	r1, r1, r3
   14614:	str	r0, [sp, #60]	; 0x3c
   14618:	adds	r0, r0, r9
   1461c:	ldr	r3, [sp, #40]	; 0x28
   14620:	str	r1, [sp, #56]	; 0x38
   14624:	adc	r1, r1, sl
   14628:	ldr	sl, [sp, #112]	; 0x70
   1462c:	adds	r0, r0, r2
   14630:	str	r0, [sp, #36]	; 0x24
   14634:	ldr	r0, [sp, #132]	; 0x84
   14638:	adc	r0, r1, r0
   1463c:	ldr	r1, [sp, #16]
   14640:	str	r0, [sp, #32]
   14644:	ldr	r0, [sp, #64]	; 0x40
   14648:	adds	r9, r4, r0
   1464c:	ldr	r0, [sp, #76]	; 0x4c
   14650:	str	r9, [fp, #-224]	; 0xffffff20
   14654:	adc	r8, r6, r0
   14658:	ldr	r0, [sp, #48]	; 0x30
   1465c:	str	r8, [fp, #-220]	; 0xffffff24
   14660:	eor	r2, r8, r0
   14664:	ldr	r0, [sp, #52]	; 0x34
   14668:	lsl	r6, r2, #1
   1466c:	eor	r7, r9, r0
   14670:	ldr	r0, [sp, #208]	; 0xd0
   14674:	orr	r6, r6, r7, lsr #31
   14678:	lsl	r7, r7, #1
   1467c:	orr	r2, r7, r2, lsr #31
   14680:	str	r6, [fp, #-252]	; 0xffffff04
   14684:	str	r2, [fp, #-256]	; 0xffffff00
   14688:	str	sl, [fp, #-184]	; 0xffffff48
   1468c:	adds	r7, r1, r0
   14690:	ldr	r0, [sp, #204]	; 0xcc
   14694:	ldr	r1, [sp, #20]
   14698:	adc	r5, r1, r0
   1469c:	ldr	r0, [sp, #140]	; 0x8c
   146a0:	ldr	r1, [sp, #108]	; 0x6c
   146a4:	adds	lr, r7, r2
   146a8:	adc	r5, r5, r6
   146ac:	eor	r7, r5, r3
   146b0:	str	r0, [fp, #-180]	; 0xffffff4c
   146b4:	ldr	r0, [sp, #104]	; 0x68
   146b8:	str	r1, [fp, #-212]	; 0xffffff2c
   146bc:	str	r0, [fp, #-216]	; 0xffffff28
   146c0:	str	r3, [fp, #-172]	; 0xffffff54
   146c4:	ldr	r3, [sp, #44]	; 0x2c
   146c8:	adds	ip, r7, r0
   146cc:	eor	r2, ip, r2
   146d0:	lsl	r4, r2, #8
   146d4:	lsr	r2, r2, #24
   146d8:	str	r3, [fp, #-176]	; 0xffffff50
   146dc:	eor	r3, lr, r3
   146e0:	adc	r1, r3, r1
   146e4:	eor	r6, r1, r6
   146e8:	orr	r0, r2, r6, lsl #8
   146ec:	ldr	r2, [sp, #184]	; 0xb8
   146f0:	orr	r4, r4, r6, lsr #24
   146f4:	ldr	r6, [sp, #180]	; 0xb4
   146f8:	str	r4, [sp, #52]	; 0x34
   146fc:	str	r0, [sp, #64]	; 0x40
   14700:	adds	r2, lr, r2
   14704:	adc	r5, r5, r6
   14708:	adds	r6, r2, r0
   1470c:	adc	r2, r5, r4
   14710:	str	r6, [sp, #76]	; 0x4c
   14714:	str	r2, [sp, #104]	; 0x68
   14718:	eor	r2, r2, r3
   1471c:	eor	r3, r6, r7
   14720:	lsl	r7, r3, #16
   14724:	lsr	r3, r3, #16
   14728:	orr	r7, r7, r2, lsr #16
   1472c:	orr	r2, r3, r2, lsl #16
   14730:	adds	r4, r2, ip
   14734:	str	r2, [sp, #48]	; 0x30
   14738:	ldr	r2, [sp, #12]
   1473c:	str	r7, [sp, #44]	; 0x2c
   14740:	adc	r0, r7, r1
   14744:	ldr	r1, [sp, #8]
   14748:	str	r4, [sp]
   1474c:	str	r0, [sp, #4]
   14750:	ldr	r0, [sp, #124]	; 0x7c
   14754:	eor	r0, r1, r0
   14758:	ldr	r1, [sp, #128]	; 0x80
   1475c:	lsl	r3, r0, #1
   14760:	eor	r1, r2, r1
   14764:	ldr	r2, [sp, #248]	; 0xf8
   14768:	orr	r7, r3, r1, lsr #31
   1476c:	lsl	r1, r1, #1
   14770:	ldr	r3, [sp, #244]	; 0xf4
   14774:	orr	r0, r1, r0, lsr #31
   14778:	ldr	r1, [sp, #80]	; 0x50
   1477c:	adds	r1, r1, r2
   14780:	ldr	r2, [sp, #120]	; 0x78
   14784:	adc	r3, r2, r3
   14788:	ldr	r2, [sp, #140]	; 0x8c
   1478c:	adds	r1, r1, r0
   14790:	adc	r5, r3, r7
   14794:	eor	r3, r1, sl
   14798:	eor	r2, r5, r2
   1479c:	adds	sl, r2, r9
   147a0:	adc	r6, r3, r8
   147a4:	eor	r0, sl, r0
   147a8:	ldr	r8, [sp, #4]
   147ac:	str	r6, [sp, #28]
   147b0:	eor	r7, r6, r7
   147b4:	lsl	r6, r0, #8
   147b8:	lsr	r0, r0, #24
   147bc:	orr	r6, r6, r7, lsr #24
   147c0:	orr	r7, r0, r7, lsl #8
   147c4:	ldr	r0, [sp, #192]	; 0xc0
   147c8:	str	r7, [sp, #140]	; 0x8c
   147cc:	str	r6, [sp, #112]	; 0x70
   147d0:	adds	r0, r1, r0
   147d4:	ldr	r1, [sp, #188]	; 0xbc
   147d8:	adc	r1, r5, r1
   147dc:	adds	r7, r0, r7
   147e0:	adc	r0, r1, r6
   147e4:	eor	r2, r7, r2
   147e8:	ldr	r6, [sp, #36]	; 0x24
   147ec:	str	r7, [sp, #24]
   147f0:	str	r0, [sp, #40]	; 0x28
   147f4:	lsr	r1, r2, #16
   147f8:	eor	r0, r0, r3
   147fc:	lsl	r2, r2, #16
   14800:	orr	r3, r2, r0, lsr #16
   14804:	orr	r1, r1, r0, lsl #16
   14808:	ldr	r0, [sp, #152]	; 0x98
   1480c:	ldr	r2, [sp, #32]
   14810:	str	r3, [sp, #20]
   14814:	str	r1, [sp, #12]
   14818:	str	r0, [fp, #-164]	; 0xffffff5c
   1481c:	ldr	r0, [sp, #156]	; 0x9c
   14820:	eor	lr, r2, r3
   14824:	eor	r3, r6, r1
   14828:	ldr	r1, [sp, #228]	; 0xe4
   1482c:	adds	r4, lr, r4
   14830:	adc	r7, r3, r8
   14834:	str	r0, [fp, #-168]	; 0xffffff58
   14838:	ldr	r0, [sp, #144]	; 0x90
   1483c:	str	r0, [fp, #-208]	; 0xffffff30
   14840:	ldr	r0, [sp, #148]	; 0x94
   14844:	str	r0, [fp, #-204]	; 0xffffff34
   14848:	ldr	r0, [sp, #132]	; 0x84
   1484c:	str	r0, [fp, #-244]	; 0xffffff0c
   14850:	eor	r5, r7, r0
   14854:	ldr	r0, [sp, #136]	; 0x88
   14858:	str	r0, [fp, #-248]	; 0xffffff08
   1485c:	eor	r0, r4, r0
   14860:	lsl	r9, r0, #8
   14864:	lsr	r0, r0, #24
   14868:	orr	r9, r9, r5, lsr #24
   1486c:	orr	ip, r0, r5, lsl #8
   14870:	adds	r5, r6, r1
   14874:	ldr	r1, [sp, #232]	; 0xe8
   14878:	adc	r1, r2, r1
   1487c:	adds	r5, r5, ip
   14880:	adc	r0, r1, r9
   14884:	eor	r2, r5, lr
   14888:	str	r5, [sp, #80]	; 0x50
   1488c:	eor	r1, r0, r3
   14890:	lsl	r3, r2, #16
   14894:	lsr	r2, r2, #16
   14898:	str	r0, [sp, #108]	; 0x6c
   1489c:	orr	r3, r3, r1, lsr #16
   148a0:	orr	r1, r2, r1, lsl #16
   148a4:	adds	r2, r1, r4
   148a8:	str	r1, [sp, #132]	; 0x84
   148ac:	str	r3, [sp, #120]	; 0x78
   148b0:	adc	r1, r3, r7
   148b4:	str	r2, [sp, #124]	; 0x7c
   148b8:	eor	r0, r2, ip
   148bc:	ldr	r7, [sp, #244]	; 0xf4
   148c0:	str	r1, [sp, #128]	; 0x80
   148c4:	eor	r1, r1, r9
   148c8:	lsl	r2, r1, #1
   148cc:	orr	r9, r2, r0, lsr #31
   148d0:	lsl	r0, r0, #1
   148d4:	ldr	r2, [sp]
   148d8:	orr	lr, r0, r1, lsr #31
   148dc:	ldr	r0, [sp, #52]	; 0x34
   148e0:	ldr	r1, [sp, #64]	; 0x40
   148e4:	str	r9, [sp, #16]
   148e8:	str	lr, [sp, #136]	; 0x88
   148ec:	eor	r0, r8, r0
   148f0:	eor	r1, r2, r1
   148f4:	lsl	r2, r0, #1
   148f8:	orr	r3, r2, r1, lsr #31
   148fc:	lsl	r1, r1, #1
   14900:	ldr	r2, [sp, #248]	; 0xf8
   14904:	orr	r0, r1, r0, lsr #31
   14908:	ldr	r1, [sp, #100]	; 0x64
   1490c:	adds	r1, r1, r2
   14910:	ldr	r2, [sp, #116]	; 0x74
   14914:	adc	r2, r2, r7
   14918:	adds	r5, r1, r0
   1491c:	ldr	r1, [sp, #12]
   14920:	adc	r6, r2, r3
   14924:	ldr	r2, [sp, #20]
   14928:	adds	sl, r1, sl
   1492c:	ldr	r1, [sp, #28]
   14930:	adc	r8, r2, r1
   14934:	ldr	r1, [sp, #68]	; 0x44
   14938:	ldr	r2, [sp, #56]	; 0x38
   1493c:	eor	r7, r2, r1
   14940:	ldr	r1, [sp, #72]	; 0x48
   14944:	ldr	r2, [sp, #60]	; 0x3c
   14948:	eor	r4, r2, r1
   1494c:	lsr	r2, r4, #16
   14950:	lsl	r4, r4, #16
   14954:	orr	r4, r4, r7, lsr #16
   14958:	orr	ip, r2, r7, lsl #16
   1495c:	eor	r1, r6, r4
   14960:	eor	r7, r5, ip
   14964:	adds	r2, r1, sl
   14968:	str	r1, [sp, #56]	; 0x38
   1496c:	str	r7, [sp, #52]	; 0x34
   14970:	adc	r1, r7, r8
   14974:	eor	r0, r2, r0
   14978:	str	r2, [sp, #68]	; 0x44
   1497c:	lsl	r7, r0, #8
   14980:	eor	r3, r1, r3
   14984:	lsr	r0, r0, #24
   14988:	str	r1, [sp, #72]	; 0x48
   1498c:	ldr	r1, [sp, #236]	; 0xec
   14990:	orr	r2, r0, r3, lsl #8
   14994:	ldr	r0, [sp, #240]	; 0xf0
   14998:	orr	r7, r7, r3, lsr #24
   1499c:	str	r2, [sp, #64]	; 0x40
   149a0:	str	r7, [sp, #60]	; 0x3c
   149a4:	adds	r0, r5, r0
   149a8:	adc	r3, r6, r1
   149ac:	adds	r2, r0, r2
   149b0:	ldr	r0, [sp, #272]	; 0x110
   149b4:	ldr	r1, [sp, #268]	; 0x10c
   149b8:	adc	r5, r3, r7
   149bc:	str	r2, [sp, #32]
   149c0:	str	r5, [sp, #28]
   149c4:	adds	r0, lr, r0
   149c8:	adc	r3, r9, r1
   149cc:	adds	r0, r0, r2
   149d0:	ldr	r1, [sp, #24]
   149d4:	str	r0, [sp, #116]	; 0x74
   149d8:	adc	r0, r3, r5
   149dc:	str	r0, [sp, #8]
   149e0:	ldr	r0, [sp, #92]	; 0x5c
   149e4:	adds	lr, ip, r0
   149e8:	ldr	r0, [sp, #96]	; 0x60
   149ec:	adc	r9, r4, r0
   149f0:	ldr	r0, [sp, #84]	; 0x54
   149f4:	eor	r2, r9, r0
   149f8:	ldr	r0, [sp, #88]	; 0x58
   149fc:	lsl	r6, r2, #1
   14a00:	eor	r3, lr, r0
   14a04:	ldr	r0, [sp, #208]	; 0xd0
   14a08:	orr	r6, r6, r3, lsr #31
   14a0c:	lsl	r3, r3, #1
   14a10:	orr	r2, r3, r2, lsr #31
   14a14:	str	r6, [fp, #-236]	; 0xffffff14
   14a18:	str	r2, [fp, #-240]	; 0xffffff10
   14a1c:	str	lr, [fp, #-200]	; 0xffffff38
   14a20:	str	r9, [fp, #-196]	; 0xffffff3c
   14a24:	adds	r3, r1, r0
   14a28:	ldr	r0, [sp, #204]	; 0xcc
   14a2c:	ldr	r1, [sp, #40]	; 0x28
   14a30:	adc	r5, r1, r0
   14a34:	ldr	r0, [sp, #44]	; 0x2c
   14a38:	adds	r3, r3, r2
   14a3c:	ldr	r1, [sp, #148]	; 0x94
   14a40:	adc	r5, r5, r6
   14a44:	eor	ip, r0, r5
   14a48:	ldr	r0, [sp, #48]	; 0x30
   14a4c:	eor	r4, r0, r3
   14a50:	ldr	r0, [sp, #144]	; 0x90
   14a54:	adds	r0, ip, r0
   14a58:	adc	r1, r4, r1
   14a5c:	eor	r2, r0, r2
   14a60:	lsl	r7, r2, #8
   14a64:	eor	r6, r1, r6
   14a68:	lsr	r2, r2, #24
   14a6c:	orr	r7, r7, r6, lsr #24
   14a70:	orr	r6, r2, r6, lsl #8
   14a74:	ldr	r2, [sp, #288]	; 0x120
   14a78:	str	r7, [sp, #84]	; 0x54
   14a7c:	str	r6, [sp, #92]	; 0x5c
   14a80:	adds	r2, r3, r2
   14a84:	ldr	r3, [sp, #284]	; 0x11c
   14a88:	adc	r3, r5, r3
   14a8c:	adds	r5, r2, r6
   14a90:	adc	r2, r3, r7
   14a94:	eor	r3, r5, ip
   14a98:	str	r5, [sp, #96]	; 0x60
   14a9c:	str	r2, [sp, #100]	; 0x64
   14aa0:	lsl	r5, r3, #16
   14aa4:	eor	r2, r2, r4
   14aa8:	lsr	r3, r3, #16
   14aac:	orr	r7, r5, r2, lsr #16
   14ab0:	orr	r2, r3, r2, lsl #16
   14ab4:	ldr	r3, [sp, #76]	; 0x4c
   14ab8:	adds	r0, r2, r0
   14abc:	str	r2, [sp, #88]	; 0x58
   14ac0:	str	r7, [sp, #40]	; 0x28
   14ac4:	str	r0, [sp, #44]	; 0x2c
   14ac8:	ldr	r0, [sp, #112]	; 0x70
   14acc:	adc	ip, r7, r1
   14ad0:	ldr	r1, [sp, #140]	; 0x8c
   14ad4:	str	ip, [sp, #24]
   14ad8:	eor	r0, r8, r0
   14adc:	eor	r1, sl, r1
   14ae0:	lsl	r2, r0, #1
   14ae4:	orr	r4, r2, r1, lsr #31
   14ae8:	lsl	r1, r1, #1
   14aec:	ldr	r2, [sp, #196]	; 0xc4
   14af0:	orr	r0, r1, r0, lsr #31
   14af4:	ldr	r1, [sp, #200]	; 0xc8
   14af8:	adds	r1, r0, r1
   14afc:	adc	r2, r4, r2
   14b00:	adds	r1, r1, r3
   14b04:	ldr	r3, [sp, #104]	; 0x68
   14b08:	adc	r3, r2, r3
   14b0c:	ldr	r2, [sp, #152]	; 0x98
   14b10:	eor	sl, r3, r2
   14b14:	ldr	r2, [sp, #156]	; 0x9c
   14b18:	adds	r5, sl, lr
   14b1c:	str	r5, [sp, #48]	; 0x30
   14b20:	eor	r2, r1, r2
   14b24:	adc	r7, r2, r9
   14b28:	str	r7, [sp, #104]	; 0x68
   14b2c:	eor	lr, r7, r4
   14b30:	ldr	r7, [sp, #292]	; 0x124
   14b34:	stm	r7, {r0, r4}
   14b38:	eor	r0, r5, r0
   14b3c:	lsl	r4, r0, #8
   14b40:	lsr	r0, r0, #24
   14b44:	ldr	r9, [sp, #44]	; 0x2c
   14b48:	orr	r6, r0, lr, lsl #8
   14b4c:	ldr	r0, [sp, #264]	; 0x108
   14b50:	orr	r7, r4, lr, lsr #24
   14b54:	str	r6, [sp, #76]	; 0x4c
   14b58:	str	r7, [sp, #36]	; 0x24
   14b5c:	adds	r0, r1, r0
   14b60:	ldr	r1, [sp, #260]	; 0x104
   14b64:	adc	r1, r3, r1
   14b68:	adds	r3, r0, r6
   14b6c:	ldr	r6, [sp, #116]	; 0x74
   14b70:	adc	r0, r1, r7
   14b74:	str	r3, [sp, #12]
   14b78:	str	r0, [sp, #20]
   14b7c:	eor	r0, r0, r2
   14b80:	eor	r2, r3, sl
   14b84:	lsr	r1, r2, #16
   14b88:	lsl	r2, r2, #16
   14b8c:	orr	r4, r2, r0, lsr #16
   14b90:	ldr	r2, [sp, #8]
   14b94:	orr	r5, r1, r0, lsl #16
   14b98:	ldr	r0, [sp, #16]
   14b9c:	eor	r3, r6, r5
   14ba0:	eor	r8, r2, r4
   14ba4:	adds	sl, r8, r9
   14ba8:	adc	lr, r3, ip
   14bac:	eor	r1, lr, r0
   14bb0:	ldr	r0, [sp, #136]	; 0x88
   14bb4:	eor	r0, sl, r0
   14bb8:	lsl	r7, r0, #8
   14bbc:	lsr	r0, r0, #24
   14bc0:	orr	r7, r7, r1, lsr #24
   14bc4:	orr	r0, r0, r1, lsl #8
   14bc8:	ldr	r1, [sp, #256]	; 0x100
   14bcc:	adds	r1, r6, r1
   14bd0:	ldr	r6, [sp, #252]	; 0xfc
   14bd4:	adc	ip, r2, r6
   14bd8:	adds	r6, r1, r0
   14bdc:	adc	r1, ip, r7
   14be0:	eor	r2, r6, r8
   14be4:	str	r6, [sp, #112]	; 0x70
   14be8:	eor	ip, r1, r3
   14bec:	lsl	r3, r2, #16
   14bf0:	lsr	r2, r2, #16
   14bf4:	str	r1, [sp, #116]	; 0x74
   14bf8:	orr	r1, r2, ip, lsl #16
   14bfc:	orr	r3, r3, ip, lsr #16
   14c00:	ldr	ip, [sp, #180]	; 0xb4
   14c04:	adds	r2, r1, sl
   14c08:	str	r1, [sp, #156]	; 0x9c
   14c0c:	str	r3, [sp, #152]	; 0x98
   14c10:	adc	r1, r3, lr
   14c14:	str	r2, [sp, #144]	; 0x90
   14c18:	eor	r0, r2, r0
   14c1c:	ldr	r3, [sp, #108]	; 0x6c
   14c20:	str	r1, [sp, #148]	; 0x94
   14c24:	eor	r1, r1, r7
   14c28:	ldr	r7, [sp, #184]	; 0xb8
   14c2c:	lsl	r2, r1, #1
   14c30:	orr	r2, r2, r0, lsr #31
   14c34:	lsl	r0, r0, #1
   14c38:	orr	r0, r0, r1, lsr #31
   14c3c:	ldr	r1, [sp, #24]
   14c40:	str	r2, [sp, #136]	; 0x88
   14c44:	str	r0, [sp, #140]	; 0x8c
   14c48:	ldr	r0, [sp, #84]	; 0x54
   14c4c:	eor	r0, r1, r0
   14c50:	ldr	r1, [sp, #92]	; 0x5c
   14c54:	lsl	r2, r0, #1
   14c58:	eor	r1, r9, r1
   14c5c:	orr	sl, r2, r1, lsr #31
   14c60:	lsl	r1, r1, #1
   14c64:	ldr	r2, [sp, #52]	; 0x34
   14c68:	orr	lr, r1, r0, lsr #31
   14c6c:	ldr	r1, [sp, #80]	; 0x50
   14c70:	ldr	r0, [sp, #48]	; 0x30
   14c74:	adds	r6, r1, r7
   14c78:	ldr	r1, [sp, #104]	; 0x68
   14c7c:	adc	r3, r3, ip
   14c80:	adds	r8, r6, lr
   14c84:	adc	r9, r3, sl
   14c88:	ldr	r3, [sp, #28]
   14c8c:	adds	r0, r5, r0
   14c90:	str	r0, [sp, #8]
   14c94:	adc	r1, r4, r1
   14c98:	str	r1, [sp, #4]
   14c9c:	eor	r5, r3, r2
   14ca0:	ldr	r2, [sp, #56]	; 0x38
   14ca4:	ldr	r3, [sp, #32]
   14ca8:	eor	r4, r3, r2
   14cac:	lsr	r6, r4, #16
   14cb0:	lsl	r4, r4, #16
   14cb4:	orr	r6, r6, r5, lsl #16
   14cb8:	orr	r5, r4, r5, lsr #16
   14cbc:	eor	r3, r5, r9
   14cc0:	eor	r2, r6, r8
   14cc4:	str	r6, [fp, #-192]	; 0xffffff40
   14cc8:	str	r5, [fp, #-188]	; 0xffffff44
   14ccc:	adds	r4, r3, r0
   14cd0:	str	r3, [sp, #56]	; 0x38
   14cd4:	str	r2, [sp, #52]	; 0x34
   14cd8:	adc	r3, r2, r1
   14cdc:	eor	r0, r4, lr
   14ce0:	str	r4, [sp, #104]	; 0x68
   14ce4:	ldr	r1, [sp, #140]	; 0x8c
   14ce8:	eor	r2, r3, sl
   14cec:	lsl	r4, r0, #8
   14cf0:	lsr	r0, r0, #24
   14cf4:	str	r3, [sp, #108]	; 0x6c
   14cf8:	ldr	sl, [sp, #120]	; 0x78
   14cfc:	orr	r3, r4, r2, lsr #24
   14d00:	orr	r4, r0, r2, lsl #8
   14d04:	ldr	r0, [sp, #168]	; 0xa8
   14d08:	ldr	r2, [sp, #164]	; 0xa4
   14d0c:	str	r3, [sp, #84]	; 0x54
   14d10:	str	r4, [sp, #92]	; 0x5c
   14d14:	adds	r0, r8, r0
   14d18:	adc	r2, r9, r2
   14d1c:	adds	r0, r0, r4
   14d20:	adc	r2, r2, r3
   14d24:	str	r0, [sp, #48]	; 0x30
   14d28:	adds	r0, r0, r7
   14d2c:	ldr	r3, [sp, #132]	; 0x84
   14d30:	ldr	r7, [sp, #40]	; 0x28
   14d34:	str	r2, [sp, #44]	; 0x2c
   14d38:	adc	r2, r2, ip
   14d3c:	adds	r0, r0, r1
   14d40:	str	r0, [sp, #24]
   14d44:	ldr	r0, [sp, #136]	; 0x88
   14d48:	adc	r0, r2, r0
   14d4c:	str	r0, [sp, #16]
   14d50:	ldr	r0, [sp, #68]	; 0x44
   14d54:	adds	r8, r6, r0
   14d58:	ldr	r0, [sp, #72]	; 0x48
   14d5c:	str	r8, [fp, #-224]	; 0xffffff20
   14d60:	adc	ip, r5, r0
   14d64:	ldr	r0, [sp, #60]	; 0x3c
   14d68:	str	ip, [fp, #-220]	; 0xffffff24
   14d6c:	eor	r1, ip, r0
   14d70:	ldr	r0, [sp, #64]	; 0x40
   14d74:	lsl	r6, r1, #1
   14d78:	eor	r2, r8, r0
   14d7c:	ldr	r0, [sp, #280]	; 0x118
   14d80:	orr	r9, r6, r2, lsr #31
   14d84:	lsl	r2, r2, #1
   14d88:	orr	r6, r2, r1, lsr #31
   14d8c:	ldr	r1, [sp, #12]
   14d90:	str	r9, [fp, #-252]	; 0xffffff04
   14d94:	str	r6, [fp, #-256]	; 0xffffff00
   14d98:	str	sl, [fp, #-180]	; 0xffffff4c
   14d9c:	str	r3, [fp, #-184]	; 0xffffff48
   14da0:	adds	r2, r1, r0
   14da4:	ldr	r0, [sp, #276]	; 0x114
   14da8:	ldr	r1, [sp, #20]
   14dac:	adc	r5, r1, r0
   14db0:	ldr	r0, [sp, #128]	; 0x80
   14db4:	ldr	r1, [sp, #124]	; 0x7c
   14db8:	adds	r2, r2, r6
   14dbc:	adc	r4, r5, r9
   14dc0:	eor	r5, r4, r7
   14dc4:	str	r0, [fp, #-212]	; 0xffffff2c
   14dc8:	str	r1, [fp, #-216]	; 0xffffff28
   14dcc:	str	r7, [fp, #-172]	; 0xffffff54
   14dd0:	ldr	r7, [sp, #88]	; 0x58
   14dd4:	adds	lr, r5, r1
   14dd8:	eor	r1, lr, r6
   14ddc:	lsl	r6, r1, #8
   14de0:	lsr	r1, r1, #24
   14de4:	str	r7, [fp, #-176]	; 0xffffff50
   14de8:	eor	r7, r2, r7
   14dec:	adc	r0, r7, r0
   14df0:	eor	r9, r0, r9
   14df4:	orr	r6, r6, r9, lsr #24
   14df8:	orr	r9, r1, r9, lsl #8
   14dfc:	ldr	r1, [sp, #216]	; 0xd8
   14e00:	str	r9, [sp, #72]	; 0x48
   14e04:	str	r6, [sp, #68]	; 0x44
   14e08:	adds	r1, r2, r1
   14e0c:	ldr	r2, [sp, #212]	; 0xd4
   14e10:	adc	r2, r4, r2
   14e14:	adds	r4, r1, r9
   14e18:	adc	r1, r2, r6
   14e1c:	eor	r2, r4, r5
   14e20:	str	r4, [sp, #80]	; 0x50
   14e24:	ldr	r6, [sp, #188]	; 0xbc
   14e28:	str	r1, [sp, #88]	; 0x58
   14e2c:	lsl	r4, r2, #16
   14e30:	eor	r1, r1, r7
   14e34:	lsr	r2, r2, #16
   14e38:	orr	r4, r4, r1, lsr #16
   14e3c:	orr	r1, r2, r1, lsl #16
   14e40:	ldr	r2, [sp, #8]
   14e44:	str	r1, [sp, #40]	; 0x28
   14e48:	adds	r1, r1, lr
   14e4c:	str	r4, [sp, #28]
   14e50:	str	r1, [sp]
   14e54:	adc	r9, r4, r0
   14e58:	ldr	r0, [sp, #36]	; 0x24
   14e5c:	ldr	r1, [sp, #4]
   14e60:	eor	r0, r1, r0
   14e64:	ldr	r1, [sp, #76]	; 0x4c
   14e68:	lsl	r7, r0, #1
   14e6c:	eor	r2, r2, r1
   14e70:	ldr	r1, [sp, #192]	; 0xc0
   14e74:	orr	r7, r7, r2, lsr #31
   14e78:	lsl	r2, r2, #1
   14e7c:	orr	r2, r2, r0, lsr #31
   14e80:	ldr	r0, [sp, #96]	; 0x60
   14e84:	adds	r0, r0, r1
   14e88:	ldr	r1, [sp, #100]	; 0x64
   14e8c:	adc	r4, r1, r6
   14e90:	adds	r5, r0, r2
   14e94:	adc	r0, r4, r7
   14e98:	eor	r1, r5, r3
   14e9c:	eor	r4, r0, sl
   14ea0:	adds	r3, r4, r8
   14ea4:	str	r3, [sp, #60]	; 0x3c
   14ea8:	eor	r2, r3, r2
   14eac:	ldr	r3, [sp, #176]	; 0xb0
   14eb0:	adc	r6, r1, ip
   14eb4:	ldr	ip, [sp]
   14eb8:	str	r6, [sp, #64]	; 0x40
   14ebc:	eor	r7, r6, r7
   14ec0:	lsl	r6, r2, #8
   14ec4:	lsr	r2, r2, #24
   14ec8:	orr	r6, r6, r7, lsr #24
   14ecc:	orr	r7, r2, r7, lsl #8
   14ed0:	str	r7, [sp, #36]	; 0x24
   14ed4:	str	r6, [sp, #32]
   14ed8:	adds	r2, r5, r3
   14edc:	ldr	r5, [sp, #172]	; 0xac
   14ee0:	adc	r0, r0, r5
   14ee4:	adds	r2, r2, r7
   14ee8:	adc	r0, r0, r6
   14eec:	str	r2, [sp, #20]
   14ef0:	str	r0, [sp, #100]	; 0x64
   14ef4:	eor	r0, r0, r1
   14ef8:	eor	r1, r2, r4
   14efc:	ldr	r4, [sp, #16]
   14f00:	lsr	r2, r1, #16
   14f04:	lsl	r1, r1, #16
   14f08:	orr	r7, r2, r0, lsl #16
   14f0c:	orr	r1, r1, r0, lsr #16
   14f10:	ldr	r0, [sp, #152]	; 0x98
   14f14:	ldr	r2, [sp, #24]
   14f18:	str	r1, [sp, #12]
   14f1c:	str	r7, [sp, #8]
   14f20:	eor	lr, r4, r1
   14f24:	adds	sl, lr, ip
   14f28:	str	r0, [fp, #-164]	; 0xffffff5c
   14f2c:	ldr	r0, [sp, #156]	; 0x9c
   14f30:	eor	r1, r2, r7
   14f34:	adc	r6, r1, r9
   14f38:	str	r0, [fp, #-168]	; 0xffffff58
   14f3c:	ldr	r0, [sp, #144]	; 0x90
   14f40:	str	r0, [fp, #-208]	; 0xffffff30
   14f44:	ldr	r0, [sp, #148]	; 0x94
   14f48:	str	r0, [fp, #-204]	; 0xffffff34
   14f4c:	ldr	r0, [sp, #136]	; 0x88
   14f50:	str	r0, [fp, #-244]	; 0xffffff0c
   14f54:	eor	r7, r6, r0
   14f58:	ldr	r0, [sp, #140]	; 0x8c
   14f5c:	str	r0, [fp, #-248]	; 0xffffff08
   14f60:	eor	r0, sl, r0
   14f64:	lsl	r8, r0, #8
   14f68:	lsr	r0, r0, #24
   14f6c:	orr	r8, r8, r7, lsr #24
   14f70:	orr	r0, r0, r7, lsl #8
   14f74:	adds	r7, r2, r3
   14f78:	adc	r2, r4, r5
   14f7c:	adds	r3, r7, r0
   14f80:	ldr	r7, [sp, #188]	; 0xbc
   14f84:	ldr	r5, [sp, #48]	; 0x30
   14f88:	adc	r2, r2, r8
   14f8c:	str	r3, [sp, #76]	; 0x4c
   14f90:	str	r2, [sp, #96]	; 0x60
   14f94:	eor	r1, r2, r1
   14f98:	eor	r2, r3, lr
   14f9c:	lsl	r3, r2, #16
   14fa0:	lsr	r2, r2, #16
   14fa4:	orr	r3, r3, r1, lsr #16
   14fa8:	orr	r1, r2, r1, lsl #16
   14fac:	adds	r2, r1, sl
   14fb0:	str	r1, [sp, #132]	; 0x84
   14fb4:	str	r3, [sp, #128]	; 0x80
   14fb8:	adc	r1, r3, r6
   14fbc:	str	r2, [sp, #120]	; 0x78
   14fc0:	eor	r0, r2, r0
   14fc4:	ldr	r3, [sp, #192]	; 0xc0
   14fc8:	str	r1, [sp, #124]	; 0x7c
   14fcc:	eor	r1, r1, r8
   14fd0:	lsl	r2, r1, #1
   14fd4:	orr	r8, r2, r0, lsr #31
   14fd8:	lsl	r0, r0, #1
   14fdc:	orr	sl, r0, r1, lsr #31
   14fe0:	ldr	r0, [sp, #68]	; 0x44
   14fe4:	ldr	r1, [sp, #72]	; 0x48
   14fe8:	str	r8, [sp, #136]	; 0x88
   14fec:	str	sl, [sp, #140]	; 0x8c
   14ff0:	eor	r0, r9, r0
   14ff4:	eor	r1, ip, r1
   14ff8:	lsl	r2, r0, #1
   14ffc:	orr	r2, r2, r1, lsr #31
   15000:	lsl	r1, r1, #1
   15004:	orr	r0, r1, r0, lsr #31
   15008:	ldr	r1, [sp, #112]	; 0x70
   1500c:	adds	r1, r1, r3
   15010:	ldr	r3, [sp, #116]	; 0x74
   15014:	adc	r3, r3, r7
   15018:	adds	r6, r1, r0
   1501c:	ldr	r1, [sp, #60]	; 0x3c
   15020:	ldr	r7, [sp, #12]
   15024:	adc	r9, r3, r2
   15028:	ldr	r3, [sp, #8]
   1502c:	adds	r3, r3, r1
   15030:	ldr	r1, [sp, #64]	; 0x40
   15034:	str	r3, [sp, #16]
   15038:	adc	lr, r7, r1
   1503c:	ldr	r1, [sp, #52]	; 0x34
   15040:	ldr	r7, [sp, #44]	; 0x2c
   15044:	eor	r7, r7, r1
   15048:	ldr	r1, [sp, #56]	; 0x38
   1504c:	eor	r4, r5, r1
   15050:	lsr	r5, r4, #16
   15054:	lsl	r4, r4, #16
   15058:	orr	r4, r4, r7, lsr #16
   1505c:	orr	ip, r5, r7, lsl #16
   15060:	eor	r1, r9, r4
   15064:	eor	r7, r6, ip
   15068:	adds	r5, r1, r3
   1506c:	str	r1, [sp, #56]	; 0x38
   15070:	str	r7, [sp, #52]	; 0x34
   15074:	adc	r1, r7, lr
   15078:	eor	r0, r5, r0
   1507c:	str	r5, [sp, #68]	; 0x44
   15080:	lsl	r7, r0, #8
   15084:	eor	r2, r1, r2
   15088:	lsr	r0, r0, #24
   1508c:	str	r1, [sp, #72]	; 0x48
   15090:	ldr	r1, [sp, #276]	; 0x114
   15094:	orr	r5, r0, r2, lsl #8
   15098:	ldr	r0, [sp, #280]	; 0x118
   1509c:	orr	r7, r7, r2, lsr #24
   150a0:	str	r5, [sp, #64]	; 0x40
   150a4:	str	r7, [sp, #60]	; 0x3c
   150a8:	adds	r0, r6, r0
   150ac:	adc	r2, r9, r1
   150b0:	adds	r3, r0, r5
   150b4:	ldr	r0, [sp, #288]	; 0x120
   150b8:	ldr	r1, [sp, #284]	; 0x11c
   150bc:	adc	r5, r2, r7
   150c0:	str	r3, [sp, #48]	; 0x30
   150c4:	str	r5, [sp, #24]
   150c8:	adds	r0, sl, r0
   150cc:	adc	r2, r8, r1
   150d0:	adds	r0, r0, r3
   150d4:	ldr	r1, [sp, #20]
   150d8:	str	r0, [sp, #116]	; 0x74
   150dc:	adc	r0, r2, r5
   150e0:	str	r0, [sp, #112]	; 0x70
   150e4:	ldr	r0, [sp, #104]	; 0x68
   150e8:	adds	r8, ip, r0
   150ec:	ldr	r0, [sp, #108]	; 0x6c
   150f0:	str	r8, [fp, #-200]	; 0xffffff38
   150f4:	adc	r9, r4, r0
   150f8:	ldr	r0, [sp, #84]	; 0x54
   150fc:	str	r9, [fp, #-196]	; 0xffffff3c
   15100:	eor	r2, r9, r0
   15104:	ldr	r0, [sp, #92]	; 0x5c
   15108:	lsl	r5, r2, #1
   1510c:	eor	r3, r8, r0
   15110:	ldr	r0, [sp, #264]	; 0x108
   15114:	orr	r5, r5, r3, lsr #31
   15118:	lsl	r3, r3, #1
   1511c:	orr	r2, r3, r2, lsr #31
   15120:	str	r5, [fp, #-236]	; 0xffffff14
   15124:	str	r2, [fp, #-240]	; 0xffffff10
   15128:	adds	r3, r1, r0
   1512c:	ldr	r0, [sp, #260]	; 0x104
   15130:	ldr	r1, [sp, #100]	; 0x64
   15134:	adc	r4, r1, r0
   15138:	ldr	r0, [sp, #28]
   1513c:	adds	r3, r3, r2
   15140:	ldr	r1, [sp, #148]	; 0x94
   15144:	adc	r4, r4, r5
   15148:	eor	ip, r0, r4
   1514c:	ldr	r0, [sp, #40]	; 0x28
   15150:	eor	sl, r0, r3
   15154:	ldr	r0, [sp, #144]	; 0x90
   15158:	adds	r0, ip, r0
   1515c:	adc	r1, sl, r1
   15160:	eor	r2, r0, r2
   15164:	lsl	r6, r2, #8
   15168:	eor	r5, r1, r5
   1516c:	lsr	r2, r2, #24
   15170:	orr	r6, r6, r5, lsr #24
   15174:	orr	r5, r2, r5, lsl #8
   15178:	ldr	r2, [sp, #224]	; 0xe0
   1517c:	str	r5, [sp, #108]	; 0x6c
   15180:	str	r6, [sp, #104]	; 0x68
   15184:	adds	r2, r3, r2
   15188:	ldr	r3, [sp, #220]	; 0xdc
   1518c:	adc	r3, r4, r3
   15190:	adds	r4, r2, r5
   15194:	adc	r2, r3, r6
   15198:	eor	r3, r4, ip
   1519c:	str	r4, [sp, #84]	; 0x54
   151a0:	str	r2, [sp, #100]	; 0x64
   151a4:	lsl	r4, r3, #16
   151a8:	eor	r2, r2, sl
   151ac:	lsr	r3, r3, #16
   151b0:	orr	r7, r4, r2, lsr #16
   151b4:	orr	r2, r3, r2, lsl #16
   151b8:	ldr	r4, [sp, #292]	; 0x124
   151bc:	adds	r0, r2, r0
   151c0:	str	r2, [sp, #92]	; 0x5c
   151c4:	ldr	r2, [sp, #16]
   151c8:	str	r7, [sp, #40]	; 0x28
   151cc:	str	r0, [sp, #12]
   151d0:	ldr	r0, [sp, #32]
   151d4:	adc	r5, r7, r1
   151d8:	ldr	r1, [sp, #36]	; 0x24
   151dc:	ldr	r7, [sp, #80]	; 0x50
   151e0:	eor	r0, lr, r0
   151e4:	eor	r3, r2, r1
   151e8:	lsl	r2, r0, #1
   151ec:	orr	r1, r2, r3, lsr #31
   151f0:	lsl	r2, r3, #1
   151f4:	ldr	r3, [sp, #244]	; 0xf4
   151f8:	orr	r0, r2, r0, lsr #31
   151fc:	ldr	r2, [sp, #248]	; 0xf8
   15200:	strd	r0, [r4]
   15204:	adds	r2, r0, r2
   15208:	adc	r3, r1, r3
   1520c:	adds	sl, r2, r7
   15210:	ldr	r2, [sp, #88]	; 0x58
   15214:	ldr	r7, [sp, #116]	; 0x74
   15218:	adc	r3, r3, r2
   1521c:	ldr	r2, [sp, #152]	; 0x98
   15220:	eor	lr, r3, r2
   15224:	ldr	r2, [sp, #156]	; 0x9c
   15228:	adds	r6, lr, r8
   1522c:	eor	r0, r6, r0
   15230:	str	r6, [sp, #28]
   15234:	eor	ip, sl, r2
   15238:	adc	r2, ip, r9
   1523c:	str	r2, [sp, #88]	; 0x58
   15240:	eor	r2, r2, r1
   15244:	lsl	r1, r0, #8
   15248:	lsr	r0, r0, #24
   1524c:	orr	r4, r1, r2, lsr #24
   15250:	orr	r2, r0, r2, lsl #8
   15254:	ldr	r0, [sp, #256]	; 0x100
   15258:	ldr	r1, [sp, #252]	; 0xfc
   1525c:	str	r2, [sp, #44]	; 0x2c
   15260:	str	r4, [sp, #36]	; 0x24
   15264:	adds	r0, sl, r0
   15268:	ldr	sl, [sp, #12]
   1526c:	adc	r1, r3, r1
   15270:	adds	r2, r0, r2
   15274:	adc	r0, r1, r4
   15278:	ldr	r4, [sp, #112]	; 0x70
   1527c:	str	r2, [sp, #32]
   15280:	eor	r2, r2, lr
   15284:	str	r0, [sp, #80]	; 0x50
   15288:	lsr	r1, r2, #16
   1528c:	eor	r0, r0, ip
   15290:	lsl	r2, r2, #16
   15294:	orr	r1, r1, r0, lsl #16
   15298:	orr	r6, r2, r0, lsr #16
   1529c:	ldr	r0, [sp, #136]	; 0x88
   152a0:	eor	r3, r7, r1
   152a4:	str	r1, [sp, #20]
   152a8:	eor	r2, r4, r6
   152ac:	adds	lr, r2, sl
   152b0:	adc	r8, r3, r5
   152b4:	eor	r1, r8, r0
   152b8:	ldr	r0, [sp, #140]	; 0x8c
   152bc:	eor	r0, lr, r0
   152c0:	lsl	r9, r0, #8
   152c4:	lsr	r0, r0, #24
   152c8:	orr	r9, r9, r1, lsr #24
   152cc:	orr	r0, r0, r1, lsl #8
   152d0:	ldr	r1, [sp, #168]	; 0xa8
   152d4:	adds	r1, r7, r1
   152d8:	ldr	r7, [sp, #164]	; 0xa4
   152dc:	adc	ip, r4, r7
   152e0:	adds	r7, r1, r0
   152e4:	ldr	r4, [sp, #208]	; 0xd0
   152e8:	adc	r1, ip, r9
   152ec:	eor	r2, r7, r2
   152f0:	str	r7, [sp, #112]	; 0x70
   152f4:	eor	ip, r1, r3
   152f8:	lsl	r3, r2, #16
   152fc:	lsr	r2, r2, #16
   15300:	str	r1, [sp, #116]	; 0x74
   15304:	orr	r1, r2, ip, lsl #16
   15308:	orr	r3, r3, ip, lsr #16
   1530c:	ldr	ip, [sp, #204]	; 0xcc
   15310:	adds	r2, r1, lr
   15314:	str	r1, [sp, #156]	; 0x9c
   15318:	str	r3, [sp, #152]	; 0x98
   1531c:	adc	r1, r3, r8
   15320:	str	r2, [sp, #136]	; 0x88
   15324:	eor	r0, r2, r0
   15328:	str	r1, [sp, #140]	; 0x8c
   1532c:	eor	r1, r1, r9
   15330:	lsl	r2, r1, #1
   15334:	orr	r2, r2, r0, lsr #31
   15338:	lsl	r0, r0, #1
   1533c:	orr	r0, r0, r1, lsr #31
   15340:	ldr	r1, [sp, #108]	; 0x6c
   15344:	str	r2, [sp, #144]	; 0x90
   15348:	str	r0, [sp, #148]	; 0x94
   1534c:	ldr	r0, [sp, #104]	; 0x68
   15350:	eor	r1, sl, r1
   15354:	eor	r0, r5, r0
   15358:	lsl	r2, r0, #1
   1535c:	orr	r8, r2, r1, lsr #31
   15360:	lsl	r1, r1, #1
   15364:	ldr	r2, [sp, #96]	; 0x60
   15368:	orr	lr, r1, r0, lsr #31
   1536c:	ldr	r1, [sp, #76]	; 0x4c
   15370:	ldr	r0, [sp, #28]
   15374:	adds	r3, r1, r4
   15378:	ldr	r1, [sp, #20]
   1537c:	adc	r2, r2, ip
   15380:	adds	sl, r3, lr
   15384:	ldr	r3, [sp, #24]
   15388:	adc	r9, r2, r8
   1538c:	ldr	r2, [sp, #52]	; 0x34
   15390:	adds	r0, r1, r0
   15394:	ldr	r1, [sp, #88]	; 0x58
   15398:	str	r0, [sp, #20]
   1539c:	eor	r7, r3, r2
   153a0:	ldr	r2, [sp, #56]	; 0x38
   153a4:	ldr	r3, [sp, #48]	; 0x30
   153a8:	adc	r1, r6, r1
   153ac:	str	r1, [sp, #16]
   153b0:	eor	r5, r3, r2
   153b4:	lsr	r6, r5, #16
   153b8:	lsl	r5, r5, #16
   153bc:	orr	r6, r6, r7, lsl #16
   153c0:	orr	r7, r5, r7, lsr #16
   153c4:	eor	r2, r7, r9
   153c8:	eor	r3, r6, sl
   153cc:	str	r7, [fp, #-188]	; 0xffffff44
   153d0:	str	r6, [fp, #-192]	; 0xffffff40
   153d4:	adds	r5, r2, r0
   153d8:	str	r2, [sp, #76]	; 0x4c
   153dc:	str	r3, [sp, #56]	; 0x38
   153e0:	adc	r2, r3, r1
   153e4:	eor	r0, r5, lr
   153e8:	str	r5, [sp, #104]	; 0x68
   153ec:	ldr	r1, [sp, #148]	; 0x94
   153f0:	lsl	r5, r0, #8
   153f4:	eor	r3, r2, r8
   153f8:	lsr	r0, r0, #24
   153fc:	str	r2, [sp, #108]	; 0x6c
   15400:	orr	r2, r0, r3, lsl #8
   15404:	ldr	r0, [sp, #272]	; 0x110
   15408:	orr	r5, r5, r3, lsr #24
   1540c:	ldr	r3, [sp, #268]	; 0x10c
   15410:	str	r2, [sp, #96]	; 0x60
   15414:	str	r5, [sp, #88]	; 0x58
   15418:	adds	r0, sl, r0
   1541c:	adc	r3, r9, r3
   15420:	adds	r0, r0, r2
   15424:	adc	r2, r3, r5
   15428:	str	r0, [sp, #52]	; 0x34
   1542c:	adds	r0, r0, r4
   15430:	ldr	r4, [sp, #40]	; 0x28
   15434:	str	r2, [sp, #48]	; 0x30
   15438:	adc	r2, r2, ip
   1543c:	adds	r0, r0, r1
   15440:	str	r0, [sp, #28]
   15444:	ldr	r0, [sp, #144]	; 0x90
   15448:	adc	r0, r2, r0
   1544c:	ldr	r2, [sp, #32]
   15450:	str	r0, [sp, #24]
   15454:	ldr	r0, [sp, #68]	; 0x44
   15458:	adds	r9, r6, r0
   1545c:	ldr	r0, [sp, #72]	; 0x48
   15460:	str	r9, [fp, #-224]	; 0xffffff20
   15464:	adc	r8, r7, r0
   15468:	ldr	r0, [sp, #60]	; 0x3c
   1546c:	str	r8, [fp, #-220]	; 0xffffff24
   15470:	eor	r1, r8, r0
   15474:	ldr	r0, [sp, #64]	; 0x40
   15478:	lsl	r6, r1, #1
   1547c:	eor	r7, r9, r0
   15480:	ldr	r0, [sp, #200]	; 0xc8
   15484:	orr	r6, r6, r7, lsr #31
   15488:	lsl	r7, r7, #1
   1548c:	orr	r1, r7, r1, lsr #31
   15490:	str	r6, [fp, #-252]	; 0xffffff04
   15494:	str	r1, [fp, #-256]	; 0xffffff00
   15498:	adds	r7, r2, r0
   1549c:	ldr	r0, [sp, #196]	; 0xc4
   154a0:	ldr	r2, [sp, #80]	; 0x50
   154a4:	adc	r5, r2, r0
   154a8:	ldr	r0, [sp, #128]	; 0x80
   154ac:	ldr	r2, [sp, #120]	; 0x78
   154b0:	adds	sl, r7, r1
   154b4:	adc	lr, r5, r6
   154b8:	eor	r5, lr, r4
   154bc:	str	r0, [fp, #-180]	; 0xffffff4c
   154c0:	ldr	r0, [sp, #132]	; 0x84
   154c4:	adds	r7, r5, r2
   154c8:	eor	r1, r7, r1
   154cc:	str	r0, [fp, #-184]	; 0xffffff48
   154d0:	ldr	r0, [sp, #124]	; 0x7c
   154d4:	str	r2, [fp, #-216]	; 0xffffff28
   154d8:	lsl	r2, r1, #8
   154dc:	lsr	r1, r1, #24
   154e0:	str	r0, [fp, #-212]	; 0xffffff2c
   154e4:	str	r4, [fp, #-172]	; 0xffffff54
   154e8:	ldr	r4, [sp, #92]	; 0x5c
   154ec:	str	r4, [fp, #-176]	; 0xffffff50
   154f0:	eor	r4, sl, r4
   154f4:	adc	ip, r4, r0
   154f8:	eor	r6, ip, r6
   154fc:	orr	r0, r1, r6, lsl #8
   15500:	ldr	r1, [sp, #240]	; 0xf0
   15504:	orr	r3, r2, r6, lsr #24
   15508:	ldr	r2, [sp, #236]	; 0xec
   1550c:	str	r0, [sp, #72]	; 0x48
   15510:	str	r3, [sp, #68]	; 0x44
   15514:	adds	r1, sl, r1
   15518:	adc	r2, lr, r2
   1551c:	adds	r6, r1, r0
   15520:	ldr	r0, [sp, #36]	; 0x24
   15524:	adc	r1, r2, r3
   15528:	eor	r2, r6, r5
   1552c:	str	r6, [sp, #80]	; 0x50
   15530:	str	r1, [sp, #92]	; 0x5c
   15534:	lsl	r5, r2, #16
   15538:	eor	r1, r1, r4
   1553c:	lsr	r2, r2, #16
   15540:	orr	r6, r5, r1, lsr #16
   15544:	orr	r1, r2, r1, lsl #16
   15548:	ldr	r2, [sp, #20]
   1554c:	adds	lr, r1, r7
   15550:	str	r1, [sp, #120]	; 0x78
   15554:	ldr	r1, [sp, #16]
   15558:	ldr	r7, [sp, #100]	; 0x64
   1555c:	str	r6, [sp, #32]
   15560:	adc	ip, r6, ip
   15564:	str	lr, [sp, #12]
   15568:	str	ip, [sp, #8]
   1556c:	eor	r0, r1, r0
   15570:	ldr	r1, [sp, #44]	; 0x2c
   15574:	eor	r1, r2, r1
   15578:	lsl	r2, r0, #1
   1557c:	orr	r4, r2, r1, lsr #31
   15580:	lsl	r1, r1, #1
   15584:	ldr	r2, [sp, #84]	; 0x54
   15588:	orr	r0, r1, r0, lsr #31
   1558c:	ldr	r1, [sp, #216]	; 0xd8
   15590:	adds	r1, r2, r1
   15594:	ldr	r2, [sp, #212]	; 0xd4
   15598:	adc	r2, r7, r2
   1559c:	adds	r5, r1, r0
   155a0:	ldr	r1, [sp, #128]	; 0x80
   155a4:	adc	r7, r2, r4
   155a8:	ldr	r2, [sp, #132]	; 0x84
   155ac:	eor	sl, r7, r1
   155b0:	adds	r6, sl, r9
   155b4:	eor	r2, r5, r2
   155b8:	adc	r1, r2, r8
   155bc:	eor	r0, r6, r0
   155c0:	str	r6, [sp, #60]	; 0x3c
   155c4:	eor	r3, r1, r4
   155c8:	lsl	r4, r0, #8
   155cc:	lsr	r0, r0, #24
   155d0:	str	r1, [sp, #64]	; 0x40
   155d4:	orr	r6, r4, r3, lsr #24
   155d8:	orr	r3, r0, r3, lsl #8
   155dc:	ldr	r0, [sp, #228]	; 0xe4
   155e0:	ldr	r4, [sp, #232]	; 0xe8
   155e4:	str	r3, [sp, #132]	; 0x84
   155e8:	str	r6, [sp, #40]	; 0x28
   155ec:	adds	r0, r5, r0
   155f0:	ldr	r5, [sp, #24]
   155f4:	adc	r7, r7, r4
   155f8:	adds	r3, r0, r3
   155fc:	adc	r0, r7, r6
   15600:	eor	r1, r3, sl
   15604:	str	r3, [sp, #36]	; 0x24
   15608:	ldr	r3, [sp, #28]
   1560c:	str	r0, [sp, #44]	; 0x2c
   15610:	eor	r0, r0, r2
   15614:	lsr	r2, r1, #16
   15618:	lsl	r1, r1, #16
   1561c:	orr	sl, r2, r0, lsl #16
   15620:	orr	r6, r1, r0, lsr #16
   15624:	ldr	r0, [sp, #152]	; 0x98
   15628:	eor	r4, r5, r6
   1562c:	eor	r2, r3, sl
   15630:	adds	r8, r4, lr
   15634:	adc	r7, r2, ip
   15638:	str	r0, [fp, #-164]	; 0xffffff5c
   1563c:	ldr	r0, [sp, #156]	; 0x9c
   15640:	str	r0, [fp, #-168]	; 0xffffff58
   15644:	ldr	r0, [sp, #136]	; 0x88
   15648:	str	r0, [fp, #-208]	; 0xffffff30
   1564c:	ldr	r0, [sp, #140]	; 0x8c
   15650:	str	r0, [fp, #-204]	; 0xffffff34
   15654:	ldr	r0, [sp, #144]	; 0x90
   15658:	str	r0, [fp, #-244]	; 0xffffff0c
   1565c:	eor	r1, r7, r0
   15660:	ldr	r0, [sp, #148]	; 0x94
   15664:	str	r0, [fp, #-248]	; 0xffffff08
   15668:	eor	r0, r8, r0
   1566c:	lsl	lr, r0, #8
   15670:	lsr	r0, r0, #24
   15674:	orr	lr, lr, r1, lsr #24
   15678:	orr	ip, r0, r1, lsl #8
   1567c:	ldr	r1, [sp, #192]	; 0xc0
   15680:	adds	r1, r3, r1
   15684:	ldr	r3, [sp, #188]	; 0xbc
   15688:	adc	r3, r5, r3
   1568c:	adds	r0, r1, ip
   15690:	ldr	r5, [sp, #52]	; 0x34
   15694:	adc	r1, r3, lr
   15698:	str	r0, [sp, #84]	; 0x54
   1569c:	str	r1, [sp, #100]	; 0x64
   156a0:	eor	r1, r1, r2
   156a4:	eor	r2, r0, r4
   156a8:	lsl	r3, r2, #16
   156ac:	lsr	r2, r2, #16
   156b0:	orr	r3, r3, r1, lsr #16
   156b4:	orr	r1, r2, r1, lsl #16
   156b8:	adds	r2, r1, r8
   156bc:	str	r1, [sp, #148]	; 0x94
   156c0:	str	r3, [sp, #144]	; 0x90
   156c4:	adc	r1, r3, r7
   156c8:	str	r2, [sp, #124]	; 0x7c
   156cc:	eor	r0, r2, ip
   156d0:	ldr	r3, [sp, #112]	; 0x70
   156d4:	ldr	r7, [sp, #116]	; 0x74
   156d8:	str	r1, [sp, #128]	; 0x80
   156dc:	eor	r1, r1, lr
   156e0:	lsl	r2, r1, #1
   156e4:	orr	r9, r2, r0, lsr #31
   156e8:	lsl	r0, r0, #1
   156ec:	ldr	r2, [sp, #12]
   156f0:	orr	r8, r0, r1, lsr #31
   156f4:	ldr	r0, [sp, #68]	; 0x44
   156f8:	ldr	r1, [sp, #8]
   156fc:	str	r9, [sp, #24]
   15700:	str	r8, [sp, #28]
   15704:	eor	r0, r1, r0
   15708:	ldr	r1, [sp, #72]	; 0x48
   1570c:	eor	r1, r2, r1
   15710:	lsl	r2, r0, #1
   15714:	orr	r2, r2, r1, lsr #31
   15718:	lsl	r1, r1, #1
   1571c:	orr	ip, r1, r0, lsr #31
   15720:	ldr	r1, [sp, #280]	; 0x118
   15724:	ldr	r0, [sp, #60]	; 0x3c
   15728:	adds	r1, r3, r1
   1572c:	ldr	r3, [sp, #276]	; 0x114
   15730:	adc	r3, r7, r3
   15734:	adds	r1, r1, ip
   15738:	ldr	r7, [sp, #56]	; 0x38
   1573c:	adc	r3, r3, r2
   15740:	adds	sl, sl, r0
   15744:	ldr	r0, [sp, #64]	; 0x40
   15748:	str	sl, [sp, #20]
   1574c:	adc	r0, r6, r0
   15750:	ldr	r6, [sp, #48]	; 0x30
   15754:	str	r0, [sp, #16]
   15758:	eor	r6, r6, r7
   1575c:	ldr	r7, [sp, #76]	; 0x4c
   15760:	eor	r4, r5, r7
   15764:	lsr	r5, r4, #16
   15768:	lsl	r4, r4, #16
   1576c:	orr	lr, r5, r6, lsl #16
   15770:	orr	r6, r4, r6, lsr #16
   15774:	eor	r7, r3, r6
   15778:	eor	r5, r1, lr
   1577c:	adds	r4, r7, sl
   15780:	str	r7, [sp, #60]	; 0x3c
   15784:	str	r5, [sp, #56]	; 0x38
   15788:	adc	r7, r5, r0
   1578c:	eor	r0, r4, ip
   15790:	str	r4, [sp, #72]	; 0x48
   15794:	lsl	r4, r0, #8
   15798:	eor	r2, r7, r2
   1579c:	lsr	r0, r0, #24
   157a0:	str	r7, [sp, #76]	; 0x4c
   157a4:	orr	r7, r4, r2, lsr #24
   157a8:	orr	r2, r0, r2, lsl #8
   157ac:	ldr	r0, [sp, #228]	; 0xe4
   157b0:	str	r2, [sp, #68]	; 0x44
   157b4:	str	r7, [sp, #64]	; 0x40
   157b8:	adds	r0, r1, r0
   157bc:	ldr	r1, [sp, #232]	; 0xe8
   157c0:	adc	r1, r3, r1
   157c4:	adds	r2, r0, r2
   157c8:	ldr	r0, [sp, #256]	; 0x100
   157cc:	adc	r3, r1, r7
   157d0:	ldr	r1, [sp, #252]	; 0xfc
   157d4:	str	r2, [sp, #52]	; 0x34
   157d8:	ldr	r7, [sp, #44]	; 0x2c
   157dc:	str	r3, [sp, #48]	; 0x30
   157e0:	adds	r0, r8, r0
   157e4:	adc	r1, r9, r1
   157e8:	adds	r0, r0, r2
   157ec:	str	r0, [sp, #116]	; 0x74
   157f0:	adc	r0, r1, r3
   157f4:	str	r0, [sp, #112]	; 0x70
   157f8:	ldr	r0, [sp, #104]	; 0x68
   157fc:	adds	r4, lr, r0
   15800:	ldr	r0, [sp, #108]	; 0x6c
   15804:	str	r4, [fp, #-200]	; 0xffffff38
   15808:	adc	r5, r6, r0
   1580c:	ldr	r0, [sp, #88]	; 0x58
   15810:	str	r5, [fp, #-196]	; 0xffffff3c
   15814:	eor	r1, r5, r0
   15818:	ldr	r0, [sp, #96]	; 0x60
   1581c:	lsl	r3, r1, #1
   15820:	eor	r2, r4, r0
   15824:	ldr	r0, [sp, #288]	; 0x120
   15828:	orr	r3, r3, r2, lsr #31
   1582c:	lsl	r2, r2, #1
   15830:	orr	r1, r2, r1, lsr #31
   15834:	ldr	r2, [sp, #36]	; 0x24
   15838:	str	r3, [fp, #-236]	; 0xffffff14
   1583c:	str	r1, [fp, #-240]	; 0xffffff10
   15840:	adds	r2, r2, r0
   15844:	ldr	r0, [sp, #284]	; 0x11c
   15848:	adc	r6, r7, r0
   1584c:	ldr	r0, [sp, #32]
   15850:	ldr	r7, [sp, #136]	; 0x88
   15854:	adds	r2, r2, r1
   15858:	adc	r6, r6, r3
   1585c:	eor	sl, r0, r6
   15860:	ldr	r0, [sp, #120]	; 0x78
   15864:	adds	ip, sl, r7
   15868:	ldr	r7, [sp, #140]	; 0x8c
   1586c:	eor	r1, ip, r1
   15870:	eor	r8, r0, r2
   15874:	adc	lr, r8, r7
   15878:	lsl	r7, r1, #8
   1587c:	lsr	r1, r1, #24
   15880:	eor	r3, lr, r3
   15884:	orr	r0, r1, r3, lsl #8
   15888:	ldr	r1, [sp, #216]	; 0xd8
   1588c:	orr	r7, r7, r3, lsr #24
   15890:	str	r0, [sp, #108]	; 0x6c
   15894:	str	r7, [sp, #104]	; 0x68
   15898:	adds	r1, r2, r1
   1589c:	ldr	r2, [sp, #212]	; 0xd4
   158a0:	adc	r2, r6, r2
   158a4:	adds	r3, r1, r0
   158a8:	adc	r1, r2, r7
   158ac:	str	r3, [sp, #88]	; 0x58
   158b0:	str	r1, [sp, #120]	; 0x78
   158b4:	eor	r0, r1, r8
   158b8:	eor	r1, r3, sl
   158bc:	ldr	r3, [sp, #156]	; 0x9c
   158c0:	lsl	r2, r1, #16
   158c4:	lsr	r1, r1, #16
   158c8:	orr	r2, r2, r0, lsr #16
   158cc:	orr	r0, r1, r0, lsl #16
   158d0:	ldr	r1, [sp, #16]
   158d4:	adds	sl, r0, ip
   158d8:	str	r0, [sp, #96]	; 0x60
   158dc:	ldr	r0, [sp, #40]	; 0x28
   158e0:	str	r2, [sp, #44]	; 0x2c
   158e4:	adc	lr, r2, lr
   158e8:	ldr	r2, [sp, #20]
   158ec:	str	sl, [sp, #8]
   158f0:	eor	r0, r1, r0
   158f4:	ldr	r1, [sp, #132]	; 0x84
   158f8:	lsl	r7, r0, #1
   158fc:	eor	r1, r2, r1
   15900:	ldr	r2, [sp, #80]	; 0x50
   15904:	orr	r9, r7, r1, lsr #31
   15908:	lsl	r1, r1, #1
   1590c:	orr	r8, r1, r0, lsr #31
   15910:	ldr	r0, [sp, #272]	; 0x110
   15914:	ldr	r1, [sp, #268]	; 0x10c
   15918:	adds	r0, r8, r0
   1591c:	adc	r1, r9, r1
   15920:	adds	r0, r0, r2
   15924:	ldr	r2, [sp, #92]	; 0x5c
   15928:	eor	ip, r0, r3
   1592c:	adc	r1, r1, r2
   15930:	ldr	r2, [sp, #152]	; 0x98
   15934:	eor	r2, r1, r2
   15938:	adds	r7, r2, r4
   1593c:	adc	r3, ip, r5
   15940:	eor	r5, r7, r8
   15944:	str	r7, [sp, #16]
   15948:	str	r3, [sp, #20]
   1594c:	eor	r4, r3, r9
   15950:	ldr	r3, [sp, #292]	; 0x124
   15954:	strd	r8, [r3]
   15958:	lsl	r3, r5, #8
   1595c:	orr	r7, r3, r4, lsr #24
   15960:	lsr	r3, r5, #24
   15964:	orr	r6, r3, r4, lsl #8
   15968:	ldr	r3, [sp, #200]	; 0xc8
   1596c:	str	r7, [sp, #40]	; 0x28
   15970:	str	r6, [sp, #92]	; 0x5c
   15974:	adds	r0, r0, r3
   15978:	ldr	r3, [sp, #196]	; 0xc4
   1597c:	adc	r1, r1, r3
   15980:	adds	r3, r0, r6
   15984:	ldr	r6, [sp, #112]	; 0x70
   15988:	adc	r0, r1, r7
   1598c:	eor	r2, r3, r2
   15990:	ldr	r7, [sp, #116]	; 0x74
   15994:	str	r3, [sp, #36]	; 0x24
   15998:	str	r0, [sp, #80]	; 0x50
   1599c:	lsr	r1, r2, #16
   159a0:	eor	r0, r0, ip
   159a4:	lsl	r2, r2, #16
   159a8:	orr	r1, r1, r0, lsl #16
   159ac:	orr	r9, r2, r0, lsr #16
   159b0:	ldr	r0, [sp, #24]
   159b4:	eor	r2, r6, r9
   159b8:	str	r1, [sp, #12]
   159bc:	eor	r3, r7, r1
   159c0:	adds	r4, r2, sl
   159c4:	adc	r5, r3, lr
   159c8:	eor	r1, r5, r0
   159cc:	ldr	r0, [sp, #28]
   159d0:	eor	r0, r4, r0
   159d4:	lsl	r8, r0, #8
   159d8:	lsr	r0, r0, #24
   159dc:	orr	r8, r8, r1, lsr #24
   159e0:	orr	r0, r0, r1, lsl #8
   159e4:	ldr	r1, [sp, #176]	; 0xb0
   159e8:	adds	r1, r7, r1
   159ec:	ldr	r7, [sp, #172]	; 0xac
   159f0:	adc	ip, r6, r7
   159f4:	adds	r6, r1, r0
   159f8:	ldr	r7, [sp, #100]	; 0x64
   159fc:	adc	r1, ip, r8
   15a00:	eor	r2, r6, r2
   15a04:	str	r6, [sp, #112]	; 0x70
   15a08:	str	r1, [sp, #116]	; 0x74
   15a0c:	eor	r1, r1, r3
   15a10:	lsl	r3, r2, #16
   15a14:	lsr	r2, r2, #16
   15a18:	orr	r3, r3, r1, lsr #16
   15a1c:	orr	r1, r2, r1, lsl #16
   15a20:	adds	r2, r1, r4
   15a24:	str	r1, [sp, #156]	; 0x9c
   15a28:	str	r3, [sp, #152]	; 0x98
   15a2c:	adc	r1, r3, r5
   15a30:	str	r2, [sp, #136]	; 0x88
   15a34:	eor	r0, r2, r0
   15a38:	str	r1, [sp, #140]	; 0x8c
   15a3c:	eor	r1, r1, r8
   15a40:	lsl	r2, r1, #1
   15a44:	orr	r2, r2, r0, lsr #31
   15a48:	lsl	r0, r0, #1
   15a4c:	orr	sl, r0, r1, lsr #31
   15a50:	ldr	r0, [sp, #104]	; 0x68
   15a54:	str	r2, [sp, #132]	; 0x84
   15a58:	ldr	r1, [sp, #108]	; 0x6c
   15a5c:	ldr	r2, [sp, #8]
   15a60:	str	sl, [sp, #32]
   15a64:	eor	r0, lr, r0
   15a68:	eor	r1, r2, r1
   15a6c:	lsl	r2, r0, #1
   15a70:	orr	lr, r2, r1, lsr #31
   15a74:	lsl	r1, r1, #1
   15a78:	ldr	r2, [sp, #84]	; 0x54
   15a7c:	orr	r0, r1, r0, lsr #31
   15a80:	ldr	r1, [sp, #248]	; 0xf8
   15a84:	adds	r1, r2, r1
   15a88:	ldr	r2, [sp, #244]	; 0xf4
   15a8c:	adc	r2, r7, r2
   15a90:	adds	ip, r1, r0
   15a94:	ldr	r1, [sp, #16]
   15a98:	adc	r8, r2, lr
   15a9c:	ldr	r2, [sp, #12]
   15aa0:	adds	r5, r2, r1
   15aa4:	ldr	r1, [sp, #20]
   15aa8:	ldr	r2, [sp, #48]	; 0x30
   15aac:	str	r5, [sp, #28]
   15ab0:	adc	r3, r9, r1
   15ab4:	ldr	r1, [sp, #56]	; 0x38
   15ab8:	ldr	r9, [sp, #168]	; 0xa8
   15abc:	str	r3, [sp, #16]
   15ac0:	eor	r6, r2, r1
   15ac4:	ldr	r1, [sp, #60]	; 0x3c
   15ac8:	ldr	r2, [sp, #52]	; 0x34
   15acc:	eor	r4, r2, r1
   15ad0:	lsr	r2, r4, #16
   15ad4:	lsl	r4, r4, #16
   15ad8:	orr	r4, r4, r6, lsr #16
   15adc:	orr	r2, r2, r6, lsl #16
   15ae0:	eor	r7, r4, r8
   15ae4:	eor	r1, r2, ip
   15ae8:	str	r2, [fp, #-192]	; 0xffffff40
   15aec:	str	r4, [fp, #-188]	; 0xffffff44
   15af0:	str	r7, [sp, #60]	; 0x3c
   15af4:	adds	r7, r7, r5
   15af8:	str	r1, [sp, #56]	; 0x38
   15afc:	adc	r6, r1, r3
   15b00:	eor	r0, r7, r0
   15b04:	str	r7, [sp, #104]	; 0x68
   15b08:	ldr	r1, [sp, #220]	; 0xdc
   15b0c:	str	r6, [sp, #108]	; 0x6c
   15b10:	eor	r3, r6, lr
   15b14:	lsl	r6, r0, #8
   15b18:	lsr	r0, r0, #24
   15b1c:	orr	r7, r6, r3, lsr #24
   15b20:	orr	r3, r0, r3, lsl #8
   15b24:	ldr	r0, [sp, #224]	; 0xe0
   15b28:	str	r3, [sp, #100]	; 0x64
   15b2c:	str	r7, [sp, #84]	; 0x54
   15b30:	adds	r0, ip, r0
   15b34:	adc	r1, r8, r1
   15b38:	ldr	r8, [sp, #164]	; 0xa4
   15b3c:	adds	r0, r0, r3
   15b40:	adc	r1, r1, r7
   15b44:	str	r0, [sp, #52]	; 0x34
   15b48:	adds	r0, r0, r9
   15b4c:	ldr	r7, [sp, #80]	; 0x50
   15b50:	str	r1, [sp, #48]	; 0x30
   15b54:	adc	r1, r1, r8
   15b58:	adds	r0, r0, sl
   15b5c:	str	r0, [sp, #24]
   15b60:	ldr	r0, [sp, #132]	; 0x84
   15b64:	adc	r0, r1, r0
   15b68:	str	r0, [sp, #20]
   15b6c:	ldr	r0, [sp, #72]	; 0x48
   15b70:	adds	r5, r2, r0
   15b74:	ldr	r0, [sp, #76]	; 0x4c
   15b78:	str	r5, [fp, #-224]	; 0xffffff20
   15b7c:	str	r5, [sp, #12]
   15b80:	adc	r6, r4, r0
   15b84:	ldr	r0, [sp, #64]	; 0x40
   15b88:	str	r6, [fp, #-220]	; 0xffffff24
   15b8c:	eor	r1, r6, r0
   15b90:	ldr	r0, [sp, #68]	; 0x44
   15b94:	lsl	r3, r1, #1
   15b98:	eor	r2, r5, r0
   15b9c:	ldr	r0, [sp, #184]	; 0xb8
   15ba0:	ldr	r5, [sp, #128]	; 0x80
   15ba4:	orr	r3, r3, r2, lsr #31
   15ba8:	lsl	r2, r2, #1
   15bac:	orr	r1, r2, r1, lsr #31
   15bb0:	ldr	r2, [sp, #36]	; 0x24
   15bb4:	str	r3, [fp, #-252]	; 0xffffff04
   15bb8:	str	r1, [fp, #-256]	; 0xffffff00
   15bbc:	adds	r2, r2, r0
   15bc0:	ldr	r0, [sp, #180]	; 0xb4
   15bc4:	adc	r4, r7, r0
   15bc8:	ldr	r0, [sp, #144]	; 0x90
   15bcc:	adds	sl, r2, r1
   15bd0:	ldr	r2, [sp, #44]	; 0x2c
   15bd4:	adc	r4, r4, r3
   15bd8:	str	r0, [fp, #-180]	; 0xffffff4c
   15bdc:	ldr	r0, [sp, #148]	; 0x94
   15be0:	eor	r7, r4, r2
   15be4:	str	r0, [fp, #-184]	; 0xffffff48
   15be8:	ldr	r0, [sp, #124]	; 0x7c
   15bec:	str	r5, [fp, #-212]	; 0xffffff2c
   15bf0:	str	r0, [fp, #-216]	; 0xffffff28
   15bf4:	str	r2, [fp, #-172]	; 0xffffff54
   15bf8:	ldr	r2, [sp, #96]	; 0x60
   15bfc:	adds	lr, r7, r0
   15c00:	eor	r1, lr, r1
   15c04:	str	r2, [fp, #-176]	; 0xffffff50
   15c08:	eor	r2, sl, r2
   15c0c:	adc	ip, r2, r5
   15c10:	lsl	r5, r1, #8
   15c14:	lsr	r1, r1, #24
   15c18:	eor	r3, ip, r3
   15c1c:	orr	r0, r1, r3, lsl #8
   15c20:	ldr	r1, [sp, #264]	; 0x108
   15c24:	orr	r5, r5, r3, lsr #24
   15c28:	ldr	r3, [sp, #260]	; 0x104
   15c2c:	str	r0, [sp, #76]	; 0x4c
   15c30:	str	r5, [sp, #72]	; 0x48
   15c34:	adds	r1, sl, r1
   15c38:	adc	r3, r4, r3
   15c3c:	adds	r4, r1, r0
   15c40:	adc	r1, r3, r5
   15c44:	str	r4, [sp, #80]	; 0x50
   15c48:	str	r1, [sp, #96]	; 0x60
   15c4c:	eor	r1, r1, r2
   15c50:	eor	r2, r4, r7
   15c54:	lsl	r3, r2, #16
   15c58:	lsr	r2, r2, #16
   15c5c:	orr	r3, r3, r1, lsr #16
   15c60:	orr	r1, r2, r1, lsl #16
   15c64:	ldr	r2, [sp, #28]
   15c68:	adds	r0, r1, lr
   15c6c:	str	r1, [sp, #44]	; 0x2c
   15c70:	ldr	r1, [sp, #16]
   15c74:	str	r3, [sp, #36]	; 0x24
   15c78:	str	r0, [sp, #8]
   15c7c:	ldr	r0, [sp, #40]	; 0x28
   15c80:	adc	ip, r3, ip
   15c84:	ldr	r3, [sp, #12]
   15c88:	str	ip, [sp, #4]
   15c8c:	eor	r0, r1, r0
   15c90:	ldr	r1, [sp, #92]	; 0x5c
   15c94:	lsl	r7, r0, #1
   15c98:	eor	r2, r2, r1
   15c9c:	ldr	r1, [sp, #120]	; 0x78
   15ca0:	orr	r7, r7, r2, lsr #31
   15ca4:	lsl	r2, r2, #1
   15ca8:	orr	r4, r2, r0, lsr #31
   15cac:	ldr	r0, [sp, #88]	; 0x58
   15cb0:	adds	r0, r0, r9
   15cb4:	adc	r2, r1, r8
   15cb8:	adds	r1, r0, r4
   15cbc:	adc	r0, r2, r7
   15cc0:	ldr	r2, [sp, #144]	; 0x90
   15cc4:	eor	r8, r0, r2
   15cc8:	ldr	r2, [sp, #148]	; 0x94
   15ccc:	adds	r3, r8, r3
   15cd0:	eor	r4, r3, r4
   15cd4:	str	r3, [sp, #64]	; 0x40
   15cd8:	ldr	r3, [sp, #240]	; 0xf0
   15cdc:	lsl	r5, r4, #8
   15ce0:	lsr	r4, r4, #24
   15ce4:	eor	r2, r1, r2
   15ce8:	adc	r6, r2, r6
   15cec:	adds	r1, r1, r3
   15cf0:	ldr	r3, [sp, #236]	; 0xec
   15cf4:	eor	r7, r6, r7
   15cf8:	str	r6, [sp, #68]	; 0x44
   15cfc:	ldr	r6, [sp, #8]
   15d00:	orr	r5, r5, r7, lsr #24
   15d04:	orr	r7, r4, r7, lsl #8
   15d08:	str	r5, [sp, #144]	; 0x90
   15d0c:	str	r7, [sp, #148]	; 0x94
   15d10:	adc	r0, r0, r3
   15d14:	adds	r1, r1, r7
   15d18:	ldr	r3, [sp, #24]
   15d1c:	adc	r0, r0, r5
   15d20:	str	r1, [sp, #28]
   15d24:	str	r0, [sp, #40]	; 0x28
   15d28:	eor	r0, r0, r2
   15d2c:	eor	r2, r1, r8
   15d30:	lsr	r5, r2, #16
   15d34:	lsl	r2, r2, #16
   15d38:	orr	sl, r5, r0, lsl #16
   15d3c:	orr	r9, r2, r0, lsr #16
   15d40:	ldr	r0, [sp, #152]	; 0x98
   15d44:	ldr	r5, [sp, #20]
   15d48:	eor	r2, r3, sl
   15d4c:	str	r0, [fp, #-164]	; 0xffffff5c
   15d50:	ldr	r0, [sp, #156]	; 0x9c
   15d54:	eor	lr, r5, r9
   15d58:	adds	r8, lr, r6
   15d5c:	adc	r7, r2, ip
   15d60:	str	r0, [fp, #-168]	; 0xffffff58
   15d64:	ldr	r0, [sp, #136]	; 0x88
   15d68:	str	r0, [fp, #-208]	; 0xffffff30
   15d6c:	ldr	r0, [sp, #140]	; 0x8c
   15d70:	str	r0, [fp, #-204]	; 0xffffff34
   15d74:	ldr	r0, [sp, #132]	; 0x84
   15d78:	str	r0, [fp, #-244]	; 0xffffff0c
   15d7c:	eor	r1, r7, r0
   15d80:	ldr	r0, [sp, #32]
   15d84:	str	r0, [fp, #-248]	; 0xffffff08
   15d88:	eor	r0, r8, r0
   15d8c:	lsl	r4, r0, #8
   15d90:	lsr	r0, r0, #24
   15d94:	orr	r4, r4, r1, lsr #24
   15d98:	orr	ip, r0, r1, lsl #8
   15d9c:	ldr	r1, [sp, #272]	; 0x110
   15da0:	adds	r1, r3, r1
   15da4:	ldr	r3, [sp, #268]	; 0x10c
   15da8:	adc	r3, r5, r3
   15dac:	adds	r0, r1, ip
   15db0:	ldr	r5, [sp, #52]	; 0x34
   15db4:	adc	r1, r3, r4
   15db8:	str	r0, [sp, #88]	; 0x58
   15dbc:	str	r1, [sp, #92]	; 0x5c
   15dc0:	eor	r1, r1, r2
   15dc4:	eor	r2, r0, lr
   15dc8:	lsl	r3, r2, #16
   15dcc:	lsr	r2, r2, #16
   15dd0:	orr	r3, r3, r1, lsr #16
   15dd4:	orr	r1, r2, r1, lsl #16
   15dd8:	adds	r2, r1, r8
   15ddc:	str	r1, [sp, #132]	; 0x84
   15de0:	str	r3, [sp, #120]	; 0x78
   15de4:	adc	r1, r3, r7
   15de8:	str	r2, [sp, #124]	; 0x7c
   15dec:	eor	r0, r2, ip
   15df0:	ldr	r3, [sp, #112]	; 0x70
   15df4:	ldr	r7, [sp, #116]	; 0x74
   15df8:	str	r1, [sp, #128]	; 0x80
   15dfc:	eor	r1, r1, r4
   15e00:	lsl	r2, r1, #1
   15e04:	orr	r8, r2, r0, lsr #31
   15e08:	lsl	r0, r0, #1
   15e0c:	orr	lr, r0, r1, lsr #31
   15e10:	ldr	r0, [sp, #72]	; 0x48
   15e14:	ldr	r1, [sp, #4]
   15e18:	str	r8, [sp, #24]
   15e1c:	str	lr, [sp, #32]
   15e20:	eor	r0, r1, r0
   15e24:	ldr	r1, [sp, #76]	; 0x4c
   15e28:	lsl	r2, r0, #1
   15e2c:	eor	r1, r6, r1
   15e30:	ldr	r6, [sp, #48]	; 0x30
   15e34:	orr	r2, r2, r1, lsr #31
   15e38:	lsl	r1, r1, #1
   15e3c:	orr	r1, r1, r0, lsr #31
   15e40:	ldr	r0, [sp, #288]	; 0x120
   15e44:	adds	r0, r3, r0
   15e48:	ldr	r3, [sp, #284]	; 0x11c
   15e4c:	adc	r3, r7, r3
   15e50:	adds	r7, r0, r1
   15e54:	ldr	r0, [sp, #64]	; 0x40
   15e58:	adc	r3, r3, r2
   15e5c:	adds	sl, sl, r0
   15e60:	ldr	r0, [sp, #68]	; 0x44
   15e64:	str	sl, [sp, #20]
   15e68:	adc	r9, r9, r0
   15e6c:	ldr	r0, [sp, #56]	; 0x38
   15e70:	eor	r6, r6, r0
   15e74:	ldr	r0, [sp, #60]	; 0x3c
   15e78:	eor	r5, r5, r0
   15e7c:	lsr	r4, r5, #16
   15e80:	lsl	r5, r5, #16
   15e84:	orr	ip, r4, r6, lsl #16
   15e88:	orr	r6, r5, r6, lsr #16
   15e8c:	eor	r0, r3, r6
   15e90:	eor	r4, r7, ip
   15e94:	adds	r5, r0, sl
   15e98:	str	r0, [sp, #112]	; 0x70
   15e9c:	str	r4, [sp, #60]	; 0x3c
   15ea0:	adc	r0, r4, r9
   15ea4:	eor	r1, r5, r1
   15ea8:	str	r5, [sp, #72]	; 0x48
   15eac:	str	r0, [sp, #76]	; 0x4c
   15eb0:	eor	r2, r0, r2
   15eb4:	ldr	r0, [sp, #224]	; 0xe0
   15eb8:	lsl	r5, r1, #8
   15ebc:	lsr	r1, r1, #24
   15ec0:	orr	r4, r1, r2, lsl #8
   15ec4:	orr	r5, r5, r2, lsr #24
   15ec8:	str	r4, [sp, #68]	; 0x44
   15ecc:	str	r5, [sp, #64]	; 0x40
   15ed0:	adds	r1, r7, r0
   15ed4:	ldr	r0, [sp, #220]	; 0xdc
   15ed8:	adc	r2, r3, r0
   15edc:	ldr	r0, [sp, #216]	; 0xd8
   15ee0:	adds	r3, r1, r4
   15ee4:	adc	r4, r2, r5
   15ee8:	str	r3, [sp, #56]	; 0x38
   15eec:	str	r4, [sp, #52]	; 0x34
   15ef0:	adds	r1, lr, r0
   15ef4:	ldr	r0, [sp, #212]	; 0xd4
   15ef8:	adc	r2, r8, r0
   15efc:	adds	r0, r1, r3
   15f00:	ldr	r3, [sp, #40]	; 0x28
   15f04:	str	r0, [sp, #116]	; 0x74
   15f08:	adc	r0, r2, r4
   15f0c:	str	r0, [sp, #48]	; 0x30
   15f10:	ldr	r0, [sp, #104]	; 0x68
   15f14:	adds	r5, ip, r0
   15f18:	ldr	r0, [sp, #108]	; 0x6c
   15f1c:	str	r5, [fp, #-200]	; 0xffffff38
   15f20:	adc	r7, r6, r0
   15f24:	ldr	r0, [sp, #84]	; 0x54
   15f28:	str	r7, [fp, #-196]	; 0xffffff3c
   15f2c:	eor	r1, r7, r0
   15f30:	ldr	r0, [sp, #100]	; 0x64
   15f34:	lsl	r6, r1, #1
   15f38:	eor	r2, r5, r0
   15f3c:	ldr	r0, [sp, #228]	; 0xe4
   15f40:	orr	r6, r6, r2, lsr #31
   15f44:	lsl	r2, r2, #1
   15f48:	orr	r1, r2, r1, lsr #31
   15f4c:	ldr	r2, [sp, #28]
   15f50:	str	r6, [fp, #-236]	; 0xffffff14
   15f54:	str	r1, [fp, #-240]	; 0xffffff10
   15f58:	adds	r2, r2, r0
   15f5c:	ldr	r0, [sp, #232]	; 0xe8
   15f60:	adc	r4, r3, r0
   15f64:	ldr	r0, [sp, #36]	; 0x24
   15f68:	adds	r2, r2, r1
   15f6c:	ldr	r3, [sp, #136]	; 0x88
   15f70:	adc	ip, r4, r6
   15f74:	ldr	r4, [sp, #140]	; 0x8c
   15f78:	eor	sl, r0, ip
   15f7c:	ldr	r0, [sp, #44]	; 0x2c
   15f80:	adds	r8, sl, r3
   15f84:	eor	r1, r8, r1
   15f88:	eor	r0, r0, r2
   15f8c:	adc	lr, r0, r4
   15f90:	eor	r4, lr, r6
   15f94:	lsl	r6, r1, #8
   15f98:	lsr	r1, r1, #24
   15f9c:	orr	r3, r6, r4, lsr #24
   15fa0:	orr	r4, r1, r4, lsl #8
   15fa4:	ldr	r1, [sp, #248]	; 0xf8
   15fa8:	str	r3, [sp, #104]	; 0x68
   15fac:	str	r4, [sp, #108]	; 0x6c
   15fb0:	adds	r1, r2, r1
   15fb4:	ldr	r2, [sp, #244]	; 0xf4
   15fb8:	adc	r2, ip, r2
   15fbc:	adds	r6, r1, r4
   15fc0:	adc	r1, r2, r3
   15fc4:	str	r6, [sp, #100]	; 0x64
   15fc8:	str	r1, [sp, #140]	; 0x8c
   15fcc:	eor	r0, r1, r0
   15fd0:	eor	r1, r6, sl
   15fd4:	ldr	r6, [sp, #80]	; 0x50
   15fd8:	lsl	r2, r1, #16
   15fdc:	lsr	r1, r1, #16
   15fe0:	orr	r2, r2, r0, lsr #16
   15fe4:	orr	r0, r1, r0, lsl #16
   15fe8:	ldr	r1, [sp, #148]	; 0x94
   15fec:	adds	ip, r0, r8
   15ff0:	str	r0, [sp, #84]	; 0x54
   15ff4:	str	r2, [sp, #44]	; 0x2c
   15ff8:	adc	r0, r2, lr
   15ffc:	ldr	r2, [sp, #20]
   16000:	str	ip, [sp, #8]
   16004:	str	r0, [sp, #12]
   16008:	ldr	r0, [sp, #144]	; 0x90
   1600c:	eor	r1, r2, r1
   16010:	eor	r0, r9, r0
   16014:	lsl	r2, r0, #1
   16018:	orr	r3, r2, r1, lsr #31
   1601c:	lsl	r1, r1, #1
   16020:	ldr	r2, [sp, #236]	; 0xec
   16024:	orr	r0, r1, r0, lsr #31
   16028:	ldr	r1, [sp, #240]	; 0xf0
   1602c:	adds	r1, r0, r1
   16030:	adc	r2, r3, r2
   16034:	adds	r1, r1, r6
   16038:	ldr	r6, [sp, #96]	; 0x60
   1603c:	adc	r2, r2, r6
   16040:	ldr	r6, [sp, #152]	; 0x98
   16044:	eor	lr, r2, r6
   16048:	ldr	r6, [sp, #156]	; 0x9c
   1604c:	adds	r4, lr, r5
   16050:	str	r4, [sp, #28]
   16054:	eor	r8, r1, r6
   16058:	adc	r5, r8, r7
   1605c:	str	r5, [sp, #16]
   16060:	eor	r7, r5, r3
   16064:	ldr	r5, [sp, #292]	; 0x124
   16068:	stm	r5, {r0, r3}
   1606c:	eor	r0, r4, r0
   16070:	lsl	r3, r0, #8
   16074:	lsr	r0, r0, #24
   16078:	ldr	r6, [sp, #116]	; 0x74
   1607c:	ldr	r4, [sp, #12]
   16080:	orr	r3, r3, r7, lsr #24
   16084:	orr	r7, r0, r7, lsl #8
   16088:	ldr	r0, [sp, #184]	; 0xb8
   1608c:	str	r3, [sp, #40]	; 0x28
   16090:	str	r7, [sp, #80]	; 0x50
   16094:	adds	r0, r1, r0
   16098:	ldr	r1, [sp, #180]	; 0xb4
   1609c:	adc	r1, r2, r1
   160a0:	adds	r2, r0, r7
   160a4:	adc	r0, r1, r3
   160a8:	ldr	r3, [sp, #48]	; 0x30
   160ac:	str	r2, [sp, #36]	; 0x24
   160b0:	eor	r2, r2, lr
   160b4:	str	r0, [sp, #96]	; 0x60
   160b8:	lsr	r1, r2, #16
   160bc:	eor	r0, r0, r8
   160c0:	lsl	r2, r2, #16
   160c4:	orr	r5, r2, r0, lsr #16
   160c8:	orr	sl, r1, r0, lsl #16
   160cc:	ldr	r0, [sp, #24]
   160d0:	eor	r2, r6, sl
   160d4:	eor	r9, r3, r5
   160d8:	adds	r8, r9, ip
   160dc:	adc	lr, r2, r4
   160e0:	eor	r1, lr, r0
   160e4:	ldr	r0, [sp, #32]
   160e8:	eor	r0, r8, r0
   160ec:	lsl	r7, r0, #8
   160f0:	lsr	r0, r0, #24
   160f4:	orr	r7, r7, r1, lsr #24
   160f8:	orr	r0, r0, r1, lsl #8
   160fc:	ldr	r1, [sp, #264]	; 0x108
   16100:	adds	r1, r6, r1
   16104:	ldr	r6, [sp, #260]	; 0x104
   16108:	adc	ip, r3, r6
   1610c:	adds	r6, r1, r0
   16110:	adc	r1, ip, r7
   16114:	str	r6, [sp, #116]	; 0x74
   16118:	eor	ip, r1, r2
   1611c:	eor	r2, r6, r9
   16120:	str	r1, [sp, #136]	; 0x88
   16124:	lsl	r3, r2, #16
   16128:	lsr	r2, r2, #16
   1612c:	orr	r1, r2, ip, lsl #16
   16130:	orr	r3, r3, ip, lsr #16
   16134:	adds	r2, r1, r8
   16138:	str	r1, [sp, #156]	; 0x9c
   1613c:	str	r3, [sp, #152]	; 0x98
   16140:	adc	r1, r3, lr
   16144:	str	r2, [sp, #144]	; 0x90
   16148:	eor	r0, r2, r0
   1614c:	ldr	r3, [sp, #88]	; 0x58
   16150:	str	r1, [sp, #148]	; 0x94
   16154:	eor	r1, r1, r7
   16158:	ldr	r7, [sp, #92]	; 0x5c
   1615c:	lsl	r2, r1, #1
   16160:	orr	r9, r2, r0, lsr #31
   16164:	lsl	r0, r0, #1
   16168:	ldr	r2, [sp, #8]
   1616c:	orr	r8, r0, r1, lsr #31
   16170:	ldr	r0, [sp, #104]	; 0x68
   16174:	ldr	r1, [sp, #108]	; 0x6c
   16178:	str	r9, [sp, #20]
   1617c:	str	r8, [sp, #32]
   16180:	eor	r0, r4, r0
   16184:	eor	r1, r2, r1
   16188:	lsl	r2, r0, #1
   1618c:	orr	r2, r2, r1, lsr #31
   16190:	lsl	r1, r1, #1
   16194:	orr	r0, r1, r0, lsr #31
   16198:	ldr	r1, [sp, #192]	; 0xc0
   1619c:	adds	r1, r3, r1
   161a0:	ldr	r3, [sp, #188]	; 0xbc
   161a4:	adc	r3, r7, r3
   161a8:	adds	lr, r1, r0
   161ac:	ldr	r1, [sp, #28]
   161b0:	adc	ip, r3, r2
   161b4:	ldr	r3, [sp, #52]	; 0x34
   161b8:	adds	r7, sl, r1
   161bc:	ldr	r1, [sp, #16]
   161c0:	str	r7, [sp, #28]
   161c4:	adc	sl, r5, r1
   161c8:	ldr	r1, [sp, #60]	; 0x3c
   161cc:	str	sl, [sp, #16]
   161d0:	eor	r6, r3, r1
   161d4:	ldr	r1, [sp, #112]	; 0x70
   161d8:	ldr	r3, [sp, #56]	; 0x38
   161dc:	eor	r4, r3, r1
   161e0:	lsr	r5, r4, #16
   161e4:	lsl	r4, r4, #16
   161e8:	orr	r5, r5, r6, lsl #16
   161ec:	orr	r6, r4, r6, lsr #16
   161f0:	eor	r1, r6, ip
   161f4:	eor	r3, r5, lr
   161f8:	str	r5, [fp, #-192]	; 0xffffff40
   161fc:	str	r6, [fp, #-188]	; 0xffffff44
   16200:	str	r1, [sp, #60]	; 0x3c
   16204:	adds	r1, r1, r7
   16208:	str	r3, [sp, #56]	; 0x38
   1620c:	adc	r4, r3, sl
   16210:	eor	r0, r1, r0
   16214:	str	r1, [sp, #108]	; 0x6c
   16218:	ldr	r1, [sp, #204]	; 0xcc
   1621c:	str	r4, [sp, #112]	; 0x70
   16220:	eor	r2, r4, r2
   16224:	lsl	r4, r0, #8
   16228:	lsr	r0, r0, #24
   1622c:	orr	r3, r0, r2, lsl #8
   16230:	ldr	r0, [sp, #208]	; 0xd0
   16234:	orr	r4, r4, r2, lsr #24
   16238:	str	r3, [sp, #104]	; 0x68
   1623c:	str	r4, [sp, #88]	; 0x58
   16240:	adds	r0, lr, r0
   16244:	adc	r2, ip, r1
   16248:	ldr	r1, [sp, #176]	; 0xb0
   1624c:	adds	r0, r0, r3
   16250:	adc	r2, r2, r4
   16254:	str	r0, [sp, #52]	; 0x34
   16258:	str	r2, [sp, #48]	; 0x30
   1625c:	adds	r3, r0, r1
   16260:	ldr	r0, [sp, #172]	; 0xac
   16264:	adc	r2, r2, r0
   16268:	adds	r3, r3, r8
   1626c:	adc	r2, r2, r9
   16270:	str	r3, [sp, #92]	; 0x5c
   16274:	ldr	r3, [sp, #68]	; 0x44
   16278:	ldr	r9, [sp, #120]	; 0x78
   1627c:	str	r2, [sp, #24]
   16280:	ldr	r2, [sp, #72]	; 0x48
   16284:	adds	r5, r5, r2
   16288:	ldr	r2, [sp, #76]	; 0x4c
   1628c:	eor	r3, r5, r3
   16290:	str	r5, [fp, #-224]	; 0xffffff20
   16294:	str	r5, [sp, #12]
   16298:	ldr	r5, [sp, #84]	; 0x54
   1629c:	adc	r8, r6, r2
   162a0:	ldr	r2, [sp, #64]	; 0x40
   162a4:	str	r8, [fp, #-220]	; 0xffffff24
   162a8:	eor	r2, r8, r2
   162ac:	lsl	r7, r2, #1
   162b0:	orr	r7, r7, r3, lsr #31
   162b4:	lsl	r3, r3, #1
   162b8:	orr	r2, r3, r2, lsr #31
   162bc:	ldr	r3, [sp, #36]	; 0x24
   162c0:	str	r7, [fp, #-252]	; 0xffffff04
   162c4:	str	r2, [fp, #-256]	; 0xffffff00
   162c8:	str	r9, [fp, #-180]	; 0xffffff4c
   162cc:	adds	r3, r3, r1
   162d0:	ldr	r1, [sp, #96]	; 0x60
   162d4:	adc	r6, r1, r0
   162d8:	ldr	r0, [sp, #132]	; 0x84
   162dc:	adds	lr, r3, r2
   162e0:	ldr	r1, [sp, #128]	; 0x80
   162e4:	ldr	r3, [sp, #44]	; 0x2c
   162e8:	adc	sl, r6, r7
   162ec:	str	r0, [fp, #-184]	; 0xffffff48
   162f0:	ldr	r0, [sp, #124]	; 0x7c
   162f4:	str	r1, [fp, #-212]	; 0xffffff2c
   162f8:	str	r0, [fp, #-216]	; 0xffffff28
   162fc:	str	r3, [fp, #-172]	; 0xffffff54
   16300:	eor	r3, sl, r3
   16304:	str	r5, [fp, #-176]	; 0xffffff50
   16308:	eor	r5, lr, r5
   1630c:	adds	ip, r3, r0
   16310:	adc	r4, r5, r1
   16314:	eor	r2, ip, r2
   16318:	eor	r6, r4, r7
   1631c:	lsl	r7, r2, #8
   16320:	lsr	r2, r2, #24
   16324:	orr	r0, r2, r6, lsl #8
   16328:	ldr	r2, [sp, #280]	; 0x118
   1632c:	orr	r1, r7, r6, lsr #24
   16330:	ldr	r7, [sp, #276]	; 0x114
   16334:	str	r1, [sp, #72]	; 0x48
   16338:	str	r0, [sp, #76]	; 0x4c
   1633c:	adds	r2, lr, r2
   16340:	adc	lr, sl, r7
   16344:	adds	r6, r2, r0
   16348:	ldr	r0, [sp, #40]	; 0x28
   1634c:	adc	r2, lr, r1
   16350:	ldr	r1, [sp, #16]
   16354:	eor	r3, r6, r3
   16358:	str	r6, [sp, #84]	; 0x54
   1635c:	ldr	r6, [sp, #200]	; 0xc8
   16360:	str	r2, [sp, #96]	; 0x60
   16364:	eor	r2, r2, r5
   16368:	lsl	r5, r3, #16
   1636c:	lsr	r3, r3, #16
   16370:	orr	r7, r5, r2, lsr #16
   16374:	orr	r2, r3, r2, lsl #16
   16378:	adds	lr, r2, ip
   1637c:	str	r2, [sp, #44]	; 0x2c
   16380:	ldr	r2, [sp, #28]
   16384:	str	r7, [sp, #36]	; 0x24
   16388:	eor	r0, r1, r0
   1638c:	ldr	r1, [sp, #80]	; 0x50
   16390:	adc	sl, r7, r4
   16394:	ldr	r7, [sp, #196]	; 0xc4
   16398:	lsl	r3, r0, #1
   1639c:	eor	r1, r2, r1
   163a0:	ldr	r2, [sp, #140]	; 0x8c
   163a4:	orr	r4, r3, r1, lsr #31
   163a8:	lsl	r1, r1, #1
   163ac:	orr	r0, r1, r0, lsr #31
   163b0:	ldr	r1, [sp, #100]	; 0x64
   163b4:	adds	r1, r1, r6
   163b8:	adc	r3, r2, r7
   163bc:	ldr	r2, [sp, #132]	; 0x84
   163c0:	adds	r1, r1, r0
   163c4:	adc	r3, r3, r4
   163c8:	eor	r9, r3, r9
   163cc:	eor	ip, r1, r2
   163d0:	ldr	r2, [sp, #12]
   163d4:	adds	r2, r9, r2
   163d8:	adc	r5, ip, r8
   163dc:	eor	r0, r2, r0
   163e0:	str	r2, [sp, #64]	; 0x40
   163e4:	str	r5, [sp, #68]	; 0x44
   163e8:	eor	r4, r5, r4
   163ec:	lsl	r5, r0, #8
   163f0:	lsr	r0, r0, #24
   163f4:	orr	r5, r5, r4, lsr #24
   163f8:	orr	r4, r0, r4, lsl #8
   163fc:	ldr	r0, [sp, #256]	; 0x100
   16400:	str	r4, [sp, #132]	; 0x84
   16404:	str	r5, [sp, #40]	; 0x28
   16408:	adds	r0, r1, r0
   1640c:	ldr	r1, [sp, #252]	; 0xfc
   16410:	adc	r1, r3, r1
   16414:	adds	r3, r0, r4
   16418:	ldr	r4, [sp, #24]
   1641c:	adc	r0, r1, r5
   16420:	eor	r2, r3, r9
   16424:	str	r3, [sp, #28]
   16428:	mov	r9, lr
   1642c:	str	r0, [sp, #100]	; 0x64
   16430:	lsr	r1, r2, #16
   16434:	eor	r0, r0, ip
   16438:	lsl	r2, r2, #16
   1643c:	orr	r2, r2, r0, lsr #16
   16440:	orr	r1, r1, r0, lsl #16
   16444:	ldr	r0, [sp, #152]	; 0x98
   16448:	eor	ip, r4, r2
   1644c:	str	r2, [sp, #16]
   16450:	ldr	r2, [sp, #92]	; 0x5c
   16454:	str	r1, [sp, #8]
   16458:	adds	lr, ip, lr
   1645c:	str	r0, [fp, #-164]	; 0xffffff5c
   16460:	ldr	r0, [sp, #156]	; 0x9c
   16464:	eor	r3, r2, r1
   16468:	adc	r8, r3, sl
   1646c:	str	r0, [fp, #-168]	; 0xffffff58
   16470:	ldr	r0, [sp, #144]	; 0x90
   16474:	str	r0, [fp, #-208]	; 0xffffff30
   16478:	ldr	r0, [sp, #148]	; 0x94
   1647c:	str	r0, [fp, #-204]	; 0xffffff34
   16480:	ldr	r0, [sp, #20]
   16484:	str	r0, [fp, #-244]	; 0xffffff0c
   16488:	eor	r1, r8, r0
   1648c:	ldr	r0, [sp, #32]
   16490:	str	r0, [fp, #-248]	; 0xffffff08
   16494:	eor	r0, lr, r0
   16498:	lsl	r5, r0, #8
   1649c:	lsr	r0, r0, #24
   164a0:	orr	r5, r5, r1, lsr #24
   164a4:	orr	r0, r0, r1, lsl #8
   164a8:	adds	r1, r2, r6
   164ac:	adc	r2, r4, r7
   164b0:	adds	r6, r1, r0
   164b4:	ldr	r7, [sp, #136]	; 0x88
   164b8:	adc	r1, r2, r5
   164bc:	eor	r2, r6, ip
   164c0:	str	r6, [sp, #80]	; 0x50
   164c4:	str	r1, [sp, #92]	; 0x5c
   164c8:	eor	r1, r1, r3
   164cc:	lsl	r3, r2, #16
   164d0:	lsr	r2, r2, #16
   164d4:	orr	r3, r3, r1, lsr #16
   164d8:	orr	r1, r2, r1, lsl #16
   164dc:	adds	r2, r1, lr
   164e0:	str	r1, [sp, #140]	; 0x8c
   164e4:	str	r3, [sp, #120]	; 0x78
   164e8:	adc	r1, r3, r8
   164ec:	str	r2, [sp, #124]	; 0x7c
   164f0:	eor	r0, r2, r0
   164f4:	str	r1, [sp, #128]	; 0x80
   164f8:	eor	r1, r1, r5
   164fc:	lsl	r2, r1, #1
   16500:	orr	r8, r2, r0, lsr #31
   16504:	lsl	r0, r0, #1
   16508:	orr	lr, r0, r1, lsr #31
   1650c:	ldr	r0, [sp, #72]	; 0x48
   16510:	ldr	r1, [sp, #76]	; 0x4c
   16514:	str	r8, [sp, #12]
   16518:	str	lr, [sp, #24]
   1651c:	eor	r0, sl, r0
   16520:	eor	r1, r9, r1
   16524:	lsl	r2, r0, #1
   16528:	orr	r3, r2, r1, lsr #31
   1652c:	lsl	r1, r1, #1
   16530:	ldr	r2, [sp, #116]	; 0x74
   16534:	orr	r0, r1, r0, lsr #31
   16538:	ldr	r1, [sp, #224]	; 0xe0
   1653c:	adds	r1, r2, r1
   16540:	ldr	r2, [sp, #220]	; 0xdc
   16544:	adc	r2, r7, r2
   16548:	adds	r5, r1, r0
   1654c:	ldr	r1, [sp, #64]	; 0x40
   16550:	adc	sl, r2, r3
   16554:	ldr	r2, [sp, #8]
   16558:	adds	r4, r2, r1
   1655c:	ldr	r1, [sp, #68]	; 0x44
   16560:	ldr	r2, [sp, #16]
   16564:	str	r4, [sp, #32]
   16568:	adc	r9, r2, r1
   1656c:	ldr	r1, [sp, #56]	; 0x38
   16570:	ldr	r2, [sp, #48]	; 0x30
   16574:	eor	r7, r2, r1
   16578:	ldr	r1, [sp, #60]	; 0x3c
   1657c:	ldr	r2, [sp, #52]	; 0x34
   16580:	eor	r6, r2, r1
   16584:	lsr	r2, r6, #16
   16588:	lsl	r6, r6, #16
   1658c:	orr	ip, r2, r7, lsl #16
   16590:	orr	r7, r6, r7, lsr #16
   16594:	eor	r1, sl, r7
   16598:	eor	r6, r5, ip
   1659c:	adds	r2, r1, r4
   165a0:	str	r1, [sp, #60]	; 0x3c
   165a4:	str	r6, [sp, #56]	; 0x38
   165a8:	adc	r1, r6, r9
   165ac:	eor	r0, r2, r0
   165b0:	str	r2, [sp, #72]	; 0x48
   165b4:	lsl	r6, r0, #8
   165b8:	eor	r3, r1, r3
   165bc:	lsr	r0, r0, #24
   165c0:	str	r1, [sp, #76]	; 0x4c
   165c4:	ldr	r1, [sp, #204]	; 0xcc
   165c8:	orr	r2, r0, r3, lsl #8
   165cc:	ldr	r0, [sp, #208]	; 0xd0
   165d0:	orr	r6, r6, r3, lsr #24
   165d4:	str	r2, [sp, #68]	; 0x44
   165d8:	str	r6, [sp, #64]	; 0x40
   165dc:	adds	r0, r5, r0
   165e0:	adc	r3, sl, r1
   165e4:	adds	r2, r0, r2
   165e8:	ldr	r0, [sp, #228]	; 0xe4
   165ec:	ldr	r1, [sp, #232]	; 0xe8
   165f0:	adc	r4, r3, r6
   165f4:	str	r2, [sp, #52]	; 0x34
   165f8:	str	r4, [sp, #48]	; 0x30
   165fc:	adds	r0, lr, r0
   16600:	adc	r3, r8, r1
   16604:	adds	r0, r0, r2
   16608:	ldr	r1, [sp, #28]
   1660c:	str	r0, [sp, #136]	; 0x88
   16610:	adc	r0, r3, r4
   16614:	ldr	r4, [sp, #148]	; 0x94
   16618:	str	r0, [sp, #116]	; 0x74
   1661c:	ldr	r0, [sp, #108]	; 0x6c
   16620:	adds	r6, ip, r0
   16624:	ldr	r0, [sp, #112]	; 0x70
   16628:	str	r6, [fp, #-200]	; 0xffffff38
   1662c:	adc	sl, r7, r0
   16630:	ldr	r0, [sp, #88]	; 0x58
   16634:	str	sl, [fp, #-196]	; 0xffffff3c
   16638:	eor	r2, sl, r0
   1663c:	ldr	r0, [sp, #104]	; 0x68
   16640:	lsl	r7, r2, #1
   16644:	eor	r3, r6, r0
   16648:	ldr	r0, [sp, #256]	; 0x100
   1664c:	orr	r7, r7, r3, lsr #31
   16650:	lsl	r3, r3, #1
   16654:	orr	r2, r3, r2, lsr #31
   16658:	str	r7, [fp, #-236]	; 0xffffff14
   1665c:	str	r2, [fp, #-240]	; 0xffffff10
   16660:	adds	r3, r1, r0
   16664:	ldr	r0, [sp, #252]	; 0xfc
   16668:	ldr	r1, [sp, #100]	; 0x64
   1666c:	adc	r5, r1, r0
   16670:	ldr	r0, [sp, #36]	; 0x24
   16674:	adds	r3, r3, r2
   16678:	ldr	r1, [sp, #144]	; 0x90
   1667c:	adc	r5, r5, r7
   16680:	eor	lr, r0, r5
   16684:	ldr	r0, [sp, #44]	; 0x2c
   16688:	adds	r8, lr, r1
   1668c:	eor	r2, r8, r2
   16690:	eor	r0, r0, r3
   16694:	adc	ip, r0, r4
   16698:	lsl	r4, r2, #8
   1669c:	lsr	r2, r2, #24
   166a0:	eor	r7, ip, r7
   166a4:	orr	r1, r4, r7, lsr #24
   166a8:	orr	r4, r2, r7, lsl #8
   166ac:	ldr	r2, [sp, #264]	; 0x108
   166b0:	str	r4, [sp, #108]	; 0x6c
   166b4:	str	r1, [sp, #104]	; 0x68
   166b8:	adds	r2, r3, r2
   166bc:	ldr	r3, [sp, #260]	; 0x104
   166c0:	adc	r3, r5, r3
   166c4:	adds	r4, r2, r4
   166c8:	adc	r2, r3, r1
   166cc:	ldr	r1, [sp, #132]	; 0x84
   166d0:	str	r4, [sp, #88]	; 0x58
   166d4:	str	r2, [sp, #100]	; 0x64
   166d8:	eor	r0, r2, r0
   166dc:	eor	r2, r4, lr
   166e0:	lsl	r3, r2, #16
   166e4:	lsr	r2, r2, #16
   166e8:	orr	r3, r3, r0, lsr #16
   166ec:	orr	r0, r2, r0, lsl #16
   166f0:	ldr	r2, [sp, #32]
   166f4:	adds	r7, r0, r8
   166f8:	str	r0, [sp, #44]	; 0x2c
   166fc:	ldr	r0, [sp, #40]	; 0x28
   16700:	str	r3, [sp, #36]	; 0x24
   16704:	adc	ip, r3, ip
   16708:	ldr	r3, [sp, #84]	; 0x54
   1670c:	str	r7, [sp, #4]
   16710:	eor	r1, r2, r1
   16714:	eor	r0, r9, r0
   16718:	lsl	r2, r0, #1
   1671c:	orr	r5, r2, r1, lsr #31
   16720:	lsl	r1, r1, #1
   16724:	ldr	r2, [sp, #212]	; 0xd4
   16728:	orr	r0, r1, r0, lsr #31
   1672c:	ldr	r1, [sp, #216]	; 0xd8
   16730:	adds	r1, r0, r1
   16734:	adc	r2, r5, r2
   16738:	adds	r1, r1, r3
   1673c:	ldr	r3, [sp, #96]	; 0x60
   16740:	adc	r2, r2, r3
   16744:	ldr	r3, [sp, #152]	; 0x98
   16748:	eor	r8, r2, r3
   1674c:	ldr	r3, [sp, #156]	; 0x9c
   16750:	eor	lr, r1, r3
   16754:	adds	r3, r8, r6
   16758:	adc	r4, lr, sl
   1675c:	str	r3, [sp, #84]	; 0x54
   16760:	str	r4, [sp, #96]	; 0x60
   16764:	eor	r6, r4, r5
   16768:	ldr	r4, [sp, #292]	; 0x124
   1676c:	stm	r4, {r0, r5}
   16770:	eor	r0, r3, r0
   16774:	lsl	r5, r0, #8
   16778:	lsr	r0, r0, #24
   1677c:	ldr	sl, [sp, #192]	; 0xc0
   16780:	ldr	r9, [sp, #188]	; 0xbc
   16784:	orr	r5, r5, r6, lsr #24
   16788:	orr	r6, r0, r6, lsl #8
   1678c:	ldr	r0, [sp, #272]	; 0x110
   16790:	str	r6, [sp, #40]	; 0x28
   16794:	str	r5, [sp, #32]
   16798:	adds	r0, r1, r0
   1679c:	ldr	r1, [sp, #268]	; 0x10c
   167a0:	adc	r1, r2, r1
   167a4:	adds	r2, r0, r6
   167a8:	str	r2, [sp, #16]
   167ac:	adc	r0, r1, r5
   167b0:	eor	r2, r2, r8
   167b4:	str	r0, [sp, #20]
   167b8:	eor	r0, r0, lr
   167bc:	lsr	r1, r2, #16
   167c0:	lsl	r2, r2, #16
   167c4:	ldr	lr, [sp, #136]	; 0x88
   167c8:	orr	r1, r1, r0, lsl #16
   167cc:	orr	r0, r2, r0, lsr #16
   167d0:	ldr	r2, [sp, #116]	; 0x74
   167d4:	str	r0, [sp, #28]
   167d8:	str	r1, [sp, #8]
   167dc:	eor	r3, lr, r1
   167e0:	eor	r4, r2, r0
   167e4:	ldr	r0, [sp, #12]
   167e8:	adds	r6, r4, r7
   167ec:	mov	r7, ip
   167f0:	adc	r8, r3, ip
   167f4:	eor	r1, r8, r0
   167f8:	ldr	r0, [sp, #24]
   167fc:	eor	r0, r6, r0
   16800:	lsl	r5, r0, #8
   16804:	lsr	r0, r0, #24
   16808:	orr	r5, r5, r1, lsr #24
   1680c:	orr	ip, r0, r1, lsl #8
   16810:	adds	r1, lr, sl
   16814:	adc	lr, r2, r9
   16818:	adds	r0, r1, ip
   1681c:	adc	r1, lr, r5
   16820:	eor	r2, r0, r4
   16824:	str	r0, [sp, #112]	; 0x70
   16828:	eor	lr, r1, r3
   1682c:	lsl	r3, r2, #16
   16830:	lsr	r2, r2, #16
   16834:	str	r1, [sp, #116]	; 0x74
   16838:	orr	r1, r2, lr, lsl #16
   1683c:	orr	r3, r3, lr, lsr #16
   16840:	adds	r2, r1, r6
   16844:	str	r1, [sp, #156]	; 0x9c
   16848:	str	r3, [sp, #152]	; 0x98
   1684c:	adc	r1, r3, r8
   16850:	str	r2, [sp, #144]	; 0x90
   16854:	eor	r0, r2, ip
   16858:	ldr	r3, [sp, #80]	; 0x50
   1685c:	str	r1, [sp, #148]	; 0x94
   16860:	eor	r1, r1, r5
   16864:	lsl	r2, r1, #1
   16868:	orr	r2, r2, r0, lsr #31
   1686c:	lsl	r0, r0, #1
   16870:	orr	r0, r0, r1, lsr #31
   16874:	str	r2, [sp, #132]	; 0x84
   16878:	ldr	r1, [sp, #108]	; 0x6c
   1687c:	ldr	r2, [sp, #4]
   16880:	str	r0, [sp, #136]	; 0x88
   16884:	ldr	r0, [sp, #104]	; 0x68
   16888:	eor	r1, r2, r1
   1688c:	eor	r0, r7, r0
   16890:	ldr	r7, [sp, #92]	; 0x5c
   16894:	lsl	r2, r0, #1
   16898:	orr	lr, r2, r1, lsr #31
   1689c:	lsl	r1, r1, #1
   168a0:	ldr	r2, [sp, #28]
   168a4:	orr	ip, r1, r0, lsr #31
   168a8:	ldr	r1, [sp, #168]	; 0xa8
   168ac:	ldr	r0, [sp, #84]	; 0x54
   168b0:	adds	r1, r3, r1
   168b4:	ldr	r3, [sp, #164]	; 0xa4
   168b8:	adc	r3, r7, r3
   168bc:	adds	r8, r1, ip
   168c0:	ldr	r1, [sp, #8]
   168c4:	adc	r7, r3, lr
   168c8:	ldr	r3, [sp, #48]	; 0x30
   168cc:	adds	r0, r1, r0
   168d0:	ldr	r1, [sp, #96]	; 0x60
   168d4:	str	r0, [sp, #12]
   168d8:	adc	r2, r2, r1
   168dc:	ldr	r1, [sp, #56]	; 0x38
   168e0:	str	r2, [sp, #8]
   168e4:	eor	r6, r3, r1
   168e8:	ldr	r1, [sp, #60]	; 0x3c
   168ec:	ldr	r3, [sp, #52]	; 0x34
   168f0:	eor	r5, r3, r1
   168f4:	lsr	r4, r5, #16
   168f8:	lsl	r5, r5, #16
   168fc:	orr	r4, r4, r6, lsl #16
   16900:	orr	r6, r5, r6, lsr #16
   16904:	eor	r3, r6, r7
   16908:	eor	r1, r4, r8
   1690c:	str	r6, [fp, #-188]	; 0xffffff44
   16910:	str	r4, [fp, #-192]	; 0xffffff40
   16914:	str	r3, [sp, #60]	; 0x3c
   16918:	adds	r3, r3, r0
   1691c:	str	r1, [sp, #56]	; 0x38
   16920:	adc	r5, r1, r2
   16924:	eor	r0, r3, ip
   16928:	str	r3, [sp, #104]	; 0x68
   1692c:	ldr	r1, [sp, #180]	; 0xb4
   16930:	str	r5, [sp, #108]	; 0x6c
   16934:	eor	r2, r5, lr
   16938:	lsl	r5, r0, #8
   1693c:	lsr	r0, r0, #24
   16940:	orr	r3, r5, r2, lsr #24
   16944:	orr	r2, r0, r2, lsl #8
   16948:	ldr	r0, [sp, #184]	; 0xb8
   1694c:	str	r2, [sp, #96]	; 0x60
   16950:	str	r3, [sp, #84]	; 0x54
   16954:	adds	r0, r8, r0
   16958:	adc	r1, r7, r1
   1695c:	adds	r0, r0, r2
   16960:	ldr	r2, [sp, #136]	; 0x88
   16964:	adc	r1, r1, r3
   16968:	str	r0, [sp, #52]	; 0x34
   1696c:	adds	r0, r0, sl
   16970:	ldr	r3, [sp, #36]	; 0x24
   16974:	str	r1, [sp, #48]	; 0x30
   16978:	adc	r1, r1, r9
   1697c:	ldr	r9, [sp, #120]	; 0x78
   16980:	adds	r0, r0, r2
   16984:	ldr	r2, [sp, #16]
   16988:	str	r0, [sp, #28]
   1698c:	ldr	r0, [sp, #132]	; 0x84
   16990:	adc	r0, r1, r0
   16994:	str	r0, [sp, #24]
   16998:	ldr	r0, [sp, #72]	; 0x48
   1699c:	adds	sl, r4, r0
   169a0:	ldr	r0, [sp, #76]	; 0x4c
   169a4:	str	sl, [fp, #-224]	; 0xffffff20
   169a8:	adc	r8, r6, r0
   169ac:	ldr	r0, [sp, #64]	; 0x40
   169b0:	str	r8, [fp, #-220]	; 0xffffff24
   169b4:	eor	r1, r8, r0
   169b8:	ldr	r0, [sp, #68]	; 0x44
   169bc:	lsl	r6, r1, #1
   169c0:	eor	r7, sl, r0
   169c4:	ldr	r0, [sp, #240]	; 0xf0
   169c8:	orr	r6, r6, r7, lsr #31
   169cc:	lsl	r7, r7, #1
   169d0:	orr	r1, r7, r1, lsr #31
   169d4:	str	r6, [fp, #-252]	; 0xffffff04
   169d8:	str	r1, [fp, #-256]	; 0xffffff00
   169dc:	str	r9, [fp, #-180]	; 0xffffff4c
   169e0:	adds	r7, r2, r0
   169e4:	ldr	r0, [sp, #236]	; 0xec
   169e8:	ldr	r2, [sp, #20]
   169ec:	adc	r5, r2, r0
   169f0:	ldr	r0, [sp, #140]	; 0x8c
   169f4:	ldr	r2, [sp, #128]	; 0x80
   169f8:	adds	r4, r7, r1
   169fc:	adc	r5, r5, r6
   16a00:	eor	r7, r5, r3
   16a04:	str	r0, [fp, #-184]	; 0xffffff48
   16a08:	ldr	r0, [sp, #124]	; 0x7c
   16a0c:	str	r2, [fp, #-212]	; 0xffffff2c
   16a10:	str	r0, [fp, #-216]	; 0xffffff28
   16a14:	str	r3, [fp, #-172]	; 0xffffff54
   16a18:	ldr	r3, [sp, #44]	; 0x2c
   16a1c:	adds	ip, r7, r0
   16a20:	eor	r1, ip, r1
   16a24:	eor	lr, r4, r3
   16a28:	str	r3, [fp, #-176]	; 0xffffff50
   16a2c:	lsl	r3, r1, #8
   16a30:	lsr	r1, r1, #24
   16a34:	adc	r2, lr, r2
   16a38:	eor	r6, r2, r6
   16a3c:	orr	r0, r3, r6, lsr #24
   16a40:	orr	r6, r1, r6, lsl #8
   16a44:	ldr	r1, [sp, #248]	; 0xf8
   16a48:	ldr	r3, [sp, #244]	; 0xf4
   16a4c:	str	r0, [sp, #72]	; 0x48
   16a50:	str	r6, [sp, #76]	; 0x4c
   16a54:	adds	r1, r4, r1
   16a58:	adc	r3, r5, r3
   16a5c:	adds	r4, r1, r6
   16a60:	adc	r1, r3, r0
   16a64:	eor	r3, r4, r7
   16a68:	ldr	r0, [sp, #32]
   16a6c:	str	r4, [sp, #80]	; 0x50
   16a70:	str	r1, [sp, #92]	; 0x5c
   16a74:	lsl	r7, r3, #16
   16a78:	eor	r1, r1, lr
   16a7c:	lsr	r3, r3, #16
   16a80:	orr	r7, r7, r1, lsr #16
   16a84:	orr	r1, r3, r1, lsl #16
   16a88:	adds	ip, r1, ip
   16a8c:	str	r1, [sp, #124]	; 0x7c
   16a90:	ldr	r1, [sp, #8]
   16a94:	str	r7, [sp, #44]	; 0x2c
   16a98:	adc	lr, r7, r2
   16a9c:	ldr	r2, [sp, #12]
   16aa0:	ldr	r7, [sp, #100]	; 0x64
   16aa4:	str	ip, [sp, #20]
   16aa8:	eor	r0, r1, r0
   16aac:	ldr	r1, [sp, #40]	; 0x28
   16ab0:	lsl	r3, r0, #1
   16ab4:	eor	r2, r2, r1
   16ab8:	ldr	r1, [sp, #88]	; 0x58
   16abc:	orr	r3, r3, r2, lsr #31
   16ac0:	lsl	r2, r2, #1
   16ac4:	orr	r2, r2, r0, lsr #31
   16ac8:	ldr	r0, [sp, #280]	; 0x118
   16acc:	adds	r0, r1, r0
   16ad0:	ldr	r1, [sp, #276]	; 0x114
   16ad4:	adc	r7, r7, r1
   16ad8:	adds	r4, r0, r2
   16adc:	ldr	r0, [sp, #140]	; 0x8c
   16ae0:	adc	r1, r7, r3
   16ae4:	eor	r9, r1, r9
   16ae8:	adds	r5, r9, sl
   16aec:	eor	r0, r4, r0
   16af0:	eor	r2, r5, r2
   16af4:	str	r5, [sp, #64]	; 0x40
   16af8:	adc	r6, r0, r8
   16afc:	str	r6, [sp, #68]	; 0x44
   16b00:	eor	r3, r6, r3
   16b04:	lsl	r6, r2, #8
   16b08:	lsr	r2, r2, #24
   16b0c:	orr	r7, r6, r3, lsr #24
   16b10:	orr	r6, r2, r3, lsl #8
   16b14:	ldr	r2, [sp, #288]	; 0x120
   16b18:	ldr	r3, [sp, #284]	; 0x11c
   16b1c:	str	r7, [sp, #40]	; 0x28
   16b20:	str	r6, [sp, #120]	; 0x78
   16b24:	adds	r2, r4, r2
   16b28:	adc	r3, r1, r3
   16b2c:	adds	r1, r2, r6
   16b30:	adc	r2, r3, r7
   16b34:	eor	r4, r1, r9
   16b38:	ldr	r7, [sp, #24]
   16b3c:	str	r1, [sp, #32]
   16b40:	lsr	r3, r4, #16
   16b44:	eor	r0, r2, r0
   16b48:	lsl	r4, r4, #16
   16b4c:	str	r2, [sp, #36]	; 0x24
   16b50:	ldr	r2, [sp, #28]
   16b54:	orr	r9, r3, r0, lsl #16
   16b58:	orr	r5, r4, r0, lsr #16
   16b5c:	ldr	r0, [sp, #152]	; 0x98
   16b60:	mov	r4, lr
   16b64:	eor	r3, r7, r5
   16b68:	eor	r6, r2, r9
   16b6c:	adds	r8, r3, ip
   16b70:	str	r0, [fp, #-164]	; 0xffffff5c
   16b74:	ldr	r0, [sp, #156]	; 0x9c
   16b78:	adc	lr, r6, lr
   16b7c:	str	r0, [fp, #-168]	; 0xffffff58
   16b80:	ldr	r0, [sp, #144]	; 0x90
   16b84:	str	r0, [fp, #-208]	; 0xffffff30
   16b88:	ldr	r0, [sp, #148]	; 0x94
   16b8c:	str	r0, [fp, #-204]	; 0xffffff34
   16b90:	ldr	r0, [sp, #132]	; 0x84
   16b94:	str	r0, [fp, #-244]	; 0xffffff0c
   16b98:	eor	r1, lr, r0
   16b9c:	ldr	r0, [sp, #136]	; 0x88
   16ba0:	str	r0, [fp, #-248]	; 0xffffff08
   16ba4:	eor	r0, r8, r0
   16ba8:	lsl	sl, r0, #8
   16bac:	lsr	r0, r0, #24
   16bb0:	orr	sl, sl, r1, lsr #24
   16bb4:	orr	ip, r0, r1, lsl #8
   16bb8:	ldr	r1, [sp, #256]	; 0x100
   16bbc:	adds	r1, r2, r1
   16bc0:	ldr	r2, [sp, #252]	; 0xfc
   16bc4:	adc	r2, r7, r2
   16bc8:	adds	r0, r1, ip
   16bcc:	ldr	r7, [sp, #116]	; 0x74
   16bd0:	adc	r1, r2, sl
   16bd4:	eor	r2, r0, r3
   16bd8:	str	r0, [sp, #88]	; 0x58
   16bdc:	str	r1, [sp, #100]	; 0x64
   16be0:	eor	r1, r1, r6
   16be4:	lsl	r3, r2, #16
   16be8:	lsr	r2, r2, #16
   16bec:	ldr	r6, [sp, #48]	; 0x30
   16bf0:	orr	r3, r3, r1, lsr #16
   16bf4:	orr	r1, r2, r1, lsl #16
   16bf8:	adds	r2, r1, r8
   16bfc:	str	r1, [sp, #140]	; 0x8c
   16c00:	str	r3, [sp, #136]	; 0x88
   16c04:	adc	r1, r3, lr
   16c08:	str	r2, [sp, #128]	; 0x80
   16c0c:	eor	r0, r2, ip
   16c10:	ldr	r3, [sp, #112]	; 0x70
   16c14:	str	r1, [sp, #132]	; 0x84
   16c18:	eor	r1, r1, sl
   16c1c:	lsl	r2, r1, #1
   16c20:	orr	r8, r2, r0, lsr #31
   16c24:	lsl	r0, r0, #1
   16c28:	ldr	r2, [sp, #20]
   16c2c:	orr	lr, r0, r1, lsr #31
   16c30:	ldr	r0, [sp, #72]	; 0x48
   16c34:	ldr	r1, [sp, #76]	; 0x4c
   16c38:	str	r8, [sp, #24]
   16c3c:	str	lr, [sp, #28]
   16c40:	eor	r0, r4, r0
   16c44:	eor	r1, r2, r1
   16c48:	lsl	r2, r0, #1
   16c4c:	orr	r2, r2, r1, lsr #31
   16c50:	lsl	r1, r1, #1
   16c54:	orr	r0, r1, r0, lsr #31
   16c58:	ldr	r1, [sp, #264]	; 0x108
   16c5c:	adds	r1, r3, r1
   16c60:	ldr	r3, [sp, #260]	; 0x104
   16c64:	adc	r3, r7, r3
   16c68:	ldr	r7, [sp, #64]	; 0x40
   16c6c:	adds	r1, r1, r0
   16c70:	adc	r3, r3, r2
   16c74:	adds	r9, r9, r7
   16c78:	ldr	r7, [sp, #68]	; 0x44
   16c7c:	str	r9, [sp, #20]
   16c80:	adc	sl, r5, r7
   16c84:	ldr	r7, [sp, #56]	; 0x38
   16c88:	ldr	r5, [sp, #52]	; 0x34
   16c8c:	eor	r7, r6, r7
   16c90:	ldr	r6, [sp, #60]	; 0x3c
   16c94:	eor	r6, r5, r6
   16c98:	lsr	r5, r6, #16
   16c9c:	lsl	r6, r6, #16
   16ca0:	orr	r6, r6, r7, lsr #16
   16ca4:	orr	ip, r5, r7, lsl #16
   16ca8:	eor	r7, r3, r6
   16cac:	eor	r4, r1, ip
   16cb0:	adds	r5, r7, r9
   16cb4:	str	r7, [sp, #112]	; 0x70
   16cb8:	str	r4, [sp, #60]	; 0x3c
   16cbc:	adc	r7, r4, sl
   16cc0:	eor	r0, r5, r0
   16cc4:	str	r5, [sp, #72]	; 0x48
   16cc8:	ldr	r4, [sp, #148]	; 0x94
   16ccc:	str	r7, [sp, #76]	; 0x4c
   16cd0:	eor	r2, r7, r2
   16cd4:	lsl	r7, r0, #8
   16cd8:	lsr	r0, r0, #24
   16cdc:	orr	r7, r7, r2, lsr #24
   16ce0:	orr	r2, r0, r2, lsl #8
   16ce4:	ldr	r0, [sp, #248]	; 0xf8
   16ce8:	str	r2, [sp, #68]	; 0x44
   16cec:	str	r7, [sp, #64]	; 0x40
   16cf0:	adds	r0, r1, r0
   16cf4:	ldr	r1, [sp, #244]	; 0xf4
   16cf8:	adc	r1, r3, r1
   16cfc:	adds	r2, r0, r2
   16d00:	ldr	r0, [sp, #208]	; 0xd0
   16d04:	adc	r3, r1, r7
   16d08:	ldr	r1, [sp, #204]	; 0xcc
   16d0c:	str	r2, [sp, #56]	; 0x38
   16d10:	str	r3, [sp, #52]	; 0x34
   16d14:	adds	r0, lr, r0
   16d18:	adc	r1, r8, r1
   16d1c:	adds	r0, r0, r2
   16d20:	str	r0, [sp, #116]	; 0x74
   16d24:	adc	r0, r1, r3
   16d28:	ldr	r1, [sp, #96]	; 0x60
   16d2c:	ldr	r3, [sp, #32]
   16d30:	str	r0, [sp, #48]	; 0x30
   16d34:	ldr	r0, [sp, #104]	; 0x68
   16d38:	adds	r7, ip, r0
   16d3c:	ldr	r0, [sp, #108]	; 0x6c
   16d40:	eor	r1, r7, r1
   16d44:	str	r7, [fp, #-200]	; 0xffffff38
   16d48:	adc	r5, r6, r0
   16d4c:	ldr	r0, [sp, #84]	; 0x54
   16d50:	ldr	r6, [sp, #36]	; 0x24
   16d54:	str	r5, [fp, #-196]	; 0xffffff3c
   16d58:	eor	r0, r5, r0
   16d5c:	lsl	r2, r0, #1
   16d60:	orr	r2, r2, r1, lsr #31
   16d64:	lsl	r1, r1, #1
   16d68:	orr	r0, r1, r0, lsr #31
   16d6c:	ldr	r1, [sp, #224]	; 0xe0
   16d70:	str	r2, [fp, #-236]	; 0xffffff14
   16d74:	str	r0, [fp, #-240]	; 0xffffff10
   16d78:	adds	r1, r3, r1
   16d7c:	ldr	r3, [sp, #220]	; 0xdc
   16d80:	adc	r6, r6, r3
   16d84:	ldr	r3, [sp, #44]	; 0x2c
   16d88:	adds	r1, r1, r0
   16d8c:	adc	lr, r6, r2
   16d90:	ldr	r6, [sp, #144]	; 0x90
   16d94:	eor	r9, r3, lr
   16d98:	ldr	r3, [sp, #124]	; 0x7c
   16d9c:	adds	ip, r9, r6
   16da0:	eor	r0, ip, r0
   16da4:	lsl	r6, r0, #8
   16da8:	lsr	r0, r0, #24
   16dac:	eor	r3, r3, r1
   16db0:	adc	r8, r3, r4
   16db4:	eor	r2, r8, r2
   16db8:	orr	r4, r6, r2, lsr #24
   16dbc:	orr	r2, r0, r2, lsl #8
   16dc0:	ldr	r0, [sp, #176]	; 0xb0
   16dc4:	str	r2, [sp, #108]	; 0x6c
   16dc8:	str	r4, [sp, #104]	; 0x68
   16dcc:	adds	r0, r1, r0
   16dd0:	ldr	r1, [sp, #172]	; 0xac
   16dd4:	adc	r1, lr, r1
   16dd8:	adds	r2, r0, r2
   16ddc:	adc	r0, r1, r4
   16de0:	eor	r1, r2, r9
   16de4:	str	r2, [sp, #96]	; 0x60
   16de8:	str	r0, [sp, #124]	; 0x7c
   16dec:	lsl	r2, r1, #16
   16df0:	eor	r0, r0, r3
   16df4:	lsr	r1, r1, #16
   16df8:	orr	r2, r2, r0, lsr #16
   16dfc:	orr	r0, r1, r0, lsl #16
   16e00:	ldr	r1, [sp, #120]	; 0x78
   16e04:	adds	lr, r0, ip
   16e08:	str	r0, [sp, #84]	; 0x54
   16e0c:	ldr	r0, [sp, #40]	; 0x28
   16e10:	str	r2, [sp, #44]	; 0x2c
   16e14:	adc	r6, r2, r8
   16e18:	ldr	r2, [sp, #20]
   16e1c:	str	lr, [sp, #8]
   16e20:	eor	r0, sl, r0
   16e24:	eor	r4, r2, r1
   16e28:	ldr	r2, [sp, #184]	; 0xb8
   16e2c:	lsl	r3, r0, #1
   16e30:	orr	r1, r3, r4, lsr #31
   16e34:	lsl	r3, r4, #1
   16e38:	orr	r0, r3, r0, lsr #31
   16e3c:	adds	r3, r0, r2
   16e40:	ldr	r2, [sp, #180]	; 0xb4
   16e44:	adc	r4, r1, r2
   16e48:	ldr	r2, [sp, #80]	; 0x50
   16e4c:	adds	r3, r3, r2
   16e50:	ldr	r2, [sp, #92]	; 0x5c
   16e54:	adc	r4, r4, r2
   16e58:	ldr	r2, [sp, #152]	; 0x98
   16e5c:	eor	ip, r4, r2
   16e60:	ldr	r2, [sp, #156]	; 0x9c
   16e64:	adds	r7, ip, r7
   16e68:	str	r7, [sp, #12]
   16e6c:	eor	r8, r3, r2
   16e70:	adc	r2, r8, r5
   16e74:	str	r2, [sp, #20]
   16e78:	eor	r5, r2, r1
   16e7c:	ldr	r2, [sp, #292]	; 0x124
   16e80:	strd	r0, [r2]
   16e84:	eor	r0, r7, r0
   16e88:	lsl	r1, r0, #8
   16e8c:	lsr	r0, r0, #24
   16e90:	orr	r7, r0, r5, lsl #8
   16e94:	ldr	r0, [sp, #280]	; 0x118
   16e98:	orr	r2, r1, r5, lsr #24
   16e9c:	ldr	r1, [sp, #276]	; 0x114
   16ea0:	str	r7, [sp, #92]	; 0x5c
   16ea4:	str	r2, [sp, #80]	; 0x50
   16ea8:	adds	r0, r3, r0
   16eac:	adc	r1, r4, r1
   16eb0:	adds	r3, r0, r7
   16eb4:	ldr	r4, [sp, #48]	; 0x30
   16eb8:	ldr	r7, [sp, #116]	; 0x74
   16ebc:	str	r3, [sp, #36]	; 0x24
   16ec0:	adc	r0, r1, r2
   16ec4:	eor	r3, r3, ip
   16ec8:	str	r0, [sp, #40]	; 0x28
   16ecc:	lsr	r1, r3, #16
   16ed0:	eor	r0, r0, r8
   16ed4:	lsl	r3, r3, #16
   16ed8:	orr	sl, r3, r0, lsr #16
   16edc:	orr	r9, r1, r0, lsl #16
   16ee0:	ldr	r0, [sp, #24]
   16ee4:	eor	r3, r4, sl
   16ee8:	eor	r2, r7, r9
   16eec:	adds	r8, r3, lr
   16ef0:	adc	lr, r2, r6
   16ef4:	eor	r1, lr, r0
   16ef8:	ldr	r0, [sp, #28]
   16efc:	eor	r0, r8, r0
   16f00:	lsl	r5, r0, #8
   16f04:	lsr	r0, r0, #24
   16f08:	orr	r5, r5, r1, lsr #24
   16f0c:	orr	r0, r0, r1, lsl #8
   16f10:	ldr	r1, [sp, #228]	; 0xe4
   16f14:	adds	r1, r7, r1
   16f18:	ldr	r7, [sp, #232]	; 0xe8
   16f1c:	adc	ip, r4, r7
   16f20:	adds	r7, r1, r0
   16f24:	adc	r1, ip, r5
   16f28:	str	r7, [sp, #116]	; 0x74
   16f2c:	eor	ip, r1, r2
   16f30:	eor	r2, r7, r3
   16f34:	str	r1, [sp, #120]	; 0x78
   16f38:	ldr	r7, [sp, #100]	; 0x64
   16f3c:	lsl	r3, r2, #16
   16f40:	lsr	r2, r2, #16
   16f44:	orr	r1, r2, ip, lsl #16
   16f48:	orr	r3, r3, ip, lsr #16
   16f4c:	adds	r2, r1, r8
   16f50:	str	r1, [sp, #156]	; 0x9c
   16f54:	str	r3, [sp, #152]	; 0x98
   16f58:	adc	r1, r3, lr
   16f5c:	str	r2, [sp, #144]	; 0x90
   16f60:	eor	r0, r2, r0
   16f64:	str	r1, [sp, #148]	; 0x94
   16f68:	eor	r1, r1, r5
   16f6c:	lsl	r2, r1, #1
   16f70:	orr	r8, r2, r0, lsr #31
   16f74:	lsl	r0, r0, #1
   16f78:	ldr	r2, [sp, #8]
   16f7c:	orr	lr, r0, r1, lsr #31
   16f80:	ldr	r0, [sp, #104]	; 0x68
   16f84:	ldr	r1, [sp, #108]	; 0x6c
   16f88:	str	r8, [sp, #16]
   16f8c:	str	lr, [sp, #32]
   16f90:	eor	r0, r6, r0
   16f94:	eor	r1, r2, r1
   16f98:	lsl	r2, r0, #1
   16f9c:	orr	r3, r2, r1, lsr #31
   16fa0:	lsl	r1, r1, #1
   16fa4:	ldr	r2, [sp, #88]	; 0x58
   16fa8:	orr	r0, r1, r0, lsr #31
   16fac:	ldr	r1, [sp, #200]	; 0xc8
   16fb0:	adds	r1, r2, r1
   16fb4:	ldr	r2, [sp, #196]	; 0xc4
   16fb8:	adc	r2, r7, r2
   16fbc:	adds	ip, r1, r0
   16fc0:	ldr	r1, [sp, #12]
   16fc4:	adc	r5, r2, r3
   16fc8:	ldr	r2, [sp, #52]	; 0x34
   16fcc:	adds	r9, r9, r1
   16fd0:	ldr	r1, [sp, #20]
   16fd4:	str	r9, [sp, #28]
   16fd8:	adc	r6, sl, r1
   16fdc:	ldr	r1, [sp, #60]	; 0x3c
   16fe0:	str	r6, [sp, #12]
   16fe4:	eor	r7, r2, r1
   16fe8:	ldr	r1, [sp, #112]	; 0x70
   16fec:	ldr	r2, [sp, #56]	; 0x38
   16ff0:	eor	r4, r2, r1
   16ff4:	lsr	r2, r4, #16
   16ff8:	lsl	r4, r4, #16
   16ffc:	orr	r4, r4, r7, lsr #16
   17000:	orr	r2, r2, r7, lsl #16
   17004:	eor	r7, r4, r5
   17008:	eor	r1, r2, ip
   1700c:	str	r2, [fp, #-192]	; 0xffffff40
   17010:	str	r4, [fp, #-188]	; 0xffffff44
   17014:	str	r7, [sp, #60]	; 0x3c
   17018:	adds	r7, r7, r9
   1701c:	str	r1, [sp, #56]	; 0x38
   17020:	adc	r6, r1, r6
   17024:	eor	r0, r7, r0
   17028:	str	r7, [sp, #108]	; 0x6c
   1702c:	ldr	r1, [sp, #212]	; 0xd4
   17030:	lsl	r7, r0, #8
   17034:	eor	r3, r6, r3
   17038:	lsr	r0, r0, #24
   1703c:	str	r6, [sp, #112]	; 0x70
   17040:	orr	r7, r7, r3, lsr #24
   17044:	orr	r3, r0, r3, lsl #8
   17048:	ldr	r0, [sp, #216]	; 0xd8
   1704c:	str	r3, [sp, #104]	; 0x68
   17050:	str	r7, [sp, #88]	; 0x58
   17054:	adds	r0, ip, r0
   17058:	adc	r1, r5, r1
   1705c:	adds	r3, r0, r3
   17060:	ldr	r0, [sp, #256]	; 0x100
   17064:	adc	r7, r1, r7
   17068:	ldr	r1, [sp, #252]	; 0xfc
   1706c:	str	r3, [sp, #52]	; 0x34
   17070:	str	r7, [sp, #48]	; 0x30
   17074:	adds	r0, r3, r0
   17078:	ldr	r3, [sp, #36]	; 0x24
   1707c:	adc	r1, r7, r1
   17080:	adds	r0, r0, lr
   17084:	ldr	r7, [sp, #40]	; 0x28
   17088:	str	r0, [sp, #24]
   1708c:	adc	r0, r1, r8
   17090:	ldr	r1, [sp, #68]	; 0x44
   17094:	str	r0, [sp, #20]
   17098:	ldr	r0, [sp, #72]	; 0x48
   1709c:	adds	sl, r2, r0
   170a0:	ldr	r0, [sp, #76]	; 0x4c
   170a4:	eor	r1, sl, r1
   170a8:	str	sl, [fp, #-224]	; 0xffffff20
   170ac:	adc	r9, r4, r0
   170b0:	ldr	r0, [sp, #64]	; 0x40
   170b4:	str	r9, [fp, #-220]	; 0xffffff24
   170b8:	eor	r0, r9, r0
   170bc:	lsl	r2, r0, #1
   170c0:	orr	r2, r2, r1, lsr #31
   170c4:	lsl	r1, r1, #1
   170c8:	orr	r0, r1, r0, lsr #31
   170cc:	ldr	r1, [sp, #288]	; 0x120
   170d0:	str	r2, [fp, #-252]	; 0xffffff04
   170d4:	str	r0, [fp, #-256]	; 0xffffff00
   170d8:	adds	r1, r3, r1
   170dc:	ldr	r3, [sp, #284]	; 0x11c
   170e0:	adc	r5, r7, r3
   170e4:	adds	r6, r1, r0
   170e8:	ldr	r1, [sp, #136]	; 0x88
   170ec:	ldr	r7, [sp, #132]	; 0x84
   170f0:	ldr	r3, [sp, #128]	; 0x80
   170f4:	adc	r8, r5, r2
   170f8:	str	r1, [fp, #-180]	; 0xffffff4c
   170fc:	ldr	r1, [sp, #140]	; 0x8c
   17100:	str	r1, [fp, #-184]	; 0xffffff48
   17104:	ldr	r1, [sp, #44]	; 0x2c
   17108:	str	r7, [fp, #-212]	; 0xffffff2c
   1710c:	str	r3, [fp, #-216]	; 0xffffff28
   17110:	eor	r4, r8, r1
   17114:	str	r1, [fp, #-172]	; 0xffffff54
   17118:	ldr	r1, [sp, #84]	; 0x54
   1711c:	adds	r5, r4, r3
   17120:	eor	r0, r5, r0
   17124:	eor	ip, r6, r1
   17128:	str	r1, [fp, #-176]	; 0xffffff50
   1712c:	adc	lr, ip, r7
   17130:	lsl	r7, r0, #8
   17134:	lsr	r0, r0, #24
   17138:	eor	r2, lr, r2
   1713c:	orr	r1, r0, r2, lsl #8
   17140:	ldr	r0, [sp, #272]	; 0x110
   17144:	orr	r3, r7, r2, lsr #24
   17148:	ldr	r2, [sp, #268]	; 0x10c
   1714c:	str	r1, [sp, #76]	; 0x4c
   17150:	str	r3, [sp, #72]	; 0x48
   17154:	adds	r0, r6, r0
   17158:	adc	r2, r8, r2
   1715c:	adds	r7, r0, r1
   17160:	ldr	r8, [sp, #164]	; 0xa4
   17164:	adc	r0, r2, r3
   17168:	eor	r1, r7, r4
   1716c:	str	r7, [sp, #84]	; 0x54
   17170:	ldr	r7, [sp, #124]	; 0x7c
   17174:	str	r0, [sp, #100]	; 0x64
   17178:	lsl	r2, r1, #16
   1717c:	eor	r0, r0, ip
   17180:	lsr	r1, r1, #16
   17184:	orr	r2, r2, r0, lsr #16
   17188:	orr	r0, r1, r0, lsl #16
   1718c:	ldr	r1, [sp, #12]
   17190:	adds	ip, r0, r5
   17194:	str	r0, [sp, #44]	; 0x2c
   17198:	str	r2, [sp, #36]	; 0x24
   1719c:	adc	r0, r2, lr
   171a0:	ldr	r2, [sp, #28]
   171a4:	str	ip, [sp]
   171a8:	str	r0, [sp, #8]
   171ac:	ldr	r0, [sp, #80]	; 0x50
   171b0:	eor	r0, r1, r0
   171b4:	ldr	r1, [sp, #92]	; 0x5c
   171b8:	lsl	r3, r0, #1
   171bc:	eor	r2, r2, r1
   171c0:	ldr	r1, [sp, #240]	; 0xf0
   171c4:	orr	r3, r3, r2, lsr #31
   171c8:	lsl	r2, r2, #1
   171cc:	orr	r0, r2, r0, lsr #31
   171d0:	ldr	r2, [sp, #96]	; 0x60
   171d4:	adds	r2, r2, r1
   171d8:	ldr	r1, [sp, #236]	; 0xec
   171dc:	adc	r7, r7, r1
   171e0:	ldr	r1, [sp, #136]	; 0x88
   171e4:	adds	r5, r2, r0
   171e8:	ldr	r2, [sp, #140]	; 0x8c
   171ec:	adc	r7, r7, r3
   171f0:	eor	r1, r7, r1
   171f4:	eor	r2, r5, r2
   171f8:	adds	r6, r1, sl
   171fc:	adc	r4, r2, r9
   17200:	ldr	r9, [sp, #168]	; 0xa8
   17204:	eor	r0, r6, r0
   17208:	str	r6, [sp, #64]	; 0x40
   1720c:	str	r4, [sp, #68]	; 0x44
   17210:	eor	r3, r4, r3
   17214:	lsl	r4, r0, #8
   17218:	lsr	r0, r0, #24
   1721c:	orr	r6, r4, r3, lsr #24
   17220:	orr	r4, r0, r3, lsl #8
   17224:	str	r4, [sp, #140]	; 0x8c
   17228:	str	r6, [sp, #40]	; 0x28
   1722c:	adds	r0, r5, r9
   17230:	adc	r3, r7, r8
   17234:	adds	r7, r0, r4
   17238:	ldr	r4, [sp, #20]
   1723c:	adc	r0, r3, r6
   17240:	eor	r1, r7, r1
   17244:	ldr	r3, [sp, #24]
   17248:	str	r7, [sp, #28]
   1724c:	ldr	r7, [sp, #8]
   17250:	str	r0, [sp, #96]	; 0x60
   17254:	eor	r0, r0, r2
   17258:	lsr	r2, r1, #16
   1725c:	lsl	r1, r1, #16
   17260:	orr	r1, r1, r0, lsr #16
   17264:	orr	r2, r2, r0, lsl #16
   17268:	ldr	r0, [sp, #152]	; 0x98
   1726c:	eor	lr, r4, r1
   17270:	str	r2, [sp, #4]
   17274:	str	r1, [sp, #12]
   17278:	eor	r2, r3, r2
   1727c:	adds	sl, lr, ip
   17280:	adc	r6, r2, r7
   17284:	str	r0, [fp, #-164]	; 0xffffff5c
   17288:	ldr	r0, [sp, #156]	; 0x9c
   1728c:	str	r0, [fp, #-168]	; 0xffffff58
   17290:	ldr	r0, [sp, #144]	; 0x90
   17294:	str	r0, [fp, #-208]	; 0xffffff30
   17298:	ldr	r0, [sp, #148]	; 0x94
   1729c:	str	r0, [fp, #-204]	; 0xffffff34
   172a0:	ldr	r0, [sp, #16]
   172a4:	str	r0, [fp, #-244]	; 0xffffff0c
   172a8:	eor	r1, r6, r0
   172ac:	ldr	r0, [sp, #32]
   172b0:	str	r0, [fp, #-248]	; 0xffffff08
   172b4:	eor	r0, sl, r0
   172b8:	lsl	r5, r0, #8
   172bc:	lsr	r0, r0, #24
   172c0:	orr	r5, r5, r1, lsr #24
   172c4:	orr	ip, r0, r1, lsl #8
   172c8:	ldr	r1, [sp, #280]	; 0x118
   172cc:	adds	r1, r3, r1
   172d0:	ldr	r3, [sp, #276]	; 0x114
   172d4:	adc	r3, r4, r3
   172d8:	adds	r0, r1, ip
   172dc:	adc	r1, r3, r5
   172e0:	str	r0, [sp, #80]	; 0x50
   172e4:	str	r1, [sp, #92]	; 0x5c
   172e8:	eor	r1, r1, r2
   172ec:	eor	r2, r0, lr
   172f0:	lsl	r3, r2, #16
   172f4:	lsr	r2, r2, #16
   172f8:	orr	r3, r3, r1, lsr #16
   172fc:	orr	r1, r2, r1, lsl #16
   17300:	adds	r2, r1, sl
   17304:	str	r1, [sp, #136]	; 0x88
   17308:	str	r3, [sp, #124]	; 0x7c
   1730c:	adc	r1, r3, r6
   17310:	str	r2, [sp, #128]	; 0x80
   17314:	eor	r0, r2, ip
   17318:	ldr	r3, [sp, #120]	; 0x78
   1731c:	str	r1, [sp, #132]	; 0x84
   17320:	eor	r1, r1, r5
   17324:	ldr	r5, [sp, #52]	; 0x34
   17328:	lsl	r2, r1, #1
   1732c:	orr	sl, r2, r0, lsr #31
   17330:	lsl	r0, r0, #1
   17334:	ldr	r2, [sp]
   17338:	orr	lr, r0, r1, lsr #31
   1733c:	ldr	r0, [sp, #72]	; 0x48
   17340:	ldr	r1, [sp, #76]	; 0x4c
   17344:	str	sl, [sp, #20]
   17348:	str	lr, [sp, #24]
   1734c:	eor	r0, r7, r0
   17350:	eor	r1, r2, r1
   17354:	ldr	r7, [sp, #12]
   17358:	lsl	r2, r0, #1
   1735c:	orr	r2, r2, r1, lsr #31
   17360:	lsl	r1, r1, #1
   17364:	orr	r1, r1, r0, lsr #31
   17368:	ldr	r0, [sp, #116]	; 0x74
   1736c:	adds	r0, r0, r9
   17370:	adc	r3, r3, r8
   17374:	adds	r6, r0, r1
   17378:	ldr	r0, [sp, #64]	; 0x40
   1737c:	adc	r9, r3, r2
   17380:	ldr	r3, [sp, #4]
   17384:	adds	r3, r3, r0
   17388:	ldr	r0, [sp, #68]	; 0x44
   1738c:	str	r3, [sp, #32]
   17390:	adc	r8, r7, r0
   17394:	ldr	r0, [sp, #56]	; 0x38
   17398:	ldr	r7, [sp, #48]	; 0x30
   1739c:	eor	r7, r7, r0
   173a0:	ldr	r0, [sp, #60]	; 0x3c
   173a4:	eor	r5, r5, r0
   173a8:	lsr	r4, r5, #16
   173ac:	lsl	r5, r5, #16
   173b0:	orr	ip, r4, r7, lsl #16
   173b4:	orr	r7, r5, r7, lsr #16
   173b8:	eor	r0, r9, r7
   173bc:	eor	r4, r6, ip
   173c0:	adds	r5, r0, r3
   173c4:	str	r0, [sp, #60]	; 0x3c
   173c8:	str	r4, [sp, #56]	; 0x38
   173cc:	adc	r0, r4, r8
   173d0:	eor	r1, r5, r1
   173d4:	str	r5, [sp, #72]	; 0x48
   173d8:	str	r0, [sp, #76]	; 0x4c
   173dc:	eor	r2, r0, r2
   173e0:	ldr	r0, [sp, #200]	; 0xc8
   173e4:	lsl	r5, r1, #8
   173e8:	lsr	r1, r1, #24
   173ec:	orr	r4, r1, r2, lsl #8
   173f0:	orr	r5, r5, r2, lsr #24
   173f4:	str	r4, [sp, #68]	; 0x44
   173f8:	str	r5, [sp, #64]	; 0x40
   173fc:	adds	r1, r6, r0
   17400:	ldr	r0, [sp, #196]	; 0xc4
   17404:	adc	r2, r9, r0
   17408:	ldr	r0, [sp, #224]	; 0xe0
   1740c:	adds	r3, r1, r4
   17410:	adc	r4, r2, r5
   17414:	str	r3, [sp, #52]	; 0x34
   17418:	str	r4, [sp, #48]	; 0x30
   1741c:	adds	r1, lr, r0
   17420:	ldr	r0, [sp, #220]	; 0xdc
   17424:	adc	r2, sl, r0
   17428:	adds	r0, r1, r3
   1742c:	ldr	r1, [sp, #28]
   17430:	str	r0, [sp, #120]	; 0x78
   17434:	adc	r0, r2, r4
   17438:	str	r0, [sp, #116]	; 0x74
   1743c:	ldr	r0, [sp, #108]	; 0x6c
   17440:	adds	r9, ip, r0
   17444:	ldr	r0, [sp, #112]	; 0x70
   17448:	str	r9, [fp, #-200]	; 0xffffff38
   1744c:	adc	r6, r7, r0
   17450:	ldr	r0, [sp, #88]	; 0x58
   17454:	str	r6, [fp, #-196]	; 0xffffff3c
   17458:	eor	r2, r6, r0
   1745c:	ldr	r0, [sp, #104]	; 0x68
   17460:	lsl	r7, r2, #1
   17464:	eor	r3, r9, r0
   17468:	ldr	r0, [sp, #248]	; 0xf8
   1746c:	orr	r7, r7, r3, lsr #31
   17470:	lsl	r3, r3, #1
   17474:	orr	r2, r3, r2, lsr #31
   17478:	str	r7, [fp, #-236]	; 0xffffff14
   1747c:	str	r2, [fp, #-240]	; 0xffffff10
   17480:	adds	r3, r1, r0
   17484:	ldr	r0, [sp, #244]	; 0xf4
   17488:	ldr	r1, [sp, #96]	; 0x60
   1748c:	adc	r5, r1, r0
   17490:	ldr	r0, [sp, #36]	; 0x24
   17494:	adds	r3, r3, r2
   17498:	ldr	r1, [sp, #144]	; 0x90
   1749c:	adc	ip, r5, r7
   174a0:	ldr	r5, [sp, #148]	; 0x94
   174a4:	eor	sl, r0, ip
   174a8:	ldr	r0, [sp, #44]	; 0x2c
   174ac:	adds	r1, sl, r1
   174b0:	eor	r2, r1, r2
   174b4:	eor	r0, r0, r3
   174b8:	adc	lr, r0, r5
   174bc:	eor	r5, lr, r7
   174c0:	lsl	r7, r2, #8
   174c4:	lsr	r2, r2, #24
   174c8:	orr	r4, r7, r5, lsr #24
   174cc:	orr	r5, r2, r5, lsl #8
   174d0:	ldr	r2, [sp, #184]	; 0xb8
   174d4:	str	r4, [sp, #108]	; 0x6c
   174d8:	str	r5, [sp, #112]	; 0x70
   174dc:	adds	r2, r3, r2
   174e0:	ldr	r3, [sp, #180]	; 0xb4
   174e4:	adc	r3, ip, r3
   174e8:	adds	r7, r2, r5
   174ec:	adc	r2, r3, r4
   174f0:	str	r7, [sp, #96]	; 0x60
   174f4:	ldr	r4, [sp, #292]	; 0x124
   174f8:	str	r2, [sp, #148]	; 0x94
   174fc:	eor	r0, r2, r0
   17500:	eor	r2, r7, sl
   17504:	ldr	r7, [sp, #84]	; 0x54
   17508:	lsl	r3, r2, #16
   1750c:	lsr	r2, r2, #16
   17510:	orr	r3, r3, r0, lsr #16
   17514:	orr	r0, r2, r0, lsl #16
   17518:	ldr	r2, [sp, #32]
   1751c:	adds	ip, r0, r1
   17520:	str	r0, [sp, #44]	; 0x2c
   17524:	ldr	r0, [sp, #40]	; 0x28
   17528:	ldr	r1, [sp, #140]	; 0x8c
   1752c:	str	r3, [sp, #36]	; 0x24
   17530:	adc	lr, r3, lr
   17534:	str	ip, [sp, #16]
   17538:	str	lr, [sp, #12]
   1753c:	eor	r0, r8, r0
   17540:	eor	r3, r2, r1
   17544:	lsl	r2, r0, #1
   17548:	orr	r1, r2, r3, lsr #31
   1754c:	lsl	r2, r3, #1
   17550:	ldr	r3, [sp, #232]	; 0xe8
   17554:	orr	r0, r2, r0, lsr #31
   17558:	ldr	r2, [sp, #228]	; 0xe4
   1755c:	strd	r0, [r4]
   17560:	ldr	r4, [sp, #116]	; 0x74
   17564:	adds	r2, r0, r2
   17568:	adc	r3, r1, r3
   1756c:	adds	r7, r2, r7
   17570:	ldr	r2, [sp, #100]	; 0x64
   17574:	adc	r2, r3, r2
   17578:	ldr	r3, [sp, #152]	; 0x98
   1757c:	eor	r8, r2, r3
   17580:	ldr	r3, [sp, #156]	; 0x9c
   17584:	adds	r5, r8, r9
   17588:	eor	r0, r5, r0
   1758c:	str	r5, [sp, #88]	; 0x58
   17590:	eor	r3, r7, r3
   17594:	adc	r6, r3, r6
   17598:	str	r6, [sp, #104]	; 0x68
   1759c:	eor	r6, r6, r1
   175a0:	lsl	r1, r0, #8
   175a4:	lsr	r0, r0, #24
   175a8:	orr	r5, r1, r6, lsr #24
   175ac:	orr	r6, r0, r6, lsl #8
   175b0:	ldr	r0, [sp, #240]	; 0xf0
   175b4:	ldr	r1, [sp, #236]	; 0xec
   175b8:	str	r5, [sp, #32]
   175bc:	str	r6, [sp, #40]	; 0x28
   175c0:	adds	r0, r7, r0
   175c4:	adc	r1, r2, r1
   175c8:	adds	r2, r0, r6
   175cc:	adc	r0, r1, r5
   175d0:	str	r2, [sp, #84]	; 0x54
   175d4:	str	r0, [sp, #100]	; 0x64
   175d8:	eor	r0, r0, r3
   175dc:	eor	r3, r2, r8
   175e0:	ldr	r2, [sp, #120]	; 0x78
   175e4:	lsr	r1, r3, #16
   175e8:	lsl	r3, r3, #16
   175ec:	orr	r5, r3, r0, lsr #16
   175f0:	orr	r9, r1, r0, lsl #16
   175f4:	ldr	r0, [sp, #20]
   175f8:	eor	r3, r4, r5
   175fc:	eor	r7, r2, r9
   17600:	adds	r8, r3, ip
   17604:	adc	lr, r7, lr
   17608:	eor	r1, lr, r0
   1760c:	ldr	r0, [sp, #24]
   17610:	eor	r0, r8, r0
   17614:	lsl	r6, r0, #8
   17618:	lsr	r0, r0, #24
   1761c:	orr	r6, r6, r1, lsr #24
   17620:	orr	ip, r0, r1, lsl #8
   17624:	ldr	r1, [sp, #288]	; 0x120
   17628:	adds	r1, r2, r1
   1762c:	ldr	r2, [sp, #284]	; 0x11c
   17630:	adc	r2, r4, r2
   17634:	adds	r0, r1, ip
   17638:	adc	r1, r2, r6
   1763c:	eor	r2, r0, r3
   17640:	str	r0, [sp, #116]	; 0x74
   17644:	str	r1, [sp, #120]	; 0x78
   17648:	eor	r1, r1, r7
   1764c:	lsl	r3, r2, #16
   17650:	lsr	r2, r2, #16
   17654:	ldr	r7, [sp, #92]	; 0x5c
   17658:	orr	r3, r3, r1, lsr #16
   1765c:	orr	r1, r2, r1, lsl #16
   17660:	adds	r2, r1, r8
   17664:	str	r1, [sp, #156]	; 0x9c
   17668:	str	r3, [sp, #152]	; 0x98
   1766c:	adc	r1, r3, lr
   17670:	str	r2, [sp, #140]	; 0x8c
   17674:	eor	r0, r2, ip
   17678:	ldr	r3, [sp, #80]	; 0x50
   1767c:	str	r1, [sp, #144]	; 0x90
   17680:	eor	r1, r1, r6
   17684:	lsl	r2, r1, #1
   17688:	orr	sl, r2, r0, lsr #31
   1768c:	lsl	r0, r0, #1
   17690:	ldr	r2, [sp, #16]
   17694:	orr	r8, r0, r1, lsr #31
   17698:	ldr	r0, [sp, #108]	; 0x6c
   1769c:	ldr	r1, [sp, #12]
   176a0:	str	sl, [sp, #24]
   176a4:	str	r8, [sp, #28]
   176a8:	eor	r0, r1, r0
   176ac:	ldr	r1, [sp, #112]	; 0x70
   176b0:	eor	r1, r2, r1
   176b4:	lsl	r2, r0, #1
   176b8:	orr	r2, r2, r1, lsr #31
   176bc:	lsl	r1, r1, #1
   176c0:	orr	ip, r1, r0, lsr #31
   176c4:	ldr	r0, [sp, #264]	; 0x108
   176c8:	adds	r0, r3, r0
   176cc:	ldr	r3, [sp, #260]	; 0x104
   176d0:	adc	r3, r7, r3
   176d4:	adds	lr, r0, ip
   176d8:	ldr	r0, [sp, #88]	; 0x58
   176dc:	adc	r6, r3, r2
   176e0:	ldr	r3, [sp, #48]	; 0x30
   176e4:	adds	r1, r9, r0
   176e8:	ldr	r0, [sp, #104]	; 0x68
   176ec:	str	r1, [sp, #20]
   176f0:	adc	r9, r5, r0
   176f4:	ldr	r0, [sp, #56]	; 0x38
   176f8:	str	r9, [sp, #16]
   176fc:	eor	r5, r3, r0
   17700:	ldr	r0, [sp, #60]	; 0x3c
   17704:	ldr	r3, [sp, #52]	; 0x34
   17708:	eor	r4, r3, r0
   1770c:	lsr	r7, r4, #16
   17710:	lsl	r4, r4, #16
   17714:	orr	r4, r4, r5, lsr #16
   17718:	orr	r7, r7, r5, lsl #16
   1771c:	eor	r0, r4, r6
   17720:	eor	r3, r7, lr
   17724:	str	r7, [fp, #-192]	; 0xffffff40
   17728:	str	r4, [fp, #-188]	; 0xffffff44
   1772c:	str	r0, [sp, #60]	; 0x3c
   17730:	adds	r0, r0, r1
   17734:	str	r3, [sp, #56]	; 0x38
   17738:	str	r0, [sp, #108]	; 0x6c
   1773c:	eor	r1, r0, ip
   17740:	ldr	r0, [sp, #192]	; 0xc0
   17744:	adc	r5, r3, r9
   17748:	str	r5, [sp, #112]	; 0x70
   1774c:	eor	r2, r5, r2
   17750:	lsl	r5, r1, #8
   17754:	lsr	r1, r1, #24
   17758:	orr	r3, r1, r2, lsl #8
   1775c:	orr	r5, r5, r2, lsr #24
   17760:	str	r3, [sp, #104]	; 0x68
   17764:	str	r5, [sp, #88]	; 0x58
   17768:	adds	r1, lr, r0
   1776c:	ldr	r0, [sp, #188]	; 0xbc
   17770:	adc	r2, r6, r0
   17774:	adds	r0, r1, r3
   17778:	ldr	r1, [sp, #240]	; 0xf0
   1777c:	ldr	r3, [sp, #128]	; 0x80
   17780:	adc	r2, r2, r5
   17784:	str	r0, [sp, #52]	; 0x34
   17788:	str	r2, [sp, #48]	; 0x30
   1778c:	adds	r1, r0, r1
   17790:	ldr	r0, [sp, #236]	; 0xec
   17794:	adc	r2, r2, r0
   17798:	adds	r0, r1, r8
   1779c:	ldr	r1, [sp, #84]	; 0x54
   177a0:	str	r0, [sp, #92]	; 0x5c
   177a4:	adc	r0, r2, sl
   177a8:	ldr	sl, [sp, #124]	; 0x7c
   177ac:	str	r0, [sp, #80]	; 0x50
   177b0:	ldr	r0, [sp, #72]	; 0x48
   177b4:	adds	r9, r7, r0
   177b8:	ldr	r0, [sp, #76]	; 0x4c
   177bc:	str	r9, [fp, #-224]	; 0xffffff20
   177c0:	adc	lr, r4, r0
   177c4:	ldr	r0, [sp, #64]	; 0x40
   177c8:	str	lr, [fp, #-220]	; 0xffffff24
   177cc:	eor	r2, lr, r0
   177d0:	ldr	r0, [sp, #68]	; 0x44
   177d4:	lsl	r6, r2, #1
   177d8:	eor	r7, r9, r0
   177dc:	ldr	r0, [sp, #272]	; 0x110
   177e0:	orr	r6, r6, r7, lsr #31
   177e4:	lsl	r7, r7, #1
   177e8:	orr	r2, r7, r2, lsr #31
   177ec:	str	r6, [fp, #-252]	; 0xffffff04
   177f0:	str	r2, [fp, #-256]	; 0xffffff00
   177f4:	str	sl, [fp, #-180]	; 0xffffff4c
   177f8:	adds	r7, r1, r0
   177fc:	ldr	r0, [sp, #268]	; 0x10c
   17800:	ldr	r1, [sp, #100]	; 0x64
   17804:	adc	r4, r1, r0
   17808:	ldr	r0, [sp, #136]	; 0x88
   1780c:	ldr	r1, [sp, #132]	; 0x84
   17810:	adds	r7, r7, r2
   17814:	adc	r8, r4, r6
   17818:	str	r0, [fp, #-184]	; 0xffffff48
   1781c:	ldr	r0, [sp, #36]	; 0x24
   17820:	str	r1, [fp, #-212]	; 0xffffff2c
   17824:	str	r3, [fp, #-216]	; 0xffffff28
   17828:	eor	r5, r8, r0
   1782c:	str	r0, [fp, #-172]	; 0xffffff54
   17830:	ldr	r0, [sp, #44]	; 0x2c
   17834:	adds	r4, r5, r3
   17838:	eor	r2, r4, r2
   1783c:	lsl	r3, r2, #8
   17840:	lsr	r2, r2, #24
   17844:	eor	ip, r7, r0
   17848:	str	r0, [fp, #-176]	; 0xffffff50
   1784c:	adc	r1, ip, r1
   17850:	eor	r6, r1, r6
   17854:	orr	r0, r3, r6, lsr #24
   17858:	orr	r3, r2, r6, lsl #8
   1785c:	ldr	r2, [sp, #208]	; 0xd0
   17860:	str	r3, [sp, #76]	; 0x4c
   17864:	str	r0, [sp, #72]	; 0x48
   17868:	adds	r7, r7, r2
   1786c:	ldr	r2, [sp, #204]	; 0xcc
   17870:	adc	r6, r8, r2
   17874:	adds	r2, r7, r3
   17878:	adc	r3, r6, r0
   1787c:	str	r2, [sp, #84]	; 0x54
   17880:	str	r3, [sp, #100]	; 0x64
   17884:	eor	r0, r3, ip
   17888:	eor	r3, r2, r5
   1788c:	lsl	r5, r3, #16
   17890:	lsr	r3, r3, #16
   17894:	orr	r2, r5, r0, lsr #16
   17898:	orr	r0, r3, r0, lsl #16
   1789c:	adds	ip, r0, r4
   178a0:	str	r0, [sp, #44]	; 0x2c
   178a4:	str	r2, [sp, #36]	; 0x24
   178a8:	adc	r0, r2, r1
   178ac:	ldr	r1, [sp, #16]
   178b0:	ldr	r2, [sp, #20]
   178b4:	str	ip, [sp, #8]
   178b8:	str	r0, [sp, #12]
   178bc:	ldr	r0, [sp, #32]
   178c0:	eor	r0, r1, r0
   178c4:	ldr	r1, [sp, #40]	; 0x28
   178c8:	lsl	r3, r0, #1
   178cc:	eor	r1, r2, r1
   178d0:	ldr	r2, [sp, #148]	; 0x94
   178d4:	orr	r3, r3, r1, lsr #31
   178d8:	lsl	r1, r1, #1
   178dc:	orr	r5, r1, r0, lsr #31
   178e0:	ldr	r0, [sp, #176]	; 0xb0
   178e4:	ldr	r1, [sp, #96]	; 0x60
   178e8:	adds	r0, r1, r0
   178ec:	ldr	r1, [sp, #172]	; 0xac
   178f0:	adc	r1, r2, r1
   178f4:	adds	r6, r0, r5
   178f8:	adc	r7, r1, r3
   178fc:	ldr	r1, [sp, #136]	; 0x88
   17900:	eor	r0, r7, sl
   17904:	adds	r2, r0, r9
   17908:	eor	r5, r2, r5
   1790c:	str	r2, [sp, #64]	; 0x40
   17910:	eor	r1, r6, r1
   17914:	lsl	r2, r5, #8
   17918:	adc	r4, r1, lr
   1791c:	eor	r3, r4, r3
   17920:	str	r4, [sp, #68]	; 0x44
   17924:	orr	r4, r2, r3, lsr #24
   17928:	lsr	r2, r5, #24
   1792c:	ldr	r5, [sp, #212]	; 0xd4
   17930:	orr	r2, r2, r3, lsl #8
   17934:	ldr	r3, [sp, #216]	; 0xd8
   17938:	str	r4, [sp, #32]
   1793c:	str	r2, [sp, #40]	; 0x28
   17940:	adds	r6, r6, r3
   17944:	adc	r7, r7, r5
   17948:	adds	r2, r6, r2
   1794c:	adc	r7, r7, r4
   17950:	eor	r0, r2, r0
   17954:	str	r2, [sp, #96]	; 0x60
   17958:	ldr	r4, [sp, #80]	; 0x50
   1795c:	lsr	r2, r0, #16
   17960:	eor	r1, r7, r1
   17964:	lsl	r0, r0, #16
   17968:	str	r7, [sp, #124]	; 0x7c
   1796c:	orr	sl, r0, r1, lsr #16
   17970:	ldr	r0, [sp, #152]	; 0x98
   17974:	orr	r6, r2, r1, lsl #16
   17978:	ldr	r2, [sp, #92]	; 0x5c
   1797c:	str	r6, [sp, #20]
   17980:	eor	lr, r4, sl
   17984:	adds	r8, lr, ip
   17988:	str	r0, [fp, #-164]	; 0xffffff5c
   1798c:	ldr	r0, [sp, #156]	; 0x9c
   17990:	eor	r1, r2, r6
   17994:	ldr	r6, [sp, #12]
   17998:	str	r0, [fp, #-168]	; 0xffffff58
   1799c:	ldr	r0, [sp, #140]	; 0x8c
   179a0:	adc	ip, r1, r6
   179a4:	str	r0, [fp, #-208]	; 0xffffff30
   179a8:	ldr	r0, [sp, #144]	; 0x90
   179ac:	str	r0, [fp, #-204]	; 0xffffff34
   179b0:	ldr	r0, [sp, #24]
   179b4:	str	r0, [fp, #-244]	; 0xffffff0c
   179b8:	eor	r7, ip, r0
   179bc:	ldr	r0, [sp, #28]
   179c0:	str	r0, [fp, #-248]	; 0xffffff08
   179c4:	eor	r0, r8, r0
   179c8:	lsl	r9, r0, #8
   179cc:	lsr	r0, r0, #24
   179d0:	orr	r9, r9, r7, lsr #24
   179d4:	orr	r0, r0, r7, lsl #8
   179d8:	adds	r7, r2, r3
   179dc:	adc	r2, r4, r5
   179e0:	adds	r3, r7, r0
   179e4:	ldr	r7, [sp, #120]	; 0x78
   179e8:	adc	r2, r2, r9
   179ec:	str	r3, [sp, #80]	; 0x50
   179f0:	str	r2, [sp, #92]	; 0x5c
   179f4:	eor	r1, r2, r1
   179f8:	eor	r2, r3, lr
   179fc:	lsl	r3, r2, #16
   17a00:	lsr	r2, r2, #16
   17a04:	orr	r3, r3, r1, lsr #16
   17a08:	orr	r1, r2, r1, lsl #16
   17a0c:	adds	r2, r1, r8
   17a10:	str	r1, [sp, #136]	; 0x88
   17a14:	str	r3, [sp, #148]	; 0x94
   17a18:	adc	r1, r3, ip
   17a1c:	str	r2, [sp, #128]	; 0x80
   17a20:	eor	r0, r2, r0
   17a24:	str	r1, [sp, #132]	; 0x84
   17a28:	eor	r1, r1, r9
   17a2c:	lsl	r2, r1, #1
   17a30:	orr	r8, r2, r0, lsr #31
   17a34:	lsl	r0, r0, #1
   17a38:	ldr	r2, [sp, #8]
   17a3c:	orr	lr, r0, r1, lsr #31
   17a40:	ldr	r0, [sp, #72]	; 0x48
   17a44:	ldr	r1, [sp, #76]	; 0x4c
   17a48:	str	r8, [sp, #24]
   17a4c:	str	lr, [sp, #28]
   17a50:	eor	r0, r6, r0
   17a54:	eor	r1, r2, r1
   17a58:	ldr	r6, [sp, #48]	; 0x30
   17a5c:	lsl	r2, r0, #1
   17a60:	orr	r3, r2, r1, lsr #31
   17a64:	lsl	r1, r1, #1
   17a68:	ldr	r2, [sp, #116]	; 0x74
   17a6c:	orr	r0, r1, r0, lsr #31
   17a70:	ldr	r1, [sp, #272]	; 0x110
   17a74:	adds	r1, r2, r1
   17a78:	ldr	r2, [sp, #268]	; 0x10c
   17a7c:	adc	r2, r7, r2
   17a80:	adds	ip, r1, r0
   17a84:	ldr	r1, [sp, #20]
   17a88:	adc	r7, r2, r3
   17a8c:	ldr	r2, [sp, #64]	; 0x40
   17a90:	adds	r1, r1, r2
   17a94:	ldr	r2, [sp, #68]	; 0x44
   17a98:	str	r1, [sp, #20]
   17a9c:	adc	r9, sl, r2
   17aa0:	ldr	r2, [sp, #56]	; 0x38
   17aa4:	eor	r5, r6, r2
   17aa8:	ldr	r2, [sp, #60]	; 0x3c
   17aac:	ldr	r6, [sp, #52]	; 0x34
   17ab0:	eor	r4, r6, r2
   17ab4:	lsr	r2, r4, #16
   17ab8:	lsl	r4, r4, #16
   17abc:	orr	sl, r2, r5, lsl #16
   17ac0:	orr	r5, r4, r5, lsr #16
   17ac4:	eor	r6, r7, r5
   17ac8:	eor	r2, ip, sl
   17acc:	adds	r4, r6, r1
   17ad0:	str	r6, [sp, #60]	; 0x3c
   17ad4:	ldr	r1, [sp, #284]	; 0x11c
   17ad8:	str	r2, [sp, #56]	; 0x38
   17adc:	adc	r6, r2, r9
   17ae0:	eor	r0, r4, r0
   17ae4:	str	r4, [sp, #72]	; 0x48
   17ae8:	lsl	r4, r0, #8
   17aec:	eor	r3, r6, r3
   17af0:	lsr	r0, r0, #24
   17af4:	str	r6, [sp, #76]	; 0x4c
   17af8:	orr	r6, r4, r3, lsr #24
   17afc:	orr	r3, r0, r3, lsl #8
   17b00:	ldr	r0, [sp, #288]	; 0x120
   17b04:	str	r3, [sp, #68]	; 0x44
   17b08:	str	r6, [sp, #64]	; 0x40
   17b0c:	adds	r0, ip, r0
   17b10:	adc	r1, r7, r1
   17b14:	adds	r2, r0, r3
   17b18:	ldr	r0, [sp, #200]	; 0xc8
   17b1c:	adc	r3, r1, r6
   17b20:	ldr	r1, [sp, #196]	; 0xc4
   17b24:	str	r2, [sp, #52]	; 0x34
   17b28:	str	r3, [sp, #48]	; 0x30
   17b2c:	adds	r0, lr, r0
   17b30:	adc	r1, r8, r1
   17b34:	adds	r0, r0, r2
   17b38:	str	r0, [sp, #120]	; 0x78
   17b3c:	adc	r0, r1, r3
   17b40:	ldr	r1, [sp, #96]	; 0x60
   17b44:	str	r0, [sp, #116]	; 0x74
   17b48:	ldr	r0, [sp, #108]	; 0x6c
   17b4c:	adds	r6, sl, r0
   17b50:	ldr	r0, [sp, #112]	; 0x70
   17b54:	str	r6, [fp, #-200]	; 0xffffff38
   17b58:	adc	r7, r5, r0
   17b5c:	ldr	r0, [sp, #88]	; 0x58
   17b60:	str	r7, [fp, #-196]	; 0xffffff3c
   17b64:	eor	r2, r7, r0
   17b68:	ldr	r0, [sp, #104]	; 0x68
   17b6c:	lsl	r5, r2, #1
   17b70:	eor	r3, r6, r0
   17b74:	ldr	r0, [sp, #192]	; 0xc0
   17b78:	orr	r5, r5, r3, lsr #31
   17b7c:	lsl	r3, r3, #1
   17b80:	orr	r2, r3, r2, lsr #31
   17b84:	str	r5, [fp, #-236]	; 0xffffff14
   17b88:	str	r2, [fp, #-240]	; 0xffffff10
   17b8c:	adds	r3, r1, r0
   17b90:	ldr	r0, [sp, #188]	; 0xbc
   17b94:	ldr	r1, [sp, #124]	; 0x7c
   17b98:	adc	r4, r1, r0
   17b9c:	ldr	r0, [sp, #36]	; 0x24
   17ba0:	adds	r3, r3, r2
   17ba4:	ldr	r1, [sp, #144]	; 0x90
   17ba8:	adc	ip, r4, r5
   17bac:	eor	lr, r0, ip
   17bb0:	ldr	r0, [sp, #44]	; 0x2c
   17bb4:	eor	sl, r0, r3
   17bb8:	ldr	r0, [sp, #140]	; 0x8c
   17bbc:	adds	r8, lr, r0
   17bc0:	adc	r1, sl, r1
   17bc4:	eor	r2, r8, r2
   17bc8:	eor	r4, r1, r5
   17bcc:	lsl	r5, r2, #8
   17bd0:	lsr	r2, r2, #24
   17bd4:	orr	r0, r5, r4, lsr #24
   17bd8:	orr	r4, r2, r4, lsl #8
   17bdc:	ldr	r2, [sp, #168]	; 0xa8
   17be0:	str	r0, [sp, #108]	; 0x6c
   17be4:	str	r4, [sp, #112]	; 0x70
   17be8:	adds	r2, r3, r2
   17bec:	ldr	r3, [sp, #164]	; 0xa4
   17bf0:	adc	r3, ip, r3
   17bf4:	adds	r5, r2, r4
   17bf8:	adc	r2, r3, r0
   17bfc:	eor	r3, r5, lr
   17c00:	str	r5, [sp, #96]	; 0x60
   17c04:	ldr	r0, [sp, #32]
   17c08:	str	r2, [sp, #124]	; 0x7c
   17c0c:	lsl	r5, r3, #16
   17c10:	eor	r2, r2, sl
   17c14:	lsr	r3, r3, #16
   17c18:	orr	r5, r5, r2, lsr #16
   17c1c:	orr	r2, r3, r2, lsl #16
   17c20:	ldr	r3, [sp, #84]	; 0x54
   17c24:	adds	sl, r2, r8
   17c28:	str	r2, [sp, #44]	; 0x2c
   17c2c:	ldr	r2, [sp, #20]
   17c30:	str	r5, [sp, #36]	; 0x24
   17c34:	adc	lr, r5, r1
   17c38:	ldr	r1, [sp, #40]	; 0x28
   17c3c:	eor	r0, r9, r0
   17c40:	str	sl, [sp, #12]
   17c44:	eor	r1, r2, r1
   17c48:	lsl	r2, r0, #1
   17c4c:	orr	r5, r2, r1, lsr #31
   17c50:	lsl	r1, r1, #1
   17c54:	ldr	r2, [sp, #172]	; 0xac
   17c58:	orr	r0, r1, r0, lsr #31
   17c5c:	ldr	r1, [sp, #176]	; 0xb0
   17c60:	adds	r1, r0, r1
   17c64:	adc	r2, r5, r2
   17c68:	adds	r1, r1, r3
   17c6c:	ldr	r3, [sp, #100]	; 0x64
   17c70:	adc	r3, r2, r3
   17c74:	ldr	r2, [sp, #152]	; 0x98
   17c78:	eor	r8, r3, r2
   17c7c:	ldr	r2, [sp, #156]	; 0x9c
   17c80:	adds	r4, r8, r6
   17c84:	str	r4, [sp, #88]	; 0x58
   17c88:	eor	r9, r1, r2
   17c8c:	adc	r2, r9, r7
   17c90:	str	r2, [sp, #104]	; 0x68
   17c94:	eor	r6, r2, r5
   17c98:	ldr	r2, [sp, #292]	; 0x124
   17c9c:	stm	r2, {r0, r5}
   17ca0:	eor	r0, r4, r0
   17ca4:	lsl	r5, r0, #8
   17ca8:	lsr	r0, r0, #24
   17cac:	orr	r2, r5, r6, lsr #24
   17cb0:	orr	r6, r0, r6, lsl #8
   17cb4:	ldr	r0, [sp, #208]	; 0xd0
   17cb8:	str	r2, [sp, #32]
   17cbc:	str	r6, [sp, #40]	; 0x28
   17cc0:	adds	r0, r1, r0
   17cc4:	ldr	r1, [sp, #204]	; 0xcc
   17cc8:	adc	r1, r3, r1
   17ccc:	adds	r3, r0, r6
   17cd0:	adc	r0, r1, r2
   17cd4:	ldr	r2, [sp, #116]	; 0x74
   17cd8:	eor	r5, r3, r8
   17cdc:	str	r3, [sp, #84]	; 0x54
   17ce0:	ldr	r3, [sp, #120]	; 0x78
   17ce4:	str	r0, [sp, #100]	; 0x64
   17ce8:	lsr	r1, r5, #16
   17cec:	eor	r0, r0, r9
   17cf0:	lsl	r5, r5, #16
   17cf4:	orr	r7, r5, r0, lsr #16
   17cf8:	orr	r9, r1, r0, lsl #16
   17cfc:	ldr	r0, [sp, #24]
   17d00:	eor	r5, r2, r7
   17d04:	eor	ip, r3, r9
   17d08:	adds	r8, r5, sl
   17d0c:	mov	sl, lr
   17d10:	adc	r4, ip, lr
   17d14:	eor	r1, r4, r0
   17d18:	ldr	r0, [sp, #28]
   17d1c:	eor	r0, r8, r0
   17d20:	lsl	r6, r0, #8
   17d24:	lsr	r0, r0, #24
   17d28:	orr	r6, r6, r1, lsr #24
   17d2c:	orr	lr, r0, r1, lsl #8
   17d30:	ldr	r1, [sp, #248]	; 0xf8
   17d34:	adds	r1, r3, r1
   17d38:	ldr	r3, [sp, #244]	; 0xf4
   17d3c:	adc	r3, r2, r3
   17d40:	adds	r0, r1, lr
   17d44:	adc	r1, r3, r6
   17d48:	eor	r2, r0, r5
   17d4c:	str	r0, [sp, #116]	; 0x74
   17d50:	str	r1, [sp, #120]	; 0x78
   17d54:	lsl	r3, r2, #16
   17d58:	eor	r1, r1, ip
   17d5c:	lsr	r2, r2, #16
   17d60:	orr	r3, r3, r1, lsr #16
   17d64:	orr	r1, r2, r1, lsl #16
   17d68:	adds	r2, r1, r8
   17d6c:	str	r1, [sp, #156]	; 0x9c
   17d70:	str	r3, [sp, #152]	; 0x98
   17d74:	adc	r1, r3, r4
   17d78:	str	r2, [sp, #140]	; 0x8c
   17d7c:	eor	r0, r2, lr
   17d80:	ldr	r3, [sp, #80]	; 0x50
   17d84:	str	r1, [sp, #144]	; 0x90
   17d88:	eor	r1, r1, r6
   17d8c:	ldr	r6, [sp, #92]	; 0x5c
   17d90:	lsl	r2, r1, #1
   17d94:	orr	r8, r2, r0, lsr #31
   17d98:	lsl	r0, r0, #1
   17d9c:	ldr	r2, [sp, #12]
   17da0:	orr	lr, r0, r1, lsr #31
   17da4:	ldr	r0, [sp, #108]	; 0x6c
   17da8:	ldr	r1, [sp, #112]	; 0x70
   17dac:	str	r8, [sp, #16]
   17db0:	str	lr, [sp, #24]
   17db4:	eor	r0, sl, r0
   17db8:	eor	r1, r2, r1
   17dbc:	lsl	r2, r0, #1
   17dc0:	orr	r2, r2, r1, lsr #31
   17dc4:	lsl	r1, r1, #1
   17dc8:	orr	r0, r1, r0, lsr #31
   17dcc:	ldr	r1, [sp, #280]	; 0x118
   17dd0:	adds	r1, r3, r1
   17dd4:	ldr	r3, [sp, #276]	; 0x114
   17dd8:	adc	r3, r6, r3
   17ddc:	adds	sl, r1, r0
   17de0:	ldr	r1, [sp, #88]	; 0x58
   17de4:	adc	ip, r3, r2
   17de8:	ldr	r3, [sp, #48]	; 0x30
   17dec:	adds	r4, r9, r1
   17df0:	ldr	r1, [sp, #104]	; 0x68
   17df4:	str	r4, [sp, #20]
   17df8:	adc	r6, r7, r1
   17dfc:	ldr	r1, [sp, #56]	; 0x38
   17e00:	str	r6, [sp, #12]
   17e04:	eor	r7, r3, r1
   17e08:	ldr	r1, [sp, #60]	; 0x3c
   17e0c:	ldr	r3, [sp, #52]	; 0x34
   17e10:	eor	r5, r3, r1
   17e14:	lsr	r1, r5, #16
   17e18:	lsl	r5, r5, #16
   17e1c:	orr	r1, r1, r7, lsl #16
   17e20:	orr	r7, r5, r7, lsr #16
   17e24:	eor	r5, r7, ip
   17e28:	eor	r3, r1, sl
   17e2c:	str	r1, [fp, #-192]	; 0xffffff40
   17e30:	str	r7, [fp, #-188]	; 0xffffff44
   17e34:	str	r5, [sp, #60]	; 0x3c
   17e38:	adds	r5, r5, r4
   17e3c:	str	r3, [sp, #56]	; 0x38
   17e40:	adc	r4, r3, r6
   17e44:	eor	r0, r5, r0
   17e48:	str	r5, [sp, #108]	; 0x6c
   17e4c:	lsl	r5, r0, #8
   17e50:	eor	r2, r4, r2
   17e54:	lsr	r0, r0, #24
   17e58:	str	r4, [sp, #112]	; 0x70
   17e5c:	orr	r4, r0, r2, lsl #8
   17e60:	ldr	r0, [sp, #256]	; 0x100
   17e64:	orr	r5, r5, r2, lsr #24
   17e68:	ldr	r2, [sp, #252]	; 0xfc
   17e6c:	str	r4, [sp, #104]	; 0x68
   17e70:	str	r5, [sp, #88]	; 0x58
   17e74:	adds	r0, sl, r0
   17e78:	adc	r2, ip, r2
   17e7c:	adds	r3, r0, r4
   17e80:	ldr	r0, [sp, #288]	; 0x120
   17e84:	adc	r6, r2, r5
   17e88:	ldr	r2, [sp, #284]	; 0x11c
   17e8c:	str	r3, [sp, #52]	; 0x34
   17e90:	str	r6, [sp, #48]	; 0x30
   17e94:	adds	r0, r3, r0
   17e98:	adc	r2, r6, r2
   17e9c:	adds	r0, r0, lr
   17ea0:	str	r0, [sp, #92]	; 0x5c
   17ea4:	adc	r0, r2, r8
   17ea8:	str	r0, [sp, #80]	; 0x50
   17eac:	ldr	r0, [sp, #72]	; 0x48
   17eb0:	adds	sl, r1, r0
   17eb4:	ldr	r0, [sp, #76]	; 0x4c
   17eb8:	str	sl, [fp, #-224]	; 0xffffff20
   17ebc:	adc	r9, r7, r0
   17ec0:	ldr	r0, [sp, #64]	; 0x40
   17ec4:	ldr	r7, [sp, #100]	; 0x64
   17ec8:	str	r9, [fp, #-220]	; 0xffffff24
   17ecc:	eor	r1, r9, r0
   17ed0:	ldr	r0, [sp, #68]	; 0x44
   17ed4:	lsl	r3, r1, #1
   17ed8:	eor	r2, sl, r0
   17edc:	ldr	r0, [sp, #264]	; 0x108
   17ee0:	orr	r3, r3, r2, lsr #31
   17ee4:	lsl	r2, r2, #1
   17ee8:	orr	r1, r2, r1, lsr #31
   17eec:	ldr	r2, [sp, #84]	; 0x54
   17ef0:	str	r3, [fp, #-252]	; 0xffffff04
   17ef4:	str	r1, [fp, #-256]	; 0xffffff00
   17ef8:	adds	r2, r2, r0
   17efc:	ldr	r0, [sp, #260]	; 0x104
   17f00:	adc	r6, r7, r0
   17f04:	ldr	r0, [sp, #148]	; 0x94
   17f08:	adds	r4, r2, r1
   17f0c:	ldr	r7, [sp, #132]	; 0x84
   17f10:	ldr	r2, [sp, #36]	; 0x24
   17f14:	adc	r8, r6, r3
   17f18:	ldr	r6, [sp, #44]	; 0x2c
   17f1c:	str	r0, [fp, #-180]	; 0xffffff4c
   17f20:	ldr	r0, [sp, #136]	; 0x88
   17f24:	str	r0, [fp, #-184]	; 0xffffff48
   17f28:	ldr	r0, [sp, #128]	; 0x80
   17f2c:	str	r7, [fp, #-212]	; 0xffffff2c
   17f30:	str	r0, [fp, #-216]	; 0xffffff28
   17f34:	str	r2, [fp, #-172]	; 0xffffff54
   17f38:	eor	r2, r8, r2
   17f3c:	str	r6, [fp, #-176]	; 0xffffff50
   17f40:	eor	r6, r4, r6
   17f44:	adds	lr, r2, r0
   17f48:	adc	ip, r6, r7
   17f4c:	eor	r1, lr, r1
   17f50:	lsl	r5, r1, #8
   17f54:	eor	r3, ip, r3
   17f58:	lsr	r1, r1, #24
   17f5c:	orr	r0, r1, r3, lsl #8
   17f60:	ldr	r1, [sp, #228]	; 0xe4
   17f64:	orr	r5, r5, r3, lsr #24
   17f68:	ldr	r3, [sp, #232]	; 0xe8
   17f6c:	str	r0, [sp, #76]	; 0x4c
   17f70:	str	r5, [sp, #72]	; 0x48
   17f74:	adds	r1, r4, r1
   17f78:	adc	r3, r8, r3
   17f7c:	adds	r7, r1, r0
   17f80:	adc	r1, r3, r5
   17f84:	eor	r2, r7, r2
   17f88:	str	r7, [sp, #84]	; 0x54
   17f8c:	ldr	r7, [sp, #180]	; 0xb4
   17f90:	str	r1, [sp, #100]	; 0x64
   17f94:	lsl	r3, r2, #16
   17f98:	eor	r1, r1, r6
   17f9c:	lsr	r2, r2, #16
   17fa0:	orr	r3, r3, r1, lsr #16
   17fa4:	orr	r1, r2, r1, lsl #16
   17fa8:	ldr	r2, [sp, #20]
   17fac:	adds	r8, r1, lr
   17fb0:	str	r1, [sp, #36]	; 0x24
   17fb4:	ldr	r1, [sp, #12]
   17fb8:	ldr	lr, [sp, #184]	; 0xb8
   17fbc:	str	r3, [sp, #28]
   17fc0:	adc	r0, r3, ip
   17fc4:	ldr	r3, [sp, #136]	; 0x88
   17fc8:	str	r0, [sp, #8]
   17fcc:	ldr	r0, [sp, #32]
   17fd0:	eor	r0, r1, r0
   17fd4:	ldr	r1, [sp, #40]	; 0x28
   17fd8:	eor	r1, r2, r1
   17fdc:	lsl	r2, r0, #1
   17fe0:	orr	r4, r2, r1, lsr #31
   17fe4:	lsl	r1, r1, #1
   17fe8:	ldr	r2, [sp, #124]	; 0x7c
   17fec:	orr	r0, r1, r0, lsr #31
   17ff0:	ldr	r1, [sp, #96]	; 0x60
   17ff4:	adds	r1, r1, lr
   17ff8:	adc	r2, r2, r7
   17ffc:	adds	r1, r1, r0
   18000:	adc	r6, r2, r4
   18004:	ldr	r2, [sp, #148]	; 0x94
   18008:	eor	r3, r1, r3
   1800c:	eor	ip, r6, r2
   18010:	adds	r5, ip, sl
   18014:	mov	sl, r8
   18018:	adc	r2, r3, r9
   1801c:	eor	r0, r5, r0
   18020:	str	r5, [sp, #64]	; 0x40
   18024:	ldr	r9, [sp, #8]
   18028:	lsl	r5, r0, #8
   1802c:	eor	r4, r2, r4
   18030:	lsr	r0, r0, #24
   18034:	str	r2, [sp, #68]	; 0x44
   18038:	orr	r5, r5, r4, lsr #24
   1803c:	orr	r4, r0, r4, lsl #8
   18040:	ldr	r0, [sp, #224]	; 0xe0
   18044:	str	r5, [sp, #44]	; 0x2c
   18048:	str	r4, [sp, #148]	; 0x94
   1804c:	adds	r0, r1, r0
   18050:	ldr	r1, [sp, #220]	; 0xdc
   18054:	adc	r1, r6, r1
   18058:	adds	r6, r0, r4
   1805c:	adc	r0, r1, r5
   18060:	eor	r2, r6, ip
   18064:	ldr	r5, [sp, #80]	; 0x50
   18068:	str	r6, [sp, #20]
   1806c:	str	r0, [sp, #96]	; 0x60
   18070:	lsr	r1, r2, #16
   18074:	eor	r0, r0, r3
   18078:	lsl	r2, r2, #16
   1807c:	orr	r2, r2, r0, lsr #16
   18080:	orr	r1, r1, r0, lsl #16
   18084:	ldr	r0, [sp, #152]	; 0x98
   18088:	str	r2, [sp, #40]	; 0x28
   1808c:	str	r1, [sp, #32]
   18090:	eor	ip, r5, r2
   18094:	ldr	r2, [sp, #92]	; 0x5c
   18098:	adds	r8, ip, r8
   1809c:	str	r0, [fp, #-164]	; 0xffffff5c
   180a0:	ldr	r0, [sp, #156]	; 0x9c
   180a4:	eor	r3, r2, r1
   180a8:	adc	r6, r3, r9
   180ac:	str	r0, [fp, #-168]	; 0xffffff58
   180b0:	ldr	r0, [sp, #140]	; 0x8c
   180b4:	str	r0, [fp, #-208]	; 0xffffff30
   180b8:	ldr	r0, [sp, #144]	; 0x90
   180bc:	str	r0, [fp, #-204]	; 0xffffff34
   180c0:	ldr	r0, [sp, #16]
   180c4:	str	r0, [fp, #-244]	; 0xffffff0c
   180c8:	eor	r1, r6, r0
   180cc:	ldr	r0, [sp, #24]
   180d0:	str	r0, [fp, #-248]	; 0xffffff08
   180d4:	eor	r0, r8, r0
   180d8:	lsl	r4, r0, #8
   180dc:	lsr	r0, r0, #24
   180e0:	orr	r4, r4, r1, lsr #24
   180e4:	orr	r0, r0, r1, lsl #8
   180e8:	adds	r1, r2, lr
   180ec:	adc	r2, r5, r7
   180f0:	adds	r7, r1, r0
   180f4:	ldr	r5, [sp, #52]	; 0x34
   180f8:	adc	r1, r2, r4
   180fc:	eor	r2, r7, ip
   18100:	str	r7, [sp, #80]	; 0x50
   18104:	ldr	r7, [sp, #120]	; 0x78
   18108:	str	r1, [sp, #92]	; 0x5c
   1810c:	eor	r1, r1, r3
   18110:	lsl	r3, r2, #16
   18114:	lsr	r2, r2, #16
   18118:	orr	r3, r3, r1, lsr #16
   1811c:	orr	r1, r2, r1, lsl #16
   18120:	adds	r2, r1, r8
   18124:	str	r1, [sp, #136]	; 0x88
   18128:	str	r3, [sp, #124]	; 0x7c
   1812c:	adc	r1, r3, r6
   18130:	str	r2, [sp, #128]	; 0x80
   18134:	eor	r0, r2, r0
   18138:	ldr	r3, [sp, #116]	; 0x74
   1813c:	str	r1, [sp, #132]	; 0x84
   18140:	eor	r1, r1, r4
   18144:	lsl	r2, r1, #1
   18148:	orr	r8, r2, r0, lsr #31
   1814c:	lsl	r0, r0, #1
   18150:	orr	lr, r0, r1, lsr #31
   18154:	ldr	r0, [sp, #72]	; 0x48
   18158:	ldr	r1, [sp, #76]	; 0x4c
   1815c:	str	r8, [sp, #16]
   18160:	str	lr, [sp, #24]
   18164:	eor	r0, r9, r0
   18168:	eor	r1, sl, r1
   1816c:	lsl	r2, r0, #1
   18170:	orr	r2, r2, r1, lsr #31
   18174:	lsl	r1, r1, #1
   18178:	orr	r0, r1, r0, lsr #31
   1817c:	ldr	r1, [sp, #228]	; 0xe4
   18180:	adds	r1, r3, r1
   18184:	ldr	r3, [sp, #232]	; 0xe8
   18188:	adc	r3, r7, r3
   1818c:	adds	r9, r1, r0
   18190:	ldr	r1, [sp, #64]	; 0x40
   18194:	ldr	r7, [sp, #40]	; 0x28
   18198:	adc	r6, r3, r2
   1819c:	ldr	r3, [sp, #32]
   181a0:	adds	r1, r3, r1
   181a4:	ldr	r3, [sp, #68]	; 0x44
   181a8:	str	r1, [sp, #8]
   181ac:	adc	sl, r7, r3
   181b0:	ldr	r3, [sp, #56]	; 0x38
   181b4:	ldr	r7, [sp, #48]	; 0x30
   181b8:	eor	r7, r7, r3
   181bc:	ldr	r3, [sp, #60]	; 0x3c
   181c0:	eor	r5, r5, r3
   181c4:	lsr	r4, r5, #16
   181c8:	lsl	r5, r5, #16
   181cc:	orr	r5, r5, r7, lsr #16
   181d0:	orr	ip, r4, r7, lsl #16
   181d4:	eor	r3, r6, r5
   181d8:	eor	r4, r9, ip
   181dc:	adds	r7, r3, r1
   181e0:	str	r3, [sp, #116]	; 0x74
   181e4:	ldr	r1, [sp, #172]	; 0xac
   181e8:	str	r4, [sp, #60]	; 0x3c
   181ec:	adc	r3, r4, sl
   181f0:	eor	r0, r7, r0
   181f4:	str	r7, [sp, #72]	; 0x48
   181f8:	lsl	r7, r0, #8
   181fc:	eor	r2, r3, r2
   18200:	lsr	r0, r0, #24
   18204:	str	r3, [sp, #76]	; 0x4c
   18208:	orr	r3, r7, r2, lsr #24
   1820c:	orr	r2, r0, r2, lsl #8
   18210:	ldr	r0, [sp, #176]	; 0xb0
   18214:	str	r2, [sp, #68]	; 0x44
   18218:	str	r3, [sp, #64]	; 0x40
   1821c:	adds	r0, r9, r0
   18220:	adc	r1, r6, r1
   18224:	adds	r2, r0, r2
   18228:	ldr	r0, [sp, #240]	; 0xf0
   1822c:	adc	r3, r1, r3
   18230:	ldr	r1, [sp, #236]	; 0xec
   18234:	str	r2, [sp, #40]	; 0x28
   18238:	str	r3, [sp, #32]
   1823c:	adds	r0, lr, r0
   18240:	adc	r1, r8, r1
   18244:	adds	r0, r0, r2
   18248:	ldr	r2, [sp, #20]
   1824c:	str	r0, [sp, #120]	; 0x78
   18250:	adc	r0, r1, r3
   18254:	str	r0, [sp, #12]
   18258:	ldr	r0, [sp, #108]	; 0x6c
   1825c:	adds	lr, ip, r0
   18260:	ldr	r0, [sp, #112]	; 0x70
   18264:	str	lr, [fp, #-200]	; 0xffffff38
   18268:	adc	r9, r5, r0
   1826c:	ldr	r0, [sp, #88]	; 0x58
   18270:	str	r9, [fp, #-196]	; 0xffffff3c
   18274:	eor	r1, r9, r0
   18278:	ldr	r0, [sp, #104]	; 0x68
   1827c:	lsl	r5, r1, #1
   18280:	eor	r4, lr, r0
   18284:	ldr	r0, [sp, #216]	; 0xd8
   18288:	orr	r5, r5, r4, lsr #31
   1828c:	lsl	r4, r4, #1
   18290:	orr	r1, r4, r1, lsr #31
   18294:	str	r5, [fp, #-236]	; 0xffffff14
   18298:	str	r1, [fp, #-240]	; 0xffffff10
   1829c:	adds	r4, r2, r0
   182a0:	ldr	r0, [sp, #212]	; 0xd4
   182a4:	ldr	r2, [sp, #96]	; 0x60
   182a8:	adc	r6, r2, r0
   182ac:	ldr	r0, [sp, #28]
   182b0:	adds	r4, r4, r1
   182b4:	ldr	r2, [sp, #144]	; 0x90
   182b8:	adc	r6, r6, r5
   182bc:	eor	r8, r0, r6
   182c0:	ldr	r0, [sp, #36]	; 0x24
   182c4:	eor	r7, r0, r4
   182c8:	ldr	r0, [sp, #140]	; 0x8c
   182cc:	adds	ip, r8, r0
   182d0:	adc	r2, r7, r2
   182d4:	eor	r1, ip, r1
   182d8:	lsl	r3, r1, #8
   182dc:	eor	r5, r2, r5
   182e0:	lsr	r1, r1, #24
   182e4:	orr	r0, r3, r5, lsr #24
   182e8:	orr	r5, r1, r5, lsl #8
   182ec:	ldr	r1, [sp, #208]	; 0xd0
   182f0:	ldr	r3, [sp, #204]	; 0xcc
   182f4:	str	r0, [sp, #104]	; 0x68
   182f8:	str	r5, [sp, #112]	; 0x70
   182fc:	adds	r1, r4, r1
   18300:	adc	r4, r6, r3
   18304:	adds	r3, r1, r5
   18308:	adc	r1, r4, r0
   1830c:	eor	r4, r3, r8
   18310:	str	r3, [sp, #96]	; 0x60
   18314:	str	r1, [sp, #108]	; 0x6c
   18318:	lsl	r6, r4, #16
   1831c:	eor	r1, r1, r7
   18320:	lsr	r4, r4, #16
   18324:	orr	r3, r6, r1, lsr #16
   18328:	orr	r1, r4, r1, lsl #16
   1832c:	ldr	r4, [sp, #292]	; 0x124
   18330:	adds	ip, r1, ip
   18334:	str	r1, [sp, #56]	; 0x38
   18338:	ldr	r1, [sp, #148]	; 0x94
   1833c:	str	r3, [sp, #48]	; 0x30
   18340:	adc	r0, r3, r2
   18344:	ldr	r2, [sp, #8]
   18348:	ldr	r3, [sp, #84]	; 0x54
   1834c:	str	ip, [sp]
   18350:	str	r0, [sp, #4]
   18354:	ldr	r0, [sp, #44]	; 0x2c
   18358:	eor	r1, r2, r1
   1835c:	eor	r0, sl, r0
   18360:	lsl	r2, r0, #1
   18364:	orr	r7, r2, r1, lsr #31
   18368:	lsl	r1, r1, #1
   1836c:	ldr	r2, [sp, #164]	; 0xa4
   18370:	orr	r0, r1, r0, lsr #31
   18374:	ldr	r1, [sp, #168]	; 0xa8
   18378:	adds	r1, r0, r1
   1837c:	adc	r2, r7, r2
   18380:	adds	r1, r1, r3
   18384:	ldr	r3, [sp, #100]	; 0x64
   18388:	adc	r2, r2, r3
   1838c:	ldr	r3, [sp, #152]	; 0x98
   18390:	eor	sl, r2, r3
   18394:	ldr	r3, [sp, #156]	; 0x9c
   18398:	adds	r6, sl, lr
   1839c:	str	r6, [sp, #88]	; 0x58
   183a0:	eor	r3, r1, r3
   183a4:	adc	r5, r3, r9
   183a8:	str	r5, [sp, #100]	; 0x64
   183ac:	stm	r4, {r0, r7}
   183b0:	eor	r0, r6, r0
   183b4:	eor	r9, r5, r7
   183b8:	lsl	r7, r0, #8
   183bc:	lsr	r0, r0, #24
   183c0:	ldr	r4, [sp, #12]
   183c4:	ldr	r6, [sp, #4]
   183c8:	orr	r5, r0, r9, lsl #8
   183cc:	ldr	r0, [sp, #192]	; 0xc0
   183d0:	orr	r7, r7, r9, lsr #24
   183d4:	str	r5, [sp, #52]	; 0x34
   183d8:	str	r7, [sp, #44]	; 0x2c
   183dc:	adds	r0, r1, r0
   183e0:	ldr	r1, [sp, #188]	; 0xbc
   183e4:	adc	r1, r2, r1
   183e8:	adds	r2, r0, r5
   183ec:	ldr	r5, [sp, #120]	; 0x78
   183f0:	adc	r0, r1, r7
   183f4:	str	r2, [sp, #20]
   183f8:	str	r0, [sp, #28]
   183fc:	eor	r0, r0, r3
   18400:	eor	r3, r2, sl
   18404:	lsr	r1, r3, #16
   18408:	lsl	r3, r3, #16
   1840c:	orr	sl, r3, r0, lsr #16
   18410:	orr	r9, r1, r0, lsl #16
   18414:	ldr	r0, [sp, #16]
   18418:	eor	r3, r4, sl
   1841c:	eor	r2, r5, r9
   18420:	adds	r8, r3, ip
   18424:	adc	lr, r2, r6
   18428:	eor	r1, lr, r0
   1842c:	ldr	r0, [sp, #24]
   18430:	eor	r0, r8, r0
   18434:	lsl	r7, r0, #8
   18438:	lsr	r0, r0, #24
   1843c:	orr	r7, r7, r1, lsr #24
   18440:	orr	r0, r0, r1, lsl #8
   18444:	ldr	r1, [sp, #280]	; 0x118
   18448:	adds	r1, r5, r1
   1844c:	ldr	r5, [sp, #276]	; 0x114
   18450:	adc	ip, r4, r5
   18454:	adds	r5, r1, r0
   18458:	adc	r1, ip, r7
   1845c:	str	r5, [sp, #120]	; 0x78
   18460:	eor	ip, r1, r2
   18464:	eor	r2, r5, r3
   18468:	str	r1, [sp, #140]	; 0x8c
   1846c:	lsl	r3, r2, #16
   18470:	lsr	r2, r2, #16
   18474:	orr	r1, r2, ip, lsl #16
   18478:	orr	r3, r3, ip, lsr #16
   1847c:	adds	r2, r1, r8
   18480:	str	r1, [sp, #156]	; 0x9c
   18484:	str	r3, [sp, #152]	; 0x98
   18488:	adc	r1, r3, lr
   1848c:	str	r2, [sp, #144]	; 0x90
   18490:	eor	r0, r2, r0
   18494:	ldr	r3, [sp, #80]	; 0x50
   18498:	str	r1, [sp, #148]	; 0x94
   1849c:	eor	r1, r1, r7
   184a0:	ldr	r7, [sp, #92]	; 0x5c
   184a4:	lsl	r2, r1, #1
   184a8:	orr	r8, r2, r0, lsr #31
   184ac:	lsl	r0, r0, #1
   184b0:	ldr	r2, [sp]
   184b4:	orr	lr, r0, r1, lsr #31
   184b8:	ldr	r0, [sp, #104]	; 0x68
   184bc:	ldr	r1, [sp, #112]	; 0x70
   184c0:	str	r8, [sp, #24]
   184c4:	str	lr, [sp, #36]	; 0x24
   184c8:	eor	r0, r6, r0
   184cc:	eor	r1, r2, r1
   184d0:	lsl	r2, r0, #1
   184d4:	orr	r2, r2, r1, lsr #31
   184d8:	lsl	r1, r1, #1
   184dc:	orr	r0, r1, r0, lsr #31
   184e0:	ldr	r1, [sp, #272]	; 0x110
   184e4:	adds	r1, r3, r1
   184e8:	ldr	r3, [sp, #268]	; 0x10c
   184ec:	adc	r3, r7, r3
   184f0:	adds	ip, r1, r0
   184f4:	ldr	r1, [sp, #88]	; 0x58
   184f8:	adc	r7, r3, r2
   184fc:	ldr	r3, [sp, #32]
   18500:	adds	r4, r9, r1
   18504:	ldr	r1, [sp, #100]	; 0x64
   18508:	str	r4, [sp, #16]
   1850c:	adc	r9, sl, r1
   18510:	ldr	r1, [sp, #60]	; 0x3c
   18514:	ldr	sl, [sp, #124]	; 0x7c
   18518:	str	r9, [sp, #12]
   1851c:	eor	r6, r3, r1
   18520:	ldr	r1, [sp, #116]	; 0x74
   18524:	ldr	r3, [sp, #40]	; 0x28
   18528:	eor	r5, r3, r1
   1852c:	lsr	r3, r5, #16
   18530:	lsl	r5, r5, #16
   18534:	orr	r3, r3, r6, lsl #16
   18538:	orr	r6, r5, r6, lsr #16
   1853c:	eor	r5, r6, r7
   18540:	eor	r1, r3, ip
   18544:	str	r3, [fp, #-192]	; 0xffffff40
   18548:	str	r6, [fp, #-188]	; 0xffffff44
   1854c:	str	r5, [sp, #92]	; 0x5c
   18550:	adds	r5, r5, r4
   18554:	str	r1, [sp, #88]	; 0x58
   18558:	adc	r4, r1, r9
   1855c:	eor	r0, r5, r0
   18560:	str	r5, [sp, #112]	; 0x70
   18564:	ldr	r1, [sp, #244]	; 0xf4
   18568:	lsl	r5, r0, #8
   1856c:	eor	r2, r4, r2
   18570:	lsr	r0, r0, #24
   18574:	str	r4, [sp, #116]	; 0x74
   18578:	ldr	r4, [sp, #48]	; 0x30
   1857c:	orr	r5, r5, r2, lsr #24
   18580:	orr	r2, r0, r2, lsl #8
   18584:	ldr	r0, [sp, #248]	; 0xf8
   18588:	str	r2, [sp, #104]	; 0x68
   1858c:	str	r5, [sp, #100]	; 0x64
   18590:	adds	r0, ip, r0
   18594:	adc	r1, r7, r1
   18598:	adds	r2, r0, r2
   1859c:	ldr	r0, [sp, #216]	; 0xd8
   185a0:	adc	r7, r1, r5
   185a4:	ldr	r1, [sp, #212]	; 0xd4
   185a8:	str	r2, [sp, #84]	; 0x54
   185ac:	str	r7, [sp, #80]	; 0x50
   185b0:	adds	r0, r2, r0
   185b4:	adc	r1, r7, r1
   185b8:	adds	r0, r0, lr
   185bc:	ldr	r7, [sp, #28]
   185c0:	str	r0, [sp, #216]	; 0xd8
   185c4:	adc	r0, r1, r8
   185c8:	str	r0, [sp, #212]	; 0xd4
   185cc:	ldr	r0, [sp, #72]	; 0x48
   185d0:	adds	r9, r3, r0
   185d4:	ldr	r0, [sp, #76]	; 0x4c
   185d8:	str	r9, [fp, #-224]	; 0xffffff20
   185dc:	adc	r8, r6, r0
   185e0:	ldr	r0, [sp, #64]	; 0x40
   185e4:	str	r8, [fp, #-220]	; 0xffffff24
   185e8:	eor	r1, r8, r0
   185ec:	ldr	r0, [sp, #68]	; 0x44
   185f0:	lsl	r3, r1, #1
   185f4:	eor	r2, r9, r0
   185f8:	ldr	r0, [sp, #256]	; 0x100
   185fc:	orr	r3, r3, r2, lsr #31
   18600:	lsl	r2, r2, #1
   18604:	orr	r1, r2, r1, lsr #31
   18608:	ldr	r2, [sp, #20]
   1860c:	str	r3, [fp, #-252]	; 0xffffff04
   18610:	str	r1, [fp, #-256]	; 0xffffff00
   18614:	str	sl, [fp, #-180]	; 0xffffff4c
   18618:	adds	r2, r2, r0
   1861c:	ldr	r0, [sp, #252]	; 0xfc
   18620:	adc	r7, r7, r0
   18624:	ldr	r0, [sp, #136]	; 0x88
   18628:	adds	lr, r2, r1
   1862c:	ldr	r2, [sp, #132]	; 0x84
   18630:	adc	r6, r7, r3
   18634:	eor	r7, r6, r4
   18638:	str	r0, [fp, #-184]	; 0xffffff48
   1863c:	ldr	r0, [sp, #128]	; 0x80
   18640:	str	r2, [fp, #-212]	; 0xffffff2c
   18644:	str	r0, [fp, #-216]	; 0xffffff28
   18648:	str	r4, [fp, #-172]	; 0xffffff54
   1864c:	ldr	r4, [sp, #56]	; 0x38
   18650:	adds	ip, r7, r0
   18654:	eor	r1, ip, r1
   18658:	lsl	r5, r1, #8
   1865c:	lsr	r1, r1, #24
   18660:	str	r4, [fp, #-176]	; 0xffffff50
   18664:	eor	r4, lr, r4
   18668:	adc	r2, r4, r2
   1866c:	eor	r3, r2, r3
   18670:	orr	r0, r1, r3, lsl #8
   18674:	ldr	r1, [sp, #200]	; 0xc8
   18678:	orr	r5, r5, r3, lsr #24
   1867c:	ldr	r3, [sp, #196]	; 0xc4
   18680:	str	r0, [sp, #48]	; 0x30
   18684:	str	r5, [sp, #40]	; 0x28
   18688:	adds	r1, lr, r1
   1868c:	adc	r6, r6, r3
   18690:	adds	r3, r1, r0
   18694:	adc	r1, r6, r5
   18698:	eor	r7, r3, r7
   1869c:	str	r3, [sp, #128]	; 0x80
   186a0:	str	r1, [sp, #132]	; 0x84
   186a4:	lsl	r6, r7, #16
   186a8:	eor	r1, r1, r4
   186ac:	lsr	r7, r7, #16
   186b0:	orr	r3, r6, r1, lsr #16
   186b4:	orr	r1, r7, r1, lsl #16
   186b8:	ldr	r6, [sp, #216]	; 0xd8
   186bc:	adds	lr, r1, ip
   186c0:	str	r1, [sp, #76]	; 0x4c
   186c4:	ldr	r1, [sp, #12]
   186c8:	str	r3, [sp, #72]	; 0x48
   186cc:	adc	r0, r3, r2
   186d0:	ldr	r2, [sp, #16]
   186d4:	ldr	r3, [sp, #108]	; 0x6c
   186d8:	str	lr, [sp, #28]
   186dc:	str	r0, [sp, #32]
   186e0:	ldr	r0, [sp, #44]	; 0x2c
   186e4:	eor	r0, r1, r0
   186e8:	ldr	r1, [sp, #52]	; 0x34
   186ec:	lsl	r7, r0, #1
   186f0:	eor	r2, r2, r1
   186f4:	ldr	r1, [sp, #224]	; 0xe0
   186f8:	orr	r7, r7, r2, lsr #31
   186fc:	lsl	r2, r2, #1
   18700:	orr	r0, r2, r0, lsr #31
   18704:	ldr	r2, [sp, #96]	; 0x60
   18708:	adds	r2, r2, r1
   1870c:	ldr	r1, [sp, #220]	; 0xdc
   18710:	adc	r5, r3, r1
   18714:	ldr	r1, [sp, #136]	; 0x88
   18718:	adds	r2, r2, r0
   1871c:	adc	r5, r5, r7
   18720:	eor	ip, r5, sl
   18724:	eor	r4, r2, r1
   18728:	adds	r1, ip, r9
   1872c:	adc	r3, r4, r8
   18730:	eor	r0, r1, r0
   18734:	str	r1, [sp, #44]	; 0x2c
   18738:	ldr	r1, [sp, #260]	; 0x104
   1873c:	ldr	r8, [sp, #32]
   18740:	str	r3, [sp, #52]	; 0x34
   18744:	eor	r7, r3, r7
   18748:	lsl	r3, r0, #8
   1874c:	lsr	r0, r0, #24
   18750:	orr	r3, r3, r7, lsr #24
   18754:	orr	r7, r0, r7, lsl #8
   18758:	ldr	r0, [sp, #264]	; 0x108
   1875c:	str	r3, [sp, #96]	; 0x60
   18760:	str	r7, [sp, #108]	; 0x6c
   18764:	adds	r0, r2, r0
   18768:	adc	r2, r5, r1
   1876c:	adds	r1, r0, r7
   18770:	adc	r0, r2, r3
   18774:	eor	r2, r1, ip
   18778:	str	r1, [sp, #56]	; 0x38
   1877c:	ldr	r1, [sp, #240]	; 0xf0
   18780:	str	r0, [sp, #60]	; 0x3c
   18784:	lsr	r3, r2, #16
   18788:	eor	r0, r0, r4
   1878c:	lsl	r2, r2, #16
   18790:	orr	sl, r3, r0, lsl #16
   18794:	orr	r9, r2, r0, lsr #16
   18798:	ldr	r0, [sp, #152]	; 0x98
   1879c:	ldr	r2, [sp, #212]	; 0xd4
   187a0:	eor	r3, r6, sl
   187a4:	str	r0, [fp, #-164]	; 0xffffff5c
   187a8:	ldr	r0, [sp, #156]	; 0x9c
   187ac:	eor	ip, r2, r9
   187b0:	adds	r7, ip, lr
   187b4:	adc	r5, r3, r8
   187b8:	str	r0, [fp, #-168]	; 0xffffff58
   187bc:	ldr	r0, [sp, #144]	; 0x90
   187c0:	str	r0, [fp, #-208]	; 0xffffff30
   187c4:	ldr	r0, [sp, #148]	; 0x94
   187c8:	str	r0, [fp, #-204]	; 0xffffff34
   187cc:	ldr	r0, [sp, #24]
   187d0:	str	r0, [fp, #-244]	; 0xffffff0c
   187d4:	eor	r4, r5, r0
   187d8:	ldr	r0, [sp, #36]	; 0x24
   187dc:	str	r0, [fp, #-248]	; 0xffffff08
   187e0:	eor	r0, r7, r0
   187e4:	lsl	lr, r0, #8
   187e8:	lsr	r0, r0, #24
   187ec:	orr	lr, lr, r4, lsr #24
   187f0:	orr	r0, r0, r4, lsl #8
   187f4:	adds	r4, r6, r1
   187f8:	ldr	r1, [sp, #236]	; 0xec
   187fc:	adc	r1, r2, r1
   18800:	adds	r4, r4, r0
   18804:	adc	r1, r1, lr
   18808:	eor	r2, r4, ip
   1880c:	str	r4, [sp, #212]	; 0xd4
   18810:	str	r1, [sp, #216]	; 0xd8
   18814:	eor	r1, r1, r3
   18818:	lsl	r3, r2, #16
   1881c:	lsr	r2, r2, #16
   18820:	orr	r3, r3, r1, lsr #16
   18824:	orr	r1, r2, r1, lsl #16
   18828:	adds	r2, r1, r7
   1882c:	str	r1, [sp, #136]	; 0x88
   18830:	str	r3, [sp, #124]	; 0x7c
   18834:	adc	r1, r3, r5
   18838:	str	r2, [sp, #236]	; 0xec
   1883c:	eor	r0, r2, r0
   18840:	ldr	r3, [sp, #140]	; 0x8c
   18844:	str	r1, [sp, #240]	; 0xf0
   18848:	eor	r1, r1, lr
   1884c:	lsl	r2, r1, #1
   18850:	orr	r2, r2, r0, lsr #31
   18854:	lsl	r0, r0, #1
   18858:	orr	r1, r0, r1, lsr #31
   1885c:	ldr	r0, [sp, #176]	; 0xb0
   18860:	str	r2, [sp, #64]	; 0x40
   18864:	str	r1, [sp, #68]	; 0x44
   18868:	adds	lr, r1, r0
   1886c:	ldr	r0, [sp, #172]	; 0xac
   18870:	ldr	r1, [sp, #48]	; 0x30
   18874:	adc	ip, r2, r0
   18878:	ldr	r0, [sp, #40]	; 0x28
   1887c:	ldr	r2, [sp, #28]
   18880:	eor	r0, r8, r0
   18884:	eor	r1, r2, r1
   18888:	lsl	r2, r0, #1
   1888c:	orr	r4, r2, r1, lsr #31
   18890:	lsl	r1, r1, #1
   18894:	ldr	r2, [sp, #120]	; 0x78
   18898:	orr	r0, r1, r0, lsr #31
   1889c:	ldr	r1, [sp, #256]	; 0x100
   188a0:	adds	r1, r2, r1
   188a4:	ldr	r2, [sp, #252]	; 0xfc
   188a8:	adc	r2, r3, r2
   188ac:	adds	r8, r1, r0
   188b0:	ldr	r3, [sp, #80]	; 0x50
   188b4:	adc	r7, r2, r4
   188b8:	ldr	r2, [sp, #44]	; 0x2c
   188bc:	adds	r1, sl, r2
   188c0:	ldr	r2, [sp, #52]	; 0x34
   188c4:	str	r1, [sp, #44]	; 0x2c
   188c8:	adc	sl, r9, r2
   188cc:	ldr	r2, [sp, #88]	; 0x58
   188d0:	eor	r5, r3, r2
   188d4:	ldr	r2, [sp, #92]	; 0x5c
   188d8:	ldr	r3, [sp, #84]	; 0x54
   188dc:	eor	r6, r3, r2
   188e0:	lsr	r3, r6, #16
   188e4:	lsl	r6, r6, #16
   188e8:	orr	r6, r6, r5, lsr #16
   188ec:	orr	r9, r3, r5, lsl #16
   188f0:	eor	r2, r7, r6
   188f4:	eor	r3, r8, r9
   188f8:	str	r2, [sp, #140]	; 0x8c
   188fc:	adds	r2, r2, r1
   18900:	str	r3, [sp, #120]	; 0x78
   18904:	ldr	r1, [sp, #268]	; 0x10c
   18908:	adc	r5, r3, sl
   1890c:	eor	r0, r2, r0
   18910:	str	r2, [sp, #252]	; 0xfc
   18914:	str	r5, [sp, #256]	; 0x100
   18918:	eor	r4, r5, r4
   1891c:	lsl	r5, r0, #8
   18920:	lsr	r0, r0, #24
   18924:	orr	r3, r0, r4, lsl #8
   18928:	ldr	r0, [sp, #272]	; 0x110
   1892c:	orr	r2, r5, r4, lsr #24
   18930:	ldr	r5, [sp, #148]	; 0x94
   18934:	str	r2, [sp, #88]	; 0x58
   18938:	str	r3, [sp, #92]	; 0x5c
   1893c:	adds	r0, r8, r0
   18940:	adc	r1, r7, r1
   18944:	adds	r0, r0, r3
   18948:	adc	r1, r1, r2
   1894c:	str	r0, [sp, #84]	; 0x54
   18950:	adds	r0, lr, r0
   18954:	ldr	r2, [sp, #56]	; 0x38
   18958:	str	r0, [sp, #52]	; 0x34
   1895c:	adc	r0, ip, r1
   18960:	str	r1, [sp, #80]	; 0x50
   18964:	str	r0, [sp, #48]	; 0x30
   18968:	ldr	r0, [sp, #112]	; 0x70
   1896c:	adds	lr, r9, r0
   18970:	ldr	r0, [sp, #116]	; 0x74
   18974:	str	lr, [fp, #-200]	; 0xffffff38
   18978:	adc	r8, r6, r0
   1897c:	ldr	r0, [sp, #100]	; 0x64
   18980:	str	r8, [fp, #-196]	; 0xffffff3c
   18984:	eor	r1, r8, r0
   18988:	ldr	r0, [sp, #104]	; 0x68
   1898c:	lsl	r6, r1, #1
   18990:	eor	r3, lr, r0
   18994:	ldr	r0, [sp, #280]	; 0x118
   18998:	orr	r6, r6, r3, lsr #31
   1899c:	lsl	r3, r3, #1
   189a0:	orr	r1, r3, r1, lsr #31
   189a4:	str	r6, [fp, #-236]	; 0xffffff14
   189a8:	str	r1, [fp, #-240]	; 0xffffff10
   189ac:	adds	r3, r2, r0
   189b0:	ldr	r0, [sp, #276]	; 0x114
   189b4:	ldr	r2, [sp, #60]	; 0x3c
   189b8:	adc	r2, r2, r0
   189bc:	ldr	r0, [sp, #72]	; 0x48
   189c0:	adds	r3, r3, r1
   189c4:	adc	r2, r2, r6
   189c8:	eor	r4, r0, r2
   189cc:	ldr	r0, [sp, #76]	; 0x4c
   189d0:	eor	r7, r0, r3
   189d4:	ldr	r0, [sp, #144]	; 0x90
   189d8:	adds	r0, r4, r0
   189dc:	adc	ip, r7, r5
   189e0:	eor	r1, r0, r1
   189e4:	lsl	r9, r1, #8
   189e8:	eor	r6, ip, r6
   189ec:	lsr	r1, r1, #24
   189f0:	orr	r5, r9, r6, lsr #24
   189f4:	orr	r6, r1, r6, lsl #8
   189f8:	ldr	r1, [sp, #200]	; 0xc8
   189fc:	str	r6, [sp, #176]	; 0xb0
   18a00:	str	r5, [sp, #172]	; 0xac
   18a04:	adds	r1, r3, r1
   18a08:	ldr	r3, [sp, #196]	; 0xc4
   18a0c:	adc	r2, r2, r3
   18a10:	adds	r3, r1, r6
   18a14:	ldr	r6, [sp, #156]	; 0x9c
   18a18:	adc	r1, r2, r5
   18a1c:	eor	r2, r3, r4
   18a20:	str	r3, [sp, #268]	; 0x10c
   18a24:	ldr	r4, [sp, #292]	; 0x124
   18a28:	str	r1, [sp, #272]	; 0x110
   18a2c:	eor	r1, r1, r7
   18a30:	lsl	r3, r2, #16
   18a34:	lsr	r2, r2, #16
   18a38:	ldr	r7, [sp, #128]	; 0x80
   18a3c:	orr	r3, r3, r1, lsr #16
   18a40:	orr	r1, r2, r1, lsl #16
   18a44:	ldr	r2, [sp, #44]	; 0x2c
   18a48:	adds	r9, r1, r0
   18a4c:	ldr	r0, [sp, #96]	; 0x60
   18a50:	str	r1, [sp, #276]	; 0x114
   18a54:	ldr	r1, [sp, #108]	; 0x6c
   18a58:	str	r3, [sp, #280]	; 0x118
   18a5c:	adc	ip, r3, ip
   18a60:	str	r9, [sp, #148]	; 0x94
   18a64:	str	ip, [sp, #144]	; 0x90
   18a68:	eor	r0, sl, r0
   18a6c:	eor	r1, r2, r1
   18a70:	lsl	r2, r0, #1
   18a74:	orr	r3, r2, r1, lsr #31
   18a78:	lsl	r1, r1, #1
   18a7c:	orr	r2, r1, r0, lsr #31
   18a80:	ldr	r0, [sp, #264]	; 0x108
   18a84:	ldr	r1, [sp, #260]	; 0x104
   18a88:	strd	r2, [r4]
   18a8c:	adds	r0, r2, r0
   18a90:	adc	r1, r3, r1
   18a94:	adds	r0, r0, r7
   18a98:	ldr	r7, [sp, #132]	; 0x84
   18a9c:	eor	r6, r0, r6
   18aa0:	adc	r1, r1, r7
   18aa4:	ldr	r7, [sp, #152]	; 0x98
   18aa8:	eor	sl, r1, r7
   18aac:	adds	r7, sl, lr
   18ab0:	adc	r5, r6, r8
   18ab4:	eor	r2, r7, r2
   18ab8:	str	r7, [sp, #260]	; 0x104
   18abc:	str	r5, [sp, #264]	; 0x108
   18ac0:	eor	r5, r5, r3
   18ac4:	lsl	r3, r2, #8
   18ac8:	lsr	r2, r2, #24
   18acc:	orr	r7, r2, r5, lsl #8
   18ad0:	ldr	r2, [sp, #168]	; 0xa8
   18ad4:	orr	r3, r3, r5, lsr #24
   18ad8:	str	r7, [sp, #132]	; 0x84
   18adc:	str	r3, [sp, #128]	; 0x80
   18ae0:	adds	r0, r0, r2
   18ae4:	ldr	r2, [sp, #164]	; 0xa4
   18ae8:	adc	r1, r1, r2
   18aec:	adds	r2, r0, r7
   18af0:	ldr	r7, [sp, #52]	; 0x34
   18af4:	adc	r0, r1, r3
   18af8:	eor	r1, r2, sl
   18afc:	str	r2, [sp, #196]	; 0xc4
   18b00:	str	r0, [sp, #200]	; 0xc8
   18b04:	eor	r0, r0, r6
   18b08:	ldr	r6, [sp, #48]	; 0x30
   18b0c:	lsr	r2, r1, #16
   18b10:	lsl	r1, r1, #16
   18b14:	orr	r2, r2, r0, lsl #16
   18b18:	orr	r0, r1, r0, lsr #16
   18b1c:	str	r2, [sp, #112]	; 0x70
   18b20:	eor	r1, r7, r2
   18b24:	ldr	r2, [sp, #64]	; 0x40
   18b28:	str	r0, [sp, #116]	; 0x74
   18b2c:	eor	r0, r6, r0
   18b30:	adds	r5, r0, r9
   18b34:	adc	r3, r1, ip
   18b38:	str	r5, [sp, #104]	; 0x68
   18b3c:	str	r3, [sp, #108]	; 0x6c
   18b40:	eor	r2, r3, r2
   18b44:	ldr	r3, [sp, #68]	; 0x44
   18b48:	eor	r4, r5, r3
   18b4c:	lsl	r3, r4, #8
   18b50:	lsr	r4, r4, #24
   18b54:	orr	r5, r3, r2, lsr #24
   18b58:	orr	r8, r4, r2, lsl #8
   18b5c:	ldr	r2, [sp, #224]	; 0xe0
   18b60:	str	r5, [sp, #100]	; 0x64
   18b64:	adds	r4, r7, r2
   18b68:	ldr	r2, [sp, #220]	; 0xdc
   18b6c:	adc	r3, r6, r2
   18b70:	adds	ip, r4, r8
   18b74:	adc	r7, r3, r5
   18b78:	eor	r0, ip, r0
   18b7c:	ldr	r5, [sp, #84]	; 0x54
   18b80:	str	ip, [sp, #224]	; 0xe0
   18b84:	eor	r4, r7, r1
   18b88:	lsl	r1, r0, #16
   18b8c:	lsr	r0, r0, #16
   18b90:	str	r7, [sp, #220]	; 0xdc
   18b94:	orr	r9, r1, r4, lsr #16
   18b98:	orr	r3, r0, r4, lsl #16
   18b9c:	ldr	r0, [sp, #120]	; 0x78
   18ba0:	ldr	r1, [sp, #80]	; 0x50
   18ba4:	eor	r1, r1, r0
   18ba8:	ldr	r0, [sp, #140]	; 0x8c
   18bac:	eor	r4, r5, r0
   18bb0:	ldr	r0, [sp, #252]	; 0xfc
   18bb4:	lsl	r5, r4, #16
   18bb8:	lsr	r4, r4, #16
   18bbc:	orr	r2, r4, r1, lsl #16
   18bc0:	orr	r6, r5, r1, lsr #16
   18bc4:	str	r6, [fp, #-188]	; 0xffffff44
   18bc8:	str	r2, [fp, #-192]	; 0xffffff40
   18bcc:	str	r2, [sp, #152]	; 0x98
   18bd0:	str	r6, [sp, #156]	; 0x9c
   18bd4:	adds	r5, r2, r0
   18bd8:	ldr	r0, [sp, #256]	; 0x100
   18bdc:	ldr	r2, [sp, #100]	; 0x64
   18be0:	str	r5, [fp, #-224]	; 0xffffff20
   18be4:	adc	lr, r6, r0
   18be8:	ldr	r0, [sp, #88]	; 0x58
   18bec:	str	lr, [fp, #-220]	; 0xffffff24
   18bf0:	eor	r1, lr, r0
   18bf4:	ldr	r0, [sp, #92]	; 0x5c
   18bf8:	lsl	sl, r1, #1
   18bfc:	eor	r0, r5, r0
   18c00:	orr	r4, sl, r0, lsr #31
   18c04:	lsl	r0, r0, #1
   18c08:	ldr	sl, [sp, #124]	; 0x7c
   18c0c:	orr	r0, r0, r1, lsr #31
   18c10:	str	r4, [sp, #168]	; 0xa8
   18c14:	str	r4, [fp, #-252]	; 0xffffff04
   18c18:	ldr	r4, [sp, #136]	; 0x88
   18c1c:	ldr	r1, [sp, #108]	; 0x6c
   18c20:	str	r0, [fp, #-256]	; 0xffffff00
   18c24:	str	r0, [sp, #164]	; 0xa4
   18c28:	ldr	r0, [sp, #240]	; 0xf0
   18c2c:	str	sl, [fp, #-180]	; 0xffffff4c
   18c30:	str	r4, [fp, #-184]	; 0xffffff48
   18c34:	str	r0, [fp, #-212]	; 0xffffff2c
   18c38:	ldr	r0, [sp, #236]	; 0xec
   18c3c:	str	r0, [fp, #-216]	; 0xffffff28
   18c40:	ldr	r0, [sp, #280]	; 0x118
   18c44:	str	r0, [fp, #-172]	; 0xffffff54
   18c48:	ldr	r0, [sp, #276]	; 0x114
   18c4c:	str	r0, [fp, #-176]	; 0xffffff50
   18c50:	ldr	r0, [sp, #104]	; 0x68
   18c54:	str	ip, [fp, #-288]	; 0xfffffee0
   18c58:	str	r7, [fp, #-284]	; 0xfffffee4
   18c5c:	str	r3, [fp, #-168]	; 0xffffff58
   18c60:	str	r9, [fp, #-164]	; 0xffffff5c
   18c64:	adds	r0, r3, r0
   18c68:	ldr	r3, [sp, #272]	; 0x110
   18c6c:	adc	r1, r9, r1
   18c70:	str	r0, [fp, #-208]	; 0xffffff30
   18c74:	eor	r0, r0, r8
   18c78:	str	r1, [fp, #-204]	; 0xffffff34
   18c7c:	eor	r1, r1, r2
   18c80:	lsl	r2, r0, #1
   18c84:	orr	r2, r2, r1, lsr #31
   18c88:	lsl	r1, r1, #1
   18c8c:	orr	r0, r1, r0, lsr #31
   18c90:	ldr	r1, [sp, #112]	; 0x70
   18c94:	str	r2, [fp, #-248]	; 0xffffff08
   18c98:	str	r0, [fp, #-244]	; 0xffffff0c
   18c9c:	ldr	r0, [sp, #260]	; 0x104
   18ca0:	adds	r9, r1, r0
   18ca4:	ldr	r0, [sp, #264]	; 0x108
   18ca8:	ldr	r1, [sp, #116]	; 0x74
   18cac:	adc	ip, r1, r0
   18cb0:	ldr	r0, [sp, #128]	; 0x80
   18cb4:	eor	r1, ip, r0
   18cb8:	ldr	r0, [sp, #132]	; 0x84
   18cbc:	lsl	r6, r1, #1
   18cc0:	eor	r2, r9, r0
   18cc4:	ldr	r0, [sp, #248]	; 0xf8
   18cc8:	orr	r6, r6, r2, lsr #31
   18ccc:	lsl	r2, r2, #1
   18cd0:	orr	r1, r2, r1, lsr #31
   18cd4:	ldr	r2, [sp, #268]	; 0x10c
   18cd8:	adds	r2, r2, r0
   18cdc:	ldr	r0, [sp, #244]	; 0xf4
   18ce0:	adc	r0, r3, r0
   18ce4:	adds	r2, r2, r1
   18ce8:	adc	r0, r0, r6
   18cec:	eor	r7, r2, r4
   18cf0:	eor	r8, r0, sl
   18cf4:	adds	r5, r8, r5
   18cf8:	adc	r3, r7, lr
   18cfc:	eor	r1, r5, r1
   18d00:	lsl	r4, r1, #8
   18d04:	eor	r6, r3, r6
   18d08:	lsr	r1, r1, #24
   18d0c:	orr	r4, r4, r6, lsr #24
   18d10:	orr	r1, r1, r6, lsl #8
   18d14:	ldr	r6, [sp, #192]	; 0xc0
   18d18:	adds	r2, r2, r6
   18d1c:	ldr	r6, [sp, #188]	; 0xbc
   18d20:	adc	r0, r0, r6
   18d24:	adds	r2, r2, r1
   18d28:	str	r2, [sp, #264]	; 0x108
   18d2c:	adc	r0, r0, r4
   18d30:	eor	r2, r2, r8
   18d34:	str	r0, [sp, #260]	; 0x104
   18d38:	lsl	r6, r2, #16
   18d3c:	eor	r0, r0, r7
   18d40:	lsr	r2, r2, #16
   18d44:	orr	r7, r6, r0, lsr #16
   18d48:	orr	r0, r2, r0, lsl #16
   18d4c:	adds	r2, r0, r5
   18d50:	mov	sl, r0
   18d54:	str	r0, [sp, #244]	; 0xf4
   18d58:	ldr	r5, [sp, #152]	; 0x98
   18d5c:	str	r7, [sp, #268]	; 0x10c
   18d60:	adc	r0, r7, r3
   18d64:	eor	r1, r2, r1
   18d68:	str	r2, [sp, #256]	; 0x100
   18d6c:	ldr	r3, [sp, #212]	; 0xd4
   18d70:	str	r0, [sp, #252]	; 0xfc
   18d74:	eor	r0, r0, r4
   18d78:	lsl	r2, r1, #1
   18d7c:	ldr	r4, [sp, #216]	; 0xd8
   18d80:	orr	lr, r2, r0, lsr #31
   18d84:	lsl	r0, r0, #1
   18d88:	ldr	r2, [sp, #148]	; 0x94
   18d8c:	orr	r0, r0, r1, lsr #31
   18d90:	ldr	r1, [sp, #144]	; 0x90
   18d94:	str	lr, [sp, #248]	; 0xf8
   18d98:	str	r0, [sp, #272]	; 0x110
   18d9c:	ldr	r0, [sp, #172]	; 0xac
   18da0:	eor	r0, r1, r0
   18da4:	ldr	r1, [sp, #176]	; 0xb0
   18da8:	eor	r1, r2, r1
   18dac:	lsl	r2, r0, #1
   18db0:	orr	r2, r2, r1, lsr #31
   18db4:	lsl	r1, r1, #1
   18db8:	orr	r0, r1, r0, lsr #31
   18dbc:	ldr	r1, [sp, #228]	; 0xe4
   18dc0:	adds	r1, r3, r1
   18dc4:	ldr	r3, [sp, #232]	; 0xe8
   18dc8:	adc	r3, r4, r3
   18dcc:	ldr	r4, [sp, #156]	; 0x9c
   18dd0:	adds	r1, r1, r0
   18dd4:	adc	r3, r3, r2
   18dd8:	eor	r5, r5, r1
   18ddc:	eor	r4, r4, r3
   18de0:	adds	r9, r4, r9
   18de4:	adc	r8, r5, ip
   18de8:	eor	r0, r9, r0
   18dec:	lsl	r7, r0, #8
   18df0:	eor	r2, r8, r2
   18df4:	lsr	r0, r0, #24
   18df8:	orr	ip, r7, r2, lsr #24
   18dfc:	orr	r0, r0, r2, lsl #8
   18e00:	ldr	r2, [sp, #288]	; 0x120
   18e04:	adds	r1, r1, r2
   18e08:	ldr	r2, [sp, #284]	; 0x11c
   18e0c:	adc	r2, r3, r2
   18e10:	adds	r3, r1, r0
   18e14:	adc	r2, r2, ip
   18e18:	str	r3, [sp, #192]	; 0xc0
   18e1c:	mov	r6, r2
   18e20:	eor	r1, r2, r5
   18e24:	str	r2, [sp, #188]	; 0xbc
   18e28:	eor	r2, r3, r4
   18e2c:	mov	r4, r3
   18e30:	lsl	r3, r2, #16
   18e34:	lsr	r2, r2, #16
   18e38:	str	r6, [fp, #-276]	; 0xfffffeec
   18e3c:	str	r4, [fp, #-280]	; 0xfffffee8
   18e40:	orr	r7, r3, r1, lsr #16
   18e44:	orr	r1, r2, r1, lsl #16
   18e48:	adds	r5, r1, r9
   18e4c:	mov	r9, r1
   18e50:	str	r1, [sp, #232]	; 0xe8
   18e54:	str	r7, [fp, #-188]	; 0xffffff44
   18e58:	str	r7, [sp, #228]	; 0xe4
   18e5c:	adc	r2, r7, r8
   18e60:	eor	r0, r5, r0
   18e64:	str	r9, [fp, #-192]	; 0xffffff40
   18e68:	str	r5, [fp, #-200]	; 0xffffff38
   18e6c:	str	r5, [sp, #216]	; 0xd8
   18e70:	mov	r3, r2
   18e74:	eor	r1, r2, ip
   18e78:	str	r2, [sp, #212]	; 0xd4
   18e7c:	lsl	r2, r0, #1
   18e80:	orr	r2, r2, r1, lsr #31
   18e84:	lsl	r1, r1, #1
   18e88:	str	r3, [fp, #-196]	; 0xffffff3c
   18e8c:	orr	r0, r1, r0, lsr #31
   18e90:	str	r2, [fp, #-240]	; 0xffffff10
   18e94:	ldr	r1, [sp, #272]	; 0x110
   18e98:	str	r2, [sp, #288]	; 0x120
   18e9c:	str	r0, [fp, #-236]	; 0xffffff14
   18ea0:	str	r0, [sp, #284]	; 0x11c
   18ea4:	ldr	r0, [sp, #268]	; 0x10c
   18ea8:	str	sl, [fp, #-184]	; 0xffffff48
   18eac:	str	r0, [fp, #-180]	; 0xffffff4c
   18eb0:	ldr	r0, [sp, #260]	; 0x104
   18eb4:	str	r0, [fp, #-268]	; 0xfffffef4
   18eb8:	ldr	r0, [sp, #264]	; 0x108
   18ebc:	str	r0, [fp, #-272]	; 0xfffffef0
   18ec0:	ldr	r0, [sp, #252]	; 0xfc
   18ec4:	str	r0, [fp, #-220]	; 0xffffff24
   18ec8:	ldr	r0, [sp, #256]	; 0x100
   18ecc:	str	r0, [fp, #-224]	; 0xffffff20
   18ed0:	ldr	r0, [sp, #292]	; 0x124
   18ed4:	str	lr, [r0]
   18ed8:	str	r1, [r0, #4]
   18edc:	ldr	r0, [sp, #208]	; 0xd0
   18ee0:	ldr	r1, [sp, #196]	; 0xc4
   18ee4:	ldr	r2, [sp, #200]	; 0xc8
   18ee8:	ldr	r5, [sp, #164]	; 0xa4
   18eec:	ldr	r7, [sp, #168]	; 0xa8
   18ef0:	adds	r0, r1, r0
   18ef4:	ldr	r1, [sp, #204]	; 0xcc
   18ef8:	adc	r1, r2, r1
   18efc:	ldr	r2, [sp, #280]	; 0x118
   18f00:	adds	r0, r0, r5
   18f04:	adc	r1, r1, r7
   18f08:	eor	r8, r1, r2
   18f0c:	ldr	r2, [sp, #276]	; 0x114
   18f10:	eor	sl, r0, r2
   18f14:	ldr	r2, [sp, #236]	; 0xec
   18f18:	adds	r3, r8, r2
   18f1c:	ldr	r2, [sp, #240]	; 0xf0
   18f20:	adc	ip, sl, r2
   18f24:	eor	r2, r3, r5
   18f28:	eor	r6, ip, r7
   18f2c:	ldr	r7, [sp, #184]	; 0xb8
   18f30:	lsl	r9, r2, #8
   18f34:	lsr	r2, r2, #24
   18f38:	orr	r2, r2, r6, lsl #8
   18f3c:	orr	r9, r9, r6, lsr #24
   18f40:	adds	r0, r0, r7
   18f44:	ldr	r7, [sp, #180]	; 0xb4
   18f48:	adc	r1, r1, r7
   18f4c:	adds	r6, r0, r2
   18f50:	adc	lr, r1, r9
   18f54:	eor	r8, r6, r8
   18f58:	eor	r1, lr, sl
   18f5c:	lsl	r5, r8, #16
   18f60:	orr	r7, r5, r1, lsr #16
   18f64:	lsr	r5, r8, #16
   18f68:	orr	r0, r5, r1, lsl #16
   18f6c:	str	r7, [sp, #280]	; 0x118
   18f70:	str	r7, [fp, #-172]	; 0xffffff54
   18f74:	adds	r3, r0, r3
   18f78:	str	r0, [fp, #-176]	; 0xffffff50
   18f7c:	str	r0, [sp, #292]	; 0x124
   18f80:	ldr	r0, [sp, #160]	; 0xa0
   18f84:	adc	r5, r7, ip
   18f88:	eor	r2, r3, r2
   18f8c:	str	r3, [fp, #-216]	; 0xffffff28
   18f90:	eor	r1, r5, r9
   18f94:	str	r5, [fp, #-212]	; 0xffffff2c
   18f98:	lsl	r4, r1, #1
   18f9c:	orr	r9, r4, r2, lsr #31
   18fa0:	lsl	r2, r2, #1
   18fa4:	orr	sl, r2, r1, lsr #31
   18fa8:	str	r9, [fp, #-252]	; 0xffffff04
   18fac:	str	sl, [fp, #-256]	; 0xffffff00
   18fb0:	str	lr, [fp, #-260]	; 0xfffffefc
   18fb4:	str	r6, [fp, #-264]	; 0xfffffef8
   18fb8:	ldm	r0, {r2, r4, ip}
   18fbc:	ldr	r8, [sp, #220]	; 0xdc
   18fc0:	ldr	r7, [sp, #252]	; 0xfc
   18fc4:	ldr	r1, [r0, #12]
   18fc8:	eor	r4, r8, r4
   18fcc:	eor	r4, r4, r7
   18fd0:	str	r4, [r0, #4]
   18fd4:	mov	r4, r0
   18fd8:	ldr	r0, [sp, #224]	; 0xe0
   18fdc:	eor	r2, r0, r2
   18fe0:	ldr	r0, [sp, #256]	; 0x100
   18fe4:	eor	r2, r2, r0
   18fe8:	ldr	r0, [sp, #188]	; 0xbc
   18fec:	str	r2, [r4]
   18ff0:	eor	r0, r0, r1
   18ff4:	ldr	r1, [sp, #212]	; 0xd4
   18ff8:	eor	r0, r0, r5
   18ffc:	str	r0, [r4, #12]
   19000:	ldr	r0, [sp, #192]	; 0xc0
   19004:	eor	r0, r0, ip
   19008:	eor	r0, r0, r3
   1900c:	ldr	r3, [sp, #216]	; 0xd8
   19010:	str	r0, [r4, #8]
   19014:	ldr	r0, [r4, #28]
   19018:	ldr	r2, [fp, #-204]	; 0xffffff34
   1901c:	eor	r0, lr, r0
   19020:	eor	r0, r0, r1
   19024:	ldr	r1, [fp, #-208]	; 0xffffff30
   19028:	str	r0, [r4, #28]
   1902c:	ldr	r0, [r4, #24]
   19030:	eor	r0, r6, r0
   19034:	eor	r0, r0, r3
   19038:	ldr	r3, [sp, #228]	; 0xe4
   1903c:	str	r0, [r4, #24]
   19040:	ldr	r0, [r4, #36]	; 0x24
   19044:	eor	r0, r9, r0
   19048:	eor	r0, r0, r3
   1904c:	ldr	r3, [sp, #232]	; 0xe8
   19050:	str	r0, [r4, #36]	; 0x24
   19054:	ldr	r0, [r4, #32]
   19058:	eor	r0, sl, r0
   1905c:	eor	r0, r0, r3
   19060:	ldr	r3, [sp, #260]	; 0x104
   19064:	str	r0, [r4, #32]
   19068:	ldr	r0, [r4, #20]
   1906c:	eor	r0, r3, r0
   19070:	ldr	r3, [sp, #288]	; 0x120
   19074:	eor	r0, r0, r2
   19078:	ldr	r2, [sp, #264]	; 0x108
   1907c:	str	r0, [r4, #20]
   19080:	ldr	r0, [r4, #16]
   19084:	eor	r0, r2, r0
   19088:	eor	r0, r0, r1
   1908c:	ldr	r1, [sp, #284]	; 0x11c
   19090:	str	r0, [r4, #16]
   19094:	ldr	r0, [r4, #52]	; 0x34
   19098:	ldr	r2, [fp, #-244]	; 0xffffff0c
   1909c:	eor	r0, r1, r0
   190a0:	ldr	r1, [sp, #280]	; 0x118
   190a4:	eor	r0, r0, r1
   190a8:	ldr	r1, [fp, #-248]	; 0xffffff08
   190ac:	str	r0, [r4, #52]	; 0x34
   190b0:	ldr	r0, [r4, #48]	; 0x30
   190b4:	eor	r0, r3, r0
   190b8:	ldr	r3, [sp, #292]	; 0x124
   190bc:	eor	r0, r0, r3
   190c0:	str	r0, [r4, #48]	; 0x30
   190c4:	ldr	r0, [r4, #44]	; 0x2c
   190c8:	eor	r0, r2, r0
   190cc:	ldr	r2, [sp, #268]	; 0x10c
   190d0:	eor	r0, r0, r2
   190d4:	ldr	r2, [sp, #272]	; 0x110
   190d8:	str	r0, [r4, #44]	; 0x2c
   190dc:	ldr	r0, [r4, #40]	; 0x28
   190e0:	eor	r0, r1, r0
   190e4:	ldr	r1, [sp, #244]	; 0xf4
   190e8:	eor	r0, r0, r1
   190ec:	str	r0, [r4, #40]	; 0x28
   190f0:	ldr	r1, [r4, #60]	; 0x3c
   190f4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   190f8:	ldr	r0, [r4, #56]	; 0x38
   190fc:	eor	r1, r2, r1
   19100:	ldr	r2, [fp, #-168]	; 0xffffff58
   19104:	eor	r1, r1, r3
   19108:	str	r1, [r4, #60]	; 0x3c
   1910c:	ldr	r1, [sp, #248]	; 0xf8
   19110:	eor	r0, r1, r0
   19114:	eor	r0, r0, r2
   19118:	str	r0, [r4, #56]	; 0x38
   1911c:	sub	sp, fp, #28
   19120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19128:	add	fp, sp, #28
   1912c:	sub	sp, sp, #68	; 0x44
   19130:	mov	r9, sp
   19134:	mov	sl, r1
   19138:	mov	r6, r0
   1913c:	vmov.i32	q8, #0	; 0x00000000
   19140:	mov	r0, #48	; 0x30
   19144:	mvn	r7, #0
   19148:	mov	r1, r9
   1914c:	add	r4, r9, #32
   19150:	add	r5, r9, #16
   19154:	cmp	sl, #0
   19158:	vst1.64	{d16-d17}, [r1], r0
   1915c:	vst1.64	{d16-d17}, [r4]
   19160:	vst1.64	{d16-d17}, [r5]
   19164:	vst1.64	{d16-d17}, [r1]
   19168:	beq	19254 <__assert_fail@plt+0x7f4c>
   1916c:	ldr	r0, [r6, #228]	; 0xe4
   19170:	cmp	r0, r2
   19174:	bhi	19254 <__assert_fail@plt+0x7f4c>
   19178:	mov	r0, r6
   1917c:	ldr	r1, [r0, #80]!	; 0x50
   19180:	ldr	r2, [r0, #4]
   19184:	orrs	r1, r1, r2
   19188:	bne	19254 <__assert_fail@plt+0x7f4c>
   1918c:	add	ip, r6, #64	; 0x40
   19190:	ldr	r1, [r6, #224]	; 0xe0
   19194:	add	lr, r6, #64	; 0x40
   19198:	add	r8, r6, #96	; 0x60
   1919c:	ldm	ip, {r2, r3, r7, ip}
   191a0:	adds	r2, r2, r1
   191a4:	adcs	r3, r3, #0
   191a8:	adcs	r7, r7, #0
   191ac:	adc	ip, ip, #0
   191b0:	stm	lr, {r2, r3, r7, ip}
   191b4:	mvn	r3, #0
   191b8:	mov	r7, #0
   191bc:	ldrb	r2, [r6, #232]	; 0xe8
   191c0:	cmp	r2, #0
   191c4:	rsb	r2, r1, #128	; 0x80
   191c8:	strne	r3, [r6, #88]	; 0x58
   191cc:	strne	r3, [r6, #92]	; 0x5c
   191d0:	str	r3, [r0]
   191d4:	str	r3, [r0, #4]
   191d8:	add	r0, r8, r1
   191dc:	mov	r1, #0
   191e0:	bl	11230 <memset@plt>
   191e4:	mov	r0, r6
   191e8:	mov	r1, r8
   191ec:	bl	13880 <__assert_fail@plt+0x2578>
   191f0:	add	r1, r6, #32
   191f4:	mov	r2, #228	; 0xe4
   191f8:	add	r0, r6, #48	; 0x30
   191fc:	vld1.64	{d16-d17}, [r1]
   19200:	add	r1, r6, #16
   19204:	vld1.64	{d20-d21}, [r6], r2
   19208:	vld1.64	{d22-d23}, [r0]
   1920c:	mov	r0, #48	; 0x30
   19210:	vld1.64	{d18-d19}, [r1]
   19214:	mov	r1, r9
   19218:	vst1.64	{d20-d21}, [r1], r0
   1921c:	vst1.64	{d16-d17}, [r4]
   19220:	mov	r0, sl
   19224:	vst1.64	{d22-d23}, [r1]
   19228:	vst1.64	{d18-d19}, [r5]
   1922c:	mov	r1, r9
   19230:	ldr	r2, [r6]
   19234:	bl	110d4 <memcpy@plt>
   19238:	movw	r0, #59224	; 0xe758
   1923c:	mov	r1, #0
   19240:	mov	r2, #64	; 0x40
   19244:	movt	r0, #1
   19248:	ldr	r3, [r0]
   1924c:	mov	r0, r9
   19250:	blx	r3
   19254:	mov	r0, r7
   19258:	sub	sp, fp, #28
   1925c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19260:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19264:	add	fp, sp, #28
   19268:	sub	sp, sp, #372	; 0x174
   1926c:	mov	r5, r1
   19270:	mov	r9, r0
   19274:	cmp	r3, #0
   19278:	mov	r1, r3
   1927c:	mvn	r0, #0
   19280:	movwne	r1, #1
   19284:	cmp	r9, #0
   19288:	beq	192c0 <__assert_fail@plt+0x7fb8>
   1928c:	mov	r7, r2
   19290:	clz	r2, r2
   19294:	lsr	r2, r2, #5
   19298:	ands	r1, r2, r1
   1929c:	bne	192c0 <__assert_fail@plt+0x7fb8>
   192a0:	ldr	r4, [fp, #12]
   192a4:	cmp	r4, #0
   192a8:	mov	r1, r4
   192ac:	movwne	r1, #1
   192b0:	cmp	r4, #64	; 0x40
   192b4:	subls	r2, r5, #1
   192b8:	cmpls	r2, #63	; 0x3f
   192bc:	bls	192c8 <__assert_fail@plt+0x7fc0>
   192c0:	sub	sp, fp, #28
   192c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192c8:	ldr	r8, [fp, #8]
   192cc:	clz	r2, r8
   192d0:	lsr	r2, r2, #5
   192d4:	ands	r1, r2, r1
   192d8:	bne	192c0 <__assert_fail@plt+0x7fb8>
   192dc:	mov	r6, r3
   192e0:	cmp	r4, #0
   192e4:	beq	193e0 <__assert_fail@plt+0x80d8>
   192e8:	cmp	r8, #0
   192ec:	beq	192c0 <__assert_fail@plt+0x7fb8>
   192f0:	sub	r1, r4, #1
   192f4:	cmp	r1, #63	; 0x3f
   192f8:	bhi	192c0 <__assert_fail@plt+0x7fb8>
   192fc:	mov	sl, sp
   19300:	mov	r1, #0
   19304:	mov	r2, #176	; 0xb0
   19308:	add	r0, sl, #64	; 0x40
   1930c:	bl	11230 <memset@plt>
   19310:	add	r0, pc, #648	; 0x288
   19314:	add	r1, pc, #660	; 0x294
   19318:	rsb	r2, r4, #128	; 0x80
   1931c:	vld1.64	{d16-d17}, [r1 :128]
   19320:	vld1.64	{d18-d19}, [r0 :128]
   19324:	add	r1, pc, #660	; 0x294
   19328:	add	r0, sl, #8
   1932c:	vld1.64	{d20-d21}, [r1 :128]
   19330:	uxtb	r1, r4
   19334:	vst1.64	{d16-d17}, [r0]
   19338:	add	r0, sl, #24
   1933c:	vst1.64	{d18-d19}, [r0]
   19340:	add	r0, sl, #40	; 0x28
   19344:	sub	sl, fp, #160	; 0xa0
   19348:	vst1.64	{d20-d21}, [r0]
   1934c:	movw	r0, #58983	; 0xe667
   19350:	movt	r0, #27145	; 0x6a09
   19354:	str	r0, [sp, #4]
   19358:	movw	r0, #52505	; 0xcd19
   1935c:	movt	r0, #23520	; 0x5be0
   19360:	str	r0, [sp, #60]	; 0x3c
   19364:	movw	r0, #8569	; 0x2179
   19368:	movt	r0, #4990	; 0x137e
   1936c:	str	r0, [sp, #56]	; 0x38
   19370:	uxtb	r0, r5
   19374:	str	r0, [sp, #228]	; 0xe4
   19378:	orr	r0, r0, r1, lsl #8
   1937c:	movw	r1, #51464	; 0xc908
   19380:	orr	r0, r0, #65536	; 0x10000
   19384:	movt	r1, #62396	; 0xf3bc
   19388:	orr	r0, r0, #16777216	; 0x1000000
   1938c:	eor	r0, r0, r1
   19390:	mov	r1, #0
   19394:	str	r0, [sp]
   19398:	add	r0, sl, r4
   1939c:	bl	11230 <memset@plt>
   193a0:	mov	r0, sl
   193a4:	mov	r1, r8
   193a8:	mov	r2, r4
   193ac:	bl	110d4 <memcpy@plt>
   193b0:	mov	r0, sp
   193b4:	mov	r1, sl
   193b8:	mov	r2, #128	; 0x80
   193bc:	bl	136b0 <__assert_fail@plt+0x23a8>
   193c0:	movw	r0, #59224	; 0xe758
   193c4:	mov	r1, #0
   193c8:	mov	r2, #128	; 0x80
   193cc:	movt	r0, #1
   193d0:	ldr	r3, [r0]
   193d4:	mov	r0, sl
   193d8:	blx	r3
   193dc:	b	19468 <__assert_fail@plt+0x8160>
   193e0:	mov	r4, sp
   193e4:	mov	r1, #0
   193e8:	mov	r2, #176	; 0xb0
   193ec:	add	r0, r4, #64	; 0x40
   193f0:	bl	11230 <memset@plt>
   193f4:	add	r0, pc, #420	; 0x1a4
   193f8:	add	r1, pc, #432	; 0x1b0
   193fc:	vld1.64	{d16-d17}, [r1 :128]
   19400:	vld1.64	{d18-d19}, [r0 :128]
   19404:	add	r1, pc, #436	; 0x1b4
   19408:	add	r0, r4, #8
   1940c:	vld1.64	{d20-d21}, [r1 :128]
   19410:	movw	r1, #51464	; 0xc908
   19414:	movt	r1, #62396	; 0xf3bc
   19418:	vst1.64	{d16-d17}, [r0]
   1941c:	add	r0, r4, #24
   19420:	vst1.64	{d18-d19}, [r0]
   19424:	add	r0, r4, #40	; 0x28
   19428:	vst1.64	{d20-d21}, [r0]
   1942c:	movw	r0, #58983	; 0xe667
   19430:	movt	r0, #27145	; 0x6a09
   19434:	str	r0, [sp, #4]
   19438:	movw	r0, #52505	; 0xcd19
   1943c:	movt	r0, #23520	; 0x5be0
   19440:	str	r0, [sp, #60]	; 0x3c
   19444:	movw	r0, #8569	; 0x2179
   19448:	movt	r0, #4990	; 0x137e
   1944c:	str	r0, [sp, #56]	; 0x38
   19450:	uxtb	r0, r5
   19454:	str	r0, [sp, #228]	; 0xe4
   19458:	orr	r0, r0, #65536	; 0x10000
   1945c:	orr	r0, r0, #16777216	; 0x1000000
   19460:	eor	r0, r0, r1
   19464:	str	r0, [sp]
   19468:	mov	r8, sp
   1946c:	mov	r1, r7
   19470:	mov	r2, r6
   19474:	mov	r0, r8
   19478:	bl	136b0 <__assert_fail@plt+0x23a8>
   1947c:	sub	r6, fp, #160	; 0xa0
   19480:	vmov.i32	q8, #0	; 0x00000000
   19484:	mov	r0, #48	; 0x30
   19488:	mov	r1, r6
   1948c:	add	r7, r6, #32
   19490:	add	r4, r6, #16
   19494:	vst1.64	{d16-d17}, [r1], r0
   19498:	ldr	r0, [sp, #228]	; 0xe4
   1949c:	vst1.64	{d16-d17}, [r7]
   194a0:	vst1.64	{d16-d17}, [r4]
   194a4:	vst1.64	{d16-d17}, [r1]
   194a8:	cmp	r0, r5
   194ac:	bhi	19594 <__assert_fail@plt+0x828c>
   194b0:	ldr	r0, [sp, #80]	; 0x50
   194b4:	ldr	r1, [sp, #84]	; 0x54
   194b8:	orrs	r0, r0, r1
   194bc:	bne	19594 <__assert_fail@plt+0x828c>
   194c0:	add	r5, sp, #64	; 0x40
   194c4:	ldr	r1, [sp, #224]	; 0xe0
   194c8:	add	ip, r8, #80	; 0x50
   194cc:	ldm	r5, {r2, r3, r5}
   194d0:	ldr	r0, [sp, #76]	; 0x4c
   194d4:	adds	r2, r2, r1
   194d8:	str	r2, [sp, #64]	; 0x40
   194dc:	adcs	r2, r3, #0
   194e0:	mvn	r3, #0
   194e4:	str	r2, [sp, #68]	; 0x44
   194e8:	adcs	r2, r5, #0
   194ec:	add	r5, r8, #96	; 0x60
   194f0:	adc	r0, r0, #0
   194f4:	str	r2, [sp, #72]	; 0x48
   194f8:	rsb	r2, r1, #128	; 0x80
   194fc:	str	r0, [sp, #76]	; 0x4c
   19500:	ldrb	r0, [sp, #232]	; 0xe8
   19504:	cmp	r0, #0
   19508:	add	r0, r5, r1
   1950c:	mov	r1, #0
   19510:	strne	r3, [sp, #88]	; 0x58
   19514:	strne	r3, [sp, #92]	; 0x5c
   19518:	str	r3, [ip]
   1951c:	str	r3, [ip, #4]
   19520:	bl	11230 <memset@plt>
   19524:	mov	r0, r8
   19528:	mov	r1, r5
   1952c:	bl	13880 <__assert_fail@plt+0x2578>
   19530:	add	r1, r8, #32
   19534:	mov	r2, #228	; 0xe4
   19538:	add	r0, r8, #48	; 0x30
   1953c:	vld1.64	{d16-d17}, [r1]
   19540:	add	r1, r8, #16
   19544:	vld1.64	{d20-d21}, [r8], r2
   19548:	vld1.64	{d22-d23}, [r0]
   1954c:	mov	r0, #48	; 0x30
   19550:	vld1.64	{d18-d19}, [r1]
   19554:	mov	r1, r6
   19558:	ldr	r2, [r8]
   1955c:	vst1.64	{d20-d21}, [r1], r0
   19560:	mov	r0, r9
   19564:	vst1.64	{d16-d17}, [r7]
   19568:	vst1.64	{d22-d23}, [r1]
   1956c:	mov	r1, r6
   19570:	vst1.64	{d18-d19}, [r4]
   19574:	bl	110d4 <memcpy@plt>
   19578:	movw	r0, #59224	; 0xe758
   1957c:	mov	r1, #0
   19580:	mov	r2, #64	; 0x40
   19584:	movt	r0, #1
   19588:	ldr	r3, [r0]
   1958c:	mov	r0, r6
   19590:	blx	r3
   19594:	mov	r0, #0
   19598:	sub	sp, fp, #28
   1959c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195a0:	svcpl	0x001d36f1
   195a4:	strbge	pc, [pc, #-1338]	; 19072 <__assert_fail@plt+0x7d6a>	; <UNPREDICTABLE>
   195a8:	sfmge	f0, 3, [r6, #836]!	; 0x344
   195ac:	tstpl	lr, pc, ror r2
   195b0:	strbhi	sl, [sl], #1851	; 0x73b
   195b4:	bllt	1a04fd0 <optarg@@GLIBC_2.4+0x19d5e58>
   195b8:	vcmla.f32	d15, d4, d27[0], #90
   195bc:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   195c0:	blcs	fb4644 <optarg@@GLIBC_2.4+0xf854cc>
   195c4:	blls	1737fc <optarg@@GLIBC_2.4+0x144684>
   195c8:	blx	1088b7e <optarg@@GLIBC_2.4+0x1059a06>
   195cc:	svcne	0x0083d9ab
   195d0:	b	19260 <__assert_fail@plt+0x7f58>
   195d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   195d8:	add	fp, sp, #24
   195dc:	sub	sp, sp, #248	; 0xf8
   195e0:	mov	r7, r0
   195e4:	mov	r0, #32768	; 0x8000
   195e8:	mov	r9, r2
   195ec:	mov	r8, r1
   195f0:	bl	1d244 <__assert_fail@plt+0xbf3c>
   195f4:	cmp	r0, #0
   195f8:	beq	19664 <__assert_fail@plt+0x835c>
   195fc:	mov	r4, sp
   19600:	mov	r5, r0
   19604:	mov	r1, r9
   19608:	mov	r0, r4
   1960c:	bl	13470 <__assert_fail@plt+0x2168>
   19610:	b	19624 <__assert_fail@plt+0x831c>
   19614:	mov	r0, r4
   19618:	mov	r1, r5
   1961c:	mov	r2, #32768	; 0x8000
   19620:	bl	136b0 <__assert_fail@plt+0x23a8>
   19624:	mov	r6, #0
   19628:	add	r0, r5, r6
   1962c:	rsb	r2, r6, #32768	; 0x8000
   19630:	mov	r1, #1
   19634:	mov	r3, r7
   19638:	bl	11158 <fread@plt>
   1963c:	add	r6, r0, r6
   19640:	cmp	r6, #32768	; 0x8000
   19644:	beq	19614 <__assert_fail@plt+0x830c>
   19648:	cmp	r0, #0
   1964c:	beq	1966c <__assert_fail@plt+0x8364>
   19650:	mov	r0, r7
   19654:	bl	111e8 <feof@plt>
   19658:	cmp	r0, #0
   1965c:	beq	19628 <__assert_fail@plt+0x8320>
   19660:	b	19680 <__assert_fail@plt+0x8378>
   19664:	mvn	r4, #0
   19668:	b	196b4 <__assert_fail@plt+0x83ac>
   1966c:	mov	r0, r7
   19670:	bl	110bc <ferror@plt>
   19674:	mvn	r4, #0
   19678:	cmp	r0, #0
   1967c:	bne	196ac <__assert_fail@plt+0x83a4>
   19680:	cmp	r6, #0
   19684:	beq	19698 <__assert_fail@plt+0x8390>
   19688:	mov	r0, sp
   1968c:	mov	r1, r5
   19690:	mov	r2, r6
   19694:	bl	136b0 <__assert_fail@plt+0x23a8>
   19698:	mov	r0, sp
   1969c:	mov	r1, r8
   196a0:	mov	r2, r9
   196a4:	bl	19124 <__assert_fail@plt+0x7e1c>
   196a8:	mov	r4, #0
   196ac:	mov	r0, r5
   196b0:	bl	199b4 <__assert_fail@plt+0x86ac>
   196b4:	mov	r0, r4
   196b8:	sub	sp, fp, #24
   196bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   196c0:	movw	r1, #61852	; 0xf19c
   196c4:	movt	r1, #2
   196c8:	str	r0, [r1]
   196cc:	bx	lr
   196d0:	movw	r1, #61856	; 0xf1a0
   196d4:	movt	r1, #2
   196d8:	strb	r0, [r1]
   196dc:	bx	lr
   196e0:	push	{r4, r5, r6, sl, fp, lr}
   196e4:	add	fp, sp, #16
   196e8:	sub	sp, sp, #8
   196ec:	movw	r0, #61812	; 0xf174
   196f0:	movt	r0, #2
   196f4:	ldr	r0, [r0]
   196f8:	bl	1d2c8 <__assert_fail@plt+0xbfc0>
   196fc:	cmp	r0, #0
   19700:	beq	19728 <__assert_fail@plt+0x8420>
   19704:	movw	r0, #61856	; 0xf1a0
   19708:	movt	r0, #2
   1970c:	ldrb	r0, [r0]
   19710:	cmp	r0, #0
   19714:	beq	19748 <__assert_fail@plt+0x8440>
   19718:	bl	1120c <__errno_location@plt>
   1971c:	ldr	r0, [r0]
   19720:	cmp	r0, #32
   19724:	bne	19748 <__assert_fail@plt+0x8440>
   19728:	movw	r0, #61800	; 0xf168
   1972c:	movt	r0, #2
   19730:	ldr	r0, [r0]
   19734:	bl	1d2c8 <__assert_fail@plt+0xbfc0>
   19738:	cmp	r0, #0
   1973c:	subeq	sp, fp, #16
   19740:	popeq	{r4, r5, r6, sl, fp, pc}
   19744:	b	197b8 <__assert_fail@plt+0x84b0>
   19748:	movw	r1, #59243	; 0xe76b
   1974c:	mov	r0, #0
   19750:	mov	r2, #5
   19754:	movt	r1, #1
   19758:	bl	11104 <dcgettext@plt>
   1975c:	mov	r4, r0
   19760:	movw	r0, #61852	; 0xf19c
   19764:	movt	r0, #2
   19768:	ldr	r6, [r0]
   1976c:	bl	1120c <__errno_location@plt>
   19770:	ldr	r5, [r0]
   19774:	cmp	r6, #0
   19778:	bne	19794 <__assert_fail@plt+0x848c>
   1977c:	movw	r2, #57166	; 0xdf4e
   19780:	mov	r0, #0
   19784:	mov	r1, r5
   19788:	mov	r3, r4
   1978c:	movt	r2, #1
   19790:	b	197b4 <__assert_fail@plt+0x84ac>
   19794:	mov	r0, r6
   19798:	bl	1b32c <__assert_fail@plt+0xa024>
   1979c:	movw	r2, #59255	; 0xe777
   197a0:	mov	r3, r0
   197a4:	str	r4, [sp]
   197a8:	mov	r0, #0
   197ac:	mov	r1, r5
   197b0:	movt	r2, #1
   197b4:	bl	1117c <error@plt>
   197b8:	movw	r0, #61712	; 0xf110
   197bc:	movt	r0, #2
   197c0:	ldr	r0, [r0]
   197c4:	bl	110c8 <_exit@plt>
   197c8:	b	11098 <posix_fadvise64@plt>
   197cc:	cmp	r0, #0
   197d0:	bxeq	lr
   197d4:	push	{r4, sl, fp, lr}
   197d8:	add	fp, sp, #8
   197dc:	sub	sp, sp, #16
   197e0:	mov	r4, r1
   197e4:	bl	11248 <fileno@plt>
   197e8:	mov	r1, #0
   197ec:	mov	r2, #0
   197f0:	mov	r3, #0
   197f4:	str	r1, [sp]
   197f8:	stmib	sp, {r1, r4}
   197fc:	bl	11098 <posix_fadvise64@plt>
   19800:	sub	sp, fp, #8
   19804:	pop	{r4, sl, fp, pc}
   19808:	push	{r4, r5, r6, sl, fp, lr}
   1980c:	add	fp, sp, #16
   19810:	sub	sp, sp, #8
   19814:	mov	r4, r0
   19818:	bl	11248 <fileno@plt>
   1981c:	cmn	r0, #1
   19820:	ble	19894 <__assert_fail@plt+0x858c>
   19824:	mov	r0, r4
   19828:	bl	111a0 <__freading@plt>
   1982c:	cmp	r0, #0
   19830:	beq	1985c <__assert_fail@plt+0x8554>
   19834:	mov	r0, r4
   19838:	bl	11248 <fileno@plt>
   1983c:	mov	r1, #1
   19840:	mov	r2, #0
   19844:	mov	r3, #0
   19848:	str	r1, [sp]
   1984c:	bl	11140 <lseek64@plt>
   19850:	and	r0, r0, r1
   19854:	cmn	r0, #1
   19858:	beq	19894 <__assert_fail@plt+0x858c>
   1985c:	mov	r0, r4
   19860:	bl	198a4 <__assert_fail@plt+0x859c>
   19864:	cmp	r0, #0
   19868:	beq	19894 <__assert_fail@plt+0x858c>
   1986c:	bl	1120c <__errno_location@plt>
   19870:	ldr	r6, [r0]
   19874:	mov	r5, r0
   19878:	mov	r0, r4
   1987c:	bl	11260 <fclose@plt>
   19880:	cmp	r6, #0
   19884:	strne	r6, [r5]
   19888:	mvnne	r0, #0
   1988c:	sub	sp, fp, #16
   19890:	pop	{r4, r5, r6, sl, fp, pc}
   19894:	mov	r0, r4
   19898:	sub	sp, fp, #16
   1989c:	pop	{r4, r5, r6, sl, fp, lr}
   198a0:	b	11260 <fclose@plt>
   198a4:	push	{r4, sl, fp, lr}
   198a8:	add	fp, sp, #8
   198ac:	sub	sp, sp, #8
   198b0:	mov	r4, r0
   198b4:	cmp	r0, #0
   198b8:	beq	198d4 <__assert_fail@plt+0x85cc>
   198bc:	mov	r0, r4
   198c0:	bl	111a0 <__freading@plt>
   198c4:	cmp	r0, #0
   198c8:	ldrbne	r0, [r4, #1]
   198cc:	tstne	r0, #1
   198d0:	bne	198e4 <__assert_fail@plt+0x85dc>
   198d4:	mov	r0, r4
   198d8:	sub	sp, fp, #8
   198dc:	pop	{r4, sl, fp, lr}
   198e0:	b	110a4 <fflush@plt>
   198e4:	mov	r0, #1
   198e8:	mov	r2, #0
   198ec:	mov	r3, #0
   198f0:	str	r0, [sp]
   198f4:	mov	r0, r4
   198f8:	bl	199dc <__assert_fail@plt+0x86d4>
   198fc:	b	198d4 <__assert_fail@plt+0x85cc>
   19900:	push	{r4, r5, r6, r7, fp, lr}
   19904:	add	fp, sp, #16
   19908:	mov	r5, r1
   1990c:	bl	112c0 <fopen64@plt>
   19910:	mov	r4, #0
   19914:	cmp	r0, #0
   19918:	beq	19968 <__assert_fail@plt+0x8660>
   1991c:	mov	r6, r0
   19920:	bl	11248 <fileno@plt>
   19924:	cmp	r0, #2
   19928:	movhi	r0, r6
   1992c:	pophi	{r4, r5, r6, r7, fp, pc}
   19930:	bl	1b7ec <__assert_fail@plt+0xa4e4>
   19934:	cmn	r0, #1
   19938:	ble	19994 <__assert_fail@plt+0x868c>
   1993c:	mov	r7, r0
   19940:	mov	r0, r6
   19944:	bl	19808 <__assert_fail@plt+0x8500>
   19948:	cmp	r0, #0
   1994c:	bne	19970 <__assert_fail@plt+0x8668>
   19950:	mov	r0, r7
   19954:	mov	r1, r5
   19958:	bl	11050 <fdopen@plt>
   1995c:	mov	r4, r0
   19960:	cmp	r0, #0
   19964:	beq	19970 <__assert_fail@plt+0x8668>
   19968:	mov	r0, r4
   1996c:	pop	{r4, r5, r6, r7, fp, pc}
   19970:	bl	1120c <__errno_location@plt>
   19974:	ldr	r5, [r0]
   19978:	mov	r4, r0
   1997c:	mov	r0, r7
   19980:	bl	112f0 <close@plt>
   19984:	str	r5, [r4]
   19988:	mov	r4, #0
   1998c:	mov	r0, r4
   19990:	pop	{r4, r5, r6, r7, fp, pc}
   19994:	bl	1120c <__errno_location@plt>
   19998:	ldr	r7, [r0]
   1999c:	mov	r5, r0
   199a0:	mov	r0, r6
   199a4:	bl	19808 <__assert_fail@plt+0x8500>
   199a8:	mov	r0, r4
   199ac:	str	r7, [r5]
   199b0:	pop	{r4, r5, r6, r7, fp, pc}
   199b4:	push	{r4, r5, r6, sl, fp, lr}
   199b8:	add	fp, sp, #16
   199bc:	mov	r4, r0
   199c0:	bl	1120c <__errno_location@plt>
   199c4:	ldr	r6, [r0]
   199c8:	mov	r5, r0
   199cc:	mov	r0, r4
   199d0:	bl	110b0 <free@plt>
   199d4:	str	r6, [r5]
   199d8:	pop	{r4, r5, r6, sl, fp, pc}
   199dc:	push	{r4, r5, r6, r7, fp, lr}
   199e0:	add	fp, sp, #16
   199e4:	sub	sp, sp, #8
   199e8:	mov	r4, r0
   199ec:	ldr	r0, [r0, #4]
   199f0:	mov	r5, r3
   199f4:	mov	r6, r2
   199f8:	ldr	r1, [r4, #8]
   199fc:	cmp	r1, r0
   19a00:	bne	19a1c <__assert_fail@plt+0x8714>
   19a04:	ldrd	r0, [r4, #16]
   19a08:	cmp	r1, r0
   19a0c:	bne	19a1c <__assert_fail@plt+0x8714>
   19a10:	ldr	r0, [r4, #36]	; 0x24
   19a14:	cmp	r0, #0
   19a18:	beq	19a34 <__assert_fail@plt+0x872c>
   19a1c:	mov	r0, r4
   19a20:	mov	r2, r6
   19a24:	mov	r3, r5
   19a28:	sub	sp, fp, #16
   19a2c:	pop	{r4, r5, r6, r7, fp, lr}
   19a30:	b	1126c <fseeko64@plt>
   19a34:	ldr	r7, [fp, #8]
   19a38:	mov	r0, r4
   19a3c:	bl	11248 <fileno@plt>
   19a40:	mov	r2, r6
   19a44:	mov	r3, r5
   19a48:	str	r7, [sp]
   19a4c:	bl	11140 <lseek64@plt>
   19a50:	and	r2, r0, r1
   19a54:	cmn	r2, #1
   19a58:	mvneq	r0, #0
   19a5c:	subeq	sp, fp, #16
   19a60:	popeq	{r4, r5, r6, r7, fp, pc}
   19a64:	strd	r0, [r4, #80]	; 0x50
   19a68:	ldr	r0, [r4]
   19a6c:	bic	r0, r0, #16
   19a70:	str	r0, [r4]
   19a74:	mov	r0, #0
   19a78:	sub	sp, fp, #16
   19a7c:	pop	{r4, r5, r6, r7, fp, pc}
   19a80:	push	{r4, r5, fp, lr}
   19a84:	add	fp, sp, #8
   19a88:	cmp	r0, #0
   19a8c:	beq	19b20 <__assert_fail@plt+0x8818>
   19a90:	mov	r1, #47	; 0x2f
   19a94:	mov	r4, r0
   19a98:	bl	1129c <strrchr@plt>
   19a9c:	cmp	r0, #0
   19aa0:	mov	r5, r4
   19aa4:	addne	r5, r0, #1
   19aa8:	sub	r0, r5, r4
   19aac:	cmp	r0, #7
   19ab0:	blt	19b04 <__assert_fail@plt+0x87fc>
   19ab4:	movw	r1, #59318	; 0xe7b6
   19ab8:	sub	r0, r5, #7
   19abc:	mov	r2, #7
   19ac0:	movt	r1, #1
   19ac4:	bl	112d8 <strncmp@plt>
   19ac8:	cmp	r0, #0
   19acc:	bne	19b04 <__assert_fail@plt+0x87fc>
   19ad0:	movw	r1, #59326	; 0xe7be
   19ad4:	mov	r0, r5
   19ad8:	mov	r2, #3
   19adc:	movt	r1, #1
   19ae0:	bl	112d8 <strncmp@plt>
   19ae4:	cmp	r0, #0
   19ae8:	beq	19af4 <__assert_fail@plt+0x87ec>
   19aec:	mov	r4, r5
   19af0:	b	19b04 <__assert_fail@plt+0x87fc>
   19af4:	movw	r0, #61784	; 0xf158
   19af8:	add	r4, r5, #3
   19afc:	movt	r0, #2
   19b00:	str	r4, [r0]
   19b04:	movw	r0, #61788	; 0xf15c
   19b08:	movt	r0, #2
   19b0c:	str	r4, [r0]
   19b10:	movw	r0, #61860	; 0xf1a4
   19b14:	movt	r0, #2
   19b18:	str	r4, [r0]
   19b1c:	pop	{r4, r5, fp, pc}
   19b20:	movw	r0, #61800	; 0xf168
   19b24:	mov	r1, #55	; 0x37
   19b28:	mov	r2, #1
   19b2c:	movt	r0, #2
   19b30:	ldr	r3, [r0]
   19b34:	movw	r0, #59262	; 0xe77e
   19b38:	movt	r0, #1
   19b3c:	bl	11134 <fwrite@plt>
   19b40:	bl	112e4 <abort@plt>
   19b44:	push	{r4, r5, r6, sl, fp, lr}
   19b48:	add	fp, sp, #16
   19b4c:	mov	r4, r0
   19b50:	movw	r0, #61864	; 0xf1a8
   19b54:	movt	r0, #2
   19b58:	cmp	r4, #0
   19b5c:	moveq	r4, r0
   19b60:	bl	1120c <__errno_location@plt>
   19b64:	ldr	r6, [r0]
   19b68:	mov	r5, r0
   19b6c:	mov	r0, r4
   19b70:	mov	r1, #48	; 0x30
   19b74:	bl	1c310 <__assert_fail@plt+0xb008>
   19b78:	str	r6, [r5]
   19b7c:	pop	{r4, r5, r6, sl, fp, pc}
   19b80:	movw	r1, #61864	; 0xf1a8
   19b84:	cmp	r0, #0
   19b88:	movt	r1, #2
   19b8c:	movne	r1, r0
   19b90:	ldr	r0, [r1]
   19b94:	bx	lr
   19b98:	movw	r2, #61864	; 0xf1a8
   19b9c:	cmp	r0, #0
   19ba0:	movt	r2, #2
   19ba4:	movne	r2, r0
   19ba8:	str	r1, [r2]
   19bac:	bx	lr
   19bb0:	movw	r3, #61864	; 0xf1a8
   19bb4:	cmp	r0, #0
   19bb8:	movt	r3, #2
   19bbc:	movne	r3, r0
   19bc0:	ubfx	r0, r1, #5, #3
   19bc4:	and	r1, r1, #31
   19bc8:	add	r0, r3, r0, lsl #2
   19bcc:	ldr	r3, [r0, #8]
   19bd0:	eor	r2, r2, r3, lsr r1
   19bd4:	and	r2, r2, #1
   19bd8:	eor	r2, r3, r2, lsl r1
   19bdc:	str	r2, [r0, #8]
   19be0:	mov	r0, #1
   19be4:	and	r0, r0, r3, lsr r1
   19be8:	bx	lr
   19bec:	movw	r2, #61864	; 0xf1a8
   19bf0:	cmp	r0, #0
   19bf4:	movt	r2, #2
   19bf8:	movne	r2, r0
   19bfc:	ldr	r0, [r2, #4]
   19c00:	str	r1, [r2, #4]
   19c04:	bx	lr
   19c08:	movw	r3, #61864	; 0xf1a8
   19c0c:	cmp	r0, #0
   19c10:	movt	r3, #2
   19c14:	movne	r3, r0
   19c18:	cmp	r1, #0
   19c1c:	mov	r0, #10
   19c20:	cmpne	r2, #0
   19c24:	str	r0, [r3]
   19c28:	bne	19c38 <__assert_fail@plt+0x8930>
   19c2c:	push	{fp, lr}
   19c30:	mov	fp, sp
   19c34:	bl	112e4 <abort@plt>
   19c38:	str	r1, [r3, #40]	; 0x28
   19c3c:	str	r2, [r3, #44]	; 0x2c
   19c40:	bx	lr
   19c44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c48:	add	fp, sp, #28
   19c4c:	sub	sp, sp, #20
   19c50:	mov	r7, r0
   19c54:	ldr	r0, [fp, #8]
   19c58:	movw	r5, #61864	; 0xf1a8
   19c5c:	mov	r8, r3
   19c60:	mov	r9, r2
   19c64:	mov	sl, r1
   19c68:	movt	r5, #2
   19c6c:	cmp	r0, #0
   19c70:	movne	r5, r0
   19c74:	bl	1120c <__errno_location@plt>
   19c78:	mov	r4, r0
   19c7c:	ldm	r5, {r0, r1}
   19c80:	ldr	r2, [r5, #40]	; 0x28
   19c84:	ldr	r3, [r5, #44]	; 0x2c
   19c88:	add	r5, r5, #8
   19c8c:	ldr	r6, [r4]
   19c90:	stm	sp, {r0, r1, r5}
   19c94:	str	r2, [sp, #12]
   19c98:	str	r3, [sp, #16]
   19c9c:	mov	r0, r7
   19ca0:	mov	r1, sl
   19ca4:	mov	r2, r9
   19ca8:	mov	r3, r8
   19cac:	bl	19cbc <__assert_fail@plt+0x89b4>
   19cb0:	str	r6, [r4]
   19cb4:	sub	sp, fp, #28
   19cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19cc0:	add	fp, sp, #28
   19cc4:	sub	sp, sp, #156	; 0x9c
   19cc8:	str	r0, [sp, #80]	; 0x50
   19ccc:	ldr	r0, [fp, #12]
   19cd0:	mov	r6, r1
   19cd4:	mov	r9, r3
   19cd8:	str	r2, [fp, #-84]	; 0xffffffac
   19cdc:	and	r1, r0, #4
   19ce0:	str	r1, [sp, #32]
   19ce4:	and	r1, r0, #1
   19ce8:	str	r1, [sp, #36]	; 0x24
   19cec:	ubfx	r4, r0, #1, #1
   19cf0:	bl	1114c <__ctype_get_mb_cur_max@plt>
   19cf4:	str	r0, [sp, #40]	; 0x28
   19cf8:	ldr	r0, [fp, #24]
   19cfc:	ldr	r7, [fp, #8]
   19d00:	mov	r1, #0
   19d04:	mov	r5, #1
   19d08:	str	r1, [fp, #-56]	; 0xffffffc8
   19d0c:	mov	r1, #0
   19d10:	str	r1, [sp, #60]	; 0x3c
   19d14:	str	r0, [sp, #76]	; 0x4c
   19d18:	ldr	r0, [fp, #20]
   19d1c:	str	r0, [sp, #72]	; 0x48
   19d20:	mov	r0, #0
   19d24:	str	r0, [sp, #56]	; 0x38
   19d28:	mov	r0, #0
   19d2c:	str	r0, [sp, #92]	; 0x5c
   19d30:	mov	r0, #0
   19d34:	str	r0, [fp, #-76]	; 0xffffffb4
   19d38:	mov	r0, #0
   19d3c:	cmp	r7, #10
   19d40:	bhi	1acc0 <__assert_fail@plt+0x99b8>
   19d44:	add	r1, pc, #28
   19d48:	mov	sl, r6
   19d4c:	ldr	r6, [sp, #80]	; 0x50
   19d50:	ldr	ip, [fp, #-84]	; 0xffffffac
   19d54:	mov	r8, #0
   19d58:	mov	r2, #1
   19d5c:	mov	r3, #0
   19d60:	mov	lr, r9
   19d64:	ldr	pc, [r1, r7, lsl #2]
   19d68:	andeq	r9, r1, ip, asr #28
   19d6c:	andeq	r9, r1, r8, ror lr
   19d70:	andeq	r9, r1, ip, lsr lr
   19d74:	andeq	r9, r1, r4, lsr lr
   19d78:	andeq	r9, r1, ip, ror #28
   19d7c:	andeq	r9, r1, r0, asr #29
   19d80:	andeq	r9, r1, ip, asr lr
   19d84:	andeq	r9, r1, ip, lsl pc
   19d88:	muleq	r1, r4, sp
   19d8c:	muleq	r1, r4, sp
   19d90:			; <UNDEFINED> instruction: 0x00019dbc
   19d94:	movw	r0, #59408	; 0xe810
   19d98:	mov	r1, r7
   19d9c:	movt	r0, #1
   19da0:	bl	1b6cc <__assert_fail@plt+0xa3c4>
   19da4:	str	r0, [sp, #72]	; 0x48
   19da8:	movw	r0, #59410	; 0xe812
   19dac:	mov	r1, r7
   19db0:	movt	r0, #1
   19db4:	bl	1b6cc <__assert_fail@plt+0xa3c4>
   19db8:	str	r0, [sp, #76]	; 0x4c
   19dbc:	str	r5, [fp, #-48]	; 0xffffffd0
   19dc0:	mov	r8, #0
   19dc4:	mov	r5, r7
   19dc8:	tst	r4, #1
   19dcc:	bne	19e04 <__assert_fail@plt+0x8afc>
   19dd0:	ldr	r0, [sp, #72]	; 0x48
   19dd4:	ldrb	r0, [r0]
   19dd8:	cmp	r0, #0
   19ddc:	beq	19e04 <__assert_fail@plt+0x8afc>
   19de0:	ldr	r1, [sp, #72]	; 0x48
   19de4:	mov	r8, #0
   19de8:	add	r1, r1, #1
   19dec:	cmp	r8, sl
   19df0:	strbcc	r0, [r6, r8]
   19df4:	ldrb	r0, [r1, r8]
   19df8:	add	r8, r8, #1
   19dfc:	cmp	r0, #0
   19e00:	bne	19dec <__assert_fail@plt+0x8ae4>
   19e04:	ldr	r7, [sp, #76]	; 0x4c
   19e08:	mov	r0, r7
   19e0c:	bl	111f4 <strlen@plt>
   19e10:	str	r7, [sp, #92]	; 0x5c
   19e14:	mov	r7, r5
   19e18:	ldr	ip, [fp, #-84]	; 0xffffffac
   19e1c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   19e20:	str	r0, [fp, #-76]	; 0xffffffb4
   19e24:	mov	r2, #1
   19e28:	mov	r3, r4
   19e2c:	mov	lr, r9
   19e30:	b	19f1c <__assert_fail@plt+0x8c14>
   19e34:	mov	r0, #1
   19e38:	b	19e78 <__assert_fail@plt+0x8b70>
   19e3c:	tst	r4, #1
   19e40:	bne	19e78 <__assert_fail@plt+0x8b70>
   19e44:	mov	r2, r0
   19e48:	b	19ea0 <__assert_fail@plt+0x8b98>
   19e4c:	mov	r7, #0
   19e50:	mov	r8, #0
   19e54:	mov	r2, r0
   19e58:	b	19f18 <__assert_fail@plt+0x8c10>
   19e5c:	mov	r0, #1
   19e60:	mov	r8, #0
   19e64:	mov	r7, #5
   19e68:	b	19ed4 <__assert_fail@plt+0x8bcc>
   19e6c:	mov	r2, #1
   19e70:	tst	r4, #1
   19e74:	beq	19ea0 <__assert_fail@plt+0x8b98>
   19e78:	mov	r1, #1
   19e7c:	mov	r8, #0
   19e80:	mov	r7, #2
   19e84:	mov	r2, r0
   19e88:	mov	r3, #1
   19e8c:	str	r1, [fp, #-76]	; 0xffffffb4
   19e90:	movw	r1, #59410	; 0xe812
   19e94:	movt	r1, #1
   19e98:	str	r1, [sp, #92]	; 0x5c
   19e9c:	b	19f1c <__assert_fail@plt+0x8c14>
   19ea0:	cmp	sl, #0
   19ea4:	mov	r8, #1
   19ea8:	mov	r7, #2
   19eac:	movne	r0, #39	; 0x27
   19eb0:	strbne	r0, [r6]
   19eb4:	movw	r0, #59410	; 0xe812
   19eb8:	movt	r0, #1
   19ebc:	b	19f0c <__assert_fail@plt+0x8c04>
   19ec0:	mov	r7, #5
   19ec4:	tst	r4, #1
   19ec8:	beq	19ef0 <__assert_fail@plt+0x8be8>
   19ecc:	mov	r0, #1
   19ed0:	mov	r8, #0
   19ed4:	str	r0, [fp, #-76]	; 0xffffffb4
   19ed8:	movw	r0, #59406	; 0xe80e
   19edc:	mov	r2, #1
   19ee0:	mov	r3, #1
   19ee4:	movt	r0, #1
   19ee8:	str	r0, [sp, #92]	; 0x5c
   19eec:	b	19f1c <__assert_fail@plt+0x8c14>
   19ef0:	cmp	sl, #0
   19ef4:	mov	r8, #1
   19ef8:	mov	r2, #1
   19efc:	movne	r0, #34	; 0x22
   19f00:	strbne	r0, [r6]
   19f04:	movw	r0, #59406	; 0xe80e
   19f08:	movt	r0, #1
   19f0c:	str	r0, [sp, #92]	; 0x5c
   19f10:	mov	r0, #1
   19f14:	str	r0, [fp, #-76]	; 0xffffffb4
   19f18:	mov	r3, #0
   19f1c:	ldr	r0, [fp, #16]
   19f20:	str	r3, [fp, #-72]	; 0xffffffb8
   19f24:	str	r7, [fp, #-64]	; 0xffffffc0
   19f28:	str	r2, [sp, #84]	; 0x54
   19f2c:	cmp	r0, #0
   19f30:	movwne	r0, #1
   19f34:	and	r0, r0, r3
   19f38:	str	r0, [fp, #-88]	; 0xffffffa8
   19f3c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19f40:	cmp	r0, #0
   19f44:	movwne	r0, #1
   19f48:	subs	r4, r7, #2
   19f4c:	mov	r7, #0
   19f50:	and	r1, r0, r3
   19f54:	str	r4, [fp, #-80]	; 0xffffffb0
   19f58:	and	r1, r2, r1
   19f5c:	str	r1, [sp, #48]	; 0x30
   19f60:	clz	r1, r4
   19f64:	lsr	r1, r1, #5
   19f68:	and	r1, r1, r3
   19f6c:	eor	r3, r3, #1
   19f70:	str	r1, [sp, #64]	; 0x40
   19f74:	mov	r1, r4
   19f78:	str	r3, [sp, #88]	; 0x58
   19f7c:	movwne	r1, #1
   19f80:	orr	r3, r1, r3
   19f84:	and	r1, r1, r2
   19f88:	and	r0, r0, r1
   19f8c:	str	r3, [sp, #68]	; 0x44
   19f90:	str	r1, [fp, #-68]	; 0xffffffbc
   19f94:	str	r0, [fp, #-60]	; 0xffffffc4
   19f98:	eor	r0, r2, #1
   19f9c:	str	r0, [sp, #52]	; 0x34
   19fa0:	cmn	lr, #1
   19fa4:	beq	19fb4 <__assert_fail@plt+0x8cac>
   19fa8:	cmp	r7, lr
   19fac:	bne	19fc0 <__assert_fail@plt+0x8cb8>
   19fb0:	b	1aae8 <__assert_fail@plt+0x97e0>
   19fb4:	ldrb	r0, [ip, r7]
   19fb8:	cmp	r0, #0
   19fbc:	beq	1aaf0 <__assert_fail@plt+0x97e8>
   19fc0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19fc4:	mov	r9, #0
   19fc8:	str	r5, [fp, #-48]	; 0xffffffd0
   19fcc:	cmp	r0, #0
   19fd0:	beq	1a004 <__assert_fail@plt+0x8cfc>
   19fd4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19fd8:	add	r4, r7, r0
   19fdc:	cmp	r0, #2
   19fe0:	bcc	19ffc <__assert_fail@plt+0x8cf4>
   19fe4:	cmn	lr, #1
   19fe8:	bne	19ffc <__assert_fail@plt+0x8cf4>
   19fec:	mov	r0, ip
   19ff0:	bl	111f4 <strlen@plt>
   19ff4:	ldr	ip, [fp, #-84]	; 0xffffffac
   19ff8:	mov	lr, r0
   19ffc:	cmp	r4, lr
   1a000:	bls	1a00c <__assert_fail@plt+0x8d04>
   1a004:	mov	r0, #0
   1a008:	b	1a04c <__assert_fail@plt+0x8d44>
   1a00c:	ldr	r1, [sp, #92]	; 0x5c
   1a010:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a014:	add	r0, ip, r7
   1a018:	mov	r4, lr
   1a01c:	bl	110f8 <memcmp@plt>
   1a020:	ldr	r2, [sp, #88]	; 0x58
   1a024:	cmp	r0, #0
   1a028:	mov	r1, r0
   1a02c:	movwne	r1, #1
   1a030:	orr	r1, r1, r2
   1a034:	tst	r1, #1
   1a038:	beq	1ab80 <__assert_fail@plt+0x9878>
   1a03c:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a040:	clz	r0, r0
   1a044:	mov	lr, r4
   1a048:	lsr	r0, r0, #5
   1a04c:	str	r0, [fp, #-52]	; 0xffffffcc
   1a050:	ldrb	r5, [ip, r7]
   1a054:	cmp	r5, #126	; 0x7e
   1a058:	bhi	1a410 <__assert_fail@plt+0x9108>
   1a05c:	add	r3, pc, #16
   1a060:	mov	r4, #1
   1a064:	mov	r2, #110	; 0x6e
   1a068:	mov	r0, #97	; 0x61
   1a06c:	mov	r1, #0
   1a070:	ldr	pc, [r3, r5, lsl #2]
   1a074:	andeq	sl, r1, ip, lsl #6
   1a078:	andeq	sl, r1, r0, lsl r4
   1a07c:	andeq	sl, r1, r0, lsl r4
   1a080:	andeq	sl, r1, r0, lsl r4
   1a084:	andeq	sl, r1, r0, lsl r4
   1a088:	andeq	sl, r1, r0, lsl r4
   1a08c:	andeq	sl, r1, r0, lsl r4
   1a090:	andeq	sl, r1, r4, asr #9
   1a094:	andeq	sl, r1, ip, ror #5
   1a098:	andeq	sl, r1, r4, ror #5
   1a09c:	strdeq	sl, [r1], -r8
   1a0a0:	andeq	sl, r1, r8, ror r3
   1a0a4:	ldrdeq	sl, [r1], -ip
   1a0a8:	strdeq	sl, [r1], -r4
   1a0ac:	andeq	sl, r1, r0, lsl r4
   1a0b0:	andeq	sl, r1, r0, lsl r4
   1a0b4:	andeq	sl, r1, r0, lsl r4
   1a0b8:	andeq	sl, r1, r0, lsl r4
   1a0bc:	andeq	sl, r1, r0, lsl r4
   1a0c0:	andeq	sl, r1, r0, lsl r4
   1a0c4:	andeq	sl, r1, r0, lsl r4
   1a0c8:	andeq	sl, r1, r0, lsl r4
   1a0cc:	andeq	sl, r1, r0, lsl r4
   1a0d0:	andeq	sl, r1, r0, lsl r4
   1a0d4:	andeq	sl, r1, r0, lsl r4
   1a0d8:	andeq	sl, r1, r0, lsl r4
   1a0dc:	andeq	sl, r1, r0, lsl r4
   1a0e0:	andeq	sl, r1, r0, lsl r4
   1a0e4:	andeq	sl, r1, r0, lsl r4
   1a0e8:	andeq	sl, r1, r0, lsl r4
   1a0ec:	andeq	sl, r1, r0, lsl r4
   1a0f0:	andeq	sl, r1, r0, lsl r4
   1a0f4:	andeq	sl, r1, ip, ror r4
   1a0f8:	andeq	sl, r1, r0, lsl #9
   1a0fc:	andeq	sl, r1, r0, lsl #9
   1a100:	andeq	sl, r1, r4, lsl #5
   1a104:	andeq	sl, r1, r0, lsl #9
   1a108:	andeq	sl, r1, r0, ror r2
   1a10c:	andeq	sl, r1, r0, lsl #9
   1a110:	andeq	sl, r1, r0, lsl #7
   1a114:	andeq	sl, r1, r0, lsl #9
   1a118:	andeq	sl, r1, r0, lsl #9
   1a11c:	andeq	sl, r1, r0, lsl #9
   1a120:	andeq	sl, r1, r0, ror r2
   1a124:	andeq	sl, r1, r0, ror r2
   1a128:	andeq	sl, r1, r0, ror r2
   1a12c:	andeq	sl, r1, r0, ror r2
   1a130:	andeq	sl, r1, r0, ror r2
   1a134:	andeq	sl, r1, r0, ror r2
   1a138:	andeq	sl, r1, r0, ror r2
   1a13c:	andeq	sl, r1, r0, ror r2
   1a140:	andeq	sl, r1, r0, ror r2
   1a144:	andeq	sl, r1, r0, ror r2
   1a148:	andeq	sl, r1, r0, ror r2
   1a14c:	andeq	sl, r1, r0, ror r2
   1a150:	andeq	sl, r1, r0, ror r2
   1a154:	andeq	sl, r1, r0, ror r2
   1a158:	andeq	sl, r1, r0, ror r2
   1a15c:	andeq	sl, r1, r0, ror r2
   1a160:	andeq	sl, r1, r0, lsl #9
   1a164:	andeq	sl, r1, r0, lsl #9
   1a168:	andeq	sl, r1, r0, lsl #9
   1a16c:	andeq	sl, r1, r0, lsl #9
   1a170:	andeq	sl, r1, ip, asr #6
   1a174:	andeq	sl, r1, r0, lsl r4
   1a178:	andeq	sl, r1, r0, ror r2
   1a17c:	andeq	sl, r1, r0, ror r2
   1a180:	andeq	sl, r1, r0, ror r2
   1a184:	andeq	sl, r1, r0, ror r2
   1a188:	andeq	sl, r1, r0, ror r2
   1a18c:	andeq	sl, r1, r0, ror r2
   1a190:	andeq	sl, r1, r0, ror r2
   1a194:	andeq	sl, r1, r0, ror r2
   1a198:	andeq	sl, r1, r0, ror r2
   1a19c:	andeq	sl, r1, r0, ror r2
   1a1a0:	andeq	sl, r1, r0, ror r2
   1a1a4:	andeq	sl, r1, r0, ror r2
   1a1a8:	andeq	sl, r1, r0, ror r2
   1a1ac:	andeq	sl, r1, r0, ror r2
   1a1b0:	andeq	sl, r1, r0, ror r2
   1a1b4:	andeq	sl, r1, r0, ror r2
   1a1b8:	andeq	sl, r1, r0, ror r2
   1a1bc:	andeq	sl, r1, r0, ror r2
   1a1c0:	andeq	sl, r1, r0, ror r2
   1a1c4:	andeq	sl, r1, r0, ror r2
   1a1c8:	andeq	sl, r1, r0, ror r2
   1a1cc:	andeq	sl, r1, r0, ror r2
   1a1d0:	andeq	sl, r1, r0, ror r2
   1a1d4:	andeq	sl, r1, r0, ror r2
   1a1d8:	andeq	sl, r1, r0, ror r2
   1a1dc:	andeq	sl, r1, r0, ror r2
   1a1e0:	andeq	sl, r1, r0, lsl #9
   1a1e4:			; <UNDEFINED> instruction: 0x0001a2b8
   1a1e8:	andeq	sl, r1, r0, ror r2
   1a1ec:	andeq	sl, r1, r0, lsl #9
   1a1f0:	andeq	sl, r1, r0, ror r2
   1a1f4:	andeq	sl, r1, r0, lsl #9
   1a1f8:	andeq	sl, r1, r0, ror r2
   1a1fc:	andeq	sl, r1, r0, ror r2
   1a200:	andeq	sl, r1, r0, ror r2
   1a204:	andeq	sl, r1, r0, ror r2
   1a208:	andeq	sl, r1, r0, ror r2
   1a20c:	andeq	sl, r1, r0, ror r2
   1a210:	andeq	sl, r1, r0, ror r2
   1a214:	andeq	sl, r1, r0, ror r2
   1a218:	andeq	sl, r1, r0, ror r2
   1a21c:	andeq	sl, r1, r0, ror r2
   1a220:	andeq	sl, r1, r0, ror r2
   1a224:	andeq	sl, r1, r0, ror r2
   1a228:	andeq	sl, r1, r0, ror r2
   1a22c:	andeq	sl, r1, r0, ror r2
   1a230:	andeq	sl, r1, r0, ror r2
   1a234:	andeq	sl, r1, r0, ror r2
   1a238:	andeq	sl, r1, r0, ror r2
   1a23c:	andeq	sl, r1, r0, ror r2
   1a240:	andeq	sl, r1, r0, ror r2
   1a244:	andeq	sl, r1, r0, ror r2
   1a248:	andeq	sl, r1, r0, ror r2
   1a24c:	andeq	sl, r1, r0, ror r2
   1a250:	andeq	sl, r1, r0, ror r2
   1a254:	andeq	sl, r1, r0, ror r2
   1a258:	andeq	sl, r1, r0, ror r2
   1a25c:	andeq	sl, r1, r0, ror r2
   1a260:	muleq	r1, r8, r2
   1a264:	andeq	sl, r1, r0, lsl #9
   1a268:	muleq	r1, r8, r2
   1a26c:	andeq	sl, r1, r4, lsl #5
   1a270:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a274:	cmp	r0, #0
   1a278:	beq	1a4d8 <__assert_fail@plt+0x91d0>
   1a27c:	ldr	r0, [fp, #16]
   1a280:	b	1a4dc <__assert_fail@plt+0x91d4>
   1a284:	mov	r4, #0
   1a288:	cmp	r7, #0
   1a28c:	beq	1a47c <__assert_fail@plt+0x9174>
   1a290:	mov	r9, #0
   1a294:	b	1a270 <__assert_fail@plt+0x8f68>
   1a298:	mov	r4, #0
   1a29c:	cmn	lr, #1
   1a2a0:	beq	1a460 <__assert_fail@plt+0x9158>
   1a2a4:	cmp	r7, #0
   1a2a8:	bne	1a290 <__assert_fail@plt+0x8f88>
   1a2ac:	cmp	lr, #1
   1a2b0:	beq	1a47c <__assert_fail@plt+0x9174>
   1a2b4:	b	1a290 <__assert_fail@plt+0x8f88>
   1a2b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a2bc:	cmp	r0, #2
   1a2c0:	bne	1a4a0 <__assert_fail@plt+0x9198>
   1a2c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a2c8:	tst	r0, #1
   1a2cc:	bne	1ab9c <__assert_fail@plt+0x9894>
   1a2d0:	mov	r9, #0
   1a2d4:	mov	r0, #92	; 0x5c
   1a2d8:	b	1a4b4 <__assert_fail@plt+0x91ac>
   1a2dc:	mov	r0, #102	; 0x66
   1a2e0:	b	1a4c4 <__assert_fail@plt+0x91bc>
   1a2e4:	mov	r2, #116	; 0x74
   1a2e8:	b	1a2f8 <__assert_fail@plt+0x8ff0>
   1a2ec:	mov	r0, #98	; 0x62
   1a2f0:	b	1a4c4 <__assert_fail@plt+0x91bc>
   1a2f4:	mov	r2, #114	; 0x72
   1a2f8:	ldr	r0, [sp, #68]	; 0x44
   1a2fc:	tst	r0, #1
   1a300:	mov	r0, r2
   1a304:	bne	1a4c4 <__assert_fail@plt+0x91bc>
   1a308:	b	1ab9c <__assert_fail@plt+0x9894>
   1a30c:	ldr	r0, [sp, #84]	; 0x54
   1a310:	tst	r0, #1
   1a314:	beq	1a5b4 <__assert_fail@plt+0x92ac>
   1a318:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a31c:	tst	r0, #1
   1a320:	bne	1acac <__assert_fail@plt+0x99a4>
   1a324:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a328:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a32c:	cmp	r0, #2
   1a330:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1a334:	movwne	r0, #1
   1a338:	orr	r0, r0, r2
   1a33c:	tst	r0, #1
   1a340:	beq	1a984 <__assert_fail@plt+0x967c>
   1a344:	mov	r0, r8
   1a348:	b	1a9b8 <__assert_fail@plt+0x96b0>
   1a34c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a350:	mov	r9, #0
   1a354:	mov	r5, #63	; 0x3f
   1a358:	cmp	r0, #5
   1a35c:	beq	1a768 <__assert_fail@plt+0x9460>
   1a360:	cmp	r0, #2
   1a364:	bne	1a80c <__assert_fail@plt+0x9504>
   1a368:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a36c:	tst	r0, #1
   1a370:	beq	1a810 <__assert_fail@plt+0x9508>
   1a374:	b	1ab9c <__assert_fail@plt+0x9894>
   1a378:	mov	r0, #118	; 0x76
   1a37c:	b	1a4c4 <__assert_fail@plt+0x91bc>
   1a380:	mov	r0, #1
   1a384:	mov	r5, #39	; 0x27
   1a388:	str	r0, [sp, #60]	; 0x3c
   1a38c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a390:	cmp	r0, #2
   1a394:	bne	1a408 <__assert_fail@plt+0x9100>
   1a398:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a39c:	tst	r0, #1
   1a3a0:	bne	1ab9c <__assert_fail@plt+0x9894>
   1a3a4:	ldr	r2, [sp, #56]	; 0x38
   1a3a8:	clz	r1, sl
   1a3ac:	mov	r9, #0
   1a3b0:	lsr	r1, r1, #5
   1a3b4:	cmp	r2, #0
   1a3b8:	mov	r0, r2
   1a3bc:	movwne	r0, #1
   1a3c0:	orrs	r0, r0, r1
   1a3c4:	moveq	r2, sl
   1a3c8:	moveq	sl, r0
   1a3cc:	cmp	r8, sl
   1a3d0:	str	r2, [sp, #56]	; 0x38
   1a3d4:	movcc	r0, #39	; 0x27
   1a3d8:	strbcc	r0, [r6, r8]
   1a3dc:	add	r0, r8, #1
   1a3e0:	cmp	r0, sl
   1a3e4:	movcc	r1, #92	; 0x5c
   1a3e8:	strbcc	r1, [r6, r0]
   1a3ec:	add	r0, r8, #2
   1a3f0:	add	r8, r8, #3
   1a3f4:	cmp	r0, sl
   1a3f8:	movcc	r1, #39	; 0x27
   1a3fc:	strbcc	r1, [r6, r0]
   1a400:	mov	r0, #0
   1a404:	str	r0, [fp, #-56]	; 0xffffffc8
   1a408:	mov	r4, #1
   1a40c:	b	1a270 <__assert_fail@plt+0x8f68>
   1a410:	ldr	r0, [sp, #40]	; 0x28
   1a414:	cmp	r0, #1
   1a418:	bne	1a5e0 <__assert_fail@plt+0x92d8>
   1a41c:	str	lr, [sp, #28]
   1a420:	bl	111d0 <__ctype_b_loc@plt>
   1a424:	ldr	r0, [r0]
   1a428:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a42c:	mov	r1, #1
   1a430:	add	r0, r0, r5, lsl #1
   1a434:	ldrb	r0, [r0, #1]
   1a438:	ubfx	r4, r0, #6, #1
   1a43c:	ldr	r0, [sp, #52]	; 0x34
   1a440:	mov	r2, r1
   1a444:	cmp	r1, #1
   1a448:	orr	r0, r4, r0
   1a44c:	bhi	1a818 <__assert_fail@plt+0x9510>
   1a450:	tst	r0, #1
   1a454:	beq	1a818 <__assert_fail@plt+0x9510>
   1a458:	ldr	lr, [sp, #28]
   1a45c:	b	1a270 <__assert_fail@plt+0x8f68>
   1a460:	cmp	r7, #0
   1a464:	ldrbeq	r0, [ip, #1]
   1a468:	cmpeq	r0, #0
   1a46c:	beq	1a47c <__assert_fail@plt+0x9174>
   1a470:	mvn	lr, #0
   1a474:	mov	r9, #0
   1a478:	b	1a270 <__assert_fail@plt+0x8f68>
   1a47c:	mov	r1, #1
   1a480:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a484:	cmp	r0, #2
   1a488:	bne	1a498 <__assert_fail@plt+0x9190>
   1a48c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a490:	tst	r0, #1
   1a494:	bne	1ab9c <__assert_fail@plt+0x9894>
   1a498:	mov	r4, r1
   1a49c:	b	1a270 <__assert_fail@plt+0x8f68>
   1a4a0:	ldr	r1, [sp, #48]	; 0x30
   1a4a4:	mov	r9, #0
   1a4a8:	mov	r0, #92	; 0x5c
   1a4ac:	cmp	r1, #0
   1a4b0:	beq	1a4c4 <__assert_fail@plt+0x91bc>
   1a4b4:	mov	r4, #0
   1a4b8:	cmp	r9, #0
   1a4bc:	beq	1aa50 <__assert_fail@plt+0x9748>
   1a4c0:	b	1aa8c <__assert_fail@plt+0x9784>
   1a4c4:	ldr	r1, [sp, #84]	; 0x54
   1a4c8:	mov	r4, #0
   1a4cc:	mov	r9, #0
   1a4d0:	tst	r1, #1
   1a4d4:	bne	1a514 <__assert_fail@plt+0x920c>
   1a4d8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a4dc:	cmp	r0, #0
   1a4e0:	mov	r0, r5
   1a4e4:	beq	1a508 <__assert_fail@plt+0x9200>
   1a4e8:	ldr	r1, [fp, #16]
   1a4ec:	ubfx	r0, r5, #5, #3
   1a4f0:	mov	r2, #1
   1a4f4:	ldr	r0, [r1, r0, lsl #2]
   1a4f8:	and	r1, r5, #31
   1a4fc:	tst	r0, r2, lsl r1
   1a500:	mov	r0, r5
   1a504:	bne	1a514 <__assert_fail@plt+0x920c>
   1a508:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a50c:	cmp	r1, #0
   1a510:	beq	1aa48 <__assert_fail@plt+0x9740>
   1a514:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a518:	tst	r1, #1
   1a51c:	bne	1ab74 <__assert_fail@plt+0x986c>
   1a520:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a524:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a528:	cmp	r1, #2
   1a52c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a530:	movwne	r1, #1
   1a534:	orr	r1, r1, r2
   1a538:	tst	r1, #1
   1a53c:	beq	1a548 <__assert_fail@plt+0x9240>
   1a540:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1a544:	b	1a584 <__assert_fail@plt+0x927c>
   1a548:	cmp	r8, sl
   1a54c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1a550:	movcc	r1, #39	; 0x27
   1a554:	strbcc	r1, [r6, r8]
   1a558:	add	r1, r8, #1
   1a55c:	cmp	r1, sl
   1a560:	movcc	r2, #36	; 0x24
   1a564:	strbcc	r2, [r6, r1]
   1a568:	add	r1, r8, #2
   1a56c:	add	r8, r8, #3
   1a570:	cmp	r1, sl
   1a574:	movcc	r2, #39	; 0x27
   1a578:	strbcc	r2, [r6, r1]
   1a57c:	mov	r1, #1
   1a580:	str	r1, [fp, #-56]	; 0xffffffc8
   1a584:	cmp	r8, sl
   1a588:	movcc	r1, #92	; 0x5c
   1a58c:	strbcc	r1, [r6, r8]
   1a590:	add	r8, r8, #1
   1a594:	cmp	r8, sl
   1a598:	and	r5, r5, r4
   1a59c:	add	r7, r7, #1
   1a5a0:	strbcc	r0, [r6, r8]
   1a5a4:	add	r8, r8, #1
   1a5a8:	cmn	lr, #1
   1a5ac:	bne	19fa8 <__assert_fail@plt+0x8ca0>
   1a5b0:	b	19fb4 <__assert_fail@plt+0x8cac>
   1a5b4:	ldr	r0, [sp, #36]	; 0x24
   1a5b8:	mov	r4, #0
   1a5bc:	mov	r9, #0
   1a5c0:	mov	r5, #0
   1a5c4:	cmp	r0, #0
   1a5c8:	beq	1a4d8 <__assert_fail@plt+0x91d0>
   1a5cc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1a5d0:	add	r7, r7, #1
   1a5d4:	cmn	lr, #1
   1a5d8:	bne	19fa8 <__assert_fail@plt+0x8ca0>
   1a5dc:	b	19fb4 <__assert_fail@plt+0x8cac>
   1a5e0:	mov	r0, #0
   1a5e4:	cmn	lr, #1
   1a5e8:	str	r0, [fp, #-36]	; 0xffffffdc
   1a5ec:	str	r0, [fp, #-40]	; 0xffffffd8
   1a5f0:	bne	1a604 <__assert_fail@plt+0x92fc>
   1a5f4:	mov	r0, ip
   1a5f8:	bl	111f4 <strlen@plt>
   1a5fc:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a600:	mov	lr, r0
   1a604:	add	r0, ip, r7
   1a608:	mov	r4, #1
   1a60c:	mov	r6, #0
   1a610:	str	lr, [sp, #28]
   1a614:	str	r0, [sp, #24]
   1a618:	sub	r0, fp, #40	; 0x28
   1a61c:	mov	r3, r0
   1a620:	str	r6, [sp, #44]	; 0x2c
   1a624:	add	r6, r6, r7
   1a628:	sub	r0, fp, #44	; 0x2c
   1a62c:	add	r1, ip, r6
   1a630:	sub	r2, lr, r6
   1a634:	bl	1d564 <__assert_fail@plt+0xc25c>
   1a638:	cmp	r0, #0
   1a63c:	beq	1aad4 <__assert_fail@plt+0x97cc>
   1a640:	cmn	r0, #1
   1a644:	beq	1aa94 <__assert_fail@plt+0x978c>
   1a648:	ldr	lr, [sp, #28]
   1a64c:	cmn	r0, #2
   1a650:	beq	1aa9c <__assert_fail@plt+0x9794>
   1a654:	ldr	r2, [sp, #64]	; 0x40
   1a658:	cmp	r0, #2
   1a65c:	mov	r1, #0
   1a660:	movwcc	r1, #1
   1a664:	eor	r2, r2, #1
   1a668:	orrs	r1, r2, r1
   1a66c:	bne	1a72c <__assert_fail@plt+0x9424>
   1a670:	ldr	r1, [sp, #44]	; 0x2c
   1a674:	ldr	r2, [sp, #24]
   1a678:	add	r1, r2, r1
   1a67c:	mov	r2, #1
   1a680:	ldrb	r3, [r1, r2]
   1a684:	sub	r3, r3, #91	; 0x5b
   1a688:	cmp	r3, #33	; 0x21
   1a68c:	bhi	1a720 <__assert_fail@plt+0x9418>
   1a690:	add	r6, pc, #0
   1a694:	ldr	pc, [r6, r3, lsl #2]
   1a698:	muleq	r1, r4, fp
   1a69c:	muleq	r1, r4, fp
   1a6a0:	andeq	sl, r1, r0, lsr #14
   1a6a4:	muleq	r1, r4, fp
   1a6a8:	andeq	sl, r1, r0, lsr #14
   1a6ac:	muleq	r1, r4, fp
   1a6b0:	andeq	sl, r1, r0, lsr #14
   1a6b4:	andeq	sl, r1, r0, lsr #14
   1a6b8:	andeq	sl, r1, r0, lsr #14
   1a6bc:	andeq	sl, r1, r0, lsr #14
   1a6c0:	andeq	sl, r1, r0, lsr #14
   1a6c4:	andeq	sl, r1, r0, lsr #14
   1a6c8:	andeq	sl, r1, r0, lsr #14
   1a6cc:	andeq	sl, r1, r0, lsr #14
   1a6d0:	andeq	sl, r1, r0, lsr #14
   1a6d4:	andeq	sl, r1, r0, lsr #14
   1a6d8:	andeq	sl, r1, r0, lsr #14
   1a6dc:	andeq	sl, r1, r0, lsr #14
   1a6e0:	andeq	sl, r1, r0, lsr #14
   1a6e4:	andeq	sl, r1, r0, lsr #14
   1a6e8:	andeq	sl, r1, r0, lsr #14
   1a6ec:	andeq	sl, r1, r0, lsr #14
   1a6f0:	andeq	sl, r1, r0, lsr #14
   1a6f4:	andeq	sl, r1, r0, lsr #14
   1a6f8:	andeq	sl, r1, r0, lsr #14
   1a6fc:	andeq	sl, r1, r0, lsr #14
   1a700:	andeq	sl, r1, r0, lsr #14
   1a704:	andeq	sl, r1, r0, lsr #14
   1a708:	andeq	sl, r1, r0, lsr #14
   1a70c:	andeq	sl, r1, r0, lsr #14
   1a710:	andeq	sl, r1, r0, lsr #14
   1a714:	andeq	sl, r1, r0, lsr #14
   1a718:	andeq	sl, r1, r0, lsr #14
   1a71c:	muleq	r1, r4, fp
   1a720:	add	r2, r2, #1
   1a724:	cmp	r2, r0
   1a728:	bcc	1a680 <__assert_fail@plt+0x9378>
   1a72c:	ldr	r6, [sp, #44]	; 0x2c
   1a730:	add	r6, r0, r6
   1a734:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a738:	bl	11128 <iswprint@plt>
   1a73c:	cmp	r0, #0
   1a740:	movwne	r0, #1
   1a744:	and	r4, r4, r0
   1a748:	sub	r0, fp, #40	; 0x28
   1a74c:	bl	110ec <mbsinit@plt>
   1a750:	ldr	lr, [sp, #28]
   1a754:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a758:	sub	r3, fp, #40	; 0x28
   1a75c:	cmp	r0, #0
   1a760:	beq	1a620 <__assert_fail@plt+0x9318>
   1a764:	b	1aadc <__assert_fail@plt+0x97d4>
   1a768:	ldr	r0, [sp, #32]
   1a76c:	cmp	r0, #0
   1a770:	beq	1a80c <__assert_fail@plt+0x9504>
   1a774:	add	r0, r7, #2
   1a778:	cmp	r0, lr
   1a77c:	bcs	1a80c <__assert_fail@plt+0x9504>
   1a780:	add	r1, ip, r7
   1a784:	ldrb	r1, [r1, #1]
   1a788:	cmp	r1, #63	; 0x3f
   1a78c:	bne	1a80c <__assert_fail@plt+0x9504>
   1a790:	ldrb	r5, [ip, r0]
   1a794:	sub	r1, r5, #33	; 0x21
   1a798:	cmp	r1, #29
   1a79c:	bhi	1a80c <__assert_fail@plt+0x9504>
   1a7a0:	movw	r3, #20929	; 0x51c1
   1a7a4:	mov	r2, #1
   1a7a8:	movt	r3, #14336	; 0x3800
   1a7ac:	tst	r3, r2, lsl r1
   1a7b0:	beq	1a80c <__assert_fail@plt+0x9504>
   1a7b4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a7b8:	tst	r1, #1
   1a7bc:	bne	1acb4 <__assert_fail@plt+0x99ac>
   1a7c0:	cmp	r8, sl
   1a7c4:	mov	r7, r0
   1a7c8:	mov	r4, #0
   1a7cc:	movcc	r1, #63	; 0x3f
   1a7d0:	strbcc	r1, [r6, r8]
   1a7d4:	add	r1, r8, #1
   1a7d8:	cmp	r1, sl
   1a7dc:	movcc	r2, #34	; 0x22
   1a7e0:	strbcc	r2, [r6, r1]
   1a7e4:	add	r1, r8, #2
   1a7e8:	cmp	r1, sl
   1a7ec:	movcc	r2, #34	; 0x22
   1a7f0:	strbcc	r2, [r6, r1]
   1a7f4:	add	r1, r8, #3
   1a7f8:	add	r8, r8, #4
   1a7fc:	cmp	r1, sl
   1a800:	movcc	r2, #63	; 0x3f
   1a804:	strbcc	r2, [r6, r1]
   1a808:	b	1a270 <__assert_fail@plt+0x8f68>
   1a80c:	mov	r5, #63	; 0x3f
   1a810:	mov	r4, #0
   1a814:	b	1a270 <__assert_fail@plt+0x8f68>
   1a818:	add	r1, r2, r7
   1a81c:	ldr	lr, [sp, #28]
   1a820:	mov	r3, #0
   1a824:	str	r1, [sp, #44]	; 0x2c
   1a828:	add	r1, r7, #1
   1a82c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1a830:	tst	r0, #1
   1a834:	bne	1a908 <__assert_fail@plt+0x9600>
   1a838:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a83c:	tst	r2, #1
   1a840:	bne	1abfc <__assert_fail@plt+0x98f4>
   1a844:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a848:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a84c:	cmp	r7, #2
   1a850:	movwne	r3, #1
   1a854:	orr	r3, r3, r2
   1a858:	tst	r3, #1
   1a85c:	bne	1a898 <__assert_fail@plt+0x9590>
   1a860:	cmp	r8, sl
   1a864:	add	r3, r8, #1
   1a868:	movcc	r2, #39	; 0x27
   1a86c:	strbcc	r2, [r6, r8]
   1a870:	cmp	r3, sl
   1a874:	movcc	r2, #36	; 0x24
   1a878:	strbcc	r2, [r6, r3]
   1a87c:	add	r3, r8, #2
   1a880:	add	r8, r8, #3
   1a884:	cmp	r3, sl
   1a888:	movcc	r2, #39	; 0x27
   1a88c:	strbcc	r2, [r6, r3]
   1a890:	mov	r2, #1
   1a894:	str	r2, [fp, #-56]	; 0xffffffc8
   1a898:	cmp	r8, sl
   1a89c:	movcc	r3, #92	; 0x5c
   1a8a0:	strbcc	r3, [r6, r8]
   1a8a4:	add	r3, r8, #1
   1a8a8:	cmp	r3, sl
   1a8ac:	andcc	r7, r5, #192	; 0xc0
   1a8b0:	movcc	r2, #48	; 0x30
   1a8b4:	orrcc	r7, r2, r7, lsr #6
   1a8b8:	strbcc	r7, [r6, r3]
   1a8bc:	add	r3, r8, #2
   1a8c0:	add	r8, r8, #3
   1a8c4:	cmp	r3, sl
   1a8c8:	lsrcc	r7, r5, #3
   1a8cc:	movcc	r2, #6
   1a8d0:	bficc	r7, r2, #3, #29
   1a8d4:	mov	r2, #6
   1a8d8:	strbcc	r7, [r6, r3]
   1a8dc:	bfi	r5, r2, #3, #29
   1a8e0:	mov	r3, #1
   1a8e4:	b	1a92c <__assert_fail@plt+0x9624>
   1a8e8:	cmp	r8, sl
   1a8ec:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1a8f0:	strbcc	r5, [r6, r8]
   1a8f4:	add	r8, r8, #1
   1a8f8:	ldrb	r5, [ip, r1]
   1a8fc:	add	r1, r1, #1
   1a900:	tst	r0, #1
   1a904:	beq	1a838 <__assert_fail@plt+0x9530>
   1a908:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a90c:	tst	r2, #1
   1a910:	beq	1a924 <__assert_fail@plt+0x961c>
   1a914:	cmp	r8, sl
   1a918:	movcc	r7, #92	; 0x5c
   1a91c:	strbcc	r7, [r6, r8]
   1a920:	add	r8, r8, #1
   1a924:	mov	r2, #0
   1a928:	str	r2, [fp, #-52]	; 0xffffffcc
   1a92c:	ldr	r2, [sp, #44]	; 0x2c
   1a930:	and	r9, r3, #1
   1a934:	cmp	r2, r1
   1a938:	bls	1aa38 <__assert_fail@plt+0x9730>
   1a93c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a940:	cmp	r9, #0
   1a944:	movwne	r9, #1
   1a948:	mvn	r7, r2
   1a94c:	orr	r7, r7, r9
   1a950:	tst	r7, #1
   1a954:	bne	1a8e8 <__assert_fail@plt+0x95e0>
   1a958:	cmp	r8, sl
   1a95c:	movcc	r7, #39	; 0x27
   1a960:	strbcc	r7, [r6, r8]
   1a964:	add	r7, r8, #1
   1a968:	add	r8, r8, #2
   1a96c:	cmp	r7, sl
   1a970:	movcc	r2, #39	; 0x27
   1a974:	strbcc	r2, [r6, r7]
   1a978:	mov	r2, #0
   1a97c:	str	r2, [fp, #-56]	; 0xffffffc8
   1a980:	b	1a8e8 <__assert_fail@plt+0x95e0>
   1a984:	cmp	r8, sl
   1a988:	mov	r2, #1
   1a98c:	movcc	r0, #39	; 0x27
   1a990:	strbcc	r0, [r6, r8]
   1a994:	add	r0, r8, #1
   1a998:	cmp	r0, sl
   1a99c:	movcc	r1, #36	; 0x24
   1a9a0:	strbcc	r1, [r6, r0]
   1a9a4:	add	r0, r8, #2
   1a9a8:	cmp	r0, sl
   1a9ac:	movcc	r1, #39	; 0x27
   1a9b0:	strbcc	r1, [r6, r0]
   1a9b4:	add	r0, r8, #3
   1a9b8:	cmp	r0, sl
   1a9bc:	add	r8, r0, #1
   1a9c0:	str	r2, [fp, #-56]	; 0xffffffc8
   1a9c4:	movcc	r1, #92	; 0x5c
   1a9c8:	strbcc	r1, [r6, r0]
   1a9cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a9d0:	cmp	r1, #2
   1a9d4:	beq	1aa28 <__assert_fail@plt+0x9720>
   1a9d8:	add	r1, r7, #1
   1a9dc:	mov	r4, #0
   1a9e0:	mov	r9, #1
   1a9e4:	mov	r5, #48	; 0x30
   1a9e8:	cmp	r1, lr
   1a9ec:	bcs	1a270 <__assert_fail@plt+0x8f68>
   1a9f0:	ldrb	r1, [ip, r1]
   1a9f4:	sub	r1, r1, #48	; 0x30
   1a9f8:	uxtb	r1, r1
   1a9fc:	cmp	r1, #9
   1aa00:	bhi	1a270 <__assert_fail@plt+0x8f68>
   1aa04:	cmp	r8, sl
   1aa08:	movcc	r1, #48	; 0x30
   1aa0c:	strbcc	r1, [r6, r8]
   1aa10:	add	r1, r0, #2
   1aa14:	add	r8, r0, #3
   1aa18:	cmp	r1, sl
   1aa1c:	movcc	r2, #48	; 0x30
   1aa20:	strbcc	r2, [r6, r1]
   1aa24:	b	1a270 <__assert_fail@plt+0x8f68>
   1aa28:	mov	r0, #48	; 0x30
   1aa2c:	mov	r9, #1
   1aa30:	mov	r4, #0
   1aa34:	b	1a508 <__assert_fail@plt+0x9200>
   1aa38:	cmp	r9, #0
   1aa3c:	sub	r7, r1, #1
   1aa40:	mov	r0, r5
   1aa44:	movwne	r9, #1
   1aa48:	cmp	r9, #0
   1aa4c:	bne	1aa8c <__assert_fail@plt+0x9784>
   1aa50:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1aa54:	tst	r1, #1
   1aa58:	beq	1aa8c <__assert_fail@plt+0x9784>
   1aa5c:	cmp	r8, sl
   1aa60:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1aa64:	movcc	r1, #39	; 0x27
   1aa68:	strbcc	r1, [r6, r8]
   1aa6c:	add	r1, r8, #1
   1aa70:	add	r8, r8, #2
   1aa74:	cmp	r1, sl
   1aa78:	movcc	r2, #39	; 0x27
   1aa7c:	strbcc	r2, [r6, r1]
   1aa80:	mov	r1, #0
   1aa84:	str	r1, [fp, #-56]	; 0xffffffc8
   1aa88:	b	1a594 <__assert_fail@plt+0x928c>
   1aa8c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1aa90:	b	1a594 <__assert_fail@plt+0x928c>
   1aa94:	mov	r4, #0
   1aa98:	b	1aad4 <__assert_fail@plt+0x97cc>
   1aa9c:	mov	r4, #0
   1aaa0:	cmp	lr, r6
   1aaa4:	bls	1aad4 <__assert_fail@plt+0x97cc>
   1aaa8:	ldr	ip, [fp, #-84]	; 0xffffffac
   1aaac:	ldr	r6, [sp, #44]	; 0x2c
   1aab0:	ldr	r0, [sp, #24]
   1aab4:	ldrb	r0, [r0, r6]
   1aab8:	cmp	r0, #0
   1aabc:	beq	1aadc <__assert_fail@plt+0x97d4>
   1aac0:	add	r6, r6, #1
   1aac4:	add	r0, r7, r6
   1aac8:	cmp	r0, lr
   1aacc:	bcc	1aab0 <__assert_fail@plt+0x97a8>
   1aad0:	b	1aadc <__assert_fail@plt+0x97d4>
   1aad4:	ldr	ip, [fp, #-84]	; 0xffffffac
   1aad8:	ldr	r6, [sp, #44]	; 0x2c
   1aadc:	mov	r1, r6
   1aae0:	ldr	r6, [sp, #80]	; 0x50
   1aae4:	b	1a43c <__assert_fail@plt+0x9134>
   1aae8:	mov	lr, r7
   1aaec:	b	1aaf4 <__assert_fail@plt+0x97ec>
   1aaf0:	mvn	lr, #0
   1aaf4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1aaf8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1aafc:	eor	r0, r7, #2
   1ab00:	orr	r0, r0, r8
   1ab04:	clz	r0, r0
   1ab08:	lsr	r0, r0, #5
   1ab0c:	tst	r1, r0
   1ab10:	bne	1ab9c <__assert_fail@plt+0x9894>
   1ab14:	mov	r0, r1
   1ab18:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1ab1c:	cmp	r7, #2
   1ab20:	movwne	r1, #1
   1ab24:	orr	r0, r0, r1
   1ab28:	tst	r0, #1
   1ab2c:	ldreq	r0, [sp, #60]	; 0x3c
   1ab30:	eoreq	r0, r0, #1
   1ab34:	tsteq	r0, #1
   1ab38:	bne	1ac48 <__assert_fail@plt+0x9940>
   1ab3c:	mov	r9, lr
   1ab40:	tst	r5, #1
   1ab44:	bne	1ac04 <__assert_fail@plt+0x98fc>
   1ab48:	ldr	r6, [sp, #56]	; 0x38
   1ab4c:	mov	r4, #0
   1ab50:	cmp	r6, #0
   1ab54:	beq	1ac40 <__assert_fail@plt+0x9938>
   1ab58:	ldr	r0, [sp, #84]	; 0x54
   1ab5c:	mov	r1, #0
   1ab60:	cmp	sl, #0
   1ab64:	mov	r5, #0
   1ab68:	str	r1, [fp, #-72]	; 0xffffffb8
   1ab6c:	beq	19d3c <__assert_fail@plt+0x8a34>
   1ab70:	b	1ac48 <__assert_fail@plt+0x9940>
   1ab74:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1ab78:	ldr	r2, [sp, #84]	; 0x54
   1ab7c:	b	1aba4 <__assert_fail@plt+0x989c>
   1ab80:	ldr	ip, [fp, #-84]	; 0xffffffac
   1ab84:	mov	r2, #1
   1ab88:	mov	lr, r4
   1ab8c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1ab90:	b	1aba4 <__assert_fail@plt+0x989c>
   1ab94:	ldr	r6, [sp, #80]	; 0x50
   1ab98:	ldr	ip, [fp, #-84]	; 0xffffffac
   1ab9c:	ldr	r2, [sp, #84]	; 0x54
   1aba0:	mov	r7, #2
   1aba4:	mov	r0, #0
   1aba8:	ldr	r1, [fp, #12]
   1abac:	tst	r2, #1
   1abb0:	mov	r2, r7
   1abb4:	mov	r3, lr
   1abb8:	str	r0, [sp, #8]
   1abbc:	ldr	r0, [sp, #72]	; 0x48
   1abc0:	movwne	r2, #4
   1abc4:	cmp	r7, #2
   1abc8:	movne	r2, r7
   1abcc:	str	r2, [sp]
   1abd0:	mov	r2, ip
   1abd4:	bic	r1, r1, #2
   1abd8:	str	r0, [sp, #12]
   1abdc:	ldr	r0, [sp, #76]	; 0x4c
   1abe0:	str	r1, [sp, #4]
   1abe4:	mov	r1, sl
   1abe8:	str	r0, [sp, #16]
   1abec:	mov	r0, r6
   1abf0:	bl	19cbc <__assert_fail@plt+0x89b4>
   1abf4:	mov	r8, r0
   1abf8:	b	1aca0 <__assert_fail@plt+0x9998>
   1abfc:	ldr	r2, [sp, #84]	; 0x54
   1ac00:	b	1aba4 <__assert_fail@plt+0x989c>
   1ac04:	mov	r0, #5
   1ac08:	ldr	r1, [sp, #56]	; 0x38
   1ac0c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1ac10:	mov	r3, r9
   1ac14:	str	r0, [sp]
   1ac18:	ldr	r0, [fp, #12]
   1ac1c:	str	r0, [sp, #4]
   1ac20:	ldr	r0, [fp, #16]
   1ac24:	str	r0, [sp, #8]
   1ac28:	ldr	r0, [sp, #72]	; 0x48
   1ac2c:	str	r0, [sp, #12]
   1ac30:	ldr	r0, [sp, #76]	; 0x4c
   1ac34:	str	r0, [sp, #16]
   1ac38:	ldr	r0, [sp, #80]	; 0x50
   1ac3c:	b	1abf0 <__assert_fail@plt+0x98e8>
   1ac40:	mov	r0, #0
   1ac44:	str	r0, [fp, #-72]	; 0xffffffb8
   1ac48:	ldr	r1, [sp, #92]	; 0x5c
   1ac4c:	cmp	r1, #0
   1ac50:	beq	1ac90 <__assert_fail@plt+0x9988>
   1ac54:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ac58:	ldr	r2, [sp, #80]	; 0x50
   1ac5c:	tst	r0, #1
   1ac60:	bne	1ac94 <__assert_fail@plt+0x998c>
   1ac64:	ldrb	r0, [r1]
   1ac68:	cmp	r0, #0
   1ac6c:	beq	1ac94 <__assert_fail@plt+0x998c>
   1ac70:	add	r1, r1, #1
   1ac74:	cmp	r8, sl
   1ac78:	strbcc	r0, [r2, r8]
   1ac7c:	add	r8, r8, #1
   1ac80:	ldrb	r0, [r1], #1
   1ac84:	cmp	r0, #0
   1ac88:	bne	1ac74 <__assert_fail@plt+0x996c>
   1ac8c:	b	1ac94 <__assert_fail@plt+0x998c>
   1ac90:	ldr	r2, [sp, #80]	; 0x50
   1ac94:	cmp	r8, sl
   1ac98:	movcc	r0, #0
   1ac9c:	strbcc	r0, [r2, r8]
   1aca0:	mov	r0, r8
   1aca4:	sub	sp, fp, #28
   1aca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1acac:	mov	r2, #1
   1acb0:	b	1ab8c <__assert_fail@plt+0x9884>
   1acb4:	ldr	r2, [sp, #84]	; 0x54
   1acb8:	mov	r7, #5
   1acbc:	b	1aba4 <__assert_fail@plt+0x989c>
   1acc0:	bl	112e4 <abort@plt>
   1acc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1acc8:	add	fp, sp, #28
   1accc:	sub	sp, sp, #28
   1acd0:	movw	r5, #61864	; 0xf1a8
   1acd4:	cmp	r2, #0
   1acd8:	mov	r4, r1
   1acdc:	mov	r7, r0
   1ace0:	str	r0, [sp, #20]
   1ace4:	movt	r5, #2
   1ace8:	movne	r5, r2
   1acec:	bl	1120c <__errno_location@plt>
   1acf0:	mov	sl, r0
   1acf4:	ldm	r5, {r0, r1}
   1acf8:	ldr	r2, [r5, #40]	; 0x28
   1acfc:	ldr	r3, [r5, #44]	; 0x2c
   1ad00:	add	r9, r5, #8
   1ad04:	ldr	r6, [sl]
   1ad08:	orr	r8, r1, #1
   1ad0c:	mov	r1, #0
   1ad10:	str	r6, [sp, #24]
   1ad14:	stm	sp, {r0, r8, r9}
   1ad18:	str	r2, [sp, #12]
   1ad1c:	str	r3, [sp, #16]
   1ad20:	mov	r0, #0
   1ad24:	mov	r2, r7
   1ad28:	mov	r3, r4
   1ad2c:	mov	r6, r4
   1ad30:	bl	19cbc <__assert_fail@plt+0x89b4>
   1ad34:	add	r7, r0, #1
   1ad38:	mov	r0, r7
   1ad3c:	bl	1bee0 <__assert_fail@plt+0xabd8>
   1ad40:	mov	r4, r0
   1ad44:	ldr	r0, [r5]
   1ad48:	ldr	r2, [r5, #44]	; 0x2c
   1ad4c:	ldr	r1, [r5, #40]	; 0x28
   1ad50:	mov	r3, r6
   1ad54:	stm	sp, {r0, r8, r9}
   1ad58:	str	r2, [sp, #16]
   1ad5c:	str	r1, [sp, #12]
   1ad60:	mov	r0, r4
   1ad64:	mov	r1, r7
   1ad68:	ldr	r2, [sp, #20]
   1ad6c:	bl	19cbc <__assert_fail@plt+0x89b4>
   1ad70:	ldr	r0, [sp, #24]
   1ad74:	str	r0, [sl]
   1ad78:	mov	r0, r4
   1ad7c:	sub	sp, fp, #28
   1ad80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad88:	add	fp, sp, #28
   1ad8c:	sub	sp, sp, #36	; 0x24
   1ad90:	movw	r8, #61864	; 0xf1a8
   1ad94:	cmp	r3, #0
   1ad98:	mov	r4, r2
   1ad9c:	str	r2, [sp, #24]
   1ada0:	mov	r5, r1
   1ada4:	mov	r6, r0
   1ada8:	str	r0, [sp, #20]
   1adac:	movt	r8, #2
   1adb0:	movne	r8, r3
   1adb4:	bl	1120c <__errno_location@plt>
   1adb8:	str	r0, [sp, #28]
   1adbc:	cmp	r4, #0
   1adc0:	add	sl, r8, #8
   1adc4:	ldm	r8, {r3, r9}
   1adc8:	ldr	r7, [r0]
   1adcc:	ldr	r1, [r8, #40]	; 0x28
   1add0:	ldr	r2, [r8, #44]	; 0x2c
   1add4:	mov	r0, #0
   1add8:	orreq	r9, r9, #1
   1addc:	str	r7, [sp, #32]
   1ade0:	mov	r7, r5
   1ade4:	stm	sp, {r3, r9, sl}
   1ade8:	str	r1, [sp, #12]
   1adec:	str	r2, [sp, #16]
   1adf0:	mov	r1, #0
   1adf4:	mov	r2, r6
   1adf8:	mov	r3, r5
   1adfc:	bl	19cbc <__assert_fail@plt+0x89b4>
   1ae00:	add	r4, r0, #1
   1ae04:	mov	r5, r0
   1ae08:	mov	r0, r4
   1ae0c:	bl	1bee0 <__assert_fail@plt+0xabd8>
   1ae10:	mov	r6, r0
   1ae14:	ldr	r0, [r8]
   1ae18:	ldr	r2, [r8, #44]	; 0x2c
   1ae1c:	ldr	r1, [r8, #40]	; 0x28
   1ae20:	mov	r3, r7
   1ae24:	stm	sp, {r0, r9, sl}
   1ae28:	str	r2, [sp, #16]
   1ae2c:	str	r1, [sp, #12]
   1ae30:	mov	r0, r6
   1ae34:	mov	r1, r4
   1ae38:	ldr	r2, [sp, #20]
   1ae3c:	bl	19cbc <__assert_fail@plt+0x89b4>
   1ae40:	ldr	r0, [sp, #24]
   1ae44:	ldr	r1, [sp, #32]
   1ae48:	ldr	r2, [sp, #28]
   1ae4c:	cmp	r0, #0
   1ae50:	str	r1, [r2]
   1ae54:	strne	r5, [r0]
   1ae58:	mov	r0, r6
   1ae5c:	sub	sp, fp, #28
   1ae60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ae68:	add	fp, sp, #24
   1ae6c:	movw	r5, #61724	; 0xf11c
   1ae70:	movw	r8, #61720	; 0xf118
   1ae74:	movt	r5, #2
   1ae78:	movt	r8, #2
   1ae7c:	ldr	r0, [r5]
   1ae80:	ldr	r4, [r8]
   1ae84:	cmp	r0, #2
   1ae88:	blt	1aeb4 <__assert_fail@plt+0x9bac>
   1ae8c:	add	r7, r4, #12
   1ae90:	mov	r6, #0
   1ae94:	ldr	r0, [r7, r6, lsl #3]
   1ae98:	bl	199b4 <__assert_fail@plt+0x86ac>
   1ae9c:	ldr	r1, [r5]
   1aea0:	add	r2, r6, #2
   1aea4:	add	r0, r6, #1
   1aea8:	mov	r6, r0
   1aeac:	cmp	r2, r1
   1aeb0:	blt	1ae94 <__assert_fail@plt+0x9b8c>
   1aeb4:	ldr	r0, [r4, #4]
   1aeb8:	movw	r7, #61912	; 0xf1d8
   1aebc:	movt	r7, #2
   1aec0:	cmp	r0, r7
   1aec4:	beq	1aedc <__assert_fail@plt+0x9bd4>
   1aec8:	bl	199b4 <__assert_fail@plt+0x86ac>
   1aecc:	movw	r0, #61728	; 0xf120
   1aed0:	mov	r6, #256	; 0x100
   1aed4:	movt	r0, #2
   1aed8:	strd	r6, [r0]
   1aedc:	movw	r6, #61728	; 0xf120
   1aee0:	movt	r6, #2
   1aee4:	cmp	r4, r6
   1aee8:	beq	1aef8 <__assert_fail@plt+0x9bf0>
   1aeec:	mov	r0, r4
   1aef0:	bl	199b4 <__assert_fail@plt+0x86ac>
   1aef4:	str	r6, [r8]
   1aef8:	mov	r0, #1
   1aefc:	str	r0, [r5]
   1af00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1af04:	movw	r3, #61864	; 0xf1a8
   1af08:	mvn	r2, #0
   1af0c:	movt	r3, #2
   1af10:	b	1af14 <__assert_fail@plt+0x9c0c>
   1af14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af18:	add	fp, sp, #28
   1af1c:	sub	sp, sp, #44	; 0x2c
   1af20:	mov	r7, r3
   1af24:	str	r2, [sp, #36]	; 0x24
   1af28:	str	r1, [sp, #32]
   1af2c:	mov	r5, r0
   1af30:	bl	1120c <__errno_location@plt>
   1af34:	cmp	r5, #0
   1af38:	blt	1b0a4 <__assert_fail@plt+0x9d9c>
   1af3c:	cmn	r5, #-2147483647	; 0x80000001
   1af40:	beq	1b0a4 <__assert_fail@plt+0x9d9c>
   1af44:	movw	r8, #61724	; 0xf11c
   1af48:	movw	r4, #61720	; 0xf118
   1af4c:	str	r0, [sp, #28]
   1af50:	ldr	r0, [r0]
   1af54:	movt	r8, #2
   1af58:	movt	r4, #2
   1af5c:	ldr	r1, [r8]
   1af60:	ldr	r6, [r4]
   1af64:	str	r0, [sp, #24]
   1af68:	cmp	r1, r5
   1af6c:	ble	1af78 <__assert_fail@plt+0x9c70>
   1af70:	mov	sl, r6
   1af74:	b	1afe0 <__assert_fail@plt+0x9cd8>
   1af78:	movw	r9, #61728	; 0xf120
   1af7c:	mov	r0, #8
   1af80:	add	r2, r5, #1
   1af84:	str	r1, [fp, #-32]	; 0xffffffe0
   1af88:	mvn	r3, #-2147483648	; 0x80000000
   1af8c:	movt	r9, #2
   1af90:	str	r0, [sp]
   1af94:	sub	r2, r2, r1
   1af98:	sub	r1, fp, #32
   1af9c:	subs	r0, r6, r9
   1afa0:	movne	r0, r6
   1afa4:	bl	1c0e0 <__assert_fail@plt+0xadd8>
   1afa8:	cmp	r6, r9
   1afac:	mov	sl, r0
   1afb0:	str	r0, [r4]
   1afb4:	ldrdeq	r0, [r9]
   1afb8:	stmeq	sl, {r0, r1}
   1afbc:	ldr	r1, [r8]
   1afc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1afc4:	add	r0, sl, r1, lsl #3
   1afc8:	sub	r1, r2, r1
   1afcc:	lsl	r2, r1, #3
   1afd0:	mov	r1, #0
   1afd4:	bl	11230 <memset@plt>
   1afd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1afdc:	str	r0, [r8]
   1afe0:	mov	r9, sl
   1afe4:	ldr	r6, [r9, r5, lsl #3]!
   1afe8:	ldr	r4, [r9, #4]!
   1afec:	ldm	r7, {r0, r1}
   1aff0:	ldr	r2, [r7, #40]	; 0x28
   1aff4:	ldr	r3, [r7, #44]	; 0x2c
   1aff8:	orr	r8, r1, #1
   1affc:	add	r1, r7, #8
   1b000:	stm	sp, {r0, r8}
   1b004:	add	r0, sp, #8
   1b008:	str	r1, [sp, #20]
   1b00c:	stm	r0, {r1, r2, r3}
   1b010:	mov	r0, r4
   1b014:	mov	r1, r6
   1b018:	ldr	r2, [sp, #32]
   1b01c:	ldr	r3, [sp, #36]	; 0x24
   1b020:	bl	19cbc <__assert_fail@plt+0x89b4>
   1b024:	cmp	r6, r0
   1b028:	bhi	1b08c <__assert_fail@plt+0x9d84>
   1b02c:	add	r6, r0, #1
   1b030:	movw	r0, #61912	; 0xf1d8
   1b034:	movt	r0, #2
   1b038:	str	r6, [sl, r5, lsl #3]
   1b03c:	cmp	r4, r0
   1b040:	beq	1b04c <__assert_fail@plt+0x9d44>
   1b044:	mov	r0, r4
   1b048:	bl	199b4 <__assert_fail@plt+0x86ac>
   1b04c:	mov	r0, r6
   1b050:	bl	1bee0 <__assert_fail@plt+0xabd8>
   1b054:	str	r0, [r9]
   1b058:	mov	r4, r0
   1b05c:	add	r3, sp, #8
   1b060:	ldr	r0, [r7]
   1b064:	ldr	r1, [r7, #40]	; 0x28
   1b068:	ldr	r2, [r7, #44]	; 0x2c
   1b06c:	stm	sp, {r0, r8}
   1b070:	ldr	r0, [sp, #20]
   1b074:	stm	r3, {r0, r1, r2}
   1b078:	mov	r0, r4
   1b07c:	mov	r1, r6
   1b080:	ldr	r2, [sp, #32]
   1b084:	ldr	r3, [sp, #36]	; 0x24
   1b088:	bl	19cbc <__assert_fail@plt+0x89b4>
   1b08c:	ldr	r0, [sp, #28]
   1b090:	ldr	r1, [sp, #24]
   1b094:	str	r1, [r0]
   1b098:	mov	r0, r4
   1b09c:	sub	sp, fp, #28
   1b0a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0a4:	bl	112e4 <abort@plt>
   1b0a8:	movw	r3, #61864	; 0xf1a8
   1b0ac:	movt	r3, #2
   1b0b0:	b	1af14 <__assert_fail@plt+0x9c0c>
   1b0b4:	movw	r3, #61864	; 0xf1a8
   1b0b8:	mov	r1, r0
   1b0bc:	mov	r0, #0
   1b0c0:	mvn	r2, #0
   1b0c4:	movt	r3, #2
   1b0c8:	b	1af14 <__assert_fail@plt+0x9c0c>
   1b0cc:	movw	r3, #61864	; 0xf1a8
   1b0d0:	mov	r2, r1
   1b0d4:	mov	r1, r0
   1b0d8:	mov	r0, #0
   1b0dc:	movt	r3, #2
   1b0e0:	b	1af14 <__assert_fail@plt+0x9c0c>
   1b0e4:	push	{fp, lr}
   1b0e8:	mov	fp, sp
   1b0ec:	sub	sp, sp, #48	; 0x30
   1b0f0:	vmov.i32	q8, #0	; 0x00000000
   1b0f4:	mov	ip, #32
   1b0f8:	mov	r3, sp
   1b0fc:	mov	lr, r2
   1b100:	cmp	r1, #10
   1b104:	add	r2, r3, #16
   1b108:	vst1.64	{d16-d17}, [r3], ip
   1b10c:	vst1.64	{d16-d17}, [r3]
   1b110:	vst1.64	{d16-d17}, [r2]
   1b114:	beq	1b134 <__assert_fail@plt+0x9e2c>
   1b118:	str	r1, [sp]
   1b11c:	mov	r3, sp
   1b120:	mov	r1, lr
   1b124:	mvn	r2, #0
   1b128:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b12c:	mov	sp, fp
   1b130:	pop	{fp, pc}
   1b134:	bl	112e4 <abort@plt>
   1b138:	push	{r4, sl, fp, lr}
   1b13c:	add	fp, sp, #8
   1b140:	sub	sp, sp, #48	; 0x30
   1b144:	mov	ip, r3
   1b148:	mov	r3, sp
   1b14c:	vmov.i32	q8, #0	; 0x00000000
   1b150:	mov	lr, #32
   1b154:	cmp	r1, #10
   1b158:	add	r4, r3, #16
   1b15c:	vst1.64	{d16-d17}, [r3], lr
   1b160:	vst1.64	{d16-d17}, [r3]
   1b164:	vst1.64	{d16-d17}, [r4]
   1b168:	beq	1b188 <__assert_fail@plt+0x9e80>
   1b16c:	str	r1, [sp]
   1b170:	mov	r1, r2
   1b174:	mov	r3, sp
   1b178:	mov	r2, ip
   1b17c:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b180:	sub	sp, fp, #8
   1b184:	pop	{r4, sl, fp, pc}
   1b188:	bl	112e4 <abort@plt>
   1b18c:	push	{fp, lr}
   1b190:	mov	fp, sp
   1b194:	sub	sp, sp, #48	; 0x30
   1b198:	mov	r3, sp
   1b19c:	vmov.i32	q8, #0	; 0x00000000
   1b1a0:	mov	ip, #32
   1b1a4:	cmp	r0, #10
   1b1a8:	add	r2, r3, #16
   1b1ac:	vst1.64	{d16-d17}, [r3], ip
   1b1b0:	vst1.64	{d16-d17}, [r3]
   1b1b4:	vst1.64	{d16-d17}, [r2]
   1b1b8:	beq	1b1d8 <__assert_fail@plt+0x9ed0>
   1b1bc:	str	r0, [sp]
   1b1c0:	mov	r3, sp
   1b1c4:	mov	r0, #0
   1b1c8:	mvn	r2, #0
   1b1cc:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b1d0:	mov	sp, fp
   1b1d4:	pop	{fp, pc}
   1b1d8:	bl	112e4 <abort@plt>
   1b1dc:	push	{fp, lr}
   1b1e0:	mov	fp, sp
   1b1e4:	sub	sp, sp, #48	; 0x30
   1b1e8:	mov	r3, sp
   1b1ec:	vmov.i32	q8, #0	; 0x00000000
   1b1f0:	mov	ip, #32
   1b1f4:	cmp	r0, #10
   1b1f8:	add	lr, r3, #16
   1b1fc:	vst1.64	{d16-d17}, [r3], ip
   1b200:	vst1.64	{d16-d17}, [r3]
   1b204:	vst1.64	{d16-d17}, [lr]
   1b208:	beq	1b224 <__assert_fail@plt+0x9f1c>
   1b20c:	str	r0, [sp]
   1b210:	mov	r3, sp
   1b214:	mov	r0, #0
   1b218:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b21c:	mov	sp, fp
   1b220:	pop	{fp, pc}
   1b224:	bl	112e4 <abort@plt>
   1b228:	push	{r4, sl, fp, lr}
   1b22c:	add	fp, sp, #8
   1b230:	sub	sp, sp, #48	; 0x30
   1b234:	mov	lr, r0
   1b238:	movw	r0, #61864	; 0xf1a8
   1b23c:	mov	r3, #32
   1b240:	mov	ip, r1
   1b244:	mov	r4, #1
   1b248:	movt	r0, #2
   1b24c:	add	r1, r0, #16
   1b250:	vld1.64	{d16-d17}, [r0], r3
   1b254:	mov	r3, sp
   1b258:	vld1.64	{d18-d19}, [r1]
   1b25c:	add	r1, r3, #16
   1b260:	vld1.64	{d20-d21}, [r0]
   1b264:	add	r0, r3, #32
   1b268:	vst1.64	{d18-d19}, [r1]
   1b26c:	mov	r1, r3
   1b270:	vst1.64	{d20-d21}, [r0]
   1b274:	mov	r0, #28
   1b278:	and	r0, r0, r2, lsr #3
   1b27c:	and	r2, r2, #31
   1b280:	vst1.64	{d16-d17}, [r1], r0
   1b284:	ldr	r0, [r1, #8]
   1b288:	bic	r4, r4, r0, lsr r2
   1b28c:	eor	r0, r0, r4, lsl r2
   1b290:	mov	r2, ip
   1b294:	str	r0, [r1, #8]
   1b298:	mov	r0, #0
   1b29c:	mov	r1, lr
   1b2a0:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b2a4:	sub	sp, fp, #8
   1b2a8:	pop	{r4, sl, fp, pc}
   1b2ac:	push	{fp, lr}
   1b2b0:	mov	fp, sp
   1b2b4:	sub	sp, sp, #48	; 0x30
   1b2b8:	mov	ip, r0
   1b2bc:	movw	r0, #61864	; 0xf1a8
   1b2c0:	mov	r3, #32
   1b2c4:	movt	r0, #2
   1b2c8:	add	r2, r0, #16
   1b2cc:	vld1.64	{d16-d17}, [r0], r3
   1b2d0:	mov	r3, sp
   1b2d4:	vld1.64	{d18-d19}, [r2]
   1b2d8:	add	r2, r3, #16
   1b2dc:	vld1.64	{d20-d21}, [r0]
   1b2e0:	add	r0, r3, #32
   1b2e4:	vst1.64	{d18-d19}, [r2]
   1b2e8:	mov	r2, r3
   1b2ec:	vst1.64	{d20-d21}, [r0]
   1b2f0:	mov	r0, #28
   1b2f4:	and	r0, r0, r1, lsr #3
   1b2f8:	and	r1, r1, #31
   1b2fc:	vst1.64	{d16-d17}, [r2], r0
   1b300:	mov	r0, #1
   1b304:	ldr	lr, [r2, #8]
   1b308:	bic	r0, r0, lr, lsr r1
   1b30c:	eor	r0, lr, r0, lsl r1
   1b310:	mov	r1, ip
   1b314:	str	r0, [r2, #8]
   1b318:	mov	r0, #0
   1b31c:	mvn	r2, #0
   1b320:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b324:	mov	sp, fp
   1b328:	pop	{fp, pc}
   1b32c:	push	{fp, lr}
   1b330:	mov	fp, sp
   1b334:	sub	sp, sp, #48	; 0x30
   1b338:	movw	r2, #61864	; 0xf1a8
   1b33c:	mov	r3, #32
   1b340:	mov	r1, r0
   1b344:	movt	r2, #2
   1b348:	add	r0, r2, #16
   1b34c:	vld1.64	{d16-d17}, [r2], r3
   1b350:	mov	r3, sp
   1b354:	vld1.64	{d18-d19}, [r0]
   1b358:	add	r0, r3, #16
   1b35c:	vld1.64	{d20-d21}, [r2]
   1b360:	mov	r2, r3
   1b364:	vst1.64	{d18-d19}, [r0]
   1b368:	add	r0, r3, #32
   1b36c:	vst1.64	{d20-d21}, [r0]
   1b370:	mov	r0, #12
   1b374:	vst1.64	{d16-d17}, [r2], r0
   1b378:	ldr	r0, [r2]
   1b37c:	orr	r0, r0, #67108864	; 0x4000000
   1b380:	str	r0, [r2]
   1b384:	mov	r0, #0
   1b388:	mvn	r2, #0
   1b38c:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b390:	mov	sp, fp
   1b394:	pop	{fp, pc}
   1b398:	push	{fp, lr}
   1b39c:	mov	fp, sp
   1b3a0:	sub	sp, sp, #48	; 0x30
   1b3a4:	mov	ip, r1
   1b3a8:	mov	r1, r0
   1b3ac:	movw	r0, #61864	; 0xf1a8
   1b3b0:	mov	r3, #32
   1b3b4:	movt	r0, #2
   1b3b8:	add	r2, r0, #16
   1b3bc:	vld1.64	{d16-d17}, [r0], r3
   1b3c0:	mov	r3, sp
   1b3c4:	vld1.64	{d18-d19}, [r2]
   1b3c8:	add	r2, r3, #16
   1b3cc:	vld1.64	{d20-d21}, [r0]
   1b3d0:	add	r0, r3, #32
   1b3d4:	vst1.64	{d18-d19}, [r2]
   1b3d8:	mov	r2, r3
   1b3dc:	vst1.64	{d20-d21}, [r0]
   1b3e0:	mov	r0, #12
   1b3e4:	vst1.64	{d16-d17}, [r2], r0
   1b3e8:	ldr	r0, [r2]
   1b3ec:	orr	r0, r0, #67108864	; 0x4000000
   1b3f0:	str	r0, [r2]
   1b3f4:	mov	r0, #0
   1b3f8:	mov	r2, ip
   1b3fc:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b400:	mov	sp, fp
   1b404:	pop	{fp, pc}
   1b408:	push	{r4, sl, fp, lr}
   1b40c:	add	fp, sp, #8
   1b410:	sub	sp, sp, #96	; 0x60
   1b414:	mov	ip, r2
   1b418:	mov	r2, sp
   1b41c:	vmov.i32	q8, #0	; 0x00000000
   1b420:	mov	r4, #28
   1b424:	cmp	r1, #10
   1b428:	mov	r3, r2
   1b42c:	add	lr, r2, #16
   1b430:	vst1.64	{d16-d17}, [r3], r4
   1b434:	vst1.64	{d16-d17}, [lr]
   1b438:	vst1.32	{d16-d17}, [r3]
   1b43c:	beq	1b48c <__assert_fail@plt+0xa184>
   1b440:	vld1.64	{d16-d17}, [r2], r4
   1b444:	vld1.64	{d18-d19}, [lr]
   1b448:	add	r3, sp, #48	; 0x30
   1b44c:	add	r4, r3, #4
   1b450:	vld1.32	{d20-d21}, [r2]
   1b454:	add	r2, r3, #20
   1b458:	vst1.32	{d16-d17}, [r4]
   1b45c:	vst1.32	{d18-d19}, [r2]
   1b460:	add	r2, r3, #32
   1b464:	vst1.32	{d20-d21}, [r2]
   1b468:	str	r1, [sp, #48]	; 0x30
   1b46c:	mvn	r2, #0
   1b470:	ldr	r1, [sp, #60]	; 0x3c
   1b474:	orr	r1, r1, #67108864	; 0x4000000
   1b478:	str	r1, [sp, #60]	; 0x3c
   1b47c:	mov	r1, ip
   1b480:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b484:	sub	sp, fp, #8
   1b488:	pop	{r4, sl, fp, pc}
   1b48c:	bl	112e4 <abort@plt>
   1b490:	push	{r4, r5, fp, lr}
   1b494:	add	fp, sp, #8
   1b498:	sub	sp, sp, #48	; 0x30
   1b49c:	mov	ip, r3
   1b4a0:	movw	r3, #61864	; 0xf1a8
   1b4a4:	mov	lr, #32
   1b4a8:	cmp	r1, #0
   1b4ac:	mov	r5, sp
   1b4b0:	movt	r3, #2
   1b4b4:	cmpne	r2, #0
   1b4b8:	add	r4, r3, #16
   1b4bc:	vld1.64	{d16-d17}, [r3], lr
   1b4c0:	vld1.64	{d18-d19}, [r4]
   1b4c4:	add	r4, r5, #16
   1b4c8:	vld1.64	{d20-d21}, [r3]
   1b4cc:	vst1.64	{d16-d17}, [r5], lr
   1b4d0:	mov	r3, #10
   1b4d4:	vst1.64	{d18-d19}, [r4]
   1b4d8:	vst1.64	{d20-d21}, [r5]
   1b4dc:	str	r3, [sp]
   1b4e0:	bne	1b4e8 <__assert_fail@plt+0xa1e0>
   1b4e4:	bl	112e4 <abort@plt>
   1b4e8:	str	r2, [sp, #44]	; 0x2c
   1b4ec:	str	r1, [sp, #40]	; 0x28
   1b4f0:	mov	r3, sp
   1b4f4:	mov	r1, ip
   1b4f8:	mvn	r2, #0
   1b4fc:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b500:	sub	sp, fp, #8
   1b504:	pop	{r4, r5, fp, pc}
   1b508:	push	{r4, r5, fp, lr}
   1b50c:	add	fp, sp, #8
   1b510:	sub	sp, sp, #48	; 0x30
   1b514:	mov	lr, r3
   1b518:	movw	r3, #61864	; 0xf1a8
   1b51c:	mov	ip, #32
   1b520:	cmp	r1, #0
   1b524:	mov	r5, sp
   1b528:	movt	r3, #2
   1b52c:	cmpne	r2, #0
   1b530:	add	r4, r3, #16
   1b534:	vld1.64	{d16-d17}, [r3], ip
   1b538:	vld1.64	{d18-d19}, [r4]
   1b53c:	add	r4, r5, #16
   1b540:	vld1.64	{d20-d21}, [r3]
   1b544:	vst1.64	{d16-d17}, [r5], ip
   1b548:	mov	r3, #10
   1b54c:	vst1.64	{d18-d19}, [r4]
   1b550:	vst1.64	{d20-d21}, [r5]
   1b554:	str	r3, [sp]
   1b558:	bne	1b560 <__assert_fail@plt+0xa258>
   1b55c:	bl	112e4 <abort@plt>
   1b560:	ldr	ip, [fp, #8]
   1b564:	str	r2, [sp, #44]	; 0x2c
   1b568:	str	r1, [sp, #40]	; 0x28
   1b56c:	mov	r3, sp
   1b570:	mov	r1, lr
   1b574:	mov	r2, ip
   1b578:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b57c:	sub	sp, fp, #8
   1b580:	pop	{r4, r5, fp, pc}
   1b584:	push	{r4, sl, fp, lr}
   1b588:	add	fp, sp, #8
   1b58c:	sub	sp, sp, #48	; 0x30
   1b590:	mov	ip, r2
   1b594:	movw	r2, #61864	; 0xf1a8
   1b598:	mov	lr, #32
   1b59c:	cmp	r0, #0
   1b5a0:	mov	r4, sp
   1b5a4:	movt	r2, #2
   1b5a8:	cmpne	r1, #0
   1b5ac:	add	r3, r2, #16
   1b5b0:	vld1.64	{d16-d17}, [r2], lr
   1b5b4:	vld1.64	{d18-d19}, [r3]
   1b5b8:	add	r3, r4, #16
   1b5bc:	vld1.64	{d20-d21}, [r2]
   1b5c0:	vst1.64	{d16-d17}, [r4], lr
   1b5c4:	mov	r2, #10
   1b5c8:	vst1.64	{d18-d19}, [r3]
   1b5cc:	vst1.64	{d20-d21}, [r4]
   1b5d0:	str	r2, [sp]
   1b5d4:	bne	1b5dc <__assert_fail@plt+0xa2d4>
   1b5d8:	bl	112e4 <abort@plt>
   1b5dc:	str	r1, [sp, #44]	; 0x2c
   1b5e0:	str	r0, [sp, #40]	; 0x28
   1b5e4:	mov	r3, sp
   1b5e8:	mov	r0, #0
   1b5ec:	mov	r1, ip
   1b5f0:	mvn	r2, #0
   1b5f4:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b5f8:	sub	sp, fp, #8
   1b5fc:	pop	{r4, sl, fp, pc}
   1b600:	push	{r4, r5, fp, lr}
   1b604:	add	fp, sp, #8
   1b608:	sub	sp, sp, #48	; 0x30
   1b60c:	mov	lr, r2
   1b610:	movw	r2, #61864	; 0xf1a8
   1b614:	mov	ip, r3
   1b618:	mov	r3, #32
   1b61c:	cmp	r0, #0
   1b620:	mov	r5, sp
   1b624:	movt	r2, #2
   1b628:	cmpne	r1, #0
   1b62c:	add	r4, r2, #16
   1b630:	vld1.64	{d16-d17}, [r2], r3
   1b634:	vld1.64	{d18-d19}, [r4]
   1b638:	add	r4, r5, #16
   1b63c:	vld1.64	{d20-d21}, [r2]
   1b640:	vst1.64	{d16-d17}, [r5], r3
   1b644:	mov	r2, #10
   1b648:	vst1.64	{d18-d19}, [r4]
   1b64c:	vst1.64	{d20-d21}, [r5]
   1b650:	str	r2, [sp]
   1b654:	bne	1b65c <__assert_fail@plt+0xa354>
   1b658:	bl	112e4 <abort@plt>
   1b65c:	str	r1, [sp, #44]	; 0x2c
   1b660:	str	r0, [sp, #40]	; 0x28
   1b664:	mov	r3, sp
   1b668:	mov	r0, #0
   1b66c:	mov	r1, lr
   1b670:	mov	r2, ip
   1b674:	bl	1af14 <__assert_fail@plt+0x9c0c>
   1b678:	sub	sp, fp, #8
   1b67c:	pop	{r4, r5, fp, pc}
   1b680:	movw	r3, #61736	; 0xf128
   1b684:	movt	r3, #2
   1b688:	b	1af14 <__assert_fail@plt+0x9c0c>
   1b68c:	movw	r3, #61736	; 0xf128
   1b690:	mov	r2, r1
   1b694:	mov	r1, r0
   1b698:	mov	r0, #0
   1b69c:	movt	r3, #2
   1b6a0:	b	1af14 <__assert_fail@plt+0x9c0c>
   1b6a4:	movw	r3, #61736	; 0xf128
   1b6a8:	mvn	r2, #0
   1b6ac:	movt	r3, #2
   1b6b0:	b	1af14 <__assert_fail@plt+0x9c0c>
   1b6b4:	movw	r3, #61736	; 0xf128
   1b6b8:	mov	r1, r0
   1b6bc:	mov	r0, #0
   1b6c0:	mvn	r2, #0
   1b6c4:	movt	r3, #2
   1b6c8:	b	1af14 <__assert_fail@plt+0x9c0c>
   1b6cc:	push	{r4, r5, fp, lr}
   1b6d0:	add	fp, sp, #8
   1b6d4:	mov	r5, r0
   1b6d8:	mov	r4, r1
   1b6dc:	mov	r0, #0
   1b6e0:	mov	r2, #5
   1b6e4:	mov	r1, r5
   1b6e8:	bl	11104 <dcgettext@plt>
   1b6ec:	cmp	r0, r5
   1b6f0:	popne	{r4, r5, fp, pc}
   1b6f4:	bl	1d52c <__assert_fail@plt+0xc224>
   1b6f8:	ldrb	r1, [r0]
   1b6fc:	and	r1, r1, #223	; 0xdf
   1b700:	cmp	r1, #71	; 0x47
   1b704:	beq	1b76c <__assert_fail@plt+0xa464>
   1b708:	cmp	r1, #85	; 0x55
   1b70c:	bne	1b790 <__assert_fail@plt+0xa488>
   1b710:	ldrb	r1, [r0, #1]
   1b714:	and	r1, r1, #223	; 0xdf
   1b718:	cmp	r1, #84	; 0x54
   1b71c:	bne	1b790 <__assert_fail@plt+0xa488>
   1b720:	ldrb	r1, [r0, #2]
   1b724:	and	r1, r1, #223	; 0xdf
   1b728:	cmp	r1, #70	; 0x46
   1b72c:	ldrbeq	r1, [r0, #3]
   1b730:	cmpeq	r1, #45	; 0x2d
   1b734:	bne	1b790 <__assert_fail@plt+0xa488>
   1b738:	ldrb	r1, [r0, #4]
   1b73c:	cmp	r1, #56	; 0x38
   1b740:	ldrbeq	r0, [r0, #5]
   1b744:	cmpeq	r0, #0
   1b748:	bne	1b790 <__assert_fail@plt+0xa488>
   1b74c:	ldrb	r1, [r5]
   1b750:	movw	r2, #59412	; 0xe814
   1b754:	movw	r0, #59416	; 0xe818
   1b758:	movt	r2, #1
   1b75c:	movt	r0, #1
   1b760:	cmp	r1, #96	; 0x60
   1b764:	moveq	r0, r2
   1b768:	pop	{r4, r5, fp, pc}
   1b76c:	ldrb	r1, [r0, #1]
   1b770:	and	r1, r1, #223	; 0xdf
   1b774:	cmp	r1, #66	; 0x42
   1b778:	bne	1b790 <__assert_fail@plt+0xa488>
   1b77c:	ldrb	r1, [r0, #2]
   1b780:	cmp	r1, #49	; 0x31
   1b784:	ldrbeq	r1, [r0, #3]
   1b788:	cmpeq	r1, #56	; 0x38
   1b78c:	beq	1b7ac <__assert_fail@plt+0xa4a4>
   1b790:	movw	r1, #59406	; 0xe80e
   1b794:	movw	r0, #59410	; 0xe812
   1b798:	cmp	r4, #9
   1b79c:	movt	r1, #1
   1b7a0:	movt	r0, #1
   1b7a4:	moveq	r0, r1
   1b7a8:	pop	{r4, r5, fp, pc}
   1b7ac:	ldrb	r1, [r0, #4]
   1b7b0:	cmp	r1, #48	; 0x30
   1b7b4:	ldrbeq	r1, [r0, #5]
   1b7b8:	cmpeq	r1, #51	; 0x33
   1b7bc:	bne	1b790 <__assert_fail@plt+0xa488>
   1b7c0:	ldrb	r1, [r0, #6]
   1b7c4:	cmp	r1, #48	; 0x30
   1b7c8:	ldrbeq	r0, [r0, #7]
   1b7cc:	cmpeq	r0, #0
   1b7d0:	bne	1b790 <__assert_fail@plt+0xa488>
   1b7d4:	ldrb	r1, [r5]
   1b7d8:	movw	r2, #59420	; 0xe81c
   1b7dc:	movw	r0, #59424	; 0xe820
   1b7e0:	movt	r2, #1
   1b7e4:	movt	r0, #1
   1b7e8:	b	1b760 <__assert_fail@plt+0xa458>
   1b7ec:	mov	r1, #0
   1b7f0:	mov	r2, #3
   1b7f4:	b	1d34c <__assert_fail@plt+0xc044>
   1b7f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b7fc:	add	fp, sp, #24
   1b800:	sub	sp, sp, #32
   1b804:	ldr	r6, [fp, #12]
   1b808:	ldr	r7, [fp, #8]
   1b80c:	mov	r4, r2
   1b810:	mov	r8, r0
   1b814:	cmp	r1, #0
   1b818:	beq	1b840 <__assert_fail@plt+0xa538>
   1b81c:	movw	r2, #59512	; 0xe878
   1b820:	mov	r5, r1
   1b824:	str	r3, [sp, #4]
   1b828:	str	r4, [sp]
   1b82c:	mov	r0, r8
   1b830:	mov	r1, #1
   1b834:	movt	r2, #1
   1b838:	mov	r3, r5
   1b83c:	b	1b858 <__assert_fail@plt+0xa550>
   1b840:	movw	r2, #59524	; 0xe884
   1b844:	str	r3, [sp]
   1b848:	mov	r0, r8
   1b84c:	mov	r1, #1
   1b850:	mov	r3, r4
   1b854:	movt	r2, #1
   1b858:	bl	11254 <__fprintf_chk@plt>
   1b85c:	movw	r1, #59531	; 0xe88b
   1b860:	mov	r0, #0
   1b864:	mov	r2, #5
   1b868:	movt	r1, #1
   1b86c:	bl	11104 <dcgettext@plt>
   1b870:	movw	r2, #60249	; 0xeb59
   1b874:	mov	r3, r0
   1b878:	movw	r0, #2022	; 0x7e6
   1b87c:	mov	r1, #1
   1b880:	str	r0, [sp]
   1b884:	movt	r2, #1
   1b888:	mov	r0, r8
   1b88c:	bl	11254 <__fprintf_chk@plt>
   1b890:	movw	r4, #56610	; 0xdd22
   1b894:	mov	r1, r8
   1b898:	movt	r4, #1
   1b89c:	mov	r0, r4
   1b8a0:	bl	11068 <fputs_unlocked@plt>
   1b8a4:	movw	r1, #59535	; 0xe88f
   1b8a8:	mov	r0, #0
   1b8ac:	mov	r2, #5
   1b8b0:	movt	r1, #1
   1b8b4:	bl	11104 <dcgettext@plt>
   1b8b8:	movw	r3, #59706	; 0xe93a
   1b8bc:	mov	r2, r0
   1b8c0:	mov	r0, r8
   1b8c4:	mov	r1, #1
   1b8c8:	movt	r3, #1
   1b8cc:	bl	11254 <__fprintf_chk@plt>
   1b8d0:	mov	r0, r4
   1b8d4:	mov	r1, r8
   1b8d8:	bl	11068 <fputs_unlocked@plt>
   1b8dc:	cmp	r6, #9
   1b8e0:	bhi	1b91c <__assert_fail@plt+0xa614>
   1b8e4:	add	r0, pc, #0
   1b8e8:	ldr	pc, [r0, r6, lsl #2]
   1b8ec:	andeq	fp, r1, r4, lsl r9
   1b8f0:	andeq	fp, r1, r8, lsr #18
   1b8f4:	andeq	fp, r1, r8, asr r9
   1b8f8:	andeq	fp, r1, r0, lsl #19
   1b8fc:	andeq	fp, r1, r8, lsr #19
   1b900:	ldrdeq	fp, [r1], -r0
   1b904:	strdeq	fp, [r1], -r8
   1b908:	andeq	fp, r1, r0, lsr sl
   1b90c:	ldrdeq	fp, [r1], -r0
   1b910:	andeq	fp, r1, r8, ror sl
   1b914:	sub	sp, fp, #24
   1b918:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b91c:	movw	r1, #60059	; 0xea9b
   1b920:	movt	r1, #1
   1b924:	b	1ba80 <__assert_fail@plt+0xa778>
   1b928:	movw	r1, #59740	; 0xe95c
   1b92c:	mov	r0, #0
   1b930:	mov	r2, #5
   1b934:	movt	r1, #1
   1b938:	bl	11104 <dcgettext@plt>
   1b93c:	ldr	r3, [r7]
   1b940:	mov	r2, r0
   1b944:	mov	r0, r8
   1b948:	mov	r1, #1
   1b94c:	sub	sp, fp, #24
   1b950:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b954:	b	11254 <__fprintf_chk@plt>
   1b958:	movw	r1, #59756	; 0xe96c
   1b95c:	mov	r0, #0
   1b960:	mov	r2, #5
   1b964:	movt	r1, #1
   1b968:	bl	11104 <dcgettext@plt>
   1b96c:	mov	r2, r0
   1b970:	ldr	r3, [r7]
   1b974:	ldr	r0, [r7, #4]
   1b978:	str	r0, [sp]
   1b97c:	b	1ba6c <__assert_fail@plt+0xa764>
   1b980:	movw	r1, #59779	; 0xe983
   1b984:	mov	r0, #0
   1b988:	mov	r2, #5
   1b98c:	movt	r1, #1
   1b990:	bl	11104 <dcgettext@plt>
   1b994:	ldr	r3, [r7]
   1b998:	mov	r2, r0
   1b99c:	ldmib	r7, {r0, r1}
   1b9a0:	stm	sp, {r0, r1}
   1b9a4:	b	1ba6c <__assert_fail@plt+0xa764>
   1b9a8:	movw	r1, #59807	; 0xe99f
   1b9ac:	mov	r0, #0
   1b9b0:	mov	r2, #5
   1b9b4:	movt	r1, #1
   1b9b8:	bl	11104 <dcgettext@plt>
   1b9bc:	ldr	r3, [r7]
   1b9c0:	mov	r2, r0
   1b9c4:	ldmib	r7, {r0, r1, r7}
   1b9c8:	stm	sp, {r0, r1, r7}
   1b9cc:	b	1ba6c <__assert_fail@plt+0xa764>
   1b9d0:	movw	r1, #59839	; 0xe9bf
   1b9d4:	mov	r0, #0
   1b9d8:	mov	r2, #5
   1b9dc:	movt	r1, #1
   1b9e0:	bl	11104 <dcgettext@plt>
   1b9e4:	ldr	r3, [r7]
   1b9e8:	mov	r2, r0
   1b9ec:	ldmib	r7, {r0, r1, r6, r7}
   1b9f0:	stm	sp, {r0, r1, r6, r7}
   1b9f4:	b	1ba6c <__assert_fail@plt+0xa764>
   1b9f8:	movw	r1, #59875	; 0xe9e3
   1b9fc:	mov	r0, #0
   1ba00:	mov	r2, #5
   1ba04:	movt	r1, #1
   1ba08:	bl	11104 <dcgettext@plt>
   1ba0c:	ldr	r3, [r7]
   1ba10:	mov	r2, r0
   1ba14:	ldmib	r7, {r0, r1, r6}
   1ba18:	ldr	r5, [r7, #16]
   1ba1c:	ldr	r7, [r7, #20]
   1ba20:	stm	sp, {r0, r1, r6}
   1ba24:	str	r5, [sp, #12]
   1ba28:	str	r7, [sp, #16]
   1ba2c:	b	1ba6c <__assert_fail@plt+0xa764>
   1ba30:	movw	r1, #59915	; 0xea0b
   1ba34:	mov	r0, #0
   1ba38:	mov	r2, #5
   1ba3c:	movt	r1, #1
   1ba40:	bl	11104 <dcgettext@plt>
   1ba44:	ldr	r3, [r7]
   1ba48:	mov	r2, r0
   1ba4c:	ldmib	r7, {r0, r1, r6}
   1ba50:	ldr	r5, [r7, #16]
   1ba54:	ldr	r4, [r7, #20]
   1ba58:	ldr	r7, [r7, #24]
   1ba5c:	stm	sp, {r0, r1, r6}
   1ba60:	str	r5, [sp, #12]
   1ba64:	str	r4, [sp, #16]
   1ba68:	str	r7, [sp, #20]
   1ba6c:	mov	r0, r8
   1ba70:	mov	r1, #1
   1ba74:	b	1bb20 <__assert_fail@plt+0xa818>
   1ba78:	movw	r1, #60007	; 0xea67
   1ba7c:	movt	r1, #1
   1ba80:	mov	r0, #0
   1ba84:	mov	r2, #5
   1ba88:	bl	11104 <dcgettext@plt>
   1ba8c:	mov	ip, r0
   1ba90:	ldr	r3, [r7]
   1ba94:	ldr	r0, [r7, #4]
   1ba98:	ldr	r1, [r7, #8]
   1ba9c:	ldr	r6, [r7, #12]
   1baa0:	ldr	r5, [r7, #16]
   1baa4:	ldr	r4, [r7, #20]
   1baa8:	ldr	r2, [r7, #24]
   1baac:	ldr	lr, [r7, #28]
   1bab0:	ldr	r7, [r7, #32]
   1bab4:	stm	sp, {r0, r1, r6}
   1bab8:	str	r5, [sp, #12]
   1babc:	str	r4, [sp, #16]
   1bac0:	str	r2, [sp, #20]
   1bac4:	str	lr, [sp, #24]
   1bac8:	str	r7, [sp, #28]
   1bacc:	b	1bb14 <__assert_fail@plt+0xa80c>
   1bad0:	movw	r1, #59959	; 0xea37
   1bad4:	mov	r0, #0
   1bad8:	mov	r2, #5
   1badc:	movt	r1, #1
   1bae0:	bl	11104 <dcgettext@plt>
   1bae4:	mov	ip, r0
   1bae8:	ldr	r3, [r7]
   1baec:	ldmib	r7, {r0, r1, r6}
   1baf0:	ldr	r5, [r7, #16]
   1baf4:	ldr	r4, [r7, #20]
   1baf8:	ldr	r2, [r7, #24]
   1bafc:	ldr	r7, [r7, #28]
   1bb00:	stm	sp, {r0, r1, r6}
   1bb04:	str	r5, [sp, #12]
   1bb08:	str	r4, [sp, #16]
   1bb0c:	str	r2, [sp, #20]
   1bb10:	str	r7, [sp, #24]
   1bb14:	mov	r0, r8
   1bb18:	mov	r1, #1
   1bb1c:	mov	r2, ip
   1bb20:	bl	11254 <__fprintf_chk@plt>
   1bb24:	sub	sp, fp, #24
   1bb28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1bb2c:	push	{r4, sl, fp, lr}
   1bb30:	add	fp, sp, #8
   1bb34:	sub	sp, sp, #8
   1bb38:	ldr	ip, [fp, #8]
   1bb3c:	mov	lr, #0
   1bb40:	ldr	r4, [ip, lr, lsl #2]
   1bb44:	add	lr, lr, #1
   1bb48:	cmp	r4, #0
   1bb4c:	bne	1bb40 <__assert_fail@plt+0xa838>
   1bb50:	sub	r4, lr, #1
   1bb54:	str	ip, [sp]
   1bb58:	str	r4, [sp, #4]
   1bb5c:	bl	1b7f8 <__assert_fail@plt+0xa4f0>
   1bb60:	sub	sp, fp, #8
   1bb64:	pop	{r4, sl, fp, pc}
   1bb68:	push	{fp, lr}
   1bb6c:	mov	fp, sp
   1bb70:	sub	sp, sp, #48	; 0x30
   1bb74:	ldr	ip, [fp, #8]
   1bb78:	ldr	lr, [ip]
   1bb7c:	cmp	lr, #0
   1bb80:	str	lr, [sp, #8]
   1bb84:	beq	1bc20 <__assert_fail@plt+0xa918>
   1bb88:	ldr	lr, [ip, #4]
   1bb8c:	cmp	lr, #0
   1bb90:	str	lr, [sp, #12]
   1bb94:	beq	1bc28 <__assert_fail@plt+0xa920>
   1bb98:	ldr	lr, [ip, #8]
   1bb9c:	cmp	lr, #0
   1bba0:	str	lr, [sp, #16]
   1bba4:	beq	1bc30 <__assert_fail@plt+0xa928>
   1bba8:	ldr	lr, [ip, #12]
   1bbac:	cmp	lr, #0
   1bbb0:	str	lr, [sp, #20]
   1bbb4:	beq	1bc38 <__assert_fail@plt+0xa930>
   1bbb8:	ldr	lr, [ip, #16]
   1bbbc:	cmp	lr, #0
   1bbc0:	str	lr, [sp, #24]
   1bbc4:	beq	1bc40 <__assert_fail@plt+0xa938>
   1bbc8:	ldr	lr, [ip, #20]
   1bbcc:	cmp	lr, #0
   1bbd0:	str	lr, [sp, #28]
   1bbd4:	beq	1bc48 <__assert_fail@plt+0xa940>
   1bbd8:	ldr	lr, [ip, #24]
   1bbdc:	cmp	lr, #0
   1bbe0:	str	lr, [sp, #32]
   1bbe4:	beq	1bc50 <__assert_fail@plt+0xa948>
   1bbe8:	ldr	lr, [ip, #28]
   1bbec:	cmp	lr, #0
   1bbf0:	str	lr, [sp, #36]	; 0x24
   1bbf4:	beq	1bc58 <__assert_fail@plt+0xa950>
   1bbf8:	ldr	lr, [ip, #32]
   1bbfc:	cmp	lr, #0
   1bc00:	str	lr, [sp, #40]	; 0x28
   1bc04:	beq	1bc60 <__assert_fail@plt+0xa958>
   1bc08:	ldr	lr, [ip, #36]	; 0x24
   1bc0c:	mov	ip, #10
   1bc10:	cmp	lr, #0
   1bc14:	str	lr, [sp, #44]	; 0x2c
   1bc18:	movweq	ip, #9
   1bc1c:	b	1bc64 <__assert_fail@plt+0xa95c>
   1bc20:	mov	ip, #0
   1bc24:	b	1bc64 <__assert_fail@plt+0xa95c>
   1bc28:	mov	ip, #1
   1bc2c:	b	1bc64 <__assert_fail@plt+0xa95c>
   1bc30:	mov	ip, #2
   1bc34:	b	1bc64 <__assert_fail@plt+0xa95c>
   1bc38:	mov	ip, #3
   1bc3c:	b	1bc64 <__assert_fail@plt+0xa95c>
   1bc40:	mov	ip, #4
   1bc44:	b	1bc64 <__assert_fail@plt+0xa95c>
   1bc48:	mov	ip, #5
   1bc4c:	b	1bc64 <__assert_fail@plt+0xa95c>
   1bc50:	mov	ip, #6
   1bc54:	b	1bc64 <__assert_fail@plt+0xa95c>
   1bc58:	mov	ip, #7
   1bc5c:	b	1bc64 <__assert_fail@plt+0xa95c>
   1bc60:	mov	ip, #8
   1bc64:	add	lr, sp, #8
   1bc68:	str	ip, [sp, #4]
   1bc6c:	str	lr, [sp]
   1bc70:	bl	1b7f8 <__assert_fail@plt+0xa4f0>
   1bc74:	mov	sp, fp
   1bc78:	pop	{fp, pc}
   1bc7c:	push	{fp, lr}
   1bc80:	mov	fp, sp
   1bc84:	sub	sp, sp, #56	; 0x38
   1bc88:	add	ip, fp, #8
   1bc8c:	str	ip, [sp, #12]
   1bc90:	ldr	lr, [fp, #8]
   1bc94:	cmp	lr, #0
   1bc98:	str	lr, [sp, #16]
   1bc9c:	beq	1bd38 <__assert_fail@plt+0xaa30>
   1bca0:	ldr	lr, [ip, #4]
   1bca4:	cmp	lr, #0
   1bca8:	str	lr, [sp, #20]
   1bcac:	beq	1bd40 <__assert_fail@plt+0xaa38>
   1bcb0:	ldr	lr, [ip, #8]
   1bcb4:	cmp	lr, #0
   1bcb8:	str	lr, [sp, #24]
   1bcbc:	beq	1bd48 <__assert_fail@plt+0xaa40>
   1bcc0:	ldr	lr, [ip, #12]
   1bcc4:	cmp	lr, #0
   1bcc8:	str	lr, [sp, #28]
   1bccc:	beq	1bd50 <__assert_fail@plt+0xaa48>
   1bcd0:	ldr	lr, [ip, #16]
   1bcd4:	cmp	lr, #0
   1bcd8:	str	lr, [sp, #32]
   1bcdc:	beq	1bd58 <__assert_fail@plt+0xaa50>
   1bce0:	ldr	lr, [ip, #20]
   1bce4:	cmp	lr, #0
   1bce8:	str	lr, [sp, #36]	; 0x24
   1bcec:	beq	1bd60 <__assert_fail@plt+0xaa58>
   1bcf0:	ldr	lr, [ip, #24]
   1bcf4:	cmp	lr, #0
   1bcf8:	str	lr, [sp, #40]	; 0x28
   1bcfc:	beq	1bd68 <__assert_fail@plt+0xaa60>
   1bd00:	ldr	lr, [ip, #28]
   1bd04:	cmp	lr, #0
   1bd08:	str	lr, [sp, #44]	; 0x2c
   1bd0c:	beq	1bd70 <__assert_fail@plt+0xaa68>
   1bd10:	ldr	lr, [ip, #32]
   1bd14:	cmp	lr, #0
   1bd18:	str	lr, [sp, #48]	; 0x30
   1bd1c:	beq	1bd78 <__assert_fail@plt+0xaa70>
   1bd20:	ldr	lr, [ip, #36]	; 0x24
   1bd24:	mov	ip, #10
   1bd28:	cmp	lr, #0
   1bd2c:	str	lr, [sp, #52]	; 0x34
   1bd30:	movweq	ip, #9
   1bd34:	b	1bd7c <__assert_fail@plt+0xaa74>
   1bd38:	mov	ip, #0
   1bd3c:	b	1bd7c <__assert_fail@plt+0xaa74>
   1bd40:	mov	ip, #1
   1bd44:	b	1bd7c <__assert_fail@plt+0xaa74>
   1bd48:	mov	ip, #2
   1bd4c:	b	1bd7c <__assert_fail@plt+0xaa74>
   1bd50:	mov	ip, #3
   1bd54:	b	1bd7c <__assert_fail@plt+0xaa74>
   1bd58:	mov	ip, #4
   1bd5c:	b	1bd7c <__assert_fail@plt+0xaa74>
   1bd60:	mov	ip, #5
   1bd64:	b	1bd7c <__assert_fail@plt+0xaa74>
   1bd68:	mov	ip, #6
   1bd6c:	b	1bd7c <__assert_fail@plt+0xaa74>
   1bd70:	mov	ip, #7
   1bd74:	b	1bd7c <__assert_fail@plt+0xaa74>
   1bd78:	mov	ip, #8
   1bd7c:	add	lr, sp, #16
   1bd80:	str	ip, [sp, #4]
   1bd84:	str	lr, [sp]
   1bd88:	bl	1b7f8 <__assert_fail@plt+0xa4f0>
   1bd8c:	mov	sp, fp
   1bd90:	pop	{fp, pc}
   1bd94:	push	{fp, lr}
   1bd98:	mov	fp, sp
   1bd9c:	movw	r0, #61812	; 0xf174
   1bda0:	movt	r0, #2
   1bda4:	ldr	r1, [r0]
   1bda8:	movw	r0, #56610	; 0xdd22
   1bdac:	movt	r0, #1
   1bdb0:	bl	11068 <fputs_unlocked@plt>
   1bdb4:	movw	r1, #60119	; 0xead7
   1bdb8:	mov	r0, #0
   1bdbc:	mov	r2, #5
   1bdc0:	movt	r1, #1
   1bdc4:	bl	11104 <dcgettext@plt>
   1bdc8:	movw	r2, #60139	; 0xeaeb
   1bdcc:	mov	r1, r0
   1bdd0:	mov	r0, #1
   1bdd4:	movt	r2, #1
   1bdd8:	bl	1123c <__printf_chk@plt>
   1bddc:	movw	r1, #60161	; 0xeb01
   1bde0:	mov	r0, #0
   1bde4:	mov	r2, #5
   1bde8:	movt	r1, #1
   1bdec:	bl	11104 <dcgettext@plt>
   1bdf0:	movw	r2, #57199	; 0xdf6f
   1bdf4:	movw	r3, #58094	; 0xe2ee
   1bdf8:	mov	r1, r0
   1bdfc:	mov	r0, #1
   1be00:	movt	r2, #1
   1be04:	movt	r3, #1
   1be08:	bl	1123c <__printf_chk@plt>
   1be0c:	movw	r1, #60181	; 0xeb15
   1be10:	mov	r0, #0
   1be14:	mov	r2, #5
   1be18:	movt	r1, #1
   1be1c:	bl	11104 <dcgettext@plt>
   1be20:	movw	r2, #60220	; 0xeb3c
   1be24:	mov	r1, r0
   1be28:	mov	r0, #1
   1be2c:	movt	r2, #1
   1be30:	pop	{fp, lr}
   1be34:	b	1123c <__printf_chk@plt>
   1be38:	push	{r4, r5, r6, sl, fp, lr}
   1be3c:	add	fp, sp, #16
   1be40:	mov	r4, r2
   1be44:	mov	r5, r1
   1be48:	mov	r6, r0
   1be4c:	bl	1d5c4 <__assert_fail@plt+0xc2bc>
   1be50:	cmp	r0, #0
   1be54:	popne	{r4, r5, r6, sl, fp, pc}
   1be58:	cmp	r6, #0
   1be5c:	beq	1be70 <__assert_fail@plt+0xab68>
   1be60:	cmp	r5, #0
   1be64:	cmpne	r4, #0
   1be68:	bne	1be70 <__assert_fail@plt+0xab68>
   1be6c:	pop	{r4, r5, r6, sl, fp, pc}
   1be70:	bl	1c410 <__assert_fail@plt+0xb108>
   1be74:	push	{r4, r5, r6, sl, fp, lr}
   1be78:	add	fp, sp, #16
   1be7c:	mov	r4, r2
   1be80:	mov	r5, r1
   1be84:	mov	r6, r0
   1be88:	bl	1d5c4 <__assert_fail@plt+0xc2bc>
   1be8c:	cmp	r0, #0
   1be90:	popne	{r4, r5, r6, sl, fp, pc}
   1be94:	cmp	r6, #0
   1be98:	beq	1beac <__assert_fail@plt+0xaba4>
   1be9c:	cmp	r5, #0
   1bea0:	cmpne	r4, #0
   1bea4:	bne	1beac <__assert_fail@plt+0xaba4>
   1bea8:	pop	{r4, r5, r6, sl, fp, pc}
   1beac:	bl	1c410 <__assert_fail@plt+0xb108>
   1beb0:	push	{fp, lr}
   1beb4:	mov	fp, sp
   1beb8:	bl	1d244 <__assert_fail@plt+0xbf3c>
   1bebc:	cmp	r0, #0
   1bec0:	popne	{fp, pc}
   1bec4:	bl	1c410 <__assert_fail@plt+0xb108>
   1bec8:	push	{fp, lr}
   1becc:	mov	fp, sp
   1bed0:	bl	1d244 <__assert_fail@plt+0xbf3c>
   1bed4:	cmp	r0, #0
   1bed8:	popne	{fp, pc}
   1bedc:	bl	1c410 <__assert_fail@plt+0xb108>
   1bee0:	push	{fp, lr}
   1bee4:	mov	fp, sp
   1bee8:	bl	1d244 <__assert_fail@plt+0xbf3c>
   1beec:	cmp	r0, #0
   1bef0:	popne	{fp, pc}
   1bef4:	bl	1c410 <__assert_fail@plt+0xb108>
   1bef8:	push	{r4, r5, fp, lr}
   1befc:	add	fp, sp, #8
   1bf00:	mov	r4, r1
   1bf04:	mov	r5, r0
   1bf08:	bl	1d274 <__assert_fail@plt+0xbf6c>
   1bf0c:	cmp	r0, #0
   1bf10:	popne	{r4, r5, fp, pc}
   1bf14:	cmp	r5, #0
   1bf18:	beq	1bf28 <__assert_fail@plt+0xac20>
   1bf1c:	cmp	r4, #0
   1bf20:	bne	1bf28 <__assert_fail@plt+0xac20>
   1bf24:	pop	{r4, r5, fp, pc}
   1bf28:	bl	1c410 <__assert_fail@plt+0xb108>
   1bf2c:	push	{fp, lr}
   1bf30:	mov	fp, sp
   1bf34:	cmp	r1, #0
   1bf38:	orreq	r1, r1, #1
   1bf3c:	bl	1d274 <__assert_fail@plt+0xbf6c>
   1bf40:	cmp	r0, #0
   1bf44:	popne	{fp, pc}
   1bf48:	bl	1c410 <__assert_fail@plt+0xb108>
   1bf4c:	push	{fp, lr}
   1bf50:	mov	fp, sp
   1bf54:	clz	r3, r2
   1bf58:	lsr	ip, r3, #5
   1bf5c:	clz	r3, r1
   1bf60:	lsr	r3, r3, #5
   1bf64:	orrs	r3, r3, ip
   1bf68:	movwne	r1, #1
   1bf6c:	movwne	r2, #1
   1bf70:	bl	1d5c4 <__assert_fail@plt+0xc2bc>
   1bf74:	cmp	r0, #0
   1bf78:	popne	{fp, pc}
   1bf7c:	bl	1c410 <__assert_fail@plt+0xb108>
   1bf80:	push	{fp, lr}
   1bf84:	mov	fp, sp
   1bf88:	mov	r2, r1
   1bf8c:	mov	r1, r0
   1bf90:	mov	r0, #0
   1bf94:	bl	1d5c4 <__assert_fail@plt+0xc2bc>
   1bf98:	cmp	r0, #0
   1bf9c:	popne	{fp, pc}
   1bfa0:	bl	1c410 <__assert_fail@plt+0xb108>
   1bfa4:	push	{fp, lr}
   1bfa8:	mov	fp, sp
   1bfac:	mov	r2, r1
   1bfb0:	mov	r1, r0
   1bfb4:	clz	r0, r2
   1bfb8:	clz	r3, r1
   1bfbc:	lsr	r0, r0, #5
   1bfc0:	lsr	r3, r3, #5
   1bfc4:	orrs	r0, r3, r0
   1bfc8:	movwne	r1, #1
   1bfcc:	movwne	r2, #1
   1bfd0:	mov	r0, #0
   1bfd4:	bl	1d5c4 <__assert_fail@plt+0xc2bc>
   1bfd8:	cmp	r0, #0
   1bfdc:	popne	{fp, pc}
   1bfe0:	bl	1c410 <__assert_fail@plt+0xb108>
   1bfe4:	push	{r4, r5, r6, sl, fp, lr}
   1bfe8:	add	fp, sp, #16
   1bfec:	ldr	r5, [r1]
   1bff0:	mov	r4, r1
   1bff4:	mov	r6, r0
   1bff8:	cmp	r0, #0
   1bffc:	beq	1c014 <__assert_fail@plt+0xad0c>
   1c000:	mov	r0, #1
   1c004:	add	r0, r0, r5, lsr #1
   1c008:	adds	r5, r5, r0
   1c00c:	bcc	1c01c <__assert_fail@plt+0xad14>
   1c010:	b	1c058 <__assert_fail@plt+0xad50>
   1c014:	cmp	r5, #0
   1c018:	movweq	r5, #64	; 0x40
   1c01c:	mov	r0, r6
   1c020:	mov	r1, r5
   1c024:	mov	r2, #1
   1c028:	bl	1d5c4 <__assert_fail@plt+0xc2bc>
   1c02c:	cmp	r5, #0
   1c030:	mov	r1, r5
   1c034:	movwne	r1, #1
   1c038:	cmp	r0, #0
   1c03c:	bne	1c050 <__assert_fail@plt+0xad48>
   1c040:	clz	r2, r6
   1c044:	lsr	r2, r2, #5
   1c048:	orrs	r1, r2, r1
   1c04c:	bne	1c058 <__assert_fail@plt+0xad50>
   1c050:	str	r5, [r4]
   1c054:	pop	{r4, r5, r6, sl, fp, pc}
   1c058:	bl	1c410 <__assert_fail@plt+0xb108>
   1c05c:	push	{r4, r5, r6, r7, fp, lr}
   1c060:	add	fp, sp, #16
   1c064:	ldr	r5, [r1]
   1c068:	mov	r6, r2
   1c06c:	mov	r4, r1
   1c070:	mov	r7, r0
   1c074:	cmp	r0, #0
   1c078:	beq	1c090 <__assert_fail@plt+0xad88>
   1c07c:	mov	r0, #1
   1c080:	add	r0, r0, r5, lsr #1
   1c084:	adds	r5, r5, r0
   1c088:	bcc	1c0a8 <__assert_fail@plt+0xada0>
   1c08c:	b	1c0dc <__assert_fail@plt+0xadd4>
   1c090:	cmp	r5, #0
   1c094:	bne	1c0a8 <__assert_fail@plt+0xada0>
   1c098:	mov	r0, #64	; 0x40
   1c09c:	cmp	r6, #64	; 0x40
   1c0a0:	udiv	r5, r0, r6
   1c0a4:	addhi	r5, r5, #1
   1c0a8:	mov	r0, r7
   1c0ac:	mov	r1, r5
   1c0b0:	mov	r2, r6
   1c0b4:	bl	1d5c4 <__assert_fail@plt+0xc2bc>
   1c0b8:	cmp	r0, #0
   1c0bc:	bne	1c0d4 <__assert_fail@plt+0xadcc>
   1c0c0:	cmp	r7, #0
   1c0c4:	beq	1c0dc <__assert_fail@plt+0xadd4>
   1c0c8:	cmp	r6, #0
   1c0cc:	cmpne	r5, #0
   1c0d0:	bne	1c0dc <__assert_fail@plt+0xadd4>
   1c0d4:	str	r5, [r4]
   1c0d8:	pop	{r4, r5, r6, r7, fp, pc}
   1c0dc:	bl	1c410 <__assert_fail@plt+0xb108>
   1c0e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c0e4:	add	fp, sp, #24
   1c0e8:	mov	r8, r1
   1c0ec:	ldr	r1, [r1]
   1c0f0:	mov	r5, r0
   1c0f4:	add	r0, r1, r1, asr #1
   1c0f8:	cmp	r0, r1
   1c0fc:	mvnvs	r0, #-2147483648	; 0x80000000
   1c100:	cmp	r0, r3
   1c104:	mov	r7, r0
   1c108:	movgt	r7, r3
   1c10c:	cmn	r3, #1
   1c110:	movle	r7, r0
   1c114:	ldr	r0, [fp, #8]
   1c118:	cmn	r0, #1
   1c11c:	ble	1c144 <__assert_fail@plt+0xae3c>
   1c120:	cmp	r0, #0
   1c124:	beq	1c198 <__assert_fail@plt+0xae90>
   1c128:	cmn	r7, #1
   1c12c:	ble	1c16c <__assert_fail@plt+0xae64>
   1c130:	mvn	r4, #-2147483648	; 0x80000000
   1c134:	udiv	r6, r4, r0
   1c138:	cmp	r6, r7
   1c13c:	bge	1c198 <__assert_fail@plt+0xae90>
   1c140:	b	1c1a8 <__assert_fail@plt+0xaea0>
   1c144:	cmn	r7, #1
   1c148:	ble	1c188 <__assert_fail@plt+0xae80>
   1c14c:	cmn	r0, #1
   1c150:	beq	1c198 <__assert_fail@plt+0xae90>
   1c154:	mov	r6, #-2147483648	; 0x80000000
   1c158:	mvn	r4, #-2147483648	; 0x80000000
   1c15c:	sdiv	r6, r6, r0
   1c160:	cmp	r6, r7
   1c164:	bge	1c198 <__assert_fail@plt+0xae90>
   1c168:	b	1c1a8 <__assert_fail@plt+0xaea0>
   1c16c:	beq	1c198 <__assert_fail@plt+0xae90>
   1c170:	mov	r6, #-2147483648	; 0x80000000
   1c174:	mvn	r4, #-2147483648	; 0x80000000
   1c178:	sdiv	r6, r6, r7
   1c17c:	cmp	r6, r0
   1c180:	bge	1c198 <__assert_fail@plt+0xae90>
   1c184:	b	1c1a8 <__assert_fail@plt+0xaea0>
   1c188:	mvn	r4, #-2147483648	; 0x80000000
   1c18c:	sdiv	r6, r4, r0
   1c190:	cmp	r7, r6
   1c194:	blt	1c1a8 <__assert_fail@plt+0xaea0>
   1c198:	mul	r6, r7, r0
   1c19c:	mov	r4, #64	; 0x40
   1c1a0:	cmp	r6, #63	; 0x3f
   1c1a4:	bgt	1c1b0 <__assert_fail@plt+0xaea8>
   1c1a8:	sdiv	r7, r4, r0
   1c1ac:	mul	r6, r7, r0
   1c1b0:	cmp	r5, #0
   1c1b4:	moveq	r4, #0
   1c1b8:	streq	r4, [r8]
   1c1bc:	sub	r4, r7, r1
   1c1c0:	cmp	r4, r2
   1c1c4:	bge	1c270 <__assert_fail@plt+0xaf68>
   1c1c8:	add	r7, r1, r2
   1c1cc:	mov	r6, #0
   1c1d0:	mov	r2, #0
   1c1d4:	cmp	r7, r3
   1c1d8:	movwgt	r6, #1
   1c1dc:	cmn	r3, #1
   1c1e0:	movwgt	r2, #1
   1c1e4:	cmp	r7, r1
   1c1e8:	bvs	1c2a4 <__assert_fail@plt+0xaf9c>
   1c1ec:	ands	r1, r2, r6
   1c1f0:	bne	1c2a4 <__assert_fail@plt+0xaf9c>
   1c1f4:	cmn	r0, #1
   1c1f8:	ble	1c220 <__assert_fail@plt+0xaf18>
   1c1fc:	cmp	r0, #0
   1c200:	beq	1c26c <__assert_fail@plt+0xaf64>
   1c204:	cmn	r7, #1
   1c208:	ble	1c244 <__assert_fail@plt+0xaf3c>
   1c20c:	mvn	r1, #-2147483648	; 0x80000000
   1c210:	udiv	r1, r1, r0
   1c214:	cmp	r1, r7
   1c218:	bge	1c26c <__assert_fail@plt+0xaf64>
   1c21c:	b	1c2a4 <__assert_fail@plt+0xaf9c>
   1c220:	cmn	r7, #1
   1c224:	ble	1c25c <__assert_fail@plt+0xaf54>
   1c228:	cmn	r0, #1
   1c22c:	beq	1c26c <__assert_fail@plt+0xaf64>
   1c230:	mov	r1, #-2147483648	; 0x80000000
   1c234:	sdiv	r1, r1, r0
   1c238:	cmp	r1, r7
   1c23c:	bge	1c26c <__assert_fail@plt+0xaf64>
   1c240:	b	1c2a4 <__assert_fail@plt+0xaf9c>
   1c244:	beq	1c26c <__assert_fail@plt+0xaf64>
   1c248:	mov	r1, #-2147483648	; 0x80000000
   1c24c:	sdiv	r1, r1, r7
   1c250:	cmp	r1, r0
   1c254:	bge	1c26c <__assert_fail@plt+0xaf64>
   1c258:	b	1c2a4 <__assert_fail@plt+0xaf9c>
   1c25c:	mvn	r1, #-2147483648	; 0x80000000
   1c260:	sdiv	r1, r1, r0
   1c264:	cmp	r7, r1
   1c268:	blt	1c2a4 <__assert_fail@plt+0xaf9c>
   1c26c:	mul	r6, r7, r0
   1c270:	mov	r0, r5
   1c274:	mov	r1, r6
   1c278:	bl	1d274 <__assert_fail@plt+0xbf6c>
   1c27c:	cmp	r6, #0
   1c280:	movwne	r6, #1
   1c284:	cmp	r0, #0
   1c288:	bne	1c29c <__assert_fail@plt+0xaf94>
   1c28c:	clz	r1, r5
   1c290:	lsr	r1, r1, #5
   1c294:	orrs	r1, r1, r6
   1c298:	bne	1c2a4 <__assert_fail@plt+0xaf9c>
   1c29c:	str	r7, [r8]
   1c2a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c2a4:	bl	1c410 <__assert_fail@plt+0xb108>
   1c2a8:	push	{fp, lr}
   1c2ac:	mov	fp, sp
   1c2b0:	mov	r1, #1
   1c2b4:	bl	1d1f0 <__assert_fail@plt+0xbee8>
   1c2b8:	cmp	r0, #0
   1c2bc:	popne	{fp, pc}
   1c2c0:	bl	1c410 <__assert_fail@plt+0xb108>
   1c2c4:	push	{fp, lr}
   1c2c8:	mov	fp, sp
   1c2cc:	bl	1d1f0 <__assert_fail@plt+0xbee8>
   1c2d0:	cmp	r0, #0
   1c2d4:	popne	{fp, pc}
   1c2d8:	bl	1c410 <__assert_fail@plt+0xb108>
   1c2dc:	push	{fp, lr}
   1c2e0:	mov	fp, sp
   1c2e4:	mov	r1, #1
   1c2e8:	bl	1d1f0 <__assert_fail@plt+0xbee8>
   1c2ec:	cmp	r0, #0
   1c2f0:	popne	{fp, pc}
   1c2f4:	bl	1c410 <__assert_fail@plt+0xb108>
   1c2f8:	push	{fp, lr}
   1c2fc:	mov	fp, sp
   1c300:	bl	1d1f0 <__assert_fail@plt+0xbee8>
   1c304:	cmp	r0, #0
   1c308:	popne	{fp, pc}
   1c30c:	bl	1c410 <__assert_fail@plt+0xb108>
   1c310:	push	{r4, r5, r6, sl, fp, lr}
   1c314:	add	fp, sp, #16
   1c318:	mov	r5, r0
   1c31c:	mov	r0, r1
   1c320:	mov	r4, r1
   1c324:	bl	1d244 <__assert_fail@plt+0xbf3c>
   1c328:	cmp	r0, #0
   1c32c:	beq	1c348 <__assert_fail@plt+0xb040>
   1c330:	mov	r1, r5
   1c334:	mov	r2, r4
   1c338:	mov	r6, r0
   1c33c:	bl	110d4 <memcpy@plt>
   1c340:	mov	r0, r6
   1c344:	pop	{r4, r5, r6, sl, fp, pc}
   1c348:	bl	1c410 <__assert_fail@plt+0xb108>
   1c34c:	push	{r4, r5, r6, sl, fp, lr}
   1c350:	add	fp, sp, #16
   1c354:	mov	r5, r0
   1c358:	mov	r0, r1
   1c35c:	mov	r4, r1
   1c360:	bl	1d244 <__assert_fail@plt+0xbf3c>
   1c364:	cmp	r0, #0
   1c368:	beq	1c384 <__assert_fail@plt+0xb07c>
   1c36c:	mov	r1, r5
   1c370:	mov	r2, r4
   1c374:	mov	r6, r0
   1c378:	bl	110d4 <memcpy@plt>
   1c37c:	mov	r0, r6
   1c380:	pop	{r4, r5, r6, sl, fp, pc}
   1c384:	bl	1c410 <__assert_fail@plt+0xb108>
   1c388:	push	{r4, r5, r6, sl, fp, lr}
   1c38c:	add	fp, sp, #16
   1c390:	mov	r5, r0
   1c394:	add	r0, r1, #1
   1c398:	mov	r4, r1
   1c39c:	bl	1d244 <__assert_fail@plt+0xbf3c>
   1c3a0:	cmp	r0, #0
   1c3a4:	beq	1c3cc <__assert_fail@plt+0xb0c4>
   1c3a8:	mov	r6, r0
   1c3ac:	mov	r0, #0
   1c3b0:	mov	r1, r5
   1c3b4:	mov	r2, r4
   1c3b8:	strb	r0, [r6, r4]
   1c3bc:	mov	r0, r6
   1c3c0:	bl	110d4 <memcpy@plt>
   1c3c4:	mov	r0, r6
   1c3c8:	pop	{r4, r5, r6, sl, fp, pc}
   1c3cc:	bl	1c410 <__assert_fail@plt+0xb108>
   1c3d0:	push	{r4, r5, r6, sl, fp, lr}
   1c3d4:	add	fp, sp, #16
   1c3d8:	mov	r4, r0
   1c3dc:	bl	111f4 <strlen@plt>
   1c3e0:	add	r5, r0, #1
   1c3e4:	mov	r0, r5
   1c3e8:	bl	1d244 <__assert_fail@plt+0xbf3c>
   1c3ec:	cmp	r0, #0
   1c3f0:	beq	1c40c <__assert_fail@plt+0xb104>
   1c3f4:	mov	r1, r4
   1c3f8:	mov	r2, r5
   1c3fc:	mov	r6, r0
   1c400:	bl	110d4 <memcpy@plt>
   1c404:	mov	r0, r6
   1c408:	pop	{r4, r5, r6, sl, fp, pc}
   1c40c:	bl	1c410 <__assert_fail@plt+0xb108>
   1c410:	push	{fp, lr}
   1c414:	mov	fp, sp
   1c418:	movw	r0, #61712	; 0xf110
   1c41c:	movw	r1, #60296	; 0xeb88
   1c420:	mov	r2, #5
   1c424:	movt	r0, #2
   1c428:	movt	r1, #1
   1c42c:	ldr	r4, [r0]
   1c430:	mov	r0, #0
   1c434:	bl	11104 <dcgettext@plt>
   1c438:	movw	r2, #57166	; 0xdf4e
   1c43c:	mov	r3, r0
   1c440:	mov	r0, r4
   1c444:	mov	r1, #0
   1c448:	movt	r2, #1
   1c44c:	bl	1117c <error@plt>
   1c450:	bl	112e4 <abort@plt>
   1c454:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c458:	add	fp, sp, #24
   1c45c:	sub	sp, sp, #16
   1c460:	mov	r8, r0
   1c464:	ldr	r0, [fp, #16]
   1c468:	mov	r5, r3
   1c46c:	mov	r6, r2
   1c470:	mov	r2, r1
   1c474:	add	r3, sp, #8
   1c478:	mov	r1, #0
   1c47c:	str	r0, [sp]
   1c480:	mov	r0, r8
   1c484:	bl	1c550 <__assert_fail@plt+0xb248>
   1c488:	cmp	r0, #0
   1c48c:	bne	1c518 <__assert_fail@plt+0xb210>
   1c490:	ldr	r4, [sp, #8]
   1c494:	ldr	r7, [sp, #12]
   1c498:	subs	r0, r4, r6
   1c49c:	sbcs	r0, r7, r5
   1c4a0:	bcc	1c4c4 <__assert_fail@plt+0xb1bc>
   1c4a4:	ldr	r1, [fp, #8]
   1c4a8:	ldr	r0, [fp, #12]
   1c4ac:	subs	r1, r1, r4
   1c4b0:	sbcs	r0, r0, r7
   1c4b4:	movcs	r0, r4
   1c4b8:	movcs	r1, r7
   1c4bc:	subcs	sp, fp, #24
   1c4c0:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c4c4:	bl	1120c <__errno_location@plt>
   1c4c8:	subs	r1, r4, #1073741824	; 0x40000000
   1c4cc:	sbcs	r1, r7, #0
   1c4d0:	movcc	r1, #34	; 0x22
   1c4d4:	movcs	r1, #75	; 0x4b
   1c4d8:	str	r1, [r0]
   1c4dc:	ldr	r6, [r0]
   1c4e0:	ldr	r4, [fp, #24]
   1c4e4:	ldr	r5, [fp, #20]
   1c4e8:	mov	r0, r8
   1c4ec:	bl	1b6b4 <__assert_fail@plt+0xa3ac>
   1c4f0:	subs	r1, r6, #22
   1c4f4:	movw	r2, #59255	; 0xe777
   1c4f8:	str	r0, [sp]
   1c4fc:	mov	r3, r5
   1c500:	movne	r1, r6
   1c504:	cmp	r4, #0
   1c508:	movt	r2, #1
   1c50c:	movweq	r4, #1
   1c510:	mov	r0, r4
   1c514:	bl	1117c <error@plt>
   1c518:	cmp	r0, #1
   1c51c:	beq	1c534 <__assert_fail@plt+0xb22c>
   1c520:	cmp	r0, #3
   1c524:	bne	1c540 <__assert_fail@plt+0xb238>
   1c528:	bl	1120c <__errno_location@plt>
   1c52c:	mov	r1, #0
   1c530:	b	1c4d8 <__assert_fail@plt+0xb1d0>
   1c534:	bl	1120c <__errno_location@plt>
   1c538:	mov	r1, #75	; 0x4b
   1c53c:	b	1c4d8 <__assert_fail@plt+0xb1d0>
   1c540:	bl	1120c <__errno_location@plt>
   1c544:	b	1c4dc <__assert_fail@plt+0xb1d4>
   1c548:	mov	r1, #10
   1c54c:	b	1c454 <__assert_fail@plt+0xb14c>
   1c550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c554:	add	fp, sp, #28
   1c558:	sub	sp, sp, #44	; 0x2c
   1c55c:	cmp	r2, #37	; 0x25
   1c560:	bcs	1d1d0 <__assert_fail@plt+0xbec8>
   1c564:	ldr	sl, [fp, #8]
   1c568:	mov	r6, r2
   1c56c:	mov	r7, r1
   1c570:	mov	r4, r0
   1c574:	str	r3, [sp, #36]	; 0x24
   1c578:	bl	1120c <__errno_location@plt>
   1c57c:	mov	r5, r0
   1c580:	mov	r0, #0
   1c584:	str	r0, [r5]
   1c588:	bl	111d0 <__ctype_b_loc@plt>
   1c58c:	ldr	r1, [r0]
   1c590:	mov	r2, r4
   1c594:	ldrb	r0, [r2], #1
   1c598:	add	r3, r1, r0, lsl #1
   1c59c:	ldrb	r3, [r3, #1]
   1c5a0:	tst	r3, #32
   1c5a4:	bne	1c594 <__assert_fail@plt+0xb28c>
   1c5a8:	sub	r9, fp, #32
   1c5ac:	cmp	r7, #0
   1c5b0:	mov	r8, #4
   1c5b4:	movne	r9, r7
   1c5b8:	cmp	r0, #45	; 0x2d
   1c5bc:	beq	1d1c4 <__assert_fail@plt+0xbebc>
   1c5c0:	mov	r0, r4
   1c5c4:	mov	r1, r9
   1c5c8:	mov	r2, r6
   1c5cc:	mov	r3, #0
   1c5d0:	bl	110e0 <__strtoull_internal@plt>
   1c5d4:	mov	r7, r1
   1c5d8:	ldr	r1, [r9]
   1c5dc:	cmp	r1, r4
   1c5e0:	beq	1c60c <__assert_fail@plt+0xb304>
   1c5e4:	mov	r6, r0
   1c5e8:	ldr	r0, [r5]
   1c5ec:	cmp	r0, #0
   1c5f0:	beq	1c648 <__assert_fail@plt+0xb340>
   1c5f4:	cmp	r0, #34	; 0x22
   1c5f8:	bne	1d1c4 <__assert_fail@plt+0xbebc>
   1c5fc:	mov	r8, #1
   1c600:	cmp	sl, #0
   1c604:	bne	1c654 <__assert_fail@plt+0xb34c>
   1c608:	b	1d1bc <__assert_fail@plt+0xbeb4>
   1c60c:	cmp	sl, #0
   1c610:	beq	1d1c4 <__assert_fail@plt+0xbebc>
   1c614:	mov	r5, r1
   1c618:	ldrb	r1, [r4]
   1c61c:	cmp	r1, #0
   1c620:	beq	1d1c4 <__assert_fail@plt+0xbebc>
   1c624:	mov	r0, sl
   1c628:	bl	11200 <strchr@plt>
   1c62c:	cmp	r0, #0
   1c630:	beq	1d1c4 <__assert_fail@plt+0xbebc>
   1c634:	mov	r1, r5
   1c638:	mov	r8, #0
   1c63c:	mov	r6, #1
   1c640:	mov	r7, #0
   1c644:	b	1c654 <__assert_fail@plt+0xb34c>
   1c648:	mov	r8, r0
   1c64c:	cmp	sl, #0
   1c650:	beq	1d1bc <__assert_fail@plt+0xbeb4>
   1c654:	ldrb	r4, [r1]
   1c658:	cmp	r4, #0
   1c65c:	beq	1d1bc <__assert_fail@plt+0xbeb4>
   1c660:	str	r1, [sp, #32]
   1c664:	mov	r0, sl
   1c668:	mov	r1, r4
   1c66c:	bl	11200 <strchr@plt>
   1c670:	cmp	r0, #0
   1c674:	beq	1c93c <__assert_fail@plt+0xb634>
   1c678:	sub	r0, r4, #69	; 0x45
   1c67c:	mov	r1, #1
   1c680:	mov	r3, #0
   1c684:	mov	r5, #1024	; 0x400
   1c688:	cmp	r0, #47	; 0x2f
   1c68c:	str	r1, [sp, #28]
   1c690:	bhi	1c794 <__assert_fail@plt+0xb48c>
   1c694:	add	r1, pc, #0
   1c698:	ldr	pc, [r1, r0, lsl #2]
   1c69c:	andeq	ip, r1, ip, asr r7
   1c6a0:	muleq	r1, r4, r7
   1c6a4:	andeq	ip, r1, ip, asr r7
   1c6a8:	muleq	r1, r4, r7
   1c6ac:	muleq	r1, r4, r7
   1c6b0:	muleq	r1, r4, r7
   1c6b4:	andeq	ip, r1, ip, asr r7
   1c6b8:	muleq	r1, r4, r7
   1c6bc:	andeq	ip, r1, ip, asr r7
   1c6c0:	muleq	r1, r4, r7
   1c6c4:	muleq	r1, r4, r7
   1c6c8:	andeq	ip, r1, ip, asr r7
   1c6cc:	muleq	r1, r4, r7
   1c6d0:	muleq	r1, r4, r7
   1c6d4:	muleq	r1, r4, r7
   1c6d8:	andeq	ip, r1, ip, asr r7
   1c6dc:	muleq	r1, r4, r7
   1c6e0:	muleq	r1, r4, r7
   1c6e4:	muleq	r1, r4, r7
   1c6e8:	muleq	r1, r4, r7
   1c6ec:	andeq	ip, r1, ip, asr r7
   1c6f0:	andeq	ip, r1, ip, asr r7
   1c6f4:	muleq	r1, r4, r7
   1c6f8:	muleq	r1, r4, r7
   1c6fc:	muleq	r1, r4, r7
   1c700:	muleq	r1, r4, r7
   1c704:	muleq	r1, r4, r7
   1c708:	muleq	r1, r4, r7
   1c70c:	muleq	r1, r4, r7
   1c710:	muleq	r1, r4, r7
   1c714:	muleq	r1, r4, r7
   1c718:	muleq	r1, r4, r7
   1c71c:	muleq	r1, r4, r7
   1c720:	muleq	r1, r4, r7
   1c724:	andeq	ip, r1, ip, asr r7
   1c728:	muleq	r1, r4, r7
   1c72c:	muleq	r1, r4, r7
   1c730:	muleq	r1, r4, r7
   1c734:	andeq	ip, r1, ip, asr r7
   1c738:	muleq	r1, r4, r7
   1c73c:	andeq	ip, r1, ip, asr r7
   1c740:	muleq	r1, r4, r7
   1c744:	muleq	r1, r4, r7
   1c748:	muleq	r1, r4, r7
   1c74c:	muleq	r1, r4, r7
   1c750:	muleq	r1, r4, r7
   1c754:	muleq	r1, r4, r7
   1c758:	andeq	ip, r1, ip, asr r7
   1c75c:	mov	r0, sl
   1c760:	mov	r1, #48	; 0x30
   1c764:	bl	11200 <strchr@plt>
   1c768:	cmp	r0, #0
   1c76c:	beq	1c790 <__assert_fail@plt+0xb488>
   1c770:	ldr	r1, [sp, #32]
   1c774:	ldrb	r0, [r1, #1]
   1c778:	cmp	r0, #66	; 0x42
   1c77c:	cmpne	r0, #68	; 0x44
   1c780:	bne	1c948 <__assert_fail@plt+0xb640>
   1c784:	mov	r5, #1000	; 0x3e8
   1c788:	mov	r0, #2
   1c78c:	str	r0, [sp, #28]
   1c790:	mov	r3, #0
   1c794:	sub	r0, r4, #66	; 0x42
   1c798:	cmp	r0, #53	; 0x35
   1c79c:	bhi	1c93c <__assert_fail@plt+0xb634>
   1c7a0:	add	r1, pc, #0
   1c7a4:	ldr	pc, [r1, r0, lsl #2]
   1c7a8:	andeq	ip, r1, r4, asr #25
   1c7ac:	andeq	ip, r1, ip, lsr r9
   1c7b0:	andeq	ip, r1, ip, lsr r9
   1c7b4:	andeq	ip, r1, ip, ror #25
   1c7b8:	andeq	ip, r1, ip, lsr r9
   1c7bc:	andeq	ip, r1, r0, lsl #17
   1c7c0:	andeq	ip, r1, ip, lsr r9
   1c7c4:	andeq	ip, r1, ip, lsr r9
   1c7c8:	andeq	ip, r1, ip, lsr r9
   1c7cc:	andeq	ip, r1, ip, ror #18
   1c7d0:	andeq	ip, r1, ip, lsr r9
   1c7d4:			; <UNDEFINED> instruction: 0x0001c9b4
   1c7d8:	andeq	ip, r1, ip, lsr r9
   1c7dc:	andeq	ip, r1, ip, lsr r9
   1c7e0:	andeq	ip, r1, r4, asr #28
   1c7e4:	andeq	ip, r1, ip, lsr r9
   1c7e8:	andeq	ip, r1, ip, lsr r9
   1c7ec:	andeq	ip, r1, ip, lsr r9
   1c7f0:	andeq	ip, r1, r0, asr #20
   1c7f4:	andeq	ip, r1, ip, lsr r9
   1c7f8:	andeq	ip, r1, ip, lsr r9
   1c7fc:	andeq	ip, r1, ip, lsr r9
   1c800:	andeq	ip, r1, ip, lsr r9
   1c804:	andeq	ip, r1, ip, ror #30
   1c808:	andeq	ip, r1, r8, lsr #22
   1c80c:	andeq	ip, r1, ip, lsr r9
   1c810:	andeq	ip, r1, ip, lsr r9
   1c814:	andeq	ip, r1, ip, lsr r9
   1c818:	andeq	ip, r1, ip, lsr r9
   1c81c:	andeq	ip, r1, ip, lsr r9
   1c820:	andeq	ip, r1, ip, lsr r9
   1c824:	andeq	ip, r1, ip, lsr r9
   1c828:	andeq	sp, r1, r4, asr #2
   1c82c:	muleq	r1, ip, r1
   1c830:	andeq	ip, r1, ip, lsr r9
   1c834:	andeq	ip, r1, ip, lsr r9
   1c838:	andeq	ip, r1, ip, lsr r9
   1c83c:	andeq	ip, r1, r0, lsl #17
   1c840:	andeq	ip, r1, ip, lsr r9
   1c844:	andeq	ip, r1, ip, lsr r9
   1c848:	andeq	ip, r1, ip, lsr r9
   1c84c:	andeq	ip, r1, ip, ror #18
   1c850:	andeq	ip, r1, ip, lsr r9
   1c854:			; <UNDEFINED> instruction: 0x0001c9b4
   1c858:	andeq	ip, r1, ip, lsr r9
   1c85c:	andeq	ip, r1, ip, lsr r9
   1c860:	andeq	ip, r1, ip, lsr r9
   1c864:	andeq	ip, r1, ip, lsr r9
   1c868:	andeq	ip, r1, ip, lsr r9
   1c86c:	andeq	ip, r1, ip, lsr r9
   1c870:	andeq	ip, r1, r0, asr #20
   1c874:	andeq	ip, r1, ip, lsr r9
   1c878:	andeq	ip, r1, ip, lsr r9
   1c87c:	andeq	sp, r1, r8, ror r1
   1c880:	mvn	r0, #0
   1c884:	mvn	r1, #0
   1c888:	mov	r2, r5
   1c88c:	mov	sl, r3
   1c890:	bl	1d708 <__assert_fail@plt+0xc400>
   1c894:	subs	r3, r0, r6
   1c898:	mov	lr, #0
   1c89c:	umull	r4, r2, r6, r5
   1c8a0:	str	r1, [sp, #20]
   1c8a4:	sbcs	r3, r1, r7
   1c8a8:	mla	ip, r6, sl, r2
   1c8ac:	mov	r2, r1
   1c8b0:	movwcc	lr, #1
   1c8b4:	mla	r7, r7, r5, ip
   1c8b8:	mov	r2, #0
   1c8bc:	cmp	lr, #0
   1c8c0:	mvnne	r4, #0
   1c8c4:	mvnne	r7, #0
   1c8c8:	subs	r6, r0, r4
   1c8cc:	sbcs	r6, r1, r7
   1c8d0:	movwcc	r2, #1
   1c8d4:	umull	r3, r6, r4, r5
   1c8d8:	cmp	r2, #0
   1c8dc:	str	r6, [sp, #16]
   1c8e0:	mvnne	r3, #0
   1c8e4:	cmp	r2, #0
   1c8e8:	umull	r6, ip, r3, r5
   1c8ec:	mla	r1, r3, sl, ip
   1c8f0:	ldr	ip, [sp, #16]
   1c8f4:	str	r1, [sp, #12]
   1c8f8:	mla	r4, r4, sl, ip
   1c8fc:	mla	r4, r7, r5, r4
   1c900:	ldr	r7, [sp, #12]
   1c904:	mvnne	r4, #0
   1c908:	subs	r0, r0, r3
   1c90c:	ldr	r0, [sp, #20]
   1c910:	mla	r7, r4, r5, r7
   1c914:	sbcs	r0, r0, r4
   1c918:	mov	r0, #0
   1c91c:	movwcc	r0, #1
   1c920:	cmp	r0, #0
   1c924:	mov	r1, r0
   1c928:	orr	r0, lr, r2
   1c92c:	mvnne	r7, #0
   1c930:	mvnne	r6, #0
   1c934:	orr	r3, r0, r1
   1c938:	b	1d19c <__assert_fail@plt+0xbe94>
   1c93c:	ldr	r0, [sp, #36]	; 0x24
   1c940:	orr	r8, r8, #2
   1c944:	b	1d1c0 <__assert_fail@plt+0xbeb8>
   1c948:	cmp	r0, #105	; 0x69
   1c94c:	mov	r3, #0
   1c950:	bne	1c794 <__assert_fail@plt+0xb48c>
   1c954:	ldrb	r0, [r1, #2]
   1c958:	mov	r1, #1
   1c95c:	cmp	r0, #66	; 0x42
   1c960:	movweq	r1, #3
   1c964:	str	r1, [sp, #28]
   1c968:	b	1c794 <__assert_fail@plt+0xb48c>
   1c96c:	mvn	r0, #0
   1c970:	mvn	r1, #0
   1c974:	mov	r2, r5
   1c978:	mov	r4, r3
   1c97c:	bl	1d708 <__assert_fail@plt+0xc400>
   1c980:	subs	r0, r0, r6
   1c984:	mov	r2, #0
   1c988:	sbcs	r0, r1, r7
   1c98c:	movwcc	r2, #1
   1c990:	umull	r0, r1, r6, r5
   1c994:	mla	r1, r6, r4, r1
   1c998:	cmp	r2, #0
   1c99c:	mov	r3, r2
   1c9a0:	mla	r7, r7, r5, r1
   1c9a4:	mvnne	r0, #0
   1c9a8:	mvnne	r7, #0
   1c9ac:	mov	r6, r0
   1c9b0:	b	1d19c <__assert_fail@plt+0xbe94>
   1c9b4:	mvn	r0, #0
   1c9b8:	mvn	r1, #0
   1c9bc:	mov	r2, r5
   1c9c0:	str	r3, [sp, #24]
   1c9c4:	bl	1d708 <__assert_fail@plt+0xc400>
   1c9c8:	subs	r3, r0, r6
   1c9cc:	mov	ip, r0
   1c9d0:	umull	r4, r0, r6, r5
   1c9d4:	mov	sl, #0
   1c9d8:	sbcs	r3, r1, r7
   1c9dc:	str	r0, [sp, #20]
   1c9e0:	ldr	r0, [sp, #24]
   1c9e4:	mov	r3, #0
   1c9e8:	movwcc	r3, #1
   1c9ec:	cmp	r3, #0
   1c9f0:	mvnne	r4, #0
   1c9f4:	cmp	r3, #0
   1c9f8:	umull	lr, r2, r4, r5
   1c9fc:	mla	r2, r4, r0, r2
   1ca00:	str	r2, [sp, #16]
   1ca04:	ldr	r2, [sp, #20]
   1ca08:	mla	r6, r6, r0, r2
   1ca0c:	ldr	r0, [sp, #16]
   1ca10:	mla	r6, r7, r5, r6
   1ca14:	mvnne	r6, #0
   1ca18:	mla	r7, r6, r5, r0
   1ca1c:	subs	r0, ip, r4
   1ca20:	sbcs	r0, r1, r6
   1ca24:	movwcc	sl, #1
   1ca28:	cmp	sl, #0
   1ca2c:	orr	r3, r3, sl
   1ca30:	mvnne	lr, #0
   1ca34:	mvnne	r7, #0
   1ca38:	mov	r6, lr
   1ca3c:	b	1d19c <__assert_fail@plt+0xbe94>
   1ca40:	mvn	r0, #0
   1ca44:	mvn	r1, #0
   1ca48:	mov	r2, r5
   1ca4c:	mov	sl, r3
   1ca50:	bl	1d708 <__assert_fail@plt+0xc400>
   1ca54:	subs	r3, r0, r6
   1ca58:	mov	ip, r1
   1ca5c:	umull	r2, lr, r6, r5
   1ca60:	str	r0, [sp, #20]
   1ca64:	sbcs	r3, r1, r7
   1ca68:	mov	r1, #0
   1ca6c:	mla	r6, r6, sl, lr
   1ca70:	mov	lr, #0
   1ca74:	str	ip, [sp, #16]
   1ca78:	movwcc	r1, #1
   1ca7c:	mla	r7, r7, r5, r6
   1ca80:	cmp	r1, #0
   1ca84:	mvnne	r2, #0
   1ca88:	cmp	r1, #0
   1ca8c:	umull	r3, r4, r2, r5
   1ca90:	mvnne	r7, #0
   1ca94:	mla	r4, r2, sl, r4
   1ca98:	subs	r2, r0, r2
   1ca9c:	sbcs	r2, ip, r7
   1caa0:	mla	r4, r7, r5, r4
   1caa4:	movwcc	lr, #1
   1caa8:	mov	r2, #0
   1caac:	cmp	lr, #0
   1cab0:	mvnne	r3, #0
   1cab4:	mvnne	r4, #0
   1cab8:	subs	r7, r0, r3
   1cabc:	mov	r0, r5
   1cac0:	sbcs	r7, ip, r4
   1cac4:	movwcc	r2, #1
   1cac8:	umull	r5, r7, r3, r5
   1cacc:	cmp	r2, #0
   1cad0:	mla	r3, r3, sl, r7
   1cad4:	mvnne	r5, #0
   1cad8:	mla	r3, r4, r0, r3
   1cadc:	cmp	r2, #0
   1cae0:	umull	r6, ip, r5, r0
   1cae4:	mvnne	r3, #0
   1cae8:	mla	ip, r5, sl, ip
   1caec:	mla	r7, r3, r0, ip
   1caf0:	ldr	r0, [sp, #20]
   1caf4:	subs	r0, r0, r5
   1caf8:	ldr	r0, [sp, #16]
   1cafc:	sbcs	r0, r0, r3
   1cb00:	mov	r0, #0
   1cb04:	movwcc	r0, #1
   1cb08:	cmp	r0, #0
   1cb0c:	mov	r3, r0
   1cb10:	orr	r0, r1, lr
   1cb14:	orr	r0, r0, r2
   1cb18:	mvnne	r7, #0
   1cb1c:	mvnne	r6, #0
   1cb20:	orr	r3, r0, r3
   1cb24:	b	1d19c <__assert_fail@plt+0xbe94>
   1cb28:	mvn	r0, #0
   1cb2c:	mvn	r1, #0
   1cb30:	mov	r2, r5
   1cb34:	mov	r4, r3
   1cb38:	str	r3, [sp, #24]
   1cb3c:	bl	1d708 <__assert_fail@plt+0xc400>
   1cb40:	umull	r3, r2, r6, r5
   1cb44:	mla	r2, r6, r4, r2
   1cb48:	subs	r6, r0, r6
   1cb4c:	sbcs	r6, r1, r7
   1cb50:	mla	ip, r7, r5, r2
   1cb54:	ldr	r2, [sp, #24]
   1cb58:	mov	r6, #0
   1cb5c:	movwcc	r6, #1
   1cb60:	cmp	r6, #0
   1cb64:	str	r6, [sp, #20]
   1cb68:	mov	r6, #0
   1cb6c:	mvnne	r3, #0
   1cb70:	mvnne	ip, #0
   1cb74:	subs	r4, r0, r3
   1cb78:	umull	r7, lr, r3, r5
   1cb7c:	sbcs	r4, r1, ip
   1cb80:	mla	r3, r3, r2, lr
   1cb84:	movwcc	r6, #1
   1cb88:	cmp	r6, #0
   1cb8c:	str	r6, [sp, #16]
   1cb90:	mvnne	r7, #0
   1cb94:	cmp	r6, #0
   1cb98:	umull	sl, r4, r7, r5
   1cb9c:	mla	r4, r7, r2, r4
   1cba0:	mla	r2, ip, r5, r3
   1cba4:	mov	ip, #0
   1cba8:	mvnne	r2, #0
   1cbac:	subs	r3, r0, r7
   1cbb0:	mla	r6, r2, r5, r4
   1cbb4:	mov	r4, r0
   1cbb8:	sbcs	r2, r1, r2
   1cbbc:	mov	r0, #0
   1cbc0:	movwcc	r0, #1
   1cbc4:	mov	r3, r4
   1cbc8:	cmp	r0, #0
   1cbcc:	str	r0, [sp, #12]
   1cbd0:	mov	r0, r1
   1cbd4:	str	r3, [sp, #4]
   1cbd8:	mvnne	sl, #0
   1cbdc:	mvnne	r6, #0
   1cbe0:	str	r0, [sp, #8]
   1cbe4:	subs	r2, r4, sl
   1cbe8:	ldr	r4, [sp, #24]
   1cbec:	sbcs	r2, r1, r6
   1cbf0:	movwcc	ip, #1
   1cbf4:	umull	r7, r2, sl, r5
   1cbf8:	cmp	ip, #0
   1cbfc:	mla	r2, sl, r4, r2
   1cc00:	mvnne	r7, #0
   1cc04:	cmp	ip, #0
   1cc08:	mov	sl, #0
   1cc0c:	umull	r1, lr, r7, r5
   1cc10:	mla	r2, r6, r5, r2
   1cc14:	mvnne	r2, #0
   1cc18:	mla	lr, r7, r4, lr
   1cc1c:	subs	r6, r3, r7
   1cc20:	mla	lr, r2, r5, lr
   1cc24:	sbcs	r2, r0, r2
   1cc28:	movwcc	sl, #1
   1cc2c:	mov	r2, #0
   1cc30:	cmp	sl, #0
   1cc34:	mvnne	r1, #0
   1cc38:	mvnne	lr, #0
   1cc3c:	subs	r6, r3, r1
   1cc40:	ldr	r3, [sp, #24]
   1cc44:	sbcs	r6, r0, lr
   1cc48:	umull	r0, r7, r1, r5
   1cc4c:	movwcc	r2, #1
   1cc50:	cmp	r2, #0
   1cc54:	mvnne	r0, #0
   1cc58:	mla	r1, r1, r3, r7
   1cc5c:	cmp	r2, #0
   1cc60:	umull	r6, r4, r0, r5
   1cc64:	mla	r1, lr, r5, r1
   1cc68:	mla	r4, r0, r3, r4
   1cc6c:	ldr	r3, [sp, #4]
   1cc70:	mvnne	r1, #0
   1cc74:	mla	r7, r1, r5, r4
   1cc78:	ldr	r5, [sp, #16]
   1cc7c:	subs	r0, r3, r0
   1cc80:	ldr	r0, [sp, #8]
   1cc84:	sbcs	r0, r0, r1
   1cc88:	mov	r0, #0
   1cc8c:	movwcc	r0, #1
   1cc90:	cmp	r0, #0
   1cc94:	mov	r1, r0
   1cc98:	ldr	r0, [sp, #20]
   1cc9c:	mvnne	r7, #0
   1cca0:	mvnne	r6, #0
   1cca4:	orr	r0, r0, r5
   1cca8:	ldr	r5, [sp, #12]
   1ccac:	orr	r0, r0, r5
   1ccb0:	orr	r0, r0, ip
   1ccb4:	orr	r0, r0, sl
   1ccb8:	orr	r0, r0, r2
   1ccbc:	orr	r0, r0, r1
   1ccc0:	b	1d13c <__assert_fail@plt+0xbe34>
   1ccc4:	mov	r1, #0
   1ccc8:	lsl	r2, r7, #10
   1cccc:	lsl	r0, r6, #10
   1ccd0:	lsr	r3, r7, #22
   1ccd4:	cmp	r1, r7, lsr #22
   1ccd8:	orr	r2, r2, r6, lsr #22
   1ccdc:	mvnne	r0, #0
   1cce0:	movwne	r3, #1
   1cce4:	cmp	r1, r7, lsr #22
   1cce8:	b	1d168 <__assert_fail@plt+0xbe60>
   1ccec:	mvn	r0, #0
   1ccf0:	mvn	r1, #0
   1ccf4:	mov	r2, r5
   1ccf8:	mov	sl, r3
   1ccfc:	bl	1d708 <__assert_fail@plt+0xc400>
   1cd00:	subs	r2, r0, r6
   1cd04:	mov	ip, r0
   1cd08:	mov	r0, #0
   1cd0c:	sbcs	r2, r1, r7
   1cd10:	movwcc	r0, #1
   1cd14:	umull	r4, r2, r6, r5
   1cd18:	cmp	r0, #0
   1cd1c:	mla	r2, r6, sl, r2
   1cd20:	str	r0, [sp, #20]
   1cd24:	mvnne	r4, #0
   1cd28:	cmp	r0, #0
   1cd2c:	mla	r2, r7, r5, r2
   1cd30:	mov	r0, #0
   1cd34:	umull	lr, r3, r4, r5
   1cd38:	mvnne	r2, #0
   1cd3c:	mla	r3, r4, sl, r3
   1cd40:	mla	r6, r2, r5, r3
   1cd44:	subs	r3, ip, r4
   1cd48:	sbcs	r2, r1, r2
   1cd4c:	mov	r3, r1
   1cd50:	movwcc	r0, #1
   1cd54:	str	r3, [sp, #8]
   1cd58:	cmp	r0, #0
   1cd5c:	str	r0, [sp, #16]
   1cd60:	mov	r0, ip
   1cd64:	mvnne	lr, #0
   1cd68:	mvnne	r6, #0
   1cd6c:	str	r0, [sp, #12]
   1cd70:	subs	r2, ip, lr
   1cd74:	umull	r7, r4, lr, r5
   1cd78:	sbcs	r2, r1, r6
   1cd7c:	mla	r4, lr, sl, r4
   1cd80:	mov	r2, #0
   1cd84:	mla	r6, r6, r5, r4
   1cd88:	mov	r4, #0
   1cd8c:	movwcc	r2, #1
   1cd90:	cmp	r2, #0
   1cd94:	mvnne	r7, #0
   1cd98:	cmp	r2, #0
   1cd9c:	umull	r1, ip, r7, r5
   1cda0:	mvnne	r6, #0
   1cda4:	mla	ip, r7, sl, ip
   1cda8:	subs	r7, r0, r7
   1cdac:	mla	lr, r6, r5, ip
   1cdb0:	sbcs	r7, r3, r6
   1cdb4:	mov	ip, #0
   1cdb8:	movwcc	ip, #1
   1cdbc:	cmp	ip, #0
   1cdc0:	mvnne	r1, #0
   1cdc4:	mvnne	lr, #0
   1cdc8:	subs	r7, r0, r1
   1cdcc:	sbcs	r7, r3, lr
   1cdd0:	movwcc	r4, #1
   1cdd4:	umull	r0, r7, r1, r5
   1cdd8:	cmp	r4, #0
   1cddc:	mla	r1, r1, sl, r7
   1cde0:	mvnne	r0, #0
   1cde4:	mla	r1, lr, r5, r1
   1cde8:	cmp	r4, #0
   1cdec:	umull	r6, r3, r0, r5
   1cdf0:	mvnne	r1, #0
   1cdf4:	mla	r3, r0, sl, r3
   1cdf8:	mla	r7, r1, r5, r3
   1cdfc:	ldr	r3, [sp, #12]
   1ce00:	subs	r0, r3, r0
   1ce04:	ldr	r3, [sp, #16]
   1ce08:	ldr	r0, [sp, #8]
   1ce0c:	sbcs	r0, r0, r1
   1ce10:	mov	r0, #0
   1ce14:	movwcc	r0, #1
   1ce18:	cmp	r0, #0
   1ce1c:	mov	r1, r0
   1ce20:	ldr	r0, [sp, #20]
   1ce24:	mvnne	r7, #0
   1ce28:	mvnne	r6, #0
   1ce2c:	orr	r0, r0, r3
   1ce30:	orr	r0, r0, r2
   1ce34:	orr	r0, r0, ip
   1ce38:	orr	r0, r0, r4
   1ce3c:	orr	r3, r0, r1
   1ce40:	b	1d19c <__assert_fail@plt+0xbe94>
   1ce44:	mvn	r0, #0
   1ce48:	mvn	r1, #0
   1ce4c:	mov	r2, r5
   1ce50:	mov	sl, r3
   1ce54:	bl	1d708 <__assert_fail@plt+0xc400>
   1ce58:	umull	r3, r2, r6, r5
   1ce5c:	mov	lr, r1
   1ce60:	mov	r1, r0
   1ce64:	mla	r2, r6, sl, r2
   1ce68:	subs	r6, r0, r6
   1ce6c:	mov	r0, #0
   1ce70:	sbcs	r6, lr, r7
   1ce74:	mla	r2, r7, r5, r2
   1ce78:	movwcc	r0, #1
   1ce7c:	cmp	r0, #0
   1ce80:	str	r0, [sp, #20]
   1ce84:	mov	r0, r1
   1ce88:	mvnne	r3, #0
   1ce8c:	mvnne	r2, #0
   1ce90:	str	r0, [sp, #16]
   1ce94:	subs	r4, r1, r3
   1ce98:	umull	r7, ip, r3, r5
   1ce9c:	sbcs	r4, lr, r2
   1cea0:	mla	r3, r3, sl, ip
   1cea4:	mov	ip, #0
   1cea8:	mov	r4, #0
   1ceac:	mla	r2, r2, r5, r3
   1ceb0:	movwcc	r4, #1
   1ceb4:	cmp	r4, #0
   1ceb8:	mvnne	r7, #0
   1cebc:	cmp	r4, #0
   1cec0:	umull	r1, r6, r7, r5
   1cec4:	mvnne	r2, #0
   1cec8:	mla	r6, r7, sl, r6
   1cecc:	mla	r3, r2, r5, r6
   1ced0:	subs	r6, r0, r7
   1ced4:	sbcs	r2, lr, r2
   1ced8:	movwcc	ip, #1
   1cedc:	mov	r2, #0
   1cee0:	cmp	ip, #0
   1cee4:	mvnne	r1, #0
   1cee8:	mvnne	r3, #0
   1ceec:	subs	r6, r0, r1
   1cef0:	sbcs	r6, lr, r3
   1cef4:	movwcc	r2, #1
   1cef8:	umull	r0, r6, r1, r5
   1cefc:	cmp	r2, #0
   1cf00:	str	r6, [sp, #12]
   1cf04:	mvnne	r0, #0
   1cf08:	cmp	r2, #0
   1cf0c:	umull	r6, r7, r0, r5
   1cf10:	mla	r7, r0, sl, r7
   1cf14:	str	r7, [sp, #8]
   1cf18:	ldr	r7, [sp, #12]
   1cf1c:	mla	r1, r1, sl, r7
   1cf20:	mla	r1, r3, r5, r1
   1cf24:	ldr	r3, [sp, #8]
   1cf28:	mvnne	r1, #0
   1cf2c:	mla	r7, r1, r5, r3
   1cf30:	ldr	r3, [sp, #16]
   1cf34:	subs	r0, r3, r0
   1cf38:	sbcs	r0, lr, r1
   1cf3c:	mov	r0, #0
   1cf40:	movwcc	r0, #1
   1cf44:	cmp	r0, #0
   1cf48:	mov	r1, r0
   1cf4c:	ldr	r0, [sp, #20]
   1cf50:	mvnne	r7, #0
   1cf54:	mvnne	r6, #0
   1cf58:	orr	r0, r0, r4
   1cf5c:	orr	r0, r0, ip
   1cf60:	orr	r0, r0, r2
   1cf64:	orr	r3, r0, r1
   1cf68:	b	1d19c <__assert_fail@plt+0xbe94>
   1cf6c:	mvn	r0, #0
   1cf70:	mvn	r1, #0
   1cf74:	mov	r2, r5
   1cf78:	mov	sl, r3
   1cf7c:	bl	1d708 <__assert_fail@plt+0xc400>
   1cf80:	mov	lr, r0
   1cf84:	subs	r0, r0, r6
   1cf88:	mov	r2, #0
   1cf8c:	mov	ip, r1
   1cf90:	str	sl, [sp, #24]
   1cf94:	sbcs	r0, r1, r7
   1cf98:	umull	r3, r1, r6, r5
   1cf9c:	str	lr, [sp, #4]
   1cfa0:	movwcc	r2, #1
   1cfa4:	mla	r6, r6, sl, r1
   1cfa8:	mov	r1, #0
   1cfac:	cmp	r2, #0
   1cfb0:	mla	r7, r7, r5, r6
   1cfb4:	str	r2, [sp, #20]
   1cfb8:	mvnne	r3, #0
   1cfbc:	cmp	r2, #0
   1cfc0:	mov	r2, #0
   1cfc4:	umull	r0, r4, r3, r5
   1cfc8:	mvnne	r7, #0
   1cfcc:	mla	r4, r3, sl, r4
   1cfd0:	subs	r3, lr, r3
   1cfd4:	sbcs	r3, ip, r7
   1cfd8:	mla	r4, r7, r5, r4
   1cfdc:	movwcc	r1, #1
   1cfe0:	cmp	r1, #0
   1cfe4:	str	r1, [sp, #16]
   1cfe8:	mvnne	r0, #0
   1cfec:	mvnne	r4, #0
   1cff0:	subs	r3, lr, r0
   1cff4:	sbcs	r3, ip, r4
   1cff8:	movwcc	r2, #1
   1cffc:	umull	r6, r3, r0, r5
   1d000:	cmp	r2, #0
   1d004:	mla	r0, r0, sl, r3
   1d008:	str	r2, [sp, #12]
   1d00c:	mvnne	r6, #0
   1d010:	mla	r0, r4, r5, r0
   1d014:	cmp	r2, #0
   1d018:	ldr	r4, [sp, #24]
   1d01c:	umull	r1, r7, r6, r5
   1d020:	mvnne	r0, #0
   1d024:	subs	r3, lr, r6
   1d028:	mla	r7, r6, sl, r7
   1d02c:	mov	r3, ip
   1d030:	mla	r7, r0, r5, r7
   1d034:	sbcs	r0, ip, r0
   1d038:	str	r3, [sp]
   1d03c:	mov	r0, #0
   1d040:	movwcc	r0, #1
   1d044:	cmp	r0, #0
   1d048:	str	r0, [sp, #8]
   1d04c:	mvnne	r1, #0
   1d050:	mvnne	r7, #0
   1d054:	subs	r0, lr, r1
   1d058:	sbcs	r0, ip, r7
   1d05c:	mov	ip, #0
   1d060:	movwcc	ip, #1
   1d064:	umull	r6, r0, r1, r5
   1d068:	cmp	ip, #0
   1d06c:	mla	r1, r1, r4, r0
   1d070:	mov	r0, lr
   1d074:	mvnne	r6, #0
   1d078:	mla	r1, r7, r5, r1
   1d07c:	cmp	ip, #0
   1d080:	umull	r2, sl, r6, r5
   1d084:	mvnne	r1, #0
   1d088:	mla	sl, r6, r4, sl
   1d08c:	subs	r6, lr, r6
   1d090:	mov	lr, #0
   1d094:	mla	r7, r1, r5, sl
   1d098:	sbcs	r1, r3, r1
   1d09c:	movwcc	lr, #1
   1d0a0:	ldr	r1, [sp, #24]
   1d0a4:	cmp	lr, #0
   1d0a8:	mvnne	r2, #0
   1d0ac:	mvnne	r7, #0
   1d0b0:	subs	r6, r0, r2
   1d0b4:	umull	r0, sl, r2, r5
   1d0b8:	sbcs	r6, r3, r7
   1d0bc:	mov	r3, #0
   1d0c0:	mla	r2, r2, r1, sl
   1d0c4:	movwcc	r3, #1
   1d0c8:	mla	r2, r7, r5, r2
   1d0cc:	cmp	r3, #0
   1d0d0:	mvnne	r0, #0
   1d0d4:	cmp	r3, #0
   1d0d8:	umull	r6, r4, r0, r5
   1d0dc:	mvnne	r2, #0
   1d0e0:	mla	r4, r0, r1, r4
   1d0e4:	ldr	r1, [sp, #4]
   1d0e8:	mla	r7, r2, r5, r4
   1d0ec:	ldr	r5, [sp, #16]
   1d0f0:	subs	r0, r1, r0
   1d0f4:	ldr	r0, [sp]
   1d0f8:	sbcs	r0, r0, r2
   1d0fc:	mov	r0, #0
   1d100:	movwcc	r0, #1
   1d104:	cmp	r0, #0
   1d108:	mov	r2, r0
   1d10c:	ldr	r0, [sp, #20]
   1d110:	mvnne	r7, #0
   1d114:	mvnne	r6, #0
   1d118:	orr	r0, r0, r5
   1d11c:	ldr	r5, [sp, #12]
   1d120:	orr	r0, r0, r5
   1d124:	ldr	r5, [sp, #8]
   1d128:	orr	r0, r0, r5
   1d12c:	orr	r0, r0, ip
   1d130:	orr	r0, r0, lr
   1d134:	orr	r0, r0, r3
   1d138:	orr	r0, r0, r2
   1d13c:	and	r3, r0, #1
   1d140:	b	1d19c <__assert_fail@plt+0xbe94>
   1d144:	mov	r1, #0
   1d148:	lsl	r2, r7, #9
   1d14c:	lsl	r0, r6, #9
   1d150:	lsr	r3, r7, #23
   1d154:	cmp	r1, r7, lsr #23
   1d158:	orr	r2, r2, r6, lsr #23
   1d15c:	mvnne	r0, #0
   1d160:	movwne	r3, #1
   1d164:	cmp	r1, r7, lsr #23
   1d168:	mvnne	r2, #0
   1d16c:	mov	r6, r0
   1d170:	mov	r7, r2
   1d174:	b	1d19c <__assert_fail@plt+0xbe94>
   1d178:	lsl	r1, r7, #1
   1d17c:	lsl	r0, r6, #1
   1d180:	cmp	r7, #0
   1d184:	lsr	r3, r7, #31
   1d188:	orr	r1, r1, r6, lsr #31
   1d18c:	mvnlt	r0, #0
   1d190:	mvnlt	r1, #0
   1d194:	mov	r6, r0
   1d198:	mov	r7, r1
   1d19c:	ldr	r1, [sp, #32]
   1d1a0:	ldr	r2, [sp, #28]
   1d1a4:	orr	r8, r3, r8
   1d1a8:	add	r0, r1, r2
   1d1ac:	str	r0, [r9]
   1d1b0:	ldrb	r0, [r1, r2]
   1d1b4:	cmp	r0, #0
   1d1b8:	orrne	r8, r8, #2
   1d1bc:	ldr	r0, [sp, #36]	; 0x24
   1d1c0:	strd	r6, [r0]
   1d1c4:	mov	r0, r8
   1d1c8:	sub	sp, fp, #28
   1d1cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d1d0:	movw	r0, #60313	; 0xeb99
   1d1d4:	movw	r1, #60351	; 0xebbf
   1d1d8:	movw	r3, #60367	; 0xebcf
   1d1dc:	mov	r2, #85	; 0x55
   1d1e0:	movt	r0, #1
   1d1e4:	movt	r1, #1
   1d1e8:	movt	r3, #1
   1d1ec:	bl	11308 <__assert_fail@plt>
   1d1f0:	clz	r2, r1
   1d1f4:	clz	r3, r0
   1d1f8:	lsr	r2, r2, #5
   1d1fc:	lsr	r3, r3, #5
   1d200:	orrs	r2, r3, r2
   1d204:	movwne	r1, #1
   1d208:	movwne	r0, #1
   1d20c:	cmp	r1, #0
   1d210:	beq	1d240 <__assert_fail@plt+0xbf38>
   1d214:	mvn	r2, #-2147483648	; 0x80000000
   1d218:	udiv	r2, r2, r1
   1d21c:	cmp	r2, r0
   1d220:	bcs	1d240 <__assert_fail@plt+0xbf38>
   1d224:	push	{fp, lr}
   1d228:	mov	fp, sp
   1d22c:	bl	1120c <__errno_location@plt>
   1d230:	mov	r1, #12
   1d234:	str	r1, [r0]
   1d238:	mov	r0, #0
   1d23c:	pop	{fp, pc}
   1d240:	b	1105c <calloc@plt>
   1d244:	cmp	r0, #0
   1d248:	movweq	r0, #1
   1d24c:	cmn	r0, #1
   1d250:	ble	1d258 <__assert_fail@plt+0xbf50>
   1d254:	b	11188 <malloc@plt>
   1d258:	push	{fp, lr}
   1d25c:	mov	fp, sp
   1d260:	bl	1120c <__errno_location@plt>
   1d264:	mov	r1, #12
   1d268:	str	r1, [r0]
   1d26c:	mov	r0, #0
   1d270:	pop	{fp, pc}
   1d274:	push	{fp, lr}
   1d278:	mov	fp, sp
   1d27c:	cmp	r0, #0
   1d280:	beq	1d29c <__assert_fail@plt+0xbf94>
   1d284:	cmp	r1, #0
   1d288:	beq	1d2a8 <__assert_fail@plt+0xbfa0>
   1d28c:	cmn	r1, #1
   1d290:	ble	1d2b4 <__assert_fail@plt+0xbfac>
   1d294:	pop	{fp, lr}
   1d298:	b	11110 <realloc@plt>
   1d29c:	mov	r0, r1
   1d2a0:	pop	{fp, lr}
   1d2a4:	b	1d244 <__assert_fail@plt+0xbf3c>
   1d2a8:	bl	199b4 <__assert_fail@plt+0x86ac>
   1d2ac:	mov	r0, #0
   1d2b0:	pop	{fp, pc}
   1d2b4:	bl	1120c <__errno_location@plt>
   1d2b8:	mov	r1, #12
   1d2bc:	str	r1, [r0]
   1d2c0:	mov	r0, #0
   1d2c4:	pop	{fp, pc}
   1d2c8:	push	{r4, r5, r6, sl, fp, lr}
   1d2cc:	add	fp, sp, #16
   1d2d0:	mov	r4, r0
   1d2d4:	bl	11164 <__fpending@plt>
   1d2d8:	ldr	r6, [r4]
   1d2dc:	mov	r5, r0
   1d2e0:	mov	r0, r4
   1d2e4:	bl	19808 <__assert_fail@plt+0x8500>
   1d2e8:	tst	r6, #32
   1d2ec:	bne	1d324 <__assert_fail@plt+0xc01c>
   1d2f0:	cmp	r0, #0
   1d2f4:	mov	r4, r0
   1d2f8:	mvnne	r4, #0
   1d2fc:	cmp	r5, #0
   1d300:	bne	1d330 <__assert_fail@plt+0xc028>
   1d304:	cmp	r0, #0
   1d308:	beq	1d330 <__assert_fail@plt+0xc028>
   1d30c:	bl	1120c <__errno_location@plt>
   1d310:	ldr	r0, [r0]
   1d314:	subs	r4, r0, #9
   1d318:	mvnne	r4, #0
   1d31c:	mov	r0, r4
   1d320:	pop	{r4, r5, r6, sl, fp, pc}
   1d324:	mvn	r4, #0
   1d328:	cmp	r0, #0
   1d32c:	beq	1d338 <__assert_fail@plt+0xc030>
   1d330:	mov	r0, r4
   1d334:	pop	{r4, r5, r6, sl, fp, pc}
   1d338:	bl	1120c <__errno_location@plt>
   1d33c:	mov	r1, #0
   1d340:	str	r1, [r0]
   1d344:	mov	r0, r4
   1d348:	pop	{r4, r5, r6, sl, fp, pc}
   1d34c:	sub	sp, sp, #8
   1d350:	push	{r4, r5, r6, r7, fp, lr}
   1d354:	add	fp, sp, #16
   1d358:	sub	sp, sp, #8
   1d35c:	mov	r5, r0
   1d360:	add	r0, fp, #8
   1d364:	cmp	r1, #11
   1d368:	str	r3, [fp, #12]
   1d36c:	str	r2, [fp, #8]
   1d370:	str	r0, [sp, #4]
   1d374:	bhi	1d3b0 <__assert_fail@plt+0xc0a8>
   1d378:	mov	r0, #1
   1d37c:	movw	r2, #1300	; 0x514
   1d380:	tst	r2, r0, lsl r1
   1d384:	bne	1d470 <__assert_fail@plt+0xc168>
   1d388:	movw	r2, #2570	; 0xa0a
   1d38c:	tst	r2, r0, lsl r1
   1d390:	bne	1d3d8 <__assert_fail@plt+0xc0d0>
   1d394:	cmp	r1, #0
   1d398:	bne	1d3b0 <__assert_fail@plt+0xc0a8>
   1d39c:	ldr	r0, [sp, #4]
   1d3a0:	add	r1, r0, #4
   1d3a4:	str	r1, [sp, #4]
   1d3a8:	mov	r1, #0
   1d3ac:	b	1d47c <__assert_fail@plt+0xc174>
   1d3b0:	sub	r0, r1, #1024	; 0x400
   1d3b4:	cmp	r0, #10
   1d3b8:	bhi	1d470 <__assert_fail@plt+0xc168>
   1d3bc:	mov	r2, #1
   1d3c0:	movw	r3, #645	; 0x285
   1d3c4:	tst	r3, r2, lsl r0
   1d3c8:	bne	1d470 <__assert_fail@plt+0xc168>
   1d3cc:	movw	r3, #1282	; 0x502
   1d3d0:	tst	r3, r2, lsl r0
   1d3d4:	beq	1d3e4 <__assert_fail@plt+0xc0dc>
   1d3d8:	mov	r0, r5
   1d3dc:	bl	11278 <fcntl64@plt>
   1d3e0:	b	1d488 <__assert_fail@plt+0xc180>
   1d3e4:	cmp	r0, #6
   1d3e8:	bne	1d470 <__assert_fail@plt+0xc168>
   1d3ec:	ldr	r0, [sp, #4]
   1d3f0:	movw	r7, #62168	; 0xf2d8
   1d3f4:	movt	r7, #2
   1d3f8:	add	r1, r0, #4
   1d3fc:	str	r1, [sp, #4]
   1d400:	ldr	r6, [r0]
   1d404:	ldr	r0, [r7]
   1d408:	cmp	r0, #0
   1d40c:	blt	1d4ac <__assert_fail@plt+0xc1a4>
   1d410:	mov	r0, r5
   1d414:	movw	r1, #1030	; 0x406
   1d418:	mov	r2, r6
   1d41c:	bl	11278 <fcntl64@plt>
   1d420:	mov	r4, r0
   1d424:	cmn	r0, #1
   1d428:	bgt	1d4a0 <__assert_fail@plt+0xc198>
   1d42c:	bl	1120c <__errno_location@plt>
   1d430:	ldr	r0, [r0]
   1d434:	cmp	r0, #22
   1d438:	bne	1d4a0 <__assert_fail@plt+0xc198>
   1d43c:	mov	r0, r5
   1d440:	mov	r1, #0
   1d444:	mov	r2, r6
   1d448:	bl	11278 <fcntl64@plt>
   1d44c:	mov	r4, r0
   1d450:	cmp	r0, #0
   1d454:	blt	1d48c <__assert_fail@plt+0xc184>
   1d458:	mvn	r0, #0
   1d45c:	str	r0, [r7]
   1d460:	mov	r0, #1
   1d464:	cmp	r0, #0
   1d468:	bne	1d4d8 <__assert_fail@plt+0xc1d0>
   1d46c:	b	1d48c <__assert_fail@plt+0xc184>
   1d470:	ldr	r0, [sp, #4]
   1d474:	add	r2, r0, #4
   1d478:	str	r2, [sp, #4]
   1d47c:	ldr	r2, [r0]
   1d480:	mov	r0, r5
   1d484:	bl	11278 <fcntl64@plt>
   1d488:	mov	r4, r0
   1d48c:	mov	r0, r4
   1d490:	sub	sp, fp, #16
   1d494:	pop	{r4, r5, r6, r7, fp, lr}
   1d498:	add	sp, sp, #8
   1d49c:	bx	lr
   1d4a0:	mov	r0, #1
   1d4a4:	str	r0, [r7]
   1d4a8:	b	1d48c <__assert_fail@plt+0xc184>
   1d4ac:	mov	r0, r5
   1d4b0:	mov	r1, #0
   1d4b4:	mov	r2, r6
   1d4b8:	bl	11278 <fcntl64@plt>
   1d4bc:	mov	r4, r0
   1d4c0:	ldr	r0, [r7]
   1d4c4:	add	r0, r0, #1
   1d4c8:	clz	r0, r0
   1d4cc:	lsr	r0, r0, #5
   1d4d0:	cmp	r0, #0
   1d4d4:	beq	1d48c <__assert_fail@plt+0xc184>
   1d4d8:	cmp	r4, #0
   1d4dc:	blt	1d48c <__assert_fail@plt+0xc184>
   1d4e0:	mov	r0, r4
   1d4e4:	mov	r1, #1
   1d4e8:	bl	11278 <fcntl64@plt>
   1d4ec:	cmp	r0, #0
   1d4f0:	blt	1d50c <__assert_fail@plt+0xc204>
   1d4f4:	orr	r2, r0, #1
   1d4f8:	mov	r0, r4
   1d4fc:	mov	r1, #2
   1d500:	bl	11278 <fcntl64@plt>
   1d504:	cmn	r0, #1
   1d508:	bne	1d48c <__assert_fail@plt+0xc184>
   1d50c:	bl	1120c <__errno_location@plt>
   1d510:	ldr	r6, [r0]
   1d514:	mov	r5, r0
   1d518:	mov	r0, r4
   1d51c:	bl	112f0 <close@plt>
   1d520:	str	r6, [r5]
   1d524:	mvn	r4, #0
   1d528:	b	1d48c <__assert_fail@plt+0xc184>
   1d52c:	push	{fp, lr}
   1d530:	mov	fp, sp
   1d534:	mov	r0, #14
   1d538:	bl	112a8 <nl_langinfo@plt>
   1d53c:	movw	r1, #56611	; 0xdd23
   1d540:	cmp	r0, #0
   1d544:	movt	r1, #1
   1d548:	movne	r1, r0
   1d54c:	movw	r0, #60446	; 0xec1e
   1d550:	ldrb	r2, [r1]
   1d554:	movt	r0, #1
   1d558:	cmp	r2, #0
   1d55c:	movne	r0, r1
   1d560:	pop	{fp, pc}
   1d564:	push	{r4, r5, r6, r7, fp, lr}
   1d568:	add	fp, sp, #16
   1d56c:	sub	sp, sp, #8
   1d570:	add	r5, sp, #4
   1d574:	cmp	r0, #0
   1d578:	mov	r7, r2
   1d57c:	mov	r4, r1
   1d580:	movne	r5, r0
   1d584:	mov	r0, r5
   1d588:	bl	11170 <mbrtowc@plt>
   1d58c:	mov	r6, r0
   1d590:	cmp	r7, #0
   1d594:	beq	1d5b8 <__assert_fail@plt+0xc2b0>
   1d598:	cmn	r6, #2
   1d59c:	bcc	1d5b8 <__assert_fail@plt+0xc2b0>
   1d5a0:	mov	r0, #0
   1d5a4:	bl	1d600 <__assert_fail@plt+0xc2f8>
   1d5a8:	cmp	r0, #0
   1d5ac:	ldrbeq	r0, [r4]
   1d5b0:	moveq	r6, #1
   1d5b4:	streq	r0, [r5]
   1d5b8:	mov	r0, r6
   1d5bc:	sub	sp, fp, #16
   1d5c0:	pop	{r4, r5, r6, r7, fp, pc}
   1d5c4:	cmp	r2, #0
   1d5c8:	beq	1d5f8 <__assert_fail@plt+0xc2f0>
   1d5cc:	mvn	r3, #0
   1d5d0:	udiv	r3, r3, r2
   1d5d4:	cmp	r3, r1
   1d5d8:	bcs	1d5f8 <__assert_fail@plt+0xc2f0>
   1d5dc:	push	{fp, lr}
   1d5e0:	mov	fp, sp
   1d5e4:	bl	1120c <__errno_location@plt>
   1d5e8:	mov	r1, #12
   1d5ec:	str	r1, [r0]
   1d5f0:	mov	r0, #0
   1d5f4:	pop	{fp, pc}
   1d5f8:	mul	r1, r2, r1
   1d5fc:	b	1d274 <__assert_fail@plt+0xbf6c>
   1d600:	push	{r4, sl, fp, lr}
   1d604:	add	fp, sp, #8
   1d608:	sub	sp, sp, #264	; 0x108
   1d60c:	add	r1, sp, #7
   1d610:	movw	r2, #257	; 0x101
   1d614:	bl	1d664 <__assert_fail@plt+0xc35c>
   1d618:	mov	r4, #0
   1d61c:	cmp	r0, #0
   1d620:	bne	1d658 <__assert_fail@plt+0xc350>
   1d624:	movw	r1, #60452	; 0xec24
   1d628:	add	r0, sp, #7
   1d62c:	movt	r1, #1
   1d630:	bl	1108c <strcmp@plt>
   1d634:	cmp	r0, #0
   1d638:	beq	1d658 <__assert_fail@plt+0xc350>
   1d63c:	movw	r1, #60454	; 0xec26
   1d640:	add	r0, sp, #7
   1d644:	movt	r1, #1
   1d648:	bl	1108c <strcmp@plt>
   1d64c:	mov	r4, r0
   1d650:	cmp	r0, #0
   1d654:	movwne	r4, #1
   1d658:	mov	r0, r4
   1d65c:	sub	sp, fp, #8
   1d660:	pop	{r4, sl, fp, pc}
   1d664:	push	{r4, r5, r6, r7, fp, lr}
   1d668:	add	fp, sp, #16
   1d66c:	mov	r4, r1
   1d670:	mov	r1, #0
   1d674:	mov	r6, r2
   1d678:	bl	11290 <setlocale@plt>
   1d67c:	cmp	r0, #0
   1d680:	beq	1d6b0 <__assert_fail@plt+0xc3a8>
   1d684:	mov	r7, r0
   1d688:	bl	111f4 <strlen@plt>
   1d68c:	cmp	r0, r6
   1d690:	bcs	1d6d0 <__assert_fail@plt+0xc3c8>
   1d694:	add	r2, r0, #1
   1d698:	mov	r0, r4
   1d69c:	mov	r1, r7
   1d6a0:	bl	110d4 <memcpy@plt>
   1d6a4:	mov	r5, #0
   1d6a8:	mov	r0, r5
   1d6ac:	pop	{r4, r5, r6, r7, fp, pc}
   1d6b0:	cmp	r6, #0
   1d6b4:	mov	r5, #22
   1d6b8:	movne	r0, #0
   1d6bc:	strbne	r0, [r4]
   1d6c0:	movne	r0, r5
   1d6c4:	popne	{r4, r5, r6, r7, fp, pc}
   1d6c8:	mov	r0, r5
   1d6cc:	pop	{r4, r5, r6, r7, fp, pc}
   1d6d0:	mov	r5, #34	; 0x22
   1d6d4:	cmp	r6, #0
   1d6d8:	beq	1d6f8 <__assert_fail@plt+0xc3f0>
   1d6dc:	sub	r6, r6, #1
   1d6e0:	mov	r0, r4
   1d6e4:	mov	r1, r7
   1d6e8:	mov	r2, r6
   1d6ec:	bl	110d4 <memcpy@plt>
   1d6f0:	mov	r0, #0
   1d6f4:	strb	r0, [r4, r6]
   1d6f8:	mov	r0, r5
   1d6fc:	pop	{r4, r5, r6, r7, fp, pc}
   1d700:	mov	r1, #0
   1d704:	b	11290 <setlocale@plt>
   1d708:	cmp	r3, #0
   1d70c:	cmpeq	r2, #0
   1d710:	bne	1d728 <__assert_fail@plt+0xc420>
   1d714:	cmp	r1, #0
   1d718:	cmpeq	r0, #0
   1d71c:	mvnne	r1, #0
   1d720:	mvnne	r0, #0
   1d724:	b	1d744 <__assert_fail@plt+0xc43c>
   1d728:	sub	sp, sp, #8
   1d72c:	push	{sp, lr}
   1d730:	bl	1d754 <__assert_fail@plt+0xc44c>
   1d734:	ldr	lr, [sp, #4]
   1d738:	add	sp, sp, #8
   1d73c:	pop	{r2, r3}
   1d740:	bx	lr
   1d744:	push	{r1, lr}
   1d748:	mov	r0, #8
   1d74c:	bl	11074 <raise@plt>
   1d750:	pop	{r1, pc}
   1d754:	cmp	r1, r3
   1d758:	cmpeq	r0, r2
   1d75c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d760:	mov	r4, r0
   1d764:	movcc	r0, #0
   1d768:	mov	r5, r1
   1d76c:	ldr	lr, [sp, #36]	; 0x24
   1d770:	movcc	r1, r0
   1d774:	bcc	1d870 <__assert_fail@plt+0xc568>
   1d778:	cmp	r3, #0
   1d77c:	clzeq	ip, r2
   1d780:	clzne	ip, r3
   1d784:	addeq	ip, ip, #32
   1d788:	cmp	r5, #0
   1d78c:	clzeq	r1, r4
   1d790:	addeq	r1, r1, #32
   1d794:	clzne	r1, r5
   1d798:	sub	ip, ip, r1
   1d79c:	sub	sl, ip, #32
   1d7a0:	lsl	r9, r3, ip
   1d7a4:	rsb	fp, ip, #32
   1d7a8:	orr	r9, r9, r2, lsl sl
   1d7ac:	orr	r9, r9, r2, lsr fp
   1d7b0:	lsl	r8, r2, ip
   1d7b4:	cmp	r5, r9
   1d7b8:	cmpeq	r4, r8
   1d7bc:	movcc	r0, #0
   1d7c0:	movcc	r1, r0
   1d7c4:	bcc	1d7e0 <__assert_fail@plt+0xc4d8>
   1d7c8:	mov	r0, #1
   1d7cc:	subs	r4, r4, r8
   1d7d0:	lsl	r1, r0, sl
   1d7d4:	orr	r1, r1, r0, lsr fp
   1d7d8:	lsl	r0, r0, ip
   1d7dc:	sbc	r5, r5, r9
   1d7e0:	cmp	ip, #0
   1d7e4:	beq	1d870 <__assert_fail@plt+0xc568>
   1d7e8:	lsr	r6, r8, #1
   1d7ec:	orr	r6, r6, r9, lsl #31
   1d7f0:	lsr	r7, r9, #1
   1d7f4:	mov	r2, ip
   1d7f8:	b	1d81c <__assert_fail@plt+0xc514>
   1d7fc:	subs	r3, r4, r6
   1d800:	sbc	r8, r5, r7
   1d804:	adds	r3, r3, r3
   1d808:	adc	r8, r8, r8
   1d80c:	adds	r4, r3, #1
   1d810:	adc	r5, r8, #0
   1d814:	subs	r2, r2, #1
   1d818:	beq	1d838 <__assert_fail@plt+0xc530>
   1d81c:	cmp	r5, r7
   1d820:	cmpeq	r4, r6
   1d824:	bcs	1d7fc <__assert_fail@plt+0xc4f4>
   1d828:	adds	r4, r4, r4
   1d82c:	adc	r5, r5, r5
   1d830:	subs	r2, r2, #1
   1d834:	bne	1d81c <__assert_fail@plt+0xc514>
   1d838:	lsr	r3, r4, ip
   1d83c:	orr	r3, r3, r5, lsl fp
   1d840:	lsr	r2, r5, ip
   1d844:	orr	r3, r3, r5, lsr sl
   1d848:	adds	r0, r0, r4
   1d84c:	mov	r4, r3
   1d850:	lsl	r3, r2, ip
   1d854:	orr	r3, r3, r4, lsl sl
   1d858:	lsl	ip, r4, ip
   1d85c:	orr	r3, r3, r4, lsr fp
   1d860:	adc	r1, r1, r5
   1d864:	subs	r0, r0, ip
   1d868:	mov	r5, r2
   1d86c:	sbc	r1, r1, r3
   1d870:	cmp	lr, #0
   1d874:	strdne	r4, [lr]
   1d878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d87c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d880:	mov	r7, r0
   1d884:	ldr	r6, [pc, #72]	; 1d8d4 <__assert_fail@plt+0xc5cc>
   1d888:	ldr	r5, [pc, #72]	; 1d8d8 <__assert_fail@plt+0xc5d0>
   1d88c:	add	r6, pc, r6
   1d890:	add	r5, pc, r5
   1d894:	sub	r6, r6, r5
   1d898:	mov	r8, r1
   1d89c:	mov	r9, r2
   1d8a0:	bl	11030 <fdopen@plt-0x20>
   1d8a4:	asrs	r6, r6, #2
   1d8a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d8ac:	mov	r4, #0
   1d8b0:	add	r4, r4, #1
   1d8b4:	ldr	r3, [r5], #4
   1d8b8:	mov	r2, r9
   1d8bc:	mov	r1, r8
   1d8c0:	mov	r0, r7
   1d8c4:	blx	r3
   1d8c8:	cmp	r6, r4
   1d8cc:	bne	1d8b0 <__assert_fail@plt+0xc5a8>
   1d8d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d8d4:	andeq	r1, r1, r8, ror r6
   1d8d8:	andeq	r1, r1, r0, ror r6
   1d8dc:	bx	lr
   1d8e0:	ldr	r3, [pc, #12]	; 1d8f4 <__assert_fail@plt+0xc5ec>
   1d8e4:	mov	r1, #0
   1d8e8:	add	r3, pc, r3
   1d8ec:	ldr	r2, [r3]
   1d8f0:	b	11218 <__cxa_atexit@plt>
   1d8f4:	andeq	r1, r1, r4, lsl r8

Disassembly of section .fini:

0001d8f8 <.fini>:
   1d8f8:	push	{r3, lr}
   1d8fc:	pop	{r3, pc}
