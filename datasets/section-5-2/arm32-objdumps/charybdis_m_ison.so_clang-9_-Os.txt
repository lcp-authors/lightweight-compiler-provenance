
../repos/charybdis/modules/.libs/m_ison.so:     file format elf32-littlearm


Disassembly of section .init:

00000524 <_init>:
 524:	push	{r3, lr}
 528:	bl	5b0 <call_weak_fn>
 52c:	pop	{r3, pc}

Disassembly of section .plt:

00000530 <.plt>:
 530:	push	{lr}		; (str lr, [sp, #-4]!)
 534:	ldr	lr, [pc, #4]	; 540 <.plt+0x10>
 538:	add	lr, pc, lr
 53c:	ldr	pc, [lr, #8]!
 540:	.word	0x00010ac0

00000544 <__cxa_finalize@plt>:
 544:	add	ip, pc, #0, 12
 548:	add	ip, ip, #16, 20	; 0x10000
 54c:	ldr	pc, [ip, #2752]!	; 0xac0

00000550 <sendto_one@plt>:
 550:	add	ip, pc, #0, 12
 554:	add	ip, ip, #16, 20	; 0x10000
 558:	ldr	pc, [ip, #2744]!	; 0xab8

0000055c <memcpy@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2736]!	; 0xab0

00000568 <strcpy@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2728]!	; 0xaa8

00000574 <__gmon_start__@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2720]!	; 0xaa0

00000580 <strlen@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2712]!	; 0xa98

0000058c <rb_strtok_r@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2704]!	; 0xa90

00000598 <sprintf@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2696]!	; 0xa88

000005a4 <find_named_person@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2688]!	; 0xa80

Disassembly of section .text:

000005b0 <call_weak_fn>:
 5b0:	ldr	r3, [pc, #20]	; 5cc <call_weak_fn+0x1c>
 5b4:	ldr	r2, [pc, #20]	; 5d0 <call_weak_fn+0x20>
 5b8:	add	r3, pc, r3
 5bc:	ldr	r2, [r3, r2]
 5c0:	cmp	r2, #0
 5c4:	bxeq	lr
 5c8:	b	574 <__gmon_start__@plt>
 5cc:	.word	0x00010a40
 5d0:	.word	0x00000038

000005d4 <deregister_tm_clones>:
 5d4:	ldr	r0, [pc, #44]	; 608 <deregister_tm_clones+0x34>
 5d8:	ldr	r3, [pc, #44]	; 60c <deregister_tm_clones+0x38>
 5dc:	add	r0, pc, r0
 5e0:	add	r3, pc, r3
 5e4:	cmp	r3, r0
 5e8:	ldr	r3, [pc, #32]	; 610 <deregister_tm_clones+0x3c>
 5ec:	add	r3, pc, r3
 5f0:	bxeq	lr
 5f4:	ldr	r2, [pc, #24]	; 614 <deregister_tm_clones+0x40>
 5f8:	ldr	r3, [r3, r2]
 5fc:	cmp	r3, #0
 600:	bxeq	lr
 604:	bx	r3
 608:	.word	0x00010ad8
 60c:	.word	0x00010ad4
 610:	.word	0x00010a0c
 614:	.word	0x00000034

00000618 <register_tm_clones>:
 618:	ldr	r0, [pc, #56]	; 658 <register_tm_clones+0x40>
 61c:	ldr	r3, [pc, #56]	; 65c <register_tm_clones+0x44>
 620:	add	r0, pc, r0
 624:	add	r3, pc, r3
 628:	sub	r1, r3, r0
 62c:	ldr	r3, [pc, #44]	; 660 <register_tm_clones+0x48>
 630:	asr	r1, r1, #2
 634:	add	r3, pc, r3
 638:	add	r1, r1, r1, lsr #31
 63c:	asrs	r1, r1, #1
 640:	bxeq	lr
 644:	ldr	r2, [pc, #24]	; 664 <register_tm_clones+0x4c>
 648:	ldr	r3, [r3, r2]
 64c:	cmp	r3, #0
 650:	bxeq	lr
 654:	bx	r3
 658:	.word	0x00010a94
 65c:	.word	0x00010a90
 660:	.word	0x000109c4
 664:	.word	0x0000003c

00000668 <__do_global_dtors_aux>:
 668:	ldr	r3, [pc, #76]	; 6bc <__do_global_dtors_aux+0x54>
 66c:	ldr	r2, [pc, #76]	; 6c0 <__do_global_dtors_aux+0x58>
 670:	add	r3, pc, r3
 674:	add	r2, pc, r2
 678:	ldrb	r3, [r3]
 67c:	cmp	r3, #0
 680:	bxne	lr
 684:	ldr	r3, [pc, #56]	; 6c4 <__do_global_dtors_aux+0x5c>
 688:	push	{r4, lr}
 68c:	ldr	r3, [r2, r3]
 690:	cmp	r3, #0
 694:	beq	6a4 <__do_global_dtors_aux+0x3c>
 698:	ldr	r3, [pc, #40]	; 6c8 <__do_global_dtors_aux+0x60>
 69c:	ldr	r0, [pc, r3]
 6a0:	bl	544 <__cxa_finalize@plt>
 6a4:	bl	5d4 <deregister_tm_clones>
 6a8:	ldr	r3, [pc, #28]	; 6cc <__do_global_dtors_aux+0x64>
 6ac:	mov	r2, #1
 6b0:	add	r3, pc, r3
 6b4:	strb	r2, [r3]
 6b8:	pop	{r4, pc}
 6bc:	.word	0x00010a44
 6c0:	.word	0x00010984
 6c4:	.word	0x00000030
 6c8:	.word	0x000109a0
 6cc:	.word	0x00010a04

000006d0 <frame_dummy>:
 6d0:	b	618 <register_tm_clones>

000006d4 <m_ison>:
 6d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 6d8:	add	fp, sp, #28
 6dc:	sub	sp, sp, #20
 6e0:	ldr	r0, [pc, #284]	; 804 <m_ison+0x130>
 6e4:	mov	r7, r3
 6e8:	mov	r4, r2
 6ec:	add	r3, r2, #88	; 0x58
 6f0:	ldr	r0, [pc, r0]
 6f4:	ldr	r5, [pc, #268]	; 808 <m_ison+0x134>
 6f8:	ldr	r1, [pc, #268]	; 80c <m_ison+0x138>
 6fc:	add	r5, pc, r5
 700:	add	r2, r0, #88	; 0x58
 704:	add	r1, pc, r1
 708:	mov	r0, r5
 70c:	bl	598 <sprintf@plt>
 710:	mov	r0, r5
 714:	bl	580 <strlen@plt>
 718:	add	r6, r5, r0
 71c:	cmp	r7, #2
 720:	str	r4, [fp, #-40]	; 0xffffffd8
 724:	blt	7dc <m_ison+0x108>
 728:	str	r7, [fp, #-44]	; 0xffffffd4
 72c:	mov	r8, #1
 730:	sub	r4, fp, #36	; 0x24
 734:	add	r9, r5, #512	; 0x200
 738:	ldr	sl, [pc, #208]	; 810 <m_ison+0x13c>
 73c:	add	sl, pc, sl
 740:	ldr	r0, [fp, #8]
 744:	ldr	r5, [r0, r8, lsl #2]
 748:	mov	r0, r5
 74c:	bl	580 <strlen@plt>
 750:	add	r0, r0, #8
 754:	bic	r0, r0, #7
 758:	sub	r0, sp, r0
 75c:	mov	sp, r0
 760:	mov	r1, r5
 764:	bl	568 <strcpy@plt>
 768:	mov	r1, sl
 76c:	mov	r2, r4
 770:	bl	58c <rb_strtok_r@plt>
 774:	cmp	r0, #0
 778:	beq	7cc <m_ison+0xf8>
 77c:	bl	5a4 <find_named_person@plt>
 780:	cmp	r0, #0
 784:	beq	7c4 <m_ison+0xf0>
 788:	add	r7, r0, #88	; 0x58
 78c:	mov	r0, r7
 790:	bl	580 <strlen@plt>
 794:	mov	r5, r0
 798:	add	r0, r0, r6
 79c:	add	r0, r0, #5
 7a0:	cmp	r0, r9
 7a4:	bcs	7dc <m_ison+0x108>
 7a8:	mov	r0, r6
 7ac:	mov	r1, r7
 7b0:	mov	r2, r5
 7b4:	bl	55c <memcpy@plt>
 7b8:	mov	r0, #32
 7bc:	strb	r0, [r6, r5]!
 7c0:	add	r6, r6, #1
 7c4:	mov	r0, #0
 7c8:	b	768 <m_ison+0x94>
 7cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
 7d0:	add	r8, r8, #1
 7d4:	cmp	r8, r0
 7d8:	bne	740 <m_ison+0x6c>
 7dc:	mov	r0, #0
 7e0:	strb	r0, [r6]
 7e4:	ldr	r1, [pc, #40]	; 814 <m_ison+0x140>
 7e8:	ldr	r2, [pc, #40]	; 818 <m_ison+0x144>
 7ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
 7f0:	add	r1, pc, r1
 7f4:	add	r2, pc, r2
 7f8:	bl	550 <sendto_one@plt>
 7fc:	sub	sp, fp, #28
 800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 804:	.word	0x00010948
 808:	.word	0x000109b9
 80c:	.word	0x0000011d
 810:	.word	0x000000f2
 814:	.word	0x00000040
 818:	.word	0x000108c1

Disassembly of section .fini:

0000081c <_fini>:
 81c:	push	{r3, lr}
 820:	pop	{r3, pc}
