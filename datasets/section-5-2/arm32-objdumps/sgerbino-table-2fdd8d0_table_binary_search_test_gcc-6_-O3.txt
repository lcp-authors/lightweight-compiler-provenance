
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012928 <.init>:
   12928:	push	{r3, lr}
   1292c:	bl	12c34 <_start@@Base+0x3c>
   12930:	pop	{r3, pc}

Disassembly of section .plt:

00012934 <raise@plt-0x14>:
   12934:	push	{lr}		; (str lr, [sp, #-4]!)
   12938:	ldr	lr, [pc, #4]	; 12944 <raise@plt-0x4>
   1293c:	add	lr, pc, lr
   12940:	ldr	pc, [lr, #8]!
   12944:			; <UNDEFINED> instruction: 0x000166bc

00012948 <raise@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #90112	; 0x16000
   12950:	ldr	pc, [ip, #1724]!	; 0x6bc

00012954 <strcmp@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #90112	; 0x16000
   1295c:	ldr	pc, [ip, #1716]!	; 0x6b4

00012960 <printf@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #90112	; 0x16000
   12968:	ldr	pc, [ip, #1708]!	; 0x6ac

0001296c <free@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #90112	; 0x16000
   12974:	ldr	pc, [ip, #1700]!	; 0x6a4

00012978 <realloc@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #90112	; 0x16000
   12980:	ldr	pc, [ip, #1692]!	; 0x69c

00012984 <strcpy@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #90112	; 0x16000
   1298c:	ldr	pc, [ip, #1684]!	; 0x694

00012990 <malloc@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #90112	; 0x16000
   12998:	ldr	pc, [ip, #1676]!	; 0x68c

0001299c <__libc_start_main@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #90112	; 0x16000
   129a4:	ldr	pc, [ip, #1668]!	; 0x684

000129a8 <__gmon_start__@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #90112	; 0x16000
   129b0:	ldr	pc, [ip, #1660]!	; 0x67c

000129b4 <strlen@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #90112	; 0x16000
   129bc:	ldr	pc, [ip, #1652]!	; 0x674

000129c0 <snprintf@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #90112	; 0x16000
   129c8:	ldr	pc, [ip, #1644]!	; 0x66c

000129cc <__isoc99_sscanf@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #90112	; 0x16000
   129d4:	ldr	pc, [ip, #1636]!	; 0x664

000129d8 <abort@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #90112	; 0x16000
   129e0:	ldr	pc, [ip, #1628]!	; 0x65c

Disassembly of section .text:

000129e4 <main@@Base>:
   129e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   129e8:	vpush	{d8}
   129ec:	mov	r4, #0
   129f0:	mov	r6, r4
   129f4:	mov	sl, r4
   129f8:	sub	sp, sp, #64	; 0x40
   129fc:	add	r0, sp, #8
   12a00:	bl	12d74 <table_init@@Base>
   12a04:	mov	r2, #0
   12a08:	ldr	r1, [pc, #460]	; 12bdc <main@@Base+0x1f8>
   12a0c:	add	r0, sp, #8
   12a10:	bl	13798 <table_add_column@@Base>
   12a14:	mov	r2, #16
   12a18:	ldr	r1, [pc, #448]	; 12be0 <main@@Base+0x1fc>
   12a1c:	mov	r5, #1
   12a20:	vldr	s16, [pc, #424]	; 12bd0 <main@@Base+0x1ec>
   12a24:	ldr	r9, [pc, #440]	; 12be4 <main@@Base+0x200>
   12a28:	vldr	s17, [pc, #420]	; 12bd4 <main@@Base+0x1f0>
   12a2c:	mov	r8, r0
   12a30:	add	r0, sp, #8
   12a34:	bl	13798 <table_add_column@@Base>
   12a38:	mov	r7, r0
   12a3c:	b	12a48 <main@@Base+0x64>
   12a40:	add	r4, r4, #1
   12a44:	add	r5, r5, #1
   12a48:	smull	r2, r3, r9, r4
   12a4c:	asr	r2, r4, #31
   12a50:	rsb	r3, r2, r3, asr #2
   12a54:	cmp	r4, #0
   12a58:	add	r3, r3, r3, lsl #2
   12a5c:	beq	12b88 <main@@Base+0x1a4>
   12a60:	cmp	r4, r3, lsl #1
   12a64:	vldreq	s16, [pc, #356]	; 12bd0 <main@@Base+0x1ec>
   12a68:	addeq	r6, r6, #1
   12a6c:	tst	r4, #1
   12a70:	add	r0, sp, #8
   12a74:	vaddeq.f32	s16, s16, s17
   12a78:	bl	16594 <table_add_row@@Base>
   12a7c:	mov	r3, r6
   12a80:	mov	r2, r8
   12a84:	mov	r1, r4
   12a88:	add	r0, sp, #8
   12a8c:	bl	16b28 <table_set_int@@Base>
   12a90:	mov	r2, r7
   12a94:	vmov.f32	s0, s16
   12a98:	mov	r1, r4
   12a9c:	add	r0, sp, #8
   12aa0:	bl	17314 <table_set_float@@Base>
   12aa4:	cmp	r5, #100	; 0x64
   12aa8:	bne	12a40 <main@@Base+0x5c>
   12aac:	mov	r3, #0
   12ab0:	mov	r2, #4
   12ab4:	mov	r1, r8
   12ab8:	add	r0, sp, #8
   12abc:	bl	15878 <table_sorted_find_int@@Base>
   12ac0:	mov	r1, r8
   12ac4:	mov	r3, #1
   12ac8:	mov	r2, #4
   12acc:	mov	r4, r0
   12ad0:	add	r0, sp, #8
   12ad4:	bl	15878 <table_sorted_find_int@@Base>
   12ad8:	cmp	r4, #40	; 0x28
   12adc:	moveq	r6, #0
   12ae0:	mov	r5, r0
   12ae4:	beq	12af8 <main@@Base+0x114>
   12ae8:	mov	r1, r4
   12aec:	ldr	r0, [pc, #244]	; 12be8 <main@@Base+0x204>
   12af0:	bl	12960 <printf@plt>
   12af4:	mvn	r6, #0
   12af8:	cmp	r5, #49	; 0x31
   12afc:	beq	12b10 <main@@Base+0x12c>
   12b00:	mov	r1, r5
   12b04:	ldr	r0, [pc, #224]	; 12bec <main@@Base+0x208>
   12b08:	bl	12960 <printf@plt>
   12b0c:	mvn	r6, #0
   12b10:	mov	r3, r4
   12b14:	mov	r2, #0
   12b18:	vldr	s0, [pc, #184]	; 12bd8 <main@@Base+0x1f4>
   12b1c:	mov	r1, r7
   12b20:	str	r5, [sp]
   12b24:	add	r0, sp, #8
   12b28:	bl	16244 <table_sorted_subset_find_float@@Base>
   12b2c:	mov	r3, r4
   12b30:	str	r5, [sp]
   12b34:	mov	r1, r7
   12b38:	mov	r2, #1
   12b3c:	vldr	s0, [pc, #148]	; 12bd8 <main@@Base+0x1f4>
   12b40:	mov	r8, r0
   12b44:	add	r0, sp, #8
   12b48:	bl	16244 <table_sorted_subset_find_float@@Base>
   12b4c:	cmp	r8, #42	; 0x2a
   12b50:	mov	r4, r0
   12b54:	beq	12b68 <main@@Base+0x184>
   12b58:	mov	r1, r8
   12b5c:	ldr	r0, [pc, #140]	; 12bf0 <main@@Base+0x20c>
   12b60:	bl	12960 <printf@plt>
   12b64:	mvn	r6, #0
   12b68:	cmp	r4, #43	; 0x2b
   12b6c:	bne	12bbc <main@@Base+0x1d8>
   12b70:	add	r0, sp, #8
   12b74:	bl	12dbc <table_destroy@@Base>
   12b78:	mov	r0, r6
   12b7c:	add	sp, sp, #64	; 0x40
   12b80:	vpop	{d8}
   12b84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b88:	add	r0, sp, #8
   12b8c:	bl	16594 <table_add_row@@Base>
   12b90:	mov	r2, r8
   12b94:	mov	r1, sl
   12b98:	mov	r3, r6
   12b9c:	add	r0, sp, #8
   12ba0:	bl	16b28 <table_set_int@@Base>
   12ba4:	vmov.f32	s0, s16
   12ba8:	mov	r2, r7
   12bac:	mov	r1, sl
   12bb0:	add	r0, sp, #8
   12bb4:	bl	17314 <table_set_float@@Base>
   12bb8:	b	12a40 <main@@Base+0x5c>
   12bbc:	mov	r1, r4
   12bc0:	ldr	r0, [pc, #44]	; 12bf4 <main@@Base+0x210>
   12bc4:	bl	12960 <printf@plt>
   12bc8:	mvn	r6, #0
   12bcc:	b	12b70 <main@@Base+0x18c>
   12bd0:	andeq	r0, r0, r0
   12bd4:	cdpcc	0, 8, cr0, cr0, cr0, {0}
   12bd8:	svccc	0x00000000
   12bdc:	muleq	r1, r0, r3
   12be0:	muleq	r1, r4, r3
   12be4:	strbtvs	r6, [r6], -r7, ror #12
   12be8:	muleq	r1, r8, r3
   12bec:	ldrdeq	r8, [r1], -r0
   12bf0:	andeq	r8, r1, r8, lsl #8
   12bf4:	andeq	r8, r1, r8, asr #8

00012bf8 <_start@@Base>:
   12bf8:	mov	fp, #0
   12bfc:	mov	lr, #0
   12c00:	pop	{r1}		; (ldr r1, [sp], #4)
   12c04:	mov	r2, sp
   12c08:	push	{r2}		; (str r2, [sp, #-4]!)
   12c0c:	push	{r0}		; (str r0, [sp, #-4]!)
   12c10:	ldr	ip, [pc, #16]	; 12c28 <_start@@Base+0x30>
   12c14:	push	{ip}		; (str ip, [sp, #-4]!)
   12c18:	ldr	r0, [pc, #12]	; 12c2c <_start@@Base+0x34>
   12c1c:	ldr	r3, [pc, #12]	; 12c30 <_start@@Base+0x38>
   12c20:	bl	1299c <__libc_start_main@plt>
   12c24:	bl	129d8 <abort@plt>
   12c28:	andeq	r8, r1, r0, lsl #7
   12c2c:	andeq	r2, r1, r4, ror #19
   12c30:	andeq	r8, r1, r0, lsr #6
   12c34:	ldr	r3, [pc, #20]	; 12c50 <_start@@Base+0x58>
   12c38:	ldr	r2, [pc, #20]	; 12c54 <_start@@Base+0x5c>
   12c3c:	add	r3, pc, r3
   12c40:	ldr	r2, [r3, r2]
   12c44:	cmp	r2, #0
   12c48:	bxeq	lr
   12c4c:	b	129a8 <__gmon_start__@plt>
   12c50:			; <UNDEFINED> instruction: 0x000163bc
   12c54:	andeq	r0, r0, r0, asr #32
   12c58:	ldr	r3, [pc, #28]	; 12c7c <_start@@Base+0x84>
   12c5c:	ldr	r0, [pc, #28]	; 12c80 <_start@@Base+0x88>
   12c60:	sub	r3, r3, r0
   12c64:	cmp	r3, #6
   12c68:	bxls	lr
   12c6c:	ldr	r3, [pc, #16]	; 12c84 <_start@@Base+0x8c>
   12c70:	cmp	r3, #0
   12c74:	bxeq	lr
   12c78:	bx	r3
   12c7c:	andeq	r9, r2, pc, asr #32
   12c80:	andeq	r9, r2, ip, asr #32
   12c84:	andeq	r0, r0, r0
   12c88:	ldr	r1, [pc, #36]	; 12cb4 <_start@@Base+0xbc>
   12c8c:	ldr	r0, [pc, #36]	; 12cb8 <_start@@Base+0xc0>
   12c90:	sub	r1, r1, r0
   12c94:	asr	r1, r1, #2
   12c98:	add	r1, r1, r1, lsr #31
   12c9c:	asrs	r1, r1, #1
   12ca0:	bxeq	lr
   12ca4:	ldr	r3, [pc, #16]	; 12cbc <_start@@Base+0xc4>
   12ca8:	cmp	r3, #0
   12cac:	bxeq	lr
   12cb0:	bx	r3
   12cb4:	andeq	r9, r2, ip, asr #32
   12cb8:	andeq	r9, r2, ip, asr #32
   12cbc:	andeq	r0, r0, r0
   12cc0:	push	{r4, lr}
   12cc4:	ldr	r4, [pc, #24]	; 12ce4 <_start@@Base+0xec>
   12cc8:	ldrb	r3, [r4]
   12ccc:	cmp	r3, #0
   12cd0:	popne	{r4, pc}
   12cd4:	bl	12c58 <_start@@Base+0x60>
   12cd8:	mov	r3, #1
   12cdc:	strb	r3, [r4]
   12ce0:	pop	{r4, pc}
   12ce4:	andeq	r9, r2, ip, asr #32
   12ce8:	ldr	r0, [pc, #40]	; 12d18 <_start@@Base+0x120>
   12cec:	ldr	r3, [r0]
   12cf0:	cmp	r3, #0
   12cf4:	bne	12cfc <_start@@Base+0x104>
   12cf8:	b	12c88 <_start@@Base+0x90>
   12cfc:	ldr	r3, [pc, #24]	; 12d1c <_start@@Base+0x124>
   12d00:	cmp	r3, #0
   12d04:	beq	12cf8 <_start@@Base+0x100>
   12d08:	push	{r4, lr}
   12d0c:	blx	r3
   12d10:	pop	{r4, lr}
   12d14:	b	12c88 <_start@@Base+0x90>
   12d18:	andeq	r8, r2, r4, lsl pc
   12d1c:	andeq	r0, r0, r0

00012d20 <table_new@@Base>:
   12d20:	push	{r4, lr}
   12d24:	mov	r0, #56	; 0x38
   12d28:	bl	12990 <malloc@plt>
   12d2c:	mov	r2, #0
   12d30:	mov	r1, #10
   12d34:	mov	ip, #20
   12d38:	str	ip, [r0, #24]
   12d3c:	str	r2, [r0]
   12d40:	str	r2, [r0, #4]
   12d44:	str	r2, [r0, #12]
   12d48:	str	r2, [r0, #16]
   12d4c:	str	r2, [r0, #20]
   12d50:	str	r2, [r0, #28]
   12d54:	str	r2, [r0, #36]	; 0x24
   12d58:	str	r2, [r0, #40]	; 0x28
   12d5c:	str	r2, [r0, #44]	; 0x2c
   12d60:	str	r2, [r0, #32]
   12d64:	str	r2, [r0, #52]	; 0x34
   12d68:	str	r1, [r0, #8]
   12d6c:	str	r1, [r0, #48]	; 0x30
   12d70:	pop	{r4, pc}

00012d74 <table_init@@Base>:
   12d74:	mov	r3, #0
   12d78:	mov	r2, #10
   12d7c:	mov	r1, #20
   12d80:	str	r1, [r0, #24]
   12d84:	str	r3, [r0]
   12d88:	str	r3, [r0, #4]
   12d8c:	str	r3, [r0, #12]
   12d90:	str	r3, [r0, #16]
   12d94:	str	r3, [r0, #20]
   12d98:	str	r3, [r0, #28]
   12d9c:	str	r3, [r0, #36]	; 0x24
   12da0:	str	r3, [r0, #40]	; 0x28
   12da4:	str	r3, [r0, #44]	; 0x2c
   12da8:	str	r3, [r0, #32]
   12dac:	str	r3, [r0, #52]	; 0x34
   12db0:	str	r2, [r0, #8]
   12db4:	str	r2, [r0, #48]	; 0x30
   12db8:	bx	lr

00012dbc <table_destroy@@Base>:
   12dbc:	push	{r4, r5, r6, lr}
   12dc0:	subs	r5, r0, #0
   12dc4:	popeq	{r4, r5, r6, pc}
   12dc8:	mvn	r2, #0
   12dcc:	mov	r1, r2
   12dd0:	mov	r3, #64	; 0x40
   12dd4:	bl	13624 <table_notify@@Base>
   12dd8:	mov	r0, r5
   12ddc:	bl	1658c <table_get_row_length@@Base>
   12de0:	subs	r6, r0, #0
   12de4:	movgt	r4, #0
   12de8:	ble	12e04 <table_destroy@@Base+0x48>
   12dec:	mov	r1, r4
   12df0:	mov	r0, r5
   12df4:	add	r4, r4, #1
   12df8:	bl	16538 <table_row_destroy@@Base>
   12dfc:	cmp	r6, r4
   12e00:	bne	12dec <table_destroy@@Base+0x30>
   12e04:	ldr	r0, [r5, #16]
   12e08:	cmp	r0, #0
   12e0c:	beq	12e14 <table_destroy@@Base+0x58>
   12e10:	bl	1296c <free@plt>
   12e14:	mov	r0, r5
   12e18:	bl	13714 <table_get_column_length@@Base>
   12e1c:	subs	r6, r0, #0
   12e20:	movgt	r4, #0
   12e24:	ble	12e40 <table_destroy@@Base+0x84>
   12e28:	mov	r1, r4
   12e2c:	mov	r0, r5
   12e30:	add	r4, r4, #1
   12e34:	bl	136fc <table_column_destroy@@Base>
   12e38:	cmp	r6, r4
   12e3c:	bne	12e28 <table_destroy@@Base+0x6c>
   12e40:	ldr	r0, [r5]
   12e44:	cmp	r0, #0
   12e48:	beq	12e50 <table_destroy@@Base+0x94>
   12e4c:	bl	1296c <free@plt>
   12e50:	ldr	r0, [r5, #36]	; 0x24
   12e54:	cmp	r0, #0
   12e58:	beq	12e60 <table_destroy@@Base+0xa4>
   12e5c:	bl	1296c <free@plt>
   12e60:	ldr	r0, [r5, #40]	; 0x28
   12e64:	cmp	r0, #0
   12e68:	beq	12e70 <table_destroy@@Base+0xb4>
   12e6c:	bl	1296c <free@plt>
   12e70:	ldr	r0, [r5, #44]	; 0x2c
   12e74:	cmp	r0, #0
   12e78:	popeq	{r4, r5, r6, pc}
   12e7c:	pop	{r4, r5, r6, lr}
   12e80:	b	1296c <free@plt>

00012e84 <table_delete@@Base>:
   12e84:	push	{r4, lr}
   12e88:	mov	r4, r0
   12e8c:	bl	12dbc <table_destroy@@Base>
   12e90:	mov	r0, r4
   12e94:	pop	{r4, lr}
   12e98:	b	1296c <free@plt>

00012e9c <table_dupe@@Base>:
   12e9c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12ea0:	sub	sp, sp, #20
   12ea4:	mov	r6, r0
   12ea8:	bl	1658c <table_get_row_length@@Base>
   12eac:	mov	r4, #0
   12eb0:	mov	r9, r0
   12eb4:	mov	r0, r6
   12eb8:	bl	13714 <table_get_column_length@@Base>
   12ebc:	mov	r8, r0
   12ec0:	mov	r0, #56	; 0x38
   12ec4:	bl	12990 <malloc@plt>
   12ec8:	mov	r3, #10
   12ecc:	mov	r2, #20
   12ed0:	cmp	r8, #0
   12ed4:	mov	r7, r0
   12ed8:	str	r2, [r0, #24]
   12edc:	str	r4, [r0]
   12ee0:	str	r4, [r0, #4]
   12ee4:	str	r4, [r0, #12]
   12ee8:	str	r4, [r0, #16]
   12eec:	str	r4, [r0, #20]
   12ef0:	str	r4, [r0, #28]
   12ef4:	str	r4, [r0, #36]	; 0x24
   12ef8:	str	r4, [r0, #40]	; 0x28
   12efc:	str	r4, [r0, #44]	; 0x2c
   12f00:	str	r4, [r0, #32]
   12f04:	str	r4, [r0, #52]	; 0x34
   12f08:	str	r3, [r0, #8]
   12f0c:	str	r3, [r0, #48]	; 0x30
   12f10:	ble	12f4c <table_dupe@@Base+0xb0>
   12f14:	mov	r1, r4
   12f18:	mov	r0, r6
   12f1c:	bl	13a50 <table_get_column_name@@Base>
   12f20:	mov	r1, r4
   12f24:	add	r4, r4, #1
   12f28:	mov	r5, r0
   12f2c:	mov	r0, r6
   12f30:	bl	13784 <table_get_column_data_type@@Base>
   12f34:	mov	r1, r5
   12f38:	mov	r2, r0
   12f3c:	mov	r0, r7
   12f40:	bl	13798 <table_add_column@@Base>
   12f44:	cmp	r8, r4
   12f48:	bne	12f14 <table_dupe@@Base+0x78>
   12f4c:	cmp	r9, #0
   12f50:	movgt	r5, #0
   12f54:	ble	13024 <table_dupe@@Base+0x188>
   12f58:	mov	r0, r7
   12f5c:	bl	16594 <table_add_row@@Base>
   12f60:	cmp	r8, #0
   12f64:	movgt	r4, #0
   12f68:	ble	13018 <table_dupe@@Base+0x17c>
   12f6c:	mov	r1, r4
   12f70:	mov	r0, r6
   12f74:	bl	13784 <table_get_column_data_type@@Base>
   12f78:	cmp	r0, #23
   12f7c:	ldrls	pc, [pc, r0, lsl #2]
   12f80:	b	1300c <table_dupe@@Base+0x170>
   12f84:	andeq	r3, r1, r0, lsl #1
   12f88:	strdeq	r3, [r1], -r4
   12f8c:	andeq	r3, r1, ip, asr #5
   12f90:	andeq	r3, r1, r4, lsr #5
   12f94:	andeq	r3, r1, ip, ror r2
   12f98:	muleq	r1, r4, r3
   12f9c:	andeq	r3, r1, ip, ror #6
   12fa0:	andeq	r3, r1, r4, asr #6
   12fa4:	andeq	r3, r1, ip, lsl r3
   12fa8:	andeq	r3, r1, r4, asr r2
   12fac:	andeq	r3, r1, ip, lsr #4
   12fb0:	andeq	r3, r1, r4, lsl #4
   12fb4:	ldrdeq	r3, [r1], -ip
   12fb8:			; <UNDEFINED> instruction: 0x000131b4
   12fbc:	andeq	r3, r1, ip, lsl #3
   12fc0:	andeq	r3, r1, r4, ror #2
   12fc4:	andeq	r3, r1, r0, asr #2
   12fc8:	andeq	r3, r1, ip, lsl r1
   12fcc:	strdeq	r3, [r1], -r8
   12fd0:	ldrdeq	r3, [r1], -r0
   12fd4:	andeq	r3, r1, r8, lsr #1
   12fd8:	andeq	r3, r1, r8, asr r0
   12fdc:	andeq	r3, r1, r0, lsr r0
   12fe0:	andeq	r2, r1, r4, ror #31
   12fe4:	mov	r2, r4
   12fe8:	mov	r1, r5
   12fec:	mov	r0, r6
   12ff0:	bl	16508 <table_get_ptr@@Base>
   12ff4:	add	r3, sp, #12
   12ff8:	mov	r2, r4
   12ffc:	mov	r1, r5
   13000:	str	r0, [sp, #12]
   13004:	mov	r0, r7
   13008:	bl	17638 <table_set_ptr@@Base>
   1300c:	add	r4, r4, #1
   13010:	cmp	r8, r4
   13014:	bne	12f6c <table_dupe@@Base+0xd0>
   13018:	add	r5, r5, #1
   1301c:	cmp	r9, r5
   13020:	bne	12f58 <table_dupe@@Base+0xbc>
   13024:	mov	r0, r7
   13028:	add	sp, sp, #20
   1302c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13030:	mov	r2, r4
   13034:	mov	r1, r5
   13038:	mov	r0, r6
   1303c:	bl	16340 <table_get_bool@@Base>
   13040:	mov	r2, r4
   13044:	mov	r1, r5
   13048:	mov	r3, r0
   1304c:	mov	r0, r7
   13050:	bl	16aac <table_set_bool@@Base>
   13054:	b	1300c <table_dupe@@Base+0x170>
   13058:	mov	r2, r4
   1305c:	mov	r1, r5
   13060:	mov	r0, r6
   13064:	bl	164f8 <table_get_string@@Base>
   13068:	mov	r2, r4
   1306c:	mov	r1, r5
   13070:	mov	r3, r0
   13074:	mov	r0, r7
   13078:	bl	174c0 <table_set_string@@Base>
   1307c:	b	1300c <table_dupe@@Base+0x170>
   13080:	mov	r2, r4
   13084:	mov	r1, r5
   13088:	mov	r0, r6
   1308c:	bl	16354 <table_get_int@@Base>
   13090:	mov	r2, r4
   13094:	mov	r1, r5
   13098:	mov	r3, r0
   1309c:	mov	r0, r7
   130a0:	bl	16b28 <table_set_int@@Base>
   130a4:	b	1300c <table_dupe@@Base+0x170>
   130a8:	mov	r2, r4
   130ac:	mov	r1, r5
   130b0:	mov	r0, r6
   130b4:	bl	164e4 <table_get_uchar@@Base>
   130b8:	mov	r2, r4
   130bc:	mov	r1, r5
   130c0:	mov	r3, r0
   130c4:	mov	r0, r7
   130c8:	bl	175bc <table_set_uchar@@Base>
   130cc:	b	1300c <table_dupe@@Base+0x170>
   130d0:	mov	r2, r4
   130d4:	mov	r1, r5
   130d8:	mov	r0, r6
   130dc:	bl	164d0 <table_get_char@@Base>
   130e0:	mov	r2, r4
   130e4:	mov	r1, r5
   130e8:	mov	r3, r0
   130ec:	mov	r0, r7
   130f0:	bl	17540 <table_set_char@@Base>
   130f4:	b	1300c <table_dupe@@Base+0x170>
   130f8:	mov	r2, r4
   130fc:	mov	r1, r5
   13100:	mov	r0, r6
   13104:	bl	164bc <table_get_ldouble@@Base>
   13108:	mov	r2, r4
   1310c:	mov	r1, r5
   13110:	mov	r0, r7
   13114:	bl	17428 <table_set_ldouble@@Base>
   13118:	b	1300c <table_dupe@@Base+0x170>
   1311c:	mov	r2, r4
   13120:	mov	r1, r5
   13124:	mov	r0, r6
   13128:	bl	164a8 <table_get_double@@Base>
   1312c:	mov	r2, r4
   13130:	mov	r1, r5
   13134:	mov	r0, r7
   13138:	bl	17390 <table_set_double@@Base>
   1313c:	b	1300c <table_dupe@@Base+0x170>
   13140:	mov	r2, r4
   13144:	mov	r1, r5
   13148:	mov	r0, r6
   1314c:	bl	16494 <table_get_float@@Base>
   13150:	mov	r2, r4
   13154:	mov	r1, r5
   13158:	mov	r0, r7
   1315c:	bl	17314 <table_set_float@@Base>
   13160:	b	1300c <table_dupe@@Base+0x170>
   13164:	mov	r2, r4
   13168:	mov	r1, r5
   1316c:	mov	r0, r6
   13170:	bl	16480 <table_get_ullong@@Base>
   13174:	mov	r2, r4
   13178:	strd	r0, [sp]
   1317c:	mov	r1, r5
   13180:	mov	r0, r7
   13184:	bl	1728c <table_set_ullong@@Base>
   13188:	b	1300c <table_dupe@@Base+0x170>
   1318c:	mov	r2, r4
   13190:	mov	r1, r5
   13194:	mov	r0, r6
   13198:	bl	1646c <table_get_llong@@Base>
   1319c:	mov	r2, r4
   131a0:	strd	r0, [sp]
   131a4:	mov	r1, r5
   131a8:	mov	r0, r7
   131ac:	bl	17204 <table_set_llong@@Base>
   131b0:	b	1300c <table_dupe@@Base+0x170>
   131b4:	mov	r2, r4
   131b8:	mov	r1, r5
   131bc:	mov	r0, r6
   131c0:	bl	16458 <table_get_ulong@@Base>
   131c4:	mov	r2, r4
   131c8:	mov	r1, r5
   131cc:	mov	r3, r0
   131d0:	mov	r0, r7
   131d4:	bl	17188 <table_set_ulong@@Base>
   131d8:	b	1300c <table_dupe@@Base+0x170>
   131dc:	mov	r2, r4
   131e0:	mov	r1, r5
   131e4:	mov	r0, r6
   131e8:	bl	16444 <table_get_long@@Base>
   131ec:	mov	r2, r4
   131f0:	mov	r1, r5
   131f4:	mov	r3, r0
   131f8:	mov	r0, r7
   131fc:	bl	1710c <table_set_long@@Base>
   13200:	b	1300c <table_dupe@@Base+0x170>
   13204:	mov	r2, r4
   13208:	mov	r1, r5
   1320c:	mov	r0, r6
   13210:	bl	16430 <table_get_ushort@@Base>
   13214:	mov	r2, r4
   13218:	mov	r1, r5
   1321c:	mov	r3, r0
   13220:	mov	r0, r7
   13224:	bl	17090 <table_set_ushort@@Base>
   13228:	b	1300c <table_dupe@@Base+0x170>
   1322c:	mov	r2, r4
   13230:	mov	r1, r5
   13234:	mov	r0, r6
   13238:	bl	1641c <table_get_short@@Base>
   1323c:	mov	r2, r4
   13240:	mov	r1, r5
   13244:	mov	r3, r0
   13248:	mov	r0, r7
   1324c:	bl	17014 <table_set_short@@Base>
   13250:	b	1300c <table_dupe@@Base+0x170>
   13254:	mov	r2, r4
   13258:	mov	r1, r5
   1325c:	mov	r0, r6
   13260:	bl	16408 <table_get_uint64@@Base>
   13264:	mov	r2, r4
   13268:	strd	r0, [sp]
   1326c:	mov	r1, r5
   13270:	mov	r0, r7
   13274:	bl	16f8c <table_set_uint64@@Base>
   13278:	b	1300c <table_dupe@@Base+0x170>
   1327c:	mov	r2, r4
   13280:	mov	r1, r5
   13284:	mov	r0, r6
   13288:	bl	163a4 <table_get_int16@@Base>
   1328c:	mov	r2, r4
   13290:	mov	r1, r5
   13294:	mov	r3, r0
   13298:	mov	r0, r7
   1329c:	bl	16d18 <table_set_int16@@Base>
   132a0:	b	1300c <table_dupe@@Base+0x170>
   132a4:	mov	r2, r4
   132a8:	mov	r1, r5
   132ac:	mov	r0, r6
   132b0:	bl	16390 <table_get_uint8@@Base>
   132b4:	mov	r2, r4
   132b8:	mov	r1, r5
   132bc:	mov	r3, r0
   132c0:	mov	r0, r7
   132c4:	bl	16c9c <table_set_uint8@@Base>
   132c8:	b	1300c <table_dupe@@Base+0x170>
   132cc:	mov	r2, r4
   132d0:	mov	r1, r5
   132d4:	mov	r0, r6
   132d8:	bl	1637c <table_get_int8@@Base>
   132dc:	mov	r2, r4
   132e0:	mov	r1, r5
   132e4:	mov	r3, r0
   132e8:	mov	r0, r7
   132ec:	bl	16c20 <table_set_int8@@Base>
   132f0:	b	1300c <table_dupe@@Base+0x170>
   132f4:	mov	r2, r4
   132f8:	mov	r1, r5
   132fc:	mov	r0, r6
   13300:	bl	16368 <table_get_uint@@Base>
   13304:	mov	r2, r4
   13308:	mov	r1, r5
   1330c:	mov	r3, r0
   13310:	mov	r0, r7
   13314:	bl	16ba4 <table_set_uint@@Base>
   13318:	b	1300c <table_dupe@@Base+0x170>
   1331c:	mov	r2, r4
   13320:	mov	r1, r5
   13324:	mov	r0, r6
   13328:	bl	163f4 <table_get_int64@@Base>
   1332c:	mov	r2, r4
   13330:	strd	r0, [sp]
   13334:	mov	r1, r5
   13338:	mov	r0, r7
   1333c:	bl	16f08 <table_set_int64@@Base>
   13340:	b	1300c <table_dupe@@Base+0x170>
   13344:	mov	r2, r4
   13348:	mov	r1, r5
   1334c:	mov	r0, r6
   13350:	bl	163e0 <table_get_uint32@@Base>
   13354:	mov	r2, r4
   13358:	mov	r1, r5
   1335c:	mov	r3, r0
   13360:	mov	r0, r7
   13364:	bl	16e8c <table_set_uint32@@Base>
   13368:	b	1300c <table_dupe@@Base+0x170>
   1336c:	mov	r2, r4
   13370:	mov	r1, r5
   13374:	mov	r0, r6
   13378:	bl	163cc <table_get_int32@@Base>
   1337c:	mov	r2, r4
   13380:	mov	r1, r5
   13384:	mov	r3, r0
   13388:	mov	r0, r7
   1338c:	bl	16e10 <table_set_int32@@Base>
   13390:	b	1300c <table_dupe@@Base+0x170>
   13394:	mov	r2, r4
   13398:	mov	r1, r5
   1339c:	mov	r0, r6
   133a0:	bl	163b8 <table_get_uint16@@Base>
   133a4:	mov	r2, r4
   133a8:	mov	r1, r5
   133ac:	mov	r3, r0
   133b0:	mov	r0, r7
   133b4:	bl	16d94 <table_set_uint16@@Base>
   133b8:	b	1300c <table_dupe@@Base+0x170>

000133bc <table_get_major_version@@Base>:
   133bc:	mov	r0, #0
   133c0:	bx	lr

000133c4 <table_get_minor_version@@Base>:
   133c4:	mov	r0, #0
   133c8:	bx	lr

000133cc <table_get_patch_version@@Base>:
   133cc:	mov	r0, #0
   133d0:	bx	lr

000133d4 <table_get_version@@Base>:
   133d4:	ldr	r0, [pc]	; 133dc <table_get_version@@Base+0x8>
   133d8:	bx	lr
   133dc:	andeq	r8, r1, r4, lsl #9

000133e0 <table_get_callback_length@@Base>:
   133e0:	ldr	r0, [r0, #32]
   133e4:	bx	lr

000133e8 <table_register_callback@@Base>:
   133e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   133ec:	ldr	r5, [r0, #32]
   133f0:	ldr	r7, [r0, #36]	; 0x24
   133f4:	cmp	r5, #0
   133f8:	ble	13450 <table_register_callback@@Base+0x68>
   133fc:	mov	ip, #0
   13400:	sub	lr, r7, #4
   13404:	b	13414 <table_register_callback@@Base+0x2c>
   13408:	add	ip, ip, #1
   1340c:	cmp	ip, r5
   13410:	beq	13450 <table_register_callback@@Base+0x68>
   13414:	ldr	r4, [lr, #4]!
   13418:	lsl	r6, ip, #2
   1341c:	cmp	r1, r4
   13420:	bne	13408 <table_register_callback@@Base+0x20>
   13424:	ldr	r4, [r0, #40]	; 0x28
   13428:	ldr	r4, [r4, ip, lsl #2]
   1342c:	cmp	r2, r4
   13430:	bne	13408 <table_register_callback@@Base+0x20>
   13434:	cmp	ip, #0
   13438:	beq	13450 <table_register_callback@@Base+0x68>
   1343c:	ldr	r1, [r0, #44]	; 0x2c
   13440:	ldr	r2, [r1, r6]
   13444:	orr	r3, r2, r3
   13448:	str	r3, [r1, r6]
   1344c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13450:	ldr	sl, [r0, #48]	; 0x30
   13454:	mov	r9, r1
   13458:	mov	r8, r0
   1345c:	mov	r1, sl
   13460:	mov	r0, r5
   13464:	mov	r6, r3
   13468:	mov	r4, r2
   1346c:	bl	182f0 <table_get_cell_ptr@@Base+0x204>
   13470:	cmp	r1, #0
   13474:	beq	1349c <table_register_callback@@Base+0xb4>
   13478:	str	r9, [r7, r5, lsl #2]
   1347c:	ldr	r3, [r8, #40]	; 0x28
   13480:	str	r4, [r3, r5, lsl #2]
   13484:	ldr	r3, [r8, #44]	; 0x2c
   13488:	str	r6, [r3, r5, lsl #2]
   1348c:	ldr	r3, [r8, #32]
   13490:	add	r3, r3, #1
   13494:	str	r3, [r8, #32]
   13498:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1349c:	ldr	r1, [r8, #52]	; 0x34
   134a0:	mov	r0, r7
   134a4:	add	r1, sl, r1
   134a8:	str	r1, [r8, #52]	; 0x34
   134ac:	lsl	r1, r1, #2
   134b0:	bl	12978 <realloc@plt>
   134b4:	ldr	r1, [r8, #52]	; 0x34
   134b8:	lsl	r1, r1, #2
   134bc:	str	r0, [r8, #36]	; 0x24
   134c0:	ldr	r0, [r8, #40]	; 0x28
   134c4:	bl	12978 <realloc@plt>
   134c8:	ldr	r1, [r8, #52]	; 0x34
   134cc:	lsl	r1, r1, #2
   134d0:	str	r0, [r8, #40]	; 0x28
   134d4:	ldr	r0, [r8, #44]	; 0x2c
   134d8:	bl	12978 <realloc@plt>
   134dc:	ldr	r7, [r8, #36]	; 0x24
   134e0:	ldr	r5, [r8, #32]
   134e4:	str	r0, [r8, #44]	; 0x2c
   134e8:	b	13478 <table_register_callback@@Base+0x90>

000134ec <table_unregister_callback@@Base>:
   134ec:	push	{r4, r5, r6, lr}
   134f0:	ldr	lr, [r0, #32]
   134f4:	cmp	lr, #0
   134f8:	pople	{r4, r5, r6, pc}
   134fc:	ldr	r6, [r0, #36]	; 0x24
   13500:	mov	r3, #0
   13504:	sub	r4, r6, #4
   13508:	b	13518 <table_unregister_callback@@Base+0x2c>
   1350c:	add	r3, r3, #1
   13510:	cmp	r3, lr
   13514:	beq	135e4 <table_unregister_callback@@Base+0xf8>
   13518:	ldr	r5, [r4, #4]!
   1351c:	lsl	ip, r3, #2
   13520:	cmp	r1, r5
   13524:	bne	1350c <table_unregister_callback@@Base+0x20>
   13528:	ldr	r5, [r0, #40]	; 0x28
   1352c:	ldr	r5, [r5, r3, lsl #2]
   13530:	cmp	r2, r5
   13534:	bne	1350c <table_unregister_callback@@Base+0x20>
   13538:	sub	lr, lr, #1
   1353c:	cmp	lr, r3
   13540:	bgt	1354c <table_unregister_callback@@Base+0x60>
   13544:	b	13588 <table_unregister_callback@@Base+0x9c>
   13548:	ldr	r6, [r0, #36]	; 0x24
   1354c:	add	r2, ip, #4
   13550:	add	r3, r3, #1
   13554:	ldr	r1, [r6, r2]
   13558:	str	r1, [r6, ip]
   1355c:	ldr	r1, [r0, #40]	; 0x28
   13560:	ldr	lr, [r1, r2]
   13564:	str	lr, [r1, ip]
   13568:	ldr	r1, [r0, #44]	; 0x2c
   1356c:	ldr	lr, [r1, r2]
   13570:	str	lr, [r1, ip]
   13574:	ldr	lr, [r0, #32]
   13578:	mov	ip, r2
   1357c:	sub	lr, lr, #1
   13580:	cmp	lr, r3
   13584:	bgt	13548 <table_unregister_callback@@Base+0x5c>
   13588:	ldr	r6, [r0, #48]	; 0x30
   1358c:	str	lr, [r0, #32]
   13590:	mov	r4, r0
   13594:	mov	r1, r6
   13598:	mov	r0, lr
   1359c:	bl	182f0 <table_get_cell_ptr@@Base+0x204>
   135a0:	cmp	r1, #0
   135a4:	popne	{r4, r5, r6, pc}
   135a8:	ldr	r5, [r4, #52]	; 0x34
   135ac:	sub	r5, r5, r6
   135b0:	cmp	r5, #0
   135b4:	str	r5, [r4, #52]	; 0x34
   135b8:	bne	135e8 <table_unregister_callback@@Base+0xfc>
   135bc:	ldr	r0, [r4, #36]	; 0x24
   135c0:	bl	1296c <free@plt>
   135c4:	ldr	r0, [r4, #40]	; 0x28
   135c8:	bl	1296c <free@plt>
   135cc:	ldr	r0, [r4, #44]	; 0x2c
   135d0:	bl	1296c <free@plt>
   135d4:	str	r5, [r4, #36]	; 0x24
   135d8:	str	r5, [r4, #40]	; 0x28
   135dc:	str	r5, [r4, #44]	; 0x2c
   135e0:	pop	{r4, r5, r6, pc}
   135e4:	pop	{r4, r5, r6, pc}
   135e8:	lsl	r1, r5, #2
   135ec:	ldr	r0, [r4, #36]	; 0x24
   135f0:	bl	12978 <realloc@plt>
   135f4:	ldr	r1, [r4, #52]	; 0x34
   135f8:	lsl	r1, r1, #2
   135fc:	str	r0, [r4, #36]	; 0x24
   13600:	ldr	r0, [r4, #40]	; 0x28
   13604:	bl	12978 <realloc@plt>
   13608:	ldr	r1, [r4, #52]	; 0x34
   1360c:	lsl	r1, r1, #2
   13610:	str	r0, [r4, #40]	; 0x28
   13614:	ldr	r0, [r4, #44]	; 0x2c
   13618:	bl	12978 <realloc@plt>
   1361c:	str	r0, [r4, #44]	; 0x2c
   13620:	pop	{r4, r5, r6, pc}

00013624 <table_notify@@Base>:
   13624:	ldr	ip, [r0, #32]
   13628:	cmp	ip, #0
   1362c:	bxle	lr
   13630:	push	{r4, r5, r6, r7, r8, r9, lr}
   13634:	mov	r6, r3
   13638:	sub	sp, sp, #12
   1363c:	mov	r8, r2
   13640:	mov	r7, r1
   13644:	mov	r5, r0
   13648:	mov	r4, #0
   1364c:	b	1365c <table_notify@@Base+0x38>
   13650:	add	r4, r4, #1
   13654:	cmp	r4, ip
   13658:	bge	136a4 <table_notify@@Base+0x80>
   1365c:	ldr	r0, [r5, #44]	; 0x2c
   13660:	ldr	r0, [r0, r4, lsl #2]
   13664:	tst	r6, r0
   13668:	beq	13650 <table_notify@@Base+0x2c>
   1366c:	ldr	r2, [r5, #40]	; 0x28
   13670:	ldr	r0, [r5, #36]	; 0x24
   13674:	mov	r3, r6
   13678:	ldr	r1, [r2, r4, lsl #2]
   1367c:	mov	r2, r8
   13680:	str	r1, [sp]
   13684:	mov	r1, r7
   13688:	ldr	r9, [r0, r4, lsl #2]
   1368c:	mov	r0, r5
   13690:	blx	r9
   13694:	ldr	ip, [r5, #32]
   13698:	add	r4, r4, #1
   1369c:	cmp	r4, ip
   136a0:	blt	1365c <table_notify@@Base+0x38>
   136a4:	add	sp, sp, #12
   136a8:	pop	{r4, r5, r6, r7, r8, r9, pc}

000136ac <table_column_init@@Base>:
   136ac:	add	r1, r1, r1, lsl #1
   136b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136b4:	lsl	r4, r1, #2
   136b8:	ldr	r6, [r0]
   136bc:	mov	r0, r2
   136c0:	mov	r9, r3
   136c4:	mov	r7, r2
   136c8:	bl	129b4 <strlen@plt>
   136cc:	ldr	r8, [sp, #32]
   136d0:	add	r5, r6, r4
   136d4:	add	r0, r0, #1
   136d8:	bl	12990 <malloc@plt>
   136dc:	subs	r3, r0, #0
   136e0:	str	r0, [r6, r4]
   136e4:	beq	136f0 <table_column_init@@Base+0x44>
   136e8:	mov	r1, r7
   136ec:	bl	12984 <strcpy@plt>
   136f0:	str	r9, [r5, #4]
   136f4:	str	r8, [r5, #8]
   136f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000136fc <table_column_destroy@@Base>:
   136fc:	ldr	r3, [r0]
   13700:	add	r1, r1, r1, lsl #1
   13704:	ldr	r0, [r3, r1, lsl #2]
   13708:	cmp	r0, #0
   1370c:	bxeq	lr
   13710:	b	1296c <free@plt>

00013714 <table_get_column_length@@Base>:
   13714:	ldr	r0, [r0, #4]
   13718:	bx	lr

0001371c <table_get_column@@Base>:
   1371c:	push	{r4, r5, r6, r7, r8, lr}
   13720:	ldr	r7, [r0, #4]
   13724:	cmp	r7, #0
   13728:	ble	13778 <table_get_column@@Base+0x5c>
   1372c:	mov	r4, #0
   13730:	mov	r6, r1
   13734:	ldr	r8, [r0]
   13738:	mov	r5, r4
   1373c:	b	1374c <table_get_column@@Base+0x30>
   13740:	add	r5, r5, #1
   13744:	cmp	r7, r5
   13748:	beq	1376c <table_get_column@@Base+0x50>
   1374c:	ldr	r0, [r8, r4]
   13750:	mov	r1, r6
   13754:	bl	12954 <strcmp@plt>
   13758:	add	r4, r4, #12
   1375c:	cmp	r0, #0
   13760:	bne	13740 <table_get_column@@Base+0x24>
   13764:	mov	r0, r5
   13768:	pop	{r4, r5, r6, r7, r8, pc}
   1376c:	mvn	r5, #0
   13770:	mov	r0, r5
   13774:	pop	{r4, r5, r6, r7, r8, pc}
   13778:	mvneq	r5, #0
   1377c:	movne	r5, #0
   13780:	b	13764 <table_get_column@@Base+0x48>

00013784 <table_get_column_data_type@@Base>:
   13784:	ldr	r3, [r0]
   13788:	add	r1, r1, r1, lsl #1
   1378c:	add	r3, r3, r1, lsl #2
   13790:	ldr	r0, [r3, #4]
   13794:	bx	lr

00013798 <table_add_column@@Base>:
   13798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1379c:	mov	r5, r0
   137a0:	ldmib	r0, {r0, r6}
   137a4:	sub	sp, sp, #12
   137a8:	mov	r9, r1
   137ac:	mov	r1, r6
   137b0:	mov	r8, r2
   137b4:	bl	182f0 <table_get_cell_ptr@@Base+0x204>
   137b8:	subs	r4, r1, #0
   137bc:	beq	1386c <table_add_column@@Base+0xd4>
   137c0:	mov	r0, r5
   137c4:	bl	1658c <table_get_row_length@@Base>
   137c8:	ldr	r6, [r5, #4]
   137cc:	add	r4, r6, r6, lsl #1
   137d0:	lsl	r4, r4, #2
   137d4:	mov	r7, r0
   137d8:	mov	r0, r8
   137dc:	bl	140a8 <table_get_default_compare_function_for_data_type@@Base>
   137e0:	mov	fp, r0
   137e4:	mov	r0, r9
   137e8:	bl	129b4 <strlen@plt>
   137ec:	ldr	r3, [r5]
   137f0:	add	sl, r3, r4
   137f4:	str	r3, [sp, #4]
   137f8:	add	r0, r0, #1
   137fc:	bl	12990 <malloc@plt>
   13800:	ldr	r3, [sp, #4]
   13804:	cmp	r0, #0
   13808:	str	r0, [r3, r4]
   1380c:	beq	13818 <table_add_column@@Base+0x80>
   13810:	mov	r1, r9
   13814:	bl	12984 <strcpy@plt>
   13818:	cmp	r7, #0
   1381c:	stmib	sl, {r8, fp}
   13820:	ble	13844 <table_add_column@@Base+0xac>
   13824:	mov	r4, #0
   13828:	mov	r1, r4
   1382c:	mov	r2, r6
   13830:	mov	r0, r5
   13834:	add	r4, r4, #1
   13838:	bl	17694 <table_cell_init@@Base>
   1383c:	cmp	r7, r4
   13840:	bne	13828 <table_add_column@@Base+0x90>
   13844:	mov	r0, r5
   13848:	mov	r3, #8
   1384c:	ldr	r2, [r5, #4]
   13850:	mvn	r1, #0
   13854:	bl	13624 <table_notify@@Base>
   13858:	ldr	r0, [r5, #4]
   1385c:	add	r3, r0, #1
   13860:	str	r3, [r5, #4]
   13864:	add	sp, sp, #12
   13868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1386c:	ldr	r1, [r5, #12]
   13870:	ldr	r0, [r5]
   13874:	add	r6, r6, r1
   13878:	str	r6, [r5, #12]
   1387c:	add	r6, r6, r6, lsl #1
   13880:	lsl	r1, r6, #2
   13884:	bl	12978 <realloc@plt>
   13888:	str	r0, [r5]
   1388c:	mov	r0, r5
   13890:	bl	1658c <table_get_row_length@@Base>
   13894:	subs	r7, r0, #0
   13898:	ble	137c0 <table_add_column@@Base+0x28>
   1389c:	mov	r1, r4
   138a0:	mov	r0, r5
   138a4:	bl	16744 <table_get_row_ptr@@Base>
   138a8:	ldr	r1, [r5, #12]
   138ac:	add	r4, r4, #1
   138b0:	lsl	r1, r1, #2
   138b4:	mov	r6, r0
   138b8:	ldr	r0, [r0]
   138bc:	bl	12978 <realloc@plt>
   138c0:	cmp	r7, r4
   138c4:	str	r0, [r6]
   138c8:	bne	1389c <table_add_column@@Base+0x104>
   138cc:	b	137c0 <table_add_column@@Base+0x28>

000138d0 <table_remove_column@@Base>:
   138d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   138d4:	add	r5, r1, r1, lsl #1
   138d8:	ldr	r3, [r0]
   138dc:	lsl	r5, r5, #2
   138e0:	mov	r6, r0
   138e4:	ldr	r0, [r3, r5]
   138e8:	mov	r9, r1
   138ec:	cmp	r0, #0
   138f0:	beq	138f8 <table_remove_column@@Base+0x28>
   138f4:	bl	1296c <free@plt>
   138f8:	ldr	r4, [r6, #4]
   138fc:	sub	r4, r4, #1
   13900:	cmp	r9, r4
   13904:	movlt	r1, r9
   13908:	bge	13944 <table_remove_column@@Base+0x74>
   1390c:	ldr	r3, [r6]
   13910:	add	r0, r5, #12
   13914:	add	r2, r3, r0
   13918:	add	r1, r1, #1
   1391c:	ldr	lr, [r2, #4]
   13920:	ldr	ip, [r2, #8]
   13924:	ldr	r7, [r2]
   13928:	add	r2, r3, r5
   1392c:	cmp	r1, r4
   13930:	str	r7, [r3, r5]
   13934:	str	lr, [r2, #4]
   13938:	str	ip, [r2, #8]
   1393c:	mov	r5, r0
   13940:	bne	1390c <table_remove_column@@Base+0x3c>
   13944:	mov	r0, r6
   13948:	bl	1658c <table_get_row_length@@Base>
   1394c:	subs	r7, r0, #0
   13950:	lslgt	r8, r9, #2
   13954:	movgt	r5, #0
   13958:	ble	139b4 <table_remove_column@@Base+0xe4>
   1395c:	mov	r2, r9
   13960:	mov	r1, r5
   13964:	mov	r0, r6
   13968:	bl	176b0 <table_cell_destroy@@Base>
   1396c:	mov	r1, r5
   13970:	mov	r0, r6
   13974:	bl	16744 <table_get_row_ptr@@Base>
   13978:	cmp	r9, r4
   1397c:	movlt	r2, r8
   13980:	movlt	r3, r9
   13984:	bge	139a8 <table_remove_column@@Base+0xd8>
   13988:	ldr	ip, [r0]
   1398c:	add	r1, r2, #4
   13990:	add	r3, r3, #1
   13994:	ldr	lr, [ip, r1]
   13998:	cmp	r3, r4
   1399c:	str	lr, [ip, r2]
   139a0:	mov	r2, r1
   139a4:	bne	13988 <table_remove_column@@Base+0xb8>
   139a8:	add	r5, r5, #1
   139ac:	cmp	r7, r5
   139b0:	bne	1395c <table_remove_column@@Base+0x8c>
   139b4:	ldmib	r6, {r0, r5}
   139b8:	sub	r0, r0, #1
   139bc:	str	r0, [r6, #4]
   139c0:	mov	r1, r5
   139c4:	bl	182f0 <table_get_cell_ptr@@Base+0x204>
   139c8:	subs	r4, r1, #0
   139cc:	beq	139ec <table_remove_column@@Base+0x11c>
   139d0:	mov	r0, r6
   139d4:	mov	r2, r9
   139d8:	mov	r3, #16
   139dc:	mvn	r1, #0
   139e0:	bl	13624 <table_notify@@Base>
   139e4:	mov	r0, #0
   139e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   139ec:	ldr	r1, [r6, #12]
   139f0:	ldr	r0, [r6]
   139f4:	sub	r1, r1, r5
   139f8:	str	r1, [r6, #12]
   139fc:	add	r1, r1, r1, lsl #1
   13a00:	lsl	r1, r1, #2
   13a04:	bl	12978 <realloc@plt>
   13a08:	str	r0, [r6]
   13a0c:	mov	r0, r6
   13a10:	bl	1658c <table_get_row_length@@Base>
   13a14:	subs	r7, r0, #0
   13a18:	ble	139d0 <table_remove_column@@Base+0x100>
   13a1c:	mov	r1, r4
   13a20:	mov	r0, r6
   13a24:	bl	16744 <table_get_row_ptr@@Base>
   13a28:	ldr	r1, [r6, #12]
   13a2c:	add	r4, r4, #1
   13a30:	lsl	r1, r1, #2
   13a34:	mov	r5, r0
   13a38:	ldr	r0, [r0]
   13a3c:	bl	12978 <realloc@plt>
   13a40:	cmp	r7, r4
   13a44:	str	r0, [r5]
   13a48:	bne	13a1c <table_remove_column@@Base+0x14c>
   13a4c:	b	139d0 <table_remove_column@@Base+0x100>

00013a50 <table_get_column_name@@Base>:
   13a50:	ldr	r3, [r0]
   13a54:	add	r1, r1, r1, lsl #1
   13a58:	ldr	r0, [r3, r1, lsl #2]
   13a5c:	bx	lr

00013a60 <table_get_col_ptr@@Base>:
   13a60:	add	r1, r1, r1, lsl #1
   13a64:	ldr	r0, [r0]
   13a68:	add	r0, r0, r1, lsl #2
   13a6c:	bx	lr

00013a70 <table_get_column_compare_function@@Base>:
   13a70:	ldr	r3, [r0]
   13a74:	add	r1, r1, r1, lsl #1
   13a78:	add	r3, r3, r1, lsl #2
   13a7c:	ldr	r0, [r3, #8]
   13a80:	bx	lr

00013a84 <table_set_column_compare_function@@Base>:
   13a84:	ldr	r3, [r0]
   13a88:	add	r1, r1, r1, lsl #1
   13a8c:	add	r3, r3, r1, lsl #2
   13a90:	str	r2, [r3, #8]
   13a94:	bx	lr

00013a98 <table_compare_bool@@Base>:
   13a98:	cmp	r0, #0
   13a9c:	beq	13acc <table_compare_bool@@Base+0x34>
   13aa0:	cmp	r1, #0
   13aa4:	beq	13ac4 <table_compare_bool@@Base+0x2c>
   13aa8:	ldrb	r2, [r0]
   13aac:	ldrb	r3, [r1]
   13ab0:	cmp	r2, r3
   13ab4:	bgt	13ac4 <table_compare_bool@@Base+0x2c>
   13ab8:	mvnlt	r0, #0
   13abc:	movge	r0, #0
   13ac0:	bx	lr
   13ac4:	mov	r0, #1
   13ac8:	bx	lr
   13acc:	adds	r0, r1, #0
   13ad0:	mvnne	r0, #0
   13ad4:	bx	lr

00013ad8 <table_compare_int8@@Base>:
   13ad8:	cmp	r0, #0
   13adc:	beq	13b0c <table_compare_int8@@Base+0x34>
   13ae0:	cmp	r1, #0
   13ae4:	beq	13b04 <table_compare_int8@@Base+0x2c>
   13ae8:	ldrsb	r2, [r0]
   13aec:	ldrsb	r3, [r1]
   13af0:	cmp	r2, r3
   13af4:	bgt	13b04 <table_compare_int8@@Base+0x2c>
   13af8:	mvnlt	r0, #0
   13afc:	movge	r0, #0
   13b00:	bx	lr
   13b04:	mov	r0, #1
   13b08:	bx	lr
   13b0c:	adds	r0, r1, #0
   13b10:	mvnne	r0, #0
   13b14:	bx	lr

00013b18 <table_compare_int32@@Base>:
   13b18:	cmp	r0, #0
   13b1c:	beq	13b4c <table_compare_int32@@Base+0x34>
   13b20:	cmp	r1, #0
   13b24:	beq	13b44 <table_compare_int32@@Base+0x2c>
   13b28:	ldr	r2, [r0]
   13b2c:	ldr	r3, [r1]
   13b30:	cmp	r2, r3
   13b34:	bgt	13b44 <table_compare_int32@@Base+0x2c>
   13b38:	mvnlt	r0, #0
   13b3c:	movge	r0, #0
   13b40:	bx	lr
   13b44:	mov	r0, #1
   13b48:	bx	lr
   13b4c:	adds	r0, r1, #0
   13b50:	mvnne	r0, #0
   13b54:	bx	lr

00013b58 <table_compare_uint32@@Base>:
   13b58:	cmp	r0, #0
   13b5c:	beq	13b8c <table_compare_uint32@@Base+0x34>
   13b60:	cmp	r1, #0
   13b64:	beq	13b84 <table_compare_uint32@@Base+0x2c>
   13b68:	ldr	r2, [r0]
   13b6c:	ldr	r3, [r1]
   13b70:	cmp	r2, r3
   13b74:	bhi	13b84 <table_compare_uint32@@Base+0x2c>
   13b78:	mvncc	r0, #0
   13b7c:	movcs	r0, #0
   13b80:	bx	lr
   13b84:	mov	r0, #1
   13b88:	bx	lr
   13b8c:	adds	r0, r1, #0
   13b90:	mvnne	r0, #0
   13b94:	bx	lr

00013b98 <table_compare_uint64@@Base>:
   13b98:	cmp	r0, #0
   13b9c:	beq	13bd4 <table_compare_uint64@@Base+0x3c>
   13ba0:	cmp	r1, #0
   13ba4:	beq	13be0 <table_compare_uint64@@Base+0x48>
   13ba8:	ldrd	r2, [r1]
   13bac:	push	{r4, r5}
   13bb0:	ldrd	r4, [r0]
   13bb4:	cmp	r5, r3
   13bb8:	cmpeq	r4, r2
   13bbc:	movhi	r0, #1
   13bc0:	bhi	13bcc <table_compare_uint64@@Base+0x34>
   13bc4:	mvncc	r0, #0
   13bc8:	movcs	r0, #0
   13bcc:	pop	{r4, r5}
   13bd0:	bx	lr
   13bd4:	adds	r0, r1, #0
   13bd8:	mvnne	r0, #0
   13bdc:	bx	lr
   13be0:	mov	r0, #1
   13be4:	bx	lr

00013be8 <table_compare_short@@Base>:
   13be8:	cmp	r0, #0
   13bec:	beq	13c1c <table_compare_short@@Base+0x34>
   13bf0:	cmp	r1, #0
   13bf4:	beq	13c14 <table_compare_short@@Base+0x2c>
   13bf8:	ldrsh	r2, [r0]
   13bfc:	ldrsh	r3, [r1]
   13c00:	cmp	r2, r3
   13c04:	bgt	13c14 <table_compare_short@@Base+0x2c>
   13c08:	mvnlt	r0, #0
   13c0c:	movge	r0, #0
   13c10:	bx	lr
   13c14:	mov	r0, #1
   13c18:	bx	lr
   13c1c:	adds	r0, r1, #0
   13c20:	mvnne	r0, #0
   13c24:	bx	lr

00013c28 <table_compare_ushort@@Base>:
   13c28:	cmp	r0, #0
   13c2c:	beq	13c5c <table_compare_ushort@@Base+0x34>
   13c30:	cmp	r1, #0
   13c34:	beq	13c54 <table_compare_ushort@@Base+0x2c>
   13c38:	ldrh	r2, [r0]
   13c3c:	ldrh	r3, [r1]
   13c40:	cmp	r2, r3
   13c44:	bhi	13c54 <table_compare_ushort@@Base+0x2c>
   13c48:	mvncc	r0, #0
   13c4c:	movcs	r0, #0
   13c50:	bx	lr
   13c54:	mov	r0, #1
   13c58:	bx	lr
   13c5c:	adds	r0, r1, #0
   13c60:	mvnne	r0, #0
   13c64:	bx	lr

00013c68 <table_compare_long@@Base>:
   13c68:	cmp	r0, #0
   13c6c:	beq	13c9c <table_compare_long@@Base+0x34>
   13c70:	cmp	r1, #0
   13c74:	beq	13c94 <table_compare_long@@Base+0x2c>
   13c78:	ldr	r2, [r0]
   13c7c:	ldr	r3, [r1]
   13c80:	cmp	r2, r3
   13c84:	bgt	13c94 <table_compare_long@@Base+0x2c>
   13c88:	mvnlt	r0, #0
   13c8c:	movge	r0, #0
   13c90:	bx	lr
   13c94:	mov	r0, #1
   13c98:	bx	lr
   13c9c:	adds	r0, r1, #0
   13ca0:	mvnne	r0, #0
   13ca4:	bx	lr

00013ca8 <table_compare_llong@@Base>:
   13ca8:	cmp	r0, #0
   13cac:	beq	13cec <table_compare_llong@@Base+0x44>
   13cb0:	cmp	r1, #0
   13cb4:	beq	13cf8 <table_compare_llong@@Base+0x50>
   13cb8:	ldrd	r2, [r1]
   13cbc:	push	{r4, r5}
   13cc0:	ldrd	r4, [r0]
   13cc4:	cmp	r2, r4
   13cc8:	sbcs	r1, r3, r5
   13ccc:	movlt	r0, #1
   13cd0:	blt	13ce4 <table_compare_llong@@Base+0x3c>
   13cd4:	cmp	r4, r2
   13cd8:	sbcs	r3, r5, r3
   13cdc:	mvnlt	r0, #0
   13ce0:	movge	r0, #0
   13ce4:	pop	{r4, r5}
   13ce8:	bx	lr
   13cec:	adds	r0, r1, #0
   13cf0:	mvnne	r0, #0
   13cf4:	bx	lr
   13cf8:	mov	r0, #1
   13cfc:	bx	lr

00013d00 <table_compare_ullong@@Base>:
   13d00:	cmp	r0, #0
   13d04:	beq	13d34 <table_compare_ullong@@Base+0x34>
   13d08:	cmp	r1, #0
   13d0c:	beq	13d2c <table_compare_ullong@@Base+0x2c>
   13d10:	ldr	r2, [r0]
   13d14:	ldr	r3, [r1]
   13d18:	cmp	r2, r3
   13d1c:	bhi	13d2c <table_compare_ullong@@Base+0x2c>
   13d20:	mvncc	r0, #0
   13d24:	movcs	r0, #0
   13d28:	bx	lr
   13d2c:	mov	r0, #1
   13d30:	bx	lr
   13d34:	adds	r0, r1, #0
   13d38:	mvnne	r0, #0
   13d3c:	bx	lr

00013d40 <table_compare_float@@Base>:
   13d40:	cmp	r0, #0
   13d44:	beq	13d78 <table_compare_float@@Base+0x38>
   13d48:	cmp	r1, #0
   13d4c:	beq	13d70 <table_compare_float@@Base+0x30>
   13d50:	vldr	s14, [r0]
   13d54:	vldr	s15, [r1]
   13d58:	vcmpe.f32	s14, s15
   13d5c:	vmrs	APSR_nzcv, fpscr
   13d60:	bgt	13d70 <table_compare_float@@Base+0x30>
   13d64:	mvnmi	r0, #0
   13d68:	movpl	r0, #0
   13d6c:	bx	lr
   13d70:	mov	r0, #1
   13d74:	bx	lr
   13d78:	adds	r0, r1, #0
   13d7c:	mvnne	r0, #0
   13d80:	bx	lr

00013d84 <table_compare_double@@Base>:
   13d84:	cmp	r0, #0
   13d88:	beq	13dbc <table_compare_double@@Base+0x38>
   13d8c:	cmp	r1, #0
   13d90:	beq	13db4 <table_compare_double@@Base+0x30>
   13d94:	vldr	d6, [r0]
   13d98:	vldr	d7, [r1]
   13d9c:	vcmpe.f64	d6, d7
   13da0:	vmrs	APSR_nzcv, fpscr
   13da4:	bgt	13db4 <table_compare_double@@Base+0x30>
   13da8:	mvnmi	r0, #0
   13dac:	movpl	r0, #0
   13db0:	bx	lr
   13db4:	mov	r0, #1
   13db8:	bx	lr
   13dbc:	adds	r0, r1, #0
   13dc0:	mvnne	r0, #0
   13dc4:	bx	lr

00013dc8 <table_compare_ldouble@@Base>:
   13dc8:	cmp	r0, #0
   13dcc:	beq	13e00 <table_compare_ldouble@@Base+0x38>
   13dd0:	cmp	r1, #0
   13dd4:	beq	13df8 <table_compare_ldouble@@Base+0x30>
   13dd8:	vldr	d6, [r0]
   13ddc:	vldr	d7, [r1]
   13de0:	vcmpe.f64	d6, d7
   13de4:	vmrs	APSR_nzcv, fpscr
   13de8:	bgt	13df8 <table_compare_ldouble@@Base+0x30>
   13dec:	mvnmi	r0, #0
   13df0:	movpl	r0, #0
   13df4:	bx	lr
   13df8:	mov	r0, #1
   13dfc:	bx	lr
   13e00:	adds	r0, r1, #0
   13e04:	mvnne	r0, #0
   13e08:	bx	lr

00013e0c <table_compare_uchar@@Base>:
   13e0c:	cmp	r0, #0
   13e10:	beq	13e40 <table_compare_uchar@@Base+0x34>
   13e14:	cmp	r1, #0
   13e18:	beq	13e38 <table_compare_uchar@@Base+0x2c>
   13e1c:	ldrb	r2, [r0]
   13e20:	ldrb	r3, [r1]
   13e24:	cmp	r2, r3
   13e28:	bhi	13e38 <table_compare_uchar@@Base+0x2c>
   13e2c:	mvncc	r0, #0
   13e30:	movcs	r0, #0
   13e34:	bx	lr
   13e38:	mov	r0, #1
   13e3c:	bx	lr
   13e40:	adds	r0, r1, #0
   13e44:	mvnne	r0, #0
   13e48:	bx	lr

00013e4c <table_compare_ptr@@Base>:
   13e4c:	cmp	r0, r1
   13e50:	bhi	13e60 <table_compare_ptr@@Base+0x14>
   13e54:	mvncc	r0, #0
   13e58:	movcs	r0, #0
   13e5c:	bx	lr
   13e60:	mov	r0, #1
   13e64:	bx	lr

00013e68 <table_compare_string@@Base>:
   13e68:	cmp	r0, #0
   13e6c:	beq	13e7c <table_compare_string@@Base+0x14>
   13e70:	cmp	r1, #0
   13e74:	beq	13e88 <table_compare_string@@Base+0x20>
   13e78:	b	12954 <strcmp@plt>
   13e7c:	adds	r0, r1, #0
   13e80:	mvnne	r0, #0
   13e84:	bx	lr
   13e88:	mov	r0, #1
   13e8c:	bx	lr

00013e90 <table_compare_ulong@@Base>:
   13e90:	cmp	r0, #0
   13e94:	beq	13ec4 <table_compare_ulong@@Base+0x34>
   13e98:	cmp	r1, #0
   13e9c:	beq	13ebc <table_compare_ulong@@Base+0x2c>
   13ea0:	ldr	r2, [r0]
   13ea4:	ldr	r3, [r1]
   13ea8:	cmp	r2, r3
   13eac:	bhi	13ebc <table_compare_ulong@@Base+0x2c>
   13eb0:	mvncc	r0, #0
   13eb4:	movcs	r0, #0
   13eb8:	bx	lr
   13ebc:	mov	r0, #1
   13ec0:	bx	lr
   13ec4:	adds	r0, r1, #0
   13ec8:	mvnne	r0, #0
   13ecc:	bx	lr

00013ed0 <table_compare_int@@Base>:
   13ed0:	cmp	r0, #0
   13ed4:	beq	13f04 <table_compare_int@@Base+0x34>
   13ed8:	cmp	r1, #0
   13edc:	beq	13efc <table_compare_int@@Base+0x2c>
   13ee0:	ldr	r2, [r0]
   13ee4:	ldr	r3, [r1]
   13ee8:	cmp	r2, r3
   13eec:	bgt	13efc <table_compare_int@@Base+0x2c>
   13ef0:	mvnlt	r0, #0
   13ef4:	movge	r0, #0
   13ef8:	bx	lr
   13efc:	mov	r0, #1
   13f00:	bx	lr
   13f04:	adds	r0, r1, #0
   13f08:	mvnne	r0, #0
   13f0c:	bx	lr

00013f10 <table_compare_uint@@Base>:
   13f10:	cmp	r0, #0
   13f14:	beq	13f44 <table_compare_uint@@Base+0x34>
   13f18:	cmp	r1, #0
   13f1c:	beq	13f3c <table_compare_uint@@Base+0x2c>
   13f20:	ldr	r2, [r0]
   13f24:	ldr	r3, [r1]
   13f28:	cmp	r2, r3
   13f2c:	bhi	13f3c <table_compare_uint@@Base+0x2c>
   13f30:	mvncc	r0, #0
   13f34:	movcs	r0, #0
   13f38:	bx	lr
   13f3c:	mov	r0, #1
   13f40:	bx	lr
   13f44:	adds	r0, r1, #0
   13f48:	mvnne	r0, #0
   13f4c:	bx	lr

00013f50 <table_compare_int16@@Base>:
   13f50:	cmp	r0, #0
   13f54:	beq	13f84 <table_compare_int16@@Base+0x34>
   13f58:	cmp	r1, #0
   13f5c:	beq	13f7c <table_compare_int16@@Base+0x2c>
   13f60:	ldrsh	r2, [r0]
   13f64:	ldrsh	r3, [r1]
   13f68:	cmp	r2, r3
   13f6c:	bgt	13f7c <table_compare_int16@@Base+0x2c>
   13f70:	mvnlt	r0, #0
   13f74:	movge	r0, #0
   13f78:	bx	lr
   13f7c:	mov	r0, #1
   13f80:	bx	lr
   13f84:	adds	r0, r1, #0
   13f88:	mvnne	r0, #0
   13f8c:	bx	lr

00013f90 <table_compare_uint16@@Base>:
   13f90:	cmp	r0, #0
   13f94:	beq	13fc4 <table_compare_uint16@@Base+0x34>
   13f98:	cmp	r1, #0
   13f9c:	beq	13fbc <table_compare_uint16@@Base+0x2c>
   13fa0:	ldrh	r2, [r0]
   13fa4:	ldrh	r3, [r1]
   13fa8:	cmp	r2, r3
   13fac:	bhi	13fbc <table_compare_uint16@@Base+0x2c>
   13fb0:	mvncc	r0, #0
   13fb4:	movcs	r0, #0
   13fb8:	bx	lr
   13fbc:	mov	r0, #1
   13fc0:	bx	lr
   13fc4:	adds	r0, r1, #0
   13fc8:	mvnne	r0, #0
   13fcc:	bx	lr

00013fd0 <table_compare_int64@@Base>:
   13fd0:	cmp	r0, #0
   13fd4:	beq	14014 <table_compare_int64@@Base+0x44>
   13fd8:	cmp	r1, #0
   13fdc:	beq	14020 <table_compare_int64@@Base+0x50>
   13fe0:	ldrd	r2, [r1]
   13fe4:	push	{r4, r5}
   13fe8:	ldrd	r4, [r0]
   13fec:	cmp	r2, r4
   13ff0:	sbcs	r1, r3, r5
   13ff4:	movlt	r0, #1
   13ff8:	blt	1400c <table_compare_int64@@Base+0x3c>
   13ffc:	cmp	r4, r2
   14000:	sbcs	r3, r5, r3
   14004:	mvnlt	r0, #0
   14008:	movge	r0, #0
   1400c:	pop	{r4, r5}
   14010:	bx	lr
   14014:	adds	r0, r1, #0
   14018:	mvnne	r0, #0
   1401c:	bx	lr
   14020:	mov	r0, #1
   14024:	bx	lr

00014028 <table_compare_char@@Base>:
   14028:	cmp	r0, #0
   1402c:	beq	1405c <table_compare_char@@Base+0x34>
   14030:	cmp	r1, #0
   14034:	beq	14054 <table_compare_char@@Base+0x2c>
   14038:	ldrb	r2, [r0]
   1403c:	ldrb	r3, [r1]
   14040:	cmp	r2, r3
   14044:	bhi	14054 <table_compare_char@@Base+0x2c>
   14048:	mvncc	r0, #0
   1404c:	movcs	r0, #0
   14050:	bx	lr
   14054:	mov	r0, #1
   14058:	bx	lr
   1405c:	adds	r0, r1, #0
   14060:	mvnne	r0, #0
   14064:	bx	lr

00014068 <table_compare_uint8@@Base>:
   14068:	cmp	r0, #0
   1406c:	beq	1409c <table_compare_uint8@@Base+0x34>
   14070:	cmp	r1, #0
   14074:	beq	14094 <table_compare_uint8@@Base+0x2c>
   14078:	ldrb	r2, [r0]
   1407c:	ldrb	r3, [r1]
   14080:	cmp	r2, r3
   14084:	bhi	14094 <table_compare_uint8@@Base+0x2c>
   14088:	mvncc	r0, #0
   1408c:	movcs	r0, #0
   14090:	bx	lr
   14094:	mov	r0, #1
   14098:	bx	lr
   1409c:	adds	r0, r1, #0
   140a0:	mvnne	r0, #0
   140a4:	bx	lr

000140a8 <table_get_default_compare_function_for_data_type@@Base>:
   140a8:	cmp	r0, #23
   140ac:	ldrls	r3, [pc, #8]	; 140bc <table_get_default_compare_function_for_data_type@@Base+0x14>
   140b0:	ldrls	r0, [r3, r0, lsl #2]
   140b4:	movhi	r0, #0
   140b8:	bx	lr
   140bc:	andeq	r8, r1, r8, lsl #9

000140c0 <table_subset_find@@Base>:
   140c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140c4:	mov	r4, r3
   140c8:	mov	r8, r2
   140cc:	mov	r6, r0
   140d0:	mov	r7, r1
   140d4:	ldr	sl, [sp, #32]
   140d8:	ldr	r9, [sp, #36]	; 0x24
   140dc:	bl	13a70 <table_get_column_compare_function@@Base>
   140e0:	cmp	r4, #0
   140e4:	mov	r5, r0
   140e8:	beq	1413c <table_subset_find@@Base+0x7c>
   140ec:	cmp	sl, r9
   140f0:	movle	r4, r9
   140f4:	ble	14110 <table_subset_find@@Base+0x50>
   140f8:	mvn	r4, #0
   140fc:	mov	r0, r4
   14100:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14104:	sub	r4, r4, #1
   14108:	cmp	sl, r4
   1410c:	bgt	140f8 <table_subset_find@@Base+0x38>
   14110:	mov	r2, r7
   14114:	mov	r1, r4
   14118:	mov	r0, r6
   1411c:	bl	16330 <table_get@@Base>
   14120:	mov	r1, r0
   14124:	mov	r0, r8
   14128:	blx	r5
   1412c:	cmp	r0, #0
   14130:	bne	14104 <table_subset_find@@Base+0x44>
   14134:	mov	r0, r4
   14138:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1413c:	cmp	sl, r9
   14140:	bgt	140f8 <table_subset_find@@Base+0x38>
   14144:	mov	r4, sl
   14148:	b	14158 <table_subset_find@@Base+0x98>
   1414c:	add	r4, r4, #1
   14150:	cmp	r9, r4
   14154:	blt	140f8 <table_subset_find@@Base+0x38>
   14158:	mov	r2, r7
   1415c:	mov	r1, r4
   14160:	mov	r0, r6
   14164:	bl	16330 <table_get@@Base>
   14168:	mov	r1, r0
   1416c:	mov	r0, r8
   14170:	blx	r5
   14174:	cmp	r0, #0
   14178:	bne	1414c <table_subset_find@@Base+0x8c>
   1417c:	mov	r0, r4
   14180:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00014184 <table_find@@Base>:
   14184:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14188:	mov	sl, r3
   1418c:	mov	r6, r1
   14190:	mov	r5, r0
   14194:	mov	r8, r2
   14198:	bl	1658c <table_get_row_length@@Base>
   1419c:	mov	r1, r6
   141a0:	mov	r9, r0
   141a4:	mov	r0, r5
   141a8:	bl	13a70 <table_get_column_compare_function@@Base>
   141ac:	cmp	sl, #0
   141b0:	sub	r4, r9, #1
   141b4:	mov	r7, r0
   141b8:	beq	14204 <table_find@@Base+0x80>
   141bc:	cmp	r4, #0
   141c0:	bge	141d8 <table_find@@Base+0x54>
   141c4:	mvn	r4, #0
   141c8:	mov	r0, r4
   141cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141d0:	subs	r4, r4, #1
   141d4:	bcc	141c4 <table_find@@Base+0x40>
   141d8:	mov	r2, r6
   141dc:	mov	r1, r4
   141e0:	mov	r0, r5
   141e4:	bl	16330 <table_get@@Base>
   141e8:	mov	r1, r0
   141ec:	mov	r0, r8
   141f0:	blx	r7
   141f4:	cmp	r0, #0
   141f8:	bne	141d0 <table_find@@Base+0x4c>
   141fc:	mov	r0, r4
   14200:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14204:	cmp	r4, #0
   14208:	blt	141c4 <table_find@@Base+0x40>
   1420c:	mov	r4, sl
   14210:	b	14220 <table_find@@Base+0x9c>
   14214:	add	r4, r4, #1
   14218:	cmp	r9, r4
   1421c:	beq	141c4 <table_find@@Base+0x40>
   14220:	mov	r2, r6
   14224:	mov	r1, r4
   14228:	mov	r0, r5
   1422c:	bl	16330 <table_get@@Base>
   14230:	mov	r1, r0
   14234:	mov	r0, r8
   14238:	blx	r7
   1423c:	cmp	r0, #0
   14240:	bne	14214 <table_find@@Base+0x90>
   14244:	mov	r0, r4
   14248:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001424c <table_find_bool@@Base>:
   1424c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14250:	sub	sp, sp, #12
   14254:	mov	r8, r3
   14258:	mov	r6, r1
   1425c:	mov	r5, r0
   14260:	strb	r2, [sp, #7]
   14264:	bl	1658c <table_get_row_length@@Base>
   14268:	mov	r1, r6
   1426c:	mov	r9, r0
   14270:	mov	r0, r5
   14274:	bl	13a70 <table_get_column_compare_function@@Base>
   14278:	cmp	r8, #0
   1427c:	sub	r4, r9, #1
   14280:	mov	r7, r0
   14284:	beq	142dc <table_find_bool@@Base+0x90>
   14288:	cmp	r4, #0
   1428c:	addge	r8, sp, #7
   14290:	bge	142ac <table_find_bool@@Base+0x60>
   14294:	mvn	r4, #0
   14298:	mov	r0, r4
   1429c:	add	sp, sp, #12
   142a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   142a4:	subs	r4, r4, #1
   142a8:	bcc	14294 <table_find_bool@@Base+0x48>
   142ac:	mov	r2, r6
   142b0:	mov	r1, r4
   142b4:	mov	r0, r5
   142b8:	bl	16330 <table_get@@Base>
   142bc:	mov	r1, r0
   142c0:	mov	r0, r8
   142c4:	blx	r7
   142c8:	cmp	r0, #0
   142cc:	bne	142a4 <table_find_bool@@Base+0x58>
   142d0:	mov	r0, r4
   142d4:	add	sp, sp, #12
   142d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   142dc:	cmp	r4, #0
   142e0:	blt	14294 <table_find_bool@@Base+0x48>
   142e4:	mov	r4, r8
   142e8:	add	r8, sp, #7
   142ec:	b	142fc <table_find_bool@@Base+0xb0>
   142f0:	add	r4, r4, #1
   142f4:	cmp	r9, r4
   142f8:	beq	14294 <table_find_bool@@Base+0x48>
   142fc:	mov	r2, r6
   14300:	mov	r1, r4
   14304:	mov	r0, r5
   14308:	bl	16330 <table_get@@Base>
   1430c:	mov	r1, r0
   14310:	mov	r0, r8
   14314:	blx	r7
   14318:	cmp	r0, #0
   1431c:	bne	142f0 <table_find_bool@@Base+0xa4>
   14320:	mov	r0, r4
   14324:	add	sp, sp, #12
   14328:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001432c <table_find_int@@Base>:
   1432c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14330:	sub	sp, sp, #12
   14334:	mov	r8, r3
   14338:	mov	r6, r1
   1433c:	mov	r5, r0
   14340:	str	r2, [sp, #4]
   14344:	bl	1658c <table_get_row_length@@Base>
   14348:	mov	r1, r6
   1434c:	mov	r9, r0
   14350:	mov	r0, r5
   14354:	bl	13a70 <table_get_column_compare_function@@Base>
   14358:	cmp	r8, #0
   1435c:	sub	r4, r9, #1
   14360:	mov	r7, r0
   14364:	beq	143bc <table_find_int@@Base+0x90>
   14368:	cmp	r4, #0
   1436c:	addge	r8, sp, #4
   14370:	bge	1438c <table_find_int@@Base+0x60>
   14374:	mvn	r4, #0
   14378:	mov	r0, r4
   1437c:	add	sp, sp, #12
   14380:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14384:	subs	r4, r4, #1
   14388:	bcc	14374 <table_find_int@@Base+0x48>
   1438c:	mov	r2, r6
   14390:	mov	r1, r4
   14394:	mov	r0, r5
   14398:	bl	16330 <table_get@@Base>
   1439c:	mov	r1, r0
   143a0:	mov	r0, r8
   143a4:	blx	r7
   143a8:	cmp	r0, #0
   143ac:	bne	14384 <table_find_int@@Base+0x58>
   143b0:	mov	r0, r4
   143b4:	add	sp, sp, #12
   143b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   143bc:	cmp	r4, #0
   143c0:	blt	14374 <table_find_int@@Base+0x48>
   143c4:	mov	r4, r8
   143c8:	add	r8, sp, #4
   143cc:	b	143dc <table_find_int@@Base+0xb0>
   143d0:	add	r4, r4, #1
   143d4:	cmp	r9, r4
   143d8:	beq	14374 <table_find_int@@Base+0x48>
   143dc:	mov	r2, r6
   143e0:	mov	r1, r4
   143e4:	mov	r0, r5
   143e8:	bl	16330 <table_get@@Base>
   143ec:	mov	r1, r0
   143f0:	mov	r0, r8
   143f4:	blx	r7
   143f8:	cmp	r0, #0
   143fc:	bne	143d0 <table_find_int@@Base+0xa4>
   14400:	mov	r0, r4
   14404:	add	sp, sp, #12
   14408:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001440c <table_find_uint@@Base>:
   1440c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14410:	sub	sp, sp, #12
   14414:	mov	r8, r3
   14418:	mov	r6, r1
   1441c:	mov	r5, r0
   14420:	str	r2, [sp, #4]
   14424:	bl	1658c <table_get_row_length@@Base>
   14428:	mov	r1, r6
   1442c:	mov	r9, r0
   14430:	mov	r0, r5
   14434:	bl	13a70 <table_get_column_compare_function@@Base>
   14438:	cmp	r8, #0
   1443c:	sub	r4, r9, #1
   14440:	mov	r7, r0
   14444:	beq	1449c <table_find_uint@@Base+0x90>
   14448:	cmp	r4, #0
   1444c:	addge	r8, sp, #4
   14450:	bge	1446c <table_find_uint@@Base+0x60>
   14454:	mvn	r4, #0
   14458:	mov	r0, r4
   1445c:	add	sp, sp, #12
   14460:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14464:	subs	r4, r4, #1
   14468:	bcc	14454 <table_find_uint@@Base+0x48>
   1446c:	mov	r2, r6
   14470:	mov	r1, r4
   14474:	mov	r0, r5
   14478:	bl	16330 <table_get@@Base>
   1447c:	mov	r1, r0
   14480:	mov	r0, r8
   14484:	blx	r7
   14488:	cmp	r0, #0
   1448c:	bne	14464 <table_find_uint@@Base+0x58>
   14490:	mov	r0, r4
   14494:	add	sp, sp, #12
   14498:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1449c:	cmp	r4, #0
   144a0:	blt	14454 <table_find_uint@@Base+0x48>
   144a4:	mov	r4, r8
   144a8:	add	r8, sp, #4
   144ac:	b	144bc <table_find_uint@@Base+0xb0>
   144b0:	add	r4, r4, #1
   144b4:	cmp	r9, r4
   144b8:	beq	14454 <table_find_uint@@Base+0x48>
   144bc:	mov	r2, r6
   144c0:	mov	r1, r4
   144c4:	mov	r0, r5
   144c8:	bl	16330 <table_get@@Base>
   144cc:	mov	r1, r0
   144d0:	mov	r0, r8
   144d4:	blx	r7
   144d8:	cmp	r0, #0
   144dc:	bne	144b0 <table_find_uint@@Base+0xa4>
   144e0:	mov	r0, r4
   144e4:	add	sp, sp, #12
   144e8:	pop	{r4, r5, r6, r7, r8, r9, pc}

000144ec <table_find_int8@@Base>:
   144ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   144f0:	sub	sp, sp, #12
   144f4:	mov	r8, r3
   144f8:	mov	r6, r1
   144fc:	mov	r5, r0
   14500:	strb	r2, [sp, #7]
   14504:	bl	1658c <table_get_row_length@@Base>
   14508:	mov	r1, r6
   1450c:	mov	r9, r0
   14510:	mov	r0, r5
   14514:	bl	13a70 <table_get_column_compare_function@@Base>
   14518:	cmp	r8, #0
   1451c:	sub	r4, r9, #1
   14520:	mov	r7, r0
   14524:	beq	1457c <table_find_int8@@Base+0x90>
   14528:	cmp	r4, #0
   1452c:	addge	r8, sp, #7
   14530:	bge	1454c <table_find_int8@@Base+0x60>
   14534:	mvn	r4, #0
   14538:	mov	r0, r4
   1453c:	add	sp, sp, #12
   14540:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14544:	subs	r4, r4, #1
   14548:	bcc	14534 <table_find_int8@@Base+0x48>
   1454c:	mov	r2, r6
   14550:	mov	r1, r4
   14554:	mov	r0, r5
   14558:	bl	16330 <table_get@@Base>
   1455c:	mov	r1, r0
   14560:	mov	r0, r8
   14564:	blx	r7
   14568:	cmp	r0, #0
   1456c:	bne	14544 <table_find_int8@@Base+0x58>
   14570:	mov	r0, r4
   14574:	add	sp, sp, #12
   14578:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1457c:	cmp	r4, #0
   14580:	blt	14534 <table_find_int8@@Base+0x48>
   14584:	mov	r4, r8
   14588:	add	r8, sp, #7
   1458c:	b	1459c <table_find_int8@@Base+0xb0>
   14590:	add	r4, r4, #1
   14594:	cmp	r9, r4
   14598:	beq	14534 <table_find_int8@@Base+0x48>
   1459c:	mov	r2, r6
   145a0:	mov	r1, r4
   145a4:	mov	r0, r5
   145a8:	bl	16330 <table_get@@Base>
   145ac:	mov	r1, r0
   145b0:	mov	r0, r8
   145b4:	blx	r7
   145b8:	cmp	r0, #0
   145bc:	bne	14590 <table_find_int8@@Base+0xa4>
   145c0:	mov	r0, r4
   145c4:	add	sp, sp, #12
   145c8:	pop	{r4, r5, r6, r7, r8, r9, pc}

000145cc <table_find_uint8@@Base>:
   145cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   145d0:	sub	sp, sp, #12
   145d4:	mov	r8, r3
   145d8:	mov	r6, r1
   145dc:	mov	r5, r0
   145e0:	strb	r2, [sp, #7]
   145e4:	bl	1658c <table_get_row_length@@Base>
   145e8:	mov	r1, r6
   145ec:	mov	r9, r0
   145f0:	mov	r0, r5
   145f4:	bl	13a70 <table_get_column_compare_function@@Base>
   145f8:	cmp	r8, #0
   145fc:	sub	r4, r9, #1
   14600:	mov	r7, r0
   14604:	beq	1465c <table_find_uint8@@Base+0x90>
   14608:	cmp	r4, #0
   1460c:	addge	r8, sp, #7
   14610:	bge	1462c <table_find_uint8@@Base+0x60>
   14614:	mvn	r4, #0
   14618:	mov	r0, r4
   1461c:	add	sp, sp, #12
   14620:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14624:	subs	r4, r4, #1
   14628:	bcc	14614 <table_find_uint8@@Base+0x48>
   1462c:	mov	r2, r6
   14630:	mov	r1, r4
   14634:	mov	r0, r5
   14638:	bl	16330 <table_get@@Base>
   1463c:	mov	r1, r0
   14640:	mov	r0, r8
   14644:	blx	r7
   14648:	cmp	r0, #0
   1464c:	bne	14624 <table_find_uint8@@Base+0x58>
   14650:	mov	r0, r4
   14654:	add	sp, sp, #12
   14658:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1465c:	cmp	r4, #0
   14660:	blt	14614 <table_find_uint8@@Base+0x48>
   14664:	mov	r4, r8
   14668:	add	r8, sp, #7
   1466c:	b	1467c <table_find_uint8@@Base+0xb0>
   14670:	add	r4, r4, #1
   14674:	cmp	r9, r4
   14678:	beq	14614 <table_find_uint8@@Base+0x48>
   1467c:	mov	r2, r6
   14680:	mov	r1, r4
   14684:	mov	r0, r5
   14688:	bl	16330 <table_get@@Base>
   1468c:	mov	r1, r0
   14690:	mov	r0, r8
   14694:	blx	r7
   14698:	cmp	r0, #0
   1469c:	bne	14670 <table_find_uint8@@Base+0xa4>
   146a0:	mov	r0, r4
   146a4:	add	sp, sp, #12
   146a8:	pop	{r4, r5, r6, r7, r8, r9, pc}

000146ac <table_find_int16@@Base>:
   146ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   146b0:	sub	sp, sp, #12
   146b4:	mov	r8, r3
   146b8:	mov	r6, r1
   146bc:	mov	r5, r0
   146c0:	strh	r2, [sp, #6]
   146c4:	bl	1658c <table_get_row_length@@Base>
   146c8:	mov	r1, r6
   146cc:	mov	r9, r0
   146d0:	mov	r0, r5
   146d4:	bl	13a70 <table_get_column_compare_function@@Base>
   146d8:	cmp	r8, #0
   146dc:	sub	r4, r9, #1
   146e0:	mov	r7, r0
   146e4:	beq	1473c <table_find_int16@@Base+0x90>
   146e8:	cmp	r4, #0
   146ec:	addge	r8, sp, #6
   146f0:	bge	1470c <table_find_int16@@Base+0x60>
   146f4:	mvn	r4, #0
   146f8:	mov	r0, r4
   146fc:	add	sp, sp, #12
   14700:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14704:	subs	r4, r4, #1
   14708:	bcc	146f4 <table_find_int16@@Base+0x48>
   1470c:	mov	r2, r6
   14710:	mov	r1, r4
   14714:	mov	r0, r5
   14718:	bl	16330 <table_get@@Base>
   1471c:	mov	r1, r0
   14720:	mov	r0, r8
   14724:	blx	r7
   14728:	cmp	r0, #0
   1472c:	bne	14704 <table_find_int16@@Base+0x58>
   14730:	mov	r0, r4
   14734:	add	sp, sp, #12
   14738:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1473c:	cmp	r4, #0
   14740:	blt	146f4 <table_find_int16@@Base+0x48>
   14744:	mov	r4, r8
   14748:	add	r8, sp, #6
   1474c:	b	1475c <table_find_int16@@Base+0xb0>
   14750:	add	r4, r4, #1
   14754:	cmp	r9, r4
   14758:	beq	146f4 <table_find_int16@@Base+0x48>
   1475c:	mov	r2, r6
   14760:	mov	r1, r4
   14764:	mov	r0, r5
   14768:	bl	16330 <table_get@@Base>
   1476c:	mov	r1, r0
   14770:	mov	r0, r8
   14774:	blx	r7
   14778:	cmp	r0, #0
   1477c:	bne	14750 <table_find_int16@@Base+0xa4>
   14780:	mov	r0, r4
   14784:	add	sp, sp, #12
   14788:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001478c <table_find_uint16@@Base>:
   1478c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14790:	sub	sp, sp, #12
   14794:	mov	r8, r3
   14798:	mov	r6, r1
   1479c:	mov	r5, r0
   147a0:	strh	r2, [sp, #6]
   147a4:	bl	1658c <table_get_row_length@@Base>
   147a8:	mov	r1, r6
   147ac:	mov	r9, r0
   147b0:	mov	r0, r5
   147b4:	bl	13a70 <table_get_column_compare_function@@Base>
   147b8:	cmp	r8, #0
   147bc:	sub	r4, r9, #1
   147c0:	mov	r7, r0
   147c4:	beq	1481c <table_find_uint16@@Base+0x90>
   147c8:	cmp	r4, #0
   147cc:	addge	r8, sp, #6
   147d0:	bge	147ec <table_find_uint16@@Base+0x60>
   147d4:	mvn	r4, #0
   147d8:	mov	r0, r4
   147dc:	add	sp, sp, #12
   147e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   147e4:	subs	r4, r4, #1
   147e8:	bcc	147d4 <table_find_uint16@@Base+0x48>
   147ec:	mov	r2, r6
   147f0:	mov	r1, r4
   147f4:	mov	r0, r5
   147f8:	bl	16330 <table_get@@Base>
   147fc:	mov	r1, r0
   14800:	mov	r0, r8
   14804:	blx	r7
   14808:	cmp	r0, #0
   1480c:	bne	147e4 <table_find_uint16@@Base+0x58>
   14810:	mov	r0, r4
   14814:	add	sp, sp, #12
   14818:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1481c:	cmp	r4, #0
   14820:	blt	147d4 <table_find_uint16@@Base+0x48>
   14824:	mov	r4, r8
   14828:	add	r8, sp, #6
   1482c:	b	1483c <table_find_uint16@@Base+0xb0>
   14830:	add	r4, r4, #1
   14834:	cmp	r9, r4
   14838:	beq	147d4 <table_find_uint16@@Base+0x48>
   1483c:	mov	r2, r6
   14840:	mov	r1, r4
   14844:	mov	r0, r5
   14848:	bl	16330 <table_get@@Base>
   1484c:	mov	r1, r0
   14850:	mov	r0, r8
   14854:	blx	r7
   14858:	cmp	r0, #0
   1485c:	bne	14830 <table_find_uint16@@Base+0xa4>
   14860:	mov	r0, r4
   14864:	add	sp, sp, #12
   14868:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001486c <table_find_int32@@Base>:
   1486c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14870:	sub	sp, sp, #12
   14874:	mov	r8, r3
   14878:	mov	r6, r1
   1487c:	mov	r5, r0
   14880:	str	r2, [sp, #4]
   14884:	bl	1658c <table_get_row_length@@Base>
   14888:	mov	r1, r6
   1488c:	mov	r9, r0
   14890:	mov	r0, r5
   14894:	bl	13a70 <table_get_column_compare_function@@Base>
   14898:	cmp	r8, #0
   1489c:	sub	r4, r9, #1
   148a0:	mov	r7, r0
   148a4:	beq	148fc <table_find_int32@@Base+0x90>
   148a8:	cmp	r4, #0
   148ac:	addge	r8, sp, #4
   148b0:	bge	148cc <table_find_int32@@Base+0x60>
   148b4:	mvn	r4, #0
   148b8:	mov	r0, r4
   148bc:	add	sp, sp, #12
   148c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   148c4:	subs	r4, r4, #1
   148c8:	bcc	148b4 <table_find_int32@@Base+0x48>
   148cc:	mov	r2, r6
   148d0:	mov	r1, r4
   148d4:	mov	r0, r5
   148d8:	bl	16330 <table_get@@Base>
   148dc:	mov	r1, r0
   148e0:	mov	r0, r8
   148e4:	blx	r7
   148e8:	cmp	r0, #0
   148ec:	bne	148c4 <table_find_int32@@Base+0x58>
   148f0:	mov	r0, r4
   148f4:	add	sp, sp, #12
   148f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   148fc:	cmp	r4, #0
   14900:	blt	148b4 <table_find_int32@@Base+0x48>
   14904:	mov	r4, r8
   14908:	add	r8, sp, #4
   1490c:	b	1491c <table_find_int32@@Base+0xb0>
   14910:	add	r4, r4, #1
   14914:	cmp	r9, r4
   14918:	beq	148b4 <table_find_int32@@Base+0x48>
   1491c:	mov	r2, r6
   14920:	mov	r1, r4
   14924:	mov	r0, r5
   14928:	bl	16330 <table_get@@Base>
   1492c:	mov	r1, r0
   14930:	mov	r0, r8
   14934:	blx	r7
   14938:	cmp	r0, #0
   1493c:	bne	14910 <table_find_int32@@Base+0xa4>
   14940:	mov	r0, r4
   14944:	add	sp, sp, #12
   14948:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001494c <table_find_uint32@@Base>:
   1494c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14950:	sub	sp, sp, #12
   14954:	mov	r8, r3
   14958:	mov	r6, r1
   1495c:	mov	r5, r0
   14960:	str	r2, [sp, #4]
   14964:	bl	1658c <table_get_row_length@@Base>
   14968:	mov	r1, r6
   1496c:	mov	r9, r0
   14970:	mov	r0, r5
   14974:	bl	13a70 <table_get_column_compare_function@@Base>
   14978:	cmp	r8, #0
   1497c:	sub	r4, r9, #1
   14980:	mov	r7, r0
   14984:	beq	149dc <table_find_uint32@@Base+0x90>
   14988:	cmp	r4, #0
   1498c:	addge	r8, sp, #4
   14990:	bge	149ac <table_find_uint32@@Base+0x60>
   14994:	mvn	r4, #0
   14998:	mov	r0, r4
   1499c:	add	sp, sp, #12
   149a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   149a4:	subs	r4, r4, #1
   149a8:	bcc	14994 <table_find_uint32@@Base+0x48>
   149ac:	mov	r2, r6
   149b0:	mov	r1, r4
   149b4:	mov	r0, r5
   149b8:	bl	16330 <table_get@@Base>
   149bc:	mov	r1, r0
   149c0:	mov	r0, r8
   149c4:	blx	r7
   149c8:	cmp	r0, #0
   149cc:	bne	149a4 <table_find_uint32@@Base+0x58>
   149d0:	mov	r0, r4
   149d4:	add	sp, sp, #12
   149d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   149dc:	cmp	r4, #0
   149e0:	blt	14994 <table_find_uint32@@Base+0x48>
   149e4:	mov	r4, r8
   149e8:	add	r8, sp, #4
   149ec:	b	149fc <table_find_uint32@@Base+0xb0>
   149f0:	add	r4, r4, #1
   149f4:	cmp	r9, r4
   149f8:	beq	14994 <table_find_uint32@@Base+0x48>
   149fc:	mov	r2, r6
   14a00:	mov	r1, r4
   14a04:	mov	r0, r5
   14a08:	bl	16330 <table_get@@Base>
   14a0c:	mov	r1, r0
   14a10:	mov	r0, r8
   14a14:	blx	r7
   14a18:	cmp	r0, #0
   14a1c:	bne	149f0 <table_find_uint32@@Base+0xa4>
   14a20:	mov	r0, r4
   14a24:	add	sp, sp, #12
   14a28:	pop	{r4, r5, r6, r7, r8, r9, pc}

00014a2c <table_find_int64@@Base>:
   14a2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14a30:	sub	sp, sp, #12
   14a34:	mov	r6, r1
   14a38:	mov	r5, r0
   14a3c:	ldr	r8, [sp, #40]	; 0x28
   14a40:	strd	r2, [sp]
   14a44:	bl	1658c <table_get_row_length@@Base>
   14a48:	mov	r1, r6
   14a4c:	mov	r9, r0
   14a50:	mov	r0, r5
   14a54:	bl	13a70 <table_get_column_compare_function@@Base>
   14a58:	cmp	r8, #0
   14a5c:	sub	r4, r9, #1
   14a60:	mov	r7, r0
   14a64:	beq	14abc <table_find_int64@@Base+0x90>
   14a68:	cmp	r4, #0
   14a6c:	movge	r8, sp
   14a70:	bge	14a8c <table_find_int64@@Base+0x60>
   14a74:	mvn	r4, #0
   14a78:	mov	r0, r4
   14a7c:	add	sp, sp, #12
   14a80:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14a84:	subs	r4, r4, #1
   14a88:	bcc	14a74 <table_find_int64@@Base+0x48>
   14a8c:	mov	r2, r6
   14a90:	mov	r1, r4
   14a94:	mov	r0, r5
   14a98:	bl	16330 <table_get@@Base>
   14a9c:	mov	r1, r0
   14aa0:	mov	r0, r8
   14aa4:	blx	r7
   14aa8:	cmp	r0, #0
   14aac:	bne	14a84 <table_find_int64@@Base+0x58>
   14ab0:	mov	r0, r4
   14ab4:	add	sp, sp, #12
   14ab8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14abc:	cmp	r4, #0
   14ac0:	blt	14a74 <table_find_int64@@Base+0x48>
   14ac4:	mov	r4, r8
   14ac8:	mov	r8, sp
   14acc:	b	14adc <table_find_int64@@Base+0xb0>
   14ad0:	add	r4, r4, #1
   14ad4:	cmp	r9, r4
   14ad8:	beq	14a74 <table_find_int64@@Base+0x48>
   14adc:	mov	r2, r6
   14ae0:	mov	r1, r4
   14ae4:	mov	r0, r5
   14ae8:	bl	16330 <table_get@@Base>
   14aec:	mov	r1, r0
   14af0:	mov	r0, r8
   14af4:	blx	r7
   14af8:	cmp	r0, #0
   14afc:	bne	14ad0 <table_find_int64@@Base+0xa4>
   14b00:	mov	r0, r4
   14b04:	add	sp, sp, #12
   14b08:	pop	{r4, r5, r6, r7, r8, r9, pc}

00014b0c <table_find_uint64@@Base>:
   14b0c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14b10:	sub	sp, sp, #12
   14b14:	mov	r6, r1
   14b18:	mov	r5, r0
   14b1c:	ldr	r8, [sp, #40]	; 0x28
   14b20:	strd	r2, [sp]
   14b24:	bl	1658c <table_get_row_length@@Base>
   14b28:	mov	r1, r6
   14b2c:	mov	r9, r0
   14b30:	mov	r0, r5
   14b34:	bl	13a70 <table_get_column_compare_function@@Base>
   14b38:	cmp	r8, #0
   14b3c:	sub	r4, r9, #1
   14b40:	mov	r7, r0
   14b44:	beq	14b9c <table_find_uint64@@Base+0x90>
   14b48:	cmp	r4, #0
   14b4c:	movge	r8, sp
   14b50:	bge	14b6c <table_find_uint64@@Base+0x60>
   14b54:	mvn	r4, #0
   14b58:	mov	r0, r4
   14b5c:	add	sp, sp, #12
   14b60:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14b64:	subs	r4, r4, #1
   14b68:	bcc	14b54 <table_find_uint64@@Base+0x48>
   14b6c:	mov	r2, r6
   14b70:	mov	r1, r4
   14b74:	mov	r0, r5
   14b78:	bl	16330 <table_get@@Base>
   14b7c:	mov	r1, r0
   14b80:	mov	r0, r8
   14b84:	blx	r7
   14b88:	cmp	r0, #0
   14b8c:	bne	14b64 <table_find_uint64@@Base+0x58>
   14b90:	mov	r0, r4
   14b94:	add	sp, sp, #12
   14b98:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14b9c:	cmp	r4, #0
   14ba0:	blt	14b54 <table_find_uint64@@Base+0x48>
   14ba4:	mov	r4, r8
   14ba8:	mov	r8, sp
   14bac:	b	14bbc <table_find_uint64@@Base+0xb0>
   14bb0:	add	r4, r4, #1
   14bb4:	cmp	r9, r4
   14bb8:	beq	14b54 <table_find_uint64@@Base+0x48>
   14bbc:	mov	r2, r6
   14bc0:	mov	r1, r4
   14bc4:	mov	r0, r5
   14bc8:	bl	16330 <table_get@@Base>
   14bcc:	mov	r1, r0
   14bd0:	mov	r0, r8
   14bd4:	blx	r7
   14bd8:	cmp	r0, #0
   14bdc:	bne	14bb0 <table_find_uint64@@Base+0xa4>
   14be0:	mov	r0, r4
   14be4:	add	sp, sp, #12
   14be8:	pop	{r4, r5, r6, r7, r8, r9, pc}

00014bec <table_find_short@@Base>:
   14bec:	push	{r4, r5, r6, r7, r8, r9, lr}
   14bf0:	sub	sp, sp, #12
   14bf4:	mov	r8, r3
   14bf8:	mov	r6, r1
   14bfc:	mov	r5, r0
   14c00:	strh	r2, [sp, #6]
   14c04:	bl	1658c <table_get_row_length@@Base>
   14c08:	mov	r1, r6
   14c0c:	mov	r9, r0
   14c10:	mov	r0, r5
   14c14:	bl	13a70 <table_get_column_compare_function@@Base>
   14c18:	cmp	r8, #0
   14c1c:	sub	r4, r9, #1
   14c20:	mov	r7, r0
   14c24:	beq	14c7c <table_find_short@@Base+0x90>
   14c28:	cmp	r4, #0
   14c2c:	addge	r8, sp, #6
   14c30:	bge	14c4c <table_find_short@@Base+0x60>
   14c34:	mvn	r4, #0
   14c38:	mov	r0, r4
   14c3c:	add	sp, sp, #12
   14c40:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14c44:	subs	r4, r4, #1
   14c48:	bcc	14c34 <table_find_short@@Base+0x48>
   14c4c:	mov	r2, r6
   14c50:	mov	r1, r4
   14c54:	mov	r0, r5
   14c58:	bl	16330 <table_get@@Base>
   14c5c:	mov	r1, r0
   14c60:	mov	r0, r8
   14c64:	blx	r7
   14c68:	cmp	r0, #0
   14c6c:	bne	14c44 <table_find_short@@Base+0x58>
   14c70:	mov	r0, r4
   14c74:	add	sp, sp, #12
   14c78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14c7c:	cmp	r4, #0
   14c80:	blt	14c34 <table_find_short@@Base+0x48>
   14c84:	mov	r4, r8
   14c88:	add	r8, sp, #6
   14c8c:	b	14c9c <table_find_short@@Base+0xb0>
   14c90:	add	r4, r4, #1
   14c94:	cmp	r9, r4
   14c98:	beq	14c34 <table_find_short@@Base+0x48>
   14c9c:	mov	r2, r6
   14ca0:	mov	r1, r4
   14ca4:	mov	r0, r5
   14ca8:	bl	16330 <table_get@@Base>
   14cac:	mov	r1, r0
   14cb0:	mov	r0, r8
   14cb4:	blx	r7
   14cb8:	cmp	r0, #0
   14cbc:	bne	14c90 <table_find_short@@Base+0xa4>
   14cc0:	mov	r0, r4
   14cc4:	add	sp, sp, #12
   14cc8:	pop	{r4, r5, r6, r7, r8, r9, pc}

00014ccc <table_find_ushort@@Base>:
   14ccc:	push	{r4, r5, r6, r7, r8, r9, lr}
   14cd0:	sub	sp, sp, #12
   14cd4:	mov	r8, r3
   14cd8:	mov	r6, r1
   14cdc:	mov	r5, r0
   14ce0:	strh	r2, [sp, #6]
   14ce4:	bl	1658c <table_get_row_length@@Base>
   14ce8:	mov	r1, r6
   14cec:	mov	r9, r0
   14cf0:	mov	r0, r5
   14cf4:	bl	13a70 <table_get_column_compare_function@@Base>
   14cf8:	cmp	r8, #0
   14cfc:	sub	r4, r9, #1
   14d00:	mov	r7, r0
   14d04:	beq	14d5c <table_find_ushort@@Base+0x90>
   14d08:	cmp	r4, #0
   14d0c:	addge	r8, sp, #6
   14d10:	bge	14d2c <table_find_ushort@@Base+0x60>
   14d14:	mvn	r4, #0
   14d18:	mov	r0, r4
   14d1c:	add	sp, sp, #12
   14d20:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14d24:	subs	r4, r4, #1
   14d28:	bcc	14d14 <table_find_ushort@@Base+0x48>
   14d2c:	mov	r2, r6
   14d30:	mov	r1, r4
   14d34:	mov	r0, r5
   14d38:	bl	16330 <table_get@@Base>
   14d3c:	mov	r1, r0
   14d40:	mov	r0, r8
   14d44:	blx	r7
   14d48:	cmp	r0, #0
   14d4c:	bne	14d24 <table_find_ushort@@Base+0x58>
   14d50:	mov	r0, r4
   14d54:	add	sp, sp, #12
   14d58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14d5c:	cmp	r4, #0
   14d60:	blt	14d14 <table_find_ushort@@Base+0x48>
   14d64:	mov	r4, r8
   14d68:	add	r8, sp, #6
   14d6c:	b	14d7c <table_find_ushort@@Base+0xb0>
   14d70:	add	r4, r4, #1
   14d74:	cmp	r9, r4
   14d78:	beq	14d14 <table_find_ushort@@Base+0x48>
   14d7c:	mov	r2, r6
   14d80:	mov	r1, r4
   14d84:	mov	r0, r5
   14d88:	bl	16330 <table_get@@Base>
   14d8c:	mov	r1, r0
   14d90:	mov	r0, r8
   14d94:	blx	r7
   14d98:	cmp	r0, #0
   14d9c:	bne	14d70 <table_find_ushort@@Base+0xa4>
   14da0:	mov	r0, r4
   14da4:	add	sp, sp, #12
   14da8:	pop	{r4, r5, r6, r7, r8, r9, pc}

00014dac <table_find_long@@Base>:
   14dac:	push	{r4, r5, r6, r7, r8, r9, lr}
   14db0:	sub	sp, sp, #12
   14db4:	mov	r8, r3
   14db8:	mov	r6, r1
   14dbc:	mov	r5, r0
   14dc0:	str	r2, [sp, #4]
   14dc4:	bl	1658c <table_get_row_length@@Base>
   14dc8:	mov	r1, r6
   14dcc:	mov	r9, r0
   14dd0:	mov	r0, r5
   14dd4:	bl	13a70 <table_get_column_compare_function@@Base>
   14dd8:	cmp	r8, #0
   14ddc:	sub	r4, r9, #1
   14de0:	mov	r7, r0
   14de4:	beq	14e3c <table_find_long@@Base+0x90>
   14de8:	cmp	r4, #0
   14dec:	addge	r8, sp, #4
   14df0:	bge	14e0c <table_find_long@@Base+0x60>
   14df4:	mvn	r4, #0
   14df8:	mov	r0, r4
   14dfc:	add	sp, sp, #12
   14e00:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14e04:	subs	r4, r4, #1
   14e08:	bcc	14df4 <table_find_long@@Base+0x48>
   14e0c:	mov	r2, r6
   14e10:	mov	r1, r4
   14e14:	mov	r0, r5
   14e18:	bl	16330 <table_get@@Base>
   14e1c:	mov	r1, r0
   14e20:	mov	r0, r8
   14e24:	blx	r7
   14e28:	cmp	r0, #0
   14e2c:	bne	14e04 <table_find_long@@Base+0x58>
   14e30:	mov	r0, r4
   14e34:	add	sp, sp, #12
   14e38:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14e3c:	cmp	r4, #0
   14e40:	blt	14df4 <table_find_long@@Base+0x48>
   14e44:	mov	r4, r8
   14e48:	add	r8, sp, #4
   14e4c:	b	14e5c <table_find_long@@Base+0xb0>
   14e50:	add	r4, r4, #1
   14e54:	cmp	r9, r4
   14e58:	beq	14df4 <table_find_long@@Base+0x48>
   14e5c:	mov	r2, r6
   14e60:	mov	r1, r4
   14e64:	mov	r0, r5
   14e68:	bl	16330 <table_get@@Base>
   14e6c:	mov	r1, r0
   14e70:	mov	r0, r8
   14e74:	blx	r7
   14e78:	cmp	r0, #0
   14e7c:	bne	14e50 <table_find_long@@Base+0xa4>
   14e80:	mov	r0, r4
   14e84:	add	sp, sp, #12
   14e88:	pop	{r4, r5, r6, r7, r8, r9, pc}

00014e8c <table_find_ulong@@Base>:
   14e8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14e90:	sub	sp, sp, #12
   14e94:	mov	r8, r3
   14e98:	mov	r6, r1
   14e9c:	mov	r5, r0
   14ea0:	str	r2, [sp, #4]
   14ea4:	bl	1658c <table_get_row_length@@Base>
   14ea8:	mov	r1, r6
   14eac:	mov	r9, r0
   14eb0:	mov	r0, r5
   14eb4:	bl	13a70 <table_get_column_compare_function@@Base>
   14eb8:	cmp	r8, #0
   14ebc:	sub	r4, r9, #1
   14ec0:	mov	r7, r0
   14ec4:	beq	14f1c <table_find_ulong@@Base+0x90>
   14ec8:	cmp	r4, #0
   14ecc:	addge	r8, sp, #4
   14ed0:	bge	14eec <table_find_ulong@@Base+0x60>
   14ed4:	mvn	r4, #0
   14ed8:	mov	r0, r4
   14edc:	add	sp, sp, #12
   14ee0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14ee4:	subs	r4, r4, #1
   14ee8:	bcc	14ed4 <table_find_ulong@@Base+0x48>
   14eec:	mov	r2, r6
   14ef0:	mov	r1, r4
   14ef4:	mov	r0, r5
   14ef8:	bl	16330 <table_get@@Base>
   14efc:	mov	r1, r0
   14f00:	mov	r0, r8
   14f04:	blx	r7
   14f08:	cmp	r0, #0
   14f0c:	bne	14ee4 <table_find_ulong@@Base+0x58>
   14f10:	mov	r0, r4
   14f14:	add	sp, sp, #12
   14f18:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14f1c:	cmp	r4, #0
   14f20:	blt	14ed4 <table_find_ulong@@Base+0x48>
   14f24:	mov	r4, r8
   14f28:	add	r8, sp, #4
   14f2c:	b	14f3c <table_find_ulong@@Base+0xb0>
   14f30:	add	r4, r4, #1
   14f34:	cmp	r9, r4
   14f38:	beq	14ed4 <table_find_ulong@@Base+0x48>
   14f3c:	mov	r2, r6
   14f40:	mov	r1, r4
   14f44:	mov	r0, r5
   14f48:	bl	16330 <table_get@@Base>
   14f4c:	mov	r1, r0
   14f50:	mov	r0, r8
   14f54:	blx	r7
   14f58:	cmp	r0, #0
   14f5c:	bne	14f30 <table_find_ulong@@Base+0xa4>
   14f60:	mov	r0, r4
   14f64:	add	sp, sp, #12
   14f68:	pop	{r4, r5, r6, r7, r8, r9, pc}

00014f6c <table_find_llong@@Base>:
   14f6c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14f70:	sub	sp, sp, #12
   14f74:	mov	r6, r1
   14f78:	mov	r5, r0
   14f7c:	ldr	r8, [sp, #40]	; 0x28
   14f80:	strd	r2, [sp]
   14f84:	bl	1658c <table_get_row_length@@Base>
   14f88:	mov	r1, r6
   14f8c:	mov	r9, r0
   14f90:	mov	r0, r5
   14f94:	bl	13a70 <table_get_column_compare_function@@Base>
   14f98:	cmp	r8, #0
   14f9c:	sub	r4, r9, #1
   14fa0:	mov	r7, r0
   14fa4:	beq	14ffc <table_find_llong@@Base+0x90>
   14fa8:	cmp	r4, #0
   14fac:	movge	r8, sp
   14fb0:	bge	14fcc <table_find_llong@@Base+0x60>
   14fb4:	mvn	r4, #0
   14fb8:	mov	r0, r4
   14fbc:	add	sp, sp, #12
   14fc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14fc4:	subs	r4, r4, #1
   14fc8:	bcc	14fb4 <table_find_llong@@Base+0x48>
   14fcc:	mov	r2, r6
   14fd0:	mov	r1, r4
   14fd4:	mov	r0, r5
   14fd8:	bl	16330 <table_get@@Base>
   14fdc:	mov	r1, r0
   14fe0:	mov	r0, r8
   14fe4:	blx	r7
   14fe8:	cmp	r0, #0
   14fec:	bne	14fc4 <table_find_llong@@Base+0x58>
   14ff0:	mov	r0, r4
   14ff4:	add	sp, sp, #12
   14ff8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14ffc:	cmp	r4, #0
   15000:	blt	14fb4 <table_find_llong@@Base+0x48>
   15004:	mov	r4, r8
   15008:	mov	r8, sp
   1500c:	b	1501c <table_find_llong@@Base+0xb0>
   15010:	add	r4, r4, #1
   15014:	cmp	r9, r4
   15018:	beq	14fb4 <table_find_llong@@Base+0x48>
   1501c:	mov	r2, r6
   15020:	mov	r1, r4
   15024:	mov	r0, r5
   15028:	bl	16330 <table_get@@Base>
   1502c:	mov	r1, r0
   15030:	mov	r0, r8
   15034:	blx	r7
   15038:	cmp	r0, #0
   1503c:	bne	15010 <table_find_llong@@Base+0xa4>
   15040:	mov	r0, r4
   15044:	add	sp, sp, #12
   15048:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001504c <table_find_ullong@@Base>:
   1504c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15050:	sub	sp, sp, #12
   15054:	mov	r6, r1
   15058:	mov	r5, r0
   1505c:	ldr	r8, [sp, #40]	; 0x28
   15060:	strd	r2, [sp]
   15064:	bl	1658c <table_get_row_length@@Base>
   15068:	mov	r1, r6
   1506c:	mov	r9, r0
   15070:	mov	r0, r5
   15074:	bl	13a70 <table_get_column_compare_function@@Base>
   15078:	cmp	r8, #0
   1507c:	sub	r4, r9, #1
   15080:	mov	r7, r0
   15084:	beq	150dc <table_find_ullong@@Base+0x90>
   15088:	cmp	r4, #0
   1508c:	movge	r8, sp
   15090:	bge	150ac <table_find_ullong@@Base+0x60>
   15094:	mvn	r4, #0
   15098:	mov	r0, r4
   1509c:	add	sp, sp, #12
   150a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   150a4:	subs	r4, r4, #1
   150a8:	bcc	15094 <table_find_ullong@@Base+0x48>
   150ac:	mov	r2, r6
   150b0:	mov	r1, r4
   150b4:	mov	r0, r5
   150b8:	bl	16330 <table_get@@Base>
   150bc:	mov	r1, r0
   150c0:	mov	r0, r8
   150c4:	blx	r7
   150c8:	cmp	r0, #0
   150cc:	bne	150a4 <table_find_ullong@@Base+0x58>
   150d0:	mov	r0, r4
   150d4:	add	sp, sp, #12
   150d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   150dc:	cmp	r4, #0
   150e0:	blt	15094 <table_find_ullong@@Base+0x48>
   150e4:	mov	r4, r8
   150e8:	mov	r8, sp
   150ec:	b	150fc <table_find_ullong@@Base+0xb0>
   150f0:	add	r4, r4, #1
   150f4:	cmp	r9, r4
   150f8:	beq	15094 <table_find_ullong@@Base+0x48>
   150fc:	mov	r2, r6
   15100:	mov	r1, r4
   15104:	mov	r0, r5
   15108:	bl	16330 <table_get@@Base>
   1510c:	mov	r1, r0
   15110:	mov	r0, r8
   15114:	blx	r7
   15118:	cmp	r0, #0
   1511c:	bne	150f0 <table_find_ullong@@Base+0xa4>
   15120:	mov	r0, r4
   15124:	add	sp, sp, #12
   15128:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001512c <table_find_float@@Base>:
   1512c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15130:	sub	sp, sp, #12
   15134:	mov	r8, r2
   15138:	mov	r6, r1
   1513c:	mov	r5, r0
   15140:	vstr	s0, [sp, #4]
   15144:	bl	1658c <table_get_row_length@@Base>
   15148:	mov	r1, r6
   1514c:	mov	r9, r0
   15150:	mov	r0, r5
   15154:	bl	13a70 <table_get_column_compare_function@@Base>
   15158:	cmp	r8, #0
   1515c:	sub	r4, r9, #1
   15160:	mov	r7, r0
   15164:	beq	151bc <table_find_float@@Base+0x90>
   15168:	cmp	r4, #0
   1516c:	addge	r8, sp, #4
   15170:	bge	1518c <table_find_float@@Base+0x60>
   15174:	mvn	r4, #0
   15178:	mov	r0, r4
   1517c:	add	sp, sp, #12
   15180:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15184:	subs	r4, r4, #1
   15188:	bcc	15174 <table_find_float@@Base+0x48>
   1518c:	mov	r2, r6
   15190:	mov	r1, r4
   15194:	mov	r0, r5
   15198:	bl	16330 <table_get@@Base>
   1519c:	mov	r1, r0
   151a0:	mov	r0, r8
   151a4:	blx	r7
   151a8:	cmp	r0, #0
   151ac:	bne	15184 <table_find_float@@Base+0x58>
   151b0:	mov	r0, r4
   151b4:	add	sp, sp, #12
   151b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   151bc:	cmp	r4, #0
   151c0:	blt	15174 <table_find_float@@Base+0x48>
   151c4:	mov	r4, r8
   151c8:	add	r8, sp, #4
   151cc:	b	151dc <table_find_float@@Base+0xb0>
   151d0:	add	r4, r4, #1
   151d4:	cmp	r9, r4
   151d8:	beq	15174 <table_find_float@@Base+0x48>
   151dc:	mov	r2, r6
   151e0:	mov	r1, r4
   151e4:	mov	r0, r5
   151e8:	bl	16330 <table_get@@Base>
   151ec:	mov	r1, r0
   151f0:	mov	r0, r8
   151f4:	blx	r7
   151f8:	cmp	r0, #0
   151fc:	bne	151d0 <table_find_float@@Base+0xa4>
   15200:	mov	r0, r4
   15204:	add	sp, sp, #12
   15208:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001520c <table_find_double@@Base>:
   1520c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15210:	sub	sp, sp, #12
   15214:	mov	r8, r2
   15218:	mov	r6, r1
   1521c:	mov	r5, r0
   15220:	vstr	d0, [sp]
   15224:	bl	1658c <table_get_row_length@@Base>
   15228:	mov	r1, r6
   1522c:	mov	r9, r0
   15230:	mov	r0, r5
   15234:	bl	13a70 <table_get_column_compare_function@@Base>
   15238:	cmp	r8, #0
   1523c:	sub	r4, r9, #1
   15240:	mov	r7, r0
   15244:	beq	1529c <table_find_double@@Base+0x90>
   15248:	cmp	r4, #0
   1524c:	movge	r8, sp
   15250:	bge	1526c <table_find_double@@Base+0x60>
   15254:	mvn	r4, #0
   15258:	mov	r0, r4
   1525c:	add	sp, sp, #12
   15260:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15264:	subs	r4, r4, #1
   15268:	bcc	15254 <table_find_double@@Base+0x48>
   1526c:	mov	r2, r6
   15270:	mov	r1, r4
   15274:	mov	r0, r5
   15278:	bl	16330 <table_get@@Base>
   1527c:	mov	r1, r0
   15280:	mov	r0, r8
   15284:	blx	r7
   15288:	cmp	r0, #0
   1528c:	bne	15264 <table_find_double@@Base+0x58>
   15290:	mov	r0, r4
   15294:	add	sp, sp, #12
   15298:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1529c:	cmp	r4, #0
   152a0:	blt	15254 <table_find_double@@Base+0x48>
   152a4:	mov	r4, r8
   152a8:	mov	r8, sp
   152ac:	b	152bc <table_find_double@@Base+0xb0>
   152b0:	add	r4, r4, #1
   152b4:	cmp	r9, r4
   152b8:	beq	15254 <table_find_double@@Base+0x48>
   152bc:	mov	r2, r6
   152c0:	mov	r1, r4
   152c4:	mov	r0, r5
   152c8:	bl	16330 <table_get@@Base>
   152cc:	mov	r1, r0
   152d0:	mov	r0, r8
   152d4:	blx	r7
   152d8:	cmp	r0, #0
   152dc:	bne	152b0 <table_find_double@@Base+0xa4>
   152e0:	mov	r0, r4
   152e4:	add	sp, sp, #12
   152e8:	pop	{r4, r5, r6, r7, r8, r9, pc}

000152ec <table_find_ldouble@@Base>:
   152ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   152f0:	sub	sp, sp, #12
   152f4:	mov	r8, r2
   152f8:	mov	r6, r1
   152fc:	mov	r5, r0
   15300:	vstr	d0, [sp]
   15304:	bl	1658c <table_get_row_length@@Base>
   15308:	mov	r1, r6
   1530c:	mov	r9, r0
   15310:	mov	r0, r5
   15314:	bl	13a70 <table_get_column_compare_function@@Base>
   15318:	cmp	r8, #0
   1531c:	sub	r4, r9, #1
   15320:	mov	r7, r0
   15324:	beq	1537c <table_find_ldouble@@Base+0x90>
   15328:	cmp	r4, #0
   1532c:	movge	r8, sp
   15330:	bge	1534c <table_find_ldouble@@Base+0x60>
   15334:	mvn	r4, #0
   15338:	mov	r0, r4
   1533c:	add	sp, sp, #12
   15340:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15344:	subs	r4, r4, #1
   15348:	bcc	15334 <table_find_ldouble@@Base+0x48>
   1534c:	mov	r2, r6
   15350:	mov	r1, r4
   15354:	mov	r0, r5
   15358:	bl	16330 <table_get@@Base>
   1535c:	mov	r1, r0
   15360:	mov	r0, r8
   15364:	blx	r7
   15368:	cmp	r0, #0
   1536c:	bne	15344 <table_find_ldouble@@Base+0x58>
   15370:	mov	r0, r4
   15374:	add	sp, sp, #12
   15378:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1537c:	cmp	r4, #0
   15380:	blt	15334 <table_find_ldouble@@Base+0x48>
   15384:	mov	r4, r8
   15388:	mov	r8, sp
   1538c:	b	1539c <table_find_ldouble@@Base+0xb0>
   15390:	add	r4, r4, #1
   15394:	cmp	r9, r4
   15398:	beq	15334 <table_find_ldouble@@Base+0x48>
   1539c:	mov	r2, r6
   153a0:	mov	r1, r4
   153a4:	mov	r0, r5
   153a8:	bl	16330 <table_get@@Base>
   153ac:	mov	r1, r0
   153b0:	mov	r0, r8
   153b4:	blx	r7
   153b8:	cmp	r0, #0
   153bc:	bne	15390 <table_find_ldouble@@Base+0xa4>
   153c0:	mov	r0, r4
   153c4:	add	sp, sp, #12
   153c8:	pop	{r4, r5, r6, r7, r8, r9, pc}

000153cc <table_find_char@@Base>:
   153cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   153d0:	sub	sp, sp, #12
   153d4:	mov	r8, r3
   153d8:	mov	r6, r1
   153dc:	mov	r5, r0
   153e0:	strb	r2, [sp, #7]
   153e4:	bl	1658c <table_get_row_length@@Base>
   153e8:	mov	r1, r6
   153ec:	mov	r9, r0
   153f0:	mov	r0, r5
   153f4:	bl	13a70 <table_get_column_compare_function@@Base>
   153f8:	cmp	r8, #0
   153fc:	sub	r4, r9, #1
   15400:	mov	r7, r0
   15404:	beq	1545c <table_find_char@@Base+0x90>
   15408:	cmp	r4, #0
   1540c:	addge	r8, sp, #7
   15410:	bge	1542c <table_find_char@@Base+0x60>
   15414:	mvn	r4, #0
   15418:	mov	r0, r4
   1541c:	add	sp, sp, #12
   15420:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15424:	subs	r4, r4, #1
   15428:	bcc	15414 <table_find_char@@Base+0x48>
   1542c:	mov	r2, r6
   15430:	mov	r1, r4
   15434:	mov	r0, r5
   15438:	bl	16330 <table_get@@Base>
   1543c:	mov	r1, r0
   15440:	mov	r0, r8
   15444:	blx	r7
   15448:	cmp	r0, #0
   1544c:	bne	15424 <table_find_char@@Base+0x58>
   15450:	mov	r0, r4
   15454:	add	sp, sp, #12
   15458:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1545c:	cmp	r4, #0
   15460:	blt	15414 <table_find_char@@Base+0x48>
   15464:	mov	r4, r8
   15468:	add	r8, sp, #7
   1546c:	b	1547c <table_find_char@@Base+0xb0>
   15470:	add	r4, r4, #1
   15474:	cmp	r9, r4
   15478:	beq	15414 <table_find_char@@Base+0x48>
   1547c:	mov	r2, r6
   15480:	mov	r1, r4
   15484:	mov	r0, r5
   15488:	bl	16330 <table_get@@Base>
   1548c:	mov	r1, r0
   15490:	mov	r0, r8
   15494:	blx	r7
   15498:	cmp	r0, #0
   1549c:	bne	15470 <table_find_char@@Base+0xa4>
   154a0:	mov	r0, r4
   154a4:	add	sp, sp, #12
   154a8:	pop	{r4, r5, r6, r7, r8, r9, pc}

000154ac <table_find_uchar@@Base>:
   154ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   154b0:	sub	sp, sp, #12
   154b4:	mov	r8, r3
   154b8:	mov	r6, r1
   154bc:	mov	r5, r0
   154c0:	strb	r2, [sp, #7]
   154c4:	bl	1658c <table_get_row_length@@Base>
   154c8:	mov	r1, r6
   154cc:	mov	r9, r0
   154d0:	mov	r0, r5
   154d4:	bl	13a70 <table_get_column_compare_function@@Base>
   154d8:	cmp	r8, #0
   154dc:	sub	r4, r9, #1
   154e0:	mov	r7, r0
   154e4:	beq	1553c <table_find_uchar@@Base+0x90>
   154e8:	cmp	r4, #0
   154ec:	addge	r8, sp, #7
   154f0:	bge	1550c <table_find_uchar@@Base+0x60>
   154f4:	mvn	r4, #0
   154f8:	mov	r0, r4
   154fc:	add	sp, sp, #12
   15500:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15504:	subs	r4, r4, #1
   15508:	bcc	154f4 <table_find_uchar@@Base+0x48>
   1550c:	mov	r2, r6
   15510:	mov	r1, r4
   15514:	mov	r0, r5
   15518:	bl	16330 <table_get@@Base>
   1551c:	mov	r1, r0
   15520:	mov	r0, r8
   15524:	blx	r7
   15528:	cmp	r0, #0
   1552c:	bne	15504 <table_find_uchar@@Base+0x58>
   15530:	mov	r0, r4
   15534:	add	sp, sp, #12
   15538:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1553c:	cmp	r4, #0
   15540:	blt	154f4 <table_find_uchar@@Base+0x48>
   15544:	mov	r4, r8
   15548:	add	r8, sp, #7
   1554c:	b	1555c <table_find_uchar@@Base+0xb0>
   15550:	add	r4, r4, #1
   15554:	cmp	r9, r4
   15558:	beq	154f4 <table_find_uchar@@Base+0x48>
   1555c:	mov	r2, r6
   15560:	mov	r1, r4
   15564:	mov	r0, r5
   15568:	bl	16330 <table_get@@Base>
   1556c:	mov	r1, r0
   15570:	mov	r0, r8
   15574:	blx	r7
   15578:	cmp	r0, #0
   1557c:	bne	15550 <table_find_uchar@@Base+0xa4>
   15580:	mov	r0, r4
   15584:	add	sp, sp, #12
   15588:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001558c <table_find_string@@Base>:
   1558c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15590:	sub	sp, sp, #12
   15594:	mov	r8, r3
   15598:	mov	r6, r1
   1559c:	mov	r5, r0
   155a0:	str	r2, [sp, #4]
   155a4:	bl	1658c <table_get_row_length@@Base>
   155a8:	mov	r1, r6
   155ac:	mov	r9, r0
   155b0:	mov	r0, r5
   155b4:	bl	13a70 <table_get_column_compare_function@@Base>
   155b8:	cmp	r8, #0
   155bc:	sub	r4, r9, #1
   155c0:	mov	r7, r0
   155c4:	beq	1561c <table_find_string@@Base+0x90>
   155c8:	cmp	r4, #0
   155cc:	addge	r8, sp, #4
   155d0:	bge	155ec <table_find_string@@Base+0x60>
   155d4:	mvn	r4, #0
   155d8:	mov	r0, r4
   155dc:	add	sp, sp, #12
   155e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   155e4:	subs	r4, r4, #1
   155e8:	bcc	155d4 <table_find_string@@Base+0x48>
   155ec:	mov	r2, r6
   155f0:	mov	r1, r4
   155f4:	mov	r0, r5
   155f8:	bl	16330 <table_get@@Base>
   155fc:	mov	r1, r0
   15600:	mov	r0, r8
   15604:	blx	r7
   15608:	cmp	r0, #0
   1560c:	bne	155e4 <table_find_string@@Base+0x58>
   15610:	mov	r0, r4
   15614:	add	sp, sp, #12
   15618:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1561c:	cmp	r4, #0
   15620:	blt	155d4 <table_find_string@@Base+0x48>
   15624:	mov	r4, r8
   15628:	add	r8, sp, #4
   1562c:	b	1563c <table_find_string@@Base+0xb0>
   15630:	add	r4, r4, #1
   15634:	cmp	r9, r4
   15638:	beq	155d4 <table_find_string@@Base+0x48>
   1563c:	mov	r2, r6
   15640:	mov	r1, r4
   15644:	mov	r0, r5
   15648:	bl	16330 <table_get@@Base>
   1564c:	mov	r1, r0
   15650:	mov	r0, r8
   15654:	blx	r7
   15658:	cmp	r0, #0
   1565c:	bne	15630 <table_find_string@@Base+0xa4>
   15660:	mov	r0, r4
   15664:	add	sp, sp, #12
   15668:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001566c <table_find_ptr@@Base>:
   1566c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15670:	mov	sl, r3
   15674:	mov	r6, r1
   15678:	mov	r5, r0
   1567c:	mov	r8, r2
   15680:	bl	1658c <table_get_row_length@@Base>
   15684:	mov	r1, r6
   15688:	mov	r9, r0
   1568c:	mov	r0, r5
   15690:	bl	13a70 <table_get_column_compare_function@@Base>
   15694:	cmp	sl, #0
   15698:	sub	r4, r9, #1
   1569c:	mov	r7, r0
   156a0:	beq	156ec <table_find_ptr@@Base+0x80>
   156a4:	cmp	r4, #0
   156a8:	bge	156c0 <table_find_ptr@@Base+0x54>
   156ac:	mvn	r4, #0
   156b0:	mov	r0, r4
   156b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156b8:	subs	r4, r4, #1
   156bc:	bcc	156ac <table_find_ptr@@Base+0x40>
   156c0:	mov	r2, r6
   156c4:	mov	r1, r4
   156c8:	mov	r0, r5
   156cc:	bl	16330 <table_get@@Base>
   156d0:	mov	r1, r0
   156d4:	mov	r0, r8
   156d8:	blx	r7
   156dc:	cmp	r0, #0
   156e0:	bne	156b8 <table_find_ptr@@Base+0x4c>
   156e4:	mov	r0, r4
   156e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156ec:	cmp	r4, #0
   156f0:	blt	156ac <table_find_ptr@@Base+0x40>
   156f4:	mov	r4, sl
   156f8:	b	15708 <table_find_ptr@@Base+0x9c>
   156fc:	add	r4, r4, #1
   15700:	cmp	r9, r4
   15704:	beq	156ac <table_find_ptr@@Base+0x40>
   15708:	mov	r2, r6
   1570c:	mov	r1, r4
   15710:	mov	r0, r5
   15714:	bl	16330 <table_get@@Base>
   15718:	mov	r1, r0
   1571c:	mov	r0, r8
   15720:	blx	r7
   15724:	cmp	r0, #0
   15728:	bne	156fc <table_find_ptr@@Base+0x90>
   1572c:	mov	r0, r4
   15730:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00015734 <table_sorted_subset_find@@Base>:
   15734:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15738:	mov	r5, r0
   1573c:	ldr	r9, [sp, #40]	; 0x28
   15740:	ldr	sl, [sp, #44]	; 0x2c
   15744:	mov	r6, r1
   15748:	mov	r8, r2
   1574c:	mov	fp, r3
   15750:	mov	r1, r6
   15754:	mov	r0, r5
   15758:	bl	13a70 <table_get_column_compare_function@@Base>
   1575c:	sub	r4, sl, r9
   15760:	mov	r2, r6
   15764:	add	r4, r4, r4, lsr #31
   15768:	add	r4, r9, r4, asr #1
   1576c:	mov	r1, r4
   15770:	mov	r7, r0
   15774:	mov	r0, r5
   15778:	bl	16330 <table_get@@Base>
   1577c:	mov	r1, r0
   15780:	mov	r0, r8
   15784:	blx	r7
   15788:	cmp	sl, r9
   1578c:	blt	157a8 <table_sorted_subset_find@@Base+0x74>
   15790:	cmp	r0, #0
   15794:	beq	157b4 <table_sorted_subset_find@@Base+0x80>
   15798:	cmp	r0, #1
   1579c:	beq	15828 <table_sorted_subset_find@@Base+0xf4>
   157a0:	cmn	r0, #1
   157a4:	beq	15820 <table_sorted_subset_find@@Base+0xec>
   157a8:	rsb	r4, r4, #0
   157ac:	mov	r0, r4
   157b0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157b4:	cmp	fp, #0
   157b8:	beq	157f4 <table_sorted_subset_find@@Base+0xc0>
   157bc:	b	157c4 <table_sorted_subset_find@@Base+0x90>
   157c0:	mov	r4, r9
   157c4:	add	r9, r4, #1
   157c8:	mov	r1, r9
   157cc:	mov	r2, r6
   157d0:	mov	r0, r5
   157d4:	bl	16330 <table_get@@Base>
   157d8:	mov	r1, r8
   157dc:	blx	r7
   157e0:	cmp	r0, #0
   157e4:	beq	157c0 <table_sorted_subset_find@@Base+0x8c>
   157e8:	mov	r0, r4
   157ec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157f0:	mov	r4, r9
   157f4:	sub	r9, r4, #1
   157f8:	mov	r1, r9
   157fc:	mov	r2, r6
   15800:	mov	r0, r5
   15804:	bl	16330 <table_get@@Base>
   15808:	mov	r1, r8
   1580c:	blx	r7
   15810:	cmp	r0, #0
   15814:	beq	157f0 <table_sorted_subset_find@@Base+0xbc>
   15818:	mov	r0, r4
   1581c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15820:	sub	sl, r4, #1
   15824:	b	15750 <table_sorted_subset_find@@Base+0x1c>
   15828:	mov	r9, r4
   1582c:	b	15750 <table_sorted_subset_find@@Base+0x1c>

00015830 <table_sorted_find@@Base>:
   15830:	push	{r4, r5, r6, r7, lr}
   15834:	sub	sp, sp, #12
   15838:	mov	r5, r1
   1583c:	mov	r6, r2
   15840:	mov	r7, r3
   15844:	mov	r4, r0
   15848:	bl	1658c <table_get_row_length@@Base>
   1584c:	mov	ip, #0
   15850:	mov	r3, r7
   15854:	mov	r2, r6
   15858:	mov	r1, r5
   1585c:	str	ip, [sp]
   15860:	sub	r0, r0, #1
   15864:	str	r0, [sp, #4]
   15868:	mov	r0, r4
   1586c:	bl	15734 <table_sorted_subset_find@@Base>
   15870:	add	sp, sp, #12
   15874:	pop	{r4, r5, r6, r7, pc}

00015878 <table_sorted_find_int@@Base>:
   15878:	push	{r4, r5, r6, r7, lr}
   1587c:	sub	sp, sp, #20
   15880:	add	r4, sp, #16
   15884:	mov	r6, r1
   15888:	mov	r7, r3
   1588c:	str	r2, [r4, #-4]!
   15890:	mov	r5, r0
   15894:	bl	1658c <table_get_row_length@@Base>
   15898:	mov	ip, #0
   1589c:	mov	r2, r4
   158a0:	mov	r3, r7
   158a4:	mov	r1, r6
   158a8:	str	ip, [sp]
   158ac:	sub	r0, r0, #1
   158b0:	str	r0, [sp, #4]
   158b4:	mov	r0, r5
   158b8:	bl	15734 <table_sorted_subset_find@@Base>
   158bc:	add	sp, sp, #20
   158c0:	pop	{r4, r5, r6, r7, pc}

000158c4 <table_sorted_find_uint@@Base>:
   158c4:	push	{r4, r5, r6, r7, lr}
   158c8:	sub	sp, sp, #20
   158cc:	add	r4, sp, #16
   158d0:	mov	r6, r1
   158d4:	mov	r7, r3
   158d8:	str	r2, [r4, #-4]!
   158dc:	mov	r5, r0
   158e0:	bl	1658c <table_get_row_length@@Base>
   158e4:	mov	ip, #0
   158e8:	mov	r2, r4
   158ec:	mov	r3, r7
   158f0:	mov	r1, r6
   158f4:	str	ip, [sp]
   158f8:	sub	r0, r0, #1
   158fc:	str	r0, [sp, #4]
   15900:	mov	r0, r5
   15904:	bl	15734 <table_sorted_subset_find@@Base>
   15908:	add	sp, sp, #20
   1590c:	pop	{r4, r5, r6, r7, pc}

00015910 <table_sorted_find_int8@@Base>:
   15910:	push	{r4, r5, r6, r7, lr}
   15914:	sub	sp, sp, #20
   15918:	add	r4, sp, #16
   1591c:	mov	r6, r1
   15920:	mov	r7, r3
   15924:	strb	r2, [r4, #-1]!
   15928:	mov	r5, r0
   1592c:	bl	1658c <table_get_row_length@@Base>
   15930:	mov	ip, #0
   15934:	mov	r2, r4
   15938:	mov	r3, r7
   1593c:	mov	r1, r6
   15940:	str	ip, [sp]
   15944:	sub	r0, r0, #1
   15948:	str	r0, [sp, #4]
   1594c:	mov	r0, r5
   15950:	bl	15734 <table_sorted_subset_find@@Base>
   15954:	add	sp, sp, #20
   15958:	pop	{r4, r5, r6, r7, pc}

0001595c <table_sorted_find_uint8@@Base>:
   1595c:	push	{r4, r5, r6, r7, lr}
   15960:	sub	sp, sp, #20
   15964:	add	r4, sp, #16
   15968:	mov	r6, r1
   1596c:	mov	r7, r3
   15970:	strb	r2, [r4, #-1]!
   15974:	mov	r5, r0
   15978:	bl	1658c <table_get_row_length@@Base>
   1597c:	mov	ip, #0
   15980:	mov	r2, r4
   15984:	mov	r3, r7
   15988:	mov	r1, r6
   1598c:	str	ip, [sp]
   15990:	sub	r0, r0, #1
   15994:	str	r0, [sp, #4]
   15998:	mov	r0, r5
   1599c:	bl	15734 <table_sorted_subset_find@@Base>
   159a0:	add	sp, sp, #20
   159a4:	pop	{r4, r5, r6, r7, pc}

000159a8 <table_sorted_find_int16@@Base>:
   159a8:	push	{r4, r5, r6, r7, lr}
   159ac:	sub	sp, sp, #20
   159b0:	add	r4, sp, #16
   159b4:	mov	r6, r1
   159b8:	mov	r7, r3
   159bc:	strh	r2, [r4, #-2]!
   159c0:	mov	r5, r0
   159c4:	bl	1658c <table_get_row_length@@Base>
   159c8:	mov	ip, #0
   159cc:	mov	r2, r4
   159d0:	mov	r3, r7
   159d4:	mov	r1, r6
   159d8:	str	ip, [sp]
   159dc:	sub	r0, r0, #1
   159e0:	str	r0, [sp, #4]
   159e4:	mov	r0, r5
   159e8:	bl	15734 <table_sorted_subset_find@@Base>
   159ec:	add	sp, sp, #20
   159f0:	pop	{r4, r5, r6, r7, pc}

000159f4 <table_sorted_find_uint16@@Base>:
   159f4:	push	{r4, r5, r6, r7, lr}
   159f8:	sub	sp, sp, #20
   159fc:	add	r4, sp, #16
   15a00:	mov	r6, r1
   15a04:	mov	r7, r3
   15a08:	strh	r2, [r4, #-2]!
   15a0c:	mov	r5, r0
   15a10:	bl	1658c <table_get_row_length@@Base>
   15a14:	mov	ip, #0
   15a18:	mov	r2, r4
   15a1c:	mov	r3, r7
   15a20:	mov	r1, r6
   15a24:	str	ip, [sp]
   15a28:	sub	r0, r0, #1
   15a2c:	str	r0, [sp, #4]
   15a30:	mov	r0, r5
   15a34:	bl	15734 <table_sorted_subset_find@@Base>
   15a38:	add	sp, sp, #20
   15a3c:	pop	{r4, r5, r6, r7, pc}

00015a40 <table_sorted_find_int32@@Base>:
   15a40:	push	{r4, r5, r6, r7, lr}
   15a44:	sub	sp, sp, #20
   15a48:	add	r4, sp, #16
   15a4c:	mov	r6, r1
   15a50:	mov	r7, r3
   15a54:	str	r2, [r4, #-4]!
   15a58:	mov	r5, r0
   15a5c:	bl	1658c <table_get_row_length@@Base>
   15a60:	mov	ip, #0
   15a64:	mov	r2, r4
   15a68:	mov	r3, r7
   15a6c:	mov	r1, r6
   15a70:	str	ip, [sp]
   15a74:	sub	r0, r0, #1
   15a78:	str	r0, [sp, #4]
   15a7c:	mov	r0, r5
   15a80:	bl	15734 <table_sorted_subset_find@@Base>
   15a84:	add	sp, sp, #20
   15a88:	pop	{r4, r5, r6, r7, pc}

00015a8c <table_sorted_find_uint32@@Base>:
   15a8c:	push	{r4, r5, r6, r7, lr}
   15a90:	sub	sp, sp, #20
   15a94:	add	r4, sp, #16
   15a98:	mov	r6, r1
   15a9c:	mov	r7, r3
   15aa0:	str	r2, [r4, #-4]!
   15aa4:	mov	r5, r0
   15aa8:	bl	1658c <table_get_row_length@@Base>
   15aac:	mov	ip, #0
   15ab0:	mov	r2, r4
   15ab4:	mov	r3, r7
   15ab8:	mov	r1, r6
   15abc:	str	ip, [sp]
   15ac0:	sub	r0, r0, #1
   15ac4:	str	r0, [sp, #4]
   15ac8:	mov	r0, r5
   15acc:	bl	15734 <table_sorted_subset_find@@Base>
   15ad0:	add	sp, sp, #20
   15ad4:	pop	{r4, r5, r6, r7, pc}

00015ad8 <table_sorted_find_int64@@Base>:
   15ad8:	push	{r4, r5, r6, lr}
   15adc:	sub	sp, sp, #16
   15ae0:	add	r4, sp, #16
   15ae4:	mov	r6, r1
   15ae8:	strd	r2, [r4, #-8]!
   15aec:	mov	r5, r0
   15af0:	bl	1658c <table_get_row_length@@Base>
   15af4:	mov	ip, #0
   15af8:	mov	r2, r4
   15afc:	mov	r1, r6
   15b00:	ldr	r3, [sp, #32]
   15b04:	str	ip, [sp]
   15b08:	sub	r0, r0, #1
   15b0c:	str	r0, [sp, #4]
   15b10:	mov	r0, r5
   15b14:	bl	15734 <table_sorted_subset_find@@Base>
   15b18:	add	sp, sp, #16
   15b1c:	pop	{r4, r5, r6, pc}

00015b20 <table_sorted_find_uint64@@Base>:
   15b20:	push	{r4, r5, r6, lr}
   15b24:	sub	sp, sp, #16
   15b28:	add	r4, sp, #16
   15b2c:	mov	r6, r1
   15b30:	strd	r2, [r4, #-8]!
   15b34:	mov	r5, r0
   15b38:	bl	1658c <table_get_row_length@@Base>
   15b3c:	mov	ip, #0
   15b40:	mov	r2, r4
   15b44:	mov	r1, r6
   15b48:	ldr	r3, [sp, #32]
   15b4c:	str	ip, [sp]
   15b50:	sub	r0, r0, #1
   15b54:	str	r0, [sp, #4]
   15b58:	mov	r0, r5
   15b5c:	bl	15734 <table_sorted_subset_find@@Base>
   15b60:	add	sp, sp, #16
   15b64:	pop	{r4, r5, r6, pc}

00015b68 <table_sorted_find_short@@Base>:
   15b68:	push	{r4, r5, r6, r7, lr}
   15b6c:	sub	sp, sp, #20
   15b70:	add	r4, sp, #16
   15b74:	mov	r6, r1
   15b78:	mov	r7, r3
   15b7c:	strh	r2, [r4, #-2]!
   15b80:	mov	r5, r0
   15b84:	bl	1658c <table_get_row_length@@Base>
   15b88:	mov	ip, #0
   15b8c:	mov	r2, r4
   15b90:	mov	r3, r7
   15b94:	mov	r1, r6
   15b98:	str	ip, [sp]
   15b9c:	sub	r0, r0, #1
   15ba0:	str	r0, [sp, #4]
   15ba4:	mov	r0, r5
   15ba8:	bl	15734 <table_sorted_subset_find@@Base>
   15bac:	add	sp, sp, #20
   15bb0:	pop	{r4, r5, r6, r7, pc}

00015bb4 <table_sorted_find_ushort@@Base>:
   15bb4:	push	{r4, r5, r6, r7, lr}
   15bb8:	sub	sp, sp, #20
   15bbc:	add	r4, sp, #16
   15bc0:	mov	r6, r1
   15bc4:	mov	r7, r3
   15bc8:	strh	r2, [r4, #-2]!
   15bcc:	mov	r5, r0
   15bd0:	bl	1658c <table_get_row_length@@Base>
   15bd4:	mov	ip, #0
   15bd8:	mov	r2, r4
   15bdc:	mov	r3, r7
   15be0:	mov	r1, r6
   15be4:	str	ip, [sp]
   15be8:	sub	r0, r0, #1
   15bec:	str	r0, [sp, #4]
   15bf0:	mov	r0, r5
   15bf4:	bl	15734 <table_sorted_subset_find@@Base>
   15bf8:	add	sp, sp, #20
   15bfc:	pop	{r4, r5, r6, r7, pc}

00015c00 <table_sorted_find_long@@Base>:
   15c00:	push	{r4, r5, r6, r7, lr}
   15c04:	sub	sp, sp, #20
   15c08:	add	r4, sp, #16
   15c0c:	mov	r6, r1
   15c10:	mov	r7, r3
   15c14:	str	r2, [r4, #-4]!
   15c18:	mov	r5, r0
   15c1c:	bl	1658c <table_get_row_length@@Base>
   15c20:	mov	ip, #0
   15c24:	mov	r2, r4
   15c28:	mov	r3, r7
   15c2c:	mov	r1, r6
   15c30:	str	ip, [sp]
   15c34:	sub	r0, r0, #1
   15c38:	str	r0, [sp, #4]
   15c3c:	mov	r0, r5
   15c40:	bl	15734 <table_sorted_subset_find@@Base>
   15c44:	add	sp, sp, #20
   15c48:	pop	{r4, r5, r6, r7, pc}

00015c4c <table_sorted_find_ulong@@Base>:
   15c4c:	push	{r4, r5, r6, r7, lr}
   15c50:	sub	sp, sp, #20
   15c54:	add	r4, sp, #16
   15c58:	mov	r6, r1
   15c5c:	mov	r7, r3
   15c60:	str	r2, [r4, #-4]!
   15c64:	mov	r5, r0
   15c68:	bl	1658c <table_get_row_length@@Base>
   15c6c:	mov	ip, #0
   15c70:	mov	r2, r4
   15c74:	mov	r3, r7
   15c78:	mov	r1, r6
   15c7c:	str	ip, [sp]
   15c80:	sub	r0, r0, #1
   15c84:	str	r0, [sp, #4]
   15c88:	mov	r0, r5
   15c8c:	bl	15734 <table_sorted_subset_find@@Base>
   15c90:	add	sp, sp, #20
   15c94:	pop	{r4, r5, r6, r7, pc}

00015c98 <table_sorted_find_llong@@Base>:
   15c98:	push	{r4, r5, r6, lr}
   15c9c:	sub	sp, sp, #16
   15ca0:	add	r4, sp, #16
   15ca4:	mov	r6, r1
   15ca8:	strd	r2, [r4, #-8]!
   15cac:	mov	r5, r0
   15cb0:	bl	1658c <table_get_row_length@@Base>
   15cb4:	mov	ip, #0
   15cb8:	mov	r2, r4
   15cbc:	mov	r1, r6
   15cc0:	ldr	r3, [sp, #32]
   15cc4:	str	ip, [sp]
   15cc8:	sub	r0, r0, #1
   15ccc:	str	r0, [sp, #4]
   15cd0:	mov	r0, r5
   15cd4:	bl	15734 <table_sorted_subset_find@@Base>
   15cd8:	add	sp, sp, #16
   15cdc:	pop	{r4, r5, r6, pc}

00015ce0 <table_sorted_find_ullong@@Base>:
   15ce0:	push	{r4, r5, r6, lr}
   15ce4:	sub	sp, sp, #16
   15ce8:	add	r4, sp, #16
   15cec:	mov	r6, r1
   15cf0:	strd	r2, [r4, #-8]!
   15cf4:	mov	r5, r0
   15cf8:	bl	1658c <table_get_row_length@@Base>
   15cfc:	mov	ip, #0
   15d00:	mov	r2, r4
   15d04:	mov	r1, r6
   15d08:	ldr	r3, [sp, #32]
   15d0c:	str	ip, [sp]
   15d10:	sub	r0, r0, #1
   15d14:	str	r0, [sp, #4]
   15d18:	mov	r0, r5
   15d1c:	bl	15734 <table_sorted_subset_find@@Base>
   15d20:	add	sp, sp, #16
   15d24:	pop	{r4, r5, r6, pc}

00015d28 <table_sorted_find_float@@Base>:
   15d28:	push	{r4, r5, r6, r7, lr}
   15d2c:	sub	sp, sp, #20
   15d30:	add	r4, sp, #16
   15d34:	mov	r7, r2
   15d38:	vstmdb	r4!, {s0}
   15d3c:	mov	r6, r1
   15d40:	mov	r5, r0
   15d44:	bl	1658c <table_get_row_length@@Base>
   15d48:	mov	ip, #0
   15d4c:	mov	r2, r4
   15d50:	mov	r3, r7
   15d54:	mov	r1, r6
   15d58:	str	ip, [sp]
   15d5c:	sub	r0, r0, #1
   15d60:	str	r0, [sp, #4]
   15d64:	mov	r0, r5
   15d68:	bl	15734 <table_sorted_subset_find@@Base>
   15d6c:	add	sp, sp, #20
   15d70:	pop	{r4, r5, r6, r7, pc}

00015d74 <table_sorted_find_double@@Base>:
   15d74:	push	{r4, r5, r6, r7, lr}
   15d78:	sub	sp, sp, #20
   15d7c:	add	r4, sp, #16
   15d80:	mov	r7, r2
   15d84:	vstmdb	r4!, {d0}
   15d88:	mov	r6, r1
   15d8c:	mov	r5, r0
   15d90:	bl	1658c <table_get_row_length@@Base>
   15d94:	mov	ip, #0
   15d98:	mov	r2, r4
   15d9c:	mov	r3, r7
   15da0:	mov	r1, r6
   15da4:	str	ip, [sp]
   15da8:	sub	r0, r0, #1
   15dac:	str	r0, [sp, #4]
   15db0:	mov	r0, r5
   15db4:	bl	15734 <table_sorted_subset_find@@Base>
   15db8:	add	sp, sp, #20
   15dbc:	pop	{r4, r5, r6, r7, pc}

00015dc0 <table_sorted_find_ldouble@@Base>:
   15dc0:	push	{r4, r5, r6, r7, lr}
   15dc4:	sub	sp, sp, #20
   15dc8:	add	r4, sp, #16
   15dcc:	mov	r7, r2
   15dd0:	vstmdb	r4!, {d0}
   15dd4:	mov	r6, r1
   15dd8:	mov	r5, r0
   15ddc:	bl	1658c <table_get_row_length@@Base>
   15de0:	mov	ip, #0
   15de4:	mov	r2, r4
   15de8:	mov	r3, r7
   15dec:	mov	r1, r6
   15df0:	str	ip, [sp]
   15df4:	sub	r0, r0, #1
   15df8:	str	r0, [sp, #4]
   15dfc:	mov	r0, r5
   15e00:	bl	15734 <table_sorted_subset_find@@Base>
   15e04:	add	sp, sp, #20
   15e08:	pop	{r4, r5, r6, r7, pc}

00015e0c <table_sorted_find_char@@Base>:
   15e0c:	push	{r4, r5, r6, r7, lr}
   15e10:	sub	sp, sp, #20
   15e14:	add	r4, sp, #16
   15e18:	mov	r6, r1
   15e1c:	mov	r7, r3
   15e20:	strb	r2, [r4, #-1]!
   15e24:	mov	r5, r0
   15e28:	bl	1658c <table_get_row_length@@Base>
   15e2c:	mov	ip, #0
   15e30:	mov	r2, r4
   15e34:	mov	r3, r7
   15e38:	mov	r1, r6
   15e3c:	str	ip, [sp]
   15e40:	sub	r0, r0, #1
   15e44:	str	r0, [sp, #4]
   15e48:	mov	r0, r5
   15e4c:	bl	15734 <table_sorted_subset_find@@Base>
   15e50:	add	sp, sp, #20
   15e54:	pop	{r4, r5, r6, r7, pc}

00015e58 <table_sorted_find_uchar@@Base>:
   15e58:	push	{r4, r5, r6, r7, lr}
   15e5c:	sub	sp, sp, #20
   15e60:	add	r4, sp, #16
   15e64:	mov	r6, r1
   15e68:	mov	r7, r3
   15e6c:	strb	r2, [r4, #-1]!
   15e70:	mov	r5, r0
   15e74:	bl	1658c <table_get_row_length@@Base>
   15e78:	mov	ip, #0
   15e7c:	mov	r2, r4
   15e80:	mov	r3, r7
   15e84:	mov	r1, r6
   15e88:	str	ip, [sp]
   15e8c:	sub	r0, r0, #1
   15e90:	str	r0, [sp, #4]
   15e94:	mov	r0, r5
   15e98:	bl	15734 <table_sorted_subset_find@@Base>
   15e9c:	add	sp, sp, #20
   15ea0:	pop	{r4, r5, r6, r7, pc}

00015ea4 <table_sorted_find_string@@Base>:
   15ea4:	push	{r4, r5, r6, r7, lr}
   15ea8:	sub	sp, sp, #12
   15eac:	mov	r5, r1
   15eb0:	mov	r6, r2
   15eb4:	mov	r7, r3
   15eb8:	mov	r4, r0
   15ebc:	bl	1658c <table_get_row_length@@Base>
   15ec0:	mov	ip, #0
   15ec4:	mov	r3, r7
   15ec8:	mov	r2, r6
   15ecc:	mov	r1, r5
   15ed0:	str	ip, [sp]
   15ed4:	sub	r0, r0, #1
   15ed8:	str	r0, [sp, #4]
   15edc:	mov	r0, r4
   15ee0:	bl	15734 <table_sorted_subset_find@@Base>
   15ee4:	add	sp, sp, #12
   15ee8:	pop	{r4, r5, r6, r7, pc}

00015eec <table_sorted_find_ptr@@Base>:
   15eec:	push	{r4, r5, r6, r7, lr}
   15ef0:	sub	sp, sp, #12
   15ef4:	mov	r5, r1
   15ef8:	mov	r6, r2
   15efc:	mov	r7, r3
   15f00:	mov	r4, r0
   15f04:	bl	1658c <table_get_row_length@@Base>
   15f08:	mov	ip, #0
   15f0c:	mov	r3, r7
   15f10:	mov	r2, r6
   15f14:	mov	r1, r5
   15f18:	str	ip, [sp]
   15f1c:	sub	r0, r0, #1
   15f20:	str	r0, [sp, #4]
   15f24:	mov	r0, r4
   15f28:	bl	15734 <table_sorted_subset_find@@Base>
   15f2c:	add	sp, sp, #12
   15f30:	pop	{r4, r5, r6, r7, pc}

00015f34 <table_sorted_subset_find_int@@Base>:
   15f34:	push	{r4, lr}
   15f38:	sub	sp, sp, #16
   15f3c:	add	ip, sp, #16
   15f40:	ldr	r4, [sp, #24]
   15f44:	ldr	lr, [sp, #28]
   15f48:	str	r2, [ip, #-4]!
   15f4c:	str	r4, [sp]
   15f50:	mov	r2, ip
   15f54:	str	lr, [sp, #4]
   15f58:	bl	15734 <table_sorted_subset_find@@Base>
   15f5c:	add	sp, sp, #16
   15f60:	pop	{r4, pc}

00015f64 <table_sorted_subset_find_uint@@Base>:
   15f64:	push	{r4, lr}
   15f68:	sub	sp, sp, #16
   15f6c:	add	ip, sp, #16
   15f70:	ldr	r4, [sp, #24]
   15f74:	ldr	lr, [sp, #28]
   15f78:	str	r2, [ip, #-4]!
   15f7c:	str	r4, [sp]
   15f80:	mov	r2, ip
   15f84:	str	lr, [sp, #4]
   15f88:	bl	15734 <table_sorted_subset_find@@Base>
   15f8c:	add	sp, sp, #16
   15f90:	pop	{r4, pc}

00015f94 <table_sorted_subset_find_int8@@Base>:
   15f94:	push	{r4, lr}
   15f98:	sub	sp, sp, #16
   15f9c:	add	ip, sp, #16
   15fa0:	ldr	r4, [sp, #24]
   15fa4:	ldr	lr, [sp, #28]
   15fa8:	strb	r2, [ip, #-1]!
   15fac:	str	r4, [sp]
   15fb0:	mov	r2, ip
   15fb4:	str	lr, [sp, #4]
   15fb8:	bl	15734 <table_sorted_subset_find@@Base>
   15fbc:	add	sp, sp, #16
   15fc0:	pop	{r4, pc}

00015fc4 <table_sorted_subset_find_uint8@@Base>:
   15fc4:	push	{r4, lr}
   15fc8:	sub	sp, sp, #16
   15fcc:	add	ip, sp, #16
   15fd0:	ldr	r4, [sp, #24]
   15fd4:	ldr	lr, [sp, #28]
   15fd8:	strb	r2, [ip, #-1]!
   15fdc:	str	r4, [sp]
   15fe0:	mov	r2, ip
   15fe4:	str	lr, [sp, #4]
   15fe8:	bl	15734 <table_sorted_subset_find@@Base>
   15fec:	add	sp, sp, #16
   15ff0:	pop	{r4, pc}

00015ff4 <table_sorted_subset_find_int16@@Base>:
   15ff4:	push	{r4, lr}
   15ff8:	sub	sp, sp, #16
   15ffc:	add	ip, sp, #16
   16000:	ldr	r4, [sp, #24]
   16004:	ldr	lr, [sp, #28]
   16008:	strh	r2, [ip, #-2]!
   1600c:	str	r4, [sp]
   16010:	mov	r2, ip
   16014:	str	lr, [sp, #4]
   16018:	bl	15734 <table_sorted_subset_find@@Base>
   1601c:	add	sp, sp, #16
   16020:	pop	{r4, pc}

00016024 <table_sorted_subset_find_uint16@@Base>:
   16024:	push	{r4, lr}
   16028:	sub	sp, sp, #16
   1602c:	add	ip, sp, #16
   16030:	ldr	r4, [sp, #24]
   16034:	ldr	lr, [sp, #28]
   16038:	strh	r2, [ip, #-2]!
   1603c:	str	r4, [sp]
   16040:	mov	r2, ip
   16044:	str	lr, [sp, #4]
   16048:	bl	15734 <table_sorted_subset_find@@Base>
   1604c:	add	sp, sp, #16
   16050:	pop	{r4, pc}

00016054 <table_sorted_subset_find_int32@@Base>:
   16054:	push	{r4, lr}
   16058:	sub	sp, sp, #16
   1605c:	add	ip, sp, #16
   16060:	ldr	r4, [sp, #24]
   16064:	ldr	lr, [sp, #28]
   16068:	str	r2, [ip, #-4]!
   1606c:	str	r4, [sp]
   16070:	mov	r2, ip
   16074:	str	lr, [sp, #4]
   16078:	bl	15734 <table_sorted_subset_find@@Base>
   1607c:	add	sp, sp, #16
   16080:	pop	{r4, pc}

00016084 <table_sorted_subset_find_uint32@@Base>:
   16084:	push	{r4, lr}
   16088:	sub	sp, sp, #16
   1608c:	add	ip, sp, #16
   16090:	ldr	r4, [sp, #24]
   16094:	ldr	lr, [sp, #28]
   16098:	str	r2, [ip, #-4]!
   1609c:	str	r4, [sp]
   160a0:	mov	r2, ip
   160a4:	str	lr, [sp, #4]
   160a8:	bl	15734 <table_sorted_subset_find@@Base>
   160ac:	add	sp, sp, #16
   160b0:	pop	{r4, pc}

000160b4 <table_sorted_subset_find_int64@@Base>:
   160b4:	push	{r4, lr}
   160b8:	sub	sp, sp, #16
   160bc:	add	ip, sp, #16
   160c0:	ldr	r4, [sp, #28]
   160c4:	ldr	lr, [sp, #32]
   160c8:	strd	r2, [ip, #-8]!
   160cc:	str	r4, [sp]
   160d0:	mov	r2, ip
   160d4:	str	lr, [sp, #4]
   160d8:	ldr	r3, [sp, #24]
   160dc:	bl	15734 <table_sorted_subset_find@@Base>
   160e0:	add	sp, sp, #16
   160e4:	pop	{r4, pc}

000160e8 <table_sorted_subset_find_uint64@@Base>:
   160e8:	push	{r4, lr}
   160ec:	sub	sp, sp, #16
   160f0:	add	ip, sp, #16
   160f4:	ldr	r4, [sp, #28]
   160f8:	ldr	lr, [sp, #32]
   160fc:	strd	r2, [ip, #-8]!
   16100:	str	r4, [sp]
   16104:	mov	r2, ip
   16108:	str	lr, [sp, #4]
   1610c:	ldr	r3, [sp, #24]
   16110:	bl	15734 <table_sorted_subset_find@@Base>
   16114:	add	sp, sp, #16
   16118:	pop	{r4, pc}

0001611c <table_sorted_subset_find_short@@Base>:
   1611c:	push	{r4, lr}
   16120:	sub	sp, sp, #16
   16124:	add	ip, sp, #16
   16128:	ldr	r4, [sp, #24]
   1612c:	ldr	lr, [sp, #28]
   16130:	strh	r2, [ip, #-2]!
   16134:	str	r4, [sp]
   16138:	mov	r2, ip
   1613c:	str	lr, [sp, #4]
   16140:	bl	15734 <table_sorted_subset_find@@Base>
   16144:	add	sp, sp, #16
   16148:	pop	{r4, pc}

0001614c <table_sorted_subset_find_ushort@@Base>:
   1614c:	push	{r4, lr}
   16150:	sub	sp, sp, #16
   16154:	add	ip, sp, #16
   16158:	ldr	r4, [sp, #24]
   1615c:	ldr	lr, [sp, #28]
   16160:	strh	r2, [ip, #-2]!
   16164:	str	r4, [sp]
   16168:	mov	r2, ip
   1616c:	str	lr, [sp, #4]
   16170:	bl	15734 <table_sorted_subset_find@@Base>
   16174:	add	sp, sp, #16
   16178:	pop	{r4, pc}

0001617c <table_sorted_subset_find_long@@Base>:
   1617c:	push	{r4, lr}
   16180:	sub	sp, sp, #16
   16184:	add	ip, sp, #16
   16188:	ldr	r4, [sp, #24]
   1618c:	ldr	lr, [sp, #28]
   16190:	str	r2, [ip, #-4]!
   16194:	str	r4, [sp]
   16198:	mov	r2, ip
   1619c:	str	lr, [sp, #4]
   161a0:	bl	15734 <table_sorted_subset_find@@Base>
   161a4:	add	sp, sp, #16
   161a8:	pop	{r4, pc}

000161ac <table_sorted_subset_find_ulong@@Base>:
   161ac:	push	{r4, lr}
   161b0:	sub	sp, sp, #16
   161b4:	add	ip, sp, #16
   161b8:	ldr	r4, [sp, #24]
   161bc:	ldr	lr, [sp, #28]
   161c0:	str	r2, [ip, #-4]!
   161c4:	str	r4, [sp]
   161c8:	mov	r2, ip
   161cc:	str	lr, [sp, #4]
   161d0:	bl	15734 <table_sorted_subset_find@@Base>
   161d4:	add	sp, sp, #16
   161d8:	pop	{r4, pc}

000161dc <table_sorted_subset_find_llong@@Base>:
   161dc:	push	{r4, lr}
   161e0:	sub	sp, sp, #16
   161e4:	add	ip, sp, #16
   161e8:	ldr	r4, [sp, #28]
   161ec:	ldr	lr, [sp, #32]
   161f0:	strd	r2, [ip, #-8]!
   161f4:	str	r4, [sp]
   161f8:	mov	r2, ip
   161fc:	str	lr, [sp, #4]
   16200:	ldr	r3, [sp, #24]
   16204:	bl	15734 <table_sorted_subset_find@@Base>
   16208:	add	sp, sp, #16
   1620c:	pop	{r4, pc}

00016210 <table_sorted_subset_find_ullong@@Base>:
   16210:	push	{r4, lr}
   16214:	sub	sp, sp, #16
   16218:	add	ip, sp, #16
   1621c:	ldr	r4, [sp, #28]
   16220:	ldr	lr, [sp, #32]
   16224:	strd	r2, [ip, #-8]!
   16228:	str	r4, [sp]
   1622c:	mov	r2, ip
   16230:	str	lr, [sp, #4]
   16234:	ldr	r3, [sp, #24]
   16238:	bl	15734 <table_sorted_subset_find@@Base>
   1623c:	add	sp, sp, #16
   16240:	pop	{r4, pc}

00016244 <table_sorted_subset_find_float@@Base>:
   16244:	push	{lr}		; (str lr, [sp, #-4]!)
   16248:	sub	sp, sp, #20
   1624c:	add	ip, sp, #16
   16250:	ldr	lr, [sp, #24]
   16254:	vstmdb	ip!, {s0}
   16258:	stm	sp, {r3, lr}
   1625c:	mov	r3, r2
   16260:	mov	r2, ip
   16264:	bl	15734 <table_sorted_subset_find@@Base>
   16268:	add	sp, sp, #20
   1626c:	pop	{pc}		; (ldr pc, [sp], #4)

00016270 <table_sorted_subset_find_double@@Base>:
   16270:	push	{lr}		; (str lr, [sp, #-4]!)
   16274:	sub	sp, sp, #20
   16278:	add	ip, sp, #16
   1627c:	ldr	lr, [sp, #24]
   16280:	vstmdb	ip!, {d0}
   16284:	stm	sp, {r3, lr}
   16288:	mov	r3, r2
   1628c:	mov	r2, ip
   16290:	bl	15734 <table_sorted_subset_find@@Base>
   16294:	add	sp, sp, #20
   16298:	pop	{pc}		; (ldr pc, [sp], #4)

0001629c <table_sorted_subset_find_ldouble@@Base>:
   1629c:	push	{lr}		; (str lr, [sp, #-4]!)
   162a0:	sub	sp, sp, #20
   162a4:	add	ip, sp, #16
   162a8:	ldr	lr, [sp, #24]
   162ac:	vstmdb	ip!, {d0}
   162b0:	stm	sp, {r3, lr}
   162b4:	mov	r3, r2
   162b8:	mov	r2, ip
   162bc:	bl	15734 <table_sorted_subset_find@@Base>
   162c0:	add	sp, sp, #20
   162c4:	pop	{pc}		; (ldr pc, [sp], #4)

000162c8 <table_sorted_subset_find_char@@Base>:
   162c8:	push	{r4, lr}
   162cc:	sub	sp, sp, #16
   162d0:	add	ip, sp, #16
   162d4:	ldr	r4, [sp, #24]
   162d8:	ldr	lr, [sp, #28]
   162dc:	strb	r2, [ip, #-1]!
   162e0:	str	r4, [sp]
   162e4:	mov	r2, ip
   162e8:	str	lr, [sp, #4]
   162ec:	bl	15734 <table_sorted_subset_find@@Base>
   162f0:	add	sp, sp, #16
   162f4:	pop	{r4, pc}

000162f8 <table_sorted_subset_find_uchar@@Base>:
   162f8:	push	{r4, lr}
   162fc:	sub	sp, sp, #16
   16300:	add	ip, sp, #16
   16304:	ldr	r4, [sp, #24]
   16308:	ldr	lr, [sp, #28]
   1630c:	strb	r2, [ip, #-1]!
   16310:	str	r4, [sp]
   16314:	mov	r2, ip
   16318:	str	lr, [sp, #4]
   1631c:	bl	15734 <table_sorted_subset_find@@Base>
   16320:	add	sp, sp, #16
   16324:	pop	{r4, pc}

00016328 <table_sorted_subset_find_string@@Base>:
   16328:	b	15734 <table_sorted_subset_find@@Base>

0001632c <table_sorted_subset_find_ptr@@Base>:
   1632c:	b	15734 <table_sorted_subset_find@@Base>

00016330 <table_get@@Base>:
   16330:	push	{r4, lr}
   16334:	bl	180ec <table_get_cell_ptr@@Base>
   16338:	ldr	r0, [r0]
   1633c:	pop	{r4, pc}

00016340 <table_get_bool@@Base>:
   16340:	push	{r4, lr}
   16344:	bl	180ec <table_get_cell_ptr@@Base>
   16348:	ldr	r3, [r0]
   1634c:	ldrb	r0, [r3]
   16350:	pop	{r4, pc}

00016354 <table_get_int@@Base>:
   16354:	push	{r4, lr}
   16358:	bl	180ec <table_get_cell_ptr@@Base>
   1635c:	ldr	r3, [r0]
   16360:	ldr	r0, [r3]
   16364:	pop	{r4, pc}

00016368 <table_get_uint@@Base>:
   16368:	push	{r4, lr}
   1636c:	bl	180ec <table_get_cell_ptr@@Base>
   16370:	ldr	r3, [r0]
   16374:	ldr	r0, [r3]
   16378:	pop	{r4, pc}

0001637c <table_get_int8@@Base>:
   1637c:	push	{r4, lr}
   16380:	bl	180ec <table_get_cell_ptr@@Base>
   16384:	ldr	r3, [r0]
   16388:	ldrsb	r0, [r3]
   1638c:	pop	{r4, pc}

00016390 <table_get_uint8@@Base>:
   16390:	push	{r4, lr}
   16394:	bl	180ec <table_get_cell_ptr@@Base>
   16398:	ldr	r3, [r0]
   1639c:	ldrb	r0, [r3]
   163a0:	pop	{r4, pc}

000163a4 <table_get_int16@@Base>:
   163a4:	push	{r4, lr}
   163a8:	bl	180ec <table_get_cell_ptr@@Base>
   163ac:	ldr	r3, [r0]
   163b0:	ldrsh	r0, [r3]
   163b4:	pop	{r4, pc}

000163b8 <table_get_uint16@@Base>:
   163b8:	push	{r4, lr}
   163bc:	bl	180ec <table_get_cell_ptr@@Base>
   163c0:	ldr	r3, [r0]
   163c4:	ldrh	r0, [r3]
   163c8:	pop	{r4, pc}

000163cc <table_get_int32@@Base>:
   163cc:	push	{r4, lr}
   163d0:	bl	180ec <table_get_cell_ptr@@Base>
   163d4:	ldr	r3, [r0]
   163d8:	ldr	r0, [r3]
   163dc:	pop	{r4, pc}

000163e0 <table_get_uint32@@Base>:
   163e0:	push	{r4, lr}
   163e4:	bl	180ec <table_get_cell_ptr@@Base>
   163e8:	ldr	r3, [r0]
   163ec:	ldr	r0, [r3]
   163f0:	pop	{r4, pc}

000163f4 <table_get_int64@@Base>:
   163f4:	push	{r4, lr}
   163f8:	bl	180ec <table_get_cell_ptr@@Base>
   163fc:	ldr	r3, [r0]
   16400:	ldrd	r0, [r3]
   16404:	pop	{r4, pc}

00016408 <table_get_uint64@@Base>:
   16408:	push	{r4, lr}
   1640c:	bl	180ec <table_get_cell_ptr@@Base>
   16410:	ldr	r3, [r0]
   16414:	ldrd	r0, [r3]
   16418:	pop	{r4, pc}

0001641c <table_get_short@@Base>:
   1641c:	push	{r4, lr}
   16420:	bl	180ec <table_get_cell_ptr@@Base>
   16424:	ldr	r3, [r0]
   16428:	ldrsh	r0, [r3]
   1642c:	pop	{r4, pc}

00016430 <table_get_ushort@@Base>:
   16430:	push	{r4, lr}
   16434:	bl	180ec <table_get_cell_ptr@@Base>
   16438:	ldr	r3, [r0]
   1643c:	ldrh	r0, [r3]
   16440:	pop	{r4, pc}

00016444 <table_get_long@@Base>:
   16444:	push	{r4, lr}
   16448:	bl	180ec <table_get_cell_ptr@@Base>
   1644c:	ldr	r3, [r0]
   16450:	ldr	r0, [r3]
   16454:	pop	{r4, pc}

00016458 <table_get_ulong@@Base>:
   16458:	push	{r4, lr}
   1645c:	bl	180ec <table_get_cell_ptr@@Base>
   16460:	ldr	r3, [r0]
   16464:	ldr	r0, [r3]
   16468:	pop	{r4, pc}

0001646c <table_get_llong@@Base>:
   1646c:	push	{r4, lr}
   16470:	bl	180ec <table_get_cell_ptr@@Base>
   16474:	ldr	r3, [r0]
   16478:	ldrd	r0, [r3]
   1647c:	pop	{r4, pc}

00016480 <table_get_ullong@@Base>:
   16480:	push	{r4, lr}
   16484:	bl	180ec <table_get_cell_ptr@@Base>
   16488:	ldr	r3, [r0]
   1648c:	ldrd	r0, [r3]
   16490:	pop	{r4, pc}

00016494 <table_get_float@@Base>:
   16494:	push	{r4, lr}
   16498:	bl	180ec <table_get_cell_ptr@@Base>
   1649c:	ldr	r3, [r0]
   164a0:	vldr	s0, [r3]
   164a4:	pop	{r4, pc}

000164a8 <table_get_double@@Base>:
   164a8:	push	{r4, lr}
   164ac:	bl	180ec <table_get_cell_ptr@@Base>
   164b0:	ldr	r3, [r0]
   164b4:	vldr	d0, [r3]
   164b8:	pop	{r4, pc}

000164bc <table_get_ldouble@@Base>:
   164bc:	push	{r4, lr}
   164c0:	bl	180ec <table_get_cell_ptr@@Base>
   164c4:	ldr	r3, [r0]
   164c8:	vldr	d0, [r3]
   164cc:	pop	{r4, pc}

000164d0 <table_get_char@@Base>:
   164d0:	push	{r4, lr}
   164d4:	bl	180ec <table_get_cell_ptr@@Base>
   164d8:	ldr	r3, [r0]
   164dc:	ldrb	r0, [r3]
   164e0:	pop	{r4, pc}

000164e4 <table_get_uchar@@Base>:
   164e4:	push	{r4, lr}
   164e8:	bl	180ec <table_get_cell_ptr@@Base>
   164ec:	ldr	r3, [r0]
   164f0:	ldrb	r0, [r3]
   164f4:	pop	{r4, pc}

000164f8 <table_get_string@@Base>:
   164f8:	push	{r4, lr}
   164fc:	bl	180ec <table_get_cell_ptr@@Base>
   16500:	ldr	r0, [r0]
   16504:	pop	{r4, pc}

00016508 <table_get_ptr@@Base>:
   16508:	push	{r4, lr}
   1650c:	bl	180ec <table_get_cell_ptr@@Base>
   16510:	ldr	r0, [r0]
   16514:	pop	{r4, pc}

00016518 <table_row_init@@Base>:
   16518:	ldr	r3, [r0, #12]
   1651c:	push	{r4, r5, r6, lr}
   16520:	mov	r5, r1
   16524:	ldr	r4, [r0, #16]
   16528:	lsl	r0, r3, #2
   1652c:	bl	12990 <malloc@plt>
   16530:	str	r0, [r4, r5, lsl #2]
   16534:	pop	{r4, r5, r6, pc}

00016538 <table_row_destroy@@Base>:
   16538:	push	{r4, r5, r6, r7, r8, lr}
   1653c:	mov	r6, r0
   16540:	mov	r5, r1
   16544:	bl	13714 <table_get_column_length@@Base>
   16548:	ldr	r8, [r6, #16]
   1654c:	subs	r7, r0, #0
   16550:	movgt	r4, #0
   16554:	ble	16574 <table_row_destroy@@Base+0x3c>
   16558:	mov	r2, r4
   1655c:	mov	r1, r5
   16560:	add	r4, r4, #1
   16564:	mov	r0, r6
   16568:	bl	176b0 <table_cell_destroy@@Base>
   1656c:	cmp	r7, r4
   16570:	bne	16558 <table_row_destroy@@Base+0x20>
   16574:	ldr	r0, [r8, r5, lsl #2]
   16578:	cmp	r0, #0
   1657c:	beq	16588 <table_row_destroy@@Base+0x50>
   16580:	pop	{r4, r5, r6, r7, r8, lr}
   16584:	b	1296c <free@plt>
   16588:	pop	{r4, r5, r6, r7, r8, pc}

0001658c <table_get_row_length@@Base>:
   1658c:	ldr	r0, [r0, #20]
   16590:	bx	lr

00016594 <table_add_row@@Base>:
   16594:	push	{r4, r5, r6, r7, r8, lr}
   16598:	mov	r5, r0
   1659c:	ldr	r4, [r0, #24]
   165a0:	ldr	r6, [r0, #20]
   165a4:	mov	r1, r4
   165a8:	mov	r0, r6
   165ac:	bl	182f0 <table_get_cell_ptr@@Base+0x204>
   165b0:	cmp	r1, #0
   165b4:	bne	165d8 <table_add_row@@Base+0x44>
   165b8:	ldr	r1, [r5, #28]
   165bc:	ldr	r0, [r5, #16]
   165c0:	add	r1, r4, r1
   165c4:	str	r1, [r5, #28]
   165c8:	lsl	r1, r1, #2
   165cc:	bl	12978 <realloc@plt>
   165d0:	ldr	r6, [r5, #20]
   165d4:	str	r0, [r5, #16]
   165d8:	mov	r0, r5
   165dc:	bl	13714 <table_get_column_length@@Base>
   165e0:	ldr	r4, [r5, #16]
   165e4:	mov	r7, r0
   165e8:	ldr	r0, [r5, #12]
   165ec:	lsl	r0, r0, #2
   165f0:	bl	12990 <malloc@plt>
   165f4:	cmp	r7, #0
   165f8:	str	r0, [r4, r6, lsl #2]
   165fc:	ble	16620 <table_add_row@@Base+0x8c>
   16600:	mov	r4, #0
   16604:	mov	r2, r4
   16608:	mov	r1, r6
   1660c:	add	r4, r4, #1
   16610:	mov	r0, r5
   16614:	bl	17694 <table_cell_init@@Base>
   16618:	cmp	r7, r4
   1661c:	bne	16604 <table_add_row@@Base+0x70>
   16620:	mov	r0, r5
   16624:	mov	r3, #2
   16628:	mvn	r2, #0
   1662c:	ldr	r1, [r5, #20]
   16630:	bl	13624 <table_notify@@Base>
   16634:	ldr	r0, [r5, #20]
   16638:	add	r3, r0, #1
   1663c:	str	r3, [r5, #20]
   16640:	pop	{r4, r5, r6, r7, r8, pc}

00016644 <table_remove_row@@Base>:
   16644:	push	{r4, r5, r6, r7, r8, lr}
   16648:	mov	r5, r0
   1664c:	mov	r6, r1
   16650:	ldr	r7, [r0, #20]
   16654:	bl	13714 <table_get_column_length@@Base>
   16658:	subs	r8, r0, #0
   1665c:	movgt	r4, #0
   16660:	ble	166a4 <table_remove_row@@Base+0x60>
   16664:	mov	r1, r4
   16668:	mov	r0, r5
   1666c:	bl	13784 <table_get_column_data_type@@Base>
   16670:	mov	r2, r4
   16674:	mov	r1, r6
   16678:	add	r4, r4, #1
   1667c:	cmp	r0, #23
   16680:	mov	r0, r5
   16684:	beq	1669c <table_remove_row@@Base+0x58>
   16688:	bl	180ec <table_get_cell_ptr@@Base>
   1668c:	ldr	r3, [r0]
   16690:	subs	r0, r3, #0
   16694:	beq	1669c <table_remove_row@@Base+0x58>
   16698:	bl	1296c <free@plt>
   1669c:	cmp	r8, r4
   166a0:	bne	16664 <table_remove_row@@Base+0x20>
   166a4:	ldr	r3, [r5, #16]
   166a8:	lsl	r4, r6, #2
   166ac:	ldr	r0, [r3, r6, lsl #2]
   166b0:	cmp	r0, #0
   166b4:	beq	166bc <table_remove_row@@Base+0x78>
   166b8:	bl	1296c <free@plt>
   166bc:	sub	ip, r7, #1
   166c0:	cmp	r6, ip
   166c4:	movlt	r3, r6
   166c8:	bge	166ec <table_remove_row@@Base+0xa8>
   166cc:	ldr	r1, [r5, #16]
   166d0:	add	r2, r4, #4
   166d4:	add	r3, r3, #1
   166d8:	ldr	r0, [r1, r2]
   166dc:	cmp	r3, ip
   166e0:	str	r0, [r1, r4]
   166e4:	mov	r4, r2
   166e8:	bne	166cc <table_remove_row@@Base+0x88>
   166ec:	ldr	r0, [r5, #20]
   166f0:	ldr	r4, [r5, #24]
   166f4:	sub	r0, r0, #1
   166f8:	str	r0, [r5, #20]
   166fc:	mov	r1, r4
   16700:	bl	182f0 <table_get_cell_ptr@@Base+0x204>
   16704:	cmp	r1, #0
   16708:	bne	16728 <table_remove_row@@Base+0xe4>
   1670c:	ldr	r1, [r5, #28]
   16710:	ldr	r0, [r5, #16]
   16714:	sub	r1, r1, r4
   16718:	str	r1, [r5, #28]
   1671c:	lsl	r1, r1, #2
   16720:	bl	12978 <realloc@plt>
   16724:	str	r0, [r5, #16]
   16728:	mov	r0, r5
   1672c:	mov	r1, r6
   16730:	mov	r3, #4
   16734:	mvn	r2, #0
   16738:	bl	13624 <table_notify@@Base>
   1673c:	mov	r0, #0
   16740:	pop	{r4, r5, r6, r7, r8, pc}

00016744 <table_get_row_ptr@@Base>:
   16744:	ldr	r0, [r0, #16]
   16748:	add	r0, r0, r1, lsl #2
   1674c:	bx	lr

00016750 <table_set_row_ptr@@Base>:
   16750:	ldr	r3, [r0, #16]
   16754:	ldr	r2, [r2]
   16758:	str	r2, [r3, r1, lsl #2]
   1675c:	bx	lr

00016760 <table_set@@Base>:
   16760:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16764:	mov	r5, r0
   16768:	mov	r6, r2
   1676c:	ldr	r4, [sp, #32]
   16770:	mov	r9, r1
   16774:	mov	r7, r3
   16778:	bl	180ec <table_get_cell_ptr@@Base>
   1677c:	mov	r1, r6
   16780:	mov	r8, r0
   16784:	mov	r0, r5
   16788:	bl	13a60 <table_get_col_ptr@@Base>
   1678c:	cmp	r4, #23
   16790:	ldrls	pc, [pc, r4, lsl #2]
   16794:	b	1680c <table_set@@Base+0xac>
   16798:			; <UNDEFINED> instruction: 0x000169b0
   1679c:	andeq	r6, r1, r0, lsr #19
   167a0:	muleq	r1, r0, r9
   167a4:	andeq	r6, r1, r0, lsl #19
   167a8:	andeq	r6, r1, r0, ror r9
   167ac:	andeq	r6, r1, ip, asr #18
   167b0:	andeq	r6, r1, ip, lsr r9
   167b4:	andeq	r6, r1, ip, lsr #18
   167b8:	strdeq	r6, [r1], -r0
   167bc:	andeq	r6, r1, r0, ror #19
   167c0:	ldrdeq	r6, [r1], -r0
   167c4:	andeq	r6, r1, r0, asr #19
   167c8:	andeq	r6, r1, ip, lsr sl
   167cc:	andeq	r6, r1, ip, lsl sl
   167d0:	andeq	r6, r1, ip, lsr #20
   167d4:	andeq	r6, r1, ip, lsl r9
   167d8:	strdeq	r6, [r1], -r8
   167dc:	andeq	r6, r1, r8, ror #17
   167e0:			; <UNDEFINED> instruction: 0x000168bc
   167e4:	andeq	r6, r1, ip, lsr #17
   167e8:	muleq	r1, ip, r8
   167ec:	andeq	r6, r1, r4, ror #16
   167f0:	andeq	r6, r1, r0, asr #16
   167f4:	andeq	r6, r1, r4, lsl r8
   167f8:	bl	12990 <malloc@plt>
   167fc:	cmp	r0, #0
   16800:	mov	r3, r0
   16804:	str	r0, [r8]
   16808:	bne	16a08 <table_set@@Base+0x2a8>
   1680c:	mvn	r0, #0
   16810:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16814:	ldr	r3, [r0, #4]
   16818:	cmp	r3, #23
   1681c:	bne	1680c <table_set@@Base+0xac>
   16820:	str	r7, [r8]
   16824:	mov	r0, r5
   16828:	mov	r2, r6
   1682c:	mov	r1, r9
   16830:	mov	r3, #1
   16834:	bl	13624 <table_notify@@Base>
   16838:	mov	r0, #0
   1683c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16840:	ldr	r3, [r0, #4]
   16844:	cmp	r3, #22
   16848:	bne	1680c <table_set@@Base+0xac>
   1684c:	ldr	r0, [r8]
   16850:	cmp	r0, #0
   16854:	beq	16a64 <table_set@@Base+0x304>
   16858:	ldrb	r3, [r7]
   1685c:	strb	r3, [r0]
   16860:	b	16824 <table_set@@Base+0xc4>
   16864:	ldr	r3, [r0, #4]
   16868:	cmp	r3, #21
   1686c:	bne	1680c <table_set@@Base+0xac>
   16870:	mov	r0, r7
   16874:	bl	129b4 <strlen@plt>
   16878:	add	r1, r0, #1
   1687c:	ldr	r0, [r8]
   16880:	bl	12978 <realloc@plt>
   16884:	cmp	r0, #0
   16888:	str	r0, [r8]
   1688c:	beq	1680c <table_set@@Base+0xac>
   16890:	mov	r1, r7
   16894:	bl	12984 <strcpy@plt>
   16898:	b	16824 <table_set@@Base+0xc4>
   1689c:	ldr	r3, [r0, #4]
   168a0:	cmp	r3, #20
   168a4:	beq	1684c <table_set@@Base+0xec>
   168a8:	b	1680c <table_set@@Base+0xac>
   168ac:	ldr	r3, [r0, #4]
   168b0:	cmp	r3, #19
   168b4:	beq	1684c <table_set@@Base+0xec>
   168b8:	b	1680c <table_set@@Base+0xac>
   168bc:	ldr	r3, [r0, #4]
   168c0:	cmp	r3, #18
   168c4:	bne	1680c <table_set@@Base+0xac>
   168c8:	ldr	r0, [r8]
   168cc:	cmp	r0, #0
   168d0:	beq	16a7c <table_set@@Base+0x31c>
   168d4:	ldr	r2, [r7]
   168d8:	ldr	r3, [r7, #4]
   168dc:	str	r2, [r0]
   168e0:	str	r3, [r0, #4]
   168e4:	b	16824 <table_set@@Base+0xc4>
   168e8:	ldr	r3, [r0, #4]
   168ec:	cmp	r3, #17
   168f0:	beq	168c8 <table_set@@Base+0x168>
   168f4:	b	1680c <table_set@@Base+0xac>
   168f8:	ldr	r3, [r0, #4]
   168fc:	cmp	r3, #16
   16900:	bne	1680c <table_set@@Base+0xac>
   16904:	ldr	r0, [r8]
   16908:	cmp	r0, #0
   1690c:	beq	16a4c <table_set@@Base+0x2ec>
   16910:	ldr	r3, [r7]
   16914:	str	r3, [r0]
   16918:	b	16824 <table_set@@Base+0xc4>
   1691c:	ldr	r3, [r0, #4]
   16920:	cmp	r3, #15
   16924:	beq	168c8 <table_set@@Base+0x168>
   16928:	b	1680c <table_set@@Base+0xac>
   1692c:	ldr	r3, [r0, #4]
   16930:	cmp	r3, #7
   16934:	beq	16904 <table_set@@Base+0x1a4>
   16938:	b	1680c <table_set@@Base+0xac>
   1693c:	ldr	r3, [r0, #4]
   16940:	cmp	r3, #6
   16944:	beq	16904 <table_set@@Base+0x1a4>
   16948:	b	1680c <table_set@@Base+0xac>
   1694c:	ldr	r3, [r0, #4]
   16950:	cmp	r3, #5
   16954:	bne	1680c <table_set@@Base+0xac>
   16958:	ldr	r0, [r8]
   1695c:	cmp	r0, #0
   16960:	beq	16a94 <table_set@@Base+0x334>
   16964:	ldrh	r3, [r7]
   16968:	strh	r3, [r0]
   1696c:	b	16824 <table_set@@Base+0xc4>
   16970:	ldr	r3, [r0, #4]
   16974:	cmp	r3, #4
   16978:	beq	16958 <table_set@@Base+0x1f8>
   1697c:	b	1680c <table_set@@Base+0xac>
   16980:	ldr	r3, [r0, #4]
   16984:	cmp	r3, #3
   16988:	beq	1684c <table_set@@Base+0xec>
   1698c:	b	1680c <table_set@@Base+0xac>
   16990:	ldr	r3, [r0, #4]
   16994:	cmp	r3, #2
   16998:	beq	1684c <table_set@@Base+0xec>
   1699c:	b	1680c <table_set@@Base+0xac>
   169a0:	ldr	r3, [r0, #4]
   169a4:	cmp	r3, #1
   169a8:	beq	16904 <table_set@@Base+0x1a4>
   169ac:	b	1680c <table_set@@Base+0xac>
   169b0:	ldr	r3, [r0, #4]
   169b4:	cmp	r3, #0
   169b8:	beq	16904 <table_set@@Base+0x1a4>
   169bc:	b	1680c <table_set@@Base+0xac>
   169c0:	ldr	r3, [r0, #4]
   169c4:	cmp	r3, #11
   169c8:	beq	16958 <table_set@@Base+0x1f8>
   169cc:	b	1680c <table_set@@Base+0xac>
   169d0:	ldr	r3, [r0, #4]
   169d4:	cmp	r3, #10
   169d8:	beq	16958 <table_set@@Base+0x1f8>
   169dc:	b	1680c <table_set@@Base+0xac>
   169e0:	ldr	r3, [r0, #4]
   169e4:	cmp	r3, #9
   169e8:	beq	168c8 <table_set@@Base+0x168>
   169ec:	b	1680c <table_set@@Base+0xac>
   169f0:	ldr	r0, [r0, #4]
   169f4:	cmp	r0, #8
   169f8:	bne	1680c <table_set@@Base+0xac>
   169fc:	ldr	r3, [r8]
   16a00:	cmp	r3, #0
   16a04:	beq	167f8 <table_set@@Base+0x98>
   16a08:	ldr	r1, [r7]
   16a0c:	ldr	r2, [r7, #4]
   16a10:	str	r1, [r3]
   16a14:	str	r2, [r3, #4]
   16a18:	b	16824 <table_set@@Base+0xc4>
   16a1c:	ldr	r3, [r0, #4]
   16a20:	cmp	r3, #13
   16a24:	beq	16904 <table_set@@Base+0x1a4>
   16a28:	b	1680c <table_set@@Base+0xac>
   16a2c:	ldr	r3, [r0, #4]
   16a30:	cmp	r3, #14
   16a34:	beq	168c8 <table_set@@Base+0x168>
   16a38:	b	1680c <table_set@@Base+0xac>
   16a3c:	ldr	r3, [r0, #4]
   16a40:	cmp	r3, #12
   16a44:	beq	16904 <table_set@@Base+0x1a4>
   16a48:	b	1680c <table_set@@Base+0xac>
   16a4c:	mov	r0, #4
   16a50:	bl	12990 <malloc@plt>
   16a54:	cmp	r0, #0
   16a58:	str	r0, [r8]
   16a5c:	bne	16910 <table_set@@Base+0x1b0>
   16a60:	b	1680c <table_set@@Base+0xac>
   16a64:	mov	r0, #1
   16a68:	bl	12990 <malloc@plt>
   16a6c:	cmp	r0, #0
   16a70:	str	r0, [r8]
   16a74:	bne	16858 <table_set@@Base+0xf8>
   16a78:	b	1680c <table_set@@Base+0xac>
   16a7c:	mov	r0, #8
   16a80:	bl	12990 <malloc@plt>
   16a84:	cmp	r0, #0
   16a88:	str	r0, [r8]
   16a8c:	bne	168d4 <table_set@@Base+0x174>
   16a90:	b	1680c <table_set@@Base+0xac>
   16a94:	mov	r0, #2
   16a98:	bl	12990 <malloc@plt>
   16a9c:	cmp	r0, #0
   16aa0:	str	r0, [r8]
   16aa4:	bne	16964 <table_set@@Base+0x204>
   16aa8:	b	1680c <table_set@@Base+0xac>

00016aac <table_set_bool@@Base>:
   16aac:	push	{r4, r5, r6, r7, r8, lr}
   16ab0:	mov	r5, r2
   16ab4:	mov	r4, r0
   16ab8:	mov	r8, r3
   16abc:	mov	r7, r1
   16ac0:	bl	180ec <table_get_cell_ptr@@Base>
   16ac4:	mov	r1, r5
   16ac8:	mov	r6, r0
   16acc:	mov	r0, r4
   16ad0:	bl	13a60 <table_get_col_ptr@@Base>
   16ad4:	ldr	r2, [r0, #4]
   16ad8:	cmp	r2, #22
   16adc:	bne	16b20 <table_set_bool@@Base+0x74>
   16ae0:	ldr	r0, [r6]
   16ae4:	cmp	r0, #0
   16ae8:	beq	16b0c <table_set_bool@@Base+0x60>
   16aec:	strb	r8, [r0]
   16af0:	mov	r2, r5
   16af4:	mov	r0, r4
   16af8:	mov	r1, r7
   16afc:	mov	r3, #1
   16b00:	bl	13624 <table_notify@@Base>
   16b04:	mov	r0, #0
   16b08:	pop	{r4, r5, r6, r7, r8, pc}
   16b0c:	mov	r0, #1
   16b10:	bl	12990 <malloc@plt>
   16b14:	cmp	r0, #0
   16b18:	str	r0, [r6]
   16b1c:	bne	16aec <table_set_bool@@Base+0x40>
   16b20:	mvn	r0, #0
   16b24:	pop	{r4, r5, r6, r7, r8, pc}

00016b28 <table_set_int@@Base>:
   16b28:	push	{r4, r5, r6, r7, r8, lr}
   16b2c:	mov	r5, r2
   16b30:	mov	r4, r0
   16b34:	mov	r8, r3
   16b38:	mov	r7, r1
   16b3c:	bl	180ec <table_get_cell_ptr@@Base>
   16b40:	mov	r1, r5
   16b44:	mov	r6, r0
   16b48:	mov	r0, r4
   16b4c:	bl	13a60 <table_get_col_ptr@@Base>
   16b50:	ldr	r2, [r0, #4]
   16b54:	cmp	r2, #0
   16b58:	bne	16b9c <table_set_int@@Base+0x74>
   16b5c:	ldr	r0, [r6]
   16b60:	cmp	r0, #0
   16b64:	beq	16b88 <table_set_int@@Base+0x60>
   16b68:	str	r8, [r0]
   16b6c:	mov	r2, r5
   16b70:	mov	r0, r4
   16b74:	mov	r1, r7
   16b78:	mov	r3, #1
   16b7c:	bl	13624 <table_notify@@Base>
   16b80:	mov	r0, #0
   16b84:	pop	{r4, r5, r6, r7, r8, pc}
   16b88:	mov	r0, #4
   16b8c:	bl	12990 <malloc@plt>
   16b90:	cmp	r0, #0
   16b94:	str	r0, [r6]
   16b98:	bne	16b68 <table_set_int@@Base+0x40>
   16b9c:	mvn	r0, #0
   16ba0:	pop	{r4, r5, r6, r7, r8, pc}

00016ba4 <table_set_uint@@Base>:
   16ba4:	push	{r4, r5, r6, r7, r8, lr}
   16ba8:	mov	r5, r2
   16bac:	mov	r4, r0
   16bb0:	mov	r8, r3
   16bb4:	mov	r7, r1
   16bb8:	bl	180ec <table_get_cell_ptr@@Base>
   16bbc:	mov	r1, r5
   16bc0:	mov	r6, r0
   16bc4:	mov	r0, r4
   16bc8:	bl	13a60 <table_get_col_ptr@@Base>
   16bcc:	ldr	r2, [r0, #4]
   16bd0:	cmp	r2, #1
   16bd4:	bne	16c18 <table_set_uint@@Base+0x74>
   16bd8:	ldr	r0, [r6]
   16bdc:	cmp	r0, #0
   16be0:	beq	16c04 <table_set_uint@@Base+0x60>
   16be4:	str	r8, [r0]
   16be8:	mov	r2, r5
   16bec:	mov	r0, r4
   16bf0:	mov	r1, r7
   16bf4:	mov	r3, #1
   16bf8:	bl	13624 <table_notify@@Base>
   16bfc:	mov	r0, #0
   16c00:	pop	{r4, r5, r6, r7, r8, pc}
   16c04:	mov	r0, #4
   16c08:	bl	12990 <malloc@plt>
   16c0c:	cmp	r0, #0
   16c10:	str	r0, [r6]
   16c14:	bne	16be4 <table_set_uint@@Base+0x40>
   16c18:	mvn	r0, #0
   16c1c:	pop	{r4, r5, r6, r7, r8, pc}

00016c20 <table_set_int8@@Base>:
   16c20:	push	{r4, r5, r6, r7, r8, lr}
   16c24:	mov	r5, r2
   16c28:	mov	r4, r0
   16c2c:	mov	r8, r3
   16c30:	mov	r7, r1
   16c34:	bl	180ec <table_get_cell_ptr@@Base>
   16c38:	mov	r1, r5
   16c3c:	mov	r6, r0
   16c40:	mov	r0, r4
   16c44:	bl	13a60 <table_get_col_ptr@@Base>
   16c48:	ldr	r2, [r0, #4]
   16c4c:	cmp	r2, #2
   16c50:	bne	16c94 <table_set_int8@@Base+0x74>
   16c54:	ldr	r0, [r6]
   16c58:	cmp	r0, #0
   16c5c:	beq	16c80 <table_set_int8@@Base+0x60>
   16c60:	strb	r8, [r0]
   16c64:	mov	r2, r5
   16c68:	mov	r0, r4
   16c6c:	mov	r1, r7
   16c70:	mov	r3, #1
   16c74:	bl	13624 <table_notify@@Base>
   16c78:	mov	r0, #0
   16c7c:	pop	{r4, r5, r6, r7, r8, pc}
   16c80:	mov	r0, #1
   16c84:	bl	12990 <malloc@plt>
   16c88:	cmp	r0, #0
   16c8c:	str	r0, [r6]
   16c90:	bne	16c60 <table_set_int8@@Base+0x40>
   16c94:	mvn	r0, #0
   16c98:	pop	{r4, r5, r6, r7, r8, pc}

00016c9c <table_set_uint8@@Base>:
   16c9c:	push	{r4, r5, r6, r7, r8, lr}
   16ca0:	mov	r5, r2
   16ca4:	mov	r4, r0
   16ca8:	mov	r8, r3
   16cac:	mov	r7, r1
   16cb0:	bl	180ec <table_get_cell_ptr@@Base>
   16cb4:	mov	r1, r5
   16cb8:	mov	r6, r0
   16cbc:	mov	r0, r4
   16cc0:	bl	13a60 <table_get_col_ptr@@Base>
   16cc4:	ldr	r2, [r0, #4]
   16cc8:	cmp	r2, #3
   16ccc:	bne	16d10 <table_set_uint8@@Base+0x74>
   16cd0:	ldr	r0, [r6]
   16cd4:	cmp	r0, #0
   16cd8:	beq	16cfc <table_set_uint8@@Base+0x60>
   16cdc:	strb	r8, [r0]
   16ce0:	mov	r2, r5
   16ce4:	mov	r0, r4
   16ce8:	mov	r1, r7
   16cec:	mov	r3, #1
   16cf0:	bl	13624 <table_notify@@Base>
   16cf4:	mov	r0, #0
   16cf8:	pop	{r4, r5, r6, r7, r8, pc}
   16cfc:	mov	r0, #1
   16d00:	bl	12990 <malloc@plt>
   16d04:	cmp	r0, #0
   16d08:	str	r0, [r6]
   16d0c:	bne	16cdc <table_set_uint8@@Base+0x40>
   16d10:	mvn	r0, #0
   16d14:	pop	{r4, r5, r6, r7, r8, pc}

00016d18 <table_set_int16@@Base>:
   16d18:	push	{r4, r5, r6, r7, r8, lr}
   16d1c:	mov	r5, r2
   16d20:	mov	r4, r0
   16d24:	mov	r8, r3
   16d28:	mov	r7, r1
   16d2c:	bl	180ec <table_get_cell_ptr@@Base>
   16d30:	mov	r1, r5
   16d34:	mov	r6, r0
   16d38:	mov	r0, r4
   16d3c:	bl	13a60 <table_get_col_ptr@@Base>
   16d40:	ldr	r2, [r0, #4]
   16d44:	cmp	r2, #4
   16d48:	bne	16d8c <table_set_int16@@Base+0x74>
   16d4c:	ldr	r0, [r6]
   16d50:	cmp	r0, #0
   16d54:	beq	16d78 <table_set_int16@@Base+0x60>
   16d58:	strh	r8, [r0]
   16d5c:	mov	r2, r5
   16d60:	mov	r0, r4
   16d64:	mov	r1, r7
   16d68:	mov	r3, #1
   16d6c:	bl	13624 <table_notify@@Base>
   16d70:	mov	r0, #0
   16d74:	pop	{r4, r5, r6, r7, r8, pc}
   16d78:	mov	r0, #2
   16d7c:	bl	12990 <malloc@plt>
   16d80:	cmp	r0, #0
   16d84:	str	r0, [r6]
   16d88:	bne	16d58 <table_set_int16@@Base+0x40>
   16d8c:	mvn	r0, #0
   16d90:	pop	{r4, r5, r6, r7, r8, pc}

00016d94 <table_set_uint16@@Base>:
   16d94:	push	{r4, r5, r6, r7, r8, lr}
   16d98:	mov	r5, r2
   16d9c:	mov	r4, r0
   16da0:	mov	r8, r3
   16da4:	mov	r7, r1
   16da8:	bl	180ec <table_get_cell_ptr@@Base>
   16dac:	mov	r1, r5
   16db0:	mov	r6, r0
   16db4:	mov	r0, r4
   16db8:	bl	13a60 <table_get_col_ptr@@Base>
   16dbc:	ldr	r2, [r0, #4]
   16dc0:	cmp	r2, #5
   16dc4:	bne	16e08 <table_set_uint16@@Base+0x74>
   16dc8:	ldr	r0, [r6]
   16dcc:	cmp	r0, #0
   16dd0:	beq	16df4 <table_set_uint16@@Base+0x60>
   16dd4:	strh	r8, [r0]
   16dd8:	mov	r2, r5
   16ddc:	mov	r0, r4
   16de0:	mov	r1, r7
   16de4:	mov	r3, #1
   16de8:	bl	13624 <table_notify@@Base>
   16dec:	mov	r0, #0
   16df0:	pop	{r4, r5, r6, r7, r8, pc}
   16df4:	mov	r0, #2
   16df8:	bl	12990 <malloc@plt>
   16dfc:	cmp	r0, #0
   16e00:	str	r0, [r6]
   16e04:	bne	16dd4 <table_set_uint16@@Base+0x40>
   16e08:	mvn	r0, #0
   16e0c:	pop	{r4, r5, r6, r7, r8, pc}

00016e10 <table_set_int32@@Base>:
   16e10:	push	{r4, r5, r6, r7, r8, lr}
   16e14:	mov	r5, r2
   16e18:	mov	r4, r0
   16e1c:	mov	r8, r3
   16e20:	mov	r7, r1
   16e24:	bl	180ec <table_get_cell_ptr@@Base>
   16e28:	mov	r1, r5
   16e2c:	mov	r6, r0
   16e30:	mov	r0, r4
   16e34:	bl	13a60 <table_get_col_ptr@@Base>
   16e38:	ldr	r2, [r0, #4]
   16e3c:	cmp	r2, #6
   16e40:	bne	16e84 <table_set_int32@@Base+0x74>
   16e44:	ldr	r0, [r6]
   16e48:	cmp	r0, #0
   16e4c:	beq	16e70 <table_set_int32@@Base+0x60>
   16e50:	str	r8, [r0]
   16e54:	mov	r2, r5
   16e58:	mov	r0, r4
   16e5c:	mov	r1, r7
   16e60:	mov	r3, #1
   16e64:	bl	13624 <table_notify@@Base>
   16e68:	mov	r0, #0
   16e6c:	pop	{r4, r5, r6, r7, r8, pc}
   16e70:	mov	r0, #4
   16e74:	bl	12990 <malloc@plt>
   16e78:	cmp	r0, #0
   16e7c:	str	r0, [r6]
   16e80:	bne	16e50 <table_set_int32@@Base+0x40>
   16e84:	mvn	r0, #0
   16e88:	pop	{r4, r5, r6, r7, r8, pc}

00016e8c <table_set_uint32@@Base>:
   16e8c:	push	{r4, r5, r6, r7, r8, lr}
   16e90:	mov	r5, r2
   16e94:	mov	r4, r0
   16e98:	mov	r8, r3
   16e9c:	mov	r7, r1
   16ea0:	bl	180ec <table_get_cell_ptr@@Base>
   16ea4:	mov	r1, r5
   16ea8:	mov	r6, r0
   16eac:	mov	r0, r4
   16eb0:	bl	13a60 <table_get_col_ptr@@Base>
   16eb4:	ldr	r2, [r0, #4]
   16eb8:	cmp	r2, #7
   16ebc:	bne	16f00 <table_set_uint32@@Base+0x74>
   16ec0:	ldr	r0, [r6]
   16ec4:	cmp	r0, #0
   16ec8:	beq	16eec <table_set_uint32@@Base+0x60>
   16ecc:	str	r8, [r0]
   16ed0:	mov	r2, r5
   16ed4:	mov	r0, r4
   16ed8:	mov	r1, r7
   16edc:	mov	r3, #1
   16ee0:	bl	13624 <table_notify@@Base>
   16ee4:	mov	r0, #0
   16ee8:	pop	{r4, r5, r6, r7, r8, pc}
   16eec:	mov	r0, #4
   16ef0:	bl	12990 <malloc@plt>
   16ef4:	cmp	r0, #0
   16ef8:	str	r0, [r6]
   16efc:	bne	16ecc <table_set_uint32@@Base+0x40>
   16f00:	mvn	r0, #0
   16f04:	pop	{r4, r5, r6, r7, r8, pc}

00016f08 <table_set_int64@@Base>:
   16f08:	push	{r4, r5, r6, r7, r8, lr}
   16f0c:	mov	r5, r2
   16f10:	mov	r4, r0
   16f14:	mov	r7, r1
   16f18:	bl	180ec <table_get_cell_ptr@@Base>
   16f1c:	mov	r1, r5
   16f20:	mov	r6, r0
   16f24:	mov	r0, r4
   16f28:	bl	13a60 <table_get_col_ptr@@Base>
   16f2c:	ldr	r0, [r0, #4]
   16f30:	cmp	r0, #8
   16f34:	bne	16f84 <table_set_int64@@Base+0x7c>
   16f38:	ldr	ip, [r6]
   16f3c:	cmp	ip, #0
   16f40:	beq	16f70 <table_set_int64@@Base+0x68>
   16f44:	add	r3, sp, #24
   16f48:	mov	r2, r5
   16f4c:	ldm	r3!, {r0, r1}
   16f50:	mov	r3, #1
   16f54:	str	r0, [ip]
   16f58:	str	r1, [ip, #4]
   16f5c:	mov	r0, r4
   16f60:	mov	r1, r7
   16f64:	bl	13624 <table_notify@@Base>
   16f68:	mov	r0, #0
   16f6c:	pop	{r4, r5, r6, r7, r8, pc}
   16f70:	bl	12990 <malloc@plt>
   16f74:	cmp	r0, #0
   16f78:	mov	ip, r0
   16f7c:	str	r0, [r6]
   16f80:	bne	16f44 <table_set_int64@@Base+0x3c>
   16f84:	mvn	r0, #0
   16f88:	pop	{r4, r5, r6, r7, r8, pc}

00016f8c <table_set_uint64@@Base>:
   16f8c:	push	{r4, r5, r6, r7, r8, lr}
   16f90:	mov	r5, r2
   16f94:	mov	r4, r0
   16f98:	mov	r7, r1
   16f9c:	bl	180ec <table_get_cell_ptr@@Base>
   16fa0:	mov	r1, r5
   16fa4:	mov	r6, r0
   16fa8:	mov	r0, r4
   16fac:	bl	13a60 <table_get_col_ptr@@Base>
   16fb0:	ldr	r3, [r0, #4]
   16fb4:	cmp	r3, #9
   16fb8:	bne	1700c <table_set_uint64@@Base+0x80>
   16fbc:	ldr	ip, [r6]
   16fc0:	cmp	ip, #0
   16fc4:	beq	16ff4 <table_set_uint64@@Base+0x68>
   16fc8:	add	r3, sp, #24
   16fcc:	mov	r2, r5
   16fd0:	ldm	r3!, {r0, r1}
   16fd4:	mov	r3, #1
   16fd8:	str	r0, [ip]
   16fdc:	str	r1, [ip, #4]
   16fe0:	mov	r0, r4
   16fe4:	mov	r1, r7
   16fe8:	bl	13624 <table_notify@@Base>
   16fec:	mov	r0, #0
   16ff0:	pop	{r4, r5, r6, r7, r8, pc}
   16ff4:	mov	r0, #8
   16ff8:	bl	12990 <malloc@plt>
   16ffc:	cmp	r0, #0
   17000:	mov	ip, r0
   17004:	str	r0, [r6]
   17008:	bne	16fc8 <table_set_uint64@@Base+0x3c>
   1700c:	mvn	r0, #0
   17010:	pop	{r4, r5, r6, r7, r8, pc}

00017014 <table_set_short@@Base>:
   17014:	push	{r4, r5, r6, r7, r8, lr}
   17018:	mov	r5, r2
   1701c:	mov	r4, r0
   17020:	mov	r8, r3
   17024:	mov	r7, r1
   17028:	bl	180ec <table_get_cell_ptr@@Base>
   1702c:	mov	r1, r5
   17030:	mov	r6, r0
   17034:	mov	r0, r4
   17038:	bl	13a60 <table_get_col_ptr@@Base>
   1703c:	ldr	r2, [r0, #4]
   17040:	cmp	r2, #10
   17044:	bne	17088 <table_set_short@@Base+0x74>
   17048:	ldr	r0, [r6]
   1704c:	cmp	r0, #0
   17050:	beq	17074 <table_set_short@@Base+0x60>
   17054:	strh	r8, [r0]
   17058:	mov	r2, r5
   1705c:	mov	r0, r4
   17060:	mov	r1, r7
   17064:	mov	r3, #1
   17068:	bl	13624 <table_notify@@Base>
   1706c:	mov	r0, #0
   17070:	pop	{r4, r5, r6, r7, r8, pc}
   17074:	mov	r0, #2
   17078:	bl	12990 <malloc@plt>
   1707c:	cmp	r0, #0
   17080:	str	r0, [r6]
   17084:	bne	17054 <table_set_short@@Base+0x40>
   17088:	mvn	r0, #0
   1708c:	pop	{r4, r5, r6, r7, r8, pc}

00017090 <table_set_ushort@@Base>:
   17090:	push	{r4, r5, r6, r7, r8, lr}
   17094:	mov	r5, r2
   17098:	mov	r4, r0
   1709c:	mov	r8, r3
   170a0:	mov	r7, r1
   170a4:	bl	180ec <table_get_cell_ptr@@Base>
   170a8:	mov	r1, r5
   170ac:	mov	r6, r0
   170b0:	mov	r0, r4
   170b4:	bl	13a60 <table_get_col_ptr@@Base>
   170b8:	ldr	r2, [r0, #4]
   170bc:	cmp	r2, #11
   170c0:	bne	17104 <table_set_ushort@@Base+0x74>
   170c4:	ldr	r0, [r6]
   170c8:	cmp	r0, #0
   170cc:	beq	170f0 <table_set_ushort@@Base+0x60>
   170d0:	strh	r8, [r0]
   170d4:	mov	r2, r5
   170d8:	mov	r0, r4
   170dc:	mov	r1, r7
   170e0:	mov	r3, #1
   170e4:	bl	13624 <table_notify@@Base>
   170e8:	mov	r0, #0
   170ec:	pop	{r4, r5, r6, r7, r8, pc}
   170f0:	mov	r0, #2
   170f4:	bl	12990 <malloc@plt>
   170f8:	cmp	r0, #0
   170fc:	str	r0, [r6]
   17100:	bne	170d0 <table_set_ushort@@Base+0x40>
   17104:	mvn	r0, #0
   17108:	pop	{r4, r5, r6, r7, r8, pc}

0001710c <table_set_long@@Base>:
   1710c:	push	{r4, r5, r6, r7, r8, lr}
   17110:	mov	r5, r2
   17114:	mov	r4, r0
   17118:	mov	r8, r3
   1711c:	mov	r7, r1
   17120:	bl	180ec <table_get_cell_ptr@@Base>
   17124:	mov	r1, r5
   17128:	mov	r6, r0
   1712c:	mov	r0, r4
   17130:	bl	13a60 <table_get_col_ptr@@Base>
   17134:	ldr	r2, [r0, #4]
   17138:	cmp	r2, #12
   1713c:	bne	17180 <table_set_long@@Base+0x74>
   17140:	ldr	r0, [r6]
   17144:	cmp	r0, #0
   17148:	beq	1716c <table_set_long@@Base+0x60>
   1714c:	str	r8, [r0]
   17150:	mov	r2, r5
   17154:	mov	r0, r4
   17158:	mov	r1, r7
   1715c:	mov	r3, #1
   17160:	bl	13624 <table_notify@@Base>
   17164:	mov	r0, #0
   17168:	pop	{r4, r5, r6, r7, r8, pc}
   1716c:	mov	r0, #4
   17170:	bl	12990 <malloc@plt>
   17174:	cmp	r0, #0
   17178:	str	r0, [r6]
   1717c:	bne	1714c <table_set_long@@Base+0x40>
   17180:	mvn	r0, #0
   17184:	pop	{r4, r5, r6, r7, r8, pc}

00017188 <table_set_ulong@@Base>:
   17188:	push	{r4, r5, r6, r7, r8, lr}
   1718c:	mov	r5, r2
   17190:	mov	r4, r0
   17194:	mov	r8, r3
   17198:	mov	r7, r1
   1719c:	bl	180ec <table_get_cell_ptr@@Base>
   171a0:	mov	r1, r5
   171a4:	mov	r6, r0
   171a8:	mov	r0, r4
   171ac:	bl	13a60 <table_get_col_ptr@@Base>
   171b0:	ldr	r2, [r0, #4]
   171b4:	cmp	r2, #13
   171b8:	bne	171fc <table_set_ulong@@Base+0x74>
   171bc:	ldr	r0, [r6]
   171c0:	cmp	r0, #0
   171c4:	beq	171e8 <table_set_ulong@@Base+0x60>
   171c8:	str	r8, [r0]
   171cc:	mov	r2, r5
   171d0:	mov	r0, r4
   171d4:	mov	r1, r7
   171d8:	mov	r3, #1
   171dc:	bl	13624 <table_notify@@Base>
   171e0:	mov	r0, #0
   171e4:	pop	{r4, r5, r6, r7, r8, pc}
   171e8:	mov	r0, #4
   171ec:	bl	12990 <malloc@plt>
   171f0:	cmp	r0, #0
   171f4:	str	r0, [r6]
   171f8:	bne	171c8 <table_set_ulong@@Base+0x40>
   171fc:	mvn	r0, #0
   17200:	pop	{r4, r5, r6, r7, r8, pc}

00017204 <table_set_llong@@Base>:
   17204:	push	{r4, r5, r6, r7, r8, lr}
   17208:	mov	r5, r2
   1720c:	mov	r4, r0
   17210:	mov	r7, r1
   17214:	bl	180ec <table_get_cell_ptr@@Base>
   17218:	mov	r1, r5
   1721c:	mov	r6, r0
   17220:	mov	r0, r4
   17224:	bl	13a60 <table_get_col_ptr@@Base>
   17228:	ldr	r3, [r0, #4]
   1722c:	cmp	r3, #14
   17230:	bne	17284 <table_set_llong@@Base+0x80>
   17234:	ldr	ip, [r6]
   17238:	cmp	ip, #0
   1723c:	beq	1726c <table_set_llong@@Base+0x68>
   17240:	add	r3, sp, #24
   17244:	mov	r2, r5
   17248:	ldm	r3!, {r0, r1}
   1724c:	mov	r3, #1
   17250:	str	r0, [ip]
   17254:	str	r1, [ip, #4]
   17258:	mov	r0, r4
   1725c:	mov	r1, r7
   17260:	bl	13624 <table_notify@@Base>
   17264:	mov	r0, #0
   17268:	pop	{r4, r5, r6, r7, r8, pc}
   1726c:	mov	r0, #8
   17270:	bl	12990 <malloc@plt>
   17274:	cmp	r0, #0
   17278:	mov	ip, r0
   1727c:	str	r0, [r6]
   17280:	bne	17240 <table_set_llong@@Base+0x3c>
   17284:	mvn	r0, #0
   17288:	pop	{r4, r5, r6, r7, r8, pc}

0001728c <table_set_ullong@@Base>:
   1728c:	push	{r4, r5, r6, r7, r8, lr}
   17290:	mov	r5, r2
   17294:	mov	r4, r0
   17298:	mov	r7, r1
   1729c:	bl	180ec <table_get_cell_ptr@@Base>
   172a0:	mov	r1, r5
   172a4:	mov	r6, r0
   172a8:	mov	r0, r4
   172ac:	bl	13a60 <table_get_col_ptr@@Base>
   172b0:	ldr	r3, [r0, #4]
   172b4:	cmp	r3, #15
   172b8:	bne	1730c <table_set_ullong@@Base+0x80>
   172bc:	ldr	ip, [r6]
   172c0:	cmp	ip, #0
   172c4:	beq	172f4 <table_set_ullong@@Base+0x68>
   172c8:	add	r3, sp, #24
   172cc:	mov	r2, r5
   172d0:	ldm	r3!, {r0, r1}
   172d4:	mov	r3, #1
   172d8:	str	r0, [ip]
   172dc:	str	r1, [ip, #4]
   172e0:	mov	r0, r4
   172e4:	mov	r1, r7
   172e8:	bl	13624 <table_notify@@Base>
   172ec:	mov	r0, #0
   172f0:	pop	{r4, r5, r6, r7, r8, pc}
   172f4:	mov	r0, #8
   172f8:	bl	12990 <malloc@plt>
   172fc:	cmp	r0, #0
   17300:	mov	ip, r0
   17304:	str	r0, [r6]
   17308:	bne	172c8 <table_set_ullong@@Base+0x3c>
   1730c:	mvn	r0, #0
   17310:	pop	{r4, r5, r6, r7, r8, pc}

00017314 <table_set_float@@Base>:
   17314:	push	{r4, r5, r6, r7, r8, lr}
   17318:	mov	r5, r2
   1731c:	mov	r4, r0
   17320:	mov	r7, r1
   17324:	vmov	r8, s0
   17328:	bl	180ec <table_get_cell_ptr@@Base>
   1732c:	mov	r1, r5
   17330:	mov	r6, r0
   17334:	mov	r0, r4
   17338:	bl	13a60 <table_get_col_ptr@@Base>
   1733c:	ldr	r3, [r0, #4]
   17340:	cmp	r3, #16
   17344:	bne	17388 <table_set_float@@Base+0x74>
   17348:	ldr	r0, [r6]
   1734c:	cmp	r0, #0
   17350:	beq	17374 <table_set_float@@Base+0x60>
   17354:	str	r8, [r0]
   17358:	mov	r2, r5
   1735c:	mov	r0, r4
   17360:	mov	r1, r7
   17364:	mov	r3, #1
   17368:	bl	13624 <table_notify@@Base>
   1736c:	mov	r0, #0
   17370:	pop	{r4, r5, r6, r7, r8, pc}
   17374:	mov	r0, #4
   17378:	bl	12990 <malloc@plt>
   1737c:	cmp	r0, #0
   17380:	str	r0, [r6]
   17384:	bne	17354 <table_set_float@@Base+0x40>
   17388:	mvn	r0, #0
   1738c:	pop	{r4, r5, r6, r7, r8, pc}

00017390 <table_set_double@@Base>:
   17390:	push	{r4, r5, r6, r7, lr}
   17394:	sub	sp, sp, #12
   17398:	mov	r5, r2
   1739c:	mov	r4, r0
   173a0:	vstr	d0, [sp]
   173a4:	mov	r7, r1
   173a8:	bl	180ec <table_get_cell_ptr@@Base>
   173ac:	mov	r1, r5
   173b0:	mov	r6, r0
   173b4:	mov	r0, r4
   173b8:	bl	13a60 <table_get_col_ptr@@Base>
   173bc:	ldr	r3, [r0, #4]
   173c0:	cmp	r3, #17
   173c4:	bne	1741c <table_set_double@@Base+0x8c>
   173c8:	ldr	ip, [r6]
   173cc:	cmp	ip, #0
   173d0:	beq	17404 <table_set_double@@Base+0x74>
   173d4:	mov	r3, sp
   173d8:	mov	r2, r5
   173dc:	ldm	r3!, {r0, r1}
   173e0:	mov	r3, #1
   173e4:	str	r0, [ip]
   173e8:	str	r1, [ip, #4]
   173ec:	mov	r0, r4
   173f0:	mov	r1, r7
   173f4:	bl	13624 <table_notify@@Base>
   173f8:	mov	r0, #0
   173fc:	add	sp, sp, #12
   17400:	pop	{r4, r5, r6, r7, pc}
   17404:	mov	r0, #8
   17408:	bl	12990 <malloc@plt>
   1740c:	cmp	r0, #0
   17410:	mov	ip, r0
   17414:	str	r0, [r6]
   17418:	bne	173d4 <table_set_double@@Base+0x44>
   1741c:	mvn	r0, #0
   17420:	add	sp, sp, #12
   17424:	pop	{r4, r5, r6, r7, pc}

00017428 <table_set_ldouble@@Base>:
   17428:	push	{r4, r5, r6, r7, lr}
   1742c:	sub	sp, sp, #12
   17430:	mov	r5, r2
   17434:	mov	r4, r0
   17438:	vstr	d0, [sp]
   1743c:	mov	r7, r1
   17440:	bl	180ec <table_get_cell_ptr@@Base>
   17444:	mov	r1, r5
   17448:	mov	r6, r0
   1744c:	mov	r0, r4
   17450:	bl	13a60 <table_get_col_ptr@@Base>
   17454:	ldr	r3, [r0, #4]
   17458:	cmp	r3, #18
   1745c:	bne	174b4 <table_set_ldouble@@Base+0x8c>
   17460:	ldr	ip, [r6]
   17464:	cmp	ip, #0
   17468:	beq	1749c <table_set_ldouble@@Base+0x74>
   1746c:	mov	r3, sp
   17470:	mov	r2, r5
   17474:	ldm	r3!, {r0, r1}
   17478:	mov	r3, #1
   1747c:	str	r0, [ip]
   17480:	str	r1, [ip, #4]
   17484:	mov	r0, r4
   17488:	mov	r1, r7
   1748c:	bl	13624 <table_notify@@Base>
   17490:	mov	r0, #0
   17494:	add	sp, sp, #12
   17498:	pop	{r4, r5, r6, r7, pc}
   1749c:	mov	r0, #8
   174a0:	bl	12990 <malloc@plt>
   174a4:	cmp	r0, #0
   174a8:	mov	ip, r0
   174ac:	str	r0, [r6]
   174b0:	bne	1746c <table_set_ldouble@@Base+0x44>
   174b4:	mvn	r0, #0
   174b8:	add	sp, sp, #12
   174bc:	pop	{r4, r5, r6, r7, pc}

000174c0 <table_set_string@@Base>:
   174c0:	push	{r4, r5, r6, r7, r8, lr}
   174c4:	mov	r5, r2
   174c8:	mov	r7, r3
   174cc:	mov	r4, r0
   174d0:	mov	r8, r1
   174d4:	bl	180ec <table_get_cell_ptr@@Base>
   174d8:	mov	r1, r5
   174dc:	mov	r6, r0
   174e0:	mov	r0, r4
   174e4:	bl	13a60 <table_get_col_ptr@@Base>
   174e8:	ldr	r3, [r0, #4]
   174ec:	cmp	r3, #21
   174f0:	bne	17538 <table_set_string@@Base+0x78>
   174f4:	mov	r0, r7
   174f8:	bl	129b4 <strlen@plt>
   174fc:	add	r1, r0, #1
   17500:	ldr	r0, [r6]
   17504:	bl	12978 <realloc@plt>
   17508:	cmp	r0, #0
   1750c:	str	r0, [r6]
   17510:	beq	17538 <table_set_string@@Base+0x78>
   17514:	mov	r1, r7
   17518:	bl	12984 <strcpy@plt>
   1751c:	mov	r0, r4
   17520:	mov	r2, r5
   17524:	mov	r1, r8
   17528:	mov	r3, #1
   1752c:	bl	13624 <table_notify@@Base>
   17530:	mov	r0, #0
   17534:	pop	{r4, r5, r6, r7, r8, pc}
   17538:	mvn	r0, #0
   1753c:	pop	{r4, r5, r6, r7, r8, pc}

00017540 <table_set_char@@Base>:
   17540:	push	{r4, r5, r6, r7, r8, lr}
   17544:	mov	r5, r2
   17548:	mov	r4, r0
   1754c:	mov	r8, r3
   17550:	mov	r7, r1
   17554:	bl	180ec <table_get_cell_ptr@@Base>
   17558:	mov	r1, r5
   1755c:	mov	r6, r0
   17560:	mov	r0, r4
   17564:	bl	13a60 <table_get_col_ptr@@Base>
   17568:	ldr	r2, [r0, #4]
   1756c:	cmp	r2, #19
   17570:	bne	175b4 <table_set_char@@Base+0x74>
   17574:	ldr	r0, [r6]
   17578:	cmp	r0, #0
   1757c:	beq	175a0 <table_set_char@@Base+0x60>
   17580:	strb	r8, [r0]
   17584:	mov	r2, r5
   17588:	mov	r0, r4
   1758c:	mov	r1, r7
   17590:	mov	r3, #1
   17594:	bl	13624 <table_notify@@Base>
   17598:	mov	r0, #0
   1759c:	pop	{r4, r5, r6, r7, r8, pc}
   175a0:	mov	r0, #1
   175a4:	bl	12990 <malloc@plt>
   175a8:	cmp	r0, #0
   175ac:	str	r0, [r6]
   175b0:	bne	17580 <table_set_char@@Base+0x40>
   175b4:	mvn	r0, #0
   175b8:	pop	{r4, r5, r6, r7, r8, pc}

000175bc <table_set_uchar@@Base>:
   175bc:	push	{r4, r5, r6, r7, r8, lr}
   175c0:	mov	r5, r2
   175c4:	mov	r4, r0
   175c8:	mov	r8, r3
   175cc:	mov	r7, r1
   175d0:	bl	180ec <table_get_cell_ptr@@Base>
   175d4:	mov	r1, r5
   175d8:	mov	r6, r0
   175dc:	mov	r0, r4
   175e0:	bl	13a60 <table_get_col_ptr@@Base>
   175e4:	ldr	r2, [r0, #4]
   175e8:	cmp	r2, #20
   175ec:	bne	17630 <table_set_uchar@@Base+0x74>
   175f0:	ldr	r0, [r6]
   175f4:	cmp	r0, #0
   175f8:	beq	1761c <table_set_uchar@@Base+0x60>
   175fc:	strb	r8, [r0]
   17600:	mov	r2, r5
   17604:	mov	r0, r4
   17608:	mov	r1, r7
   1760c:	mov	r3, #1
   17610:	bl	13624 <table_notify@@Base>
   17614:	mov	r0, #0
   17618:	pop	{r4, r5, r6, r7, r8, pc}
   1761c:	mov	r0, #1
   17620:	bl	12990 <malloc@plt>
   17624:	cmp	r0, #0
   17628:	str	r0, [r6]
   1762c:	bne	175fc <table_set_uchar@@Base+0x40>
   17630:	mvn	r0, #0
   17634:	pop	{r4, r5, r6, r7, r8, pc}

00017638 <table_set_ptr@@Base>:
   17638:	push	{r4, r5, r6, r7, r8, lr}
   1763c:	mov	r5, r2
   17640:	mov	r4, r0
   17644:	mov	r8, r3
   17648:	mov	r6, r1
   1764c:	bl	180ec <table_get_cell_ptr@@Base>
   17650:	mov	r1, r5
   17654:	mov	r7, r0
   17658:	mov	r0, r4
   1765c:	bl	13a60 <table_get_col_ptr@@Base>
   17660:	ldr	r2, [r0, #4]
   17664:	cmp	r2, #23
   17668:	bne	1768c <table_set_ptr@@Base+0x54>
   1766c:	mov	r0, r4
   17670:	str	r8, [r7]
   17674:	mov	r2, r5
   17678:	mov	r1, r6
   1767c:	mov	r3, #1
   17680:	bl	13624 <table_notify@@Base>
   17684:	mov	r0, #0
   17688:	pop	{r4, r5, r6, r7, r8, pc}
   1768c:	mvn	r0, #0
   17690:	pop	{r4, r5, r6, r7, r8, pc}

00017694 <table_cell_init@@Base>:
   17694:	push	{r4, lr}
   17698:	mov	r4, r2
   1769c:	bl	16744 <table_get_row_ptr@@Base>
   176a0:	mov	r2, #0
   176a4:	ldr	r3, [r0]
   176a8:	str	r2, [r3, r4, lsl #2]
   176ac:	pop	{r4, pc}

000176b0 <table_cell_destroy@@Base>:
   176b0:	push	{r4, r5, r6, lr}
   176b4:	mov	r6, r1
   176b8:	mov	r1, r2
   176bc:	mov	r4, r2
   176c0:	mov	r5, r0
   176c4:	bl	13784 <table_get_column_data_type@@Base>
   176c8:	cmp	r0, #23
   176cc:	popeq	{r4, r5, r6, pc}
   176d0:	mov	r1, r6
   176d4:	mov	r0, r5
   176d8:	bl	16744 <table_get_row_ptr@@Base>
   176dc:	ldr	r3, [r0]
   176e0:	ldr	r0, [r3, r4, lsl #2]
   176e4:	cmp	r0, #0
   176e8:	popeq	{r4, r5, r6, pc}
   176ec:	pop	{r4, r5, r6, lr}
   176f0:	b	1296c <free@plt>

000176f4 <table_cell_to_buffer@@Base>:
   176f4:	push	{r4, r5, r6, r7, lr}
   176f8:	mov	r7, r1
   176fc:	sub	sp, sp, #12
   17700:	mov	r1, r2
   17704:	mov	r4, r2
   17708:	mov	r5, r3
   1770c:	mov	r6, r0
   17710:	bl	13784 <table_get_column_data_type@@Base>
   17714:	cmp	r0, #23
   17718:	ldrls	pc, [pc, r0, lsl #2]
   1771c:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   17720:	andeq	r7, r1, r8, ror sl
   17724:	andeq	r7, r1, r4, ror #20
   17728:	andeq	r7, r1, r0, asr sl
   1772c:	andeq	r7, r1, ip, lsr sl
   17730:	andeq	r7, r1, r8, lsr #20
   17734:	andeq	r7, r1, r4, lsl sl
   17738:	andeq	r7, r1, r0, lsl #20
   1773c:	ldrdeq	r7, [r1], -r0
   17740:			; <UNDEFINED> instruction: 0x000179bc
   17744:	andeq	r7, r1, r8, lsr #19
   17748:	andeq	r7, r1, r0, lsl #19
   1774c:	andeq	r7, r1, r8, asr r9
   17750:	andeq	r7, r1, r0, lsr r9
   17754:	andeq	r7, r1, r8, lsl #18
   17758:	andeq	r7, r1, r0, ror #17
   1775c:			; <UNDEFINED> instruction: 0x000178b8
   17760:	andeq	r7, r1, ip, lsl #17
   17764:	andeq	r7, r1, r4, ror #16
   17768:	andeq	r7, r1, ip, lsr r8
   1776c:	andeq	r7, r1, r8, lsr #16
   17770:	andeq	r7, r1, r0, lsl #16
   17774:	ldrdeq	r7, [r1], -r8
   17778:	andeq	r7, r1, r0, lsl #15
   1777c:			; <UNDEFINED> instruction: 0x000177b0
   17780:	mov	r2, r4
   17784:	mov	r1, r7
   17788:	mov	r0, r6
   1778c:	bl	16340 <table_get_bool@@Base>
   17790:	mov	r3, r0
   17794:	ldr	r2, [pc, #752]	; 17a8c <table_cell_to_buffer@@Base+0x398>
   17798:	mov	r0, r5
   1779c:	ldr	r1, [sp, #32]
   177a0:	bl	129c0 <snprintf@plt>
   177a4:	mov	r0, #0
   177a8:	add	sp, sp, #12
   177ac:	pop	{r4, r5, r6, r7, pc}
   177b0:	mov	r2, r4
   177b4:	mov	r1, r7
   177b8:	mov	r0, r6
   177bc:	bl	16508 <table_get_ptr@@Base>
   177c0:	ldr	r2, [pc, #712]	; 17a90 <table_cell_to_buffer@@Base+0x39c>
   177c4:	ldr	r1, [sp, #32]
   177c8:	mov	r3, r0
   177cc:	mov	r0, r5
   177d0:	bl	129c0 <snprintf@plt>
   177d4:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   177d8:	mov	r2, r4
   177dc:	mov	r1, r7
   177e0:	mov	r0, r6
   177e4:	bl	164f8 <table_get_string@@Base>
   177e8:	ldr	r2, [pc, #676]	; 17a94 <table_cell_to_buffer@@Base+0x3a0>
   177ec:	ldr	r1, [sp, #32]
   177f0:	mov	r3, r0
   177f4:	mov	r0, r5
   177f8:	bl	129c0 <snprintf@plt>
   177fc:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   17800:	mov	r2, r4
   17804:	mov	r1, r7
   17808:	mov	r0, r6
   1780c:	bl	164e4 <table_get_uchar@@Base>
   17810:	mov	r3, r0
   17814:	ldr	r2, [pc, #636]	; 17a98 <table_cell_to_buffer@@Base+0x3a4>
   17818:	mov	r0, r5
   1781c:	ldr	r1, [sp, #32]
   17820:	bl	129c0 <snprintf@plt>
   17824:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   17828:	mov	r2, r4
   1782c:	mov	r1, r7
   17830:	mov	r0, r6
   17834:	bl	164d0 <table_get_char@@Base>
   17838:	b	17810 <table_cell_to_buffer@@Base+0x11c>
   1783c:	mov	r2, r4
   17840:	mov	r1, r7
   17844:	mov	r0, r6
   17848:	bl	164bc <table_get_ldouble@@Base>
   1784c:	mov	r0, r5
   17850:	ldr	r2, [pc, #580]	; 17a9c <table_cell_to_buffer@@Base+0x3a8>
   17854:	ldr	r1, [sp, #32]
   17858:	vstr	d0, [sp]
   1785c:	bl	129c0 <snprintf@plt>
   17860:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   17864:	mov	r2, r4
   17868:	mov	r1, r7
   1786c:	mov	r0, r6
   17870:	bl	164a8 <table_get_double@@Base>
   17874:	mov	r0, r5
   17878:	ldr	r2, [pc, #544]	; 17aa0 <table_cell_to_buffer@@Base+0x3ac>
   1787c:	ldr	r1, [sp, #32]
   17880:	vstr	d0, [sp]
   17884:	bl	129c0 <snprintf@plt>
   17888:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   1788c:	mov	r2, r4
   17890:	mov	r1, r7
   17894:	mov	r0, r6
   17898:	bl	16494 <table_get_float@@Base>
   1789c:	mov	r0, r5
   178a0:	ldr	r2, [pc, #508]	; 17aa4 <table_cell_to_buffer@@Base+0x3b0>
   178a4:	ldr	r1, [sp, #32]
   178a8:	vcvt.f64.f32	d0, s0
   178ac:	vstr	d0, [sp]
   178b0:	bl	129c0 <snprintf@plt>
   178b4:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   178b8:	mov	r2, r4
   178bc:	mov	r1, r7
   178c0:	mov	r0, r6
   178c4:	bl	16480 <table_get_ullong@@Base>
   178c8:	strd	r0, [sp]
   178cc:	ldr	r2, [pc, #468]	; 17aa8 <table_cell_to_buffer@@Base+0x3b4>
   178d0:	mov	r0, r5
   178d4:	ldr	r1, [sp, #32]
   178d8:	bl	129c0 <snprintf@plt>
   178dc:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   178e0:	mov	r2, r4
   178e4:	mov	r1, r7
   178e8:	mov	r0, r6
   178ec:	bl	1646c <table_get_llong@@Base>
   178f0:	strd	r0, [sp]
   178f4:	ldr	r2, [pc, #432]	; 17aac <table_cell_to_buffer@@Base+0x3b8>
   178f8:	mov	r0, r5
   178fc:	ldr	r1, [sp, #32]
   17900:	bl	129c0 <snprintf@plt>
   17904:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   17908:	mov	r2, r4
   1790c:	mov	r1, r7
   17910:	mov	r0, r6
   17914:	bl	16458 <table_get_ulong@@Base>
   17918:	ldr	r2, [pc, #400]	; 17ab0 <table_cell_to_buffer@@Base+0x3bc>
   1791c:	ldr	r1, [sp, #32]
   17920:	mov	r3, r0
   17924:	mov	r0, r5
   17928:	bl	129c0 <snprintf@plt>
   1792c:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   17930:	mov	r2, r4
   17934:	mov	r1, r7
   17938:	mov	r0, r6
   1793c:	bl	16444 <table_get_long@@Base>
   17940:	ldr	r2, [pc, #364]	; 17ab4 <table_cell_to_buffer@@Base+0x3c0>
   17944:	ldr	r1, [sp, #32]
   17948:	mov	r3, r0
   1794c:	mov	r0, r5
   17950:	bl	129c0 <snprintf@plt>
   17954:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   17958:	mov	r2, r4
   1795c:	mov	r1, r7
   17960:	mov	r0, r6
   17964:	bl	16430 <table_get_ushort@@Base>
   17968:	ldr	r2, [pc, #328]	; 17ab8 <table_cell_to_buffer@@Base+0x3c4>
   1796c:	ldr	r1, [sp, #32]
   17970:	mov	r3, r0
   17974:	mov	r0, r5
   17978:	bl	129c0 <snprintf@plt>
   1797c:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   17980:	mov	r2, r4
   17984:	mov	r1, r7
   17988:	mov	r0, r6
   1798c:	bl	1641c <table_get_short@@Base>
   17990:	ldr	r2, [pc, #292]	; 17abc <table_cell_to_buffer@@Base+0x3c8>
   17994:	ldr	r1, [sp, #32]
   17998:	mov	r3, r0
   1799c:	mov	r0, r5
   179a0:	bl	129c0 <snprintf@plt>
   179a4:	b	177a4 <table_cell_to_buffer@@Base+0xb0>
   179a8:	mov	r2, r4
   179ac:	mov	r1, r7
   179b0:	mov	r0, r6
   179b4:	bl	16408 <table_get_uint64@@Base>
   179b8:	b	178c8 <table_cell_to_buffer@@Base+0x1d4>
   179bc:	mov	r2, r4
   179c0:	mov	r1, r7
   179c4:	mov	r0, r6
   179c8:	bl	163f4 <table_get_int64@@Base>
   179cc:	b	178f0 <table_cell_to_buffer@@Base+0x1fc>
   179d0:	mov	r2, r4
   179d4:	mov	r1, r7
   179d8:	mov	r0, r6
   179dc:	bl	163e0 <table_get_uint32@@Base>
   179e0:	mov	r3, r0
   179e4:	ldr	r2, [pc, #212]	; 17ac0 <table_cell_to_buffer@@Base+0x3cc>
   179e8:	mov	r0, r5
   179ec:	ldr	r1, [sp, #32]
   179f0:	bl	129c0 <snprintf@plt>
   179f4:	mov	r0, #0
   179f8:	add	sp, sp, #12
   179fc:	pop	{r4, r5, r6, r7, pc}
   17a00:	mov	r2, r4
   17a04:	mov	r1, r7
   17a08:	mov	r0, r6
   17a0c:	bl	163cc <table_get_int32@@Base>
   17a10:	b	17790 <table_cell_to_buffer@@Base+0x9c>
   17a14:	mov	r2, r4
   17a18:	mov	r1, r7
   17a1c:	mov	r0, r6
   17a20:	bl	163b8 <table_get_uint16@@Base>
   17a24:	b	179e0 <table_cell_to_buffer@@Base+0x2ec>
   17a28:	mov	r2, r4
   17a2c:	mov	r1, r7
   17a30:	mov	r0, r6
   17a34:	bl	163a4 <table_get_int16@@Base>
   17a38:	b	17790 <table_cell_to_buffer@@Base+0x9c>
   17a3c:	mov	r2, r4
   17a40:	mov	r1, r7
   17a44:	mov	r0, r6
   17a48:	bl	16390 <table_get_uint8@@Base>
   17a4c:	b	179e0 <table_cell_to_buffer@@Base+0x2ec>
   17a50:	mov	r2, r4
   17a54:	mov	r1, r7
   17a58:	mov	r0, r6
   17a5c:	bl	1637c <table_get_int8@@Base>
   17a60:	b	17790 <table_cell_to_buffer@@Base+0x9c>
   17a64:	mov	r2, r4
   17a68:	mov	r1, r7
   17a6c:	mov	r0, r6
   17a70:	bl	16368 <table_get_uint@@Base>
   17a74:	b	179e0 <table_cell_to_buffer@@Base+0x2ec>
   17a78:	mov	r2, r4
   17a7c:	mov	r1, r7
   17a80:	mov	r0, r6
   17a84:	bl	16354 <table_get_int@@Base>
   17a88:	b	17790 <table_cell_to_buffer@@Base+0x9c>
   17a8c:	andeq	r8, r1, r4, lsl #8
   17a90:	andeq	r8, r1, r0, lsr #10
   17a94:	andeq	r8, r1, ip, lsl #10
   17a98:	andeq	r8, r1, ip, lsl r5
   17a9c:	andeq	r8, r1, r8, lsl r5
   17aa0:	andeq	r8, r1, r4, lsl r5
   17aa4:	andeq	r8, r1, r0, lsl r5
   17aa8:	strdeq	r8, [r1], -r4
   17aac:	andeq	r8, r1, ip, ror #9
   17ab0:	andeq	r8, r1, r8, lsl #10
   17ab4:	andeq	r8, r1, r4, lsl #10
   17ab8:	andeq	r8, r1, r0, lsl #10
   17abc:	strdeq	r8, [r1], -ip
   17ac0:	andeq	r8, r1, r8, ror #9

00017ac4 <table_cell_from_buffer@@Base>:
   17ac4:	push	{r4, r5, r6, r7, r8, lr}
   17ac8:	mov	r8, r1
   17acc:	sub	sp, sp, #264	; 0x108
   17ad0:	mov	r1, r2
   17ad4:	mov	r4, r2
   17ad8:	mov	r6, r3
   17adc:	mov	r5, r0
   17ae0:	bl	13784 <table_get_column_data_type@@Base>
   17ae4:	cmp	r0, #23
   17ae8:	ldrls	pc, [pc, r0, lsl #2]
   17aec:	b	18074 <table_cell_from_buffer@@Base+0x5b0>
   17af0:	andeq	r8, r1, ip
   17af4:	ldrdeq	r7, [r1], -r8
   17af8:	andeq	r7, r1, r4, lsr #31
   17afc:	andeq	r7, r1, r0, ror pc
   17b00:	andeq	r7, r1, ip, lsr pc
   17b04:	andeq	r7, r1, r8, lsl #30
   17b08:	ldrdeq	r7, [r1], -r4
   17b0c:	andeq	r7, r1, r0, lsr #29
   17b10:	andeq	r7, r1, r8, ror #28
   17b14:	andeq	r7, r1, r0, lsr lr
   17b18:	strdeq	r7, [r1], -ip
   17b1c:	andeq	r7, r1, r8, asr #27
   17b20:	muleq	r1, r4, sp
   17b24:	andeq	r7, r1, r0, ror #26
   17b28:	andeq	r7, r1, r8, lsr #26
   17b2c:	strdeq	r7, [r1], -r0
   17b30:	andeq	r7, r1, r8, lsl #25
   17b34:	andeq	r7, r1, r4, asr ip
   17b38:			; <UNDEFINED> instruction: 0x00017cbc
   17b3c:			; <UNDEFINED> instruction: 0x00017bb8
   17b40:	andeq	r7, r1, r0, lsr #24
   17b44:	andeq	r7, r1, ip, ror #23
   17b48:	andeq	r7, r1, r8, ror fp
   17b4c:	andeq	r7, r1, r0, asr fp
   17b50:	mov	r0, r6
   17b54:	add	r2, sp, #8
   17b58:	ldr	r1, [pc, #1308]	; 1807c <table_cell_from_buffer@@Base+0x5b8>
   17b5c:	bl	129cc <__isoc99_sscanf@plt>
   17b60:	cmp	r0, #1
   17b64:	beq	18058 <table_cell_from_buffer@@Base+0x594>
   17b68:	mvn	r6, #0
   17b6c:	mov	r0, r6
   17b70:	add	sp, sp, #264	; 0x108
   17b74:	pop	{r4, r5, r6, r7, r8, pc}
   17b78:	mov	r0, r6
   17b7c:	add	r2, sp, #8
   17b80:	ldr	r1, [pc, #1272]	; 18080 <table_cell_from_buffer@@Base+0x5bc>
   17b84:	bl	129cc <__isoc99_sscanf@plt>
   17b88:	cmp	r0, #1
   17b8c:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17b90:	ldr	r6, [sp, #8]
   17b94:	cmp	r6, #0
   17b98:	beq	18040 <table_cell_from_buffer@@Base+0x57c>
   17b9c:	mov	r3, r0
   17ba0:	mov	r2, r4
   17ba4:	mov	r1, r8
   17ba8:	mov	r0, r5
   17bac:	bl	16aac <table_set_bool@@Base>
   17bb0:	mov	r6, #0
   17bb4:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17bb8:	mov	r0, r6
   17bbc:	add	r2, sp, #8
   17bc0:	ldr	r1, [pc, #1212]	; 18084 <table_cell_from_buffer@@Base+0x5c0>
   17bc4:	bl	129cc <__isoc99_sscanf@plt>
   17bc8:	cmp	r0, #1
   17bcc:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17bd0:	mov	r2, r4
   17bd4:	mov	r1, r8
   17bd8:	mov	r0, r5
   17bdc:	ldrb	r3, [sp, #8]
   17be0:	bl	17540 <table_set_char@@Base>
   17be4:	mov	r6, #0
   17be8:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17bec:	mov	r0, r6
   17bf0:	add	r2, sp, #8
   17bf4:	ldr	r1, [pc, #1164]	; 18088 <table_cell_from_buffer@@Base+0x5c4>
   17bf8:	bl	129cc <__isoc99_sscanf@plt>
   17bfc:	cmp	r0, #1
   17c00:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17c04:	add	r3, sp, #8
   17c08:	mov	r2, r4
   17c0c:	mov	r1, r8
   17c10:	mov	r0, r5
   17c14:	bl	174c0 <table_set_string@@Base>
   17c18:	mov	r6, #0
   17c1c:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17c20:	mov	r0, r6
   17c24:	add	r2, sp, #8
   17c28:	ldr	r1, [pc, #1108]	; 18084 <table_cell_from_buffer@@Base+0x5c0>
   17c2c:	bl	129cc <__isoc99_sscanf@plt>
   17c30:	cmp	r0, #1
   17c34:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17c38:	mov	r2, r4
   17c3c:	mov	r1, r8
   17c40:	mov	r0, r5
   17c44:	ldrb	r3, [sp, #8]
   17c48:	bl	175bc <table_set_uchar@@Base>
   17c4c:	mov	r6, #0
   17c50:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17c54:	mov	r0, r6
   17c58:	add	r2, sp, #8
   17c5c:	ldr	r1, [pc, #1064]	; 1808c <table_cell_from_buffer@@Base+0x5c8>
   17c60:	bl	129cc <__isoc99_sscanf@plt>
   17c64:	cmp	r0, #1
   17c68:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17c6c:	mov	r2, r4
   17c70:	mov	r1, r8
   17c74:	mov	r0, r5
   17c78:	vldr	d0, [sp, #8]
   17c7c:	bl	17390 <table_set_double@@Base>
   17c80:	mov	r6, #0
   17c84:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17c88:	mov	r0, r6
   17c8c:	add	r2, sp, #8
   17c90:	ldr	r1, [pc, #1016]	; 18090 <table_cell_from_buffer@@Base+0x5cc>
   17c94:	bl	129cc <__isoc99_sscanf@plt>
   17c98:	cmp	r0, #1
   17c9c:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17ca0:	mov	r2, r4
   17ca4:	mov	r1, r8
   17ca8:	mov	r0, r5
   17cac:	vldr	s0, [sp, #8]
   17cb0:	bl	17314 <table_set_float@@Base>
   17cb4:	mov	r6, #0
   17cb8:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17cbc:	mov	r0, r6
   17cc0:	add	r2, sp, #8
   17cc4:	ldr	r1, [pc, #968]	; 18094 <table_cell_from_buffer@@Base+0x5d0>
   17cc8:	bl	129cc <__isoc99_sscanf@plt>
   17ccc:	cmp	r0, #1
   17cd0:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17cd4:	mov	r2, r4
   17cd8:	mov	r1, r8
   17cdc:	mov	r0, r5
   17ce0:	vldr	d0, [sp, #8]
   17ce4:	bl	17428 <table_set_ldouble@@Base>
   17ce8:	mov	r6, #0
   17cec:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17cf0:	mov	r0, r6
   17cf4:	add	r2, sp, #8
   17cf8:	ldr	r1, [pc, #920]	; 18098 <table_cell_from_buffer@@Base+0x5d4>
   17cfc:	bl	129cc <__isoc99_sscanf@plt>
   17d00:	cmp	r0, #1
   17d04:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17d08:	ldrd	r6, [sp, #8]
   17d0c:	mov	r2, r4
   17d10:	mov	r1, r8
   17d14:	strd	r6, [sp]
   17d18:	mov	r0, r5
   17d1c:	bl	1728c <table_set_ullong@@Base>
   17d20:	mov	r6, #0
   17d24:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17d28:	mov	r0, r6
   17d2c:	add	r2, sp, #8
   17d30:	ldr	r1, [pc, #868]	; 1809c <table_cell_from_buffer@@Base+0x5d8>
   17d34:	bl	129cc <__isoc99_sscanf@plt>
   17d38:	cmp	r0, #1
   17d3c:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17d40:	ldrd	r6, [sp, #8]
   17d44:	mov	r2, r4
   17d48:	mov	r1, r8
   17d4c:	strd	r6, [sp]
   17d50:	mov	r0, r5
   17d54:	bl	17204 <table_set_llong@@Base>
   17d58:	mov	r6, #0
   17d5c:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17d60:	mov	r0, r6
   17d64:	add	r2, sp, #8
   17d68:	ldr	r1, [pc, #816]	; 180a0 <table_cell_from_buffer@@Base+0x5dc>
   17d6c:	bl	129cc <__isoc99_sscanf@plt>
   17d70:	cmp	r0, #1
   17d74:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17d78:	mov	r2, r4
   17d7c:	mov	r1, r8
   17d80:	mov	r0, r5
   17d84:	ldr	r3, [sp, #8]
   17d88:	bl	17188 <table_set_ulong@@Base>
   17d8c:	mov	r6, #0
   17d90:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17d94:	mov	r0, r6
   17d98:	add	r2, sp, #8
   17d9c:	ldr	r1, [pc, #768]	; 180a4 <table_cell_from_buffer@@Base+0x5e0>
   17da0:	bl	129cc <__isoc99_sscanf@plt>
   17da4:	cmp	r0, #1
   17da8:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17dac:	mov	r2, r4
   17db0:	mov	r1, r8
   17db4:	mov	r0, r5
   17db8:	ldr	r3, [sp, #8]
   17dbc:	bl	1710c <table_set_long@@Base>
   17dc0:	mov	r6, #0
   17dc4:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17dc8:	mov	r0, r6
   17dcc:	add	r2, sp, #8
   17dd0:	ldr	r1, [pc, #720]	; 180a8 <table_cell_from_buffer@@Base+0x5e4>
   17dd4:	bl	129cc <__isoc99_sscanf@plt>
   17dd8:	cmp	r0, #1
   17ddc:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17de0:	ldrh	r3, [sp, #8]
   17de4:	mov	r2, r4
   17de8:	mov	r1, r8
   17dec:	mov	r0, r5
   17df0:	bl	17090 <table_set_ushort@@Base>
   17df4:	mov	r6, #0
   17df8:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17dfc:	mov	r0, r6
   17e00:	add	r2, sp, #8
   17e04:	ldr	r1, [pc, #672]	; 180ac <table_cell_from_buffer@@Base+0x5e8>
   17e08:	bl	129cc <__isoc99_sscanf@plt>
   17e0c:	cmp	r0, #1
   17e10:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17e14:	ldrsh	r3, [sp, #8]
   17e18:	mov	r2, r4
   17e1c:	mov	r1, r8
   17e20:	mov	r0, r5
   17e24:	bl	17014 <table_set_short@@Base>
   17e28:	mov	r6, #0
   17e2c:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17e30:	mov	r0, r6
   17e34:	add	r2, sp, #8
   17e38:	ldr	r1, [pc, #600]	; 18098 <table_cell_from_buffer@@Base+0x5d4>
   17e3c:	bl	129cc <__isoc99_sscanf@plt>
   17e40:	cmp	r0, #1
   17e44:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17e48:	ldrd	r6, [sp, #8]
   17e4c:	mov	r2, r4
   17e50:	mov	r1, r8
   17e54:	strd	r6, [sp]
   17e58:	mov	r0, r5
   17e5c:	bl	16f8c <table_set_uint64@@Base>
   17e60:	mov	r6, #0
   17e64:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17e68:	mov	r0, r6
   17e6c:	add	r2, sp, #8
   17e70:	ldr	r1, [pc, #548]	; 1809c <table_cell_from_buffer@@Base+0x5d8>
   17e74:	bl	129cc <__isoc99_sscanf@plt>
   17e78:	cmp	r0, #1
   17e7c:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17e80:	ldrd	r6, [sp, #8]
   17e84:	mov	r2, r4
   17e88:	mov	r1, r8
   17e8c:	strd	r6, [sp]
   17e90:	mov	r0, r5
   17e94:	bl	16f08 <table_set_int64@@Base>
   17e98:	mov	r6, #0
   17e9c:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17ea0:	mov	r0, r6
   17ea4:	add	r2, sp, #8
   17ea8:	ldr	r1, [pc, #512]	; 180b0 <table_cell_from_buffer@@Base+0x5ec>
   17eac:	bl	129cc <__isoc99_sscanf@plt>
   17eb0:	cmp	r0, #1
   17eb4:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17eb8:	mov	r2, r4
   17ebc:	mov	r1, r8
   17ec0:	mov	r0, r5
   17ec4:	ldr	r3, [sp, #8]
   17ec8:	bl	16e8c <table_set_uint32@@Base>
   17ecc:	mov	r6, #0
   17ed0:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17ed4:	mov	r0, r6
   17ed8:	add	r2, sp, #8
   17edc:	ldr	r1, [pc, #412]	; 18080 <table_cell_from_buffer@@Base+0x5bc>
   17ee0:	bl	129cc <__isoc99_sscanf@plt>
   17ee4:	cmp	r0, #1
   17ee8:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17eec:	mov	r2, r4
   17ef0:	mov	r1, r8
   17ef4:	mov	r0, r5
   17ef8:	ldr	r3, [sp, #8]
   17efc:	bl	16e10 <table_set_int32@@Base>
   17f00:	mov	r6, #0
   17f04:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17f08:	mov	r0, r6
   17f0c:	add	r2, sp, #8
   17f10:	ldr	r1, [pc, #400]	; 180a8 <table_cell_from_buffer@@Base+0x5e4>
   17f14:	bl	129cc <__isoc99_sscanf@plt>
   17f18:	cmp	r0, #1
   17f1c:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17f20:	ldrh	r3, [sp, #8]
   17f24:	mov	r2, r4
   17f28:	mov	r1, r8
   17f2c:	mov	r0, r5
   17f30:	bl	16d94 <table_set_uint16@@Base>
   17f34:	mov	r6, #0
   17f38:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17f3c:	mov	r0, r6
   17f40:	add	r2, sp, #8
   17f44:	ldr	r1, [pc, #352]	; 180ac <table_cell_from_buffer@@Base+0x5e8>
   17f48:	bl	129cc <__isoc99_sscanf@plt>
   17f4c:	cmp	r0, #1
   17f50:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17f54:	ldrsh	r3, [sp, #8]
   17f58:	mov	r2, r4
   17f5c:	mov	r1, r8
   17f60:	mov	r0, r5
   17f64:	bl	16d18 <table_set_int16@@Base>
   17f68:	mov	r6, #0
   17f6c:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17f70:	mov	r0, r6
   17f74:	add	r2, sp, #8
   17f78:	ldr	r1, [pc, #308]	; 180b4 <table_cell_from_buffer@@Base+0x5f0>
   17f7c:	bl	129cc <__isoc99_sscanf@plt>
   17f80:	cmp	r0, #1
   17f84:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17f88:	mov	r2, r4
   17f8c:	mov	r1, r8
   17f90:	mov	r0, r5
   17f94:	ldrb	r3, [sp, #8]
   17f98:	bl	16c9c <table_set_uint8@@Base>
   17f9c:	mov	r6, #0
   17fa0:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17fa4:	mov	r0, r6
   17fa8:	add	r2, sp, #8
   17fac:	ldr	r1, [pc, #260]	; 180b8 <table_cell_from_buffer@@Base+0x5f4>
   17fb0:	bl	129cc <__isoc99_sscanf@plt>
   17fb4:	cmp	r0, #1
   17fb8:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17fbc:	ldrsb	r3, [sp, #8]
   17fc0:	mov	r2, r4
   17fc4:	mov	r1, r8
   17fc8:	mov	r0, r5
   17fcc:	bl	16c20 <table_set_int8@@Base>
   17fd0:	mov	r6, #0
   17fd4:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   17fd8:	mov	r0, r6
   17fdc:	add	r2, sp, #8
   17fe0:	ldr	r1, [pc, #200]	; 180b0 <table_cell_from_buffer@@Base+0x5ec>
   17fe4:	bl	129cc <__isoc99_sscanf@plt>
   17fe8:	cmp	r0, #1
   17fec:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   17ff0:	mov	r2, r4
   17ff4:	mov	r1, r8
   17ff8:	mov	r0, r5
   17ffc:	ldr	r3, [sp, #8]
   18000:	bl	16ba4 <table_set_uint@@Base>
   18004:	mov	r6, #0
   18008:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   1800c:	mov	r0, r6
   18010:	add	r2, sp, #8
   18014:	ldr	r1, [pc, #100]	; 18080 <table_cell_from_buffer@@Base+0x5bc>
   18018:	bl	129cc <__isoc99_sscanf@plt>
   1801c:	cmp	r0, #1
   18020:	bne	17b68 <table_cell_from_buffer@@Base+0xa4>
   18024:	mov	r2, r4
   18028:	mov	r1, r8
   1802c:	mov	r0, r5
   18030:	ldr	r3, [sp, #8]
   18034:	bl	16b28 <table_set_int@@Base>
   18038:	mov	r6, #0
   1803c:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   18040:	mov	r2, r4
   18044:	mov	r1, r8
   18048:	mov	r0, r5
   1804c:	mov	r3, r6
   18050:	bl	16aac <table_set_bool@@Base>
   18054:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   18058:	mov	r2, r4
   1805c:	mov	r1, r8
   18060:	mov	r0, r5
   18064:	ldr	r3, [sp, #8]
   18068:	bl	17638 <table_set_ptr@@Base>
   1806c:	mov	r6, #0
   18070:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   18074:	mov	r6, #0
   18078:	b	17b6c <table_cell_from_buffer@@Base+0xa8>
   1807c:	andeq	r8, r1, r0, lsr #10
   18080:	andeq	r8, r1, r4, lsl #8
   18084:	andeq	r8, r1, ip, lsl r5
   18088:	andeq	r8, r1, ip, lsl #10
   1808c:	andeq	r8, r1, r4, lsl r5
   18090:	andeq	r8, r1, r0, lsl r5
   18094:	andeq	r8, r1, r8, lsl r5
   18098:	strdeq	r8, [r1], -r4
   1809c:	andeq	r8, r1, ip, ror #9
   180a0:	andeq	r8, r1, r8, lsl #10
   180a4:	andeq	r8, r1, r4, lsl #10
   180a8:	andeq	r8, r1, r0, lsl #10
   180ac:	strdeq	r8, [r1], -ip
   180b0:	andeq	r8, r1, r8, ror #9
   180b4:	andeq	r8, r1, ip, lsr #10
   180b8:	andeq	r8, r1, r4, lsr #10

000180bc <table_cell_nullify@@Base>:
   180bc:	push	{r4, r5, r6, lr}
   180c0:	mov	r5, r2
   180c4:	bl	16744 <table_get_row_ptr@@Base>
   180c8:	ldr	r4, [r0]
   180cc:	ldr	r0, [r4, r5, lsl #2]
   180d0:	cmp	r0, #0
   180d4:	beq	180e4 <table_cell_nullify@@Base+0x28>
   180d8:	bl	1296c <free@plt>
   180dc:	mov	r3, #0
   180e0:	str	r3, [r4, r5, lsl #2]
   180e4:	mov	r0, #0
   180e8:	pop	{r4, r5, r6, pc}

000180ec <table_get_cell_ptr@@Base>:
   180ec:	push	{r4, lr}
   180f0:	mov	r4, r2
   180f4:	bl	16744 <table_get_row_ptr@@Base>
   180f8:	ldr	r0, [r0]
   180fc:	add	r0, r0, r4, lsl #2
   18100:	pop	{r4, pc}
   18104:	subs	r2, r1, #1
   18108:	bxeq	lr
   1810c:	bcc	182e4 <table_get_cell_ptr@@Base+0x1f8>
   18110:	cmp	r0, r1
   18114:	bls	182c8 <table_get_cell_ptr@@Base+0x1dc>
   18118:	tst	r1, r2
   1811c:	beq	182d4 <table_get_cell_ptr@@Base+0x1e8>
   18120:	clz	r3, r0
   18124:	clz	r2, r1
   18128:	sub	r3, r2, r3
   1812c:	rsbs	r3, r3, #31
   18130:	addne	r3, r3, r3, lsl #1
   18134:	mov	r2, #0
   18138:	addne	pc, pc, r3, lsl #2
   1813c:	nop			; (mov r0, r0)
   18140:	cmp	r0, r1, lsl #31
   18144:	adc	r2, r2, r2
   18148:	subcs	r0, r0, r1, lsl #31
   1814c:	cmp	r0, r1, lsl #30
   18150:	adc	r2, r2, r2
   18154:	subcs	r0, r0, r1, lsl #30
   18158:	cmp	r0, r1, lsl #29
   1815c:	adc	r2, r2, r2
   18160:	subcs	r0, r0, r1, lsl #29
   18164:	cmp	r0, r1, lsl #28
   18168:	adc	r2, r2, r2
   1816c:	subcs	r0, r0, r1, lsl #28
   18170:	cmp	r0, r1, lsl #27
   18174:	adc	r2, r2, r2
   18178:	subcs	r0, r0, r1, lsl #27
   1817c:	cmp	r0, r1, lsl #26
   18180:	adc	r2, r2, r2
   18184:	subcs	r0, r0, r1, lsl #26
   18188:	cmp	r0, r1, lsl #25
   1818c:	adc	r2, r2, r2
   18190:	subcs	r0, r0, r1, lsl #25
   18194:	cmp	r0, r1, lsl #24
   18198:	adc	r2, r2, r2
   1819c:	subcs	r0, r0, r1, lsl #24
   181a0:	cmp	r0, r1, lsl #23
   181a4:	adc	r2, r2, r2
   181a8:	subcs	r0, r0, r1, lsl #23
   181ac:	cmp	r0, r1, lsl #22
   181b0:	adc	r2, r2, r2
   181b4:	subcs	r0, r0, r1, lsl #22
   181b8:	cmp	r0, r1, lsl #21
   181bc:	adc	r2, r2, r2
   181c0:	subcs	r0, r0, r1, lsl #21
   181c4:	cmp	r0, r1, lsl #20
   181c8:	adc	r2, r2, r2
   181cc:	subcs	r0, r0, r1, lsl #20
   181d0:	cmp	r0, r1, lsl #19
   181d4:	adc	r2, r2, r2
   181d8:	subcs	r0, r0, r1, lsl #19
   181dc:	cmp	r0, r1, lsl #18
   181e0:	adc	r2, r2, r2
   181e4:	subcs	r0, r0, r1, lsl #18
   181e8:	cmp	r0, r1, lsl #17
   181ec:	adc	r2, r2, r2
   181f0:	subcs	r0, r0, r1, lsl #17
   181f4:	cmp	r0, r1, lsl #16
   181f8:	adc	r2, r2, r2
   181fc:	subcs	r0, r0, r1, lsl #16
   18200:	cmp	r0, r1, lsl #15
   18204:	adc	r2, r2, r2
   18208:	subcs	r0, r0, r1, lsl #15
   1820c:	cmp	r0, r1, lsl #14
   18210:	adc	r2, r2, r2
   18214:	subcs	r0, r0, r1, lsl #14
   18218:	cmp	r0, r1, lsl #13
   1821c:	adc	r2, r2, r2
   18220:	subcs	r0, r0, r1, lsl #13
   18224:	cmp	r0, r1, lsl #12
   18228:	adc	r2, r2, r2
   1822c:	subcs	r0, r0, r1, lsl #12
   18230:	cmp	r0, r1, lsl #11
   18234:	adc	r2, r2, r2
   18238:	subcs	r0, r0, r1, lsl #11
   1823c:	cmp	r0, r1, lsl #10
   18240:	adc	r2, r2, r2
   18244:	subcs	r0, r0, r1, lsl #10
   18248:	cmp	r0, r1, lsl #9
   1824c:	adc	r2, r2, r2
   18250:	subcs	r0, r0, r1, lsl #9
   18254:	cmp	r0, r1, lsl #8
   18258:	adc	r2, r2, r2
   1825c:	subcs	r0, r0, r1, lsl #8
   18260:	cmp	r0, r1, lsl #7
   18264:	adc	r2, r2, r2
   18268:	subcs	r0, r0, r1, lsl #7
   1826c:	cmp	r0, r1, lsl #6
   18270:	adc	r2, r2, r2
   18274:	subcs	r0, r0, r1, lsl #6
   18278:	cmp	r0, r1, lsl #5
   1827c:	adc	r2, r2, r2
   18280:	subcs	r0, r0, r1, lsl #5
   18284:	cmp	r0, r1, lsl #4
   18288:	adc	r2, r2, r2
   1828c:	subcs	r0, r0, r1, lsl #4
   18290:	cmp	r0, r1, lsl #3
   18294:	adc	r2, r2, r2
   18298:	subcs	r0, r0, r1, lsl #3
   1829c:	cmp	r0, r1, lsl #2
   182a0:	adc	r2, r2, r2
   182a4:	subcs	r0, r0, r1, lsl #2
   182a8:	cmp	r0, r1, lsl #1
   182ac:	adc	r2, r2, r2
   182b0:	subcs	r0, r0, r1, lsl #1
   182b4:	cmp	r0, r1
   182b8:	adc	r2, r2, r2
   182bc:	subcs	r0, r0, r1
   182c0:	mov	r0, r2
   182c4:	bx	lr
   182c8:	moveq	r0, #1
   182cc:	movne	r0, #0
   182d0:	bx	lr
   182d4:	clz	r2, r1
   182d8:	rsb	r2, r2, #31
   182dc:	lsr	r0, r0, r2
   182e0:	bx	lr
   182e4:	cmp	r0, #0
   182e8:	mvnne	r0, #0
   182ec:	b	18310 <table_get_cell_ptr@@Base+0x224>
   182f0:	cmp	r1, #0
   182f4:	beq	182e4 <table_get_cell_ptr@@Base+0x1f8>
   182f8:	push	{r0, r1, lr}
   182fc:	bl	18104 <table_get_cell_ptr@@Base+0x18>
   18300:	pop	{r1, r2, lr}
   18304:	mul	r3, r2, r0
   18308:	sub	r1, r1, r3
   1830c:	bx	lr
   18310:	push	{r1, lr}
   18314:	mov	r0, #8
   18318:	bl	12948 <raise@plt>
   1831c:	pop	{r1, pc}

00018320 <__libc_csu_init@@Base>:
   18320:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18324:	mov	r7, r0
   18328:	ldr	r6, [pc, #72]	; 18378 <__libc_csu_init@@Base+0x58>
   1832c:	ldr	r5, [pc, #72]	; 1837c <__libc_csu_init@@Base+0x5c>
   18330:	add	r6, pc, r6
   18334:	add	r5, pc, r5
   18338:	sub	r6, r6, r5
   1833c:	mov	r8, r1
   18340:	mov	r9, r2
   18344:	bl	12928 <raise@plt-0x20>
   18348:	asrs	r6, r6, #2
   1834c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18350:	mov	r4, #0
   18354:	add	r4, r4, #1
   18358:	ldr	r3, [r5], #4
   1835c:	mov	r2, r9
   18360:	mov	r1, r8
   18364:	mov	r0, r7
   18368:	blx	r3
   1836c:	cmp	r6, r4
   18370:	bne	18354 <__libc_csu_init@@Base+0x34>
   18374:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18378:	ldrdeq	r0, [r1], -r8
   1837c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00018380 <__libc_csu_fini@@Base>:
   18380:	bx	lr

Disassembly of section .fini:

00018384 <.fini>:
   18384:	push	{r3, lr}
   18388:	pop	{r3, pc}
