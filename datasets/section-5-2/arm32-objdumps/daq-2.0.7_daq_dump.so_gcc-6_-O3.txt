
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

0000057c <_init>:
 57c:	push	{r3, lr}
 580:	bl	65c <call_weak_fn>
 584:	pop	{r3, pc}

Disassembly of section .plt:

00000588 <.plt>:
 588:	push	{lr}		; (str lr, [sp, #-4]!)
 58c:	ldr	lr, [pc, #4]	; 598 <.plt+0x10>
 590:	add	lr, pc, lr
 594:	ldr	pc, [lr, #8]!
 598:	.word	0x00011a68

0000059c <calloc@plt>:
 59c:	add	ip, pc, #0, 12
 5a0:	add	ip, ip, #69632	; 0x11000
 5a4:	ldr	pc, [ip, #2664]!	; 0xa68

000005a8 <strcmp@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #69632	; 0x11000
 5b0:	ldr	pc, [ip, #2656]!	; 0xa60

000005b4 <__cxa_finalize@plt>:
 5b4:	add	ip, pc, #0, 12
 5b8:	add	ip, ip, #69632	; 0x11000
 5bc:	ldr	pc, [ip, #2648]!	; 0xa58

000005c0 <free@plt>:
 5c0:	add	ip, pc, #0, 12
 5c4:	add	ip, ip, #69632	; 0x11000
 5c8:	ldr	pc, [ip, #2640]!	; 0xa50

000005cc <ferror@plt>:
 5cc:	add	ip, pc, #0, 12
 5d0:	add	ip, ip, #69632	; 0x11000
 5d4:	ldr	pc, [ip, #2632]!	; 0xa48

000005d8 <strdup@plt>:
 5d8:	add	ip, pc, #0, 12
 5dc:	add	ip, ip, #69632	; 0x11000
 5e0:	ldr	pc, [ip, #2624]!	; 0xa40

000005e4 <pcap_close@plt>:
 5e4:	add	ip, pc, #0, 12
 5e8:	add	ip, ip, #69632	; 0x11000
 5ec:	ldr	pc, [ip, #2616]!	; 0xa38

000005f0 <strcasecmp@plt>:
 5f0:	add	ip, pc, #0, 12
 5f4:	add	ip, ip, #69632	; 0x11000
 5f8:	ldr	pc, [ip, #2608]!	; 0xa30

000005fc <pcap_open_dead@plt>:
 5fc:	add	ip, pc, #0, 12
 600:	add	ip, ip, #69632	; 0x11000
 604:	ldr	pc, [ip, #2600]!	; 0xa28

00000608 <pcap_dump@plt>:
 608:	add	ip, pc, #0, 12
 60c:	add	ip, ip, #69632	; 0x11000
 610:	ldr	pc, [ip, #2592]!	; 0xa20

00000614 <__gmon_start__@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #69632	; 0x11000
 61c:	ldr	pc, [ip, #2584]!	; 0xa18

00000620 <snprintf@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #69632	; 0x11000
 628:	ldr	pc, [ip, #2576]!	; 0xa10

0000062c <pcap_dump_file@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #69632	; 0x11000
 634:	ldr	pc, [ip, #2568]!	; 0xa08

00000638 <memset@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #69632	; 0x11000
 640:	ldr	pc, [ip, #2560]!	; 0xa00

00000644 <pcap_dump_close@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #69632	; 0x11000
 64c:	ldr	pc, [ip, #2552]!	; 0x9f8

00000650 <pcap_dump_open@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #69632	; 0x11000
 658:	ldr	pc, [ip, #2544]!	; 0x9f0

Disassembly of section .text:

0000065c <call_weak_fn>:
 65c:	ldr	r3, [pc, #20]	; 678 <call_weak_fn+0x1c>
 660:	ldr	r2, [pc, #20]	; 67c <call_weak_fn+0x20>
 664:	add	r3, pc, r3
 668:	ldr	r2, [r3, r2]
 66c:	cmp	r2, #0
 670:	bxeq	lr
 674:	b	614 <__gmon_start__@plt>
 678:	.word	0x00011994
 67c:	.word	0x00000054

00000680 <deregister_tm_clones>:
 680:	ldr	r3, [pc, #52]	; 6bc <deregister_tm_clones+0x3c>
 684:	ldr	r0, [pc, #52]	; 6c0 <deregister_tm_clones+0x40>
 688:	add	r3, pc, r3
 68c:	add	r0, pc, r0
 690:	add	r3, r3, #3
 694:	sub	r3, r3, r0
 698:	cmp	r3, #6
 69c:	ldr	r3, [pc, #32]	; 6c4 <deregister_tm_clones+0x44>
 6a0:	add	r3, pc, r3
 6a4:	bxls	lr
 6a8:	ldr	r2, [pc, #24]	; 6c8 <deregister_tm_clones+0x48>
 6ac:	ldr	r3, [r3, r2]
 6b0:	cmp	r3, #0
 6b4:	bxeq	lr
 6b8:	bx	r3
 6bc:	.word	0x00011a3c
 6c0:	.word	0x00011a38
 6c4:	.word	0x00011958
 6c8:	.word	0x00000050

000006cc <register_tm_clones>:
 6cc:	ldr	r1, [pc, #56]	; 70c <register_tm_clones+0x40>
 6d0:	ldr	r0, [pc, #56]	; 710 <register_tm_clones+0x44>
 6d4:	add	r1, pc, r1
 6d8:	add	r0, pc, r0
 6dc:	sub	r1, r1, r0
 6e0:	ldr	r3, [pc, #44]	; 714 <register_tm_clones+0x48>
 6e4:	asr	r1, r1, #2
 6e8:	add	r3, pc, r3
 6ec:	add	r1, r1, r1, lsr #31
 6f0:	asrs	r1, r1, #1
 6f4:	bxeq	lr
 6f8:	ldr	r2, [pc, #24]	; 718 <register_tm_clones+0x4c>
 6fc:	ldr	r3, [r3, r2]
 700:	cmp	r3, #0
 704:	bxeq	lr
 708:	bx	r3
 70c:	.word	0x000119f0
 710:	.word	0x000119ec
 714:	.word	0x00011910
 718:	.word	0x0000005c

0000071c <__do_global_dtors_aux>:
 71c:	ldr	r3, [pc, #76]	; 770 <__do_global_dtors_aux+0x54>
 720:	ldr	r2, [pc, #76]	; 774 <__do_global_dtors_aux+0x58>
 724:	add	r3, pc, r3
 728:	add	r2, pc, r2
 72c:	ldrb	r3, [r3]
 730:	cmp	r3, #0
 734:	bxne	lr
 738:	ldr	r3, [pc, #56]	; 778 <__do_global_dtors_aux+0x5c>
 73c:	push	{r4, lr}
 740:	ldr	r3, [r2, r3]
 744:	cmp	r3, #0
 748:	beq	758 <__do_global_dtors_aux+0x3c>
 74c:	ldr	r3, [pc, #40]	; 77c <__do_global_dtors_aux+0x60>
 750:	ldr	r0, [pc, r3]
 754:	bl	5b4 <__cxa_finalize@plt>
 758:	bl	680 <deregister_tm_clones>
 75c:	ldr	r3, [pc, #28]	; 780 <__do_global_dtors_aux+0x64>
 760:	mov	r2, #1
 764:	add	r3, pc, r3
 768:	strb	r2, [r3]
 76c:	pop	{r4, pc}
 770:	.word	0x000119a0
 774:	.word	0x000118d0
 778:	.word	0x0000004c
 77c:	.word	0x00011908
 780:	.word	0x00011960

00000784 <frame_dummy>:
 784:	ldr	r0, [pc, #56]	; 7c4 <frame_dummy+0x40>
 788:	ldr	r3, [pc, #56]	; 7c8 <frame_dummy+0x44>
 78c:	add	r0, pc, r0
 790:	ldr	r2, [r0]
 794:	add	r3, pc, r3
 798:	cmp	r2, #0
 79c:	bne	7a4 <frame_dummy+0x20>
 7a0:	b	6cc <register_tm_clones>
 7a4:	ldr	r2, [pc, #32]	; 7cc <frame_dummy+0x48>
 7a8:	ldr	r3, [r3, r2]
 7ac:	cmp	r3, #0
 7b0:	beq	7a0 <frame_dummy+0x1c>
 7b4:	push	{r4, lr}
 7b8:	blx	r3
 7bc:	pop	{r4, lr}
 7c0:	b	6cc <register_tm_clones>
 7c4:	.word	0x00011778
 7c8:	.word	0x00011864
 7cc:	.word	0x00000058

000007d0 <dump_daq_acquire>:
 7d0:	push	{r4, lr}
 7d4:	ldm	r0, {ip, lr}
 7d8:	ldr	r4, [sp, #8]
 7dc:	str	r2, [r0, #16]
 7e0:	str	r4, [r0, #20]
 7e4:	ldr	r2, [pc, #24]	; 804 <dump_daq_acquire+0x34>
 7e8:	str	r0, [sp, #8]
 7ec:	mov	r0, lr
 7f0:	ldr	lr, [ip, #28]
 7f4:	add	r2, pc, r2
 7f8:	mov	ip, lr
 7fc:	pop	{r4, lr}
 800:	bx	ip
 804:	.word	0x00000180

00000808 <dump_daq_set_filter>:
 808:	ldr	r3, [r0]
 80c:	ldr	r0, [r0, #4]
 810:	ldr	r3, [r3, #20]
 814:	bx	r3

00000818 <dump_daq_breakloop>:
 818:	ldr	r3, [r0]
 81c:	ldr	r0, [r0, #4]
 820:	ldr	r3, [r3, #36]	; 0x24
 824:	bx	r3

00000828 <dump_daq_check_status>:
 828:	ldr	r3, [r0]
 82c:	ldr	r0, [r0, #4]
 830:	ldr	r3, [r3, #48]	; 0x30
 834:	bx	r3

00000838 <dump_daq_get_stats>:
 838:	push	{r4, r5, r6, lr}
 83c:	mov	r4, r0
 840:	ldr	r3, [r0]
 844:	ldr	r0, [r0, #4]
 848:	mov	r5, r1
 84c:	ldr	r3, [r3, #52]	; 0x34
 850:	blx	r3
 854:	ldrd	r2, [r4, #64]	; 0x40
 858:	strd	r2, [r5, #40]	; 0x28
 85c:	ldrd	r2, [r4, #72]	; 0x48
 860:	strd	r2, [r5, #48]	; 0x30
 864:	ldrd	r2, [r4, #80]	; 0x50
 868:	strd	r2, [r5, #56]	; 0x38
 86c:	ldrd	r2, [r4, #88]	; 0x58
 870:	strd	r2, [r5, #64]	; 0x40
 874:	ldrd	r2, [r4, #96]	; 0x60
 878:	strd	r2, [r5, #72]	; 0x48
 87c:	ldrd	r2, [r4, #104]	; 0x68
 880:	strd	r2, [r5, #80]	; 0x50
 884:	ldrd	r2, [r4, #112]	; 0x70
 888:	strd	r2, [r5, #88]	; 0x58
 88c:	ldrd	r2, [r4, #56]	; 0x38
 890:	strd	r2, [r5, #32]
 894:	pop	{r4, r5, r6, pc}

00000898 <dump_daq_get_snaplen>:
 898:	ldr	r3, [r0]
 89c:	ldr	r0, [r0, #4]
 8a0:	ldr	r3, [r3, #60]	; 0x3c
 8a4:	bx	r3

000008a8 <dump_daq_get_capabilities>:
 8a8:	push	{r4, lr}
 8ac:	ldr	r3, [r0]
 8b0:	ldr	r0, [r0, #4]
 8b4:	ldr	r3, [r3, #64]	; 0x40
 8b8:	blx	r3
 8bc:	orr	r0, r0, #7
 8c0:	pop	{r4, pc}

000008c4 <dump_daq_get_datalink_type>:
 8c4:	ldr	r3, [r0]
 8c8:	ldr	r0, [r0, #4]
 8cc:	ldr	r3, [r3, #68]	; 0x44
 8d0:	bx	r3

000008d4 <dump_daq_get_errbuf>:
 8d4:	ldr	r3, [r0]
 8d8:	ldr	r0, [r0, #4]
 8dc:	ldr	r3, [r3, #72]	; 0x48
 8e0:	bx	r3

000008e4 <dump_daq_set_errbuf>:
 8e4:	ldr	r3, [r0]
 8e8:	cmp	r1, #0
 8ec:	ldr	r0, [r0, #4]
 8f0:	ldr	r3, [r3, #76]	; 0x4c
 8f4:	beq	8fc <dump_daq_set_errbuf+0x18>
 8f8:	bx	r3
 8fc:	ldr	r1, [pc, #4]	; 908 <dump_daq_set_errbuf+0x24>
 900:	add	r1, pc, r1
 904:	bx	r3
 908:	.word	0x000005b4

0000090c <dump_daq_get_device_index>:
 90c:	ldr	r3, [r0]
 910:	ldr	r0, [r0, #4]
 914:	ldr	r3, [r3, #80]	; 0x50
 918:	bx	r3

0000091c <dump_daq_reset_stats>:
 91c:	push	{r4, lr}
 920:	mov	r4, r0
 924:	ldr	r0, [r0, #4]
 928:	ldr	r3, [r4], #24
 92c:	ldr	r3, [r3, #56]	; 0x38
 930:	blx	r3
 934:	mov	r0, r4
 938:	mov	r2, #96	; 0x60
 93c:	mov	r1, #0
 940:	pop	{r4, lr}
 944:	b	638 <memset@plt>

00000948 <dump_daq_shutdown>:
 948:	push	{r4, lr}
 94c:	mov	r4, r0
 950:	ldr	r3, [r0]
 954:	ldr	r0, [r0, #4]
 958:	ldr	r3, [r3, #44]	; 0x2c
 95c:	blx	r3
 960:	ldr	r0, [r4, #12]
 964:	cmp	r0, #0
 968:	beq	970 <dump_daq_shutdown+0x28>
 96c:	bl	5c0 <free@plt>
 970:	mov	r0, r4
 974:	pop	{r4, lr}
 978:	b	5c0 <free@plt>

0000097c <daq_dump_capture>:
 97c:	push	{r4, r5, r6, r7, r8, lr}
 980:	mov	r4, r0
 984:	ldr	r3, [r0, #16]
 988:	ldr	r0, [r0, #20]
 98c:	mov	r6, r1
 990:	mov	r7, r2
 994:	blx	r3
 998:	cmp	r0, #6
 99c:	bhi	9e4 <daq_dump_capture+0x68>
 9a0:	mov	r5, r0
 9a4:	add	r0, r4, r0, lsl #3
 9a8:	ldr	r1, [pc, #80]	; a00 <daq_dump_capture+0x84>
 9ac:	ldrd	r2, [r0, #64]	; 0x40
 9b0:	add	r1, pc, r1
 9b4:	adds	r2, r2, #1
 9b8:	ldr	r1, [r1, r5, lsl #2]
 9bc:	adc	r3, r3, #0
 9c0:	cmp	r1, #0
 9c4:	strd	r2, [r0, #64]	; 0x40
 9c8:	beq	9dc <daq_dump_capture+0x60>
 9cc:	mov	r2, r7
 9d0:	mov	r1, r6
 9d4:	ldr	r0, [r4, #8]
 9d8:	bl	608 <pcap_dump@plt>
 9dc:	mov	r0, r5
 9e0:	pop	{r4, r5, r6, r7, r8, pc}
 9e4:	ldrd	r2, [r4, #72]	; 0x48
 9e8:	mov	r5, #1
 9ec:	mov	r0, r5
 9f0:	adds	r2, r2, #1
 9f4:	adc	r3, r3, #0
 9f8:	strd	r2, [r4, #72]	; 0x48
 9fc:	pop	{r4, r5, r6, r7, r8, pc}
 a00:	.word	0x00000438

00000a04 <dump_daq_start>:
 a04:	push	{r4, r5, r6, r7, r8, lr}
 a08:	mov	r4, r0
 a0c:	ldr	r1, [r0, #12]
 a10:	cmp	r1, #0
 a14:	movne	r5, r1
 a18:	beq	a98 <dump_daq_start+0x94>
 a1c:	ldr	r3, [r4]
 a20:	ldr	r0, [r4, #4]
 a24:	ldr	r3, [r3, #24]
 a28:	blx	r3
 a2c:	subs	r6, r0, #0
 a30:	beq	a3c <dump_daq_start+0x38>
 a34:	mov	r0, r6
 a38:	pop	{r4, r5, r6, r7, r8, pc}
 a3c:	ldr	r3, [r4]
 a40:	ldr	r0, [r4, #4]
 a44:	ldr	r3, [r3, #68]	; 0x44
 a48:	blx	r3
 a4c:	ldr	r3, [r4]
 a50:	ldr	r3, [r3, #60]	; 0x3c
 a54:	mov	r7, r0
 a58:	ldr	r0, [r4, #4]
 a5c:	blx	r3
 a60:	mov	r1, r0
 a64:	mov	r0, r7
 a68:	bl	5fc <pcap_open_dead@plt>
 a6c:	subs	r7, r0, #0
 a70:	beq	aa4 <dump_daq_start+0xa0>
 a74:	mov	r1, r5
 a78:	bl	650 <pcap_dump_open@plt>
 a7c:	cmp	r0, #0
 a80:	str	r0, [r4, #8]
 a84:	beq	aa8 <dump_daq_start+0xa4>
 a88:	mov	r0, r7
 a8c:	bl	5e4 <pcap_close@plt>
 a90:	mov	r0, r6
 a94:	pop	{r4, r5, r6, r7, r8, pc}
 a98:	ldr	r5, [pc, #56]	; ad8 <dump_daq_start+0xd4>
 a9c:	add	r5, pc, r5
 aa0:	b	a1c <dump_daq_start+0x18>
 aa4:	str	r7, [r4, #8]
 aa8:	ldr	r3, [r4]
 aac:	ldr	r0, [r4, #4]
 ab0:	mvn	r6, #0
 ab4:	ldr	r3, [r3, #40]	; 0x28
 ab8:	blx	r3
 abc:	ldr	r3, [r4]
 ac0:	ldr	r1, [pc, #20]	; adc <dump_daq_start+0xd8>
 ac4:	ldr	r0, [r4, #4]
 ac8:	add	r1, pc, r1
 acc:	ldr	r3, [r3, #76]	; 0x4c
 ad0:	blx	r3
 ad4:	b	a34 <dump_daq_start+0x30>
 ad8:	.word	0x0000037c
 adc:	.word	0x00000360

00000ae0 <dump_daq_stop>:
 ae0:	push	{r4, r5, r6, lr}
 ae4:	mov	r4, r0
 ae8:	ldr	r3, [r0]
 aec:	ldr	r0, [r0, #4]
 af0:	ldr	r3, [r3, #40]	; 0x28
 af4:	blx	r3
 af8:	subs	r5, r0, #0
 afc:	bne	b14 <dump_daq_stop+0x34>
 b00:	ldr	r0, [r4, #8]
 b04:	cmp	r0, #0
 b08:	beq	b14 <dump_daq_stop+0x34>
 b0c:	bl	644 <pcap_dump_close@plt>
 b10:	str	r5, [r4, #8]
 b14:	mov	r0, r5
 b18:	pop	{r4, r5, r6, pc}

00000b1c <dump_daq_inject>:
 b1c:	push	{r4, r5, r6, lr}
 b20:	mov	lr, r1
 b24:	mov	r4, r0
 b28:	mov	r5, r3
 b2c:	mov	r6, r2
 b30:	ldm	lr!, {r0, r1, r2, r3}
 b34:	sub	sp, sp, #56	; 0x38
 b38:	add	ip, sp, #4
 b3c:	stmia	ip!, {r0, r1, r2, r3}
 b40:	ldm	lr!, {r0, r1, r2, r3}
 b44:	str	r5, [sp, #12]
 b48:	str	r5, [sp, #16]
 b4c:	stmia	ip!, {r0, r1, r2, r3}
 b50:	ldm	lr!, {r0, r1, r2, r3}
 b54:	ldr	lr, [lr]
 b58:	stmia	ip!, {r0, r1, r2, r3}
 b5c:	mov	r2, r6
 b60:	add	r1, sp, #4
 b64:	ldr	r0, [r4, #8]
 b68:	str	lr, [ip]
 b6c:	bl	608 <pcap_dump@plt>
 b70:	ldr	r0, [r4, #8]
 b74:	bl	62c <pcap_dump_file@plt>
 b78:	bl	5cc <ferror@plt>
 b7c:	cmp	r0, #0
 b80:	bne	b9c <dump_daq_inject+0x80>
 b84:	ldrd	r2, [r4, #56]	; 0x38
 b88:	adds	r2, r2, #1
 b8c:	adc	r3, r3, #0
 b90:	strd	r2, [r4, #56]	; 0x38
 b94:	add	sp, sp, #56	; 0x38
 b98:	pop	{r4, r5, r6, pc}
 b9c:	ldr	r3, [r4]
 ba0:	ldr	r1, [pc, #20]	; bbc <dump_daq_inject+0xa0>
 ba4:	ldr	r0, [r4, #4]
 ba8:	add	r1, pc, r1
 bac:	ldr	r3, [r3, #76]	; 0x4c
 bb0:	blx	r3
 bb4:	mvn	r0, #0
 bb8:	b	b94 <dump_daq_inject+0x78>
 bbc:	.word	0x00000298

00000bc0 <dump_daq_initialize>:
 bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 bc4:	sub	sp, sp, #52	; 0x34
 bc8:	mov	r4, r0
 bcc:	str	r1, [sp, #12]
 bd0:	mov	r0, #1
 bd4:	mov	r1, #120	; 0x78
 bd8:	stmib	sp, {r2, r3}
 bdc:	bl	59c <calloc@plt>
 be0:	mov	lr, r4
 be4:	add	r9, sp, #20
 be8:	mov	ip, r9
 bec:	ldr	r8, [r4, #24]
 bf0:	mov	r7, r0
 bf4:	ldm	lr!, {r0, r1, r2, r3}
 bf8:	cmp	r7, #0
 bfc:	stmia	ip!, {r0, r1, r2, r3}
 c00:	ldm	lr, {r0, r1, r2}
 c04:	stm	ip, {r0, r1, r2}
 c08:	beq	d9c <dump_daq_initialize+0x1dc>
 c0c:	cmp	r8, #0
 c10:	beq	d70 <dump_daq_initialize+0x1b0>
 c14:	ldr	r3, [r8, #12]
 c18:	tst	r3, #1
 c1c:	beq	d70 <dump_daq_initialize+0x1b0>
 c20:	ldr	sl, [sp, #40]	; 0x28
 c24:	cmp	sl, #0
 c28:	beq	cfc <dump_daq_initialize+0x13c>
 c2c:	ldr	r5, [pc, #396]	; dc0 <dump_daq_initialize+0x200>
 c30:	ldr	r4, [pc, #396]	; dc4 <dump_daq_initialize+0x204>
 c34:	add	r5, pc, r5
 c38:	add	r4, pc, r4
 c3c:	mov	r6, #0
 c40:	b	c54 <dump_daq_initialize+0x94>
 c44:	ldr	r6, [sl, #4]
 c48:	ldr	sl, [sl, #8]
 c4c:	cmp	sl, #0
 c50:	beq	c98 <dump_daq_initialize+0xd8>
 c54:	ldr	fp, [sl]
 c58:	mov	r1, r5
 c5c:	mov	r0, fp
 c60:	bl	5a8 <strcmp@plt>
 c64:	mov	r1, r4
 c68:	cmp	r0, #0
 c6c:	mov	r0, fp
 c70:	beq	c44 <dump_daq_initialize+0x84>
 c74:	bl	5a8 <strcmp@plt>
 c78:	cmp	r0, #0
 c7c:	bne	c48 <dump_daq_initialize+0x88>
 c80:	ldr	r0, [sl, #4]
 c84:	bl	5d8 <strdup@plt>
 c88:	str	r0, [r7, #12]
 c8c:	ldr	sl, [sl, #8]
 c90:	cmp	sl, #0
 c94:	bne	c54 <dump_daq_initialize+0x94>
 c98:	cmp	r6, #0
 c9c:	beq	cfc <dump_daq_initialize+0x13c>
 ca0:	ldr	r1, [pc, #288]	; dc8 <dump_daq_initialize+0x208>
 ca4:	mov	r0, r6
 ca8:	add	r1, pc, r1
 cac:	bl	5f0 <strcasecmp@plt>
 cb0:	cmp	r0, #0
 cb4:	moveq	r3, #2
 cb8:	streq	r3, [sp, #32]
 cbc:	beq	cfc <dump_daq_initialize+0x13c>
 cc0:	ldr	r1, [pc, #260]	; dcc <dump_daq_initialize+0x20c>
 cc4:	mov	r0, r6
 cc8:	add	r1, pc, r1
 ccc:	bl	5f0 <strcasecmp@plt>
 cd0:	cmp	r0, #0
 cd4:	streq	sl, [sp, #32]
 cd8:	beq	cfc <dump_daq_initialize+0x13c>
 cdc:	ldr	r1, [pc, #236]	; dd0 <dump_daq_initialize+0x210>
 ce0:	mov	r0, r6
 ce4:	add	r1, pc, r1
 ce8:	bl	5f0 <strcasecmp@plt>
 cec:	cmp	r0, #0
 cf0:	moveq	r3, #1
 cf4:	streq	r3, [sp, #32]
 cf8:	bne	d30 <dump_daq_initialize+0x170>
 cfc:	ldr	r4, [r8, #16]
 d00:	ldmib	sp, {r2, r3}
 d04:	mov	r0, r9
 d08:	add	r1, r7, #4
 d0c:	blx	r4
 d10:	subs	r4, r0, #0
 d14:	bne	d5c <dump_daq_initialize+0x19c>
 d18:	ldr	r3, [sp, #12]
 d1c:	str	r8, [r7]
 d20:	str	r7, [r3]
 d24:	mov	r0, r4
 d28:	add	sp, sp, #52	; 0x34
 d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 d30:	ldr	r2, [pc, #156]	; dd4 <dump_daq_initialize+0x214>
 d34:	mov	r3, r6
 d38:	ldmib	sp, {r0, r1}
 d3c:	add	r2, pc, r2
 d40:	bl	620 <snprintf@plt>
 d44:	mov	r0, r7
 d48:	bl	5c0 <free@plt>
 d4c:	mvn	r4, #0
 d50:	mov	r0, r4
 d54:	add	sp, sp, #52	; 0x34
 d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 d5c:	mov	r0, r7
 d60:	bl	5c0 <free@plt>
 d64:	mov	r0, r4
 d68:	add	sp, sp, #52	; 0x34
 d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 d70:	ldr	r3, [pc, #96]	; dd8 <dump_daq_initialize+0x218>
 d74:	ldr	r2, [pc, #96]	; ddc <dump_daq_initialize+0x21c>
 d78:	add	r3, pc, r3
 d7c:	ldmib	sp, {r0, r1}
 d80:	add	r3, r3, #28
 d84:	add	r2, pc, r2
 d88:	bl	620 <snprintf@plt>
 d8c:	mov	r0, r7
 d90:	bl	5c0 <free@plt>
 d94:	mvn	r4, #0
 d98:	b	d24 <dump_daq_initialize+0x164>
 d9c:	ldr	r3, [pc, #60]	; de0 <dump_daq_initialize+0x220>
 da0:	ldr	r2, [pc, #60]	; de4 <dump_daq_initialize+0x224>
 da4:	add	r3, pc, r3
 da8:	ldmib	sp, {r0, r1}
 dac:	add	r3, r3, #28
 db0:	add	r2, pc, r2
 db4:	bl	620 <snprintf@plt>
 db8:	mvn	r4, #1
 dbc:	b	d24 <dump_daq_initialize+0x164>
 dc0:	.word	0x00000284
 dc4:	.word	0x00000200
 dc8:	.word	0x0000021c
 dcc:	.word	0x00000208
 dd0:	.word	0x000001f4
 dd4:	.word	0x000001a4
 dd8:	.word	0x00000070
 ddc:	.word	0x00000110
 de0:	.word	0x00000044
 de4:	.word	0x000000b0

Disassembly of section .fini:

00000de8 <_fini>:
 de8:	push	{r3, lr}
 dec:	pop	{r3, pc}
