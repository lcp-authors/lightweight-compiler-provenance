
../repos/coreutils/src/unlink:     file format elf32-littlearm


Disassembly of section .init:

00010afc <.init>:
   10afc:	push	{r3, lr}
   10b00:	bl	10ef8 <abort@plt+0x1d8>
   10b04:	pop	{r3, pc}

Disassembly of section .plt:

00010b08 <calloc@plt-0x14>:
   10b08:	push	{lr}		; (str lr, [sp, #-4]!)
   10b0c:	ldr	lr, [pc, #4]	; 10b18 <calloc@plt-0x4>
   10b10:	add	lr, pc, lr
   10b14:	ldr	pc, [lr, #8]!
   10b18:	andeq	r5, r1, r8, ror #9

00010b1c <calloc@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #86016	; 0x15000
   10b24:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b28 <fputs_unlocked@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #86016	; 0x15000
   10b30:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b34 <raise@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #86016	; 0x15000
   10b3c:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b40 <strcmp@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #86016	; 0x15000
   10b48:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b4c <fflush@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #86016	; 0x15000
   10b54:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b58 <free@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #86016	; 0x15000
   10b60:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b64 <_exit@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #86016	; 0x15000
   10b6c:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b70 <memcpy@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #86016	; 0x15000
   10b78:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b7c <mbsinit@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #86016	; 0x15000
   10b84:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b88 <memcmp@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #86016	; 0x15000
   10b90:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b94 <fputc_unlocked@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #86016	; 0x15000
   10b9c:	ldr	pc, [ip, #1176]!	; 0x498

00010ba0 <dcgettext@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #86016	; 0x15000
   10ba8:	ldr	pc, [ip, #1168]!	; 0x490

00010bac <unlink@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #86016	; 0x15000
   10bb4:	ldr	pc, [ip, #1160]!	; 0x488

00010bb8 <realloc@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #86016	; 0x15000
   10bc0:	ldr	pc, [ip, #1152]!	; 0x480

00010bc4 <textdomain@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #86016	; 0x15000
   10bcc:	ldr	pc, [ip, #1144]!	; 0x478

00010bd0 <iswprint@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #86016	; 0x15000
   10bd8:	ldr	pc, [ip, #1136]!	; 0x470

00010bdc <fwrite@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #86016	; 0x15000
   10be4:	ldr	pc, [ip, #1128]!	; 0x468

00010be8 <lseek64@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #86016	; 0x15000
   10bf0:	ldr	pc, [ip, #1120]!	; 0x460

00010bf4 <__ctype_get_mb_cur_max@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #86016	; 0x15000
   10bfc:	ldr	pc, [ip, #1112]!	; 0x458

00010c00 <__fpending@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #86016	; 0x15000
   10c08:	ldr	pc, [ip, #1104]!	; 0x450

00010c0c <mbrtowc@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #86016	; 0x15000
   10c14:	ldr	pc, [ip, #1096]!	; 0x448

00010c18 <error@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #86016	; 0x15000
   10c20:	ldr	pc, [ip, #1088]!	; 0x440

00010c24 <malloc@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #86016	; 0x15000
   10c2c:	ldr	pc, [ip, #1080]!	; 0x438

00010c30 <__libc_start_main@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #86016	; 0x15000
   10c38:	ldr	pc, [ip, #1072]!	; 0x430

00010c3c <__freading@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #86016	; 0x15000
   10c44:	ldr	pc, [ip, #1064]!	; 0x428

00010c48 <__gmon_start__@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #86016	; 0x15000
   10c50:	ldr	pc, [ip, #1056]!	; 0x420

00010c54 <getopt_long@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #86016	; 0x15000
   10c5c:	ldr	pc, [ip, #1048]!	; 0x418

00010c60 <__ctype_b_loc@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #86016	; 0x15000
   10c68:	ldr	pc, [ip, #1040]!	; 0x410

00010c6c <exit@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #1032]!	; 0x408

00010c78 <strlen@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #1024]!	; 0x400

00010c84 <__errno_location@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c90 <__cxa_atexit@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c9c <memset@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #1000]!	; 0x3e8

00010ca8 <__printf_chk@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #992]!	; 0x3e0

00010cb4 <fileno@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #984]!	; 0x3d8

00010cc0 <__fprintf_chk@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #976]!	; 0x3d0

00010ccc <fclose@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #968]!	; 0x3c8

00010cd8 <fseeko64@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #960]!	; 0x3c0

00010ce4 <setlocale@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #952]!	; 0x3b8

00010cf0 <strrchr@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cfc <nl_langinfo@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #936]!	; 0x3a8

00010d08 <bindtextdomain@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #928]!	; 0x3a0

00010d14 <strncmp@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #920]!	; 0x398

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #912]!	; 0x390

Disassembly of section .text:

00010d2c <.text>:
   10d2c:	push	{r4, r5, r6, r7, r8, lr}
   10d30:	mov	r5, r0
   10d34:	sub	sp, sp, #24
   10d38:	ldr	r0, [r1]
   10d3c:	mov	r4, r1
   10d40:	bl	11544 <abort@plt+0x824>
   10d44:	ldr	r1, [pc, #316]	; 10e88 <abort@plt+0x168>
   10d48:	mov	r0, #6
   10d4c:	bl	10ce4 <setlocale@plt>
   10d50:	ldr	r1, [pc, #308]	; 10e8c <abort@plt+0x16c>
   10d54:	ldr	r0, [pc, #308]	; 10e90 <abort@plt+0x170>
   10d58:	bl	10d08 <bindtextdomain@plt>
   10d5c:	ldr	r0, [pc, #300]	; 10e90 <abort@plt+0x170>
   10d60:	bl	10bc4 <textdomain@plt>
   10d64:	ldr	r0, [pc, #296]	; 10e94 <abort@plt+0x174>
   10d68:	bl	14890 <abort@plt+0x3b70>
   10d6c:	ldr	r1, [pc, #292]	; 10e98 <abort@plt+0x178>
   10d70:	ldr	r2, [pc, #292]	; 10e9c <abort@plt+0x17c>
   10d74:	ldr	r3, [pc, #292]	; 10ea0 <abort@plt+0x180>
   10d78:	ldr	r1, [r1]
   10d7c:	ldr	r8, [pc, #288]	; 10ea4 <abort@plt+0x184>
   10d80:	mov	r6, #0
   10d84:	mov	r7, #1
   10d88:	str	r1, [sp]
   10d8c:	str	r2, [sp, #12]
   10d90:	str	r3, [sp, #8]
   10d94:	mov	r1, r4
   10d98:	ldr	r3, [pc, #264]	; 10ea8 <abort@plt+0x188>
   10d9c:	mov	r0, r5
   10da0:	str	r6, [sp, #16]
   10da4:	str	r7, [sp, #4]
   10da8:	ldr	r2, [pc, #252]	; 10eac <abort@plt+0x18c>
   10dac:	bl	1146c <abort@plt+0x74c>
   10db0:	ldr	r3, [r8]
   10db4:	cmp	r5, r3
   10db8:	ble	10de0 <abort@plt+0xc0>
   10dbc:	add	r2, r3, #1
   10dc0:	cmp	r5, r2
   10dc4:	bgt	10e48 <abort@plt+0x128>
   10dc8:	ldr	r0, [r4, r3, lsl #2]
   10dcc:	bl	10bac <unlink@plt>
   10dd0:	cmp	r0, #0
   10dd4:	bne	10e08 <abort@plt+0xe8>
   10dd8:	add	sp, sp, #24
   10ddc:	pop	{r4, r5, r6, r7, r8, pc}
   10de0:	mov	r2, #5
   10de4:	ldr	r1, [pc, #196]	; 10eb0 <abort@plt+0x190>
   10de8:	mov	r0, r6
   10dec:	bl	10ba0 <dcgettext@plt>
   10df0:	mov	r1, r6
   10df4:	mov	r2, r0
   10df8:	mov	r0, r6
   10dfc:	bl	10c18 <error@plt>
   10e00:	mov	r0, r7
   10e04:	bl	10fe4 <abort@plt+0x2c4>
   10e08:	bl	10c84 <__errno_location@plt>
   10e0c:	mov	r2, #5
   10e10:	ldr	r1, [pc, #156]	; 10eb4 <abort@plt+0x194>
   10e14:	ldr	r5, [r0]
   10e18:	mov	r0, r6
   10e1c:	bl	10ba0 <dcgettext@plt>
   10e20:	ldr	r3, [r8]
   10e24:	ldr	r1, [r4, r3, lsl #2]
   10e28:	mov	r6, r0
   10e2c:	mov	r0, #4
   10e30:	bl	131c4 <abort@plt+0x24a4>
   10e34:	mov	r2, r6
   10e38:	mov	r1, r5
   10e3c:	mov	r3, r0
   10e40:	mov	r0, r7
   10e44:	bl	10c18 <error@plt>
   10e48:	mov	r2, #5
   10e4c:	ldr	r1, [pc, #100]	; 10eb8 <abort@plt+0x198>
   10e50:	mov	r0, r6
   10e54:	bl	10ba0 <dcgettext@plt>
   10e58:	ldr	r3, [r8]
   10e5c:	add	r3, r3, #1
   10e60:	mov	r5, r0
   10e64:	ldr	r0, [r4, r3, lsl #2]
   10e68:	bl	13404 <abort@plt+0x26e4>
   10e6c:	mov	r2, r5
   10e70:	mov	r1, r6
   10e74:	mov	r3, r0
   10e78:	mov	r0, r6
   10e7c:	bl	10c18 <error@plt>
   10e80:	mov	r0, r7
   10e84:	bl	10fe4 <abort@plt+0x2c4>
   10e88:	andeq	r4, r1, r8, ror r9
   10e8c:	ldrdeq	r4, [r1], -r0
   10e90:	andeq	r4, r1, r8, lsr #20
   10e94:	ldrdeq	r1, [r1], -r0
   10e98:	andeq	r6, r2, r8, asr #1
   10e9c:	andeq	r4, r1, r8, ror #21
   10ea0:	andeq	r0, r1, r4, ror #31
   10ea4:	andeq	r6, r2, r8, lsl r1
   10ea8:	andeq	r4, r1, r4, lsr #20
   10eac:	andeq	r4, r1, ip, ror #17
   10eb0:	strdeq	r4, [r1], -r8
   10eb4:	andeq	r4, r1, ip, lsl fp
   10eb8:	andeq	r4, r1, r8, lsl #22
   10ebc:	mov	fp, #0
   10ec0:	mov	lr, #0
   10ec4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec8:	mov	r2, sp
   10ecc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ed0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ed4:	ldr	ip, [pc, #16]	; 10eec <abort@plt+0x1cc>
   10ed8:	push	{ip}		; (str ip, [sp, #-4]!)
   10edc:	ldr	r0, [pc, #12]	; 10ef0 <abort@plt+0x1d0>
   10ee0:	ldr	r3, [pc, #12]	; 10ef4 <abort@plt+0x1d4>
   10ee4:	bl	10c30 <__libc_start_main@plt>
   10ee8:	bl	10d20 <abort@plt>
   10eec:	andeq	r4, r1, ip, lsl #17
   10ef0:	andeq	r0, r1, ip, lsr #26
   10ef4:	andeq	r4, r1, ip, lsr #16
   10ef8:	ldr	r3, [pc, #20]	; 10f14 <abort@plt+0x1f4>
   10efc:	ldr	r2, [pc, #20]	; 10f18 <abort@plt+0x1f8>
   10f00:	add	r3, pc, r3
   10f04:	ldr	r2, [r3, r2]
   10f08:	cmp	r2, #0
   10f0c:	bxeq	lr
   10f10:	b	10c48 <__gmon_start__@plt>
   10f14:	strdeq	r5, [r1], -r8
   10f18:	strheq	r0, [r0], -ip
   10f1c:	ldr	r3, [pc, #28]	; 10f40 <abort@plt+0x220>
   10f20:	ldr	r0, [pc, #28]	; 10f44 <abort@plt+0x224>
   10f24:	sub	r3, r3, r0
   10f28:	cmp	r3, #6
   10f2c:	bxls	lr
   10f30:	ldr	r3, [pc, #16]	; 10f48 <abort@plt+0x228>
   10f34:	cmp	r3, #0
   10f38:	bxeq	lr
   10f3c:	bx	r3
   10f40:	andeq	r6, r2, r3, lsl r1
   10f44:	andeq	r6, r2, r0, lsl r1
   10f48:	andeq	r0, r0, r0
   10f4c:	ldr	r1, [pc, #36]	; 10f78 <abort@plt+0x258>
   10f50:	ldr	r0, [pc, #36]	; 10f7c <abort@plt+0x25c>
   10f54:	sub	r1, r1, r0
   10f58:	asr	r1, r1, #2
   10f5c:	add	r1, r1, r1, lsr #31
   10f60:	asrs	r1, r1, #1
   10f64:	bxeq	lr
   10f68:	ldr	r3, [pc, #16]	; 10f80 <abort@plt+0x260>
   10f6c:	cmp	r3, #0
   10f70:	bxeq	lr
   10f74:	bx	r3
   10f78:	andeq	r6, r2, r0, lsl r1
   10f7c:	andeq	r6, r2, r0, lsl r1
   10f80:	andeq	r0, r0, r0
   10f84:	push	{r4, lr}
   10f88:	ldr	r4, [pc, #24]	; 10fa8 <abort@plt+0x288>
   10f8c:	ldrb	r3, [r4]
   10f90:	cmp	r3, #0
   10f94:	popne	{r4, pc}
   10f98:	bl	10f1c <abort@plt+0x1fc>
   10f9c:	mov	r3, #1
   10fa0:	strb	r3, [r4]
   10fa4:	pop	{r4, pc}
   10fa8:	andeq	r6, r2, ip, lsr #2
   10fac:	ldr	r0, [pc, #40]	; 10fdc <abort@plt+0x2bc>
   10fb0:	ldr	r3, [r0]
   10fb4:	cmp	r3, #0
   10fb8:	bne	10fc0 <abort@plt+0x2a0>
   10fbc:	b	10f4c <abort@plt+0x22c>
   10fc0:	ldr	r3, [pc, #24]	; 10fe0 <abort@plt+0x2c0>
   10fc4:	cmp	r3, #0
   10fc8:	beq	10fbc <abort@plt+0x29c>
   10fcc:	push	{r4, lr}
   10fd0:	blx	r3
   10fd4:	pop	{r4, lr}
   10fd8:	b	10f4c <abort@plt+0x22c>
   10fdc:	andeq	r5, r2, r4, lsl pc
   10fe0:	andeq	r0, r0, r0
   10fe4:	subs	r6, r0, #0
   10fe8:	push	{r7, lr}
   10fec:	sub	sp, sp, #56	; 0x38
   10ff0:	beq	1102c <abort@plt+0x30c>
   10ff4:	ldr	r3, [pc, #616]	; 11264 <abort@plt+0x544>
   10ff8:	mov	r2, #5
   10ffc:	ldr	r1, [pc, #612]	; 11268 <abort@plt+0x548>
   11000:	mov	r0, #0
   11004:	ldr	r4, [r3]
   11008:	bl	10ba0 <dcgettext@plt>
   1100c:	ldr	r3, [pc, #600]	; 1126c <abort@plt+0x54c>
   11010:	mov	r1, #1
   11014:	ldr	r3, [r3]
   11018:	mov	r2, r0
   1101c:	mov	r0, r4
   11020:	bl	10cc0 <__fprintf_chk@plt>
   11024:	mov	r0, r6
   11028:	bl	10c6c <exit@plt>
   1102c:	mov	r2, #5
   11030:	ldr	r1, [pc, #568]	; 11270 <abort@plt+0x550>
   11034:	bl	10ba0 <dcgettext@plt>
   11038:	ldr	r3, [pc, #556]	; 1126c <abort@plt+0x54c>
   1103c:	ldr	r7, [pc, #560]	; 11274 <abort@plt+0x554>
   11040:	ldr	r4, [pc, #560]	; 11278 <abort@plt+0x558>
   11044:	ldr	r3, [r3]
   11048:	mov	r2, r3
   1104c:	mov	r1, r0
   11050:	mov	r0, #1
   11054:	bl	10ca8 <__printf_chk@plt>
   11058:	mov	r2, #5
   1105c:	ldr	r1, [pc, #536]	; 1127c <abort@plt+0x55c>
   11060:	mov	r0, r6
   11064:	bl	10ba0 <dcgettext@plt>
   11068:	ldr	r1, [r7]
   1106c:	bl	10b28 <fputs_unlocked@plt>
   11070:	mov	r2, #5
   11074:	ldr	r1, [pc, #516]	; 11280 <abort@plt+0x560>
   11078:	mov	r0, r6
   1107c:	bl	10ba0 <dcgettext@plt>
   11080:	ldr	r1, [r7]
   11084:	bl	10b28 <fputs_unlocked@plt>
   11088:	mov	r2, #5
   1108c:	ldr	r1, [pc, #496]	; 11284 <abort@plt+0x564>
   11090:	mov	r0, r6
   11094:	bl	10ba0 <dcgettext@plt>
   11098:	ldr	r1, [r7]
   1109c:	bl	10b28 <fputs_unlocked@plt>
   110a0:	ldm	r4!, {r0, r1, r2, r3}
   110a4:	mov	lr, sp
   110a8:	stmia	lr!, {r0, r1, r2, r3}
   110ac:	ldm	r4!, {r0, r1, r2, r3}
   110b0:	ldr	ip, [sp]
   110b4:	stmia	lr!, {r0, r1, r2, r3}
   110b8:	cmp	ip, #0
   110bc:	ldm	r4!, {r0, r1, r2, r3}
   110c0:	stmia	lr!, {r0, r1, r2, r3}
   110c4:	ldm	r4, {r0, r1}
   110c8:	moveq	r4, sp
   110cc:	stm	lr, {r0, r1}
   110d0:	beq	11100 <abort@plt+0x3e0>
   110d4:	ldr	r5, [pc, #428]	; 11288 <abort@plt+0x568>
   110d8:	mov	r4, sp
   110dc:	b	110ec <abort@plt+0x3cc>
   110e0:	ldr	ip, [r4, #8]!
   110e4:	cmp	ip, #0
   110e8:	beq	11100 <abort@plt+0x3e0>
   110ec:	mov	r1, ip
   110f0:	mov	r0, r5
   110f4:	bl	10b40 <strcmp@plt>
   110f8:	cmp	r0, #0
   110fc:	bne	110e0 <abort@plt+0x3c0>
   11100:	ldr	r4, [r4, #4]
   11104:	mov	r2, #5
   11108:	cmp	r4, #0
   1110c:	ldr	r1, [pc, #376]	; 1128c <abort@plt+0x56c>
   11110:	beq	111b8 <abort@plt+0x498>
   11114:	mov	r0, #0
   11118:	bl	10ba0 <dcgettext@plt>
   1111c:	ldr	r3, [pc, #364]	; 11290 <abort@plt+0x570>
   11120:	ldr	r2, [pc, #364]	; 11294 <abort@plt+0x574>
   11124:	mov	r1, r0
   11128:	mov	r0, #1
   1112c:	bl	10ca8 <__printf_chk@plt>
   11130:	mov	r1, #0
   11134:	mov	r0, #5
   11138:	bl	10ce4 <setlocale@plt>
   1113c:	cmp	r0, #0
   11140:	ldreq	r5, [pc, #320]	; 11288 <abort@plt+0x568>
   11144:	beq	11160 <abort@plt+0x440>
   11148:	mov	r2, #3
   1114c:	ldr	r1, [pc, #324]	; 11298 <abort@plt+0x578>
   11150:	bl	10d14 <strncmp@plt>
   11154:	ldr	r5, [pc, #300]	; 11288 <abort@plt+0x568>
   11158:	cmp	r0, #0
   1115c:	bne	11248 <abort@plt+0x528>
   11160:	mov	r2, #5
   11164:	ldr	r1, [pc, #304]	; 1129c <abort@plt+0x57c>
   11168:	mov	r0, #0
   1116c:	bl	10ba0 <dcgettext@plt>
   11170:	ldr	r3, [pc, #272]	; 11288 <abort@plt+0x568>
   11174:	ldr	r2, [pc, #276]	; 11290 <abort@plt+0x570>
   11178:	mov	r1, r0
   1117c:	mov	r0, #1
   11180:	bl	10ca8 <__printf_chk@plt>
   11184:	mov	r2, #5
   11188:	ldr	r1, [pc, #272]	; 112a0 <abort@plt+0x580>
   1118c:	mov	r0, #0
   11190:	bl	10ba0 <dcgettext@plt>
   11194:	ldr	r2, [pc, #264]	; 112a4 <abort@plt+0x584>
   11198:	cmp	r4, r5
   1119c:	ldr	r3, [pc, #260]	; 112a8 <abort@plt+0x588>
   111a0:	movne	r3, r2
   111a4:	mov	r1, r0
   111a8:	mov	r2, r4
   111ac:	mov	r0, #1
   111b0:	bl	10ca8 <__printf_chk@plt>
   111b4:	b	11024 <abort@plt+0x304>
   111b8:	mov	r0, r4
   111bc:	bl	10ba0 <dcgettext@plt>
   111c0:	ldr	r3, [pc, #200]	; 11290 <abort@plt+0x570>
   111c4:	ldr	r2, [pc, #200]	; 11294 <abort@plt+0x574>
   111c8:	mov	r1, r0
   111cc:	mov	r0, #1
   111d0:	bl	10ca8 <__printf_chk@plt>
   111d4:	mov	r1, r4
   111d8:	mov	r0, #5
   111dc:	bl	10ce4 <setlocale@plt>
   111e0:	cmp	r0, #0
   111e4:	beq	111fc <abort@plt+0x4dc>
   111e8:	mov	r2, #3
   111ec:	ldr	r1, [pc, #164]	; 11298 <abort@plt+0x578>
   111f0:	bl	10d14 <strncmp@plt>
   111f4:	cmp	r0, #0
   111f8:	bne	11240 <abort@plt+0x520>
   111fc:	mov	r2, #5
   11200:	ldr	r1, [pc, #148]	; 1129c <abort@plt+0x57c>
   11204:	mov	r0, #0
   11208:	bl	10ba0 <dcgettext@plt>
   1120c:	ldr	r3, [pc, #116]	; 11288 <abort@plt+0x568>
   11210:	ldr	r2, [pc, #120]	; 11290 <abort@plt+0x570>
   11214:	mov	r4, r3
   11218:	mov	r1, r0
   1121c:	mov	r0, #1
   11220:	bl	10ca8 <__printf_chk@plt>
   11224:	ldr	r1, [pc, #116]	; 112a0 <abort@plt+0x580>
   11228:	mov	r2, #5
   1122c:	mov	r0, #0
   11230:	bl	10ba0 <dcgettext@plt>
   11234:	ldr	r3, [pc, #108]	; 112a8 <abort@plt+0x588>
   11238:	mov	r1, r0
   1123c:	b	111a8 <abort@plt+0x488>
   11240:	ldr	r5, [pc, #64]	; 11288 <abort@plt+0x568>
   11244:	mov	r4, r5
   11248:	mov	r2, #5
   1124c:	ldr	r1, [pc, #88]	; 112ac <abort@plt+0x58c>
   11250:	mov	r0, #0
   11254:	bl	10ba0 <dcgettext@plt>
   11258:	ldr	r1, [r7]
   1125c:	bl	10b28 <fputs_unlocked@plt>
   11260:	b	11160 <abort@plt+0x440>
   11264:	andeq	r6, r2, r0, lsr #2
   11268:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1126c:	andeq	r6, r2, r8, lsr r1
   11270:	andeq	r4, r1, ip, lsl r9
   11274:	andeq	r6, r2, r4, lsr #2
   11278:			; <UNDEFINED> instruction: 0x000148b4
   1127c:	andeq	r4, r1, r0, asr #18
   11280:	andeq	r4, r1, ip, ror r9
   11284:	andeq	r4, r1, ip, lsr #19
   11288:	andeq	r4, r1, ip, ror #17
   1128c:	andeq	r4, r1, r4, ror #19
   11290:	strdeq	r4, [r1], -ip
   11294:	andeq	r4, r1, r4, lsr #20
   11298:	andeq	r4, r1, r4, lsr sl
   1129c:	andeq	r4, r1, r0, lsl #21
   112a0:	muleq	r1, ip, sl
   112a4:	andeq	r4, r1, r8, ror r9
   112a8:	andeq	r4, r1, r8, lsr fp
   112ac:	andeq	r4, r1, r8, lsr sl
   112b0:	ldr	r3, [pc, #4]	; 112bc <abort@plt+0x59c>
   112b4:	str	r0, [r3]
   112b8:	bx	lr
   112bc:	andeq	r6, r2, r0, lsr r1
   112c0:	ldr	r3, [pc, #4]	; 112cc <abort@plt+0x5ac>
   112c4:	strb	r0, [r3, #4]
   112c8:	bx	lr
   112cc:	andeq	r6, r2, r0, lsr r1
   112d0:	ldr	r3, [pc, #192]	; 11398 <abort@plt+0x678>
   112d4:	push	{r4, r5, r6, lr}
   112d8:	sub	sp, sp, #8
   112dc:	ldr	r0, [r3]
   112e0:	bl	13f94 <abort@plt+0x3274>
   112e4:	cmp	r0, #0
   112e8:	beq	1130c <abort@plt+0x5ec>
   112ec:	ldr	r4, [pc, #168]	; 1139c <abort@plt+0x67c>
   112f0:	ldrb	r3, [r4, #4]
   112f4:	cmp	r3, #0
   112f8:	beq	11328 <abort@plt+0x608>
   112fc:	bl	10c84 <__errno_location@plt>
   11300:	ldr	r3, [r0]
   11304:	cmp	r3, #32
   11308:	bne	11328 <abort@plt+0x608>
   1130c:	ldr	r3, [pc, #140]	; 113a0 <abort@plt+0x680>
   11310:	ldr	r0, [r3]
   11314:	bl	13f94 <abort@plt+0x3274>
   11318:	cmp	r0, #0
   1131c:	bne	11370 <abort@plt+0x650>
   11320:	add	sp, sp, #8
   11324:	pop	{r4, r5, r6, pc}
   11328:	mov	r2, #5
   1132c:	ldr	r1, [pc, #112]	; 113a4 <abort@plt+0x684>
   11330:	mov	r0, #0
   11334:	bl	10ba0 <dcgettext@plt>
   11338:	ldr	r4, [r4]
   1133c:	cmp	r4, #0
   11340:	mov	r5, r0
   11344:	beq	1137c <abort@plt+0x65c>
   11348:	bl	10c84 <__errno_location@plt>
   1134c:	ldr	r6, [r0]
   11350:	mov	r0, r4
   11354:	bl	1326c <abort@plt+0x254c>
   11358:	mov	r1, r6
   1135c:	str	r5, [sp]
   11360:	ldr	r2, [pc, #64]	; 113a8 <abort@plt+0x688>
   11364:	mov	r3, r0
   11368:	mov	r0, #0
   1136c:	bl	10c18 <error@plt>
   11370:	ldr	r3, [pc, #52]	; 113ac <abort@plt+0x68c>
   11374:	ldr	r0, [r3]
   11378:	bl	10b64 <_exit@plt>
   1137c:	bl	10c84 <__errno_location@plt>
   11380:	mov	r3, r5
   11384:	ldr	r2, [pc, #36]	; 113b0 <abort@plt+0x690>
   11388:	ldr	r1, [r0]
   1138c:	mov	r0, r4
   11390:	bl	10c18 <error@plt>
   11394:	b	11370 <abort@plt+0x650>
   11398:	andeq	r6, r2, r4, lsr #2
   1139c:	andeq	r6, r2, r0, lsr r1
   113a0:	andeq	r6, r2, r0, lsr #2
   113a4:	andeq	r4, r1, ip, lsr #23
   113a8:			; <UNDEFINED> instruction: 0x00014bb8
   113ac:	andeq	r6, r2, ip, asr #1
   113b0:			; <UNDEFINED> instruction: 0x00014bbc
   113b4:	push	{r4, r5, r6, r7, r8, lr}
   113b8:	cmp	r0, #2
   113bc:	ldr	r4, [pc, #148]	; 11458 <abort@plt+0x738>
   113c0:	mov	r5, #0
   113c4:	sub	sp, sp, #16
   113c8:	ldr	r6, [r4]
   113cc:	str	r5, [r4]
   113d0:	beq	113ec <abort@plt+0x6cc>
   113d4:	ldr	r3, [pc, #128]	; 1145c <abort@plt+0x73c>
   113d8:	mov	r2, #0
   113dc:	str	r6, [r4]
   113e0:	str	r2, [r3]
   113e4:	add	sp, sp, #16
   113e8:	pop	{r4, r5, r6, r7, r8, pc}
   113ec:	mov	r8, r3
   113f0:	mov	r7, r2
   113f4:	str	r5, [sp]
   113f8:	ldr	r3, [pc, #96]	; 11460 <abort@plt+0x740>
   113fc:	ldr	r2, [pc, #96]	; 11464 <abort@plt+0x744>
   11400:	bl	10c54 <getopt_long@plt>
   11404:	cmn	r0, #1
   11408:	beq	113d4 <abort@plt+0x6b4>
   1140c:	cmp	r0, #104	; 0x68
   11410:	beq	11448 <abort@plt+0x728>
   11414:	cmp	r0, #118	; 0x76
   11418:	bne	113d4 <abort@plt+0x6b4>
   1141c:	ldr	r3, [pc, #68]	; 11468 <abort@plt+0x748>
   11420:	add	ip, sp, #48	; 0x30
   11424:	mov	r2, r8
   11428:	ldr	r0, [r3]
   1142c:	mov	r1, r7
   11430:	str	ip, [sp]
   11434:	ldr	r3, [sp, #40]	; 0x28
   11438:	str	ip, [sp, #12]
   1143c:	bl	137f4 <abort@plt+0x2ad4>
   11440:	mov	r0, r5
   11444:	bl	10c6c <exit@plt>
   11448:	mov	r0, r5
   1144c:	ldr	r3, [sp, #44]	; 0x2c
   11450:	blx	r3
   11454:	b	113d4 <abort@plt+0x6b4>
   11458:	andeq	r6, r2, r8, lsr #2
   1145c:	andeq	r6, r2, r8, lsl r1
   11460:	andeq	r4, r1, r0, asr #23
   11464:	strdeq	r4, [r1], -r0
   11468:	andeq	r6, r2, r4, lsr #2
   1146c:	push	{r4, r5, r6, r7, r8, lr}
   11470:	sub	sp, sp, #16
   11474:	ldr	r5, [pc, #176]	; 1152c <abort@plt+0x80c>
   11478:	ldrb	r8, [sp, #44]	; 0x2c
   1147c:	ldr	r4, [pc, #172]	; 11530 <abort@plt+0x810>
   11480:	ldr	lr, [pc, #172]	; 11534 <abort@plt+0x814>
   11484:	cmp	r8, #0
   11488:	mov	r6, r2
   1148c:	movne	r2, r5
   11490:	mov	r5, #0
   11494:	mov	ip, #1
   11498:	moveq	r2, lr
   1149c:	mov	r7, r3
   114a0:	str	r5, [sp]
   114a4:	ldr	r3, [pc, #140]	; 11538 <abort@plt+0x818>
   114a8:	ldr	r8, [r4]
   114ac:	str	ip, [r4]
   114b0:	bl	10c54 <getopt_long@plt>
   114b4:	cmn	r0, #1
   114b8:	beq	11508 <abort@plt+0x7e8>
   114bc:	cmp	r0, #104	; 0x68
   114c0:	beq	11514 <abort@plt+0x7f4>
   114c4:	cmp	r0, #118	; 0x76
   114c8:	bne	114f8 <abort@plt+0x7d8>
   114cc:	ldr	r3, [pc, #104]	; 1153c <abort@plt+0x81c>
   114d0:	add	ip, sp, #52	; 0x34
   114d4:	mov	r2, r7
   114d8:	ldr	r0, [r3]
   114dc:	mov	r1, r6
   114e0:	str	ip, [sp]
   114e4:	ldr	r3, [sp, #40]	; 0x28
   114e8:	str	ip, [sp, #12]
   114ec:	bl	137f4 <abort@plt+0x2ad4>
   114f0:	mov	r0, r5
   114f4:	bl	10c6c <exit@plt>
   114f8:	ldr	r3, [pc, #64]	; 11540 <abort@plt+0x820>
   114fc:	ldr	r0, [r3]
   11500:	ldr	r3, [sp, #48]	; 0x30
   11504:	blx	r3
   11508:	str	r8, [r4]
   1150c:	add	sp, sp, #16
   11510:	pop	{r4, r5, r6, r7, r8, pc}
   11514:	mov	r0, r5
   11518:	ldr	r3, [sp, #48]	; 0x30
   1151c:	blx	r3
   11520:	str	r8, [r4]
   11524:	add	sp, sp, #16
   11528:	pop	{r4, r5, r6, r7, r8, pc}
   1152c:	andeq	r4, r1, r8, ror r9
   11530:	andeq	r6, r2, r8, lsr #2
   11534:	strdeq	r4, [r1], -r0
   11538:	andeq	r4, r1, r0, asr #23
   1153c:	andeq	r6, r2, r4, lsr #2
   11540:	andeq	r6, r2, ip, asr #1
   11544:	push	{r4, r5, r6, lr}
   11548:	subs	r4, r0, #0
   1154c:	beq	115c0 <abort@plt+0x8a0>
   11550:	mov	r1, #47	; 0x2f
   11554:	bl	10cf0 <strrchr@plt>
   11558:	subs	r5, r0, #0
   1155c:	beq	115ac <abort@plt+0x88c>
   11560:	add	r6, r5, #1
   11564:	sub	r3, r6, r4
   11568:	cmp	r3, #6
   1156c:	ble	115ac <abort@plt+0x88c>
   11570:	mov	r2, #7
   11574:	ldr	r1, [pc, #96]	; 115dc <abort@plt+0x8bc>
   11578:	sub	r0, r5, #6
   1157c:	bl	10d14 <strncmp@plt>
   11580:	cmp	r0, #0
   11584:	bne	115ac <abort@plt+0x88c>
   11588:	mov	r2, #3
   1158c:	ldr	r1, [pc, #76]	; 115e0 <abort@plt+0x8c0>
   11590:	mov	r0, r6
   11594:	bl	10d14 <strncmp@plt>
   11598:	cmp	r0, #0
   1159c:	movne	r4, r6
   115a0:	ldreq	r3, [pc, #60]	; 115e4 <abort@plt+0x8c4>
   115a4:	addeq	r4, r5, #4
   115a8:	streq	r4, [r3]
   115ac:	ldr	r2, [pc, #52]	; 115e8 <abort@plt+0x8c8>
   115b0:	ldr	r3, [pc, #52]	; 115ec <abort@plt+0x8cc>
   115b4:	str	r4, [r2]
   115b8:	str	r4, [r3]
   115bc:	pop	{r4, r5, r6, pc}
   115c0:	ldr	r3, [pc, #40]	; 115f0 <abort@plt+0x8d0>
   115c4:	mov	r2, #55	; 0x37
   115c8:	mov	r1, #1
   115cc:	ldr	r3, [r3]
   115d0:	ldr	r0, [pc, #28]	; 115f4 <abort@plt+0x8d4>
   115d4:	bl	10bdc <fwrite@plt>
   115d8:	bl	10d20 <abort@plt>
   115dc:	andeq	r4, r1, ip, lsr ip
   115e0:	andeq	r4, r1, r4, asr #24
   115e4:	andeq	r6, r2, r0, lsl r1
   115e8:	andeq	r6, r2, r8, lsr r1
   115ec:	andeq	r6, r2, r4, lsl r1
   115f0:	andeq	r6, r2, r0, lsr #2
   115f4:	andeq	r4, r1, r4, lsl #24
   115f8:	push	{r4, r5, r6, lr}
   115fc:	mov	r2, #48	; 0x30
   11600:	mov	r4, r1
   11604:	mov	r1, #0
   11608:	mov	r5, r0
   1160c:	bl	10c9c <memset@plt>
   11610:	cmp	r4, #10
   11614:	beq	11624 <abort@plt+0x904>
   11618:	str	r4, [r5]
   1161c:	mov	r0, r5
   11620:	pop	{r4, r5, r6, pc}
   11624:	bl	10d20 <abort@plt>
   11628:	push	{r4, r5, r6, lr}
   1162c:	mov	r4, r0
   11630:	mov	r5, r1
   11634:	bl	14208 <abort@plt+0x34e8>
   11638:	ldrb	r3, [r0]
   1163c:	bic	r3, r3, #32
   11640:	cmp	r3, #85	; 0x55
   11644:	bne	116a4 <abort@plt+0x984>
   11648:	ldrb	r3, [r0, #1]
   1164c:	bic	r3, r3, #32
   11650:	cmp	r3, #84	; 0x54
   11654:	bne	116e0 <abort@plt+0x9c0>
   11658:	ldrb	r3, [r0, #2]
   1165c:	bic	r3, r3, #32
   11660:	cmp	r3, #70	; 0x46
   11664:	bne	116e0 <abort@plt+0x9c0>
   11668:	ldrb	r3, [r0, #3]
   1166c:	cmp	r3, #45	; 0x2d
   11670:	bne	116e0 <abort@plt+0x9c0>
   11674:	ldrb	r3, [r0, #4]
   11678:	cmp	r3, #56	; 0x38
   1167c:	bne	116e0 <abort@plt+0x9c0>
   11680:	ldrb	r3, [r0, #5]
   11684:	cmp	r3, #0
   11688:	bne	116e0 <abort@plt+0x9c0>
   1168c:	ldrb	r2, [r4]
   11690:	ldr	r3, [pc, #152]	; 11730 <abort@plt+0xa10>
   11694:	ldr	r0, [pc, #152]	; 11734 <abort@plt+0xa14>
   11698:	cmp	r2, #96	; 0x60
   1169c:	movne	r0, r3
   116a0:	pop	{r4, r5, r6, pc}
   116a4:	cmp	r3, #71	; 0x47
   116a8:	bne	116e0 <abort@plt+0x9c0>
   116ac:	ldrb	r3, [r0, #1]
   116b0:	bic	r3, r3, #32
   116b4:	cmp	r3, #66	; 0x42
   116b8:	bne	116e0 <abort@plt+0x9c0>
   116bc:	ldrb	r3, [r0, #2]
   116c0:	cmp	r3, #49	; 0x31
   116c4:	bne	116e0 <abort@plt+0x9c0>
   116c8:	ldrb	r3, [r0, #3]
   116cc:	cmp	r3, #56	; 0x38
   116d0:	bne	116e0 <abort@plt+0x9c0>
   116d4:	ldrb	r3, [r0, #4]
   116d8:	cmp	r3, #48	; 0x30
   116dc:	beq	116f4 <abort@plt+0x9d4>
   116e0:	ldr	r3, [pc, #80]	; 11738 <abort@plt+0xa18>
   116e4:	cmp	r5, #9
   116e8:	ldr	r0, [pc, #76]	; 1173c <abort@plt+0xa1c>
   116ec:	movne	r0, r3
   116f0:	pop	{r4, r5, r6, pc}
   116f4:	ldrb	r3, [r0, #5]
   116f8:	cmp	r3, #51	; 0x33
   116fc:	bne	116e0 <abort@plt+0x9c0>
   11700:	ldrb	r3, [r0, #6]
   11704:	cmp	r3, #48	; 0x30
   11708:	bne	116e0 <abort@plt+0x9c0>
   1170c:	ldrb	r3, [r0, #7]
   11710:	cmp	r3, #0
   11714:	bne	116e0 <abort@plt+0x9c0>
   11718:	ldrb	r2, [r4]
   1171c:	ldr	r3, [pc, #28]	; 11740 <abort@plt+0xa20>
   11720:	ldr	r0, [pc, #28]	; 11744 <abort@plt+0xa24>
   11724:	cmp	r2, #96	; 0x60
   11728:	movne	r0, r3
   1172c:	pop	{r4, r5, r6, pc}
   11730:	andeq	r4, r1, r0, lsr #25
   11734:	muleq	r1, ip, ip
   11738:			; <UNDEFINED> instruction: 0x00014cb0
   1173c:	andeq	r4, r1, ip, lsr #25
   11740:	andeq	r4, r1, r8, lsr #25
   11744:	andeq	r4, r1, r4, lsr #25
   11748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1174c:	sub	sp, sp, #116	; 0x74
   11750:	mov	sl, r0
   11754:	str	r3, [sp, #24]
   11758:	mov	r3, #1
   1175c:	mov	r8, r1
   11760:	str	r2, [sp, #56]	; 0x38
   11764:	str	r3, [sp, #36]	; 0x24
   11768:	bl	10bf4 <__ctype_get_mb_cur_max@plt>
   1176c:	ldr	r3, [sp, #156]	; 0x9c
   11770:	mov	fp, r8
   11774:	mov	r2, #0
   11778:	lsr	r3, r3, #1
   1177c:	and	r3, r3, #1
   11780:	str	r2, [sp, #68]	; 0x44
   11784:	str	r3, [sp, #28]
   11788:	str	r2, [sp, #40]	; 0x28
   1178c:	str	r2, [sp, #44]	; 0x2c
   11790:	str	r2, [sp, #52]	; 0x34
   11794:	str	r2, [sp, #64]	; 0x40
   11798:	str	r2, [sp, #72]	; 0x48
   1179c:	str	sl, [sp, #32]
   117a0:	str	r0, [sp, #76]	; 0x4c
   117a4:	ldr	r3, [sp, #152]	; 0x98
   117a8:	cmp	r3, #10
   117ac:	ldrls	pc, [pc, r3, lsl #2]
   117b0:	b	12970 <abort@plt+0x1c50>
   117b4:	andeq	r1, r1, r0, ror #15
   117b8:	andeq	r1, r1, r8, asr #21
   117bc:	andeq	r1, r1, ip, ror #21
   117c0:	andeq	r1, r1, r0, lsl fp
   117c4:	andeq	r1, r1, ip, lsr ip
   117c8:	andeq	r1, r1, r0, lsl ip
   117cc:	andeq	r1, r1, r8, ror #23
   117d0:	andeq	r1, r1, r4, lsr #22
   117d4:	andeq	r1, r1, ip, lsr fp
   117d8:	andeq	r1, r1, ip, lsr fp
   117dc:	andeq	r1, r1, ip, lsr fp
   117e0:	mov	r3, #0
   117e4:	mov	r7, r3
   117e8:	str	r3, [sp, #28]
   117ec:	ldr	r3, [sp, #44]	; 0x2c
   117f0:	mov	sl, #0
   117f4:	eor	r3, r3, #1
   117f8:	str	r3, [sp, #60]	; 0x3c
   117fc:	ldr	r3, [sp, #24]
   11800:	cmn	r3, #1
   11804:	beq	11d68 <abort@plt+0x1048>
   11808:	ldr	r3, [sp, #24]
   1180c:	subs	r5, r3, sl
   11810:	movne	r5, #1
   11814:	cmp	r5, #0
   11818:	beq	11d80 <abort@plt+0x1060>
   1181c:	ldr	r3, [sp, #152]	; 0x98
   11820:	ldr	r8, [sp, #44]	; 0x2c
   11824:	cmp	r3, #2
   11828:	moveq	r8, #0
   1182c:	andne	r8, r8, #1
   11830:	ldr	r3, [sp, #52]	; 0x34
   11834:	adds	r9, r3, #0
   11838:	movne	r9, #1
   1183c:	ands	r6, r9, r8
   11840:	beq	121e8 <abort@plt+0x14c8>
   11844:	ldr	r2, [sp, #52]	; 0x34
   11848:	ldr	r1, [sp, #24]
   1184c:	cmp	r2, #1
   11850:	mov	r3, r2
   11854:	movls	r3, #0
   11858:	movhi	r3, #1
   1185c:	cmn	r1, #1
   11860:	movne	r3, #0
   11864:	cmp	r3, #0
   11868:	add	r4, sl, r2
   1186c:	beq	1187c <abort@plt+0xb5c>
   11870:	ldr	r0, [sp, #56]	; 0x38
   11874:	bl	10c78 <strlen@plt>
   11878:	str	r0, [sp, #24]
   1187c:	ldr	r3, [sp, #24]
   11880:	cmp	r3, r4
   11884:	ldr	r3, [sp, #56]	; 0x38
   11888:	add	r3, r3, sl
   1188c:	str	r3, [sp, #48]	; 0x30
   11890:	bcc	121f4 <abort@plt+0x14d4>
   11894:	mov	r0, r3
   11898:	ldr	r2, [sp, #52]	; 0x34
   1189c:	ldr	r1, [sp, #64]	; 0x40
   118a0:	bl	10b88 <memcmp@plt>
   118a4:	cmp	r0, #0
   118a8:	bne	121f4 <abort@plt+0x14d4>
   118ac:	ldr	r3, [sp, #28]
   118b0:	cmp	r3, #0
   118b4:	bne	12a70 <abort@plt+0x1d50>
   118b8:	ldr	r3, [sp, #48]	; 0x30
   118bc:	ldrb	r4, [r3]
   118c0:	cmp	r4, #126	; 0x7e
   118c4:	ldrls	pc, [pc, r4, lsl #2]
   118c8:	b	12188 <abort@plt+0x1468>
   118cc:	andeq	r1, r1, ip, lsr #31
   118d0:	andeq	r2, r1, r8, lsl #3
   118d4:	andeq	r2, r1, r8, lsl #3
   118d8:	andeq	r2, r1, r8, lsl #3
   118dc:	andeq	r2, r1, r8, lsl #3
   118e0:	andeq	r2, r1, r8, lsl #3
   118e4:	andeq	r2, r1, r8, lsl #3
   118e8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   118ec:	andeq	r1, r1, r4, ror pc
   118f0:	andeq	r2, r1, r0, ror r1
   118f4:	ldrdeq	r1, [r1], -r4
   118f8:			; <UNDEFINED> instruction: 0x00011eb8
   118fc:	andeq	r2, r1, ip, asr #2
   11900:	andeq	r2, r1, r8, lsr #2
   11904:	andeq	r2, r1, r8, lsl #3
   11908:	andeq	r2, r1, r8, lsl #3
   1190c:	andeq	r2, r1, r8, lsl #3
   11910:	andeq	r2, r1, r8, lsl #3
   11914:	andeq	r2, r1, r8, lsl #3
   11918:	andeq	r2, r1, r8, lsl #3
   1191c:	andeq	r2, r1, r8, lsl #3
   11920:	andeq	r2, r1, r8, lsl #3
   11924:	andeq	r2, r1, r8, lsl #3
   11928:	andeq	r2, r1, r8, lsl #3
   1192c:	andeq	r2, r1, r8, lsl #3
   11930:	andeq	r2, r1, r8, lsl #3
   11934:	andeq	r2, r1, r8, lsl #3
   11938:	andeq	r2, r1, r8, lsl #3
   1193c:	andeq	r2, r1, r8, lsl #3
   11940:	andeq	r2, r1, r8, lsl #3
   11944:	andeq	r2, r1, r8, lsl #3
   11948:	andeq	r2, r1, r8, lsl #3
   1194c:	andeq	r2, r1, r8, ror #2
   11950:	muleq	r1, ip, r0
   11954:	muleq	r1, ip, r0
   11958:	andeq	r1, r1, ip, lsr #25
   1195c:	muleq	r1, ip, r0
   11960:	andeq	r2, r1, r4, lsr r1
   11964:	muleq	r1, ip, r0
   11968:	andeq	r2, r1, r8, lsl #2
   1196c:	muleq	r1, ip, r0
   11970:	muleq	r1, ip, r0
   11974:	muleq	r1, ip, r0
   11978:	andeq	r2, r1, r4, lsr r1
   1197c:	andeq	r2, r1, r4, lsr r1
   11980:	andeq	r2, r1, r4, lsr r1
   11984:	andeq	r2, r1, r4, lsr r1
   11988:	andeq	r2, r1, r4, lsr r1
   1198c:	andeq	r2, r1, r4, lsr r1
   11990:	andeq	r2, r1, r4, lsr r1
   11994:	andeq	r2, r1, r4, lsr r1
   11998:	andeq	r2, r1, r4, lsr r1
   1199c:	andeq	r2, r1, r4, lsr r1
   119a0:	andeq	r2, r1, r4, lsr r1
   119a4:	andeq	r2, r1, r4, lsr r1
   119a8:	andeq	r2, r1, r4, lsr r1
   119ac:	andeq	r2, r1, r4, lsr r1
   119b0:	andeq	r2, r1, r4, lsr r1
   119b4:	andeq	r2, r1, r4, lsr r1
   119b8:	muleq	r1, ip, r0
   119bc:	muleq	r1, ip, r0
   119c0:	muleq	r1, ip, r0
   119c4:	muleq	r1, ip, r0
   119c8:	ldrdeq	r2, [r1], -r8
   119cc:	andeq	r2, r1, r8, lsl #3
   119d0:	andeq	r2, r1, r4, lsr r1
   119d4:	andeq	r2, r1, r4, lsr r1
   119d8:	andeq	r2, r1, r4, lsr r1
   119dc:	andeq	r2, r1, r4, lsr r1
   119e0:	andeq	r2, r1, r4, lsr r1
   119e4:	andeq	r2, r1, r4, lsr r1
   119e8:	andeq	r2, r1, r4, lsr r1
   119ec:	andeq	r2, r1, r4, lsr r1
   119f0:	andeq	r2, r1, r4, lsr r1
   119f4:	andeq	r2, r1, r4, lsr r1
   119f8:	andeq	r2, r1, r4, lsr r1
   119fc:	andeq	r2, r1, r4, lsr r1
   11a00:	andeq	r2, r1, r4, lsr r1
   11a04:	andeq	r2, r1, r4, lsr r1
   11a08:	andeq	r2, r1, r4, lsr r1
   11a0c:	andeq	r2, r1, r4, lsr r1
   11a10:	andeq	r2, r1, r4, lsr r1
   11a14:	andeq	r2, r1, r4, lsr r1
   11a18:	andeq	r2, r1, r4, lsr r1
   11a1c:	andeq	r2, r1, r4, lsr r1
   11a20:	andeq	r2, r1, r4, lsr r1
   11a24:	andeq	r2, r1, r4, lsr r1
   11a28:	andeq	r2, r1, r4, lsr r1
   11a2c:	andeq	r2, r1, r4, lsr r1
   11a30:	andeq	r2, r1, r4, lsr r1
   11a34:	andeq	r2, r1, r4, lsr r1
   11a38:	muleq	r1, ip, r0
   11a3c:	strdeq	r1, [r1], -r8
   11a40:	andeq	r2, r1, r4, lsr r1
   11a44:	muleq	r1, ip, r0
   11a48:	andeq	r2, r1, r4, lsr r1
   11a4c:	muleq	r1, ip, r0
   11a50:	andeq	r2, r1, r4, lsr r1
   11a54:	andeq	r2, r1, r4, lsr r1
   11a58:	andeq	r2, r1, r4, lsr r1
   11a5c:	andeq	r2, r1, r4, lsr r1
   11a60:	andeq	r2, r1, r4, lsr r1
   11a64:	andeq	r2, r1, r4, lsr r1
   11a68:	andeq	r2, r1, r4, lsr r1
   11a6c:	andeq	r2, r1, r4, lsr r1
   11a70:	andeq	r2, r1, r4, lsr r1
   11a74:	andeq	r2, r1, r4, lsr r1
   11a78:	andeq	r2, r1, r4, lsr r1
   11a7c:	andeq	r2, r1, r4, lsr r1
   11a80:	andeq	r2, r1, r4, lsr r1
   11a84:	andeq	r2, r1, r4, lsr r1
   11a88:	andeq	r2, r1, r4, lsr r1
   11a8c:	andeq	r2, r1, r4, lsr r1
   11a90:	andeq	r2, r1, r4, lsr r1
   11a94:	andeq	r2, r1, r4, lsr r1
   11a98:	andeq	r2, r1, r4, lsr r1
   11a9c:	andeq	r2, r1, r4, lsr r1
   11aa0:	andeq	r2, r1, r4, lsr r1
   11aa4:	andeq	r2, r1, r4, lsr r1
   11aa8:	andeq	r2, r1, r4, lsr r1
   11aac:	andeq	r2, r1, r4, lsr r1
   11ab0:	andeq	r2, r1, r4, lsr r1
   11ab4:	andeq	r2, r1, r4, lsr r1
   11ab8:	andeq	r1, r1, ip, lsl #25
   11abc:	muleq	r1, ip, r0
   11ac0:	andeq	r1, r1, ip, lsl #25
   11ac4:	andeq	r1, r1, ip, lsr #25
   11ac8:	mov	r3, #1
   11acc:	str	r3, [sp, #28]
   11ad0:	str	r3, [sp, #52]	; 0x34
   11ad4:	ldr	r3, [pc, #4000]	; 12a7c <abort@plt+0x1d5c>
   11ad8:	mov	r7, #0
   11adc:	str	r3, [sp, #64]	; 0x40
   11ae0:	mov	r3, #2
   11ae4:	str	r3, [sp, #152]	; 0x98
   11ae8:	b	117ec <abort@plt+0xacc>
   11aec:	ldr	r3, [sp, #28]
   11af0:	cmp	r3, #0
   11af4:	beq	11c50 <abort@plt+0xf30>
   11af8:	mov	r3, #1
   11afc:	str	r3, [sp, #52]	; 0x34
   11b00:	ldr	r3, [pc, #3956]	; 12a7c <abort@plt+0x1d5c>
   11b04:	mov	r7, #0
   11b08:	str	r3, [sp, #64]	; 0x40
   11b0c:	b	117ec <abort@plt+0xacc>
   11b10:	mov	r3, #1
   11b14:	str	r3, [sp, #44]	; 0x2c
   11b18:	str	r3, [sp, #52]	; 0x34
   11b1c:	str	r3, [sp, #28]
   11b20:	b	11ad4 <abort@plt+0xdb4>
   11b24:	mov	r3, #0
   11b28:	str	r3, [sp, #28]
   11b2c:	mov	r3, #1
   11b30:	str	r3, [sp, #44]	; 0x2c
   11b34:	mov	r7, #0
   11b38:	b	117ec <abort@plt+0xacc>
   11b3c:	ldr	r3, [sp, #152]	; 0x98
   11b40:	cmp	r3, #10
   11b44:	beq	11b88 <abort@plt+0xe68>
   11b48:	mov	r2, #5
   11b4c:	ldr	r1, [pc, #3884]	; 12a80 <abort@plt+0x1d60>
   11b50:	mov	r0, #0
   11b54:	bl	10ba0 <dcgettext@plt>
   11b58:	ldr	r2, [pc, #3872]	; 12a80 <abort@plt+0x1d60>
   11b5c:	cmp	r0, r2
   11b60:	str	r0, [sp, #164]	; 0xa4
   11b64:	beq	12b6c <abort@plt+0x1e4c>
   11b68:	mov	r2, #5
   11b6c:	ldr	r1, [pc, #3848]	; 12a7c <abort@plt+0x1d5c>
   11b70:	mov	r0, #0
   11b74:	bl	10ba0 <dcgettext@plt>
   11b78:	ldr	r2, [pc, #3836]	; 12a7c <abort@plt+0x1d5c>
   11b7c:	cmp	r0, r2
   11b80:	str	r0, [sp, #168]	; 0xa8
   11b84:	beq	12b5c <abort@plt+0x1e3c>
   11b88:	ldr	r7, [sp, #28]
   11b8c:	cmp	r7, #0
   11b90:	movne	r7, #0
   11b94:	bne	11bc8 <abort@plt+0xea8>
   11b98:	ldr	r3, [sp, #164]	; 0xa4
   11b9c:	ldrb	r3, [r3]
   11ba0:	cmp	r3, #0
   11ba4:	beq	12b7c <abort@plt+0x1e5c>
   11ba8:	ldr	r2, [sp, #164]	; 0xa4
   11bac:	ldr	r1, [sp, #32]
   11bb0:	cmp	fp, r7
   11bb4:	strbhi	r3, [r1, r7]
   11bb8:	ldrb	r3, [r2, #1]!
   11bbc:	add	r7, r7, #1
   11bc0:	cmp	r3, #0
   11bc4:	bne	11bb0 <abort@plt+0xe90>
   11bc8:	ldr	r0, [sp, #168]	; 0xa8
   11bcc:	bl	10c78 <strlen@plt>
   11bd0:	ldr	r3, [sp, #168]	; 0xa8
   11bd4:	str	r3, [sp, #64]	; 0x40
   11bd8:	mov	r3, #1
   11bdc:	str	r3, [sp, #44]	; 0x2c
   11be0:	str	r0, [sp, #52]	; 0x34
   11be4:	b	117ec <abort@plt+0xacc>
   11be8:	mov	r3, #1
   11bec:	str	r3, [sp, #44]	; 0x2c
   11bf0:	str	r3, [sp, #52]	; 0x34
   11bf4:	str	r3, [sp, #28]
   11bf8:	ldr	r3, [pc, #3716]	; 12a84 <abort@plt+0x1d64>
   11bfc:	mov	r7, #0
   11c00:	str	r3, [sp, #64]	; 0x40
   11c04:	mov	r3, #5
   11c08:	str	r3, [sp, #152]	; 0x98
   11c0c:	b	117ec <abort@plt+0xacc>
   11c10:	ldr	r3, [sp, #28]
   11c14:	cmp	r3, #0
   11c18:	beq	12918 <abort@plt+0x1bf8>
   11c1c:	ldr	r3, [sp, #28]
   11c20:	mov	r7, #0
   11c24:	str	r3, [sp, #44]	; 0x2c
   11c28:	mov	r3, #1
   11c2c:	str	r3, [sp, #52]	; 0x34
   11c30:	ldr	r3, [pc, #3660]	; 12a84 <abort@plt+0x1d64>
   11c34:	str	r3, [sp, #64]	; 0x40
   11c38:	b	117ec <abort@plt+0xacc>
   11c3c:	ldr	r3, [sp, #28]
   11c40:	cmp	r3, #0
   11c44:	mov	r3, #1
   11c48:	streq	r3, [sp, #44]	; 0x2c
   11c4c:	bne	11ad0 <abort@plt+0xdb0>
   11c50:	cmp	fp, #0
   11c54:	beq	12948 <abort@plt+0x1c28>
   11c58:	ldr	r3, [sp, #32]
   11c5c:	mov	r2, #39	; 0x27
   11c60:	mov	r7, #1
   11c64:	strb	r2, [r3]
   11c68:	mov	r3, #0
   11c6c:	str	r3, [sp, #28]
   11c70:	mov	r3, #1
   11c74:	str	r3, [sp, #52]	; 0x34
   11c78:	ldr	r3, [pc, #3580]	; 12a7c <abort@plt+0x1d5c>
   11c7c:	str	r3, [sp, #64]	; 0x40
   11c80:	mov	r3, #2
   11c84:	str	r3, [sp, #152]	; 0x98
   11c88:	b	117ec <abort@plt+0xacc>
   11c8c:	ldr	r3, [sp, #24]
   11c90:	cmn	r3, #1
   11c94:	beq	128ac <abort@plt+0x1b8c>
   11c98:	ldr	r3, [sp, #24]
   11c9c:	subs	r3, r3, #1
   11ca0:	movne	r3, #1
   11ca4:	cmp	r3, #0
   11ca8:	bne	11cb4 <abort@plt+0xf94>
   11cac:	cmp	sl, #0
   11cb0:	beq	120a0 <abort@plt+0x1380>
   11cb4:	ldr	r3, [sp, #152]	; 0x98
   11cb8:	mov	r5, #0
   11cbc:	sub	r2, r3, #2
   11cc0:	mov	r8, r5
   11cc4:	clz	r2, r2
   11cc8:	lsr	r2, r2, #5
   11ccc:	ldr	r3, [sp, #60]	; 0x3c
   11cd0:	ldr	r1, [sp, #28]
   11cd4:	orr	r3, r2, r3
   11cd8:	eor	r3, r3, #1
   11cdc:	orr	r3, r1, r3
   11ce0:	tst	r3, #255	; 0xff
   11ce4:	bne	12410 <abort@plt+0x16f0>
   11ce8:	cmp	r6, #0
   11cec:	bne	11e3c <abort@plt+0x111c>
   11cf0:	ldr	r3, [sp, #40]	; 0x28
   11cf4:	eor	r8, r8, #1
   11cf8:	and	r8, r8, r3
   11cfc:	add	sl, sl, #1
   11d00:	uxtb	r6, r8
   11d04:	cmp	r6, #0
   11d08:	beq	11d3c <abort@plt+0x101c>
   11d0c:	cmp	fp, r7
   11d10:	movhi	r2, #39	; 0x27
   11d14:	ldrhi	r3, [sp, #32]
   11d18:	strbhi	r2, [r3, r7]
   11d1c:	add	r3, r7, #1
   11d20:	cmp	fp, r3
   11d24:	movhi	r1, #39	; 0x27
   11d28:	ldrhi	r2, [sp, #32]
   11d2c:	add	r7, r7, #2
   11d30:	strbhi	r1, [r2, r3]
   11d34:	mov	r3, #0
   11d38:	str	r3, [sp, #40]	; 0x28
   11d3c:	cmp	r7, fp
   11d40:	ldrcc	r3, [sp, #32]
   11d44:	strbcc	r4, [r3, r7]
   11d48:	ldr	r3, [sp, #36]	; 0x24
   11d4c:	cmp	r5, #0
   11d50:	moveq	r3, #0
   11d54:	str	r3, [sp, #36]	; 0x24
   11d58:	ldr	r3, [sp, #24]
   11d5c:	add	r7, r7, #1
   11d60:	cmn	r3, #1
   11d64:	bne	11808 <abort@plt+0xae8>
   11d68:	ldr	r3, [sp, #56]	; 0x38
   11d6c:	ldrb	r5, [r3, sl]
   11d70:	adds	r5, r5, #0
   11d74:	movne	r5, #1
   11d78:	cmp	r5, #0
   11d7c:	bne	1181c <abort@plt+0xafc>
   11d80:	ldr	r3, [sp, #152]	; 0x98
   11d84:	ldr	r1, [sp, #28]
   11d88:	sub	r3, r3, #2
   11d8c:	clz	r3, r3
   11d90:	lsr	r3, r3, #5
   11d94:	and	r9, r1, r3
   11d98:	cmp	r7, #0
   11d9c:	movne	r2, #0
   11da0:	andeq	r2, r9, #1
   11da4:	cmp	r2, #0
   11da8:	bne	12784 <abort@plt+0x1a64>
   11dac:	eor	r2, r1, #1
   11db0:	ands	r3, r3, r2
   11db4:	beq	12c40 <abort@plt+0x1f20>
   11db8:	ldr	r2, [sp, #68]	; 0x44
   11dbc:	cmp	r2, #0
   11dc0:	beq	12c2c <abort@plt+0x1f0c>
   11dc4:	ldr	r3, [sp, #36]	; 0x24
   11dc8:	cmp	r3, #0
   11dcc:	bne	12be4 <abort@plt+0x1ec4>
   11dd0:	ldr	r2, [sp, #72]	; 0x48
   11dd4:	clz	r3, fp
   11dd8:	cmp	r2, #0
   11ddc:	lsr	r3, r3, #5
   11de0:	moveq	r3, #0
   11de4:	cmp	r3, #0
   11de8:	beq	12b84 <abort@plt+0x1e64>
   11dec:	str	r3, [sp, #68]	; 0x44
   11df0:	ldr	fp, [sp, #72]	; 0x48
   11df4:	b	117a4 <abort@plt+0xa84>
   11df8:	ldr	r3, [sp, #152]	; 0x98
   11dfc:	cmp	r3, #2
   11e00:	beq	12454 <abort@plt+0x1734>
   11e04:	ldr	r3, [sp, #44]	; 0x2c
   11e08:	ldr	r2, [sp, #28]
   11e0c:	and	r2, r3, r2
   11e10:	ands	r2, r9, r2
   11e14:	bne	12460 <abort@plt+0x1740>
   11e18:	mov	r4, #92	; 0x5c
   11e1c:	mov	r3, r4
   11e20:	ldr	r1, [sp, #44]	; 0x2c
   11e24:	cmp	r1, #0
   11e28:	moveq	r5, #0
   11e2c:	moveq	r8, r1
   11e30:	beq	11ccc <abort@plt+0xfac>
   11e34:	mov	r4, r3
   11e38:	mov	r5, #0
   11e3c:	ldr	r3, [sp, #28]
   11e40:	cmp	r3, #0
   11e44:	bne	12448 <abort@plt+0x1728>
   11e48:	ldr	r3, [sp, #40]	; 0x28
   11e4c:	eor	r9, r3, #1
   11e50:	and	r9, r9, r2
   11e54:	ands	r9, r9, #255	; 0xff
   11e58:	beq	11e9c <abort@plt+0x117c>
   11e5c:	cmp	fp, r7
   11e60:	movhi	r2, #39	; 0x27
   11e64:	ldrhi	r3, [sp, #32]
   11e68:	str	r9, [sp, #40]	; 0x28
   11e6c:	strbhi	r2, [r3, r7]
   11e70:	add	r3, r7, #1
   11e74:	cmp	fp, r3
   11e78:	movhi	r1, #36	; 0x24
   11e7c:	ldrhi	r2, [sp, #32]
   11e80:	strbhi	r1, [r2, r3]
   11e84:	add	r3, r7, #2
   11e88:	cmp	fp, r3
   11e8c:	add	r7, r7, #3
   11e90:	ldrhi	r2, [sp, #32]
   11e94:	movhi	r1, #39	; 0x27
   11e98:	strbhi	r1, [r2, r3]
   11e9c:	cmp	fp, r7
   11ea0:	movhi	r2, #92	; 0x5c
   11ea4:	ldrhi	r3, [sp, #32]
   11ea8:	add	sl, sl, #1
   11eac:	strbhi	r2, [r3, r7]
   11eb0:	add	r7, r7, #1
   11eb4:	b	11d3c <abort@plt+0x101c>
   11eb8:	ldr	r3, [sp, #152]	; 0x98
   11ebc:	mov	r4, #11
   11ec0:	sub	r2, r3, #2
   11ec4:	mov	r3, #118	; 0x76
   11ec8:	clz	r2, r2
   11ecc:	lsr	r2, r2, #5
   11ed0:	b	11e20 <abort@plt+0x1100>
   11ed4:	mov	r4, #10
   11ed8:	mov	r3, #110	; 0x6e
   11edc:	ldr	r2, [sp, #152]	; 0x98
   11ee0:	ldr	r1, [sp, #28]
   11ee4:	sub	r2, r2, #2
   11ee8:	clz	r2, r2
   11eec:	lsr	r2, r2, #5
   11ef0:	ands	r1, r1, r2
   11ef4:	beq	11e20 <abort@plt+0x1100>
   11ef8:	ldr	sl, [sp, #32]
   11efc:	mov	r8, fp
   11f00:	mov	r2, r1
   11f04:	mov	r3, #2
   11f08:	str	r3, [sp, #152]	; 0x98
   11f0c:	ldr	r9, [sp, #44]	; 0x2c
   11f10:	ldr	r3, [sp, #152]	; 0x98
   11f14:	and	r9, r9, r2
   11f18:	tst	r9, #255	; 0xff
   11f1c:	movne	r3, #4
   11f20:	str	r3, [sp, #152]	; 0x98
   11f24:	ldr	r3, [sp, #156]	; 0x9c
   11f28:	mov	ip, #0
   11f2c:	bic	r3, r3, #2
   11f30:	str	r3, [sp, #4]
   11f34:	ldr	r3, [sp, #168]	; 0xa8
   11f38:	ldr	r2, [sp, #56]	; 0x38
   11f3c:	str	r3, [sp, #16]
   11f40:	ldr	r3, [sp, #164]	; 0xa4
   11f44:	mov	r1, r8
   11f48:	str	r3, [sp, #12]
   11f4c:	ldr	r3, [sp, #152]	; 0x98
   11f50:	mov	r0, sl
   11f54:	str	r3, [sp]
   11f58:	str	ip, [sp, #8]
   11f5c:	ldr	r3, [sp, #24]
   11f60:	bl	11748 <abort@plt+0xa28>
   11f64:	mov	fp, r0
   11f68:	mov	r0, fp
   11f6c:	add	sp, sp, #116	; 0x74
   11f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f74:	ldr	r3, [sp, #152]	; 0x98
   11f78:	mov	r4, #8
   11f7c:	sub	r2, r3, #2
   11f80:	mov	r3, #98	; 0x62
   11f84:	clz	r2, r2
   11f88:	lsr	r2, r2, #5
   11f8c:	b	11e20 <abort@plt+0x1100>
   11f90:	ldr	r3, [sp, #152]	; 0x98
   11f94:	mov	r4, #7
   11f98:	sub	r2, r3, #2
   11f9c:	mov	r3, #97	; 0x61
   11fa0:	clz	r2, r2
   11fa4:	lsr	r2, r2, #5
   11fa8:	b	11e20 <abort@plt+0x1100>
   11fac:	ldr	r3, [sp, #44]	; 0x2c
   11fb0:	cmp	r3, #0
   11fb4:	beq	12798 <abort@plt+0x1a78>
   11fb8:	ldr	r3, [sp, #28]
   11fbc:	cmp	r3, #0
   11fc0:	bne	12a70 <abort@plt+0x1d50>
   11fc4:	ldr	r3, [sp, #152]	; 0x98
   11fc8:	sub	r2, r3, #2
   11fcc:	ldr	r3, [sp, #40]	; 0x28
   11fd0:	clz	r2, r2
   11fd4:	eor	r3, r3, #1
   11fd8:	lsr	r2, r2, #5
   11fdc:	ands	r3, r2, r3
   11fe0:	moveq	r1, r7
   11fe4:	beq	12028 <abort@plt+0x1308>
   11fe8:	cmp	fp, r7
   11fec:	movhi	r0, #39	; 0x27
   11ff0:	ldrhi	r1, [sp, #32]
   11ff4:	str	r3, [sp, #40]	; 0x28
   11ff8:	strbhi	r0, [r1, r7]
   11ffc:	add	r1, r7, #1
   12000:	cmp	fp, r1
   12004:	movhi	ip, #36	; 0x24
   12008:	ldrhi	r0, [sp, #32]
   1200c:	strbhi	ip, [r0, r1]
   12010:	add	r1, r7, #2
   12014:	cmp	fp, r1
   12018:	movhi	ip, #39	; 0x27
   1201c:	ldrhi	r0, [sp, #32]
   12020:	strbhi	ip, [r0, r1]
   12024:	add	r1, r7, #3
   12028:	cmp	fp, r1
   1202c:	movhi	r0, #92	; 0x5c
   12030:	ldrhi	r3, [sp, #32]
   12034:	add	r7, r1, #1
   12038:	strbhi	r0, [r3, r1]
   1203c:	cmp	r8, #0
   12040:	beq	12984 <abort@plt+0x1c64>
   12044:	ldr	r0, [sp, #24]
   12048:	add	r3, sl, #1
   1204c:	cmp	r3, r0
   12050:	bcs	128c0 <abort@plt+0x1ba0>
   12054:	ldr	r0, [sp, #56]	; 0x38
   12058:	ldrb	r3, [r0, r3]
   1205c:	sub	r3, r3, #48	; 0x30
   12060:	cmp	r3, #9
   12064:	bhi	128c0 <abort@plt+0x1ba0>
   12068:	cmp	fp, r7
   1206c:	movhi	r3, #48	; 0x30
   12070:	ldrhi	r0, [sp, #32]
   12074:	ldr	r5, [sp, #28]
   12078:	mov	r4, #48	; 0x30
   1207c:	strbhi	r3, [r0, r7]
   12080:	add	r3, r1, #2
   12084:	cmp	fp, r3
   12088:	movhi	r0, #48	; 0x30
   1208c:	ldrhi	ip, [sp, #32]
   12090:	add	r7, r1, #3
   12094:	strbhi	r0, [ip, r3]
   12098:	b	11ccc <abort@plt+0xfac>
   1209c:	mov	r5, #0
   120a0:	ldr	r3, [sp, #152]	; 0x98
   120a4:	sub	r2, r3, #2
   120a8:	ldr	r3, [sp, #28]
   120ac:	clz	r2, r2
   120b0:	lsr	r2, r2, #5
   120b4:	ands	r8, r3, r2
   120b8:	beq	11ccc <abort@plt+0xfac>
   120bc:	mov	r3, r8
   120c0:	mov	r2, r3
   120c4:	mov	r3, #2
   120c8:	ldr	sl, [sp, #32]
   120cc:	mov	r8, fp
   120d0:	str	r3, [sp, #152]	; 0x98
   120d4:	b	11f0c <abort@plt+0x11ec>
   120d8:	ldr	r3, [sp, #152]	; 0x98
   120dc:	cmp	r3, #2
   120e0:	beq	12804 <abort@plt+0x1ae4>
   120e4:	cmp	r3, #5
   120e8:	beq	127c4 <abort@plt+0x1aa4>
   120ec:	mov	r5, #0
   120f0:	sub	r2, r3, #2
   120f4:	mov	r8, r5
   120f8:	clz	r2, r2
   120fc:	mov	r4, #63	; 0x3f
   12100:	lsr	r2, r2, #5
   12104:	b	11ccc <abort@plt+0xfac>
   12108:	ldr	r3, [sp, #152]	; 0x98
   1210c:	cmp	r3, #2
   12110:	beq	12824 <abort@plt+0x1b04>
   12114:	mov	r2, #0
   12118:	str	r5, [sp, #68]	; 0x44
   1211c:	mov	r8, r2
   12120:	mov	r4, #39	; 0x27
   12124:	b	11ccc <abort@plt+0xfac>
   12128:	mov	r4, #13
   1212c:	mov	r3, #114	; 0x72
   12130:	b	11edc <abort@plt+0x11bc>
   12134:	ldr	r3, [sp, #152]	; 0x98
   12138:	mov	r8, #0
   1213c:	sub	r2, r3, #2
   12140:	clz	r2, r2
   12144:	lsr	r2, r2, #5
   12148:	b	11ccc <abort@plt+0xfac>
   1214c:	ldr	r3, [sp, #152]	; 0x98
   12150:	mov	r4, #12
   12154:	sub	r2, r3, #2
   12158:	mov	r3, #102	; 0x66
   1215c:	clz	r2, r2
   12160:	lsr	r2, r2, #5
   12164:	b	11e20 <abort@plt+0x1100>
   12168:	mov	r5, r6
   1216c:	b	120a0 <abort@plt+0x1380>
   12170:	ldr	r3, [sp, #152]	; 0x98
   12174:	sub	r2, r3, #2
   12178:	mov	r3, #116	; 0x74
   1217c:	clz	r2, r2
   12180:	lsr	r2, r2, #5
   12184:	b	11e20 <abort@plt+0x1100>
   12188:	ldr	r8, [sp, #76]	; 0x4c
   1218c:	cmp	r8, #1
   12190:	bne	12640 <abort@plt+0x1920>
   12194:	bl	10c60 <__ctype_b_loc@plt>
   12198:	sxth	r3, r4
   1219c:	mov	ip, r8
   121a0:	lsl	r3, r3, #1
   121a4:	ldr	r2, [r0]
   121a8:	ldrh	r3, [r2, r3]
   121ac:	and	r3, r3, #16384	; 0x4000
   121b0:	cmp	r3, #0
   121b4:	movne	r5, #1
   121b8:	moveq	r5, #0
   121bc:	moveq	r3, #1
   121c0:	movne	r3, #0
   121c4:	ldr	r2, [sp, #44]	; 0x2c
   121c8:	and	r3, r3, r2
   121cc:	ands	r8, r3, #255	; 0xff
   121d0:	bne	124d4 <abort@plt+0x17b4>
   121d4:	ldr	r3, [sp, #152]	; 0x98
   121d8:	sub	r2, r3, #2
   121dc:	clz	r2, r2
   121e0:	lsr	r2, r2, #5
   121e4:	b	11ccc <abort@plt+0xfac>
   121e8:	ldr	r3, [sp, #56]	; 0x38
   121ec:	add	r3, r3, sl
   121f0:	str	r3, [sp, #48]	; 0x30
   121f4:	ldr	r3, [sp, #48]	; 0x30
   121f8:	mov	r6, #0
   121fc:	ldrb	r4, [r3]
   12200:	cmp	r4, #126	; 0x7e
   12204:	ldrls	pc, [pc, r4, lsl #2]
   12208:	b	12188 <abort@plt+0x1468>
   1220c:	andeq	r1, r1, ip, lsr #31
   12210:	andeq	r2, r1, r8, lsl #3
   12214:	andeq	r2, r1, r8, lsl #3
   12218:	andeq	r2, r1, r8, lsl #3
   1221c:	andeq	r2, r1, r8, lsl #3
   12220:	andeq	r2, r1, r8, lsl #3
   12224:	andeq	r2, r1, r8, lsl #3
   12228:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1222c:	andeq	r1, r1, r4, ror pc
   12230:	andeq	r2, r1, r8, lsl #8
   12234:	ldrdeq	r1, [r1], -r4
   12238:			; <UNDEFINED> instruction: 0x00011eb8
   1223c:	andeq	r2, r1, ip, asr #2
   12240:	andeq	r2, r1, r8, lsr #2
   12244:	andeq	r2, r1, r8, lsl #3
   12248:	andeq	r2, r1, r8, lsl #3
   1224c:	andeq	r2, r1, r8, lsl #3
   12250:	andeq	r2, r1, r8, lsl #3
   12254:	andeq	r2, r1, r8, lsl #3
   12258:	andeq	r2, r1, r8, lsl #3
   1225c:	andeq	r2, r1, r8, lsl #3
   12260:	andeq	r2, r1, r8, lsl #3
   12264:	andeq	r2, r1, r8, lsl #3
   12268:	andeq	r2, r1, r8, lsl #3
   1226c:	andeq	r2, r1, r8, lsl #3
   12270:	andeq	r2, r1, r8, lsl #3
   12274:	andeq	r2, r1, r8, lsl #3
   12278:	andeq	r2, r1, r8, lsl #3
   1227c:	andeq	r2, r1, r8, lsl #3
   12280:	andeq	r2, r1, r8, lsl #3
   12284:	andeq	r2, r1, r8, lsl #3
   12288:	andeq	r2, r1, r8, lsl #3
   1228c:	andeq	r2, r1, r0, lsr #1
   12290:	muleq	r1, ip, r0
   12294:	muleq	r1, ip, r0
   12298:	andeq	r1, r1, ip, lsr #25
   1229c:	muleq	r1, ip, r0
   122a0:	andeq	r2, r1, r4, lsr r1
   122a4:	muleq	r1, ip, r0
   122a8:	andeq	r2, r1, r8, lsl #2
   122ac:	muleq	r1, ip, r0
   122b0:	muleq	r1, ip, r0
   122b4:	muleq	r1, ip, r0
   122b8:	andeq	r2, r1, r4, lsr r1
   122bc:	andeq	r2, r1, r4, lsr r1
   122c0:	andeq	r2, r1, r4, lsr r1
   122c4:	andeq	r2, r1, r4, lsr r1
   122c8:	andeq	r2, r1, r4, lsr r1
   122cc:	andeq	r2, r1, r4, lsr r1
   122d0:	andeq	r2, r1, r4, lsr r1
   122d4:	andeq	r2, r1, r4, lsr r1
   122d8:	andeq	r2, r1, r4, lsr r1
   122dc:	andeq	r2, r1, r4, lsr r1
   122e0:	andeq	r2, r1, r4, lsr r1
   122e4:	andeq	r2, r1, r4, lsr r1
   122e8:	andeq	r2, r1, r4, lsr r1
   122ec:	andeq	r2, r1, r4, lsr r1
   122f0:	andeq	r2, r1, r4, lsr r1
   122f4:	andeq	r2, r1, r4, lsr r1
   122f8:	muleq	r1, ip, r0
   122fc:	muleq	r1, ip, r0
   12300:	muleq	r1, ip, r0
   12304:	muleq	r1, ip, r0
   12308:	ldrdeq	r2, [r1], -r8
   1230c:	andeq	r2, r1, r8, lsl #3
   12310:	andeq	r2, r1, r4, lsr r1
   12314:	andeq	r2, r1, r4, lsr r1
   12318:	andeq	r2, r1, r4, lsr r1
   1231c:	andeq	r2, r1, r4, lsr r1
   12320:	andeq	r2, r1, r4, lsr r1
   12324:	andeq	r2, r1, r4, lsr r1
   12328:	andeq	r2, r1, r4, lsr r1
   1232c:	andeq	r2, r1, r4, lsr r1
   12330:	andeq	r2, r1, r4, lsr r1
   12334:	andeq	r2, r1, r4, lsr r1
   12338:	andeq	r2, r1, r4, lsr r1
   1233c:	andeq	r2, r1, r4, lsr r1
   12340:	andeq	r2, r1, r4, lsr r1
   12344:	andeq	r2, r1, r4, lsr r1
   12348:	andeq	r2, r1, r4, lsr r1
   1234c:	andeq	r2, r1, r4, lsr r1
   12350:	andeq	r2, r1, r4, lsr r1
   12354:	andeq	r2, r1, r4, lsr r1
   12358:	andeq	r2, r1, r4, lsr r1
   1235c:	andeq	r2, r1, r4, lsr r1
   12360:	andeq	r2, r1, r4, lsr r1
   12364:	andeq	r2, r1, r4, lsr r1
   12368:	andeq	r2, r1, r4, lsr r1
   1236c:	andeq	r2, r1, r4, lsr r1
   12370:	andeq	r2, r1, r4, lsr r1
   12374:	andeq	r2, r1, r4, lsr r1
   12378:	muleq	r1, ip, r0
   1237c:	strdeq	r1, [r1], -r8
   12380:	andeq	r2, r1, r4, lsr r1
   12384:	muleq	r1, ip, r0
   12388:	andeq	r2, r1, r4, lsr r1
   1238c:	muleq	r1, ip, r0
   12390:	andeq	r2, r1, r4, lsr r1
   12394:	andeq	r2, r1, r4, lsr r1
   12398:	andeq	r2, r1, r4, lsr r1
   1239c:	andeq	r2, r1, r4, lsr r1
   123a0:	andeq	r2, r1, r4, lsr r1
   123a4:	andeq	r2, r1, r4, lsr r1
   123a8:	andeq	r2, r1, r4, lsr r1
   123ac:	andeq	r2, r1, r4, lsr r1
   123b0:	andeq	r2, r1, r4, lsr r1
   123b4:	andeq	r2, r1, r4, lsr r1
   123b8:	andeq	r2, r1, r4, lsr r1
   123bc:	andeq	r2, r1, r4, lsr r1
   123c0:	andeq	r2, r1, r4, lsr r1
   123c4:	andeq	r2, r1, r4, lsr r1
   123c8:	andeq	r2, r1, r4, lsr r1
   123cc:	andeq	r2, r1, r4, lsr r1
   123d0:	andeq	r2, r1, r4, lsr r1
   123d4:	andeq	r2, r1, r4, lsr r1
   123d8:	andeq	r2, r1, r4, lsr r1
   123dc:	andeq	r2, r1, r4, lsr r1
   123e0:	andeq	r2, r1, r4, lsr r1
   123e4:	andeq	r2, r1, r4, lsr r1
   123e8:	andeq	r2, r1, r4, lsr r1
   123ec:	andeq	r2, r1, r4, lsr r1
   123f0:	andeq	r2, r1, r4, lsr r1
   123f4:	andeq	r2, r1, r4, lsr r1
   123f8:	andeq	r1, r1, ip, lsl #25
   123fc:	muleq	r1, ip, r0
   12400:	andeq	r1, r1, ip, lsl #25
   12404:	andeq	r1, r1, ip, lsr #25
   12408:	mov	r3, #116	; 0x74
   1240c:	b	11edc <abort@plt+0x11bc>
   12410:	ldr	r3, [sp, #160]	; 0xa0
   12414:	cmp	r3, #0
   12418:	beq	11ce8 <abort@plt+0xfc8>
   1241c:	lsr	r3, r4, #5
   12420:	ldr	r0, [sp, #160]	; 0xa0
   12424:	uxtb	r3, r3
   12428:	and	r1, r4, #31
   1242c:	ldr	r0, [r0, r3, lsl #2]
   12430:	lsr	r3, r0, r1
   12434:	tst	r3, #1
   12438:	beq	11ce8 <abort@plt+0xfc8>
   1243c:	ldr	r3, [sp, #28]
   12440:	cmp	r3, #0
   12444:	beq	11e48 <abort@plt+0x1128>
   12448:	ldr	sl, [sp, #32]
   1244c:	mov	r8, fp
   12450:	b	11f0c <abort@plt+0x11ec>
   12454:	ldr	r3, [sp, #28]
   12458:	cmp	r3, #0
   1245c:	bne	129b0 <abort@plt+0x1c90>
   12460:	add	sl, sl, #1
   12464:	ldr	r6, [sp, #40]	; 0x28
   12468:	mov	r5, #0
   1246c:	mov	r4, #92	; 0x5c
   12470:	b	11d04 <abort@plt+0xfe4>
   12474:	cmp	r9, r8
   12478:	bne	126e8 <abort@plt+0x19c8>
   1247c:	ldr	r0, [sp, #100]	; 0x64
   12480:	bl	10bd0 <iswprint@plt>
   12484:	add	r5, r5, r4
   12488:	cmp	r0, #0
   1248c:	add	r0, sp, #104	; 0x68
   12490:	moveq	r6, #0
   12494:	bl	10b7c <mbsinit@plt>
   12498:	cmp	r0, #0
   1249c:	beq	1267c <abort@plt+0x195c>
   124a0:	mov	r2, r6
   124a4:	mov	ip, r5
   124a8:	eor	r5, r2, #1
   124ac:	ldr	r4, [sp, #80]	; 0x50
   124b0:	ldr	r6, [sp, #84]	; 0x54
   124b4:	ldr	r7, [sp, #88]	; 0x58
   124b8:	uxtb	r5, r5
   124bc:	cmp	ip, #1
   124c0:	bls	129c0 <abort@plt+0x1ca0>
   124c4:	ldr	r3, [sp, #44]	; 0x2c
   124c8:	and	r8, r3, r5
   124cc:	mov	r5, r2
   124d0:	uxtb	r8, r8
   124d4:	add	r2, sl, ip
   124d8:	ldr	r0, [sp, #48]	; 0x30
   124dc:	mov	r1, #0
   124e0:	str	r5, [sp, #48]	; 0x30
   124e4:	ldr	r9, [sp, #28]
   124e8:	ldr	ip, [sp, #40]	; 0x28
   124ec:	ldr	r3, [sp, #32]
   124f0:	ldr	r5, [sp, #152]	; 0x98
   124f4:	b	125b0 <abort@plt+0x1890>
   124f8:	cmp	r9, #0
   124fc:	bne	128d4 <abort@plt+0x1bb4>
   12500:	eor	r1, ip, #1
   12504:	cmp	r5, #2
   12508:	movne	r1, #0
   1250c:	andeq	r1, r1, #1
   12510:	cmp	r1, #0
   12514:	beq	1254c <abort@plt+0x182c>
   12518:	cmp	fp, r7
   1251c:	movhi	ip, #39	; 0x27
   12520:	strbhi	ip, [r3, r7]
   12524:	add	ip, r7, #1
   12528:	cmp	fp, ip
   1252c:	movhi	lr, #36	; 0x24
   12530:	strbhi	lr, [r3, ip]
   12534:	add	ip, r7, #2
   12538:	cmp	fp, ip
   1253c:	movhi	lr, #39	; 0x27
   12540:	strbhi	lr, [r3, ip]
   12544:	add	r7, r7, #3
   12548:	mov	ip, r1
   1254c:	cmp	fp, r7
   12550:	movhi	r1, #92	; 0x5c
   12554:	strbhi	r1, [r3, r7]
   12558:	add	r1, r7, #1
   1255c:	cmp	fp, r1
   12560:	lsrhi	lr, r4, #6
   12564:	addhi	lr, lr, #48	; 0x30
   12568:	strbhi	lr, [r3, r1]
   1256c:	add	lr, r7, #2
   12570:	cmp	fp, lr
   12574:	lsrhi	r1, r4, #3
   12578:	andhi	r1, r1, #7
   1257c:	addhi	r1, r1, #48	; 0x30
   12580:	add	sl, sl, #1
   12584:	strbhi	r1, [r3, lr]
   12588:	and	r4, r4, #7
   1258c:	cmp	r2, sl
   12590:	add	r4, r4, #48	; 0x30
   12594:	add	r7, r7, #3
   12598:	bls	128f8 <abort@plt+0x1bd8>
   1259c:	mov	r1, r8
   125a0:	cmp	fp, r7
   125a4:	strbhi	r4, [r3, r7]
   125a8:	ldrb	r4, [r0, #1]!
   125ac:	add	r7, r7, #1
   125b0:	cmp	r8, #0
   125b4:	bne	124f8 <abort@plt+0x17d8>
   125b8:	cmp	r6, #0
   125bc:	bne	1260c <abort@plt+0x18ec>
   125c0:	eor	r6, r1, #1
   125c4:	and	r6, r6, ip
   125c8:	add	sl, sl, #1
   125cc:	cmp	r2, sl
   125d0:	uxtb	r6, r6
   125d4:	bls	12634 <abort@plt+0x1914>
   125d8:	cmp	r6, #0
   125dc:	beq	125a0 <abort@plt+0x1880>
   125e0:	cmp	fp, r7
   125e4:	movhi	ip, #39	; 0x27
   125e8:	strbhi	ip, [r3, r7]
   125ec:	add	ip, r7, #1
   125f0:	cmp	fp, ip
   125f4:	movhi	lr, #39	; 0x27
   125f8:	strbhi	lr, [r3, ip]
   125fc:	add	r7, r7, #2
   12600:	mov	r6, r8
   12604:	mov	ip, r8
   12608:	b	125a0 <abort@plt+0x1880>
   1260c:	cmp	fp, r7
   12610:	eor	r6, r1, #1
   12614:	movhi	lr, #92	; 0x5c
   12618:	and	r6, r6, ip
   1261c:	add	sl, sl, #1
   12620:	strbhi	lr, [r3, r7]
   12624:	cmp	r2, sl
   12628:	add	r7, r7, #1
   1262c:	uxtb	r6, r6
   12630:	bhi	125d8 <abort@plt+0x18b8>
   12634:	str	ip, [sp, #40]	; 0x28
   12638:	ldr	r5, [sp, #48]	; 0x30
   1263c:	b	11d04 <abort@plt+0xfe4>
   12640:	ldr	r3, [sp, #24]
   12644:	cmn	r3, #1
   12648:	mov	r3, #0
   1264c:	str	r3, [sp, #104]	; 0x68
   12650:	str	r3, [sp, #108]	; 0x6c
   12654:	beq	12974 <abort@plt+0x1c54>
   12658:	mov	r2, r5
   1265c:	mov	r3, #0
   12660:	str	r7, [sp, #88]	; 0x58
   12664:	ldr	r7, [sp, #152]	; 0x98
   12668:	str	r5, [sp, #92]	; 0x5c
   1266c:	str	r6, [sp, #84]	; 0x54
   12670:	mov	r5, r3
   12674:	mov	r6, r2
   12678:	str	r4, [sp, #80]	; 0x50
   1267c:	ldr	r3, [sp, #56]	; 0x38
   12680:	add	r9, sl, r5
   12684:	add	r8, r3, r9
   12688:	ldr	r3, [sp, #24]
   1268c:	mov	r1, r8
   12690:	sub	r2, r3, r9
   12694:	add	r0, sp, #100	; 0x64
   12698:	add	r3, sp, #104	; 0x68
   1269c:	bl	1423c <abort@plt+0x351c>
   126a0:	subs	r4, r0, #0
   126a4:	beq	12a4c <abort@plt+0x1d2c>
   126a8:	cmn	r4, #1
   126ac:	beq	12a2c <abort@plt+0x1d0c>
   126b0:	cmn	r4, #2
   126b4:	beq	129cc <abort@plt+0x1cac>
   126b8:	ldr	r2, [sp, #28]
   126bc:	cmp	r7, #2
   126c0:	movne	r2, #0
   126c4:	andeq	r2, r2, #1
   126c8:	cmp	r2, #0
   126cc:	beq	1247c <abort@plt+0x175c>
   126d0:	cmp	r4, #1
   126d4:	beq	1247c <abort@plt+0x175c>
   126d8:	sub	r3, r4, #1
   126dc:	add	r9, r3, r9
   126e0:	ldr	r3, [sp, #56]	; 0x38
   126e4:	add	r9, r3, r9
   126e8:	ldrb	r3, [r8, #1]!
   126ec:	sub	r3, r3, #91	; 0x5b
   126f0:	cmp	r3, #33	; 0x21
   126f4:	ldrls	pc, [pc, r3, lsl #2]
   126f8:	b	12474 <abort@plt+0x1754>
   126fc:	andeq	r2, r1, r4, lsl #15
   12700:	andeq	r2, r1, r4, lsl #15
   12704:	andeq	r2, r1, r4, ror r4
   12708:	andeq	r2, r1, r4, lsl #15
   1270c:	andeq	r2, r1, r4, ror r4
   12710:	andeq	r2, r1, r4, lsl #15
   12714:	andeq	r2, r1, r4, ror r4
   12718:	andeq	r2, r1, r4, ror r4
   1271c:	andeq	r2, r1, r4, ror r4
   12720:	andeq	r2, r1, r4, ror r4
   12724:	andeq	r2, r1, r4, ror r4
   12728:	andeq	r2, r1, r4, ror r4
   1272c:	andeq	r2, r1, r4, ror r4
   12730:	andeq	r2, r1, r4, ror r4
   12734:	andeq	r2, r1, r4, ror r4
   12738:	andeq	r2, r1, r4, ror r4
   1273c:	andeq	r2, r1, r4, ror r4
   12740:	andeq	r2, r1, r4, ror r4
   12744:	andeq	r2, r1, r4, ror r4
   12748:	andeq	r2, r1, r4, ror r4
   1274c:	andeq	r2, r1, r4, ror r4
   12750:	andeq	r2, r1, r4, ror r4
   12754:	andeq	r2, r1, r4, ror r4
   12758:	andeq	r2, r1, r4, ror r4
   1275c:	andeq	r2, r1, r4, ror r4
   12760:	andeq	r2, r1, r4, ror r4
   12764:	andeq	r2, r1, r4, ror r4
   12768:	andeq	r2, r1, r4, ror r4
   1276c:	andeq	r2, r1, r4, ror r4
   12770:	andeq	r2, r1, r4, ror r4
   12774:	andeq	r2, r1, r4, ror r4
   12778:	andeq	r2, r1, r4, ror r4
   1277c:	andeq	r2, r1, r4, ror r4
   12780:	andeq	r2, r1, r4, lsl #15
   12784:	mov	r3, #2
   12788:	ldr	sl, [sp, #32]
   1278c:	mov	r8, fp
   12790:	str	r3, [sp, #152]	; 0x98
   12794:	b	11f0c <abort@plt+0x11ec>
   12798:	ldr	r3, [sp, #156]	; 0x9c
   1279c:	tst	r3, #1
   127a0:	bne	128cc <abort@plt+0x1bac>
   127a4:	ldr	r3, [sp, #152]	; 0x98
   127a8:	ldr	r4, [sp, #44]	; 0x2c
   127ac:	sub	r2, r3, #2
   127b0:	mov	r5, #0
   127b4:	clz	r2, r2
   127b8:	mov	r8, r4
   127bc:	lsr	r2, r2, #5
   127c0:	b	11ccc <abort@plt+0xfac>
   127c4:	ldr	r3, [sp, #156]	; 0x9c
   127c8:	ands	r9, r3, #4
   127cc:	beq	12904 <abort@plt+0x1be4>
   127d0:	ldr	r2, [sp, #24]
   127d4:	add	r3, sl, #2
   127d8:	cmp	r3, r2
   127dc:	bcs	127f0 <abort@plt+0x1ad0>
   127e0:	ldr	r2, [sp, #48]	; 0x30
   127e4:	ldrb	r4, [r2, #1]
   127e8:	cmp	r4, #63	; 0x3f
   127ec:	beq	12a8c <abort@plt+0x1d6c>
   127f0:	mov	r2, #0
   127f4:	mov	r8, r2
   127f8:	mov	r5, r2
   127fc:	mov	r4, #63	; 0x3f
   12800:	b	11ccc <abort@plt+0xfac>
   12804:	ldr	r3, [sp, #28]
   12808:	cmp	r3, #0
   1280c:	bne	12b30 <abort@plt+0x1e10>
   12810:	mov	r2, r5
   12814:	mov	r8, r3
   12818:	mov	r5, #0
   1281c:	mov	r4, #63	; 0x3f
   12820:	b	11ccc <abort@plt+0xfac>
   12824:	ldr	r3, [sp, #28]
   12828:	cmp	r3, #0
   1282c:	bne	12b30 <abort@plt+0x1e10>
   12830:	ldr	r2, [sp, #72]	; 0x48
   12834:	adds	r3, fp, #0
   12838:	movne	r3, #1
   1283c:	cmp	r2, #0
   12840:	movne	r3, #0
   12844:	cmp	r3, #0
   12848:	strne	fp, [sp, #72]	; 0x48
   1284c:	movne	fp, #0
   12850:	bne	1288c <abort@plt+0x1b6c>
   12854:	cmp	fp, r7
   12858:	movhi	r2, #39	; 0x27
   1285c:	ldrhi	r3, [sp, #32]
   12860:	strbhi	r2, [r3, r7]
   12864:	add	r3, r7, #1
   12868:	cmp	fp, r3
   1286c:	movhi	r1, #92	; 0x5c
   12870:	ldrhi	r2, [sp, #32]
   12874:	strbhi	r1, [r2, r3]
   12878:	add	r3, r7, #2
   1287c:	cmp	fp, r3
   12880:	movhi	r1, #39	; 0x27
   12884:	ldrhi	r2, [sp, #32]
   12888:	strbhi	r1, [r2, r3]
   1288c:	ldr	r3, [sp, #28]
   12890:	add	r7, r7, #3
   12894:	mov	r2, r5
   12898:	mov	r8, r3
   1289c:	str	r5, [sp, #68]	; 0x44
   128a0:	str	r3, [sp, #40]	; 0x28
   128a4:	mov	r4, #39	; 0x27
   128a8:	b	11ccc <abort@plt+0xfac>
   128ac:	ldr	r3, [sp, #56]	; 0x38
   128b0:	ldrb	r3, [r3, #1]
   128b4:	adds	r3, r3, #0
   128b8:	movne	r3, #1
   128bc:	b	11ca4 <abort@plt+0xf84>
   128c0:	ldr	r5, [sp, #28]
   128c4:	mov	r4, #48	; 0x30
   128c8:	b	11ccc <abort@plt+0xfac>
   128cc:	add	sl, sl, #1
   128d0:	b	117fc <abort@plt+0xadc>
   128d4:	mov	sl, r3
   128d8:	ldr	r3, [sp, #28]
   128dc:	mov	r8, fp
   128e0:	str	r3, [sp, #44]	; 0x2c
   128e4:	ldr	r3, [sp, #152]	; 0x98
   128e8:	sub	r2, r3, #2
   128ec:	clz	r2, r2
   128f0:	lsr	r2, r2, #5
   128f4:	b	11f0c <abort@plt+0x11ec>
   128f8:	str	ip, [sp, #40]	; 0x28
   128fc:	ldr	r5, [sp, #48]	; 0x30
   12900:	b	11d3c <abort@plt+0x101c>
   12904:	mov	r2, r9
   12908:	mov	r8, r9
   1290c:	mov	r5, #0
   12910:	mov	r4, #63	; 0x3f
   12914:	b	11ccc <abort@plt+0xfac>
   12918:	cmp	fp, #0
   1291c:	beq	12994 <abort@plt+0x1c74>
   12920:	ldr	r1, [sp, #32]
   12924:	mov	r3, #34	; 0x22
   12928:	mov	r2, #1
   1292c:	strb	r3, [r1]
   12930:	ldr	r3, [pc, #332]	; 12a84 <abort@plt+0x1d64>
   12934:	str	r2, [sp, #52]	; 0x34
   12938:	mov	r7, r2
   1293c:	str	r2, [sp, #44]	; 0x2c
   12940:	str	r3, [sp, #64]	; 0x40
   12944:	b	117ec <abort@plt+0xacc>
   12948:	ldr	r3, [pc, #300]	; 12a7c <abort@plt+0x1d5c>
   1294c:	str	r3, [sp, #64]	; 0x40
   12950:	mov	r3, #0
   12954:	str	r3, [sp, #28]
   12958:	mov	r3, #1
   1295c:	str	r3, [sp, #52]	; 0x34
   12960:	mov	r7, r3
   12964:	mov	r3, #2
   12968:	str	r3, [sp, #152]	; 0x98
   1296c:	b	117ec <abort@plt+0xacc>
   12970:	bl	10d20 <abort@plt>
   12974:	ldr	r0, [sp, #56]	; 0x38
   12978:	bl	10c78 <strlen@plt>
   1297c:	str	r0, [sp, #24]
   12980:	b	12658 <abort@plt+0x1938>
   12984:	mov	r5, r8
   12988:	mov	r4, #48	; 0x30
   1298c:	ldr	r8, [sp, #44]	; 0x2c
   12990:	b	11ccc <abort@plt+0xfac>
   12994:	mov	r3, #1
   12998:	str	r3, [sp, #52]	; 0x34
   1299c:	mov	r7, r3
   129a0:	str	r3, [sp, #44]	; 0x2c
   129a4:	ldr	r3, [pc, #216]	; 12a84 <abort@plt+0x1d64>
   129a8:	str	r3, [sp, #64]	; 0x40
   129ac:	b	117ec <abort@plt+0xacc>
   129b0:	ldr	sl, [sp, #32]
   129b4:	mov	r8, fp
   129b8:	mov	r2, r3
   129bc:	b	11f0c <abort@plt+0x11ec>
   129c0:	mov	r3, r5
   129c4:	mov	r5, r2
   129c8:	b	121c4 <abort@plt+0x14a4>
   129cc:	ldr	r1, [sp, #24]
   129d0:	mov	r2, r5
   129d4:	cmp	r1, r9
   129d8:	mov	ip, r5
   129dc:	ldr	r4, [sp, #80]	; 0x50
   129e0:	ldr	r5, [sp, #92]	; 0x5c
   129e4:	ldr	r6, [sp, #84]	; 0x54
   129e8:	ldr	r7, [sp, #88]	; 0x58
   129ec:	bls	12a20 <abort@plt+0x1d00>
   129f0:	ldrb	r3, [r8]
   129f4:	cmp	r3, #0
   129f8:	bne	12a0c <abort@plt+0x1cec>
   129fc:	b	12a24 <abort@plt+0x1d04>
   12a00:	ldrb	r3, [r8, #1]!
   12a04:	cmp	r3, #0
   12a08:	beq	12b24 <abort@plt+0x1e04>
   12a0c:	add	r2, r2, #1
   12a10:	add	r3, sl, r2
   12a14:	cmp	r1, r3
   12a18:	bhi	12a00 <abort@plt+0x1ce0>
   12a1c:	mov	ip, r2
   12a20:	mov	r3, #0
   12a24:	mov	r2, r3
   12a28:	b	124bc <abort@plt+0x179c>
   12a2c:	mov	r3, #0
   12a30:	mov	ip, r5
   12a34:	ldr	r4, [sp, #80]	; 0x50
   12a38:	ldr	r5, [sp, #92]	; 0x5c
   12a3c:	ldr	r6, [sp, #84]	; 0x54
   12a40:	ldr	r7, [sp, #88]	; 0x58
   12a44:	mov	r2, r3
   12a48:	b	124bc <abort@plt+0x179c>
   12a4c:	mov	r3, r6
   12a50:	mov	ip, r5
   12a54:	eor	r5, r3, #1
   12a58:	mov	r2, r6
   12a5c:	ldr	r4, [sp, #80]	; 0x50
   12a60:	ldr	r6, [sp, #84]	; 0x54
   12a64:	ldr	r7, [sp, #88]	; 0x58
   12a68:	uxtb	r5, r5
   12a6c:	b	124bc <abort@plt+0x179c>
   12a70:	ldr	sl, [sp, #32]
   12a74:	mov	r8, fp
   12a78:	b	128e0 <abort@plt+0x1bc0>
   12a7c:			; <UNDEFINED> instruction: 0x00014cb0
   12a80:			; <UNDEFINED> instruction: 0x00014cb4
   12a84:	andeq	r4, r1, ip, lsr #25
   12a88:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12a8c:	ldr	r2, [sp, #56]	; 0x38
   12a90:	ldrb	r1, [r2, r3]
   12a94:	sub	r2, r1, #33	; 0x21
   12a98:	uxtb	r2, r2
   12a9c:	cmp	r2, #29
   12aa0:	bhi	12b40 <abort@plt+0x1e20>
   12aa4:	ldr	r0, [pc, #-36]	; 12a88 <abort@plt+0x1d68>
   12aa8:	mov	ip, #1
   12aac:	ands	r2, r0, ip, lsl r2
   12ab0:	beq	12b50 <abort@plt+0x1e30>
   12ab4:	ldr	r2, [sp, #28]
   12ab8:	cmp	r2, #0
   12abc:	bne	12c50 <abort@plt+0x1f30>
   12ac0:	cmp	fp, r7
   12ac4:	ldr	r8, [sp, #28]
   12ac8:	ldrhi	r2, [sp, #32]
   12acc:	mov	sl, r3
   12ad0:	mov	r5, r8
   12ad4:	strbhi	r4, [r2, r7]
   12ad8:	add	r2, r7, #1
   12adc:	cmp	fp, r2
   12ae0:	movhi	r0, #34	; 0x22
   12ae4:	ldrhi	ip, [sp, #32]
   12ae8:	mov	r4, r1
   12aec:	strbhi	r0, [ip, r2]
   12af0:	add	r2, r7, #2
   12af4:	cmp	fp, r2
   12af8:	movhi	r0, #34	; 0x22
   12afc:	ldrhi	ip, [sp, #32]
   12b00:	strbhi	r0, [ip, r2]
   12b04:	add	r2, r7, #3
   12b08:	cmp	fp, r2
   12b0c:	movhi	r0, #63	; 0x3f
   12b10:	ldrhi	ip, [sp, #32]
   12b14:	add	r7, r7, #4
   12b18:	strbhi	r0, [ip, r2]
   12b1c:	mov	r2, r8
   12b20:	b	11ccc <abort@plt+0xfac>
   12b24:	mov	ip, r2
   12b28:	mov	r2, r3
   12b2c:	b	124bc <abort@plt+0x179c>
   12b30:	ldr	sl, [sp, #32]
   12b34:	mov	r8, fp
   12b38:	ldr	r2, [sp, #28]
   12b3c:	b	11f0c <abort@plt+0x11ec>
   12b40:	mov	r2, #0
   12b44:	mov	r8, r2
   12b48:	mov	r5, r2
   12b4c:	b	11ccc <abort@plt+0xfac>
   12b50:	mov	r8, r2
   12b54:	mov	r5, #0
   12b58:	b	11ccc <abort@plt+0xfac>
   12b5c:	ldr	r1, [sp, #152]	; 0x98
   12b60:	bl	11628 <abort@plt+0x908>
   12b64:	str	r0, [sp, #168]	; 0xa8
   12b68:	b	11b88 <abort@plt+0xe68>
   12b6c:	ldr	r1, [sp, #152]	; 0x98
   12b70:	bl	11628 <abort@plt+0x908>
   12b74:	str	r0, [sp, #164]	; 0xa4
   12b78:	b	11b68 <abort@plt+0xe48>
   12b7c:	ldr	r7, [sp, #28]
   12b80:	b	11bc8 <abort@plt+0xea8>
   12b84:	ldr	sl, [sp, #32]
   12b88:	ldr	r2, [sp, #68]	; 0x44
   12b8c:	mov	r8, fp
   12b90:	mov	fp, r7
   12b94:	ldr	r3, [sp, #64]	; 0x40
   12b98:	cmp	r3, #0
   12b9c:	moveq	r2, #0
   12ba0:	andne	r2, r2, #1
   12ba4:	cmp	r2, #0
   12ba8:	beq	12bd4 <abort@plt+0x1eb4>
   12bac:	mov	r2, r3
   12bb0:	ldrb	r3, [r3]
   12bb4:	cmp	r3, #0
   12bb8:	beq	12bd4 <abort@plt+0x1eb4>
   12bbc:	cmp	r8, fp
   12bc0:	strbhi	r3, [sl, fp]
   12bc4:	ldrb	r3, [r2, #1]!
   12bc8:	add	fp, fp, #1
   12bcc:	cmp	r3, #0
   12bd0:	bne	12bbc <abort@plt+0x1e9c>
   12bd4:	cmp	r8, fp
   12bd8:	movhi	r3, #0
   12bdc:	strbhi	r3, [sl, fp]
   12be0:	b	11f68 <abort@plt+0x1248>
   12be4:	ldr	r3, [sp, #168]	; 0xa8
   12be8:	ldr	sl, [sp, #32]
   12bec:	str	r3, [sp, #16]
   12bf0:	ldr	r3, [sp, #164]	; 0xa4
   12bf4:	mov	ip, #5
   12bf8:	str	r3, [sp, #12]
   12bfc:	ldr	r3, [sp, #160]	; 0xa0
   12c00:	ldr	r2, [sp, #56]	; 0x38
   12c04:	str	r3, [sp, #8]
   12c08:	ldr	r3, [sp, #156]	; 0x9c
   12c0c:	ldr	r1, [sp, #72]	; 0x48
   12c10:	str	r3, [sp, #4]
   12c14:	mov	r0, sl
   12c18:	ldr	r3, [sp, #24]
   12c1c:	str	ip, [sp]
   12c20:	bl	11748 <abort@plt+0xa28>
   12c24:	mov	fp, r0
   12c28:	b	11f68 <abort@plt+0x1248>
   12c2c:	mov	r8, fp
   12c30:	ldr	sl, [sp, #32]
   12c34:	mov	fp, r7
   12c38:	mov	r2, r3
   12c3c:	b	12b94 <abort@plt+0x1e74>
   12c40:	mov	r8, fp
   12c44:	ldr	sl, [sp, #32]
   12c48:	mov	fp, r7
   12c4c:	b	12b94 <abort@plt+0x1e74>
   12c50:	ldr	sl, [sp, #32]
   12c54:	mov	r8, fp
   12c58:	b	11f24 <abort@plt+0x1204>
   12c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c60:	sub	sp, sp, #52	; 0x34
   12c64:	mov	r4, r0
   12c68:	mov	r5, r3
   12c6c:	mov	sl, r1
   12c70:	mov	fp, r2
   12c74:	bl	10c84 <__errno_location@plt>
   12c78:	ldr	r7, [pc, #412]	; 12e1c <abort@plt+0x20fc>
   12c7c:	cmn	r4, #-2147483647	; 0x80000001
   12c80:	ldr	r6, [r7]
   12c84:	mov	r8, r0
   12c88:	movne	r0, #0
   12c8c:	moveq	r0, #1
   12c90:	ldr	r3, [r8]
   12c94:	orrs	r0, r0, r4, lsr #31
   12c98:	str	r3, [sp, #24]
   12c9c:	bne	12e18 <abort@plt+0x20f8>
   12ca0:	ldr	r2, [r7, #4]
   12ca4:	cmp	r4, r2
   12ca8:	blt	12d08 <abort@plt+0x1fe8>
   12cac:	add	r9, r7, #8
   12cb0:	cmp	r6, r9
   12cb4:	str	r2, [sp, #44]	; 0x2c
   12cb8:	beq	12de8 <abort@plt+0x20c8>
   12cbc:	mov	r3, #8
   12cc0:	sub	r2, r4, r2
   12cc4:	mov	r0, r6
   12cc8:	str	r3, [sp]
   12ccc:	add	r2, r2, #1
   12cd0:	mvn	r3, #-2147483648	; 0x80000000
   12cd4:	add	r1, sp, #44	; 0x2c
   12cd8:	bl	13ac8 <abort@plt+0x2da8>
   12cdc:	mov	r6, r0
   12ce0:	str	r0, [r7]
   12ce4:	ldr	r0, [r7, #4]
   12ce8:	ldr	r2, [sp, #44]	; 0x2c
   12cec:	mov	r1, #0
   12cf0:	sub	r2, r2, r0
   12cf4:	add	r0, r6, r0, lsl #3
   12cf8:	lsl	r2, r2, #3
   12cfc:	bl	10c9c <memset@plt>
   12d00:	ldr	r3, [sp, #44]	; 0x2c
   12d04:	str	r3, [r7, #4]
   12d08:	add	r3, r6, r4, lsl #3
   12d0c:	ldr	r1, [r5, #4]
   12d10:	ldr	r7, [r3, #4]
   12d14:	ldr	r9, [r6, r4, lsl #3]
   12d18:	ldr	r2, [r5, #40]	; 0x28
   12d1c:	ldr	ip, [r5, #44]	; 0x2c
   12d20:	add	r0, r5, #8
   12d24:	str	r3, [sp, #28]
   12d28:	ldr	r3, [r5]
   12d2c:	orr	r1, r1, #1
   12d30:	mov	lr, r0
   12d34:	str	r1, [sp, #32]
   12d38:	str	r0, [sp, #36]	; 0x24
   12d3c:	str	r1, [sp, #4]
   12d40:	str	r2, [sp, #12]
   12d44:	str	r3, [sp]
   12d48:	mov	r0, r7
   12d4c:	mov	r1, r9
   12d50:	str	ip, [sp, #16]
   12d54:	str	lr, [sp, #8]
   12d58:	mov	r3, fp
   12d5c:	mov	r2, sl
   12d60:	bl	11748 <abort@plt+0xa28>
   12d64:	cmp	r9, r0
   12d68:	bhi	12dd4 <abort@plt+0x20b4>
   12d6c:	ldr	r3, [pc, #172]	; 12e20 <abort@plt+0x2100>
   12d70:	add	r9, r0, #1
   12d74:	cmp	r7, r3
   12d78:	str	r9, [r6, r4, lsl #3]
   12d7c:	beq	12d88 <abort@plt+0x2068>
   12d80:	mov	r0, r7
   12d84:	bl	14110 <abort@plt+0x33f0>
   12d88:	mov	r0, r9
   12d8c:	bl	13964 <abort@plt+0x2c44>
   12d90:	ldr	lr, [sp, #28]
   12d94:	ldr	ip, [r5, #44]	; 0x2c
   12d98:	ldr	r4, [r5, #40]	; 0x28
   12d9c:	mov	r3, fp
   12da0:	mov	r2, sl
   12da4:	mov	r1, r9
   12da8:	str	r0, [lr, #4]
   12dac:	ldr	lr, [r5]
   12db0:	ldr	r5, [sp, #36]	; 0x24
   12db4:	str	ip, [sp, #16]
   12db8:	str	r5, [sp, #8]
   12dbc:	ldr	r5, [sp, #32]
   12dc0:	str	r4, [sp, #12]
   12dc4:	str	r5, [sp, #4]
   12dc8:	str	lr, [sp]
   12dcc:	mov	r7, r0
   12dd0:	bl	11748 <abort@plt+0xa28>
   12dd4:	ldr	r3, [sp, #24]
   12dd8:	mov	r0, r7
   12ddc:	str	r3, [r8]
   12de0:	add	sp, sp, #52	; 0x34
   12de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12de8:	mov	r3, #8
   12dec:	sub	r2, r4, r2
   12df0:	str	r3, [sp]
   12df4:	add	r1, sp, #44	; 0x2c
   12df8:	add	r2, r2, #1
   12dfc:	mvn	r3, #-2147483648	; 0x80000000
   12e00:	bl	13ac8 <abort@plt+0x2da8>
   12e04:	mov	r6, r0
   12e08:	ldm	r9, {r0, r1}
   12e0c:	str	r6, [r7]
   12e10:	stm	r6, {r0, r1}
   12e14:	b	12ce4 <abort@plt+0x1fc4>
   12e18:	bl	10d20 <abort@plt>
   12e1c:	ldrdeq	r6, [r2], -r0
   12e20:	andeq	r6, r2, ip, lsr r1
   12e24:	push	{r4, r5, r6, lr}
   12e28:	mov	r5, r0
   12e2c:	bl	10c84 <__errno_location@plt>
   12e30:	cmp	r5, #0
   12e34:	mov	r1, #48	; 0x30
   12e38:	mov	r4, r0
   12e3c:	ldr	r0, [pc, #16]	; 12e54 <abort@plt+0x2134>
   12e40:	ldr	r6, [r4]
   12e44:	movne	r0, r5
   12e48:	bl	13dc4 <abort@plt+0x30a4>
   12e4c:	str	r6, [r4]
   12e50:	pop	{r4, r5, r6, pc}
   12e54:	andeq	r6, r2, ip, lsr r2
   12e58:	ldr	r3, [pc, #12]	; 12e6c <abort@plt+0x214c>
   12e5c:	cmp	r0, #0
   12e60:	moveq	r0, r3
   12e64:	ldr	r0, [r0]
   12e68:	bx	lr
   12e6c:	andeq	r6, r2, ip, lsr r2
   12e70:	ldr	r3, [pc, #12]	; 12e84 <abort@plt+0x2164>
   12e74:	cmp	r0, #0
   12e78:	moveq	r0, r3
   12e7c:	str	r1, [r0]
   12e80:	bx	lr
   12e84:	andeq	r6, r2, ip, lsr r2
   12e88:	ldr	r3, [pc, #52]	; 12ec4 <abort@plt+0x21a4>
   12e8c:	cmp	r0, #0
   12e90:	moveq	r0, r3
   12e94:	add	r3, r0, #8
   12e98:	push	{lr}		; (str lr, [sp, #-4]!)
   12e9c:	lsr	lr, r1, #5
   12ea0:	and	r1, r1, #31
   12ea4:	ldr	ip, [r3, lr, lsl #2]
   12ea8:	lsr	r0, ip, r1
   12eac:	eor	r2, r2, r0
   12eb0:	and	r2, r2, #1
   12eb4:	and	r0, r0, #1
   12eb8:	eor	r1, ip, r2, lsl r1
   12ebc:	str	r1, [r3, lr, lsl #2]
   12ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ec4:	andeq	r6, r2, ip, lsr r2
   12ec8:	ldr	r3, [pc, #16]	; 12ee0 <abort@plt+0x21c0>
   12ecc:	cmp	r0, #0
   12ed0:	movne	r3, r0
   12ed4:	ldr	r0, [r3, #4]
   12ed8:	str	r1, [r3, #4]
   12edc:	bx	lr
   12ee0:	andeq	r6, r2, ip, lsr r2
   12ee4:	ldr	r3, [pc, #44]	; 12f18 <abort@plt+0x21f8>
   12ee8:	cmp	r0, #0
   12eec:	moveq	r0, r3
   12ef0:	mov	ip, #10
   12ef4:	cmp	r2, #0
   12ef8:	cmpne	r1, #0
   12efc:	str	ip, [r0]
   12f00:	beq	12f10 <abort@plt+0x21f0>
   12f04:	str	r1, [r0, #40]	; 0x28
   12f08:	str	r2, [r0, #44]	; 0x2c
   12f0c:	bx	lr
   12f10:	push	{r4, lr}
   12f14:	bl	10d20 <abort@plt>
   12f18:	andeq	r6, r2, ip, lsr r2
   12f1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f20:	sub	sp, sp, #24
   12f24:	ldr	ip, [pc, #108]	; 12f98 <abort@plt+0x2278>
   12f28:	ldr	r4, [sp, #56]	; 0x38
   12f2c:	mov	r9, r2
   12f30:	cmp	r4, #0
   12f34:	moveq	r4, ip
   12f38:	mov	sl, r3
   12f3c:	mov	r7, r0
   12f40:	mov	r8, r1
   12f44:	bl	10c84 <__errno_location@plt>
   12f48:	ldr	r3, [r4, #44]	; 0x2c
   12f4c:	mov	r1, r8
   12f50:	ldr	r6, [r0]
   12f54:	str	r3, [sp, #16]
   12f58:	ldr	r2, [r4, #40]	; 0x28
   12f5c:	add	r3, r4, #8
   12f60:	str	r3, [sp, #8]
   12f64:	str	r2, [sp, #12]
   12f68:	ldr	r2, [r4, #4]
   12f6c:	mov	r5, r0
   12f70:	str	r2, [sp, #4]
   12f74:	ldr	ip, [r4]
   12f78:	mov	r3, sl
   12f7c:	mov	r2, r9
   12f80:	mov	r0, r7
   12f84:	str	ip, [sp]
   12f88:	bl	11748 <abort@plt+0xa28>
   12f8c:	str	r6, [r5]
   12f90:	add	sp, sp, #24
   12f94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f98:	andeq	r6, r2, ip, lsr r2
   12f9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fa0:	cmp	r3, #0
   12fa4:	sub	sp, sp, #44	; 0x2c
   12fa8:	ldr	r4, [pc, #192]	; 13070 <abort@plt+0x2350>
   12fac:	mov	r6, r2
   12fb0:	movne	r4, r3
   12fb4:	mov	r9, r1
   12fb8:	mov	r8, r0
   12fbc:	bl	10c84 <__errno_location@plt>
   12fc0:	ldr	r3, [r4, #44]	; 0x2c
   12fc4:	ldr	r5, [r4, #4]
   12fc8:	add	sl, r4, #8
   12fcc:	cmp	r6, #0
   12fd0:	orreq	r5, r5, #1
   12fd4:	mov	r1, #0
   12fd8:	ldr	r2, [r0]
   12fdc:	str	r3, [sp, #16]
   12fe0:	ldr	r3, [r4, #40]	; 0x28
   12fe4:	stmib	sp, {r5, sl}
   12fe8:	str	r3, [sp, #12]
   12fec:	ldr	r3, [r4]
   12ff0:	mov	r7, r0
   12ff4:	str	r2, [sp, #28]
   12ff8:	str	r3, [sp]
   12ffc:	mov	r2, r8
   13000:	mov	r3, r9
   13004:	mov	r0, r1
   13008:	bl	11748 <abort@plt+0xa28>
   1300c:	add	r1, r0, #1
   13010:	mov	fp, r0
   13014:	mov	r0, r1
   13018:	str	r1, [sp, #36]	; 0x24
   1301c:	bl	13964 <abort@plt+0x2c44>
   13020:	ldr	r3, [r4, #44]	; 0x2c
   13024:	mov	r2, r8
   13028:	str	r3, [sp, #16]
   1302c:	ldr	r3, [r4, #40]	; 0x28
   13030:	str	r5, [sp, #4]
   13034:	str	r3, [sp, #12]
   13038:	str	sl, [sp, #8]
   1303c:	ldr	ip, [r4]
   13040:	ldr	r1, [sp, #36]	; 0x24
   13044:	mov	r3, r9
   13048:	str	ip, [sp]
   1304c:	str	r0, [sp, #32]
   13050:	bl	11748 <abort@plt+0xa28>
   13054:	ldr	r2, [sp, #28]
   13058:	cmp	r6, #0
   1305c:	str	r2, [r7]
   13060:	ldr	r0, [sp, #32]
   13064:	strne	fp, [r6]
   13068:	add	sp, sp, #44	; 0x2c
   1306c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13070:	andeq	r6, r2, ip, lsr r2
   13074:	mov	r3, r2
   13078:	mov	r2, #0
   1307c:	b	12f9c <abort@plt+0x227c>
   13080:	push	{r4, r5, r6, r7, r8, lr}
   13084:	ldr	r6, [pc, #116]	; 13100 <abort@plt+0x23e0>
   13088:	ldr	r3, [r6, #4]
   1308c:	ldr	r7, [r6]
   13090:	cmp	r3, #1
   13094:	movgt	r5, r7
   13098:	movgt	r4, #1
   1309c:	ble	130bc <abort@plt+0x239c>
   130a0:	ldr	r0, [r5, #12]
   130a4:	bl	14110 <abort@plt+0x33f0>
   130a8:	ldr	r3, [r6, #4]
   130ac:	add	r4, r4, #1
   130b0:	cmp	r3, r4
   130b4:	add	r5, r5, #8
   130b8:	bgt	130a0 <abort@plt+0x2380>
   130bc:	ldr	r0, [r7, #4]
   130c0:	ldr	r4, [pc, #60]	; 13104 <abort@plt+0x23e4>
   130c4:	cmp	r0, r4
   130c8:	beq	130dc <abort@plt+0x23bc>
   130cc:	bl	14110 <abort@plt+0x33f0>
   130d0:	mov	r3, #256	; 0x100
   130d4:	str	r4, [r6, #12]
   130d8:	str	r3, [r6, #8]
   130dc:	ldr	r4, [pc, #36]	; 13108 <abort@plt+0x23e8>
   130e0:	cmp	r7, r4
   130e4:	beq	130f4 <abort@plt+0x23d4>
   130e8:	mov	r0, r7
   130ec:	bl	14110 <abort@plt+0x33f0>
   130f0:	str	r4, [r6]
   130f4:	mov	r3, #1
   130f8:	str	r3, [r6, #4]
   130fc:	pop	{r4, r5, r6, r7, r8, pc}
   13100:	ldrdeq	r6, [r2], -r0
   13104:	andeq	r6, r2, ip, lsr r1
   13108:	ldrdeq	r6, [r2], -r8
   1310c:	ldr	r3, [pc, #4]	; 13118 <abort@plt+0x23f8>
   13110:	mvn	r2, #0
   13114:	b	12c5c <abort@plt+0x1f3c>
   13118:	andeq	r6, r2, ip, lsr r2
   1311c:	ldr	r3, [pc]	; 13124 <abort@plt+0x2404>
   13120:	b	12c5c <abort@plt+0x1f3c>
   13124:	andeq	r6, r2, ip, lsr r2
   13128:	mov	r1, r0
   1312c:	ldr	r3, [pc, #8]	; 1313c <abort@plt+0x241c>
   13130:	mvn	r2, #0
   13134:	mov	r0, #0
   13138:	b	12c5c <abort@plt+0x1f3c>
   1313c:	andeq	r6, r2, ip, lsr r2
   13140:	mov	r2, r1
   13144:	ldr	r3, [pc, #8]	; 13154 <abort@plt+0x2434>
   13148:	mov	r1, r0
   1314c:	mov	r0, #0
   13150:	b	12c5c <abort@plt+0x1f3c>
   13154:	andeq	r6, r2, ip, lsr r2
   13158:	push	{r4, r5, lr}
   1315c:	sub	sp, sp, #52	; 0x34
   13160:	mov	r5, r2
   13164:	mov	r4, r0
   13168:	mov	r0, sp
   1316c:	bl	115f8 <abort@plt+0x8d8>
   13170:	mov	r3, sp
   13174:	mov	r1, r5
   13178:	mov	r0, r4
   1317c:	mvn	r2, #0
   13180:	bl	12c5c <abort@plt+0x1f3c>
   13184:	add	sp, sp, #52	; 0x34
   13188:	pop	{r4, r5, pc}
   1318c:	push	{r4, r5, r6, lr}
   13190:	sub	sp, sp, #48	; 0x30
   13194:	mov	r5, r2
   13198:	mov	r6, r3
   1319c:	mov	r4, r0
   131a0:	mov	r0, sp
   131a4:	bl	115f8 <abort@plt+0x8d8>
   131a8:	mov	r3, sp
   131ac:	mov	r2, r6
   131b0:	mov	r1, r5
   131b4:	mov	r0, r4
   131b8:	bl	12c5c <abort@plt+0x1f3c>
   131bc:	add	sp, sp, #48	; 0x30
   131c0:	pop	{r4, r5, r6, pc}
   131c4:	mov	r2, r1
   131c8:	mov	r1, r0
   131cc:	mov	r0, #0
   131d0:	b	13158 <abort@plt+0x2438>
   131d4:	mov	r3, r2
   131d8:	mov	r2, r1
   131dc:	mov	r1, r0
   131e0:	mov	r0, #0
   131e4:	b	1318c <abort@plt+0x246c>
   131e8:	push	{r4, r5, r6, r7, r8, lr}
   131ec:	mov	r7, r0
   131f0:	ldr	lr, [pc, #100]	; 1325c <abort@plt+0x253c>
   131f4:	mov	r8, r1
   131f8:	mov	r4, r2
   131fc:	ldm	lr!, {r0, r1, r2, r3}
   13200:	sub	sp, sp, #48	; 0x30
   13204:	mov	ip, sp
   13208:	lsr	r5, r4, #5
   1320c:	stmia	ip!, {r0, r1, r2, r3}
   13210:	add	r6, sp, #8
   13214:	ldm	lr!, {r0, r1, r2, r3}
   13218:	and	r4, r4, #31
   1321c:	stmia	ip!, {r0, r1, r2, r3}
   13220:	ldm	lr, {r0, r1, r2, r3}
   13224:	stm	ip, {r0, r1, r2, r3}
   13228:	mov	r2, r8
   1322c:	ldr	lr, [r6, r5, lsl #2]
   13230:	mov	r1, r7
   13234:	mov	r3, sp
   13238:	lsr	ip, lr, r4
   1323c:	eor	ip, ip, #1
   13240:	and	ip, ip, #1
   13244:	mov	r0, #0
   13248:	eor	r4, lr, ip, lsl r4
   1324c:	str	r4, [r6, r5, lsl #2]
   13250:	bl	12c5c <abort@plt+0x1f3c>
   13254:	add	sp, sp, #48	; 0x30
   13258:	pop	{r4, r5, r6, r7, r8, pc}
   1325c:	andeq	r6, r2, ip, lsr r2
   13260:	mov	r2, r1
   13264:	mvn	r1, #0
   13268:	b	131e8 <abort@plt+0x24c8>
   1326c:	mov	r2, #58	; 0x3a
   13270:	mvn	r1, #0
   13274:	b	131e8 <abort@plt+0x24c8>
   13278:	mov	r2, #58	; 0x3a
   1327c:	b	131e8 <abort@plt+0x24c8>
   13280:	push	{r4, r5, r6, r7, lr}
   13284:	sub	sp, sp, #100	; 0x64
   13288:	mov	r6, r0
   1328c:	mov	r0, sp
   13290:	mov	r7, r2
   13294:	bl	115f8 <abort@plt+0x8d8>
   13298:	mov	ip, sp
   1329c:	add	lr, sp, #48	; 0x30
   132a0:	ldm	ip!, {r0, r1, r2, r3}
   132a4:	stmia	lr!, {r0, r1, r2, r3}
   132a8:	ldm	ip!, {r0, r1, r2, r3}
   132ac:	ldr	r5, [sp, #60]	; 0x3c
   132b0:	stmia	lr!, {r0, r1, r2, r3}
   132b4:	mvn	r4, r5
   132b8:	ldm	ip, {r0, r1, r2, r3}
   132bc:	and	ip, r4, #67108864	; 0x4000000
   132c0:	eor	ip, ip, r5
   132c4:	str	ip, [sp, #60]	; 0x3c
   132c8:	stm	lr, {r0, r1, r2, r3}
   132cc:	mov	r1, r7
   132d0:	mov	r0, r6
   132d4:	add	r3, sp, #48	; 0x30
   132d8:	mvn	r2, #0
   132dc:	bl	12c5c <abort@plt+0x1f3c>
   132e0:	add	sp, sp, #100	; 0x64
   132e4:	pop	{r4, r5, r6, r7, pc}
   132e8:	push	{r4, r5, r6, r7, r8, lr}
   132ec:	mov	r5, r1
   132f0:	ldr	lr, [pc, #100]	; 1335c <abort@plt+0x263c>
   132f4:	mov	r4, r2
   132f8:	mov	r7, r0
   132fc:	mov	r8, r3
   13300:	ldm	lr!, {r0, r1, r2, r3}
   13304:	sub	sp, sp, #48	; 0x30
   13308:	mov	ip, sp
   1330c:	mov	r6, #10
   13310:	stmia	ip!, {r0, r1, r2, r3}
   13314:	cmp	r4, #0
   13318:	cmpne	r5, #0
   1331c:	ldm	lr!, {r0, r1, r2, r3}
   13320:	str	r6, [sp]
   13324:	stmia	ip!, {r0, r1, r2, r3}
   13328:	ldm	lr, {r0, r1, r2, r3}
   1332c:	stm	ip, {r0, r1, r2, r3}
   13330:	beq	13358 <abort@plt+0x2638>
   13334:	mov	r3, sp
   13338:	mov	r1, r8
   1333c:	mov	r0, r7
   13340:	ldr	r2, [sp, #72]	; 0x48
   13344:	str	r5, [sp, #40]	; 0x28
   13348:	str	r4, [sp, #44]	; 0x2c
   1334c:	bl	12c5c <abort@plt+0x1f3c>
   13350:	add	sp, sp, #48	; 0x30
   13354:	pop	{r4, r5, r6, r7, r8, pc}
   13358:	bl	10d20 <abort@plt>
   1335c:	andeq	r6, r2, ip, lsr r2
   13360:	push	{lr}		; (str lr, [sp, #-4]!)
   13364:	sub	sp, sp, #12
   13368:	mvn	ip, #0
   1336c:	str	ip, [sp]
   13370:	bl	132e8 <abort@plt+0x25c8>
   13374:	add	sp, sp, #12
   13378:	pop	{pc}		; (ldr pc, [sp], #4)
   1337c:	push	{lr}		; (str lr, [sp, #-4]!)
   13380:	sub	sp, sp, #12
   13384:	mvn	ip, #0
   13388:	mov	r3, r2
   1338c:	str	ip, [sp]
   13390:	mov	r2, r1
   13394:	mov	r1, r0
   13398:	mov	r0, #0
   1339c:	bl	132e8 <abort@plt+0x25c8>
   133a0:	add	sp, sp, #12
   133a4:	pop	{pc}		; (ldr pc, [sp], #4)
   133a8:	push	{lr}		; (str lr, [sp, #-4]!)
   133ac:	sub	sp, sp, #12
   133b0:	str	r3, [sp]
   133b4:	mov	r3, r2
   133b8:	mov	r2, r1
   133bc:	mov	r1, r0
   133c0:	mov	r0, #0
   133c4:	bl	132e8 <abort@plt+0x25c8>
   133c8:	add	sp, sp, #12
   133cc:	pop	{pc}		; (ldr pc, [sp], #4)
   133d0:	ldr	r3, [pc]	; 133d8 <abort@plt+0x26b8>
   133d4:	b	12c5c <abort@plt+0x1f3c>
   133d8:	andeq	r6, r2, r0, ror #1
   133dc:	mov	r2, r1
   133e0:	ldr	r3, [pc, #8]	; 133f0 <abort@plt+0x26d0>
   133e4:	mov	r1, r0
   133e8:	mov	r0, #0
   133ec:	b	12c5c <abort@plt+0x1f3c>
   133f0:	andeq	r6, r2, r0, ror #1
   133f4:	ldr	r3, [pc, #4]	; 13400 <abort@plt+0x26e0>
   133f8:	mvn	r2, #0
   133fc:	b	12c5c <abort@plt+0x1f3c>
   13400:	andeq	r6, r2, r0, ror #1
   13404:	mov	r1, r0
   13408:	ldr	r3, [pc, #8]	; 13418 <abort@plt+0x26f8>
   1340c:	mvn	r2, #0
   13410:	mov	r0, #0
   13414:	b	12c5c <abort@plt+0x1f3c>
   13418:	andeq	r6, r2, r0, ror #1
   1341c:	push	{r4, r5, r6, lr}
   13420:	sub	sp, sp, #32
   13424:	cmp	r1, #0
   13428:	mov	r4, r0
   1342c:	ldr	r5, [sp, #48]	; 0x30
   13430:	ldr	r6, [sp, #52]	; 0x34
   13434:	beq	1374c <abort@plt+0x2a2c>
   13438:	stm	sp, {r2, r3}
   1343c:	mov	r3, r1
   13440:	ldr	r2, [pc, #808]	; 13770 <abort@plt+0x2a50>
   13444:	mov	r1, #1
   13448:	bl	10cc0 <__fprintf_chk@plt>
   1344c:	mov	r2, #5
   13450:	ldr	r1, [pc, #796]	; 13774 <abort@plt+0x2a54>
   13454:	mov	r0, #0
   13458:	bl	10ba0 <dcgettext@plt>
   1345c:	ldr	r3, [pc, #788]	; 13778 <abort@plt+0x2a58>
   13460:	ldr	r2, [pc, #788]	; 1377c <abort@plt+0x2a5c>
   13464:	str	r3, [sp]
   13468:	mov	r1, #1
   1346c:	mov	r3, r0
   13470:	mov	r0, r4
   13474:	bl	10cc0 <__fprintf_chk@plt>
   13478:	mov	r1, r4
   1347c:	mov	r0, #10
   13480:	bl	10b94 <fputc_unlocked@plt>
   13484:	mov	r2, #5
   13488:	ldr	r1, [pc, #752]	; 13780 <abort@plt+0x2a60>
   1348c:	mov	r0, #0
   13490:	bl	10ba0 <dcgettext@plt>
   13494:	mov	r1, #1
   13498:	ldr	r3, [pc, #740]	; 13784 <abort@plt+0x2a64>
   1349c:	mov	r2, r0
   134a0:	mov	r0, r4
   134a4:	bl	10cc0 <__fprintf_chk@plt>
   134a8:	mov	r1, r4
   134ac:	mov	r0, #10
   134b0:	bl	10b94 <fputc_unlocked@plt>
   134b4:	cmp	r6, #9
   134b8:	ldrls	pc, [pc, r6, lsl #2]
   134bc:	b	13764 <abort@plt+0x2a44>
   134c0:	andeq	r3, r1, r4, asr #10
   134c4:	andeq	r3, r1, ip, asr #10
   134c8:	andeq	r3, r1, r8, ror r5
   134cc:	andeq	r3, r1, ip, lsr #11
   134d0:	andeq	r3, r1, r8, ror #11
   134d4:	andeq	r3, r1, r4, lsr #12
   134d8:	andeq	r3, r1, r0, ror #12
   134dc:	andeq	r3, r1, r4, lsr #13
   134e0:	strdeq	r3, [r1], -r4
   134e4:	andeq	r3, r1, r8, ror #9
   134e8:	ldr	r1, [pc, #664]	; 13788 <abort@plt+0x2a68>
   134ec:	mov	r2, #5
   134f0:	mov	r0, #0
   134f4:	bl	10ba0 <dcgettext@plt>
   134f8:	ldr	ip, [r5, #32]
   134fc:	ldr	r1, [r5, #28]
   13500:	ldr	r2, [r5, #24]
   13504:	ldr	r3, [r5]
   13508:	ldr	r6, [r5, #20]
   1350c:	str	ip, [sp, #28]
   13510:	ldr	lr, [r5, #16]
   13514:	str	r1, [sp, #24]
   13518:	ldr	ip, [r5, #12]
   1351c:	str	r2, [sp, #20]
   13520:	ldr	r1, [r5, #8]
   13524:	ldr	r2, [r5, #4]
   13528:	str	r6, [sp, #16]
   1352c:	stmib	sp, {r1, ip, lr}
   13530:	mov	r1, #1
   13534:	str	r2, [sp]
   13538:	mov	r2, r0
   1353c:	mov	r0, r4
   13540:	bl	10cc0 <__fprintf_chk@plt>
   13544:	add	sp, sp, #32
   13548:	pop	{r4, r5, r6, pc}
   1354c:	mov	r2, #5
   13550:	ldr	r1, [pc, #564]	; 1378c <abort@plt+0x2a6c>
   13554:	mov	r0, #0
   13558:	bl	10ba0 <dcgettext@plt>
   1355c:	ldr	r3, [r5]
   13560:	mov	r1, #1
   13564:	mov	r2, r0
   13568:	mov	r0, r4
   1356c:	add	sp, sp, #32
   13570:	pop	{r4, r5, r6, lr}
   13574:	b	10cc0 <__fprintf_chk@plt>
   13578:	mov	r2, #5
   1357c:	ldr	r1, [pc, #524]	; 13790 <abort@plt+0x2a70>
   13580:	mov	r0, #0
   13584:	bl	10ba0 <dcgettext@plt>
   13588:	ldr	r2, [r5, #4]
   1358c:	ldr	r3, [r5]
   13590:	mov	r1, #1
   13594:	str	r2, [sp, #48]	; 0x30
   13598:	mov	r2, r0
   1359c:	mov	r0, r4
   135a0:	add	sp, sp, #32
   135a4:	pop	{r4, r5, r6, lr}
   135a8:	b	10cc0 <__fprintf_chk@plt>
   135ac:	mov	r2, #5
   135b0:	ldr	r1, [pc, #476]	; 13794 <abort@plt+0x2a74>
   135b4:	mov	r0, #0
   135b8:	bl	10ba0 <dcgettext@plt>
   135bc:	ldr	r1, [r5, #8]
   135c0:	ldr	r2, [r5, #4]
   135c4:	ldr	r3, [r5]
   135c8:	str	r1, [sp, #52]	; 0x34
   135cc:	str	r2, [sp, #48]	; 0x30
   135d0:	mov	r1, #1
   135d4:	mov	r2, r0
   135d8:	mov	r0, r4
   135dc:	add	sp, sp, #32
   135e0:	pop	{r4, r5, r6, lr}
   135e4:	b	10cc0 <__fprintf_chk@plt>
   135e8:	mov	r2, #5
   135ec:	ldr	r1, [pc, #420]	; 13798 <abort@plt+0x2a78>
   135f0:	mov	r0, #0
   135f4:	bl	10ba0 <dcgettext@plt>
   135f8:	ldr	r1, [r5, #8]
   135fc:	ldr	ip, [r5, #12]
   13600:	ldr	r2, [r5, #4]
   13604:	ldr	r3, [r5]
   13608:	stmib	sp, {r1, ip}
   1360c:	str	r2, [sp]
   13610:	mov	r1, #1
   13614:	mov	r2, r0
   13618:	mov	r0, r4
   1361c:	bl	10cc0 <__fprintf_chk@plt>
   13620:	b	13544 <abort@plt+0x2824>
   13624:	mov	r2, #5
   13628:	ldr	r1, [pc, #364]	; 1379c <abort@plt+0x2a7c>
   1362c:	mov	r0, #0
   13630:	bl	10ba0 <dcgettext@plt>
   13634:	add	r1, r5, #8
   13638:	ldr	r2, [r5, #4]
   1363c:	ldm	r1, {r1, ip, lr}
   13640:	ldr	r3, [r5]
   13644:	str	r2, [sp]
   13648:	stmib	sp, {r1, ip, lr}
   1364c:	mov	r1, #1
   13650:	mov	r2, r0
   13654:	mov	r0, r4
   13658:	bl	10cc0 <__fprintf_chk@plt>
   1365c:	b	13544 <abort@plt+0x2824>
   13660:	mov	r2, #5
   13664:	ldr	r1, [pc, #308]	; 137a0 <abort@plt+0x2a80>
   13668:	mov	r0, #0
   1366c:	bl	10ba0 <dcgettext@plt>
   13670:	add	r1, r5, #8
   13674:	ldr	r2, [r5, #4]
   13678:	ldm	r1, {r1, ip, lr}
   1367c:	ldr	r6, [r5, #20]
   13680:	ldr	r3, [r5]
   13684:	stmib	sp, {r1, ip, lr}
   13688:	mov	r1, #1
   1368c:	str	r2, [sp]
   13690:	str	r6, [sp, #16]
   13694:	mov	r2, r0
   13698:	mov	r0, r4
   1369c:	bl	10cc0 <__fprintf_chk@plt>
   136a0:	b	13544 <abort@plt+0x2824>
   136a4:	mov	r2, #5
   136a8:	ldr	r1, [pc, #244]	; 137a4 <abort@plt+0x2a84>
   136ac:	mov	r0, #0
   136b0:	bl	10ba0 <dcgettext@plt>
   136b4:	ldr	r2, [r5, #24]
   136b8:	ldr	r3, [r5]
   136bc:	ldr	r6, [r5, #20]
   136c0:	ldr	lr, [r5, #16]
   136c4:	ldr	ip, [r5, #12]
   136c8:	str	r2, [sp, #20]
   136cc:	ldr	r1, [r5, #8]
   136d0:	ldr	r2, [r5, #4]
   136d4:	str	r6, [sp, #16]
   136d8:	stmib	sp, {r1, ip, lr}
   136dc:	mov	r1, #1
   136e0:	str	r2, [sp]
   136e4:	mov	r2, r0
   136e8:	mov	r0, r4
   136ec:	bl	10cc0 <__fprintf_chk@plt>
   136f0:	b	13544 <abort@plt+0x2824>
   136f4:	mov	r2, #5
   136f8:	ldr	r1, [pc, #168]	; 137a8 <abort@plt+0x2a88>
   136fc:	mov	r0, #0
   13700:	bl	10ba0 <dcgettext@plt>
   13704:	ldr	r1, [r5, #28]
   13708:	ldr	r2, [r5, #24]
   1370c:	ldr	r3, [r5]
   13710:	ldr	r6, [r5, #20]
   13714:	ldr	lr, [r5, #16]
   13718:	str	r1, [sp, #24]
   1371c:	ldr	ip, [r5, #12]
   13720:	str	r2, [sp, #20]
   13724:	ldr	r1, [r5, #8]
   13728:	ldr	r2, [r5, #4]
   1372c:	str	r6, [sp, #16]
   13730:	stmib	sp, {r1, ip, lr}
   13734:	mov	r1, #1
   13738:	str	r2, [sp]
   1373c:	mov	r2, r0
   13740:	mov	r0, r4
   13744:	bl	10cc0 <__fprintf_chk@plt>
   13748:	b	13544 <abort@plt+0x2824>
   1374c:	str	r3, [sp]
   13750:	mov	r1, #1
   13754:	mov	r3, r2
   13758:	ldr	r2, [pc, #76]	; 137ac <abort@plt+0x2a8c>
   1375c:	bl	10cc0 <__fprintf_chk@plt>
   13760:	b	1344c <abort@plt+0x272c>
   13764:	mov	r2, #5
   13768:	ldr	r1, [pc, #64]	; 137b0 <abort@plt+0x2a90>
   1376c:	b	134f0 <abort@plt+0x27d0>
   13770:	andeq	r4, r1, r0, lsr #26
   13774:	andeq	r4, r1, r4, lsr sp
   13778:	andeq	r0, r0, r6, ror #15
   1377c:	andeq	r5, r1, ip
   13780:	andeq	r4, r1, r8, lsr sp
   13784:	andeq	r4, r1, r4, ror #27
   13788:	andeq	r4, r1, r4, lsl pc
   1378c:	andeq	r4, r1, r8, lsl #28
   13790:	andeq	r4, r1, r8, lsl lr
   13794:	andeq	r4, r1, r0, lsr lr
   13798:	andeq	r4, r1, ip, asr #28
   1379c:	andeq	r4, r1, ip, ror #28
   137a0:	muleq	r1, r0, lr
   137a4:			; <UNDEFINED> instruction: 0x00014eb8
   137a8:	andeq	r4, r1, r4, ror #29
   137ac:	andeq	r4, r1, ip, lsr #26
   137b0:	andeq	r4, r1, r8, asr #30
   137b4:	push	{r4, r5, lr}
   137b8:	sub	sp, sp, #12
   137bc:	ldr	r5, [sp, #24]
   137c0:	ldr	ip, [r5]
   137c4:	cmp	ip, #0
   137c8:	beq	137e4 <abort@plt+0x2ac4>
   137cc:	mov	lr, r5
   137d0:	mov	ip, #0
   137d4:	ldr	r4, [lr, #4]!
   137d8:	add	ip, ip, #1
   137dc:	cmp	r4, #0
   137e0:	bne	137d4 <abort@plt+0x2ab4>
   137e4:	stm	sp, {r5, ip}
   137e8:	bl	1341c <abort@plt+0x26fc>
   137ec:	add	sp, sp, #12
   137f0:	pop	{r4, r5, pc}
   137f4:	push	{r4, r5, lr}
   137f8:	sub	sp, sp, #52	; 0x34
   137fc:	add	r5, sp, #4
   13800:	ldr	r4, [sp, #64]	; 0x40
   13804:	mov	ip, #0
   13808:	sub	r4, r4, #4
   1380c:	ldr	lr, [r4, #4]!
   13810:	cmp	lr, #0
   13814:	str	lr, [r5, #4]!
   13818:	beq	13828 <abort@plt+0x2b08>
   1381c:	add	ip, ip, #1
   13820:	cmp	ip, #10
   13824:	bne	1380c <abort@plt+0x2aec>
   13828:	add	lr, sp, #8
   1382c:	str	ip, [sp, #4]
   13830:	str	lr, [sp]
   13834:	bl	1341c <abort@plt+0x26fc>
   13838:	add	sp, sp, #52	; 0x34
   1383c:	pop	{r4, r5, pc}
   13840:	push	{r3}		; (str r3, [sp, #-4]!)
   13844:	push	{r4, lr}
   13848:	sub	sp, sp, #60	; 0x3c
   1384c:	add	lr, sp, #56	; 0x38
   13850:	add	r3, sp, #72	; 0x48
   13854:	str	r3, [lr, #-44]!	; 0xffffffd4
   13858:	add	r4, sp, #68	; 0x44
   1385c:	mov	r3, #0
   13860:	ldr	ip, [r4, #4]!
   13864:	cmp	ip, #0
   13868:	str	ip, [lr, #4]!
   1386c:	beq	1387c <abort@plt+0x2b5c>
   13870:	add	r3, r3, #1
   13874:	cmp	r3, #10
   13878:	bne	13860 <abort@plt+0x2b40>
   1387c:	add	ip, sp, #16
   13880:	str	r3, [sp, #4]
   13884:	str	ip, [sp]
   13888:	ldr	r3, [sp, #68]	; 0x44
   1388c:	bl	1341c <abort@plt+0x26fc>
   13890:	add	sp, sp, #60	; 0x3c
   13894:	pop	{r4, lr}
   13898:	add	sp, sp, #4
   1389c:	bx	lr
   138a0:	ldr	r3, [pc, #116]	; 1391c <abort@plt+0x2bfc>
   138a4:	push	{r4, lr}
   138a8:	mov	r0, #10
   138ac:	ldr	r1, [r3]
   138b0:	bl	10b94 <fputc_unlocked@plt>
   138b4:	mov	r2, #5
   138b8:	ldr	r1, [pc, #96]	; 13920 <abort@plt+0x2c00>
   138bc:	mov	r0, #0
   138c0:	bl	10ba0 <dcgettext@plt>
   138c4:	ldr	r2, [pc, #88]	; 13924 <abort@plt+0x2c04>
   138c8:	mov	r1, r0
   138cc:	mov	r0, #1
   138d0:	bl	10ca8 <__printf_chk@plt>
   138d4:	mov	r2, #5
   138d8:	ldr	r1, [pc, #72]	; 13928 <abort@plt+0x2c08>
   138dc:	mov	r0, #0
   138e0:	bl	10ba0 <dcgettext@plt>
   138e4:	ldr	r3, [pc, #64]	; 1392c <abort@plt+0x2c0c>
   138e8:	ldr	r2, [pc, #64]	; 13930 <abort@plt+0x2c10>
   138ec:	mov	r1, r0
   138f0:	mov	r0, #1
   138f4:	bl	10ca8 <__printf_chk@plt>
   138f8:	mov	r2, #5
   138fc:	ldr	r1, [pc, #48]	; 13934 <abort@plt+0x2c14>
   13900:	mov	r0, #0
   13904:	bl	10ba0 <dcgettext@plt>
   13908:	ldr	r2, [pc, #40]	; 13938 <abort@plt+0x2c18>
   1390c:	pop	{r4, lr}
   13910:	mov	r1, r0
   13914:	mov	r0, #1
   13918:	b	10ca8 <__printf_chk@plt>
   1391c:	andeq	r6, r2, r4, lsr #2
   13920:	andeq	r4, r1, r4, lsl #31
   13924:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   13928:			; <UNDEFINED> instruction: 0x00014fb0
   1392c:	strdeq	r4, [r1], -ip
   13930:	andeq	r4, r1, r4, lsr #20
   13934:	andeq	r4, r1, r4, asr #31
   13938:	andeq	r4, r1, ip, ror #31
   1393c:	push	{r4, lr}
   13940:	bl	13f0c <abort@plt+0x31ec>
   13944:	cmp	r0, #0
   13948:	popne	{r4, pc}
   1394c:	bl	13e84 <abort@plt+0x3164>
   13950:	push	{r4, lr}
   13954:	bl	13f0c <abort@plt+0x31ec>
   13958:	cmp	r0, #0
   1395c:	popne	{r4, pc}
   13960:	bl	13e84 <abort@plt+0x3164>
   13964:	push	{r4, lr}
   13968:	bl	13f0c <abort@plt+0x31ec>
   1396c:	cmp	r0, #0
   13970:	popne	{r4, pc}
   13974:	bl	13e84 <abort@plt+0x3164>
   13978:	push	{r4, r5, r6, lr}
   1397c:	mov	r5, r0
   13980:	mov	r4, r1
   13984:	bl	13f38 <abort@plt+0x3218>
   13988:	cmp	r0, #0
   1398c:	popne	{r4, r5, r6, pc}
   13990:	adds	r4, r4, #0
   13994:	movne	r4, #1
   13998:	cmp	r5, #0
   1399c:	orreq	r4, r4, #1
   139a0:	cmp	r4, #0
   139a4:	popeq	{r4, r5, r6, pc}
   139a8:	bl	13e84 <abort@plt+0x3164>
   139ac:	push	{r4, lr}
   139b0:	cmp	r1, #0
   139b4:	orreq	r1, r1, #1
   139b8:	bl	13f38 <abort@plt+0x3218>
   139bc:	cmp	r0, #0
   139c0:	popne	{r4, pc}
   139c4:	bl	13e84 <abort@plt+0x3164>
   139c8:	push	{r4, r5, r6, lr}
   139cc:	mov	r6, r0
   139d0:	mov	r5, r1
   139d4:	mov	r4, r2
   139d8:	bl	14290 <abort@plt+0x3570>
   139dc:	cmp	r0, #0
   139e0:	popne	{r4, r5, r6, pc}
   139e4:	cmp	r6, #0
   139e8:	beq	139f8 <abort@plt+0x2cd8>
   139ec:	cmp	r5, #0
   139f0:	cmpne	r4, #0
   139f4:	popeq	{r4, r5, r6, pc}
   139f8:	bl	13e84 <abort@plt+0x3164>
   139fc:	b	139c8 <abort@plt+0x2ca8>
   13a00:	cmp	r2, #0
   13a04:	cmpne	r1, #0
   13a08:	moveq	r2, #1
   13a0c:	moveq	r1, r2
   13a10:	push	{r4, lr}
   13a14:	bl	14290 <abort@plt+0x3570>
   13a18:	cmp	r0, #0
   13a1c:	popne	{r4, pc}
   13a20:	bl	13e84 <abort@plt+0x3164>
   13a24:	mov	r2, r1
   13a28:	mov	r1, r0
   13a2c:	mov	r0, #0
   13a30:	b	139c8 <abort@plt+0x2ca8>
   13a34:	mov	r2, r1
   13a38:	mov	r1, r0
   13a3c:	mov	r0, #0
   13a40:	b	13a00 <abort@plt+0x2ce0>
   13a44:	push	{r4, r5, r6, lr}
   13a48:	subs	r6, r0, #0
   13a4c:	sub	sp, sp, #8
   13a50:	mov	r5, r1
   13a54:	ldr	r4, [r1]
   13a58:	beq	13a94 <abort@plt+0x2d74>
   13a5c:	lsr	r1, r4, #1
   13a60:	add	r3, r1, #1
   13a64:	mvn	r3, r3
   13a68:	cmp	r4, r3
   13a6c:	bhi	13a90 <abort@plt+0x2d70>
   13a70:	add	r4, r4, #1
   13a74:	add	r4, r4, r1
   13a78:	mov	r0, r6
   13a7c:	mov	r1, r4
   13a80:	bl	139c8 <abort@plt+0x2ca8>
   13a84:	str	r4, [r5]
   13a88:	add	sp, sp, #8
   13a8c:	pop	{r4, r5, r6, pc}
   13a90:	bl	13e84 <abort@plt+0x3164>
   13a94:	cmp	r4, #0
   13a98:	bne	13a78 <abort@plt+0x2d58>
   13a9c:	mov	r1, r2
   13aa0:	mov	r0, #64	; 0x40
   13aa4:	str	r2, [sp, #4]
   13aa8:	bl	143d0 <abort@plt+0x36b0>
   13aac:	ldr	r2, [sp, #4]
   13ab0:	cmp	r0, #0
   13ab4:	movne	r4, r0
   13ab8:	addeq	r4, r0, #1
   13abc:	b	13a78 <abort@plt+0x2d58>
   13ac0:	mov	r2, #1
   13ac4:	b	13a44 <abort@plt+0x2d24>
   13ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13acc:	sub	sp, sp, #12
   13ad0:	ldr	r6, [r1]
   13ad4:	mov	sl, r1
   13ad8:	mov	r9, r0
   13adc:	asrs	r4, r6, #1
   13ae0:	mov	r5, r2
   13ae4:	mov	fp, r3
   13ae8:	ldr	r7, [sp, #48]	; 0x30
   13aec:	bmi	13c58 <abort@plt+0x2f38>
   13af0:	mvn	r3, #-2147483648	; 0x80000000
   13af4:	sub	r3, r3, r4
   13af8:	cmp	r6, r3
   13afc:	movle	r3, #0
   13b00:	movgt	r3, #1
   13b04:	mvn	r8, fp
   13b08:	cmp	r3, #0
   13b0c:	addeq	r4, r4, r6
   13b10:	mvnne	r4, #-2147483648	; 0x80000000
   13b14:	lsr	r8, r8, #31
   13b18:	cmp	fp, r4
   13b1c:	movge	r3, #0
   13b20:	andlt	r3, r8, #1
   13b24:	cmp	r3, #0
   13b28:	beq	13c10 <abort@plt+0x2ef0>
   13b2c:	cmp	r7, #0
   13b30:	blt	13ce0 <abort@plt+0x2fc0>
   13b34:	bne	13cd8 <abort@plt+0x2fb8>
   13b38:	mov	r2, #64	; 0x40
   13b3c:	mov	r1, r7
   13b40:	mov	r0, r2
   13b44:	str	r2, [sp, #4]
   13b48:	bl	145dc <abort@plt+0x38bc>
   13b4c:	ldr	r2, [sp, #4]
   13b50:	mov	r1, r7
   13b54:	mov	r4, r0
   13b58:	mov	r0, r2
   13b5c:	bl	147fc <abort@plt+0x3adc>
   13b60:	ldr	r2, [sp, #4]
   13b64:	sub	r1, r2, r1
   13b68:	cmp	r9, #0
   13b6c:	sub	r3, r4, r6
   13b70:	streq	r9, [sl]
   13b74:	cmp	r3, r5
   13b78:	bge	13bfc <abort@plt+0x2edc>
   13b7c:	cmp	r5, #0
   13b80:	blt	13c6c <abort@plt+0x2f4c>
   13b84:	cmp	r6, #0
   13b88:	blt	13ba8 <abort@plt+0x2e88>
   13b8c:	mvn	r3, #-2147483648	; 0x80000000
   13b90:	sub	r3, r3, r5
   13b94:	cmp	r6, r3
   13b98:	movle	r3, #0
   13b9c:	movgt	r3, #1
   13ba0:	cmp	r3, #0
   13ba4:	bne	13d68 <abort@plt+0x3048>
   13ba8:	add	r5, r6, r5
   13bac:	cmp	fp, r5
   13bb0:	movge	r8, #0
   13bb4:	andlt	r8, r8, #1
   13bb8:	cmp	r8, #0
   13bbc:	mov	r4, r5
   13bc0:	bne	13d68 <abort@plt+0x3048>
   13bc4:	cmp	r7, #0
   13bc8:	blt	13c80 <abort@plt+0x2f60>
   13bcc:	beq	13bf8 <abort@plt+0x2ed8>
   13bd0:	cmp	r5, #0
   13bd4:	blt	13d28 <abort@plt+0x3008>
   13bd8:	mov	r1, r7
   13bdc:	mvn	r0, #-2147483648	; 0x80000000
   13be0:	bl	145dc <abort@plt+0x38bc>
   13be4:	cmp	r5, r0
   13be8:	movle	r0, #0
   13bec:	movgt	r0, #1
   13bf0:	cmp	r0, #0
   13bf4:	bne	13d68 <abort@plt+0x3048>
   13bf8:	mul	r1, r5, r7
   13bfc:	mov	r0, r9
   13c00:	bl	13978 <abort@plt+0x2c58>
   13c04:	str	r4, [sl]
   13c08:	add	sp, sp, #12
   13c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c10:	cmp	r7, #0
   13c14:	blt	13cac <abort@plt+0x2f8c>
   13c18:	beq	13b38 <abort@plt+0x2e18>
   13c1c:	cmp	r4, #0
   13c20:	blt	13ce8 <abort@plt+0x2fc8>
   13c24:	mov	r1, r7
   13c28:	mvn	r0, #-2147483648	; 0x80000000
   13c2c:	bl	145dc <abort@plt+0x38bc>
   13c30:	cmp	r0, r4
   13c34:	movge	r0, #0
   13c38:	movlt	r0, #1
   13c3c:	cmp	r0, #0
   13c40:	mvnne	r2, #-2147483648	; 0x80000000
   13c44:	bne	13b3c <abort@plt+0x2e1c>
   13c48:	mul	r1, r7, r4
   13c4c:	cmp	r1, #63	; 0x3f
   13c50:	bgt	13b68 <abort@plt+0x2e48>
   13c54:	b	13b38 <abort@plt+0x2e18>
   13c58:	rsb	r3, r4, #-2147483648	; 0x80000000
   13c5c:	cmp	r6, r3
   13c60:	movge	r3, #0
   13c64:	movlt	r3, #1
   13c68:	b	13b04 <abort@plt+0x2de4>
   13c6c:	rsb	r3, r5, #-2147483648	; 0x80000000
   13c70:	cmp	r6, r3
   13c74:	movge	r3, #0
   13c78:	movlt	r3, #1
   13c7c:	b	13ba0 <abort@plt+0x2e80>
   13c80:	cmp	r5, #0
   13c84:	blt	13d0c <abort@plt+0x2fec>
   13c88:	cmn	r7, #1
   13c8c:	beq	13bf8 <abort@plt+0x2ed8>
   13c90:	mov	r1, r7
   13c94:	mov	r0, #-2147483648	; 0x80000000
   13c98:	bl	145dc <abort@plt+0x38bc>
   13c9c:	cmp	r5, r0
   13ca0:	movle	r0, #0
   13ca4:	movgt	r0, #1
   13ca8:	b	13bf0 <abort@plt+0x2ed0>
   13cac:	cmp	r4, #0
   13cb0:	blt	13d4c <abort@plt+0x302c>
   13cb4:	cmn	r7, #1
   13cb8:	beq	13c48 <abort@plt+0x2f28>
   13cbc:	mov	r1, r7
   13cc0:	mov	r0, #-2147483648	; 0x80000000
   13cc4:	bl	145dc <abort@plt+0x38bc>
   13cc8:	cmp	r0, r4
   13ccc:	movge	r0, #0
   13cd0:	movlt	r0, #1
   13cd4:	b	13c3c <abort@plt+0x2f1c>
   13cd8:	mov	r4, fp
   13cdc:	b	13c24 <abort@plt+0x2f04>
   13ce0:	mov	r4, fp
   13ce4:	b	13cb4 <abort@plt+0x2f94>
   13ce8:	cmn	r4, #1
   13cec:	beq	13c48 <abort@plt+0x2f28>
   13cf0:	mov	r1, r4
   13cf4:	mov	r0, #-2147483648	; 0x80000000
   13cf8:	bl	145dc <abort@plt+0x38bc>
   13cfc:	cmp	r7, r0
   13d00:	movle	r0, #0
   13d04:	movgt	r0, #1
   13d08:	b	13c3c <abort@plt+0x2f1c>
   13d0c:	mov	r1, r7
   13d10:	mvn	r0, #-2147483648	; 0x80000000
   13d14:	bl	145dc <abort@plt+0x38bc>
   13d18:	cmp	r5, r0
   13d1c:	movge	r0, #0
   13d20:	movlt	r0, #1
   13d24:	b	13bf0 <abort@plt+0x2ed0>
   13d28:	cmn	r5, #1
   13d2c:	beq	13bf8 <abort@plt+0x2ed8>
   13d30:	mov	r1, r5
   13d34:	mov	r0, #-2147483648	; 0x80000000
   13d38:	bl	145dc <abort@plt+0x38bc>
   13d3c:	cmp	r7, r0
   13d40:	movle	r0, #0
   13d44:	movgt	r0, #1
   13d48:	b	13bf0 <abort@plt+0x2ed0>
   13d4c:	mov	r1, r7
   13d50:	mvn	r0, #-2147483648	; 0x80000000
   13d54:	bl	145dc <abort@plt+0x38bc>
   13d58:	cmp	r0, r4
   13d5c:	movle	r0, #0
   13d60:	movgt	r0, #1
   13d64:	b	13c3c <abort@plt+0x2f1c>
   13d68:	bl	13e84 <abort@plt+0x3164>
   13d6c:	push	{r4, lr}
   13d70:	mov	r1, #1
   13d74:	bl	13ec4 <abort@plt+0x31a4>
   13d78:	cmp	r0, #0
   13d7c:	popne	{r4, pc}
   13d80:	bl	13e84 <abort@plt+0x3164>
   13d84:	push	{r4, lr}
   13d88:	mov	r1, #1
   13d8c:	bl	13ec4 <abort@plt+0x31a4>
   13d90:	cmp	r0, #0
   13d94:	popne	{r4, pc}
   13d98:	bl	13e84 <abort@plt+0x3164>
   13d9c:	push	{r4, lr}
   13da0:	bl	13ec4 <abort@plt+0x31a4>
   13da4:	cmp	r0, #0
   13da8:	popne	{r4, pc}
   13dac:	bl	13e84 <abort@plt+0x3164>
   13db0:	push	{r4, lr}
   13db4:	bl	13ec4 <abort@plt+0x31a4>
   13db8:	cmp	r0, #0
   13dbc:	popne	{r4, pc}
   13dc0:	bl	13e84 <abort@plt+0x3164>
   13dc4:	push	{r4, r5, r6, lr}
   13dc8:	mov	r6, r0
   13dcc:	mov	r0, r1
   13dd0:	mov	r4, r1
   13dd4:	bl	13f0c <abort@plt+0x31ec>
   13dd8:	subs	r5, r0, #0
   13ddc:	beq	13df4 <abort@plt+0x30d4>
   13de0:	mov	r2, r4
   13de4:	mov	r1, r6
   13de8:	bl	10b70 <memcpy@plt>
   13dec:	mov	r0, r5
   13df0:	pop	{r4, r5, r6, pc}
   13df4:	bl	13e84 <abort@plt+0x3164>
   13df8:	push	{r4, r5, r6, lr}
   13dfc:	mov	r6, r0
   13e00:	mov	r0, r1
   13e04:	mov	r4, r1
   13e08:	bl	13f0c <abort@plt+0x31ec>
   13e0c:	subs	r5, r0, #0
   13e10:	beq	13e28 <abort@plt+0x3108>
   13e14:	mov	r2, r4
   13e18:	mov	r1, r6
   13e1c:	bl	10b70 <memcpy@plt>
   13e20:	mov	r0, r5
   13e24:	pop	{r4, r5, r6, pc}
   13e28:	bl	13e84 <abort@plt+0x3164>
   13e2c:	push	{r4, r5, r6, lr}
   13e30:	mov	r6, r0
   13e34:	add	r0, r1, #1
   13e38:	mov	r4, r1
   13e3c:	bl	13f0c <abort@plt+0x31ec>
   13e40:	subs	r5, r0, #0
   13e44:	beq	13e64 <abort@plt+0x3144>
   13e48:	mov	r3, #0
   13e4c:	mov	r1, r6
   13e50:	strb	r3, [r5, r4]
   13e54:	mov	r2, r4
   13e58:	bl	10b70 <memcpy@plt>
   13e5c:	mov	r0, r5
   13e60:	pop	{r4, r5, r6, pc}
   13e64:	bl	13e84 <abort@plt+0x3164>
   13e68:	push	{r4, lr}
   13e6c:	mov	r4, r0
   13e70:	bl	10c78 <strlen@plt>
   13e74:	add	r1, r0, #1
   13e78:	mov	r0, r4
   13e7c:	pop	{r4, lr}
   13e80:	b	13dc4 <abort@plt+0x30a4>
   13e84:	ldr	r3, [pc, #44]	; 13eb8 <abort@plt+0x3198>
   13e88:	push	{r4, lr}
   13e8c:	mov	r2, #5
   13e90:	ldr	r1, [pc, #36]	; 13ebc <abort@plt+0x319c>
   13e94:	mov	r0, #0
   13e98:	ldr	r4, [r3]
   13e9c:	bl	10ba0 <dcgettext@plt>
   13ea0:	ldr	r2, [pc, #24]	; 13ec0 <abort@plt+0x31a0>
   13ea4:	mov	r1, #0
   13ea8:	mov	r3, r0
   13eac:	mov	r0, r4
   13eb0:	bl	10c18 <error@plt>
   13eb4:	bl	10d20 <abort@plt>
   13eb8:	andeq	r6, r2, ip, asr #1
   13ebc:	andeq	r5, r1, ip, lsr r0
   13ec0:			; <UNDEFINED> instruction: 0x00014bbc
   13ec4:	cmp	r1, #0
   13ec8:	cmpne	r0, #0
   13ecc:	moveq	r1, #1
   13ed0:	moveq	r0, r1
   13ed4:	umull	r2, r3, r0, r1
   13ed8:	adds	r3, r3, #0
   13edc:	movne	r3, #1
   13ee0:	cmp	r2, #0
   13ee4:	blt	13ef4 <abort@plt+0x31d4>
   13ee8:	cmp	r3, #0
   13eec:	bne	13ef4 <abort@plt+0x31d4>
   13ef0:	b	10b1c <calloc@plt>
   13ef4:	push	{r4, lr}
   13ef8:	bl	10c84 <__errno_location@plt>
   13efc:	mov	r3, #12
   13f00:	str	r3, [r0]
   13f04:	mov	r0, #0
   13f08:	pop	{r4, pc}
   13f0c:	cmp	r0, #0
   13f10:	moveq	r0, #1
   13f14:	cmp	r0, #0
   13f18:	blt	13f20 <abort@plt+0x3200>
   13f1c:	b	10c24 <malloc@plt>
   13f20:	push	{r4, lr}
   13f24:	bl	10c84 <__errno_location@plt>
   13f28:	mov	r3, #12
   13f2c:	str	r3, [r0]
   13f30:	mov	r0, #0
   13f34:	pop	{r4, pc}
   13f38:	cmp	r0, #0
   13f3c:	beq	13f60 <abort@plt+0x3240>
   13f40:	cmp	r1, #0
   13f44:	push	{lr}		; (str lr, [sp, #-4]!)
   13f48:	sub	sp, sp, #12
   13f4c:	beq	13f68 <abort@plt+0x3248>
   13f50:	blt	13f80 <abort@plt+0x3260>
   13f54:	add	sp, sp, #12
   13f58:	pop	{lr}		; (ldr lr, [sp], #4)
   13f5c:	b	10bb8 <realloc@plt>
   13f60:	mov	r0, r1
   13f64:	b	13f0c <abort@plt+0x31ec>
   13f68:	str	r1, [sp, #4]
   13f6c:	bl	14110 <abort@plt+0x33f0>
   13f70:	ldr	r3, [sp, #4]
   13f74:	mov	r0, r3
   13f78:	add	sp, sp, #12
   13f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f80:	bl	10c84 <__errno_location@plt>
   13f84:	mov	r2, #12
   13f88:	mov	r3, #0
   13f8c:	str	r2, [r0]
   13f90:	b	13f74 <abort@plt+0x3254>
   13f94:	push	{r4, r5, r6, lr}
   13f98:	mov	r4, r0
   13f9c:	bl	10c00 <__fpending@plt>
   13fa0:	ldr	r5, [r4]
   13fa4:	and	r5, r5, #32
   13fa8:	mov	r6, r0
   13fac:	mov	r0, r4
   13fb0:	bl	14010 <abort@plt+0x32f0>
   13fb4:	cmp	r5, #0
   13fb8:	mov	r4, r0
   13fbc:	bne	13fdc <abort@plt+0x32bc>
   13fc0:	cmp	r0, #0
   13fc4:	beq	13fd4 <abort@plt+0x32b4>
   13fc8:	cmp	r6, #0
   13fcc:	beq	13ff8 <abort@plt+0x32d8>
   13fd0:	mvn	r4, #0
   13fd4:	mov	r0, r4
   13fd8:	pop	{r4, r5, r6, pc}
   13fdc:	cmp	r0, #0
   13fe0:	bne	13fd0 <abort@plt+0x32b0>
   13fe4:	bl	10c84 <__errno_location@plt>
   13fe8:	str	r4, [r0]
   13fec:	mvn	r4, #0
   13ff0:	mov	r0, r4
   13ff4:	pop	{r4, r5, r6, pc}
   13ff8:	bl	10c84 <__errno_location@plt>
   13ffc:	ldr	r4, [r0]
   14000:	subs	r4, r4, #9
   14004:	mvnne	r4, #0
   14008:	mov	r0, r4
   1400c:	pop	{r4, r5, r6, pc}
   14010:	push	{r4, r5, lr}
   14014:	sub	sp, sp, #12
   14018:	mov	r4, r0
   1401c:	bl	10cb4 <fileno@plt>
   14020:	cmp	r0, #0
   14024:	mov	r0, r4
   14028:	blt	140a4 <abort@plt+0x3384>
   1402c:	bl	10c3c <__freading@plt>
   14030:	cmp	r0, #0
   14034:	bne	14070 <abort@plt+0x3350>
   14038:	mov	r0, r4
   1403c:	bl	140b0 <abort@plt+0x3390>
   14040:	cmp	r0, #0
   14044:	beq	140a0 <abort@plt+0x3380>
   14048:	bl	10c84 <__errno_location@plt>
   1404c:	mov	r5, r0
   14050:	mov	r0, r4
   14054:	ldr	r4, [r5]
   14058:	bl	10ccc <fclose@plt>
   1405c:	cmp	r4, #0
   14060:	mvnne	r0, #0
   14064:	strne	r4, [r5]
   14068:	add	sp, sp, #12
   1406c:	pop	{r4, r5, pc}
   14070:	mov	r0, r4
   14074:	bl	10cb4 <fileno@plt>
   14078:	mov	r3, #1
   1407c:	str	r3, [sp]
   14080:	mov	r2, #0
   14084:	mov	r3, #0
   14088:	bl	10be8 <lseek64@plt>
   1408c:	mvn	r3, #0
   14090:	mvn	r2, #0
   14094:	cmp	r1, r3
   14098:	cmpeq	r0, r2
   1409c:	bne	14038 <abort@plt+0x3318>
   140a0:	mov	r0, r4
   140a4:	add	sp, sp, #12
   140a8:	pop	{r4, r5, lr}
   140ac:	b	10ccc <fclose@plt>
   140b0:	push	{r4, lr}
   140b4:	subs	r4, r0, #0
   140b8:	sub	sp, sp, #8
   140bc:	beq	140d8 <abort@plt+0x33b8>
   140c0:	bl	10c3c <__freading@plt>
   140c4:	cmp	r0, #0
   140c8:	beq	140d8 <abort@plt+0x33b8>
   140cc:	ldr	r3, [r4]
   140d0:	tst	r3, #256	; 0x100
   140d4:	bne	140e8 <abort@plt+0x33c8>
   140d8:	mov	r0, r4
   140dc:	add	sp, sp, #8
   140e0:	pop	{r4, lr}
   140e4:	b	10b4c <fflush@plt>
   140e8:	mov	r3, #1
   140ec:	str	r3, [sp]
   140f0:	mov	r2, #0
   140f4:	mov	r3, #0
   140f8:	mov	r0, r4
   140fc:	bl	14168 <abort@plt+0x3448>
   14100:	mov	r0, r4
   14104:	add	sp, sp, #8
   14108:	pop	{r4, lr}
   1410c:	b	10b4c <fflush@plt>
   14110:	push	{r4, r5, lr}
   14114:	sub	sp, sp, #12
   14118:	mov	r5, r0
   1411c:	bl	10c84 <__errno_location@plt>
   14120:	mov	r2, #0
   14124:	mov	r4, r0
   14128:	ldr	r3, [r0]
   1412c:	str	r2, [r4]
   14130:	mov	r0, r5
   14134:	str	r3, [sp]
   14138:	str	r3, [sp, #4]
   1413c:	bl	10b58 <free@plt>
   14140:	ldr	r3, [r4]
   14144:	add	r2, sp, #8
   14148:	cmp	r3, #0
   1414c:	moveq	r3, #4
   14150:	movne	r3, #0
   14154:	add	r3, r2, r3
   14158:	ldr	r3, [r3, #-8]
   1415c:	str	r3, [r4]
   14160:	add	sp, sp, #12
   14164:	pop	{r4, r5, pc}
   14168:	push	{r4, r5, r6, r7, r8, lr}
   1416c:	sub	sp, sp, #8
   14170:	ldmib	r0, {ip, lr}
   14174:	mov	r4, r0
   14178:	ldr	r5, [sp, #32]
   1417c:	cmp	lr, ip
   14180:	beq	14198 <abort@plt+0x3478>
   14184:	str	r5, [sp, #32]
   14188:	mov	r0, r4
   1418c:	add	sp, sp, #8
   14190:	pop	{r4, r5, r6, r7, r8, lr}
   14194:	b	10cd8 <fseeko64@plt>
   14198:	ldr	lr, [r0, #20]
   1419c:	ldr	ip, [r0, #16]
   141a0:	cmp	lr, ip
   141a4:	bne	14184 <abort@plt+0x3464>
   141a8:	ldr	r8, [r0, #36]	; 0x24
   141ac:	cmp	r8, #0
   141b0:	bne	14184 <abort@plt+0x3464>
   141b4:	mov	r6, r2
   141b8:	mov	r7, r3
   141bc:	bl	10cb4 <fileno@plt>
   141c0:	mov	r2, r6
   141c4:	mov	r3, r7
   141c8:	str	r5, [sp]
   141cc:	bl	10be8 <lseek64@plt>
   141d0:	mvn	r3, #0
   141d4:	mvn	r2, #0
   141d8:	cmp	r1, r3
   141dc:	cmpeq	r0, r2
   141e0:	beq	14200 <abort@plt+0x34e0>
   141e4:	ldr	r3, [r4]
   141e8:	strd	r0, [r4, #80]	; 0x50
   141ec:	mov	r0, r8
   141f0:	bic	r3, r3, #16
   141f4:	str	r3, [r4]
   141f8:	add	sp, sp, #8
   141fc:	pop	{r4, r5, r6, r7, r8, pc}
   14200:	mvn	r0, #0
   14204:	b	141f8 <abort@plt+0x34d8>
   14208:	push	{r4, lr}
   1420c:	mov	r0, #14
   14210:	bl	10cfc <nl_langinfo@plt>
   14214:	cmp	r0, #0
   14218:	beq	14230 <abort@plt+0x3510>
   1421c:	ldrb	r2, [r0]
   14220:	ldr	r3, [pc, #16]	; 14238 <abort@plt+0x3518>
   14224:	cmp	r2, #0
   14228:	moveq	r0, r3
   1422c:	pop	{r4, pc}
   14230:	ldr	r0, [pc]	; 14238 <abort@plt+0x3518>
   14234:	pop	{r4, pc}
   14238:	andeq	r5, r1, r0, asr r0
   1423c:	push	{r4, r5, r6, r7, lr}
   14240:	subs	r6, r0, #0
   14244:	sub	sp, sp, #12
   14248:	addeq	r6, sp, #4
   1424c:	mov	r0, r6
   14250:	mov	r5, r2
   14254:	mov	r7, r1
   14258:	bl	10c0c <mbrtowc@plt>
   1425c:	cmp	r5, #0
   14260:	cmnne	r0, #3
   14264:	mov	r4, r0
   14268:	bls	14284 <abort@plt+0x3564>
   1426c:	mov	r0, #0
   14270:	bl	142dc <abort@plt+0x35bc>
   14274:	cmp	r0, #0
   14278:	moveq	r4, #1
   1427c:	ldrbeq	r3, [r7]
   14280:	streq	r3, [r6]
   14284:	mov	r0, r4
   14288:	add	sp, sp, #12
   1428c:	pop	{r4, r5, r6, r7, pc}
   14290:	push	{r4, r5, r6, lr}
   14294:	subs	r4, r2, #0
   14298:	mov	r6, r0
   1429c:	mov	r5, r1
   142a0:	beq	142cc <abort@plt+0x35ac>
   142a4:	mov	r1, r4
   142a8:	mvn	r0, #0
   142ac:	bl	143d0 <abort@plt+0x36b0>
   142b0:	cmp	r0, r5
   142b4:	bcs	142cc <abort@plt+0x35ac>
   142b8:	bl	10c84 <__errno_location@plt>
   142bc:	mov	r3, #12
   142c0:	str	r3, [r0]
   142c4:	mov	r0, #0
   142c8:	pop	{r4, r5, r6, pc}
   142cc:	mul	r1, r5, r4
   142d0:	mov	r0, r6
   142d4:	pop	{r4, r5, r6, lr}
   142d8:	b	13f38 <abort@plt+0x3218>
   142dc:	push	{lr}		; (str lr, [sp, #-4]!)
   142e0:	sub	sp, sp, #268	; 0x10c
   142e4:	add	r1, sp, #4
   142e8:	ldr	r2, [pc, #60]	; 1432c <abort@plt+0x360c>
   142ec:	bl	14338 <abort@plt+0x3618>
   142f0:	cmp	r0, #0
   142f4:	movne	r0, #0
   142f8:	bne	14324 <abort@plt+0x3604>
   142fc:	ldr	r1, [pc, #44]	; 14330 <abort@plt+0x3610>
   14300:	add	r0, sp, #4
   14304:	bl	10b40 <strcmp@plt>
   14308:	cmp	r0, #0
   1430c:	beq	14324 <abort@plt+0x3604>
   14310:	add	r0, sp, #4
   14314:	ldr	r1, [pc, #24]	; 14334 <abort@plt+0x3614>
   14318:	bl	10b40 <strcmp@plt>
   1431c:	adds	r0, r0, #0
   14320:	movne	r0, #1
   14324:	add	sp, sp, #268	; 0x10c
   14328:	pop	{pc}		; (ldr pc, [sp], #4)
   1432c:	andeq	r0, r0, r1, lsl #2
   14330:	andeq	r5, r1, r8, asr r0
   14334:	andeq	r5, r1, ip, asr r0
   14338:	push	{r4, r5, r6, lr}
   1433c:	mov	r5, r1
   14340:	mov	r1, #0
   14344:	mov	r4, r2
   14348:	bl	10ce4 <setlocale@plt>
   1434c:	subs	r6, r0, #0
   14350:	beq	143ac <abort@plt+0x368c>
   14354:	bl	10c78 <strlen@plt>
   14358:	cmp	r4, r0
   1435c:	bhi	14394 <abort@plt+0x3674>
   14360:	cmp	r4, #0
   14364:	bne	14370 <abort@plt+0x3650>
   14368:	mov	r0, #34	; 0x22
   1436c:	pop	{r4, r5, r6, pc}
   14370:	sub	r4, r4, #1
   14374:	mov	r1, r6
   14378:	mov	r2, r4
   1437c:	mov	r0, r5
   14380:	bl	10b70 <memcpy@plt>
   14384:	mov	r3, #0
   14388:	strb	r3, [r5, r4]
   1438c:	mov	r0, #34	; 0x22
   14390:	pop	{r4, r5, r6, pc}
   14394:	add	r2, r0, #1
   14398:	mov	r1, r6
   1439c:	mov	r0, r5
   143a0:	bl	10b70 <memcpy@plt>
   143a4:	mov	r0, #0
   143a8:	pop	{r4, r5, r6, pc}
   143ac:	cmp	r4, #0
   143b0:	beq	143c0 <abort@plt+0x36a0>
   143b4:	strb	r6, [r5]
   143b8:	mov	r0, #22
   143bc:	pop	{r4, r5, r6, pc}
   143c0:	mov	r0, #22
   143c4:	pop	{r4, r5, r6, pc}
   143c8:	mov	r1, #0
   143cc:	b	10ce4 <setlocale@plt>
   143d0:	subs	r2, r1, #1
   143d4:	bxeq	lr
   143d8:	bcc	145b0 <abort@plt+0x3890>
   143dc:	cmp	r0, r1
   143e0:	bls	14594 <abort@plt+0x3874>
   143e4:	tst	r1, r2
   143e8:	beq	145a0 <abort@plt+0x3880>
   143ec:	clz	r3, r0
   143f0:	clz	r2, r1
   143f4:	sub	r3, r2, r3
   143f8:	rsbs	r3, r3, #31
   143fc:	addne	r3, r3, r3, lsl #1
   14400:	mov	r2, #0
   14404:	addne	pc, pc, r3, lsl #2
   14408:	nop			; (mov r0, r0)
   1440c:	cmp	r0, r1, lsl #31
   14410:	adc	r2, r2, r2
   14414:	subcs	r0, r0, r1, lsl #31
   14418:	cmp	r0, r1, lsl #30
   1441c:	adc	r2, r2, r2
   14420:	subcs	r0, r0, r1, lsl #30
   14424:	cmp	r0, r1, lsl #29
   14428:	adc	r2, r2, r2
   1442c:	subcs	r0, r0, r1, lsl #29
   14430:	cmp	r0, r1, lsl #28
   14434:	adc	r2, r2, r2
   14438:	subcs	r0, r0, r1, lsl #28
   1443c:	cmp	r0, r1, lsl #27
   14440:	adc	r2, r2, r2
   14444:	subcs	r0, r0, r1, lsl #27
   14448:	cmp	r0, r1, lsl #26
   1444c:	adc	r2, r2, r2
   14450:	subcs	r0, r0, r1, lsl #26
   14454:	cmp	r0, r1, lsl #25
   14458:	adc	r2, r2, r2
   1445c:	subcs	r0, r0, r1, lsl #25
   14460:	cmp	r0, r1, lsl #24
   14464:	adc	r2, r2, r2
   14468:	subcs	r0, r0, r1, lsl #24
   1446c:	cmp	r0, r1, lsl #23
   14470:	adc	r2, r2, r2
   14474:	subcs	r0, r0, r1, lsl #23
   14478:	cmp	r0, r1, lsl #22
   1447c:	adc	r2, r2, r2
   14480:	subcs	r0, r0, r1, lsl #22
   14484:	cmp	r0, r1, lsl #21
   14488:	adc	r2, r2, r2
   1448c:	subcs	r0, r0, r1, lsl #21
   14490:	cmp	r0, r1, lsl #20
   14494:	adc	r2, r2, r2
   14498:	subcs	r0, r0, r1, lsl #20
   1449c:	cmp	r0, r1, lsl #19
   144a0:	adc	r2, r2, r2
   144a4:	subcs	r0, r0, r1, lsl #19
   144a8:	cmp	r0, r1, lsl #18
   144ac:	adc	r2, r2, r2
   144b0:	subcs	r0, r0, r1, lsl #18
   144b4:	cmp	r0, r1, lsl #17
   144b8:	adc	r2, r2, r2
   144bc:	subcs	r0, r0, r1, lsl #17
   144c0:	cmp	r0, r1, lsl #16
   144c4:	adc	r2, r2, r2
   144c8:	subcs	r0, r0, r1, lsl #16
   144cc:	cmp	r0, r1, lsl #15
   144d0:	adc	r2, r2, r2
   144d4:	subcs	r0, r0, r1, lsl #15
   144d8:	cmp	r0, r1, lsl #14
   144dc:	adc	r2, r2, r2
   144e0:	subcs	r0, r0, r1, lsl #14
   144e4:	cmp	r0, r1, lsl #13
   144e8:	adc	r2, r2, r2
   144ec:	subcs	r0, r0, r1, lsl #13
   144f0:	cmp	r0, r1, lsl #12
   144f4:	adc	r2, r2, r2
   144f8:	subcs	r0, r0, r1, lsl #12
   144fc:	cmp	r0, r1, lsl #11
   14500:	adc	r2, r2, r2
   14504:	subcs	r0, r0, r1, lsl #11
   14508:	cmp	r0, r1, lsl #10
   1450c:	adc	r2, r2, r2
   14510:	subcs	r0, r0, r1, lsl #10
   14514:	cmp	r0, r1, lsl #9
   14518:	adc	r2, r2, r2
   1451c:	subcs	r0, r0, r1, lsl #9
   14520:	cmp	r0, r1, lsl #8
   14524:	adc	r2, r2, r2
   14528:	subcs	r0, r0, r1, lsl #8
   1452c:	cmp	r0, r1, lsl #7
   14530:	adc	r2, r2, r2
   14534:	subcs	r0, r0, r1, lsl #7
   14538:	cmp	r0, r1, lsl #6
   1453c:	adc	r2, r2, r2
   14540:	subcs	r0, r0, r1, lsl #6
   14544:	cmp	r0, r1, lsl #5
   14548:	adc	r2, r2, r2
   1454c:	subcs	r0, r0, r1, lsl #5
   14550:	cmp	r0, r1, lsl #4
   14554:	adc	r2, r2, r2
   14558:	subcs	r0, r0, r1, lsl #4
   1455c:	cmp	r0, r1, lsl #3
   14560:	adc	r2, r2, r2
   14564:	subcs	r0, r0, r1, lsl #3
   14568:	cmp	r0, r1, lsl #2
   1456c:	adc	r2, r2, r2
   14570:	subcs	r0, r0, r1, lsl #2
   14574:	cmp	r0, r1, lsl #1
   14578:	adc	r2, r2, r2
   1457c:	subcs	r0, r0, r1, lsl #1
   14580:	cmp	r0, r1
   14584:	adc	r2, r2, r2
   14588:	subcs	r0, r0, r1
   1458c:	mov	r0, r2
   14590:	bx	lr
   14594:	moveq	r0, #1
   14598:	movne	r0, #0
   1459c:	bx	lr
   145a0:	clz	r2, r1
   145a4:	rsb	r2, r2, #31
   145a8:	lsr	r0, r0, r2
   145ac:	bx	lr
   145b0:	cmp	r0, #0
   145b4:	mvnne	r0, #0
   145b8:	b	1481c <abort@plt+0x3afc>
   145bc:	cmp	r1, #0
   145c0:	beq	145b0 <abort@plt+0x3890>
   145c4:	push	{r0, r1, lr}
   145c8:	bl	143d0 <abort@plt+0x36b0>
   145cc:	pop	{r1, r2, lr}
   145d0:	mul	r3, r2, r0
   145d4:	sub	r1, r1, r3
   145d8:	bx	lr
   145dc:	cmp	r1, #0
   145e0:	beq	147ec <abort@plt+0x3acc>
   145e4:	eor	ip, r0, r1
   145e8:	rsbmi	r1, r1, #0
   145ec:	subs	r2, r1, #1
   145f0:	beq	147b8 <abort@plt+0x3a98>
   145f4:	movs	r3, r0
   145f8:	rsbmi	r3, r0, #0
   145fc:	cmp	r3, r1
   14600:	bls	147c4 <abort@plt+0x3aa4>
   14604:	tst	r1, r2
   14608:	beq	147d4 <abort@plt+0x3ab4>
   1460c:	clz	r2, r3
   14610:	clz	r0, r1
   14614:	sub	r2, r0, r2
   14618:	rsbs	r2, r2, #31
   1461c:	addne	r2, r2, r2, lsl #1
   14620:	mov	r0, #0
   14624:	addne	pc, pc, r2, lsl #2
   14628:	nop			; (mov r0, r0)
   1462c:	cmp	r3, r1, lsl #31
   14630:	adc	r0, r0, r0
   14634:	subcs	r3, r3, r1, lsl #31
   14638:	cmp	r3, r1, lsl #30
   1463c:	adc	r0, r0, r0
   14640:	subcs	r3, r3, r1, lsl #30
   14644:	cmp	r3, r1, lsl #29
   14648:	adc	r0, r0, r0
   1464c:	subcs	r3, r3, r1, lsl #29
   14650:	cmp	r3, r1, lsl #28
   14654:	adc	r0, r0, r0
   14658:	subcs	r3, r3, r1, lsl #28
   1465c:	cmp	r3, r1, lsl #27
   14660:	adc	r0, r0, r0
   14664:	subcs	r3, r3, r1, lsl #27
   14668:	cmp	r3, r1, lsl #26
   1466c:	adc	r0, r0, r0
   14670:	subcs	r3, r3, r1, lsl #26
   14674:	cmp	r3, r1, lsl #25
   14678:	adc	r0, r0, r0
   1467c:	subcs	r3, r3, r1, lsl #25
   14680:	cmp	r3, r1, lsl #24
   14684:	adc	r0, r0, r0
   14688:	subcs	r3, r3, r1, lsl #24
   1468c:	cmp	r3, r1, lsl #23
   14690:	adc	r0, r0, r0
   14694:	subcs	r3, r3, r1, lsl #23
   14698:	cmp	r3, r1, lsl #22
   1469c:	adc	r0, r0, r0
   146a0:	subcs	r3, r3, r1, lsl #22
   146a4:	cmp	r3, r1, lsl #21
   146a8:	adc	r0, r0, r0
   146ac:	subcs	r3, r3, r1, lsl #21
   146b0:	cmp	r3, r1, lsl #20
   146b4:	adc	r0, r0, r0
   146b8:	subcs	r3, r3, r1, lsl #20
   146bc:	cmp	r3, r1, lsl #19
   146c0:	adc	r0, r0, r0
   146c4:	subcs	r3, r3, r1, lsl #19
   146c8:	cmp	r3, r1, lsl #18
   146cc:	adc	r0, r0, r0
   146d0:	subcs	r3, r3, r1, lsl #18
   146d4:	cmp	r3, r1, lsl #17
   146d8:	adc	r0, r0, r0
   146dc:	subcs	r3, r3, r1, lsl #17
   146e0:	cmp	r3, r1, lsl #16
   146e4:	adc	r0, r0, r0
   146e8:	subcs	r3, r3, r1, lsl #16
   146ec:	cmp	r3, r1, lsl #15
   146f0:	adc	r0, r0, r0
   146f4:	subcs	r3, r3, r1, lsl #15
   146f8:	cmp	r3, r1, lsl #14
   146fc:	adc	r0, r0, r0
   14700:	subcs	r3, r3, r1, lsl #14
   14704:	cmp	r3, r1, lsl #13
   14708:	adc	r0, r0, r0
   1470c:	subcs	r3, r3, r1, lsl #13
   14710:	cmp	r3, r1, lsl #12
   14714:	adc	r0, r0, r0
   14718:	subcs	r3, r3, r1, lsl #12
   1471c:	cmp	r3, r1, lsl #11
   14720:	adc	r0, r0, r0
   14724:	subcs	r3, r3, r1, lsl #11
   14728:	cmp	r3, r1, lsl #10
   1472c:	adc	r0, r0, r0
   14730:	subcs	r3, r3, r1, lsl #10
   14734:	cmp	r3, r1, lsl #9
   14738:	adc	r0, r0, r0
   1473c:	subcs	r3, r3, r1, lsl #9
   14740:	cmp	r3, r1, lsl #8
   14744:	adc	r0, r0, r0
   14748:	subcs	r3, r3, r1, lsl #8
   1474c:	cmp	r3, r1, lsl #7
   14750:	adc	r0, r0, r0
   14754:	subcs	r3, r3, r1, lsl #7
   14758:	cmp	r3, r1, lsl #6
   1475c:	adc	r0, r0, r0
   14760:	subcs	r3, r3, r1, lsl #6
   14764:	cmp	r3, r1, lsl #5
   14768:	adc	r0, r0, r0
   1476c:	subcs	r3, r3, r1, lsl #5
   14770:	cmp	r3, r1, lsl #4
   14774:	adc	r0, r0, r0
   14778:	subcs	r3, r3, r1, lsl #4
   1477c:	cmp	r3, r1, lsl #3
   14780:	adc	r0, r0, r0
   14784:	subcs	r3, r3, r1, lsl #3
   14788:	cmp	r3, r1, lsl #2
   1478c:	adc	r0, r0, r0
   14790:	subcs	r3, r3, r1, lsl #2
   14794:	cmp	r3, r1, lsl #1
   14798:	adc	r0, r0, r0
   1479c:	subcs	r3, r3, r1, lsl #1
   147a0:	cmp	r3, r1
   147a4:	adc	r0, r0, r0
   147a8:	subcs	r3, r3, r1
   147ac:	cmp	ip, #0
   147b0:	rsbmi	r0, r0, #0
   147b4:	bx	lr
   147b8:	teq	ip, r0
   147bc:	rsbmi	r0, r0, #0
   147c0:	bx	lr
   147c4:	movcc	r0, #0
   147c8:	asreq	r0, ip, #31
   147cc:	orreq	r0, r0, #1
   147d0:	bx	lr
   147d4:	clz	r2, r1
   147d8:	rsb	r2, r2, #31
   147dc:	cmp	ip, #0
   147e0:	lsr	r0, r3, r2
   147e4:	rsbmi	r0, r0, #0
   147e8:	bx	lr
   147ec:	cmp	r0, #0
   147f0:	mvngt	r0, #-2147483648	; 0x80000000
   147f4:	movlt	r0, #-2147483648	; 0x80000000
   147f8:	b	1481c <abort@plt+0x3afc>
   147fc:	cmp	r1, #0
   14800:	beq	147ec <abort@plt+0x3acc>
   14804:	push	{r0, r1, lr}
   14808:	bl	145e4 <abort@plt+0x38c4>
   1480c:	pop	{r1, r2, lr}
   14810:	mul	r3, r2, r0
   14814:	sub	r1, r1, r3
   14818:	bx	lr
   1481c:	push	{r1, lr}
   14820:	mov	r0, #8
   14824:	bl	10b34 <raise@plt>
   14828:	pop	{r1, pc}
   1482c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14830:	mov	r7, r0
   14834:	ldr	r6, [pc, #72]	; 14884 <abort@plt+0x3b64>
   14838:	ldr	r5, [pc, #72]	; 14888 <abort@plt+0x3b68>
   1483c:	add	r6, pc, r6
   14840:	add	r5, pc, r5
   14844:	sub	r6, r6, r5
   14848:	mov	r8, r1
   1484c:	mov	r9, r2
   14850:	bl	10afc <calloc@plt-0x20>
   14854:	asrs	r6, r6, #2
   14858:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1485c:	mov	r4, #0
   14860:	add	r4, r4, #1
   14864:	ldr	r3, [r5], #4
   14868:	mov	r2, r9
   1486c:	mov	r1, r8
   14870:	mov	r0, r7
   14874:	blx	r3
   14878:	cmp	r6, r4
   1487c:	bne	14860 <abort@plt+0x3b40>
   14880:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14884:	andeq	r1, r1, ip, asr #13
   14888:	andeq	r1, r1, r4, asr #13
   1488c:	bx	lr
   14890:	ldr	r3, [pc, #12]	; 148a4 <abort@plt+0x3b84>
   14894:	mov	r1, #0
   14898:	add	r3, pc, r3
   1489c:	ldr	r2, [r3]
   148a0:	b	10c90 <__cxa_atexit@plt>
   148a4:	andeq	r1, r1, r4, lsr #16

Disassembly of section .fini:

000148a8 <.fini>:
   148a8:	push	{r3, lr}
   148ac:	pop	{r3, pc}
