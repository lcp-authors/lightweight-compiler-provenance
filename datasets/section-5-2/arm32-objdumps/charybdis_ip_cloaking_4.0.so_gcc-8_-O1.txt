
../repos/charybdis/extensions/.libs/ip_cloaking_4.0.so:     file format elf32-littlearm


Disassembly of section .init:

000005cc <_init>:
 5cc:	push	{r3, lr}
 5d0:	bl	6a0 <call_weak_fn>
 5d4:	pop	{r3, pc}

Disassembly of section .plt:

000005d8 <.plt>:
 5d8:	push	{lr}		; (str lr, [sp, #-4]!)
 5dc:	ldr	lr, [pc, #4]	; 5e8 <.plt+0x10>
 5e0:	add	lr, pc, lr
 5e4:	ldr	pc, [lr, #8]!
 5e8:	.word	0x00011a18

000005ec <calloc@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #69632	; 0x11000
 5f4:	ldr	pc, [ip, #2584]!	; 0xa18

000005f8 <strcmp@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #69632	; 0x11000
 600:	ldr	pc, [ip, #2576]!	; 0xa10

00000604 <__cxa_finalize@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #69632	; 0x11000
 60c:	ldr	pc, [ip, #2568]!	; 0xa08

00000610 <rb_outofmemory@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #69632	; 0x11000
 618:	ldr	pc, [ip, #2560]!	; 0xa00

0000061c <find_umode_slot@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #69632	; 0x11000
 624:	ldr	pc, [ip, #2552]!	; 0x9f8

00000628 <fnv_hash@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #69632	; 0x11000
 630:	ldr	pc, [ip, #2544]!	; 0x9f0

00000634 <sendto_server@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #69632	; 0x11000
 63c:	ldr	pc, [ip, #2536]!	; 0x9e8

00000640 <__gmon_start__@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2528]!	; 0x9e0

0000064c <__ctype_b_loc@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2520]!	; 0x9d8

00000658 <sendto_one_numeric@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2512]!	; 0x9d0

00000664 <strchr@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2504]!	; 0x9c8

00000670 <change_nick_user_host@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2496]!	; 0x9c0

0000067c <rb_strlcpy@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2488]!	; 0x9b8

00000688 <irccmp@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2480]!	; 0x9b0

00000694 <construct_umodebuf@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2472]!	; 0x9a8

Disassembly of section .text:

000006a0 <call_weak_fn>:
 6a0:	ldr	r3, [pc, #20]	; 6bc <call_weak_fn+0x1c>
 6a4:	ldr	r2, [pc, #20]	; 6c0 <call_weak_fn+0x20>
 6a8:	add	r3, pc, r3
 6ac:	ldr	r2, [r3, r2]
 6b0:	cmp	r2, #0
 6b4:	bxeq	lr
 6b8:	b	640 <__gmon_start__@plt>
 6bc:	.word	0x00011950
 6c0:	.word	0x00000058

000006c4 <deregister_tm_clones>:
 6c4:	ldr	r0, [pc, #44]	; 6f8 <deregister_tm_clones+0x34>
 6c8:	ldr	r3, [pc, #44]	; 6fc <deregister_tm_clones+0x38>
 6cc:	add	r0, pc, r0
 6d0:	add	r3, pc, r3
 6d4:	cmp	r3, r0
 6d8:	ldr	r3, [pc, #32]	; 700 <deregister_tm_clones+0x3c>
 6dc:	add	r3, pc, r3
 6e0:	bxeq	lr
 6e4:	ldr	r2, [pc, #24]	; 704 <deregister_tm_clones+0x40>
 6e8:	ldr	r3, [r3, r2]
 6ec:	cmp	r3, #0
 6f0:	bxeq	lr
 6f4:	bx	r3
 6f8:	.word	0x000119e4
 6fc:	.word	0x000119e0
 700:	.word	0x0001191c
 704:	.word	0x0000004c

00000708 <register_tm_clones>:
 708:	ldr	r0, [pc, #56]	; 748 <register_tm_clones+0x40>
 70c:	ldr	r3, [pc, #56]	; 74c <register_tm_clones+0x44>
 710:	add	r0, pc, r0
 714:	add	r3, pc, r3
 718:	sub	r1, r3, r0
 71c:	ldr	r3, [pc, #44]	; 750 <register_tm_clones+0x48>
 720:	asr	r1, r1, #2
 724:	add	r3, pc, r3
 728:	add	r1, r1, r1, lsr #31
 72c:	asrs	r1, r1, #1
 730:	bxeq	lr
 734:	ldr	r2, [pc, #24]	; 754 <register_tm_clones+0x4c>
 738:	ldr	r3, [r3, r2]
 73c:	cmp	r3, #0
 740:	bxeq	lr
 744:	bx	r3
 748:	.word	0x000119a0
 74c:	.word	0x0001199c
 750:	.word	0x000118d4
 754:	.word	0x00000060

00000758 <__do_global_dtors_aux>:
 758:	ldr	r3, [pc, #76]	; 7ac <__do_global_dtors_aux+0x54>
 75c:	ldr	r2, [pc, #76]	; 7b0 <__do_global_dtors_aux+0x58>
 760:	add	r3, pc, r3
 764:	add	r2, pc, r2
 768:	ldrb	r3, [r3]
 76c:	cmp	r3, #0
 770:	bxne	lr
 774:	ldr	r3, [pc, #56]	; 7b4 <__do_global_dtors_aux+0x5c>
 778:	push	{r4, lr}
 77c:	ldr	r3, [r2, r3]
 780:	cmp	r3, #0
 784:	beq	794 <__do_global_dtors_aux+0x3c>
 788:	ldr	r3, [pc, #40]	; 7b8 <__do_global_dtors_aux+0x60>
 78c:	ldr	r0, [pc, r3]
 790:	bl	604 <__cxa_finalize@plt>
 794:	bl	6c4 <deregister_tm_clones>
 798:	ldr	r3, [pc, #28]	; 7bc <__do_global_dtors_aux+0x64>
 79c:	mov	r2, #1
 7a0:	add	r3, pc, r3
 7a4:	strb	r2, [r3]
 7a8:	pop	{r4, pc}
 7ac:	.word	0x00011950
 7b0:	.word	0x00011894
 7b4:	.word	0x00000048
 7b8:	.word	0x000118d4
 7bc:	.word	0x00011910

000007c0 <frame_dummy>:
 7c0:	b	708 <register_tm_clones>

000007c4 <check_new_user>:
 7c4:	strd	r4, [sp, #-28]!	; 0xffffffe4
 7c8:	strd	r6, [sp, #8]
 7cc:	strd	r8, [sp, #16]
 7d0:	str	lr, [sp, #24]
 7d4:	sub	sp, sp, #36	; 0x24
 7d8:	ldr	r6, [pc, #880]	; b50 <check_new_user+0x38c>
 7dc:	add	r6, pc, r6
 7e0:	ldr	r1, [r0, #64]	; 0x40
 7e4:	and	r2, r1, #16777216	; 0x1000000
 7e8:	mov	r3, #0
 7ec:	orrs	r3, r2, r3
 7f0:	beq	824 <check_new_user+0x60>
 7f4:	ldr	r3, [pc, #856]	; b54 <check_new_user+0x390>
 7f8:	ldr	r3, [r6, r3]
 7fc:	ldr	r2, [r3, #480]	; 0x1e0
 800:	ldr	r3, [r0, #56]	; 0x38
 804:	bic	r3, r3, r2
 808:	str	r3, [r0, #56]	; 0x38
 80c:	add	sp, sp, #36	; 0x24
 810:	ldrd	r4, [sp]
 814:	ldrd	r6, [sp, #8]
 818:	ldrd	r8, [sp, #16]
 81c:	add	sp, sp, #24
 820:	pop	{pc}		; (ldr pc, [sp], #4)
 824:	mov	r5, r0
 828:	ldr	r4, [r0, #432]	; 0x1b0
 82c:	mov	r1, #64	; 0x40
 830:	mov	r0, #1
 834:	bl	5ec <calloc@plt>
 838:	cmp	r0, #0
 83c:	beq	908 <check_new_user+0x144>
 840:	str	r0, [r4, #432]	; 0x1b0
 844:	add	r8, r5, #227	; 0xe3
 848:	add	r1, r5, #288	; 0x120
 84c:	add	r1, r1, #3
 850:	mov	r0, r8
 854:	bl	688 <irccmp@plt>
 858:	subs	r7, r0, #0
 85c:	bne	998 <check_new_user+0x1d4>
 860:	ldr	r3, [r5, #432]	; 0x1b0
 864:	ldr	r4, [r3, #432]	; 0x1b0
 868:	ldr	r0, [pc, #744]	; b58 <check_new_user+0x394>
 86c:	add	r0, pc, r0
 870:	ldrd	r2, [r0]
 874:	strd	r2, [sp, #4]
 878:	ldrd	r2, [r0, #8]
 87c:	strd	r2, [sp, #12]
 880:	ldr	r3, [r0, #16]
 884:	str	r3, [sp, #20]
 888:	ldrb	r3, [r0, #20]
 88c:	strb	r3, [sp, #24]
 890:	mov	r1, #32
 894:	mov	r0, r8
 898:	bl	628 <fnv_hash@plt>
 89c:	mov	r9, r0
 8a0:	mov	r2, #64	; 0x40
 8a4:	mov	r1, r8
 8a8:	mov	r0, r4
 8ac:	bl	67c <rb_strlcpy@plt>
 8b0:	mov	r1, #58	; 0x3a
 8b4:	mov	r0, r4
 8b8:	bl	664 <strchr@plt>
 8bc:	cmp	r0, #0
 8c0:	beq	90c <check_new_user+0x148>
 8c4:	ldrb	r3, [r4]
 8c8:	cmp	r3, #0
 8cc:	beq	ad0 <check_new_user+0x30c>
 8d0:	mov	r0, r4
 8d4:	mov	r1, r7
 8d8:	mov	r2, r3
 8dc:	cmp	r2, #58	; 0x3a
 8e0:	addeq	r1, r1, #1
 8e4:	ldrb	r2, [r0, #1]!
 8e8:	cmp	r2, #0
 8ec:	bne	8dc <check_new_user+0x118>
 8f0:	mov	r0, #1
 8f4:	add	r1, r1, r1, lsr #31
 8f8:	asr	r1, r1, #1
 8fc:	movw	ip, #52429	; 0xcccd
 900:	movt	ip, #52428	; 0xcccc
 904:	b	974 <check_new_user+0x1b0>
 908:	bl	610 <rb_outofmemory@plt>
 90c:	mov	r1, #46	; 0x2e
 910:	mov	r0, r4
 914:	bl	664 <strchr@plt>
 918:	cmp	r0, #0
 91c:	beq	ad0 <check_new_user+0x30c>
 920:	ldrb	r3, [r4]
 924:	cmp	r3, #0
 928:	beq	ad0 <check_new_user+0x30c>
 92c:	mov	r1, r7
 930:	mov	r0, r7
 934:	b	8f4 <check_new_user+0x130>
 938:	cmp	r7, #1
 93c:	ble	968 <check_new_user+0x1a4>
 940:	add	r3, r3, r9
 944:	umull	lr, r2, ip, r3
 948:	lsr	r2, r2, #4
 94c:	add	r2, r2, r2, lsl #2
 950:	sub	r3, r3, r2, lsl #2
 954:	add	r2, sp, #32
 958:	add	r3, r2, r3
 95c:	ldrb	r3, [r3, #-28]	; 0xffffffe4
 960:	strb	r3, [r4]
 964:	ror	r9, r9, #31
 968:	ldrb	r3, [r4, #1]!
 96c:	cmp	r3, #0
 970:	beq	ad0 <check_new_user+0x30c>
 974:	cmp	r3, #46	; 0x2e
 978:	cmpne	r3, #58	; 0x3a
 97c:	addeq	r7, r7, #1
 980:	beq	968 <check_new_user+0x1a4>
 984:	cmp	r0, #0
 988:	beq	938 <check_new_user+0x174>
 98c:	cmp	r1, r7
 990:	ble	940 <check_new_user+0x17c>
 994:	b	968 <check_new_user+0x1a4>
 998:	ldr	r3, [r5, #432]	; 0x1b0
 99c:	ldr	r9, [r3, #432]	; 0x1b0
 9a0:	ldr	r0, [pc, #436]	; b5c <check_new_user+0x398>
 9a4:	add	r0, pc, r0
 9a8:	ldrd	r2, [r0]
 9ac:	strd	r2, [sp, #4]
 9b0:	ldrd	r2, [r0, #8]
 9b4:	strd	r2, [sp, #12]
 9b8:	ldrd	r2, [r0, #16]
 9bc:	strd	r2, [sp, #20]
 9c0:	ldrh	r3, [r0, #24]
 9c4:	strh	r3, [sp, #28]
 9c8:	ldrb	r3, [r0, #26]
 9cc:	strb	r3, [sp, #30]
 9d0:	mov	r1, #32
 9d4:	mov	r0, r8
 9d8:	bl	628 <fnv_hash@plt>
 9dc:	mov	r7, r0
 9e0:	mov	r2, #64	; 0x40
 9e4:	mov	r1, r8
 9e8:	mov	r0, r9
 9ec:	bl	67c <rb_strlcpy@plt>
 9f0:	ldrb	r4, [r9]
 9f4:	cmp	r4, #0
 9f8:	cmpne	r4, #46	; 0x2e
 9fc:	beq	a70 <check_new_user+0x2ac>
 a00:	bl	64c <__ctype_b_loc@plt>
 a04:	mov	r2, r9
 a08:	movw	r1, #60495	; 0xec4f
 a0c:	movt	r1, #20164	; 0x4ec4
 a10:	mov	ip, #26
 a14:	b	a4c <check_new_user+0x288>
 a18:	add	r4, r4, r7
 a1c:	umull	lr, r3, r1, r4
 a20:	lsr	r3, r3, #3
 a24:	mls	r3, ip, r3, r4
 a28:	add	lr, sp, #32
 a2c:	add	r3, lr, r3
 a30:	ldrb	r3, [r3, #-28]	; 0xffffffe4
 a34:	strb	r3, [r2]
 a38:	ror	r7, r7, #31
 a3c:	ldrb	r4, [r2, #1]!
 a40:	cmp	r4, #46	; 0x2e
 a44:	cmpne	r4, #0
 a48:	beq	a70 <check_new_user+0x2ac>
 a4c:	ldr	lr, [r0]
 a50:	lsl	r3, r4, #1
 a54:	ldrh	r3, [lr, r3]
 a58:	ubfx	r3, r3, #11, #1
 a5c:	cmp	r4, #45	; 0x2d
 a60:	orreq	r3, r3, #1
 a64:	cmp	r3, #0
 a68:	beq	a18 <check_new_user+0x254>
 a6c:	b	a3c <check_new_user+0x278>
 a70:	ldrb	r4, [r9]
 a74:	cmp	r4, #0
 a78:	beq	ad0 <check_new_user+0x30c>
 a7c:	bl	64c <__ctype_b_loc@plt>
 a80:	movw	r2, #52429	; 0xcccd
 a84:	movt	r2, #52428	; 0xcccc
 a88:	b	a9c <check_new_user+0x2d8>
 a8c:	ror	r7, r7, #31
 a90:	ldrb	r4, [r9, #1]!
 a94:	cmp	r4, #0
 a98:	beq	ad0 <check_new_user+0x30c>
 a9c:	ldr	r1, [r0]
 aa0:	lsl	r3, r4, #1
 aa4:	ldrh	r3, [r1, r3]
 aa8:	tst	r3, #2048	; 0x800
 aac:	beq	a8c <check_new_user+0x2c8>
 ab0:	add	r4, r4, r7
 ab4:	umull	r1, r3, r2, r4
 ab8:	lsr	r3, r3, #3
 abc:	add	r3, r3, r3, lsl #2
 ac0:	sub	r4, r4, r3, lsl #1
 ac4:	add	r4, r4, #48	; 0x30
 ac8:	strb	r4, [r9]
 acc:	b	a8c <check_new_user+0x2c8>
 ad0:	ldr	r1, [r5, #64]	; 0x40
 ad4:	and	r2, r1, #131072	; 0x20000
 ad8:	mov	r3, #0
 adc:	orrs	r3, r2, r3
 ae0:	beq	afc <check_new_user+0x338>
 ae4:	ldr	r3, [pc, #104]	; b54 <check_new_user+0x390>
 ae8:	ldr	r3, [r6, r3]
 aec:	ldr	r2, [r3, #480]	; 0x1e0
 af0:	ldr	r3, [r5, #56]	; 0x38
 af4:	bic	r3, r3, r2
 af8:	str	r3, [r5, #56]	; 0x38
 afc:	ldr	r3, [pc, #80]	; b54 <check_new_user+0x390>
 b00:	ldr	r3, [r6, r3]
 b04:	ldr	r2, [r5, #56]	; 0x38
 b08:	ldr	r3, [r3, #480]	; 0x1e0
 b0c:	tst	r2, r3
 b10:	beq	80c <check_new_user+0x48>
 b14:	add	r4, r5, #163	; 0xa3
 b18:	ldr	r3, [r5, #432]	; 0x1b0
 b1c:	mov	r2, #64	; 0x40
 b20:	ldr	r1, [r3, #432]	; 0x1b0
 b24:	mov	r0, r4
 b28:	bl	67c <rb_strlcpy@plt>
 b2c:	mov	r1, r8
 b30:	mov	r0, r4
 b34:	bl	688 <irccmp@plt>
 b38:	cmp	r0, #0
 b3c:	beq	80c <check_new_user+0x48>
 b40:	ldr	r3, [r5, #64]	; 0x40
 b44:	orr	r3, r3, #131072	; 0x20000
 b48:	str	r3, [r5, #64]	; 0x40
 b4c:	b	80c <check_new_user+0x48>
 b50:	.word	0x0001181c
 b54:	.word	0x00000054
 b58:	.word	0x000006a0
 b5c:	.word	0x00000580

00000b60 <distribute_hostchange>:
 b60:	strd	r4, [sp, #-20]!	; 0xffffffec
 b64:	strd	r6, [sp, #8]
 b68:	str	lr, [sp, #16]
 b6c:	sub	sp, sp, #20
 b70:	mov	r4, r0
 b74:	mov	r6, r1
 b78:	ldr	r5, [pc, #368]	; cf0 <distribute_hostchange+0x190>
 b7c:	add	r5, pc, r5
 b80:	add	r7, r0, #227	; 0xe3
 b84:	cmp	r7, r1
 b88:	beq	cd8 <distribute_hostchange+0x178>
 b8c:	mov	r3, r1
 b90:	ldr	r2, [pc, #348]	; cf4 <distribute_hostchange+0x194>
 b94:	add	r2, pc, r2
 b98:	mov	r1, #396	; 0x18c
 b9c:	bl	658 <sendto_one_numeric@plt>
 ba0:	ldr	r3, [pc, #336]	; cf8 <distribute_hostchange+0x198>
 ba4:	ldr	r3, [r5, r3]
 ba8:	ldr	r2, [pc, #332]	; cfc <distribute_hostchange+0x19c>
 bac:	ldr	r2, [r5, r2]
 bb0:	ldr	r3, [r3]
 bb4:	ldr	r2, [r2]
 bb8:	orr	r2, r3, r2
 bbc:	ldr	r3, [pc, #316]	; d00 <distribute_hostchange+0x1a0>
 bc0:	ldr	r3, [r5, r3]
 bc4:	ldrb	r3, [r3, #396]	; 0x18c
 bc8:	cmp	r3, #0
 bcc:	ldr	r3, [pc, #300]	; d00 <distribute_hostchange+0x1a0>
 bd0:	ldr	r3, [r5, r3]
 bd4:	addeq	r3, r3, #88	; 0x58
 bd8:	addne	r3, r3, #396	; 0x18c
 bdc:	ldrb	r1, [r4, #396]	; 0x18c
 be0:	cmp	r1, #0
 be4:	addne	r1, r4, #396	; 0x18c
 be8:	addeq	r1, r4, #88	; 0x58
 bec:	str	r6, [sp, #12]
 bf0:	str	r1, [sp, #8]
 bf4:	str	r3, [sp, #4]
 bf8:	ldr	r3, [pc, #260]	; d04 <distribute_hostchange+0x1a4>
 bfc:	add	r3, pc, r3
 c00:	str	r3, [sp]
 c04:	mov	r3, #0
 c08:	mov	r1, r3
 c0c:	mov	r0, r3
 c10:	bl	634 <sendto_server@plt>
 c14:	ldr	r3, [pc, #224]	; cfc <distribute_hostchange+0x19c>
 c18:	ldr	r3, [r5, r3]
 c1c:	ldr	r2, [r3]
 c20:	ldr	r3, [pc, #208]	; cf8 <distribute_hostchange+0x198>
 c24:	ldr	r3, [r5, r3]
 c28:	ldr	r3, [r3]
 c2c:	ldr	r1, [pc, #204]	; d00 <distribute_hostchange+0x1a0>
 c30:	ldr	r1, [r5, r1]
 c34:	ldrb	r1, [r1, #396]	; 0x18c
 c38:	cmp	r1, #0
 c3c:	ldr	r1, [pc, #188]	; d00 <distribute_hostchange+0x1a0>
 c40:	ldr	r1, [r5, r1]
 c44:	addeq	r1, r1, #88	; 0x58
 c48:	addne	r1, r1, #396	; 0x18c
 c4c:	ldrb	r0, [r4, #396]	; 0x18c
 c50:	cmp	r0, #0
 c54:	addne	r0, r4, #396	; 0x18c
 c58:	addeq	r0, r4, #88	; 0x58
 c5c:	str	r6, [sp, #12]
 c60:	str	r0, [sp, #8]
 c64:	str	r1, [sp, #4]
 c68:	ldr	r1, [pc, #152]	; d08 <distribute_hostchange+0x1a8>
 c6c:	add	r1, pc, r1
 c70:	str	r1, [sp]
 c74:	mov	r1, #0
 c78:	mov	r0, r1
 c7c:	bl	634 <sendto_server@plt>
 c80:	ldr	r3, [pc, #132]	; d0c <distribute_hostchange+0x1ac>
 c84:	add	r3, pc, r3
 c88:	str	r3, [sp, #4]
 c8c:	mov	r3, #0
 c90:	str	r3, [sp]
 c94:	mov	r3, r6
 c98:	add	r2, r4, #152	; 0x98
 c9c:	add	r1, r4, #88	; 0x58
 ca0:	mov	r0, r4
 ca4:	bl	670 <change_nick_user_host@plt>
 ca8:	cmp	r7, r6
 cac:	ldr	r3, [r4, #64]	; 0x40
 cb0:	orrne	r3, r3, #131072	; 0x20000
 cb4:	biceq	r3, r3, #131072	; 0x20000
 cb8:	ldr	r2, [r4, #68]	; 0x44
 cbc:	str	r3, [r4, #64]	; 0x40
 cc0:	str	r2, [r4, #68]	; 0x44
 cc4:	add	sp, sp, #20
 cc8:	ldrd	r4, [sp]
 ccc:	ldrd	r6, [sp, #8]
 cd0:	add	sp, sp, #16
 cd4:	pop	{pc}		; (ldr pc, [sp], #4)
 cd8:	mov	r3, r1
 cdc:	ldr	r2, [pc, #44]	; d10 <distribute_hostchange+0x1b0>
 ce0:	add	r2, pc, r2
 ce4:	mov	r1, #396	; 0x18c
 ce8:	bl	658 <sendto_one_numeric@plt>
 cec:	b	ba0 <distribute_hostchange+0x40>
 cf0:	.word	0x0001147c
 cf4:	.word	0x000003ac
 cf8:	.word	0x0000005c
 cfc:	.word	0x00000050
 d00:	.word	0x00000064
 d04:	.word	0x00000374
 d08:	.word	0x00000318
 d0c:	.word	0x0000031c
 d10:	.word	0x0000027c

00000d14 <check_umode_change>:
 d14:	strd	r4, [sp, #-24]!	; 0xffffffe8
 d18:	strd	r6, [sp, #8]
 d1c:	str	r8, [sp, #16]
 d20:	str	lr, [sp, #20]
 d24:	ldr	r1, [pc, #292]	; e50 <check_umode_change+0x13c>
 d28:	add	r1, pc, r1
 d2c:	ldr	r4, [r0]
 d30:	ldr	ip, [r4, #64]	; 0x40
 d34:	and	r2, ip, #8192	; 0x2000
 d38:	mov	r3, #0
 d3c:	orrs	r3, r2, r3
 d40:	beq	de4 <check_umode_change+0xd0>
 d44:	ldrh	r3, [r4, #80]	; 0x50
 d48:	cmp	r3, #64	; 0x40
 d4c:	bne	de4 <check_umode_change+0xd0>
 d50:	ldr	r5, [r4, #56]	; 0x38
 d54:	ldr	r3, [pc, #248]	; e54 <check_umode_change+0x140>
 d58:	ldr	r3, [r1, r3]
 d5c:	ldr	r6, [r3, #480]	; 0x1e0
 d60:	ldr	r3, [r0, #4]
 d64:	eor	r3, r3, r5
 d68:	tst	r3, r6
 d6c:	beq	de4 <check_umode_change+0xd0>
 d70:	tst	r5, r6
 d74:	beq	e20 <check_umode_change+0x10c>
 d78:	and	r2, ip, #16777216	; 0x1000000
 d7c:	mov	r3, #0
 d80:	orrs	r3, r2, r3
 d84:	bne	ddc <check_umode_change+0xc8>
 d88:	ldr	r3, [r4, #432]	; 0x1b0
 d8c:	ldr	r7, [r3, #432]	; 0x1b0
 d90:	cmp	r7, #0
 d94:	beq	ddc <check_umode_change+0xc8>
 d98:	and	r2, ip, #131072	; 0x20000
 d9c:	mov	r3, #0
 da0:	orrs	r3, r2, r3
 da4:	beq	df8 <check_umode_change+0xe4>
 da8:	add	r8, r4, #163	; 0xa3
 dac:	mov	r1, r7
 db0:	mov	r0, r8
 db4:	bl	5f8 <strcmp@plt>
 db8:	cmp	r0, #0
 dbc:	bne	ddc <check_umode_change+0xc8>
 dc0:	mov	r3, r8
 dc4:	ldr	r2, [pc, #140]	; e58 <check_umode_change+0x144>
 dc8:	add	r2, pc, r2
 dcc:	mov	r1, #396	; 0x18c
 dd0:	mov	r0, r4
 dd4:	bl	658 <sendto_one_numeric@plt>
 dd8:	b	de4 <check_umode_change+0xd0>
 ddc:	bic	r5, r5, r6
 de0:	str	r5, [r4, #56]	; 0x38
 de4:	ldrd	r4, [sp]
 de8:	ldrd	r6, [sp, #8]
 dec:	ldr	r8, [sp, #16]
 df0:	add	sp, sp, #20
 df4:	pop	{pc}		; (ldr pc, [sp], #4)
 df8:	add	r8, r4, #163	; 0xa3
 dfc:	mov	r1, r7
 e00:	mov	r0, r8
 e04:	bl	5f8 <strcmp@plt>
 e08:	cmp	r0, #0
 e0c:	beq	dc0 <check_umode_change+0xac>
 e10:	mov	r1, r7
 e14:	mov	r0, r4
 e18:	bl	b60 <distribute_hostchange>
 e1c:	b	de4 <check_umode_change+0xd0>
 e20:	ldr	r3, [r4, #432]	; 0x1b0
 e24:	ldr	r1, [r3, #432]	; 0x1b0
 e28:	cmp	r1, #0
 e2c:	beq	de4 <check_umode_change+0xd0>
 e30:	add	r0, r4, #163	; 0xa3
 e34:	bl	5f8 <strcmp@plt>
 e38:	cmp	r0, #0
 e3c:	bne	de4 <check_umode_change+0xd0>
 e40:	add	r1, r4, #227	; 0xe3
 e44:	mov	r0, r4
 e48:	bl	b60 <distribute_hostchange>
 e4c:	b	de4 <check_umode_change+0xd0>
 e50:	.word	0x000112d0
 e54:	.word	0x00000054
 e58:	.word	0x00000178

00000e5c <_moddeinit>:
 e5c:	str	r4, [sp, #-8]!
 e60:	str	lr, [sp, #4]
 e64:	ldr	r3, [pc, #32]	; e8c <_moddeinit+0x30>
 e68:	add	r3, pc, r3
 e6c:	ldr	r2, [pc, #28]	; e90 <_moddeinit+0x34>
 e70:	ldr	r3, [r3, r2]
 e74:	mov	r2, #0
 e78:	str	r2, [r3, #480]	; 0x1e0
 e7c:	bl	694 <construct_umodebuf@plt>
 e80:	ldr	r4, [sp]
 e84:	add	sp, sp, #4
 e88:	pop	{pc}		; (ldr pc, [sp], #4)
 e8c:	.word	0x00011190
 e90:	.word	0x00000054

00000e94 <_modinit>:
 e94:	str	r4, [sp, #-8]!
 e98:	str	lr, [sp, #4]
 e9c:	ldr	r4, [pc, #36]	; ec8 <_modinit+0x34>
 ea0:	add	r4, pc, r4
 ea4:	bl	61c <find_umode_slot@plt>
 ea8:	ldr	r3, [pc, #28]	; ecc <_modinit+0x38>
 eac:	ldr	r3, [r4, r3]
 eb0:	str	r0, [r3, #480]	; 0x1e0
 eb4:	bl	694 <construct_umodebuf@plt>
 eb8:	mov	r0, #0
 ebc:	ldr	r4, [sp]
 ec0:	add	sp, sp, #4
 ec4:	pop	{pc}		; (ldr pc, [sp], #4)
 ec8:	.word	0x00011158
 ecc:	.word	0x00000054

Disassembly of section .fini:

00000ed0 <_fini>:
 ed0:	push	{r3, lr}
 ed4:	pop	{r3, pc}
