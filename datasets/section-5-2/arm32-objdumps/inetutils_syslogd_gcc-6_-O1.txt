
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011634 <.init>:
   11634:	push	{r3, lr}
   11638:	bl	11b58 <__assert_fail@plt+0x48>
   1163c:	pop	{r3, pc}

Disassembly of section .plt:

00011640 <calloc@plt-0x14>:
   11640:	push	{lr}		; (str lr, [sp, #-4]!)
   11644:	ldr	lr, [pc, #4]	; 11650 <calloc@plt-0x4>
   11648:	add	lr, pc, lr
   1164c:	ldr	pc, [lr, #8]!
   11650:			; <UNDEFINED> instruction: 0x0001d9b0

00011654 <calloc@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #118784	; 0x1d000
   1165c:	ldr	pc, [ip, #2480]!	; 0x9b0

00011660 <fputs_unlocked@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #118784	; 0x1d000
   11668:	ldr	pc, [ip, #2472]!	; 0x9a8

0001166c <raise@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #118784	; 0x1d000
   11674:	ldr	pc, [ip, #2464]!	; 0x9a0

00011678 <fsync@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #118784	; 0x1d000
   11680:	ldr	pc, [ip, #2456]!	; 0x998

00011684 <strcmp@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #118784	; 0x1d000
   1168c:	ldr	pc, [ip, #2448]!	; 0x990

00011690 <strtol@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #118784	; 0x1d000
   11698:	ldr	pc, [ip, #2440]!	; 0x988

0001169c <setsockopt@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #118784	; 0x1d000
   116a4:	ldr	pc, [ip, #2432]!	; 0x980

000116a8 <pause@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #118784	; 0x1d000
   116b0:	ldr	pc, [ip, #2424]!	; 0x978

000116b4 <printf@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #118784	; 0x1d000
   116bc:	ldr	pc, [ip, #2416]!	; 0x970

000116c0 <read@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #118784	; 0x1d000
   116c8:	ldr	pc, [ip, #2408]!	; 0x968

000116cc <fflush@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #118784	; 0x1d000
   116d4:	ldr	pc, [ip, #2400]!	; 0x960

000116d8 <utmpxname@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #118784	; 0x1d000
   116e0:	ldr	pc, [ip, #2392]!	; 0x958

000116e4 <sigprocmask@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #118784	; 0x1d000
   116ec:	ldr	pc, [ip, #2384]!	; 0x950

000116f0 <memmove@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #118784	; 0x1d000
   116f8:	ldr	pc, [ip, #2376]!	; 0x948

000116fc <strchrnul@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #118784	; 0x1d000
   11704:	ldr	pc, [ip, #2368]!	; 0x940

00011708 <free@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #118784	; 0x1d000
   11710:	ldr	pc, [ip, #2360]!	; 0x938

00011714 <gai_strerror@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #118784	; 0x1d000
   1171c:	ldr	pc, [ip, #2352]!	; 0x930

00011720 <fgets@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #118784	; 0x1d000
   11728:	ldr	pc, [ip, #2344]!	; 0x928

0001172c <strndup@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #118784	; 0x1d000
   11734:	ldr	pc, [ip, #2336]!	; 0x920

00011738 <_exit@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #118784	; 0x1d000
   11740:	ldr	pc, [ip, #2328]!	; 0x918

00011744 <memcpy@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #118784	; 0x1d000
   1174c:	ldr	pc, [ip, #2320]!	; 0x910

00011750 <signal@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #118784	; 0x1d000
   11758:	ldr	pc, [ip, #2312]!	; 0x908

0001175c <time@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #118784	; 0x1d000
   11764:	ldr	pc, [ip, #2304]!	; 0x900

00011768 <fwrite_unlocked@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #118784	; 0x1d000
   11770:	ldr	pc, [ip, #2296]!	; 0x8f8

00011774 <sleep@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #118784	; 0x1d000
   1177c:	ldr	pc, [ip, #2288]!	; 0x8f0

00011780 <ctime@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #118784	; 0x1d000
   11788:	ldr	pc, [ip, #2280]!	; 0x8e8

0001178c <recvfrom@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #118784	; 0x1d000
   11794:	ldr	pc, [ip, #2272]!	; 0x8e0

00011798 <strdup@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #118784	; 0x1d000
   117a0:	ldr	pc, [ip, #2264]!	; 0x8d8

000117a4 <setutxent@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #118784	; 0x1d000
   117ac:	ldr	pc, [ip, #2256]!	; 0x8d0

000117b0 <alarm@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #118784	; 0x1d000
   117b8:	ldr	pc, [ip, #2248]!	; 0x8c8

000117bc <sysconf@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #118784	; 0x1d000
   117c4:	ldr	pc, [ip, #2240]!	; 0x8c0

000117c8 <unlink@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #118784	; 0x1d000
   117d0:	ldr	pc, [ip, #2232]!	; 0x8b8

000117d4 <dup2@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #118784	; 0x1d000
   117dc:	ldr	pc, [ip, #2224]!	; 0x8b0

000117e0 <realloc@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #118784	; 0x1d000
   117e8:	ldr	pc, [ip, #2216]!	; 0x8a8

000117ec <chdir@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #118784	; 0x1d000
   117f4:	ldr	pc, [ip, #2208]!	; 0x8a0

000117f8 <strcasecmp@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #118784	; 0x1d000
   11800:	ldr	pc, [ip, #2200]!	; 0x898

00011804 <funlockfile@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #118784	; 0x1d000
   1180c:	ldr	pc, [ip, #2192]!	; 0x890

00011810 <poll@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #118784	; 0x1d000
   11818:	ldr	pc, [ip, #2184]!	; 0x888

0001181c <sigaction@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #118784	; 0x1d000
   11824:	ldr	pc, [ip, #2176]!	; 0x880

00011828 <fwrite@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #118784	; 0x1d000
   11830:	ldr	pc, [ip, #2168]!	; 0x878

00011834 <strcat@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #118784	; 0x1d000
   1183c:	ldr	pc, [ip, #2160]!	; 0x870

00011840 <waitpid@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #118784	; 0x1d000
   11848:	ldr	pc, [ip, #2152]!	; 0x868

0001184c <strcpy@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #118784	; 0x1d000
   11854:	ldr	pc, [ip, #2144]!	; 0x860

00011858 <error@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #118784	; 0x1d000
   11860:	ldr	pc, [ip, #2136]!	; 0x858

00011864 <gethostname@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #118784	; 0x1d000
   1186c:	ldr	pc, [ip, #2128]!	; 0x850

00011870 <opendir@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #118784	; 0x1d000
   11878:	ldr	pc, [ip, #2120]!	; 0x848

0001187c <open64@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #118784	; 0x1d000
   11884:	ldr	pc, [ip, #2112]!	; 0x840

00011888 <getenv@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #118784	; 0x1d000
   11890:	ldr	pc, [ip, #2104]!	; 0x838

00011894 <malloc@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #118784	; 0x1d000
   1189c:	ldr	pc, [ip, #2096]!	; 0x830

000118a0 <sigaddset@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #118784	; 0x1d000
   118a8:	ldr	pc, [ip, #2088]!	; 0x828

000118ac <__libc_start_main@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #118784	; 0x1d000
   118b4:	ldr	pc, [ip, #2080]!	; 0x820

000118b8 <strerror@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #118784	; 0x1d000
   118c0:	ldr	pc, [ip, #2072]!	; 0x818

000118c4 <__ctype_tolower_loc@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #118784	; 0x1d000
   118cc:	ldr	pc, [ip, #2064]!	; 0x810

000118d0 <__gmon_start__@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #118784	; 0x1d000
   118d8:	ldr	pc, [ip, #2056]!	; 0x808

000118dc <mempcpy@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #118784	; 0x1d000
   118e4:	ldr	pc, [ip, #2048]!	; 0x800

000118e8 <kill@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #118784	; 0x1d000
   118f0:	ldr	pc, [ip, #2040]!	; 0x7f8

000118f4 <__ctype_b_loc@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #118784	; 0x1d000
   118fc:	ldr	pc, [ip, #2032]!	; 0x7f0

00011900 <getpid@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #118784	; 0x1d000
   11908:	ldr	pc, [ip, #2024]!	; 0x7e8

0001190c <exit@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #118784	; 0x1d000
   11914:	ldr	pc, [ip, #2016]!	; 0x7e0

00011918 <strlen@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #118784	; 0x1d000
   11920:	ldr	pc, [ip, #2008]!	; 0x7d8

00011924 <setsid@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #118784	; 0x1d000
   1192c:	ldr	pc, [ip, #2000]!	; 0x7d0

00011930 <strchr@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #118784	; 0x1d000
   11938:	ldr	pc, [ip, #1992]!	; 0x7c8

0001193c <fprintf@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #118784	; 0x1d000
   11944:	ldr	pc, [ip, #1984]!	; 0x7c0

00011948 <__errno_location@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #118784	; 0x1d000
   11950:	ldr	pc, [ip, #1976]!	; 0x7b8

00011954 <snprintf@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #118784	; 0x1d000
   1195c:	ldr	pc, [ip, #1968]!	; 0x7b0

00011960 <strerror_r@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #118784	; 0x1d000
   11968:	ldr	pc, [ip, #1960]!	; 0x7a8

0001196c <bind@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #118784	; 0x1d000
   11974:	ldr	pc, [ip, #1952]!	; 0x7a0

00011978 <setvbuf@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #118784	; 0x1d000
   11980:	ldr	pc, [ip, #1944]!	; 0x798

00011984 <memset@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #118784	; 0x1d000
   1198c:	ldr	pc, [ip, #1936]!	; 0x790

00011990 <strncpy@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #118784	; 0x1d000
   11998:	ldr	pc, [ip, #1928]!	; 0x788

0001199c <asprintf@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #118784	; 0x1d000
   119a4:	ldr	pc, [ip, #1920]!	; 0x780

000119a8 <memchr@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #118784	; 0x1d000
   119b0:	ldr	pc, [ip, #1912]!	; 0x778

000119b4 <writev@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #118784	; 0x1d000
   119bc:	ldr	pc, [ip, #1904]!	; 0x770

000119c0 <fclose@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #118784	; 0x1d000
   119c8:	ldr	pc, [ip, #1896]!	; 0x768

000119cc <fcntl64@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #118784	; 0x1d000
   119d4:	ldr	pc, [ip, #1888]!	; 0x760

000119d8 <sendto@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #118784	; 0x1d000
   119e0:	ldr	pc, [ip, #1880]!	; 0x758

000119e4 <endutxent@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #118784	; 0x1d000
   119ec:	ldr	pc, [ip, #1872]!	; 0x750

000119f0 <__overflow@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #118784	; 0x1d000
   119f8:	ldr	pc, [ip, #1864]!	; 0x748

000119fc <sigemptyset@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #118784	; 0x1d000
   11a04:	ldr	pc, [ip, #1856]!	; 0x740

00011a08 <fork@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #118784	; 0x1d000
   11a10:	ldr	pc, [ip, #1848]!	; 0x738

00011a14 <getnameinfo@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #118784	; 0x1d000
   11a1c:	ldr	pc, [ip, #1840]!	; 0x730

00011a20 <strrchr@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #118784	; 0x1d000
   11a28:	ldr	pc, [ip, #1832]!	; 0x728

00011a2c <vfprintf@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #118784	; 0x1d000
   11a34:	ldr	pc, [ip, #1824]!	; 0x720

00011a38 <fputc@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #118784	; 0x1d000
   11a40:	ldr	pc, [ip, #1816]!	; 0x718

00011a44 <readdir64@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #118784	; 0x1d000
   11a4c:	ldr	pc, [ip, #1808]!	; 0x710

00011a50 <flockfile@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #118784	; 0x1d000
   11a58:	ldr	pc, [ip, #1800]!	; 0x708

00011a5c <vsnprintf@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #118784	; 0x1d000
   11a64:	ldr	pc, [ip, #1792]!	; 0x700

00011a68 <fopen64@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #118784	; 0x1d000
   11a70:	ldr	pc, [ip, #1784]!	; 0x6f8

00011a74 <qsort@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #118784	; 0x1d000
   11a7c:	ldr	pc, [ip, #1776]!	; 0x6f0

00011a80 <strpbrk@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #118784	; 0x1d000
   11a88:	ldr	pc, [ip, #1768]!	; 0x6e8

00011a8c <freeaddrinfo@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #118784	; 0x1d000
   11a94:	ldr	pc, [ip, #1760]!	; 0x6e0

00011a98 <getaddrinfo@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #118784	; 0x1d000
   11aa0:	ldr	pc, [ip, #1752]!	; 0x6d8

00011aa4 <socket@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #118784	; 0x1d000
   11aac:	ldr	pc, [ip, #1744]!	; 0x6d0

00011ab0 <chmod@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #118784	; 0x1d000
   11ab8:	ldr	pc, [ip, #1736]!	; 0x6c8

00011abc <__xstat64@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #118784	; 0x1d000
   11ac4:	ldr	pc, [ip, #1728]!	; 0x6c0

00011ac8 <isatty@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #118784	; 0x1d000
   11ad0:	ldr	pc, [ip, #1720]!	; 0x6b8

00011ad4 <strncmp@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #118784	; 0x1d000
   11adc:	ldr	pc, [ip, #1712]!	; 0x6b0

00011ae0 <abort@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #118784	; 0x1d000
   11ae8:	ldr	pc, [ip, #1704]!	; 0x6a8

00011aec <getutxent@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #118784	; 0x1d000
   11af4:	ldr	pc, [ip, #1696]!	; 0x6a0

00011af8 <close@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #118784	; 0x1d000
   11b00:	ldr	pc, [ip, #1688]!	; 0x698

00011b04 <closedir@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #118784	; 0x1d000
   11b0c:	ldr	pc, [ip, #1680]!	; 0x690

00011b10 <__assert_fail@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #118784	; 0x1d000
   11b18:	ldr	pc, [ip, #1672]!	; 0x688

Disassembly of section .text:

00011b1c <daemon@@Base-0x3e90>:
   11b1c:	mov	fp, #0
   11b20:	mov	lr, #0
   11b24:	pop	{r1}		; (ldr r1, [sp], #4)
   11b28:	mov	r2, sp
   11b2c:	push	{r2}		; (str r2, [sp, #-4]!)
   11b30:	push	{r0}		; (str r0, [sp, #-4]!)
   11b34:	ldr	ip, [pc, #16]	; 11b4c <__assert_fail@plt+0x3c>
   11b38:	push	{ip}		; (str ip, [sp, #-4]!)
   11b3c:	ldr	r0, [pc, #12]	; 11b50 <__assert_fail@plt+0x40>
   11b40:	ldr	r3, [pc, #12]	; 11b54 <__assert_fail@plt+0x44>
   11b44:	bl	118ac <__libc_start_main@plt>
   11b48:	bl	11ae0 <abort@plt>
   11b4c:	andeq	ip, r1, r4, asr #24
   11b50:	andeq	r4, r1, ip, lsl #22
   11b54:	andeq	ip, r1, r4, ror #23
   11b58:	ldr	r3, [pc, #20]	; 11b74 <__assert_fail@plt+0x64>
   11b5c:	ldr	r2, [pc, #20]	; 11b78 <__assert_fail@plt+0x68>
   11b60:	add	r3, pc, r3
   11b64:	ldr	r2, [r3, r2]
   11b68:	cmp	r2, #0
   11b6c:	bxeq	lr
   11b70:	b	118d0 <__gmon_start__@plt>
   11b74:	muleq	r1, r8, r4
   11b78:	andeq	r0, r0, r4, lsr #3
   11b7c:	ldr	r3, [pc, #28]	; 11ba0 <__assert_fail@plt+0x90>
   11b80:	ldr	r0, [pc, #28]	; 11ba4 <__assert_fail@plt+0x94>
   11b84:	sub	r3, r3, r0
   11b88:	cmp	r3, #6
   11b8c:	bxls	lr
   11b90:	ldr	r3, [pc, #16]	; 11ba8 <__assert_fail@plt+0x98>
   11b94:	cmp	r3, #0
   11b98:	bxeq	lr
   11b9c:	bx	r3
   11ba0:			; <UNDEFINED> instruction: 0x0002f5bf
   11ba4:			; <UNDEFINED> instruction: 0x0002f5bc
   11ba8:	andeq	r0, r0, r0
   11bac:	ldr	r1, [pc, #36]	; 11bd8 <__assert_fail@plt+0xc8>
   11bb0:	ldr	r0, [pc, #36]	; 11bdc <__assert_fail@plt+0xcc>
   11bb4:	sub	r1, r1, r0
   11bb8:	asr	r1, r1, #2
   11bbc:	add	r1, r1, r1, lsr #31
   11bc0:	asrs	r1, r1, #1
   11bc4:	bxeq	lr
   11bc8:	ldr	r3, [pc, #16]	; 11be0 <__assert_fail@plt+0xd0>
   11bcc:	cmp	r3, #0
   11bd0:	bxeq	lr
   11bd4:	bx	r3
   11bd8:			; <UNDEFINED> instruction: 0x0002f5bc
   11bdc:			; <UNDEFINED> instruction: 0x0002f5bc
   11be0:	andeq	r0, r0, r0
   11be4:	push	{r4, lr}
   11be8:	ldr	r4, [pc, #24]	; 11c08 <__assert_fail@plt+0xf8>
   11bec:	ldrb	r3, [r4]
   11bf0:	cmp	r3, #0
   11bf4:	popne	{r4, pc}
   11bf8:	bl	11b7c <__assert_fail@plt+0x6c>
   11bfc:	mov	r3, #1
   11c00:	strb	r3, [r4]
   11c04:	pop	{r4, pc}
   11c08:	ldrdeq	pc, [r2], -r0
   11c0c:	ldr	r0, [pc, #40]	; 11c3c <__assert_fail@plt+0x12c>
   11c10:	ldr	r3, [r0]
   11c14:	cmp	r3, #0
   11c18:	bne	11c20 <__assert_fail@plt+0x110>
   11c1c:	b	11bac <__assert_fail@plt+0x9c>
   11c20:	ldr	r3, [pc, #24]	; 11c40 <__assert_fail@plt+0x130>
   11c24:	cmp	r3, #0
   11c28:	beq	11c1c <__assert_fail@plt+0x10c>
   11c2c:	push	{r4, lr}
   11c30:	blx	r3
   11c34:	pop	{r4, lr}
   11c38:	b	11bac <__assert_fail@plt+0x9c>
   11c3c:	andeq	lr, r2, ip, lsl #30
   11c40:	andeq	r0, r0, r0
   11c44:	mov	r2, #1
   11c48:	ldr	r3, [pc, #4]	; 11c54 <__assert_fail@plt+0x144>
   11c4c:	str	r2, [r3]
   11c50:	bx	lr
   11c54:	ldrdeq	pc, [r2], -r4
   11c58:	push	{r4, r5, r6, lr}
   11c5c:	mov	r5, r0
   11c60:	ldr	r3, [pc, #108]	; 11cd4 <__assert_fail@plt+0x1c4>
   11c64:	ldr	r1, [r3]
   11c68:	add	r1, r1, #1
   11c6c:	ldr	r4, [pc, #100]	; 11cd8 <__assert_fail@plt+0x1c8>
   11c70:	lsl	r1, r1, #3
   11c74:	ldr	r0, [r4]
   11c78:	bl	1b390 <argp_parse@@Base+0x1c00>
   11c7c:	str	r0, [r4]
   11c80:	cmp	r0, #0
   11c84:	beq	11cbc <__assert_fail@plt+0x1ac>
   11c88:	ldr	r2, [pc, #68]	; 11cd4 <__assert_fail@plt+0x1c4>
   11c8c:	ldr	r0, [r2]
   11c90:	ldr	r1, [pc, #64]	; 11cd8 <__assert_fail@plt+0x1c8>
   11c94:	ldr	r3, [r1]
   11c98:	str	r5, [r3, r0, lsl #3]
   11c9c:	ldr	r3, [r2]
   11ca0:	ldr	r1, [r1]
   11ca4:	add	r1, r1, r3, lsl #3
   11ca8:	mvn	r0, #0
   11cac:	str	r0, [r1, #4]
   11cb0:	add	r3, r3, #1
   11cb4:	str	r3, [r2]
   11cb8:	pop	{r4, r5, r6, pc}
   11cbc:	bl	11948 <__errno_location@plt>
   11cc0:	ldr	r2, [pc, #20]	; 11cdc <__assert_fail@plt+0x1cc>
   11cc4:	ldr	r1, [r0]
   11cc8:	mov	r0, #1
   11ccc:	bl	11858 <error@plt>
   11cd0:	b	11c88 <__assert_fail@plt+0x178>
   11cd4:	andeq	pc, r2, r8, lsr #24
   11cd8:	andeq	pc, r2, r8, lsl #25
   11cdc:	andeq	ip, r1, r0, ror ip
   11ce0:	push	{r0, r1, r2, r3}
   11ce4:	push	{r4, lr}
   11ce8:	sub	sp, sp, #8
   11cec:	ldr	r3, [pc, #76]	; 11d40 <__assert_fail@plt+0x230>
   11cf0:	ldr	r3, [r3]
   11cf4:	cmp	r3, #0
   11cf8:	beq	11d0c <__assert_fail@plt+0x1fc>
   11cfc:	ldr	r3, [pc, #64]	; 11d44 <__assert_fail@plt+0x234>
   11d00:	ldr	r3, [r3, #4]
   11d04:	cmp	r3, #0
   11d08:	bne	11d1c <__assert_fail@plt+0x20c>
   11d0c:	add	sp, sp, #8
   11d10:	pop	{r4, lr}
   11d14:	add	sp, sp, #16
   11d18:	bx	lr
   11d1c:	add	r2, sp, #20
   11d20:	str	r2, [sp, #4]
   11d24:	ldr	r4, [pc, #28]	; 11d48 <__assert_fail@plt+0x238>
   11d28:	ldr	r1, [sp, #16]
   11d2c:	ldr	r0, [r4]
   11d30:	bl	11a2c <vfprintf@plt>
   11d34:	ldr	r0, [r4]
   11d38:	bl	116cc <fflush@plt>
   11d3c:	b	11d0c <__assert_fail@plt+0x1fc>
   11d40:	andeq	pc, r2, r4, asr #24
   11d44:	ldrdeq	pc, [r2], -r4
   11d48:	andeq	pc, r2, ip, asr #11
   11d4c:	push	{r4, lr}
   11d50:	ldr	r3, [pc, #52]	; 11d8c <__assert_fail@plt+0x27c>
   11d54:	ldr	r4, [r3, #4]
   11d58:	mov	r2, #1
   11d5c:	str	r2, [r3, #4]
   11d60:	ldr	r3, [pc, #40]	; 11d90 <__assert_fail@plt+0x280>
   11d64:	ldr	r1, [pc, #40]	; 11d94 <__assert_fail@plt+0x284>
   11d68:	cmp	r4, #0
   11d6c:	movne	r1, r3
   11d70:	ldr	r0, [pc, #32]	; 11d98 <__assert_fail@plt+0x288>
   11d74:	bl	11ce0 <__assert_fail@plt+0x1d0>
   11d78:	clz	r3, r4
   11d7c:	lsr	r3, r3, #5
   11d80:	ldr	r2, [pc, #4]	; 11d8c <__assert_fail@plt+0x27c>
   11d84:	str	r3, [r2, #4]
   11d88:	pop	{r4, pc}
   11d8c:	ldrdeq	pc, [r2], -r4
   11d90:	andeq	ip, r1, r0, lsr #25
   11d94:	muleq	r1, r8, ip
   11d98:	andeq	ip, r1, r8, lsr #25
   11d9c:	push	{r4, lr}
   11da0:	mov	r0, #0
   11da4:	bl	11738 <_exit@plt>
   11da8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dac:	mov	r9, r0
   11db0:	mov	r4, r1
   11db4:	mov	r5, #0
   11db8:	b	11dc0 <__assert_fail@plt+0x2b0>
   11dbc:	strb	r5, [r4, r0]
   11dc0:	mov	r0, r4
   11dc4:	bl	11918 <strlen@plt>
   11dc8:	sub	r0, r0, #1
   11dcc:	ldrb	r3, [r4, r0]
   11dd0:	cmp	r3, #58	; 0x3a
   11dd4:	beq	11dbc <__assert_fail@plt+0x2ac>
   11dd8:	ldrb	r3, [r4]
   11ddc:	cmp	r3, #58	; 0x3a
   11de0:	bne	11df0 <__assert_fail@plt+0x2e0>
   11de4:	ldrb	r3, [r4, #1]!
   11de8:	cmp	r3, #58	; 0x3a
   11dec:	beq	11de4 <__assert_fail@plt+0x2d4>
   11df0:	cmp	r3, #0
   11df4:	beq	11f8c <__assert_fail@plt+0x47c>
   11df8:	ldrb	r3, [r4]
   11dfc:	cmp	r3, #0
   11e00:	beq	11e78 <__assert_fail@plt+0x368>
   11e04:	mov	r2, r4
   11e08:	mov	r1, #1
   11e0c:	cmp	r3, #58	; 0x3a
   11e10:	addeq	r1, r1, #1
   11e14:	ldrb	r3, [r2, #1]!
   11e18:	cmp	r3, #0
   11e1c:	bne	11e0c <__assert_fail@plt+0x2fc>
   11e20:	cmp	r9, #0
   11e24:	beq	11e80 <__assert_fail@plt+0x370>
   11e28:	ldr	r3, [r9]
   11e2c:	cmp	r3, #0
   11e30:	beq	11e88 <__assert_fail@plt+0x378>
   11e34:	mov	r3, r9
   11e38:	mov	r5, #0
   11e3c:	add	r5, r5, #1
   11e40:	ldr	r2, [r3, #4]!
   11e44:	cmp	r2, #0
   11e48:	bne	11e3c <__assert_fail@plt+0x32c>
   11e4c:	add	r1, r1, r5
   11e50:	add	r1, r1, #1
   11e54:	lsl	r1, r1, #2
   11e58:	mov	r0, r9
   11e5c:	bl	1b390 <argp_parse@@Base+0x1c00>
   11e60:	subs	r9, r0, #0
   11e64:	beq	11e90 <__assert_fail@plt+0x380>
   11e68:	add	r6, r9, r5, lsl #2
   11e6c:	mov	sl, #58	; 0x3a
   11e70:	mov	fp, #0
   11e74:	b	11ec8 <__assert_fail@plt+0x3b8>
   11e78:	mov	r1, #1
   11e7c:	b	11e20 <__assert_fail@plt+0x310>
   11e80:	mov	r5, #0
   11e84:	b	11e4c <__assert_fail@plt+0x33c>
   11e88:	mov	r5, #0
   11e8c:	b	11e4c <__assert_fail@plt+0x33c>
   11e90:	bl	11948 <__errno_location@plt>
   11e94:	ldr	r2, [pc, #272]	; 11fac <__assert_fail@plt+0x49c>
   11e98:	ldr	r1, [r0]
   11e9c:	mov	r0, #1
   11ea0:	bl	11858 <error@plt>
   11ea4:	b	11e68 <__assert_fail@plt+0x358>
   11ea8:	mov	r2, r7
   11eac:	mov	r1, r4
   11eb0:	ldr	r0, [r6, #-4]
   11eb4:	bl	11990 <strncpy@plt>
   11eb8:	ldr	r3, [r6, #-4]
   11ebc:	strb	fp, [r3, r7]
   11ec0:	add	r5, r5, #1
   11ec4:	add	r4, r8, #1
   11ec8:	mov	r1, sl
   11ecc:	mov	r0, r4
   11ed0:	bl	11930 <strchr@plt>
   11ed4:	subs	r8, r0, #0
   11ed8:	beq	11f0c <__assert_fail@plt+0x3fc>
   11edc:	sub	r7, r8, r4
   11ee0:	add	r0, r7, #1
   11ee4:	bl	1b360 <argp_parse@@Base+0x1bd0>
   11ee8:	str	r0, [r6], #4
   11eec:	cmp	r0, #0
   11ef0:	bne	11ea8 <__assert_fail@plt+0x398>
   11ef4:	bl	11948 <__errno_location@plt>
   11ef8:	ldr	r2, [pc, #172]	; 11fac <__assert_fail@plt+0x49c>
   11efc:	ldr	r1, [r0]
   11f00:	mov	r0, #1
   11f04:	bl	11858 <error@plt>
   11f08:	b	11ea8 <__assert_fail@plt+0x398>
   11f0c:	lsl	r6, r5, #2
   11f10:	add	r7, r9, r6
   11f14:	mov	r0, r4
   11f18:	bl	11918 <strlen@plt>
   11f1c:	add	r0, r0, #1
   11f20:	bl	1ad40 <argp_parse@@Base+0x15b0>
   11f24:	str	r0, [r9, r5, lsl #2]
   11f28:	cmp	r0, #0
   11f2c:	beq	11f94 <__assert_fail@plt+0x484>
   11f30:	mov	r1, r4
   11f34:	ldr	r0, [r7]
   11f38:	bl	1184c <strcpy@plt>
   11f3c:	add	r6, r9, r6
   11f40:	mov	r3, #0
   11f44:	str	r3, [r6, #4]
   11f48:	ldr	r3, [pc, #96]	; 11fb0 <__assert_fail@plt+0x4a0>
   11f4c:	ldr	r3, [r3]
   11f50:	cmp	r3, #0
   11f54:	beq	11f8c <__assert_fail@plt+0x47c>
   11f58:	ldr	r2, [r9]
   11f5c:	cmp	r2, #0
   11f60:	beq	11f8c <__assert_fail@plt+0x47c>
   11f64:	mov	r5, r9
   11f68:	mov	r4, #0
   11f6c:	ldr	r6, [pc, #64]	; 11fb4 <__assert_fail@plt+0x4a4>
   11f70:	mov	r1, r4
   11f74:	mov	r0, r6
   11f78:	bl	116b4 <printf@plt>
   11f7c:	add	r4, r4, #1
   11f80:	ldr	r2, [r5, #4]!
   11f84:	cmp	r2, #0
   11f88:	bne	11f70 <__assert_fail@plt+0x460>
   11f8c:	mov	r0, r9
   11f90:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f94:	bl	11948 <__errno_location@plt>
   11f98:	ldr	r2, [pc, #12]	; 11fac <__assert_fail@plt+0x49c>
   11f9c:	ldr	r1, [r0]
   11fa0:	mov	r0, #1
   11fa4:	bl	11858 <error@plt>
   11fa8:	b	11f30 <__assert_fail@plt+0x420>
   11fac:	andeq	ip, r1, r8, asr #25
   11fb0:	andeq	pc, r2, ip, lsr #24
   11fb4:	andeq	ip, r1, r0, ror #25
   11fb8:	push	{r4, r5, r6, lr}
   11fbc:	sub	sp, sp, #8
   11fc0:	mov	r4, r1
   11fc4:	sub	r0, r0, #52	; 0x34
   11fc8:	cmp	r0, #207	; 0xcf
   11fcc:	ldrls	pc, [pc, r0, lsl #2]
   11fd0:	b	1250c <__assert_fail@plt+0x9fc>
   11fd4:	muleq	r1, r8, r3
   11fd8:	andeq	r2, r1, ip, lsl #10
   11fdc:	andeq	r2, r1, ip, lsr #7
   11fe0:	andeq	r2, r1, ip, lsl #10
   11fe4:	andeq	r2, r1, ip, lsl #10
   11fe8:	andeq	r2, r1, ip, lsl #10
   11fec:	andeq	r2, r1, ip, lsl #10
   11ff0:	andeq	r2, r1, ip, lsl #10
   11ff4:	andeq	r2, r1, ip, lsl #10
   11ff8:	andeq	r2, r1, ip, lsl #10
   11ffc:	andeq	r2, r1, ip, lsl #10
   12000:	andeq	r2, r1, ip, lsl #10
   12004:	andeq	r2, r1, ip, lsl #10
   12008:	andeq	r2, r1, ip, lsl #10
   1200c:	andeq	r2, r1, r0, ror #7
   12010:	andeq	r2, r1, ip, lsl #10
   12014:			; <UNDEFINED> instruction: 0x000124b4
   12018:	andeq	r2, r1, ip, lsl #10
   1201c:	andeq	r2, r1, ip, lsl #10
   12020:	andeq	r2, r1, ip, lsl #10
   12024:	andeq	r2, r1, ip, lsl #10
   12028:	andeq	r2, r1, ip, lsl #10
   1202c:	andeq	r2, r1, ip, lsl #10
   12030:	andeq	r2, r1, ip, lsl #10
   12034:	andeq	r2, r1, ip, lsl #10
   12038:	andeq	r2, r1, ip, lsl #10
   1203c:	andeq	r2, r1, ip, lsl #10
   12040:	andeq	r2, r1, ip, lsl #10
   12044:	muleq	r1, r4, r4
   12048:	andeq	r2, r1, ip, lsl #10
   1204c:	andeq	r2, r1, ip, lsl #10
   12050:	andeq	r2, r1, r4, ror #9
   12054:	strdeq	r2, [r1], -r8
   12058:	andeq	r2, r1, ip, lsl #10
   1205c:	andeq	r2, r1, ip, lsl #10
   12060:	andeq	r2, r1, ip, lsl #10
   12064:	andeq	r2, r1, ip, lsl #10
   12068:	andeq	r2, r1, ip, lsl #10
   1206c:	andeq	r2, r1, ip, lsl #10
   12070:	andeq	r2, r1, ip, lsl #10
   12074:	andeq	r2, r1, ip, lsl #10
   12078:	andeq	r2, r1, ip, lsl #10
   1207c:	andeq	r2, r1, ip, lsl #10
   12080:	andeq	r2, r1, ip, lsl #10
   12084:	andeq	r2, r1, ip, lsl #10
   12088:	andeq	r2, r1, r4, lsl r3
   1208c:	ldrdeq	r2, [r1], -r0
   12090:	andeq	r2, r1, ip, lsl #10
   12094:	andeq	r2, r1, r8, asr r3
   12098:	andeq	r2, r1, ip, lsl #10
   1209c:	andeq	r2, r1, r4, lsr #9
   120a0:	andeq	r2, r1, ip, lsl #10
   120a4:	andeq	r2, r1, r4, ror r3
   120a8:	andeq	r2, r1, ip, lsl #10
   120ac:	andeq	r2, r1, ip, lsl #10
   120b0:	andeq	r2, r1, ip, lsl #10
   120b4:	andeq	r2, r1, r8, lsr #6
   120b8:	strdeq	r2, [r1], -r0
   120bc:	andeq	r2, r1, r4, asr #8
   120c0:	andeq	r2, r1, ip, lsl #10
   120c4:	andeq	r2, r1, r4, asr #9
   120c8:	andeq	r2, r1, ip, lsl #10
   120cc:	andeq	r2, r1, r4, lsl #7
   120d0:	andeq	r2, r1, r0, asr #6
   120d4:	andeq	r2, r1, ip, lsl #10
   120d8:	andeq	r2, r1, ip, lsl #10
   120dc:	andeq	r2, r1, ip, lsl #10
   120e0:	andeq	r2, r1, ip, lsl #10
   120e4:	andeq	r2, r1, ip, lsl #10
   120e8:	andeq	r2, r1, ip, lsl #10
   120ec:	andeq	r2, r1, ip, lsl #10
   120f0:	andeq	r2, r1, ip, lsl #10
   120f4:	andeq	r2, r1, ip, lsl #10
   120f8:	andeq	r2, r1, ip, lsl #10
   120fc:	andeq	r2, r1, ip, lsl #10
   12100:	andeq	r2, r1, ip, lsl #10
   12104:	andeq	r2, r1, ip, lsl #10
   12108:	andeq	r2, r1, ip, lsl #10
   1210c:	andeq	r2, r1, ip, lsl #10
   12110:	andeq	r2, r1, ip, lsl #10
   12114:	andeq	r2, r1, ip, lsl #10
   12118:	andeq	r2, r1, ip, lsl #10
   1211c:	andeq	r2, r1, ip, lsl #10
   12120:	andeq	r2, r1, ip, lsl #10
   12124:	andeq	r2, r1, ip, lsl #10
   12128:	andeq	r2, r1, ip, lsl #10
   1212c:	andeq	r2, r1, ip, lsl #10
   12130:	andeq	r2, r1, ip, lsl #10
   12134:	andeq	r2, r1, ip, lsl #10
   12138:	andeq	r2, r1, ip, lsl #10
   1213c:	andeq	r2, r1, ip, lsl #10
   12140:	andeq	r2, r1, ip, lsl #10
   12144:	andeq	r2, r1, ip, lsl #10
   12148:	andeq	r2, r1, ip, lsl #10
   1214c:	andeq	r2, r1, ip, lsl #10
   12150:	andeq	r2, r1, ip, lsl #10
   12154:	andeq	r2, r1, ip, lsl #10
   12158:	andeq	r2, r1, ip, lsl #10
   1215c:	andeq	r2, r1, ip, lsl #10
   12160:	andeq	r2, r1, ip, lsl #10
   12164:	andeq	r2, r1, ip, lsl #10
   12168:	andeq	r2, r1, ip, lsl #10
   1216c:	andeq	r2, r1, ip, lsl #10
   12170:	andeq	r2, r1, ip, lsl #10
   12174:	andeq	r2, r1, ip, lsl #10
   12178:	andeq	r2, r1, ip, lsl #10
   1217c:	andeq	r2, r1, ip, lsl #10
   12180:	andeq	r2, r1, ip, lsl #10
   12184:	andeq	r2, r1, ip, lsl #10
   12188:	andeq	r2, r1, ip, lsl #10
   1218c:	andeq	r2, r1, ip, lsl #10
   12190:	andeq	r2, r1, ip, lsl #10
   12194:	andeq	r2, r1, ip, lsl #10
   12198:	andeq	r2, r1, ip, lsl #10
   1219c:	andeq	r2, r1, ip, lsl #10
   121a0:	andeq	r2, r1, ip, lsl #10
   121a4:	andeq	r2, r1, ip, lsl #10
   121a8:	andeq	r2, r1, ip, lsl #10
   121ac:	andeq	r2, r1, ip, lsl #10
   121b0:	andeq	r2, r1, ip, lsl #10
   121b4:	andeq	r2, r1, ip, lsl #10
   121b8:	andeq	r2, r1, ip, lsl #10
   121bc:	andeq	r2, r1, ip, lsl #10
   121c0:	andeq	r2, r1, ip, lsl #10
   121c4:	andeq	r2, r1, ip, lsl #10
   121c8:	andeq	r2, r1, ip, lsl #10
   121cc:	andeq	r2, r1, ip, lsl #10
   121d0:	andeq	r2, r1, ip, lsl #10
   121d4:	andeq	r2, r1, ip, lsl #10
   121d8:	andeq	r2, r1, ip, lsl #10
   121dc:	andeq	r2, r1, ip, lsl #10
   121e0:	andeq	r2, r1, ip, lsl #10
   121e4:	andeq	r2, r1, ip, lsl #10
   121e8:	andeq	r2, r1, ip, lsl #10
   121ec:	andeq	r2, r1, ip, lsl #10
   121f0:	andeq	r2, r1, ip, lsl #10
   121f4:	andeq	r2, r1, ip, lsl #10
   121f8:	andeq	r2, r1, ip, lsl #10
   121fc:	andeq	r2, r1, ip, lsl #10
   12200:	andeq	r2, r1, ip, lsl #10
   12204:	andeq	r2, r1, ip, lsl #10
   12208:	andeq	r2, r1, ip, lsl #10
   1220c:	andeq	r2, r1, ip, lsl #10
   12210:	andeq	r2, r1, ip, lsl #10
   12214:	andeq	r2, r1, ip, lsl #10
   12218:	andeq	r2, r1, ip, lsl #10
   1221c:	andeq	r2, r1, ip, lsl #10
   12220:	andeq	r2, r1, ip, lsl #10
   12224:	andeq	r2, r1, ip, lsl #10
   12228:	andeq	r2, r1, ip, lsl #10
   1222c:	andeq	r2, r1, ip, lsl #10
   12230:	andeq	r2, r1, ip, lsl #10
   12234:	andeq	r2, r1, ip, lsl #10
   12238:	andeq	r2, r1, ip, lsl #10
   1223c:	andeq	r2, r1, ip, lsl #10
   12240:	andeq	r2, r1, ip, lsl #10
   12244:	andeq	r2, r1, ip, lsl #10
   12248:	andeq	r2, r1, ip, lsl #10
   1224c:	andeq	r2, r1, ip, lsl #10
   12250:	andeq	r2, r1, ip, lsl #10
   12254:	andeq	r2, r1, ip, lsl #10
   12258:	andeq	r2, r1, ip, lsl #10
   1225c:	andeq	r2, r1, ip, lsl #10
   12260:	andeq	r2, r1, ip, lsl #10
   12264:	andeq	r2, r1, ip, lsl #10
   12268:	andeq	r2, r1, ip, lsl #10
   1226c:	andeq	r2, r1, ip, lsl #10
   12270:	andeq	r2, r1, ip, lsl #10
   12274:	andeq	r2, r1, ip, lsl #10
   12278:	andeq	r2, r1, ip, lsl #10
   1227c:	andeq	r2, r1, ip, lsl #10
   12280:	andeq	r2, r1, ip, lsl #10
   12284:	andeq	r2, r1, ip, lsl #10
   12288:	andeq	r2, r1, ip, lsl #10
   1228c:	andeq	r2, r1, ip, lsl #10
   12290:	andeq	r2, r1, ip, lsl #10
   12294:	andeq	r2, r1, ip, lsl #10
   12298:	andeq	r2, r1, ip, lsl #10
   1229c:	andeq	r2, r1, ip, lsl #10
   122a0:	andeq	r2, r1, ip, lsl #10
   122a4:	andeq	r2, r1, ip, lsl #10
   122a8:	andeq	r2, r1, ip, lsl #10
   122ac:	andeq	r2, r1, ip, lsl #10
   122b0:	andeq	r2, r1, ip, lsl #10
   122b4:	andeq	r2, r1, ip, lsl #10
   122b8:	andeq	r2, r1, ip, lsl #10
   122bc:	andeq	r2, r1, ip, lsl #10
   122c0:	andeq	r2, r1, ip, lsl #10
   122c4:	andeq	r2, r1, ip, lsl #10
   122c8:	andeq	r2, r1, ip, lsl #10
   122cc:	andeq	r2, r1, ip, lsl #10
   122d0:	andeq	r2, r1, ip, lsl #10
   122d4:	andeq	r2, r1, ip, lsl #10
   122d8:	andeq	r2, r1, ip, lsl #10
   122dc:	andeq	r2, r1, ip, lsl #10
   122e0:	andeq	r2, r1, ip, lsl #10
   122e4:	andeq	r2, r1, ip, lsl #10
   122e8:	andeq	r2, r1, ip, lsl #10
   122ec:	andeq	r2, r1, ip, lsl #10
   122f0:	andeq	r2, r1, ip, lsl #10
   122f4:	andeq	r2, r1, ip, lsl #10
   122f8:	andeq	r2, r1, ip, lsl #10
   122fc:	andeq	r2, r1, ip, lsl #10
   12300:	andeq	r2, r1, ip, lsl #10
   12304:	andeq	r2, r1, r8, asr r4
   12308:	andeq	r2, r1, ip, ror #8
   1230c:	andeq	r2, r1, r0, lsl #9
   12310:	andeq	r2, r1, r0, asr #7
   12314:	mov	r0, r1
   12318:	bl	11c58 <__assert_fail@plt+0x148>
   1231c:	mov	r0, #0
   12320:	add	sp, sp, #8
   12324:	pop	{r4, r5, r6, pc}
   12328:	ldr	r5, [pc, #484]	; 12514 <__assert_fail@plt+0xa04>
   1232c:	ldr	r0, [r5]
   12330:	bl	11da8 <__assert_fail@plt+0x298>
   12334:	str	r0, [r5]
   12338:	mov	r0, #0
   1233c:	b	12320 <__assert_fail@plt+0x810>
   12340:	ldr	r5, [pc, #464]	; 12518 <__assert_fail@plt+0xa08>
   12344:	ldr	r0, [r5]
   12348:	bl	11da8 <__assert_fail@plt+0x298>
   1234c:	str	r0, [r5]
   12350:	mov	r0, #0
   12354:	b	12320 <__assert_fail@plt+0x810>
   12358:	mov	r3, #1
   1235c:	ldr	r2, [pc, #440]	; 1251c <__assert_fail@plt+0xa0c>
   12360:	str	r3, [r2]
   12364:	ldr	r2, [pc, #436]	; 12520 <__assert_fail@plt+0xa10>
   12368:	str	r3, [r2]
   1236c:	mov	r0, #0
   12370:	b	12320 <__assert_fail@plt+0x810>
   12374:	mov	r0, #0
   12378:	ldr	r3, [pc, #420]	; 12524 <__assert_fail@plt+0xa14>
   1237c:	str	r0, [r3]
   12380:	b	12320 <__assert_fail@plt+0x810>
   12384:	mov	r2, #1
   12388:	ldr	r3, [pc, #408]	; 12528 <__assert_fail@plt+0xa18>
   1238c:	str	r2, [r3]
   12390:	mov	r0, #0
   12394:	b	12320 <__assert_fail@plt+0x810>
   12398:	mov	r2, #2
   1239c:	ldr	r3, [pc, #384]	; 12524 <__assert_fail@plt+0xa14>
   123a0:	str	r2, [r3, #4]
   123a4:	mov	r0, #0
   123a8:	b	12320 <__assert_fail@plt+0x810>
   123ac:	mov	r2, #10
   123b0:	ldr	r3, [pc, #364]	; 12524 <__assert_fail@plt+0xa14>
   123b4:	str	r2, [r3, #4]
   123b8:	mov	r0, #0
   123bc:	b	12320 <__assert_fail@plt+0x810>
   123c0:	mov	r0, #0
   123c4:	ldr	r3, [pc, #344]	; 12524 <__assert_fail@plt+0xa14>
   123c8:	str	r0, [r3, #4]
   123cc:	b	12320 <__assert_fail@plt+0x810>
   123d0:	ldr	r3, [pc, #340]	; 1252c <__assert_fail@plt+0xa1c>
   123d4:	str	r1, [r3, #8]
   123d8:	mov	r0, #0
   123dc:	b	12320 <__assert_fail@plt+0x810>
   123e0:	ldr	r3, [pc, #324]	; 1252c <__assert_fail@plt+0xa1c>
   123e4:	str	r1, [r3, #12]
   123e8:	mov	r0, #0
   123ec:	b	12320 <__assert_fail@plt+0x810>
   123f0:	mov	r5, r2
   123f4:	mov	r2, #10
   123f8:	add	r1, sp, #4
   123fc:	mov	r0, r4
   12400:	bl	11690 <strtol@plt>
   12404:	mov	r6, r0
   12408:	ldr	r3, [sp, #4]
   1240c:	ldrb	r2, [r3]
   12410:	cmp	r2, #0
   12414:	bne	12430 <__assert_fail@plt+0x920>
   12418:	rsb	r6, r6, r6, lsl #4
   1241c:	lsl	r6, r6, #2
   12420:	ldr	r3, [pc, #252]	; 12524 <__assert_fail@plt+0xa14>
   12424:	str	r6, [r3, #8]
   12428:	mov	r0, #0
   1242c:	b	12320 <__assert_fail@plt+0x810>
   12430:	mov	r2, r4
   12434:	ldr	r1, [pc, #244]	; 12530 <__assert_fail@plt+0xa20>
   12438:	mov	r0, r5
   1243c:	bl	19064 <argp_error@@Base>
   12440:	b	12418 <__assert_fail@plt+0x908>
   12444:	mov	r2, #1
   12448:	ldr	r3, [pc, #208]	; 12520 <__assert_fail@plt+0xa10>
   1244c:	str	r2, [r3]
   12450:	mov	r0, #0
   12454:	b	12320 <__assert_fail@plt+0x810>
   12458:	mov	r2, #1
   1245c:	ldr	r3, [pc, #208]	; 12534 <__assert_fail@plt+0xa24>
   12460:	str	r2, [r3]
   12464:	mov	r0, #0
   12468:	b	12320 <__assert_fail@plt+0x810>
   1246c:	mov	r2, #1
   12470:	ldr	r3, [pc, #192]	; 12538 <__assert_fail@plt+0xa28>
   12474:	str	r2, [r3]
   12478:	mov	r0, #0
   1247c:	b	12320 <__assert_fail@plt+0x810>
   12480:	mov	r2, #1
   12484:	ldr	r3, [pc, #176]	; 1253c <__assert_fail@plt+0xa2c>
   12488:	str	r2, [r3]
   1248c:	mov	r0, #0
   12490:	b	12320 <__assert_fail@plt+0x810>
   12494:	ldr	r3, [pc, #136]	; 12524 <__assert_fail@plt+0xa14>
   12498:	str	r1, [r3, #12]
   1249c:	mov	r0, #0
   124a0:	b	12320 <__assert_fail@plt+0x810>
   124a4:	ldr	r3, [pc, #120]	; 12524 <__assert_fail@plt+0xa14>
   124a8:	str	r1, [r3, #16]
   124ac:	mov	r0, #0
   124b0:	b	12320 <__assert_fail@plt+0x810>
   124b4:	ldr	r3, [pc, #104]	; 12524 <__assert_fail@plt+0xa14>
   124b8:	str	r1, [r3, #20]
   124bc:	mov	r0, #0
   124c0:	b	12320 <__assert_fail@plt+0x810>
   124c4:	ldr	r3, [pc, #116]	; 12540 <__assert_fail@plt+0xa30>
   124c8:	ldr	r2, [r3]
   124cc:	str	r1, [r2]
   124d0:	ldr	r3, [r3]
   124d4:	mvn	r2, #0
   124d8:	str	r2, [r3, #4]
   124dc:	mov	r0, #0
   124e0:	b	12320 <__assert_fail@plt+0x810>
   124e4:	mov	r2, #1
   124e8:	ldr	r3, [pc, #84]	; 12544 <__assert_fail@plt+0xa34>
   124ec:	str	r2, [r3]
   124f0:	mov	r0, #0
   124f4:	b	12320 <__assert_fail@plt+0x810>
   124f8:	mov	r2, #1
   124fc:	ldr	r3, [pc, #40]	; 1252c <__assert_fail@plt+0xa1c>
   12500:	str	r2, [r3, #16]
   12504:	mov	r0, #0
   12508:	b	12320 <__assert_fail@plt+0x810>
   1250c:	mov	r0, #7
   12510:	b	12320 <__assert_fail@plt+0x810>
   12514:	andeq	pc, r2, ip, asr #24
   12518:	andeq	pc, r2, r4, lsr #24
   1251c:	andeq	pc, r2, ip, lsr #24
   12520:	andeq	pc, r2, r4, asr #24
   12524:			; <UNDEFINED> instruction: 0x0002f1b0
   12528:	andeq	pc, r2, r8, asr #20
   1252c:	ldrdeq	pc, [r2], -r4
   12530:	andeq	ip, r1, ip, ror #25
   12534:	andeq	pc, r2, r4, lsl #25
   12538:	andeq	pc, r2, r4, asr #20
   1253c:	andeq	pc, r2, r0, lsr ip	; <UNPREDICTABLE>
   12540:	andeq	pc, r2, r8, lsl #25
   12544:	andeq	pc, r2, r4, lsr ip	; <UNPREDICTABLE>
   12548:	push	{r4, lr}
   1254c:	sub	sp, sp, #8
   12550:	ldr	r3, [pc, #160]	; 125f8 <__assert_fail@plt+0xae8>
   12554:	ldr	r3, [r3, #24]
   12558:	cmp	r3, #0
   1255c:	beq	12594 <__assert_fail@plt+0xa84>
   12560:	and	ip, r0, #1016	; 0x3f8
   12564:	ldr	r2, [pc, #140]	; 125f8 <__assert_fail@plt+0xae8>
   12568:	ldr	r2, [r2, #28]
   1256c:	cmp	r2, ip
   12570:	beq	12594 <__assert_fail@plt+0xa84>
   12574:	ldr	r2, [pc, #128]	; 125fc <__assert_fail@plt+0xaec>
   12578:	ldr	r3, [r2, #8]
   1257c:	cmp	r3, #0
   12580:	beq	12594 <__assert_fail@plt+0xa84>
   12584:	add	r2, r2, #8
   12588:	ldr	r1, [r2, #4]
   1258c:	cmp	r1, ip
   12590:	bne	12578 <__assert_fail@plt+0xa68>
   12594:	ldr	r2, [pc, #92]	; 125f8 <__assert_fail@plt+0xae8>
   12598:	ldr	r1, [r2, #208]	; 0xd0
   1259c:	cmp	r1, #0
   125a0:	beq	125d4 <__assert_fail@plt+0xac4>
   125a4:	and	r0, r0, #7
   125a8:	ldr	r2, [r2, #212]	; 0xd4
   125ac:	cmp	r2, r0
   125b0:	beq	125d4 <__assert_fail@plt+0xac4>
   125b4:	ldr	r2, [pc, #68]	; 12600 <__assert_fail@plt+0xaf0>
   125b8:	ldr	r1, [r2, #8]
   125bc:	cmp	r1, #0
   125c0:	beq	125d4 <__assert_fail@plt+0xac4>
   125c4:	add	r2, r2, #8
   125c8:	ldr	ip, [r2, #4]
   125cc:	cmp	ip, r0
   125d0:	bne	125b8 <__assert_fail@plt+0xaa8>
   125d4:	ldr	r4, [pc, #40]	; 12604 <__assert_fail@plt+0xaf4>
   125d8:	str	r1, [sp]
   125dc:	ldr	r2, [pc, #36]	; 12608 <__assert_fail@plt+0xaf8>
   125e0:	mov	r1, #20
   125e4:	mov	r0, r4
   125e8:	bl	11954 <snprintf@plt>
   125ec:	mov	r0, r4
   125f0:	add	sp, sp, #8
   125f4:	pop	{r4, pc}
   125f8:			; <UNDEFINED> instruction: 0x0002f1b0
   125fc:	andeq	pc, r2, r8, asr #3
   12600:	andeq	pc, r2, r0, lsl #5
   12604:	andeq	pc, r2, r8, ror #11
   12608:	andeq	ip, r1, ip, lsl #26
   1260c:	push	{r4, r5, r6, lr}
   12610:	sub	sp, sp, #16
   12614:	mov	r4, r0
   12618:	mov	r5, r1
   1261c:	mov	r3, #1
   12620:	str	r3, [sp, #8]
   12624:	mov	r3, #0
   12628:	str	r3, [sp, #4]
   1262c:	str	r3, [sp]
   12630:	mov	r3, #46	; 0x2e
   12634:	ldr	r2, [pc, #364]	; 127a8 <__assert_fail@plt+0xc98>
   12638:	bl	11a14 <getnameinfo@plt>
   1263c:	cmp	r0, #0
   12640:	bne	1272c <__assert_fail@plt+0xc1c>
   12644:	ldr	r1, [pc, #348]	; 127a8 <__assert_fail@plt+0xc98>
   12648:	ldr	r0, [pc, #348]	; 127ac <__assert_fail@plt+0xc9c>
   1264c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12650:	mov	r3, #8
   12654:	str	r3, [sp, #8]
   12658:	mov	r3, #0
   1265c:	str	r3, [sp, #4]
   12660:	str	r3, [sp]
   12664:	ldr	r3, [pc, #324]	; 127b0 <__assert_fail@plt+0xca0>
   12668:	ldr	r2, [pc, #324]	; 127b4 <__assert_fail@plt+0xca4>
   1266c:	mov	r1, r5
   12670:	mov	r0, r4
   12674:	bl	11a14 <getnameinfo@plt>
   12678:	cmp	r0, #0
   1267c:	bne	12748 <__assert_fail@plt+0xc38>
   12680:	mov	r1, #46	; 0x2e
   12684:	ldr	r0, [pc, #296]	; 127b4 <__assert_fail@plt+0xca4>
   12688:	bl	11930 <strchr@plt>
   1268c:	subs	r6, r0, #0
   12690:	beq	12790 <__assert_fail@plt+0xc80>
   12694:	add	r5, r6, #1
   12698:	ldr	r3, [pc, #280]	; 127b8 <__assert_fail@plt+0xca8>
   1269c:	ldr	r1, [r3]
   126a0:	mov	r0, r5
   126a4:	bl	117f8 <strcasecmp@plt>
   126a8:	cmp	r0, #0
   126ac:	beq	12760 <__assert_fail@plt+0xc50>
   126b0:	ldr	r3, [pc, #260]	; 127bc <__assert_fail@plt+0xcac>
   126b4:	ldr	r4, [r3]
   126b8:	cmp	r4, #0
   126bc:	beq	126e8 <__assert_fail@plt+0xbd8>
   126c0:	ldr	r1, [r4]
   126c4:	cmp	r1, #0
   126c8:	beq	126e8 <__assert_fail@plt+0xbd8>
   126cc:	mov	r0, r5
   126d0:	bl	117f8 <strcasecmp@plt>
   126d4:	cmp	r0, #0
   126d8:	beq	12770 <__assert_fail@plt+0xc60>
   126dc:	ldr	r1, [r4, #4]!
   126e0:	cmp	r1, #0
   126e4:	bne	126cc <__assert_fail@plt+0xbbc>
   126e8:	ldr	r3, [pc, #208]	; 127c0 <__assert_fail@plt+0xcb0>
   126ec:	ldr	r4, [r3]
   126f0:	cmp	r4, #0
   126f4:	beq	12798 <__assert_fail@plt+0xc88>
   126f8:	ldr	r1, [r4]
   126fc:	cmp	r1, #0
   12700:	beq	127a0 <__assert_fail@plt+0xc90>
   12704:	ldr	r5, [pc, #168]	; 127b4 <__assert_fail@plt+0xca4>
   12708:	mov	r0, r5
   1270c:	bl	117f8 <strcasecmp@plt>
   12710:	cmp	r0, #0
   12714:	beq	12780 <__assert_fail@plt+0xc70>
   12718:	ldr	r1, [r4, #4]!
   1271c:	cmp	r1, #0
   12720:	bne	12708 <__assert_fail@plt+0xbf8>
   12724:	ldr	r0, [pc, #136]	; 127b4 <__assert_fail@plt+0xca4>
   12728:	b	12740 <__assert_fail@plt+0xc30>
   1272c:	bl	11714 <gai_strerror@plt>
   12730:	mov	r1, r0
   12734:	ldr	r0, [pc, #136]	; 127c4 <__assert_fail@plt+0xcb4>
   12738:	bl	11ce0 <__assert_fail@plt+0x1d0>
   1273c:	ldr	r0, [pc, #132]	; 127c8 <__assert_fail@plt+0xcb8>
   12740:	add	sp, sp, #16
   12744:	pop	{r4, r5, r6, pc}
   12748:	ldr	r4, [pc, #88]	; 127a8 <__assert_fail@plt+0xc98>
   1274c:	mov	r1, r4
   12750:	ldr	r0, [pc, #116]	; 127cc <__assert_fail@plt+0xcbc>
   12754:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12758:	mov	r0, r4
   1275c:	b	12740 <__assert_fail@plt+0xc30>
   12760:	mov	r3, #0
   12764:	strb	r3, [r6]
   12768:	ldr	r0, [pc, #68]	; 127b4 <__assert_fail@plt+0xca4>
   1276c:	b	12740 <__assert_fail@plt+0xc30>
   12770:	mov	r3, #0
   12774:	strb	r3, [r6]
   12778:	ldr	r0, [pc, #52]	; 127b4 <__assert_fail@plt+0xca4>
   1277c:	b	12740 <__assert_fail@plt+0xc30>
   12780:	mov	r3, #0
   12784:	strb	r3, [r6]
   12788:	ldr	r0, [pc, #36]	; 127b4 <__assert_fail@plt+0xca4>
   1278c:	b	12740 <__assert_fail@plt+0xc30>
   12790:	ldr	r0, [pc, #28]	; 127b4 <__assert_fail@plt+0xca4>
   12794:	b	12740 <__assert_fail@plt+0xc30>
   12798:	ldr	r0, [pc, #20]	; 127b4 <__assert_fail@plt+0xca4>
   1279c:	b	12740 <__assert_fail@plt+0xc30>
   127a0:	ldr	r0, [pc, #12]	; 127b4 <__assert_fail@plt+0xca4>
   127a4:	b	12740 <__assert_fail@plt+0xc30>
   127a8:	andeq	pc, r2, r0, asr ip	; <UNPREDICTABLE>
   127ac:	andeq	ip, r1, r8, lsr sp
   127b0:	andeq	r0, r0, r1, lsl #8
   127b4:	muleq	r2, r0, ip
   127b8:	andeq	pc, r2, ip, lsr ip	; <UNPREDICTABLE>
   127bc:	andeq	pc, r2, r4, lsr #24
   127c0:	andeq	pc, r2, ip, asr #24
   127c4:	andeq	ip, r1, r8, lsl sp
   127c8:	andeq	ip, r1, r4, lsl sp
   127cc:	andeq	ip, r1, r8, asr #26
   127d0:	push	{r4, r5, lr}
   127d4:	sub	sp, sp, #116	; 0x74
   127d8:	mov	r5, r0
   127dc:	bl	11948 <__errno_location@plt>
   127e0:	mov	r4, r0
   127e4:	ldr	r0, [r0]
   127e8:	cmp	r0, #0
   127ec:	bne	12838 <__assert_fail@plt+0xd28>
   127f0:	mov	r3, r5
   127f4:	ldr	r2, [pc, #92]	; 12858 <__assert_fail@plt+0xd48>
   127f8:	mov	r1, #100	; 0x64
   127fc:	add	r0, sp, #12
   12800:	bl	11954 <snprintf@plt>
   12804:	mov	r3, #0
   12808:	str	r3, [r4]
   1280c:	add	r1, sp, #12
   12810:	ldr	r0, [pc, #68]	; 1285c <__assert_fail@plt+0xd4c>
   12814:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12818:	mov	r3, #4
   1281c:	ldr	r2, [pc, #60]	; 12860 <__assert_fail@plt+0xd50>
   12820:	ldr	r2, [r2]
   12824:	add	r1, sp, #12
   12828:	mov	r0, #43	; 0x2b
   1282c:	bl	130ec <__assert_fail@plt+0x15dc>
   12830:	add	sp, sp, #116	; 0x74
   12834:	pop	{r4, r5, pc}
   12838:	bl	118b8 <strerror@plt>
   1283c:	str	r0, [sp]
   12840:	mov	r3, r5
   12844:	ldr	r2, [pc, #24]	; 12864 <__assert_fail@plt+0xd54>
   12848:	mov	r1, #100	; 0x64
   1284c:	add	r0, sp, #12
   12850:	bl	11954 <snprintf@plt>
   12854:	b	12804 <__assert_fail@plt+0xcf4>
   12858:	andeq	ip, r1, r4, lsl #27
   1285c:	andeq	lr, r1, ip, ror #6
   12860:	andeq	pc, r2, r0, asr #24
   12864:	andeq	ip, r1, r4, ror sp
   12868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1286c:	sub	sp, sp, #60	; 0x3c
   12870:	ldr	r3, [pc, #348]	; 129d4 <__assert_fail@plt+0xec4>
   12874:	ldr	sl, [r3, #40]	; 0x28
   12878:	add	r2, sl, #1
   1287c:	str	r2, [r3, #40]	; 0x28
   12880:	cmp	sl, #0
   12884:	beq	12890 <__assert_fail@plt+0xd80>
   12888:	add	sp, sp, #60	; 0x3c
   1288c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12890:	str	r1, [sp, #4]
   12894:	mov	r9, r0
   12898:	mov	r3, #3
   1289c:	add	r2, sp, #52	; 0x34
   128a0:	add	r1, sp, #48	; 0x30
   128a4:	ldr	r0, [pc, #300]	; 129d8 <__assert_fail@plt+0xec8>
   128a8:	bl	1a81c <argp_parse@@Base+0x108c>
   128ac:	cmp	r0, #0
   128b0:	blt	128d4 <__assert_fail@plt+0xdc4>
   128b4:	ldr	r8, [sp, #52]	; 0x34
   128b8:	ldr	r3, [sp, #48]	; 0x30
   128bc:	add	r3, r3, r3, lsl #1
   128c0:	add	r3, r8, r3, lsl #7
   128c4:	cmp	r8, r3
   128c8:	bcs	129bc <__assert_fail@plt+0xeac>
   128cc:	mov	fp, #0
   128d0:	b	12958 <__assert_fail@plt+0xe48>
   128d4:	ldr	r0, [pc, #256]	; 129dc <__assert_fail@plt+0xecc>
   128d8:	bl	127d0 <__assert_fail@plt+0xcc0>
   128dc:	b	12888 <__assert_fail@plt+0xd78>
   128e0:	mov	r3, #10
   128e4:	add	r2, sp, #12
   128e8:	mov	r1, #6
   128ec:	ldr	r0, [sp, #4]
   128f0:	bl	15b1c <daemon@@Base+0x170>
   128f4:	subs	r4, r0, #0
   128f8:	beq	1293c <__assert_fail@plt+0xe2c>
   128fc:	bl	11948 <__errno_location@plt>
   12900:	str	fp, [r0]
   12904:	mov	r0, r4
   12908:	bl	127d0 <__assert_fail@plt+0xcc0>
   1290c:	b	1293c <__assert_fail@plt+0xe2c>
   12910:	mov	r3, #10
   12914:	add	r2, sp, #12
   12918:	mov	r1, #6
   1291c:	ldr	r0, [sp, #4]
   12920:	bl	15b1c <daemon@@Base+0x170>
   12924:	subs	r4, r0, #0
   12928:	beq	1293c <__assert_fail@plt+0xe2c>
   1292c:	bl	11948 <__errno_location@plt>
   12930:	str	fp, [r0]
   12934:	mov	r0, r4
   12938:	bl	127d0 <__assert_fail@plt+0xcc0>
   1293c:	add	r8, r8, #384	; 0x180
   12940:	ldr	r0, [sp, #52]	; 0x34
   12944:	ldr	r3, [sp, #48]	; 0x30
   12948:	add	r3, r3, r3, lsl #1
   1294c:	add	r3, r0, r3, lsl #7
   12950:	cmp	r8, r3
   12954:	bcs	129c0 <__assert_fail@plt+0xeb0>
   12958:	mov	r2, #32
   1295c:	add	r1, r8, #8
   12960:	add	r0, sp, #12
   12964:	bl	11990 <strncpy@plt>
   12968:	strb	fp, [sp, #44]	; 0x2c
   1296c:	ldrsh	r3, [r9, #4]
   12970:	cmp	r3, #6
   12974:	beq	128e0 <__assert_fail@plt+0xdd0>
   12978:	ldr	r6, [r9, #40]	; 0x28
   1297c:	cmp	r6, #0
   12980:	ble	1293c <__assert_fail@plt+0xe2c>
   12984:	ldr	r5, [r9, #44]	; 0x2c
   12988:	sub	r5, r5, #4
   1298c:	mov	r4, sl
   12990:	add	r7, r8, #44	; 0x2c
   12994:	mov	r2, #32
   12998:	mov	r1, r7
   1299c:	ldr	r0, [r5, #4]!
   129a0:	bl	11ad4 <strncmp@plt>
   129a4:	cmp	r0, #0
   129a8:	beq	12910 <__assert_fail@plt+0xe00>
   129ac:	add	r4, r4, #1
   129b0:	cmp	r4, r6
   129b4:	bne	12994 <__assert_fail@plt+0xe84>
   129b8:	b	1293c <__assert_fail@plt+0xe2c>
   129bc:	mov	r0, r8
   129c0:	bl	1a5dc <argp_parse@@Base+0xe4c>
   129c4:	mov	r2, #0
   129c8:	ldr	r3, [pc, #4]	; 129d4 <__assert_fail@plt+0xec4>
   129cc:	str	r2, [r3, #40]	; 0x28
   129d0:	b	12888 <__assert_fail@plt+0xd78>
   129d4:	ldrdeq	pc, [r2], -r4
   129d8:	muleq	r1, r0, sp
   129dc:	andeq	ip, r1, r0, lsr #27
   129e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   129e4:	sub	sp, sp, #1408	; 0x580
   129e8:	mov	r4, r0
   129ec:	mov	r7, r1
   129f0:	mov	sl, r2
   129f4:	mov	r6, r3
   129f8:	mov	r2, #48	; 0x30
   129fc:	mov	r1, #0
   12a00:	add	r0, sp, #1360	; 0x550
   12a04:	bl	11984 <memset@plt>
   12a08:	ldrsh	r3, [r4, #4]
   12a0c:	cmp	r3, #6
   12a10:	beq	12ad0 <__assert_fail@plt+0xfc0>
   12a14:	add	r3, r4, #416	; 0x1a0
   12a18:	str	r3, [sp, #1360]	; 0x550
   12a1c:	mov	r3, #15
   12a20:	str	r3, [sp, #1364]	; 0x554
   12a24:	ldr	r3, [pc, #1612]	; 13078 <__assert_fail@plt+0x1568>
   12a28:	str	r3, [sp, #1368]	; 0x558
   12a2c:	mov	r3, #1
   12a30:	str	r3, [sp, #1372]	; 0x55c
   12a34:	ldr	r0, [r4, #432]	; 0x1b0
   12a38:	cmp	r0, #0
   12a3c:	addeq	r5, sp, #1376	; 0x560
   12a40:	beq	12a58 <__assert_fail@plt+0xf48>
   12a44:	str	r0, [sp, #1376]	; 0x560
   12a48:	bl	11918 <strlen@plt>
   12a4c:	str	r0, [sp, #1380]	; 0x564
   12a50:	add	r5, sp, #1376	; 0x560
   12a54:	add	r5, r5, #8
   12a58:	ldr	r3, [pc, #1560]	; 13078 <__assert_fail@plt+0x1568>
   12a5c:	str	r3, [r5]
   12a60:	mov	r3, #1
   12a64:	str	r3, [r5, #4]
   12a68:	cmp	r6, #0
   12a6c:	beq	12b1c <__assert_fail@plt+0x100c>
   12a70:	str	r6, [r5, #8]
   12a74:	mov	r0, r6
   12a78:	bl	11918 <strlen@plt>
   12a7c:	str	r0, [r5, #12]
   12a80:	ldrsh	r2, [r4, #4]
   12a84:	ldr	r3, [pc, #1520]	; 1307c <__assert_fail@plt+0x156c>
   12a88:	add	r3, r3, r2, lsl #2
   12a8c:	ldr	r1, [r3, #320]	; 0x140
   12a90:	ldr	r0, [pc, #1512]	; 13080 <__assert_fail@plt+0x1570>
   12a94:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12a98:	ldrsh	r3, [r4, #4]
   12a9c:	cmp	r3, #9
   12aa0:	ldrls	pc, [pc, r3, lsl #2]
   12aa4:	b	12b78 <__assert_fail@plt+0x1068>
   12aa8:	andeq	r2, r1, r4, ror #22
   12aac:	andeq	r2, r1, r8, lsl #30
   12ab0:	andeq	r2, r1, r8, lsl #30
   12ab4:	strdeq	r2, [r1], -r4
   12ab8:			; <UNDEFINED> instruction: 0x00012bb8
   12abc:	andeq	r3, r1, r4, asr #32
   12ac0:	andeq	r3, r1, r4, asr #32
   12ac4:	muleq	r1, r0, fp
   12ac8:	strdeq	r2, [r1], -ip
   12acc:	andeq	r2, r1, r8, lsl #30
   12ad0:	add	r5, sp, #52	; 0x34
   12ad4:	str	r5, [sp, #1360]	; 0x550
   12ad8:	ldr	r8, [r4, #432]	; 0x1b0
   12adc:	ldr	r0, [pc, #1440]	; 13084 <__assert_fail@plt+0x1574>
   12ae0:	bl	11780 <ctime@plt>
   12ae4:	str	r0, [sp]
   12ae8:	mov	r3, r8
   12aec:	ldr	r2, [pc, #1428]	; 13088 <__assert_fail@plt+0x1578>
   12af0:	mov	r1, #200	; 0xc8
   12af4:	mov	r0, r5
   12af8:	bl	11954 <snprintf@plt>
   12afc:	mov	r0, r5
   12b00:	bl	11918 <strlen@plt>
   12b04:	str	r0, [sp, #1364]	; 0x554
   12b08:	ldr	r3, [pc, #1404]	; 1308c <__assert_fail@plt+0x157c>
   12b0c:	str	r3, [sp, #1368]	; 0x558
   12b10:	mov	r3, #0
   12b14:	str	r3, [sp, #1372]	; 0x55c
   12b18:	b	12a34 <__assert_fail@plt+0xf24>
   12b1c:	ldr	r3, [r4, #452]	; 0x1c4
   12b20:	cmp	r3, #1
   12b24:	ble	12b50 <__assert_fail@plt+0x1040>
   12b28:	add	r6, sp, #252	; 0xfc
   12b2c:	str	r6, [r5, #8]
   12b30:	ldr	r2, [pc, #1368]	; 13090 <__assert_fail@plt+0x1580>
   12b34:	mov	r1, #80	; 0x50
   12b38:	mov	r0, r6
   12b3c:	bl	11954 <snprintf@plt>
   12b40:	mov	r0, r6
   12b44:	bl	11918 <strlen@plt>
   12b48:	str	r0, [r5, #12]
   12b4c:	b	12a80 <__assert_fail@plt+0xf70>
   12b50:	add	r3, r4, #176	; 0xb0
   12b54:	str	r3, [r5, #8]
   12b58:	ldr	r3, [r4, #448]	; 0x1c0
   12b5c:	str	r3, [r5, #12]
   12b60:	b	12a80 <__assert_fail@plt+0xf70>
   12b64:	ldr	r3, [pc, #1304]	; 13084 <__assert_fail@plt+0x1574>
   12b68:	ldr	r3, [r3]
   12b6c:	str	r3, [r4, #8]
   12b70:	ldr	r0, [pc, #1308]	; 13094 <__assert_fail@plt+0x1584>
   12b74:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12b78:	ldrsh	r3, [r4, #4]
   12b7c:	cmp	r3, #8
   12b80:	movne	r3, #0
   12b84:	strne	r3, [r4, #452]	; 0x1c4
   12b88:	add	sp, sp, #1408	; 0x580
   12b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b90:	mov	r0, #0
   12b94:	bl	1175c <time@plt>
   12b98:	ldr	r5, [r4, #8]
   12b9c:	sub	r5, r0, r5
   12ba0:	cmp	r5, #179	; 0xb3
   12ba4:	ble	12ce0 <__assert_fail@plt+0x11d0>
   12ba8:	ldr	r0, [pc, #1256]	; 13098 <__assert_fail@plt+0x1588>
   12bac:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12bb0:	mov	r3, #4
   12bb4:	strh	r3, [r4, #4]
   12bb8:	ldr	r1, [r4, #40]	; 0x28
   12bbc:	ldr	r0, [pc, #1240]	; 1309c <__assert_fail@plt+0x158c>
   12bc0:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12bc4:	ldr	r3, [pc, #1236]	; 130a0 <__assert_fail@plt+0x1590>
   12bc8:	ldr	r1, [r3]
   12bcc:	mov	r0, r7
   12bd0:	bl	117f8 <strcasecmp@plt>
   12bd4:	cmp	r0, #0
   12bd8:	beq	12bec <__assert_fail@plt+0x10dc>
   12bdc:	ldr	r3, [pc, #1176]	; 1307c <__assert_fail@plt+0x156c>
   12be0:	ldr	r3, [r3]
   12be4:	cmp	r3, #0
   12be8:	bne	12e08 <__assert_fail@plt+0x12f8>
   12bec:	ldr	r3, [pc, #1200]	; 130a4 <__assert_fail@plt+0x1594>
   12bf0:	ldr	r3, [r3]
   12bf4:	cmp	r3, #0
   12bf8:	bne	12e14 <__assert_fail@plt+0x1304>
   12bfc:	ldrh	r7, [r4, #44]	; 0x2c
   12c00:	cmp	r7, #2
   12c04:	ldr	r5, [pc, #1136]	; 1307c <__assert_fail@plt+0x156c>
   12c08:	ldreq	r6, [r5, #312]!	; 0x138
   12c0c:	ldrne	r6, [r5, #316]!	; 0x13c
   12c10:	cmp	r6, #0
   12c14:	blt	12e20 <__assert_fail@plt+0x1310>
   12c18:	ldr	r3, [pc, #1124]	; 13084 <__assert_fail@plt+0x1574>
   12c1c:	ldr	r3, [r3]
   12c20:	str	r3, [r4, #8]
   12c24:	add	r3, sp, #332	; 0x14c
   12c28:	str	r3, [sp, #12]
   12c2c:	ldr	r3, [sp, #1392]	; 0x570
   12c30:	str	r3, [sp, #4]
   12c34:	ldr	r3, [sp, #1360]	; 0x550
   12c38:	str	r3, [sp]
   12c3c:	ldr	r3, [r4, #444]	; 0x1bc
   12c40:	ldr	r2, [pc, #1120]	; 130a8 <__assert_fail@plt+0x1598>
   12c44:	ldr	r1, [pc, #1120]	; 130ac <__assert_fail@plt+0x159c>
   12c48:	ldr	r0, [sp, #12]
   12c4c:	bl	11954 <snprintf@plt>
   12c50:	ldr	r0, [sp, #12]
   12c54:	bl	11918 <strlen@plt>
   12c58:	cmp	r0, #1024	; 0x400
   12c5c:	movlt	r7, r0
   12c60:	movge	r7, #1024	; 0x400
   12c64:	add	r3, r4, #44	; 0x2c
   12c68:	ldr	r2, [r4, #172]	; 0xac
   12c6c:	str	r2, [sp, #4]
   12c70:	str	r3, [sp]
   12c74:	mov	r3, #0
   12c78:	mov	r2, r7
   12c7c:	ldr	r1, [sp, #12]
   12c80:	mov	r0, r6
   12c84:	bl	119d8 <sendto@plt>
   12c88:	cmp	r7, r0
   12c8c:	beq	12cc8 <__assert_fail@plt+0x11b8>
   12c90:	bl	11948 <__errno_location@plt>
   12c94:	mov	r8, r0
   12c98:	ldr	r7, [r0]
   12c9c:	mov	r0, r7
   12ca0:	bl	118b8 <strerror@plt>
   12ca4:	mov	r2, r0
   12ca8:	mov	r1, r7
   12cac:	ldr	r0, [pc, #1020]	; 130b0 <__assert_fail@plt+0x15a0>
   12cb0:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12cb4:	mov	r3, #7
   12cb8:	strh	r3, [r4, #4]
   12cbc:	str	r7, [r8]
   12cc0:	ldr	r0, [pc, #1004]	; 130b4 <__assert_fail@plt+0x15a4>
   12cc4:	bl	127d0 <__assert_fail@plt+0xcc0>
   12cc8:	ldr	r3, [r5]
   12ccc:	cmp	r3, #0
   12cd0:	bge	12b78 <__assert_fail@plt+0x1068>
   12cd4:	mov	r0, r6
   12cd8:	bl	11af8 <close@plt>
   12cdc:	b	12b78 <__assert_fail@plt+0x1068>
   12ce0:	ldr	r1, [r4, #40]	; 0x28
   12ce4:	ldr	r0, [pc, #944]	; 1309c <__assert_fail@plt+0x158c>
   12ce8:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12cec:	rsb	r1, r5, #180	; 0xb4
   12cf0:	ldr	r0, [pc, #960]	; 130b8 <__assert_fail@plt+0x15a8>
   12cf4:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12cf8:	b	12b78 <__assert_fail@plt+0x1068>
   12cfc:	ldr	r1, [r4, #40]	; 0x28
   12d00:	ldr	r0, [pc, #916]	; 1309c <__assert_fail@plt+0x158c>
   12d04:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12d08:	mov	r0, #0
   12d0c:	bl	1175c <time@plt>
   12d10:	ldr	r1, [r4, #8]
   12d14:	sub	r1, r0, r1
   12d18:	cmp	r1, #179	; 0xb3
   12d1c:	ble	12df8 <__assert_fail@plt+0x12e8>
   12d20:	mov	r2, #32
   12d24:	mov	r1, #0
   12d28:	add	r3, sp, r2
   12d2c:	sub	r0, r3, #12
   12d30:	bl	11984 <memset@plt>
   12d34:	ldr	r3, [pc, #832]	; 1307c <__assert_fail@plt+0x156c>
   12d38:	ldr	r3, [r3, #4]
   12d3c:	str	r3, [sp, #24]
   12d40:	cmp	r3, #0
   12d44:	moveq	r3, #32
   12d48:	streq	r3, [sp, #20]
   12d4c:	add	r3, sp, #16
   12d50:	add	r2, sp, #20
   12d54:	ldr	r1, [pc, #864]	; 130bc <__assert_fail@plt+0x15ac>
   12d58:	ldr	r1, [r1, #44]	; 0x2c
   12d5c:	ldr	r0, [r4, #40]	; 0x28
   12d60:	bl	11a98 <getaddrinfo@plt>
   12d64:	cmp	r0, #0
   12d68:	beq	12db4 <__assert_fail@plt+0x12a4>
   12d6c:	bl	11714 <gai_strerror@plt>
   12d70:	mov	r1, r0
   12d74:	ldr	r0, [pc, #836]	; 130c0 <__assert_fail@plt+0x15b0>
   12d78:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12d7c:	ldr	r1, [r4, #452]	; 0x1c4
   12d80:	ldr	r0, [pc, #828]	; 130c4 <__assert_fail@plt+0x15b4>
   12d84:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12d88:	ldr	r3, [r4, #452]	; 0x1c4
   12d8c:	sub	r3, r3, #1
   12d90:	str	r3, [r4, #452]	; 0x1c4
   12d94:	cmp	r3, #0
   12d98:	bge	12b78 <__assert_fail@plt+0x1068>
   12d9c:	mov	r5, #0
   12da0:	strh	r5, [r4, #4]
   12da4:	ldr	r0, [r4, #40]	; 0x28
   12da8:	bl	1a5dc <argp_parse@@Base+0xe4c>
   12dac:	str	r5, [r4, #40]	; 0x28
   12db0:	b	12b78 <__assert_fail@plt+0x1068>
   12db4:	ldr	r1, [r4, #40]	; 0x28
   12db8:	ldr	r0, [pc, #776]	; 130c8 <__assert_fail@plt+0x15b8>
   12dbc:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12dc0:	ldr	r5, [sp, #16]
   12dc4:	ldr	r3, [r5, #16]
   12dc8:	str	r3, [r4, #172]	; 0xac
   12dcc:	ldr	r2, [r5, #16]
   12dd0:	ldr	r1, [r5, #20]
   12dd4:	add	r0, r4, #44	; 0x2c
   12dd8:	bl	11744 <memcpy@plt>
   12ddc:	mov	r0, r5
   12de0:	bl	11a8c <freeaddrinfo@plt>
   12de4:	mov	r3, #0
   12de8:	str	r3, [r4, #452]	; 0x1c4
   12dec:	mov	r3, #4
   12df0:	strh	r3, [r4, #4]
   12df4:	b	12bb8 <__assert_fail@plt+0x10a8>
   12df8:	rsb	r1, r1, #180	; 0xb4
   12dfc:	ldr	r0, [pc, #712]	; 130cc <__assert_fail@plt+0x15bc>
   12e00:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12e04:	b	12b78 <__assert_fail@plt+0x1068>
   12e08:	ldr	r0, [pc, #704]	; 130d0 <__assert_fail@plt+0x15c0>
   12e0c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12e10:	b	12b78 <__assert_fail@plt+0x1068>
   12e14:	ldr	r0, [pc, #696]	; 130d4 <__assert_fail@plt+0x15c4>
   12e18:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12e1c:	b	12b78 <__assert_fail@plt+0x1068>
   12e20:	add	r3, sp, #20
   12e24:	str	r3, [sp, #12]
   12e28:	mov	r2, #32
   12e2c:	mov	r1, #0
   12e30:	mov	r0, r3
   12e34:	bl	11984 <memset@plt>
   12e38:	str	r7, [sp, #24]
   12e3c:	mov	r3, #2
   12e40:	str	r3, [sp, #28]
   12e44:	mov	r3, #1
   12e48:	str	r3, [sp, #20]
   12e4c:	add	r3, sp, #16
   12e50:	ldr	r2, [sp, #12]
   12e54:	ldr	r1, [pc, #608]	; 130bc <__assert_fail@plt+0x15ac>
   12e58:	ldr	r1, [r1, #44]	; 0x2c
   12e5c:	mov	r0, #0
   12e60:	bl	11a98 <getaddrinfo@plt>
   12e64:	cmp	r0, #0
   12e68:	beq	12e80 <__assert_fail@plt+0x1370>
   12e6c:	bl	11714 <gai_strerror@plt>
   12e70:	mov	r1, r0
   12e74:	ldr	r0, [pc, #604]	; 130d8 <__assert_fail@plt+0x15c8>
   12e78:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12e7c:	b	12b78 <__assert_fail@plt+0x1068>
   12e80:	ldr	r3, [sp, #16]
   12e84:	ldr	r2, [r3, #12]
   12e88:	ldr	r1, [r3, #8]
   12e8c:	ldr	r0, [r3, #4]
   12e90:	bl	11aa4 <socket@plt>
   12e94:	subs	r6, r0, #0
   12e98:	blt	12ee0 <__assert_fail@plt+0x13d0>
   12e9c:	ldr	r3, [sp, #16]
   12ea0:	ldr	r2, [r3, #16]
   12ea4:	ldr	r1, [r3, #20]
   12ea8:	mov	r0, r6
   12eac:	bl	1196c <bind@plt>
   12eb0:	mov	r7, r0
   12eb4:	ldr	r0, [sp, #16]
   12eb8:	bl	11a8c <freeaddrinfo@plt>
   12ebc:	cmp	r7, #0
   12ec0:	beq	12c18 <__assert_fail@plt+0x1108>
   12ec4:	bl	11948 <__errno_location@plt>
   12ec8:	ldr	r0, [r0]
   12ecc:	bl	118b8 <strerror@plt>
   12ed0:	mov	r1, r0
   12ed4:	ldr	r0, [pc, #512]	; 130dc <__assert_fail@plt+0x15cc>
   12ed8:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12edc:	b	12b78 <__assert_fail@plt+0x1068>
   12ee0:	ldr	r0, [pc, #504]	; 130e0 <__assert_fail@plt+0x15d0>
   12ee4:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12ee8:	ldr	r0, [sp, #16]
   12eec:	bl	11a8c <freeaddrinfo@plt>
   12ef0:	b	12b78 <__assert_fail@plt+0x1068>
   12ef4:	ldr	r3, [pc, #392]	; 13084 <__assert_fail@plt+0x1574>
   12ef8:	ldr	r3, [r3]
   12efc:	str	r3, [r4, #8]
   12f00:	tst	sl, #1
   12f04:	bne	12ff4 <__assert_fail@plt+0x14e4>
   12f08:	ldr	r3, [pc, #372]	; 13084 <__assert_fail@plt+0x1574>
   12f0c:	ldr	r3, [r3]
   12f10:	str	r3, [r4, #8]
   12f14:	ldr	r1, [r4, #40]	; 0x28
   12f18:	ldr	r0, [pc, #380]	; 1309c <__assert_fail@plt+0x158c>
   12f1c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12f20:	ldrh	r3, [r4, #4]
   12f24:	sub	r3, r3, #2
   12f28:	uxth	r3, r3
   12f2c:	cmp	r3, #1
   12f30:	ldrls	r3, [pc, #428]	; 130e4 <__assert_fail@plt+0x15d4>
   12f34:	strls	r3, [r5, #16]
   12f38:	movls	r3, #2
   12f3c:	ldrhi	r3, [pc, #336]	; 13094 <__assert_fail@plt+0x1584>
   12f40:	strhi	r3, [r5, #16]
   12f44:	movhi	r3, #1
   12f48:	str	r3, [r5, #20]
   12f4c:	mov	r7, #6
   12f50:	ldr	r9, [pc, #340]	; 130ac <__assert_fail@plt+0x159c>
   12f54:	mov	r8, #0
   12f58:	mov	r2, r7
   12f5c:	add	r1, sp, #1360	; 0x550
   12f60:	ldrsh	r0, [r4, #6]
   12f64:	bl	119b4 <writev@plt>
   12f68:	cmp	r0, #0
   12f6c:	bge	13024 <__assert_fail@plt+0x1514>
   12f70:	bl	11948 <__errno_location@plt>
   12f74:	mov	r6, r0
   12f78:	ldr	r5, [r0]
   12f7c:	ldrsh	r3, [r4, #4]
   12f80:	cmp	r3, #9
   12f84:	cmpeq	r5, #11
   12f88:	beq	12b78 <__assert_fail@plt+0x1068>
   12f8c:	ldrsh	r0, [r4, #6]
   12f90:	bl	11af8 <close@plt>
   12f94:	sub	r3, r5, #5
   12f98:	bics	r3, r3, #4
   12f9c:	bne	13000 <__assert_fail@plt+0x14f0>
   12fa0:	ldrh	r3, [r4, #4]
   12fa4:	sub	r3, r3, #2
   12fa8:	uxth	r3, r3
   12fac:	cmp	r3, #1
   12fb0:	bhi	13000 <__assert_fail@plt+0x14f0>
   12fb4:	mov	r2, r8
   12fb8:	mov	r1, r9
   12fbc:	ldr	r0, [r4, #40]	; 0x28
   12fc0:	bl	1187c <open64@plt>
   12fc4:	sxth	r0, r0
   12fc8:	strh	r0, [r4, #6]
   12fcc:	cmp	r0, #0
   12fd0:	bge	12f58 <__assert_fail@plt+0x1448>
   12fd4:	mov	r5, #0
   12fd8:	strh	r5, [r4, #4]
   12fdc:	ldr	r0, [r4, #40]	; 0x28
   12fe0:	bl	127d0 <__assert_fail@plt+0xcc0>
   12fe4:	ldr	r0, [r4, #40]	; 0x28
   12fe8:	bl	1a5dc <argp_parse@@Base+0xe4c>
   12fec:	str	r5, [r4, #40]	; 0x28
   12ff0:	b	12b78 <__assert_fail@plt+0x1068>
   12ff4:	ldr	r0, [pc, #236]	; 130e8 <__assert_fail@plt+0x15d8>
   12ff8:	bl	11ce0 <__assert_fail@plt+0x1d0>
   12ffc:	b	12b78 <__assert_fail@plt+0x1068>
   13000:	mov	r7, #0
   13004:	strh	r7, [r4, #4]
   13008:	str	r5, [r6]
   1300c:	ldr	r0, [r4, #40]	; 0x28
   13010:	bl	127d0 <__assert_fail@plt+0xcc0>
   13014:	ldr	r0, [r4, #40]	; 0x28
   13018:	bl	1a5dc <argp_parse@@Base+0xe4c>
   1301c:	str	r7, [r4, #40]	; 0x28
   13020:	b	12b78 <__assert_fail@plt+0x1068>
   13024:	tst	sl, #2
   13028:	beq	12b78 <__assert_fail@plt+0x1068>
   1302c:	ldr	r3, [r4, #460]	; 0x1cc
   13030:	tst	r3, #1
   13034:	bne	12b78 <__assert_fail@plt+0x1068>
   13038:	ldrsh	r0, [r4, #6]
   1303c:	bl	11678 <fsync@plt>
   13040:	b	12b78 <__assert_fail@plt+0x1068>
   13044:	ldr	r3, [pc, #56]	; 13084 <__assert_fail@plt+0x1574>
   13048:	ldr	r3, [r3]
   1304c:	str	r3, [r4, #8]
   13050:	ldr	r0, [pc, #60]	; 13094 <__assert_fail@plt+0x1584>
   13054:	bl	11ce0 <__assert_fail@plt+0x1d0>
   13058:	ldr	r3, [pc, #132]	; 130e4 <__assert_fail@plt+0x15d4>
   1305c:	str	r3, [r5, #16]
   13060:	mov	r3, #2
   13064:	str	r3, [r5, #20]
   13068:	add	r1, sp, #1360	; 0x550
   1306c:	mov	r0, r4
   13070:	bl	12868 <__assert_fail@plt+0xd58>
   13074:	b	12b78 <__assert_fail@plt+0x1068>
   13078:	andeq	ip, r1, r0, ror #27
   1307c:			; <UNDEFINED> instruction: 0x0002f1b0
   13080:	andeq	ip, r1, r4, lsl #28
   13084:	andeq	pc, r2, r0, lsl #25
   13088:			; <UNDEFINED> instruction: 0x0001cdb4
   1308c:	andeq	lr, r1, r4, ror #15
   13090:	andeq	ip, r1, r4, ror #27
   13094:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   13098:	andeq	ip, r1, r4, lsl lr
   1309c:	andeq	ip, r1, r4, ror #25
   130a0:	andeq	pc, r2, r0, asr #24
   130a4:	andeq	pc, r2, r4, lsl #25
   130a8:	andeq	ip, r1, r4, lsr #31
   130ac:	andeq	r0, r0, r1, lsl #8
   130b0:			; <UNDEFINED> instruction: 0x0001cfb4
   130b4:	ldrdeq	ip, [r1], -r4
   130b8:	andeq	ip, r1, r0, asr #28
   130bc:	ldrdeq	pc, [r2], -r4
   130c0:	andeq	ip, r1, r0, ror lr
   130c4:	andeq	ip, r1, r0, lsl #29
   130c8:	muleq	r1, r0, lr
   130cc:	andeq	ip, r1, r8, lsr #29
   130d0:	ldrdeq	ip, [r1], -r8
   130d4:	strdeq	ip, [r1], -r8
   130d8:	andeq	ip, r1, r8, lsr #30
   130dc:	andeq	ip, r1, ip, ror pc
   130e0:	andeq	ip, r1, r4, asr pc
   130e4:	andeq	ip, r1, r8, ror #31
   130e8:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   130ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130f0:	sub	sp, sp, #292	; 0x124
   130f4:	mov	r6, r0
   130f8:	str	r0, [sp, #16]
   130fc:	mov	r5, r1
   13100:	mov	r4, r2
   13104:	str	r2, [sp, #20]
   13108:	mov	r8, r3
   1310c:	bl	12548 <__assert_fail@plt+0xa38>
   13110:	str	r5, [sp, #4]
   13114:	str	r4, [sp]
   13118:	mov	r3, r8
   1311c:	mov	r2, r6
   13120:	mov	r1, r0
   13124:	ldr	r0, [pc, #1016]	; 13524 <__assert_fail@plt+0x1a14>
   13128:	bl	11ce0 <__assert_fail@plt+0x1d0>
   1312c:	add	r0, sp, #160	; 0xa0
   13130:	bl	119fc <sigemptyset@plt>
   13134:	mov	r1, #1
   13138:	add	r0, sp, #160	; 0xa0
   1313c:	bl	118a0 <sigaddset@plt>
   13140:	mov	r1, #14
   13144:	add	r0, sp, #160	; 0xa0
   13148:	bl	118a0 <sigaddset@plt>
   1314c:	add	r2, sp, #32
   13150:	add	r1, sp, #160	; 0xa0
   13154:	mov	r0, #0
   13158:	bl	116e4 <sigprocmask@plt>
   1315c:	mov	r0, r5
   13160:	bl	11918 <strlen@plt>
   13164:	mov	r4, r0
   13168:	str	r0, [sp, #12]
   1316c:	cmp	r0, #15
   13170:	ble	13180 <__assert_fail@plt+0x1670>
   13174:	ldrb	r3, [r5, #3]
   13178:	cmp	r3, #32
   1317c:	beq	13208 <__assert_fail@plt+0x16f8>
   13180:	orr	r8, r8, #4
   13184:	ldr	r0, [pc, #924]	; 13528 <__assert_fail@plt+0x1a18>
   13188:	bl	1175c <time@plt>
   1318c:	tst	r8, #4
   13190:	bne	1323c <__assert_fail@plt+0x172c>
   13194:	ldr	r3, [pc, #912]	; 1352c <__assert_fail@plt+0x1a1c>
   13198:	ldr	r3, [r3, #16]
   1319c:	cmp	r3, #0
   131a0:	streq	r5, [sp, #28]
   131a4:	bne	13250 <__assert_fail@plt+0x1740>
   131a8:	add	r5, r5, #16
   131ac:	sub	r3, r4, #16
   131b0:	str	r3, [sp, #12]
   131b4:	ands	sl, r8, #8
   131b8:	ldreq	r3, [sp, #16]
   131bc:	asreq	r6, r3, #3
   131c0:	andeq	r6, r6, #127	; 0x7f
   131c4:	movne	r6, #24
   131c8:	ldr	r3, [pc, #864]	; 13530 <__assert_fail@plt+0x1a20>
   131cc:	ldr	r3, [r3]
   131d0:	cmp	r3, #0
   131d4:	beq	13264 <__assert_fail@plt+0x1754>
   131d8:	ldr	r3, [pc, #852]	; 13534 <__assert_fail@plt+0x1a24>
   131dc:	ldr	r4, [r3]
   131e0:	cmp	r4, #0
   131e4:	beq	133e4 <__assert_fail@plt+0x18d4>
   131e8:	ldr	r3, [sp, #16]
   131ec:	and	r3, r3, #7
   131f0:	mov	r7, #1
   131f4:	lsl	r7, r7, r3
   131f8:	ldr	r9, [pc, #824]	; 13538 <__assert_fail@plt+0x1a28>
   131fc:	ldr	fp, [pc, #804]	; 13528 <__assert_fail@plt+0x1a18>
   13200:	str	r8, [sp, #24]
   13204:	b	132e0 <__assert_fail@plt+0x17d0>
   13208:	ldrb	r3, [r5, #6]
   1320c:	cmp	r3, #32
   13210:	bne	13180 <__assert_fail@plt+0x1670>
   13214:	ldrb	r3, [r5, #9]
   13218:	cmp	r3, #58	; 0x3a
   1321c:	bne	13180 <__assert_fail@plt+0x1670>
   13220:	ldrb	r3, [r5, #12]
   13224:	cmp	r3, #58	; 0x3a
   13228:	bne	13180 <__assert_fail@plt+0x1670>
   1322c:	ldrb	r3, [r5, #15]
   13230:	cmp	r3, #32
   13234:	bne	13180 <__assert_fail@plt+0x1670>
   13238:	b	13184 <__assert_fail@plt+0x1674>
   1323c:	ldr	r0, [pc, #740]	; 13528 <__assert_fail@plt+0x1a18>
   13240:	bl	11780 <ctime@plt>
   13244:	add	r3, r0, #4
   13248:	str	r3, [sp, #28]
   1324c:	b	131b4 <__assert_fail@plt+0x16a4>
   13250:	ldr	r0, [pc, #720]	; 13528 <__assert_fail@plt+0x1a18>
   13254:	bl	11780 <ctime@plt>
   13258:	add	r3, r0, #4
   1325c:	str	r3, [sp, #28]
   13260:	b	131a8 <__assert_fail@plt+0x1698>
   13264:	mov	r2, #0
   13268:	mov	r1, #1
   1326c:	ldr	r0, [pc, #712]	; 1353c <__assert_fail@plt+0x1a2c>
   13270:	bl	1187c <open64@plt>
   13274:	sxth	r4, r0
   13278:	ldr	r6, [pc, #704]	; 13540 <__assert_fail@plt+0x1a30>
   1327c:	strh	r4, [r6, #6]
   13280:	ldr	r3, [pc, #700]	; 13544 <__assert_fail@plt+0x1a34>
   13284:	ldr	r0, [r3]
   13288:	bl	11798 <strdup@plt>
   1328c:	str	r0, [r6, #432]	; 0x1b0
   13290:	cmp	r4, #0
   13294:	blt	132b4 <__assert_fail@plt+0x17a4>
   13298:	mov	r3, r5
   1329c:	mov	r2, r8
   132a0:	ldr	r1, [sp, #20]
   132a4:	mov	r0, r6
   132a8:	bl	129e0 <__assert_fail@plt+0xed0>
   132ac:	ldrsh	r0, [r6, #6]
   132b0:	bl	11af8 <close@plt>
   132b4:	mov	r2, #0
   132b8:	add	r1, sp, #32
   132bc:	mov	r0, #2
   132c0:	bl	116e4 <sigprocmask@plt>
   132c4:	b	133f4 <__assert_fail@plt+0x18e4>
   132c8:	ldr	r3, [sp, #24]
   132cc:	tst	r3, #1
   132d0:	beq	132fc <__assert_fail@plt+0x17ec>
   132d4:	ldr	r4, [r4]
   132d8:	cmp	r4, #0
   132dc:	beq	133e4 <__assert_fail@plt+0x18d4>
   132e0:	add	r3, r4, r6
   132e4:	ldrb	r3, [r3, #12]
   132e8:	tst	r3, r7
   132ec:	beq	132d4 <__assert_fail@plt+0x17c4>
   132f0:	ldrsh	r3, [r4, #4]
   132f4:	cmp	r3, #3
   132f8:	beq	132c8 <__assert_fail@plt+0x17b8>
   132fc:	cmp	sl, #0
   13300:	beq	133fc <__assert_fail@plt+0x18ec>
   13304:	ldr	r2, [fp]
   13308:	ldr	r3, [r4, #8]
   1330c:	sub	r2, r2, r3
   13310:	ldr	r3, [r9, #8]
   13314:	add	r3, r3, r3, lsr #31
   13318:	cmp	r2, r3, asr #1
   1331c:	blt	132d4 <__assert_fail@plt+0x17c4>
   13320:	ldr	r1, [r4, #436]	; 0x1b4
   13324:	cmp	r1, #0
   13328:	bne	13408 <__assert_fail@plt+0x18f8>
   1332c:	ldr	r3, [r4, #452]	; 0x1c4
   13330:	cmp	r3, #0
   13334:	bne	133a4 <__assert_fail@plt+0x1894>
   13338:	mov	r3, #0
   1333c:	str	r3, [r4, #456]	; 0x1c8
   13340:	mov	r2, #15
   13344:	ldr	r1, [sp, #28]
   13348:	add	r0, r4, #416	; 0x1a0
   1334c:	bl	11990 <strncpy@plt>
   13350:	ldr	r0, [r4, #432]	; 0x1b0
   13354:	bl	1a5dc <argp_parse@@Base+0xe4c>
   13358:	ldr	r8, [sp, #20]
   1335c:	mov	r0, r8
   13360:	bl	11798 <strdup@plt>
   13364:	str	r0, [r4, #432]	; 0x1b0
   13368:	ldr	r3, [sp, #12]
   1336c:	cmp	r3, #239	; 0xef
   13370:	bgt	133bc <__assert_fail@plt+0x18ac>
   13374:	str	r3, [r4, #448]	; 0x1c0
   13378:	ldr	r3, [sp, #16]
   1337c:	str	r3, [r4, #444]	; 0x1bc
   13380:	mov	r1, r5
   13384:	add	r0, r4, #176	; 0xb0
   13388:	bl	1184c <strcpy@plt>
   1338c:	mov	r3, #0
   13390:	ldr	r2, [sp, #24]
   13394:	mov	r1, r8
   13398:	mov	r0, r4
   1339c:	bl	129e0 <__assert_fail@plt+0xed0>
   133a0:	b	132d4 <__assert_fail@plt+0x17c4>
   133a4:	mov	r3, #0
   133a8:	mov	r2, r3
   133ac:	ldr	r1, [sp, #20]
   133b0:	mov	r0, r4
   133b4:	bl	129e0 <__assert_fail@plt+0xed0>
   133b8:	b	13338 <__assert_fail@plt+0x1828>
   133bc:	mov	r3, #0
   133c0:	strb	r3, [r4, #176]	; 0xb0
   133c4:	mov	r3, #0
   133c8:	str	r3, [r4, #448]	; 0x1c0
   133cc:	mov	r3, r5
   133d0:	ldr	r2, [sp, #24]
   133d4:	ldr	r1, [sp, #20]
   133d8:	mov	r0, r4
   133dc:	bl	129e0 <__assert_fail@plt+0xed0>
   133e0:	b	132d4 <__assert_fail@plt+0x17c4>
   133e4:	mov	r2, #0
   133e8:	add	r1, sp, #32
   133ec:	mov	r0, #2
   133f0:	bl	116e4 <sigprocmask@plt>
   133f4:	add	sp, sp, #292	; 0x124
   133f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133fc:	ldr	r1, [r4, #436]	; 0x1b4
   13400:	cmp	r1, #0
   13404:	beq	13458 <__assert_fail@plt+0x1948>
   13408:	ldr	r8, [r4, #440]	; 0x1b8
   1340c:	mov	r2, r8
   13410:	mov	r0, r5
   13414:	bl	11ad4 <strncmp@plt>
   13418:	cmp	r0, #0
   1341c:	bne	132d4 <__assert_fail@plt+0x17c4>
   13420:	bl	118f4 <__ctype_b_loc@plt>
   13424:	ldrb	r3, [r5, r8]
   13428:	ldr	r1, [r0]
   1342c:	lsl	r2, r3, #1
   13430:	ldrh	r2, [r1, r2]
   13434:	lsl	r2, r2, #28
   13438:	cmp	r3, #95	; 0x5f
   1343c:	cmpne	r3, #45	; 0x2d
   13440:	moveq	r3, #1
   13444:	movne	r3, #0
   13448:	orrs	r3, r3, r2, lsr #31
   1344c:	bne	132d4 <__assert_fail@plt+0x17c4>
   13450:	cmp	sl, #0
   13454:	bne	1332c <__assert_fail@plt+0x181c>
   13458:	ldr	r3, [r4, #448]	; 0x1c0
   1345c:	ldr	r2, [sp, #12]
   13460:	cmp	r2, r3
   13464:	bne	1332c <__assert_fail@plt+0x181c>
   13468:	ldr	r8, [r4, #432]	; 0x1b0
   1346c:	cmp	r8, #0
   13470:	beq	1332c <__assert_fail@plt+0x181c>
   13474:	add	r1, r4, #176	; 0xb0
   13478:	mov	r0, r5
   1347c:	bl	11684 <strcmp@plt>
   13480:	cmp	r0, #0
   13484:	bne	1332c <__assert_fail@plt+0x181c>
   13488:	mov	r1, r8
   1348c:	ldr	r0, [sp, #20]
   13490:	bl	11684 <strcmp@plt>
   13494:	cmp	r0, #0
   13498:	bne	1332c <__assert_fail@plt+0x181c>
   1349c:	mov	r2, #15
   134a0:	ldr	r1, [sp, #28]
   134a4:	add	r0, r4, #416	; 0x1a0
   134a8:	bl	11990 <strncpy@plt>
   134ac:	ldr	r1, [r4, #452]	; 0x1c4
   134b0:	add	r1, r1, #1
   134b4:	str	r1, [r4, #452]	; 0x1c4
   134b8:	ldr	r3, [r4, #456]	; 0x1c8
   134bc:	add	r3, r9, r3, lsl #2
   134c0:	ldr	r0, [fp]
   134c4:	ldr	r2, [r4, #8]
   134c8:	ldr	r3, [r3, #376]	; 0x178
   134cc:	sub	r2, r0, r2
   134d0:	ldr	r0, [pc, #112]	; 13548 <__assert_fail@plt+0x1a38>
   134d4:	bl	11ce0 <__assert_fail@plt+0x1d0>
   134d8:	ldr	r3, [r4, #456]	; 0x1c8
   134dc:	add	r3, r9, r3, lsl #2
   134e0:	ldr	r3, [r3, #376]	; 0x178
   134e4:	ldr	r2, [r4, #8]
   134e8:	add	r3, r3, r2
   134ec:	ldr	r2, [fp]
   134f0:	cmp	r3, r2
   134f4:	bge	132d4 <__assert_fail@plt+0x17c4>
   134f8:	mov	r3, #0
   134fc:	ldr	r2, [sp, #24]
   13500:	ldr	r1, [sp, #20]
   13504:	mov	r0, r4
   13508:	bl	129e0 <__assert_fail@plt+0xed0>
   1350c:	ldr	r3, [r4, #456]	; 0x1c8
   13510:	add	r3, r3, #1
   13514:	cmp	r3, #1
   13518:	movhi	r3, #1
   1351c:	str	r3, [r4, #456]	; 0x1c8
   13520:	b	132d4 <__assert_fail@plt+0x17c4>
   13524:	andeq	ip, r1, ip, ror #31
   13528:	andeq	pc, r2, r0, lsl #25
   1352c:	ldrdeq	pc, [r2], -r4
   13530:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   13534:	andeq	pc, r2, r0, asr sl	; <UNPREDICTABLE>
   13538:			; <UNDEFINED> instruction: 0x0002f1b0
   1353c:	andeq	pc, r2, r8, lsl r3	; <UNPREDICTABLE>
   13540:	andeq	pc, r2, r4, asr sl	; <UNPREDICTABLE>
   13544:	andeq	pc, r2, r0, asr #24
   13548:	andeq	sp, r1, ip, lsl r0
   1354c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13550:	sub	sp, sp, #1040	; 0x410
   13554:	sub	sp, sp, #4
   13558:	str	r0, [sp, #4]
   1355c:	mov	r6, r1
   13560:	ldrb	r3, [r1]
   13564:	cmp	r3, #60	; 0x3c
   13568:	movne	r7, #13
   1356c:	beq	13580 <__assert_fail@plt+0x1a70>
   13570:	tst	r7, #1016	; 0x3f8
   13574:	andeq	r7, r7, #7
   13578:	orreq	r7, r7, #8
   1357c:	b	135d4 <__assert_fail@plt+0x1ac4>
   13580:	bl	118f4 <__ctype_b_loc@plt>
   13584:	ldr	r0, [r0]
   13588:	mov	r2, r6
   1358c:	mov	r7, #0
   13590:	b	135a4 <__assert_fail@plt+0x1a94>
   13594:	add	r7, r7, r7, lsl #2
   13598:	sub	r3, r3, #48	; 0x30
   1359c:	add	r7, r3, r7, lsl #1
   135a0:	mov	r2, r6
   135a4:	add	r6, r2, #1
   135a8:	ldrb	r3, [r2, #1]
   135ac:	lsl	r1, r3, #1
   135b0:	ldrh	r1, [r0, r1]
   135b4:	tst	r1, #2048	; 0x800
   135b8:	bne	13594 <__assert_fail@plt+0x1a84>
   135bc:	cmp	r3, #62	; 0x3e
   135c0:	addeq	r6, r2, #2
   135c4:	bic	r3, r7, #1020	; 0x3fc
   135c8:	bics	r3, r3, #3
   135cc:	movne	r7, #13
   135d0:	beq	13660 <__assert_fail@plt+0x1b50>
   135d4:	add	r5, sp, #12
   135d8:	add	r8, sp, #1024	; 0x400
   135dc:	add	r8, r8, #12
   135e0:	mov	sl, #94	; 0x5e
   135e4:	mov	fp, #9
   135e8:	mov	r9, #32
   135ec:	ldrb	r4, [r6], #1
   135f0:	cmp	r4, #0
   135f4:	cmpne	r5, r8
   135f8:	bcs	13678 <__assert_fail@plt+0x1b68>
   135fc:	bl	118f4 <__ctype_b_loc@plt>
   13600:	ldr	r2, [r0]
   13604:	lsl	r3, r4, #1
   13608:	ldrh	r3, [r2, r3]
   1360c:	tst	r3, #2
   13610:	strbeq	r4, [r5]
   13614:	addeq	r5, r5, #1
   13618:	beq	135ec <__assert_fail@plt+0x1adc>
   1361c:	cmp	r4, #10
   13620:	strbeq	r9, [r5]
   13624:	addeq	r5, r5, #1
   13628:	beq	135ec <__assert_fail@plt+0x1adc>
   1362c:	cmp	r4, #9
   13630:	strbeq	fp, [r5]
   13634:	addeq	r5, r5, #1
   13638:	beq	135ec <__assert_fail@plt+0x1adc>
   1363c:	cmp	r4, #126	; 0x7e
   13640:	strbgt	r4, [r5]
   13644:	addgt	r5, r5, #1
   13648:	movle	r3, r5
   1364c:	strble	sl, [r3], #2
   13650:	eorle	r4, r4, #64	; 0x40
   13654:	strble	r4, [r5, #1]
   13658:	movle	r5, r3
   1365c:	b	135ec <__assert_fail@plt+0x1adc>
   13660:	asr	r3, r7, #3
   13664:	and	r3, r3, #127	; 0x7f
   13668:	cmp	r3, #24
   1366c:	movgt	r7, #13
   13670:	bgt	135d4 <__assert_fail@plt+0x1ac4>
   13674:	b	13570 <__assert_fail@plt+0x1a60>
   13678:	mov	r3, #0
   1367c:	strb	r3, [r5]
   13680:	ldr	r3, [pc, #40]	; 136b0 <__assert_fail@plt+0x1ba0>
   13684:	ldr	r3, [r3]
   13688:	cmp	r3, #0
   1368c:	movne	r3, #2
   13690:	moveq	r3, #0
   13694:	ldr	r2, [sp, #4]
   13698:	add	r1, sp, #12
   1369c:	mov	r0, r7
   136a0:	bl	130ec <__assert_fail@plt+0x15dc>
   136a4:	add	sp, sp, #1040	; 0x410
   136a8:	add	sp, sp, #4
   136ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136b0:	andeq	pc, r2, r4, lsr ip	; <UNPREDICTABLE>
   136b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   136b8:	sub	sp, sp, #1040	; 0x410
   136bc:	sub	sp, sp, #4
   136c0:	mov	r4, r0
   136c4:	add	r3, sp, #12
   136c8:	str	r3, [sp, #4]
   136cc:	ldr	r2, [pc, #304]	; 13804 <__assert_fail@plt+0x1cf4>
   136d0:	ldm	r2, {r0, r1, r2}
   136d4:	stmia	r3!, {r0, r1}
   136d8:	strb	r2, [r3]
   136dc:	ldr	r0, [sp, #4]
   136e0:	bl	11918 <strlen@plt>
   136e4:	ldr	r3, [sp, #4]
   136e8:	add	r6, r3, r0
   136ec:	ldrb	r3, [r4]
   136f0:	cmp	r3, #0
   136f4:	beq	137f8 <__assert_fail@plt+0x1ce8>
   136f8:	mov	r9, #7
   136fc:	add	r2, sp, #16
   13700:	add	r5, r2, #1020	; 0x3fc
   13704:	mov	r8, #0
   13708:	ldr	r7, [pc, #248]	; 13808 <__assert_fail@plt+0x1cf8>
   1370c:	sub	r2, r2, #4
   13710:	str	r2, [sp, #4]
   13714:	b	13794 <__assert_fail@plt+0x1c84>
   13718:	bl	118f4 <__ctype_b_loc@plt>
   1371c:	ldr	ip, [r0]
   13720:	mov	r2, r4
   13724:	mov	r0, #0
   13728:	b	1373c <__assert_fail@plt+0x1c2c>
   1372c:	add	r0, r0, r0, lsl #2
   13730:	sub	r3, r3, #48	; 0x30
   13734:	add	r0, r3, r0, lsl #1
   13738:	mov	r2, r4
   1373c:	add	r4, r2, #1
   13740:	ldrb	r3, [r2, #1]
   13744:	lsl	r1, r3, #1
   13748:	ldrh	r1, [ip, r1]
   1374c:	tst	r1, #2048	; 0x800
   13750:	bne	1372c <__assert_fail@plt+0x1c1c>
   13754:	cmp	r3, #62	; 0x3e
   13758:	addeq	r4, r2, #2
   1375c:	bic	r2, r0, #1020	; 0x3fc
   13760:	bic	r2, r2, #3
   13764:	mov	r3, #6
   13768:	cmp	r2, #0
   1376c:	movne	r0, #2
   13770:	b	137a4 <__assert_fail@plt+0x1c94>
   13774:	mov	ip, r6
   13778:	strb	r8, [ip]
   1377c:	ldr	r2, [r7]
   13780:	ldr	r1, [sp, #4]
   13784:	bl	130ec <__assert_fail@plt+0x15dc>
   13788:	ldrb	r3, [r4]
   1378c:	cmp	r3, #0
   13790:	beq	137f8 <__assert_fail@plt+0x1ce8>
   13794:	cmp	r3, #60	; 0x3c
   13798:	movne	r3, r9
   1379c:	movne	r0, #2
   137a0:	beq	13718 <__assert_fail@plt+0x1c08>
   137a4:	ldrb	r2, [r4]
   137a8:	cmp	r2, #0
   137ac:	beq	13774 <__assert_fail@plt+0x1c64>
   137b0:	add	r4, r4, #1
   137b4:	cmp	r2, #10
   137b8:	cmpne	r6, r5
   137bc:	bcs	137f0 <__assert_fail@plt+0x1ce0>
   137c0:	mov	r1, r4
   137c4:	mov	ip, r6
   137c8:	mov	r4, r1
   137cc:	strb	r2, [ip], #1
   137d0:	ldrb	r2, [r1], #1
   137d4:	cmp	r2, #0
   137d8:	beq	13778 <__assert_fail@plt+0x1c68>
   137dc:	mov	r4, r1
   137e0:	cmp	r2, #10
   137e4:	cmpne	ip, r5
   137e8:	bcc	137c8 <__assert_fail@plt+0x1cb8>
   137ec:	b	13778 <__assert_fail@plt+0x1c68>
   137f0:	mov	ip, r6
   137f4:	b	13778 <__assert_fail@plt+0x1c68>
   137f8:	add	sp, sp, #1040	; 0x410
   137fc:	add	sp, sp, #4
   13800:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13804:	andeq	sp, r1, r4, asr #32
   13808:	andeq	pc, r2, r0, asr #24
   1380c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13810:	mov	r0, #0
   13814:	bl	1175c <time@plt>
   13818:	ldr	r3, [pc, #256]	; 13920 <__assert_fail@plt+0x1e10>
   1381c:	str	r0, [r3]
   13820:	ldr	r3, [pc, #252]	; 13924 <__assert_fail@plt+0x1e14>
   13824:	ldr	r2, [r3, #8]
   13828:	cmp	r2, #0
   1382c:	ble	13848 <__assert_fail@plt+0x1d38>
   13830:	ldr	r1, [pc, #240]	; 13928 <__assert_fail@plt+0x1e18>
   13834:	ldr	r3, [r1]
   13838:	add	r3, r3, #30
   1383c:	str	r3, [r1]
   13840:	cmp	r2, r3
   13844:	ble	13874 <__assert_fail@plt+0x1d64>
   13848:	ldr	r3, [pc, #220]	; 1392c <__assert_fail@plt+0x1e1c>
   1384c:	ldr	r4, [r3]
   13850:	cmp	r4, #0
   13854:	beq	13914 <__assert_fail@plt+0x1e04>
   13858:	ldr	r5, [pc, #196]	; 13924 <__assert_fail@plt+0x1e14>
   1385c:	ldr	r6, [pc, #188]	; 13920 <__assert_fail@plt+0x1e10>
   13860:	ldr	sl, [pc, #200]	; 13930 <__assert_fail@plt+0x1e20>
   13864:	ldr	r9, [pc, #200]	; 13934 <__assert_fail@plt+0x1e24>
   13868:	mov	r8, #0
   1386c:	mov	r7, #1
   13870:	b	138a8 <__assert_fail@plt+0x1d98>
   13874:	mov	r3, #12
   13878:	ldr	r2, [pc, #180]	; 13934 <__assert_fail@plt+0x1e24>
   1387c:	ldr	r2, [r2]
   13880:	ldr	r1, [pc, #176]	; 13938 <__assert_fail@plt+0x1e28>
   13884:	mov	r0, #6
   13888:	bl	130ec <__assert_fail@plt+0x15dc>
   1388c:	mov	r2, #0
   13890:	ldr	r3, [pc, #144]	; 13928 <__assert_fail@plt+0x1e18>
   13894:	str	r2, [r3]
   13898:	b	13848 <__assert_fail@plt+0x1d38>
   1389c:	ldr	r4, [r4]
   138a0:	cmp	r4, #0
   138a4:	beq	13914 <__assert_fail@plt+0x1e04>
   138a8:	ldr	r2, [r4, #452]	; 0x1c4
   138ac:	cmp	r2, #0
   138b0:	beq	1389c <__assert_fail@plt+0x1d8c>
   138b4:	ldr	r3, [r4, #456]	; 0x1c8
   138b8:	add	r3, r5, r3, lsl #2
   138bc:	ldr	r3, [r3, #376]	; 0x178
   138c0:	ldr	r1, [r4, #8]
   138c4:	add	r1, r3, r1
   138c8:	ldr	r0, [r6]
   138cc:	cmp	r1, r0
   138d0:	bgt	1389c <__assert_fail@plt+0x1d8c>
   138d4:	ldrsh	r1, [r4, #4]
   138d8:	add	r1, r5, r1, lsl #2
   138dc:	ldr	r1, [r1, #320]	; 0x140
   138e0:	mov	r0, sl
   138e4:	bl	11ce0 <__assert_fail@plt+0x1d0>
   138e8:	mov	r3, r8
   138ec:	mov	r2, r8
   138f0:	ldr	r1, [r9]
   138f4:	mov	r0, r4
   138f8:	bl	129e0 <__assert_fail@plt+0xed0>
   138fc:	ldr	r3, [r4, #456]	; 0x1c8
   13900:	add	r3, r3, #1
   13904:	cmp	r3, #1
   13908:	movhi	r3, r7
   1390c:	str	r3, [r4, #456]	; 0x1c8
   13910:	b	1389c <__assert_fail@plt+0x1d8c>
   13914:	mov	r0, #30
   13918:	bl	117b0 <alarm@plt>
   1391c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13920:	andeq	pc, r2, r0, lsl #25
   13924:			; <UNDEFINED> instruction: 0x0002f1b0
   13928:	andeq	pc, r2, ip, lsl #25
   1392c:	andeq	pc, r2, r0, asr sl	; <UNPREDICTABLE>
   13930:	andeq	sp, r1, ip, asr r0
   13934:	andeq	pc, r2, r0, asr #24
   13938:	andeq	sp, r1, r0, asr r0
   1393c:	push	{r4, r5, r6, r7, r8, lr}
   13940:	sub	sp, sp, #104	; 0x68
   13944:	mov	r7, r0
   13948:	ldr	r3, [pc, #328]	; 13a98 <__assert_fail@plt+0x1f88>
   1394c:	ldr	r8, [r3]
   13950:	mov	r2, #0
   13954:	str	r2, [r3]
   13958:	ldr	r3, [pc, #316]	; 13a9c <__assert_fail@plt+0x1f8c>
   1395c:	ldr	r4, [r3]
   13960:	cmp	r4, r2
   13964:	beq	139a4 <__assert_fail@plt+0x1e94>
   13968:	ldr	r6, [pc, #304]	; 13aa0 <__assert_fail@plt+0x1f90>
   1396c:	mov	r5, r2
   13970:	b	13980 <__assert_fail@plt+0x1e70>
   13974:	ldr	r4, [r4]
   13978:	cmp	r4, #0
   1397c:	beq	139a4 <__assert_fail@plt+0x1e94>
   13980:	ldr	r3, [r4, #452]	; 0x1c4
   13984:	cmp	r3, #0
   13988:	beq	13974 <__assert_fail@plt+0x1e64>
   1398c:	mov	r3, r5
   13990:	mov	r2, r5
   13994:	ldr	r1, [r6]
   13998:	mov	r0, r4
   1399c:	bl	129e0 <__assert_fail@plt+0xed0>
   139a0:	b	13974 <__assert_fail@plt+0x1e64>
   139a4:	ldr	r3, [pc, #236]	; 13a98 <__assert_fail@plt+0x1f88>
   139a8:	str	r8, [r3]
   139ac:	cmp	r7, #0
   139b0:	bne	139e8 <__assert_fail@plt+0x1ed8>
   139b4:	ldr	r3, [pc, #232]	; 13aa4 <__assert_fail@plt+0x1f94>
   139b8:	ldr	r0, [r3, #384]	; 0x180
   139bc:	cmp	r0, #0
   139c0:	blt	139c8 <__assert_fail@plt+0x1eb8>
   139c4:	bl	11af8 <close@plt>
   139c8:	ldr	r3, [pc, #216]	; 13aa8 <__assert_fail@plt+0x1f98>
   139cc:	ldr	r3, [r3]
   139d0:	cmp	r3, #0
   139d4:	beq	13a68 <__assert_fail@plt+0x1f58>
   139d8:	mov	r4, #0
   139dc:	ldr	r5, [pc, #200]	; 13aac <__assert_fail@plt+0x1f9c>
   139e0:	ldr	r6, [pc, #192]	; 13aa8 <__assert_fail@plt+0x1f98>
   139e4:	b	13a38 <__assert_fail@plt+0x1f28>
   139e8:	mov	r2, r7
   139ec:	ldr	r3, [pc, #188]	; 13ab0 <__assert_fail@plt+0x1fa0>
   139f0:	ldr	r1, [r3]
   139f4:	ldr	r0, [pc, #184]	; 13ab4 <__assert_fail@plt+0x1fa4>
   139f8:	bl	11ce0 <__assert_fail@plt+0x1d0>
   139fc:	mov	r3, r7
   13a00:	ldr	r2, [pc, #176]	; 13ab8 <__assert_fail@plt+0x1fa8>
   13a04:	mov	r1, #100	; 0x64
   13a08:	add	r0, sp, #4
   13a0c:	bl	11954 <snprintf@plt>
   13a10:	bl	11948 <__errno_location@plt>
   13a14:	mov	r3, #0
   13a18:	str	r3, [r0]
   13a1c:	add	r0, sp, #4
   13a20:	bl	127d0 <__assert_fail@plt+0xcc0>
   13a24:	b	139b4 <__assert_fail@plt+0x1ea4>
   13a28:	add	r4, r4, #1
   13a2c:	ldr	r3, [r6]
   13a30:	cmp	r3, r4
   13a34:	bls	13a68 <__assert_fail@plt+0x1f58>
   13a38:	ldr	r3, [r5]
   13a3c:	add	r3, r3, r4, lsl #3
   13a40:	ldr	r0, [r3, #4]
   13a44:	cmp	r0, #0
   13a48:	blt	13a28 <__assert_fail@plt+0x1f18>
   13a4c:	bl	11af8 <close@plt>
   13a50:	ldr	r3, [r5]
   13a54:	ldr	r0, [r3, r4, lsl #3]
   13a58:	cmp	r0, #0
   13a5c:	beq	13a28 <__assert_fail@plt+0x1f18>
   13a60:	bl	117c8 <unlink@plt>
   13a64:	b	13a28 <__assert_fail@plt+0x1f18>
   13a68:	ldr	r3, [pc, #52]	; 13aa4 <__assert_fail@plt+0x1f94>
   13a6c:	ldr	r0, [r3, #312]	; 0x138
   13a70:	cmp	r0, #0
   13a74:	blt	13a7c <__assert_fail@plt+0x1f6c>
   13a78:	bl	11af8 <close@plt>
   13a7c:	ldr	r3, [pc, #32]	; 13aa4 <__assert_fail@plt+0x1f94>
   13a80:	ldr	r0, [r3, #316]	; 0x13c
   13a84:	cmp	r0, #0
   13a88:	blt	13a90 <__assert_fail@plt+0x1f80>
   13a8c:	bl	11af8 <close@plt>
   13a90:	mov	r0, #0
   13a94:	bl	1190c <exit@plt>
   13a98:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   13a9c:	andeq	pc, r2, r0, asr sl	; <UNPREDICTABLE>
   13aa0:	andeq	pc, r2, r0, asr #24
   13aa4:			; <UNDEFINED> instruction: 0x0002f1b0
   13aa8:	andeq	pc, r2, r8, lsr #24
   13aac:	andeq	pc, r2, r8, lsl #25
   13ab0:	andeq	pc, r2, r4, asr #11
   13ab4:	andeq	sp, r1, r4, lsl #1
   13ab8:	andeq	sp, r1, r0, lsr #1
   13abc:	push	{r4, r5, r6, lr}
   13ac0:	mov	r5, r0
   13ac4:	mov	r4, r1
   13ac8:	bl	118f4 <__ctype_b_loc@plt>
   13acc:	ldrb	r3, [r5]
   13ad0:	ldr	r2, [r0]
   13ad4:	lsl	r3, r3, #1
   13ad8:	ldrh	r3, [r2, r3]
   13adc:	tst	r3, #2048	; 0x800
   13ae0:	bne	13b20 <__assert_fail@plt+0x2010>
   13ae4:	ldr	r1, [r4]
   13ae8:	cmp	r1, #0
   13aec:	beq	13b18 <__assert_fail@plt+0x2008>
   13af0:	mov	r6, r4
   13af4:	mov	r0, r5
   13af8:	bl	117f8 <strcasecmp@plt>
   13afc:	cmp	r0, #0
   13b00:	beq	13b34 <__assert_fail@plt+0x2024>
   13b04:	ldr	r1, [r4, #8]!
   13b08:	cmp	r1, #0
   13b0c:	bne	13af0 <__assert_fail@plt+0x1fe0>
   13b10:	mvn	r0, #0
   13b14:	pop	{r4, r5, r6, pc}
   13b18:	mvn	r0, #0
   13b1c:	pop	{r4, r5, r6, pc}
   13b20:	mov	r2, #10
   13b24:	mov	r1, #0
   13b28:	mov	r0, r5
   13b2c:	bl	11690 <strtol@plt>
   13b30:	pop	{r4, r5, r6, pc}
   13b34:	ldr	r0, [r4, #4]
   13b38:	pop	{r4, r5, r6, pc}
   13b3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b40:	sub	sp, sp, #1280	; 0x500
   13b44:	sub	sp, sp, #4
   13b48:	mov	r5, r0
   13b4c:	mov	fp, r1
   13b50:	ldr	r3, [pc, #1764]	; 1423c <__assert_fail@plt+0x272c>
   13b54:	ldr	r3, [r3]
   13b58:	cmp	r3, #0
   13b5c:	ldrne	r2, [pc, #1756]	; 14240 <__assert_fail@plt+0x2730>
   13b60:	ldreq	r2, [pc, #1756]	; 14244 <__assert_fail@plt+0x2734>
   13b64:	moveq	r3, r2
   13b68:	mov	r1, r0
   13b6c:	ldr	r0, [pc, #1748]	; 14248 <__assert_fail@plt+0x2738>
   13b70:	bl	11ce0 <__assert_fail@plt+0x1d0>
   13b74:	bl	11948 <__errno_location@plt>
   13b78:	mov	r1, #0
   13b7c:	str	r1, [r0]
   13b80:	mov	r2, #464	; 0x1d0
   13b84:	mov	r0, fp
   13b88:	bl	11984 <memset@plt>
   13b8c:	add	r3, fp, #12
   13b90:	str	r3, [sp, #8]
   13b94:	add	r3, fp, #11
   13b98:	add	r1, fp, #36	; 0x24
   13b9c:	mov	r2, #0
   13ba0:	strb	r2, [r3, #1]!
   13ba4:	cmp	r3, r1
   13ba8:	bne	13ba0 <__assert_fail@plt+0x2090>
   13bac:	mov	r3, #0
   13bb0:	str	r3, [fp, #460]	; 0x1cc
   13bb4:	ldr	r3, [pc, #1680]	; 1424c <__assert_fail@plt+0x273c>
   13bb8:	add	r3, r3, #208	; 0xd0
   13bbc:	str	r3, [sp, #12]
   13bc0:	b	13dc8 <__assert_fail@plt+0x22b8>
   13bc4:	cmp	r3, #42	; 0x2a
   13bc8:	beq	13c3c <__assert_fail@plt+0x212c>
   13bcc:	ldr	r1, [sp, #12]
   13bd0:	mov	r0, r9
   13bd4:	bl	13abc <__assert_fail@plt+0x1fac>
   13bd8:	cmp	r0, #0
   13bdc:	blt	13c14 <__assert_fail@plt+0x2104>
   13be0:	cmp	r0, #16
   13be4:	cmpne	r0, #7
   13be8:	bgt	13c14 <__assert_fail@plt+0x2104>
   13bec:	cmp	r0, #16
   13bf0:	beq	13c70 <__assert_fail@plt+0x2160>
   13bf4:	cmp	r6, #0
   13bf8:	movne	r7, #1
   13bfc:	lslne	r7, r7, r0
   13c00:	addeq	r0, r0, #1
   13c04:	mvneq	r7, #0
   13c08:	mvneq	r7, r7, lsl r0
   13c0c:	mov	sl, #0
   13c10:	b	13c44 <__assert_fail@plt+0x2134>
   13c14:	add	r3, sp, #20
   13c18:	str	r3, [sp, #4]
   13c1c:	mov	r3, r9
   13c20:	ldr	r2, [pc, #1576]	; 14250 <__assert_fail@plt+0x2740>
   13c24:	mov	r1, #200	; 0xc8
   13c28:	ldr	r0, [sp, #4]
   13c2c:	bl	11954 <snprintf@plt>
   13c30:	ldr	r0, [sp, #4]
   13c34:	bl	127d0 <__assert_fail@plt+0xcc0>
   13c38:	b	13db0 <__assert_fail@plt+0x22a0>
   13c3c:	mov	sl, #0
   13c40:	mov	r7, #255	; 0xff
   13c44:	cmp	r4, #0
   13c48:	moveq	r3, sl
   13c4c:	movne	r3, r7
   13c50:	cmp	r4, #0
   13c54:	movne	r7, sl
   13c58:	mov	sl, r3
   13c5c:	ldr	r3, [pc, #1512]	; 1424c <__assert_fail@plt+0x273c>
   13c60:	add	r3, r3, #24
   13c64:	str	r3, [sp, #4]
   13c68:	ldr	r9, [pc, #1508]	; 14254 <__assert_fail@plt+0x2744>
   13c6c:	b	13cf0 <__assert_fail@plt+0x21e0>
   13c70:	mov	sl, #255	; 0xff
   13c74:	mov	r7, #0
   13c78:	b	13c44 <__assert_fail@plt+0x2134>
   13c7c:	mov	r3, #0
   13c80:	strb	r3, [r6]
   13c84:	ldrb	r3, [sp, #220]	; 0xdc
   13c88:	cmp	r3, #42	; 0x2a
   13c8c:	beq	13d3c <__assert_fail@plt+0x222c>
   13c90:	ldr	r1, [sp, #4]
   13c94:	add	r0, sp, #220	; 0xdc
   13c98:	bl	13abc <__assert_fail@plt+0x1fac>
   13c9c:	cmp	r0, #192	; 0xc0
   13ca0:	bhi	13d8c <__assert_fail@plt+0x227c>
   13ca4:	asr	r0, r0, #3
   13ca8:	and	r0, r0, #127	; 0x7f
   13cac:	add	r2, fp, r0
   13cb0:	ldrb	r3, [r2, #12]
   13cb4:	bic	r3, r3, sl
   13cb8:	orr	r3, r3, r7
   13cbc:	strb	r3, [r2, #12]
   13cc0:	ldr	r3, [r9]
   13cc4:	mov	r2, #1
   13cc8:	orr	r0, r3, r2, lsl r0
   13ccc:	str	r0, [r9]
   13cd0:	ldrb	r3, [r5]
   13cd4:	cmp	r3, #32
   13cd8:	cmpne	r3, #44	; 0x2c
   13cdc:	bne	13cf0 <__assert_fail@plt+0x21e0>
   13ce0:	ldrb	r3, [r5, #1]!
   13ce4:	cmp	r3, #32
   13ce8:	cmpne	r3, #44	; 0x2c
   13cec:	beq	13ce0 <__assert_fail@plt+0x21d0>
   13cf0:	ldrb	r4, [r5]
   13cf4:	cmp	r4, #0
   13cf8:	beq	13dc4 <__assert_fail@plt+0x22b4>
   13cfc:	mov	r1, r4
   13d00:	ldr	r0, [pc, #1360]	; 14258 <__assert_fail@plt+0x2748>
   13d04:	bl	11930 <strchr@plt>
   13d08:	cmp	r0, #0
   13d0c:	bne	13dbc <__assert_fail@plt+0x22ac>
   13d10:	add	r6, sp, #220	; 0xdc
   13d14:	mov	r1, r4
   13d18:	ldr	r0, [pc, #1340]	; 1425c <__assert_fail@plt+0x274c>
   13d1c:	bl	11930 <strchr@plt>
   13d20:	cmp	r0, #0
   13d24:	bne	13c7c <__assert_fail@plt+0x216c>
   13d28:	strb	r4, [r6], #1
   13d2c:	ldrb	r4, [r5, #1]!
   13d30:	cmp	r4, #0
   13d34:	bne	13d14 <__assert_fail@plt+0x2204>
   13d38:	b	13c7c <__assert_fail@plt+0x216c>
   13d3c:	ldrb	r0, [sp, #221]	; 0xdd
   13d40:	ldr	lr, [r9]
   13d44:	ldr	r2, [sp, #8]
   13d48:	mov	r1, #0
   13d4c:	mvn	ip, sl
   13d50:	b	13d74 <__assert_fail@plt+0x2264>
   13d54:	ldrb	r3, [r2]
   13d58:	and	r3, r3, ip
   13d5c:	orr	r3, r3, r7
   13d60:	strb	r3, [r2]
   13d64:	add	r1, r1, #1
   13d68:	add	r2, r2, #1
   13d6c:	cmp	r1, #25
   13d70:	beq	13cd0 <__assert_fail@plt+0x21c0>
   13d74:	cmp	r0, #42	; 0x2a
   13d78:	bne	13d54 <__assert_fail@plt+0x2244>
   13d7c:	asr	r3, lr, r1
   13d80:	tst	r3, #1
   13d84:	bne	13d64 <__assert_fail@plt+0x2254>
   13d88:	b	13d54 <__assert_fail@plt+0x2244>
   13d8c:	add	r3, sp, #20
   13d90:	str	r3, [sp, #4]
   13d94:	add	r3, sp, #220	; 0xdc
   13d98:	ldr	r2, [pc, #1216]	; 14260 <__assert_fail@plt+0x2750>
   13d9c:	mov	r1, #200	; 0xc8
   13da0:	ldr	r0, [sp, #4]
   13da4:	bl	11954 <snprintf@plt>
   13da8:	ldr	r0, [sp, #4]
   13dac:	bl	127d0 <__assert_fail@plt+0xcc0>
   13db0:	add	sp, sp, #1280	; 0x500
   13db4:	add	sp, sp, #4
   13db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dbc:	mov	r5, r8
   13dc0:	b	13dc8 <__assert_fail@plt+0x22b8>
   13dc4:	mov	r5, r8
   13dc8:	ldrb	r3, [r5]
   13dcc:	and	r2, r3, #223	; 0xdf
   13dd0:	cmp	r3, #9
   13dd4:	cmpne	r2, #0
   13dd8:	beq	13ea4 <__assert_fail@plt+0x2394>
   13ddc:	mov	r3, r5
   13de0:	mov	r8, r3
   13de4:	ldrb	r2, [r3], #1
   13de8:	cmp	r2, #0
   13dec:	cmpne	r2, #9
   13df0:	beq	13e00 <__assert_fail@plt+0x22f0>
   13df4:	mov	r8, r3
   13df8:	cmp	r2, #46	; 0x2e
   13dfc:	bne	13de0 <__assert_fail@plt+0x22d0>
   13e00:	ldrb	r4, [r8]
   13e04:	cmp	r4, #0
   13e08:	addeq	r6, sp, #220	; 0xdc
   13e0c:	beq	13e38 <__assert_fail@plt+0x2328>
   13e10:	add	r6, sp, #220	; 0xdc
   13e14:	mov	r1, r4
   13e18:	ldr	r0, [pc, #1092]	; 14264 <__assert_fail@plt+0x2754>
   13e1c:	bl	11930 <strchr@plt>
   13e20:	cmp	r0, #0
   13e24:	bne	13e38 <__assert_fail@plt+0x2328>
   13e28:	strb	r4, [r6], #1
   13e2c:	ldrb	r4, [r8, #1]!
   13e30:	cmp	r4, #0
   13e34:	bne	13e14 <__assert_fail@plt+0x2304>
   13e38:	mov	r3, #0
   13e3c:	strb	r3, [r6]
   13e40:	ldrb	r1, [r8]
   13e44:	cmp	r1, r3
   13e48:	beq	13e68 <__assert_fail@plt+0x2358>
   13e4c:	ldr	r0, [pc, #1044]	; 14268 <__assert_fail@plt+0x2758>
   13e50:	bl	11930 <strchr@plt>
   13e54:	cmp	r0, #0
   13e58:	beq	13e68 <__assert_fail@plt+0x2358>
   13e5c:	ldrb	r1, [r8, #1]!
   13e60:	cmp	r1, #0
   13e64:	bne	13e4c <__assert_fail@plt+0x233c>
   13e68:	add	r2, sp, #220	; 0xdc
   13e6c:	mov	r6, #0
   13e70:	mov	r4, r6
   13e74:	mov	r1, #1
   13e78:	mov	r9, r2
   13e7c:	ldrb	r3, [r2], #1
   13e80:	cmp	r3, #61	; 0x3d
   13e84:	cmpne	r3, #33	; 0x21
   13e88:	bne	13bc4 <__assert_fail@plt+0x20b4>
   13e8c:	cmp	r3, #33	; 0x21
   13e90:	moveq	r4, r1
   13e94:	beq	13e78 <__assert_fail@plt+0x2368>
   13e98:	cmp	r3, #61	; 0x3d
   13e9c:	moveq	r6, #1
   13ea0:	b	13e78 <__assert_fail@plt+0x2368>
   13ea4:	cmp	r3, #32
   13ea8:	cmpne	r3, #9
   13eac:	bne	13ec0 <__assert_fail@plt+0x23b0>
   13eb0:	ldrb	r3, [r5, #1]!
   13eb4:	cmp	r3, #32
   13eb8:	cmpne	r3, #9
   13ebc:	beq	13eb0 <__assert_fail@plt+0x23a0>
   13ec0:	cmp	r3, #45	; 0x2d
   13ec4:	ldreq	r3, [fp, #460]	; 0x1cc
   13ec8:	orreq	r3, r3, #1
   13ecc:	streq	r3, [fp, #460]	; 0x1cc
   13ed0:	addeq	r5, r5, #1
   13ed4:	ldrb	r3, [r5]
   13ed8:	cmp	r3, #0
   13edc:	beq	13f28 <__assert_fail@plt+0x2418>
   13ee0:	cmp	r3, #47	; 0x2f
   13ee4:	beq	140b0 <__assert_fail@plt+0x25a0>
   13ee8:	bhi	13f38 <__assert_fail@plt+0x2428>
   13eec:	cmp	r3, #42	; 0x2a
   13ef0:	moveq	r3, #6
   13ef4:	strheq	r3, [fp, #4]
   13ef8:	bne	14134 <__assert_fail@plt+0x2624>
   13efc:	ldr	r3, [pc, #824]	; 1423c <__assert_fail@plt+0x272c>
   13f00:	ldr	r4, [r3]
   13f04:	cmp	r4, #0
   13f08:	beq	14230 <__assert_fail@plt+0x2720>
   13f0c:	mov	r0, r4
   13f10:	bl	11798 <strdup@plt>
   13f14:	str	r0, [fp, #436]	; 0x1b4
   13f18:	mov	r0, r4
   13f1c:	bl	11918 <strlen@plt>
   13f20:	str	r0, [fp, #440]	; 0x1b8
   13f24:	b	13db0 <__assert_fail@plt+0x22a0>
   13f28:	strh	r3, [fp, #4]
   13f2c:	ldr	r0, [pc, #824]	; 1426c <__assert_fail@plt+0x275c>
   13f30:	bl	127d0 <__assert_fail@plt+0xcc0>
   13f34:	b	13db0 <__assert_fail@plt+0x22a0>
   13f38:	cmp	r3, #64	; 0x40
   13f3c:	beq	13f94 <__assert_fail@plt+0x2484>
   13f40:	cmp	r3, #124	; 0x7c
   13f44:	bne	14134 <__assert_fail@plt+0x2624>
   13f48:	mov	r0, r5
   13f4c:	bl	11798 <strdup@plt>
   13f50:	str	r0, [fp, #40]	; 0x28
   13f54:	add	r5, r5, #1
   13f58:	ldr	r1, [pc, #784]	; 14270 <__assert_fail@plt+0x2760>
   13f5c:	mov	r0, r5
   13f60:	bl	1187c <open64@plt>
   13f64:	sxth	r4, r0
   13f68:	strh	r4, [fp, #6]
   13f6c:	cmp	r4, #0
   13f70:	bge	14078 <__assert_fail@plt+0x2568>
   13f74:	mov	r4, #0
   13f78:	strh	r4, [fp, #4]
   13f7c:	mov	r0, r5
   13f80:	bl	127d0 <__assert_fail@plt+0xcc0>
   13f84:	ldr	r0, [fp, #40]	; 0x28
   13f88:	bl	1a5dc <argp_parse@@Base+0xe4c>
   13f8c:	str	r4, [fp, #40]	; 0x28
   13f90:	b	13efc <__assert_fail@plt+0x23ec>
   13f94:	add	r5, r5, #1
   13f98:	mov	r0, r5
   13f9c:	bl	11798 <strdup@plt>
   13fa0:	str	r0, [fp, #40]	; 0x28
   13fa4:	mov	r2, #32
   13fa8:	mov	r1, #0
   13fac:	add	r0, sp, #1248	; 0x4e0
   13fb0:	bl	11984 <memset@plt>
   13fb4:	ldr	r3, [pc, #656]	; 1424c <__assert_fail@plt+0x273c>
   13fb8:	ldr	r3, [r3, #4]
   13fbc:	str	r3, [sp, #1252]	; 0x4e4
   13fc0:	mov	r2, #2
   13fc4:	str	r2, [sp, #1256]	; 0x4e8
   13fc8:	cmp	r3, #0
   13fcc:	moveq	r3, #32
   13fd0:	streq	r3, [sp, #1248]	; 0x4e0
   13fd4:	mov	r1, #0
   13fd8:	str	r1, [fp, #172]	; 0xac
   13fdc:	add	r6, fp, #44	; 0x2c
   13fe0:	mov	r2, #128	; 0x80
   13fe4:	mov	r0, r6
   13fe8:	bl	11984 <memset@plt>
   13fec:	add	r3, sp, #1232	; 0x4d0
   13ff0:	add	r3, r3, #12
   13ff4:	add	r2, sp, #1248	; 0x4e0
   13ff8:	ldr	r1, [pc, #628]	; 14274 <__assert_fail@plt+0x2764>
   13ffc:	ldr	r1, [r1, #44]	; 0x2c
   14000:	mov	r0, r5
   14004:	bl	11a98 <getaddrinfo@plt>
   14008:	cmp	r0, #0
   1400c:	beq	14048 <__assert_fail@plt+0x2538>
   14010:	cmn	r0, #10
   14014:	beq	14028 <__assert_fail@plt+0x2518>
   14018:	cmn	r0, #3
   1401c:	movne	r3, #0
   14020:	strhne	r3, [fp, #4]
   14024:	bne	14038 <__assert_fail@plt+0x2528>
   14028:	mov	r3, #8
   1402c:	strh	r3, [fp, #4]
   14030:	mov	r3, #10
   14034:	str	r3, [fp, #452]	; 0x1c4
   14038:	mov	r0, #0
   1403c:	bl	1175c <time@plt>
   14040:	str	r0, [fp, #8]
   14044:	b	13efc <__assert_fail@plt+0x23ec>
   14048:	mov	r3, #4
   1404c:	strh	r3, [fp, #4]
   14050:	ldr	r4, [sp, #1244]	; 0x4dc
   14054:	ldr	r3, [r4, #16]
   14058:	str	r3, [fp, #172]	; 0xac
   1405c:	ldr	r2, [r4, #16]
   14060:	ldr	r1, [r4, #20]
   14064:	mov	r0, r6
   14068:	bl	11744 <memcpy@plt>
   1406c:	mov	r0, r4
   14070:	bl	11a8c <freeaddrinfo@plt>
   14074:	b	13efc <__assert_fail@plt+0x23ec>
   14078:	ldr	r1, [pc, #504]	; 14278 <__assert_fail@plt+0x2768>
   1407c:	mov	r0, r5
   14080:	bl	11684 <strcmp@plt>
   14084:	cmp	r0, #0
   14088:	moveq	r3, #3
   1408c:	strheq	r3, [fp, #4]
   14090:	beq	13efc <__assert_fail@plt+0x23ec>
   14094:	mov	r0, r4
   14098:	bl	11ac8 <isatty@plt>
   1409c:	cmp	r0, #0
   140a0:	movne	r3, #2
   140a4:	moveq	r3, #9
   140a8:	strh	r3, [fp, #4]
   140ac:	b	13efc <__assert_fail@plt+0x23ec>
   140b0:	mov	r0, r5
   140b4:	bl	11798 <strdup@plt>
   140b8:	str	r0, [fp, #40]	; 0x28
   140bc:	mov	r2, #420	; 0x1a4
   140c0:	ldr	r1, [pc, #436]	; 1427c <__assert_fail@plt+0x276c>
   140c4:	mov	r0, r5
   140c8:	bl	1187c <open64@plt>
   140cc:	sxth	r4, r0
   140d0:	strh	r4, [fp, #6]
   140d4:	cmp	r4, #0
   140d8:	bge	140fc <__assert_fail@plt+0x25ec>
   140dc:	mov	r4, #0
   140e0:	strh	r4, [fp, #4]
   140e4:	mov	r0, r5
   140e8:	bl	127d0 <__assert_fail@plt+0xcc0>
   140ec:	ldr	r0, [fp, #40]	; 0x28
   140f0:	bl	1a5dc <argp_parse@@Base+0xe4c>
   140f4:	str	r4, [fp, #40]	; 0x28
   140f8:	b	13efc <__assert_fail@plt+0x23ec>
   140fc:	ldr	r1, [pc, #372]	; 14278 <__assert_fail@plt+0x2768>
   14100:	mov	r0, r5
   14104:	bl	11684 <strcmp@plt>
   14108:	cmp	r0, #0
   1410c:	moveq	r3, #3
   14110:	strheq	r3, [fp, #4]
   14114:	beq	13efc <__assert_fail@plt+0x23ec>
   14118:	mov	r0, r4
   1411c:	bl	11ac8 <isatty@plt>
   14120:	cmp	r0, #0
   14124:	movne	r3, #2
   14128:	moveq	r3, #1
   1412c:	strh	r3, [fp, #4]
   14130:	b	13efc <__assert_fail@plt+0x23ec>
   14134:	mov	r3, #1
   14138:	str	r3, [fp, #40]	; 0x28
   1413c:	ldrb	r3, [r5]
   14140:	cmp	r3, #0
   14144:	beq	14168 <__assert_fail@plt+0x2658>
   14148:	mov	r2, r5
   1414c:	cmp	r3, #44	; 0x2c
   14150:	ldreq	r3, [fp, #40]	; 0x28
   14154:	addeq	r3, r3, #1
   14158:	streq	r3, [fp, #40]	; 0x28
   1415c:	ldrb	r3, [r2, #1]!
   14160:	cmp	r3, #0
   14164:	bne	1414c <__assert_fail@plt+0x263c>
   14168:	ldr	r0, [fp, #40]	; 0x28
   1416c:	lsl	r0, r0, #2
   14170:	bl	1b360 <argp_parse@@Base+0x1bd0>
   14174:	str	r0, [fp, #44]	; 0x2c
   14178:	ldrb	r3, [r5]
   1417c:	cmp	r3, #0
   14180:	movne	r6, r5
   14184:	movne	r4, #0
   14188:	movne	r8, r4
   1418c:	bne	141b0 <__assert_fail@plt+0x26a0>
   14190:	mov	r3, #5
   14194:	strh	r3, [fp, #4]
   14198:	b	13efc <__assert_fail@plt+0x23ec>
   1419c:	add	r4, r4, #4
   141a0:	mov	r6, r5
   141a4:	ldrb	r3, [r5]
   141a8:	cmp	r3, #0
   141ac:	beq	14190 <__assert_fail@plt+0x2680>
   141b0:	ldrb	r3, [r5]
   141b4:	cmp	r3, #0
   141b8:	cmpne	r3, #44	; 0x2c
   141bc:	beq	141d0 <__assert_fail@plt+0x26c0>
   141c0:	ldrb	r3, [r5, #1]!
   141c4:	cmp	r3, #0
   141c8:	cmpne	r3, #44	; 0x2c
   141cc:	bne	141c0 <__assert_fail@plt+0x26b0>
   141d0:	ldr	r9, [fp, #44]	; 0x2c
   141d4:	sub	r7, r5, r6
   141d8:	add	r0, r7, #1
   141dc:	bl	1b360 <argp_parse@@Base+0x1bd0>
   141e0:	str	r0, [r9, r4]
   141e4:	ldr	r3, [fp, #44]	; 0x2c
   141e8:	ldr	r0, [r3, r4]
   141ec:	cmp	r0, #0
   141f0:	beq	1420c <__assert_fail@plt+0x26fc>
   141f4:	mov	r2, r7
   141f8:	mov	r1, r6
   141fc:	bl	11990 <strncpy@plt>
   14200:	ldr	r3, [fp, #44]	; 0x2c
   14204:	ldr	r3, [r3, r4]
   14208:	strb	r8, [r3, r7]
   1420c:	ldrb	r3, [r5]
   14210:	cmp	r3, #32
   14214:	cmpne	r3, #44	; 0x2c
   14218:	bne	1419c <__assert_fail@plt+0x268c>
   1421c:	ldrb	r3, [r5, #1]!
   14220:	cmp	r3, #32
   14224:	cmpne	r3, #44	; 0x2c
   14228:	beq	1421c <__assert_fail@plt+0x270c>
   1422c:	b	1419c <__assert_fail@plt+0x268c>
   14230:	mov	r3, #0
   14234:	str	r3, [fp, #436]	; 0x1b4
   14238:	b	13db0 <__assert_fail@plt+0x22a0>
   1423c:	andeq	pc, r2, r8, asr #24
   14240:	strheq	sp, [r1], -r8
   14244:	andeq	lr, r1, r4, ror #15
   14248:	andeq	sp, r1, r4, asr #1
   1424c:			; <UNDEFINED> instruction: 0x0002f1b0
   14250:	andeq	sp, r1, r0, ror #1
   14254:	andeq	pc, r2, ip, asr #20
   14258:	andeq	sp, r1, r0, lsr #2
   1425c:	strdeq	sp, [r1], -ip
   14260:	andeq	sp, r1, r4, lsl #2
   14264:	ldrdeq	sp, [r1], -r4
   14268:	ldrdeq	sp, [r1], -ip
   1426c:	andeq	sp, r1, r8, lsr #2
   14270:	andeq	r0, r0, r2, lsl #16
   14274:	ldrdeq	pc, [r2], -r4
   14278:	andeq	pc, r2, r8, lsl r3	; <UNPREDICTABLE>
   1427c:	andeq	r0, r0, r1, asr #8
   14280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14284:	sub	sp, sp, #12
   14288:	mov	r4, r0
   1428c:	str	r1, [sp, #4]
   14290:	ldr	r1, [pc, #880]	; 14608 <__assert_fail@plt+0x2af8>
   14294:	bl	11a68 <fopen64@plt>
   14298:	subs	r3, r0, #0
   1429c:	str	r3, [sp]
   142a0:	beq	142d8 <__assert_fail@plt+0x27c8>
   142a4:	mov	r0, #2048	; 0x800
   142a8:	bl	1b360 <argp_parse@@Base+0x1bd0>
   142ac:	subs	r7, r0, #0
   142b0:	beq	14348 <__assert_fail@plt+0x2838>
   142b4:	ldr	r4, [pc, #848]	; 1460c <__assert_fail@plt+0x2afc>
   142b8:	ldr	r0, [r4]
   142bc:	bl	1a5dc <argp_parse@@Base+0xe4c>
   142c0:	mov	r9, #0
   142c4:	str	r9, [r4]
   142c8:	mov	r4, r7
   142cc:	mov	fp, #2048	; 0x800
   142d0:	mov	sl, r9
   142d4:	b	14418 <__assert_fail@plt+0x2908>
   142d8:	mov	r1, r4
   142dc:	ldr	r0, [pc, #812]	; 14610 <__assert_fail@plt+0x2b00>
   142e0:	bl	11ce0 <__assert_fail@plt+0x1d0>
   142e4:	ldr	r3, [sp, #4]
   142e8:	ldr	r3, [r3]
   142ec:	cmp	r3, #0
   142f0:	beq	14304 <__assert_fail@plt+0x27f4>
   142f4:	mov	r0, #1
   142f8:	ldr	r3, [pc, #788]	; 14614 <__assert_fail@plt+0x2b04>
   142fc:	str	r0, [r3]
   14300:	b	14600 <__assert_fail@plt+0x2af0>
   14304:	mov	r1, #464	; 0x1d0
   14308:	mov	r0, #1
   1430c:	bl	1b310 <argp_parse@@Base+0x1b80>
   14310:	mov	r4, r0
   14314:	mov	r1, r0
   14318:	ldr	r0, [pc, #760]	; 14618 <__assert_fail@plt+0x2b08>
   1431c:	bl	13b3c <__assert_fail@plt+0x202c>
   14320:	mov	r1, #464	; 0x1d0
   14324:	mov	r0, #1
   14328:	bl	1b310 <argp_parse@@Base+0x1b80>
   1432c:	mov	r1, r0
   14330:	str	r0, [r4]
   14334:	ldr	r0, [pc, #736]	; 1461c <__assert_fail@plt+0x2b0c>
   14338:	bl	13b3c <__assert_fail@plt+0x202c>
   1433c:	ldr	r3, [sp, #4]
   14340:	str	r4, [r3]
   14344:	b	142f4 <__assert_fail@plt+0x27e4>
   14348:	ldr	r0, [pc, #720]	; 14620 <__assert_fail@plt+0x2b10>
   1434c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14350:	ldr	r0, [sp]
   14354:	bl	119c0 <fclose@plt>
   14358:	mov	r0, #0
   1435c:	b	14600 <__assert_fail@plt+0x2af0>
   14360:	mov	r1, r4
   14364:	b	14470 <__assert_fail@plt+0x2960>
   14368:	lsl	fp, fp, #1
   1436c:	mov	r1, fp
   14370:	mov	r0, r7
   14374:	bl	1b390 <argp_parse@@Base+0x1c00>
   14378:	cmp	r0, #0
   1437c:	beq	14398 <__assert_fail@plt+0x2888>
   14380:	sub	r4, r8, #1
   14384:	add	r4, r4, r5
   14388:	add	r4, r0, r4
   1438c:	mov	r7, r0
   14390:	mov	r9, sl
   14394:	b	14418 <__assert_fail@plt+0x2908>
   14398:	ldr	r0, [pc, #644]	; 14624 <__assert_fail@plt+0x2b14>
   1439c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   143a0:	ldr	r0, [sp]
   143a4:	bl	119c0 <fclose@plt>
   143a8:	mov	r0, r7
   143ac:	bl	1a5dc <argp_parse@@Base+0xe4c>
   143b0:	mov	r0, #0
   143b4:	b	14600 <__assert_fail@plt+0x2af0>
   143b8:	ldrb	r3, [r4, #1]
   143bc:	cmp	r3, #33	; 0x21
   143c0:	beq	1450c <__assert_fail@plt+0x29fc>
   143c4:	mov	r4, r7
   143c8:	mov	r9, sl
   143cc:	b	14418 <__assert_fail@plt+0x2908>
   143d0:	add	r5, r4, #1
   143d4:	ldrb	r3, [r4, #1]
   143d8:	cmp	r3, #33	; 0x21
   143dc:	beq	1450c <__assert_fail@plt+0x29fc>
   143e0:	ldrb	r3, [r5]
   143e4:	lsl	r2, r3, #1
   143e8:	ldrh	r2, [r0, r2]
   143ec:	tst	r2, #8192	; 0x2000
   143f0:	beq	14408 <__assert_fail@plt+0x28f8>
   143f4:	ldrb	r3, [r5, #1]!
   143f8:	lsl	r2, r3, #1
   143fc:	ldrh	r2, [r0, r2]
   14400:	tst	r2, #8192	; 0x2000
   14404:	bne	143f4 <__assert_fail@plt+0x28e4>
   14408:	cmp	r3, #0
   1440c:	moveq	r4, r7
   14410:	moveq	r9, sl
   14414:	bne	14514 <__assert_fail@plt+0x2a04>
   14418:	mov	r6, r4
   1441c:	sub	r8, r4, r7
   14420:	ldr	r2, [sp]
   14424:	sub	r1, fp, r8
   14428:	mov	r0, r4
   1442c:	bl	11720 <fgets@plt>
   14430:	cmp	r0, #0
   14434:	beq	145ec <__assert_fail@plt+0x2adc>
   14438:	mov	r0, r4
   1443c:	bl	11918 <strlen@plt>
   14440:	mov	r5, r0
   14444:	cmp	r9, #0
   14448:	beq	14484 <__assert_fail@plt+0x2974>
   1444c:	ldrb	r3, [r4]
   14450:	cmp	r3, #9
   14454:	cmpne	r3, #32
   14458:	bne	14360 <__assert_fail@plt+0x2850>
   1445c:	mov	r1, r4
   14460:	ldrb	r3, [r1, #1]!
   14464:	cmp	r3, #9
   14468:	cmpne	r3, #32
   1446c:	beq	14460 <__assert_fail@plt+0x2950>
   14470:	sub	r6, r1, r6
   14474:	sub	r5, r5, r6
   14478:	add	r2, r5, #1
   1447c:	mov	r0, r4
   14480:	bl	116f0 <memmove@plt>
   14484:	mov	r1, #10
   14488:	mov	r0, r4
   1448c:	bl	11930 <strchr@plt>
   14490:	cmp	r0, #0
   14494:	beq	14368 <__assert_fail@plt+0x2858>
   14498:	bl	118f4 <__ctype_b_loc@plt>
   1449c:	mov	r5, r0
   144a0:	ldr	r0, [r0]
   144a4:	mov	r3, r7
   144a8:	mov	r4, r3
   144ac:	ldrb	r2, [r3], #1
   144b0:	lsl	r1, r2, #1
   144b4:	ldrh	r1, [r0, r1]
   144b8:	tst	r1, #8192	; 0x2000
   144bc:	bne	144a8 <__assert_fail@plt+0x2998>
   144c0:	cmp	r2, #33	; 0x21
   144c4:	beq	143d0 <__assert_fail@plt+0x28c0>
   144c8:	cmp	r2, #35	; 0x23
   144cc:	beq	143b8 <__assert_fail@plt+0x28a8>
   144d0:	cmp	r2, #0
   144d4:	moveq	r4, r7
   144d8:	moveq	r9, sl
   144dc:	beq	14418 <__assert_fail@plt+0x2908>
   144e0:	mov	r0, r4
   144e4:	bl	11918 <strlen@plt>
   144e8:	add	r2, r0, #1
   144ec:	mov	r1, r4
   144f0:	mov	r0, r7
   144f4:	bl	116f0 <memmove@plt>
   144f8:	mov	r1, sl
   144fc:	mov	r0, r7
   14500:	bl	11930 <strchr@plt>
   14504:	ldr	r1, [r5]
   14508:	b	1457c <__assert_fail@plt+0x2a6c>
   1450c:	add	r5, r4, #2
   14510:	b	143e0 <__assert_fail@plt+0x28d0>
   14514:	ldr	r3, [pc, #240]	; 1460c <__assert_fail@plt+0x2afc>
   14518:	ldr	r0, [r3]
   1451c:	bl	1a5dc <argp_parse@@Base+0xe4c>
   14520:	ldr	r3, [pc, #228]	; 1460c <__assert_fail@plt+0x2afc>
   14524:	str	sl, [r3]
   14528:	ldrb	r3, [r5]
   1452c:	cmp	r3, #42	; 0x2a
   14530:	beq	145e0 <__assert_fail@plt+0x2ad0>
   14534:	mov	r1, #44	; 0x2c
   14538:	mov	r0, r5
   1453c:	bl	11930 <strchr@plt>
   14540:	cmp	r0, #0
   14544:	strbne	sl, [r0]
   14548:	ldr	r1, [pc, #216]	; 14628 <__assert_fail@plt+0x2b18>
   1454c:	mov	r0, r5
   14550:	bl	11a80 <strpbrk@plt>
   14554:	cmp	r0, #0
   14558:	strbne	sl, [r0]
   1455c:	mov	r0, r5
   14560:	bl	11798 <strdup@plt>
   14564:	ldr	r3, [pc, #160]	; 1460c <__assert_fail@plt+0x2afc>
   14568:	str	r0, [r3]
   1456c:	mov	r4, r7
   14570:	mov	r9, sl
   14574:	b	14418 <__assert_fail@plt+0x2908>
   14578:	mov	r0, r4
   1457c:	sub	r4, r0, #1
   14580:	ldrb	r3, [r0, #-1]
   14584:	lsl	r2, r3, #1
   14588:	ldrh	r2, [r1, r2]
   1458c:	tst	r2, #8192	; 0x2000
   14590:	bne	14578 <__assert_fail@plt+0x2a68>
   14594:	cmp	r3, #92	; 0x5c
   14598:	strbeq	sl, [r4]
   1459c:	moveq	r9, #1
   145a0:	beq	14418 <__assert_fail@plt+0x2908>
   145a4:	strb	sl, [r0]
   145a8:	mov	r1, #464	; 0x1d0
   145ac:	mov	r0, #1
   145b0:	bl	1b310 <argp_parse@@Base+0x1b80>
   145b4:	mov	r4, r0
   145b8:	mov	r1, r0
   145bc:	mov	r0, r7
   145c0:	bl	13b3c <__assert_fail@plt+0x202c>
   145c4:	ldr	r2, [sp, #4]
   145c8:	ldr	r3, [r2]
   145cc:	str	r3, [r4]
   145d0:	str	r4, [r2]
   145d4:	mov	r4, r7
   145d8:	mov	r9, sl
   145dc:	b	14418 <__assert_fail@plt+0x2908>
   145e0:	mov	r4, r7
   145e4:	mov	r9, sl
   145e8:	b	14418 <__assert_fail@plt+0x2908>
   145ec:	ldr	r0, [sp]
   145f0:	bl	119c0 <fclose@plt>
   145f4:	mov	r0, r7
   145f8:	bl	1a5dc <argp_parse@@Base+0xe4c>
   145fc:	mov	r0, #1
   14600:	add	sp, sp, #12
   14604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14608:	andeq	sp, r1, r8, asr pc
   1460c:	andeq	pc, r2, r8, asr #24
   14610:	andeq	sp, r1, ip, lsr r1
   14614:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   14618:	andeq	sp, r1, ip, asr #2
   1461c:	andeq	sp, r1, r0, ror #2
   14620:	andeq	sp, r1, ip, ror #2
   14624:	muleq	r1, r8, r1
   14628:	andeq	sp, r1, r0, asr #3
   1462c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14630:	sub	sp, sp, #116	; 0x74
   14634:	ldr	r0, [pc, #904]	; 149c4 <__assert_fail@plt+0x2eb4>
   14638:	bl	11ce0 <__assert_fail@plt+0x1d0>
   1463c:	mov	r2, #0
   14640:	ldr	r3, [pc, #896]	; 149c8 <__assert_fail@plt+0x2eb8>
   14644:	str	r2, [r3]
   14648:	ldr	r3, [pc, #892]	; 149cc <__assert_fail@plt+0x2ebc>
   1464c:	ldr	r4, [r3]
   14650:	cmp	r4, r2
   14654:	beq	1473c <__assert_fail@plt+0x2c2c>
   14658:	ldr	r7, [pc, #880]	; 149d0 <__assert_fail@plt+0x2ec0>
   1465c:	mov	r6, r2
   14660:	b	146ec <__assert_fail@plt+0x2bdc>
   14664:	mov	r3, r6
   14668:	mov	r2, r6
   1466c:	ldr	r1, [r7]
   14670:	mov	r0, r4
   14674:	bl	129e0 <__assert_fail@plt+0xed0>
   14678:	b	146f8 <__assert_fail@plt+0x2be8>
   1467c:	ldr	r3, [r4, #40]	; 0x28
   14680:	cmp	r3, #0
   14684:	movgt	r5, #0
   14688:	ble	146a8 <__assert_fail@plt+0x2b98>
   1468c:	ldr	r3, [r4, #44]	; 0x2c
   14690:	ldr	r0, [r3, r5, lsl #2]
   14694:	bl	1a5dc <argp_parse@@Base+0xe4c>
   14698:	add	r5, r5, #1
   1469c:	ldr	r3, [r4, #40]	; 0x28
   146a0:	cmp	r3, r5
   146a4:	bgt	1468c <__assert_fail@plt+0x2b7c>
   146a8:	ldr	r0, [r4, #44]	; 0x2c
   146ac:	bl	1a5dc <argp_parse@@Base+0xe4c>
   146b0:	b	146c4 <__assert_fail@plt+0x2bb4>
   146b4:	ldr	r0, [r4, #40]	; 0x28
   146b8:	bl	1a5dc <argp_parse@@Base+0xe4c>
   146bc:	ldrsh	r0, [r4, #6]
   146c0:	bl	11af8 <close@plt>
   146c4:	ldr	r0, [r4, #436]	; 0x1b4
   146c8:	bl	1a5dc <argp_parse@@Base+0xe4c>
   146cc:	ldr	r0, [r4, #432]	; 0x1b0
   146d0:	bl	1a5dc <argp_parse@@Base+0xe4c>
   146d4:	ldr	r5, [r4]
   146d8:	mov	r0, r4
   146dc:	bl	1a5dc <argp_parse@@Base+0xe4c>
   146e0:	mov	r4, r5
   146e4:	cmp	r5, #0
   146e8:	beq	1473c <__assert_fail@plt+0x2c2c>
   146ec:	ldr	r3, [r4, #452]	; 0x1c4
   146f0:	cmp	r3, #0
   146f4:	bne	14664 <__assert_fail@plt+0x2b54>
   146f8:	ldrsh	r3, [r4, #4]
   146fc:	sub	r3, r3, #1
   14700:	cmp	r3, #8
   14704:	ldrls	pc, [pc, r3, lsl #2]
   14708:	b	146c4 <__assert_fail@plt+0x2bb4>
   1470c:			; <UNDEFINED> instruction: 0x000146b4
   14710:			; <UNDEFINED> instruction: 0x000146b4
   14714:			; <UNDEFINED> instruction: 0x000146b4
   14718:	andeq	r4, r1, r0, lsr r7
   1471c:	andeq	r4, r1, ip, ror r6
   14720:	andeq	r4, r1, r4, asr #13
   14724:	andeq	r4, r1, r0, lsr r7
   14728:	andeq	r4, r1, r0, lsr r7
   1472c:			; <UNDEFINED> instruction: 0x000146b4
   14730:	ldr	r0, [r4, #40]	; 0x28
   14734:	bl	1a5dc <argp_parse@@Base+0xe4c>
   14738:	b	146c4 <__assert_fail@plt+0x2bb4>
   1473c:	ldr	r1, [pc, #648]	; 149cc <__assert_fail@plt+0x2ebc>
   14740:	mov	r3, #0
   14744:	str	r3, [r1]
   14748:	ldr	r2, [pc, #644]	; 149d4 <__assert_fail@plt+0x2ec4>
   1474c:	str	r3, [r2]
   14750:	ldr	r4, [pc, #640]	; 149d8 <__assert_fail@plt+0x2ec8>
   14754:	ldr	r0, [r4, #16]
   14758:	bl	14280 <__assert_fail@plt+0x2770>
   1475c:	mov	fp, r0
   14760:	ldr	r4, [r4, #20]
   14764:	mov	r0, r4
   14768:	bl	11870 <opendir@plt>
   1476c:	subs	r5, r0, #0
   14770:	beq	1478c <__assert_fail@plt+0x2c7c>
   14774:	mov	r8, #0
   14778:	mov	sl, r8
   1477c:	ldr	r6, [pc, #600]	; 149dc <__assert_fail@plt+0x2ecc>
   14780:	mov	r7, #3
   14784:	ldr	r9, [pc, #596]	; 149e0 <__assert_fail@plt+0x2ed0>
   14788:	b	147fc <__assert_fail@plt+0x2cec>
   1478c:	mov	r1, r4
   14790:	ldr	r0, [pc, #588]	; 149e4 <__assert_fail@plt+0x2ed4>
   14794:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14798:	b	147a8 <__assert_fail@plt+0x2c98>
   1479c:	ldr	r0, [pc, #580]	; 149e8 <__assert_fail@plt+0x2ed8>
   147a0:	bl	11ce0 <__assert_fail@plt+0x1d0>
   147a4:	mov	fp, #0
   147a8:	mov	r2, #1
   147ac:	ldr	r3, [pc, #532]	; 149c8 <__assert_fail@plt+0x2eb8>
   147b0:	str	r2, [r3]
   147b4:	ldr	r3, [pc, #560]	; 149ec <__assert_fail@plt+0x2edc>
   147b8:	ldr	r3, [r3]
   147bc:	cmp	r3, #0
   147c0:	beq	14968 <__assert_fail@plt+0x2e58>
   147c4:	ldr	r3, [pc, #512]	; 149cc <__assert_fail@plt+0x2ebc>
   147c8:	ldr	r6, [r3]
   147cc:	cmp	r6, #0
   147d0:	beq	14968 <__assert_fail@plt+0x2e58>
   147d4:	ldr	r8, [pc, #532]	; 149f0 <__assert_fail@plt+0x2ee0>
   147d8:	ldr	r7, [pc, #532]	; 149f4 <__assert_fail@plt+0x2ee4>
   147dc:	ldr	sl, [pc, #500]	; 149d8 <__assert_fail@plt+0x2ec8>
   147e0:	ldr	r9, [pc, #528]	; 149f8 <__assert_fail@plt+0x2ee8>
   147e4:	b	1494c <__assert_fail@plt+0x2e3c>
   147e8:	mov	r0, r9
   147ec:	bl	11ce0 <__assert_fail@plt+0x1d0>
   147f0:	b	147fc <__assert_fail@plt+0x2cec>
   147f4:	ldr	r0, [sp, #4]
   147f8:	bl	1a5dc <argp_parse@@Base+0xe4c>
   147fc:	mov	r0, r5
   14800:	bl	11a44 <readdir64@plt>
   14804:	cmp	r0, #0
   14808:	beq	14868 <__assert_fail@plt+0x2d58>
   1480c:	add	r3, r0, #19
   14810:	mov	r2, r4
   14814:	mov	r1, r6
   14818:	add	r0, sp, #4
   1481c:	bl	1199c <asprintf@plt>
   14820:	cmp	r0, #0
   14824:	blt	1479c <__assert_fail@plt+0x2c8c>
   14828:	add	r2, sp, #8
   1482c:	ldr	r1, [sp, #4]
   14830:	mov	r0, r7
   14834:	bl	11abc <__xstat64@plt>
   14838:	cmp	r0, #0
   1483c:	bne	147e8 <__assert_fail@plt+0x2cd8>
   14840:	ldr	r3, [sp, #24]
   14844:	and	r3, r3, #61440	; 0xf000
   14848:	cmp	r3, #32768	; 0x8000
   1484c:	bne	147f4 <__assert_fail@plt+0x2ce4>
   14850:	add	r8, r8, #1
   14854:	ldr	r1, [pc, #368]	; 149cc <__assert_fail@plt+0x2ebc>
   14858:	ldr	r0, [sp, #4]
   1485c:	bl	14280 <__assert_fail@plt+0x2770>
   14860:	add	sl, sl, r0
   14864:	b	147f4 <__assert_fail@plt+0x2ce4>
   14868:	mov	r0, r5
   1486c:	bl	11b04 <closedir@plt>
   14870:	cmp	r8, #0
   14874:	beq	147a8 <__assert_fail@plt+0x2c98>
   14878:	cmp	sl, #0
   1487c:	moveq	fp, #0
   14880:	b	147a8 <__assert_fail@plt+0x2c98>
   14884:	mov	r0, r8
   14888:	bl	11ce0 <__assert_fail@plt+0x1d0>
   1488c:	cmp	r4, r5
   14890:	beq	148ac <__assert_fail@plt+0x2d9c>
   14894:	ldrb	r1, [r4, #1]!
   14898:	cmp	r1, #0
   1489c:	bne	14884 <__assert_fail@plt+0x2d74>
   148a0:	mov	r0, r7
   148a4:	bl	11ce0 <__assert_fail@plt+0x1d0>
   148a8:	b	1488c <__assert_fail@plt+0x2d7c>
   148ac:	ldrsh	r3, [r6, #4]
   148b0:	add	r3, sl, r3, lsl #2
   148b4:	ldr	r1, [r3, #320]	; 0x140
   148b8:	ldr	r0, [pc, #316]	; 149fc <__assert_fail@plt+0x2eec>
   148bc:	bl	11ce0 <__assert_fail@plt+0x1d0>
   148c0:	ldrsh	r3, [r6, #4]
   148c4:	sub	r3, r3, #1
   148c8:	cmp	r3, #8
   148cc:	ldrls	pc, [pc, r3, lsl #2]
   148d0:	b	14938 <__assert_fail@plt+0x2e28>
   148d4:	andeq	r4, r1, ip, lsr #18
   148d8:	andeq	r4, r1, ip, lsr #18
   148dc:	andeq	r4, r1, ip, lsr #18
   148e0:	andeq	r4, r1, r8, asr r9
   148e4:	strdeq	r4, [r1], -r8
   148e8:	andeq	r4, r1, r8, lsr r9
   148ec:	andeq	r4, r1, r8, asr r9
   148f0:	andeq	r4, r1, r8, asr r9
   148f4:	andeq	r4, r1, ip, lsr #18
   148f8:	ldr	r3, [r6, #40]	; 0x28
   148fc:	cmp	r3, #0
   14900:	movgt	r4, #0
   14904:	ble	14938 <__assert_fail@plt+0x2e28>
   14908:	ldr	r3, [r6, #44]	; 0x2c
   1490c:	ldr	r1, [r3, r4, lsl #2]
   14910:	mov	r0, r9
   14914:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14918:	add	r4, r4, #1
   1491c:	ldr	r3, [r6, #40]	; 0x28
   14920:	cmp	r3, r4
   14924:	bgt	14908 <__assert_fail@plt+0x2df8>
   14928:	b	14938 <__assert_fail@plt+0x2e28>
   1492c:	ldr	r1, [r6, #40]	; 0x28
   14930:	ldr	r0, [pc, #200]	; 14a00 <__assert_fail@plt+0x2ef0>
   14934:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14938:	ldr	r0, [pc, #196]	; 14a04 <__assert_fail@plt+0x2ef4>
   1493c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14940:	ldr	r6, [r6]
   14944:	cmp	r6, #0
   14948:	beq	14968 <__assert_fail@plt+0x2e58>
   1494c:	add	r4, r6, #11
   14950:	add	r5, r6, #36	; 0x24
   14954:	b	14894 <__assert_fail@plt+0x2d84>
   14958:	ldr	r1, [r6, #40]	; 0x28
   1495c:	ldr	r0, [pc, #156]	; 14a00 <__assert_fail@plt+0x2ef0>
   14960:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14964:	b	14938 <__assert_fail@plt+0x2e28>
   14968:	ldr	r3, [pc, #152]	; 14a08 <__assert_fail@plt+0x2ef8>
   1496c:	ldr	r3, [r3]
   14970:	cmp	r3, #0
   14974:	mov	r3, #4
   14978:	ldr	r2, [pc, #80]	; 149d0 <__assert_fail@plt+0x2ec0>
   1497c:	ldr	r2, [r2]
   14980:	ldrne	r1, [pc, #132]	; 14a0c <__assert_fail@plt+0x2efc>
   14984:	ldreq	r1, [pc, #132]	; 14a10 <__assert_fail@plt+0x2f00>
   14988:	mov	r0, #46	; 0x2e
   1498c:	bl	130ec <__assert_fail@plt+0x15dc>
   14990:	cmp	fp, #0
   14994:	beq	149a8 <__assert_fail@plt+0x2e98>
   14998:	ldr	r0, [pc, #116]	; 14a14 <__assert_fail@plt+0x2f04>
   1499c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   149a0:	add	sp, sp, #116	; 0x74
   149a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149a8:	mov	r3, #4
   149ac:	ldr	r2, [pc, #28]	; 149d0 <__assert_fail@plt+0x2ec0>
   149b0:	ldr	r2, [r2]
   149b4:	ldr	r1, [pc, #92]	; 14a18 <__assert_fail@plt+0x2f08>
   149b8:	mov	r0, #43	; 0x2b
   149bc:	bl	130ec <__assert_fail@plt+0x15dc>
   149c0:	b	14998 <__assert_fail@plt+0x2e88>
   149c4:	andeq	sp, r1, r8, asr #3
   149c8:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   149cc:	andeq	pc, r2, r0, asr sl	; <UNPREDICTABLE>
   149d0:	andeq	pc, r2, r0, asr #24
   149d4:	andeq	pc, r2, ip, asr #20
   149d8:			; <UNDEFINED> instruction: 0x0002f1b0
   149dc:	ldrdeq	sp, [r1], -r0
   149e0:	andeq	sp, r1, ip, lsl #4
   149e4:	andeq	sp, r1, ip, lsr r1
   149e8:	ldrdeq	sp, [r1], -r8
   149ec:	andeq	pc, r2, ip, lsr #24
   149f0:	andeq	sp, r1, r8, lsr r2
   149f4:	andeq	sp, r1, r4, lsr r2
   149f8:	andeq	sp, r1, r8, asr #4
   149fc:	andeq	sp, r1, r0, asr #4
   14a00:	andeq	sp, r1, ip, lsl #26
   14a04:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   14a08:	andeq	pc, r2, r8, asr #20
   14a0c:	andeq	sp, r1, r0, asr r2
   14a10:	muleq	r1, r4, r2
   14a14:	andeq	sp, r1, r8, ror #5
   14a18:	andeq	sp, r1, r4, asr #5
   14a1c:	push	{r4, lr}
   14a20:	sub	sp, sp, #40	; 0x28
   14a24:	mov	r4, r0
   14a28:	ldr	r2, [pc, #208]	; 14b00 <__assert_fail@plt+0x2ff0>
   14a2c:	ldr	r3, [pc, #208]	; 14b04 <__assert_fail@plt+0x2ff4>
   14a30:	str	r2, [r3, #44]	; 0x2c
   14a34:	mov	r2, #32
   14a38:	mov	r1, #0
   14a3c:	add	r0, sp, #8
   14a40:	bl	11984 <memset@plt>
   14a44:	mov	r3, #2
   14a48:	str	r3, [sp, #16]
   14a4c:	mov	r3, #1
   14a50:	str	r3, [sp, #8]
   14a54:	add	r3, sp, #4
   14a58:	add	r2, sp, #8
   14a5c:	ldr	r1, [pc, #164]	; 14b08 <__assert_fail@plt+0x2ff8>
   14a60:	mov	r0, #0
   14a64:	bl	11a98 <getaddrinfo@plt>
   14a68:	cmp	r0, #0
   14a6c:	beq	14ad0 <__assert_fail@plt+0x2fc0>
   14a70:	ldr	r3, [pc, #140]	; 14b04 <__assert_fail@plt+0x2ff4>
   14a74:	str	r4, [r3, #48]	; 0x30
   14a78:	cmp	r4, #0
   14a7c:	beq	14ae8 <__assert_fail@plt+0x2fd8>
   14a80:	mov	r2, #32
   14a84:	mov	r1, #0
   14a88:	add	r0, sp, #8
   14a8c:	bl	11984 <memset@plt>
   14a90:	mov	r3, #2
   14a94:	str	r3, [sp, #16]
   14a98:	mov	r3, #1
   14a9c:	str	r3, [sp, #8]
   14aa0:	add	r3, sp, #4
   14aa4:	add	r2, sp, #8
   14aa8:	mov	r1, r4
   14aac:	mov	r0, #0
   14ab0:	bl	11a98 <getaddrinfo@plt>
   14ab4:	cmp	r0, #0
   14ab8:	beq	14af4 <__assert_fail@plt+0x2fe4>
   14abc:	mov	r2, #0
   14ac0:	ldr	r3, [pc, #60]	; 14b04 <__assert_fail@plt+0x2ff4>
   14ac4:	str	r2, [r3, #48]	; 0x30
   14ac8:	add	sp, sp, #40	; 0x28
   14acc:	pop	{r4, pc}
   14ad0:	ldr	r2, [pc, #48]	; 14b08 <__assert_fail@plt+0x2ff8>
   14ad4:	ldr	r3, [pc, #40]	; 14b04 <__assert_fail@plt+0x2ff4>
   14ad8:	str	r2, [r3, #44]	; 0x2c
   14adc:	ldr	r0, [sp, #4]
   14ae0:	bl	11a8c <freeaddrinfo@plt>
   14ae4:	b	14a70 <__assert_fail@plt+0x2f60>
   14ae8:	ldr	r2, [r3, #44]	; 0x2c
   14aec:	str	r2, [r3, #48]	; 0x30
   14af0:	b	14ac8 <__assert_fail@plt+0x2fb8>
   14af4:	ldr	r0, [sp, #4]
   14af8:	bl	11a8c <freeaddrinfo@plt>
   14afc:	b	14ac8 <__assert_fail@plt+0x2fb8>
   14b00:	strdeq	sp, [r1], -ip
   14b04:	ldrdeq	pc, [r2], -r4
   14b08:	andeq	sp, r1, r0, lsl #6
   14b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b10:	sub	sp, sp, #3360	; 0xd20
   14b14:	sub	sp, sp, #12
   14b18:	mov	r5, r0
   14b1c:	mov	r4, r1
   14b20:	ldr	r0, [r1]
   14b24:	bl	1a6ec <argp_parse@@Base+0xf5c>
   14b28:	ldr	r0, [pc, #3048]	; 15718 <__assert_fail@plt+0x3c08>
   14b2c:	bl	11c58 <__assert_fail@plt+0x148>
   14b30:	ldr	r2, [pc, #3044]	; 1571c <__assert_fail@plt+0x3c0c>
   14b34:	ldr	r3, [pc, #3044]	; 15720 <__assert_fail@plt+0x3c10>
   14b38:	str	r2, [r3]
   14b3c:	ldr	r1, [pc, #3040]	; 15724 <__assert_fail@plt+0x3c14>
   14b40:	ldr	r0, [pc, #3040]	; 15728 <__assert_fail@plt+0x3c18>
   14b44:	bl	1a29c <argp_parse@@Base+0xb0c>
   14b48:	mov	r3, #0
   14b4c:	str	r3, [sp, #4]
   14b50:	str	r3, [sp]
   14b54:	mov	r2, r4
   14b58:	mov	r1, r5
   14b5c:	ldr	r0, [pc, #3016]	; 1572c <__assert_fail@plt+0x3c1c>
   14b60:	bl	19790 <argp_parse@@Base>
   14b64:	ldr	r3, [pc, #3012]	; 15730 <__assert_fail@plt+0x3c20>
   14b68:	ldr	r0, [r3, #12]
   14b6c:	bl	14a1c <__assert_fail@plt+0x2f0c>
   14b70:	ldr	r3, [pc, #3004]	; 15734 <__assert_fail@plt+0x3c24>
   14b74:	ldr	r3, [r3]
   14b78:	cmp	r3, #0
   14b7c:	bne	14fb8 <__assert_fail@plt+0x34a8>
   14b80:	ldr	r1, [pc, #2992]	; 15738 <__assert_fail@plt+0x3c28>
   14b84:	mov	r0, #15
   14b88:	bl	11750 <signal@plt>
   14b8c:	mov	r2, #30
   14b90:	mov	r1, #0
   14b94:	mov	r0, r1
   14b98:	bl	1583c <__assert_fail@plt+0x3d2c>
   14b9c:	subs	fp, r0, #0
   14ba0:	bge	14bb8 <__assert_fail@plt+0x30a8>
   14ba4:	bl	11948 <__errno_location@plt>
   14ba8:	ldr	r2, [pc, #2956]	; 1573c <__assert_fail@plt+0x3c2c>
   14bac:	ldr	r1, [r0]
   14bb0:	mov	r0, #1
   14bb4:	bl	11858 <error@plt>
   14bb8:	bl	159cc <daemon@@Base+0x20>
   14bbc:	ldr	r3, [pc, #2940]	; 15740 <__assert_fail@plt+0x3c30>
   14bc0:	str	r0, [r3]
   14bc4:	cmp	r0, #0
   14bc8:	bne	14be0 <__assert_fail@plt+0x30d0>
   14bcc:	bl	11948 <__errno_location@plt>
   14bd0:	ldr	r2, [pc, #2924]	; 15744 <__assert_fail@plt+0x3c34>
   14bd4:	ldr	r1, [r0]
   14bd8:	mov	r0, #1
   14bdc:	bl	11858 <error@plt>
   14be0:	ldr	r3, [pc, #2904]	; 15740 <__assert_fail@plt+0x3c30>
   14be4:	ldr	r4, [r3]
   14be8:	mov	r1, #46	; 0x2e
   14bec:	mov	r0, r4
   14bf0:	bl	11930 <strchr@plt>
   14bf4:	subs	r3, r0, #0
   14bf8:	beq	14ff0 <__assert_fail@plt+0x34e0>
   14bfc:	mov	r2, #0
   14c00:	strb	r2, [r3], #1
   14c04:	ldr	r2, [pc, #2876]	; 15748 <__assert_fail@plt+0x3c38>
   14c08:	str	r3, [r2]
   14c0c:	ldr	r4, [pc, #2872]	; 1574c <__assert_fail@plt+0x3c3c>
   14c10:	mov	r3, #3
   14c14:	strh	r3, [r4, #4]
   14c18:	ldr	r0, [pc, #2864]	; 15750 <__assert_fail@plt+0x3c40>
   14c1c:	bl	11798 <strdup@plt>
   14c20:	str	r0, [r4, #40]	; 0x28
   14c24:	ldr	r1, [pc, #2856]	; 15754 <__assert_fail@plt+0x3c44>
   14c28:	mov	r0, #15
   14c2c:	bl	11750 <signal@plt>
   14c30:	ldr	r3, [pc, #2812]	; 15734 <__assert_fail@plt+0x3c24>
   14c34:	ldr	r1, [r3]
   14c38:	ldr	r3, [pc, #2836]	; 15754 <__assert_fail@plt+0x3c44>
   14c3c:	cmp	r1, #0
   14c40:	movne	r1, r3
   14c44:	moveq	r1, #1
   14c48:	mov	r0, #2
   14c4c:	bl	11750 <signal@plt>
   14c50:	ldr	r3, [pc, #2780]	; 15734 <__assert_fail@plt+0x3c24>
   14c54:	ldr	r1, [r3]
   14c58:	ldr	r3, [pc, #2804]	; 15754 <__assert_fail@plt+0x3c44>
   14c5c:	cmp	r1, #0
   14c60:	movne	r1, r3
   14c64:	moveq	r1, #1
   14c68:	mov	r0, #3
   14c6c:	bl	11750 <signal@plt>
   14c70:	mov	r3, #268435456	; 0x10000000
   14c74:	str	r3, [sp, #1304]	; 0x518
   14c78:	add	r0, sp, #1168	; 0x490
   14c7c:	add	r0, r0, #8
   14c80:	bl	119fc <sigemptyset@plt>
   14c84:	ldr	r3, [pc, #2764]	; 15758 <__assert_fail@plt+0x3c48>
   14c88:	str	r3, [sp, #1172]	; 0x494
   14c8c:	mov	r2, #0
   14c90:	add	r1, sp, #1168	; 0x490
   14c94:	add	r1, r1, #4
   14c98:	mov	r0, #14
   14c9c:	bl	1181c <sigaction@plt>
   14ca0:	ldr	r3, [pc, #2700]	; 15734 <__assert_fail@plt+0x3c24>
   14ca4:	ldr	r2, [r3]
   14ca8:	ldr	r3, [pc, #2732]	; 1575c <__assert_fail@plt+0x3c4c>
   14cac:	cmp	r2, #0
   14cb0:	moveq	r3, #1
   14cb4:	str	r3, [sp, #1172]	; 0x494
   14cb8:	mov	r2, #0
   14cbc:	add	r3, sp, #1168	; 0x490
   14cc0:	add	r3, r3, #8
   14cc4:	sub	r1, r3, #4
   14cc8:	mov	r0, #10
   14ccc:	bl	1181c <sigaction@plt>
   14cd0:	mov	r0, #30
   14cd4:	bl	117b0 <alarm@plt>
   14cd8:	ldr	r3, [pc, #2688]	; 15760 <__assert_fail@plt+0x3c50>
   14cdc:	ldr	r0, [r3]
   14ce0:	add	r0, r0, #3
   14ce4:	lsl	r0, r0, #3
   14ce8:	bl	1b360 <argp_parse@@Base+0x1bd0>
   14cec:	subs	r3, r0, #0
   14cf0:	str	r3, [sp, #20]
   14cf4:	bne	14d0c <__assert_fail@plt+0x31fc>
   14cf8:	bl	11948 <__errno_location@plt>
   14cfc:	ldr	r2, [pc, #2656]	; 15764 <__assert_fail@plt+0x3c54>
   14d00:	ldr	r1, [r0]
   14d04:	mov	r0, #1
   14d08:	bl	11858 <error@plt>
   14d0c:	mov	r0, #0
   14d10:	bl	1462c <__assert_fail@plt+0x2b1c>
   14d14:	ldr	r3, [pc, #2636]	; 15768 <__assert_fail@plt+0x3c58>
   14d18:	ldr	r3, [r3]
   14d1c:	cmp	r3, #0
   14d20:	movne	sl, #0
   14d24:	bne	14d68 <__assert_fail@plt+0x3258>
   14d28:	mov	r2, #0
   14d2c:	mov	r1, r2
   14d30:	ldr	r0, [pc, #2612]	; 1576c <__assert_fail@plt+0x3c5c>
   14d34:	bl	1187c <open64@plt>
   14d38:	ldr	r3, [pc, #2608]	; 15770 <__assert_fail@plt+0x3c60>
   14d3c:	str	r0, [r3, #384]	; 0x180
   14d40:	cmp	r0, #0
   14d44:	blt	15090 <__assert_fail@plt+0x3580>
   14d48:	ldr	r2, [sp, #20]
   14d4c:	str	r0, [r2]
   14d50:	mov	r3, #3
   14d54:	strh	r3, [r2, #4]
   14d58:	ldr	r1, [pc, #2572]	; 1576c <__assert_fail@plt+0x3c5c>
   14d5c:	ldr	r0, [pc, #2576]	; 15774 <__assert_fail@plt+0x3c64>
   14d60:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14d64:	mov	sl, #1
   14d68:	ldr	r3, [pc, #2568]	; 15778 <__assert_fail@plt+0x3c68>
   14d6c:	ldr	r3, [r3]
   14d70:	cmp	r3, #0
   14d74:	bne	14e34 <__assert_fail@plt+0x3324>
   14d78:	ldr	r3, [pc, #2528]	; 15760 <__assert_fail@plt+0x3c50>
   14d7c:	ldr	r3, [r3]
   14d80:	cmp	r3, #0
   14d84:	beq	14e34 <__assert_fail@plt+0x3324>
   14d88:	mov	r6, #0
   14d8c:	ldr	r8, [pc, #2536]	; 1577c <__assert_fail@plt+0x3c6c>
   14d90:	lsl	r7, r6, #3
   14d94:	ldr	r3, [r8]
   14d98:	add	r9, r3, r7
   14d9c:	ldr	r4, [r3, r6, lsl #3]
   14da0:	ldrb	r3, [r4]
   14da4:	cmp	r3, #0
   14da8:	beq	15180 <__assert_fail@plt+0x3670>
   14dac:	mov	r0, r4
   14db0:	bl	11918 <strlen@plt>
   14db4:	cmp	r0, #107	; 0x6b
   14db8:	bls	150b4 <__assert_fail@plt+0x35a4>
   14dbc:	add	r3, sp, #144	; 0x90
   14dc0:	str	r3, [sp, #8]
   14dc4:	mov	r3, r4
   14dc8:	ldr	r2, [pc, #2480]	; 15780 <__assert_fail@plt+0x3c70>
   14dcc:	ldr	r1, [pc, #2480]	; 15784 <__assert_fail@plt+0x3c74>
   14dd0:	ldr	r0, [sp, #8]
   14dd4:	bl	11954 <snprintf@plt>
   14dd8:	ldr	r0, [sp, #8]
   14ddc:	bl	127d0 <__assert_fail@plt+0xcc0>
   14de0:	mvn	r5, #0
   14de4:	str	r5, [r9, #4]
   14de8:	ldr	r3, [r8]
   14dec:	add	r2, r3, r7
   14df0:	ldr	r2, [r2, #4]
   14df4:	cmp	r2, #0
   14df8:	blt	15188 <__assert_fail@plt+0x3678>
   14dfc:	ldr	r0, [sp, #20]
   14e00:	add	r1, r0, sl, lsl #3
   14e04:	str	r2, [r0, sl, lsl #3]
   14e08:	mov	r2, #3
   14e0c:	strh	r2, [r1, #4]
   14e10:	add	sl, sl, #1
   14e14:	ldr	r1, [r3, r7]
   14e18:	ldr	r0, [pc, #2408]	; 15788 <__assert_fail@plt+0x3c78>
   14e1c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14e20:	add	r6, r6, #1
   14e24:	ldr	r3, [pc, #2356]	; 15760 <__assert_fail@plt+0x3c50>
   14e28:	ldr	r3, [r3]
   14e2c:	cmp	r3, r6
   14e30:	bhi	14d90 <__assert_fail@plt+0x3280>
   14e34:	ldr	r3, [pc, #2384]	; 1578c <__assert_fail@plt+0x3c7c>
   14e38:	ldr	r3, [r3]
   14e3c:	cmp	r3, #0
   14e40:	beq	14f08 <__assert_fail@plt+0x33f8>
   14e44:	ldr	r3, [pc, #2340]	; 15770 <__assert_fail@plt+0x3c60>
   14e48:	ldr	r5, [r3, #4]
   14e4c:	mvn	r2, #0
   14e50:	str	r2, [r3, #316]	; 0x13c
   14e54:	str	r2, [r3, #312]	; 0x138
   14e58:	ldr	r3, [pc, #2256]	; 15730 <__assert_fail@plt+0x3c20>
   14e5c:	ldr	r4, [r3, #48]	; 0x30
   14e60:	cmp	r4, #0
   14e64:	bne	151ac <__assert_fail@plt+0x369c>
   14e68:	ldr	r0, [pc, #2336]	; 15790 <__assert_fail@plt+0x3c80>
   14e6c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14e70:	ldr	r3, [pc, #2296]	; 15770 <__assert_fail@plt+0x3c60>
   14e74:	ldr	r3, [r3, #312]	; 0x138
   14e78:	cmp	r3, #0
   14e7c:	blt	15704 <__assert_fail@plt+0x3bf4>
   14e80:	ldr	r1, [sp, #20]
   14e84:	add	r2, r1, sl, lsl #3
   14e88:	str	r3, [r1, sl, lsl #3]
   14e8c:	mov	r3, #3
   14e90:	strh	r3, [r2, #4]
   14e94:	add	sl, sl, #1
   14e98:	ldr	r0, [pc, #2292]	; 15794 <__assert_fail@plt+0x3c84>
   14e9c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14ea0:	ldr	r3, [pc, #2248]	; 15770 <__assert_fail@plt+0x3c60>
   14ea4:	ldr	r3, [r3, #316]	; 0x13c
   14ea8:	cmp	r3, #0
   14eac:	blt	15648 <__assert_fail@plt+0x3b38>
   14eb0:	ldr	r1, [sp, #20]
   14eb4:	add	r2, r1, sl, lsl #3
   14eb8:	str	r3, [r1, sl, lsl #3]
   14ebc:	mov	r3, #3
   14ec0:	strh	r3, [r2, #4]
   14ec4:	add	sl, sl, #1
   14ec8:	ldr	r0, [pc, #2248]	; 15798 <__assert_fail@plt+0x3c88>
   14ecc:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14ed0:	ldr	r3, [pc, #2200]	; 15770 <__assert_fail@plt+0x3c60>
   14ed4:	ldr	r3, [r3, #312]	; 0x138
   14ed8:	cmp	r3, #0
   14edc:	bge	14f08 <__assert_fail@plt+0x33f8>
   14ee0:	ldr	r3, [pc, #2184]	; 15770 <__assert_fail@plt+0x3c60>
   14ee4:	ldr	r3, [r3, #316]	; 0x13c
   14ee8:	cmp	r3, #0
   14eec:	bge	14f08 <__assert_fail@plt+0x33f8>
   14ef0:	bl	11948 <__errno_location@plt>
   14ef4:	ldr	r0, [r0]
   14ef8:	bl	118b8 <strerror@plt>
   14efc:	mov	r1, r0
   14f00:	ldr	r0, [pc, #2196]	; 1579c <__assert_fail@plt+0x3c8c>
   14f04:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14f08:	ldr	r1, [pc, #2192]	; 157a0 <__assert_fail@plt+0x3c90>
   14f0c:	ldr	r3, [pc, #2140]	; 15770 <__assert_fail@plt+0x3c60>
   14f10:	ldr	r0, [r3, #12]
   14f14:	bl	11a68 <fopen64@plt>
   14f18:	subs	r4, r0, #0
   14f1c:	beq	14f3c <__assert_fail@plt+0x342c>
   14f20:	bl	11900 <getpid@plt>
   14f24:	mov	r2, r0
   14f28:	ldr	r1, [pc, #2164]	; 157a4 <__assert_fail@plt+0x3c94>
   14f2c:	mov	r0, r4
   14f30:	bl	1193c <fprintf@plt>
   14f34:	mov	r0, r4
   14f38:	bl	119c0 <fclose@plt>
   14f3c:	ldr	r0, [pc, #2148]	; 157a8 <__assert_fail@plt+0x3c98>
   14f40:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14f44:	ldr	r3, [pc, #2144]	; 157ac <__assert_fail@plt+0x3c9c>
   14f48:	str	r3, [sp, #1172]	; 0x494
   14f4c:	mov	r2, #0
   14f50:	add	r3, sp, #1168	; 0x490
   14f54:	add	r3, r3, #8
   14f58:	sub	r1, r3, #4
   14f5c:	mov	r0, #1
   14f60:	bl	1181c <sigaction@plt>
   14f64:	ldr	r3, [pc, #1992]	; 15734 <__assert_fail@plt+0x3c24>
   14f68:	ldr	r3, [r3]
   14f6c:	cmp	r3, #0
   14f70:	beq	14f98 <__assert_fail@plt+0x3488>
   14f74:	ldr	r4, [pc, #1972]	; 15730 <__assert_fail@plt+0x3c20>
   14f78:	mov	r3, #1
   14f7c:	str	r3, [r4, #4]
   14f80:	bl	11900 <getpid@plt>
   14f84:	mov	r1, r0
   14f88:	ldr	r0, [pc, #2080]	; 157b0 <__assert_fail@plt+0x3ca0>
   14f8c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   14f90:	mov	r3, #0
   14f94:	str	r3, [r4, #4]
   14f98:	cmp	fp, #0
   14f9c:	beq	14fac <__assert_fail@plt+0x349c>
   14fa0:	mov	r1, #15
   14fa4:	mov	r0, fp
   14fa8:	bl	118e8 <kill@plt>
   14fac:	mov	r8, #0
   14fb0:	ldr	fp, [pc, #1976]	; 15770 <__assert_fail@plt+0x3c60>
   14fb4:	b	155f8 <__assert_fail@plt+0x3ae8>
   14fb8:	ldr	r3, [pc, #2036]	; 157b4 <__assert_fail@plt+0x3ca4>
   14fbc:	ldr	r3, [r3]
   14fc0:	cmp	r3, #0
   14fc4:	movne	r2, #1
   14fc8:	ldrne	r3, [pc, #1888]	; 15730 <__assert_fail@plt+0x3c20>
   14fcc:	strne	r2, [r3, #4]
   14fd0:	mov	r3, #0
   14fd4:	mov	r2, #1
   14fd8:	mov	r1, r3
   14fdc:	ldr	r0, [pc, #2004]	; 157b8 <__assert_fail@plt+0x3ca8>
   14fe0:	ldr	r0, [r0]
   14fe4:	bl	11978 <setvbuf@plt>
   14fe8:	mov	fp, #0
   14fec:	b	14bb8 <__assert_fail@plt+0x30a8>
   14ff0:	add	r3, sp, #144	; 0x90
   14ff4:	str	r3, [sp, #8]
   14ff8:	mov	r2, #32
   14ffc:	mov	r1, #0
   15000:	mov	r0, r3
   15004:	bl	11984 <memset@plt>
   15008:	mov	r3, #2
   1500c:	str	r3, [sp, #144]	; 0x90
   15010:	add	r3, sp, #32
   15014:	ldr	r2, [sp, #8]
   15018:	mov	r1, #0
   1501c:	mov	r0, r4
   15020:	bl	11a98 <getaddrinfo@plt>
   15024:	cmp	r0, #0
   15028:	bne	1506c <__assert_fail@plt+0x355c>
   1502c:	ldr	r5, [pc, #1804]	; 15740 <__assert_fail@plt+0x3c30>
   15030:	ldr	r0, [r5]
   15034:	bl	1a5dc <argp_parse@@Base+0xe4c>
   15038:	ldr	r4, [sp, #32]
   1503c:	ldr	r0, [r4, #24]
   15040:	bl	11798 <strdup@plt>
   15044:	str	r0, [r5]
   15048:	mov	r1, #46	; 0x2e
   1504c:	bl	11930 <strchr@plt>
   15050:	subs	r3, r0, #0
   15054:	movne	r2, #0
   15058:	strbne	r2, [r3], #1
   1505c:	ldrne	r2, [pc, #1764]	; 15748 <__assert_fail@plt+0x3c38>
   15060:	strne	r3, [r2]
   15064:	mov	r0, r4
   15068:	bl	11a8c <freeaddrinfo@plt>
   1506c:	ldr	r3, [pc, #1748]	; 15748 <__assert_fail@plt+0x3c38>
   15070:	ldr	r3, [r3]
   15074:	cmp	r3, #0
   15078:	bne	14c0c <__assert_fail@plt+0x30fc>
   1507c:	ldr	r0, [pc, #1848]	; 157bc <__assert_fail@plt+0x3cac>
   15080:	bl	11798 <strdup@plt>
   15084:	ldr	r3, [pc, #1724]	; 15748 <__assert_fail@plt+0x3c38>
   15088:	str	r0, [r3]
   1508c:	b	14c0c <__assert_fail@plt+0x30fc>
   15090:	bl	11948 <__errno_location@plt>
   15094:	ldr	r0, [r0]
   15098:	bl	118b8 <strerror@plt>
   1509c:	mov	r2, r0
   150a0:	ldr	r1, [pc, #1732]	; 1576c <__assert_fail@plt+0x3c5c>
   150a4:	ldr	r0, [pc, #1812]	; 157c0 <__assert_fail@plt+0x3cb0>
   150a8:	bl	11ce0 <__assert_fail@plt+0x1d0>
   150ac:	mov	sl, #0
   150b0:	b	14d68 <__assert_fail@plt+0x3258>
   150b4:	mov	r0, r4
   150b8:	bl	117c8 <unlink@plt>
   150bc:	mov	r2, #110	; 0x6e
   150c0:	mov	r1, #0
   150c4:	add	r0, sp, #32
   150c8:	bl	11984 <memset@plt>
   150cc:	mov	r5, #1
   150d0:	strh	r5, [sp, #32]
   150d4:	mov	r2, #107	; 0x6b
   150d8:	mov	r1, r4
   150dc:	add	r0, sp, #34	; 0x22
   150e0:	bl	11990 <strncpy@plt>
   150e4:	mov	r2, #0
   150e8:	mov	r1, #2
   150ec:	mov	r0, r5
   150f0:	bl	11aa4 <socket@plt>
   150f4:	subs	r5, r0, #0
   150f8:	blt	15130 <__assert_fail@plt+0x3620>
   150fc:	add	r0, sp, #34	; 0x22
   15100:	bl	11918 <strlen@plt>
   15104:	add	r2, r0, #2
   15108:	add	r1, sp, #32
   1510c:	mov	r0, r5
   15110:	bl	1196c <bind@plt>
   15114:	cmp	r0, #0
   15118:	blt	15130 <__assert_fail@plt+0x3620>
   1511c:	ldr	r1, [pc, #1696]	; 157c4 <__assert_fail@plt+0x3cb4>
   15120:	mov	r0, r4
   15124:	bl	11ab0 <chmod@plt>
   15128:	cmp	r0, #0
   1512c:	bge	14de4 <__assert_fail@plt+0x32d4>
   15130:	add	r3, sp, #144	; 0x90
   15134:	str	r3, [sp, #8]
   15138:	mov	r3, r4
   1513c:	ldr	r2, [pc, #1668]	; 157c8 <__assert_fail@plt+0x3cb8>
   15140:	ldr	r1, [pc, #1596]	; 15784 <__assert_fail@plt+0x3c74>
   15144:	ldr	r0, [sp, #8]
   15148:	bl	11954 <snprintf@plt>
   1514c:	ldr	r0, [sp, #8]
   15150:	bl	127d0 <__assert_fail@plt+0xcc0>
   15154:	bl	11948 <__errno_location@plt>
   15158:	ldr	r0, [r0]
   1515c:	bl	118b8 <strerror@plt>
   15160:	mov	r2, r0
   15164:	mov	r1, r4
   15168:	ldr	r0, [pc, #1628]	; 157cc <__assert_fail@plt+0x3cbc>
   1516c:	bl	11ce0 <__assert_fail@plt+0x1d0>
   15170:	mov	r0, r5
   15174:	bl	11af8 <close@plt>
   15178:	mvn	r5, #0
   1517c:	b	14de4 <__assert_fail@plt+0x32d4>
   15180:	mvn	r5, #0
   15184:	b	14de4 <__assert_fail@plt+0x32d4>
   15188:	ldr	r4, [r3, r7]
   1518c:	bl	11948 <__errno_location@plt>
   15190:	ldr	r0, [r0]
   15194:	bl	118b8 <strerror@plt>
   15198:	mov	r2, r0
   1519c:	mov	r1, r4
   151a0:	ldr	r0, [pc, #1560]	; 157c0 <__assert_fail@plt+0x3cb0>
   151a4:	bl	11ce0 <__assert_fail@plt+0x1d0>
   151a8:	b	14e20 <__assert_fail@plt+0x3310>
   151ac:	add	r3, sp, #144	; 0x90
   151b0:	str	r3, [sp, #8]
   151b4:	mov	r2, #32
   151b8:	mov	r1, #0
   151bc:	mov	r0, r3
   151c0:	bl	11984 <memset@plt>
   151c4:	str	r5, [sp, #148]	; 0x94
   151c8:	mov	r3, #2
   151cc:	str	r3, [sp, #152]	; 0x98
   151d0:	mov	r3, #1
   151d4:	str	r3, [sp, #144]	; 0x90
   151d8:	add	r3, sp, #28
   151dc:	ldr	r2, [sp, #8]
   151e0:	mov	r1, r4
   151e4:	ldr	r0, [pc, #1348]	; 15730 <__assert_fail@plt+0x3c20>
   151e8:	ldr	r0, [r0, #8]
   151ec:	bl	11a98 <getaddrinfo@plt>
   151f0:	cmp	r0, #0
   151f4:	beq	15204 <__assert_fail@plt+0x36f4>
   151f8:	ldr	r0, [pc, #1488]	; 157d0 <__assert_fail@plt+0x3cc0>
   151fc:	bl	127d0 <__assert_fail@plt+0xcc0>
   15200:	b	14e70 <__assert_fail@plt+0x3360>
   15204:	ldr	r4, [sp, #28]
   15208:	cmp	r4, #0
   1520c:	beq	152b4 <__assert_fail@plt+0x37a4>
   15210:	mov	r9, #1
   15214:	add	r7, sp, #32
   15218:	mov	r8, #4
   1521c:	ldr	r6, [pc, #1356]	; 15770 <__assert_fail@plt+0x3c60>
   15220:	str	r9, [sp, #32]
   15224:	ldr	r2, [r4, #12]
   15228:	ldr	r1, [r4, #8]
   1522c:	ldr	r0, [r4, #4]
   15230:	bl	11aa4 <socket@plt>
   15234:	subs	r5, r0, #0
   15238:	blt	152a8 <__assert_fail@plt+0x3798>
   1523c:	str	r8, [sp]
   15240:	mov	r3, r7
   15244:	mov	r2, #2
   15248:	mov	r1, r9
   1524c:	mov	r0, r5
   15250:	bl	1169c <setsockopt@plt>
   15254:	cmp	r0, #0
   15258:	bge	15264 <__assert_fail@plt+0x3754>
   1525c:	ldr	r0, [pc, #1392]	; 157d4 <__assert_fail@plt+0x3cc4>
   15260:	bl	127d0 <__assert_fail@plt+0xcc0>
   15264:	ldr	r3, [r4, #4]
   15268:	cmp	r3, #10
   1526c:	bne	15288 <__assert_fail@plt+0x3778>
   15270:	str	r8, [sp]
   15274:	mov	r3, r7
   15278:	mov	r2, #26
   1527c:	mov	r1, #41	; 0x29
   15280:	mov	r0, r5
   15284:	bl	1169c <setsockopt@plt>
   15288:	ldr	r2, [r4, #16]
   1528c:	ldr	r1, [r4, #20]
   15290:	mov	r0, r5
   15294:	bl	1196c <bind@plt>
   15298:	cmp	r0, #0
   1529c:	bge	152e8 <__assert_fail@plt+0x37d8>
   152a0:	mov	r0, r5
   152a4:	bl	11af8 <close@plt>
   152a8:	ldr	r4, [r4, #28]
   152ac:	cmp	r4, #0
   152b0:	bne	15220 <__assert_fail@plt+0x3710>
   152b4:	ldr	r0, [sp, #28]
   152b8:	bl	11a8c <freeaddrinfo@plt>
   152bc:	ldr	r3, [pc, #1196]	; 15770 <__assert_fail@plt+0x3c60>
   152c0:	ldr	r3, [r3, #312]	; 0x138
   152c4:	cmp	r3, #0
   152c8:	bge	14e70 <__assert_fail@plt+0x3360>
   152cc:	ldr	r3, [pc, #1180]	; 15770 <__assert_fail@plt+0x3c60>
   152d0:	ldr	r3, [r3, #316]	; 0x13c
   152d4:	cmp	r3, #0
   152d8:	bge	14e70 <__assert_fail@plt+0x3360>
   152dc:	ldr	r0, [pc, #1268]	; 157d8 <__assert_fail@plt+0x3cc8>
   152e0:	bl	127d0 <__assert_fail@plt+0xcc0>
   152e4:	b	14e70 <__assert_fail@plt+0x3360>
   152e8:	ldr	r3, [r4, #4]
   152ec:	cmp	r3, #2
   152f0:	bne	15304 <__assert_fail@plt+0x37f4>
   152f4:	ldr	r3, [r6, #312]	; 0x138
   152f8:	cmp	r3, #0
   152fc:	strlt	r5, [r6, #312]	; 0x138
   15300:	b	152a8 <__assert_fail@plt+0x3798>
   15304:	cmp	r3, #10
   15308:	bne	152a8 <__assert_fail@plt+0x3798>
   1530c:	ldr	r3, [r6, #316]	; 0x13c
   15310:	cmp	r3, #0
   15314:	strlt	r5, [r6, #316]	; 0x13c
   15318:	b	152a8 <__assert_fail@plt+0x3798>
   1531c:	ldr	r0, [pc, #1208]	; 157dc <__assert_fail@plt+0x3ccc>
   15320:	bl	11ce0 <__assert_fail@plt+0x1d0>
   15324:	mov	r0, #0
   15328:	bl	1462c <__assert_fail@plt+0x2b1c>
   1532c:	mov	r3, #0
   15330:	ldr	r2, [pc, #1016]	; 15730 <__assert_fail@plt+0x3c20>
   15334:	str	r3, [r2]
   15338:	b	155f8 <__assert_fail@plt+0x3ae8>
   1533c:	bl	11948 <__errno_location@plt>
   15340:	ldr	r3, [r0]
   15344:	cmp	r3, #4
   15348:	beq	155f8 <__assert_fail@plt+0x3ae8>
   1534c:	ldr	r0, [pc, #1164]	; 157e0 <__assert_fail@plt+0x3cd0>
   15350:	bl	127d0 <__assert_fail@plt+0xcc0>
   15354:	b	155f8 <__assert_fail@plt+0x3ae8>
   15358:	rsb	r2, r8, #1024	; 0x400
   1535c:	add	r3, sp, #1312	; 0x520
   15360:	str	r3, [sp, #12]
   15364:	add	r1, r3, r8
   15368:	mov	r0, r5
   1536c:	bl	116c0 <read@plt>
   15370:	cmp	r0, #0
   15374:	addgt	r8, r8, r0
   15378:	ble	1538c <__assert_fail@plt+0x387c>
   1537c:	mov	r6, #0
   15380:	add	sl, sp, #1312	; 0x520
   15384:	mov	r5, #10
   15388:	b	15674 <__assert_fail@plt+0x3b64>
   1538c:	cmp	r0, #0
   15390:	bge	1537c <__assert_fail@plt+0x386c>
   15394:	bl	11948 <__errno_location@plt>
   15398:	ldr	r3, [r0]
   1539c:	cmp	r3, #4
   153a0:	beq	1537c <__assert_fail@plt+0x386c>
   153a4:	ldr	r0, [pc, #1080]	; 157e4 <__assert_fail@plt+0x3cd4>
   153a8:	bl	127d0 <__assert_fail@plt+0xcc0>
   153ac:	mvn	r3, #0
   153b0:	str	r3, [fp, #384]	; 0x180
   153b4:	str	r3, [r7, #-6]
   153b8:	b	1537c <__assert_fail@plt+0x386c>
   153bc:	ldr	r8, [sp, #16]
   153c0:	b	15674 <__assert_fail@plt+0x3b64>
   153c4:	mov	r4, sl
   153c8:	b	156cc <__assert_fail@plt+0x3bbc>
   153cc:	ldr	r3, [pc, #1044]	; 157e8 <__assert_fail@plt+0x3cd8>
   153d0:	cmp	r8, r3
   153d4:	ble	1550c <__assert_fail@plt+0x39fc>
   153d8:	mov	r0, sl
   153dc:	bl	136b4 <__assert_fail@plt+0x1ba4>
   153e0:	ldrb	r3, [sp, #1312]	; 0x520
   153e4:	cmp	r3, #60	; 0x3c
   153e8:	ldrne	r8, [sp, #16]
   153ec:	bne	15674 <__assert_fail@plt+0x3b64>
   153f0:	bl	118f4 <__ctype_b_loc@plt>
   153f4:	ldrb	r3, [sp, #1313]	; 0x521
   153f8:	ldr	r2, [r0]
   153fc:	lsl	r3, r3, #1
   15400:	ldrh	r3, [r2, r3]
   15404:	tst	r3, #2048	; 0x800
   15408:	beq	153bc <__assert_fail@plt+0x38ac>
   1540c:	ldrb	r8, [sp, #1314]	; 0x522
   15410:	ldr	r3, [sp, #16]
   15414:	cmp	r8, #62	; 0x3e
   15418:	moveq	r3, #3
   1541c:	mov	r8, r3
   15420:	b	15674 <__assert_fail@plt+0x3b64>
   15424:	mov	r3, #128	; 0x80
   15428:	str	r3, [sp, #32]
   1542c:	add	r3, sp, #2336	; 0x920
   15430:	add	r3, r3, #8
   15434:	sub	r3, r3, #4
   15438:	str	r3, [sp, #12]
   1543c:	ldr	r2, [pc, #832]	; 15784 <__assert_fail@plt+0x3c74>
   15440:	mov	r1, #0
   15444:	mov	r0, r3
   15448:	bl	11984 <memset@plt>
   1544c:	add	r3, sp, #32
   15450:	str	r3, [sp, #4]
   15454:	add	r3, sp, #144	; 0x90
   15458:	str	r3, [sp]
   1545c:	mov	r3, #0
   15460:	mov	r2, #1024	; 0x400
   15464:	ldr	r1, [sp, #12]
   15468:	mov	r0, r5
   1546c:	bl	1178c <recvfrom@plt>
   15470:	cmp	r0, #0
   15474:	ble	154ac <__assert_fail@plt+0x399c>
   15478:	add	r3, sp, #3360	; 0xd20
   1547c:	add	r3, r3, #8
   15480:	add	r0, r3, r0
   15484:	mov	r3, #0
   15488:	strb	r3, [r0, #-1028]	; 0xfffffbfc
   1548c:	ldr	r1, [sp, #32]
   15490:	add	r0, sp, #144	; 0x90
   15494:	bl	1260c <__assert_fail@plt+0xafc>
   15498:	add	r3, sp, #2336	; 0x920
   1549c:	add	r3, r3, #8
   154a0:	sub	r1, r3, #4
   154a4:	bl	1354c <__assert_fail@plt+0x1a3c>
   154a8:	b	1550c <__assert_fail@plt+0x39fc>
   154ac:	cmp	r0, #0
   154b0:	bge	1550c <__assert_fail@plt+0x39fc>
   154b4:	bl	11948 <__errno_location@plt>
   154b8:	ldr	r3, [r0]
   154bc:	cmp	r3, #4
   154c0:	beq	1550c <__assert_fail@plt+0x39fc>
   154c4:	ldr	r0, [pc, #800]	; 157ec <__assert_fail@plt+0x3cdc>
   154c8:	bl	127d0 <__assert_fail@plt+0xcc0>
   154cc:	b	1550c <__assert_fail@plt+0x39fc>
   154d0:	cmp	r0, #0
   154d4:	bge	1550c <__assert_fail@plt+0x39fc>
   154d8:	bl	11948 <__errno_location@plt>
   154dc:	ldr	r3, [r0]
   154e0:	cmp	r3, #4
   154e4:	beq	1550c <__assert_fail@plt+0x39fc>
   154e8:	ldr	r0, [pc, #768]	; 157f0 <__assert_fail@plt+0x3ce0>
   154ec:	bl	127d0 <__assert_fail@plt+0xcc0>
   154f0:	b	1550c <__assert_fail@plt+0x39fc>
   154f4:	tst	r3, #32
   154f8:	bne	155c8 <__assert_fail@plt+0x3ab8>
   154fc:	tst	r3, #8
   15500:	bne	155dc <__assert_fail@plt+0x3acc>
   15504:	tst	r3, #16
   15508:	bne	155e8 <__assert_fail@plt+0x3ad8>
   1550c:	add	r9, r9, #1
   15510:	add	r7, r7, #8
   15514:	ldr	r3, [sp, #8]
   15518:	cmp	r3, r9
   1551c:	beq	155f4 <__assert_fail@plt+0x3ae4>
   15520:	ldrh	r3, [r7]
   15524:	tst	r3, #3
   15528:	beq	154f4 <__assert_fail@plt+0x39e4>
   1552c:	ldr	r5, [r7, #-6]
   15530:	cmn	r5, #1
   15534:	beq	1550c <__assert_fail@plt+0x39fc>
   15538:	ldr	r3, [fp, #384]	; 0x180
   1553c:	cmp	r5, r3
   15540:	beq	15358 <__assert_fail@plt+0x3848>
   15544:	ldr	r3, [fp, #312]	; 0x138
   15548:	cmp	r5, r3
   1554c:	beq	15424 <__assert_fail@plt+0x3914>
   15550:	ldr	r3, [fp, #316]	; 0x13c
   15554:	cmp	r5, r3
   15558:	beq	15424 <__assert_fail@plt+0x3914>
   1555c:	mov	r3, #110	; 0x6e
   15560:	str	r3, [sp, #32]
   15564:	add	r3, sp, #32
   15568:	str	r3, [sp, #4]
   1556c:	add	r3, sp, #144	; 0x90
   15570:	str	r3, [sp]
   15574:	mov	r3, #0
   15578:	mov	r2, #1024	; 0x400
   1557c:	add	r1, sp, #2336	; 0x920
   15580:	add	r1, r1, #8
   15584:	sub	r1, r1, #4
   15588:	mov	r0, r5
   1558c:	bl	1178c <recvfrom@plt>
   15590:	cmp	r0, #0
   15594:	ble	154d0 <__assert_fail@plt+0x39c0>
   15598:	add	r3, sp, #3360	; 0xd20
   1559c:	add	r3, r3, #8
   155a0:	add	r0, r3, r0
   155a4:	mov	r3, #0
   155a8:	strb	r3, [r0, #-1028]	; 0xfffffbfc
   155ac:	add	r3, sp, #2336	; 0x920
   155b0:	add	r3, r3, #8
   155b4:	sub	r1, r3, #4
   155b8:	ldr	r3, [pc, #384]	; 15740 <__assert_fail@plt+0x3c30>
   155bc:	ldr	r0, [r3]
   155c0:	bl	1354c <__assert_fail@plt+0x1a3c>
   155c4:	b	1550c <__assert_fail@plt+0x39fc>
   155c8:	ldr	r0, [pc, #548]	; 157f4 <__assert_fail@plt+0x3ce4>
   155cc:	bl	127d0 <__assert_fail@plt+0xcc0>
   155d0:	mvn	r3, #0
   155d4:	str	r3, [r7, #-6]
   155d8:	b	1550c <__assert_fail@plt+0x39fc>
   155dc:	ldr	r0, [pc, #532]	; 157f8 <__assert_fail@plt+0x3ce8>
   155e0:	bl	127d0 <__assert_fail@plt+0xcc0>
   155e4:	b	1550c <__assert_fail@plt+0x39fc>
   155e8:	ldr	r0, [pc, #524]	; 157fc <__assert_fail@plt+0x3cec>
   155ec:	bl	127d0 <__assert_fail@plt+0xcc0>
   155f0:	b	1550c <__assert_fail@plt+0x39fc>
   155f4:	mov	sl, r3
   155f8:	mvn	r2, #0
   155fc:	mov	r1, sl
   15600:	ldr	r0, [sp, #20]
   15604:	bl	11810 <poll@plt>
   15608:	cmp	r0, #0
   1560c:	beq	155f8 <__assert_fail@plt+0x3ae8>
   15610:	ldr	r3, [pc, #280]	; 15730 <__assert_fail@plt+0x3c20>
   15614:	ldr	r3, [r3]
   15618:	str	r3, [sp, #16]
   1561c:	cmp	r3, #0
   15620:	bne	1531c <__assert_fail@plt+0x380c>
   15624:	cmp	r0, #0
   15628:	blt	1533c <__assert_fail@plt+0x382c>
   1562c:	cmp	sl, #0
   15630:	beq	155f8 <__assert_fail@plt+0x3ae8>
   15634:	ldr	r3, [sp, #20]
   15638:	add	r7, r3, #6
   1563c:	mov	r9, #0
   15640:	str	sl, [sp, #8]
   15644:	b	15520 <__assert_fail@plt+0x3a10>
   15648:	ldr	r3, [pc, #288]	; 15770 <__assert_fail@plt+0x3c60>
   1564c:	ldr	r3, [r3, #312]	; 0x138
   15650:	cmp	r3, #0
   15654:	bge	14f08 <__assert_fail@plt+0x33f8>
   15658:	b	14ef0 <__assert_fail@plt+0x33e0>
   1565c:	cmp	r4, sl
   15660:	beq	153cc <__assert_fail@plt+0x38bc>
   15664:	mov	r2, r8
   15668:	mov	r1, r4
   1566c:	mov	r0, sl
   15670:	bl	116f0 <memmove@plt>
   15674:	add	r3, sp, #3360	; 0xd20
   15678:	add	r3, r3, #8
   1567c:	add	r3, r3, r8
   15680:	strb	r6, [r3, #-2056]	; 0xfffff7f8
   15684:	mov	r1, r5
   15688:	mov	r0, sl
   1568c:	bl	11930 <strchr@plt>
   15690:	cmp	r0, #0
   15694:	beq	153c4 <__assert_fail@plt+0x38b4>
   15698:	mov	r3, sl
   1569c:	add	r4, r0, #1
   156a0:	strb	r6, [r0]
   156a4:	sub	r2, r4, r3
   156a8:	sub	r8, r8, r2
   156ac:	mov	r0, r3
   156b0:	bl	136b4 <__assert_fail@plt+0x1ba4>
   156b4:	mov	r1, r5
   156b8:	mov	r0, r4
   156bc:	bl	11930 <strchr@plt>
   156c0:	mov	r3, r4
   156c4:	cmp	r0, #0
   156c8:	bne	1569c <__assert_fail@plt+0x3b8c>
   156cc:	cmp	r8, #0
   156d0:	beq	1550c <__assert_fail@plt+0x39fc>
   156d4:	ldrb	r3, [r4]
   156d8:	cmp	r3, #0
   156dc:	bne	1565c <__assert_fail@plt+0x3b4c>
   156e0:	add	r3, r4, #1
   156e4:	mov	r4, r3
   156e8:	subs	r8, r8, #1
   156ec:	beq	1550c <__assert_fail@plt+0x39fc>
   156f0:	add	r3, r3, #1
   156f4:	ldrb	r2, [r4]
   156f8:	cmp	r2, #0
   156fc:	beq	156e4 <__assert_fail@plt+0x3bd4>
   15700:	b	1565c <__assert_fail@plt+0x3b4c>
   15704:	ldr	r3, [pc, #100]	; 15770 <__assert_fail@plt+0x3c60>
   15708:	ldr	r3, [r3, #316]	; 0x13c
   1570c:	cmp	r3, #0
   15710:	bge	14eb0 <__assert_fail@plt+0x33a0>
   15714:	b	14ef0 <__assert_fail@plt+0x33e0>
   15718:	andeq	sp, r1, ip, asr sl
   1571c:	andeq	sp, r1, r8, lsl #6
   15720:	muleq	r3, r4, r0
   15724:	andeq	pc, r2, r8, ror r5	; <UNPREDICTABLE>
   15728:	andeq	sp, r1, r0, lsr #6
   1572c:	andeq	pc, r2, r4, lsr r3	; <UNPREDICTABLE>
   15730:	ldrdeq	pc, [r2], -r4
   15734:	andeq	pc, r2, r4, asr #24
   15738:	muleq	r1, ip, sp
   1573c:	andeq	sp, r1, r8, lsr #6
   15740:	andeq	pc, r2, r0, asr #24
   15744:	andeq	sp, r1, r0, asr #6
   15748:	andeq	pc, r2, ip, lsr ip	; <UNPREDICTABLE>
   1574c:	andeq	pc, r2, r4, asr sl	; <UNPREDICTABLE>
   15750:	andeq	pc, r2, r8, lsl r3	; <UNPREDICTABLE>
   15754:	andeq	r3, r1, ip, lsr r9
   15758:	andeq	r3, r1, ip, lsl #16
   1575c:	andeq	r1, r1, ip, asr #26
   15760:	andeq	pc, r2, r8, lsr #24
   15764:	andeq	sp, r1, ip, asr r3
   15768:	andeq	pc, r2, r4, asr #20
   1576c:	andeq	sp, r1, r4, ror r3
   15770:			; <UNDEFINED> instruction: 0x0002f1b0
   15774:	andeq	sp, r1, r0, lsl #7
   15778:	andeq	pc, r2, r0, lsr ip	; <UNPREDICTABLE>
   1577c:	andeq	pc, r2, r8, lsl #25
   15780:	andeq	sp, r1, r4, lsr #7
   15784:	andeq	r0, r0, r1, lsl #8
   15788:	strdeq	sp, [r1], -r0
   1578c:	andeq	pc, r2, r8, asr #20
   15790:	andeq	sp, r1, ip, lsl #8
   15794:	muleq	r1, r4, r4
   15798:			; <UNDEFINED> instruction: 0x0001d4b4
   1579c:	ldrdeq	sp, [r1], -r4
   157a0:	strdeq	sp, [r1], -r0
   157a4:	strdeq	sp, [r1], -r4
   157a8:	strdeq	sp, [r1], -r8
   157ac:	andeq	r1, r1, r4, asr #24
   157b0:	andeq	sp, r1, ip, lsl #10
   157b4:	andeq	pc, r2, ip, lsr #24
   157b8:	andeq	pc, r2, ip, asr #11
   157bc:	andeq	lr, r1, r4, ror #15
   157c0:	muleq	r1, r0, r3
   157c4:			; <UNDEFINED> instruction: 0x000001b6
   157c8:	andeq	sp, r1, r4, asr #7
   157cc:	ldrdeq	sp, [r1], -r8
   157d0:	andeq	sp, r1, r0, lsr r4
   157d4:	andeq	sp, r1, r8, asr r4
   157d8:	andeq	sp, r1, r4, ror r4
   157dc:	andeq	sp, r1, r4, asr r5
   157e0:	andeq	sp, r1, ip, ror r5
   157e4:	andeq	sp, r1, r4, lsl #11
   157e8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   157ec:	andeq	sp, r1, ip, lsl #11
   157f0:	muleq	r1, ip, r5
   157f4:	andeq	sp, r1, ip, lsr #11
   157f8:			; <UNDEFINED> instruction: 0x0001d5b8
   157fc:	andeq	sp, r1, r4, asr #11
   15800:	push	{r4, lr}
   15804:	mov	r0, #0
   15808:	bl	117b0 <alarm@plt>
   1580c:	mov	r4, r0
   15810:	mov	r1, #0
   15814:	mov	r0, #14
   15818:	bl	11750 <signal@plt>
   1581c:	cmp	r4, #0
   15820:	popne	{r4, pc}
   15824:	ldr	r2, [pc, #12]	; 15838 <__assert_fail@plt+0x3d28>
   15828:	mov	r1, #0
   1582c:	mov	r0, #1
   15830:	bl	11858 <error@plt>
   15834:	pop	{r4, pc}
   15838:	andeq	sp, r1, ip, asr ip
   1583c:	push	{r4, r5, r6, r7, r8, lr}
   15840:	mov	r6, r0
   15844:	mov	r4, r1
   15848:	mov	r5, r2
   1584c:	bl	11900 <getpid@plt>
   15850:	mov	r7, r0
   15854:	bl	11a08 <fork@plt>
   15858:	cmn	r0, #1
   1585c:	beq	15988 <__assert_fail@plt+0x3e78>
   15860:	cmp	r0, #0
   15864:	beq	15890 <__assert_fail@plt+0x3d80>
   15868:	cmp	r5, #0
   1586c:	ble	15888 <__assert_fail@plt+0x3d78>
   15870:	ldr	r1, [pc, #296]	; 159a0 <__assert_fail@plt+0x3e90>
   15874:	mov	r0, #14
   15878:	bl	11750 <signal@plt>
   1587c:	mov	r0, r5
   15880:	bl	117b0 <alarm@plt>
   15884:	bl	116a8 <pause@plt>
   15888:	mov	r0, #0
   1588c:	bl	11738 <_exit@plt>
   15890:	bl	11924 <setsid@plt>
   15894:	cmn	r0, #1
   15898:	beq	15990 <__assert_fail@plt+0x3e80>
   1589c:	mov	r1, #1
   158a0:	mov	r0, r1
   158a4:	bl	11750 <signal@plt>
   158a8:	bl	11a08 <fork@plt>
   158ac:	cmn	r0, #1
   158b0:	popeq	{r4, r5, r6, r7, r8, pc}
   158b4:	cmp	r0, #0
   158b8:	beq	158c4 <__assert_fail@plt+0x3db4>
   158bc:	mov	r0, #0
   158c0:	bl	11738 <_exit@plt>
   158c4:	cmp	r6, #0
   158c8:	beq	158dc <__assert_fail@plt+0x3dcc>
   158cc:	cmp	r4, #0
   158d0:	beq	158f4 <__assert_fail@plt+0x3de4>
   158d4:	mov	r0, r7
   158d8:	pop	{r4, r5, r6, r7, r8, pc}
   158dc:	ldr	r0, [pc, #192]	; 159a4 <__assert_fail@plt+0x3e94>
   158e0:	bl	117ec <chdir@plt>
   158e4:	cmp	r0, #0
   158e8:	bge	158cc <__assert_fail@plt+0x3dbc>
   158ec:	mvn	r0, #0
   158f0:	pop	{r4, r5, r6, r7, r8, pc}
   158f4:	mov	r0, #4
   158f8:	bl	117bc <sysconf@plt>
   158fc:	mov	r5, r0
   15900:	cmn	r0, #1
   15904:	beq	15970 <__assert_fail@plt+0x3e60>
   15908:	cmp	r0, #0
   1590c:	ble	15924 <__assert_fail@plt+0x3e14>
   15910:	mov	r0, r4
   15914:	bl	11af8 <close@plt>
   15918:	add	r4, r4, #1
   1591c:	cmp	r4, r5
   15920:	blt	15910 <__assert_fail@plt+0x3e00>
   15924:	mov	r2, #0
   15928:	mov	r1, #2
   1592c:	ldr	r0, [pc, #116]	; 159a8 <__assert_fail@plt+0x3e98>
   15930:	bl	1187c <open64@plt>
   15934:	mov	r4, r0
   15938:	cmn	r0, #1
   1593c:	beq	15998 <__assert_fail@plt+0x3e88>
   15940:	mov	r1, #0
   15944:	bl	117d4 <dup2@plt>
   15948:	mov	r1, #1
   1594c:	mov	r0, r4
   15950:	bl	117d4 <dup2@plt>
   15954:	mov	r1, #2
   15958:	mov	r0, r4
   1595c:	bl	117d4 <dup2@plt>
   15960:	cmp	r4, #2
   15964:	bgt	15978 <__assert_fail@plt+0x3e68>
   15968:	mov	r0, r7
   1596c:	pop	{r4, r5, r6, r7, r8, pc}
   15970:	mov	r5, #64	; 0x40
   15974:	b	15910 <__assert_fail@plt+0x3e00>
   15978:	mov	r0, r4
   1597c:	bl	11af8 <close@plt>
   15980:	mov	r0, r7
   15984:	pop	{r4, r5, r6, r7, r8, pc}
   15988:	mvn	r0, #0
   1598c:	pop	{r4, r5, r6, r7, r8, pc}
   15990:	mvn	r0, #0
   15994:	pop	{r4, r5, r6, r7, r8, pc}
   15998:	mov	r0, r7
   1599c:	pop	{r4, r5, r6, r7, r8, pc}
   159a0:	andeq	r5, r1, r0, lsl #16
   159a4:	strdeq	sp, [r1], -r0
   159a8:	andeq	sp, r1, r8, ror ip

000159ac <daemon@@Base>:
   159ac:	push	{r4, lr}
   159b0:	mov	r2, #0
   159b4:	bl	1583c <__assert_fail@plt+0x3d2c>
   159b8:	cmn	r0, #1
   159bc:	movne	r0, #0
   159c0:	moveq	r0, #1
   159c4:	rsb	r0, r0, #0
   159c8:	pop	{r4, pc}
   159cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   159d0:	sub	sp, sp, #1072	; 0x430
   159d4:	sub	sp, sp, #12
   159d8:	bl	11948 <__errno_location@plt>
   159dc:	mov	r7, r0
   159e0:	mov	r4, #0
   159e4:	mov	r6, r4
   159e8:	mov	r8, r4
   159ec:	b	15a20 <daemon@@Base+0x74>
   159f0:	mov	r3, #12
   159f4:	str	r3, [r7]
   159f8:	mov	r0, r6
   159fc:	bl	1a5dc <argp_parse@@Base+0xe4c>
   15a00:	mov	r0, r5
   15a04:	add	sp, sp, #1072	; 0x430
   15a08:	add	sp, sp, #12
   15a0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15a10:	ldr	r3, [r7]
   15a14:	mov	r6, r5
   15a18:	cmp	r3, #36	; 0x24
   15a1c:	bne	15a70 <daemon@@Base+0xc4>
   15a20:	str	r8, [r7]
   15a24:	add	r4, r4, #256	; 0x100
   15a28:	mov	r1, r4
   15a2c:	mov	r0, r6
   15a30:	bl	1b390 <argp_parse@@Base+0x1c00>
   15a34:	subs	r5, r0, #0
   15a38:	beq	159f0 <daemon@@Base+0x44>
   15a3c:	mov	r1, r4
   15a40:	mov	r0, r5
   15a44:	bl	11864 <gethostname@plt>
   15a48:	subs	r9, r0, #0
   15a4c:	bne	15a10 <daemon@@Base+0x64>
   15a50:	mov	r2, r4
   15a54:	mov	r1, r8
   15a58:	mov	r0, r5
   15a5c:	bl	119a8 <memchr@plt>
   15a60:	cmp	r0, #0
   15a64:	bne	15a10 <daemon@@Base+0x64>
   15a68:	mov	r6, r5
   15a6c:	b	15a20 <daemon@@Base+0x74>
   15a70:	cmp	r9, #0
   15a74:	cmpne	r3, #0
   15a78:	bne	15af0 <daemon@@Base+0x144>
   15a7c:	mov	r2, #32
   15a80:	mov	r1, #0
   15a84:	add	r0, sp, #20
   15a88:	bl	11984 <memset@plt>
   15a8c:	mov	r3, #2
   15a90:	str	r3, [sp, #24]
   15a94:	add	r3, sp, #16
   15a98:	add	r2, sp, #20
   15a9c:	mov	r1, #0
   15aa0:	mov	r0, r5
   15aa4:	bl	11a98 <getaddrinfo@plt>
   15aa8:	cmp	r0, #0
   15aac:	bne	15a00 <daemon@@Base+0x54>
   15ab0:	ldr	r3, [sp, #16]
   15ab4:	ldr	r1, [r3, #16]
   15ab8:	ldr	r0, [r3, #20]
   15abc:	mov	r3, #8
   15ac0:	str	r3, [sp, #8]
   15ac4:	mov	r3, #0
   15ac8:	str	r3, [sp, #4]
   15acc:	str	r3, [sp]
   15ad0:	ldr	r3, [pc, #64]	; 15b18 <daemon@@Base+0x16c>
   15ad4:	add	r2, sp, #52	; 0x34
   15ad8:	bl	11a14 <getnameinfo@plt>
   15adc:	cmp	r0, #0
   15ae0:	beq	15b00 <daemon@@Base+0x154>
   15ae4:	ldr	r0, [sp, #16]
   15ae8:	bl	11a8c <freeaddrinfo@plt>
   15aec:	b	15a00 <daemon@@Base+0x54>
   15af0:	mov	r0, r5
   15af4:	bl	1a5dc <argp_parse@@Base+0xe4c>
   15af8:	mov	r5, #0
   15afc:	b	15a00 <daemon@@Base+0x54>
   15b00:	mov	r0, r5
   15b04:	bl	1a5dc <argp_parse@@Base+0xe4c>
   15b08:	add	r0, sp, #52	; 0x34
   15b0c:	bl	11798 <strdup@plt>
   15b10:	mov	r5, r0
   15b14:	b	15ae4 <daemon@@Base+0x138>
   15b18:	andeq	r0, r0, r1, lsl #8
   15b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b20:	sub	sp, sp, #204	; 0xcc
   15b24:	str	r3, [sp, #12]
   15b28:	cmp	r1, #6
   15b2c:	ble	15b3c <daemon@@Base+0x190>
   15b30:	ldr	r0, [pc, #1164]	; 15fc4 <daemon@@Base+0x618>
   15b34:	add	sp, sp, #204	; 0xcc
   15b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b3c:	mov	r5, r0
   15b40:	mov	r6, r1
   15b44:	mov	r8, r2
   15b48:	mov	r0, r2
   15b4c:	bl	11918 <strlen@plt>
   15b50:	add	r0, r0, #6
   15b54:	bl	1b360 <argp_parse@@Base+0x1bd0>
   15b58:	subs	r7, r0, #0
   15b5c:	beq	15bc0 <daemon@@Base+0x214>
   15b60:	ldr	r3, [pc, #1120]	; 15fc8 <daemon@@Base+0x61c>
   15b64:	ldr	r0, [r3]
   15b68:	str	r0, [r7]
   15b6c:	ldrh	r3, [r3, #4]
   15b70:	strh	r3, [r7, #4]
   15b74:	mov	r1, r8
   15b78:	mov	r0, r7
   15b7c:	bl	11834 <strcat@plt>
   15b80:	mov	r0, r7
   15b84:	bl	11918 <strlen@plt>
   15b88:	cmp	r0, #0
   15b8c:	beq	15cac <daemon@@Base+0x300>
   15b90:	sub	r0, r0, #1
   15b94:	ldrb	r3, [r7, r0]
   15b98:	cmp	r3, #47	; 0x2f
   15b9c:	moveq	r3, #0
   15ba0:	strbeq	r3, [r7, r0]
   15ba4:	mov	r1, #46	; 0x2e
   15ba8:	mov	r0, r7
   15bac:	bl	11930 <strchr@plt>
   15bb0:	subs	r3, r0, #0
   15bb4:	beq	15c94 <daemon@@Base+0x2e8>
   15bb8:	mov	r4, #46	; 0x2e
   15bbc:	b	15c04 <daemon@@Base+0x258>
   15bc0:	ldr	ip, [pc, #1028]	; 15fcc <daemon@@Base+0x620>
   15bc4:	mov	lr, ip
   15bc8:	ldr	r4, [pc, #1024]	; 15fd0 <daemon@@Base+0x624>
   15bcc:	ldm	r4!, {r0, r1, r2, r3}
   15bd0:	stmia	lr!, {r0, r1, r2, r3}
   15bd4:	ldm	r4!, {r0, r1, r2, r3}
   15bd8:	stmia	lr!, {r0, r1, r2, r3}
   15bdc:	ldm	r4, {r0, r1}
   15be0:	str	r0, [lr], #4
   15be4:	strh	r1, [lr]
   15be8:	mov	r0, ip
   15bec:	b	15b34 <daemon@@Base+0x188>
   15bf0:	add	r0, r3, #1
   15bf4:	mov	r1, r4
   15bf8:	bl	11930 <strchr@plt>
   15bfc:	subs	r3, r0, #0
   15c00:	beq	15c94 <daemon@@Base+0x2e8>
   15c04:	cmp	r7, r3
   15c08:	bcs	15bf0 <daemon@@Base+0x244>
   15c0c:	ldrb	r2, [r3, #-1]
   15c10:	cmp	r2, #47	; 0x2f
   15c14:	bne	15bf0 <daemon@@Base+0x244>
   15c18:	ldrb	r2, [r3, #1]
   15c1c:	cmp	r2, #46	; 0x2e
   15c20:	bne	15bf0 <daemon@@Base+0x244>
   15c24:	ldrb	r2, [r3, #2]
   15c28:	cmp	r2, #47	; 0x2f
   15c2c:	cmpne	r2, #0
   15c30:	bne	15bf0 <daemon@@Base+0x244>
   15c34:	sub	r0, r3, #2
   15c38:	ldrb	r2, [r3, #-2]
   15c3c:	subs	r2, r2, #47	; 0x2f
   15c40:	movne	r2, #1
   15c44:	cmp	r7, r0
   15c48:	movhi	r2, #0
   15c4c:	cmp	r2, #0
   15c50:	beq	15c70 <daemon@@Base+0x2c4>
   15c54:	ldrb	r2, [r0, #-1]!
   15c58:	subs	r2, r2, #47	; 0x2f
   15c5c:	movne	r2, #1
   15c60:	cmp	r7, r0
   15c64:	movhi	r2, #0
   15c68:	cmp	r2, #0
   15c6c:	bne	15c54 <daemon@@Base+0x2a8>
   15c70:	cmp	r7, r0
   15c74:	bhi	15c94 <daemon@@Base+0x2e8>
   15c78:	add	r3, r3, #2
   15c7c:	sub	r1, r0, #1
   15c80:	ldrb	r2, [r3], #1
   15c84:	strb	r2, [r1, #1]!
   15c88:	cmp	r2, #0
   15c8c:	bne	15c80 <daemon@@Base+0x2d4>
   15c90:	b	15bf4 <daemon@@Base+0x248>
   15c94:	ldrb	r3, [r7]
   15c98:	cmp	r3, #0
   15c9c:	moveq	r3, #47	; 0x2f
   15ca0:	strbeq	r3, [r7]
   15ca4:	moveq	r3, #0
   15ca8:	strbeq	r3, [r7, #1]
   15cac:	mov	r2, #5
   15cb0:	ldr	r1, [pc, #784]	; 15fc8 <daemon@@Base+0x61c>
   15cb4:	mov	r0, r7
   15cb8:	bl	11ad4 <strncmp@plt>
   15cbc:	subs	sl, r0, #0
   15cc0:	bne	15d98 <daemon@@Base+0x3ec>
   15cc4:	mov	r2, #0
   15cc8:	ldr	r1, [pc, #772]	; 15fd4 <daemon@@Base+0x628>
   15ccc:	mov	r0, r7
   15cd0:	bl	1187c <open64@plt>
   15cd4:	subs	r9, r0, #0
   15cd8:	blt	15db8 <daemon@@Base+0x40c>
   15cdc:	cmp	r6, #0
   15ce0:	movle	r8, sl
   15ce4:	ble	15d08 <daemon@@Base+0x35c>
   15ce8:	mov	r3, r5
   15cec:	add	r1, r5, r6, lsl #3
   15cf0:	mov	r8, sl
   15cf4:	ldr	r2, [r3, #4]
   15cf8:	add	r8, r8, r2
   15cfc:	add	r3, r3, #8
   15d00:	cmp	r1, r3
   15d04:	bne	15cf4 <daemon@@Base+0x348>
   15d08:	mov	fp, #0
   15d0c:	mov	r2, r6
   15d10:	mov	r1, r5
   15d14:	mov	r0, r9
   15d18:	bl	119b4 <writev@plt>
   15d1c:	mov	r4, r0
   15d20:	cmp	r8, r0
   15d24:	ble	15f54 <daemon@@Base+0x5a8>
   15d28:	cmp	r0, #0
   15d2c:	blt	15e08 <daemon@@Base+0x45c>
   15d30:	sub	r8, r8, r0
   15d34:	add	r3, sp, #152	; 0x98
   15d38:	cmp	r5, r3
   15d3c:	beq	15d50 <daemon@@Base+0x3a4>
   15d40:	lsl	r2, r6, #3
   15d44:	mov	r1, r5
   15d48:	mov	r0, r3
   15d4c:	bl	11744 <memcpy@plt>
   15d50:	ldr	r3, [sp, #156]	; 0x9c
   15d54:	cmp	r4, r3
   15d58:	blt	15e00 <daemon@@Base+0x454>
   15d5c:	add	r5, sp, #152	; 0x98
   15d60:	sub	r4, r4, r3
   15d64:	add	r5, r5, #8
   15d68:	sub	r6, r6, #1
   15d6c:	ldr	r3, [r5, #4]
   15d70:	cmp	r3, r4
   15d74:	ble	15d60 <daemon@@Base+0x3b4>
   15d78:	cmp	r4, #0
   15d7c:	beq	15d0c <daemon@@Base+0x360>
   15d80:	ldr	r2, [r5]
   15d84:	add	r2, r2, r4
   15d88:	str	r2, [r5]
   15d8c:	sub	r4, r3, r4
   15d90:	str	r4, [r5, #4]
   15d94:	b	15d0c <daemon@@Base+0x360>
   15d98:	ldr	r4, [pc, #556]	; 15fcc <daemon@@Base+0x620>
   15d9c:	mov	r3, r8
   15da0:	ldr	r2, [pc, #560]	; 15fd8 <daemon@@Base+0x62c>
   15da4:	mov	r1, #1024	; 0x400
   15da8:	mov	r0, r4
   15dac:	bl	11954 <snprintf@plt>
   15db0:	mov	r0, r4
   15db4:	b	15b34 <daemon@@Base+0x188>
   15db8:	bl	11948 <__errno_location@plt>
   15dbc:	ldr	r0, [r0]
   15dc0:	cmp	r0, #13
   15dc4:	cmpne	r0, #16
   15dc8:	moveq	r0, #0
   15dcc:	beq	15b34 <daemon@@Base+0x188>
   15dd0:	bl	118b8 <strerror@plt>
   15dd4:	ldr	r4, [pc, #496]	; 15fcc <daemon@@Base+0x620>
   15dd8:	str	r0, [sp]
   15ddc:	mov	r3, r7
   15de0:	ldr	r2, [pc, #500]	; 15fdc <daemon@@Base+0x630>
   15de4:	mov	r1, #1024	; 0x400
   15de8:	mov	r0, r4
   15dec:	bl	11954 <snprintf@plt>
   15df0:	mov	r0, r7
   15df4:	bl	1a5dc <argp_parse@@Base+0xe4c>
   15df8:	mov	r0, r4
   15dfc:	b	15b34 <daemon@@Base+0x188>
   15e00:	add	r5, sp, #152	; 0x98
   15e04:	b	15d78 <daemon@@Base+0x3cc>
   15e08:	bl	11948 <__errno_location@plt>
   15e0c:	mov	r4, r0
   15e10:	ldr	r3, [r0]
   15e14:	cmp	r3, #11
   15e18:	bne	15f48 <daemon@@Base+0x59c>
   15e1c:	str	fp, [sp, #20]
   15e20:	cmp	sl, #0
   15e24:	bne	15e84 <daemon@@Base+0x4d8>
   15e28:	bl	11a08 <fork@plt>
   15e2c:	cmp	r0, #0
   15e30:	beq	15e94 <daemon@@Base+0x4e8>
   15e34:	cmp	r0, #0
   15e38:	blt	15ec0 <daemon@@Base+0x514>
   15e3c:	mov	r2, #0
   15e40:	add	r1, sp, #24
   15e44:	bl	11840 <waitpid@plt>
   15e48:	cmp	r0, #0
   15e4c:	blt	15ec0 <daemon@@Base+0x514>
   15e50:	ldr	r3, [sp, #24]
   15e54:	tst	r3, #127	; 0x7f
   15e58:	bne	15eb8 <daemon@@Base+0x50c>
   15e5c:	asr	r3, r3, #8
   15e60:	ands	r3, r3, #255	; 0xff
   15e64:	strne	r3, [r4]
   15e68:	bne	15ec0 <daemon@@Base+0x514>
   15e6c:	mov	r0, r9
   15e70:	bl	11af8 <close@plt>
   15e74:	mov	r0, r7
   15e78:	bl	1a5dc <argp_parse@@Base+0xe4c>
   15e7c:	mov	r0, #0
   15e80:	b	15b34 <daemon@@Base+0x188>
   15e84:	mov	r0, r9
   15e88:	bl	11af8 <close@plt>
   15e8c:	mov	r0, #1
   15e90:	bl	11738 <_exit@plt>
   15e94:	bl	11a08 <fork@plt>
   15e98:	cmn	r0, #1
   15e9c:	beq	15eb0 <daemon@@Base+0x504>
   15ea0:	cmp	r0, #0
   15ea4:	beq	15ef8 <daemon@@Base+0x54c>
   15ea8:	mov	r0, #0
   15eac:	bl	11738 <_exit@plt>
   15eb0:	ldr	r0, [r4]
   15eb4:	bl	11738 <_exit@plt>
   15eb8:	mov	r3, #4
   15ebc:	str	r3, [r4]
   15ec0:	ldr	r0, [r4]
   15ec4:	bl	118b8 <strerror@plt>
   15ec8:	ldr	r4, [pc, #252]	; 15fcc <daemon@@Base+0x620>
   15ecc:	mov	r3, r0
   15ed0:	ldr	r2, [pc, #264]	; 15fe0 <daemon@@Base+0x634>
   15ed4:	mov	r1, #1024	; 0x400
   15ed8:	mov	r0, r4
   15edc:	bl	11954 <snprintf@plt>
   15ee0:	mov	r0, r9
   15ee4:	bl	11af8 <close@plt>
   15ee8:	mov	r0, r7
   15eec:	bl	1a5dc <argp_parse@@Base+0xe4c>
   15ef0:	mov	r0, r4
   15ef4:	b	15b34 <daemon@@Base+0x188>
   15ef8:	mov	r1, fp
   15efc:	mov	r0, #14
   15f00:	bl	11750 <signal@plt>
   15f04:	mov	r1, fp
   15f08:	mov	r0, #15
   15f0c:	bl	11750 <signal@plt>
   15f10:	add	r0, sp, #24
   15f14:	bl	119fc <sigemptyset@plt>
   15f18:	mov	r2, fp
   15f1c:	add	r1, sp, #24
   15f20:	mov	r0, #2
   15f24:	bl	116e4 <sigprocmask@plt>
   15f28:	ldr	r0, [sp, #12]
   15f2c:	bl	117b0 <alarm@plt>
   15f30:	add	r2, sp, #20
   15f34:	mov	r1, #2048	; 0x800
   15f38:	mov	r0, r9
   15f3c:	bl	1a384 <argp_parse@@Base+0xbf4>
   15f40:	mov	sl, #1
   15f44:	b	15d0c <daemon@@Base+0x360>
   15f48:	cmp	r3, #5
   15f4c:	cmpne	r3, #19
   15f50:	bne	15f78 <daemon@@Base+0x5cc>
   15f54:	mov	r0, r7
   15f58:	bl	1a5dc <argp_parse@@Base+0xe4c>
   15f5c:	mov	r0, r9
   15f60:	bl	11af8 <close@plt>
   15f64:	cmp	sl, #0
   15f68:	moveq	r0, #0
   15f6c:	beq	15b34 <daemon@@Base+0x188>
   15f70:	mov	r0, #0
   15f74:	bl	11738 <_exit@plt>
   15f78:	mov	r0, r9
   15f7c:	bl	11af8 <close@plt>
   15f80:	cmp	sl, #0
   15f84:	bne	15fbc <daemon@@Base+0x610>
   15f88:	ldr	r0, [r4]
   15f8c:	bl	118b8 <strerror@plt>
   15f90:	ldr	r4, [pc, #52]	; 15fcc <daemon@@Base+0x620>
   15f94:	str	r0, [sp]
   15f98:	mov	r3, r7
   15f9c:	ldr	r2, [pc, #56]	; 15fdc <daemon@@Base+0x630>
   15fa0:	mov	r1, #1024	; 0x400
   15fa4:	mov	r0, r4
   15fa8:	bl	11954 <snprintf@plt>
   15fac:	mov	r0, r7
   15fb0:	bl	1a5dc <argp_parse@@Base+0xe4c>
   15fb4:	mov	r0, r4
   15fb8:	b	15b34 <daemon@@Base+0x188>
   15fbc:	mov	r0, #1
   15fc0:	bl	11738 <_exit@plt>
   15fc4:	muleq	r1, r4, ip
   15fc8:	andeq	sp, r1, ip, ror #25
   15fcc:	andeq	pc, r2, r8, lsl #12
   15fd0:	andeq	sp, r1, r4, asr #25
   15fd4:	andeq	r0, r0, r1, lsl #16
   15fd8:	strdeq	sp, [r1], -r4
   15fdc:	andeq	sp, r1, r8, lsl #26
   15fe0:	andeq	sp, r1, r0, lsl sp
   15fe4:	ldr	r3, [r0]
   15fe8:	ldr	r2, [r0, #4]
   15fec:	cmp	r2, #0
   15ff0:	beq	1602c <daemon@@Base+0x680>
   15ff4:	add	r3, r3, #24
   15ff8:	b	16008 <daemon@@Base+0x65c>
   15ffc:	add	r3, r3, #24
   16000:	subs	r2, r2, #1
   16004:	beq	16024 <daemon@@Base+0x678>
   16008:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1600c:	cmp	r0, #0
   16010:	beq	15ffc <daemon@@Base+0x650>
   16014:	ldr	r1, [r3, #-12]
   16018:	tst	r1, #2
   1601c:	bne	15ffc <daemon@@Base+0x650>
   16020:	bx	lr
   16024:	mov	r0, #0
   16028:	bx	lr
   1602c:	mov	r0, #0
   16030:	bx	lr
   16034:	ldr	r2, [r0, #8]
   16038:	cmp	r2, #0
   1603c:	beq	16048 <daemon@@Base+0x69c>
   16040:	mov	r0, #0
   16044:	bx	lr
   16048:	ldr	r2, [r1, #8]
   1604c:	cmp	r2, #0
   16050:	bne	16040 <daemon@@Base+0x694>
   16054:	ldr	r2, [r0, #12]
   16058:	ldr	r1, [r1, #12]
   1605c:	orr	r2, r2, r1
   16060:	tst	r2, #16
   16064:	ldreq	r2, [r3]
   16068:	addeq	r1, r2, #1
   1606c:	streq	r1, [r3]
   16070:	ldreq	r3, [r0, #4]
   16074:	strbeq	r3, [r2]
   16078:	b	16040 <daemon@@Base+0x694>
   1607c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16080:	sub	sp, sp, #12
   16084:	ldr	r4, [r0]
   16088:	ldr	r9, [r0, #8]
   1608c:	ldr	r5, [r0, #4]
   16090:	cmp	r5, #0
   16094:	beq	160e8 <daemon@@Base+0x73c>
   16098:	str	r3, [sp, #4]
   1609c:	str	r2, [sp]
   160a0:	mov	fp, r1
   160a4:	mov	sl, r4
   160a8:	mov	r8, #0
   160ac:	b	16128 <daemon@@Base+0x77c>
   160b0:	and	r3, r6, #4
   160b4:	cmp	r3, #0
   160b8:	moveq	sl, r4
   160bc:	tst	r6, #2
   160c0:	beq	160cc <daemon@@Base+0x720>
   160c4:	add	r9, r9, #1
   160c8:	b	16104 <daemon@@Base+0x758>
   160cc:	ldr	r3, [sp, #4]
   160d0:	ldr	r2, [sp]
   160d4:	mov	r1, sl
   160d8:	mov	r0, r4
   160dc:	blx	fp
   160e0:	mov	r8, r0
   160e4:	b	160c4 <daemon@@Base+0x718>
   160e8:	mov	r8, #0
   160ec:	mov	r0, r8
   160f0:	add	sp, sp, #12
   160f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160f8:	ldrb	r3, [r9]
   160fc:	cmp	r3, r7
   16100:	beq	160b0 <daemon@@Base+0x704>
   16104:	add	r4, r4, #24
   16108:	subs	r5, r5, #1
   1610c:	movne	r3, #1
   16110:	moveq	r3, #0
   16114:	cmp	r8, #0
   16118:	movne	r3, #0
   1611c:	andeq	r3, r3, #1
   16120:	cmp	r3, #0
   16124:	beq	160ec <daemon@@Base+0x740>
   16128:	ldr	r6, [r4, #12]
   1612c:	tst	r6, #8
   16130:	bne	16104 <daemon@@Base+0x758>
   16134:	ldr	r7, [r4, #4]
   16138:	sub	r3, r7, #1
   1613c:	cmp	r3, #254	; 0xfe
   16140:	bhi	16104 <daemon@@Base+0x758>
   16144:	bl	118f4 <__ctype_b_loc@plt>
   16148:	ldr	r2, [r0]
   1614c:	lsl	r3, r7, #1
   16150:	ldrh	r3, [r2, r3]
   16154:	tst	r3, #16384	; 0x4000
   16158:	bne	160f8 <daemon@@Base+0x74c>
   1615c:	b	16104 <daemon@@Base+0x758>
   16160:	push	{r4, r5, r6, lr}
   16164:	ldr	r4, [r0, #12]
   16168:	ands	r4, r4, #8
   1616c:	movne	r4, #0
   16170:	bne	161a0 <daemon@@Base+0x7f4>
   16174:	ldr	r5, [r0, #4]
   16178:	sub	r3, r5, #1
   1617c:	cmp	r3, #254	; 0xfe
   16180:	bhi	161a0 <daemon@@Base+0x7f4>
   16184:	bl	118f4 <__ctype_b_loc@plt>
   16188:	ldr	r2, [r0]
   1618c:	lsl	r3, r5, #1
   16190:	ldrh	r3, [r2, r3]
   16194:	and	r3, r3, #16384	; 0x4000
   16198:	cmp	r3, #0
   1619c:	movne	r4, r5
   161a0:	mov	r0, r4
   161a4:	pop	{r4, r5, r6, pc}
   161a8:	push	{r4, lr}
   161ac:	mov	r4, r0
   161b0:	bl	118f4 <__ctype_b_loc@plt>
   161b4:	b	161c0 <daemon@@Base+0x814>
   161b8:	add	r3, r3, #1
   161bc:	str	r3, [r4]
   161c0:	ldr	r3, [r4]
   161c4:	ldrb	r2, [r3]
   161c8:	ldr	ip, [r0]
   161cc:	lsl	r1, r2, #1
   161d0:	ldrh	r1, [ip, r1]
   161d4:	tst	r1, #8192	; 0x2000
   161d8:	bne	161b8 <daemon@@Base+0x80c>
   161dc:	subs	ip, r2, #45	; 0x2d
   161e0:	movne	ip, #1
   161e4:	cmp	r2, #0
   161e8:	beq	1621c <daemon@@Base+0x870>
   161ec:	tst	r1, #8
   161f0:	bne	1621c <daemon@@Base+0x870>
   161f4:	add	r3, r3, #1
   161f8:	str	r3, [r4]
   161fc:	ldrb	r2, [r3]
   16200:	cmp	r2, #0
   16204:	beq	1621c <daemon@@Base+0x870>
   16208:	ldr	r1, [r0]
   1620c:	lsl	r2, r2, #1
   16210:	ldrh	r2, [r1, r2]
   16214:	tst	r2, #8
   16218:	beq	161f4 <daemon@@Base+0x848>
   1621c:	mov	r0, ip
   16220:	pop	{r4, pc}
   16224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16228:	add	fp, sp, #32
   1622c:	sub	sp, sp, #12
   16230:	ldr	r5, [r0, #4]
   16234:	cmp	r5, #0
   16238:	bne	16244 <daemon@@Base+0x898>
   1623c:	sub	sp, fp, #32
   16240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16244:	mov	r9, r1
   16248:	mov	r6, r0
   1624c:	ldr	r0, [r0, #8]
   16250:	bl	11918 <strlen@plt>
   16254:	add	r3, r0, #15
   16258:	bic	r3, r3, #7
   1625c:	sub	sp, sp, r3
   16260:	mov	sl, sp
   16264:	sub	r7, fp, #36	; 0x24
   16268:	str	sp, [r7, #-4]!
   1626c:	ldr	r4, [r6]
   16270:	ldr	r8, [pc, #336]	; 163c8 <daemon@@Base+0xa1c>
   16274:	ldr	r2, [r4, #20]
   16278:	mov	r3, r7
   1627c:	ldr	r2, [r2, #24]
   16280:	mov	r1, r8
   16284:	mov	r0, r4
   16288:	bl	1607c <daemon@@Base+0x6d0>
   1628c:	add	r4, r4, #28
   16290:	subs	r5, r5, #1
   16294:	bne	16274 <daemon@@Base+0x8c8>
   16298:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1629c:	cmp	sl, r3
   162a0:	bcc	162f8 <daemon@@Base+0x94c>
   162a4:	ldr	r4, [r6]
   162a8:	ldr	r5, [r6, #4]
   162ac:	cmp	r5, #0
   162b0:	beq	1623c <daemon@@Base+0x890>
   162b4:	ldr	r7, [pc, #272]	; 163cc <daemon@@Base+0xa20>
   162b8:	ldr	r2, [r4, #20]
   162bc:	mov	r3, r9
   162c0:	ldr	r2, [r2, #24]
   162c4:	mov	r1, r7
   162c8:	mov	r0, r4
   162cc:	bl	1607c <daemon@@Base+0x6d0>
   162d0:	add	r4, r4, #28
   162d4:	subs	r5, r5, #1
   162d8:	bne	162b8 <daemon@@Base+0x90c>
   162dc:	ldr	r7, [r6]
   162e0:	ldr	r8, [r6, #4]
   162e4:	cmp	r8, #0
   162e8:	beq	1623c <daemon@@Base+0x890>
   162ec:	add	r7, r7, #28
   162f0:	ldr	sl, [pc, #216]	; 163d0 <daemon@@Base+0xa24>
   162f4:	b	163b0 <daemon@@Base+0xa04>
   162f8:	add	r2, r3, #1
   162fc:	str	r2, [fp, #-40]	; 0xffffffd8
   16300:	mov	r2, #0
   16304:	strb	r2, [r3]
   16308:	mov	r2, sl
   1630c:	ldr	r1, [pc, #192]	; 163d4 <daemon@@Base+0xa28>
   16310:	mov	r0, r9
   16314:	bl	1baec <argp_parse@@Base+0x235c>
   16318:	b	162a4 <daemon@@Base+0x8f8>
   1631c:	tst	r1, #16
   16320:	bne	16344 <daemon@@Base+0x998>
   16324:	ldr	r3, [r6, #8]
   16328:	cmp	r3, #0
   1632c:	beq	16394 <daemon@@Base+0x9e8>
   16330:	tst	r1, #1
   16334:	ldrne	r1, [pc, #156]	; 163d8 <daemon@@Base+0xa2c>
   16338:	moveq	r1, sl
   1633c:	mov	r0, r9
   16340:	bl	1baec <argp_parse@@Base+0x235c>
   16344:	add	r4, r4, #24
   16348:	subs	r5, r5, #1
   1634c:	beq	163a4 <daemon@@Base+0x9f8>
   16350:	ldr	r2, [r4]
   16354:	cmp	r2, #0
   16358:	beq	16344 <daemon@@Base+0x998>
   1635c:	ldr	r1, [r4, #12]
   16360:	and	r3, r1, #4
   16364:	cmp	r3, #0
   16368:	moveq	r6, r4
   1636c:	tst	r1, #2
   16370:	bne	16344 <daemon@@Base+0x998>
   16374:	ldr	r3, [r4, #8]
   16378:	ldr	r0, [r6, #12]
   1637c:	orr	r1, r1, r0
   16380:	cmp	r3, #0
   16384:	beq	1631c <daemon@@Base+0x970>
   16388:	tst	r1, #16
   1638c:	beq	16330 <daemon@@Base+0x984>
   16390:	b	16344 <daemon@@Base+0x998>
   16394:	ldr	r1, [pc, #64]	; 163dc <daemon@@Base+0xa30>
   16398:	mov	r0, r9
   1639c:	bl	1baec <argp_parse@@Base+0x235c>
   163a0:	b	16344 <daemon@@Base+0x998>
   163a4:	add	r7, r7, #28
   163a8:	subs	r8, r8, #1
   163ac:	beq	1623c <daemon@@Base+0x890>
   163b0:	ldr	r4, [r7, #-28]	; 0xffffffe4
   163b4:	ldr	r5, [r7, #-24]	; 0xffffffe8
   163b8:	cmp	r5, #0
   163bc:	beq	163a4 <daemon@@Base+0x9f8>
   163c0:	mov	r6, r4
   163c4:	b	16350 <daemon@@Base+0x9a4>
   163c8:	andeq	r6, r1, r4, lsr r0
   163cc:	andeq	r6, r1, r4, ror r6
   163d0:	ldrdeq	sp, [r1], -ip
   163d4:	andeq	sp, r1, r4, asr #27
   163d8:	andeq	sp, r1, ip, asr #27
   163dc:	andeq	sp, r1, r8, ror #27
   163e0:	push	{r4, r5, r6, lr}
   163e4:	mov	r5, r0
   163e8:	ldr	r0, [r0, #12]
   163ec:	cmp	r0, #0
   163f0:	beq	16408 <daemon@@Base+0xa5c>
   163f4:	ldr	r4, [r0, #24]
   163f8:	bl	1a5dc <argp_parse@@Base+0xe4c>
   163fc:	mov	r0, r4
   16400:	cmp	r4, #0
   16404:	bne	163f4 <daemon@@Base+0xa48>
   16408:	ldr	r3, [r5, #4]
   1640c:	cmp	r3, #0
   16410:	bne	16420 <daemon@@Base+0xa74>
   16414:	mov	r0, r5
   16418:	bl	1a5dc <argp_parse@@Base+0xe4c>
   1641c:	pop	{r4, r5, r6, pc}
   16420:	ldr	r0, [r5]
   16424:	bl	1a5dc <argp_parse@@Base+0xe4c>
   16428:	ldr	r0, [r5, #8]
   1642c:	bl	1a5dc <argp_parse@@Base+0xe4c>
   16430:	b	16414 <daemon@@Base+0xa68>
   16434:	push	{r4, r5, r6, r7, r8, lr}
   16438:	mov	r6, r1
   1643c:	ldr	r7, [r0]
   16440:	ldr	r3, [r0, #4]
   16444:	sub	r8, r3, #1
   16448:	cmp	r3, #0
   1644c:	bne	164a8 <daemon@@Base+0xafc>
   16450:	mov	r7, #0
   16454:	b	16490 <daemon@@Base+0xae4>
   16458:	sub	r5, r5, #1
   1645c:	add	r4, r4, #24
   16460:	cmn	r5, #1
   16464:	beq	16498 <daemon@@Base+0xaec>
   16468:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1646c:	cmp	r0, #0
   16470:	beq	16458 <daemon@@Base+0xaac>
   16474:	ldr	r3, [r4, #-12]
   16478:	tst	r3, #2
   1647c:	bne	16458 <daemon@@Base+0xaac>
   16480:	mov	r1, r6
   16484:	bl	11684 <strcmp@plt>
   16488:	cmp	r0, #0
   1648c:	bne	16458 <daemon@@Base+0xaac>
   16490:	mov	r0, r7
   16494:	pop	{r4, r5, r6, r7, r8, pc}
   16498:	add	r7, r7, #28
   1649c:	sub	r8, r8, #1
   164a0:	cmn	r8, #1
   164a4:	beq	164c4 <daemon@@Base+0xb18>
   164a8:	ldr	r4, [r7]
   164ac:	ldr	r3, [r7, #4]
   164b0:	sub	r5, r3, #1
   164b4:	cmp	r3, #0
   164b8:	beq	16498 <daemon@@Base+0xaec>
   164bc:	add	r4, r4, #24
   164c0:	b	16468 <daemon@@Base+0xabc>
   164c4:	mov	r7, #0
   164c8:	b	16490 <daemon@@Base+0xae4>
   164cc:	push	{r4, r5, r6, lr}
   164d0:	ldr	r4, [r0, #16]
   164d4:	ldr	r0, [r0, #8]
   164d8:	cmp	r0, #0
   164dc:	moveq	r5, #0
   164e0:	beq	164f4 <daemon@@Base+0xb48>
   164e4:	mov	r1, #10
   164e8:	bl	11930 <strchr@plt>
   164ec:	adds	r5, r0, #0
   164f0:	movne	r5, #1
   164f4:	cmp	r4, #0
   164f8:	beq	1651c <daemon@@Base+0xb70>
   164fc:	ldr	r0, [r4]
   16500:	cmp	r0, #0
   16504:	beq	1651c <daemon@@Base+0xb70>
   16508:	bl	164cc <daemon@@Base+0xb20>
   1650c:	add	r5, r5, r0
   16510:	ldr	r0, [r4, #16]!
   16514:	cmp	r0, #0
   16518:	bne	16508 <daemon@@Base+0xb5c>
   1651c:	mov	r0, r5
   16520:	pop	{r4, r5, r6, pc}
   16524:	push	{r4, r5, r6, r7, r8, lr}
   16528:	mov	r4, r0
   1652c:	mov	r5, r1
   16530:	ldr	r3, [r0, #28]
   16534:	ldr	r2, [r0, #24]
   16538:	sub	r3, r3, r2
   1653c:	ldr	r2, [r0, #16]
   16540:	cmp	r3, r2
   16544:	bhi	16560 <daemon@@Base+0xbb4>
   16548:	ldr	r3, [r4, #20]
   1654c:	cmp	r3, #0
   16550:	subge	r5, r5, r3
   16554:	mov	r6, #32
   16558:	mov	r7, #1
   1655c:	b	1657c <daemon@@Base+0xbd0>
   16560:	bl	1b458 <argp_parse@@Base+0x1cc8>
   16564:	b	16548 <daemon@@Base+0xb9c>
   16568:	ldr	r3, [r4, #28]
   1656c:	add	r2, r3, #1
   16570:	str	r2, [r4, #28]
   16574:	strb	r6, [r3]
   16578:	sub	r5, r5, #1
   1657c:	cmp	r5, #0
   16580:	ble	165ac <daemon@@Base+0xc00>
   16584:	ldr	r2, [r4, #28]
   16588:	ldr	r3, [r4, #32]
   1658c:	cmp	r2, r3
   16590:	bcc	16568 <daemon@@Base+0xbbc>
   16594:	mov	r1, r7
   16598:	mov	r0, r4
   1659c:	bl	1b9fc <argp_parse@@Base+0x226c>
   165a0:	cmp	r0, #0
   165a4:	beq	16578 <daemon@@Base+0xbcc>
   165a8:	b	16568 <daemon@@Base+0xbbc>
   165ac:	pop	{r4, r5, r6, r7, r8, pc}
   165b0:	push	{r4, r5, r6, lr}
   165b4:	mov	r4, r0
   165b8:	mov	r5, r1
   165bc:	ldr	r3, [r0, #28]
   165c0:	ldr	r2, [r0, #24]
   165c4:	sub	r3, r3, r2
   165c8:	ldr	r2, [r0, #16]
   165cc:	cmp	r3, r2
   165d0:	bhi	16614 <daemon@@Base+0xc68>
   165d4:	ldr	r3, [r4, #20]
   165d8:	cmp	r3, #0
   165dc:	addge	r5, r5, r3
   165e0:	ldr	r3, [r4, #8]
   165e4:	cmp	r5, r3
   165e8:	bcc	16634 <daemon@@Base+0xc88>
   165ec:	ldr	r2, [r4, #28]
   165f0:	ldr	r3, [r4, #32]
   165f4:	cmp	r2, r3
   165f8:	bcs	1661c <daemon@@Base+0xc70>
   165fc:	ldr	r3, [r4, #28]
   16600:	add	r2, r3, #1
   16604:	str	r2, [r4, #28]
   16608:	mov	r2, #10
   1660c:	strb	r2, [r3]
   16610:	pop	{r4, r5, r6, pc}
   16614:	bl	1b458 <argp_parse@@Base+0x1cc8>
   16618:	b	165d4 <daemon@@Base+0xc28>
   1661c:	mov	r1, #1
   16620:	mov	r0, r4
   16624:	bl	1b9fc <argp_parse@@Base+0x226c>
   16628:	cmp	r0, #0
   1662c:	popeq	{r4, r5, r6, pc}
   16630:	b	165fc <daemon@@Base+0xc50>
   16634:	ldr	r2, [r4, #28]
   16638:	ldr	r3, [r4, #32]
   1663c:	cmp	r2, r3
   16640:	bcs	1665c <daemon@@Base+0xcb0>
   16644:	ldr	r3, [r4, #28]
   16648:	add	r2, r3, #1
   1664c:	str	r2, [r4, #28]
   16650:	mov	r2, #32
   16654:	strb	r2, [r3]
   16658:	pop	{r4, r5, r6, pc}
   1665c:	mov	r1, #1
   16660:	mov	r0, r4
   16664:	bl	1b9fc <argp_parse@@Base+0x226c>
   16668:	cmp	r0, #0
   1666c:	bne	16644 <daemon@@Base+0xc98>
   16670:	pop	{r4, r5, r6, pc}
   16674:	push	{r4, r5, r6, lr}
   16678:	ldr	r5, [r0, #8]
   1667c:	ldr	r2, [r0, #12]
   16680:	ldr	ip, [r1, #12]
   16684:	orr	r2, r2, ip
   16688:	cmp	r5, #0
   1668c:	beq	166d8 <daemon@@Base+0xd2c>
   16690:	tst	r2, #16
   16694:	bne	166d0 <daemon@@Base+0xd24>
   16698:	mov	r6, r3
   1669c:	mov	r4, r0
   166a0:	tst	r2, #1
   166a4:	bne	166e8 <daemon@@Base+0xd3c>
   166a8:	mov	r0, r5
   166ac:	bl	11918 <strlen@plt>
   166b0:	add	r1, r0, #6
   166b4:	mov	r0, r6
   166b8:	bl	165b0 <daemon@@Base+0xc04>
   166bc:	mov	r3, r5
   166c0:	ldr	r2, [r4, #4]
   166c4:	ldr	r1, [pc, #52]	; 16700 <daemon@@Base+0xd54>
   166c8:	mov	r0, r6
   166cc:	bl	1baec <argp_parse@@Base+0x235c>
   166d0:	mov	r0, #0
   166d4:	pop	{r4, r5, r6, pc}
   166d8:	ldr	r5, [r1, #8]
   166dc:	cmp	r5, #0
   166e0:	beq	166d0 <daemon@@Base+0xd24>
   166e4:	b	16690 <daemon@@Base+0xce4>
   166e8:	mov	r3, r5
   166ec:	ldr	r2, [r0, #4]
   166f0:	ldr	r1, [pc, #12]	; 16704 <daemon@@Base+0xd58>
   166f4:	mov	r0, r6
   166f8:	bl	1baec <argp_parse@@Base+0x235c>
   166fc:	b	166d0 <daemon@@Base+0xd24>
   16700:	strdeq	sp, [r1], -ip
   16704:	strdeq	sp, [r1], -r0
   16708:	push	{r4, r5, r6, lr}
   1670c:	subs	r5, r2, #0
   16710:	popeq	{r4, r5, r6, pc}
   16714:	ldr	ip, [r5, #20]
   16718:	cmp	ip, #0
   1671c:	popeq	{r4, r5, r6, pc}
   16720:	mov	r6, r1
   16724:	mov	r4, r0
   16728:	mov	r1, r3
   1672c:	mov	r0, r5
   16730:	bl	1a204 <argp_parse@@Base+0xa74>
   16734:	ldr	r3, [r5, #20]
   16738:	mov	r2, r0
   1673c:	mov	r1, r4
   16740:	mov	r0, r6
   16744:	blx	r3
   16748:	pop	{r4, r5, r6, pc}
   1674c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16750:	sub	sp, sp, #28
   16754:	str	r1, [sp, #16]
   16758:	mov	r8, r2
   1675c:	mov	r4, r3
   16760:	ldr	r5, [sp, #64]	; 0x40
   16764:	ldr	r3, [r2]
   16768:	mov	r6, r3
   1676c:	str	r3, [sp, #20]
   16770:	ldr	sl, [r0, #16]
   16774:	ldr	r2, [r0, #8]
   16778:	mov	ip, r2
   1677c:	str	r2, [sp, #12]
   16780:	mov	r3, r1
   16784:	mov	r2, r0
   16788:	ldr	r1, [pc, #424]	; 16938 <daemon@@Base+0xf8c>
   1678c:	mov	r0, ip
   16790:	bl	16708 <daemon@@Base+0xd5c>
   16794:	subs	r3, r0, #0
   16798:	str	r3, [sp, #8]
   1679c:	beq	16924 <daemon@@Base+0xf78>
   167a0:	mov	r1, #10
   167a4:	mov	r0, r3
   167a8:	bl	116fc <strchrnul@plt>
   167ac:	mov	r7, r0
   167b0:	ldrb	r3, [r0]
   167b4:	cmp	r3, #0
   167b8:	beq	168f4 <daemon@@Base+0xf48>
   167bc:	ldrb	fp, [r6]
   167c0:	cmp	fp, #0
   167c4:	ble	168ec <daemon@@Base+0xf40>
   167c8:	mov	r6, #0
   167cc:	add	r9, r0, #1
   167d0:	mov	r1, #10
   167d4:	mov	r0, r9
   167d8:	bl	116fc <strchrnul@plt>
   167dc:	add	r6, r6, #1
   167e0:	cmp	r6, fp
   167e4:	bne	167cc <daemon@@Base+0xe20>
   167e8:	mov	r7, r0
   167ec:	ldr	r3, [r8]
   167f0:	add	r3, r3, #1
   167f4:	str	r3, [r8]
   167f8:	mov	fp, #1
   167fc:	add	r1, r7, #1
   16800:	sub	r1, r1, r9
   16804:	mov	r0, r5
   16808:	bl	165b0 <daemon@@Base+0xc04>
   1680c:	sub	r6, r7, r9
   16810:	ldr	r3, [r5, #28]
   16814:	add	r3, r3, r6
   16818:	ldr	r2, [r5, #32]
   1681c:	cmp	r2, r3
   16820:	bcs	16838 <daemon@@Base+0xe8c>
   16824:	mov	r1, r6
   16828:	mov	r0, r5
   1682c:	bl	1b9fc <argp_parse@@Base+0x226c>
   16830:	cmp	r0, #0
   16834:	beq	16854 <daemon@@Base+0xea8>
   16838:	mov	r2, r6
   1683c:	mov	r1, r9
   16840:	ldr	r0, [r5, #28]
   16844:	bl	11744 <memcpy@plt>
   16848:	ldr	r3, [r5, #28]
   1684c:	add	r6, r3, r6
   16850:	str	r6, [r5, #28]
   16854:	ldr	r3, [sp, #12]
   16858:	ldr	r2, [sp, #8]
   1685c:	cmp	r3, r2
   16860:	bne	16900 <daemon@@Base+0xf54>
   16864:	cmp	sl, #0
   16868:	beq	168a8 <daemon@@Base+0xefc>
   1686c:	ldr	r0, [sl]
   16870:	cmp	r0, #0
   16874:	beq	168a8 <daemon@@Base+0xefc>
   16878:	mov	r3, r4
   1687c:	ldr	r4, [sp, #16]
   16880:	str	r5, [sp]
   16884:	mov	r2, r8
   16888:	mov	r1, r4
   1688c:	bl	1674c <daemon@@Base+0xda0>
   16890:	clz	r3, r0
   16894:	lsr	r3, r3, #5
   16898:	ldr	r0, [sl, #16]!
   1689c:	cmp	r0, #0
   168a0:	bne	16880 <daemon@@Base+0xed4>
   168a4:	mov	r4, r3
   168a8:	cmp	r4, #0
   168ac:	moveq	fp, #0
   168b0:	andne	fp, fp, #1
   168b4:	cmp	fp, #0
   168b8:	beq	168dc <daemon@@Base+0xf30>
   168bc:	ldrb	r3, [r7]
   168c0:	cmp	r3, #0
   168c4:	bne	1690c <daemon@@Base+0xf60>
   168c8:	ldr	r2, [sp, #20]
   168cc:	ldrb	r3, [r2]
   168d0:	cmp	r3, #0
   168d4:	movne	r3, #0
   168d8:	strbne	r3, [r2]
   168dc:	clz	r0, r4
   168e0:	lsr	r0, r0, #5
   168e4:	add	sp, sp, #28
   168e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168ec:	ldr	r9, [sp, #8]
   168f0:	b	167ec <daemon@@Base+0xe40>
   168f4:	ldr	r9, [sp, #8]
   168f8:	mov	fp, #0
   168fc:	b	167fc <daemon@@Base+0xe50>
   16900:	mov	r0, r2
   16904:	bl	1a5dc <argp_parse@@Base+0xe4c>
   16908:	b	16864 <daemon@@Base+0xeb8>
   1690c:	ldr	r2, [sp, #20]
   16910:	ldrb	r3, [r2]
   16914:	add	r3, r3, #1
   16918:	strb	r3, [r2]
   1691c:	mov	r4, #0
   16920:	b	168dc <daemon@@Base+0xf30>
   16924:	cmp	sl, #0
   16928:	beq	168dc <daemon@@Base+0xf30>
   1692c:	ldr	r7, [sp, #8]
   16930:	mov	fp, #0
   16934:	b	1686c <daemon@@Base+0xec0>
   16938:	andeq	r0, r0, #6
   1693c:	push	{r4, r5, r6, r7, r8, lr}
   16940:	mov	r7, r0
   16944:	mov	r4, r2
   16948:	ldr	r3, [r2, #16]
   1694c:	mov	r2, r1
   16950:	ldr	r1, [pc, #448]	; 16b18 <daemon@@Base+0x116c>
   16954:	bl	16708 <daemon@@Base+0xd5c>
   16958:	subs	r5, r0, #0
   1695c:	beq	16ab0 <daemon@@Base+0x1104>
   16960:	ldrb	r3, [r5]
   16964:	cmp	r3, #0
   16968:	beq	16aa4 <daemon@@Base+0x10f8>
   1696c:	ldr	r3, [r4, #8]
   16970:	ldr	r3, [r3]
   16974:	cmp	r3, #0
   16978:	beq	169a4 <daemon@@Base+0xff8>
   1697c:	ldr	r6, [r4, #4]
   16980:	ldr	r2, [r6, #28]
   16984:	ldr	r3, [r6, #32]
   16988:	cmp	r2, r3
   1698c:	bcs	16ac4 <daemon@@Base+0x1118>
   16990:	ldr	r3, [r6, #28]
   16994:	add	r2, r3, #1
   16998:	str	r2, [r6, #28]
   1699c:	mov	r2, #10
   169a0:	strb	r2, [r3]
   169a4:	ldr	r8, [pc, #368]	; 16b1c <daemon@@Base+0x1170>
   169a8:	ldr	r1, [r8, #24]
   169ac:	ldr	r0, [r4, #4]
   169b0:	bl	16524 <daemon@@Base+0xb78>
   169b4:	ldr	r6, [r4, #4]
   169b8:	ldr	r8, [r8, #24]
   169bc:	ldr	r3, [r6, #28]
   169c0:	ldr	r2, [r6, #24]
   169c4:	sub	r3, r3, r2
   169c8:	ldr	r2, [r6, #16]
   169cc:	cmp	r3, r2
   169d0:	bhi	16adc <daemon@@Base+0x1130>
   169d4:	str	r8, [r6, #4]
   169d8:	ldr	r6, [r4, #4]
   169dc:	ldr	r3, [pc, #312]	; 16b1c <daemon@@Base+0x1170>
   169e0:	ldr	r8, [r3, #24]
   169e4:	ldr	r3, [r6, #28]
   169e8:	ldr	r2, [r6, #24]
   169ec:	sub	r3, r3, r2
   169f0:	ldr	r2, [r6, #16]
   169f4:	cmp	r3, r2
   169f8:	bhi	16ae8 <daemon@@Base+0x113c>
   169fc:	str	r8, [r6, #12]
   16a00:	mov	r0, r5
   16a04:	bl	11918 <strlen@plt>
   16a08:	subs	r8, r0, #0
   16a0c:	beq	16a58 <daemon@@Base+0x10ac>
   16a10:	ldr	r6, [r4, #4]
   16a14:	ldr	r3, [r6, #28]
   16a18:	add	r3, r3, r8
   16a1c:	ldr	r2, [r6, #32]
   16a20:	cmp	r2, r3
   16a24:	bcs	16a3c <daemon@@Base+0x1090>
   16a28:	mov	r1, r8
   16a2c:	mov	r0, r6
   16a30:	bl	1b9fc <argp_parse@@Base+0x226c>
   16a34:	cmp	r0, #0
   16a38:	beq	16a58 <daemon@@Base+0x10ac>
   16a3c:	mov	r2, r8
   16a40:	mov	r1, r5
   16a44:	ldr	r0, [r6, #28]
   16a48:	bl	11744 <memcpy@plt>
   16a4c:	ldr	r3, [r6, #28]
   16a50:	add	r8, r3, r8
   16a54:	str	r8, [r6, #28]
   16a58:	ldr	r6, [r4, #4]
   16a5c:	ldr	r3, [r6, #28]
   16a60:	ldr	r2, [r6, #24]
   16a64:	sub	r3, r3, r2
   16a68:	ldr	r2, [r6, #16]
   16a6c:	cmp	r3, r2
   16a70:	bhi	16af4 <daemon@@Base+0x1148>
   16a74:	mov	r3, #0
   16a78:	str	r3, [r6, #4]
   16a7c:	ldr	r6, [r4, #4]
   16a80:	ldr	r2, [r6, #28]
   16a84:	ldr	r3, [r6, #32]
   16a88:	cmp	r2, r3
   16a8c:	bcs	16b00 <daemon@@Base+0x1154>
   16a90:	ldr	r3, [r6, #28]
   16a94:	add	r2, r3, #1
   16a98:	str	r2, [r6, #28]
   16a9c:	mov	r2, #10
   16aa0:	strb	r2, [r3]
   16aa4:	ldr	r3, [r4, #8]
   16aa8:	mov	r2, #1
   16aac:	str	r2, [r3, #4]
   16ab0:	cmp	r7, r5
   16ab4:	popeq	{r4, r5, r6, r7, r8, pc}
   16ab8:	mov	r0, r5
   16abc:	bl	1a5dc <argp_parse@@Base+0xe4c>
   16ac0:	pop	{r4, r5, r6, r7, r8, pc}
   16ac4:	mov	r1, #1
   16ac8:	mov	r0, r6
   16acc:	bl	1b9fc <argp_parse@@Base+0x226c>
   16ad0:	cmp	r0, #0
   16ad4:	beq	169a4 <daemon@@Base+0xff8>
   16ad8:	b	16990 <daemon@@Base+0xfe4>
   16adc:	mov	r0, r6
   16ae0:	bl	1b458 <argp_parse@@Base+0x1cc8>
   16ae4:	b	169d4 <daemon@@Base+0x1028>
   16ae8:	mov	r0, r6
   16aec:	bl	1b458 <argp_parse@@Base+0x1cc8>
   16af0:	b	169fc <daemon@@Base+0x1050>
   16af4:	mov	r0, r6
   16af8:	bl	1b458 <argp_parse@@Base+0x1cc8>
   16afc:	b	16a74 <daemon@@Base+0x10c8>
   16b00:	mov	r1, #1
   16b04:	mov	r0, r6
   16b08:	bl	1b9fc <argp_parse@@Base+0x226c>
   16b0c:	cmp	r0, #0
   16b10:	beq	16aa4 <daemon@@Base+0x10f8>
   16b14:	b	16a90 <daemon@@Base+0x10e4>
   16b18:	andeq	r0, r0, #3
   16b1c:	andeq	pc, r2, r0, lsl #11
   16b20:	push	{r4, r5, r6, r7, r8, lr}
   16b24:	mov	r6, r0
   16b28:	mov	r4, r1
   16b2c:	ldr	r3, [r1, #12]
   16b30:	cmp	r3, #0
   16b34:	beq	16c54 <daemon@@Base+0x12a8>
   16b38:	ldr	r3, [r1, #8]
   16b3c:	ldr	r7, [r3]
   16b40:	ldr	r2, [r1]
   16b44:	ldr	r5, [r2, #16]
   16b48:	ldr	r3, [r3, #4]
   16b4c:	cmp	r3, #0
   16b50:	cmpne	r7, #0
   16b54:	beq	16b90 <daemon@@Base+0x11e4>
   16b58:	ldr	r2, [r2, #12]
   16b5c:	ldr	r3, [r7, #12]
   16b60:	cmp	r2, r3
   16b64:	beq	16b90 <daemon@@Base+0x11e4>
   16b68:	ldr	r8, [r1, #4]
   16b6c:	ldr	r2, [r8, #28]
   16b70:	ldr	r3, [r8, #32]
   16b74:	cmp	r2, r3
   16b78:	bcs	16c30 <daemon@@Base+0x1284>
   16b7c:	ldr	r3, [r8, #28]
   16b80:	add	r2, r3, #1
   16b84:	str	r2, [r8, #28]
   16b88:	mov	r2, #10
   16b8c:	strb	r2, [r3]
   16b90:	cmp	r5, #0
   16b94:	beq	16c18 <daemon@@Base+0x126c>
   16b98:	ldr	r0, [r5]
   16b9c:	cmp	r0, #0
   16ba0:	beq	16c18 <daemon@@Base+0x126c>
   16ba4:	ldrb	r3, [r0]
   16ba8:	cmp	r3, #0
   16bac:	beq	16c18 <daemon@@Base+0x126c>
   16bb0:	cmp	r7, #0
   16bb4:	beq	16be4 <daemon@@Base+0x1238>
   16bb8:	ldr	r3, [r7, #16]
   16bbc:	cmp	r5, r3
   16bc0:	beq	16c18 <daemon@@Base+0x126c>
   16bc4:	cmp	r3, #0
   16bc8:	beq	16be4 <daemon@@Base+0x1238>
   16bcc:	ldr	r3, [r3, #12]
   16bd0:	cmp	r3, #0
   16bd4:	cmpne	r5, r3
   16bd8:	bne	16bcc <daemon@@Base+0x1220>
   16bdc:	cmp	r5, r3
   16be0:	beq	16c18 <daemon@@Base+0x126c>
   16be4:	ldr	r3, [r4, #4]
   16be8:	ldr	r7, [r3, #12]
   16bec:	mov	r2, r4
   16bf0:	ldr	r1, [r5, #16]
   16bf4:	bl	1693c <daemon@@Base+0xf90>
   16bf8:	ldr	r5, [r4, #4]
   16bfc:	ldr	r3, [r5, #28]
   16c00:	ldr	r2, [r5, #24]
   16c04:	sub	r3, r3, r2
   16c08:	ldr	r2, [r5, #16]
   16c0c:	cmp	r3, r2
   16c10:	bhi	16c48 <daemon@@Base+0x129c>
   16c14:	str	r7, [r5, #12]
   16c18:	mov	r3, #0
   16c1c:	str	r3, [r4, #12]
   16c20:	mov	r1, r6
   16c24:	ldr	r0, [r4, #4]
   16c28:	bl	16524 <daemon@@Base+0xb78>
   16c2c:	pop	{r4, r5, r6, r7, r8, pc}
   16c30:	mov	r1, #1
   16c34:	mov	r0, r8
   16c38:	bl	1b9fc <argp_parse@@Base+0x226c>
   16c3c:	cmp	r0, #0
   16c40:	beq	16b90 <daemon@@Base+0x11e4>
   16c44:	b	16b7c <daemon@@Base+0x11d0>
   16c48:	mov	r0, r5
   16c4c:	bl	1b458 <argp_parse@@Base+0x1cc8>
   16c50:	b	16c14 <daemon@@Base+0x1268>
   16c54:	ldr	r5, [r1, #4]
   16c58:	ldr	r3, [r5, #28]
   16c5c:	add	r3, r3, #2
   16c60:	ldr	r2, [r5, #32]
   16c64:	cmp	r2, r3
   16c68:	bcs	16c80 <daemon@@Base+0x12d4>
   16c6c:	mov	r1, #2
   16c70:	mov	r0, r5
   16c74:	bl	1b9fc <argp_parse@@Base+0x226c>
   16c78:	cmp	r0, #0
   16c7c:	beq	16c20 <daemon@@Base+0x1274>
   16c80:	ldr	r3, [r5, #28]
   16c84:	ldr	r2, [pc, #20]	; 16ca0 <daemon@@Base+0x12f4>
   16c88:	ldrh	r2, [r2]
   16c8c:	strh	r2, [r3]
   16c90:	ldr	r3, [r5, #28]
   16c94:	add	r3, r3, #2
   16c98:	str	r3, [r5, #28]
   16c9c:	b	16c20 <daemon@@Base+0x1274>
   16ca0:	andeq	sp, r1, r8, lsl #28
   16ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ca8:	sub	sp, sp, #28
   16cac:	mov	fp, r0
   16cb0:	str	r1, [sp, #8]
   16cb4:	mov	r6, r2
   16cb8:	mov	r8, r3
   16cbc:	ldr	r7, [sp, #64]	; 0x40
   16cc0:	ldr	r5, [sp, #68]	; 0x44
   16cc4:	ldr	r9, [r0, #12]
   16cc8:	ldr	r3, [r0, #16]
   16ccc:	str	r3, [sp, #16]
   16cd0:	cmp	r9, #0
   16cd4:	beq	17130 <daemon@@Base+0x1784>
   16cd8:	mov	r1, #11
   16cdc:	mov	r0, r9
   16ce0:	bl	11930 <strchr@plt>
   16ce4:	cmp	r6, #0
   16ce8:	beq	16fe0 <daemon@@Base+0x1634>
   16cec:	cmp	r0, #0
   16cf0:	addne	r9, r0, #1
   16cf4:	beq	17118 <daemon@@Base+0x176c>
   16cf8:	ldr	r3, [fp, #20]
   16cfc:	cmp	r3, #0
   16d00:	movne	sl, #0
   16d04:	beq	17120 <daemon@@Base+0x1774>
   16d08:	ldr	r1, [sp, #8]
   16d0c:	mov	r0, fp
   16d10:	bl	1a204 <argp_parse@@Base+0xa74>
   16d14:	str	r0, [sp, #12]
   16d18:	ldr	r3, [fp, #20]
   16d1c:	ldr	r2, [pc, #1140]	; 17198 <daemon@@Base+0x17ec>
   16d20:	ldr	r0, [pc, #1140]	; 1719c <daemon@@Base+0x17f0>
   16d24:	cmp	r6, #0
   16d28:	moveq	r0, r2
   16d2c:	ldr	r2, [sp, #12]
   16d30:	mov	r1, r9
   16d34:	blx	r3
   16d38:	mov	r4, r0
   16d3c:	cmp	r4, #0
   16d40:	beq	170d0 <daemon@@Base+0x1724>
   16d44:	cmp	r8, #0
   16d48:	beq	16d70 <daemon@@Base+0x13c4>
   16d4c:	ldr	r2, [r5, #28]
   16d50:	ldr	r3, [r5, #32]
   16d54:	cmp	r2, r3
   16d58:	bcs	17024 <daemon@@Base+0x1678>
   16d5c:	ldr	r3, [r5, #28]
   16d60:	add	r2, r3, #1
   16d64:	str	r2, [r5, #28]
   16d68:	mov	r2, #10
   16d6c:	strb	r2, [r3]
   16d70:	cmp	r4, r9
   16d74:	movne	r3, #0
   16d78:	moveq	r3, #1
   16d7c:	cmp	sl, #0
   16d80:	moveq	r3, #0
   16d84:	cmp	r3, #0
   16d88:	beq	1703c <daemon@@Base+0x1690>
   16d8c:	ldr	r3, [r5, #28]
   16d90:	add	r3, r3, sl
   16d94:	ldr	r2, [r5, #32]
   16d98:	cmp	r2, r3
   16d9c:	bcs	16db4 <daemon@@Base+0x1408>
   16da0:	mov	r1, sl
   16da4:	mov	r0, r5
   16da8:	bl	1b9fc <argp_parse@@Base+0x226c>
   16dac:	cmp	r0, #0
   16db0:	beq	16dd0 <daemon@@Base+0x1424>
   16db4:	mov	r2, sl
   16db8:	mov	r1, r9
   16dbc:	ldr	r0, [r5, #28]
   16dc0:	bl	11744 <memcpy@plt>
   16dc4:	ldr	r3, [r5, #28]
   16dc8:	add	r3, r3, sl
   16dcc:	str	r3, [r5, #28]
   16dd0:	ldr	r3, [r5, #28]
   16dd4:	ldr	r2, [r5, #24]
   16dd8:	sub	r3, r3, r2
   16ddc:	ldr	r2, [r5, #16]
   16de0:	cmp	r3, r2
   16de4:	bhi	1709c <daemon@@Base+0x16f0>
   16de8:	ldr	r3, [r5, #20]
   16dec:	bic	r3, r3, r3, asr #31
   16df0:	ldr	r2, [r5, #4]
   16df4:	cmp	r2, r3
   16df8:	bcs	16e20 <daemon@@Base+0x1474>
   16dfc:	ldr	r2, [r5, #28]
   16e00:	ldr	r3, [r5, #32]
   16e04:	cmp	r2, r3
   16e08:	bcs	170a8 <daemon@@Base+0x16fc>
   16e0c:	ldr	r3, [r5, #28]
   16e10:	add	r2, r3, #1
   16e14:	str	r2, [r5, #28]
   16e18:	mov	r2, #10
   16e1c:	strb	r2, [r3]
   16e20:	cmp	r4, r9
   16e24:	moveq	r4, #1
   16e28:	bne	170c0 <daemon@@Base+0x1714>
   16e2c:	cmp	r9, #0
   16e30:	cmpne	sl, #0
   16e34:	beq	16e4c <daemon@@Base+0x14a0>
   16e38:	ldr	r3, [fp, #20]
   16e3c:	cmp	r3, #0
   16e40:	beq	16f58 <daemon@@Base+0x15ac>
   16e44:	mov	r0, r9
   16e48:	bl	1a5dc <argp_parse@@Base+0xe4c>
   16e4c:	cmp	r6, #0
   16e50:	beq	16f58 <daemon@@Base+0x15ac>
   16e54:	ldr	r3, [fp, #20]
   16e58:	cmp	r3, #0
   16e5c:	beq	16f58 <daemon@@Base+0x15ac>
   16e60:	ldr	r2, [sp, #12]
   16e64:	mov	r1, #0
   16e68:	ldr	r0, [pc, #816]	; 171a0 <daemon@@Base+0x17f4>
   16e6c:	blx	r3
   16e70:	subs	r9, r0, #0
   16e74:	beq	16f58 <daemon@@Base+0x15ac>
   16e78:	orrs	r3, r8, r4
   16e7c:	beq	16ea4 <daemon@@Base+0x14f8>
   16e80:	ldr	r2, [r5, #28]
   16e84:	ldr	r3, [r5, #32]
   16e88:	cmp	r2, r3
   16e8c:	bcs	170d8 <daemon@@Base+0x172c>
   16e90:	ldr	r3, [r5, #28]
   16e94:	add	r2, r3, #1
   16e98:	str	r2, [r5, #28]
   16e9c:	mov	r2, #10
   16ea0:	strb	r2, [r3]
   16ea4:	mov	r0, r9
   16ea8:	bl	11918 <strlen@plt>
   16eac:	subs	r4, r0, #0
   16eb0:	beq	16ef8 <daemon@@Base+0x154c>
   16eb4:	ldr	r3, [r5, #28]
   16eb8:	add	r3, r3, r4
   16ebc:	ldr	r2, [r5, #32]
   16ec0:	cmp	r2, r3
   16ec4:	bcs	16edc <daemon@@Base+0x1530>
   16ec8:	mov	r1, r4
   16ecc:	mov	r0, r5
   16ed0:	bl	1b9fc <argp_parse@@Base+0x226c>
   16ed4:	cmp	r0, #0
   16ed8:	beq	16ef8 <daemon@@Base+0x154c>
   16edc:	mov	r2, r4
   16ee0:	mov	r1, r9
   16ee4:	ldr	r0, [r5, #28]
   16ee8:	bl	11744 <memcpy@plt>
   16eec:	ldr	r3, [r5, #28]
   16ef0:	add	r4, r3, r4
   16ef4:	str	r4, [r5, #28]
   16ef8:	mov	r0, r9
   16efc:	bl	1a5dc <argp_parse@@Base+0xe4c>
   16f00:	ldr	r3, [r5, #28]
   16f04:	ldr	r2, [r5, #24]
   16f08:	sub	r3, r3, r2
   16f0c:	ldr	r2, [r5, #16]
   16f10:	cmp	r3, r2
   16f14:	bhi	170f0 <daemon@@Base+0x1744>
   16f18:	ldr	r3, [r5, #20]
   16f1c:	bic	r3, r3, r3, asr #31
   16f20:	ldr	r2, [r5, #4]
   16f24:	cmp	r2, r3
   16f28:	movcs	r4, #1
   16f2c:	bcs	16f58 <daemon@@Base+0x15ac>
   16f30:	ldr	r2, [r5, #28]
   16f34:	ldr	r3, [r5, #32]
   16f38:	cmp	r2, r3
   16f3c:	bcs	170fc <daemon@@Base+0x1750>
   16f40:	ldr	r3, [r5, #28]
   16f44:	add	r2, r3, #1
   16f48:	str	r2, [r5, #28]
   16f4c:	mov	r2, #10
   16f50:	strb	r2, [r3]
   16f54:	mov	r4, #1
   16f58:	ldr	r3, [sp, #16]
   16f5c:	cmp	r3, #0
   16f60:	beq	16fd4 <daemon@@Base+0x1628>
   16f64:	ldr	r0, [r3]
   16f68:	cmp	r0, #0
   16f6c:	beq	16fd4 <daemon@@Base+0x1628>
   16f70:	clz	r9, r7
   16f74:	lsr	r9, r9, #5
   16f78:	cmp	r7, #0
   16f7c:	cmpne	r4, #0
   16f80:	bne	16fd4 <daemon@@Base+0x1628>
   16f84:	mov	sl, r3
   16f88:	ldr	fp, [sp, #8]
   16f8c:	orrs	r3, r8, r4
   16f90:	str	r5, [sp, #4]
   16f94:	str	r7, [sp]
   16f98:	movne	r3, #1
   16f9c:	moveq	r3, #0
   16fa0:	mov	r2, r6
   16fa4:	mov	r1, fp
   16fa8:	bl	16ca4 <daemon@@Base+0x12f8>
   16fac:	orr	r4, r4, r0
   16fb0:	ldr	r0, [sl, #16]
   16fb4:	cmp	r0, #0
   16fb8:	beq	16fd4 <daemon@@Base+0x1628>
   16fbc:	add	sl, sl, #16
   16fc0:	cmp	r4, #0
   16fc4:	movne	r3, r9
   16fc8:	orreq	r3, r9, #1
   16fcc:	cmp	r3, #0
   16fd0:	bne	16f8c <daemon@@Base+0x15e0>
   16fd4:	mov	r0, r4
   16fd8:	add	sp, sp, #28
   16fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fe0:	cmp	r0, #0
   16fe4:	beq	17168 <daemon@@Base+0x17bc>
   16fe8:	sub	sl, r0, r9
   16fec:	ldr	r3, [fp, #20]
   16ff0:	cmp	r3, #0
   16ff4:	beq	17014 <daemon@@Base+0x1668>
   16ff8:	cmp	sl, #0
   16ffc:	beq	16d08 <daemon@@Base+0x135c>
   17000:	mov	r1, sl
   17004:	mov	r0, r9
   17008:	bl	1172c <strndup@plt>
   1700c:	mov	r9, r0
   17010:	b	16d08 <daemon@@Base+0x135c>
   17014:	mov	r4, r9
   17018:	mov	r3, #0
   1701c:	str	r3, [sp, #12]
   17020:	b	16d44 <daemon@@Base+0x1398>
   17024:	mov	r1, #1
   17028:	mov	r0, r5
   1702c:	bl	1b9fc <argp_parse@@Base+0x226c>
   17030:	cmp	r0, #0
   17034:	beq	16d70 <daemon@@Base+0x13c4>
   17038:	b	16d5c <daemon@@Base+0x13b0>
   1703c:	mov	r0, r4
   17040:	bl	11918 <strlen@plt>
   17044:	subs	r3, r0, #0
   17048:	mov	r1, r3
   1704c:	str	r3, [sp, #20]
   17050:	beq	16dd0 <daemon@@Base+0x1424>
   17054:	ldr	r3, [r5, #28]
   17058:	add	r3, r3, r1
   1705c:	ldr	r2, [r5, #32]
   17060:	cmp	r2, r3
   17064:	bcs	17078 <daemon@@Base+0x16cc>
   17068:	mov	r0, r5
   1706c:	bl	1b9fc <argp_parse@@Base+0x226c>
   17070:	cmp	r0, #0
   17074:	beq	16dd0 <daemon@@Base+0x1424>
   17078:	ldr	r2, [sp, #20]
   1707c:	mov	r1, r4
   17080:	ldr	r0, [r5, #28]
   17084:	bl	11744 <memcpy@plt>
   17088:	ldr	r3, [r5, #28]
   1708c:	ldr	r2, [sp, #20]
   17090:	add	r3, r3, r2
   17094:	str	r3, [r5, #28]
   17098:	b	16dd0 <daemon@@Base+0x1424>
   1709c:	mov	r0, r5
   170a0:	bl	1b458 <argp_parse@@Base+0x1cc8>
   170a4:	b	16de8 <daemon@@Base+0x143c>
   170a8:	mov	r1, #1
   170ac:	mov	r0, r5
   170b0:	bl	1b9fc <argp_parse@@Base+0x226c>
   170b4:	cmp	r0, #0
   170b8:	beq	16e20 <daemon@@Base+0x1474>
   170bc:	b	16e0c <daemon@@Base+0x1460>
   170c0:	mov	r0, r4
   170c4:	bl	1a5dc <argp_parse@@Base+0xe4c>
   170c8:	mov	r4, #1
   170cc:	b	16e2c <daemon@@Base+0x1480>
   170d0:	mov	r4, #0
   170d4:	b	16e2c <daemon@@Base+0x1480>
   170d8:	mov	r1, #1
   170dc:	mov	r0, r5
   170e0:	bl	1b9fc <argp_parse@@Base+0x226c>
   170e4:	cmp	r0, #0
   170e8:	beq	16ea4 <daemon@@Base+0x14f8>
   170ec:	b	16e90 <daemon@@Base+0x14e4>
   170f0:	mov	r0, r5
   170f4:	bl	1b458 <argp_parse@@Base+0x1cc8>
   170f8:	b	16f18 <daemon@@Base+0x156c>
   170fc:	mov	r1, #1
   17100:	mov	r0, r5
   17104:	bl	1b9fc <argp_parse@@Base+0x226c>
   17108:	cmp	r0, #0
   1710c:	moveq	r4, #1
   17110:	beq	16f58 <daemon@@Base+0x15ac>
   17114:	b	16f40 <daemon@@Base+0x1594>
   17118:	mov	r9, #0
   1711c:	b	16cf8 <daemon@@Base+0x134c>
   17120:	mov	r4, r9
   17124:	mov	sl, #0
   17128:	str	sl, [sp, #12]
   1712c:	b	16d3c <daemon@@Base+0x1390>
   17130:	ldr	r3, [r0, #20]
   17134:	cmp	r3, #0
   17138:	movne	sl, #0
   1713c:	bne	16d08 <daemon@@Base+0x135c>
   17140:	mov	r3, r9
   17144:	cmp	r9, #0
   17148:	moveq	r4, #0
   1714c:	streq	r4, [sp, #12]
   17150:	beq	16e4c <daemon@@Base+0x14a0>
   17154:	mov	r4, r9
   17158:	mov	r9, r3
   1715c:	mov	sl, #0
   17160:	str	sl, [sp, #12]
   17164:	b	16d44 <daemon@@Base+0x1398>
   17168:	ldr	r3, [fp, #20]
   1716c:	cmp	r3, #0
   17170:	moveq	r3, r9
   17174:	beq	17144 <daemon@@Base+0x1798>
   17178:	ldr	r1, [sp, #8]
   1717c:	mov	r0, fp
   17180:	bl	1a204 <argp_parse@@Base+0xa74>
   17184:	str	r0, [sp, #12]
   17188:	ldr	r3, [fp, #20]
   1718c:	mov	sl, #0
   17190:	ldr	r0, [pc]	; 17198 <daemon@@Base+0x17ec>
   17194:	b	16d2c <daemon@@Base+0x1380>
   17198:	andeq	r0, r0, #1
   1719c:	andeq	r0, r0, #2
   171a0:	andeq	r0, r0, #4
   171a4:	ldr	r3, [r0, #12]
   171a8:	ldr	r2, [r1, #12]
   171ac:	cmp	r3, r2
   171b0:	beq	17208 <daemon@@Base+0x185c>
   171b4:	push	{r4, r5, r6, lr}
   171b8:	mov	r5, r1
   171bc:	mov	r4, r0
   171c0:	mov	r1, r2
   171c4:	mov	r0, r3
   171c8:	bl	171a4 <daemon@@Base+0x17f8>
   171cc:	subs	r3, r0, #0
   171d0:	bne	17200 <daemon@@Base+0x1854>
   171d4:	ldr	r0, [r4, #8]
   171d8:	ldr	r3, [r5, #8]
   171dc:	mvn	r2, r3
   171e0:	lsr	r2, r2, #31
   171e4:	cmp	r2, r0, lsr #31
   171e8:	subne	r3, r0, r3
   171ec:	subeq	r3, r3, r0
   171f0:	cmp	r3, #0
   171f4:	ldreq	r3, [r5, #4]
   171f8:	ldreq	r0, [r4, #4]
   171fc:	subeq	r3, r3, r0
   17200:	mov	r0, r3
   17204:	pop	{r4, r5, r6, pc}
   17208:	ldr	r2, [r0, #8]
   1720c:	ldr	r3, [r1, #8]
   17210:	mvn	ip, r3
   17214:	lsr	ip, ip, #31
   17218:	cmp	ip, r2, lsr #31
   1721c:	subne	r3, r2, r3
   17220:	subeq	r3, r3, r2
   17224:	cmp	r3, #0
   17228:	ldreq	r3, [r1, #4]
   1722c:	ldreq	r0, [r0, #4]
   17230:	subeq	r3, r3, r0
   17234:	mov	r0, r3
   17238:	bx	lr
   1723c:	push	{r4, r5, r6, r7, r8, lr}
   17240:	sub	sp, sp, #8
   17244:	ldr	lr, [r0, #16]
   17248:	cmp	lr, #0
   1724c:	movne	r2, lr
   17250:	bne	17260 <daemon@@Base+0x18b4>
   17254:	ldr	ip, [r0, #12]
   17258:	b	17270 <daemon@@Base+0x18c4>
   1725c:	mov	r2, r3
   17260:	ldr	r3, [r2, #12]
   17264:	cmp	r3, #0
   17268:	bne	1725c <daemon@@Base+0x18b0>
   1726c:	ldr	ip, [r2, #8]
   17270:	ldr	r5, [r1, #16]
   17274:	cmp	r5, #0
   17278:	movne	r2, r5
   1727c:	bne	1728c <daemon@@Base+0x18e0>
   17280:	ldr	r4, [r1, #12]
   17284:	b	1729c <daemon@@Base+0x18f0>
   17288:	mov	r2, r3
   1728c:	ldr	r3, [r2, #12]
   17290:	cmp	r3, #0
   17294:	bne	17288 <daemon@@Base+0x18dc>
   17298:	ldr	r4, [r2, #8]
   1729c:	mvn	r3, r4
   172a0:	lsr	r3, r3, #31
   172a4:	cmp	r3, ip, lsr #31
   172a8:	subne	r4, ip, r4
   172ac:	subeq	r4, r4, ip
   172b0:	cmp	r4, #0
   172b4:	bne	1731c <daemon@@Base+0x1970>
   172b8:	adds	r4, r5, #0
   172bc:	movne	r4, #1
   172c0:	cmp	lr, #0
   172c4:	rsbeq	r4, r4, #0
   172c8:	rsbne	r4, r4, #1
   172cc:	cmp	r4, #0
   172d0:	bne	1731c <daemon@@Base+0x1970>
   172d4:	mov	r6, r1
   172d8:	mov	r7, r0
   172dc:	cmp	lr, #0
   172e0:	beq	1736c <daemon@@Base+0x19c0>
   172e4:	ldr	ip, [lr, #20]
   172e8:	ldr	r2, [r5, #20]
   172ec:	cmp	ip, r2
   172f0:	ble	17328 <daemon@@Base+0x197c>
   172f4:	mov	r0, lr
   172f8:	ldr	r0, [r0, #12]
   172fc:	ldr	r3, [r0, #20]
   17300:	cmp	r2, r3
   17304:	blt	172f8 <daemon@@Base+0x194c>
   17308:	mov	r1, r5
   1730c:	bl	171a4 <daemon@@Base+0x17f8>
   17310:	subs	r4, r0, #0
   17314:	cmp	r0, #0
   17318:	moveq	r4, #1
   1731c:	mov	r0, r4
   17320:	add	sp, sp, #8
   17324:	pop	{r4, r5, r6, r7, r8, pc}
   17328:	cmp	ip, r2
   1732c:	bge	17358 <daemon@@Base+0x19ac>
   17330:	mov	r1, r5
   17334:	ldr	r1, [r1, #12]
   17338:	ldr	r3, [r1, #20]
   1733c:	cmp	ip, r3
   17340:	blt	17334 <daemon@@Base+0x1988>
   17344:	mov	r0, lr
   17348:	bl	171a4 <daemon@@Base+0x17f8>
   1734c:	subs	r4, r0, #0
   17350:	mvneq	r4, #0
   17354:	b	1731c <daemon@@Base+0x1970>
   17358:	mov	r1, r5
   1735c:	mov	r0, lr
   17360:	bl	171a4 <daemon@@Base+0x17f8>
   17364:	subs	r4, r0, #0
   17368:	bne	1731c <daemon@@Base+0x1970>
   1736c:	ldr	r3, [r7, #12]
   17370:	ldr	r4, [r6, #12]
   17374:	mvn	r2, r4
   17378:	lsr	r2, r2, #31
   1737c:	cmp	r2, r3, lsr #31
   17380:	subne	r4, r3, r4
   17384:	subeq	r4, r4, r3
   17388:	cmp	r4, #0
   1738c:	bne	1731c <daemon@@Base+0x1970>
   17390:	mov	r0, r7
   17394:	bl	15fe4 <daemon@@Base+0x638>
   17398:	mov	r5, r0
   1739c:	str	r0, [sp]
   173a0:	mov	r0, r6
   173a4:	bl	15fe4 <daemon@@Base+0x638>
   173a8:	str	r0, [sp, #4]
   173ac:	ldr	r3, [r7]
   173b0:	ldr	r3, [r3, #12]
   173b4:	adds	r5, r5, #0
   173b8:	movne	r5, #1
   173bc:	ands	r3, r5, r3, lsr #3
   173c0:	beq	17504 <daemon@@Base+0x1b58>
   173c4:	mov	r0, sp
   173c8:	bl	161a8 <daemon@@Base+0x7fc>
   173cc:	adds	r5, r0, #0
   173d0:	movne	r5, #1
   173d4:	ldr	r3, [r6]
   173d8:	ldr	r0, [r3, #12]
   173dc:	ands	r0, r0, #8
   173e0:	beq	17400 <daemon@@Base+0x1a54>
   173e4:	ldr	r3, [sp, #4]
   173e8:	cmp	r3, #0
   173ec:	beq	174fc <daemon@@Base+0x1b50>
   173f0:	add	r0, sp, #4
   173f4:	bl	161a8 <daemon@@Base+0x7fc>
   173f8:	adds	r0, r0, #0
   173fc:	movne	r0, #1
   17400:	subs	r4, r5, r0
   17404:	bne	1731c <daemon@@Base+0x1970>
   17408:	ldr	r2, [r7, #20]
   1740c:	ldr	r4, [pc, #276]	; 17528 <daemon@@Base+0x1b7c>
   17410:	mov	r3, #0
   17414:	ldr	r2, [r2, #24]
   17418:	mov	r1, r4
   1741c:	mov	r0, r7
   17420:	bl	1607c <daemon@@Base+0x6d0>
   17424:	mov	r5, r0
   17428:	uxtb	r8, r0
   1742c:	ldr	r2, [r6, #20]
   17430:	mov	r3, #0
   17434:	ldr	r2, [r2, #24]
   17438:	mov	r1, r4
   1743c:	mov	r0, r6
   17440:	bl	1607c <daemon@@Base+0x6d0>
   17444:	uxtb	r7, r0
   17448:	cmp	r8, #0
   1744c:	movne	r5, r8
   17450:	bne	17464 <daemon@@Base+0x1ab8>
   17454:	ldr	r3, [sp]
   17458:	cmp	r3, #0
   1745c:	ldrbne	r5, [r3]
   17460:	moveq	r5, #0
   17464:	cmp	r7, #0
   17468:	uxtbne	r6, r0
   1746c:	bne	17480 <daemon@@Base+0x1ad4>
   17470:	ldr	r3, [sp, #4]
   17474:	cmp	r3, #0
   17478:	ldrbne	r6, [r3]
   1747c:	moveq	r6, #0
   17480:	bl	118c4 <__ctype_tolower_loc@plt>
   17484:	ldr	r3, [r0]
   17488:	ldr	r4, [r3, r5, lsl #2]
   1748c:	ldr	r3, [r3, r6, lsl #2]
   17490:	subs	r4, r4, r3
   17494:	bne	1731c <daemon@@Base+0x1970>
   17498:	subs	r4, r6, r5
   1749c:	bne	1731c <daemon@@Base+0x1970>
   174a0:	adds	r4, r7, #0
   174a4:	movne	r4, #1
   174a8:	cmp	r8, #0
   174ac:	rsbeq	r4, r4, #0
   174b0:	rsbne	r4, r4, #1
   174b4:	cmp	r4, #0
   174b8:	bne	1731c <daemon@@Base+0x1970>
   174bc:	cmp	r8, #0
   174c0:	bne	1731c <daemon@@Base+0x1970>
   174c4:	ldr	r0, [sp]
   174c8:	ldr	r1, [sp, #4]
   174cc:	adds	r4, r1, #0
   174d0:	movne	r4, #1
   174d4:	cmp	r0, #0
   174d8:	rsbeq	r4, r4, #0
   174dc:	rsbne	r4, r4, #1
   174e0:	cmp	r4, #0
   174e4:	bne	1731c <daemon@@Base+0x1970>
   174e8:	cmp	r0, #0
   174ec:	beq	1731c <daemon@@Base+0x1970>
   174f0:	bl	117f8 <strcasecmp@plt>
   174f4:	mov	r4, r0
   174f8:	b	1731c <daemon@@Base+0x1970>
   174fc:	mov	r0, r4
   17500:	b	17400 <daemon@@Base+0x1a54>
   17504:	ldr	r3, [r6]
   17508:	ldr	r3, [r3, #12]
   1750c:	tst	r3, #8
   17510:	beq	17408 <daemon@@Base+0x1a5c>
   17514:	ldr	r3, [sp, #4]
   17518:	cmp	r3, #0
   1751c:	movne	r5, r4
   17520:	bne	173f0 <daemon@@Base+0x1a44>
   17524:	b	17408 <daemon@@Base+0x1a5c>
   17528:	andeq	r6, r1, r0, ror #2
   1752c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17530:	sub	sp, sp, #52	; 0x34
   17534:	str	r0, [sp, #24]
   17538:	str	r1, [sp, #28]
   1753c:	ldr	r2, [r0, #16]
   17540:	str	r2, [sp, #8]
   17544:	ldr	r5, [r0]
   17548:	mov	r0, #16
   1754c:	bl	1b360 <argp_parse@@Base+0x1bd0>
   17550:	subs	fp, r0, #0
   17554:	beq	17584 <daemon@@Base+0x1bd8>
   17558:	mov	r3, #0
   1755c:	str	r3, [fp, #4]
   17560:	str	r3, [fp, #12]
   17564:	cmp	r5, r3
   17568:	beq	1775c <daemon@@Base+0x1db0>
   1756c:	ldr	r4, [r5, #12]
   17570:	ands	r4, r4, #4
   17574:	bne	17598 <daemon@@Base+0x1bec>
   17578:	add	r6, r5, #24
   1757c:	mov	r8, r3
   17580:	b	175c0 <daemon@@Base+0x1c14>
   17584:	ldr	r3, [pc, #1576]	; 17bb4 <daemon@@Base+0x2208>
   17588:	ldr	r2, [pc, #1576]	; 17bb8 <daemon@@Base+0x220c>
   1758c:	ldr	r1, [pc, #1576]	; 17bbc <daemon@@Base+0x2210>
   17590:	ldr	r0, [pc, #1576]	; 17bc0 <daemon@@Base+0x2214>
   17594:	bl	11b10 <__assert_fail@plt>
   17598:	ldr	r3, [pc, #1556]	; 17bb4 <daemon@@Base+0x2208>
   1759c:	mov	r2, #460	; 0x1cc
   175a0:	ldr	r1, [pc, #1556]	; 17bbc <daemon@@Base+0x2210>
   175a4:	ldr	r0, [pc, #1560]	; 17bc4 <daemon@@Base+0x2218>
   175a8:	bl	11b10 <__assert_fail@plt>
   175ac:	ldr	r2, [fp, #4]
   175b0:	add	r2, r2, #1
   175b4:	str	r2, [fp, #4]
   175b8:	b	175e8 <daemon@@Base+0x1c3c>
   175bc:	add	r6, r6, #24
   175c0:	mov	r3, r6
   175c4:	ldr	r2, [r6, #-20]	; 0xffffffec
   175c8:	cmp	r2, #0
   175cc:	bne	175dc <daemon@@Base+0x1c30>
   175d0:	ldr	r2, [r6, #-24]	; 0xffffffe8
   175d4:	cmp	r2, #0
   175d8:	beq	17620 <daemon@@Base+0x1c74>
   175dc:	ldr	r2, [r3, #-12]
   175e0:	tst	r2, #4
   175e4:	beq	175ac <daemon@@Base+0x1c00>
   175e8:	ldr	r2, [r3, #-12]
   175ec:	tst	r2, #8
   175f0:	bne	175bc <daemon@@Base+0x1c10>
   175f4:	ldr	r7, [r3, #-20]	; 0xffffffec
   175f8:	sub	r3, r7, #1
   175fc:	cmp	r3, #254	; 0xfe
   17600:	bhi	175bc <daemon@@Base+0x1c10>
   17604:	bl	118f4 <__ctype_b_loc@plt>
   17608:	ldr	r3, [r0]
   1760c:	lsl	r7, r7, #1
   17610:	ldrh	r3, [r3, r7]
   17614:	tst	r3, #16384	; 0x4000
   17618:	addne	r8, r8, #1
   1761c:	b	175bc <daemon@@Base+0x1c10>
   17620:	ldr	r2, [r6, #-8]
   17624:	cmp	r2, #0
   17628:	bne	175dc <daemon@@Base+0x1c30>
   1762c:	ldr	r2, [r6, #-4]
   17630:	cmp	r2, #0
   17634:	bne	175dc <daemon@@Base+0x1c30>
   17638:	ldr	r0, [fp, #4]
   1763c:	rsb	r0, r0, r0, lsl #3
   17640:	lsl	r0, r0, #2
   17644:	bl	1b360 <argp_parse@@Base+0x1bd0>
   17648:	str	r0, [fp]
   1764c:	add	r0, r8, #1
   17650:	bl	1b360 <argp_parse@@Base+0x1bd0>
   17654:	str	r0, [fp, #8]
   17658:	ldr	r8, [fp]
   1765c:	cmp	r0, #0
   17660:	cmpne	r8, #0
   17664:	bne	1767c <daemon@@Base+0x1cd0>
   17668:	ldr	r3, [pc, #1348]	; 17bb4 <daemon@@Base+0x2208>
   1766c:	ldr	r2, [pc, #1364]	; 17bc8 <daemon@@Base+0x221c>
   17670:	ldr	r1, [pc, #1348]	; 17bbc <daemon@@Base+0x2210>
   17674:	ldr	r0, [pc, #1360]	; 17bcc <daemon@@Base+0x2220>
   17678:	bl	11b10 <__assert_fail@plt>
   1767c:	ldr	r2, [fp, #4]
   17680:	ldr	r3, [pc, #1352]	; 17bd0 <daemon@@Base+0x2224>
   17684:	cmp	r2, r3
   17688:	addls	r8, r8, #28
   1768c:	movls	r7, r0
   17690:	movls	sl, #0
   17694:	bls	176e0 <daemon@@Base+0x1d34>
   17698:	ldr	r3, [pc, #1300]	; 17bb4 <daemon@@Base+0x2208>
   1769c:	mov	r2, #476	; 0x1dc
   176a0:	ldr	r1, [pc, #1300]	; 17bbc <daemon@@Base+0x2210>
   176a4:	ldr	r0, [pc, #1320]	; 17bd4 <daemon@@Base+0x2228>
   176a8:	bl	11b10 <__assert_fail@plt>
   176ac:	ldr	r3, [r5, #4]
   176b0:	cmp	r3, #0
   176b4:	addeq	r9, r4, #1
   176b8:	movne	r9, r4
   176bc:	b	17724 <daemon@@Base+0x1d78>
   176c0:	ldr	r3, [r5, #16]
   176c4:	cmp	r3, #0
   176c8:	bne	17ad0 <daemon@@Base+0x2124>
   176cc:	ldr	r3, [r5, #20]
   176d0:	cmp	r3, #0
   176d4:	bne	17ad0 <daemon@@Base+0x2124>
   176d8:	add	r8, r8, #28
   176dc:	mov	r4, r9
   176e0:	ldr	r3, [r5, #4]
   176e4:	cmp	r3, #0
   176e8:	bne	176f8 <daemon@@Base+0x1d4c>
   176ec:	ldr	r3, [r5]
   176f0:	cmp	r3, #0
   176f4:	beq	1773c <daemon@@Base+0x1d90>
   176f8:	mov	r6, r8
   176fc:	str	r5, [r8, #-28]	; 0xffffffe4
   17700:	str	sl, [r8, #-24]	; 0xffffffe8
   17704:	str	r7, [r8, #-20]	; 0xffffffec
   17708:	ldr	r9, [r5, #20]
   1770c:	cmp	r9, #0
   17710:	bne	17724 <daemon@@Base+0x1d78>
   17714:	ldr	r3, [r5]
   17718:	cmp	r3, #0
   1771c:	movne	r9, r4
   17720:	beq	176ac <daemon@@Base+0x1d00>
   17724:	str	r9, [r6, #-16]
   17728:	ldr	r3, [sp, #28]
   1772c:	str	r3, [r6, #-12]
   17730:	ldr	r3, [sp, #24]
   17734:	str	r3, [r6, #-8]
   17738:	b	17adc <daemon@@Base+0x2130>
   1773c:	ldr	r3, [r5, #16]
   17740:	cmp	r3, #0
   17744:	bne	176f8 <daemon@@Base+0x1d4c>
   17748:	ldr	r3, [r5, #20]
   1774c:	cmp	r3, #0
   17750:	bne	176f8 <daemon@@Base+0x1d4c>
   17754:	mov	r3, #0
   17758:	strb	r3, [r7]
   1775c:	ldr	r3, [sp, #8]
   17760:	cmp	r3, #0
   17764:	beq	17aa0 <daemon@@Base+0x20f4>
   17768:	ldr	r3, [r3]
   1776c:	cmp	r3, #0
   17770:	beq	17aa0 <daemon@@Base+0x20f4>
   17774:	add	r3, fp, #12
   17778:	str	r3, [sp, #44]	; 0x2c
   1777c:	str	fp, [sp, #20]
   17780:	b	17810 <daemon@@Base+0x1e64>
   17784:	ldr	r1, [sp, #28]
   17788:	b	17890 <daemon@@Base+0x1ee4>
   1778c:	mov	r2, r3
   17790:	ldr	r3, [r2, #24]
   17794:	cmp	r3, #0
   17798:	bne	1778c <daemon@@Base+0x1de0>
   1779c:	add	r2, r2, #24
   177a0:	ldr	r1, [sp, #16]
   177a4:	ldr	r3, [r1, #12]
   177a8:	str	r3, [r2]
   177ac:	mov	r2, #0
   177b0:	str	r2, [r1, #12]
   177b4:	ldr	r3, [r1, #4]
   177b8:	cmp	r3, r2
   177bc:	beq	177f4 <daemon@@Base+0x1e48>
   177c0:	ldr	r0, [sp, #20]
   177c4:	ldr	r2, [r0, #4]
   177c8:	cmp	r2, #0
   177cc:	bne	178b8 <daemon@@Base+0x1f0c>
   177d0:	str	r3, [r0, #4]
   177d4:	mov	r2, r1
   177d8:	ldr	r3, [r1]
   177dc:	str	r3, [r0]
   177e0:	ldr	r3, [r2, #8]
   177e4:	str	r3, [r0, #8]
   177e8:	mov	r3, r2
   177ec:	mov	r2, #0
   177f0:	str	r2, [r3, #4]
   177f4:	ldr	r0, [sp, #16]
   177f8:	bl	163e0 <daemon@@Base+0xa34>
   177fc:	ldr	r2, [sp, #8]
   17800:	ldr	r3, [r2, #16]!
   17804:	str	r2, [sp, #8]
   17808:	cmp	r3, #0
   1780c:	beq	17a9c <daemon@@Base+0x20f0>
   17810:	ldr	r3, [sp, #8]
   17814:	ldr	r4, [r3, #12]
   17818:	cmp	r4, #0
   1781c:	bne	1782c <daemon@@Base+0x1e80>
   17820:	ldr	r3, [r3, #8]
   17824:	cmp	r3, #0
   17828:	beq	17784 <daemon@@Base+0x1dd8>
   1782c:	ldr	r2, [sp, #8]
   17830:	ldr	r5, [r2, #8]
   17834:	ldr	r7, [sp, #24]
   17838:	ldr	r3, [r7, #16]
   1783c:	sub	r3, r2, r3
   17840:	asr	r6, r3, #4
   17844:	mov	r0, #28
   17848:	bl	1b360 <argp_parse@@Base+0x1bd0>
   1784c:	subs	r1, r0, #0
   17850:	beq	17890 <daemon@@Base+0x1ee4>
   17854:	str	r4, [r1, #8]
   17858:	str	r5, [r1]
   1785c:	str	r6, [r1, #4]
   17860:	ldr	r3, [sp, #28]
   17864:	str	r3, [r1, #12]
   17868:	str	r7, [r1, #16]
   1786c:	cmp	r3, #0
   17870:	ldrne	r3, [r3, #20]
   17874:	addne	r3, r3, #1
   17878:	moveq	r3, #0
   1787c:	str	r3, [r1, #20]
   17880:	ldr	r2, [sp, #20]
   17884:	ldr	r3, [r2, #12]
   17888:	str	r3, [r1, #24]
   1788c:	str	r1, [r2, #12]
   17890:	ldr	r3, [sp, #8]
   17894:	ldr	r0, [r3]
   17898:	bl	1752c <daemon@@Base+0x1b80>
   1789c:	str	r0, [sp, #16]
   178a0:	ldr	r3, [sp, #20]
   178a4:	ldr	r2, [r3, #12]
   178a8:	cmp	r2, #0
   178ac:	ldreq	r2, [sp, #44]	; 0x2c
   178b0:	bne	17790 <daemon@@Base+0x1de4>
   178b4:	b	177a0 <daemon@@Base+0x1df4>
   178b8:	add	r3, r3, r2
   178bc:	str	r3, [sp, #36]	; 0x24
   178c0:	rsb	r0, r3, r3, lsl #3
   178c4:	lsl	r0, r0, #2
   178c8:	bl	1b360 <argp_parse@@Base+0x1bd0>
   178cc:	mov	r4, r0
   178d0:	str	r0, [sp, #32]
   178d4:	ldr	r3, [sp, #20]
   178d8:	ldr	r0, [r3, #8]
   178dc:	bl	11918 <strlen@plt>
   178e0:	mov	r6, r0
   178e4:	ldr	r3, [sp, #16]
   178e8:	ldr	r0, [r3, #8]
   178ec:	bl	11918 <strlen@plt>
   178f0:	add	r0, r6, r0
   178f4:	add	r0, r0, #1
   178f8:	bl	1b360 <argp_parse@@Base+0x1bd0>
   178fc:	mov	sl, r0
   17900:	cmp	r4, #0
   17904:	cmpne	r0, #0
   17908:	beq	179d4 <daemon@@Base+0x2028>
   1790c:	ldr	r3, [sp, #36]	; 0x24
   17910:	ldr	r2, [pc, #696]	; 17bd0 <daemon@@Base+0x2224>
   17914:	cmp	r3, r2
   17918:	bhi	179e8 <daemon@@Base+0x203c>
   1791c:	ldr	r5, [sp, #20]
   17920:	ldr	r2, [r5]
   17924:	mov	r1, r2
   17928:	str	r2, [sp, #40]	; 0x28
   1792c:	ldr	r4, [r5, #4]
   17930:	rsb	r7, r4, r4, lsl #3
   17934:	lsl	r7, r7, #2
   17938:	mov	r2, r7
   1793c:	ldr	r8, [sp, #32]
   17940:	mov	r0, r8
   17944:	bl	118dc <mempcpy@plt>
   17948:	ldr	r3, [sp, #16]
   1794c:	ldr	r1, [r3, #4]
   17950:	str	r1, [sp, #4]
   17954:	rsb	r2, r1, r1, lsl #3
   17958:	lsl	r2, r2, #2
   1795c:	ldr	r1, [r3]
   17960:	bl	11744 <memcpy@plt>
   17964:	ldr	r5, [r5, #8]
   17968:	mov	r2, r6
   1796c:	mov	r1, r5
   17970:	mov	r0, sl
   17974:	bl	11744 <memcpy@plt>
   17978:	cmp	r4, #0
   1797c:	beq	179fc <daemon@@Base+0x2050>
   17980:	mov	r2, r8
   17984:	ldr	r3, [r2, #8]
   17988:	sub	r3, r3, r5
   1798c:	add	r3, sl, r3
   17990:	str	r3, [r2, #8]
   17994:	add	r2, r2, #28
   17998:	subs	r4, r4, #1
   1799c:	bne	17984 <daemon@@Base+0x1fd8>
   179a0:	ldr	r3, [sp, #32]
   179a4:	add	r7, r3, r7
   179a8:	add	r3, sl, r6
   179ac:	str	r3, [sp, #12]
   179b0:	ldr	r2, [sp, #16]
   179b4:	ldr	r8, [r2, #8]
   179b8:	ldr	r2, [sp, #4]
   179bc:	cmp	r2, #0
   179c0:	beq	17a64 <daemon@@Base+0x20b8>
   179c4:	add	r9, r7, #28
   179c8:	mov	fp, r3
   179cc:	sub	r7, r3, #1
   179d0:	b	17a4c <daemon@@Base+0x20a0>
   179d4:	ldr	r3, [pc, #508]	; 17bd8 <daemon@@Base+0x222c>
   179d8:	ldr	r2, [pc, #508]	; 17bdc <daemon@@Base+0x2230>
   179dc:	ldr	r1, [pc, #472]	; 17bbc <daemon@@Base+0x2210>
   179e0:	ldr	r0, [pc, #504]	; 17be0 <daemon@@Base+0x2234>
   179e4:	bl	11b10 <__assert_fail@plt>
   179e8:	ldr	r3, [pc, #488]	; 17bd8 <daemon@@Base+0x222c>
   179ec:	mov	r2, #972	; 0x3cc
   179f0:	ldr	r1, [pc, #452]	; 17bbc <daemon@@Base+0x2210>
   179f4:	ldr	r0, [pc, #488]	; 17be4 <daemon@@Base+0x2238>
   179f8:	bl	11b10 <__assert_fail@plt>
   179fc:	ldr	r7, [sp, #32]
   17a00:	b	179a8 <daemon@@Base+0x1ffc>
   17a04:	ldr	r3, [sp, #12]
   17a08:	cmp	sl, r3
   17a0c:	bcs	17ba4 <daemon@@Base+0x21f8>
   17a10:	ldrb	r3, [sl]
   17a14:	cmp	r3, r1
   17a18:	beq	17bac <daemon@@Base+0x2200>
   17a1c:	mov	r3, sl
   17a20:	cmp	r7, r3
   17a24:	beq	17ba4 <daemon@@Base+0x21f8>
   17a28:	ldrb	r2, [r3, #1]!
   17a2c:	cmp	r2, r1
   17a30:	bne	17a20 <daemon@@Base+0x2074>
   17a34:	b	17bac <daemon@@Base+0x2200>
   17a38:	add	r9, r9, #28
   17a3c:	ldr	r3, [sp, #4]
   17a40:	subs	r3, r3, #1
   17a44:	str	r3, [sp, #4]
   17a48:	beq	17a68 <daemon@@Base+0x20bc>
   17a4c:	str	fp, [r9, #-20]	; 0xffffffec
   17a50:	ldr	r5, [r9, #-24]	; 0xffffffe8
   17a54:	ldr	r4, [r9, #-28]	; 0xffffffe4
   17a58:	cmp	r5, #0
   17a5c:	bne	17b6c <daemon@@Base+0x21c0>
   17a60:	b	17a38 <daemon@@Base+0x208c>
   17a64:	ldr	fp, [sp, #12]
   17a68:	mov	r3, #0
   17a6c:	strb	r3, [fp]
   17a70:	ldr	r0, [sp, #40]	; 0x28
   17a74:	bl	1a5dc <argp_parse@@Base+0xe4c>
   17a78:	ldr	r4, [sp, #20]
   17a7c:	ldr	r0, [r4, #8]
   17a80:	bl	1a5dc <argp_parse@@Base+0xe4c>
   17a84:	ldr	r2, [sp, #32]
   17a88:	str	r2, [r4]
   17a8c:	ldr	r2, [sp, #36]	; 0x24
   17a90:	str	r2, [r4, #4]
   17a94:	str	sl, [r4, #8]
   17a98:	b	177f4 <daemon@@Base+0x1e48>
   17a9c:	ldr	fp, [sp, #20]
   17aa0:	mov	r0, fp
   17aa4:	add	sp, sp, #52	; 0x34
   17aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17aac:	strb	r4, [r7]
   17ab0:	add	r7, r7, #1
   17ab4:	add	r5, r5, #24
   17ab8:	ldr	r3, [r5, #4]
   17abc:	cmp	r3, #0
   17ac0:	bne	17ad0 <daemon@@Base+0x2124>
   17ac4:	ldr	r3, [r5]
   17ac8:	cmp	r3, #0
   17acc:	beq	176c0 <daemon@@Base+0x1d14>
   17ad0:	ldr	r3, [r5, #12]
   17ad4:	tst	r3, #4
   17ad8:	beq	176d8 <daemon@@Base+0x1d2c>
   17adc:	ldr	r3, [r6, #-24]	; 0xffffffe8
   17ae0:	add	r3, r3, #1
   17ae4:	str	r3, [r6, #-24]	; 0xffffffe8
   17ae8:	ldr	r3, [r5, #12]
   17aec:	tst	r3, #8
   17af0:	bne	17ab4 <daemon@@Base+0x2108>
   17af4:	ldr	r4, [r5, #4]
   17af8:	sub	r3, r4, #1
   17afc:	cmp	r3, #254	; 0xfe
   17b00:	bhi	17ab4 <daemon@@Base+0x2108>
   17b04:	bl	118f4 <__ctype_b_loc@plt>
   17b08:	ldr	r2, [r0]
   17b0c:	lsl	r3, r4, #1
   17b10:	ldrh	r3, [r2, r3]
   17b14:	tst	r3, #16384	; 0x4000
   17b18:	beq	17ab4 <daemon@@Base+0x2108>
   17b1c:	uxtb	r4, r4
   17b20:	ldr	r3, [fp, #8]
   17b24:	cmp	r3, r7
   17b28:	bcs	17aac <daemon@@Base+0x2100>
   17b2c:	ldrb	r2, [r3]
   17b30:	cmp	r2, r4
   17b34:	beq	17ab4 <daemon@@Base+0x2108>
   17b38:	sub	r1, r7, #1
   17b3c:	cmp	r3, r1
   17b40:	beq	17aac <daemon@@Base+0x2100>
   17b44:	ldrb	r2, [r3, #1]!
   17b48:	cmp	r2, r4
   17b4c:	bne	17b3c <daemon@@Base+0x2190>
   17b50:	b	17ab4 <daemon@@Base+0x2108>
   17b54:	ldrb	r1, [r8]
   17b58:	cmp	r1, r6
   17b5c:	beq	17a04 <daemon@@Base+0x2058>
   17b60:	add	r4, r4, #24
   17b64:	subs	r5, r5, #1
   17b68:	beq	17a38 <daemon@@Base+0x208c>
   17b6c:	ldr	r3, [r4, #12]
   17b70:	tst	r3, #8
   17b74:	bne	17b60 <daemon@@Base+0x21b4>
   17b78:	ldr	r6, [r4, #4]
   17b7c:	sub	r3, r6, #1
   17b80:	cmp	r3, #254	; 0xfe
   17b84:	bhi	17b60 <daemon@@Base+0x21b4>
   17b88:	bl	118f4 <__ctype_b_loc@plt>
   17b8c:	ldr	r2, [r0]
   17b90:	lsl	r3, r6, #1
   17b94:	ldrh	r3, [r2, r3]
   17b98:	tst	r3, #16384	; 0x4000
   17b9c:	bne	17b54 <daemon@@Base+0x21a8>
   17ba0:	b	17b60 <daemon@@Base+0x21b4>
   17ba4:	strb	r1, [fp]
   17ba8:	add	fp, fp, #1
   17bac:	add	r8, r8, #1
   17bb0:	b	17b60 <daemon@@Base+0x21b4>
   17bb4:	andeq	sp, r1, ip, lsl sp
   17bb8:	andeq	r0, r0, r2, asr #3
   17bbc:	andeq	sp, r1, ip, lsl #28
   17bc0:	andeq	sp, r1, r8, lsl lr
   17bc4:	andeq	sp, r1, ip, lsl lr
   17bc8:	ldrdeq	r0, [r0], -sl
   17bcc:	andeq	sp, r1, ip, lsr #28
   17bd0:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   17bd4:	andeq	sp, r1, r0, asr lr
   17bd8:	andeq	sp, r1, r8, lsr #26
   17bdc:	andeq	r0, r0, sl, asr #7
   17be0:	andeq	sp, r1, ip, lsl #29
   17be4:	andeq	sp, r1, r8, lsr #29

00017be8 <argp_failure@@Base>:
   17be8:	push	{r3}		; (str r3, [sp, #-4]!)
   17bec:	push	{r4, r5, r6, r7, lr}
   17bf0:	sub	sp, sp, #200	; 0xc8
   17bf4:	mov	r7, r1
   17bf8:	mov	r6, r2
   17bfc:	subs	r5, r0, #0
   17c00:	beq	17d50 <argp_failure@@Base+0x168>
   17c04:	ldr	r3, [r5, #16]
   17c08:	tst	r3, #2
   17c0c:	bne	17d40 <argp_failure@@Base+0x158>
   17c10:	ldr	r4, [r5, #44]	; 0x2c
   17c14:	cmp	r4, #0
   17c18:	beq	17d40 <argp_failure@@Base+0x158>
   17c1c:	mov	r0, r4
   17c20:	bl	11a50 <flockfile@plt>
   17c24:	ldr	r0, [r5, #40]	; 0x28
   17c28:	mov	r1, r4
   17c2c:	bl	11660 <fputs_unlocked@plt>
   17c30:	ldr	r3, [sp, #220]	; 0xdc
   17c34:	cmp	r3, #0
   17c38:	beq	17c94 <argp_failure@@Base+0xac>
   17c3c:	add	r3, sp, #224	; 0xe0
   17c40:	str	r3, [sp]
   17c44:	ldr	r3, [r4, #20]
   17c48:	ldr	r2, [r4, #24]
   17c4c:	cmp	r3, r2
   17c50:	addcc	r2, r3, #1
   17c54:	strcc	r2, [r4, #20]
   17c58:	movcc	r2, #58	; 0x3a
   17c5c:	strbcc	r2, [r3]
   17c60:	bcs	17d74 <argp_failure@@Base+0x18c>
   17c64:	ldr	r3, [r4, #20]
   17c68:	ldr	r2, [r4, #24]
   17c6c:	cmp	r3, r2
   17c70:	addcc	r2, r3, #1
   17c74:	strcc	r2, [r4, #20]
   17c78:	movcc	r2, #32
   17c7c:	strbcc	r2, [r3]
   17c80:	bcs	17d84 <argp_failure@@Base+0x19c>
   17c84:	ldr	r2, [sp]
   17c88:	ldr	r1, [sp, #220]	; 0xdc
   17c8c:	mov	r0, r4
   17c90:	bl	11a2c <vfprintf@plt>
   17c94:	cmp	r6, #0
   17c98:	beq	17cfc <argp_failure@@Base+0x114>
   17c9c:	ldr	r3, [r4, #20]
   17ca0:	ldr	r2, [r4, #24]
   17ca4:	cmp	r3, r2
   17ca8:	addcc	r2, r3, #1
   17cac:	strcc	r2, [r4, #20]
   17cb0:	movcc	r2, #58	; 0x3a
   17cb4:	strbcc	r2, [r3]
   17cb8:	bcs	17d94 <argp_failure@@Base+0x1ac>
   17cbc:	ldr	r3, [r4, #20]
   17cc0:	ldr	r2, [r4, #24]
   17cc4:	cmp	r3, r2
   17cc8:	addcc	r2, r3, #1
   17ccc:	strcc	r2, [r4, #20]
   17cd0:	movcc	r2, #32
   17cd4:	strbcc	r2, [r3]
   17cd8:	bcs	17da4 <argp_failure@@Base+0x1bc>
   17cdc:	mov	r2, #200	; 0xc8
   17ce0:	mov	r1, sp
   17ce4:	mov	r0, r6
   17ce8:	bl	11960 <strerror_r@plt>
   17cec:	cmp	r0, #0
   17cf0:	beq	17db4 <argp_failure@@Base+0x1cc>
   17cf4:	mov	r1, r4
   17cf8:	bl	11660 <fputs_unlocked@plt>
   17cfc:	ldr	r3, [r4, #20]
   17d00:	ldr	r2, [r4, #24]
   17d04:	cmp	r3, r2
   17d08:	addcc	r2, r3, #1
   17d0c:	strcc	r2, [r4, #20]
   17d10:	movcc	r2, #10
   17d14:	strbcc	r2, [r3]
   17d18:	bcs	17dcc <argp_failure@@Base+0x1e4>
   17d1c:	mov	r0, r4
   17d20:	bl	11804 <funlockfile@plt>
   17d24:	cmp	r7, #0
   17d28:	beq	17d40 <argp_failure@@Base+0x158>
   17d2c:	cmp	r5, #0
   17d30:	beq	17ddc <argp_failure@@Base+0x1f4>
   17d34:	ldr	r3, [r5, #16]
   17d38:	tst	r3, #32
   17d3c:	beq	17ddc <argp_failure@@Base+0x1f4>
   17d40:	add	sp, sp, #200	; 0xc8
   17d44:	pop	{r4, r5, r6, r7, lr}
   17d48:	add	sp, sp, #4
   17d4c:	bx	lr
   17d50:	ldr	r3, [pc, #140]	; 17de4 <argp_failure@@Base+0x1fc>
   17d54:	ldr	r4, [r3]
   17d58:	cmp	r4, #0
   17d5c:	beq	17d40 <argp_failure@@Base+0x158>
   17d60:	mov	r0, r4
   17d64:	bl	11a50 <flockfile@plt>
   17d68:	ldr	r3, [pc, #120]	; 17de8 <argp_failure@@Base+0x200>
   17d6c:	ldr	r0, [r3]
   17d70:	b	17c28 <argp_failure@@Base+0x40>
   17d74:	mov	r1, #58	; 0x3a
   17d78:	mov	r0, r4
   17d7c:	bl	119f0 <__overflow@plt>
   17d80:	b	17c64 <argp_failure@@Base+0x7c>
   17d84:	mov	r1, #32
   17d88:	mov	r0, r4
   17d8c:	bl	119f0 <__overflow@plt>
   17d90:	b	17c84 <argp_failure@@Base+0x9c>
   17d94:	mov	r1, #58	; 0x3a
   17d98:	mov	r0, r4
   17d9c:	bl	119f0 <__overflow@plt>
   17da0:	b	17cbc <argp_failure@@Base+0xd4>
   17da4:	mov	r1, #32
   17da8:	mov	r0, r4
   17dac:	bl	119f0 <__overflow@plt>
   17db0:	b	17cdc <argp_failure@@Base+0xf4>
   17db4:	mov	r0, r6
   17db8:	bl	118b8 <strerror@plt>
   17dbc:	ldr	r3, [pc, #40]	; 17dec <argp_failure@@Base+0x204>
   17dc0:	cmp	r0, #0
   17dc4:	moveq	r0, r3
   17dc8:	b	17cf4 <argp_failure@@Base+0x10c>
   17dcc:	mov	r1, #10
   17dd0:	mov	r0, r4
   17dd4:	bl	119f0 <__overflow@plt>
   17dd8:	b	17d1c <argp_failure@@Base+0x134>
   17ddc:	mov	r0, r7
   17de0:	bl	1190c <exit@plt>
   17de4:	andeq	pc, r2, r8, asr #11
   17de8:	andeq	pc, r2, r0, asr #11
   17dec:	ldrdeq	sp, [r1], -ip
   17df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17df4:	add	fp, sp, #32
   17df8:	sub	sp, sp, #108	; 0x6c
   17dfc:	str	r0, [fp, #-112]	; 0xffffff90
   17e00:	str	r1, [fp, #-100]	; 0xffffff9c
   17e04:	str	r3, [fp, #-104]	; 0xffffff98
   17e08:	subs	r3, r2, #0
   17e0c:	str	r3, [fp, #-132]	; 0xffffff7c
   17e10:	beq	18e7c <argp_failure@@Base+0x1294>
   17e14:	mov	r0, r3
   17e18:	bl	11a50 <flockfile@plt>
   17e1c:	ldr	r3, [pc, #3772]	; 18ce0 <argp_failure@@Base+0x10f8>
   17e20:	ldr	r3, [r3, #36]	; 0x24
   17e24:	str	r3, [fp, #-108]	; 0xffffff94
   17e28:	cmp	r3, #0
   17e2c:	beq	17f04 <argp_failure@@Base+0x31c>
   17e30:	mov	r3, #0
   17e34:	ldr	r2, [pc, #3748]	; 18ce0 <argp_failure@@Base+0x10f8>
   17e38:	ldr	r2, [r2, #32]
   17e3c:	mov	r1, r3
   17e40:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17e44:	bl	1b3e0 <argp_parse@@Base+0x1c50>
   17e48:	subs	sl, r0, #0
   17e4c:	beq	182b0 <argp_failure@@Base+0x6c8>
   17e50:	ldr	r3, [fp, #-104]	; 0xffffff98
   17e54:	tst	r3, #11
   17e58:	moveq	r3, #0
   17e5c:	streq	r3, [fp, #-108]	; 0xffffff94
   17e60:	bne	182bc <argp_failure@@Base+0x6d4>
   17e64:	ldr	r3, [fp, #-104]	; 0xffffff98
   17e68:	tst	r3, #3
   17e6c:	moveq	r4, #0
   17e70:	bne	18340 <argp_failure@@Base+0x758>
   17e74:	ldr	r3, [fp, #-104]	; 0xffffff98
   17e78:	tst	r3, #16
   17e7c:	bne	1853c <argp_failure@@Base+0x954>
   17e80:	ldr	r3, [fp, #-104]	; 0xffffff98
   17e84:	tst	r3, #4
   17e88:	bne	18564 <argp_failure@@Base+0x97c>
   17e8c:	ldr	r3, [fp, #-104]	; 0xffffff98
   17e90:	tst	r3, #8
   17e94:	beq	18df0 <argp_failure@@Base+0x1208>
   17e98:	ldr	r3, [fp, #-108]	; 0xffffff94
   17e9c:	ldr	r3, [r3, #4]
   17ea0:	cmp	r3, #0
   17ea4:	beq	18df0 <argp_failure@@Base+0x1208>
   17ea8:	cmp	r4, #0
   17eac:	beq	17ed4 <argp_failure@@Base+0x2ec>
   17eb0:	ldr	r2, [sl, #28]
   17eb4:	ldr	r3, [sl, #32]
   17eb8:	cmp	r2, r3
   17ebc:	bcs	18580 <argp_failure@@Base+0x998>
   17ec0:	ldr	r3, [sl, #28]
   17ec4:	add	r2, r3, #1
   17ec8:	str	r2, [sl, #28]
   17ecc:	mov	r2, #10
   17ed0:	strb	r2, [r3]
   17ed4:	mov	r3, #0
   17ed8:	str	r3, [fp, #-88]	; 0xffffffa8
   17edc:	str	r3, [fp, #-84]	; 0xffffffac
   17ee0:	str	r3, [fp, #-80]	; 0xffffffb0
   17ee4:	ldr	r3, [fp, #-108]	; 0xffffff94
   17ee8:	ldr	r2, [r3]
   17eec:	str	r2, [fp, #-96]	; 0xffffffa0
   17ef0:	ldr	r3, [r3, #4]
   17ef4:	str	r3, [fp, #-120]	; 0xffffff88
   17ef8:	cmp	r3, #0
   17efc:	bne	18968 <argp_failure@@Base+0xd80>
   17f00:	b	18dec <argp_failure@@Base+0x1204>
   17f04:	ldr	r0, [pc, #3452]	; 18c88 <argp_failure@@Base+0x10a0>
   17f08:	bl	11888 <getenv@plt>
   17f0c:	mov	r9, r0
   17f10:	sub	ip, fp, #76	; 0x4c
   17f14:	ldr	lr, [pc, #3524]	; 18ce0 <argp_failure@@Base+0x10f8>
   17f18:	ldm	lr!, {r0, r1, r2, r3}
   17f1c:	stmia	ip!, {r0, r1, r2, r3}
   17f20:	ldm	lr!, {r0, r1, r2, r3}
   17f24:	stmia	ip!, {r0, r1, r2, r3}
   17f28:	ldm	lr, {r0, r1}
   17f2c:	stm	ip, {r0, r1}
   17f30:	cmp	r9, #0
   17f34:	ldrne	sl, [pc, #3408]	; 18c8c <argp_failure@@Base+0x10a4>
   17f38:	addne	r8, sl, #168	; 0xa8
   17f3c:	bne	181e0 <argp_failure@@Base+0x5f8>
   17f40:	b	17e30 <argp_failure@@Base+0x248>
   17f44:	mov	r5, r3
   17f48:	mov	r9, r5
   17f4c:	mov	r3, r5
   17f50:	ldrb	r0, [r3], #1
   17f54:	lsl	r2, r0, #1
   17f58:	ldrh	r2, [r1, r2]
   17f5c:	tst	r2, #8192	; 0x2000
   17f60:	bne	17f44 <argp_failure@@Base+0x35c>
   17f64:	tst	r2, #1024	; 0x400
   17f68:	beq	181d8 <argp_failure@@Base+0x5f0>
   17f6c:	cmp	r0, #95	; 0x5f
   17f70:	cmpne	r0, #45	; 0x2d
   17f74:	moveq	r3, #1
   17f78:	movne	r3, #0
   17f7c:	lsl	r2, r2, #28
   17f80:	orrs	r3, r3, r2, lsr #31
   17f84:	beq	18f00 <argp_failure@@Base+0x1318>
   17f88:	mov	r4, r5
   17f8c:	ldrb	r3, [r4, #1]!
   17f90:	lsl	r2, r3, #1
   17f94:	ldrh	r2, [r1, r2]
   17f98:	lsl	r2, r2, #28
   17f9c:	cmp	r3, #95	; 0x5f
   17fa0:	cmpne	r3, #45	; 0x2d
   17fa4:	moveq	r3, #1
   17fa8:	movne	r3, #0
   17fac:	orrs	r3, r3, r2, lsr #31
   17fb0:	bne	17f8c <argp_failure@@Base+0x3a4>
   17fb4:	sub	r5, r4, r5
   17fb8:	ldrb	r3, [r4]
   17fbc:	lsl	r2, r3, #1
   17fc0:	ldrh	r2, [r1, r2]
   17fc4:	tst	r2, #8192	; 0x2000
   17fc8:	beq	17fe0 <argp_failure@@Base+0x3f8>
   17fcc:	ldrb	r3, [r4, #1]!
   17fd0:	lsl	r2, r3, #1
   17fd4:	ldrh	r2, [r1, r2]
   17fd8:	tst	r2, #8192	; 0x2000
   17fdc:	bne	17fcc <argp_failure@@Base+0x3e4>
   17fe0:	cmp	r3, #44	; 0x2c
   17fe4:	cmpne	r3, #0
   17fe8:	beq	18f18 <argp_failure@@Base+0x1330>
   17fec:	cmp	r3, #61	; 0x3d
   17ff0:	beq	18018 <argp_failure@@Base+0x430>
   17ff4:	ldrb	r3, [r4]
   17ff8:	lsl	r3, r3, #1
   17ffc:	ldrh	r3, [r1, r3]
   18000:	tst	r3, #2048	; 0x800
   18004:	bne	18098 <argp_failure@@Base+0x4b0>
   18008:	ldr	r3, [fp, #-108]	; 0xffffff94
   1800c:	str	r3, [fp, #-96]	; 0xffffffa0
   18010:	str	r3, [fp, #-116]	; 0xffffff8c
   18014:	b	18f2c <argp_failure@@Base+0x1344>
   18018:	add	r2, r4, #1
   1801c:	ldrb	r3, [r4, #1]
   18020:	lsl	r3, r3, #1
   18024:	ldrh	r3, [r1, r3]
   18028:	tst	r3, #8192	; 0x2000
   1802c:	beq	18f10 <argp_failure@@Base+0x1328>
   18030:	ldrb	r3, [r2, #1]!
   18034:	lsl	r3, r3, #1
   18038:	ldrh	r3, [r1, r3]
   1803c:	tst	r3, #8192	; 0x2000
   18040:	bne	18030 <argp_failure@@Base+0x448>
   18044:	mov	r4, r2
   18048:	b	17ff4 <argp_failure@@Base+0x40c>
   1804c:	ldrb	r3, [r9, #1]
   18050:	cmp	r3, #111	; 0x6f
   18054:	movne	r3, #1
   18058:	strne	r3, [fp, #-96]	; 0xffffffa0
   1805c:	strne	r3, [fp, #-116]	; 0xffffff8c
   18060:	bne	18f2c <argp_failure@@Base+0x1344>
   18064:	ldrb	r3, [r9, #2]
   18068:	cmp	r3, #45	; 0x2d
   1806c:	movne	r3, #1
   18070:	strne	r3, [fp, #-96]	; 0xffffffa0
   18074:	strne	r3, [fp, #-116]	; 0xffffff8c
   18078:	bne	18f2c <argp_failure@@Base+0x1344>
   1807c:	add	r9, r9, #3
   18080:	sub	r5, r5, #3
   18084:	ldr	r3, [fp, #-108]	; 0xffffff94
   18088:	str	r3, [fp, #-116]	; 0xffffff8c
   1808c:	mov	r3, #1
   18090:	str	r3, [fp, #-96]	; 0xffffffa0
   18094:	b	18f2c <argp_failure@@Base+0x1344>
   18098:	mov	r2, #10
   1809c:	mov	r1, #0
   180a0:	mov	r0, r4
   180a4:	bl	11690 <strtol@plt>
   180a8:	str	r0, [fp, #-116]	; 0xffffff8c
   180ac:	ldr	r2, [r6]
   180b0:	ldrb	r3, [r4]
   180b4:	lsl	r3, r3, #1
   180b8:	ldrh	r3, [r2, r3]
   180bc:	tst	r3, #2048	; 0x800
   180c0:	beq	180d8 <argp_failure@@Base+0x4f0>
   180c4:	ldrb	r3, [r4, #1]!
   180c8:	lsl	r3, r3, #1
   180cc:	ldrh	r3, [r2, r3]
   180d0:	tst	r3, #2048	; 0x800
   180d4:	bne	180c4 <argp_failure@@Base+0x4dc>
   180d8:	ldrb	r3, [r4]
   180dc:	lsl	r3, r3, #1
   180e0:	ldrh	r3, [r2, r3]
   180e4:	tst	r3, #8192	; 0x2000
   180e8:	beq	1810c <argp_failure@@Base+0x524>
   180ec:	ldrb	r3, [r4, #1]!
   180f0:	lsl	r3, r3, #1
   180f4:	ldrh	r3, [r2, r3]
   180f8:	tst	r3, #8192	; 0x2000
   180fc:	bne	180ec <argp_failure@@Base+0x504>
   18100:	ldr	r3, [fp, #-108]	; 0xffffff94
   18104:	str	r3, [fp, #-96]	; 0xffffffa0
   18108:	b	18f2c <argp_failure@@Base+0x1344>
   1810c:	ldr	r3, [fp, #-108]	; 0xffffff94
   18110:	str	r3, [fp, #-96]	; 0xffffffa0
   18114:	b	18f2c <argp_failure@@Base+0x1344>
   18118:	str	r9, [sp, #4]
   1811c:	str	r7, [sp]
   18120:	ldr	r3, [pc, #2920]	; 18c90 <argp_failure@@Base+0x10a8>
   18124:	mov	r2, #0
   18128:	mov	r1, r2
   1812c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18130:	bl	17be8 <argp_failure@@Base>
   18134:	b	1819c <argp_failure@@Base+0x5b4>
   18138:	add	r6, r6, #16
   1813c:	cmp	r6, r8
   18140:	beq	181b8 <argp_failure@@Base+0x5d0>
   18144:	mov	r0, r6
   18148:	bl	11918 <strlen@plt>
   1814c:	mov	r7, r0
   18150:	cmp	r0, r5
   18154:	bne	18138 <argp_failure@@Base+0x550>
   18158:	mov	r2, r5
   1815c:	mov	r1, r6
   18160:	mov	r0, r9
   18164:	bl	11ad4 <strncmp@plt>
   18168:	cmp	r0, #0
   1816c:	bne	18138 <argp_failure@@Base+0x550>
   18170:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18174:	cmp	r3, #0
   18178:	beq	18188 <argp_failure@@Base+0x5a0>
   1817c:	ldrb	r3, [r6, #14]
   18180:	cmp	r3, #0
   18184:	beq	18118 <argp_failure@@Base+0x530>
   18188:	ldrb	r3, [r6, #15]
   1818c:	sub	r2, fp, #36	; 0x24
   18190:	add	r3, r2, r3
   18194:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18198:	str	r2, [r3, #-40]	; 0xffffffd8
   1819c:	cmp	r6, r8
   181a0:	beq	181b8 <argp_failure@@Base+0x5d0>
   181a4:	ldrb	r3, [r4]
   181a8:	cmp	r3, #44	; 0x2c
   181ac:	addeq	r9, r4, #1
   181b0:	movne	r9, r4
   181b4:	b	181e0 <argp_failure@@Base+0x5f8>
   181b8:	str	r9, [sp, #4]
   181bc:	str	r5, [sp]
   181c0:	ldr	r3, [pc, #2764]	; 18c94 <argp_failure@@Base+0x10ac>
   181c4:	mov	r2, #0
   181c8:	mov	r1, r2
   181cc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   181d0:	bl	17be8 <argp_failure@@Base>
   181d4:	b	181a4 <argp_failure@@Base+0x5bc>
   181d8:	cmp	r0, #0
   181dc:	bne	18200 <argp_failure@@Base+0x618>
   181e0:	ldrb	r3, [r9]
   181e4:	cmp	r3, #0
   181e8:	beq	18218 <argp_failure@@Base+0x630>
   181ec:	bl	118f4 <__ctype_b_loc@plt>
   181f0:	mov	r6, r0
   181f4:	ldr	r1, [r0]
   181f8:	mov	r5, r9
   181fc:	b	17f48 <argp_failure@@Base+0x360>
   18200:	str	r5, [sp]
   18204:	ldr	r3, [pc, #2700]	; 18c98 <argp_failure@@Base+0x10b0>
   18208:	mov	r2, #0
   1820c:	mov	r1, r2
   18210:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18214:	bl	17be8 <argp_failure@@Base>
   18218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1821c:	ldr	r3, [pc, #2680]	; 18c9c <argp_failure@@Base+0x10b4>
   18220:	add	r1, r3, #144	; 0x90
   18224:	add	r3, r3, #16
   18228:	cmp	r3, r1
   1822c:	beq	18280 <argp_failure@@Base+0x698>
   18230:	ldrb	r2, [r3, #14]
   18234:	cmp	r2, #0
   18238:	bne	18224 <argp_failure@@Base+0x63c>
   1823c:	ldrb	r2, [r3, #15]
   18240:	cmp	r2, #32
   18244:	beq	18224 <argp_failure@@Base+0x63c>
   18248:	sub	ip, fp, #36	; 0x24
   1824c:	add	r2, ip, r2
   18250:	ldr	r2, [r2, #-40]	; 0xffffffd8
   18254:	cmp	r2, r0
   18258:	blt	18224 <argp_failure@@Base+0x63c>
   1825c:	str	r3, [sp, #4]
   18260:	ldr	r3, [pc, #2616]	; 18ca0 <argp_failure@@Base+0x10b8>
   18264:	str	r3, [sp]
   18268:	ldr	r3, [pc, #2612]	; 18ca4 <argp_failure@@Base+0x10bc>
   1826c:	mov	r2, #0
   18270:	mov	r1, r2
   18274:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18278:	bl	17be8 <argp_failure@@Base>
   1827c:	b	17e30 <argp_failure@@Base+0x248>
   18280:	ldr	r4, [pc, #2648]	; 18ce0 <argp_failure@@Base+0x10f8>
   18284:	mov	ip, r4
   18288:	sub	lr, fp, #76	; 0x4c
   1828c:	ldm	lr!, {r0, r1, r2, r3}
   18290:	stmia	ip!, {r0, r1, r2, r3}
   18294:	ldm	lr!, {r0, r1, r2, r3}
   18298:	stmia	ip!, {r0, r1, r2, r3}
   1829c:	ldm	lr, {r0, r1}
   182a0:	stm	ip, {r0, r1}
   182a4:	mov	r3, #1
   182a8:	str	r3, [r4, #36]	; 0x24
   182ac:	b	17e30 <argp_failure@@Base+0x248>
   182b0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   182b4:	bl	11804 <funlockfile@plt>
   182b8:	b	18e7c <argp_failure@@Base+0x1294>
   182bc:	mov	r1, #0
   182c0:	ldr	r0, [fp, #-112]	; 0xffffff90
   182c4:	bl	1752c <daemon@@Base+0x1b80>
   182c8:	str	r0, [fp, #-108]	; 0xffffff94
   182cc:	ldr	r1, [pc, #2516]	; 18ca8 <argp_failure@@Base+0x10c0>
   182d0:	bl	16434 <daemon@@Base+0xa88>
   182d4:	cmp	r0, #0
   182d8:	mvnne	r3, #0
   182dc:	strne	r3, [r0, #12]
   182e0:	ldr	r1, [pc, #2500]	; 18cac <argp_failure@@Base+0x10c4>
   182e4:	ldr	r0, [fp, #-108]	; 0xffffff94
   182e8:	bl	16434 <daemon@@Base+0xa88>
   182ec:	cmp	r0, #0
   182f0:	mvnne	r3, #0
   182f4:	strne	r3, [r0, #12]
   182f8:	ldr	r0, [fp, #-108]	; 0xffffff94
   182fc:	ldr	r3, [r0, #4]
   18300:	cmp	r3, #0
   18304:	beq	17e64 <argp_failure@@Base+0x27c>
   18308:	ldr	r2, [r0]
   1830c:	mov	r3, #0
   18310:	str	r3, [r2, #24]
   18314:	add	r3, r3, #1
   18318:	add	r2, r2, #28
   1831c:	ldr	r1, [r0, #4]
   18320:	cmp	r3, r1
   18324:	bcc	18310 <argp_failure@@Base+0x728>
   18328:	ldr	r3, [pc, #2432]	; 18cb0 <argp_failure@@Base+0x10c8>
   1832c:	mov	r2, #28
   18330:	ldr	r0, [fp, #-108]	; 0xffffff94
   18334:	ldr	r0, [r0]
   18338:	bl	11a74 <qsort@plt>
   1833c:	b	17e64 <argp_failure@@Base+0x27c>
   18340:	ldr	r0, [fp, #-112]	; 0xffffff90
   18344:	bl	164cc <daemon@@Base+0xb20>
   18348:	mov	r2, r0
   1834c:	add	r3, r0, #14
   18350:	bic	r3, r3, #7
   18354:	sub	sp, sp, r3
   18358:	add	r8, sp, #8
   1835c:	mov	r1, #0
   18360:	mov	r0, r8
   18364:	bl	11984 <memset@plt>
   18368:	mov	r5, #1
   1836c:	ldr	r4, [pc, #2412]	; 18ce0 <argp_failure@@Base+0x10f8>
   18370:	ldr	r9, [pc, #2364]	; 18cb4 <argp_failure@@Base+0x10cc>
   18374:	str	r8, [fp, #-96]	; 0xffffffa0
   18378:	ldr	r8, [fp, #-104]	; 0xffffff98
   1837c:	b	1842c <argp_failure@@Base+0x844>
   18380:	mov	r0, sl
   18384:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18388:	b	18448 <argp_failure@@Base+0x860>
   1838c:	mov	r0, sl
   18390:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18394:	b	18490 <argp_failure@@Base+0x8a8>
   18398:	mov	r1, sl
   1839c:	ldr	r0, [fp, #-108]	; 0xffffff94
   183a0:	bl	16224 <daemon@@Base+0x878>
   183a4:	orr	r8, r8, #2
   183a8:	str	sl, [sp]
   183ac:	mov	r3, #1
   183b0:	sub	r2, fp, #76	; 0x4c
   183b4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   183b8:	ldr	r0, [fp, #-112]	; 0xffffff90
   183bc:	bl	1674c <daemon@@Base+0xda0>
   183c0:	mov	r6, r0
   183c4:	ldr	r3, [sl, #28]
   183c8:	ldr	r2, [sl, #24]
   183cc:	sub	r3, r3, r2
   183d0:	ldr	r2, [sl, #16]
   183d4:	cmp	r3, r2
   183d8:	bhi	18500 <argp_failure@@Base+0x918>
   183dc:	str	r7, [sl, #12]
   183e0:	ldr	r3, [sl, #28]
   183e4:	ldr	r2, [sl, #24]
   183e8:	sub	r3, r3, r2
   183ec:	ldr	r2, [sl, #16]
   183f0:	cmp	r3, r2
   183f4:	bhi	1850c <argp_failure@@Base+0x924>
   183f8:	str	r5, [sl, #4]
   183fc:	ldr	r2, [sl, #28]
   18400:	ldr	r3, [sl, #32]
   18404:	cmp	r2, r3
   18408:	bcs	18518 <argp_failure@@Base+0x930>
   1840c:	ldr	r3, [sl, #28]
   18410:	add	r2, r3, #1
   18414:	str	r2, [sl, #28]
   18418:	mov	r2, #10
   1841c:	strb	r2, [r3]
   18420:	mov	r5, #0
   18424:	cmp	r6, r5
   18428:	beq	18530 <argp_failure@@Base+0x948>
   1842c:	ldr	r6, [r4, #28]
   18430:	ldr	r3, [sl, #28]
   18434:	ldr	r2, [sl, #24]
   18438:	sub	r3, r3, r2
   1843c:	ldr	r2, [sl, #16]
   18440:	cmp	r3, r2
   18444:	bhi	18380 <argp_failure@@Base+0x798>
   18448:	ldr	r7, [sl, #12]
   1844c:	str	r6, [sl, #12]
   18450:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18454:	str	r3, [fp, #-76]	; 0xffffffb4
   18458:	cmp	r5, #0
   1845c:	ldr	r3, [fp, #4]
   18460:	ldrne	r2, [pc, #2128]	; 18cb8 <argp_failure@@Base+0x10d0>
   18464:	ldreq	r2, [pc, #2128]	; 18cbc <argp_failure@@Base+0x10d4>
   18468:	mov	r1, r9
   1846c:	mov	r0, sl
   18470:	bl	1baec <argp_parse@@Base+0x235c>
   18474:	ldr	r6, [r4, #28]
   18478:	ldr	r3, [sl, #28]
   1847c:	ldr	r2, [sl, #24]
   18480:	sub	r3, r3, r2
   18484:	ldr	r2, [sl, #16]
   18488:	cmp	r3, r2
   1848c:	bhi	1838c <argp_failure@@Base+0x7a4>
   18490:	ldr	r5, [sl, #4]
   18494:	str	r6, [sl, #4]
   18498:	tst	r8, #2
   1849c:	beq	18398 <argp_failure@@Base+0x7b0>
   184a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   184a4:	ldr	r3, [r3, #4]
   184a8:	cmp	r3, #0
   184ac:	beq	183a8 <argp_failure@@Base+0x7c0>
   184b0:	ldr	r3, [sl, #28]
   184b4:	add	r3, r3, #12
   184b8:	ldr	r2, [sl, #32]
   184bc:	cmp	r2, r3
   184c0:	bcs	184d8 <argp_failure@@Base+0x8f0>
   184c4:	mov	r1, #12
   184c8:	mov	r0, sl
   184cc:	bl	1b9fc <argp_parse@@Base+0x226c>
   184d0:	cmp	r0, #0
   184d4:	beq	183a8 <argp_failure@@Base+0x7c0>
   184d8:	ldr	ip, [sl, #28]
   184dc:	ldr	r3, [pc, #2012]	; 18cc0 <argp_failure@@Base+0x10d8>
   184e0:	ldm	r3!, {r0, r1, r2}
   184e4:	str	r0, [ip]
   184e8:	str	r1, [ip, #4]
   184ec:	str	r2, [ip, #8]
   184f0:	ldr	r3, [sl, #28]
   184f4:	add	r3, r3, #12
   184f8:	str	r3, [sl, #28]
   184fc:	b	183a8 <argp_failure@@Base+0x7c0>
   18500:	mov	r0, sl
   18504:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18508:	b	183dc <argp_failure@@Base+0x7f4>
   1850c:	mov	r0, sl
   18510:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18514:	b	183f8 <argp_failure@@Base+0x810>
   18518:	mov	r1, #1
   1851c:	mov	r0, sl
   18520:	bl	1b9fc <argp_parse@@Base+0x226c>
   18524:	cmp	r0, #0
   18528:	beq	18420 <argp_failure@@Base+0x838>
   1852c:	b	1840c <argp_failure@@Base+0x824>
   18530:	str	r8, [fp, #-104]	; 0xffffff98
   18534:	mov	r4, #1
   18538:	b	17e74 <argp_failure@@Base+0x28c>
   1853c:	str	sl, [sp, #4]
   18540:	mov	r3, #1
   18544:	str	r3, [sp]
   18548:	mov	r3, #0
   1854c:	mov	r2, r3
   18550:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18554:	ldr	r0, [fp, #-112]	; 0xffffff90
   18558:	bl	16ca4 <daemon@@Base+0x12f8>
   1855c:	orr	r4, r4, r0
   18560:	b	17e80 <argp_failure@@Base+0x298>
   18564:	ldr	r3, [fp, #4]
   18568:	mov	r2, r3
   1856c:	ldr	r1, [pc, #1872]	; 18cc4 <argp_failure@@Base+0x10dc>
   18570:	mov	r0, sl
   18574:	bl	1baec <argp_parse@@Base+0x235c>
   18578:	mov	r4, #1
   1857c:	b	17e8c <argp_failure@@Base+0x2a4>
   18580:	mov	r1, #1
   18584:	mov	r0, sl
   18588:	bl	1b9fc <argp_parse@@Base+0x226c>
   1858c:	cmp	r0, #0
   18590:	beq	17ed4 <argp_failure@@Base+0x2ec>
   18594:	b	17ec0 <argp_failure@@Base+0x2d8>
   18598:	mov	r0, sl
   1859c:	bl	1b458 <argp_parse@@Base+0x1cc8>
   185a0:	b	1898c <argp_failure@@Base+0xda4>
   185a4:	add	r3, r3, #24
   185a8:	subs	r2, r2, #1
   185ac:	beq	185d0 <argp_failure@@Base+0x9e8>
   185b0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   185b4:	cmp	r1, #0
   185b8:	beq	185a4 <argp_failure@@Base+0x9bc>
   185bc:	ldr	r1, [r3, #-12]
   185c0:	tst	r1, #2
   185c4:	bne	185a4 <argp_failure@@Base+0x9bc>
   185c8:	mov	r3, #1
   185cc:	str	r3, [fp, #-116]	; 0xffffff8c
   185d0:	ldr	r3, [pc, #1800]	; 18ce0 <argp_failure@@Base+0x10f8>
   185d4:	ldr	r4, [r3, #8]
   185d8:	ldr	r3, [sl, #28]
   185dc:	ldr	r2, [sl, #24]
   185e0:	sub	r3, r3, r2
   185e4:	ldr	r2, [sl, #16]
   185e8:	cmp	r3, r2
   185ec:	bhi	1860c <argp_failure@@Base+0xa24>
   185f0:	str	r4, [sl, #12]
   185f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   185f8:	ldr	r5, [r3, #4]
   185fc:	cmp	r5, #0
   18600:	beq	18708 <argp_failure@@Base+0xb20>
   18604:	mov	r4, r8
   18608:	b	18f4c <argp_failure@@Base+0x1364>
   1860c:	mov	r0, sl
   18610:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18614:	b	185f0 <argp_failure@@Base+0xa08>
   18618:	tst	r6, #2
   1861c:	beq	18628 <argp_failure@@Base+0xa40>
   18620:	add	r9, r9, #1
   18624:	b	18f40 <argp_failure@@Base+0x1358>
   18628:	sub	r1, fp, #76	; 0x4c
   1862c:	ldr	r3, [pc, #1708]	; 18ce0 <argp_failure@@Base+0x10f8>
   18630:	ldr	r0, [r3, #8]
   18634:	bl	16b20 <daemon@@Base+0x1174>
   18638:	ldr	r2, [sl, #28]
   1863c:	ldr	r3, [sl, #32]
   18640:	cmp	r2, r3
   18644:	bcs	186c4 <argp_failure@@Base+0xadc>
   18648:	ldr	r3, [sl, #28]
   1864c:	add	r2, r3, #1
   18650:	str	r2, [sl, #28]
   18654:	mov	r2, #45	; 0x2d
   18658:	strb	r2, [r3]
   1865c:	ldrb	r6, [r9]
   18660:	ldr	r2, [sl, #28]
   18664:	ldr	r3, [sl, #32]
   18668:	cmp	r2, r3
   1866c:	bcs	186dc <argp_failure@@Base+0xaf4>
   18670:	ldr	r3, [sl, #28]
   18674:	add	r2, r3, #1
   18678:	str	r2, [sl, #28]
   1867c:	strb	r6, [r3]
   18680:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18684:	cmp	r3, #0
   18688:	beq	1869c <argp_failure@@Base+0xab4>
   1868c:	ldr	r3, [pc, #1612]	; 18ce0 <argp_failure@@Base+0x10f8>
   18690:	ldr	r3, [r3]
   18694:	cmp	r3, #0
   18698:	beq	186f4 <argp_failure@@Base+0xb0c>
   1869c:	ldr	r2, [r8, #8]
   186a0:	cmp	r2, #0
   186a4:	beq	18620 <argp_failure@@Base+0xa38>
   186a8:	ldr	r3, [r8, #12]
   186ac:	tst	r3, #1
   186b0:	ldrne	r1, [pc, #1552]	; 18cc8 <argp_failure@@Base+0x10e0>
   186b4:	ldreq	r1, [pc, #1552]	; 18ccc <argp_failure@@Base+0x10e4>
   186b8:	mov	r0, sl
   186bc:	bl	1baec <argp_parse@@Base+0x235c>
   186c0:	b	18620 <argp_failure@@Base+0xa38>
   186c4:	mov	r1, #1
   186c8:	mov	r0, sl
   186cc:	bl	1b9fc <argp_parse@@Base+0x226c>
   186d0:	cmp	r0, #0
   186d4:	beq	1865c <argp_failure@@Base+0xa74>
   186d8:	b	18648 <argp_failure@@Base+0xa60>
   186dc:	mov	r1, #1
   186e0:	mov	r0, sl
   186e4:	bl	1b9fc <argp_parse@@Base+0x226c>
   186e8:	cmp	r0, #0
   186ec:	beq	18680 <argp_failure@@Base+0xa98>
   186f0:	b	18670 <argp_failure@@Base+0xa88>
   186f4:	ldr	r3, [r8, #8]
   186f8:	cmp	r3, #0
   186fc:	movne	r3, #1
   18700:	strne	r3, [fp, #-80]	; 0xffffffb0
   18704:	b	18620 <argp_failure@@Base+0xa38>
   18708:	ldr	r3, [r8, #12]
   1870c:	tst	r3, #8
   18710:	beq	187ec <argp_failure@@Base+0xc04>
   18714:	ldr	r3, [pc, #1476]	; 18ce0 <argp_failure@@Base+0x10f8>
   18718:	ldr	r4, [r3, #16]
   1871c:	ldr	r3, [sl, #28]
   18720:	ldr	r2, [sl, #24]
   18724:	sub	r3, r3, r2
   18728:	ldr	r2, [sl, #16]
   1872c:	cmp	r3, r2
   18730:	bhi	18750 <argp_failure@@Base+0xb68>
   18734:	str	r4, [sl, #12]
   18738:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1873c:	ldr	r5, [r3, #4]
   18740:	cmp	r5, #0
   18744:	beq	188a0 <argp_failure@@Base+0xcb8>
   18748:	add	r4, r8, #24
   1874c:	b	18784 <argp_failure@@Base+0xb9c>
   18750:	mov	r0, sl
   18754:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18758:	b	18734 <argp_failure@@Base+0xb4c>
   1875c:	mov	r2, r6
   18760:	mov	r1, r7
   18764:	ldr	r0, [sl, #28]
   18768:	bl	11744 <memcpy@plt>
   1876c:	ldr	r3, [sl, #28]
   18770:	add	r6, r3, r6
   18774:	str	r6, [sl, #28]
   18778:	add	r4, r4, #24
   1877c:	subs	r5, r5, #1
   18780:	beq	188a0 <argp_failure@@Base+0xcb8>
   18784:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18788:	cmp	r3, #0
   1878c:	beq	18778 <argp_failure@@Base+0xb90>
   18790:	ldr	r3, [r4, #-12]
   18794:	tst	r3, #2
   18798:	bne	18778 <argp_failure@@Base+0xb90>
   1879c:	sub	r1, fp, #76	; 0x4c
   187a0:	ldr	r3, [pc, #1336]	; 18ce0 <argp_failure@@Base+0x10f8>
   187a4:	ldr	r0, [r3, #16]
   187a8:	bl	16b20 <daemon@@Base+0x1174>
   187ac:	ldr	r7, [r4, #-24]	; 0xffffffe8
   187b0:	mov	r0, r7
   187b4:	bl	11918 <strlen@plt>
   187b8:	subs	r6, r0, #0
   187bc:	beq	18778 <argp_failure@@Base+0xb90>
   187c0:	ldr	r3, [sl, #28]
   187c4:	add	r3, r3, r6
   187c8:	ldr	r2, [sl, #32]
   187cc:	cmp	r2, r3
   187d0:	bcs	1875c <argp_failure@@Base+0xb74>
   187d4:	mov	r1, r6
   187d8:	mov	r0, sl
   187dc:	bl	1b9fc <argp_parse@@Base+0x226c>
   187e0:	cmp	r0, #0
   187e4:	beq	18778 <argp_failure@@Base+0xb90>
   187e8:	b	1875c <argp_failure@@Base+0xb74>
   187ec:	ldr	r3, [pc, #1260]	; 18ce0 <argp_failure@@Base+0x10f8>
   187f0:	ldr	r4, [r3, #12]
   187f4:	ldr	r3, [sl, #28]
   187f8:	ldr	r2, [sl, #24]
   187fc:	sub	r3, r3, r2
   18800:	ldr	r2, [sl, #16]
   18804:	cmp	r3, r2
   18808:	bhi	18828 <argp_failure@@Base+0xc40>
   1880c:	str	r4, [sl, #12]
   18810:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18814:	ldr	r5, [r3, #4]
   18818:	cmp	r5, #0
   1881c:	beq	188a0 <argp_failure@@Base+0xcb8>
   18820:	add	r4, r8, #24
   18824:	b	18840 <argp_failure@@Base+0xc58>
   18828:	mov	r0, sl
   1882c:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18830:	b	1880c <argp_failure@@Base+0xc24>
   18834:	add	r4, r4, #24
   18838:	subs	r5, r5, #1
   1883c:	beq	188a0 <argp_failure@@Base+0xcb8>
   18840:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18844:	cmp	r3, #0
   18848:	beq	18834 <argp_failure@@Base+0xc4c>
   1884c:	ldr	r3, [r4, #-12]
   18850:	tst	r3, #2
   18854:	bne	18834 <argp_failure@@Base+0xc4c>
   18858:	sub	r1, fp, #76	; 0x4c
   1885c:	ldr	r3, [pc, #1148]	; 18ce0 <argp_failure@@Base+0x10f8>
   18860:	ldr	r0, [r3, #12]
   18864:	bl	16b20 <daemon@@Base+0x1174>
   18868:	ldr	r2, [r4, #-24]	; 0xffffffe8
   1886c:	ldr	r1, [pc, #1116]	; 18cd0 <argp_failure@@Base+0x10e8>
   18870:	mov	r0, sl
   18874:	bl	1baec <argp_parse@@Base+0x235c>
   18878:	ldr	r2, [r8, #8]
   1887c:	cmp	r2, #0
   18880:	beq	18834 <argp_failure@@Base+0xc4c>
   18884:	ldr	r3, [r8, #12]
   18888:	tst	r3, #1
   1888c:	ldrne	r1, [pc, #1088]	; 18cd4 <argp_failure@@Base+0x10ec>
   18890:	ldreq	r1, [pc, #1088]	; 18cd8 <argp_failure@@Base+0x10f0>
   18894:	mov	r0, sl
   18898:	bl	1baec <argp_parse@@Base+0x235c>
   1889c:	b	18834 <argp_failure@@Base+0xc4c>
   188a0:	ldr	r3, [sl, #28]
   188a4:	ldr	r2, [sl, #24]
   188a8:	sub	r3, r3, r2
   188ac:	ldr	r2, [sl, #16]
   188b0:	cmp	r3, r2
   188b4:	bhi	189f4 <argp_failure@@Base+0xe0c>
   188b8:	mov	r3, #0
   188bc:	str	r3, [sl, #4]
   188c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   188c4:	cmp	r3, #0
   188c8:	beq	18a18 <argp_failure@@Base+0xe30>
   188cc:	ldr	r3, [r8, #12]
   188d0:	tst	r3, #8
   188d4:	bne	18900 <argp_failure@@Base+0xd18>
   188d8:	ldr	r4, [r8, #4]
   188dc:	sub	r3, r4, #1
   188e0:	cmp	r3, #254	; 0xfe
   188e4:	bhi	18900 <argp_failure@@Base+0xd18>
   188e8:	bl	118f4 <__ctype_b_loc@plt>
   188ec:	ldr	r3, [r0]
   188f0:	lsl	r4, r4, #1
   188f4:	ldrh	r3, [r3, r4]
   188f8:	tst	r3, #16384	; 0x4000
   188fc:	bne	1890c <argp_failure@@Base+0xd24>
   18900:	ldr	r3, [r8]
   18904:	cmp	r3, #0
   18908:	beq	18a00 <argp_failure@@Base+0xe18>
   1890c:	ldr	r3, [sl, #28]
   18910:	ldr	r2, [sl, #24]
   18914:	sub	r3, r3, r2
   18918:	ldr	r2, [sl, #16]
   1891c:	cmp	r3, r2
   18920:	bhi	18c70 <argp_failure@@Base+0x1088>
   18924:	ldr	r3, [fp, #-124]	; 0xffffff84
   18928:	str	r3, [sl, #4]
   1892c:	ldr	r3, [sl, #28]
   18930:	ldr	r2, [sl, #24]
   18934:	sub	r3, r3, r2
   18938:	ldr	r2, [sl, #16]
   1893c:	cmp	r3, r2
   18940:	bhi	18c7c <argp_failure@@Base+0x1094>
   18944:	ldr	r3, [fp, #-128]	; 0xffffff80
   18948:	str	r3, [sl, #12]
   1894c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18950:	add	r3, r3, #28
   18954:	str	r3, [fp, #-96]	; 0xffffffa0
   18958:	ldr	r3, [fp, #-120]	; 0xffffff88
   1895c:	subs	r3, r3, #1
   18960:	str	r3, [fp, #-120]	; 0xffffff88
   18964:	beq	18cf4 <argp_failure@@Base+0x110c>
   18968:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1896c:	ldr	r8, [r3]
   18970:	ldr	r9, [r3, #8]
   18974:	ldr	r3, [sl, #28]
   18978:	ldr	r2, [sl, #24]
   1897c:	sub	r3, r3, r2
   18980:	ldr	r2, [sl, #16]
   18984:	cmp	r3, r2
   18988:	bhi	18598 <argp_failure@@Base+0x9b0>
   1898c:	ldr	r3, [sl, #4]
   18990:	str	r3, [fp, #-124]	; 0xffffff84
   18994:	mov	r3, #0
   18998:	str	r3, [sl, #4]
   1899c:	ldr	r3, [sl, #12]
   189a0:	str	r3, [fp, #-128]	; 0xffffff80
   189a4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   189a8:	str	r2, [fp, #-76]	; 0xffffffb4
   189ac:	str	sl, [fp, #-72]	; 0xffffffb8
   189b0:	sub	r3, fp, #88	; 0x58
   189b4:	str	r3, [fp, #-68]	; 0xffffffbc
   189b8:	mov	r3, #1
   189bc:	str	r3, [fp, #-64]	; 0xffffffc0
   189c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   189c4:	str	r3, [fp, #-60]	; 0xffffffc4
   189c8:	ldr	r3, [r8, #12]
   189cc:	ands	r3, r3, #8
   189d0:	str	r3, [fp, #-116]	; 0xffffff8c
   189d4:	movne	r3, #0
   189d8:	strne	r3, [fp, #-116]	; 0xffffff8c
   189dc:	bne	185d0 <argp_failure@@Base+0x9e8>
   189e0:	ldr	r2, [r2, #4]
   189e4:	cmp	r2, #0
   189e8:	beq	185d0 <argp_failure@@Base+0x9e8>
   189ec:	add	r3, r8, #24
   189f0:	b	185b0 <argp_failure@@Base+0x9c8>
   189f4:	mov	r0, sl
   189f8:	bl	1b458 <argp_parse@@Base+0x1cc8>
   189fc:	b	188b8 <argp_failure@@Base+0xcd0>
   18a00:	sub	r2, fp, #76	; 0x4c
   18a04:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18a08:	ldr	r1, [r3, #20]
   18a0c:	ldr	r0, [r8, #16]
   18a10:	bl	1693c <daemon@@Base+0xf90>
   18a14:	b	18b70 <argp_failure@@Base+0xf88>
   18a18:	ldr	r7, [r8, #16]
   18a1c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18a20:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18a24:	ldr	r2, [r2, #20]
   18a28:	ldr	r1, [r8, #4]
   18a2c:	mov	r0, r7
   18a30:	bl	16708 <daemon@@Base+0xd5c>
   18a34:	subs	r4, r0, #0
   18a38:	beq	18b2c <argp_failure@@Base+0xf44>
   18a3c:	ldrb	r3, [r4]
   18a40:	cmp	r3, #0
   18a44:	beq	18b24 <argp_failure@@Base+0xf3c>
   18a48:	ldr	r3, [sl, #28]
   18a4c:	ldr	r2, [sl, #24]
   18a50:	sub	r3, r3, r2
   18a54:	ldr	r2, [sl, #16]
   18a58:	cmp	r3, r2
   18a5c:	bhi	18b7c <argp_failure@@Base+0xf94>
   18a60:	ldr	r5, [sl, #20]
   18a64:	bic	r5, r5, r5, asr #31
   18a68:	ldr	r3, [pc, #624]	; 18ce0 <argp_failure@@Base+0x10f8>
   18a6c:	ldr	r6, [r3, #20]
   18a70:	str	r6, [sl, #4]
   18a74:	ldr	r3, [pc, #612]	; 18ce0 <argp_failure@@Base+0x10f8>
   18a78:	ldr	r6, [r3, #20]
   18a7c:	ldr	r3, [sl, #28]
   18a80:	ldr	r2, [sl, #24]
   18a84:	sub	r3, r3, r2
   18a88:	ldr	r2, [sl, #16]
   18a8c:	cmp	r3, r2
   18a90:	bhi	18bb8 <argp_failure@@Base+0xfd0>
   18a94:	str	r6, [sl, #12]
   18a98:	ldr	r3, [pc, #576]	; 18ce0 <argp_failure@@Base+0x10f8>
   18a9c:	ldr	r1, [r3, #20]
   18aa0:	add	r3, r1, #3
   18aa4:	cmp	r3, r5
   18aa8:	bcs	18bdc <argp_failure@@Base+0xff4>
   18aac:	ldr	r2, [sl, #28]
   18ab0:	ldr	r3, [sl, #32]
   18ab4:	cmp	r2, r3
   18ab8:	bcs	18bc4 <argp_failure@@Base+0xfdc>
   18abc:	ldr	r3, [sl, #28]
   18ac0:	add	r2, r3, #1
   18ac4:	str	r2, [sl, #28]
   18ac8:	mov	r2, #10
   18acc:	strb	r2, [r3]
   18ad0:	mov	r0, r4
   18ad4:	bl	11918 <strlen@plt>
   18ad8:	subs	r5, r0, #0
   18adc:	beq	18b24 <argp_failure@@Base+0xf3c>
   18ae0:	ldr	r3, [sl, #28]
   18ae4:	add	r3, r3, r5
   18ae8:	ldr	r2, [sl, #32]
   18aec:	cmp	r2, r3
   18af0:	bcs	18b08 <argp_failure@@Base+0xf20>
   18af4:	mov	r1, r5
   18af8:	mov	r0, sl
   18afc:	bl	1b9fc <argp_parse@@Base+0x226c>
   18b00:	cmp	r0, #0
   18b04:	beq	18b24 <argp_failure@@Base+0xf3c>
   18b08:	mov	r2, r5
   18b0c:	mov	r1, r4
   18b10:	ldr	r0, [sl, #28]
   18b14:	bl	11744 <memcpy@plt>
   18b18:	ldr	r3, [sl, #28]
   18b1c:	add	r5, r3, r5
   18b20:	str	r5, [sl, #28]
   18b24:	cmp	r7, r4
   18b28:	bne	18c40 <argp_failure@@Base+0x1058>
   18b2c:	ldr	r3, [sl, #28]
   18b30:	ldr	r2, [sl, #24]
   18b34:	sub	r3, r3, r2
   18b38:	ldr	r2, [sl, #16]
   18b3c:	cmp	r3, r2
   18b40:	bhi	18c4c <argp_failure@@Base+0x1064>
   18b44:	mov	r3, #0
   18b48:	str	r3, [sl, #4]
   18b4c:	ldr	r2, [sl, #28]
   18b50:	ldr	r3, [sl, #32]
   18b54:	cmp	r2, r3
   18b58:	bcs	18c58 <argp_failure@@Base+0x1070>
   18b5c:	ldr	r3, [sl, #28]
   18b60:	add	r2, r3, #1
   18b64:	str	r2, [sl, #28]
   18b68:	mov	r2, #10
   18b6c:	strb	r2, [r3]
   18b70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18b74:	str	r3, [fp, #-88]	; 0xffffffa8
   18b78:	b	1890c <argp_failure@@Base+0xd24>
   18b7c:	mov	r0, sl
   18b80:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18b84:	ldr	r5, [sl, #20]
   18b88:	bic	r5, r5, r5, asr #31
   18b8c:	ldr	r3, [pc, #332]	; 18ce0 <argp_failure@@Base+0x10f8>
   18b90:	ldr	r6, [r3, #20]
   18b94:	ldr	r3, [sl, #28]
   18b98:	ldr	r2, [sl, #24]
   18b9c:	sub	r3, r3, r2
   18ba0:	ldr	r2, [sl, #16]
   18ba4:	cmp	r3, r2
   18ba8:	bls	18a70 <argp_failure@@Base+0xe88>
   18bac:	mov	r0, sl
   18bb0:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18bb4:	b	18a70 <argp_failure@@Base+0xe88>
   18bb8:	mov	r0, sl
   18bbc:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18bc0:	b	18a94 <argp_failure@@Base+0xeac>
   18bc4:	mov	r1, #1
   18bc8:	mov	r0, sl
   18bcc:	bl	1b9fc <argp_parse@@Base+0x226c>
   18bd0:	cmp	r0, #0
   18bd4:	beq	18ad0 <argp_failure@@Base+0xee8>
   18bd8:	b	18abc <argp_failure@@Base+0xed4>
   18bdc:	cmp	r1, r5
   18be0:	bhi	18c34 <argp_failure@@Base+0x104c>
   18be4:	ldr	r3, [sl, #28]
   18be8:	add	r3, r3, #3
   18bec:	ldr	r2, [sl, #32]
   18bf0:	cmp	r2, r3
   18bf4:	bcs	18c0c <argp_failure@@Base+0x1024>
   18bf8:	mov	r1, #3
   18bfc:	mov	r0, sl
   18c00:	bl	1b9fc <argp_parse@@Base+0x226c>
   18c04:	cmp	r0, #0
   18c08:	beq	18ad0 <argp_failure@@Base+0xee8>
   18c0c:	ldr	r3, [sl, #28]
   18c10:	ldr	r2, [pc, #196]	; 18cdc <argp_failure@@Base+0x10f4>
   18c14:	ldrh	r1, [r2]
   18c18:	ldrb	r2, [r2, #2]
   18c1c:	strh	r1, [r3]
   18c20:	strb	r2, [r3, #2]
   18c24:	ldr	r3, [sl, #28]
   18c28:	add	r3, r3, #3
   18c2c:	str	r3, [sl, #28]
   18c30:	b	18ad0 <argp_failure@@Base+0xee8>
   18c34:	mov	r0, sl
   18c38:	bl	16524 <daemon@@Base+0xb78>
   18c3c:	b	18ad0 <argp_failure@@Base+0xee8>
   18c40:	mov	r0, r4
   18c44:	bl	1a5dc <argp_parse@@Base+0xe4c>
   18c48:	b	18b2c <argp_failure@@Base+0xf44>
   18c4c:	mov	r0, sl
   18c50:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18c54:	b	18b44 <argp_failure@@Base+0xf5c>
   18c58:	mov	r1, #1
   18c5c:	mov	r0, sl
   18c60:	bl	1b9fc <argp_parse@@Base+0x226c>
   18c64:	cmp	r0, #0
   18c68:	beq	18b70 <argp_failure@@Base+0xf88>
   18c6c:	b	18b5c <argp_failure@@Base+0xf74>
   18c70:	mov	r0, sl
   18c74:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18c78:	b	18924 <argp_failure@@Base+0xd3c>
   18c7c:	mov	r0, sl
   18c80:	bl	1b458 <argp_parse@@Base+0x1cc8>
   18c84:	b	18944 <argp_failure@@Base+0xd5c>
   18c88:	strdeq	sp, [r1], -r4
   18c8c:	andeq	sp, r1, ip, lsl sp
   18c90:	andeq	sp, r1, r4, lsl #30
   18c94:	andeq	sp, r1, r4, lsr pc
   18c98:	andeq	sp, r1, ip, asr pc
   18c9c:	andeq	sp, r1, r4, lsr sp
   18ca0:			; <UNDEFINED> instruction: 0x0001dfb0
   18ca4:	andeq	sp, r1, ip, ror pc
   18ca8:			; <UNDEFINED> instruction: 0x0001dfb8
   18cac:	andeq	sp, r1, r0, asr #31
   18cb0:	andeq	r7, r1, ip, lsr r2
   18cb4:	ldrdeq	sp, [r1], -r0
   18cb8:	andeq	sp, r1, r8, asr #31
   18cbc:	ldrdeq	sp, [r1], -r8
   18cc0:	andeq	sp, r1, r0, ror #31
   18cc4:	strdeq	sp, [r1], -r0
   18cc8:	andeq	lr, r1, r8, lsr #32
   18ccc:	andeq	lr, r1, r8, lsl r2
   18cd0:	andeq	lr, r1, r0, lsr r0
   18cd4:	andeq	lr, r1, r8, lsr r0
   18cd8:	andeq	lr, r1, r0, asr #32
   18cdc:	andeq	lr, r1, r4, asr #32
   18ce0:	andeq	pc, r2, r0, lsl #11
   18ce4:	andeq	r0, r0, #5
   18ce8:	andeq	lr, r1, r8, asr #32
   18cec:	muleq	r3, r4, r0
   18cf0:	strheq	lr, [r1], -ip
   18cf4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18cf8:	cmp	r3, #0
   18cfc:	beq	18dec <argp_failure@@Base+0x1204>
   18d00:	ldr	r3, [pc, #-40]	; 18ce0 <argp_failure@@Base+0x10f8>
   18d04:	ldr	r3, [r3, #4]
   18d08:	cmp	r3, #0
   18d0c:	beq	18dec <argp_failure@@Base+0x1204>
   18d10:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18d14:	cmp	r3, #0
   18d18:	ldrne	r2, [r3]
   18d1c:	moveq	r2, #0
   18d20:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18d24:	ldr	r1, [pc, #-72]	; 18ce4 <argp_failure@@Base+0x10fc>
   18d28:	ldr	r0, [pc, #-72]	; 18ce8 <argp_failure@@Base+0x1100>
   18d2c:	bl	16708 <daemon@@Base+0xd5c>
   18d30:	subs	r4, r0, #0
   18d34:	beq	18dec <argp_failure@@Base+0x1204>
   18d38:	ldrb	r3, [r4]
   18d3c:	cmp	r3, #0
   18d40:	beq	18de0 <argp_failure@@Base+0x11f8>
   18d44:	ldr	r2, [sl, #28]
   18d48:	ldr	r3, [sl, #32]
   18d4c:	cmp	r2, r3
   18d50:	bcs	18e84 <argp_failure@@Base+0x129c>
   18d54:	ldr	r3, [sl, #28]
   18d58:	add	r2, r3, #1
   18d5c:	str	r2, [sl, #28]
   18d60:	mov	r2, #10
   18d64:	strb	r2, [r3]
   18d68:	mov	r0, r4
   18d6c:	bl	11918 <strlen@plt>
   18d70:	subs	r5, r0, #0
   18d74:	beq	18dbc <argp_failure@@Base+0x11d4>
   18d78:	ldr	r3, [sl, #28]
   18d7c:	add	r3, r3, r5
   18d80:	ldr	r2, [sl, #32]
   18d84:	cmp	r2, r3
   18d88:	bcs	18da0 <argp_failure@@Base+0x11b8>
   18d8c:	mov	r1, r5
   18d90:	mov	r0, sl
   18d94:	bl	1b9fc <argp_parse@@Base+0x226c>
   18d98:	cmp	r0, #0
   18d9c:	beq	18dbc <argp_failure@@Base+0x11d4>
   18da0:	mov	r2, r5
   18da4:	mov	r1, r4
   18da8:	ldr	r0, [sl, #28]
   18dac:	bl	11744 <memcpy@plt>
   18db0:	ldr	r3, [sl, #28]
   18db4:	add	r5, r3, r5
   18db8:	str	r5, [sl, #28]
   18dbc:	ldr	r2, [sl, #28]
   18dc0:	ldr	r3, [sl, #32]
   18dc4:	cmp	r2, r3
   18dc8:	bcs	18e9c <argp_failure@@Base+0x12b4>
   18dcc:	ldr	r3, [sl, #28]
   18dd0:	add	r2, r3, #1
   18dd4:	str	r2, [sl, #28]
   18dd8:	mov	r2, #10
   18ddc:	strb	r2, [r3]
   18de0:	ldr	r3, [pc, #-256]	; 18ce8 <argp_failure@@Base+0x1100>
   18de4:	cmp	r4, r3
   18de8:	bne	18eb4 <argp_failure@@Base+0x12cc>
   18dec:	mov	r4, #1
   18df0:	ldr	r3, [fp, #-104]	; 0xffffff98
   18df4:	tst	r3, #32
   18df8:	bne	18ec0 <argp_failure@@Base+0x12d8>
   18dfc:	ldr	r3, [fp, #-104]	; 0xffffff98
   18e00:	tst	r3, #64	; 0x40
   18e04:	beq	18e58 <argp_failure@@Base+0x1270>
   18e08:	ldr	r3, [pc, #-292]	; 18cec <argp_failure@@Base+0x1104>
   18e0c:	ldr	r3, [r3]
   18e10:	cmp	r3, #0
   18e14:	beq	18e58 <argp_failure@@Base+0x1270>
   18e18:	cmp	r4, #0
   18e1c:	beq	18e44 <argp_failure@@Base+0x125c>
   18e20:	ldr	r2, [sl, #28]
   18e24:	ldr	r3, [sl, #32]
   18e28:	cmp	r2, r3
   18e2c:	bcs	18ee8 <argp_failure@@Base+0x1300>
   18e30:	ldr	r3, [sl, #28]
   18e34:	add	r2, r3, #1
   18e38:	str	r2, [sl, #28]
   18e3c:	mov	r2, #10
   18e40:	strb	r2, [r3]
   18e44:	ldr	r3, [pc, #-352]	; 18cec <argp_failure@@Base+0x1104>
   18e48:	ldr	r2, [r3]
   18e4c:	ldr	r1, [pc, #-356]	; 18cf0 <argp_failure@@Base+0x1108>
   18e50:	mov	r0, sl
   18e54:	bl	1baec <argp_parse@@Base+0x235c>
   18e58:	ldr	r0, [fp, #-132]	; 0xffffff7c
   18e5c:	bl	11804 <funlockfile@plt>
   18e60:	ldr	r3, [fp, #-108]	; 0xffffff94
   18e64:	cmp	r3, #0
   18e68:	beq	18e74 <argp_failure@@Base+0x128c>
   18e6c:	mov	r0, r3
   18e70:	bl	163e0 <daemon@@Base+0xa34>
   18e74:	mov	r0, sl
   18e78:	bl	1b9bc <argp_parse@@Base+0x222c>
   18e7c:	sub	sp, fp, #32
   18e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e84:	mov	r1, #1
   18e88:	mov	r0, sl
   18e8c:	bl	1b9fc <argp_parse@@Base+0x226c>
   18e90:	cmp	r0, #0
   18e94:	beq	18d68 <argp_failure@@Base+0x1180>
   18e98:	b	18d54 <argp_failure@@Base+0x116c>
   18e9c:	mov	r1, #1
   18ea0:	mov	r0, sl
   18ea4:	bl	1b9fc <argp_parse@@Base+0x226c>
   18ea8:	cmp	r0, #0
   18eac:	beq	18de0 <argp_failure@@Base+0x11f8>
   18eb0:	b	18dcc <argp_failure@@Base+0x11e4>
   18eb4:	mov	r0, r4
   18eb8:	bl	1a5dc <argp_parse@@Base+0xe4c>
   18ebc:	b	18dec <argp_failure@@Base+0x1204>
   18ec0:	str	sl, [sp, #4]
   18ec4:	mov	r3, #0
   18ec8:	str	r3, [sp]
   18ecc:	mov	r3, r4
   18ed0:	mov	r2, #1
   18ed4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18ed8:	ldr	r0, [fp, #-112]	; 0xffffff90
   18edc:	bl	16ca4 <daemon@@Base+0x12f8>
   18ee0:	orr	r4, r4, r0
   18ee4:	b	18dfc <argp_failure@@Base+0x1214>
   18ee8:	mov	r1, #1
   18eec:	mov	r0, sl
   18ef0:	bl	1b9fc <argp_parse@@Base+0x226c>
   18ef4:	cmp	r0, #0
   18ef8:	beq	18e44 <argp_failure@@Base+0x125c>
   18efc:	b	18e30 <argp_failure@@Base+0x1248>
   18f00:	ldrb	r3, [r5]
   18f04:	mov	r4, r5
   18f08:	mov	r5, #0
   18f0c:	b	17fe0 <argp_failure@@Base+0x3f8>
   18f10:	mov	r4, r2
   18f14:	b	17ff4 <argp_failure@@Base+0x40c>
   18f18:	cmp	r0, #110	; 0x6e
   18f1c:	beq	1804c <argp_failure@@Base+0x464>
   18f20:	mov	r3, #1
   18f24:	str	r3, [fp, #-96]	; 0xffffffa0
   18f28:	str	r3, [fp, #-116]	; 0xffffff8c
   18f2c:	add	r6, sl, #24
   18f30:	b	18144 <argp_failure@@Base+0x55c>
   18f34:	ldrb	r3, [r9]
   18f38:	cmp	r7, r3
   18f3c:	beq	18618 <argp_failure@@Base+0xa30>
   18f40:	add	r4, r4, #24
   18f44:	subs	r5, r5, #1
   18f48:	beq	18708 <argp_failure@@Base+0xb20>
   18f4c:	ldr	r6, [r4, #12]
   18f50:	tst	r6, #8
   18f54:	bne	18f40 <argp_failure@@Base+0x1358>
   18f58:	ldr	r7, [r4, #4]
   18f5c:	sub	r3, r7, #1
   18f60:	cmp	r3, #254	; 0xfe
   18f64:	bhi	18f40 <argp_failure@@Base+0x1358>
   18f68:	bl	118f4 <__ctype_b_loc@plt>
   18f6c:	ldr	r2, [r0]
   18f70:	lsl	r3, r7, #1
   18f74:	ldrh	r3, [r2, r3]
   18f78:	tst	r3, #16384	; 0x4000
   18f7c:	bne	18f34 <argp_failure@@Base+0x134c>
   18f80:	b	18f40 <argp_failure@@Base+0x1358>

00018f84 <argp_help@@Base>:
   18f84:	push	{lr}		; (str lr, [sp, #-4]!)
   18f88:	sub	sp, sp, #12
   18f8c:	str	r3, [sp]
   18f90:	mov	r3, r2
   18f94:	mov	r2, r1
   18f98:	mov	r1, #0
   18f9c:	bl	17df0 <argp_failure@@Base+0x208>
   18fa0:	add	sp, sp, #12
   18fa4:	pop	{pc}		; (ldr pc, [sp], #4)

00018fa8 <argp_state_help@@Base>:
   18fa8:	push	{r4, r5, lr}
   18fac:	sub	sp, sp, #12
   18fb0:	mov	r5, r2
   18fb4:	subs	r4, r0, #0
   18fb8:	beq	1901c <argp_state_help@@Base+0x74>
   18fbc:	ldr	r3, [r4, #16]
   18fc0:	tst	r3, #2
   18fc4:	bne	19014 <argp_state_help@@Base+0x6c>
   18fc8:	cmp	r1, #0
   18fcc:	beq	19014 <argp_state_help@@Base+0x6c>
   18fd0:	ldr	r3, [r4, #16]
   18fd4:	tst	r3, #64	; 0x40
   18fd8:	orrne	r5, r5, #128	; 0x80
   18fdc:	ldr	r0, [r4]
   18fe0:	ldr	r3, [r4, #40]	; 0x28
   18fe4:	str	r3, [sp]
   18fe8:	mov	r3, r5
   18fec:	mov	r2, r1
   18ff0:	mov	r1, r4
   18ff4:	bl	17df0 <argp_failure@@Base+0x208>
   18ff8:	ldr	r3, [r4, #16]
   18ffc:	tst	r3, #32
   19000:	bne	19014 <argp_state_help@@Base+0x6c>
   19004:	tst	r5, #256	; 0x100
   19008:	bne	19048 <argp_state_help@@Base+0xa0>
   1900c:	tst	r5, #512	; 0x200
   19010:	bne	19054 <argp_state_help@@Base+0xac>
   19014:	add	sp, sp, #12
   19018:	pop	{r4, r5, pc}
   1901c:	cmp	r1, #0
   19020:	beq	19014 <argp_state_help@@Base+0x6c>
   19024:	ldr	r3, [pc, #48]	; 1905c <argp_state_help@@Base+0xb4>
   19028:	ldr	r3, [r3]
   1902c:	str	r3, [sp]
   19030:	mov	r3, r2
   19034:	mov	r2, r1
   19038:	mov	r1, #0
   1903c:	mov	r0, r1
   19040:	bl	17df0 <argp_failure@@Base+0x208>
   19044:	b	19004 <argp_state_help@@Base+0x5c>
   19048:	ldr	r3, [pc, #16]	; 19060 <argp_state_help@@Base+0xb8>
   1904c:	ldr	r0, [r3]
   19050:	bl	1190c <exit@plt>
   19054:	mov	r0, #0
   19058:	bl	1190c <exit@plt>
   1905c:	andeq	pc, r2, r0, asr #11
   19060:	andeq	pc, r2, r8, lsr #11

00019064 <argp_error@@Base>:
   19064:	push	{r1, r2, r3}
   19068:	push	{r4, r5, lr}
   1906c:	sub	sp, sp, #8
   19070:	subs	r5, r0, #0
   19074:	beq	19144 <argp_error@@Base+0xe0>
   19078:	ldr	r3, [r5, #16]
   1907c:	tst	r3, #2
   19080:	bne	19134 <argp_error@@Base+0xd0>
   19084:	ldr	r4, [r5, #44]	; 0x2c
   19088:	cmp	r4, #0
   1908c:	beq	19134 <argp_error@@Base+0xd0>
   19090:	mov	r0, r4
   19094:	bl	11a50 <flockfile@plt>
   19098:	add	r3, sp, #24
   1909c:	str	r3, [sp, #4]
   190a0:	ldr	r0, [r5, #40]	; 0x28
   190a4:	mov	r1, r4
   190a8:	bl	11660 <fputs_unlocked@plt>
   190ac:	ldr	r3, [r4, #20]
   190b0:	ldr	r2, [r4, #24]
   190b4:	cmp	r3, r2
   190b8:	addcc	r2, r3, #1
   190bc:	strcc	r2, [r4, #20]
   190c0:	movcc	r2, #58	; 0x3a
   190c4:	strbcc	r2, [r3]
   190c8:	bcs	19170 <argp_error@@Base+0x10c>
   190cc:	ldr	r3, [r4, #20]
   190d0:	ldr	r2, [r4, #24]
   190d4:	cmp	r3, r2
   190d8:	addcc	r2, r3, #1
   190dc:	strcc	r2, [r4, #20]
   190e0:	movcc	r2, #32
   190e4:	strbcc	r2, [r3]
   190e8:	bcs	19180 <argp_error@@Base+0x11c>
   190ec:	ldr	r2, [sp, #4]
   190f0:	ldr	r1, [sp, #20]
   190f4:	mov	r0, r4
   190f8:	bl	11a2c <vfprintf@plt>
   190fc:	ldr	r3, [r4, #20]
   19100:	ldr	r2, [r4, #24]
   19104:	cmp	r3, r2
   19108:	addcc	r2, r3, #1
   1910c:	strcc	r2, [r4, #20]
   19110:	movcc	r2, #10
   19114:	strbcc	r2, [r3]
   19118:	bcs	19190 <argp_error@@Base+0x12c>
   1911c:	mov	r2, #260	; 0x104
   19120:	mov	r1, r4
   19124:	mov	r0, r5
   19128:	bl	18fa8 <argp_state_help@@Base>
   1912c:	mov	r0, r4
   19130:	bl	11804 <funlockfile@plt>
   19134:	add	sp, sp, #8
   19138:	pop	{r4, r5, lr}
   1913c:	add	sp, sp, #12
   19140:	bx	lr
   19144:	ldr	r3, [pc, #84]	; 191a0 <argp_error@@Base+0x13c>
   19148:	ldr	r4, [r3]
   1914c:	cmp	r4, #0
   19150:	beq	19134 <argp_error@@Base+0xd0>
   19154:	mov	r0, r4
   19158:	bl	11a50 <flockfile@plt>
   1915c:	add	r3, sp, #24
   19160:	str	r3, [sp, #4]
   19164:	ldr	r3, [pc, #56]	; 191a4 <argp_error@@Base+0x140>
   19168:	ldr	r0, [r3]
   1916c:	b	190a4 <argp_error@@Base+0x40>
   19170:	mov	r1, #58	; 0x3a
   19174:	mov	r0, r4
   19178:	bl	119f0 <__overflow@plt>
   1917c:	b	190cc <argp_error@@Base+0x68>
   19180:	mov	r1, #32
   19184:	mov	r0, r4
   19188:	bl	119f0 <__overflow@plt>
   1918c:	b	190ec <argp_error@@Base+0x88>
   19190:	mov	r1, #10
   19194:	mov	r0, r4
   19198:	bl	119f0 <__overflow@plt>
   1919c:	b	1911c <argp_error@@Base+0xb8>
   191a0:	andeq	pc, r2, r8, asr #11
   191a4:	andeq	pc, r2, r0, asr #11
   191a8:	ldr	ip, [r0]
   191ac:	cmp	ip, #0
   191b0:	beq	19204 <argp_error@@Base+0x1a0>
   191b4:	push	{r4, r5, r6, lr}
   191b8:	mov	ip, r2
   191bc:	mov	r5, r1
   191c0:	mov	r4, r0
   191c4:	ldr	r2, [r0, #32]
   191c8:	str	r2, [r1, #36]	; 0x24
   191cc:	ldr	r2, [r0, #24]
   191d0:	str	r2, [r1, #28]
   191d4:	ldr	r2, [r0, #28]
   191d8:	str	r2, [r1, #32]
   191dc:	ldr	r2, [r0, #12]
   191e0:	str	r2, [r1, #20]
   191e4:	ldr	r6, [r0]
   191e8:	mov	r2, r1
   191ec:	mov	r1, r3
   191f0:	mov	r0, ip
   191f4:	blx	r6
   191f8:	ldr	r3, [r5, #36]	; 0x24
   191fc:	str	r3, [r4, #32]
   19200:	pop	{r4, r5, r6, pc}
   19204:	mov	r0, #7
   19208:	bx	lr
   1920c:	push	{r4, r5, r6, lr}
   19210:	ldr	r5, [r0, #16]
   19214:	ldr	r3, [r0]
   19218:	cmp	r3, #0
   1921c:	beq	19234 <argp_error@@Base+0x1d0>
   19220:	ldr	r2, [r1, #8]
   19224:	add	r2, r2, #1
   19228:	str	r2, [r1, #8]
   1922c:	mov	r2, #0
   19230:	b	19288 <argp_error@@Base+0x224>
   19234:	ldr	r3, [r0, #4]
   19238:	cmp	r3, #0
   1923c:	ldrne	r3, [r1, #8]
   19240:	addne	r3, r3, #1
   19244:	strne	r3, [r1, #8]
   19248:	cmp	r5, #0
   1924c:	popeq	{r4, r5, r6, pc}
   19250:	ldr	r0, [r5]
   19254:	cmp	r0, #0
   19258:	popeq	{r4, r5, r6, pc}
   1925c:	mov	r4, r1
   19260:	mov	r1, r4
   19264:	bl	1920c <argp_error@@Base+0x1a8>
   19268:	ldr	r3, [r4, #12]
   1926c:	add	r3, r3, #1
   19270:	str	r3, [r4, #12]
   19274:	ldr	r0, [r5, #16]!
   19278:	cmp	r0, #0
   1927c:	bne	19260 <argp_error@@Base+0x1fc>
   19280:	pop	{r4, r5, r6, pc}
   19284:	add	r2, r2, #1
   19288:	add	r3, r3, #24
   1928c:	ldr	r0, [r3, #-20]	; 0xffffffec
   19290:	cmp	r0, #0
   19294:	bne	19284 <argp_error@@Base+0x220>
   19298:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1929c:	cmp	r0, #0
   192a0:	bne	19284 <argp_error@@Base+0x220>
   192a4:	ldr	r0, [r3, #-8]
   192a8:	cmp	r0, #0
   192ac:	bne	19284 <argp_error@@Base+0x220>
   192b0:	ldr	r0, [r3, #-4]
   192b4:	cmp	r0, #0
   192b8:	bne	19284 <argp_error@@Base+0x220>
   192bc:	add	r0, r2, r2, lsl #1
   192c0:	ldr	r3, [r1]
   192c4:	add	r3, r3, r0
   192c8:	str	r3, [r1]
   192cc:	ldr	r3, [r1, #4]
   192d0:	add	r2, r3, r2
   192d4:	str	r2, [r1, #4]
   192d8:	b	19248 <argp_error@@Base+0x1e4>
   192dc:	cmp	r0, #86	; 0x56
   192e0:	beq	192ec <argp_error@@Base+0x288>
   192e4:	mov	r0, #7
   192e8:	bx	lr
   192ec:	push	{r4, lr}
   192f0:	mov	r4, r2
   192f4:	ldr	r3, [pc, #100]	; 19360 <argp_error@@Base+0x2fc>
   192f8:	ldr	r3, [r3]
   192fc:	cmp	r3, #0
   19300:	beq	19324 <argp_error@@Base+0x2c0>
   19304:	mov	r1, r2
   19308:	ldr	r0, [r2, #48]	; 0x30
   1930c:	blx	r3
   19310:	ldr	r3, [r4, #16]
   19314:	tst	r3, #32
   19318:	beq	19358 <argp_error@@Base+0x2f4>
   1931c:	mov	r0, #0
   19320:	pop	{r4, pc}
   19324:	ldr	r3, [pc, #56]	; 19364 <argp_error@@Base+0x300>
   19328:	ldr	r2, [r3]
   1932c:	cmp	r2, #0
   19330:	beq	19344 <argp_error@@Base+0x2e0>
   19334:	ldr	r1, [pc, #44]	; 19368 <argp_error@@Base+0x304>
   19338:	ldr	r0, [r4, #48]	; 0x30
   1933c:	bl	1193c <fprintf@plt>
   19340:	b	19310 <argp_error@@Base+0x2ac>
   19344:	ldr	r2, [pc, #32]	; 1936c <argp_error@@Base+0x308>
   19348:	ldr	r1, [pc, #32]	; 19370 <argp_error@@Base+0x30c>
   1934c:	mov	r0, r4
   19350:	bl	19064 <argp_error@@Base>
   19354:	b	19310 <argp_error@@Base+0x2ac>
   19358:	mov	r0, #0
   1935c:	bl	1190c <exit@plt>
   19360:	andeq	pc, r2, ip, lsl #20
   19364:	muleq	r3, r8, r0
   19368:	andeq	lr, r1, ip, ror #6
   1936c:	andeq	lr, r1, r8, ror #3
   19370:	andeq	sp, r1, ip, lsl #26
   19374:	push	{r4, r5, r6, lr}
   19378:	mov	r4, r2
   1937c:	cmn	r0, #3
   19380:	beq	1941c <argp_error@@Base+0x3b8>
   19384:	mov	r5, r1
   19388:	ble	193b4 <argp_error@@Base+0x350>
   1938c:	cmn	r0, #2
   19390:	beq	19434 <argp_error@@Base+0x3d0>
   19394:	cmp	r0, #63	; 0x3f
   19398:	bne	19478 <argp_error@@Base+0x414>
   1939c:	ldr	r2, [pc, #228]	; 19488 <argp_error@@Base+0x424>
   193a0:	ldr	r1, [r4, #48]	; 0x30
   193a4:	mov	r0, r4
   193a8:	bl	18fa8 <argp_state_help@@Base>
   193ac:	mov	r0, #0
   193b0:	pop	{r4, r5, r6, pc}
   193b4:	cmn	r0, #4
   193b8:	bne	19478 <argp_error@@Base+0x414>
   193bc:	mov	r2, #10
   193c0:	mov	r1, #0
   193c4:	ldr	r0, [pc, #192]	; 1948c <argp_error@@Base+0x428>
   193c8:	cmp	r5, r1
   193cc:	movne	r0, r5
   193d0:	bl	11690 <strtol@plt>
   193d4:	ldr	r3, [pc, #180]	; 19490 <argp_error@@Base+0x42c>
   193d8:	str	r0, [r3]
   193dc:	ldr	r2, [r3]
   193e0:	sub	r1, r2, #1
   193e4:	str	r1, [r3]
   193e8:	cmp	r2, #0
   193ec:	ble	19480 <argp_error@@Base+0x41c>
   193f0:	mov	r5, #1
   193f4:	mov	r4, r3
   193f8:	mov	r0, r5
   193fc:	bl	11774 <sleep@plt>
   19400:	ldr	r3, [r4]
   19404:	sub	r2, r3, #1
   19408:	str	r2, [r4]
   1940c:	cmp	r3, #0
   19410:	bgt	193f8 <argp_error@@Base+0x394>
   19414:	mov	r0, #0
   19418:	pop	{r4, r5, r6, pc}
   1941c:	ldr	r2, [pc, #112]	; 19494 <argp_error@@Base+0x430>
   19420:	ldr	r1, [r4, #48]	; 0x30
   19424:	mov	r0, r4
   19428:	bl	18fa8 <argp_state_help@@Base>
   1942c:	mov	r0, #0
   19430:	pop	{r4, r5, r6, pc}
   19434:	ldr	r3, [pc, #92]	; 19498 <argp_error@@Base+0x434>
   19438:	str	r1, [r3]
   1943c:	mov	r0, r1
   19440:	bl	1a2c4 <argp_parse@@Base+0xb34>
   19444:	str	r0, [r4, #40]	; 0x28
   19448:	ldr	r3, [pc, #76]	; 1949c <argp_error@@Base+0x438>
   1944c:	str	r0, [r3]
   19450:	ldr	r3, [r4, #16]
   19454:	and	r3, r3, #3
   19458:	cmp	r3, #1
   1945c:	beq	19468 <argp_error@@Base+0x404>
   19460:	mov	r0, #0
   19464:	pop	{r4, r5, r6, pc}
   19468:	ldr	r3, [r4, #8]
   1946c:	str	r5, [r3]
   19470:	mov	r0, #0
   19474:	pop	{r4, r5, r6, pc}
   19478:	mov	r0, #7
   1947c:	pop	{r4, r5, r6, pc}
   19480:	mov	r0, #0
   19484:	pop	{r4, r5, r6, pc}
   19488:	andeq	r0, r0, sl, ror r2
   1948c:	andeq	lr, r1, ip, lsl #4
   19490:	andeq	pc, r2, r8, lsl #20
   19494:	andeq	r0, r0, r1, lsl #4
   19498:	andeq	pc, r2, r4, asr #11
   1949c:	andeq	pc, r2, r0, asr #11
   194a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194a4:	sub	sp, sp, #36	; 0x24
   194a8:	str	r0, [sp, #12]
   194ac:	str	r1, [sp, #16]
   194b0:	str	r2, [sp, #20]
   194b4:	mov	r8, r3
   194b8:	ldr	sl, [sp, #72]	; 0x48
   194bc:	ldr	r9, [r0]
   194c0:	ldr	r5, [r0, #16]
   194c4:	cmp	r9, #0
   194c8:	addne	r6, r9, #24
   194cc:	strne	r5, [sp, #28]
   194d0:	strne	r8, [sp, #24]
   194d4:	bne	195e0 <argp_error@@Base+0x57c>
   194d8:	ldr	r3, [sp, #12]
   194dc:	ldr	r3, [r3, #4]
   194e0:	cmp	r3, #0
   194e4:	moveq	r0, r8
   194e8:	moveq	r8, #0
   194ec:	beq	1956c <argp_error@@Base+0x508>
   194f0:	ldr	r2, [sp, #12]
   194f4:	ldr	r3, [r2, #4]
   194f8:	str	r3, [r8]
   194fc:	str	r2, [r8, #4]
   19500:	ldr	r3, [sl, #4]
   19504:	str	r3, [r8, #8]
   19508:	mov	r3, #0
   1950c:	str	r3, [r8, #12]
   19510:	ldr	r2, [sp, #16]
   19514:	str	r2, [r8, #16]
   19518:	ldr	r2, [sp, #20]
   1951c:	str	r2, [r8, #20]
   19520:	str	r3, [r8, #24]
   19524:	str	r3, [r8, #32]
   19528:	str	r3, [r8, #28]
   1952c:	cmp	r5, r3
   19530:	beq	19568 <argp_error@@Base+0x504>
   19534:	ldr	r3, [r5]
   19538:	cmp	r3, #0
   1953c:	beq	19788 <argp_error@@Base+0x724>
   19540:	mov	r3, #0
   19544:	add	r3, r3, #1
   19548:	ldr	r2, [r5, r3, lsl #4]
   1954c:	cmp	r2, #0
   19550:	bne	19544 <argp_error@@Base+0x4e0>
   19554:	ldr	r2, [sl, #12]
   19558:	str	r2, [r8, #28]
   1955c:	ldr	r2, [sl, #12]
   19560:	add	r3, r2, r3, lsl #2
   19564:	str	r3, [sl, #12]
   19568:	add	r0, r8, #36	; 0x24
   1956c:	cmp	r5, #0
   19570:	beq	195ac <argp_error@@Base+0x548>
   19574:	ldr	ip, [r5]
   19578:	cmp	ip, #0
   1957c:	beq	195ac <argp_error@@Base+0x548>
   19580:	mov	r2, #0
   19584:	add	r4, r2, #1
   19588:	str	sl, [sp]
   1958c:	mov	r3, r0
   19590:	mov	r1, r8
   19594:	mov	r0, ip
   19598:	bl	194a0 <argp_error@@Base+0x43c>
   1959c:	ldr	ip, [r5, r4, lsl #4]
   195a0:	mov	r2, r4
   195a4:	cmp	ip, #0
   195a8:	bne	19584 <argp_error@@Base+0x520>
   195ac:	add	sp, sp, #36	; 0x24
   195b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195b4:	ldr	r0, [r4, #16]!
   195b8:	cmp	r0, #0
   195bc:	beq	196c8 <argp_error@@Base+0x664>
   195c0:	mov	r1, r7
   195c4:	bl	11684 <strcmp@plt>
   195c8:	cmp	r0, #0
   195cc:	bne	195b4 <argp_error@@Base+0x550>
   195d0:	sub	r4, r4, fp
   195d4:	cmn	r4, #15
   195d8:	blt	196c8 <argp_error@@Base+0x664>
   195dc:	add	r6, r6, #24
   195e0:	sub	r2, r6, #24
   195e4:	mov	r8, r6
   195e8:	ldr	r4, [r6, #-20]	; 0xffffffec
   195ec:	cmp	r4, #0
   195f0:	bne	19600 <argp_error@@Base+0x59c>
   195f4:	ldr	r3, [r6, #-24]	; 0xffffffe8
   195f8:	cmp	r3, #0
   195fc:	beq	19764 <argp_error@@Base+0x700>
   19600:	ldr	r3, [r8, #-12]
   19604:	and	r1, r3, #4
   19608:	cmp	r1, #0
   1960c:	moveq	r9, r2
   19610:	ldr	r5, [r9, #12]
   19614:	ands	r5, r5, #8
   19618:	bne	195dc <argp_error@@Base+0x578>
   1961c:	tst	r3, #8
   19620:	bne	196a4 <argp_error@@Base+0x640>
   19624:	sub	r3, r4, #1
   19628:	cmp	r3, #254	; 0xfe
   1962c:	bhi	196a4 <argp_error@@Base+0x640>
   19630:	bl	118f4 <__ctype_b_loc@plt>
   19634:	ldr	r3, [r0]
   19638:	lsl	r4, r4, #1
   1963c:	ldrh	r3, [r3, r4]
   19640:	tst	r3, #16384	; 0x4000
   19644:	beq	196a4 <argp_error@@Base+0x640>
   19648:	ldr	r3, [sl, #4]
   1964c:	add	r2, r3, #1
   19650:	str	r2, [sl, #4]
   19654:	ldr	r2, [r8, #-20]	; 0xffffffec
   19658:	strb	r2, [r3]
   1965c:	ldr	r3, [r9, #8]
   19660:	cmp	r3, #0
   19664:	beq	19698 <argp_error@@Base+0x634>
   19668:	ldr	r3, [sl, #4]
   1966c:	add	r2, r3, #1
   19670:	str	r2, [sl, #4]
   19674:	mov	r2, #58	; 0x3a
   19678:	strb	r2, [r3]
   1967c:	ldr	r3, [r9, #12]
   19680:	tst	r3, #1
   19684:	ldrne	r3, [sl, #4]
   19688:	addne	r2, r3, #1
   1968c:	strne	r2, [sl, #4]
   19690:	movne	r2, #58	; 0x3a
   19694:	strbne	r2, [r3]
   19698:	ldr	r3, [sl, #4]
   1969c:	mov	r2, #0
   196a0:	strb	r2, [r3]
   196a4:	ldr	r7, [r8, #-24]	; 0xffffffe8
   196a8:	cmp	r7, #0
   196ac:	beq	195dc <argp_error@@Base+0x578>
   196b0:	ldr	r3, [sl]
   196b4:	ldr	fp, [r3, #8]
   196b8:	ldr	r0, [fp]
   196bc:	cmp	r0, #0
   196c0:	movne	r4, fp
   196c4:	bne	195c0 <argp_error@@Base+0x55c>
   196c8:	ldr	r3, [sl, #8]
   196cc:	str	r7, [r3]
   196d0:	ldr	r3, [sl, #8]
   196d4:	ldr	r2, [r9, #8]
   196d8:	cmp	r2, #0
   196dc:	beq	196f4 <argp_error@@Base+0x690>
   196e0:	ldr	r5, [r9, #12]
   196e4:	and	r5, r5, #1
   196e8:	cmp	r5, #0
   196ec:	movne	r5, #2
   196f0:	moveq	r5, #1
   196f4:	str	r5, [r3, #4]
   196f8:	ldr	r3, [sl, #8]
   196fc:	mov	r2, #0
   19700:	str	r2, [r3, #8]
   19704:	ldr	r1, [sl, #8]
   19708:	ldr	r0, [r8, #-20]	; 0xffffffec
   1970c:	cmp	r0, r2
   19710:	ldreq	r0, [r9, #4]
   19714:	bic	r0, r0, #-16777216	; 0xff000000
   19718:	ldr	r3, [sl]
   1971c:	ldr	r3, [r3, #48]	; 0x30
   19720:	ldr	r2, [sp, #24]
   19724:	sub	r3, r2, r3
   19728:	asr	r3, r3, #2
   1972c:	rsb	r2, r3, r3, lsl #3
   19730:	add	r2, r2, r2, lsl #6
   19734:	add	r2, r3, r2, lsl #3
   19738:	rsb	r2, r2, r2, lsl #15
   1973c:	add	r3, r3, r2, lsl #3
   19740:	add	r3, r3, #1
   19744:	add	r3, r0, r3, lsl #24
   19748:	str	r3, [r1, #12]
   1974c:	ldr	r3, [sl, #8]
   19750:	add	r2, r3, #16
   19754:	str	r2, [sl, #8]
   19758:	mov	r2, #0
   1975c:	str	r2, [r3, #16]
   19760:	b	195dc <argp_error@@Base+0x578>
   19764:	ldr	r3, [r6, #-8]
   19768:	cmp	r3, #0
   1976c:	bne	19600 <argp_error@@Base+0x59c>
   19770:	ldr	r3, [r6, #-4]
   19774:	cmp	r3, #0
   19778:	bne	19600 <argp_error@@Base+0x59c>
   1977c:	ldr	r5, [sp, #28]
   19780:	ldr	r8, [sp, #24]
   19784:	b	194f0 <argp_error@@Base+0x48c>
   19788:	mov	r3, #0
   1978c:	b	19554 <argp_error@@Base+0x4f0>

00019790 <argp_parse@@Base>:
   19790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19794:	add	fp, sp, #32
   19798:	sub	sp, sp, #220	; 0xdc
   1979c:	mov	r8, r0
   197a0:	str	r1, [fp, #-236]	; 0xffffff14
   197a4:	str	r2, [fp, #-232]	; 0xffffff18
   197a8:	mov	r6, r3
   197ac:	tst	r3, #1
   197b0:	bne	197e0 <argp_parse@@Base+0x50>
   197b4:	ldr	r3, [pc, #2548]	; 1a1b0 <argp_parse@@Base+0xa20>
   197b8:	ldr	r3, [r3]
   197bc:	cmp	r3, #0
   197c0:	moveq	r3, r2
   197c4:	ldreq	r2, [r3]
   197c8:	ldreq	r3, [pc, #2528]	; 1a1b0 <argp_parse@@Base+0xa20>
   197cc:	streq	r2, [r3]
   197d0:	ldr	r3, [pc, #2524]	; 1a1b4 <argp_parse@@Base+0xa24>
   197d4:	ldr	r3, [r3]
   197d8:	cmp	r3, #0
   197dc:	beq	199d0 <argp_parse@@Base+0x240>
   197e0:	tst	r6, #16
   197e4:	beq	199e8 <argp_parse@@Base+0x258>
   197e8:	mov	r2, #36	; 0x24
   197ec:	mov	r1, #0
   197f0:	sub	r0, fp, #196	; 0xc4
   197f4:	bl	11984 <memset@plt>
   197f8:	ands	r3, r6, #4
   197fc:	str	r3, [fp, #-240]	; 0xffffff10
   19800:	moveq	r3, #1
   19804:	movne	r3, #0
   19808:	str	r3, [fp, #-228]	; 0xffffff1c
   1980c:	mov	r3, #0
   19810:	str	r3, [fp, #-224]	; 0xffffff20
   19814:	str	r3, [fp, #-220]	; 0xffffff24
   19818:	str	r3, [fp, #-216]	; 0xffffff28
   1981c:	cmp	r8, r3
   19820:	beq	19830 <argp_parse@@Base+0xa0>
   19824:	sub	r1, fp, #228	; 0xe4
   19828:	mov	r0, r8
   1982c:	bl	1920c <argp_error@@Base+0x1a8>
   19830:	ldr	r4, [fp, #-220]	; 0xffffff24
   19834:	add	r4, r4, #1
   19838:	add	r4, r4, r4, lsl #3
   1983c:	lsl	r4, r4, #2
   19840:	ldr	r9, [fp, #-216]	; 0xffffff28
   19844:	lsl	r9, r9, #2
   19848:	add	sl, r9, r4
   1984c:	ldr	r5, [fp, #-224]	; 0xffffff20
   19850:	add	r5, r5, #1
   19854:	add	r5, sl, r5, lsl #4
   19858:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1985c:	add	r0, r0, #1
   19860:	add	r0, r0, r5
   19864:	bl	1b360 <argp_parse@@Base+0x1bd0>
   19868:	mov	r7, r0
   1986c:	str	r0, [fp, #-40]	; 0xffffffd8
   19870:	cmp	r0, #0
   19874:	moveq	r4, #12
   19878:	beq	1a000 <argp_parse@@Base+0x870>
   1987c:	str	r0, [fp, #-112]	; 0xffffff90
   19880:	add	r4, r0, r4
   19884:	str	r4, [fp, #-104]	; 0xffffff98
   19888:	add	r3, r0, sl
   1988c:	str	r3, [fp, #-244]	; 0xffffff0c
   19890:	str	r3, [fp, #-152]	; 0xffffff68
   19894:	add	sl, r0, r5
   19898:	str	sl, [fp, #-156]	; 0xffffff64
   1989c:	mov	r3, #1
   198a0:	str	r3, [fp, #-196]	; 0xffffff3c
   198a4:	str	r3, [fp, #-192]	; 0xffffff40
   198a8:	sub	ip, fp, #148	; 0x94
   198ac:	sub	lr, fp, #196	; 0xc4
   198b0:	ldm	lr!, {r0, r1, r2, r3}
   198b4:	stmia	ip!, {r0, r1, r2, r3}
   198b8:	ldm	lr!, {r0, r1, r2, r3}
   198bc:	stmia	ip!, {r0, r1, r2, r3}
   198c0:	ldr	r3, [lr]
   198c4:	str	r3, [ip]
   198c8:	mov	r2, r9
   198cc:	mov	r1, #0
   198d0:	mov	r0, r4
   198d4:	bl	11984 <memset@plt>
   198d8:	sub	r3, fp, #160	; 0xa0
   198dc:	str	r3, [fp, #-212]	; 0xffffff2c
   198e0:	str	sl, [fp, #-208]	; 0xffffff30
   198e4:	ldr	r3, [fp, #-244]	; 0xffffff0c
   198e8:	str	r3, [fp, #-204]	; 0xffffff34
   198ec:	str	r4, [fp, #-200]	; 0xffffff38
   198f0:	tst	r6, #8
   198f4:	beq	19a80 <argp_parse@@Base+0x2f0>
   198f8:	add	sl, sl, #1
   198fc:	str	sl, [fp, #-208]	; 0xffffff30
   19900:	mov	r3, #45	; 0x2d
   19904:	strb	r3, [r7, r5]
   19908:	mov	r3, #0
   1990c:	ldr	r2, [fp, #-208]	; 0xffffff30
   19910:	strb	r3, [r2]
   19914:	ldr	r2, [fp, #-204]	; 0xffffff34
   19918:	str	r3, [r2]
   1991c:	str	r8, [fp, #-160]	; 0xffffff60
   19920:	cmp	r8, r3
   19924:	beq	19a9c <argp_parse@@Base+0x30c>
   19928:	sub	r3, fp, #212	; 0xd4
   1992c:	str	r3, [sp]
   19930:	ldr	r3, [fp, #-112]	; 0xffffff90
   19934:	mov	r2, #0
   19938:	mov	r1, r2
   1993c:	mov	r0, r8
   19940:	bl	194a0 <argp_error@@Base+0x43c>
   19944:	str	r0, [fp, #-108]	; 0xffffff94
   19948:	mov	r2, #56	; 0x38
   1994c:	mov	r1, #0
   19950:	sub	r0, fp, #96	; 0x60
   19954:	bl	11984 <memset@plt>
   19958:	ldr	r3, [fp, #-160]	; 0xffffff60
   1995c:	str	r3, [fp, #-96]	; 0xffffffa0
   19960:	ldr	r3, [fp, #-236]	; 0xffffff14
   19964:	str	r3, [fp, #-92]	; 0xffffffa4
   19968:	ldr	r3, [fp, #-232]	; 0xffffff18
   1996c:	str	r3, [fp, #-88]	; 0xffffffa8
   19970:	str	r6, [fp, #-80]	; 0xffffffb0
   19974:	ldr	r3, [pc, #2108]	; 1a1b8 <argp_parse@@Base+0xa28>
   19978:	ldr	r3, [r3]
   1997c:	str	r3, [fp, #-52]	; 0xffffffcc
   19980:	ldr	r3, [pc, #2100]	; 1a1bc <argp_parse@@Base+0xa2c>
   19984:	ldr	r3, [r3]
   19988:	str	r3, [fp, #-48]	; 0xffffffd0
   1998c:	sub	r3, fp, #160	; 0xa0
   19990:	str	r3, [fp, #-44]	; 0xffffffd4
   19994:	mov	r3, #1
   19998:	str	r3, [fp, #-100]	; 0xffffff9c
   1999c:	ldr	r3, [fp, #-112]	; 0xffffff90
   199a0:	ldr	r2, [fp, #-108]	; 0xffffff94
   199a4:	cmp	r3, r2
   199a8:	bcs	19b34 <argp_parse@@Base+0x3a4>
   199ac:	ldr	r2, [fp, #8]
   199b0:	str	r2, [r3, #24]
   199b4:	ldr	r5, [fp, #-112]	; 0xffffff90
   199b8:	ldr	r3, [fp, #-108]	; 0xffffff94
   199bc:	cmp	r5, r3
   199c0:	bcs	19b40 <argp_parse@@Base+0x3b0>
   199c4:	ldr	r7, [pc, #2036]	; 1a1c0 <argp_parse@@Base+0xa30>
   199c8:	mov	r6, #0
   199cc:	b	19ad8 <argp_parse@@Base+0x348>
   199d0:	ldr	r3, [fp, #-232]	; 0xffffff18
   199d4:	ldr	r0, [r3]
   199d8:	bl	1a2c4 <argp_parse@@Base+0xb34>
   199dc:	ldr	r3, [pc, #2000]	; 1a1b4 <argp_parse@@Base+0xa24>
   199e0:	str	r0, [r3]
   199e4:	b	197e0 <argp_parse@@Base+0x50>
   199e8:	sub	sp, sp, #72	; 0x48
   199ec:	add	r5, sp, #8
   199f0:	sub	sp, sp, #40	; 0x28
   199f4:	add	r4, sp, #8
   199f8:	mov	r1, #0
   199fc:	str	r1, [r4]
   19a00:	str	r1, [r4, #4]
   19a04:	str	r1, [r4, #8]
   19a08:	str	r1, [r4, #12]
   19a0c:	str	r1, [r4, #20]
   19a10:	str	r1, [r4, #24]
   19a14:	str	r5, [r4, #16]
   19a18:	mov	r2, #64	; 0x40
   19a1c:	mov	r0, r5
   19a20:	bl	11984 <memset@plt>
   19a24:	cmp	r8, #0
   19a28:	addne	r3, r5, #16
   19a2c:	strne	r8, [r5]
   19a30:	moveq	r3, r5
   19a34:	ldr	r2, [pc, #1928]	; 1a1c4 <argp_parse@@Base+0xa34>
   19a38:	str	r2, [r3]
   19a3c:	ldr	r2, [pc, #1924]	; 1a1c8 <argp_parse@@Base+0xa38>
   19a40:	ldr	r2, [r2]
   19a44:	cmp	r2, #0
   19a48:	beq	19a68 <argp_parse@@Base+0x2d8>
   19a4c:	add	r2, r3, #32
   19a50:	ldr	r1, [pc, #1908]	; 1a1cc <argp_parse@@Base+0xa3c>
   19a54:	str	r1, [r3, #16]
   19a58:	mov	r3, #0
   19a5c:	str	r3, [r2]
   19a60:	mov	r8, r4
   19a64:	b	197e8 <argp_parse@@Base+0x58>
   19a68:	ldr	r2, [pc, #1888]	; 1a1d0 <argp_parse@@Base+0xa40>
   19a6c:	ldr	r2, [r2]
   19a70:	cmp	r2, #0
   19a74:	addeq	r2, r3, #16
   19a78:	bne	19a4c <argp_parse@@Base+0x2bc>
   19a7c:	b	19a58 <argp_parse@@Base+0x2c8>
   19a80:	ldr	r3, [fp, #-240]	; 0xffffff10
   19a84:	cmp	r3, #0
   19a88:	addne	sl, sl, #1
   19a8c:	strne	sl, [fp, #-208]	; 0xffffff30
   19a90:	movne	r3, #43	; 0x2b
   19a94:	strbne	r3, [r7, r5]
   19a98:	b	19908 <argp_parse@@Base+0x178>
   19a9c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19aa0:	str	r3, [fp, #-108]	; 0xffffff94
   19aa4:	b	19948 <argp_parse@@Base+0x1b8>
   19aa8:	mov	r3, r6
   19aac:	mov	r2, r7
   19ab0:	sub	r1, fp, #96	; 0x60
   19ab4:	mov	r0, r5
   19ab8:	bl	191a8 <argp_error@@Base+0x144>
   19abc:	add	r5, r5, #36	; 0x24
   19ac0:	ldr	r3, [fp, #-108]	; 0xffffff94
   19ac4:	cmp	r5, r3
   19ac8:	bcs	19b24 <argp_parse@@Base+0x394>
   19acc:	cmp	r0, #7
   19ad0:	cmpne	r0, #0
   19ad4:	bne	19b24 <argp_parse@@Base+0x394>
   19ad8:	ldr	r3, [r5, #16]
   19adc:	cmp	r3, #0
   19ae0:	ldrne	r2, [r5, #20]
   19ae4:	ldrne	r3, [r3, #28]
   19ae8:	ldrne	r3, [r3, r2, lsl #2]
   19aec:	strne	r3, [r5, #24]
   19af0:	ldr	r3, [r5]
   19af4:	cmp	r3, #0
   19af8:	bne	19aa8 <argp_parse@@Base+0x318>
   19afc:	ldr	r3, [r5, #4]
   19b00:	ldr	r3, [r3, #16]
   19b04:	cmp	r3, #0
   19b08:	beq	19aa8 <argp_parse@@Base+0x318>
   19b0c:	ldr	r3, [r3]
   19b10:	cmp	r3, #0
   19b14:	ldrne	r3, [r5, #28]
   19b18:	ldrne	r2, [r5, #24]
   19b1c:	strne	r2, [r3]
   19b20:	b	19aa8 <argp_parse@@Base+0x318>
   19b24:	mov	r4, r0
   19b28:	cmp	r0, #7
   19b2c:	beq	19b40 <argp_parse@@Base+0x3b0>
   19b30:	b	19b38 <argp_parse@@Base+0x3a8>
   19b34:	mov	r4, #0
   19b38:	cmp	r4, #0
   19b3c:	bne	1a000 <argp_parse@@Base+0x870>
   19b40:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19b44:	tst	r3, #2
   19b48:	moveq	r3, #1
   19b4c:	streq	r3, [fp, #-144]	; 0xffffff70
   19b50:	beq	19b7c <argp_parse@@Base+0x3ec>
   19b54:	mov	r2, #0
   19b58:	str	r2, [fp, #-144]	; 0xffffff70
   19b5c:	tst	r3, #1
   19b60:	beq	19b7c <argp_parse@@Base+0x3ec>
   19b64:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19b68:	sub	r3, r3, #4
   19b6c:	str	r3, [fp, #-88]	; 0xffffffa8
   19b70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19b74:	add	r3, r3, #1
   19b78:	str	r3, [fp, #-92]	; 0xffffffa4
   19b7c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19b80:	ldr	r2, [fp, #-232]	; 0xffffff18
   19b84:	cmp	r2, r3
   19b88:	beq	19ba8 <argp_parse@@Base+0x418>
   19b8c:	ldr	r3, [pc, #1568]	; 1a1b4 <argp_parse@@Base+0xa24>
   19b90:	ldr	r3, [r3]
   19b94:	str	r3, [fp, #-56]	; 0xffffffc8
   19b98:	mov	r6, #0
   19b9c:	mov	sl, #1
   19ba0:	mvn	r9, #0
   19ba4:	b	19e18 <argp_parse@@Base+0x688>
   19ba8:	ldr	r0, [r2]
   19bac:	cmp	r0, #0
   19bb0:	beq	19b8c <argp_parse@@Base+0x3fc>
   19bb4:	bl	1a2c4 <argp_parse@@Base+0xb34>
   19bb8:	str	r0, [fp, #-56]	; 0xffffffc8
   19bbc:	b	19b98 <argp_parse@@Base+0x408>
   19bc0:	ldr	r3, [fp, #-84]	; 0xffffffac
   19bc4:	str	r3, [fp, #-148]	; 0xffffff6c
   19bc8:	str	r9, [fp, #-140]	; 0xffffff74
   19bcc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19bd0:	tst	r3, #64	; 0x40
   19bd4:	beq	19ca0 <argp_parse@@Base+0x510>
   19bd8:	sub	r3, fp, #148	; 0x94
   19bdc:	str	r3, [sp, #4]
   19be0:	str	r6, [sp]
   19be4:	ldr	r3, [fp, #-152]	; 0xffffff68
   19be8:	ldr	r2, [fp, #-156]	; 0xffffff64
   19bec:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19bf0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19bf4:	bl	1a6b8 <argp_parse@@Base+0xf28>
   19bf8:	mov	r5, r0
   19bfc:	ldr	r4, [fp, #-148]	; 0xffffff6c
   19c00:	str	r4, [fp, #-84]	; 0xffffffac
   19c04:	cmn	r5, #1
   19c08:	beq	19cc8 <argp_parse@@Base+0x538>
   19c0c:	cmp	r5, #63	; 0x3f
   19c10:	beq	19cf4 <argp_parse@@Base+0x564>
   19c14:	cmp	r5, #1
   19c18:	beq	19d2c <argp_parse@@Base+0x59c>
   19c1c:	ldr	r4, [fp, #-136]	; 0xffffff78
   19c20:	asrs	r3, r5, #24
   19c24:	bne	19dd8 <argp_parse@@Base+0x648>
   19c28:	mov	r1, r5
   19c2c:	ldr	r0, [fp, #-156]	; 0xffffff64
   19c30:	bl	11930 <strchr@plt>
   19c34:	subs	r1, r0, #0
   19c38:	beq	19c88 <argp_parse@@Base+0x4f8>
   19c3c:	ldr	r0, [fp, #-112]	; 0xffffff90
   19c40:	ldr	r2, [fp, #-108]	; 0xffffff94
   19c44:	cmp	r2, r0
   19c48:	bls	19c88 <argp_parse@@Base+0x4f8>
   19c4c:	ldr	r3, [r0, #8]
   19c50:	cmp	r1, r3
   19c54:	bcc	19c70 <argp_parse@@Base+0x4e0>
   19c58:	add	r0, r0, #36	; 0x24
   19c5c:	cmp	r2, r0
   19c60:	bls	19c88 <argp_parse@@Base+0x4f8>
   19c64:	ldr	r3, [r0, #8]
   19c68:	cmp	r1, r3
   19c6c:	bcs	19c58 <argp_parse@@Base+0x4c8>
   19c70:	mov	r3, r4
   19c74:	mov	r2, r5
   19c78:	sub	r1, fp, #96	; 0x60
   19c7c:	bl	191a8 <argp_error@@Base+0x144>
   19c80:	cmp	r0, #7
   19c84:	bne	19e10 <argp_parse@@Base+0x680>
   19c88:	ldr	r3, [pc, #1348]	; 1a1d4 <argp_parse@@Base+0xa44>
   19c8c:	mov	r2, r5
   19c90:	ldr	r1, [pc, #1344]	; 1a1d8 <argp_parse@@Base+0xa48>
   19c94:	sub	r0, fp, #96	; 0x60
   19c98:	bl	19064 <argp_error@@Base>
   19c9c:	b	19eb8 <argp_parse@@Base+0x728>
   19ca0:	sub	r3, fp, #148	; 0x94
   19ca4:	str	r3, [sp, #4]
   19ca8:	str	r6, [sp]
   19cac:	ldr	r3, [fp, #-152]	; 0xffffff68
   19cb0:	ldr	r2, [fp, #-156]	; 0xffffff64
   19cb4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19cb8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19cbc:	bl	1a65c <argp_parse@@Base+0xecc>
   19cc0:	mov	r5, r0
   19cc4:	b	19bfc <argp_parse@@Base+0x46c>
   19cc8:	str	r6, [fp, #-100]	; 0xffffff9c
   19ccc:	cmp	r4, #1
   19cd0:	ble	19e40 <argp_parse@@Base+0x6b0>
   19cd4:	sub	r3, r4, #-1073741823	; 0xc0000001
   19cd8:	ldr	r1, [pc, #1276]	; 1a1dc <argp_parse@@Base+0xa4c>
   19cdc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19ce0:	ldr	r0, [r2, r3, lsl #2]
   19ce4:	bl	11684 <strcmp@plt>
   19ce8:	cmp	r0, #0
   19cec:	streq	r4, [fp, #-72]	; 0xffffffb8
   19cf0:	b	19e40 <argp_parse@@Base+0x6b0>
   19cf4:	ldr	r3, [fp, #-140]	; 0xffffff74
   19cf8:	cmn	r3, #1
   19cfc:	beq	19c1c <argp_parse@@Base+0x48c>
   19d00:	mov	r3, #0
   19d04:	b	19ec8 <argp_parse@@Base+0x738>
   19d08:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19d0c:	tst	r2, #4
   19d10:	movne	r3, #1
   19d14:	bne	19ec8 <argp_parse@@Base+0x738>
   19d18:	add	r2, r3, #1
   19d1c:	str	r2, [fp, #-84]	; 0xffffffac
   19d20:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19d24:	ldr	r3, [r2, r3, lsl #2]
   19d28:	str	r3, [fp, #-136]	; 0xffffff78
   19d2c:	ldr	r7, [fp, #-136]	; 0xffffff78
   19d30:	ldr	r8, [fp, #-84]	; 0xffffffac
   19d34:	sub	r8, r8, #1
   19d38:	str	r8, [fp, #-84]	; 0xffffffac
   19d3c:	ldr	r5, [fp, #-112]	; 0xffffff90
   19d40:	ldr	r3, [fp, #-108]	; 0xffffff94
   19d44:	cmp	r3, r5
   19d48:	bhi	19d94 <argp_parse@@Base+0x604>
   19d4c:	b	19dd0 <argp_parse@@Base+0x640>
   19d50:	ldr	r3, [fp, #-84]	; 0xffffffac
   19d54:	sub	r3, r3, #1
   19d58:	str	r3, [fp, #-84]	; 0xffffffac
   19d5c:	mov	r3, r6
   19d60:	ldr	r2, [pc, #1144]	; 1a1e0 <argp_parse@@Base+0xa50>
   19d64:	sub	r1, fp, #96	; 0x60
   19d68:	mov	r0, r5
   19d6c:	bl	191a8 <argp_error@@Base+0x144>
   19d70:	add	r5, r5, #36	; 0x24
   19d74:	ldr	r3, [fp, #-108]	; 0xffffff94
   19d78:	cmp	r5, r3
   19d7c:	movcs	r3, #0
   19d80:	movcc	r3, #1
   19d84:	cmp	r0, #7
   19d88:	movne	r3, #0
   19d8c:	cmp	r3, #0
   19d90:	beq	1a174 <argp_parse@@Base+0x9e4>
   19d94:	ldr	r3, [fp, #-84]	; 0xffffffac
   19d98:	add	r3, r3, #1
   19d9c:	str	r3, [fp, #-84]	; 0xffffffac
   19da0:	mov	r3, r7
   19da4:	mov	r2, r6
   19da8:	sub	r1, fp, #96	; 0x60
   19dac:	mov	r0, r5
   19db0:	bl	191a8 <argp_error@@Base+0x144>
   19db4:	cmp	r0, #7
   19db8:	beq	19d50 <argp_parse@@Base+0x5c0>
   19dbc:	add	r5, r5, #36	; 0x24
   19dc0:	cmp	r0, #0
   19dc4:	beq	1a184 <argp_parse@@Base+0x9f4>
   19dc8:	cmp	r0, #7
   19dcc:	bne	19e10 <argp_parse@@Base+0x680>
   19dd0:	mov	r5, #1
   19dd4:	b	19eb8 <argp_parse@@Base+0x728>
   19dd8:	ands	r1, r5, #8388608	; 0x800000
   19ddc:	movne	r1, #-16777216	; 0xff000000
   19de0:	bic	r2, r5, #-16777216	; 0xff000000
   19de4:	add	r0, r3, r3, lsl #3
   19de8:	lsl	r0, r0, #2
   19dec:	sub	r0, r0, #36	; 0x24
   19df0:	mov	r3, r4
   19df4:	orr	r2, r2, r1
   19df8:	sub	r1, fp, #96	; 0x60
   19dfc:	ldr	ip, [fp, #-112]	; 0xffffff90
   19e00:	add	r0, ip, r0
   19e04:	bl	191a8 <argp_error@@Base+0x144>
   19e08:	cmp	r0, #7
   19e0c:	beq	19e58 <argp_parse@@Base+0x6c8>
   19e10:	cmp	r0, #0
   19e14:	bne	19f68 <argp_parse@@Base+0x7d8>
   19e18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19e1c:	cmp	r3, #0
   19e20:	beq	19e34 <argp_parse@@Base+0x6a4>
   19e24:	ldr	r2, [fp, #-84]	; 0xffffffac
   19e28:	cmp	r3, r2
   19e2c:	strgt	r6, [fp, #-72]	; 0xffffffb8
   19e30:	ble	19e40 <argp_parse@@Base+0x6b0>
   19e34:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19e38:	cmp	r3, #0
   19e3c:	bne	19bc0 <argp_parse@@Base+0x430>
   19e40:	ldr	r3, [fp, #-84]	; 0xffffffac
   19e44:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19e48:	cmp	r3, r2
   19e4c:	blt	19d08 <argp_parse@@Base+0x578>
   19e50:	mov	r3, #1
   19e54:	b	19ec8 <argp_parse@@Base+0x738>
   19e58:	ldr	r3, [fp, #-152]	; 0xffffff68
   19e5c:	ldr	r2, [r3, #12]
   19e60:	cmp	r2, r5
   19e64:	beq	19e98 <argp_parse@@Base+0x708>
   19e68:	ldr	r2, [r3]
   19e6c:	cmp	r2, #0
   19e70:	beq	19f60 <argp_parse@@Base+0x7d0>
   19e74:	add	r3, r3, #16
   19e78:	ldr	r2, [r3, #12]
   19e7c:	cmp	r2, r5
   19e80:	beq	19e98 <argp_parse@@Base+0x708>
   19e84:	ldr	r2, [r3]
   19e88:	cmp	r2, #0
   19e8c:	bne	19e74 <argp_parse@@Base+0x6e4>
   19e90:	ldr	r2, [pc, #844]	; 1a1e4 <argp_parse@@Base+0xa54>
   19e94:	b	19ea8 <argp_parse@@Base+0x718>
   19e98:	ldr	r2, [r3]
   19e9c:	ldr	r3, [pc, #832]	; 1a1e4 <argp_parse@@Base+0xa54>
   19ea0:	cmp	r2, #0
   19ea4:	moveq	r2, r3
   19ea8:	ldr	r3, [pc, #804]	; 1a1d4 <argp_parse@@Base+0xa44>
   19eac:	ldr	r1, [pc, #820]	; 1a1e8 <argp_parse@@Base+0xa58>
   19eb0:	sub	r0, fp, #96	; 0x60
   19eb4:	bl	19064 <argp_error@@Base>
   19eb8:	add	r5, r5, #1
   19ebc:	bics	r3, r5, #2
   19ec0:	moveq	r3, #1
   19ec4:	movne	r3, #0
   19ec8:	cmp	r3, #0
   19ecc:	moveq	r4, #7
   19ed0:	beq	19f6c <argp_parse@@Base+0x7dc>
   19ed4:	ldr	r3, [fp, #-84]	; 0xffffffac
   19ed8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19edc:	cmp	r3, r2
   19ee0:	beq	1a00c <argp_parse@@Base+0x87c>
   19ee4:	ldr	r2, [fp, #4]
   19ee8:	cmp	r2, #0
   19eec:	strne	r3, [r2]
   19ef0:	beq	1a108 <argp_parse@@Base+0x978>
   19ef4:	ldr	r5, [fp, #-108]	; 0xffffff94
   19ef8:	sub	r5, r5, #36	; 0x24
   19efc:	ldr	r3, [fp, #-112]	; 0xffffff90
   19f00:	cmp	r5, r3
   19f04:	bcc	1a144 <argp_parse@@Base+0x9b4>
   19f08:	ldr	r7, [pc, #732]	; 1a1ec <argp_parse@@Base+0xa5c>
   19f0c:	mov	r6, #0
   19f10:	mov	r3, r6
   19f14:	mov	r2, r7
   19f18:	sub	r1, fp, #96	; 0x60
   19f1c:	mov	r0, r5
   19f20:	bl	191a8 <argp_error@@Base+0x144>
   19f24:	sub	r5, r5, #36	; 0x24
   19f28:	ldr	r3, [fp, #-112]	; 0xffffff90
   19f2c:	cmp	r5, r3
   19f30:	bcc	19f40 <argp_parse@@Base+0x7b0>
   19f34:	cmp	r0, #7
   19f38:	cmpne	r0, #0
   19f3c:	beq	19f10 <argp_parse@@Base+0x780>
   19f40:	mov	r4, r0
   19f44:	cmp	r0, #7
   19f48:	moveq	r4, #0
   19f4c:	ldr	r5, [fp, #-108]	; 0xffffff94
   19f50:	sub	r5, r5, #36	; 0x24
   19f54:	cmp	r3, r5
   19f58:	bls	19fc4 <argp_parse@@Base+0x834>
   19f5c:	b	19ff8 <argp_parse@@Base+0x868>
   19f60:	ldr	r2, [pc, #636]	; 1a1e4 <argp_parse@@Base+0xa54>
   19f64:	b	19ea8 <argp_parse@@Base+0x718>
   19f68:	mov	r4, r0
   19f6c:	cmp	r4, #7
   19f70:	beq	1a12c <argp_parse@@Base+0x99c>
   19f74:	ldr	r5, [fp, #-112]	; 0xffffff90
   19f78:	ldr	r3, [fp, #-108]	; 0xffffff94
   19f7c:	cmp	r3, r5
   19f80:	bls	19fb0 <argp_parse@@Base+0x820>
   19f84:	ldr	r7, [pc, #612]	; 1a1f0 <argp_parse@@Base+0xa60>
   19f88:	mov	r6, #0
   19f8c:	mov	r3, r6
   19f90:	mov	r2, r7
   19f94:	sub	r1, fp, #96	; 0x60
   19f98:	mov	r0, r5
   19f9c:	bl	191a8 <argp_error@@Base+0x144>
   19fa0:	add	r5, r5, #36	; 0x24
   19fa4:	ldr	r3, [fp, #-108]	; 0xffffff94
   19fa8:	cmp	r5, r3
   19fac:	bcc	19f8c <argp_parse@@Base+0x7fc>
   19fb0:	ldr	r5, [fp, #-108]	; 0xffffff94
   19fb4:	sub	r5, r5, #36	; 0x24
   19fb8:	ldr	r3, [fp, #-112]	; 0xffffff90
   19fbc:	cmp	r3, r5
   19fc0:	bhi	19ff0 <argp_parse@@Base+0x860>
   19fc4:	ldr	r7, [pc, #552]	; 1a1f4 <argp_parse@@Base+0xa64>
   19fc8:	mov	r6, #0
   19fcc:	mov	r3, r6
   19fd0:	mov	r2, r7
   19fd4:	sub	r1, fp, #96	; 0x60
   19fd8:	mov	r0, r5
   19fdc:	bl	191a8 <argp_error@@Base+0x144>
   19fe0:	sub	r5, r5, #36	; 0x24
   19fe4:	ldr	r3, [fp, #-112]	; 0xffffff90
   19fe8:	cmp	r5, r3
   19fec:	bcs	19fcc <argp_parse@@Base+0x83c>
   19ff0:	cmp	r4, #7
   19ff4:	moveq	r4, #22
   19ff8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19ffc:	bl	1a5dc <argp_parse@@Base+0xe4c>
   1a000:	mov	r0, r4
   1a004:	sub	sp, fp, #32
   1a008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a00c:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a010:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a014:	cmp	r6, r5
   1a018:	bcs	1a14c <argp_parse@@Base+0x9bc>
   1a01c:	mov	r4, #0
   1a020:	ldr	r8, [pc, #464]	; 1a1f8 <argp_parse@@Base+0xa68>
   1a024:	mov	r7, r4
   1a028:	mov	r0, r4
   1a02c:	b	1a04c <argp_parse@@Base+0x8bc>
   1a030:	add	r6, r6, #36	; 0x24
   1a034:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a038:	cmp	r6, r5
   1a03c:	bcs	1a078 <argp_parse@@Base+0x8e8>
   1a040:	cmp	r0, #7
   1a044:	cmpne	r0, #0
   1a048:	bne	1a070 <argp_parse@@Base+0x8e0>
   1a04c:	ldr	r3, [r6, #12]
   1a050:	cmp	r3, #0
   1a054:	bne	1a030 <argp_parse@@Base+0x8a0>
   1a058:	mov	r3, r7
   1a05c:	mov	r2, r8
   1a060:	sub	r1, fp, #96	; 0x60
   1a064:	mov	r0, r6
   1a068:	bl	191a8 <argp_error@@Base+0x144>
   1a06c:	b	1a030 <argp_parse@@Base+0x8a0>
   1a070:	mov	r4, r0
   1a074:	b	1a0dc <argp_parse@@Base+0x94c>
   1a078:	mov	r4, r0
   1a07c:	sub	r5, r5, #36	; 0x24
   1a080:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a084:	cmp	r3, r5
   1a088:	bhi	1a0dc <argp_parse@@Base+0x94c>
   1a08c:	cmp	r0, #0
   1a090:	cmpne	r0, #7
   1a094:	bne	1a0dc <argp_parse@@Base+0x94c>
   1a098:	ldr	r7, [pc, #348]	; 1a1fc <argp_parse@@Base+0xa6c>
   1a09c:	mov	r6, #0
   1a0a0:	mov	r3, r6
   1a0a4:	mov	r2, r7
   1a0a8:	sub	r1, fp, #96	; 0x60
   1a0ac:	mov	r0, r5
   1a0b0:	bl	191a8 <argp_error@@Base+0x144>
   1a0b4:	sub	r5, r5, #36	; 0x24
   1a0b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a0bc:	cmp	r5, r3
   1a0c0:	bcc	1a0d8 <argp_parse@@Base+0x948>
   1a0c4:	cmp	r0, #7
   1a0c8:	cmpne	r0, #0
   1a0cc:	beq	1a0a0 <argp_parse@@Base+0x910>
   1a0d0:	mov	r4, r0
   1a0d4:	b	1a0dc <argp_parse@@Base+0x94c>
   1a0d8:	mov	r4, r0
   1a0dc:	cmp	r4, #7
   1a0e0:	beq	1a160 <argp_parse@@Base+0x9d0>
   1a0e4:	ldr	r3, [fp, #4]
   1a0e8:	cmp	r3, #0
   1a0ec:	beq	1a1a4 <argp_parse@@Base+0xa14>
   1a0f0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a0f4:	ldr	r2, [fp, #4]
   1a0f8:	str	r3, [r2]
   1a0fc:	cmp	r4, #0
   1a100:	beq	19ef4 <argp_parse@@Base+0x764>
   1a104:	b	19f6c <argp_parse@@Base+0x7dc>
   1a108:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a10c:	tst	r3, #2
   1a110:	bne	1a12c <argp_parse@@Base+0x99c>
   1a114:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a118:	cmp	r0, #0
   1a11c:	beq	1a12c <argp_parse@@Base+0x99c>
   1a120:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a124:	ldr	r1, [pc, #212]	; 1a200 <argp_parse@@Base+0xa70>
   1a128:	bl	1193c <fprintf@plt>
   1a12c:	mov	r2, #260	; 0x104
   1a130:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a134:	sub	r0, fp, #96	; 0x60
   1a138:	bl	18fa8 <argp_state_help@@Base>
   1a13c:	mov	r4, #7
   1a140:	b	19f74 <argp_parse@@Base+0x7e4>
   1a144:	mov	r4, #0
   1a148:	b	19ff0 <argp_parse@@Base+0x860>
   1a14c:	sub	r5, r5, #36	; 0x24
   1a150:	cmp	r6, r5
   1a154:	movhi	r4, #0
   1a158:	bls	1a098 <argp_parse@@Base+0x908>
   1a15c:	b	1a0e4 <argp_parse@@Base+0x954>
   1a160:	ldr	r3, [fp, #4]
   1a164:	cmp	r3, #0
   1a168:	movne	r4, #0
   1a16c:	bne	1a0f0 <argp_parse@@Base+0x960>
   1a170:	b	19ef4 <argp_parse@@Base+0x764>
   1a174:	cmp	r0, #0
   1a178:	bne	19dc8 <argp_parse@@Base+0x638>
   1a17c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a180:	str	r3, [fp, #-84]	; 0xffffffac
   1a184:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a188:	cmp	r8, r3
   1a18c:	sublt	r8, r3, r8
   1a190:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   1a194:	addlt	r8, r3, r8
   1a198:	strlt	r8, [r5, #-24]	; 0xffffffe8
   1a19c:	strge	sl, [fp, #-100]	; 0xffffff9c
   1a1a0:	b	19e18 <argp_parse@@Base+0x688>
   1a1a4:	cmp	r4, #0
   1a1a8:	beq	19ef4 <argp_parse@@Base+0x764>
   1a1ac:	b	19f74 <argp_parse@@Base+0x7e4>
   1a1b0:	andeq	pc, r2, r4, asr #11
   1a1b4:	andeq	pc, r2, r0, asr #11
   1a1b8:	andeq	pc, r2, r8, asr #11
   1a1bc:	andeq	pc, r2, ip, asr #11
   1a1c0:	tsteq	r0, r3
   1a1c4:	ldrdeq	lr, [r1], -r0
   1a1c8:	muleq	r3, r8, r0
   1a1cc:	andeq	lr, r1, ip, ror #1
   1a1d0:	andeq	pc, r2, ip, lsl #20
   1a1d4:	andeq	lr, r1, r8, lsl #2
   1a1d8:	andeq	lr, r1, r4, lsl r2
   1a1dc:	andeq	sp, r1, r8, asr r0
   1a1e0:	tsteq	r0, r6
   1a1e4:	andeq	ip, r1, r4, lsl sp
   1a1e8:	andeq	lr, r1, ip, lsl r2
   1a1ec:	tsteq	r0, r4
   1a1f0:	tsteq	r0, r5
   1a1f4:	tsteq	r0, r7
   1a1f8:	tsteq	r0, r2
   1a1fc:	tsteq	r0, r1
   1a200:	andeq	lr, r1, r8, lsr #4
   1a204:	cmp	r1, #0
   1a208:	beq	1a254 <argp_parse@@Base+0xac4>
   1a20c:	ldr	r2, [r1, #52]	; 0x34
   1a210:	ldr	r3, [r2, #48]	; 0x30
   1a214:	ldr	r1, [r2, #52]	; 0x34
   1a218:	cmp	r3, r1
   1a21c:	bcs	1a25c <argp_parse@@Base+0xacc>
   1a220:	ldr	r2, [r3, #4]
   1a224:	cmp	r0, r2
   1a228:	beq	1a244 <argp_parse@@Base+0xab4>
   1a22c:	add	r3, r3, #36	; 0x24
   1a230:	cmp	r3, r1
   1a234:	bcs	1a24c <argp_parse@@Base+0xabc>
   1a238:	ldr	r2, [r3, #4]
   1a23c:	cmp	r2, r0
   1a240:	bne	1a22c <argp_parse@@Base+0xa9c>
   1a244:	ldr	r0, [r3, #24]
   1a248:	bx	lr
   1a24c:	mov	r0, #0
   1a250:	bx	lr
   1a254:	mov	r0, #0
   1a258:	bx	lr
   1a25c:	mov	r0, #0
   1a260:	bx	lr
   1a264:	push	{lr}		; (str lr, [sp, #-4]!)
   1a268:	sub	sp, sp, #12
   1a26c:	ldr	r3, [pc, #28]	; 1a290 <argp_parse@@Base+0xb00>
   1a270:	ldr	r1, [r3]
   1a274:	ldr	r3, [r3, #4]
   1a278:	str	r3, [sp]
   1a27c:	ldr	r3, [pc, #16]	; 1a294 <argp_parse@@Base+0xb04>
   1a280:	ldr	r2, [pc, #16]	; 1a298 <argp_parse@@Base+0xb08>
   1a284:	bl	1ac18 <argp_parse@@Base+0x1488>
   1a288:	add	sp, sp, #12
   1a28c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a290:	andeq	pc, r2, r0, lsl sl	; <UNPREDICTABLE>
   1a294:	andeq	lr, r1, r0, lsl #6
   1a298:	andeq	lr, r1, r0, lsl r3
   1a29c:	ldr	r2, [pc, #20]	; 1a2b8 <argp_parse@@Base+0xb28>
   1a2a0:	ldr	r3, [pc, #20]	; 1a2bc <argp_parse@@Base+0xb2c>
   1a2a4:	str	r2, [r3]
   1a2a8:	ldr	r3, [pc, #16]	; 1a2c0 <argp_parse@@Base+0xb30>
   1a2ac:	str	r0, [r3]
   1a2b0:	str	r1, [r3, #4]
   1a2b4:	bx	lr
   1a2b8:	andeq	sl, r1, r4, ror #4
   1a2bc:	andeq	pc, r2, ip, lsl #20
   1a2c0:	andeq	pc, r2, r0, lsl sl	; <UNPREDICTABLE>
   1a2c4:	ldrb	r3, [r0]
   1a2c8:	cmp	r3, #47	; 0x2f
   1a2cc:	bne	1a2dc <argp_parse@@Base+0xb4c>
   1a2d0:	ldrb	r3, [r0, #1]!
   1a2d4:	cmp	r3, #47	; 0x2f
   1a2d8:	beq	1a2d0 <argp_parse@@Base+0xb40>
   1a2dc:	ldrb	r2, [r0]
   1a2e0:	cmp	r2, #0
   1a2e4:	bxeq	lr
   1a2e8:	push	{lr}		; (str lr, [sp, #-4]!)
   1a2ec:	mov	r1, r0
   1a2f0:	mov	r3, #0
   1a2f4:	mov	lr, #1
   1a2f8:	mov	ip, r3
   1a2fc:	b	1a30c <argp_parse@@Base+0xb7c>
   1a300:	ldrb	r2, [r1, #1]!
   1a304:	cmp	r2, #0
   1a308:	beq	1a328 <argp_parse@@Base+0xb98>
   1a30c:	cmp	r2, #47	; 0x2f
   1a310:	moveq	r3, lr
   1a314:	beq	1a300 <argp_parse@@Base+0xb70>
   1a318:	cmp	r3, #0
   1a31c:	movne	r0, r1
   1a320:	movne	r3, ip
   1a324:	b	1a300 <argp_parse@@Base+0xb70>
   1a328:	pop	{pc}		; (ldr pc, [sp], #4)
   1a32c:	push	{r4, lr}
   1a330:	mov	r4, r0
   1a334:	bl	11918 <strlen@plt>
   1a338:	cmp	r0, #1
   1a33c:	popls	{r4, pc}
   1a340:	sub	r3, r0, #1
   1a344:	add	r2, r4, r3
   1a348:	ldrb	r1, [r4, r3]
   1a34c:	cmp	r1, #47	; 0x2f
   1a350:	popne	{r4, pc}
   1a354:	cmp	r3, #1
   1a358:	beq	1a37c <argp_parse@@Base+0xbec>
   1a35c:	sub	r0, r3, #1
   1a360:	ldrb	r1, [r2, #-1]!
   1a364:	cmp	r1, #47	; 0x2f
   1a368:	beq	1a374 <argp_parse@@Base+0xbe4>
   1a36c:	mov	r0, r3
   1a370:	pop	{r4, pc}
   1a374:	mov	r3, r0
   1a378:	b	1a354 <argp_parse@@Base+0xbc4>
   1a37c:	mov	r0, #1
   1a380:	pop	{r4, pc}
   1a384:	push	{r1, r2, r3}
   1a388:	push	{r4, r5, r6, lr}
   1a38c:	sub	sp, sp, #12
   1a390:	mov	r5, r0
   1a394:	ldr	r1, [sp, #28]
   1a398:	add	r3, sp, #32
   1a39c:	str	r3, [sp, #4]
   1a3a0:	cmp	r1, #0
   1a3a4:	beq	1a3ec <argp_parse@@Base+0xc5c>
   1a3a8:	ldr	r3, [pc, #540]	; 1a5cc <argp_parse@@Base+0xe3c>
   1a3ac:	cmp	r1, r3
   1a3b0:	beq	1a41c <argp_parse@@Base+0xc8c>
   1a3b4:	cmp	r1, #11
   1a3b8:	beq	1a5bc <argp_parse@@Base+0xe2c>
   1a3bc:	bgt	1a548 <argp_parse@@Base+0xdb8>
   1a3c0:	cmp	r1, #3
   1a3c4:	beq	1a5bc <argp_parse@@Base+0xe2c>
   1a3c8:	ble	1a508 <argp_parse@@Base+0xd78>
   1a3cc:	cmp	r1, #8
   1a3d0:	beq	1a528 <argp_parse@@Base+0xd98>
   1a3d4:	ble	1a520 <argp_parse@@Base+0xd90>
   1a3d8:	cmp	r1, #9
   1a3dc:	beq	1a5bc <argp_parse@@Base+0xe2c>
   1a3e0:	cmp	r1, #10
   1a3e4:	bne	1a580 <argp_parse@@Base+0xdf0>
   1a3e8:	b	1a528 <argp_parse@@Base+0xd98>
   1a3ec:	ldr	r3, [sp, #4]
   1a3f0:	add	r2, r3, #4
   1a3f4:	str	r2, [sp, #4]
   1a3f8:	ldr	r2, [r3]
   1a3fc:	mov	r1, #0
   1a400:	bl	119cc <fcntl64@plt>
   1a404:	mov	r4, r0
   1a408:	mov	r0, r4
   1a40c:	add	sp, sp, #12
   1a410:	pop	{r4, r5, r6, lr}
   1a414:	add	sp, sp, #12
   1a418:	bx	lr
   1a41c:	ldr	r3, [sp, #4]
   1a420:	add	r2, r3, #4
   1a424:	str	r2, [sp, #4]
   1a428:	ldr	r6, [r3]
   1a42c:	ldr	r3, [pc, #412]	; 1a5d0 <argp_parse@@Base+0xe40>
   1a430:	ldr	r3, [r3]
   1a434:	cmp	r3, #0
   1a438:	blt	1a498 <argp_parse@@Base+0xd08>
   1a43c:	mov	r2, r6
   1a440:	ldr	r1, [pc, #388]	; 1a5cc <argp_parse@@Base+0xe3c>
   1a444:	bl	119cc <fcntl64@plt>
   1a448:	subs	r4, r0, #0
   1a44c:	blt	1a460 <argp_parse@@Base+0xcd0>
   1a450:	mov	r2, #1
   1a454:	ldr	r3, [pc, #372]	; 1a5d0 <argp_parse@@Base+0xe40>
   1a458:	str	r2, [r3]
   1a45c:	b	1a408 <argp_parse@@Base+0xc78>
   1a460:	bl	11948 <__errno_location@plt>
   1a464:	ldr	r3, [r0]
   1a468:	cmp	r3, #22
   1a46c:	bne	1a450 <argp_parse@@Base+0xcc0>
   1a470:	mov	r2, r6
   1a474:	mov	r1, #0
   1a478:	mov	r0, r5
   1a47c:	bl	119cc <fcntl64@plt>
   1a480:	subs	r4, r0, #0
   1a484:	blt	1a408 <argp_parse@@Base+0xc78>
   1a488:	mvn	r2, #0
   1a48c:	ldr	r3, [pc, #316]	; 1a5d0 <argp_parse@@Base+0xe40>
   1a490:	str	r2, [r3]
   1a494:	b	1a4bc <argp_parse@@Base+0xd2c>
   1a498:	mov	r2, r6
   1a49c:	mov	r1, #0
   1a4a0:	bl	119cc <fcntl64@plt>
   1a4a4:	subs	r4, r0, #0
   1a4a8:	blt	1a408 <argp_parse@@Base+0xc78>
   1a4ac:	ldr	r3, [pc, #284]	; 1a5d0 <argp_parse@@Base+0xe40>
   1a4b0:	ldr	r3, [r3]
   1a4b4:	cmn	r3, #1
   1a4b8:	bne	1a408 <argp_parse@@Base+0xc78>
   1a4bc:	mov	r1, #1
   1a4c0:	mov	r0, r4
   1a4c4:	bl	119cc <fcntl64@plt>
   1a4c8:	subs	r2, r0, #0
   1a4cc:	blt	1a4e8 <argp_parse@@Base+0xd58>
   1a4d0:	orr	r2, r2, #1
   1a4d4:	mov	r1, #2
   1a4d8:	mov	r0, r4
   1a4dc:	bl	119cc <fcntl64@plt>
   1a4e0:	cmn	r0, #1
   1a4e4:	bne	1a408 <argp_parse@@Base+0xc78>
   1a4e8:	bl	11948 <__errno_location@plt>
   1a4ec:	mov	r5, r0
   1a4f0:	ldr	r6, [r0]
   1a4f4:	mov	r0, r4
   1a4f8:	bl	11af8 <close@plt>
   1a4fc:	str	r6, [r5]
   1a500:	mvn	r4, #0
   1a504:	b	1a408 <argp_parse@@Base+0xc78>
   1a508:	cmp	r1, #1
   1a50c:	beq	1a5bc <argp_parse@@Base+0xe2c>
   1a510:	bgt	1a528 <argp_parse@@Base+0xd98>
   1a514:	cmp	r1, #0
   1a518:	bne	1a580 <argp_parse@@Base+0xdf0>
   1a51c:	b	1a528 <argp_parse@@Base+0xd98>
   1a520:	cmp	r1, #4
   1a524:	bne	1a580 <argp_parse@@Base+0xdf0>
   1a528:	ldr	r3, [sp, #4]
   1a52c:	add	r2, r3, #4
   1a530:	str	r2, [sp, #4]
   1a534:	ldr	r2, [r3]
   1a538:	mov	r0, r5
   1a53c:	bl	119cc <fcntl64@plt>
   1a540:	mov	r4, r0
   1a544:	b	1a408 <argp_parse@@Base+0xc78>
   1a548:	ldr	r3, [pc, #132]	; 1a5d4 <argp_parse@@Base+0xe44>
   1a54c:	cmp	r1, r3
   1a550:	bgt	1a5a0 <argp_parse@@Base+0xe10>
   1a554:	sub	r3, r3, #1
   1a558:	cmp	r1, r3
   1a55c:	bge	1a528 <argp_parse@@Base+0xd98>
   1a560:	sub	r3, r3, #5
   1a564:	cmp	r1, r3
   1a568:	beq	1a5bc <argp_parse@@Base+0xe2c>
   1a56c:	add	r3, r3, #1
   1a570:	cmp	r1, r3
   1a574:	beq	1a528 <argp_parse@@Base+0xd98>
   1a578:	cmp	r1, #1024	; 0x400
   1a57c:	beq	1a528 <argp_parse@@Base+0xd98>
   1a580:	ldr	r3, [sp, #4]
   1a584:	add	r2, r3, #4
   1a588:	str	r2, [sp, #4]
   1a58c:	ldr	r2, [r3]
   1a590:	mov	r0, r5
   1a594:	bl	119cc <fcntl64@plt>
   1a598:	mov	r4, r0
   1a59c:	b	1a408 <argp_parse@@Base+0xc78>
   1a5a0:	ldr	r3, [pc, #48]	; 1a5d8 <argp_parse@@Base+0xe48>
   1a5a4:	cmp	r1, r3
   1a5a8:	beq	1a528 <argp_parse@@Base+0xd98>
   1a5ac:	blt	1a5bc <argp_parse@@Base+0xe2c>
   1a5b0:	add	r3, r3, #1
   1a5b4:	cmp	r1, r3
   1a5b8:	bne	1a580 <argp_parse@@Base+0xdf0>
   1a5bc:	mov	r0, r5
   1a5c0:	bl	119cc <fcntl64@plt>
   1a5c4:	mov	r4, r0
   1a5c8:	b	1a408 <argp_parse@@Base+0xc78>
   1a5cc:	andeq	r0, r0, r6, lsl #8
   1a5d0:	andeq	pc, r2, r8, lsl sl	; <UNPREDICTABLE>
   1a5d4:	andeq	r0, r0, r7, lsl #8
   1a5d8:	andeq	r0, r0, r9, lsl #8
   1a5dc:	push	{r4, r5, lr}
   1a5e0:	sub	sp, sp, #12
   1a5e4:	mov	r5, r0
   1a5e8:	bl	11948 <__errno_location@plt>
   1a5ec:	mov	r4, r0
   1a5f0:	ldr	r3, [r0]
   1a5f4:	str	r3, [sp]
   1a5f8:	str	r3, [sp, #4]
   1a5fc:	mov	r3, #0
   1a600:	str	r3, [r0]
   1a604:	mov	r0, r5
   1a608:	bl	11708 <free@plt>
   1a60c:	ldr	r3, [r4]
   1a610:	cmp	r3, #0
   1a614:	moveq	r3, #4
   1a618:	movne	r3, #0
   1a61c:	add	r2, sp, #8
   1a620:	add	r3, r2, r3
   1a624:	ldr	r3, [r3, #-8]
   1a628:	str	r3, [r4]
   1a62c:	add	sp, sp, #12
   1a630:	pop	{r4, r5, pc}
   1a634:	push	{lr}		; (str lr, [sp, #-4]!)
   1a638:	sub	sp, sp, #20
   1a63c:	mov	ip, #0
   1a640:	str	ip, [sp, #8]
   1a644:	str	ip, [sp, #4]
   1a648:	ldr	ip, [sp, #24]
   1a64c:	str	ip, [sp]
   1a650:	bl	1c6a4 <argp_parse@@Base+0x2f14>
   1a654:	add	sp, sp, #20
   1a658:	pop	{pc}		; (ldr pc, [sp], #4)
   1a65c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a660:	sub	sp, sp, #20
   1a664:	mov	ip, #0
   1a668:	str	ip, [sp, #12]
   1a66c:	ldr	lr, [sp, #28]
   1a670:	str	lr, [sp, #8]
   1a674:	str	ip, [sp, #4]
   1a678:	ldr	ip, [sp, #24]
   1a67c:	str	ip, [sp]
   1a680:	bl	1c128 <argp_parse@@Base+0x2998>
   1a684:	add	sp, sp, #20
   1a688:	pop	{pc}		; (ldr pc, [sp], #4)
   1a68c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a690:	sub	sp, sp, #20
   1a694:	mov	ip, #0
   1a698:	str	ip, [sp, #8]
   1a69c:	mov	ip, #1
   1a6a0:	str	ip, [sp, #4]
   1a6a4:	ldr	ip, [sp, #24]
   1a6a8:	str	ip, [sp]
   1a6ac:	bl	1c6a4 <argp_parse@@Base+0x2f14>
   1a6b0:	add	sp, sp, #20
   1a6b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6b8:	push	{lr}		; (str lr, [sp, #-4]!)
   1a6bc:	sub	sp, sp, #20
   1a6c0:	mov	ip, #0
   1a6c4:	str	ip, [sp, #12]
   1a6c8:	ldr	ip, [sp, #28]
   1a6cc:	str	ip, [sp, #8]
   1a6d0:	mov	ip, #1
   1a6d4:	str	ip, [sp, #4]
   1a6d8:	ldr	ip, [sp, #24]
   1a6dc:	str	ip, [sp]
   1a6e0:	bl	1c128 <argp_parse@@Base+0x2998>
   1a6e4:	add	sp, sp, #20
   1a6e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6ec:	push	{r4, r5, r6, lr}
   1a6f0:	subs	r4, r0, #0
   1a6f4:	beq	1a76c <argp_parse@@Base+0xfdc>
   1a6f8:	mov	r1, #47	; 0x2f
   1a6fc:	mov	r0, r4
   1a700:	bl	11a20 <strrchr@plt>
   1a704:	cmp	r0, #0
   1a708:	addne	r5, r0, #1
   1a70c:	moveq	r5, r4
   1a710:	sub	r3, r5, r4
   1a714:	cmp	r3, #6
   1a718:	ble	1a758 <argp_parse@@Base+0xfc8>
   1a71c:	mov	r2, #7
   1a720:	ldr	r1, [pc, #96]	; 1a788 <argp_parse@@Base+0xff8>
   1a724:	sub	r0, r5, #7
   1a728:	bl	11ad4 <strncmp@plt>
   1a72c:	cmp	r0, #0
   1a730:	bne	1a758 <argp_parse@@Base+0xfc8>
   1a734:	mov	r2, #3
   1a738:	ldr	r1, [pc, #76]	; 1a78c <argp_parse@@Base+0xffc>
   1a73c:	mov	r0, r5
   1a740:	bl	11ad4 <strncmp@plt>
   1a744:	cmp	r0, #0
   1a748:	addeq	r4, r5, #3
   1a74c:	ldreq	r3, [pc, #60]	; 1a790 <argp_parse@@Base+0x1000>
   1a750:	streq	r4, [r3]
   1a754:	movne	r4, r5
   1a758:	ldr	r3, [pc, #52]	; 1a794 <argp_parse@@Base+0x1004>
   1a75c:	str	r4, [r3]
   1a760:	ldr	r3, [pc, #48]	; 1a798 <argp_parse@@Base+0x1008>
   1a764:	str	r4, [r3]
   1a768:	pop	{r4, r5, r6, pc}
   1a76c:	ldr	r3, [pc, #40]	; 1a79c <argp_parse@@Base+0x100c>
   1a770:	ldr	r3, [r3]
   1a774:	mov	r2, #55	; 0x37
   1a778:	mov	r1, #1
   1a77c:	ldr	r0, [pc, #28]	; 1a7a0 <argp_parse@@Base+0x1010>
   1a780:	bl	11828 <fwrite@plt>
   1a784:	bl	11ae0 <abort@plt>
   1a788:	andeq	lr, r1, r8, asr r3
   1a78c:	andeq	lr, r1, r0, ror #6
   1a790:	andeq	pc, r2, r0, asr #11
   1a794:	andeq	pc, r2, ip, lsl sl	; <UNPREDICTABLE>
   1a798:	andeq	pc, r2, r4, asr #11
   1a79c:	andeq	pc, r2, r8, asr #11
   1a7a0:	andeq	lr, r1, r0, lsr #6
   1a7a4:	push	{r4, r5, r6, lr}
   1a7a8:	mov	r5, r0
   1a7ac:	mov	r0, #33	; 0x21
   1a7b0:	bl	1ad40 <argp_parse@@Base+0x15b0>
   1a7b4:	mov	r4, r0
   1a7b8:	mov	r2, #32
   1a7bc:	add	r1, r5, #44	; 0x2c
   1a7c0:	bl	11990 <strncpy@plt>
   1a7c4:	mov	r3, #0
   1a7c8:	strb	r3, [r4, #32]
   1a7cc:	mov	r0, r4
   1a7d0:	bl	11918 <strlen@plt>
   1a7d4:	add	r0, r4, r0
   1a7d8:	cmp	r4, r0
   1a7dc:	bcs	1a7ec <argp_parse@@Base+0x105c>
   1a7e0:	ldrb	r3, [r0, #-1]
   1a7e4:	cmp	r3, #32
   1a7e8:	beq	1a7f4 <argp_parse@@Base+0x1064>
   1a7ec:	mov	r0, r4
   1a7f0:	pop	{r4, r5, r6, pc}
   1a7f4:	sub	r0, r0, #1
   1a7f8:	mov	r1, r4
   1a7fc:	mov	r2, #0
   1a800:	strb	r2, [r0]
   1a804:	cmp	r0, r1
   1a808:	beq	1a7ec <argp_parse@@Base+0x105c>
   1a80c:	ldrb	r3, [r0, #-1]!
   1a810:	cmp	r3, #32
   1a814:	bne	1a7ec <argp_parse@@Base+0x105c>
   1a818:	b	1a800 <argp_parse@@Base+0x1070>
   1a81c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a820:	sub	sp, sp, #28
   1a824:	mov	fp, r1
   1a828:	str	r2, [sp, #12]
   1a82c:	mov	r6, r3
   1a830:	mov	r7, #0
   1a834:	add	sl, sp, #24
   1a838:	str	r7, [sl, #-4]!
   1a83c:	bl	116d8 <utmpxname@plt>
   1a840:	bl	117a4 <setutxent@plt>
   1a844:	mov	r8, r7
   1a848:	mov	r9, r7
   1a84c:	and	r5, r6, #2
   1a850:	and	r6, r6, #1
   1a854:	b	1a88c <argp_parse@@Base+0x10fc>
   1a858:	cmp	r6, #0
   1a85c:	beq	1a8b8 <argp_parse@@Base+0x1128>
   1a860:	ldr	r0, [r4, #4]
   1a864:	cmp	r0, #0
   1a868:	ble	1a8b8 <argp_parse@@Base+0x1128>
   1a86c:	mov	r1, #0
   1a870:	bl	118e8 <kill@plt>
   1a874:	cmp	r0, #0
   1a878:	bge	1a8b8 <argp_parse@@Base+0x1128>
   1a87c:	bl	11948 <__errno_location@plt>
   1a880:	ldr	r3, [r0]
   1a884:	cmp	r3, #3
   1a888:	bne	1a8b8 <argp_parse@@Base+0x1128>
   1a88c:	bl	11aec <getutxent@plt>
   1a890:	subs	r4, r0, #0
   1a894:	beq	1a904 <argp_parse@@Base+0x1174>
   1a898:	ldrb	r3, [r4, #44]	; 0x2c
   1a89c:	cmp	r3, #0
   1a8a0:	beq	1a8b0 <argp_parse@@Base+0x1120>
   1a8a4:	ldrsh	r3, [r4]
   1a8a8:	cmp	r3, #7
   1a8ac:	beq	1a858 <argp_parse@@Base+0x10c8>
   1a8b0:	cmp	r5, #0
   1a8b4:	bne	1a88c <argp_parse@@Base+0x10fc>
   1a8b8:	ldr	r3, [sp, #20]
   1a8bc:	cmp	r7, r3
   1a8c0:	beq	1a8e0 <argp_parse@@Base+0x1150>
   1a8c4:	add	r7, r7, #1
   1a8c8:	mov	r2, #384	; 0x180
   1a8cc:	mov	r1, r4
   1a8d0:	add	r0, r9, r8
   1a8d4:	bl	11744 <memcpy@plt>
   1a8d8:	add	r8, r8, #384	; 0x180
   1a8dc:	b	1a88c <argp_parse@@Base+0x10fc>
   1a8e0:	mov	r3, #384	; 0x180
   1a8e4:	str	r3, [sp]
   1a8e8:	mvn	r3, #0
   1a8ec:	mov	r2, #1
   1a8f0:	mov	r1, sl
   1a8f4:	mov	r0, r9
   1a8f8:	bl	1aeec <argp_parse@@Base+0x175c>
   1a8fc:	mov	r9, r0
   1a900:	b	1a8c4 <argp_parse@@Base+0x1134>
   1a904:	bl	119e4 <endutxent@plt>
   1a908:	str	r7, [fp]
   1a90c:	ldr	r3, [sp, #12]
   1a910:	str	r9, [r3]
   1a914:	mov	r0, #0
   1a918:	add	sp, sp, #28
   1a91c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a920:	push	{r4, r5, r6, lr}
   1a924:	sub	sp, sp, #32
   1a928:	mov	r4, r0
   1a92c:	ldr	r5, [sp, #48]	; 0x30
   1a930:	ldr	r6, [sp, #52]	; 0x34
   1a934:	cmp	r1, #0
   1a938:	beq	1a9c0 <argp_parse@@Base+0x1230>
   1a93c:	str	r3, [sp]
   1a940:	mov	r3, r2
   1a944:	mov	r2, r1
   1a948:	ldr	r1, [pc, #644]	; 1abd4 <argp_parse@@Base+0x1444>
   1a94c:	bl	1193c <fprintf@plt>
   1a950:	ldr	r3, [pc, #640]	; 1abd8 <argp_parse@@Base+0x1448>
   1a954:	ldr	r2, [pc, #640]	; 1abdc <argp_parse@@Base+0x144c>
   1a958:	ldr	r1, [pc, #640]	; 1abe0 <argp_parse@@Base+0x1450>
   1a95c:	mov	r0, r4
   1a960:	bl	1193c <fprintf@plt>
   1a964:	mov	r1, r4
   1a968:	mov	r0, #10
   1a96c:	bl	11a38 <fputc@plt>
   1a970:	ldr	r2, [pc, #620]	; 1abe4 <argp_parse@@Base+0x1454>
   1a974:	ldr	r1, [pc, #620]	; 1abe8 <argp_parse@@Base+0x1458>
   1a978:	mov	r0, r4
   1a97c:	bl	1193c <fprintf@plt>
   1a980:	mov	r1, r4
   1a984:	mov	r0, #10
   1a988:	bl	11a38 <fputc@plt>
   1a98c:	cmp	r6, #9
   1a990:	ldrls	pc, [pc, r6, lsl #2]
   1a994:	b	1ab84 <argp_parse@@Base+0x13f4>
   1a998:	ldrdeq	sl, [r1], -ip
   1a99c:	andeq	sl, r1, ip, asr #19
   1a9a0:	andeq	sl, r1, r4, ror #19
   1a9a4:	strdeq	sl, [r1], -ip
   1a9a8:	andeq	sl, r1, ip, lsl sl
   1a9ac:	andeq	sl, r1, r4, asr #20
   1a9b0:	andeq	sl, r1, r4, ror sl
   1a9b4:	andeq	sl, r1, ip, lsr #21
   1a9b8:	andeq	sl, r1, ip, ror #21
   1a9bc:	andeq	sl, r1, r4, lsr fp
   1a9c0:	ldr	r1, [pc, #548]	; 1abec <argp_parse@@Base+0x145c>
   1a9c4:	bl	1193c <fprintf@plt>
   1a9c8:	b	1a950 <argp_parse@@Base+0x11c0>
   1a9cc:	ldr	r2, [r5]
   1a9d0:	ldr	r1, [pc, #536]	; 1abf0 <argp_parse@@Base+0x1460>
   1a9d4:	mov	r0, r4
   1a9d8:	bl	1193c <fprintf@plt>
   1a9dc:	add	sp, sp, #32
   1a9e0:	pop	{r4, r5, r6, pc}
   1a9e4:	ldr	r3, [r5, #4]
   1a9e8:	ldr	r2, [r5]
   1a9ec:	ldr	r1, [pc, #512]	; 1abf4 <argp_parse@@Base+0x1464>
   1a9f0:	mov	r0, r4
   1a9f4:	bl	1193c <fprintf@plt>
   1a9f8:	b	1a9dc <argp_parse@@Base+0x124c>
   1a9fc:	ldr	r3, [r5, #4]
   1aa00:	ldr	r2, [r5]
   1aa04:	ldr	r1, [r5, #8]
   1aa08:	str	r1, [sp]
   1aa0c:	ldr	r1, [pc, #484]	; 1abf8 <argp_parse@@Base+0x1468>
   1aa10:	mov	r0, r4
   1aa14:	bl	1193c <fprintf@plt>
   1aa18:	b	1a9dc <argp_parse@@Base+0x124c>
   1aa1c:	ldr	r3, [r5, #4]
   1aa20:	ldr	r2, [r5]
   1aa24:	ldr	r1, [r5, #12]
   1aa28:	str	r1, [sp, #4]
   1aa2c:	ldr	r1, [r5, #8]
   1aa30:	str	r1, [sp]
   1aa34:	ldr	r1, [pc, #448]	; 1abfc <argp_parse@@Base+0x146c>
   1aa38:	mov	r0, r4
   1aa3c:	bl	1193c <fprintf@plt>
   1aa40:	b	1a9dc <argp_parse@@Base+0x124c>
   1aa44:	ldr	r3, [r5, #4]
   1aa48:	ldr	r2, [r5]
   1aa4c:	ldr	r1, [r5, #16]
   1aa50:	str	r1, [sp, #8]
   1aa54:	ldr	r1, [r5, #12]
   1aa58:	str	r1, [sp, #4]
   1aa5c:	ldr	r1, [r5, #8]
   1aa60:	str	r1, [sp]
   1aa64:	ldr	r1, [pc, #404]	; 1ac00 <argp_parse@@Base+0x1470>
   1aa68:	mov	r0, r4
   1aa6c:	bl	1193c <fprintf@plt>
   1aa70:	b	1a9dc <argp_parse@@Base+0x124c>
   1aa74:	ldr	r3, [r5, #4]
   1aa78:	ldr	r2, [r5]
   1aa7c:	ldr	r1, [r5, #20]
   1aa80:	str	r1, [sp, #12]
   1aa84:	ldr	r1, [r5, #16]
   1aa88:	str	r1, [sp, #8]
   1aa8c:	ldr	r1, [r5, #12]
   1aa90:	str	r1, [sp, #4]
   1aa94:	ldr	r1, [r5, #8]
   1aa98:	str	r1, [sp]
   1aa9c:	ldr	r1, [pc, #352]	; 1ac04 <argp_parse@@Base+0x1474>
   1aaa0:	mov	r0, r4
   1aaa4:	bl	1193c <fprintf@plt>
   1aaa8:	b	1a9dc <argp_parse@@Base+0x124c>
   1aaac:	ldr	r3, [r5, #4]
   1aab0:	ldr	r2, [r5]
   1aab4:	ldr	r1, [r5, #24]
   1aab8:	str	r1, [sp, #16]
   1aabc:	ldr	r1, [r5, #20]
   1aac0:	str	r1, [sp, #12]
   1aac4:	ldr	r1, [r5, #16]
   1aac8:	str	r1, [sp, #8]
   1aacc:	ldr	r1, [r5, #12]
   1aad0:	str	r1, [sp, #4]
   1aad4:	ldr	r1, [r5, #8]
   1aad8:	str	r1, [sp]
   1aadc:	ldr	r1, [pc, #292]	; 1ac08 <argp_parse@@Base+0x1478>
   1aae0:	mov	r0, r4
   1aae4:	bl	1193c <fprintf@plt>
   1aae8:	b	1a9dc <argp_parse@@Base+0x124c>
   1aaec:	ldr	r3, [r5, #4]
   1aaf0:	ldr	r2, [r5]
   1aaf4:	ldr	r1, [r5, #28]
   1aaf8:	str	r1, [sp, #20]
   1aafc:	ldr	r1, [r5, #24]
   1ab00:	str	r1, [sp, #16]
   1ab04:	ldr	r1, [r5, #20]
   1ab08:	str	r1, [sp, #12]
   1ab0c:	ldr	r1, [r5, #16]
   1ab10:	str	r1, [sp, #8]
   1ab14:	ldr	r1, [r5, #12]
   1ab18:	str	r1, [sp, #4]
   1ab1c:	ldr	r1, [r5, #8]
   1ab20:	str	r1, [sp]
   1ab24:	ldr	r1, [pc, #224]	; 1ac0c <argp_parse@@Base+0x147c>
   1ab28:	mov	r0, r4
   1ab2c:	bl	1193c <fprintf@plt>
   1ab30:	b	1a9dc <argp_parse@@Base+0x124c>
   1ab34:	ldr	r3, [r5, #4]
   1ab38:	ldr	r2, [r5]
   1ab3c:	ldr	r1, [r5, #32]
   1ab40:	str	r1, [sp, #24]
   1ab44:	ldr	r1, [r5, #28]
   1ab48:	str	r1, [sp, #20]
   1ab4c:	ldr	r1, [r5, #24]
   1ab50:	str	r1, [sp, #16]
   1ab54:	ldr	r1, [r5, #20]
   1ab58:	str	r1, [sp, #12]
   1ab5c:	ldr	r1, [r5, #16]
   1ab60:	str	r1, [sp, #8]
   1ab64:	ldr	r1, [r5, #12]
   1ab68:	str	r1, [sp, #4]
   1ab6c:	ldr	r1, [r5, #8]
   1ab70:	str	r1, [sp]
   1ab74:	ldr	r1, [pc, #148]	; 1ac10 <argp_parse@@Base+0x1480>
   1ab78:	mov	r0, r4
   1ab7c:	bl	1193c <fprintf@plt>
   1ab80:	b	1a9dc <argp_parse@@Base+0x124c>
   1ab84:	ldr	r3, [r5, #4]
   1ab88:	ldr	r2, [r5]
   1ab8c:	ldr	r1, [r5, #32]
   1ab90:	str	r1, [sp, #24]
   1ab94:	ldr	r1, [r5, #28]
   1ab98:	str	r1, [sp, #20]
   1ab9c:	ldr	r1, [r5, #24]
   1aba0:	str	r1, [sp, #16]
   1aba4:	ldr	r1, [r5, #20]
   1aba8:	str	r1, [sp, #12]
   1abac:	ldr	r1, [r5, #16]
   1abb0:	str	r1, [sp, #8]
   1abb4:	ldr	r1, [r5, #12]
   1abb8:	str	r1, [sp, #4]
   1abbc:	ldr	r1, [r5, #8]
   1abc0:	str	r1, [sp]
   1abc4:	ldr	r1, [pc, #72]	; 1ac14 <argp_parse@@Base+0x1484>
   1abc8:	mov	r0, r4
   1abcc:	bl	1193c <fprintf@plt>
   1abd0:	b	1a9dc <argp_parse@@Base+0x124c>
   1abd4:	andeq	lr, r1, r4, ror #6
   1abd8:	andeq	r0, r0, r6, ror #15
   1abdc:	andeq	lr, r1, r8, ror r3
   1abe0:	andeq	lr, r1, r8, ror r6
   1abe4:	andeq	lr, r1, ip, ror r3
   1abe8:	andeq	lr, r1, r0, lsr #7
   1abec:	andeq	lr, r1, r0, ror r3
   1abf0:	andeq	lr, r1, ip, asr #8
   1abf4:	andeq	lr, r1, ip, asr r4
   1abf8:	andeq	lr, r1, r4, ror r4
   1abfc:	muleq	r1, r0, r4
   1ac00:			; <UNDEFINED> instruction: 0x0001e4b0
   1ac04:	ldrdeq	lr, [r1], -r4
   1ac08:	strdeq	lr, [r1], -ip
   1ac0c:	andeq	lr, r1, r8, lsr #10
   1ac10:	andeq	lr, r1, r8, asr r5
   1ac14:	andeq	lr, r1, ip, lsl #11
   1ac18:	push	{r4, r5, lr}
   1ac1c:	sub	sp, sp, #12
   1ac20:	ldr	r5, [sp, #24]
   1ac24:	ldr	ip, [r5]
   1ac28:	cmp	ip, #0
   1ac2c:	beq	1ac5c <argp_parse@@Base+0x14cc>
   1ac30:	mov	lr, r5
   1ac34:	mov	ip, #0
   1ac38:	add	ip, ip, #1
   1ac3c:	ldr	r4, [lr, #4]!
   1ac40:	cmp	r4, #0
   1ac44:	bne	1ac38 <argp_parse@@Base+0x14a8>
   1ac48:	str	ip, [sp, #4]
   1ac4c:	str	r5, [sp]
   1ac50:	bl	1a920 <argp_parse@@Base+0x1190>
   1ac54:	add	sp, sp, #12
   1ac58:	pop	{r4, r5, pc}
   1ac5c:	mov	ip, #0
   1ac60:	b	1ac48 <argp_parse@@Base+0x14b8>
   1ac64:	push	{r4, r5, lr}
   1ac68:	sub	sp, sp, #52	; 0x34
   1ac6c:	ldr	r4, [sp, #64]	; 0x40
   1ac70:	sub	r4, r4, #4
   1ac74:	add	r5, sp, #4
   1ac78:	mov	ip, #0
   1ac7c:	ldr	lr, [r4, #4]!
   1ac80:	str	lr, [r5, #4]!
   1ac84:	cmp	lr, #0
   1ac88:	beq	1ac98 <argp_parse@@Base+0x1508>
   1ac8c:	add	ip, ip, #1
   1ac90:	cmp	ip, #10
   1ac94:	bne	1ac7c <argp_parse@@Base+0x14ec>
   1ac98:	str	ip, [sp, #4]
   1ac9c:	add	ip, sp, #8
   1aca0:	str	ip, [sp]
   1aca4:	bl	1a920 <argp_parse@@Base+0x1190>
   1aca8:	add	sp, sp, #52	; 0x34
   1acac:	pop	{r4, r5, pc}
   1acb0:	push	{r3}		; (str r3, [sp, #-4]!)
   1acb4:	push	{lr}		; (str lr, [sp, #-4]!)
   1acb8:	sub	sp, sp, #16
   1acbc:	add	r3, sp, #24
   1acc0:	str	r3, [sp, #12]
   1acc4:	str	r3, [sp]
   1acc8:	ldr	r3, [sp, #20]
   1accc:	bl	1ac64 <argp_parse@@Base+0x14d4>
   1acd0:	add	sp, sp, #16
   1acd4:	pop	{lr}		; (ldr lr, [sp], #4)
   1acd8:	add	sp, sp, #4
   1acdc:	bx	lr
   1ace0:	push	{r4, lr}
   1ace4:	ldr	r3, [pc, #52]	; 1ad20 <argp_parse@@Base+0x1590>
   1ace8:	ldr	r1, [r3]
   1acec:	mov	r0, #10
   1acf0:	bl	11a38 <fputc@plt>
   1acf4:	ldr	r1, [pc, #40]	; 1ad24 <argp_parse@@Base+0x1594>
   1acf8:	ldr	r0, [pc, #40]	; 1ad28 <argp_parse@@Base+0x1598>
   1acfc:	bl	116b4 <printf@plt>
   1ad00:	ldr	r2, [pc, #36]	; 1ad2c <argp_parse@@Base+0x159c>
   1ad04:	ldr	r1, [pc, #36]	; 1ad30 <argp_parse@@Base+0x15a0>
   1ad08:	ldr	r0, [pc, #36]	; 1ad34 <argp_parse@@Base+0x15a4>
   1ad0c:	bl	116b4 <printf@plt>
   1ad10:	ldr	r1, [pc, #32]	; 1ad38 <argp_parse@@Base+0x15a8>
   1ad14:	ldr	r0, [pc, #32]	; 1ad3c <argp_parse@@Base+0x15ac>
   1ad18:	bl	116b4 <printf@plt>
   1ad1c:	pop	{r4, pc}
   1ad20:	andeq	pc, r2, ip, asr #11
   1ad24:	andeq	lr, r1, r8, asr #11
   1ad28:	andeq	lr, r1, r0, ror #11
   1ad2c:	strdeq	lr, [r1], -r4
   1ad30:	andeq	lr, r1, r0, lsl r3
   1ad34:	andeq	lr, r1, ip, lsl r6
   1ad38:	andeq	lr, r1, r0, lsr r6
   1ad3c:	andeq	lr, r1, r0, asr r6
   1ad40:	push	{r4, lr}
   1ad44:	bl	1b360 <argp_parse@@Base+0x1bd0>
   1ad48:	cmp	r0, #0
   1ad4c:	popne	{r4, pc}
   1ad50:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1ad54:	push	{r4, lr}
   1ad58:	bl	1b360 <argp_parse@@Base+0x1bd0>
   1ad5c:	cmp	r0, #0
   1ad60:	popne	{r4, pc}
   1ad64:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1ad68:	push	{r4, lr}
   1ad6c:	bl	1ad40 <argp_parse@@Base+0x15b0>
   1ad70:	pop	{r4, pc}
   1ad74:	push	{r4, r5, r6, lr}
   1ad78:	mov	r5, r0
   1ad7c:	mov	r4, r1
   1ad80:	bl	1b390 <argp_parse@@Base+0x1c00>
   1ad84:	cmp	r0, #0
   1ad88:	popne	{r4, r5, r6, pc}
   1ad8c:	adds	r4, r4, #0
   1ad90:	movne	r4, #1
   1ad94:	cmp	r5, #0
   1ad98:	orreq	r4, r4, #1
   1ad9c:	cmp	r4, #0
   1ada0:	popeq	{r4, r5, r6, pc}
   1ada4:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1ada8:	push	{r4, lr}
   1adac:	cmp	r1, #0
   1adb0:	orreq	r1, r1, #1
   1adb4:	bl	1b390 <argp_parse@@Base+0x1c00>
   1adb8:	cmp	r0, #0
   1adbc:	popne	{r4, pc}
   1adc0:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1adc4:	push	{r4, r5, r6, lr}
   1adc8:	mov	r6, r0
   1adcc:	mov	r5, r1
   1add0:	mov	r4, r2
   1add4:	bl	1c73c <argp_parse@@Base+0x2fac>
   1add8:	cmp	r0, #0
   1addc:	popne	{r4, r5, r6, pc}
   1ade0:	cmp	r6, #0
   1ade4:	beq	1adf4 <argp_parse@@Base+0x1664>
   1ade8:	cmp	r5, #0
   1adec:	cmpne	r4, #0
   1adf0:	popeq	{r4, r5, r6, pc}
   1adf4:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1adf8:	push	{r4, lr}
   1adfc:	bl	1adc4 <argp_parse@@Base+0x1634>
   1ae00:	pop	{r4, pc}
   1ae04:	push	{r4, lr}
   1ae08:	mov	ip, r1
   1ae0c:	mov	r3, r2
   1ae10:	cmp	r2, #0
   1ae14:	cmpne	r1, #0
   1ae18:	moveq	r3, #1
   1ae1c:	moveq	ip, r3
   1ae20:	mov	r2, r3
   1ae24:	mov	r1, ip
   1ae28:	bl	1c73c <argp_parse@@Base+0x2fac>
   1ae2c:	cmp	r0, #0
   1ae30:	popne	{r4, pc}
   1ae34:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1ae38:	push	{r4, lr}
   1ae3c:	mov	r2, r1
   1ae40:	mov	r1, r0
   1ae44:	mov	r0, #0
   1ae48:	bl	1adc4 <argp_parse@@Base+0x1634>
   1ae4c:	pop	{r4, pc}
   1ae50:	push	{r4, lr}
   1ae54:	mov	r2, r1
   1ae58:	mov	r1, r0
   1ae5c:	mov	r0, #0
   1ae60:	bl	1ae04 <argp_parse@@Base+0x1674>
   1ae64:	pop	{r4, pc}
   1ae68:	push	{r4, r5, r6, r7, r8, lr}
   1ae6c:	mov	r5, r1
   1ae70:	mov	r6, r2
   1ae74:	ldr	r4, [r1]
   1ae78:	subs	r7, r0, #0
   1ae7c:	beq	1ae98 <argp_parse@@Base+0x1708>
   1ae80:	lsr	r2, r4, #1
   1ae84:	add	r3, r2, #1
   1ae88:	mvn	r3, r3
   1ae8c:	cmp	r4, r3
   1ae90:	bls	1aebc <argp_parse@@Base+0x172c>
   1ae94:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1ae98:	cmp	r4, #0
   1ae9c:	bne	1aec4 <argp_parse@@Base+0x1734>
   1aea0:	mov	r1, r2
   1aea4:	mov	r0, #64	; 0x40
   1aea8:	bl	1c788 <argp_parse@@Base+0x2ff8>
   1aeac:	cmp	r0, #0
   1aeb0:	movne	r4, r0
   1aeb4:	addeq	r4, r0, #1
   1aeb8:	b	1aec4 <argp_parse@@Base+0x1734>
   1aebc:	add	r4, r4, #1
   1aec0:	add	r4, r4, r2
   1aec4:	mov	r2, r6
   1aec8:	mov	r1, r4
   1aecc:	mov	r0, r7
   1aed0:	bl	1adc4 <argp_parse@@Base+0x1634>
   1aed4:	str	r4, [r5]
   1aed8:	pop	{r4, r5, r6, r7, r8, pc}
   1aedc:	push	{r4, lr}
   1aee0:	mov	r2, #1
   1aee4:	bl	1ae68 <argp_parse@@Base+0x16d8>
   1aee8:	pop	{r4, pc}
   1aeec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aef0:	sub	sp, sp, #12
   1aef4:	mov	fp, r0
   1aef8:	mov	sl, r1
   1aefc:	mov	r9, r2
   1af00:	mov	r7, r3
   1af04:	ldr	r6, [sp, #48]	; 0x30
   1af08:	ldr	r5, [r1]
   1af0c:	asrs	r4, r5, #1
   1af10:	bmi	1b06c <argp_parse@@Base+0x18dc>
   1af14:	cmp	r5, #0
   1af18:	blt	1b080 <argp_parse@@Base+0x18f0>
   1af1c:	mvn	r3, #-2147483648	; 0x80000000
   1af20:	sub	r3, r3, r4
   1af24:	cmp	r5, r3
   1af28:	movle	r3, #0
   1af2c:	movgt	r3, #1
   1af30:	cmp	r3, #0
   1af34:	addeq	r4, r4, r5
   1af38:	mvnne	r4, #-2147483648	; 0x80000000
   1af3c:	mvn	r8, r7
   1af40:	lsr	r8, r8, #31
   1af44:	cmp	r7, r4
   1af48:	movge	r3, #0
   1af4c:	andlt	r3, r8, #1
   1af50:	cmp	r3, #0
   1af54:	movne	r4, r7
   1af58:	cmp	r6, #0
   1af5c:	blt	1b094 <argp_parse@@Base+0x1904>
   1af60:	cmp	r6, #0
   1af64:	beq	1b140 <argp_parse@@Base+0x19b0>
   1af68:	cmp	r4, #0
   1af6c:	blt	1b0f0 <argp_parse@@Base+0x1960>
   1af70:	mov	r1, r6
   1af74:	mvn	r0, #-2147483648	; 0x80000000
   1af78:	bl	1c994 <argp_parse@@Base+0x3204>
   1af7c:	cmp	r0, r4
   1af80:	movge	r0, #0
   1af84:	movlt	r0, #1
   1af88:	cmp	r0, #0
   1af8c:	mvnne	r3, #-2147483648	; 0x80000000
   1af90:	strne	r3, [sp, #4]
   1af94:	beq	1b128 <argp_parse@@Base+0x1998>
   1af98:	mov	r1, r6
   1af9c:	ldr	r0, [sp, #4]
   1afa0:	bl	1c994 <argp_parse@@Base+0x3204>
   1afa4:	mov	r4, r0
   1afa8:	mov	r1, r6
   1afac:	ldr	r0, [sp, #4]
   1afb0:	bl	1cbb4 <argp_parse@@Base+0x3424>
   1afb4:	ldr	r3, [sp, #4]
   1afb8:	sub	r1, r3, r1
   1afbc:	cmp	fp, #0
   1afc0:	moveq	r3, #0
   1afc4:	streq	r3, [sl]
   1afc8:	sub	r3, r4, r5
   1afcc:	cmp	r3, r9
   1afd0:	bge	1b058 <argp_parse@@Base+0x18c8>
   1afd4:	cmp	r9, #0
   1afd8:	blt	1b14c <argp_parse@@Base+0x19bc>
   1afdc:	cmp	r5, #0
   1afe0:	blt	1b160 <argp_parse@@Base+0x19d0>
   1afe4:	mvn	r3, #-2147483648	; 0x80000000
   1afe8:	sub	r3, r3, r9
   1afec:	cmp	r5, r3
   1aff0:	movle	r3, #0
   1aff4:	movgt	r3, #1
   1aff8:	cmp	r3, #0
   1affc:	bne	1b208 <argp_parse@@Base+0x1a78>
   1b000:	add	r5, r5, r9
   1b004:	mov	r4, r5
   1b008:	cmp	r7, r5
   1b00c:	movge	r7, #0
   1b010:	andlt	r7, r8, #1
   1b014:	cmp	r7, #0
   1b018:	bne	1b208 <argp_parse@@Base+0x1a78>
   1b01c:	cmp	r6, #0
   1b020:	blt	1b174 <argp_parse@@Base+0x19e4>
   1b024:	cmp	r6, #0
   1b028:	beq	1b054 <argp_parse@@Base+0x18c4>
   1b02c:	cmp	r5, #0
   1b030:	blt	1b1d0 <argp_parse@@Base+0x1a40>
   1b034:	mov	r1, r6
   1b038:	mvn	r0, #-2147483648	; 0x80000000
   1b03c:	bl	1c994 <argp_parse@@Base+0x3204>
   1b040:	cmp	r5, r0
   1b044:	movle	r0, #0
   1b048:	movgt	r0, #1
   1b04c:	cmp	r0, #0
   1b050:	bne	1b208 <argp_parse@@Base+0x1a78>
   1b054:	mul	r1, r5, r6
   1b058:	mov	r0, fp
   1b05c:	bl	1ad74 <argp_parse@@Base+0x15e4>
   1b060:	str	r4, [sl]
   1b064:	add	sp, sp, #12
   1b068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b06c:	rsb	r3, r4, #-2147483648	; 0x80000000
   1b070:	cmp	r5, r3
   1b074:	movge	r3, #0
   1b078:	movlt	r3, #1
   1b07c:	b	1af30 <argp_parse@@Base+0x17a0>
   1b080:	rsb	r3, r5, #-2147483648	; 0x80000000
   1b084:	cmp	r4, r3
   1b088:	movge	r3, #0
   1b08c:	movlt	r3, #1
   1b090:	b	1af30 <argp_parse@@Base+0x17a0>
   1b094:	cmp	r4, #0
   1b098:	blt	1b0c0 <argp_parse@@Base+0x1930>
   1b09c:	cmn	r6, #1
   1b0a0:	beq	1b0dc <argp_parse@@Base+0x194c>
   1b0a4:	mov	r1, r6
   1b0a8:	mov	r0, #-2147483648	; 0x80000000
   1b0ac:	bl	1c994 <argp_parse@@Base+0x3204>
   1b0b0:	cmp	r0, r4
   1b0b4:	movge	r0, #0
   1b0b8:	movlt	r0, #1
   1b0bc:	b	1af88 <argp_parse@@Base+0x17f8>
   1b0c0:	mov	r1, r6
   1b0c4:	mvn	r0, #-2147483648	; 0x80000000
   1b0c8:	bl	1c994 <argp_parse@@Base+0x3204>
   1b0cc:	cmp	r0, r4
   1b0d0:	movle	r0, #0
   1b0d4:	movgt	r0, #1
   1b0d8:	b	1af88 <argp_parse@@Base+0x17f8>
   1b0dc:	add	r0, r4, #-2147483648	; 0x80000000
   1b0e0:	cmp	r0, #0
   1b0e4:	movle	r0, #0
   1b0e8:	movgt	r0, #1
   1b0ec:	b	1af88 <argp_parse@@Base+0x17f8>
   1b0f0:	cmn	r4, #1
   1b0f4:	beq	1b114 <argp_parse@@Base+0x1984>
   1b0f8:	mov	r1, r4
   1b0fc:	mov	r0, #-2147483648	; 0x80000000
   1b100:	bl	1c994 <argp_parse@@Base+0x3204>
   1b104:	cmp	r6, r0
   1b108:	movle	r0, #0
   1b10c:	movgt	r0, #1
   1b110:	b	1af88 <argp_parse@@Base+0x17f8>
   1b114:	add	r0, r6, #-2147483648	; 0x80000000
   1b118:	cmp	r0, #0
   1b11c:	movle	r0, #0
   1b120:	movgt	r0, #1
   1b124:	b	1af88 <argp_parse@@Base+0x17f8>
   1b128:	mul	r1, r6, r4
   1b12c:	cmp	r1, #63	; 0x3f
   1b130:	movle	r3, #64	; 0x40
   1b134:	strle	r3, [sp, #4]
   1b138:	bgt	1afbc <argp_parse@@Base+0x182c>
   1b13c:	b	1af98 <argp_parse@@Base+0x1808>
   1b140:	mov	r3, #64	; 0x40
   1b144:	str	r3, [sp, #4]
   1b148:	b	1af98 <argp_parse@@Base+0x1808>
   1b14c:	rsb	r3, r9, #-2147483648	; 0x80000000
   1b150:	cmp	r5, r3
   1b154:	movge	r3, #0
   1b158:	movlt	r3, #1
   1b15c:	b	1aff8 <argp_parse@@Base+0x1868>
   1b160:	rsb	r3, r5, #-2147483648	; 0x80000000
   1b164:	cmp	r9, r3
   1b168:	movge	r3, #0
   1b16c:	movlt	r3, #1
   1b170:	b	1aff8 <argp_parse@@Base+0x1868>
   1b174:	cmp	r5, #0
   1b178:	blt	1b1a0 <argp_parse@@Base+0x1a10>
   1b17c:	cmn	r6, #1
   1b180:	beq	1b1bc <argp_parse@@Base+0x1a2c>
   1b184:	mov	r1, r6
   1b188:	mov	r0, #-2147483648	; 0x80000000
   1b18c:	bl	1c994 <argp_parse@@Base+0x3204>
   1b190:	cmp	r5, r0
   1b194:	movle	r0, #0
   1b198:	movgt	r0, #1
   1b19c:	b	1b04c <argp_parse@@Base+0x18bc>
   1b1a0:	mov	r1, r6
   1b1a4:	mvn	r0, #-2147483648	; 0x80000000
   1b1a8:	bl	1c994 <argp_parse@@Base+0x3204>
   1b1ac:	cmp	r5, r0
   1b1b0:	movge	r0, #0
   1b1b4:	movlt	r0, #1
   1b1b8:	b	1b04c <argp_parse@@Base+0x18bc>
   1b1bc:	add	r0, r5, #-2147483648	; 0x80000000
   1b1c0:	cmp	r0, #0
   1b1c4:	movle	r0, #0
   1b1c8:	movgt	r0, #1
   1b1cc:	b	1b04c <argp_parse@@Base+0x18bc>
   1b1d0:	cmn	r5, #1
   1b1d4:	beq	1b1f4 <argp_parse@@Base+0x1a64>
   1b1d8:	mov	r1, r5
   1b1dc:	mov	r0, #-2147483648	; 0x80000000
   1b1e0:	bl	1c994 <argp_parse@@Base+0x3204>
   1b1e4:	cmp	r6, r0
   1b1e8:	movle	r0, #0
   1b1ec:	movgt	r0, #1
   1b1f0:	b	1b04c <argp_parse@@Base+0x18bc>
   1b1f4:	add	r0, r6, #-2147483648	; 0x80000000
   1b1f8:	cmp	r0, #0
   1b1fc:	movle	r0, #0
   1b200:	movgt	r0, #1
   1b204:	b	1b04c <argp_parse@@Base+0x18bc>
   1b208:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1b20c:	push	{r4, lr}
   1b210:	bl	1b310 <argp_parse@@Base+0x1b80>
   1b214:	cmp	r0, #0
   1b218:	popne	{r4, pc}
   1b21c:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1b220:	push	{r4, lr}
   1b224:	mov	r1, #1
   1b228:	bl	1b20c <argp_parse@@Base+0x1a7c>
   1b22c:	pop	{r4, pc}
   1b230:	push	{r4, lr}
   1b234:	bl	1b310 <argp_parse@@Base+0x1b80>
   1b238:	cmp	r0, #0
   1b23c:	popne	{r4, pc}
   1b240:	bl	1b2e4 <argp_parse@@Base+0x1b54>
   1b244:	push	{r4, lr}
   1b248:	mov	r1, #1
   1b24c:	bl	1b230 <argp_parse@@Base+0x1aa0>
   1b250:	pop	{r4, pc}
   1b254:	push	{r4, r5, r6, lr}
   1b258:	mov	r5, r0
   1b25c:	mov	r4, r1
   1b260:	mov	r0, r1
   1b264:	bl	1ad40 <argp_parse@@Base+0x15b0>
   1b268:	mov	r2, r4
   1b26c:	mov	r1, r5
   1b270:	bl	11744 <memcpy@plt>
   1b274:	pop	{r4, r5, r6, pc}
   1b278:	push	{r4, r5, r6, lr}
   1b27c:	mov	r5, r0
   1b280:	mov	r4, r1
   1b284:	mov	r0, r1
   1b288:	bl	1ad54 <argp_parse@@Base+0x15c4>
   1b28c:	mov	r2, r4
   1b290:	mov	r1, r5
   1b294:	bl	11744 <memcpy@plt>
   1b298:	pop	{r4, r5, r6, pc}
   1b29c:	push	{r4, r5, r6, lr}
   1b2a0:	mov	r5, r0
   1b2a4:	mov	r4, r1
   1b2a8:	add	r0, r1, #1
   1b2ac:	bl	1ad54 <argp_parse@@Base+0x15c4>
   1b2b0:	mov	r2, #0
   1b2b4:	strb	r2, [r0, r4]
   1b2b8:	mov	r2, r4
   1b2bc:	mov	r1, r5
   1b2c0:	bl	11744 <memcpy@plt>
   1b2c4:	pop	{r4, r5, r6, pc}
   1b2c8:	push	{r4, lr}
   1b2cc:	mov	r4, r0
   1b2d0:	bl	11918 <strlen@plt>
   1b2d4:	add	r1, r0, #1
   1b2d8:	mov	r0, r4
   1b2dc:	bl	1b254 <argp_parse@@Base+0x1ac4>
   1b2e0:	pop	{r4, pc}
   1b2e4:	push	{r4, lr}
   1b2e8:	ldr	r3, [pc, #20]	; 1b304 <argp_parse@@Base+0x1b74>
   1b2ec:	ldr	r0, [r3]
   1b2f0:	ldr	r3, [pc, #16]	; 1b308 <argp_parse@@Base+0x1b78>
   1b2f4:	ldr	r2, [pc, #16]	; 1b30c <argp_parse@@Base+0x1b7c>
   1b2f8:	mov	r1, #0
   1b2fc:	bl	11858 <error@plt>
   1b300:	bl	11ae0 <abort@plt>
   1b304:	andeq	pc, r2, ip, lsr #11
   1b308:	andeq	lr, r1, r8, lsr #13
   1b30c:	andeq	sp, r1, ip, lsl #26
   1b310:	push	{r4, lr}
   1b314:	mov	r2, r0
   1b318:	mov	r3, r1
   1b31c:	cmp	r1, #0
   1b320:	cmpne	r0, #0
   1b324:	moveq	r3, #1
   1b328:	moveq	r2, r3
   1b32c:	umull	r0, r1, r2, r3
   1b330:	cmp	r0, #0
   1b334:	cmpge	r1, #0
   1b338:	bne	1b34c <argp_parse@@Base+0x1bbc>
   1b33c:	mov	r1, r3
   1b340:	mov	r0, r2
   1b344:	bl	11654 <calloc@plt>
   1b348:	pop	{r4, pc}
   1b34c:	bl	11948 <__errno_location@plt>
   1b350:	mov	r3, #12
   1b354:	str	r3, [r0]
   1b358:	mov	r0, #0
   1b35c:	pop	{r4, pc}
   1b360:	push	{r4, lr}
   1b364:	cmp	r0, #0
   1b368:	moveq	r0, #1
   1b36c:	cmp	r0, #0
   1b370:	blt	1b37c <argp_parse@@Base+0x1bec>
   1b374:	bl	11894 <malloc@plt>
   1b378:	pop	{r4, pc}
   1b37c:	bl	11948 <__errno_location@plt>
   1b380:	mov	r3, #12
   1b384:	str	r3, [r0]
   1b388:	mov	r0, #0
   1b38c:	pop	{r4, pc}
   1b390:	push	{r4, lr}
   1b394:	cmp	r0, #0
   1b398:	beq	1b3b4 <argp_parse@@Base+0x1c24>
   1b39c:	cmp	r1, #0
   1b3a0:	beq	1b3c0 <argp_parse@@Base+0x1c30>
   1b3a4:	cmp	r1, #0
   1b3a8:	blt	1b3cc <argp_parse@@Base+0x1c3c>
   1b3ac:	bl	117e0 <realloc@plt>
   1b3b0:	pop	{r4, pc}
   1b3b4:	mov	r0, r1
   1b3b8:	bl	1b360 <argp_parse@@Base+0x1bd0>
   1b3bc:	pop	{r4, pc}
   1b3c0:	bl	1a5dc <argp_parse@@Base+0xe4c>
   1b3c4:	mov	r0, #0
   1b3c8:	pop	{r4, pc}
   1b3cc:	bl	11948 <__errno_location@plt>
   1b3d0:	mov	r3, #12
   1b3d4:	str	r3, [r0]
   1b3d8:	mov	r0, #0
   1b3dc:	pop	{r4, pc}
   1b3e0:	push	{r4, r5, r6, r7, r8, lr}
   1b3e4:	mov	r8, r0
   1b3e8:	mov	r7, r1
   1b3ec:	mov	r6, r2
   1b3f0:	mov	r5, r3
   1b3f4:	mov	r0, #36	; 0x24
   1b3f8:	bl	1b360 <argp_parse@@Base+0x1bd0>
   1b3fc:	subs	r4, r0, #0
   1b400:	beq	1b440 <argp_parse@@Base+0x1cb0>
   1b404:	str	r8, [r4]
   1b408:	str	r7, [r4, #4]
   1b40c:	str	r6, [r4, #8]
   1b410:	str	r5, [r4, #12]
   1b414:	mov	r3, #0
   1b418:	str	r3, [r4, #20]
   1b41c:	str	r3, [r4, #16]
   1b420:	mov	r0, #200	; 0xc8
   1b424:	bl	1b360 <argp_parse@@Base+0x1bd0>
   1b428:	str	r0, [r4, #24]
   1b42c:	cmp	r0, #0
   1b430:	strne	r0, [r4, #28]
   1b434:	addne	r0, r0, #200	; 0xc8
   1b438:	strne	r0, [r4, #32]
   1b43c:	beq	1b448 <argp_parse@@Base+0x1cb8>
   1b440:	mov	r0, r4
   1b444:	pop	{r4, r5, r6, r7, r8, pc}
   1b448:	mov	r0, r4
   1b44c:	bl	1a5dc <argp_parse@@Base+0xe4c>
   1b450:	mov	r4, #0
   1b454:	b	1b440 <argp_parse@@Base+0x1cb0>
   1b458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b45c:	sub	sp, sp, #20
   1b460:	mov	r4, r0
   1b464:	ldr	r2, [r0, #24]
   1b468:	ldr	r3, [r0, #16]
   1b46c:	add	r9, r2, r3
   1b470:	mov	sl, #32
   1b474:	b	1b520 <argp_parse@@Base+0x1d90>
   1b478:	add	r5, r5, #1
   1b47c:	cmp	r6, r5
   1b480:	beq	1b4b0 <argp_parse@@Base+0x1d20>
   1b484:	ldr	r0, [r4]
   1b488:	ldr	r3, [r0, #20]
   1b48c:	ldr	r2, [r0, #24]
   1b490:	cmp	r3, r2
   1b494:	addcc	r2, r3, #1
   1b498:	strcc	r2, [r0, #20]
   1b49c:	strbcc	sl, [r3]
   1b4a0:	bcc	1b478 <argp_parse@@Base+0x1ce8>
   1b4a4:	mov	r1, sl
   1b4a8:	bl	119f0 <__overflow@plt>
   1b4ac:	b	1b478 <argp_parse@@Base+0x1ce8>
   1b4b0:	str	r6, [r4, #20]
   1b4b4:	ldr	fp, [r4, #28]
   1b4b8:	str	fp, [sp, #8]
   1b4bc:	str	r9, [sp, #4]
   1b4c0:	sub	r3, fp, r9
   1b4c4:	str	r3, [sp]
   1b4c8:	mov	r2, r3
   1b4cc:	mov	r1, #10
   1b4d0:	mov	r0, r9
   1b4d4:	bl	119a8 <memchr@plt>
   1b4d8:	mov	r7, r0
   1b4dc:	ldr	r3, [r4, #20]
   1b4e0:	cmp	r3, #0
   1b4e4:	movlt	r3, #0
   1b4e8:	strlt	r3, [r4, #20]
   1b4ec:	cmp	r7, #0
   1b4f0:	beq	1b590 <argp_parse@@Base+0x1e00>
   1b4f4:	ldr	r0, [r4, #20]
   1b4f8:	mov	r5, r7
   1b4fc:	ldr	r8, [r4, #8]
   1b500:	ldr	r3, [sp, #4]
   1b504:	sub	r3, r7, r3
   1b508:	add	r3, r3, r0
   1b50c:	cmp	r3, r8
   1b510:	bge	1b5e0 <argp_parse@@Base+0x1e50>
   1b514:	mov	r3, #0
   1b518:	str	r3, [r4, #20]
   1b51c:	add	r9, r7, #1
   1b520:	ldr	fp, [r4, #28]
   1b524:	cmp	r9, fp
   1b528:	bcs	1b5c8 <argp_parse@@Base+0x1e38>
   1b52c:	ldr	r3, [r4, #20]
   1b530:	cmp	r3, #0
   1b534:	bne	1b4b4 <argp_parse@@Base+0x1d24>
   1b538:	ldr	r6, [r4, #4]
   1b53c:	cmp	r6, #0
   1b540:	beq	1b98c <argp_parse@@Base+0x21fc>
   1b544:	add	r3, fp, r6
   1b548:	ldr	r2, [r4, #32]
   1b54c:	cmp	r2, r3
   1b550:	movls	r5, #0
   1b554:	bls	1b484 <argp_parse@@Base+0x1cf4>
   1b558:	add	r5, r9, r6
   1b55c:	sub	r2, fp, r9
   1b560:	mov	r1, r9
   1b564:	mov	r0, r5
   1b568:	bl	116f0 <memmove@plt>
   1b56c:	ldr	r3, [r4, #28]
   1b570:	add	r3, r3, r6
   1b574:	str	r3, [r4, #28]
   1b578:	mov	r2, r6
   1b57c:	mov	r1, sl
   1b580:	mov	r0, r9
   1b584:	bl	11984 <memset@plt>
   1b588:	mov	r9, r5
   1b58c:	b	1b4b0 <argp_parse@@Base+0x1d20>
   1b590:	ldr	r3, [r4, #20]
   1b594:	ldr	r2, [sp]
   1b598:	add	r3, r2, r3
   1b59c:	ldr	r6, [r4, #8]
   1b5a0:	cmp	r3, r6
   1b5a4:	bcc	1b5c4 <argp_parse@@Base+0x1e34>
   1b5a8:	sub	r6, r6, #1
   1b5ac:	ldr	r3, [r4, #12]
   1b5b0:	str	r3, [sp, #12]
   1b5b4:	cmp	r3, #0
   1b5b8:	blt	1b6d4 <argp_parse@@Base+0x1f44>
   1b5bc:	mov	r7, fp
   1b5c0:	b	1b5f4 <argp_parse@@Base+0x1e64>
   1b5c4:	str	r3, [r4, #20]
   1b5c8:	ldr	r3, [r4, #28]
   1b5cc:	ldr	r2, [r4, #24]
   1b5d0:	sub	r3, r3, r2
   1b5d4:	str	r3, [r4, #16]
   1b5d8:	add	sp, sp, #20
   1b5dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5e0:	sub	r6, r8, #1
   1b5e4:	ldr	r3, [r4, #12]
   1b5e8:	str	r3, [sp, #12]
   1b5ec:	cmp	r3, #0
   1b5f0:	blt	1b688 <argp_parse@@Base+0x1ef8>
   1b5f4:	ldr	r5, [r4, #20]
   1b5f8:	rsb	r5, r5, #1
   1b5fc:	add	r5, r5, r6
   1b600:	adds	r5, r9, r5
   1b604:	bcs	1b9b4 <argp_parse@@Base+0x2224>
   1b608:	bl	118f4 <__ctype_b_loc@plt>
   1b60c:	ldr	r0, [r0]
   1b610:	mov	r3, r5
   1b614:	mov	r1, r3
   1b618:	sub	r3, r3, #1
   1b61c:	ldrb	r2, [r1]
   1b620:	lsl	r2, r2, #1
   1b624:	ldrh	r2, [r0, r2]
   1b628:	tst	r2, #1
   1b62c:	bne	1b6f4 <argp_parse@@Base+0x1f64>
   1b630:	mov	r1, r3
   1b634:	cmp	r3, r9
   1b638:	bcs	1b614 <argp_parse@@Base+0x1e84>
   1b63c:	add	r6, r1, #1
   1b640:	cmp	r6, r9
   1b644:	bhi	1b730 <argp_parse@@Base+0x1fa0>
   1b648:	cmp	r5, r7
   1b64c:	bcs	1b7e0 <argp_parse@@Base+0x2050>
   1b650:	add	r6, r5, #1
   1b654:	mov	r8, r7
   1b658:	mov	r5, r6
   1b65c:	cmp	r8, r6
   1b660:	beq	1b7e0 <argp_parse@@Base+0x2050>
   1b664:	bl	118f4 <__ctype_b_loc@plt>
   1b668:	add	r6, r6, #1
   1b66c:	ldrb	r3, [r5]
   1b670:	ldr	r2, [r0]
   1b674:	lsl	r3, r3, #1
   1b678:	ldrh	r3, [r2, r3]
   1b67c:	tst	r3, #1
   1b680:	beq	1b658 <argp_parse@@Base+0x1ec8>
   1b684:	b	1b7f4 <argp_parse@@Base+0x2064>
   1b688:	cmp	fp, r7
   1b68c:	bls	1b6d4 <argp_parse@@Base+0x1f44>
   1b690:	sub	r0, r6, r0
   1b694:	ldr	r3, [sp, #8]
   1b698:	sub	r2, r3, r7
   1b69c:	mov	r1, r7
   1b6a0:	add	r0, r9, r0
   1b6a4:	bl	116f0 <memmove@plt>
   1b6a8:	ldr	r3, [r4, #20]
   1b6ac:	sub	r6, r6, r3
   1b6b0:	add	r6, r9, r6
   1b6b4:	sub	r5, r6, r7
   1b6b8:	ldr	r3, [r4, #28]
   1b6bc:	sub	r5, r3, r5
   1b6c0:	str	r5, [r4, #28]
   1b6c4:	mov	r3, #0
   1b6c8:	str	r3, [r4, #20]
   1b6cc:	add	r9, r9, r8
   1b6d0:	b	1b520 <argp_parse@@Base+0x1d90>
   1b6d4:	ldr	r3, [r4, #20]
   1b6d8:	ldr	r2, [sp]
   1b6dc:	add	r3, r2, r3
   1b6e0:	str	r3, [r4, #20]
   1b6e4:	sub	r3, r6, r3
   1b6e8:	add	r3, fp, r3
   1b6ec:	str	r3, [r4, #28]
   1b6f0:	b	1b5c8 <argp_parse@@Base+0x1e38>
   1b6f4:	add	r6, r1, #1
   1b6f8:	cmp	r6, r9
   1b6fc:	bls	1b648 <argp_parse@@Base+0x1eb8>
   1b700:	cmp	r1, r9
   1b704:	bcc	1b730 <argp_parse@@Base+0x1fa0>
   1b708:	sub	ip, r9, #1
   1b70c:	mov	r1, r3
   1b710:	cmp	ip, r3
   1b714:	beq	1b730 <argp_parse@@Base+0x1fa0>
   1b718:	sub	r3, r3, #1
   1b71c:	ldrb	r2, [r1]
   1b720:	lsl	r2, r2, #1
   1b724:	ldrh	r2, [r0, r2]
   1b728:	tst	r2, #1
   1b72c:	bne	1b70c <argp_parse@@Base+0x1f7c>
   1b730:	add	r5, r1, #1
   1b734:	ldr	r3, [sp]
   1b738:	add	r3, r3, #1
   1b73c:	add	r3, r9, r3
   1b740:	cmp	r6, r3
   1b744:	beq	1b818 <argp_parse@@Base+0x2088>
   1b748:	add	r3, r5, #1
   1b74c:	sub	r3, r6, r3
   1b750:	ldr	r2, [sp, #12]
   1b754:	cmp	r3, r2
   1b758:	bge	1b830 <argp_parse@@Base+0x20a0>
   1b75c:	cmp	r6, fp
   1b760:	bcs	1b830 <argp_parse@@Base+0x20a0>
   1b764:	ldr	r3, [r4, #32]
   1b768:	ldr	r2, [sp, #8]
   1b76c:	sub	r3, r3, r2
   1b770:	ldr	r2, [sp, #12]
   1b774:	add	r2, r2, #1
   1b778:	cmp	r3, r2
   1b77c:	bgt	1b878 <argp_parse@@Base+0x20e8>
   1b780:	ldr	r0, [r4, #24]
   1b784:	cmp	r5, r0
   1b788:	bls	1b79c <argp_parse@@Base+0x200c>
   1b78c:	ldr	r3, [r4]
   1b790:	sub	r2, r5, r0
   1b794:	mov	r1, #1
   1b798:	bl	11768 <fwrite_unlocked@plt>
   1b79c:	ldr	r0, [r4]
   1b7a0:	ldr	r3, [r0, #20]
   1b7a4:	ldr	r2, [r0, #24]
   1b7a8:	cmp	r3, r2
   1b7ac:	addcc	r2, r3, #1
   1b7b0:	strcc	r2, [r0, #20]
   1b7b4:	movcc	r2, #10
   1b7b8:	strbcc	r2, [r3]
   1b7bc:	bcs	1b8c4 <argp_parse@@Base+0x2134>
   1b7c0:	ldr	r7, [r4, #24]
   1b7c4:	ldr	r3, [sp, #4]
   1b7c8:	sub	r3, r3, r7
   1b7cc:	ldr	r2, [sp]
   1b7d0:	add	r3, r2, r3
   1b7d4:	str	r3, [sp]
   1b7d8:	mov	r9, r7
   1b7dc:	b	1b840 <argp_parse@@Base+0x20b0>
   1b7e0:	cmp	r5, r7
   1b7e4:	moveq	r3, #0
   1b7e8:	streq	r3, [r4, #20]
   1b7ec:	addeq	r9, r7, #1
   1b7f0:	beq	1b520 <argp_parse@@Base+0x1d90>
   1b7f4:	bl	118f4 <__ctype_b_loc@plt>
   1b7f8:	ldr	r2, [r0]
   1b7fc:	mov	r6, r5
   1b800:	ldrb	r3, [r6, #1]!
   1b804:	lsl	r3, r3, #1
   1b808:	ldrh	r3, [r2, r3]
   1b80c:	tst	r3, #1
   1b810:	bne	1b800 <argp_parse@@Base+0x2070>
   1b814:	b	1b734 <argp_parse@@Base+0x1fa4>
   1b818:	ldr	r3, [r4, #32]
   1b81c:	sub	r3, r3, r5
   1b820:	ldr	r2, [sp, #12]
   1b824:	add	r2, r2, #1
   1b828:	cmp	r3, r2
   1b82c:	blt	1b75c <argp_parse@@Base+0x1fcc>
   1b830:	mov	r3, #10
   1b834:	strb	r3, [r5]
   1b838:	mov	r7, r9
   1b83c:	add	r9, r5, #1
   1b840:	mov	r8, r6
   1b844:	ldr	r3, [r4, #12]
   1b848:	sub	r2, r6, r9
   1b84c:	cmp	r2, r3
   1b850:	bge	1b8e0 <argp_parse@@Base+0x2150>
   1b854:	ldr	r2, [sp]
   1b858:	add	r2, r2, #1
   1b85c:	add	r2, r7, r2
   1b860:	cmp	r6, r2
   1b864:	beq	1b8d0 <argp_parse@@Base+0x2140>
   1b868:	cmp	r3, #0
   1b86c:	movgt	r5, #0
   1b870:	bgt	1b944 <argp_parse@@Base+0x21b4>
   1b874:	b	1b904 <argp_parse@@Base+0x2174>
   1b878:	ldr	r3, [sp, #8]
   1b87c:	sub	r7, r3, r6
   1b880:	mov	r0, r2
   1b884:	mov	r2, r7
   1b888:	mov	r1, r6
   1b88c:	add	r0, r5, r0
   1b890:	bl	116f0 <memmove@plt>
   1b894:	ldr	r6, [r4, #12]
   1b898:	add	r6, r6, #1
   1b89c:	add	r6, r5, r6
   1b8a0:	add	r7, r6, r7
   1b8a4:	ldr	r3, [sp, #4]
   1b8a8:	sub	r3, r7, r3
   1b8ac:	str	r3, [sp]
   1b8b0:	mov	r3, #10
   1b8b4:	strb	r3, [r5]
   1b8b8:	mov	r7, r9
   1b8bc:	add	r9, r5, #1
   1b8c0:	b	1b840 <argp_parse@@Base+0x20b0>
   1b8c4:	mov	r1, #10
   1b8c8:	bl	119f0 <__overflow@plt>
   1b8cc:	b	1b7c0 <argp_parse@@Base+0x2030>
   1b8d0:	ldr	r2, [r4, #32]
   1b8d4:	sub	r2, r2, r6
   1b8d8:	cmp	r3, r2
   1b8dc:	bgt	1b868 <argp_parse@@Base+0x20d8>
   1b8e0:	cmp	r3, #0
   1b8e4:	ble	1b904 <argp_parse@@Base+0x2174>
   1b8e8:	mov	r3, r9
   1b8ec:	strb	sl, [r3], #1
   1b8f0:	sub	r1, r3, r9
   1b8f4:	ldr	r2, [r4, #12]
   1b8f8:	cmp	r1, r2
   1b8fc:	blt	1b8ec <argp_parse@@Base+0x215c>
   1b900:	mov	r9, r3
   1b904:	cmp	r9, r6
   1b908:	bcc	1b970 <argp_parse@@Base+0x21e0>
   1b90c:	sub	r7, r8, r7
   1b910:	ldr	r3, [sp]
   1b914:	sub	r7, r3, r7
   1b918:	add	r7, r9, r7
   1b91c:	str	r7, [r4, #28]
   1b920:	ldr	r3, [r4, #12]
   1b924:	cmp	r3, #0
   1b928:	mvneq	r3, #0
   1b92c:	str	r3, [r4, #20]
   1b930:	b	1b520 <argp_parse@@Base+0x1d90>
   1b934:	add	r5, r5, #1
   1b938:	ldr	r3, [r4, #12]
   1b93c:	cmp	r3, r5
   1b940:	ble	1b904 <argp_parse@@Base+0x2174>
   1b944:	ldr	r0, [r4]
   1b948:	ldr	r3, [r0, #20]
   1b94c:	ldr	r2, [r0, #24]
   1b950:	cmp	r3, r2
   1b954:	addcc	r2, r3, #1
   1b958:	strcc	r2, [r0, #20]
   1b95c:	strbcc	sl, [r3]
   1b960:	bcc	1b934 <argp_parse@@Base+0x21a4>
   1b964:	mov	r1, sl
   1b968:	bl	119f0 <__overflow@plt>
   1b96c:	b	1b934 <argp_parse@@Base+0x21a4>
   1b970:	ldr	r3, [sp]
   1b974:	add	r2, r7, r3
   1b978:	sub	r2, r2, r8
   1b97c:	mov	r1, r6
   1b980:	mov	r0, r9
   1b984:	bl	116f0 <memmove@plt>
   1b988:	b	1b90c <argp_parse@@Base+0x217c>
   1b98c:	str	fp, [sp, #8]
   1b990:	str	r9, [sp, #4]
   1b994:	sub	r3, fp, r9
   1b998:	str	r3, [sp]
   1b99c:	mov	r2, r3
   1b9a0:	mov	r1, #10
   1b9a4:	mov	r0, r9
   1b9a8:	bl	119a8 <memchr@plt>
   1b9ac:	mov	r7, r0
   1b9b0:	b	1b4ec <argp_parse@@Base+0x1d5c>
   1b9b4:	mov	r1, r5
   1b9b8:	b	1b63c <argp_parse@@Base+0x1eac>
   1b9bc:	push	{r4, lr}
   1b9c0:	mov	r4, r0
   1b9c4:	bl	1b458 <argp_parse@@Base+0x1cc8>
   1b9c8:	ldr	r2, [r4, #28]
   1b9cc:	ldr	r0, [r4, #24]
   1b9d0:	cmp	r2, r0
   1b9d4:	bls	1b9e8 <argp_parse@@Base+0x2258>
   1b9d8:	ldr	r3, [r4]
   1b9dc:	sub	r2, r2, r0
   1b9e0:	mov	r1, #1
   1b9e4:	bl	11768 <fwrite_unlocked@plt>
   1b9e8:	ldr	r0, [r4, #24]
   1b9ec:	bl	1a5dc <argp_parse@@Base+0xe4c>
   1b9f0:	mov	r0, r4
   1b9f4:	bl	1a5dc <argp_parse@@Base+0xe4c>
   1b9f8:	pop	{r4, pc}
   1b9fc:	ldr	r3, [r0, #32]
   1ba00:	ldr	r2, [r0, #28]
   1ba04:	sub	r3, r3, r2
   1ba08:	cmp	r3, r1
   1ba0c:	bcc	1ba18 <argp_parse@@Base+0x2288>
   1ba10:	mov	r0, #1
   1ba14:	bx	lr
   1ba18:	push	{r4, r5, r6, lr}
   1ba1c:	mov	r5, r1
   1ba20:	mov	r4, r0
   1ba24:	bl	1b458 <argp_parse@@Base+0x1cc8>
   1ba28:	ldr	r0, [r4, #24]
   1ba2c:	ldr	r2, [r4, #28]
   1ba30:	ldr	r3, [r4]
   1ba34:	sub	r2, r2, r0
   1ba38:	mov	r1, #1
   1ba3c:	bl	11768 <fwrite_unlocked@plt>
   1ba40:	ldr	r2, [r4, #28]
   1ba44:	ldr	r3, [r4, #24]
   1ba48:	sub	r1, r2, r3
   1ba4c:	cmp	r0, r1
   1ba50:	bne	1ba94 <argp_parse@@Base+0x2304>
   1ba54:	str	r3, [r4, #28]
   1ba58:	mov	r2, #0
   1ba5c:	str	r2, [r4, #16]
   1ba60:	ldr	r1, [r4, #32]
   1ba64:	sub	r1, r1, r3
   1ba68:	cmp	r5, r1
   1ba6c:	bls	1ba8c <argp_parse@@Base+0x22fc>
   1ba70:	adds	r5, r5, r1
   1ba74:	bcc	1bac0 <argp_parse@@Base+0x2330>
   1ba78:	bl	11948 <__errno_location@plt>
   1ba7c:	mov	r3, #12
   1ba80:	str	r3, [r0]
   1ba84:	mov	r0, #0
   1ba88:	pop	{r4, r5, r6, pc}
   1ba8c:	mov	r0, #1
   1ba90:	pop	{r4, r5, r6, pc}
   1ba94:	sub	r2, r2, r0
   1ba98:	str	r2, [r4, #28]
   1ba9c:	ldr	r1, [r4, #16]
   1baa0:	sub	r1, r1, r0
   1baa4:	str	r1, [r4, #16]
   1baa8:	sub	r2, r2, r3
   1baac:	add	r1, r3, r0
   1bab0:	mov	r0, r3
   1bab4:	bl	116f0 <memmove@plt>
   1bab8:	mov	r0, #0
   1babc:	pop	{r4, r5, r6, pc}
   1bac0:	mov	r1, r5
   1bac4:	mov	r0, r3
   1bac8:	bl	1b390 <argp_parse@@Base+0x1c00>
   1bacc:	cmp	r0, #0
   1bad0:	beq	1ba78 <argp_parse@@Base+0x22e8>
   1bad4:	str	r0, [r4, #24]
   1bad8:	add	r5, r0, r5
   1badc:	str	r5, [r4, #32]
   1bae0:	str	r0, [r4, #28]
   1bae4:	mov	r0, #1
   1bae8:	pop	{r4, r5, r6, pc}
   1baec:	push	{r1, r2, r3}
   1baf0:	push	{r4, r5, r6, r7, lr}
   1baf4:	sub	sp, sp, #8
   1baf8:	mov	r5, r0
   1bafc:	ldr	r7, [sp, #28]
   1bb00:	mov	r1, #150	; 0x96
   1bb04:	add	r6, sp, #32
   1bb08:	mov	r0, r5
   1bb0c:	bl	1b9fc <argp_parse@@Base+0x226c>
   1bb10:	cmp	r0, #0
   1bb14:	beq	1bb48 <argp_parse@@Base+0x23b8>
   1bb18:	str	r6, [sp, #4]
   1bb1c:	ldr	r0, [r5, #28]
   1bb20:	ldr	r4, [r5, #32]
   1bb24:	sub	r4, r4, r0
   1bb28:	mov	r3, r6
   1bb2c:	mov	r2, r7
   1bb30:	mov	r1, r4
   1bb34:	bl	11a5c <vsnprintf@plt>
   1bb38:	cmp	r4, r0
   1bb3c:	bhi	1bb50 <argp_parse@@Base+0x23c0>
   1bb40:	add	r1, r0, #1
   1bb44:	b	1bb08 <argp_parse@@Base+0x2378>
   1bb48:	mvn	r0, #0
   1bb4c:	b	1bb5c <argp_parse@@Base+0x23cc>
   1bb50:	ldr	r3, [r5, #28]
   1bb54:	add	r3, r3, r0
   1bb58:	str	r3, [r5, #28]
   1bb5c:	add	sp, sp, #8
   1bb60:	pop	{r4, r5, r6, r7, lr}
   1bb64:	add	sp, sp, #12
   1bb68:	bx	lr
   1bb6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bb70:	ldr	r4, [r1, #28]
   1bb74:	ldr	r5, [r1, #32]
   1bb78:	ldr	r6, [r1]
   1bb7c:	add	r7, r0, r5, lsl #2
   1bb80:	b	1bbb8 <argp_parse@@Base+0x2428>
   1bb84:	cmp	sl, #0
   1bb88:	ble	1bbb4 <argp_parse@@Base+0x2424>
   1bb8c:	add	r2, r0, r4, lsl #2
   1bb90:	sub	r3, r6, sl
   1bb94:	add	r3, r0, r3, lsl #2
   1bb98:	add	r8, r0, r6, lsl #2
   1bb9c:	ldr	ip, [r2]
   1bba0:	ldr	lr, [r3]
   1bba4:	str	lr, [r2], #4
   1bba8:	str	ip, [r3], #4
   1bbac:	cmp	r3, r8
   1bbb0:	bne	1bb9c <argp_parse@@Base+0x240c>
   1bbb4:	sub	r6, r6, sl
   1bbb8:	cmp	r6, r5
   1bbbc:	movle	r3, #0
   1bbc0:	movgt	r3, #1
   1bbc4:	cmp	r4, r5
   1bbc8:	movge	r3, #0
   1bbcc:	cmp	r3, #0
   1bbd0:	beq	1bc1c <argp_parse@@Base+0x248c>
   1bbd4:	sub	r9, r6, r5
   1bbd8:	sub	sl, r5, r4
   1bbdc:	cmp	r9, sl
   1bbe0:	bgt	1bb84 <argp_parse@@Base+0x23f4>
   1bbe4:	cmp	r9, #0
   1bbe8:	addgt	r3, r0, r4, lsl #2
   1bbec:	addgt	r8, r9, r4
   1bbf0:	addgt	r8, r0, r8, lsl #2
   1bbf4:	movgt	r2, r7
   1bbf8:	ble	1bc14 <argp_parse@@Base+0x2484>
   1bbfc:	ldr	ip, [r3]
   1bc00:	ldr	lr, [r2]
   1bc04:	str	lr, [r3], #4
   1bc08:	str	ip, [r2], #4
   1bc0c:	cmp	r3, r8
   1bc10:	bne	1bbfc <argp_parse@@Base+0x246c>
   1bc14:	add	r4, r4, r9
   1bc18:	b	1bbb8 <argp_parse@@Base+0x2428>
   1bc1c:	ldr	r0, [r1]
   1bc20:	ldr	r3, [r1, #32]
   1bc24:	sub	r2, r0, r3
   1bc28:	ldr	r3, [r1, #28]
   1bc2c:	add	r3, r3, r2
   1bc30:	str	r3, [r1, #28]
   1bc34:	str	r0, [r1, #32]
   1bc38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bc3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc40:	sub	sp, sp, #44	; 0x2c
   1bc44:	str	r0, [sp, #20]
   1bc48:	str	r1, [sp, #12]
   1bc4c:	str	r2, [sp, #24]
   1bc50:	str	r3, [sp, #8]
   1bc54:	ldr	fp, [sp, #88]	; 0x58
   1bc58:	ldr	sl, [fp, #20]
   1bc5c:	ldrb	r3, [sl]
   1bc60:	cmp	r3, #0
   1bc64:	cmpne	r3, #61	; 0x3d
   1bc68:	beq	1bca4 <argp_parse@@Base+0x2514>
   1bc6c:	mov	r8, sl
   1bc70:	ldrb	r3, [r8, #1]!
   1bc74:	cmp	r3, #0
   1bc78:	cmpne	r3, #61	; 0x3d
   1bc7c:	bne	1bc70 <argp_parse@@Base+0x24e0>
   1bc80:	sub	r7, r8, sl
   1bc84:	ldr	r5, [sp, #8]
   1bc88:	ldr	r3, [r5]
   1bc8c:	str	r3, [sp, #16]
   1bc90:	cmp	r3, #0
   1bc94:	beq	1bf98 <argp_parse@@Base+0x2808>
   1bc98:	mov	r4, r3
   1bc9c:	mov	r6, #0
   1bca0:	b	1bcbc <argp_parse@@Base+0x252c>
   1bca4:	mov	r8, sl
   1bca8:	b	1bc80 <argp_parse@@Base+0x24f0>
   1bcac:	add	r6, r6, #1
   1bcb0:	ldr	r4, [r5, #16]!
   1bcb4:	cmp	r4, #0
   1bcb8:	beq	1bcf4 <argp_parse@@Base+0x2564>
   1bcbc:	mov	r9, r5
   1bcc0:	mov	r2, r7
   1bcc4:	mov	r1, sl
   1bcc8:	mov	r0, r4
   1bccc:	bl	11ad4 <strncmp@plt>
   1bcd0:	cmp	r0, #0
   1bcd4:	bne	1bcac <argp_parse@@Base+0x251c>
   1bcd8:	mov	r0, r4
   1bcdc:	bl	11918 <strlen@plt>
   1bce0:	cmp	r7, r0
   1bce4:	bne	1bcac <argp_parse@@Base+0x251c>
   1bce8:	cmp	r5, #0
   1bcec:	strne	r6, [sp, #28]
   1bcf0:	bne	1bf48 <argp_parse@@Base+0x27b8>
   1bcf4:	ldr	r4, [sp, #8]
   1bcf8:	mvn	r3, #0
   1bcfc:	str	r3, [sp, #28]
   1bd00:	mov	sl, #0
   1bd04:	str	sl, [sp, #36]	; 0x24
   1bd08:	mov	r5, sl
   1bd0c:	mov	r9, sl
   1bd10:	str	r8, [sp, #32]
   1bd14:	mov	r8, sl
   1bd18:	ldr	r0, [sp, #16]
   1bd1c:	b	1bd6c <argp_parse@@Base+0x25dc>
   1bd20:	ldr	r2, [r9, #8]
   1bd24:	ldr	r3, [r4, #8]
   1bd28:	cmp	r2, r3
   1bd2c:	bne	1bda4 <argp_parse@@Base+0x2614>
   1bd30:	ldr	r2, [r9, #12]
   1bd34:	ldr	r3, [r4, #12]
   1bd38:	cmp	r2, r3
   1bd3c:	bne	1bda4 <argp_parse@@Base+0x2614>
   1bd40:	b	1bd5c <argp_parse@@Base+0x25cc>
   1bd44:	cmp	r8, #0
   1bd48:	moveq	sl, #1
   1bd4c:	beq	1bd5c <argp_parse@@Base+0x25cc>
   1bd50:	mov	sl, #1
   1bd54:	mov	r3, #1
   1bd58:	strb	r3, [r8, r5]
   1bd5c:	add	r5, r5, #1
   1bd60:	ldr	r0, [r4, #16]!
   1bd64:	cmp	r0, #0
   1bd68:	beq	1be0c <argp_parse@@Base+0x267c>
   1bd6c:	mov	r2, r7
   1bd70:	ldr	r1, [fp, #20]
   1bd74:	bl	11ad4 <strncmp@plt>
   1bd78:	cmp	r0, #0
   1bd7c:	bne	1bd5c <argp_parse@@Base+0x25cc>
   1bd80:	cmp	r9, #0
   1bd84:	beq	1bdf8 <argp_parse@@Base+0x2668>
   1bd88:	ldr	r3, [sp, #84]	; 0x54
   1bd8c:	cmp	r3, #0
   1bd90:	bne	1bda4 <argp_parse@@Base+0x2614>
   1bd94:	ldr	r2, [r9, #4]
   1bd98:	ldr	r3, [r4, #4]
   1bd9c:	cmp	r2, r3
   1bda0:	beq	1bd20 <argp_parse@@Base+0x2590>
   1bda4:	cmp	sl, #0
   1bda8:	bne	1bd5c <argp_parse@@Base+0x25cc>
   1bdac:	ldr	r3, [sp, #92]	; 0x5c
   1bdb0:	cmp	r3, #0
   1bdb4:	beq	1bd44 <argp_parse@@Base+0x25b4>
   1bdb8:	cmp	r8, #0
   1bdbc:	bne	1bd54 <argp_parse@@Base+0x25c4>
   1bdc0:	mov	r0, r6
   1bdc4:	bl	1b360 <argp_parse@@Base+0x1bd0>
   1bdc8:	subs	r8, r0, #0
   1bdcc:	beq	1be04 <argp_parse@@Base+0x2674>
   1bdd0:	mov	r2, r6
   1bdd4:	mov	r1, #0
   1bdd8:	mov	r0, r8
   1bddc:	bl	11984 <memset@plt>
   1bde0:	ldr	r3, [sp, #28]
   1bde4:	mov	r2, #1
   1bde8:	strb	r2, [r8, r3]
   1bdec:	mov	r3, #1
   1bdf0:	str	r3, [sp, #36]	; 0x24
   1bdf4:	b	1bd54 <argp_parse@@Base+0x25c4>
   1bdf8:	str	r5, [sp, #28]
   1bdfc:	mov	r9, r4
   1be00:	b	1bd5c <argp_parse@@Base+0x25cc>
   1be04:	mov	sl, #1
   1be08:	b	1bd5c <argp_parse@@Base+0x25cc>
   1be0c:	mov	r3, r8
   1be10:	str	r8, [sp, #16]
   1be14:	ldr	r8, [sp, #32]
   1be18:	cmp	sl, #0
   1be1c:	cmpeq	r3, #0
   1be20:	beq	1bf40 <argp_parse@@Base+0x27b0>
   1be24:	ldr	r3, [sp, #92]	; 0x5c
   1be28:	cmp	r3, #0
   1be2c:	beq	1be5c <argp_parse@@Base+0x26cc>
   1be30:	cmp	sl, #0
   1be34:	beq	1be98 <argp_parse@@Base+0x2708>
   1be38:	ldr	r3, [sp, #12]
   1be3c:	ldr	r2, [r3]
   1be40:	ldr	r3, [pc, #708]	; 1c10c <argp_parse@@Base+0x297c>
   1be44:	ldr	r0, [r3]
   1be48:	ldr	r3, [fp, #20]
   1be4c:	str	r3, [sp]
   1be50:	ldr	r3, [sp, #96]	; 0x60
   1be54:	ldr	r1, [pc, #692]	; 1c110 <argp_parse@@Base+0x2980>
   1be58:	bl	1193c <fprintf@plt>
   1be5c:	ldr	r3, [sp, #36]	; 0x24
   1be60:	cmp	r3, #0
   1be64:	bne	1bf34 <argp_parse@@Base+0x27a4>
   1be68:	ldr	r4, [fp, #20]
   1be6c:	mov	r0, r4
   1be70:	bl	11918 <strlen@plt>
   1be74:	add	r0, r4, r0
   1be78:	str	r0, [fp, #20]
   1be7c:	ldr	r3, [fp]
   1be80:	add	r3, r3, #1
   1be84:	str	r3, [fp]
   1be88:	mov	r3, #0
   1be8c:	str	r3, [fp, #8]
   1be90:	mov	r0, #63	; 0x3f
   1be94:	b	1c08c <argp_parse@@Base+0x28fc>
   1be98:	ldr	r4, [pc, #620]	; 1c10c <argp_parse@@Base+0x297c>
   1be9c:	ldr	r0, [r4]
   1bea0:	bl	11a50 <flockfile@plt>
   1bea4:	ldr	r3, [sp, #12]
   1bea8:	ldr	r2, [r3]
   1beac:	ldr	r0, [r4]
   1beb0:	ldr	r3, [fp, #20]
   1beb4:	str	r3, [sp]
   1beb8:	ldr	r3, [sp, #96]	; 0x60
   1bebc:	ldr	r1, [pc, #592]	; 1c114 <argp_parse@@Base+0x2984>
   1bec0:	bl	1193c <fprintf@plt>
   1bec4:	cmp	r6, #0
   1bec8:	ble	1bf18 <argp_parse@@Base+0x2788>
   1becc:	ldr	r3, [sp, #16]
   1bed0:	mov	r4, r3
   1bed4:	add	r6, r3, r6
   1bed8:	ldr	r7, [pc, #568]	; 1c118 <argp_parse@@Base+0x2988>
   1bedc:	ldr	r5, [pc, #552]	; 1c10c <argp_parse@@Base+0x297c>
   1bee0:	ldr	r8, [sp, #8]
   1bee4:	b	1bef4 <argp_parse@@Base+0x2764>
   1bee8:	add	sl, sl, #1
   1beec:	cmp	r4, r6
   1bef0:	beq	1bf18 <argp_parse@@Base+0x2788>
   1bef4:	ldrb	r3, [r4], #1
   1bef8:	cmp	r3, #0
   1befc:	beq	1bee8 <argp_parse@@Base+0x2758>
   1bf00:	ldr	r3, [r8, sl, lsl #4]
   1bf04:	ldr	r2, [sp, #96]	; 0x60
   1bf08:	mov	r1, r7
   1bf0c:	ldr	r0, [r5]
   1bf10:	bl	1193c <fprintf@plt>
   1bf14:	b	1bee8 <argp_parse@@Base+0x2758>
   1bf18:	ldr	r4, [pc, #492]	; 1c10c <argp_parse@@Base+0x297c>
   1bf1c:	ldr	r1, [r4]
   1bf20:	mov	r0, #10
   1bf24:	bl	11a38 <fputc@plt>
   1bf28:	ldr	r0, [r4]
   1bf2c:	bl	11804 <funlockfile@plt>
   1bf30:	b	1be5c <argp_parse@@Base+0x26cc>
   1bf34:	ldr	r0, [sp, #16]
   1bf38:	bl	1a5dc <argp_parse@@Base+0xe4c>
   1bf3c:	b	1be68 <argp_parse@@Base+0x26d8>
   1bf40:	cmp	r9, #0
   1bf44:	beq	1bf98 <argp_parse@@Base+0x2808>
   1bf48:	ldr	r2, [fp]
   1bf4c:	add	r3, r2, #1
   1bf50:	str	r3, [fp]
   1bf54:	mov	r1, #0
   1bf58:	str	r1, [fp, #20]
   1bf5c:	ldrb	r1, [r8]
   1bf60:	cmp	r1, #0
   1bf64:	beq	1c058 <argp_parse@@Base+0x28c8>
   1bf68:	ldr	r3, [r9, #4]
   1bf6c:	cmp	r3, #0
   1bf70:	addne	r8, r8, #1
   1bf74:	strne	r8, [fp, #12]
   1bf78:	bne	1c064 <argp_parse@@Base+0x28d4>
   1bf7c:	ldr	r3, [sp, #92]	; 0x5c
   1bf80:	cmp	r3, #0
   1bf84:	bne	1c030 <argp_parse@@Base+0x28a0>
   1bf88:	ldr	r3, [r9, #12]
   1bf8c:	str	r3, [fp, #8]
   1bf90:	mov	r0, #63	; 0x3f
   1bf94:	b	1c08c <argp_parse@@Base+0x28fc>
   1bf98:	ldr	r3, [sp, #84]	; 0x54
   1bf9c:	cmp	r3, #0
   1bfa0:	bne	1bfd0 <argp_parse@@Base+0x2840>
   1bfa4:	ldr	r3, [sp, #92]	; 0x5c
   1bfa8:	cmp	r3, #0
   1bfac:	bne	1c008 <argp_parse@@Base+0x2878>
   1bfb0:	mov	r2, #0
   1bfb4:	str	r2, [fp, #20]
   1bfb8:	ldr	r3, [fp]
   1bfbc:	add	r3, r3, #1
   1bfc0:	str	r3, [fp]
   1bfc4:	str	r2, [fp, #8]
   1bfc8:	mov	r0, #63	; 0x3f
   1bfcc:	b	1c08c <argp_parse@@Base+0x28fc>
   1bfd0:	ldr	r3, [fp]
   1bfd4:	ldr	r2, [sp, #12]
   1bfd8:	ldr	r3, [r2, r3, lsl #2]
   1bfdc:	ldrb	r3, [r3, #1]
   1bfe0:	cmp	r3, #45	; 0x2d
   1bfe4:	beq	1bfa4 <argp_parse@@Base+0x2814>
   1bfe8:	ldr	r3, [fp, #20]
   1bfec:	ldrb	r1, [r3]
   1bff0:	ldr	r0, [sp, #24]
   1bff4:	bl	11930 <strchr@plt>
   1bff8:	cmp	r0, #0
   1bffc:	beq	1bfa4 <argp_parse@@Base+0x2814>
   1c000:	mvn	r0, #0
   1c004:	b	1c08c <argp_parse@@Base+0x28fc>
   1c008:	ldr	r3, [sp, #12]
   1c00c:	ldr	r2, [r3]
   1c010:	ldr	r3, [pc, #244]	; 1c10c <argp_parse@@Base+0x297c>
   1c014:	ldr	r0, [r3]
   1c018:	ldr	r3, [fp, #20]
   1c01c:	str	r3, [sp]
   1c020:	ldr	r3, [sp, #96]	; 0x60
   1c024:	ldr	r1, [pc, #240]	; 1c11c <argp_parse@@Base+0x298c>
   1c028:	bl	1193c <fprintf@plt>
   1c02c:	b	1bfb0 <argp_parse@@Base+0x2820>
   1c030:	ldr	r3, [sp, #12]
   1c034:	ldr	r2, [r3]
   1c038:	ldr	r3, [pc, #204]	; 1c10c <argp_parse@@Base+0x297c>
   1c03c:	ldr	r0, [r3]
   1c040:	ldr	r3, [r9]
   1c044:	str	r3, [sp]
   1c048:	ldr	r3, [sp, #96]	; 0x60
   1c04c:	ldr	r1, [pc, #204]	; 1c120 <argp_parse@@Base+0x2990>
   1c050:	bl	1193c <fprintf@plt>
   1c054:	b	1bf88 <argp_parse@@Base+0x27f8>
   1c058:	ldr	r1, [r9, #4]
   1c05c:	cmp	r1, #1
   1c060:	beq	1c094 <argp_parse@@Base+0x2904>
   1c064:	ldr	r3, [sp, #80]	; 0x50
   1c068:	cmp	r3, #0
   1c06c:	ldrne	r2, [sp, #28]
   1c070:	strne	r2, [r3]
   1c074:	ldr	r3, [r9, #8]
   1c078:	cmp	r3, #0
   1c07c:	ldrne	r2, [r9, #12]
   1c080:	strne	r2, [r3]
   1c084:	movne	r0, #0
   1c088:	ldreq	r0, [r9, #12]
   1c08c:	add	sp, sp, #44	; 0x2c
   1c090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c094:	ldr	r1, [sp, #20]
   1c098:	cmp	r3, r1
   1c09c:	bge	1c0b8 <argp_parse@@Base+0x2928>
   1c0a0:	add	r2, r2, #2
   1c0a4:	str	r2, [fp]
   1c0a8:	ldr	r2, [sp, #12]
   1c0ac:	ldr	r3, [r2, r3, lsl #2]
   1c0b0:	str	r3, [fp, #12]
   1c0b4:	b	1c064 <argp_parse@@Base+0x28d4>
   1c0b8:	ldr	r3, [sp, #92]	; 0x5c
   1c0bc:	cmp	r3, #0
   1c0c0:	bne	1c0e4 <argp_parse@@Base+0x2954>
   1c0c4:	ldr	r3, [r9, #12]
   1c0c8:	str	r3, [fp, #8]
   1c0cc:	ldr	r3, [sp, #24]
   1c0d0:	ldrb	r0, [r3]
   1c0d4:	cmp	r0, #58	; 0x3a
   1c0d8:	moveq	r0, #58	; 0x3a
   1c0dc:	movne	r0, #63	; 0x3f
   1c0e0:	b	1c08c <argp_parse@@Base+0x28fc>
   1c0e4:	ldr	r3, [sp, #12]
   1c0e8:	ldr	r2, [r3]
   1c0ec:	ldr	r3, [pc, #24]	; 1c10c <argp_parse@@Base+0x297c>
   1c0f0:	ldr	r0, [r3]
   1c0f4:	ldr	r3, [r9]
   1c0f8:	str	r3, [sp]
   1c0fc:	ldr	r3, [sp, #96]	; 0x60
   1c100:	ldr	r1, [pc, #28]	; 1c124 <argp_parse@@Base+0x2994>
   1c104:	bl	1193c <fprintf@plt>
   1c108:	b	1c0c4 <argp_parse@@Base+0x2934>
   1c10c:	andeq	pc, r2, r8, asr #11
   1c110:			; <UNDEFINED> instruction: 0x0001e6bc
   1c114:	ldrdeq	lr, [r1], -ip
   1c118:	andeq	lr, r1, ip, lsl #14
   1c11c:	andeq	lr, r1, r4, lsl r7
   1c120:	andeq	lr, r1, r4, lsr r7
   1c124:	andeq	lr, r1, r4, ror #14
   1c128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c12c:	sub	sp, sp, #36	; 0x24
   1c130:	str	r3, [sp, #24]
   1c134:	ldr	r4, [sp, #80]	; 0x50
   1c138:	ldr	r8, [r4, #4]
   1c13c:	subs	r5, r0, #0
   1c140:	ble	1c648 <argp_parse@@Base+0x2eb8>
   1c144:	mov	r9, r1
   1c148:	mov	r6, r2
   1c14c:	mov	r3, #0
   1c150:	str	r3, [r4, #12]
   1c154:	ldr	r3, [r4]
   1c158:	cmp	r3, #0
   1c15c:	beq	1c180 <argp_parse@@Base+0x29f0>
   1c160:	ldr	r3, [r4, #16]
   1c164:	cmp	r3, #0
   1c168:	beq	1c188 <argp_parse@@Base+0x29f8>
   1c16c:	ldrb	r3, [r2]
   1c170:	sub	r3, r3, #43	; 0x2b
   1c174:	tst	r3, #253	; 0xfd
   1c178:	addeq	r6, r2, #1
   1c17c:	b	1c1e4 <argp_parse@@Base+0x2a54>
   1c180:	mov	r3, #1
   1c184:	str	r3, [r4]
   1c188:	ldr	r3, [r4]
   1c18c:	str	r3, [r4, #32]
   1c190:	str	r3, [r4, #28]
   1c194:	mov	r3, #0
   1c198:	str	r3, [r4, #20]
   1c19c:	ldrb	r3, [r6]
   1c1a0:	cmp	r3, #45	; 0x2d
   1c1a4:	moveq	r3, #2
   1c1a8:	streq	r3, [r4, #24]
   1c1ac:	addeq	r6, r6, #1
   1c1b0:	beq	1c1dc <argp_parse@@Base+0x2a4c>
   1c1b4:	cmp	r3, #43	; 0x2b
   1c1b8:	moveq	r3, #0
   1c1bc:	streq	r3, [r4, #24]
   1c1c0:	addeq	r6, r6, #1
   1c1c4:	beq	1c1dc <argp_parse@@Base+0x2a4c>
   1c1c8:	ldr	r3, [sp, #84]	; 0x54
   1c1cc:	cmp	r3, #0
   1c1d0:	beq	1c280 <argp_parse@@Base+0x2af0>
   1c1d4:	mov	r3, #0
   1c1d8:	str	r3, [r4, #24]
   1c1dc:	mov	r3, #1
   1c1e0:	str	r3, [r4, #16]
   1c1e4:	ldrb	r3, [r6]
   1c1e8:	cmp	r3, #58	; 0x3a
   1c1ec:	moveq	r8, #0
   1c1f0:	ldr	r3, [r4, #20]
   1c1f4:	cmp	r3, #0
   1c1f8:	beq	1c208 <argp_parse@@Base+0x2a78>
   1c1fc:	ldrb	r3, [r3]
   1c200:	cmp	r3, #0
   1c204:	bne	1c394 <argp_parse@@Base+0x2c04>
   1c208:	ldr	r3, [r4]
   1c20c:	ldr	r2, [r4, #32]
   1c210:	cmp	r2, r3
   1c214:	strgt	r3, [r4, #32]
   1c218:	ldr	r2, [r4, #28]
   1c21c:	cmp	r3, r2
   1c220:	strlt	r3, [r4, #28]
   1c224:	ldr	r2, [r4, #24]
   1c228:	cmp	r2, #1
   1c22c:	beq	1c29c <argp_parse@@Base+0x2b0c>
   1c230:	ldr	r7, [r4]
   1c234:	cmp	r5, r7
   1c238:	beq	1c320 <argp_parse@@Base+0x2b90>
   1c23c:	ldr	sl, [r9, r7, lsl #2]
   1c240:	ldr	r1, [pc, #1088]	; 1c688 <argp_parse@@Base+0x2ef8>
   1c244:	mov	r0, sl
   1c248:	bl	11684 <strcmp@plt>
   1c24c:	cmp	r0, #0
   1c250:	bne	1c658 <argp_parse@@Base+0x2ec8>
   1c254:	add	r7, r7, #1
   1c258:	str	r7, [r4]
   1c25c:	ldr	r2, [r4, #28]
   1c260:	ldr	r3, [r4, #32]
   1c264:	cmp	r7, r3
   1c268:	cmpne	r2, r3
   1c26c:	beq	1c310 <argp_parse@@Base+0x2b80>
   1c270:	mov	r1, r4
   1c274:	mov	r0, r9
   1c278:	bl	1bb6c <argp_parse@@Base+0x23dc>
   1c27c:	b	1c318 <argp_parse@@Base+0x2b88>
   1c280:	ldr	r0, [pc, #1028]	; 1c68c <argp_parse@@Base+0x2efc>
   1c284:	bl	11888 <getenv@plt>
   1c288:	cmp	r0, #0
   1c28c:	bne	1c1d4 <argp_parse@@Base+0x2a44>
   1c290:	mov	r3, #1
   1c294:	str	r3, [r4, #24]
   1c298:	b	1c1dc <argp_parse@@Base+0x2a4c>
   1c29c:	ldr	r2, [r4, #32]
   1c2a0:	ldr	r1, [r4, #28]
   1c2a4:	cmp	r1, r2
   1c2a8:	cmpne	r3, r2
   1c2ac:	beq	1c2c0 <argp_parse@@Base+0x2b30>
   1c2b0:	mov	r1, r4
   1c2b4:	mov	r0, r9
   1c2b8:	bl	1bb6c <argp_parse@@Base+0x23dc>
   1c2bc:	b	1c2c8 <argp_parse@@Base+0x2b38>
   1c2c0:	cmp	r3, r2
   1c2c4:	strne	r3, [r4, #28]
   1c2c8:	ldr	r3, [r4]
   1c2cc:	cmp	r5, r3
   1c2d0:	ble	1c308 <argp_parse@@Base+0x2b78>
   1c2d4:	add	r1, r9, r3, lsl #2
   1c2d8:	b	1c2ec <argp_parse@@Base+0x2b5c>
   1c2dc:	add	r3, r3, #1
   1c2e0:	str	r3, [r4]
   1c2e4:	cmp	r5, r3
   1c2e8:	beq	1c308 <argp_parse@@Base+0x2b78>
   1c2ec:	ldr	r2, [r1], #4
   1c2f0:	ldrb	r0, [r2]
   1c2f4:	cmp	r0, #45	; 0x2d
   1c2f8:	bne	1c2dc <argp_parse@@Base+0x2b4c>
   1c2fc:	ldrb	r2, [r2, #1]
   1c300:	cmp	r2, #0
   1c304:	beq	1c2dc <argp_parse@@Base+0x2b4c>
   1c308:	str	r3, [r4, #32]
   1c30c:	b	1c230 <argp_parse@@Base+0x2aa0>
   1c310:	cmp	r2, r3
   1c314:	streq	r7, [r4, #28]
   1c318:	str	r5, [r4, #32]
   1c31c:	str	r5, [r4]
   1c320:	ldr	r3, [r4, #28]
   1c324:	ldr	r2, [r4, #32]
   1c328:	cmp	r3, r2
   1c32c:	mvneq	r0, #0
   1c330:	strne	r3, [r4]
   1c334:	mvnne	r0, #0
   1c338:	b	1c498 <argp_parse@@Base+0x2d08>
   1c33c:	ldrb	r1, [sl, #1]
   1c340:	cmp	r1, #0
   1c344:	beq	1c664 <argp_parse@@Base+0x2ed4>
   1c348:	ldr	r3, [sp, #24]
   1c34c:	cmp	r3, #0
   1c350:	beq	1c384 <argp_parse@@Base+0x2bf4>
   1c354:	cmp	r1, #45	; 0x2d
   1c358:	beq	1c3fc <argp_parse@@Base+0x2c6c>
   1c35c:	ldr	r3, [sp, #76]	; 0x4c
   1c360:	cmp	r3, #0
   1c364:	beq	1c384 <argp_parse@@Base+0x2bf4>
   1c368:	ldrb	r3, [sl, #2]
   1c36c:	cmp	r3, #0
   1c370:	bne	1c43c <argp_parse@@Base+0x2cac>
   1c374:	mov	r0, r6
   1c378:	bl	11930 <strchr@plt>
   1c37c:	cmp	r0, #0
   1c380:	beq	1c43c <argp_parse@@Base+0x2cac>
   1c384:	ldr	r3, [r4]
   1c388:	ldr	r3, [r9, r3, lsl #2]
   1c38c:	add	r3, r3, #1
   1c390:	str	r3, [r4, #20]
   1c394:	ldr	sl, [r4, #20]
   1c398:	add	fp, sl, #1
   1c39c:	str	fp, [r4, #20]
   1c3a0:	ldrb	r7, [sl]
   1c3a4:	str	r7, [sp, #28]
   1c3a8:	mov	r1, r7
   1c3ac:	mov	r0, r6
   1c3b0:	bl	11930 <strchr@plt>
   1c3b4:	ldrb	r3, [sl, #1]
   1c3b8:	cmp	r3, #0
   1c3bc:	ldreq	r3, [r4]
   1c3c0:	addeq	r3, r3, #1
   1c3c4:	streq	r3, [r4]
   1c3c8:	sub	r3, r7, #58	; 0x3a
   1c3cc:	uxtb	r3, r3
   1c3d0:	cmp	r0, #0
   1c3d4:	cmpne	r3, #1
   1c3d8:	bls	1c484 <argp_parse@@Base+0x2cf4>
   1c3dc:	ldrb	r3, [r0]
   1c3e0:	cmp	r3, #87	; 0x57
   1c3e4:	beq	1c4bc <argp_parse@@Base+0x2d2c>
   1c3e8:	ldrb	r3, [r0, #1]
   1c3ec:	cmp	r3, #58	; 0x3a
   1c3f0:	beq	1c588 <argp_parse@@Base+0x2df8>
   1c3f4:	mov	r0, r7
   1c3f8:	b	1c498 <argp_parse@@Base+0x2d08>
   1c3fc:	add	sl, sl, #2
   1c400:	str	sl, [r4, #20]
   1c404:	ldr	r3, [pc, #636]	; 1c688 <argp_parse@@Base+0x2ef8>
   1c408:	str	r3, [sp, #16]
   1c40c:	str	r8, [sp, #12]
   1c410:	str	r4, [sp, #8]
   1c414:	ldr	r3, [sp, #76]	; 0x4c
   1c418:	str	r3, [sp, #4]
   1c41c:	ldr	r3, [sp, #72]	; 0x48
   1c420:	str	r3, [sp]
   1c424:	ldr	r3, [sp, #24]
   1c428:	mov	r2, r6
   1c42c:	mov	r1, r9
   1c430:	mov	r0, r5
   1c434:	bl	1bc3c <argp_parse@@Base+0x24ac>
   1c438:	b	1c498 <argp_parse@@Base+0x2d08>
   1c43c:	add	sl, sl, #1
   1c440:	str	sl, [r4, #20]
   1c444:	ldr	r3, [pc, #580]	; 1c690 <argp_parse@@Base+0x2f00>
   1c448:	str	r3, [sp, #16]
   1c44c:	str	r8, [sp, #12]
   1c450:	str	r4, [sp, #8]
   1c454:	ldr	r3, [sp, #76]	; 0x4c
   1c458:	str	r3, [sp, #4]
   1c45c:	ldr	r3, [sp, #72]	; 0x48
   1c460:	str	r3, [sp]
   1c464:	ldr	r3, [sp, #24]
   1c468:	mov	r2, r6
   1c46c:	mov	r1, r9
   1c470:	mov	r0, r5
   1c474:	bl	1bc3c <argp_parse@@Base+0x24ac>
   1c478:	cmn	r0, #1
   1c47c:	bne	1c498 <argp_parse@@Base+0x2d08>
   1c480:	b	1c384 <argp_parse@@Base+0x2bf4>
   1c484:	cmp	r8, #0
   1c488:	bne	1c4a0 <argp_parse@@Base+0x2d10>
   1c48c:	ldr	r3, [sp, #28]
   1c490:	str	r3, [r4, #8]
   1c494:	mov	r0, #63	; 0x3f
   1c498:	add	sp, sp, #36	; 0x24
   1c49c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c4a0:	ldr	r3, [sp, #28]
   1c4a4:	ldr	r2, [r9]
   1c4a8:	ldr	r1, [pc, #484]	; 1c694 <argp_parse@@Base+0x2f04>
   1c4ac:	ldr	r0, [pc, #484]	; 1c698 <argp_parse@@Base+0x2f08>
   1c4b0:	ldr	r0, [r0]
   1c4b4:	bl	1193c <fprintf@plt>
   1c4b8:	b	1c48c <argp_parse@@Base+0x2cfc>
   1c4bc:	ldrb	r3, [r0, #1]
   1c4c0:	ldr	r2, [sp, #24]
   1c4c4:	cmp	r3, #59	; 0x3b
   1c4c8:	movne	r3, #0
   1c4cc:	moveq	r3, #1
   1c4d0:	cmp	r2, #0
   1c4d4:	moveq	r3, #0
   1c4d8:	cmp	r3, #0
   1c4dc:	beq	1c3e8 <argp_parse@@Base+0x2c58>
   1c4e0:	ldrb	r3, [sl, #1]
   1c4e4:	cmp	r3, #0
   1c4e8:	strne	fp, [r4, #12]
   1c4ec:	bne	1c504 <argp_parse@@Base+0x2d74>
   1c4f0:	ldr	r3, [r4]
   1c4f4:	cmp	r5, r3
   1c4f8:	beq	1c548 <argp_parse@@Base+0x2db8>
   1c4fc:	ldr	r3, [r9, r3, lsl #2]
   1c500:	str	r3, [r4, #12]
   1c504:	ldr	r3, [r4, #12]
   1c508:	str	r3, [r4, #20]
   1c50c:	mov	r3, #0
   1c510:	str	r3, [r4, #12]
   1c514:	ldr	r2, [pc, #384]	; 1c69c <argp_parse@@Base+0x2f0c>
   1c518:	str	r2, [sp, #16]
   1c51c:	str	r8, [sp, #12]
   1c520:	str	r4, [sp, #8]
   1c524:	str	r3, [sp, #4]
   1c528:	ldr	r3, [sp, #72]	; 0x48
   1c52c:	str	r3, [sp]
   1c530:	ldr	r3, [sp, #24]
   1c534:	mov	r2, r6
   1c538:	mov	r1, r9
   1c53c:	mov	r0, r5
   1c540:	bl	1bc3c <argp_parse@@Base+0x24ac>
   1c544:	b	1c498 <argp_parse@@Base+0x2d08>
   1c548:	cmp	r8, #0
   1c54c:	bne	1c56c <argp_parse@@Base+0x2ddc>
   1c550:	ldr	r3, [sp, #28]
   1c554:	str	r3, [r4, #8]
   1c558:	ldrb	r0, [r6]
   1c55c:	cmp	r0, #58	; 0x3a
   1c560:	moveq	r0, #58	; 0x3a
   1c564:	movne	r0, #63	; 0x3f
   1c568:	b	1c498 <argp_parse@@Base+0x2d08>
   1c56c:	ldr	r3, [sp, #28]
   1c570:	ldr	r2, [r9]
   1c574:	ldr	r1, [pc, #292]	; 1c6a0 <argp_parse@@Base+0x2f10>
   1c578:	ldr	r0, [pc, #280]	; 1c698 <argp_parse@@Base+0x2f08>
   1c57c:	ldr	r0, [r0]
   1c580:	bl	1193c <fprintf@plt>
   1c584:	b	1c550 <argp_parse@@Base+0x2dc0>
   1c588:	ldrb	r3, [r0, #2]
   1c58c:	cmp	r3, #58	; 0x3a
   1c590:	beq	1c5bc <argp_parse@@Base+0x2e2c>
   1c594:	ldrb	r3, [sl, #1]
   1c598:	cmp	r3, #0
   1c59c:	beq	1c5e8 <argp_parse@@Base+0x2e58>
   1c5a0:	str	fp, [r4, #12]
   1c5a4:	ldr	r3, [r4]
   1c5a8:	add	r3, r3, #1
   1c5ac:	str	r3, [r4]
   1c5b0:	mov	r3, #0
   1c5b4:	str	r3, [r4, #20]
   1c5b8:	b	1c3f4 <argp_parse@@Base+0x2c64>
   1c5bc:	ldrb	r3, [sl, #1]
   1c5c0:	cmp	r3, #0
   1c5c4:	strne	fp, [r4, #12]
   1c5c8:	ldrne	r3, [r4]
   1c5cc:	addne	r3, r3, #1
   1c5d0:	strne	r3, [r4]
   1c5d4:	moveq	r3, #0
   1c5d8:	streq	r3, [r4, #12]
   1c5dc:	mov	r3, #0
   1c5e0:	str	r3, [r4, #20]
   1c5e4:	b	1c3f4 <argp_parse@@Base+0x2c64>
   1c5e8:	ldr	r3, [r4]
   1c5ec:	cmp	r5, r3
   1c5f0:	beq	1c608 <argp_parse@@Base+0x2e78>
   1c5f4:	add	r2, r3, #1
   1c5f8:	str	r2, [r4]
   1c5fc:	ldr	r3, [r9, r3, lsl #2]
   1c600:	str	r3, [r4, #12]
   1c604:	b	1c5b0 <argp_parse@@Base+0x2e20>
   1c608:	cmp	r8, #0
   1c60c:	bne	1c62c <argp_parse@@Base+0x2e9c>
   1c610:	ldr	r3, [sp, #28]
   1c614:	str	r3, [r4, #8]
   1c618:	ldrb	r7, [r6]
   1c61c:	cmp	r7, #58	; 0x3a
   1c620:	moveq	r7, #58	; 0x3a
   1c624:	movne	r7, #63	; 0x3f
   1c628:	b	1c5b0 <argp_parse@@Base+0x2e20>
   1c62c:	ldr	r3, [sp, #28]
   1c630:	ldr	r2, [r9]
   1c634:	ldr	r1, [pc, #100]	; 1c6a0 <argp_parse@@Base+0x2f10>
   1c638:	ldr	r0, [pc, #88]	; 1c698 <argp_parse@@Base+0x2f08>
   1c63c:	ldr	r0, [r0]
   1c640:	bl	1193c <fprintf@plt>
   1c644:	b	1c610 <argp_parse@@Base+0x2e80>
   1c648:	mvn	r0, #0
   1c64c:	b	1c498 <argp_parse@@Base+0x2d08>
   1c650:	mvn	r0, #0
   1c654:	b	1c498 <argp_parse@@Base+0x2d08>
   1c658:	ldrb	r3, [sl]
   1c65c:	cmp	r3, #45	; 0x2d
   1c660:	beq	1c33c <argp_parse@@Base+0x2bac>
   1c664:	ldr	r3, [r4, #24]
   1c668:	cmp	r3, #0
   1c66c:	beq	1c650 <argp_parse@@Base+0x2ec0>
   1c670:	add	r3, r7, #1
   1c674:	str	r3, [r4]
   1c678:	ldr	r3, [r9, r7, lsl #2]
   1c67c:	str	r3, [r4, #12]
   1c680:	mov	r0, #1
   1c684:	b	1c498 <argp_parse@@Base+0x2d08>
   1c688:	andeq	sp, r1, r8, asr r0
   1c68c:	andeq	lr, r1, ip, lsl #15
   1c690:	muleq	r1, ip, r7
   1c694:	andeq	lr, r1, r0, lsr #15
   1c698:	andeq	pc, r2, r8, asr #11
   1c69c:	andeq	lr, r1, r8, ror #15
   1c6a0:			; <UNDEFINED> instruction: 0x0001e7bc
   1c6a4:	push	{r4, r5, lr}
   1c6a8:	sub	sp, sp, #20
   1c6ac:	ldr	r4, [pc, #84]	; 1c708 <argp_parse@@Base+0x2f78>
   1c6b0:	ldr	r5, [pc, #84]	; 1c70c <argp_parse@@Base+0x2f7c>
   1c6b4:	ldr	ip, [r5]
   1c6b8:	str	ip, [r4]
   1c6bc:	ldr	ip, [r5, #4]
   1c6c0:	str	ip, [r4, #4]
   1c6c4:	ldr	ip, [sp, #40]	; 0x28
   1c6c8:	str	ip, [sp, #12]
   1c6cc:	str	r4, [sp, #8]
   1c6d0:	ldr	ip, [sp, #36]	; 0x24
   1c6d4:	str	ip, [sp, #4]
   1c6d8:	ldr	ip, [sp, #32]
   1c6dc:	str	ip, [sp]
   1c6e0:	bl	1c128 <argp_parse@@Base+0x2998>
   1c6e4:	ldr	r3, [r4]
   1c6e8:	str	r3, [r5]
   1c6ec:	ldr	r2, [r4, #12]
   1c6f0:	ldr	r3, [pc, #24]	; 1c710 <argp_parse@@Base+0x2f80>
   1c6f4:	str	r2, [r3]
   1c6f8:	ldr	r3, [r4, #8]
   1c6fc:	str	r3, [r5, #8]
   1c700:	add	sp, sp, #20
   1c704:	pop	{r4, r5, pc}
   1c708:	andeq	pc, r2, r0, lsr #20
   1c70c:			; <UNDEFINED> instruction: 0x0002f5b0
   1c710:	muleq	r3, ip, r0
   1c714:	push	{lr}		; (str lr, [sp, #-4]!)
   1c718:	sub	sp, sp, #20
   1c71c:	mov	r3, #1
   1c720:	str	r3, [sp, #8]
   1c724:	mov	r3, #0
   1c728:	str	r3, [sp, #4]
   1c72c:	str	r3, [sp]
   1c730:	bl	1c6a4 <argp_parse@@Base+0x2f14>
   1c734:	add	sp, sp, #20
   1c738:	pop	{pc}		; (ldr pc, [sp], #4)
   1c73c:	push	{r4, r5, r6, lr}
   1c740:	mov	r6, r0
   1c744:	mov	r5, r1
   1c748:	subs	r4, r2, #0
   1c74c:	beq	1c778 <argp_parse@@Base+0x2fe8>
   1c750:	mov	r1, r4
   1c754:	mvn	r0, #0
   1c758:	bl	1c788 <argp_parse@@Base+0x2ff8>
   1c75c:	cmp	r0, r5
   1c760:	bcs	1c778 <argp_parse@@Base+0x2fe8>
   1c764:	bl	11948 <__errno_location@plt>
   1c768:	mov	r3, #12
   1c76c:	str	r3, [r0]
   1c770:	mov	r0, #0
   1c774:	pop	{r4, r5, r6, pc}
   1c778:	mul	r1, r5, r4
   1c77c:	mov	r0, r6
   1c780:	bl	1b390 <argp_parse@@Base+0x1c00>
   1c784:	pop	{r4, r5, r6, pc}
   1c788:	subs	r2, r1, #1
   1c78c:	bxeq	lr
   1c790:	bcc	1c968 <argp_parse@@Base+0x31d8>
   1c794:	cmp	r0, r1
   1c798:	bls	1c94c <argp_parse@@Base+0x31bc>
   1c79c:	tst	r1, r2
   1c7a0:	beq	1c958 <argp_parse@@Base+0x31c8>
   1c7a4:	clz	r3, r0
   1c7a8:	clz	r2, r1
   1c7ac:	sub	r3, r2, r3
   1c7b0:	rsbs	r3, r3, #31
   1c7b4:	addne	r3, r3, r3, lsl #1
   1c7b8:	mov	r2, #0
   1c7bc:	addne	pc, pc, r3, lsl #2
   1c7c0:	nop			; (mov r0, r0)
   1c7c4:	cmp	r0, r1, lsl #31
   1c7c8:	adc	r2, r2, r2
   1c7cc:	subcs	r0, r0, r1, lsl #31
   1c7d0:	cmp	r0, r1, lsl #30
   1c7d4:	adc	r2, r2, r2
   1c7d8:	subcs	r0, r0, r1, lsl #30
   1c7dc:	cmp	r0, r1, lsl #29
   1c7e0:	adc	r2, r2, r2
   1c7e4:	subcs	r0, r0, r1, lsl #29
   1c7e8:	cmp	r0, r1, lsl #28
   1c7ec:	adc	r2, r2, r2
   1c7f0:	subcs	r0, r0, r1, lsl #28
   1c7f4:	cmp	r0, r1, lsl #27
   1c7f8:	adc	r2, r2, r2
   1c7fc:	subcs	r0, r0, r1, lsl #27
   1c800:	cmp	r0, r1, lsl #26
   1c804:	adc	r2, r2, r2
   1c808:	subcs	r0, r0, r1, lsl #26
   1c80c:	cmp	r0, r1, lsl #25
   1c810:	adc	r2, r2, r2
   1c814:	subcs	r0, r0, r1, lsl #25
   1c818:	cmp	r0, r1, lsl #24
   1c81c:	adc	r2, r2, r2
   1c820:	subcs	r0, r0, r1, lsl #24
   1c824:	cmp	r0, r1, lsl #23
   1c828:	adc	r2, r2, r2
   1c82c:	subcs	r0, r0, r1, lsl #23
   1c830:	cmp	r0, r1, lsl #22
   1c834:	adc	r2, r2, r2
   1c838:	subcs	r0, r0, r1, lsl #22
   1c83c:	cmp	r0, r1, lsl #21
   1c840:	adc	r2, r2, r2
   1c844:	subcs	r0, r0, r1, lsl #21
   1c848:	cmp	r0, r1, lsl #20
   1c84c:	adc	r2, r2, r2
   1c850:	subcs	r0, r0, r1, lsl #20
   1c854:	cmp	r0, r1, lsl #19
   1c858:	adc	r2, r2, r2
   1c85c:	subcs	r0, r0, r1, lsl #19
   1c860:	cmp	r0, r1, lsl #18
   1c864:	adc	r2, r2, r2
   1c868:	subcs	r0, r0, r1, lsl #18
   1c86c:	cmp	r0, r1, lsl #17
   1c870:	adc	r2, r2, r2
   1c874:	subcs	r0, r0, r1, lsl #17
   1c878:	cmp	r0, r1, lsl #16
   1c87c:	adc	r2, r2, r2
   1c880:	subcs	r0, r0, r1, lsl #16
   1c884:	cmp	r0, r1, lsl #15
   1c888:	adc	r2, r2, r2
   1c88c:	subcs	r0, r0, r1, lsl #15
   1c890:	cmp	r0, r1, lsl #14
   1c894:	adc	r2, r2, r2
   1c898:	subcs	r0, r0, r1, lsl #14
   1c89c:	cmp	r0, r1, lsl #13
   1c8a0:	adc	r2, r2, r2
   1c8a4:	subcs	r0, r0, r1, lsl #13
   1c8a8:	cmp	r0, r1, lsl #12
   1c8ac:	adc	r2, r2, r2
   1c8b0:	subcs	r0, r0, r1, lsl #12
   1c8b4:	cmp	r0, r1, lsl #11
   1c8b8:	adc	r2, r2, r2
   1c8bc:	subcs	r0, r0, r1, lsl #11
   1c8c0:	cmp	r0, r1, lsl #10
   1c8c4:	adc	r2, r2, r2
   1c8c8:	subcs	r0, r0, r1, lsl #10
   1c8cc:	cmp	r0, r1, lsl #9
   1c8d0:	adc	r2, r2, r2
   1c8d4:	subcs	r0, r0, r1, lsl #9
   1c8d8:	cmp	r0, r1, lsl #8
   1c8dc:	adc	r2, r2, r2
   1c8e0:	subcs	r0, r0, r1, lsl #8
   1c8e4:	cmp	r0, r1, lsl #7
   1c8e8:	adc	r2, r2, r2
   1c8ec:	subcs	r0, r0, r1, lsl #7
   1c8f0:	cmp	r0, r1, lsl #6
   1c8f4:	adc	r2, r2, r2
   1c8f8:	subcs	r0, r0, r1, lsl #6
   1c8fc:	cmp	r0, r1, lsl #5
   1c900:	adc	r2, r2, r2
   1c904:	subcs	r0, r0, r1, lsl #5
   1c908:	cmp	r0, r1, lsl #4
   1c90c:	adc	r2, r2, r2
   1c910:	subcs	r0, r0, r1, lsl #4
   1c914:	cmp	r0, r1, lsl #3
   1c918:	adc	r2, r2, r2
   1c91c:	subcs	r0, r0, r1, lsl #3
   1c920:	cmp	r0, r1, lsl #2
   1c924:	adc	r2, r2, r2
   1c928:	subcs	r0, r0, r1, lsl #2
   1c92c:	cmp	r0, r1, lsl #1
   1c930:	adc	r2, r2, r2
   1c934:	subcs	r0, r0, r1, lsl #1
   1c938:	cmp	r0, r1
   1c93c:	adc	r2, r2, r2
   1c940:	subcs	r0, r0, r1
   1c944:	mov	r0, r2
   1c948:	bx	lr
   1c94c:	moveq	r0, #1
   1c950:	movne	r0, #0
   1c954:	bx	lr
   1c958:	clz	r2, r1
   1c95c:	rsb	r2, r2, #31
   1c960:	lsr	r0, r0, r2
   1c964:	bx	lr
   1c968:	cmp	r0, #0
   1c96c:	mvnne	r0, #0
   1c970:	b	1cbd4 <argp_parse@@Base+0x3444>
   1c974:	cmp	r1, #0
   1c978:	beq	1c968 <argp_parse@@Base+0x31d8>
   1c97c:	push	{r0, r1, lr}
   1c980:	bl	1c788 <argp_parse@@Base+0x2ff8>
   1c984:	pop	{r1, r2, lr}
   1c988:	mul	r3, r2, r0
   1c98c:	sub	r1, r1, r3
   1c990:	bx	lr
   1c994:	cmp	r1, #0
   1c998:	beq	1cba4 <argp_parse@@Base+0x3414>
   1c99c:	eor	ip, r0, r1
   1c9a0:	rsbmi	r1, r1, #0
   1c9a4:	subs	r2, r1, #1
   1c9a8:	beq	1cb70 <argp_parse@@Base+0x33e0>
   1c9ac:	movs	r3, r0
   1c9b0:	rsbmi	r3, r0, #0
   1c9b4:	cmp	r3, r1
   1c9b8:	bls	1cb7c <argp_parse@@Base+0x33ec>
   1c9bc:	tst	r1, r2
   1c9c0:	beq	1cb8c <argp_parse@@Base+0x33fc>
   1c9c4:	clz	r2, r3
   1c9c8:	clz	r0, r1
   1c9cc:	sub	r2, r0, r2
   1c9d0:	rsbs	r2, r2, #31
   1c9d4:	addne	r2, r2, r2, lsl #1
   1c9d8:	mov	r0, #0
   1c9dc:	addne	pc, pc, r2, lsl #2
   1c9e0:	nop			; (mov r0, r0)
   1c9e4:	cmp	r3, r1, lsl #31
   1c9e8:	adc	r0, r0, r0
   1c9ec:	subcs	r3, r3, r1, lsl #31
   1c9f0:	cmp	r3, r1, lsl #30
   1c9f4:	adc	r0, r0, r0
   1c9f8:	subcs	r3, r3, r1, lsl #30
   1c9fc:	cmp	r3, r1, lsl #29
   1ca00:	adc	r0, r0, r0
   1ca04:	subcs	r3, r3, r1, lsl #29
   1ca08:	cmp	r3, r1, lsl #28
   1ca0c:	adc	r0, r0, r0
   1ca10:	subcs	r3, r3, r1, lsl #28
   1ca14:	cmp	r3, r1, lsl #27
   1ca18:	adc	r0, r0, r0
   1ca1c:	subcs	r3, r3, r1, lsl #27
   1ca20:	cmp	r3, r1, lsl #26
   1ca24:	adc	r0, r0, r0
   1ca28:	subcs	r3, r3, r1, lsl #26
   1ca2c:	cmp	r3, r1, lsl #25
   1ca30:	adc	r0, r0, r0
   1ca34:	subcs	r3, r3, r1, lsl #25
   1ca38:	cmp	r3, r1, lsl #24
   1ca3c:	adc	r0, r0, r0
   1ca40:	subcs	r3, r3, r1, lsl #24
   1ca44:	cmp	r3, r1, lsl #23
   1ca48:	adc	r0, r0, r0
   1ca4c:	subcs	r3, r3, r1, lsl #23
   1ca50:	cmp	r3, r1, lsl #22
   1ca54:	adc	r0, r0, r0
   1ca58:	subcs	r3, r3, r1, lsl #22
   1ca5c:	cmp	r3, r1, lsl #21
   1ca60:	adc	r0, r0, r0
   1ca64:	subcs	r3, r3, r1, lsl #21
   1ca68:	cmp	r3, r1, lsl #20
   1ca6c:	adc	r0, r0, r0
   1ca70:	subcs	r3, r3, r1, lsl #20
   1ca74:	cmp	r3, r1, lsl #19
   1ca78:	adc	r0, r0, r0
   1ca7c:	subcs	r3, r3, r1, lsl #19
   1ca80:	cmp	r3, r1, lsl #18
   1ca84:	adc	r0, r0, r0
   1ca88:	subcs	r3, r3, r1, lsl #18
   1ca8c:	cmp	r3, r1, lsl #17
   1ca90:	adc	r0, r0, r0
   1ca94:	subcs	r3, r3, r1, lsl #17
   1ca98:	cmp	r3, r1, lsl #16
   1ca9c:	adc	r0, r0, r0
   1caa0:	subcs	r3, r3, r1, lsl #16
   1caa4:	cmp	r3, r1, lsl #15
   1caa8:	adc	r0, r0, r0
   1caac:	subcs	r3, r3, r1, lsl #15
   1cab0:	cmp	r3, r1, lsl #14
   1cab4:	adc	r0, r0, r0
   1cab8:	subcs	r3, r3, r1, lsl #14
   1cabc:	cmp	r3, r1, lsl #13
   1cac0:	adc	r0, r0, r0
   1cac4:	subcs	r3, r3, r1, lsl #13
   1cac8:	cmp	r3, r1, lsl #12
   1cacc:	adc	r0, r0, r0
   1cad0:	subcs	r3, r3, r1, lsl #12
   1cad4:	cmp	r3, r1, lsl #11
   1cad8:	adc	r0, r0, r0
   1cadc:	subcs	r3, r3, r1, lsl #11
   1cae0:	cmp	r3, r1, lsl #10
   1cae4:	adc	r0, r0, r0
   1cae8:	subcs	r3, r3, r1, lsl #10
   1caec:	cmp	r3, r1, lsl #9
   1caf0:	adc	r0, r0, r0
   1caf4:	subcs	r3, r3, r1, lsl #9
   1caf8:	cmp	r3, r1, lsl #8
   1cafc:	adc	r0, r0, r0
   1cb00:	subcs	r3, r3, r1, lsl #8
   1cb04:	cmp	r3, r1, lsl #7
   1cb08:	adc	r0, r0, r0
   1cb0c:	subcs	r3, r3, r1, lsl #7
   1cb10:	cmp	r3, r1, lsl #6
   1cb14:	adc	r0, r0, r0
   1cb18:	subcs	r3, r3, r1, lsl #6
   1cb1c:	cmp	r3, r1, lsl #5
   1cb20:	adc	r0, r0, r0
   1cb24:	subcs	r3, r3, r1, lsl #5
   1cb28:	cmp	r3, r1, lsl #4
   1cb2c:	adc	r0, r0, r0
   1cb30:	subcs	r3, r3, r1, lsl #4
   1cb34:	cmp	r3, r1, lsl #3
   1cb38:	adc	r0, r0, r0
   1cb3c:	subcs	r3, r3, r1, lsl #3
   1cb40:	cmp	r3, r1, lsl #2
   1cb44:	adc	r0, r0, r0
   1cb48:	subcs	r3, r3, r1, lsl #2
   1cb4c:	cmp	r3, r1, lsl #1
   1cb50:	adc	r0, r0, r0
   1cb54:	subcs	r3, r3, r1, lsl #1
   1cb58:	cmp	r3, r1
   1cb5c:	adc	r0, r0, r0
   1cb60:	subcs	r3, r3, r1
   1cb64:	cmp	ip, #0
   1cb68:	rsbmi	r0, r0, #0
   1cb6c:	bx	lr
   1cb70:	teq	ip, r0
   1cb74:	rsbmi	r0, r0, #0
   1cb78:	bx	lr
   1cb7c:	movcc	r0, #0
   1cb80:	asreq	r0, ip, #31
   1cb84:	orreq	r0, r0, #1
   1cb88:	bx	lr
   1cb8c:	clz	r2, r1
   1cb90:	rsb	r2, r2, #31
   1cb94:	cmp	ip, #0
   1cb98:	lsr	r0, r3, r2
   1cb9c:	rsbmi	r0, r0, #0
   1cba0:	bx	lr
   1cba4:	cmp	r0, #0
   1cba8:	mvngt	r0, #-2147483648	; 0x80000000
   1cbac:	movlt	r0, #-2147483648	; 0x80000000
   1cbb0:	b	1cbd4 <argp_parse@@Base+0x3444>
   1cbb4:	cmp	r1, #0
   1cbb8:	beq	1cba4 <argp_parse@@Base+0x3414>
   1cbbc:	push	{r0, r1, lr}
   1cbc0:	bl	1c99c <argp_parse@@Base+0x320c>
   1cbc4:	pop	{r1, r2, lr}
   1cbc8:	mul	r3, r2, r0
   1cbcc:	sub	r1, r1, r3
   1cbd0:	bx	lr
   1cbd4:	push	{r1, lr}
   1cbd8:	mov	r0, #8
   1cbdc:	bl	1166c <raise@plt>
   1cbe0:	pop	{r1, pc}
   1cbe4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cbe8:	mov	r7, r0
   1cbec:	ldr	r6, [pc, #72]	; 1cc3c <argp_parse@@Base+0x34ac>
   1cbf0:	ldr	r5, [pc, #72]	; 1cc40 <argp_parse@@Base+0x34b0>
   1cbf4:	add	r6, pc, r6
   1cbf8:	add	r5, pc, r5
   1cbfc:	sub	r6, r6, r5
   1cc00:	mov	r8, r1
   1cc04:	mov	r9, r2
   1cc08:	bl	11634 <calloc@plt-0x20>
   1cc0c:	asrs	r6, r6, #2
   1cc10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cc14:	mov	r4, #0
   1cc18:	add	r4, r4, #1
   1cc1c:	ldr	r3, [r5], #4
   1cc20:	mov	r2, r9
   1cc24:	mov	r1, r8
   1cc28:	mov	r0, r7
   1cc2c:	blx	r3
   1cc30:	cmp	r6, r4
   1cc34:	bne	1cc18 <argp_parse@@Base+0x3488>
   1cc38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cc3c:	andeq	r2, r1, ip, lsl #6
   1cc40:	andeq	r2, r1, r4, lsl #6
   1cc44:	bx	lr

Disassembly of section .fini:

0001cc48 <.fini>:
   1cc48:	push	{r3, lr}
   1cc4c:	pop	{r3, pc}
