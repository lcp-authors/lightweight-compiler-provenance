
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010ae0 <.init>:
   10ae0:	push	{r3, lr}
   10ae4:	bl	10e80 <_start@@Base+0x3c>
   10ae8:	pop	{r3, pc}

Disassembly of section .plt:

00010aec <calloc@plt-0x14>:
   10aec:	push	{lr}		; (str lr, [sp, #-4]!)
   10af0:	ldr	lr, [pc, #4]	; 10afc <calloc@plt-0x4>
   10af4:	add	lr, pc, lr
   10af8:	ldr	pc, [lr, #8]!
   10afc:	andeq	r1, r1, r4, lsl #10

00010b00 <calloc@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1284]!	; 0x504

00010b0c <strcmp@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b18 <free@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b24 <realloc@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b30 <strcpy@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b3c <puts@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b48 <malloc@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b54 <__libc_start_main@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b60 <__gmon_start__@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b6c <strlen@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b78 <fprintf@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b84 <sprintf@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b90 <fputs@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b9c <abort@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1180]!	; 0x49c

Disassembly of section .text:

00010ba8 <main@@Base>:
   10ba8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bac:	mov	r4, #0
   10bb0:	ldr	r8, [pc, #600]	; 10e10 <main@@Base+0x268>
   10bb4:	bl	110e8 <vetor_novo@@Base>
   10bb8:	mov	r7, r0
   10bbc:	mov	r5, r8
   10bc0:	mov	r9, r8
   10bc4:	mov	r2, r4
   10bc8:	mov	r0, r7
   10bcc:	ldr	r1, [r5], #4
   10bd0:	add	r4, r4, #1
   10bd4:	bl	1122c <vetor_insere@@Base>
   10bd8:	cmp	r4, #4
   10bdc:	bne	10bc4 <main@@Base+0x1c>
   10be0:	ldr	r6, [pc, #556]	; 10e14 <main@@Base+0x26c>
   10be4:	mov	r5, #0
   10be8:	bl	1148c <lista_nova@@Base>
   10bec:	mov	r4, r0
   10bf0:	mov	r0, r4
   10bf4:	add	r5, r5, #1
   10bf8:	ldr	r1, [r6], #4
   10bfc:	bl	11050 <insere_carta@@Base>
   10c00:	cmp	r5, #52	; 0x34
   10c04:	bne	10bf0 <main@@Base+0x48>
   10c08:	ldr	sl, [pc, #520]	; 10e18 <main@@Base+0x270>
   10c0c:	mov	r5, #0
   10c10:	bl	1148c <lista_nova@@Base>
   10c14:	mov	r6, r0
   10c18:	mov	r2, #0
   10c1c:	mov	r0, r6
   10c20:	ldr	r1, [sl], #4
   10c24:	add	r5, r5, #1
   10c28:	bl	11514 <lista_insere@@Base>
   10c2c:	cmp	r5, #13
   10c30:	bne	10c18 <main@@Base+0x70>
   10c34:	ldr	r5, [pc, #480]	; 10e1c <main@@Base+0x274>
   10c38:	mov	r1, r6
   10c3c:	mov	r0, r4
   10c40:	ldr	fp, [pc, #472]	; 10e20 <main@@Base+0x278>
   10c44:	ldr	sl, [r5]
   10c48:	bl	10f34 <tira_carta@@Base>
   10c4c:	mov	r2, r0
   10c50:	ldr	r1, [pc, #460]	; 10e24 <main@@Base+0x27c>
   10c54:	mov	r0, sl
   10c58:	bl	10b78 <fprintf@plt>
   10c5c:	ldr	sl, [r5]
   10c60:	mov	r1, r6
   10c64:	mov	r0, r4
   10c68:	bl	10f34 <tira_carta@@Base>
   10c6c:	mov	r2, r0
   10c70:	ldr	r1, [pc, #432]	; 10e28 <main@@Base+0x280>
   10c74:	mov	r0, sl
   10c78:	bl	10b78 <fprintf@plt>
   10c7c:	ldr	sl, [r5]
   10c80:	mov	r1, r6
   10c84:	mov	r0, r4
   10c88:	bl	10f34 <tira_carta@@Base>
   10c8c:	mov	r2, r0
   10c90:	ldr	r1, [pc, #404]	; 10e2c <main@@Base+0x284>
   10c94:	mov	r0, sl
   10c98:	mov	sl, #0
   10c9c:	bl	10b78 <fprintf@plt>
   10ca0:	mov	r0, r4
   10ca4:	ldr	r1, [r9, #212]	; 0xd4
   10ca8:	bl	11050 <insere_carta@@Base>
   10cac:	mov	r0, r4
   10cb0:	ldr	r1, [r9, #216]	; 0xd8
   10cb4:	bl	11050 <insere_carta@@Base>
   10cb8:	mov	r0, r4
   10cbc:	ldr	r1, [r9, #220]	; 0xdc
   10cc0:	bl	11050 <insere_carta@@Base>
   10cc4:	bl	110e8 <vetor_novo@@Base>
   10cc8:	mov	r9, r0
   10ccc:	mov	r1, r4
   10cd0:	mov	r2, r6
   10cd4:	mov	r0, r7
   10cd8:	bl	10f80 <faz_jogada@@Base>
   10cdc:	subs	r1, r0, #0
   10ce0:	beq	10cf0 <main@@Base+0x148>
   10ce4:	mov	r2, sl
   10ce8:	mov	r0, r9
   10cec:	bl	1122c <vetor_insere@@Base>
   10cf0:	mov	r0, r7
   10cf4:	bl	111e8 <vetor_tamanho@@Base>
   10cf8:	cmp	r0, #4
   10cfc:	beq	10d0c <main@@Base+0x164>
   10d00:	mov	r0, fp
   10d04:	ldr	r1, [r5]
   10d08:	bl	10b90 <fputs@plt>
   10d0c:	add	sl, sl, #1
   10d10:	cmp	sl, #13
   10d14:	bne	10ccc <main@@Base+0x124>
   10d18:	ldr	r0, [pc, #272]	; 10e30 <main@@Base+0x288>
   10d1c:	bl	10b3c <puts@plt>
   10d20:	mov	r1, #0
   10d24:	ldr	sl, [r9]
   10d28:	cmp	sl, r1
   10d2c:	movgt	r3, #1
   10d30:	movle	r3, #0
   10d34:	cmp	r1, #2
   10d38:	movgt	r3, #0
   10d3c:	subs	sl, r3, #0
   10d40:	bne	10de4 <main@@Base+0x23c>
   10d44:	ldr	fp, [pc, #232]	; 10e34 <main@@Base+0x28c>
   10d48:	mov	r0, r9
   10d4c:	bl	1110c <vetor_apaga@@Base>
   10d50:	bl	110e8 <vetor_novo@@Base>
   10d54:	mov	r9, r0
   10d58:	mov	r2, sl
   10d5c:	mov	r0, r9
   10d60:	ldr	r1, [fp], #4
   10d64:	add	sl, sl, #1
   10d68:	bl	1122c <vetor_insere@@Base>
   10d6c:	cmp	sl, #13
   10d70:	bne	10d58 <main@@Base+0x1b0>
   10d74:	ldr	r0, [pc, #188]	; 10e38 <main@@Base+0x290>
   10d78:	mov	sl, #0
   10d7c:	bl	10b3c <puts@plt>
   10d80:	ldr	r2, [r8], #4
   10d84:	mov	r0, r9
   10d88:	add	sl, sl, #1
   10d8c:	ldr	fp, [r5]
   10d90:	mov	r1, r2
   10d94:	str	r2, [sp, #4]
   10d98:	bl	11008 <numero_vitorias@@Base>
   10d9c:	mov	r3, r0
   10da0:	ldr	r1, [pc, #148]	; 10e3c <main@@Base+0x294>
   10da4:	mov	r0, fp
   10da8:	ldr	r2, [sp, #4]
   10dac:	bl	10b78 <fprintf@plt>
   10db0:	cmp	sl, #4
   10db4:	bne	10d80 <main@@Base+0x1d8>
   10db8:	mov	r0, r7
   10dbc:	bl	1110c <vetor_apaga@@Base>
   10dc0:	mov	r0, r4
   10dc4:	bl	114b0 <lista_apaga@@Base>
   10dc8:	mov	r0, r6
   10dcc:	bl	114b0 <lista_apaga@@Base>
   10dd0:	mov	r0, r9
   10dd4:	bl	1110c <vetor_apaga@@Base>
   10dd8:	mov	r0, #0
   10ddc:	add	sp, sp, #12
   10de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10de4:	ldr	fp, [r5]
   10de8:	mov	r0, r9
   10dec:	add	sl, r1, #1
   10df0:	bl	111f8 <vetor_elemento@@Base>
   10df4:	mov	r3, r0
   10df8:	ldr	r1, [pc, #64]	; 10e40 <main@@Base+0x298>
   10dfc:	mov	r2, sl
   10e00:	mov	r0, fp
   10e04:	bl	10b78 <fprintf@plt>
   10e08:	mov	r1, sl
   10e0c:	b	10d24 <main@@Base+0x17c>
   10e10:	andeq	r2, r2, r0, asr r0
   10e14:	andeq	r2, r2, r0, rrx
   10e18:	andeq	r2, r2, r0, lsr r1
   10e1c:	muleq	r2, r8, r1
   10e20:	andeq	r1, r1, r8, ror r8
   10e24:	andeq	r1, r1, r2, lsr #16
   10e28:	andeq	r1, r1, pc, lsr r8
   10e2c:	andeq	r1, r1, fp, asr r8
   10e30:	andeq	r1, r1, r5, lsr #17
   10e34:	andeq	r2, r2, r4, ror #2
   10e38:	andeq	r1, r1, r4, lsr #17
   10e3c:	ldrdeq	r1, [r1], -r9
   10e40:	andeq	r1, r1, sl, asr #17

00010e44 <_start@@Base>:
   10e44:	mov	fp, #0
   10e48:	mov	lr, #0
   10e4c:	pop	{r1}		; (ldr r1, [sp], #4)
   10e50:	mov	r2, sp
   10e54:	push	{r2}		; (str r2, [sp, #-4]!)
   10e58:	push	{r0}		; (str r0, [sp, #-4]!)
   10e5c:	ldr	ip, [pc, #16]	; 10e74 <_start@@Base+0x30>
   10e60:	push	{ip}		; (str ip, [sp, #-4]!)
   10e64:	ldr	r0, [pc, #12]	; 10e78 <_start@@Base+0x34>
   10e68:	ldr	r3, [pc, #12]	; 10e7c <_start@@Base+0x38>
   10e6c:	bl	10b54 <__libc_start_main@plt>
   10e70:	bl	10b9c <abort@plt>
   10e74:	andeq	r1, r1, r4, lsl #16
   10e78:	andeq	r0, r1, r8, lsr #23
   10e7c:	andeq	r1, r1, r4, lsr #15
   10e80:	ldr	r3, [pc, #20]	; 10e9c <_start@@Base+0x58>
   10e84:	ldr	r2, [pc, #20]	; 10ea0 <_start@@Base+0x5c>
   10e88:	add	r3, pc, r3
   10e8c:	ldr	r2, [r3, r2]
   10e90:	cmp	r2, #0
   10e94:	bxeq	lr
   10e98:	b	10b60 <__gmon_start__@plt>
   10e9c:	andeq	r1, r1, r0, ror r1
   10ea0:	andeq	r0, r0, r4, asr #32
   10ea4:	ldr	r0, [pc, #24]	; 10ec4 <_start@@Base+0x80>
   10ea8:	ldr	r3, [pc, #24]	; 10ec8 <_start@@Base+0x84>
   10eac:	cmp	r3, r0
   10eb0:	bxeq	lr
   10eb4:	ldr	r3, [pc, #16]	; 10ecc <_start@@Base+0x88>
   10eb8:	cmp	r3, #0
   10ebc:	bxeq	lr
   10ec0:	bx	r3
   10ec4:	muleq	r2, r8, r1
   10ec8:	muleq	r2, r8, r1
   10ecc:	andeq	r0, r0, r0
   10ed0:	ldr	r0, [pc, #36]	; 10efc <_start@@Base+0xb8>
   10ed4:	ldr	r1, [pc, #36]	; 10f00 <_start@@Base+0xbc>
   10ed8:	sub	r1, r1, r0
   10edc:	asr	r1, r1, #2
   10ee0:	add	r1, r1, r1, lsr #31
   10ee4:	asrs	r1, r1, #1
   10ee8:	bxeq	lr
   10eec:	ldr	r3, [pc, #16]	; 10f04 <_start@@Base+0xc0>
   10ef0:	cmp	r3, #0
   10ef4:	bxeq	lr
   10ef8:	bx	r3
   10efc:	muleq	r2, r8, r1
   10f00:	muleq	r2, r8, r1
   10f04:	andeq	r0, r0, r0
   10f08:	push	{r4, lr}
   10f0c:	ldr	r4, [pc, #24]	; 10f2c <_start@@Base+0xe8>
   10f10:	ldrb	r3, [r4]
   10f14:	cmp	r3, #0
   10f18:	popne	{r4, pc}
   10f1c:	bl	10ea4 <_start@@Base+0x60>
   10f20:	mov	r3, #1
   10f24:	strb	r3, [r4]
   10f28:	pop	{r4, pc}
   10f2c:	muleq	r2, ip, r1
   10f30:	b	10ed0 <_start@@Base+0x8c>

00010f34 <tira_carta@@Base>:
   10f34:	push	{r4, r5, r6, r7, r8, lr}
   10f38:	mov	r6, r0
   10f3c:	mov	r4, #0
   10f40:	ldr	r3, [r1]
   10f44:	ldr	r7, [r6]
   10f48:	ldm	r3, {r0, r5}
   10f4c:	ldr	r8, [r7]
   10f50:	mov	r1, r8
   10f54:	bl	10b0c <strcmp@plt>
   10f58:	cmp	r0, #0
   10f5c:	bne	10f74 <tira_carta@@Base+0x40>
   10f60:	mov	r1, r7
   10f64:	mov	r0, r6
   10f68:	bl	115b8 <lista_remove@@Base>
   10f6c:	mov	r0, r4
   10f70:	pop	{r4, r5, r6, r7, r8, pc}
   10f74:	add	r4, r4, #1
   10f78:	ldm	r5, {r0, r5}
   10f7c:	b	10f50 <tira_carta@@Base+0x1c>

00010f80 <faz_jogada@@Base>:
   10f80:	push	{r4, r5, r6, r7, r8, lr}
   10f84:	mov	r5, r0
   10f88:	mov	r7, r1
   10f8c:	mov	r8, r2
   10f90:	mov	r4, #0
   10f94:	ldr	r0, [r0]
   10f98:	lsl	r0, r0, #2
   10f9c:	bl	10b48 <malloc@plt>
   10fa0:	mov	r6, r0
   10fa4:	ldr	r2, [r5]
   10fa8:	cmp	r2, r4
   10fac:	bgt	10fd8 <faz_jogada@@Base+0x58>
   10fb0:	mvn	r4, #0
   10fb4:	mov	r3, #0
   10fb8:	mov	r1, r4
   10fbc:	cmp	r2, r3
   10fc0:	bgt	10ff0 <faz_jogada@@Base+0x70>
   10fc4:	mov	r0, r6
   10fc8:	bl	10b18 <free@plt>
   10fcc:	ldr	r3, [r5, #8]
   10fd0:	ldr	r0, [r3, r4, lsl #2]
   10fd4:	pop	{r4, r5, r6, r7, r8, pc}
   10fd8:	mov	r1, r8
   10fdc:	mov	r0, r7
   10fe0:	bl	10f34 <tira_carta@@Base>
   10fe4:	str	r0, [r6, r4, lsl #2]
   10fe8:	add	r4, r4, #1
   10fec:	b	10fa4 <faz_jogada@@Base+0x24>
   10ff0:	ldr	r0, [r6, r3, lsl #2]
   10ff4:	cmp	r0, r1
   10ff8:	movgt	r4, r3
   10ffc:	movgt	r1, r0
   11000:	add	r3, r3, #1
   11004:	b	10fbc <faz_jogada@@Base+0x3c>

00011008 <numero_vitorias@@Base>:
   11008:	push	{r4, r5, r6, r7, r8, lr}
   1100c:	mov	r4, #0
   11010:	mov	r6, r0
   11014:	mov	r8, r1
   11018:	mov	r5, r4
   1101c:	ldr	r7, [r0]
   11020:	cmp	r7, r5
   11024:	bgt	11030 <numero_vitorias@@Base+0x28>
   11028:	mov	r0, r4
   1102c:	pop	{r4, r5, r6, r7, r8, pc}
   11030:	ldr	r3, [r6, #8]
   11034:	mov	r0, r8
   11038:	ldr	r1, [r3, r5, lsl #2]
   1103c:	add	r5, r5, #1
   11040:	bl	10b0c <strcmp@plt>
   11044:	cmp	r0, #0
   11048:	addeq	r4, r4, #1
   1104c:	b	11020 <numero_vitorias@@Base+0x18>

00011050 <insere_carta@@Base>:
   11050:	cmp	r1, #7
   11054:	push	{r0, r1, r4, lr}
   11058:	mov	r4, r0
   1105c:	bgt	11088 <insere_carta@@Base+0x38>
   11060:	add	r2, r1, #50	; 0x32
   11064:	add	r0, sp, #4
   11068:	ldr	r1, [pc, #96]	; 110d0 <insere_carta@@Base+0x80>
   1106c:	bl	10b84 <sprintf@plt>
   11070:	ldr	r2, [r4]
   11074:	add	r1, sp, #4
   11078:	mov	r0, r4
   1107c:	bl	11514 <lista_insere@@Base>
   11080:	add	sp, sp, #8
   11084:	pop	{r4, pc}
   11088:	cmp	r1, #8
   1108c:	ldreq	r1, [pc, #64]	; 110d4 <insere_carta@@Base+0x84>
   11090:	beq	110c4 <insere_carta@@Base+0x74>
   11094:	cmp	r1, #9
   11098:	ldreq	r1, [pc, #56]	; 110d8 <insere_carta@@Base+0x88>
   1109c:	beq	110c4 <insere_carta@@Base+0x74>
   110a0:	cmp	r1, #10
   110a4:	ldreq	r1, [pc, #48]	; 110dc <insere_carta@@Base+0x8c>
   110a8:	beq	110c4 <insere_carta@@Base+0x74>
   110ac:	cmp	r1, #11
   110b0:	ldreq	r1, [pc, #40]	; 110e0 <insere_carta@@Base+0x90>
   110b4:	beq	110c4 <insere_carta@@Base+0x74>
   110b8:	cmp	r1, #12
   110bc:	bne	11070 <insere_carta@@Base+0x20>
   110c0:	ldr	r1, [pc, #28]	; 110e4 <insere_carta@@Base+0x94>
   110c4:	add	r0, sp, #4
   110c8:	bl	10b30 <strcpy@plt>
   110cc:	b	11070 <insere_carta@@Base+0x20>
   110d0:	andeq	r1, r1, r4, lsl r8
   110d4:	andeq	r1, r1, r7, lsl r8
   110d8:	andeq	r1, r1, sl, lsl r8
   110dc:	andeq	r1, r1, ip, lsl r8
   110e0:	andeq	r1, r1, lr, lsl r8
   110e4:	andeq	r1, r1, r0, lsr #16

000110e8 <vetor_novo@@Base>:
   110e8:	push	{r4, lr}
   110ec:	mov	r0, #12
   110f0:	bl	10b48 <malloc@plt>
   110f4:	cmp	r0, #0
   110f8:	movne	r3, #0
   110fc:	strne	r3, [r0]
   11100:	strne	r3, [r0, #4]
   11104:	strne	r3, [r0, #8]
   11108:	pop	{r4, pc}

0001110c <vetor_apaga@@Base>:
   1110c:	push	{r4, r5, r6, lr}
   11110:	subs	r4, r0, #0
   11114:	movne	r5, #0
   11118:	popeq	{r4, r5, r6, pc}
   1111c:	ldr	r3, [r4]
   11120:	ldr	r0, [r4, #8]
   11124:	cmp	r3, r5
   11128:	bgt	1113c <vetor_apaga@@Base+0x30>
   1112c:	bl	10b18 <free@plt>
   11130:	mov	r0, r4
   11134:	pop	{r4, r5, r6, lr}
   11138:	b	10b18 <free@plt>
   1113c:	ldr	r0, [r0, r5, lsl #2]
   11140:	add	r5, r5, #1
   11144:	bl	10b18 <free@plt>
   11148:	b	1111c <vetor_apaga@@Base+0x10>

0001114c <vetor_atribui@@Base>:
   1114c:	cmp	r0, #0
   11150:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11154:	lsrne	r3, r1, #31
   11158:	moveq	r3, #1
   1115c:	cmp	r3, #0
   11160:	beq	11170 <vetor_atribui@@Base+0x24>
   11164:	mvn	r4, #0
   11168:	mov	r0, r4
   1116c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11170:	ldr	r3, [r0]
   11174:	mov	r4, r1
   11178:	mov	r5, r0
   1117c:	cmp	r3, r1
   11180:	ble	11164 <vetor_atribui@@Base+0x18>
   11184:	mov	r0, r2
   11188:	mov	r9, r2
   1118c:	lsl	sl, r4, #2
   11190:	bl	10b6c <strlen@plt>
   11194:	ldr	r6, [r5, #8]
   11198:	mov	r8, r0
   1119c:	ldr	r7, [r6, r4, lsl #2]
   111a0:	mov	r0, r7
   111a4:	bl	10b6c <strlen@plt>
   111a8:	cmp	r0, r8
   111ac:	bcc	111c4 <vetor_atribui@@Base+0x78>
   111b0:	ldr	r3, [r5, #8]
   111b4:	mov	r1, r9
   111b8:	ldr	r0, [r3, sl]
   111bc:	bl	10b30 <strcpy@plt>
   111c0:	b	11168 <vetor_atribui@@Base+0x1c>
   111c4:	add	r1, r8, #1
   111c8:	mov	r0, r7
   111cc:	bl	10b24 <realloc@plt>
   111d0:	ldr	r3, [r5, #8]
   111d4:	str	r0, [r6, r4, lsl #2]
   111d8:	ldr	r3, [r3, r4, lsl #2]
   111dc:	cmp	r3, #0
   111e0:	bne	111b0 <vetor_atribui@@Base+0x64>
   111e4:	b	11164 <vetor_atribui@@Base+0x18>

000111e8 <vetor_tamanho@@Base>:
   111e8:	cmp	r0, #0
   111ec:	ldrne	r0, [r0]
   111f0:	mvneq	r0, #0
   111f4:	bx	lr

000111f8 <vetor_elemento@@Base>:
   111f8:	cmp	r0, #0
   111fc:	lsrne	r3, r1, #31
   11200:	moveq	r3, #1
   11204:	cmp	r3, #0
   11208:	bne	11224 <vetor_elemento@@Base+0x2c>
   1120c:	ldr	r2, [r0]
   11210:	cmp	r2, r1
   11214:	ble	11224 <vetor_elemento@@Base+0x2c>
   11218:	ldr	r3, [r0, #8]
   1121c:	ldr	r0, [r3, r1, lsl #2]
   11220:	bx	lr
   11224:	mov	r0, #0
   11228:	bx	lr

0001122c <vetor_insere@@Base>:
   1122c:	cmp	r0, #0
   11230:	push	{r4, r5, r6, r7, r8, lr}
   11234:	lsrne	r3, r2, #31
   11238:	moveq	r3, #1
   1123c:	cmp	r3, #0
   11240:	beq	11250 <vetor_insere@@Base+0x24>
   11244:	mvn	r5, #0
   11248:	mov	r0, r5
   1124c:	pop	{r4, r5, r6, r7, r8, pc}
   11250:	mov	r8, r1
   11254:	ldr	r1, [r0]
   11258:	mov	r5, r2
   1125c:	mov	r4, r0
   11260:	cmp	r1, r2
   11264:	blt	11244 <vetor_insere@@Base+0x18>
   11268:	ldr	r3, [r0, #4]
   1126c:	cmp	r1, r3
   11270:	beq	112bc <vetor_insere@@Base+0x90>
   11274:	ldr	r6, [r4]
   11278:	sub	r3, r6, #1
   1127c:	cmp	r3, r5
   11280:	ldr	r7, [r4, #8]
   11284:	bge	112e8 <vetor_insere@@Base+0xbc>
   11288:	mov	r0, r8
   1128c:	bl	10b6c <strlen@plt>
   11290:	mov	r1, #1
   11294:	add	r0, r0, r1
   11298:	bl	10b00 <calloc@plt>
   1129c:	cmp	r0, #0
   112a0:	str	r0, [r7, r5, lsl #2]
   112a4:	beq	11244 <vetor_insere@@Base+0x18>
   112a8:	add	r6, r6, #1
   112ac:	mov	r1, r8
   112b0:	bl	10b30 <strcpy@plt>
   112b4:	str	r6, [r4]
   112b8:	b	11248 <vetor_insere@@Base+0x1c>
   112bc:	cmp	r1, #0
   112c0:	ldr	r0, [r0, #8]
   112c4:	lslne	r1, r1, #1
   112c8:	moveq	r1, #1
   112cc:	str	r1, [r4, #4]
   112d0:	lsl	r1, r1, #2
   112d4:	bl	10b24 <realloc@plt>
   112d8:	cmp	r0, #0
   112dc:	str	r0, [r4, #8]
   112e0:	bne	11274 <vetor_insere@@Base+0x48>
   112e4:	b	11244 <vetor_insere@@Base+0x18>
   112e8:	ldr	r1, [r7, r3, lsl #2]
   112ec:	add	r2, r7, r3, lsl #2
   112f0:	sub	r3, r3, #1
   112f4:	str	r1, [r2, #4]
   112f8:	b	1127c <vetor_insere@@Base+0x50>

000112fc <vetor_remove@@Base>:
   112fc:	cmp	r0, #0
   11300:	lsrne	r3, r1, #31
   11304:	moveq	r3, #1
   11308:	cmp	r3, #0
   1130c:	bne	1136c <vetor_remove@@Base+0x70>
   11310:	ldr	r3, [r0]
   11314:	cmp	r3, r1
   11318:	ble	1136c <vetor_remove@@Base+0x70>
   1131c:	ldr	r3, [r0, #8]
   11320:	push	{r4, r5, r6, lr}
   11324:	mov	r4, r1
   11328:	mov	r5, r0
   1132c:	ldr	r0, [r3, r1, lsl #2]
   11330:	bl	10b18 <free@plt>
   11334:	add	r1, r4, #1
   11338:	ldr	r3, [r5]
   1133c:	cmp	r3, r1
   11340:	bgt	11354 <vetor_remove@@Base+0x58>
   11344:	sub	r3, r3, #1
   11348:	mov	r0, #0
   1134c:	str	r3, [r5]
   11350:	pop	{r4, r5, r6, pc}
   11354:	ldr	r3, [r5, #8]
   11358:	add	r2, r3, r1, lsl #2
   1135c:	ldr	r3, [r3, r1, lsl #2]
   11360:	add	r1, r1, #1
   11364:	str	r3, [r2, #-4]
   11368:	b	11338 <vetor_remove@@Base+0x3c>
   1136c:	mvn	r0, #0
   11370:	bx	lr

00011374 <vetor_pesquisa@@Base>:
   11374:	push	{r4, r5, r6, r7, r8, lr}
   11378:	subs	r5, r0, #0
   1137c:	movne	r6, r1
   11380:	movne	r4, #0
   11384:	ldrne	r7, [r5]
   11388:	bne	113b4 <vetor_pesquisa@@Base+0x40>
   1138c:	mvn	r4, #0
   11390:	mov	r0, r4
   11394:	pop	{r4, r5, r6, r7, r8, pc}
   11398:	ldr	r3, [r5, #8]
   1139c:	mov	r1, r6
   113a0:	ldr	r0, [r3, r4, lsl #2]
   113a4:	bl	10b0c <strcmp@plt>
   113a8:	cmp	r0, #0
   113ac:	beq	11390 <vetor_pesquisa@@Base+0x1c>
   113b0:	add	r4, r4, #1
   113b4:	cmp	r7, r4
   113b8:	bgt	11398 <vetor_pesquisa@@Base+0x24>
   113bc:	b	1138c <vetor_pesquisa@@Base+0x18>

000113c0 <vetor_ordena@@Base>:
   113c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113c4:	subs	r5, r0, #0
   113c8:	movne	r4, #1
   113cc:	bne	11414 <vetor_ordena@@Base+0x54>
   113d0:	mvn	r0, #0
   113d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   113d8:	ldr	r8, [r5, #8]
   113dc:	mov	r6, r4
   113e0:	ldr	r9, [r8, r4, lsl #2]
   113e4:	add	r7, r8, r4, lsl #2
   113e8:	mov	r0, r9
   113ec:	ldr	r1, [r7, #-4]
   113f0:	bl	10b0c <strcmp@plt>
   113f4:	cmp	r0, #0
   113f8:	bge	1140c <vetor_ordena@@Base+0x4c>
   113fc:	ldr	r3, [r7, #-4]
   11400:	subs	r6, r6, #1
   11404:	str	r3, [r7], #-4
   11408:	bne	113e8 <vetor_ordena@@Base+0x28>
   1140c:	add	r4, r4, #1
   11410:	str	r9, [r8, r6, lsl #2]
   11414:	ldr	r3, [r5]
   11418:	cmp	r3, r4
   1141c:	bgt	113d8 <vetor_ordena@@Base+0x18>
   11420:	mov	r0, #0
   11424:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011428 <novo_str@@Base>:
   11428:	push	{r4, r5, r6, r7, r8, lr}
   1142c:	mov	r7, r0
   11430:	mov	r0, #12
   11434:	bl	10b48 <malloc@plt>
   11438:	subs	r4, r0, #0
   1143c:	beq	11470 <novo_str@@Base+0x48>
   11440:	mov	r0, r7
   11444:	mov	r6, #0
   11448:	bl	10b6c <strlen@plt>
   1144c:	add	r0, r0, #1
   11450:	bl	10b48 <malloc@plt>
   11454:	cmp	r0, #0
   11458:	mov	r5, r0
   1145c:	str	r0, [r4]
   11460:	bne	11478 <novo_str@@Base+0x50>
   11464:	mov	r0, r4
   11468:	mov	r4, r5
   1146c:	bl	10b18 <free@plt>
   11470:	mov	r0, r4
   11474:	pop	{r4, r5, r6, r7, r8, pc}
   11478:	mov	r1, r7
   1147c:	bl	10b30 <strcpy@plt>
   11480:	str	r6, [r4, #4]
   11484:	str	r6, [r4, #8]
   11488:	b	11470 <novo_str@@Base+0x48>

0001148c <lista_nova@@Base>:
   1148c:	push	{r4, lr}
   11490:	mov	r0, #12
   11494:	bl	10b48 <malloc@plt>
   11498:	cmp	r0, #0
   1149c:	movne	r3, #0
   114a0:	strne	r3, [r0]
   114a4:	strne	r3, [r0, #4]
   114a8:	strne	r3, [r0, #8]
   114ac:	pop	{r4, pc}

000114b0 <lista_apaga@@Base>:
   114b0:	push	{r4, r5, r6, lr}
   114b4:	subs	r5, r0, #0
   114b8:	popeq	{r4, r5, r6, pc}
   114bc:	ldr	r4, [r5]
   114c0:	cmp	r4, #0
   114c4:	bne	114d4 <lista_apaga@@Base+0x24>
   114c8:	mov	r0, r5
   114cc:	pop	{r4, r5, r6, lr}
   114d0:	b	10b18 <free@plt>
   114d4:	ldm	r4, {r0, r3}
   114d8:	str	r3, [r5]
   114dc:	bl	10b18 <free@plt>
   114e0:	mov	r0, r4
   114e4:	bl	10b18 <free@plt>
   114e8:	b	114bc <lista_apaga@@Base+0xc>

000114ec <lista_tamanho@@Base>:
   114ec:	cmp	r0, #0
   114f0:	ldrne	r0, [r0, #8]
   114f4:	mvneq	r0, #0
   114f8:	bx	lr

000114fc <lista_inicio@@Base>:
   114fc:	cmp	r0, #0
   11500:	ldrne	r0, [r0]
   11504:	bx	lr

00011508 <lista_fim@@Base>:
   11508:	cmp	r0, #0
   1150c:	ldrne	r0, [r0, #4]
   11510:	bx	lr

00011514 <lista_insere@@Base>:
   11514:	cmp	r1, #0
   11518:	cmpne	r0, #0
   1151c:	bne	11530 <lista_insere@@Base+0x1c>
   11520:	mov	r0, #0
   11524:	bx	lr
   11528:	mov	r0, #0
   1152c:	pop	{r4, r5, r6, pc}
   11530:	push	{r4, r5, r6, lr}
   11534:	mov	r4, r0
   11538:	mov	r0, r1
   1153c:	mov	r5, r2
   11540:	bl	11428 <novo_str@@Base>
   11544:	cmp	r0, #0
   11548:	beq	11528 <lista_insere@@Base+0x14>
   1154c:	ldr	r3, [r4, #8]
   11550:	cmp	r5, #0
   11554:	add	r3, r3, #1
   11558:	str	r3, [r4, #8]
   1155c:	ldr	r3, [r4]
   11560:	bne	11584 <lista_insere@@Base+0x70>
   11564:	cmp	r3, #0
   11568:	streq	r0, [r4, #4]
   1156c:	beq	11594 <lista_insere@@Base+0x80>
   11570:	ldr	r3, [r4, #4]
   11574:	str	r3, [r0, #8]
   11578:	str	r0, [r3, #4]
   1157c:	str	r0, [r4, #4]
   11580:	pop	{r4, r5, r6, pc}
   11584:	cmp	r5, r3
   11588:	bne	1159c <lista_insere@@Base+0x88>
   1158c:	str	r5, [r0, #4]
   11590:	str	r0, [r5, #8]
   11594:	str	r0, [r4]
   11598:	pop	{r4, r5, r6, pc}
   1159c:	ldr	r3, [r5, #8]
   115a0:	str	r5, [r0, #4]
   115a4:	str	r3, [r0, #8]
   115a8:	ldr	r3, [r5, #8]
   115ac:	str	r0, [r3, #4]
   115b0:	str	r0, [r5, #8]
   115b4:	pop	{r4, r5, r6, pc}

000115b8 <lista_remove@@Base>:
   115b8:	cmp	r1, #0
   115bc:	cmpne	r0, #0
   115c0:	push	{r4, r5, r6, lr}
   115c4:	moveq	r5, #0
   115c8:	beq	11610 <lista_remove@@Base+0x58>
   115cc:	mov	r4, r1
   115d0:	ldr	r3, [r0, #8]
   115d4:	ldr	r2, [r1, #4]
   115d8:	sub	r3, r3, #1
   115dc:	str	r3, [r0, #8]
   115e0:	ldr	r3, [r1, #8]
   115e4:	cmp	r3, #0
   115e8:	strne	r2, [r3, #4]
   115ec:	ldr	r5, [r1, #4]
   115f0:	streq	r2, [r0]
   115f4:	cmp	r5, #0
   115f8:	streq	r3, [r0, #4]
   115fc:	strne	r3, [r5, #8]
   11600:	ldr	r0, [r1]
   11604:	bl	10b18 <free@plt>
   11608:	mov	r0, r4
   1160c:	bl	10b18 <free@plt>
   11610:	mov	r0, r5
   11614:	pop	{r4, r5, r6, pc}

00011618 <lista_pesquisa@@Base>:
   11618:	push	{r4, r5, r6, lr}
   1161c:	clz	r4, r1
   11620:	cmp	r0, #0
   11624:	lsr	r4, r4, #5
   11628:	moveq	r4, #1
   1162c:	cmp	r4, #0
   11630:	movne	r4, #0
   11634:	bne	11698 <lista_pesquisa@@Base+0x80>
   11638:	cmp	r2, #1
   1163c:	bhi	11698 <lista_pesquisa@@Base+0x80>
   11640:	cmp	r2, #0
   11644:	mov	r5, r1
   11648:	ldreq	r4, [r0]
   1164c:	beq	11690 <lista_pesquisa@@Base+0x78>
   11650:	ldr	r4, [r0, #4]
   11654:	cmp	r4, #0
   11658:	beq	11698 <lista_pesquisa@@Base+0x80>
   1165c:	mov	r1, r5
   11660:	ldr	r0, [r4]
   11664:	bl	10b0c <strcmp@plt>
   11668:	cmp	r0, #0
   1166c:	beq	11698 <lista_pesquisa@@Base+0x80>
   11670:	ldr	r4, [r4, #8]
   11674:	b	11654 <lista_pesquisa@@Base+0x3c>
   11678:	mov	r1, r5
   1167c:	ldr	r0, [r4]
   11680:	bl	10b0c <strcmp@plt>
   11684:	cmp	r0, #0
   11688:	beq	11698 <lista_pesquisa@@Base+0x80>
   1168c:	ldr	r4, [r4, #4]
   11690:	cmp	r4, #0
   11694:	bne	11678 <lista_pesquisa@@Base+0x60>
   11698:	mov	r0, r4
   1169c:	pop	{r4, r5, r6, pc}

000116a0 <lista_ordena@@Base>:
   116a0:	cmp	r0, #0
   116a4:	beq	11708 <lista_ordena@@Base+0x68>
   116a8:	push	{r4, r5, r6, r7, r8, lr}
   116ac:	ldr	r5, [r0]
   116b0:	ldr	r4, [r5, #4]
   116b4:	cmp	r4, #0
   116b8:	bne	116c4 <lista_ordena@@Base+0x24>
   116bc:	mov	r0, r4
   116c0:	pop	{r4, r5, r6, r7, r8, pc}
   116c4:	mov	r6, r5
   116c8:	mov	r7, r4
   116cc:	ldr	r1, [r6]
   116d0:	ldr	r0, [r7]
   116d4:	bl	10b0c <strcmp@plt>
   116d8:	cmp	r0, #0
   116dc:	movlt	r6, r7
   116e0:	ldr	r7, [r7, #4]
   116e4:	cmp	r7, #0
   116e8:	bne	116cc <lista_ordena@@Base+0x2c>
   116ec:	cmp	r5, r6
   116f0:	ldrne	r3, [r5]
   116f4:	ldrne	r2, [r6]
   116f8:	strne	r2, [r5]
   116fc:	mov	r5, r4
   11700:	strne	r3, [r6]
   11704:	b	116b0 <lista_ordena@@Base+0x10>
   11708:	mvn	r0, #0
   1170c:	bx	lr

00011710 <lista_inverte@@Base>:
   11710:	subs	r3, r0, #0
   11714:	beq	11794 <lista_inverte@@Base+0x84>
   11718:	ldr	r1, [r3, #8]
   1171c:	cmp	r1, #1
   11720:	ble	1179c <lista_inverte@@Base+0x8c>
   11724:	ldr	r2, [r3]
   11728:	mov	ip, #0
   1172c:	sub	r0, r1, #2
   11730:	push	{r4, lr}
   11734:	ldr	r2, [r2, #4]
   11738:	cmp	r0, ip
   1173c:	ldr	r1, [r3]
   11740:	bgt	1176c <lista_inverte@@Base+0x5c>
   11744:	mov	r0, #0
   11748:	ldr	r2, [r3, #4]
   1174c:	ldr	ip, [r2, #8]
   11750:	str	ip, [r3, #4]
   11754:	str	r0, [ip, #4]
   11758:	str	r1, [r2, #4]
   1175c:	str	r0, [r2, #8]
   11760:	str	r2, [r1, #8]
   11764:	str	r2, [r3]
   11768:	pop	{r4, pc}
   1176c:	ldr	lr, [r2, #4]
   11770:	add	ip, ip, #1
   11774:	ldr	r4, [r2, #8]
   11778:	str	lr, [r4, #4]
   1177c:	str	r4, [lr, #8]
   11780:	str	r1, [r2, #4]
   11784:	str	r2, [r1, #8]
   11788:	str	r2, [r3]
   1178c:	mov	r2, lr
   11790:	b	11738 <lista_inverte@@Base+0x28>
   11794:	mvn	r0, #0
   11798:	bx	lr
   1179c:	mov	r0, #0
   117a0:	bx	lr

000117a4 <__libc_csu_init@@Base>:
   117a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117a8:	mov	r7, r0
   117ac:	ldr	r6, [pc, #72]	; 117fc <__libc_csu_init@@Base+0x58>
   117b0:	ldr	r5, [pc, #72]	; 11800 <__libc_csu_init@@Base+0x5c>
   117b4:	add	r6, pc, r6
   117b8:	add	r5, pc, r5
   117bc:	sub	r6, r6, r5
   117c0:	mov	r8, r1
   117c4:	mov	r9, r2
   117c8:	bl	10ae0 <calloc@plt-0x20>
   117cc:	asrs	r6, r6, #2
   117d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   117d4:	mov	r4, #0
   117d8:	add	r4, r4, #1
   117dc:	ldr	r3, [r5], #4
   117e0:	mov	r2, r9
   117e4:	mov	r1, r8
   117e8:	mov	r0, r7
   117ec:	blx	r3
   117f0:	cmp	r6, r4
   117f4:	bne	117d8 <__libc_csu_init@@Base+0x34>
   117f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117fc:	andeq	r0, r1, r8, asr r7
   11800:	andeq	r0, r1, r0, asr r7

00011804 <__libc_csu_fini@@Base>:
   11804:	bx	lr

Disassembly of section .fini:

00011808 <.fini>:
   11808:	push	{r3, lr}
   1180c:	pop	{r3, pc}
