
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

00000614 <_init>:
 614:	push	{r3, lr}
 618:	bl	6f4 <call_weak_fn>
 61c:	pop	{r3, pc}

Disassembly of section .plt:

00000620 <.plt>:
 620:	push	{lr}		; (str lr, [sp, #-4]!)
 624:	ldr	lr, [pc, #4]	; 630 <.plt+0x10>
 628:	add	lr, pc, lr
 62c:	ldr	pc, [lr, #8]!
 630:	.word	0x000119d0

00000634 <calloc@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #69632	; 0x11000
 63c:	ldr	pc, [ip, #2512]!	; 0x9d0

00000640 <strcmp@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2504]!	; 0x9c8

0000064c <__cxa_finalize@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2496]!	; 0x9c0

00000658 <free@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2488]!	; 0x9b8

00000664 <ferror@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2480]!	; 0x9b0

00000670 <strdup@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2472]!	; 0x9a8

0000067c <pcap_close@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2464]!	; 0x9a0

00000688 <strcasecmp@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2456]!	; 0x998

00000694 <pcap_open_dead@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2448]!	; 0x990

000006a0 <pcap_dump@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2440]!	; 0x988

000006ac <__gmon_start__@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2432]!	; 0x980

000006b8 <snprintf@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2424]!	; 0x978

000006c4 <pcap_dump_file@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #69632	; 0x11000
 6cc:	ldr	pc, [ip, #2416]!	; 0x970

000006d0 <memset@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #69632	; 0x11000
 6d8:	ldr	pc, [ip, #2408]!	; 0x968

000006dc <pcap_dump_close@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #69632	; 0x11000
 6e4:	ldr	pc, [ip, #2400]!	; 0x960

000006e8 <pcap_dump_open@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2392]!	; 0x958

Disassembly of section .text:

000006f4 <call_weak_fn>:
 6f4:	ldr	r3, [pc, #20]	; 710 <call_weak_fn+0x1c>
 6f8:	ldr	r2, [pc, #20]	; 714 <call_weak_fn+0x20>
 6fc:	add	r3, pc, r3
 700:	ldr	r2, [r3, r2]
 704:	cmp	r2, #0
 708:	bxeq	lr
 70c:	b	6ac <__gmon_start__@plt>
 710:	.word	0x000118fc
 714:	.word	0x00000054

00000718 <deregister_tm_clones>:
 718:	ldr	r0, [pc, #44]	; 74c <deregister_tm_clones+0x34>
 71c:	ldr	r3, [pc, #44]	; 750 <deregister_tm_clones+0x38>
 720:	add	r0, pc, r0
 724:	add	r3, pc, r3
 728:	cmp	r3, r0
 72c:	ldr	r3, [pc, #32]	; 754 <deregister_tm_clones+0x3c>
 730:	add	r3, pc, r3
 734:	bxeq	lr
 738:	ldr	r2, [pc, #24]	; 758 <deregister_tm_clones+0x40>
 73c:	ldr	r3, [r3, r2]
 740:	cmp	r3, #0
 744:	bxeq	lr
 748:	bx	r3
 74c:	.word	0x000119a0
 750:	.word	0x0001199c
 754:	.word	0x000118c8
 758:	.word	0x00000050

0000075c <register_tm_clones>:
 75c:	ldr	r0, [pc, #56]	; 79c <register_tm_clones+0x40>
 760:	ldr	r3, [pc, #56]	; 7a0 <register_tm_clones+0x44>
 764:	add	r0, pc, r0
 768:	add	r3, pc, r3
 76c:	sub	r1, r3, r0
 770:	ldr	r3, [pc, #44]	; 7a4 <register_tm_clones+0x48>
 774:	asr	r1, r1, #2
 778:	add	r3, pc, r3
 77c:	add	r1, r1, r1, lsr #31
 780:	asrs	r1, r1, #1
 784:	bxeq	lr
 788:	ldr	r2, [pc, #24]	; 7a8 <register_tm_clones+0x4c>
 78c:	ldr	r3, [r3, r2]
 790:	cmp	r3, #0
 794:	bxeq	lr
 798:	bx	r3
 79c:	.word	0x0001195c
 7a0:	.word	0x00011958
 7a4:	.word	0x00011880
 7a8:	.word	0x00000058

000007ac <__do_global_dtors_aux>:
 7ac:	ldr	r3, [pc, #76]	; 800 <__do_global_dtors_aux+0x54>
 7b0:	ldr	r2, [pc, #76]	; 804 <__do_global_dtors_aux+0x58>
 7b4:	add	r3, pc, r3
 7b8:	add	r2, pc, r2
 7bc:	ldrb	r3, [r3]
 7c0:	cmp	r3, #0
 7c4:	bxne	lr
 7c8:	ldr	r3, [pc, #56]	; 808 <__do_global_dtors_aux+0x5c>
 7cc:	push	{r4, lr}
 7d0:	ldr	r3, [r2, r3]
 7d4:	cmp	r3, #0
 7d8:	beq	7e8 <__do_global_dtors_aux+0x3c>
 7dc:	ldr	r3, [pc, #40]	; 80c <__do_global_dtors_aux+0x60>
 7e0:	ldr	r0, [pc, r3]
 7e4:	bl	64c <__cxa_finalize@plt>
 7e8:	bl	718 <deregister_tm_clones>
 7ec:	ldr	r3, [pc, #28]	; 810 <__do_global_dtors_aux+0x64>
 7f0:	mov	r2, #1
 7f4:	add	r3, pc, r3
 7f8:	strb	r2, [r3]
 7fc:	pop	{r4, pc}
 800:	.word	0x0001190c
 804:	.word	0x00011840
 808:	.word	0x0000004c
 80c:	.word	0x00011874
 810:	.word	0x000118cc

00000814 <frame_dummy>:
 814:	b	75c <register_tm_clones>

00000818 <dump_daq_initialize>:
 818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81c:	add	fp, sp, #28
 820:	sub	sp, sp, #44	; 0x2c
 824:	mov	r6, r1
 828:	mov	r5, r0
 82c:	mov	r0, #1
 830:	mov	r1, #120	; 0x78
 834:	mov	r8, r3
 838:	mov	r7, r2
 83c:	bl	634 <calloc@plt>
 840:	mov	r4, r0
 844:	mov	r0, #12
 848:	ldr	r9, [r5, #24]
 84c:	add	r1, sp, #16
 850:	vld1.32	{d16-d17}, [r5], r0
 854:	cmp	r4, #0
 858:	vld1.32	{d18-d19}, [r5]
 85c:	vst1.64	{d16-d17}, [r1], r0
 860:	vst1.32	{d18-d19}, [r1]
 864:	beq	8a8 <dump_daq_initialize+0x90>
 868:	cmp	r9, #0
 86c:	beq	87c <dump_daq_initialize+0x64>
 870:	ldrb	r0, [r9, #12]
 874:	tst	r0, #1
 878:	bne	8cc <dump_daq_initialize+0xb4>
 87c:	ldr	r2, [pc, #408]	; a1c <dump_daq_initialize+0x204>
 880:	ldr	r3, [pc, #408]	; a20 <dump_daq_initialize+0x208>
 884:	mov	r0, r7
 888:	mov	r1, r8
 88c:	add	r2, pc, r2
 890:	add	r3, pc, r3
 894:	bl	6b8 <snprintf@plt>
 898:	mov	r0, r4
 89c:	bl	658 <free@plt>
 8a0:	mvn	r5, #0
 8a4:	b	a08 <dump_daq_initialize+0x1f0>
 8a8:	ldr	r2, [pc, #356]	; a14 <dump_daq_initialize+0x1fc>
 8ac:	ldr	r3, [pc, #356]	; a18 <dump_daq_initialize+0x200>
 8b0:	mov	r0, r7
 8b4:	mov	r1, r8
 8b8:	add	r2, pc, r2
 8bc:	add	r3, pc, r3
 8c0:	bl	6b8 <snprintf@plt>
 8c4:	mvn	r5, #1
 8c8:	b	a08 <dump_daq_initialize+0x1f0>
 8cc:	ldr	sl, [sp, #36]	; 0x24
 8d0:	str	r6, [sp, #8]
 8d4:	str	r7, [sp, #12]
 8d8:	cmp	sl, #0
 8dc:	beq	9c8 <dump_daq_initialize+0x1b0>
 8e0:	str	r8, [sp, #4]
 8e4:	mov	r7, #0
 8e8:	ldr	r5, [pc, #308]	; a24 <dump_daq_initialize+0x20c>
 8ec:	ldr	r6, [pc, #308]	; a28 <dump_daq_initialize+0x210>
 8f0:	add	r5, pc, r5
 8f4:	add	r6, pc, r6
 8f8:	ldr	r8, [sl]
 8fc:	mov	r1, r5
 900:	mov	r0, r8
 904:	bl	640 <strcmp@plt>
 908:	cmp	r0, #0
 90c:	beq	934 <dump_daq_initialize+0x11c>
 910:	mov	r0, r8
 914:	mov	r1, r6
 918:	bl	640 <strcmp@plt>
 91c:	cmp	r0, #0
 920:	bne	938 <dump_daq_initialize+0x120>
 924:	ldr	r0, [sl, #4]
 928:	bl	670 <strdup@plt>
 92c:	str	r0, [r4, #12]
 930:	b	938 <dump_daq_initialize+0x120>
 934:	ldr	r7, [sl, #4]
 938:	ldr	sl, [sl, #8]
 93c:	cmp	sl, #0
 940:	bne	8f8 <dump_daq_initialize+0xe0>
 944:	ldr	r8, [sp, #4]
 948:	cmp	r7, #0
 94c:	beq	9c8 <dump_daq_initialize+0x1b0>
 950:	ldr	r1, [pc, #212]	; a2c <dump_daq_initialize+0x214>
 954:	mov	r0, r7
 958:	add	r1, pc, r1
 95c:	bl	688 <strcasecmp@plt>
 960:	cmp	r0, #0
 964:	beq	9b0 <dump_daq_initialize+0x198>
 968:	ldr	r1, [pc, #192]	; a30 <dump_daq_initialize+0x218>
 96c:	mov	r0, r7
 970:	add	r1, pc, r1
 974:	bl	688 <strcasecmp@plt>
 978:	cmp	r0, #0
 97c:	beq	9b8 <dump_daq_initialize+0x1a0>
 980:	ldr	r1, [pc, #172]	; a34 <dump_daq_initialize+0x21c>
 984:	mov	r0, r7
 988:	add	r1, pc, r1
 98c:	bl	688 <strcasecmp@plt>
 990:	cmp	r0, #0
 994:	beq	9c0 <dump_daq_initialize+0x1a8>
 998:	ldr	r2, [pc, #152]	; a38 <dump_daq_initialize+0x220>
 99c:	ldr	r0, [sp, #12]
 9a0:	mov	r1, r8
 9a4:	mov	r3, r7
 9a8:	add	r2, pc, r2
 9ac:	b	894 <dump_daq_initialize+0x7c>
 9b0:	mov	r0, #2
 9b4:	b	9c4 <dump_daq_initialize+0x1ac>
 9b8:	mov	r0, #0
 9bc:	b	9c4 <dump_daq_initialize+0x1ac>
 9c0:	mov	r0, #1
 9c4:	str	r0, [sp, #28]
 9c8:	ldr	r7, [r9, #16]
 9cc:	ldr	r2, [sp, #12]
 9d0:	add	r1, r4, #4
 9d4:	add	r0, sp, #16
 9d8:	mov	r3, r8
 9dc:	blx	r7
 9e0:	cmp	r0, #0
 9e4:	beq	9f8 <dump_daq_initialize+0x1e0>
 9e8:	mov	r5, r0
 9ec:	mov	r0, r4
 9f0:	bl	658 <free@plt>
 9f4:	b	a08 <dump_daq_initialize+0x1f0>
 9f8:	ldr	r0, [sp, #8]
 9fc:	mov	r5, #0
 a00:	str	r9, [r4]
 a04:	str	r4, [r0]
 a08:	mov	r0, r5
 a0c:	sub	sp, fp, #28
 a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a14:	.word	0x0000056d
 a18:	.word	0x0000059a
 a1c:	.word	0x000005de
 a20:	.word	0x000005c6
 a24:	.word	0x0000059b
 a28:	.word	0x000005f1
 a2c:	.word	0x0000053d
 a30:	.word	0x0000052f
 a34:	.word	0x0000051f
 a38:	.word	0x00000506

00000a3c <dump_daq_set_filter>:
 a3c:	ldm	r0, {r0, r3}
 a40:	ldr	r2, [r0, #20]
 a44:	mov	r0, r3
 a48:	bx	r2

00000a4c <dump_daq_start>:
 a4c:	push	{r4, r5, r6, sl, fp, lr}
 a50:	add	fp, sp, #16
 a54:	mov	r4, r0
 a58:	ldrd	r0, [r0]
 a5c:	ldr	r2, [r4, #12]
 a60:	ldr	r5, [pc, #180]	; b1c <dump_daq_start+0xd0>
 a64:	cmp	r2, #0
 a68:	add	r5, pc, r5
 a6c:	movne	r5, r2
 a70:	ldr	r2, [r0, #24]
 a74:	mov	r0, r1
 a78:	blx	r2
 a7c:	cmp	r0, #0
 a80:	popne	{r4, r5, r6, sl, fp, pc}
 a84:	ldrd	r0, [r4]
 a88:	ldr	r2, [r0, #68]	; 0x44
 a8c:	mov	r0, r1
 a90:	blx	r2
 a94:	mov	r6, r0
 a98:	ldrd	r0, [r4]
 a9c:	ldr	r2, [r0, #60]	; 0x3c
 aa0:	mov	r0, r1
 aa4:	blx	r2
 aa8:	mov	r1, r0
 aac:	mov	r0, r6
 ab0:	bl	694 <pcap_open_dead@plt>
 ab4:	cmp	r0, #0
 ab8:	beq	ae4 <dump_daq_start+0x98>
 abc:	mov	r1, r5
 ac0:	mov	r6, r0
 ac4:	bl	6e8 <pcap_dump_open@plt>
 ac8:	cmp	r0, #0
 acc:	str	r0, [r4, #8]
 ad0:	beq	aec <dump_daq_start+0xa0>
 ad4:	mov	r0, r6
 ad8:	bl	67c <pcap_close@plt>
 adc:	mov	r0, #0
 ae0:	pop	{r4, r5, r6, sl, fp, pc}
 ae4:	mov	r0, #0
 ae8:	str	r0, [r4, #8]
 aec:	ldrd	r0, [r4]
 af0:	ldr	r2, [r0, #40]	; 0x28
 af4:	mov	r0, r1
 af8:	blx	r2
 afc:	ldm	r4, {r0, r3}
 b00:	ldr	r2, [r0, #76]	; 0x4c
 b04:	ldr	r1, [pc, #20]	; b20 <dump_daq_start+0xd4>
 b08:	mov	r0, r3
 b0c:	add	r1, pc, r1
 b10:	blx	r2
 b14:	mvn	r0, #0
 b18:	pop	{r4, r5, r6, sl, fp, pc}
 b1c:	.word	0x0000045d
 b20:	.word	0x000003c9

00000b24 <dump_daq_acquire>:
 b24:	push	{r5, sl, fp, lr}
 b28:	add	fp, sp, #8
 b2c:	sub	sp, sp, #8
 b30:	str	r2, [r0, #16]
 b34:	ldr	r2, [fp, #8]
 b38:	str	r2, [r0, #20]
 b3c:	ldm	r0, {r2, r5}
 b40:	ldr	ip, [r2, #28]
 b44:	str	r0, [sp]
 b48:	mov	r0, r5
 b4c:	ldr	r2, [pc, #12]	; b60 <dump_daq_acquire+0x3c>
 b50:	add	r2, pc, r2
 b54:	blx	ip
 b58:	sub	sp, fp, #8
 b5c:	pop	{r5, sl, fp, pc}
 b60:	.word	0x00000258

00000b64 <dump_daq_inject>:
 b64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 b68:	add	fp, sp, #24
 b6c:	sub	sp, sp, #56	; 0x38
 b70:	ldm	r1!, {r4, r5, r6, r7}
 b74:	mov	ip, sp
 b78:	mov	r8, r0
 b7c:	mov	r0, ip
 b80:	stmia	r0!, {r4, r5, r6, r7}
 b84:	ldm	r1!, {r4, r5, r6, r7}
 b88:	stmia	r0!, {r4, r5, r6, r7}
 b8c:	ldm	r1, {r4, r5, r6, r7, lr}
 b90:	mov	r1, ip
 b94:	stm	r0, {r4, r5, r6, r7, lr}
 b98:	str	r3, [sp, #12]
 b9c:	str	r3, [sp, #8]
 ba0:	ldr	r0, [r8, #8]
 ba4:	bl	6a0 <pcap_dump@plt>
 ba8:	ldr	r0, [r8, #8]
 bac:	bl	6c4 <pcap_dump_file@plt>
 bb0:	bl	664 <ferror@plt>
 bb4:	cmp	r0, #0
 bb8:	beq	bdc <dump_daq_inject+0x78>
 bbc:	ldm	r8, {r0, r3}
 bc0:	ldr	r2, [r0, #76]	; 0x4c
 bc4:	ldr	r1, [pc, #44]	; bf8 <dump_daq_inject+0x94>
 bc8:	mov	r0, r3
 bcc:	add	r1, pc, r1
 bd0:	blx	r2
 bd4:	mvn	r0, #0
 bd8:	b	bf0 <dump_daq_inject+0x8c>
 bdc:	ldrd	r0, [r8, #56]	; 0x38
 be0:	adds	r0, r0, #1
 be4:	adc	r1, r1, #0
 be8:	strd	r0, [r8, #56]	; 0x38
 bec:	mov	r0, #0
 bf0:	sub	sp, fp, #24
 bf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 bf8:	.word	0x0000031e

00000bfc <dump_daq_breakloop>:
 bfc:	ldrd	r0, [r0]
 c00:	ldr	r2, [r0, #36]	; 0x24
 c04:	mov	r0, r1
 c08:	bx	r2

00000c0c <dump_daq_stop>:
 c0c:	push	{r4, r5, fp, lr}
 c10:	add	fp, sp, #8
 c14:	mov	r4, r0
 c18:	ldrd	r0, [r0]
 c1c:	ldr	r2, [r0, #40]	; 0x28
 c20:	mov	r0, r1
 c24:	blx	r2
 c28:	mov	r5, r0
 c2c:	cmp	r0, #0
 c30:	bne	c4c <dump_daq_stop+0x40>
 c34:	ldr	r0, [r4, #8]
 c38:	cmp	r0, #0
 c3c:	beq	c4c <dump_daq_stop+0x40>
 c40:	bl	6dc <pcap_dump_close@plt>
 c44:	mov	r0, #0
 c48:	str	r0, [r4, #8]
 c4c:	mov	r0, r5
 c50:	pop	{r4, r5, fp, pc}

00000c54 <dump_daq_shutdown>:
 c54:	push	{r4, sl, fp, lr}
 c58:	add	fp, sp, #8
 c5c:	mov	r4, r0
 c60:	ldrd	r0, [r0]
 c64:	ldr	r2, [r0, #44]	; 0x2c
 c68:	mov	r0, r1
 c6c:	blx	r2
 c70:	ldr	r0, [r4, #12]
 c74:	cmp	r0, #0
 c78:	beq	c80 <dump_daq_shutdown+0x2c>
 c7c:	bl	658 <free@plt>
 c80:	mov	r0, r4
 c84:	pop	{r4, sl, fp, lr}
 c88:	b	658 <free@plt>

00000c8c <dump_daq_check_status>:
 c8c:	ldrd	r0, [r0]
 c90:	ldr	r2, [r0, #48]	; 0x30
 c94:	mov	r0, r1
 c98:	bx	r2

00000c9c <dump_daq_get_stats>:
 c9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 ca0:	add	fp, sp, #24
 ca4:	mov	r8, r1
 ca8:	mov	r5, r0
 cac:	ldrd	r0, [r0]
 cb0:	ldr	r2, [r0, #52]	; 0x34
 cb4:	mov	r0, r1
 cb8:	mov	r1, r8
 cbc:	blx	r2
 cc0:	add	r7, r8, #40	; 0x28
 cc4:	add	r4, r5, #64	; 0x40
 cc8:	mov	r3, #0
 ccc:	mov	r2, r4
 cd0:	mov	r1, r7
 cd4:	ldr	r6, [r2, -r3]!
 cd8:	ldr	r2, [r2, #4]
 cdc:	str	r6, [r1, -r3]!
 ce0:	sub	r3, r3, #8
 ce4:	cmn	r3, #56	; 0x38
 ce8:	str	r2, [r1, #4]
 cec:	bne	ccc <dump_daq_get_stats+0x30>
 cf0:	ldrd	r2, [r5, #56]	; 0x38
 cf4:	strd	r2, [r8, #32]
 cf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000cfc <dump_daq_reset_stats>:
 cfc:	push	{r4, sl, fp, lr}
 d00:	add	fp, sp, #8
 d04:	mov	r4, r0
 d08:	ldrd	r0, [r0]
 d0c:	ldr	r2, [r0, #56]	; 0x38
 d10:	mov	r0, r1
 d14:	blx	r2
 d18:	add	r0, r4, #24
 d1c:	mov	r1, #0
 d20:	mov	r2, #96	; 0x60
 d24:	pop	{r4, sl, fp, lr}
 d28:	b	6d0 <memset@plt>

00000d2c <dump_daq_get_snaplen>:
 d2c:	ldrd	r0, [r0]
 d30:	ldr	r2, [r0, #60]	; 0x3c
 d34:	mov	r0, r1
 d38:	bx	r2

00000d3c <dump_daq_get_capabilities>:
 d3c:	push	{fp, lr}
 d40:	mov	fp, sp
 d44:	ldrd	r0, [r0]
 d48:	ldr	r2, [r0, #64]	; 0x40
 d4c:	mov	r0, r1
 d50:	blx	r2
 d54:	orr	r0, r0, #7
 d58:	pop	{fp, pc}

00000d5c <dump_daq_get_datalink_type>:
 d5c:	ldrd	r0, [r0]
 d60:	ldr	r2, [r0, #68]	; 0x44
 d64:	mov	r0, r1
 d68:	bx	r2

00000d6c <dump_daq_get_errbuf>:
 d6c:	ldrd	r0, [r0]
 d70:	ldr	r2, [r0, #72]	; 0x48
 d74:	mov	r0, r1
 d78:	bx	r2

00000d7c <dump_daq_set_errbuf>:
 d7c:	ldr	r2, [pc, #24]	; d9c <dump_daq_set_errbuf+0x20>
 d80:	ldm	r0, {r0, r3}
 d84:	cmp	r1, #0
 d88:	add	r2, pc, r2
 d8c:	moveq	r1, r2
 d90:	ldr	r2, [r0, #76]	; 0x4c
 d94:	mov	r0, r3
 d98:	bx	r2
 d9c:	.word	0x0000013c

00000da0 <dump_daq_get_device_index>:
 da0:	ldm	r0, {r0, r3}
 da4:	ldr	r2, [r0, #80]	; 0x50
 da8:	mov	r0, r3
 dac:	bx	r2

00000db0 <daq_dump_capture>:
 db0:	push	{r4, r5, r6, r7, fp, lr}
 db4:	add	fp, sp, #16
 db8:	mov	r5, r1
 dbc:	ldr	r1, [r0, #20]
 dc0:	ldr	r6, [r0, #16]
 dc4:	mov	r7, r0
 dc8:	mov	r4, r2
 dcc:	mov	r0, r1
 dd0:	mov	r1, r5
 dd4:	blx	r6
 dd8:	cmp	r0, #6
 ddc:	mov	r6, r0
 de0:	mov	r1, #1
 de4:	movwhi	r6, #1
 de8:	add	r0, r7, r6, lsl #3
 dec:	ldrd	r2, [r0, #64]	; 0x40
 df0:	adds	r2, r2, #1
 df4:	adc	r3, r3, #0
 df8:	strd	r2, [r0, #64]	; 0x40
 dfc:	mov	r0, #45	; 0x2d
 e00:	tst	r1, r0, lsr r6
 e04:	beq	e18 <daq_dump_capture+0x68>
 e08:	ldr	r0, [r7, #8]
 e0c:	mov	r1, r5
 e10:	mov	r2, r4
 e14:	bl	6a0 <pcap_dump@plt>
 e18:	mov	r0, r6
 e1c:	pop	{r4, r5, r6, r7, fp, pc}

Disassembly of section .fini:

00000e20 <_fini>:
 e20:	push	{r3, lr}
 e24:	pop	{r3, pc}
