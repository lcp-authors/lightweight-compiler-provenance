
../repos/charybdis/extensions/.libs/m_mkpasswd.so:     file format elf32-littlearm


Disassembly of section .init:

0000067c <_init>:
 67c:	push	{r3, lr}
 680:	bl	75c <call_weak_fn>
 684:	pop	{r3, pc}

Disassembly of section .plt:

00000688 <.plt>:
 688:	push	{lr}		; (str lr, [sp, #-4]!)
 68c:	ldr	lr, [pc, #4]	; 698 <.plt+0x10>
 690:	add	lr, pc, lr
 694:	ldr	pc, [lr, #8]!
 698:	.word	0x00011968

0000069c <rb_current_time@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2408]!	; 0x968

000006a8 <__cxa_finalize@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2400]!	; 0x960

000006b4 <printf@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2392]!	; 0x958

000006c0 <sendto_one@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2384]!	; 0x950

000006cc <read@plt>:
 6cc:	add	ip, pc, #0, 12
 6d0:	add	ip, ip, #69632	; 0x11000
 6d4:	ldr	pc, [ip, #2376]!	; 0x948

000006d8 <time@plt>:
 6d8:	add	ip, pc, #0, 12
 6dc:	add	ip, ip, #69632	; 0x11000
 6e0:	ldr	pc, [ip, #2368]!	; 0x940

000006e4 <rb_crypt@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2360]!	; 0x938

000006f0 <__gmon_start__@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2352]!	; 0x930

000006fc <open@plt>:
 6fc:	add	ip, pc, #0, 12
 700:	add	ip, ip, #69632	; 0x11000
 704:	ldr	pc, [ip, #2344]!	; 0x928

00000708 <exit@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #69632	; 0x11000
 710:	ldr	pc, [ip, #2336]!	; 0x920

00000714 <srand@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2328]!	; 0x918

00000720 <rand@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2320]!	; 0x910

0000072c <abs@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2312]!	; 0x908

00000738 <sendto_one_notice@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2304]!	; 0x900

00000744 <close@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2296]!	; 0x8f8

00000750 <irccmp@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2288]!	; 0x8f0

Disassembly of section .text:

0000075c <call_weak_fn>:
     75c:	ldr	r3, [pc, #20]	; 778 <call_weak_fn+0x1c>
     760:	ldr	r2, [pc, #20]	; 77c <call_weak_fn+0x20>
     764:	add	r3, pc, r3
     768:	ldr	r2, [r3, r2]
     76c:	cmp	r2, #0
     770:	bxeq	lr
     774:	b	6f0 <__gmon_start__@plt>
     778:	.word	0x00011894
     77c:	.word	0x00000054

00000780 <deregister_tm_clones>:
     780:	ldr	r0, [pc, #44]	; 7b4 <deregister_tm_clones+0x34>
     784:	ldr	r3, [pc, #44]	; 7b8 <deregister_tm_clones+0x38>
     788:	add	r0, pc, r0
     78c:	add	r3, pc, r3
     790:	cmp	r3, r0
     794:	ldr	r3, [pc, #32]	; 7bc <deregister_tm_clones+0x3c>
     798:	add	r3, pc, r3
     79c:	bxeq	lr
     7a0:	ldr	r2, [pc, #24]	; 7c0 <deregister_tm_clones+0x40>
     7a4:	ldr	r3, [r3, r2]
     7a8:	cmp	r3, #0
     7ac:	bxeq	lr
     7b0:	bx	r3
     7b4:	.word	0x00011990
     7b8:	.word	0x0001198c
     7bc:	.word	0x00011860
     7c0:	.word	0x00000050

000007c4 <register_tm_clones>:
     7c4:	ldr	r0, [pc, #56]	; 804 <register_tm_clones+0x40>
     7c8:	ldr	r3, [pc, #56]	; 808 <register_tm_clones+0x44>
     7cc:	add	r0, pc, r0
     7d0:	add	r3, pc, r3
     7d4:	sub	r1, r3, r0
     7d8:	ldr	r3, [pc, #44]	; 80c <register_tm_clones+0x48>
     7dc:	asr	r1, r1, #2
     7e0:	add	r3, pc, r3
     7e4:	add	r1, r1, r1, lsr #31
     7e8:	asrs	r1, r1, #1
     7ec:	bxeq	lr
     7f0:	ldr	r2, [pc, #24]	; 810 <register_tm_clones+0x4c>
     7f4:	ldr	r3, [r3, r2]
     7f8:	cmp	r3, #0
     7fc:	bxeq	lr
     800:	bx	r3
     804:	.word	0x0001194c
     808:	.word	0x00011948
     80c:	.word	0x00011818
     810:	.word	0x00000058

00000814 <__do_global_dtors_aux>:
     814:	ldr	r3, [pc, #76]	; 868 <__do_global_dtors_aux+0x54>
     818:	ldr	r2, [pc, #76]	; 86c <__do_global_dtors_aux+0x58>
     81c:	add	r3, pc, r3
     820:	add	r2, pc, r2
     824:	ldrb	r3, [r3]
     828:	cmp	r3, #0
     82c:	bxne	lr
     830:	ldr	r3, [pc, #56]	; 870 <__do_global_dtors_aux+0x5c>
     834:	push	{r4, lr}
     838:	ldr	r3, [r2, r3]
     83c:	cmp	r3, #0
     840:	beq	850 <__do_global_dtors_aux+0x3c>
     844:	ldr	r3, [pc, #40]	; 874 <__do_global_dtors_aux+0x60>
     848:	ldr	r0, [pc, r3]
     84c:	bl	6a8 <__cxa_finalize@plt>
     850:	bl	780 <deregister_tm_clones>
     854:	ldr	r3, [pc, #28]	; 878 <__do_global_dtors_aux+0x64>
     858:	mov	r2, #1
     85c:	add	r3, pc, r3
     860:	strb	r2, [r3]
     864:	pop	{r4, pc}
     868:	.word	0x000118fc
     86c:	.word	0x000117d8
     870:	.word	0x0000004c
     874:	.word	0x00011814
     878:	.word	0x000118bc

0000087c <frame_dummy>:
     87c:	b	7c4 <register_tm_clones>

00000880 <m_mkpasswd>:
     880:	push	{fp, lr}
     884:	mov	fp, sp
     888:	sub	sp, sp, #80	; 0x50
     88c:	ldr	ip, [fp, #8]
     890:	ldr	lr, [pc, #644]	; b1c <m_mkpasswd+0x29c>
     894:	add	lr, pc, lr
     898:	str	r0, [fp, #-4]
     89c:	str	r1, [fp, #-8]
     8a0:	str	r2, [fp, #-12]
     8a4:	str	r3, [fp, #-16]
     8a8:	ldrb	r0, [lr]
     8ac:	strb	r0, [fp, #-35]	; 0xffffffdd
     8b0:	ldrb	r0, [lr, #1]
     8b4:	strb	r0, [fp, #-34]	; 0xffffffde
     8b8:	ldrb	r0, [lr, #2]
     8bc:	strb	r0, [fp, #-33]	; 0xffffffdf
     8c0:	ldrb	r0, [lr, #3]
     8c4:	strb	r0, [fp, #-32]	; 0xffffffe0
     8c8:	ldrb	r0, [lr, #4]
     8cc:	strb	r0, [fp, #-31]	; 0xffffffe1
     8d0:	ldrb	r0, [lr, #5]
     8d4:	strb	r0, [fp, #-30]	; 0xffffffe2
     8d8:	ldrb	r0, [lr, #6]
     8dc:	strb	r0, [fp, #-29]	; 0xffffffe3
     8e0:	ldr	r0, [fp, #8]
     8e4:	ldr	r0, [r0, #4]
     8e8:	movw	r1, #0
     8ec:	cmp	r0, r1
     8f0:	str	ip, [sp, #40]	; 0x28
     8f4:	beq	90c <m_mkpasswd+0x8c>
     8f8:	ldr	r0, [fp, #8]
     8fc:	ldr	r0, [r0, #4]
     900:	ldrb	r0, [r0]
     904:	cmp	r0, #0
     908:	bne	950 <m_mkpasswd+0xd0>
     90c:	ldr	r0, [pc, #572]	; b50 <m_mkpasswd+0x2d0>
     910:	add	r1, pc, r0
     914:	ldr	r0, [pc, #568]	; b54 <m_mkpasswd+0x2d4>
     918:	ldr	r0, [pc, r0]
     91c:	add	r2, r0, #88	; 0x58
     920:	ldr	r0, [pc, #560]	; b58 <m_mkpasswd+0x2d8>
     924:	add	r0, pc, r0
     928:	ldr	r3, [fp, #-12]
     92c:	ldr	ip, [fp, #-12]
     930:	add	ip, ip, #88	; 0x58
     934:	str	r0, [sp, #36]	; 0x24
     938:	mov	r0, r3
     93c:	mov	r3, ip
     940:	ldr	ip, [sp, #36]	; 0x24
     944:	str	ip, [sp]
     948:	bl	6c0 <sendto_one@plt>
     94c:	b	b14 <m_mkpasswd+0x294>
     950:	ldr	r0, [fp, #-16]
     954:	cmp	r0, #3
     958:	bge	968 <m_mkpasswd+0xe8>
     95c:	sub	r0, fp, #35	; 0x23
     960:	str	r0, [fp, #-28]	; 0xffffffe4
     964:	b	974 <m_mkpasswd+0xf4>
     968:	ldr	r0, [fp, #8]
     96c:	ldr	r0, [r0, #8]
     970:	str	r0, [fp, #-28]	; 0xffffffe4
     974:	ldr	r0, [pc, #420]	; b20 <m_mkpasswd+0x2a0>
     978:	ldr	r0, [pc, r0]
     97c:	ldr	r1, [pc, #416]	; b24 <m_mkpasswd+0x2a4>
     980:	add	r1, pc, r1
     984:	ldr	r1, [r1]
     988:	ldr	r0, [r0, #184]	; 0xb8
     98c:	add	r0, r1, r0
     990:	str	r0, [sp, #32]
     994:	bl	69c <rb_current_time@plt>
     998:	ldr	r1, [sp, #32]
     99c:	cmp	r1, r0
     9a0:	ble	9e8 <m_mkpasswd+0x168>
     9a4:	ldr	r0, [pc, #408]	; b44 <m_mkpasswd+0x2c4>
     9a8:	add	r1, pc, r0
     9ac:	ldr	r0, [pc, #404]	; b48 <m_mkpasswd+0x2c8>
     9b0:	ldr	r0, [pc, r0]
     9b4:	add	r2, r0, #88	; 0x58
     9b8:	ldr	r0, [pc, #396]	; b4c <m_mkpasswd+0x2cc>
     9bc:	add	r0, pc, r0
     9c0:	ldr	r3, [fp, #-12]
     9c4:	ldr	ip, [fp, #-12]
     9c8:	add	ip, ip, #88	; 0x58
     9cc:	str	r0, [sp, #28]
     9d0:	mov	r0, r3
     9d4:	mov	r3, ip
     9d8:	ldr	ip, [sp, #28]
     9dc:	str	ip, [sp]
     9e0:	bl	6c0 <sendto_one@plt>
     9e4:	b	b14 <m_mkpasswd+0x294>
     9e8:	bl	69c <rb_current_time@plt>
     9ec:	ldr	lr, [pc, #308]	; b28 <m_mkpasswd+0x2a8>
     9f0:	add	lr, pc, lr
     9f4:	str	r0, [lr]
     9f8:	ldr	r0, [pc, #300]	; b2c <m_mkpasswd+0x2ac>
     9fc:	add	r1, pc, r0
     a00:	ldr	r0, [fp, #-28]	; 0xffffffe4
     a04:	bl	750 <irccmp@plt>
     a08:	cmp	r0, #0
     a0c:	bne	a20 <m_mkpasswd+0x1a0>
     a10:	movw	r0, #16
     a14:	bl	d9c <make_sha256_salt>
     a18:	str	r0, [fp, #-20]	; 0xffffffec
     a1c:	b	a8c <m_mkpasswd+0x20c>
     a20:	ldr	r0, [pc, #264]	; b30 <m_mkpasswd+0x2b0>
     a24:	add	r1, pc, r0
     a28:	ldr	r0, [fp, #-28]	; 0xffffffe4
     a2c:	bl	750 <irccmp@plt>
     a30:	cmp	r0, #0
     a34:	bne	a48 <m_mkpasswd+0x1c8>
     a38:	movw	r0, #16
     a3c:	bl	e54 <make_sha512_salt>
     a40:	str	r0, [fp, #-20]	; 0xffffffec
     a44:	b	a88 <m_mkpasswd+0x208>
     a48:	ldr	r0, [pc, #228]	; b34 <m_mkpasswd+0x2b4>
     a4c:	add	r1, pc, r0
     a50:	ldr	r0, [fp, #-28]	; 0xffffffe4
     a54:	bl	750 <irccmp@plt>
     a58:	cmp	r0, #0
     a5c:	bne	a70 <m_mkpasswd+0x1f0>
     a60:	movw	r0, #8
     a64:	bl	f0c <make_md5_salt>
     a68:	str	r0, [fp, #-20]	; 0xffffffec
     a6c:	b	a84 <m_mkpasswd+0x204>
     a70:	ldr	r0, [pc, #200]	; b40 <m_mkpasswd+0x2c0>
     a74:	add	r1, pc, r0
     a78:	ldr	r0, [fp, #-12]
     a7c:	bl	738 <sendto_one_notice@plt>
     a80:	b	b14 <m_mkpasswd+0x294>
     a84:	b	a88 <m_mkpasswd+0x208>
     a88:	b	a8c <m_mkpasswd+0x20c>
     a8c:	ldr	r0, [fp, #8]
     a90:	ldr	r0, [r0, #4]
     a94:	ldr	r1, [fp, #-20]	; 0xffffffec
     a98:	bl	6e4 <rb_crypt@plt>
     a9c:	str	r0, [fp, #-24]	; 0xffffffe8
     aa0:	ldr	r0, [fp, #-12]
     aa4:	ldr	r2, [fp, #-28]	; 0xffffffe4
     aa8:	ldr	r1, [fp, #8]
     aac:	ldr	r3, [r1, #4]
     ab0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     ab4:	movw	lr, #0
     ab8:	cmp	r1, lr
     abc:	str	r0, [sp, #24]
     ac0:	str	r2, [sp, #20]
     ac4:	str	r3, [sp, #16]
     ac8:	beq	ad8 <m_mkpasswd+0x258>
     acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ad0:	str	r0, [sp, #12]
     ad4:	b	ae8 <m_mkpasswd+0x268>
     ad8:	ldr	r0, [pc, #88]	; b38 <m_mkpasswd+0x2b8>
     adc:	add	r0, pc, r0
     ae0:	str	r0, [sp, #12]
     ae4:	b	ae8 <m_mkpasswd+0x268>
     ae8:	ldr	r0, [sp, #12]
     aec:	ldr	r1, [pc, #72]	; b3c <m_mkpasswd+0x2bc>
     af0:	add	r1, pc, r1
     af4:	ldr	r2, [sp, #24]
     af8:	str	r0, [sp, #8]
     afc:	mov	r0, r2
     b00:	ldr	r2, [sp, #20]
     b04:	ldr	r3, [sp, #16]
     b08:	ldr	ip, [sp, #8]
     b0c:	str	ip, [sp]
     b10:	bl	738 <sendto_one_notice@plt>
     b14:	mov	sp, fp
     b18:	pop	{fp, pc}
     b1c:	.word	0x00000926
     b20:	.word	0x000116e0
     b24:	.word	0x0001179c
     b28:	.word	0x0001172c
     b2c:	.word	0x00000855
     b30:	.word	0x00000796
     b34:	.word	0x0000080c
     b38:	.word	0x000007d1
     b3c:	.word	0x000007a7
     b40:	.word	0x000007e8
     b44:	.word	0x0000083e
     b48:	.word	0x000116a4
     b4c:	.word	0x000007f5
     b50:	.word	0x000008b1
     b54:	.word	0x0001173c
     b58:	.word	0x0000088d

00000b5c <mo_mkpasswd>:
     b5c:	push	{fp, lr}
     b60:	mov	fp, sp
     b64:	sub	sp, sp, #72	; 0x48
     b68:	ldr	ip, [fp, #8]
     b6c:	ldr	lr, [pc, #512]	; d74 <mo_mkpasswd+0x218>
     b70:	add	lr, pc, lr
     b74:	str	r0, [fp, #-4]
     b78:	str	r1, [fp, #-8]
     b7c:	str	r2, [fp, #-12]
     b80:	str	r3, [fp, #-16]
     b84:	ldrb	r0, [lr]
     b88:	strb	r0, [fp, #-35]	; 0xffffffdd
     b8c:	ldrb	r0, [lr, #1]
     b90:	strb	r0, [fp, #-34]	; 0xffffffde
     b94:	ldrb	r0, [lr, #2]
     b98:	strb	r0, [fp, #-33]	; 0xffffffdf
     b9c:	ldrb	r0, [lr, #3]
     ba0:	strb	r0, [fp, #-32]	; 0xffffffe0
     ba4:	ldrb	r0, [lr, #4]
     ba8:	strb	r0, [fp, #-31]	; 0xffffffe1
     bac:	ldrb	r0, [lr, #5]
     bb0:	strb	r0, [fp, #-30]	; 0xffffffe2
     bb4:	ldrb	r0, [lr, #6]
     bb8:	strb	r0, [fp, #-29]	; 0xffffffe3
     bbc:	ldr	r0, [fp, #8]
     bc0:	ldr	r0, [r0, #4]
     bc4:	movw	r1, #0
     bc8:	cmp	r0, r1
     bcc:	str	ip, [sp, #32]
     bd0:	beq	be8 <mo_mkpasswd+0x8c>
     bd4:	ldr	r0, [fp, #8]
     bd8:	ldr	r0, [r0, #4]
     bdc:	ldrb	r0, [r0]
     be0:	cmp	r0, #0
     be4:	bne	c2c <mo_mkpasswd+0xd0>
     be8:	ldr	r0, [pc, #416]	; d90 <mo_mkpasswd+0x234>
     bec:	add	r1, pc, r0
     bf0:	ldr	r0, [pc, #412]	; d94 <mo_mkpasswd+0x238>
     bf4:	ldr	r0, [pc, r0]
     bf8:	add	r2, r0, #88	; 0x58
     bfc:	ldr	r0, [pc, #404]	; d98 <mo_mkpasswd+0x23c>
     c00:	add	r0, pc, r0
     c04:	ldr	r3, [fp, #-12]
     c08:	ldr	ip, [fp, #-12]
     c0c:	add	ip, ip, #88	; 0x58
     c10:	str	r0, [sp, #28]
     c14:	mov	r0, r3
     c18:	mov	r3, ip
     c1c:	ldr	ip, [sp, #28]
     c20:	str	ip, [sp]
     c24:	bl	6c0 <sendto_one@plt>
     c28:	b	d6c <mo_mkpasswd+0x210>
     c2c:	ldr	r0, [fp, #-16]
     c30:	cmp	r0, #3
     c34:	bge	c44 <mo_mkpasswd+0xe8>
     c38:	sub	r0, fp, #35	; 0x23
     c3c:	str	r0, [fp, #-28]	; 0xffffffe4
     c40:	b	c50 <mo_mkpasswd+0xf4>
     c44:	ldr	r0, [fp, #8]
     c48:	ldr	r0, [r0, #8]
     c4c:	str	r0, [fp, #-28]	; 0xffffffe4
     c50:	ldr	r0, [pc, #288]	; d78 <mo_mkpasswd+0x21c>
     c54:	add	r1, pc, r0
     c58:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c5c:	bl	750 <irccmp@plt>
     c60:	cmp	r0, #0
     c64:	bne	c78 <mo_mkpasswd+0x11c>
     c68:	movw	r0, #16
     c6c:	bl	d9c <make_sha256_salt>
     c70:	str	r0, [fp, #-20]	; 0xffffffec
     c74:	b	ce4 <mo_mkpasswd+0x188>
     c78:	ldr	r0, [pc, #252]	; d7c <mo_mkpasswd+0x220>
     c7c:	add	r1, pc, r0
     c80:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c84:	bl	750 <irccmp@plt>
     c88:	cmp	r0, #0
     c8c:	bne	ca0 <mo_mkpasswd+0x144>
     c90:	movw	r0, #16
     c94:	bl	e54 <make_sha512_salt>
     c98:	str	r0, [fp, #-20]	; 0xffffffec
     c9c:	b	ce0 <mo_mkpasswd+0x184>
     ca0:	ldr	r0, [pc, #216]	; d80 <mo_mkpasswd+0x224>
     ca4:	add	r1, pc, r0
     ca8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     cac:	bl	750 <irccmp@plt>
     cb0:	cmp	r0, #0
     cb4:	bne	cc8 <mo_mkpasswd+0x16c>
     cb8:	movw	r0, #8
     cbc:	bl	f0c <make_md5_salt>
     cc0:	str	r0, [fp, #-20]	; 0xffffffec
     cc4:	b	cdc <mo_mkpasswd+0x180>
     cc8:	ldr	r0, [pc, #188]	; d8c <mo_mkpasswd+0x230>
     ccc:	add	r1, pc, r0
     cd0:	ldr	r0, [fp, #-12]
     cd4:	bl	738 <sendto_one_notice@plt>
     cd8:	b	d6c <mo_mkpasswd+0x210>
     cdc:	b	ce0 <mo_mkpasswd+0x184>
     ce0:	b	ce4 <mo_mkpasswd+0x188>
     ce4:	ldr	r0, [fp, #8]
     ce8:	ldr	r0, [r0, #4]
     cec:	ldr	r1, [fp, #-20]	; 0xffffffec
     cf0:	bl	6e4 <rb_crypt@plt>
     cf4:	str	r0, [fp, #-24]	; 0xffffffe8
     cf8:	ldr	r0, [fp, #-12]
     cfc:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d00:	ldr	r1, [fp, #8]
     d04:	ldr	r3, [r1, #4]
     d08:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d0c:	movw	lr, #0
     d10:	cmp	r1, lr
     d14:	str	r0, [sp, #24]
     d18:	str	r2, [sp, #20]
     d1c:	str	r3, [sp, #16]
     d20:	beq	d30 <mo_mkpasswd+0x1d4>
     d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d28:	str	r0, [sp, #12]
     d2c:	b	d40 <mo_mkpasswd+0x1e4>
     d30:	ldr	r0, [pc, #76]	; d84 <mo_mkpasswd+0x228>
     d34:	add	r0, pc, r0
     d38:	str	r0, [sp, #12]
     d3c:	b	d40 <mo_mkpasswd+0x1e4>
     d40:	ldr	r0, [sp, #12]
     d44:	ldr	r1, [pc, #60]	; d88 <mo_mkpasswd+0x22c>
     d48:	add	r1, pc, r1
     d4c:	ldr	r2, [sp, #24]
     d50:	str	r0, [sp, #8]
     d54:	mov	r0, r2
     d58:	ldr	r2, [sp, #20]
     d5c:	ldr	r3, [sp, #16]
     d60:	ldr	ip, [sp, #8]
     d64:	str	ip, [sp]
     d68:	bl	738 <sendto_one_notice@plt>
     d6c:	mov	sp, fp
     d70:	pop	{fp, pc}
     d74:	.word	0x0000064a
     d78:	.word	0x000005fd
     d7c:	.word	0x0000053e
     d80:	.word	0x000005b4
     d84:	.word	0x00000579
     d88:	.word	0x0000054f
     d8c:	.word	0x00000590
     d90:	.word	0x000005d5
     d94:	.word	0x00011460
     d98:	.word	0x000005b1

00000d9c <make_sha256_salt>:
     d9c:	push	{fp, lr}
     da0:	mov	fp, sp
     da4:	sub	sp, sp, #16
     da8:	str	r0, [fp, #-4]
     dac:	ldr	r0, [fp, #-4]
     db0:	cmp	r0, #16
     db4:	ble	dd4 <make_sha256_salt+0x38>
     db8:	ldr	r0, [pc, #144]	; e50 <make_sha256_salt+0xb4>
     dbc:	add	r0, pc, r0
     dc0:	bl	6b4 <printf@plt>
     dc4:	movw	lr, #0
     dc8:	str	r0, [sp, #8]
     dcc:	mov	r0, lr
     dd0:	bl	708 <exit@plt>
     dd4:	ldr	r0, [pc, #112]	; e4c <make_sha256_salt+0xb0>
     dd8:	add	r0, pc, r0
     ddc:	add	r1, r0, #3
     de0:	movw	r2, #36	; 0x24
     de4:	strb	r2, [r0]
     de8:	movw	r3, #53	; 0x35
     dec:	strb	r3, [r0, #1]
     df0:	strb	r2, [r0, #2]
     df4:	ldr	r0, [fp, #-4]
     df8:	str	r0, [sp, #4]
     dfc:	mov	r0, r1
     e00:	ldr	r1, [sp, #4]
     e04:	bl	fc4 <generate_random_salt>
     e08:	ldr	r1, [pc, #56]	; e48 <make_sha256_salt+0xac>
     e0c:	add	r1, pc, r1
     e10:	ldr	r2, [fp, #-4]
     e14:	add	r2, r2, #3
     e18:	add	r2, r1, r2
     e1c:	movw	r3, #36	; 0x24
     e20:	strb	r3, [r2]
     e24:	ldr	r2, [fp, #-4]
     e28:	add	r2, r2, #4
     e2c:	add	r2, r1, r2
     e30:	movw	r3, #0
     e34:	strb	r3, [r2]
     e38:	str	r0, [sp]
     e3c:	mov	r0, r1
     e40:	mov	sp, fp
     e44:	pop	{fp, pc}
     e48:	.word	0x00011314
     e4c:	.word	0x00011348
     e50:	.word	0x000004f5

00000e54 <make_sha512_salt>:
     e54:	push	{fp, lr}
     e58:	mov	fp, sp
     e5c:	sub	sp, sp, #16
     e60:	str	r0, [fp, #-4]
     e64:	ldr	r0, [fp, #-4]
     e68:	cmp	r0, #16
     e6c:	ble	e8c <make_sha512_salt+0x38>
     e70:	ldr	r0, [pc, #144]	; f08 <make_sha512_salt+0xb4>
     e74:	add	r0, pc, r0
     e78:	bl	6b4 <printf@plt>
     e7c:	movw	lr, #0
     e80:	str	r0, [sp, #8]
     e84:	mov	r0, lr
     e88:	bl	708 <exit@plt>
     e8c:	ldr	r0, [pc, #112]	; f04 <make_sha512_salt+0xb0>
     e90:	add	r0, pc, r0
     e94:	add	r1, r0, #3
     e98:	movw	r2, #36	; 0x24
     e9c:	strb	r2, [r0]
     ea0:	movw	r3, #54	; 0x36
     ea4:	strb	r3, [r0, #1]
     ea8:	strb	r2, [r0, #2]
     eac:	ldr	r0, [fp, #-4]
     eb0:	str	r0, [sp, #4]
     eb4:	mov	r0, r1
     eb8:	ldr	r1, [sp, #4]
     ebc:	bl	fc4 <generate_random_salt>
     ec0:	ldr	r1, [pc, #56]	; f00 <make_sha512_salt+0xac>
     ec4:	add	r1, pc, r1
     ec8:	ldr	r2, [fp, #-4]
     ecc:	add	r2, r2, #3
     ed0:	add	r2, r1, r2
     ed4:	movw	r3, #36	; 0x24
     ed8:	strb	r3, [r2]
     edc:	ldr	r2, [fp, #-4]
     ee0:	add	r2, r2, #4
     ee4:	add	r2, r1, r2
     ee8:	movw	r3, #0
     eec:	strb	r3, [r2]
     ef0:	str	r0, [sp]
     ef4:	mov	r0, r1
     ef8:	mov	sp, fp
     efc:	pop	{fp, pc}
     f00:	.word	0x00011271
     f04:	.word	0x000112a5
     f08:	.word	0x00000467

00000f0c <make_md5_salt>:
     f0c:	push	{fp, lr}
     f10:	mov	fp, sp
     f14:	sub	sp, sp, #16
     f18:	str	r0, [fp, #-4]
     f1c:	ldr	r0, [fp, #-4]
     f20:	cmp	r0, #16
     f24:	ble	f44 <make_md5_salt+0x38>
     f28:	ldr	r0, [pc, #144]	; fc0 <make_md5_salt+0xb4>
     f2c:	add	r0, pc, r0
     f30:	bl	6b4 <printf@plt>
     f34:	movw	lr, #0
     f38:	str	r0, [sp, #8]
     f3c:	mov	r0, lr
     f40:	bl	708 <exit@plt>
     f44:	ldr	r0, [pc, #112]	; fbc <make_md5_salt+0xb0>
     f48:	add	r0, pc, r0
     f4c:	add	r1, r0, #3
     f50:	movw	r2, #36	; 0x24
     f54:	strb	r2, [r0]
     f58:	movw	r3, #49	; 0x31
     f5c:	strb	r3, [r0, #1]
     f60:	strb	r2, [r0, #2]
     f64:	ldr	r0, [fp, #-4]
     f68:	str	r0, [sp, #4]
     f6c:	mov	r0, r1
     f70:	ldr	r1, [sp, #4]
     f74:	bl	fc4 <generate_random_salt>
     f78:	ldr	r1, [pc, #56]	; fb8 <make_md5_salt+0xac>
     f7c:	add	r1, pc, r1
     f80:	ldr	r2, [fp, #-4]
     f84:	add	r2, r2, #3
     f88:	add	r2, r1, r2
     f8c:	movw	r3, #36	; 0x24
     f90:	strb	r3, [r2]
     f94:	ldr	r2, [fp, #-4]
     f98:	add	r2, r2, #4
     f9c:	add	r2, r1, r2
     fa0:	movw	r3, #0
     fa4:	strb	r3, [r2]
     fa8:	str	r0, [sp]
     fac:	mov	r0, r1
     fb0:	mov	sp, fp
     fb4:	pop	{fp, pc}
     fb8:	.word	0x000111ce
     fbc:	.word	0x00011202
     fc0:	.word	0x000003cc

00000fc4 <generate_random_salt>:
     fc4:	push	{fp, lr}
     fc8:	mov	fp, sp
     fcc:	sub	sp, sp, #40	; 0x28
     fd0:	ldr	r2, [pc, #272]	; 10e8 <generate_random_salt+0x124>
     fd4:	add	r2, pc, r2
     fd8:	str	r0, [fp, #-8]
     fdc:	str	r1, [fp, #-12]
     fe0:	mov	r0, r2
     fe4:	movw	r1, #0
     fe8:	bl	6fc <open@plt>
     fec:	str	r0, [fp, #-16]
     ff0:	cmp	r0, #0
     ff4:	bge	100c <generate_random_salt+0x48>
     ff8:	ldr	r0, [fp, #-8]
     ffc:	ldr	r1, [fp, #-12]
    1000:	bl	10f0 <generate_poor_salt>
    1004:	str	r0, [fp, #-4]
    1008:	b	10dc <generate_random_salt+0x118>
    100c:	ldr	r0, [fp, #-16]
    1010:	ldr	r1, [fp, #-8]
    1014:	ldr	r2, [fp, #-12]
    1018:	bl	6cc <read@plt>
    101c:	ldr	r1, [fp, #-12]
    1020:	cmp	r0, r1
    1024:	beq	104c <generate_random_salt+0x88>
    1028:	ldr	r0, [fp, #-16]
    102c:	bl	744 <close@plt>
    1030:	ldr	lr, [fp, #-8]
    1034:	ldr	r1, [fp, #-12]
    1038:	str	r0, [sp, #16]
    103c:	mov	r0, lr
    1040:	bl	10f0 <generate_poor_salt>
    1044:	str	r0, [fp, #-4]
    1048:	b	10dc <generate_random_salt+0x118>
    104c:	movw	r0, #0
    1050:	str	r0, [sp, #20]
    1054:	ldr	r0, [sp, #20]
    1058:	ldr	r1, [fp, #-12]
    105c:	cmp	r0, r1
    1060:	bge	10c8 <generate_random_salt+0x104>
    1064:	ldr	r0, [pc, #128]	; 10ec <generate_random_salt+0x128>
    1068:	add	r0, pc, r0
    106c:	ldr	r1, [fp, #-8]
    1070:	ldr	r2, [sp, #20]
    1074:	ldrb	r1, [r1, r2]
    1078:	str	r0, [sp, #12]
    107c:	mov	r0, r1
    1080:	bl	72c <abs@plt>
    1084:	mov	r1, r0
    1088:	asr	r2, r0, #31
    108c:	add	r2, r0, r2, lsr #26
    1090:	bic	r2, r2, #63	; 0x3f
    1094:	sub	r0, r0, r2
    1098:	ldr	r2, [sp, #12]
    109c:	add	r0, r2, r0
    10a0:	ldrb	r0, [r0]
    10a4:	ldr	lr, [fp, #-8]
    10a8:	ldr	r3, [sp, #20]
    10ac:	add	r3, lr, r3
    10b0:	strb	r0, [r3]
    10b4:	str	r1, [sp, #8]
    10b8:	ldr	r0, [sp, #20]
    10bc:	add	r0, r0, #1
    10c0:	str	r0, [sp, #20]
    10c4:	b	1054 <generate_random_salt+0x90>
    10c8:	ldr	r0, [fp, #-16]
    10cc:	bl	744 <close@plt>
    10d0:	ldr	lr, [fp, #-8]
    10d4:	str	lr, [fp, #-4]
    10d8:	str	r0, [sp, #4]
    10dc:	ldr	r0, [fp, #-4]
    10e0:	mov	sp, fp
    10e4:	pop	{fp, pc}
    10e8:	.word	0x000002fa
    10ec:	.word	0x0001106c

000010f0 <generate_poor_salt>:
    10f0:	push	{fp, lr}
    10f4:	mov	fp, sp
    10f8:	sub	sp, sp, #24
    10fc:	str	r0, [fp, #-4]
    1100:	str	r1, [fp, #-8]
    1104:	movw	r0, #0
    1108:	bl	6d8 <time@plt>
    110c:	bl	714 <srand@plt>
    1110:	movw	r0, #0
    1114:	str	r0, [sp, #12]
    1118:	ldr	r0, [sp, #12]
    111c:	ldr	r1, [fp, #-8]
    1120:	cmp	r0, r1
    1124:	bge	117c <generate_poor_salt+0x8c>
    1128:	ldr	r0, [pc, #88]	; 1188 <generate_poor_salt+0x98>
    112c:	add	r0, pc, r0
    1130:	str	r0, [sp, #8]
    1134:	bl	720 <rand@plt>
    1138:	mov	lr, r0
    113c:	asr	r1, r0, #31
    1140:	add	r1, r0, r1, lsr #26
    1144:	bic	r1, r1, #63	; 0x3f
    1148:	sub	r0, r0, r1
    114c:	ldr	r1, [sp, #8]
    1150:	add	r0, r1, r0
    1154:	ldrb	r0, [r0]
    1158:	ldr	r2, [fp, #-4]
    115c:	ldr	r3, [sp, #12]
    1160:	add	r2, r2, r3
    1164:	strb	r0, [r2]
    1168:	str	lr, [sp, #4]
    116c:	ldr	r0, [sp, #12]
    1170:	add	r0, r0, #1
    1174:	str	r0, [sp, #12]
    1178:	b	1118 <generate_poor_salt+0x28>
    117c:	ldr	r0, [fp, #-4]
    1180:	mov	sp, fp
    1184:	pop	{fp, pc}
    1188:	.word	0x00010fa8

Disassembly of section .fini:

0000118c <_fini>:
    118c:	push	{r3, lr}
    1190:	pop	{r3, pc}
