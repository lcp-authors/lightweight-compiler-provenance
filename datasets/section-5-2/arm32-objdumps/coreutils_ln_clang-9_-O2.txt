
../repos/coreutils/src/ln:     file format elf32-littlearm


Disassembly of section .init:

00011320 <.init>:
   11320:	push	{r3, lr}
   11324:	bl	1170c <__mempcpy_chk@plt+0x48>
   11328:	pop	{r3, pc}

Disassembly of section .plt:

0001132c <calloc@plt-0x14>:
   1132c:	push	{lr}		; (str lr, [sp, #-4]!)
   11330:	ldr	lr, [pc, #4]	; 1133c <calloc@plt-0x4>
   11334:	add	lr, pc, lr
   11338:	ldr	pc, [lr, #8]!
   1133c:	andeq	sl, r1, r4, asr #25

00011340 <calloc@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #106496	; 0x1a000
   11348:	ldr	pc, [ip, #3268]!	; 0xcc4

0001134c <fputs_unlocked@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #106496	; 0x1a000
   11354:	ldr	pc, [ip, #3260]!	; 0xcbc

00011358 <raise@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #106496	; 0x1a000
   11360:	ldr	pc, [ip, #3252]!	; 0xcb4

00011364 <__getdelim@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #106496	; 0x1a000
   1136c:	ldr	pc, [ip, #3244]!	; 0xcac

00011370 <strcmp@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #106496	; 0x1a000
   11378:	ldr	pc, [ip, #3236]!	; 0xca4

0001137c <pathconf@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #106496	; 0x1a000
   11384:	ldr	pc, [ip, #3228]!	; 0xc9c

00011388 <rewinddir@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #106496	; 0x1a000
   11390:	ldr	pc, [ip, #3220]!	; 0xc94

00011394 <fflush@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #106496	; 0x1a000
   1139c:	ldr	pc, [ip, #3212]!	; 0xc8c

000113a0 <unlinkat@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #106496	; 0x1a000
   113a8:	ldr	pc, [ip, #3204]!	; 0xc84

000113ac <memmove@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #106496	; 0x1a000
   113b4:	ldr	pc, [ip, #3196]!	; 0xc7c

000113b8 <free@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #106496	; 0x1a000
   113c0:	ldr	pc, [ip, #3188]!	; 0xc74

000113c4 <faccessat@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #106496	; 0x1a000
   113cc:	ldr	pc, [ip, #3180]!	; 0xc6c

000113d0 <clock_gettime@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #106496	; 0x1a000
   113d8:	ldr	pc, [ip, #3172]!	; 0xc64

000113dc <_exit@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #106496	; 0x1a000
   113e4:	ldr	pc, [ip, #3164]!	; 0xc5c

000113e8 <memcpy@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #106496	; 0x1a000
   113f0:	ldr	pc, [ip, #3156]!	; 0xc54

000113f4 <mbsinit@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #106496	; 0x1a000
   113fc:	ldr	pc, [ip, #3148]!	; 0xc4c

00011400 <memcmp@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #106496	; 0x1a000
   11408:	ldr	pc, [ip, #3140]!	; 0xc44

0001140c <dcgettext@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #106496	; 0x1a000
   11414:	ldr	pc, [ip, #3132]!	; 0xc3c

00011418 <realloc@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #106496	; 0x1a000
   11420:	ldr	pc, [ip, #3124]!	; 0xc34

00011424 <textdomain@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #106496	; 0x1a000
   1142c:	ldr	pc, [ip, #3116]!	; 0xc2c

00011430 <rawmemchr@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #106496	; 0x1a000
   11438:	ldr	pc, [ip, #3108]!	; 0xc24

0001143c <__fxstatat64@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #106496	; 0x1a000
   11444:	ldr	pc, [ip, #3100]!	; 0xc1c

00011448 <iswprint@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #106496	; 0x1a000
   11450:	ldr	pc, [ip, #3092]!	; 0xc14

00011454 <readlink@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #106496	; 0x1a000
   1145c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011460 <fwrite@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #106496	; 0x1a000
   11468:	ldr	pc, [ip, #3076]!	; 0xc04

0001146c <lseek64@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #106496	; 0x1a000
   11474:	ldr	pc, [ip, #3068]!	; 0xbfc

00011478 <__ctype_get_mb_cur_max@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #106496	; 0x1a000
   11480:	ldr	pc, [ip, #3060]!	; 0xbf4

00011484 <strcpy@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #106496	; 0x1a000
   1148c:	ldr	pc, [ip, #3052]!	; 0xbec

00011490 <__fpending@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #106496	; 0x1a000
   11498:	ldr	pc, [ip, #3044]!	; 0xbe4

0001149c <mbrtowc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #106496	; 0x1a000
   114a4:	ldr	pc, [ip, #3036]!	; 0xbdc

000114a8 <error@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #106496	; 0x1a000
   114b0:	ldr	pc, [ip, #3028]!	; 0xbd4

000114b4 <open64@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #106496	; 0x1a000
   114bc:	ldr	pc, [ip, #3020]!	; 0xbcc

000114c0 <getenv@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #106496	; 0x1a000
   114c8:	ldr	pc, [ip, #3012]!	; 0xbc4

000114cc <malloc@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #106496	; 0x1a000
   114d4:	ldr	pc, [ip, #3004]!	; 0xbbc

000114d8 <__libc_start_main@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #106496	; 0x1a000
   114e0:	ldr	pc, [ip, #2996]!	; 0xbb4

000114e4 <__freading@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #106496	; 0x1a000
   114ec:	ldr	pc, [ip, #2988]!	; 0xbac

000114f0 <__gmon_start__@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #106496	; 0x1a000
   114f8:	ldr	pc, [ip, #2980]!	; 0xba4

000114fc <getopt_long@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #106496	; 0x1a000
   11504:	ldr	pc, [ip, #2972]!	; 0xb9c

00011508 <__ctype_b_loc@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #106496	; 0x1a000
   11510:	ldr	pc, [ip, #2964]!	; 0xb94

00011514 <getcwd@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #106496	; 0x1a000
   1151c:	ldr	pc, [ip, #2956]!	; 0xb8c

00011520 <exit@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #106496	; 0x1a000
   11528:	ldr	pc, [ip, #2948]!	; 0xb84

0001152c <bcmp@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #106496	; 0x1a000
   11534:	ldr	pc, [ip, #2940]!	; 0xb7c

00011538 <strlen@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #106496	; 0x1a000
   11540:	ldr	pc, [ip, #2932]!	; 0xb74

00011544 <openat64@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #106496	; 0x1a000
   1154c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011550 <__errno_location@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #106496	; 0x1a000
   11558:	ldr	pc, [ip, #2916]!	; 0xb64

0001155c <__cxa_atexit@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #106496	; 0x1a000
   11564:	ldr	pc, [ip, #2908]!	; 0xb5c

00011568 <mkdir@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #106496	; 0x1a000
   11570:	ldr	pc, [ip, #2900]!	; 0xb54

00011574 <memset@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #106496	; 0x1a000
   1157c:	ldr	pc, [ip, #2892]!	; 0xb4c

00011580 <fpathconf@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #106496	; 0x1a000
   11588:	ldr	pc, [ip, #2884]!	; 0xb44

0001158c <renameat2@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #106496	; 0x1a000
   11594:	ldr	pc, [ip, #2876]!	; 0xb3c

00011598 <__printf_chk@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #106496	; 0x1a000
   115a0:	ldr	pc, [ip, #2868]!	; 0xb34

000115a4 <fileno@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #106496	; 0x1a000
   115ac:	ldr	pc, [ip, #2860]!	; 0xb2c

000115b0 <__fprintf_chk@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #106496	; 0x1a000
   115b8:	ldr	pc, [ip, #2852]!	; 0xb24

000115bc <fclose@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #106496	; 0x1a000
   115c4:	ldr	pc, [ip, #2844]!	; 0xb1c

000115c8 <linkat@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #106496	; 0x1a000
   115d0:	ldr	pc, [ip, #2836]!	; 0xb14

000115d4 <fseeko64@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #106496	; 0x1a000
   115dc:	ldr	pc, [ip, #2828]!	; 0xb0c

000115e0 <fcntl64@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #106496	; 0x1a000
   115e8:	ldr	pc, [ip, #2820]!	; 0xb04

000115ec <rpmatch@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #106496	; 0x1a000
   115f4:	ldr	pc, [ip, #2812]!	; 0xafc

000115f8 <__overflow@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #106496	; 0x1a000
   11600:	ldr	pc, [ip, #2804]!	; 0xaf4

00011604 <setlocale@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #106496	; 0x1a000
   1160c:	ldr	pc, [ip, #2796]!	; 0xaec

00011610 <strrchr@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #106496	; 0x1a000
   11618:	ldr	pc, [ip, #2788]!	; 0xae4

0001161c <nl_langinfo@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #106496	; 0x1a000
   11624:	ldr	pc, [ip, #2780]!	; 0xadc

00011628 <readdir64@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #106496	; 0x1a000
   11630:	ldr	pc, [ip, #2772]!	; 0xad4

00011634 <fdopendir@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #106496	; 0x1a000
   1163c:	ldr	pc, [ip, #2764]!	; 0xacc

00011640 <renameat@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #106496	; 0x1a000
   11648:	ldr	pc, [ip, #2756]!	; 0xac4

0001164c <bindtextdomain@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #106496	; 0x1a000
   11654:	ldr	pc, [ip, #2748]!	; 0xabc

00011658 <getrandom@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #106496	; 0x1a000
   11660:	ldr	pc, [ip, #2740]!	; 0xab4

00011664 <symlinkat@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #106496	; 0x1a000
   1166c:	ldr	pc, [ip, #2732]!	; 0xaac

00011670 <__xstat64@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #106496	; 0x1a000
   11678:	ldr	pc, [ip, #2724]!	; 0xaa4

0001167c <strncmp@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #106496	; 0x1a000
   11684:	ldr	pc, [ip, #2716]!	; 0xa9c

00011688 <abort@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #106496	; 0x1a000
   11690:	ldr	pc, [ip, #2708]!	; 0xa94

00011694 <close@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #106496	; 0x1a000
   1169c:	ldr	pc, [ip, #2700]!	; 0xa8c

000116a0 <__lxstat64@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #106496	; 0x1a000
   116a8:	ldr	pc, [ip, #2692]!	; 0xa84

000116ac <closedir@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #106496	; 0x1a000
   116b4:	ldr	pc, [ip, #2684]!	; 0xa7c

000116b8 <strspn@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #106496	; 0x1a000
   116c0:	ldr	pc, [ip, #2676]!	; 0xa74

000116c4 <__mempcpy_chk@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #106496	; 0x1a000
   116cc:	ldr	pc, [ip, #2668]!	; 0xa6c

Disassembly of section .text:

000116d0 <.text>:
   116d0:	mov	fp, #0
   116d4:	mov	lr, #0
   116d8:	pop	{r1}		; (ldr r1, [sp], #4)
   116dc:	mov	r2, sp
   116e0:	push	{r2}		; (str r2, [sp, #-4]!)
   116e4:	push	{r0}		; (str r0, [sp, #-4]!)
   116e8:	ldr	ip, [pc, #16]	; 11700 <__mempcpy_chk@plt+0x3c>
   116ec:	push	{ip}		; (str ip, [sp, #-4]!)
   116f0:	ldr	r0, [pc, #12]	; 11704 <__mempcpy_chk@plt+0x40>
   116f4:	ldr	r3, [pc, #12]	; 11708 <__mempcpy_chk@plt+0x44>
   116f8:	bl	114d8 <__libc_start_main@plt>
   116fc:	bl	11688 <abort@plt>
   11700:	andeq	r9, r1, r4, asr #31
   11704:	andeq	r1, r1, r0, ror #21
   11708:	andeq	r9, r1, r4, ror #30
   1170c:	ldr	r3, [pc, #20]	; 11728 <__mempcpy_chk@plt+0x64>
   11710:	ldr	r2, [pc, #20]	; 1172c <__mempcpy_chk@plt+0x68>
   11714:	add	r3, pc, r3
   11718:	ldr	r2, [r3, r2]
   1171c:	cmp	r2, #0
   11720:	bxeq	lr
   11724:	b	114f0 <__gmon_start__@plt>
   11728:	andeq	sl, r1, r4, ror #17
   1172c:	andeq	r0, r0, ip, lsr r1
   11730:	ldr	r0, [pc, #24]	; 11750 <__mempcpy_chk@plt+0x8c>
   11734:	ldr	r3, [pc, #24]	; 11754 <__mempcpy_chk@plt+0x90>
   11738:	cmp	r3, r0
   1173c:	bxeq	lr
   11740:	ldr	r3, [pc, #16]	; 11758 <__mempcpy_chk@plt+0x94>
   11744:	cmp	r3, #0
   11748:	bxeq	lr
   1174c:	bx	r3
   11750:	muleq	r2, r4, r1
   11754:	muleq	r2, r4, r1
   11758:	andeq	r0, r0, r0
   1175c:	ldr	r0, [pc, #36]	; 11788 <__mempcpy_chk@plt+0xc4>
   11760:	ldr	r1, [pc, #36]	; 1178c <__mempcpy_chk@plt+0xc8>
   11764:	sub	r1, r1, r0
   11768:	asr	r1, r1, #2
   1176c:	add	r1, r1, r1, lsr #31
   11770:	asrs	r1, r1, #1
   11774:	bxeq	lr
   11778:	ldr	r3, [pc, #16]	; 11790 <__mempcpy_chk@plt+0xcc>
   1177c:	cmp	r3, #0
   11780:	bxeq	lr
   11784:	bx	r3
   11788:	muleq	r2, r4, r1
   1178c:	muleq	r2, r4, r1
   11790:	andeq	r0, r0, r0
   11794:	push	{r4, lr}
   11798:	ldr	r4, [pc, #24]	; 117b8 <__mempcpy_chk@plt+0xf4>
   1179c:	ldrb	r3, [r4]
   117a0:	cmp	r3, #0
   117a4:	popne	{r4, pc}
   117a8:	bl	11730 <__mempcpy_chk@plt+0x6c>
   117ac:	mov	r3, #1
   117b0:	strb	r3, [r4]
   117b4:	pop	{r4, pc}
   117b8:			; <UNDEFINED> instruction: 0x0002c1bc
   117bc:	b	1175c <__mempcpy_chk@plt+0x98>
   117c0:	push	{fp, lr}
   117c4:	mov	fp, sp
   117c8:	sub	sp, sp, #64	; 0x40
   117cc:	mov	r4, r0
   117d0:	cmp	r0, #0
   117d4:	bne	11a9c <__mempcpy_chk@plt+0x3d8>
   117d8:	movw	r1, #40979	; 0xa013
   117dc:	mov	r0, #0
   117e0:	mov	r2, #5
   117e4:	movt	r1, #1
   117e8:	bl	1140c <dcgettext@plt>
   117ec:	mov	r1, r0
   117f0:	movw	r0, #49632	; 0xc1e0
   117f4:	movt	r0, #2
   117f8:	ldr	r2, [r0]
   117fc:	mov	r0, #1
   11800:	mov	r3, r2
   11804:	str	r2, [sp]
   11808:	str	r2, [sp, #4]
   1180c:	bl	11598 <__printf_chk@plt>
   11810:	movw	r1, #41140	; 0xa0b4
   11814:	mov	r0, #0
   11818:	mov	r2, #5
   1181c:	movt	r1, #1
   11820:	bl	1140c <dcgettext@plt>
   11824:	movw	r7, #49588	; 0xc1b4
   11828:	movt	r7, #2
   1182c:	ldr	r1, [r7]
   11830:	bl	1134c <fputs_unlocked@plt>
   11834:	movw	r1, #43533	; 0xaa0d
   11838:	mov	r0, #0
   1183c:	mov	r2, #5
   11840:	movt	r1, #1
   11844:	bl	1140c <dcgettext@plt>
   11848:	ldr	r1, [r7]
   1184c:	bl	1134c <fputs_unlocked@plt>
   11850:	movw	r1, #41656	; 0xa2b8
   11854:	mov	r0, #0
   11858:	mov	r2, #5
   1185c:	movt	r1, #1
   11860:	bl	1140c <dcgettext@plt>
   11864:	ldr	r1, [r7]
   11868:	bl	1134c <fputs_unlocked@plt>
   1186c:	movw	r1, #42103	; 0xa477
   11870:	mov	r0, #0
   11874:	mov	r2, #5
   11878:	movt	r1, #1
   1187c:	bl	1140c <dcgettext@plt>
   11880:	ldr	r1, [r7]
   11884:	bl	1134c <fputs_unlocked@plt>
   11888:	movw	r1, #42604	; 0xa66c
   1188c:	mov	r0, #0
   11890:	mov	r2, #5
   11894:	movt	r1, #1
   11898:	bl	1140c <dcgettext@plt>
   1189c:	ldr	r1, [r7]
   118a0:	bl	1134c <fputs_unlocked@plt>
   118a4:	movw	r1, #42918	; 0xa7a6
   118a8:	mov	r0, #0
   118ac:	mov	r2, #5
   118b0:	movt	r1, #1
   118b4:	bl	1140c <dcgettext@plt>
   118b8:	ldr	r1, [r7]
   118bc:	bl	1134c <fputs_unlocked@plt>
   118c0:	movw	r1, #42963	; 0xa7d3
   118c4:	mov	r0, #0
   118c8:	mov	r2, #5
   118cc:	movt	r1, #1
   118d0:	bl	1140c <dcgettext@plt>
   118d4:	ldr	r1, [r7]
   118d8:	bl	1134c <fputs_unlocked@plt>
   118dc:	movw	r1, #43608	; 0xaa58
   118e0:	mov	r0, #0
   118e4:	mov	r2, #5
   118e8:	movt	r1, #1
   118ec:	bl	1140c <dcgettext@plt>
   118f0:	ldr	r1, [r7]
   118f4:	bl	1134c <fputs_unlocked@plt>
   118f8:	movw	r1, #43829	; 0xab35
   118fc:	mov	r0, #0
   11900:	mov	r2, #5
   11904:	movt	r1, #1
   11908:	bl	1140c <dcgettext@plt>
   1190c:	ldr	r1, [r7]
   11910:	bl	1134c <fputs_unlocked@plt>
   11914:	movw	r1, #43017	; 0xa809
   11918:	mov	r0, #0
   1191c:	mov	r2, #5
   11920:	movt	r1, #1
   11924:	bl	1140c <dcgettext@plt>
   11928:	movw	r2, #43155	; 0xa893
   1192c:	mov	r1, r0
   11930:	mov	r0, #1
   11934:	movt	r2, #1
   11938:	bl	11598 <__printf_chk@plt>
   1193c:	movw	r0, #45104	; 0xb030
   11940:	mov	r2, #48	; 0x30
   11944:	add	r6, sp, #8
   11948:	movw	r5, #43158	; 0xa896
   1194c:	movt	r0, #1
   11950:	movt	r5, #1
   11954:	add	r1, r0, #32
   11958:	add	r3, r0, #16
   1195c:	vld1.64	{d18-d19}, [r0], r2
   11960:	vld1.64	{d16-d17}, [r1]
   11964:	vld1.64	{d20-d21}, [r3]
   11968:	vldr	d22, [r0]
   1196c:	add	r1, r6, #32
   11970:	add	r0, r6, #16
   11974:	vst1.64	{d16-d17}, [r1]
   11978:	movw	r1, #44051	; 0xac13
   1197c:	vst1.64	{d20-d21}, [r0]
   11980:	mov	r0, r6
   11984:	movt	r1, #1
   11988:	vst1.64	{d18-d19}, [r0], r2
   1198c:	vstr	d22, [r0]
   11990:	mov	r0, r5
   11994:	bl	11370 <strcmp@plt>
   11998:	cmp	r0, #0
   1199c:	ldrne	r1, [r6, #8]!
   119a0:	cmpne	r1, #0
   119a4:	bne	11990 <__mempcpy_chk@plt+0x2cc>
   119a8:	movw	r1, #44146	; 0xac72
   119ac:	ldr	r6, [r6, #4]
   119b0:	mov	r0, #0
   119b4:	mov	r2, #5
   119b8:	movt	r1, #1
   119bc:	bl	1140c <dcgettext@plt>
   119c0:	movw	r2, #43289	; 0xa919
   119c4:	movw	r3, #44169	; 0xac89
   119c8:	mov	r1, r0
   119cc:	mov	r0, #1
   119d0:	movt	r2, #1
   119d4:	movt	r3, #1
   119d8:	bl	11598 <__printf_chk@plt>
   119dc:	cmp	r6, #0
   119e0:	mov	r0, #5
   119e4:	mov	r1, #0
   119e8:	moveq	r6, r5
   119ec:	bl	11604 <setlocale@plt>
   119f0:	cmp	r0, #0
   119f4:	beq	11a2c <__mempcpy_chk@plt+0x368>
   119f8:	movw	r1, #44209	; 0xacb1
   119fc:	mov	r2, #3
   11a00:	movt	r1, #1
   11a04:	bl	1167c <strncmp@plt>
   11a08:	cmp	r0, #0
   11a0c:	beq	11a2c <__mempcpy_chk@plt+0x368>
   11a10:	movw	r1, #44213	; 0xacb5
   11a14:	mov	r0, #0
   11a18:	mov	r2, #5
   11a1c:	movt	r1, #1
   11a20:	bl	1140c <dcgettext@plt>
   11a24:	ldr	r1, [r7]
   11a28:	bl	1134c <fputs_unlocked@plt>
   11a2c:	movw	r1, #44284	; 0xacfc
   11a30:	mov	r0, #0
   11a34:	mov	r2, #5
   11a38:	movt	r1, #1
   11a3c:	bl	1140c <dcgettext@plt>
   11a40:	movw	r2, #44169	; 0xac89
   11a44:	mov	r1, r0
   11a48:	mov	r0, #1
   11a4c:	mov	r3, r5
   11a50:	movt	r2, #1
   11a54:	bl	11598 <__printf_chk@plt>
   11a58:	movw	r1, #44311	; 0xad17
   11a5c:	mov	r0, #0
   11a60:	mov	r2, #5
   11a64:	movt	r1, #1
   11a68:	bl	1140c <dcgettext@plt>
   11a6c:	mov	r1, r0
   11a70:	movw	r0, #44079	; 0xac2f
   11a74:	movw	r3, #43828	; 0xab34
   11a78:	cmp	r6, r5
   11a7c:	mov	r2, r6
   11a80:	movt	r0, #1
   11a84:	movt	r3, #1
   11a88:	moveq	r3, r0
   11a8c:	mov	r0, #1
   11a90:	bl	11598 <__printf_chk@plt>
   11a94:	mov	r0, r4
   11a98:	bl	11520 <exit@plt>
   11a9c:	movw	r0, #49576	; 0xc1a8
   11aa0:	movw	r1, #40940	; 0x9fec
   11aa4:	mov	r2, #5
   11aa8:	movt	r0, #2
   11aac:	movt	r1, #1
   11ab0:	ldr	r5, [r0]
   11ab4:	mov	r0, #0
   11ab8:	bl	1140c <dcgettext@plt>
   11abc:	mov	r2, r0
   11ac0:	movw	r0, #49632	; 0xc1e0
   11ac4:	mov	r1, #1
   11ac8:	movt	r0, #2
   11acc:	ldr	r3, [r0]
   11ad0:	mov	r0, r5
   11ad4:	bl	115b0 <__fprintf_chk@plt>
   11ad8:	mov	r0, r4
   11adc:	bl	11520 <exit@plt>
   11ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ae4:	add	fp, sp, #28
   11ae8:	sub	sp, sp, #140	; 0x8c
   11aec:	mov	r7, r0
   11af0:	ldr	r0, [r1]
   11af4:	mov	r6, r1
   11af8:	bl	15ed8 <__mempcpy_chk@plt+0x4814>
   11afc:	movw	r1, #43828	; 0xab34
   11b00:	mov	r0, #6
   11b04:	movt	r1, #1
   11b08:	bl	11604 <setlocale@plt>
   11b0c:	movw	r4, #43293	; 0xa91d
   11b10:	movw	r1, #43161	; 0xa899
   11b14:	movt	r4, #1
   11b18:	movt	r1, #1
   11b1c:	mov	r0, r4
   11b20:	bl	1164c <bindtextdomain@plt>
   11b24:	mov	r0, r4
   11b28:	bl	11424 <textdomain@plt>
   11b2c:	movw	r0, #17308	; 0x439c
   11b30:	movt	r0, #1
   11b34:	bl	19fc8 <__mempcpy_chk@plt+0x8904>
   11b38:	movw	r0, #49600	; 0xc1c0
   11b3c:	mov	r8, #0
   11b40:	movw	r4, #43185	; 0xa8b1
   11b44:	movw	r5, #44848	; 0xaf30
   11b48:	mov	r1, #0
   11b4c:	mov	r9, #1
   11b50:	movt	r0, #2
   11b54:	str	r1, [sp, #20]
   11b58:	mov	r1, #0
   11b5c:	movt	r4, #1
   11b60:	movt	r5, #1
   11b64:	str	r1, [sp, #16]
   11b68:	mov	r1, #0
   11b6c:	strb	r8, [r0]
   11b70:	movw	r0, #49601	; 0xc1c1
   11b74:	str	r1, [sp, #28]
   11b78:	movt	r0, #2
   11b7c:	strb	r8, [r0]
   11b80:	movw	r0, #49602	; 0xc1c2
   11b84:	movt	r0, #2
   11b88:	strb	r8, [r0]
   11b8c:	movw	r0, #49603	; 0xc1c3
   11b90:	movt	r0, #2
   11b94:	strb	r8, [r0]
   11b98:	movw	r0, #49604	; 0xc1c4
   11b9c:	movt	r0, #2
   11ba0:	strb	r8, [r0]
   11ba4:	mov	r0, #0
   11ba8:	str	r0, [sp, #24]
   11bac:	mov	r0, #0
   11bb0:	b	11bc4 <__mempcpy_chk@plt+0x500>
   11bb4:	movw	r0, #49607	; 0xc1c7
   11bb8:	movt	r0, #2
   11bbc:	strb	r9, [r0]
   11bc0:	mov	r0, sl
   11bc4:	mov	sl, r0
   11bc8:	mov	r0, r7
   11bcc:	mov	r1, r6
   11bd0:	mov	r2, r4
   11bd4:	mov	r3, r5
   11bd8:	str	r8, [sp]
   11bdc:	bl	114fc <getopt_long@plt>
   11be0:	add	r1, r0, #3
   11be4:	cmp	r1, #121	; 0x79
   11be8:	bhi	12220 <__mempcpy_chk@plt+0xb5c>
   11bec:	add	r2, pc, #4
   11bf0:	mov	r0, #1
   11bf4:	ldr	pc, [r2, r1, lsl #2]
   11bf8:	andeq	r2, r1, r8, lsr #4
   11bfc:	andeq	r2, r1, ip, ror r2
   11c00:	strdeq	r1, [r1], -r4
   11c04:	andeq	r2, r1, r0, lsr #4
   11c08:	andeq	r2, r1, r0, lsr #4
   11c0c:	andeq	r2, r1, r0, lsr #4
   11c10:	andeq	r2, r1, r0, lsr #4
   11c14:	andeq	r2, r1, r0, lsr #4
   11c18:	andeq	r2, r1, r0, lsr #4
   11c1c:	andeq	r2, r1, r0, lsr #4
   11c20:	andeq	r2, r1, r0, lsr #4
   11c24:	andeq	r2, r1, r0, lsr #4
   11c28:	andeq	r2, r1, r0, lsr #4
   11c2c:	andeq	r2, r1, r0, lsr #4
   11c30:	andeq	r2, r1, r0, lsr #4
   11c34:	andeq	r2, r1, r0, lsr #4
   11c38:	andeq	r2, r1, r0, lsr #4
   11c3c:	andeq	r2, r1, r0, lsr #4
   11c40:	andeq	r2, r1, r0, lsr #4
   11c44:	andeq	r2, r1, r0, lsr #4
   11c48:	andeq	r2, r1, r0, lsr #4
   11c4c:	andeq	r2, r1, r0, lsr #4
   11c50:	andeq	r2, r1, r0, lsr #4
   11c54:	andeq	r2, r1, r0, lsr #4
   11c58:	andeq	r2, r1, r0, lsr #4
   11c5c:	andeq	r2, r1, r0, lsr #4
   11c60:	andeq	r2, r1, r0, lsr #4
   11c64:	andeq	r2, r1, r0, lsr #4
   11c68:	andeq	r2, r1, r0, lsr #4
   11c6c:	andeq	r2, r1, r0, lsr #4
   11c70:	andeq	r2, r1, r0, lsr #4
   11c74:	andeq	r2, r1, r0, lsr #4
   11c78:	andeq	r2, r1, r0, lsr #4
   11c7c:	andeq	r2, r1, r0, lsr #4
   11c80:	andeq	r2, r1, r0, lsr #4
   11c84:	andeq	r2, r1, r0, lsr #4
   11c88:	andeq	r2, r1, r0, lsr #4
   11c8c:	andeq	r2, r1, r0, lsr #4
   11c90:	andeq	r2, r1, r0, lsr #4
   11c94:	andeq	r2, r1, r0, lsr #4
   11c98:	andeq	r2, r1, r0, lsr #4
   11c9c:	andeq	r2, r1, r0, lsr #4
   11ca0:	andeq	r2, r1, r0, lsr #4
   11ca4:	andeq	r2, r1, r0, lsr #4
   11ca8:	andeq	r2, r1, r0, lsr #4
   11cac:	andeq	r2, r1, r0, lsr #4
   11cb0:	andeq	r2, r1, r0, lsr #4
   11cb4:	andeq	r2, r1, r0, lsr #4
   11cb8:	andeq	r2, r1, r0, lsr #4
   11cbc:	andeq	r2, r1, r0, lsr #4
   11cc0:	andeq	r2, r1, r0, lsr #4
   11cc4:	andeq	r2, r1, r0, lsr #4
   11cc8:	andeq	r2, r1, r0, lsr #4
   11ccc:	andeq	r2, r1, r0, lsr #4
   11cd0:	andeq	r2, r1, r0, lsr #4
   11cd4:	andeq	r2, r1, r0, lsr #4
   11cd8:	andeq	r2, r1, r0, lsr #4
   11cdc:	andeq	r2, r1, r0, lsr #4
   11ce0:	andeq	r2, r1, r0, lsr #4
   11ce4:	andeq	r2, r1, r0, lsr #4
   11ce8:	andeq	r2, r1, r0, lsr #4
   11cec:	andeq	r2, r1, r0, lsr #4
   11cf0:	andeq	r2, r1, r0, lsr #4
   11cf4:	andeq	r2, r1, r0, lsr #4
   11cf8:	andeq	r2, r1, r0, lsr #4
   11cfc:	andeq	r2, r1, r0, lsr #4
   11d00:	andeq	r2, r1, r0, lsr #4
   11d04:	andeq	r2, r1, r0, lsr #4
   11d08:	andeq	r2, r1, r0, lsr #4
   11d0c:	andeq	r2, r1, r0, lsr #4
   11d10:	andeq	r2, r1, r0, lsr #4
   11d14:	andeq	r2, r1, r0, lsr #4
   11d18:	andeq	r2, r1, r0, lsr #4
   11d1c:	andeq	r1, r1, r0, ror #27
   11d20:	andeq	r2, r1, r0, lsr #4
   11d24:	andeq	r2, r1, r0, lsr #4
   11d28:	andeq	r2, r1, r0, lsr #4
   11d2c:	andeq	r2, r1, r0, lsr #4
   11d30:	andeq	r2, r1, r0, lsr #4
   11d34:	andeq	r1, r1, r4, asr lr
   11d38:	andeq	r2, r1, r0, lsr #4
   11d3c:	andeq	r2, r1, r0, lsr #4
   11d40:	andeq	r2, r1, r0, lsr #4
   11d44:	strdeq	r1, [r1], -r8
   11d48:	andeq	r2, r1, r0, lsr #4
   11d4c:	andeq	r2, r1, r0, lsr #4
   11d50:	andeq	r1, r1, r0, ror #28
   11d54:	andeq	r1, r1, r4, asr #23
   11d58:	andeq	r2, r1, r0, lsr #4
   11d5c:	andeq	r2, r1, r0, lsr #4
   11d60:	andeq	r2, r1, r0, lsr #4
   11d64:	andeq	r2, r1, r0, lsr #4
   11d68:	andeq	r2, r1, r0, lsr #4
   11d6c:	andeq	r2, r1, r0, lsr #4
   11d70:	andeq	r2, r1, r0, lsr #4
   11d74:	andeq	r2, r1, r0, lsr #4
   11d78:	andeq	r2, r1, r0, lsr #4
   11d7c:	andeq	r2, r1, r0, lsr #4
   11d80:	andeq	r2, r1, r0, lsr #4
   11d84:	andeq	r2, r1, r0, lsr #4
   11d88:	andeq	r2, r1, r0, lsr #4
   11d8c:	andeq	r1, r1, r4, lsl #28
   11d90:	andeq	r2, r1, r0, lsr #4
   11d94:	andeq	r1, r1, r0, ror #27
   11d98:	andeq	r2, r1, r0, lsr #4
   11d9c:	andeq	r1, r1, r4, lsr #28
   11da0:	andeq	r2, r1, r0, lsr #4
   11da4:	andeq	r2, r1, r0, lsr #4
   11da8:	andeq	r1, r1, r0, lsl #29
   11dac:	andeq	r2, r1, r0, lsr #4
   11db0:	andeq	r2, r1, r0, lsr #4
   11db4:	andeq	r2, r1, r0, lsr #4
   11db8:	andeq	r2, r1, r0, lsr #4
   11dbc:	andeq	r1, r1, ip, lsr lr
   11dc0:	andeq	r2, r1, r0, lsr #4
   11dc4:	andeq	r2, r1, r0, lsr #4
   11dc8:	andeq	r2, r1, r0, lsr #4
   11dcc:			; <UNDEFINED> instruction: 0x00011bb4
   11dd0:	andeq	r1, r1, r8, asr #28
   11dd4:	andeq	r1, r1, r0, lsr #29
   11dd8:	andeq	r2, r1, r0, lsr #4
   11ddc:	andeq	r1, r1, ip, ror #27
   11de0:	movw	r0, #49600	; 0xc1c0
   11de4:	movt	r0, #2
   11de8:	b	11bbc <__mempcpy_chk@plt+0x4f8>
   11dec:	movw	r0, #49601	; 0xc1c1
   11df0:	movt	r0, #2
   11df4:	b	11bbc <__mempcpy_chk@plt+0x4f8>
   11df8:	movw	r0, #49605	; 0xc1c5
   11dfc:	movt	r0, #2
   11e00:	b	11e94 <__mempcpy_chk@plt+0x7d0>
   11e04:	movw	r0, #49592	; 0xc1b8
   11e08:	ldr	r1, [sp, #20]
   11e0c:	movt	r0, #2
   11e10:	ldr	r0, [r0]
   11e14:	cmp	r0, #0
   11e18:	movne	r1, r0
   11e1c:	str	r1, [sp, #20]
   11e20:	b	11e70 <__mempcpy_chk@plt+0x7ac>
   11e24:	movw	r0, #49602	; 0xc1c2
   11e28:	movt	r0, #2
   11e2c:	strb	r8, [r0]
   11e30:	movw	r0, #49603	; 0xc1c3
   11e34:	movt	r0, #2
   11e38:	b	11bbc <__mempcpy_chk@plt+0x4f8>
   11e3c:	movw	r0, #49606	; 0xc1c6
   11e40:	movt	r0, #2
   11e44:	b	11bbc <__mempcpy_chk@plt+0x4f8>
   11e48:	movw	r0, #49604	; 0xc1c4
   11e4c:	movt	r0, #2
   11e50:	b	11bbc <__mempcpy_chk@plt+0x4f8>
   11e54:	movw	r0, #49605	; 0xc1c5
   11e58:	movt	r0, #2
   11e5c:	b	11bbc <__mempcpy_chk@plt+0x4f8>
   11e60:	movw	r0, #49592	; 0xc1b8
   11e64:	movt	r0, #2
   11e68:	ldr	r0, [r0]
   11e6c:	str	r0, [sp, #16]
   11e70:	mov	r0, #1
   11e74:	str	r0, [sp, #28]
   11e78:	mov	r0, sl
   11e7c:	b	11bc4 <__mempcpy_chk@plt+0x500>
   11e80:	movw	r0, #49602	; 0xc1c2
   11e84:	movt	r0, #2
   11e88:	strb	r9, [r0]
   11e8c:	movw	r0, #49603	; 0xc1c3
   11e90:	movt	r0, #2
   11e94:	strb	r8, [r0]
   11e98:	mov	r0, sl
   11e9c:	b	11bc4 <__mempcpy_chk@plt+0x500>
   11ea0:	ldr	r0, [sp, #24]
   11ea4:	cmp	r0, #0
   11ea8:	bne	12284 <__mempcpy_chk@plt+0xbc0>
   11eac:	movw	r0, #49592	; 0xc1b8
   11eb0:	add	r2, sp, #32
   11eb4:	movt	r0, #2
   11eb8:	ldr	r1, [r0]
   11ebc:	mov	r0, #3
   11ec0:	bl	11670 <__xstat64@plt>
   11ec4:	cmp	r0, #0
   11ec8:	bne	12290 <__mempcpy_chk@plt+0xbcc>
   11ecc:	ldr	r0, [sp, #48]	; 0x30
   11ed0:	and	r0, r0, #61440	; 0xf000
   11ed4:	cmp	r0, #16384	; 0x4000
   11ed8:	bne	122d8 <__mempcpy_chk@plt+0xc14>
   11edc:	movw	r0, #49592	; 0xc1b8
   11ee0:	movt	r0, #2
   11ee4:	ldr	r0, [r0]
   11ee8:	str	r0, [sp, #24]
   11eec:	mov	r0, sl
   11ef0:	b	11bc4 <__mempcpy_chk@plt+0x500>
   11ef4:	movw	r0, #49568	; 0xc1a0
   11ef8:	movt	r0, #2
   11efc:	ldr	r1, [r0]
   11f00:	sub	r5, r7, r1
   11f04:	cmp	r5, #0
   11f08:	ble	12318 <__mempcpy_chk@plt+0xc54>
   11f0c:	movw	r0, #49607	; 0xc1c7
   11f10:	ldr	r7, [sp, #24]
   11f14:	movt	r0, #2
   11f18:	ldrb	r0, [r0]
   11f1c:	cmp	r0, #1
   11f20:	bne	11f38 <__mempcpy_chk@plt+0x874>
   11f24:	movw	r2, #49604	; 0xc1c4
   11f28:	movt	r2, #2
   11f2c:	ldrb	r2, [r2]
   11f30:	cmp	r2, #0
   11f34:	beq	12344 <__mempcpy_chk@plt+0xc80>
   11f38:	add	r9, r6, r1, lsl #2
   11f3c:	tst	sl, #1
   11f40:	beq	11f64 <__mempcpy_chk@plt+0x8a0>
   11f44:	cmp	r7, #0
   11f48:	bne	12350 <__mempcpy_chk@plt+0xc8c>
   11f4c:	cmp	r5, #2
   11f50:	bne	12374 <__mempcpy_chk@plt+0xcb0>
   11f54:	mvn	r8, #0
   11f58:	mov	sl, #2
   11f5c:	mov	r6, #0
   11f60:	b	120bc <__mempcpy_chk@plt+0x9f8>
   11f64:	cmp	r7, #0
   11f68:	bne	11f90 <__mempcpy_chk@plt+0x8cc>
   11f6c:	cmp	r5, #2
   11f70:	bge	11f90 <__mempcpy_chk@plt+0x8cc>
   11f74:	movw	r6, #45178	; 0xb07a
   11f78:	mvn	r0, #99	; 0x63
   11f7c:	mvn	r8, #0
   11f80:	mov	sl, #1
   11f84:	str	r0, [sp, #12]
   11f88:	movt	r6, #1
   11f8c:	b	120bc <__mempcpy_chk@plt+0x9f8>
   11f90:	eor	r1, r5, #2
   11f94:	mvn	r8, #0
   11f98:	orrs	r4, r7, r1
   11f9c:	movwne	r4, #1
   11fa0:	beq	12004 <__mempcpy_chk@plt+0x940>
   11fa4:	mov	sl, r4
   11fa8:	cmp	r7, #0
   11fac:	mov	r6, r7
   11fb0:	bne	11fbc <__mempcpy_chk@plt+0x8f8>
   11fb4:	add	r0, r9, r5, lsl #2
   11fb8:	ldr	r6, [r0, #-4]
   11fbc:	movw	r0, #49606	; 0xc1c6
   11fc0:	mov	r2, #2113536	; 0x204000
   11fc4:	mov	r1, r6
   11fc8:	movt	r0, #2
   11fcc:	ldrb	r0, [r0]
   11fd0:	cmp	r0, #0
   11fd4:	mvn	r0, #99	; 0x63
   11fd8:	movne	r2, #2146304	; 0x20c000
   11fdc:	bl	15e40 <__mempcpy_chk@plt+0x477c>
   11fe0:	mov	r4, r0
   11fe4:	bl	11550 <__errno_location@plt>
   11fe8:	cmp	r4, #0
   11fec:	str	r4, [sp, #12]
   11ff0:	bmi	12070 <__mempcpy_chk@plt+0x9ac>
   11ff4:	clz	r0, r7
   11ff8:	lsr	r0, r0, #5
   11ffc:	sub	sl, r5, r0
   12000:	b	120bc <__mempcpy_chk@plt+0x9f8>
   12004:	movw	r2, #49604	; 0xc1c4
   12008:	ldm	r9, {r1, r3}
   1200c:	movt	r2, #2
   12010:	ldrb	r2, [r2]
   12014:	cmp	r2, #1
   12018:	bne	12084 <__mempcpy_chk@plt+0x9c0>
   1201c:	cmp	r0, #0
   12020:	bne	11fa4 <__mempcpy_chk@plt+0x8e0>
   12024:	mov	r0, r1
   12028:	mvn	r1, #99	; 0x63
   1202c:	mov	r2, r3
   12030:	bl	11664 <symlinkat@plt>
   12034:	cmp	r0, #0
   12038:	bpl	120b0 <__mempcpy_chk@plt+0x9ec>
   1203c:	bl	11550 <__errno_location@plt>
   12040:	ldr	r8, [r0]
   12044:	cmp	r8, #0
   12048:	bmi	11fa4 <__mempcpy_chk@plt+0x8e0>
   1204c:	mov	sl, #2
   12050:	mov	r6, #0
   12054:	cmp	r8, #22
   12058:	bhi	11f60 <__mempcpy_chk@plt+0x89c>
   1205c:	mov	r0, #1
   12060:	mov	r1, #5373952	; 0x520000
   12064:	tst	r1, r0, lsl r8
   12068:	bne	11fa4 <__mempcpy_chk@plt+0x8e0>
   1206c:	b	120bc <__mempcpy_chk@plt+0x9f8>
   12070:	cmp	sl, #0
   12074:	bne	123dc <__mempcpy_chk@plt+0xd18>
   12078:	mov	sl, #2
   1207c:	mov	r6, #0
   12080:	b	120bc <__mempcpy_chk@plt+0x9f8>
   12084:	movw	r0, #49605	; 0xc1c5
   12088:	mvn	r2, #99	; 0x63
   1208c:	movt	r0, #2
   12090:	ldrb	r0, [r0]
   12094:	cmp	r0, #0
   12098:	movwne	r0, #1024	; 0x400
   1209c:	str	r0, [sp]
   120a0:	mvn	r0, #99	; 0x63
   120a4:	bl	115c8 <linkat@plt>
   120a8:	cmn	r0, #1
   120ac:	ble	1203c <__mempcpy_chk@plt+0x978>
   120b0:	mov	r6, #0
   120b4:	mov	sl, #2
   120b8:	mov	r8, #0
   120bc:	ldr	r1, [sp, #28]
   120c0:	mov	r0, #0
   120c4:	tst	r1, #1
   120c8:	beq	120e8 <__mempcpy_chk@plt+0xa24>
   120cc:	movw	r1, #43521	; 0xaa01
   120d0:	mov	r0, #0
   120d4:	mov	r2, #5
   120d8:	movt	r1, #1
   120dc:	bl	1140c <dcgettext@plt>
   120e0:	ldr	r1, [sp, #20]
   120e4:	bl	13b6c <__mempcpy_chk@plt+0x24a8>
   120e8:	movw	r5, #49608	; 0xc1c8
   120ec:	movt	r5, #2
   120f0:	str	r0, [r5]
   120f4:	ldr	r0, [sp, #16]
   120f8:	bl	13470 <__mempcpy_chk@plt+0x1dac>
   120fc:	cmp	r6, #0
   12100:	beq	12180 <__mempcpy_chk@plt+0xabc>
   12104:	cmp	sl, #2
   12108:	blt	1219c <__mempcpy_chk@plt+0xad8>
   1210c:	movw	r0, #49603	; 0xc1c3
   12110:	movt	r0, #2
   12114:	ldrb	r0, [r0]
   12118:	cmp	r0, #1
   1211c:	bne	121a8 <__mempcpy_chk@plt+0xae4>
   12120:	ldr	r0, [r5]
   12124:	cmp	r0, #3
   12128:	beq	121a8 <__mempcpy_chk@plt+0xae4>
   1212c:	movw	r0, #49604	; 0xc1c4
   12130:	movt	r0, #2
   12134:	ldrb	r0, [r0]
   12138:	cmp	r0, #0
   1213c:	bne	121a8 <__mempcpy_chk@plt+0xae4>
   12140:	movw	r0, #24096	; 0x5e20
   12144:	movw	r2, #23936	; 0x5d80
   12148:	movw	r3, #23832	; 0x5d18
   1214c:	mov	r1, #0
   12150:	movt	r0, #1
   12154:	movt	r2, #1
   12158:	movt	r3, #1
   1215c:	str	r0, [sp]
   12160:	mov	r0, #61	; 0x3d
   12164:	bl	14ebc <__mempcpy_chk@plt+0x37f8>
   12168:	movw	r1, #49612	; 0xc1cc
   1216c:	cmp	r0, #0
   12170:	movt	r1, #2
   12174:	str	r0, [r1]
   12178:	bne	121a8 <__mempcpy_chk@plt+0xae4>
   1217c:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   12180:	ldm	r9, {r0, r2}
   12184:	mvn	r1, #99	; 0x63
   12188:	mov	r3, r2
   1218c:	str	r8, [sp]
   12190:	bl	12404 <__mempcpy_chk@plt+0xd40>
   12194:	mov	r4, r0
   12198:	b	12214 <__mempcpy_chk@plt+0xb50>
   1219c:	mov	r4, #1
   121a0:	cmp	sl, #1
   121a4:	bne	12214 <__mempcpy_chk@plt+0xb50>
   121a8:	ldr	r8, [sp, #12]
   121ac:	mov	r4, #1
   121b0:	mov	r5, r6
   121b4:	ldr	r0, [r9]
   121b8:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   121bc:	mov	r1, r0
   121c0:	mov	r0, r5
   121c4:	add	r2, sp, #32
   121c8:	bl	14810 <__mempcpy_chk@plt+0x314c>
   121cc:	mov	r6, r0
   121d0:	ldr	r0, [sp, #32]
   121d4:	bl	146a4 <__mempcpy_chk@plt+0x2fe0>
   121d8:	ldr	r0, [r9], #4
   121dc:	ldr	r2, [sp, #32]
   121e0:	mvn	r1, #0
   121e4:	mov	r3, r6
   121e8:	str	r1, [sp]
   121ec:	mov	r1, r8
   121f0:	bl	12404 <__mempcpy_chk@plt+0xd40>
   121f4:	mov	r7, r0
   121f8:	mov	r0, r6
   121fc:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12200:	and	r4, r4, r7
   12204:	subs	sl, sl, #1
   12208:	bne	121b4 <__mempcpy_chk@plt+0xaf0>
   1220c:	cmp	r4, #0
   12210:	movwne	r4, #1
   12214:	eor	r0, r4, #1
   12218:	sub	sp, fp, #28
   1221c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12220:	mov	r0, #1
   12224:	bl	117c0 <__mempcpy_chk@plt+0xfc>
   12228:	movw	r0, #49480	; 0xc148
   1222c:	movw	r2, #43315	; 0xa933
   12230:	mov	r1, #0
   12234:	movw	r7, #43303	; 0xa927
   12238:	movt	r0, #2
   1223c:	movt	r2, #1
   12240:	str	r1, [sp, #8]
   12244:	movw	r1, #43158	; 0xa896
   12248:	movt	r7, #1
   1224c:	movt	r1, #1
   12250:	ldr	r3, [r0]
   12254:	movw	r0, #49588	; 0xc1b4
   12258:	str	r2, [sp, #4]
   1225c:	movw	r2, #43289	; 0xa919
   12260:	str	r7, [sp]
   12264:	movt	r0, #2
   12268:	movt	r2, #1
   1226c:	ldr	r0, [r0]
   12270:	bl	18a30 <__mempcpy_chk@plt+0x736c>
   12274:	mov	r0, #0
   12278:	bl	11520 <exit@plt>
   1227c:	mov	r0, #0
   12280:	bl	117c0 <__mempcpy_chk@plt+0xfc>
   12284:	movw	r1, #43202	; 0xa8c2
   12288:	movt	r1, #1
   1228c:	b	12358 <__mempcpy_chk@plt+0xc94>
   12290:	bl	11550 <__errno_location@plt>
   12294:	movw	r1, #43240	; 0xa8e8
   12298:	ldr	r4, [r0]
   1229c:	mov	r0, #0
   122a0:	mov	r2, #5
   122a4:	movt	r1, #1
   122a8:	bl	1140c <dcgettext@plt>
   122ac:	mov	r5, r0
   122b0:	movw	r0, #49592	; 0xc1b8
   122b4:	movt	r0, #2
   122b8:	ldr	r1, [r0]
   122bc:	mov	r0, #4
   122c0:	bl	17604 <__mempcpy_chk@plt+0x5f40>
   122c4:	mov	r3, r0
   122c8:	mov	r0, #1
   122cc:	mov	r1, r4
   122d0:	mov	r2, r5
   122d4:	bl	114a8 <error@plt>
   122d8:	movw	r1, #43260	; 0xa8fc
   122dc:	mov	r0, #0
   122e0:	mov	r2, #5
   122e4:	movt	r1, #1
   122e8:	bl	1140c <dcgettext@plt>
   122ec:	mov	r4, r0
   122f0:	movw	r0, #49592	; 0xc1b8
   122f4:	movt	r0, #2
   122f8:	ldr	r1, [r0]
   122fc:	mov	r0, #4
   12300:	bl	17604 <__mempcpy_chk@plt+0x5f40>
   12304:	mov	r3, r0
   12308:	mov	r0, #1
   1230c:	mov	r1, #0
   12310:	mov	r2, r4
   12314:	bl	114a8 <error@plt>
   12318:	movw	r1, #43331	; 0xa943
   1231c:	mov	r0, #0
   12320:	mov	r2, #5
   12324:	movt	r1, #1
   12328:	bl	1140c <dcgettext@plt>
   1232c:	mov	r2, r0
   12330:	mov	r0, #0
   12334:	mov	r1, #0
   12338:	bl	114a8 <error@plt>
   1233c:	mov	r0, #1
   12340:	bl	117c0 <__mempcpy_chk@plt+0xfc>
   12344:	movw	r1, #43352	; 0xa958
   12348:	movt	r1, #1
   1234c:	b	12358 <__mempcpy_chk@plt+0xc94>
   12350:	movw	r1, #43392	; 0xa980
   12354:	movt	r1, #1
   12358:	mov	r0, #0
   1235c:	mov	r2, #5
   12360:	bl	1140c <dcgettext@plt>
   12364:	mov	r2, r0
   12368:	mov	r0, #1
   1236c:	mov	r1, #0
   12370:	bl	114a8 <error@plt>
   12374:	cmp	r5, #1
   12378:	bgt	12398 <__mempcpy_chk@plt+0xcd4>
   1237c:	movw	r1, #43452	; 0xa9bc
   12380:	mov	r0, #0
   12384:	mov	r2, #5
   12388:	movt	r1, #1
   1238c:	bl	1140c <dcgettext@plt>
   12390:	mov	r4, r0
   12394:	b	123b4 <__mempcpy_chk@plt+0xcf0>
   12398:	movw	r1, #43494	; 0xa9e6
   1239c:	mov	r0, #0
   123a0:	mov	r2, #5
   123a4:	movt	r1, #1
   123a8:	bl	1140c <dcgettext@plt>
   123ac:	mov	r4, r0
   123b0:	add	r9, r9, #8
   123b4:	ldr	r1, [r9]
   123b8:	mov	r0, #4
   123bc:	bl	17604 <__mempcpy_chk@plt+0x5f40>
   123c0:	mov	r3, r0
   123c4:	mov	r0, #0
   123c8:	mov	r1, #0
   123cc:	mov	r2, r4
   123d0:	bl	114a8 <error@plt>
   123d4:	mov	r0, #1
   123d8:	bl	117c0 <__mempcpy_chk@plt+0xfc>
   123dc:	movw	r1, #43511	; 0xa9f7
   123e0:	ldr	r4, [r0]
   123e4:	mov	r0, #0
   123e8:	mov	r2, #5
   123ec:	movt	r1, #1
   123f0:	bl	1140c <dcgettext@plt>
   123f4:	mov	r5, r0
   123f8:	mov	r0, #4
   123fc:	mov	r1, r6
   12400:	b	122c0 <__mempcpy_chk@plt+0xbfc>
   12404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12408:	add	fp, sp, #28
   1240c:	sub	sp, sp, #252	; 0xfc
   12410:	mov	r8, r0
   12414:	movw	r0, #49605	; 0xc1c5
   12418:	ldr	sl, [fp, #8]
   1241c:	movw	r5, #49612	; 0xc1cc
   12420:	movw	r6, #49604	; 0xc1c4
   12424:	mov	r9, r3
   12428:	mov	r7, r1
   1242c:	mov	r4, #256	; 0x100
   12430:	str	r2, [sp, #36]	; 0x24
   12434:	movt	r0, #2
   12438:	movt	r5, #2
   1243c:	movt	r6, #2
   12440:	ldrb	r0, [r0]
   12444:	cmp	r0, #0
   12448:	movwne	r4, #0
   1244c:	cmn	sl, #1
   12450:	bgt	124d0 <__mempcpy_chk@plt+0xe0c>
   12454:	ldrb	r1, [r6]
   12458:	cmp	r1, #1
   1245c:	bne	12488 <__mempcpy_chk@plt+0xdc4>
   12460:	movw	r0, #49607	; 0xc1c7
   12464:	movt	r0, #2
   12468:	ldrb	r0, [r0]
   1246c:	cmp	r0, #0
   12470:	beq	124ac <__mempcpy_chk@plt+0xde8>
   12474:	mov	r0, #1
   12478:	str	r7, [sp, #32]
   1247c:	mvn	sl, #0
   12480:	str	r0, [sp, #24]
   12484:	b	12600 <__mempcpy_chk@plt+0xf3c>
   12488:	ldr	r3, [sp, #36]	; 0x24
   1248c:	cmp	r0, #0
   12490:	mov	r1, r8
   12494:	mov	r2, r7
   12498:	movwne	r0, #1024	; 0x400
   1249c:	str	r0, [sp]
   124a0:	mvn	r0, #99	; 0x63
   124a4:	bl	115c8 <linkat@plt>
   124a8:	b	124bc <__mempcpy_chk@plt+0xdf8>
   124ac:	ldr	r2, [sp, #36]	; 0x24
   124b0:	mov	r0, r8
   124b4:	mov	r1, r7
   124b8:	bl	11664 <symlinkat@plt>
   124bc:	mov	sl, #0
   124c0:	cmn	r0, #1
   124c4:	bgt	124d0 <__mempcpy_chk@plt+0xe0c>
   124c8:	bl	11550 <__errno_location@plt>
   124cc:	ldr	sl, [r0]
   124d0:	cmp	sl, #0
   124d4:	ldreq	r0, [r5]
   124d8:	moveq	r1, #1
   124dc:	cmpeq	r0, #0
   124e0:	beq	12564 <__mempcpy_chk@plt+0xea0>
   124e4:	ldrb	r1, [r6]
   124e8:	mov	r0, #1
   124ec:	cmp	r1, #0
   124f0:	mov	r1, #1
   124f4:	bne	12568 <__mempcpy_chk@plt+0xea4>
   124f8:	sub	r3, fp, #136	; 0x88
   124fc:	mov	r0, #3
   12500:	mvn	r1, #99	; 0x63
   12504:	mov	r2, r8
   12508:	str	r4, [sp]
   1250c:	bl	1143c <__fxstatat64@plt>
   12510:	cmp	r0, #0
   12514:	beq	12560 <__mempcpy_chk@plt+0xe9c>
   12518:	bl	11550 <__errno_location@plt>
   1251c:	movw	r1, #43240	; 0xa8e8
   12520:	ldr	r5, [r0]
   12524:	mov	r0, #0
   12528:	mov	r2, #5
   1252c:	mov	r4, #0
   12530:	movt	r1, #1
   12534:	bl	1140c <dcgettext@plt>
   12538:	mov	r6, r0
   1253c:	mov	r0, #4
   12540:	mov	r1, r8
   12544:	bl	17604 <__mempcpy_chk@plt+0x5f40>
   12548:	mov	r3, r0
   1254c:	mov	r0, #0
   12550:	mov	r1, r5
   12554:	mov	r2, r6
   12558:	bl	114a8 <error@plt>
   1255c:	b	12bf4 <__mempcpy_chk@plt+0x1530>
   12560:	mov	r1, #0
   12564:	ldrb	r0, [r6]
   12568:	cmp	sl, #0
   1256c:	beq	12664 <__mempcpy_chk@plt+0xfa0>
   12570:	cmp	r0, #0
   12574:	bne	125e0 <__mempcpy_chk@plt+0xf1c>
   12578:	movw	r0, #49600	; 0xc1c0
   1257c:	movt	r0, #2
   12580:	ldrb	r0, [r0]
   12584:	cmp	r0, #0
   12588:	bne	125e0 <__mempcpy_chk@plt+0xf1c>
   1258c:	ldr	r0, [fp, #-120]	; 0xffffff88
   12590:	and	r0, r0, #61440	; 0xf000
   12594:	cmp	r0, #16384	; 0x4000
   12598:	bne	125e0 <__mempcpy_chk@plt+0xf1c>
   1259c:	movw	r1, #44456	; 0xada8
   125a0:	mov	r0, #0
   125a4:	mov	r2, #5
   125a8:	mov	r4, #0
   125ac:	movt	r1, #1
   125b0:	bl	1140c <dcgettext@plt>
   125b4:	mov	r5, r0
   125b8:	mov	r0, #0
   125bc:	mov	r1, #3
   125c0:	mov	r2, r8
   125c4:	bl	17880 <__mempcpy_chk@plt+0x61bc>
   125c8:	mov	r3, r0
   125cc:	mov	r0, #0
   125d0:	mov	r1, #0
   125d4:	mov	r2, r5
   125d8:	bl	114a8 <error@plt>
   125dc:	b	12bf4 <__mempcpy_chk@plt+0x1530>
   125e0:	movw	r0, #49607	; 0xc1c7
   125e4:	mov	r5, #0
   125e8:	str	r1, [sp, #24]
   125ec:	str	r7, [sp, #32]
   125f0:	movt	r0, #2
   125f4:	ldrb	r0, [r0]
   125f8:	cmp	r0, #1
   125fc:	bne	1271c <__mempcpy_chk@plt+0x1058>
   12600:	mov	r0, r9
   12604:	str	r9, [sp, #28]
   12608:	bl	145b0 <__mempcpy_chk@plt+0x2eec>
   1260c:	mov	r1, #2
   12610:	mov	r4, r0
   12614:	bl	13ca0 <__mempcpy_chk@plt+0x25dc>
   12618:	mov	r6, r0
   1261c:	mov	r0, r8
   12620:	mov	r1, #2
   12624:	bl	13ca0 <__mempcpy_chk@plt+0x25dc>
   12628:	mov	r7, r0
   1262c:	cmp	r6, #0
   12630:	mov	r5, #0
   12634:	cmpne	r7, #0
   12638:	bne	128e0 <__mempcpy_chk@plt+0x121c>
   1263c:	mov	r0, r4
   12640:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12644:	mov	r0, r6
   12648:	bl	14948 <__mempcpy_chk@plt+0x3284>
   1264c:	mov	r0, r7
   12650:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12654:	cmp	r5, #0
   12658:	beq	12708 <__mempcpy_chk@plt+0x1044>
   1265c:	mov	r8, r5
   12660:	b	12718 <__mempcpy_chk@plt+0x1054>
   12664:	mov	r7, #0
   12668:	cmp	r0, #0
   1266c:	mov	r5, #0
   12670:	mov	r6, #0
   12674:	bne	12694 <__mempcpy_chk@plt+0xfd0>
   12678:	movw	r0, #49612	; 0xc1cc
   1267c:	sub	r2, fp, #136	; 0x88
   12680:	mov	r1, r9
   12684:	movt	r0, #2
   12688:	ldr	r0, [r0]
   1268c:	bl	14744 <__mempcpy_chk@plt+0x3080>
   12690:	mov	r6, r5
   12694:	movw	r0, #49601	; 0xc1c1
   12698:	mov	r4, #1
   1269c:	movt	r0, #2
   126a0:	ldrb	r0, [r0]
   126a4:	cmp	r0, #1
   126a8:	bne	12be4 <__mempcpy_chk@plt+0x1520>
   126ac:	cmp	r7, #0
   126b0:	str	r8, [sp, #20]
   126b4:	str	r7, [sp, #24]
   126b8:	beq	12980 <__mempcpy_chk@plt+0x12bc>
   126bc:	ldr	r0, [sp, #36]	; 0x24
   126c0:	str	r9, [sp, #28]
   126c4:	sub	r5, r0, r9
   126c8:	cmp	r5, #1
   126cc:	blt	12a30 <__mempcpy_chk@plt+0x136c>
   126d0:	mov	r0, r7
   126d4:	bl	11538 <strlen@plt>
   126d8:	add	r0, r5, r0
   126dc:	add	r0, r0, #1
   126e0:	bl	18c64 <__mempcpy_chk@plt+0x75a0>
   126e4:	mov	r1, r9
   126e8:	mov	r2, r5
   126ec:	mov	r4, r0
   126f0:	bl	113e8 <memcpy@plt>
   126f4:	add	r0, r4, r5
   126f8:	mov	r1, r7
   126fc:	bl	11484 <strcpy@plt>
   12700:	mov	r7, r4
   12704:	b	12a38 <__mempcpy_chk@plt+0x1374>
   12708:	mov	r0, r8
   1270c:	bl	19168 <__mempcpy_chk@plt+0x7aa4>
   12710:	mov	r5, r0
   12714:	mov	r8, r0
   12718:	ldr	r9, [sp, #28]
   1271c:	movw	r4, #49603	; 0xc1c3
   12720:	movt	r4, #2
   12724:	ldrb	r0, [r4]
   12728:	cmp	r0, #0
   1272c:	bne	12760 <__mempcpy_chk@plt+0x109c>
   12730:	movw	r0, #49608	; 0xc1c8
   12734:	movt	r0, #2
   12738:	ldr	r0, [r0]
   1273c:	cmp	r0, #0
   12740:	bne	12760 <__mempcpy_chk@plt+0x109c>
   12744:	movw	r0, #49602	; 0xc1c2
   12748:	mov	r7, #0
   1274c:	mov	r6, #0
   12750:	movt	r0, #2
   12754:	ldrb	r0, [r0]
   12758:	cmp	r0, #0
   1275c:	beq	127a0 <__mempcpy_chk@plt+0x10dc>
   12760:	ldr	r6, [sp, #32]
   12764:	ldr	r2, [sp, #36]	; 0x24
   12768:	mov	r0, #256	; 0x100
   1276c:	add	r3, sp, #40	; 0x28
   12770:	str	r0, [sp]
   12774:	mov	r0, #3
   12778:	mov	r1, r6
   1277c:	bl	1143c <__fxstatat64@plt>
   12780:	cmp	r0, #0
   12784:	beq	127d0 <__mempcpy_chk@plt+0x110c>
   12788:	bl	11550 <__errno_location@plt>
   1278c:	ldr	r4, [r0]
   12790:	mov	r7, #0
   12794:	mov	r6, #0
   12798:	cmp	r4, #2
   1279c:	bne	12894 <__mempcpy_chk@plt+0x11d0>
   127a0:	movw	r0, #49604	; 0xc1c4
   127a4:	movt	r0, #2
   127a8:	ldrb	r0, [r0]
   127ac:	cmp	r0, #1
   127b0:	bne	1281c <__mempcpy_chk@plt+0x1158>
   127b4:	ldr	r1, [sp, #32]
   127b8:	ldr	r2, [sp, #36]	; 0x24
   127bc:	mov	r0, r8
   127c0:	mov	r3, r6
   127c4:	str	sl, [sp]
   127c8:	bl	12fd4 <__mempcpy_chk@plt+0x1910>
   127cc:	b	12848 <__mempcpy_chk@plt+0x1184>
   127d0:	ldr	r0, [sp, #56]	; 0x38
   127d4:	and	r0, r0, #61440	; 0xf000
   127d8:	cmp	r0, #16384	; 0x4000
   127dc:	bne	12990 <__mempcpy_chk@plt+0x12cc>
   127e0:	movw	r1, #44496	; 0xadd0
   127e4:	mov	r0, #0
   127e8:	mov	r2, #5
   127ec:	movt	r1, #1
   127f0:	bl	1140c <dcgettext@plt>
   127f4:	mov	r4, r0
   127f8:	mov	r0, #0
   127fc:	mov	r1, #3
   12800:	mov	r2, r9
   12804:	bl	17880 <__mempcpy_chk@plt+0x61bc>
   12808:	mov	r3, r0
   1280c:	mov	r0, #0
   12810:	mov	r1, #0
   12814:	mov	r2, r4
   12818:	b	12a0c <__mempcpy_chk@plt+0x1348>
   1281c:	movw	r0, #49605	; 0xc1c5
   12820:	ldr	r2, [sp, #32]
   12824:	ldr	r3, [sp, #36]	; 0x24
   12828:	mov	r1, r8
   1282c:	movt	r0, #2
   12830:	ldrb	r0, [r0]
   12834:	cmp	r0, #0
   12838:	movwne	r0, #1024	; 0x400
   1283c:	stm	sp, {r0, r6, sl}
   12840:	mvn	r0, #99	; 0x63
   12844:	bl	12e1c <__mempcpy_chk@plt+0x1758>
   12848:	mov	r6, r0
   1284c:	movw	r0, #49604	; 0xc1c4
   12850:	movt	r0, #2
   12854:	cmp	r6, #0
   12858:	ldrb	r0, [r0]
   1285c:	ble	128d0 <__mempcpy_chk@plt+0x120c>
   12860:	cmp	r0, #0
   12864:	str	r5, [sp, #16]
   12868:	str	r7, [sp, #24]
   1286c:	beq	12918 <__mempcpy_chk@plt+0x1254>
   12870:	cmp	r6, #36	; 0x24
   12874:	beq	12a20 <__mempcpy_chk@plt+0x135c>
   12878:	ldrb	r0, [r8]
   1287c:	cmp	r0, #0
   12880:	beq	12a20 <__mempcpy_chk@plt+0x135c>
   12884:	movw	r1, #44651	; 0xae6b
   12888:	mov	sl, r8
   1288c:	movt	r1, #1
   12890:	b	12b0c <__mempcpy_chk@plt+0x1448>
   12894:	movw	r1, #43240	; 0xa8e8
   12898:	movt	r1, #1
   1289c:	mov	r0, #0
   128a0:	mov	r2, #5
   128a4:	bl	1140c <dcgettext@plt>
   128a8:	mov	r6, r5
   128ac:	mov	r5, r0
   128b0:	mov	r0, #4
   128b4:	mov	r1, r9
   128b8:	bl	17604 <__mempcpy_chk@plt+0x5f40>
   128bc:	mov	r3, r0
   128c0:	mov	r2, r5
   128c4:	mov	r0, #0
   128c8:	mov	r1, r4
   128cc:	b	12a08 <__mempcpy_chk@plt+0x1344>
   128d0:	cmp	r0, #0
   128d4:	mov	r6, r5
   128d8:	beq	12678 <__mempcpy_chk@plt+0xfb4>
   128dc:	b	12694 <__mempcpy_chk@plt+0xfd0>
   128e0:	mov	r0, #4096	; 0x1000
   128e4:	bl	18c64 <__mempcpy_chk@plt+0x75a0>
   128e8:	mov	r5, r0
   128ec:	mov	r0, r7
   128f0:	mov	r1, r6
   128f4:	mov	r3, #4096	; 0x1000
   128f8:	mov	r2, r5
   128fc:	bl	13148 <__mempcpy_chk@plt+0x1a84>
   12900:	cmp	r0, #0
   12904:	bne	1263c <__mempcpy_chk@plt+0xf78>
   12908:	mov	r0, r5
   1290c:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12910:	mov	r5, #0
   12914:	b	1263c <__mempcpy_chk@plt+0xf78>
   12918:	sub	r0, r6, #17
   1291c:	mov	sl, r8
   12920:	cmp	r0, #14
   12924:	bhi	12afc <__mempcpy_chk@plt+0x1438>
   12928:	movw	r1, #44725	; 0xaeb5
   1292c:	add	r2, pc, #4
   12930:	movt	r1, #1
   12934:	ldr	pc, [r2, r0, lsl #2]
   12938:	andeq	r2, r1, r4, ror r9
   1293c:	andeq	r2, r1, r4, lsl #22
   12940:	andeq	r2, r1, r4, lsl #22
   12944:	andeq	r2, r1, r4, lsl #22
   12948:	andeq	r2, r1, r4, lsl #22
   1294c:	andeq	r2, r1, r4, lsl #22
   12950:	andeq	r2, r1, r4, lsl #22
   12954:	andeq	r2, r1, r4, lsl #22
   12958:	andeq	r2, r1, r4, lsl #22
   1295c:	andeq	r2, r1, r4, lsl #22
   12960:	andeq	r2, r1, r4, lsl #22
   12964:	andeq	r2, r1, r4, ror r9
   12968:	andeq	r2, r1, r4, lsl #22
   1296c:	andeq	r2, r1, r4, ror r9
   12970:	andeq	r2, r1, ip, lsl #22
   12974:	movw	r1, #44762	; 0xaeda
   12978:	movt	r1, #1
   1297c:	b	12b0c <__mempcpy_chk@plt+0x1448>
   12980:	movw	r8, #43828	; 0xab34
   12984:	movt	r8, #1
   12988:	mov	sl, r8
   1298c:	b	12a60 <__mempcpy_chk@plt+0x139c>
   12990:	movw	r0, #49612	; 0xc1cc
   12994:	add	r2, sp, #40	; 0x28
   12998:	mov	r1, r9
   1299c:	str	r8, [sp, #20]
   129a0:	movt	r0, #2
   129a4:	ldr	r0, [r0]
   129a8:	bl	147c0 <__mempcpy_chk@plt+0x30fc>
   129ac:	cmp	r0, #0
   129b0:	beq	12acc <__mempcpy_chk@plt+0x1408>
   129b4:	movw	r1, #44527	; 0xadef
   129b8:	mov	r0, #0
   129bc:	mov	r2, #5
   129c0:	movt	r1, #1
   129c4:	bl	1140c <dcgettext@plt>
   129c8:	mov	r4, r0
   129cc:	mov	r0, #0
   129d0:	mov	r1, #4
   129d4:	mov	r2, r9
   129d8:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   129dc:	ldr	r2, [sp, #20]
   129e0:	mov	r6, r5
   129e4:	mov	r5, r0
   129e8:	mov	r0, #1
   129ec:	mov	r1, #4
   129f0:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   129f4:	str	r0, [sp]
   129f8:	mov	r3, r5
   129fc:	mov	r0, #0
   12a00:	mov	r1, #0
   12a04:	mov	r2, r4
   12a08:	mov	r5, r6
   12a0c:	bl	114a8 <error@plt>
   12a10:	mov	r0, r5
   12a14:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12a18:	mov	r4, #0
   12a1c:	b	12bf4 <__mempcpy_chk@plt+0x1530>
   12a20:	movw	r1, #44685	; 0xae8d
   12a24:	mov	sl, r8
   12a28:	movt	r1, #1
   12a2c:	b	12b0c <__mempcpy_chk@plt+0x1448>
   12a30:	mov	r4, r7
   12a34:	mov	r7, #0
   12a38:	mov	r0, #2
   12a3c:	mov	r1, #4
   12a40:	mov	r2, r4
   12a44:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   12a48:	mov	r8, r0
   12a4c:	mov	r0, r7
   12a50:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12a54:	ldr	r9, [sp, #28]
   12a58:	movw	sl, #44632	; 0xae58
   12a5c:	movt	sl, #1
   12a60:	mov	r0, #0
   12a64:	mov	r1, #4
   12a68:	mov	r2, r9
   12a6c:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   12a70:	mov	r7, r0
   12a74:	movw	r0, #49604	; 0xc1c4
   12a78:	ldr	r2, [sp, #20]
   12a7c:	mov	r1, #4
   12a80:	mov	r4, #1
   12a84:	movt	r0, #2
   12a88:	ldrb	r5, [r0]
   12a8c:	mov	r0, #1
   12a90:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   12a94:	cmp	r5, #0
   12a98:	mov	r1, #61	; 0x3d
   12a9c:	str	r0, [sp, #8]
   12aa0:	mov	r0, #1
   12aa4:	mov	r2, r8
   12aa8:	mov	r3, sl
   12aac:	str	r7, [sp]
   12ab0:	movwne	r1, #45	; 0x2d
   12ab4:	str	r1, [sp, #4]
   12ab8:	movw	r1, #44636	; 0xae5c
   12abc:	movt	r1, #1
   12ac0:	bl	11598 <__printf_chk@plt>
   12ac4:	ldr	r7, [sp, #24]
   12ac8:	b	12be4 <__mempcpy_chk@plt+0x1520>
   12acc:	movw	ip, #49608	; 0xc1c8
   12ad0:	movt	ip, #2
   12ad4:	ldr	r0, [ip]
   12ad8:	cmp	r0, #0
   12adc:	beq	12c00 <__mempcpy_chk@plt+0x153c>
   12ae0:	movw	r0, #49604	; 0xc1c4
   12ae4:	movt	r0, #2
   12ae8:	ldrb	r0, [r0]
   12aec:	cmp	r0, #0
   12af0:	ldr	r8, [sp, #20]
   12af4:	beq	12c10 <__mempcpy_chk@plt+0x154c>
   12af8:	b	12cec <__mempcpy_chk@plt+0x1628>
   12afc:	cmp	r6, #122	; 0x7a
   12b00:	beq	12974 <__mempcpy_chk@plt+0x12b0>
   12b04:	movw	r1, #44792	; 0xaef8
   12b08:	movt	r1, #1
   12b0c:	mov	r0, #0
   12b10:	mov	r2, #5
   12b14:	mov	r4, #0
   12b18:	bl	1140c <dcgettext@plt>
   12b1c:	mov	r5, r0
   12b20:	mov	r0, #0
   12b24:	mov	r1, #4
   12b28:	mov	r2, r9
   12b2c:	mov	r8, r9
   12b30:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   12b34:	mov	r7, r0
   12b38:	mov	r0, #1
   12b3c:	mov	r1, #4
   12b40:	mov	r2, sl
   12b44:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   12b48:	str	r0, [sp]
   12b4c:	mov	r0, #0
   12b50:	mov	r1, r6
   12b54:	mov	r2, r5
   12b58:	mov	r3, r7
   12b5c:	bl	114a8 <error@plt>
   12b60:	ldr	r7, [sp, #24]
   12b64:	cmp	r7, #0
   12b68:	beq	12bd0 <__mempcpy_chk@plt+0x150c>
   12b6c:	ldr	r0, [sp, #32]
   12b70:	ldr	r3, [sp, #36]	; 0x24
   12b74:	mov	r1, r7
   12b78:	mov	r2, r0
   12b7c:	bl	11640 <renameat@plt>
   12b80:	cmp	r0, #0
   12b84:	beq	12bdc <__mempcpy_chk@plt+0x1518>
   12b88:	bl	11550 <__errno_location@plt>
   12b8c:	movw	r1, #44828	; 0xaf1c
   12b90:	ldr	r5, [r0]
   12b94:	mov	r0, #0
   12b98:	mov	r2, #5
   12b9c:	mov	r4, #0
   12ba0:	movt	r1, #1
   12ba4:	bl	1140c <dcgettext@plt>
   12ba8:	mov	r6, r0
   12bac:	mov	r0, #4
   12bb0:	mov	r1, r8
   12bb4:	bl	17604 <__mempcpy_chk@plt+0x5f40>
   12bb8:	mov	r3, r0
   12bbc:	mov	r0, #0
   12bc0:	mov	r1, r5
   12bc4:	mov	r2, r6
   12bc8:	bl	114a8 <error@plt>
   12bcc:	b	12be0 <__mempcpy_chk@plt+0x151c>
   12bd0:	ldr	r6, [sp, #16]
   12bd4:	mov	r7, #0
   12bd8:	b	12be4 <__mempcpy_chk@plt+0x1520>
   12bdc:	mov	r4, #0
   12be0:	ldr	r6, [sp, #16]
   12be4:	mov	r0, r7
   12be8:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12bec:	mov	r0, r6
   12bf0:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12bf4:	mov	r0, r4
   12bf8:	sub	sp, fp, #28
   12bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c00:	ldrb	r0, [r4]
   12c04:	cmp	r0, #1
   12c08:	ldr	r8, [sp, #20]
   12c0c:	bne	12cec <__mempcpy_chk@plt+0x1628>
   12c10:	ldr	r0, [sp, #24]
   12c14:	cmp	r0, #0
   12c18:	beq	12c3c <__mempcpy_chk@plt+0x1578>
   12c1c:	sub	r2, fp, #136	; 0x88
   12c20:	mov	r0, #3
   12c24:	mov	r1, r8
   12c28:	mov	r4, ip
   12c2c:	bl	11670 <__xstat64@plt>
   12c30:	mov	ip, r4
   12c34:	cmp	r0, #0
   12c38:	bne	12cec <__mempcpy_chk@plt+0x1628>
   12c3c:	ldr	r0, [sp, #136]	; 0x88
   12c40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c44:	ldr	r1, [sp, #140]	; 0x8c
   12c48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12c4c:	eor	r1, r3, r1
   12c50:	eor	r0, r2, r0
   12c54:	orrs	r0, r0, r1
   12c58:	bne	12cec <__mempcpy_chk@plt+0x1628>
   12c5c:	ldr	r0, [sp, #40]	; 0x28
   12c60:	ldr	r2, [fp, #-136]	; 0xffffff78
   12c64:	ldr	r1, [sp, #44]	; 0x2c
   12c68:	ldr	r3, [fp, #-132]	; 0xffffff7c
   12c6c:	eor	r1, r3, r1
   12c70:	eor	r0, r2, r0
   12c74:	orrs	r0, r0, r1
   12c78:	bne	12cec <__mempcpy_chk@plt+0x1628>
   12c7c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   12c80:	cmp	r0, #1
   12c84:	beq	12cac <__mempcpy_chk@plt+0x15e8>
   12c88:	ldr	r3, [sp, #36]	; 0x24
   12c8c:	mvn	r0, #99	; 0x63
   12c90:	mov	r1, r8
   12c94:	mov	r2, r6
   12c98:	mov	r4, ip
   12c9c:	bl	17e78 <__mempcpy_chk@plt+0x67b4>
   12ca0:	mov	ip, r4
   12ca4:	cmp	r0, #0
   12ca8:	beq	12cec <__mempcpy_chk@plt+0x1628>
   12cac:	movw	r1, #44570	; 0xae1a
   12cb0:	mov	r0, #0
   12cb4:	mov	r2, #5
   12cb8:	movt	r1, #1
   12cbc:	bl	1140c <dcgettext@plt>
   12cc0:	mov	r4, r0
   12cc4:	mov	r0, #0
   12cc8:	mov	r1, #4
   12ccc:	mov	r2, r8
   12cd0:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   12cd4:	mov	r6, r5
   12cd8:	mov	r5, r0
   12cdc:	mov	r0, #1
   12ce0:	mov	r1, #4
   12ce4:	mov	r2, r9
   12ce8:	b	129f0 <__mempcpy_chk@plt+0x132c>
   12cec:	mov	r6, #1
   12cf0:	mov	r7, #0
   12cf4:	cmp	sl, #0
   12cf8:	bmi	12d04 <__mempcpy_chk@plt+0x1640>
   12cfc:	cmp	sl, #17
   12d00:	bne	127a0 <__mempcpy_chk@plt+0x10dc>
   12d04:	movw	r0, #49602	; 0xc1c2
   12d08:	str	r5, [sp, #16]
   12d0c:	str	r9, [sp, #28]
   12d10:	movt	r0, #2
   12d14:	ldrb	r0, [r0]
   12d18:	cmp	r0, #1
   12d1c:	bne	12d94 <__mempcpy_chk@plt+0x16d0>
   12d20:	movw	r0, #49576	; 0xc1a8
   12d24:	movw	r1, #44598	; 0xae36
   12d28:	mov	r2, #5
   12d2c:	mov	r9, ip
   12d30:	movt	r0, #2
   12d34:	movt	r1, #1
   12d38:	ldr	r8, [r0]
   12d3c:	mov	r0, #0
   12d40:	bl	1140c <dcgettext@plt>
   12d44:	mov	r7, r0
   12d48:	movw	r0, #49632	; 0xc1e0
   12d4c:	ldr	r1, [sp, #28]
   12d50:	movt	r0, #2
   12d54:	ldr	r5, [r0]
   12d58:	mov	r0, #4
   12d5c:	bl	17604 <__mempcpy_chk@plt+0x5f40>
   12d60:	str	r0, [sp]
   12d64:	mov	r0, r8
   12d68:	ldr	r8, [sp, #20]
   12d6c:	mov	r2, r7
   12d70:	mov	r1, #1
   12d74:	mov	r3, r5
   12d78:	mov	r4, #1
   12d7c:	mov	r7, #0
   12d80:	bl	115b0 <__fprintf_chk@plt>
   12d84:	bl	191e4 <__mempcpy_chk@plt+0x7b20>
   12d88:	mov	ip, r9
   12d8c:	cmp	r0, #0
   12d90:	beq	12e14 <__mempcpy_chk@plt+0x1750>
   12d94:	ldr	r2, [ip]
   12d98:	cmp	r2, #0
   12d9c:	beq	12e08 <__mempcpy_chk@plt+0x1744>
   12da0:	ldr	r7, [sp, #32]
   12da4:	ldr	r4, [sp, #36]	; 0x24
   12da8:	mov	r0, r7
   12dac:	mov	r1, r4
   12db0:	bl	13ae8 <__mempcpy_chk@plt+0x2424>
   12db4:	mov	r3, r0
   12db8:	mov	r0, r7
   12dbc:	mov	r2, r7
   12dc0:	mov	r1, r4
   12dc4:	mov	r7, r3
   12dc8:	bl	11640 <renameat@plt>
   12dcc:	cmp	r0, #0
   12dd0:	beq	12e08 <__mempcpy_chk@plt+0x1744>
   12dd4:	bl	11550 <__errno_location@plt>
   12dd8:	ldr	r4, [r0]
   12ddc:	mov	r0, r7
   12de0:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12de4:	ldr	r9, [sp, #28]
   12de8:	ldr	r5, [sp, #16]
   12dec:	mov	r7, #0
   12df0:	cmp	r4, #2
   12df4:	mov	r6, #0
   12df8:	beq	127a0 <__mempcpy_chk@plt+0x10dc>
   12dfc:	movw	r1, #44615	; 0xae47
   12e00:	movt	r1, #1
   12e04:	b	1289c <__mempcpy_chk@plt+0x11d8>
   12e08:	ldr	r9, [sp, #28]
   12e0c:	ldr	r5, [sp, #16]
   12e10:	b	127a0 <__mempcpy_chk@plt+0x10dc>
   12e14:	ldr	r0, [sp, #16]
   12e18:	b	12bf0 <__mempcpy_chk@plt+0x152c>
   12e1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e20:	add	fp, sp, #28
   12e24:	sub	sp, sp, #284	; 0x11c
   12e28:	ldr	r6, [fp, #16]
   12e2c:	mov	sl, r0
   12e30:	ldr	r0, [fp, #8]
   12e34:	mov	r5, r3
   12e38:	mov	r8, r2
   12e3c:	mov	r9, r1
   12e40:	cmn	r6, #1
   12e44:	ble	12e54 <__mempcpy_chk@plt+0x1790>
   12e48:	cmp	r6, #17
   12e4c:	beq	12e84 <__mempcpy_chk@plt+0x17c0>
   12e50:	b	12f94 <__mempcpy_chk@plt+0x18d0>
   12e54:	str	r0, [sp]
   12e58:	mov	r0, sl
   12e5c:	mov	r1, r9
   12e60:	mov	r2, r8
   12e64:	mov	r3, r5
   12e68:	bl	115c8 <linkat@plt>
   12e6c:	cmp	r0, #0
   12e70:	beq	12f38 <__mempcpy_chk@plt+0x1874>
   12e74:	bl	11550 <__errno_location@plt>
   12e78:	ldr	r6, [r0]
   12e7c:	cmp	r6, #17
   12e80:	bne	12f94 <__mempcpy_chk@plt+0x18d0>
   12e84:	ldr	r0, [fp, #12]
   12e88:	cmp	r0, #0
   12e8c:	beq	12f94 <__mempcpy_chk@plt+0x18d0>
   12e90:	mov	r0, r5
   12e94:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   12e98:	sub	r4, r0, r5
   12e9c:	add	r0, r4, #9
   12ea0:	cmp	r0, #256	; 0x100
   12ea4:	bhi	12eb0 <__mempcpy_chk@plt+0x17ec>
   12ea8:	add	r7, sp, #24
   12eac:	b	12ec0 <__mempcpy_chk@plt+0x17fc>
   12eb0:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   12eb4:	mov	r7, r0
   12eb8:	cmp	r0, #0
   12ebc:	beq	12f8c <__mempcpy_chk@plt+0x18c8>
   12ec0:	mov	r0, r7
   12ec4:	mov	r1, r5
   12ec8:	mov	r2, r4
   12ecc:	mvn	r3, #0
   12ed0:	mvn	r6, #0
   12ed4:	bl	116c4 <__mempcpy_chk@plt>
   12ed8:	movw	r1, #45160	; 0xb068
   12edc:	movw	r3, #12192	; 0x2fa0
   12ee0:	add	r2, sp, #8
   12ee4:	movt	r1, #1
   12ee8:	movt	r3, #1
   12eec:	vldr	d16, [r1]
   12ef0:	mov	r1, #0
   12ef4:	strb	r1, [r0, #8]
   12ef8:	mov	r1, #0
   12efc:	vst1.8	{d16}, [r0]
   12f00:	ldr	r0, [fp, #8]
   12f04:	str	r0, [sp, #20]
   12f08:	mov	r0, #6
   12f0c:	str	r8, [sp, #16]
   12f10:	str	r9, [sp, #12]
   12f14:	str	sl, [sp, #8]
   12f18:	str	r0, [sp]
   12f1c:	mov	r0, r7
   12f20:	bl	18208 <__mempcpy_chk@plt+0x6b44>
   12f24:	cmp	r0, #0
   12f28:	beq	12f40 <__mempcpy_chk@plt+0x187c>
   12f2c:	bl	11550 <__errno_location@plt>
   12f30:	ldr	r6, [r0]
   12f34:	b	12f74 <__mempcpy_chk@plt+0x18b0>
   12f38:	mov	r6, #0
   12f3c:	b	12f94 <__mempcpy_chk@plt+0x18d0>
   12f40:	mov	r0, r8
   12f44:	mov	r1, r7
   12f48:	mov	r2, r8
   12f4c:	mov	r3, r5
   12f50:	bl	11640 <renameat@plt>
   12f54:	cmp	r0, #0
   12f58:	beq	12f64 <__mempcpy_chk@plt+0x18a0>
   12f5c:	bl	11550 <__errno_location@plt>
   12f60:	ldr	r6, [r0]
   12f64:	mov	r0, r8
   12f68:	mov	r1, r7
   12f6c:	mov	r2, #0
   12f70:	bl	113a0 <unlinkat@plt>
   12f74:	add	r0, sp, #24
   12f78:	cmp	r7, r0
   12f7c:	beq	12f94 <__mempcpy_chk@plt+0x18d0>
   12f80:	mov	r0, r7
   12f84:	bl	14948 <__mempcpy_chk@plt+0x3284>
   12f88:	b	12f94 <__mempcpy_chk@plt+0x18d0>
   12f8c:	bl	11550 <__errno_location@plt>
   12f90:	ldr	r6, [r0]
   12f94:	mov	r0, r6
   12f98:	sub	sp, fp, #28
   12f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fa0:	push	{fp, lr}
   12fa4:	mov	fp, sp
   12fa8:	sub	sp, sp, #8
   12fac:	mov	ip, r0
   12fb0:	ldm	r1, {r0, r3}
   12fb4:	ldr	r2, [r1, #8]
   12fb8:	ldr	r1, [r1, #12]
   12fbc:	str	r1, [sp]
   12fc0:	mov	r1, r3
   12fc4:	mov	r3, ip
   12fc8:	bl	115c8 <linkat@plt>
   12fcc:	mov	sp, fp
   12fd0:	pop	{fp, pc}
   12fd4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12fd8:	add	fp, sp, #24
   12fdc:	sub	sp, sp, #272	; 0x110
   12fe0:	ldr	r5, [fp, #8]
   12fe4:	mov	r7, r3
   12fe8:	mov	r6, r2
   12fec:	mov	r8, r1
   12ff0:	mov	r9, r0
   12ff4:	cmn	r5, #1
   12ff8:	ble	1302c <__mempcpy_chk@plt+0x1968>
   12ffc:	cmp	r5, #17
   13000:	bne	13130 <__mempcpy_chk@plt+0x1a6c>
   13004:	cmp	r7, #0
   13008:	beq	13130 <__mempcpy_chk@plt+0x1a6c>
   1300c:	mov	r0, r6
   13010:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   13014:	sub	r4, r0, r6
   13018:	add	r0, r4, #9
   1301c:	cmp	r0, #256	; 0x100
   13020:	bhi	13058 <__mempcpy_chk@plt+0x1994>
   13024:	add	r7, sp, #12
   13028:	b	13068 <__mempcpy_chk@plt+0x19a4>
   1302c:	mov	r0, r9
   13030:	mov	r1, r8
   13034:	mov	r2, r6
   13038:	bl	11664 <symlinkat@plt>
   1303c:	cmp	r0, #0
   13040:	beq	130d4 <__mempcpy_chk@plt+0x1a10>
   13044:	bl	11550 <__errno_location@plt>
   13048:	ldr	r5, [r0]
   1304c:	cmp	r5, #17
   13050:	beq	13004 <__mempcpy_chk@plt+0x1940>
   13054:	b	13130 <__mempcpy_chk@plt+0x1a6c>
   13058:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   1305c:	mov	r7, r0
   13060:	cmp	r0, #0
   13064:	beq	13128 <__mempcpy_chk@plt+0x1a64>
   13068:	mov	r0, r7
   1306c:	mov	r1, r6
   13070:	mov	r2, r4
   13074:	mvn	r3, #0
   13078:	mvn	r5, #0
   1307c:	bl	116c4 <__mempcpy_chk@plt>
   13080:	movw	r1, #45160	; 0xb068
   13084:	movw	r3, #12604	; 0x313c
   13088:	add	r2, sp, #4
   1308c:	movt	r1, #1
   13090:	movt	r3, #1
   13094:	vldr	d16, [r1]
   13098:	mov	r1, #0
   1309c:	strb	r1, [r0, #8]
   130a0:	mov	r1, #0
   130a4:	vst1.8	{d16}, [r0]
   130a8:	mov	r0, #6
   130ac:	str	r8, [sp, #8]
   130b0:	str	r9, [sp, #4]
   130b4:	str	r0, [sp]
   130b8:	mov	r0, r7
   130bc:	bl	18208 <__mempcpy_chk@plt+0x6b44>
   130c0:	cmp	r0, #0
   130c4:	beq	130dc <__mempcpy_chk@plt+0x1a18>
   130c8:	bl	11550 <__errno_location@plt>
   130cc:	ldr	r5, [r0]
   130d0:	b	13110 <__mempcpy_chk@plt+0x1a4c>
   130d4:	mov	r5, #0
   130d8:	b	13130 <__mempcpy_chk@plt+0x1a6c>
   130dc:	mov	r0, r8
   130e0:	mov	r1, r7
   130e4:	mov	r2, r8
   130e8:	mov	r3, r6
   130ec:	bl	11640 <renameat@plt>
   130f0:	cmp	r0, #0
   130f4:	beq	13110 <__mempcpy_chk@plt+0x1a4c>
   130f8:	bl	11550 <__errno_location@plt>
   130fc:	ldr	r5, [r0]
   13100:	mov	r0, r8
   13104:	mov	r1, r7
   13108:	mov	r2, #0
   1310c:	bl	113a0 <unlinkat@plt>
   13110:	add	r0, sp, #12
   13114:	cmp	r7, r0
   13118:	beq	13130 <__mempcpy_chk@plt+0x1a6c>
   1311c:	mov	r0, r7
   13120:	bl	14948 <__mempcpy_chk@plt+0x3284>
   13124:	b	13130 <__mempcpy_chk@plt+0x1a6c>
   13128:	bl	11550 <__errno_location@plt>
   1312c:	ldr	r5, [r0]
   13130:	mov	r0, r5
   13134:	sub	sp, fp, #24
   13138:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1313c:	mov	r2, r0
   13140:	ldm	r1, {r0, r1}
   13144:	b	11664 <symlinkat@plt>
   13148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1314c:	add	fp, sp, #28
   13150:	sub	sp, sp, #4
   13154:	mov	r7, r1
   13158:	ldrb	r1, [r1, #1]
   1315c:	mov	r6, r0
   13160:	ldrb	r0, [r0, #1]
   13164:	mov	r4, #0
   13168:	sub	r0, r0, #47	; 0x2f
   1316c:	sub	r1, r1, #47	; 0x2f
   13170:	clz	r0, r0
   13174:	clz	r1, r1
   13178:	lsr	r0, r0, #5
   1317c:	lsr	r1, r1, #5
   13180:	teq	r1, r0
   13184:	bne	13464 <__mempcpy_chk@plt+0x1da0>
   13188:	mov	sl, r3
   1318c:	ldrb	r3, [r7]
   13190:	ldrb	r1, [r6]
   13194:	mov	r8, r2
   13198:	cmp	r3, #0
   1319c:	beq	131ec <__mempcpy_chk@plt+0x1b28>
   131a0:	mov	r0, #0
   131a4:	mov	r2, #1
   131a8:	tst	r1, #255	; 0xff
   131ac:	beq	13214 <__mempcpy_chk@plt+0x1b50>
   131b0:	uxtb	r4, r1
   131b4:	uxtb	r5, r3
   131b8:	cmp	r5, r4
   131bc:	bne	13214 <__mempcpy_chk@plt+0x1b50>
   131c0:	ldrb	r3, [r7, r2]
   131c4:	ldrb	r1, [r6, r2]
   131c8:	cmp	r4, #47	; 0x2f
   131cc:	moveq	r0, r2
   131d0:	add	r2, r2, #1
   131d4:	cmp	r3, #0
   131d8:	bne	131a8 <__mempcpy_chk@plt+0x1ae4>
   131dc:	sub	r2, r2, #1
   131e0:	cmp	r1, #0
   131e4:	bne	131fc <__mempcpy_chk@plt+0x1b38>
   131e8:	b	133d8 <__mempcpy_chk@plt+0x1d14>
   131ec:	mov	r2, #0
   131f0:	mov	r0, #0
   131f4:	cmp	r1, #0
   131f8:	beq	133d8 <__mempcpy_chk@plt+0x1d14>
   131fc:	cmp	r1, #47	; 0x2f
   13200:	moveq	r0, r2
   13204:	cmp	r0, #0
   13208:	bne	1322c <__mempcpy_chk@plt+0x1b68>
   1320c:	mov	r4, #0
   13210:	b	13464 <__mempcpy_chk@plt+0x1da0>
   13214:	tst	r1, #255	; 0xff
   13218:	uxtbeq	r1, r3
   1321c:	cmpeq	r1, #47	; 0x2f
   13220:	beq	133d4 <__mempcpy_chk@plt+0x1d10>
   13224:	cmp	r0, #0
   13228:	beq	1320c <__mempcpy_chk@plt+0x1b48>
   1322c:	ldrb	r1, [r6, r0]!
   13230:	ldrb	r0, [r7, r0]!
   13234:	mov	r5, r6
   13238:	cmp	r1, #47	; 0x2f
   1323c:	sub	r1, r1, #47	; 0x2f
   13240:	addeq	r5, r5, #1
   13244:	cmp	r0, #47	; 0x2f
   13248:	clz	r1, r1
   1324c:	addeq	r7, r7, #1
   13250:	lsr	r1, r1, #5
   13254:	ldrb	r0, [r7]
   13258:	cmp	r0, #0
   1325c:	beq	13298 <__mempcpy_chk@plt+0x1bd4>
   13260:	movw	r2, #49588	; 0xc1b4
   13264:	cmp	r8, #0
   13268:	str	r1, [sp]
   1326c:	movt	r2, #2
   13270:	beq	132d8 <__mempcpy_chk@plt+0x1c14>
   13274:	mov	r4, #1
   13278:	cmp	sl, #3
   1327c:	bcc	132f8 <__mempcpy_chk@plt+0x1c34>
   13280:	movw	r0, #11822	; 0x2e2e
   13284:	mov	r4, #0
   13288:	sub	sl, sl, #2
   1328c:	strh	r0, [r8]
   13290:	strb	r4, [r8, #2]!
   13294:	b	132f8 <__mempcpy_chk@plt+0x1c34>
   13298:	ldrb	r0, [r6, r1]
   1329c:	movw	r1, #45178	; 0xb07a
   132a0:	movt	r1, #1
   132a4:	cmp	r0, #0
   132a8:	moveq	r5, r1
   132ac:	cmp	r8, #0
   132b0:	beq	133e8 <__mempcpy_chk@plt+0x1d24>
   132b4:	mov	r0, r5
   132b8:	bl	11538 <strlen@plt>
   132bc:	cmp	r0, sl
   132c0:	bcs	1342c <__mempcpy_chk@plt+0x1d68>
   132c4:	add	r2, r0, #1
   132c8:	mov	r0, r8
   132cc:	mov	r1, r5
   132d0:	bl	113e8 <memcpy@plt>
   132d4:	b	13460 <__mempcpy_chk@plt+0x1d9c>
   132d8:	ldr	r1, [r2]
   132dc:	movw	r0, #45177	; 0xb079
   132e0:	movt	r0, #1
   132e4:	bl	1134c <fputs_unlocked@plt>
   132e8:	movw	r2, #49588	; 0xc1b4
   132ec:	mov	r8, #0
   132f0:	mov	r4, #0
   132f4:	movt	r2, #2
   132f8:	movw	r9, #45176	; 0xb078
   132fc:	movt	r9, #1
   13300:	b	13310 <__mempcpy_chk@plt+0x1c4c>
   13304:	cmp	r0, #0
   13308:	beq	1336c <__mempcpy_chk@plt+0x1ca8>
   1330c:	add	r7, r7, #1
   13310:	ldrb	r0, [r7]
   13314:	cmp	r0, #47	; 0x2f
   13318:	bne	13304 <__mempcpy_chk@plt+0x1c40>
   1331c:	cmp	r8, #0
   13320:	beq	13344 <__mempcpy_chk@plt+0x1c80>
   13324:	mov	r0, #1
   13328:	cmp	sl, #4
   1332c:	bcc	13360 <__mempcpy_chk@plt+0x1c9c>
   13330:	movw	r0, #11823	; 0x2e2f
   13334:	sub	sl, sl, #3
   13338:	movt	r0, #46	; 0x2e
   1333c:	str	r0, [r8], #3
   13340:	b	1335c <__mempcpy_chk@plt+0x1c98>
   13344:	ldr	r1, [r2]
   13348:	mov	r0, r9
   1334c:	bl	1134c <fputs_unlocked@plt>
   13350:	movw	r2, #49588	; 0xc1b4
   13354:	mov	r8, #0
   13358:	movt	r2, #2
   1335c:	mov	r0, #0
   13360:	and	r1, r4, #1
   13364:	orr	r4, r0, r1
   13368:	b	1330c <__mempcpy_chk@plt+0x1c48>
   1336c:	ldr	r0, [sp]
   13370:	ldrb	r0, [r6, r0]
   13374:	and	r6, r4, #1
   13378:	cmp	r0, #0
   1337c:	beq	133c4 <__mempcpy_chk@plt+0x1d00>
   13380:	cmp	r8, #0
   13384:	beq	13400 <__mempcpy_chk@plt+0x1d3c>
   13388:	cmp	sl, #1
   1338c:	mov	r4, #1
   13390:	movhi	r0, #47	; 0x2f
   13394:	movls	r6, #1
   13398:	subhi	sl, sl, #1
   1339c:	strhhi	r0, [r8], #1
   133a0:	mov	r0, r5
   133a4:	bl	11538 <strlen@plt>
   133a8:	cmp	r0, sl
   133ac:	bcs	13424 <__mempcpy_chk@plt+0x1d60>
   133b0:	add	r2, r0, #1
   133b4:	mov	r0, r8
   133b8:	mov	r1, r5
   133bc:	bl	113e8 <memcpy@plt>
   133c0:	b	13420 <__mempcpy_chk@plt+0x1d5c>
   133c4:	mov	r4, #1
   133c8:	cmp	r6, #0
   133cc:	bne	1342c <__mempcpy_chk@plt+0x1d68>
   133d0:	b	13464 <__mempcpy_chk@plt+0x1da0>
   133d4:	sub	r2, r2, #1
   133d8:	mov	r0, r2
   133dc:	cmp	r0, #0
   133e0:	bne	1322c <__mempcpy_chk@plt+0x1b68>
   133e4:	b	1320c <__mempcpy_chk@plt+0x1b48>
   133e8:	movw	r0, #49588	; 0xc1b4
   133ec:	movt	r0, #2
   133f0:	ldr	r1, [r0]
   133f4:	mov	r0, r5
   133f8:	bl	1134c <fputs_unlocked@plt>
   133fc:	b	13460 <__mempcpy_chk@plt+0x1d9c>
   13400:	ldr	r1, [r2]
   13404:	movw	r0, #46610	; 0xb612
   13408:	mov	r4, r2
   1340c:	movt	r0, #1
   13410:	bl	1134c <fputs_unlocked@plt>
   13414:	ldr	r1, [r4]
   13418:	mov	r0, r5
   1341c:	bl	1134c <fputs_unlocked@plt>
   13420:	mov	r4, #0
   13424:	orrs	r0, r4, r6
   13428:	beq	13460 <__mempcpy_chk@plt+0x1d9c>
   1342c:	movw	r1, #45180	; 0xb07c
   13430:	mov	r0, #0
   13434:	mov	r2, #5
   13438:	mov	r4, #0
   1343c:	movt	r1, #1
   13440:	bl	1140c <dcgettext@plt>
   13444:	movw	r2, #46763	; 0xb6ab
   13448:	mov	r3, r0
   1344c:	mov	r0, #0
   13450:	mov	r1, #36	; 0x24
   13454:	movt	r2, #1
   13458:	bl	114a8 <error@plt>
   1345c:	b	13464 <__mempcpy_chk@plt+0x1da0>
   13460:	mov	r4, #1
   13464:	mov	r0, r4
   13468:	sub	sp, fp, #28
   1346c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13470:	push	{r4, r5, fp, lr}
   13474:	add	fp, sp, #8
   13478:	movw	r5, #45244	; 0xb0bc
   1347c:	mov	r4, r0
   13480:	cmp	r0, #0
   13484:	movt	r5, #1
   13488:	bne	134a4 <__mempcpy_chk@plt+0x1de0>
   1348c:	movw	r0, #45220	; 0xb0a4
   13490:	movt	r0, #1
   13494:	bl	114c0 <getenv@plt>
   13498:	mov	r4, r0
   1349c:	cmp	r0, #0
   134a0:	beq	134c8 <__mempcpy_chk@plt+0x1e04>
   134a4:	ldrb	r0, [r4]
   134a8:	cmp	r0, #0
   134ac:	beq	134c8 <__mempcpy_chk@plt+0x1e04>
   134b0:	mov	r0, r4
   134b4:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   134b8:	movw	r5, #45244	; 0xb0bc
   134bc:	cmp	r4, r0
   134c0:	movt	r5, #1
   134c4:	moveq	r5, r4
   134c8:	movw	r0, #49616	; 0xc1d0
   134cc:	movt	r0, #2
   134d0:	str	r5, [r0]
   134d4:	pop	{r4, r5, fp, pc}
   134d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134dc:	add	fp, sp, #28
   134e0:	sub	sp, sp, #68	; 0x44
   134e4:	str	r0, [sp, #48]	; 0x30
   134e8:	mov	r0, r1
   134ec:	str	r3, [sp, #40]	; 0x28
   134f0:	mov	r7, r2
   134f4:	mov	r4, r1
   134f8:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   134fc:	str	r4, [fp, #-40]	; 0xffffffd8
   13500:	sub	r4, r0, r4
   13504:	bl	13c68 <__mempcpy_chk@plt+0x25a4>
   13508:	mov	r6, r0
   1350c:	add	r9, r4, r0
   13510:	movw	r0, #49616	; 0xc1d0
   13514:	str	r4, [fp, #-44]	; 0xffffffd4
   13518:	movt	r0, #2
   1351c:	ldr	r0, [r0]
   13520:	cmp	r0, #0
   13524:	bne	1357c <__mempcpy_chk@plt+0x1eb8>
   13528:	movw	r0, #45220	; 0xb0a4
   1352c:	movt	r0, #1
   13530:	bl	114c0 <getenv@plt>
   13534:	mov	r5, r0
   13538:	movw	r0, #45244	; 0xb0bc
   1353c:	movt	r0, #1
   13540:	cmp	r5, #0
   13544:	beq	13570 <__mempcpy_chk@plt+0x1eac>
   13548:	ldrb	r1, [r5]
   1354c:	cmp	r1, #0
   13550:	beq	13570 <__mempcpy_chk@plt+0x1eac>
   13554:	mov	r0, r5
   13558:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   1355c:	mov	r1, r0
   13560:	movw	r0, #45244	; 0xb0bc
   13564:	cmp	r5, r1
   13568:	movt	r0, #1
   1356c:	moveq	r0, r5
   13570:	movw	r1, #49616	; 0xc1d0
   13574:	movt	r1, #2
   13578:	str	r0, [r1]
   1357c:	bl	11538 <strlen@plt>
   13580:	add	r0, r0, #1
   13584:	cmp	r0, #9
   13588:	str	r0, [sp, #32]
   1358c:	movle	r0, #9
   13590:	add	r0, r9, r0
   13594:	add	r0, r0, #1
   13598:	str	r0, [sp, #20]
   1359c:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   135a0:	cmp	r0, #0
   135a4:	beq	13a98 <__mempcpy_chk@plt+0x23d4>
   135a8:	mov	r8, r0
   135ac:	mvn	r0, #99	; 0x63
   135b0:	add	r4, r6, #4
   135b4:	mov	sl, #0
   135b8:	str	r6, [sp, #8]
   135bc:	str	r9, [sp, #36]	; 0x24
   135c0:	str	r0, [fp, #-32]	; 0xffffffe0
   135c4:	add	r0, r9, #4
   135c8:	str	r0, [sp, #4]
   135cc:	add	r0, r6, #2
   135d0:	str	r0, [fp, #-36]	; 0xffffffdc
   135d4:	mov	r0, #0
   135d8:	str	r0, [sp, #24]
   135dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   135e0:	mov	r0, r8
   135e4:	mov	r2, r9
   135e8:	bl	113e8 <memcpy@plt>
   135ec:	cmp	r7, #1
   135f0:	bne	13618 <__mempcpy_chk@plt+0x1f54>
   135f4:	movw	r1, #49616	; 0xc1d0
   135f8:	ldr	r2, [sp, #32]
   135fc:	add	r0, r8, r9
   13600:	movt	r1, #2
   13604:	ldr	r1, [r1]
   13608:	bl	113e8 <memcpy@plt>
   1360c:	mov	r5, #1
   13610:	mov	r6, #0
   13614:	b	139f8 <__mempcpy_chk@plt+0x2334>
   13618:	cmp	sl, #0
   1361c:	str	r7, [sp, #44]	; 0x2c
   13620:	beq	13630 <__mempcpy_chk@plt+0x1f6c>
   13624:	mov	r0, sl
   13628:	bl	11388 <rewinddir@plt>
   1362c:	b	13680 <__mempcpy_chk@plt+0x1fbc>
   13630:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13634:	mov	r1, r8
   13638:	mov	r2, #0
   1363c:	sub	r3, fp, #32
   13640:	add	r5, r8, r0
   13644:	mov	r0, #46	; 0x2e
   13648:	ldrh	r6, [r5]
   1364c:	strh	r0, [r5]
   13650:	ldr	r0, [sp, #48]	; 0x30
   13654:	bl	15e78 <__mempcpy_chk@plt+0x47b4>
   13658:	cmp	r0, #0
   1365c:	beq	138dc <__mempcpy_chk@plt+0x2218>
   13660:	movw	r1, #32302	; 0x7e2e
   13664:	mov	sl, r0
   13668:	mov	r0, r8
   1366c:	strh	r6, [r5]
   13670:	movt	r1, #32305	; 0x7e31
   13674:	str	r1, [r0, r9]!
   13678:	mov	r1, #0
   1367c:	strb	r1, [r0, #4]
   13680:	mov	r0, sl
   13684:	bl	11628 <readdir64@plt>
   13688:	cmp	r0, #0
   1368c:	beq	13908 <__mempcpy_chk@plt+0x2244>
   13690:	mov	r6, r0
   13694:	mov	r0, #1
   13698:	str	r0, [sp, #16]
   1369c:	mov	r0, #2
   136a0:	str	r0, [sp, #28]
   136a4:	ldr	r0, [sp, #20]
   136a8:	str	r0, [sp, #12]
   136ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136b0:	add	r7, r8, r0
   136b4:	b	136cc <__mempcpy_chk@plt+0x2008>
   136b8:	mov	r0, sl
   136bc:	bl	11628 <readdir64@plt>
   136c0:	mov	r6, r0
   136c4:	cmp	r0, #0
   136c8:	beq	13888 <__mempcpy_chk@plt+0x21c4>
   136cc:	add	r5, r6, #19
   136d0:	mov	r0, r5
   136d4:	bl	11538 <strlen@plt>
   136d8:	cmp	r0, r4
   136dc:	bcc	136b8 <__mempcpy_chk@plt+0x1ff4>
   136e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   136e4:	mov	r0, r7
   136e8:	mov	r1, r5
   136ec:	bl	1152c <bcmp@plt>
   136f0:	cmp	r0, #0
   136f4:	bne	136b8 <__mempcpy_chk@plt+0x1ff4>
   136f8:	ldr	r0, [sp, #8]
   136fc:	add	r0, r6, r0
   13700:	mov	r6, r0
   13704:	ldrb	r1, [r6, #21]!
   13708:	sub	r2, r1, #49	; 0x31
   1370c:	uxtb	r2, r2
   13710:	cmp	r2, #8
   13714:	bhi	13874 <__mempcpy_chk@plt+0x21b0>
   13718:	sub	r1, r1, #57	; 0x39
   1371c:	sub	r2, r6, #2
   13720:	mov	r5, #1
   13724:	clz	r1, r1
   13728:	lsr	r7, r1, #5
   1372c:	ldrb	r1, [r2, #3]
   13730:	sub	r2, r1, #48	; 0x30
   13734:	cmp	r2, #9
   13738:	bhi	1376c <__mempcpy_chk@plt+0x20a8>
   1373c:	mov	r2, #23
   13740:	mvn	r5, #56	; 0x38
   13744:	uxtab	r1, r5, r1
   13748:	clz	r1, r1
   1374c:	lsr	r1, r1, #5
   13750:	and	r7, r1, r7
   13754:	ldrb	r1, [r0, r2]
   13758:	add	r2, r2, #1
   1375c:	sub	r3, r1, #48	; 0x30
   13760:	cmp	r3, #10
   13764:	bcc	13744 <__mempcpy_chk@plt+0x2080>
   13768:	sub	r5, r2, #22
   1376c:	cmp	r1, #126	; 0x7e
   13770:	bne	13874 <__mempcpy_chk@plt+0x21b0>
   13774:	add	r0, r5, r6
   13778:	ldrb	r0, [r0, #1]
   1377c:	cmp	r0, #0
   13780:	bne	13874 <__mempcpy_chk@plt+0x21b0>
   13784:	ldr	r0, [sp, #16]
   13788:	cmp	r0, r5
   1378c:	blt	137b0 <__mempcpy_chk@plt+0x20ec>
   13790:	bne	13874 <__mempcpy_chk@plt+0x21b0>
   13794:	ldr	r2, [sp, #16]
   13798:	add	r0, r8, r9
   1379c:	mov	r1, r6
   137a0:	add	r0, r0, #2
   137a4:	bl	11400 <memcmp@plt>
   137a8:	cmp	r0, #0
   137ac:	bgt	13874 <__mempcpy_chk@plt+0x21b0>
   137b0:	ldr	r0, [sp, #4]
   137b4:	add	r1, r5, r7
   137b8:	str	r1, [sp, #16]
   137bc:	add	r9, r0, r1
   137c0:	ldr	r1, [sp, #12]
   137c4:	cmp	r1, r9
   137c8:	bge	137fc <__mempcpy_chk@plt+0x2138>
   137cc:	add	r0, r9, r9, asr #1
   137d0:	cmp	r0, r9
   137d4:	movvc	r9, r0
   137d8:	mov	r0, r8
   137dc:	cmp	r9, #0
   137e0:	mov	r1, r9
   137e4:	orreq	r1, r1, #1
   137e8:	bl	192e8 <__mempcpy_chk@plt+0x7c24>
   137ec:	cmp	r0, #0
   137f0:	mov	r3, #48	; 0x30
   137f4:	bne	13808 <__mempcpy_chk@plt+0x2144>
   137f8:	b	13ab4 <__mempcpy_chk@plt+0x23f0>
   137fc:	mov	r0, r8
   13800:	mov	r9, r1
   13804:	mov	r3, #48	; 0x30
   13808:	ldr	r1, [sp, #36]	; 0x24
   1380c:	movw	r2, #32302	; 0x7e2e
   13810:	str	r0, [sp, #28]
   13814:	strh	r2, [r0, r1]!
   13818:	add	r2, r5, #2
   1381c:	mov	r1, r6
   13820:	strb	r3, [r0, #2]!
   13824:	add	r8, r0, r7
   13828:	mov	r0, r8
   1382c:	bl	113e8 <memcpy@plt>
   13830:	add	r0, r8, r5
   13834:	ldrb	r1, [r0, #-1]!
   13838:	cmp	r1, #57	; 0x39
   1383c:	bne	1385c <__mempcpy_chk@plt+0x2198>
   13840:	ldr	r8, [sp, #28]
   13844:	mov	r2, #48	; 0x30
   13848:	strb	r2, [r0]
   1384c:	ldrb	r1, [r0, #-1]!
   13850:	cmp	r1, #57	; 0x39
   13854:	beq	13848 <__mempcpy_chk@plt+0x2184>
   13858:	b	13860 <__mempcpy_chk@plt+0x219c>
   1385c:	ldr	r8, [sp, #28]
   13860:	str	r9, [sp, #12]
   13864:	ldr	r9, [sp, #36]	; 0x24
   13868:	add	r1, r1, #1
   1386c:	str	r7, [sp, #28]
   13870:	strb	r1, [r0]
   13874:	mov	r0, sl
   13878:	bl	11628 <readdir64@plt>
   1387c:	mov	r6, r0
   13880:	cmp	r0, #0
   13884:	bne	136ac <__mempcpy_chk@plt+0x1fe8>
   13888:	ldr	r0, [sp, #28]
   1388c:	cmp	r0, #1
   13890:	beq	13910 <__mempcpy_chk@plt+0x224c>
   13894:	cmp	r0, #2
   13898:	beq	138ac <__mempcpy_chk@plt+0x21e8>
   1389c:	mov	r6, #0
   138a0:	cmp	r0, #3
   138a4:	bne	139f4 <__mempcpy_chk@plt+0x2330>
   138a8:	b	13ab4 <__mempcpy_chk@plt+0x23f0>
   138ac:	ldr	r7, [sp, #44]	; 0x2c
   138b0:	cmp	r7, #2
   138b4:	bne	13910 <__mempcpy_chk@plt+0x224c>
   138b8:	movw	r1, #49616	; 0xc1d0
   138bc:	ldr	r2, [sp, #32]
   138c0:	add	r0, r8, r9
   138c4:	movt	r1, #2
   138c8:	ldr	r1, [r1]
   138cc:	bl	113e8 <memcpy@plt>
   138d0:	mov	r0, #1
   138d4:	str	r0, [sp, #44]	; 0x2c
   138d8:	b	13910 <__mempcpy_chk@plt+0x224c>
   138dc:	bl	11550 <__errno_location@plt>
   138e0:	ldr	r0, [r0]
   138e4:	movw	r2, #32302	; 0x7e2e
   138e8:	mov	r1, r8
   138ec:	strh	r6, [r5]
   138f0:	mov	sl, #0
   138f4:	movt	r2, #32305	; 0x7e31
   138f8:	str	r2, [r1, r9]!
   138fc:	cmp	r0, #12
   13900:	strb	sl, [r1, #4]
   13904:	beq	13ac4 <__mempcpy_chk@plt+0x2400>
   13908:	cmp	r7, #2
   1390c:	beq	138b8 <__mempcpy_chk@plt+0x21f4>
   13910:	ldr	r9, [fp, #-32]	; 0xffffffe0
   13914:	mov	r0, r8
   13918:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   1391c:	mov	r5, r0
   13920:	bl	13c68 <__mempcpy_chk@plt+0x25a4>
   13924:	mov	r6, #0
   13928:	cmp	r0, #15
   1392c:	blt	139f4 <__mempcpy_chk@plt+0x2330>
   13930:	ldr	r1, [sp, #24]
   13934:	mov	r7, r0
   13938:	cmp	r1, #0
   1393c:	bne	139c4 <__mempcpy_chk@plt+0x2300>
   13940:	cmn	r9, #1
   13944:	ble	13974 <__mempcpy_chk@plt+0x22b0>
   13948:	bl	11550 <__errno_location@plt>
   1394c:	mov	r1, r0
   13950:	str	r0, [sp, #28]
   13954:	mov	r0, #0
   13958:	str	r0, [r1]
   1395c:	mov	r0, r9
   13960:	mov	r1, #3
   13964:	bl	11580 <fpathconf@plt>
   13968:	ldr	r1, [sp, #28]
   1396c:	ldr	r1, [r1]
   13970:	b	139ac <__mempcpy_chk@plt+0x22e8>
   13974:	ldrh	r0, [r5]
   13978:	str	r0, [sp, #28]
   1397c:	mov	r0, #46	; 0x2e
   13980:	strh	r0, [r5]
   13984:	bl	11550 <__errno_location@plt>
   13988:	mov	r9, r0
   1398c:	mov	r0, #0
   13990:	mov	r1, #3
   13994:	str	r0, [r9]
   13998:	mov	r0, r8
   1399c:	bl	1137c <pathconf@plt>
   139a0:	ldr	r2, [sp, #28]
   139a4:	ldr	r1, [r9]
   139a8:	strh	r2, [r5]
   139ac:	cmp	r1, #0
   139b0:	subeq	r0, r0, #1
   139b4:	cmn	r0, #1
   139b8:	mov	r1, r0
   139bc:	movwne	r1, #14
   139c0:	movgt	r1, r0
   139c4:	cmp	r7, r1
   139c8:	str	r1, [sp, #24]
   139cc:	ble	139f4 <__mempcpy_chk@plt+0x2330>
   139d0:	ldr	r0, [sp, #36]	; 0x24
   139d4:	mov	r6, #1
   139d8:	add	r0, r8, r0
   139dc:	sub	r0, r0, r5
   139e0:	cmp	r1, r0
   139e4:	suble	r0, r1, #1
   139e8:	mov	r1, #126	; 0x7e
   139ec:	add	r0, r5, r0
   139f0:	strh	r1, [r0]
   139f4:	ldr	r5, [sp, #44]	; 0x2c
   139f8:	ldr	r0, [sp, #40]	; 0x28
   139fc:	cmp	r0, #0
   13a00:	beq	13aa0 <__mempcpy_chk@plt+0x23dc>
   13a04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a08:	ldr	r1, [sp, #48]	; 0x30
   13a0c:	subs	r0, r5, #1
   13a10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13a14:	movwne	r0, #1
   13a18:	str	r0, [sp]
   13a1c:	cmp	r2, #0
   13a20:	mov	r0, r2
   13a24:	movmi	r0, r1
   13a28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a2c:	movwmi	r3, #0
   13a30:	add	r1, r1, r3
   13a34:	add	r3, r8, r3
   13a38:	bl	17c78 <__mempcpy_chk@plt+0x65b4>
   13a3c:	cmp	r0, #0
   13a40:	beq	13aa0 <__mempcpy_chk@plt+0x23dc>
   13a44:	mov	r9, r8
   13a48:	mov	r8, r5
   13a4c:	mvn	r7, r6
   13a50:	bl	11550 <__errno_location@plt>
   13a54:	ldr	r6, [r0]
   13a58:	mov	r5, r0
   13a5c:	sub	r0, r6, #17
   13a60:	clz	r0, r0
   13a64:	lsr	r0, r0, #5
   13a68:	tst	r7, r0
   13a6c:	mov	r7, r8
   13a70:	mov	r8, r9
   13a74:	ldr	r9, [sp, #36]	; 0x24
   13a78:	bne	135dc <__mempcpy_chk@plt+0x1f18>
   13a7c:	cmp	sl, #0
   13a80:	beq	13a8c <__mempcpy_chk@plt+0x23c8>
   13a84:	mov	r0, sl
   13a88:	bl	116ac <closedir@plt>
   13a8c:	mov	r0, r8
   13a90:	bl	14948 <__mempcpy_chk@plt+0x3284>
   13a94:	str	r6, [r5]
   13a98:	mov	r8, #0
   13a9c:	b	13adc <__mempcpy_chk@plt+0x2418>
   13aa0:	cmp	sl, #0
   13aa4:	beq	13adc <__mempcpy_chk@plt+0x2418>
   13aa8:	mov	r0, sl
   13aac:	bl	116ac <closedir@plt>
   13ab0:	b	13adc <__mempcpy_chk@plt+0x2418>
   13ab4:	cmp	sl, #0
   13ab8:	beq	13ac4 <__mempcpy_chk@plt+0x2400>
   13abc:	mov	r0, sl
   13ac0:	bl	116ac <closedir@plt>
   13ac4:	mov	r0, r8
   13ac8:	bl	14948 <__mempcpy_chk@plt+0x3284>
   13acc:	bl	11550 <__errno_location@plt>
   13ad0:	mov	r1, #12
   13ad4:	mov	r8, #0
   13ad8:	str	r1, [r0]
   13adc:	mov	r0, r8
   13ae0:	sub	sp, fp, #28
   13ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ae8:	push	{fp, lr}
   13aec:	mov	fp, sp
   13af0:	mov	r3, #0
   13af4:	bl	134d8 <__mempcpy_chk@plt+0x1e14>
   13af8:	cmp	r0, #0
   13afc:	popne	{fp, pc}
   13b00:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   13b04:	push	{r4, sl, fp, lr}
   13b08:	add	fp, sp, #8
   13b0c:	sub	sp, sp, #16
   13b10:	mov	r2, #2
   13b14:	cmp	r1, #0
   13b18:	beq	13b60 <__mempcpy_chk@plt+0x249c>
   13b1c:	ldrb	r3, [r1]
   13b20:	cmp	r3, #0
   13b24:	beq	13b60 <__mempcpy_chk@plt+0x249c>
   13b28:	movw	r2, #49552	; 0xc190
   13b2c:	mov	r4, #4
   13b30:	mov	r3, #1
   13b34:	movt	r2, #2
   13b38:	str	r4, [sp]
   13b3c:	movw	r4, #45248	; 0xb0c0
   13b40:	movt	r4, #1
   13b44:	ldr	r2, [r2]
   13b48:	stmib	sp, {r2, r3}
   13b4c:	movw	r2, #45280	; 0xb0e0
   13b50:	mov	r3, r4
   13b54:	movt	r2, #1
   13b58:	bl	19650 <__mempcpy_chk@plt+0x7f8c>
   13b5c:	ldr	r2, [r4, r0, lsl #2]
   13b60:	mov	r0, r2
   13b64:	sub	sp, fp, #8
   13b68:	pop	{r4, sl, fp, pc}
   13b6c:	push	{r4, sl, fp, lr}
   13b70:	add	fp, sp, #8
   13b74:	sub	sp, sp, #16
   13b78:	cmp	r1, #0
   13b7c:	beq	13bac <__mempcpy_chk@plt+0x24e8>
   13b80:	ldrb	r2, [r1]
   13b84:	cmp	r2, #0
   13b88:	beq	13bac <__mempcpy_chk@plt+0x24e8>
   13b8c:	movw	r2, #49552	; 0xc190
   13b90:	mov	r4, #4
   13b94:	mov	r3, #1
   13b98:	movt	r2, #2
   13b9c:	str	r4, [sp]
   13ba0:	ldr	r2, [r2]
   13ba4:	stmib	sp, {r2, r3}
   13ba8:	b	13bf8 <__mempcpy_chk@plt+0x2534>
   13bac:	movw	r0, #45317	; 0xb105
   13bb0:	movt	r0, #1
   13bb4:	bl	114c0 <getenv@plt>
   13bb8:	mov	r1, r0
   13bbc:	mov	r0, #2
   13bc0:	cmp	r1, #0
   13bc4:	beq	13c14 <__mempcpy_chk@plt+0x2550>
   13bc8:	ldrb	r2, [r1]
   13bcc:	cmp	r2, #0
   13bd0:	beq	13c14 <__mempcpy_chk@plt+0x2550>
   13bd4:	movw	r0, #49552	; 0xc190
   13bd8:	mov	r3, #4
   13bdc:	mov	r2, #1
   13be0:	movt	r0, #2
   13be4:	str	r3, [sp]
   13be8:	ldr	r0, [r0]
   13bec:	stmib	sp, {r0, r2}
   13bf0:	movw	r0, #45316	; 0xb104
   13bf4:	movt	r0, #1
   13bf8:	movw	r4, #45248	; 0xb0c0
   13bfc:	movw	r2, #45280	; 0xb0e0
   13c00:	movt	r4, #1
   13c04:	movt	r2, #1
   13c08:	mov	r3, r4
   13c0c:	bl	19650 <__mempcpy_chk@plt+0x7f8c>
   13c10:	ldr	r0, [r4, r0, lsl #2]
   13c14:	sub	sp, fp, #8
   13c18:	pop	{r4, sl, fp, pc}
   13c1c:	sub	r0, r0, #1
   13c20:	ldrb	r3, [r0, #1]!
   13c24:	cmp	r3, #47	; 0x2f
   13c28:	beq	13c20 <__mempcpy_chk@plt+0x255c>
   13c2c:	mov	r2, #0
   13c30:	mov	r1, r0
   13c34:	b	13c40 <__mempcpy_chk@plt+0x257c>
   13c38:	ldrb	r3, [r1, #1]!
   13c3c:	mov	r2, #1
   13c40:	uxtb	r3, r3
   13c44:	cmp	r3, #47	; 0x2f
   13c48:	beq	13c38 <__mempcpy_chk@plt+0x2574>
   13c4c:	cmp	r3, #0
   13c50:	bxeq	lr
   13c54:	tst	r2, #1
   13c58:	mov	r2, #0
   13c5c:	movne	r0, r1
   13c60:	ldrb	r3, [r1, #1]!
   13c64:	b	13c40 <__mempcpy_chk@plt+0x257c>
   13c68:	push	{r4, sl, fp, lr}
   13c6c:	add	fp, sp, #8
   13c70:	mov	r4, r0
   13c74:	bl	11538 <strlen@plt>
   13c78:	mov	r1, r0
   13c7c:	sub	r2, r4, #1
   13c80:	mov	r0, r1
   13c84:	cmp	r1, #2
   13c88:	bcc	13c9c <__mempcpy_chk@plt+0x25d8>
   13c8c:	ldrb	r3, [r2, r0]
   13c90:	sub	r1, r0, #1
   13c94:	cmp	r3, #47	; 0x2f
   13c98:	beq	13c80 <__mempcpy_chk@plt+0x25bc>
   13c9c:	pop	{r4, sl, fp, pc}
   13ca0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ca4:	add	fp, sp, #28
   13ca8:	sub	sp, sp, #180	; 0xb4
   13cac:	sub	sp, sp, #3072	; 0xc00
   13cb0:	and	r7, r1, #3
   13cb4:	mov	r8, r0
   13cb8:	sub	r0, r7, #1
   13cbc:	tst	r7, r0
   13cc0:	bne	13d4c <__mempcpy_chk@plt+0x2688>
   13cc4:	cmp	r8, #0
   13cc8:	beq	13d4c <__mempcpy_chk@plt+0x2688>
   13ccc:	ldrb	r0, [r8]
   13cd0:	cmp	r0, #0
   13cd4:	beq	13d68 <__mempcpy_chk@plt+0x26a4>
   13cd8:	mov	r4, r1
   13cdc:	mov	r1, #1024	; 0x400
   13ce0:	sub	lr, fp, #1024	; 0x400
   13ce4:	cmp	r0, #47	; 0x2f
   13ce8:	str	r1, [fp, #-1060]	; 0xfffffbdc
   13cec:	str	r1, [sp, #52]	; 0x34
   13cf0:	str	r1, [sp, #1188]	; 0x4a4
   13cf4:	add	r1, sp, #1184	; 0x4a0
   13cf8:	sub	r2, lr, #40	; 0x28
   13cfc:	add	r1, r1, #8
   13d00:	add	r2, r2, #8
   13d04:	str	r1, [sp, #16]
   13d08:	str	r1, [sp, #1184]	; 0x4a0
   13d0c:	add	r1, sp, #48	; 0x30
   13d10:	str	r2, [sp, #12]
   13d14:	str	r2, [fp, #-1064]	; 0xfffffbd8
   13d18:	add	r5, r1, #8
   13d1c:	mov	r0, r5
   13d20:	str	r5, [sp, #48]	; 0x30
   13d24:	str	r5, [sp, #8]
   13d28:	bne	13d74 <__mempcpy_chk@plt+0x26b0>
   13d2c:	mov	r1, r8
   13d30:	mov	r2, #0
   13d34:	mov	r3, #1024	; 0x400
   13d38:	bl	116c4 <__mempcpy_chk@plt>
   13d3c:	mov	r6, r0
   13d40:	mov	r0, #47	; 0x2f
   13d44:	strb	r0, [r6], #1
   13d48:	b	13d94 <__mempcpy_chk@plt+0x26d0>
   13d4c:	bl	11550 <__errno_location@plt>
   13d50:	mov	r1, #22
   13d54:	mov	r4, #0
   13d58:	str	r1, [r0]
   13d5c:	mov	r0, r4
   13d60:	sub	sp, fp, #28
   13d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d68:	bl	11550 <__errno_location@plt>
   13d6c:	mov	r1, #2
   13d70:	b	13d54 <__mempcpy_chk@plt+0x2690>
   13d74:	mov	r1, #1024	; 0x400
   13d78:	bl	11514 <getcwd@plt>
   13d7c:	cmp	r0, #0
   13d80:	beq	142b0 <__mempcpy_chk@plt+0x2bec>
   13d84:	mov	r0, r5
   13d88:	mov	r1, #0
   13d8c:	bl	11430 <rawmemchr@plt>
   13d90:	mov	r6, r0
   13d94:	ldrb	r0, [r8]
   13d98:	cmp	r0, #0
   13d9c:	beq	14274 <__mempcpy_chk@plt+0x2bb0>
   13da0:	and	r1, r4, #4
   13da4:	add	r9, sp, #48	; 0x30
   13da8:	str	r7, [sp, #32]
   13dac:	str	r1, [sp, #40]	; 0x28
   13db0:	mov	r1, #0
   13db4:	str	r1, [sp, #24]
   13db8:	mov	r1, #0
   13dbc:	str	r1, [sp, #36]	; 0x24
   13dc0:	mov	r1, #0
   13dc4:	str	r1, [sp, #20]
   13dc8:	b	13de4 <__mempcpy_chk@plt+0x2720>
   13dcc:	cmp	r0, #0
   13dd0:	beq	140ec <__mempcpy_chk@plt+0x2a28>
   13dd4:	mov	r8, sl
   13dd8:	ldrb	r0, [r8]
   13ddc:	cmp	r0, #0
   13de0:	beq	1427c <__mempcpy_chk@plt+0x2bb8>
   13de4:	uxtb	r1, r0
   13de8:	cmp	r1, #47	; 0x2f
   13dec:	bne	13dfc <__mempcpy_chk@plt+0x2738>
   13df0:	ldrb	r0, [r8, #1]!
   13df4:	cmp	r0, #47	; 0x2f
   13df8:	beq	13df0 <__mempcpy_chk@plt+0x272c>
   13dfc:	mov	r1, r0
   13e00:	mov	sl, r8
   13e04:	b	13e0c <__mempcpy_chk@plt+0x2748>
   13e08:	ldrb	r1, [sl, #1]!
   13e0c:	uxtb	r1, r1
   13e10:	cmp	r1, #0
   13e14:	cmpne	r1, #47	; 0x2f
   13e18:	bne	13e08 <__mempcpy_chk@plt+0x2744>
   13e1c:	sub	r2, sl, r8
   13e20:	cmp	r2, #1
   13e24:	beq	13e3c <__mempcpy_chk@plt+0x2778>
   13e28:	cmp	r2, #2
   13e2c:	beq	13e4c <__mempcpy_chk@plt+0x2788>
   13e30:	cmp	r2, #0
   13e34:	bne	13e94 <__mempcpy_chk@plt+0x27d0>
   13e38:	b	1427c <__mempcpy_chk@plt+0x2bb8>
   13e3c:	uxtb	r0, r0
   13e40:	cmp	r0, #46	; 0x2e
   13e44:	bne	13e94 <__mempcpy_chk@plt+0x27d0>
   13e48:	b	13dd4 <__mempcpy_chk@plt+0x2710>
   13e4c:	uxtb	r0, r0
   13e50:	cmp	r0, #46	; 0x2e
   13e54:	bne	13e94 <__mempcpy_chk@plt+0x27d0>
   13e58:	ldrb	r0, [r8, #1]
   13e5c:	cmp	r0, #46	; 0x2e
   13e60:	bne	13e94 <__mempcpy_chk@plt+0x27d0>
   13e64:	add	r0, r5, #1
   13e68:	cmp	r6, r0
   13e6c:	bls	13dd4 <__mempcpy_chk@plt+0x2710>
   13e70:	sub	r0, r6, #1
   13e74:	mov	r6, r0
   13e78:	cmp	r0, r5
   13e7c:	bls	13dd4 <__mempcpy_chk@plt+0x2710>
   13e80:	mov	r0, r6
   13e84:	ldrb	r1, [r0, #-1]!
   13e88:	cmp	r1, #47	; 0x2f
   13e8c:	bne	13e74 <__mempcpy_chk@plt+0x27b0>
   13e90:	b	13dd4 <__mempcpy_chk@plt+0x2710>
   13e94:	ldrb	r0, [r6, #-1]
   13e98:	add	r4, r2, #2
   13e9c:	str	r2, [sp, #44]	; 0x2c
   13ea0:	cmp	r0, #47	; 0x2f
   13ea4:	movne	r0, #47	; 0x2f
   13ea8:	strbne	r0, [r6], #1
   13eac:	ldr	r0, [sp, #52]	; 0x34
   13eb0:	add	r0, r5, r0
   13eb4:	sub	r0, r0, r6
   13eb8:	cmp	r0, r4
   13ebc:	bcs	13ef4 <__mempcpy_chk@plt+0x2830>
   13ec0:	mov	r0, r9
   13ec4:	bl	180bc <__mempcpy_chk@plt+0x69f8>
   13ec8:	cmp	r0, #0
   13ecc:	beq	14374 <__mempcpy_chk@plt+0x2cb0>
   13ed0:	sub	r0, r6, r5
   13ed4:	ldr	r5, [sp, #48]	; 0x30
   13ed8:	ldr	r1, [sp, #52]	; 0x34
   13edc:	add	r6, r5, r0
   13ee0:	add	r0, r5, r1
   13ee4:	sub	r0, r0, r6
   13ee8:	cmp	r0, r4
   13eec:	bcc	13ec0 <__mempcpy_chk@plt+0x27fc>
   13ef0:	ldr	r2, [sp, #44]	; 0x2c
   13ef4:	mov	r0, r6
   13ef8:	mov	r1, r8
   13efc:	mvn	r3, #0
   13f00:	bl	116c4 <__mempcpy_chk@plt>
   13f04:	mov	r6, r0
   13f08:	mov	r0, #0
   13f0c:	strb	r0, [r6]
   13f10:	ldr	r0, [sp, #40]	; 0x28
   13f14:	cmp	r0, #0
   13f18:	bne	13f7c <__mempcpy_chk@plt+0x28b8>
   13f1c:	ldr	r0, [sp, #1188]	; 0x4a4
   13f20:	ldr	r7, [sp, #1184]	; 0x4a0
   13f24:	sub	r9, r0, #1
   13f28:	mov	r0, r5
   13f2c:	mov	r1, r7
   13f30:	mov	r2, r9
   13f34:	bl	11454 <readlink@plt>
   13f38:	cmp	r0, r9
   13f3c:	blt	13f54 <__mempcpy_chk@plt+0x2890>
   13f40:	add	r0, sp, #1184	; 0x4a0
   13f44:	bl	1804c <__mempcpy_chk@plt+0x6988>
   13f48:	cmp	r0, #0
   13f4c:	bne	13f1c <__mempcpy_chk@plt+0x2858>
   13f50:	b	14374 <__mempcpy_chk@plt+0x2cb0>
   13f54:	mov	r4, r0
   13f58:	cmp	r0, #0
   13f5c:	add	r9, sp, #48	; 0x30
   13f60:	bmi	13f7c <__mempcpy_chk@plt+0x28b8>
   13f64:	ldr	r0, [sp, #24]
   13f68:	cmp	r0, #19
   13f6c:	bgt	13ffc <__mempcpy_chk@plt+0x2938>
   13f70:	add	r0, r0, #1
   13f74:	str	r0, [sp, #24]
   13f78:	b	1415c <__mempcpy_chk@plt+0x2a98>
   13f7c:	ldr	r7, [sp, #32]
   13f80:	cmp	r7, #2
   13f84:	beq	13dd4 <__mempcpy_chk@plt+0x2710>
   13f88:	ldrb	r0, [sl]
   13f8c:	cmp	r0, #47	; 0x2f
   13f90:	bne	140cc <__mempcpy_chk@plt+0x2a08>
   13f94:	mov	r2, sl
   13f98:	mov	r1, r2
   13f9c:	ldrb	r3, [r2, #1]!
   13fa0:	cmp	r3, #47	; 0x2f
   13fa4:	beq	13f98 <__mempcpy_chk@plt+0x28d4>
   13fa8:	cmp	r3, #46	; 0x2e
   13fac:	bne	140c4 <__mempcpy_chk@plt+0x2a00>
   13fb0:	add	r2, r1, #2
   13fb4:	ldrb	r3, [r2]
   13fb8:	cmp	r3, #47	; 0x2f
   13fbc:	beq	13f98 <__mempcpy_chk@plt+0x28d4>
   13fc0:	cmp	r3, #0
   13fc4:	beq	13fe0 <__mempcpy_chk@plt+0x291c>
   13fc8:	cmp	r3, #46	; 0x2e
   13fcc:	bne	140cc <__mempcpy_chk@plt+0x2a08>
   13fd0:	ldrb	r1, [r1, #3]
   13fd4:	cmp	r1, #47	; 0x2f
   13fd8:	cmpne	r1, #0
   13fdc:	bne	140cc <__mempcpy_chk@plt+0x2a08>
   13fe0:	mov	r0, #47	; 0x2f
   13fe4:	mov	r1, r5
   13fe8:	mov	r2, #0
   13fec:	mov	r3, #512	; 0x200
   13ff0:	strh	r0, [r6]
   13ff4:	mvn	r0, #99	; 0x63
   13ff8:	b	140fc <__mempcpy_chk@plt+0x2a38>
   13ffc:	ldrb	r0, [r8]
   14000:	add	lr, sp, #1024	; 0x400
   14004:	add	r2, lr, #56	; 0x38
   14008:	cmp	r0, #0
   1400c:	beq	1415c <__mempcpy_chk@plt+0x2a98>
   14010:	ldr	r9, [sp, #44]	; 0x2c
   14014:	mov	r0, #0
   14018:	mov	r1, r5
   1401c:	strb	r0, [r6, -r9]
   14020:	ldrb	r0, [r5]
   14024:	cmp	r0, #0
   14028:	movw	r0, #45178	; 0xb07a
   1402c:	movt	r0, #1
   14030:	moveq	r1, r0
   14034:	mov	r0, #3
   14038:	bl	11670 <__xstat64@plt>
   1403c:	cmp	r0, #0
   14040:	bne	14384 <__mempcpy_chk@plt+0x2cc0>
   14044:	rsb	r0, r9, #0
   14048:	ldr	r9, [sp, #20]
   1404c:	ldrb	r1, [r8]
   14050:	cmp	r9, #0
   14054:	strb	r1, [r6, r0]
   14058:	bne	14090 <__mempcpy_chk@plt+0x29cc>
   1405c:	movw	r0, #24096	; 0x5e20
   14060:	movw	r2, #23936	; 0x5d80
   14064:	movw	r3, #23992	; 0x5db8
   14068:	mov	r1, #0
   1406c:	movt	r0, #1
   14070:	movt	r2, #1
   14074:	movt	r3, #1
   14078:	str	r0, [sp]
   1407c:	mov	r0, #7
   14080:	bl	14ebc <__mempcpy_chk@plt+0x37f8>
   14084:	mov	r9, r0
   14088:	cmp	r0, #0
   1408c:	beq	14374 <__mempcpy_chk@plt+0x2cb0>
   14090:	add	lr, sp, #1024	; 0x400
   14094:	mov	r0, r9
   14098:	mov	r1, r8
   1409c:	add	r2, lr, #56	; 0x38
   140a0:	bl	147c0 <__mempcpy_chk@plt+0x30fc>
   140a4:	cmp	r0, #0
   140a8:	str	r9, [sp, #20]
   140ac:	beq	14148 <__mempcpy_chk@plt+0x2a84>
   140b0:	ldr	r7, [sp, #32]
   140b4:	cmp	r7, #2
   140b8:	bne	14378 <__mempcpy_chk@plt+0x2cb4>
   140bc:	mov	r8, sl
   140c0:	b	14230 <__mempcpy_chk@plt+0x2b6c>
   140c4:	cmp	r3, #0
   140c8:	beq	13fe0 <__mempcpy_chk@plt+0x291c>
   140cc:	ldr	r1, [sp, #40]	; 0x28
   140d0:	cmp	r1, #0
   140d4:	bne	13dcc <__mempcpy_chk@plt+0x2708>
   140d8:	bl	11550 <__errno_location@plt>
   140dc:	ldr	r0, [r0]
   140e0:	cmp	r0, #22
   140e4:	beq	13dd4 <__mempcpy_chk@plt+0x2710>
   140e8:	b	14108 <__mempcpy_chk@plt+0x2a44>
   140ec:	mvn	r0, #99	; 0x63
   140f0:	mov	r1, r5
   140f4:	mov	r2, #0
   140f8:	mov	r3, #512	; 0x200
   140fc:	bl	113c4 <faccessat@plt>
   14100:	cmp	r0, #0
   14104:	beq	13dd4 <__mempcpy_chk@plt+0x2710>
   14108:	mov	r4, #1
   1410c:	cmp	r7, #1
   14110:	bne	1429c <__mempcpy_chk@plt+0x2bd8>
   14114:	bl	11550 <__errno_location@plt>
   14118:	ldr	r0, [r0]
   1411c:	cmp	r0, #2
   14120:	bne	1429c <__mempcpy_chk@plt+0x2bd8>
   14124:	movw	r1, #46610	; 0xb612
   14128:	mov	r0, sl
   1412c:	movt	r1, #1
   14130:	bl	116b8 <strspn@plt>
   14134:	ldrb	r0, [sl, r0]
   14138:	mov	r8, sl
   1413c:	cmp	r0, #0
   14140:	beq	13dd8 <__mempcpy_chk@plt+0x2714>
   14144:	b	1429c <__mempcpy_chk@plt+0x2bd8>
   14148:	add	lr, sp, #1024	; 0x400
   1414c:	mov	r0, r9
   14150:	mov	r1, r8
   14154:	add	r2, lr, #56	; 0x38
   14158:	bl	14744 <__mempcpy_chk@plt+0x3080>
   1415c:	mov	r0, #0
   14160:	strb	r0, [r7, r4]
   14164:	ldr	r0, [sp, #36]	; 0x24
   14168:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   1416c:	tst	r0, #1
   14170:	ldr	r0, [sp, #28]
   14174:	subne	r0, sl, r8
   14178:	str	r0, [sp, #28]
   1417c:	mov	r0, sl
   14180:	bl	11538 <strlen@plt>
   14184:	mvn	r1, r4
   14188:	cmp	r0, r1
   1418c:	bhi	14374 <__mempcpy_chk@plt+0x2cb0>
   14190:	str	r0, [sp, #44]	; 0x2c
   14194:	add	r9, r0, r4
   14198:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1419c:	cmp	r0, r9
   141a0:	bhi	141c8 <__mempcpy_chk@plt+0x2b04>
   141a4:	sub	lr, fp, #1024	; 0x400
   141a8:	sub	r0, lr, #40	; 0x28
   141ac:	bl	180bc <__mempcpy_chk@plt+0x69f8>
   141b0:	cmp	r0, #0
   141b4:	beq	14374 <__mempcpy_chk@plt+0x2cb0>
   141b8:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   141bc:	cmp	r0, r9
   141c0:	bls	141a4 <__mempcpy_chk@plt+0x2ae0>
   141c4:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   141c8:	ldr	r0, [sp, #36]	; 0x24
   141cc:	ldr	r1, [sp, #44]	; 0x2c
   141d0:	tst	r0, #1
   141d4:	ldr	r0, [sp, #28]
   141d8:	add	r2, r1, #1
   141dc:	addne	sl, r8, r0
   141e0:	add	r0, r8, r4
   141e4:	mov	r1, sl
   141e8:	bl	113ac <memmove@plt>
   141ec:	mov	r0, r8
   141f0:	mov	r1, r7
   141f4:	mov	r2, r4
   141f8:	bl	113e8 <memcpy@plt>
   141fc:	ldrb	r0, [r7]
   14200:	cmp	r0, #47	; 0x2f
   14204:	bne	14238 <__mempcpy_chk@plt+0x2b74>
   14208:	mov	r0, r5
   1420c:	mov	r1, r7
   14210:	mov	r2, #0
   14214:	mvn	r3, #0
   14218:	bl	116c4 <__mempcpy_chk@plt>
   1421c:	mov	r6, r0
   14220:	mov	r0, #47	; 0x2f
   14224:	strb	r0, [r6], #1
   14228:	mov	r0, #1
   1422c:	str	r0, [sp, #36]	; 0x24
   14230:	add	r9, sp, #48	; 0x30
   14234:	b	13dd8 <__mempcpy_chk@plt+0x2714>
   14238:	add	r0, r5, #1
   1423c:	mov	r1, #1
   14240:	add	r9, sp, #48	; 0x30
   14244:	cmp	r6, r0
   14248:	str	r1, [sp, #36]	; 0x24
   1424c:	bls	13dd8 <__mempcpy_chk@plt+0x2714>
   14250:	sub	r0, r6, #1
   14254:	mov	r6, r0
   14258:	cmp	r0, r5
   1425c:	bls	13dd8 <__mempcpy_chk@plt+0x2714>
   14260:	mov	r0, r6
   14264:	ldrb	r1, [r0, #-1]!
   14268:	cmp	r1, #47	; 0x2f
   1426c:	bne	14254 <__mempcpy_chk@plt+0x2b90>
   14270:	b	13dd8 <__mempcpy_chk@plt+0x2714>
   14274:	mov	r0, #0
   14278:	str	r0, [sp, #20]
   1427c:	add	r0, r5, #1
   14280:	cmp	r6, r0
   14284:	bls	14298 <__mempcpy_chk@plt+0x2bd4>
   14288:	mov	r0, r6
   1428c:	ldrb	r1, [r0, #-1]!
   14290:	cmp	r1, #47	; 0x2f
   14294:	moveq	r6, r0
   14298:	mov	r4, #0
   1429c:	ldr	r0, [sp, #20]
   142a0:	cmp	r0, #0
   142a4:	beq	14308 <__mempcpy_chk@plt+0x2c44>
   142a8:	bl	151c0 <__mempcpy_chk@plt+0x3afc>
   142ac:	b	14308 <__mempcpy_chk@plt+0x2c44>
   142b0:	bl	11550 <__errno_location@plt>
   142b4:	ldr	r5, [sp, #8]
   142b8:	mov	r6, r0
   142bc:	add	r9, sp, #48	; 0x30
   142c0:	ldr	r0, [r6]
   142c4:	cmp	r0, #34	; 0x22
   142c8:	bne	142f8 <__mempcpy_chk@plt+0x2c34>
   142cc:	mov	r0, r9
   142d0:	bl	1804c <__mempcpy_chk@plt+0x6988>
   142d4:	cmp	r0, #0
   142d8:	beq	14374 <__mempcpy_chk@plt+0x2cb0>
   142dc:	ldr	r5, [sp, #48]	; 0x30
   142e0:	ldr	r1, [sp, #52]	; 0x34
   142e4:	mov	r0, r5
   142e8:	bl	11514 <getcwd@plt>
   142ec:	cmp	r0, #0
   142f0:	beq	142c0 <__mempcpy_chk@plt+0x2bfc>
   142f4:	b	13d84 <__mempcpy_chk@plt+0x26c0>
   142f8:	cmp	r0, #12
   142fc:	beq	14374 <__mempcpy_chk@plt+0x2cb0>
   14300:	mov	r4, #1
   14304:	mov	r6, r5
   14308:	ldr	r1, [sp, #12]
   1430c:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   14310:	ldr	r7, [sp, #16]
   14314:	cmp	r0, r1
   14318:	beq	14320 <__mempcpy_chk@plt+0x2c5c>
   1431c:	bl	14948 <__mempcpy_chk@plt+0x3284>
   14320:	ldr	r0, [sp, #1184]	; 0x4a0
   14324:	cmp	r0, r7
   14328:	beq	14330 <__mempcpy_chk@plt+0x2c6c>
   1432c:	bl	14948 <__mempcpy_chk@plt+0x3284>
   14330:	cmp	r4, #0
   14334:	beq	14354 <__mempcpy_chk@plt+0x2c90>
   14338:	ldr	r0, [sp, #48]	; 0x30
   1433c:	ldr	r1, [sp, #8]
   14340:	mov	r4, #0
   14344:	cmp	r0, r1
   14348:	beq	13d5c <__mempcpy_chk@plt+0x2698>
   1434c:	bl	14948 <__mempcpy_chk@plt+0x3284>
   14350:	b	13d5c <__mempcpy_chk@plt+0x2698>
   14354:	mov	r0, #0
   14358:	strb	r0, [r6], -r5
   1435c:	add	r0, sp, #48	; 0x30
   14360:	add	r1, r6, #1
   14364:	bl	17fe0 <__mempcpy_chk@plt+0x691c>
   14368:	mov	r4, r0
   1436c:	cmp	r0, #0
   14370:	bne	13d5c <__mempcpy_chk@plt+0x2698>
   14374:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   14378:	bl	11550 <__errno_location@plt>
   1437c:	mov	r1, #40	; 0x28
   14380:	str	r1, [r0]
   14384:	mov	r4, #1
   14388:	b	1429c <__mempcpy_chk@plt+0x2bd8>
   1438c:	movw	r1, #49620	; 0xc1d4
   14390:	movt	r1, #2
   14394:	str	r0, [r1]
   14398:	bx	lr
   1439c:	push	{r4, r5, r6, sl, fp, lr}
   143a0:	add	fp, sp, #16
   143a4:	sub	sp, sp, #8
   143a8:	movw	r6, #49584	; 0xc1b0
   143ac:	movt	r6, #2
   143b0:	ldr	r5, [r6]
   143b4:	mov	r0, r5
   143b8:	bl	14908 <__mempcpy_chk@plt+0x3244>
   143bc:	cmp	r0, #0
   143c0:	beq	14400 <__mempcpy_chk@plt+0x2d3c>
   143c4:	mov	r0, #1
   143c8:	mov	r2, #0
   143cc:	mov	r3, #0
   143d0:	mov	r4, #0
   143d4:	str	r0, [sp]
   143d8:	mov	r0, r5
   143dc:	bl	14970 <__mempcpy_chk@plt+0x32ac>
   143e0:	cmp	r0, #0
   143e4:	bne	14404 <__mempcpy_chk@plt+0x2d40>
   143e8:	ldr	r0, [r6]
   143ec:	bl	146e8 <__mempcpy_chk@plt+0x3024>
   143f0:	cmp	r0, #0
   143f4:	mov	r4, r0
   143f8:	movwne	r4, #1
   143fc:	b	14404 <__mempcpy_chk@plt+0x2d40>
   14400:	mov	r4, #0
   14404:	ldr	r0, [r6]
   14408:	bl	198c4 <__mempcpy_chk@plt+0x8200>
   1440c:	cmp	r4, #0
   14410:	cmpeq	r0, #0
   14414:	bne	14424 <__mempcpy_chk@plt+0x2d60>
   14418:	sub	sp, fp, #16
   1441c:	pop	{r4, r5, r6, sl, fp, lr}
   14420:	b	144c8 <__mempcpy_chk@plt+0x2e04>
   14424:	movw	r1, #45379	; 0xb143
   14428:	mov	r0, #0
   1442c:	mov	r2, #5
   14430:	movt	r1, #1
   14434:	bl	1140c <dcgettext@plt>
   14438:	mov	r4, r0
   1443c:	movw	r0, #49620	; 0xc1d4
   14440:	movt	r0, #2
   14444:	ldr	r6, [r0]
   14448:	bl	11550 <__errno_location@plt>
   1444c:	ldr	r5, [r0]
   14450:	cmp	r6, #0
   14454:	bne	14470 <__mempcpy_chk@plt+0x2dac>
   14458:	movw	r2, #46763	; 0xb6ab
   1445c:	mov	r0, #0
   14460:	mov	r1, r5
   14464:	mov	r3, r4
   14468:	movt	r2, #1
   1446c:	b	14490 <__mempcpy_chk@plt+0x2dcc>
   14470:	mov	r0, r6
   14474:	bl	177a4 <__mempcpy_chk@plt+0x60e0>
   14478:	movw	r2, #45398	; 0xb156
   1447c:	mov	r3, r0
   14480:	str	r4, [sp]
   14484:	mov	r0, #0
   14488:	mov	r1, r5
   1448c:	movt	r2, #1
   14490:	bl	114a8 <error@plt>
   14494:	bl	144c8 <__mempcpy_chk@plt+0x2e04>
   14498:	movw	r0, #49484	; 0xc14c
   1449c:	movt	r0, #2
   144a0:	ldr	r0, [r0]
   144a4:	bl	113dc <_exit@plt>
   144a8:	movw	r1, #49624	; 0xc1d8
   144ac:	movt	r1, #2
   144b0:	str	r0, [r1]
   144b4:	bx	lr
   144b8:	movw	r1, #49628	; 0xc1dc
   144bc:	movt	r1, #2
   144c0:	strb	r0, [r1]
   144c4:	bx	lr
   144c8:	push	{r4, r5, r6, sl, fp, lr}
   144cc:	add	fp, sp, #16
   144d0:	sub	sp, sp, #8
   144d4:	movw	r0, #49588	; 0xc1b4
   144d8:	movt	r0, #2
   144dc:	ldr	r0, [r0]
   144e0:	bl	198c4 <__mempcpy_chk@plt+0x8200>
   144e4:	cmp	r0, #0
   144e8:	beq	14510 <__mempcpy_chk@plt+0x2e4c>
   144ec:	movw	r0, #49628	; 0xc1dc
   144f0:	movt	r0, #2
   144f4:	ldrb	r0, [r0]
   144f8:	cmp	r0, #0
   144fc:	beq	14530 <__mempcpy_chk@plt+0x2e6c>
   14500:	bl	11550 <__errno_location@plt>
   14504:	ldr	r0, [r0]
   14508:	cmp	r0, #32
   1450c:	bne	14530 <__mempcpy_chk@plt+0x2e6c>
   14510:	movw	r0, #49576	; 0xc1a8
   14514:	movt	r0, #2
   14518:	ldr	r0, [r0]
   1451c:	bl	198c4 <__mempcpy_chk@plt+0x8200>
   14520:	cmp	r0, #0
   14524:	subeq	sp, fp, #16
   14528:	popeq	{r4, r5, r6, sl, fp, pc}
   1452c:	b	145a0 <__mempcpy_chk@plt+0x2edc>
   14530:	movw	r1, #45405	; 0xb15d
   14534:	mov	r0, #0
   14538:	mov	r2, #5
   1453c:	movt	r1, #1
   14540:	bl	1140c <dcgettext@plt>
   14544:	mov	r4, r0
   14548:	movw	r0, #49624	; 0xc1d8
   1454c:	movt	r0, #2
   14550:	ldr	r6, [r0]
   14554:	bl	11550 <__errno_location@plt>
   14558:	ldr	r5, [r0]
   1455c:	cmp	r6, #0
   14560:	bne	1457c <__mempcpy_chk@plt+0x2eb8>
   14564:	movw	r2, #46763	; 0xb6ab
   14568:	mov	r0, #0
   1456c:	mov	r1, r5
   14570:	mov	r3, r4
   14574:	movt	r2, #1
   14578:	b	1459c <__mempcpy_chk@plt+0x2ed8>
   1457c:	mov	r0, r6
   14580:	bl	177a4 <__mempcpy_chk@plt+0x60e0>
   14584:	movw	r2, #45398	; 0xb156
   14588:	mov	r3, r0
   1458c:	str	r4, [sp]
   14590:	mov	r0, #0
   14594:	mov	r1, r5
   14598:	movt	r2, #1
   1459c:	bl	114a8 <error@plt>
   145a0:	movw	r0, #49484	; 0xc14c
   145a4:	movt	r0, #2
   145a8:	ldr	r0, [r0]
   145ac:	bl	113dc <_exit@plt>
   145b0:	push	{fp, lr}
   145b4:	mov	fp, sp
   145b8:	bl	14610 <__mempcpy_chk@plt+0x2f4c>
   145bc:	cmp	r0, #0
   145c0:	popne	{fp, pc}
   145c4:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   145c8:	push	{r4, r5, r6, sl, fp, lr}
   145cc:	add	fp, sp, #16
   145d0:	mov	r5, r0
   145d4:	mov	r4, r0
   145d8:	ldrb	r6, [r5], #-1
   145dc:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   145e0:	sub	r2, r0, r4
   145e4:	sub	r0, r6, #47	; 0x2f
   145e8:	clz	r0, r0
   145ec:	lsr	r1, r0, #5
   145f0:	mov	r0, r2
   145f4:	cmp	r2, r1
   145f8:	bls	1460c <__mempcpy_chk@plt+0x2f48>
   145fc:	ldrb	r3, [r5, r0]
   14600:	sub	r2, r0, #1
   14604:	cmp	r3, #47	; 0x2f
   14608:	beq	145f0 <__mempcpy_chk@plt+0x2f2c>
   1460c:	pop	{r4, r5, r6, sl, fp, pc}
   14610:	push	{r4, r5, r6, sl, fp, lr}
   14614:	add	fp, sp, #16
   14618:	mov	r6, r0
   1461c:	mov	r4, r0
   14620:	ldrb	r5, [r6], #-1
   14624:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   14628:	sub	r1, r0, r4
   1462c:	sub	r0, r5, #47	; 0x2f
   14630:	clz	r0, r0
   14634:	lsr	r0, r0, #5
   14638:	mov	r5, r1
   1463c:	cmp	r1, r0
   14640:	bls	14654 <__mempcpy_chk@plt+0x2f90>
   14644:	ldrb	r2, [r6, r5]
   14648:	sub	r1, r5, #1
   1464c:	cmp	r2, #47	; 0x2f
   14650:	beq	14638 <__mempcpy_chk@plt+0x2f74>
   14654:	cmp	r5, #0
   14658:	mov	r0, r5
   1465c:	addeq	r0, r0, #1
   14660:	add	r0, r0, #1
   14664:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   14668:	mov	r6, r0
   1466c:	cmp	r0, #0
   14670:	beq	1469c <__mempcpy_chk@plt+0x2fd8>
   14674:	mov	r0, r6
   14678:	mov	r1, r4
   1467c:	mov	r2, r5
   14680:	bl	113e8 <memcpy@plt>
   14684:	cmp	r5, #0
   14688:	moveq	r0, #46	; 0x2e
   1468c:	moveq	r5, #1
   14690:	strbeq	r0, [r6]
   14694:	mov	r0, #0
   14698:	strb	r0, [r6, r5]
   1469c:	mov	r0, r6
   146a0:	pop	{r4, r5, r6, sl, fp, pc}
   146a4:	push	{r4, r5, fp, lr}
   146a8:	add	fp, sp, #8
   146ac:	mov	r4, r0
   146b0:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   146b4:	mov	r5, r0
   146b8:	ldrb	r0, [r0]
   146bc:	cmp	r0, #0
   146c0:	moveq	r5, r4
   146c4:	mov	r0, r5
   146c8:	bl	13c68 <__mempcpy_chk@plt+0x25a4>
   146cc:	ldrb	r1, [r5, r0]
   146d0:	mov	r2, #0
   146d4:	strb	r2, [r5, r0]
   146d8:	cmp	r1, #0
   146dc:	movwne	r1, #1
   146e0:	mov	r0, r1
   146e4:	pop	{r4, r5, fp, pc}
   146e8:	push	{r4, sl, fp, lr}
   146ec:	add	fp, sp, #8
   146f0:	sub	sp, sp, #8
   146f4:	mov	r4, r0
   146f8:	cmp	r0, #0
   146fc:	beq	14734 <__mempcpy_chk@plt+0x3070>
   14700:	mov	r0, r4
   14704:	bl	114e4 <__freading@plt>
   14708:	cmp	r0, #0
   1470c:	beq	14734 <__mempcpy_chk@plt+0x3070>
   14710:	ldrb	r0, [r4, #1]
   14714:	tst	r0, #1
   14718:	beq	14734 <__mempcpy_chk@plt+0x3070>
   1471c:	mov	r0, #1
   14720:	mov	r2, #0
   14724:	mov	r3, #0
   14728:	str	r0, [sp]
   1472c:	mov	r0, r4
   14730:	bl	14970 <__mempcpy_chk@plt+0x32ac>
   14734:	mov	r0, r4
   14738:	sub	sp, fp, #8
   1473c:	pop	{r4, sl, fp, lr}
   14740:	b	11394 <fflush@plt>
   14744:	push	{r4, r5, r6, r7, fp, lr}
   14748:	add	fp, sp, #16
   1474c:	cmp	r0, #0
   14750:	beq	147b8 <__mempcpy_chk@plt+0x30f4>
   14754:	mov	r5, r0
   14758:	mov	r0, #24
   1475c:	mov	r6, r2
   14760:	mov	r7, r1
   14764:	bl	18c64 <__mempcpy_chk@plt+0x75a0>
   14768:	mov	r4, r0
   1476c:	mov	r0, r7
   14770:	bl	19168 <__mempcpy_chk@plt+0x7aa4>
   14774:	str	r0, [r4]
   14778:	ldrd	r0, [r6, #96]	; 0x60
   1477c:	str	r0, [r4, #8]
   14780:	str	r1, [r4, #12]
   14784:	ldrd	r0, [r6]
   14788:	str	r1, [r4, #20]
   1478c:	str	r0, [r4, #16]
   14790:	mov	r0, r5
   14794:	mov	r1, r4
   14798:	bl	15a10 <__mempcpy_chk@plt+0x434c>
   1479c:	cmp	r0, #0
   147a0:	beq	147bc <__mempcpy_chk@plt+0x30f8>
   147a4:	cmp	r0, r4
   147a8:	beq	147b8 <__mempcpy_chk@plt+0x30f4>
   147ac:	mov	r0, r4
   147b0:	pop	{r4, r5, r6, r7, fp, lr}
   147b4:	b	15e20 <__mempcpy_chk@plt+0x475c>
   147b8:	pop	{r4, r5, r6, r7, fp, pc}
   147bc:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   147c0:	cmp	r0, #0
   147c4:	moveq	r0, #0
   147c8:	bxeq	lr
   147cc:	push	{r4, r5, fp, lr}
   147d0:	add	fp, sp, #8
   147d4:	sub	sp, sp, #24
   147d8:	str	r1, [sp]
   147dc:	mov	ip, sp
   147e0:	mov	r1, sp
   147e4:	ldrd	r4, [r2, #96]	; 0x60
   147e8:	add	r3, ip, #8
   147ec:	add	ip, ip, #16
   147f0:	strd	r4, [r3]
   147f4:	ldrd	r2, [r2]
   147f8:	strd	r2, [ip]
   147fc:	bl	14c08 <__mempcpy_chk@plt+0x3544>
   14800:	cmp	r0, #0
   14804:	movwne	r0, #1
   14808:	sub	sp, fp, #8
   1480c:	pop	{r4, r5, fp, pc}
   14810:	push	{fp, lr}
   14814:	mov	fp, sp
   14818:	bl	14828 <__mempcpy_chk@plt+0x3164>
   1481c:	cmp	r0, #0
   14820:	popne	{fp, pc}
   14824:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   14828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1482c:	add	fp, sp, #28
   14830:	push	{r2}		; (str r2, [sp, #-4]!)
   14834:	mov	sl, r1
   14838:	mov	r7, r0
   1483c:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   14840:	sub	r4, r0, r7
   14844:	bl	13c68 <__mempcpy_chk@plt+0x25a4>
   14848:	mov	r6, r0
   1484c:	add	r5, r4, r0
   14850:	mov	r0, sl
   14854:	bl	11538 <strlen@plt>
   14858:	mov	r9, r0
   1485c:	cmp	r6, #0
   14860:	beq	14888 <__mempcpy_chk@plt+0x31c4>
   14864:	add	r0, r5, r7
   14868:	mov	r4, #0
   1486c:	ldrb	r0, [r0, #-1]
   14870:	cmp	r0, #47	; 0x2f
   14874:	beq	14898 <__mempcpy_chk@plt+0x31d4>
   14878:	ldrb	r0, [sl]
   1487c:	subs	r4, r0, #47	; 0x2f
   14880:	movwne	r4, #47	; 0x2f
   14884:	b	14898 <__mempcpy_chk@plt+0x31d4>
   14888:	ldrb	r0, [sl]
   1488c:	mov	r4, #0
   14890:	cmp	r0, #47	; 0x2f
   14894:	movweq	r4, #46	; 0x2e
   14898:	uxtb	r8, r4
   1489c:	add	r0, r9, r5
   148a0:	cmp	r8, #0
   148a4:	movwne	r8, #1
   148a8:	add	r0, r0, r8
   148ac:	add	r0, r0, #1
   148b0:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   148b4:	mov	r6, r0
   148b8:	cmp	r0, #0
   148bc:	beq	148fc <__mempcpy_chk@plt+0x3238>
   148c0:	mov	r0, r6
   148c4:	mov	r1, r7
   148c8:	mov	r2, r5
   148cc:	mvn	r3, #0
   148d0:	bl	116c4 <__mempcpy_chk@plt>
   148d4:	ldr	r1, [sp]
   148d8:	strb	r4, [r0], r8
   148dc:	mov	r2, r9
   148e0:	mvn	r3, #0
   148e4:	cmp	r1, #0
   148e8:	strne	r0, [r1]
   148ec:	mov	r1, sl
   148f0:	bl	116c4 <__mempcpy_chk@plt>
   148f4:	mov	r1, #0
   148f8:	strb	r1, [r0]
   148fc:	mov	r0, r6
   14900:	sub	sp, fp, #28
   14904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14908:	ldrd	r2, [r0, #16]
   1490c:	mov	r1, #0
   14910:	cmp	r3, r2
   14914:	bhi	14940 <__mempcpy_chk@plt+0x327c>
   14918:	ldrb	r3, [r0, #1]
   1491c:	ldmib	r0, {r1, r2}
   14920:	sub	r1, r2, r1
   14924:	mov	r2, #0
   14928:	tst	r3, #1
   1492c:	beq	1493c <__mempcpy_chk@plt+0x3278>
   14930:	ldr	r2, [r0, #36]	; 0x24
   14934:	ldr	r0, [r0, #44]	; 0x2c
   14938:	sub	r2, r0, r2
   1493c:	add	r1, r1, r2
   14940:	mov	r0, r1
   14944:	bx	lr
   14948:	push	{r4, r5, r6, sl, fp, lr}
   1494c:	add	fp, sp, #16
   14950:	mov	r4, r0
   14954:	bl	11550 <__errno_location@plt>
   14958:	ldr	r6, [r0]
   1495c:	mov	r5, r0
   14960:	mov	r0, r4
   14964:	bl	113b8 <free@plt>
   14968:	str	r6, [r5]
   1496c:	pop	{r4, r5, r6, sl, fp, pc}
   14970:	push	{r4, r5, r6, r7, fp, lr}
   14974:	add	fp, sp, #16
   14978:	sub	sp, sp, #8
   1497c:	mov	r4, r0
   14980:	ldr	r0, [r0, #4]
   14984:	mov	r5, r3
   14988:	mov	r6, r2
   1498c:	ldr	r1, [r4, #8]
   14990:	cmp	r1, r0
   14994:	bne	149b0 <__mempcpy_chk@plt+0x32ec>
   14998:	ldrd	r0, [r4, #16]
   1499c:	cmp	r1, r0
   149a0:	bne	149b0 <__mempcpy_chk@plt+0x32ec>
   149a4:	ldr	r0, [r4, #36]	; 0x24
   149a8:	cmp	r0, #0
   149ac:	beq	149c8 <__mempcpy_chk@plt+0x3304>
   149b0:	mov	r0, r4
   149b4:	mov	r2, r6
   149b8:	mov	r3, r5
   149bc:	sub	sp, fp, #16
   149c0:	pop	{r4, r5, r6, r7, fp, lr}
   149c4:	b	115d4 <fseeko64@plt>
   149c8:	ldr	r7, [fp, #8]
   149cc:	mov	r0, r4
   149d0:	bl	115a4 <fileno@plt>
   149d4:	mov	r2, r6
   149d8:	mov	r3, r5
   149dc:	str	r7, [sp]
   149e0:	bl	1146c <lseek64@plt>
   149e4:	and	r2, r0, r1
   149e8:	cmn	r2, #1
   149ec:	beq	14a0c <__mempcpy_chk@plt+0x3348>
   149f0:	strd	r0, [r4, #80]	; 0x50
   149f4:	ldr	r0, [r4]
   149f8:	bic	r0, r0, #16
   149fc:	str	r0, [r4]
   14a00:	mov	r0, #0
   14a04:	sub	sp, fp, #16
   14a08:	pop	{r4, r5, r6, r7, fp, pc}
   14a0c:	mvn	r0, #0
   14a10:	sub	sp, fp, #16
   14a14:	pop	{r4, r5, r6, r7, fp, pc}
   14a18:	ldr	r0, [r0, #8]
   14a1c:	bx	lr
   14a20:	ldr	r0, [r0, #12]
   14a24:	bx	lr
   14a28:	ldr	r0, [r0, #16]
   14a2c:	bx	lr
   14a30:	ldm	r0, {r2, ip}
   14a34:	mov	r0, #0
   14a38:	cmp	r2, ip
   14a3c:	bxcs	lr
   14a40:	mov	r0, #0
   14a44:	b	14a54 <__mempcpy_chk@plt+0x3390>
   14a48:	add	r2, r2, #8
   14a4c:	cmp	r2, ip
   14a50:	bcs	14a84 <__mempcpy_chk@plt+0x33c0>
   14a54:	ldr	r1, [r2]
   14a58:	cmp	r1, #0
   14a5c:	beq	14a48 <__mempcpy_chk@plt+0x3384>
   14a60:	mov	r3, #0
   14a64:	mov	r1, r2
   14a68:	ldr	r1, [r1, #4]
   14a6c:	add	r3, r3, #1
   14a70:	cmp	r1, #0
   14a74:	bne	14a68 <__mempcpy_chk@plt+0x33a4>
   14a78:	cmp	r3, r0
   14a7c:	movhi	r0, r3
   14a80:	b	14a48 <__mempcpy_chk@plt+0x3384>
   14a84:	bx	lr
   14a88:	push	{fp, lr}
   14a8c:	mov	fp, sp
   14a90:	ldm	r0, {r3, ip}
   14a94:	mov	lr, #0
   14a98:	mov	r1, #0
   14a9c:	cmp	r3, ip
   14aa0:	bcs	14ae4 <__mempcpy_chk@plt+0x3420>
   14aa4:	mov	r1, #0
   14aa8:	mov	lr, #0
   14aac:	b	14abc <__mempcpy_chk@plt+0x33f8>
   14ab0:	add	r3, r3, #8
   14ab4:	cmp	r3, ip
   14ab8:	bcs	14ae4 <__mempcpy_chk@plt+0x3420>
   14abc:	ldr	r2, [r3]
   14ac0:	cmp	r2, #0
   14ac4:	beq	14ab0 <__mempcpy_chk@plt+0x33ec>
   14ac8:	mov	r2, r3
   14acc:	ldr	r2, [r2, #4]
   14ad0:	add	r1, r1, #1
   14ad4:	cmp	r2, #0
   14ad8:	bne	14acc <__mempcpy_chk@plt+0x3408>
   14adc:	add	lr, lr, #1
   14ae0:	b	14ab0 <__mempcpy_chk@plt+0x33ec>
   14ae4:	ldr	r2, [r0, #12]
   14ae8:	cmp	lr, r2
   14aec:	bne	14b04 <__mempcpy_chk@plt+0x3440>
   14af0:	ldr	r2, [r0, #16]
   14af4:	mov	r0, #1
   14af8:	cmp	r1, r2
   14afc:	movne	r0, #0
   14b00:	pop	{fp, pc}
   14b04:	mov	r0, #0
   14b08:	pop	{fp, pc}
   14b0c:	nop	{0}
   14b10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14b14:	add	fp, sp, #24
   14b18:	sub	sp, sp, #8
   14b1c:	ldr	r6, [r0]
   14b20:	ldmib	r0, {r2, r7, r8}
   14b24:	ldr	r3, [r0, #16]
   14b28:	mov	r4, r1
   14b2c:	mov	r5, #0
   14b30:	cmp	r6, r2
   14b34:	bcs	14b7c <__mempcpy_chk@plt+0x34b8>
   14b38:	mov	r5, #0
   14b3c:	b	14b4c <__mempcpy_chk@plt+0x3488>
   14b40:	add	r6, r6, #8
   14b44:	cmp	r6, r2
   14b48:	bcs	14b7c <__mempcpy_chk@plt+0x34b8>
   14b4c:	ldr	r0, [r6]
   14b50:	cmp	r0, #0
   14b54:	beq	14b40 <__mempcpy_chk@plt+0x347c>
   14b58:	mov	r0, #0
   14b5c:	mov	r1, r6
   14b60:	ldr	r1, [r1, #4]
   14b64:	add	r0, r0, #1
   14b68:	cmp	r1, #0
   14b6c:	bne	14b60 <__mempcpy_chk@plt+0x349c>
   14b70:	cmp	r0, r5
   14b74:	movhi	r5, r0
   14b78:	b	14b40 <__mempcpy_chk@plt+0x347c>
   14b7c:	movw	r2, #45417	; 0xb169
   14b80:	mov	r0, r4
   14b84:	mov	r1, #1
   14b88:	movt	r2, #1
   14b8c:	bl	115b0 <__fprintf_chk@plt>
   14b90:	movw	r2, #45441	; 0xb181
   14b94:	mov	r0, r4
   14b98:	mov	r1, #1
   14b9c:	mov	r3, r7
   14ba0:	movt	r2, #1
   14ba4:	bl	115b0 <__fprintf_chk@plt>
   14ba8:	vmov	s0, r8
   14bac:	vldr	d16, [pc, #76]	; 14c00 <__mempcpy_chk@plt+0x353c>
   14bb0:	movw	r2, #45465	; 0xb199
   14bb4:	mov	r0, r4
   14bb8:	mov	r1, #1
   14bbc:	mov	r3, r8
   14bc0:	movt	r2, #1
   14bc4:	vcvt.f64.u32	d17, s0
   14bc8:	vmov	s0, r7
   14bcc:	vcvt.f64.u32	d18, s0
   14bd0:	vmul.f64	d16, d17, d16
   14bd4:	vdiv.f64	d16, d16, d18
   14bd8:	vstr	d16, [sp]
   14bdc:	bl	115b0 <__fprintf_chk@plt>
   14be0:	movw	r2, #45498	; 0xb1ba
   14be4:	mov	r0, r4
   14be8:	mov	r1, #1
   14bec:	mov	r3, r5
   14bf0:	movt	r2, #1
   14bf4:	sub	sp, fp, #24
   14bf8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14bfc:	b	115b0 <__fprintf_chk@plt>
   14c00:	andeq	r0, r0, r0
   14c04:	subsmi	r0, r9, r0
   14c08:	push	{r4, r5, r6, r7, fp, lr}
   14c0c:	add	fp, sp, #16
   14c10:	mov	r4, r1
   14c14:	ldr	r1, [r0, #8]
   14c18:	ldr	r2, [r0, #24]
   14c1c:	mov	r5, r0
   14c20:	mov	r0, r4
   14c24:	blx	r2
   14c28:	ldr	r1, [r5, #8]
   14c2c:	cmp	r0, r1
   14c30:	bcs	14c98 <__mempcpy_chk@plt+0x35d4>
   14c34:	ldr	r7, [r5]
   14c38:	mov	r6, #0
   14c3c:	ldr	r1, [r7, r0, lsl #3]!
   14c40:	cmp	r1, #0
   14c44:	cmpne	r7, #0
   14c48:	bne	14c78 <__mempcpy_chk@plt+0x35b4>
   14c4c:	mov	r0, r6
   14c50:	pop	{r4, r5, r6, r7, fp, pc}
   14c54:	ldr	r2, [r5, #28]
   14c58:	mov	r0, r4
   14c5c:	blx	r2
   14c60:	cmp	r0, #0
   14c64:	bne	14c8c <__mempcpy_chk@plt+0x35c8>
   14c68:	ldr	r7, [r7, #4]
   14c6c:	cmp	r7, #0
   14c70:	beq	14c4c <__mempcpy_chk@plt+0x3588>
   14c74:	ldr	r1, [r7]
   14c78:	cmp	r1, r4
   14c7c:	bne	14c54 <__mempcpy_chk@plt+0x3590>
   14c80:	mov	r6, r4
   14c84:	mov	r0, r6
   14c88:	pop	{r4, r5, r6, r7, fp, pc}
   14c8c:	ldr	r6, [r7]
   14c90:	mov	r0, r6
   14c94:	pop	{r4, r5, r6, r7, fp, pc}
   14c98:	bl	11688 <abort@plt>
   14c9c:	push	{fp, lr}
   14ca0:	mov	fp, sp
   14ca4:	ldr	r1, [r0, #16]
   14ca8:	cmp	r1, #0
   14cac:	beq	14ccc <__mempcpy_chk@plt+0x3608>
   14cb0:	ldm	r0, {r1, r2}
   14cb4:	cmp	r1, r2
   14cb8:	bcs	14cd4 <__mempcpy_chk@plt+0x3610>
   14cbc:	ldr	r0, [r1], #8
   14cc0:	cmp	r0, #0
   14cc4:	beq	14cb4 <__mempcpy_chk@plt+0x35f0>
   14cc8:	pop	{fp, pc}
   14ccc:	mov	r0, #0
   14cd0:	pop	{fp, pc}
   14cd4:	bl	11688 <abort@plt>
   14cd8:	push	{r4, r5, fp, lr}
   14cdc:	add	fp, sp, #8
   14ce0:	mov	r5, r1
   14ce4:	ldr	r1, [r0, #8]
   14ce8:	ldr	r2, [r0, #24]
   14cec:	mov	r4, r0
   14cf0:	mov	r0, r5
   14cf4:	blx	r2
   14cf8:	ldr	r1, [r4, #8]
   14cfc:	cmp	r0, r1
   14d00:	bcs	14d64 <__mempcpy_chk@plt+0x36a0>
   14d04:	ldr	r1, [r4]
   14d08:	add	r2, r1, r0, lsl #3
   14d0c:	ldr	r3, [r2]
   14d10:	ldr	r2, [r2, #4]
   14d14:	cmp	r3, r5
   14d18:	beq	14d28 <__mempcpy_chk@plt+0x3664>
   14d1c:	cmp	r2, #0
   14d20:	bne	14d0c <__mempcpy_chk@plt+0x3648>
   14d24:	b	14d38 <__mempcpy_chk@plt+0x3674>
   14d28:	cmp	r2, #0
   14d2c:	beq	14d38 <__mempcpy_chk@plt+0x3674>
   14d30:	ldr	r0, [r2]
   14d34:	pop	{r4, r5, fp, pc}
   14d38:	ldr	r2, [r4, #4]
   14d3c:	add	r0, r1, r0, lsl #3
   14d40:	add	r1, r0, #8
   14d44:	cmp	r1, r2
   14d48:	bcs	14d5c <__mempcpy_chk@plt+0x3698>
   14d4c:	ldr	r0, [r1], #8
   14d50:	cmp	r0, #0
   14d54:	beq	14d44 <__mempcpy_chk@plt+0x3680>
   14d58:	pop	{r4, r5, fp, pc}
   14d5c:	mov	r0, #0
   14d60:	pop	{r4, r5, fp, pc}
   14d64:	bl	11688 <abort@plt>
   14d68:	push	{r4, r5, fp, lr}
   14d6c:	add	fp, sp, #8
   14d70:	ldm	r0, {r5, lr}
   14d74:	mov	ip, r0
   14d78:	mov	r0, #0
   14d7c:	cmp	r5, lr
   14d80:	popcs	{r4, r5, fp, pc}
   14d84:	mov	r0, #0
   14d88:	b	14d9c <__mempcpy_chk@plt+0x36d8>
   14d8c:	ldr	lr, [ip, #4]
   14d90:	add	r5, r5, #8
   14d94:	cmp	r5, lr
   14d98:	bcs	14dd4 <__mempcpy_chk@plt+0x3710>
   14d9c:	ldr	r3, [r5]
   14da0:	cmp	r3, #0
   14da4:	cmpne	r5, #0
   14da8:	beq	14d90 <__mempcpy_chk@plt+0x36cc>
   14dac:	mov	r3, r5
   14db0:	cmp	r0, r2
   14db4:	bcs	14dd4 <__mempcpy_chk@plt+0x3710>
   14db8:	ldr	r4, [r3]
   14dbc:	str	r4, [r1, r0, lsl #2]
   14dc0:	add	r0, r0, #1
   14dc4:	ldr	r3, [r3, #4]
   14dc8:	cmp	r3, #0
   14dcc:	bne	14db0 <__mempcpy_chk@plt+0x36ec>
   14dd0:	b	14d8c <__mempcpy_chk@plt+0x36c8>
   14dd4:	pop	{r4, r5, fp, pc}
   14dd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ddc:	add	fp, sp, #24
   14de0:	mov	r5, r1
   14de4:	ldr	r4, [r0]
   14de8:	ldr	r1, [r0, #4]
   14dec:	mov	r6, #0
   14df0:	cmp	r4, r1
   14df4:	bcs	14e60 <__mempcpy_chk@plt+0x379c>
   14df8:	mov	r9, r2
   14dfc:	mov	r8, r0
   14e00:	mov	r6, #0
   14e04:	b	14e18 <__mempcpy_chk@plt+0x3754>
   14e08:	ldr	r1, [r8, #4]
   14e0c:	add	r4, r4, #8
   14e10:	cmp	r4, r1
   14e14:	bcs	14e60 <__mempcpy_chk@plt+0x379c>
   14e18:	ldr	r0, [r4]
   14e1c:	cmp	r0, #0
   14e20:	cmpne	r4, #0
   14e24:	beq	14e0c <__mempcpy_chk@plt+0x3748>
   14e28:	mov	r1, r9
   14e2c:	blx	r5
   14e30:	cmp	r0, #0
   14e34:	beq	14e60 <__mempcpy_chk@plt+0x379c>
   14e38:	mov	r7, r4
   14e3c:	ldr	r7, [r7, #4]
   14e40:	add	r6, r6, #1
   14e44:	cmp	r7, #0
   14e48:	beq	14e08 <__mempcpy_chk@plt+0x3744>
   14e4c:	ldr	r0, [r7]
   14e50:	mov	r1, r9
   14e54:	blx	r5
   14e58:	cmp	r0, #0
   14e5c:	bne	14e3c <__mempcpy_chk@plt+0x3778>
   14e60:	mov	r0, r6
   14e64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14e68:	ldrb	r2, [r0]
   14e6c:	cmp	r2, #0
   14e70:	moveq	r0, #0
   14e74:	bxeq	lr
   14e78:	add	r3, r0, #1
   14e7c:	mov	r0, #0
   14e80:	rsb	r0, r0, r0, lsl #5
   14e84:	uxtab	r0, r0, r2
   14e88:	udiv	r2, r0, r1
   14e8c:	mls	r0, r2, r1, r0
   14e90:	ldrb	r2, [r3], #1
   14e94:	cmp	r2, #0
   14e98:	bne	14e80 <__mempcpy_chk@plt+0x37bc>
   14e9c:	bx	lr
   14ea0:	movw	r1, #45528	; 0xb1d8
   14ea4:	movt	r1, #1
   14ea8:	vld1.32	{d16-d17}, [r1]!
   14eac:	ldr	r1, [r1]
   14eb0:	vst1.32	{d16-d17}, [r0]!
   14eb4:	str	r1, [r0]
   14eb8:	bx	lr
   14ebc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ec0:	add	fp, sp, #24
   14ec4:	movw	r9, #20708	; 0x50e4
   14ec8:	cmp	r3, #0
   14ecc:	movw	r5, #20688	; 0x50d0
   14ed0:	mov	r6, r0
   14ed4:	mov	r0, #40	; 0x28
   14ed8:	mov	r7, r1
   14edc:	movt	r9, #1
   14ee0:	movne	r9, r3
   14ee4:	cmp	r2, #0
   14ee8:	movt	r5, #1
   14eec:	movne	r5, r2
   14ef0:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   14ef4:	mov	r8, #0
   14ef8:	cmp	r0, #0
   14efc:	beq	150b8 <__mempcpy_chk@plt+0x39f4>
   14f00:	mov	r4, r0
   14f04:	movw	r0, #45528	; 0xb1d8
   14f08:	cmp	r7, #0
   14f0c:	movt	r0, #1
   14f10:	moveq	r7, r0
   14f14:	cmp	r7, r0
   14f18:	str	r7, [r4, #20]
   14f1c:	beq	14f98 <__mempcpy_chk@plt+0x38d4>
   14f20:	vldr	s2, [pc, #408]	; 150c0 <__mempcpy_chk@plt+0x39fc>
   14f24:	vldr	s0, [r7, #8]
   14f28:	vcmpe.f32	s0, s2
   14f2c:	vmrs	APSR_nzcv, fpscr
   14f30:	ble	15044 <__mempcpy_chk@plt+0x3980>
   14f34:	vldr	s4, [pc, #392]	; 150c4 <__mempcpy_chk@plt+0x3a00>
   14f38:	vcmpe.f32	s0, s4
   14f3c:	vmrs	APSR_nzcv, fpscr
   14f40:	bpl	15044 <__mempcpy_chk@plt+0x3980>
   14f44:	vldr	s4, [pc, #380]	; 150c8 <__mempcpy_chk@plt+0x3a04>
   14f48:	vldr	s6, [r7, #12]
   14f4c:	vcmpe.f32	s6, s4
   14f50:	vmrs	APSR_nzcv, fpscr
   14f54:	ble	15044 <__mempcpy_chk@plt+0x3980>
   14f58:	vldr	s4, [r7]
   14f5c:	vcmpe.f32	s4, #0.0
   14f60:	vmrs	APSR_nzcv, fpscr
   14f64:	blt	15044 <__mempcpy_chk@plt+0x3980>
   14f68:	vadd.f32	s2, s4, s2
   14f6c:	vcmpe.f32	s2, s0
   14f70:	vmrs	APSR_nzcv, fpscr
   14f74:	bpl	15044 <__mempcpy_chk@plt+0x3980>
   14f78:	vldr	s0, [r7, #4]
   14f7c:	vmov.f32	s4, #112	; 0x3f800000  1.0
   14f80:	vcmpe.f32	s0, s4
   14f84:	vmrs	APSR_nzcv, fpscr
   14f88:	bhi	15044 <__mempcpy_chk@plt+0x3980>
   14f8c:	vcmpe.f32	s2, s0
   14f90:	vmrs	APSR_nzcv, fpscr
   14f94:	bpl	15044 <__mempcpy_chk@plt+0x3980>
   14f98:	ldrb	r0, [r7, #16]
   14f9c:	cmp	r0, #0
   14fa0:	bne	14fcc <__mempcpy_chk@plt+0x3908>
   14fa4:	vmov	s2, r6
   14fa8:	vldr	s0, [r7, #8]
   14fac:	vldr	s4, [pc, #280]	; 150cc <__mempcpy_chk@plt+0x3a08>
   14fb0:	vcvt.f32.u32	s2, s2
   14fb4:	vdiv.f32	s2, s2, s0
   14fb8:	vcvt.u32.f32	s0, s2
   14fbc:	vcmpe.f32	s2, s4
   14fc0:	vmrs	APSR_nzcv, fpscr
   14fc4:	bge	15054 <__mempcpy_chk@plt+0x3990>
   14fc8:	vmov	r6, s0
   14fcc:	cmp	r6, #10
   14fd0:	movls	r6, #10
   14fd4:	orr	r0, r6, #1
   14fd8:	cmn	r0, #1
   14fdc:	beq	15054 <__mempcpy_chk@plt+0x3990>
   14fe0:	ldr	r6, [fp, #8]
   14fe4:	mov	r1, #3
   14fe8:	cmp	r0, #10
   14fec:	bcc	15024 <__mempcpy_chk@plt+0x3960>
   14ff0:	mov	r1, #3
   14ff4:	mov	r3, #9
   14ff8:	mov	r2, #12
   14ffc:	udiv	r7, r0, r1
   15000:	mls	r7, r7, r1, r0
   15004:	cmp	r7, #0
   15008:	beq	15024 <__mempcpy_chk@plt+0x3960>
   1500c:	add	r3, r3, r2
   15010:	add	r2, r2, #8
   15014:	add	r1, r1, #2
   15018:	add	r3, r3, #4
   1501c:	cmp	r3, r0
   15020:	bcc	14ffc <__mempcpy_chk@plt+0x3938>
   15024:	udiv	r2, r0, r1
   15028:	mls	r1, r2, r1, r0
   1502c:	cmp	r1, #0
   15030:	bne	1504c <__mempcpy_chk@plt+0x3988>
   15034:	add	r0, r0, #2
   15038:	cmn	r0, #1
   1503c:	bne	14fe4 <__mempcpy_chk@plt+0x3920>
   15040:	b	15054 <__mempcpy_chk@plt+0x3990>
   15044:	str	r0, [r4, #20]
   15048:	b	1505c <__mempcpy_chk@plt+0x3998>
   1504c:	cmp	r0, #536870912	; 0x20000000
   15050:	bcc	1506c <__mempcpy_chk@plt+0x39a8>
   15054:	mov	r0, #0
   15058:	str	r0, [r4, #8]
   1505c:	mov	r0, r4
   15060:	bl	14948 <__mempcpy_chk@plt+0x3284>
   15064:	mov	r0, r8
   15068:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1506c:	cmp	r0, #0
   15070:	str	r0, [r4, #8]
   15074:	beq	1505c <__mempcpy_chk@plt+0x3998>
   15078:	mov	r1, #8
   1507c:	bl	19264 <__mempcpy_chk@plt+0x7ba0>
   15080:	cmp	r0, #0
   15084:	str	r0, [r4]
   15088:	beq	1505c <__mempcpy_chk@plt+0x3998>
   1508c:	mov	r1, #0
   15090:	str	r5, [r4, #24]
   15094:	str	r9, [r4, #28]
   15098:	str	r6, [r4, #32]
   1509c:	mov	r8, r4
   150a0:	str	r1, [r4, #36]	; 0x24
   150a4:	str	r1, [r4, #12]
   150a8:	str	r1, [r4, #16]
   150ac:	ldr	r1, [r4, #8]
   150b0:	add	r0, r0, r1, lsl #3
   150b4:	str	r0, [r4, #4]
   150b8:	mov	r0, r8
   150bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   150c0:	stclcc	12, cr12, [ip, #820]	; 0x334
   150c4:	svccc	0x00666666
   150c8:	svccc	0x008ccccd
   150cc:	svcmi	0x00800000
   150d0:	ror	r2, r0, #3
   150d4:	udiv	r2, r2, r1
   150d8:	mul	r1, r2, r1
   150dc:	rsb	r0, r1, r0, ror #3
   150e0:	bx	lr
   150e4:	sub	r0, r0, r1
   150e8:	clz	r0, r0
   150ec:	lsr	r0, r0, #5
   150f0:	bx	lr
   150f4:	push	{r4, r5, r6, r7, fp, lr}
   150f8:	add	fp, sp, #16
   150fc:	mov	r4, r0
   15100:	ldr	r5, [r0]
   15104:	ldr	r0, [r0, #4]
   15108:	cmp	r5, r0
   1510c:	bcs	151b0 <__mempcpy_chk@plt+0x3aec>
   15110:	mov	r6, #0
   15114:	b	15130 <__mempcpy_chk@plt+0x3a6c>
   15118:	str	r6, [r5]
   1511c:	str	r6, [r5, #4]
   15120:	ldr	r0, [r4, #4]
   15124:	add	r5, r5, #8
   15128:	cmp	r5, r0
   1512c:	bcs	151b0 <__mempcpy_chk@plt+0x3aec>
   15130:	ldr	r1, [r5]
   15134:	cmp	r1, #0
   15138:	beq	15124 <__mempcpy_chk@plt+0x3a60>
   1513c:	ldr	r1, [r4, #32]
   15140:	ldr	r7, [r5, #4]
   15144:	cmp	r1, #0
   15148:	mov	r0, r1
   1514c:	movwne	r0, #1
   15150:	cmp	r7, #0
   15154:	bne	15198 <__mempcpy_chk@plt+0x3ad4>
   15158:	cmp	r0, #0
   1515c:	beq	15118 <__mempcpy_chk@plt+0x3a54>
   15160:	ldr	r0, [r5]
   15164:	blx	r1
   15168:	b	15118 <__mempcpy_chk@plt+0x3a54>
   1516c:	str	r6, [r7]
   15170:	cmp	r1, #0
   15174:	ldr	r2, [r7, #4]
   15178:	ldr	r0, [r4, #36]	; 0x24
   1517c:	str	r0, [r7, #4]
   15180:	mov	r0, r1
   15184:	str	r7, [r4, #36]	; 0x24
   15188:	movwne	r0, #1
   1518c:	cmp	r2, #0
   15190:	mov	r7, r2
   15194:	beq	15158 <__mempcpy_chk@plt+0x3a94>
   15198:	tst	r0, #1
   1519c:	beq	1516c <__mempcpy_chk@plt+0x3aa8>
   151a0:	ldr	r0, [r7]
   151a4:	blx	r1
   151a8:	ldr	r1, [r4, #32]
   151ac:	b	1516c <__mempcpy_chk@plt+0x3aa8>
   151b0:	mov	r0, #0
   151b4:	str	r0, [r4, #12]
   151b8:	str	r0, [r4, #16]
   151bc:	pop	{r4, r5, r6, r7, fp, pc}
   151c0:	push	{r4, r5, r6, sl, fp, lr}
   151c4:	add	fp, sp, #16
   151c8:	mov	r4, r0
   151cc:	ldr	r0, [r0, #32]
   151d0:	cmp	r0, #0
   151d4:	beq	15248 <__mempcpy_chk@plt+0x3b84>
   151d8:	ldr	r0, [r4, #16]
   151dc:	cmp	r0, #0
   151e0:	beq	15248 <__mempcpy_chk@plt+0x3b84>
   151e4:	ldr	r5, [r4]
   151e8:	ldr	r1, [r4, #4]
   151ec:	cmp	r5, r1
   151f0:	bcc	15208 <__mempcpy_chk@plt+0x3b44>
   151f4:	b	15248 <__mempcpy_chk@plt+0x3b84>
   151f8:	ldr	r1, [r4, #4]
   151fc:	add	r5, r5, #8
   15200:	cmp	r5, r1
   15204:	bcs	15248 <__mempcpy_chk@plt+0x3b84>
   15208:	ldr	r0, [r5]
   1520c:	cmp	r0, #0
   15210:	cmpne	r5, #0
   15214:	beq	151fc <__mempcpy_chk@plt+0x3b38>
   15218:	ldr	r1, [r4, #32]
   1521c:	blx	r1
   15220:	ldr	r6, [r5, #4]
   15224:	cmp	r6, #0
   15228:	beq	151f8 <__mempcpy_chk@plt+0x3b34>
   1522c:	ldr	r1, [r4, #32]
   15230:	ldr	r0, [r6]
   15234:	blx	r1
   15238:	ldr	r6, [r6, #4]
   1523c:	cmp	r6, #0
   15240:	bne	1522c <__mempcpy_chk@plt+0x3b68>
   15244:	b	151f8 <__mempcpy_chk@plt+0x3b34>
   15248:	ldr	r5, [r4]
   1524c:	ldr	r1, [r4, #4]
   15250:	cmp	r5, r1
   15254:	bcc	15268 <__mempcpy_chk@plt+0x3ba4>
   15258:	b	15290 <__mempcpy_chk@plt+0x3bcc>
   1525c:	add	r5, r5, #8
   15260:	cmp	r5, r1
   15264:	bcs	15290 <__mempcpy_chk@plt+0x3bcc>
   15268:	ldr	r0, [r5, #4]
   1526c:	cmp	r0, #0
   15270:	beq	1525c <__mempcpy_chk@plt+0x3b98>
   15274:	ldr	r6, [r0, #4]
   15278:	bl	14948 <__mempcpy_chk@plt+0x3284>
   1527c:	cmp	r6, #0
   15280:	mov	r0, r6
   15284:	bne	15274 <__mempcpy_chk@plt+0x3bb0>
   15288:	ldr	r1, [r4, #4]
   1528c:	b	1525c <__mempcpy_chk@plt+0x3b98>
   15290:	ldr	r0, [r4, #36]	; 0x24
   15294:	cmp	r0, #0
   15298:	beq	152b0 <__mempcpy_chk@plt+0x3bec>
   1529c:	ldr	r5, [r0, #4]
   152a0:	bl	14948 <__mempcpy_chk@plt+0x3284>
   152a4:	cmp	r5, #0
   152a8:	mov	r0, r5
   152ac:	bne	1529c <__mempcpy_chk@plt+0x3bd8>
   152b0:	ldr	r0, [r4]
   152b4:	bl	14948 <__mempcpy_chk@plt+0x3284>
   152b8:	mov	r0, r4
   152bc:	pop	{r4, r5, r6, sl, fp, lr}
   152c0:	b	14948 <__mempcpy_chk@plt+0x3284>
   152c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152c8:	add	fp, sp, #28
   152cc:	sub	sp, sp, #44	; 0x2c
   152d0:	mov	r7, r0
   152d4:	mov	r4, r0
   152d8:	ldr	r0, [r7, #20]!
   152dc:	ldrb	r2, [r0, #16]
   152e0:	cmp	r2, #0
   152e4:	bne	15314 <__mempcpy_chk@plt+0x3c50>
   152e8:	vmov	s2, r1
   152ec:	vldr	s0, [r0, #8]
   152f0:	vldr	s4, [pc, #564]	; 1552c <__mempcpy_chk@plt+0x3e68>
   152f4:	mov	r5, #0
   152f8:	vcvt.f32.u32	s2, s2
   152fc:	vdiv.f32	s2, s2, s0
   15300:	vcvt.u32.f32	s0, s2
   15304:	vcmpe.f32	s2, s4
   15308:	vmrs	APSR_nzcv, fpscr
   1530c:	bge	1551c <__mempcpy_chk@plt+0x3e58>
   15310:	vmov	r1, s0
   15314:	cmp	r1, #10
   15318:	mov	r5, #0
   1531c:	movls	r1, #10
   15320:	orr	r6, r1, #1
   15324:	cmn	r6, #1
   15328:	beq	1551c <__mempcpy_chk@plt+0x3e58>
   1532c:	mov	r0, #3
   15330:	cmp	r6, #10
   15334:	bcc	1536c <__mempcpy_chk@plt+0x3ca8>
   15338:	mov	r0, #3
   1533c:	mov	r2, #9
   15340:	mov	r1, #12
   15344:	udiv	r3, r6, r0
   15348:	mls	r3, r3, r0, r6
   1534c:	cmp	r3, #0
   15350:	beq	1536c <__mempcpy_chk@plt+0x3ca8>
   15354:	add	r2, r2, r1
   15358:	add	r1, r1, #8
   1535c:	add	r0, r0, #2
   15360:	add	r2, r2, #4
   15364:	cmp	r2, r6
   15368:	bcc	15344 <__mempcpy_chk@plt+0x3c80>
   1536c:	udiv	r1, r6, r0
   15370:	mls	r0, r1, r0, r6
   15374:	cmp	r0, #0
   15378:	bne	1538c <__mempcpy_chk@plt+0x3cc8>
   1537c:	add	r6, r6, #2
   15380:	cmn	r6, #1
   15384:	bne	1532c <__mempcpy_chk@plt+0x3c68>
   15388:	b	1551c <__mempcpy_chk@plt+0x3e58>
   1538c:	sub	r0, r6, #1
   15390:	cmn	r0, #-536870910	; 0xe0000002
   15394:	bhi	1551c <__mempcpy_chk@plt+0x3e58>
   15398:	ldr	r0, [r4, #8]
   1539c:	cmp	r6, r0
   153a0:	bne	153ac <__mempcpy_chk@plt+0x3ce8>
   153a4:	mov	r5, #1
   153a8:	b	1551c <__mempcpy_chk@plt+0x3e58>
   153ac:	mov	r0, r6
   153b0:	mov	r1, #8
   153b4:	bl	19264 <__mempcpy_chk@plt+0x7ba0>
   153b8:	cmp	r0, #0
   153bc:	str	r0, [sp, #4]
   153c0:	beq	1551c <__mempcpy_chk@plt+0x3e58>
   153c4:	add	r0, r0, r6, lsl #3
   153c8:	mov	r1, #0
   153cc:	add	r5, sp, #4
   153d0:	mov	sl, r4
   153d4:	mov	r2, #0
   153d8:	str	r1, [sp, #20]
   153dc:	str	r1, [sp, #16]
   153e0:	str	r6, [sp, #12]
   153e4:	mov	r1, r4
   153e8:	str	r0, [sp, #8]
   153ec:	add	r0, r5, #20
   153f0:	vld1.32	{d16-d17}, [r7]
   153f4:	vst1.32	{d16-d17}, [r0]
   153f8:	ldr	r0, [sl, #36]!	; 0x24
   153fc:	str	r0, [sp, #40]	; 0x28
   15400:	mov	r0, r5
   15404:	bl	15530 <__mempcpy_chk@plt+0x3e6c>
   15408:	cmp	r0, #0
   1540c:	beq	15434 <__mempcpy_chk@plt+0x3d70>
   15410:	ldr	r0, [r4]
   15414:	bl	14948 <__mempcpy_chk@plt+0x3284>
   15418:	mov	r0, #36	; 0x24
   1541c:	vld1.32	{d16-d17}, [r5], r0
   15420:	vst1.32	{d16-d17}, [r4], r0
   15424:	ldr	r0, [r5]
   15428:	mov	r5, #1
   1542c:	str	r0, [r4]
   15430:	b	1551c <__mempcpy_chk@plt+0x3e58>
   15434:	ldr	r0, [sp, #40]	; 0x28
   15438:	str	r0, [sl]
   1543c:	ldr	r0, [sp, #8]
   15440:	ldr	r8, [sp, #4]
   15444:	cmp	r8, r0
   15448:	str	r0, [sp]
   1544c:	bcs	154f8 <__mempcpy_chk@plt+0x3e34>
   15450:	mov	r9, #0
   15454:	b	1546c <__mempcpy_chk@plt+0x3da8>
   15458:	str	r9, [r8, #4]
   1545c:	ldr	r0, [sp]
   15460:	add	r8, r8, #8
   15464:	cmp	r8, r0
   15468:	bcs	154f8 <__mempcpy_chk@plt+0x3e34>
   1546c:	ldr	r0, [r8]
   15470:	cmp	r0, #0
   15474:	beq	1545c <__mempcpy_chk@plt+0x3d98>
   15478:	ldr	r6, [r8, #4]
   1547c:	cmp	r6, #0
   15480:	beq	15458 <__mempcpy_chk@plt+0x3d94>
   15484:	ldr	r1, [r4, #8]
   15488:	b	154ac <__mempcpy_chk@plt+0x3de8>
   1548c:	add	r0, r3, r0, lsl #3
   15490:	add	r0, r0, #4
   15494:	ldr	r3, [r0]
   15498:	cmp	r2, #0
   1549c:	str	r3, [r6, #4]
   154a0:	str	r6, [r0]
   154a4:	mov	r6, r2
   154a8:	beq	15458 <__mempcpy_chk@plt+0x3d94>
   154ac:	ldr	r5, [r6]
   154b0:	ldr	r2, [r4, #24]
   154b4:	mov	r0, r5
   154b8:	blx	r2
   154bc:	ldr	r1, [r4, #8]
   154c0:	cmp	r0, r1
   154c4:	bcs	15528 <__mempcpy_chk@plt+0x3e64>
   154c8:	ldr	r3, [r4]
   154cc:	ldr	r2, [r6, #4]
   154d0:	ldr	r7, [r3, r0, lsl #3]
   154d4:	cmp	r7, #0
   154d8:	bne	1548c <__mempcpy_chk@plt+0x3dc8>
   154dc:	str	r5, [r3, r0, lsl #3]
   154e0:	ldr	r0, [r4, #12]
   154e4:	add	r0, r0, #1
   154e8:	str	r0, [r4, #12]
   154ec:	mov	r0, sl
   154f0:	str	r9, [r6]
   154f4:	b	15494 <__mempcpy_chk@plt+0x3dd0>
   154f8:	add	r1, sp, #4
   154fc:	mov	r0, r4
   15500:	mov	r2, #0
   15504:	mov	r5, #0
   15508:	bl	15530 <__mempcpy_chk@plt+0x3e6c>
   1550c:	cmp	r0, #0
   15510:	beq	15528 <__mempcpy_chk@plt+0x3e64>
   15514:	ldr	r0, [sp, #4]
   15518:	bl	14948 <__mempcpy_chk@plt+0x3284>
   1551c:	mov	r0, r5
   15520:	sub	sp, fp, #28
   15524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15528:	bl	11688 <abort@plt>
   1552c:	svcmi	0x00800000
   15530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15534:	add	fp, sp, #28
   15538:	sub	sp, sp, #12
   1553c:	ldr	sl, [r1]
   15540:	str	r1, [sp, #8]
   15544:	ldr	r1, [r1, #4]
   15548:	mov	r7, r0
   1554c:	mov	r0, #1
   15550:	str	r2, [sp, #4]
   15554:	cmp	sl, r1
   15558:	bcs	156b4 <__mempcpy_chk@plt+0x3ff0>
   1555c:	add	r8, r7, #36	; 0x24
   15560:	mov	r9, #0
   15564:	b	155a0 <__mempcpy_chk@plt+0x3edc>
   15568:	str	r4, [r6, r5, lsl #3]
   1556c:	ldr	r0, [r7, #12]
   15570:	add	r0, r0, #1
   15574:	str	r0, [r7, #12]
   15578:	ldr	r1, [sp, #8]
   1557c:	str	r9, [sl]
   15580:	ldr	r0, [r1, #12]
   15584:	sub	r0, r0, #1
   15588:	str	r0, [r1, #12]
   1558c:	ldr	r0, [sp, #8]
   15590:	add	sl, sl, #8
   15594:	ldr	r0, [r0, #4]
   15598:	cmp	sl, r0
   1559c:	bcs	156b0 <__mempcpy_chk@plt+0x3fec>
   155a0:	ldr	r4, [sl]
   155a4:	cmp	r4, #0
   155a8:	beq	1558c <__mempcpy_chk@plt+0x3ec8>
   155ac:	ldr	r5, [sl, #4]
   155b0:	cmp	r5, #0
   155b4:	beq	15630 <__mempcpy_chk@plt+0x3f6c>
   155b8:	ldr	r1, [r7, #8]
   155bc:	b	155f0 <__mempcpy_chk@plt+0x3f2c>
   155c0:	str	r4, [r3, r0, lsl #3]
   155c4:	ldr	r0, [r7, #12]
   155c8:	add	r0, r0, #1
   155cc:	str	r0, [r7, #12]
   155d0:	mov	r0, r8
   155d4:	str	r9, [r5]
   155d8:	ldr	r3, [r0]
   155dc:	cmp	r2, #0
   155e0:	str	r3, [r5, #4]
   155e4:	str	r5, [r0]
   155e8:	mov	r5, r2
   155ec:	beq	1562c <__mempcpy_chk@plt+0x3f68>
   155f0:	ldr	r4, [r5]
   155f4:	ldr	r2, [r7, #24]
   155f8:	mov	r0, r4
   155fc:	blx	r2
   15600:	ldr	r1, [r7, #8]
   15604:	cmp	r0, r1
   15608:	bcs	156c8 <__mempcpy_chk@plt+0x4004>
   1560c:	ldr	r3, [r7]
   15610:	ldr	r2, [r5, #4]
   15614:	ldr	r6, [r3, r0, lsl #3]
   15618:	cmp	r6, #0
   1561c:	beq	155c0 <__mempcpy_chk@plt+0x3efc>
   15620:	add	r0, r3, r0, lsl #3
   15624:	add	r0, r0, #4
   15628:	b	155d8 <__mempcpy_chk@plt+0x3f14>
   1562c:	ldr	r4, [sl]
   15630:	ldr	r0, [sp, #4]
   15634:	str	r9, [sl, #4]
   15638:	cmp	r0, #0
   1563c:	bne	1558c <__mempcpy_chk@plt+0x3ec8>
   15640:	ldr	r1, [r7, #8]
   15644:	ldr	r2, [r7, #24]
   15648:	mov	r0, r4
   1564c:	blx	r2
   15650:	mov	r5, r0
   15654:	ldr	r0, [r7, #8]
   15658:	cmp	r5, r0
   1565c:	bcs	156c8 <__mempcpy_chk@plt+0x4004>
   15660:	ldr	r6, [r7]
   15664:	ldr	r0, [r6, r5, lsl #3]
   15668:	cmp	r0, #0
   1566c:	beq	15568 <__mempcpy_chk@plt+0x3ea4>
   15670:	ldr	r0, [r8]
   15674:	cmp	r0, #0
   15678:	beq	15688 <__mempcpy_chk@plt+0x3fc4>
   1567c:	ldr	r1, [r0, #4]
   15680:	str	r1, [r8]
   15684:	b	15698 <__mempcpy_chk@plt+0x3fd4>
   15688:	mov	r0, #8
   1568c:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   15690:	cmp	r0, #0
   15694:	beq	156bc <__mempcpy_chk@plt+0x3ff8>
   15698:	add	r1, r6, r5, lsl #3
   1569c:	str	r4, [r0]
   156a0:	ldr	r2, [r1, #4]
   156a4:	str	r2, [r0, #4]
   156a8:	str	r0, [r1, #4]
   156ac:	b	15578 <__mempcpy_chk@plt+0x3eb4>
   156b0:	mov	r0, #1
   156b4:	sub	sp, fp, #28
   156b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156bc:	mov	r0, #0
   156c0:	sub	sp, fp, #28
   156c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156c8:	bl	11688 <abort@plt>
   156cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156d0:	add	fp, sp, #28
   156d4:	sub	sp, sp, #4
   156d8:	cmp	r1, #0
   156dc:	beq	159f8 <__mempcpy_chk@plt+0x4334>
   156e0:	mov	r8, r2
   156e4:	mov	sl, r1
   156e8:	ldr	r1, [r0, #8]
   156ec:	ldr	r2, [r0, #24]
   156f0:	mov	r4, r0
   156f4:	mov	r0, sl
   156f8:	blx	r2
   156fc:	mov	r7, r0
   15700:	ldr	r0, [r4, #8]
   15704:	cmp	r7, r0
   15708:	bcs	159f8 <__mempcpy_chk@plt+0x4334>
   1570c:	ldr	r5, [r4]
   15710:	mov	r9, r5
   15714:	ldr	r1, [r9, r7, lsl #3]!
   15718:	cmp	r1, #0
   1571c:	beq	157a8 <__mempcpy_chk@plt+0x40e4>
   15720:	cmp	r1, sl
   15724:	beq	15750 <__mempcpy_chk@plt+0x408c>
   15728:	ldr	r2, [r4, #28]
   1572c:	mov	r0, sl
   15730:	blx	r2
   15734:	cmp	r0, #0
   15738:	mov	r6, r9
   1573c:	beq	15764 <__mempcpy_chk@plt+0x40a0>
   15740:	ldr	r0, [r6]
   15744:	cmp	r0, #0
   15748:	bne	15754 <__mempcpy_chk@plt+0x4090>
   1574c:	b	157a8 <__mempcpy_chk@plt+0x40e4>
   15750:	mov	r0, sl
   15754:	cmp	r8, #0
   15758:	mov	r7, #0
   1575c:	strne	r0, [r8]
   15760:	b	15994 <__mempcpy_chk@plt+0x42d0>
   15764:	add	r6, r5, r7, lsl #3
   15768:	ldr	r0, [r6, #4]!
   1576c:	cmp	r0, #0
   15770:	beq	157a8 <__mempcpy_chk@plt+0x40e4>
   15774:	ldr	r1, [r0]
   15778:	cmp	r1, sl
   1577c:	beq	1579c <__mempcpy_chk@plt+0x40d8>
   15780:	ldr	r2, [r4, #28]
   15784:	mov	r0, sl
   15788:	blx	r2
   1578c:	ldr	r6, [r6]
   15790:	cmp	r0, #0
   15794:	beq	15768 <__mempcpy_chk@plt+0x40a4>
   15798:	b	15740 <__mempcpy_chk@plt+0x407c>
   1579c:	mov	r0, sl
   157a0:	cmp	r0, #0
   157a4:	bne	15754 <__mempcpy_chk@plt+0x4090>
   157a8:	vldr	s0, [r4, #8]
   157ac:	vldr	s2, [r4, #12]
   157b0:	ldr	r0, [r4, #20]
   157b4:	vcvt.f32.u32	s0, s0
   157b8:	vcvt.f32.u32	s4, s2
   157bc:	vldr	s2, [r0, #8]
   157c0:	vmul.f32	s6, s2, s0
   157c4:	vcmpe.f32	s6, s4
   157c8:	vmrs	APSR_nzcv, fpscr
   157cc:	bpl	15920 <__mempcpy_chk@plt+0x425c>
   157d0:	movw	r1, #45528	; 0xb1d8
   157d4:	movt	r1, #1
   157d8:	cmp	r0, r1
   157dc:	beq	15868 <__mempcpy_chk@plt+0x41a4>
   157e0:	vldr	s6, [pc, #532]	; 159fc <__mempcpy_chk@plt+0x4338>
   157e4:	vcmpe.f32	s2, s6
   157e8:	vmrs	APSR_nzcv, fpscr
   157ec:	ble	15854 <__mempcpy_chk@plt+0x4190>
   157f0:	vldr	s8, [pc, #520]	; 15a00 <__mempcpy_chk@plt+0x433c>
   157f4:	vcmpe.f32	s2, s8
   157f8:	vmrs	APSR_nzcv, fpscr
   157fc:	bpl	15854 <__mempcpy_chk@plt+0x4190>
   15800:	vldr	s8, [pc, #508]	; 15a04 <__mempcpy_chk@plt+0x4340>
   15804:	vldr	s10, [r0, #12]
   15808:	vcmpe.f32	s10, s8
   1580c:	vmrs	APSR_nzcv, fpscr
   15810:	ble	15854 <__mempcpy_chk@plt+0x4190>
   15814:	vldr	s8, [r0]
   15818:	vcmpe.f32	s8, #0.0
   1581c:	vmrs	APSR_nzcv, fpscr
   15820:	blt	15854 <__mempcpy_chk@plt+0x4190>
   15824:	vadd.f32	s6, s8, s6
   15828:	vcmpe.f32	s6, s2
   1582c:	vmrs	APSR_nzcv, fpscr
   15830:	bpl	15854 <__mempcpy_chk@plt+0x4190>
   15834:	vldr	s8, [r0, #4]
   15838:	vmov.f32	s10, #112	; 0x3f800000  1.0
   1583c:	vcmpe.f32	s8, s10
   15840:	vmrs	APSR_nzcv, fpscr
   15844:	bhi	15854 <__mempcpy_chk@plt+0x4190>
   15848:	vcmpe.f32	s6, s8
   1584c:	vmrs	APSR_nzcv, fpscr
   15850:	bmi	1586c <__mempcpy_chk@plt+0x41a8>
   15854:	vldr	s2, [pc, #428]	; 15a08 <__mempcpy_chk@plt+0x4344>
   15858:	movw	r0, #45528	; 0xb1d8
   1585c:	movt	r0, #1
   15860:	str	r0, [r4, #20]
   15864:	b	1586c <__mempcpy_chk@plt+0x41a8>
   15868:	mov	r0, r1
   1586c:	vmul.f32	s6, s2, s0
   15870:	vcmpe.f32	s6, s4
   15874:	vmrs	APSR_nzcv, fpscr
   15878:	bpl	15920 <__mempcpy_chk@plt+0x425c>
   1587c:	vldr	s4, [r0, #12]
   15880:	ldrb	r0, [r0, #16]
   15884:	mvn	r7, #0
   15888:	cmp	r0, #0
   1588c:	vmul.f32	s0, s4, s0
   15890:	vldr	s4, [pc, #372]	; 15a0c <__mempcpy_chk@plt+0x4348>
   15894:	vmul.f32	s2, s2, s0
   15898:	vseleq.f32	s0, s2, s0
   1589c:	vcmpe.f32	s0, s4
   158a0:	vmrs	APSR_nzcv, fpscr
   158a4:	bge	15994 <__mempcpy_chk@plt+0x42d0>
   158a8:	vcvt.u32.f32	s0, s0
   158ac:	mov	r0, r4
   158b0:	vmov	r1, s0
   158b4:	bl	152c4 <__mempcpy_chk@plt+0x3c00>
   158b8:	cmp	r0, #0
   158bc:	beq	15994 <__mempcpy_chk@plt+0x42d0>
   158c0:	ldr	r1, [r4, #8]
   158c4:	ldr	r2, [r4, #24]
   158c8:	mov	r0, sl
   158cc:	blx	r2
   158d0:	mov	r7, r0
   158d4:	ldr	r0, [r4, #8]
   158d8:	cmp	r7, r0
   158dc:	bcs	159f8 <__mempcpy_chk@plt+0x4334>
   158e0:	ldr	r5, [r4]
   158e4:	mov	r9, r5
   158e8:	ldr	r1, [r9, r7, lsl #3]!
   158ec:	cmp	r1, #0
   158f0:	beq	15920 <__mempcpy_chk@plt+0x425c>
   158f4:	cmp	r1, sl
   158f8:	mov	r0, sl
   158fc:	beq	15918 <__mempcpy_chk@plt+0x4254>
   15900:	ldr	r2, [r4, #28]
   15904:	mov	r0, sl
   15908:	blx	r2
   1590c:	cmp	r0, #0
   15910:	beq	159a8 <__mempcpy_chk@plt+0x42e4>
   15914:	ldr	r0, [r9]
   15918:	cmp	r0, #0
   1591c:	bne	159f8 <__mempcpy_chk@plt+0x4334>
   15920:	ldr	r0, [r9]
   15924:	cmp	r0, #0
   15928:	beq	15944 <__mempcpy_chk@plt+0x4280>
   1592c:	ldr	r0, [r4, #36]	; 0x24
   15930:	cmp	r0, #0
   15934:	beq	15964 <__mempcpy_chk@plt+0x42a0>
   15938:	ldr	r1, [r0, #4]
   1593c:	str	r1, [r4, #36]	; 0x24
   15940:	b	15974 <__mempcpy_chk@plt+0x42b0>
   15944:	str	sl, [r9]
   15948:	ldr	r0, [r4, #12]
   1594c:	ldr	r1, [r4, #16]
   15950:	add	r0, r0, #1
   15954:	add	r1, r1, #1
   15958:	str	r0, [r4, #12]
   1595c:	str	r1, [r4, #16]
   15960:	b	15990 <__mempcpy_chk@plt+0x42cc>
   15964:	mov	r0, #8
   15968:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   1596c:	cmp	r0, #0
   15970:	beq	159a0 <__mempcpy_chk@plt+0x42dc>
   15974:	str	sl, [r0]
   15978:	ldr	r1, [r9, #4]
   1597c:	str	r1, [r0, #4]
   15980:	str	r0, [r9, #4]
   15984:	ldr	r0, [r4, #16]
   15988:	add	r0, r0, #1
   1598c:	str	r0, [r4, #16]
   15990:	mov	r7, #1
   15994:	mov	r0, r7
   15998:	sub	sp, fp, #28
   1599c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159a0:	mvn	r7, #0
   159a4:	b	15994 <__mempcpy_chk@plt+0x42d0>
   159a8:	add	r6, r5, r7, lsl #3
   159ac:	ldr	r0, [r6, #4]!
   159b0:	cmp	r0, #0
   159b4:	beq	15920 <__mempcpy_chk@plt+0x425c>
   159b8:	ldr	r1, [r0]
   159bc:	cmp	r1, sl
   159c0:	beq	159ec <__mempcpy_chk@plt+0x4328>
   159c4:	ldr	r2, [r4, #28]
   159c8:	mov	r0, sl
   159cc:	blx	r2
   159d0:	ldr	r6, [r6]
   159d4:	cmp	r0, #0
   159d8:	beq	159ac <__mempcpy_chk@plt+0x42e8>
   159dc:	ldr	r0, [r6]
   159e0:	cmp	r0, #0
   159e4:	beq	15920 <__mempcpy_chk@plt+0x425c>
   159e8:	b	159f8 <__mempcpy_chk@plt+0x4334>
   159ec:	mov	r0, sl
   159f0:	cmp	r0, #0
   159f4:	beq	15920 <__mempcpy_chk@plt+0x425c>
   159f8:	bl	11688 <abort@plt>
   159fc:	stclcc	12, cr12, [ip, #820]	; 0x334
   15a00:	svccc	0x00666666
   15a04:	svccc	0x008ccccd
   15a08:	svccc	0x004ccccd
   15a0c:	svcmi	0x00800000
   15a10:	push	{r4, sl, fp, lr}
   15a14:	add	fp, sp, #8
   15a18:	sub	sp, sp, #8
   15a1c:	add	r2, sp, #4
   15a20:	mov	r4, r1
   15a24:	bl	156cc <__mempcpy_chk@plt+0x4008>
   15a28:	cmn	r0, #1
   15a2c:	beq	15a40 <__mempcpy_chk@plt+0x437c>
   15a30:	ldr	r1, [sp, #4]
   15a34:	cmp	r0, #0
   15a38:	moveq	r4, r1
   15a3c:	b	15a44 <__mempcpy_chk@plt+0x4380>
   15a40:	mov	r4, #0
   15a44:	mov	r0, r4
   15a48:	sub	sp, fp, #8
   15a4c:	pop	{r4, sl, fp, pc}
   15a50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15a54:	add	fp, sp, #24
   15a58:	mov	r9, r1
   15a5c:	ldr	r1, [r0, #8]
   15a60:	ldr	r2, [r0, #24]
   15a64:	mov	r5, r0
   15a68:	mov	r0, r9
   15a6c:	blx	r2
   15a70:	mov	r7, r0
   15a74:	ldr	r0, [r5, #8]
   15a78:	cmp	r7, r0
   15a7c:	bcs	15ce0 <__mempcpy_chk@plt+0x461c>
   15a80:	ldr	r6, [r5]
   15a84:	mov	r8, #0
   15a88:	mov	r4, r6
   15a8c:	ldr	r1, [r4, r7, lsl #3]!
   15a90:	cmp	r1, #0
   15a94:	beq	15b48 <__mempcpy_chk@plt+0x4484>
   15a98:	cmp	r1, r9
   15a9c:	beq	15ab8 <__mempcpy_chk@plt+0x43f4>
   15aa0:	ldr	r2, [r5, #28]
   15aa4:	mov	r0, r9
   15aa8:	blx	r2
   15aac:	cmp	r0, #0
   15ab0:	beq	15af0 <__mempcpy_chk@plt+0x442c>
   15ab4:	ldr	r9, [r4]
   15ab8:	add	r0, r6, r7, lsl #3
   15abc:	ldr	r0, [r0, #4]
   15ac0:	cmp	r0, #0
   15ac4:	beq	15b38 <__mempcpy_chk@plt+0x4474>
   15ac8:	ldm	r0, {r1, r2}
   15acc:	stm	r4, {r1, r2}
   15ad0:	mov	r1, #0
   15ad4:	str	r1, [r0]
   15ad8:	ldr	r1, [r5, #36]	; 0x24
   15adc:	str	r1, [r0, #4]
   15ae0:	str	r0, [r5, #36]	; 0x24
   15ae4:	cmp	r9, #0
   15ae8:	bne	15b80 <__mempcpy_chk@plt+0x44bc>
   15aec:	b	15b48 <__mempcpy_chk@plt+0x4484>
   15af0:	add	r7, r6, r7, lsl #3
   15af4:	ldr	r0, [r7, #4]!
   15af8:	cmp	r0, #0
   15afc:	beq	15b48 <__mempcpy_chk@plt+0x4484>
   15b00:	ldr	r1, [r0]
   15b04:	cmp	r1, r9
   15b08:	beq	15b50 <__mempcpy_chk@plt+0x448c>
   15b0c:	ldr	r2, [r5, #28]
   15b10:	mov	r0, r9
   15b14:	blx	r2
   15b18:	ldr	r1, [r7]
   15b1c:	cmp	r0, #0
   15b20:	bne	15b58 <__mempcpy_chk@plt+0x4494>
   15b24:	ldr	r0, [r1, #4]!
   15b28:	mov	r7, r1
   15b2c:	cmp	r0, #0
   15b30:	bne	15b00 <__mempcpy_chk@plt+0x443c>
   15b34:	b	15b48 <__mempcpy_chk@plt+0x4484>
   15b38:	mov	r0, #0
   15b3c:	str	r0, [r4]
   15b40:	cmp	r9, #0
   15b44:	bne	15b80 <__mempcpy_chk@plt+0x44bc>
   15b48:	mov	r0, r8
   15b4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15b50:	mov	r1, r0
   15b54:	b	15b5c <__mempcpy_chk@plt+0x4498>
   15b58:	ldr	r9, [r1]
   15b5c:	ldr	r0, [r1, #4]
   15b60:	str	r0, [r7]
   15b64:	mov	r0, #0
   15b68:	str	r0, [r1]
   15b6c:	ldr	r0, [r5, #36]	; 0x24
   15b70:	str	r0, [r1, #4]
   15b74:	str	r1, [r5, #36]	; 0x24
   15b78:	cmp	r9, #0
   15b7c:	beq	15b48 <__mempcpy_chk@plt+0x4484>
   15b80:	ldr	r0, [r5, #16]
   15b84:	sub	r0, r0, #1
   15b88:	str	r0, [r5, #16]
   15b8c:	ldr	r0, [r4]
   15b90:	cmp	r0, #0
   15b94:	bne	15cd4 <__mempcpy_chk@plt+0x4610>
   15b98:	ldr	r0, [r5, #12]
   15b9c:	vldr	s0, [r5, #8]
   15ba0:	sub	r1, r0, #1
   15ba4:	str	r1, [r5, #12]
   15ba8:	vmov	s2, r1
   15bac:	ldr	r0, [r5, #20]
   15bb0:	vcvt.f32.u32	s0, s0
   15bb4:	vcvt.f32.u32	s2, s2
   15bb8:	vldr	s4, [r0]
   15bbc:	vmul.f32	s6, s4, s0
   15bc0:	vcmpe.f32	s6, s2
   15bc4:	vmrs	APSR_nzcv, fpscr
   15bc8:	ble	15cd4 <__mempcpy_chk@plt+0x4610>
   15bcc:	movw	r1, #45528	; 0xb1d8
   15bd0:	movt	r1, #1
   15bd4:	cmp	r0, r1
   15bd8:	beq	15c64 <__mempcpy_chk@plt+0x45a0>
   15bdc:	vldr	s8, [pc, #256]	; 15ce4 <__mempcpy_chk@plt+0x4620>
   15be0:	vldr	s6, [r0, #8]
   15be4:	vcmpe.f32	s6, s8
   15be8:	vmrs	APSR_nzcv, fpscr
   15bec:	ble	15c50 <__mempcpy_chk@plt+0x458c>
   15bf0:	vldr	s10, [pc, #240]	; 15ce8 <__mempcpy_chk@plt+0x4624>
   15bf4:	vcmpe.f32	s6, s10
   15bf8:	vmrs	APSR_nzcv, fpscr
   15bfc:	bpl	15c50 <__mempcpy_chk@plt+0x458c>
   15c00:	vcmpe.f32	s4, #0.0
   15c04:	vmrs	APSR_nzcv, fpscr
   15c08:	blt	15c50 <__mempcpy_chk@plt+0x458c>
   15c0c:	vldr	s10, [r0, #12]
   15c10:	vldr	s12, [pc, #212]	; 15cec <__mempcpy_chk@plt+0x4628>
   15c14:	vcmpe.f32	s10, s12
   15c18:	vmrs	APSR_nzcv, fpscr
   15c1c:	ble	15c50 <__mempcpy_chk@plt+0x458c>
   15c20:	vadd.f32	s8, s4, s8
   15c24:	vcmpe.f32	s8, s6
   15c28:	vmrs	APSR_nzcv, fpscr
   15c2c:	bpl	15c50 <__mempcpy_chk@plt+0x458c>
   15c30:	vldr	s6, [r0, #4]
   15c34:	vmov.f32	s10, #112	; 0x3f800000  1.0
   15c38:	vcmpe.f32	s6, s10
   15c3c:	vmrs	APSR_nzcv, fpscr
   15c40:	bhi	15c50 <__mempcpy_chk@plt+0x458c>
   15c44:	vcmpe.f32	s8, s6
   15c48:	vmrs	APSR_nzcv, fpscr
   15c4c:	bmi	15c68 <__mempcpy_chk@plt+0x45a4>
   15c50:	vldr	s4, [pc, #152]	; 15cf0 <__mempcpy_chk@plt+0x462c>
   15c54:	movw	r0, #45528	; 0xb1d8
   15c58:	movt	r0, #1
   15c5c:	str	r0, [r5, #20]
   15c60:	b	15c68 <__mempcpy_chk@plt+0x45a4>
   15c64:	mov	r0, r1
   15c68:	vmul.f32	s4, s4, s0
   15c6c:	vcmpe.f32	s4, s2
   15c70:	vmrs	APSR_nzcv, fpscr
   15c74:	ble	15cd4 <__mempcpy_chk@plt+0x4610>
   15c78:	vldr	s2, [r0, #4]
   15c7c:	ldrb	r1, [r0, #16]
   15c80:	cmp	r1, #0
   15c84:	vmul.f32	s0, s2, s0
   15c88:	bne	15c94 <__mempcpy_chk@plt+0x45d0>
   15c8c:	vldr	s2, [r0, #8]
   15c90:	vmul.f32	s0, s0, s2
   15c94:	vcvt.u32.f32	s0, s0
   15c98:	mov	r0, r5
   15c9c:	vmov	r1, s0
   15ca0:	bl	152c4 <__mempcpy_chk@plt+0x3c00>
   15ca4:	cmp	r0, #0
   15ca8:	bne	15cd4 <__mempcpy_chk@plt+0x4610>
   15cac:	ldr	r0, [r5, #36]	; 0x24
   15cb0:	cmp	r0, #0
   15cb4:	beq	15ccc <__mempcpy_chk@plt+0x4608>
   15cb8:	ldr	r4, [r0, #4]
   15cbc:	bl	14948 <__mempcpy_chk@plt+0x3284>
   15cc0:	cmp	r4, #0
   15cc4:	mov	r0, r4
   15cc8:	bne	15cb8 <__mempcpy_chk@plt+0x45f4>
   15ccc:	mov	r0, #0
   15cd0:	str	r0, [r5, #36]	; 0x24
   15cd4:	mov	r8, r9
   15cd8:	mov	r0, r8
   15cdc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ce0:	bl	11688 <abort@plt>
   15ce4:	stclcc	12, cr12, [ip, #820]	; 0x334
   15ce8:	svccc	0x00666666
   15cec:	svccc	0x008ccccd
   15cf0:	andeq	r0, r0, r0
   15cf4:	b	15a50 <__mempcpy_chk@plt+0x438c>
   15cf8:	push	{fp, lr}
   15cfc:	mov	fp, sp
   15d00:	mov	r2, r1
   15d04:	ldrd	r0, [r0, #8]
   15d08:	mov	r3, #0
   15d0c:	bl	19df0 <__mempcpy_chk@plt+0x872c>
   15d10:	mov	r0, r2
   15d14:	pop	{fp, pc}
   15d18:	push	{r4, r5, fp, lr}
   15d1c:	add	fp, sp, #8
   15d20:	mov	lr, r1
   15d24:	mov	r3, r0
   15d28:	ldr	r2, [r3, #8]!
   15d2c:	ldr	ip, [lr, #8]!
   15d30:	ldr	r4, [r3, #4]
   15d34:	eor	ip, r2, ip
   15d38:	ldr	r2, [lr, #4]
   15d3c:	eor	r2, r4, r2
   15d40:	orrs	r2, ip, r2
   15d44:	bne	15d78 <__mempcpy_chk@plt+0x46b4>
   15d48:	ldr	r4, [r3, #8]
   15d4c:	ldr	r2, [lr, #8]
   15d50:	ldr	r5, [lr, #12]
   15d54:	ldr	r3, [r3, #12]
   15d58:	eor	r3, r3, r5
   15d5c:	eor	r2, r4, r2
   15d60:	orrs	r2, r2, r3
   15d64:	bne	15d78 <__mempcpy_chk@plt+0x46b4>
   15d68:	ldr	r1, [r1]
   15d6c:	ldr	r0, [r0]
   15d70:	pop	{r4, r5, fp, lr}
   15d74:	b	17e64 <__mempcpy_chk@plt+0x67a0>
   15d78:	mov	r0, #0
   15d7c:	pop	{r4, r5, fp, pc}
   15d80:	push	{r4, r5, fp, lr}
   15d84:	add	fp, sp, #8
   15d88:	mov	r5, r0
   15d8c:	ldr	r0, [r0]
   15d90:	mov	r4, r1
   15d94:	bl	199e4 <__mempcpy_chk@plt+0x8320>
   15d98:	ldrd	r2, [r5, #8]
   15d9c:	eor	r0, r2, r0
   15da0:	mov	r1, r3
   15da4:	mov	r2, r4
   15da8:	mov	r3, #0
   15dac:	bl	19df0 <__mempcpy_chk@plt+0x872c>
   15db0:	mov	r0, r2
   15db4:	pop	{r4, r5, fp, pc}
   15db8:	push	{r4, r5, fp, lr}
   15dbc:	add	fp, sp, #8
   15dc0:	mov	lr, r1
   15dc4:	mov	r2, r0
   15dc8:	ldr	r3, [r2, #8]!
   15dcc:	ldr	ip, [lr, #8]!
   15dd0:	ldr	r4, [r2, #4]
   15dd4:	eor	ip, r3, ip
   15dd8:	ldr	r3, [lr, #4]
   15ddc:	eor	r3, r4, r3
   15de0:	orrs	r3, ip, r3
   15de4:	mov	ip, #0
   15de8:	bne	15e18 <__mempcpy_chk@plt+0x4754>
   15dec:	ldrd	r4, [lr, #8]
   15df0:	ldrd	r2, [r2, #8]
   15df4:	eor	r3, r3, r5
   15df8:	eor	r2, r2, r4
   15dfc:	orrs	r2, r2, r3
   15e00:	bne	15e18 <__mempcpy_chk@plt+0x4754>
   15e04:	ldr	r1, [r1]
   15e08:	ldr	r0, [r0]
   15e0c:	bl	11370 <strcmp@plt>
   15e10:	clz	r0, r0
   15e14:	lsr	ip, r0, #5
   15e18:	mov	r0, ip
   15e1c:	pop	{r4, r5, fp, pc}
   15e20:	push	{r4, sl, fp, lr}
   15e24:	add	fp, sp, #8
   15e28:	mov	r4, r0
   15e2c:	ldr	r0, [r0]
   15e30:	bl	14948 <__mempcpy_chk@plt+0x3284>
   15e34:	mov	r0, r4
   15e38:	pop	{r4, sl, fp, lr}
   15e3c:	b	14948 <__mempcpy_chk@plt+0x3284>
   15e40:	sub	sp, sp, #4
   15e44:	push	{fp, lr}
   15e48:	mov	fp, sp
   15e4c:	sub	sp, sp, #4
   15e50:	str	r3, [fp, #8]
   15e54:	tst	r2, #64	; 0x40
   15e58:	mov	r3, #0
   15e5c:	ldrne	r3, [fp, #8]
   15e60:	bl	11544 <openat64@plt>
   15e64:	bl	18564 <__mempcpy_chk@plt+0x6ea0>
   15e68:	mov	sp, fp
   15e6c:	pop	{fp, lr}
   15e70:	add	sp, sp, #4
   15e74:	bx	lr
   15e78:	push	{r4, r5, r6, sl, fp, lr}
   15e7c:	add	fp, sp, #16
   15e80:	orr	r2, r2, #18688	; 0x4900
   15e84:	mov	r4, r3
   15e88:	orr	r2, r2, #524288	; 0x80000
   15e8c:	bl	15e40 <__mempcpy_chk@plt+0x477c>
   15e90:	mov	r5, r0
   15e94:	mov	r0, #0
   15e98:	cmp	r5, #0
   15e9c:	bmi	15ed4 <__mempcpy_chk@plt+0x4810>
   15ea0:	mov	r0, r5
   15ea4:	bl	11634 <fdopendir@plt>
   15ea8:	cmp	r0, #0
   15eac:	beq	15eb8 <__mempcpy_chk@plt+0x47f4>
   15eb0:	str	r5, [r4]
   15eb4:	pop	{r4, r5, r6, sl, fp, pc}
   15eb8:	bl	11550 <__errno_location@plt>
   15ebc:	ldr	r6, [r0]
   15ec0:	mov	r4, r0
   15ec4:	mov	r0, r5
   15ec8:	bl	11694 <close@plt>
   15ecc:	mov	r0, #0
   15ed0:	str	r6, [r4]
   15ed4:	pop	{r4, r5, r6, sl, fp, pc}
   15ed8:	push	{r4, r5, fp, lr}
   15edc:	add	fp, sp, #8
   15ee0:	cmp	r0, #0
   15ee4:	beq	15f78 <__mempcpy_chk@plt+0x48b4>
   15ee8:	mov	r1, #47	; 0x2f
   15eec:	mov	r4, r0
   15ef0:	bl	11610 <strrchr@plt>
   15ef4:	cmp	r0, #0
   15ef8:	mov	r5, r4
   15efc:	addne	r5, r0, #1
   15f00:	sub	r0, r5, r4
   15f04:	cmp	r0, #7
   15f08:	blt	15f5c <__mempcpy_chk@plt+0x4898>
   15f0c:	movw	r1, #45604	; 0xb224
   15f10:	sub	r0, r5, #7
   15f14:	mov	r2, #7
   15f18:	movt	r1, #1
   15f1c:	bl	1167c <strncmp@plt>
   15f20:	cmp	r0, #0
   15f24:	bne	15f5c <__mempcpy_chk@plt+0x4898>
   15f28:	movw	r1, #45612	; 0xb22c
   15f2c:	mov	r0, r5
   15f30:	mov	r2, #3
   15f34:	movt	r1, #1
   15f38:	bl	1167c <strncmp@plt>
   15f3c:	cmp	r0, #0
   15f40:	beq	15f4c <__mempcpy_chk@plt+0x4888>
   15f44:	mov	r4, r5
   15f48:	b	15f5c <__mempcpy_chk@plt+0x4898>
   15f4c:	movw	r0, #49560	; 0xc198
   15f50:	add	r4, r5, #3
   15f54:	movt	r0, #2
   15f58:	str	r4, [r0]
   15f5c:	movw	r0, #49564	; 0xc19c
   15f60:	movt	r0, #2
   15f64:	str	r4, [r0]
   15f68:	movw	r0, #49632	; 0xc1e0
   15f6c:	movt	r0, #2
   15f70:	str	r4, [r0]
   15f74:	pop	{r4, r5, fp, pc}
   15f78:	movw	r0, #49576	; 0xc1a8
   15f7c:	mov	r1, #55	; 0x37
   15f80:	mov	r2, #1
   15f84:	movt	r0, #2
   15f88:	ldr	r3, [r0]
   15f8c:	movw	r0, #45548	; 0xb1ec
   15f90:	movt	r0, #1
   15f94:	bl	11460 <fwrite@plt>
   15f98:	bl	11688 <abort@plt>
   15f9c:	push	{r4, r5, r6, sl, fp, lr}
   15fa0:	add	fp, sp, #16
   15fa4:	mov	r4, r0
   15fa8:	movw	r0, #49640	; 0xc1e8
   15fac:	movt	r0, #2
   15fb0:	cmp	r4, #0
   15fb4:	moveq	r4, r0
   15fb8:	bl	11550 <__errno_location@plt>
   15fbc:	ldr	r6, [r0]
   15fc0:	mov	r5, r0
   15fc4:	mov	r0, r4
   15fc8:	mov	r1, #48	; 0x30
   15fcc:	bl	190c4 <__mempcpy_chk@plt+0x7a00>
   15fd0:	str	r6, [r5]
   15fd4:	pop	{r4, r5, r6, sl, fp, pc}
   15fd8:	movw	r1, #49640	; 0xc1e8
   15fdc:	cmp	r0, #0
   15fe0:	movt	r1, #2
   15fe4:	movne	r1, r0
   15fe8:	ldr	r0, [r1]
   15fec:	bx	lr
   15ff0:	movw	r2, #49640	; 0xc1e8
   15ff4:	cmp	r0, #0
   15ff8:	movt	r2, #2
   15ffc:	movne	r2, r0
   16000:	str	r1, [r2]
   16004:	bx	lr
   16008:	movw	r3, #49640	; 0xc1e8
   1600c:	cmp	r0, #0
   16010:	and	r2, r2, #1
   16014:	movt	r3, #2
   16018:	movne	r3, r0
   1601c:	ubfx	r0, r1, #5, #3
   16020:	and	r1, r1, #31
   16024:	add	ip, r3, r0, lsl #2
   16028:	mov	r0, #1
   1602c:	ldr	r3, [ip, #8]
   16030:	and	r0, r0, r3, lsr r1
   16034:	eor	r2, r0, r2
   16038:	eor	r1, r3, r2, lsl r1
   1603c:	str	r1, [ip, #8]
   16040:	bx	lr
   16044:	movw	r2, #49640	; 0xc1e8
   16048:	cmp	r0, #0
   1604c:	movt	r2, #2
   16050:	movne	r2, r0
   16054:	ldr	r0, [r2, #4]
   16058:	str	r1, [r2, #4]
   1605c:	bx	lr
   16060:	push	{fp, lr}
   16064:	mov	fp, sp
   16068:	movw	r3, #49640	; 0xc1e8
   1606c:	cmp	r0, #0
   16070:	movt	r3, #2
   16074:	movne	r3, r0
   16078:	cmp	r1, #0
   1607c:	mov	r0, #10
   16080:	cmpne	r2, #0
   16084:	str	r0, [r3]
   16088:	bne	16090 <__mempcpy_chk@plt+0x49cc>
   1608c:	bl	11688 <abort@plt>
   16090:	str	r1, [r3, #40]	; 0x28
   16094:	str	r2, [r3, #44]	; 0x2c
   16098:	pop	{fp, pc}
   1609c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160a0:	add	fp, sp, #28
   160a4:	sub	sp, sp, #20
   160a8:	mov	r7, r0
   160ac:	ldr	r0, [fp, #8]
   160b0:	movw	r5, #49640	; 0xc1e8
   160b4:	mov	r8, r3
   160b8:	mov	r9, r2
   160bc:	mov	sl, r1
   160c0:	movt	r5, #2
   160c4:	cmp	r0, #0
   160c8:	movne	r5, r0
   160cc:	bl	11550 <__errno_location@plt>
   160d0:	ldr	r2, [r5, #40]	; 0x28
   160d4:	ldr	r3, [r5, #44]	; 0x2c
   160d8:	mov	r4, r0
   160dc:	ldm	r5, {r0, r1}
   160e0:	add	r5, r5, #8
   160e4:	ldr	r6, [r4]
   160e8:	stm	sp, {r0, r1, r5}
   160ec:	mov	r0, r7
   160f0:	mov	r1, sl
   160f4:	str	r2, [sp, #12]
   160f8:	str	r3, [sp, #16]
   160fc:	mov	r2, r9
   16100:	mov	r3, r8
   16104:	bl	16114 <__mempcpy_chk@plt+0x4a50>
   16108:	str	r6, [r4]
   1610c:	sub	sp, fp, #28
   16110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16118:	add	fp, sp, #28
   1611c:	sub	sp, sp, #156	; 0x9c
   16120:	mov	r5, r0
   16124:	add	r0, r2, #1
   16128:	mov	r6, r1
   1612c:	mov	sl, r3
   16130:	str	r2, [fp, #-80]	; 0xffffffb0
   16134:	str	r0, [sp, #72]	; 0x48
   16138:	ldr	r0, [fp, #12]
   1613c:	and	r1, r0, #1
   16140:	str	r1, [sp, #36]	; 0x24
   16144:	and	r1, r0, #4
   16148:	str	r1, [sp, #32]
   1614c:	ubfx	r9, r0, #1, #1
   16150:	bl	11478 <__ctype_get_mb_cur_max@plt>
   16154:	str	r0, [sp, #40]	; 0x28
   16158:	ldr	r0, [fp, #24]
   1615c:	ldr	r7, [fp, #8]
   16160:	mov	r1, #0
   16164:	str	r5, [fp, #-84]	; 0xffffffac
   16168:	str	r1, [fp, #-56]	; 0xffffffc8
   1616c:	mov	r1, #0
   16170:	str	r1, [sp, #60]	; 0x3c
   16174:	mov	r1, #1
   16178:	str	r1, [fp, #-48]	; 0xffffffd0
   1617c:	str	r0, [sp, #80]	; 0x50
   16180:	ldr	r0, [fp, #20]
   16184:	str	r0, [sp, #76]	; 0x4c
   16188:	mov	r0, #0
   1618c:	str	r0, [sp, #56]	; 0x38
   16190:	mov	r0, #0
   16194:	str	r0, [fp, #-88]	; 0xffffffa8
   16198:	mov	r0, #0
   1619c:	str	r0, [fp, #-72]	; 0xffffffb8
   161a0:	mov	r0, #0
   161a4:	cmp	r7, #10
   161a8:	bhi	1713c <__mempcpy_chk@plt+0x5a78>
   161ac:	add	r1, pc, #24
   161b0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   161b4:	mov	r4, r6
   161b8:	mov	r8, #0
   161bc:	mov	r2, #1
   161c0:	mov	r3, #0
   161c4:	mov	lr, sl
   161c8:	ldr	pc, [r1, r7, lsl #2]
   161cc:	muleq	r1, r0, r2
   161d0:	andeq	r6, r1, r4, ror #5
   161d4:	andeq	r6, r1, r4, lsr #5
   161d8:	andeq	r6, r1, r8, lsl #5
   161dc:	ldrdeq	r6, [r1], -r8
   161e0:	andeq	r6, r1, ip, lsl #6
   161e4:			; <UNDEFINED> instruction: 0x000162b4
   161e8:	muleq	r1, r0, r3
   161ec:	strdeq	r6, [r1], -r8
   161f0:	strdeq	r6, [r1], -r8
   161f4:	andeq	r6, r1, r0, lsr #4
   161f8:	movw	r0, #45694	; 0xb27e
   161fc:	mov	r1, r7
   16200:	movt	r0, #1
   16204:	bl	17b44 <__mempcpy_chk@plt+0x6480>
   16208:	str	r0, [sp, #76]	; 0x4c
   1620c:	movw	r0, #45696	; 0xb280
   16210:	mov	r1, r7
   16214:	movt	r0, #1
   16218:	bl	17b44 <__mempcpy_chk@plt+0x6480>
   1621c:	str	r0, [sp, #80]	; 0x50
   16220:	mov	r8, #0
   16224:	tst	r9, #1
   16228:	bne	16260 <__mempcpy_chk@plt+0x4b9c>
   1622c:	ldr	r0, [sp, #76]	; 0x4c
   16230:	ldrb	r0, [r0]
   16234:	cmp	r0, #0
   16238:	beq	16260 <__mempcpy_chk@plt+0x4b9c>
   1623c:	ldr	r1, [sp, #76]	; 0x4c
   16240:	mov	r8, #0
   16244:	add	r1, r1, #1
   16248:	cmp	r8, r4
   1624c:	strbcc	r0, [r5, r8]
   16250:	ldrb	r0, [r1, r8]
   16254:	add	r8, r8, #1
   16258:	cmp	r0, #0
   1625c:	bne	16248 <__mempcpy_chk@plt+0x4b84>
   16260:	ldr	r6, [sp, #80]	; 0x50
   16264:	mov	r0, r6
   16268:	bl	11538 <strlen@plt>
   1626c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16270:	str	r0, [fp, #-72]	; 0xffffffb8
   16274:	str	r6, [fp, #-88]	; 0xffffffa8
   16278:	mov	r2, #1
   1627c:	mov	r3, r9
   16280:	mov	lr, sl
   16284:	b	16390 <__mempcpy_chk@plt+0x4ccc>
   16288:	mov	r0, #1
   1628c:	b	162e4 <__mempcpy_chk@plt+0x4c20>
   16290:	mov	r7, #0
   16294:	mov	r8, #0
   16298:	mov	r2, r0
   1629c:	mov	r3, #0
   162a0:	b	16390 <__mempcpy_chk@plt+0x4ccc>
   162a4:	tst	r9, #1
   162a8:	bne	162e4 <__mempcpy_chk@plt+0x4c20>
   162ac:	mov	r2, r0
   162b0:	b	1633c <__mempcpy_chk@plt+0x4c78>
   162b4:	mov	r0, #1
   162b8:	mov	r8, #0
   162bc:	mov	r7, #5
   162c0:	mov	r2, #1
   162c4:	str	r0, [fp, #-72]	; 0xffffffb8
   162c8:	movw	r0, #45692	; 0xb27c
   162cc:	movt	r0, #1
   162d0:	str	r0, [fp, #-88]	; 0xffffffa8
   162d4:	b	16304 <__mempcpy_chk@plt+0x4c40>
   162d8:	mov	r2, #1
   162dc:	tst	r9, #1
   162e0:	beq	1633c <__mempcpy_chk@plt+0x4c78>
   162e4:	mov	r1, #1
   162e8:	mov	r8, #0
   162ec:	mov	r7, #2
   162f0:	mov	r2, r0
   162f4:	str	r1, [fp, #-72]	; 0xffffffb8
   162f8:	movw	r1, #45696	; 0xb280
   162fc:	movt	r1, #1
   16300:	str	r1, [fp, #-88]	; 0xffffffa8
   16304:	mov	r3, #1
   16308:	b	16390 <__mempcpy_chk@plt+0x4ccc>
   1630c:	tst	r9, #1
   16310:	beq	16360 <__mempcpy_chk@plt+0x4c9c>
   16314:	mov	r0, #1
   16318:	mov	r8, #0
   1631c:	mov	r2, #1
   16320:	mov	r3, #1
   16324:	mov	r7, #5
   16328:	str	r0, [fp, #-72]	; 0xffffffb8
   1632c:	movw	r0, #45692	; 0xb27c
   16330:	movt	r0, #1
   16334:	str	r0, [fp, #-88]	; 0xffffffa8
   16338:	b	16390 <__mempcpy_chk@plt+0x4ccc>
   1633c:	cmp	r4, #0
   16340:	mov	r8, #1
   16344:	mov	r3, #0
   16348:	mov	r7, #2
   1634c:	movne	r0, #39	; 0x27
   16350:	strbne	r0, [r5]
   16354:	movw	r0, #45696	; 0xb280
   16358:	movt	r0, #1
   1635c:	b	16384 <__mempcpy_chk@plt+0x4cc0>
   16360:	cmp	r4, #0
   16364:	mov	r8, #1
   16368:	mov	r2, #1
   1636c:	mov	r7, #5
   16370:	mov	r3, #0
   16374:	movne	r0, #34	; 0x22
   16378:	strbne	r0, [r5]
   1637c:	movw	r0, #45692	; 0xb27c
   16380:	movt	r0, #1
   16384:	str	r0, [fp, #-88]	; 0xffffffa8
   16388:	mov	r0, #1
   1638c:	str	r0, [fp, #-72]	; 0xffffffb8
   16390:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16394:	eor	r6, r3, #1
   16398:	str	r7, [fp, #-68]	; 0xffffffbc
   1639c:	str	r3, [fp, #-76]	; 0xffffffb4
   163a0:	str	r2, [sp, #84]	; 0x54
   163a4:	str	r6, [sp, #92]	; 0x5c
   163a8:	cmp	r0, #0
   163ac:	movwne	r0, #1
   163b0:	and	r1, r0, r3
   163b4:	and	r1, r2, r1
   163b8:	str	r1, [sp, #48]	; 0x30
   163bc:	sub	r1, r7, #2
   163c0:	clz	r1, r1
   163c4:	lsr	r1, r1, #5
   163c8:	and	r1, r1, r3
   163cc:	str	r1, [sp, #64]	; 0x40
   163d0:	subs	r1, r7, #2
   163d4:	mov	r7, #0
   163d8:	movwne	r1, #1
   163dc:	orr	r6, r1, r6
   163e0:	and	r1, r1, r2
   163e4:	and	r0, r0, r1
   163e8:	str	r6, [sp, #68]	; 0x44
   163ec:	str	r0, [fp, #-60]	; 0xffffffc4
   163f0:	orr	r0, r1, r3
   163f4:	ldr	r1, [fp, #16]
   163f8:	eor	r0, r0, #1
   163fc:	clz	r1, r1
   16400:	lsr	r1, r1, #5
   16404:	orr	r0, r1, r0
   16408:	str	r0, [fp, #-64]	; 0xffffffc0
   1640c:	eor	r0, r2, #1
   16410:	str	r0, [sp, #52]	; 0x34
   16414:	cmn	lr, #1
   16418:	beq	16428 <__mempcpy_chk@plt+0x4d64>
   1641c:	cmp	r7, lr
   16420:	bne	16434 <__mempcpy_chk@plt+0x4d70>
   16424:	b	16f7c <__mempcpy_chk@plt+0x58b8>
   16428:	ldrb	r0, [ip, r7]
   1642c:	cmp	r0, #0
   16430:	beq	16f84 <__mempcpy_chk@plt+0x58c0>
   16434:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16438:	mov	sl, #0
   1643c:	cmp	r0, #0
   16440:	beq	16478 <__mempcpy_chk@plt+0x4db4>
   16444:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16448:	add	r5, r7, r0
   1644c:	cmp	r0, #2
   16450:	bcc	1646c <__mempcpy_chk@plt+0x4da8>
   16454:	cmn	lr, #1
   16458:	bne	1646c <__mempcpy_chk@plt+0x4da8>
   1645c:	mov	r0, ip
   16460:	bl	11538 <strlen@plt>
   16464:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16468:	mov	lr, r0
   1646c:	cmp	r5, lr
   16470:	bls	16480 <__mempcpy_chk@plt+0x4dbc>
   16474:	ldr	r5, [fp, #-84]	; 0xffffffac
   16478:	mov	r0, #0
   1647c:	b	164cc <__mempcpy_chk@plt+0x4e08>
   16480:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16484:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16488:	add	r0, ip, r7
   1648c:	mov	r6, r4
   16490:	mov	r4, lr
   16494:	bl	1152c <bcmp@plt>
   16498:	ldr	r2, [sp, #92]	; 0x5c
   1649c:	cmp	r0, #0
   164a0:	ldr	r5, [fp, #-84]	; 0xffffffac
   164a4:	mov	r1, r0
   164a8:	movwne	r1, #1
   164ac:	orr	r1, r1, r2
   164b0:	tst	r1, #1
   164b4:	beq	1700c <__mempcpy_chk@plt+0x5948>
   164b8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   164bc:	clz	r0, r0
   164c0:	mov	lr, r4
   164c4:	mov	r4, r6
   164c8:	lsr	r0, r0, #5
   164cc:	str	r0, [fp, #-52]	; 0xffffffcc
   164d0:	ldrb	r6, [ip, r7]
   164d4:	cmp	r6, #126	; 0x7e
   164d8:	bhi	16a08 <__mempcpy_chk@plt+0x5344>
   164dc:	add	r3, pc, #16
   164e0:	mov	r9, #1
   164e4:	mov	r2, #110	; 0x6e
   164e8:	mov	r0, #97	; 0x61
   164ec:	mov	r1, #0
   164f0:	ldr	pc, [r3, r6, lsl #2]
   164f4:	andeq	r6, r1, r8, ror #16
   164f8:	andeq	r6, r1, r8, lsl #20
   164fc:	andeq	r6, r1, r8, lsl #20
   16500:	andeq	r6, r1, r8, lsl #20
   16504:	andeq	r6, r1, r8, lsl #20
   16508:	andeq	r6, r1, r8, lsl #20
   1650c:	andeq	r6, r1, r8, lsl #20
   16510:	andeq	r6, r1, r4, ror #21
   16514:	andeq	r6, r1, r8, asr #16
   16518:	andeq	r6, r1, r0, asr #16
   1651c:	andeq	r6, r1, r4, asr r8
   16520:	andeq	r6, r1, r0, ror r9
   16524:	andeq	r6, r1, r8, lsr r8
   16528:	andeq	r6, r1, r0, asr r8
   1652c:	andeq	r6, r1, r8, lsl #20
   16530:	andeq	r6, r1, r8, lsl #20
   16534:	andeq	r6, r1, r8, lsl #20
   16538:	andeq	r6, r1, r8, lsl #20
   1653c:	andeq	r6, r1, r8, lsl #20
   16540:	andeq	r6, r1, r8, lsl #20
   16544:	andeq	r6, r1, r8, lsl #20
   16548:	andeq	r6, r1, r8, lsl #20
   1654c:	andeq	r6, r1, r8, lsl #20
   16550:	andeq	r6, r1, r8, lsl #20
   16554:	andeq	r6, r1, r8, lsl #20
   16558:	andeq	r6, r1, r8, lsl #20
   1655c:	andeq	r6, r1, r8, lsl #20
   16560:	andeq	r6, r1, r8, lsl #20
   16564:	andeq	r6, r1, r8, lsl #20
   16568:	andeq	r6, r1, r8, lsl #20
   1656c:	andeq	r6, r1, r8, lsl #20
   16570:	andeq	r6, r1, r8, lsl #20
   16574:	andeq	r6, r1, ip, ror #15
   16578:	strdeq	r6, [r1], -r0
   1657c:	strdeq	r6, [r1], -r0
   16580:	ldrdeq	r6, [r1], -r8
   16584:	strdeq	r6, [r1], -r0
   16588:	strdeq	r6, [r1], -r0
   1658c:	strdeq	r6, [r1], -r0
   16590:	andeq	r6, r1, r8, ror r9
   16594:	strdeq	r6, [r1], -r0
   16598:	strdeq	r6, [r1], -r0
   1659c:	strdeq	r6, [r1], -r0
   165a0:	strdeq	r6, [r1], -r0
   165a4:	strdeq	r6, [r1], -r0
   165a8:	strdeq	r6, [r1], -r0
   165ac:	strdeq	r6, [r1], -r0
   165b0:	strdeq	r6, [r1], -r0
   165b4:	strdeq	r6, [r1], -r0
   165b8:	strdeq	r6, [r1], -r0
   165bc:	strdeq	r6, [r1], -r0
   165c0:	strdeq	r6, [r1], -r0
   165c4:	strdeq	r6, [r1], -r0
   165c8:	strdeq	r6, [r1], -r0
   165cc:	strdeq	r6, [r1], -r0
   165d0:	strdeq	r6, [r1], -r0
   165d4:	strdeq	r6, [r1], -r0
   165d8:	strdeq	r6, [r1], -r0
   165dc:	strdeq	r6, [r1], -r0
   165e0:	strdeq	r6, [r1], -r0
   165e4:	strdeq	r6, [r1], -r0
   165e8:	strdeq	r6, [r1], -r0
   165ec:	strdeq	r6, [r1], -r0
   165f0:	andeq	r6, r1, r0, asr #18
   165f4:	andeq	r6, r1, r8, lsl #20
   165f8:	strdeq	r6, [r1], -r0
   165fc:	strdeq	r6, [r1], -r0
   16600:	strdeq	r6, [r1], -r0
   16604:	strdeq	r6, [r1], -r0
   16608:	strdeq	r6, [r1], -r0
   1660c:	strdeq	r6, [r1], -r0
   16610:	strdeq	r6, [r1], -r0
   16614:	strdeq	r6, [r1], -r0
   16618:	strdeq	r6, [r1], -r0
   1661c:	strdeq	r6, [r1], -r0
   16620:	strdeq	r6, [r1], -r0
   16624:	strdeq	r6, [r1], -r0
   16628:	strdeq	r6, [r1], -r0
   1662c:	strdeq	r6, [r1], -r0
   16630:	strdeq	r6, [r1], -r0
   16634:	strdeq	r6, [r1], -r0
   16638:	strdeq	r6, [r1], -r0
   1663c:	strdeq	r6, [r1], -r0
   16640:	strdeq	r6, [r1], -r0
   16644:	strdeq	r6, [r1], -r0
   16648:	strdeq	r6, [r1], -r0
   1664c:	strdeq	r6, [r1], -r0
   16650:	strdeq	r6, [r1], -r0
   16654:	strdeq	r6, [r1], -r0
   16658:	strdeq	r6, [r1], -r0
   1665c:	strdeq	r6, [r1], -r0
   16660:	strdeq	r6, [r1], -r0
   16664:	andeq	r6, r1, r8, lsl r8
   16668:	strdeq	r6, [r1], -r0
   1666c:	strdeq	r6, [r1], -r0
   16670:	strdeq	r6, [r1], -r0
   16674:	strdeq	r6, [r1], -r0
   16678:	strdeq	r6, [r1], -r0
   1667c:	strdeq	r6, [r1], -r0
   16680:	strdeq	r6, [r1], -r0
   16684:	strdeq	r6, [r1], -r0
   16688:	strdeq	r6, [r1], -r0
   1668c:	strdeq	r6, [r1], -r0
   16690:	strdeq	r6, [r1], -r0
   16694:	strdeq	r6, [r1], -r0
   16698:	strdeq	r6, [r1], -r0
   1669c:	strdeq	r6, [r1], -r0
   166a0:	strdeq	r6, [r1], -r0
   166a4:	strdeq	r6, [r1], -r0
   166a8:	strdeq	r6, [r1], -r0
   166ac:	strdeq	r6, [r1], -r0
   166b0:	strdeq	r6, [r1], -r0
   166b4:	strdeq	r6, [r1], -r0
   166b8:	strdeq	r6, [r1], -r0
   166bc:	strdeq	r6, [r1], -r0
   166c0:	strdeq	r6, [r1], -r0
   166c4:	strdeq	r6, [r1], -r0
   166c8:	strdeq	r6, [r1], -r0
   166cc:	strdeq	r6, [r1], -r0
   166d0:	strdeq	r6, [r1], -r0
   166d4:	strdeq	r6, [r1], -r0
   166d8:	strdeq	r6, [r1], -r0
   166dc:	strdeq	r6, [r1], -r0
   166e0:	andeq	r6, r1, ip, lsr #15
   166e4:	strdeq	r6, [r1], -r0
   166e8:	andeq	r6, r1, ip, lsr #15
   166ec:	ldrdeq	r6, [r1], -r8
   166f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   166f4:	tst	r0, #1
   166f8:	bne	16724 <__mempcpy_chk@plt+0x5060>
   166fc:	ldr	r1, [fp, #16]
   16700:	ubfx	r0, r6, #5, #3
   16704:	mov	r2, #1
   16708:	ldr	r0, [r1, r0, lsl #2]
   1670c:	and	r1, r6, #31
   16710:	tst	r0, r2, lsl r1
   16714:	beq	16724 <__mempcpy_chk@plt+0x5060>
   16718:	mov	r0, r6
   1671c:	mov	r1, r9
   16720:	b	16738 <__mempcpy_chk@plt+0x5074>
   16724:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16728:	mov	r1, r9
   1672c:	cmp	r0, #0
   16730:	mov	r0, r6
   16734:	beq	16a78 <__mempcpy_chk@plt+0x53b4>
   16738:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1673c:	tst	r2, #1
   16740:	bne	17048 <__mempcpy_chk@plt+0x5984>
   16744:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16748:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1674c:	subs	r2, r2, #2
   16750:	movwne	r2, #1
   16754:	orr	r2, r2, r3
   16758:	tst	r2, #1
   1675c:	bne	16798 <__mempcpy_chk@plt+0x50d4>
   16760:	cmp	r8, r4
   16764:	movcc	r2, #39	; 0x27
   16768:	strbcc	r2, [r5, r8]
   1676c:	add	r2, r8, #1
   16770:	cmp	r2, r4
   16774:	movcc	r3, #36	; 0x24
   16778:	strbcc	r3, [r5, r2]
   1677c:	add	r2, r8, #2
   16780:	add	r8, r8, #3
   16784:	cmp	r2, r4
   16788:	movcc	r3, #39	; 0x27
   1678c:	strbcc	r3, [r5, r2]
   16790:	mov	r2, #1
   16794:	str	r2, [fp, #-56]	; 0xffffffc8
   16798:	cmp	r8, r4
   1679c:	movcc	r2, #92	; 0x5c
   167a0:	strbcc	r2, [r5, r8]
   167a4:	add	r8, r8, #1
   167a8:	b	16abc <__mempcpy_chk@plt+0x53f8>
   167ac:	cmp	lr, #1
   167b0:	beq	167d8 <__mempcpy_chk@plt+0x5114>
   167b4:	mov	r9, #0
   167b8:	cmn	lr, #1
   167bc:	bne	167e4 <__mempcpy_chk@plt+0x5120>
   167c0:	ldrb	r0, [ip, #1]
   167c4:	cmp	r0, #0
   167c8:	beq	167d8 <__mempcpy_chk@plt+0x5114>
   167cc:	mvn	lr, #0
   167d0:	mov	sl, #0
   167d4:	b	166f0 <__mempcpy_chk@plt+0x502c>
   167d8:	mov	r9, #0
   167dc:	cmp	r7, #0
   167e0:	beq	167ec <__mempcpy_chk@plt+0x5128>
   167e4:	mov	sl, #0
   167e8:	b	166f0 <__mempcpy_chk@plt+0x502c>
   167ec:	mov	r1, #1
   167f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   167f4:	cmp	r0, #2
   167f8:	bne	16810 <__mempcpy_chk@plt+0x514c>
   167fc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16800:	mov	r9, r1
   16804:	tst	r0, #1
   16808:	beq	166f0 <__mempcpy_chk@plt+0x502c>
   1680c:	b	17048 <__mempcpy_chk@plt+0x5984>
   16810:	mov	r9, r1
   16814:	b	166f0 <__mempcpy_chk@plt+0x502c>
   16818:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1681c:	cmp	r0, #2
   16820:	bne	16a5c <__mempcpy_chk@plt+0x5398>
   16824:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16828:	tst	r0, #1
   1682c:	bne	17048 <__mempcpy_chk@plt+0x5984>
   16830:	mov	sl, #0
   16834:	b	16a70 <__mempcpy_chk@plt+0x53ac>
   16838:	mov	r0, #102	; 0x66
   1683c:	b	16ae4 <__mempcpy_chk@plt+0x5420>
   16840:	mov	r2, #116	; 0x74
   16844:	b	16854 <__mempcpy_chk@plt+0x5190>
   16848:	mov	r0, #98	; 0x62
   1684c:	b	16ae4 <__mempcpy_chk@plt+0x5420>
   16850:	mov	r2, #114	; 0x72
   16854:	ldr	r0, [sp, #68]	; 0x44
   16858:	tst	r0, #1
   1685c:	mov	r0, r2
   16860:	bne	16ae4 <__mempcpy_chk@plt+0x5420>
   16864:	b	17048 <__mempcpy_chk@plt+0x5984>
   16868:	ldr	r0, [sp, #84]	; 0x54
   1686c:	tst	r0, #1
   16870:	beq	16b00 <__mempcpy_chk@plt+0x543c>
   16874:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16878:	tst	r0, #1
   1687c:	bne	17134 <__mempcpy_chk@plt+0x5a70>
   16880:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16884:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16888:	subs	r0, r0, #2
   1688c:	movwne	r0, #1
   16890:	orr	r0, r0, r1
   16894:	tst	r0, #1
   16898:	bne	168d4 <__mempcpy_chk@plt+0x5210>
   1689c:	cmp	r8, r4
   168a0:	movcc	r0, #39	; 0x27
   168a4:	strbcc	r0, [r5, r8]
   168a8:	add	r0, r8, #1
   168ac:	cmp	r0, r4
   168b0:	movcc	r1, #36	; 0x24
   168b4:	strbcc	r1, [r5, r0]
   168b8:	add	r0, r8, #2
   168bc:	add	r8, r8, #3
   168c0:	cmp	r0, r4
   168c4:	movcc	r1, #39	; 0x27
   168c8:	strbcc	r1, [r5, r0]
   168cc:	mov	r0, #1
   168d0:	str	r0, [fp, #-56]	; 0xffffffc8
   168d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   168d8:	cmp	r8, r4
   168dc:	mov	r9, #0
   168e0:	mov	sl, #1
   168e4:	mov	r6, #48	; 0x30
   168e8:	movcc	r0, #92	; 0x5c
   168ec:	strbcc	r0, [r5, r8]
   168f0:	add	r0, r8, #1
   168f4:	cmp	r1, #2
   168f8:	beq	16cc8 <__mempcpy_chk@plt+0x5604>
   168fc:	add	r1, r7, #1
   16900:	cmp	r1, lr
   16904:	bcs	16cc8 <__mempcpy_chk@plt+0x5604>
   16908:	ldrb	r1, [ip, r1]
   1690c:	sub	r1, r1, #48	; 0x30
   16910:	uxtb	r1, r1
   16914:	cmp	r1, #9
   16918:	bhi	16cc8 <__mempcpy_chk@plt+0x5604>
   1691c:	cmp	r0, r4
   16920:	movcc	r1, #48	; 0x30
   16924:	strbcc	r1, [r5, r0]
   16928:	add	r0, r8, #2
   1692c:	add	r8, r8, #3
   16930:	cmp	r0, r4
   16934:	movcc	r1, #48	; 0x30
   16938:	strbcc	r1, [r5, r0]
   1693c:	b	166f0 <__mempcpy_chk@plt+0x502c>
   16940:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16944:	mov	sl, #0
   16948:	mov	r6, #63	; 0x3f
   1694c:	cmp	r0, #5
   16950:	beq	16cd0 <__mempcpy_chk@plt+0x560c>
   16954:	cmp	r0, #2
   16958:	bne	16d78 <__mempcpy_chk@plt+0x56b4>
   1695c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16960:	mov	r9, #0
   16964:	tst	r0, #1
   16968:	beq	166f0 <__mempcpy_chk@plt+0x502c>
   1696c:	b	17048 <__mempcpy_chk@plt+0x5984>
   16970:	mov	r0, #118	; 0x76
   16974:	b	16ae4 <__mempcpy_chk@plt+0x5420>
   16978:	mov	r0, #1
   1697c:	mov	r6, #39	; 0x27
   16980:	str	r0, [sp, #60]	; 0x3c
   16984:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16988:	cmp	r0, #2
   1698c:	bne	16b1c <__mempcpy_chk@plt+0x5458>
   16990:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16994:	tst	r0, #1
   16998:	bne	17048 <__mempcpy_chk@plt+0x5984>
   1699c:	ldr	r2, [sp, #56]	; 0x38
   169a0:	clz	r1, r4
   169a4:	mov	sl, #0
   169a8:	mov	r9, #1
   169ac:	lsr	r1, r1, #5
   169b0:	cmp	r2, #0
   169b4:	mov	r0, r2
   169b8:	movwne	r0, #1
   169bc:	orrs	r0, r0, r1
   169c0:	moveq	r2, r4
   169c4:	moveq	r4, r0
   169c8:	cmp	r8, r4
   169cc:	str	r2, [sp, #56]	; 0x38
   169d0:	movcc	r0, #39	; 0x27
   169d4:	strbcc	r0, [r5, r8]
   169d8:	add	r0, r8, #1
   169dc:	cmp	r0, r4
   169e0:	movcc	r1, #92	; 0x5c
   169e4:	strbcc	r1, [r5, r0]
   169e8:	add	r0, r8, #2
   169ec:	add	r8, r8, #3
   169f0:	cmp	r0, r4
   169f4:	movcc	r1, #39	; 0x27
   169f8:	strbcc	r1, [r5, r0]
   169fc:	mov	r0, #0
   16a00:	str	r0, [fp, #-56]	; 0xffffffc8
   16a04:	b	166f0 <__mempcpy_chk@plt+0x502c>
   16a08:	ldr	r0, [sp, #40]	; 0x28
   16a0c:	str	r4, [sp, #88]	; 0x58
   16a10:	cmp	r0, #1
   16a14:	bne	16b24 <__mempcpy_chk@plt+0x5460>
   16a18:	str	lr, [sp, #28]
   16a1c:	bl	11508 <__ctype_b_loc@plt>
   16a20:	ldr	r0, [r0]
   16a24:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16a28:	mov	r2, #1
   16a2c:	add	r0, r0, r6, lsl #1
   16a30:	ldrb	r0, [r0, #1]
   16a34:	ubfx	r9, r0, #6, #1
   16a38:	ldr	r0, [sp, #52]	; 0x34
   16a3c:	cmp	r2, #1
   16a40:	orr	r0, r9, r0
   16a44:	bhi	16d80 <__mempcpy_chk@plt+0x56bc>
   16a48:	tst	r0, #1
   16a4c:	beq	16d80 <__mempcpy_chk@plt+0x56bc>
   16a50:	ldr	lr, [sp, #28]
   16a54:	ldr	r4, [sp, #88]	; 0x58
   16a58:	b	166f0 <__mempcpy_chk@plt+0x502c>
   16a5c:	ldr	r1, [sp, #48]	; 0x30
   16a60:	mov	sl, #0
   16a64:	mov	r0, #92	; 0x5c
   16a68:	cmp	r1, #0
   16a6c:	beq	16ae4 <__mempcpy_chk@plt+0x5420>
   16a70:	mov	r6, #92	; 0x5c
   16a74:	mov	r9, #0
   16a78:	cmp	sl, #0
   16a7c:	bne	16ab4 <__mempcpy_chk@plt+0x53f0>
   16a80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16a84:	tst	r0, #1
   16a88:	beq	16ab4 <__mempcpy_chk@plt+0x53f0>
   16a8c:	cmp	r8, r4
   16a90:	movcc	r0, #39	; 0x27
   16a94:	strbcc	r0, [r5, r8]
   16a98:	add	r0, r8, #1
   16a9c:	add	r8, r8, #2
   16aa0:	cmp	r0, r4
   16aa4:	movcc	r1, #39	; 0x27
   16aa8:	strbcc	r1, [r5, r0]
   16aac:	mov	r0, #0
   16ab0:	str	r0, [fp, #-56]	; 0xffffffc8
   16ab4:	mov	r1, r9
   16ab8:	mov	r0, r6
   16abc:	cmp	r8, r4
   16ac0:	strbcc	r0, [r5, r8]
   16ac4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16ac8:	add	r8, r8, #1
   16acc:	and	r0, r0, r1
   16ad0:	str	r0, [fp, #-48]	; 0xffffffd0
   16ad4:	add	r7, r7, #1
   16ad8:	cmn	lr, #1
   16adc:	bne	1641c <__mempcpy_chk@plt+0x4d58>
   16ae0:	b	16428 <__mempcpy_chk@plt+0x4d64>
   16ae4:	ldr	r1, [sp, #84]	; 0x54
   16ae8:	mov	sl, #0
   16aec:	mov	r9, #0
   16af0:	tst	r1, #1
   16af4:	mov	r1, #0
   16af8:	beq	166f0 <__mempcpy_chk@plt+0x502c>
   16afc:	b	16738 <__mempcpy_chk@plt+0x5074>
   16b00:	ldr	r0, [sp, #36]	; 0x24
   16b04:	mov	r6, #0
   16b08:	mov	sl, #0
   16b0c:	mov	r9, #0
   16b10:	cmp	r0, #0
   16b14:	beq	166f0 <__mempcpy_chk@plt+0x502c>
   16b18:	b	16ad4 <__mempcpy_chk@plt+0x5410>
   16b1c:	mov	r9, #1
   16b20:	b	166f0 <__mempcpy_chk@plt+0x502c>
   16b24:	mov	r0, #0
   16b28:	cmn	lr, #1
   16b2c:	sub	r4, fp, #40	; 0x28
   16b30:	str	r0, [fp, #-36]	; 0xffffffdc
   16b34:	str	r0, [fp, #-40]	; 0xffffffd8
   16b38:	bne	16b4c <__mempcpy_chk@plt+0x5488>
   16b3c:	mov	r0, ip
   16b40:	bl	11538 <strlen@plt>
   16b44:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16b48:	mov	lr, r0
   16b4c:	ldr	r0, [sp, #72]	; 0x48
   16b50:	mov	r9, #1
   16b54:	mov	r2, #0
   16b58:	str	lr, [sp, #28]
   16b5c:	add	r0, r0, r7
   16b60:	str	r0, [sp, #20]
   16b64:	b	16ba8 <__mempcpy_chk@plt+0x54e4>
   16b68:	ldr	r5, [sp, #44]	; 0x2c
   16b6c:	add	r5, r0, r5
   16b70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16b74:	bl	11448 <iswprint@plt>
   16b78:	cmp	r0, #0
   16b7c:	sub	r4, fp, #40	; 0x28
   16b80:	movwne	r0, #1
   16b84:	and	r9, r9, r0
   16b88:	mov	r0, r4
   16b8c:	bl	113f4 <mbsinit@plt>
   16b90:	mov	r2, r5
   16b94:	ldr	lr, [sp, #28]
   16b98:	ldr	r5, [fp, #-84]	; 0xffffffac
   16b9c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16ba0:	cmp	r0, #0
   16ba4:	bne	16a38 <__mempcpy_chk@plt+0x5374>
   16ba8:	add	r0, r2, r7
   16bac:	str	r2, [sp, #44]	; 0x2c
   16bb0:	mov	r3, r4
   16bb4:	add	r1, ip, r0
   16bb8:	str	r0, [sp, #24]
   16bbc:	sub	r2, lr, r0
   16bc0:	sub	r0, fp, #44	; 0x2c
   16bc4:	bl	19a58 <__mempcpy_chk@plt+0x8394>
   16bc8:	cmp	r0, #0
   16bcc:	beq	16f70 <__mempcpy_chk@plt+0x58ac>
   16bd0:	cmn	r0, #1
   16bd4:	beq	16f2c <__mempcpy_chk@plt+0x5868>
   16bd8:	ldr	lr, [sp, #28]
   16bdc:	cmn	r0, #2
   16be0:	beq	16f34 <__mempcpy_chk@plt+0x5870>
   16be4:	ldr	r2, [sp, #64]	; 0x40
   16be8:	ldr	r4, [sp, #88]	; 0x58
   16bec:	ldr	ip, [sp, #84]	; 0x54
   16bf0:	cmp	r0, #2
   16bf4:	mov	r1, #0
   16bf8:	movwcc	r1, #1
   16bfc:	eor	r2, r2, #1
   16c00:	orrs	r1, r2, r1
   16c04:	bne	16b68 <__mempcpy_chk@plt+0x54a4>
   16c08:	ldr	r1, [sp, #44]	; 0x2c
   16c0c:	ldr	r2, [sp, #20]
   16c10:	add	r1, r2, r1
   16c14:	sub	r2, r0, #1
   16c18:	b	16c28 <__mempcpy_chk@plt+0x5564>
   16c1c:	add	r1, r1, #1
   16c20:	subs	r2, r2, #1
   16c24:	beq	16b68 <__mempcpy_chk@plt+0x54a4>
   16c28:	ldrb	r3, [r1]
   16c2c:	sub	r3, r3, #91	; 0x5b
   16c30:	cmp	r3, #33	; 0x21
   16c34:	bhi	16c1c <__mempcpy_chk@plt+0x5558>
   16c38:	add	r5, pc, #0
   16c3c:	ldr	pc, [r5, r3, lsl #2]
   16c40:	andeq	r7, r1, r4, lsr #32
   16c44:	andeq	r7, r1, r4, lsr #32
   16c48:	andeq	r6, r1, ip, lsl ip
   16c4c:	andeq	r7, r1, r4, lsr #32
   16c50:	andeq	r6, r1, ip, lsl ip
   16c54:	andeq	r7, r1, r4, lsr #32
   16c58:	andeq	r6, r1, ip, lsl ip
   16c5c:	andeq	r6, r1, ip, lsl ip
   16c60:	andeq	r6, r1, ip, lsl ip
   16c64:	andeq	r6, r1, ip, lsl ip
   16c68:	andeq	r6, r1, ip, lsl ip
   16c6c:	andeq	r6, r1, ip, lsl ip
   16c70:	andeq	r6, r1, ip, lsl ip
   16c74:	andeq	r6, r1, ip, lsl ip
   16c78:	andeq	r6, r1, ip, lsl ip
   16c7c:	andeq	r6, r1, ip, lsl ip
   16c80:	andeq	r6, r1, ip, lsl ip
   16c84:	andeq	r6, r1, ip, lsl ip
   16c88:	andeq	r6, r1, ip, lsl ip
   16c8c:	andeq	r6, r1, ip, lsl ip
   16c90:	andeq	r6, r1, ip, lsl ip
   16c94:	andeq	r6, r1, ip, lsl ip
   16c98:	andeq	r6, r1, ip, lsl ip
   16c9c:	andeq	r6, r1, ip, lsl ip
   16ca0:	andeq	r6, r1, ip, lsl ip
   16ca4:	andeq	r6, r1, ip, lsl ip
   16ca8:	andeq	r6, r1, ip, lsl ip
   16cac:	andeq	r6, r1, ip, lsl ip
   16cb0:	andeq	r6, r1, ip, lsl ip
   16cb4:	andeq	r6, r1, ip, lsl ip
   16cb8:	andeq	r6, r1, ip, lsl ip
   16cbc:	andeq	r6, r1, ip, lsl ip
   16cc0:	andeq	r6, r1, ip, lsl ip
   16cc4:	andeq	r7, r1, r4, lsr #32
   16cc8:	mov	r8, r0
   16ccc:	b	166f0 <__mempcpy_chk@plt+0x502c>
   16cd0:	ldr	r0, [sp, #32]
   16cd4:	cmp	r0, #0
   16cd8:	beq	16d78 <__mempcpy_chk@plt+0x56b4>
   16cdc:	add	r0, r7, #2
   16ce0:	cmp	r0, lr
   16ce4:	bcs	16d78 <__mempcpy_chk@plt+0x56b4>
   16ce8:	add	r1, r7, ip
   16cec:	ldrb	r1, [r1, #1]
   16cf0:	cmp	r1, #63	; 0x3f
   16cf4:	bne	16d78 <__mempcpy_chk@plt+0x56b4>
   16cf8:	ldrb	r9, [ip, r0]
   16cfc:	sub	r2, r9, #33	; 0x21
   16d00:	cmp	r2, #29
   16d04:	bhi	16d78 <__mempcpy_chk@plt+0x56b4>
   16d08:	movw	r1, #20929	; 0x51c1
   16d0c:	mov	r3, #1
   16d10:	movt	r1, #14336	; 0x3800
   16d14:	tst	r1, r3, lsl r2
   16d18:	beq	16d78 <__mempcpy_chk@plt+0x56b4>
   16d1c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16d20:	tst	r1, #1
   16d24:	bne	17048 <__mempcpy_chk@plt+0x5984>
   16d28:	cmp	r8, r4
   16d2c:	add	r2, r8, #1
   16d30:	mov	r6, r9
   16d34:	mov	r7, r0
   16d38:	mov	r9, #0
   16d3c:	movcc	r1, #63	; 0x3f
   16d40:	strbcc	r1, [r5, r8]
   16d44:	cmp	r2, r4
   16d48:	movcc	r1, #34	; 0x22
   16d4c:	strbcc	r1, [r5, r2]
   16d50:	add	r2, r8, #2
   16d54:	cmp	r2, r4
   16d58:	movcc	r1, #34	; 0x22
   16d5c:	strbcc	r1, [r5, r2]
   16d60:	add	r2, r8, #3
   16d64:	add	r8, r8, #4
   16d68:	cmp	r2, r4
   16d6c:	movcc	r1, #63	; 0x3f
   16d70:	strbcc	r1, [r5, r2]
   16d74:	b	166f0 <__mempcpy_chk@plt+0x502c>
   16d78:	mov	r9, #0
   16d7c:	b	166f0 <__mempcpy_chk@plt+0x502c>
   16d80:	ldr	lr, [sp, #28]
   16d84:	ldr	r4, [fp, #-56]	; 0xffffffc8
   16d88:	add	r1, r2, r7
   16d8c:	mov	r2, #0
   16d90:	str	r1, [sp, #44]	; 0x2c
   16d94:	tst	r0, #1
   16d98:	bne	16eb4 <__mempcpy_chk@plt+0x57f0>
   16d9c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16da0:	tst	r1, #1
   16da4:	bne	17044 <__mempcpy_chk@plt+0x5980>
   16da8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16dac:	subs	r2, r1, #2
   16db0:	movwne	r2, #1
   16db4:	orr	r2, r2, r4
   16db8:	tst	r2, #1
   16dbc:	bne	16e00 <__mempcpy_chk@plt+0x573c>
   16dc0:	ldr	r1, [sp, #88]	; 0x58
   16dc4:	add	r2, r8, #1
   16dc8:	mov	r4, #1
   16dcc:	cmp	r8, r1
   16dd0:	movcc	r1, #39	; 0x27
   16dd4:	strbcc	r1, [r5, r8]
   16dd8:	ldr	r1, [sp, #88]	; 0x58
   16ddc:	cmp	r2, r1
   16de0:	movcc	r1, #36	; 0x24
   16de4:	strbcc	r1, [r5, r2]
   16de8:	ldr	r1, [sp, #88]	; 0x58
   16dec:	add	r2, r8, #2
   16df0:	add	r8, r8, #3
   16df4:	cmp	r2, r1
   16df8:	movcc	r1, #39	; 0x27
   16dfc:	strbcc	r1, [r5, r2]
   16e00:	ldr	r1, [sp, #88]	; 0x58
   16e04:	add	r2, r8, #1
   16e08:	cmp	r8, r1
   16e0c:	movcc	r1, #92	; 0x5c
   16e10:	strbcc	r1, [r5, r8]
   16e14:	ldr	r1, [sp, #88]	; 0x58
   16e18:	cmp	r2, r1
   16e1c:	bcs	16e30 <__mempcpy_chk@plt+0x576c>
   16e20:	uxtb	r3, r6
   16e24:	mov	r1, #48	; 0x30
   16e28:	orr	r3, r1, r3, lsr #6
   16e2c:	strb	r3, [r5, r2]
   16e30:	ldr	r1, [sp, #88]	; 0x58
   16e34:	add	r2, r8, #2
   16e38:	add	r8, r8, #3
   16e3c:	cmp	r2, r1
   16e40:	lsrcc	r3, r6, #3
   16e44:	movcc	r1, #6
   16e48:	bficc	r3, r1, #3, #29
   16e4c:	mov	r1, #6
   16e50:	bfi	r6, r1, #3, #29
   16e54:	strbcc	r3, [r5, r2]
   16e58:	mov	r2, #1
   16e5c:	b	16edc <__mempcpy_chk@plt+0x5818>
   16e60:	ldr	r1, [sp, #88]	; 0x58
   16e64:	ldr	r5, [fp, #-84]	; 0xffffffac
   16e68:	ldr	r4, [sp, #88]	; 0x58
   16e6c:	cmp	r8, r1
   16e70:	movcc	r1, #39	; 0x27
   16e74:	strbcc	r1, [r5, r8]
   16e78:	add	r1, r8, #1
   16e7c:	add	r8, r8, #2
   16e80:	cmp	r1, r4
   16e84:	movcc	r4, #39	; 0x27
   16e88:	strbcc	r4, [r5, r1]
   16e8c:	mov	r4, #0
   16e90:	ldr	r1, [sp, #88]	; 0x58
   16e94:	cmp	r8, r1
   16e98:	ldr	r1, [sp, #72]	; 0x48
   16e9c:	strbcc	r6, [r5, r8]
   16ea0:	add	r8, r8, #1
   16ea4:	ldrb	r6, [r1, r7]
   16ea8:	mov	r7, r3
   16eac:	tst	r0, #1
   16eb0:	beq	16d9c <__mempcpy_chk@plt+0x56d8>
   16eb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16eb8:	tst	r1, #1
   16ebc:	beq	16ed4 <__mempcpy_chk@plt+0x5810>
   16ec0:	ldr	r1, [sp, #88]	; 0x58
   16ec4:	cmp	r8, r1
   16ec8:	movcc	r1, #92	; 0x5c
   16ecc:	strbcc	r1, [r5, r8]
   16ed0:	add	r8, r8, #1
   16ed4:	mov	r1, #0
   16ed8:	str	r1, [fp, #-52]	; 0xffffffcc
   16edc:	ldr	r1, [sp, #44]	; 0x2c
   16ee0:	add	r3, r7, #1
   16ee4:	and	sl, r2, #1
   16ee8:	cmp	r1, r3
   16eec:	bls	16f10 <__mempcpy_chk@plt+0x584c>
   16ef0:	cmp	sl, #0
   16ef4:	mvn	r5, r4
   16ef8:	movwne	sl, #1
   16efc:	orr	r5, r5, sl
   16f00:	tst	r5, #1
   16f04:	beq	16e60 <__mempcpy_chk@plt+0x579c>
   16f08:	ldr	r5, [fp, #-84]	; 0xffffffac
   16f0c:	b	16e90 <__mempcpy_chk@plt+0x57cc>
   16f10:	str	r4, [fp, #-56]	; 0xffffffc8
   16f14:	ldr	r4, [sp, #88]	; 0x58
   16f18:	cmp	sl, #0
   16f1c:	movwne	sl, #1
   16f20:	cmp	sl, #0
   16f24:	beq	16a80 <__mempcpy_chk@plt+0x53bc>
   16f28:	b	16ab4 <__mempcpy_chk@plt+0x53f0>
   16f2c:	mov	r9, #0
   16f30:	b	16f70 <__mempcpy_chk@plt+0x58ac>
   16f34:	ldr	r0, [sp, #24]
   16f38:	mov	r9, #0
   16f3c:	cmp	lr, r0
   16f40:	bls	16f70 <__mempcpy_chk@plt+0x58ac>
   16f44:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16f48:	ldr	r2, [sp, #44]	; 0x2c
   16f4c:	add	r0, ip, r7
   16f50:	ldrb	r1, [r0, r2]
   16f54:	cmp	r1, #0
   16f58:	beq	16a38 <__mempcpy_chk@plt+0x5374>
   16f5c:	add	r2, r2, #1
   16f60:	add	r1, r7, r2
   16f64:	cmp	r1, lr
   16f68:	bcc	16f50 <__mempcpy_chk@plt+0x588c>
   16f6c:	b	16a38 <__mempcpy_chk@plt+0x5374>
   16f70:	ldr	ip, [fp, #-80]	; 0xffffffb0
   16f74:	ldr	r2, [sp, #44]	; 0x2c
   16f78:	b	16a38 <__mempcpy_chk@plt+0x5374>
   16f7c:	mov	lr, r7
   16f80:	b	16f88 <__mempcpy_chk@plt+0x58c4>
   16f84:	mvn	lr, #0
   16f88:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16f8c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16f90:	eor	r0, r1, #2
   16f94:	orr	r0, r0, r8
   16f98:	clz	r0, r0
   16f9c:	lsr	r0, r0, #5
   16fa0:	tst	r2, r0
   16fa4:	bne	17048 <__mempcpy_chk@plt+0x5984>
   16fa8:	subs	r0, r1, #2
   16fac:	movwne	r0, #1
   16fb0:	orr	r0, r2, r0
   16fb4:	tst	r0, #1
   16fb8:	ldreq	r0, [sp, #60]	; 0x3c
   16fbc:	eoreq	r0, r0, #1
   16fc0:	tsteq	r0, #1
   16fc4:	bne	170dc <__mempcpy_chk@plt+0x5a18>
   16fc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16fcc:	mov	sl, lr
   16fd0:	tst	r0, #1
   16fd4:	bne	170a8 <__mempcpy_chk@plt+0x59e4>
   16fd8:	ldr	r6, [sp, #56]	; 0x38
   16fdc:	mov	r9, #0
   16fe0:	cmp	r6, #0
   16fe4:	beq	170d4 <__mempcpy_chk@plt+0x5a10>
   16fe8:	ldr	r0, [sp, #84]	; 0x54
   16fec:	mov	r1, #0
   16ff0:	mov	r7, #2
   16ff4:	cmp	r4, #0
   16ff8:	str	r1, [fp, #-48]	; 0xffffffd0
   16ffc:	mov	r1, #0
   17000:	str	r1, [fp, #-76]	; 0xffffffb4
   17004:	beq	161a4 <__mempcpy_chk@plt+0x4ae0>
   17008:	b	170dc <__mempcpy_chk@plt+0x5a18>
   1700c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   17010:	ldr	r1, [fp, #12]
   17014:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17018:	mov	lr, r4
   1701c:	mov	r4, r6
   17020:	b	17068 <__mempcpy_chk@plt+0x59a4>
   17024:	tst	ip, #1
   17028:	ldr	r5, [fp, #-84]	; 0xffffffac
   1702c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   17030:	ldr	r1, [fp, #12]
   17034:	mov	r0, #2
   17038:	movwne	r0, #4
   1703c:	mov	r2, r0
   17040:	b	17068 <__mempcpy_chk@plt+0x59a4>
   17044:	ldr	r4, [sp, #88]	; 0x58
   17048:	ldr	r1, [sp, #84]	; 0x54
   1704c:	mov	r0, #2
   17050:	tst	r1, #1
   17054:	movwne	r0, #4
   17058:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1705c:	ldr	r1, [fp, #12]
   17060:	cmp	r2, #2
   17064:	moveq	r2, r0
   17068:	mov	r0, #0
   1706c:	bic	r1, r1, #2
   17070:	str	r2, [sp]
   17074:	mov	r2, ip
   17078:	mov	r3, lr
   1707c:	str	r0, [sp, #8]
   17080:	ldr	r0, [sp, #76]	; 0x4c
   17084:	str	r1, [sp, #4]
   17088:	mov	r1, r4
   1708c:	str	r0, [sp, #12]
   17090:	ldr	r0, [sp, #80]	; 0x50
   17094:	str	r0, [sp, #16]
   17098:	mov	r0, r5
   1709c:	bl	16114 <__mempcpy_chk@plt+0x4a50>
   170a0:	mov	r8, r0
   170a4:	b	17128 <__mempcpy_chk@plt+0x5a64>
   170a8:	mov	r0, #5
   170ac:	ldr	r1, [sp, #56]	; 0x38
   170b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   170b4:	mov	r3, sl
   170b8:	str	r0, [sp]
   170bc:	ldr	r0, [fp, #12]
   170c0:	str	r0, [sp, #4]
   170c4:	ldr	r0, [fp, #16]
   170c8:	str	r0, [sp, #8]
   170cc:	ldr	r0, [sp, #76]	; 0x4c
   170d0:	b	1708c <__mempcpy_chk@plt+0x59c8>
   170d4:	mov	r0, #0
   170d8:	str	r0, [fp, #-76]	; 0xffffffb4
   170dc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   170e0:	cmp	r1, #0
   170e4:	beq	1711c <__mempcpy_chk@plt+0x5a58>
   170e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   170ec:	tst	r0, #1
   170f0:	bne	1711c <__mempcpy_chk@plt+0x5a58>
   170f4:	ldrb	r0, [r1]
   170f8:	cmp	r0, #0
   170fc:	beq	1711c <__mempcpy_chk@plt+0x5a58>
   17100:	add	r1, r1, #1
   17104:	cmp	r8, r4
   17108:	strbcc	r0, [r5, r8]
   1710c:	add	r8, r8, #1
   17110:	ldrb	r0, [r1], #1
   17114:	cmp	r0, #0
   17118:	bne	17104 <__mempcpy_chk@plt+0x5a40>
   1711c:	cmp	r8, r4
   17120:	movcc	r0, #0
   17124:	strbcc	r0, [r5, r8]
   17128:	mov	r0, r8
   1712c:	sub	sp, fp, #28
   17130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17134:	mov	r0, #4
   17138:	b	17058 <__mempcpy_chk@plt+0x5994>
   1713c:	bl	11688 <abort@plt>
   17140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17144:	add	fp, sp, #28
   17148:	sub	sp, sp, #28
   1714c:	movw	r5, #49640	; 0xc1e8
   17150:	cmp	r2, #0
   17154:	mov	r4, r1
   17158:	mov	r7, r0
   1715c:	str	r0, [sp, #20]
   17160:	movt	r5, #2
   17164:	movne	r5, r2
   17168:	bl	11550 <__errno_location@plt>
   1716c:	mov	sl, r0
   17170:	ldr	r2, [r5, #40]	; 0x28
   17174:	ldr	r3, [r5, #44]	; 0x2c
   17178:	ldm	r5, {r0, r1}
   1717c:	orr	r8, r1, #1
   17180:	add	r9, r5, #8
   17184:	mov	r1, #0
   17188:	ldr	r6, [sl]
   1718c:	stm	sp, {r0, r8, r9}
   17190:	mov	r0, #0
   17194:	str	r2, [sp, #12]
   17198:	str	r3, [sp, #16]
   1719c:	mov	r2, r7
   171a0:	mov	r3, r4
   171a4:	str	r6, [sp, #24]
   171a8:	mov	r6, r4
   171ac:	bl	16114 <__mempcpy_chk@plt+0x4a50>
   171b0:	add	r7, r0, #1
   171b4:	mov	r0, r7
   171b8:	bl	18c94 <__mempcpy_chk@plt+0x75d0>
   171bc:	mov	r4, r0
   171c0:	ldr	r0, [r5]
   171c4:	ldr	r2, [r5, #44]	; 0x2c
   171c8:	ldr	r1, [r5, #40]	; 0x28
   171cc:	mov	r3, r6
   171d0:	stm	sp, {r0, r8, r9}
   171d4:	str	r2, [sp, #16]
   171d8:	ldr	r2, [sp, #20]
   171dc:	str	r1, [sp, #12]
   171e0:	mov	r0, r4
   171e4:	mov	r1, r7
   171e8:	bl	16114 <__mempcpy_chk@plt+0x4a50>
   171ec:	ldr	r0, [sp, #24]
   171f0:	str	r0, [sl]
   171f4:	mov	r0, r4
   171f8:	sub	sp, fp, #28
   171fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17204:	add	fp, sp, #28
   17208:	sub	sp, sp, #36	; 0x24
   1720c:	movw	r8, #49640	; 0xc1e8
   17210:	cmp	r3, #0
   17214:	mov	r4, r2
   17218:	str	r2, [sp, #24]
   1721c:	mov	r5, r1
   17220:	mov	r6, r0
   17224:	str	r0, [sp, #20]
   17228:	movt	r8, #2
   1722c:	movne	r8, r3
   17230:	bl	11550 <__errno_location@plt>
   17234:	str	r0, [sp, #28]
   17238:	ldr	r1, [r8, #40]	; 0x28
   1723c:	ldr	r2, [r8, #44]	; 0x2c
   17240:	ldr	r7, [r0]
   17244:	cmp	r4, #0
   17248:	add	sl, r8, #8
   1724c:	mov	r0, #0
   17250:	ldm	r8, {r3, r9}
   17254:	orreq	r9, r9, #1
   17258:	stm	sp, {r3, r9, sl}
   1725c:	str	r1, [sp, #12]
   17260:	str	r2, [sp, #16]
   17264:	mov	r1, #0
   17268:	mov	r2, r6
   1726c:	mov	r3, r5
   17270:	str	r7, [sp, #32]
   17274:	mov	r7, r5
   17278:	bl	16114 <__mempcpy_chk@plt+0x4a50>
   1727c:	add	r4, r0, #1
   17280:	mov	r5, r0
   17284:	mov	r0, r4
   17288:	bl	18c94 <__mempcpy_chk@plt+0x75d0>
   1728c:	mov	r6, r0
   17290:	ldr	r0, [r8]
   17294:	ldr	r2, [r8, #44]	; 0x2c
   17298:	ldr	r1, [r8, #40]	; 0x28
   1729c:	mov	r3, r7
   172a0:	stm	sp, {r0, r9, sl}
   172a4:	str	r2, [sp, #16]
   172a8:	ldr	r2, [sp, #20]
   172ac:	str	r1, [sp, #12]
   172b0:	mov	r0, r6
   172b4:	mov	r1, r4
   172b8:	bl	16114 <__mempcpy_chk@plt+0x4a50>
   172bc:	ldr	r0, [sp, #24]
   172c0:	ldr	r1, [sp, #32]
   172c4:	ldr	r2, [sp, #28]
   172c8:	cmp	r0, #0
   172cc:	str	r1, [r2]
   172d0:	strne	r5, [r0]
   172d4:	mov	r0, r6
   172d8:	sub	sp, fp, #28
   172dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   172e4:	add	fp, sp, #24
   172e8:	movw	r5, #49492	; 0xc154
   172ec:	movw	r8, #49488	; 0xc150
   172f0:	movt	r5, #2
   172f4:	movt	r8, #2
   172f8:	ldr	r0, [r5]
   172fc:	ldr	r4, [r8]
   17300:	cmp	r0, #2
   17304:	blt	17330 <__mempcpy_chk@plt+0x5c6c>
   17308:	add	r7, r4, #12
   1730c:	mov	r6, #0
   17310:	ldr	r0, [r7, r6, lsl #3]
   17314:	bl	14948 <__mempcpy_chk@plt+0x3284>
   17318:	ldr	r1, [r5]
   1731c:	add	r2, r6, #2
   17320:	add	r0, r6, #1
   17324:	mov	r6, r0
   17328:	cmp	r2, r1
   1732c:	blt	17310 <__mempcpy_chk@plt+0x5c4c>
   17330:	ldr	r0, [r4, #4]
   17334:	movw	r9, #49688	; 0xc218
   17338:	movw	r7, #49496	; 0xc158
   1733c:	movt	r9, #2
   17340:	movt	r7, #2
   17344:	cmp	r0, r9
   17348:	beq	17358 <__mempcpy_chk@plt+0x5c94>
   1734c:	bl	14948 <__mempcpy_chk@plt+0x3284>
   17350:	mov	r0, #256	; 0x100
   17354:	stm	r7, {r0, r9}
   17358:	cmp	r4, r7
   1735c:	beq	1736c <__mempcpy_chk@plt+0x5ca8>
   17360:	mov	r0, r4
   17364:	bl	14948 <__mempcpy_chk@plt+0x3284>
   17368:	str	r7, [r8]
   1736c:	mov	r0, #1
   17370:	str	r0, [r5]
   17374:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17378:	movw	r3, #49640	; 0xc1e8
   1737c:	mvn	r2, #0
   17380:	movt	r3, #2
   17384:	b	17388 <__mempcpy_chk@plt+0x5cc4>
   17388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1738c:	add	fp, sp, #28
   17390:	sub	sp, sp, #44	; 0x2c
   17394:	mov	r7, r3
   17398:	str	r2, [sp, #36]	; 0x24
   1739c:	str	r1, [sp, #32]
   173a0:	mov	r5, r0
   173a4:	bl	11550 <__errno_location@plt>
   173a8:	cmp	r5, #0
   173ac:	bmi	1751c <__mempcpy_chk@plt+0x5e58>
   173b0:	cmn	r5, #-2147483647	; 0x80000001
   173b4:	beq	1751c <__mempcpy_chk@plt+0x5e58>
   173b8:	movw	r8, #49492	; 0xc154
   173bc:	movw	r4, #49488	; 0xc150
   173c0:	str	r0, [sp, #28]
   173c4:	ldr	r0, [r0]
   173c8:	movt	r8, #2
   173cc:	movt	r4, #2
   173d0:	ldr	r1, [r8]
   173d4:	ldr	r6, [r4]
   173d8:	str	r0, [sp, #24]
   173dc:	cmp	r1, r5
   173e0:	ble	173ec <__mempcpy_chk@plt+0x5d28>
   173e4:	mov	sl, r6
   173e8:	b	17458 <__mempcpy_chk@plt+0x5d94>
   173ec:	movw	r9, #49496	; 0xc158
   173f0:	mov	r0, #8
   173f4:	str	r1, [fp, #-32]	; 0xffffffe0
   173f8:	sub	r1, r5, r1
   173fc:	mvn	r3, #-2147483648	; 0x80000000
   17400:	movt	r9, #2
   17404:	str	r0, [sp]
   17408:	add	r2, r1, #1
   1740c:	sub	r1, fp, #32
   17410:	subs	r0, r6, r9
   17414:	movne	r0, r6
   17418:	bl	18e94 <__mempcpy_chk@plt+0x77d0>
   1741c:	mov	sl, r0
   17420:	cmp	r6, r9
   17424:	str	r0, [r4]
   17428:	bne	17434 <__mempcpy_chk@plt+0x5d70>
   1742c:	ldrd	r0, [r9]
   17430:	stm	sl, {r0, r1}
   17434:	ldr	r1, [r8]
   17438:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1743c:	add	r0, sl, r1, lsl #3
   17440:	sub	r1, r2, r1
   17444:	lsl	r2, r1, #3
   17448:	mov	r1, #0
   1744c:	bl	11574 <memset@plt>
   17450:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17454:	str	r0, [r8]
   17458:	mov	r9, sl
   1745c:	ldm	r7, {r0, r1}
   17460:	orr	r8, r1, #1
   17464:	add	r1, r7, #8
   17468:	ldr	r2, [r7, #40]	; 0x28
   1746c:	ldr	r3, [r7, #44]	; 0x2c
   17470:	ldr	r6, [r9, r5, lsl #3]!
   17474:	str	r1, [sp, #20]
   17478:	ldr	r4, [r9, #4]!
   1747c:	stm	sp, {r0, r8}
   17480:	add	r0, sp, #8
   17484:	stm	r0, {r1, r2, r3}
   17488:	ldr	r2, [sp, #32]
   1748c:	ldr	r3, [sp, #36]	; 0x24
   17490:	mov	r1, r6
   17494:	mov	r0, r4
   17498:	bl	16114 <__mempcpy_chk@plt+0x4a50>
   1749c:	cmp	r6, r0
   174a0:	bhi	17504 <__mempcpy_chk@plt+0x5e40>
   174a4:	add	r6, r0, #1
   174a8:	movw	r0, #49688	; 0xc218
   174ac:	movt	r0, #2
   174b0:	str	r6, [sl, r5, lsl #3]
   174b4:	cmp	r4, r0
   174b8:	beq	174c4 <__mempcpy_chk@plt+0x5e00>
   174bc:	mov	r0, r4
   174c0:	bl	14948 <__mempcpy_chk@plt+0x3284>
   174c4:	mov	r0, r6
   174c8:	bl	18c94 <__mempcpy_chk@plt+0x75d0>
   174cc:	str	r0, [r9]
   174d0:	mov	r4, r0
   174d4:	add	r3, sp, #8
   174d8:	ldr	r0, [r7]
   174dc:	ldr	r1, [r7, #40]	; 0x28
   174e0:	ldr	r2, [r7, #44]	; 0x2c
   174e4:	stm	sp, {r0, r8}
   174e8:	ldr	r0, [sp, #20]
   174ec:	stm	r3, {r0, r1, r2}
   174f0:	ldr	r2, [sp, #32]
   174f4:	ldr	r3, [sp, #36]	; 0x24
   174f8:	mov	r0, r4
   174fc:	mov	r1, r6
   17500:	bl	16114 <__mempcpy_chk@plt+0x4a50>
   17504:	ldr	r0, [sp, #28]
   17508:	ldr	r1, [sp, #24]
   1750c:	str	r1, [r0]
   17510:	mov	r0, r4
   17514:	sub	sp, fp, #28
   17518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1751c:	bl	11688 <abort@plt>
   17520:	movw	r3, #49640	; 0xc1e8
   17524:	movt	r3, #2
   17528:	b	17388 <__mempcpy_chk@plt+0x5cc4>
   1752c:	movw	r3, #49640	; 0xc1e8
   17530:	mov	r1, r0
   17534:	mov	r0, #0
   17538:	mvn	r2, #0
   1753c:	movt	r3, #2
   17540:	b	17388 <__mempcpy_chk@plt+0x5cc4>
   17544:	movw	r3, #49640	; 0xc1e8
   17548:	mov	r2, r1
   1754c:	mov	r1, r0
   17550:	mov	r0, #0
   17554:	movt	r3, #2
   17558:	b	17388 <__mempcpy_chk@plt+0x5cc4>
   1755c:	push	{fp, lr}
   17560:	mov	fp, sp
   17564:	sub	sp, sp, #48	; 0x30
   17568:	vmov.i32	q8, #0	; 0x00000000
   1756c:	mov	ip, #32
   17570:	mov	r3, sp
   17574:	mov	lr, r2
   17578:	cmp	r1, #10
   1757c:	add	r2, r3, #16
   17580:	vst1.64	{d16-d17}, [r3], ip
   17584:	vst1.64	{d16-d17}, [r2]
   17588:	vst1.64	{d16-d17}, [r3]
   1758c:	beq	175ac <__mempcpy_chk@plt+0x5ee8>
   17590:	str	r1, [sp]
   17594:	mov	r3, sp
   17598:	mov	r1, lr
   1759c:	mvn	r2, #0
   175a0:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   175a4:	mov	sp, fp
   175a8:	pop	{fp, pc}
   175ac:	bl	11688 <abort@plt>
   175b0:	push	{r4, sl, fp, lr}
   175b4:	add	fp, sp, #8
   175b8:	sub	sp, sp, #48	; 0x30
   175bc:	vmov.i32	q8, #0	; 0x00000000
   175c0:	mov	ip, r3
   175c4:	mov	r3, sp
   175c8:	mov	lr, #32
   175cc:	cmp	r1, #10
   175d0:	add	r4, r3, #16
   175d4:	vst1.64	{d16-d17}, [r3], lr
   175d8:	vst1.64	{d16-d17}, [r4]
   175dc:	vst1.64	{d16-d17}, [r3]
   175e0:	beq	17600 <__mempcpy_chk@plt+0x5f3c>
   175e4:	str	r1, [sp]
   175e8:	mov	r1, r2
   175ec:	mov	r3, sp
   175f0:	mov	r2, ip
   175f4:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   175f8:	sub	sp, fp, #8
   175fc:	pop	{r4, sl, fp, pc}
   17600:	bl	11688 <abort@plt>
   17604:	push	{fp, lr}
   17608:	mov	fp, sp
   1760c:	sub	sp, sp, #48	; 0x30
   17610:	vmov.i32	q8, #0	; 0x00000000
   17614:	mov	r3, sp
   17618:	mov	ip, #32
   1761c:	cmp	r0, #10
   17620:	add	r2, r3, #16
   17624:	vst1.64	{d16-d17}, [r3], ip
   17628:	vst1.64	{d16-d17}, [r2]
   1762c:	vst1.64	{d16-d17}, [r3]
   17630:	beq	17650 <__mempcpy_chk@plt+0x5f8c>
   17634:	str	r0, [sp]
   17638:	mov	r3, sp
   1763c:	mov	r0, #0
   17640:	mvn	r2, #0
   17644:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   17648:	mov	sp, fp
   1764c:	pop	{fp, pc}
   17650:	bl	11688 <abort@plt>
   17654:	push	{fp, lr}
   17658:	mov	fp, sp
   1765c:	sub	sp, sp, #48	; 0x30
   17660:	vmov.i32	q8, #0	; 0x00000000
   17664:	mov	r3, sp
   17668:	mov	ip, #32
   1766c:	cmp	r0, #10
   17670:	add	lr, r3, #16
   17674:	vst1.64	{d16-d17}, [r3], ip
   17678:	vst1.64	{d16-d17}, [lr]
   1767c:	vst1.64	{d16-d17}, [r3]
   17680:	beq	1769c <__mempcpy_chk@plt+0x5fd8>
   17684:	str	r0, [sp]
   17688:	mov	r3, sp
   1768c:	mov	r0, #0
   17690:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   17694:	mov	sp, fp
   17698:	pop	{fp, pc}
   1769c:	bl	11688 <abort@plt>
   176a0:	push	{r4, sl, fp, lr}
   176a4:	add	fp, sp, #8
   176a8:	sub	sp, sp, #48	; 0x30
   176ac:	mov	lr, r0
   176b0:	movw	r0, #49640	; 0xc1e8
   176b4:	mov	ip, r1
   176b8:	mov	r1, #32
   176bc:	mov	r4, #1
   176c0:	movt	r0, #2
   176c4:	add	r3, r0, #16
   176c8:	vld1.64	{d16-d17}, [r0], r1
   176cc:	vld1.64	{d20-d21}, [r0]
   176d0:	vld1.64	{d18-d19}, [r3]
   176d4:	mov	r3, sp
   176d8:	add	r0, r3, #32
   176dc:	add	r1, r3, #16
   176e0:	vst1.64	{d20-d21}, [r0]
   176e4:	mov	r0, #28
   176e8:	vst1.64	{d18-d19}, [r1]
   176ec:	mov	r1, r3
   176f0:	and	r0, r0, r2, lsr #3
   176f4:	and	r2, r2, #31
   176f8:	vst1.64	{d16-d17}, [r1], r0
   176fc:	ldr	r0, [r1, #8]
   17700:	bic	r4, r4, r0, lsr r2
   17704:	eor	r0, r0, r4, lsl r2
   17708:	mov	r2, ip
   1770c:	str	r0, [r1, #8]
   17710:	mov	r0, #0
   17714:	mov	r1, lr
   17718:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   1771c:	sub	sp, fp, #8
   17720:	pop	{r4, sl, fp, pc}
   17724:	push	{fp, lr}
   17728:	mov	fp, sp
   1772c:	sub	sp, sp, #48	; 0x30
   17730:	mov	ip, r0
   17734:	movw	r0, #49640	; 0xc1e8
   17738:	mov	r2, #32
   1773c:	movt	r0, #2
   17740:	add	r3, r0, #16
   17744:	vld1.64	{d16-d17}, [r0], r2
   17748:	vld1.64	{d20-d21}, [r0]
   1774c:	vld1.64	{d18-d19}, [r3]
   17750:	mov	r3, sp
   17754:	add	r0, r3, #32
   17758:	add	r2, r3, #16
   1775c:	vst1.64	{d20-d21}, [r0]
   17760:	mov	r0, #28
   17764:	vst1.64	{d18-d19}, [r2]
   17768:	mov	r2, r3
   1776c:	and	r0, r0, r1, lsr #3
   17770:	and	r1, r1, #31
   17774:	vst1.64	{d16-d17}, [r2], r0
   17778:	mov	r0, #1
   1777c:	ldr	lr, [r2, #8]
   17780:	bic	r0, r0, lr, lsr r1
   17784:	eor	r0, lr, r0, lsl r1
   17788:	mov	r1, ip
   1778c:	str	r0, [r2, #8]
   17790:	mov	r0, #0
   17794:	mvn	r2, #0
   17798:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   1779c:	mov	sp, fp
   177a0:	pop	{fp, pc}
   177a4:	push	{fp, lr}
   177a8:	mov	fp, sp
   177ac:	sub	sp, sp, #48	; 0x30
   177b0:	mov	r1, r0
   177b4:	movw	r0, #49640	; 0xc1e8
   177b8:	mov	r3, #32
   177bc:	movt	r0, #2
   177c0:	add	r2, r0, #16
   177c4:	vld1.64	{d16-d17}, [r0], r3
   177c8:	mov	r3, sp
   177cc:	vld1.64	{d18-d19}, [r2]
   177d0:	vld1.64	{d20-d21}, [r0]
   177d4:	add	r2, r3, #16
   177d8:	add	r0, r3, #32
   177dc:	vst1.64	{d18-d19}, [r2]
   177e0:	vst1.64	{d20-d21}, [r0]
   177e4:	mov	r0, #12
   177e8:	mov	r2, r3
   177ec:	vst1.64	{d16-d17}, [r2], r0
   177f0:	ldr	r0, [r2]
   177f4:	orr	r0, r0, #67108864	; 0x4000000
   177f8:	str	r0, [r2]
   177fc:	mov	r0, #0
   17800:	mvn	r2, #0
   17804:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   17808:	mov	sp, fp
   1780c:	pop	{fp, pc}
   17810:	push	{fp, lr}
   17814:	mov	fp, sp
   17818:	sub	sp, sp, #48	; 0x30
   1781c:	mov	ip, r1
   17820:	mov	r1, r0
   17824:	movw	r0, #49640	; 0xc1e8
   17828:	mov	r2, #32
   1782c:	movt	r0, #2
   17830:	add	r3, r0, #16
   17834:	vld1.64	{d16-d17}, [r0], r2
   17838:	vld1.64	{d18-d19}, [r3]
   1783c:	vld1.64	{d20-d21}, [r0]
   17840:	mov	r3, sp
   17844:	add	r2, r3, #16
   17848:	add	r0, r3, #32
   1784c:	vst1.64	{d18-d19}, [r2]
   17850:	vst1.64	{d20-d21}, [r0]
   17854:	mov	r0, #12
   17858:	mov	r2, r3
   1785c:	vst1.64	{d16-d17}, [r2], r0
   17860:	ldr	r0, [r2]
   17864:	orr	r0, r0, #67108864	; 0x4000000
   17868:	str	r0, [r2]
   1786c:	mov	r0, #0
   17870:	mov	r2, ip
   17874:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   17878:	mov	sp, fp
   1787c:	pop	{fp, pc}
   17880:	push	{r4, sl, fp, lr}
   17884:	add	fp, sp, #8
   17888:	sub	sp, sp, #96	; 0x60
   1788c:	vmov.i32	q8, #0	; 0x00000000
   17890:	mov	ip, r2
   17894:	mov	r2, sp
   17898:	mov	r4, #28
   1789c:	cmp	r1, #10
   178a0:	mov	r3, r2
   178a4:	add	lr, r2, #16
   178a8:	vst1.64	{d16-d17}, [r3], r4
   178ac:	vst1.64	{d16-d17}, [lr]
   178b0:	vst1.32	{d16-d17}, [r3]
   178b4:	beq	17904 <__mempcpy_chk@plt+0x6240>
   178b8:	vld1.64	{d16-d17}, [r2], r4
   178bc:	vld1.64	{d18-d19}, [lr]
   178c0:	add	r3, sp, #48	; 0x30
   178c4:	vld1.32	{d20-d21}, [r2]
   178c8:	add	r2, r3, #20
   178cc:	add	r4, r3, #4
   178d0:	vst1.32	{d18-d19}, [r2]
   178d4:	add	r2, r3, #32
   178d8:	vst1.32	{d16-d17}, [r4]
   178dc:	vst1.32	{d20-d21}, [r2]
   178e0:	str	r1, [sp, #48]	; 0x30
   178e4:	mvn	r2, #0
   178e8:	ldr	r1, [sp, #60]	; 0x3c
   178ec:	orr	r1, r1, #67108864	; 0x4000000
   178f0:	str	r1, [sp, #60]	; 0x3c
   178f4:	mov	r1, ip
   178f8:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   178fc:	sub	sp, fp, #8
   17900:	pop	{r4, sl, fp, pc}
   17904:	bl	11688 <abort@plt>
   17908:	push	{r4, r5, r6, sl, fp, lr}
   1790c:	add	fp, sp, #16
   17910:	sub	sp, sp, #48	; 0x30
   17914:	mov	ip, r3
   17918:	movw	r3, #49640	; 0xc1e8
   1791c:	mov	r6, #32
   17920:	cmp	r1, #0
   17924:	mov	r4, sp
   17928:	movt	r3, #2
   1792c:	cmpne	r2, #0
   17930:	add	r5, r4, #16
   17934:	add	lr, r3, #16
   17938:	vld1.64	{d16-d17}, [r3], r6
   1793c:	vld1.64	{d18-d19}, [lr]
   17940:	vld1.64	{d20-d21}, [r3]
   17944:	mov	r3, #10
   17948:	vst1.64	{d16-d17}, [r4], r6
   1794c:	vst1.64	{d18-d19}, [r5]
   17950:	vst1.64	{d20-d21}, [r4]
   17954:	str	r3, [sp]
   17958:	bne	17960 <__mempcpy_chk@plt+0x629c>
   1795c:	bl	11688 <abort@plt>
   17960:	str	r2, [sp, #44]	; 0x2c
   17964:	str	r1, [sp, #40]	; 0x28
   17968:	mov	r3, sp
   1796c:	mov	r1, ip
   17970:	mvn	r2, #0
   17974:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   17978:	sub	sp, fp, #16
   1797c:	pop	{r4, r5, r6, sl, fp, pc}
   17980:	push	{r4, r5, r6, sl, fp, lr}
   17984:	add	fp, sp, #16
   17988:	sub	sp, sp, #48	; 0x30
   1798c:	mov	lr, r3
   17990:	movw	r3, #49640	; 0xc1e8
   17994:	mov	r6, #32
   17998:	cmp	r1, #0
   1799c:	mov	r4, sp
   179a0:	movt	r3, #2
   179a4:	cmpne	r2, #0
   179a8:	add	r5, r4, #16
   179ac:	add	ip, r3, #16
   179b0:	vld1.64	{d16-d17}, [r3], r6
   179b4:	vld1.64	{d18-d19}, [ip]
   179b8:	vld1.64	{d20-d21}, [r3]
   179bc:	mov	r3, #10
   179c0:	vst1.64	{d16-d17}, [r4], r6
   179c4:	vst1.64	{d18-d19}, [r5]
   179c8:	vst1.64	{d20-d21}, [r4]
   179cc:	str	r3, [sp]
   179d0:	bne	179d8 <__mempcpy_chk@plt+0x6314>
   179d4:	bl	11688 <abort@plt>
   179d8:	ldr	ip, [fp, #8]
   179dc:	str	r2, [sp, #44]	; 0x2c
   179e0:	str	r1, [sp, #40]	; 0x28
   179e4:	mov	r3, sp
   179e8:	mov	r1, lr
   179ec:	mov	r2, ip
   179f0:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   179f4:	sub	sp, fp, #16
   179f8:	pop	{r4, r5, r6, sl, fp, pc}
   179fc:	push	{r4, sl, fp, lr}
   17a00:	add	fp, sp, #8
   17a04:	sub	sp, sp, #48	; 0x30
   17a08:	movw	r3, #49640	; 0xc1e8
   17a0c:	mov	lr, #32
   17a10:	mov	ip, r2
   17a14:	cmp	r0, #0
   17a18:	movt	r3, #2
   17a1c:	cmpne	r1, #0
   17a20:	add	r2, r3, #16
   17a24:	vld1.64	{d16-d17}, [r3], lr
   17a28:	vld1.64	{d20-d21}, [r3]
   17a2c:	vld1.64	{d18-d19}, [r2]
   17a30:	mov	r2, sp
   17a34:	add	r4, r2, #16
   17a38:	vst1.64	{d16-d17}, [r2], lr
   17a3c:	vst1.64	{d20-d21}, [r2]
   17a40:	mov	r2, #10
   17a44:	vst1.64	{d18-d19}, [r4]
   17a48:	str	r2, [sp]
   17a4c:	bne	17a54 <__mempcpy_chk@plt+0x6390>
   17a50:	bl	11688 <abort@plt>
   17a54:	str	r1, [sp, #44]	; 0x2c
   17a58:	str	r0, [sp, #40]	; 0x28
   17a5c:	mov	r3, sp
   17a60:	mov	r0, #0
   17a64:	mov	r1, ip
   17a68:	mvn	r2, #0
   17a6c:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   17a70:	sub	sp, fp, #8
   17a74:	pop	{r4, sl, fp, pc}
   17a78:	push	{r4, r5, fp, lr}
   17a7c:	add	fp, sp, #8
   17a80:	sub	sp, sp, #48	; 0x30
   17a84:	mov	ip, r3
   17a88:	movw	r3, #49640	; 0xc1e8
   17a8c:	mov	r4, #32
   17a90:	mov	lr, r2
   17a94:	cmp	r0, #0
   17a98:	movt	r3, #2
   17a9c:	cmpne	r1, #0
   17aa0:	add	r2, r3, #16
   17aa4:	vld1.64	{d16-d17}, [r3], r4
   17aa8:	vld1.64	{d20-d21}, [r3]
   17aac:	vld1.64	{d18-d19}, [r2]
   17ab0:	mov	r2, sp
   17ab4:	add	r5, r2, #16
   17ab8:	vst1.64	{d16-d17}, [r2], r4
   17abc:	vst1.64	{d20-d21}, [r2]
   17ac0:	mov	r2, #10
   17ac4:	vst1.64	{d18-d19}, [r5]
   17ac8:	str	r2, [sp]
   17acc:	bne	17ad4 <__mempcpy_chk@plt+0x6410>
   17ad0:	bl	11688 <abort@plt>
   17ad4:	str	r1, [sp, #44]	; 0x2c
   17ad8:	str	r0, [sp, #40]	; 0x28
   17adc:	mov	r3, sp
   17ae0:	mov	r0, #0
   17ae4:	mov	r1, lr
   17ae8:	mov	r2, ip
   17aec:	bl	17388 <__mempcpy_chk@plt+0x5cc4>
   17af0:	sub	sp, fp, #8
   17af4:	pop	{r4, r5, fp, pc}
   17af8:	movw	r3, #49504	; 0xc160
   17afc:	movt	r3, #2
   17b00:	b	17388 <__mempcpy_chk@plt+0x5cc4>
   17b04:	movw	r3, #49504	; 0xc160
   17b08:	mov	r2, r1
   17b0c:	mov	r1, r0
   17b10:	mov	r0, #0
   17b14:	movt	r3, #2
   17b18:	b	17388 <__mempcpy_chk@plt+0x5cc4>
   17b1c:	movw	r3, #49504	; 0xc160
   17b20:	mvn	r2, #0
   17b24:	movt	r3, #2
   17b28:	b	17388 <__mempcpy_chk@plt+0x5cc4>
   17b2c:	movw	r3, #49504	; 0xc160
   17b30:	mov	r1, r0
   17b34:	mov	r0, #0
   17b38:	mvn	r2, #0
   17b3c:	movt	r3, #2
   17b40:	b	17388 <__mempcpy_chk@plt+0x5cc4>
   17b44:	push	{r4, r5, fp, lr}
   17b48:	add	fp, sp, #8
   17b4c:	mov	r5, r0
   17b50:	mov	r4, r1
   17b54:	mov	r0, #0
   17b58:	mov	r2, #5
   17b5c:	mov	r1, r5
   17b60:	bl	1140c <dcgettext@plt>
   17b64:	cmp	r0, r5
   17b68:	popne	{r4, r5, fp, pc}
   17b6c:	bl	19a20 <__mempcpy_chk@plt+0x835c>
   17b70:	ldrb	r1, [r0]
   17b74:	and	r1, r1, #223	; 0xdf
   17b78:	cmp	r1, #71	; 0x47
   17b7c:	beq	17be4 <__mempcpy_chk@plt+0x6520>
   17b80:	cmp	r1, #85	; 0x55
   17b84:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17b88:	ldrb	r1, [r0, #1]
   17b8c:	and	r1, r1, #223	; 0xdf
   17b90:	cmp	r1, #84	; 0x54
   17b94:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17b98:	ldrb	r1, [r0, #2]
   17b9c:	and	r1, r1, #223	; 0xdf
   17ba0:	cmp	r1, #70	; 0x46
   17ba4:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17ba8:	ldrb	r1, [r0, #3]
   17bac:	cmp	r1, #45	; 0x2d
   17bb0:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17bb4:	ldrb	r1, [r0, #4]
   17bb8:	cmp	r1, #56	; 0x38
   17bbc:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17bc0:	ldrb	r0, [r0, #5]
   17bc4:	cmp	r0, #0
   17bc8:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17bcc:	ldrb	r1, [r5]
   17bd0:	movw	r2, #45698	; 0xb282
   17bd4:	movw	r0, #45702	; 0xb286
   17bd8:	movt	r2, #1
   17bdc:	movt	r0, #1
   17be0:	b	17c6c <__mempcpy_chk@plt+0x65a8>
   17be4:	ldrb	r1, [r0, #1]
   17be8:	and	r1, r1, #223	; 0xdf
   17bec:	cmp	r1, #66	; 0x42
   17bf0:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17bf4:	ldrb	r1, [r0, #2]
   17bf8:	cmp	r1, #49	; 0x31
   17bfc:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17c00:	ldrb	r1, [r0, #3]
   17c04:	cmp	r1, #56	; 0x38
   17c08:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17c0c:	ldrb	r1, [r0, #4]
   17c10:	cmp	r1, #48	; 0x30
   17c14:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17c18:	ldrb	r1, [r0, #5]
   17c1c:	cmp	r1, #51	; 0x33
   17c20:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17c24:	ldrb	r1, [r0, #6]
   17c28:	cmp	r1, #48	; 0x30
   17c2c:	bne	17c3c <__mempcpy_chk@plt+0x6578>
   17c30:	ldrb	r0, [r0, #7]
   17c34:	cmp	r0, #0
   17c38:	beq	17c58 <__mempcpy_chk@plt+0x6594>
   17c3c:	movw	r1, #45692	; 0xb27c
   17c40:	movw	r0, #45696	; 0xb280
   17c44:	cmp	r4, #9
   17c48:	movt	r1, #1
   17c4c:	movt	r0, #1
   17c50:	moveq	r0, r1
   17c54:	pop	{r4, r5, fp, pc}
   17c58:	ldrb	r1, [r5]
   17c5c:	movw	r2, #45706	; 0xb28a
   17c60:	movw	r0, #45710	; 0xb28e
   17c64:	movt	r2, #1
   17c68:	movt	r0, #1
   17c6c:	cmp	r1, #96	; 0x60
   17c70:	moveq	r0, r2
   17c74:	pop	{r4, r5, fp, pc}
   17c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c7c:	add	fp, sp, #28
   17c80:	sub	sp, sp, #220	; 0xdc
   17c84:	ldr	r7, [fp, #8]
   17c88:	mov	r4, r3
   17c8c:	mov	r9, r2
   17c90:	mov	r6, r1
   17c94:	mov	sl, r0
   17c98:	str	r7, [sp]
   17c9c:	bl	1158c <renameat2@plt>
   17ca0:	mov	r5, r0
   17ca4:	bl	11550 <__errno_location@plt>
   17ca8:	cmn	r5, #1
   17cac:	bgt	17d70 <__mempcpy_chk@plt+0x66ac>
   17cb0:	mov	r8, r0
   17cb4:	ldr	r0, [r0]
   17cb8:	cmp	r0, #22
   17cbc:	cmpne	r0, #95	; 0x5f
   17cc0:	bne	17d18 <__mempcpy_chk@plt+0x6654>
   17cc4:	cmp	r7, #0
   17cc8:	beq	17d24 <__mempcpy_chk@plt+0x6660>
   17ccc:	cmp	r7, #1
   17cd0:	bne	17d64 <__mempcpy_chk@plt+0x66a0>
   17cd4:	mov	r0, #256	; 0x100
   17cd8:	add	r3, sp, #8
   17cdc:	mov	r1, r9
   17ce0:	mov	r2, r4
   17ce4:	str	r0, [sp]
   17ce8:	mov	r0, #3
   17cec:	bl	1143c <__fxstatat64@plt>
   17cf0:	cmp	r0, #0
   17cf4:	beq	17d10 <__mempcpy_chk@plt+0x664c>
   17cf8:	ldr	r0, [r8]
   17cfc:	cmp	r0, #2
   17d00:	beq	17de4 <__mempcpy_chk@plt+0x6720>
   17d04:	mvn	r5, #0
   17d08:	cmp	r0, #75	; 0x4b
   17d0c:	bne	17d70 <__mempcpy_chk@plt+0x66ac>
   17d10:	mov	r0, #17
   17d14:	b	17d68 <__mempcpy_chk@plt+0x66a4>
   17d18:	cmp	r0, #38	; 0x26
   17d1c:	beq	17cc4 <__mempcpy_chk@plt+0x6600>
   17d20:	b	17d70 <__mempcpy_chk@plt+0x66ac>
   17d24:	mov	r7, #0
   17d28:	mov	r0, r6
   17d2c:	bl	11538 <strlen@plt>
   17d30:	mov	r5, r0
   17d34:	mov	r0, r4
   17d38:	bl	11538 <strlen@plt>
   17d3c:	cmp	r5, #0
   17d40:	cmpne	r0, #0
   17d44:	bne	17d7c <__mempcpy_chk@plt+0x66b8>
   17d48:	mov	r0, sl
   17d4c:	mov	r1, r6
   17d50:	mov	r2, r9
   17d54:	mov	r3, r4
   17d58:	bl	11640 <renameat@plt>
   17d5c:	mov	r5, r0
   17d60:	b	17d70 <__mempcpy_chk@plt+0x66ac>
   17d64:	mov	r0, #95	; 0x5f
   17d68:	str	r0, [r8]
   17d6c:	mvn	r5, #0
   17d70:	mov	r0, r5
   17d74:	sub	sp, fp, #28
   17d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d7c:	add	r1, r5, r6
   17d80:	ldrb	r1, [r1, #-1]
   17d84:	cmp	r1, #47	; 0x2f
   17d88:	beq	17d9c <__mempcpy_chk@plt+0x66d8>
   17d8c:	add	r0, r0, r4
   17d90:	ldrb	r0, [r0, #-1]
   17d94:	cmp	r0, #47	; 0x2f
   17d98:	bne	17d48 <__mempcpy_chk@plt+0x6684>
   17d9c:	mov	r0, #256	; 0x100
   17da0:	add	r3, sp, #112	; 0x70
   17da4:	mov	r1, sl
   17da8:	mov	r2, r6
   17dac:	str	r0, [sp]
   17db0:	mov	r0, #3
   17db4:	bl	1143c <__fxstatat64@plt>
   17db8:	mvn	r5, #0
   17dbc:	cmp	r0, #0
   17dc0:	bne	17d70 <__mempcpy_chk@plt+0x66ac>
   17dc4:	cmp	r7, #0
   17dc8:	beq	17dec <__mempcpy_chk@plt+0x6728>
   17dcc:	ldr	r0, [sp, #128]	; 0x80
   17dd0:	and	r0, r0, #61440	; 0xf000
   17dd4:	cmp	r0, #16384	; 0x4000
   17dd8:	beq	17d48 <__mempcpy_chk@plt+0x6684>
   17ddc:	mov	r0, #2
   17de0:	b	17e5c <__mempcpy_chk@plt+0x6798>
   17de4:	mov	r7, #1
   17de8:	b	17d28 <__mempcpy_chk@plt+0x6664>
   17dec:	mov	r0, #256	; 0x100
   17df0:	add	r3, sp, #8
   17df4:	mov	r1, r9
   17df8:	mov	r2, r4
   17dfc:	str	r0, [sp]
   17e00:	mov	r0, #3
   17e04:	bl	1143c <__fxstatat64@plt>
   17e08:	cmp	r0, #0
   17e0c:	beq	17e30 <__mempcpy_chk@plt+0x676c>
   17e10:	ldr	r0, [r8]
   17e14:	cmp	r0, #2
   17e18:	bne	17d70 <__mempcpy_chk@plt+0x66ac>
   17e1c:	ldr	r0, [sp, #128]	; 0x80
   17e20:	and	r0, r0, #61440	; 0xf000
   17e24:	cmp	r0, #16384	; 0x4000
   17e28:	beq	17d48 <__mempcpy_chk@plt+0x6684>
   17e2c:	b	17d70 <__mempcpy_chk@plt+0x66ac>
   17e30:	ldr	r0, [sp, #24]
   17e34:	and	r0, r0, #61440	; 0xf000
   17e38:	cmp	r0, #16384	; 0x4000
   17e3c:	bne	17e58 <__mempcpy_chk@plt+0x6794>
   17e40:	ldr	r0, [sp, #128]	; 0x80
   17e44:	and	r0, r0, #61440	; 0xf000
   17e48:	cmp	r0, #16384	; 0x4000
   17e4c:	beq	17d48 <__mempcpy_chk@plt+0x6684>
   17e50:	mov	r0, #21
   17e54:	b	17e5c <__mempcpy_chk@plt+0x6798>
   17e58:	mov	r0, #20
   17e5c:	str	r0, [r8]
   17e60:	b	17d70 <__mempcpy_chk@plt+0x66ac>
   17e64:	mov	r3, r1
   17e68:	mov	r1, r0
   17e6c:	mvn	r0, #99	; 0x63
   17e70:	mvn	r2, #99	; 0x63
   17e74:	b	17e78 <__mempcpy_chk@plt+0x67b4>
   17e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e7c:	add	fp, sp, #28
   17e80:	sub	sp, sp, #228	; 0xe4
   17e84:	mov	sl, r0
   17e88:	mov	r0, r1
   17e8c:	mov	r9, r3
   17e90:	str	r2, [sp, #12]
   17e94:	mov	r7, r1
   17e98:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   17e9c:	mov	r6, r0
   17ea0:	mov	r0, r9
   17ea4:	bl	13c1c <__mempcpy_chk@plt+0x2558>
   17ea8:	mov	r5, r0
   17eac:	mov	r0, r6
   17eb0:	bl	13c68 <__mempcpy_chk@plt+0x25a4>
   17eb4:	mov	r8, r0
   17eb8:	mov	r0, r5
   17ebc:	bl	13c68 <__mempcpy_chk@plt+0x25a4>
   17ec0:	mov	r4, #0
   17ec4:	cmp	r8, r0
   17ec8:	bne	17fd4 <__mempcpy_chk@plt+0x6910>
   17ecc:	mov	r0, r6
   17ed0:	mov	r1, r5
   17ed4:	mov	r2, r8
   17ed8:	stmib	sp, {r9, sl}
   17edc:	bl	1152c <bcmp@plt>
   17ee0:	cmp	r0, #0
   17ee4:	bne	17fd4 <__mempcpy_chk@plt+0x6910>
   17ee8:	mov	r0, r7
   17eec:	bl	145b0 <__mempcpy_chk@plt+0x2eec>
   17ef0:	ldr	r1, [sp, #8]
   17ef4:	mov	r4, r0
   17ef8:	mov	r6, #256	; 0x100
   17efc:	add	r3, sp, #120	; 0x78
   17f00:	mov	r0, #3
   17f04:	mov	r2, r4
   17f08:	str	r6, [sp]
   17f0c:	bl	1143c <__fxstatat64@plt>
   17f10:	cmp	r0, #0
   17f14:	beq	17f34 <__mempcpy_chk@plt+0x6870>
   17f18:	bl	11550 <__errno_location@plt>
   17f1c:	ldr	r1, [r0]
   17f20:	movw	r2, #46763	; 0xb6ab
   17f24:	mov	r0, #1
   17f28:	mov	r3, r4
   17f2c:	movt	r2, #1
   17f30:	bl	114a8 <error@plt>
   17f34:	mov	r0, r4
   17f38:	bl	14948 <__mempcpy_chk@plt+0x3284>
   17f3c:	ldr	r0, [sp, #4]
   17f40:	bl	145b0 <__mempcpy_chk@plt+0x2eec>
   17f44:	ldr	r1, [sp, #12]
   17f48:	mov	r5, r0
   17f4c:	add	r3, sp, #16
   17f50:	mov	r0, #3
   17f54:	str	r6, [sp]
   17f58:	mov	r2, r5
   17f5c:	bl	1143c <__fxstatat64@plt>
   17f60:	cmp	r0, #0
   17f64:	beq	17f84 <__mempcpy_chk@plt+0x68c0>
   17f68:	bl	11550 <__errno_location@plt>
   17f6c:	ldr	r1, [r0]
   17f70:	movw	r2, #46763	; 0xb6ab
   17f74:	mov	r0, #1
   17f78:	mov	r3, r5
   17f7c:	movt	r2, #1
   17f80:	bl	114a8 <error@plt>
   17f84:	ldr	r0, [sp, #112]	; 0x70
   17f88:	ldr	r2, [sp, #216]	; 0xd8
   17f8c:	ldr	r1, [sp, #116]	; 0x74
   17f90:	ldr	r3, [sp, #220]	; 0xdc
   17f94:	mov	r4, #0
   17f98:	eor	r1, r3, r1
   17f9c:	eor	r0, r2, r0
   17fa0:	orrs	r0, r0, r1
   17fa4:	bne	17fcc <__mempcpy_chk@plt+0x6908>
   17fa8:	ldr	r0, [sp, #16]
   17fac:	ldr	r2, [sp, #120]	; 0x78
   17fb0:	ldr	r1, [sp, #20]
   17fb4:	ldr	r3, [sp, #124]	; 0x7c
   17fb8:	eor	r1, r3, r1
   17fbc:	eor	r0, r2, r0
   17fc0:	orr	r0, r0, r1
   17fc4:	clz	r0, r0
   17fc8:	lsr	r4, r0, #5
   17fcc:	mov	r0, r5
   17fd0:	bl	14948 <__mempcpy_chk@plt+0x3284>
   17fd4:	mov	r0, r4
   17fd8:	sub	sp, fp, #28
   17fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fe0:	push	{r4, r5, r6, sl, fp, lr}
   17fe4:	add	fp, sp, #16
   17fe8:	ldr	r4, [r0], #8
   17fec:	mov	r5, r1
   17ff0:	cmp	r4, r0
   17ff4:	beq	18018 <__mempcpy_chk@plt+0x6954>
   17ff8:	mov	r0, r4
   17ffc:	mov	r1, r5
   18000:	bl	192e8 <__mempcpy_chk@plt+0x7c24>
   18004:	cmp	r0, #0
   18008:	mov	r6, r0
   1800c:	moveq	r6, r4
   18010:	mov	r0, r6
   18014:	pop	{r4, r5, r6, sl, fp, pc}
   18018:	mov	r0, r5
   1801c:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   18020:	cmp	r0, #0
   18024:	beq	18040 <__mempcpy_chk@plt+0x697c>
   18028:	mov	r1, r4
   1802c:	mov	r2, r5
   18030:	mov	r6, r0
   18034:	bl	113e8 <memcpy@plt>
   18038:	mov	r0, r6
   1803c:	pop	{r4, r5, r6, sl, fp, pc}
   18040:	mov	r6, #0
   18044:	mov	r0, r6
   18048:	pop	{r4, r5, r6, sl, fp, pc}
   1804c:	push	{r4, r5, r6, sl, fp, lr}
   18050:	add	fp, sp, #16
   18054:	mov	r4, r0
   18058:	add	r6, r0, #8
   1805c:	ldrd	r0, [r0]
   18060:	lsl	r5, r1, #1
   18064:	cmp	r0, r6
   18068:	beq	18074 <__mempcpy_chk@plt+0x69b0>
   1806c:	bl	14948 <__mempcpy_chk@plt+0x3284>
   18070:	ldr	r1, [r4, #4]
   18074:	cmp	r5, r1
   18078:	bcc	1809c <__mempcpy_chk@plt+0x69d8>
   1807c:	mov	r0, r5
   18080:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   18084:	cmp	r0, #0
   18088:	strne	r0, [r4]
   1808c:	movne	r0, #1
   18090:	strne	r5, [r4, #4]
   18094:	popne	{r4, r5, r6, sl, fp, pc}
   18098:	b	180a8 <__mempcpy_chk@plt+0x69e4>
   1809c:	bl	11550 <__errno_location@plt>
   180a0:	mov	r1, #12
   180a4:	str	r1, [r0]
   180a8:	mov	r0, #0
   180ac:	mov	r5, #1024	; 0x400
   180b0:	str	r6, [r4]
   180b4:	str	r5, [r4, #4]
   180b8:	pop	{r4, r5, r6, sl, fp, pc}
   180bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   180c0:	add	fp, sp, #24
   180c4:	ldrd	r8, [r0]
   180c8:	add	r7, r0, #8
   180cc:	mov	r4, r0
   180d0:	lsl	r5, r9, #1
   180d4:	cmp	r8, r7
   180d8:	beq	18104 <__mempcpy_chk@plt+0x6a40>
   180dc:	cmp	r5, r9
   180e0:	bcc	1813c <__mempcpy_chk@plt+0x6a78>
   180e4:	mov	r0, r8
   180e8:	mov	r1, r5
   180ec:	bl	192e8 <__mempcpy_chk@plt+0x7c24>
   180f0:	mov	r6, r0
   180f4:	cmp	r0, #0
   180f8:	bne	18124 <__mempcpy_chk@plt+0x6a60>
   180fc:	ldr	r8, [r4]
   18100:	b	18148 <__mempcpy_chk@plt+0x6a84>
   18104:	mov	r0, r5
   18108:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   1810c:	cmp	r0, #0
   18110:	beq	18134 <__mempcpy_chk@plt+0x6a70>
   18114:	ldr	r2, [r4, #4]
   18118:	mov	r1, r8
   1811c:	mov	r6, r0
   18120:	bl	113e8 <memcpy@plt>
   18124:	mov	r0, #1
   18128:	str	r6, [r4]
   1812c:	str	r5, [r4, #4]
   18130:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18134:	mov	r0, #0
   18138:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1813c:	bl	11550 <__errno_location@plt>
   18140:	mov	r1, #12
   18144:	str	r1, [r0]
   18148:	mov	r0, r8
   1814c:	bl	14948 <__mempcpy_chk@plt+0x3284>
   18150:	mov	r0, #0
   18154:	mov	r5, #1024	; 0x400
   18158:	str	r7, [r4]
   1815c:	str	r5, [r4, #4]
   18160:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18164:	push	{fp, lr}
   18168:	mov	fp, sp
   1816c:	sub	sp, sp, #8
   18170:	str	r2, [sp, #4]
   18174:	ldr	r2, [fp, #8]
   18178:	str	r2, [sp]
   1817c:	movw	r2, #45800	; 0xb2e8
   18180:	movt	r2, #1
   18184:	ldr	r3, [r2, r3, lsl #2]
   18188:	add	r2, sp, #4
   1818c:	bl	18208 <__mempcpy_chk@plt+0x6b44>
   18190:	mov	sp, fp
   18194:	pop	{fp, pc}
   18198:	ldr	r1, [r1]
   1819c:	mov	r2, #384	; 0x180
   181a0:	orr	r1, r1, #194	; 0xc2
   181a4:	bic	r1, r1, #1
   181a8:	b	114b4 <open64@plt>
   181ac:	mov	r1, #448	; 0x1c0
   181b0:	b	11568 <mkdir@plt>
   181b4:	push	{r4, sl, fp, lr}
   181b8:	add	fp, sp, #8
   181bc:	sub	sp, sp, #104	; 0x68
   181c0:	mov	r1, r0
   181c4:	mov	r2, sp
   181c8:	mov	r0, #3
   181cc:	bl	116a0 <__lxstat64@plt>
   181d0:	mov	r4, r0
   181d4:	bl	11550 <__errno_location@plt>
   181d8:	cmp	r4, #0
   181dc:	beq	181ec <__mempcpy_chk@plt+0x6b28>
   181e0:	ldr	r1, [r0]
   181e4:	cmp	r1, #75	; 0x4b
   181e8:	bne	181f4 <__mempcpy_chk@plt+0x6b30>
   181ec:	mov	r1, #17
   181f0:	str	r1, [r0]
   181f4:	ldr	r0, [r0]
   181f8:	subs	r0, r0, #2
   181fc:	mvnne	r0, #0
   18200:	sub	sp, fp, #8
   18204:	pop	{r4, sl, fp, pc}
   18208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1820c:	add	fp, sp, #28
   18210:	sub	sp, sp, #68	; 0x44
   18214:	mov	r5, r3
   18218:	mov	r9, r2
   1821c:	mov	r4, r1
   18220:	mov	r7, r0
   18224:	bl	11550 <__errno_location@plt>
   18228:	str	r0, [sp, #20]
   1822c:	ldr	sl, [r0]
   18230:	mov	r0, #0
   18234:	str	r0, [sp, #44]	; 0x2c
   18238:	add	r0, sp, #40	; 0x28
   1823c:	lsr	r0, r0, #3
   18240:	str	r0, [sp, #40]	; 0x28
   18244:	ldr	r0, [fp, #8]
   18248:	add	r6, r0, r4
   1824c:	mov	r0, r7
   18250:	bl	11538 <strlen@plt>
   18254:	mvn	r8, #0
   18258:	mov	r4, #22
   1825c:	cmp	r0, r6
   18260:	bcc	184f4 <__mempcpy_chk@plt+0x6e30>
   18264:	sub	r0, r0, r6
   18268:	movw	r1, #45239	; 0xb0b7
   1826c:	add	r6, r7, r0
   18270:	movt	r1, #1
   18274:	mov	r0, r6
   18278:	bl	116b8 <strspn@plt>
   1827c:	ldr	r1, [fp, #8]
   18280:	cmp	r0, r1
   18284:	bcc	184f4 <__mempcpy_chk@plt+0x6e30>
   18288:	movw	r0, #33204	; 0x81b4
   1828c:	movw	r4, #39131	; 0x98db
   18290:	str	r6, [sp, #32]
   18294:	movw	r6, #21503	; 0x53ff
   18298:	mov	r3, #0
   1829c:	mov	r2, #0
   182a0:	str	sl, [sp, #4]
   182a4:	str	r7, [sp, #8]
   182a8:	str	r5, [sp, #16]
   182ac:	str	r9, [sp, #12]
   182b0:	movt	r0, #1
   182b4:	movt	r4, #62617	; 0xf499
   182b8:	movt	r6, #2727	; 0xaa7
   182bc:	sub	r0, r5, r0
   182c0:	clz	r0, r0
   182c4:	lsr	r0, r0, #5
   182c8:	str	r0, [sp, #28]
   182cc:	cmp	r1, #0
   182d0:	str	r2, [sp, #24]
   182d4:	beq	18490 <__mempcpy_chk@plt+0x6dcc>
   182d8:	mov	sl, #0
   182dc:	sub	r5, fp, #40	; 0x28
   182e0:	b	18338 <__mempcpy_chk@plt+0x6c74>
   182e4:	str	r3, [sp, #36]	; 0x24
   182e8:	mov	r0, r8
   182ec:	mov	r1, r9
   182f0:	mov	r2, #62	; 0x3e
   182f4:	mov	r3, #0
   182f8:	bl	19df0 <__mempcpy_chk@plt+0x872c>
   182fc:	rsb	r2, r0, r0, lsl #5
   18300:	movw	r3, #45812	; 0xb2f4
   18304:	movt	r3, #1
   18308:	sub	r2, r8, r2, lsl #1
   1830c:	ldrb	r2, [r3, r2]
   18310:	ldr	r3, [sp, #32]
   18314:	strb	r2, [r3, sl]
   18318:	ldr	r3, [sp, #36]	; 0x24
   1831c:	str	r0, [sp, #40]	; 0x28
   18320:	ldr	r0, [fp, #8]
   18324:	add	sl, sl, #1
   18328:	str	r1, [sp, #44]	; 0x2c
   1832c:	sub	r3, r3, #1
   18330:	cmp	sl, r0
   18334:	beq	18490 <__mempcpy_chk@plt+0x6dcc>
   18338:	ldr	r8, [sp, #40]	; 0x28
   1833c:	ldr	r9, [sp, #44]	; 0x2c
   18340:	cmp	r3, #0
   18344:	bne	182e4 <__mempcpy_chk@plt+0x6c20>
   18348:	ldr	r0, [sp, #28]
   1834c:	tst	r0, #1
   18350:	beq	18378 <__mempcpy_chk@plt+0x6cb4>
   18354:	mov	r0, r5
   18358:	mov	r1, #8
   1835c:	mov	r2, #1
   18360:	bl	11658 <getrandom@plt>
   18364:	cmp	r0, #8
   18368:	bne	18378 <__mempcpy_chk@plt+0x6cb4>
   1836c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   18370:	ldr	r9, [fp, #-36]	; 0xffffffdc
   18374:	b	183c0 <__mempcpy_chk@plt+0x6cfc>
   18378:	mov	r0, #1
   1837c:	add	r1, sp, #48	; 0x30
   18380:	bl	113d0 <clock_gettime@plt>
   18384:	ldr	r0, [sp, #52]	; 0x34
   18388:	movw	r2, #45309	; 0xb0fd
   1838c:	movw	r7, #12006	; 0x2ee6
   18390:	movt	r2, #34736	; 0x87b0
   18394:	movt	r7, #10171	; 0x27bb
   18398:	mov	ip, r2
   1839c:	eor	r1, r8, r0
   183a0:	eor	r0, r9, r0, asr #31
   183a4:	umull	r2, r3, r1, r2
   183a8:	mul	r0, r0, ip
   183ac:	mla	r1, r1, r7, r3
   183b0:	movw	r3, #62253	; 0xf32d
   183b4:	movt	r3, #46340	; 0xb504
   183b8:	adds	r8, r2, r3
   183bc:	adc	r9, r1, r0
   183c0:	subs	r0, r6, r8
   183c4:	str	r8, [sp, #40]	; 0x28
   183c8:	str	r9, [sp, #44]	; 0x2c
   183cc:	sbcs	r0, r4, r9
   183d0:	bcs	1847c <__mempcpy_chk@plt+0x6db8>
   183d4:	mov	r0, #10
   183d8:	str	r0, [sp, #36]	; 0x24
   183dc:	mov	r0, #1
   183e0:	str	r0, [sp, #28]
   183e4:	b	18458 <__mempcpy_chk@plt+0x6d94>
   183e8:	mov	r0, #1
   183ec:	add	r1, sp, #48	; 0x30
   183f0:	bl	113d0 <clock_gettime@plt>
   183f4:	ldr	r0, [sp, #52]	; 0x34
   183f8:	movw	r2, #45309	; 0xb0fd
   183fc:	mov	r7, r6
   18400:	mov	r6, r4
   18404:	movw	r4, #12006	; 0x2ee6
   18408:	movt	r2, #34736	; 0x87b0
   1840c:	movt	r4, #10171	; 0x27bb
   18410:	mov	r5, r2
   18414:	eor	r1, r8, r0
   18418:	eor	r0, r9, r0, asr #31
   1841c:	umull	r2, r3, r1, r2
   18420:	mul	r0, r0, r5
   18424:	sub	r5, fp, #40	; 0x28
   18428:	mla	r1, r1, r4, r3
   1842c:	movw	r3, #62253	; 0xf32d
   18430:	mov	r4, r6
   18434:	mov	r6, r7
   18438:	movt	r3, #46340	; 0xb504
   1843c:	adds	r8, r2, r3
   18440:	adc	r9, r1, r0
   18444:	subs	r0, r6, r8
   18448:	str	r8, [sp, #40]	; 0x28
   1844c:	str	r9, [sp, #44]	; 0x2c
   18450:	sbcs	r0, r4, r9
   18454:	bcs	182e8 <__mempcpy_chk@plt+0x6c24>
   18458:	mov	r0, r5
   1845c:	mov	r1, #8
   18460:	mov	r2, #1
   18464:	bl	11658 <getrandom@plt>
   18468:	cmp	r0, #8
   1846c:	bne	183e8 <__mempcpy_chk@plt+0x6d24>
   18470:	ldr	r8, [fp, #-40]	; 0xffffffd8
   18474:	ldr	r9, [fp, #-36]	; 0xffffffdc
   18478:	b	18444 <__mempcpy_chk@plt+0x6d80>
   1847c:	mov	r0, #10
   18480:	str	r0, [sp, #36]	; 0x24
   18484:	mov	r0, #1
   18488:	str	r0, [sp, #28]
   1848c:	b	182e8 <__mempcpy_chk@plt+0x6c24>
   18490:	ldr	r9, [sp, #12]
   18494:	ldr	r0, [sp, #8]
   18498:	ldr	r5, [sp, #16]
   1849c:	mov	r7, r3
   184a0:	mov	r1, r9
   184a4:	blx	r5
   184a8:	cmn	r0, #1
   184ac:	bgt	184ec <__mempcpy_chk@plt+0x6e28>
   184b0:	ldr	r0, [sp, #20]
   184b4:	ldr	r0, [r0]
   184b8:	cmp	r0, #17
   184bc:	bne	18508 <__mempcpy_chk@plt+0x6e44>
   184c0:	ldr	r2, [sp, #24]
   184c4:	movw	r0, #41720	; 0xa2f8
   184c8:	ldr	r1, [fp, #8]
   184cc:	mov	r3, r7
   184d0:	movt	r0, #3
   184d4:	add	r2, r2, #1
   184d8:	cmp	r2, r0
   184dc:	bne	182cc <__mempcpy_chk@plt+0x6c08>
   184e0:	mvn	r8, #0
   184e4:	mov	r4, #17
   184e8:	b	184f4 <__mempcpy_chk@plt+0x6e30>
   184ec:	ldr	r4, [sp, #4]
   184f0:	mov	r8, r0
   184f4:	ldr	r0, [sp, #20]
   184f8:	str	r4, [r0]
   184fc:	mov	r0, r8
   18500:	sub	sp, fp, #28
   18504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18508:	mvn	r8, #0
   1850c:	b	184fc <__mempcpy_chk@plt+0x6e38>
   18510:	push	{fp, lr}
   18514:	mov	fp, sp
   18518:	sub	sp, sp, #8
   1851c:	str	r2, [sp, #4]
   18520:	mov	r2, #6
   18524:	str	r2, [sp]
   18528:	movw	r2, #45800	; 0xb2e8
   1852c:	movt	r2, #1
   18530:	ldr	r3, [r2, r3, lsl #2]
   18534:	add	r2, sp, #4
   18538:	bl	18208 <__mempcpy_chk@plt+0x6b44>
   1853c:	mov	sp, fp
   18540:	pop	{fp, pc}
   18544:	push	{fp, lr}
   18548:	mov	fp, sp
   1854c:	sub	sp, sp, #8
   18550:	mov	ip, #6
   18554:	str	ip, [sp]
   18558:	bl	18208 <__mempcpy_chk@plt+0x6b44>
   1855c:	mov	sp, fp
   18560:	pop	{fp, pc}
   18564:	push	{r4, r5, r6, r7, fp, lr}
   18568:	add	fp, sp, #16
   1856c:	mov	r4, r0
   18570:	cmp	r0, #2
   18574:	bhi	185a4 <__mempcpy_chk@plt+0x6ee0>
   18578:	mov	r0, r4
   1857c:	bl	19af8 <__mempcpy_chk@plt+0x8434>
   18580:	mov	r5, r0
   18584:	bl	11550 <__errno_location@plt>
   18588:	ldr	r7, [r0]
   1858c:	mov	r6, r0
   18590:	mov	r0, r4
   18594:	bl	11694 <close@plt>
   18598:	mov	r0, r5
   1859c:	str	r7, [r6]
   185a0:	pop	{r4, r5, r6, r7, fp, pc}
   185a4:	mov	r0, r4
   185a8:	pop	{r4, r5, r6, r7, fp, pc}
   185ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   185b0:	add	fp, sp, #24
   185b4:	sub	sp, sp, #32
   185b8:	ldr	r6, [fp, #12]
   185bc:	ldr	r7, [fp, #8]
   185c0:	mov	r4, r2
   185c4:	mov	r8, r0
   185c8:	cmp	r1, #0
   185cc:	beq	185f4 <__mempcpy_chk@plt+0x6f30>
   185d0:	movw	r2, #45875	; 0xb333
   185d4:	mov	r5, r1
   185d8:	str	r3, [sp, #4]
   185dc:	str	r4, [sp]
   185e0:	mov	r0, r8
   185e4:	mov	r1, #1
   185e8:	movt	r2, #1
   185ec:	mov	r3, r5
   185f0:	b	1860c <__mempcpy_chk@plt+0x6f48>
   185f4:	movw	r2, #45887	; 0xb33f
   185f8:	str	r3, [sp]
   185fc:	mov	r0, r8
   18600:	mov	r1, #1
   18604:	mov	r3, r4
   18608:	movt	r2, #1
   1860c:	bl	115b0 <__fprintf_chk@plt>
   18610:	movw	r1, #45894	; 0xb346
   18614:	mov	r0, #0
   18618:	mov	r2, #5
   1861c:	movt	r1, #1
   18620:	bl	1140c <dcgettext@plt>
   18624:	movw	r2, #46612	; 0xb614
   18628:	mov	r3, r0
   1862c:	movw	r0, #2022	; 0x7e6
   18630:	mov	r1, #1
   18634:	movt	r2, #1
   18638:	str	r0, [sp]
   1863c:	mov	r0, r8
   18640:	bl	115b0 <__fprintf_chk@plt>
   18644:	movw	r4, #43827	; 0xab33
   18648:	mov	r1, r8
   1864c:	movt	r4, #1
   18650:	mov	r0, r4
   18654:	bl	1134c <fputs_unlocked@plt>
   18658:	movw	r1, #45898	; 0xb34a
   1865c:	mov	r0, #0
   18660:	mov	r2, #5
   18664:	movt	r1, #1
   18668:	bl	1140c <dcgettext@plt>
   1866c:	movw	r3, #46069	; 0xb3f5
   18670:	mov	r2, r0
   18674:	mov	r0, r8
   18678:	mov	r1, #1
   1867c:	movt	r3, #1
   18680:	bl	115b0 <__fprintf_chk@plt>
   18684:	mov	r0, r4
   18688:	mov	r1, r8
   1868c:	bl	1134c <fputs_unlocked@plt>
   18690:	cmp	r6, #9
   18694:	bhi	186d0 <__mempcpy_chk@plt+0x700c>
   18698:	add	r0, pc, #0
   1869c:	ldr	pc, [r0, r6, lsl #2]
   186a0:	andeq	r8, r1, r8, asr #13
   186a4:	ldrdeq	r8, [r1], -ip
   186a8:	andeq	r8, r1, ip, lsl #14
   186ac:	andeq	r8, r1, r4, lsr r7
   186b0:	andeq	r8, r1, ip, asr r7
   186b4:	andeq	r8, r1, r4, lsl #15
   186b8:	andeq	r8, r1, ip, lsr #15
   186bc:	andeq	r8, r1, r4, ror #15
   186c0:	andeq	r8, r1, r4, lsl #17
   186c4:	andeq	r8, r1, ip, lsr #16
   186c8:	sub	sp, fp, #24
   186cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   186d0:	movw	r1, #46422	; 0xb556
   186d4:	movt	r1, #1
   186d8:	b	18834 <__mempcpy_chk@plt+0x7170>
   186dc:	movw	r1, #46103	; 0xb417
   186e0:	mov	r0, #0
   186e4:	mov	r2, #5
   186e8:	movt	r1, #1
   186ec:	bl	1140c <dcgettext@plt>
   186f0:	ldr	r3, [r7]
   186f4:	mov	r2, r0
   186f8:	mov	r0, r8
   186fc:	mov	r1, #1
   18700:	sub	sp, fp, #24
   18704:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18708:	b	115b0 <__fprintf_chk@plt>
   1870c:	movw	r1, #46119	; 0xb427
   18710:	mov	r0, #0
   18714:	mov	r2, #5
   18718:	movt	r1, #1
   1871c:	bl	1140c <dcgettext@plt>
   18720:	mov	r2, r0
   18724:	ldr	r3, [r7]
   18728:	ldr	r0, [r7, #4]
   1872c:	str	r0, [sp]
   18730:	b	18820 <__mempcpy_chk@plt+0x715c>
   18734:	movw	r1, #46142	; 0xb43e
   18738:	mov	r0, #0
   1873c:	mov	r2, #5
   18740:	movt	r1, #1
   18744:	bl	1140c <dcgettext@plt>
   18748:	mov	r2, r0
   1874c:	ldr	r3, [r7]
   18750:	ldmib	r7, {r0, r1}
   18754:	stm	sp, {r0, r1}
   18758:	b	18820 <__mempcpy_chk@plt+0x715c>
   1875c:	movw	r1, #46170	; 0xb45a
   18760:	mov	r0, #0
   18764:	mov	r2, #5
   18768:	movt	r1, #1
   1876c:	bl	1140c <dcgettext@plt>
   18770:	ldr	r3, [r7]
   18774:	mov	r2, r0
   18778:	ldmib	r7, {r0, r1, r7}
   1877c:	stm	sp, {r0, r1, r7}
   18780:	b	18820 <__mempcpy_chk@plt+0x715c>
   18784:	movw	r1, #46202	; 0xb47a
   18788:	mov	r0, #0
   1878c:	mov	r2, #5
   18790:	movt	r1, #1
   18794:	bl	1140c <dcgettext@plt>
   18798:	ldr	r3, [r7]
   1879c:	mov	r2, r0
   187a0:	ldmib	r7, {r0, r1, r6, r7}
   187a4:	stm	sp, {r0, r1, r6, r7}
   187a8:	b	18820 <__mempcpy_chk@plt+0x715c>
   187ac:	movw	r1, #46238	; 0xb49e
   187b0:	mov	r0, #0
   187b4:	mov	r2, #5
   187b8:	movt	r1, #1
   187bc:	bl	1140c <dcgettext@plt>
   187c0:	mov	r2, r0
   187c4:	ldr	r3, [r7]
   187c8:	ldmib	r7, {r0, r1, r6}
   187cc:	ldr	r5, [r7, #16]
   187d0:	ldr	r7, [r7, #20]
   187d4:	stm	sp, {r0, r1, r6}
   187d8:	str	r5, [sp, #12]
   187dc:	str	r7, [sp, #16]
   187e0:	b	18820 <__mempcpy_chk@plt+0x715c>
   187e4:	movw	r1, #46278	; 0xb4c6
   187e8:	mov	r0, #0
   187ec:	mov	r2, #5
   187f0:	movt	r1, #1
   187f4:	bl	1140c <dcgettext@plt>
   187f8:	mov	r2, r0
   187fc:	ldr	r3, [r7]
   18800:	ldmib	r7, {r0, r1, r6}
   18804:	ldr	r5, [r7, #16]
   18808:	ldr	r4, [r7, #20]
   1880c:	ldr	r7, [r7, #24]
   18810:	stm	sp, {r0, r1, r6}
   18814:	str	r5, [sp, #12]
   18818:	str	r4, [sp, #16]
   1881c:	str	r7, [sp, #20]
   18820:	mov	r0, r8
   18824:	mov	r1, #1
   18828:	b	188d4 <__mempcpy_chk@plt+0x7210>
   1882c:	movw	r1, #46370	; 0xb522
   18830:	movt	r1, #1
   18834:	mov	r0, #0
   18838:	mov	r2, #5
   1883c:	bl	1140c <dcgettext@plt>
   18840:	mov	ip, r0
   18844:	ldr	r3, [r7]
   18848:	ldr	r0, [r7, #4]
   1884c:	ldr	r1, [r7, #8]
   18850:	ldr	r6, [r7, #12]
   18854:	ldr	r5, [r7, #16]
   18858:	ldr	r4, [r7, #20]
   1885c:	ldr	r2, [r7, #24]
   18860:	ldr	lr, [r7, #28]
   18864:	ldr	r7, [r7, #32]
   18868:	stm	sp, {r0, r1, r6}
   1886c:	str	r5, [sp, #12]
   18870:	str	r4, [sp, #16]
   18874:	str	r2, [sp, #20]
   18878:	str	lr, [sp, #24]
   1887c:	str	r7, [sp, #28]
   18880:	b	188c8 <__mempcpy_chk@plt+0x7204>
   18884:	movw	r1, #46322	; 0xb4f2
   18888:	mov	r0, #0
   1888c:	mov	r2, #5
   18890:	movt	r1, #1
   18894:	bl	1140c <dcgettext@plt>
   18898:	mov	ip, r0
   1889c:	ldr	r3, [r7]
   188a0:	ldmib	r7, {r0, r1, r6}
   188a4:	ldr	r5, [r7, #16]
   188a8:	ldr	r4, [r7, #20]
   188ac:	ldr	r2, [r7, #24]
   188b0:	ldr	r7, [r7, #28]
   188b4:	stm	sp, {r0, r1, r6}
   188b8:	str	r5, [sp, #12]
   188bc:	str	r4, [sp, #16]
   188c0:	str	r2, [sp, #20]
   188c4:	str	r7, [sp, #24]
   188c8:	mov	r0, r8
   188cc:	mov	r1, #1
   188d0:	mov	r2, ip
   188d4:	bl	115b0 <__fprintf_chk@plt>
   188d8:	sub	sp, fp, #24
   188dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   188e0:	push	{r4, sl, fp, lr}
   188e4:	add	fp, sp, #8
   188e8:	sub	sp, sp, #8
   188ec:	ldr	ip, [fp, #8]
   188f0:	mov	lr, #0
   188f4:	ldr	r4, [ip, lr, lsl #2]
   188f8:	add	lr, lr, #1
   188fc:	cmp	r4, #0
   18900:	bne	188f4 <__mempcpy_chk@plt+0x7230>
   18904:	sub	r4, lr, #1
   18908:	str	ip, [sp]
   1890c:	str	r4, [sp, #4]
   18910:	bl	185ac <__mempcpy_chk@plt+0x6ee8>
   18914:	sub	sp, fp, #8
   18918:	pop	{r4, sl, fp, pc}
   1891c:	push	{fp, lr}
   18920:	mov	fp, sp
   18924:	sub	sp, sp, #48	; 0x30
   18928:	ldr	ip, [fp, #8]
   1892c:	ldr	lr, [ip]
   18930:	cmp	lr, #0
   18934:	str	lr, [sp, #8]
   18938:	beq	189d4 <__mempcpy_chk@plt+0x7310>
   1893c:	ldr	lr, [ip, #4]
   18940:	cmp	lr, #0
   18944:	str	lr, [sp, #12]
   18948:	beq	189dc <__mempcpy_chk@plt+0x7318>
   1894c:	ldr	lr, [ip, #8]
   18950:	cmp	lr, #0
   18954:	str	lr, [sp, #16]
   18958:	beq	189e4 <__mempcpy_chk@plt+0x7320>
   1895c:	ldr	lr, [ip, #12]
   18960:	cmp	lr, #0
   18964:	str	lr, [sp, #20]
   18968:	beq	189ec <__mempcpy_chk@plt+0x7328>
   1896c:	ldr	lr, [ip, #16]
   18970:	cmp	lr, #0
   18974:	str	lr, [sp, #24]
   18978:	beq	189f4 <__mempcpy_chk@plt+0x7330>
   1897c:	ldr	lr, [ip, #20]
   18980:	cmp	lr, #0
   18984:	str	lr, [sp, #28]
   18988:	beq	189fc <__mempcpy_chk@plt+0x7338>
   1898c:	ldr	lr, [ip, #24]
   18990:	cmp	lr, #0
   18994:	str	lr, [sp, #32]
   18998:	beq	18a04 <__mempcpy_chk@plt+0x7340>
   1899c:	ldr	lr, [ip, #28]
   189a0:	cmp	lr, #0
   189a4:	str	lr, [sp, #36]	; 0x24
   189a8:	beq	18a0c <__mempcpy_chk@plt+0x7348>
   189ac:	ldr	lr, [ip, #32]
   189b0:	cmp	lr, #0
   189b4:	str	lr, [sp, #40]	; 0x28
   189b8:	beq	18a14 <__mempcpy_chk@plt+0x7350>
   189bc:	ldr	lr, [ip, #36]	; 0x24
   189c0:	mov	ip, #10
   189c4:	cmp	lr, #0
   189c8:	str	lr, [sp, #44]	; 0x2c
   189cc:	movweq	ip, #9
   189d0:	b	18a18 <__mempcpy_chk@plt+0x7354>
   189d4:	mov	ip, #0
   189d8:	b	18a18 <__mempcpy_chk@plt+0x7354>
   189dc:	mov	ip, #1
   189e0:	b	18a18 <__mempcpy_chk@plt+0x7354>
   189e4:	mov	ip, #2
   189e8:	b	18a18 <__mempcpy_chk@plt+0x7354>
   189ec:	mov	ip, #3
   189f0:	b	18a18 <__mempcpy_chk@plt+0x7354>
   189f4:	mov	ip, #4
   189f8:	b	18a18 <__mempcpy_chk@plt+0x7354>
   189fc:	mov	ip, #5
   18a00:	b	18a18 <__mempcpy_chk@plt+0x7354>
   18a04:	mov	ip, #6
   18a08:	b	18a18 <__mempcpy_chk@plt+0x7354>
   18a0c:	mov	ip, #7
   18a10:	b	18a18 <__mempcpy_chk@plt+0x7354>
   18a14:	mov	ip, #8
   18a18:	add	lr, sp, #8
   18a1c:	str	ip, [sp, #4]
   18a20:	str	lr, [sp]
   18a24:	bl	185ac <__mempcpy_chk@plt+0x6ee8>
   18a28:	mov	sp, fp
   18a2c:	pop	{fp, pc}
   18a30:	push	{fp, lr}
   18a34:	mov	fp, sp
   18a38:	sub	sp, sp, #56	; 0x38
   18a3c:	add	ip, fp, #8
   18a40:	str	ip, [sp, #12]
   18a44:	ldr	lr, [fp, #8]
   18a48:	cmp	lr, #0
   18a4c:	str	lr, [sp, #16]
   18a50:	beq	18aec <__mempcpy_chk@plt+0x7428>
   18a54:	ldr	lr, [ip, #4]
   18a58:	cmp	lr, #0
   18a5c:	str	lr, [sp, #20]
   18a60:	beq	18af4 <__mempcpy_chk@plt+0x7430>
   18a64:	ldr	lr, [ip, #8]
   18a68:	cmp	lr, #0
   18a6c:	str	lr, [sp, #24]
   18a70:	beq	18afc <__mempcpy_chk@plt+0x7438>
   18a74:	ldr	lr, [ip, #12]
   18a78:	cmp	lr, #0
   18a7c:	str	lr, [sp, #28]
   18a80:	beq	18b04 <__mempcpy_chk@plt+0x7440>
   18a84:	ldr	lr, [ip, #16]
   18a88:	cmp	lr, #0
   18a8c:	str	lr, [sp, #32]
   18a90:	beq	18b0c <__mempcpy_chk@plt+0x7448>
   18a94:	ldr	lr, [ip, #20]
   18a98:	cmp	lr, #0
   18a9c:	str	lr, [sp, #36]	; 0x24
   18aa0:	beq	18b14 <__mempcpy_chk@plt+0x7450>
   18aa4:	ldr	lr, [ip, #24]
   18aa8:	cmp	lr, #0
   18aac:	str	lr, [sp, #40]	; 0x28
   18ab0:	beq	18b1c <__mempcpy_chk@plt+0x7458>
   18ab4:	ldr	lr, [ip, #28]
   18ab8:	cmp	lr, #0
   18abc:	str	lr, [sp, #44]	; 0x2c
   18ac0:	beq	18b24 <__mempcpy_chk@plt+0x7460>
   18ac4:	ldr	lr, [ip, #32]
   18ac8:	cmp	lr, #0
   18acc:	str	lr, [sp, #48]	; 0x30
   18ad0:	beq	18b2c <__mempcpy_chk@plt+0x7468>
   18ad4:	ldr	lr, [ip, #36]	; 0x24
   18ad8:	mov	ip, #10
   18adc:	cmp	lr, #0
   18ae0:	str	lr, [sp, #52]	; 0x34
   18ae4:	movweq	ip, #9
   18ae8:	b	18b30 <__mempcpy_chk@plt+0x746c>
   18aec:	mov	ip, #0
   18af0:	b	18b30 <__mempcpy_chk@plt+0x746c>
   18af4:	mov	ip, #1
   18af8:	b	18b30 <__mempcpy_chk@plt+0x746c>
   18afc:	mov	ip, #2
   18b00:	b	18b30 <__mempcpy_chk@plt+0x746c>
   18b04:	mov	ip, #3
   18b08:	b	18b30 <__mempcpy_chk@plt+0x746c>
   18b0c:	mov	ip, #4
   18b10:	b	18b30 <__mempcpy_chk@plt+0x746c>
   18b14:	mov	ip, #5
   18b18:	b	18b30 <__mempcpy_chk@plt+0x746c>
   18b1c:	mov	ip, #6
   18b20:	b	18b30 <__mempcpy_chk@plt+0x746c>
   18b24:	mov	ip, #7
   18b28:	b	18b30 <__mempcpy_chk@plt+0x746c>
   18b2c:	mov	ip, #8
   18b30:	add	lr, sp, #16
   18b34:	str	ip, [sp, #4]
   18b38:	str	lr, [sp]
   18b3c:	bl	185ac <__mempcpy_chk@plt+0x6ee8>
   18b40:	mov	sp, fp
   18b44:	pop	{fp, pc}
   18b48:	push	{fp, lr}
   18b4c:	mov	fp, sp
   18b50:	movw	r0, #49588	; 0xc1b4
   18b54:	movt	r0, #2
   18b58:	ldr	r1, [r0]
   18b5c:	movw	r0, #43827	; 0xab33
   18b60:	movt	r0, #1
   18b64:	bl	1134c <fputs_unlocked@plt>
   18b68:	movw	r1, #46482	; 0xb592
   18b6c:	mov	r0, #0
   18b70:	mov	r2, #5
   18b74:	movt	r1, #1
   18b78:	bl	1140c <dcgettext@plt>
   18b7c:	movw	r2, #46502	; 0xb5a6
   18b80:	mov	r1, r0
   18b84:	mov	r0, #1
   18b88:	movt	r2, #1
   18b8c:	bl	11598 <__printf_chk@plt>
   18b90:	movw	r1, #46524	; 0xb5bc
   18b94:	mov	r0, #0
   18b98:	mov	r2, #5
   18b9c:	movt	r1, #1
   18ba0:	bl	1140c <dcgettext@plt>
   18ba4:	movw	r2, #43289	; 0xa919
   18ba8:	movw	r3, #44169	; 0xac89
   18bac:	mov	r1, r0
   18bb0:	mov	r0, #1
   18bb4:	movt	r2, #1
   18bb8:	movt	r3, #1
   18bbc:	bl	11598 <__printf_chk@plt>
   18bc0:	movw	r1, #46544	; 0xb5d0
   18bc4:	mov	r0, #0
   18bc8:	mov	r2, #5
   18bcc:	movt	r1, #1
   18bd0:	bl	1140c <dcgettext@plt>
   18bd4:	movw	r2, #46583	; 0xb5f7
   18bd8:	mov	r1, r0
   18bdc:	mov	r0, #1
   18be0:	movt	r2, #1
   18be4:	pop	{fp, lr}
   18be8:	b	11598 <__printf_chk@plt>
   18bec:	push	{r4, r5, r6, sl, fp, lr}
   18bf0:	add	fp, sp, #16
   18bf4:	mov	r4, r2
   18bf8:	mov	r5, r1
   18bfc:	mov	r6, r0
   18c00:	bl	19abc <__mempcpy_chk@plt+0x83f8>
   18c04:	cmp	r0, #0
   18c08:	popne	{r4, r5, r6, sl, fp, pc}
   18c0c:	cmp	r6, #0
   18c10:	beq	18c24 <__mempcpy_chk@plt+0x7560>
   18c14:	cmp	r5, #0
   18c18:	cmpne	r4, #0
   18c1c:	bne	18c24 <__mempcpy_chk@plt+0x7560>
   18c20:	pop	{r4, r5, r6, sl, fp, pc}
   18c24:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18c28:	push	{r4, r5, r6, sl, fp, lr}
   18c2c:	add	fp, sp, #16
   18c30:	mov	r4, r2
   18c34:	mov	r5, r1
   18c38:	mov	r6, r0
   18c3c:	bl	19abc <__mempcpy_chk@plt+0x83f8>
   18c40:	cmp	r0, #0
   18c44:	popne	{r4, r5, r6, sl, fp, pc}
   18c48:	cmp	r6, #0
   18c4c:	beq	18c60 <__mempcpy_chk@plt+0x759c>
   18c50:	cmp	r5, #0
   18c54:	cmpne	r4, #0
   18c58:	bne	18c60 <__mempcpy_chk@plt+0x759c>
   18c5c:	pop	{r4, r5, r6, sl, fp, pc}
   18c60:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18c64:	push	{fp, lr}
   18c68:	mov	fp, sp
   18c6c:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   18c70:	cmp	r0, #0
   18c74:	popne	{fp, pc}
   18c78:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18c7c:	push	{fp, lr}
   18c80:	mov	fp, sp
   18c84:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   18c88:	cmp	r0, #0
   18c8c:	popne	{fp, pc}
   18c90:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18c94:	push	{fp, lr}
   18c98:	mov	fp, sp
   18c9c:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   18ca0:	cmp	r0, #0
   18ca4:	popne	{fp, pc}
   18ca8:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18cac:	push	{r4, r5, fp, lr}
   18cb0:	add	fp, sp, #8
   18cb4:	mov	r4, r1
   18cb8:	mov	r5, r0
   18cbc:	bl	192e8 <__mempcpy_chk@plt+0x7c24>
   18cc0:	cmp	r0, #0
   18cc4:	popne	{r4, r5, fp, pc}
   18cc8:	cmp	r5, #0
   18ccc:	beq	18cdc <__mempcpy_chk@plt+0x7618>
   18cd0:	cmp	r4, #0
   18cd4:	bne	18cdc <__mempcpy_chk@plt+0x7618>
   18cd8:	pop	{r4, r5, fp, pc}
   18cdc:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18ce0:	push	{fp, lr}
   18ce4:	mov	fp, sp
   18ce8:	cmp	r1, #0
   18cec:	orreq	r1, r1, #1
   18cf0:	bl	192e8 <__mempcpy_chk@plt+0x7c24>
   18cf4:	cmp	r0, #0
   18cf8:	popne	{fp, pc}
   18cfc:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18d00:	push	{fp, lr}
   18d04:	mov	fp, sp
   18d08:	clz	r3, r2
   18d0c:	lsr	ip, r3, #5
   18d10:	clz	r3, r1
   18d14:	lsr	r3, r3, #5
   18d18:	orrs	r3, r3, ip
   18d1c:	movwne	r1, #1
   18d20:	movwne	r2, #1
   18d24:	bl	19abc <__mempcpy_chk@plt+0x83f8>
   18d28:	cmp	r0, #0
   18d2c:	popne	{fp, pc}
   18d30:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18d34:	push	{fp, lr}
   18d38:	mov	fp, sp
   18d3c:	mov	r2, r1
   18d40:	mov	r1, r0
   18d44:	mov	r0, #0
   18d48:	bl	19abc <__mempcpy_chk@plt+0x83f8>
   18d4c:	cmp	r0, #0
   18d50:	popne	{fp, pc}
   18d54:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18d58:	push	{fp, lr}
   18d5c:	mov	fp, sp
   18d60:	mov	r2, r1
   18d64:	mov	r1, r0
   18d68:	clz	r0, r2
   18d6c:	clz	r3, r1
   18d70:	lsr	r0, r0, #5
   18d74:	lsr	r3, r3, #5
   18d78:	orrs	r0, r3, r0
   18d7c:	mov	r0, #0
   18d80:	movwne	r1, #1
   18d84:	movwne	r2, #1
   18d88:	bl	19abc <__mempcpy_chk@plt+0x83f8>
   18d8c:	cmp	r0, #0
   18d90:	popne	{fp, pc}
   18d94:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18d98:	push	{r4, r5, r6, sl, fp, lr}
   18d9c:	add	fp, sp, #16
   18da0:	ldr	r5, [r1]
   18da4:	mov	r4, r1
   18da8:	mov	r6, r0
   18dac:	cmp	r0, #0
   18db0:	beq	18dc8 <__mempcpy_chk@plt+0x7704>
   18db4:	mov	r0, #1
   18db8:	add	r0, r0, r5, lsr #1
   18dbc:	adds	r5, r5, r0
   18dc0:	bcc	18dd0 <__mempcpy_chk@plt+0x770c>
   18dc4:	b	18e0c <__mempcpy_chk@plt+0x7748>
   18dc8:	cmp	r5, #0
   18dcc:	movweq	r5, #64	; 0x40
   18dd0:	mov	r0, r6
   18dd4:	mov	r1, r5
   18dd8:	mov	r2, #1
   18ddc:	bl	19abc <__mempcpy_chk@plt+0x83f8>
   18de0:	cmp	r5, #0
   18de4:	mov	r1, r5
   18de8:	movwne	r1, #1
   18dec:	cmp	r0, #0
   18df0:	bne	18e04 <__mempcpy_chk@plt+0x7740>
   18df4:	clz	r2, r6
   18df8:	lsr	r2, r2, #5
   18dfc:	orrs	r1, r2, r1
   18e00:	bne	18e0c <__mempcpy_chk@plt+0x7748>
   18e04:	str	r5, [r4]
   18e08:	pop	{r4, r5, r6, sl, fp, pc}
   18e0c:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18e10:	push	{r4, r5, r6, r7, fp, lr}
   18e14:	add	fp, sp, #16
   18e18:	ldr	r5, [r1]
   18e1c:	mov	r6, r2
   18e20:	mov	r4, r1
   18e24:	mov	r7, r0
   18e28:	cmp	r0, #0
   18e2c:	beq	18e44 <__mempcpy_chk@plt+0x7780>
   18e30:	mov	r0, #1
   18e34:	add	r0, r0, r5, lsr #1
   18e38:	adds	r5, r5, r0
   18e3c:	bcc	18e5c <__mempcpy_chk@plt+0x7798>
   18e40:	b	18e90 <__mempcpy_chk@plt+0x77cc>
   18e44:	cmp	r5, #0
   18e48:	bne	18e5c <__mempcpy_chk@plt+0x7798>
   18e4c:	mov	r0, #64	; 0x40
   18e50:	cmp	r6, #64	; 0x40
   18e54:	udiv	r5, r0, r6
   18e58:	addhi	r5, r5, #1
   18e5c:	mov	r0, r7
   18e60:	mov	r1, r5
   18e64:	mov	r2, r6
   18e68:	bl	19abc <__mempcpy_chk@plt+0x83f8>
   18e6c:	cmp	r0, #0
   18e70:	bne	18e88 <__mempcpy_chk@plt+0x77c4>
   18e74:	cmp	r7, #0
   18e78:	beq	18e90 <__mempcpy_chk@plt+0x77cc>
   18e7c:	cmp	r6, #0
   18e80:	cmpne	r5, #0
   18e84:	bne	18e90 <__mempcpy_chk@plt+0x77cc>
   18e88:	str	r5, [r4]
   18e8c:	pop	{r4, r5, r6, r7, fp, pc}
   18e90:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   18e94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18e98:	add	fp, sp, #24
   18e9c:	mov	r8, r1
   18ea0:	ldr	r1, [r1]
   18ea4:	mov	r5, r0
   18ea8:	add	r0, r1, r1, asr #1
   18eac:	cmp	r0, r1
   18eb0:	mvnvs	r0, #-2147483648	; 0x80000000
   18eb4:	cmp	r0, r3
   18eb8:	mov	r7, r0
   18ebc:	movgt	r7, r3
   18ec0:	cmn	r3, #1
   18ec4:	movle	r7, r0
   18ec8:	ldr	r0, [fp, #8]
   18ecc:	cmn	r0, #1
   18ed0:	ble	18ef8 <__mempcpy_chk@plt+0x7834>
   18ed4:	cmp	r0, #0
   18ed8:	beq	18f4c <__mempcpy_chk@plt+0x7888>
   18edc:	cmn	r7, #1
   18ee0:	ble	18f20 <__mempcpy_chk@plt+0x785c>
   18ee4:	mvn	r4, #-2147483648	; 0x80000000
   18ee8:	udiv	r6, r4, r0
   18eec:	cmp	r6, r7
   18ef0:	bge	18f4c <__mempcpy_chk@plt+0x7888>
   18ef4:	b	18f5c <__mempcpy_chk@plt+0x7898>
   18ef8:	cmn	r7, #1
   18efc:	ble	18f3c <__mempcpy_chk@plt+0x7878>
   18f00:	cmn	r0, #1
   18f04:	beq	18f4c <__mempcpy_chk@plt+0x7888>
   18f08:	mov	r6, #-2147483648	; 0x80000000
   18f0c:	mvn	r4, #-2147483648	; 0x80000000
   18f10:	sdiv	r6, r6, r0
   18f14:	cmp	r6, r7
   18f18:	bge	18f4c <__mempcpy_chk@plt+0x7888>
   18f1c:	b	18f5c <__mempcpy_chk@plt+0x7898>
   18f20:	beq	18f4c <__mempcpy_chk@plt+0x7888>
   18f24:	mov	r6, #-2147483648	; 0x80000000
   18f28:	mvn	r4, #-2147483648	; 0x80000000
   18f2c:	sdiv	r6, r6, r7
   18f30:	cmp	r6, r0
   18f34:	bge	18f4c <__mempcpy_chk@plt+0x7888>
   18f38:	b	18f5c <__mempcpy_chk@plt+0x7898>
   18f3c:	mvn	r4, #-2147483648	; 0x80000000
   18f40:	sdiv	r6, r4, r0
   18f44:	cmp	r7, r6
   18f48:	blt	18f5c <__mempcpy_chk@plt+0x7898>
   18f4c:	mul	r6, r7, r0
   18f50:	mov	r4, #64	; 0x40
   18f54:	cmp	r6, #63	; 0x3f
   18f58:	bgt	18f64 <__mempcpy_chk@plt+0x78a0>
   18f5c:	sdiv	r7, r4, r0
   18f60:	mul	r6, r7, r0
   18f64:	cmp	r5, #0
   18f68:	moveq	r4, #0
   18f6c:	streq	r4, [r8]
   18f70:	sub	r4, r7, r1
   18f74:	cmp	r4, r2
   18f78:	bge	19024 <__mempcpy_chk@plt+0x7960>
   18f7c:	add	r7, r1, r2
   18f80:	mov	r6, #0
   18f84:	mov	r2, #0
   18f88:	cmp	r7, r3
   18f8c:	movwgt	r6, #1
   18f90:	cmn	r3, #1
   18f94:	movwgt	r2, #1
   18f98:	cmp	r7, r1
   18f9c:	bvs	19058 <__mempcpy_chk@plt+0x7994>
   18fa0:	ands	r1, r2, r6
   18fa4:	bne	19058 <__mempcpy_chk@plt+0x7994>
   18fa8:	cmn	r0, #1
   18fac:	ble	18fd4 <__mempcpy_chk@plt+0x7910>
   18fb0:	cmp	r0, #0
   18fb4:	beq	19020 <__mempcpy_chk@plt+0x795c>
   18fb8:	cmn	r7, #1
   18fbc:	ble	18ff8 <__mempcpy_chk@plt+0x7934>
   18fc0:	mvn	r1, #-2147483648	; 0x80000000
   18fc4:	udiv	r1, r1, r0
   18fc8:	cmp	r1, r7
   18fcc:	bge	19020 <__mempcpy_chk@plt+0x795c>
   18fd0:	b	19058 <__mempcpy_chk@plt+0x7994>
   18fd4:	cmn	r7, #1
   18fd8:	ble	19010 <__mempcpy_chk@plt+0x794c>
   18fdc:	cmn	r0, #1
   18fe0:	beq	19020 <__mempcpy_chk@plt+0x795c>
   18fe4:	mov	r1, #-2147483648	; 0x80000000
   18fe8:	sdiv	r1, r1, r0
   18fec:	cmp	r1, r7
   18ff0:	bge	19020 <__mempcpy_chk@plt+0x795c>
   18ff4:	b	19058 <__mempcpy_chk@plt+0x7994>
   18ff8:	beq	19020 <__mempcpy_chk@plt+0x795c>
   18ffc:	mov	r1, #-2147483648	; 0x80000000
   19000:	sdiv	r1, r1, r7
   19004:	cmp	r1, r0
   19008:	bge	19020 <__mempcpy_chk@plt+0x795c>
   1900c:	b	19058 <__mempcpy_chk@plt+0x7994>
   19010:	mvn	r1, #-2147483648	; 0x80000000
   19014:	sdiv	r1, r1, r0
   19018:	cmp	r7, r1
   1901c:	blt	19058 <__mempcpy_chk@plt+0x7994>
   19020:	mul	r6, r7, r0
   19024:	mov	r0, r5
   19028:	mov	r1, r6
   1902c:	bl	192e8 <__mempcpy_chk@plt+0x7c24>
   19030:	cmp	r6, #0
   19034:	movwne	r6, #1
   19038:	cmp	r0, #0
   1903c:	bne	19050 <__mempcpy_chk@plt+0x798c>
   19040:	clz	r1, r5
   19044:	lsr	r1, r1, #5
   19048:	orrs	r1, r1, r6
   1904c:	bne	19058 <__mempcpy_chk@plt+0x7994>
   19050:	str	r7, [r8]
   19054:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19058:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   1905c:	push	{fp, lr}
   19060:	mov	fp, sp
   19064:	mov	r1, #1
   19068:	bl	19264 <__mempcpy_chk@plt+0x7ba0>
   1906c:	cmp	r0, #0
   19070:	popne	{fp, pc}
   19074:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   19078:	push	{fp, lr}
   1907c:	mov	fp, sp
   19080:	bl	19264 <__mempcpy_chk@plt+0x7ba0>
   19084:	cmp	r0, #0
   19088:	popne	{fp, pc}
   1908c:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   19090:	push	{fp, lr}
   19094:	mov	fp, sp
   19098:	mov	r1, #1
   1909c:	bl	19264 <__mempcpy_chk@plt+0x7ba0>
   190a0:	cmp	r0, #0
   190a4:	popne	{fp, pc}
   190a8:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   190ac:	push	{fp, lr}
   190b0:	mov	fp, sp
   190b4:	bl	19264 <__mempcpy_chk@plt+0x7ba0>
   190b8:	cmp	r0, #0
   190bc:	popne	{fp, pc}
   190c0:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   190c4:	push	{r4, r5, fp, lr}
   190c8:	add	fp, sp, #8
   190cc:	mov	r5, r0
   190d0:	mov	r0, r1
   190d4:	mov	r4, r1
   190d8:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   190dc:	cmp	r0, #0
   190e0:	beq	190f4 <__mempcpy_chk@plt+0x7a30>
   190e4:	mov	r1, r5
   190e8:	mov	r2, r4
   190ec:	pop	{r4, r5, fp, lr}
   190f0:	b	113e8 <memcpy@plt>
   190f4:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   190f8:	push	{r4, r5, fp, lr}
   190fc:	add	fp, sp, #8
   19100:	mov	r5, r0
   19104:	mov	r0, r1
   19108:	mov	r4, r1
   1910c:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   19110:	cmp	r0, #0
   19114:	beq	19128 <__mempcpy_chk@plt+0x7a64>
   19118:	mov	r1, r5
   1911c:	mov	r2, r4
   19120:	pop	{r4, r5, fp, lr}
   19124:	b	113e8 <memcpy@plt>
   19128:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   1912c:	push	{r4, r5, fp, lr}
   19130:	add	fp, sp, #8
   19134:	mov	r5, r0
   19138:	add	r0, r1, #1
   1913c:	mov	r4, r1
   19140:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   19144:	cmp	r0, #0
   19148:	beq	19164 <__mempcpy_chk@plt+0x7aa0>
   1914c:	mov	r1, #0
   19150:	mov	r2, r4
   19154:	strb	r1, [r0, r4]
   19158:	mov	r1, r5
   1915c:	pop	{r4, r5, fp, lr}
   19160:	b	113e8 <memcpy@plt>
   19164:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   19168:	push	{r4, r5, fp, lr}
   1916c:	add	fp, sp, #8
   19170:	mov	r4, r0
   19174:	bl	11538 <strlen@plt>
   19178:	add	r5, r0, #1
   1917c:	mov	r0, r5
   19180:	bl	192b8 <__mempcpy_chk@plt+0x7bf4>
   19184:	cmp	r0, #0
   19188:	beq	1919c <__mempcpy_chk@plt+0x7ad8>
   1918c:	mov	r1, r4
   19190:	mov	r2, r5
   19194:	pop	{r4, r5, fp, lr}
   19198:	b	113e8 <memcpy@plt>
   1919c:	bl	191a0 <__mempcpy_chk@plt+0x7adc>
   191a0:	push	{fp, lr}
   191a4:	mov	fp, sp
   191a8:	movw	r0, #49484	; 0xc14c
   191ac:	movw	r1, #46659	; 0xb643
   191b0:	mov	r2, #5
   191b4:	movt	r0, #2
   191b8:	movt	r1, #1
   191bc:	ldr	r4, [r0]
   191c0:	mov	r0, #0
   191c4:	bl	1140c <dcgettext@plt>
   191c8:	movw	r2, #46763	; 0xb6ab
   191cc:	mov	r3, r0
   191d0:	mov	r0, r4
   191d4:	mov	r1, #0
   191d8:	movt	r2, #1
   191dc:	bl	114a8 <error@plt>
   191e0:	bl	11688 <abort@plt>
   191e4:	push	{r4, sl, fp, lr}
   191e8:	add	fp, sp, #8
   191ec:	sub	sp, sp, #8
   191f0:	movw	r0, #49584	; 0xc1b0
   191f4:	mov	r4, #0
   191f8:	mov	r1, sp
   191fc:	mov	r2, #10
   19200:	movt	r0, #2
   19204:	str	r4, [sp, #4]
   19208:	str	r4, [sp]
   1920c:	ldr	r3, [r0]
   19210:	add	r0, sp, #4
   19214:	bl	11364 <__getdelim@plt>
   19218:	cmp	r0, #1
   1921c:	blt	19250 <__mempcpy_chk@plt+0x7b8c>
   19220:	sub	r1, r0, #1
   19224:	ldr	r0, [sp, #4]
   19228:	ldrb	r2, [r0, r1]
   1922c:	cmp	r2, #10
   19230:	bne	19240 <__mempcpy_chk@plt+0x7b7c>
   19234:	mov	r2, #0
   19238:	strb	r2, [r0, r1]
   1923c:	ldr	r0, [sp, #4]
   19240:	bl	115ec <rpmatch@plt>
   19244:	cmp	r0, #0
   19248:	mov	r4, #0
   1924c:	movwgt	r4, #1
   19250:	ldr	r0, [sp, #4]
   19254:	bl	14948 <__mempcpy_chk@plt+0x3284>
   19258:	mov	r0, r4
   1925c:	sub	sp, fp, #8
   19260:	pop	{r4, sl, fp, pc}
   19264:	clz	r2, r1
   19268:	clz	r3, r0
   1926c:	lsr	r2, r2, #5
   19270:	lsr	r3, r3, #5
   19274:	orrs	r2, r3, r2
   19278:	movwne	r1, #1
   1927c:	movwne	r0, #1
   19280:	cmp	r1, #0
   19284:	beq	192b4 <__mempcpy_chk@plt+0x7bf0>
   19288:	mvn	r2, #-2147483648	; 0x80000000
   1928c:	udiv	r2, r2, r1
   19290:	cmp	r2, r0
   19294:	bcs	192b4 <__mempcpy_chk@plt+0x7bf0>
   19298:	push	{fp, lr}
   1929c:	mov	fp, sp
   192a0:	bl	11550 <__errno_location@plt>
   192a4:	mov	r1, #12
   192a8:	str	r1, [r0]
   192ac:	mov	r0, #0
   192b0:	pop	{fp, pc}
   192b4:	b	11340 <calloc@plt>
   192b8:	cmp	r0, #0
   192bc:	movweq	r0, #1
   192c0:	cmn	r0, #1
   192c4:	ble	192cc <__mempcpy_chk@plt+0x7c08>
   192c8:	b	114cc <malloc@plt>
   192cc:	push	{fp, lr}
   192d0:	mov	fp, sp
   192d4:	bl	11550 <__errno_location@plt>
   192d8:	mov	r1, #12
   192dc:	str	r1, [r0]
   192e0:	mov	r0, #0
   192e4:	pop	{fp, pc}
   192e8:	push	{fp, lr}
   192ec:	mov	fp, sp
   192f0:	cmp	r0, #0
   192f4:	beq	19310 <__mempcpy_chk@plt+0x7c4c>
   192f8:	cmp	r1, #0
   192fc:	beq	1931c <__mempcpy_chk@plt+0x7c58>
   19300:	cmn	r1, #1
   19304:	ble	19328 <__mempcpy_chk@plt+0x7c64>
   19308:	pop	{fp, lr}
   1930c:	b	11418 <realloc@plt>
   19310:	mov	r0, r1
   19314:	pop	{fp, lr}
   19318:	b	192b8 <__mempcpy_chk@plt+0x7bf4>
   1931c:	bl	14948 <__mempcpy_chk@plt+0x3284>
   19320:	mov	r0, #0
   19324:	pop	{fp, pc}
   19328:	bl	11550 <__errno_location@plt>
   1932c:	mov	r1, #12
   19330:	str	r1, [r0]
   19334:	mov	r0, #0
   19338:	pop	{fp, pc}
   1933c:	mov	r0, #1
   19340:	b	117c0 <__mempcpy_chk@plt+0xfc>
   19344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19348:	add	fp, sp, #28
   1934c:	sub	sp, sp, #12
   19350:	mov	r4, r3
   19354:	mov	r6, r2
   19358:	mov	r5, r1
   1935c:	mov	sl, r0
   19360:	bl	11538 <strlen@plt>
   19364:	ldr	r8, [r5]
   19368:	cmp	r8, #0
   1936c:	beq	1942c <__mempcpy_chk@plt+0x7d68>
   19370:	mov	r7, r0
   19374:	mov	r0, #0
   19378:	add	r9, r5, #4
   1937c:	mov	r5, #0
   19380:	str	r6, [sp, #4]
   19384:	str	r0, [sp]
   19388:	mvn	r0, #0
   1938c:	str	r0, [sp, #8]
   19390:	b	193ac <__mempcpy_chk@plt+0x7ce8>
   19394:	str	r5, [sp, #8]
   19398:	ldr	r8, [r9, r5, lsl #2]
   1939c:	add	r6, r6, r4
   193a0:	add	r5, r5, #1
   193a4:	cmp	r8, #0
   193a8:	beq	19414 <__mempcpy_chk@plt+0x7d50>
   193ac:	mov	r0, r8
   193b0:	mov	r1, sl
   193b4:	mov	r2, r7
   193b8:	bl	1167c <strncmp@plt>
   193bc:	cmp	r0, #0
   193c0:	bne	19398 <__mempcpy_chk@plt+0x7cd4>
   193c4:	mov	r0, r8
   193c8:	bl	11538 <strlen@plt>
   193cc:	cmp	r0, r7
   193d0:	beq	19430 <__mempcpy_chk@plt+0x7d6c>
   193d4:	ldr	r0, [sp, #8]
   193d8:	cmn	r0, #1
   193dc:	beq	19394 <__mempcpy_chk@plt+0x7cd0>
   193e0:	ldr	r0, [sp, #4]
   193e4:	cmp	r0, #0
   193e8:	beq	19408 <__mempcpy_chk@plt+0x7d44>
   193ec:	ldr	r1, [sp, #8]
   193f0:	mov	r2, r4
   193f4:	mla	r0, r1, r4, r0
   193f8:	mov	r1, r6
   193fc:	bl	1152c <bcmp@plt>
   19400:	cmp	r0, #0
   19404:	beq	19398 <__mempcpy_chk@plt+0x7cd4>
   19408:	mov	r0, #1
   1940c:	str	r0, [sp]
   19410:	b	19398 <__mempcpy_chk@plt+0x7cd4>
   19414:	ldr	r0, [sp]
   19418:	tst	r0, #1
   1941c:	ldr	r0, [sp, #8]
   19420:	mvnne	r0, #1
   19424:	sub	sp, fp, #28
   19428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1942c:	mvn	r5, #0
   19430:	mov	r0, r5
   19434:	sub	sp, fp, #28
   19438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1943c:	push	{r4, r5, r6, r7, fp, lr}
   19440:	add	fp, sp, #16
   19444:	mov	r5, r0
   19448:	ldr	r0, [r1]
   1944c:	mvn	r4, #0
   19450:	cmp	r0, #0
   19454:	beq	19480 <__mempcpy_chk@plt+0x7dbc>
   19458:	add	r7, r1, #4
   1945c:	mov	r6, #0
   19460:	mov	r1, r5
   19464:	bl	11370 <strcmp@plt>
   19468:	cmp	r0, #0
   1946c:	beq	19488 <__mempcpy_chk@plt+0x7dc4>
   19470:	ldr	r0, [r7, r6, lsl #2]
   19474:	add	r6, r6, #1
   19478:	cmp	r0, #0
   1947c:	bne	19460 <__mempcpy_chk@plt+0x7d9c>
   19480:	mov	r0, r4
   19484:	pop	{r4, r5, r6, r7, fp, pc}
   19488:	mov	r0, r6
   1948c:	pop	{r4, r5, r6, r7, fp, pc}
   19490:	push	{r4, r5, r6, sl, fp, lr}
   19494:	add	fp, sp, #16
   19498:	sub	sp, sp, #8
   1949c:	mov	r5, r0
   194a0:	movw	r0, #46676	; 0xb654
   194a4:	mov	r4, r1
   194a8:	movw	r1, #46703	; 0xb66f
   194ac:	cmn	r2, #1
   194b0:	mov	r2, #5
   194b4:	movt	r0, #1
   194b8:	movt	r1, #1
   194bc:	moveq	r1, r0
   194c0:	mov	r0, #0
   194c4:	bl	1140c <dcgettext@plt>
   194c8:	mov	r6, r0
   194cc:	mov	r0, #0
   194d0:	mov	r1, #8
   194d4:	mov	r2, r4
   194d8:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   194dc:	mov	r4, r0
   194e0:	mov	r0, #1
   194e4:	mov	r1, r5
   194e8:	bl	17b1c <__mempcpy_chk@plt+0x6458>
   194ec:	str	r0, [sp]
   194f0:	mov	r0, #0
   194f4:	mov	r1, #0
   194f8:	mov	r2, r6
   194fc:	mov	r3, r4
   19500:	bl	114a8 <error@plt>
   19504:	sub	sp, fp, #16
   19508:	pop	{r4, r5, r6, sl, fp, pc}
   1950c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19510:	add	fp, sp, #28
   19514:	sub	sp, sp, #4
   19518:	mov	sl, r1
   1951c:	movw	r1, #46732	; 0xb68c
   19520:	mov	r4, r2
   19524:	mov	r6, r0
   19528:	mov	r0, #0
   1952c:	mov	r2, #5
   19530:	mov	r8, #0
   19534:	movt	r1, #1
   19538:	bl	1140c <dcgettext@plt>
   1953c:	movw	r1, #49576	; 0xc1a8
   19540:	movt	r1, #2
   19544:	ldr	r1, [r1]
   19548:	bl	1134c <fputs_unlocked@plt>
   1954c:	ldr	r7, [r6]
   19550:	cmp	r7, #0
   19554:	beq	19610 <__mempcpy_chk@plt+0x7f4c>
   19558:	add	r0, r6, #4
   1955c:	mov	r9, #0
   19560:	mov	r6, #0
   19564:	str	r0, [sp]
   19568:	cmp	r9, #0
   1956c:	bne	195c4 <__mempcpy_chk@plt+0x7f00>
   19570:	mov	r5, #0
   19574:	movw	r0, #49576	; 0xc1a8
   19578:	movt	r0, #2
   1957c:	ldr	r6, [r0]
   19580:	mov	r0, r7
   19584:	bl	17b2c <__mempcpy_chk@plt+0x6468>
   19588:	movw	r2, #46753	; 0xb6a1
   1958c:	mov	r3, r0
   19590:	mov	r0, r6
   19594:	mov	r1, #1
   19598:	movt	r2, #1
   1959c:	bl	115b0 <__fprintf_chk@plt>
   195a0:	add	r6, sl, r5
   195a4:	ldr	r0, [sp]
   195a8:	add	r8, r8, r4
   195ac:	ldr	r7, [r0, -r9, lsl #2]
   195b0:	sub	r9, r9, #1
   195b4:	cmp	r7, #0
   195b8:	beq	19610 <__mempcpy_chk@plt+0x7f4c>
   195bc:	cmp	r9, #0
   195c0:	beq	19570 <__mempcpy_chk@plt+0x7eac>
   195c4:	add	r1, sl, r8
   195c8:	mov	r0, r6
   195cc:	mov	r2, r4
   195d0:	bl	1152c <bcmp@plt>
   195d4:	cmp	r0, #0
   195d8:	mov	r5, r8
   195dc:	bne	19574 <__mempcpy_chk@plt+0x7eb0>
   195e0:	movw	r0, #49576	; 0xc1a8
   195e4:	movt	r0, #2
   195e8:	ldr	r5, [r0]
   195ec:	mov	r0, r7
   195f0:	bl	17b2c <__mempcpy_chk@plt+0x6468>
   195f4:	movw	r2, #46761	; 0xb6a9
   195f8:	mov	r3, r0
   195fc:	mov	r0, r5
   19600:	mov	r1, #1
   19604:	movt	r2, #1
   19608:	bl	115b0 <__fprintf_chk@plt>
   1960c:	b	195a4 <__mempcpy_chk@plt+0x7ee0>
   19610:	movw	r0, #49576	; 0xc1a8
   19614:	movt	r0, #2
   19618:	ldr	r0, [r0]
   1961c:	ldr	r1, [r0, #20]
   19620:	ldr	r2, [r0, #24]
   19624:	cmp	r1, r2
   19628:	addcc	r2, r1, #1
   1962c:	strcc	r2, [r0, #20]
   19630:	movcc	r0, #10
   19634:	strbcc	r0, [r1]
   19638:	subcc	sp, fp, #28
   1963c:	popcc	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19640:	mov	r1, #10
   19644:	sub	sp, fp, #28
   19648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1964c:	b	115f8 <__overflow@plt>
   19650:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19654:	add	fp, sp, #28
   19658:	sub	sp, sp, #20
   1965c:	mov	r9, r0
   19660:	ldr	r0, [fp, #16]
   19664:	mov	r8, r3
   19668:	mov	sl, r2
   1966c:	mov	r7, r1
   19670:	cmp	r0, #0
   19674:	beq	19734 <__mempcpy_chk@plt+0x8070>
   19678:	mov	r0, r7
   1967c:	str	r9, [sp, #8]
   19680:	str	r8, [sp, #16]
   19684:	bl	11538 <strlen@plt>
   19688:	ldr	r9, [sl]
   1968c:	cmp	r9, #0
   19690:	beq	197a4 <__mempcpy_chk@plt+0x80e0>
   19694:	str	sl, [sp, #4]
   19698:	add	r8, sl, #4
   1969c:	ldr	sl, [sp, #16]
   196a0:	mov	r4, r0
   196a4:	mov	r0, #0
   196a8:	mvn	r6, #0
   196ac:	mov	r5, #0
   196b0:	str	r0, [sp, #12]
   196b4:	b	196d4 <__mempcpy_chk@plt+0x8010>
   196b8:	mov	r6, r5
   196bc:	ldr	r9, [r8, r5, lsl #2]
   196c0:	ldr	r0, [fp, #8]
   196c4:	add	r5, r5, #1
   196c8:	add	sl, sl, r0
   196cc:	cmp	r9, #0
   196d0:	beq	19774 <__mempcpy_chk@plt+0x80b0>
   196d4:	mov	r0, r9
   196d8:	mov	r1, r7
   196dc:	mov	r2, r4
   196e0:	bl	1167c <strncmp@plt>
   196e4:	cmp	r0, #0
   196e8:	bne	196bc <__mempcpy_chk@plt+0x7ff8>
   196ec:	mov	r0, r9
   196f0:	bl	11538 <strlen@plt>
   196f4:	cmp	r0, r4
   196f8:	beq	19828 <__mempcpy_chk@plt+0x8164>
   196fc:	cmn	r6, #1
   19700:	beq	196b8 <__mempcpy_chk@plt+0x7ff4>
   19704:	ldr	r0, [sp, #16]
   19708:	cmp	r0, #0
   1970c:	beq	19728 <__mempcpy_chk@plt+0x8064>
   19710:	ldr	r2, [fp, #8]
   19714:	mov	r1, sl
   19718:	mla	r0, r6, r2, r0
   1971c:	bl	1152c <bcmp@plt>
   19720:	cmp	r0, #0
   19724:	beq	196bc <__mempcpy_chk@plt+0x7ff8>
   19728:	mov	r0, #1
   1972c:	str	r0, [sp, #12]
   19730:	b	196bc <__mempcpy_chk@plt+0x7ff8>
   19734:	ldr	r0, [sl]
   19738:	movw	r4, #46676	; 0xb654
   1973c:	movt	r4, #1
   19740:	cmp	r0, #0
   19744:	beq	197b4 <__mempcpy_chk@plt+0x80f0>
   19748:	add	r5, sl, #4
   1974c:	mov	r6, #0
   19750:	mov	r1, r7
   19754:	bl	11370 <strcmp@plt>
   19758:	cmp	r0, #0
   1975c:	beq	1978c <__mempcpy_chk@plt+0x80c8>
   19760:	ldr	r0, [r5, r6, lsl #2]
   19764:	add	r6, r6, #1
   19768:	cmp	r0, #0
   1976c:	bne	19750 <__mempcpy_chk@plt+0x808c>
   19770:	b	197b4 <__mempcpy_chk@plt+0x80f0>
   19774:	ldr	r0, [sp, #12]
   19778:	ldr	r8, [sp, #16]
   1977c:	ldr	sl, [sp, #4]
   19780:	ldr	r9, [sp, #8]
   19784:	tst	r0, #1
   19788:	bne	19798 <__mempcpy_chk@plt+0x80d4>
   1978c:	cmn	r6, #1
   19790:	bgt	1981c <__mempcpy_chk@plt+0x8158>
   19794:	beq	197ac <__mempcpy_chk@plt+0x80e8>
   19798:	movw	r4, #46703	; 0xb66f
   1979c:	movt	r4, #1
   197a0:	b	197b4 <__mempcpy_chk@plt+0x80f0>
   197a4:	ldr	r8, [sp, #16]
   197a8:	ldr	r9, [sp, #8]
   197ac:	movw	r4, #46676	; 0xb654
   197b0:	movt	r4, #1
   197b4:	ldr	r6, [fp, #12]
   197b8:	mov	r0, #0
   197bc:	mov	r1, r4
   197c0:	mov	r2, #5
   197c4:	bl	1140c <dcgettext@plt>
   197c8:	mov	r4, r0
   197cc:	mov	r0, #0
   197d0:	mov	r1, #8
   197d4:	mov	r2, r7
   197d8:	bl	1755c <__mempcpy_chk@plt+0x5e98>
   197dc:	mov	r5, r0
   197e0:	mov	r0, #1
   197e4:	mov	r1, r9
   197e8:	bl	17b1c <__mempcpy_chk@plt+0x6458>
   197ec:	str	r0, [sp]
   197f0:	mov	r0, #0
   197f4:	mov	r1, #0
   197f8:	mov	r2, r4
   197fc:	mov	r3, r5
   19800:	bl	114a8 <error@plt>
   19804:	ldr	r2, [fp, #8]
   19808:	mov	r0, sl
   1980c:	mov	r1, r8
   19810:	bl	1950c <__mempcpy_chk@plt+0x7e48>
   19814:	blx	r6
   19818:	mvn	r6, #0
   1981c:	mov	r0, r6
   19820:	sub	sp, fp, #28
   19824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19828:	ldr	r8, [sp, #16]
   1982c:	ldr	sl, [sp, #4]
   19830:	ldr	r9, [sp, #8]
   19834:	mov	r6, r5
   19838:	cmn	r6, #1
   1983c:	bgt	1981c <__mempcpy_chk@plt+0x8158>
   19840:	b	19794 <__mempcpy_chk@plt+0x80d0>
   19844:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19848:	add	fp, sp, #24
   1984c:	ldr	r6, [r1]
   19850:	cmp	r6, #0
   19854:	beq	198b8 <__mempcpy_chk@plt+0x81f4>
   19858:	mov	r8, r1
   1985c:	mov	r7, r2
   19860:	mov	r1, r2
   19864:	mov	r2, r3
   19868:	mov	r4, r3
   1986c:	mov	r9, r0
   19870:	bl	1152c <bcmp@plt>
   19874:	cmp	r0, #0
   19878:	beq	198b0 <__mempcpy_chk@plt+0x81ec>
   1987c:	add	r7, r7, r4
   19880:	add	r5, r8, #4
   19884:	ldr	r6, [r5]
   19888:	cmp	r6, #0
   1988c:	beq	198b8 <__mempcpy_chk@plt+0x81f4>
   19890:	mov	r0, r9
   19894:	mov	r1, r7
   19898:	mov	r2, r4
   1989c:	bl	1152c <bcmp@plt>
   198a0:	add	r7, r7, r4
   198a4:	add	r5, r5, #4
   198a8:	cmp	r0, #0
   198ac:	bne	19884 <__mempcpy_chk@plt+0x81c0>
   198b0:	mov	r0, r6
   198b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   198b8:	mov	r6, #0
   198bc:	mov	r0, r6
   198c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   198c4:	push	{r4, r5, r6, sl, fp, lr}
   198c8:	add	fp, sp, #16
   198cc:	mov	r4, r0
   198d0:	bl	11490 <__fpending@plt>
   198d4:	ldr	r6, [r4]
   198d8:	mov	r5, r0
   198dc:	mov	r0, r4
   198e0:	bl	19948 <__mempcpy_chk@plt+0x8284>
   198e4:	tst	r6, #32
   198e8:	bne	19920 <__mempcpy_chk@plt+0x825c>
   198ec:	cmp	r0, #0
   198f0:	mov	r4, r0
   198f4:	mvnne	r4, #0
   198f8:	cmp	r5, #0
   198fc:	bne	1992c <__mempcpy_chk@plt+0x8268>
   19900:	cmp	r0, #0
   19904:	beq	1992c <__mempcpy_chk@plt+0x8268>
   19908:	bl	11550 <__errno_location@plt>
   1990c:	ldr	r0, [r0]
   19910:	subs	r4, r0, #9
   19914:	mvnne	r4, #0
   19918:	mov	r0, r4
   1991c:	pop	{r4, r5, r6, sl, fp, pc}
   19920:	mvn	r4, #0
   19924:	cmp	r0, #0
   19928:	beq	19934 <__mempcpy_chk@plt+0x8270>
   1992c:	mov	r0, r4
   19930:	pop	{r4, r5, r6, sl, fp, pc}
   19934:	bl	11550 <__errno_location@plt>
   19938:	mov	r1, #0
   1993c:	str	r1, [r0]
   19940:	mov	r0, r4
   19944:	pop	{r4, r5, r6, sl, fp, pc}
   19948:	push	{r4, r5, r6, sl, fp, lr}
   1994c:	add	fp, sp, #16
   19950:	sub	sp, sp, #8
   19954:	mov	r4, r0
   19958:	bl	115a4 <fileno@plt>
   1995c:	cmn	r0, #1
   19960:	ble	199d4 <__mempcpy_chk@plt+0x8310>
   19964:	mov	r0, r4
   19968:	bl	114e4 <__freading@plt>
   1996c:	cmp	r0, #0
   19970:	beq	1999c <__mempcpy_chk@plt+0x82d8>
   19974:	mov	r0, r4
   19978:	bl	115a4 <fileno@plt>
   1997c:	mov	r1, #1
   19980:	mov	r2, #0
   19984:	mov	r3, #0
   19988:	str	r1, [sp]
   1998c:	bl	1146c <lseek64@plt>
   19990:	and	r0, r0, r1
   19994:	cmn	r0, #1
   19998:	beq	199d4 <__mempcpy_chk@plt+0x8310>
   1999c:	mov	r0, r4
   199a0:	bl	146e8 <__mempcpy_chk@plt+0x3024>
   199a4:	cmp	r0, #0
   199a8:	beq	199d4 <__mempcpy_chk@plt+0x8310>
   199ac:	bl	11550 <__errno_location@plt>
   199b0:	ldr	r6, [r0]
   199b4:	mov	r5, r0
   199b8:	mov	r0, r4
   199bc:	bl	115bc <fclose@plt>
   199c0:	cmp	r6, #0
   199c4:	strne	r6, [r5]
   199c8:	mvnne	r0, #0
   199cc:	sub	sp, fp, #16
   199d0:	pop	{r4, r5, r6, sl, fp, pc}
   199d4:	mov	r0, r4
   199d8:	sub	sp, fp, #16
   199dc:	pop	{r4, r5, r6, sl, fp, lr}
   199e0:	b	115bc <fclose@plt>
   199e4:	ldrb	r2, [r0]
   199e8:	cmp	r2, #0
   199ec:	beq	19a10 <__mempcpy_chk@plt+0x834c>
   199f0:	add	r3, r0, #1
   199f4:	mov	r0, #0
   199f8:	ror	r0, r0, #23
   199fc:	uxtab	r0, r0, r2
   19a00:	ldrb	r2, [r3], #1
   19a04:	cmp	r2, #0
   19a08:	bne	199f8 <__mempcpy_chk@plt+0x8334>
   19a0c:	b	19a14 <__mempcpy_chk@plt+0x8350>
   19a10:	mov	r0, #0
   19a14:	udiv	r2, r0, r1
   19a18:	mls	r0, r2, r1, r0
   19a1c:	bx	lr
   19a20:	push	{fp, lr}
   19a24:	mov	fp, sp
   19a28:	mov	r0, #14
   19a2c:	bl	1161c <nl_langinfo@plt>
   19a30:	movw	r1, #43828	; 0xab34
   19a34:	cmp	r0, #0
   19a38:	movt	r1, #1
   19a3c:	movne	r1, r0
   19a40:	movw	r0, #46766	; 0xb6ae
   19a44:	ldrb	r2, [r1]
   19a48:	movt	r0, #1
   19a4c:	cmp	r2, #0
   19a50:	movne	r0, r1
   19a54:	pop	{fp, pc}
   19a58:	push	{r4, r5, r6, r7, fp, lr}
   19a5c:	add	fp, sp, #16
   19a60:	sub	sp, sp, #8
   19a64:	cmp	r0, #0
   19a68:	add	r5, sp, #4
   19a6c:	mov	r7, r2
   19a70:	mov	r4, r1
   19a74:	movne	r5, r0
   19a78:	mov	r0, r5
   19a7c:	bl	1149c <mbrtowc@plt>
   19a80:	mov	r6, r0
   19a84:	cmp	r7, #0
   19a88:	beq	19ab0 <__mempcpy_chk@plt+0x83ec>
   19a8c:	cmn	r6, #2
   19a90:	bcc	19ab0 <__mempcpy_chk@plt+0x83ec>
   19a94:	mov	r0, #0
   19a98:	bl	19ce4 <__mempcpy_chk@plt+0x8620>
   19a9c:	cmp	r0, #0
   19aa0:	bne	19ab0 <__mempcpy_chk@plt+0x83ec>
   19aa4:	ldrb	r0, [r4]
   19aa8:	mov	r6, #1
   19aac:	str	r0, [r5]
   19ab0:	mov	r0, r6
   19ab4:	sub	sp, fp, #16
   19ab8:	pop	{r4, r5, r6, r7, fp, pc}
   19abc:	cmp	r2, #0
   19ac0:	beq	19af0 <__mempcpy_chk@plt+0x842c>
   19ac4:	mvn	r3, #0
   19ac8:	udiv	r3, r3, r2
   19acc:	cmp	r3, r1
   19ad0:	bcs	19af0 <__mempcpy_chk@plt+0x842c>
   19ad4:	push	{fp, lr}
   19ad8:	mov	fp, sp
   19adc:	bl	11550 <__errno_location@plt>
   19ae0:	mov	r1, #12
   19ae4:	str	r1, [r0]
   19ae8:	mov	r0, #0
   19aec:	pop	{fp, pc}
   19af0:	mul	r1, r2, r1
   19af4:	b	192e8 <__mempcpy_chk@plt+0x7c24>
   19af8:	mov	r1, #0
   19afc:	mov	r2, #3
   19b00:	b	19b04 <__mempcpy_chk@plt+0x8440>
   19b04:	sub	sp, sp, #8
   19b08:	push	{r4, r5, r6, r7, fp, lr}
   19b0c:	add	fp, sp, #16
   19b10:	sub	sp, sp, #8
   19b14:	mov	r5, r0
   19b18:	add	r0, fp, #8
   19b1c:	cmp	r1, #11
   19b20:	str	r2, [fp, #8]
   19b24:	str	r3, [fp, #12]
   19b28:	str	r0, [sp, #4]
   19b2c:	bhi	19b68 <__mempcpy_chk@plt+0x84a4>
   19b30:	mov	r0, #1
   19b34:	movw	r2, #1300	; 0x514
   19b38:	tst	r2, r0, lsl r1
   19b3c:	bne	19c28 <__mempcpy_chk@plt+0x8564>
   19b40:	movw	r2, #2570	; 0xa0a
   19b44:	tst	r2, r0, lsl r1
   19b48:	bne	19b90 <__mempcpy_chk@plt+0x84cc>
   19b4c:	cmp	r1, #0
   19b50:	bne	19b68 <__mempcpy_chk@plt+0x84a4>
   19b54:	ldr	r0, [sp, #4]
   19b58:	add	r1, r0, #4
   19b5c:	str	r1, [sp, #4]
   19b60:	mov	r1, #0
   19b64:	b	19c34 <__mempcpy_chk@plt+0x8570>
   19b68:	sub	r0, r1, #1024	; 0x400
   19b6c:	cmp	r0, #10
   19b70:	bhi	19c28 <__mempcpy_chk@plt+0x8564>
   19b74:	mov	r2, #1
   19b78:	movw	r3, #645	; 0x285
   19b7c:	tst	r3, r2, lsl r0
   19b80:	bne	19c28 <__mempcpy_chk@plt+0x8564>
   19b84:	movw	r3, #1282	; 0x502
   19b88:	tst	r3, r2, lsl r0
   19b8c:	beq	19b9c <__mempcpy_chk@plt+0x84d8>
   19b90:	mov	r0, r5
   19b94:	bl	115e0 <fcntl64@plt>
   19b98:	b	19c40 <__mempcpy_chk@plt+0x857c>
   19b9c:	cmp	r0, #6
   19ba0:	bne	19c28 <__mempcpy_chk@plt+0x8564>
   19ba4:	ldr	r0, [sp, #4]
   19ba8:	movw	r7, #49944	; 0xc318
   19bac:	movt	r7, #2
   19bb0:	add	r1, r0, #4
   19bb4:	str	r1, [sp, #4]
   19bb8:	ldr	r6, [r0]
   19bbc:	ldr	r0, [r7]
   19bc0:	cmp	r0, #0
   19bc4:	bmi	19c64 <__mempcpy_chk@plt+0x85a0>
   19bc8:	mov	r0, r5
   19bcc:	movw	r1, #1030	; 0x406
   19bd0:	mov	r2, r6
   19bd4:	bl	115e0 <fcntl64@plt>
   19bd8:	mov	r4, r0
   19bdc:	cmn	r0, #1
   19be0:	bgt	19c58 <__mempcpy_chk@plt+0x8594>
   19be4:	bl	11550 <__errno_location@plt>
   19be8:	ldr	r0, [r0]
   19bec:	cmp	r0, #22
   19bf0:	bne	19c58 <__mempcpy_chk@plt+0x8594>
   19bf4:	mov	r0, r5
   19bf8:	mov	r1, #0
   19bfc:	mov	r2, r6
   19c00:	bl	115e0 <fcntl64@plt>
   19c04:	mov	r4, r0
   19c08:	cmp	r0, #0
   19c0c:	bmi	19c44 <__mempcpy_chk@plt+0x8580>
   19c10:	mvn	r0, #0
   19c14:	str	r0, [r7]
   19c18:	mov	r0, #1
   19c1c:	cmp	r0, #0
   19c20:	bne	19c90 <__mempcpy_chk@plt+0x85cc>
   19c24:	b	19c44 <__mempcpy_chk@plt+0x8580>
   19c28:	ldr	r0, [sp, #4]
   19c2c:	add	r2, r0, #4
   19c30:	str	r2, [sp, #4]
   19c34:	ldr	r2, [r0]
   19c38:	mov	r0, r5
   19c3c:	bl	115e0 <fcntl64@plt>
   19c40:	mov	r4, r0
   19c44:	mov	r0, r4
   19c48:	sub	sp, fp, #16
   19c4c:	pop	{r4, r5, r6, r7, fp, lr}
   19c50:	add	sp, sp, #8
   19c54:	bx	lr
   19c58:	mov	r0, #1
   19c5c:	str	r0, [r7]
   19c60:	b	19c44 <__mempcpy_chk@plt+0x8580>
   19c64:	mov	r0, r5
   19c68:	mov	r1, #0
   19c6c:	mov	r2, r6
   19c70:	bl	115e0 <fcntl64@plt>
   19c74:	mov	r4, r0
   19c78:	ldr	r0, [r7]
   19c7c:	add	r0, r0, #1
   19c80:	clz	r0, r0
   19c84:	lsr	r0, r0, #5
   19c88:	cmp	r0, #0
   19c8c:	beq	19c44 <__mempcpy_chk@plt+0x8580>
   19c90:	cmp	r4, #0
   19c94:	bmi	19c44 <__mempcpy_chk@plt+0x8580>
   19c98:	mov	r0, r4
   19c9c:	mov	r1, #1
   19ca0:	bl	115e0 <fcntl64@plt>
   19ca4:	cmp	r0, #0
   19ca8:	bmi	19cc4 <__mempcpy_chk@plt+0x8600>
   19cac:	orr	r2, r0, #1
   19cb0:	mov	r0, r4
   19cb4:	mov	r1, #2
   19cb8:	bl	115e0 <fcntl64@plt>
   19cbc:	cmn	r0, #1
   19cc0:	bne	19c44 <__mempcpy_chk@plt+0x8580>
   19cc4:	bl	11550 <__errno_location@plt>
   19cc8:	ldr	r6, [r0]
   19ccc:	mov	r5, r0
   19cd0:	mov	r0, r4
   19cd4:	bl	11694 <close@plt>
   19cd8:	str	r6, [r5]
   19cdc:	mvn	r4, #0
   19ce0:	b	19c44 <__mempcpy_chk@plt+0x8580>
   19ce4:	push	{r4, sl, fp, lr}
   19ce8:	add	fp, sp, #8
   19cec:	sub	sp, sp, #264	; 0x108
   19cf0:	add	r1, sp, #7
   19cf4:	movw	r2, #257	; 0x101
   19cf8:	bl	19d50 <__mempcpy_chk@plt+0x868c>
   19cfc:	mov	r4, #0
   19d00:	cmp	r0, #0
   19d04:	bne	19d44 <__mempcpy_chk@plt+0x8680>
   19d08:	movw	r1, #46772	; 0xb6b4
   19d0c:	add	r0, sp, #7
   19d10:	mov	r2, #2
   19d14:	movt	r1, #1
   19d18:	bl	1152c <bcmp@plt>
   19d1c:	cmp	r0, #0
   19d20:	beq	19d44 <__mempcpy_chk@plt+0x8680>
   19d24:	movw	r1, #46774	; 0xb6b6
   19d28:	add	r0, sp, #7
   19d2c:	mov	r2, #6
   19d30:	movt	r1, #1
   19d34:	bl	1152c <bcmp@plt>
   19d38:	cmp	r0, #0
   19d3c:	mov	r4, r0
   19d40:	movwne	r4, #1
   19d44:	mov	r0, r4
   19d48:	sub	sp, fp, #8
   19d4c:	pop	{r4, sl, fp, pc}
   19d50:	push	{r4, r5, r6, r7, fp, lr}
   19d54:	add	fp, sp, #16
   19d58:	mov	r4, r1
   19d5c:	mov	r1, #0
   19d60:	mov	r6, r2
   19d64:	bl	11604 <setlocale@plt>
   19d68:	cmp	r0, #0
   19d6c:	beq	19d9c <__mempcpy_chk@plt+0x86d8>
   19d70:	mov	r7, r0
   19d74:	bl	11538 <strlen@plt>
   19d78:	cmp	r0, r6
   19d7c:	bcs	19db8 <__mempcpy_chk@plt+0x86f4>
   19d80:	add	r2, r0, #1
   19d84:	mov	r0, r4
   19d88:	mov	r1, r7
   19d8c:	bl	113e8 <memcpy@plt>
   19d90:	mov	r5, #0
   19d94:	mov	r0, r5
   19d98:	pop	{r4, r5, r6, r7, fp, pc}
   19d9c:	mov	r5, #22
   19da0:	cmp	r6, #0
   19da4:	beq	19de0 <__mempcpy_chk@plt+0x871c>
   19da8:	mov	r0, #0
   19dac:	strb	r0, [r4]
   19db0:	mov	r0, r5
   19db4:	pop	{r4, r5, r6, r7, fp, pc}
   19db8:	mov	r5, #34	; 0x22
   19dbc:	cmp	r6, #0
   19dc0:	beq	19de0 <__mempcpy_chk@plt+0x871c>
   19dc4:	sub	r6, r6, #1
   19dc8:	mov	r0, r4
   19dcc:	mov	r1, r7
   19dd0:	mov	r2, r6
   19dd4:	bl	113e8 <memcpy@plt>
   19dd8:	mov	r0, #0
   19ddc:	strb	r0, [r4, r6]
   19de0:	mov	r0, r5
   19de4:	pop	{r4, r5, r6, r7, fp, pc}
   19de8:	mov	r1, #0
   19dec:	b	11604 <setlocale@plt>
   19df0:	cmp	r3, #0
   19df4:	cmpeq	r2, #0
   19df8:	bne	19e10 <__mempcpy_chk@plt+0x874c>
   19dfc:	cmp	r1, #0
   19e00:	cmpeq	r0, #0
   19e04:	mvnne	r1, #0
   19e08:	mvnne	r0, #0
   19e0c:	b	19e2c <__mempcpy_chk@plt+0x8768>
   19e10:	sub	sp, sp, #8
   19e14:	push	{sp, lr}
   19e18:	bl	19e3c <__mempcpy_chk@plt+0x8778>
   19e1c:	ldr	lr, [sp, #4]
   19e20:	add	sp, sp, #8
   19e24:	pop	{r2, r3}
   19e28:	bx	lr
   19e2c:	push	{r1, lr}
   19e30:	mov	r0, #8
   19e34:	bl	11358 <raise@plt>
   19e38:	pop	{r1, pc}
   19e3c:	cmp	r1, r3
   19e40:	cmpeq	r0, r2
   19e44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e48:	mov	r4, r0
   19e4c:	movcc	r0, #0
   19e50:	mov	r5, r1
   19e54:	ldr	lr, [sp, #36]	; 0x24
   19e58:	movcc	r1, r0
   19e5c:	bcc	19f58 <__mempcpy_chk@plt+0x8894>
   19e60:	cmp	r3, #0
   19e64:	clzeq	ip, r2
   19e68:	clzne	ip, r3
   19e6c:	addeq	ip, ip, #32
   19e70:	cmp	r5, #0
   19e74:	clzeq	r1, r4
   19e78:	addeq	r1, r1, #32
   19e7c:	clzne	r1, r5
   19e80:	sub	ip, ip, r1
   19e84:	sub	sl, ip, #32
   19e88:	lsl	r9, r3, ip
   19e8c:	rsb	fp, ip, #32
   19e90:	orr	r9, r9, r2, lsl sl
   19e94:	orr	r9, r9, r2, lsr fp
   19e98:	lsl	r8, r2, ip
   19e9c:	cmp	r5, r9
   19ea0:	cmpeq	r4, r8
   19ea4:	movcc	r0, #0
   19ea8:	movcc	r1, r0
   19eac:	bcc	19ec8 <__mempcpy_chk@plt+0x8804>
   19eb0:	mov	r0, #1
   19eb4:	subs	r4, r4, r8
   19eb8:	lsl	r1, r0, sl
   19ebc:	orr	r1, r1, r0, lsr fp
   19ec0:	lsl	r0, r0, ip
   19ec4:	sbc	r5, r5, r9
   19ec8:	cmp	ip, #0
   19ecc:	beq	19f58 <__mempcpy_chk@plt+0x8894>
   19ed0:	lsr	r6, r8, #1
   19ed4:	orr	r6, r6, r9, lsl #31
   19ed8:	lsr	r7, r9, #1
   19edc:	mov	r2, ip
   19ee0:	b	19f04 <__mempcpy_chk@plt+0x8840>
   19ee4:	subs	r3, r4, r6
   19ee8:	sbc	r8, r5, r7
   19eec:	adds	r3, r3, r3
   19ef0:	adc	r8, r8, r8
   19ef4:	adds	r4, r3, #1
   19ef8:	adc	r5, r8, #0
   19efc:	subs	r2, r2, #1
   19f00:	beq	19f20 <__mempcpy_chk@plt+0x885c>
   19f04:	cmp	r5, r7
   19f08:	cmpeq	r4, r6
   19f0c:	bcs	19ee4 <__mempcpy_chk@plt+0x8820>
   19f10:	adds	r4, r4, r4
   19f14:	adc	r5, r5, r5
   19f18:	subs	r2, r2, #1
   19f1c:	bne	19f04 <__mempcpy_chk@plt+0x8840>
   19f20:	lsr	r3, r4, ip
   19f24:	orr	r3, r3, r5, lsl fp
   19f28:	lsr	r2, r5, ip
   19f2c:	orr	r3, r3, r5, lsr sl
   19f30:	adds	r0, r0, r4
   19f34:	mov	r4, r3
   19f38:	lsl	r3, r2, ip
   19f3c:	orr	r3, r3, r4, lsl sl
   19f40:	lsl	ip, r4, ip
   19f44:	orr	r3, r3, r4, lsr fp
   19f48:	adc	r1, r1, r5
   19f4c:	subs	r0, r0, ip
   19f50:	mov	r5, r2
   19f54:	sbc	r1, r1, r3
   19f58:	cmp	lr, #0
   19f5c:	strdne	r4, [lr]
   19f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19f68:	mov	r7, r0
   19f6c:	ldr	r6, [pc, #72]	; 19fbc <__mempcpy_chk@plt+0x88f8>
   19f70:	ldr	r5, [pc, #72]	; 19fc0 <__mempcpy_chk@plt+0x88fc>
   19f74:	add	r6, pc, r6
   19f78:	add	r5, pc, r5
   19f7c:	sub	r6, r6, r5
   19f80:	mov	r8, r1
   19f84:	mov	r9, r2
   19f88:	bl	11320 <calloc@plt-0x20>
   19f8c:	asrs	r6, r6, #2
   19f90:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f94:	mov	r4, #0
   19f98:	add	r4, r4, #1
   19f9c:	ldr	r3, [r5], #4
   19fa0:	mov	r2, r9
   19fa4:	mov	r1, r8
   19fa8:	mov	r0, r7
   19fac:	blx	r3
   19fb0:	cmp	r6, r4
   19fb4:	bne	19f98 <__mempcpy_chk@plt+0x88d4>
   19fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19fbc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   19fc0:	andeq	r1, r1, r8, lsl #31
   19fc4:	bx	lr
   19fc8:	ldr	r3, [pc, #12]	; 19fdc <__mempcpy_chk@plt+0x8918>
   19fcc:	mov	r1, #0
   19fd0:	add	r3, pc, r3
   19fd4:	ldr	r2, [r3]
   19fd8:	b	1155c <__cxa_atexit@plt>
   19fdc:	andeq	r2, r1, ip, ror #2

Disassembly of section .fini:

00019fe0 <.fini>:
   19fe0:	push	{r3, lr}
   19fe4:	pop	{r3, pc}
