
../repos/coreutils/src/paste:     file format elf32-littlearm


Disassembly of section .init:

00010d68 <.init>:
   10d68:	push	{r3, lr}
   10d6c:	bl	11004 <putchar_unlocked@plt+0x48>
   10d70:	pop	{r3, pc}

Disassembly of section .plt:

00010d74 <calloc@plt-0x14>:
   10d74:	push	{lr}		; (str lr, [sp, #-4]!)
   10d78:	ldr	lr, [pc, #4]	; 10d84 <calloc@plt-0x4>
   10d7c:	add	lr, pc, lr
   10d80:	ldr	pc, [lr, #8]!
   10d84:	andeq	r5, r1, ip, ror r2

00010d88 <calloc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #636]!	; 0x27c

00010d94 <fputs_unlocked@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #628]!	; 0x274

00010da0 <strcmp@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #620]!	; 0x26c

00010dac <posix_fadvise64@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #612]!	; 0x264

00010db8 <fflush@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #604]!	; 0x25c

00010dc4 <free@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #596]!	; 0x254

00010dd0 <_exit@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #588]!	; 0x24c

00010ddc <memcpy@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #580]!	; 0x244

00010de8 <mbsinit@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #572]!	; 0x23c

00010df4 <fwrite_unlocked@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #564]!	; 0x234

00010e00 <memcmp@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #556]!	; 0x22c

00010e0c <getc_unlocked@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #548]!	; 0x224

00010e18 <dcgettext@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #540]!	; 0x21c

00010e24 <realloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #532]!	; 0x214

00010e30 <textdomain@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #524]!	; 0x20c

00010e3c <iswprint@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #516]!	; 0x204

00010e48 <fwrite@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #508]!	; 0x1fc

00010e54 <lseek64@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e60 <__ctype_get_mb_cur_max@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #492]!	; 0x1ec

00010e6c <__fpending@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #484]!	; 0x1e4

00010e78 <ferror_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #476]!	; 0x1dc

00010e84 <mbrtowc@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e90 <error@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #460]!	; 0x1cc

00010e9c <malloc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #452]!	; 0x1c4

00010ea8 <__libc_start_main@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #444]!	; 0x1bc

00010eb4 <__freading@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #436]!	; 0x1b4

00010ec0 <__gmon_start__@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #428]!	; 0x1ac

00010ecc <getopt_long@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #420]!	; 0x1a4

00010ed8 <__ctype_b_loc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #412]!	; 0x19c

00010ee4 <exit@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #404]!	; 0x194

00010ef0 <strlen@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #396]!	; 0x18c

00010efc <__errno_location@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #388]!	; 0x184

00010f08 <__cxa_atexit@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #380]!	; 0x17c

00010f14 <memset@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #372]!	; 0x174

00010f20 <__printf_chk@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #364]!	; 0x16c

00010f2c <fileno@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #356]!	; 0x164

00010f38 <__fprintf_chk@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #348]!	; 0x15c

00010f44 <fclose@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #340]!	; 0x154

00010f50 <fseeko64@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #332]!	; 0x14c

00010f5c <setlocale@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #324]!	; 0x144

00010f68 <strrchr@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #316]!	; 0x13c

00010f74 <nl_langinfo@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #308]!	; 0x134

00010f80 <clearerr_unlocked@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #300]!	; 0x12c

00010f8c <fopen64@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #292]!	; 0x124

00010f98 <bindtextdomain@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #284]!	; 0x11c

00010fa4 <strncmp@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #276]!	; 0x114

00010fb0 <abort@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #268]!	; 0x10c

00010fbc <putchar_unlocked@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #260]!	; 0x104

Disassembly of section .text:

00010fc8 <.text>:
   10fc8:	mov	fp, #0
   10fcc:	mov	lr, #0
   10fd0:	pop	{r1}		; (ldr r1, [sp], #4)
   10fd4:	mov	r2, sp
   10fd8:	push	{r2}		; (str r2, [sp, #-4]!)
   10fdc:	push	{r0}		; (str r0, [sp, #-4]!)
   10fe0:	ldr	ip, [pc, #16]	; 10ff8 <putchar_unlocked@plt+0x3c>
   10fe4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fe8:	ldr	r0, [pc, #12]	; 10ffc <putchar_unlocked@plt+0x40>
   10fec:	ldr	r3, [pc, #12]	; 11000 <putchar_unlocked@plt+0x44>
   10ff0:	bl	10ea8 <__libc_start_main@plt>
   10ff4:	bl	10fb0 <abort@plt>
   10ff8:	andeq	r4, r1, r0, lsl pc
   10ffc:	andeq	r1, r1, r8, asr #7
   11000:			; <UNDEFINED> instruction: 0x00014eb0
   11004:	ldr	r3, [pc, #20]	; 11020 <putchar_unlocked@plt+0x64>
   11008:	ldr	r2, [pc, #20]	; 11024 <putchar_unlocked@plt+0x68>
   1100c:	add	r3, pc, r3
   11010:	ldr	r2, [r3, r2]
   11014:	cmp	r2, #0
   11018:	bxeq	lr
   1101c:	b	10ec0 <__gmon_start__@plt>
   11020:	andeq	r4, r1, ip, ror #31
   11024:	andeq	r0, r0, ip, asr #1
   11028:	ldr	r0, [pc, #24]	; 11048 <putchar_unlocked@plt+0x8c>
   1102c:	ldr	r3, [pc, #24]	; 1104c <putchar_unlocked@plt+0x90>
   11030:	cmp	r3, r0
   11034:	bxeq	lr
   11038:	ldr	r3, [pc, #16]	; 11050 <putchar_unlocked@plt+0x94>
   1103c:	cmp	r3, #0
   11040:	bxeq	lr
   11044:	bx	r3
   11048:	andeq	r6, r2, r0, lsr #2
   1104c:	andeq	r6, r2, r0, lsr #2
   11050:	andeq	r0, r0, r0
   11054:	ldr	r0, [pc, #36]	; 11080 <putchar_unlocked@plt+0xc4>
   11058:	ldr	r1, [pc, #36]	; 11084 <putchar_unlocked@plt+0xc8>
   1105c:	sub	r1, r1, r0
   11060:	asr	r1, r1, #2
   11064:	add	r1, r1, r1, lsr #31
   11068:	asrs	r1, r1, #1
   1106c:	bxeq	lr
   11070:	ldr	r3, [pc, #16]	; 11088 <putchar_unlocked@plt+0xcc>
   11074:	cmp	r3, #0
   11078:	bxeq	lr
   1107c:	bx	r3
   11080:	andeq	r6, r2, r0, lsr #2
   11084:	andeq	r6, r2, r0, lsr #2
   11088:	andeq	r0, r0, r0
   1108c:	push	{r4, lr}
   11090:	ldr	r4, [pc, #24]	; 110b0 <putchar_unlocked@plt+0xf4>
   11094:	ldrb	r3, [r4]
   11098:	cmp	r3, #0
   1109c:	popne	{r4, pc}
   110a0:	bl	11028 <putchar_unlocked@plt+0x6c>
   110a4:	mov	r3, #1
   110a8:	strb	r3, [r4]
   110ac:	pop	{r4, pc}
   110b0:	andeq	r6, r2, r4, asr #2
   110b4:	b	11054 <putchar_unlocked@plt+0x98>
   110b8:	push	{fp, lr}
   110bc:	mov	fp, sp
   110c0:	mov	r4, r0
   110c4:	cmp	r0, #0
   110c8:	bne	111a0 <putchar_unlocked@plt+0x1e4>
   110cc:	movw	r1, #20323	; 0x4f63
   110d0:	movt	r1, #1
   110d4:	mov	r0, #0
   110d8:	mov	r2, #5
   110dc:	bl	10e18 <dcgettext@plt>
   110e0:	mov	r1, r0
   110e4:	movw	r0, #24924	; 0x615c
   110e8:	movt	r0, #2
   110ec:	ldr	r2, [r0]
   110f0:	mov	r0, #1
   110f4:	bl	10f20 <__printf_chk@plt>
   110f8:	movw	r1, #20356	; 0x4f84
   110fc:	movt	r1, #1
   11100:	mov	r0, #0
   11104:	mov	r2, #5
   11108:	bl	10e18 <dcgettext@plt>
   1110c:	movw	r5, #24892	; 0x613c
   11110:	movt	r5, #2
   11114:	ldr	r1, [r5]
   11118:	bl	10d94 <fputs_unlocked@plt>
   1111c:	bl	111e4 <putchar_unlocked@plt+0x228>
   11120:	bl	11214 <putchar_unlocked@plt+0x258>
   11124:	movw	r1, #20475	; 0x4ffb
   11128:	movt	r1, #1
   1112c:	mov	r0, #0
   11130:	mov	r2, #5
   11134:	bl	10e18 <dcgettext@plt>
   11138:	ldr	r1, [r5]
   1113c:	bl	10d94 <fputs_unlocked@plt>
   11140:	movw	r1, #20619	; 0x508b
   11144:	movt	r1, #1
   11148:	mov	r0, #0
   1114c:	mov	r2, #5
   11150:	bl	10e18 <dcgettext@plt>
   11154:	ldr	r1, [r5]
   11158:	bl	10d94 <fputs_unlocked@plt>
   1115c:	movw	r1, #20682	; 0x50ca
   11160:	movt	r1, #1
   11164:	mov	r0, #0
   11168:	mov	r2, #5
   1116c:	bl	10e18 <dcgettext@plt>
   11170:	ldr	r1, [r5]
   11174:	bl	10d94 <fputs_unlocked@plt>
   11178:	movw	r1, #20727	; 0x50f7
   1117c:	movt	r1, #1
   11180:	mov	r0, #0
   11184:	mov	r2, #5
   11188:	bl	10e18 <dcgettext@plt>
   1118c:	ldr	r1, [r5]
   11190:	bl	10d94 <fputs_unlocked@plt>
   11194:	bl	11244 <putchar_unlocked@plt+0x288>
   11198:	mov	r0, r4
   1119c:	bl	10ee4 <exit@plt>
   111a0:	movw	r0, #24880	; 0x6130
   111a4:	movt	r0, #2
   111a8:	ldr	r5, [r0]
   111ac:	movw	r1, #20284	; 0x4f3c
   111b0:	movt	r1, #1
   111b4:	mov	r0, #0
   111b8:	mov	r2, #5
   111bc:	bl	10e18 <dcgettext@plt>
   111c0:	mov	r2, r0
   111c4:	movw	r0, #24924	; 0x615c
   111c8:	movt	r0, #2
   111cc:	ldr	r3, [r0]
   111d0:	mov	r0, r5
   111d4:	mov	r1, #1
   111d8:	bl	10f38 <__fprintf_chk@plt>
   111dc:	mov	r0, r4
   111e0:	bl	10ee4 <exit@plt>
   111e4:	push	{fp, lr}
   111e8:	mov	fp, sp
   111ec:	movw	r1, #20918	; 0x51b6
   111f0:	movt	r1, #1
   111f4:	mov	r0, #0
   111f8:	mov	r2, #5
   111fc:	bl	10e18 <dcgettext@plt>
   11200:	movw	r1, #24892	; 0x613c
   11204:	movt	r1, #2
   11208:	ldr	r1, [r1]
   1120c:	pop	{fp, lr}
   11210:	b	10d94 <fputs_unlocked@plt>
   11214:	push	{fp, lr}
   11218:	mov	fp, sp
   1121c:	movw	r1, #20974	; 0x51ee
   11220:	movt	r1, #1
   11224:	mov	r0, #0
   11228:	mov	r2, #5
   1122c:	bl	10e18 <dcgettext@plt>
   11230:	movw	r1, #24892	; 0x613c
   11234:	movt	r1, #2
   11238:	ldr	r1, [r1]
   1123c:	pop	{fp, lr}
   11240:	b	10d94 <fputs_unlocked@plt>
   11244:	push	{r4, r5, fp, lr}
   11248:	add	fp, sp, #8
   1124c:	sub	sp, sp, #56	; 0x38
   11250:	movw	r0, #21544	; 0x5428
   11254:	movt	r0, #1
   11258:	add	r1, r0, #32
   1125c:	mov	r5, sp
   11260:	mov	r2, #48	; 0x30
   11264:	vld1.64	{d16-d17}, [r1]
   11268:	add	r1, r5, #32
   1126c:	add	r3, r0, #16
   11270:	vld1.64	{d18-d19}, [r0], r2
   11274:	vld1.64	{d20-d21}, [r3]
   11278:	vldr	d22, [r0]
   1127c:	vst1.64	{d16-d17}, [r1]
   11280:	add	r0, r5, #16
   11284:	vst1.64	{d20-d21}, [r0]
   11288:	mov	r0, r5
   1128c:	vst1.64	{d18-d19}, [r0], r2
   11290:	vstr	d22, [r0]
   11294:	ldr	r1, [sp]
   11298:	cmp	r1, #0
   1129c:	beq	112c4 <putchar_unlocked@plt+0x308>
   112a0:	mov	r5, sp
   112a4:	movw	r4, #20781	; 0x512d
   112a8:	movt	r4, #1
   112ac:	mov	r0, r4
   112b0:	bl	10da0 <strcmp@plt>
   112b4:	cmp	r0, #0
   112b8:	ldrne	r1, [r5, #8]!
   112bc:	cmpne	r1, #0
   112c0:	bne	112ac <putchar_unlocked@plt+0x2f0>
   112c4:	ldr	r4, [r5, #4]
   112c8:	movw	r1, #21144	; 0x5298
   112cc:	movt	r1, #1
   112d0:	mov	r0, #0
   112d4:	mov	r2, #5
   112d8:	bl	10e18 <dcgettext@plt>
   112dc:	mov	r1, r0
   112e0:	movw	r2, #20821	; 0x5155
   112e4:	movt	r2, #1
   112e8:	movw	r3, #21167	; 0x52af
   112ec:	movt	r3, #1
   112f0:	mov	r0, #1
   112f4:	bl	10f20 <__printf_chk@plt>
   112f8:	movw	r5, #20781	; 0x512d
   112fc:	movt	r5, #1
   11300:	cmp	r4, #0
   11304:	moveq	r4, r5
   11308:	mov	r0, #5
   1130c:	mov	r1, #0
   11310:	bl	10f5c <setlocale@plt>
   11314:	cmp	r0, #0
   11318:	beq	11358 <putchar_unlocked@plt+0x39c>
   1131c:	movw	r1, #21207	; 0x52d7
   11320:	movt	r1, #1
   11324:	mov	r2, #3
   11328:	bl	10fa4 <strncmp@plt>
   1132c:	cmp	r0, #0
   11330:	beq	11358 <putchar_unlocked@plt+0x39c>
   11334:	movw	r1, #21211	; 0x52db
   11338:	movt	r1, #1
   1133c:	mov	r0, #0
   11340:	mov	r2, #5
   11344:	bl	10e18 <dcgettext@plt>
   11348:	movw	r1, #24892	; 0x613c
   1134c:	movt	r1, #2
   11350:	ldr	r1, [r1]
   11354:	bl	10d94 <fputs_unlocked@plt>
   11358:	movw	r1, #21282	; 0x5322
   1135c:	movt	r1, #1
   11360:	mov	r0, #0
   11364:	mov	r2, #5
   11368:	bl	10e18 <dcgettext@plt>
   1136c:	mov	r1, r0
   11370:	movw	r2, #21167	; 0x52af
   11374:	movt	r2, #1
   11378:	mov	r0, #1
   1137c:	mov	r3, r5
   11380:	bl	10f20 <__printf_chk@plt>
   11384:	movw	r1, #21309	; 0x533d
   11388:	movt	r1, #1
   1138c:	mov	r0, #0
   11390:	mov	r2, #5
   11394:	bl	10e18 <dcgettext@plt>
   11398:	mov	r1, r0
   1139c:	movw	r0, #21077	; 0x5255
   113a0:	movt	r0, #1
   113a4:	movw	r3, #20788	; 0x5134
   113a8:	movt	r3, #1
   113ac:	cmp	r4, r5
   113b0:	moveq	r3, r0
   113b4:	mov	r0, #1
   113b8:	mov	r2, r4
   113bc:	bl	10f20 <__printf_chk@plt>
   113c0:	sub	sp, fp, #8
   113c4:	pop	{r4, r5, fp, pc}
   113c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113cc:	add	fp, sp, #28
   113d0:	sub	sp, sp, #12
   113d4:	mov	r4, r1
   113d8:	mov	r5, r0
   113dc:	ldr	r0, [r1]
   113e0:	bl	122f8 <putchar_unlocked@plt+0x133c>
   113e4:	movw	r1, #20788	; 0x5134
   113e8:	movt	r1, #1
   113ec:	mov	r0, #6
   113f0:	bl	10f5c <setlocale@plt>
   113f4:	movw	r6, #20825	; 0x5159
   113f8:	movt	r6, #1
   113fc:	movw	r1, #20789	; 0x5135
   11400:	movt	r1, #1
   11404:	mov	r0, r6
   11408:	bl	10f98 <bindtextdomain@plt>
   1140c:	mov	r0, r6
   11410:	bl	10e30 <textdomain@plt>
   11414:	movw	r0, #8188	; 0x1ffc
   11418:	movt	r0, #1
   1141c:	bl	14f14 <putchar_unlocked@plt+0x3f58>
   11420:	movw	r0, #24904	; 0x6148
   11424:	movt	r0, #2
   11428:	mov	r7, #0
   1142c:	strb	r7, [r0]
   11430:	movw	r9, #24905	; 0x6149
   11434:	movt	r9, #2
   11438:	strb	r7, [r9]
   1143c:	movw	r6, #20787	; 0x5133
   11440:	movt	r6, #1
   11444:	movw	r8, #20813	; 0x514d
   11448:	movt	r8, #1
   1144c:	movw	sl, #21448	; 0x53c8
   11450:	movt	sl, #1
   11454:	b	11460 <putchar_unlocked@plt+0x4a4>
   11458:	mov	r0, #1
   1145c:	strb	r0, [r1]
   11460:	str	r7, [sp]
   11464:	mov	r0, r5
   11468:	mov	r1, r4
   1146c:	mov	r2, r8
   11470:	mov	r3, sl
   11474:	bl	10ecc <getopt_long@plt>
   11478:	cmp	r0, #99	; 0x63
   1147c:	ble	114cc <putchar_unlocked@plt+0x510>
   11480:	cmp	r0, #122	; 0x7a
   11484:	beq	114c0 <putchar_unlocked@plt+0x504>
   11488:	cmp	r0, #115	; 0x73
   1148c:	mov	r1, r9
   11490:	beq	11458 <putchar_unlocked@plt+0x49c>
   11494:	cmp	r0, #100	; 0x64
   11498:	bne	115f4 <putchar_unlocked@plt+0x638>
   1149c:	movw	r0, #24896	; 0x6140
   114a0:	movt	r0, #2
   114a4:	ldr	r6, [r0]
   114a8:	ldrb	r0, [r6]
   114ac:	cmp	r0, #0
   114b0:	movw	r0, #20818	; 0x5152
   114b4:	movt	r0, #1
   114b8:	moveq	r6, r0
   114bc:	b	11460 <putchar_unlocked@plt+0x4a4>
   114c0:	movw	r1, #24906	; 0x614a
   114c4:	movt	r1, #2
   114c8:	b	11458 <putchar_unlocked@plt+0x49c>
   114cc:	cmn	r0, #1
   114d0:	bne	11588 <putchar_unlocked@plt+0x5cc>
   114d4:	movw	r7, #24872	; 0x6128
   114d8:	movt	r7, #2
   114dc:	ldr	r0, [r7]
   114e0:	subs	r5, r5, r0
   114e4:	bne	114f8 <putchar_unlocked@plt+0x53c>
   114e8:	movw	r1, #21688	; 0x54b8
   114ec:	movt	r1, #1
   114f0:	str	r1, [r4, r0, lsl #2]
   114f4:	mov	r5, #1
   114f8:	mov	r0, r6
   114fc:	bl	11650 <putchar_unlocked@plt+0x694>
   11500:	cmp	r0, #0
   11504:	bne	115fc <putchar_unlocked@plt+0x640>
   11508:	movw	r0, #24905	; 0x6149
   1150c:	movt	r0, #2
   11510:	ldrb	r0, [r0]
   11514:	movw	r1, #6220	; 0x184c
   11518:	movt	r1, #1
   1151c:	movw	r2, #6872	; 0x1ad8
   11520:	movt	r2, #1
   11524:	cmp	r0, #0
   11528:	movne	r2, r1
   1152c:	ldr	r0, [r7]
   11530:	add	r1, r4, r0, lsl #2
   11534:	mov	r0, r5
   11538:	blx	r2
   1153c:	mov	r4, r0
   11540:	movw	r0, #24908	; 0x614c
   11544:	movt	r0, #2
   11548:	ldr	r0, [r0]
   1154c:	bl	1222c <putchar_unlocked@plt+0x1270>
   11550:	movw	r0, #24904	; 0x6148
   11554:	movt	r0, #2
   11558:	ldrb	r0, [r0]
   1155c:	cmp	r0, #1
   11560:	bne	1157c <putchar_unlocked@plt+0x5c0>
   11564:	movw	r0, #24888	; 0x6138
   11568:	movt	r0, #2
   1156c:	ldr	r0, [r0]
   11570:	bl	12124 <putchar_unlocked@plt+0x1168>
   11574:	cmn	r0, #1
   11578:	beq	11638 <putchar_unlocked@plt+0x67c>
   1157c:	eor	r0, r4, #1
   11580:	sub	sp, fp, #28
   11584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11588:	cmn	r0, #3
   1158c:	bne	115e4 <putchar_unlocked@plt+0x628>
   11590:	movw	r0, #24792	; 0x60d8
   11594:	movt	r0, #2
   11598:	ldr	r3, [r0]
   1159c:	movw	r0, #24892	; 0x613c
   115a0:	movt	r0, #2
   115a4:	ldr	r0, [r0]
   115a8:	mov	r1, #0
   115ac:	movw	r2, #20850	; 0x5172
   115b0:	movt	r2, #1
   115b4:	movw	r7, #20835	; 0x5163
   115b8:	movt	r7, #1
   115bc:	str	r7, [sp]
   115c0:	str	r2, [sp, #4]
   115c4:	str	r1, [sp, #8]
   115c8:	movw	r1, #20781	; 0x512d
   115cc:	movt	r1, #1
   115d0:	movw	r2, #20821	; 0x5155
   115d4:	movt	r2, #1
   115d8:	bl	14300 <putchar_unlocked@plt+0x3344>
   115dc:	mov	r0, #0
   115e0:	bl	10ee4 <exit@plt>
   115e4:	cmn	r0, #2
   115e8:	bne	115f4 <putchar_unlocked@plt+0x638>
   115ec:	mov	r0, #0
   115f0:	bl	110b8 <putchar_unlocked@plt+0xfc>
   115f4:	mov	r0, #1
   115f8:	bl	110b8 <putchar_unlocked@plt+0xfc>
   115fc:	movw	r1, #20866	; 0x5182
   11600:	movt	r1, #1
   11604:	mov	r0, #0
   11608:	mov	r2, #5
   1160c:	bl	10e18 <dcgettext@plt>
   11610:	mov	r4, r0
   11614:	mov	r0, #0
   11618:	mov	r1, #6
   1161c:	mov	r2, r6
   11620:	bl	139f0 <putchar_unlocked@plt+0x2a34>
   11624:	mov	r3, r0
   11628:	mov	r0, #1
   1162c:	mov	r1, #0
   11630:	mov	r2, r4
   11634:	bl	10e90 <error@plt>
   11638:	bl	10efc <__errno_location@plt>
   1163c:	ldr	r1, [r0]
   11640:	movw	r2, #21688	; 0x54b8
   11644:	movt	r2, #1
   11648:	mov	r0, #1
   1164c:	bl	10e90 <error@plt>
   11650:	push	{r4, sl, fp, lr}
   11654:	add	fp, sp, #8
   11658:	mov	r4, r0
   1165c:	bl	14798 <putchar_unlocked@plt+0x37dc>
   11660:	movw	r1, #24908	; 0x614c
   11664:	movt	r1, #2
   11668:	str	r0, [r1]
   1166c:	ldrb	r2, [r4]
   11670:	mov	ip, #0
   11674:	cmp	r2, #0
   11678:	bne	11690 <putchar_unlocked@plt+0x6d4>
   1167c:	b	11838 <putchar_unlocked@plt+0x87c>
   11680:	add	r0, r0, #1
   11684:	ldrb	r2, [r4]
   11688:	cmp	r2, #0
   1168c:	beq	11838 <putchar_unlocked@plt+0x87c>
   11690:	add	r3, r4, #1
   11694:	uxtb	r1, r2
   11698:	cmp	r1, #92	; 0x5c
   1169c:	bne	117e0 <putchar_unlocked@plt+0x824>
   116a0:	ldrb	r3, [r3]
   116a4:	sub	r1, r3, #48	; 0x30
   116a8:	cmp	r1, #70	; 0x46
   116ac:	bhi	1181c <putchar_unlocked@plt+0x860>
   116b0:	mov	lr, #0
   116b4:	add	r2, pc, #0
   116b8:	ldr	pc, [r2, r1, lsl #2]
   116bc:	andeq	r1, r1, r8, lsr #16
   116c0:	andeq	r1, r1, r4, lsr #16
   116c4:	andeq	r1, r1, r4, lsr #16
   116c8:	andeq	r1, r1, r4, lsr #16
   116cc:	andeq	r1, r1, r4, lsr #16
   116d0:	andeq	r1, r1, r4, lsr #16
   116d4:	andeq	r1, r1, r4, lsr #16
   116d8:	andeq	r1, r1, r4, lsr #16
   116dc:	andeq	r1, r1, r4, lsr #16
   116e0:	andeq	r1, r1, r4, lsr #16
   116e4:	andeq	r1, r1, r4, lsr #16
   116e8:	andeq	r1, r1, r4, lsr #16
   116ec:	andeq	r1, r1, r4, lsr #16
   116f0:	andeq	r1, r1, r4, lsr #16
   116f4:	andeq	r1, r1, r4, lsr #16
   116f8:	andeq	r1, r1, r4, lsr #16
   116fc:	andeq	r1, r1, r4, lsr #16
   11700:	andeq	r1, r1, r4, lsr #16
   11704:	andeq	r1, r1, r4, lsr #16
   11708:	andeq	r1, r1, r4, lsr #16
   1170c:	andeq	r1, r1, r4, lsr #16
   11710:	andeq	r1, r1, r4, lsr #16
   11714:	andeq	r1, r1, r4, lsr #16
   11718:	andeq	r1, r1, r4, lsr #16
   1171c:	andeq	r1, r1, r4, lsr #16
   11720:	andeq	r1, r1, r4, lsr #16
   11724:	andeq	r1, r1, r4, lsr #16
   11728:	andeq	r1, r1, r4, lsr #16
   1172c:	andeq	r1, r1, r4, lsr #16
   11730:	andeq	r1, r1, r4, lsr #16
   11734:	andeq	r1, r1, r4, lsr #16
   11738:	andeq	r1, r1, r4, lsr #16
   1173c:	andeq	r1, r1, r4, lsr #16
   11740:	andeq	r1, r1, r4, lsr #16
   11744:	andeq	r1, r1, r4, lsr #16
   11748:	andeq	r1, r1, r4, lsr #16
   1174c:	andeq	r1, r1, r4, lsr #16
   11750:	andeq	r1, r1, r4, lsr #16
   11754:	andeq	r1, r1, r4, lsr #16
   11758:	andeq	r1, r1, r4, lsr #16
   1175c:	andeq	r1, r1, r4, lsr #16
   11760:	andeq	r1, r1, r4, lsr #16
   11764:	andeq	r1, r1, r4, lsr #16
   11768:	andeq	r1, r1, r4, lsr #16
   1176c:	ldrdeq	r1, [r1], -r8
   11770:	andeq	r1, r1, r4, lsr #16
   11774:	andeq	r1, r1, r4, lsr #16
   11778:	andeq	r1, r1, r4, lsr #16
   1177c:	andeq	r1, r1, r4, lsr #16
   11780:	andeq	r1, r1, r4, lsr #16
   11784:	andeq	r1, r1, ip, ror #15
   11788:	andeq	r1, r1, r4, lsr #16
   1178c:	andeq	r1, r1, r4, lsr #16
   11790:	andeq	r1, r1, r4, lsr #16
   11794:	strdeq	r1, [r1], -r4
   11798:	andeq	r1, r1, r4, lsr #16
   1179c:	andeq	r1, r1, r4, lsr #16
   117a0:	andeq	r1, r1, r4, lsr #16
   117a4:	andeq	r1, r1, r4, lsr #16
   117a8:	andeq	r1, r1, r4, lsr #16
   117ac:	andeq	r1, r1, r4, lsr #16
   117b0:	andeq	r1, r1, r4, lsr #16
   117b4:	strdeq	r1, [r1], -ip
   117b8:	andeq	r1, r1, r4, lsr #16
   117bc:	andeq	r1, r1, r4, lsr #16
   117c0:	andeq	r1, r1, r4, lsr #16
   117c4:	andeq	r1, r1, r4, lsl #16
   117c8:	andeq	r1, r1, r4, lsr #16
   117cc:	andeq	r1, r1, ip, lsl #16
   117d0:	andeq	r1, r1, r4, lsr #16
   117d4:	andeq	r1, r1, r4, lsl r8
   117d8:	mov	lr, #92	; 0x5c
   117dc:	b	11828 <putchar_unlocked@plt+0x86c>
   117e0:	strb	r2, [r0]
   117e4:	mov	r4, r3
   117e8:	b	11680 <putchar_unlocked@plt+0x6c4>
   117ec:	mov	lr, #8
   117f0:	b	11828 <putchar_unlocked@plt+0x86c>
   117f4:	mov	lr, #12
   117f8:	b	11828 <putchar_unlocked@plt+0x86c>
   117fc:	mov	lr, #10
   11800:	b	11828 <putchar_unlocked@plt+0x86c>
   11804:	mov	lr, #13
   11808:	b	11828 <putchar_unlocked@plt+0x86c>
   1180c:	mov	lr, #9
   11810:	b	11828 <putchar_unlocked@plt+0x86c>
   11814:	mov	lr, #11
   11818:	b	11828 <putchar_unlocked@plt+0x86c>
   1181c:	cmp	r3, #0
   11820:	beq	11834 <putchar_unlocked@plt+0x878>
   11824:	mov	lr, r3
   11828:	strb	lr, [r0]
   1182c:	add	r4, r4, #2
   11830:	b	11680 <putchar_unlocked@plt+0x6c4>
   11834:	mov	ip, #1
   11838:	movw	r1, #24912	; 0x6150
   1183c:	movt	r1, #2
   11840:	str	r0, [r1]
   11844:	mov	r0, ip
   11848:	pop	{r4, sl, fp, pc}
   1184c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11850:	add	fp, sp, #28
   11854:	sub	sp, sp, #20
   11858:	cmp	r0, #0
   1185c:	beq	11ac0 <putchar_unlocked@plt+0xb04>
   11860:	mov	sl, r1
   11864:	mov	r5, r0
   11868:	movw	r8, #21688	; 0x54b8
   1186c:	movt	r8, #1
   11870:	movw	r9, #24908	; 0x614c
   11874:	movt	r9, #2
   11878:	movw	r4, #24906	; 0x614a
   1187c:	movt	r4, #2
   11880:	mov	r0, #1
   11884:	str	r0, [sp, #4]
   11888:	ldr	r6, [sl]
   1188c:	mov	r0, r6
   11890:	mov	r1, r8
   11894:	bl	10da0 <strcmp@plt>
   11898:	mov	r7, r0
   1189c:	cmp	r0, #0
   118a0:	beq	118d4 <putchar_unlocked@plt+0x918>
   118a4:	mov	r0, r6
   118a8:	movw	r1, #21417	; 0x53a9
   118ac:	movt	r1, #1
   118b0:	bl	10f8c <fopen64@plt>
   118b4:	cmp	r0, #0
   118b8:	beq	119b8 <putchar_unlocked@plt+0x9fc>
   118bc:	mov	r6, r0
   118c0:	str	r7, [sp, #12]
   118c4:	str	r5, [sp, #16]
   118c8:	mov	r1, #2
   118cc:	bl	120e8 <putchar_unlocked@plt+0x112c>
   118d0:	b	118f8 <putchar_unlocked@plt+0x93c>
   118d4:	str	r7, [sp, #12]
   118d8:	str	r5, [sp, #16]
   118dc:	mov	r0, #1
   118e0:	movw	r1, #24904	; 0x6148
   118e4:	movt	r1, #2
   118e8:	strb	r0, [r1]
   118ec:	movw	r0, #24888	; 0x6138
   118f0:	movt	r0, #2
   118f4:	ldr	r6, [r0]
   118f8:	ldr	r5, [r9]
   118fc:	mov	r0, r6
   11900:	bl	10e0c <getc_unlocked@plt>
   11904:	mov	r7, r0
   11908:	bl	10efc <__errno_location@plt>
   1190c:	mov	r1, r0
   11910:	cmn	r7, #1
   11914:	beq	11998 <putchar_unlocked@plt+0x9dc>
   11918:	str	r1, [sp, #8]
   1191c:	mov	r0, r6
   11920:	bl	10e0c <getc_unlocked@plt>
   11924:	cmn	r0, #1
   11928:	beq	119e8 <putchar_unlocked@plt+0xa2c>
   1192c:	mov	r8, r0
   11930:	ldrb	r0, [r4]
   11934:	cmp	r0, #0
   11938:	mov	r0, #10
   1193c:	movwne	r0, #0
   11940:	cmp	r7, r0
   11944:	bne	11978 <putchar_unlocked@plt+0x9bc>
   11948:	ldrb	r0, [r5]
   1194c:	cmp	r0, #0
   11950:	blne	11f90 <putchar_unlocked@plt+0xfd4>
   11954:	movw	r0, #24912	; 0x6150
   11958:	movt	r0, #2
   1195c:	ldr	r0, [r0]
   11960:	ldr	r1, [r9]
   11964:	add	r2, r5, #1
   11968:	cmp	r2, r0
   1196c:	movne	r1, r2
   11970:	mov	r5, r1
   11974:	b	11980 <putchar_unlocked@plt+0x9c4>
   11978:	uxtb	r0, r7
   1197c:	bl	11f90 <putchar_unlocked@plt+0xfd4>
   11980:	mov	r0, r6
   11984:	bl	10e0c <getc_unlocked@plt>
   11988:	cmn	r0, #1
   1198c:	mov	r7, r8
   11990:	bne	1192c <putchar_unlocked@plt+0x970>
   11994:	b	119ec <putchar_unlocked@plt+0xa30>
   11998:	ldrb	r0, [r4]
   1199c:	cmp	r0, #0
   119a0:	mov	r0, #10
   119a4:	movwne	r0, #0
   119a8:	ldr	r9, [r1]
   119ac:	mov	r7, r1
   119b0:	bl	11f90 <putchar_unlocked@plt+0xfd4>
   119b4:	b	11a1c <putchar_unlocked@plt+0xa60>
   119b8:	bl	10efc <__errno_location@plt>
   119bc:	ldr	r6, [r0]
   119c0:	ldr	r2, [sl]
   119c4:	mov	r0, #0
   119c8:	str	r0, [sp, #4]
   119cc:	mov	r0, #0
   119d0:	mov	r1, #3
   119d4:	bl	139f0 <putchar_unlocked@plt+0x2a34>
   119d8:	mov	r3, r0
   119dc:	mov	r0, #0
   119e0:	mov	r1, r6
   119e4:	b	11a90 <putchar_unlocked@plt+0xad4>
   119e8:	mov	r8, r7
   119ec:	ldr	r7, [sp, #8]
   119f0:	ldr	r9, [r7]
   119f4:	uxtb	r0, r8
   119f8:	bl	11f90 <putchar_unlocked@plt+0xfd4>
   119fc:	ldrb	r0, [r4]
   11a00:	cmp	r0, #0
   11a04:	mov	r0, #10
   11a08:	movwne	r0, #0
   11a0c:	cmp	r8, r0
   11a10:	movw	r8, #21688	; 0x54b8
   11a14:	movt	r8, #1
   11a18:	blne	11f90 <putchar_unlocked@plt+0xfd4>
   11a1c:	mov	r0, r6
   11a20:	bl	10e78 <ferror_unlocked@plt>
   11a24:	cmp	r0, #0
   11a28:	moveq	r9, r0
   11a2c:	ldr	r0, [sp, #12]
   11a30:	cmp	r0, #0
   11a34:	ldr	r5, [sp, #16]
   11a38:	mov	r0, r6
   11a3c:	beq	11a60 <putchar_unlocked@plt+0xaa4>
   11a40:	bl	12124 <putchar_unlocked@plt+0x1168>
   11a44:	cmp	r9, #0
   11a48:	bne	11a54 <putchar_unlocked@plt+0xa98>
   11a4c:	cmp	r0, #0
   11a50:	ldrne	r9, [r7]
   11a54:	cmp	r9, #0
   11a58:	bne	11a6c <putchar_unlocked@plt+0xab0>
   11a5c:	b	11a9c <putchar_unlocked@plt+0xae0>
   11a60:	bl	10f80 <clearerr_unlocked@plt>
   11a64:	cmp	r9, #0
   11a68:	beq	11a9c <putchar_unlocked@plt+0xae0>
   11a6c:	ldr	r2, [sl]
   11a70:	mov	r0, #0
   11a74:	str	r0, [sp, #4]
   11a78:	mov	r0, #0
   11a7c:	mov	r1, #3
   11a80:	bl	139f0 <putchar_unlocked@plt+0x2a34>
   11a84:	mov	r3, r0
   11a88:	mov	r0, #0
   11a8c:	mov	r1, r9
   11a90:	movw	r2, #20915	; 0x51b3
   11a94:	movt	r2, #1
   11a98:	bl	10e90 <error@plt>
   11a9c:	add	sl, sl, #4
   11aa0:	subs	r5, r5, #1
   11aa4:	movw	r4, #24908	; 0x614c
   11aa8:	movt	r4, #2
   11aac:	mov	r9, r4
   11ab0:	movw	r4, #24906	; 0x614a
   11ab4:	movt	r4, #2
   11ab8:	bne	11888 <putchar_unlocked@plt+0x8cc>
   11abc:	b	11ac8 <putchar_unlocked@plt+0xb0c>
   11ac0:	mov	r0, #1
   11ac4:	str	r0, [sp, #4]
   11ac8:	ldr	r0, [sp, #4]
   11acc:	and	r0, r0, #1
   11ad0:	sub	sp, fp, #28
   11ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11adc:	add	fp, sp, #28
   11ae0:	sub	sp, sp, #28
   11ae4:	str	r1, [sp, #8]
   11ae8:	mov	r4, r0
   11aec:	add	r0, r0, #2
   11af0:	bl	14408 <putchar_unlocked@plt+0x344c>
   11af4:	str	r0, [sp, #12]
   11af8:	add	r0, r4, #1
   11afc:	mov	r1, #4
   11b00:	bl	144a4 <putchar_unlocked@plt+0x34e8>
   11b04:	mov	r7, r0
   11b08:	cmp	r4, #0
   11b0c:	beq	11f0c <putchar_unlocked@plt+0xf50>
   11b10:	str	r4, [sp, #16]
   11b14:	mov	r6, #0
   11b18:	movw	r4, #21688	; 0x54b8
   11b1c:	movt	r4, #1
   11b20:	mov	sl, #1
   11b24:	movw	r8, #21417	; 0x53a9
   11b28:	movt	r8, #1
   11b2c:	mov	r5, #0
   11b30:	ldr	r0, [sp, #8]
   11b34:	mov	r9, r5
   11b38:	ldr	r5, [r0, r5, lsl #2]
   11b3c:	mov	r0, r5
   11b40:	mov	r1, r4
   11b44:	bl	10da0 <strcmp@plt>
   11b48:	cmp	r0, #0
   11b4c:	beq	11b8c <putchar_unlocked@plt+0xbd0>
   11b50:	mov	r0, r5
   11b54:	mov	r1, r8
   11b58:	bl	10f8c <fopen64@plt>
   11b5c:	str	r0, [r7, r9, lsl #2]
   11b60:	cmp	r0, #0
   11b64:	beq	11f38 <putchar_unlocked@plt+0xf7c>
   11b68:	bl	10f2c <fileno@plt>
   11b6c:	mov	r5, r0
   11b70:	ldr	r0, [r7, r9, lsl #2]
   11b74:	mov	r1, #2
   11b78:	bl	120e8 <putchar_unlocked@plt+0x112c>
   11b7c:	clz	r0, r5
   11b80:	lsr	r0, r0, #5
   11b84:	orr	r6, r6, r0
   11b88:	b	11ba8 <putchar_unlocked@plt+0xbec>
   11b8c:	movw	r0, #24904	; 0x6148
   11b90:	movt	r0, #2
   11b94:	strb	sl, [r0]
   11b98:	movw	r0, #24888	; 0x6138
   11b9c:	movt	r0, #2
   11ba0:	ldr	r0, [r0]
   11ba4:	str	r0, [r7, r9, lsl #2]
   11ba8:	mov	r5, r9
   11bac:	add	r5, r9, #1
   11bb0:	ldr	r0, [sp, #16]
   11bb4:	cmp	r5, r0
   11bb8:	bcc	11b30 <putchar_unlocked@plt+0xb74>
   11bbc:	tst	r6, #1
   11bc0:	beq	11bd8 <putchar_unlocked@plt+0xc1c>
   11bc4:	movw	r0, #24904	; 0x6148
   11bc8:	movt	r0, #2
   11bcc:	ldrb	r0, [r0]
   11bd0:	cmp	r0, #1
   11bd4:	beq	11f6c <putchar_unlocked@plt+0xfb0>
   11bd8:	mov	r0, #1
   11bdc:	str	r0, [sp, #4]
   11be0:	movw	sl, #24906	; 0x614a
   11be4:	movt	sl, #2
   11be8:	ldr	r8, [sp, #16]
   11bec:	cmp	r5, #0
   11bf0:	beq	11f00 <putchar_unlocked@plt+0xf44>
   11bf4:	movw	r0, #24908	; 0x614c
   11bf8:	movt	r0, #2
   11bfc:	ldr	r0, [r0]
   11c00:	str	r0, [sp, #24]
   11c04:	mov	r9, #0
   11c08:	mov	r4, #0
   11c0c:	mov	r3, #0
   11c10:	b	11c38 <putchar_unlocked@plt+0xc7c>
   11c14:	bl	10f80 <clearerr_unlocked@plt>
   11c18:	cmp	r8, #0
   11c1c:	bne	11dc8 <putchar_unlocked@plt+0xe0c>
   11c20:	b	11dfc <putchar_unlocked@plt+0xe40>
   11c24:	bl	10efc <__errno_location@plt>
   11c28:	ldr	r8, [r0]
   11c2c:	cmp	r8, #0
   11c30:	bne	11dc8 <putchar_unlocked@plt+0xe0c>
   11c34:	b	11dfc <putchar_unlocked@plt+0xe40>
   11c38:	ldr	r0, [r7, r9, lsl #2]
   11c3c:	cmp	r0, #0
   11c40:	beq	11e1c <putchar_unlocked@plt+0xe60>
   11c44:	mov	r6, r3
   11c48:	str	r5, [sp, #20]
   11c4c:	bl	10e0c <getc_unlocked@plt>
   11c50:	mov	r5, r0
   11c54:	bl	10efc <__errno_location@plt>
   11c58:	ldr	r8, [r0]
   11c5c:	cmp	r4, #0
   11c60:	cmnne	r5, #1
   11c64:	bne	11c78 <putchar_unlocked@plt+0xcbc>
   11c68:	cmn	r5, #1
   11c6c:	beq	11d7c <putchar_unlocked@plt+0xdc0>
   11c70:	mov	r6, r4
   11c74:	b	11ca0 <putchar_unlocked@plt+0xce4>
   11c78:	movw	r0, #24892	; 0x613c
   11c7c:	movt	r0, #2
   11c80:	ldr	r3, [r0]
   11c84:	ldr	r0, [sp, #12]
   11c88:	mov	r1, #1
   11c8c:	mov	r2, r4
   11c90:	bl	10df4 <fwrite_unlocked@plt>
   11c94:	mov	r6, #0
   11c98:	cmp	r0, r4
   11c9c:	bne	11f34 <putchar_unlocked@plt+0xf78>
   11ca0:	ldr	r8, [sp, #16]
   11ca4:	ldrb	r0, [sl]
   11ca8:	cmp	r0, #0
   11cac:	mov	r0, #10
   11cb0:	movwne	r0, #0
   11cb4:	cmp	r5, r0
   11cb8:	beq	11cdc <putchar_unlocked@plt+0xd20>
   11cbc:	uxtb	r0, r5
   11cc0:	bl	11f90 <putchar_unlocked@plt+0xfd4>
   11cc4:	ldr	r0, [r7, r9, lsl #2]
   11cc8:	bl	10e0c <getc_unlocked@plt>
   11ccc:	mov	r5, r0
   11cd0:	cmn	r0, #1
   11cd4:	bne	11ca4 <putchar_unlocked@plt+0xce8>
   11cd8:	mvn	r5, #0
   11cdc:	add	r0, r9, #1
   11ce0:	cmp	r0, r8
   11ce4:	bne	11d10 <putchar_unlocked@plt+0xd54>
   11ce8:	ldrb	r0, [sl]
   11cec:	cmp	r0, #0
   11cf0:	mov	r0, #10
   11cf4:	movwne	r0, #0
   11cf8:	cmn	r5, #1
   11cfc:	movne	r0, r5
   11d00:	uxtb	r0, r0
   11d04:	bl	11f90 <putchar_unlocked@plt+0xfd4>
   11d08:	mov	r3, #1
   11d0c:	b	11d6c <putchar_unlocked@plt+0xdb0>
   11d10:	ldrb	r0, [sl]
   11d14:	cmp	r0, #0
   11d18:	mov	r0, #10
   11d1c:	movwne	r0, #0
   11d20:	cmn	r5, #1
   11d24:	cmpne	r5, r0
   11d28:	uxtbne	r0, r5
   11d2c:	blne	11f90 <putchar_unlocked@plt+0xfd4>
   11d30:	ldr	r4, [sp, #24]
   11d34:	ldrb	r0, [r4]
   11d38:	cmp	r0, #0
   11d3c:	blne	11f90 <putchar_unlocked@plt+0xfd4>
   11d40:	movw	r0, #24912	; 0x6150
   11d44:	movt	r0, #2
   11d48:	ldr	r0, [r0]
   11d4c:	movw	r1, #24908	; 0x614c
   11d50:	movt	r1, #2
   11d54:	ldr	r1, [r1]
   11d58:	add	r2, r4, #1
   11d5c:	cmp	r2, r0
   11d60:	movne	r1, r2
   11d64:	mov	r3, #1
   11d68:	str	r1, [sp, #24]
   11d6c:	ldr	r5, [sp, #20]
   11d70:	cmp	r5, #0
   11d74:	bne	11ef0 <putchar_unlocked@plt+0xf34>
   11d78:	b	11f00 <putchar_unlocked@plt+0xf44>
   11d7c:	ldr	r0, [r7, r9, lsl #2]
   11d80:	cmp	r0, #0
   11d84:	beq	11e10 <putchar_unlocked@plt+0xe54>
   11d88:	bl	10e78 <ferror_unlocked@plt>
   11d8c:	cmp	r0, #0
   11d90:	moveq	r8, r0
   11d94:	ldr	r0, [r7, r9, lsl #2]
   11d98:	movw	r1, #24888	; 0x6138
   11d9c:	movt	r1, #2
   11da0:	ldr	r1, [r1]
   11da4:	cmp	r0, r1
   11da8:	ldr	r5, [sp, #20]
   11dac:	beq	11c14 <putchar_unlocked@plt+0xc58>
   11db0:	bl	12124 <putchar_unlocked@plt+0x1168>
   11db4:	cmp	r8, #0
   11db8:	cmneq	r0, #1
   11dbc:	beq	11c24 <putchar_unlocked@plt+0xc68>
   11dc0:	cmp	r8, #0
   11dc4:	beq	11dfc <putchar_unlocked@plt+0xe40>
   11dc8:	ldr	r0, [sp, #8]
   11dcc:	ldr	r2, [r0, r9, lsl #2]
   11dd0:	mov	r0, #0
   11dd4:	str	r0, [sp, #4]
   11dd8:	mov	r0, #0
   11ddc:	mov	r1, #3
   11de0:	bl	139f0 <putchar_unlocked@plt+0x2a34>
   11de4:	mov	r3, r0
   11de8:	mov	r0, #0
   11dec:	mov	r1, r8
   11df0:	movw	r2, #20915	; 0x51b3
   11df4:	movt	r2, #1
   11df8:	bl	10e90 <error@plt>
   11dfc:	mov	r0, #0
   11e00:	str	r0, [r7, r9, lsl #2]
   11e04:	sub	r5, r5, #1
   11e08:	ldr	r8, [sp, #16]
   11e0c:	b	11e18 <putchar_unlocked@plt+0xe5c>
   11e10:	ldr	r8, [sp, #16]
   11e14:	ldr	r5, [sp, #20]
   11e18:	mov	r3, r6
   11e1c:	add	r0, r9, #1
   11e20:	cmp	r0, r8
   11e24:	bne	11e84 <putchar_unlocked@plt+0xec8>
   11e28:	tst	r3, #1
   11e2c:	beq	11ea4 <putchar_unlocked@plt+0xee8>
   11e30:	cmp	r4, #0
   11e34:	beq	11e5c <putchar_unlocked@plt+0xea0>
   11e38:	movw	r0, #24892	; 0x613c
   11e3c:	movt	r0, #2
   11e40:	ldr	r3, [r0]
   11e44:	ldr	r0, [sp, #12]
   11e48:	mov	r1, #1
   11e4c:	mov	r2, r4
   11e50:	bl	10df4 <fwrite_unlocked@plt>
   11e54:	cmp	r0, r4
   11e58:	bne	11f34 <putchar_unlocked@plt+0xf78>
   11e5c:	ldrb	r0, [sl]
   11e60:	cmp	r0, #0
   11e64:	mov	r0, #10
   11e68:	movwne	r0, #0
   11e6c:	bl	11f90 <putchar_unlocked@plt+0xfd4>
   11e70:	mov	r6, #0
   11e74:	mov	r3, #1
   11e78:	cmp	r5, #0
   11e7c:	bne	11ef0 <putchar_unlocked@plt+0xf34>
   11e80:	b	11f00 <putchar_unlocked@plt+0xf44>
   11e84:	ldr	r0, [sp, #24]
   11e88:	ldrb	r0, [r0]
   11e8c:	cmp	r0, #0
   11e90:	beq	11eb8 <putchar_unlocked@plt+0xefc>
   11e94:	ldr	r1, [sp, #12]
   11e98:	strb	r0, [r1, r4]
   11e9c:	add	r6, r4, #1
   11ea0:	b	11ebc <putchar_unlocked@plt+0xf00>
   11ea4:	mov	r3, #0
   11ea8:	mov	r6, r4
   11eac:	cmp	r5, #0
   11eb0:	bne	11ef0 <putchar_unlocked@plt+0xf34>
   11eb4:	b	11f00 <putchar_unlocked@plt+0xf44>
   11eb8:	mov	r6, r4
   11ebc:	movw	r0, #24912	; 0x6150
   11ec0:	movt	r0, #2
   11ec4:	ldr	r0, [r0]
   11ec8:	movw	r1, #24908	; 0x614c
   11ecc:	movt	r1, #2
   11ed0:	ldr	r1, [r1]
   11ed4:	ldr	r2, [sp, #24]
   11ed8:	add	r2, r2, #1
   11edc:	cmp	r2, r0
   11ee0:	movne	r1, r2
   11ee4:	str	r1, [sp, #24]
   11ee8:	cmp	r5, #0
   11eec:	beq	11f00 <putchar_unlocked@plt+0xf44>
   11ef0:	add	r9, r9, #1
   11ef4:	cmp	r9, r8
   11ef8:	mov	r4, r6
   11efc:	bcc	11c38 <putchar_unlocked@plt+0xc7c>
   11f00:	cmp	r5, #0
   11f04:	bne	11bec <putchar_unlocked@plt+0xc30>
   11f08:	b	11f14 <putchar_unlocked@plt+0xf58>
   11f0c:	mov	r0, #1
   11f10:	str	r0, [sp, #4]
   11f14:	mov	r0, r7
   11f18:	bl	1222c <putchar_unlocked@plt+0x1270>
   11f1c:	ldr	r0, [sp, #12]
   11f20:	bl	1222c <putchar_unlocked@plt+0x1270>
   11f24:	ldr	r0, [sp, #4]
   11f28:	and	r0, r0, #1
   11f2c:	sub	sp, fp, #28
   11f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f34:	bl	11fa8 <putchar_unlocked@plt+0xfec>
   11f38:	bl	10efc <__errno_location@plt>
   11f3c:	ldr	r1, [sp, #8]
   11f40:	ldr	r2, [r1, r9, lsl #2]
   11f44:	ldr	r4, [r0]
   11f48:	mov	r0, #0
   11f4c:	mov	r1, #3
   11f50:	bl	139f0 <putchar_unlocked@plt+0x2a34>
   11f54:	mov	r3, r0
   11f58:	movw	r2, #20915	; 0x51b3
   11f5c:	movt	r2, #1
   11f60:	mov	r0, #1
   11f64:	mov	r1, r4
   11f68:	bl	10e90 <error@plt>
   11f6c:	movw	r1, #21419	; 0x53ab
   11f70:	movt	r1, #1
   11f74:	mov	r0, #0
   11f78:	mov	r2, #5
   11f7c:	bl	10e18 <dcgettext@plt>
   11f80:	mov	r2, r0
   11f84:	mov	r0, #1
   11f88:	mov	r1, #0
   11f8c:	bl	10e90 <error@plt>
   11f90:	push	{fp, lr}
   11f94:	mov	fp, sp
   11f98:	bl	10fbc <putchar_unlocked@plt>
   11f9c:	cmn	r0, #1
   11fa0:	popgt	{fp, pc}
   11fa4:	bl	11fa8 <putchar_unlocked@plt+0xfec>
   11fa8:	push	{fp, lr}
   11fac:	mov	fp, sp
   11fb0:	bl	10efc <__errno_location@plt>
   11fb4:	ldr	r4, [r0]
   11fb8:	movw	r1, #21407	; 0x539f
   11fbc:	movt	r1, #1
   11fc0:	mov	r0, #0
   11fc4:	mov	r2, #5
   11fc8:	bl	10e18 <dcgettext@plt>
   11fcc:	mov	r2, r0
   11fd0:	mov	r0, #1
   11fd4:	mov	r1, r4
   11fd8:	bl	10e90 <error@plt>
   11fdc:	movw	r1, #24916	; 0x6154
   11fe0:	movt	r1, #2
   11fe4:	str	r0, [r1]
   11fe8:	bx	lr
   11fec:	movw	r1, #24920	; 0x6158
   11ff0:	movt	r1, #2
   11ff4:	strb	r0, [r1]
   11ff8:	bx	lr
   11ffc:	push	{r4, r5, r6, sl, fp, lr}
   12000:	add	fp, sp, #16
   12004:	sub	sp, sp, #8
   12008:	movw	r0, #24892	; 0x613c
   1200c:	movt	r0, #2
   12010:	ldr	r0, [r0]
   12014:	bl	14bf8 <putchar_unlocked@plt+0x3c3c>
   12018:	cmp	r0, #0
   1201c:	beq	12044 <putchar_unlocked@plt+0x1088>
   12020:	movw	r0, #24920	; 0x6158
   12024:	movt	r0, #2
   12028:	ldrb	r0, [r0]
   1202c:	cmp	r0, #0
   12030:	beq	12064 <putchar_unlocked@plt+0x10a8>
   12034:	bl	10efc <__errno_location@plt>
   12038:	ldr	r0, [r0]
   1203c:	cmp	r0, #32
   12040:	bne	12064 <putchar_unlocked@plt+0x10a8>
   12044:	movw	r0, #24880	; 0x6130
   12048:	movt	r0, #2
   1204c:	ldr	r0, [r0]
   12050:	bl	14bf8 <putchar_unlocked@plt+0x3c3c>
   12054:	cmp	r0, #0
   12058:	subeq	sp, fp, #16
   1205c:	popeq	{r4, r5, r6, sl, fp, pc}
   12060:	b	120d4 <putchar_unlocked@plt+0x1118>
   12064:	movw	r1, #21407	; 0x539f
   12068:	movt	r1, #1
   1206c:	mov	r0, #0
   12070:	mov	r2, #5
   12074:	bl	10e18 <dcgettext@plt>
   12078:	mov	r4, r0
   1207c:	movw	r0, #24916	; 0x6154
   12080:	movt	r0, #2
   12084:	ldr	r6, [r0]
   12088:	bl	10efc <__errno_location@plt>
   1208c:	ldr	r5, [r0]
   12090:	cmp	r6, #0
   12094:	bne	120b0 <putchar_unlocked@plt+0x10f4>
   12098:	movw	r2, #20915	; 0x51b3
   1209c:	movt	r2, #1
   120a0:	mov	r0, #0
   120a4:	mov	r1, r5
   120a8:	mov	r3, r4
   120ac:	b	120d0 <putchar_unlocked@plt+0x1114>
   120b0:	mov	r0, r6
   120b4:	bl	139e0 <putchar_unlocked@plt+0x2a24>
   120b8:	mov	r3, r0
   120bc:	str	r4, [sp]
   120c0:	movw	r2, #21615	; 0x546f
   120c4:	movt	r2, #1
   120c8:	mov	r0, #0
   120cc:	mov	r1, r5
   120d0:	bl	10e90 <error@plt>
   120d4:	movw	r0, #24796	; 0x60dc
   120d8:	movt	r0, #2
   120dc:	ldr	r0, [r0]
   120e0:	bl	10dd0 <_exit@plt>
   120e4:	b	10dac <posix_fadvise64@plt>
   120e8:	cmp	r0, #0
   120ec:	bxeq	lr
   120f0:	push	{r4, sl, fp, lr}
   120f4:	add	fp, sp, #8
   120f8:	sub	sp, sp, #16
   120fc:	mov	r4, r1
   12100:	bl	10f2c <fileno@plt>
   12104:	mov	r1, #0
   12108:	str	r1, [sp]
   1210c:	stmib	sp, {r1, r4}
   12110:	mov	r2, #0
   12114:	mov	r3, #0
   12118:	bl	120e4 <putchar_unlocked@plt+0x1128>
   1211c:	sub	sp, fp, #8
   12120:	pop	{r4, sl, fp, pc}
   12124:	push	{r4, r5, fp, lr}
   12128:	add	fp, sp, #8
   1212c:	sub	sp, sp, #8
   12130:	mov	r4, r0
   12134:	bl	10f2c <fileno@plt>
   12138:	cmn	r0, #1
   1213c:	ble	121b4 <putchar_unlocked@plt+0x11f8>
   12140:	mov	r0, r4
   12144:	bl	10eb4 <__freading@plt>
   12148:	cmp	r0, #0
   1214c:	beq	12178 <putchar_unlocked@plt+0x11bc>
   12150:	mov	r0, r4
   12154:	bl	10f2c <fileno@plt>
   12158:	mov	r1, #1
   1215c:	str	r1, [sp]
   12160:	mov	r2, #0
   12164:	mov	r3, #0
   12168:	bl	10e54 <lseek64@plt>
   1216c:	and	r0, r0, r1
   12170:	cmn	r0, #1
   12174:	beq	121b4 <putchar_unlocked@plt+0x11f8>
   12178:	mov	r0, r4
   1217c:	bl	121c4 <putchar_unlocked@plt+0x1208>
   12180:	cmp	r0, #0
   12184:	beq	121b4 <putchar_unlocked@plt+0x11f8>
   12188:	bl	10efc <__errno_location@plt>
   1218c:	ldr	r5, [r0]
   12190:	mov	r0, r4
   12194:	bl	10f44 <fclose@plt>
   12198:	cmp	r5, #0
   1219c:	beq	121ac <putchar_unlocked@plt+0x11f0>
   121a0:	bl	10efc <__errno_location@plt>
   121a4:	str	r5, [r0]
   121a8:	mvn	r0, #0
   121ac:	sub	sp, fp, #8
   121b0:	pop	{r4, r5, fp, pc}
   121b4:	mov	r0, r4
   121b8:	sub	sp, fp, #8
   121bc:	pop	{r4, r5, fp, lr}
   121c0:	b	10f44 <fclose@plt>
   121c4:	push	{r4, sl, fp, lr}
   121c8:	add	fp, sp, #8
   121cc:	mov	r4, r0
   121d0:	cmp	r0, #0
   121d4:	beq	121ec <putchar_unlocked@plt+0x1230>
   121d8:	mov	r0, r4
   121dc:	bl	10eb4 <__freading@plt>
   121e0:	cmp	r0, #0
   121e4:	movne	r0, r4
   121e8:	blne	121f8 <putchar_unlocked@plt+0x123c>
   121ec:	mov	r0, r4
   121f0:	pop	{r4, sl, fp, lr}
   121f4:	b	10db8 <fflush@plt>
   121f8:	ldrb	r1, [r0, #1]
   121fc:	tst	r1, #1
   12200:	bxeq	lr
   12204:	push	{fp, lr}
   12208:	mov	fp, sp
   1220c:	sub	sp, sp, #8
   12210:	mov	r1, #1
   12214:	str	r1, [sp]
   12218:	mov	r2, #0
   1221c:	mov	r3, #0
   12220:	bl	12254 <putchar_unlocked@plt+0x1298>
   12224:	mov	sp, fp
   12228:	pop	{fp, pc}
   1222c:	push	{r4, r5, r6, sl, fp, lr}
   12230:	add	fp, sp, #16
   12234:	mov	r4, r0
   12238:	bl	10efc <__errno_location@plt>
   1223c:	mov	r5, r0
   12240:	ldr	r6, [r0]
   12244:	mov	r0, r4
   12248:	bl	10dc4 <free@plt>
   1224c:	str	r6, [r5]
   12250:	pop	{r4, r5, r6, sl, fp, pc}
   12254:	push	{r4, r5, r6, r7, fp, lr}
   12258:	add	fp, sp, #16
   1225c:	sub	sp, sp, #8
   12260:	mov	r5, r3
   12264:	mov	r6, r2
   12268:	mov	r4, r0
   1226c:	ldr	r0, [r0, #4]
   12270:	ldr	r1, [r4, #8]
   12274:	cmp	r1, r0
   12278:	bne	12294 <putchar_unlocked@plt+0x12d8>
   1227c:	ldrd	r0, [r4, #16]
   12280:	cmp	r1, r0
   12284:	bne	12294 <putchar_unlocked@plt+0x12d8>
   12288:	ldr	r0, [r4, #36]	; 0x24
   1228c:	cmp	r0, #0
   12290:	beq	122ac <putchar_unlocked@plt+0x12f0>
   12294:	mov	r0, r4
   12298:	mov	r2, r6
   1229c:	mov	r3, r5
   122a0:	sub	sp, fp, #16
   122a4:	pop	{r4, r5, r6, r7, fp, lr}
   122a8:	b	10f50 <fseeko64@plt>
   122ac:	ldr	r7, [fp, #8]
   122b0:	mov	r0, r4
   122b4:	bl	10f2c <fileno@plt>
   122b8:	str	r7, [sp]
   122bc:	mov	r2, r6
   122c0:	mov	r3, r5
   122c4:	bl	10e54 <lseek64@plt>
   122c8:	and	r2, r0, r1
   122cc:	cmn	r2, #1
   122d0:	mvneq	r0, #0
   122d4:	subeq	sp, fp, #16
   122d8:	popeq	{r4, r5, r6, r7, fp, pc}
   122dc:	strd	r0, [r4, #80]	; 0x50
   122e0:	ldr	r0, [r4]
   122e4:	bic	r0, r0, #16
   122e8:	str	r0, [r4]
   122ec:	mov	r0, #0
   122f0:	sub	sp, fp, #16
   122f4:	pop	{r4, r5, r6, r7, fp, pc}
   122f8:	push	{r4, r5, fp, lr}
   122fc:	add	fp, sp, #8
   12300:	cmp	r0, #0
   12304:	beq	12398 <putchar_unlocked@plt+0x13dc>
   12308:	mov	r4, r0
   1230c:	mov	r1, #47	; 0x2f
   12310:	bl	10f68 <strrchr@plt>
   12314:	cmp	r0, #0
   12318:	mov	r5, r4
   1231c:	addne	r5, r0, #1
   12320:	sub	r0, r5, r4
   12324:	cmp	r0, #7
   12328:	blt	1237c <putchar_unlocked@plt+0x13c0>
   1232c:	sub	r0, r5, #7
   12330:	movw	r1, #21678	; 0x54ae
   12334:	movt	r1, #1
   12338:	mov	r2, #7
   1233c:	bl	10fa4 <strncmp@plt>
   12340:	cmp	r0, #0
   12344:	bne	1237c <putchar_unlocked@plt+0x13c0>
   12348:	movw	r1, #21686	; 0x54b6
   1234c:	movt	r1, #1
   12350:	mov	r0, r5
   12354:	mov	r2, #3
   12358:	bl	10fa4 <strncmp@plt>
   1235c:	cmp	r0, #0
   12360:	beq	1236c <putchar_unlocked@plt+0x13b0>
   12364:	mov	r4, r5
   12368:	b	1237c <putchar_unlocked@plt+0x13c0>
   1236c:	add	r4, r5, #3
   12370:	movw	r0, #24864	; 0x6120
   12374:	movt	r0, #2
   12378:	str	r4, [r0]
   1237c:	movw	r0, #24868	; 0x6124
   12380:	movt	r0, #2
   12384:	str	r4, [r0]
   12388:	movw	r0, #24924	; 0x615c
   1238c:	movt	r0, #2
   12390:	str	r4, [r0]
   12394:	pop	{r4, r5, fp, pc}
   12398:	movw	r0, #24880	; 0x6130
   1239c:	movt	r0, #2
   123a0:	ldr	r3, [r0]
   123a4:	movw	r0, #21622	; 0x5476
   123a8:	movt	r0, #1
   123ac:	mov	r1, #55	; 0x37
   123b0:	mov	r2, #1
   123b4:	bl	10e48 <fwrite@plt>
   123b8:	bl	10fb0 <abort@plt>
   123bc:	push	{r4, r5, r6, sl, fp, lr}
   123c0:	add	fp, sp, #16
   123c4:	mov	r4, r0
   123c8:	movw	r0, #24928	; 0x6160
   123cc:	movt	r0, #2
   123d0:	cmp	r4, #0
   123d4:	moveq	r4, r0
   123d8:	bl	10efc <__errno_location@plt>
   123dc:	mov	r5, r0
   123e0:	ldr	r6, [r0]
   123e4:	mov	r0, r4
   123e8:	mov	r1, #48	; 0x30
   123ec:	bl	146fc <putchar_unlocked@plt+0x3740>
   123f0:	str	r6, [r5]
   123f4:	pop	{r4, r5, r6, sl, fp, pc}
   123f8:	movw	r1, #24928	; 0x6160
   123fc:	movt	r1, #2
   12400:	cmp	r0, #0
   12404:	movne	r1, r0
   12408:	ldr	r0, [r1]
   1240c:	bx	lr
   12410:	movw	r2, #24928	; 0x6160
   12414:	movt	r2, #2
   12418:	cmp	r0, #0
   1241c:	movne	r2, r0
   12420:	str	r1, [r2]
   12424:	bx	lr
   12428:	movw	r3, #24928	; 0x6160
   1242c:	movt	r3, #2
   12430:	cmp	r0, #0
   12434:	movne	r3, r0
   12438:	ubfx	r0, r1, #5, #3
   1243c:	add	r0, r3, r0, lsl #2
   12440:	ldr	r3, [r0, #8]
   12444:	and	r1, r1, #31
   12448:	eor	r2, r2, r3, lsr r1
   1244c:	and	r2, r2, #1
   12450:	eor	r2, r3, r2, lsl r1
   12454:	str	r2, [r0, #8]
   12458:	mov	r0, #1
   1245c:	and	r0, r0, r3, lsr r1
   12460:	bx	lr
   12464:	movw	r2, #24928	; 0x6160
   12468:	movt	r2, #2
   1246c:	cmp	r0, #0
   12470:	movne	r2, r0
   12474:	ldr	r0, [r2, #4]
   12478:	str	r1, [r2, #4]
   1247c:	bx	lr
   12480:	movw	r3, #24928	; 0x6160
   12484:	movt	r3, #2
   12488:	cmp	r0, #0
   1248c:	movne	r3, r0
   12490:	mov	r0, #10
   12494:	str	r0, [r3]
   12498:	cmp	r1, #0
   1249c:	cmpne	r2, #0
   124a0:	bne	124b0 <putchar_unlocked@plt+0x14f4>
   124a4:	push	{fp, lr}
   124a8:	mov	fp, sp
   124ac:	bl	10fb0 <abort@plt>
   124b0:	str	r1, [r3, #40]	; 0x28
   124b4:	str	r2, [r3, #44]	; 0x2c
   124b8:	bx	lr
   124bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124c0:	add	fp, sp, #28
   124c4:	sub	sp, sp, #20
   124c8:	mov	r8, r3
   124cc:	mov	r9, r2
   124d0:	mov	sl, r1
   124d4:	mov	r7, r0
   124d8:	ldr	r0, [fp, #8]
   124dc:	movw	r5, #24928	; 0x6160
   124e0:	movt	r5, #2
   124e4:	cmp	r0, #0
   124e8:	movne	r5, r0
   124ec:	bl	10efc <__errno_location@plt>
   124f0:	mov	r4, r0
   124f4:	ldm	r5, {r0, r1}
   124f8:	ldr	r2, [r5, #40]	; 0x28
   124fc:	ldr	r3, [r5, #44]	; 0x2c
   12500:	ldr	r6, [r4]
   12504:	add	r5, r5, #8
   12508:	stm	sp, {r0, r1, r5}
   1250c:	str	r2, [sp, #12]
   12510:	str	r3, [sp, #16]
   12514:	mov	r0, r7
   12518:	mov	r1, sl
   1251c:	mov	r2, r9
   12520:	mov	r3, r8
   12524:	bl	12534 <putchar_unlocked@plt+0x1578>
   12528:	str	r6, [r4]
   1252c:	sub	sp, fp, #28
   12530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12538:	add	fp, sp, #28
   1253c:	sub	sp, sp, #156	; 0x9c
   12540:	mov	r9, r3
   12544:	str	r2, [fp, #-84]	; 0xffffffac
   12548:	mov	r6, r1
   1254c:	mov	r7, r0
   12550:	ldr	r0, [fp, #12]
   12554:	and	r1, r0, #4
   12558:	str	r1, [sp, #32]
   1255c:	and	r1, r0, #1
   12560:	str	r1, [sp, #36]	; 0x24
   12564:	ubfx	sl, r0, #1, #1
   12568:	bl	10e60 <__ctype_get_mb_cur_max@plt>
   1256c:	str	r0, [sp, #40]	; 0x28
   12570:	ldr	r0, [fp, #24]
   12574:	str	r0, [sp, #76]	; 0x4c
   12578:	ldr	r0, [fp, #20]
   1257c:	str	r0, [sp, #68]	; 0x44
   12580:	ldr	r0, [fp, #8]
   12584:	str	r0, [fp, #-60]	; 0xffffffc4
   12588:	mov	r0, #0
   1258c:	str	r0, [sp, #72]	; 0x48
   12590:	mov	r0, #0
   12594:	str	r0, [sp, #92]	; 0x5c
   12598:	mov	r0, #0
   1259c:	str	r0, [fp, #-72]	; 0xffffffb8
   125a0:	mov	r0, #0
   125a4:	mov	r1, #0
   125a8:	str	r1, [fp, #-56]	; 0xffffffc8
   125ac:	mov	r1, #0
   125b0:	str	r1, [sp, #56]	; 0x38
   125b4:	mov	r5, #1
   125b8:	str	r7, [sp, #80]	; 0x50
   125bc:	mov	r4, r6
   125c0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   125c4:	cmp	r6, #10
   125c8:	bhi	13530 <putchar_unlocked@plt+0x2574>
   125cc:	add	r1, pc, #20
   125d0:	mov	r8, #0
   125d4:	mov	r2, #1
   125d8:	mov	r3, #0
   125dc:	ldr	ip, [fp, #-84]	; 0xffffffac
   125e0:	mov	lr, r9
   125e4:	ldr	pc, [r1, r6, lsl #2]
   125e8:	andeq	r2, r1, r0, asr #13
   125ec:	strdeq	r2, [r1], -r0
   125f0:			; <UNDEFINED> instruction: 0x000126b0
   125f4:	andeq	r2, r1, r8, lsr #13
   125f8:	andeq	r2, r1, r4, ror #13
   125fc:	andeq	r2, r1, r4, asr #14
   12600:	ldrdeq	r2, [r1], -r0
   12604:	andeq	r2, r1, r0, lsr #15
   12608:	andeq	r2, r1, r4, lsl r6
   1260c:	andeq	r2, r1, r4, lsl r6
   12610:	andeq	r2, r1, ip, lsr r6
   12614:	movw	r0, #21770	; 0x550a
   12618:	movt	r0, #1
   1261c:	mov	r1, r6
   12620:	bl	13b3c <putchar_unlocked@plt+0x2b80>
   12624:	str	r0, [sp, #68]	; 0x44
   12628:	movw	r0, #21772	; 0x550c
   1262c:	movt	r0, #1
   12630:	mov	r1, r6
   12634:	bl	13b3c <putchar_unlocked@plt+0x2b80>
   12638:	str	r0, [sp, #76]	; 0x4c
   1263c:	mov	r8, #0
   12640:	tst	sl, #1
   12644:	bne	1267c <putchar_unlocked@plt+0x16c0>
   12648:	ldr	r0, [sp, #68]	; 0x44
   1264c:	ldrb	r0, [r0]
   12650:	cmp	r0, #0
   12654:	beq	1267c <putchar_unlocked@plt+0x16c0>
   12658:	ldr	r1, [sp, #68]	; 0x44
   1265c:	add	r1, r1, #1
   12660:	mov	r8, #0
   12664:	cmp	r8, r4
   12668:	strbcc	r0, [r7, r8]
   1266c:	ldrb	r0, [r1, r8]
   12670:	add	r8, r8, #1
   12674:	cmp	r0, #0
   12678:	bne	12664 <putchar_unlocked@plt+0x16a8>
   1267c:	ldr	r6, [sp, #76]	; 0x4c
   12680:	mov	r0, r6
   12684:	bl	10ef0 <strlen@plt>
   12688:	str	r0, [fp, #-72]	; 0xffffffb8
   1268c:	str	r6, [sp, #92]	; 0x5c
   12690:	mov	r2, #1
   12694:	mov	r3, sl
   12698:	ldr	ip, [fp, #-84]	; 0xffffffac
   1269c:	mov	lr, r9
   126a0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   126a4:	b	127a0 <putchar_unlocked@plt+0x17e4>
   126a8:	mov	r0, #1
   126ac:	b	126f0 <putchar_unlocked@plt+0x1734>
   126b0:	tst	sl, #1
   126b4:	bne	126f0 <putchar_unlocked@plt+0x1734>
   126b8:	mov	r2, r0
   126bc:	b	12718 <putchar_unlocked@plt+0x175c>
   126c0:	mov	r6, #0
   126c4:	mov	r8, #0
   126c8:	mov	r2, r0
   126cc:	b	1279c <putchar_unlocked@plt+0x17e0>
   126d0:	mov	r0, #1
   126d4:	str	r0, [fp, #-72]	; 0xffffffb8
   126d8:	mov	r8, #0
   126dc:	mov	r6, #5
   126e0:	b	1275c <putchar_unlocked@plt+0x17a0>
   126e4:	mov	r2, #1
   126e8:	tst	sl, #1
   126ec:	beq	12718 <putchar_unlocked@plt+0x175c>
   126f0:	mov	r1, #1
   126f4:	str	r1, [fp, #-72]	; 0xffffffb8
   126f8:	mov	r8, #0
   126fc:	mov	r6, #2
   12700:	movw	r1, #21772	; 0x550c
   12704:	movt	r1, #1
   12708:	str	r1, [sp, #92]	; 0x5c
   1270c:	mov	r2, r0
   12710:	mov	r3, #1
   12714:	b	127a0 <putchar_unlocked@plt+0x17e4>
   12718:	mov	r8, #1
   1271c:	mov	r6, #2
   12720:	cmp	r4, #0
   12724:	movne	r0, #39	; 0x27
   12728:	strbne	r0, [r7]
   1272c:	movw	r0, #21772	; 0x550c
   12730:	movt	r0, #1
   12734:	str	r0, [sp, #92]	; 0x5c
   12738:	mov	r0, #1
   1273c:	str	r0, [fp, #-72]	; 0xffffffb8
   12740:	b	1279c <putchar_unlocked@plt+0x17e0>
   12744:	mov	r6, #5
   12748:	tst	sl, #1
   1274c:	beq	12774 <putchar_unlocked@plt+0x17b8>
   12750:	mov	r0, #1
   12754:	str	r0, [fp, #-72]	; 0xffffffb8
   12758:	mov	r8, #0
   1275c:	movw	r0, #21768	; 0x5508
   12760:	movt	r0, #1
   12764:	str	r0, [sp, #92]	; 0x5c
   12768:	mov	r2, #1
   1276c:	mov	r3, #1
   12770:	b	127a0 <putchar_unlocked@plt+0x17e4>
   12774:	cmp	r4, #0
   12778:	movne	r0, #34	; 0x22
   1277c:	strbne	r0, [r7]
   12780:	mov	r8, #1
   12784:	movw	r0, #21768	; 0x5508
   12788:	movt	r0, #1
   1278c:	str	r0, [sp, #92]	; 0x5c
   12790:	mov	r0, #1
   12794:	str	r0, [fp, #-72]	; 0xffffffb8
   12798:	mov	r2, #1
   1279c:	mov	r3, #0
   127a0:	ldr	r0, [fp, #16]
   127a4:	cmp	r0, #0
   127a8:	movwne	r0, #1
   127ac:	and	r0, r0, r3
   127b0:	str	r0, [fp, #-88]	; 0xffffffa8
   127b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   127b8:	cmp	r0, #0
   127bc:	movwne	r0, #1
   127c0:	and	r1, r0, r3
   127c4:	and	r1, r2, r1
   127c8:	str	r1, [sp, #48]	; 0x30
   127cc:	str	r6, [fp, #-60]	; 0xffffffc4
   127d0:	subs	r6, r6, #2
   127d4:	clz	r1, r6
   127d8:	lsr	r1, r1, #5
   127dc:	and	r1, r1, r3
   127e0:	str	r1, [sp, #60]	; 0x3c
   127e4:	str	r6, [fp, #-80]	; 0xffffffb0
   127e8:	mov	r1, r6
   127ec:	movwne	r1, #1
   127f0:	str	r3, [fp, #-76]	; 0xffffffb4
   127f4:	eor	r3, r3, #1
   127f8:	str	r3, [sp, #88]	; 0x58
   127fc:	orr	r3, r1, r3
   12800:	str	r3, [sp, #64]	; 0x40
   12804:	and	r1, r1, r2
   12808:	str	r1, [fp, #-68]	; 0xffffffbc
   1280c:	and	r0, r0, r1
   12810:	str	r0, [fp, #-64]	; 0xffffffc0
   12814:	str	r2, [sp, #84]	; 0x54
   12818:	eor	r0, r2, #1
   1281c:	str	r0, [sp, #52]	; 0x34
   12820:	mov	r6, #0
   12824:	cmn	lr, #1
   12828:	beq	12838 <putchar_unlocked@plt+0x187c>
   1282c:	cmp	r6, lr
   12830:	bne	12844 <putchar_unlocked@plt+0x1888>
   12834:	b	133b0 <putchar_unlocked@plt+0x23f4>
   12838:	ldrb	r0, [ip, r6]
   1283c:	cmp	r0, #0
   12840:	beq	133b0 <putchar_unlocked@plt+0x23f4>
   12844:	str	r5, [fp, #-48]	; 0xffffffd0
   12848:	mov	sl, #0
   1284c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12850:	cmp	r0, #0
   12854:	beq	12888 <putchar_unlocked@plt+0x18cc>
   12858:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1285c:	add	r5, r6, r0
   12860:	cmp	r0, #2
   12864:	bcc	12880 <putchar_unlocked@plt+0x18c4>
   12868:	cmn	lr, #1
   1286c:	bne	12880 <putchar_unlocked@plt+0x18c4>
   12870:	mov	r0, ip
   12874:	bl	10ef0 <strlen@plt>
   12878:	ldr	ip, [fp, #-84]	; 0xffffffac
   1287c:	mov	lr, r0
   12880:	cmp	r5, lr
   12884:	bls	12894 <putchar_unlocked@plt+0x18d8>
   12888:	mov	r0, #0
   1288c:	str	r0, [fp, #-52]	; 0xffffffcc
   12890:	b	128e0 <putchar_unlocked@plt+0x1924>
   12894:	mov	r5, r4
   12898:	mov	r4, lr
   1289c:	add	r0, ip, r6
   128a0:	ldr	r1, [sp, #92]	; 0x5c
   128a4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   128a8:	bl	10e00 <memcmp@plt>
   128ac:	cmp	r0, #0
   128b0:	mov	r1, r0
   128b4:	movwne	r1, #1
   128b8:	ldr	r2, [sp, #88]	; 0x58
   128bc:	orr	r1, r1, r2
   128c0:	tst	r1, #1
   128c4:	beq	13474 <putchar_unlocked@plt+0x24b8>
   128c8:	clz	r0, r0
   128cc:	lsr	r0, r0, #5
   128d0:	str	r0, [fp, #-52]	; 0xffffffcc
   128d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   128d8:	mov	lr, r4
   128dc:	mov	r4, r5
   128e0:	ldrb	r5, [ip, r6]
   128e4:	cmp	r5, #126	; 0x7e
   128e8:	bhi	12ca4 <putchar_unlocked@plt+0x1ce8>
   128ec:	mov	r9, #1
   128f0:	mov	r2, #110	; 0x6e
   128f4:	mov	r0, #97	; 0x61
   128f8:	add	r3, pc, #4
   128fc:	mov	r1, #0
   12900:	ldr	pc, [r3, r5, lsl #2]
   12904:	muleq	r1, ip, fp
   12908:	andeq	r2, r1, r4, lsr #25
   1290c:	andeq	r2, r1, r4, lsr #25
   12910:	andeq	r2, r1, r4, lsr #25
   12914:	andeq	r2, r1, r4, lsr #25
   12918:	andeq	r2, r1, r4, lsr #25
   1291c:	andeq	r2, r1, r4, lsr #25
   12920:	andeq	r2, r1, r8, ror #26
   12924:	andeq	r2, r1, ip, ror fp
   12928:	andeq	r2, r1, r4, ror fp
   1292c:	andeq	r2, r1, r8, lsl #23
   12930:	andeq	r2, r1, ip, lsl #24
   12934:	andeq	r2, r1, ip, ror #22
   12938:	andeq	r2, r1, r4, lsl #23
   1293c:	andeq	r2, r1, r4, lsr #25
   12940:	andeq	r2, r1, r4, lsr #25
   12944:	andeq	r2, r1, r4, lsr #25
   12948:	andeq	r2, r1, r4, lsr #25
   1294c:	andeq	r2, r1, r4, lsr #25
   12950:	andeq	r2, r1, r4, lsr #25
   12954:	andeq	r2, r1, r4, lsr #25
   12958:	andeq	r2, r1, r4, lsr #25
   1295c:	andeq	r2, r1, r4, lsr #25
   12960:	andeq	r2, r1, r4, lsr #25
   12964:	andeq	r2, r1, r4, lsr #25
   12968:	andeq	r2, r1, r4, lsr #25
   1296c:	andeq	r2, r1, r4, lsr #25
   12970:	andeq	r2, r1, r4, lsr #25
   12974:	andeq	r2, r1, r4, lsr #25
   12978:	andeq	r2, r1, r4, lsr #25
   1297c:	andeq	r2, r1, r4, lsr #25
   12980:	andeq	r2, r1, r4, lsr #25
   12984:	andeq	r2, r1, r8, lsl sp
   12988:	andeq	r2, r1, ip, lsl sp
   1298c:	andeq	r2, r1, ip, lsl sp
   12990:	andeq	r2, r1, r4, lsl fp
   12994:	andeq	r2, r1, ip, lsl sp
   12998:	andeq	r2, r1, r0, lsl #22
   1299c:	andeq	r2, r1, ip, lsl sp
   129a0:	andeq	r2, r1, r4, lsl ip
   129a4:	andeq	r2, r1, ip, lsl sp
   129a8:	andeq	r2, r1, ip, lsl sp
   129ac:	andeq	r2, r1, ip, lsl sp
   129b0:	andeq	r2, r1, r0, lsl #22
   129b4:	andeq	r2, r1, r0, lsl #22
   129b8:	andeq	r2, r1, r0, lsl #22
   129bc:	andeq	r2, r1, r0, lsl #22
   129c0:	andeq	r2, r1, r0, lsl #22
   129c4:	andeq	r2, r1, r0, lsl #22
   129c8:	andeq	r2, r1, r0, lsl #22
   129cc:	andeq	r2, r1, r0, lsl #22
   129d0:	andeq	r2, r1, r0, lsl #22
   129d4:	andeq	r2, r1, r0, lsl #22
   129d8:	andeq	r2, r1, r0, lsl #22
   129dc:	andeq	r2, r1, r0, lsl #22
   129e0:	andeq	r2, r1, r0, lsl #22
   129e4:	andeq	r2, r1, r0, lsl #22
   129e8:	andeq	r2, r1, r0, lsl #22
   129ec:	andeq	r2, r1, r0, lsl #22
   129f0:	andeq	r2, r1, ip, lsl sp
   129f4:	andeq	r2, r1, ip, lsl sp
   129f8:	andeq	r2, r1, ip, lsl sp
   129fc:	andeq	r2, r1, ip, lsl sp
   12a00:	ldrdeq	r2, [r1], -ip
   12a04:	andeq	r2, r1, r4, lsr #25
   12a08:	andeq	r2, r1, r0, lsl #22
   12a0c:	andeq	r2, r1, r0, lsl #22
   12a10:	andeq	r2, r1, r0, lsl #22
   12a14:	andeq	r2, r1, r0, lsl #22
   12a18:	andeq	r2, r1, r0, lsl #22
   12a1c:	andeq	r2, r1, r0, lsl #22
   12a20:	andeq	r2, r1, r0, lsl #22
   12a24:	andeq	r2, r1, r0, lsl #22
   12a28:	andeq	r2, r1, r0, lsl #22
   12a2c:	andeq	r2, r1, r0, lsl #22
   12a30:	andeq	r2, r1, r0, lsl #22
   12a34:	andeq	r2, r1, r0, lsl #22
   12a38:	andeq	r2, r1, r0, lsl #22
   12a3c:	andeq	r2, r1, r0, lsl #22
   12a40:	andeq	r2, r1, r0, lsl #22
   12a44:	andeq	r2, r1, r0, lsl #22
   12a48:	andeq	r2, r1, r0, lsl #22
   12a4c:	andeq	r2, r1, r0, lsl #22
   12a50:	andeq	r2, r1, r0, lsl #22
   12a54:	andeq	r2, r1, r0, lsl #22
   12a58:	andeq	r2, r1, r0, lsl #22
   12a5c:	andeq	r2, r1, r0, lsl #22
   12a60:	andeq	r2, r1, r0, lsl #22
   12a64:	andeq	r2, r1, r0, lsl #22
   12a68:	andeq	r2, r1, r0, lsl #22
   12a6c:	andeq	r2, r1, r0, lsl #22
   12a70:	andeq	r2, r1, ip, lsl sp
   12a74:	andeq	r2, r1, r8, asr #22
   12a78:	andeq	r2, r1, r0, lsl #22
   12a7c:	andeq	r2, r1, ip, lsl sp
   12a80:	andeq	r2, r1, r0, lsl #22
   12a84:	andeq	r2, r1, ip, lsl sp
   12a88:	andeq	r2, r1, r0, lsl #22
   12a8c:	andeq	r2, r1, r0, lsl #22
   12a90:	andeq	r2, r1, r0, lsl #22
   12a94:	andeq	r2, r1, r0, lsl #22
   12a98:	andeq	r2, r1, r0, lsl #22
   12a9c:	andeq	r2, r1, r0, lsl #22
   12aa0:	andeq	r2, r1, r0, lsl #22
   12aa4:	andeq	r2, r1, r0, lsl #22
   12aa8:	andeq	r2, r1, r0, lsl #22
   12aac:	andeq	r2, r1, r0, lsl #22
   12ab0:	andeq	r2, r1, r0, lsl #22
   12ab4:	andeq	r2, r1, r0, lsl #22
   12ab8:	andeq	r2, r1, r0, lsl #22
   12abc:	andeq	r2, r1, r0, lsl #22
   12ac0:	andeq	r2, r1, r0, lsl #22
   12ac4:	andeq	r2, r1, r0, lsl #22
   12ac8:	andeq	r2, r1, r0, lsl #22
   12acc:	andeq	r2, r1, r0, lsl #22
   12ad0:	andeq	r2, r1, r0, lsl #22
   12ad4:	andeq	r2, r1, r0, lsl #22
   12ad8:	andeq	r2, r1, r0, lsl #22
   12adc:	andeq	r2, r1, r0, lsl #22
   12ae0:	andeq	r2, r1, r0, lsl #22
   12ae4:	andeq	r2, r1, r0, lsl #22
   12ae8:	andeq	r2, r1, r0, lsl #22
   12aec:	andeq	r2, r1, r0, lsl #22
   12af0:	andeq	r2, r1, r8, lsr #22
   12af4:	andeq	r2, r1, ip, lsl sp
   12af8:	andeq	r2, r1, r8, lsr #22
   12afc:	andeq	r2, r1, r4, lsl fp
   12b00:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b04:	cmp	r0, #0
   12b08:	beq	12d7c <putchar_unlocked@plt+0x1dc0>
   12b0c:	ldr	r0, [fp, #16]
   12b10:	b	12d80 <putchar_unlocked@plt+0x1dc4>
   12b14:	mov	r9, #0
   12b18:	cmp	r6, #0
   12b1c:	beq	12d18 <putchar_unlocked@plt+0x1d5c>
   12b20:	mov	sl, #0
   12b24:	b	12b00 <putchar_unlocked@plt+0x1b44>
   12b28:	mov	r9, #0
   12b2c:	cmn	lr, #1
   12b30:	beq	12cfc <putchar_unlocked@plt+0x1d40>
   12b34:	cmp	r6, #0
   12b38:	bne	12b20 <putchar_unlocked@plt+0x1b64>
   12b3c:	cmp	lr, #1
   12b40:	beq	12d18 <putchar_unlocked@plt+0x1d5c>
   12b44:	b	12b20 <putchar_unlocked@plt+0x1b64>
   12b48:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12b4c:	cmp	r0, #2
   12b50:	bne	12d44 <putchar_unlocked@plt+0x1d88>
   12b54:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b58:	tst	r0, #1
   12b5c:	bne	1348c <putchar_unlocked@plt+0x24d0>
   12b60:	mov	sl, #0
   12b64:	mov	r0, #92	; 0x5c
   12b68:	b	12d58 <putchar_unlocked@plt+0x1d9c>
   12b6c:	mov	r0, #102	; 0x66
   12b70:	b	12d68 <putchar_unlocked@plt+0x1dac>
   12b74:	mov	r2, #116	; 0x74
   12b78:	b	12b88 <putchar_unlocked@plt+0x1bcc>
   12b7c:	mov	r0, #98	; 0x62
   12b80:	b	12d68 <putchar_unlocked@plt+0x1dac>
   12b84:	mov	r2, #114	; 0x72
   12b88:	ldr	r0, [sp, #64]	; 0x40
   12b8c:	tst	r0, #1
   12b90:	mov	r0, r2
   12b94:	bne	12d68 <putchar_unlocked@plt+0x1dac>
   12b98:	b	1348c <putchar_unlocked@plt+0x24d0>
   12b9c:	ldr	r0, [sp, #84]	; 0x54
   12ba0:	tst	r0, #1
   12ba4:	beq	12e58 <putchar_unlocked@plt+0x1e9c>
   12ba8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12bac:	tst	r0, #1
   12bb0:	bne	1348c <putchar_unlocked@plt+0x24d0>
   12bb4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12bb8:	cmp	r0, #2
   12bbc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12bc0:	movwne	r0, #1
   12bc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12bc8:	orr	r0, r0, r2
   12bcc:	tst	r0, #1
   12bd0:	beq	1324c <putchar_unlocked@plt+0x2290>
   12bd4:	mov	r0, r8
   12bd8:	b	13280 <putchar_unlocked@plt+0x22c4>
   12bdc:	mov	sl, #0
   12be0:	mov	r5, #63	; 0x3f
   12be4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12be8:	cmp	r0, #5
   12bec:	beq	1300c <putchar_unlocked@plt+0x2050>
   12bf0:	cmp	r0, #2
   12bf4:	bne	130ac <putchar_unlocked@plt+0x20f0>
   12bf8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12bfc:	tst	r0, #1
   12c00:	mov	r9, #0
   12c04:	beq	12b00 <putchar_unlocked@plt+0x1b44>
   12c08:	b	1348c <putchar_unlocked@plt+0x24d0>
   12c0c:	mov	r0, #118	; 0x76
   12c10:	b	12d68 <putchar_unlocked@plt+0x1dac>
   12c14:	mov	r5, #39	; 0x27
   12c18:	mov	r0, #1
   12c1c:	str	r0, [sp, #56]	; 0x38
   12c20:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12c24:	cmp	r0, #2
   12c28:	bne	12e78 <putchar_unlocked@plt+0x1ebc>
   12c2c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12c30:	tst	r0, #1
   12c34:	bne	1348c <putchar_unlocked@plt+0x24d0>
   12c38:	ldr	r2, [sp, #72]	; 0x48
   12c3c:	cmp	r2, #0
   12c40:	mov	r0, r2
   12c44:	movwne	r0, #1
   12c48:	clz	r1, r4
   12c4c:	lsr	r1, r1, #5
   12c50:	orrs	r0, r0, r1
   12c54:	moveq	r2, r4
   12c58:	str	r2, [sp, #72]	; 0x48
   12c5c:	moveq	r4, r0
   12c60:	cmp	r8, r4
   12c64:	movcc	r0, #39	; 0x27
   12c68:	strbcc	r0, [r7, r8]
   12c6c:	add	r0, r8, #1
   12c70:	cmp	r0, r4
   12c74:	movcc	r1, #92	; 0x5c
   12c78:	strbcc	r1, [r7, r0]
   12c7c:	add	r0, r8, #2
   12c80:	cmp	r0, r4
   12c84:	movcc	r1, #39	; 0x27
   12c88:	strbcc	r1, [r7, r0]
   12c8c:	add	r8, r8, #3
   12c90:	mov	r0, #0
   12c94:	str	r0, [fp, #-56]	; 0xffffffc8
   12c98:	mov	sl, #0
   12c9c:	mov	r9, #1
   12ca0:	b	12b00 <putchar_unlocked@plt+0x1b44>
   12ca4:	str	r4, [sp, #24]
   12ca8:	ldr	r0, [sp, #40]	; 0x28
   12cac:	cmp	r0, #1
   12cb0:	bne	12e80 <putchar_unlocked@plt+0x1ec4>
   12cb4:	str	lr, [sp, #28]
   12cb8:	bl	10ed8 <__ctype_b_loc@plt>
   12cbc:	ldr	ip, [fp, #-84]	; 0xffffffac
   12cc0:	ldr	r0, [r0]
   12cc4:	add	r0, r0, r5, lsl #1
   12cc8:	ldrb	r0, [r0, #1]
   12ccc:	ubfx	r9, r0, #6, #1
   12cd0:	mov	r1, #1
   12cd4:	ldr	r4, [sp, #24]
   12cd8:	ldr	r0, [sp, #52]	; 0x34
   12cdc:	orr	r0, r9, r0
   12ce0:	mov	r2, r1
   12ce4:	cmp	r1, #1
   12ce8:	bhi	130b4 <putchar_unlocked@plt+0x20f8>
   12cec:	tst	r0, #1
   12cf0:	beq	130b4 <putchar_unlocked@plt+0x20f8>
   12cf4:	ldr	lr, [sp, #28]
   12cf8:	b	12b00 <putchar_unlocked@plt+0x1b44>
   12cfc:	cmp	r6, #0
   12d00:	ldrbeq	r0, [ip, #1]
   12d04:	cmpeq	r0, #0
   12d08:	beq	12d18 <putchar_unlocked@plt+0x1d5c>
   12d0c:	mvn	lr, #0
   12d10:	mov	sl, #0
   12d14:	b	12b00 <putchar_unlocked@plt+0x1b44>
   12d18:	mov	r1, #1
   12d1c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12d20:	cmp	r0, #2
   12d24:	bne	12d3c <putchar_unlocked@plt+0x1d80>
   12d28:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12d2c:	tst	r0, #1
   12d30:	mov	r9, r1
   12d34:	beq	12b00 <putchar_unlocked@plt+0x1b44>
   12d38:	b	1348c <putchar_unlocked@plt+0x24d0>
   12d3c:	mov	r9, r1
   12d40:	b	12b00 <putchar_unlocked@plt+0x1b44>
   12d44:	mov	sl, #0
   12d48:	mov	r0, #92	; 0x5c
   12d4c:	ldr	r1, [sp, #48]	; 0x30
   12d50:	cmp	r1, #0
   12d54:	beq	12d68 <putchar_unlocked@plt+0x1dac>
   12d58:	mov	r9, #0
   12d5c:	cmp	sl, #0
   12d60:	beq	13318 <putchar_unlocked@plt+0x235c>
   12d64:	b	13354 <putchar_unlocked@plt+0x2398>
   12d68:	mov	r9, #0
   12d6c:	ldr	r1, [sp, #84]	; 0x54
   12d70:	tst	r1, #1
   12d74:	mov	sl, #0
   12d78:	bne	12db8 <putchar_unlocked@plt+0x1dfc>
   12d7c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12d80:	cmp	r0, #0
   12d84:	mov	r0, r5
   12d88:	beq	12dac <putchar_unlocked@plt+0x1df0>
   12d8c:	ubfx	r0, r5, #5, #3
   12d90:	ldr	r1, [fp, #16]
   12d94:	ldr	r0, [r1, r0, lsl #2]
   12d98:	and	r1, r5, #31
   12d9c:	mov	r2, #1
   12da0:	tst	r0, r2, lsl r1
   12da4:	mov	r0, r5
   12da8:	bne	12db8 <putchar_unlocked@plt+0x1dfc>
   12dac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12db0:	cmp	r1, #0
   12db4:	beq	13310 <putchar_unlocked@plt+0x2354>
   12db8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12dbc:	tst	r1, #1
   12dc0:	bne	1348c <putchar_unlocked@plt+0x24d0>
   12dc4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12dc8:	cmp	r1, #2
   12dcc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12dd0:	movwne	r1, #1
   12dd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12dd8:	orr	r1, r1, r2
   12ddc:	tst	r1, #1
   12de0:	beq	12dec <putchar_unlocked@plt+0x1e30>
   12de4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12de8:	b	12e28 <putchar_unlocked@plt+0x1e6c>
   12dec:	cmp	r8, r4
   12df0:	movcc	r1, #39	; 0x27
   12df4:	strbcc	r1, [r7, r8]
   12df8:	add	r1, r8, #1
   12dfc:	cmp	r1, r4
   12e00:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12e04:	movcc	r2, #36	; 0x24
   12e08:	strbcc	r2, [r7, r1]
   12e0c:	add	r1, r8, #2
   12e10:	cmp	r1, r4
   12e14:	movcc	r2, #39	; 0x27
   12e18:	strbcc	r2, [r7, r1]
   12e1c:	add	r8, r8, #3
   12e20:	mov	r1, #1
   12e24:	str	r1, [fp, #-56]	; 0xffffffc8
   12e28:	cmp	r8, r4
   12e2c:	movcc	r1, #92	; 0x5c
   12e30:	strbcc	r1, [r7, r8]
   12e34:	add	r8, r8, #1
   12e38:	cmp	r8, r4
   12e3c:	strbcc	r0, [r7, r8]
   12e40:	and	r5, r5, r9
   12e44:	add	r8, r8, #1
   12e48:	add	r6, r6, #1
   12e4c:	cmn	lr, #1
   12e50:	bne	1282c <putchar_unlocked@plt+0x1870>
   12e54:	b	12838 <putchar_unlocked@plt+0x187c>
   12e58:	mov	r9, #0
   12e5c:	ldr	r0, [sp, #36]	; 0x24
   12e60:	cmp	r0, #0
   12e64:	mov	sl, #0
   12e68:	mov	r5, #0
   12e6c:	beq	12d7c <putchar_unlocked@plt+0x1dc0>
   12e70:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12e74:	b	12e48 <putchar_unlocked@plt+0x1e8c>
   12e78:	mov	r9, #1
   12e7c:	b	12b00 <putchar_unlocked@plt+0x1b44>
   12e80:	mov	r0, #0
   12e84:	str	r0, [fp, #-36]	; 0xffffffdc
   12e88:	str	r0, [fp, #-40]	; 0xffffffd8
   12e8c:	cmn	lr, #1
   12e90:	bne	12ea4 <putchar_unlocked@plt+0x1ee8>
   12e94:	mov	r0, ip
   12e98:	bl	10ef0 <strlen@plt>
   12e9c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12ea0:	mov	lr, r0
   12ea4:	add	r0, ip, r6
   12ea8:	str	r0, [sp, #20]
   12eac:	mov	r9, #1
   12eb0:	mov	r7, #0
   12eb4:	sub	r4, fp, #40	; 0x28
   12eb8:	str	lr, [sp, #28]
   12ebc:	str	r7, [sp, #44]	; 0x2c
   12ec0:	add	r7, r7, r6
   12ec4:	add	r1, ip, r7
   12ec8:	sub	r2, lr, r7
   12ecc:	sub	r0, fp, #44	; 0x2c
   12ed0:	mov	r3, r4
   12ed4:	bl	14d08 <putchar_unlocked@plt+0x3d4c>
   12ed8:	cmp	r0, #0
   12edc:	beq	1339c <putchar_unlocked@plt+0x23e0>
   12ee0:	cmn	r0, #1
   12ee4:	beq	1335c <putchar_unlocked@plt+0x23a0>
   12ee8:	cmn	r0, #2
   12eec:	ldr	lr, [sp, #28]
   12ef0:	beq	13364 <putchar_unlocked@plt+0x23a8>
   12ef4:	cmp	r0, #2
   12ef8:	mov	r1, #0
   12efc:	movwcc	r1, #1
   12f00:	ldr	r2, [sp, #60]	; 0x3c
   12f04:	eor	r2, r2, #1
   12f08:	orrs	r1, r2, r1
   12f0c:	ldr	r4, [sp, #24]
   12f10:	bne	12fd0 <putchar_unlocked@plt+0x2014>
   12f14:	ldr	r1, [sp, #44]	; 0x2c
   12f18:	ldr	r2, [sp, #20]
   12f1c:	add	r1, r2, r1
   12f20:	mov	r2, #1
   12f24:	ldrb	r3, [r1, r2]
   12f28:	sub	r3, r3, #91	; 0x5b
   12f2c:	cmp	r3, #33	; 0x21
   12f30:	bhi	12fc4 <putchar_unlocked@plt+0x2008>
   12f34:	add	r7, pc, #0
   12f38:	ldr	pc, [r7, r3, lsl #2]
   12f3c:	andeq	r3, r1, r4, lsl #9
   12f40:	andeq	r3, r1, r4, lsl #9
   12f44:	andeq	r2, r1, r4, asr #31
   12f48:	andeq	r3, r1, r4, lsl #9
   12f4c:	andeq	r2, r1, r4, asr #31
   12f50:	andeq	r3, r1, r4, lsl #9
   12f54:	andeq	r2, r1, r4, asr #31
   12f58:	andeq	r2, r1, r4, asr #31
   12f5c:	andeq	r2, r1, r4, asr #31
   12f60:	andeq	r2, r1, r4, asr #31
   12f64:	andeq	r2, r1, r4, asr #31
   12f68:	andeq	r2, r1, r4, asr #31
   12f6c:	andeq	r2, r1, r4, asr #31
   12f70:	andeq	r2, r1, r4, asr #31
   12f74:	andeq	r2, r1, r4, asr #31
   12f78:	andeq	r2, r1, r4, asr #31
   12f7c:	andeq	r2, r1, r4, asr #31
   12f80:	andeq	r2, r1, r4, asr #31
   12f84:	andeq	r2, r1, r4, asr #31
   12f88:	andeq	r2, r1, r4, asr #31
   12f8c:	andeq	r2, r1, r4, asr #31
   12f90:	andeq	r2, r1, r4, asr #31
   12f94:	andeq	r2, r1, r4, asr #31
   12f98:	andeq	r2, r1, r4, asr #31
   12f9c:	andeq	r2, r1, r4, asr #31
   12fa0:	andeq	r2, r1, r4, asr #31
   12fa4:	andeq	r2, r1, r4, asr #31
   12fa8:	andeq	r2, r1, r4, asr #31
   12fac:	andeq	r2, r1, r4, asr #31
   12fb0:	andeq	r2, r1, r4, asr #31
   12fb4:	andeq	r2, r1, r4, asr #31
   12fb8:	andeq	r2, r1, r4, asr #31
   12fbc:	andeq	r2, r1, r4, asr #31
   12fc0:	andeq	r3, r1, r4, lsl #9
   12fc4:	add	r2, r2, #1
   12fc8:	cmp	r2, r0
   12fcc:	bcc	12f24 <putchar_unlocked@plt+0x1f68>
   12fd0:	ldr	r7, [sp, #44]	; 0x2c
   12fd4:	add	r7, r0, r7
   12fd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fdc:	bl	10e3c <iswprint@plt>
   12fe0:	cmp	r0, #0
   12fe4:	movwne	r0, #1
   12fe8:	and	r9, r9, r0
   12fec:	sub	r4, fp, #40	; 0x28
   12ff0:	mov	r0, r4
   12ff4:	bl	10de8 <mbsinit@plt>
   12ff8:	ldr	lr, [sp, #28]
   12ffc:	cmp	r0, #0
   13000:	ldr	ip, [fp, #-84]	; 0xffffffac
   13004:	beq	12ebc <putchar_unlocked@plt+0x1f00>
   13008:	b	133a4 <putchar_unlocked@plt+0x23e8>
   1300c:	ldr	r0, [sp, #32]
   13010:	cmp	r0, #0
   13014:	beq	130ac <putchar_unlocked@plt+0x20f0>
   13018:	add	r0, r6, #2
   1301c:	cmp	r0, lr
   13020:	bcs	130ac <putchar_unlocked@plt+0x20f0>
   13024:	add	r1, ip, r6
   13028:	ldrb	r1, [r1, #1]
   1302c:	cmp	r1, #63	; 0x3f
   13030:	bne	130ac <putchar_unlocked@plt+0x20f0>
   13034:	ldrb	r9, [ip, r0]
   13038:	sub	r2, r9, #33	; 0x21
   1303c:	cmp	r2, #29
   13040:	bhi	130ac <putchar_unlocked@plt+0x20f0>
   13044:	mov	r3, #1
   13048:	movw	r1, #20929	; 0x51c1
   1304c:	movt	r1, #14336	; 0x3800
   13050:	tst	r1, r3, lsl r2
   13054:	beq	130ac <putchar_unlocked@plt+0x20f0>
   13058:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1305c:	tst	r1, #1
   13060:	bne	1348c <putchar_unlocked@plt+0x24d0>
   13064:	cmp	r8, r4
   13068:	movcc	r1, #63	; 0x3f
   1306c:	strbcc	r1, [r7, r8]
   13070:	add	r2, r8, #1
   13074:	cmp	r2, r4
   13078:	movcc	r1, #34	; 0x22
   1307c:	strbcc	r1, [r7, r2]
   13080:	add	r2, r8, #2
   13084:	cmp	r2, r4
   13088:	movcc	r1, #34	; 0x22
   1308c:	strbcc	r1, [r7, r2]
   13090:	add	r2, r8, #3
   13094:	cmp	r2, r4
   13098:	movcc	r1, #63	; 0x3f
   1309c:	strbcc	r1, [r7, r2]
   130a0:	add	r8, r8, #4
   130a4:	mov	r6, r0
   130a8:	mov	r5, r9
   130ac:	mov	r9, #0
   130b0:	b	12b00 <putchar_unlocked@plt+0x1b44>
   130b4:	add	r1, r2, r6
   130b8:	str	r1, [sp, #44]	; 0x2c
   130bc:	add	r1, r6, #1
   130c0:	mov	r3, #0
   130c4:	ldr	lr, [sp, #28]
   130c8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   130cc:	tst	r0, #1
   130d0:	bne	131c4 <putchar_unlocked@plt+0x2208>
   130d4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   130d8:	tst	r2, #1
   130dc:	bne	1348c <putchar_unlocked@plt+0x24d0>
   130e0:	cmp	r6, #2
   130e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   130e8:	movwne	r3, #1
   130ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   130f0:	orr	r3, r3, r2
   130f4:	tst	r3, #1
   130f8:	bne	13134 <putchar_unlocked@plt+0x2178>
   130fc:	cmp	r8, r4
   13100:	movcc	r2, #39	; 0x27
   13104:	strbcc	r2, [r7, r8]
   13108:	add	r3, r8, #1
   1310c:	cmp	r3, r4
   13110:	movcc	r2, #36	; 0x24
   13114:	strbcc	r2, [r7, r3]
   13118:	add	r3, r8, #2
   1311c:	cmp	r3, r4
   13120:	movcc	r2, #39	; 0x27
   13124:	strbcc	r2, [r7, r3]
   13128:	add	r8, r8, #3
   1312c:	mov	r2, #1
   13130:	str	r2, [fp, #-56]	; 0xffffffc8
   13134:	cmp	r8, r4
   13138:	movcc	r2, #92	; 0x5c
   1313c:	strbcc	r2, [r7, r8]
   13140:	add	r3, r8, #1
   13144:	cmp	r3, r4
   13148:	bcs	13168 <putchar_unlocked@plt+0x21ac>
   1314c:	and	r7, r5, #192	; 0xc0
   13150:	mov	r2, #48	; 0x30
   13154:	orr	r7, r2, r7, lsr #6
   13158:	ldr	r6, [sp, #80]	; 0x50
   1315c:	strb	r7, [r6, r3]
   13160:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13164:	ldr	r7, [sp, #80]	; 0x50
   13168:	add	r3, r8, #2
   1316c:	cmp	r3, r4
   13170:	bcs	13190 <putchar_unlocked@plt+0x21d4>
   13174:	lsr	r7, r5, #3
   13178:	mov	r2, #6
   1317c:	bfi	r7, r2, #3, #29
   13180:	ldr	r6, [sp, #80]	; 0x50
   13184:	strb	r7, [r6, r3]
   13188:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1318c:	ldr	r7, [sp, #80]	; 0x50
   13190:	mov	r2, #6
   13194:	bfi	r5, r2, #3, #29
   13198:	add	r8, r8, #3
   1319c:	mov	r3, #1
   131a0:	b	131e8 <putchar_unlocked@plt+0x222c>
   131a4:	ldr	r7, [sp, #80]	; 0x50
   131a8:	cmp	r8, r4
   131ac:	strbcc	r5, [r7, r8]
   131b0:	ldrb	r5, [ip, r1]
   131b4:	add	r1, r1, #1
   131b8:	add	r8, r8, #1
   131bc:	tst	r0, #1
   131c0:	beq	130d4 <putchar_unlocked@plt+0x2118>
   131c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   131c8:	tst	r2, #1
   131cc:	beq	131e0 <putchar_unlocked@plt+0x2224>
   131d0:	cmp	r8, r4
   131d4:	movcc	r2, #92	; 0x5c
   131d8:	strbcc	r2, [r7, r8]
   131dc:	add	r8, r8, #1
   131e0:	mov	r2, #0
   131e4:	str	r2, [fp, #-52]	; 0xffffffcc
   131e8:	and	sl, r3, #1
   131ec:	ldr	r2, [sp, #44]	; 0x2c
   131f0:	cmp	r2, r1
   131f4:	bls	13300 <putchar_unlocked@plt+0x2344>
   131f8:	cmp	sl, #0
   131fc:	movwne	sl, #1
   13200:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13204:	mvn	r7, r2
   13208:	orr	r7, r7, sl
   1320c:	tst	r7, #1
   13210:	bne	131a4 <putchar_unlocked@plt+0x21e8>
   13214:	cmp	r8, r4
   13218:	ldrcc	r7, [sp, #80]	; 0x50
   1321c:	movcc	r2, #39	; 0x27
   13220:	strbcc	r2, [r7, r8]
   13224:	add	r7, r8, #1
   13228:	cmp	r7, r4
   1322c:	ldrcc	r6, [sp, #80]	; 0x50
   13230:	movcc	r2, #39	; 0x27
   13234:	strbcc	r2, [r6, r7]
   13238:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   1323c:	add	r8, r8, #2
   13240:	mov	r2, #0
   13244:	str	r2, [fp, #-56]	; 0xffffffc8
   13248:	b	131a4 <putchar_unlocked@plt+0x21e8>
   1324c:	cmp	r8, r4
   13250:	movcc	r0, #39	; 0x27
   13254:	strbcc	r0, [r7, r8]
   13258:	add	r0, r8, #1
   1325c:	cmp	r0, r4
   13260:	movcc	r1, #36	; 0x24
   13264:	strbcc	r1, [r7, r0]
   13268:	add	r0, r8, #2
   1326c:	cmp	r0, r4
   13270:	movcc	r1, #39	; 0x27
   13274:	strbcc	r1, [r7, r0]
   13278:	add	r0, r8, #3
   1327c:	mov	r2, #1
   13280:	cmp	r0, r4
   13284:	movcc	r1, #92	; 0x5c
   13288:	strbcc	r1, [r7, r0]
   1328c:	str	r2, [fp, #-56]	; 0xffffffc8
   13290:	add	r8, r0, #1
   13294:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13298:	cmp	r1, #2
   1329c:	beq	132f0 <putchar_unlocked@plt+0x2334>
   132a0:	add	r1, r6, #1
   132a4:	mov	r9, #0
   132a8:	mov	sl, #1
   132ac:	mov	r5, #48	; 0x30
   132b0:	cmp	r1, lr
   132b4:	bcs	12b00 <putchar_unlocked@plt+0x1b44>
   132b8:	ldrb	r1, [ip, r1]
   132bc:	sub	r1, r1, #48	; 0x30
   132c0:	uxtb	r1, r1
   132c4:	cmp	r1, #9
   132c8:	bhi	12b00 <putchar_unlocked@plt+0x1b44>
   132cc:	cmp	r8, r4
   132d0:	movcc	r1, #48	; 0x30
   132d4:	strbcc	r1, [r7, r8]
   132d8:	add	r1, r0, #2
   132dc:	cmp	r1, r4
   132e0:	movcc	r2, #48	; 0x30
   132e4:	strbcc	r2, [r7, r1]
   132e8:	add	r8, r0, #3
   132ec:	b	12b00 <putchar_unlocked@plt+0x1b44>
   132f0:	mov	r0, #48	; 0x30
   132f4:	mov	sl, #1
   132f8:	mov	r9, #0
   132fc:	b	12dac <putchar_unlocked@plt+0x1df0>
   13300:	sub	r6, r1, #1
   13304:	cmp	sl, #0
   13308:	movwne	sl, #1
   1330c:	mov	r0, r5
   13310:	cmp	sl, #0
   13314:	bne	13354 <putchar_unlocked@plt+0x2398>
   13318:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1331c:	tst	r1, #1
   13320:	beq	13354 <putchar_unlocked@plt+0x2398>
   13324:	cmp	r8, r4
   13328:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1332c:	movcc	r1, #39	; 0x27
   13330:	strbcc	r1, [r7, r8]
   13334:	add	r1, r8, #1
   13338:	cmp	r1, r4
   1333c:	movcc	r2, #39	; 0x27
   13340:	strbcc	r2, [r7, r1]
   13344:	add	r8, r8, #2
   13348:	mov	r1, #0
   1334c:	str	r1, [fp, #-56]	; 0xffffffc8
   13350:	b	12e38 <putchar_unlocked@plt+0x1e7c>
   13354:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13358:	b	12e38 <putchar_unlocked@plt+0x1e7c>
   1335c:	mov	r9, #0
   13360:	b	1339c <putchar_unlocked@plt+0x23e0>
   13364:	mov	r9, #0
   13368:	cmp	r7, lr
   1336c:	bcs	1339c <putchar_unlocked@plt+0x23e0>
   13370:	ldr	ip, [fp, #-84]	; 0xffffffac
   13374:	ldr	r7, [sp, #44]	; 0x2c
   13378:	ldr	r0, [sp, #20]
   1337c:	ldrb	r0, [r0, r7]
   13380:	cmp	r0, #0
   13384:	beq	133a4 <putchar_unlocked@plt+0x23e8>
   13388:	add	r7, r7, #1
   1338c:	add	r0, r6, r7
   13390:	cmp	r0, lr
   13394:	bcc	13378 <putchar_unlocked@plt+0x23bc>
   13398:	b	133a4 <putchar_unlocked@plt+0x23e8>
   1339c:	ldr	ip, [fp, #-84]	; 0xffffffac
   133a0:	ldr	r7, [sp, #44]	; 0x2c
   133a4:	mov	r1, r7
   133a8:	ldr	r7, [sp, #80]	; 0x50
   133ac:	b	12cd4 <putchar_unlocked@plt+0x1d18>
   133b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   133b4:	eor	r0, r1, #2
   133b8:	orr	r0, r0, r8
   133bc:	clz	r0, r0
   133c0:	lsr	r0, r0, #5
   133c4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   133c8:	tst	r2, r0
   133cc:	bne	1348c <putchar_unlocked@plt+0x24d0>
   133d0:	cmp	r1, #2
   133d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   133d8:	movwne	r0, #1
   133dc:	orr	r0, r2, r0
   133e0:	tst	r0, #1
   133e4:	ldreq	r0, [sp, #56]	; 0x38
   133e8:	eoreq	r0, r0, #1
   133ec:	tsteq	r0, #1
   133f0:	bne	13424 <putchar_unlocked@plt+0x2468>
   133f4:	mov	r9, lr
   133f8:	tst	r5, #1
   133fc:	bne	134f4 <putchar_unlocked@plt+0x2538>
   13400:	ldr	r0, [sp, #72]	; 0x48
   13404:	cmp	r0, #0
   13408:	beq	13424 <putchar_unlocked@plt+0x2468>
   1340c:	mov	r5, #0
   13410:	cmp	r4, #0
   13414:	ldr	r0, [sp, #84]	; 0x54
   13418:	mov	sl, r2
   1341c:	ldr	r6, [sp, #72]	; 0x48
   13420:	beq	125bc <putchar_unlocked@plt+0x1600>
   13424:	ldr	r1, [sp, #92]	; 0x5c
   13428:	clz	r0, r1
   1342c:	lsr	r0, r0, #5
   13430:	orr	r0, r0, r2
   13434:	tst	r0, #1
   13438:	bne	13464 <putchar_unlocked@plt+0x24a8>
   1343c:	ldrb	r0, [r1]
   13440:	cmp	r0, #0
   13444:	beq	13464 <putchar_unlocked@plt+0x24a8>
   13448:	add	r1, r1, #1
   1344c:	cmp	r8, r4
   13450:	strbcc	r0, [r7, r8]
   13454:	add	r8, r8, #1
   13458:	ldrb	r0, [r1], #1
   1345c:	cmp	r0, #0
   13460:	bne	1344c <putchar_unlocked@plt+0x2490>
   13464:	cmp	r8, r4
   13468:	movcc	r0, #0
   1346c:	strbcc	r0, [r7, r8]
   13470:	b	134e8 <putchar_unlocked@plt+0x252c>
   13474:	ldr	ip, [fp, #-84]	; 0xffffffac
   13478:	mov	lr, r4
   1347c:	mov	r4, r5
   13480:	b	1348c <putchar_unlocked@plt+0x24d0>
   13484:	ldr	r7, [sp, #80]	; 0x50
   13488:	ldr	ip, [fp, #-84]	; 0xffffffac
   1348c:	mov	r0, #0
   13490:	ldr	r1, [fp, #12]
   13494:	bic	r1, r1, #2
   13498:	ldr	r2, [sp, #84]	; 0x54
   1349c:	tst	r2, #1
   134a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   134a4:	mov	r2, r3
   134a8:	movwne	r2, #4
   134ac:	cmp	r3, #2
   134b0:	movne	r2, r3
   134b4:	str	r2, [sp]
   134b8:	str	r1, [sp, #4]
   134bc:	str	r0, [sp, #8]
   134c0:	ldr	r0, [sp, #68]	; 0x44
   134c4:	str	r0, [sp, #12]
   134c8:	ldr	r0, [sp, #76]	; 0x4c
   134cc:	str	r0, [sp, #16]
   134d0:	mov	r0, r7
   134d4:	mov	r1, r4
   134d8:	mov	r2, ip
   134dc:	mov	r3, lr
   134e0:	bl	12534 <putchar_unlocked@plt+0x1578>
   134e4:	mov	r8, r0
   134e8:	mov	r0, r8
   134ec:	sub	sp, fp, #28
   134f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134f4:	mov	r0, #5
   134f8:	str	r0, [sp]
   134fc:	ldr	r0, [fp, #12]
   13500:	str	r0, [sp, #4]
   13504:	ldr	r0, [fp, #16]
   13508:	str	r0, [sp, #8]
   1350c:	ldr	r0, [sp, #68]	; 0x44
   13510:	str	r0, [sp, #12]
   13514:	ldr	r0, [sp, #76]	; 0x4c
   13518:	str	r0, [sp, #16]
   1351c:	mov	r0, r7
   13520:	ldr	r1, [sp, #72]	; 0x48
   13524:	ldr	r2, [fp, #-84]	; 0xffffffac
   13528:	mov	r3, r9
   1352c:	b	134e0 <putchar_unlocked@plt+0x2524>
   13530:	bl	10fb0 <abort@plt>
   13534:	mov	r3, r2
   13538:	mov	r2, #0
   1353c:	b	13540 <putchar_unlocked@plt+0x2584>
   13540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13544:	add	fp, sp, #28
   13548:	sub	sp, sp, #36	; 0x24
   1354c:	mov	r4, r2
   13550:	str	r2, [sp, #24]
   13554:	mov	r5, r1
   13558:	mov	r6, r0
   1355c:	str	r0, [sp, #20]
   13560:	movw	r8, #24928	; 0x6160
   13564:	movt	r8, #2
   13568:	cmp	r3, #0
   1356c:	movne	r8, r3
   13570:	bl	10efc <__errno_location@plt>
   13574:	str	r0, [sp, #28]
   13578:	ldm	r8, {r3, r9}
   1357c:	ldr	r1, [r8, #40]	; 0x28
   13580:	ldr	r2, [r8, #44]	; 0x2c
   13584:	ldr	r7, [r0]
   13588:	str	r7, [sp, #32]
   1358c:	add	sl, r8, #8
   13590:	cmp	r4, #0
   13594:	orreq	r9, r9, #1
   13598:	stm	sp, {r3, r9, sl}
   1359c:	str	r1, [sp, #12]
   135a0:	str	r2, [sp, #16]
   135a4:	mov	r0, #0
   135a8:	mov	r1, #0
   135ac:	mov	r2, r6
   135b0:	mov	r3, r5
   135b4:	mov	r7, r5
   135b8:	bl	12534 <putchar_unlocked@plt+0x1578>
   135bc:	mov	r5, r0
   135c0:	add	r4, r0, #1
   135c4:	mov	r0, r4
   135c8:	bl	14444 <putchar_unlocked@plt+0x3488>
   135cc:	mov	r6, r0
   135d0:	ldr	r0, [r8]
   135d4:	ldr	r1, [r8, #40]	; 0x28
   135d8:	ldr	r2, [r8, #44]	; 0x2c
   135dc:	stm	sp, {r0, r9, sl}
   135e0:	str	r1, [sp, #12]
   135e4:	str	r2, [sp, #16]
   135e8:	mov	r0, r6
   135ec:	mov	r1, r4
   135f0:	ldr	r2, [sp, #20]
   135f4:	mov	r3, r7
   135f8:	bl	12534 <putchar_unlocked@plt+0x1578>
   135fc:	ldr	r0, [sp, #24]
   13600:	ldr	r1, [sp, #32]
   13604:	ldr	r2, [sp, #28]
   13608:	str	r1, [r2]
   1360c:	cmp	r0, #0
   13610:	strne	r5, [r0]
   13614:	mov	r0, r6
   13618:	sub	sp, fp, #28
   1361c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13620:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13624:	add	fp, sp, #24
   13628:	movw	r8, #24800	; 0x60e0
   1362c:	movt	r8, #2
   13630:	ldr	r4, [r8]
   13634:	movw	r5, #24804	; 0x60e4
   13638:	movt	r5, #2
   1363c:	ldr	r0, [r5]
   13640:	cmp	r0, #2
   13644:	blt	13670 <putchar_unlocked@plt+0x26b4>
   13648:	add	r7, r4, #12
   1364c:	mov	r6, #0
   13650:	ldr	r0, [r7, r6, lsl #3]
   13654:	bl	1222c <putchar_unlocked@plt+0x1270>
   13658:	add	r0, r6, #1
   1365c:	ldr	r1, [r5]
   13660:	add	r2, r6, #2
   13664:	cmp	r2, r1
   13668:	mov	r6, r0
   1366c:	blt	13650 <putchar_unlocked@plt+0x2694>
   13670:	ldr	r0, [r4, #4]
   13674:	movw	r7, #24976	; 0x6190
   13678:	movt	r7, #2
   1367c:	cmp	r0, r7
   13680:	beq	13698 <putchar_unlocked@plt+0x26dc>
   13684:	bl	1222c <putchar_unlocked@plt+0x1270>
   13688:	movw	r0, #24808	; 0x60e8
   1368c:	movt	r0, #2
   13690:	mov	r6, #256	; 0x100
   13694:	strd	r6, [r0]
   13698:	movw	r6, #24808	; 0x60e8
   1369c:	movt	r6, #2
   136a0:	cmp	r4, r6
   136a4:	beq	136b4 <putchar_unlocked@plt+0x26f8>
   136a8:	mov	r0, r4
   136ac:	bl	1222c <putchar_unlocked@plt+0x1270>
   136b0:	str	r6, [r8]
   136b4:	mov	r0, #1
   136b8:	str	r0, [r5]
   136bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   136c0:	movw	r3, #24928	; 0x6160
   136c4:	movt	r3, #2
   136c8:	mvn	r2, #0
   136cc:	b	136d0 <putchar_unlocked@plt+0x2714>
   136d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136d4:	add	fp, sp, #28
   136d8:	sub	sp, sp, #44	; 0x2c
   136dc:	mov	r7, r3
   136e0:	str	r2, [sp, #36]	; 0x24
   136e4:	str	r1, [sp, #32]
   136e8:	mov	r5, r0
   136ec:	bl	10efc <__errno_location@plt>
   136f0:	cmp	r5, #0
   136f4:	blt	13860 <putchar_unlocked@plt+0x28a4>
   136f8:	cmn	r5, #-2147483647	; 0x80000001
   136fc:	beq	13860 <putchar_unlocked@plt+0x28a4>
   13700:	movw	r4, #24800	; 0x60e0
   13704:	movt	r4, #2
   13708:	ldr	r6, [r4]
   1370c:	str	r0, [sp, #28]
   13710:	ldr	r0, [r0]
   13714:	str	r0, [sp, #24]
   13718:	movw	r8, #24804	; 0x60e4
   1371c:	movt	r8, #2
   13720:	ldr	r1, [r8]
   13724:	cmp	r1, r5
   13728:	ble	13734 <putchar_unlocked@plt+0x2778>
   1372c:	mov	sl, r6
   13730:	b	1379c <putchar_unlocked@plt+0x27e0>
   13734:	str	r1, [fp, #-32]	; 0xffffffe0
   13738:	mov	r0, #8
   1373c:	str	r0, [sp]
   13740:	movw	r9, #24808	; 0x60e8
   13744:	movt	r9, #2
   13748:	subs	r0, r6, r9
   1374c:	movne	r0, r6
   13750:	add	r2, r5, #1
   13754:	sub	r2, r2, r1
   13758:	sub	r1, fp, #32
   1375c:	mvn	r3, #-2147483648	; 0x80000000
   13760:	bl	1452c <putchar_unlocked@plt+0x3570>
   13764:	mov	sl, r0
   13768:	str	r0, [r4]
   1376c:	cmp	r6, r9
   13770:	ldrdeq	r0, [r9]
   13774:	stmeq	sl, {r0, r1}
   13778:	ldr	r1, [r8]
   1377c:	add	r0, sl, r1, lsl #3
   13780:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13784:	sub	r1, r2, r1
   13788:	lsl	r2, r1, #3
   1378c:	mov	r1, #0
   13790:	bl	10f14 <memset@plt>
   13794:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13798:	str	r0, [r8]
   1379c:	mov	r9, sl
   137a0:	ldr	r6, [r9, r5, lsl #3]!
   137a4:	ldr	r4, [r9, #4]!
   137a8:	ldm	r7, {r0, r1}
   137ac:	ldr	r2, [r7, #40]	; 0x28
   137b0:	ldr	r3, [r7, #44]	; 0x2c
   137b4:	orr	r8, r1, #1
   137b8:	add	r1, r7, #8
   137bc:	stm	sp, {r0, r8}
   137c0:	str	r1, [sp, #20]
   137c4:	add	r0, sp, #8
   137c8:	stm	r0, {r1, r2, r3}
   137cc:	mov	r0, r4
   137d0:	mov	r1, r6
   137d4:	ldr	r2, [sp, #32]
   137d8:	ldr	r3, [sp, #36]	; 0x24
   137dc:	bl	12534 <putchar_unlocked@plt+0x1578>
   137e0:	cmp	r6, r0
   137e4:	bhi	13848 <putchar_unlocked@plt+0x288c>
   137e8:	add	r6, r0, #1
   137ec:	str	r6, [sl, r5, lsl #3]
   137f0:	movw	r0, #24976	; 0x6190
   137f4:	movt	r0, #2
   137f8:	cmp	r4, r0
   137fc:	beq	13808 <putchar_unlocked@plt+0x284c>
   13800:	mov	r0, r4
   13804:	bl	1222c <putchar_unlocked@plt+0x1270>
   13808:	mov	r0, r6
   1380c:	bl	14444 <putchar_unlocked@plt+0x3488>
   13810:	mov	r4, r0
   13814:	str	r0, [r9]
   13818:	ldr	r0, [r7]
   1381c:	ldr	r1, [r7, #40]	; 0x28
   13820:	ldr	r2, [r7, #44]	; 0x2c
   13824:	stm	sp, {r0, r8}
   13828:	ldr	r0, [sp, #20]
   1382c:	add	r3, sp, #8
   13830:	stm	r3, {r0, r1, r2}
   13834:	mov	r0, r4
   13838:	mov	r1, r6
   1383c:	ldr	r2, [sp, #32]
   13840:	ldr	r3, [sp, #36]	; 0x24
   13844:	bl	12534 <putchar_unlocked@plt+0x1578>
   13848:	ldr	r0, [sp, #28]
   1384c:	ldr	r1, [sp, #24]
   13850:	str	r1, [r0]
   13854:	mov	r0, r4
   13858:	sub	sp, fp, #28
   1385c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13860:	bl	10fb0 <abort@plt>
   13864:	movw	r3, #24928	; 0x6160
   13868:	movt	r3, #2
   1386c:	b	136d0 <putchar_unlocked@plt+0x2714>
   13870:	mov	r1, r0
   13874:	mov	r0, #0
   13878:	b	136c0 <putchar_unlocked@plt+0x2704>
   1387c:	mov	r2, r1
   13880:	mov	r1, r0
   13884:	mov	r0, #0
   13888:	b	13864 <putchar_unlocked@plt+0x28a8>
   1388c:	push	{r4, r5, r6, sl, fp, lr}
   13890:	add	fp, sp, #16
   13894:	sub	sp, sp, #48	; 0x30
   13898:	mov	r4, r2
   1389c:	mov	r5, r0
   138a0:	mov	r6, sp
   138a4:	mov	r0, r6
   138a8:	bl	138c8 <putchar_unlocked@plt+0x290c>
   138ac:	mov	r0, r5
   138b0:	mov	r1, r4
   138b4:	mvn	r2, #0
   138b8:	mov	r3, r6
   138bc:	bl	136d0 <putchar_unlocked@plt+0x2714>
   138c0:	sub	sp, fp, #16
   138c4:	pop	{r4, r5, r6, sl, fp, pc}
   138c8:	vmov.i32	q8, #0	; 0x00000000
   138cc:	mov	r2, #32
   138d0:	mov	r3, r0
   138d4:	vst1.32	{d16-d17}, [r3], r2
   138d8:	vst1.32	{d16-d17}, [r3]
   138dc:	add	r2, r0, #16
   138e0:	vst1.32	{d16-d17}, [r2]
   138e4:	cmp	r1, #10
   138e8:	strne	r1, [r0]
   138ec:	bxne	lr
   138f0:	push	{fp, lr}
   138f4:	mov	fp, sp
   138f8:	bl	10fb0 <abort@plt>
   138fc:	push	{r4, r5, r6, r7, fp, lr}
   13900:	add	fp, sp, #16
   13904:	sub	sp, sp, #48	; 0x30
   13908:	mov	r4, r3
   1390c:	mov	r5, r2
   13910:	mov	r6, r0
   13914:	mov	r7, sp
   13918:	mov	r0, r7
   1391c:	bl	138c8 <putchar_unlocked@plt+0x290c>
   13920:	mov	r0, r6
   13924:	mov	r1, r5
   13928:	mov	r2, r4
   1392c:	mov	r3, r7
   13930:	bl	136d0 <putchar_unlocked@plt+0x2714>
   13934:	sub	sp, fp, #16
   13938:	pop	{r4, r5, r6, r7, fp, pc}
   1393c:	mov	r2, r1
   13940:	mov	r1, r0
   13944:	mov	r0, #0
   13948:	b	1388c <putchar_unlocked@plt+0x28d0>
   1394c:	mov	r3, r2
   13950:	mov	r2, r1
   13954:	mov	r1, r0
   13958:	mov	r0, #0
   1395c:	b	138fc <putchar_unlocked@plt+0x2940>
   13960:	push	{r4, r5, r6, sl, fp, lr}
   13964:	add	fp, sp, #16
   13968:	sub	sp, sp, #48	; 0x30
   1396c:	mov	r4, r1
   13970:	mov	r5, r0
   13974:	mov	r0, #32
   13978:	movw	r1, #24928	; 0x6160
   1397c:	movt	r1, #2
   13980:	add	r3, r1, #16
   13984:	vld1.64	{d16-d17}, [r1], r0
   13988:	mov	r6, sp
   1398c:	vld1.64	{d18-d19}, [r3]
   13990:	add	r3, r6, #16
   13994:	vld1.64	{d20-d21}, [r1]
   13998:	vst1.64	{d18-d19}, [r3]
   1399c:	mov	r1, r6
   139a0:	vst1.64	{d16-d17}, [r1], r0
   139a4:	vst1.64	{d20-d21}, [r1]
   139a8:	mov	r0, r6
   139ac:	mov	r1, r2
   139b0:	mov	r2, #1
   139b4:	bl	12428 <putchar_unlocked@plt+0x146c>
   139b8:	mov	r0, #0
   139bc:	mov	r1, r5
   139c0:	mov	r2, r4
   139c4:	mov	r3, r6
   139c8:	bl	136d0 <putchar_unlocked@plt+0x2714>
   139cc:	sub	sp, fp, #16
   139d0:	pop	{r4, r5, r6, sl, fp, pc}
   139d4:	mov	r2, r1
   139d8:	mvn	r1, #0
   139dc:	b	13960 <putchar_unlocked@plt+0x29a4>
   139e0:	mov	r1, #58	; 0x3a
   139e4:	b	139d4 <putchar_unlocked@plt+0x2a18>
   139e8:	mov	r2, #58	; 0x3a
   139ec:	b	13960 <putchar_unlocked@plt+0x29a4>
   139f0:	push	{r4, r5, r6, sl, fp, lr}
   139f4:	add	fp, sp, #16
   139f8:	sub	sp, sp, #48	; 0x30
   139fc:	mov	r4, r2
   13a00:	mov	r5, r0
   13a04:	mov	r6, sp
   13a08:	mov	r0, r6
   13a0c:	bl	138c8 <putchar_unlocked@plt+0x290c>
   13a10:	mov	r0, r6
   13a14:	mov	r1, #58	; 0x3a
   13a18:	mov	r2, #1
   13a1c:	bl	12428 <putchar_unlocked@plt+0x146c>
   13a20:	mov	r0, r5
   13a24:	mov	r1, r4
   13a28:	mvn	r2, #0
   13a2c:	mov	r3, r6
   13a30:	bl	136d0 <putchar_unlocked@plt+0x2714>
   13a34:	sub	sp, fp, #16
   13a38:	pop	{r4, r5, r6, sl, fp, pc}
   13a3c:	push	{fp, lr}
   13a40:	mov	fp, sp
   13a44:	sub	sp, sp, #8
   13a48:	mvn	ip, #0
   13a4c:	str	ip, [sp]
   13a50:	bl	13a5c <putchar_unlocked@plt+0x2aa0>
   13a54:	mov	sp, fp
   13a58:	pop	{fp, pc}
   13a5c:	push	{r4, r5, r6, r7, fp, lr}
   13a60:	add	fp, sp, #16
   13a64:	sub	sp, sp, #48	; 0x30
   13a68:	mov	r7, r3
   13a6c:	mov	r5, r0
   13a70:	mov	r0, #32
   13a74:	movw	r3, #24928	; 0x6160
   13a78:	movt	r3, #2
   13a7c:	add	r4, r3, #16
   13a80:	vld1.64	{d16-d17}, [r3], r0
   13a84:	mov	r6, sp
   13a88:	vld1.64	{d18-d19}, [r4]
   13a8c:	add	r4, r6, #16
   13a90:	vld1.64	{d20-d21}, [r3]
   13a94:	vst1.64	{d18-d19}, [r4]
   13a98:	mov	r3, r6
   13a9c:	vst1.64	{d16-d17}, [r3], r0
   13aa0:	vst1.64	{d20-d21}, [r3]
   13aa4:	mov	r0, r6
   13aa8:	bl	12480 <putchar_unlocked@plt+0x14c4>
   13aac:	ldr	r2, [fp, #8]
   13ab0:	mov	r0, r5
   13ab4:	mov	r1, r7
   13ab8:	mov	r3, r6
   13abc:	bl	136d0 <putchar_unlocked@plt+0x2714>
   13ac0:	sub	sp, fp, #16
   13ac4:	pop	{r4, r5, r6, r7, fp, pc}
   13ac8:	mov	r3, r2
   13acc:	mov	r2, r1
   13ad0:	mov	r1, r0
   13ad4:	mov	r0, #0
   13ad8:	b	13a3c <putchar_unlocked@plt+0x2a80>
   13adc:	push	{fp, lr}
   13ae0:	mov	fp, sp
   13ae4:	sub	sp, sp, #8
   13ae8:	mov	ip, r2
   13aec:	mov	r2, r1
   13af0:	mov	r1, r0
   13af4:	str	r3, [sp]
   13af8:	mov	r0, #0
   13afc:	mov	r3, ip
   13b00:	bl	13a5c <putchar_unlocked@plt+0x2aa0>
   13b04:	mov	sp, fp
   13b08:	pop	{fp, pc}
   13b0c:	movw	r3, #24816	; 0x60f0
   13b10:	movt	r3, #2
   13b14:	b	136d0 <putchar_unlocked@plt+0x2714>
   13b18:	mov	r2, r1
   13b1c:	mov	r1, r0
   13b20:	mov	r0, #0
   13b24:	b	13b0c <putchar_unlocked@plt+0x2b50>
   13b28:	mvn	r2, #0
   13b2c:	b	13b0c <putchar_unlocked@plt+0x2b50>
   13b30:	mov	r1, r0
   13b34:	mov	r0, #0
   13b38:	b	13b28 <putchar_unlocked@plt+0x2b6c>
   13b3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b40:	add	fp, sp, #24
   13b44:	sub	sp, sp, #16
   13b48:	mov	r4, r1
   13b4c:	mov	r5, r0
   13b50:	mov	r7, #0
   13b54:	mov	r0, #0
   13b58:	mov	r1, r5
   13b5c:	mov	r2, #5
   13b60:	bl	10e18 <dcgettext@plt>
   13b64:	cmp	r0, r5
   13b68:	beq	13b74 <putchar_unlocked@plt+0x2bb8>
   13b6c:	sub	sp, fp, #24
   13b70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b74:	bl	14cd0 <putchar_unlocked@plt+0x3d14>
   13b78:	mov	r6, r0
   13b7c:	mov	r8, #56	; 0x38
   13b80:	mov	r0, #45	; 0x2d
   13b84:	stm	sp, {r0, r8}
   13b88:	str	r7, [sp, #8]
   13b8c:	str	r7, [sp, #12]
   13b90:	mov	r0, r6
   13b94:	mov	r1, #85	; 0x55
   13b98:	mov	r2, #84	; 0x54
   13b9c:	mov	r3, #70	; 0x46
   13ba0:	bl	13c38 <putchar_unlocked@plt+0x2c7c>
   13ba4:	cmp	r0, #0
   13ba8:	beq	13bc4 <putchar_unlocked@plt+0x2c08>
   13bac:	ldrb	r1, [r5]
   13bb0:	movw	r2, #21774	; 0x550e
   13bb4:	movt	r2, #1
   13bb8:	movw	r0, #21778	; 0x5512
   13bbc:	movt	r0, #1
   13bc0:	b	13c08 <putchar_unlocked@plt+0x2c4c>
   13bc4:	mov	r0, #48	; 0x30
   13bc8:	mov	r1, #51	; 0x33
   13bcc:	str	r8, [sp]
   13bd0:	stmib	sp, {r0, r1}
   13bd4:	str	r0, [sp, #12]
   13bd8:	mov	r0, r6
   13bdc:	mov	r1, #71	; 0x47
   13be0:	mov	r2, #66	; 0x42
   13be4:	mov	r3, #49	; 0x31
   13be8:	bl	13c38 <putchar_unlocked@plt+0x2c7c>
   13bec:	cmp	r0, #0
   13bf0:	beq	13c18 <putchar_unlocked@plt+0x2c5c>
   13bf4:	ldrb	r1, [r5]
   13bf8:	movw	r2, #21782	; 0x5516
   13bfc:	movt	r2, #1
   13c00:	movw	r0, #21786	; 0x551a
   13c04:	movt	r0, #1
   13c08:	cmp	r1, #96	; 0x60
   13c0c:	moveq	r0, r2
   13c10:	sub	sp, fp, #24
   13c14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c18:	movw	r1, #21768	; 0x5508
   13c1c:	movt	r1, #1
   13c20:	movw	r0, #21772	; 0x550c
   13c24:	movt	r0, #1
   13c28:	cmp	r4, #9
   13c2c:	moveq	r0, r1
   13c30:	sub	sp, fp, #24
   13c34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c38:	push	{r4, r5, r6, r7, fp, lr}
   13c3c:	add	fp, sp, #16
   13c40:	sub	sp, sp, #16
   13c44:	mov	r4, r3
   13c48:	mov	r5, r2
   13c4c:	mov	r7, r1
   13c50:	mov	r6, r0
   13c54:	mov	r0, r1
   13c58:	bl	14b88 <putchar_unlocked@plt+0x3bcc>
   13c5c:	ldrb	r1, [r6]
   13c60:	cmp	r0, #0
   13c64:	andne	r1, r1, #223	; 0xdf
   13c68:	mov	r0, #0
   13c6c:	cmp	r1, r7
   13c70:	bne	13cb0 <putchar_unlocked@plt+0x2cf4>
   13c74:	cmp	r7, #0
   13c78:	moveq	r0, #1
   13c7c:	subeq	sp, fp, #16
   13c80:	popeq	{r4, r5, r6, r7, fp, pc}
   13c84:	ldr	r0, [fp, #20]
   13c88:	ldr	r1, [fp, #16]
   13c8c:	ldr	r2, [fp, #12]
   13c90:	ldr	r3, [fp, #8]
   13c94:	str	r2, [sp]
   13c98:	str	r1, [sp, #4]
   13c9c:	str	r0, [sp, #8]
   13ca0:	mov	r0, r6
   13ca4:	mov	r1, r5
   13ca8:	mov	r2, r4
   13cac:	bl	13cb8 <putchar_unlocked@plt+0x2cfc>
   13cb0:	sub	sp, fp, #16
   13cb4:	pop	{r4, r5, r6, r7, fp, pc}
   13cb8:	push	{r4, r5, r6, r7, fp, lr}
   13cbc:	add	fp, sp, #16
   13cc0:	sub	sp, sp, #8
   13cc4:	mov	r4, r3
   13cc8:	mov	r5, r2
   13ccc:	mov	r7, r1
   13cd0:	mov	r6, r0
   13cd4:	mov	r0, r1
   13cd8:	bl	14b88 <putchar_unlocked@plt+0x3bcc>
   13cdc:	ldrb	r1, [r6, #1]
   13ce0:	cmp	r0, #0
   13ce4:	andne	r1, r1, #223	; 0xdf
   13ce8:	mov	r0, #0
   13cec:	cmp	r1, r7
   13cf0:	bne	13d28 <putchar_unlocked@plt+0x2d6c>
   13cf4:	cmp	r7, #0
   13cf8:	moveq	r0, #1
   13cfc:	subeq	sp, fp, #16
   13d00:	popeq	{r4, r5, r6, r7, fp, pc}
   13d04:	ldr	r0, [fp, #16]
   13d08:	ldr	r1, [fp, #12]
   13d0c:	ldr	r3, [fp, #8]
   13d10:	str	r1, [sp]
   13d14:	str	r0, [sp, #4]
   13d18:	mov	r0, r6
   13d1c:	mov	r1, r5
   13d20:	mov	r2, r4
   13d24:	bl	13d30 <putchar_unlocked@plt+0x2d74>
   13d28:	sub	sp, fp, #16
   13d2c:	pop	{r4, r5, r6, r7, fp, pc}
   13d30:	push	{r4, r5, r6, r7, fp, lr}
   13d34:	add	fp, sp, #16
   13d38:	sub	sp, sp, #8
   13d3c:	mov	r4, r3
   13d40:	mov	r5, r2
   13d44:	mov	r7, r1
   13d48:	mov	r6, r0
   13d4c:	mov	r0, r1
   13d50:	bl	14b88 <putchar_unlocked@plt+0x3bcc>
   13d54:	ldrb	r1, [r6, #2]
   13d58:	cmp	r0, #0
   13d5c:	andne	r1, r1, #223	; 0xdf
   13d60:	mov	r0, #0
   13d64:	cmp	r1, r7
   13d68:	bne	13d98 <putchar_unlocked@plt+0x2ddc>
   13d6c:	cmp	r7, #0
   13d70:	moveq	r0, #1
   13d74:	subeq	sp, fp, #16
   13d78:	popeq	{r4, r5, r6, r7, fp, pc}
   13d7c:	ldr	r0, [fp, #12]
   13d80:	ldr	r3, [fp, #8]
   13d84:	str	r0, [sp]
   13d88:	mov	r0, r6
   13d8c:	mov	r1, r5
   13d90:	mov	r2, r4
   13d94:	bl	13da0 <putchar_unlocked@plt+0x2de4>
   13d98:	sub	sp, fp, #16
   13d9c:	pop	{r4, r5, r6, r7, fp, pc}
   13da0:	push	{r4, r5, r6, r7, fp, lr}
   13da4:	add	fp, sp, #16
   13da8:	mov	r4, r3
   13dac:	mov	r5, r2
   13db0:	mov	r7, r1
   13db4:	mov	r6, r0
   13db8:	mov	r0, r1
   13dbc:	bl	14b88 <putchar_unlocked@plt+0x3bcc>
   13dc0:	ldrb	r1, [r6, #3]
   13dc4:	ldr	r3, [fp, #8]
   13dc8:	cmp	r0, #0
   13dcc:	andne	r1, r1, #223	; 0xdf
   13dd0:	mov	r0, #0
   13dd4:	cmp	r1, r7
   13dd8:	popne	{r4, r5, r6, r7, fp, pc}
   13ddc:	cmp	r7, #0
   13de0:	beq	13df8 <putchar_unlocked@plt+0x2e3c>
   13de4:	mov	r0, r6
   13de8:	mov	r1, r5
   13dec:	mov	r2, r4
   13df0:	pop	{r4, r5, r6, r7, fp, lr}
   13df4:	b	13e00 <putchar_unlocked@plt+0x2e44>
   13df8:	mov	r0, #1
   13dfc:	pop	{r4, r5, r6, r7, fp, pc}
   13e00:	push	{r4, r5, r6, r7, fp, lr}
   13e04:	add	fp, sp, #16
   13e08:	mov	r4, r3
   13e0c:	mov	r5, r2
   13e10:	mov	r7, r1
   13e14:	mov	r6, r0
   13e18:	mov	r0, r1
   13e1c:	bl	14b88 <putchar_unlocked@plt+0x3bcc>
   13e20:	ldrb	r1, [r6, #4]
   13e24:	cmp	r0, #0
   13e28:	andne	r1, r1, #223	; 0xdf
   13e2c:	mov	r0, #0
   13e30:	cmp	r1, r7
   13e34:	popne	{r4, r5, r6, r7, fp, pc}
   13e38:	cmp	r7, #0
   13e3c:	beq	13e54 <putchar_unlocked@plt+0x2e98>
   13e40:	mov	r0, r6
   13e44:	mov	r1, r5
   13e48:	mov	r2, r4
   13e4c:	pop	{r4, r5, r6, r7, fp, lr}
   13e50:	b	13e5c <putchar_unlocked@plt+0x2ea0>
   13e54:	mov	r0, #1
   13e58:	pop	{r4, r5, r6, r7, fp, pc}
   13e5c:	push	{r4, r5, r6, sl, fp, lr}
   13e60:	add	fp, sp, #16
   13e64:	mov	r4, r2
   13e68:	mov	r6, r1
   13e6c:	mov	r5, r0
   13e70:	mov	r0, r1
   13e74:	bl	14b88 <putchar_unlocked@plt+0x3bcc>
   13e78:	ldrb	r1, [r5, #5]
   13e7c:	cmp	r0, #0
   13e80:	andne	r1, r1, #223	; 0xdf
   13e84:	mov	r0, #0
   13e88:	cmp	r1, r6
   13e8c:	popne	{r4, r5, r6, sl, fp, pc}
   13e90:	cmp	r6, #0
   13e94:	beq	13ea8 <putchar_unlocked@plt+0x2eec>
   13e98:	mov	r0, r5
   13e9c:	mov	r1, r4
   13ea0:	pop	{r4, r5, r6, sl, fp, lr}
   13ea4:	b	13eb0 <putchar_unlocked@plt+0x2ef4>
   13ea8:	mov	r0, #1
   13eac:	pop	{r4, r5, r6, sl, fp, pc}
   13eb0:	push	{r4, r5, fp, lr}
   13eb4:	add	fp, sp, #8
   13eb8:	mov	r5, r1
   13ebc:	mov	r4, r0
   13ec0:	mov	r0, r1
   13ec4:	bl	14b88 <putchar_unlocked@plt+0x3bcc>
   13ec8:	ldrb	r1, [r4, #6]
   13ecc:	cmp	r0, #0
   13ed0:	andne	r1, r1, #223	; 0xdf
   13ed4:	mov	r0, #0
   13ed8:	cmp	r1, r5
   13edc:	popne	{r4, r5, fp, pc}
   13ee0:	cmp	r5, #0
   13ee4:	beq	13ef4 <putchar_unlocked@plt+0x2f38>
   13ee8:	mov	r0, r4
   13eec:	pop	{r4, r5, fp, lr}
   13ef0:	b	13efc <putchar_unlocked@plt+0x2f40>
   13ef4:	mov	r0, #1
   13ef8:	pop	{r4, r5, fp, pc}
   13efc:	push	{r4, sl, fp, lr}
   13f00:	add	fp, sp, #8
   13f04:	mov	r4, r0
   13f08:	mov	r0, #0
   13f0c:	bl	14b88 <putchar_unlocked@plt+0x3bcc>
   13f10:	ldrb	r1, [r4, #7]
   13f14:	cmp	r0, #0
   13f18:	beq	13f30 <putchar_unlocked@plt+0x2f74>
   13f1c:	tst	r1, #223	; 0xdf
   13f20:	moveq	r0, #1
   13f24:	popeq	{r4, sl, fp, pc}
   13f28:	mov	r0, #0
   13f2c:	pop	{r4, sl, fp, pc}
   13f30:	cmp	r1, #0
   13f34:	moveq	r0, #1
   13f38:	popeq	{r4, sl, fp, pc}
   13f3c:	mov	r0, #0
   13f40:	pop	{r4, sl, fp, pc}
   13f44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13f48:	add	fp, sp, #24
   13f4c:	sub	sp, sp, #32
   13f50:	mov	r4, r2
   13f54:	mov	r8, r0
   13f58:	ldr	r6, [fp, #12]
   13f5c:	ldr	r7, [fp, #8]
   13f60:	cmp	r1, #0
   13f64:	beq	13f8c <putchar_unlocked@plt+0x2fd0>
   13f68:	mov	r5, r1
   13f6c:	str	r4, [sp]
   13f70:	str	r3, [sp, #4]
   13f74:	movw	r2, #21876	; 0x5574
   13f78:	movt	r2, #1
   13f7c:	mov	r0, r8
   13f80:	mov	r1, #1
   13f84:	mov	r3, r5
   13f88:	b	13fa4 <putchar_unlocked@plt+0x2fe8>
   13f8c:	str	r3, [sp]
   13f90:	movw	r2, #21888	; 0x5580
   13f94:	movt	r2, #1
   13f98:	mov	r0, r8
   13f9c:	mov	r1, #1
   13fa0:	mov	r3, r4
   13fa4:	bl	10f38 <__fprintf_chk@plt>
   13fa8:	movw	r1, #21895	; 0x5587
   13fac:	movt	r1, #1
   13fb0:	mov	r0, #0
   13fb4:	mov	r2, #5
   13fb8:	bl	10e18 <dcgettext@plt>
   13fbc:	mov	r3, r0
   13fc0:	movw	r0, #2022	; 0x7e6
   13fc4:	str	r0, [sp]
   13fc8:	movw	r2, #22613	; 0x5855
   13fcc:	movt	r2, #1
   13fd0:	mov	r0, r8
   13fd4:	mov	r1, #1
   13fd8:	bl	10f38 <__fprintf_chk@plt>
   13fdc:	movw	r4, #21358	; 0x536e
   13fe0:	movt	r4, #1
   13fe4:	mov	r0, r4
   13fe8:	mov	r1, r8
   13fec:	bl	10d94 <fputs_unlocked@plt>
   13ff0:	movw	r1, #21899	; 0x558b
   13ff4:	movt	r1, #1
   13ff8:	mov	r0, #0
   13ffc:	mov	r2, #5
   14000:	bl	10e18 <dcgettext@plt>
   14004:	mov	r2, r0
   14008:	movw	r3, #22070	; 0x5636
   1400c:	movt	r3, #1
   14010:	mov	r0, r8
   14014:	mov	r1, #1
   14018:	bl	10f38 <__fprintf_chk@plt>
   1401c:	mov	r0, r4
   14020:	mov	r1, r8
   14024:	bl	10d94 <fputs_unlocked@plt>
   14028:	cmp	r6, #9
   1402c:	bhi	14068 <putchar_unlocked@plt+0x30ac>
   14030:	add	r0, pc, #0
   14034:	ldr	pc, [r0, r6, lsl #2]
   14038:	andeq	r4, r1, r0, rrx
   1403c:	andeq	r4, r1, r4, ror r0
   14040:	andeq	r4, r1, r4, lsr #1
   14044:	andeq	r4, r1, ip, asr #1
   14048:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1404c:	andeq	r4, r1, ip, lsl r1
   14050:	andeq	r4, r1, r4, asr #2
   14054:	andeq	r4, r1, ip, ror r1
   14058:	andeq	r4, r1, ip, lsl r2
   1405c:	andeq	r4, r1, r4, asr #3
   14060:	sub	sp, fp, #24
   14064:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14068:	movw	r1, #22423	; 0x5797
   1406c:	movt	r1, #1
   14070:	b	141cc <putchar_unlocked@plt+0x3210>
   14074:	movw	r1, #22104	; 0x5658
   14078:	movt	r1, #1
   1407c:	mov	r0, #0
   14080:	mov	r2, #5
   14084:	bl	10e18 <dcgettext@plt>
   14088:	mov	r2, r0
   1408c:	ldr	r3, [r7]
   14090:	mov	r0, r8
   14094:	mov	r1, #1
   14098:	sub	sp, fp, #24
   1409c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   140a0:	b	10f38 <__fprintf_chk@plt>
   140a4:	movw	r1, #22120	; 0x5668
   140a8:	movt	r1, #1
   140ac:	mov	r0, #0
   140b0:	mov	r2, #5
   140b4:	bl	10e18 <dcgettext@plt>
   140b8:	mov	r2, r0
   140bc:	ldr	r3, [r7]
   140c0:	ldr	r0, [r7, #4]
   140c4:	str	r0, [sp]
   140c8:	b	141b8 <putchar_unlocked@plt+0x31fc>
   140cc:	movw	r1, #22143	; 0x567f
   140d0:	movt	r1, #1
   140d4:	mov	r0, #0
   140d8:	mov	r2, #5
   140dc:	bl	10e18 <dcgettext@plt>
   140e0:	mov	r2, r0
   140e4:	ldr	r3, [r7]
   140e8:	ldmib	r7, {r0, r1}
   140ec:	stm	sp, {r0, r1}
   140f0:	b	141b8 <putchar_unlocked@plt+0x31fc>
   140f4:	movw	r1, #22171	; 0x569b
   140f8:	movt	r1, #1
   140fc:	mov	r0, #0
   14100:	mov	r2, #5
   14104:	bl	10e18 <dcgettext@plt>
   14108:	mov	r2, r0
   1410c:	ldr	r3, [r7]
   14110:	ldmib	r7, {r0, r1, r7}
   14114:	stm	sp, {r0, r1, r7}
   14118:	b	141b8 <putchar_unlocked@plt+0x31fc>
   1411c:	movw	r1, #22203	; 0x56bb
   14120:	movt	r1, #1
   14124:	mov	r0, #0
   14128:	mov	r2, #5
   1412c:	bl	10e18 <dcgettext@plt>
   14130:	mov	r2, r0
   14134:	ldr	r3, [r7]
   14138:	ldmib	r7, {r0, r1, r6, r7}
   1413c:	stm	sp, {r0, r1, r6, r7}
   14140:	b	141b8 <putchar_unlocked@plt+0x31fc>
   14144:	movw	r1, #22239	; 0x56df
   14148:	movt	r1, #1
   1414c:	mov	r0, #0
   14150:	mov	r2, #5
   14154:	bl	10e18 <dcgettext@plt>
   14158:	mov	r2, r0
   1415c:	ldr	r3, [r7]
   14160:	ldmib	r7, {r0, r1, r6}
   14164:	ldr	r5, [r7, #16]
   14168:	ldr	r7, [r7, #20]
   1416c:	stm	sp, {r0, r1, r6}
   14170:	str	r5, [sp, #12]
   14174:	str	r7, [sp, #16]
   14178:	b	141b8 <putchar_unlocked@plt+0x31fc>
   1417c:	movw	r1, #22279	; 0x5707
   14180:	movt	r1, #1
   14184:	mov	r0, #0
   14188:	mov	r2, #5
   1418c:	bl	10e18 <dcgettext@plt>
   14190:	mov	r2, r0
   14194:	ldr	r3, [r7]
   14198:	ldmib	r7, {r0, r1, r6}
   1419c:	ldr	r5, [r7, #16]
   141a0:	ldr	r4, [r7, #20]
   141a4:	ldr	r7, [r7, #24]
   141a8:	stm	sp, {r0, r1, r6}
   141ac:	str	r5, [sp, #12]
   141b0:	str	r4, [sp, #16]
   141b4:	str	r7, [sp, #20]
   141b8:	mov	r0, r8
   141bc:	mov	r1, #1
   141c0:	b	1426c <putchar_unlocked@plt+0x32b0>
   141c4:	movw	r1, #22371	; 0x5763
   141c8:	movt	r1, #1
   141cc:	mov	r0, #0
   141d0:	mov	r2, #5
   141d4:	bl	10e18 <dcgettext@plt>
   141d8:	mov	ip, r0
   141dc:	ldr	r3, [r7]
   141e0:	ldr	r0, [r7, #4]
   141e4:	ldr	r1, [r7, #8]
   141e8:	ldr	r6, [r7, #12]
   141ec:	ldr	r5, [r7, #16]
   141f0:	ldr	r4, [r7, #20]
   141f4:	ldr	r2, [r7, #24]
   141f8:	ldr	lr, [r7, #28]
   141fc:	ldr	r7, [r7, #32]
   14200:	stm	sp, {r0, r1, r6}
   14204:	str	r5, [sp, #12]
   14208:	str	r4, [sp, #16]
   1420c:	str	r2, [sp, #20]
   14210:	str	lr, [sp, #24]
   14214:	str	r7, [sp, #28]
   14218:	b	14260 <putchar_unlocked@plt+0x32a4>
   1421c:	movw	r1, #22323	; 0x5733
   14220:	movt	r1, #1
   14224:	mov	r0, #0
   14228:	mov	r2, #5
   1422c:	bl	10e18 <dcgettext@plt>
   14230:	mov	ip, r0
   14234:	ldr	r3, [r7]
   14238:	ldmib	r7, {r0, r1, r6}
   1423c:	ldr	r5, [r7, #16]
   14240:	ldr	r4, [r7, #20]
   14244:	ldr	r2, [r7, #24]
   14248:	ldr	r7, [r7, #28]
   1424c:	stm	sp, {r0, r1, r6}
   14250:	str	r5, [sp, #12]
   14254:	str	r4, [sp, #16]
   14258:	str	r2, [sp, #20]
   1425c:	str	r7, [sp, #24]
   14260:	mov	r0, r8
   14264:	mov	r1, #1
   14268:	mov	r2, ip
   1426c:	bl	10f38 <__fprintf_chk@plt>
   14270:	sub	sp, fp, #24
   14274:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14278:	push	{r4, sl, fp, lr}
   1427c:	add	fp, sp, #8
   14280:	sub	sp, sp, #8
   14284:	mov	lr, #0
   14288:	ldr	ip, [fp, #8]
   1428c:	ldr	r4, [ip, lr, lsl #2]
   14290:	add	lr, lr, #1
   14294:	cmp	r4, #0
   14298:	bne	1428c <putchar_unlocked@plt+0x32d0>
   1429c:	sub	r4, lr, #1
   142a0:	str	ip, [sp]
   142a4:	str	r4, [sp, #4]
   142a8:	bl	13f44 <putchar_unlocked@plt+0x2f88>
   142ac:	sub	sp, fp, #8
   142b0:	pop	{r4, sl, fp, pc}
   142b4:	push	{r4, r5, fp, lr}
   142b8:	add	fp, sp, #8
   142bc:	sub	sp, sp, #48	; 0x30
   142c0:	mov	ip, #0
   142c4:	ldr	r4, [fp, #8]
   142c8:	add	lr, sp, #8
   142cc:	ldr	r5, [r4]
   142d0:	str	r5, [lr, ip, lsl #2]
   142d4:	cmp	r5, #0
   142d8:	beq	142ec <putchar_unlocked@plt+0x3330>
   142dc:	add	ip, ip, #1
   142e0:	add	r4, r4, #4
   142e4:	cmp	ip, #10
   142e8:	bcc	142cc <putchar_unlocked@plt+0x3310>
   142ec:	str	lr, [sp]
   142f0:	str	ip, [sp, #4]
   142f4:	bl	13f44 <putchar_unlocked@plt+0x2f88>
   142f8:	sub	sp, fp, #8
   142fc:	pop	{r4, r5, fp, pc}
   14300:	push	{fp, lr}
   14304:	mov	fp, sp
   14308:	sub	sp, sp, #8
   1430c:	add	ip, fp, #8
   14310:	str	ip, [sp, #4]
   14314:	str	ip, [sp]
   14318:	bl	142b4 <putchar_unlocked@plt+0x32f8>
   1431c:	mov	sp, fp
   14320:	pop	{fp, pc}
   14324:	push	{fp, lr}
   14328:	mov	fp, sp
   1432c:	movw	r0, #24892	; 0x613c
   14330:	movt	r0, #2
   14334:	ldr	r1, [r0]
   14338:	movw	r0, #21358	; 0x536e
   1433c:	movt	r0, #1
   14340:	bl	10d94 <fputs_unlocked@plt>
   14344:	movw	r1, #22483	; 0x57d3
   14348:	movt	r1, #1
   1434c:	mov	r0, #0
   14350:	mov	r2, #5
   14354:	bl	10e18 <dcgettext@plt>
   14358:	mov	r1, r0
   1435c:	movw	r2, #22503	; 0x57e7
   14360:	movt	r2, #1
   14364:	mov	r0, #1
   14368:	bl	10f20 <__printf_chk@plt>
   1436c:	movw	r1, #22525	; 0x57fd
   14370:	movt	r1, #1
   14374:	mov	r0, #0
   14378:	mov	r2, #5
   1437c:	bl	10e18 <dcgettext@plt>
   14380:	mov	r1, r0
   14384:	movw	r2, #20821	; 0x5155
   14388:	movt	r2, #1
   1438c:	movw	r3, #21167	; 0x52af
   14390:	movt	r3, #1
   14394:	mov	r0, #1
   14398:	bl	10f20 <__printf_chk@plt>
   1439c:	movw	r1, #22545	; 0x5811
   143a0:	movt	r1, #1
   143a4:	mov	r0, #0
   143a8:	mov	r2, #5
   143ac:	bl	10e18 <dcgettext@plt>
   143b0:	mov	r1, r0
   143b4:	movw	r2, #22584	; 0x5838
   143b8:	movt	r2, #1
   143bc:	mov	r0, #1
   143c0:	pop	{fp, lr}
   143c4:	b	10f20 <__printf_chk@plt>
   143c8:	b	143cc <putchar_unlocked@plt+0x3410>
   143cc:	push	{r4, r5, r6, sl, fp, lr}
   143d0:	add	fp, sp, #16
   143d4:	mov	r4, r2
   143d8:	mov	r5, r1
   143dc:	mov	r6, r0
   143e0:	bl	14d68 <putchar_unlocked@plt+0x3dac>
   143e4:	cmp	r0, #0
   143e8:	popne	{r4, r5, r6, sl, fp, pc}
   143ec:	cmp	r6, #0
   143f0:	beq	14404 <putchar_unlocked@plt+0x3448>
   143f4:	cmp	r5, #0
   143f8:	cmpne	r4, #0
   143fc:	bne	14404 <putchar_unlocked@plt+0x3448>
   14400:	pop	{r4, r5, r6, sl, fp, pc}
   14404:	bl	147b8 <putchar_unlocked@plt+0x37fc>
   14408:	push	{fp, lr}
   1440c:	mov	fp, sp
   14410:	bl	14850 <putchar_unlocked@plt+0x3894>
   14414:	bl	1441c <putchar_unlocked@plt+0x3460>
   14418:	pop	{fp, pc}
   1441c:	cmp	r0, #0
   14420:	bxne	lr
   14424:	push	{fp, lr}
   14428:	mov	fp, sp
   1442c:	bl	147b8 <putchar_unlocked@plt+0x37fc>
   14430:	push	{fp, lr}
   14434:	mov	fp, sp
   14438:	bl	14c9c <putchar_unlocked@plt+0x3ce0>
   1443c:	bl	1441c <putchar_unlocked@plt+0x3460>
   14440:	pop	{fp, pc}
   14444:	b	14408 <putchar_unlocked@plt+0x344c>
   14448:	push	{r4, r5, fp, lr}
   1444c:	add	fp, sp, #8
   14450:	mov	r4, r1
   14454:	mov	r5, r0
   14458:	bl	14880 <putchar_unlocked@plt+0x38c4>
   1445c:	cmp	r0, #0
   14460:	popne	{r4, r5, fp, pc}
   14464:	cmp	r5, #0
   14468:	beq	14478 <putchar_unlocked@plt+0x34bc>
   1446c:	cmp	r4, #0
   14470:	bne	14478 <putchar_unlocked@plt+0x34bc>
   14474:	pop	{r4, r5, fp, pc}
   14478:	bl	147b8 <putchar_unlocked@plt+0x37fc>
   1447c:	push	{fp, lr}
   14480:	mov	fp, sp
   14484:	bl	14ca0 <putchar_unlocked@plt+0x3ce4>
   14488:	bl	1441c <putchar_unlocked@plt+0x3460>
   1448c:	pop	{fp, pc}
   14490:	push	{fp, lr}
   14494:	mov	fp, sp
   14498:	bl	14cb0 <putchar_unlocked@plt+0x3cf4>
   1449c:	bl	1441c <putchar_unlocked@plt+0x3460>
   144a0:	pop	{fp, pc}
   144a4:	push	{fp, lr}
   144a8:	mov	fp, sp
   144ac:	mov	r2, r1
   144b0:	mov	r1, r0
   144b4:	mov	r0, #0
   144b8:	bl	143cc <putchar_unlocked@plt+0x3410>
   144bc:	pop	{fp, pc}
   144c0:	mov	r2, r1
   144c4:	mov	r1, r0
   144c8:	mov	r0, #0
   144cc:	b	14490 <putchar_unlocked@plt+0x34d4>
   144d0:	mov	r2, #1
   144d4:	b	144d8 <putchar_unlocked@plt+0x351c>
   144d8:	push	{r4, r5, fp, lr}
   144dc:	add	fp, sp, #8
   144e0:	mov	r4, r1
   144e4:	ldr	r5, [r1]
   144e8:	cmp	r0, #0
   144ec:	beq	14504 <putchar_unlocked@plt+0x3548>
   144f0:	mov	r1, #1
   144f4:	add	r1, r1, r5, lsr #1
   144f8:	adds	r5, r5, r1
   144fc:	bcc	1451c <putchar_unlocked@plt+0x3560>
   14500:	bl	147b8 <putchar_unlocked@plt+0x37fc>
   14504:	cmp	r5, #0
   14508:	bne	1451c <putchar_unlocked@plt+0x3560>
   1450c:	mov	r1, #64	; 0x40
   14510:	udiv	r5, r1, r2
   14514:	cmp	r2, #64	; 0x40
   14518:	addhi	r5, r5, #1
   1451c:	mov	r1, r5
   14520:	bl	143cc <putchar_unlocked@plt+0x3410>
   14524:	str	r5, [r4]
   14528:	pop	{r4, r5, fp, pc}
   1452c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14530:	add	fp, sp, #24
   14534:	mov	r8, r1
   14538:	ldr	r6, [r1]
   1453c:	add	r1, r6, r6, asr #1
   14540:	cmp	r1, r6
   14544:	mvnvs	r1, #-2147483648	; 0x80000000
   14548:	cmp	r1, r3
   1454c:	mov	r5, r1
   14550:	movgt	r5, r3
   14554:	cmn	r3, #1
   14558:	movle	r5, r1
   1455c:	ldr	r4, [fp, #8]
   14560:	cmn	r4, #1
   14564:	ble	1458c <putchar_unlocked@plt+0x35d0>
   14568:	cmp	r4, #0
   1456c:	beq	145e0 <putchar_unlocked@plt+0x3624>
   14570:	cmn	r5, #1
   14574:	ble	145b4 <putchar_unlocked@plt+0x35f8>
   14578:	mvn	r7, #-2147483648	; 0x80000000
   1457c:	udiv	r1, r7, r4
   14580:	cmp	r1, r5
   14584:	bge	145e0 <putchar_unlocked@plt+0x3624>
   14588:	b	145f0 <putchar_unlocked@plt+0x3634>
   1458c:	cmn	r5, #1
   14590:	ble	145d0 <putchar_unlocked@plt+0x3614>
   14594:	cmn	r4, #1
   14598:	beq	145e0 <putchar_unlocked@plt+0x3624>
   1459c:	mov	r1, #-2147483648	; 0x80000000
   145a0:	sdiv	r1, r1, r4
   145a4:	mvn	r7, #-2147483648	; 0x80000000
   145a8:	cmp	r1, r5
   145ac:	bge	145e0 <putchar_unlocked@plt+0x3624>
   145b0:	b	145f0 <putchar_unlocked@plt+0x3634>
   145b4:	beq	145e0 <putchar_unlocked@plt+0x3624>
   145b8:	mov	r1, #-2147483648	; 0x80000000
   145bc:	sdiv	r1, r1, r5
   145c0:	mvn	r7, #-2147483648	; 0x80000000
   145c4:	cmp	r1, r4
   145c8:	bge	145e0 <putchar_unlocked@plt+0x3624>
   145cc:	b	145f0 <putchar_unlocked@plt+0x3634>
   145d0:	mvn	r7, #-2147483648	; 0x80000000
   145d4:	sdiv	r1, r7, r4
   145d8:	cmp	r5, r1
   145dc:	blt	145f0 <putchar_unlocked@plt+0x3634>
   145e0:	mul	r1, r5, r4
   145e4:	mov	r7, #64	; 0x40
   145e8:	cmp	r1, #63	; 0x3f
   145ec:	bgt	145f8 <putchar_unlocked@plt+0x363c>
   145f0:	sdiv	r5, r7, r4
   145f4:	mul	r1, r5, r4
   145f8:	cmp	r0, #0
   145fc:	moveq	r7, #0
   14600:	streq	r7, [r8]
   14604:	sub	r7, r5, r6
   14608:	cmp	r7, r2
   1460c:	bge	146b8 <putchar_unlocked@plt+0x36fc>
   14610:	add	r5, r6, r2
   14614:	mov	r1, #0
   14618:	cmp	r5, r3
   1461c:	mov	r2, #0
   14620:	movwgt	r2, #1
   14624:	cmn	r3, #1
   14628:	movwgt	r1, #1
   1462c:	cmp	r5, r6
   14630:	bvs	146a0 <putchar_unlocked@plt+0x36e4>
   14634:	ands	r1, r1, r2
   14638:	bne	146a0 <putchar_unlocked@plt+0x36e4>
   1463c:	cmn	r4, #1
   14640:	ble	14668 <putchar_unlocked@plt+0x36ac>
   14644:	cmp	r4, #0
   14648:	beq	146b4 <putchar_unlocked@plt+0x36f8>
   1464c:	cmn	r5, #1
   14650:	ble	1468c <putchar_unlocked@plt+0x36d0>
   14654:	mvn	r1, #-2147483648	; 0x80000000
   14658:	udiv	r1, r1, r4
   1465c:	cmp	r1, r5
   14660:	bge	146b4 <putchar_unlocked@plt+0x36f8>
   14664:	b	146a0 <putchar_unlocked@plt+0x36e4>
   14668:	cmn	r5, #1
   1466c:	ble	146a4 <putchar_unlocked@plt+0x36e8>
   14670:	cmn	r4, #1
   14674:	beq	146b4 <putchar_unlocked@plt+0x36f8>
   14678:	mov	r1, #-2147483648	; 0x80000000
   1467c:	sdiv	r1, r1, r4
   14680:	cmp	r1, r5
   14684:	bge	146b4 <putchar_unlocked@plt+0x36f8>
   14688:	b	146a0 <putchar_unlocked@plt+0x36e4>
   1468c:	beq	146b4 <putchar_unlocked@plt+0x36f8>
   14690:	mov	r1, #-2147483648	; 0x80000000
   14694:	sdiv	r1, r1, r5
   14698:	cmp	r1, r4
   1469c:	bge	146b4 <putchar_unlocked@plt+0x36f8>
   146a0:	bl	147b8 <putchar_unlocked@plt+0x37fc>
   146a4:	mvn	r1, #-2147483648	; 0x80000000
   146a8:	sdiv	r1, r1, r4
   146ac:	cmp	r5, r1
   146b0:	blt	146a0 <putchar_unlocked@plt+0x36e4>
   146b4:	mul	r1, r5, r4
   146b8:	bl	14448 <putchar_unlocked@plt+0x348c>
   146bc:	str	r5, [r8]
   146c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   146c4:	mov	r1, #1
   146c8:	b	146cc <putchar_unlocked@plt+0x3710>
   146cc:	push	{fp, lr}
   146d0:	mov	fp, sp
   146d4:	bl	147fc <putchar_unlocked@plt+0x3840>
   146d8:	bl	1441c <putchar_unlocked@plt+0x3460>
   146dc:	pop	{fp, pc}
   146e0:	mov	r1, #1
   146e4:	b	146e8 <putchar_unlocked@plt+0x372c>
   146e8:	push	{fp, lr}
   146ec:	mov	fp, sp
   146f0:	bl	14cac <putchar_unlocked@plt+0x3cf0>
   146f4:	bl	1441c <putchar_unlocked@plt+0x3460>
   146f8:	pop	{fp, pc}
   146fc:	push	{r4, r5, r6, sl, fp, lr}
   14700:	add	fp, sp, #16
   14704:	mov	r4, r1
   14708:	mov	r5, r0
   1470c:	mov	r0, r1
   14710:	bl	14408 <putchar_unlocked@plt+0x344c>
   14714:	mov	r6, r0
   14718:	mov	r1, r5
   1471c:	mov	r2, r4
   14720:	bl	10ddc <memcpy@plt>
   14724:	mov	r0, r6
   14728:	pop	{r4, r5, r6, sl, fp, pc}
   1472c:	push	{r4, r5, r6, sl, fp, lr}
   14730:	add	fp, sp, #16
   14734:	mov	r4, r1
   14738:	mov	r5, r0
   1473c:	mov	r0, r1
   14740:	bl	14430 <putchar_unlocked@plt+0x3474>
   14744:	mov	r6, r0
   14748:	mov	r1, r5
   1474c:	mov	r2, r4
   14750:	bl	10ddc <memcpy@plt>
   14754:	mov	r0, r6
   14758:	pop	{r4, r5, r6, sl, fp, pc}
   1475c:	push	{r4, r5, r6, sl, fp, lr}
   14760:	add	fp, sp, #16
   14764:	mov	r4, r1
   14768:	mov	r5, r0
   1476c:	add	r0, r1, #1
   14770:	bl	14430 <putchar_unlocked@plt+0x3474>
   14774:	mov	r6, r0
   14778:	mov	r0, #0
   1477c:	strb	r0, [r6, r4]
   14780:	mov	r0, r6
   14784:	mov	r1, r5
   14788:	mov	r2, r4
   1478c:	bl	10ddc <memcpy@plt>
   14790:	mov	r0, r6
   14794:	pop	{r4, r5, r6, sl, fp, pc}
   14798:	push	{r4, sl, fp, lr}
   1479c:	add	fp, sp, #8
   147a0:	mov	r4, r0
   147a4:	bl	10ef0 <strlen@plt>
   147a8:	add	r1, r0, #1
   147ac:	mov	r0, r4
   147b0:	pop	{r4, sl, fp, lr}
   147b4:	b	146fc <putchar_unlocked@plt+0x3740>
   147b8:	push	{fp, lr}
   147bc:	mov	fp, sp
   147c0:	movw	r0, #24796	; 0x60dc
   147c4:	movt	r0, #2
   147c8:	ldr	r4, [r0]
   147cc:	movw	r1, #22660	; 0x5884
   147d0:	movt	r1, #1
   147d4:	mov	r0, #0
   147d8:	mov	r2, #5
   147dc:	bl	10e18 <dcgettext@plt>
   147e0:	mov	r3, r0
   147e4:	movw	r2, #20915	; 0x51b3
   147e8:	movt	r2, #1
   147ec:	mov	r0, r4
   147f0:	mov	r1, #0
   147f4:	bl	10e90 <error@plt>
   147f8:	bl	10fb0 <abort@plt>
   147fc:	clz	r2, r1
   14800:	lsr	r2, r2, #5
   14804:	clz	r3, r0
   14808:	lsr	r3, r3, #5
   1480c:	orrs	r2, r3, r2
   14810:	movwne	r1, #1
   14814:	movwne	r0, #1
   14818:	cmp	r1, #0
   1481c:	beq	1484c <putchar_unlocked@plt+0x3890>
   14820:	mvn	r2, #-2147483648	; 0x80000000
   14824:	udiv	r2, r2, r1
   14828:	cmp	r2, r0
   1482c:	bcs	1484c <putchar_unlocked@plt+0x3890>
   14830:	push	{fp, lr}
   14834:	mov	fp, sp
   14838:	bl	10efc <__errno_location@plt>
   1483c:	mov	r1, #12
   14840:	str	r1, [r0]
   14844:	mov	r0, #0
   14848:	pop	{fp, pc}
   1484c:	b	10d88 <calloc@plt>
   14850:	cmp	r0, #0
   14854:	movweq	r0, #1
   14858:	cmn	r0, #1
   1485c:	ble	14864 <putchar_unlocked@plt+0x38a8>
   14860:	b	10e9c <malloc@plt>
   14864:	push	{fp, lr}
   14868:	mov	fp, sp
   1486c:	bl	10efc <__errno_location@plt>
   14870:	mov	r1, #12
   14874:	str	r1, [r0]
   14878:	mov	r0, #0
   1487c:	pop	{fp, pc}
   14880:	push	{fp, lr}
   14884:	mov	fp, sp
   14888:	cmp	r0, #0
   1488c:	beq	148a8 <putchar_unlocked@plt+0x38ec>
   14890:	cmp	r1, #0
   14894:	beq	148b4 <putchar_unlocked@plt+0x38f8>
   14898:	cmn	r1, #1
   1489c:	ble	148c0 <putchar_unlocked@plt+0x3904>
   148a0:	pop	{fp, lr}
   148a4:	b	10e24 <realloc@plt>
   148a8:	mov	r0, r1
   148ac:	pop	{fp, lr}
   148b0:	b	14850 <putchar_unlocked@plt+0x3894>
   148b4:	bl	1222c <putchar_unlocked@plt+0x1270>
   148b8:	mov	r0, #0
   148bc:	pop	{fp, pc}
   148c0:	bl	10efc <__errno_location@plt>
   148c4:	mov	r1, #12
   148c8:	str	r1, [r0]
   148cc:	mov	r0, #0
   148d0:	pop	{fp, pc}
   148d4:	mov	r1, r0
   148d8:	sub	r2, r0, #65	; 0x41
   148dc:	mov	r0, #1
   148e0:	cmp	r2, #26
   148e4:	subcs	r2, r1, #97	; 0x61
   148e8:	cmpcs	r2, #26
   148ec:	bcs	148f4 <putchar_unlocked@plt+0x3938>
   148f0:	bx	lr
   148f4:	sub	r1, r1, #48	; 0x30
   148f8:	cmp	r1, #10
   148fc:	movcs	r0, #0
   14900:	bx	lr
   14904:	mov	r1, r0
   14908:	sub	r2, r0, #65	; 0x41
   1490c:	mov	r0, #1
   14910:	cmp	r2, #26
   14914:	subcs	r1, r1, #97	; 0x61
   14918:	cmpcs	r1, #26
   1491c:	movcs	r0, #0
   14920:	bx	lr
   14924:	mov	r1, #0
   14928:	cmp	r0, #128	; 0x80
   1492c:	movwcc	r1, #1
   14930:	mov	r0, r1
   14934:	bx	lr
   14938:	sub	r1, r0, #9
   1493c:	clz	r1, r1
   14940:	lsr	r1, r1, #5
   14944:	sub	r0, r0, #32
   14948:	clz	r0, r0
   1494c:	lsr	r0, r0, #5
   14950:	orr	r0, r0, r1
   14954:	bx	lr
   14958:	mov	r1, r0
   1495c:	mov	r0, #1
   14960:	cmp	r1, #32
   14964:	bxcc	lr
   14968:	cmp	r1, #127	; 0x7f
   1496c:	movne	r0, #0
   14970:	bx	lr
   14974:	sub	r1, r0, #48	; 0x30
   14978:	mov	r0, #0
   1497c:	cmp	r1, #10
   14980:	movwcc	r0, #1
   14984:	bx	lr
   14988:	sub	r1, r0, #33	; 0x21
   1498c:	mov	r0, #0
   14990:	cmp	r1, #94	; 0x5e
   14994:	movwcc	r0, #1
   14998:	bx	lr
   1499c:	sub	r1, r0, #97	; 0x61
   149a0:	mov	r0, #0
   149a4:	cmp	r1, #26
   149a8:	movwcc	r0, #1
   149ac:	bx	lr
   149b0:	sub	r1, r0, #32
   149b4:	mov	r0, #0
   149b8:	cmp	r1, #95	; 0x5f
   149bc:	movwcc	r0, #1
   149c0:	bx	lr
   149c4:	sub	r1, r0, #33	; 0x21
   149c8:	cmp	r1, #93	; 0x5d
   149cc:	bhi	14b58 <putchar_unlocked@plt+0x3b9c>
   149d0:	mov	r0, #1
   149d4:	add	r2, pc, #0
   149d8:	ldr	pc, [r2, r1, lsl #2]
   149dc:	andeq	r4, r1, r4, asr fp
   149e0:	andeq	r4, r1, r4, asr fp
   149e4:	andeq	r4, r1, r4, asr fp
   149e8:	andeq	r4, r1, r4, asr fp
   149ec:	andeq	r4, r1, r4, asr fp
   149f0:	andeq	r4, r1, r4, asr fp
   149f4:	andeq	r4, r1, r4, asr fp
   149f8:	andeq	r4, r1, r4, asr fp
   149fc:	andeq	r4, r1, r4, asr fp
   14a00:	andeq	r4, r1, r4, asr fp
   14a04:	andeq	r4, r1, r4, asr fp
   14a08:	andeq	r4, r1, r4, asr fp
   14a0c:	andeq	r4, r1, r4, asr fp
   14a10:	andeq	r4, r1, r4, asr fp
   14a14:	andeq	r4, r1, r4, asr fp
   14a18:	andeq	r4, r1, r8, asr fp
   14a1c:	andeq	r4, r1, r8, asr fp
   14a20:	andeq	r4, r1, r8, asr fp
   14a24:	andeq	r4, r1, r8, asr fp
   14a28:	andeq	r4, r1, r8, asr fp
   14a2c:	andeq	r4, r1, r8, asr fp
   14a30:	andeq	r4, r1, r8, asr fp
   14a34:	andeq	r4, r1, r8, asr fp
   14a38:	andeq	r4, r1, r8, asr fp
   14a3c:	andeq	r4, r1, r8, asr fp
   14a40:	andeq	r4, r1, r4, asr fp
   14a44:	andeq	r4, r1, r4, asr fp
   14a48:	andeq	r4, r1, r4, asr fp
   14a4c:	andeq	r4, r1, r4, asr fp
   14a50:	andeq	r4, r1, r4, asr fp
   14a54:	andeq	r4, r1, r4, asr fp
   14a58:	andeq	r4, r1, r4, asr fp
   14a5c:	andeq	r4, r1, r8, asr fp
   14a60:	andeq	r4, r1, r8, asr fp
   14a64:	andeq	r4, r1, r8, asr fp
   14a68:	andeq	r4, r1, r8, asr fp
   14a6c:	andeq	r4, r1, r8, asr fp
   14a70:	andeq	r4, r1, r8, asr fp
   14a74:	andeq	r4, r1, r8, asr fp
   14a78:	andeq	r4, r1, r8, asr fp
   14a7c:	andeq	r4, r1, r8, asr fp
   14a80:	andeq	r4, r1, r8, asr fp
   14a84:	andeq	r4, r1, r8, asr fp
   14a88:	andeq	r4, r1, r8, asr fp
   14a8c:	andeq	r4, r1, r8, asr fp
   14a90:	andeq	r4, r1, r8, asr fp
   14a94:	andeq	r4, r1, r8, asr fp
   14a98:	andeq	r4, r1, r8, asr fp
   14a9c:	andeq	r4, r1, r8, asr fp
   14aa0:	andeq	r4, r1, r8, asr fp
   14aa4:	andeq	r4, r1, r8, asr fp
   14aa8:	andeq	r4, r1, r8, asr fp
   14aac:	andeq	r4, r1, r8, asr fp
   14ab0:	andeq	r4, r1, r8, asr fp
   14ab4:	andeq	r4, r1, r8, asr fp
   14ab8:	andeq	r4, r1, r8, asr fp
   14abc:	andeq	r4, r1, r8, asr fp
   14ac0:	andeq	r4, r1, r8, asr fp
   14ac4:	andeq	r4, r1, r4, asr fp
   14ac8:	andeq	r4, r1, r4, asr fp
   14acc:	andeq	r4, r1, r4, asr fp
   14ad0:	andeq	r4, r1, r4, asr fp
   14ad4:	andeq	r4, r1, r4, asr fp
   14ad8:	andeq	r4, r1, r4, asr fp
   14adc:	andeq	r4, r1, r8, asr fp
   14ae0:	andeq	r4, r1, r8, asr fp
   14ae4:	andeq	r4, r1, r8, asr fp
   14ae8:	andeq	r4, r1, r8, asr fp
   14aec:	andeq	r4, r1, r8, asr fp
   14af0:	andeq	r4, r1, r8, asr fp
   14af4:	andeq	r4, r1, r8, asr fp
   14af8:	andeq	r4, r1, r8, asr fp
   14afc:	andeq	r4, r1, r8, asr fp
   14b00:	andeq	r4, r1, r8, asr fp
   14b04:	andeq	r4, r1, r8, asr fp
   14b08:	andeq	r4, r1, r8, asr fp
   14b0c:	andeq	r4, r1, r8, asr fp
   14b10:	andeq	r4, r1, r8, asr fp
   14b14:	andeq	r4, r1, r8, asr fp
   14b18:	andeq	r4, r1, r8, asr fp
   14b1c:	andeq	r4, r1, r8, asr fp
   14b20:	andeq	r4, r1, r8, asr fp
   14b24:	andeq	r4, r1, r8, asr fp
   14b28:	andeq	r4, r1, r8, asr fp
   14b2c:	andeq	r4, r1, r8, asr fp
   14b30:	andeq	r4, r1, r8, asr fp
   14b34:	andeq	r4, r1, r8, asr fp
   14b38:	andeq	r4, r1, r8, asr fp
   14b3c:	andeq	r4, r1, r8, asr fp
   14b40:	andeq	r4, r1, r8, asr fp
   14b44:	andeq	r4, r1, r4, asr fp
   14b48:	andeq	r4, r1, r4, asr fp
   14b4c:	andeq	r4, r1, r4, asr fp
   14b50:	andeq	r4, r1, r4, asr fp
   14b54:	bx	lr
   14b58:	mov	r0, #0
   14b5c:	bx	lr
   14b60:	sub	r0, r0, #9
   14b64:	cmp	r0, #23
   14b68:	movhi	r0, #0
   14b6c:	bxhi	lr
   14b70:	bic	r0, r0, #-16777216	; 0xff000000
   14b74:	movw	r1, #31
   14b78:	movt	r1, #128	; 0x80
   14b7c:	mov	r2, #1
   14b80:	and	r0, r2, r1, lsr r0
   14b84:	bx	lr
   14b88:	sub	r1, r0, #65	; 0x41
   14b8c:	mov	r0, #0
   14b90:	cmp	r1, #26
   14b94:	movwcc	r0, #1
   14b98:	bx	lr
   14b9c:	mov	r1, r0
   14ba0:	sub	r2, r0, #48	; 0x30
   14ba4:	mov	r0, #1
   14ba8:	cmp	r2, #22
   14bac:	bhi	14bc4 <putchar_unlocked@plt+0x3c08>
   14bb0:	mov	ip, #1
   14bb4:	movw	r3, #1023	; 0x3ff
   14bb8:	movt	r3, #126	; 0x7e
   14bbc:	tst	r3, ip, lsl r2
   14bc0:	bxne	lr
   14bc4:	sub	r1, r1, #97	; 0x61
   14bc8:	cmp	r1, #6
   14bcc:	movcs	r0, #0
   14bd0:	bxcs	lr
   14bd4:	bx	lr
   14bd8:	sub	r1, r0, #65	; 0x41
   14bdc:	cmp	r1, #26
   14be0:	addcc	r0, r0, #32
   14be4:	bx	lr
   14be8:	sub	r1, r0, #97	; 0x61
   14bec:	cmp	r1, #26
   14bf0:	subcc	r0, r0, #32
   14bf4:	bx	lr
   14bf8:	push	{r4, r5, r6, sl, fp, lr}
   14bfc:	add	fp, sp, #16
   14c00:	mov	r4, r0
   14c04:	bl	10e6c <__fpending@plt>
   14c08:	mov	r5, r0
   14c0c:	mov	r0, r4
   14c10:	bl	10e78 <ferror_unlocked@plt>
   14c14:	mov	r6, r0
   14c18:	mov	r0, r4
   14c1c:	bl	12124 <putchar_unlocked@plt+0x1168>
   14c20:	cmp	r6, #0
   14c24:	beq	14c44 <putchar_unlocked@plt+0x3c88>
   14c28:	mvn	r4, #0
   14c2c:	cmp	r0, #0
   14c30:	bne	14c78 <putchar_unlocked@plt+0x3cbc>
   14c34:	bl	10efc <__errno_location@plt>
   14c38:	mov	r1, #0
   14c3c:	str	r1, [r0]
   14c40:	b	14c78 <putchar_unlocked@plt+0x3cbc>
   14c44:	cmp	r0, #0
   14c48:	mov	r4, r0
   14c4c:	mvnne	r4, #0
   14c50:	cmp	r5, #0
   14c54:	bne	14c78 <putchar_unlocked@plt+0x3cbc>
   14c58:	cmp	r0, #0
   14c5c:	beq	14c78 <putchar_unlocked@plt+0x3cbc>
   14c60:	bl	10efc <__errno_location@plt>
   14c64:	ldr	r0, [r0]
   14c68:	subs	r4, r0, #9
   14c6c:	mvnne	r4, #0
   14c70:	mov	r0, r4
   14c74:	pop	{r4, r5, r6, sl, fp, pc}
   14c78:	mov	r0, r4
   14c7c:	pop	{r4, r5, r6, sl, fp, pc}
   14c80:	push	{fp, lr}
   14c84:	mov	fp, sp
   14c88:	bl	10efc <__errno_location@plt>
   14c8c:	mov	r1, #12
   14c90:	str	r1, [r0]
   14c94:	mov	r0, #0
   14c98:	pop	{fp, pc}
   14c9c:	b	14850 <putchar_unlocked@plt+0x3894>
   14ca0:	cmp	r1, #0
   14ca4:	orreq	r1, r1, #1
   14ca8:	b	14880 <putchar_unlocked@plt+0x38c4>
   14cac:	b	147fc <putchar_unlocked@plt+0x3840>
   14cb0:	clz	r3, r2
   14cb4:	lsr	ip, r3, #5
   14cb8:	clz	r3, r1
   14cbc:	lsr	r3, r3, #5
   14cc0:	orrs	r3, r3, ip
   14cc4:	movwne	r1, #1
   14cc8:	movwne	r2, #1
   14ccc:	b	14d68 <putchar_unlocked@plt+0x3dac>
   14cd0:	push	{fp, lr}
   14cd4:	mov	fp, sp
   14cd8:	mov	r0, #14
   14cdc:	bl	10f74 <nl_langinfo@plt>
   14ce0:	movw	r1, #20788	; 0x5134
   14ce4:	movt	r1, #1
   14ce8:	cmp	r0, #0
   14cec:	movne	r1, r0
   14cf0:	ldrb	r2, [r1]
   14cf4:	movw	r0, #22677	; 0x5895
   14cf8:	movt	r0, #1
   14cfc:	cmp	r2, #0
   14d00:	movne	r0, r1
   14d04:	pop	{fp, pc}
   14d08:	push	{r4, r5, r6, r7, fp, lr}
   14d0c:	add	fp, sp, #16
   14d10:	sub	sp, sp, #8
   14d14:	mov	r7, r2
   14d18:	mov	r4, r1
   14d1c:	add	r5, sp, #4
   14d20:	cmp	r0, #0
   14d24:	movne	r5, r0
   14d28:	mov	r0, r5
   14d2c:	bl	10e84 <mbrtowc@plt>
   14d30:	mov	r6, r0
   14d34:	cmp	r7, #0
   14d38:	beq	14d5c <putchar_unlocked@plt+0x3da0>
   14d3c:	cmn	r6, #2
   14d40:	bcc	14d5c <putchar_unlocked@plt+0x3da0>
   14d44:	mov	r0, #0
   14d48:	bl	14da4 <putchar_unlocked@plt+0x3de8>
   14d4c:	cmp	r0, #0
   14d50:	ldrbeq	r0, [r4]
   14d54:	streq	r0, [r5]
   14d58:	moveq	r6, #1
   14d5c:	mov	r0, r6
   14d60:	sub	sp, fp, #16
   14d64:	pop	{r4, r5, r6, r7, fp, pc}
   14d68:	cmp	r2, #0
   14d6c:	beq	14d9c <putchar_unlocked@plt+0x3de0>
   14d70:	mvn	r3, #0
   14d74:	udiv	r3, r3, r2
   14d78:	cmp	r3, r1
   14d7c:	bcs	14d9c <putchar_unlocked@plt+0x3de0>
   14d80:	push	{fp, lr}
   14d84:	mov	fp, sp
   14d88:	bl	10efc <__errno_location@plt>
   14d8c:	mov	r1, #12
   14d90:	str	r1, [r0]
   14d94:	mov	r0, #0
   14d98:	pop	{fp, pc}
   14d9c:	mul	r1, r2, r1
   14da0:	b	14880 <putchar_unlocked@plt+0x38c4>
   14da4:	push	{r4, sl, fp, lr}
   14da8:	add	fp, sp, #8
   14dac:	sub	sp, sp, #264	; 0x108
   14db0:	add	r1, sp, #7
   14db4:	movw	r2, #257	; 0x101
   14db8:	bl	14e08 <putchar_unlocked@plt+0x3e4c>
   14dbc:	mov	r4, #0
   14dc0:	cmp	r0, #0
   14dc4:	bne	14dfc <putchar_unlocked@plt+0x3e40>
   14dc8:	add	r0, sp, #7
   14dcc:	movw	r1, #22683	; 0x589b
   14dd0:	movt	r1, #1
   14dd4:	bl	10da0 <strcmp@plt>
   14dd8:	cmp	r0, #0
   14ddc:	beq	14dfc <putchar_unlocked@plt+0x3e40>
   14de0:	add	r0, sp, #7
   14de4:	movw	r1, #22685	; 0x589d
   14de8:	movt	r1, #1
   14dec:	bl	10da0 <strcmp@plt>
   14df0:	mov	r4, r0
   14df4:	cmp	r0, #0
   14df8:	movwne	r4, #1
   14dfc:	mov	r0, r4
   14e00:	sub	sp, fp, #8
   14e04:	pop	{r4, sl, fp, pc}
   14e08:	b	14e0c <putchar_unlocked@plt+0x3e50>
   14e0c:	push	{r4, r5, r6, r7, fp, lr}
   14e10:	add	fp, sp, #16
   14e14:	mov	r6, r2
   14e18:	mov	r4, r1
   14e1c:	bl	14ea8 <putchar_unlocked@plt+0x3eec>
   14e20:	cmp	r0, #0
   14e24:	beq	14e54 <putchar_unlocked@plt+0x3e98>
   14e28:	mov	r7, r0
   14e2c:	bl	10ef0 <strlen@plt>
   14e30:	cmp	r0, r6
   14e34:	bcs	14e74 <putchar_unlocked@plt+0x3eb8>
   14e38:	add	r2, r0, #1
   14e3c:	mov	r0, r4
   14e40:	mov	r1, r7
   14e44:	bl	10ddc <memcpy@plt>
   14e48:	mov	r5, #0
   14e4c:	mov	r0, r5
   14e50:	pop	{r4, r5, r6, r7, fp, pc}
   14e54:	mov	r5, #22
   14e58:	cmp	r6, #0
   14e5c:	movne	r0, #0
   14e60:	strbne	r0, [r4]
   14e64:	movne	r0, r5
   14e68:	popne	{r4, r5, r6, r7, fp, pc}
   14e6c:	mov	r0, r5
   14e70:	pop	{r4, r5, r6, r7, fp, pc}
   14e74:	mov	r5, #34	; 0x22
   14e78:	cmp	r6, #0
   14e7c:	beq	14e9c <putchar_unlocked@plt+0x3ee0>
   14e80:	sub	r6, r6, #1
   14e84:	mov	r0, r4
   14e88:	mov	r1, r7
   14e8c:	mov	r2, r6
   14e90:	bl	10ddc <memcpy@plt>
   14e94:	mov	r0, #0
   14e98:	strb	r0, [r4, r6]
   14e9c:	mov	r0, r5
   14ea0:	pop	{r4, r5, r6, r7, fp, pc}
   14ea4:	b	14ea8 <putchar_unlocked@plt+0x3eec>
   14ea8:	mov	r1, #0
   14eac:	b	10f5c <setlocale@plt>
   14eb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14eb4:	mov	r7, r0
   14eb8:	ldr	r6, [pc, #72]	; 14f08 <putchar_unlocked@plt+0x3f4c>
   14ebc:	ldr	r5, [pc, #72]	; 14f0c <putchar_unlocked@plt+0x3f50>
   14ec0:	add	r6, pc, r6
   14ec4:	add	r5, pc, r5
   14ec8:	sub	r6, r6, r5
   14ecc:	mov	r8, r1
   14ed0:	mov	r9, r2
   14ed4:	bl	10d68 <calloc@plt-0x20>
   14ed8:	asrs	r6, r6, #2
   14edc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ee0:	mov	r4, #0
   14ee4:	add	r4, r4, #1
   14ee8:	ldr	r3, [r5], #4
   14eec:	mov	r2, r9
   14ef0:	mov	r1, r8
   14ef4:	mov	r0, r7
   14ef8:	blx	r3
   14efc:	cmp	r6, r4
   14f00:	bne	14ee4 <putchar_unlocked@plt+0x3f28>
   14f04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f08:	andeq	r1, r1, r4, asr #32
   14f0c:	andeq	r1, r1, ip, lsr r0
   14f10:	bx	lr
   14f14:	ldr	r3, [pc, #12]	; 14f28 <putchar_unlocked@plt+0x3f6c>
   14f18:	mov	r1, #0
   14f1c:	add	r3, pc, r3
   14f20:	ldr	r2, [r3]
   14f24:	b	10f08 <__cxa_atexit@plt>
   14f28:			; <UNDEFINED> instruction: 0x000111b0

Disassembly of section .fini:

00014f2c <.fini>:
   14f2c:	push	{r3, lr}
   14f30:	pop	{r3, pc}
