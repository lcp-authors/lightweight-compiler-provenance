
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

00000530 <_init>:
 530:	push	{r3, lr}
 534:	bl	5e0 <call_weak_fn>
 538:	pop	{r3, pc}

Disassembly of section .plt:

0000053c <.plt>:
 53c:	push	{lr}		; (str lr, [sp, #-4]!)
 540:	ldr	lr, [pc, #4]	; 54c <.plt+0x10>
 544:	add	lr, pc, lr
 548:	ldr	pc, [lr, #8]!
 54c:	.word	0x00010ab4

00000550 <__cxa_finalize@plt>:
 550:	add	ip, pc, #0, 12
 554:	add	ip, ip, #16, 20	; 0x10000
 558:	ldr	pc, [ip, #2740]!	; 0xab4

0000055c <rb_strncasecmp@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2732]!	; 0xaac

00000568 <sendto_realops_snomask@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2724]!	; 0xaa4

00000574 <__gmon_start__@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2716]!	; 0xa9c

00000580 <strlen@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2708]!	; 0xa94

0000058c <strchr@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2700]!	; 0xa8c

00000598 <snprintf@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2692]!	; 0xa84

000005a4 <is_remote_connect@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2684]!	; 0xa7c

000005b0 <ilog@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2676]!	; 0xa74

000005bc <log_client_name@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2668]!	; 0xa6c

000005c8 <exit_client@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2660]!	; 0xa64

000005d4 <strncmp@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2652]!	; 0xa5c

Disassembly of section .text:

000005e0 <call_weak_fn>:
 5e0:	ldr	r3, [pc, #20]	; 5fc <call_weak_fn+0x1c>
 5e4:	ldr	r2, [pc, #20]	; 600 <call_weak_fn+0x20>
 5e8:	add	r3, pc, r3
 5ec:	ldr	r2, [r3, r2]
 5f0:	cmp	r2, #0
 5f4:	bxeq	lr
 5f8:	b	574 <__gmon_start__@plt>
 5fc:	.word	0x00010a10
 600:	.word	0x00000044

00000604 <deregister_tm_clones>:
 604:	ldr	r0, [pc, #44]	; 638 <deregister_tm_clones+0x34>
 608:	ldr	r3, [pc, #44]	; 63c <deregister_tm_clones+0x38>
 60c:	add	r0, pc, r0
 610:	add	r3, pc, r3
 614:	cmp	r3, r0
 618:	ldr	r3, [pc, #32]	; 640 <deregister_tm_clones+0x3c>
 61c:	add	r3, pc, r3
 620:	bxeq	lr
 624:	ldr	r2, [pc, #24]	; 644 <deregister_tm_clones+0x40>
 628:	ldr	r3, [r3, r2]
 62c:	cmp	r3, #0
 630:	bxeq	lr
 634:	bx	r3
 638:	.word	0x00010ab8
 63c:	.word	0x00010ab4
 640:	.word	0x000109dc
 644:	.word	0x00000040

00000648 <register_tm_clones>:
 648:	ldr	r0, [pc, #56]	; 688 <register_tm_clones+0x40>
 64c:	ldr	r3, [pc, #56]	; 68c <register_tm_clones+0x44>
 650:	add	r0, pc, r0
 654:	add	r3, pc, r3
 658:	sub	r1, r3, r0
 65c:	ldr	r3, [pc, #44]	; 690 <register_tm_clones+0x48>
 660:	asr	r1, r1, #2
 664:	add	r3, pc, r3
 668:	add	r1, r1, r1, lsr #31
 66c:	asrs	r1, r1, #1
 670:	bxeq	lr
 674:	ldr	r2, [pc, #24]	; 694 <register_tm_clones+0x4c>
 678:	ldr	r3, [r3, r2]
 67c:	cmp	r3, #0
 680:	bxeq	lr
 684:	bx	r3
 688:	.word	0x00010a74
 68c:	.word	0x00010a70
 690:	.word	0x00010994
 694:	.word	0x00000048

00000698 <__do_global_dtors_aux>:
 698:	ldr	r3, [pc, #76]	; 6ec <__do_global_dtors_aux+0x54>
 69c:	ldr	r2, [pc, #76]	; 6f0 <__do_global_dtors_aux+0x58>
 6a0:	add	r3, pc, r3
 6a4:	add	r2, pc, r2
 6a8:	ldrb	r3, [r3]
 6ac:	cmp	r3, #0
 6b0:	bxne	lr
 6b4:	ldr	r3, [pc, #56]	; 6f4 <__do_global_dtors_aux+0x5c>
 6b8:	push	{r4, lr}
 6bc:	ldr	r3, [r2, r3]
 6c0:	cmp	r3, #0
 6c4:	beq	6d4 <__do_global_dtors_aux+0x3c>
 6c8:	ldr	r3, [pc, #40]	; 6f8 <__do_global_dtors_aux+0x60>
 6cc:	ldr	r0, [pc, r3]
 6d0:	bl	550 <__cxa_finalize@plt>
 6d4:	bl	604 <deregister_tm_clones>
 6d8:	ldr	r3, [pc, #28]	; 6fc <__do_global_dtors_aux+0x64>
 6dc:	mov	r2, #1
 6e0:	add	r3, pc, r3
 6e4:	strb	r2, [r3]
 6e8:	pop	{r4, pc}
 6ec:	.word	0x00010a24
 6f0:	.word	0x00010954
 6f4:	.word	0x0000003c
 6f8:	.word	0x00010980
 6fc:	.word	0x000109e4

00000700 <frame_dummy>:
 700:	b	648 <register_tm_clones>

00000704 <is_safe_error>:
 704:	strd	r4, [sp, #-12]!
 708:	str	lr, [sp, #8]
 70c:	sub	sp, sp, #108	; 0x6c
 710:	mov	r5, r0
 714:	ldr	r4, [pc, #296]	; 844 <is_safe_error+0x140>
 718:	add	r4, pc, r4
 71c:	mov	r2, #25
 720:	ldr	r1, [pc, #288]	; 848 <is_safe_error+0x144>
 724:	add	r1, pc, r1
 728:	bl	5d4 <strncmp@plt>
 72c:	cmp	r0, #0
 730:	moveq	r0, #1
 734:	bne	748 <is_safe_error+0x44>
 738:	add	sp, sp, #108	; 0x6c
 73c:	ldrd	r4, [sp]
 740:	add	sp, sp, #8
 744:	pop	{pc}		; (ldr pc, [sp], #4)
 748:	ldr	r3, [pc, #252]	; 84c <is_safe_error+0x148>
 74c:	ldr	r3, [r4, r3]
 750:	add	r3, r3, #88	; 0x58
 754:	ldr	r2, [pc, #244]	; 850 <is_safe_error+0x14c>
 758:	add	r2, pc, r2
 75c:	mov	r1, #100	; 0x64
 760:	add	r4, sp, #4
 764:	mov	r0, r4
 768:	bl	598 <snprintf@plt>
 76c:	mov	r0, r4
 770:	bl	580 <strlen@plt>
 774:	mov	r2, r0
 778:	mov	r1, r4
 77c:	mov	r0, r5
 780:	bl	5d4 <strncmp@plt>
 784:	cmp	r0, #0
 788:	moveq	r0, #1
 78c:	beq	738 <is_safe_error+0x34>
 790:	mov	r2, #11
 794:	ldr	r1, [pc, #184]	; 854 <is_safe_error+0x150>
 798:	add	r1, pc, r1
 79c:	mov	r0, r5
 7a0:	bl	5d4 <strncmp@plt>
 7a4:	cmp	r0, #0
 7a8:	moveq	r0, #1
 7ac:	beq	738 <is_safe_error+0x34>
 7b0:	mov	r2, #14
 7b4:	ldr	r1, [pc, #156]	; 858 <is_safe_error+0x154>
 7b8:	add	r1, pc, r1
 7bc:	mov	r0, r5
 7c0:	bl	5d4 <strncmp@plt>
 7c4:	cmp	r0, #0
 7c8:	moveq	r0, #1
 7cc:	beq	738 <is_safe_error+0x34>
 7d0:	mov	r2, #12
 7d4:	ldr	r1, [pc, #128]	; 85c <is_safe_error+0x158>
 7d8:	add	r1, pc, r1
 7dc:	mov	r0, r5
 7e0:	bl	55c <rb_strncasecmp@plt>
 7e4:	cmp	r0, #0
 7e8:	moveq	r0, #0
 7ec:	beq	738 <is_safe_error+0x34>
 7f0:	mov	r1, #91	; 0x5b
 7f4:	mov	r0, r5
 7f8:	bl	58c <strchr@plt>
 7fc:	cmp	r0, #0
 800:	movne	r0, #0
 804:	bne	738 <is_safe_error+0x34>
 808:	mov	r1, #46	; 0x2e
 80c:	mov	r0, r5
 810:	bl	58c <strchr@plt>
 814:	cmp	r0, #0
 818:	beq	82c <is_safe_error+0x128>
 81c:	ldrb	r3, [r0, #1]
 820:	cmp	r3, #0
 824:	movne	r0, #0
 828:	bne	738 <is_safe_error+0x34>
 82c:	mov	r1, #58	; 0x3a
 830:	mov	r0, r5
 834:	bl	58c <strchr@plt>
 838:	clz	r0, r0
 83c:	lsr	r0, r0, #5
 840:	b	738 <is_safe_error+0x34>
 844:	.word	0x000108e0
 848:	.word	0x0000045c
 84c:	.word	0x0000004c
 850:	.word	0x00000444
 854:	.word	0x00000424
 858:	.word	0x00000410
 85c:	.word	0x00000400

00000860 <ms_error>:
 860:	strd	r4, [sp, #-20]!	; 0xffffffec
 864:	strd	r6, [sp, #8]
 868:	str	lr, [sp, #16]
 86c:	sub	sp, sp, #12
 870:	mov	r6, r1
 874:	mov	r7, r2
 878:	ldr	r2, [pc, #256]	; 980 <ms_error+0x120>
 87c:	add	r2, pc, r2
 880:	ldr	r1, [pc, #252]	; 984 <ms_error+0x124>
 884:	ldr	r2, [r2, r1]
 888:	ldr	r5, [r2, #208]	; 0xd0
 88c:	cmp	r3, #1
 890:	ble	8b4 <ms_error+0x54>
 894:	ldr	r3, [sp, #32]
 898:	ldr	r4, [r3, #4]
 89c:	ldrb	r3, [r4]
 8a0:	cmp	r3, #0
 8a4:	bne	8bc <ms_error+0x5c>
 8a8:	ldr	r4, [pc, #216]	; 988 <ms_error+0x128>
 8ac:	add	r4, pc, r4
 8b0:	b	8bc <ms_error+0x5c>
 8b4:	ldr	r4, [pc, #208]	; 98c <ms_error+0x12c>
 8b8:	add	r4, pc, r4
 8bc:	mov	r1, #1
 8c0:	mov	r0, r7
 8c4:	bl	5bc <log_client_name@plt>
 8c8:	mov	r3, r4
 8cc:	mov	r2, r0
 8d0:	ldr	r1, [pc, #184]	; 990 <ms_error+0x130>
 8d4:	add	r1, pc, r1
 8d8:	mov	r0, #5
 8dc:	bl	5b0 <ilog@plt>
 8e0:	mov	r0, r4
 8e4:	bl	704 <is_safe_error>
 8e8:	cmp	r0, #0
 8ec:	bne	93c <ms_error+0xdc>
 8f0:	cmp	r5, #2
 8f4:	beq	96c <ms_error+0x10c>
 8f8:	cmp	r7, r6
 8fc:	beq	90c <ms_error+0xac>
 900:	cmp	r5, #0
 904:	movne	r5, #2
 908:	b	948 <ms_error+0xe8>
 90c:	cmp	r5, #0
 910:	movne	r5, #2
 914:	b	91c <ms_error+0xbc>
 918:	mov	r5, #0
 91c:	str	r4, [sp]
 920:	add	r3, r6, #88	; 0x58
 924:	ldr	r2, [pc, #104]	; 994 <ms_error+0x134>
 928:	add	r2, pc, r2
 92c:	mov	r1, r5
 930:	mov	r0, #256	; 0x100
 934:	bl	568 <sendto_realops_snomask@plt>
 938:	b	96c <ms_error+0x10c>
 93c:	cmp	r7, r6
 940:	movne	r5, #0
 944:	beq	918 <ms_error+0xb8>
 948:	str	r4, [sp, #4]
 94c:	add	r6, r6, #88	; 0x58
 950:	str	r6, [sp]
 954:	add	r3, r7, #88	; 0x58
 958:	ldr	r2, [pc, #56]	; 998 <ms_error+0x138>
 95c:	add	r2, pc, r2
 960:	mov	r1, r5
 964:	mov	r0, #256	; 0x100
 968:	bl	568 <sendto_realops_snomask@plt>
 96c:	add	sp, sp, #12
 970:	ldrd	r4, [sp]
 974:	ldrd	r6, [sp, #8]
 978:	add	sp, sp, #16
 97c:	pop	{pc}		; (ldr pc, [sp], #4)
 980:	.word	0x0001077c
 984:	.word	0x00000050
 988:	.word	0x0000033c
 98c:	.word	0x00000330
 990:	.word	0x00000318
 994:	.word	0x000002e8
 998:	.word	0x000002cc

0000099c <m_error>:
 99c:	strd	r4, [sp, #-20]!	; 0xffffffec
 9a0:	strd	r6, [sp, #8]
 9a4:	str	lr, [sp, #16]
 9a8:	sub	sp, sp, #12
 9ac:	mov	r4, r1
 9b0:	mov	r6, r2
 9b4:	ldr	r2, [pc, #368]	; b2c <m_error+0x190>
 9b8:	add	r2, pc, r2
 9bc:	ldr	r1, [pc, #364]	; b30 <m_error+0x194>
 9c0:	ldr	r2, [r2, r1]
 9c4:	ldr	r7, [r2, #208]	; 0xd0
 9c8:	cmp	r3, #1
 9cc:	ble	9f0 <m_error+0x54>
 9d0:	ldr	r3, [sp, #32]
 9d4:	ldr	r5, [r3, #4]
 9d8:	ldrb	r3, [r5]
 9dc:	cmp	r3, #0
 9e0:	bne	9f8 <m_error+0x5c>
 9e4:	ldr	r5, [pc, #328]	; b34 <m_error+0x198>
 9e8:	add	r5, pc, r5
 9ec:	b	9f8 <m_error+0x5c>
 9f0:	ldr	r5, [pc, #320]	; b38 <m_error+0x19c>
 9f4:	add	r5, pc, r5
 9f8:	ldrh	r2, [r4, #80]	; 0x50
 9fc:	sub	r3, r2, #1
 a00:	uxth	r3, r3
 a04:	cmp	r2, #32
 a08:	cmpne	r3, #1
 a0c:	bhi	a34 <m_error+0x98>
 a10:	mov	r1, #1
 a14:	mov	r0, r6
 a18:	bl	5bc <log_client_name@plt>
 a1c:	mov	r3, r5
 a20:	mov	r2, r0
 a24:	ldr	r1, [pc, #272]	; b3c <m_error+0x1a0>
 a28:	add	r1, pc, r1
 a2c:	mov	r0, #5
 a30:	bl	5b0 <ilog@plt>
 a34:	mov	r0, r5
 a38:	bl	704 <is_safe_error>
 a3c:	cmp	r0, #0
 a40:	bne	ae8 <m_error+0x14c>
 a44:	ldrh	r2, [r4, #80]	; 0x50
 a48:	sub	r3, r2, #1
 a4c:	uxth	r3, r3
 a50:	cmp	r2, #32
 a54:	cmpne	r3, #1
 a58:	bhi	b00 <m_error+0x164>
 a5c:	cmp	r7, #1
 a60:	ble	aa4 <m_error+0x108>
 a64:	cmp	r7, #0
 a68:	ble	b00 <m_error+0x164>
 a6c:	cmp	r7, #1
 a70:	movne	r7, #0
 a74:	moveq	r7, #1
 a78:	mov	r0, r4
 a7c:	bl	5a4 <is_remote_connect@plt>
 a80:	cmp	r0, #0
 a84:	movne	r0, #256	; 0x100
 a88:	add	r3, r4, #88	; 0x58
 a8c:	ldr	r2, [pc, #172]	; b40 <m_error+0x1a4>
 a90:	add	r2, pc, r2
 a94:	orr	r1, r7, r0
 a98:	mov	r0, #256	; 0x100
 a9c:	bl	568 <sendto_realops_snomask@plt>
 aa0:	b	b00 <m_error+0x164>
 aa4:	cmp	r7, #0
 aa8:	movne	r1, #2
 aac:	beq	acc <m_error+0x130>
 ab0:	str	r5, [sp]
 ab4:	add	r3, r4, #88	; 0x58
 ab8:	ldr	r2, [pc, #132]	; b44 <m_error+0x1a8>
 abc:	add	r2, pc, r2
 ac0:	mov	r0, #256	; 0x100
 ac4:	bl	568 <sendto_realops_snomask@plt>
 ac8:	b	a64 <m_error+0xc8>
 acc:	mov	r0, r4
 ad0:	bl	5a4 <is_remote_connect@plt>
 ad4:	subs	r1, r0, #0
 ad8:	moveq	r7, r1
 adc:	movne	r7, #0
 ae0:	movne	r1, #256	; 0x100
 ae4:	b	ab0 <m_error+0x114>
 ae8:	ldrh	r2, [r4, #80]	; 0x50
 aec:	sub	r3, r2, #1
 af0:	uxth	r3, r3
 af4:	cmp	r2, #32
 af8:	cmpne	r3, #1
 afc:	bls	acc <m_error+0x130>
 b00:	ldr	r3, [pc, #64]	; b48 <m_error+0x1ac>
 b04:	add	r3, pc, r3
 b08:	mov	r2, r6
 b0c:	mov	r1, r6
 b10:	mov	r0, r4
 b14:	bl	5c8 <exit_client@plt>
 b18:	add	sp, sp, #12
 b1c:	ldrd	r4, [sp]
 b20:	ldrd	r6, [sp, #8]
 b24:	add	sp, sp, #16
 b28:	pop	{pc}		; (ldr pc, [sp], #4)
 b2c:	.word	0x00010640
 b30:	.word	0x00000050
 b34:	.word	0x00000200
 b38:	.word	0x000001f4
 b3c:	.word	0x000001c4
 b40:	.word	0x000001b4
 b44:	.word	0x00000154
 b48:	.word	0x0000015c

Disassembly of section .fini:

00000b4c <_fini>:
 b4c:	push	{r3, lr}
 b50:	pop	{r3, pc}
