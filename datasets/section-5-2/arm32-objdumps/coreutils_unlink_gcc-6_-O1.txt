
../repos/coreutils/src/unlink:     file format elf32-littlearm


Disassembly of section .init:

00010afc <.init>:
   10afc:	push	{r3, lr}
   10b00:	bl	10d68 <abort@plt+0x48>
   10b04:	pop	{r3, pc}

Disassembly of section .plt:

00010b08 <calloc@plt-0x14>:
   10b08:	push	{lr}		; (str lr, [sp, #-4]!)
   10b0c:	ldr	lr, [pc, #4]	; 10b18 <calloc@plt-0x4>
   10b10:	add	lr, pc, lr
   10b14:	ldr	pc, [lr, #8]!
   10b18:	andeq	r4, r1, r8, ror #9

00010b1c <calloc@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #20, 20	; 0x14000
   10b24:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b28 <fputs_unlocked@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #20, 20	; 0x14000
   10b30:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b34 <raise@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #20, 20	; 0x14000
   10b3c:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b40 <strcmp@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b4c <fflush@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b58 <free@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #20, 20	; 0x14000
   10b60:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b64 <_exit@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #20, 20	; 0x14000
   10b6c:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b70 <memcpy@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #20, 20	; 0x14000
   10b78:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b7c <mbsinit@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #20, 20	; 0x14000
   10b84:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b88 <memcmp@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #20, 20	; 0x14000
   10b90:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b94 <fputc_unlocked@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #20, 20	; 0x14000
   10b9c:	ldr	pc, [ip, #1176]!	; 0x498

00010ba0 <dcgettext@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #20, 20	; 0x14000
   10ba8:	ldr	pc, [ip, #1168]!	; 0x490

00010bac <unlink@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #20, 20	; 0x14000
   10bb4:	ldr	pc, [ip, #1160]!	; 0x488

00010bb8 <realloc@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #20, 20	; 0x14000
   10bc0:	ldr	pc, [ip, #1152]!	; 0x480

00010bc4 <textdomain@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #20, 20	; 0x14000
   10bcc:	ldr	pc, [ip, #1144]!	; 0x478

00010bd0 <iswprint@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #20, 20	; 0x14000
   10bd8:	ldr	pc, [ip, #1136]!	; 0x470

00010bdc <fwrite@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #20, 20	; 0x14000
   10be4:	ldr	pc, [ip, #1128]!	; 0x468

00010be8 <lseek64@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #20, 20	; 0x14000
   10bf0:	ldr	pc, [ip, #1120]!	; 0x460

00010bf4 <__ctype_get_mb_cur_max@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #20, 20	; 0x14000
   10bfc:	ldr	pc, [ip, #1112]!	; 0x458

00010c00 <__fpending@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #20, 20	; 0x14000
   10c08:	ldr	pc, [ip, #1104]!	; 0x450

00010c0c <mbrtowc@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #20, 20	; 0x14000
   10c14:	ldr	pc, [ip, #1096]!	; 0x448

00010c18 <error@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #20, 20	; 0x14000
   10c20:	ldr	pc, [ip, #1088]!	; 0x440

00010c24 <malloc@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #20, 20	; 0x14000
   10c2c:	ldr	pc, [ip, #1080]!	; 0x438

00010c30 <__libc_start_main@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #20, 20	; 0x14000
   10c38:	ldr	pc, [ip, #1072]!	; 0x430

00010c3c <__freading@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #20, 20	; 0x14000
   10c44:	ldr	pc, [ip, #1064]!	; 0x428

00010c48 <__gmon_start__@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #20, 20	; 0x14000
   10c50:	ldr	pc, [ip, #1056]!	; 0x420

00010c54 <getopt_long@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #20, 20	; 0x14000
   10c5c:	ldr	pc, [ip, #1048]!	; 0x418

00010c60 <__ctype_b_loc@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #20, 20	; 0x14000
   10c68:	ldr	pc, [ip, #1040]!	; 0x410

00010c6c <exit@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #1032]!	; 0x408

00010c78 <strlen@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #1024]!	; 0x400

00010c84 <__errno_location@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c90 <__cxa_atexit@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c9c <memset@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #1000]!	; 0x3e8

00010ca8 <__printf_chk@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #992]!	; 0x3e0

00010cb4 <fileno@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #984]!	; 0x3d8

00010cc0 <__fprintf_chk@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #976]!	; 0x3d0

00010ccc <fclose@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #968]!	; 0x3c8

00010cd8 <fseeko64@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #960]!	; 0x3c0

00010ce4 <setlocale@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #952]!	; 0x3b8

00010cf0 <strrchr@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cfc <nl_langinfo@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #936]!	; 0x3a8

00010d08 <bindtextdomain@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #928]!	; 0x3a0

00010d14 <strncmp@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #920]!	; 0x398

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #912]!	; 0x390

Disassembly of section .text:

00010d2c <.text>:
   10d2c:	mov	fp, #0
   10d30:	mov	lr, #0
   10d34:	pop	{r1}		; (ldr r1, [sp], #4)
   10d38:	mov	r2, sp
   10d3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10d40:	push	{r0}		; (str r0, [sp, #-4]!)
   10d44:	ldr	ip, [pc, #16]	; 10d5c <abort@plt+0x3c>
   10d48:	push	{ip}		; (str ip, [sp, #-4]!)
   10d4c:	ldr	r0, [pc, #12]	; 10d60 <abort@plt+0x40>
   10d50:	ldr	r3, [pc, #12]	; 10d64 <abort@plt+0x44>
   10d54:	bl	10c30 <__libc_start_main@plt>
   10d58:	bl	10d20 <abort@plt>
   10d5c:	andeq	r4, r1, r0, ror #12
   10d60:	andeq	r1, r1, r4, ror #2
   10d64:	andeq	r4, r1, r0, lsl #12
   10d68:	ldr	r3, [pc, #20]	; 10d84 <abort@plt+0x64>
   10d6c:	ldr	r2, [pc, #20]	; 10d88 <abort@plt+0x68>
   10d70:	add	r3, pc, r3
   10d74:	ldr	r2, [r3, r2]
   10d78:	cmp	r2, #0
   10d7c:	bxeq	lr
   10d80:	b	10c48 <__gmon_start__@plt>
   10d84:	andeq	r4, r1, r8, lsl #5
   10d88:	strheq	r0, [r0], -ip
   10d8c:	ldr	r3, [pc, #28]	; 10db0 <abort@plt+0x90>
   10d90:	ldr	r0, [pc, #28]	; 10db4 <abort@plt+0x94>
   10d94:	sub	r3, r3, r0
   10d98:	cmp	r3, #6
   10d9c:	bxls	lr
   10da0:	ldr	r3, [pc, #16]	; 10db8 <abort@plt+0x98>
   10da4:	cmp	r3, #0
   10da8:	bxeq	lr
   10dac:	bx	r3
   10db0:	andeq	r5, r2, r3, lsl r1
   10db4:	andeq	r5, r2, r0, lsl r1
   10db8:	andeq	r0, r0, r0
   10dbc:	ldr	r1, [pc, #36]	; 10de8 <abort@plt+0xc8>
   10dc0:	ldr	r0, [pc, #36]	; 10dec <abort@plt+0xcc>
   10dc4:	sub	r1, r1, r0
   10dc8:	asr	r1, r1, #2
   10dcc:	add	r1, r1, r1, lsr #31
   10dd0:	asrs	r1, r1, #1
   10dd4:	bxeq	lr
   10dd8:	ldr	r3, [pc, #16]	; 10df0 <abort@plt+0xd0>
   10ddc:	cmp	r3, #0
   10de0:	bxeq	lr
   10de4:	bx	r3
   10de8:	andeq	r5, r2, r0, lsl r1
   10dec:	andeq	r5, r2, r0, lsl r1
   10df0:	andeq	r0, r0, r0
   10df4:	push	{r4, lr}
   10df8:	ldr	r4, [pc, #24]	; 10e18 <abort@plt+0xf8>
   10dfc:	ldrb	r3, [r4]
   10e00:	cmp	r3, #0
   10e04:	popne	{r4, pc}
   10e08:	bl	10d8c <abort@plt+0x6c>
   10e0c:	mov	r3, #1
   10e10:	strb	r3, [r4]
   10e14:	pop	{r4, pc}
   10e18:	andeq	r5, r2, ip, lsr #2
   10e1c:	ldr	r0, [pc, #40]	; 10e4c <abort@plt+0x12c>
   10e20:	ldr	r3, [r0]
   10e24:	cmp	r3, #0
   10e28:	bne	10e30 <abort@plt+0x110>
   10e2c:	b	10dbc <abort@plt+0x9c>
   10e30:	ldr	r3, [pc, #24]	; 10e50 <abort@plt+0x130>
   10e34:	cmp	r3, #0
   10e38:	beq	10e2c <abort@plt+0x10c>
   10e3c:	push	{r4, lr}
   10e40:	blx	r3
   10e44:	pop	{r4, lr}
   10e48:	b	10dbc <abort@plt+0x9c>
   10e4c:	andeq	r4, r2, r4, lsl pc
   10e50:	andeq	r0, r0, r0
   10e54:	push	{lr}		; (str lr, [sp, #-4]!)
   10e58:	sub	sp, sp, #60	; 0x3c
   10e5c:	subs	r6, r0, #0
   10e60:	beq	10e9c <abort@plt+0x17c>
   10e64:	ldr	r3, [pc, #684]	; 11118 <abort@plt+0x3f8>
   10e68:	ldr	r4, [r3]
   10e6c:	mov	r2, #5
   10e70:	ldr	r1, [pc, #676]	; 1111c <abort@plt+0x3fc>
   10e74:	mov	r0, #0
   10e78:	bl	10ba0 <dcgettext@plt>
   10e7c:	ldr	r3, [pc, #668]	; 11120 <abort@plt+0x400>
   10e80:	ldr	r3, [r3]
   10e84:	mov	r2, r0
   10e88:	mov	r1, #1
   10e8c:	mov	r0, r4
   10e90:	bl	10cc0 <__fprintf_chk@plt>
   10e94:	mov	r0, r6
   10e98:	bl	10c6c <exit@plt>
   10e9c:	mov	r2, #5
   10ea0:	ldr	r1, [pc, #636]	; 11124 <abort@plt+0x404>
   10ea4:	mov	r0, #0
   10ea8:	bl	10ba0 <dcgettext@plt>
   10eac:	ldr	r3, [pc, #620]	; 11120 <abort@plt+0x400>
   10eb0:	ldr	r2, [r3]
   10eb4:	mov	r3, r2
   10eb8:	mov	r1, r0
   10ebc:	mov	r0, #1
   10ec0:	bl	10ca8 <__printf_chk@plt>
   10ec4:	mov	r2, #5
   10ec8:	ldr	r1, [pc, #600]	; 11128 <abort@plt+0x408>
   10ecc:	mov	r0, #0
   10ed0:	bl	10ba0 <dcgettext@plt>
   10ed4:	ldr	r4, [pc, #592]	; 1112c <abort@plt+0x40c>
   10ed8:	ldr	r1, [r4]
   10edc:	bl	10b28 <fputs_unlocked@plt>
   10ee0:	mov	r2, #5
   10ee4:	ldr	r1, [pc, #580]	; 11130 <abort@plt+0x410>
   10ee8:	mov	r0, #0
   10eec:	bl	10ba0 <dcgettext@plt>
   10ef0:	ldr	r1, [r4]
   10ef4:	bl	10b28 <fputs_unlocked@plt>
   10ef8:	mov	r2, #5
   10efc:	ldr	r1, [pc, #560]	; 11134 <abort@plt+0x414>
   10f00:	mov	r0, #0
   10f04:	bl	10ba0 <dcgettext@plt>
   10f08:	ldr	r1, [r4]
   10f0c:	bl	10b28 <fputs_unlocked@plt>
   10f10:	mov	ip, sp
   10f14:	ldr	lr, [pc, #540]	; 11138 <abort@plt+0x418>
   10f18:	ldm	lr!, {r0, r1, r2, r3}
   10f1c:	stmia	ip!, {r0, r1, r2, r3}
   10f20:	ldm	lr!, {r0, r1, r2, r3}
   10f24:	stmia	ip!, {r0, r1, r2, r3}
   10f28:	ldm	lr!, {r0, r1, r2, r3}
   10f2c:	stmia	ip!, {r0, r1, r2, r3}
   10f30:	ldm	lr, {r0, r1}
   10f34:	stm	ip, {r0, r1}
   10f38:	ldr	r1, [sp]
   10f3c:	cmp	r1, #0
   10f40:	moveq	r4, sp
   10f44:	beq	10f6c <abort@plt+0x24c>
   10f48:	mov	r4, sp
   10f4c:	ldr	r5, [pc, #488]	; 1113c <abort@plt+0x41c>
   10f50:	mov	r0, r5
   10f54:	bl	10b40 <strcmp@plt>
   10f58:	cmp	r0, #0
   10f5c:	beq	10f6c <abort@plt+0x24c>
   10f60:	ldr	r1, [r4, #8]!
   10f64:	cmp	r1, #0
   10f68:	bne	10f50 <abort@plt+0x230>
   10f6c:	ldr	r4, [r4, #4]
   10f70:	cmp	r4, #0
   10f74:	beq	11088 <abort@plt+0x368>
   10f78:	mov	r2, #5
   10f7c:	ldr	r1, [pc, #444]	; 11140 <abort@plt+0x420>
   10f80:	mov	r0, #0
   10f84:	bl	10ba0 <dcgettext@plt>
   10f88:	ldr	r3, [pc, #436]	; 11144 <abort@plt+0x424>
   10f8c:	ldr	r2, [pc, #436]	; 11148 <abort@plt+0x428>
   10f90:	mov	r1, r0
   10f94:	mov	r0, #1
   10f98:	bl	10ca8 <__printf_chk@plt>
   10f9c:	mov	r1, #0
   10fa0:	mov	r0, #5
   10fa4:	bl	10ce4 <setlocale@plt>
   10fa8:	cmp	r0, #0
   10fac:	beq	10fc4 <abort@plt+0x2a4>
   10fb0:	mov	r2, #3
   10fb4:	ldr	r1, [pc, #400]	; 1114c <abort@plt+0x42c>
   10fb8:	bl	10d14 <strncmp@plt>
   10fbc:	cmp	r0, #0
   10fc0:	bne	11024 <abort@plt+0x304>
   10fc4:	mov	r2, #5
   10fc8:	ldr	r1, [pc, #384]	; 11150 <abort@plt+0x430>
   10fcc:	mov	r0, #0
   10fd0:	bl	10ba0 <dcgettext@plt>
   10fd4:	ldr	r5, [pc, #352]	; 1113c <abort@plt+0x41c>
   10fd8:	mov	r3, r5
   10fdc:	ldr	r2, [pc, #352]	; 11144 <abort@plt+0x424>
   10fe0:	mov	r1, r0
   10fe4:	mov	r0, #1
   10fe8:	bl	10ca8 <__printf_chk@plt>
   10fec:	mov	r2, #5
   10ff0:	ldr	r1, [pc, #348]	; 11154 <abort@plt+0x434>
   10ff4:	mov	r0, #0
   10ff8:	bl	10ba0 <dcgettext@plt>
   10ffc:	mov	r1, r0
   11000:	ldr	r2, [pc, #336]	; 11158 <abort@plt+0x438>
   11004:	ldr	r3, [pc, #336]	; 1115c <abort@plt+0x43c>
   11008:	cmp	r4, r5
   1100c:	movne	r3, r2
   11010:	mov	r2, r4
   11014:	mov	r0, #1
   11018:	bl	10ca8 <__printf_chk@plt>
   1101c:	b	10e94 <abort@plt+0x174>
   11020:	ldr	r4, [pc, #276]	; 1113c <abort@plt+0x41c>
   11024:	mov	r2, #5
   11028:	ldr	r1, [pc, #304]	; 11160 <abort@plt+0x440>
   1102c:	mov	r0, #0
   11030:	bl	10ba0 <dcgettext@plt>
   11034:	ldr	r3, [pc, #240]	; 1112c <abort@plt+0x40c>
   11038:	ldr	r1, [r3]
   1103c:	bl	10b28 <fputs_unlocked@plt>
   11040:	b	10fc4 <abort@plt+0x2a4>
   11044:	mov	r2, #5
   11048:	ldr	r1, [pc, #256]	; 11150 <abort@plt+0x430>
   1104c:	mov	r0, #0
   11050:	bl	10ba0 <dcgettext@plt>
   11054:	ldr	r4, [pc, #224]	; 1113c <abort@plt+0x41c>
   11058:	mov	r3, r4
   1105c:	ldr	r2, [pc, #224]	; 11144 <abort@plt+0x424>
   11060:	mov	r1, r0
   11064:	mov	r0, #1
   11068:	bl	10ca8 <__printf_chk@plt>
   1106c:	mov	r2, #5
   11070:	ldr	r1, [pc, #220]	; 11154 <abort@plt+0x434>
   11074:	mov	r0, #0
   11078:	bl	10ba0 <dcgettext@plt>
   1107c:	mov	r1, r0
   11080:	ldr	r3, [pc, #212]	; 1115c <abort@plt+0x43c>
   11084:	b	11010 <abort@plt+0x2f0>
   11088:	mov	r2, #5
   1108c:	ldr	r1, [pc, #172]	; 11140 <abort@plt+0x420>
   11090:	mov	r0, #0
   11094:	bl	10ba0 <dcgettext@plt>
   11098:	ldr	r3, [pc, #164]	; 11144 <abort@plt+0x424>
   1109c:	ldr	r2, [pc, #164]	; 11148 <abort@plt+0x428>
   110a0:	mov	r1, r0
   110a4:	mov	r0, #1
   110a8:	bl	10ca8 <__printf_chk@plt>
   110ac:	mov	r1, #0
   110b0:	mov	r0, #5
   110b4:	bl	10ce4 <setlocale@plt>
   110b8:	cmp	r0, #0
   110bc:	beq	11044 <abort@plt+0x324>
   110c0:	mov	r2, #3
   110c4:	ldr	r1, [pc, #128]	; 1114c <abort@plt+0x42c>
   110c8:	bl	10d14 <strncmp@plt>
   110cc:	cmp	r0, #0
   110d0:	bne	11020 <abort@plt+0x300>
   110d4:	mov	r2, #5
   110d8:	ldr	r1, [pc, #112]	; 11150 <abort@plt+0x430>
   110dc:	mov	r0, #0
   110e0:	bl	10ba0 <dcgettext@plt>
   110e4:	ldr	r4, [pc, #80]	; 1113c <abort@plt+0x41c>
   110e8:	mov	r3, r4
   110ec:	ldr	r2, [pc, #80]	; 11144 <abort@plt+0x424>
   110f0:	mov	r1, r0
   110f4:	mov	r0, #1
   110f8:	bl	10ca8 <__printf_chk@plt>
   110fc:	mov	r2, #5
   11100:	ldr	r1, [pc, #76]	; 11154 <abort@plt+0x434>
   11104:	mov	r0, #0
   11108:	bl	10ba0 <dcgettext@plt>
   1110c:	mov	r1, r0
   11110:	ldr	r3, [pc, #68]	; 1115c <abort@plt+0x43c>
   11114:	b	11010 <abort@plt+0x2f0>
   11118:	andeq	r5, r2, r0, lsr #2
   1111c:	andeq	r4, r1, r8, asr #13
   11120:	andeq	r5, r2, r8, lsr r1
   11124:	strdeq	r4, [r1], -r0
   11128:	andeq	r4, r1, r4, lsl r7
   1112c:	andeq	r5, r2, r4, lsr #2
   11130:	andeq	r4, r1, r0, asr r7
   11134:	andeq	r4, r1, r0, lsl #15
   11138:	andeq	r4, r1, r8, lsl #13
   1113c:	andeq	r4, r1, r0, asr #13
   11140:			; <UNDEFINED> instruction: 0x000147b8
   11144:	ldrdeq	r4, [r1], -r0
   11148:	strdeq	r4, [r1], -r8
   1114c:	andeq	r4, r1, r8, lsl #16
   11150:	andeq	r4, r1, r4, asr r8
   11154:	andeq	r4, r1, r0, ror r8
   11158:	andeq	r4, r1, ip, asr #14
   1115c:	andeq	r4, r1, ip, lsl #18
   11160:	andeq	r4, r1, ip, lsl #16
   11164:	push	{r4, r5, r6, lr}
   11168:	sub	sp, sp, #24
   1116c:	mov	r5, r0
   11170:	mov	r4, r1
   11174:	ldr	r0, [r1]
   11178:	bl	115a4 <abort@plt+0x884>
   1117c:	ldr	r1, [pc, #332]	; 112d0 <abort@plt+0x5b0>
   11180:	mov	r0, #6
   11184:	bl	10ce4 <setlocale@plt>
   11188:	ldr	r6, [pc, #324]	; 112d4 <abort@plt+0x5b4>
   1118c:	ldr	r1, [pc, #324]	; 112d8 <abort@plt+0x5b8>
   11190:	mov	r0, r6
   11194:	bl	10d08 <bindtextdomain@plt>
   11198:	mov	r0, r6
   1119c:	bl	10bc4 <textdomain@plt>
   111a0:	ldr	r0, [pc, #308]	; 112dc <abort@plt+0x5bc>
   111a4:	bl	14664 <abort@plt+0x3944>
   111a8:	mov	r3, #0
   111ac:	str	r3, [sp, #16]
   111b0:	ldr	r3, [pc, #296]	; 112e0 <abort@plt+0x5c0>
   111b4:	str	r3, [sp, #12]
   111b8:	ldr	r3, [pc, #292]	; 112e4 <abort@plt+0x5c4>
   111bc:	str	r3, [sp, #8]
   111c0:	mov	r3, #1
   111c4:	str	r3, [sp, #4]
   111c8:	ldr	r3, [pc, #280]	; 112e8 <abort@plt+0x5c8>
   111cc:	ldr	r3, [r3]
   111d0:	str	r3, [sp]
   111d4:	ldr	r3, [pc, #272]	; 112ec <abort@plt+0x5cc>
   111d8:	ldr	r2, [pc, #272]	; 112f0 <abort@plt+0x5d0>
   111dc:	mov	r1, r4
   111e0:	mov	r0, r5
   111e4:	bl	114d4 <abort@plt+0x7b4>
   111e8:	ldr	r3, [pc, #260]	; 112f4 <abort@plt+0x5d4>
   111ec:	ldr	r3, [r3]
   111f0:	add	r2, r3, #1
   111f4:	cmp	r5, r2
   111f8:	blt	11220 <abort@plt+0x500>
   111fc:	cmp	r5, r2
   11200:	bgt	11248 <abort@plt+0x528>
   11204:	ldr	r0, [r4, r3, lsl #2]
   11208:	bl	10bac <unlink@plt>
   1120c:	cmp	r0, #0
   11210:	bne	1128c <abort@plt+0x56c>
   11214:	mov	r0, #0
   11218:	add	sp, sp, #24
   1121c:	pop	{r4, r5, r6, pc}
   11220:	mov	r2, #5
   11224:	ldr	r1, [pc, #204]	; 112f8 <abort@plt+0x5d8>
   11228:	mov	r0, #0
   1122c:	bl	10ba0 <dcgettext@plt>
   11230:	mov	r2, r0
   11234:	mov	r1, #0
   11238:	mov	r0, r1
   1123c:	bl	10c18 <error@plt>
   11240:	mov	r0, #1
   11244:	bl	10e54 <abort@plt+0x134>
   11248:	mov	r2, #5
   1124c:	ldr	r1, [pc, #168]	; 112fc <abort@plt+0x5dc>
   11250:	mov	r0, #0
   11254:	bl	10ba0 <dcgettext@plt>
   11258:	mov	r5, r0
   1125c:	ldr	r3, [pc, #144]	; 112f4 <abort@plt+0x5d4>
   11260:	ldr	r3, [r3]
   11264:	add	r3, r3, #1
   11268:	ldr	r0, [r4, r3, lsl #2]
   1126c:	bl	130f4 <abort@plt+0x23d4>
   11270:	mov	r3, r0
   11274:	mov	r2, r5
   11278:	mov	r1, #0
   1127c:	mov	r0, r1
   11280:	bl	10c18 <error@plt>
   11284:	mov	r0, #1
   11288:	bl	10e54 <abort@plt+0x134>
   1128c:	bl	10c84 <__errno_location@plt>
   11290:	ldr	r5, [r0]
   11294:	mov	r2, #5
   11298:	ldr	r1, [pc, #96]	; 11300 <abort@plt+0x5e0>
   1129c:	mov	r0, #0
   112a0:	bl	10ba0 <dcgettext@plt>
   112a4:	mov	r6, r0
   112a8:	ldr	r3, [pc, #68]	; 112f4 <abort@plt+0x5d4>
   112ac:	ldr	r3, [r3]
   112b0:	ldr	r1, [r4, r3, lsl #2]
   112b4:	mov	r0, #4
   112b8:	bl	12ec0 <abort@plt+0x21a0>
   112bc:	mov	r3, r0
   112c0:	mov	r2, r6
   112c4:	mov	r1, r5
   112c8:	mov	r0, #1
   112cc:	bl	10c18 <error@plt>
   112d0:	andeq	r4, r1, ip, asr #14
   112d4:	strdeq	r4, [r1], -ip
   112d8:	andeq	r4, r1, r4, lsr #17
   112dc:	andeq	r1, r1, r4, lsr #6
   112e0:			; <UNDEFINED> instruction: 0x000148bc
   112e4:	andeq	r0, r1, r4, asr lr
   112e8:	andeq	r5, r2, r8, asr #1
   112ec:	strdeq	r4, [r1], -r8
   112f0:	andeq	r4, r1, r0, asr #13
   112f4:	andeq	r5, r2, r8, lsl r1
   112f8:	andeq	r4, r1, ip, asr #17
   112fc:	ldrdeq	r4, [r1], -ip
   11300:	strdeq	r4, [r1], -r0
   11304:	ldr	r3, [pc, #4]	; 11310 <abort@plt+0x5f0>
   11308:	str	r0, [r3]
   1130c:	bx	lr
   11310:	andeq	r5, r2, r0, lsr r1
   11314:	ldr	r3, [pc, #4]	; 11320 <abort@plt+0x600>
   11318:	strb	r0, [r3, #4]
   1131c:	bx	lr
   11320:	andeq	r5, r2, r0, lsr r1
   11324:	push	{r4, r5, r6, lr}
   11328:	sub	sp, sp, #8
   1132c:	ldr	r3, [pc, #200]	; 113fc <abort@plt+0x6dc>
   11330:	ldr	r0, [r3]
   11334:	bl	13d40 <abort@plt+0x3020>
   11338:	cmp	r0, #0
   1133c:	beq	11360 <abort@plt+0x640>
   11340:	ldr	r3, [pc, #184]	; 11400 <abort@plt+0x6e0>
   11344:	ldrb	r3, [r3, #4]
   11348:	cmp	r3, #0
   1134c:	beq	1137c <abort@plt+0x65c>
   11350:	bl	10c84 <__errno_location@plt>
   11354:	ldr	r3, [r0]
   11358:	cmp	r3, #32
   1135c:	bne	1137c <abort@plt+0x65c>
   11360:	ldr	r3, [pc, #156]	; 11404 <abort@plt+0x6e4>
   11364:	ldr	r0, [r3]
   11368:	bl	13d40 <abort@plt+0x3020>
   1136c:	cmp	r0, #0
   11370:	bne	113f0 <abort@plt+0x6d0>
   11374:	add	sp, sp, #8
   11378:	pop	{r4, r5, r6, pc}
   1137c:	mov	r2, #5
   11380:	ldr	r1, [pc, #128]	; 11408 <abort@plt+0x6e8>
   11384:	mov	r0, #0
   11388:	bl	10ba0 <dcgettext@plt>
   1138c:	mov	r4, r0
   11390:	ldr	r3, [pc, #104]	; 11400 <abort@plt+0x6e0>
   11394:	ldr	r5, [r3]
   11398:	cmp	r5, #0
   1139c:	beq	113d4 <abort@plt+0x6b4>
   113a0:	bl	10c84 <__errno_location@plt>
   113a4:	ldr	r6, [r0]
   113a8:	mov	r0, r5
   113ac:	bl	12f6c <abort@plt+0x224c>
   113b0:	str	r4, [sp]
   113b4:	mov	r3, r0
   113b8:	ldr	r2, [pc, #76]	; 1140c <abort@plt+0x6ec>
   113bc:	mov	r1, r6
   113c0:	mov	r0, #0
   113c4:	bl	10c18 <error@plt>
   113c8:	ldr	r3, [pc, #64]	; 11410 <abort@plt+0x6f0>
   113cc:	ldr	r0, [r3]
   113d0:	bl	10b64 <_exit@plt>
   113d4:	bl	10c84 <__errno_location@plt>
   113d8:	mov	r3, r4
   113dc:	ldr	r2, [pc, #48]	; 11414 <abort@plt+0x6f4>
   113e0:	ldr	r1, [r0]
   113e4:	mov	r0, #0
   113e8:	bl	10c18 <error@plt>
   113ec:	b	113c8 <abort@plt+0x6a8>
   113f0:	ldr	r3, [pc, #24]	; 11410 <abort@plt+0x6f0>
   113f4:	ldr	r0, [r3]
   113f8:	bl	10b64 <_exit@plt>
   113fc:	andeq	r5, r2, r4, lsr #2
   11400:	andeq	r5, r2, r0, lsr r1
   11404:	andeq	r5, r2, r0, lsr #2
   11408:	andeq	r4, r1, r0, lsl #19
   1140c:	andeq	r4, r1, ip, lsl #19
   11410:	andeq	r5, r2, ip, asr #1
   11414:	muleq	r1, r0, r9
   11418:	push	{r4, r5, r6, lr}
   1141c:	sub	sp, sp, #16
   11420:	ldr	ip, [pc, #152]	; 114c0 <abort@plt+0x7a0>
   11424:	ldr	r4, [ip]
   11428:	mov	lr, #0
   1142c:	str	lr, [ip]
   11430:	cmp	r0, #2
   11434:	beq	11454 <abort@plt+0x734>
   11438:	ldr	r3, [pc, #128]	; 114c0 <abort@plt+0x7a0>
   1143c:	str	r4, [r3]
   11440:	mov	r2, #0
   11444:	ldr	r3, [pc, #120]	; 114c4 <abort@plt+0x7a4>
   11448:	str	r2, [r3]
   1144c:	add	sp, sp, #16
   11450:	pop	{r4, r5, r6, pc}
   11454:	mov	r6, r3
   11458:	mov	r5, r2
   1145c:	str	lr, [sp]
   11460:	ldr	r3, [pc, #96]	; 114c8 <abort@plt+0x7a8>
   11464:	ldr	r2, [pc, #96]	; 114cc <abort@plt+0x7ac>
   11468:	bl	10c54 <getopt_long@plt>
   1146c:	cmn	r0, #1
   11470:	beq	11438 <abort@plt+0x718>
   11474:	cmp	r0, #104	; 0x68
   11478:	beq	114b0 <abort@plt+0x790>
   1147c:	cmp	r0, #118	; 0x76
   11480:	bne	11438 <abort@plt+0x718>
   11484:	add	r3, sp, #40	; 0x28
   11488:	str	r3, [sp, #12]
   1148c:	ldr	r2, [pc, #60]	; 114d0 <abort@plt+0x7b0>
   11490:	ldr	r0, [r2]
   11494:	str	r3, [sp]
   11498:	ldr	r3, [sp, #32]
   1149c:	mov	r2, r6
   114a0:	mov	r1, r5
   114a4:	bl	13574 <abort@plt+0x2854>
   114a8:	mov	r0, #0
   114ac:	bl	10c6c <exit@plt>
   114b0:	mov	r0, #0
   114b4:	ldr	r3, [sp, #36]	; 0x24
   114b8:	blx	r3
   114bc:	b	11438 <abort@plt+0x718>
   114c0:	andeq	r5, r2, r8, lsr #2
   114c4:	andeq	r5, r2, r8, lsl r1
   114c8:	muleq	r1, r4, r9
   114cc:	andeq	r4, r1, r4, asr #19
   114d0:	andeq	r5, r2, r4, lsr #2
   114d4:	push	{r4, r5, r6, lr}
   114d8:	sub	sp, sp, #16
   114dc:	mov	r5, r2
   114e0:	mov	r6, r3
   114e4:	ldr	r3, [pc, #160]	; 1158c <abort@plt+0x86c>
   114e8:	ldr	r4, [r3]
   114ec:	mov	r2, #1
   114f0:	str	r2, [r3]
   114f4:	mov	r3, #0
   114f8:	str	r3, [sp]
   114fc:	ldr	r3, [pc, #140]	; 11590 <abort@plt+0x870>
   11500:	ldr	ip, [pc, #140]	; 11594 <abort@plt+0x874>
   11504:	ldr	r2, [pc, #140]	; 11598 <abort@plt+0x878>
   11508:	ldrb	lr, [sp, #36]	; 0x24
   1150c:	cmp	lr, #0
   11510:	moveq	r2, ip
   11514:	bl	10c54 <getopt_long@plt>
   11518:	cmn	r0, #1
   1151c:	beq	11550 <abort@plt+0x830>
   11520:	cmp	r0, #104	; 0x68
   11524:	beq	11544 <abort@plt+0x824>
   11528:	cmp	r0, #118	; 0x76
   1152c:	beq	11560 <abort@plt+0x840>
   11530:	ldr	r3, [pc, #100]	; 1159c <abort@plt+0x87c>
   11534:	ldr	r0, [r3]
   11538:	ldr	r3, [sp, #40]	; 0x28
   1153c:	blx	r3
   11540:	b	11550 <abort@plt+0x830>
   11544:	mov	r0, #0
   11548:	ldr	r3, [sp, #40]	; 0x28
   1154c:	blx	r3
   11550:	ldr	r3, [pc, #52]	; 1158c <abort@plt+0x86c>
   11554:	str	r4, [r3]
   11558:	add	sp, sp, #16
   1155c:	pop	{r4, r5, r6, pc}
   11560:	add	r3, sp, #44	; 0x2c
   11564:	str	r3, [sp, #12]
   11568:	ldr	r2, [pc, #48]	; 115a0 <abort@plt+0x880>
   1156c:	ldr	r0, [r2]
   11570:	str	r3, [sp]
   11574:	ldr	r3, [sp, #32]
   11578:	mov	r2, r6
   1157c:	mov	r1, r5
   11580:	bl	13574 <abort@plt+0x2854>
   11584:	mov	r0, #0
   11588:	bl	10c6c <exit@plt>
   1158c:	andeq	r5, r2, r8, lsr #2
   11590:	muleq	r1, r4, r9
   11594:	andeq	r4, r1, r4, asr #19
   11598:	andeq	r4, r1, ip, asr #14
   1159c:	andeq	r5, r2, ip, asr #1
   115a0:	andeq	r5, r2, r4, lsr #2
   115a4:	push	{r4, r5, r6, lr}
   115a8:	subs	r4, r0, #0
   115ac:	beq	11624 <abort@plt+0x904>
   115b0:	mov	r1, #47	; 0x2f
   115b4:	mov	r0, r4
   115b8:	bl	10cf0 <strrchr@plt>
   115bc:	cmp	r0, #0
   115c0:	addne	r5, r0, #1
   115c4:	moveq	r5, r4
   115c8:	sub	r3, r5, r4
   115cc:	cmp	r3, #6
   115d0:	ble	11610 <abort@plt+0x8f0>
   115d4:	mov	r2, #7
   115d8:	ldr	r1, [pc, #96]	; 11640 <abort@plt+0x920>
   115dc:	sub	r0, r5, #7
   115e0:	bl	10d14 <strncmp@plt>
   115e4:	cmp	r0, #0
   115e8:	bne	11610 <abort@plt+0x8f0>
   115ec:	mov	r2, #3
   115f0:	ldr	r1, [pc, #76]	; 11644 <abort@plt+0x924>
   115f4:	mov	r0, r5
   115f8:	bl	10d14 <strncmp@plt>
   115fc:	cmp	r0, #0
   11600:	addeq	r4, r5, #3
   11604:	ldreq	r3, [pc, #60]	; 11648 <abort@plt+0x928>
   11608:	streq	r4, [r3]
   1160c:	movne	r4, r5
   11610:	ldr	r3, [pc, #52]	; 1164c <abort@plt+0x92c>
   11614:	str	r4, [r3]
   11618:	ldr	r3, [pc, #48]	; 11650 <abort@plt+0x930>
   1161c:	str	r4, [r3]
   11620:	pop	{r4, r5, r6, pc}
   11624:	ldr	r3, [pc, #40]	; 11654 <abort@plt+0x934>
   11628:	ldr	r3, [r3]
   1162c:	mov	r2, #55	; 0x37
   11630:	mov	r1, #1
   11634:	ldr	r0, [pc, #28]	; 11658 <abort@plt+0x938>
   11638:	bl	10bdc <fwrite@plt>
   1163c:	bl	10d20 <abort@plt>
   11640:	andeq	r4, r1, r0, lsl sl
   11644:	andeq	r4, r1, r8, lsl sl
   11648:	andeq	r5, r2, r0, lsl r1
   1164c:	andeq	r5, r2, r8, lsr r1
   11650:	andeq	r5, r2, r4, lsl r1
   11654:	andeq	r5, r2, r0, lsr #2
   11658:	ldrdeq	r4, [r1], -r8
   1165c:	push	{r4, r5, r6, lr}
   11660:	mov	r5, r0
   11664:	mov	r4, r1
   11668:	mov	r2, #48	; 0x30
   1166c:	mov	r1, #0
   11670:	bl	10c9c <memset@plt>
   11674:	cmp	r4, #10
   11678:	beq	11688 <abort@plt+0x968>
   1167c:	str	r4, [r5]
   11680:	mov	r0, r5
   11684:	pop	{r4, r5, r6, pc}
   11688:	bl	10d20 <abort@plt>
   1168c:	push	{r4, r5, r6, lr}
   11690:	mov	r4, r0
   11694:	mov	r5, r1
   11698:	mov	r2, #5
   1169c:	mov	r1, r0
   116a0:	mov	r0, #0
   116a4:	bl	10ba0 <dcgettext@plt>
   116a8:	cmp	r4, r0
   116ac:	popne	{r4, r5, r6, pc}
   116b0:	bl	13fc4 <abort@plt+0x32a4>
   116b4:	ldrb	r3, [r0]
   116b8:	bic	r3, r3, #32
   116bc:	cmp	r3, #85	; 0x55
   116c0:	beq	1173c <abort@plt+0xa1c>
   116c4:	cmp	r3, #71	; 0x47
   116c8:	bne	11798 <abort@plt+0xa78>
   116cc:	ldrb	r3, [r0, #1]
   116d0:	bic	r3, r3, #32
   116d4:	cmp	r3, #66	; 0x42
   116d8:	bne	11798 <abort@plt+0xa78>
   116dc:	ldrb	r3, [r0, #2]
   116e0:	cmp	r3, #49	; 0x31
   116e4:	bne	11798 <abort@plt+0xa78>
   116e8:	ldrb	r3, [r0, #3]
   116ec:	cmp	r3, #56	; 0x38
   116f0:	bne	11798 <abort@plt+0xa78>
   116f4:	ldrb	r3, [r0, #4]
   116f8:	cmp	r3, #48	; 0x30
   116fc:	bne	11798 <abort@plt+0xa78>
   11700:	ldrb	r3, [r0, #5]
   11704:	cmp	r3, #51	; 0x33
   11708:	bne	11798 <abort@plt+0xa78>
   1170c:	ldrb	r3, [r0, #6]
   11710:	cmp	r3, #48	; 0x30
   11714:	bne	11798 <abort@plt+0xa78>
   11718:	ldrb	r3, [r0, #7]
   1171c:	cmp	r3, #0
   11720:	bne	11798 <abort@plt+0xa78>
   11724:	ldrb	r2, [r4]
   11728:	ldr	r3, [pc, #124]	; 117ac <abort@plt+0xa8c>
   1172c:	ldr	r0, [pc, #124]	; 117b0 <abort@plt+0xa90>
   11730:	cmp	r2, #96	; 0x60
   11734:	movne	r0, r3
   11738:	pop	{r4, r5, r6, pc}
   1173c:	ldrb	r3, [r0, #1]
   11740:	bic	r3, r3, #32
   11744:	cmp	r3, #84	; 0x54
   11748:	bne	11798 <abort@plt+0xa78>
   1174c:	ldrb	r3, [r0, #2]
   11750:	bic	r3, r3, #32
   11754:	cmp	r3, #70	; 0x46
   11758:	bne	11798 <abort@plt+0xa78>
   1175c:	ldrb	r3, [r0, #3]
   11760:	cmp	r3, #45	; 0x2d
   11764:	bne	11798 <abort@plt+0xa78>
   11768:	ldrb	r3, [r0, #4]
   1176c:	cmp	r3, #56	; 0x38
   11770:	bne	11798 <abort@plt+0xa78>
   11774:	ldrb	r3, [r0, #5]
   11778:	cmp	r3, #0
   1177c:	bne	11798 <abort@plt+0xa78>
   11780:	ldrb	r2, [r4]
   11784:	ldr	r3, [pc, #40]	; 117b4 <abort@plt+0xa94>
   11788:	ldr	r0, [pc, #40]	; 117b8 <abort@plt+0xa98>
   1178c:	cmp	r2, #96	; 0x60
   11790:	movne	r0, r3
   11794:	pop	{r4, r5, r6, pc}
   11798:	ldr	r3, [pc, #28]	; 117bc <abort@plt+0xa9c>
   1179c:	ldr	r0, [pc, #28]	; 117c0 <abort@plt+0xaa0>
   117a0:	cmp	r5, #9
   117a4:	movne	r0, r3
   117a8:	pop	{r4, r5, r6, pc}
   117ac:	andeq	r4, r1, r4, ror sl
   117b0:	andeq	r4, r1, r0, lsl #21
   117b4:	andeq	r4, r1, r0, ror sl
   117b8:	andeq	r4, r1, r4, lsl #21
   117bc:	andeq	r4, r1, r8, ror sl
   117c0:	andeq	r4, r1, ip, ror sl
   117c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117c8:	sub	sp, sp, #116	; 0x74
   117cc:	str	r0, [sp, #36]	; 0x24
   117d0:	mov	sl, r1
   117d4:	str	r2, [sp, #52]	; 0x34
   117d8:	str	r3, [sp, #28]
   117dc:	ldr	r8, [sp, #152]	; 0x98
   117e0:	bl	10bf4 <__ctype_get_mb_cur_max@plt>
   117e4:	str	r0, [sp, #84]	; 0x54
   117e8:	ldr	r3, [sp, #156]	; 0x9c
   117ec:	lsr	r3, r3, #1
   117f0:	and	r3, r3, #1
   117f4:	str	r3, [sp, #32]
   117f8:	mov	r3, #1
   117fc:	str	r3, [sp, #40]	; 0x28
   11800:	mov	r3, #0
   11804:	str	r3, [sp, #80]	; 0x50
   11808:	str	r3, [sp, #44]	; 0x2c
   1180c:	str	r3, [sp, #48]	; 0x30
   11810:	str	r3, [sp, #60]	; 0x3c
   11814:	str	r3, [sp, #72]	; 0x48
   11818:	str	r3, [sp, #76]	; 0x4c
   1181c:	mov	r7, sl
   11820:	mov	sl, r8
   11824:	cmp	sl, #10
   11828:	ldrls	pc, [pc, sl, lsl #2]
   1182c:	b	119e4 <abort@plt+0xcc4>
   11830:	muleq	r1, r4, r8
   11834:	andeq	r1, r1, r4, ror #16
   11838:	andeq	r1, r1, r0, asr #19
   1183c:	andeq	r1, r1, ip, asr r8
   11840:	andeq	r1, r1, r4, ror r9
   11844:	andeq	r1, r1, r4, lsr #17
   11848:	andeq	r2, r1, r0, lsl r9
   1184c:	andeq	r1, r1, r8, ror #19
   11850:	andeq	r1, r1, r0, ror #17
   11854:	andeq	r1, r1, r0, ror #17
   11858:	andeq	r1, r1, r0, ror #17
   1185c:	mov	r3, #1
   11860:	str	r3, [sp, #48]	; 0x30
   11864:	mov	r3, #1
   11868:	str	r3, [sp, #32]
   1186c:	str	r3, [sp, #60]	; 0x3c
   11870:	ldr	r3, [pc, #4068]	; 1285c <abort@plt+0x1b3c>
   11874:	str	r3, [sp, #72]	; 0x48
   11878:	mov	fp, #0
   1187c:	mov	sl, #2
   11880:	mov	r6, #0
   11884:	ldr	r3, [sp, #48]	; 0x30
   11888:	eor	r3, r3, #1
   1188c:	str	r3, [sp, #68]	; 0x44
   11890:	b	12178 <abort@plt+0x1458>
   11894:	mov	r3, #0
   11898:	str	r3, [sp, #32]
   1189c:	mov	fp, r3
   118a0:	b	11880 <abort@plt+0xb60>
   118a4:	ldr	r3, [sp, #32]
   118a8:	cmp	r3, #0
   118ac:	bne	11a00 <abort@plt+0xce0>
   118b0:	cmp	r7, #0
   118b4:	beq	11a20 <abort@plt+0xd00>
   118b8:	ldr	r3, [sp, #36]	; 0x24
   118bc:	mov	r2, #34	; 0x22
   118c0:	strb	r2, [r3]
   118c4:	mov	r3, #1
   118c8:	str	r3, [sp, #48]	; 0x30
   118cc:	str	r3, [sp, #60]	; 0x3c
   118d0:	ldr	r3, [pc, #3980]	; 12864 <abort@plt+0x1b44>
   118d4:	str	r3, [sp, #72]	; 0x48
   118d8:	mov	fp, #1
   118dc:	b	11880 <abort@plt+0xb60>
   118e0:	cmp	sl, #10
   118e4:	beq	11908 <abort@plt+0xbe8>
   118e8:	mov	r1, sl
   118ec:	ldr	r0, [pc, #3948]	; 12860 <abort@plt+0x1b40>
   118f0:	bl	1168c <abort@plt+0x96c>
   118f4:	str	r0, [sp, #164]	; 0xa4
   118f8:	mov	r1, sl
   118fc:	ldr	r0, [pc, #3928]	; 1285c <abort@plt+0x1b3c>
   11900:	bl	1168c <abort@plt+0x96c>
   11904:	str	r0, [sp, #168]	; 0xa8
   11908:	ldr	r3, [sp, #32]
   1190c:	cmp	r3, #0
   11910:	movne	fp, #0
   11914:	bne	1194c <abort@plt+0xc2c>
   11918:	ldr	r3, [sp, #164]	; 0xa4
   1191c:	ldrb	r3, [r3]
   11920:	cmp	r3, #0
   11924:	beq	1196c <abort@plt+0xc4c>
   11928:	ldr	r2, [sp, #164]	; 0xa4
   1192c:	mov	fp, #0
   11930:	ldr	r1, [sp, #36]	; 0x24
   11934:	cmp	r7, fp
   11938:	strbhi	r3, [r1, fp]
   1193c:	add	fp, fp, #1
   11940:	ldrb	r3, [r2, #1]!
   11944:	cmp	r3, #0
   11948:	bne	11934 <abort@plt+0xc14>
   1194c:	ldr	r0, [sp, #168]	; 0xa8
   11950:	bl	10c78 <strlen@plt>
   11954:	str	r0, [sp, #60]	; 0x3c
   11958:	ldr	r3, [sp, #168]	; 0xa8
   1195c:	str	r3, [sp, #72]	; 0x48
   11960:	mov	r3, #1
   11964:	str	r3, [sp, #48]	; 0x30
   11968:	b	11880 <abort@plt+0xb60>
   1196c:	mov	fp, #0
   11970:	b	1194c <abort@plt+0xc2c>
   11974:	ldr	r3, [sp, #32]
   11978:	cmp	r3, #0
   1197c:	bne	11a3c <abort@plt+0xd1c>
   11980:	mov	r3, #1
   11984:	str	r3, [sp, #48]	; 0x30
   11988:	cmp	r7, #0
   1198c:	beq	11a58 <abort@plt+0xd38>
   11990:	ldr	r3, [sp, #36]	; 0x24
   11994:	mov	r2, #39	; 0x27
   11998:	strb	r2, [r3]
   1199c:	mov	r3, #0
   119a0:	str	r3, [sp, #32]
   119a4:	mov	r3, #1
   119a8:	str	r3, [sp, #60]	; 0x3c
   119ac:	ldr	r3, [pc, #3752]	; 1285c <abort@plt+0x1b3c>
   119b0:	str	r3, [sp, #72]	; 0x48
   119b4:	mov	fp, #1
   119b8:	mov	sl, #2
   119bc:	b	11880 <abort@plt+0xb60>
   119c0:	ldr	r3, [sp, #32]
   119c4:	cmp	r3, #0
   119c8:	beq	11988 <abort@plt+0xc68>
   119cc:	mov	r3, #1
   119d0:	str	r3, [sp, #60]	; 0x3c
   119d4:	ldr	r3, [pc, #3712]	; 1285c <abort@plt+0x1b3c>
   119d8:	str	r3, [sp, #72]	; 0x48
   119dc:	mov	fp, #0
   119e0:	b	11880 <abort@plt+0xb60>
   119e4:	bl	10d20 <abort@plt>
   119e8:	mov	r3, #0
   119ec:	str	r3, [sp, #32]
   119f0:	mov	r3, #1
   119f4:	str	r3, [sp, #48]	; 0x30
   119f8:	mov	fp, #0
   119fc:	b	11880 <abort@plt+0xb60>
   11a00:	ldr	r3, [sp, #32]
   11a04:	str	r3, [sp, #48]	; 0x30
   11a08:	mov	r3, #1
   11a0c:	str	r3, [sp, #60]	; 0x3c
   11a10:	ldr	r3, [pc, #3660]	; 12864 <abort@plt+0x1b44>
   11a14:	str	r3, [sp, #72]	; 0x48
   11a18:	mov	fp, #0
   11a1c:	b	11880 <abort@plt+0xb60>
   11a20:	mov	r3, #1
   11a24:	str	r3, [sp, #48]	; 0x30
   11a28:	str	r3, [sp, #60]	; 0x3c
   11a2c:	ldr	r3, [pc, #3632]	; 12864 <abort@plt+0x1b44>
   11a30:	str	r3, [sp, #72]	; 0x48
   11a34:	mov	fp, #1
   11a38:	b	11880 <abort@plt+0xb60>
   11a3c:	mov	r3, #1
   11a40:	str	r3, [sp, #60]	; 0x3c
   11a44:	ldr	r3, [pc, #3600]	; 1285c <abort@plt+0x1b3c>
   11a48:	str	r3, [sp, #72]	; 0x48
   11a4c:	mov	fp, #0
   11a50:	mov	sl, #2
   11a54:	b	11880 <abort@plt+0xb60>
   11a58:	mov	r3, #0
   11a5c:	str	r3, [sp, #32]
   11a60:	mov	r3, #1
   11a64:	str	r3, [sp, #60]	; 0x3c
   11a68:	ldr	r3, [pc, #3564]	; 1285c <abort@plt+0x1b3c>
   11a6c:	str	r3, [sp, #72]	; 0x48
   11a70:	mov	fp, #1
   11a74:	mov	sl, #2
   11a78:	b	11880 <abort@plt+0xb60>
   11a7c:	mov	r3, #0
   11a80:	str	r3, [sp, #56]	; 0x38
   11a84:	ldr	r3, [sp, #52]	; 0x34
   11a88:	add	r2, r3, r6
   11a8c:	str	r2, [sp, #64]	; 0x40
   11a90:	ldrb	r4, [r3, r6]
   11a94:	cmp	r4, #126	; 0x7e
   11a98:	ldrls	pc, [pc, r4, lsl #2]
   11a9c:	b	122d8 <abort@plt+0x15b8>
   11aa0:			; <UNDEFINED> instruction: 0x00011cb8
   11aa4:	ldrdeq	r2, [r1], -r8
   11aa8:	ldrdeq	r2, [r1], -r8
   11aac:	ldrdeq	r2, [r1], -r8
   11ab0:	ldrdeq	r2, [r1], -r8
   11ab4:	ldrdeq	r2, [r1], -r8
   11ab8:	ldrdeq	r2, [r1], -r8
   11abc:	andeq	r2, r1, r4, lsl r0
   11ac0:			; <UNDEFINED> instruction: 0x00011cb0
   11ac4:	andeq	r1, r1, ip, asr #31
   11ac8:	andeq	r1, r1, r4, asr #31
   11acc:	andeq	r1, r1, r4, lsr pc
   11ad0:	andeq	r1, r1, ip, lsr #30
   11ad4:	andeq	r1, r1, r8, lsr #25
   11ad8:	ldrdeq	r2, [r1], -r8
   11adc:	ldrdeq	r2, [r1], -r8
   11ae0:	ldrdeq	r2, [r1], -r8
   11ae4:	ldrdeq	r2, [r1], -r8
   11ae8:	ldrdeq	r2, [r1], -r8
   11aec:	ldrdeq	r2, [r1], -r8
   11af0:	ldrdeq	r2, [r1], -r8
   11af4:	ldrdeq	r2, [r1], -r8
   11af8:	ldrdeq	r2, [r1], -r8
   11afc:	ldrdeq	r2, [r1], -r8
   11b00:	ldrdeq	r2, [r1], -r8
   11b04:	ldrdeq	r2, [r1], -r8
   11b08:	ldrdeq	r2, [r1], -r8
   11b0c:	ldrdeq	r2, [r1], -r8
   11b10:	ldrdeq	r2, [r1], -r8
   11b14:	ldrdeq	r2, [r1], -r8
   11b18:	ldrdeq	r2, [r1], -r8
   11b1c:	ldrdeq	r2, [r1], -r8
   11b20:	andeq	r2, r1, r8, rrx
   11b24:	andeq	r2, r1, r4, rrx
   11b28:	andeq	r2, r1, r4, rrx
   11b2c:	andeq	r2, r1, ip, lsr r0
   11b30:	andeq	r2, r1, r4, rrx
   11b34:	andeq	r2, r1, ip, lsr #13
   11b38:	andeq	r2, r1, r4, rrx
   11b3c:	andeq	r2, r1, ip, lsr r2
   11b40:	andeq	r2, r1, r4, rrx
   11b44:	andeq	r2, r1, r4, rrx
   11b48:	andeq	r2, r1, r4, rrx
   11b4c:	andeq	r2, r1, ip, lsr #13
   11b50:	andeq	r2, r1, ip, lsr #13
   11b54:	andeq	r2, r1, ip, lsr #13
   11b58:	andeq	r2, r1, ip, lsr #13
   11b5c:	andeq	r2, r1, ip, lsr #13
   11b60:	andeq	r2, r1, ip, lsr #13
   11b64:	andeq	r2, r1, ip, lsr #13
   11b68:	andeq	r2, r1, ip, lsr #13
   11b6c:	andeq	r2, r1, ip, lsr #13
   11b70:	andeq	r2, r1, ip, lsr #13
   11b74:	andeq	r2, r1, ip, lsr #13
   11b78:	andeq	r2, r1, ip, lsr #13
   11b7c:	andeq	r2, r1, ip, lsr #13
   11b80:	andeq	r2, r1, ip, lsr #13
   11b84:	andeq	r2, r1, ip, lsr #13
   11b88:	andeq	r2, r1, ip, lsr #13
   11b8c:	andeq	r2, r1, r4, rrx
   11b90:	andeq	r2, r1, r4, rrx
   11b94:	andeq	r2, r1, r4, rrx
   11b98:	andeq	r2, r1, r4, rrx
   11b9c:	andeq	r1, r1, r0, asr #27
   11ba0:	ldrdeq	r2, [r1], -r8
   11ba4:	andeq	r2, r1, ip, lsr #13
   11ba8:	andeq	r2, r1, ip, lsr #13
   11bac:	andeq	r2, r1, ip, lsr #13
   11bb0:	andeq	r2, r1, ip, lsr #13
   11bb4:	andeq	r2, r1, ip, lsr #13
   11bb8:	andeq	r2, r1, ip, lsr #13
   11bbc:	andeq	r2, r1, ip, lsr #13
   11bc0:	andeq	r2, r1, ip, lsr #13
   11bc4:	andeq	r2, r1, ip, lsr #13
   11bc8:	andeq	r2, r1, ip, lsr #13
   11bcc:	andeq	r2, r1, ip, lsr #13
   11bd0:	andeq	r2, r1, ip, lsr #13
   11bd4:	andeq	r2, r1, ip, lsr #13
   11bd8:	andeq	r2, r1, ip, lsr #13
   11bdc:	andeq	r2, r1, ip, lsr #13
   11be0:	andeq	r2, r1, ip, lsr #13
   11be4:	andeq	r2, r1, ip, lsr #13
   11be8:	andeq	r2, r1, ip, lsr #13
   11bec:	andeq	r2, r1, ip, lsr #13
   11bf0:	andeq	r2, r1, ip, lsr #13
   11bf4:	andeq	r2, r1, ip, lsr #13
   11bf8:	andeq	r2, r1, ip, lsr #13
   11bfc:	andeq	r2, r1, ip, lsr #13
   11c00:	andeq	r2, r1, ip, lsr #13
   11c04:	andeq	r2, r1, ip, lsr #13
   11c08:	andeq	r2, r1, ip, lsr #13
   11c0c:	andeq	r2, r1, r4, rrx
   11c10:	andeq	r1, r1, ip, lsr pc
   11c14:	andeq	r2, r1, ip, lsr #13
   11c18:	andeq	r2, r1, r4, rrx
   11c1c:	andeq	r2, r1, ip, lsr #13
   11c20:	andeq	r2, r1, r4, rrx
   11c24:	andeq	r2, r1, ip, lsr #13
   11c28:	andeq	r2, r1, ip, lsr #13
   11c2c:	andeq	r2, r1, ip, lsr #13
   11c30:	andeq	r2, r1, ip, lsr #13
   11c34:	andeq	r2, r1, ip, lsr #13
   11c38:	andeq	r2, r1, ip, lsr #13
   11c3c:	andeq	r2, r1, ip, lsr #13
   11c40:	andeq	r2, r1, ip, lsr #13
   11c44:	andeq	r2, r1, ip, lsr #13
   11c48:	andeq	r2, r1, ip, lsr #13
   11c4c:	andeq	r2, r1, ip, lsr #13
   11c50:	andeq	r2, r1, ip, lsr #13
   11c54:	andeq	r2, r1, ip, lsr #13
   11c58:	andeq	r2, r1, ip, lsr #13
   11c5c:	andeq	r2, r1, ip, lsr #13
   11c60:	andeq	r2, r1, ip, lsr #13
   11c64:	andeq	r2, r1, ip, lsr #13
   11c68:	andeq	r2, r1, ip, lsr #13
   11c6c:	andeq	r2, r1, ip, lsr #13
   11c70:	andeq	r2, r1, ip, lsr #13
   11c74:	andeq	r2, r1, ip, lsr #13
   11c78:	andeq	r2, r1, ip, lsr #13
   11c7c:	andeq	r2, r1, ip, lsr #13
   11c80:	andeq	r2, r1, ip, lsr #13
   11c84:	andeq	r2, r1, ip, lsr #13
   11c88:	andeq	r2, r1, ip, lsr #13
   11c8c:	andeq	r2, r1, ip, lsl r0
   11c90:	andeq	r2, r1, r4, rrx
   11c94:	andeq	r2, r1, ip, lsl r0
   11c98:	andeq	r2, r1, ip, lsr r0
   11c9c:	mov	r3, #0
   11ca0:	str	r3, [sp, #56]	; 0x38
   11ca4:	b	11a84 <abort@plt+0xd64>
   11ca8:	mov	r3, #114	; 0x72
   11cac:	b	11fd0 <abort@plt+0x12b0>
   11cb0:	mov	r3, #98	; 0x62
   11cb4:	b	11fe8 <abort@plt+0x12c8>
   11cb8:	ldr	r3, [sp, #48]	; 0x30
   11cbc:	cmp	r3, #0
   11cc0:	beq	11da8 <abort@plt+0x1088>
   11cc4:	ldr	r3, [sp, #32]
   11cc8:	cmp	r3, #0
   11ccc:	bne	12830 <abort@plt+0x1b10>
   11cd0:	ldr	r3, [sp, #44]	; 0x2c
   11cd4:	eor	r3, r3, #1
   11cd8:	cmp	sl, #2
   11cdc:	movne	r3, #0
   11ce0:	andeq	r3, r3, #1
   11ce4:	cmp	r3, #0
   11ce8:	moveq	r2, fp
   11cec:	beq	11d30 <abort@plt+0x1010>
   11cf0:	cmp	r7, fp
   11cf4:	ldrhi	r2, [sp, #36]	; 0x24
   11cf8:	movhi	r1, #39	; 0x27
   11cfc:	strbhi	r1, [r2, fp]
   11d00:	add	r2, fp, #1
   11d04:	cmp	r7, r2
   11d08:	ldrhi	r1, [sp, #36]	; 0x24
   11d0c:	movhi	r0, #36	; 0x24
   11d10:	strbhi	r0, [r1, r2]
   11d14:	add	r2, fp, #2
   11d18:	cmp	r7, r2
   11d1c:	ldrhi	r1, [sp, #36]	; 0x24
   11d20:	movhi	r0, #39	; 0x27
   11d24:	strbhi	r0, [r1, r2]
   11d28:	add	r2, fp, #3
   11d2c:	str	r3, [sp, #44]	; 0x2c
   11d30:	cmp	r7, r2
   11d34:	ldrhi	r3, [sp, #36]	; 0x24
   11d38:	movhi	r1, #92	; 0x5c
   11d3c:	strbhi	r1, [r3, r2]
   11d40:	add	fp, r2, #1
   11d44:	cmp	r5, #0
   11d48:	beq	126b4 <abort@plt+0x1994>
   11d4c:	add	r3, r6, #1
   11d50:	ldr	r1, [sp, #28]
   11d54:	cmp	r1, r3
   11d58:	bls	126c4 <abort@plt+0x19a4>
   11d5c:	ldr	r1, [sp, #52]	; 0x34
   11d60:	ldrb	r3, [r1, r3]
   11d64:	sub	r3, r3, #48	; 0x30
   11d68:	uxtb	r3, r3
   11d6c:	cmp	r3, #9
   11d70:	bhi	126d0 <abort@plt+0x19b0>
   11d74:	cmp	r7, fp
   11d78:	movhi	r3, #48	; 0x30
   11d7c:	ldrhi	r1, [sp, #36]	; 0x24
   11d80:	strbhi	r3, [r1, fp]
   11d84:	add	r3, r2, #2
   11d88:	cmp	r7, r3
   11d8c:	movhi	r1, #48	; 0x30
   11d90:	ldrhi	r0, [sp, #36]	; 0x24
   11d94:	strbhi	r1, [r0, r3]
   11d98:	add	fp, r2, #3
   11d9c:	ldr	r8, [sp, #32]
   11da0:	mov	r4, #48	; 0x30
   11da4:	b	12080 <abort@plt+0x1360>
   11da8:	ldr	r3, [sp, #156]	; 0x9c
   11dac:	tst	r3, #1
   11db0:	bne	12174 <abort@plt+0x1454>
   11db4:	ldr	r5, [sp, #48]	; 0x30
   11db8:	mov	r8, r5
   11dbc:	b	12080 <abort@plt+0x1360>
   11dc0:	cmp	sl, #2
   11dc4:	beq	11ddc <abort@plt+0x10bc>
   11dc8:	cmp	sl, #5
   11dcc:	beq	11df4 <abort@plt+0x10d4>
   11dd0:	mov	r8, #0
   11dd4:	mov	r5, r8
   11dd8:	b	12080 <abort@plt+0x1360>
   11ddc:	ldr	r3, [sp, #32]
   11de0:	cmp	r3, #0
   11de4:	bne	12844 <abort@plt+0x1b24>
   11de8:	mov	r8, r3
   11dec:	mov	r5, r3
   11df0:	b	12080 <abort@plt+0x1360>
   11df4:	ldr	r3, [sp, #156]	; 0x9c
   11df8:	tst	r3, #4
   11dfc:	beq	126dc <abort@plt+0x19bc>
   11e00:	add	r3, r6, #2
   11e04:	ldr	r2, [sp, #28]
   11e08:	cmp	r2, r3
   11e0c:	bls	126e8 <abort@plt+0x19c8>
   11e10:	ldr	r2, [sp, #52]	; 0x34
   11e14:	add	r2, r2, r6
   11e18:	ldrb	r2, [r2, #1]
   11e1c:	cmp	r2, #63	; 0x3f
   11e20:	movne	r8, #0
   11e24:	movne	r5, r8
   11e28:	bne	12080 <abort@plt+0x1360>
   11e2c:	ldr	r2, [sp, #52]	; 0x34
   11e30:	ldrb	r2, [r2, r3]
   11e34:	sub	r1, r2, #33	; 0x21
   11e38:	cmp	r1, #29
   11e3c:	ldrls	pc, [pc, r1, lsl #2]
   11e40:	b	126f4 <abort@plt+0x19d4>
   11e44:			; <UNDEFINED> instruction: 0x00011ebc
   11e48:	strdeq	r2, [r1], -r4
   11e4c:	strdeq	r2, [r1], -r4
   11e50:	strdeq	r2, [r1], -r4
   11e54:	strdeq	r2, [r1], -r4
   11e58:	strdeq	r2, [r1], -r4
   11e5c:			; <UNDEFINED> instruction: 0x00011ebc
   11e60:			; <UNDEFINED> instruction: 0x00011ebc
   11e64:			; <UNDEFINED> instruction: 0x00011ebc
   11e68:	strdeq	r2, [r1], -r4
   11e6c:	strdeq	r2, [r1], -r4
   11e70:	strdeq	r2, [r1], -r4
   11e74:			; <UNDEFINED> instruction: 0x00011ebc
   11e78:	strdeq	r2, [r1], -r4
   11e7c:			; <UNDEFINED> instruction: 0x00011ebc
   11e80:	strdeq	r2, [r1], -r4
   11e84:	strdeq	r2, [r1], -r4
   11e88:	strdeq	r2, [r1], -r4
   11e8c:	strdeq	r2, [r1], -r4
   11e90:	strdeq	r2, [r1], -r4
   11e94:	strdeq	r2, [r1], -r4
   11e98:	strdeq	r2, [r1], -r4
   11e9c:	strdeq	r2, [r1], -r4
   11ea0:	strdeq	r2, [r1], -r4
   11ea4:	strdeq	r2, [r1], -r4
   11ea8:	strdeq	r2, [r1], -r4
   11eac:	strdeq	r2, [r1], -r4
   11eb0:			; <UNDEFINED> instruction: 0x00011ebc
   11eb4:			; <UNDEFINED> instruction: 0x00011ebc
   11eb8:			; <UNDEFINED> instruction: 0x00011ebc
   11ebc:	ldr	r1, [sp, #32]
   11ec0:	cmp	r1, #0
   11ec4:	bne	12904 <abort@plt+0x1be4>
   11ec8:	cmp	r7, fp
   11ecc:	movhi	r1, #63	; 0x3f
   11ed0:	ldrhi	r0, [sp, #36]	; 0x24
   11ed4:	strbhi	r1, [r0, fp]
   11ed8:	add	r1, fp, #1
   11edc:	cmp	r7, r1
   11ee0:	ldrhi	r0, [sp, #36]	; 0x24
   11ee4:	movhi	ip, #34	; 0x22
   11ee8:	strbhi	ip, [r0, r1]
   11eec:	add	r1, fp, #2
   11ef0:	cmp	r7, r1
   11ef4:	ldrhi	r0, [sp, #36]	; 0x24
   11ef8:	movhi	ip, #34	; 0x22
   11efc:	strbhi	ip, [r0, r1]
   11f00:	add	r1, fp, #3
   11f04:	cmp	r7, r1
   11f08:	movhi	r0, #63	; 0x3f
   11f0c:	ldrhi	ip, [sp, #36]	; 0x24
   11f10:	strbhi	r0, [ip, r1]
   11f14:	add	fp, fp, #4
   11f18:	ldr	r5, [sp, #32]
   11f1c:	mov	r8, r5
   11f20:	mov	r4, r2
   11f24:	mov	r6, r3
   11f28:	b	12080 <abort@plt+0x1360>
   11f2c:	mov	r3, #102	; 0x66
   11f30:	b	11fe8 <abort@plt+0x12c8>
   11f34:	mov	r3, #118	; 0x76
   11f38:	b	11fe8 <abort@plt+0x12c8>
   11f3c:	cmp	sl, #2
   11f40:	beq	11fac <abort@plt+0x128c>
   11f44:	ldr	r3, [sp, #48]	; 0x30
   11f48:	ldr	r2, [sp, #32]
   11f4c:	and	r3, r3, r2
   11f50:	tst	r9, r3
   11f54:	moveq	r3, r4
   11f58:	beq	11fe8 <abort@plt+0x12c8>
   11f5c:	mov	r8, #0
   11f60:	mov	r5, r8
   11f64:	eor	r5, r5, #1
   11f68:	ldr	r3, [sp, #44]	; 0x2c
   11f6c:	and	r5, r5, r3
   11f70:	tst	r5, #255	; 0xff
   11f74:	beq	12154 <abort@plt+0x1434>
   11f78:	cmp	r7, fp
   11f7c:	ldrhi	r3, [sp, #36]	; 0x24
   11f80:	movhi	r2, #39	; 0x27
   11f84:	strbhi	r2, [r3, fp]
   11f88:	add	r3, fp, #1
   11f8c:	cmp	r7, r3
   11f90:	ldrhi	r2, [sp, #36]	; 0x24
   11f94:	movhi	r1, #39	; 0x27
   11f98:	strbhi	r1, [r2, r3]
   11f9c:	add	fp, fp, #2
   11fa0:	mov	r3, #0
   11fa4:	str	r3, [sp, #44]	; 0x2c
   11fa8:	b	12154 <abort@plt+0x1434>
   11fac:	ldr	r3, [sp, #32]
   11fb0:	cmp	r3, #0
   11fb4:	bne	12850 <abort@plt+0x1b30>
   11fb8:	mov	r8, r3
   11fbc:	mov	r5, r3
   11fc0:	b	11f64 <abort@plt+0x1244>
   11fc4:	mov	r3, #110	; 0x6e
   11fc8:	b	11fd0 <abort@plt+0x12b0>
   11fcc:	mov	r3, #116	; 0x74
   11fd0:	ldr	r2, [sp, #32]
   11fd4:	cmp	sl, #2
   11fd8:	movne	r2, #0
   11fdc:	andeq	r2, r2, #1
   11fe0:	cmp	r2, #0
   11fe4:	bne	12008 <abort@plt+0x12e8>
   11fe8:	ldr	r2, [sp, #48]	; 0x30
   11fec:	cmp	r2, #0
   11ff0:	moveq	r8, r2
   11ff4:	moveq	r5, r2
   11ff8:	beq	12080 <abort@plt+0x1360>
   11ffc:	mov	r4, r3
   12000:	mov	r8, #0
   12004:	b	120d8 <abort@plt+0x13b8>
   12008:	mov	r8, sl
   1200c:	mov	sl, r7
   12010:	b	1287c <abort@plt+0x1b5c>
   12014:	mov	r3, #97	; 0x61
   12018:	b	11fe8 <abort@plt+0x12c8>
   1201c:	ldr	r3, [sp, #28]
   12020:	cmn	r3, #1
   12024:	beq	12050 <abort@plt+0x1330>
   12028:	ldr	r3, [sp, #28]
   1202c:	subs	r3, r3, #1
   12030:	movne	r3, #1
   12034:	cmp	r3, #0
   12038:	bne	12700 <abort@plt+0x19e0>
   1203c:	cmp	r6, #0
   12040:	beq	12068 <abort@plt+0x1348>
   12044:	mov	r8, #0
   12048:	mov	r5, r8
   1204c:	b	12080 <abort@plt+0x1360>
   12050:	ldr	r3, [sp, #52]	; 0x34
   12054:	ldrb	r3, [r3, #1]
   12058:	adds	r3, r3, #0
   1205c:	movne	r3, #1
   12060:	b	12034 <abort@plt+0x1314>
   12064:	mov	r8, #0
   12068:	ldr	r5, [sp, #32]
   1206c:	cmp	sl, #2
   12070:	movne	r5, #0
   12074:	andeq	r5, r5, #1
   12078:	cmp	r5, #0
   1207c:	bne	12230 <abort@plt+0x1510>
   12080:	ldr	r3, [sp, #68]	; 0x44
   12084:	cmp	sl, #2
   12088:	orreq	r3, r3, #1
   1208c:	eor	r3, r3, #1
   12090:	ldr	r2, [sp, #32]
   12094:	orr	r3, r2, r3
   12098:	tst	r3, #255	; 0xff
   1209c:	beq	120cc <abort@plt+0x13ac>
   120a0:	ldr	r3, [sp, #160]	; 0xa0
   120a4:	cmp	r3, #0
   120a8:	beq	120cc <abort@plt+0x13ac>
   120ac:	lsr	r2, r4, #5
   120b0:	uxtb	r2, r2
   120b4:	and	r3, r4, #31
   120b8:	ldr	r1, [sp, #160]	; 0xa0
   120bc:	ldr	r2, [r1, r2, lsl #2]
   120c0:	lsr	r3, r2, r3
   120c4:	tst	r3, #1
   120c8:	bne	120d8 <abort@plt+0x13b8>
   120cc:	ldr	r3, [sp, #56]	; 0x38
   120d0:	cmp	r3, #0
   120d4:	beq	11f64 <abort@plt+0x1244>
   120d8:	ldr	r3, [sp, #32]
   120dc:	cmp	r3, #0
   120e0:	bne	128ec <abort@plt+0x1bcc>
   120e4:	ldr	r3, [sp, #44]	; 0x2c
   120e8:	eor	r3, r3, #1
   120ec:	cmp	sl, #2
   120f0:	movne	r3, #0
   120f4:	andeq	r3, r3, #1
   120f8:	cmp	r3, #0
   120fc:	beq	12140 <abort@plt+0x1420>
   12100:	cmp	r7, fp
   12104:	ldrhi	r2, [sp, #36]	; 0x24
   12108:	movhi	r1, #39	; 0x27
   1210c:	strbhi	r1, [r2, fp]
   12110:	add	r2, fp, #1
   12114:	cmp	r7, r2
   12118:	ldrhi	r1, [sp, #36]	; 0x24
   1211c:	movhi	r0, #36	; 0x24
   12120:	strbhi	r0, [r1, r2]
   12124:	add	r2, fp, #2
   12128:	cmp	r7, r2
   1212c:	ldrhi	r1, [sp, #36]	; 0x24
   12130:	movhi	r0, #39	; 0x27
   12134:	strbhi	r0, [r1, r2]
   12138:	add	fp, fp, #3
   1213c:	str	r3, [sp, #44]	; 0x2c
   12140:	cmp	r7, fp
   12144:	ldrhi	r3, [sp, #36]	; 0x24
   12148:	movhi	r2, #92	; 0x5c
   1214c:	strbhi	r2, [r3, fp]
   12150:	add	fp, fp, #1
   12154:	cmp	fp, r7
   12158:	ldrcc	r3, [sp, #36]	; 0x24
   1215c:	strbcc	r4, [r3, fp]
   12160:	add	fp, fp, #1
   12164:	ldr	r3, [sp, #40]	; 0x28
   12168:	cmp	r8, #0
   1216c:	moveq	r3, #0
   12170:	str	r3, [sp, #40]	; 0x28
   12174:	add	r6, r6, #1
   12178:	ldr	r3, [sp, #28]
   1217c:	cmn	r3, #1
   12180:	beq	1270c <abort@plt+0x19ec>
   12184:	ldr	r3, [sp, #28]
   12188:	subs	r8, r3, r6
   1218c:	movne	r8, #1
   12190:	cmp	r8, #0
   12194:	beq	12720 <abort@plt+0x1a00>
   12198:	ldr	r5, [sp, #48]	; 0x30
   1219c:	cmp	sl, #2
   121a0:	moveq	r5, #0
   121a4:	andne	r5, r5, #1
   121a8:	ldr	r3, [sp, #60]	; 0x3c
   121ac:	adds	r9, r3, #0
   121b0:	movne	r9, #1
   121b4:	ands	r2, r5, r9
   121b8:	str	r2, [sp, #56]	; 0x38
   121bc:	beq	11a84 <abort@plt+0xd64>
   121c0:	add	r4, r6, r3
   121c4:	ldr	r2, [sp, #28]
   121c8:	cmp	r3, #1
   121cc:	movls	r3, #0
   121d0:	movhi	r3, #1
   121d4:	cmn	r2, #1
   121d8:	movne	r3, #0
   121dc:	cmp	r3, #0
   121e0:	beq	121f0 <abort@plt+0x14d0>
   121e4:	ldr	r0, [sp, #52]	; 0x34
   121e8:	bl	10c78 <strlen@plt>
   121ec:	str	r0, [sp, #28]
   121f0:	ldr	r3, [sp, #28]
   121f4:	cmp	r3, r4
   121f8:	bcc	11a7c <abort@plt+0xd5c>
   121fc:	ldr	r2, [sp, #60]	; 0x3c
   12200:	ldr	r1, [sp, #72]	; 0x48
   12204:	ldr	r3, [sp, #52]	; 0x34
   12208:	add	r0, r3, r6
   1220c:	bl	10b88 <memcmp@plt>
   12210:	cmp	r0, #0
   12214:	bne	11c9c <abort@plt+0xf7c>
   12218:	ldr	r3, [sp, #32]
   1221c:	cmp	r3, #0
   12220:	beq	11a84 <abort@plt+0xd64>
   12224:	mov	r8, sl
   12228:	mov	sl, r7
   1222c:	b	1287c <abort@plt+0x1b5c>
   12230:	mov	r8, sl
   12234:	mov	sl, r7
   12238:	b	1287c <abort@plt+0x1b5c>
   1223c:	cmp	sl, #2
   12240:	strne	r8, [sp, #80]	; 0x50
   12244:	movne	r5, #0
   12248:	bne	12080 <abort@plt+0x1360>
   1224c:	ldr	r3, [sp, #32]
   12250:	cmp	r3, #0
   12254:	bne	12868 <abort@plt+0x1b48>
   12258:	ldr	r2, [sp, #76]	; 0x4c
   1225c:	adds	r3, r7, #0
   12260:	movne	r3, #1
   12264:	cmp	r2, #0
   12268:	movne	r3, #0
   1226c:	cmp	r3, #0
   12270:	movne	r3, #0
   12274:	bne	122a4 <abort@plt+0x1584>
   12278:	cmp	r7, fp
   1227c:	ldrhi	r3, [sp, #36]	; 0x24
   12280:	movhi	r2, #39	; 0x27
   12284:	strbhi	r2, [r3, fp]
   12288:	add	r3, fp, #1
   1228c:	cmp	r7, r3
   12290:	ldrhi	r2, [sp, #36]	; 0x24
   12294:	movhi	r1, #92	; 0x5c
   12298:	strbhi	r1, [r2, r3]
   1229c:	mov	r3, r7
   122a0:	ldr	r7, [sp, #76]	; 0x4c
   122a4:	add	r2, fp, #2
   122a8:	cmp	r2, r3
   122ac:	ldrcc	r1, [sp, #36]	; 0x24
   122b0:	movcc	r0, #39	; 0x27
   122b4:	strbcc	r0, [r1, r2]
   122b8:	add	fp, fp, #3
   122bc:	ldr	r2, [sp, #32]
   122c0:	mov	r5, r2
   122c4:	str	r8, [sp, #80]	; 0x50
   122c8:	str	r2, [sp, #44]	; 0x2c
   122cc:	str	r7, [sp, #76]	; 0x4c
   122d0:	mov	r7, r3
   122d4:	b	12080 <abort@plt+0x1360>
   122d8:	ldr	r5, [sp, #84]	; 0x54
   122dc:	cmp	r5, #1
   122e0:	beq	12310 <abort@plt+0x15f0>
   122e4:	mov	r3, #0
   122e8:	str	r3, [sp, #104]	; 0x68
   122ec:	str	r3, [sp, #108]	; 0x6c
   122f0:	ldr	r3, [sp, #28]
   122f4:	cmn	r3, #1
   122f8:	beq	12344 <abort@plt+0x1624>
   122fc:	mov	r3, #0
   12300:	str	r4, [sp, #88]	; 0x58
   12304:	str	fp, [sp, #92]	; 0x5c
   12308:	mov	fp, r3
   1230c:	b	1246c <abort@plt+0x174c>
   12310:	bl	10c60 <__ctype_b_loc@plt>
   12314:	ldr	r2, [r0]
   12318:	lsl	r3, r4, #1
   1231c:	ldrh	r8, [r2, r3]
   12320:	lsr	r8, r8, #14
   12324:	and	r8, r8, #1
   12328:	mov	r2, r5
   1232c:	eor	r5, r8, #1
   12330:	ldr	r3, [sp, #48]	; 0x30
   12334:	and	r5, r5, r3
   12338:	ands	r5, r5, #255	; 0xff
   1233c:	beq	12080 <abort@plt+0x1360>
   12340:	b	12504 <abort@plt+0x17e4>
   12344:	ldr	r0, [sp, #52]	; 0x34
   12348:	bl	10c78 <strlen@plt>
   1234c:	str	r0, [sp, #28]
   12350:	b	122fc <abort@plt+0x15dc>
   12354:	mov	r2, fp
   12358:	mov	r1, r4
   1235c:	ldr	r4, [sp, #88]	; 0x58
   12360:	ldr	fp, [sp, #92]	; 0x5c
   12364:	ldr	r0, [sp, #28]
   12368:	cmp	r0, r5
   1236c:	bls	12538 <abort@plt+0x1818>
   12370:	ldrb	r3, [r1]
   12374:	cmp	r3, #0
   12378:	beq	12540 <abort@plt+0x1820>
   1237c:	mov	r3, r1
   12380:	add	r2, r2, #1
   12384:	add	r1, r6, r2
   12388:	cmp	r0, r1
   1238c:	bls	12548 <abort@plt+0x1828>
   12390:	ldrb	r1, [r3, #1]!
   12394:	cmp	r1, #0
   12398:	bne	12380 <abort@plt+0x1660>
   1239c:	mov	r8, #0
   123a0:	b	124fc <abort@plt+0x17dc>
   123a4:	cmp	r4, r5
   123a8:	beq	12448 <abort@plt+0x1728>
   123ac:	ldrb	r3, [r4, #1]!
   123b0:	sub	r3, r3, #91	; 0x5b
   123b4:	cmp	r3, #33	; 0x21
   123b8:	ldrls	pc, [pc, r3, lsl #2]
   123bc:	b	123a4 <abort@plt+0x1684>
   123c0:	andeq	r2, r1, r4, ror r8
   123c4:	andeq	r2, r1, r4, ror r8
   123c8:	andeq	r2, r1, r4, lsr #7
   123cc:	andeq	r2, r1, r4, ror r8
   123d0:	andeq	r2, r1, r4, lsr #7
   123d4:	andeq	r2, r1, r4, ror r8
   123d8:	andeq	r2, r1, r4, lsr #7
   123dc:	andeq	r2, r1, r4, lsr #7
   123e0:	andeq	r2, r1, r4, lsr #7
   123e4:	andeq	r2, r1, r4, lsr #7
   123e8:	andeq	r2, r1, r4, lsr #7
   123ec:	andeq	r2, r1, r4, lsr #7
   123f0:	andeq	r2, r1, r4, lsr #7
   123f4:	andeq	r2, r1, r4, lsr #7
   123f8:	andeq	r2, r1, r4, lsr #7
   123fc:	andeq	r2, r1, r4, lsr #7
   12400:	andeq	r2, r1, r4, lsr #7
   12404:	andeq	r2, r1, r4, lsr #7
   12408:	andeq	r2, r1, r4, lsr #7
   1240c:	andeq	r2, r1, r4, lsr #7
   12410:	andeq	r2, r1, r4, lsr #7
   12414:	andeq	r2, r1, r4, lsr #7
   12418:	andeq	r2, r1, r4, lsr #7
   1241c:	andeq	r2, r1, r4, lsr #7
   12420:	andeq	r2, r1, r4, lsr #7
   12424:	andeq	r2, r1, r4, lsr #7
   12428:	andeq	r2, r1, r4, lsr #7
   1242c:	andeq	r2, r1, r4, lsr #7
   12430:	andeq	r2, r1, r4, lsr #7
   12434:	andeq	r2, r1, r4, lsr #7
   12438:	andeq	r2, r1, r4, lsr #7
   1243c:	andeq	r2, r1, r4, lsr #7
   12440:	andeq	r2, r1, r4, lsr #7
   12444:	andeq	r2, r1, r4, ror r8
   12448:	ldr	r0, [sp, #100]	; 0x64
   1244c:	bl	10bd0 <iswprint@plt>
   12450:	cmp	r0, #0
   12454:	moveq	r8, #0
   12458:	add	fp, fp, r9
   1245c:	add	r0, sp, #104	; 0x68
   12460:	bl	10b7c <mbsinit@plt>
   12464:	cmp	r0, #0
   12468:	bne	124dc <abort@plt+0x17bc>
   1246c:	add	r5, r6, fp
   12470:	ldr	r3, [sp, #52]	; 0x34
   12474:	add	r4, r3, r5
   12478:	add	r3, sp, #104	; 0x68
   1247c:	ldr	r2, [sp, #28]
   12480:	sub	r2, r2, r5
   12484:	mov	r1, r4
   12488:	add	r0, sp, #100	; 0x64
   1248c:	bl	13ff8 <abort@plt+0x32d8>
   12490:	subs	r9, r0, #0
   12494:	beq	12550 <abort@plt+0x1830>
   12498:	cmn	r9, #1
   1249c:	beq	124ec <abort@plt+0x17cc>
   124a0:	cmn	r9, #2
   124a4:	beq	12354 <abort@plt+0x1634>
   124a8:	ldr	r3, [sp, #32]
   124ac:	cmp	sl, #2
   124b0:	movne	r3, #0
   124b4:	andeq	r3, r3, #1
   124b8:	cmp	r3, #0
   124bc:	beq	12448 <abort@plt+0x1728>
   124c0:	cmp	r9, #1
   124c4:	bls	12448 <abort@plt+0x1728>
   124c8:	sub	r3, r9, #1
   124cc:	add	r5, r3, r5
   124d0:	ldr	r3, [sp, #52]	; 0x34
   124d4:	add	r5, r3, r5
   124d8:	b	123ac <abort@plt+0x168c>
   124dc:	ldr	r4, [sp, #88]	; 0x58
   124e0:	mov	r2, fp
   124e4:	ldr	fp, [sp, #92]	; 0x5c
   124e8:	b	124fc <abort@plt+0x17dc>
   124ec:	ldr	r4, [sp, #88]	; 0x58
   124f0:	mov	r2, fp
   124f4:	ldr	fp, [sp, #92]	; 0x5c
   124f8:	mov	r8, #0
   124fc:	cmp	r2, #1
   12500:	bls	1232c <abort@plt+0x160c>
   12504:	add	r1, r6, r2
   12508:	ldr	ip, [sp, #64]	; 0x40
   1250c:	mov	r5, #0
   12510:	eor	r3, r8, #1
   12514:	ldr	r2, [sp, #48]	; 0x30
   12518:	and	r3, r3, r2
   1251c:	uxtb	r3, r3
   12520:	ldr	r9, [sp, #32]
   12524:	ldr	lr, [sp, #44]	; 0x2c
   12528:	ldr	r2, [sp, #56]	; 0x38
   1252c:	str	r8, [sp, #56]	; 0x38
   12530:	ldr	r0, [sp, #36]	; 0x24
   12534:	b	125d0 <abort@plt+0x18b0>
   12538:	mov	r8, #0
   1253c:	b	124fc <abort@plt+0x17dc>
   12540:	mov	r8, #0
   12544:	b	124fc <abort@plt+0x17dc>
   12548:	mov	r8, #0
   1254c:	b	124fc <abort@plt+0x17dc>
   12550:	ldr	r4, [sp, #88]	; 0x58
   12554:	mov	r2, fp
   12558:	ldr	fp, [sp, #92]	; 0x5c
   1255c:	b	124fc <abort@plt+0x17dc>
   12560:	cmp	r2, #0
   12564:	beq	12578 <abort@plt+0x1858>
   12568:	cmp	r7, fp
   1256c:	movhi	r2, #92	; 0x5c
   12570:	strbhi	r2, [r0, fp]
   12574:	add	fp, fp, #1
   12578:	add	r8, r6, #1
   1257c:	cmp	r1, r8
   12580:	bls	12688 <abort@plt+0x1968>
   12584:	eor	r2, r5, #1
   12588:	and	r2, r2, lr
   1258c:	ands	r2, r2, #255	; 0xff
   12590:	beq	126a4 <abort@plt+0x1984>
   12594:	cmp	r7, fp
   12598:	movhi	r2, #39	; 0x27
   1259c:	strbhi	r2, [r0, fp]
   125a0:	add	r2, fp, #1
   125a4:	cmp	r7, r2
   125a8:	movhi	lr, #39	; 0x27
   125ac:	strbhi	lr, [r0, r2]
   125b0:	add	fp, fp, #2
   125b4:	mov	r6, r8
   125b8:	mov	r2, r3
   125bc:	mov	lr, r3
   125c0:	cmp	r7, fp
   125c4:	strbhi	r4, [r0, fp]
   125c8:	add	fp, fp, #1
   125cc:	ldrb	r4, [ip, #1]!
   125d0:	cmp	r3, #0
   125d4:	beq	12560 <abort@plt+0x1840>
   125d8:	cmp	r9, #0
   125dc:	bne	128e0 <abort@plt+0x1bc0>
   125e0:	eor	r5, lr, #1
   125e4:	cmp	sl, #2
   125e8:	movne	r5, #0
   125ec:	andeq	r5, r5, #1
   125f0:	cmp	r5, #0
   125f4:	beq	1262c <abort@plt+0x190c>
   125f8:	cmp	r7, fp
   125fc:	movhi	lr, #39	; 0x27
   12600:	strbhi	lr, [r0, fp]
   12604:	add	lr, fp, #1
   12608:	cmp	r7, lr
   1260c:	movhi	r8, #36	; 0x24
   12610:	strbhi	r8, [r0, lr]
   12614:	add	lr, fp, #2
   12618:	cmp	r7, lr
   1261c:	movhi	r8, #39	; 0x27
   12620:	strbhi	r8, [r0, lr]
   12624:	add	fp, fp, #3
   12628:	mov	lr, r5
   1262c:	cmp	r7, fp
   12630:	movhi	r5, #92	; 0x5c
   12634:	strbhi	r5, [r0, fp]
   12638:	add	r5, fp, #1
   1263c:	cmp	r7, r5
   12640:	lsrhi	r8, r4, #6
   12644:	addhi	r8, r8, #48	; 0x30
   12648:	strbhi	r8, [r0, r5]
   1264c:	add	r8, fp, #2
   12650:	cmp	r7, r8
   12654:	lsrhi	r5, r4, #3
   12658:	andhi	r5, r5, #7
   1265c:	addhi	r5, r5, #48	; 0x30
   12660:	strbhi	r5, [r0, r8]
   12664:	add	fp, fp, #3
   12668:	and	r4, r4, #7
   1266c:	add	r4, r4, #48	; 0x30
   12670:	add	r5, r6, #1
   12674:	cmp	r1, r5
   12678:	bls	12694 <abort@plt+0x1974>
   1267c:	mov	r6, r5
   12680:	mov	r5, r3
   12684:	b	125c0 <abort@plt+0x18a0>
   12688:	str	lr, [sp, #44]	; 0x2c
   1268c:	ldr	r8, [sp, #56]	; 0x38
   12690:	b	11f64 <abort@plt+0x1244>
   12694:	str	lr, [sp, #44]	; 0x2c
   12698:	ldr	r8, [sp, #56]	; 0x38
   1269c:	mov	r5, r3
   126a0:	b	11f64 <abort@plt+0x1244>
   126a4:	mov	r6, r8
   126a8:	b	125c0 <abort@plt+0x18a0>
   126ac:	mov	r5, #0
   126b0:	b	12080 <abort@plt+0x1360>
   126b4:	mov	r8, r5
   126b8:	ldr	r5, [sp, #48]	; 0x30
   126bc:	mov	r4, #48	; 0x30
   126c0:	b	12080 <abort@plt+0x1360>
   126c4:	ldr	r8, [sp, #32]
   126c8:	mov	r4, #48	; 0x30
   126cc:	b	12080 <abort@plt+0x1360>
   126d0:	ldr	r8, [sp, #32]
   126d4:	mov	r4, #48	; 0x30
   126d8:	b	12080 <abort@plt+0x1360>
   126dc:	mov	r8, #0
   126e0:	mov	r5, r8
   126e4:	b	12080 <abort@plt+0x1360>
   126e8:	mov	r8, #0
   126ec:	mov	r5, r8
   126f0:	b	12080 <abort@plt+0x1360>
   126f4:	mov	r8, #0
   126f8:	mov	r5, r8
   126fc:	b	12080 <abort@plt+0x1360>
   12700:	mov	r8, #0
   12704:	mov	r5, r8
   12708:	b	12080 <abort@plt+0x1360>
   1270c:	ldr	r3, [sp, #52]	; 0x34
   12710:	ldrb	r8, [r3, r6]
   12714:	adds	r8, r8, #0
   12718:	movne	r8, #1
   1271c:	b	12190 <abort@plt+0x1470>
   12720:	cmp	sl, #2
   12724:	movne	r3, #0
   12728:	moveq	r3, #1
   1272c:	ldr	r1, [sp, #32]
   12730:	mov	r2, r1
   12734:	and	r2, r2, r3
   12738:	cmp	fp, #0
   1273c:	movne	r2, #0
   12740:	andeq	r2, r2, #1
   12744:	cmp	r2, #0
   12748:	bne	128f8 <abort@plt+0x1bd8>
   1274c:	eor	r2, r1, #1
   12750:	and	r3, r3, r2
   12754:	ldr	r1, [sp, #80]	; 0x50
   12758:	tst	r1, r3
   1275c:	beq	127d4 <abort@plt+0x1ab4>
   12760:	ldr	r3, [sp, #40]	; 0x28
   12764:	cmp	r3, #0
   12768:	bne	12790 <abort@plt+0x1a70>
   1276c:	ldr	r1, [sp, #76]	; 0x4c
   12770:	clz	r3, r7
   12774:	lsr	r3, r3, #5
   12778:	cmp	r1, #0
   1277c:	moveq	r3, #0
   12780:	cmp	r3, #0
   12784:	beq	127d4 <abort@plt+0x1ab4>
   12788:	ldr	r7, [sp, #76]	; 0x4c
   1278c:	b	11824 <abort@plt+0xb04>
   12790:	ldr	r3, [sp, #168]	; 0xa8
   12794:	str	r3, [sp, #16]
   12798:	ldr	r3, [sp, #164]	; 0xa4
   1279c:	str	r3, [sp, #12]
   127a0:	ldr	r3, [sp, #160]	; 0xa0
   127a4:	str	r3, [sp, #8]
   127a8:	ldr	r3, [sp, #156]	; 0x9c
   127ac:	str	r3, [sp, #4]
   127b0:	mov	r3, #5
   127b4:	str	r3, [sp]
   127b8:	ldr	r3, [sp, #28]
   127bc:	ldr	r2, [sp, #52]	; 0x34
   127c0:	ldr	r1, [sp, #76]	; 0x4c
   127c4:	ldr	r0, [sp, #36]	; 0x24
   127c8:	bl	117c4 <abort@plt+0xaa4>
   127cc:	mov	fp, r0
   127d0:	b	128d4 <abort@plt+0x1bb4>
   127d4:	mov	sl, r7
   127d8:	ldr	r3, [sp, #72]	; 0x48
   127dc:	cmp	r3, #0
   127e0:	moveq	r2, #0
   127e4:	andne	r2, r2, #1
   127e8:	cmp	r2, #0
   127ec:	beq	1281c <abort@plt+0x1afc>
   127f0:	mov	r2, r3
   127f4:	ldrb	r3, [r3]
   127f8:	cmp	r3, #0
   127fc:	beq	1281c <abort@plt+0x1afc>
   12800:	ldr	r1, [sp, #36]	; 0x24
   12804:	cmp	sl, fp
   12808:	strbhi	r3, [r1, fp]
   1280c:	add	fp, fp, #1
   12810:	ldrb	r3, [r2, #1]!
   12814:	cmp	r3, #0
   12818:	bne	12804 <abort@plt+0x1ae4>
   1281c:	cmp	sl, fp
   12820:	movhi	r3, #0
   12824:	ldrhi	r2, [sp, #36]	; 0x24
   12828:	strbhi	r3, [r2, fp]
   1282c:	b	128d4 <abort@plt+0x1bb4>
   12830:	mov	r8, sl
   12834:	mov	sl, r7
   12838:	ldr	r3, [sp, #32]
   1283c:	str	r3, [sp, #48]	; 0x30
   12840:	b	1287c <abort@plt+0x1b5c>
   12844:	mov	r8, sl
   12848:	mov	sl, r7
   1284c:	b	1287c <abort@plt+0x1b5c>
   12850:	mov	r8, sl
   12854:	mov	sl, r7
   12858:	b	1287c <abort@plt+0x1b5c>
   1285c:	andeq	r4, r1, r8, ror sl
   12860:	andeq	r4, r1, r8, lsl #21
   12864:	andeq	r4, r1, ip, ror sl
   12868:	mov	r8, sl
   1286c:	mov	sl, r7
   12870:	b	1287c <abort@plt+0x1b5c>
   12874:	mov	r8, sl
   12878:	mov	sl, r7
   1287c:	ldr	r3, [sp, #48]	; 0x30
   12880:	cmp	r8, #2
   12884:	movne	r3, #0
   12888:	andeq	r3, r3, #1
   1288c:	cmp	r3, #0
   12890:	movne	r8, #4
   12894:	ldr	r3, [sp, #168]	; 0xa8
   12898:	str	r3, [sp, #16]
   1289c:	ldr	r3, [sp, #164]	; 0xa4
   128a0:	str	r3, [sp, #12]
   128a4:	mov	r3, #0
   128a8:	str	r3, [sp, #8]
   128ac:	ldr	r3, [sp, #156]	; 0x9c
   128b0:	bic	r3, r3, #2
   128b4:	str	r3, [sp, #4]
   128b8:	str	r8, [sp]
   128bc:	ldr	r3, [sp, #28]
   128c0:	ldr	r2, [sp, #52]	; 0x34
   128c4:	mov	r1, sl
   128c8:	ldr	r0, [sp, #36]	; 0x24
   128cc:	bl	117c4 <abort@plt+0xaa4>
   128d0:	mov	fp, r0
   128d4:	mov	r0, fp
   128d8:	add	sp, sp, #116	; 0x74
   128dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128e0:	mov	r8, sl
   128e4:	mov	sl, r7
   128e8:	b	1287c <abort@plt+0x1b5c>
   128ec:	mov	r8, sl
   128f0:	mov	sl, r7
   128f4:	b	1287c <abort@plt+0x1b5c>
   128f8:	mov	r8, sl
   128fc:	mov	sl, r7
   12900:	b	1287c <abort@plt+0x1b5c>
   12904:	mov	r8, sl
   12908:	mov	sl, r7
   1290c:	b	12894 <abort@plt+0x1b74>
   12910:	mov	r3, #1
   12914:	str	r3, [sp, #32]
   12918:	str	r3, [sp, #48]	; 0x30
   1291c:	str	r3, [sp, #60]	; 0x3c
   12920:	ldr	r3, [pc, #-196]	; 12864 <abort@plt+0x1b44>
   12924:	str	r3, [sp, #72]	; 0x48
   12928:	mov	fp, #0
   1292c:	mov	sl, #5
   12930:	b	11880 <abort@plt+0xb60>
   12934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12938:	sub	sp, sp, #52	; 0x34
   1293c:	mov	r5, r0
   12940:	str	r1, [sp, #24]
   12944:	str	r2, [sp, #28]
   12948:	mov	r4, r3
   1294c:	bl	10c84 <__errno_location@plt>
   12950:	str	r0, [sp, #32]
   12954:	ldr	r3, [r0]
   12958:	str	r3, [sp, #36]	; 0x24
   1295c:	ldr	r3, [pc, #396]	; 12af0 <abort@plt+0x1dd0>
   12960:	ldr	r6, [r3]
   12964:	cmn	r5, #-2147483647	; 0x80000001
   12968:	movne	r3, #0
   1296c:	moveq	r3, #1
   12970:	orrs	r3, r3, r5, lsr #31
   12974:	bne	12ab4 <abort@plt+0x1d94>
   12978:	ldr	r3, [pc, #368]	; 12af0 <abort@plt+0x1dd0>
   1297c:	ldr	r2, [r3, #4]
   12980:	cmp	r5, r2
   12984:	blt	129ec <abort@plt+0x1ccc>
   12988:	str	r2, [sp, #44]	; 0x2c
   1298c:	add	r3, r3, #8
   12990:	cmp	r6, r3
   12994:	beq	12ab8 <abort@plt+0x1d98>
   12998:	sub	r2, r5, r2
   1299c:	mov	r3, #8
   129a0:	str	r3, [sp]
   129a4:	mvn	r3, #-2147483648	; 0x80000000
   129a8:	add	r2, r2, #1
   129ac:	add	r1, sp, #44	; 0x2c
   129b0:	mov	r0, r6
   129b4:	bl	13838 <abort@plt+0x2b18>
   129b8:	mov	r6, r0
   129bc:	ldr	r3, [pc, #300]	; 12af0 <abort@plt+0x1dd0>
   129c0:	str	r0, [r3]
   129c4:	ldr	r7, [pc, #292]	; 12af0 <abort@plt+0x1dd0>
   129c8:	ldr	r0, [r7, #4]
   129cc:	ldr	r2, [sp, #44]	; 0x2c
   129d0:	sub	r2, r2, r0
   129d4:	lsl	r2, r2, #3
   129d8:	mov	r1, #0
   129dc:	add	r0, r6, r0, lsl #3
   129e0:	bl	10c9c <memset@plt>
   129e4:	ldr	r3, [sp, #44]	; 0x2c
   129e8:	str	r3, [r7, #4]
   129ec:	add	fp, r6, r5, lsl #3
   129f0:	ldr	r8, [r6, r5, lsl #3]
   129f4:	ldr	r7, [fp, #4]
   129f8:	ldr	r9, [r4, #4]
   129fc:	orr	r9, r9, #1
   12a00:	add	sl, r4, #8
   12a04:	ldr	r3, [r4, #44]	; 0x2c
   12a08:	str	r3, [sp, #16]
   12a0c:	ldr	r3, [r4, #40]	; 0x28
   12a10:	str	r3, [sp, #12]
   12a14:	str	sl, [sp, #8]
   12a18:	str	r9, [sp, #4]
   12a1c:	ldr	r3, [r4]
   12a20:	str	r3, [sp]
   12a24:	ldr	r3, [sp, #28]
   12a28:	ldr	r2, [sp, #24]
   12a2c:	mov	r1, r8
   12a30:	mov	r0, r7
   12a34:	bl	117c4 <abort@plt+0xaa4>
   12a38:	cmp	r8, r0
   12a3c:	bhi	12a9c <abort@plt+0x1d7c>
   12a40:	add	r8, r0, #1
   12a44:	str	r8, [r6, r5, lsl #3]
   12a48:	ldr	r3, [pc, #164]	; 12af4 <abort@plt+0x1dd4>
   12a4c:	cmp	r7, r3
   12a50:	beq	12a5c <abort@plt+0x1d3c>
   12a54:	mov	r0, r7
   12a58:	bl	13ec4 <abort@plt+0x31a4>
   12a5c:	mov	r0, r8
   12a60:	bl	136b4 <abort@plt+0x2994>
   12a64:	mov	r7, r0
   12a68:	str	r0, [fp, #4]
   12a6c:	ldr	r3, [r4, #44]	; 0x2c
   12a70:	str	r3, [sp, #16]
   12a74:	ldr	r3, [r4, #40]	; 0x28
   12a78:	str	r3, [sp, #12]
   12a7c:	str	sl, [sp, #8]
   12a80:	str	r9, [sp, #4]
   12a84:	ldr	r3, [r4]
   12a88:	str	r3, [sp]
   12a8c:	ldr	r3, [sp, #28]
   12a90:	ldr	r2, [sp, #24]
   12a94:	mov	r1, r8
   12a98:	bl	117c4 <abort@plt+0xaa4>
   12a9c:	ldr	r3, [sp, #32]
   12aa0:	ldr	r2, [sp, #36]	; 0x24
   12aa4:	str	r2, [r3]
   12aa8:	mov	r0, r7
   12aac:	add	sp, sp, #52	; 0x34
   12ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ab4:	bl	10d20 <abort@plt>
   12ab8:	sub	r2, r5, r2
   12abc:	mov	r3, #8
   12ac0:	str	r3, [sp]
   12ac4:	mvn	r3, #-2147483648	; 0x80000000
   12ac8:	add	r2, r2, #1
   12acc:	add	r1, sp, #44	; 0x2c
   12ad0:	mov	r0, #0
   12ad4:	bl	13838 <abort@plt+0x2b18>
   12ad8:	mov	r6, r0
   12adc:	ldr	r3, [pc, #12]	; 12af0 <abort@plt+0x1dd0>
   12ae0:	str	r0, [r3], #8
   12ae4:	ldm	r3, {r0, r1}
   12ae8:	stm	r6, {r0, r1}
   12aec:	b	129c4 <abort@plt+0x1ca4>
   12af0:	ldrdeq	r5, [r2], -r0
   12af4:	andeq	r5, r2, ip, lsr r1
   12af8:	push	{r4, r5, r6, lr}
   12afc:	mov	r4, r0
   12b00:	bl	10c84 <__errno_location@plt>
   12b04:	mov	r5, r0
   12b08:	ldr	r6, [r0]
   12b0c:	cmp	r4, #0
   12b10:	ldr	r3, [pc, #20]	; 12b2c <abort@plt+0x1e0c>
   12b14:	moveq	r4, r3
   12b18:	mov	r1, #48	; 0x30
   12b1c:	mov	r0, r4
   12b20:	bl	13ba0 <abort@plt+0x2e80>
   12b24:	str	r6, [r5]
   12b28:	pop	{r4, r5, r6, pc}
   12b2c:	andeq	r5, r2, ip, lsr r2
   12b30:	subs	r3, r0, #0
   12b34:	ldr	r2, [pc, #8]	; 12b44 <abort@plt+0x1e24>
   12b38:	moveq	r3, r2
   12b3c:	ldr	r0, [r3]
   12b40:	bx	lr
   12b44:	andeq	r5, r2, ip, lsr r2
   12b48:	subs	r3, r0, #0
   12b4c:	ldr	r2, [pc, #8]	; 12b5c <abort@plt+0x1e3c>
   12b50:	moveq	r3, r2
   12b54:	str	r1, [r3]
   12b58:	bx	lr
   12b5c:	andeq	r5, r2, ip, lsr r2
   12b60:	push	{lr}		; (str lr, [sp, #-4]!)
   12b64:	subs	r3, r0, #0
   12b68:	ldr	r0, [pc, #44]	; 12b9c <abort@plt+0x1e7c>
   12b6c:	moveq	r3, r0
   12b70:	add	r3, r3, #8
   12b74:	lsr	lr, r1, #5
   12b78:	and	r1, r1, #31
   12b7c:	ldr	ip, [r3, lr, lsl #2]
   12b80:	lsr	r0, ip, r1
   12b84:	eor	r2, r2, r0
   12b88:	and	r2, r2, #1
   12b8c:	eor	r1, ip, r2, lsl r1
   12b90:	str	r1, [r3, lr, lsl #2]
   12b94:	and	r0, r0, #1
   12b98:	pop	{pc}		; (ldr pc, [sp], #4)
   12b9c:	andeq	r5, r2, ip, lsr r2
   12ba0:	subs	r3, r0, #0
   12ba4:	ldr	r2, [pc, #12]	; 12bb8 <abort@plt+0x1e98>
   12ba8:	moveq	r3, r2
   12bac:	ldr	r0, [r3, #4]
   12bb0:	str	r1, [r3, #4]
   12bb4:	bx	lr
   12bb8:	andeq	r5, r2, ip, lsr r2
   12bbc:	subs	r3, r0, #0
   12bc0:	ldr	r0, [pc, #40]	; 12bf0 <abort@plt+0x1ed0>
   12bc4:	moveq	r3, r0
   12bc8:	mov	r0, #10
   12bcc:	str	r0, [r3]
   12bd0:	cmp	r2, #0
   12bd4:	cmpne	r1, #0
   12bd8:	beq	12be8 <abort@plt+0x1ec8>
   12bdc:	str	r1, [r3, #40]	; 0x28
   12be0:	str	r2, [r3, #44]	; 0x2c
   12be4:	bx	lr
   12be8:	push	{r4, lr}
   12bec:	bl	10d20 <abort@plt>
   12bf0:	andeq	r5, r2, ip, lsr r2
   12bf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bf8:	sub	sp, sp, #24
   12bfc:	mov	r7, r0
   12c00:	mov	r8, r1
   12c04:	mov	r9, r2
   12c08:	mov	sl, r3
   12c0c:	ldr	r4, [sp, #56]	; 0x38
   12c10:	cmp	r4, #0
   12c14:	ldr	r3, [pc, #84]	; 12c70 <abort@plt+0x1f50>
   12c18:	moveq	r4, r3
   12c1c:	bl	10c84 <__errno_location@plt>
   12c20:	mov	r5, r0
   12c24:	ldr	r6, [r0]
   12c28:	ldr	r3, [r4, #44]	; 0x2c
   12c2c:	str	r3, [sp, #16]
   12c30:	ldr	r3, [r4, #40]	; 0x28
   12c34:	str	r3, [sp, #12]
   12c38:	add	r3, r4, #8
   12c3c:	str	r3, [sp, #8]
   12c40:	ldr	r3, [r4, #4]
   12c44:	str	r3, [sp, #4]
   12c48:	ldr	r3, [r4]
   12c4c:	str	r3, [sp]
   12c50:	mov	r3, sl
   12c54:	mov	r2, r9
   12c58:	mov	r1, r8
   12c5c:	mov	r0, r7
   12c60:	bl	117c4 <abort@plt+0xaa4>
   12c64:	str	r6, [r5]
   12c68:	add	sp, sp, #24
   12c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c70:	andeq	r5, r2, ip, lsr r2
   12c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c78:	sub	sp, sp, #44	; 0x2c
   12c7c:	str	r0, [sp, #28]
   12c80:	str	r1, [sp, #32]
   12c84:	mov	r6, r2
   12c88:	subs	r4, r3, #0
   12c8c:	ldr	r3, [pc, #172]	; 12d40 <abort@plt+0x2020>
   12c90:	moveq	r4, r3
   12c94:	bl	10c84 <__errno_location@plt>
   12c98:	mov	r7, r0
   12c9c:	ldr	fp, [r0]
   12ca0:	ldr	r5, [r4, #4]
   12ca4:	cmp	r6, #0
   12ca8:	orreq	r5, r5, #1
   12cac:	add	r9, r4, #8
   12cb0:	ldr	r3, [r4, #44]	; 0x2c
   12cb4:	str	r3, [sp, #16]
   12cb8:	ldr	r3, [r4, #40]	; 0x28
   12cbc:	str	r3, [sp, #12]
   12cc0:	str	r9, [sp, #8]
   12cc4:	str	r5, [sp, #4]
   12cc8:	ldr	r3, [r4]
   12ccc:	str	r3, [sp]
   12cd0:	ldr	r3, [sp, #32]
   12cd4:	ldr	r2, [sp, #28]
   12cd8:	mov	r1, #0
   12cdc:	mov	r0, r1
   12ce0:	bl	117c4 <abort@plt+0xaa4>
   12ce4:	mov	sl, r0
   12ce8:	add	r8, r0, #1
   12cec:	mov	r0, r8
   12cf0:	bl	136b4 <abort@plt+0x2994>
   12cf4:	str	r0, [sp, #36]	; 0x24
   12cf8:	ldr	r3, [r4, #44]	; 0x2c
   12cfc:	str	r3, [sp, #16]
   12d00:	ldr	r3, [r4, #40]	; 0x28
   12d04:	str	r3, [sp, #12]
   12d08:	str	r9, [sp, #8]
   12d0c:	str	r5, [sp, #4]
   12d10:	ldr	r3, [r4]
   12d14:	str	r3, [sp]
   12d18:	ldr	r3, [sp, #32]
   12d1c:	ldr	r2, [sp, #28]
   12d20:	mov	r1, r8
   12d24:	bl	117c4 <abort@plt+0xaa4>
   12d28:	str	fp, [r7]
   12d2c:	cmp	r6, #0
   12d30:	strne	sl, [r6]
   12d34:	ldr	r0, [sp, #36]	; 0x24
   12d38:	add	sp, sp, #44	; 0x2c
   12d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d40:	andeq	r5, r2, ip, lsr r2
   12d44:	push	{r4, lr}
   12d48:	mov	r3, r2
   12d4c:	mov	r2, #0
   12d50:	bl	12c74 <abort@plt+0x1f54>
   12d54:	pop	{r4, pc}
   12d58:	push	{r4, r5, r6, r7, r8, lr}
   12d5c:	ldr	r3, [pc, #140]	; 12df0 <abort@plt+0x20d0>
   12d60:	ldr	r7, [r3]
   12d64:	ldr	r3, [r3, #4]
   12d68:	cmp	r3, #1
   12d6c:	ble	12d98 <abort@plt+0x2078>
   12d70:	mov	r5, r7
   12d74:	mov	r4, #1
   12d78:	ldr	r6, [pc, #112]	; 12df0 <abort@plt+0x20d0>
   12d7c:	ldr	r0, [r5, #12]
   12d80:	bl	13ec4 <abort@plt+0x31a4>
   12d84:	add	r4, r4, #1
   12d88:	add	r5, r5, #8
   12d8c:	ldr	r3, [r6, #4]
   12d90:	cmp	r3, r4
   12d94:	bgt	12d7c <abort@plt+0x205c>
   12d98:	ldr	r0, [r7, #4]
   12d9c:	ldr	r3, [pc, #80]	; 12df4 <abort@plt+0x20d4>
   12da0:	cmp	r0, r3
   12da4:	beq	12dc0 <abort@plt+0x20a0>
   12da8:	bl	13ec4 <abort@plt+0x31a4>
   12dac:	ldr	r3, [pc, #60]	; 12df0 <abort@plt+0x20d0>
   12db0:	mov	r2, #256	; 0x100
   12db4:	str	r2, [r3, #8]
   12db8:	ldr	r2, [pc, #52]	; 12df4 <abort@plt+0x20d4>
   12dbc:	str	r2, [r3, #12]
   12dc0:	ldr	r3, [pc, #48]	; 12df8 <abort@plt+0x20d8>
   12dc4:	cmp	r7, r3
   12dc8:	beq	12de0 <abort@plt+0x20c0>
   12dcc:	mov	r0, r7
   12dd0:	bl	13ec4 <abort@plt+0x31a4>
   12dd4:	ldr	r3, [pc, #20]	; 12df0 <abort@plt+0x20d0>
   12dd8:	add	r2, r3, #8
   12ddc:	str	r2, [r3]
   12de0:	mov	r2, #1
   12de4:	ldr	r3, [pc, #4]	; 12df0 <abort@plt+0x20d0>
   12de8:	str	r2, [r3, #4]
   12dec:	pop	{r4, r5, r6, r7, r8, pc}
   12df0:	ldrdeq	r5, [r2], -r0
   12df4:	andeq	r5, r2, ip, lsr r1
   12df8:	ldrdeq	r5, [r2], -r8
   12dfc:	push	{r4, lr}
   12e00:	ldr	r3, [pc, #8]	; 12e10 <abort@plt+0x20f0>
   12e04:	mvn	r2, #0
   12e08:	bl	12934 <abort@plt+0x1c14>
   12e0c:	pop	{r4, pc}
   12e10:	andeq	r5, r2, ip, lsr r2
   12e14:	push	{r4, lr}
   12e18:	ldr	r3, [pc, #4]	; 12e24 <abort@plt+0x2104>
   12e1c:	bl	12934 <abort@plt+0x1c14>
   12e20:	pop	{r4, pc}
   12e24:	andeq	r5, r2, ip, lsr r2
   12e28:	push	{r4, lr}
   12e2c:	mov	r1, r0
   12e30:	mov	r0, #0
   12e34:	bl	12dfc <abort@plt+0x20dc>
   12e38:	pop	{r4, pc}
   12e3c:	push	{r4, lr}
   12e40:	mov	r2, r1
   12e44:	mov	r1, r0
   12e48:	mov	r0, #0
   12e4c:	bl	12e14 <abort@plt+0x20f4>
   12e50:	pop	{r4, pc}
   12e54:	push	{r4, r5, lr}
   12e58:	sub	sp, sp, #52	; 0x34
   12e5c:	mov	r4, r0
   12e60:	mov	r5, r2
   12e64:	mov	r0, sp
   12e68:	bl	1165c <abort@plt+0x93c>
   12e6c:	mov	r3, sp
   12e70:	mvn	r2, #0
   12e74:	mov	r1, r5
   12e78:	mov	r0, r4
   12e7c:	bl	12934 <abort@plt+0x1c14>
   12e80:	add	sp, sp, #52	; 0x34
   12e84:	pop	{r4, r5, pc}
   12e88:	push	{r4, r5, r6, lr}
   12e8c:	sub	sp, sp, #48	; 0x30
   12e90:	mov	r4, r0
   12e94:	mov	r5, r2
   12e98:	mov	r6, r3
   12e9c:	mov	r0, sp
   12ea0:	bl	1165c <abort@plt+0x93c>
   12ea4:	mov	r3, sp
   12ea8:	mov	r2, r6
   12eac:	mov	r1, r5
   12eb0:	mov	r0, r4
   12eb4:	bl	12934 <abort@plt+0x1c14>
   12eb8:	add	sp, sp, #48	; 0x30
   12ebc:	pop	{r4, r5, r6, pc}
   12ec0:	push	{r4, lr}
   12ec4:	mov	r2, r1
   12ec8:	mov	r1, r0
   12ecc:	mov	r0, #0
   12ed0:	bl	12e54 <abort@plt+0x2134>
   12ed4:	pop	{r4, pc}
   12ed8:	push	{r4, lr}
   12edc:	mov	r3, r2
   12ee0:	mov	r2, r1
   12ee4:	mov	r1, r0
   12ee8:	mov	r0, #0
   12eec:	bl	12e88 <abort@plt+0x2168>
   12ef0:	pop	{r4, pc}
   12ef4:	push	{r4, r5, r6, lr}
   12ef8:	sub	sp, sp, #48	; 0x30
   12efc:	mov	r4, r0
   12f00:	mov	r5, r1
   12f04:	mov	r6, r2
   12f08:	mov	ip, sp
   12f0c:	ldr	lr, [pc, #64]	; 12f54 <abort@plt+0x2234>
   12f10:	ldm	lr!, {r0, r1, r2, r3}
   12f14:	stmia	ip!, {r0, r1, r2, r3}
   12f18:	ldm	lr!, {r0, r1, r2, r3}
   12f1c:	stmia	ip!, {r0, r1, r2, r3}
   12f20:	ldm	lr, {r0, r1, r2, r3}
   12f24:	stm	ip, {r0, r1, r2, r3}
   12f28:	mov	r2, #1
   12f2c:	mov	r1, r6
   12f30:	mov	r0, sp
   12f34:	bl	12b60 <abort@plt+0x1e40>
   12f38:	mov	r3, sp
   12f3c:	mov	r2, r5
   12f40:	mov	r1, r4
   12f44:	mov	r0, #0
   12f48:	bl	12934 <abort@plt+0x1c14>
   12f4c:	add	sp, sp, #48	; 0x30
   12f50:	pop	{r4, r5, r6, pc}
   12f54:	andeq	r5, r2, ip, lsr r2
   12f58:	push	{r4, lr}
   12f5c:	mov	r2, r1
   12f60:	mvn	r1, #0
   12f64:	bl	12ef4 <abort@plt+0x21d4>
   12f68:	pop	{r4, pc}
   12f6c:	push	{r4, lr}
   12f70:	mov	r1, #58	; 0x3a
   12f74:	bl	12f58 <abort@plt+0x2238>
   12f78:	pop	{r4, pc}
   12f7c:	push	{r4, lr}
   12f80:	mov	r2, #58	; 0x3a
   12f84:	bl	12ef4 <abort@plt+0x21d4>
   12f88:	pop	{r4, pc}
   12f8c:	push	{r4, r5, lr}
   12f90:	sub	sp, sp, #100	; 0x64
   12f94:	mov	r4, r0
   12f98:	mov	r5, r2
   12f9c:	mov	r0, sp
   12fa0:	bl	1165c <abort@plt+0x93c>
   12fa4:	add	lr, sp, #48	; 0x30
   12fa8:	mov	ip, sp
   12fac:	ldm	ip!, {r0, r1, r2, r3}
   12fb0:	stmia	lr!, {r0, r1, r2, r3}
   12fb4:	ldm	ip!, {r0, r1, r2, r3}
   12fb8:	stmia	lr!, {r0, r1, r2, r3}
   12fbc:	ldm	ip, {r0, r1, r2, r3}
   12fc0:	stm	lr, {r0, r1, r2, r3}
   12fc4:	mov	r2, #1
   12fc8:	mov	r1, #58	; 0x3a
   12fcc:	add	r0, sp, #48	; 0x30
   12fd0:	bl	12b60 <abort@plt+0x1e40>
   12fd4:	add	r3, sp, #48	; 0x30
   12fd8:	mvn	r2, #0
   12fdc:	mov	r1, r5
   12fe0:	mov	r0, r4
   12fe4:	bl	12934 <abort@plt+0x1c14>
   12fe8:	add	sp, sp, #100	; 0x64
   12fec:	pop	{r4, r5, pc}
   12ff0:	push	{r4, r5, r6, r7, lr}
   12ff4:	sub	sp, sp, #52	; 0x34
   12ff8:	mov	r4, r0
   12ffc:	mov	r6, r1
   13000:	mov	r7, r2
   13004:	mov	r5, r3
   13008:	mov	ip, sp
   1300c:	ldr	lr, [pc, #64]	; 13054 <abort@plt+0x2334>
   13010:	ldm	lr!, {r0, r1, r2, r3}
   13014:	stmia	ip!, {r0, r1, r2, r3}
   13018:	ldm	lr!, {r0, r1, r2, r3}
   1301c:	stmia	ip!, {r0, r1, r2, r3}
   13020:	ldm	lr, {r0, r1, r2, r3}
   13024:	stm	ip, {r0, r1, r2, r3}
   13028:	mov	r2, r7
   1302c:	mov	r1, r6
   13030:	mov	r0, sp
   13034:	bl	12bbc <abort@plt+0x1e9c>
   13038:	mov	r3, sp
   1303c:	ldr	r2, [sp, #72]	; 0x48
   13040:	mov	r1, r5
   13044:	mov	r0, r4
   13048:	bl	12934 <abort@plt+0x1c14>
   1304c:	add	sp, sp, #52	; 0x34
   13050:	pop	{r4, r5, r6, r7, pc}
   13054:	andeq	r5, r2, ip, lsr r2
   13058:	push	{lr}		; (str lr, [sp, #-4]!)
   1305c:	sub	sp, sp, #12
   13060:	mvn	ip, #0
   13064:	str	ip, [sp]
   13068:	bl	12ff0 <abort@plt+0x22d0>
   1306c:	add	sp, sp, #12
   13070:	pop	{pc}		; (ldr pc, [sp], #4)
   13074:	push	{r4, lr}
   13078:	mov	r3, r2
   1307c:	mov	r2, r1
   13080:	mov	r1, r0
   13084:	mov	r0, #0
   13088:	bl	13058 <abort@plt+0x2338>
   1308c:	pop	{r4, pc}
   13090:	push	{lr}		; (str lr, [sp, #-4]!)
   13094:	sub	sp, sp, #12
   13098:	str	r3, [sp]
   1309c:	mov	r3, r2
   130a0:	mov	r2, r1
   130a4:	mov	r1, r0
   130a8:	mov	r0, #0
   130ac:	bl	12ff0 <abort@plt+0x22d0>
   130b0:	add	sp, sp, #12
   130b4:	pop	{pc}		; (ldr pc, [sp], #4)
   130b8:	push	{r4, lr}
   130bc:	ldr	r3, [pc, #4]	; 130c8 <abort@plt+0x23a8>
   130c0:	bl	12934 <abort@plt+0x1c14>
   130c4:	pop	{r4, pc}
   130c8:	andeq	r5, r2, r0, ror #1
   130cc:	push	{r4, lr}
   130d0:	mov	r2, r1
   130d4:	mov	r1, r0
   130d8:	mov	r0, #0
   130dc:	bl	130b8 <abort@plt+0x2398>
   130e0:	pop	{r4, pc}
   130e4:	push	{r4, lr}
   130e8:	mvn	r2, #0
   130ec:	bl	130b8 <abort@plt+0x2398>
   130f0:	pop	{r4, pc}
   130f4:	push	{r4, lr}
   130f8:	mov	r1, r0
   130fc:	mov	r0, #0
   13100:	bl	130e4 <abort@plt+0x23c4>
   13104:	pop	{r4, pc}
   13108:	push	{r4, r5, r6, lr}
   1310c:	sub	sp, sp, #32
   13110:	mov	r4, r0
   13114:	ldr	r5, [sp, #48]	; 0x30
   13118:	ldr	r6, [sp, #52]	; 0x34
   1311c:	cmp	r1, #0
   13120:	beq	131d8 <abort@plt+0x24b8>
   13124:	str	r3, [sp, #4]
   13128:	str	r2, [sp]
   1312c:	mov	r3, r1
   13130:	ldr	r2, [pc, #940]	; 134e4 <abort@plt+0x27c4>
   13134:	mov	r1, #1
   13138:	bl	10cc0 <__fprintf_chk@plt>
   1313c:	mov	r2, #5
   13140:	ldr	r1, [pc, #928]	; 134e8 <abort@plt+0x27c8>
   13144:	mov	r0, #0
   13148:	bl	10ba0 <dcgettext@plt>
   1314c:	ldr	r3, [pc, #920]	; 134ec <abort@plt+0x27cc>
   13150:	str	r3, [sp]
   13154:	mov	r3, r0
   13158:	ldr	r2, [pc, #912]	; 134f0 <abort@plt+0x27d0>
   1315c:	mov	r1, #1
   13160:	mov	r0, r4
   13164:	bl	10cc0 <__fprintf_chk@plt>
   13168:	mov	r1, r4
   1316c:	mov	r0, #10
   13170:	bl	10b94 <fputc_unlocked@plt>
   13174:	mov	r2, #5
   13178:	ldr	r1, [pc, #884]	; 134f4 <abort@plt+0x27d4>
   1317c:	mov	r0, #0
   13180:	bl	10ba0 <dcgettext@plt>
   13184:	ldr	r3, [pc, #876]	; 134f8 <abort@plt+0x27d8>
   13188:	mov	r2, r0
   1318c:	mov	r1, #1
   13190:	mov	r0, r4
   13194:	bl	10cc0 <__fprintf_chk@plt>
   13198:	mov	r1, r4
   1319c:	mov	r0, #10
   131a0:	bl	10b94 <fputc_unlocked@plt>
   131a4:	cmp	r6, #9
   131a8:	ldrls	pc, [pc, r6, lsl #2]
   131ac:	b	1347c <abort@plt+0x275c>
   131b0:	andeq	r3, r1, r4, lsl r2
   131b4:	strdeq	r3, [r1], -r0
   131b8:	andeq	r3, r1, ip, lsl r2
   131bc:	andeq	r3, r1, ip, asr #4
   131c0:	andeq	r3, r1, r4, lsl #5
   131c4:	andeq	r3, r1, r4, asr #5
   131c8:	andeq	r3, r1, ip, lsl #6
   131cc:	andeq	r3, r1, ip, asr r3
   131d0:			; <UNDEFINED> instruction: 0x000133b4
   131d4:	andeq	r3, r1, r4, lsl r4
   131d8:	str	r3, [sp]
   131dc:	mov	r3, r2
   131e0:	ldr	r2, [pc, #788]	; 134fc <abort@plt+0x27dc>
   131e4:	mov	r1, #1
   131e8:	bl	10cc0 <__fprintf_chk@plt>
   131ec:	b	1313c <abort@plt+0x241c>
   131f0:	mov	r2, #5
   131f4:	ldr	r1, [pc, #772]	; 13500 <abort@plt+0x27e0>
   131f8:	mov	r0, #0
   131fc:	bl	10ba0 <dcgettext@plt>
   13200:	ldr	r3, [r5]
   13204:	mov	r2, r0
   13208:	mov	r1, #1
   1320c:	mov	r0, r4
   13210:	bl	10cc0 <__fprintf_chk@plt>
   13214:	add	sp, sp, #32
   13218:	pop	{r4, r5, r6, pc}
   1321c:	mov	r2, #5
   13220:	ldr	r1, [pc, #732]	; 13504 <abort@plt+0x27e4>
   13224:	mov	r0, #0
   13228:	bl	10ba0 <dcgettext@plt>
   1322c:	ldr	r3, [r5]
   13230:	ldr	r2, [r5, #4]
   13234:	str	r2, [sp]
   13238:	mov	r2, r0
   1323c:	mov	r1, #1
   13240:	mov	r0, r4
   13244:	bl	10cc0 <__fprintf_chk@plt>
   13248:	b	13214 <abort@plt+0x24f4>
   1324c:	mov	r2, #5
   13250:	ldr	r1, [pc, #688]	; 13508 <abort@plt+0x27e8>
   13254:	mov	r0, #0
   13258:	bl	10ba0 <dcgettext@plt>
   1325c:	ldr	r3, [r5]
   13260:	ldr	r2, [r5, #8]
   13264:	str	r2, [sp, #4]
   13268:	ldr	r2, [r5, #4]
   1326c:	str	r2, [sp]
   13270:	mov	r2, r0
   13274:	mov	r1, #1
   13278:	mov	r0, r4
   1327c:	bl	10cc0 <__fprintf_chk@plt>
   13280:	b	13214 <abort@plt+0x24f4>
   13284:	mov	r2, #5
   13288:	ldr	r1, [pc, #636]	; 1350c <abort@plt+0x27ec>
   1328c:	mov	r0, #0
   13290:	bl	10ba0 <dcgettext@plt>
   13294:	ldr	r3, [r5]
   13298:	ldr	r2, [r5, #12]
   1329c:	str	r2, [sp, #8]
   132a0:	ldr	r2, [r5, #8]
   132a4:	str	r2, [sp, #4]
   132a8:	ldr	r2, [r5, #4]
   132ac:	str	r2, [sp]
   132b0:	mov	r2, r0
   132b4:	mov	r1, #1
   132b8:	mov	r0, r4
   132bc:	bl	10cc0 <__fprintf_chk@plt>
   132c0:	b	13214 <abort@plt+0x24f4>
   132c4:	mov	r2, #5
   132c8:	ldr	r1, [pc, #576]	; 13510 <abort@plt+0x27f0>
   132cc:	mov	r0, #0
   132d0:	bl	10ba0 <dcgettext@plt>
   132d4:	ldr	r3, [r5]
   132d8:	ldr	r2, [r5, #16]
   132dc:	str	r2, [sp, #12]
   132e0:	ldr	r2, [r5, #12]
   132e4:	str	r2, [sp, #8]
   132e8:	ldr	r2, [r5, #8]
   132ec:	str	r2, [sp, #4]
   132f0:	ldr	r2, [r5, #4]
   132f4:	str	r2, [sp]
   132f8:	mov	r2, r0
   132fc:	mov	r1, #1
   13300:	mov	r0, r4
   13304:	bl	10cc0 <__fprintf_chk@plt>
   13308:	b	13214 <abort@plt+0x24f4>
   1330c:	mov	r2, #5
   13310:	ldr	r1, [pc, #508]	; 13514 <abort@plt+0x27f4>
   13314:	mov	r0, #0
   13318:	bl	10ba0 <dcgettext@plt>
   1331c:	ldr	r3, [r5]
   13320:	ldr	r2, [r5, #20]
   13324:	str	r2, [sp, #16]
   13328:	ldr	r2, [r5, #16]
   1332c:	str	r2, [sp, #12]
   13330:	ldr	r2, [r5, #12]
   13334:	str	r2, [sp, #8]
   13338:	ldr	r2, [r5, #8]
   1333c:	str	r2, [sp, #4]
   13340:	ldr	r2, [r5, #4]
   13344:	str	r2, [sp]
   13348:	mov	r2, r0
   1334c:	mov	r1, #1
   13350:	mov	r0, r4
   13354:	bl	10cc0 <__fprintf_chk@plt>
   13358:	b	13214 <abort@plt+0x24f4>
   1335c:	mov	r2, #5
   13360:	ldr	r1, [pc, #432]	; 13518 <abort@plt+0x27f8>
   13364:	mov	r0, #0
   13368:	bl	10ba0 <dcgettext@plt>
   1336c:	ldr	r3, [r5]
   13370:	ldr	r2, [r5, #24]
   13374:	str	r2, [sp, #20]
   13378:	ldr	r2, [r5, #20]
   1337c:	str	r2, [sp, #16]
   13380:	ldr	r2, [r5, #16]
   13384:	str	r2, [sp, #12]
   13388:	ldr	r2, [r5, #12]
   1338c:	str	r2, [sp, #8]
   13390:	ldr	r2, [r5, #8]
   13394:	str	r2, [sp, #4]
   13398:	ldr	r2, [r5, #4]
   1339c:	str	r2, [sp]
   133a0:	mov	r2, r0
   133a4:	mov	r1, #1
   133a8:	mov	r0, r4
   133ac:	bl	10cc0 <__fprintf_chk@plt>
   133b0:	b	13214 <abort@plt+0x24f4>
   133b4:	mov	r2, #5
   133b8:	ldr	r1, [pc, #348]	; 1351c <abort@plt+0x27fc>
   133bc:	mov	r0, #0
   133c0:	bl	10ba0 <dcgettext@plt>
   133c4:	ldr	r3, [r5]
   133c8:	ldr	r2, [r5, #28]
   133cc:	str	r2, [sp, #24]
   133d0:	ldr	r2, [r5, #24]
   133d4:	str	r2, [sp, #20]
   133d8:	ldr	r2, [r5, #20]
   133dc:	str	r2, [sp, #16]
   133e0:	ldr	r2, [r5, #16]
   133e4:	str	r2, [sp, #12]
   133e8:	ldr	r2, [r5, #12]
   133ec:	str	r2, [sp, #8]
   133f0:	ldr	r2, [r5, #8]
   133f4:	str	r2, [sp, #4]
   133f8:	ldr	r2, [r5, #4]
   133fc:	str	r2, [sp]
   13400:	mov	r2, r0
   13404:	mov	r1, #1
   13408:	mov	r0, r4
   1340c:	bl	10cc0 <__fprintf_chk@plt>
   13410:	b	13214 <abort@plt+0x24f4>
   13414:	mov	r2, #5
   13418:	ldr	r1, [pc, #256]	; 13520 <abort@plt+0x2800>
   1341c:	mov	r0, #0
   13420:	bl	10ba0 <dcgettext@plt>
   13424:	ldr	r3, [r5]
   13428:	ldr	r2, [r5, #32]
   1342c:	str	r2, [sp, #28]
   13430:	ldr	r2, [r5, #28]
   13434:	str	r2, [sp, #24]
   13438:	ldr	r2, [r5, #24]
   1343c:	str	r2, [sp, #20]
   13440:	ldr	r2, [r5, #20]
   13444:	str	r2, [sp, #16]
   13448:	ldr	r2, [r5, #16]
   1344c:	str	r2, [sp, #12]
   13450:	ldr	r2, [r5, #12]
   13454:	str	r2, [sp, #8]
   13458:	ldr	r2, [r5, #8]
   1345c:	str	r2, [sp, #4]
   13460:	ldr	r2, [r5, #4]
   13464:	str	r2, [sp]
   13468:	mov	r2, r0
   1346c:	mov	r1, #1
   13470:	mov	r0, r4
   13474:	bl	10cc0 <__fprintf_chk@plt>
   13478:	b	13214 <abort@plt+0x24f4>
   1347c:	mov	r2, #5
   13480:	ldr	r1, [pc, #156]	; 13524 <abort@plt+0x2804>
   13484:	mov	r0, #0
   13488:	bl	10ba0 <dcgettext@plt>
   1348c:	ldr	r3, [r5]
   13490:	ldr	r2, [r5, #32]
   13494:	str	r2, [sp, #28]
   13498:	ldr	r2, [r5, #28]
   1349c:	str	r2, [sp, #24]
   134a0:	ldr	r2, [r5, #24]
   134a4:	str	r2, [sp, #20]
   134a8:	ldr	r2, [r5, #20]
   134ac:	str	r2, [sp, #16]
   134b0:	ldr	r2, [r5, #16]
   134b4:	str	r2, [sp, #12]
   134b8:	ldr	r2, [r5, #12]
   134bc:	str	r2, [sp, #8]
   134c0:	ldr	r2, [r5, #8]
   134c4:	str	r2, [sp, #4]
   134c8:	ldr	r2, [r5, #4]
   134cc:	str	r2, [sp]
   134d0:	mov	r2, r0
   134d4:	mov	r1, #1
   134d8:	mov	r0, r4
   134dc:	bl	10cc0 <__fprintf_chk@plt>
   134e0:	b	13214 <abort@plt+0x24f4>
   134e4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   134e8:	andeq	r4, r1, r8, lsl #22
   134ec:	andeq	r0, r0, r6, ror #15
   134f0:	andeq	r4, r1, r0, ror #27
   134f4:	andeq	r4, r1, ip, lsl #22
   134f8:			; <UNDEFINED> instruction: 0x00014bb8
   134fc:	andeq	r4, r1, r0, lsl #22
   13500:	ldrdeq	r4, [r1], -ip
   13504:	andeq	r4, r1, ip, ror #23
   13508:	andeq	r4, r1, r4, lsl #24
   1350c:	andeq	r4, r1, r0, lsr #24
   13510:	andeq	r4, r1, r0, asr #24
   13514:	andeq	r4, r1, r4, ror #24
   13518:	andeq	r4, r1, ip, lsl #25
   1351c:			; <UNDEFINED> instruction: 0x00014cb8
   13520:	andeq	r4, r1, r8, ror #25
   13524:	andeq	r4, r1, ip, lsl sp
   13528:	push	{r4, r5, lr}
   1352c:	sub	sp, sp, #12
   13530:	ldr	r5, [sp, #24]
   13534:	ldr	ip, [r5]
   13538:	cmp	ip, #0
   1353c:	beq	1356c <abort@plt+0x284c>
   13540:	mov	lr, r5
   13544:	mov	ip, #0
   13548:	add	ip, ip, #1
   1354c:	ldr	r4, [lr, #4]!
   13550:	cmp	r4, #0
   13554:	bne	13548 <abort@plt+0x2828>
   13558:	str	ip, [sp, #4]
   1355c:	str	r5, [sp]
   13560:	bl	13108 <abort@plt+0x23e8>
   13564:	add	sp, sp, #12
   13568:	pop	{r4, r5, pc}
   1356c:	mov	ip, #0
   13570:	b	13558 <abort@plt+0x2838>
   13574:	push	{r4, r5, lr}
   13578:	sub	sp, sp, #52	; 0x34
   1357c:	ldr	r4, [sp, #64]	; 0x40
   13580:	sub	r4, r4, #4
   13584:	add	r5, sp, #4
   13588:	mov	ip, #0
   1358c:	ldr	lr, [r4, #4]!
   13590:	str	lr, [r5, #4]!
   13594:	cmp	lr, #0
   13598:	beq	135a8 <abort@plt+0x2888>
   1359c:	add	ip, ip, #1
   135a0:	cmp	ip, #10
   135a4:	bne	1358c <abort@plt+0x286c>
   135a8:	str	ip, [sp, #4]
   135ac:	add	ip, sp, #8
   135b0:	str	ip, [sp]
   135b4:	bl	13108 <abort@plt+0x23e8>
   135b8:	add	sp, sp, #52	; 0x34
   135bc:	pop	{r4, r5, pc}
   135c0:	push	{r3}		; (str r3, [sp, #-4]!)
   135c4:	push	{lr}		; (str lr, [sp, #-4]!)
   135c8:	sub	sp, sp, #16
   135cc:	add	r3, sp, #24
   135d0:	str	r3, [sp, #12]
   135d4:	str	r3, [sp]
   135d8:	ldr	r3, [sp, #20]
   135dc:	bl	13574 <abort@plt+0x2854>
   135e0:	add	sp, sp, #16
   135e4:	pop	{lr}		; (ldr lr, [sp], #4)
   135e8:	add	sp, sp, #4
   135ec:	bx	lr
   135f0:	push	{r4, lr}
   135f4:	ldr	r3, [pc, #112]	; 1366c <abort@plt+0x294c>
   135f8:	ldr	r1, [r3]
   135fc:	mov	r0, #10
   13600:	bl	10b94 <fputc_unlocked@plt>
   13604:	mov	r2, #5
   13608:	ldr	r1, [pc, #96]	; 13670 <abort@plt+0x2950>
   1360c:	mov	r0, #0
   13610:	bl	10ba0 <dcgettext@plt>
   13614:	ldr	r2, [pc, #88]	; 13674 <abort@plt+0x2954>
   13618:	mov	r1, r0
   1361c:	mov	r0, #1
   13620:	bl	10ca8 <__printf_chk@plt>
   13624:	mov	r2, #5
   13628:	ldr	r1, [pc, #72]	; 13678 <abort@plt+0x2958>
   1362c:	mov	r0, #0
   13630:	bl	10ba0 <dcgettext@plt>
   13634:	ldr	r3, [pc, #64]	; 1367c <abort@plt+0x295c>
   13638:	ldr	r2, [pc, #64]	; 13680 <abort@plt+0x2960>
   1363c:	mov	r1, r0
   13640:	mov	r0, #1
   13644:	bl	10ca8 <__printf_chk@plt>
   13648:	mov	r2, #5
   1364c:	ldr	r1, [pc, #48]	; 13684 <abort@plt+0x2964>
   13650:	mov	r0, #0
   13654:	bl	10ba0 <dcgettext@plt>
   13658:	ldr	r2, [pc, #40]	; 13688 <abort@plt+0x2968>
   1365c:	mov	r1, r0
   13660:	mov	r0, #1
   13664:	bl	10ca8 <__printf_chk@plt>
   13668:	pop	{r4, pc}
   1366c:	andeq	r5, r2, r4, lsr #2
   13670:	andeq	r4, r1, r8, asr sp
   13674:	andeq	r4, r1, ip, ror #26
   13678:	andeq	r4, r1, r4, lsl #27
   1367c:	ldrdeq	r4, [r1], -r0
   13680:	strdeq	r4, [r1], -r8
   13684:	muleq	r1, r8, sp
   13688:	andeq	r4, r1, r0, asr #27
   1368c:	push	{r4, lr}
   13690:	bl	13cc0 <abort@plt+0x2fa0>
   13694:	cmp	r0, #0
   13698:	popne	{r4, pc}
   1369c:	bl	13c30 <abort@plt+0x2f10>
   136a0:	push	{r4, lr}
   136a4:	bl	13cc0 <abort@plt+0x2fa0>
   136a8:	cmp	r0, #0
   136ac:	popne	{r4, pc}
   136b0:	bl	13c30 <abort@plt+0x2f10>
   136b4:	push	{r4, lr}
   136b8:	bl	1368c <abort@plt+0x296c>
   136bc:	pop	{r4, pc}
   136c0:	push	{r4, r5, r6, lr}
   136c4:	mov	r5, r0
   136c8:	mov	r4, r1
   136cc:	bl	13cf0 <abort@plt+0x2fd0>
   136d0:	cmp	r0, #0
   136d4:	popne	{r4, r5, r6, pc}
   136d8:	adds	r4, r4, #0
   136dc:	movne	r4, #1
   136e0:	cmp	r5, #0
   136e4:	orreq	r4, r4, #1
   136e8:	cmp	r4, #0
   136ec:	popeq	{r4, r5, r6, pc}
   136f0:	bl	13c30 <abort@plt+0x2f10>
   136f4:	push	{r4, lr}
   136f8:	cmp	r1, #0
   136fc:	orreq	r1, r1, #1
   13700:	bl	13cf0 <abort@plt+0x2fd0>
   13704:	cmp	r0, #0
   13708:	popne	{r4, pc}
   1370c:	bl	13c30 <abort@plt+0x2f10>
   13710:	push	{r4, r5, r6, lr}
   13714:	mov	r6, r0
   13718:	mov	r5, r1
   1371c:	mov	r4, r2
   13720:	bl	14050 <abort@plt+0x3330>
   13724:	cmp	r0, #0
   13728:	popne	{r4, r5, r6, pc}
   1372c:	cmp	r6, #0
   13730:	beq	13740 <abort@plt+0x2a20>
   13734:	cmp	r5, #0
   13738:	cmpne	r4, #0
   1373c:	popeq	{r4, r5, r6, pc}
   13740:	bl	13c30 <abort@plt+0x2f10>
   13744:	push	{r4, lr}
   13748:	bl	13710 <abort@plt+0x29f0>
   1374c:	pop	{r4, pc}
   13750:	push	{r4, lr}
   13754:	mov	ip, r1
   13758:	mov	r3, r2
   1375c:	cmp	r2, #0
   13760:	cmpne	r1, #0
   13764:	moveq	r3, #1
   13768:	moveq	ip, r3
   1376c:	mov	r2, r3
   13770:	mov	r1, ip
   13774:	bl	14050 <abort@plt+0x3330>
   13778:	cmp	r0, #0
   1377c:	popne	{r4, pc}
   13780:	bl	13c30 <abort@plt+0x2f10>
   13784:	push	{r4, lr}
   13788:	mov	r2, r1
   1378c:	mov	r1, r0
   13790:	mov	r0, #0
   13794:	bl	13710 <abort@plt+0x29f0>
   13798:	pop	{r4, pc}
   1379c:	push	{r4, lr}
   137a0:	mov	r2, r1
   137a4:	mov	r1, r0
   137a8:	mov	r0, #0
   137ac:	bl	13750 <abort@plt+0x2a30>
   137b0:	pop	{r4, pc}
   137b4:	push	{r4, r5, r6, r7, r8, lr}
   137b8:	mov	r5, r1
   137bc:	mov	r6, r2
   137c0:	ldr	r4, [r1]
   137c4:	subs	r7, r0, #0
   137c8:	beq	137e4 <abort@plt+0x2ac4>
   137cc:	lsr	r2, r4, #1
   137d0:	add	r3, r2, #1
   137d4:	mvn	r3, r3
   137d8:	cmp	r4, r3
   137dc:	bls	13808 <abort@plt+0x2ae8>
   137e0:	bl	13c30 <abort@plt+0x2f10>
   137e4:	cmp	r4, #0
   137e8:	bne	13810 <abort@plt+0x2af0>
   137ec:	mov	r1, r2
   137f0:	mov	r0, #64	; 0x40
   137f4:	bl	141a4 <abort@plt+0x3484>
   137f8:	cmp	r0, #0
   137fc:	movne	r4, r0
   13800:	addeq	r4, r0, #1
   13804:	b	13810 <abort@plt+0x2af0>
   13808:	add	r4, r4, #1
   1380c:	add	r4, r4, r2
   13810:	mov	r2, r6
   13814:	mov	r1, r4
   13818:	mov	r0, r7
   1381c:	bl	13710 <abort@plt+0x29f0>
   13820:	str	r4, [r5]
   13824:	pop	{r4, r5, r6, r7, r8, pc}
   13828:	push	{r4, lr}
   1382c:	mov	r2, #1
   13830:	bl	137b4 <abort@plt+0x2a94>
   13834:	pop	{r4, pc}
   13838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1383c:	sub	sp, sp, #12
   13840:	mov	fp, r0
   13844:	mov	sl, r1
   13848:	mov	r9, r2
   1384c:	mov	r7, r3
   13850:	ldr	r6, [sp, #48]	; 0x30
   13854:	ldr	r5, [r1]
   13858:	asrs	r4, r5, #1
   1385c:	bmi	139b8 <abort@plt+0x2c98>
   13860:	cmp	r5, #0
   13864:	blt	139cc <abort@plt+0x2cac>
   13868:	mvn	r3, #-2147483648	; 0x80000000
   1386c:	sub	r3, r3, r4
   13870:	cmp	r5, r3
   13874:	movle	r3, #0
   13878:	movgt	r3, #1
   1387c:	cmp	r3, #0
   13880:	addeq	r4, r4, r5
   13884:	mvnne	r4, #-2147483648	; 0x80000000
   13888:	mvn	r8, r7
   1388c:	lsr	r8, r8, #31
   13890:	cmp	r7, r4
   13894:	movge	r3, #0
   13898:	andlt	r3, r8, #1
   1389c:	cmp	r3, #0
   138a0:	movne	r4, r7
   138a4:	cmp	r6, #0
   138a8:	blt	139e0 <abort@plt+0x2cc0>
   138ac:	cmp	r6, #0
   138b0:	beq	13a8c <abort@plt+0x2d6c>
   138b4:	cmp	r4, #0
   138b8:	blt	13a3c <abort@plt+0x2d1c>
   138bc:	mov	r1, r6
   138c0:	mvn	r0, #-2147483648	; 0x80000000
   138c4:	bl	143b0 <abort@plt+0x3690>
   138c8:	cmp	r0, r4
   138cc:	movge	r0, #0
   138d0:	movlt	r0, #1
   138d4:	cmp	r0, #0
   138d8:	mvnne	r3, #-2147483648	; 0x80000000
   138dc:	strne	r3, [sp, #4]
   138e0:	beq	13a74 <abort@plt+0x2d54>
   138e4:	mov	r1, r6
   138e8:	ldr	r0, [sp, #4]
   138ec:	bl	143b0 <abort@plt+0x3690>
   138f0:	mov	r4, r0
   138f4:	mov	r1, r6
   138f8:	ldr	r0, [sp, #4]
   138fc:	bl	145d0 <abort@plt+0x38b0>
   13900:	ldr	r3, [sp, #4]
   13904:	sub	r1, r3, r1
   13908:	cmp	fp, #0
   1390c:	moveq	r3, #0
   13910:	streq	r3, [sl]
   13914:	sub	r3, r4, r5
   13918:	cmp	r3, r9
   1391c:	bge	139a4 <abort@plt+0x2c84>
   13920:	cmp	r9, #0
   13924:	blt	13a98 <abort@plt+0x2d78>
   13928:	cmp	r5, #0
   1392c:	blt	13aac <abort@plt+0x2d8c>
   13930:	mvn	r3, #-2147483648	; 0x80000000
   13934:	sub	r3, r3, r9
   13938:	cmp	r5, r3
   1393c:	movle	r3, #0
   13940:	movgt	r3, #1
   13944:	cmp	r3, #0
   13948:	bne	13b54 <abort@plt+0x2e34>
   1394c:	add	r5, r5, r9
   13950:	mov	r4, r5
   13954:	cmp	r7, r5
   13958:	movge	r7, #0
   1395c:	andlt	r7, r8, #1
   13960:	cmp	r7, #0
   13964:	bne	13b54 <abort@plt+0x2e34>
   13968:	cmp	r6, #0
   1396c:	blt	13ac0 <abort@plt+0x2da0>
   13970:	cmp	r6, #0
   13974:	beq	139a0 <abort@plt+0x2c80>
   13978:	cmp	r5, #0
   1397c:	blt	13b1c <abort@plt+0x2dfc>
   13980:	mov	r1, r6
   13984:	mvn	r0, #-2147483648	; 0x80000000
   13988:	bl	143b0 <abort@plt+0x3690>
   1398c:	cmp	r5, r0
   13990:	movle	r0, #0
   13994:	movgt	r0, #1
   13998:	cmp	r0, #0
   1399c:	bne	13b54 <abort@plt+0x2e34>
   139a0:	mul	r1, r5, r6
   139a4:	mov	r0, fp
   139a8:	bl	136c0 <abort@plt+0x29a0>
   139ac:	str	r4, [sl]
   139b0:	add	sp, sp, #12
   139b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139b8:	rsb	r3, r4, #-2147483648	; 0x80000000
   139bc:	cmp	r5, r3
   139c0:	movge	r3, #0
   139c4:	movlt	r3, #1
   139c8:	b	1387c <abort@plt+0x2b5c>
   139cc:	rsb	r3, r5, #-2147483648	; 0x80000000
   139d0:	cmp	r4, r3
   139d4:	movge	r3, #0
   139d8:	movlt	r3, #1
   139dc:	b	1387c <abort@plt+0x2b5c>
   139e0:	cmp	r4, #0
   139e4:	blt	13a0c <abort@plt+0x2cec>
   139e8:	cmn	r6, #1
   139ec:	beq	13a28 <abort@plt+0x2d08>
   139f0:	mov	r1, r6
   139f4:	mov	r0, #-2147483648	; 0x80000000
   139f8:	bl	143b0 <abort@plt+0x3690>
   139fc:	cmp	r0, r4
   13a00:	movge	r0, #0
   13a04:	movlt	r0, #1
   13a08:	b	138d4 <abort@plt+0x2bb4>
   13a0c:	mov	r1, r6
   13a10:	mvn	r0, #-2147483648	; 0x80000000
   13a14:	bl	143b0 <abort@plt+0x3690>
   13a18:	cmp	r0, r4
   13a1c:	movle	r0, #0
   13a20:	movgt	r0, #1
   13a24:	b	138d4 <abort@plt+0x2bb4>
   13a28:	add	r0, r4, #-2147483648	; 0x80000000
   13a2c:	cmp	r0, #0
   13a30:	movle	r0, #0
   13a34:	movgt	r0, #1
   13a38:	b	138d4 <abort@plt+0x2bb4>
   13a3c:	cmn	r4, #1
   13a40:	beq	13a60 <abort@plt+0x2d40>
   13a44:	mov	r1, r4
   13a48:	mov	r0, #-2147483648	; 0x80000000
   13a4c:	bl	143b0 <abort@plt+0x3690>
   13a50:	cmp	r6, r0
   13a54:	movle	r0, #0
   13a58:	movgt	r0, #1
   13a5c:	b	138d4 <abort@plt+0x2bb4>
   13a60:	add	r0, r6, #-2147483648	; 0x80000000
   13a64:	cmp	r0, #0
   13a68:	movle	r0, #0
   13a6c:	movgt	r0, #1
   13a70:	b	138d4 <abort@plt+0x2bb4>
   13a74:	mul	r1, r6, r4
   13a78:	cmp	r1, #63	; 0x3f
   13a7c:	movle	r3, #64	; 0x40
   13a80:	strle	r3, [sp, #4]
   13a84:	bgt	13908 <abort@plt+0x2be8>
   13a88:	b	138e4 <abort@plt+0x2bc4>
   13a8c:	mov	r3, #64	; 0x40
   13a90:	str	r3, [sp, #4]
   13a94:	b	138e4 <abort@plt+0x2bc4>
   13a98:	rsb	r3, r9, #-2147483648	; 0x80000000
   13a9c:	cmp	r5, r3
   13aa0:	movge	r3, #0
   13aa4:	movlt	r3, #1
   13aa8:	b	13944 <abort@plt+0x2c24>
   13aac:	rsb	r3, r5, #-2147483648	; 0x80000000
   13ab0:	cmp	r9, r3
   13ab4:	movge	r3, #0
   13ab8:	movlt	r3, #1
   13abc:	b	13944 <abort@plt+0x2c24>
   13ac0:	cmp	r5, #0
   13ac4:	blt	13aec <abort@plt+0x2dcc>
   13ac8:	cmn	r6, #1
   13acc:	beq	13b08 <abort@plt+0x2de8>
   13ad0:	mov	r1, r6
   13ad4:	mov	r0, #-2147483648	; 0x80000000
   13ad8:	bl	143b0 <abort@plt+0x3690>
   13adc:	cmp	r5, r0
   13ae0:	movle	r0, #0
   13ae4:	movgt	r0, #1
   13ae8:	b	13998 <abort@plt+0x2c78>
   13aec:	mov	r1, r6
   13af0:	mvn	r0, #-2147483648	; 0x80000000
   13af4:	bl	143b0 <abort@plt+0x3690>
   13af8:	cmp	r5, r0
   13afc:	movge	r0, #0
   13b00:	movlt	r0, #1
   13b04:	b	13998 <abort@plt+0x2c78>
   13b08:	add	r0, r5, #-2147483648	; 0x80000000
   13b0c:	cmp	r0, #0
   13b10:	movle	r0, #0
   13b14:	movgt	r0, #1
   13b18:	b	13998 <abort@plt+0x2c78>
   13b1c:	cmn	r5, #1
   13b20:	beq	13b40 <abort@plt+0x2e20>
   13b24:	mov	r1, r5
   13b28:	mov	r0, #-2147483648	; 0x80000000
   13b2c:	bl	143b0 <abort@plt+0x3690>
   13b30:	cmp	r6, r0
   13b34:	movle	r0, #0
   13b38:	movgt	r0, #1
   13b3c:	b	13998 <abort@plt+0x2c78>
   13b40:	add	r0, r6, #-2147483648	; 0x80000000
   13b44:	cmp	r0, #0
   13b48:	movle	r0, #0
   13b4c:	movgt	r0, #1
   13b50:	b	13998 <abort@plt+0x2c78>
   13b54:	bl	13c30 <abort@plt+0x2f10>
   13b58:	push	{r4, lr}
   13b5c:	bl	13c70 <abort@plt+0x2f50>
   13b60:	cmp	r0, #0
   13b64:	popne	{r4, pc}
   13b68:	bl	13c30 <abort@plt+0x2f10>
   13b6c:	push	{r4, lr}
   13b70:	mov	r1, #1
   13b74:	bl	13b58 <abort@plt+0x2e38>
   13b78:	pop	{r4, pc}
   13b7c:	push	{r4, lr}
   13b80:	bl	13c70 <abort@plt+0x2f50>
   13b84:	cmp	r0, #0
   13b88:	popne	{r4, pc}
   13b8c:	bl	13c30 <abort@plt+0x2f10>
   13b90:	push	{r4, lr}
   13b94:	mov	r1, #1
   13b98:	bl	13b7c <abort@plt+0x2e5c>
   13b9c:	pop	{r4, pc}
   13ba0:	push	{r4, r5, r6, lr}
   13ba4:	mov	r5, r0
   13ba8:	mov	r4, r1
   13bac:	mov	r0, r1
   13bb0:	bl	1368c <abort@plt+0x296c>
   13bb4:	mov	r2, r4
   13bb8:	mov	r1, r5
   13bbc:	bl	10b70 <memcpy@plt>
   13bc0:	pop	{r4, r5, r6, pc}
   13bc4:	push	{r4, r5, r6, lr}
   13bc8:	mov	r5, r0
   13bcc:	mov	r4, r1
   13bd0:	mov	r0, r1
   13bd4:	bl	136a0 <abort@plt+0x2980>
   13bd8:	mov	r2, r4
   13bdc:	mov	r1, r5
   13be0:	bl	10b70 <memcpy@plt>
   13be4:	pop	{r4, r5, r6, pc}
   13be8:	push	{r4, r5, r6, lr}
   13bec:	mov	r5, r0
   13bf0:	mov	r4, r1
   13bf4:	add	r0, r1, #1
   13bf8:	bl	136a0 <abort@plt+0x2980>
   13bfc:	mov	r2, #0
   13c00:	strb	r2, [r0, r4]
   13c04:	mov	r2, r4
   13c08:	mov	r1, r5
   13c0c:	bl	10b70 <memcpy@plt>
   13c10:	pop	{r4, r5, r6, pc}
   13c14:	push	{r4, lr}
   13c18:	mov	r4, r0
   13c1c:	bl	10c78 <strlen@plt>
   13c20:	add	r1, r0, #1
   13c24:	mov	r0, r4
   13c28:	bl	13ba0 <abort@plt+0x2e80>
   13c2c:	pop	{r4, pc}
   13c30:	push	{r4, lr}
   13c34:	ldr	r3, [pc, #40]	; 13c64 <abort@plt+0x2f44>
   13c38:	ldr	r4, [r3]
   13c3c:	mov	r2, #5
   13c40:	ldr	r1, [pc, #32]	; 13c68 <abort@plt+0x2f48>
   13c44:	mov	r0, #0
   13c48:	bl	10ba0 <dcgettext@plt>
   13c4c:	mov	r3, r0
   13c50:	ldr	r2, [pc, #20]	; 13c6c <abort@plt+0x2f4c>
   13c54:	mov	r1, #0
   13c58:	mov	r0, r4
   13c5c:	bl	10c18 <error@plt>
   13c60:	bl	10d20 <abort@plt>
   13c64:	andeq	r5, r2, ip, asr #1
   13c68:	andeq	r4, r1, r0, lsl lr
   13c6c:	muleq	r1, r0, r9
   13c70:	push	{r4, lr}
   13c74:	mov	r2, r0
   13c78:	mov	r3, r1
   13c7c:	cmp	r1, #0
   13c80:	cmpne	r0, #0
   13c84:	moveq	r3, #1
   13c88:	moveq	r2, r3
   13c8c:	umull	r0, r1, r2, r3
   13c90:	cmp	r0, #0
   13c94:	cmpge	r1, #0
   13c98:	bne	13cac <abort@plt+0x2f8c>
   13c9c:	mov	r1, r3
   13ca0:	mov	r0, r2
   13ca4:	bl	10b1c <calloc@plt>
   13ca8:	pop	{r4, pc}
   13cac:	bl	10c84 <__errno_location@plt>
   13cb0:	mov	r3, #12
   13cb4:	str	r3, [r0]
   13cb8:	mov	r0, #0
   13cbc:	pop	{r4, pc}
   13cc0:	push	{r4, lr}
   13cc4:	cmp	r0, #0
   13cc8:	moveq	r0, #1
   13ccc:	cmp	r0, #0
   13cd0:	blt	13cdc <abort@plt+0x2fbc>
   13cd4:	bl	10c24 <malloc@plt>
   13cd8:	pop	{r4, pc}
   13cdc:	bl	10c84 <__errno_location@plt>
   13ce0:	mov	r3, #12
   13ce4:	str	r3, [r0]
   13ce8:	mov	r0, #0
   13cec:	pop	{r4, pc}
   13cf0:	push	{r4, lr}
   13cf4:	cmp	r0, #0
   13cf8:	beq	13d14 <abort@plt+0x2ff4>
   13cfc:	cmp	r1, #0
   13d00:	beq	13d20 <abort@plt+0x3000>
   13d04:	cmp	r1, #0
   13d08:	blt	13d2c <abort@plt+0x300c>
   13d0c:	bl	10bb8 <realloc@plt>
   13d10:	pop	{r4, pc}
   13d14:	mov	r0, r1
   13d18:	bl	13cc0 <abort@plt+0x2fa0>
   13d1c:	pop	{r4, pc}
   13d20:	bl	13ec4 <abort@plt+0x31a4>
   13d24:	mov	r0, #0
   13d28:	pop	{r4, pc}
   13d2c:	bl	10c84 <__errno_location@plt>
   13d30:	mov	r3, #12
   13d34:	str	r3, [r0]
   13d38:	mov	r0, #0
   13d3c:	pop	{r4, pc}
   13d40:	push	{r4, r5, r6, lr}
   13d44:	mov	r5, r0
   13d48:	bl	10c00 <__fpending@plt>
   13d4c:	mov	r6, r0
   13d50:	ldr	r4, [r5]
   13d54:	and	r4, r4, #32
   13d58:	mov	r0, r5
   13d5c:	bl	13db8 <abort@plt+0x3098>
   13d60:	cmp	r4, #0
   13d64:	bne	13d8c <abort@plt+0x306c>
   13d68:	cmp	r0, #0
   13d6c:	popeq	{r4, r5, r6, pc}
   13d70:	cmp	r6, #0
   13d74:	bne	13da8 <abort@plt+0x3088>
   13d78:	bl	10c84 <__errno_location@plt>
   13d7c:	ldr	r0, [r0]
   13d80:	subs	r0, r0, #9
   13d84:	mvnne	r0, #0
   13d88:	pop	{r4, r5, r6, pc}
   13d8c:	cmp	r0, #0
   13d90:	bne	13db0 <abort@plt+0x3090>
   13d94:	bl	10c84 <__errno_location@plt>
   13d98:	mov	r3, #0
   13d9c:	str	r3, [r0]
   13da0:	mvn	r0, #0
   13da4:	pop	{r4, r5, r6, pc}
   13da8:	mvn	r0, #0
   13dac:	pop	{r4, r5, r6, pc}
   13db0:	mvn	r0, #0
   13db4:	pop	{r4, r5, r6, pc}
   13db8:	push	{r4, r5, r6, lr}
   13dbc:	sub	sp, sp, #8
   13dc0:	mov	r4, r0
   13dc4:	bl	10cb4 <fileno@plt>
   13dc8:	cmp	r0, #0
   13dcc:	blt	13e44 <abort@plt+0x3124>
   13dd0:	mov	r0, r4
   13dd4:	bl	10c3c <__freading@plt>
   13dd8:	cmp	r0, #0
   13ddc:	beq	13e10 <abort@plt+0x30f0>
   13de0:	mov	r0, r4
   13de4:	bl	10cb4 <fileno@plt>
   13de8:	mov	r3, #1
   13dec:	str	r3, [sp]
   13df0:	mov	r2, #0
   13df4:	mov	r3, #0
   13df8:	bl	10be8 <lseek64@plt>
   13dfc:	mvn	r2, #0
   13e00:	mvn	r3, #0
   13e04:	cmp	r1, r3
   13e08:	cmpeq	r0, r2
   13e0c:	beq	13e50 <abort@plt+0x3130>
   13e10:	mov	r0, r4
   13e14:	bl	13e60 <abort@plt+0x3140>
   13e18:	cmp	r0, #0
   13e1c:	beq	13e50 <abort@plt+0x3130>
   13e20:	bl	10c84 <__errno_location@plt>
   13e24:	mov	r5, r0
   13e28:	ldr	r6, [r0]
   13e2c:	mov	r0, r4
   13e30:	bl	10ccc <fclose@plt>
   13e34:	cmp	r6, #0
   13e38:	strne	r6, [r5]
   13e3c:	mvnne	r0, #0
   13e40:	b	13e58 <abort@plt+0x3138>
   13e44:	mov	r0, r4
   13e48:	bl	10ccc <fclose@plt>
   13e4c:	b	13e58 <abort@plt+0x3138>
   13e50:	mov	r0, r4
   13e54:	bl	10ccc <fclose@plt>
   13e58:	add	sp, sp, #8
   13e5c:	pop	{r4, r5, r6, pc}
   13e60:	push	{r4, lr}
   13e64:	sub	sp, sp, #8
   13e68:	subs	r4, r0, #0
   13e6c:	beq	13e80 <abort@plt+0x3160>
   13e70:	mov	r0, r4
   13e74:	bl	10c3c <__freading@plt>
   13e78:	cmp	r0, #0
   13e7c:	bne	13e90 <abort@plt+0x3170>
   13e80:	mov	r0, r4
   13e84:	bl	10b4c <fflush@plt>
   13e88:	add	sp, sp, #8
   13e8c:	pop	{r4, pc}
   13e90:	ldr	r3, [r4]
   13e94:	tst	r3, #256	; 0x100
   13e98:	bne	13ea8 <abort@plt+0x3188>
   13e9c:	mov	r0, r4
   13ea0:	bl	10b4c <fflush@plt>
   13ea4:	b	13e88 <abort@plt+0x3168>
   13ea8:	mov	r3, #1
   13eac:	str	r3, [sp]
   13eb0:	mov	r2, #0
   13eb4:	mov	r3, #0
   13eb8:	mov	r0, r4
   13ebc:	bl	13f1c <abort@plt+0x31fc>
   13ec0:	b	13e9c <abort@plt+0x317c>
   13ec4:	push	{r4, r5, lr}
   13ec8:	sub	sp, sp, #12
   13ecc:	mov	r5, r0
   13ed0:	bl	10c84 <__errno_location@plt>
   13ed4:	mov	r4, r0
   13ed8:	ldr	r3, [r0]
   13edc:	str	r3, [sp]
   13ee0:	str	r3, [sp, #4]
   13ee4:	mov	r3, #0
   13ee8:	str	r3, [r0]
   13eec:	mov	r0, r5
   13ef0:	bl	10b58 <free@plt>
   13ef4:	ldr	r3, [r4]
   13ef8:	cmp	r3, #0
   13efc:	moveq	r3, #4
   13f00:	movne	r3, #0
   13f04:	add	r2, sp, #8
   13f08:	add	r3, r2, r3
   13f0c:	ldr	r3, [r3, #-8]
   13f10:	str	r3, [r4]
   13f14:	add	sp, sp, #12
   13f18:	pop	{r4, r5, pc}
   13f1c:	push	{r4, r5, r6, r7, lr}
   13f20:	sub	sp, sp, #12
   13f24:	mov	r4, r0
   13f28:	mov	r6, r2
   13f2c:	mov	r7, r3
   13f30:	ldr	r5, [sp, #32]
   13f34:	ldr	r2, [r0, #8]
   13f38:	ldr	r3, [r0, #4]
   13f3c:	cmp	r2, r3
   13f40:	beq	13f60 <abort@plt+0x3240>
   13f44:	str	r5, [sp]
   13f48:	mov	r2, r6
   13f4c:	mov	r3, r7
   13f50:	mov	r0, r4
   13f54:	bl	10cd8 <fseeko64@plt>
   13f58:	add	sp, sp, #12
   13f5c:	pop	{r4, r5, r6, r7, pc}
   13f60:	ldr	r2, [r0, #20]
   13f64:	ldr	r3, [r0, #16]
   13f68:	cmp	r2, r3
   13f6c:	bne	13f44 <abort@plt+0x3224>
   13f70:	ldr	r3, [r0, #36]	; 0x24
   13f74:	cmp	r3, #0
   13f78:	bne	13f44 <abort@plt+0x3224>
   13f7c:	bl	10cb4 <fileno@plt>
   13f80:	str	r5, [sp]
   13f84:	mov	r2, r6
   13f88:	mov	r3, r7
   13f8c:	bl	10be8 <lseek64@plt>
   13f90:	mvn	r2, #0
   13f94:	mvn	r3, #0
   13f98:	cmp	r1, r3
   13f9c:	cmpeq	r0, r2
   13fa0:	beq	13fbc <abort@plt+0x329c>
   13fa4:	ldr	r3, [r4]
   13fa8:	bic	r3, r3, #16
   13fac:	str	r3, [r4]
   13fb0:	strd	r0, [r4, #80]	; 0x50
   13fb4:	mov	r0, #0
   13fb8:	b	13f58 <abort@plt+0x3238>
   13fbc:	mvn	r0, #0
   13fc0:	b	13f58 <abort@plt+0x3238>
   13fc4:	push	{r4, lr}
   13fc8:	mov	r0, #14
   13fcc:	bl	10cfc <nl_langinfo@plt>
   13fd0:	cmp	r0, #0
   13fd4:	beq	13fec <abort@plt+0x32cc>
   13fd8:	ldrb	r2, [r0]
   13fdc:	ldr	r3, [pc, #16]	; 13ff4 <abort@plt+0x32d4>
   13fe0:	cmp	r2, #0
   13fe4:	moveq	r0, r3
   13fe8:	pop	{r4, pc}
   13fec:	ldr	r0, [pc]	; 13ff4 <abort@plt+0x32d4>
   13ff0:	pop	{r4, pc}
   13ff4:	andeq	r4, r1, r4, lsr #28
   13ff8:	push	{r4, r5, r6, r7, lr}
   13ffc:	sub	sp, sp, #12
   14000:	mov	r7, r1
   14004:	mov	r5, r2
   14008:	subs	r6, r0, #0
   1400c:	addeq	r6, sp, #4
   14010:	mov	r0, r6
   14014:	bl	10c0c <mbrtowc@plt>
   14018:	mov	r4, r0
   1401c:	cmp	r5, #0
   14020:	cmnne	r0, #3
   14024:	bhi	14034 <abort@plt+0x3314>
   14028:	mov	r0, r4
   1402c:	add	sp, sp, #12
   14030:	pop	{r4, r5, r6, r7, pc}
   14034:	mov	r0, #0
   14038:	bl	1409c <abort@plt+0x337c>
   1403c:	cmp	r0, #0
   14040:	ldrbeq	r3, [r7]
   14044:	streq	r3, [r6]
   14048:	moveq	r4, #1
   1404c:	b	14028 <abort@plt+0x3308>
   14050:	push	{r4, r5, r6, lr}
   14054:	mov	r6, r0
   14058:	mov	r5, r1
   1405c:	subs	r4, r2, #0
   14060:	beq	1408c <abort@plt+0x336c>
   14064:	mov	r1, r4
   14068:	mvn	r0, #0
   1406c:	bl	141a4 <abort@plt+0x3484>
   14070:	cmp	r0, r5
   14074:	bcs	1408c <abort@plt+0x336c>
   14078:	bl	10c84 <__errno_location@plt>
   1407c:	mov	r3, #12
   14080:	str	r3, [r0]
   14084:	mov	r0, #0
   14088:	pop	{r4, r5, r6, pc}
   1408c:	mul	r1, r5, r4
   14090:	mov	r0, r6
   14094:	bl	13cf0 <abort@plt+0x2fd0>
   14098:	pop	{r4, r5, r6, pc}
   1409c:	push	{lr}		; (str lr, [sp, #-4]!)
   140a0:	sub	sp, sp, #268	; 0x10c
   140a4:	ldr	r2, [pc, #68]	; 140f0 <abort@plt+0x33d0>
   140a8:	add	r1, sp, #4
   140ac:	bl	140fc <abort@plt+0x33dc>
   140b0:	cmp	r0, #0
   140b4:	movne	r0, #0
   140b8:	bne	140e8 <abort@plt+0x33c8>
   140bc:	ldr	r1, [pc, #48]	; 140f4 <abort@plt+0x33d4>
   140c0:	add	r0, sp, #4
   140c4:	bl	10b40 <strcmp@plt>
   140c8:	cmp	r0, #0
   140cc:	moveq	r0, #0
   140d0:	beq	140e8 <abort@plt+0x33c8>
   140d4:	ldr	r1, [pc, #28]	; 140f8 <abort@plt+0x33d8>
   140d8:	add	r0, sp, #4
   140dc:	bl	10b40 <strcmp@plt>
   140e0:	adds	r0, r0, #0
   140e4:	movne	r0, #1
   140e8:	add	sp, sp, #268	; 0x10c
   140ec:	pop	{pc}		; (ldr pc, [sp], #4)
   140f0:	andeq	r0, r0, r1, lsl #2
   140f4:	andeq	r4, r1, ip, lsr #28
   140f8:	andeq	r4, r1, r0, lsr lr
   140fc:	push	{r4, r5, r6, lr}
   14100:	mov	r6, r1
   14104:	mov	r4, r2
   14108:	mov	r1, #0
   1410c:	bl	10ce4 <setlocale@plt>
   14110:	subs	r5, r0, #0
   14114:	beq	14138 <abort@plt+0x3418>
   14118:	mov	r0, r5
   1411c:	bl	10c78 <strlen@plt>
   14120:	cmp	r4, r0
   14124:	bhi	14150 <abort@plt+0x3430>
   14128:	cmp	r4, #0
   1412c:	bne	14168 <abort@plt+0x3448>
   14130:	mov	r0, #34	; 0x22
   14134:	pop	{r4, r5, r6, pc}
   14138:	cmp	r4, #0
   1413c:	beq	1418c <abort@plt+0x346c>
   14140:	mov	r3, #0
   14144:	strb	r3, [r6]
   14148:	mov	r0, #22
   1414c:	pop	{r4, r5, r6, pc}
   14150:	add	r2, r0, #1
   14154:	mov	r1, r5
   14158:	mov	r0, r6
   1415c:	bl	10b70 <memcpy@plt>
   14160:	mov	r0, #0
   14164:	pop	{r4, r5, r6, pc}
   14168:	sub	r4, r4, #1
   1416c:	mov	r2, r4
   14170:	mov	r1, r5
   14174:	mov	r0, r6
   14178:	bl	10b70 <memcpy@plt>
   1417c:	mov	r3, #0
   14180:	strb	r3, [r6, r4]
   14184:	mov	r0, #34	; 0x22
   14188:	pop	{r4, r5, r6, pc}
   1418c:	mov	r0, #22
   14190:	pop	{r4, r5, r6, pc}
   14194:	push	{r4, lr}
   14198:	mov	r1, #0
   1419c:	bl	10ce4 <setlocale@plt>
   141a0:	pop	{r4, pc}
   141a4:	subs	r2, r1, #1
   141a8:	bxeq	lr
   141ac:	bcc	14384 <abort@plt+0x3664>
   141b0:	cmp	r0, r1
   141b4:	bls	14368 <abort@plt+0x3648>
   141b8:	tst	r1, r2
   141bc:	beq	14374 <abort@plt+0x3654>
   141c0:	clz	r3, r0
   141c4:	clz	r2, r1
   141c8:	sub	r3, r2, r3
   141cc:	rsbs	r3, r3, #31
   141d0:	addne	r3, r3, r3, lsl #1
   141d4:	mov	r2, #0
   141d8:	addne	pc, pc, r3, lsl #2
   141dc:	nop			; (mov r0, r0)
   141e0:	cmp	r0, r1, lsl #31
   141e4:	adc	r2, r2, r2
   141e8:	subcs	r0, r0, r1, lsl #31
   141ec:	cmp	r0, r1, lsl #30
   141f0:	adc	r2, r2, r2
   141f4:	subcs	r0, r0, r1, lsl #30
   141f8:	cmp	r0, r1, lsl #29
   141fc:	adc	r2, r2, r2
   14200:	subcs	r0, r0, r1, lsl #29
   14204:	cmp	r0, r1, lsl #28
   14208:	adc	r2, r2, r2
   1420c:	subcs	r0, r0, r1, lsl #28
   14210:	cmp	r0, r1, lsl #27
   14214:	adc	r2, r2, r2
   14218:	subcs	r0, r0, r1, lsl #27
   1421c:	cmp	r0, r1, lsl #26
   14220:	adc	r2, r2, r2
   14224:	subcs	r0, r0, r1, lsl #26
   14228:	cmp	r0, r1, lsl #25
   1422c:	adc	r2, r2, r2
   14230:	subcs	r0, r0, r1, lsl #25
   14234:	cmp	r0, r1, lsl #24
   14238:	adc	r2, r2, r2
   1423c:	subcs	r0, r0, r1, lsl #24
   14240:	cmp	r0, r1, lsl #23
   14244:	adc	r2, r2, r2
   14248:	subcs	r0, r0, r1, lsl #23
   1424c:	cmp	r0, r1, lsl #22
   14250:	adc	r2, r2, r2
   14254:	subcs	r0, r0, r1, lsl #22
   14258:	cmp	r0, r1, lsl #21
   1425c:	adc	r2, r2, r2
   14260:	subcs	r0, r0, r1, lsl #21
   14264:	cmp	r0, r1, lsl #20
   14268:	adc	r2, r2, r2
   1426c:	subcs	r0, r0, r1, lsl #20
   14270:	cmp	r0, r1, lsl #19
   14274:	adc	r2, r2, r2
   14278:	subcs	r0, r0, r1, lsl #19
   1427c:	cmp	r0, r1, lsl #18
   14280:	adc	r2, r2, r2
   14284:	subcs	r0, r0, r1, lsl #18
   14288:	cmp	r0, r1, lsl #17
   1428c:	adc	r2, r2, r2
   14290:	subcs	r0, r0, r1, lsl #17
   14294:	cmp	r0, r1, lsl #16
   14298:	adc	r2, r2, r2
   1429c:	subcs	r0, r0, r1, lsl #16
   142a0:	cmp	r0, r1, lsl #15
   142a4:	adc	r2, r2, r2
   142a8:	subcs	r0, r0, r1, lsl #15
   142ac:	cmp	r0, r1, lsl #14
   142b0:	adc	r2, r2, r2
   142b4:	subcs	r0, r0, r1, lsl #14
   142b8:	cmp	r0, r1, lsl #13
   142bc:	adc	r2, r2, r2
   142c0:	subcs	r0, r0, r1, lsl #13
   142c4:	cmp	r0, r1, lsl #12
   142c8:	adc	r2, r2, r2
   142cc:	subcs	r0, r0, r1, lsl #12
   142d0:	cmp	r0, r1, lsl #11
   142d4:	adc	r2, r2, r2
   142d8:	subcs	r0, r0, r1, lsl #11
   142dc:	cmp	r0, r1, lsl #10
   142e0:	adc	r2, r2, r2
   142e4:	subcs	r0, r0, r1, lsl #10
   142e8:	cmp	r0, r1, lsl #9
   142ec:	adc	r2, r2, r2
   142f0:	subcs	r0, r0, r1, lsl #9
   142f4:	cmp	r0, r1, lsl #8
   142f8:	adc	r2, r2, r2
   142fc:	subcs	r0, r0, r1, lsl #8
   14300:	cmp	r0, r1, lsl #7
   14304:	adc	r2, r2, r2
   14308:	subcs	r0, r0, r1, lsl #7
   1430c:	cmp	r0, r1, lsl #6
   14310:	adc	r2, r2, r2
   14314:	subcs	r0, r0, r1, lsl #6
   14318:	cmp	r0, r1, lsl #5
   1431c:	adc	r2, r2, r2
   14320:	subcs	r0, r0, r1, lsl #5
   14324:	cmp	r0, r1, lsl #4
   14328:	adc	r2, r2, r2
   1432c:	subcs	r0, r0, r1, lsl #4
   14330:	cmp	r0, r1, lsl #3
   14334:	adc	r2, r2, r2
   14338:	subcs	r0, r0, r1, lsl #3
   1433c:	cmp	r0, r1, lsl #2
   14340:	adc	r2, r2, r2
   14344:	subcs	r0, r0, r1, lsl #2
   14348:	cmp	r0, r1, lsl #1
   1434c:	adc	r2, r2, r2
   14350:	subcs	r0, r0, r1, lsl #1
   14354:	cmp	r0, r1
   14358:	adc	r2, r2, r2
   1435c:	subcs	r0, r0, r1
   14360:	mov	r0, r2
   14364:	bx	lr
   14368:	moveq	r0, #1
   1436c:	movne	r0, #0
   14370:	bx	lr
   14374:	clz	r2, r1
   14378:	rsb	r2, r2, #31
   1437c:	lsr	r0, r0, r2
   14380:	bx	lr
   14384:	cmp	r0, #0
   14388:	mvnne	r0, #0
   1438c:	b	145f0 <abort@plt+0x38d0>
   14390:	cmp	r1, #0
   14394:	beq	14384 <abort@plt+0x3664>
   14398:	push	{r0, r1, lr}
   1439c:	bl	141a4 <abort@plt+0x3484>
   143a0:	pop	{r1, r2, lr}
   143a4:	mul	r3, r2, r0
   143a8:	sub	r1, r1, r3
   143ac:	bx	lr
   143b0:	cmp	r1, #0
   143b4:	beq	145c0 <abort@plt+0x38a0>
   143b8:	eor	ip, r0, r1
   143bc:	rsbmi	r1, r1, #0
   143c0:	subs	r2, r1, #1
   143c4:	beq	1458c <abort@plt+0x386c>
   143c8:	movs	r3, r0
   143cc:	rsbmi	r3, r0, #0
   143d0:	cmp	r3, r1
   143d4:	bls	14598 <abort@plt+0x3878>
   143d8:	tst	r1, r2
   143dc:	beq	145a8 <abort@plt+0x3888>
   143e0:	clz	r2, r3
   143e4:	clz	r0, r1
   143e8:	sub	r2, r0, r2
   143ec:	rsbs	r2, r2, #31
   143f0:	addne	r2, r2, r2, lsl #1
   143f4:	mov	r0, #0
   143f8:	addne	pc, pc, r2, lsl #2
   143fc:	nop			; (mov r0, r0)
   14400:	cmp	r3, r1, lsl #31
   14404:	adc	r0, r0, r0
   14408:	subcs	r3, r3, r1, lsl #31
   1440c:	cmp	r3, r1, lsl #30
   14410:	adc	r0, r0, r0
   14414:	subcs	r3, r3, r1, lsl #30
   14418:	cmp	r3, r1, lsl #29
   1441c:	adc	r0, r0, r0
   14420:	subcs	r3, r3, r1, lsl #29
   14424:	cmp	r3, r1, lsl #28
   14428:	adc	r0, r0, r0
   1442c:	subcs	r3, r3, r1, lsl #28
   14430:	cmp	r3, r1, lsl #27
   14434:	adc	r0, r0, r0
   14438:	subcs	r3, r3, r1, lsl #27
   1443c:	cmp	r3, r1, lsl #26
   14440:	adc	r0, r0, r0
   14444:	subcs	r3, r3, r1, lsl #26
   14448:	cmp	r3, r1, lsl #25
   1444c:	adc	r0, r0, r0
   14450:	subcs	r3, r3, r1, lsl #25
   14454:	cmp	r3, r1, lsl #24
   14458:	adc	r0, r0, r0
   1445c:	subcs	r3, r3, r1, lsl #24
   14460:	cmp	r3, r1, lsl #23
   14464:	adc	r0, r0, r0
   14468:	subcs	r3, r3, r1, lsl #23
   1446c:	cmp	r3, r1, lsl #22
   14470:	adc	r0, r0, r0
   14474:	subcs	r3, r3, r1, lsl #22
   14478:	cmp	r3, r1, lsl #21
   1447c:	adc	r0, r0, r0
   14480:	subcs	r3, r3, r1, lsl #21
   14484:	cmp	r3, r1, lsl #20
   14488:	adc	r0, r0, r0
   1448c:	subcs	r3, r3, r1, lsl #20
   14490:	cmp	r3, r1, lsl #19
   14494:	adc	r0, r0, r0
   14498:	subcs	r3, r3, r1, lsl #19
   1449c:	cmp	r3, r1, lsl #18
   144a0:	adc	r0, r0, r0
   144a4:	subcs	r3, r3, r1, lsl #18
   144a8:	cmp	r3, r1, lsl #17
   144ac:	adc	r0, r0, r0
   144b0:	subcs	r3, r3, r1, lsl #17
   144b4:	cmp	r3, r1, lsl #16
   144b8:	adc	r0, r0, r0
   144bc:	subcs	r3, r3, r1, lsl #16
   144c0:	cmp	r3, r1, lsl #15
   144c4:	adc	r0, r0, r0
   144c8:	subcs	r3, r3, r1, lsl #15
   144cc:	cmp	r3, r1, lsl #14
   144d0:	adc	r0, r0, r0
   144d4:	subcs	r3, r3, r1, lsl #14
   144d8:	cmp	r3, r1, lsl #13
   144dc:	adc	r0, r0, r0
   144e0:	subcs	r3, r3, r1, lsl #13
   144e4:	cmp	r3, r1, lsl #12
   144e8:	adc	r0, r0, r0
   144ec:	subcs	r3, r3, r1, lsl #12
   144f0:	cmp	r3, r1, lsl #11
   144f4:	adc	r0, r0, r0
   144f8:	subcs	r3, r3, r1, lsl #11
   144fc:	cmp	r3, r1, lsl #10
   14500:	adc	r0, r0, r0
   14504:	subcs	r3, r3, r1, lsl #10
   14508:	cmp	r3, r1, lsl #9
   1450c:	adc	r0, r0, r0
   14510:	subcs	r3, r3, r1, lsl #9
   14514:	cmp	r3, r1, lsl #8
   14518:	adc	r0, r0, r0
   1451c:	subcs	r3, r3, r1, lsl #8
   14520:	cmp	r3, r1, lsl #7
   14524:	adc	r0, r0, r0
   14528:	subcs	r3, r3, r1, lsl #7
   1452c:	cmp	r3, r1, lsl #6
   14530:	adc	r0, r0, r0
   14534:	subcs	r3, r3, r1, lsl #6
   14538:	cmp	r3, r1, lsl #5
   1453c:	adc	r0, r0, r0
   14540:	subcs	r3, r3, r1, lsl #5
   14544:	cmp	r3, r1, lsl #4
   14548:	adc	r0, r0, r0
   1454c:	subcs	r3, r3, r1, lsl #4
   14550:	cmp	r3, r1, lsl #3
   14554:	adc	r0, r0, r0
   14558:	subcs	r3, r3, r1, lsl #3
   1455c:	cmp	r3, r1, lsl #2
   14560:	adc	r0, r0, r0
   14564:	subcs	r3, r3, r1, lsl #2
   14568:	cmp	r3, r1, lsl #1
   1456c:	adc	r0, r0, r0
   14570:	subcs	r3, r3, r1, lsl #1
   14574:	cmp	r3, r1
   14578:	adc	r0, r0, r0
   1457c:	subcs	r3, r3, r1
   14580:	cmp	ip, #0
   14584:	rsbmi	r0, r0, #0
   14588:	bx	lr
   1458c:	teq	ip, r0
   14590:	rsbmi	r0, r0, #0
   14594:	bx	lr
   14598:	movcc	r0, #0
   1459c:	asreq	r0, ip, #31
   145a0:	orreq	r0, r0, #1
   145a4:	bx	lr
   145a8:	clz	r2, r1
   145ac:	rsb	r2, r2, #31
   145b0:	cmp	ip, #0
   145b4:	lsr	r0, r3, r2
   145b8:	rsbmi	r0, r0, #0
   145bc:	bx	lr
   145c0:	cmp	r0, #0
   145c4:	mvngt	r0, #-2147483648	; 0x80000000
   145c8:	movlt	r0, #-2147483648	; 0x80000000
   145cc:	b	145f0 <abort@plt+0x38d0>
   145d0:	cmp	r1, #0
   145d4:	beq	145c0 <abort@plt+0x38a0>
   145d8:	push	{r0, r1, lr}
   145dc:	bl	143b8 <abort@plt+0x3698>
   145e0:	pop	{r1, r2, lr}
   145e4:	mul	r3, r2, r0
   145e8:	sub	r1, r1, r3
   145ec:	bx	lr
   145f0:	push	{r1, lr}
   145f4:	mov	r0, #8
   145f8:	bl	10b34 <raise@plt>
   145fc:	pop	{r1, pc}
   14600:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14604:	mov	r7, r0
   14608:	ldr	r6, [pc, #72]	; 14658 <abort@plt+0x3938>
   1460c:	ldr	r5, [pc, #72]	; 1465c <abort@plt+0x393c>
   14610:	add	r6, pc, r6
   14614:	add	r5, pc, r5
   14618:	sub	r6, r6, r5
   1461c:	mov	r8, r1
   14620:	mov	r9, r2
   14624:	bl	10afc <calloc@plt-0x20>
   14628:	asrs	r6, r6, #2
   1462c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14630:	mov	r4, #0
   14634:	add	r4, r4, #1
   14638:	ldr	r3, [r5], #4
   1463c:	mov	r2, r9
   14640:	mov	r1, r8
   14644:	mov	r0, r7
   14648:	blx	r3
   1464c:	cmp	r6, r4
   14650:	bne	14634 <abort@plt+0x3914>
   14654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14658:	strdeq	r0, [r1], -r8
   1465c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   14660:	bx	lr
   14664:	ldr	r3, [pc, #12]	; 14678 <abort@plt+0x3958>
   14668:	mov	r1, #0
   1466c:	add	r3, pc, r3
   14670:	ldr	r2, [r3]
   14674:	b	10c90 <__cxa_atexit@plt>
   14678:	andeq	r0, r1, r0, asr sl

Disassembly of section .fini:

0001467c <.fini>:
   1467c:	push	{r3, lr}
   14680:	pop	{r3, pc}
