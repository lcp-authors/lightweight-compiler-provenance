
../repos/coreutils/src/tee:     file format elf32-littlearm


Disassembly of section .init:

00010cc8 <.init>:
   10cc8:	push	{r3, lr}
   10ccc:	bl	111f8 <close@plt+0x294>
   10cd0:	pop	{r3, pc}

Disassembly of section .plt:

00010cd4 <fdopen@plt-0x14>:
   10cd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cd8:	ldr	lr, [pc, #4]	; 10ce4 <fdopen@plt-0x4>
   10cdc:	add	lr, pc, lr
   10ce0:	ldr	pc, [lr, #8]!
   10ce4:	andeq	r6, r1, ip, lsl r3

00010ce8 <fdopen@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #90112	; 0x16000
   10cf0:	ldr	pc, [ip, #796]!	; 0x31c

00010cf4 <calloc@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #90112	; 0x16000
   10cfc:	ldr	pc, [ip, #788]!	; 0x314

00010d00 <fputs_unlocked@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #90112	; 0x16000
   10d08:	ldr	pc, [ip, #780]!	; 0x30c

00010d0c <raise@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #90112	; 0x16000
   10d14:	ldr	pc, [ip, #772]!	; 0x304

00010d18 <strcmp@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #90112	; 0x16000
   10d20:	ldr	pc, [ip, #764]!	; 0x2fc

00010d24 <posix_fadvise64@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #90112	; 0x16000
   10d2c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d30 <read@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #90112	; 0x16000
   10d38:	ldr	pc, [ip, #748]!	; 0x2ec

00010d3c <fflush@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #90112	; 0x16000
   10d44:	ldr	pc, [ip, #740]!	; 0x2e4

00010d48 <free@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #90112	; 0x16000
   10d50:	ldr	pc, [ip, #732]!	; 0x2dc

00010d54 <_exit@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #90112	; 0x16000
   10d5c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d60 <memcpy@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #90112	; 0x16000
   10d68:	ldr	pc, [ip, #716]!	; 0x2cc

00010d6c <mbsinit@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #90112	; 0x16000
   10d74:	ldr	pc, [ip, #708]!	; 0x2c4

00010d78 <signal@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #90112	; 0x16000
   10d80:	ldr	pc, [ip, #700]!	; 0x2bc

00010d84 <fwrite_unlocked@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #90112	; 0x16000
   10d8c:	ldr	pc, [ip, #692]!	; 0x2b4

00010d90 <memcmp@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #90112	; 0x16000
   10d98:	ldr	pc, [ip, #684]!	; 0x2ac

00010d9c <fputc_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #90112	; 0x16000
   10da4:	ldr	pc, [ip, #676]!	; 0x2a4

00010da8 <dcgettext@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #90112	; 0x16000
   10db0:	ldr	pc, [ip, #668]!	; 0x29c

00010db4 <realloc@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #90112	; 0x16000
   10dbc:	ldr	pc, [ip, #660]!	; 0x294

00010dc0 <textdomain@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #90112	; 0x16000
   10dc8:	ldr	pc, [ip, #652]!	; 0x28c

00010dcc <iswprint@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #644]!	; 0x284

00010dd8 <fwrite@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #636]!	; 0x27c

00010de4 <lseek64@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #628]!	; 0x274

00010df0 <__ctype_get_mb_cur_max@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #620]!	; 0x26c

00010dfc <__fpending@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #90112	; 0x16000
   10e04:	ldr	pc, [ip, #612]!	; 0x264

00010e08 <mbrtowc@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #90112	; 0x16000
   10e10:	ldr	pc, [ip, #604]!	; 0x25c

00010e14 <error@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #90112	; 0x16000
   10e1c:	ldr	pc, [ip, #596]!	; 0x254

00010e20 <malloc@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #90112	; 0x16000
   10e28:	ldr	pc, [ip, #588]!	; 0x24c

00010e2c <__libc_start_main@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #90112	; 0x16000
   10e34:	ldr	pc, [ip, #580]!	; 0x244

00010e38 <__freading@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #90112	; 0x16000
   10e40:	ldr	pc, [ip, #572]!	; 0x23c

00010e44 <__gmon_start__@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #90112	; 0x16000
   10e4c:	ldr	pc, [ip, #564]!	; 0x234

00010e50 <getopt_long@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #90112	; 0x16000
   10e58:	ldr	pc, [ip, #556]!	; 0x22c

00010e5c <__ctype_b_loc@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #90112	; 0x16000
   10e64:	ldr	pc, [ip, #548]!	; 0x224

00010e68 <exit@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #90112	; 0x16000
   10e70:	ldr	pc, [ip, #540]!	; 0x21c

00010e74 <strlen@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #90112	; 0x16000
   10e7c:	ldr	pc, [ip, #532]!	; 0x214

00010e80 <__errno_location@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #90112	; 0x16000
   10e88:	ldr	pc, [ip, #524]!	; 0x20c

00010e8c <__cxa_atexit@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #90112	; 0x16000
   10e94:	ldr	pc, [ip, #516]!	; 0x204

00010e98 <setvbuf@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #90112	; 0x16000
   10ea0:	ldr	pc, [ip, #508]!	; 0x1fc

00010ea4 <memset@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #90112	; 0x16000
   10eac:	ldr	pc, [ip, #500]!	; 0x1f4

00010eb0 <__printf_chk@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #90112	; 0x16000
   10eb8:	ldr	pc, [ip, #492]!	; 0x1ec

00010ebc <fileno@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #90112	; 0x16000
   10ec4:	ldr	pc, [ip, #484]!	; 0x1e4

00010ec8 <__fprintf_chk@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #90112	; 0x16000
   10ed0:	ldr	pc, [ip, #476]!	; 0x1dc

00010ed4 <fclose@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #468]!	; 0x1d4

00010ee0 <fseeko64@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #460]!	; 0x1cc

00010eec <fcntl64@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #452]!	; 0x1c4

00010ef8 <__overflow@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #444]!	; 0x1bc

00010f04 <setlocale@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #436]!	; 0x1b4

00010f10 <strrchr@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #428]!	; 0x1ac

00010f1c <nl_langinfo@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #420]!	; 0x1a4

00010f28 <clearerr_unlocked@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #412]!	; 0x19c

00010f34 <fopen64@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #90112	; 0x16000
   10f3c:	ldr	pc, [ip, #404]!	; 0x194

00010f40 <bindtextdomain@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #90112	; 0x16000
   10f48:	ldr	pc, [ip, #396]!	; 0x18c

00010f4c <strncmp@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #90112	; 0x16000
   10f54:	ldr	pc, [ip, #388]!	; 0x184

00010f58 <abort@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #90112	; 0x16000
   10f60:	ldr	pc, [ip, #380]!	; 0x17c

00010f64 <close@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #90112	; 0x16000
   10f6c:	ldr	pc, [ip, #372]!	; 0x174

Disassembly of section .text:

00010f70 <.text>:
   10f70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f74:	mov	r7, r0
   10f78:	sub	sp, sp, #20
   10f7c:	ldr	r0, [r1]
   10f80:	mov	r6, r1
   10f84:	bl	120ec <close@plt+0x1188>
   10f88:	ldr	r1, [pc, #472]	; 11168 <close@plt+0x204>
   10f8c:	mov	r0, #6
   10f90:	bl	10f04 <setlocale@plt>
   10f94:	ldr	sl, [pc, #464]	; 1116c <close@plt+0x208>
   10f98:	ldr	r1, [pc, #464]	; 11170 <close@plt+0x20c>
   10f9c:	ldr	r0, [pc, #464]	; 11174 <close@plt+0x210>
   10fa0:	bl	10f40 <bindtextdomain@plt>
   10fa4:	ldr	r5, [pc, #460]	; 11178 <close@plt+0x214>
   10fa8:	ldr	r0, [pc, #452]	; 11174 <close@plt+0x210>
   10fac:	ldr	r8, [pc, #456]	; 1117c <close@plt+0x218>
   10fb0:	bl	10dc0 <textdomain@plt>
   10fb4:	add	r9, sl, #92	; 0x5c
   10fb8:	ldr	r0, [pc, #448]	; 11180 <close@plt+0x21c>
   10fbc:	mov	fp, #1
   10fc0:	bl	15420 <close@plt+0x44bc>
   10fc4:	mov	r3, #0
   10fc8:	strb	r3, [r5]
   10fcc:	strb	r3, [r5, #8]
   10fd0:	mov	r4, #0
   10fd4:	str	r4, [sp]
   10fd8:	mov	r3, r9
   10fdc:	mov	r2, r8
   10fe0:	mov	r1, r6
   10fe4:	mov	r0, r7
   10fe8:	bl	10e50 <getopt_long@plt>
   10fec:	cmn	r0, #1
   10ff0:	beq	110cc <close@plt+0x168>
   10ff4:	cmp	r0, #97	; 0x61
   10ff8:	beq	110b8 <close@plt+0x154>
   10ffc:	bgt	11018 <close@plt+0xb4>
   11000:	cmn	r0, #3
   11004:	beq	1106c <close@plt+0x108>
   11008:	cmn	r0, #2
   1100c:	bne	110b0 <close@plt+0x14c>
   11010:	mov	r0, r4
   11014:	bl	11674 <close@plt+0x710>
   11018:	cmp	r0, #105	; 0x69
   1101c:	beq	110a8 <close@plt+0x144>
   11020:	cmp	r0, #112	; 0x70
   11024:	bne	110b0 <close@plt+0x14c>
   11028:	ldr	r3, [pc, #340]	; 11184 <close@plt+0x220>
   1102c:	ldr	r1, [r3]
   11030:	cmp	r1, #0
   11034:	beq	110c0 <close@plt+0x15c>
   11038:	ldr	r3, [pc, #328]	; 11188 <close@plt+0x224>
   1103c:	mov	r0, #4
   11040:	ldr	r2, [r3]
   11044:	ldr	r3, [pc, #320]	; 1118c <close@plt+0x228>
   11048:	str	r0, [sp]
   1104c:	stmib	sp, {r2, fp}
   11050:	ldr	r0, [pc, #312]	; 11190 <close@plt+0x22c>
   11054:	add	r2, r3, #16
   11058:	bl	11c40 <close@plt+0xcdc>
   1105c:	add	r0, sl, r0, lsl #2
   11060:	ldr	r3, [r0, #56]	; 0x38
   11064:	str	r3, [r5, #4]
   11068:	b	10fd0 <close@plt+0x6c>
   1106c:	ldr	ip, [pc, #288]	; 11194 <close@plt+0x230>
   11070:	ldr	r1, [pc, #288]	; 11198 <close@plt+0x234>
   11074:	ldr	r3, [pc, #288]	; 1119c <close@plt+0x238>
   11078:	ldr	r0, [pc, #288]	; 111a0 <close@plt+0x23c>
   1107c:	ldr	r2, [pc, #288]	; 111a4 <close@plt+0x240>
   11080:	str	r4, [sp, #12]
   11084:	ldr	r0, [r0]
   11088:	ldr	r3, [r3]
   1108c:	stmib	sp, {r1, ip}
   11090:	str	r2, [sp]
   11094:	ldr	r1, [pc, #268]	; 111a8 <close@plt+0x244>
   11098:	ldr	r2, [pc, #268]	; 111ac <close@plt+0x248>
   1109c:	bl	143f4 <close@plt+0x3490>
   110a0:	mov	r0, r4
   110a4:	bl	10e68 <exit@plt>
   110a8:	strb	fp, [r5, #8]
   110ac:	b	10fd0 <close@plt+0x6c>
   110b0:	mov	r0, #1
   110b4:	bl	11674 <close@plt+0x710>
   110b8:	strb	fp, [r5]
   110bc:	b	10fd0 <close@plt+0x6c>
   110c0:	mov	r3, #2
   110c4:	str	r3, [r5, #4]
   110c8:	b	10fd0 <close@plt+0x6c>
   110cc:	ldrb	r3, [r5, #8]
   110d0:	cmp	r3, r4
   110d4:	bne	1111c <close@plt+0x1b8>
   110d8:	ldr	r3, [r5, #4]
   110dc:	cmp	r3, #0
   110e0:	bne	1112c <close@plt+0x1c8>
   110e4:	ldr	r3, [pc, #196]	; 111b0 <close@plt+0x24c>
   110e8:	ldr	r1, [r3]
   110ec:	sub	r0, r7, r1
   110f0:	add	r1, r6, r1, lsl #2
   110f4:	bl	112e4 <close@plt+0x380>
   110f8:	mov	r4, r0
   110fc:	mov	r0, #0
   11100:	bl	10f64 <close@plt>
   11104:	cmp	r0, #0
   11108:	bne	1113c <close@plt+0x1d8>
   1110c:	eor	r0, r4, #1
   11110:	uxtb	r0, r0
   11114:	add	sp, sp, #20
   11118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1111c:	mov	r1, #1
   11120:	mov	r0, #2
   11124:	bl	10d78 <signal@plt>
   11128:	b	110d8 <close@plt+0x174>
   1112c:	mov	r1, #1
   11130:	mov	r0, #13
   11134:	bl	10d78 <signal@plt>
   11138:	b	110e4 <close@plt+0x180>
   1113c:	bl	10e80 <__errno_location@plt>
   11140:	mov	r2, #5
   11144:	ldr	r1, [pc, #104]	; 111b4 <close@plt+0x250>
   11148:	ldr	r4, [r0]
   1114c:	mov	r0, #0
   11150:	bl	10da8 <dcgettext@plt>
   11154:	mov	r1, r4
   11158:	ldr	r2, [pc, #88]	; 111b8 <close@plt+0x254>
   1115c:	mov	r3, r0
   11160:	mov	r0, #1
   11164:	bl	10e14 <error@plt>
   11168:	andeq	r5, r1, r0, ror r5
   1116c:	andeq	r5, r1, r4, asr #8
   11170:	andeq	r5, r1, r8, lsl sl
   11174:	andeq	r5, r1, r0, ror r9
   11178:	andeq	r7, r2, r8, ror #2
   1117c:	andeq	r5, r1, r0, ror sl
   11180:	andeq	r1, r1, r8, lsr sp
   11184:	andeq	r7, r2, r0, ror #2
   11188:	strdeq	r7, [r2], -r4
   1118c:	andeq	r5, r1, ip, ror r4
   11190:	andeq	r5, r1, r0, lsr sl
   11194:	andeq	r5, r1, r0, asr #20
   11198:	andeq	r5, r1, r0, asr sl
   1119c:	strdeq	r7, [r2], -r0
   111a0:	andeq	r7, r2, ip, asr r1
   111a4:	andeq	r5, r1, r4, ror #20
   111a8:	andeq	r5, r1, r4, lsr #10
   111ac:	andeq	r5, r1, ip, ror #18
   111b0:	andeq	r7, r2, r8, asr #2
   111b4:	andeq	r5, r1, r4, ror sl
   111b8:	ldrdeq	r5, [r1], -r8
   111bc:	mov	fp, #0
   111c0:	mov	lr, #0
   111c4:	pop	{r1}		; (ldr r1, [sp], #4)
   111c8:	mov	r2, sp
   111cc:	push	{r2}		; (str r2, [sp, #-4]!)
   111d0:	push	{r0}		; (str r0, [sp, #-4]!)
   111d4:	ldr	ip, [pc, #16]	; 111ec <close@plt+0x288>
   111d8:	push	{ip}		; (str ip, [sp, #-4]!)
   111dc:	ldr	r0, [pc, #12]	; 111f0 <close@plt+0x28c>
   111e0:	ldr	r3, [pc, #12]	; 111f4 <close@plt+0x290>
   111e4:	bl	10e2c <__libc_start_main@plt>
   111e8:	bl	10f58 <abort@plt>
   111ec:	andeq	r5, r1, ip, lsl r4
   111f0:	andeq	r0, r1, r0, ror pc
   111f4:			; <UNDEFINED> instruction: 0x000153bc
   111f8:	ldr	r3, [pc, #20]	; 11214 <close@plt+0x2b0>
   111fc:	ldr	r2, [pc, #20]	; 11218 <close@plt+0x2b4>
   11200:	add	r3, pc, r3
   11204:	ldr	r2, [r3, r2]
   11208:	cmp	r2, #0
   1120c:	bxeq	lr
   11210:	b	10e44 <__gmon_start__@plt>
   11214:	strdeq	r5, [r1], -r8
   11218:	andeq	r0, r0, r4, ror #1
   1121c:	ldr	r3, [pc, #28]	; 11240 <close@plt+0x2dc>
   11220:	ldr	r0, [pc, #28]	; 11244 <close@plt+0x2e0>
   11224:	sub	r3, r3, r0
   11228:	cmp	r3, #6
   1122c:	bxls	lr
   11230:	ldr	r3, [pc, #16]	; 11248 <close@plt+0x2e4>
   11234:	cmp	r3, #0
   11238:	bxeq	lr
   1123c:	bx	r3
   11240:	andeq	r7, r2, pc, lsr r1
   11244:	andeq	r7, r2, ip, lsr r1
   11248:	andeq	r0, r0, r0
   1124c:	ldr	r1, [pc, #36]	; 11278 <close@plt+0x314>
   11250:	ldr	r0, [pc, #36]	; 1127c <close@plt+0x318>
   11254:	sub	r1, r1, r0
   11258:	asr	r1, r1, #2
   1125c:	add	r1, r1, r1, lsr #31
   11260:	asrs	r1, r1, #1
   11264:	bxeq	lr
   11268:	ldr	r3, [pc, #16]	; 11280 <close@plt+0x31c>
   1126c:	cmp	r3, #0
   11270:	bxeq	lr
   11274:	bx	r3
   11278:	andeq	r7, r2, ip, lsr r1
   1127c:	andeq	r7, r2, ip, lsr r1
   11280:	andeq	r0, r0, r0
   11284:	push	{r4, lr}
   11288:	ldr	r4, [pc, #24]	; 112a8 <close@plt+0x344>
   1128c:	ldrb	r3, [r4]
   11290:	cmp	r3, #0
   11294:	popne	{r4, pc}
   11298:	bl	1121c <close@plt+0x2b8>
   1129c:	mov	r3, #1
   112a0:	strb	r3, [r4]
   112a4:	pop	{r4, pc}
   112a8:	andeq	r7, r2, r4, ror #2
   112ac:	ldr	r0, [pc, #40]	; 112dc <close@plt+0x378>
   112b0:	ldr	r3, [r0]
   112b4:	cmp	r3, #0
   112b8:	bne	112c0 <close@plt+0x35c>
   112bc:	b	1124c <close@plt+0x2e8>
   112c0:	ldr	r3, [pc, #24]	; 112e0 <close@plt+0x37c>
   112c4:	cmp	r3, #0
   112c8:	beq	112bc <close@plt+0x358>
   112cc:	push	{r4, lr}
   112d0:	blx	r3
   112d4:	pop	{r4, lr}
   112d8:	b	1124c <close@plt+0x2e8>
   112dc:	andeq	r6, r2, r4, lsl pc
   112e0:	andeq	r0, r0, r0
   112e4:	ldr	r3, [pc, #872]	; 11654 <close@plt+0x6f0>
   112e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112ec:	sub	sp, sp, #8192	; 0x2000
   112f0:	ldrb	ip, [r3]
   112f4:	ldr	lr, [pc, #860]	; 11658 <close@plt+0x6f4>
   112f8:	sub	sp, sp, #28
   112fc:	ldr	r3, [pc, #856]	; 1165c <close@plt+0x6f8>
   11300:	cmp	ip, #0
   11304:	ldr	r2, [pc, #852]	; 11660 <close@plt+0x6fc>
   11308:	mov	r6, r0
   1130c:	movne	r2, r3
   11310:	ldr	r0, [lr]
   11314:	mov	r4, r1
   11318:	str	r1, [sp, #8]
   1131c:	mov	r1, #2
   11320:	str	r2, [sp]
   11324:	bl	11e28 <close@plt+0xec4>
   11328:	mov	r1, #4
   1132c:	add	r0, r6, #1
   11330:	bl	145d8 <close@plt+0x3674>
   11334:	ldr	fp, [pc, #808]	; 11664 <close@plt+0x700>
   11338:	mov	r2, #5
   1133c:	ldr	r1, [pc, #804]	; 11668 <close@plt+0x704>
   11340:	ldr	r3, [fp]
   11344:	mov	r8, r0
   11348:	str	r0, [sp, #12]
   1134c:	str	r3, [r8]
   11350:	mov	r0, #0
   11354:	bl	10da8 <dcgettext@plt>
   11358:	mov	r3, #0
   1135c:	mov	r1, r3
   11360:	mov	r2, #2
   11364:	str	r0, [r4, #-4]
   11368:	ldr	r0, [fp]
   1136c:	bl	10e98 <setvbuf@plt>
   11370:	cmp	r6, #0
   11374:	mov	r3, #1
   11378:	ble	11648 <close@plt+0x6e4>
   1137c:	mov	r7, r3
   11380:	str	r3, [sp, #4]
   11384:	mov	r5, r3
   11388:	mov	r9, #0
   1138c:	mov	sl, #2
   11390:	b	113ac <close@plt+0x448>
   11394:	add	r5, r5, #1
   11398:	bl	10e98 <setvbuf@plt>
   1139c:	cmp	r6, r5
   113a0:	add	r7, r7, #1
   113a4:	add	r4, r4, #4
   113a8:	blt	11430 <close@plt+0x4cc>
   113ac:	ldr	r1, [sp]
   113b0:	ldr	r0, [r4]
   113b4:	bl	11f5c <close@plt+0xff8>
   113b8:	mov	r1, #0
   113bc:	mov	r3, r9
   113c0:	mov	r2, sl
   113c4:	cmp	r0, r1
   113c8:	str	r0, [r8, #4]!
   113cc:	bne	11394 <close@plt+0x430>
   113d0:	ldr	r3, [pc, #636]	; 11654 <close@plt+0x6f0>
   113d4:	str	r9, [sp, #4]
   113d8:	add	r5, r5, #1
   113dc:	ldr	r3, [r3, #4]
   113e0:	add	r4, r4, #4
   113e4:	sub	r3, r3, #3
   113e8:	cmp	r3, #1
   113ec:	movhi	r3, #0
   113f0:	movls	r3, #1
   113f4:	str	r3, [sp, #20]
   113f8:	bl	10e80 <__errno_location@plt>
   113fc:	ldr	r2, [r4, #-4]
   11400:	mov	r1, #3
   11404:	ldr	ip, [r0]
   11408:	mov	r0, r9
   1140c:	str	ip, [sp, #16]
   11410:	bl	13e28 <close@plt+0x2ec4>
   11414:	ldr	r2, [pc, #592]	; 1166c <close@plt+0x708>
   11418:	ldr	r1, [sp, #16]
   1141c:	mov	r3, r0
   11420:	ldr	r0, [sp, #20]
   11424:	bl	10e14 <error@plt>
   11428:	cmp	r6, r5
   1142c:	bge	113ac <close@plt+0x448>
   11430:	cmp	r7, #0
   11434:	beq	1157c <close@plt+0x618>
   11438:	mov	sl, #1
   1143c:	mov	r2, #8192	; 0x2000
   11440:	add	r1, sp, #24
   11444:	mov	r0, #0
   11448:	bl	10d30 <read@plt>
   1144c:	subs	r8, r0, #0
   11450:	blt	11554 <close@plt+0x5f0>
   11454:	beq	11574 <close@plt+0x610>
   11458:	cmp	r6, #0
   1145c:	blt	11564 <close@plt+0x600>
   11460:	ldr	r4, [sp, #12]
   11464:	mov	r5, #0
   11468:	b	114ec <close@plt+0x588>
   1146c:	ldr	r0, [r4]
   11470:	ldr	r2, [fp]
   11474:	cmp	r0, r2
   11478:	bne	11488 <close@plt+0x524>
   1147c:	str	r3, [sp]
   11480:	bl	10f28 <clearerr_unlocked@plt>
   11484:	ldr	r3, [sp]
   11488:	str	r3, [sp]
   1148c:	ldr	r3, [sp, #8]
   11490:	mov	r1, #3
   11494:	add	r2, r3, r5, lsl #2
   11498:	mov	r0, #0
   1149c:	ldr	r2, [r2, #-4]
   114a0:	bl	13e28 <close@plt+0x2ec4>
   114a4:	mov	r3, #0
   114a8:	str	r3, [sp, #4]
   114ac:	sub	r9, r9, #3
   114b0:	ldr	r3, [sp]
   114b4:	cmp	r9, #1
   114b8:	mov	r1, r3
   114bc:	ldr	r2, [pc, #424]	; 1166c <close@plt+0x708>
   114c0:	mov	r3, r0
   114c4:	movhi	r0, #0
   114c8:	movls	r0, #1
   114cc:	bl	10e14 <error@plt>
   114d0:	mov	r3, #0
   114d4:	str	r3, [r4]
   114d8:	sub	r7, r7, #1
   114dc:	add	r5, r5, #1
   114e0:	cmp	r6, r5
   114e4:	add	r4, r4, #4
   114e8:	blt	11564 <close@plt+0x600>
   114ec:	ldr	r3, [r4]
   114f0:	cmp	r3, #0
   114f4:	beq	114dc <close@plt+0x578>
   114f8:	mov	r2, sl
   114fc:	mov	r1, r8
   11500:	add	r0, sp, #24
   11504:	bl	10d84 <fwrite_unlocked@plt>
   11508:	cmp	r0, #1
   1150c:	beq	114dc <close@plt+0x578>
   11510:	bl	10e80 <__errno_location@plt>
   11514:	ldr	r2, [pc, #312]	; 11654 <close@plt+0x6f0>
   11518:	ldr	r9, [r2, #4]
   1151c:	ldr	r3, [r0]
   11520:	cmp	r3, #32
   11524:	bne	1146c <close@plt+0x508>
   11528:	bic	r2, r9, #2
   1152c:	cmp	r2, #1
   11530:	beq	1146c <close@plt+0x508>
   11534:	ldr	r0, [r4]
   11538:	ldr	r3, [fp]
   1153c:	cmp	r0, r3
   11540:	bne	114d0 <close@plt+0x56c>
   11544:	bl	10f28 <clearerr_unlocked@plt>
   11548:	mov	r3, #0
   1154c:	str	r3, [r4]
   11550:	b	114d8 <close@plt+0x574>
   11554:	bl	10e80 <__errno_location@plt>
   11558:	ldr	r3, [r0]
   1155c:	cmp	r3, #4
   11560:	bne	1156c <close@plt+0x608>
   11564:	cmp	r7, #0
   11568:	bne	1143c <close@plt+0x4d8>
   1156c:	cmn	r8, #1
   11570:	beq	11614 <close@plt+0x6b0>
   11574:	cmp	r6, #0
   11578:	ble	115fc <close@plt+0x698>
   1157c:	ldr	fp, [pc, #232]	; 1166c <close@plt+0x708>
   11580:	ldr	r4, [sp, #8]
   11584:	ldr	r7, [sp, #12]
   11588:	mov	r5, #1
   1158c:	mov	sl, #3
   11590:	mov	r8, #0
   11594:	b	115a4 <close@plt+0x640>
   11598:	cmp	r6, r5
   1159c:	add	r4, r4, #4
   115a0:	blt	115fc <close@plt+0x698>
   115a4:	ldr	r3, [r7, #4]!
   115a8:	add	r5, r5, #1
   115ac:	subs	r0, r3, #0
   115b0:	beq	11598 <close@plt+0x634>
   115b4:	bl	11e5c <close@plt+0xef8>
   115b8:	cmp	r0, #0
   115bc:	beq	11598 <close@plt+0x634>
   115c0:	bl	10e80 <__errno_location@plt>
   115c4:	ldr	r2, [r4]
   115c8:	mov	r1, sl
   115cc:	str	r8, [sp, #4]
   115d0:	add	r4, r4, #4
   115d4:	ldr	r9, [r0]
   115d8:	mov	r0, r8
   115dc:	bl	13e28 <close@plt+0x2ec4>
   115e0:	mov	r2, fp
   115e4:	mov	r1, r9
   115e8:	mov	r3, r0
   115ec:	mov	r0, r8
   115f0:	bl	10e14 <error@plt>
   115f4:	cmp	r6, r5
   115f8:	bge	115a4 <close@plt+0x640>
   115fc:	ldr	r0, [sp, #12]
   11600:	bl	11ff4 <close@plt+0x1090>
   11604:	ldr	r0, [sp, #4]
   11608:	add	sp, sp, #8192	; 0x2000
   1160c:	add	sp, sp, #28
   11610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11614:	bl	10e80 <__errno_location@plt>
   11618:	mov	r3, #0
   1161c:	mov	r2, #5
   11620:	ldr	r1, [pc, #72]	; 11670 <close@plt+0x70c>
   11624:	str	r3, [sp, #4]
   11628:	ldr	r4, [r0]
   1162c:	mov	r0, r3
   11630:	bl	10da8 <dcgettext@plt>
   11634:	mov	r1, r4
   11638:	mov	r2, r0
   1163c:	mov	r0, #0
   11640:	bl	10e14 <error@plt>
   11644:	b	11574 <close@plt+0x610>
   11648:	str	r3, [sp, #4]
   1164c:	mov	r7, r3
   11650:	b	11438 <close@plt+0x4d4>
   11654:	andeq	r7, r2, r8, ror #2
   11658:	andeq	r7, r2, r8, asr r1
   1165c:	andeq	r5, r1, r0, lsl #10
   11660:	andeq	r5, r1, r4, lsl #10
   11664:	andeq	r7, r2, ip, asr r1
   11668:	andeq	r5, r1, r8, lsl #10
   1166c:	ldrdeq	r5, [r1], -r8
   11670:	andeq	r5, r1, r8, lsl r5
   11674:	subs	r6, r0, #0
   11678:	push	{r7, lr}
   1167c:	sub	sp, sp, #56	; 0x38
   11680:	beq	116bc <close@plt+0x758>
   11684:	ldr	r3, [pc, #660]	; 11920 <close@plt+0x9bc>
   11688:	mov	r2, #5
   1168c:	ldr	r1, [pc, #656]	; 11924 <close@plt+0x9c0>
   11690:	mov	r0, #0
   11694:	ldr	r4, [r3]
   11698:	bl	10da8 <dcgettext@plt>
   1169c:	ldr	r3, [pc, #644]	; 11928 <close@plt+0x9c4>
   116a0:	mov	r1, #1
   116a4:	ldr	r3, [r3]
   116a8:	mov	r2, r0
   116ac:	mov	r0, r4
   116b0:	bl	10ec8 <__fprintf_chk@plt>
   116b4:	mov	r0, r6
   116b8:	bl	10e68 <exit@plt>
   116bc:	mov	r2, #5
   116c0:	ldr	r1, [pc, #612]	; 1192c <close@plt+0x9c8>
   116c4:	bl	10da8 <dcgettext@plt>
   116c8:	ldr	r3, [pc, #600]	; 11928 <close@plt+0x9c4>
   116cc:	ldr	r7, [pc, #604]	; 11930 <close@plt+0x9cc>
   116d0:	ldr	r4, [pc, #604]	; 11934 <close@plt+0x9d0>
   116d4:	ldr	r2, [r3]
   116d8:	mov	r1, r0
   116dc:	mov	r0, #1
   116e0:	bl	10eb0 <__printf_chk@plt>
   116e4:	mov	r2, #5
   116e8:	ldr	r1, [pc, #584]	; 11938 <close@plt+0x9d4>
   116ec:	mov	r0, r6
   116f0:	bl	10da8 <dcgettext@plt>
   116f4:	ldr	r1, [r7]
   116f8:	bl	10d00 <fputs_unlocked@plt>
   116fc:	mov	r2, #5
   11700:	ldr	r1, [pc, #564]	; 1193c <close@plt+0x9d8>
   11704:	mov	r0, r6
   11708:	bl	10da8 <dcgettext@plt>
   1170c:	ldr	r1, [r7]
   11710:	bl	10d00 <fputs_unlocked@plt>
   11714:	mov	r2, #5
   11718:	ldr	r1, [pc, #544]	; 11940 <close@plt+0x9dc>
   1171c:	mov	r0, r6
   11720:	bl	10da8 <dcgettext@plt>
   11724:	ldr	r1, [r7]
   11728:	bl	10d00 <fputs_unlocked@plt>
   1172c:	mov	r2, #5
   11730:	ldr	r1, [pc, #524]	; 11944 <close@plt+0x9e0>
   11734:	mov	r0, r6
   11738:	bl	10da8 <dcgettext@plt>
   1173c:	ldr	r1, [r7]
   11740:	bl	10d00 <fputs_unlocked@plt>
   11744:	mov	r2, #5
   11748:	ldr	r1, [pc, #504]	; 11948 <close@plt+0x9e4>
   1174c:	mov	r0, r6
   11750:	bl	10da8 <dcgettext@plt>
   11754:	ldr	r1, [r7]
   11758:	bl	10d00 <fputs_unlocked@plt>
   1175c:	ldm	r4!, {r0, r1, r2, r3}
   11760:	mov	lr, sp
   11764:	stmia	lr!, {r0, r1, r2, r3}
   11768:	ldm	r4!, {r0, r1, r2, r3}
   1176c:	ldr	ip, [sp]
   11770:	stmia	lr!, {r0, r1, r2, r3}
   11774:	cmp	ip, #0
   11778:	ldm	r4!, {r0, r1, r2, r3}
   1177c:	stmia	lr!, {r0, r1, r2, r3}
   11780:	ldm	r4, {r0, r1}
   11784:	moveq	r4, sp
   11788:	stm	lr, {r0, r1}
   1178c:	beq	117bc <close@plt+0x858>
   11790:	ldr	r5, [pc, #436]	; 1194c <close@plt+0x9e8>
   11794:	mov	r4, sp
   11798:	b	117a8 <close@plt+0x844>
   1179c:	ldr	ip, [r4, #8]!
   117a0:	cmp	ip, #0
   117a4:	beq	117bc <close@plt+0x858>
   117a8:	mov	r1, ip
   117ac:	mov	r0, r5
   117b0:	bl	10d18 <strcmp@plt>
   117b4:	cmp	r0, #0
   117b8:	bne	1179c <close@plt+0x838>
   117bc:	ldr	r4, [r4, #4]
   117c0:	mov	r2, #5
   117c4:	cmp	r4, #0
   117c8:	ldr	r1, [pc, #384]	; 11950 <close@plt+0x9ec>
   117cc:	beq	11874 <close@plt+0x910>
   117d0:	mov	r0, #0
   117d4:	bl	10da8 <dcgettext@plt>
   117d8:	ldr	r3, [pc, #372]	; 11954 <close@plt+0x9f0>
   117dc:	ldr	r2, [pc, #372]	; 11958 <close@plt+0x9f4>
   117e0:	mov	r1, r0
   117e4:	mov	r0, #1
   117e8:	bl	10eb0 <__printf_chk@plt>
   117ec:	mov	r1, #0
   117f0:	mov	r0, #5
   117f4:	bl	10f04 <setlocale@plt>
   117f8:	cmp	r0, #0
   117fc:	ldreq	r5, [pc, #328]	; 1194c <close@plt+0x9e8>
   11800:	beq	1181c <close@plt+0x8b8>
   11804:	mov	r2, #3
   11808:	ldr	r1, [pc, #332]	; 1195c <close@plt+0x9f8>
   1180c:	bl	10f4c <strncmp@plt>
   11810:	ldr	r5, [pc, #308]	; 1194c <close@plt+0x9e8>
   11814:	cmp	r0, #0
   11818:	bne	11904 <close@plt+0x9a0>
   1181c:	mov	r2, #5
   11820:	ldr	r1, [pc, #312]	; 11960 <close@plt+0x9fc>
   11824:	mov	r0, #0
   11828:	bl	10da8 <dcgettext@plt>
   1182c:	ldr	r3, [pc, #280]	; 1194c <close@plt+0x9e8>
   11830:	ldr	r2, [pc, #284]	; 11954 <close@plt+0x9f0>
   11834:	mov	r1, r0
   11838:	mov	r0, #1
   1183c:	bl	10eb0 <__printf_chk@plt>
   11840:	mov	r2, #5
   11844:	ldr	r1, [pc, #280]	; 11964 <close@plt+0xa00>
   11848:	mov	r0, #0
   1184c:	bl	10da8 <dcgettext@plt>
   11850:	ldr	r2, [pc, #272]	; 11968 <close@plt+0xa04>
   11854:	cmp	r4, r5
   11858:	ldr	r3, [pc, #268]	; 1196c <close@plt+0xa08>
   1185c:	movne	r3, r2
   11860:	mov	r1, r0
   11864:	mov	r2, r4
   11868:	mov	r0, #1
   1186c:	bl	10eb0 <__printf_chk@plt>
   11870:	b	116b4 <close@plt+0x750>
   11874:	mov	r0, r4
   11878:	bl	10da8 <dcgettext@plt>
   1187c:	ldr	r3, [pc, #208]	; 11954 <close@plt+0x9f0>
   11880:	ldr	r2, [pc, #208]	; 11958 <close@plt+0x9f4>
   11884:	mov	r1, r0
   11888:	mov	r0, #1
   1188c:	bl	10eb0 <__printf_chk@plt>
   11890:	mov	r1, r4
   11894:	mov	r0, #5
   11898:	bl	10f04 <setlocale@plt>
   1189c:	cmp	r0, #0
   118a0:	beq	118b8 <close@plt+0x954>
   118a4:	mov	r2, #3
   118a8:	ldr	r1, [pc, #172]	; 1195c <close@plt+0x9f8>
   118ac:	bl	10f4c <strncmp@plt>
   118b0:	cmp	r0, #0
   118b4:	bne	118fc <close@plt+0x998>
   118b8:	mov	r2, #5
   118bc:	ldr	r1, [pc, #156]	; 11960 <close@plt+0x9fc>
   118c0:	mov	r0, #0
   118c4:	bl	10da8 <dcgettext@plt>
   118c8:	ldr	r3, [pc, #124]	; 1194c <close@plt+0x9e8>
   118cc:	ldr	r2, [pc, #128]	; 11954 <close@plt+0x9f0>
   118d0:	mov	r4, r3
   118d4:	mov	r1, r0
   118d8:	mov	r0, #1
   118dc:	bl	10eb0 <__printf_chk@plt>
   118e0:	ldr	r1, [pc, #124]	; 11964 <close@plt+0xa00>
   118e4:	mov	r2, #5
   118e8:	mov	r0, #0
   118ec:	bl	10da8 <dcgettext@plt>
   118f0:	ldr	r3, [pc, #116]	; 1196c <close@plt+0xa08>
   118f4:	mov	r1, r0
   118f8:	b	11864 <close@plt+0x900>
   118fc:	ldr	r5, [pc, #72]	; 1194c <close@plt+0x9e8>
   11900:	mov	r4, r5
   11904:	mov	r2, #5
   11908:	ldr	r1, [pc, #96]	; 11970 <close@plt+0xa0c>
   1190c:	mov	r0, #0
   11910:	bl	10da8 <dcgettext@plt>
   11914:	ldr	r1, [r7]
   11918:	bl	10d00 <fputs_unlocked@plt>
   1191c:	b	1181c <close@plt+0x8b8>
   11920:	andeq	r7, r2, r0, asr r1
   11924:	andeq	r5, r1, r8, lsr #10
   11928:	andeq	r7, r2, ip, ror r1
   1192c:	andeq	r5, r1, r0, asr r5
   11930:	andeq	r7, r2, ip, asr r1
   11934:	andeq	r5, r1, r4, asr #8
   11938:	andeq	r5, r1, r4, ror r5
   1193c:	andeq	r5, r1, r4, lsr r6
   11940:	andeq	r5, r1, r4, asr #13
   11944:	strdeq	r5, [r1], -r4
   11948:	andeq	r5, r1, ip, lsr #14
   1194c:	andeq	r5, r1, r4, lsr #10
   11950:	andeq	r5, r1, ip, lsr #18
   11954:	andeq	r5, r1, r4, asr #18
   11958:	andeq	r5, r1, ip, ror #18
   1195c:	andeq	r5, r1, ip, ror r9
   11960:	andeq	r5, r1, r8, asr #19
   11964:	andeq	r5, r1, r4, ror #19
   11968:	andeq	r5, r1, r0, ror r5
   1196c:	andeq	r5, r1, ip, lsl #21
   11970:	andeq	r5, r1, r0, lsl #19
   11974:	mov	r0, #1
   11978:	b	11674 <close@plt+0x710>
   1197c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11980:	mov	r5, r1
   11984:	sub	sp, sp, #12
   11988:	mov	r4, r2
   1198c:	str	r2, [sp]
   11990:	mov	r7, r3
   11994:	mov	sl, r0
   11998:	bl	10e74 <strlen@plt>
   1199c:	ldr	fp, [r5]
   119a0:	cmp	fp, #0
   119a4:	beq	11a6c <close@plt+0xb08>
   119a8:	mov	r3, #0
   119ac:	mov	r8, r0
   119b0:	str	r3, [sp, #4]
   119b4:	mov	r6, r3
   119b8:	mvn	r9, #0
   119bc:	b	119e8 <close@plt+0xa84>
   119c0:	bl	10d90 <memcmp@plt>
   119c4:	ldr	r3, [sp, #4]
   119c8:	cmp	r0, #0
   119cc:	movne	r3, #1
   119d0:	str	r3, [sp, #4]
   119d4:	ldr	fp, [r5, #4]!
   119d8:	add	r6, r6, #1
   119dc:	cmp	fp, #0
   119e0:	add	r4, r4, r7
   119e4:	beq	11a44 <close@plt+0xae0>
   119e8:	mov	r2, r8
   119ec:	mov	r1, sl
   119f0:	mov	r0, fp
   119f4:	bl	10f4c <strncmp@plt>
   119f8:	cmp	r0, #0
   119fc:	mov	r0, fp
   11a00:	bne	119d4 <close@plt+0xa70>
   11a04:	bl	10e74 <strlen@plt>
   11a08:	ldr	r3, [sp]
   11a0c:	mov	r2, r7
   11a10:	mov	r1, r4
   11a14:	cmp	r8, r0
   11a18:	mla	r0, r7, r9, r3
   11a1c:	beq	11a5c <close@plt+0xaf8>
   11a20:	cmn	r9, #1
   11a24:	moveq	r9, r6
   11a28:	beq	119d4 <close@plt+0xa70>
   11a2c:	ldr	r3, [sp]
   11a30:	cmp	r3, #0
   11a34:	bne	119c0 <close@plt+0xa5c>
   11a38:	mov	r3, #1
   11a3c:	str	r3, [sp, #4]
   11a40:	b	119d4 <close@plt+0xa70>
   11a44:	ldr	r3, [sp, #4]
   11a48:	cmp	r3, #0
   11a4c:	mvnne	r9, #1
   11a50:	mov	r0, r9
   11a54:	add	sp, sp, #12
   11a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a5c:	mov	r9, r6
   11a60:	mov	r0, r9
   11a64:	add	sp, sp, #12
   11a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a6c:	mvn	r9, #0
   11a70:	b	11a50 <close@plt+0xaec>
   11a74:	push	{r4, r5, r6, lr}
   11a78:	mov	r6, r0
   11a7c:	ldr	r0, [r1]
   11a80:	cmp	r0, #0
   11a84:	beq	11abc <close@plt+0xb58>
   11a88:	mov	r4, r1
   11a8c:	mov	r5, #0
   11a90:	b	11aa4 <close@plt+0xb40>
   11a94:	ldr	r0, [r4, #4]!
   11a98:	add	r5, r5, #1
   11a9c:	cmp	r0, #0
   11aa0:	beq	11abc <close@plt+0xb58>
   11aa4:	mov	r1, r6
   11aa8:	bl	10d18 <strcmp@plt>
   11aac:	cmp	r0, #0
   11ab0:	bne	11a94 <close@plt+0xb30>
   11ab4:	mov	r0, r5
   11ab8:	pop	{r4, r5, r6, pc}
   11abc:	mvn	r0, #0
   11ac0:	pop	{r4, r5, r6, pc}
   11ac4:	cmn	r2, #1
   11ac8:	push	{r4, r5, r6, lr}
   11acc:	mov	r2, #5
   11ad0:	sub	sp, sp, #8
   11ad4:	mov	r4, r1
   11ad8:	mov	r5, r0
   11adc:	ldreq	r1, [pc, #76]	; 11b30 <close@plt+0xbcc>
   11ae0:	ldrne	r1, [pc, #76]	; 11b34 <close@plt+0xbd0>
   11ae4:	mov	r0, #0
   11ae8:	bl	10da8 <dcgettext@plt>
   11aec:	mov	r2, r4
   11af0:	mov	r1, #8
   11af4:	mov	r6, r0
   11af8:	mov	r0, #0
   11afc:	bl	13d00 <close@plt+0x2d9c>
   11b00:	mov	r1, r5
   11b04:	mov	r4, r0
   11b08:	mov	r0, #1
   11b0c:	bl	13f9c <close@plt+0x3038>
   11b10:	mov	r1, #0
   11b14:	mov	r3, r4
   11b18:	mov	r2, r6
   11b1c:	str	r0, [sp]
   11b20:	mov	r0, r1
   11b24:	bl	10e14 <error@plt>
   11b28:	add	sp, sp, #8
   11b2c:	pop	{r4, r5, r6, pc}
   11b30:	andeq	r5, r1, r4, ror #22
   11b34:	andeq	r5, r1, r0, lsl #23
   11b38:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b3c:	mov	r6, r0
   11b40:	ldr	r9, [pc, #232]	; 11c30 <close@plt+0xccc>
   11b44:	mov	r4, r1
   11b48:	mov	r7, r2
   11b4c:	ldr	r1, [pc, #224]	; 11c34 <close@plt+0xcd0>
   11b50:	mov	r2, #5
   11b54:	mov	r0, #0
   11b58:	bl	10da8 <dcgettext@plt>
   11b5c:	ldr	r1, [r9]
   11b60:	bl	10d00 <fputs_unlocked@plt>
   11b64:	ldr	fp, [r6]
   11b68:	cmp	fp, #0
   11b6c:	movne	r8, #0
   11b70:	movne	r5, r8
   11b74:	movne	sl, #1
   11b78:	bne	11bb8 <close@plt+0xc54>
   11b7c:	b	11bfc <close@plt+0xc98>
   11b80:	mov	r0, fp
   11b84:	ldr	r8, [r9]
   11b88:	bl	13fac <close@plt+0x3048>
   11b8c:	ldr	r2, [pc, #164]	; 11c38 <close@plt+0xcd4>
   11b90:	mov	r1, sl
   11b94:	mov	r3, r0
   11b98:	mov	r0, r8
   11b9c:	bl	10ec8 <__fprintf_chk@plt>
   11ba0:	mov	r8, r4
   11ba4:	ldr	fp, [r6, #4]!
   11ba8:	add	r5, r5, #1
   11bac:	cmp	fp, #0
   11bb0:	add	r4, r4, r7
   11bb4:	beq	11bfc <close@plt+0xc98>
   11bb8:	cmp	r5, #0
   11bbc:	mov	r1, r4
   11bc0:	mov	r2, r7
   11bc4:	mov	r0, r8
   11bc8:	beq	11b80 <close@plt+0xc1c>
   11bcc:	bl	10d90 <memcmp@plt>
   11bd0:	cmp	r0, #0
   11bd4:	bne	11b80 <close@plt+0xc1c>
   11bd8:	mov	r0, fp
   11bdc:	ldr	fp, [r9]
   11be0:	bl	13fac <close@plt+0x3048>
   11be4:	ldr	r2, [pc, #80]	; 11c3c <close@plt+0xcd8>
   11be8:	mov	r1, sl
   11bec:	mov	r3, r0
   11bf0:	mov	r0, fp
   11bf4:	bl	10ec8 <__fprintf_chk@plt>
   11bf8:	b	11ba4 <close@plt+0xc40>
   11bfc:	ldr	r0, [r9]
   11c00:	ldr	r3, [r0, #20]
   11c04:	ldr	r2, [r0, #24]
   11c08:	cmp	r3, r2
   11c0c:	bcs	11c24 <close@plt+0xcc0>
   11c10:	add	r1, r3, #1
   11c14:	mov	r2, #10
   11c18:	str	r1, [r0, #20]
   11c1c:	strb	r2, [r3]
   11c20:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c24:	mov	r1, #10
   11c28:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c2c:	b	10ef8 <__overflow@plt>
   11c30:	andeq	r7, r2, r0, asr r1
   11c34:	andeq	r5, r1, r0, lsr #23
   11c38:			; <UNDEFINED> instruction: 0x00015bb8
   11c3c:	andeq	r5, r1, r0, asr #23
   11c40:	push	{r4, r5, r6, r7, r8, lr}
   11c44:	mov	r7, r0
   11c48:	ldrb	ip, [sp, #32]
   11c4c:	mov	r5, r1
   11c50:	mov	r4, r2
   11c54:	cmp	ip, #0
   11c58:	mov	r6, r3
   11c5c:	beq	11cac <close@plt+0xd48>
   11c60:	ldr	r3, [sp, #24]
   11c64:	mov	r2, r6
   11c68:	mov	r1, r4
   11c6c:	mov	r0, r5
   11c70:	bl	1197c <close@plt+0xa18>
   11c74:	cmp	r0, #0
   11c78:	popge	{r4, r5, r6, r7, r8, pc}
   11c7c:	mov	r2, r0
   11c80:	mov	r1, r5
   11c84:	mov	r0, r7
   11c88:	bl	11ac4 <close@plt+0xb60>
   11c8c:	mov	r0, r4
   11c90:	ldr	r2, [sp, #24]
   11c94:	mov	r1, r6
   11c98:	bl	11b38 <close@plt+0xbd4>
   11c9c:	ldr	r3, [sp, #28]
   11ca0:	blx	r3
   11ca4:	mvn	r0, #0
   11ca8:	pop	{r4, r5, r6, r7, r8, pc}
   11cac:	mov	r1, r2
   11cb0:	mov	r0, r5
   11cb4:	bl	11a74 <close@plt+0xb10>
   11cb8:	cmp	r0, #0
   11cbc:	popge	{r4, r5, r6, r7, r8, pc}
   11cc0:	b	11c7c <close@plt+0xd18>
   11cc4:	push	{r4, r5, r6, r7, r8, lr}
   11cc8:	ldr	r7, [r1]
   11ccc:	cmp	r7, #0
   11cd0:	beq	11d10 <close@plt+0xdac>
   11cd4:	mov	r6, r3
   11cd8:	mov	r8, r0
   11cdc:	mov	r4, r2
   11ce0:	mov	r5, r1
   11ce4:	b	11cf4 <close@plt+0xd90>
   11ce8:	ldr	r7, [r5, #4]!
   11cec:	cmp	r7, #0
   11cf0:	beq	11d10 <close@plt+0xdac>
   11cf4:	mov	r1, r4
   11cf8:	mov	r2, r6
   11cfc:	mov	r0, r8
   11d00:	bl	10d90 <memcmp@plt>
   11d04:	add	r4, r4, r6
   11d08:	cmp	r0, #0
   11d0c:	bne	11ce8 <close@plt+0xd84>
   11d10:	mov	r0, r7
   11d14:	pop	{r4, r5, r6, r7, r8, pc}
   11d18:	ldr	r3, [pc, #4]	; 11d24 <close@plt+0xdc0>
   11d1c:	str	r0, [r3]
   11d20:	bx	lr
   11d24:	andeq	r7, r2, r4, ror r1
   11d28:	ldr	r3, [pc, #4]	; 11d34 <close@plt+0xdd0>
   11d2c:	strb	r0, [r3, #4]
   11d30:	bx	lr
   11d34:	andeq	r7, r2, r4, ror r1
   11d38:	ldr	r3, [pc, #192]	; 11e00 <close@plt+0xe9c>
   11d3c:	push	{r4, r5, r6, lr}
   11d40:	sub	sp, sp, #8
   11d44:	ldr	r0, [r3]
   11d48:	bl	14b48 <close@plt+0x3be4>
   11d4c:	cmp	r0, #0
   11d50:	beq	11d74 <close@plt+0xe10>
   11d54:	ldr	r4, [pc, #168]	; 11e04 <close@plt+0xea0>
   11d58:	ldrb	r3, [r4, #4]
   11d5c:	cmp	r3, #0
   11d60:	beq	11d90 <close@plt+0xe2c>
   11d64:	bl	10e80 <__errno_location@plt>
   11d68:	ldr	r3, [r0]
   11d6c:	cmp	r3, #32
   11d70:	bne	11d90 <close@plt+0xe2c>
   11d74:	ldr	r3, [pc, #140]	; 11e08 <close@plt+0xea4>
   11d78:	ldr	r0, [r3]
   11d7c:	bl	14b48 <close@plt+0x3be4>
   11d80:	cmp	r0, #0
   11d84:	bne	11dd8 <close@plt+0xe74>
   11d88:	add	sp, sp, #8
   11d8c:	pop	{r4, r5, r6, pc}
   11d90:	mov	r2, #5
   11d94:	ldr	r1, [pc, #112]	; 11e0c <close@plt+0xea8>
   11d98:	mov	r0, #0
   11d9c:	bl	10da8 <dcgettext@plt>
   11da0:	ldr	r4, [r4]
   11da4:	cmp	r4, #0
   11da8:	mov	r5, r0
   11dac:	beq	11de4 <close@plt+0xe80>
   11db0:	bl	10e80 <__errno_location@plt>
   11db4:	ldr	r6, [r0]
   11db8:	mov	r0, r4
   11dbc:	bl	13e14 <close@plt+0x2eb0>
   11dc0:	mov	r1, r6
   11dc4:	str	r5, [sp]
   11dc8:	ldr	r2, [pc, #64]	; 11e10 <close@plt+0xeac>
   11dcc:	mov	r3, r0
   11dd0:	mov	r0, #0
   11dd4:	bl	10e14 <error@plt>
   11dd8:	ldr	r3, [pc, #52]	; 11e14 <close@plt+0xeb0>
   11ddc:	ldr	r0, [r3]
   11de0:	bl	10d54 <_exit@plt>
   11de4:	bl	10e80 <__errno_location@plt>
   11de8:	mov	r3, r5
   11dec:	ldr	r2, [pc, #36]	; 11e18 <close@plt+0xeb4>
   11df0:	ldr	r1, [r0]
   11df4:	mov	r0, r4
   11df8:	bl	10e14 <error@plt>
   11dfc:	b	11dd8 <close@plt+0xe74>
   11e00:	andeq	r7, r2, ip, asr r1
   11e04:	andeq	r7, r2, r4, ror r1
   11e08:	andeq	r7, r2, r0, asr r1
   11e0c:	andeq	r5, r1, r8, asr #23
   11e10:	ldrdeq	r5, [r1], -r4
   11e14:	strdeq	r7, [r2], -r8
   11e18:	ldrdeq	r5, [r1], -r8
   11e1c:	push	{r4, r5}
   11e20:	pop	{r4, r5}
   11e24:	b	10d24 <posix_fadvise64@plt>
   11e28:	cmp	r0, #0
   11e2c:	bxeq	lr
   11e30:	push	{r4, lr}
   11e34:	sub	sp, sp, #16
   11e38:	mov	r4, r1
   11e3c:	bl	10ebc <fileno@plt>
   11e40:	mov	r2, #0
   11e44:	mov	r3, #0
   11e48:	str	r4, [sp, #8]
   11e4c:	strd	r2, [sp]
   11e50:	bl	10d24 <posix_fadvise64@plt>
   11e54:	add	sp, sp, #16
   11e58:	pop	{r4, pc}
   11e5c:	push	{r4, r5, lr}
   11e60:	sub	sp, sp, #12
   11e64:	mov	r4, r0
   11e68:	bl	10ebc <fileno@plt>
   11e6c:	cmp	r0, #0
   11e70:	mov	r0, r4
   11e74:	blt	11ef0 <close@plt+0xf8c>
   11e78:	bl	10e38 <__freading@plt>
   11e7c:	cmp	r0, #0
   11e80:	bne	11ebc <close@plt+0xf58>
   11e84:	mov	r0, r4
   11e88:	bl	11efc <close@plt+0xf98>
   11e8c:	cmp	r0, #0
   11e90:	beq	11eec <close@plt+0xf88>
   11e94:	bl	10e80 <__errno_location@plt>
   11e98:	mov	r5, r0
   11e9c:	mov	r0, r4
   11ea0:	ldr	r4, [r5]
   11ea4:	bl	10ed4 <fclose@plt>
   11ea8:	cmp	r4, #0
   11eac:	mvnne	r0, #0
   11eb0:	strne	r4, [r5]
   11eb4:	add	sp, sp, #12
   11eb8:	pop	{r4, r5, pc}
   11ebc:	mov	r0, r4
   11ec0:	bl	10ebc <fileno@plt>
   11ec4:	mov	r3, #1
   11ec8:	str	r3, [sp]
   11ecc:	mov	r2, #0
   11ed0:	mov	r3, #0
   11ed4:	bl	10de4 <lseek64@plt>
   11ed8:	mvn	r3, #0
   11edc:	mvn	r2, #0
   11ee0:	cmp	r1, r3
   11ee4:	cmpeq	r0, r2
   11ee8:	bne	11e84 <close@plt+0xf20>
   11eec:	mov	r0, r4
   11ef0:	add	sp, sp, #12
   11ef4:	pop	{r4, r5, lr}
   11ef8:	b	10ed4 <fclose@plt>
   11efc:	push	{r4, lr}
   11f00:	subs	r4, r0, #0
   11f04:	sub	sp, sp, #8
   11f08:	beq	11f24 <close@plt+0xfc0>
   11f0c:	bl	10e38 <__freading@plt>
   11f10:	cmp	r0, #0
   11f14:	beq	11f24 <close@plt+0xfc0>
   11f18:	ldr	r3, [r4]
   11f1c:	tst	r3, #256	; 0x100
   11f20:	bne	11f34 <close@plt+0xfd0>
   11f24:	mov	r0, r4
   11f28:	add	sp, sp, #8
   11f2c:	pop	{r4, lr}
   11f30:	b	10d3c <fflush@plt>
   11f34:	mov	r3, #1
   11f38:	str	r3, [sp]
   11f3c:	mov	r2, #0
   11f40:	mov	r3, #0
   11f44:	mov	r0, r4
   11f48:	bl	1204c <close@plt+0x10e8>
   11f4c:	mov	r0, r4
   11f50:	add	sp, sp, #8
   11f54:	pop	{r4, lr}
   11f58:	b	10d3c <fflush@plt>
   11f5c:	push	{r4, r5, r6, lr}
   11f60:	mov	r5, r1
   11f64:	bl	10f34 <fopen64@plt>
   11f68:	subs	r4, r0, #0
   11f6c:	beq	11f7c <close@plt+0x1018>
   11f70:	bl	10ebc <fileno@plt>
   11f74:	cmp	r0, #2
   11f78:	bls	11f84 <close@plt+0x1020>
   11f7c:	mov	r0, r4
   11f80:	pop	{r4, r5, r6, pc}
   11f84:	bl	13fc4 <close@plt+0x3060>
   11f88:	subs	r6, r0, #0
   11f8c:	blt	11fd4 <close@plt+0x1070>
   11f90:	mov	r0, r4
   11f94:	bl	11e5c <close@plt+0xef8>
   11f98:	cmp	r0, #0
   11f9c:	bne	11fb4 <close@plt+0x1050>
   11fa0:	mov	r1, r5
   11fa4:	mov	r0, r6
   11fa8:	bl	10ce8 <fdopen@plt>
   11fac:	subs	r4, r0, #0
   11fb0:	bne	11f7c <close@plt+0x1018>
   11fb4:	bl	10e80 <__errno_location@plt>
   11fb8:	mov	r4, #0
   11fbc:	mov	r5, r0
   11fc0:	mov	r0, r6
   11fc4:	ldr	r6, [r5]
   11fc8:	bl	10f64 <close@plt>
   11fcc:	str	r6, [r5]
   11fd0:	b	11f7c <close@plt+0x1018>
   11fd4:	bl	10e80 <__errno_location@plt>
   11fd8:	mov	r5, r0
   11fdc:	mov	r0, r4
   11fe0:	ldr	r6, [r5]
   11fe4:	mov	r4, #0
   11fe8:	bl	11e5c <close@plt+0xef8>
   11fec:	str	r6, [r5]
   11ff0:	b	11f7c <close@plt+0x1018>
   11ff4:	push	{r4, r5, lr}
   11ff8:	sub	sp, sp, #12
   11ffc:	mov	r5, r0
   12000:	bl	10e80 <__errno_location@plt>
   12004:	mov	r2, #0
   12008:	mov	r4, r0
   1200c:	ldr	r3, [r0]
   12010:	str	r2, [r4]
   12014:	mov	r0, r5
   12018:	str	r3, [sp]
   1201c:	str	r3, [sp, #4]
   12020:	bl	10d48 <free@plt>
   12024:	ldr	r3, [r4]
   12028:	add	r2, sp, #8
   1202c:	cmp	r3, #0
   12030:	moveq	r3, #4
   12034:	movne	r3, #0
   12038:	add	r3, r2, r3
   1203c:	ldr	r3, [r3, #-8]
   12040:	str	r3, [r4]
   12044:	add	sp, sp, #12
   12048:	pop	{r4, r5, pc}
   1204c:	push	{r4, r5, r6, r7, r8, lr}
   12050:	sub	sp, sp, #8
   12054:	ldmib	r0, {ip, lr}
   12058:	mov	r4, r0
   1205c:	ldr	r5, [sp, #32]
   12060:	cmp	lr, ip
   12064:	beq	1207c <close@plt+0x1118>
   12068:	str	r5, [sp, #32]
   1206c:	mov	r0, r4
   12070:	add	sp, sp, #8
   12074:	pop	{r4, r5, r6, r7, r8, lr}
   12078:	b	10ee0 <fseeko64@plt>
   1207c:	ldr	lr, [r0, #20]
   12080:	ldr	ip, [r0, #16]
   12084:	cmp	lr, ip
   12088:	bne	12068 <close@plt+0x1104>
   1208c:	ldr	r8, [r0, #36]	; 0x24
   12090:	cmp	r8, #0
   12094:	bne	12068 <close@plt+0x1104>
   12098:	mov	r6, r2
   1209c:	mov	r7, r3
   120a0:	bl	10ebc <fileno@plt>
   120a4:	mov	r2, r6
   120a8:	mov	r3, r7
   120ac:	str	r5, [sp]
   120b0:	bl	10de4 <lseek64@plt>
   120b4:	mvn	r3, #0
   120b8:	mvn	r2, #0
   120bc:	cmp	r1, r3
   120c0:	cmpeq	r0, r2
   120c4:	beq	120e4 <close@plt+0x1180>
   120c8:	ldr	r3, [r4]
   120cc:	strd	r0, [r4, #80]	; 0x50
   120d0:	mov	r0, r8
   120d4:	bic	r3, r3, #16
   120d8:	str	r3, [r4]
   120dc:	add	sp, sp, #8
   120e0:	pop	{r4, r5, r6, r7, r8, pc}
   120e4:	mvn	r0, #0
   120e8:	b	120dc <close@plt+0x1178>
   120ec:	push	{r4, r5, r6, lr}
   120f0:	subs	r4, r0, #0
   120f4:	beq	12168 <close@plt+0x1204>
   120f8:	mov	r1, #47	; 0x2f
   120fc:	bl	10f10 <strrchr@plt>
   12100:	subs	r5, r0, #0
   12104:	beq	12154 <close@plt+0x11f0>
   12108:	add	r6, r5, #1
   1210c:	sub	r3, r6, r4
   12110:	cmp	r3, #6
   12114:	ble	12154 <close@plt+0x11f0>
   12118:	mov	r2, #7
   1211c:	ldr	r1, [pc, #96]	; 12184 <close@plt+0x1220>
   12120:	sub	r0, r5, #6
   12124:	bl	10f4c <strncmp@plt>
   12128:	cmp	r0, #0
   1212c:	bne	12154 <close@plt+0x11f0>
   12130:	mov	r2, #3
   12134:	ldr	r1, [pc, #76]	; 12188 <close@plt+0x1224>
   12138:	mov	r0, r6
   1213c:	bl	10f4c <strncmp@plt>
   12140:	cmp	r0, #0
   12144:	movne	r4, r6
   12148:	ldreq	r3, [pc, #60]	; 1218c <close@plt+0x1228>
   1214c:	addeq	r4, r5, #4
   12150:	streq	r4, [r3]
   12154:	ldr	r2, [pc, #52]	; 12190 <close@plt+0x122c>
   12158:	ldr	r3, [pc, #52]	; 12194 <close@plt+0x1230>
   1215c:	str	r4, [r2]
   12160:	str	r4, [r3]
   12164:	pop	{r4, r5, r6, pc}
   12168:	ldr	r3, [pc, #40]	; 12198 <close@plt+0x1234>
   1216c:	mov	r2, #55	; 0x37
   12170:	mov	r1, #1
   12174:	ldr	r3, [r3]
   12178:	ldr	r0, [pc, #28]	; 1219c <close@plt+0x1238>
   1217c:	bl	10dd8 <fwrite@plt>
   12180:	bl	10f58 <abort@plt>
   12184:	andeq	r5, r1, r4, lsl ip
   12188:	andeq	r5, r1, ip, lsl ip
   1218c:	andeq	r7, r2, r0, asr #2
   12190:	andeq	r7, r2, ip, ror r1
   12194:	andeq	r7, r2, r4, asr #2
   12198:	andeq	r7, r2, r0, asr r1
   1219c:	ldrdeq	r5, [r1], -ip
   121a0:	push	{r4, r5, r6, lr}
   121a4:	mov	r2, #48	; 0x30
   121a8:	mov	r4, r1
   121ac:	mov	r1, #0
   121b0:	mov	r5, r0
   121b4:	bl	10ea4 <memset@plt>
   121b8:	cmp	r4, #10
   121bc:	beq	121cc <close@plt+0x1268>
   121c0:	str	r4, [r5]
   121c4:	mov	r0, r5
   121c8:	pop	{r4, r5, r6, pc}
   121cc:	bl	10f58 <abort@plt>
   121d0:	push	{r4, r5, r6, lr}
   121d4:	mov	r4, r0
   121d8:	mov	r5, r1
   121dc:	bl	14d98 <close@plt+0x3e34>
   121e0:	ldrb	r3, [r0]
   121e4:	bic	r3, r3, #32
   121e8:	cmp	r3, #85	; 0x55
   121ec:	bne	1224c <close@plt+0x12e8>
   121f0:	ldrb	r3, [r0, #1]
   121f4:	bic	r3, r3, #32
   121f8:	cmp	r3, #84	; 0x54
   121fc:	bne	12288 <close@plt+0x1324>
   12200:	ldrb	r3, [r0, #2]
   12204:	bic	r3, r3, #32
   12208:	cmp	r3, #70	; 0x46
   1220c:	bne	12288 <close@plt+0x1324>
   12210:	ldrb	r3, [r0, #3]
   12214:	cmp	r3, #45	; 0x2d
   12218:	bne	12288 <close@plt+0x1324>
   1221c:	ldrb	r3, [r0, #4]
   12220:	cmp	r3, #56	; 0x38
   12224:	bne	12288 <close@plt+0x1324>
   12228:	ldrb	r3, [r0, #5]
   1222c:	cmp	r3, #0
   12230:	bne	12288 <close@plt+0x1324>
   12234:	ldrb	r2, [r4]
   12238:	ldr	r3, [pc, #152]	; 122d8 <close@plt+0x1374>
   1223c:	ldr	r0, [pc, #152]	; 122dc <close@plt+0x1378>
   12240:	cmp	r2, #96	; 0x60
   12244:	movne	r0, r3
   12248:	pop	{r4, r5, r6, pc}
   1224c:	cmp	r3, #71	; 0x47
   12250:	bne	12288 <close@plt+0x1324>
   12254:	ldrb	r3, [r0, #1]
   12258:	bic	r3, r3, #32
   1225c:	cmp	r3, #66	; 0x42
   12260:	bne	12288 <close@plt+0x1324>
   12264:	ldrb	r3, [r0, #2]
   12268:	cmp	r3, #49	; 0x31
   1226c:	bne	12288 <close@plt+0x1324>
   12270:	ldrb	r3, [r0, #3]
   12274:	cmp	r3, #56	; 0x38
   12278:	bne	12288 <close@plt+0x1324>
   1227c:	ldrb	r3, [r0, #4]
   12280:	cmp	r3, #48	; 0x30
   12284:	beq	1229c <close@plt+0x1338>
   12288:	ldr	r3, [pc, #80]	; 122e0 <close@plt+0x137c>
   1228c:	cmp	r5, #9
   12290:	ldr	r0, [pc, #76]	; 122e4 <close@plt+0x1380>
   12294:	movne	r0, r3
   12298:	pop	{r4, r5, r6, pc}
   1229c:	ldrb	r3, [r0, #5]
   122a0:	cmp	r3, #51	; 0x33
   122a4:	bne	12288 <close@plt+0x1324>
   122a8:	ldrb	r3, [r0, #6]
   122ac:	cmp	r3, #48	; 0x30
   122b0:	bne	12288 <close@plt+0x1324>
   122b4:	ldrb	r3, [r0, #7]
   122b8:	cmp	r3, #0
   122bc:	bne	12288 <close@plt+0x1324>
   122c0:	ldrb	r2, [r4]
   122c4:	ldr	r3, [pc, #28]	; 122e8 <close@plt+0x1384>
   122c8:	ldr	r0, [pc, #28]	; 122ec <close@plt+0x1388>
   122cc:	cmp	r2, #96	; 0x60
   122d0:	movne	r0, r3
   122d4:	pop	{r4, r5, r6, pc}
   122d8:	andeq	r5, r1, r8, ror ip
   122dc:	andeq	r5, r1, r4, ror ip
   122e0:	andeq	r5, r1, r8, lsl #25
   122e4:	andeq	r5, r1, r4, lsl #25
   122e8:	andeq	r5, r1, r0, lsl #25
   122ec:	andeq	r5, r1, ip, ror ip
   122f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122f4:	sub	sp, sp, #116	; 0x74
   122f8:	mov	sl, r0
   122fc:	str	r3, [sp, #24]
   12300:	mov	r3, #1
   12304:	mov	r8, r1
   12308:	str	r2, [sp, #56]	; 0x38
   1230c:	str	r3, [sp, #36]	; 0x24
   12310:	bl	10df0 <__ctype_get_mb_cur_max@plt>
   12314:	ldr	r3, [sp, #156]	; 0x9c
   12318:	mov	fp, r8
   1231c:	mov	r2, #0
   12320:	lsr	r3, r3, #1
   12324:	and	r3, r3, #1
   12328:	str	r2, [sp, #68]	; 0x44
   1232c:	str	r3, [sp, #28]
   12330:	str	r2, [sp, #40]	; 0x28
   12334:	str	r2, [sp, #44]	; 0x2c
   12338:	str	r2, [sp, #52]	; 0x34
   1233c:	str	r2, [sp, #64]	; 0x40
   12340:	str	r2, [sp, #72]	; 0x48
   12344:	str	sl, [sp, #32]
   12348:	str	r0, [sp, #76]	; 0x4c
   1234c:	ldr	r3, [sp, #152]	; 0x98
   12350:	cmp	r3, #10
   12354:	ldrls	pc, [pc, r3, lsl #2]
   12358:	b	13518 <close@plt+0x25b4>
   1235c:	andeq	r2, r1, r8, lsl #7
   12360:	andeq	r2, r1, r0, ror r6
   12364:	muleq	r1, r4, r6
   12368:			; <UNDEFINED> instruction: 0x000126b8
   1236c:	andeq	r2, r1, r4, ror #15
   12370:			; <UNDEFINED> instruction: 0x000127b8
   12374:	muleq	r1, r0, r7
   12378:	andeq	r2, r1, ip, asr #13
   1237c:	andeq	r2, r1, r4, ror #13
   12380:	andeq	r2, r1, r4, ror #13
   12384:	andeq	r2, r1, r4, ror #13
   12388:	mov	r3, #0
   1238c:	mov	r7, r3
   12390:	str	r3, [sp, #28]
   12394:	ldr	r3, [sp, #44]	; 0x2c
   12398:	mov	sl, #0
   1239c:	eor	r3, r3, #1
   123a0:	str	r3, [sp, #60]	; 0x3c
   123a4:	ldr	r3, [sp, #24]
   123a8:	cmn	r3, #1
   123ac:	beq	12910 <close@plt+0x19ac>
   123b0:	ldr	r3, [sp, #24]
   123b4:	subs	r5, r3, sl
   123b8:	movne	r5, #1
   123bc:	cmp	r5, #0
   123c0:	beq	12928 <close@plt+0x19c4>
   123c4:	ldr	r3, [sp, #152]	; 0x98
   123c8:	ldr	r8, [sp, #44]	; 0x2c
   123cc:	cmp	r3, #2
   123d0:	moveq	r8, #0
   123d4:	andne	r8, r8, #1
   123d8:	ldr	r3, [sp, #52]	; 0x34
   123dc:	adds	r9, r3, #0
   123e0:	movne	r9, #1
   123e4:	ands	r6, r9, r8
   123e8:	beq	12d90 <close@plt+0x1e2c>
   123ec:	ldr	r2, [sp, #52]	; 0x34
   123f0:	ldr	r1, [sp, #24]
   123f4:	cmp	r2, #1
   123f8:	mov	r3, r2
   123fc:	movls	r3, #0
   12400:	movhi	r3, #1
   12404:	cmn	r1, #1
   12408:	movne	r3, #0
   1240c:	cmp	r3, #0
   12410:	add	r4, sl, r2
   12414:	beq	12424 <close@plt+0x14c0>
   12418:	ldr	r0, [sp, #56]	; 0x38
   1241c:	bl	10e74 <strlen@plt>
   12420:	str	r0, [sp, #24]
   12424:	ldr	r3, [sp, #24]
   12428:	cmp	r3, r4
   1242c:	ldr	r3, [sp, #56]	; 0x38
   12430:	add	r3, r3, sl
   12434:	str	r3, [sp, #48]	; 0x30
   12438:	bcc	12d9c <close@plt+0x1e38>
   1243c:	mov	r0, r3
   12440:	ldr	r2, [sp, #52]	; 0x34
   12444:	ldr	r1, [sp, #64]	; 0x40
   12448:	bl	10d90 <memcmp@plt>
   1244c:	cmp	r0, #0
   12450:	bne	12d9c <close@plt+0x1e38>
   12454:	ldr	r3, [sp, #28]
   12458:	cmp	r3, #0
   1245c:	bne	13618 <close@plt+0x26b4>
   12460:	ldr	r3, [sp, #48]	; 0x30
   12464:	ldrb	r4, [r3]
   12468:	cmp	r4, #126	; 0x7e
   1246c:	ldrls	pc, [pc, r4, lsl #2]
   12470:	b	12d30 <close@plt+0x1dcc>
   12474:	andeq	r2, r1, r4, asr fp
   12478:	andeq	r2, r1, r0, lsr sp
   1247c:	andeq	r2, r1, r0, lsr sp
   12480:	andeq	r2, r1, r0, lsr sp
   12484:	andeq	r2, r1, r0, lsr sp
   12488:	andeq	r2, r1, r0, lsr sp
   1248c:	andeq	r2, r1, r0, lsr sp
   12490:	andeq	r2, r1, r8, lsr fp
   12494:	andeq	r2, r1, ip, lsl fp
   12498:	andeq	r2, r1, r8, lsl sp
   1249c:	andeq	r2, r1, ip, ror sl
   124a0:	andeq	r2, r1, r0, ror #20
   124a4:	strdeq	r2, [r1], -r4
   124a8:	ldrdeq	r2, [r1], -r0
   124ac:	andeq	r2, r1, r0, lsr sp
   124b0:	andeq	r2, r1, r0, lsr sp
   124b4:	andeq	r2, r1, r0, lsr sp
   124b8:	andeq	r2, r1, r0, lsr sp
   124bc:	andeq	r2, r1, r0, lsr sp
   124c0:	andeq	r2, r1, r0, lsr sp
   124c4:	andeq	r2, r1, r0, lsr sp
   124c8:	andeq	r2, r1, r0, lsr sp
   124cc:	andeq	r2, r1, r0, lsr sp
   124d0:	andeq	r2, r1, r0, lsr sp
   124d4:	andeq	r2, r1, r0, lsr sp
   124d8:	andeq	r2, r1, r0, lsr sp
   124dc:	andeq	r2, r1, r0, lsr sp
   124e0:	andeq	r2, r1, r0, lsr sp
   124e4:	andeq	r2, r1, r0, lsr sp
   124e8:	andeq	r2, r1, r0, lsr sp
   124ec:	andeq	r2, r1, r0, lsr sp
   124f0:	andeq	r2, r1, r0, lsr sp
   124f4:	andeq	r2, r1, r0, lsl sp
   124f8:	andeq	r2, r1, r4, asr #24
   124fc:	andeq	r2, r1, r4, asr #24
   12500:	andeq	r2, r1, r4, asr r8
   12504:	andeq	r2, r1, r4, asr #24
   12508:	ldrdeq	r2, [r1], -ip
   1250c:	andeq	r2, r1, r4, asr #24
   12510:			; <UNDEFINED> instruction: 0x00012cb0
   12514:	andeq	r2, r1, r4, asr #24
   12518:	andeq	r2, r1, r4, asr #24
   1251c:	andeq	r2, r1, r4, asr #24
   12520:	ldrdeq	r2, [r1], -ip
   12524:	ldrdeq	r2, [r1], -ip
   12528:	ldrdeq	r2, [r1], -ip
   1252c:	ldrdeq	r2, [r1], -ip
   12530:	ldrdeq	r2, [r1], -ip
   12534:	ldrdeq	r2, [r1], -ip
   12538:	ldrdeq	r2, [r1], -ip
   1253c:	ldrdeq	r2, [r1], -ip
   12540:	ldrdeq	r2, [r1], -ip
   12544:	ldrdeq	r2, [r1], -ip
   12548:	ldrdeq	r2, [r1], -ip
   1254c:	ldrdeq	r2, [r1], -ip
   12550:	ldrdeq	r2, [r1], -ip
   12554:	ldrdeq	r2, [r1], -ip
   12558:	ldrdeq	r2, [r1], -ip
   1255c:	ldrdeq	r2, [r1], -ip
   12560:	andeq	r2, r1, r4, asr #24
   12564:	andeq	r2, r1, r4, asr #24
   12568:	andeq	r2, r1, r4, asr #24
   1256c:	andeq	r2, r1, r4, asr #24
   12570:	andeq	r2, r1, r0, lsl #25
   12574:	andeq	r2, r1, r0, lsr sp
   12578:	ldrdeq	r2, [r1], -ip
   1257c:	ldrdeq	r2, [r1], -ip
   12580:	ldrdeq	r2, [r1], -ip
   12584:	ldrdeq	r2, [r1], -ip
   12588:	ldrdeq	r2, [r1], -ip
   1258c:	ldrdeq	r2, [r1], -ip
   12590:	ldrdeq	r2, [r1], -ip
   12594:	ldrdeq	r2, [r1], -ip
   12598:	ldrdeq	r2, [r1], -ip
   1259c:	ldrdeq	r2, [r1], -ip
   125a0:	ldrdeq	r2, [r1], -ip
   125a4:	ldrdeq	r2, [r1], -ip
   125a8:	ldrdeq	r2, [r1], -ip
   125ac:	ldrdeq	r2, [r1], -ip
   125b0:	ldrdeq	r2, [r1], -ip
   125b4:	ldrdeq	r2, [r1], -ip
   125b8:	ldrdeq	r2, [r1], -ip
   125bc:	ldrdeq	r2, [r1], -ip
   125c0:	ldrdeq	r2, [r1], -ip
   125c4:	ldrdeq	r2, [r1], -ip
   125c8:	ldrdeq	r2, [r1], -ip
   125cc:	ldrdeq	r2, [r1], -ip
   125d0:	ldrdeq	r2, [r1], -ip
   125d4:	ldrdeq	r2, [r1], -ip
   125d8:	ldrdeq	r2, [r1], -ip
   125dc:	ldrdeq	r2, [r1], -ip
   125e0:	andeq	r2, r1, r4, asr #24
   125e4:	andeq	r2, r1, r0, lsr #19
   125e8:	ldrdeq	r2, [r1], -ip
   125ec:	andeq	r2, r1, r4, asr #24
   125f0:	ldrdeq	r2, [r1], -ip
   125f4:	andeq	r2, r1, r4, asr #24
   125f8:	ldrdeq	r2, [r1], -ip
   125fc:	ldrdeq	r2, [r1], -ip
   12600:	ldrdeq	r2, [r1], -ip
   12604:	ldrdeq	r2, [r1], -ip
   12608:	ldrdeq	r2, [r1], -ip
   1260c:	ldrdeq	r2, [r1], -ip
   12610:	ldrdeq	r2, [r1], -ip
   12614:	ldrdeq	r2, [r1], -ip
   12618:	ldrdeq	r2, [r1], -ip
   1261c:	ldrdeq	r2, [r1], -ip
   12620:	ldrdeq	r2, [r1], -ip
   12624:	ldrdeq	r2, [r1], -ip
   12628:	ldrdeq	r2, [r1], -ip
   1262c:	ldrdeq	r2, [r1], -ip
   12630:	ldrdeq	r2, [r1], -ip
   12634:	ldrdeq	r2, [r1], -ip
   12638:	ldrdeq	r2, [r1], -ip
   1263c:	ldrdeq	r2, [r1], -ip
   12640:	ldrdeq	r2, [r1], -ip
   12644:	ldrdeq	r2, [r1], -ip
   12648:	ldrdeq	r2, [r1], -ip
   1264c:	ldrdeq	r2, [r1], -ip
   12650:	ldrdeq	r2, [r1], -ip
   12654:	ldrdeq	r2, [r1], -ip
   12658:	ldrdeq	r2, [r1], -ip
   1265c:	ldrdeq	r2, [r1], -ip
   12660:	andeq	r2, r1, r4, lsr r8
   12664:	andeq	r2, r1, r4, asr #24
   12668:	andeq	r2, r1, r4, lsr r8
   1266c:	andeq	r2, r1, r4, asr r8
   12670:	mov	r3, #1
   12674:	str	r3, [sp, #28]
   12678:	str	r3, [sp, #52]	; 0x34
   1267c:	ldr	r3, [pc, #4000]	; 13624 <close@plt+0x26c0>
   12680:	mov	r7, #0
   12684:	str	r3, [sp, #64]	; 0x40
   12688:	mov	r3, #2
   1268c:	str	r3, [sp, #152]	; 0x98
   12690:	b	12394 <close@plt+0x1430>
   12694:	ldr	r3, [sp, #28]
   12698:	cmp	r3, #0
   1269c:	beq	127f8 <close@plt+0x1894>
   126a0:	mov	r3, #1
   126a4:	str	r3, [sp, #52]	; 0x34
   126a8:	ldr	r3, [pc, #3956]	; 13624 <close@plt+0x26c0>
   126ac:	mov	r7, #0
   126b0:	str	r3, [sp, #64]	; 0x40
   126b4:	b	12394 <close@plt+0x1430>
   126b8:	mov	r3, #1
   126bc:	str	r3, [sp, #44]	; 0x2c
   126c0:	str	r3, [sp, #52]	; 0x34
   126c4:	str	r3, [sp, #28]
   126c8:	b	1267c <close@plt+0x1718>
   126cc:	mov	r3, #0
   126d0:	str	r3, [sp, #28]
   126d4:	mov	r3, #1
   126d8:	str	r3, [sp, #44]	; 0x2c
   126dc:	mov	r7, #0
   126e0:	b	12394 <close@plt+0x1430>
   126e4:	ldr	r3, [sp, #152]	; 0x98
   126e8:	cmp	r3, #10
   126ec:	beq	12730 <close@plt+0x17cc>
   126f0:	mov	r2, #5
   126f4:	ldr	r1, [pc, #3884]	; 13628 <close@plt+0x26c4>
   126f8:	mov	r0, #0
   126fc:	bl	10da8 <dcgettext@plt>
   12700:	ldr	r2, [pc, #3872]	; 13628 <close@plt+0x26c4>
   12704:	cmp	r0, r2
   12708:	str	r0, [sp, #164]	; 0xa4
   1270c:	beq	13714 <close@plt+0x27b0>
   12710:	mov	r2, #5
   12714:	ldr	r1, [pc, #3848]	; 13624 <close@plt+0x26c0>
   12718:	mov	r0, #0
   1271c:	bl	10da8 <dcgettext@plt>
   12720:	ldr	r2, [pc, #3836]	; 13624 <close@plt+0x26c0>
   12724:	cmp	r0, r2
   12728:	str	r0, [sp, #168]	; 0xa8
   1272c:	beq	13704 <close@plt+0x27a0>
   12730:	ldr	r7, [sp, #28]
   12734:	cmp	r7, #0
   12738:	movne	r7, #0
   1273c:	bne	12770 <close@plt+0x180c>
   12740:	ldr	r3, [sp, #164]	; 0xa4
   12744:	ldrb	r3, [r3]
   12748:	cmp	r3, #0
   1274c:	beq	13724 <close@plt+0x27c0>
   12750:	ldr	r2, [sp, #164]	; 0xa4
   12754:	ldr	r1, [sp, #32]
   12758:	cmp	fp, r7
   1275c:	strbhi	r3, [r1, r7]
   12760:	ldrb	r3, [r2, #1]!
   12764:	add	r7, r7, #1
   12768:	cmp	r3, #0
   1276c:	bne	12758 <close@plt+0x17f4>
   12770:	ldr	r0, [sp, #168]	; 0xa8
   12774:	bl	10e74 <strlen@plt>
   12778:	ldr	r3, [sp, #168]	; 0xa8
   1277c:	str	r3, [sp, #64]	; 0x40
   12780:	mov	r3, #1
   12784:	str	r3, [sp, #44]	; 0x2c
   12788:	str	r0, [sp, #52]	; 0x34
   1278c:	b	12394 <close@plt+0x1430>
   12790:	mov	r3, #1
   12794:	str	r3, [sp, #44]	; 0x2c
   12798:	str	r3, [sp, #52]	; 0x34
   1279c:	str	r3, [sp, #28]
   127a0:	ldr	r3, [pc, #3716]	; 1362c <close@plt+0x26c8>
   127a4:	mov	r7, #0
   127a8:	str	r3, [sp, #64]	; 0x40
   127ac:	mov	r3, #5
   127b0:	str	r3, [sp, #152]	; 0x98
   127b4:	b	12394 <close@plt+0x1430>
   127b8:	ldr	r3, [sp, #28]
   127bc:	cmp	r3, #0
   127c0:	beq	134c0 <close@plt+0x255c>
   127c4:	ldr	r3, [sp, #28]
   127c8:	mov	r7, #0
   127cc:	str	r3, [sp, #44]	; 0x2c
   127d0:	mov	r3, #1
   127d4:	str	r3, [sp, #52]	; 0x34
   127d8:	ldr	r3, [pc, #3660]	; 1362c <close@plt+0x26c8>
   127dc:	str	r3, [sp, #64]	; 0x40
   127e0:	b	12394 <close@plt+0x1430>
   127e4:	ldr	r3, [sp, #28]
   127e8:	cmp	r3, #0
   127ec:	mov	r3, #1
   127f0:	streq	r3, [sp, #44]	; 0x2c
   127f4:	bne	12678 <close@plt+0x1714>
   127f8:	cmp	fp, #0
   127fc:	beq	134f0 <close@plt+0x258c>
   12800:	ldr	r3, [sp, #32]
   12804:	mov	r2, #39	; 0x27
   12808:	mov	r7, #1
   1280c:	strb	r2, [r3]
   12810:	mov	r3, #0
   12814:	str	r3, [sp, #28]
   12818:	mov	r3, #1
   1281c:	str	r3, [sp, #52]	; 0x34
   12820:	ldr	r3, [pc, #3580]	; 13624 <close@plt+0x26c0>
   12824:	str	r3, [sp, #64]	; 0x40
   12828:	mov	r3, #2
   1282c:	str	r3, [sp, #152]	; 0x98
   12830:	b	12394 <close@plt+0x1430>
   12834:	ldr	r3, [sp, #24]
   12838:	cmn	r3, #1
   1283c:	beq	13454 <close@plt+0x24f0>
   12840:	ldr	r3, [sp, #24]
   12844:	subs	r3, r3, #1
   12848:	movne	r3, #1
   1284c:	cmp	r3, #0
   12850:	bne	1285c <close@plt+0x18f8>
   12854:	cmp	sl, #0
   12858:	beq	12c48 <close@plt+0x1ce4>
   1285c:	ldr	r3, [sp, #152]	; 0x98
   12860:	mov	r5, #0
   12864:	sub	r2, r3, #2
   12868:	mov	r8, r5
   1286c:	clz	r2, r2
   12870:	lsr	r2, r2, #5
   12874:	ldr	r3, [sp, #60]	; 0x3c
   12878:	ldr	r1, [sp, #28]
   1287c:	orr	r3, r2, r3
   12880:	eor	r3, r3, #1
   12884:	orr	r3, r1, r3
   12888:	tst	r3, #255	; 0xff
   1288c:	bne	12fb8 <close@plt+0x2054>
   12890:	cmp	r6, #0
   12894:	bne	129e4 <close@plt+0x1a80>
   12898:	ldr	r3, [sp, #40]	; 0x28
   1289c:	eor	r8, r8, #1
   128a0:	and	r8, r8, r3
   128a4:	add	sl, sl, #1
   128a8:	uxtb	r6, r8
   128ac:	cmp	r6, #0
   128b0:	beq	128e4 <close@plt+0x1980>
   128b4:	cmp	fp, r7
   128b8:	movhi	r2, #39	; 0x27
   128bc:	ldrhi	r3, [sp, #32]
   128c0:	strbhi	r2, [r3, r7]
   128c4:	add	r3, r7, #1
   128c8:	cmp	fp, r3
   128cc:	movhi	r1, #39	; 0x27
   128d0:	ldrhi	r2, [sp, #32]
   128d4:	add	r7, r7, #2
   128d8:	strbhi	r1, [r2, r3]
   128dc:	mov	r3, #0
   128e0:	str	r3, [sp, #40]	; 0x28
   128e4:	cmp	r7, fp
   128e8:	ldrcc	r3, [sp, #32]
   128ec:	strbcc	r4, [r3, r7]
   128f0:	ldr	r3, [sp, #36]	; 0x24
   128f4:	cmp	r5, #0
   128f8:	moveq	r3, #0
   128fc:	str	r3, [sp, #36]	; 0x24
   12900:	ldr	r3, [sp, #24]
   12904:	add	r7, r7, #1
   12908:	cmn	r3, #1
   1290c:	bne	123b0 <close@plt+0x144c>
   12910:	ldr	r3, [sp, #56]	; 0x38
   12914:	ldrb	r5, [r3, sl]
   12918:	adds	r5, r5, #0
   1291c:	movne	r5, #1
   12920:	cmp	r5, #0
   12924:	bne	123c4 <close@plt+0x1460>
   12928:	ldr	r3, [sp, #152]	; 0x98
   1292c:	ldr	r1, [sp, #28]
   12930:	sub	r3, r3, #2
   12934:	clz	r3, r3
   12938:	lsr	r3, r3, #5
   1293c:	and	r9, r1, r3
   12940:	cmp	r7, #0
   12944:	movne	r2, #0
   12948:	andeq	r2, r9, #1
   1294c:	cmp	r2, #0
   12950:	bne	1332c <close@plt+0x23c8>
   12954:	eor	r2, r1, #1
   12958:	ands	r3, r3, r2
   1295c:	beq	137e8 <close@plt+0x2884>
   12960:	ldr	r2, [sp, #68]	; 0x44
   12964:	cmp	r2, #0
   12968:	beq	137d4 <close@plt+0x2870>
   1296c:	ldr	r3, [sp, #36]	; 0x24
   12970:	cmp	r3, #0
   12974:	bne	1378c <close@plt+0x2828>
   12978:	ldr	r2, [sp, #72]	; 0x48
   1297c:	clz	r3, fp
   12980:	cmp	r2, #0
   12984:	lsr	r3, r3, #5
   12988:	moveq	r3, #0
   1298c:	cmp	r3, #0
   12990:	beq	1372c <close@plt+0x27c8>
   12994:	str	r3, [sp, #68]	; 0x44
   12998:	ldr	fp, [sp, #72]	; 0x48
   1299c:	b	1234c <close@plt+0x13e8>
   129a0:	ldr	r3, [sp, #152]	; 0x98
   129a4:	cmp	r3, #2
   129a8:	beq	12ffc <close@plt+0x2098>
   129ac:	ldr	r3, [sp, #44]	; 0x2c
   129b0:	ldr	r2, [sp, #28]
   129b4:	and	r2, r3, r2
   129b8:	ands	r2, r9, r2
   129bc:	bne	13008 <close@plt+0x20a4>
   129c0:	mov	r4, #92	; 0x5c
   129c4:	mov	r3, r4
   129c8:	ldr	r1, [sp, #44]	; 0x2c
   129cc:	cmp	r1, #0
   129d0:	moveq	r5, #0
   129d4:	moveq	r8, r1
   129d8:	beq	12874 <close@plt+0x1910>
   129dc:	mov	r4, r3
   129e0:	mov	r5, #0
   129e4:	ldr	r3, [sp, #28]
   129e8:	cmp	r3, #0
   129ec:	bne	12ff0 <close@plt+0x208c>
   129f0:	ldr	r3, [sp, #40]	; 0x28
   129f4:	eor	r9, r3, #1
   129f8:	and	r9, r9, r2
   129fc:	ands	r9, r9, #255	; 0xff
   12a00:	beq	12a44 <close@plt+0x1ae0>
   12a04:	cmp	fp, r7
   12a08:	movhi	r2, #39	; 0x27
   12a0c:	ldrhi	r3, [sp, #32]
   12a10:	str	r9, [sp, #40]	; 0x28
   12a14:	strbhi	r2, [r3, r7]
   12a18:	add	r3, r7, #1
   12a1c:	cmp	fp, r3
   12a20:	movhi	r1, #36	; 0x24
   12a24:	ldrhi	r2, [sp, #32]
   12a28:	strbhi	r1, [r2, r3]
   12a2c:	add	r3, r7, #2
   12a30:	cmp	fp, r3
   12a34:	add	r7, r7, #3
   12a38:	ldrhi	r2, [sp, #32]
   12a3c:	movhi	r1, #39	; 0x27
   12a40:	strbhi	r1, [r2, r3]
   12a44:	cmp	fp, r7
   12a48:	movhi	r2, #92	; 0x5c
   12a4c:	ldrhi	r3, [sp, #32]
   12a50:	add	sl, sl, #1
   12a54:	strbhi	r2, [r3, r7]
   12a58:	add	r7, r7, #1
   12a5c:	b	128e4 <close@plt+0x1980>
   12a60:	ldr	r3, [sp, #152]	; 0x98
   12a64:	mov	r4, #11
   12a68:	sub	r2, r3, #2
   12a6c:	mov	r3, #118	; 0x76
   12a70:	clz	r2, r2
   12a74:	lsr	r2, r2, #5
   12a78:	b	129c8 <close@plt+0x1a64>
   12a7c:	mov	r4, #10
   12a80:	mov	r3, #110	; 0x6e
   12a84:	ldr	r2, [sp, #152]	; 0x98
   12a88:	ldr	r1, [sp, #28]
   12a8c:	sub	r2, r2, #2
   12a90:	clz	r2, r2
   12a94:	lsr	r2, r2, #5
   12a98:	ands	r1, r1, r2
   12a9c:	beq	129c8 <close@plt+0x1a64>
   12aa0:	ldr	sl, [sp, #32]
   12aa4:	mov	r8, fp
   12aa8:	mov	r2, r1
   12aac:	mov	r3, #2
   12ab0:	str	r3, [sp, #152]	; 0x98
   12ab4:	ldr	r9, [sp, #44]	; 0x2c
   12ab8:	ldr	r3, [sp, #152]	; 0x98
   12abc:	and	r9, r9, r2
   12ac0:	tst	r9, #255	; 0xff
   12ac4:	movne	r3, #4
   12ac8:	str	r3, [sp, #152]	; 0x98
   12acc:	ldr	r3, [sp, #156]	; 0x9c
   12ad0:	mov	ip, #0
   12ad4:	bic	r3, r3, #2
   12ad8:	str	r3, [sp, #4]
   12adc:	ldr	r3, [sp, #168]	; 0xa8
   12ae0:	ldr	r2, [sp, #56]	; 0x38
   12ae4:	str	r3, [sp, #16]
   12ae8:	ldr	r3, [sp, #164]	; 0xa4
   12aec:	mov	r1, r8
   12af0:	str	r3, [sp, #12]
   12af4:	ldr	r3, [sp, #152]	; 0x98
   12af8:	mov	r0, sl
   12afc:	str	r3, [sp]
   12b00:	str	ip, [sp, #8]
   12b04:	ldr	r3, [sp, #24]
   12b08:	bl	122f0 <close@plt+0x138c>
   12b0c:	mov	fp, r0
   12b10:	mov	r0, fp
   12b14:	add	sp, sp, #116	; 0x74
   12b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b1c:	ldr	r3, [sp, #152]	; 0x98
   12b20:	mov	r4, #8
   12b24:	sub	r2, r3, #2
   12b28:	mov	r3, #98	; 0x62
   12b2c:	clz	r2, r2
   12b30:	lsr	r2, r2, #5
   12b34:	b	129c8 <close@plt+0x1a64>
   12b38:	ldr	r3, [sp, #152]	; 0x98
   12b3c:	mov	r4, #7
   12b40:	sub	r2, r3, #2
   12b44:	mov	r3, #97	; 0x61
   12b48:	clz	r2, r2
   12b4c:	lsr	r2, r2, #5
   12b50:	b	129c8 <close@plt+0x1a64>
   12b54:	ldr	r3, [sp, #44]	; 0x2c
   12b58:	cmp	r3, #0
   12b5c:	beq	13340 <close@plt+0x23dc>
   12b60:	ldr	r3, [sp, #28]
   12b64:	cmp	r3, #0
   12b68:	bne	13618 <close@plt+0x26b4>
   12b6c:	ldr	r3, [sp, #152]	; 0x98
   12b70:	sub	r2, r3, #2
   12b74:	ldr	r3, [sp, #40]	; 0x28
   12b78:	clz	r2, r2
   12b7c:	eor	r3, r3, #1
   12b80:	lsr	r2, r2, #5
   12b84:	ands	r3, r2, r3
   12b88:	moveq	r1, r7
   12b8c:	beq	12bd0 <close@plt+0x1c6c>
   12b90:	cmp	fp, r7
   12b94:	movhi	r0, #39	; 0x27
   12b98:	ldrhi	r1, [sp, #32]
   12b9c:	str	r3, [sp, #40]	; 0x28
   12ba0:	strbhi	r0, [r1, r7]
   12ba4:	add	r1, r7, #1
   12ba8:	cmp	fp, r1
   12bac:	movhi	ip, #36	; 0x24
   12bb0:	ldrhi	r0, [sp, #32]
   12bb4:	strbhi	ip, [r0, r1]
   12bb8:	add	r1, r7, #2
   12bbc:	cmp	fp, r1
   12bc0:	movhi	ip, #39	; 0x27
   12bc4:	ldrhi	r0, [sp, #32]
   12bc8:	strbhi	ip, [r0, r1]
   12bcc:	add	r1, r7, #3
   12bd0:	cmp	fp, r1
   12bd4:	movhi	r0, #92	; 0x5c
   12bd8:	ldrhi	r3, [sp, #32]
   12bdc:	add	r7, r1, #1
   12be0:	strbhi	r0, [r3, r1]
   12be4:	cmp	r8, #0
   12be8:	beq	1352c <close@plt+0x25c8>
   12bec:	ldr	r0, [sp, #24]
   12bf0:	add	r3, sl, #1
   12bf4:	cmp	r3, r0
   12bf8:	bcs	13468 <close@plt+0x2504>
   12bfc:	ldr	r0, [sp, #56]	; 0x38
   12c00:	ldrb	r3, [r0, r3]
   12c04:	sub	r3, r3, #48	; 0x30
   12c08:	cmp	r3, #9
   12c0c:	bhi	13468 <close@plt+0x2504>
   12c10:	cmp	fp, r7
   12c14:	movhi	r3, #48	; 0x30
   12c18:	ldrhi	r0, [sp, #32]
   12c1c:	ldr	r5, [sp, #28]
   12c20:	mov	r4, #48	; 0x30
   12c24:	strbhi	r3, [r0, r7]
   12c28:	add	r3, r1, #2
   12c2c:	cmp	fp, r3
   12c30:	movhi	r0, #48	; 0x30
   12c34:	ldrhi	ip, [sp, #32]
   12c38:	add	r7, r1, #3
   12c3c:	strbhi	r0, [ip, r3]
   12c40:	b	12874 <close@plt+0x1910>
   12c44:	mov	r5, #0
   12c48:	ldr	r3, [sp, #152]	; 0x98
   12c4c:	sub	r2, r3, #2
   12c50:	ldr	r3, [sp, #28]
   12c54:	clz	r2, r2
   12c58:	lsr	r2, r2, #5
   12c5c:	ands	r8, r3, r2
   12c60:	beq	12874 <close@plt+0x1910>
   12c64:	mov	r3, r8
   12c68:	mov	r2, r3
   12c6c:	mov	r3, #2
   12c70:	ldr	sl, [sp, #32]
   12c74:	mov	r8, fp
   12c78:	str	r3, [sp, #152]	; 0x98
   12c7c:	b	12ab4 <close@plt+0x1b50>
   12c80:	ldr	r3, [sp, #152]	; 0x98
   12c84:	cmp	r3, #2
   12c88:	beq	133ac <close@plt+0x2448>
   12c8c:	cmp	r3, #5
   12c90:	beq	1336c <close@plt+0x2408>
   12c94:	mov	r5, #0
   12c98:	sub	r2, r3, #2
   12c9c:	mov	r8, r5
   12ca0:	clz	r2, r2
   12ca4:	mov	r4, #63	; 0x3f
   12ca8:	lsr	r2, r2, #5
   12cac:	b	12874 <close@plt+0x1910>
   12cb0:	ldr	r3, [sp, #152]	; 0x98
   12cb4:	cmp	r3, #2
   12cb8:	beq	133cc <close@plt+0x2468>
   12cbc:	mov	r2, #0
   12cc0:	str	r5, [sp, #68]	; 0x44
   12cc4:	mov	r8, r2
   12cc8:	mov	r4, #39	; 0x27
   12ccc:	b	12874 <close@plt+0x1910>
   12cd0:	mov	r4, #13
   12cd4:	mov	r3, #114	; 0x72
   12cd8:	b	12a84 <close@plt+0x1b20>
   12cdc:	ldr	r3, [sp, #152]	; 0x98
   12ce0:	mov	r8, #0
   12ce4:	sub	r2, r3, #2
   12ce8:	clz	r2, r2
   12cec:	lsr	r2, r2, #5
   12cf0:	b	12874 <close@plt+0x1910>
   12cf4:	ldr	r3, [sp, #152]	; 0x98
   12cf8:	mov	r4, #12
   12cfc:	sub	r2, r3, #2
   12d00:	mov	r3, #102	; 0x66
   12d04:	clz	r2, r2
   12d08:	lsr	r2, r2, #5
   12d0c:	b	129c8 <close@plt+0x1a64>
   12d10:	mov	r5, r6
   12d14:	b	12c48 <close@plt+0x1ce4>
   12d18:	ldr	r3, [sp, #152]	; 0x98
   12d1c:	sub	r2, r3, #2
   12d20:	mov	r3, #116	; 0x74
   12d24:	clz	r2, r2
   12d28:	lsr	r2, r2, #5
   12d2c:	b	129c8 <close@plt+0x1a64>
   12d30:	ldr	r8, [sp, #76]	; 0x4c
   12d34:	cmp	r8, #1
   12d38:	bne	131e8 <close@plt+0x2284>
   12d3c:	bl	10e5c <__ctype_b_loc@plt>
   12d40:	sxth	r3, r4
   12d44:	mov	ip, r8
   12d48:	lsl	r3, r3, #1
   12d4c:	ldr	r2, [r0]
   12d50:	ldrh	r3, [r2, r3]
   12d54:	and	r3, r3, #16384	; 0x4000
   12d58:	cmp	r3, #0
   12d5c:	movne	r5, #1
   12d60:	moveq	r5, #0
   12d64:	moveq	r3, #1
   12d68:	movne	r3, #0
   12d6c:	ldr	r2, [sp, #44]	; 0x2c
   12d70:	and	r3, r3, r2
   12d74:	ands	r8, r3, #255	; 0xff
   12d78:	bne	1307c <close@plt+0x2118>
   12d7c:	ldr	r3, [sp, #152]	; 0x98
   12d80:	sub	r2, r3, #2
   12d84:	clz	r2, r2
   12d88:	lsr	r2, r2, #5
   12d8c:	b	12874 <close@plt+0x1910>
   12d90:	ldr	r3, [sp, #56]	; 0x38
   12d94:	add	r3, r3, sl
   12d98:	str	r3, [sp, #48]	; 0x30
   12d9c:	ldr	r3, [sp, #48]	; 0x30
   12da0:	mov	r6, #0
   12da4:	ldrb	r4, [r3]
   12da8:	cmp	r4, #126	; 0x7e
   12dac:	ldrls	pc, [pc, r4, lsl #2]
   12db0:	b	12d30 <close@plt+0x1dcc>
   12db4:	andeq	r2, r1, r4, asr fp
   12db8:	andeq	r2, r1, r0, lsr sp
   12dbc:	andeq	r2, r1, r0, lsr sp
   12dc0:	andeq	r2, r1, r0, lsr sp
   12dc4:	andeq	r2, r1, r0, lsr sp
   12dc8:	andeq	r2, r1, r0, lsr sp
   12dcc:	andeq	r2, r1, r0, lsr sp
   12dd0:	andeq	r2, r1, r8, lsr fp
   12dd4:	andeq	r2, r1, ip, lsl fp
   12dd8:			; <UNDEFINED> instruction: 0x00012fb0
   12ddc:	andeq	r2, r1, ip, ror sl
   12de0:	andeq	r2, r1, r0, ror #20
   12de4:	strdeq	r2, [r1], -r4
   12de8:	ldrdeq	r2, [r1], -r0
   12dec:	andeq	r2, r1, r0, lsr sp
   12df0:	andeq	r2, r1, r0, lsr sp
   12df4:	andeq	r2, r1, r0, lsr sp
   12df8:	andeq	r2, r1, r0, lsr sp
   12dfc:	andeq	r2, r1, r0, lsr sp
   12e00:	andeq	r2, r1, r0, lsr sp
   12e04:	andeq	r2, r1, r0, lsr sp
   12e08:	andeq	r2, r1, r0, lsr sp
   12e0c:	andeq	r2, r1, r0, lsr sp
   12e10:	andeq	r2, r1, r0, lsr sp
   12e14:	andeq	r2, r1, r0, lsr sp
   12e18:	andeq	r2, r1, r0, lsr sp
   12e1c:	andeq	r2, r1, r0, lsr sp
   12e20:	andeq	r2, r1, r0, lsr sp
   12e24:	andeq	r2, r1, r0, lsr sp
   12e28:	andeq	r2, r1, r0, lsr sp
   12e2c:	andeq	r2, r1, r0, lsr sp
   12e30:	andeq	r2, r1, r0, lsr sp
   12e34:	andeq	r2, r1, r8, asr #24
   12e38:	andeq	r2, r1, r4, asr #24
   12e3c:	andeq	r2, r1, r4, asr #24
   12e40:	andeq	r2, r1, r4, asr r8
   12e44:	andeq	r2, r1, r4, asr #24
   12e48:	ldrdeq	r2, [r1], -ip
   12e4c:	andeq	r2, r1, r4, asr #24
   12e50:			; <UNDEFINED> instruction: 0x00012cb0
   12e54:	andeq	r2, r1, r4, asr #24
   12e58:	andeq	r2, r1, r4, asr #24
   12e5c:	andeq	r2, r1, r4, asr #24
   12e60:	ldrdeq	r2, [r1], -ip
   12e64:	ldrdeq	r2, [r1], -ip
   12e68:	ldrdeq	r2, [r1], -ip
   12e6c:	ldrdeq	r2, [r1], -ip
   12e70:	ldrdeq	r2, [r1], -ip
   12e74:	ldrdeq	r2, [r1], -ip
   12e78:	ldrdeq	r2, [r1], -ip
   12e7c:	ldrdeq	r2, [r1], -ip
   12e80:	ldrdeq	r2, [r1], -ip
   12e84:	ldrdeq	r2, [r1], -ip
   12e88:	ldrdeq	r2, [r1], -ip
   12e8c:	ldrdeq	r2, [r1], -ip
   12e90:	ldrdeq	r2, [r1], -ip
   12e94:	ldrdeq	r2, [r1], -ip
   12e98:	ldrdeq	r2, [r1], -ip
   12e9c:	ldrdeq	r2, [r1], -ip
   12ea0:	andeq	r2, r1, r4, asr #24
   12ea4:	andeq	r2, r1, r4, asr #24
   12ea8:	andeq	r2, r1, r4, asr #24
   12eac:	andeq	r2, r1, r4, asr #24
   12eb0:	andeq	r2, r1, r0, lsl #25
   12eb4:	andeq	r2, r1, r0, lsr sp
   12eb8:	ldrdeq	r2, [r1], -ip
   12ebc:	ldrdeq	r2, [r1], -ip
   12ec0:	ldrdeq	r2, [r1], -ip
   12ec4:	ldrdeq	r2, [r1], -ip
   12ec8:	ldrdeq	r2, [r1], -ip
   12ecc:	ldrdeq	r2, [r1], -ip
   12ed0:	ldrdeq	r2, [r1], -ip
   12ed4:	ldrdeq	r2, [r1], -ip
   12ed8:	ldrdeq	r2, [r1], -ip
   12edc:	ldrdeq	r2, [r1], -ip
   12ee0:	ldrdeq	r2, [r1], -ip
   12ee4:	ldrdeq	r2, [r1], -ip
   12ee8:	ldrdeq	r2, [r1], -ip
   12eec:	ldrdeq	r2, [r1], -ip
   12ef0:	ldrdeq	r2, [r1], -ip
   12ef4:	ldrdeq	r2, [r1], -ip
   12ef8:	ldrdeq	r2, [r1], -ip
   12efc:	ldrdeq	r2, [r1], -ip
   12f00:	ldrdeq	r2, [r1], -ip
   12f04:	ldrdeq	r2, [r1], -ip
   12f08:	ldrdeq	r2, [r1], -ip
   12f0c:	ldrdeq	r2, [r1], -ip
   12f10:	ldrdeq	r2, [r1], -ip
   12f14:	ldrdeq	r2, [r1], -ip
   12f18:	ldrdeq	r2, [r1], -ip
   12f1c:	ldrdeq	r2, [r1], -ip
   12f20:	andeq	r2, r1, r4, asr #24
   12f24:	andeq	r2, r1, r0, lsr #19
   12f28:	ldrdeq	r2, [r1], -ip
   12f2c:	andeq	r2, r1, r4, asr #24
   12f30:	ldrdeq	r2, [r1], -ip
   12f34:	andeq	r2, r1, r4, asr #24
   12f38:	ldrdeq	r2, [r1], -ip
   12f3c:	ldrdeq	r2, [r1], -ip
   12f40:	ldrdeq	r2, [r1], -ip
   12f44:	ldrdeq	r2, [r1], -ip
   12f48:	ldrdeq	r2, [r1], -ip
   12f4c:	ldrdeq	r2, [r1], -ip
   12f50:	ldrdeq	r2, [r1], -ip
   12f54:	ldrdeq	r2, [r1], -ip
   12f58:	ldrdeq	r2, [r1], -ip
   12f5c:	ldrdeq	r2, [r1], -ip
   12f60:	ldrdeq	r2, [r1], -ip
   12f64:	ldrdeq	r2, [r1], -ip
   12f68:	ldrdeq	r2, [r1], -ip
   12f6c:	ldrdeq	r2, [r1], -ip
   12f70:	ldrdeq	r2, [r1], -ip
   12f74:	ldrdeq	r2, [r1], -ip
   12f78:	ldrdeq	r2, [r1], -ip
   12f7c:	ldrdeq	r2, [r1], -ip
   12f80:	ldrdeq	r2, [r1], -ip
   12f84:	ldrdeq	r2, [r1], -ip
   12f88:	ldrdeq	r2, [r1], -ip
   12f8c:	ldrdeq	r2, [r1], -ip
   12f90:	ldrdeq	r2, [r1], -ip
   12f94:	ldrdeq	r2, [r1], -ip
   12f98:	ldrdeq	r2, [r1], -ip
   12f9c:	ldrdeq	r2, [r1], -ip
   12fa0:	andeq	r2, r1, r4, lsr r8
   12fa4:	andeq	r2, r1, r4, asr #24
   12fa8:	andeq	r2, r1, r4, lsr r8
   12fac:	andeq	r2, r1, r4, asr r8
   12fb0:	mov	r3, #116	; 0x74
   12fb4:	b	12a84 <close@plt+0x1b20>
   12fb8:	ldr	r3, [sp, #160]	; 0xa0
   12fbc:	cmp	r3, #0
   12fc0:	beq	12890 <close@plt+0x192c>
   12fc4:	lsr	r3, r4, #5
   12fc8:	ldr	r0, [sp, #160]	; 0xa0
   12fcc:	uxtb	r3, r3
   12fd0:	and	r1, r4, #31
   12fd4:	ldr	r0, [r0, r3, lsl #2]
   12fd8:	lsr	r3, r0, r1
   12fdc:	tst	r3, #1
   12fe0:	beq	12890 <close@plt+0x192c>
   12fe4:	ldr	r3, [sp, #28]
   12fe8:	cmp	r3, #0
   12fec:	beq	129f0 <close@plt+0x1a8c>
   12ff0:	ldr	sl, [sp, #32]
   12ff4:	mov	r8, fp
   12ff8:	b	12ab4 <close@plt+0x1b50>
   12ffc:	ldr	r3, [sp, #28]
   13000:	cmp	r3, #0
   13004:	bne	13558 <close@plt+0x25f4>
   13008:	add	sl, sl, #1
   1300c:	ldr	r6, [sp, #40]	; 0x28
   13010:	mov	r5, #0
   13014:	mov	r4, #92	; 0x5c
   13018:	b	128ac <close@plt+0x1948>
   1301c:	cmp	r9, r8
   13020:	bne	13290 <close@plt+0x232c>
   13024:	ldr	r0, [sp, #100]	; 0x64
   13028:	bl	10dcc <iswprint@plt>
   1302c:	add	r5, r5, r4
   13030:	cmp	r0, #0
   13034:	add	r0, sp, #104	; 0x68
   13038:	moveq	r6, #0
   1303c:	bl	10d6c <mbsinit@plt>
   13040:	cmp	r0, #0
   13044:	beq	13224 <close@plt+0x22c0>
   13048:	mov	r2, r6
   1304c:	mov	ip, r5
   13050:	eor	r5, r2, #1
   13054:	ldr	r4, [sp, #80]	; 0x50
   13058:	ldr	r6, [sp, #84]	; 0x54
   1305c:	ldr	r7, [sp, #88]	; 0x58
   13060:	uxtb	r5, r5
   13064:	cmp	ip, #1
   13068:	bls	13568 <close@plt+0x2604>
   1306c:	ldr	r3, [sp, #44]	; 0x2c
   13070:	and	r8, r3, r5
   13074:	mov	r5, r2
   13078:	uxtb	r8, r8
   1307c:	add	r2, sl, ip
   13080:	ldr	r0, [sp, #48]	; 0x30
   13084:	mov	r1, #0
   13088:	str	r5, [sp, #48]	; 0x30
   1308c:	ldr	r9, [sp, #28]
   13090:	ldr	ip, [sp, #40]	; 0x28
   13094:	ldr	r3, [sp, #32]
   13098:	ldr	r5, [sp, #152]	; 0x98
   1309c:	b	13158 <close@plt+0x21f4>
   130a0:	cmp	r9, #0
   130a4:	bne	1347c <close@plt+0x2518>
   130a8:	eor	r1, ip, #1
   130ac:	cmp	r5, #2
   130b0:	movne	r1, #0
   130b4:	andeq	r1, r1, #1
   130b8:	cmp	r1, #0
   130bc:	beq	130f4 <close@plt+0x2190>
   130c0:	cmp	fp, r7
   130c4:	movhi	ip, #39	; 0x27
   130c8:	strbhi	ip, [r3, r7]
   130cc:	add	ip, r7, #1
   130d0:	cmp	fp, ip
   130d4:	movhi	lr, #36	; 0x24
   130d8:	strbhi	lr, [r3, ip]
   130dc:	add	ip, r7, #2
   130e0:	cmp	fp, ip
   130e4:	movhi	lr, #39	; 0x27
   130e8:	strbhi	lr, [r3, ip]
   130ec:	add	r7, r7, #3
   130f0:	mov	ip, r1
   130f4:	cmp	fp, r7
   130f8:	movhi	r1, #92	; 0x5c
   130fc:	strbhi	r1, [r3, r7]
   13100:	add	r1, r7, #1
   13104:	cmp	fp, r1
   13108:	lsrhi	lr, r4, #6
   1310c:	addhi	lr, lr, #48	; 0x30
   13110:	strbhi	lr, [r3, r1]
   13114:	add	lr, r7, #2
   13118:	cmp	fp, lr
   1311c:	lsrhi	r1, r4, #3
   13120:	andhi	r1, r1, #7
   13124:	addhi	r1, r1, #48	; 0x30
   13128:	add	sl, sl, #1
   1312c:	strbhi	r1, [r3, lr]
   13130:	and	r4, r4, #7
   13134:	cmp	r2, sl
   13138:	add	r4, r4, #48	; 0x30
   1313c:	add	r7, r7, #3
   13140:	bls	134a0 <close@plt+0x253c>
   13144:	mov	r1, r8
   13148:	cmp	fp, r7
   1314c:	strbhi	r4, [r3, r7]
   13150:	ldrb	r4, [r0, #1]!
   13154:	add	r7, r7, #1
   13158:	cmp	r8, #0
   1315c:	bne	130a0 <close@plt+0x213c>
   13160:	cmp	r6, #0
   13164:	bne	131b4 <close@plt+0x2250>
   13168:	eor	r6, r1, #1
   1316c:	and	r6, r6, ip
   13170:	add	sl, sl, #1
   13174:	cmp	r2, sl
   13178:	uxtb	r6, r6
   1317c:	bls	131dc <close@plt+0x2278>
   13180:	cmp	r6, #0
   13184:	beq	13148 <close@plt+0x21e4>
   13188:	cmp	fp, r7
   1318c:	movhi	ip, #39	; 0x27
   13190:	strbhi	ip, [r3, r7]
   13194:	add	ip, r7, #1
   13198:	cmp	fp, ip
   1319c:	movhi	lr, #39	; 0x27
   131a0:	strbhi	lr, [r3, ip]
   131a4:	add	r7, r7, #2
   131a8:	mov	r6, r8
   131ac:	mov	ip, r8
   131b0:	b	13148 <close@plt+0x21e4>
   131b4:	cmp	fp, r7
   131b8:	eor	r6, r1, #1
   131bc:	movhi	lr, #92	; 0x5c
   131c0:	and	r6, r6, ip
   131c4:	add	sl, sl, #1
   131c8:	strbhi	lr, [r3, r7]
   131cc:	cmp	r2, sl
   131d0:	add	r7, r7, #1
   131d4:	uxtb	r6, r6
   131d8:	bhi	13180 <close@plt+0x221c>
   131dc:	str	ip, [sp, #40]	; 0x28
   131e0:	ldr	r5, [sp, #48]	; 0x30
   131e4:	b	128ac <close@plt+0x1948>
   131e8:	ldr	r3, [sp, #24]
   131ec:	cmn	r3, #1
   131f0:	mov	r3, #0
   131f4:	str	r3, [sp, #104]	; 0x68
   131f8:	str	r3, [sp, #108]	; 0x6c
   131fc:	beq	1351c <close@plt+0x25b8>
   13200:	mov	r2, r5
   13204:	mov	r3, #0
   13208:	str	r7, [sp, #88]	; 0x58
   1320c:	ldr	r7, [sp, #152]	; 0x98
   13210:	str	r5, [sp, #92]	; 0x5c
   13214:	str	r6, [sp, #84]	; 0x54
   13218:	mov	r5, r3
   1321c:	mov	r6, r2
   13220:	str	r4, [sp, #80]	; 0x50
   13224:	ldr	r3, [sp, #56]	; 0x38
   13228:	add	r9, sl, r5
   1322c:	add	r8, r3, r9
   13230:	ldr	r3, [sp, #24]
   13234:	mov	r1, r8
   13238:	sub	r2, r3, r9
   1323c:	add	r0, sp, #100	; 0x64
   13240:	add	r3, sp, #104	; 0x68
   13244:	bl	14dcc <close@plt+0x3e68>
   13248:	subs	r4, r0, #0
   1324c:	beq	135f4 <close@plt+0x2690>
   13250:	cmn	r4, #1
   13254:	beq	135d4 <close@plt+0x2670>
   13258:	cmn	r4, #2
   1325c:	beq	13574 <close@plt+0x2610>
   13260:	ldr	r2, [sp, #28]
   13264:	cmp	r7, #2
   13268:	movne	r2, #0
   1326c:	andeq	r2, r2, #1
   13270:	cmp	r2, #0
   13274:	beq	13024 <close@plt+0x20c0>
   13278:	cmp	r4, #1
   1327c:	beq	13024 <close@plt+0x20c0>
   13280:	sub	r3, r4, #1
   13284:	add	r9, r3, r9
   13288:	ldr	r3, [sp, #56]	; 0x38
   1328c:	add	r9, r3, r9
   13290:	ldrb	r3, [r8, #1]!
   13294:	sub	r3, r3, #91	; 0x5b
   13298:	cmp	r3, #33	; 0x21
   1329c:	ldrls	pc, [pc, r3, lsl #2]
   132a0:	b	1301c <close@plt+0x20b8>
   132a4:	andeq	r3, r1, ip, lsr #6
   132a8:	andeq	r3, r1, ip, lsr #6
   132ac:	andeq	r3, r1, ip, lsl r0
   132b0:	andeq	r3, r1, ip, lsr #6
   132b4:	andeq	r3, r1, ip, lsl r0
   132b8:	andeq	r3, r1, ip, lsr #6
   132bc:	andeq	r3, r1, ip, lsl r0
   132c0:	andeq	r3, r1, ip, lsl r0
   132c4:	andeq	r3, r1, ip, lsl r0
   132c8:	andeq	r3, r1, ip, lsl r0
   132cc:	andeq	r3, r1, ip, lsl r0
   132d0:	andeq	r3, r1, ip, lsl r0
   132d4:	andeq	r3, r1, ip, lsl r0
   132d8:	andeq	r3, r1, ip, lsl r0
   132dc:	andeq	r3, r1, ip, lsl r0
   132e0:	andeq	r3, r1, ip, lsl r0
   132e4:	andeq	r3, r1, ip, lsl r0
   132e8:	andeq	r3, r1, ip, lsl r0
   132ec:	andeq	r3, r1, ip, lsl r0
   132f0:	andeq	r3, r1, ip, lsl r0
   132f4:	andeq	r3, r1, ip, lsl r0
   132f8:	andeq	r3, r1, ip, lsl r0
   132fc:	andeq	r3, r1, ip, lsl r0
   13300:	andeq	r3, r1, ip, lsl r0
   13304:	andeq	r3, r1, ip, lsl r0
   13308:	andeq	r3, r1, ip, lsl r0
   1330c:	andeq	r3, r1, ip, lsl r0
   13310:	andeq	r3, r1, ip, lsl r0
   13314:	andeq	r3, r1, ip, lsl r0
   13318:	andeq	r3, r1, ip, lsl r0
   1331c:	andeq	r3, r1, ip, lsl r0
   13320:	andeq	r3, r1, ip, lsl r0
   13324:	andeq	r3, r1, ip, lsl r0
   13328:	andeq	r3, r1, ip, lsr #6
   1332c:	mov	r3, #2
   13330:	ldr	sl, [sp, #32]
   13334:	mov	r8, fp
   13338:	str	r3, [sp, #152]	; 0x98
   1333c:	b	12ab4 <close@plt+0x1b50>
   13340:	ldr	r3, [sp, #156]	; 0x9c
   13344:	tst	r3, #1
   13348:	bne	13474 <close@plt+0x2510>
   1334c:	ldr	r3, [sp, #152]	; 0x98
   13350:	ldr	r4, [sp, #44]	; 0x2c
   13354:	sub	r2, r3, #2
   13358:	mov	r5, #0
   1335c:	clz	r2, r2
   13360:	mov	r8, r4
   13364:	lsr	r2, r2, #5
   13368:	b	12874 <close@plt+0x1910>
   1336c:	ldr	r3, [sp, #156]	; 0x9c
   13370:	ands	r9, r3, #4
   13374:	beq	134ac <close@plt+0x2548>
   13378:	ldr	r2, [sp, #24]
   1337c:	add	r3, sl, #2
   13380:	cmp	r3, r2
   13384:	bcs	13398 <close@plt+0x2434>
   13388:	ldr	r2, [sp, #48]	; 0x30
   1338c:	ldrb	r4, [r2, #1]
   13390:	cmp	r4, #63	; 0x3f
   13394:	beq	13634 <close@plt+0x26d0>
   13398:	mov	r2, #0
   1339c:	mov	r8, r2
   133a0:	mov	r5, r2
   133a4:	mov	r4, #63	; 0x3f
   133a8:	b	12874 <close@plt+0x1910>
   133ac:	ldr	r3, [sp, #28]
   133b0:	cmp	r3, #0
   133b4:	bne	136d8 <close@plt+0x2774>
   133b8:	mov	r2, r5
   133bc:	mov	r8, r3
   133c0:	mov	r5, #0
   133c4:	mov	r4, #63	; 0x3f
   133c8:	b	12874 <close@plt+0x1910>
   133cc:	ldr	r3, [sp, #28]
   133d0:	cmp	r3, #0
   133d4:	bne	136d8 <close@plt+0x2774>
   133d8:	ldr	r2, [sp, #72]	; 0x48
   133dc:	adds	r3, fp, #0
   133e0:	movne	r3, #1
   133e4:	cmp	r2, #0
   133e8:	movne	r3, #0
   133ec:	cmp	r3, #0
   133f0:	strne	fp, [sp, #72]	; 0x48
   133f4:	movne	fp, #0
   133f8:	bne	13434 <close@plt+0x24d0>
   133fc:	cmp	fp, r7
   13400:	movhi	r2, #39	; 0x27
   13404:	ldrhi	r3, [sp, #32]
   13408:	strbhi	r2, [r3, r7]
   1340c:	add	r3, r7, #1
   13410:	cmp	fp, r3
   13414:	movhi	r1, #92	; 0x5c
   13418:	ldrhi	r2, [sp, #32]
   1341c:	strbhi	r1, [r2, r3]
   13420:	add	r3, r7, #2
   13424:	cmp	fp, r3
   13428:	movhi	r1, #39	; 0x27
   1342c:	ldrhi	r2, [sp, #32]
   13430:	strbhi	r1, [r2, r3]
   13434:	ldr	r3, [sp, #28]
   13438:	add	r7, r7, #3
   1343c:	mov	r2, r5
   13440:	mov	r8, r3
   13444:	str	r5, [sp, #68]	; 0x44
   13448:	str	r3, [sp, #40]	; 0x28
   1344c:	mov	r4, #39	; 0x27
   13450:	b	12874 <close@plt+0x1910>
   13454:	ldr	r3, [sp, #56]	; 0x38
   13458:	ldrb	r3, [r3, #1]
   1345c:	adds	r3, r3, #0
   13460:	movne	r3, #1
   13464:	b	1284c <close@plt+0x18e8>
   13468:	ldr	r5, [sp, #28]
   1346c:	mov	r4, #48	; 0x30
   13470:	b	12874 <close@plt+0x1910>
   13474:	add	sl, sl, #1
   13478:	b	123a4 <close@plt+0x1440>
   1347c:	mov	sl, r3
   13480:	ldr	r3, [sp, #28]
   13484:	mov	r8, fp
   13488:	str	r3, [sp, #44]	; 0x2c
   1348c:	ldr	r3, [sp, #152]	; 0x98
   13490:	sub	r2, r3, #2
   13494:	clz	r2, r2
   13498:	lsr	r2, r2, #5
   1349c:	b	12ab4 <close@plt+0x1b50>
   134a0:	str	ip, [sp, #40]	; 0x28
   134a4:	ldr	r5, [sp, #48]	; 0x30
   134a8:	b	128e4 <close@plt+0x1980>
   134ac:	mov	r2, r9
   134b0:	mov	r8, r9
   134b4:	mov	r5, #0
   134b8:	mov	r4, #63	; 0x3f
   134bc:	b	12874 <close@plt+0x1910>
   134c0:	cmp	fp, #0
   134c4:	beq	1353c <close@plt+0x25d8>
   134c8:	ldr	r1, [sp, #32]
   134cc:	mov	r3, #34	; 0x22
   134d0:	mov	r2, #1
   134d4:	strb	r3, [r1]
   134d8:	ldr	r3, [pc, #332]	; 1362c <close@plt+0x26c8>
   134dc:	str	r2, [sp, #52]	; 0x34
   134e0:	mov	r7, r2
   134e4:	str	r2, [sp, #44]	; 0x2c
   134e8:	str	r3, [sp, #64]	; 0x40
   134ec:	b	12394 <close@plt+0x1430>
   134f0:	ldr	r3, [pc, #300]	; 13624 <close@plt+0x26c0>
   134f4:	str	r3, [sp, #64]	; 0x40
   134f8:	mov	r3, #0
   134fc:	str	r3, [sp, #28]
   13500:	mov	r3, #1
   13504:	str	r3, [sp, #52]	; 0x34
   13508:	mov	r7, r3
   1350c:	mov	r3, #2
   13510:	str	r3, [sp, #152]	; 0x98
   13514:	b	12394 <close@plt+0x1430>
   13518:	bl	10f58 <abort@plt>
   1351c:	ldr	r0, [sp, #56]	; 0x38
   13520:	bl	10e74 <strlen@plt>
   13524:	str	r0, [sp, #24]
   13528:	b	13200 <close@plt+0x229c>
   1352c:	mov	r5, r8
   13530:	mov	r4, #48	; 0x30
   13534:	ldr	r8, [sp, #44]	; 0x2c
   13538:	b	12874 <close@plt+0x1910>
   1353c:	mov	r3, #1
   13540:	str	r3, [sp, #52]	; 0x34
   13544:	mov	r7, r3
   13548:	str	r3, [sp, #44]	; 0x2c
   1354c:	ldr	r3, [pc, #216]	; 1362c <close@plt+0x26c8>
   13550:	str	r3, [sp, #64]	; 0x40
   13554:	b	12394 <close@plt+0x1430>
   13558:	ldr	sl, [sp, #32]
   1355c:	mov	r8, fp
   13560:	mov	r2, r3
   13564:	b	12ab4 <close@plt+0x1b50>
   13568:	mov	r3, r5
   1356c:	mov	r5, r2
   13570:	b	12d6c <close@plt+0x1e08>
   13574:	ldr	r1, [sp, #24]
   13578:	mov	r2, r5
   1357c:	cmp	r1, r9
   13580:	mov	ip, r5
   13584:	ldr	r4, [sp, #80]	; 0x50
   13588:	ldr	r5, [sp, #92]	; 0x5c
   1358c:	ldr	r6, [sp, #84]	; 0x54
   13590:	ldr	r7, [sp, #88]	; 0x58
   13594:	bls	135c8 <close@plt+0x2664>
   13598:	ldrb	r3, [r8]
   1359c:	cmp	r3, #0
   135a0:	bne	135b4 <close@plt+0x2650>
   135a4:	b	135cc <close@plt+0x2668>
   135a8:	ldrb	r3, [r8, #1]!
   135ac:	cmp	r3, #0
   135b0:	beq	136cc <close@plt+0x2768>
   135b4:	add	r2, r2, #1
   135b8:	add	r3, sl, r2
   135bc:	cmp	r1, r3
   135c0:	bhi	135a8 <close@plt+0x2644>
   135c4:	mov	ip, r2
   135c8:	mov	r3, #0
   135cc:	mov	r2, r3
   135d0:	b	13064 <close@plt+0x2100>
   135d4:	mov	r3, #0
   135d8:	mov	ip, r5
   135dc:	ldr	r4, [sp, #80]	; 0x50
   135e0:	ldr	r5, [sp, #92]	; 0x5c
   135e4:	ldr	r6, [sp, #84]	; 0x54
   135e8:	ldr	r7, [sp, #88]	; 0x58
   135ec:	mov	r2, r3
   135f0:	b	13064 <close@plt+0x2100>
   135f4:	mov	r3, r6
   135f8:	mov	ip, r5
   135fc:	eor	r5, r3, #1
   13600:	mov	r2, r6
   13604:	ldr	r4, [sp, #80]	; 0x50
   13608:	ldr	r6, [sp, #84]	; 0x54
   1360c:	ldr	r7, [sp, #88]	; 0x58
   13610:	uxtb	r5, r5
   13614:	b	13064 <close@plt+0x2100>
   13618:	ldr	sl, [sp, #32]
   1361c:	mov	r8, fp
   13620:	b	13488 <close@plt+0x2524>
   13624:	andeq	r5, r1, r8, lsl #25
   13628:	andeq	r5, r1, ip, lsl #25
   1362c:	andeq	r5, r1, r4, lsl #25
   13630:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13634:	ldr	r2, [sp, #56]	; 0x38
   13638:	ldrb	r1, [r2, r3]
   1363c:	sub	r2, r1, #33	; 0x21
   13640:	uxtb	r2, r2
   13644:	cmp	r2, #29
   13648:	bhi	136e8 <close@plt+0x2784>
   1364c:	ldr	r0, [pc, #-36]	; 13630 <close@plt+0x26cc>
   13650:	mov	ip, #1
   13654:	ands	r2, r0, ip, lsl r2
   13658:	beq	136f8 <close@plt+0x2794>
   1365c:	ldr	r2, [sp, #28]
   13660:	cmp	r2, #0
   13664:	bne	137f8 <close@plt+0x2894>
   13668:	cmp	fp, r7
   1366c:	ldr	r8, [sp, #28]
   13670:	ldrhi	r2, [sp, #32]
   13674:	mov	sl, r3
   13678:	mov	r5, r8
   1367c:	strbhi	r4, [r2, r7]
   13680:	add	r2, r7, #1
   13684:	cmp	fp, r2
   13688:	movhi	r0, #34	; 0x22
   1368c:	ldrhi	ip, [sp, #32]
   13690:	mov	r4, r1
   13694:	strbhi	r0, [ip, r2]
   13698:	add	r2, r7, #2
   1369c:	cmp	fp, r2
   136a0:	movhi	r0, #34	; 0x22
   136a4:	ldrhi	ip, [sp, #32]
   136a8:	strbhi	r0, [ip, r2]
   136ac:	add	r2, r7, #3
   136b0:	cmp	fp, r2
   136b4:	movhi	r0, #63	; 0x3f
   136b8:	ldrhi	ip, [sp, #32]
   136bc:	add	r7, r7, #4
   136c0:	strbhi	r0, [ip, r2]
   136c4:	mov	r2, r8
   136c8:	b	12874 <close@plt+0x1910>
   136cc:	mov	ip, r2
   136d0:	mov	r2, r3
   136d4:	b	13064 <close@plt+0x2100>
   136d8:	ldr	sl, [sp, #32]
   136dc:	mov	r8, fp
   136e0:	ldr	r2, [sp, #28]
   136e4:	b	12ab4 <close@plt+0x1b50>
   136e8:	mov	r2, #0
   136ec:	mov	r8, r2
   136f0:	mov	r5, r2
   136f4:	b	12874 <close@plt+0x1910>
   136f8:	mov	r8, r2
   136fc:	mov	r5, #0
   13700:	b	12874 <close@plt+0x1910>
   13704:	ldr	r1, [sp, #152]	; 0x98
   13708:	bl	121d0 <close@plt+0x126c>
   1370c:	str	r0, [sp, #168]	; 0xa8
   13710:	b	12730 <close@plt+0x17cc>
   13714:	ldr	r1, [sp, #152]	; 0x98
   13718:	bl	121d0 <close@plt+0x126c>
   1371c:	str	r0, [sp, #164]	; 0xa4
   13720:	b	12710 <close@plt+0x17ac>
   13724:	ldr	r7, [sp, #28]
   13728:	b	12770 <close@plt+0x180c>
   1372c:	ldr	sl, [sp, #32]
   13730:	ldr	r2, [sp, #68]	; 0x44
   13734:	mov	r8, fp
   13738:	mov	fp, r7
   1373c:	ldr	r3, [sp, #64]	; 0x40
   13740:	cmp	r3, #0
   13744:	moveq	r2, #0
   13748:	andne	r2, r2, #1
   1374c:	cmp	r2, #0
   13750:	beq	1377c <close@plt+0x2818>
   13754:	mov	r2, r3
   13758:	ldrb	r3, [r3]
   1375c:	cmp	r3, #0
   13760:	beq	1377c <close@plt+0x2818>
   13764:	cmp	r8, fp
   13768:	strbhi	r3, [sl, fp]
   1376c:	ldrb	r3, [r2, #1]!
   13770:	add	fp, fp, #1
   13774:	cmp	r3, #0
   13778:	bne	13764 <close@plt+0x2800>
   1377c:	cmp	r8, fp
   13780:	movhi	r3, #0
   13784:	strbhi	r3, [sl, fp]
   13788:	b	12b10 <close@plt+0x1bac>
   1378c:	ldr	r3, [sp, #168]	; 0xa8
   13790:	ldr	sl, [sp, #32]
   13794:	str	r3, [sp, #16]
   13798:	ldr	r3, [sp, #164]	; 0xa4
   1379c:	mov	ip, #5
   137a0:	str	r3, [sp, #12]
   137a4:	ldr	r3, [sp, #160]	; 0xa0
   137a8:	ldr	r2, [sp, #56]	; 0x38
   137ac:	str	r3, [sp, #8]
   137b0:	ldr	r3, [sp, #156]	; 0x9c
   137b4:	ldr	r1, [sp, #72]	; 0x48
   137b8:	str	r3, [sp, #4]
   137bc:	mov	r0, sl
   137c0:	ldr	r3, [sp, #24]
   137c4:	str	ip, [sp]
   137c8:	bl	122f0 <close@plt+0x138c>
   137cc:	mov	fp, r0
   137d0:	b	12b10 <close@plt+0x1bac>
   137d4:	mov	r8, fp
   137d8:	ldr	sl, [sp, #32]
   137dc:	mov	fp, r7
   137e0:	mov	r2, r3
   137e4:	b	1373c <close@plt+0x27d8>
   137e8:	mov	r8, fp
   137ec:	ldr	sl, [sp, #32]
   137f0:	mov	fp, r7
   137f4:	b	1373c <close@plt+0x27d8>
   137f8:	ldr	sl, [sp, #32]
   137fc:	mov	r8, fp
   13800:	b	12acc <close@plt+0x1b68>
   13804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13808:	sub	sp, sp, #52	; 0x34
   1380c:	mov	r4, r0
   13810:	mov	r5, r3
   13814:	mov	sl, r1
   13818:	mov	fp, r2
   1381c:	bl	10e80 <__errno_location@plt>
   13820:	ldr	r7, [pc, #412]	; 139c4 <close@plt+0x2a60>
   13824:	cmn	r4, #-2147483647	; 0x80000001
   13828:	ldr	r6, [r7]
   1382c:	mov	r8, r0
   13830:	movne	r0, #0
   13834:	moveq	r0, #1
   13838:	ldr	r3, [r8]
   1383c:	orrs	r0, r0, r4, lsr #31
   13840:	str	r3, [sp, #24]
   13844:	bne	139c0 <close@plt+0x2a5c>
   13848:	ldr	r2, [r7, #4]
   1384c:	cmp	r4, r2
   13850:	blt	138b0 <close@plt+0x294c>
   13854:	add	r9, r7, #8
   13858:	cmp	r6, r9
   1385c:	str	r2, [sp, #44]	; 0x2c
   13860:	beq	13990 <close@plt+0x2a2c>
   13864:	mov	r3, #8
   13868:	sub	r2, r4, r2
   1386c:	mov	r0, r6
   13870:	str	r3, [sp]
   13874:	add	r2, r2, #1
   13878:	mvn	r3, #-2147483648	; 0x80000000
   1387c:	add	r1, sp, #44	; 0x2c
   13880:	bl	1467c <close@plt+0x3718>
   13884:	mov	r6, r0
   13888:	str	r0, [r7]
   1388c:	ldr	r0, [r7, #4]
   13890:	ldr	r2, [sp, #44]	; 0x2c
   13894:	mov	r1, #0
   13898:	sub	r2, r2, r0
   1389c:	add	r0, r6, r0, lsl #3
   138a0:	lsl	r2, r2, #3
   138a4:	bl	10ea4 <memset@plt>
   138a8:	ldr	r3, [sp, #44]	; 0x2c
   138ac:	str	r3, [r7, #4]
   138b0:	add	r3, r6, r4, lsl #3
   138b4:	ldr	r1, [r5, #4]
   138b8:	ldr	r7, [r3, #4]
   138bc:	ldr	r9, [r6, r4, lsl #3]
   138c0:	ldr	r2, [r5, #40]	; 0x28
   138c4:	ldr	ip, [r5, #44]	; 0x2c
   138c8:	add	r0, r5, #8
   138cc:	str	r3, [sp, #28]
   138d0:	ldr	r3, [r5]
   138d4:	orr	r1, r1, #1
   138d8:	mov	lr, r0
   138dc:	str	r1, [sp, #32]
   138e0:	str	r0, [sp, #36]	; 0x24
   138e4:	str	r1, [sp, #4]
   138e8:	str	r2, [sp, #12]
   138ec:	str	r3, [sp]
   138f0:	mov	r0, r7
   138f4:	mov	r1, r9
   138f8:	str	ip, [sp, #16]
   138fc:	str	lr, [sp, #8]
   13900:	mov	r3, fp
   13904:	mov	r2, sl
   13908:	bl	122f0 <close@plt+0x138c>
   1390c:	cmp	r9, r0
   13910:	bhi	1397c <close@plt+0x2a18>
   13914:	ldr	r3, [pc, #172]	; 139c8 <close@plt+0x2a64>
   13918:	add	r9, r0, #1
   1391c:	cmp	r7, r3
   13920:	str	r9, [r6, r4, lsl #3]
   13924:	beq	13930 <close@plt+0x29cc>
   13928:	mov	r0, r7
   1392c:	bl	11ff4 <close@plt+0x1090>
   13930:	mov	r0, r9
   13934:	bl	14518 <close@plt+0x35b4>
   13938:	ldr	lr, [sp, #28]
   1393c:	ldr	ip, [r5, #44]	; 0x2c
   13940:	ldr	r4, [r5, #40]	; 0x28
   13944:	mov	r3, fp
   13948:	mov	r2, sl
   1394c:	mov	r1, r9
   13950:	str	r0, [lr, #4]
   13954:	ldr	lr, [r5]
   13958:	ldr	r5, [sp, #36]	; 0x24
   1395c:	str	ip, [sp, #16]
   13960:	str	r5, [sp, #8]
   13964:	ldr	r5, [sp, #32]
   13968:	str	r4, [sp, #12]
   1396c:	str	r5, [sp, #4]
   13970:	str	lr, [sp]
   13974:	mov	r7, r0
   13978:	bl	122f0 <close@plt+0x138c>
   1397c:	ldr	r3, [sp, #24]
   13980:	mov	r0, r7
   13984:	str	r3, [r8]
   13988:	add	sp, sp, #52	; 0x34
   1398c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13990:	mov	r3, #8
   13994:	sub	r2, r4, r2
   13998:	str	r3, [sp]
   1399c:	add	r1, sp, #44	; 0x2c
   139a0:	add	r2, r2, #1
   139a4:	mvn	r3, #-2147483648	; 0x80000000
   139a8:	bl	1467c <close@plt+0x3718>
   139ac:	mov	r6, r0
   139b0:	ldm	r9, {r0, r1}
   139b4:	str	r6, [r7]
   139b8:	stm	r6, {r0, r1}
   139bc:	b	1388c <close@plt+0x2928>
   139c0:	bl	10f58 <abort@plt>
   139c4:	strdeq	r7, [r2], -ip
   139c8:	andeq	r7, r2, r0, lsl #3
   139cc:	push	{r4, r5, r6, lr}
   139d0:	mov	r5, r0
   139d4:	bl	10e80 <__errno_location@plt>
   139d8:	cmp	r5, #0
   139dc:	mov	r1, #48	; 0x30
   139e0:	mov	r4, r0
   139e4:	ldr	r0, [pc, #16]	; 139fc <close@plt+0x2a98>
   139e8:	ldr	r6, [r4]
   139ec:	movne	r0, r5
   139f0:	bl	14978 <close@plt+0x3a14>
   139f4:	str	r6, [r4]
   139f8:	pop	{r4, r5, r6, pc}
   139fc:	andeq	r7, r2, r0, lsl #5
   13a00:	ldr	r3, [pc, #12]	; 13a14 <close@plt+0x2ab0>
   13a04:	cmp	r0, #0
   13a08:	moveq	r0, r3
   13a0c:	ldr	r0, [r0]
   13a10:	bx	lr
   13a14:	andeq	r7, r2, r0, lsl #5
   13a18:	ldr	r3, [pc, #12]	; 13a2c <close@plt+0x2ac8>
   13a1c:	cmp	r0, #0
   13a20:	moveq	r0, r3
   13a24:	str	r1, [r0]
   13a28:	bx	lr
   13a2c:	andeq	r7, r2, r0, lsl #5
   13a30:	ldr	r3, [pc, #52]	; 13a6c <close@plt+0x2b08>
   13a34:	cmp	r0, #0
   13a38:	moveq	r0, r3
   13a3c:	add	r3, r0, #8
   13a40:	push	{lr}		; (str lr, [sp, #-4]!)
   13a44:	lsr	lr, r1, #5
   13a48:	and	r1, r1, #31
   13a4c:	ldr	ip, [r3, lr, lsl #2]
   13a50:	lsr	r0, ip, r1
   13a54:	eor	r2, r2, r0
   13a58:	and	r2, r2, #1
   13a5c:	and	r0, r0, #1
   13a60:	eor	r1, ip, r2, lsl r1
   13a64:	str	r1, [r3, lr, lsl #2]
   13a68:	pop	{pc}		; (ldr pc, [sp], #4)
   13a6c:	andeq	r7, r2, r0, lsl #5
   13a70:	ldr	r3, [pc, #16]	; 13a88 <close@plt+0x2b24>
   13a74:	cmp	r0, #0
   13a78:	movne	r3, r0
   13a7c:	ldr	r0, [r3, #4]
   13a80:	str	r1, [r3, #4]
   13a84:	bx	lr
   13a88:	andeq	r7, r2, r0, lsl #5
   13a8c:	ldr	r3, [pc, #44]	; 13ac0 <close@plt+0x2b5c>
   13a90:	cmp	r0, #0
   13a94:	moveq	r0, r3
   13a98:	mov	ip, #10
   13a9c:	cmp	r2, #0
   13aa0:	cmpne	r1, #0
   13aa4:	str	ip, [r0]
   13aa8:	beq	13ab8 <close@plt+0x2b54>
   13aac:	str	r1, [r0, #40]	; 0x28
   13ab0:	str	r2, [r0, #44]	; 0x2c
   13ab4:	bx	lr
   13ab8:	push	{r4, lr}
   13abc:	bl	10f58 <abort@plt>
   13ac0:	andeq	r7, r2, r0, lsl #5
   13ac4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ac8:	sub	sp, sp, #24
   13acc:	ldr	ip, [pc, #108]	; 13b40 <close@plt+0x2bdc>
   13ad0:	ldr	r4, [sp, #56]	; 0x38
   13ad4:	mov	r9, r2
   13ad8:	cmp	r4, #0
   13adc:	moveq	r4, ip
   13ae0:	mov	sl, r3
   13ae4:	mov	r7, r0
   13ae8:	mov	r8, r1
   13aec:	bl	10e80 <__errno_location@plt>
   13af0:	ldr	r3, [r4, #44]	; 0x2c
   13af4:	mov	r1, r8
   13af8:	ldr	r6, [r0]
   13afc:	str	r3, [sp, #16]
   13b00:	ldr	r2, [r4, #40]	; 0x28
   13b04:	add	r3, r4, #8
   13b08:	str	r3, [sp, #8]
   13b0c:	str	r2, [sp, #12]
   13b10:	ldr	r2, [r4, #4]
   13b14:	mov	r5, r0
   13b18:	str	r2, [sp, #4]
   13b1c:	ldr	ip, [r4]
   13b20:	mov	r3, sl
   13b24:	mov	r2, r9
   13b28:	mov	r0, r7
   13b2c:	str	ip, [sp]
   13b30:	bl	122f0 <close@plt+0x138c>
   13b34:	str	r6, [r5]
   13b38:	add	sp, sp, #24
   13b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b40:	andeq	r7, r2, r0, lsl #5
   13b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b48:	cmp	r3, #0
   13b4c:	sub	sp, sp, #44	; 0x2c
   13b50:	ldr	r4, [pc, #192]	; 13c18 <close@plt+0x2cb4>
   13b54:	mov	r6, r2
   13b58:	movne	r4, r3
   13b5c:	mov	r9, r1
   13b60:	mov	r8, r0
   13b64:	bl	10e80 <__errno_location@plt>
   13b68:	ldr	r3, [r4, #44]	; 0x2c
   13b6c:	ldr	r5, [r4, #4]
   13b70:	add	sl, r4, #8
   13b74:	cmp	r6, #0
   13b78:	orreq	r5, r5, #1
   13b7c:	mov	r1, #0
   13b80:	ldr	r2, [r0]
   13b84:	str	r3, [sp, #16]
   13b88:	ldr	r3, [r4, #40]	; 0x28
   13b8c:	stmib	sp, {r5, sl}
   13b90:	str	r3, [sp, #12]
   13b94:	ldr	r3, [r4]
   13b98:	mov	r7, r0
   13b9c:	str	r2, [sp, #28]
   13ba0:	str	r3, [sp]
   13ba4:	mov	r2, r8
   13ba8:	mov	r3, r9
   13bac:	mov	r0, r1
   13bb0:	bl	122f0 <close@plt+0x138c>
   13bb4:	add	r1, r0, #1
   13bb8:	mov	fp, r0
   13bbc:	mov	r0, r1
   13bc0:	str	r1, [sp, #36]	; 0x24
   13bc4:	bl	14518 <close@plt+0x35b4>
   13bc8:	ldr	r3, [r4, #44]	; 0x2c
   13bcc:	mov	r2, r8
   13bd0:	str	r3, [sp, #16]
   13bd4:	ldr	r3, [r4, #40]	; 0x28
   13bd8:	str	r5, [sp, #4]
   13bdc:	str	r3, [sp, #12]
   13be0:	str	sl, [sp, #8]
   13be4:	ldr	ip, [r4]
   13be8:	ldr	r1, [sp, #36]	; 0x24
   13bec:	mov	r3, r9
   13bf0:	str	ip, [sp]
   13bf4:	str	r0, [sp, #32]
   13bf8:	bl	122f0 <close@plt+0x138c>
   13bfc:	ldr	r2, [sp, #28]
   13c00:	cmp	r6, #0
   13c04:	str	r2, [r7]
   13c08:	ldr	r0, [sp, #32]
   13c0c:	strne	fp, [r6]
   13c10:	add	sp, sp, #44	; 0x2c
   13c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c18:	andeq	r7, r2, r0, lsl #5
   13c1c:	mov	r3, r2
   13c20:	mov	r2, #0
   13c24:	b	13b44 <close@plt+0x2be0>
   13c28:	push	{r4, r5, r6, r7, r8, lr}
   13c2c:	ldr	r6, [pc, #116]	; 13ca8 <close@plt+0x2d44>
   13c30:	ldr	r3, [r6, #4]
   13c34:	ldr	r7, [r6]
   13c38:	cmp	r3, #1
   13c3c:	movgt	r5, r7
   13c40:	movgt	r4, #1
   13c44:	ble	13c64 <close@plt+0x2d00>
   13c48:	ldr	r0, [r5, #12]
   13c4c:	bl	11ff4 <close@plt+0x1090>
   13c50:	ldr	r3, [r6, #4]
   13c54:	add	r4, r4, #1
   13c58:	cmp	r3, r4
   13c5c:	add	r5, r5, #8
   13c60:	bgt	13c48 <close@plt+0x2ce4>
   13c64:	ldr	r0, [r7, #4]
   13c68:	ldr	r4, [pc, #60]	; 13cac <close@plt+0x2d48>
   13c6c:	cmp	r0, r4
   13c70:	beq	13c84 <close@plt+0x2d20>
   13c74:	bl	11ff4 <close@plt+0x1090>
   13c78:	mov	r3, #256	; 0x100
   13c7c:	str	r4, [r6, #12]
   13c80:	str	r3, [r6, #8]
   13c84:	ldr	r4, [pc, #36]	; 13cb0 <close@plt+0x2d4c>
   13c88:	cmp	r7, r4
   13c8c:	beq	13c9c <close@plt+0x2d38>
   13c90:	mov	r0, r7
   13c94:	bl	11ff4 <close@plt+0x1090>
   13c98:	str	r4, [r6]
   13c9c:	mov	r3, #1
   13ca0:	str	r3, [r6, #4]
   13ca4:	pop	{r4, r5, r6, r7, r8, pc}
   13ca8:	strdeq	r7, [r2], -ip
   13cac:	andeq	r7, r2, r0, lsl #3
   13cb0:	andeq	r7, r2, r4, lsl #2
   13cb4:	ldr	r3, [pc, #4]	; 13cc0 <close@plt+0x2d5c>
   13cb8:	mvn	r2, #0
   13cbc:	b	13804 <close@plt+0x28a0>
   13cc0:	andeq	r7, r2, r0, lsl #5
   13cc4:	ldr	r3, [pc]	; 13ccc <close@plt+0x2d68>
   13cc8:	b	13804 <close@plt+0x28a0>
   13ccc:	andeq	r7, r2, r0, lsl #5
   13cd0:	mov	r1, r0
   13cd4:	ldr	r3, [pc, #8]	; 13ce4 <close@plt+0x2d80>
   13cd8:	mvn	r2, #0
   13cdc:	mov	r0, #0
   13ce0:	b	13804 <close@plt+0x28a0>
   13ce4:	andeq	r7, r2, r0, lsl #5
   13ce8:	mov	r2, r1
   13cec:	ldr	r3, [pc, #8]	; 13cfc <close@plt+0x2d98>
   13cf0:	mov	r1, r0
   13cf4:	mov	r0, #0
   13cf8:	b	13804 <close@plt+0x28a0>
   13cfc:	andeq	r7, r2, r0, lsl #5
   13d00:	push	{r4, r5, lr}
   13d04:	sub	sp, sp, #52	; 0x34
   13d08:	mov	r5, r2
   13d0c:	mov	r4, r0
   13d10:	mov	r0, sp
   13d14:	bl	121a0 <close@plt+0x123c>
   13d18:	mov	r3, sp
   13d1c:	mov	r1, r5
   13d20:	mov	r0, r4
   13d24:	mvn	r2, #0
   13d28:	bl	13804 <close@plt+0x28a0>
   13d2c:	add	sp, sp, #52	; 0x34
   13d30:	pop	{r4, r5, pc}
   13d34:	push	{r4, r5, r6, lr}
   13d38:	sub	sp, sp, #48	; 0x30
   13d3c:	mov	r5, r2
   13d40:	mov	r6, r3
   13d44:	mov	r4, r0
   13d48:	mov	r0, sp
   13d4c:	bl	121a0 <close@plt+0x123c>
   13d50:	mov	r3, sp
   13d54:	mov	r2, r6
   13d58:	mov	r1, r5
   13d5c:	mov	r0, r4
   13d60:	bl	13804 <close@plt+0x28a0>
   13d64:	add	sp, sp, #48	; 0x30
   13d68:	pop	{r4, r5, r6, pc}
   13d6c:	mov	r2, r1
   13d70:	mov	r1, r0
   13d74:	mov	r0, #0
   13d78:	b	13d00 <close@plt+0x2d9c>
   13d7c:	mov	r3, r2
   13d80:	mov	r2, r1
   13d84:	mov	r1, r0
   13d88:	mov	r0, #0
   13d8c:	b	13d34 <close@plt+0x2dd0>
   13d90:	push	{r4, r5, r6, r7, r8, lr}
   13d94:	mov	r7, r0
   13d98:	ldr	lr, [pc, #100]	; 13e04 <close@plt+0x2ea0>
   13d9c:	mov	r8, r1
   13da0:	mov	r4, r2
   13da4:	ldm	lr!, {r0, r1, r2, r3}
   13da8:	sub	sp, sp, #48	; 0x30
   13dac:	mov	ip, sp
   13db0:	lsr	r5, r4, #5
   13db4:	stmia	ip!, {r0, r1, r2, r3}
   13db8:	add	r6, sp, #8
   13dbc:	ldm	lr!, {r0, r1, r2, r3}
   13dc0:	and	r4, r4, #31
   13dc4:	stmia	ip!, {r0, r1, r2, r3}
   13dc8:	ldm	lr, {r0, r1, r2, r3}
   13dcc:	stm	ip, {r0, r1, r2, r3}
   13dd0:	mov	r2, r8
   13dd4:	ldr	lr, [r6, r5, lsl #2]
   13dd8:	mov	r1, r7
   13ddc:	mov	r3, sp
   13de0:	lsr	ip, lr, r4
   13de4:	eor	ip, ip, #1
   13de8:	and	ip, ip, #1
   13dec:	mov	r0, #0
   13df0:	eor	r4, lr, ip, lsl r4
   13df4:	str	r4, [r6, r5, lsl #2]
   13df8:	bl	13804 <close@plt+0x28a0>
   13dfc:	add	sp, sp, #48	; 0x30
   13e00:	pop	{r4, r5, r6, r7, r8, pc}
   13e04:	andeq	r7, r2, r0, lsl #5
   13e08:	mov	r2, r1
   13e0c:	mvn	r1, #0
   13e10:	b	13d90 <close@plt+0x2e2c>
   13e14:	mov	r2, #58	; 0x3a
   13e18:	mvn	r1, #0
   13e1c:	b	13d90 <close@plt+0x2e2c>
   13e20:	mov	r2, #58	; 0x3a
   13e24:	b	13d90 <close@plt+0x2e2c>
   13e28:	push	{r4, r5, r6, r7, lr}
   13e2c:	sub	sp, sp, #100	; 0x64
   13e30:	mov	r6, r0
   13e34:	mov	r0, sp
   13e38:	mov	r7, r2
   13e3c:	bl	121a0 <close@plt+0x123c>
   13e40:	mov	ip, sp
   13e44:	add	lr, sp, #48	; 0x30
   13e48:	ldm	ip!, {r0, r1, r2, r3}
   13e4c:	stmia	lr!, {r0, r1, r2, r3}
   13e50:	ldm	ip!, {r0, r1, r2, r3}
   13e54:	ldr	r5, [sp, #60]	; 0x3c
   13e58:	stmia	lr!, {r0, r1, r2, r3}
   13e5c:	mvn	r4, r5
   13e60:	ldm	ip, {r0, r1, r2, r3}
   13e64:	and	ip, r4, #67108864	; 0x4000000
   13e68:	eor	ip, ip, r5
   13e6c:	str	ip, [sp, #60]	; 0x3c
   13e70:	stm	lr, {r0, r1, r2, r3}
   13e74:	mov	r1, r7
   13e78:	mov	r0, r6
   13e7c:	add	r3, sp, #48	; 0x30
   13e80:	mvn	r2, #0
   13e84:	bl	13804 <close@plt+0x28a0>
   13e88:	add	sp, sp, #100	; 0x64
   13e8c:	pop	{r4, r5, r6, r7, pc}
   13e90:	push	{r4, r5, r6, r7, r8, lr}
   13e94:	mov	r5, r1
   13e98:	ldr	lr, [pc, #100]	; 13f04 <close@plt+0x2fa0>
   13e9c:	mov	r4, r2
   13ea0:	mov	r7, r0
   13ea4:	mov	r8, r3
   13ea8:	ldm	lr!, {r0, r1, r2, r3}
   13eac:	sub	sp, sp, #48	; 0x30
   13eb0:	mov	ip, sp
   13eb4:	mov	r6, #10
   13eb8:	stmia	ip!, {r0, r1, r2, r3}
   13ebc:	cmp	r4, #0
   13ec0:	cmpne	r5, #0
   13ec4:	ldm	lr!, {r0, r1, r2, r3}
   13ec8:	str	r6, [sp]
   13ecc:	stmia	ip!, {r0, r1, r2, r3}
   13ed0:	ldm	lr, {r0, r1, r2, r3}
   13ed4:	stm	ip, {r0, r1, r2, r3}
   13ed8:	beq	13f00 <close@plt+0x2f9c>
   13edc:	mov	r3, sp
   13ee0:	mov	r1, r8
   13ee4:	mov	r0, r7
   13ee8:	ldr	r2, [sp, #72]	; 0x48
   13eec:	str	r5, [sp, #40]	; 0x28
   13ef0:	str	r4, [sp, #44]	; 0x2c
   13ef4:	bl	13804 <close@plt+0x28a0>
   13ef8:	add	sp, sp, #48	; 0x30
   13efc:	pop	{r4, r5, r6, r7, r8, pc}
   13f00:	bl	10f58 <abort@plt>
   13f04:	andeq	r7, r2, r0, lsl #5
   13f08:	push	{lr}		; (str lr, [sp, #-4]!)
   13f0c:	sub	sp, sp, #12
   13f10:	mvn	ip, #0
   13f14:	str	ip, [sp]
   13f18:	bl	13e90 <close@plt+0x2f2c>
   13f1c:	add	sp, sp, #12
   13f20:	pop	{pc}		; (ldr pc, [sp], #4)
   13f24:	push	{lr}		; (str lr, [sp, #-4]!)
   13f28:	sub	sp, sp, #12
   13f2c:	mvn	ip, #0
   13f30:	mov	r3, r2
   13f34:	str	ip, [sp]
   13f38:	mov	r2, r1
   13f3c:	mov	r1, r0
   13f40:	mov	r0, #0
   13f44:	bl	13e90 <close@plt+0x2f2c>
   13f48:	add	sp, sp, #12
   13f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f50:	push	{lr}		; (str lr, [sp, #-4]!)
   13f54:	sub	sp, sp, #12
   13f58:	str	r3, [sp]
   13f5c:	mov	r3, r2
   13f60:	mov	r2, r1
   13f64:	mov	r1, r0
   13f68:	mov	r0, #0
   13f6c:	bl	13e90 <close@plt+0x2f2c>
   13f70:	add	sp, sp, #12
   13f74:	pop	{pc}		; (ldr pc, [sp], #4)
   13f78:	ldr	r3, [pc]	; 13f80 <close@plt+0x301c>
   13f7c:	b	13804 <close@plt+0x28a0>
   13f80:	andeq	r7, r2, ip, lsl #2
   13f84:	mov	r2, r1
   13f88:	ldr	r3, [pc, #8]	; 13f98 <close@plt+0x3034>
   13f8c:	mov	r1, r0
   13f90:	mov	r0, #0
   13f94:	b	13804 <close@plt+0x28a0>
   13f98:	andeq	r7, r2, ip, lsl #2
   13f9c:	ldr	r3, [pc, #4]	; 13fa8 <close@plt+0x3044>
   13fa0:	mvn	r2, #0
   13fa4:	b	13804 <close@plt+0x28a0>
   13fa8:	andeq	r7, r2, ip, lsl #2
   13fac:	mov	r1, r0
   13fb0:	ldr	r3, [pc, #8]	; 13fc0 <close@plt+0x305c>
   13fb4:	mvn	r2, #0
   13fb8:	mov	r0, #0
   13fbc:	b	13804 <close@plt+0x28a0>
   13fc0:	andeq	r7, r2, ip, lsl #2
   13fc4:	mov	r2, #3
   13fc8:	mov	r1, #0
   13fcc:	b	14bc4 <close@plt+0x3c60>
   13fd0:	push	{r4, r5, r6, lr}
   13fd4:	sub	sp, sp, #32
   13fd8:	cmp	r1, #0
   13fdc:	mov	r4, r0
   13fe0:	ldr	r5, [sp, #48]	; 0x30
   13fe4:	ldr	r6, [sp, #52]	; 0x34
   13fe8:	beq	14300 <close@plt+0x339c>
   13fec:	stm	sp, {r2, r3}
   13ff0:	mov	r3, r1
   13ff4:	ldr	r2, [pc, #808]	; 14324 <close@plt+0x33c0>
   13ff8:	mov	r1, #1
   13ffc:	bl	10ec8 <__fprintf_chk@plt>
   14000:	mov	r2, #5
   14004:	ldr	r1, [pc, #796]	; 14328 <close@plt+0x33c4>
   14008:	mov	r0, #0
   1400c:	bl	10da8 <dcgettext@plt>
   14010:	ldr	r3, [pc, #788]	; 1432c <close@plt+0x33c8>
   14014:	ldr	r2, [pc, #788]	; 14330 <close@plt+0x33cc>
   14018:	str	r3, [sp]
   1401c:	mov	r1, #1
   14020:	mov	r3, r0
   14024:	mov	r0, r4
   14028:	bl	10ec8 <__fprintf_chk@plt>
   1402c:	mov	r1, r4
   14030:	mov	r0, #10
   14034:	bl	10d9c <fputc_unlocked@plt>
   14038:	mov	r2, #5
   1403c:	ldr	r1, [pc, #752]	; 14334 <close@plt+0x33d0>
   14040:	mov	r0, #0
   14044:	bl	10da8 <dcgettext@plt>
   14048:	mov	r1, #1
   1404c:	ldr	r3, [pc, #740]	; 14338 <close@plt+0x33d4>
   14050:	mov	r2, r0
   14054:	mov	r0, r4
   14058:	bl	10ec8 <__fprintf_chk@plt>
   1405c:	mov	r1, r4
   14060:	mov	r0, #10
   14064:	bl	10d9c <fputc_unlocked@plt>
   14068:	cmp	r6, #9
   1406c:	ldrls	pc, [pc, r6, lsl #2]
   14070:	b	14318 <close@plt+0x33b4>
   14074:	strdeq	r4, [r1], -r8
   14078:	andeq	r4, r1, r0, lsl #2
   1407c:	andeq	r4, r1, ip, lsr #2
   14080:	andeq	r4, r1, r0, ror #2
   14084:	muleq	r1, ip, r1
   14088:	ldrdeq	r4, [r1], -r8
   1408c:	andeq	r4, r1, r4, lsl r2
   14090:	andeq	r4, r1, r8, asr r2
   14094:	andeq	r4, r1, r8, lsr #5
   14098:	muleq	r1, ip, r0
   1409c:	ldr	r1, [pc, #664]	; 1433c <close@plt+0x33d8>
   140a0:	mov	r2, #5
   140a4:	mov	r0, #0
   140a8:	bl	10da8 <dcgettext@plt>
   140ac:	ldr	ip, [r5, #32]
   140b0:	ldr	r1, [r5, #28]
   140b4:	ldr	r2, [r5, #24]
   140b8:	ldr	r3, [r5]
   140bc:	ldr	r6, [r5, #20]
   140c0:	str	ip, [sp, #28]
   140c4:	ldr	lr, [r5, #16]
   140c8:	str	r1, [sp, #24]
   140cc:	ldr	ip, [r5, #12]
   140d0:	str	r2, [sp, #20]
   140d4:	ldr	r1, [r5, #8]
   140d8:	ldr	r2, [r5, #4]
   140dc:	str	r6, [sp, #16]
   140e0:	stmib	sp, {r1, ip, lr}
   140e4:	mov	r1, #1
   140e8:	str	r2, [sp]
   140ec:	mov	r2, r0
   140f0:	mov	r0, r4
   140f4:	bl	10ec8 <__fprintf_chk@plt>
   140f8:	add	sp, sp, #32
   140fc:	pop	{r4, r5, r6, pc}
   14100:	mov	r2, #5
   14104:	ldr	r1, [pc, #564]	; 14340 <close@plt+0x33dc>
   14108:	mov	r0, #0
   1410c:	bl	10da8 <dcgettext@plt>
   14110:	ldr	r3, [r5]
   14114:	mov	r1, #1
   14118:	mov	r2, r0
   1411c:	mov	r0, r4
   14120:	add	sp, sp, #32
   14124:	pop	{r4, r5, r6, lr}
   14128:	b	10ec8 <__fprintf_chk@plt>
   1412c:	mov	r2, #5
   14130:	ldr	r1, [pc, #524]	; 14344 <close@plt+0x33e0>
   14134:	mov	r0, #0
   14138:	bl	10da8 <dcgettext@plt>
   1413c:	ldr	r2, [r5, #4]
   14140:	ldr	r3, [r5]
   14144:	mov	r1, #1
   14148:	str	r2, [sp, #48]	; 0x30
   1414c:	mov	r2, r0
   14150:	mov	r0, r4
   14154:	add	sp, sp, #32
   14158:	pop	{r4, r5, r6, lr}
   1415c:	b	10ec8 <__fprintf_chk@plt>
   14160:	mov	r2, #5
   14164:	ldr	r1, [pc, #476]	; 14348 <close@plt+0x33e4>
   14168:	mov	r0, #0
   1416c:	bl	10da8 <dcgettext@plt>
   14170:	ldr	r1, [r5, #8]
   14174:	ldr	r2, [r5, #4]
   14178:	ldr	r3, [r5]
   1417c:	str	r1, [sp, #52]	; 0x34
   14180:	str	r2, [sp, #48]	; 0x30
   14184:	mov	r1, #1
   14188:	mov	r2, r0
   1418c:	mov	r0, r4
   14190:	add	sp, sp, #32
   14194:	pop	{r4, r5, r6, lr}
   14198:	b	10ec8 <__fprintf_chk@plt>
   1419c:	mov	r2, #5
   141a0:	ldr	r1, [pc, #420]	; 1434c <close@plt+0x33e8>
   141a4:	mov	r0, #0
   141a8:	bl	10da8 <dcgettext@plt>
   141ac:	ldr	r1, [r5, #8]
   141b0:	ldr	ip, [r5, #12]
   141b4:	ldr	r2, [r5, #4]
   141b8:	ldr	r3, [r5]
   141bc:	stmib	sp, {r1, ip}
   141c0:	str	r2, [sp]
   141c4:	mov	r1, #1
   141c8:	mov	r2, r0
   141cc:	mov	r0, r4
   141d0:	bl	10ec8 <__fprintf_chk@plt>
   141d4:	b	140f8 <close@plt+0x3194>
   141d8:	mov	r2, #5
   141dc:	ldr	r1, [pc, #364]	; 14350 <close@plt+0x33ec>
   141e0:	mov	r0, #0
   141e4:	bl	10da8 <dcgettext@plt>
   141e8:	add	r1, r5, #8
   141ec:	ldr	r2, [r5, #4]
   141f0:	ldm	r1, {r1, ip, lr}
   141f4:	ldr	r3, [r5]
   141f8:	str	r2, [sp]
   141fc:	stmib	sp, {r1, ip, lr}
   14200:	mov	r1, #1
   14204:	mov	r2, r0
   14208:	mov	r0, r4
   1420c:	bl	10ec8 <__fprintf_chk@plt>
   14210:	b	140f8 <close@plt+0x3194>
   14214:	mov	r2, #5
   14218:	ldr	r1, [pc, #308]	; 14354 <close@plt+0x33f0>
   1421c:	mov	r0, #0
   14220:	bl	10da8 <dcgettext@plt>
   14224:	add	r1, r5, #8
   14228:	ldr	r2, [r5, #4]
   1422c:	ldm	r1, {r1, ip, lr}
   14230:	ldr	r6, [r5, #20]
   14234:	ldr	r3, [r5]
   14238:	stmib	sp, {r1, ip, lr}
   1423c:	mov	r1, #1
   14240:	str	r2, [sp]
   14244:	str	r6, [sp, #16]
   14248:	mov	r2, r0
   1424c:	mov	r0, r4
   14250:	bl	10ec8 <__fprintf_chk@plt>
   14254:	b	140f8 <close@plt+0x3194>
   14258:	mov	r2, #5
   1425c:	ldr	r1, [pc, #244]	; 14358 <close@plt+0x33f4>
   14260:	mov	r0, #0
   14264:	bl	10da8 <dcgettext@plt>
   14268:	ldr	r2, [r5, #24]
   1426c:	ldr	r3, [r5]
   14270:	ldr	r6, [r5, #20]
   14274:	ldr	lr, [r5, #16]
   14278:	ldr	ip, [r5, #12]
   1427c:	str	r2, [sp, #20]
   14280:	ldr	r1, [r5, #8]
   14284:	ldr	r2, [r5, #4]
   14288:	str	r6, [sp, #16]
   1428c:	stmib	sp, {r1, ip, lr}
   14290:	mov	r1, #1
   14294:	str	r2, [sp]
   14298:	mov	r2, r0
   1429c:	mov	r0, r4
   142a0:	bl	10ec8 <__fprintf_chk@plt>
   142a4:	b	140f8 <close@plt+0x3194>
   142a8:	mov	r2, #5
   142ac:	ldr	r1, [pc, #168]	; 1435c <close@plt+0x33f8>
   142b0:	mov	r0, #0
   142b4:	bl	10da8 <dcgettext@plt>
   142b8:	ldr	r1, [r5, #28]
   142bc:	ldr	r2, [r5, #24]
   142c0:	ldr	r3, [r5]
   142c4:	ldr	r6, [r5, #20]
   142c8:	ldr	lr, [r5, #16]
   142cc:	str	r1, [sp, #24]
   142d0:	ldr	ip, [r5, #12]
   142d4:	str	r2, [sp, #20]
   142d8:	ldr	r1, [r5, #8]
   142dc:	ldr	r2, [r5, #4]
   142e0:	str	r6, [sp, #16]
   142e4:	stmib	sp, {r1, ip, lr}
   142e8:	mov	r1, #1
   142ec:	str	r2, [sp]
   142f0:	mov	r2, r0
   142f4:	mov	r0, r4
   142f8:	bl	10ec8 <__fprintf_chk@plt>
   142fc:	b	140f8 <close@plt+0x3194>
   14300:	str	r3, [sp]
   14304:	mov	r1, #1
   14308:	mov	r3, r2
   1430c:	ldr	r2, [pc, #76]	; 14360 <close@plt+0x33fc>
   14310:	bl	10ec8 <__fprintf_chk@plt>
   14314:	b	14000 <close@plt+0x309c>
   14318:	mov	r2, #5
   1431c:	ldr	r1, [pc, #64]	; 14364 <close@plt+0x3400>
   14320:	b	140a4 <close@plt+0x3140>
   14324:	strdeq	r5, [r1], -r8
   14328:	andeq	r5, r1, ip, lsl #26
   1432c:	andeq	r0, r0, r6, ror #15
   14330:	andeq	r5, r1, r4, ror #31
   14334:	andeq	r5, r1, r0, lsl sp
   14338:			; <UNDEFINED> instruction: 0x00015dbc
   1433c:	andeq	r5, r1, ip, ror #29
   14340:	andeq	r5, r1, r0, ror #27
   14344:	strdeq	r5, [r1], -r0
   14348:	andeq	r5, r1, r8, lsl #28
   1434c:	andeq	r5, r1, r4, lsr #28
   14350:	andeq	r5, r1, r4, asr #28
   14354:	andeq	r5, r1, r8, ror #28
   14358:	muleq	r1, r0, lr
   1435c:			; <UNDEFINED> instruction: 0x00015ebc
   14360:	andeq	r5, r1, r4, lsl #26
   14364:	andeq	r5, r1, r0, lsr #30
   14368:	push	{r4, r5, lr}
   1436c:	sub	sp, sp, #12
   14370:	ldr	r5, [sp, #24]
   14374:	ldr	ip, [r5]
   14378:	cmp	ip, #0
   1437c:	beq	14398 <close@plt+0x3434>
   14380:	mov	lr, r5
   14384:	mov	ip, #0
   14388:	ldr	r4, [lr, #4]!
   1438c:	add	ip, ip, #1
   14390:	cmp	r4, #0
   14394:	bne	14388 <close@plt+0x3424>
   14398:	stm	sp, {r5, ip}
   1439c:	bl	13fd0 <close@plt+0x306c>
   143a0:	add	sp, sp, #12
   143a4:	pop	{r4, r5, pc}
   143a8:	push	{r4, r5, lr}
   143ac:	sub	sp, sp, #52	; 0x34
   143b0:	add	r5, sp, #4
   143b4:	ldr	r4, [sp, #64]	; 0x40
   143b8:	mov	ip, #0
   143bc:	sub	r4, r4, #4
   143c0:	ldr	lr, [r4, #4]!
   143c4:	cmp	lr, #0
   143c8:	str	lr, [r5, #4]!
   143cc:	beq	143dc <close@plt+0x3478>
   143d0:	add	ip, ip, #1
   143d4:	cmp	ip, #10
   143d8:	bne	143c0 <close@plt+0x345c>
   143dc:	add	lr, sp, #8
   143e0:	str	ip, [sp, #4]
   143e4:	str	lr, [sp]
   143e8:	bl	13fd0 <close@plt+0x306c>
   143ec:	add	sp, sp, #52	; 0x34
   143f0:	pop	{r4, r5, pc}
   143f4:	push	{r3}		; (str r3, [sp, #-4]!)
   143f8:	push	{r4, lr}
   143fc:	sub	sp, sp, #60	; 0x3c
   14400:	add	lr, sp, #56	; 0x38
   14404:	add	r3, sp, #72	; 0x48
   14408:	str	r3, [lr, #-44]!	; 0xffffffd4
   1440c:	add	r4, sp, #68	; 0x44
   14410:	mov	r3, #0
   14414:	ldr	ip, [r4, #4]!
   14418:	cmp	ip, #0
   1441c:	str	ip, [lr, #4]!
   14420:	beq	14430 <close@plt+0x34cc>
   14424:	add	r3, r3, #1
   14428:	cmp	r3, #10
   1442c:	bne	14414 <close@plt+0x34b0>
   14430:	add	ip, sp, #16
   14434:	str	r3, [sp, #4]
   14438:	str	ip, [sp]
   1443c:	ldr	r3, [sp, #68]	; 0x44
   14440:	bl	13fd0 <close@plt+0x306c>
   14444:	add	sp, sp, #60	; 0x3c
   14448:	pop	{r4, lr}
   1444c:	add	sp, sp, #4
   14450:	bx	lr
   14454:	ldr	r3, [pc, #116]	; 144d0 <close@plt+0x356c>
   14458:	push	{r4, lr}
   1445c:	mov	r0, #10
   14460:	ldr	r1, [r3]
   14464:	bl	10d9c <fputc_unlocked@plt>
   14468:	mov	r2, #5
   1446c:	ldr	r1, [pc, #96]	; 144d4 <close@plt+0x3570>
   14470:	mov	r0, #0
   14474:	bl	10da8 <dcgettext@plt>
   14478:	ldr	r2, [pc, #88]	; 144d8 <close@plt+0x3574>
   1447c:	mov	r1, r0
   14480:	mov	r0, #1
   14484:	bl	10eb0 <__printf_chk@plt>
   14488:	mov	r2, #5
   1448c:	ldr	r1, [pc, #72]	; 144dc <close@plt+0x3578>
   14490:	mov	r0, #0
   14494:	bl	10da8 <dcgettext@plt>
   14498:	ldr	r3, [pc, #64]	; 144e0 <close@plt+0x357c>
   1449c:	ldr	r2, [pc, #64]	; 144e4 <close@plt+0x3580>
   144a0:	mov	r1, r0
   144a4:	mov	r0, #1
   144a8:	bl	10eb0 <__printf_chk@plt>
   144ac:	mov	r2, #5
   144b0:	ldr	r1, [pc, #48]	; 144e8 <close@plt+0x3584>
   144b4:	mov	r0, #0
   144b8:	bl	10da8 <dcgettext@plt>
   144bc:	ldr	r2, [pc, #40]	; 144ec <close@plt+0x3588>
   144c0:	pop	{r4, lr}
   144c4:	mov	r1, r0
   144c8:	mov	r0, #1
   144cc:	b	10eb0 <__printf_chk@plt>
   144d0:	andeq	r7, r2, ip, asr r1
   144d4:	andeq	r5, r1, ip, asr pc
   144d8:	andeq	r5, r1, r0, ror pc
   144dc:	andeq	r5, r1, r8, lsl #31
   144e0:	andeq	r5, r1, r4, asr #18
   144e4:	andeq	r5, r1, ip, ror #18
   144e8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   144ec:	andeq	r5, r1, r4, asr #31
   144f0:	push	{r4, lr}
   144f4:	bl	14ac0 <close@plt+0x3b5c>
   144f8:	cmp	r0, #0
   144fc:	popne	{r4, pc}
   14500:	bl	14a38 <close@plt+0x3ad4>
   14504:	push	{r4, lr}
   14508:	bl	14ac0 <close@plt+0x3b5c>
   1450c:	cmp	r0, #0
   14510:	popne	{r4, pc}
   14514:	bl	14a38 <close@plt+0x3ad4>
   14518:	push	{r4, lr}
   1451c:	bl	14ac0 <close@plt+0x3b5c>
   14520:	cmp	r0, #0
   14524:	popne	{r4, pc}
   14528:	bl	14a38 <close@plt+0x3ad4>
   1452c:	push	{r4, r5, r6, lr}
   14530:	mov	r5, r0
   14534:	mov	r4, r1
   14538:	bl	14aec <close@plt+0x3b88>
   1453c:	cmp	r0, #0
   14540:	popne	{r4, r5, r6, pc}
   14544:	adds	r4, r4, #0
   14548:	movne	r4, #1
   1454c:	cmp	r5, #0
   14550:	orreq	r4, r4, #1
   14554:	cmp	r4, #0
   14558:	popeq	{r4, r5, r6, pc}
   1455c:	bl	14a38 <close@plt+0x3ad4>
   14560:	push	{r4, lr}
   14564:	cmp	r1, #0
   14568:	orreq	r1, r1, #1
   1456c:	bl	14aec <close@plt+0x3b88>
   14570:	cmp	r0, #0
   14574:	popne	{r4, pc}
   14578:	bl	14a38 <close@plt+0x3ad4>
   1457c:	push	{r4, r5, r6, lr}
   14580:	mov	r6, r0
   14584:	mov	r5, r1
   14588:	mov	r4, r2
   1458c:	bl	14e20 <close@plt+0x3ebc>
   14590:	cmp	r0, #0
   14594:	popne	{r4, r5, r6, pc}
   14598:	cmp	r6, #0
   1459c:	beq	145ac <close@plt+0x3648>
   145a0:	cmp	r5, #0
   145a4:	cmpne	r4, #0
   145a8:	popeq	{r4, r5, r6, pc}
   145ac:	bl	14a38 <close@plt+0x3ad4>
   145b0:	b	1457c <close@plt+0x3618>
   145b4:	cmp	r2, #0
   145b8:	cmpne	r1, #0
   145bc:	moveq	r2, #1
   145c0:	moveq	r1, r2
   145c4:	push	{r4, lr}
   145c8:	bl	14e20 <close@plt+0x3ebc>
   145cc:	cmp	r0, #0
   145d0:	popne	{r4, pc}
   145d4:	bl	14a38 <close@plt+0x3ad4>
   145d8:	mov	r2, r1
   145dc:	mov	r1, r0
   145e0:	mov	r0, #0
   145e4:	b	1457c <close@plt+0x3618>
   145e8:	mov	r2, r1
   145ec:	mov	r1, r0
   145f0:	mov	r0, #0
   145f4:	b	145b4 <close@plt+0x3650>
   145f8:	push	{r4, r5, r6, lr}
   145fc:	subs	r6, r0, #0
   14600:	sub	sp, sp, #8
   14604:	mov	r5, r1
   14608:	ldr	r4, [r1]
   1460c:	beq	14648 <close@plt+0x36e4>
   14610:	lsr	r1, r4, #1
   14614:	add	r3, r1, #1
   14618:	mvn	r3, r3
   1461c:	cmp	r4, r3
   14620:	bhi	14644 <close@plt+0x36e0>
   14624:	add	r4, r4, #1
   14628:	add	r4, r4, r1
   1462c:	mov	r0, r6
   14630:	mov	r1, r4
   14634:	bl	1457c <close@plt+0x3618>
   14638:	str	r4, [r5]
   1463c:	add	sp, sp, #8
   14640:	pop	{r4, r5, r6, pc}
   14644:	bl	14a38 <close@plt+0x3ad4>
   14648:	cmp	r4, #0
   1464c:	bne	1462c <close@plt+0x36c8>
   14650:	mov	r1, r2
   14654:	mov	r0, #64	; 0x40
   14658:	str	r2, [sp, #4]
   1465c:	bl	14f60 <close@plt+0x3ffc>
   14660:	ldr	r2, [sp, #4]
   14664:	cmp	r0, #0
   14668:	movne	r4, r0
   1466c:	addeq	r4, r0, #1
   14670:	b	1462c <close@plt+0x36c8>
   14674:	mov	r2, #1
   14678:	b	145f8 <close@plt+0x3694>
   1467c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14680:	sub	sp, sp, #12
   14684:	ldr	r6, [r1]
   14688:	mov	sl, r1
   1468c:	mov	r9, r0
   14690:	asrs	r4, r6, #1
   14694:	mov	r5, r2
   14698:	mov	fp, r3
   1469c:	ldr	r7, [sp, #48]	; 0x30
   146a0:	bmi	1480c <close@plt+0x38a8>
   146a4:	mvn	r3, #-2147483648	; 0x80000000
   146a8:	sub	r3, r3, r4
   146ac:	cmp	r6, r3
   146b0:	movle	r3, #0
   146b4:	movgt	r3, #1
   146b8:	mvn	r8, fp
   146bc:	cmp	r3, #0
   146c0:	addeq	r4, r4, r6
   146c4:	mvnne	r4, #-2147483648	; 0x80000000
   146c8:	lsr	r8, r8, #31
   146cc:	cmp	fp, r4
   146d0:	movge	r3, #0
   146d4:	andlt	r3, r8, #1
   146d8:	cmp	r3, #0
   146dc:	beq	147c4 <close@plt+0x3860>
   146e0:	cmp	r7, #0
   146e4:	blt	14894 <close@plt+0x3930>
   146e8:	bne	1488c <close@plt+0x3928>
   146ec:	mov	r2, #64	; 0x40
   146f0:	mov	r1, r7
   146f4:	mov	r0, r2
   146f8:	str	r2, [sp, #4]
   146fc:	bl	1516c <close@plt+0x4208>
   14700:	ldr	r2, [sp, #4]
   14704:	mov	r1, r7
   14708:	mov	r4, r0
   1470c:	mov	r0, r2
   14710:	bl	1538c <close@plt+0x4428>
   14714:	ldr	r2, [sp, #4]
   14718:	sub	r1, r2, r1
   1471c:	cmp	r9, #0
   14720:	sub	r3, r4, r6
   14724:	streq	r9, [sl]
   14728:	cmp	r3, r5
   1472c:	bge	147b0 <close@plt+0x384c>
   14730:	cmp	r5, #0
   14734:	blt	14820 <close@plt+0x38bc>
   14738:	cmp	r6, #0
   1473c:	blt	1475c <close@plt+0x37f8>
   14740:	mvn	r3, #-2147483648	; 0x80000000
   14744:	sub	r3, r3, r5
   14748:	cmp	r6, r3
   1474c:	movle	r3, #0
   14750:	movgt	r3, #1
   14754:	cmp	r3, #0
   14758:	bne	1491c <close@plt+0x39b8>
   1475c:	add	r5, r6, r5
   14760:	cmp	fp, r5
   14764:	movge	r8, #0
   14768:	andlt	r8, r8, #1
   1476c:	cmp	r8, #0
   14770:	mov	r4, r5
   14774:	bne	1491c <close@plt+0x39b8>
   14778:	cmp	r7, #0
   1477c:	blt	14834 <close@plt+0x38d0>
   14780:	beq	147ac <close@plt+0x3848>
   14784:	cmp	r5, #0
   14788:	blt	148dc <close@plt+0x3978>
   1478c:	mov	r1, r7
   14790:	mvn	r0, #-2147483648	; 0x80000000
   14794:	bl	1516c <close@plt+0x4208>
   14798:	cmp	r5, r0
   1479c:	movle	r0, #0
   147a0:	movgt	r0, #1
   147a4:	cmp	r0, #0
   147a8:	bne	1491c <close@plt+0x39b8>
   147ac:	mul	r1, r5, r7
   147b0:	mov	r0, r9
   147b4:	bl	1452c <close@plt+0x35c8>
   147b8:	str	r4, [sl]
   147bc:	add	sp, sp, #12
   147c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147c4:	cmp	r7, #0
   147c8:	blt	14860 <close@plt+0x38fc>
   147cc:	beq	146ec <close@plt+0x3788>
   147d0:	cmp	r4, #0
   147d4:	blt	1489c <close@plt+0x3938>
   147d8:	mov	r1, r7
   147dc:	mvn	r0, #-2147483648	; 0x80000000
   147e0:	bl	1516c <close@plt+0x4208>
   147e4:	cmp	r0, r4
   147e8:	movge	r0, #0
   147ec:	movlt	r0, #1
   147f0:	cmp	r0, #0
   147f4:	mvnne	r2, #-2147483648	; 0x80000000
   147f8:	bne	146f0 <close@plt+0x378c>
   147fc:	mul	r1, r7, r4
   14800:	cmp	r1, #63	; 0x3f
   14804:	bgt	1471c <close@plt+0x37b8>
   14808:	b	146ec <close@plt+0x3788>
   1480c:	rsb	r3, r4, #-2147483648	; 0x80000000
   14810:	cmp	r6, r3
   14814:	movge	r3, #0
   14818:	movlt	r3, #1
   1481c:	b	146b8 <close@plt+0x3754>
   14820:	rsb	r3, r5, #-2147483648	; 0x80000000
   14824:	cmp	r6, r3
   14828:	movge	r3, #0
   1482c:	movlt	r3, #1
   14830:	b	14754 <close@plt+0x37f0>
   14834:	cmp	r5, #0
   14838:	blt	148c0 <close@plt+0x395c>
   1483c:	cmn	r7, #1
   14840:	beq	147ac <close@plt+0x3848>
   14844:	mov	r1, r7
   14848:	mov	r0, #-2147483648	; 0x80000000
   1484c:	bl	1516c <close@plt+0x4208>
   14850:	cmp	r5, r0
   14854:	movle	r0, #0
   14858:	movgt	r0, #1
   1485c:	b	147a4 <close@plt+0x3840>
   14860:	cmp	r4, #0
   14864:	blt	14900 <close@plt+0x399c>
   14868:	cmn	r7, #1
   1486c:	beq	147fc <close@plt+0x3898>
   14870:	mov	r1, r7
   14874:	mov	r0, #-2147483648	; 0x80000000
   14878:	bl	1516c <close@plt+0x4208>
   1487c:	cmp	r0, r4
   14880:	movge	r0, #0
   14884:	movlt	r0, #1
   14888:	b	147f0 <close@plt+0x388c>
   1488c:	mov	r4, fp
   14890:	b	147d8 <close@plt+0x3874>
   14894:	mov	r4, fp
   14898:	b	14868 <close@plt+0x3904>
   1489c:	cmn	r4, #1
   148a0:	beq	147fc <close@plt+0x3898>
   148a4:	mov	r1, r4
   148a8:	mov	r0, #-2147483648	; 0x80000000
   148ac:	bl	1516c <close@plt+0x4208>
   148b0:	cmp	r7, r0
   148b4:	movle	r0, #0
   148b8:	movgt	r0, #1
   148bc:	b	147f0 <close@plt+0x388c>
   148c0:	mov	r1, r7
   148c4:	mvn	r0, #-2147483648	; 0x80000000
   148c8:	bl	1516c <close@plt+0x4208>
   148cc:	cmp	r5, r0
   148d0:	movge	r0, #0
   148d4:	movlt	r0, #1
   148d8:	b	147a4 <close@plt+0x3840>
   148dc:	cmn	r5, #1
   148e0:	beq	147ac <close@plt+0x3848>
   148e4:	mov	r1, r5
   148e8:	mov	r0, #-2147483648	; 0x80000000
   148ec:	bl	1516c <close@plt+0x4208>
   148f0:	cmp	r7, r0
   148f4:	movle	r0, #0
   148f8:	movgt	r0, #1
   148fc:	b	147a4 <close@plt+0x3840>
   14900:	mov	r1, r7
   14904:	mvn	r0, #-2147483648	; 0x80000000
   14908:	bl	1516c <close@plt+0x4208>
   1490c:	cmp	r0, r4
   14910:	movle	r0, #0
   14914:	movgt	r0, #1
   14918:	b	147f0 <close@plt+0x388c>
   1491c:	bl	14a38 <close@plt+0x3ad4>
   14920:	push	{r4, lr}
   14924:	mov	r1, #1
   14928:	bl	14a78 <close@plt+0x3b14>
   1492c:	cmp	r0, #0
   14930:	popne	{r4, pc}
   14934:	bl	14a38 <close@plt+0x3ad4>
   14938:	push	{r4, lr}
   1493c:	mov	r1, #1
   14940:	bl	14a78 <close@plt+0x3b14>
   14944:	cmp	r0, #0
   14948:	popne	{r4, pc}
   1494c:	bl	14a38 <close@plt+0x3ad4>
   14950:	push	{r4, lr}
   14954:	bl	14a78 <close@plt+0x3b14>
   14958:	cmp	r0, #0
   1495c:	popne	{r4, pc}
   14960:	bl	14a38 <close@plt+0x3ad4>
   14964:	push	{r4, lr}
   14968:	bl	14a78 <close@plt+0x3b14>
   1496c:	cmp	r0, #0
   14970:	popne	{r4, pc}
   14974:	bl	14a38 <close@plt+0x3ad4>
   14978:	push	{r4, r5, r6, lr}
   1497c:	mov	r6, r0
   14980:	mov	r0, r1
   14984:	mov	r4, r1
   14988:	bl	14ac0 <close@plt+0x3b5c>
   1498c:	subs	r5, r0, #0
   14990:	beq	149a8 <close@plt+0x3a44>
   14994:	mov	r2, r4
   14998:	mov	r1, r6
   1499c:	bl	10d60 <memcpy@plt>
   149a0:	mov	r0, r5
   149a4:	pop	{r4, r5, r6, pc}
   149a8:	bl	14a38 <close@plt+0x3ad4>
   149ac:	push	{r4, r5, r6, lr}
   149b0:	mov	r6, r0
   149b4:	mov	r0, r1
   149b8:	mov	r4, r1
   149bc:	bl	14ac0 <close@plt+0x3b5c>
   149c0:	subs	r5, r0, #0
   149c4:	beq	149dc <close@plt+0x3a78>
   149c8:	mov	r2, r4
   149cc:	mov	r1, r6
   149d0:	bl	10d60 <memcpy@plt>
   149d4:	mov	r0, r5
   149d8:	pop	{r4, r5, r6, pc}
   149dc:	bl	14a38 <close@plt+0x3ad4>
   149e0:	push	{r4, r5, r6, lr}
   149e4:	mov	r6, r0
   149e8:	add	r0, r1, #1
   149ec:	mov	r4, r1
   149f0:	bl	14ac0 <close@plt+0x3b5c>
   149f4:	subs	r5, r0, #0
   149f8:	beq	14a18 <close@plt+0x3ab4>
   149fc:	mov	r3, #0
   14a00:	mov	r1, r6
   14a04:	strb	r3, [r5, r4]
   14a08:	mov	r2, r4
   14a0c:	bl	10d60 <memcpy@plt>
   14a10:	mov	r0, r5
   14a14:	pop	{r4, r5, r6, pc}
   14a18:	bl	14a38 <close@plt+0x3ad4>
   14a1c:	push	{r4, lr}
   14a20:	mov	r4, r0
   14a24:	bl	10e74 <strlen@plt>
   14a28:	add	r1, r0, #1
   14a2c:	mov	r0, r4
   14a30:	pop	{r4, lr}
   14a34:	b	14978 <close@plt+0x3a14>
   14a38:	ldr	r3, [pc, #44]	; 14a6c <close@plt+0x3b08>
   14a3c:	push	{r4, lr}
   14a40:	mov	r2, #5
   14a44:	ldr	r1, [pc, #36]	; 14a70 <close@plt+0x3b0c>
   14a48:	mov	r0, #0
   14a4c:	ldr	r4, [r3]
   14a50:	bl	10da8 <dcgettext@plt>
   14a54:	ldr	r2, [pc, #24]	; 14a74 <close@plt+0x3b10>
   14a58:	mov	r1, #0
   14a5c:	mov	r3, r0
   14a60:	mov	r0, r4
   14a64:	bl	10e14 <error@plt>
   14a68:	bl	10f58 <abort@plt>
   14a6c:	strdeq	r7, [r2], -r8
   14a70:	andeq	r6, r1, r4, lsl r0
   14a74:	ldrdeq	r5, [r1], -r8
   14a78:	cmp	r1, #0
   14a7c:	cmpne	r0, #0
   14a80:	moveq	r1, #1
   14a84:	moveq	r0, r1
   14a88:	umull	r2, r3, r0, r1
   14a8c:	adds	r3, r3, #0
   14a90:	movne	r3, #1
   14a94:	cmp	r2, #0
   14a98:	blt	14aa8 <close@plt+0x3b44>
   14a9c:	cmp	r3, #0
   14aa0:	bne	14aa8 <close@plt+0x3b44>
   14aa4:	b	10cf4 <calloc@plt>
   14aa8:	push	{r4, lr}
   14aac:	bl	10e80 <__errno_location@plt>
   14ab0:	mov	r3, #12
   14ab4:	str	r3, [r0]
   14ab8:	mov	r0, #0
   14abc:	pop	{r4, pc}
   14ac0:	cmp	r0, #0
   14ac4:	moveq	r0, #1
   14ac8:	cmp	r0, #0
   14acc:	blt	14ad4 <close@plt+0x3b70>
   14ad0:	b	10e20 <malloc@plt>
   14ad4:	push	{r4, lr}
   14ad8:	bl	10e80 <__errno_location@plt>
   14adc:	mov	r3, #12
   14ae0:	str	r3, [r0]
   14ae4:	mov	r0, #0
   14ae8:	pop	{r4, pc}
   14aec:	cmp	r0, #0
   14af0:	beq	14b14 <close@plt+0x3bb0>
   14af4:	cmp	r1, #0
   14af8:	push	{lr}		; (str lr, [sp, #-4]!)
   14afc:	sub	sp, sp, #12
   14b00:	beq	14b1c <close@plt+0x3bb8>
   14b04:	blt	14b34 <close@plt+0x3bd0>
   14b08:	add	sp, sp, #12
   14b0c:	pop	{lr}		; (ldr lr, [sp], #4)
   14b10:	b	10db4 <realloc@plt>
   14b14:	mov	r0, r1
   14b18:	b	14ac0 <close@plt+0x3b5c>
   14b1c:	str	r1, [sp, #4]
   14b20:	bl	11ff4 <close@plt+0x1090>
   14b24:	ldr	r3, [sp, #4]
   14b28:	mov	r0, r3
   14b2c:	add	sp, sp, #12
   14b30:	pop	{pc}		; (ldr pc, [sp], #4)
   14b34:	bl	10e80 <__errno_location@plt>
   14b38:	mov	r2, #12
   14b3c:	mov	r3, #0
   14b40:	str	r2, [r0]
   14b44:	b	14b28 <close@plt+0x3bc4>
   14b48:	push	{r4, r5, r6, lr}
   14b4c:	mov	r4, r0
   14b50:	bl	10dfc <__fpending@plt>
   14b54:	ldr	r5, [r4]
   14b58:	and	r5, r5, #32
   14b5c:	mov	r6, r0
   14b60:	mov	r0, r4
   14b64:	bl	11e5c <close@plt+0xef8>
   14b68:	cmp	r5, #0
   14b6c:	mov	r4, r0
   14b70:	bne	14b90 <close@plt+0x3c2c>
   14b74:	cmp	r0, #0
   14b78:	beq	14b88 <close@plt+0x3c24>
   14b7c:	cmp	r6, #0
   14b80:	beq	14bac <close@plt+0x3c48>
   14b84:	mvn	r4, #0
   14b88:	mov	r0, r4
   14b8c:	pop	{r4, r5, r6, pc}
   14b90:	cmp	r0, #0
   14b94:	bne	14b84 <close@plt+0x3c20>
   14b98:	bl	10e80 <__errno_location@plt>
   14b9c:	str	r4, [r0]
   14ba0:	mvn	r4, #0
   14ba4:	mov	r0, r4
   14ba8:	pop	{r4, r5, r6, pc}
   14bac:	bl	10e80 <__errno_location@plt>
   14bb0:	ldr	r4, [r0]
   14bb4:	subs	r4, r4, #9
   14bb8:	mvnne	r4, #0
   14bbc:	mov	r0, r4
   14bc0:	pop	{r4, r5, r6, pc}
   14bc4:	push	{r1, r2, r3}
   14bc8:	push	{r4, r5, r6, r7, lr}
   14bcc:	sub	sp, sp, #8
   14bd0:	add	r3, sp, #32
   14bd4:	ldr	r1, [sp, #28]
   14bd8:	str	r3, [sp, #4]
   14bdc:	cmp	r1, #0
   14be0:	beq	14c78 <close@plt+0x3d14>
   14be4:	ldr	r2, [pc, #412]	; 14d88 <close@plt+0x3e24>
   14be8:	mov	r5, r0
   14bec:	cmp	r1, r2
   14bf0:	bne	14c3c <close@plt+0x3cd8>
   14bf4:	ldr	r6, [pc, #400]	; 14d8c <close@plt+0x3e28>
   14bf8:	ldr	r7, [r3]
   14bfc:	add	r2, sp, #36	; 0x24
   14c00:	ldr	r3, [r6]
   14c04:	str	r2, [sp, #4]
   14c08:	cmp	r3, #0
   14c0c:	mov	r2, r7
   14c10:	blt	14d3c <close@plt+0x3dd8>
   14c14:	bl	10eec <fcntl64@plt>
   14c18:	subs	r4, r0, #0
   14c1c:	blt	14cc0 <close@plt+0x3d5c>
   14c20:	mov	r3, #1
   14c24:	str	r3, [r6]
   14c28:	mov	r0, r4
   14c2c:	add	sp, sp, #8
   14c30:	pop	{r4, r5, r6, r7, lr}
   14c34:	add	sp, sp, #12
   14c38:	bx	lr
   14c3c:	cmp	r1, #11
   14c40:	beq	14c68 <close@plt+0x3d04>
   14c44:	bgt	14c88 <close@plt+0x3d24>
   14c48:	cmp	r1, #3
   14c4c:	beq	14c68 <close@plt+0x3d04>
   14c50:	ble	14d7c <close@plt+0x3e18>
   14c54:	cmp	r1, #8
   14c58:	beq	14ca8 <close@plt+0x3d44>
   14c5c:	ble	14ca8 <close@plt+0x3d44>
   14c60:	cmp	r1, #9
   14c64:	bne	14ca8 <close@plt+0x3d44>
   14c68:	mov	r0, r5
   14c6c:	bl	10eec <fcntl64@plt>
   14c70:	mov	r4, r0
   14c74:	b	14c28 <close@plt+0x3cc4>
   14c78:	ldr	r2, [sp, #32]
   14c7c:	bl	10eec <fcntl64@plt>
   14c80:	mov	r4, r0
   14c84:	b	14c28 <close@plt+0x3cc4>
   14c88:	ldr	r3, [pc, #256]	; 14d90 <close@plt+0x3e2c>
   14c8c:	cmp	r1, r3
   14c90:	bgt	14d5c <close@plt+0x3df8>
   14c94:	cmp	r1, r2
   14c98:	bge	14ca8 <close@plt+0x3d44>
   14c9c:	sub	r3, r3, #6
   14ca0:	cmp	r1, r3
   14ca4:	beq	14c68 <close@plt+0x3d04>
   14ca8:	ldr	r3, [sp, #4]
   14cac:	mov	r0, r5
   14cb0:	ldr	r2, [r3]
   14cb4:	bl	10eec <fcntl64@plt>
   14cb8:	mov	r4, r0
   14cbc:	b	14c28 <close@plt+0x3cc4>
   14cc0:	bl	10e80 <__errno_location@plt>
   14cc4:	ldr	r3, [r0]
   14cc8:	cmp	r3, #22
   14ccc:	bne	14c20 <close@plt+0x3cbc>
   14cd0:	mov	r2, r7
   14cd4:	mov	r0, r5
   14cd8:	mov	r1, #0
   14cdc:	bl	10eec <fcntl64@plt>
   14ce0:	subs	r4, r0, #0
   14ce4:	blt	14c28 <close@plt+0x3cc4>
   14ce8:	mvn	r3, #0
   14cec:	str	r3, [r6]
   14cf0:	mov	r1, #1
   14cf4:	mov	r0, r4
   14cf8:	bl	10eec <fcntl64@plt>
   14cfc:	subs	r2, r0, #0
   14d00:	blt	14d1c <close@plt+0x3db8>
   14d04:	orr	r2, r2, #1
   14d08:	mov	r1, #2
   14d0c:	mov	r0, r4
   14d10:	bl	10eec <fcntl64@plt>
   14d14:	cmn	r0, #1
   14d18:	bne	14c28 <close@plt+0x3cc4>
   14d1c:	bl	10e80 <__errno_location@plt>
   14d20:	mov	r5, r0
   14d24:	mov	r0, r4
   14d28:	ldr	r6, [r5]
   14d2c:	mvn	r4, #0
   14d30:	bl	10f64 <close@plt>
   14d34:	str	r6, [r5]
   14d38:	b	14c28 <close@plt+0x3cc4>
   14d3c:	mov	r1, #0
   14d40:	bl	10eec <fcntl64@plt>
   14d44:	subs	r4, r0, #0
   14d48:	blt	14c28 <close@plt+0x3cc4>
   14d4c:	ldr	r3, [r6]
   14d50:	cmn	r3, #1
   14d54:	beq	14cf0 <close@plt+0x3d8c>
   14d58:	b	14c28 <close@plt+0x3cc4>
   14d5c:	ldr	r3, [pc, #48]	; 14d94 <close@plt+0x3e30>
   14d60:	cmp	r1, r3
   14d64:	beq	14ca8 <close@plt+0x3d44>
   14d68:	blt	14c68 <close@plt+0x3d04>
   14d6c:	add	r3, r3, #1
   14d70:	cmp	r1, r3
   14d74:	bne	14ca8 <close@plt+0x3d44>
   14d78:	b	14c68 <close@plt+0x3d04>
   14d7c:	cmp	r1, #1
   14d80:	bne	14ca8 <close@plt+0x3d44>
   14d84:	b	14c68 <close@plt+0x3d04>
   14d88:	andeq	r0, r0, r6, lsl #8
   14d8c:			; <UNDEFINED> instruction: 0x000272b0
   14d90:	andeq	r0, r0, r7, lsl #8
   14d94:	andeq	r0, r0, r9, lsl #8
   14d98:	push	{r4, lr}
   14d9c:	mov	r0, #14
   14da0:	bl	10f1c <nl_langinfo@plt>
   14da4:	cmp	r0, #0
   14da8:	beq	14dc0 <close@plt+0x3e5c>
   14dac:	ldrb	r2, [r0]
   14db0:	ldr	r3, [pc, #16]	; 14dc8 <close@plt+0x3e64>
   14db4:	cmp	r2, #0
   14db8:	moveq	r0, r3
   14dbc:	pop	{r4, pc}
   14dc0:	ldr	r0, [pc]	; 14dc8 <close@plt+0x3e64>
   14dc4:	pop	{r4, pc}
   14dc8:	andeq	r6, r1, r8, lsr #32
   14dcc:	push	{r4, r5, r6, r7, lr}
   14dd0:	subs	r6, r0, #0
   14dd4:	sub	sp, sp, #12
   14dd8:	addeq	r6, sp, #4
   14ddc:	mov	r0, r6
   14de0:	mov	r5, r2
   14de4:	mov	r7, r1
   14de8:	bl	10e08 <mbrtowc@plt>
   14dec:	cmp	r5, #0
   14df0:	cmnne	r0, #3
   14df4:	mov	r4, r0
   14df8:	bls	14e14 <close@plt+0x3eb0>
   14dfc:	mov	r0, #0
   14e00:	bl	14e6c <close@plt+0x3f08>
   14e04:	cmp	r0, #0
   14e08:	moveq	r4, #1
   14e0c:	ldrbeq	r3, [r7]
   14e10:	streq	r3, [r6]
   14e14:	mov	r0, r4
   14e18:	add	sp, sp, #12
   14e1c:	pop	{r4, r5, r6, r7, pc}
   14e20:	push	{r4, r5, r6, lr}
   14e24:	subs	r4, r2, #0
   14e28:	mov	r6, r0
   14e2c:	mov	r5, r1
   14e30:	beq	14e5c <close@plt+0x3ef8>
   14e34:	mov	r1, r4
   14e38:	mvn	r0, #0
   14e3c:	bl	14f60 <close@plt+0x3ffc>
   14e40:	cmp	r0, r5
   14e44:	bcs	14e5c <close@plt+0x3ef8>
   14e48:	bl	10e80 <__errno_location@plt>
   14e4c:	mov	r3, #12
   14e50:	str	r3, [r0]
   14e54:	mov	r0, #0
   14e58:	pop	{r4, r5, r6, pc}
   14e5c:	mul	r1, r5, r4
   14e60:	mov	r0, r6
   14e64:	pop	{r4, r5, r6, lr}
   14e68:	b	14aec <close@plt+0x3b88>
   14e6c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e70:	sub	sp, sp, #268	; 0x10c
   14e74:	add	r1, sp, #4
   14e78:	ldr	r2, [pc, #60]	; 14ebc <close@plt+0x3f58>
   14e7c:	bl	14ec8 <close@plt+0x3f64>
   14e80:	cmp	r0, #0
   14e84:	movne	r0, #0
   14e88:	bne	14eb4 <close@plt+0x3f50>
   14e8c:	ldr	r1, [pc, #44]	; 14ec0 <close@plt+0x3f5c>
   14e90:	add	r0, sp, #4
   14e94:	bl	10d18 <strcmp@plt>
   14e98:	cmp	r0, #0
   14e9c:	beq	14eb4 <close@plt+0x3f50>
   14ea0:	add	r0, sp, #4
   14ea4:	ldr	r1, [pc, #24]	; 14ec4 <close@plt+0x3f60>
   14ea8:	bl	10d18 <strcmp@plt>
   14eac:	adds	r0, r0, #0
   14eb0:	movne	r0, #1
   14eb4:	add	sp, sp, #268	; 0x10c
   14eb8:	pop	{pc}		; (ldr pc, [sp], #4)
   14ebc:	andeq	r0, r0, r1, lsl #2
   14ec0:	andeq	r6, r1, r0, lsr r0
   14ec4:	andeq	r6, r1, r4, lsr r0
   14ec8:	push	{r4, r5, r6, lr}
   14ecc:	mov	r5, r1
   14ed0:	mov	r1, #0
   14ed4:	mov	r4, r2
   14ed8:	bl	10f04 <setlocale@plt>
   14edc:	subs	r6, r0, #0
   14ee0:	beq	14f3c <close@plt+0x3fd8>
   14ee4:	bl	10e74 <strlen@plt>
   14ee8:	cmp	r4, r0
   14eec:	bhi	14f24 <close@plt+0x3fc0>
   14ef0:	cmp	r4, #0
   14ef4:	bne	14f00 <close@plt+0x3f9c>
   14ef8:	mov	r0, #34	; 0x22
   14efc:	pop	{r4, r5, r6, pc}
   14f00:	sub	r4, r4, #1
   14f04:	mov	r1, r6
   14f08:	mov	r2, r4
   14f0c:	mov	r0, r5
   14f10:	bl	10d60 <memcpy@plt>
   14f14:	mov	r3, #0
   14f18:	strb	r3, [r5, r4]
   14f1c:	mov	r0, #34	; 0x22
   14f20:	pop	{r4, r5, r6, pc}
   14f24:	add	r2, r0, #1
   14f28:	mov	r1, r6
   14f2c:	mov	r0, r5
   14f30:	bl	10d60 <memcpy@plt>
   14f34:	mov	r0, #0
   14f38:	pop	{r4, r5, r6, pc}
   14f3c:	cmp	r4, #0
   14f40:	beq	14f50 <close@plt+0x3fec>
   14f44:	strb	r6, [r5]
   14f48:	mov	r0, #22
   14f4c:	pop	{r4, r5, r6, pc}
   14f50:	mov	r0, #22
   14f54:	pop	{r4, r5, r6, pc}
   14f58:	mov	r1, #0
   14f5c:	b	10f04 <setlocale@plt>
   14f60:	subs	r2, r1, #1
   14f64:	bxeq	lr
   14f68:	bcc	15140 <close@plt+0x41dc>
   14f6c:	cmp	r0, r1
   14f70:	bls	15124 <close@plt+0x41c0>
   14f74:	tst	r1, r2
   14f78:	beq	15130 <close@plt+0x41cc>
   14f7c:	clz	r3, r0
   14f80:	clz	r2, r1
   14f84:	sub	r3, r2, r3
   14f88:	rsbs	r3, r3, #31
   14f8c:	addne	r3, r3, r3, lsl #1
   14f90:	mov	r2, #0
   14f94:	addne	pc, pc, r3, lsl #2
   14f98:	nop			; (mov r0, r0)
   14f9c:	cmp	r0, r1, lsl #31
   14fa0:	adc	r2, r2, r2
   14fa4:	subcs	r0, r0, r1, lsl #31
   14fa8:	cmp	r0, r1, lsl #30
   14fac:	adc	r2, r2, r2
   14fb0:	subcs	r0, r0, r1, lsl #30
   14fb4:	cmp	r0, r1, lsl #29
   14fb8:	adc	r2, r2, r2
   14fbc:	subcs	r0, r0, r1, lsl #29
   14fc0:	cmp	r0, r1, lsl #28
   14fc4:	adc	r2, r2, r2
   14fc8:	subcs	r0, r0, r1, lsl #28
   14fcc:	cmp	r0, r1, lsl #27
   14fd0:	adc	r2, r2, r2
   14fd4:	subcs	r0, r0, r1, lsl #27
   14fd8:	cmp	r0, r1, lsl #26
   14fdc:	adc	r2, r2, r2
   14fe0:	subcs	r0, r0, r1, lsl #26
   14fe4:	cmp	r0, r1, lsl #25
   14fe8:	adc	r2, r2, r2
   14fec:	subcs	r0, r0, r1, lsl #25
   14ff0:	cmp	r0, r1, lsl #24
   14ff4:	adc	r2, r2, r2
   14ff8:	subcs	r0, r0, r1, lsl #24
   14ffc:	cmp	r0, r1, lsl #23
   15000:	adc	r2, r2, r2
   15004:	subcs	r0, r0, r1, lsl #23
   15008:	cmp	r0, r1, lsl #22
   1500c:	adc	r2, r2, r2
   15010:	subcs	r0, r0, r1, lsl #22
   15014:	cmp	r0, r1, lsl #21
   15018:	adc	r2, r2, r2
   1501c:	subcs	r0, r0, r1, lsl #21
   15020:	cmp	r0, r1, lsl #20
   15024:	adc	r2, r2, r2
   15028:	subcs	r0, r0, r1, lsl #20
   1502c:	cmp	r0, r1, lsl #19
   15030:	adc	r2, r2, r2
   15034:	subcs	r0, r0, r1, lsl #19
   15038:	cmp	r0, r1, lsl #18
   1503c:	adc	r2, r2, r2
   15040:	subcs	r0, r0, r1, lsl #18
   15044:	cmp	r0, r1, lsl #17
   15048:	adc	r2, r2, r2
   1504c:	subcs	r0, r0, r1, lsl #17
   15050:	cmp	r0, r1, lsl #16
   15054:	adc	r2, r2, r2
   15058:	subcs	r0, r0, r1, lsl #16
   1505c:	cmp	r0, r1, lsl #15
   15060:	adc	r2, r2, r2
   15064:	subcs	r0, r0, r1, lsl #15
   15068:	cmp	r0, r1, lsl #14
   1506c:	adc	r2, r2, r2
   15070:	subcs	r0, r0, r1, lsl #14
   15074:	cmp	r0, r1, lsl #13
   15078:	adc	r2, r2, r2
   1507c:	subcs	r0, r0, r1, lsl #13
   15080:	cmp	r0, r1, lsl #12
   15084:	adc	r2, r2, r2
   15088:	subcs	r0, r0, r1, lsl #12
   1508c:	cmp	r0, r1, lsl #11
   15090:	adc	r2, r2, r2
   15094:	subcs	r0, r0, r1, lsl #11
   15098:	cmp	r0, r1, lsl #10
   1509c:	adc	r2, r2, r2
   150a0:	subcs	r0, r0, r1, lsl #10
   150a4:	cmp	r0, r1, lsl #9
   150a8:	adc	r2, r2, r2
   150ac:	subcs	r0, r0, r1, lsl #9
   150b0:	cmp	r0, r1, lsl #8
   150b4:	adc	r2, r2, r2
   150b8:	subcs	r0, r0, r1, lsl #8
   150bc:	cmp	r0, r1, lsl #7
   150c0:	adc	r2, r2, r2
   150c4:	subcs	r0, r0, r1, lsl #7
   150c8:	cmp	r0, r1, lsl #6
   150cc:	adc	r2, r2, r2
   150d0:	subcs	r0, r0, r1, lsl #6
   150d4:	cmp	r0, r1, lsl #5
   150d8:	adc	r2, r2, r2
   150dc:	subcs	r0, r0, r1, lsl #5
   150e0:	cmp	r0, r1, lsl #4
   150e4:	adc	r2, r2, r2
   150e8:	subcs	r0, r0, r1, lsl #4
   150ec:	cmp	r0, r1, lsl #3
   150f0:	adc	r2, r2, r2
   150f4:	subcs	r0, r0, r1, lsl #3
   150f8:	cmp	r0, r1, lsl #2
   150fc:	adc	r2, r2, r2
   15100:	subcs	r0, r0, r1, lsl #2
   15104:	cmp	r0, r1, lsl #1
   15108:	adc	r2, r2, r2
   1510c:	subcs	r0, r0, r1, lsl #1
   15110:	cmp	r0, r1
   15114:	adc	r2, r2, r2
   15118:	subcs	r0, r0, r1
   1511c:	mov	r0, r2
   15120:	bx	lr
   15124:	moveq	r0, #1
   15128:	movne	r0, #0
   1512c:	bx	lr
   15130:	clz	r2, r1
   15134:	rsb	r2, r2, #31
   15138:	lsr	r0, r0, r2
   1513c:	bx	lr
   15140:	cmp	r0, #0
   15144:	mvnne	r0, #0
   15148:	b	153ac <close@plt+0x4448>
   1514c:	cmp	r1, #0
   15150:	beq	15140 <close@plt+0x41dc>
   15154:	push	{r0, r1, lr}
   15158:	bl	14f60 <close@plt+0x3ffc>
   1515c:	pop	{r1, r2, lr}
   15160:	mul	r3, r2, r0
   15164:	sub	r1, r1, r3
   15168:	bx	lr
   1516c:	cmp	r1, #0
   15170:	beq	1537c <close@plt+0x4418>
   15174:	eor	ip, r0, r1
   15178:	rsbmi	r1, r1, #0
   1517c:	subs	r2, r1, #1
   15180:	beq	15348 <close@plt+0x43e4>
   15184:	movs	r3, r0
   15188:	rsbmi	r3, r0, #0
   1518c:	cmp	r3, r1
   15190:	bls	15354 <close@plt+0x43f0>
   15194:	tst	r1, r2
   15198:	beq	15364 <close@plt+0x4400>
   1519c:	clz	r2, r3
   151a0:	clz	r0, r1
   151a4:	sub	r2, r0, r2
   151a8:	rsbs	r2, r2, #31
   151ac:	addne	r2, r2, r2, lsl #1
   151b0:	mov	r0, #0
   151b4:	addne	pc, pc, r2, lsl #2
   151b8:	nop			; (mov r0, r0)
   151bc:	cmp	r3, r1, lsl #31
   151c0:	adc	r0, r0, r0
   151c4:	subcs	r3, r3, r1, lsl #31
   151c8:	cmp	r3, r1, lsl #30
   151cc:	adc	r0, r0, r0
   151d0:	subcs	r3, r3, r1, lsl #30
   151d4:	cmp	r3, r1, lsl #29
   151d8:	adc	r0, r0, r0
   151dc:	subcs	r3, r3, r1, lsl #29
   151e0:	cmp	r3, r1, lsl #28
   151e4:	adc	r0, r0, r0
   151e8:	subcs	r3, r3, r1, lsl #28
   151ec:	cmp	r3, r1, lsl #27
   151f0:	adc	r0, r0, r0
   151f4:	subcs	r3, r3, r1, lsl #27
   151f8:	cmp	r3, r1, lsl #26
   151fc:	adc	r0, r0, r0
   15200:	subcs	r3, r3, r1, lsl #26
   15204:	cmp	r3, r1, lsl #25
   15208:	adc	r0, r0, r0
   1520c:	subcs	r3, r3, r1, lsl #25
   15210:	cmp	r3, r1, lsl #24
   15214:	adc	r0, r0, r0
   15218:	subcs	r3, r3, r1, lsl #24
   1521c:	cmp	r3, r1, lsl #23
   15220:	adc	r0, r0, r0
   15224:	subcs	r3, r3, r1, lsl #23
   15228:	cmp	r3, r1, lsl #22
   1522c:	adc	r0, r0, r0
   15230:	subcs	r3, r3, r1, lsl #22
   15234:	cmp	r3, r1, lsl #21
   15238:	adc	r0, r0, r0
   1523c:	subcs	r3, r3, r1, lsl #21
   15240:	cmp	r3, r1, lsl #20
   15244:	adc	r0, r0, r0
   15248:	subcs	r3, r3, r1, lsl #20
   1524c:	cmp	r3, r1, lsl #19
   15250:	adc	r0, r0, r0
   15254:	subcs	r3, r3, r1, lsl #19
   15258:	cmp	r3, r1, lsl #18
   1525c:	adc	r0, r0, r0
   15260:	subcs	r3, r3, r1, lsl #18
   15264:	cmp	r3, r1, lsl #17
   15268:	adc	r0, r0, r0
   1526c:	subcs	r3, r3, r1, lsl #17
   15270:	cmp	r3, r1, lsl #16
   15274:	adc	r0, r0, r0
   15278:	subcs	r3, r3, r1, lsl #16
   1527c:	cmp	r3, r1, lsl #15
   15280:	adc	r0, r0, r0
   15284:	subcs	r3, r3, r1, lsl #15
   15288:	cmp	r3, r1, lsl #14
   1528c:	adc	r0, r0, r0
   15290:	subcs	r3, r3, r1, lsl #14
   15294:	cmp	r3, r1, lsl #13
   15298:	adc	r0, r0, r0
   1529c:	subcs	r3, r3, r1, lsl #13
   152a0:	cmp	r3, r1, lsl #12
   152a4:	adc	r0, r0, r0
   152a8:	subcs	r3, r3, r1, lsl #12
   152ac:	cmp	r3, r1, lsl #11
   152b0:	adc	r0, r0, r0
   152b4:	subcs	r3, r3, r1, lsl #11
   152b8:	cmp	r3, r1, lsl #10
   152bc:	adc	r0, r0, r0
   152c0:	subcs	r3, r3, r1, lsl #10
   152c4:	cmp	r3, r1, lsl #9
   152c8:	adc	r0, r0, r0
   152cc:	subcs	r3, r3, r1, lsl #9
   152d0:	cmp	r3, r1, lsl #8
   152d4:	adc	r0, r0, r0
   152d8:	subcs	r3, r3, r1, lsl #8
   152dc:	cmp	r3, r1, lsl #7
   152e0:	adc	r0, r0, r0
   152e4:	subcs	r3, r3, r1, lsl #7
   152e8:	cmp	r3, r1, lsl #6
   152ec:	adc	r0, r0, r0
   152f0:	subcs	r3, r3, r1, lsl #6
   152f4:	cmp	r3, r1, lsl #5
   152f8:	adc	r0, r0, r0
   152fc:	subcs	r3, r3, r1, lsl #5
   15300:	cmp	r3, r1, lsl #4
   15304:	adc	r0, r0, r0
   15308:	subcs	r3, r3, r1, lsl #4
   1530c:	cmp	r3, r1, lsl #3
   15310:	adc	r0, r0, r0
   15314:	subcs	r3, r3, r1, lsl #3
   15318:	cmp	r3, r1, lsl #2
   1531c:	adc	r0, r0, r0
   15320:	subcs	r3, r3, r1, lsl #2
   15324:	cmp	r3, r1, lsl #1
   15328:	adc	r0, r0, r0
   1532c:	subcs	r3, r3, r1, lsl #1
   15330:	cmp	r3, r1
   15334:	adc	r0, r0, r0
   15338:	subcs	r3, r3, r1
   1533c:	cmp	ip, #0
   15340:	rsbmi	r0, r0, #0
   15344:	bx	lr
   15348:	teq	ip, r0
   1534c:	rsbmi	r0, r0, #0
   15350:	bx	lr
   15354:	movcc	r0, #0
   15358:	asreq	r0, ip, #31
   1535c:	orreq	r0, r0, #1
   15360:	bx	lr
   15364:	clz	r2, r1
   15368:	rsb	r2, r2, #31
   1536c:	cmp	ip, #0
   15370:	lsr	r0, r3, r2
   15374:	rsbmi	r0, r0, #0
   15378:	bx	lr
   1537c:	cmp	r0, #0
   15380:	mvngt	r0, #-2147483648	; 0x80000000
   15384:	movlt	r0, #-2147483648	; 0x80000000
   15388:	b	153ac <close@plt+0x4448>
   1538c:	cmp	r1, #0
   15390:	beq	1537c <close@plt+0x4418>
   15394:	push	{r0, r1, lr}
   15398:	bl	15174 <close@plt+0x4210>
   1539c:	pop	{r1, r2, lr}
   153a0:	mul	r3, r2, r0
   153a4:	sub	r1, r1, r3
   153a8:	bx	lr
   153ac:	push	{r1, lr}
   153b0:	mov	r0, #8
   153b4:	bl	10d0c <raise@plt>
   153b8:	pop	{r1, pc}
   153bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   153c0:	mov	r7, r0
   153c4:	ldr	r6, [pc, #72]	; 15414 <close@plt+0x44b0>
   153c8:	ldr	r5, [pc, #72]	; 15418 <close@plt+0x44b4>
   153cc:	add	r6, pc, r6
   153d0:	add	r5, pc, r5
   153d4:	sub	r6, r6, r5
   153d8:	mov	r8, r1
   153dc:	mov	r9, r2
   153e0:	bl	10cc8 <fdopen@plt-0x20>
   153e4:	asrs	r6, r6, #2
   153e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   153ec:	mov	r4, #0
   153f0:	add	r4, r4, #1
   153f4:	ldr	r3, [r5], #4
   153f8:	mov	r2, r9
   153fc:	mov	r1, r8
   15400:	mov	r0, r7
   15404:	blx	r3
   15408:	cmp	r6, r4
   1540c:	bne	153f0 <close@plt+0x448c>
   15410:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15414:	andeq	r1, r1, ip, lsr fp
   15418:	andeq	r1, r1, r4, lsr fp
   1541c:	bx	lr
   15420:	ldr	r3, [pc, #12]	; 15434 <close@plt+0x44d0>
   15424:	mov	r1, #0
   15428:	add	r3, pc, r3
   1542c:	ldr	r2, [r3]
   15430:	b	10e8c <__cxa_atexit@plt>
   15434:			; <UNDEFINED> instruction: 0x00011cbc

Disassembly of section .fini:

00015438 <.fini>:
   15438:	push	{r3, lr}
   1543c:	pop	{r3, pc}
