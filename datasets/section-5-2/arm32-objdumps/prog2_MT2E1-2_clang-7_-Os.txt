
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

000110a0 <.init>:
   110a0:	push	{r3, lr}
   110a4:	bl	111ec <_start@@Base+0x3c>
   110a8:	pop	{r3, pc}

Disassembly of section .plt:

000110ac <calloc@plt-0x14>:
   110ac:	push	{lr}		; (str lr, [sp, #-4]!)
   110b0:	ldr	lr, [pc, #4]	; 110bc <calloc@plt-0x4>
   110b4:	add	lr, pc, lr
   110b8:	ldr	pc, [lr, #8]!
   110bc:	andeq	r1, r1, r4, asr #30

000110c0 <calloc@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #69632	; 0x11000
   110c8:	ldr	pc, [ip, #3908]!	; 0xf44

000110cc <strcmp@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #69632	; 0x11000
   110d4:	ldr	pc, [ip, #3900]!	; 0xf3c

000110d8 <printf@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #69632	; 0x11000
   110e0:	ldr	pc, [ip, #3892]!	; 0xf34

000110e4 <__isoc99_fscanf@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #69632	; 0x11000
   110ec:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f0 <fopen@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #69632	; 0x11000
   110f8:	ldr	pc, [ip, #3876]!	; 0xf24

000110fc <free@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #69632	; 0x11000
   11104:	ldr	pc, [ip, #3868]!	; 0xf1c

00011108 <realloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #69632	; 0x11000
   11110:	ldr	pc, [ip, #3860]!	; 0xf14

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #69632	; 0x11000
   1111c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011120 <puts@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #69632	; 0x11000
   11128:	ldr	pc, [ip, #3844]!	; 0xf04

0001112c <malloc@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #69632	; 0x11000
   11134:	ldr	pc, [ip, #3836]!	; 0xefc

00011138 <__libc_start_main@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #69632	; 0x11000
   11140:	ldr	pc, [ip, #3828]!	; 0xef4

00011144 <__gmon_start__@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #69632	; 0x11000
   1114c:	ldr	pc, [ip, #3820]!	; 0xeec

00011150 <strlen@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #69632	; 0x11000
   11158:	ldr	pc, [ip, #3812]!	; 0xee4

0001115c <setvbuf@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #69632	; 0x11000
   11164:	ldr	pc, [ip, #3804]!	; 0xedc

00011168 <memset@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #69632	; 0x11000
   11170:	ldr	pc, [ip, #3796]!	; 0xed4

00011174 <putchar@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #69632	; 0x11000
   1117c:	ldr	pc, [ip, #3788]!	; 0xecc

00011180 <fclose@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #69632	; 0x11000
   11188:	ldr	pc, [ip, #3780]!	; 0xec4

0001118c <atoi@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #69632	; 0x11000
   11194:	ldr	pc, [ip, #3772]!	; 0xebc

00011198 <getline@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #69632	; 0x11000
   111a0:	ldr	pc, [ip, #3764]!	; 0xeb4

000111a4 <abort@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #69632	; 0x11000
   111ac:	ldr	pc, [ip, #3756]!	; 0xeac

Disassembly of section .text:

000111b0 <_start@@Base>:
   111b0:	mov	fp, #0
   111b4:	mov	lr, #0
   111b8:	pop	{r1}		; (ldr r1, [sp], #4)
   111bc:	mov	r2, sp
   111c0:	push	{r2}		; (str r2, [sp, #-4]!)
   111c4:	push	{r0}		; (str r0, [sp, #-4]!)
   111c8:	ldr	ip, [pc, #16]	; 111e0 <_start@@Base+0x30>
   111cc:	push	{ip}		; (str ip, [sp, #-4]!)
   111d0:	ldr	r0, [pc, #12]	; 111e4 <_start@@Base+0x34>
   111d4:	ldr	r3, [pc, #12]	; 111e8 <_start@@Base+0x38>
   111d8:	bl	11138 <__libc_start_main@plt>
   111dc:	bl	111a4 <abort@plt>
   111e0:	andeq	r2, r1, ip, ror #20
   111e4:	muleq	r1, r4, r5
   111e8:	andeq	r2, r1, ip, lsl #20
   111ec:	ldr	r3, [pc, #20]	; 11208 <_start@@Base+0x58>
   111f0:	ldr	r2, [pc, #20]	; 1120c <_start@@Base+0x5c>
   111f4:	add	r3, pc, r3
   111f8:	ldr	r2, [r3, r2]
   111fc:	cmp	r2, #0
   11200:	bxeq	lr
   11204:	b	11144 <__gmon_start__@plt>
   11208:	andeq	r1, r1, r4, lsl #28
   1120c:	andeq	r0, r0, ip, asr r0
   11210:	ldr	r0, [pc, #24]	; 11230 <_start@@Base+0x80>
   11214:	ldr	r3, [pc, #24]	; 11234 <_start@@Base+0x84>
   11218:	cmp	r3, r0
   1121c:	bxeq	lr
   11220:	ldr	r3, [pc, #16]	; 11238 <_start@@Base+0x88>
   11224:	cmp	r3, #0
   11228:	bxeq	lr
   1122c:	bx	r3
   11230:	andeq	r3, r2, r8, rrx
   11234:	andeq	r3, r2, r8, rrx
   11238:	andeq	r0, r0, r0
   1123c:	ldr	r0, [pc, #36]	; 11268 <_start@@Base+0xb8>
   11240:	ldr	r1, [pc, #36]	; 1126c <_start@@Base+0xbc>
   11244:	sub	r1, r1, r0
   11248:	asr	r1, r1, #2
   1124c:	add	r1, r1, r1, lsr #31
   11250:	asrs	r1, r1, #1
   11254:	bxeq	lr
   11258:	ldr	r3, [pc, #16]	; 11270 <_start@@Base+0xc0>
   1125c:	cmp	r3, #0
   11260:	bxeq	lr
   11264:	bx	r3
   11268:	andeq	r3, r2, r8, rrx
   1126c:	andeq	r3, r2, r8, rrx
   11270:	andeq	r0, r0, r0
   11274:	push	{r4, lr}
   11278:	ldr	r4, [pc, #24]	; 11298 <_start@@Base+0xe8>
   1127c:	ldrb	r3, [r4]
   11280:	cmp	r3, #0
   11284:	popne	{r4, pc}
   11288:	bl	11210 <_start@@Base+0x60>
   1128c:	mov	r3, #1
   11290:	strb	r3, [r4]
   11294:	pop	{r4, pc}
   11298:	andeq	r3, r2, ip, rrx
   1129c:	b	1123c <_start@@Base+0x8c>

000112a0 <proximas_n_chegadas@@Base>:
   112a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a4:	add	fp, sp, #28
   112a8:	sub	sp, sp, #4
   112ac:	mov	r5, r0
   112b0:	ldr	r0, [r2, #8]
   112b4:	ldr	r6, [r2]
   112b8:	mov	r8, r3
   112bc:	mov	sl, r2
   112c0:	mov	r4, r1
   112c4:	lsl	r0, r0, #2
   112c8:	bl	1112c <malloc@plt>
   112cc:	mov	r9, r0
   112d0:	cmp	r6, #0
   112d4:	beq	112fc <proximas_n_chegadas@@Base+0x5c>
   112d8:	mov	r7, r9
   112dc:	mov	r0, #200	; 0xc8
   112e0:	bl	1112c <malloc@plt>
   112e4:	str	r0, [r7], #4
   112e8:	ldr	r1, [r6]
   112ec:	bl	11114 <strcpy@plt>
   112f0:	ldr	r6, [r6, #4]
   112f4:	cmp	r6, #0
   112f8:	bne	112dc <proximas_n_chegadas@@Base+0x3c>
   112fc:	ldr	r0, [r5, #8]
   11300:	bl	11f84 <heap_nova@@Base>
   11304:	ldr	r6, [r5]
   11308:	mov	r7, r0
   1130c:	b	1133c <proximas_n_chegadas@@Base+0x9c>
   11310:	ldr	r4, [r4]
   11314:	ldr	r0, [r4], #4
   11318:	bl	1118c <atoi@plt>
   1131c:	ldr	r5, [r9, r0, lsl #2]
   11320:	ldr	r0, [r6]
   11324:	bl	1118c <atoi@plt>
   11328:	mov	r2, r0
   1132c:	mov	r0, r7
   11330:	mov	r1, r5
   11334:	bl	120b4 <heap_insere@@Base>
   11338:	ldr	r6, [r6, #4]
   1133c:	cmp	r6, #0
   11340:	bne	11310 <proximas_n_chegadas@@Base+0x70>
   11344:	ldr	r0, [sl, #8]
   11348:	cmp	r0, #1
   1134c:	blt	1136c <proximas_n_chegadas@@Base+0xcc>
   11350:	mov	r4, #0
   11354:	ldr	r0, [r9, r4, lsl #2]
   11358:	bl	110fc <free@plt>
   1135c:	ldr	r0, [sl, #8]
   11360:	add	r4, r4, #1
   11364:	cmp	r4, r0
   11368:	blt	11354 <proximas_n_chegadas@@Base+0xb4>
   1136c:	mov	r0, r9
   11370:	bl	110fc <free@plt>
   11374:	cmp	r8, #1
   11378:	blt	113b8 <proximas_n_chegadas@@Base+0x118>
   1137c:	movw	r5, #10884	; 0x2a84
   11380:	mov	r4, #0
   11384:	movt	r5, #1
   11388:	mov	r0, r7
   1138c:	bl	12188 <heap_remove@@Base>
   11390:	mov	r6, r0
   11394:	add	r4, r4, #1
   11398:	mov	r0, r5
   1139c:	mov	r1, r4
   113a0:	mov	r2, r6
   113a4:	bl	110d8 <printf@plt>
   113a8:	mov	r0, r6
   113ac:	bl	110fc <free@plt>
   113b0:	cmp	r8, r4
   113b4:	bne	11388 <proximas_n_chegadas@@Base+0xe8>
   113b8:	mov	r0, r7
   113bc:	bl	11fd8 <heap_apaga@@Base>
   113c0:	mov	r0, #1
   113c4:	sub	sp, fp, #28
   113c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000113cc <pesquisa_destinos@@Base>:
   113cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113d0:	add	fp, sp, #28
   113d4:	sub	sp, sp, #4
   113d8:	mov	r7, r2
   113dc:	mov	sl, r1
   113e0:	mov	r8, r0
   113e4:	bl	123d0 <lista_nova@@Base>
   113e8:	ldr	r4, [sl]
   113ec:	mov	r9, r0
   113f0:	mov	r6, #0
   113f4:	b	11414 <pesquisa_destinos@@Base+0x48>
   113f8:	ldr	r0, [r4]
   113fc:	mov	r1, r7
   11400:	bl	110cc <strcmp@plt>
   11404:	cmp	r0, #0
   11408:	beq	1141c <pesquisa_destinos@@Base+0x50>
   1140c:	ldr	r4, [r4, #4]
   11410:	add	r6, r6, #1
   11414:	cmp	r4, #0
   11418:	bne	113f8 <pesquisa_destinos@@Base+0x2c>
   1141c:	mov	r0, r8
   11420:	mov	r1, r6
   11424:	bl	11b28 <v_sucessores@@Base>
   11428:	mov	r6, r0
   1142c:	ldr	r0, [r0]
   11430:	cmp	r0, #1
   11434:	blt	11494 <pesquisa_destinos@@Base+0xc8>
   11438:	mov	r7, #0
   1143c:	ldr	r4, [sl]
   11440:	mov	r0, r6
   11444:	mov	r1, r7
   11448:	bl	127e4 <vetor_elemento@@Base>
   1144c:	cmp	r0, #1
   11450:	blt	11474 <pesquisa_destinos@@Base+0xa8>
   11454:	mov	r5, #0
   11458:	ldr	r4, [r4, #4]
   1145c:	mov	r0, r6
   11460:	mov	r1, r7
   11464:	bl	127e4 <vetor_elemento@@Base>
   11468:	add	r5, r5, #1
   1146c:	cmp	r5, r0
   11470:	blt	11458 <pesquisa_destinos@@Base+0x8c>
   11474:	ldr	r1, [r4]
   11478:	mov	r0, r9
   1147c:	mov	r2, #0
   11480:	bl	12478 <lista_insere@@Base>
   11484:	ldr	r0, [r6]
   11488:	add	r7, r7, #1
   1148c:	cmp	r7, r0
   11490:	blt	1143c <pesquisa_destinos@@Base+0x70>
   11494:	mov	r0, r6
   11498:	bl	12780 <vetor_apaga@@Base>
   1149c:	mov	r0, r9
   114a0:	sub	sp, fp, #28
   114a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000114a8 <carrega_rotas@@Base>:
   114a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   114ac:	add	fp, sp, #24
   114b0:	sub	sp, sp, #8
   114b4:	cmp	r1, #0
   114b8:	beq	11584 <carrega_rotas@@Base+0xdc>
   114bc:	mov	r4, r1
   114c0:	movw	r1, #10894	; 0x2a8e
   114c4:	mov	r6, r0
   114c8:	movt	r1, #1
   114cc:	mov	r0, r4
   114d0:	bl	110f0 <fopen@plt>
   114d4:	cmp	r0, #0
   114d8:	beq	11564 <carrega_rotas@@Base+0xbc>
   114dc:	mov	r5, r0
   114e0:	mov	r0, r6
   114e4:	bl	12448 <lista_tamanho@@Base>
   114e8:	mov	r1, #0
   114ec:	bl	11808 <grafo_novo@@Base>
   114f0:	cmp	r0, #0
   114f4:	beq	11578 <carrega_rotas@@Base+0xd0>
   114f8:	movw	r1, #10929	; 0x2ab1
   114fc:	mov	r4, r0
   11500:	add	r2, sp, #4
   11504:	mov	r3, sp
   11508:	mov	r0, r5
   1150c:	movt	r1, #1
   11510:	bl	110e4 <__isoc99_fscanf@plt>
   11514:	cmp	r0, #2
   11518:	bne	11558 <carrega_rotas@@Base+0xb0>
   1151c:	movw	r8, #10929	; 0x2ab1
   11520:	add	r7, sp, #4
   11524:	mov	r6, sp
   11528:	movt	r8, #1
   1152c:	ldr	r2, [sp]
   11530:	ldr	r1, [sp, #4]
   11534:	mov	r0, r4
   11538:	bl	118e4 <grafo_adiciona@@Base>
   1153c:	mov	r0, r5
   11540:	mov	r1, r8
   11544:	mov	r2, r7
   11548:	mov	r3, r6
   1154c:	bl	110e4 <__isoc99_fscanf@plt>
   11550:	cmp	r0, #2
   11554:	beq	1152c <carrega_rotas@@Base+0x84>
   11558:	mov	r0, r5
   1155c:	bl	11180 <fclose@plt>
   11560:	b	11588 <carrega_rotas@@Base+0xe0>
   11564:	movw	r0, #10896	; 0x2a90
   11568:	mov	r1, r4
   1156c:	movt	r0, #1
   11570:	bl	110d8 <printf@plt>
   11574:	b	11584 <carrega_rotas@@Base+0xdc>
   11578:	movw	r0, #11072	; 0x2b40
   1157c:	movt	r0, #1
   11580:	bl	11120 <puts@plt>
   11584:	mov	r4, #0
   11588:	mov	r0, r4
   1158c:	sub	sp, fp, #24
   11590:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011594 <main@@Base>:
   11594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11598:	add	fp, sp, #28
   1159c:	sub	sp, sp, #28
   115a0:	movw	r0, #12392	; 0x3068
   115a4:	mov	r1, #0
   115a8:	mov	r2, #2
   115ac:	mov	r3, #0
   115b0:	mov	r8, #0
   115b4:	movt	r0, #2
   115b8:	ldr	r0, [r0]
   115bc:	bl	1115c <setvbuf@plt>
   115c0:	movw	r0, #10935	; 0x2ab7
   115c4:	movw	r1, #10894	; 0x2a8e
   115c8:	movt	r0, #1
   115cc:	movt	r1, #1
   115d0:	bl	110f0 <fopen@plt>
   115d4:	mov	r5, r0
   115d8:	bl	123d0 <lista_nova@@Base>
   115dc:	mov	r9, r0
   115e0:	add	r0, sp, #24
   115e4:	add	r1, sp, #20
   115e8:	mov	r2, r5
   115ec:	str	r8, [sp, #24]
   115f0:	str	r8, [sp, #20]
   115f4:	bl	11198 <getline@plt>
   115f8:	ldr	r4, [sp, #24]
   115fc:	cmn	r0, #1
   11600:	beq	11648 <main@@Base+0xb4>
   11604:	add	r6, sp, #24
   11608:	add	r7, sp, #20
   1160c:	mov	r0, r4
   11610:	bl	11150 <strlen@plt>
   11614:	add	r0, r4, r0
   11618:	mov	r2, #0
   1161c:	strb	r8, [r0, #-1]
   11620:	mov	r0, r9
   11624:	ldr	r1, [sp, #24]
   11628:	bl	12478 <lista_insere@@Base>
   1162c:	mov	r0, r6
   11630:	mov	r1, r7
   11634:	mov	r2, r5
   11638:	bl	11198 <getline@plt>
   1163c:	ldr	r4, [sp, #24]
   11640:	cmn	r0, #1
   11644:	bne	1160c <main@@Base+0x78>
   11648:	mov	r0, r4
   1164c:	bl	110fc <free@plt>
   11650:	mov	r0, r5
   11654:	bl	11180 <fclose@plt>
   11658:	movw	r1, #10950	; 0x2ac6
   1165c:	mov	r0, r9
   11660:	movt	r1, #1
   11664:	bl	114a8 <carrega_rotas@@Base>
   11668:	str	r0, [sp]
   1166c:	movw	r0, #11104	; 0x2b60
   11670:	movt	r0, #1
   11674:	bl	11120 <puts@plt>
   11678:	movw	r0, #10960	; 0x2ad0
   1167c:	movw	r1, #10894	; 0x2a8e
   11680:	movt	r0, #1
   11684:	movt	r1, #1
   11688:	bl	110f0 <fopen@plt>
   1168c:	mov	sl, r0
   11690:	bl	123d0 <lista_nova@@Base>
   11694:	mov	r7, r0
   11698:	bl	123d0 <lista_nova@@Base>
   1169c:	movw	r1, #10973	; 0x2add
   116a0:	mov	r5, r0
   116a4:	add	r2, sp, #15
   116a8:	add	r3, sp, #5
   116ac:	mov	r0, sl
   116b0:	movt	r1, #1
   116b4:	bl	110e4 <__isoc99_fscanf@plt>
   116b8:	cmp	r0, #2
   116bc:	bne	1170c <main@@Base+0x178>
   116c0:	movw	r8, #10973	; 0x2add
   116c4:	add	r4, sp, #15
   116c8:	add	r6, sp, #5
   116cc:	movt	r8, #1
   116d0:	mov	r0, r7
   116d4:	mov	r1, r4
   116d8:	mov	r2, #0
   116dc:	bl	12478 <lista_insere@@Base>
   116e0:	mov	r0, r5
   116e4:	mov	r1, r6
   116e8:	mov	r2, #0
   116ec:	bl	12478 <lista_insere@@Base>
   116f0:	mov	r0, sl
   116f4:	mov	r1, r8
   116f8:	mov	r2, r4
   116fc:	mov	r3, r6
   11700:	bl	110e4 <__isoc99_fscanf@plt>
   11704:	cmp	r0, #2
   11708:	beq	116d0 <main@@Base+0x13c>
   1170c:	mov	r0, r7
   11710:	mov	r1, r5
   11714:	mov	r2, r9
   11718:	mov	r3, #5
   1171c:	bl	112a0 <proximas_n_chegadas@@Base>
   11720:	mov	r0, r7
   11724:	bl	12400 <lista_apaga@@Base>
   11728:	mov	r0, r5
   1172c:	bl	12400 <lista_apaga@@Base>
   11730:	mov	r0, sl
   11734:	bl	11180 <fclose@plt>
   11738:	movw	r0, #11136	; 0x2b80
   1173c:	movt	r0, #1
   11740:	bl	11120 <puts@plt>
   11744:	ldr	r6, [sp]
   11748:	movw	r2, #10979	; 0x2ae3
   1174c:	mov	r1, r9
   11750:	movt	r2, #1
   11754:	mov	r0, r6
   11758:	bl	113cc <pesquisa_destinos@@Base>
   1175c:	cmp	r0, #0
   11760:	beq	117ac <main@@Base+0x218>
   11764:	mov	r5, r0
   11768:	bl	12448 <lista_tamanho@@Base>
   1176c:	movw	r1, #10979	; 0x2ae3
   11770:	mov	r2, r0
   11774:	movw	r0, #11027	; 0x2b13
   11778:	movt	r0, #1
   1177c:	movt	r1, #1
   11780:	bl	110d8 <printf@plt>
   11784:	ldr	r4, [r5]
   11788:	b	11798 <main@@Base+0x204>
   1178c:	ldr	r0, [r4]
   11790:	bl	11120 <puts@plt>
   11794:	ldr	r4, [r4, #4]
   11798:	cmp	r4, #0
   1179c:	bne	1178c <main@@Base+0x1f8>
   117a0:	mov	r0, r5
   117a4:	bl	12400 <lista_apaga@@Base>
   117a8:	b	117c0 <main@@Base+0x22c>
   117ac:	movw	r0, #10990	; 0x2aee
   117b0:	movw	r1, #10979	; 0x2ae3
   117b4:	movt	r0, #1
   117b8:	movt	r1, #1
   117bc:	bl	110d8 <printf@plt>
   117c0:	mov	r0, r6
   117c4:	bl	11860 <grafo_apaga@@Base>
   117c8:	mov	r0, r9
   117cc:	bl	12400 <lista_apaga@@Base>
   117d0:	mov	r0, #0
   117d4:	sub	sp, fp, #28
   117d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000117dc <cria_no@@Base>:
   117dc:	push	{r4, sl, fp, lr}
   117e0:	add	fp, sp, #8
   117e4:	mov	r4, r0
   117e8:	mov	r0, #8
   117ec:	bl	1112c <malloc@plt>
   117f0:	cmp	r0, #0
   117f4:	moveq	r0, #0
   117f8:	movne	r1, #0
   117fc:	strne	r4, [r0]
   11800:	strne	r1, [r0, #4]
   11804:	pop	{r4, sl, fp, pc}

00011808 <grafo_novo@@Base>:
   11808:	push	{r4, r5, r6, sl, fp, lr}
   1180c:	add	fp, sp, #16
   11810:	mov	r5, r0
   11814:	mov	r0, #12
   11818:	mov	r6, r1
   1181c:	bl	1112c <malloc@plt>
   11820:	cmp	r0, #0
   11824:	beq	11854 <grafo_novo@@Base+0x4c>
   11828:	str	r6, [r0]
   1182c:	mov	r4, r0
   11830:	str	r5, [r0, #4]
   11834:	mov	r0, r5
   11838:	mov	r1, #8
   1183c:	bl	110c0 <calloc@plt>
   11840:	cmp	r0, #0
   11844:	str	r0, [r4, #8]
   11848:	bne	11858 <grafo_novo@@Base+0x50>
   1184c:	mov	r0, r4
   11850:	bl	110fc <free@plt>
   11854:	mov	r4, #0
   11858:	mov	r0, r4
   1185c:	pop	{r4, r5, r6, sl, fp, pc}

00011860 <grafo_apaga@@Base>:
   11860:	cmp	r0, #0
   11864:	bxeq	lr
   11868:	push	{r4, r5, fp, lr}
   1186c:	add	fp, sp, #8
   11870:	mov	r4, r0
   11874:	ldr	r0, [r0, #8]
   11878:	cmp	r0, #0
   1187c:	beq	118d8 <grafo_apaga@@Base+0x78>
   11880:	ldr	r2, [r4, #4]
   11884:	cmp	r2, #1
   11888:	blt	118d4 <grafo_apaga@@Base+0x74>
   1188c:	mov	r5, #0
   11890:	add	r3, r0, r5, lsl #3
   11894:	ldr	r1, [r3, #4]!
   11898:	cmp	r1, #0
   1189c:	beq	118c8 <grafo_apaga@@Base+0x68>
   118a0:	ldr	r0, [r1, #4]
   118a4:	str	r0, [r3]
   118a8:	mov	r0, r1
   118ac:	bl	110fc <free@plt>
   118b0:	ldr	r0, [r4, #8]
   118b4:	add	r3, r0, r5, lsl #3
   118b8:	ldr	r1, [r3, #4]!
   118bc:	cmp	r1, #0
   118c0:	bne	118a0 <grafo_apaga@@Base+0x40>
   118c4:	ldr	r2, [r4, #4]
   118c8:	add	r5, r5, #1
   118cc:	cmp	r5, r2
   118d0:	blt	11890 <grafo_apaga@@Base+0x30>
   118d4:	bl	110fc <free@plt>
   118d8:	mov	r0, r4
   118dc:	pop	{r4, r5, fp, lr}
   118e0:	b	110fc <free@plt>

000118e4 <grafo_adiciona@@Base>:
   118e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   118e8:	add	fp, sp, #24
   118ec:	cmp	r0, #0
   118f0:	beq	11984 <grafo_adiciona@@Base+0xa0>
   118f4:	ldr	r8, [r0, #8]
   118f8:	mov	r6, r0
   118fc:	mov	r4, r2
   11900:	mov	r5, r1
   11904:	add	r7, r8, r1, lsl #3
   11908:	ldr	r0, [r7, #4]!
   1190c:	b	11920 <grafo_adiciona@@Base+0x3c>
   11910:	ldr	r1, [r0]
   11914:	cmp	r1, r4
   11918:	beq	11984 <grafo_adiciona@@Base+0xa0>
   1191c:	ldr	r0, [r0, #4]
   11920:	cmp	r0, #0
   11924:	bne	11910 <grafo_adiciona@@Base+0x2c>
   11928:	mov	r0, #8
   1192c:	bl	1112c <malloc@plt>
   11930:	str	r4, [r0]
   11934:	ldr	r1, [r7]
   11938:	str	r1, [r0, #4]
   1193c:	str	r0, [r7]
   11940:	ldr	r0, [r8, r5, lsl #3]
   11944:	add	r0, r0, #1
   11948:	str	r0, [r8, r5, lsl #3]
   1194c:	ldr	r0, [r6]
   11950:	cmp	r0, #0
   11954:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   11958:	mov	r0, #8
   1195c:	bl	1112c <malloc@plt>
   11960:	str	r5, [r0]
   11964:	add	r1, r8, r4, lsl #3
   11968:	ldr	r2, [r1, #4]
   1196c:	str	r2, [r0, #4]
   11970:	ldr	r2, [r8, r4, lsl #3]
   11974:	add	r2, r2, #1
   11978:	str	r2, [r8, r4, lsl #3]
   1197c:	str	r0, [r1, #4]
   11980:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11984:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011988 <grafo_aresta@@Base>:
   11988:	mov	r3, r0
   1198c:	mov	r0, #0
   11990:	cmp	r3, #0
   11994:	beq	119bc <grafo_aresta@@Base+0x34>
   11998:	ldr	r3, [r3, #8]
   1199c:	add	r1, r3, r1, lsl #3
   119a0:	ldr	r1, [r1, #4]
   119a4:	cmp	r1, #0
   119a8:	bxeq	lr
   119ac:	ldr	r3, [r1]
   119b0:	cmp	r3, r2
   119b4:	bne	119a0 <grafo_aresta@@Base+0x18>
   119b8:	mov	r0, #1
   119bc:	bx	lr

000119c0 <grafo_remove@@Base>:
   119c0:	push	{r4, r5, r6, sl, fp, lr}
   119c4:	add	fp, sp, #16
   119c8:	cmp	r0, #0
   119cc:	beq	11a3c <grafo_remove@@Base+0x7c>
   119d0:	mov	r6, r0
   119d4:	ldr	r0, [r0, #8]
   119d8:	mov	r4, r1
   119dc:	add	r1, r0, r1, lsl #3
   119e0:	ldr	r0, [r1, #4]!
   119e4:	cmp	r0, #0
   119e8:	beq	11a3c <grafo_remove@@Base+0x7c>
   119ec:	mov	r5, r2
   119f0:	ldr	r2, [r0]
   119f4:	cmp	r2, r5
   119f8:	bne	11a08 <grafo_remove@@Base+0x48>
   119fc:	ldr	r2, [r0, #4]
   11a00:	str	r2, [r1]
   11a04:	b	11a2c <grafo_remove@@Base+0x6c>
   11a08:	mov	r1, r0
   11a0c:	ldr	r0, [r0, #4]
   11a10:	cmp	r0, #0
   11a14:	beq	11a30 <grafo_remove@@Base+0x70>
   11a18:	ldr	r2, [r0]
   11a1c:	cmp	r2, r5
   11a20:	bne	11a08 <grafo_remove@@Base+0x48>
   11a24:	ldr	r2, [r0, #4]
   11a28:	str	r2, [r1, #4]
   11a2c:	bl	110fc <free@plt>
   11a30:	ldr	r0, [r6]
   11a34:	cmp	r0, #0
   11a38:	beq	11a40 <grafo_remove@@Base+0x80>
   11a3c:	pop	{r4, r5, r6, sl, fp, pc}
   11a40:	ldr	r0, [r6, #8]
   11a44:	add	r1, r0, r5, lsl #3
   11a48:	ldr	r0, [r1, #4]!
   11a4c:	ldr	r2, [r0]
   11a50:	cmp	r2, r4
   11a54:	bne	11a68 <grafo_remove@@Base+0xa8>
   11a58:	ldr	r2, [r0, #4]
   11a5c:	str	r2, [r1]
   11a60:	pop	{r4, r5, r6, sl, fp, lr}
   11a64:	b	110fc <free@plt>
   11a68:	mov	r1, r0
   11a6c:	ldr	r0, [r0, #4]
   11a70:	cmp	r0, #0
   11a74:	popeq	{r4, r5, r6, sl, fp, pc}
   11a78:	ldr	r2, [r0]
   11a7c:	cmp	r2, r4
   11a80:	bne	11a68 <grafo_remove@@Base+0xa8>
   11a84:	ldr	r2, [r0, #4]
   11a88:	str	r2, [r1, #4]
   11a8c:	pop	{r4, r5, r6, sl, fp, lr}
   11a90:	b	110fc <free@plt>

00011a94 <grafo_imprime@@Base>:
   11a94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11a98:	add	fp, sp, #24
   11a9c:	mov	r4, r0
   11aa0:	ldr	r0, [r0, #4]
   11aa4:	cmp	r0, #1
   11aa8:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   11aac:	movw	r9, #11168	; 0x2ba0
   11ab0:	movw	r8, #10932	; 0x2ab4
   11ab4:	movw	r7, #11173	; 0x2ba5
   11ab8:	mov	r5, #0
   11abc:	movt	r9, #1
   11ac0:	movt	r8, #1
   11ac4:	movt	r7, #1
   11ac8:	ldr	r0, [r4, #8]
   11acc:	mov	r1, r5
   11ad0:	add	r0, r0, r5, lsl #3
   11ad4:	ldr	r6, [r0, #4]
   11ad8:	mov	r0, r9
   11adc:	bl	110d8 <printf@plt>
   11ae0:	cmp	r6, #0
   11ae4:	beq	11b0c <grafo_imprime@@Base+0x78>
   11ae8:	ldr	r1, [r6]
   11aec:	mov	r0, r8
   11af0:	b	11afc <grafo_imprime@@Base+0x68>
   11af4:	ldr	r1, [r6]
   11af8:	mov	r0, r7
   11afc:	bl	110d8 <printf@plt>
   11b00:	ldr	r6, [r6, #4]
   11b04:	cmp	r6, #0
   11b08:	bne	11af4 <grafo_imprime@@Base+0x60>
   11b0c:	mov	r0, #10
   11b10:	bl	11174 <putchar@plt>
   11b14:	ldr	r0, [r4, #4]
   11b18:	add	r5, r5, #1
   11b1c:	cmp	r5, r0
   11b20:	blt	11ac8 <grafo_imprime@@Base+0x34>
   11b24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011b28 <v_sucessores@@Base>:
   11b28:	push	{r4, r5, r6, r7, fp, lr}
   11b2c:	add	fp, sp, #16
   11b30:	mov	r4, #0
   11b34:	cmp	r0, #0
   11b38:	beq	11bb0 <v_sucessores@@Base+0x88>
   11b3c:	mov	r5, r1
   11b40:	cmp	r1, #0
   11b44:	blt	11bb0 <v_sucessores@@Base+0x88>
   11b48:	mov	r6, r0
   11b4c:	ldr	r0, [r0, #4]
   11b50:	cmp	r0, r5
   11b54:	ble	11bb0 <v_sucessores@@Base+0x88>
   11b58:	bl	12750 <vetor_novo@@Base>
   11b5c:	mov	r4, r0
   11b60:	ldr	r0, [r6, #4]
   11b64:	cmp	r0, #1
   11b68:	blt	11bb0 <v_sucessores@@Base+0x88>
   11b6c:	mov	r7, #0
   11b70:	ldr	r1, [r6, #8]
   11b74:	add	r1, r1, r5, lsl #3
   11b78:	ldr	r1, [r1, #4]
   11b7c:	cmp	r1, #0
   11b80:	beq	11ba4 <v_sucessores@@Base+0x7c>
   11b84:	ldr	r2, [r1]
   11b88:	cmp	r2, r7
   11b8c:	bne	11b78 <v_sucessores@@Base+0x50>
   11b90:	mov	r0, r4
   11b94:	mov	r1, r7
   11b98:	mvn	r2, #0
   11b9c:	bl	1280c <vetor_insere@@Base>
   11ba0:	ldr	r0, [r6, #4]
   11ba4:	add	r7, r7, #1
   11ba8:	cmp	r7, r0
   11bac:	blt	11b70 <v_sucessores@@Base+0x48>
   11bb0:	mov	r0, r4
   11bb4:	pop	{r4, r5, r6, r7, fp, pc}

00011bb8 <v_antecessores@@Base>:
   11bb8:	push	{r4, r5, r6, r7, fp, lr}
   11bbc:	add	fp, sp, #16
   11bc0:	mov	r4, #0
   11bc4:	cmp	r0, #0
   11bc8:	beq	11c40 <v_antecessores@@Base+0x88>
   11bcc:	mov	r5, r1
   11bd0:	cmp	r1, #0
   11bd4:	blt	11c40 <v_antecessores@@Base+0x88>
   11bd8:	mov	r6, r0
   11bdc:	ldr	r0, [r0, #4]
   11be0:	cmp	r0, r5
   11be4:	ble	11c40 <v_antecessores@@Base+0x88>
   11be8:	bl	12750 <vetor_novo@@Base>
   11bec:	mov	r4, r0
   11bf0:	ldr	r0, [r6, #4]
   11bf4:	cmp	r0, #1
   11bf8:	blt	11c40 <v_antecessores@@Base+0x88>
   11bfc:	mov	r7, #0
   11c00:	ldr	r1, [r6, #8]
   11c04:	add	r1, r1, r7, lsl #3
   11c08:	ldr	r1, [r1, #4]
   11c0c:	cmp	r1, #0
   11c10:	beq	11c34 <v_antecessores@@Base+0x7c>
   11c14:	ldr	r2, [r1]
   11c18:	cmp	r2, r5
   11c1c:	bne	11c08 <v_antecessores@@Base+0x50>
   11c20:	mov	r0, r4
   11c24:	mov	r1, r7
   11c28:	mvn	r2, #0
   11c2c:	bl	1280c <vetor_insere@@Base>
   11c30:	ldr	r0, [r6, #4]
   11c34:	add	r7, r7, #1
   11c38:	cmp	r7, r0
   11c3c:	blt	11c00 <v_antecessores@@Base+0x48>
   11c40:	mov	r0, r4
   11c44:	pop	{r4, r5, r6, r7, fp, pc}

00011c48 <dfs_helper@@Base>:
   11c48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c4c:	add	fp, sp, #24
   11c50:	sub	sp, sp, #8
   11c54:	ldr	r9, [fp, #8]
   11c58:	mov	r4, r1
   11c5c:	mov	r6, r0
   11c60:	mov	r0, #0
   11c64:	ldr	r1, [r9, r1, lsl #2]
   11c68:	cmp	r1, #0
   11c6c:	bne	11cf4 <dfs_helper@@Base+0xac>
   11c70:	mov	r5, r2
   11c74:	cmp	r4, r2
   11c78:	str	r3, [r9, r4, lsl #2]
   11c7c:	bne	11c88 <dfs_helper@@Base+0x40>
   11c80:	mov	r0, r3
   11c84:	b	11cf4 <dfs_helper@@Base+0xac>
   11c88:	ldr	r0, [r6, #4]
   11c8c:	cmp	r0, #1
   11c90:	blt	11cec <dfs_helper@@Base+0xa4>
   11c94:	add	r8, r3, #1
   11c98:	mov	r7, #0
   11c9c:	ldr	r1, [r6, #8]
   11ca0:	add	r1, r1, r4, lsl #3
   11ca4:	ldr	r1, [r1, #4]
   11ca8:	cmp	r1, #0
   11cac:	beq	11ce0 <dfs_helper@@Base+0x98>
   11cb0:	ldr	r2, [r1]
   11cb4:	cmp	r2, r7
   11cb8:	bne	11ca4 <dfs_helper@@Base+0x5c>
   11cbc:	mov	r0, r6
   11cc0:	mov	r1, r7
   11cc4:	mov	r2, r5
   11cc8:	mov	r3, r8
   11ccc:	str	r9, [sp]
   11cd0:	bl	11c48 <dfs_helper@@Base>
   11cd4:	cmp	r0, #0
   11cd8:	bne	11cf4 <dfs_helper@@Base+0xac>
   11cdc:	ldr	r0, [r6, #4]
   11ce0:	add	r7, r7, #1
   11ce4:	cmp	r7, r0
   11ce8:	blt	11c9c <dfs_helper@@Base+0x54>
   11cec:	mov	r0, #0
   11cf0:	str	r0, [r9, r4, lsl #2]
   11cf4:	sub	sp, fp, #24
   11cf8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011cfc <grafo_dfs@@Base>:
   11cfc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d00:	add	fp, sp, #24
   11d04:	sub	sp, sp, #8
   11d08:	cmp	r0, #0
   11d0c:	beq	11dbc <grafo_dfs@@Base+0xc0>
   11d10:	mov	r4, r0
   11d14:	ldr	r0, [r0, #4]
   11d18:	mov	r7, r1
   11d1c:	mov	r1, #4
   11d20:	mov	r8, r3
   11d24:	mov	r6, r2
   11d28:	bl	110c0 <calloc@plt>
   11d2c:	mov	r5, r0
   11d30:	str	r0, [sp]
   11d34:	mov	r0, r4
   11d38:	mov	r1, r7
   11d3c:	mov	r2, r6
   11d40:	mov	r3, #1
   11d44:	bl	11c48 <dfs_helper@@Base>
   11d48:	cmp	r0, #0
   11d4c:	beq	11dc4 <grafo_dfs@@Base+0xc8>
   11d50:	mov	r1, #4
   11d54:	mov	r7, r0
   11d58:	bl	110c0 <calloc@plt>
   11d5c:	mov	r6, r0
   11d60:	cmp	r7, #1
   11d64:	blt	11dac <grafo_dfs@@Base+0xb0>
   11d68:	ldr	r0, [r4, #4]
   11d6c:	mov	r1, #0
   11d70:	mov	r2, r1
   11d74:	add	r1, r1, #1
   11d78:	cmp	r0, #1
   11d7c:	blt	11da4 <grafo_dfs@@Base+0xa8>
   11d80:	mov	r3, #0
   11d84:	ldr	r4, [r5, r3, lsl #2]
   11d88:	cmp	r4, r1
   11d8c:	beq	11da0 <grafo_dfs@@Base+0xa4>
   11d90:	add	r3, r3, #1
   11d94:	cmp	r3, r0
   11d98:	blt	11d84 <grafo_dfs@@Base+0x88>
   11d9c:	b	11da4 <grafo_dfs@@Base+0xa8>
   11da0:	str	r3, [r6, r2, lsl #2]
   11da4:	cmp	r1, r7
   11da8:	bne	11d70 <grafo_dfs@@Base+0x74>
   11dac:	mov	r0, r5
   11db0:	str	r7, [r8]
   11db4:	bl	110fc <free@plt>
   11db8:	b	11dd4 <grafo_dfs@@Base+0xd8>
   11dbc:	mov	r6, #0
   11dc0:	b	11dd4 <grafo_dfs@@Base+0xd8>
   11dc4:	mov	r0, r5
   11dc8:	bl	110fc <free@plt>
   11dcc:	mov	r6, #0
   11dd0:	str	r6, [r8]
   11dd4:	mov	r0, r6
   11dd8:	sub	sp, fp, #24
   11ddc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011de0 <grafo_bfs@@Base>:
   11de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11de4:	add	fp, sp, #28
   11de8:	sub	sp, sp, #12
   11dec:	cmp	r0, #0
   11df0:	beq	11ef8 <grafo_bfs@@Base+0x118>
   11df4:	stmib	sp, {r2, r3}
   11df8:	mov	r8, r1
   11dfc:	mov	sl, r0
   11e00:	mov	r1, #4
   11e04:	ldr	r7, [r0, #4]
   11e08:	mov	r0, r7
   11e0c:	bl	110c0 <calloc@plt>
   11e10:	mov	r5, r0
   11e14:	mov	r0, r7
   11e18:	mov	r1, #4
   11e1c:	bl	110c0 <calloc@plt>
   11e20:	mov	r9, r0
   11e24:	cmp	r7, #1
   11e28:	blt	11e3c <grafo_bfs@@Base+0x5c>
   11e2c:	lsl	r2, r7, #2
   11e30:	mov	r0, r5
   11e34:	mov	r1, #255	; 0xff
   11e38:	bl	11168 <memset@plt>
   11e3c:	str	r8, [r5, r8, lsl #2]
   11e40:	str	r8, [r9]
   11e44:	mov	r0, #0
   11e48:	mov	r1, #1
   11e4c:	b	11e54 <grafo_bfs@@Base+0x74>
   11e50:	ldr	r8, [r9, r0, lsl #2]
   11e54:	add	r0, r0, #1
   11e58:	cmp	r7, #1
   11e5c:	sdiv	r2, r0, r7
   11e60:	mls	r0, r2, r7, r0
   11e64:	blt	11ecc <grafo_bfs@@Base+0xec>
   11e68:	ldr	r2, [sl, #8]
   11e6c:	mov	r3, #0
   11e70:	add	r2, r2, r8, lsl #3
   11e74:	ldr	r6, [r2, #4]
   11e78:	cmp	r6, #0
   11e7c:	mov	r2, r6
   11e80:	beq	11ec0 <grafo_bfs@@Base+0xe0>
   11e84:	ldr	r4, [r2]
   11e88:	cmp	r4, r3
   11e8c:	beq	11ea0 <grafo_bfs@@Base+0xc0>
   11e90:	ldr	r2, [r2, #4]
   11e94:	cmp	r2, #0
   11e98:	bne	11e84 <grafo_bfs@@Base+0xa4>
   11e9c:	b	11ec0 <grafo_bfs@@Base+0xe0>
   11ea0:	ldr	r2, [r5, r3, lsl #2]
   11ea4:	cmn	r2, #1
   11ea8:	bne	11ec0 <grafo_bfs@@Base+0xe0>
   11eac:	str	r3, [r9, r1, lsl #2]
   11eb0:	add	r1, r1, #1
   11eb4:	str	r8, [r5, r3, lsl #2]
   11eb8:	sdiv	r2, r1, r7
   11ebc:	mls	r1, r2, r7, r1
   11ec0:	add	r3, r3, #1
   11ec4:	cmp	r3, r7
   11ec8:	bne	11e78 <grafo_bfs@@Base+0x98>
   11ecc:	cmp	r0, r1
   11ed0:	bne	11e50 <grafo_bfs@@Base+0x70>
   11ed4:	ldr	r6, [sp, #4]
   11ed8:	ldr	r4, [r5, r6, lsl #2]
   11edc:	cmp	r4, #0
   11ee0:	blt	11f00 <grafo_bfs@@Base+0x120>
   11ee4:	cmp	r4, r6
   11ee8:	bne	11f08 <grafo_bfs@@Base+0x128>
   11eec:	mov	r8, #2
   11ef0:	mov	r7, #1
   11ef4:	b	11f28 <grafo_bfs@@Base+0x148>
   11ef8:	mov	sl, #0
   11efc:	b	11f78 <grafo_bfs@@Base+0x198>
   11f00:	mov	r7, #0
   11f04:	b	11f60 <grafo_bfs@@Base+0x180>
   11f08:	mov	r7, #1
   11f0c:	mov	r0, r4
   11f10:	ldr	r1, [r5, r0, lsl #2]
   11f14:	add	r7, r7, #1
   11f18:	cmp	r1, r0
   11f1c:	mov	r0, r1
   11f20:	bne	11f10 <grafo_bfs@@Base+0x130>
   11f24:	add	r8, r7, #1
   11f28:	lsl	r0, r7, #2
   11f2c:	bl	1112c <malloc@plt>
   11f30:	mov	sl, r0
   11f34:	add	r0, r0, r7, lsl #2
   11f38:	cmp	r8, #2
   11f3c:	str	r6, [r0, #-4]
   11f40:	beq	11f60 <grafo_bfs@@Base+0x180>
   11f44:	sub	r0, r0, #8
   11f48:	sub	r1, r8, #2
   11f4c:	ldr	r2, [r5, r4, lsl #2]
   11f50:	str	r4, [r0], #-4
   11f54:	subs	r1, r1, #1
   11f58:	mov	r4, r2
   11f5c:	bne	11f4c <grafo_bfs@@Base+0x16c>
   11f60:	mov	r0, r9
   11f64:	bl	110fc <free@plt>
   11f68:	mov	r0, r5
   11f6c:	bl	110fc <free@plt>
   11f70:	ldr	r0, [sp, #8]
   11f74:	str	r7, [r0]
   11f78:	mov	r0, sl
   11f7c:	sub	sp, fp, #28
   11f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011f84 <heap_nova@@Base>:
   11f84:	push	{r4, r5, fp, lr}
   11f88:	add	fp, sp, #8
   11f8c:	mov	r5, r0
   11f90:	mov	r0, #12
   11f94:	bl	1112c <malloc@plt>
   11f98:	cmp	r0, #0
   11f9c:	beq	11fcc <heap_nova@@Base+0x48>
   11fa0:	mov	r4, r0
   11fa4:	mov	r0, #0
   11fa8:	mov	r1, #4
   11fac:	stm	r4, {r0, r5}
   11fb0:	mov	r0, r5
   11fb4:	bl	110c0 <calloc@plt>
   11fb8:	cmp	r0, #0
   11fbc:	str	r0, [r4, #8]
   11fc0:	bne	11fd0 <heap_nova@@Base+0x4c>
   11fc4:	mov	r0, r4
   11fc8:	bl	110fc <free@plt>
   11fcc:	mov	r4, #0
   11fd0:	mov	r0, r4
   11fd4:	pop	{r4, r5, fp, pc}

00011fd8 <heap_apaga@@Base>:
   11fd8:	cmp	r0, #0
   11fdc:	bxeq	lr
   11fe0:	push	{r4, r5, r6, sl, fp, lr}
   11fe4:	add	fp, sp, #16
   11fe8:	ldr	r1, [r0]
   11fec:	mov	r4, r0
   11ff0:	ldr	r0, [r0, #8]
   11ff4:	cmp	r1, #1
   11ff8:	blt	12038 <heap_apaga@@Base+0x60>
   11ffc:	mov	r5, #0
   12000:	mov	r6, #0
   12004:	ldr	r0, [r0, r6, lsl #2]
   12008:	ldr	r0, [r0, #4]
   1200c:	bl	110fc <free@plt>
   12010:	ldr	r0, [r4, #8]
   12014:	ldr	r0, [r0, r6, lsl #2]
   12018:	bl	110fc <free@plt>
   1201c:	ldr	r0, [r4, #8]
   12020:	str	r5, [r0, r6, lsl #2]
   12024:	add	r6, r6, #1
   12028:	ldr	r1, [r4]
   1202c:	ldr	r0, [r4, #8]
   12030:	cmp	r6, r1
   12034:	blt	12004 <heap_apaga@@Base+0x2c>
   12038:	bl	110fc <free@plt>
   1203c:	mov	r0, r4
   12040:	pop	{r4, r5, r6, sl, fp, lr}
   12044:	b	110fc <free@plt>

00012048 <elemento_cria@@Base>:
   12048:	push	{r4, r5, r6, r7, fp, lr}
   1204c:	add	fp, sp, #16
   12050:	mov	r4, r0
   12054:	mov	r0, #8
   12058:	mov	r7, r1
   1205c:	bl	1112c <malloc@plt>
   12060:	mov	r5, #0
   12064:	cmp	r0, #0
   12068:	beq	120ac <elemento_cria@@Base+0x64>
   1206c:	mov	r6, r0
   12070:	mov	r0, r7
   12074:	bl	11150 <strlen@plt>
   12078:	add	r0, r0, #1
   1207c:	mov	r1, #1
   12080:	bl	110c0 <calloc@plt>
   12084:	cmp	r0, #0
   12088:	str	r0, [r6, #4]
   1208c:	beq	120a4 <elemento_cria@@Base+0x5c>
   12090:	mov	r1, r7
   12094:	bl	11114 <strcpy@plt>
   12098:	mov	r5, r6
   1209c:	str	r4, [r6]
   120a0:	b	120ac <elemento_cria@@Base+0x64>
   120a4:	mov	r0, r6
   120a8:	bl	110fc <free@plt>
   120ac:	mov	r0, r5
   120b0:	pop	{r4, r5, r6, r7, fp, pc}

000120b4 <heap_insere@@Base>:
   120b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   120b8:	add	fp, sp, #24
   120bc:	mov	r5, r0
   120c0:	ldr	r0, [r0]
   120c4:	mov	r8, #0
   120c8:	ldr	r3, [r5, #4]
   120cc:	cmp	r0, r3
   120d0:	bge	12150 <heap_insere@@Base+0x9c>
   120d4:	mov	r0, r2
   120d8:	bl	12048 <elemento_cria@@Base>
   120dc:	cmp	r0, #0
   120e0:	beq	12150 <heap_insere@@Base+0x9c>
   120e4:	ldr	r1, [r5]
   120e8:	ldr	r2, [r5, #8]
   120ec:	mov	r8, #1
   120f0:	str	r0, [r2, r1, lsl #2]
   120f4:	add	r0, r1, #1
   120f8:	cmp	r1, #0
   120fc:	str	r0, [r5]
   12100:	beq	12150 <heap_insere@@Base+0x9c>
   12104:	ldr	r0, [r5, #8]
   12108:	ldr	r2, [r0, r1, lsl #2]
   1210c:	cmp	r2, #0
   12110:	subne	r3, r1, #1
   12114:	addne	r3, r3, r3, lsr #31
   12118:	asrne	r3, r3, #1
   1211c:	ldrne	r4, [r0, r3, lsl #2]
   12120:	cmpne	r4, #0
   12124:	beq	12150 <heap_insere@@Base+0x9c>
   12128:	ldr	r6, [r4]
   1212c:	ldr	r7, [r2]
   12130:	cmp	r7, r6
   12134:	bge	12150 <heap_insere@@Base+0x9c>
   12138:	str	r2, [r0, r3, lsl #2]
   1213c:	cmp	r1, #2
   12140:	ldr	r0, [r5, #8]
   12144:	str	r4, [r0, r1, lsl #2]
   12148:	mov	r1, r3
   1214c:	bhi	12104 <heap_insere@@Base+0x50>
   12150:	mov	r0, r8
   12154:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012158 <menor_que@@Base>:
   12158:	mov	r2, r0
   1215c:	mov	r0, #0
   12160:	cmp	r2, #0
   12164:	cmpne	r1, #0
   12168:	bne	12170 <menor_que@@Base+0x18>
   1216c:	bx	lr
   12170:	ldr	r1, [r1]
   12174:	ldr	r2, [r2]
   12178:	mov	r0, #0
   1217c:	cmp	r2, r1
   12180:	movwlt	r0, #1
   12184:	bx	lr

00012188 <heap_remove@@Base>:
   12188:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1218c:	add	fp, sp, #24
   12190:	mov	r8, #0
   12194:	cmp	r0, #0
   12198:	beq	1228c <heap_remove@@Base+0x104>
   1219c:	mov	r5, r0
   121a0:	ldr	r0, [r0]
   121a4:	cmp	r0, #1
   121a8:	blt	1228c <heap_remove@@Base+0x104>
   121ac:	ldr	r0, [r5, #8]
   121b0:	ldr	r0, [r0]
   121b4:	ldr	r8, [r0, #4]
   121b8:	bl	110fc <free@plt>
   121bc:	ldr	r0, [r5]
   121c0:	ldr	r1, [r5, #8]
   121c4:	mov	r7, #0
   121c8:	sub	lr, r0, #1
   121cc:	cmp	r0, #3
   121d0:	str	lr, [r5]
   121d4:	ldr	r2, [r1, lr, lsl #2]
   121d8:	str	r2, [r1]
   121dc:	ldr	r1, [r5, #8]
   121e0:	str	r7, [r1, lr, lsl #2]
   121e4:	blt	1228c <heap_remove@@Base+0x104>
   121e8:	mov	ip, #1
   121ec:	mov	r3, #1
   121f0:	mov	r1, #0
   121f4:	ldr	r6, [r5, #8]
   121f8:	add	r2, r7, #2
   121fc:	cmp	r2, lr
   12200:	bge	12228 <heap_remove@@Base+0xa0>
   12204:	mov	r4, r6
   12208:	mov	r7, r6
   1220c:	ldr	r0, [r4, r2, lsl #2]!
   12210:	ldr	r9, [r7, r3, lsl #2]!
   12214:	cmp	r0, #0
   12218:	cmpne	r9, #0
   1221c:	bne	12278 <heap_remove@@Base+0xf0>
   12220:	mov	r4, r7
   12224:	b	1222c <heap_remove@@Base+0xa4>
   12228:	add	r4, r6, r3, lsl #2
   1222c:	mov	r2, r3
   12230:	ldr	r3, [r4]
   12234:	cmp	r3, #0
   12238:	ldrne	r0, [r6, r1, lsl #2]
   1223c:	cmpne	r0, #0
   12240:	beq	1228c <heap_remove@@Base+0x104>
   12244:	ldr	r6, [r0]
   12248:	ldr	r7, [r3]
   1224c:	cmp	r7, r6
   12250:	bge	1228c <heap_remove@@Base+0x104>
   12254:	str	r0, [r4]
   12258:	lsl	r7, r2, #1
   1225c:	ldr	r0, [r5, #8]
   12260:	str	r3, [r0, r1, lsl #2]
   12264:	orr	r3, ip, r2, lsl #1
   12268:	mov	r1, r2
   1226c:	cmp	r3, lr
   12270:	blt	121f4 <heap_remove@@Base+0x6c>
   12274:	b	1228c <heap_remove@@Base+0x104>
   12278:	ldr	r9, [r9]
   1227c:	ldr	r0, [r0]
   12280:	cmp	r0, r9
   12284:	bge	12220 <heap_remove@@Base+0x98>
   12288:	b	12230 <heap_remove@@Base+0xa8>
   1228c:	mov	r0, r8
   12290:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012294 <mostraHeap@@Base>:
   12294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12298:	add	fp, sp, #28
   1229c:	sub	sp, sp, #4
   122a0:	mov	r9, r0
   122a4:	ldr	r0, [r0]
   122a8:	cmp	r0, r1
   122ac:	ble	12354 <mostraHeap@@Base+0xc0>
   122b0:	mov	sl, r1
   122b4:	mov	r7, #0
   122b8:	cmp	r1, #1
   122bc:	blt	122e0 <mostraHeap@@Base+0x4c>
   122c0:	mov	r0, sl
   122c4:	sub	r1, r0, #1
   122c8:	add	r7, r7, #1
   122cc:	cmp	r0, #2
   122d0:	add	r1, r1, r1, lsr #31
   122d4:	asr	r1, r1, #1
   122d8:	mov	r0, r1
   122dc:	bgt	122c4 <mostraHeap@@Base+0x30>
   122e0:	mov	r0, #1
   122e4:	orr	r1, r0, sl, lsl #1
   122e8:	mov	r0, r9
   122ec:	bl	12294 <mostraHeap@@Base>
   122f0:	lsl	r8, sl, #1
   122f4:	cmp	r7, #0
   122f8:	beq	12320 <mostraHeap@@Base+0x8c>
   122fc:	movw	r6, #11178	; 0x2baa
   12300:	add	r4, r7, r7, lsl #1
   12304:	mov	r5, #0
   12308:	movt	r6, #1
   1230c:	mov	r0, r6
   12310:	bl	110d8 <printf@plt>
   12314:	add	r5, r5, #1
   12318:	cmp	r5, r4
   1231c:	bcc	1230c <mostraHeap@@Base+0x78>
   12320:	ldr	r0, [r9, #8]
   12324:	ldr	r0, [r0, sl, lsl #2]
   12328:	ldr	r2, [r0]
   1232c:	ldr	r1, [r0, #4]
   12330:	movw	r0, #11184	; 0x2bb0
   12334:	movt	r0, #1
   12338:	bl	110d8 <printf@plt>
   1233c:	add	r1, r8, #2
   12340:	mov	r0, r9
   12344:	bl	12294 <mostraHeap@@Base>
   12348:	cmp	r7, #0
   1234c:	subne	sp, fp, #28
   12350:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12354:	mov	r0, #10
   12358:	sub	sp, fp, #28
   1235c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12360:	b	11174 <putchar@plt>

00012364 <novo_str@@Base>:
   12364:	push	{r4, r5, r6, sl, fp, lr}
   12368:	add	fp, sp, #16
   1236c:	mov	r6, r0
   12370:	mov	r0, #12
   12374:	bl	1112c <malloc@plt>
   12378:	mov	r5, #0
   1237c:	cmp	r0, #0
   12380:	beq	123c8 <novo_str@@Base+0x64>
   12384:	mov	r4, r0
   12388:	mov	r0, r6
   1238c:	bl	11150 <strlen@plt>
   12390:	add	r0, r0, #1
   12394:	bl	1112c <malloc@plt>
   12398:	cmp	r0, #0
   1239c:	str	r0, [r4]
   123a0:	beq	123c0 <novo_str@@Base+0x5c>
   123a4:	mov	r1, r6
   123a8:	bl	11114 <strcpy@plt>
   123ac:	mov	r0, #0
   123b0:	mov	r5, r4
   123b4:	str	r0, [r4, #4]
   123b8:	str	r0, [r4, #8]
   123bc:	b	123c8 <novo_str@@Base+0x64>
   123c0:	mov	r0, r4
   123c4:	bl	110fc <free@plt>
   123c8:	mov	r0, r5
   123cc:	pop	{r4, r5, r6, sl, fp, pc}

000123d0 <lista_nova@@Base>:
   123d0:	push	{fp, lr}
   123d4:	mov	fp, sp
   123d8:	mov	r0, #12
   123dc:	bl	1112c <malloc@plt>
   123e0:	cmp	r0, #0
   123e4:	movne	r1, #0
   123e8:	strne	r1, [r0]
   123ec:	strne	r1, [r0, #4]
   123f0:	strne	r1, [r0, #8]
   123f4:	popne	{fp, pc}
   123f8:	mov	r0, #0
   123fc:	pop	{fp, pc}

00012400 <lista_apaga@@Base>:
   12400:	cmp	r0, #0
   12404:	bxeq	lr
   12408:	push	{r4, r5, fp, lr}
   1240c:	add	fp, sp, #8
   12410:	mov	r4, r0
   12414:	b	12430 <lista_apaga@@Base+0x30>
   12418:	ldr	r0, [r5, #4]
   1241c:	str	r0, [r4]
   12420:	ldr	r0, [r5]
   12424:	bl	110fc <free@plt>
   12428:	mov	r0, r5
   1242c:	bl	110fc <free@plt>
   12430:	ldr	r5, [r4]
   12434:	cmp	r5, #0
   12438:	bne	12418 <lista_apaga@@Base+0x18>
   1243c:	mov	r0, r4
   12440:	pop	{r4, r5, fp, lr}
   12444:	b	110fc <free@plt>

00012448 <lista_tamanho@@Base>:
   12448:	cmp	r0, #0
   1244c:	ldrne	r0, [r0, #8]
   12450:	mvneq	r0, #0
   12454:	bx	lr

00012458 <lista_inicio@@Base>:
   12458:	cmp	r0, #0
   1245c:	ldrne	r0, [r0]
   12460:	moveq	r0, #0
   12464:	bx	lr

00012468 <lista_fim@@Base>:
   12468:	cmp	r0, #0
   1246c:	ldrne	r0, [r0, #4]
   12470:	moveq	r0, #0
   12474:	bx	lr

00012478 <lista_insere@@Base>:
   12478:	push	{r4, r5, r6, sl, fp, lr}
   1247c:	add	fp, sp, #16
   12480:	cmp	r0, #0
   12484:	mov	r6, #0
   12488:	cmpne	r1, #0
   1248c:	bne	12498 <lista_insere@@Base+0x20>
   12490:	mov	r0, r6
   12494:	pop	{r4, r5, r6, sl, fp, pc}
   12498:	mov	r4, r0
   1249c:	mov	r0, r1
   124a0:	mov	r5, r2
   124a4:	bl	12364 <novo_str@@Base>
   124a8:	cmp	r0, #0
   124ac:	beq	12490 <lista_insere@@Base+0x18>
   124b0:	ldr	r2, [r4, #8]
   124b4:	ldr	r1, [r4]
   124b8:	cmp	r5, #0
   124bc:	add	r2, r2, #1
   124c0:	str	r2, [r4, #8]
   124c4:	beq	124e8 <lista_insere@@Base+0x70>
   124c8:	cmp	r1, r5
   124cc:	beq	12500 <lista_insere@@Base+0x88>
   124d0:	ldr	r1, [r5, #8]
   124d4:	str	r5, [r0, #4]
   124d8:	str	r1, [r0, #8]
   124dc:	str	r0, [r1, #4]
   124e0:	str	r0, [r5, #8]
   124e4:	b	12518 <lista_insere@@Base+0xa0>
   124e8:	cmp	r1, #0
   124ec:	beq	12510 <lista_insere@@Base+0x98>
   124f0:	ldr	r1, [r4, #4]
   124f4:	str	r1, [r0, #8]
   124f8:	str	r0, [r1, #4]
   124fc:	b	12514 <lista_insere@@Base+0x9c>
   12500:	str	r5, [r0, #4]
   12504:	str	r0, [r5, #8]
   12508:	str	r0, [r4]
   1250c:	b	12518 <lista_insere@@Base+0xa0>
   12510:	str	r0, [r4]
   12514:	str	r0, [r4, #4]
   12518:	mov	r6, r0
   1251c:	b	12490 <lista_insere@@Base+0x18>

00012520 <lista_remove@@Base>:
   12520:	push	{r4, r5, fp, lr}
   12524:	add	fp, sp, #8
   12528:	cmp	r0, #0
   1252c:	mov	r4, #0
   12530:	movne	r5, r1
   12534:	cmpne	r1, #0
   12538:	beq	12580 <lista_remove@@Base+0x60>
   1253c:	ldr	r1, [r0, #8]
   12540:	sub	r1, r1, #1
   12544:	str	r1, [r0, #8]
   12548:	ldr	r1, [r5, #8]
   1254c:	ldr	r4, [r5, #4]
   12550:	cmp	r1, #0
   12554:	streq	r4, [r0]
   12558:	strne	r4, [r1, #4]
   1255c:	ldrne	r4, [r5, #4]
   12560:	add	r2, r4, #8
   12564:	cmp	r4, #0
   12568:	addeq	r2, r0, #4
   1256c:	str	r1, [r2]
   12570:	ldr	r0, [r5]
   12574:	bl	110fc <free@plt>
   12578:	mov	r0, r5
   1257c:	bl	110fc <free@plt>
   12580:	mov	r0, r4
   12584:	pop	{r4, r5, fp, pc}

00012588 <lista_pesquisa@@Base>:
   12588:	push	{r4, r5, r6, sl, fp, lr}
   1258c:	add	fp, sp, #16
   12590:	cmp	r0, #0
   12594:	mov	r4, #0
   12598:	movne	r5, r1
   1259c:	cmpne	r1, #0
   125a0:	bne	125ac <lista_pesquisa@@Base+0x24>
   125a4:	mov	r0, r4
   125a8:	pop	{r4, r5, r6, sl, fp, pc}
   125ac:	cmp	r2, #1
   125b0:	bhi	125a4 <lista_pesquisa@@Base+0x1c>
   125b4:	cmp	r2, #0
   125b8:	beq	125e8 <lista_pesquisa@@Base+0x60>
   125bc:	ldr	r6, [r0, #4]
   125c0:	b	125dc <lista_pesquisa@@Base+0x54>
   125c4:	ldr	r0, [r6]
   125c8:	mov	r1, r5
   125cc:	bl	110cc <strcmp@plt>
   125d0:	cmp	r0, #0
   125d4:	beq	12614 <lista_pesquisa@@Base+0x8c>
   125d8:	ldr	r6, [r6, #8]
   125dc:	cmp	r6, #0
   125e0:	bne	125c4 <lista_pesquisa@@Base+0x3c>
   125e4:	b	125a4 <lista_pesquisa@@Base+0x1c>
   125e8:	ldr	r6, [r0]
   125ec:	b	12608 <lista_pesquisa@@Base+0x80>
   125f0:	ldr	r0, [r6]
   125f4:	mov	r1, r5
   125f8:	bl	110cc <strcmp@plt>
   125fc:	cmp	r0, #0
   12600:	beq	12614 <lista_pesquisa@@Base+0x8c>
   12604:	ldr	r6, [r6, #4]
   12608:	cmp	r6, #0
   1260c:	bne	125f0 <lista_pesquisa@@Base+0x68>
   12610:	b	125a4 <lista_pesquisa@@Base+0x1c>
   12614:	mov	r4, r6
   12618:	b	125a4 <lista_pesquisa@@Base+0x1c>

0001261c <lista_ordena@@Base>:
   1261c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12620:	add	fp, sp, #24
   12624:	cmp	r0, #0
   12628:	beq	126a4 <lista_ordena@@Base+0x88>
   1262c:	ldr	r1, [r0, #8]
   12630:	mov	r8, #0
   12634:	cmp	r1, #0
   12638:	beq	126a8 <lista_ordena@@Base+0x8c>
   1263c:	ldr	r0, [r0]
   12640:	b	12690 <lista_ordena@@Base+0x74>
   12644:	mov	r9, r0
   12648:	mov	r7, r0
   1264c:	mov	r6, r4
   12650:	ldr	r1, [r7]
   12654:	ldr	r0, [r6]
   12658:	bl	110cc <strcmp@plt>
   1265c:	cmp	r0, #0
   12660:	movlt	r7, r6
   12664:	ldr	r6, [r6, #4]
   12668:	cmp	r6, #0
   1266c:	bne	12650 <lista_ordena@@Base+0x34>
   12670:	cmp	r7, r9
   12674:	mov	r0, r4
   12678:	beq	12690 <lista_ordena@@Base+0x74>
   1267c:	ldr	r0, [r9]
   12680:	ldr	r1, [r7]
   12684:	str	r1, [r9]
   12688:	str	r0, [r7]
   1268c:	ldr	r0, [r5]
   12690:	mov	r5, r0
   12694:	ldr	r4, [r5, #4]!
   12698:	cmp	r4, #0
   1269c:	bne	12644 <lista_ordena@@Base+0x28>
   126a0:	b	126a8 <lista_ordena@@Base+0x8c>
   126a4:	mvn	r8, #0
   126a8:	mov	r0, r8
   126ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000126b0 <lista_inverte@@Base>:
   126b0:	cmp	r0, #0
   126b4:	beq	126d4 <lista_inverte@@Base+0x24>
   126b8:	ldr	r2, [r0, #8]
   126bc:	mov	r1, #0
   126c0:	cmp	r2, #2
   126c4:	blt	12748 <lista_inverte@@Base+0x98>
   126c8:	bne	126dc <lista_inverte@@Base+0x2c>
   126cc:	ldr	r2, [r0]
   126d0:	b	12724 <lista_inverte@@Base+0x74>
   126d4:	mvn	r1, #0
   126d8:	b	12748 <lista_inverte@@Base+0x98>
   126dc:	push	{fp, lr}
   126e0:	mov	fp, sp
   126e4:	ldr	ip, [r0]
   126e8:	sub	r1, r2, #2
   126ec:	ldr	r3, [ip, #4]
   126f0:	mov	r2, r3
   126f4:	ldr	r3, [r3, #4]
   126f8:	subs	r1, r1, #1
   126fc:	ldr	lr, [r2, #8]
   12700:	str	r3, [lr, #4]
   12704:	ldr	r3, [r2, #4]
   12708:	str	lr, [r3, #8]
   1270c:	str	ip, [r2, #4]
   12710:	str	r2, [ip, #8]
   12714:	mov	ip, r2
   12718:	bne	126f0 <lista_inverte@@Base+0x40>
   1271c:	str	r2, [r0]
   12720:	pop	{fp, lr}
   12724:	ldr	r3, [r0, #4]
   12728:	mov	r1, #0
   1272c:	ldr	ip, [r3, #8]
   12730:	str	ip, [r0, #4]
   12734:	str	r1, [ip, #4]
   12738:	str	r2, [r3, #4]
   1273c:	str	r1, [r3, #8]
   12740:	str	r3, [r2, #8]
   12744:	str	r3, [r0]
   12748:	mov	r0, r1
   1274c:	bx	lr

00012750 <vetor_novo@@Base>:
   12750:	push	{fp, lr}
   12754:	mov	fp, sp
   12758:	mov	r0, #12
   1275c:	bl	1112c <malloc@plt>
   12760:	cmp	r0, #0
   12764:	movne	r1, #0
   12768:	strne	r1, [r0]
   1276c:	strne	r1, [r0, #4]
   12770:	strne	r1, [r0, #8]
   12774:	popne	{fp, pc}
   12778:	mov	r0, #0
   1277c:	pop	{fp, pc}

00012780 <vetor_apaga@@Base>:
   12780:	cmp	r0, #0
   12784:	bxeq	lr
   12788:	push	{r4, sl, fp, lr}
   1278c:	add	fp, sp, #8
   12790:	mov	r4, r0
   12794:	ldr	r0, [r0, #8]
   12798:	bl	110fc <free@plt>
   1279c:	mov	r0, r4
   127a0:	pop	{r4, sl, fp, lr}
   127a4:	b	110fc <free@plt>

000127a8 <vetor_atribui@@Base>:
   127a8:	mov	ip, r0
   127ac:	mvn	r0, #0
   127b0:	cmp	ip, #0
   127b4:	bxeq	lr
   127b8:	cmp	r1, #0
   127bc:	ldrge	r3, [ip]
   127c0:	cmpge	r3, r1
   127c4:	ldrgt	r0, [ip, #8]
   127c8:	strgt	r2, [r0, r1, lsl #2]
   127cc:	movgt	r0, r1
   127d0:	bx	lr

000127d4 <vetor_tamanho@@Base>:
   127d4:	cmp	r0, #0
   127d8:	ldrne	r0, [r0]
   127dc:	mvneq	r0, #0
   127e0:	bx	lr

000127e4 <vetor_elemento@@Base>:
   127e4:	mov	r2, r0
   127e8:	mov	r0, #-2147483648	; 0x80000000
   127ec:	cmp	r2, #0
   127f0:	bxeq	lr
   127f4:	cmp	r1, #0
   127f8:	ldrge	r3, [r2]
   127fc:	cmpge	r3, r1
   12800:	ldrgt	r0, [r2, #8]
   12804:	ldrgt	r0, [r0, r1, lsl #2]
   12808:	bx	lr

0001280c <vetor_insere@@Base>:
   1280c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12810:	add	fp, sp, #24
   12814:	mvn	r7, #0
   12818:	cmp	r0, #0
   1281c:	beq	128c4 <vetor_insere@@Base+0xb8>
   12820:	mov	r4, r2
   12824:	cmn	r2, #1
   12828:	blt	128c4 <vetor_insere@@Base+0xb8>
   1282c:	mov	r8, r1
   12830:	ldr	r1, [r0]
   12834:	mov	r5, r0
   12838:	cmp	r1, r4
   1283c:	blt	128c4 <vetor_insere@@Base+0xb8>
   12840:	ldr	r0, [r5, #4]
   12844:	cmn	r4, #1
   12848:	moveq	r4, r1
   1284c:	cmp	r1, r0
   12850:	bne	12884 <vetor_insere@@Base+0x78>
   12854:	lsl	r0, r1, #1
   12858:	cmp	r1, #0
   1285c:	movweq	r0, #1
   12860:	str	r0, [r5, #4]
   12864:	lsl	r1, r0, #2
   12868:	ldr	r0, [r5, #8]
   1286c:	bl	11108 <realloc@plt>
   12870:	cmp	r0, #0
   12874:	str	r0, [r5, #8]
   12878:	beq	128c4 <vetor_insere@@Base+0xb8>
   1287c:	ldr	r1, [r5]
   12880:	b	12888 <vetor_insere@@Base+0x7c>
   12884:	ldr	r0, [r5, #8]
   12888:	cmp	r1, r4
   1288c:	ble	128b4 <vetor_insere@@Base+0xa8>
   12890:	add	r7, r0, r1, lsl #2
   12894:	mov	r2, r1
   12898:	mov	r3, r7
   1289c:	ldr	r6, [r3, #-4]!
   128a0:	sub	r2, r2, #1
   128a4:	cmp	r2, r4
   128a8:	str	r6, [r7]
   128ac:	mov	r7, r3
   128b0:	bgt	1289c <vetor_insere@@Base+0x90>
   128b4:	str	r8, [r0, r4, lsl #2]
   128b8:	add	r0, r1, #1
   128bc:	mov	r7, r4
   128c0:	str	r0, [r5]
   128c4:	mov	r0, r7
   128c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000128cc <vetor_remove@@Base>:
   128cc:	mvn	r2, #0
   128d0:	cmp	r0, #0
   128d4:	beq	12928 <vetor_remove@@Base+0x5c>
   128d8:	cmp	r1, #0
   128dc:	ldrge	ip, [r0]
   128e0:	cmpge	ip, r1
   128e4:	ble	12928 <vetor_remove@@Base+0x5c>
   128e8:	add	r2, r1, #1
   128ec:	cmp	r2, ip
   128f0:	bge	1291c <vetor_remove@@Base+0x50>
   128f4:	ldr	r3, [r0, #8]
   128f8:	sub	r2, ip, #1
   128fc:	sub	r2, r2, r1
   12900:	add	r1, r3, r1, lsl #2
   12904:	add	r1, r1, #4
   12908:	ldr	r3, [r1]
   1290c:	subs	r2, r2, #1
   12910:	str	r3, [r1, #-4]
   12914:	add	r1, r1, #4
   12918:	bne	12908 <vetor_remove@@Base+0x3c>
   1291c:	sub	r1, ip, #1
   12920:	mov	r2, #0
   12924:	str	r1, [r0]
   12928:	mov	r0, r2
   1292c:	bx	lr

00012930 <vetor_pesquisa@@Base>:
   12930:	push	{fp, lr}
   12934:	mov	fp, sp
   12938:	mov	r2, r0
   1293c:	mvn	r0, #0
   12940:	cmp	r2, #0
   12944:	beq	12978 <vetor_pesquisa@@Base+0x48>
   12948:	ldr	ip, [r2]
   1294c:	cmp	ip, #1
   12950:	poplt	{fp, pc}
   12954:	ldr	lr, [r2, #8]
   12958:	mov	r2, #0
   1295c:	ldr	r3, [lr, r2, lsl #2]
   12960:	cmp	r3, r1
   12964:	moveq	r0, r2
   12968:	popeq	{fp, pc}
   1296c:	add	r2, r2, #1
   12970:	cmp	r2, ip
   12974:	blt	1295c <vetor_pesquisa@@Base+0x2c>
   12978:	pop	{fp, pc}

0001297c <vetor_ordena@@Base>:
   1297c:	cmp	r0, #0
   12980:	mvneq	r0, #0
   12984:	bxeq	lr
   12988:	ldr	ip, [r0]
   1298c:	mov	r1, r0
   12990:	mov	r0, #0
   12994:	cmp	ip, #2
   12998:	bxlt	lr
   1299c:	push	{r4, r5, fp, lr}
   129a0:	add	fp, sp, #8
   129a4:	ldr	r0, [r1, #8]
   129a8:	mov	r1, #1
   129ac:	mov	lr, #0
   129b0:	ldr	r2, [r0, r1, lsl #2]
   129b4:	mov	r3, lr
   129b8:	ldr	r4, [r0, r3, lsl #2]
   129bc:	cmp	r2, r4
   129c0:	bge	129e8 <vetor_ordena@@Base+0x6c>
   129c4:	add	r5, r0, r3, lsl #2
   129c8:	str	r4, [r5, #4]
   129cc:	sub	r4, r3, #1
   129d0:	add	r3, r3, #1
   129d4:	cmp	r3, #1
   129d8:	mov	r3, r4
   129dc:	bgt	129b8 <vetor_ordena@@Base+0x3c>
   129e0:	add	r3, r4, #1
   129e4:	b	129ec <vetor_ordena@@Base+0x70>
   129e8:	add	r3, r3, #1
   129ec:	add	r1, r1, #1
   129f0:	add	lr, lr, #1
   129f4:	str	r2, [r0, r3, lsl #2]
   129f8:	cmp	r1, ip
   129fc:	blt	129b0 <vetor_ordena@@Base+0x34>
   12a00:	mov	r0, #0
   12a04:	pop	{r4, r5, fp, lr}
   12a08:	bx	lr

00012a0c <__libc_csu_init@@Base>:
   12a0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a10:	mov	r7, r0
   12a14:	ldr	r6, [pc, #72]	; 12a64 <__libc_csu_init@@Base+0x58>
   12a18:	ldr	r5, [pc, #72]	; 12a68 <__libc_csu_init@@Base+0x5c>
   12a1c:	add	r6, pc, r6
   12a20:	add	r5, pc, r5
   12a24:	sub	r6, r6, r5
   12a28:	mov	r8, r1
   12a2c:	mov	r9, r2
   12a30:	bl	110a0 <calloc@plt-0x20>
   12a34:	asrs	r6, r6, #2
   12a38:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a3c:	mov	r4, #0
   12a40:	add	r4, r4, #1
   12a44:	ldr	r3, [r5], #4
   12a48:	mov	r2, r9
   12a4c:	mov	r1, r8
   12a50:	mov	r0, r7
   12a54:	blx	r3
   12a58:	cmp	r6, r4
   12a5c:	bne	12a40 <__libc_csu_init@@Base+0x34>
   12a60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a64:	andeq	r0, r1, r8, ror #9
   12a68:	andeq	r0, r1, r0, ror #9

00012a6c <__libc_csu_fini@@Base>:
   12a6c:	bx	lr

Disassembly of section .fini:

00012a70 <.fini>:
   12a70:	push	{r3, lr}
   12a74:	pop	{r3, pc}
