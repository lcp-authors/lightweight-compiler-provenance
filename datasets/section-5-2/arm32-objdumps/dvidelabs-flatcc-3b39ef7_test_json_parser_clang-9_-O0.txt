
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a40 <.init>:
   12a40:	push	{r3, lr}
   12a44:	bl	12bcc <_start@@Base+0x3c>
   12a48:	pop	{r3, pc}

Disassembly of section .plt:

00012a4c <fopen@plt-0x14>:
   12a4c:	push	{lr}		; (str lr, [sp, #-4]!)
   12a50:	ldr	lr, [pc, #4]	; 12a5c <fopen@plt-0x4>
   12a54:	add	lr, pc, lr
   12a58:	ldr	pc, [lr, #8]!
   12a5c:	andeq	r1, r3, r4, lsr #11

00012a60 <fopen@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #200704	; 0x31000
   12a68:	ldr	pc, [ip, #1444]!	; 0x5a4

00012a6c <free@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #200704	; 0x31000
   12a74:	ldr	pc, [ip, #1436]!	; 0x59c

00012a78 <memcpy@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #200704	; 0x31000
   12a80:	ldr	pc, [ip, #1428]!	; 0x594

00012a84 <ftell@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #200704	; 0x31000
   12a8c:	ldr	pc, [ip, #1420]!	; 0x58c

00012a90 <memcmp@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #200704	; 0x31000
   12a98:	ldr	pc, [ip, #1412]!	; 0x584

00012a9c <rewind@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #200704	; 0x31000
   12aa4:	ldr	pc, [ip, #1404]!	; 0x57c

00012aa8 <__isinff@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #200704	; 0x31000
   12ab0:	ldr	pc, [ip, #1396]!	; 0x574

00012ab4 <__isinf@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #200704	; 0x31000
   12abc:	ldr	pc, [ip, #1388]!	; 0x56c

00012ac0 <realloc@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #200704	; 0x31000
   12ac8:	ldr	pc, [ip, #1380]!	; 0x564

00012acc <fread@plt>:
   12acc:	add	ip, pc, #0, 12
   12ad0:	add	ip, ip, #200704	; 0x31000
   12ad4:	ldr	pc, [ip, #1372]!	; 0x55c

00012ad8 <malloc@plt>:
   12ad8:	add	ip, pc, #0, 12
   12adc:	add	ip, ip, #200704	; 0x31000
   12ae0:	ldr	pc, [ip, #1364]!	; 0x554

00012ae4 <__libc_start_main@plt>:
   12ae4:	add	ip, pc, #0, 12
   12ae8:	add	ip, ip, #200704	; 0x31000
   12aec:	ldr	pc, [ip, #1356]!	; 0x54c

00012af0 <__gmon_start__@plt>:
   12af0:	add	ip, pc, #0, 12
   12af4:	add	ip, ip, #200704	; 0x31000
   12af8:	ldr	pc, [ip, #1348]!	; 0x544

00012afc <exit@plt>:
   12afc:	add	ip, pc, #0, 12
   12b00:	add	ip, ip, #200704	; 0x31000
   12b04:	ldr	pc, [ip, #1340]!	; 0x53c

00012b08 <strlen@plt>:
   12b08:	add	ip, pc, #0, 12
   12b0c:	add	ip, ip, #200704	; 0x31000
   12b10:	ldr	pc, [ip, #1332]!	; 0x534

00012b14 <fprintf@plt>:
   12b14:	add	ip, pc, #0, 12
   12b18:	add	ip, ip, #200704	; 0x31000
   12b1c:	ldr	pc, [ip, #1324]!	; 0x52c

00012b20 <posix_memalign@plt>:
   12b20:	add	ip, pc, #0, 12
   12b24:	add	ip, ip, #200704	; 0x31000
   12b28:	ldr	pc, [ip, #1316]!	; 0x524

00012b2c <memset@plt>:
   12b2c:	add	ip, pc, #0, 12
   12b30:	add	ip, ip, #200704	; 0x31000
   12b34:	ldr	pc, [ip, #1308]!	; 0x51c

00012b38 <strncpy@plt>:
   12b38:	add	ip, pc, #0, 12
   12b3c:	add	ip, ip, #200704	; 0x31000
   12b40:	ldr	pc, [ip, #1300]!	; 0x514

00012b44 <strtod@plt>:
   12b44:	add	ip, pc, #0, 12
   12b48:	add	ip, ip, #200704	; 0x31000
   12b4c:	ldr	pc, [ip, #1292]!	; 0x50c

00012b50 <memchr@plt>:
   12b50:	add	ip, pc, #0, 12
   12b54:	add	ip, ip, #200704	; 0x31000
   12b58:	ldr	pc, [ip, #1284]!	; 0x504

00012b5c <fclose@plt>:
   12b5c:	add	ip, pc, #0, 12
   12b60:	add	ip, ip, #200704	; 0x31000
   12b64:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b68 <fseek@plt>:
   12b68:	add	ip, pc, #0, 12
   12b6c:	add	ip, ip, #200704	; 0x31000
   12b70:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b74 <abort@plt>:
   12b74:	add	ip, pc, #0, 12
   12b78:	add	ip, ip, #200704	; 0x31000
   12b7c:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b80 <__assert_fail@plt>:
   12b80:	add	ip, pc, #0, 12
   12b84:	add	ip, ip, #200704	; 0x31000
   12b88:	ldr	pc, [ip, #1252]!	; 0x4e4

Disassembly of section .text:

00012b90 <_start@@Base>:
   12b90:	mov	fp, #0
   12b94:	mov	lr, #0
   12b98:	pop	{r1}		; (ldr r1, [sp], #4)
   12b9c:	mov	r2, sp
   12ba0:	push	{r2}		; (str r2, [sp, #-4]!)
   12ba4:	push	{r0}		; (str r0, [sp, #-4]!)
   12ba8:	ldr	ip, [pc, #16]	; 12bc0 <_start@@Base+0x30>
   12bac:	push	{ip}		; (str ip, [sp, #-4]!)
   12bb0:	ldr	r0, [pc, #12]	; 12bc4 <_start@@Base+0x34>
   12bb4:	ldr	r3, [pc, #12]	; 12bc8 <_start@@Base+0x38>
   12bb8:	bl	12ae4 <__libc_start_main@plt>
   12bbc:	bl	12b74 <abort@plt>
   12bc0:	andeq	r0, r3, r4, lsr #25
   12bc4:	andeq	r3, r1, r0, lsr ip
   12bc8:	andeq	r0, r3, r4, asr #24
   12bcc:	ldr	r3, [pc, #20]	; 12be8 <_start@@Base+0x58>
   12bd0:	ldr	r2, [pc, #20]	; 12bec <_start@@Base+0x5c>
   12bd4:	add	r3, pc, r3
   12bd8:	ldr	r2, [r3, r2]
   12bdc:	cmp	r2, #0
   12be0:	bxeq	lr
   12be4:	b	12af0 <__gmon_start__@plt>
   12be8:	andeq	r1, r3, r4, lsr #8
   12bec:	andeq	r0, r0, r8, ror r0
   12bf0:	ldr	r0, [pc, #24]	; 12c10 <_start@@Base+0x80>
   12bf4:	ldr	r3, [pc, #24]	; 12c14 <_start@@Base+0x84>
   12bf8:	cmp	r3, r0
   12bfc:	bxeq	lr
   12c00:	ldr	r3, [pc, #16]	; 12c18 <_start@@Base+0x88>
   12c04:	cmp	r3, #0
   12c08:	bxeq	lr
   12c0c:	bx	r3
   12c10:	ldrdeq	r4, [r4], -r8
   12c14:	ldrdeq	r4, [r4], -r8
   12c18:	andeq	r0, r0, r0
   12c1c:	ldr	r0, [pc, #36]	; 12c48 <_start@@Base+0xb8>
   12c20:	ldr	r1, [pc, #36]	; 12c4c <_start@@Base+0xbc>
   12c24:	sub	r1, r1, r0
   12c28:	asr	r1, r1, #2
   12c2c:	add	r1, r1, r1, lsr #31
   12c30:	asrs	r1, r1, #1
   12c34:	bxeq	lr
   12c38:	ldr	r3, [pc, #16]	; 12c50 <_start@@Base+0xc0>
   12c3c:	cmp	r3, #0
   12c40:	bxeq	lr
   12c44:	bx	r3
   12c48:	ldrdeq	r4, [r4], -r8
   12c4c:	ldrdeq	r4, [r4], -r8
   12c50:	andeq	r0, r0, r0
   12c54:	push	{r4, lr}
   12c58:	ldr	r4, [pc, #24]	; 12c78 <_start@@Base+0xe8>
   12c5c:	ldrb	r3, [r4]
   12c60:	cmp	r3, #0
   12c64:	popne	{r4, pc}
   12c68:	bl	12bf0 <_start@@Base+0x60>
   12c6c:	mov	r3, #1
   12c70:	strb	r3, [r4]
   12c74:	pop	{r4, pc}
   12c78:	ldrdeq	r4, [r4], -r8
   12c7c:	b	12c1c <_start@@Base+0x8c>

00012c80 <verify_parse@@Base>:
   12c80:	push	{fp, lr}
   12c84:	mov	fp, sp
   12c88:	sub	sp, sp, #16
   12c8c:	ldr	r1, [pc, #592]	; 12ee4 <verify_parse@@Base+0x264>
   12c90:	add	r1, pc, r1
   12c94:	str	r0, [fp, #-4]
   12c98:	ldr	r0, [fp, #-4]
   12c9c:	bl	12f54 <verify_parse@@Base+0x2d4>
   12ca0:	str	r0, [sp]
   12ca4:	ldr	r0, [sp]
   12ca8:	bl	12fc4 <verify_parse@@Base+0x344>
   12cac:	str	r0, [sp, #4]
   12cb0:	ldr	r0, [sp, #4]
   12cb4:	movw	r1, #0
   12cb8:	cmp	r0, r1
   12cbc:	bne	12ce0 <verify_parse@@Base+0x60>
   12cc0:	ldr	r0, [pc, #544]	; 12ee8 <verify_parse@@Base+0x268>
   12cc4:	add	r0, pc, r0
   12cc8:	ldr	r1, [pc, #540]	; 12eec <verify_parse@@Base+0x26c>
   12ccc:	add	r1, pc, r1
   12cd0:	ldr	r2, [pc, #536]	; 12ef0 <verify_parse@@Base+0x270>
   12cd4:	add	r3, pc, r2
   12cd8:	movw	r2, #45	; 0x2d
   12cdc:	bl	12b80 <__assert_fail@plt>
   12ce0:	b	12ce4 <verify_parse@@Base+0x64>
   12ce4:	b	12ce8 <verify_parse@@Base+0x68>
   12ce8:	ldr	r0, [sp, #4]
   12cec:	bl	130a8 <verify_parse@@Base+0x428>
   12cf0:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12cf4:	vcmp.f32	s0, s2
   12cf8:	vmrs	APSR_nzcv, fpscr
   12cfc:	beq	12d20 <verify_parse@@Base+0xa0>
   12d00:	ldr	r0, [pc, #492]	; 12ef4 <verify_parse@@Base+0x274>
   12d04:	add	r0, pc, r0
   12d08:	ldr	r1, [pc, #488]	; 12ef8 <verify_parse@@Base+0x278>
   12d0c:	add	r1, pc, r1
   12d10:	ldr	r2, [pc, #484]	; 12efc <verify_parse@@Base+0x27c>
   12d14:	add	r3, pc, r2
   12d18:	movw	r2, #46	; 0x2e
   12d1c:	bl	12b80 <__assert_fail@plt>
   12d20:	b	12d24 <verify_parse@@Base+0xa4>
   12d24:	b	12d28 <verify_parse@@Base+0xa8>
   12d28:	ldr	r0, [sp, #4]
   12d2c:	bl	130f4 <verify_parse@@Base+0x474>
   12d30:	vmov.f32	s2, #0	; 0x40000000  2.0
   12d34:	vcmp.f32	s0, s2
   12d38:	vmrs	APSR_nzcv, fpscr
   12d3c:	beq	12d60 <verify_parse@@Base+0xe0>
   12d40:	ldr	r0, [pc, #440]	; 12f00 <verify_parse@@Base+0x280>
   12d44:	add	r0, pc, r0
   12d48:	ldr	r1, [pc, #436]	; 12f04 <verify_parse@@Base+0x284>
   12d4c:	add	r1, pc, r1
   12d50:	ldr	r2, [pc, #432]	; 12f08 <verify_parse@@Base+0x288>
   12d54:	add	r3, pc, r2
   12d58:	movw	r2, #47	; 0x2f
   12d5c:	bl	12b80 <__assert_fail@plt>
   12d60:	b	12d64 <verify_parse@@Base+0xe4>
   12d64:	b	12d68 <verify_parse@@Base+0xe8>
   12d68:	ldr	r0, [sp, #4]
   12d6c:	bl	13144 <verify_parse@@Base+0x4c4>
   12d70:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d74:	vcmp.f32	s0, s2
   12d78:	vmrs	APSR_nzcv, fpscr
   12d7c:	beq	12da0 <verify_parse@@Base+0x120>
   12d80:	ldr	r0, [pc, #388]	; 12f0c <verify_parse@@Base+0x28c>
   12d84:	add	r0, pc, r0
   12d88:	ldr	r1, [pc, #384]	; 12f10 <verify_parse@@Base+0x290>
   12d8c:	add	r1, pc, r1
   12d90:	ldr	r2, [pc, #380]	; 12f14 <verify_parse@@Base+0x294>
   12d94:	add	r3, pc, r2
   12d98:	movw	r2, #48	; 0x30
   12d9c:	bl	12b80 <__assert_fail@plt>
   12da0:	b	12da4 <verify_parse@@Base+0x124>
   12da4:	b	12da8 <verify_parse@@Base+0x128>
   12da8:	ldr	r0, [sp, #4]
   12dac:	bl	13198 <verify_parse@@Base+0x518>
   12db0:	vmov.f64	d16, #8	; 0x40400000  3.0
   12db4:	vcmp.f64	d0, d16
   12db8:	vmrs	APSR_nzcv, fpscr
   12dbc:	beq	12de0 <verify_parse@@Base+0x160>
   12dc0:	ldr	r0, [pc, #336]	; 12f18 <verify_parse@@Base+0x298>
   12dc4:	add	r0, pc, r0
   12dc8:	ldr	r1, [pc, #332]	; 12f1c <verify_parse@@Base+0x29c>
   12dcc:	add	r1, pc, r1
   12dd0:	ldr	r2, [pc, #328]	; 12f20 <verify_parse@@Base+0x2a0>
   12dd4:	add	r3, pc, r2
   12dd8:	movw	r2, #49	; 0x31
   12ddc:	bl	12b80 <__assert_fail@plt>
   12de0:	b	12de4 <verify_parse@@Base+0x164>
   12de4:	b	12de8 <verify_parse@@Base+0x168>
   12de8:	ldr	r0, [sp, #4]
   12dec:	bl	131f0 <verify_parse@@Base+0x570>
   12df0:	sxtb	r0, r0
   12df4:	cmp	r0, #2
   12df8:	beq	12e1c <verify_parse@@Base+0x19c>
   12dfc:	ldr	r0, [pc, #288]	; 12f24 <verify_parse@@Base+0x2a4>
   12e00:	add	r0, pc, r0
   12e04:	ldr	r1, [pc, #284]	; 12f28 <verify_parse@@Base+0x2a8>
   12e08:	add	r1, pc, r1
   12e0c:	ldr	r2, [pc, #280]	; 12f2c <verify_parse@@Base+0x2ac>
   12e10:	add	r3, pc, r2
   12e14:	movw	r2, #50	; 0x32
   12e18:	bl	12b80 <__assert_fail@plt>
   12e1c:	b	12e20 <verify_parse@@Base+0x1a0>
   12e20:	ldr	r0, [sp, #4]
   12e24:	bl	13244 <verify_parse@@Base+0x5c4>
   12e28:	str	r0, [sp, #8]
   12e2c:	ldr	r0, [sp, #8]
   12e30:	movw	r1, #0
   12e34:	cmp	r0, r1
   12e38:	bne	12e5c <verify_parse@@Base+0x1dc>
   12e3c:	ldr	r0, [pc, #236]	; 12f30 <verify_parse@@Base+0x2b0>
   12e40:	add	r0, pc, r0
   12e44:	ldr	r1, [pc, #232]	; 12f34 <verify_parse@@Base+0x2b4>
   12e48:	add	r1, pc, r1
   12e4c:	ldr	r2, [pc, #228]	; 12f38 <verify_parse@@Base+0x2b8>
   12e50:	add	r3, pc, r2
   12e54:	movw	r2, #52	; 0x34
   12e58:	bl	12b80 <__assert_fail@plt>
   12e5c:	b	12e60 <verify_parse@@Base+0x1e0>
   12e60:	b	12e64 <verify_parse@@Base+0x1e4>
   12e64:	ldr	r0, [sp, #8]
   12e68:	bl	13284 <verify_parse@@Base+0x604>
   12e6c:	sxth	r0, r0
   12e70:	cmp	r0, #5
   12e74:	beq	12e98 <verify_parse@@Base+0x218>
   12e78:	ldr	r0, [pc, #188]	; 12f3c <verify_parse@@Base+0x2bc>
   12e7c:	add	r0, pc, r0
   12e80:	ldr	r1, [pc, #184]	; 12f40 <verify_parse@@Base+0x2c0>
   12e84:	add	r1, pc, r1
   12e88:	ldr	r2, [pc, #180]	; 12f44 <verify_parse@@Base+0x2c4>
   12e8c:	add	r3, pc, r2
   12e90:	movw	r2, #53	; 0x35
   12e94:	bl	12b80 <__assert_fail@plt>
   12e98:	b	12e9c <verify_parse@@Base+0x21c>
   12e9c:	b	12ea0 <verify_parse@@Base+0x220>
   12ea0:	ldr	r0, [sp, #8]
   12ea4:	bl	132d4 <verify_parse@@Base+0x654>
   12ea8:	sxtb	r0, r0
   12eac:	cmp	r0, #6
   12eb0:	beq	12ed4 <verify_parse@@Base+0x254>
   12eb4:	ldr	r0, [pc, #140]	; 12f48 <verify_parse@@Base+0x2c8>
   12eb8:	add	r0, pc, r0
   12ebc:	ldr	r1, [pc, #136]	; 12f4c <verify_parse@@Base+0x2cc>
   12ec0:	add	r1, pc, r1
   12ec4:	ldr	r2, [pc, #132]	; 12f50 <verify_parse@@Base+0x2d0>
   12ec8:	add	r3, pc, r2
   12ecc:	movw	r2, #54	; 0x36
   12ed0:	bl	12b80 <__assert_fail@plt>
   12ed4:	b	12ed8 <verify_parse@@Base+0x258>
   12ed8:	movw	r0, #0
   12edc:	mov	sp, fp
   12ee0:	pop	{fp, pc}
   12ee4:	andeq	lr, r1, ip, lsl r0
   12ee8:	andeq	pc, r1, pc, lsl #13
   12eec:	andeq	sp, r1, r5, ror #31
   12ef0:	andeq	lr, r1, r6, asr #32
   12ef4:	andeq	pc, r1, pc, asr #12
   12ef8:	andeq	sp, r1, r5, lsr #31
   12efc:	andeq	lr, r1, r6
   12f00:	andeq	pc, r1, pc, lsl #12
   12f04:	andeq	sp, r1, r5, ror #30
   12f08:	andeq	sp, r1, r6, asr #31
   12f0c:	andeq	pc, r1, pc, asr #11
   12f10:	andeq	sp, r1, r5, lsr #30
   12f14:	andeq	sp, r1, r6, lsl #31
   12f18:	andeq	pc, r1, pc, lsl #11
   12f1c:	andeq	sp, r1, r5, ror #29
   12f20:	andeq	sp, r1, r6, asr #30
   12f24:	andeq	pc, r1, r3, asr r5	; <UNPREDICTABLE>
   12f28:	andeq	sp, r1, r9, lsr #29
   12f2c:	andeq	sp, r1, sl, lsl #30
   12f30:	andeq	pc, r1, r3, lsl r5	; <UNPREDICTABLE>
   12f34:	andeq	sp, r1, r9, ror #28
   12f38:	andeq	sp, r1, sl, asr #29
   12f3c:	ldrdeq	pc, [r1], -r7
   12f40:	andeq	sp, r1, sp, lsr #28
   12f44:	andeq	sp, r1, lr, lsl #29
   12f48:	muleq	r1, fp, r4
   12f4c:	strdeq	sp, [r1], -r1
   12f50:	andeq	sp, r1, r2, asr lr
   12f54:	push	{fp, lr}
   12f58:	mov	fp, sp
   12f5c:	sub	sp, sp, #16
   12f60:	str	r0, [fp, #-4]
   12f64:	str	r1, [sp, #8]
   12f68:	ldr	r0, [fp, #-4]
   12f6c:	movw	r1, #0
   12f70:	cmp	r0, r1
   12f74:	beq	12f8c <verify_parse@@Base+0x30c>
   12f78:	ldr	r0, [fp, #-4]
   12f7c:	ldr	r1, [sp, #8]
   12f80:	bl	13ce8 <main@@Base+0xb8>
   12f84:	cmp	r0, #0
   12f88:	bne	12f98 <verify_parse@@Base+0x318>
   12f8c:	movw	r0, #0
   12f90:	str	r0, [sp, #4]
   12f94:	b	12fb8 <verify_parse@@Base+0x338>
   12f98:	ldr	r0, [fp, #-4]
   12f9c:	ldr	r1, [fp, #-4]
   12fa0:	str	r0, [sp]
   12fa4:	mov	r0, r1
   12fa8:	bl	13d94 <main@@Base+0x164>
   12fac:	ldr	r1, [sp]
   12fb0:	add	r0, r1, r0
   12fb4:	str	r0, [sp, #4]
   12fb8:	ldr	r0, [sp, #4]
   12fbc:	mov	sp, fp
   12fc0:	pop	{fp, pc}
   12fc4:	push	{fp, lr}
   12fc8:	mov	fp, sp
   12fcc:	sub	sp, sp, #24
   12fd0:	str	r0, [fp, #-8]
   12fd4:	movw	r0, #0
   12fd8:	strh	r0, [fp, #-10]
   12fdc:	ldr	r0, [fp, #-8]
   12fe0:	movw	r1, #0
   12fe4:	cmp	r0, r1
   12fe8:	beq	12ff4 <verify_parse@@Base+0x374>
   12fec:	b	12ff0 <verify_parse@@Base+0x370>
   12ff0:	b	13014 <verify_parse@@Base+0x394>
   12ff4:	ldr	r0, [pc, #160]	; 1309c <verify_parse@@Base+0x41c>
   12ff8:	add	r0, pc, r0
   12ffc:	ldr	r1, [pc, #156]	; 130a0 <verify_parse@@Base+0x420>
   13000:	add	r1, pc, r1
   13004:	ldr	r2, [pc, #152]	; 130a4 <verify_parse@@Base+0x424>
   13008:	add	r3, pc, r2
   1300c:	movw	r2, #696	; 0x2b8
   13010:	bl	12b80 <__assert_fail@plt>
   13014:	mov	r0, #0
   13018:	strh	r0, [sp, #12]
   1301c:	ldr	r0, [fp, #-8]
   13020:	str	r0, [sp, #4]
   13024:	bl	13e18 <main@@Base+0x1e8>
   13028:	ldr	r1, [sp, #4]
   1302c:	sub	r0, r1, r0
   13030:	str	r0, [sp, #8]
   13034:	ldr	r0, [sp, #8]
   13038:	bl	13e3c <main@@Base+0x20c>
   1303c:	ldrh	r1, [sp, #12]
   13040:	add	r1, r1, #3
   13044:	lsl	r1, r1, #1
   13048:	cmp	r0, r1
   1304c:	bcc	13068 <verify_parse@@Base+0x3e8>
   13050:	ldr	r0, [sp, #8]
   13054:	ldrh	r1, [sp, #12]
   13058:	add	r0, r0, r1, lsl #1
   1305c:	add	r0, r0, #4
   13060:	bl	13e3c <main@@Base+0x20c>
   13064:	strh	r0, [fp, #-10]
   13068:	ldrsh	r0, [fp, #-10]
   1306c:	cmp	r0, #0
   13070:	beq	13088 <verify_parse@@Base+0x408>
   13074:	ldr	r0, [fp, #-8]
   13078:	ldrh	r1, [fp, #-10]
   1307c:	add	r0, r0, r1
   13080:	str	r0, [fp, #-4]
   13084:	b	13090 <verify_parse@@Base+0x410>
   13088:	movw	r0, #0
   1308c:	str	r0, [fp, #-4]
   13090:	ldr	r0, [fp, #-4]
   13094:	mov	sp, fp
   13098:	pop	{fp, pc}
   1309c:	andeq	sp, r1, ip, lsr lr
   130a0:	andeq	sp, r1, sl, asr lr
   130a4:	andeq	sp, r1, r8, asr #29
   130a8:	push	{fp, lr}
   130ac:	mov	fp, sp
   130b0:	sub	sp, sp, #8
   130b4:	str	r0, [sp, #4]
   130b8:	ldr	r0, [sp, #4]
   130bc:	movw	r1, #0
   130c0:	cmp	r0, r1
   130c4:	beq	130d8 <verify_parse@@Base+0x458>
   130c8:	ldr	r0, [sp, #4]
   130cc:	bl	13e8c <main@@Base+0x25c>
   130d0:	vstr	s0, [sp]
   130d4:	b	130e4 <verify_parse@@Base+0x464>
   130d8:	vldr	s0, [pc, #16]	; 130f0 <verify_parse@@Base+0x470>
   130dc:	vstr	s0, [sp]
   130e0:	b	130e4 <verify_parse@@Base+0x464>
   130e4:	vldr	s0, [sp]
   130e8:	mov	sp, fp
   130ec:	pop	{fp, pc}
   130f0:	andeq	r0, r0, r0
   130f4:	push	{fp, lr}
   130f8:	mov	fp, sp
   130fc:	sub	sp, sp, #8
   13100:	str	r0, [sp, #4]
   13104:	ldr	r0, [sp, #4]
   13108:	movw	r1, #0
   1310c:	cmp	r0, r1
   13110:	beq	13128 <verify_parse@@Base+0x4a8>
   13114:	ldr	r0, [sp, #4]
   13118:	add	r0, r0, #4
   1311c:	bl	13e8c <main@@Base+0x25c>
   13120:	vstr	s0, [sp]
   13124:	b	13134 <verify_parse@@Base+0x4b4>
   13128:	vldr	s0, [pc, #16]	; 13140 <verify_parse@@Base+0x4c0>
   1312c:	vstr	s0, [sp]
   13130:	b	13134 <verify_parse@@Base+0x4b4>
   13134:	vldr	s0, [sp]
   13138:	mov	sp, fp
   1313c:	pop	{fp, pc}
   13140:	andeq	r0, r0, r0
   13144:	push	{fp, lr}
   13148:	mov	fp, sp
   1314c:	sub	sp, sp, #8
   13150:	str	r0, [sp, #4]
   13154:	ldr	r0, [sp, #4]
   13158:	movw	r1, #0
   1315c:	cmp	r0, r1
   13160:	beq	13178 <verify_parse@@Base+0x4f8>
   13164:	ldr	r0, [sp, #4]
   13168:	add	r0, r0, #8
   1316c:	bl	13e8c <main@@Base+0x25c>
   13170:	vstr	s0, [sp]
   13174:	b	13184 <verify_parse@@Base+0x504>
   13178:	vldr	s0, [pc, #16]	; 13190 <verify_parse@@Base+0x510>
   1317c:	vstr	s0, [sp]
   13180:	b	13184 <verify_parse@@Base+0x504>
   13184:	vldr	s0, [sp]
   13188:	mov	sp, fp
   1318c:	pop	{fp, pc}
   13190:	andeq	r0, r0, r0
   13194:	nop	{0}
   13198:	push	{fp, lr}
   1319c:	mov	fp, sp
   131a0:	sub	sp, sp, #16
   131a4:	str	r0, [fp, #-4]
   131a8:	ldr	r0, [fp, #-4]
   131ac:	movw	r1, #0
   131b0:	cmp	r0, r1
   131b4:	beq	131cc <verify_parse@@Base+0x54c>
   131b8:	ldr	r0, [fp, #-4]
   131bc:	add	r0, r0, #16
   131c0:	bl	13ed4 <main@@Base+0x2a4>
   131c4:	vstr	d0, [sp]
   131c8:	b	131d8 <verify_parse@@Base+0x558>
   131cc:	vldr	d16, [pc, #20]	; 131e8 <verify_parse@@Base+0x568>
   131d0:	vstr	d16, [sp]
   131d4:	b	131d8 <verify_parse@@Base+0x558>
   131d8:	vldr	d16, [sp]
   131dc:	vmov.f64	d0, d16
   131e0:	mov	sp, fp
   131e4:	pop	{fp, pc}
	...
   131f0:	push	{fp, lr}
   131f4:	mov	fp, sp
   131f8:	sub	sp, sp, #8
   131fc:	str	r0, [sp, #4]
   13200:	ldr	r0, [sp, #4]
   13204:	movw	r1, #0
   13208:	cmp	r0, r1
   1320c:	beq	13228 <verify_parse@@Base+0x5a8>
   13210:	ldr	r0, [sp, #4]
   13214:	add	r0, r0, #24
   13218:	bl	13f14 <main@@Base+0x2e4>
   1321c:	sxtb	r0, r0
   13220:	str	r0, [sp]
   13224:	b	13234 <verify_parse@@Base+0x5b4>
   13228:	movw	r0, #0
   1322c:	str	r0, [sp]
   13230:	b	13234 <verify_parse@@Base+0x5b4>
   13234:	ldr	r0, [sp]
   13238:	sxtb	r0, r0
   1323c:	mov	sp, fp
   13240:	pop	{fp, pc}
   13244:	sub	sp, sp, #8
   13248:	str	r0, [sp, #4]
   1324c:	ldr	r0, [sp, #4]
   13250:	movw	r1, #0
   13254:	cmp	r0, r1
   13258:	beq	1326c <verify_parse@@Base+0x5ec>
   1325c:	ldr	r0, [sp, #4]
   13260:	add	r0, r0, #26
   13264:	str	r0, [sp]
   13268:	b	13278 <verify_parse@@Base+0x5f8>
   1326c:	movw	r0, #0
   13270:	str	r0, [sp]
   13274:	b	13278 <verify_parse@@Base+0x5f8>
   13278:	ldr	r0, [sp]
   1327c:	add	sp, sp, #8
   13280:	bx	lr
   13284:	push	{fp, lr}
   13288:	mov	fp, sp
   1328c:	sub	sp, sp, #8
   13290:	str	r0, [sp, #4]
   13294:	ldr	r0, [sp, #4]
   13298:	movw	r1, #0
   1329c:	cmp	r0, r1
   132a0:	beq	132b8 <verify_parse@@Base+0x638>
   132a4:	ldr	r0, [sp, #4]
   132a8:	bl	13f50 <main@@Base+0x320>
   132ac:	sxth	r0, r0
   132b0:	str	r0, [sp]
   132b4:	b	132c4 <verify_parse@@Base+0x644>
   132b8:	movw	r0, #0
   132bc:	str	r0, [sp]
   132c0:	b	132c4 <verify_parse@@Base+0x644>
   132c4:	ldr	r0, [sp]
   132c8:	sxth	r0, r0
   132cc:	mov	sp, fp
   132d0:	pop	{fp, pc}
   132d4:	push	{fp, lr}
   132d8:	mov	fp, sp
   132dc:	sub	sp, sp, #8
   132e0:	str	r0, [sp, #4]
   132e4:	ldr	r0, [sp, #4]
   132e8:	movw	r1, #0
   132ec:	cmp	r0, r1
   132f0:	beq	1330c <verify_parse@@Base+0x68c>
   132f4:	ldr	r0, [sp, #4]
   132f8:	add	r0, r0, #2
   132fc:	bl	13f8c <main@@Base+0x35c>
   13300:	sxtb	r0, r0
   13304:	str	r0, [sp]
   13308:	b	13318 <verify_parse@@Base+0x698>
   1330c:	movw	r0, #0
   13310:	str	r0, [sp]
   13314:	b	13318 <verify_parse@@Base+0x698>
   13318:	ldr	r0, [sp]
   1331c:	sxtb	r0, r0
   13320:	mov	sp, fp
   13324:	pop	{fp, pc}

00013328 <test_parse@@Base>:
   13328:	push	{r4, r5, fp, lr}
   1332c:	add	fp, sp, #8
   13330:	sub	sp, sp, #376	; 0x178
   13334:	movw	r0, #0
   13338:	str	r0, [fp, #-20]	; 0xffffffec
   1333c:	add	r1, sp, #80	; 0x50
   13340:	str	r1, [sp, #76]	; 0x4c
   13344:	mvn	r1, #0
   13348:	str	r1, [sp, #72]	; 0x48
   1334c:	str	r0, [sp, #68]	; 0x44
   13350:	ldr	r0, [sp, #76]	; 0x4c
   13354:	bl	23590 <flatcc_builder_init@@Base>
   13358:	ldr	r1, [pc, #612]	; 135c4 <test_parse@@Base+0x29c>
   1335c:	ldr	r1, [pc, r1]
   13360:	ldr	r1, [r1]
   13364:	str	r0, [sp, #64]	; 0x40
   13368:	mov	r0, r1
   1336c:	movw	r1, #10240	; 0x2800
   13370:	sub	r2, fp, #24
   13374:	bl	13604 <test_parse@@Base+0x2dc>
   13378:	str	r0, [fp, #-16]
   1337c:	ldr	r0, [fp, #-16]
   13380:	movw	r1, #0
   13384:	cmp	r0, r1
   13388:	bne	133c8 <test_parse@@Base+0xa0>
   1338c:	ldr	r0, [pc, #564]	; 135c8 <test_parse@@Base+0x2a0>
   13390:	add	r1, pc, r0
   13394:	ldr	r0, [pc, #560]	; 135cc <test_parse@@Base+0x2a4>
   13398:	ldr	r0, [pc, r0]
   1339c:	ldr	r2, [pc, #556]	; 135d0 <test_parse@@Base+0x2a8>
   133a0:	ldr	r2, [pc, r2]
   133a4:	ldr	r2, [r2]
   133a8:	ldr	r0, [r0]
   133ac:	str	r0, [sp, #60]	; 0x3c
   133b0:	mov	r0, r2
   133b4:	ldr	r2, [sp, #60]	; 0x3c
   133b8:	bl	12b14 <fprintf@plt>
   133bc:	mvn	r1, #0
   133c0:	str	r1, [fp, #-12]
   133c4:	b	135b8 <test_parse@@Base+0x290>
   133c8:	ldr	r0, [sp, #76]	; 0x4c
   133cc:	ldr	r2, [fp, #-16]
   133d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   133d4:	ldr	r1, [sp, #68]	; 0x44
   133d8:	sub	ip, fp, #72	; 0x48
   133dc:	str	r1, [sp, #56]	; 0x38
   133e0:	mov	r1, ip
   133e4:	ldr	ip, [sp, #56]	; 0x38
   133e8:	str	ip, [sp]
   133ec:	bl	137ec <test_parse@@Base+0x4c4>
   133f0:	cmp	r0, #0
   133f4:	beq	133fc <test_parse@@Base+0xd4>
   133f8:	b	1353c <test_parse@@Base+0x214>
   133fc:	ldr	r0, [pc, #488]	; 135ec <test_parse@@Base+0x2c4>
   13400:	add	r1, pc, r0
   13404:	ldr	r0, [pc, #484]	; 135f0 <test_parse@@Base+0x2c8>
   13408:	ldr	r0, [pc, r0]
   1340c:	ldr	r2, [pc, #480]	; 135f4 <test_parse@@Base+0x2cc>
   13410:	ldr	r2, [pc, r2]
   13414:	ldr	r2, [r2]
   13418:	ldr	r0, [r0]
   1341c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13420:	str	r0, [sp, #52]	; 0x34
   13424:	mov	r0, r2
   13428:	ldr	r2, [sp, #52]	; 0x34
   1342c:	bl	12b14 <fprintf@plt>
   13430:	ldr	r1, [sp, #76]	; 0x4c
   13434:	str	r0, [sp, #48]	; 0x30
   13438:	mov	r0, r1
   1343c:	sub	r1, fp, #28
   13440:	bl	28c80 <flatcc_builder_finalize_aligned_buffer@@Base>
   13444:	ldr	r1, [pc, #408]	; 135e4 <test_parse@@Base+0x2bc>
   13448:	add	r1, pc, r1
   1344c:	ldr	r2, [pc, #404]	; 135e8 <test_parse@@Base+0x2c0>
   13450:	ldr	r2, [pc, r2]
   13454:	str	r0, [fp, #-20]	; 0xffffffec
   13458:	ldr	r0, [fp, #-20]	; 0xffffffec
   1345c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13460:	ldr	r2, [r2]
   13464:	str	r0, [sp, #44]	; 0x2c
   13468:	mov	r0, r1
   1346c:	ldr	r1, [sp, #44]	; 0x2c
   13470:	str	r2, [sp, #40]	; 0x28
   13474:	mov	r2, r3
   13478:	ldr	r3, [sp, #40]	; 0x28
   1347c:	bl	13910 <test_parse@@Base+0x5e8>
   13480:	ldr	r0, [pc, #340]	; 135dc <test_parse@@Base+0x2b4>
   13484:	add	r1, pc, r0
   13488:	ldr	r0, [pc, #336]	; 135e0 <test_parse@@Base+0x2b8>
   1348c:	ldr	r0, [pc, r0]
   13490:	ldr	r0, [r0]
   13494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13498:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1349c:	bl	12b14 <fprintf@plt>
   134a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   134a4:	str	r0, [sp, #36]	; 0x24
   134a8:	mov	r0, r1
   134ac:	bl	12c80 <verify_parse@@Base>
   134b0:	ldr	r1, [pc, #284]	; 135d4 <test_parse@@Base+0x2ac>
   134b4:	add	r1, pc, r1
   134b8:	ldr	r2, [pc, #280]	; 135d8 <test_parse@@Base+0x2b0>
   134bc:	ldr	r2, [pc, r2]
   134c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   134c4:	ldr	ip, [fp, #-28]	; 0xffffffe4
   134c8:	ldr	r2, [r2]
   134cc:	str	r0, [sp, #32]
   134d0:	mov	r0, r1
   134d4:	mov	r1, r3
   134d8:	str	r2, [sp, #28]
   134dc:	mov	r2, ip
   134e0:	ldr	r3, [sp, #28]
   134e4:	bl	13b04 <test_parse@@Base+0x7dc>
   134e8:	ldr	r0, [sp, #76]	; 0x4c
   134ec:	bl	23810 <flatcc_builder_reset@@Base>
   134f0:	movw	r1, #0
   134f4:	str	r1, [sp, #72]	; 0x48
   134f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   134fc:	movw	r1, #0
   13500:	cmp	r0, r1
   13504:	beq	13510 <test_parse@@Base+0x1e8>
   13508:	ldr	r0, [fp, #-20]	; 0xffffffec
   1350c:	bl	28e28 <flatcc_builder_aligned_free@@Base>
   13510:	ldr	r0, [fp, #-16]
   13514:	movw	r1, #0
   13518:	cmp	r0, r1
   1351c:	beq	13528 <test_parse@@Base+0x200>
   13520:	ldr	r0, [fp, #-16]
   13524:	bl	12a6c <free@plt>
   13528:	ldr	r0, [sp, #76]	; 0x4c
   1352c:	bl	2383c <flatcc_builder_clear@@Base>
   13530:	ldr	r0, [sp, #72]	; 0x48
   13534:	str	r0, [fp, #-12]
   13538:	b	135b8 <test_parse@@Base+0x290>
   1353c:	ldr	r0, [pc, #184]	; 135fc <test_parse@@Base+0x2d4>
   13540:	ldr	r0, [pc, r0]
   13544:	ldr	r1, [pc, #180]	; 13600 <test_parse@@Base+0x2d8>
   13548:	ldr	r1, [pc, r1]
   1354c:	ldr	r1, [r1]
   13550:	ldr	r2, [r0]
   13554:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13558:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1355c:	ldr	ip, [fp, #-68]	; 0xffffffbc
   13560:	sub	r0, r0, ip
   13564:	add	r0, r0, #1
   13568:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1356c:	str	r0, [sp, #24]
   13570:	mov	r0, ip
   13574:	str	r1, [sp, #20]
   13578:	str	r2, [sp, #16]
   1357c:	str	r3, [sp, #12]
   13580:	bl	2a86c <flatcc_json_parser_error_string@@Base>
   13584:	ldr	r1, [pc, #108]	; 135f8 <test_parse@@Base+0x2d0>
   13588:	add	r1, pc, r1
   1358c:	ldr	r2, [sp, #20]
   13590:	str	r0, [sp, #8]
   13594:	mov	r0, r2
   13598:	ldr	r2, [sp, #16]
   1359c:	ldr	r3, [sp, #12]
   135a0:	ldr	ip, [sp, #24]
   135a4:	str	ip, [sp]
   135a8:	ldr	lr, [sp, #8]
   135ac:	str	lr, [sp, #4]
   135b0:	bl	12b14 <fprintf@plt>
   135b4:	b	134f8 <test_parse@@Base+0x1d0>
   135b8:	ldr	r0, [fp, #-12]
   135bc:	sub	sp, fp, #8
   135c0:	pop	{r4, r5, fp, pc}
   135c4:	andeq	r0, r3, r8, lsl sp
   135c8:	andeq	sp, r1, r3, lsr #19
   135cc:	ldrdeq	r0, [r3], -ip
   135d0:	andeq	r0, r3, ip, asr #25
   135d4:	ldrdeq	sp, [r1], -sp	; <UNPREDICTABLE>
   135d8:	andeq	r0, r3, r0, asr #23
   135dc:	andeq	sp, r1, r4, lsl r9
   135e0:	andeq	r0, r3, r0, ror #23
   135e4:	andeq	sp, r1, r1, lsr r9
   135e8:	andeq	r0, r3, ip, lsr #24
   135ec:	andeq	sp, r1, r7, asr r9
   135f0:	andeq	r0, r3, ip, ror #24
   135f4:	andeq	r0, r3, ip, asr ip
   135f8:	andeq	sp, r1, r3, lsr r8
   135fc:	andeq	r0, r3, r4, lsr fp
   13600:	andeq	r0, r3, r4, lsr #22
   13604:	push	{fp, lr}
   13608:	mov	fp, sp
   1360c:	sub	sp, sp, #56	; 0x38
   13610:	str	r0, [fp, #-8]
   13614:	str	r1, [fp, #-12]
   13618:	str	r2, [fp, #-16]
   1361c:	ldr	r0, [fp, #-16]
   13620:	movw	r1, #0
   13624:	cmp	r0, r1
   13628:	beq	13638 <test_parse@@Base+0x310>
   1362c:	ldr	r0, [fp, #-16]
   13630:	str	r0, [sp, #12]
   13634:	b	13644 <test_parse@@Base+0x31c>
   13638:	add	r0, sp, #20
   1363c:	str	r0, [sp, #12]
   13640:	b	13644 <test_parse@@Base+0x31c>
   13644:	ldr	r0, [sp, #12]
   13648:	ldr	r1, [pc, #408]	; 137e8 <test_parse@@Base+0x4c0>
   1364c:	add	r1, pc, r1
   13650:	str	r0, [fp, #-16]
   13654:	ldr	r0, [fp, #-8]
   13658:	bl	12a60 <fopen@plt>
   1365c:	str	r0, [fp, #-20]	; 0xffffffec
   13660:	movw	r0, #0
   13664:	str	r0, [fp, #-24]	; 0xffffffe8
   13668:	str	r0, [sp, #16]
   1366c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13670:	cmp	r1, r0
   13674:	bne	1367c <test_parse@@Base+0x354>
   13678:	b	13798 <test_parse@@Base+0x470>
   1367c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13680:	movw	r1, #0
   13684:	movw	r2, #2
   13688:	bl	12b68 <fseek@plt>
   1368c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13690:	str	r0, [sp, #8]
   13694:	mov	r0, r1
   13698:	bl	12a84 <ftell@plt>
   1369c:	str	r0, [fp, #-24]	; 0xffffffe8
   136a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136a4:	ldr	r1, [fp, #-16]
   136a8:	str	r0, [r1]
   136ac:	ldr	r0, [fp, #-12]
   136b0:	cmp	r0, #0
   136b4:	bls	136cc <test_parse@@Base+0x3a4>
   136b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136bc:	ldr	r1, [fp, #-12]
   136c0:	cmp	r0, r1
   136c4:	bls	136cc <test_parse@@Base+0x3a4>
   136c8:	b	13798 <test_parse@@Base+0x470>
   136cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   136d0:	bl	12a9c <rewind@plt>
   136d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136d8:	cmp	r0, #0
   136dc:	beq	136ec <test_parse@@Base+0x3c4>
   136e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136e4:	str	r0, [sp, #4]
   136e8:	b	136f8 <test_parse@@Base+0x3d0>
   136ec:	movw	r0, #1
   136f0:	str	r0, [sp, #4]
   136f4:	b	136f8 <test_parse@@Base+0x3d0>
   136f8:	ldr	r0, [sp, #4]
   136fc:	bl	12ad8 <malloc@plt>
   13700:	str	r0, [sp, #16]
   13704:	ldr	r0, [sp, #16]
   13708:	movw	r1, #0
   1370c:	cmp	r0, r1
   13710:	bne	13718 <test_parse@@Base+0x3f0>
   13714:	b	13798 <test_parse@@Base+0x470>
   13718:	movw	r0, #0
   1371c:	str	r0, [sp, #28]
   13720:	ldr	r0, [sp, #16]
   13724:	ldr	r1, [sp, #28]
   13728:	add	r0, r0, r1
   1372c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13730:	ldr	r2, [sp, #28]
   13734:	sub	r2, r1, r2
   13738:	ldr	r3, [fp, #-20]	; 0xffffffec
   1373c:	movw	r1, #1
   13740:	bl	12acc <fread@plt>
   13744:	str	r0, [sp, #24]
   13748:	cmp	r0, #0
   1374c:	beq	13764 <test_parse@@Base+0x43c>
   13750:	ldr	r0, [sp, #24]
   13754:	ldr	r1, [sp, #28]
   13758:	add	r0, r1, r0
   1375c:	str	r0, [sp, #28]
   13760:	b	13720 <test_parse@@Base+0x3f8>
   13764:	ldr	r0, [sp, #28]
   13768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1376c:	cmp	r0, r1
   13770:	beq	13778 <test_parse@@Base+0x450>
   13774:	b	13798 <test_parse@@Base+0x470>
   13778:	ldr	r0, [fp, #-20]	; 0xffffffec
   1377c:	bl	12b5c <fclose@plt>
   13780:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13784:	ldr	r2, [fp, #-16]
   13788:	str	r1, [r2]
   1378c:	ldr	r1, [sp, #16]
   13790:	str	r1, [fp, #-4]
   13794:	b	137dc <test_parse@@Base+0x4b4>
   13798:	ldr	r0, [fp, #-20]	; 0xffffffec
   1379c:	movw	r1, #0
   137a0:	cmp	r0, r1
   137a4:	beq	137b0 <test_parse@@Base+0x488>
   137a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   137ac:	bl	12b5c <fclose@plt>
   137b0:	ldr	r0, [sp, #16]
   137b4:	movw	r1, #0
   137b8:	cmp	r0, r1
   137bc:	beq	137c8 <test_parse@@Base+0x4a0>
   137c0:	ldr	r0, [sp, #16]
   137c4:	bl	12a6c <free@plt>
   137c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137cc:	ldr	r1, [fp, #-16]
   137d0:	str	r0, [r1]
   137d4:	movw	r0, #0
   137d8:	str	r0, [fp, #-4]
   137dc:	ldr	r0, [fp, #-4]
   137e0:	mov	sp, fp
   137e4:	pop	{fp, pc}
   137e8:	ldrdeq	sp, [r1], -ip
   137ec:	push	{fp, lr}
   137f0:	mov	fp, sp
   137f4:	sub	sp, sp, #80	; 0x50
   137f8:	ldr	ip, [fp, #8]
   137fc:	str	r0, [fp, #-8]
   13800:	str	r1, [fp, #-12]
   13804:	str	r2, [fp, #-16]
   13808:	str	r3, [fp, #-20]	; 0xffffffec
   1380c:	ldr	r0, [fp, #-12]
   13810:	movw	r1, #0
   13814:	cmp	r0, r1
   13818:	beq	13828 <test_parse@@Base+0x500>
   1381c:	ldr	r0, [fp, #-12]
   13820:	str	r0, [sp, #8]
   13824:	b	13834 <test_parse@@Base+0x50c>
   13828:	add	r0, sp, #16
   1382c:	str	r0, [sp, #8]
   13830:	b	13834 <test_parse@@Base+0x50c>
   13834:	ldr	r0, [sp, #8]
   13838:	str	r0, [fp, #-12]
   1383c:	ldr	r0, [fp, #-12]
   13840:	ldr	r1, [fp, #-8]
   13844:	ldr	r2, [fp, #-16]
   13848:	ldr	r3, [fp, #-16]
   1384c:	ldr	ip, [fp, #-20]	; 0xffffffec
   13850:	add	r3, r3, ip
   13854:	ldr	ip, [fp, #8]
   13858:	str	ip, [sp]
   1385c:	bl	13fc8 <main@@Base+0x398>
   13860:	ldr	r0, [pc, #164]	; 1390c <test_parse@@Base+0x5e4>
   13864:	add	r1, pc, r0
   13868:	ldr	r0, [fp, #-8]
   1386c:	movw	r2, #0
   13870:	uxth	r2, r2
   13874:	movw	r3, #0
   13878:	bl	246cc <flatcc_builder_start_buffer@@Base>
   1387c:	cmp	r0, #0
   13880:	beq	13890 <test_parse@@Base+0x568>
   13884:	mvn	r0, #0
   13888:	str	r0, [fp, #-4]
   1388c:	b	13900 <test_parse@@Base+0x5d8>
   13890:	ldr	r0, [fp, #-12]
   13894:	ldr	r1, [fp, #-16]
   13898:	ldr	r2, [fp, #-16]
   1389c:	ldr	r3, [fp, #-20]	; 0xffffffec
   138a0:	add	r2, r2, r3
   138a4:	add	r3, sp, #12
   138a8:	bl	14060 <main@@Base+0x430>
   138ac:	ldr	r1, [fp, #-12]
   138b0:	ldr	r1, [r1, #24]
   138b4:	cmp	r1, #0
   138b8:	beq	138cc <test_parse@@Base+0x5a4>
   138bc:	ldr	r0, [fp, #-12]
   138c0:	ldr	r0, [r0, #24]
   138c4:	str	r0, [fp, #-4]
   138c8:	b	13900 <test_parse@@Base+0x5d8>
   138cc:	ldr	r0, [fp, #-8]
   138d0:	ldr	r1, [sp, #12]
   138d4:	bl	24a10 <flatcc_builder_end_buffer@@Base>
   138d8:	cmp	r0, #0
   138dc:	bne	138ec <test_parse@@Base+0x5c4>
   138e0:	mvn	r0, #0
   138e4:	str	r0, [fp, #-4]
   138e8:	b	13900 <test_parse@@Base+0x5d8>
   138ec:	ldr	r0, [fp, #-16]
   138f0:	ldr	r1, [fp, #-12]
   138f4:	str	r0, [r1, #40]	; 0x28
   138f8:	movw	r0, #0
   138fc:	str	r0, [fp, #-4]
   13900:	ldr	r0, [fp, #-4]
   13904:	mov	sp, fp
   13908:	pop	{fp, pc}
   1390c:	andeq	sp, r1, r8, asr #8
   13910:	push	{fp, lr}
   13914:	mov	fp, sp
   13918:	sub	sp, sp, #48	; 0x30
   1391c:	str	r0, [fp, #-4]
   13920:	str	r1, [fp, #-8]
   13924:	str	r2, [fp, #-12]
   13928:	str	r3, [fp, #-16]
   1392c:	ldr	r0, [fp, #-8]
   13930:	str	r0, [sp, #4]
   13934:	ldr	r0, [fp, #-4]
   13938:	movw	r1, #0
   1393c:	cmp	r0, r1
   13940:	beq	13958 <test_parse@@Base+0x630>
   13944:	ldr	r0, [pc, #412]	; 13ae8 <test_parse@@Base+0x7c0>
   13948:	add	r1, pc, r0
   1394c:	ldr	r0, [fp, #-16]
   13950:	ldr	r2, [fp, #-4]
   13954:	bl	12b14 <fprintf@plt>
   13958:	movw	r0, #0
   1395c:	str	r0, [fp, #-20]	; 0xffffffec
   13960:	ldr	r0, [fp, #-20]	; 0xffffffec
   13964:	ldr	r1, [fp, #-12]
   13968:	cmp	r0, r1
   1396c:	bcs	13a98 <test_parse@@Base+0x770>
   13970:	ldr	r0, [fp, #-20]	; 0xffffffec
   13974:	and	r0, r0, #15
   13978:	cmp	r0, #0
   1397c:	bne	139b8 <test_parse@@Base+0x690>
   13980:	ldr	r0, [fp, #-20]	; 0xffffffec
   13984:	cmp	r0, #0
   13988:	beq	139a0 <test_parse@@Base+0x678>
   1398c:	ldr	r0, [pc, #356]	; 13af8 <test_parse@@Base+0x7d0>
   13990:	add	r1, pc, r0
   13994:	add	r2, sp, #11
   13998:	ldr	r0, [fp, #-16]
   1399c:	bl	12b14 <fprintf@plt>
   139a0:	ldr	r0, [pc, #340]	; 13afc <test_parse@@Base+0x7d4>
   139a4:	add	r1, pc, r0
   139a8:	ldr	r0, [fp, #-16]
   139ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   139b0:	bl	12b14 <fprintf@plt>
   139b4:	b	139dc <test_parse@@Base+0x6b4>
   139b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   139bc:	and	r0, r0, #7
   139c0:	cmp	r0, #0
   139c4:	bne	139d8 <test_parse@@Base+0x6b0>
   139c8:	ldr	r0, [pc, #292]	; 13af4 <test_parse@@Base+0x7cc>
   139cc:	add	r1, pc, r0
   139d0:	ldr	r0, [fp, #-16]
   139d4:	bl	12b14 <fprintf@plt>
   139d8:	b	139dc <test_parse@@Base+0x6b4>
   139dc:	ldr	r0, [pc, #284]	; 13b00 <test_parse@@Base+0x7d8>
   139e0:	add	r1, pc, r0
   139e4:	ldr	r0, [fp, #-16]
   139e8:	ldr	r2, [sp, #4]
   139ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   139f0:	add	r2, r2, r3
   139f4:	ldrb	r2, [r2]
   139f8:	bl	12b14 <fprintf@plt>
   139fc:	ldr	r1, [sp, #4]
   13a00:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a04:	add	r1, r1, r2
   13a08:	ldrb	r1, [r1]
   13a0c:	cmp	r1, #32
   13a10:	blt	13a2c <test_parse@@Base+0x704>
   13a14:	ldr	r0, [sp, #4]
   13a18:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a1c:	add	r0, r0, r1
   13a20:	ldrb	r0, [r0]
   13a24:	cmp	r0, #126	; 0x7e
   13a28:	ble	13a48 <test_parse@@Base+0x720>
   13a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a30:	and	r0, r0, #15
   13a34:	add	r1, sp, #11
   13a38:	add	r0, r1, r0
   13a3c:	movw	r1, #46	; 0x2e
   13a40:	strb	r1, [r0]
   13a44:	b	13a6c <test_parse@@Base+0x744>
   13a48:	ldr	r0, [sp, #4]
   13a4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a50:	add	r0, r0, r1
   13a54:	ldrb	r0, [r0]
   13a58:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a5c:	and	r1, r1, #15
   13a60:	add	r2, sp, #11
   13a64:	add	r1, r2, r1
   13a68:	strb	r0, [r1]
   13a6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a70:	and	r0, r0, #15
   13a74:	add	r0, r0, #1
   13a78:	add	r1, sp, #11
   13a7c:	add	r0, r1, r0
   13a80:	movw	r1, #0
   13a84:	strb	r1, [r0]
   13a88:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a8c:	add	r0, r0, #1
   13a90:	str	r0, [fp, #-20]	; 0xffffffec
   13a94:	b	13960 <test_parse@@Base+0x638>
   13a98:	b	13a9c <test_parse@@Base+0x774>
   13a9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13aa0:	and	r0, r0, #15
   13aa4:	cmp	r0, #0
   13aa8:	beq	13acc <test_parse@@Base+0x7a4>
   13aac:	ldr	r0, [pc, #60]	; 13af0 <test_parse@@Base+0x7c8>
   13ab0:	add	r1, pc, r0
   13ab4:	ldr	r0, [fp, #-16]
   13ab8:	bl	12b14 <fprintf@plt>
   13abc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ac0:	add	r1, r1, #1
   13ac4:	str	r1, [fp, #-20]	; 0xffffffec
   13ac8:	b	13a9c <test_parse@@Base+0x774>
   13acc:	ldr	r0, [pc, #24]	; 13aec <test_parse@@Base+0x7c4>
   13ad0:	add	r1, pc, r0
   13ad4:	add	r2, sp, #11
   13ad8:	ldr	r0, [fp, #-16]
   13adc:	bl	12b14 <fprintf@plt>
   13ae0:	mov	sp, fp
   13ae4:	pop	{fp, pc}
   13ae8:	andeq	sp, r1, lr, ror #11
   13aec:	andeq	sp, r1, fp, ror #8
   13af0:	andeq	sp, r1, r2, asr #9
   13af4:	andeq	sp, r1, r8, lsr #11
   13af8:	andeq	sp, r1, fp, lsr #11
   13afc:	muleq	r1, sp, r5
   13b00:	andeq	sp, r1, r9, ror #10
   13b04:	push	{fp, lr}
   13b08:	mov	fp, sp
   13b0c:	sub	sp, sp, #48	; 0x30
   13b10:	str	r0, [fp, #-4]
   13b14:	str	r1, [fp, #-8]
   13b18:	str	r2, [fp, #-12]
   13b1c:	str	r3, [fp, #-16]
   13b20:	ldr	r0, [fp, #-8]
   13b24:	str	r0, [sp, #4]
   13b28:	ldr	r0, [fp, #-4]
   13b2c:	movw	r1, #0
   13b30:	cmp	r0, r1
   13b34:	beq	13b44 <test_parse@@Base+0x81c>
   13b38:	ldr	r0, [fp, #-4]
   13b3c:	str	r0, [sp]
   13b40:	b	13b54 <test_parse@@Base+0x82c>
   13b44:	ldr	r0, [pc, #204]	; 13c18 <test_parse@@Base+0x8f0>
   13b48:	add	r0, pc, r0
   13b4c:	str	r0, [sp]
   13b50:	b	13b54 <test_parse@@Base+0x82c>
   13b54:	ldr	r0, [sp]
   13b58:	ldr	r1, [pc, #188]	; 13c1c <test_parse@@Base+0x8f4>
   13b5c:	add	r1, pc, r1
   13b60:	str	r0, [fp, #-4]
   13b64:	ldr	r0, [fp, #-16]
   13b68:	ldr	r2, [fp, #-4]
   13b6c:	bl	12b14 <fprintf@plt>
   13b70:	movw	r1, #0
   13b74:	str	r1, [fp, #-20]	; 0xffffffec
   13b78:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b7c:	ldr	r1, [fp, #-12]
   13b80:	cmp	r0, r1
   13b84:	bcs	13c00 <test_parse@@Base+0x8d8>
   13b88:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b8c:	and	r0, r0, #15
   13b90:	cmp	r0, #0
   13b94:	bne	13bac <test_parse@@Base+0x884>
   13b98:	ldr	r0, [pc, #136]	; 13c28 <test_parse@@Base+0x900>
   13b9c:	add	r1, pc, r0
   13ba0:	ldr	r0, [fp, #-16]
   13ba4:	bl	12b14 <fprintf@plt>
   13ba8:	b	13bd0 <test_parse@@Base+0x8a8>
   13bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bb0:	and	r0, r0, #7
   13bb4:	cmp	r0, #0
   13bb8:	bne	13bcc <test_parse@@Base+0x8a4>
   13bbc:	ldr	r0, [pc, #96]	; 13c24 <test_parse@@Base+0x8fc>
   13bc0:	add	r1, pc, r0
   13bc4:	ldr	r0, [fp, #-16]
   13bc8:	bl	12b14 <fprintf@plt>
   13bcc:	b	13bd0 <test_parse@@Base+0x8a8>
   13bd0:	ldr	r0, [pc, #84]	; 13c2c <test_parse@@Base+0x904>
   13bd4:	add	r1, pc, r0
   13bd8:	ldr	r0, [fp, #-16]
   13bdc:	ldr	r2, [sp, #4]
   13be0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13be4:	add	r2, r2, r3
   13be8:	ldrb	r2, [r2]
   13bec:	bl	12b14 <fprintf@plt>
   13bf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bf4:	add	r0, r0, #1
   13bf8:	str	r0, [fp, #-20]	; 0xffffffec
   13bfc:	b	13b78 <test_parse@@Base+0x850>
   13c00:	ldr	r0, [pc, #24]	; 13c20 <test_parse@@Base+0x8f8>
   13c04:	add	r1, pc, r0
   13c08:	ldr	r0, [fp, #-16]
   13c0c:	bl	12b14 <fprintf@plt>
   13c10:	mov	sp, fp
   13c14:	pop	{fp, pc}
   13c18:	andeq	sp, r1, r7, lsl #8
   13c1c:	strdeq	sp, [r1], -r8
   13c20:	andeq	sp, r1, fp, ror r3
   13c24:			; <UNDEFINED> instruction: 0x0001d3b2
   13c28:	ldrdeq	sp, [r1], -r5
   13c2c:	andeq	sp, r1, r2, lsr #7

00013c30 <main@@Base>:
   13c30:	push	{fp, lr}
   13c34:	mov	fp, sp
   13c38:	sub	sp, sp, #16
   13c3c:	ldr	r2, [pc, #144]	; 13cd4 <main@@Base+0xa4>
   13c40:	add	r2, pc, r2
   13c44:	ldr	r3, [pc, #140]	; 13cd8 <main@@Base+0xa8>
   13c48:	ldr	r3, [pc, r3]
   13c4c:	movw	ip, #0
   13c50:	str	ip, [fp, #-4]
   13c54:	str	r0, [sp, #8]
   13c58:	str	r1, [sp, #4]
   13c5c:	ldr	r0, [r3]
   13c60:	mov	r1, r2
   13c64:	bl	12b14 <fprintf@plt>
   13c68:	ldr	r1, [sp, #8]
   13c6c:	cmp	r1, #1
   13c70:	beq	13ca8 <main@@Base+0x78>
   13c74:	ldr	r0, [sp, #8]
   13c78:	cmp	r0, #2
   13c7c:	beq	13ca8 <main@@Base+0x78>
   13c80:	ldr	r0, [pc, #88]	; 13ce0 <main@@Base+0xb0>
   13c84:	add	r1, pc, r0
   13c88:	ldr	r0, [pc, #84]	; 13ce4 <main@@Base+0xb4>
   13c8c:	ldr	r0, [pc, r0]
   13c90:	ldr	r0, [r0]
   13c94:	bl	12b14 <fprintf@plt>
   13c98:	movw	r1, #1
   13c9c:	str	r0, [sp]
   13ca0:	mov	r0, r1
   13ca4:	bl	12afc <exit@plt>
   13ca8:	ldr	r0, [sp, #8]
   13cac:	cmp	r0, #2
   13cb0:	bne	13cc8 <main@@Base+0x98>
   13cb4:	ldr	r0, [pc, #32]	; 13cdc <main@@Base+0xac>
   13cb8:	ldr	r0, [pc, r0]
   13cbc:	ldr	r1, [sp, #4]
   13cc0:	ldr	r1, [r1, #4]
   13cc4:	str	r1, [r0]
   13cc8:	bl	13328 <test_parse@@Base>
   13ccc:	mov	sp, fp
   13cd0:	pop	{fp, pc}
   13cd4:	andeq	sp, r1, r9, lsl #3
   13cd8:	andeq	r0, r3, r4, lsr #8
   13cdc:			; <UNDEFINED> instruction: 0x000303bc
   13ce0:	andeq	sp, r1, r6, asr r1
   13ce4:	andeq	r0, r3, r0, ror #7
   13ce8:	push	{fp, lr}
   13cec:	mov	fp, sp
   13cf0:	sub	sp, sp, #32
   13cf4:	str	r0, [fp, #-8]
   13cf8:	str	r1, [fp, #-12]
   13cfc:	movw	r0, #0
   13d00:	str	r0, [sp, #12]
   13d04:	ldr	r1, [fp, #-12]
   13d08:	cmp	r1, r0
   13d0c:	bne	13d1c <main@@Base+0xec>
   13d10:	movw	r0, #1
   13d14:	str	r0, [fp, #-4]
   13d18:	b	13d88 <main@@Base+0x158>
   13d1c:	add	r0, sp, #12
   13d20:	ldr	r1, [fp, #-12]
   13d24:	movw	r2, #4
   13d28:	bl	12b38 <strncpy@plt>
   13d2c:	ldr	r1, [sp, #12]
   13d30:	str	r0, [sp, #8]
   13d34:	mov	r0, r1
   13d38:	bl	13db8 <main@@Base+0x188>
   13d3c:	str	r0, [sp, #12]
   13d40:	ldr	r0, [fp, #-8]
   13d44:	add	r0, r0, #4
   13d48:	bl	13dcc <main@@Base+0x19c>
   13d4c:	str	r0, [sp, #16]
   13d50:	ldr	r0, [sp, #12]
   13d54:	cmp	r0, #0
   13d58:	movw	r0, #1
   13d5c:	str	r0, [sp, #4]
   13d60:	beq	13d7c <main@@Base+0x14c>
   13d64:	ldr	r0, [sp, #16]
   13d68:	ldr	r1, [sp, #12]
   13d6c:	cmp	r0, r1
   13d70:	movw	r0, #0
   13d74:	moveq	r0, #1
   13d78:	str	r0, [sp, #4]
   13d7c:	ldr	r0, [sp, #4]
   13d80:	and	r0, r0, #1
   13d84:	str	r0, [fp, #-4]
   13d88:	ldr	r0, [fp, #-4]
   13d8c:	mov	sp, fp
   13d90:	pop	{fp, pc}
   13d94:	push	{fp, lr}
   13d98:	mov	fp, sp
   13d9c:	sub	sp, sp, #8
   13da0:	str	r0, [sp, #4]
   13da4:	ldr	r0, [sp, #4]
   13da8:	ldr	r0, [r0]
   13dac:	bl	13e04 <main@@Base+0x1d4>
   13db0:	mov	sp, fp
   13db4:	pop	{fp, pc}
   13db8:	sub	sp, sp, #4
   13dbc:	str	r0, [sp]
   13dc0:	ldr	r0, [sp]
   13dc4:	add	sp, sp, #4
   13dc8:	bx	lr
   13dcc:	push	{fp, lr}
   13dd0:	mov	fp, sp
   13dd4:	sub	sp, sp, #8
   13dd8:	str	r0, [sp, #4]
   13ddc:	ldr	r0, [sp, #4]
   13de0:	ldr	r0, [r0]
   13de4:	bl	13df0 <main@@Base+0x1c0>
   13de8:	mov	sp, fp
   13dec:	pop	{fp, pc}
   13df0:	sub	sp, sp, #4
   13df4:	str	r0, [sp]
   13df8:	ldr	r0, [sp]
   13dfc:	add	sp, sp, #4
   13e00:	bx	lr
   13e04:	sub	sp, sp, #4
   13e08:	str	r0, [sp]
   13e0c:	ldr	r0, [sp]
   13e10:	add	sp, sp, #4
   13e14:	bx	lr
   13e18:	push	{fp, lr}
   13e1c:	mov	fp, sp
   13e20:	sub	sp, sp, #8
   13e24:	str	r0, [sp, #4]
   13e28:	ldr	r0, [sp, #4]
   13e2c:	ldr	r0, [r0]
   13e30:	bl	13e64 <main@@Base+0x234>
   13e34:	mov	sp, fp
   13e38:	pop	{fp, pc}
   13e3c:	push	{fp, lr}
   13e40:	mov	fp, sp
   13e44:	sub	sp, sp, #8
   13e48:	str	r0, [sp, #4]
   13e4c:	ldr	r0, [sp, #4]
   13e50:	ldrh	r0, [r0]
   13e54:	bl	13e78 <main@@Base+0x248>
   13e58:	uxth	r0, r0
   13e5c:	mov	sp, fp
   13e60:	pop	{fp, pc}
   13e64:	sub	sp, sp, #4
   13e68:	str	r0, [sp]
   13e6c:	ldr	r0, [sp]
   13e70:	add	sp, sp, #4
   13e74:	bx	lr
   13e78:	sub	sp, sp, #4
   13e7c:	strh	r0, [sp, #2]
   13e80:	ldrh	r0, [sp, #2]
   13e84:	add	sp, sp, #4
   13e88:	bx	lr
   13e8c:	push	{fp, lr}
   13e90:	mov	fp, sp
   13e94:	sub	sp, sp, #8
   13e98:	str	r0, [sp, #4]
   13e9c:	ldr	r0, [sp, #4]
   13ea0:	vldr	s0, [r0]
   13ea4:	bl	13eb0 <main@@Base+0x280>
   13ea8:	mov	sp, fp
   13eac:	pop	{fp, pc}
   13eb0:	sub	sp, sp, #8
   13eb4:	vstr	s0, [sp, #4]
   13eb8:	vldr	s0, [sp, #4]
   13ebc:	vstr	s0, [sp]
   13ec0:	ldr	r0, [sp]
   13ec4:	str	r0, [sp]
   13ec8:	vldr	s0, [sp]
   13ecc:	add	sp, sp, #8
   13ed0:	bx	lr
   13ed4:	push	{fp, lr}
   13ed8:	mov	fp, sp
   13edc:	sub	sp, sp, #8
   13ee0:	str	r0, [sp, #4]
   13ee4:	ldr	r0, [sp, #4]
   13ee8:	vldr	d0, [r0]
   13eec:	bl	13ef8 <main@@Base+0x2c8>
   13ef0:	mov	sp, fp
   13ef4:	pop	{fp, pc}
   13ef8:	sub	sp, sp, #16
   13efc:	vstr	d0, [sp, #8]
   13f00:	vldr	d16, [sp, #8]
   13f04:	vstr	d16, [sp]
   13f08:	vldr	d0, [sp]
   13f0c:	add	sp, sp, #16
   13f10:	bx	lr
   13f14:	push	{fp, lr}
   13f18:	mov	fp, sp
   13f1c:	sub	sp, sp, #8
   13f20:	str	r0, [sp, #4]
   13f24:	ldr	r0, [sp, #4]
   13f28:	ldrsb	r0, [r0]
   13f2c:	bl	13f3c <main@@Base+0x30c>
   13f30:	sxtb	r0, r0
   13f34:	mov	sp, fp
   13f38:	pop	{fp, pc}
   13f3c:	sub	sp, sp, #4
   13f40:	strb	r0, [sp, #3]
   13f44:	ldrsb	r0, [sp, #3]
   13f48:	add	sp, sp, #4
   13f4c:	bx	lr
   13f50:	push	{fp, lr}
   13f54:	mov	fp, sp
   13f58:	sub	sp, sp, #8
   13f5c:	str	r0, [sp, #4]
   13f60:	ldr	r0, [sp, #4]
   13f64:	ldrsh	r0, [r0]
   13f68:	bl	13f78 <main@@Base+0x348>
   13f6c:	sxth	r0, r0
   13f70:	mov	sp, fp
   13f74:	pop	{fp, pc}
   13f78:	sub	sp, sp, #4
   13f7c:	strh	r0, [sp, #2]
   13f80:	ldrsh	r0, [sp, #2]
   13f84:	add	sp, sp, #4
   13f88:	bx	lr
   13f8c:	push	{fp, lr}
   13f90:	mov	fp, sp
   13f94:	sub	sp, sp, #8
   13f98:	str	r0, [sp, #4]
   13f9c:	ldr	r0, [sp, #4]
   13fa0:	ldrsb	r0, [r0]
   13fa4:	bl	13fb4 <main@@Base+0x384>
   13fa8:	sxtb	r0, r0
   13fac:	mov	sp, fp
   13fb0:	pop	{fp, pc}
   13fb4:	sub	sp, sp, #4
   13fb8:	strb	r0, [sp, #3]
   13fbc:	ldrsb	r0, [sp, #3]
   13fc0:	add	sp, sp, #4
   13fc4:	bx	lr
   13fc8:	push	{fp, lr}
   13fcc:	mov	fp, sp
   13fd0:	sub	sp, sp, #24
   13fd4:	ldr	ip, [fp, #8]
   13fd8:	str	r0, [fp, #-4]
   13fdc:	str	r1, [fp, #-8]
   13fe0:	str	r2, [sp, #12]
   13fe4:	str	r3, [sp, #8]
   13fe8:	ldr	r0, [fp, #-4]
   13fec:	movw	r1, #0
   13ff0:	and	r1, r1, #255	; 0xff
   13ff4:	movw	r2, #44	; 0x2c
   13ff8:	str	ip, [sp, #4]
   13ffc:	bl	12b2c <memset@plt>
   14000:	ldr	r0, [fp, #-8]
   14004:	ldr	r1, [fp, #-4]
   14008:	str	r0, [r1]
   1400c:	ldr	r0, [sp, #12]
   14010:	ldr	r1, [fp, #-4]
   14014:	str	r0, [r1, #4]
   14018:	ldr	r0, [fp, #-4]
   1401c:	movw	r1, #1
   14020:	str	r1, [r0, #16]
   14024:	ldr	r0, [fp, #8]
   14028:	ldr	r1, [fp, #-4]
   1402c:	str	r0, [r1, #8]
   14030:	ldr	r0, [sp, #12]
   14034:	ldr	r1, [fp, #-4]
   14038:	str	r0, [r1, #28]
   1403c:	ldr	r0, [sp, #8]
   14040:	ldr	r1, [fp, #-4]
   14044:	str	r0, [r1, #32]
   14048:	ldr	r0, [sp, #12]
   1404c:	ldr	r1, [fp, #-4]
   14050:	str	r0, [r1, #36]	; 0x24
   14054:	mov	sp, fp
   14058:	pop	{fp, pc}
   1405c:	nop	{0}
   14060:	push	{fp, lr}
   14064:	mov	fp, sp
   14068:	sub	sp, sp, #192	; 0xc0
   1406c:	str	r0, [fp, #-8]
   14070:	str	r1, [fp, #-12]
   14074:	str	r2, [fp, #-16]
   14078:	str	r3, [fp, #-20]	; 0xffffffec
   1407c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14080:	movw	r1, #0
   14084:	str	r1, [r0]
   14088:	ldr	r0, [fp, #-8]
   1408c:	ldr	r0, [r0]
   14090:	movw	r1, #36	; 0x24
   14094:	bl	25df4 <flatcc_builder_start_table@@Base>
   14098:	cmp	r0, #0
   1409c:	beq	140a4 <main@@Base+0x474>
   140a0:	b	17a04 <main@@Base+0x3dd4>
   140a4:	ldr	r0, [fp, #-16]
   140a8:	ldr	r1, [fp, #-8]
   140ac:	ldr	r2, [fp, #-12]
   140b0:	ldr	r3, [fp, #-16]
   140b4:	str	r0, [sp, #36]	; 0x24
   140b8:	mov	r0, r1
   140bc:	mov	r1, r2
   140c0:	mov	r2, r3
   140c4:	movw	r3, #1
   140c8:	sub	ip, fp, #52	; 0x34
   140cc:	str	ip, [sp]
   140d0:	bl	2df0c <flatcc_json_parser_prepare_unions@@Base>
   140d4:	ldr	r1, [sp, #36]	; 0x24
   140d8:	cmp	r1, r0
   140dc:	bne	140e4 <main@@Base+0x4b4>
   140e0:	b	17a04 <main@@Base+0x3dd4>
   140e4:	ldr	r0, [fp, #-8]
   140e8:	ldr	r1, [fp, #-12]
   140ec:	ldr	r2, [fp, #-16]
   140f0:	sub	r3, fp, #24
   140f4:	bl	17a4c <main@@Base+0x3e1c>
   140f8:	str	r0, [fp, #-12]
   140fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14100:	cmp	r0, #0
   14104:	beq	1796c <main@@Base+0x3d3c>
   14108:	ldr	r0, [fp, #-8]
   1410c:	ldr	r1, [fp, #-12]
   14110:	ldr	r2, [fp, #-16]
   14114:	bl	17b30 <main@@Base+0x3f00>
   14118:	str	r0, [fp, #-12]
   1411c:	ldr	r0, [fp, #-12]
   14120:	ldr	r1, [fp, #-16]
   14124:	bl	17bdc <main@@Base+0x3fac>
   14128:	str	r1, [fp, #-44]	; 0xffffffd4
   1412c:	str	r0, [fp, #-48]	; 0xffffffd0
   14130:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14134:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14138:	movw	r2, #29280	; 0x7260
   1413c:	movt	r2, #24946	; 0x6172
   14140:	subs	r0, r2, r0
   14144:	movw	r2, #29556	; 0x7374
   14148:	movt	r2, #29797	; 0x7465
   1414c:	sbcs	r1, r2, r1
   14150:	bcc	152d4 <main@@Base+0x16a4>
   14154:	b	14158 <main@@Base+0x528>
   14158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1415c:	movw	r1, #28004	; 0x6d64
   14160:	movt	r1, #28257	; 0x6e61
   14164:	cmp	r0, r1
   14168:	bhi	14ac8 <main@@Base+0xe98>
   1416c:	b	14170 <main@@Base+0x540>
   14170:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14174:	movw	r1, #25975	; 0x6577
   14178:	movt	r1, #26220	; 0x666c
   1417c:	cmp	r0, r1
   14180:	bhi	143b8 <main@@Base+0x788>
   14184:	b	14188 <main@@Base+0x558>
   14188:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1418c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14190:	movw	r2, #25965	; 0x656d
   14194:	movt	r2, #25966	; 0x656e
   14198:	eor	r1, r1, r2
   1419c:	eor	r0, r0, #121	; 0x79
   141a0:	orr	r0, r1, r0, lsl #24
   141a4:	cmp	r0, #0
   141a8:	bne	1424c <main@@Base+0x61c>
   141ac:	b	141b0 <main@@Base+0x580>
   141b0:	ldr	r0, [fp, #-8]
   141b4:	ldr	r1, [fp, #-12]
   141b8:	str	r1, [fp, #-40]	; 0xffffffd8
   141bc:	ldr	r2, [fp, #-16]
   141c0:	movw	r3, #5
   141c4:	bl	17c14 <main@@Base+0x3fe4>
   141c8:	str	r0, [fp, #-12]
   141cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   141d0:	ldr	r1, [fp, #-12]
   141d4:	cmp	r0, r1
   141d8:	beq	14234 <main@@Base+0x604>
   141dc:	ldr	r0, [fp, #-8]
   141e0:	ldr	r1, [fp, #-12]
   141e4:	ldr	r2, [fp, #-16]
   141e8:	sub	r3, fp, #32
   141ec:	bl	14060 <main@@Base+0x430>
   141f0:	str	r0, [fp, #-12]
   141f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   141f8:	cmp	r0, #0
   141fc:	beq	14220 <main@@Base+0x5f0>
   14200:	ldr	r0, [fp, #-8]
   14204:	ldr	r0, [r0]
   14208:	movw	r1, #12
   1420c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   14210:	str	r0, [fp, #-36]	; 0xffffffdc
   14214:	movw	r1, #0
   14218:	cmp	r0, r1
   1421c:	bne	14224 <main@@Base+0x5f4>
   14220:	b	17a04 <main@@Base+0x3dd4>
   14224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14228:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1422c:	str	r0, [r1]
   14230:	b	14248 <main@@Base+0x618>
   14234:	ldr	r0, [fp, #-8]
   14238:	ldr	r1, [fp, #-12]
   1423c:	ldr	r2, [fp, #-16]
   14240:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14244:	str	r0, [fp, #-12]
   14248:	b	143b4 <main@@Base+0x784>
   1424c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14250:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14254:	movw	r2, #27759	; 0x6c6f
   14258:	movt	r2, #25455	; 0x636f
   1425c:	eor	r1, r1, r2
   14260:	eor	r0, r0, #114	; 0x72
   14264:	orr	r0, r1, r0, lsl #24
   14268:	cmp	r0, #0
   1426c:	bne	1439c <main@@Base+0x76c>
   14270:	b	14274 <main@@Base+0x644>
   14274:	ldr	r0, [fp, #-8]
   14278:	ldr	r1, [fp, #-12]
   1427c:	str	r1, [fp, #-40]	; 0xffffffd8
   14280:	ldr	r2, [fp, #-16]
   14284:	movw	r3, #5
   14288:	bl	17c14 <main@@Base+0x3fe4>
   1428c:	str	r0, [fp, #-12]
   14290:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14294:	ldr	r1, [fp, #-12]
   14298:	cmp	r0, r1
   1429c:	beq	14384 <main@@Base+0x754>
   142a0:	movw	r0, #0
   142a4:	strb	r0, [fp, #-53]	; 0xffffffcb
   142a8:	ldr	r0, [fp, #-8]
   142ac:	ldr	r1, [fp, #-12]
   142b0:	str	r1, [fp, #-40]	; 0xffffffd8
   142b4:	ldr	r2, [fp, #-16]
   142b8:	sub	r3, fp, #53	; 0x35
   142bc:	bl	19130 <main@@Base+0x5500>
   142c0:	str	r0, [fp, #-12]
   142c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   142c8:	ldr	r1, [fp, #-12]
   142cc:	cmp	r0, r1
   142d0:	bne	14324 <main@@Base+0x6f4>
   142d4:	ldr	r0, [pc, #4084]	; 152d0 <main@@Base+0x16a0>
   142d8:	add	r3, pc, r0
   142dc:	ldr	r0, [fp, #-8]
   142e0:	ldr	r1, [fp, #-12]
   142e4:	str	r1, [fp, #-40]	; 0xffffffd8
   142e8:	ldr	r2, [fp, #-16]
   142ec:	sub	ip, fp, #53	; 0x35
   142f0:	str	ip, [sp]
   142f4:	bl	1920c <main@@Base+0x55dc>
   142f8:	str	r0, [fp, #-12]
   142fc:	ldr	r0, [fp, #-12]
   14300:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14304:	cmp	r0, r1
   14308:	beq	1431c <main@@Base+0x6ec>
   1430c:	ldr	r0, [fp, #-12]
   14310:	ldr	r1, [fp, #-16]
   14314:	cmp	r0, r1
   14318:	bne	14320 <main@@Base+0x6f0>
   1431c:	b	17a04 <main@@Base+0x3dd4>
   14320:	b	14324 <main@@Base+0x6f4>
   14324:	ldrsb	r0, [fp, #-53]	; 0xffffffcb
   14328:	cmp	r0, #8
   1432c:	bne	14344 <main@@Base+0x714>
   14330:	ldr	r0, [fp, #-8]
   14334:	ldr	r0, [r0, #8]
   14338:	and	r0, r0, #2
   1433c:	cmp	r0, #0
   14340:	beq	14380 <main@@Base+0x750>
   14344:	ldr	r0, [fp, #-8]
   14348:	ldr	r0, [r0]
   1434c:	movw	r1, #6
   14350:	movw	r2, #1
   14354:	movw	r3, #1
   14358:	uxth	r3, r3
   1435c:	bl	27698 <flatcc_builder_table_add@@Base>
   14360:	str	r0, [fp, #-28]	; 0xffffffe4
   14364:	movw	r1, #0
   14368:	cmp	r0, r1
   1436c:	bne	14374 <main@@Base+0x744>
   14370:	b	17a04 <main@@Base+0x3dd4>
   14374:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14378:	ldrsb	r1, [fp, #-53]	; 0xffffffcb
   1437c:	bl	19438 <main@@Base+0x5808>
   14380:	b	14398 <main@@Base+0x768>
   14384:	ldr	r0, [fp, #-8]
   14388:	ldr	r1, [fp, #-12]
   1438c:	ldr	r2, [fp, #-16]
   14390:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14394:	str	r0, [fp, #-12]
   14398:	b	143b0 <main@@Base+0x780>
   1439c:	ldr	r0, [fp, #-8]
   143a0:	ldr	r1, [fp, #-12]
   143a4:	ldr	r2, [fp, #-16]
   143a8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   143ac:	str	r0, [fp, #-12]
   143b0:	b	143b4 <main@@Base+0x784>
   143b4:	b	14ac4 <main@@Base+0xe94>
   143b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143bc:	movw	r1, #65535	; 0xffff
   143c0:	movt	r1, #26735	; 0x686f
   143c4:	cmp	r0, r1
   143c8:	bhi	145b0 <main@@Base+0x980>
   143cc:	b	143d0 <main@@Base+0x7a0>
   143d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143d4:	movw	r1, #25976	; 0x6578
   143d8:	movt	r1, #26220	; 0x666c
   143dc:	teq	r0, r1
   143e0:	bne	14598 <main@@Base+0x968>
   143e4:	b	143e8 <main@@Base+0x7b8>
   143e8:	ldr	r0, [fp, #-8]
   143ec:	ldr	r1, [fp, #-12]
   143f0:	str	r1, [fp, #-40]	; 0xffffffd8
   143f4:	ldr	r2, [fp, #-16]
   143f8:	movw	r3, #4
   143fc:	bl	17c14 <main@@Base+0x3fe4>
   14400:	str	r0, [fp, #-12]
   14404:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14408:	ldr	r1, [fp, #-12]
   1440c:	cmp	r0, r1
   14410:	beq	14580 <main@@Base+0x950>
   14414:	ldr	r0, [fp, #-8]
   14418:	ldr	r0, [r0]
   1441c:	movw	r1, #1
   14420:	movw	r2, #1
   14424:	uxth	r2, r2
   14428:	mvn	r3, #0
   1442c:	bl	25980 <flatcc_builder_start_vector@@Base>
   14430:	cmp	r0, #0
   14434:	beq	1443c <main@@Base+0x80c>
   14438:	b	17a04 <main@@Base+0x3dd4>
   1443c:	ldr	r0, [fp, #-8]
   14440:	ldr	r1, [fp, #-12]
   14444:	ldr	r2, [fp, #-16]
   14448:	sub	r3, fp, #24
   1444c:	bl	19464 <main@@Base+0x5834>
   14450:	str	r0, [fp, #-12]
   14454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14458:	cmp	r0, #0
   1445c:	beq	14530 <main@@Base+0x900>
   14460:	movw	r0, #0
   14464:	strb	r0, [fp, #-54]	; 0xffffffca
   14468:	ldr	r0, [fp, #-8]
   1446c:	ldr	r0, [r0]
   14470:	movw	r1, #1
   14474:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   14478:	str	r0, [fp, #-28]	; 0xffffffe4
   1447c:	movw	r1, #0
   14480:	cmp	r0, r1
   14484:	bne	1448c <main@@Base+0x85c>
   14488:	b	17a04 <main@@Base+0x3dd4>
   1448c:	ldr	r0, [fp, #-8]
   14490:	ldr	r1, [fp, #-12]
   14494:	str	r1, [fp, #-40]	; 0xffffffd8
   14498:	ldr	r2, [fp, #-16]
   1449c:	sub	r3, fp, #54	; 0x36
   144a0:	bl	19548 <main@@Base+0x5918>
   144a4:	str	r0, [fp, #-12]
   144a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144ac:	ldr	r1, [fp, #-12]
   144b0:	cmp	r0, r1
   144b4:	bne	14508 <main@@Base+0x8d8>
   144b8:	ldr	r0, [pc, #3976]	; 15448 <main@@Base+0x1818>
   144bc:	add	r3, pc, r0
   144c0:	ldr	r0, [fp, #-8]
   144c4:	ldr	r1, [fp, #-12]
   144c8:	str	r1, [fp, #-40]	; 0xffffffd8
   144cc:	ldr	r2, [fp, #-16]
   144d0:	sub	ip, fp, #54	; 0x36
   144d4:	str	ip, [sp]
   144d8:	bl	19624 <main@@Base+0x59f4>
   144dc:	str	r0, [fp, #-12]
   144e0:	ldr	r0, [fp, #-12]
   144e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   144e8:	cmp	r0, r1
   144ec:	beq	14500 <main@@Base+0x8d0>
   144f0:	ldr	r0, [fp, #-12]
   144f4:	ldr	r1, [fp, #-16]
   144f8:	cmp	r0, r1
   144fc:	bne	14504 <main@@Base+0x8d4>
   14500:	b	17a04 <main@@Base+0x3dd4>
   14504:	b	14508 <main@@Base+0x8d8>
   14508:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1450c:	ldrb	r1, [fp, #-54]	; 0xffffffca
   14510:	bl	19850 <main@@Base+0x5c20>
   14514:	ldr	r0, [fp, #-8]
   14518:	ldr	r1, [fp, #-12]
   1451c:	ldr	r2, [fp, #-16]
   14520:	sub	r3, fp, #24
   14524:	bl	1987c <main@@Base+0x5c4c>
   14528:	str	r0, [fp, #-12]
   1452c:	b	14454 <main@@Base+0x824>
   14530:	ldr	r0, [fp, #-8]
   14534:	ldr	r0, [r0]
   14538:	bl	26e60 <flatcc_builder_end_vector@@Base>
   1453c:	str	r0, [fp, #-32]	; 0xffffffe0
   14540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14544:	cmp	r0, #0
   14548:	beq	1456c <main@@Base+0x93c>
   1454c:	ldr	r0, [fp, #-8]
   14550:	ldr	r0, [r0]
   14554:	movw	r1, #30
   14558:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1455c:	str	r0, [fp, #-36]	; 0xffffffdc
   14560:	movw	r1, #0
   14564:	cmp	r0, r1
   14568:	bne	14570 <main@@Base+0x940>
   1456c:	b	17a04 <main@@Base+0x3dd4>
   14570:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14574:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14578:	str	r0, [r1]
   1457c:	b	14594 <main@@Base+0x964>
   14580:	ldr	r0, [fp, #-8]
   14584:	ldr	r1, [fp, #-12]
   14588:	ldr	r2, [fp, #-16]
   1458c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14590:	str	r0, [fp, #-12]
   14594:	b	145ac <main@@Base+0x97c>
   14598:	ldr	r0, [fp, #-8]
   1459c:	ldr	r1, [fp, #-12]
   145a0:	ldr	r2, [fp, #-16]
   145a4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   145a8:	str	r0, [fp, #-12]
   145ac:	b	14ac0 <main@@Base+0xe90>
   145b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   145b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   145b8:	movw	r2, #28529	; 0x6f71
   145bc:	movt	r2, #28276	; 0x6e74
   145c0:	subs	r0, r2, r0
   145c4:	movw	r2, #30309	; 0x7665
   145c8:	movt	r2, #26990	; 0x696e
   145cc:	sbcs	r1, r2, r1
   145d0:	bcc	14734 <main@@Base+0xb04>
   145d4:	b	145d8 <main@@Base+0x9a8>
   145d8:	ldrh	r0, [fp, #-42]	; 0xffffffd6
   145dc:	movw	r1, #0
   145e0:	movt	r1, #26736	; 0x6870
   145e4:	teq	r1, r0, lsl #16
   145e8:	bne	1471c <main@@Base+0xaec>
   145ec:	b	145f0 <main@@Base+0x9c0>
   145f0:	ldr	r0, [fp, #-8]
   145f4:	ldr	r1, [fp, #-12]
   145f8:	str	r1, [fp, #-40]	; 0xffffffd8
   145fc:	ldr	r2, [fp, #-16]
   14600:	movw	r3, #2
   14604:	bl	17c14 <main@@Base+0x3fe4>
   14608:	str	r0, [fp, #-12]
   1460c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14610:	ldr	r1, [fp, #-12]
   14614:	cmp	r0, r1
   14618:	beq	14704 <main@@Base+0xad4>
   1461c:	movw	r0, #0
   14620:	strh	r0, [fp, #-56]	; 0xffffffc8
   14624:	ldr	r0, [fp, #-8]
   14628:	ldr	r1, [fp, #-12]
   1462c:	str	r1, [fp, #-40]	; 0xffffffd8
   14630:	ldr	r2, [fp, #-16]
   14634:	sub	r3, fp, #56	; 0x38
   14638:	bl	199e0 <main@@Base+0x5db0>
   1463c:	str	r0, [fp, #-12]
   14640:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14644:	ldr	r1, [fp, #-12]
   14648:	cmp	r0, r1
   1464c:	bne	146a0 <main@@Base+0xa70>
   14650:	ldr	r0, [pc, #4052]	; 1562c <main@@Base+0x19fc>
   14654:	add	r3, pc, r0
   14658:	ldr	r0, [fp, #-8]
   1465c:	ldr	r1, [fp, #-12]
   14660:	str	r1, [fp, #-40]	; 0xffffffd8
   14664:	ldr	r2, [fp, #-16]
   14668:	sub	ip, fp, #56	; 0x38
   1466c:	str	ip, [sp]
   14670:	bl	19abc <main@@Base+0x5e8c>
   14674:	str	r0, [fp, #-12]
   14678:	ldr	r0, [fp, #-12]
   1467c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14680:	cmp	r0, r1
   14684:	beq	14698 <main@@Base+0xa68>
   14688:	ldr	r0, [fp, #-12]
   1468c:	ldr	r1, [fp, #-16]
   14690:	cmp	r0, r1
   14694:	bne	1469c <main@@Base+0xa6c>
   14698:	b	17a04 <main@@Base+0x3dd4>
   1469c:	b	146a0 <main@@Base+0xa70>
   146a0:	ldrsh	r0, [fp, #-56]	; 0xffffffc8
   146a4:	cmp	r0, #100	; 0x64
   146a8:	bne	146c0 <main@@Base+0xa90>
   146ac:	ldr	r0, [fp, #-8]
   146b0:	ldr	r0, [r0, #8]
   146b4:	and	r0, r0, #2
   146b8:	cmp	r0, #0
   146bc:	beq	14700 <main@@Base+0xad0>
   146c0:	ldr	r0, [fp, #-8]
   146c4:	ldr	r0, [r0]
   146c8:	movw	r1, #2
   146cc:	str	r1, [sp, #32]
   146d0:	ldr	r2, [sp, #32]
   146d4:	movw	r3, #2
   146d8:	uxth	r3, r3
   146dc:	bl	27698 <flatcc_builder_table_add@@Base>
   146e0:	str	r0, [fp, #-28]	; 0xffffffe4
   146e4:	movw	r1, #0
   146e8:	cmp	r0, r1
   146ec:	bne	146f4 <main@@Base+0xac4>
   146f0:	b	17a04 <main@@Base+0x3dd4>
   146f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   146f8:	ldrsh	r1, [fp, #-56]	; 0xffffffc8
   146fc:	bl	19ce8 <main@@Base+0x60b8>
   14700:	b	14718 <main@@Base+0xae8>
   14704:	ldr	r0, [fp, #-8]
   14708:	ldr	r1, [fp, #-12]
   1470c:	ldr	r2, [fp, #-16]
   14710:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14714:	str	r0, [fp, #-12]
   14718:	b	14730 <main@@Base+0xb00>
   1471c:	ldr	r0, [fp, #-8]
   14720:	ldr	r1, [fp, #-12]
   14724:	ldr	r2, [fp, #-16]
   14728:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1472c:	str	r0, [fp, #-12]
   14730:	b	14abc <main@@Base+0xe8c>
   14734:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14738:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1473c:	movw	r2, #30309	; 0x7665
   14740:	movt	r2, #26990	; 0x696e
   14744:	eor	r1, r1, r2
   14748:	movw	r2, #28530	; 0x6f72
   1474c:	movt	r2, #28276	; 0x6e74
   14750:	eor	r0, r0, r2
   14754:	orr	r0, r0, r1
   14758:	cmp	r0, #0
   1475c:	bne	14960 <main@@Base+0xd30>
   14760:	b	14764 <main@@Base+0xb34>
   14764:	ldr	r0, [fp, #-12]
   14768:	add	r0, r0, #8
   1476c:	str	r0, [fp, #-12]
   14770:	ldr	r0, [fp, #-12]
   14774:	ldr	r1, [fp, #-16]
   14778:	bl	17bdc <main@@Base+0x3fac>
   1477c:	str	r1, [fp, #-44]	; 0xffffffd4
   14780:	str	r0, [fp, #-48]	; 0xffffffd0
   14784:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   14788:	mov	r1, #2030043136	; 0x79000000
   1478c:	teq	r1, r0, lsl #24
   14790:	bne	14948 <main@@Base+0xd18>
   14794:	b	14798 <main@@Base+0xb68>
   14798:	ldr	r0, [fp, #-8]
   1479c:	ldr	r1, [fp, #-12]
   147a0:	str	r1, [fp, #-40]	; 0xffffffd8
   147a4:	ldr	r2, [fp, #-16]
   147a8:	movw	r3, #1
   147ac:	bl	17c14 <main@@Base+0x3fe4>
   147b0:	str	r0, [fp, #-12]
   147b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147b8:	ldr	r1, [fp, #-12]
   147bc:	cmp	r0, r1
   147c0:	beq	14930 <main@@Base+0xd00>
   147c4:	ldr	r0, [fp, #-8]
   147c8:	ldr	r0, [r0]
   147cc:	movw	r1, #1
   147d0:	movw	r2, #1
   147d4:	uxth	r2, r2
   147d8:	mvn	r3, #0
   147dc:	bl	25980 <flatcc_builder_start_vector@@Base>
   147e0:	cmp	r0, #0
   147e4:	beq	147ec <main@@Base+0xbbc>
   147e8:	b	17a04 <main@@Base+0x3dd4>
   147ec:	ldr	r0, [fp, #-8]
   147f0:	ldr	r1, [fp, #-12]
   147f4:	ldr	r2, [fp, #-16]
   147f8:	sub	r3, fp, #24
   147fc:	bl	19464 <main@@Base+0x5834>
   14800:	str	r0, [fp, #-12]
   14804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14808:	cmp	r0, #0
   1480c:	beq	148e0 <main@@Base+0xcb0>
   14810:	movw	r0, #0
   14814:	strb	r0, [fp, #-57]	; 0xffffffc7
   14818:	ldr	r0, [fp, #-8]
   1481c:	ldr	r0, [r0]
   14820:	movw	r1, #1
   14824:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   14828:	str	r0, [fp, #-28]	; 0xffffffe4
   1482c:	movw	r1, #0
   14830:	cmp	r0, r1
   14834:	bne	1483c <main@@Base+0xc0c>
   14838:	b	17a04 <main@@Base+0x3dd4>
   1483c:	ldr	r0, [fp, #-8]
   14840:	ldr	r1, [fp, #-12]
   14844:	str	r1, [fp, #-40]	; 0xffffffd8
   14848:	ldr	r2, [fp, #-16]
   1484c:	sub	r3, fp, #57	; 0x39
   14850:	bl	19548 <main@@Base+0x5918>
   14854:	str	r0, [fp, #-12]
   14858:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1485c:	ldr	r1, [fp, #-12]
   14860:	cmp	r0, r1
   14864:	bne	148b8 <main@@Base+0xc88>
   14868:	ldr	r0, [pc, #4080]	; 15860 <main@@Base+0x1c30>
   1486c:	add	r3, pc, r0
   14870:	ldr	r0, [fp, #-8]
   14874:	ldr	r1, [fp, #-12]
   14878:	str	r1, [fp, #-40]	; 0xffffffd8
   1487c:	ldr	r2, [fp, #-16]
   14880:	sub	ip, fp, #57	; 0x39
   14884:	str	ip, [sp]
   14888:	bl	19624 <main@@Base+0x59f4>
   1488c:	str	r0, [fp, #-12]
   14890:	ldr	r0, [fp, #-12]
   14894:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14898:	cmp	r0, r1
   1489c:	beq	148b0 <main@@Base+0xc80>
   148a0:	ldr	r0, [fp, #-12]
   148a4:	ldr	r1, [fp, #-16]
   148a8:	cmp	r0, r1
   148ac:	bne	148b4 <main@@Base+0xc84>
   148b0:	b	17a04 <main@@Base+0x3dd4>
   148b4:	b	148b8 <main@@Base+0xc88>
   148b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   148bc:	ldrb	r1, [fp, #-57]	; 0xffffffc7
   148c0:	bl	19850 <main@@Base+0x5c20>
   148c4:	ldr	r0, [fp, #-8]
   148c8:	ldr	r1, [fp, #-12]
   148cc:	ldr	r2, [fp, #-16]
   148d0:	sub	r3, fp, #24
   148d4:	bl	1987c <main@@Base+0x5c4c>
   148d8:	str	r0, [fp, #-12]
   148dc:	b	14804 <main@@Base+0xbd4>
   148e0:	ldr	r0, [fp, #-8]
   148e4:	ldr	r0, [r0]
   148e8:	bl	26e60 <flatcc_builder_end_vector@@Base>
   148ec:	str	r0, [fp, #-32]	; 0xffffffe0
   148f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   148f4:	cmp	r0, #0
   148f8:	beq	1491c <main@@Base+0xcec>
   148fc:	ldr	r0, [fp, #-8]
   14900:	ldr	r0, [r0]
   14904:	movw	r1, #5
   14908:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1490c:	str	r0, [fp, #-36]	; 0xffffffdc
   14910:	movw	r1, #0
   14914:	cmp	r0, r1
   14918:	bne	14920 <main@@Base+0xcf0>
   1491c:	b	17a04 <main@@Base+0x3dd4>
   14920:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14924:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14928:	str	r0, [r1]
   1492c:	b	14944 <main@@Base+0xd14>
   14930:	ldr	r0, [fp, #-8]
   14934:	ldr	r1, [fp, #-12]
   14938:	ldr	r2, [fp, #-16]
   1493c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14940:	str	r0, [fp, #-12]
   14944:	b	1495c <main@@Base+0xd2c>
   14948:	ldr	r0, [fp, #-8]
   1494c:	ldr	r1, [fp, #-12]
   14950:	ldr	r2, [fp, #-16]
   14954:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14958:	str	r0, [fp, #-12]
   1495c:	b	14ab8 <main@@Base+0xe88>
   14960:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14964:	movw	r1, #28257	; 0x6e61
   14968:	movt	r1, #28001	; 0x6d61
   1496c:	teq	r0, r1
   14970:	bne	14aa0 <main@@Base+0xe70>
   14974:	b	14978 <main@@Base+0xd48>
   14978:	ldr	r0, [fp, #-8]
   1497c:	ldr	r1, [fp, #-12]
   14980:	str	r1, [fp, #-40]	; 0xffffffd8
   14984:	ldr	r2, [fp, #-16]
   14988:	movw	r3, #4
   1498c:	bl	17c14 <main@@Base+0x3fe4>
   14990:	str	r0, [fp, #-12]
   14994:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14998:	ldr	r1, [fp, #-12]
   1499c:	cmp	r0, r1
   149a0:	beq	14a88 <main@@Base+0xe58>
   149a4:	movw	r0, #0
   149a8:	strh	r0, [fp, #-60]	; 0xffffffc4
   149ac:	ldr	r0, [fp, #-8]
   149b0:	ldr	r1, [fp, #-12]
   149b4:	str	r1, [fp, #-40]	; 0xffffffd8
   149b8:	ldr	r2, [fp, #-16]
   149bc:	sub	r3, fp, #60	; 0x3c
   149c0:	bl	199e0 <main@@Base+0x5db0>
   149c4:	str	r0, [fp, #-12]
   149c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   149cc:	ldr	r1, [fp, #-12]
   149d0:	cmp	r0, r1
   149d4:	bne	14a28 <main@@Base+0xdf8>
   149d8:	ldr	r0, [pc, #4056]	; 159b8 <main@@Base+0x1d88>
   149dc:	add	r3, pc, r0
   149e0:	ldr	r0, [fp, #-8]
   149e4:	ldr	r1, [fp, #-12]
   149e8:	str	r1, [fp, #-40]	; 0xffffffd8
   149ec:	ldr	r2, [fp, #-16]
   149f0:	sub	ip, fp, #60	; 0x3c
   149f4:	str	ip, [sp]
   149f8:	bl	19abc <main@@Base+0x5e8c>
   149fc:	str	r0, [fp, #-12]
   14a00:	ldr	r0, [fp, #-12]
   14a04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a08:	cmp	r0, r1
   14a0c:	beq	14a20 <main@@Base+0xdf0>
   14a10:	ldr	r0, [fp, #-12]
   14a14:	ldr	r1, [fp, #-16]
   14a18:	cmp	r0, r1
   14a1c:	bne	14a24 <main@@Base+0xdf4>
   14a20:	b	17a04 <main@@Base+0x3dd4>
   14a24:	b	14a28 <main@@Base+0xdf8>
   14a28:	ldrsh	r0, [fp, #-60]	; 0xffffffc4
   14a2c:	cmp	r0, #150	; 0x96
   14a30:	bne	14a48 <main@@Base+0xe18>
   14a34:	ldr	r0, [fp, #-8]
   14a38:	ldr	r0, [r0, #8]
   14a3c:	and	r0, r0, #2
   14a40:	cmp	r0, #0
   14a44:	beq	14a84 <main@@Base+0xe54>
   14a48:	ldr	r0, [fp, #-8]
   14a4c:	ldr	r0, [r0]
   14a50:	movw	r1, #1
   14a54:	movw	r2, #2
   14a58:	movw	r3, #2
   14a5c:	uxth	r3, r3
   14a60:	bl	27698 <flatcc_builder_table_add@@Base>
   14a64:	str	r0, [fp, #-28]	; 0xffffffe4
   14a68:	movw	r1, #0
   14a6c:	cmp	r0, r1
   14a70:	bne	14a78 <main@@Base+0xe48>
   14a74:	b	17a04 <main@@Base+0x3dd4>
   14a78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14a7c:	ldrsh	r1, [fp, #-60]	; 0xffffffc4
   14a80:	bl	19ce8 <main@@Base+0x60b8>
   14a84:	b	14a9c <main@@Base+0xe6c>
   14a88:	ldr	r0, [fp, #-8]
   14a8c:	ldr	r1, [fp, #-12]
   14a90:	ldr	r2, [fp, #-16]
   14a94:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14a98:	str	r0, [fp, #-12]
   14a9c:	b	14ab4 <main@@Base+0xe84>
   14aa0:	ldr	r0, [fp, #-8]
   14aa4:	ldr	r1, [fp, #-12]
   14aa8:	ldr	r2, [fp, #-16]
   14aac:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14ab0:	str	r0, [fp, #-12]
   14ab4:	b	14ab8 <main@@Base+0xe88>
   14ab8:	b	14abc <main@@Base+0xe8c>
   14abc:	b	14ac0 <main@@Base+0xe90>
   14ac0:	b	14ac4 <main@@Base+0xe94>
   14ac4:	b	152cc <main@@Base+0x169c>
   14ac8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14acc:	movw	r1, #29555	; 0x7373
   14ad0:	movt	r1, #29797	; 0x7465
   14ad4:	cmp	r0, r1
   14ad8:	bhi	14e34 <main@@Base+0x1204>
   14adc:	b	14ae0 <main@@Base+0xeb0>
   14ae0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14ae4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ae8:	movw	r2, #24429	; 0x5f6d
   14aec:	movt	r2, #28276	; 0x6e74
   14af0:	subs	r0, r2, r0
   14af4:	movw	r2, #29285	; 0x7265
   14af8:	movt	r2, #28769	; 0x7061
   14afc:	sbcs	r1, r2, r1
   14b00:	bcc	14bd4 <main@@Base+0xfa4>
   14b04:	b	14b08 <main@@Base+0xed8>
   14b08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b0c:	movw	r1, #28005	; 0x6d65
   14b10:	movt	r1, #28257	; 0x6e61
   14b14:	teq	r0, r1
   14b18:	bne	14bbc <main@@Base+0xf8c>
   14b1c:	b	14b20 <main@@Base+0xef0>
   14b20:	ldr	r0, [fp, #-8]
   14b24:	ldr	r1, [fp, #-12]
   14b28:	str	r1, [fp, #-40]	; 0xffffffd8
   14b2c:	ldr	r2, [fp, #-16]
   14b30:	movw	r3, #4
   14b34:	bl	17c14 <main@@Base+0x3fe4>
   14b38:	str	r0, [fp, #-12]
   14b3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b40:	ldr	r1, [fp, #-12]
   14b44:	cmp	r0, r1
   14b48:	beq	14ba4 <main@@Base+0xf74>
   14b4c:	ldr	r0, [fp, #-8]
   14b50:	ldr	r1, [fp, #-12]
   14b54:	ldr	r2, [fp, #-16]
   14b58:	sub	r3, fp, #32
   14b5c:	bl	2dd04 <flatcc_json_parser_build_string@@Base>
   14b60:	str	r0, [fp, #-12]
   14b64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b68:	cmp	r0, #0
   14b6c:	beq	14b90 <main@@Base+0xf60>
   14b70:	ldr	r0, [fp, #-8]
   14b74:	ldr	r0, [r0]
   14b78:	movw	r1, #3
   14b7c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   14b80:	str	r0, [fp, #-36]	; 0xffffffdc
   14b84:	movw	r1, #0
   14b88:	cmp	r0, r1
   14b8c:	bne	14b94 <main@@Base+0xf64>
   14b90:	b	17a04 <main@@Base+0x3dd4>
   14b94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b9c:	str	r0, [r1]
   14ba0:	b	14bb8 <main@@Base+0xf88>
   14ba4:	ldr	r0, [fp, #-8]
   14ba8:	ldr	r1, [fp, #-12]
   14bac:	ldr	r2, [fp, #-16]
   14bb0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14bb4:	str	r0, [fp, #-12]
   14bb8:	b	14bd0 <main@@Base+0xfa0>
   14bbc:	ldr	r0, [fp, #-8]
   14bc0:	ldr	r1, [fp, #-12]
   14bc4:	ldr	r2, [fp, #-16]
   14bc8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14bcc:	str	r0, [fp, #-12]
   14bd0:	b	14e30 <main@@Base+0x1200>
   14bd4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14bd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14bdc:	movw	r2, #29285	; 0x7265
   14be0:	movt	r2, #28769	; 0x7061
   14be4:	eor	r1, r1, r2
   14be8:	movw	r2, #24430	; 0x5f6e
   14bec:	movt	r2, #28276	; 0x6e74
   14bf0:	eor	r0, r0, r2
   14bf4:	orr	r0, r0, r1
   14bf8:	cmp	r0, #0
   14bfc:	bne	14d68 <main@@Base+0x1138>
   14c00:	b	14c04 <main@@Base+0xfd4>
   14c04:	ldr	r0, [fp, #-12]
   14c08:	add	r0, r0, #8
   14c0c:	str	r0, [fp, #-12]
   14c10:	ldr	r0, [fp, #-12]
   14c14:	ldr	r1, [fp, #-16]
   14c18:	bl	17bdc <main@@Base+0x3fac>
   14c1c:	str	r1, [fp, #-44]	; 0xffffffd4
   14c20:	str	r0, [fp, #-48]	; 0xffffffd0
   14c24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14c28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c2c:	movw	r2, #25971	; 0x6573
   14c30:	movt	r2, #24941	; 0x616d
   14c34:	eor	r1, r1, r2
   14c38:	movw	r2, #25445	; 0x6365
   14c3c:	movt	r2, #28769	; 0x7061
   14c40:	eor	r0, r0, r2
   14c44:	orr	r0, r0, r1
   14c48:	cmp	r0, #0
   14c4c:	bne	14d50 <main@@Base+0x1120>
   14c50:	b	14c54 <main@@Base+0x1024>
   14c54:	ldr	r0, [fp, #-12]
   14c58:	add	r0, r0, #8
   14c5c:	str	r0, [fp, #-12]
   14c60:	ldr	r0, [fp, #-12]
   14c64:	ldr	r1, [fp, #-16]
   14c68:	bl	17bdc <main@@Base+0x3fac>
   14c6c:	str	r1, [fp, #-44]	; 0xffffffd4
   14c70:	str	r0, [fp, #-48]	; 0xffffffd0
   14c74:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14c78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c7c:	movw	r2, #25971	; 0x6573
   14c80:	movt	r2, #24436	; 0x5f74
   14c84:	eor	r1, r1, r2
   14c88:	eor	r0, r0, #116	; 0x74
   14c8c:	orr	r0, r1, r0, lsl #24
   14c90:	cmp	r0, #0
   14c94:	bne	14d38 <main@@Base+0x1108>
   14c98:	b	14c9c <main@@Base+0x106c>
   14c9c:	ldr	r0, [fp, #-8]
   14ca0:	ldr	r1, [fp, #-12]
   14ca4:	str	r1, [fp, #-40]	; 0xffffffd8
   14ca8:	ldr	r2, [fp, #-16]
   14cac:	movw	r3, #5
   14cb0:	bl	17c14 <main@@Base+0x3fe4>
   14cb4:	str	r0, [fp, #-12]
   14cb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14cbc:	ldr	r1, [fp, #-12]
   14cc0:	cmp	r0, r1
   14cc4:	beq	14d20 <main@@Base+0x10f0>
   14cc8:	ldr	r0, [fp, #-8]
   14ccc:	ldr	r1, [fp, #-12]
   14cd0:	ldr	r2, [fp, #-16]
   14cd4:	sub	r3, fp, #32
   14cd8:	bl	19d14 <main@@Base+0x60e4>
   14cdc:	str	r0, [fp, #-12]
   14ce0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ce4:	cmp	r0, #0
   14ce8:	beq	14d0c <main@@Base+0x10dc>
   14cec:	ldr	r0, [fp, #-8]
   14cf0:	ldr	r0, [r0]
   14cf4:	movw	r1, #34	; 0x22
   14cf8:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   14cfc:	str	r0, [fp, #-36]	; 0xffffffdc
   14d00:	movw	r1, #0
   14d04:	cmp	r0, r1
   14d08:	bne	14d10 <main@@Base+0x10e0>
   14d0c:	b	17a04 <main@@Base+0x3dd4>
   14d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14d18:	str	r0, [r1]
   14d1c:	b	14d34 <main@@Base+0x1104>
   14d20:	ldr	r0, [fp, #-8]
   14d24:	ldr	r1, [fp, #-12]
   14d28:	ldr	r2, [fp, #-16]
   14d2c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14d30:	str	r0, [fp, #-12]
   14d34:	b	14d4c <main@@Base+0x111c>
   14d38:	ldr	r0, [fp, #-8]
   14d3c:	ldr	r1, [fp, #-12]
   14d40:	ldr	r2, [fp, #-16]
   14d44:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14d48:	str	r0, [fp, #-12]
   14d4c:	b	14d64 <main@@Base+0x1134>
   14d50:	ldr	r0, [fp, #-8]
   14d54:	ldr	r1, [fp, #-12]
   14d58:	ldr	r2, [fp, #-16]
   14d5c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14d60:	str	r0, [fp, #-12]
   14d64:	b	14e2c <main@@Base+0x11fc>
   14d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d6c:	bic	r0, r0, #255	; 0xff
   14d70:	movw	r1, #29440	; 0x7300
   14d74:	movt	r1, #28783	; 0x706f
   14d78:	teq	r0, r1
   14d7c:	bne	14e14 <main@@Base+0x11e4>
   14d80:	b	14d84 <main@@Base+0x1154>
   14d84:	ldr	r0, [fp, #-8]
   14d88:	ldr	r1, [fp, #-12]
   14d8c:	str	r1, [fp, #-40]	; 0xffffffd8
   14d90:	ldr	r2, [fp, #-16]
   14d94:	movw	r3, #3
   14d98:	bl	17c14 <main@@Base+0x3fe4>
   14d9c:	str	r0, [fp, #-12]
   14da0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14da4:	ldr	r1, [fp, #-12]
   14da8:	cmp	r0, r1
   14dac:	beq	14dfc <main@@Base+0x11cc>
   14db0:	ldr	r0, [fp, #-8]
   14db4:	ldr	r0, [r0]
   14db8:	movw	r1, #0
   14dbc:	movw	r2, #32
   14dc0:	movw	r3, #16
   14dc4:	uxth	r3, r3
   14dc8:	bl	27698 <flatcc_builder_table_add@@Base>
   14dcc:	str	r0, [fp, #-28]	; 0xffffffe4
   14dd0:	movw	r1, #0
   14dd4:	cmp	r0, r1
   14dd8:	bne	14de0 <main@@Base+0x11b0>
   14ddc:	b	17a04 <main@@Base+0x3dd4>
   14de0:	ldr	r0, [fp, #-8]
   14de4:	ldr	r1, [fp, #-12]
   14de8:	ldr	r2, [fp, #-16]
   14dec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14df0:	bl	19e20 <main@@Base+0x61f0>
   14df4:	str	r0, [fp, #-12]
   14df8:	b	14e10 <main@@Base+0x11e0>
   14dfc:	ldr	r0, [fp, #-8]
   14e00:	ldr	r1, [fp, #-12]
   14e04:	ldr	r2, [fp, #-16]
   14e08:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14e0c:	str	r0, [fp, #-12]
   14e10:	b	14e28 <main@@Base+0x11f8>
   14e14:	ldr	r0, [fp, #-8]
   14e18:	ldr	r1, [fp, #-12]
   14e1c:	ldr	r2, [fp, #-16]
   14e20:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   14e24:	str	r0, [fp, #-12]
   14e28:	b	14e2c <main@@Base+0x11fc>
   14e2c:	b	14e30 <main@@Base+0x1200>
   14e30:	b	152c8 <main@@Base+0x1698>
   14e34:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14e38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e3c:	movw	r2, #29556	; 0x7374
   14e40:	movt	r2, #29797	; 0x7465
   14e44:	eor	r1, r1, r2
   14e48:	eor	r0, r0, #52	; 0x34
   14e4c:	orr	r0, r1, r0, lsl #24
   14e50:	cmp	r0, #0
   14e54:	bne	14f84 <main@@Base+0x1354>
   14e58:	b	14e5c <main@@Base+0x122c>
   14e5c:	ldr	r0, [fp, #-8]
   14e60:	ldr	r1, [fp, #-12]
   14e64:	str	r1, [fp, #-40]	; 0xffffffd8
   14e68:	ldr	r2, [fp, #-16]
   14e6c:	movw	r3, #5
   14e70:	bl	17c14 <main@@Base+0x3fe4>
   14e74:	str	r0, [fp, #-12]
   14e78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e7c:	ldr	r1, [fp, #-12]
   14e80:	cmp	r0, r1
   14e84:	beq	14f7c <main@@Base+0x134c>
   14e88:	ldr	r3, [pc, #4052]	; 15e64 <main@@Base+0x2234>
   14e8c:	ldr	r0, [fp, #-8]
   14e90:	ldr	r0, [r0]
   14e94:	movw	r1, #4
   14e98:	movw	r2, #2
   14e9c:	uxth	r2, r2
   14ea0:	bl	25980 <flatcc_builder_start_vector@@Base>
   14ea4:	cmp	r0, #0
   14ea8:	beq	14eb0 <main@@Base+0x1280>
   14eac:	b	17a04 <main@@Base+0x3dd4>
   14eb0:	ldr	r0, [fp, #-8]
   14eb4:	ldr	r1, [fp, #-12]
   14eb8:	ldr	r2, [fp, #-16]
   14ebc:	sub	r3, fp, #24
   14ec0:	bl	19464 <main@@Base+0x5834>
   14ec4:	str	r0, [fp, #-12]
   14ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ecc:	cmp	r0, #0
   14ed0:	beq	14f2c <main@@Base+0x12fc>
   14ed4:	ldr	r0, [fp, #-8]
   14ed8:	ldr	r0, [r0]
   14edc:	movw	r1, #1
   14ee0:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   14ee4:	str	r0, [fp, #-28]	; 0xffffffe4
   14ee8:	movw	r1, #0
   14eec:	cmp	r0, r1
   14ef0:	bne	14ef8 <main@@Base+0x12c8>
   14ef4:	b	17a04 <main@@Base+0x3dd4>
   14ef8:	ldr	r0, [fp, #-8]
   14efc:	ldr	r1, [fp, #-12]
   14f00:	ldr	r2, [fp, #-16]
   14f04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f08:	bl	1a53c <main@@Base+0x690c>
   14f0c:	str	r0, [fp, #-12]
   14f10:	ldr	r0, [fp, #-8]
   14f14:	ldr	r1, [fp, #-12]
   14f18:	ldr	r2, [fp, #-16]
   14f1c:	sub	r3, fp, #24
   14f20:	bl	1987c <main@@Base+0x5c4c>
   14f24:	str	r0, [fp, #-12]
   14f28:	b	14ec8 <main@@Base+0x1298>
   14f2c:	ldr	r0, [fp, #-8]
   14f30:	ldr	r0, [r0]
   14f34:	bl	26e60 <flatcc_builder_end_vector@@Base>
   14f38:	str	r0, [fp, #-32]	; 0xffffffe0
   14f3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f40:	cmp	r0, #0
   14f44:	beq	14f68 <main@@Base+0x1338>
   14f48:	ldr	r0, [fp, #-8]
   14f4c:	ldr	r0, [r0]
   14f50:	movw	r1, #9
   14f54:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   14f58:	str	r0, [fp, #-36]	; 0xffffffdc
   14f5c:	movw	r1, #0
   14f60:	cmp	r0, r1
   14f64:	bne	14f6c <main@@Base+0x133c>
   14f68:	b	17a04 <main@@Base+0x3dd4>
   14f6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14f74:	str	r0, [r1]
   14f78:	b	14f80 <main@@Base+0x1350>
   14f7c:	b	1502c <main@@Base+0x13fc>
   14f80:	b	15028 <main@@Base+0x13f8>
   14f84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f88:	movw	r1, #29556	; 0x7374
   14f8c:	movt	r1, #29797	; 0x7465
   14f90:	teq	r0, r1
   14f94:	bne	15020 <main@@Base+0x13f0>
   14f98:	b	14f9c <main@@Base+0x136c>
   14f9c:	ldr	r0, [fp, #-8]
   14fa0:	ldr	r1, [fp, #-12]
   14fa4:	str	r1, [fp, #-40]	; 0xffffffd8
   14fa8:	ldr	r2, [fp, #-16]
   14fac:	movw	r3, #4
   14fb0:	bl	17c14 <main@@Base+0x3fe4>
   14fb4:	str	r0, [fp, #-12]
   14fb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14fbc:	ldr	r1, [fp, #-12]
   14fc0:	cmp	r0, r1
   14fc4:	beq	15018 <main@@Base+0x13e8>
   14fc8:	ldr	r0, [pc, #4024]	; 15f88 <main@@Base+0x2358>
   14fcc:	add	r0, pc, r0
   14fd0:	ldr	r1, [fp, #-8]
   14fd4:	ldr	r2, [fp, #-12]
   14fd8:	ldr	r3, [fp, #-16]
   14fdc:	ldr	ip, [fp, #-52]	; 0xffffffcc
   14fe0:	str	r0, [sp, #28]
   14fe4:	mov	r0, r1
   14fe8:	mov	r1, r2
   14fec:	mov	r2, r3
   14ff0:	movw	r3, #0
   14ff4:	movw	lr, #8
   14ff8:	uxth	lr, lr
   14ffc:	str	lr, [sp]
   15000:	str	ip, [sp, #4]
   15004:	ldr	ip, [sp, #28]
   15008:	str	ip, [sp, #8]
   1500c:	bl	2e030 <flatcc_json_parser_union@@Base>
   15010:	str	r0, [fp, #-12]
   15014:	b	1501c <main@@Base+0x13ec>
   15018:	b	1502c <main@@Base+0x13fc>
   1501c:	b	15024 <main@@Base+0x13f4>
   15020:	b	1502c <main@@Base+0x13fc>
   15024:	b	15028 <main@@Base+0x13f8>
   15028:	b	152c4 <main@@Base+0x1694>
   1502c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15030:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15034:	movw	r2, #29556	; 0x7374
   15038:	movt	r2, #29797	; 0x7465
   1503c:	eor	r1, r1, r2
   15040:	eor	r0, r0, #53	; 0x35
   15044:	orr	r0, r1, r0, lsl #24
   15048:	cmp	r0, #0
   1504c:	bne	1517c <main@@Base+0x154c>
   15050:	b	15054 <main@@Base+0x1424>
   15054:	ldr	r0, [fp, #-8]
   15058:	ldr	r1, [fp, #-12]
   1505c:	str	r1, [fp, #-40]	; 0xffffffd8
   15060:	ldr	r2, [fp, #-16]
   15064:	movw	r3, #5
   15068:	bl	17c14 <main@@Base+0x3fe4>
   1506c:	str	r0, [fp, #-12]
   15070:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15074:	ldr	r1, [fp, #-12]
   15078:	cmp	r0, r1
   1507c:	beq	15174 <main@@Base+0x1544>
   15080:	ldr	r3, [pc, #3548]	; 15e64 <main@@Base+0x2234>
   15084:	ldr	r0, [fp, #-8]
   15088:	ldr	r0, [r0]
   1508c:	movw	r1, #4
   15090:	movw	r2, #2
   15094:	uxth	r2, r2
   15098:	bl	25980 <flatcc_builder_start_vector@@Base>
   1509c:	cmp	r0, #0
   150a0:	beq	150a8 <main@@Base+0x1478>
   150a4:	b	17a04 <main@@Base+0x3dd4>
   150a8:	ldr	r0, [fp, #-8]
   150ac:	ldr	r1, [fp, #-12]
   150b0:	ldr	r2, [fp, #-16]
   150b4:	sub	r3, fp, #24
   150b8:	bl	19464 <main@@Base+0x5834>
   150bc:	str	r0, [fp, #-12]
   150c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150c4:	cmp	r0, #0
   150c8:	beq	15124 <main@@Base+0x14f4>
   150cc:	ldr	r0, [fp, #-8]
   150d0:	ldr	r0, [r0]
   150d4:	movw	r1, #1
   150d8:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   150dc:	str	r0, [fp, #-28]	; 0xffffffe4
   150e0:	movw	r1, #0
   150e4:	cmp	r0, r1
   150e8:	bne	150f0 <main@@Base+0x14c0>
   150ec:	b	17a04 <main@@Base+0x3dd4>
   150f0:	ldr	r0, [fp, #-8]
   150f4:	ldr	r1, [fp, #-12]
   150f8:	ldr	r2, [fp, #-16]
   150fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15100:	bl	1a53c <main@@Base+0x690c>
   15104:	str	r0, [fp, #-12]
   15108:	ldr	r0, [fp, #-8]
   1510c:	ldr	r1, [fp, #-12]
   15110:	ldr	r2, [fp, #-16]
   15114:	sub	r3, fp, #24
   15118:	bl	1987c <main@@Base+0x5c4c>
   1511c:	str	r0, [fp, #-12]
   15120:	b	150c0 <main@@Base+0x1490>
   15124:	ldr	r0, [fp, #-8]
   15128:	ldr	r0, [r0]
   1512c:	bl	26e60 <flatcc_builder_end_vector@@Base>
   15130:	str	r0, [fp, #-32]	; 0xffffffe0
   15134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15138:	cmp	r0, #0
   1513c:	beq	15160 <main@@Base+0x1530>
   15140:	ldr	r0, [fp, #-8]
   15144:	ldr	r0, [r0]
   15148:	movw	r1, #31
   1514c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   15150:	str	r0, [fp, #-36]	; 0xffffffdc
   15154:	movw	r1, #0
   15158:	cmp	r0, r1
   1515c:	bne	15164 <main@@Base+0x1534>
   15160:	b	17a04 <main@@Base+0x3dd4>
   15164:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15168:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1516c:	str	r0, [r1]
   15170:	b	15178 <main@@Base+0x1548>
   15174:	b	15184 <main@@Base+0x1554>
   15178:	b	15180 <main@@Base+0x1550>
   1517c:	b	15184 <main@@Base+0x1554>
   15180:	b	152c0 <main@@Base+0x1690>
   15184:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15188:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1518c:	movw	r2, #29556	; 0x7374
   15190:	movt	r2, #29797	; 0x7465
   15194:	eor	r1, r1, r2
   15198:	movw	r2, #31088	; 0x7970
   1519c:	movt	r2, #24436	; 0x5f74
   151a0:	eor	r0, r0, r2
   151a4:	orr	r0, r0, r1
   151a8:	cmp	r0, #0
   151ac:	bne	152a8 <main@@Base+0x1678>
   151b0:	b	151b4 <main@@Base+0x1584>
   151b4:	ldr	r0, [fp, #-12]
   151b8:	add	r0, r0, #8
   151bc:	str	r0, [fp, #-12]
   151c0:	ldr	r0, [fp, #-12]
   151c4:	ldr	r1, [fp, #-16]
   151c8:	bl	17bdc <main@@Base+0x3fac>
   151cc:	str	r1, [fp, #-44]	; 0xffffffd4
   151d0:	str	r0, [fp, #-48]	; 0xffffffd0
   151d4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   151d8:	mov	r1, #1694498816	; 0x65000000
   151dc:	teq	r1, r0, lsl #24
   151e0:	bne	15290 <main@@Base+0x1660>
   151e4:	b	151e8 <main@@Base+0x15b8>
   151e8:	ldr	r0, [fp, #-8]
   151ec:	ldr	r1, [fp, #-12]
   151f0:	str	r1, [fp, #-40]	; 0xffffffd8
   151f4:	ldr	r2, [fp, #-16]
   151f8:	movw	r3, #1
   151fc:	bl	17c14 <main@@Base+0x3fe4>
   15200:	str	r0, [fp, #-12]
   15204:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15208:	ldr	r1, [fp, #-12]
   1520c:	cmp	r0, r1
   15210:	beq	15278 <main@@Base+0x1648>
   15214:	ldr	r0, [pc, #4040]	; 161e4 <main@@Base+0x25b4>
   15218:	add	r0, pc, r0
   1521c:	ldr	r1, [pc, #4036]	; 161e8 <main@@Base+0x25b8>
   15220:	add	r1, pc, r1
   15224:	ldr	r2, [fp, #-8]
   15228:	ldr	r3, [fp, #-12]
   1522c:	ldr	ip, [fp, #-16]
   15230:	ldr	lr, [fp, #-52]	; 0xffffffcc
   15234:	str	r0, [sp, #24]
   15238:	mov	r0, r2
   1523c:	str	r1, [sp, #20]
   15240:	mov	r1, r3
   15244:	mov	r2, ip
   15248:	movw	r3, #0
   1524c:	movw	ip, #8
   15250:	uxth	ip, ip
   15254:	str	ip, [sp]
   15258:	str	lr, [sp, #4]
   1525c:	ldr	ip, [sp, #24]
   15260:	str	ip, [sp, #8]
   15264:	ldr	lr, [sp, #20]
   15268:	str	lr, [sp, #12]
   1526c:	bl	2e21c <flatcc_json_parser_union_type@@Base>
   15270:	str	r0, [fp, #-12]
   15274:	b	1528c <main@@Base+0x165c>
   15278:	ldr	r0, [fp, #-8]
   1527c:	ldr	r1, [fp, #-12]
   15280:	ldr	r2, [fp, #-16]
   15284:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15288:	str	r0, [fp, #-12]
   1528c:	b	152a4 <main@@Base+0x1674>
   15290:	ldr	r0, [fp, #-8]
   15294:	ldr	r1, [fp, #-12]
   15298:	ldr	r2, [fp, #-16]
   1529c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   152a0:	str	r0, [fp, #-12]
   152a4:	b	152bc <main@@Base+0x168c>
   152a8:	ldr	r0, [fp, #-8]
   152ac:	ldr	r1, [fp, #-12]
   152b0:	ldr	r2, [fp, #-16]
   152b4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   152b8:	str	r0, [fp, #-12]
   152bc:	b	152c0 <main@@Base+0x1690>
   152c0:	b	152c4 <main@@Base+0x1694>
   152c4:	b	152c8 <main@@Base+0x1698>
   152c8:	b	152cc <main@@Base+0x169c>
   152cc:	b	17950 <main@@Base+0x3d20>
   152d0:			; <UNDEFINED> instruction: 0x0002fdbc
   152d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   152d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152dc:	movw	r2, #65535	; 0xffff
   152e0:	movt	r2, #26162	; 0x6632
   152e4:	subs	r0, r2, r0
   152e8:	movw	r2, #29556	; 0x7374
   152ec:	movt	r2, #29797	; 0x7465
   152f0:	sbcs	r1, r2, r1
   152f4:	bcc	16348 <main@@Base+0x2718>
   152f8:	b	152fc <main@@Base+0x16cc>
   152fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15300:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15304:	movw	r2, #29556	; 0x7374
   15308:	movt	r2, #29797	; 0x7465
   1530c:	eor	r1, r1, r2
   15310:	movw	r2, #29281	; 0x7261
   15314:	movt	r2, #24946	; 0x6172
   15318:	eor	r0, r0, r2
   1531c:	orr	r0, r0, r1
   15320:	cmp	r0, #0
   15324:	bne	15c44 <main@@Base+0x2014>
   15328:	b	1532c <main@@Base+0x16fc>
   1532c:	ldr	r0, [fp, #-12]
   15330:	add	r0, r0, #8
   15334:	str	r0, [fp, #-12]
   15338:	ldr	r0, [fp, #-12]
   1533c:	ldr	r1, [fp, #-16]
   15340:	bl	17bdc <main@@Base+0x3fac>
   15344:	str	r1, [fp, #-44]	; 0xffffffd4
   15348:	str	r0, [fp, #-48]	; 0xffffffd0
   1534c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15350:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15354:	movw	r2, #26989	; 0x696d
   15358:	movt	r2, #29810	; 0x7472
   1535c:	subs	r0, r2, r0
   15360:	movw	r2, #26227	; 0x6673
   15364:	movt	r2, #31087	; 0x796f
   15368:	sbcs	r1, r2, r1
   1536c:	bcc	15748 <main@@Base+0x1b18>
   15370:	b	15374 <main@@Base+0x1744>
   15374:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15378:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1537c:	movw	r2, #26210	; 0x6662
   15380:	movt	r2, #31087	; 0x796f
   15384:	eor	r1, r1, r2
   15388:	movw	r2, #27763	; 0x6c73
   1538c:	movt	r2, #28527	; 0x6f6f
   15390:	eor	r0, r0, r2
   15394:	orr	r0, r0, r1
   15398:	cmp	r0, #0
   1539c:	bne	15548 <main@@Base+0x1918>
   153a0:	b	153a4 <main@@Base+0x1774>
   153a4:	ldr	r0, [fp, #-8]
   153a8:	ldr	r1, [fp, #-12]
   153ac:	str	r1, [fp, #-40]	; 0xffffffd8
   153b0:	ldr	r2, [fp, #-16]
   153b4:	movw	r3, #8
   153b8:	bl	17c14 <main@@Base+0x3fe4>
   153bc:	str	r0, [fp, #-12]
   153c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   153c4:	ldr	r1, [fp, #-12]
   153c8:	cmp	r0, r1
   153cc:	beq	15540 <main@@Base+0x1910>
   153d0:	ldr	r0, [fp, #-8]
   153d4:	ldr	r0, [r0]
   153d8:	movw	r1, #1
   153dc:	movw	r2, #1
   153e0:	uxth	r2, r2
   153e4:	mvn	r3, #0
   153e8:	bl	25980 <flatcc_builder_start_vector@@Base>
   153ec:	cmp	r0, #0
   153f0:	beq	153f8 <main@@Base+0x17c8>
   153f4:	b	17a04 <main@@Base+0x3dd4>
   153f8:	ldr	r0, [fp, #-8]
   153fc:	ldr	r1, [fp, #-12]
   15400:	ldr	r2, [fp, #-16]
   15404:	sub	r3, fp, #24
   15408:	bl	19464 <main@@Base+0x5834>
   1540c:	str	r0, [fp, #-12]
   15410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15414:	cmp	r0, #0
   15418:	beq	154f0 <main@@Base+0x18c0>
   1541c:	movw	r0, #0
   15420:	strb	r0, [fp, #-61]	; 0xffffffc3
   15424:	ldr	r0, [fp, #-8]
   15428:	ldr	r0, [r0]
   1542c:	movw	r1, #1
   15430:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   15434:	str	r0, [fp, #-28]	; 0xffffffe4
   15438:	movw	r1, #0
   1543c:	cmp	r0, r1
   15440:	bne	1544c <main@@Base+0x181c>
   15444:	b	17a04 <main@@Base+0x3dd4>
   15448:	andeq	pc, r2, r8, ror #23
   1544c:	ldr	r0, [fp, #-8]
   15450:	ldr	r1, [fp, #-12]
   15454:	str	r1, [fp, #-40]	; 0xffffffd8
   15458:	ldr	r2, [fp, #-16]
   1545c:	sub	r3, fp, #61	; 0x3d
   15460:	bl	1ae0c <main@@Base+0x71dc>
   15464:	str	r0, [fp, #-12]
   15468:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1546c:	ldr	r1, [fp, #-12]
   15470:	cmp	r0, r1
   15474:	bne	154c8 <main@@Base+0x1898>
   15478:	ldr	r0, [pc, #4044]	; 1644c <main@@Base+0x281c>
   1547c:	add	r3, pc, r0
   15480:	ldr	r0, [fp, #-8]
   15484:	ldr	r1, [fp, #-12]
   15488:	str	r1, [fp, #-40]	; 0xffffffd8
   1548c:	ldr	r2, [fp, #-16]
   15490:	sub	ip, fp, #61	; 0x3d
   15494:	str	ip, [sp]
   15498:	bl	1af28 <main@@Base+0x72f8>
   1549c:	str	r0, [fp, #-12]
   154a0:	ldr	r0, [fp, #-12]
   154a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   154a8:	cmp	r0, r1
   154ac:	beq	154c0 <main@@Base+0x1890>
   154b0:	ldr	r0, [fp, #-12]
   154b4:	ldr	r1, [fp, #-16]
   154b8:	cmp	r0, r1
   154bc:	bne	154c4 <main@@Base+0x1894>
   154c0:	b	17a04 <main@@Base+0x3dd4>
   154c4:	b	154c8 <main@@Base+0x1898>
   154c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   154cc:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   154d0:	bl	1b154 <main@@Base+0x7524>
   154d4:	ldr	r0, [fp, #-8]
   154d8:	ldr	r1, [fp, #-12]
   154dc:	ldr	r2, [fp, #-16]
   154e0:	sub	r3, fp, #24
   154e4:	bl	1987c <main@@Base+0x5c4c>
   154e8:	str	r0, [fp, #-12]
   154ec:	b	15410 <main@@Base+0x17e0>
   154f0:	ldr	r0, [fp, #-8]
   154f4:	ldr	r0, [r0]
   154f8:	bl	26e60 <flatcc_builder_end_vector@@Base>
   154fc:	str	r0, [fp, #-32]	; 0xffffffe0
   15500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15504:	cmp	r0, #0
   15508:	beq	1552c <main@@Base+0x18fc>
   1550c:	ldr	r0, [fp, #-8]
   15510:	ldr	r0, [r0]
   15514:	movw	r1, #24
   15518:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1551c:	str	r0, [fp, #-36]	; 0xffffffdc
   15520:	movw	r1, #0
   15524:	cmp	r0, r1
   15528:	bne	15530 <main@@Base+0x1900>
   1552c:	b	17a04 <main@@Base+0x3dd4>
   15530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15534:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15538:	str	r0, [r1]
   1553c:	b	15544 <main@@Base+0x1914>
   15540:	b	15550 <main@@Base+0x1920>
   15544:	b	1554c <main@@Base+0x191c>
   15548:	b	15550 <main@@Base+0x1920>
   1554c:	b	15744 <main@@Base+0x1b14>
   15550:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15554:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15558:	movw	r2, #26227	; 0x6673
   1555c:	movt	r2, #31087	; 0x796f
   15560:	eor	r1, r1, r2
   15564:	movw	r2, #29797	; 0x7465
   15568:	movt	r2, #28530	; 0x6f72
   1556c:	eor	r0, r0, r2
   15570:	orr	r0, r0, r1
   15574:	cmp	r0, #0
   15578:	bne	1572c <main@@Base+0x1afc>
   1557c:	b	15580 <main@@Base+0x1950>
   15580:	ldr	r0, [fp, #-12]
   15584:	add	r0, r0, #8
   15588:	str	r0, [fp, #-12]
   1558c:	ldr	r0, [fp, #-12]
   15590:	ldr	r1, [fp, #-16]
   15594:	bl	17bdc <main@@Base+0x3fac>
   15598:	str	r1, [fp, #-44]	; 0xffffffd4
   1559c:	str	r0, [fp, #-48]	; 0xffffffd0
   155a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155a8:	movw	r2, #29556	; 0x7374
   155ac:	movt	r2, #100	; 0x64
   155b0:	eor	r2, r2, r1, lsr #8
   155b4:	lsr	r0, r0, #8
   155b8:	orr	r0, r0, r1, lsl #24
   155bc:	movw	r1, #25460	; 0x6374
   155c0:	movt	r1, #29301	; 0x7275
   155c4:	eor	r0, r0, r1
   155c8:	orr	r0, r0, r2
   155cc:	cmp	r0, #0
   155d0:	bne	15714 <main@@Base+0x1ae4>
   155d4:	b	155d8 <main@@Base+0x19a8>
   155d8:	ldr	r0, [fp, #-8]
   155dc:	ldr	r1, [fp, #-12]
   155e0:	str	r1, [fp, #-40]	; 0xffffffd8
   155e4:	ldr	r2, [fp, #-16]
   155e8:	movw	r3, #7
   155ec:	bl	17c14 <main@@Base+0x3fe4>
   155f0:	str	r0, [fp, #-12]
   155f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   155f8:	ldr	r1, [fp, #-12]
   155fc:	cmp	r0, r1
   15600:	beq	156fc <main@@Base+0x1acc>
   15604:	ldr	r3, [pc, #3980]	; 16598 <main@@Base+0x2968>
   15608:	ldr	r0, [fp, #-8]
   1560c:	ldr	r0, [r0]
   15610:	movw	r1, #8
   15614:	movw	r2, #4
   15618:	uxth	r2, r2
   1561c:	bl	25980 <flatcc_builder_start_vector@@Base>
   15620:	cmp	r0, #0
   15624:	beq	15630 <main@@Base+0x1a00>
   15628:	b	17a04 <main@@Base+0x3dd4>
   1562c:	andeq	pc, r2, ip, asr sl	; <UNPREDICTABLE>
   15630:	ldr	r0, [fp, #-8]
   15634:	ldr	r1, [fp, #-12]
   15638:	ldr	r2, [fp, #-16]
   1563c:	sub	r3, fp, #24
   15640:	bl	19464 <main@@Base+0x5834>
   15644:	str	r0, [fp, #-12]
   15648:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1564c:	cmp	r0, #0
   15650:	beq	156ac <main@@Base+0x1a7c>
   15654:	ldr	r0, [fp, #-8]
   15658:	ldr	r0, [r0]
   1565c:	movw	r1, #1
   15660:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   15664:	str	r0, [fp, #-28]	; 0xffffffe4
   15668:	movw	r1, #0
   1566c:	cmp	r0, r1
   15670:	bne	15678 <main@@Base+0x1a48>
   15674:	b	17a04 <main@@Base+0x3dd4>
   15678:	ldr	r0, [fp, #-8]
   1567c:	ldr	r1, [fp, #-12]
   15680:	ldr	r2, [fp, #-16]
   15684:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15688:	bl	1b180 <main@@Base+0x7550>
   1568c:	str	r0, [fp, #-12]
   15690:	ldr	r0, [fp, #-8]
   15694:	ldr	r1, [fp, #-12]
   15698:	ldr	r2, [fp, #-16]
   1569c:	sub	r3, fp, #24
   156a0:	bl	1987c <main@@Base+0x5c4c>
   156a4:	str	r0, [fp, #-12]
   156a8:	b	15648 <main@@Base+0x1a18>
   156ac:	ldr	r0, [fp, #-8]
   156b0:	ldr	r0, [r0]
   156b4:	bl	26e60 <flatcc_builder_end_vector@@Base>
   156b8:	str	r0, [fp, #-32]	; 0xffffffe0
   156bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156c0:	cmp	r0, #0
   156c4:	beq	156e8 <main@@Base+0x1ab8>
   156c8:	ldr	r0, [fp, #-8]
   156cc:	ldr	r0, [r0]
   156d0:	movw	r1, #29
   156d4:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   156d8:	str	r0, [fp, #-36]	; 0xffffffdc
   156dc:	movw	r1, #0
   156e0:	cmp	r0, r1
   156e4:	bne	156ec <main@@Base+0x1abc>
   156e8:	b	17a04 <main@@Base+0x3dd4>
   156ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   156f4:	str	r0, [r1]
   156f8:	b	15710 <main@@Base+0x1ae0>
   156fc:	ldr	r0, [fp, #-8]
   15700:	ldr	r1, [fp, #-12]
   15704:	ldr	r2, [fp, #-16]
   15708:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1570c:	str	r0, [fp, #-12]
   15710:	b	15728 <main@@Base+0x1af8>
   15714:	ldr	r0, [fp, #-8]
   15718:	ldr	r1, [fp, #-12]
   1571c:	ldr	r2, [fp, #-16]
   15720:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15724:	str	r0, [fp, #-12]
   15728:	b	15740 <main@@Base+0x1b10>
   1572c:	ldr	r0, [fp, #-8]
   15730:	ldr	r1, [fp, #-12]
   15734:	ldr	r2, [fp, #-16]
   15738:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1573c:	str	r0, [fp, #-12]
   15740:	b	15744 <main@@Base+0x1b14>
   15744:	b	15c40 <main@@Base+0x2010>
   15748:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1574c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15750:	movw	r2, #26227	; 0x6673
   15754:	movt	r2, #31087	; 0x796f
   15758:	eor	r1, r1, r2
   1575c:	movw	r2, #26990	; 0x696e
   15760:	movt	r2, #29810	; 0x7472
   15764:	eor	r0, r0, r2
   15768:	orr	r0, r0, r1
   1576c:	cmp	r0, #0
   15770:	bne	15a68 <main@@Base+0x1e38>
   15774:	b	15778 <main@@Base+0x1b48>
   15778:	ldr	r0, [fp, #-12]
   1577c:	add	r0, r0, #8
   15780:	str	r0, [fp, #-12]
   15784:	ldr	r0, [fp, #-12]
   15788:	ldr	r1, [fp, #-16]
   1578c:	bl	17bdc <main@@Base+0x3fac>
   15790:	str	r1, [fp, #-44]	; 0xffffffd4
   15794:	str	r0, [fp, #-48]	; 0xffffffd0
   15798:	ldrh	r0, [fp, #-42]	; 0xffffffd6
   1579c:	movw	r1, #0
   157a0:	movt	r1, #26418	; 0x6732
   157a4:	teq	r1, r0, lsl #16
   157a8:	bne	158f4 <main@@Base+0x1cc4>
   157ac:	b	157b0 <main@@Base+0x1b80>
   157b0:	ldr	r0, [fp, #-8]
   157b4:	ldr	r1, [fp, #-12]
   157b8:	str	r1, [fp, #-40]	; 0xffffffd8
   157bc:	ldr	r2, [fp, #-16]
   157c0:	movw	r3, #2
   157c4:	bl	17c14 <main@@Base+0x3fe4>
   157c8:	str	r0, [fp, #-12]
   157cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   157d0:	ldr	r1, [fp, #-12]
   157d4:	cmp	r0, r1
   157d8:	beq	158dc <main@@Base+0x1cac>
   157dc:	ldr	r0, [fp, #-8]
   157e0:	ldr	r0, [r0]
   157e4:	bl	25a60 <flatcc_builder_start_offset_vector@@Base>
   157e8:	cmp	r0, #0
   157ec:	beq	157f4 <main@@Base+0x1bc4>
   157f0:	b	17a04 <main@@Base+0x3dd4>
   157f4:	ldr	r0, [fp, #-8]
   157f8:	ldr	r1, [fp, #-12]
   157fc:	ldr	r2, [fp, #-16]
   15800:	sub	r3, fp, #24
   15804:	bl	19464 <main@@Base+0x5834>
   15808:	str	r0, [fp, #-12]
   1580c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15810:	cmp	r0, #0
   15814:	beq	1588c <main@@Base+0x1c5c>
   15818:	ldr	r0, [fp, #-8]
   1581c:	ldr	r1, [fp, #-12]
   15820:	ldr	r2, [fp, #-16]
   15824:	sub	r3, fp, #32
   15828:	bl	2dd04 <flatcc_json_parser_build_string@@Base>
   1582c:	str	r0, [fp, #-12]
   15830:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15834:	cmp	r0, #0
   15838:	beq	1585c <main@@Base+0x1c2c>
   1583c:	ldr	r0, [fp, #-8]
   15840:	ldr	r0, [r0]
   15844:	movw	r1, #1
   15848:	bl	251f4 <flatcc_builder_extend_offset_vector@@Base>
   1584c:	str	r0, [fp, #-36]	; 0xffffffdc
   15850:	movw	r1, #0
   15854:	cmp	r0, r1
   15858:	bne	15864 <main@@Base+0x1c34>
   1585c:	b	17a04 <main@@Base+0x3dd4>
   15860:	andeq	pc, r2, r0, asr r8	; <UNPREDICTABLE>
   15864:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15868:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1586c:	str	r0, [r1]
   15870:	ldr	r0, [fp, #-8]
   15874:	ldr	r1, [fp, #-12]
   15878:	ldr	r2, [fp, #-16]
   1587c:	sub	r3, fp, #24
   15880:	bl	1987c <main@@Base+0x5c4c>
   15884:	str	r0, [fp, #-12]
   15888:	b	1580c <main@@Base+0x1bdc>
   1588c:	ldr	r0, [fp, #-8]
   15890:	ldr	r0, [r0]
   15894:	bl	25b6c <flatcc_builder_end_offset_vector@@Base>
   15898:	str	r0, [fp, #-32]	; 0xffffffe0
   1589c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158a0:	cmp	r0, #0
   158a4:	beq	158c8 <main@@Base+0x1c98>
   158a8:	ldr	r0, [fp, #-8]
   158ac:	ldr	r0, [r0]
   158b0:	movw	r1, #28
   158b4:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   158b8:	str	r0, [fp, #-36]	; 0xffffffdc
   158bc:	movw	r1, #0
   158c0:	cmp	r0, r1
   158c4:	bne	158cc <main@@Base+0x1c9c>
   158c8:	b	17a04 <main@@Base+0x3dd4>
   158cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   158d4:	str	r0, [r1]
   158d8:	b	158f0 <main@@Base+0x1cc0>
   158dc:	ldr	r0, [fp, #-8]
   158e0:	ldr	r1, [fp, #-12]
   158e4:	ldr	r2, [fp, #-16]
   158e8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   158ec:	str	r0, [fp, #-12]
   158f0:	b	15a64 <main@@Base+0x1e34>
   158f4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   158f8:	mov	r1, #1728053248	; 0x67000000
   158fc:	teq	r1, r0, lsl #24
   15900:	bne	15a4c <main@@Base+0x1e1c>
   15904:	b	15908 <main@@Base+0x1cd8>
   15908:	ldr	r0, [fp, #-8]
   1590c:	ldr	r1, [fp, #-12]
   15910:	str	r1, [fp, #-40]	; 0xffffffd8
   15914:	ldr	r2, [fp, #-16]
   15918:	movw	r3, #1
   1591c:	bl	17c14 <main@@Base+0x3fe4>
   15920:	str	r0, [fp, #-12]
   15924:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15928:	ldr	r1, [fp, #-12]
   1592c:	cmp	r0, r1
   15930:	beq	15a34 <main@@Base+0x1e04>
   15934:	ldr	r0, [fp, #-8]
   15938:	ldr	r0, [r0]
   1593c:	bl	25a60 <flatcc_builder_start_offset_vector@@Base>
   15940:	cmp	r0, #0
   15944:	beq	1594c <main@@Base+0x1d1c>
   15948:	b	17a04 <main@@Base+0x3dd4>
   1594c:	ldr	r0, [fp, #-8]
   15950:	ldr	r1, [fp, #-12]
   15954:	ldr	r2, [fp, #-16]
   15958:	sub	r3, fp, #24
   1595c:	bl	19464 <main@@Base+0x5834>
   15960:	str	r0, [fp, #-12]
   15964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15968:	cmp	r0, #0
   1596c:	beq	159e4 <main@@Base+0x1db4>
   15970:	ldr	r0, [fp, #-8]
   15974:	ldr	r1, [fp, #-12]
   15978:	ldr	r2, [fp, #-16]
   1597c:	sub	r3, fp, #32
   15980:	bl	2dd04 <flatcc_json_parser_build_string@@Base>
   15984:	str	r0, [fp, #-12]
   15988:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1598c:	cmp	r0, #0
   15990:	beq	159b4 <main@@Base+0x1d84>
   15994:	ldr	r0, [fp, #-8]
   15998:	ldr	r0, [r0]
   1599c:	movw	r1, #1
   159a0:	bl	251f4 <flatcc_builder_extend_offset_vector@@Base>
   159a4:	str	r0, [fp, #-36]	; 0xffffffdc
   159a8:	movw	r1, #0
   159ac:	cmp	r0, r1
   159b0:	bne	159bc <main@@Base+0x1d8c>
   159b4:	b	17a04 <main@@Base+0x3dd4>
   159b8:	andeq	pc, r2, ip, ror #13
   159bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   159c4:	str	r0, [r1]
   159c8:	ldr	r0, [fp, #-8]
   159cc:	ldr	r1, [fp, #-12]
   159d0:	ldr	r2, [fp, #-16]
   159d4:	sub	r3, fp, #24
   159d8:	bl	1987c <main@@Base+0x5c4c>
   159dc:	str	r0, [fp, #-12]
   159e0:	b	15964 <main@@Base+0x1d34>
   159e4:	ldr	r0, [fp, #-8]
   159e8:	ldr	r0, [r0]
   159ec:	bl	25b6c <flatcc_builder_end_offset_vector@@Base>
   159f0:	str	r0, [fp, #-32]	; 0xffffffe0
   159f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159f8:	cmp	r0, #0
   159fc:	beq	15a20 <main@@Base+0x1df0>
   15a00:	ldr	r0, [fp, #-8]
   15a04:	ldr	r0, [r0]
   15a08:	movw	r1, #10
   15a0c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   15a10:	str	r0, [fp, #-36]	; 0xffffffdc
   15a14:	movw	r1, #0
   15a18:	cmp	r0, r1
   15a1c:	bne	15a24 <main@@Base+0x1df4>
   15a20:	b	17a04 <main@@Base+0x3dd4>
   15a24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15a2c:	str	r0, [r1]
   15a30:	b	15a48 <main@@Base+0x1e18>
   15a34:	ldr	r0, [fp, #-8]
   15a38:	ldr	r1, [fp, #-12]
   15a3c:	ldr	r2, [fp, #-16]
   15a40:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15a44:	str	r0, [fp, #-12]
   15a48:	b	15a60 <main@@Base+0x1e30>
   15a4c:	ldr	r0, [fp, #-8]
   15a50:	ldr	r1, [fp, #-12]
   15a54:	ldr	r2, [fp, #-16]
   15a58:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15a5c:	str	r0, [fp, #-12]
   15a60:	b	15a64 <main@@Base+0x1e34>
   15a64:	b	15c3c <main@@Base+0x200c>
   15a68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15a6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a70:	movw	r2, #26228	; 0x6674
   15a74:	movt	r2, #31087	; 0x796f
   15a78:	eor	r1, r1, r2
   15a7c:	movw	r2, #27749	; 0x6c65
   15a80:	movt	r2, #24930	; 0x6162
   15a84:	eor	r0, r0, r2
   15a88:	orr	r0, r0, r1
   15a8c:	cmp	r0, #0
   15a90:	bne	15c24 <main@@Base+0x1ff4>
   15a94:	b	15a98 <main@@Base+0x1e68>
   15a98:	ldr	r0, [fp, #-12]
   15a9c:	add	r0, r0, #8
   15aa0:	str	r0, [fp, #-12]
   15aa4:	ldr	r0, [fp, #-12]
   15aa8:	ldr	r1, [fp, #-16]
   15aac:	bl	17bdc <main@@Base+0x3fac>
   15ab0:	str	r1, [fp, #-44]	; 0xffffffd4
   15ab4:	str	r0, [fp, #-48]	; 0xffffffd0
   15ab8:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   15abc:	mov	r1, #1929379840	; 0x73000000
   15ac0:	teq	r1, r0, lsl #24
   15ac4:	bne	15c0c <main@@Base+0x1fdc>
   15ac8:	b	15acc <main@@Base+0x1e9c>
   15acc:	ldr	r0, [fp, #-8]
   15ad0:	ldr	r1, [fp, #-12]
   15ad4:	str	r1, [fp, #-40]	; 0xffffffd8
   15ad8:	ldr	r2, [fp, #-16]
   15adc:	movw	r3, #1
   15ae0:	bl	17c14 <main@@Base+0x3fe4>
   15ae4:	str	r0, [fp, #-12]
   15ae8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15aec:	ldr	r1, [fp, #-12]
   15af0:	cmp	r0, r1
   15af4:	beq	15bf4 <main@@Base+0x1fc4>
   15af8:	ldr	r0, [fp, #-8]
   15afc:	ldr	r0, [r0]
   15b00:	bl	25a60 <flatcc_builder_start_offset_vector@@Base>
   15b04:	cmp	r0, #0
   15b08:	beq	15b10 <main@@Base+0x1ee0>
   15b0c:	b	17a04 <main@@Base+0x3dd4>
   15b10:	ldr	r0, [fp, #-8]
   15b14:	ldr	r1, [fp, #-12]
   15b18:	ldr	r2, [fp, #-16]
   15b1c:	sub	r3, fp, #24
   15b20:	bl	19464 <main@@Base+0x5834>
   15b24:	str	r0, [fp, #-12]
   15b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b2c:	cmp	r0, #0
   15b30:	beq	15ba4 <main@@Base+0x1f74>
   15b34:	ldr	r0, [fp, #-8]
   15b38:	ldr	r1, [fp, #-12]
   15b3c:	ldr	r2, [fp, #-16]
   15b40:	sub	r3, fp, #32
   15b44:	bl	14060 <main@@Base+0x430>
   15b48:	str	r0, [fp, #-12]
   15b4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b50:	cmp	r0, #0
   15b54:	beq	15b78 <main@@Base+0x1f48>
   15b58:	ldr	r0, [fp, #-8]
   15b5c:	ldr	r0, [r0]
   15b60:	movw	r1, #1
   15b64:	bl	251f4 <flatcc_builder_extend_offset_vector@@Base>
   15b68:	str	r0, [fp, #-36]	; 0xffffffdc
   15b6c:	movw	r1, #0
   15b70:	cmp	r0, r1
   15b74:	bne	15b7c <main@@Base+0x1f4c>
   15b78:	b	17a04 <main@@Base+0x3dd4>
   15b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15b84:	str	r0, [r1]
   15b88:	ldr	r0, [fp, #-8]
   15b8c:	ldr	r1, [fp, #-12]
   15b90:	ldr	r2, [fp, #-16]
   15b94:	sub	r3, fp, #24
   15b98:	bl	1987c <main@@Base+0x5c4c>
   15b9c:	str	r0, [fp, #-12]
   15ba0:	b	15b28 <main@@Base+0x1ef8>
   15ba4:	ldr	r0, [fp, #-8]
   15ba8:	ldr	r0, [r0]
   15bac:	bl	25b6c <flatcc_builder_end_offset_vector@@Base>
   15bb0:	str	r0, [fp, #-32]	; 0xffffffe0
   15bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bb8:	cmp	r0, #0
   15bbc:	beq	15be0 <main@@Base+0x1fb0>
   15bc0:	ldr	r0, [fp, #-8]
   15bc4:	ldr	r0, [r0]
   15bc8:	movw	r1, #11
   15bcc:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   15bd0:	str	r0, [fp, #-36]	; 0xffffffdc
   15bd4:	movw	r1, #0
   15bd8:	cmp	r0, r1
   15bdc:	bne	15be4 <main@@Base+0x1fb4>
   15be0:	b	17a04 <main@@Base+0x3dd4>
   15be4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15be8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15bec:	str	r0, [r1]
   15bf0:	b	15c08 <main@@Base+0x1fd8>
   15bf4:	ldr	r0, [fp, #-8]
   15bf8:	ldr	r1, [fp, #-12]
   15bfc:	ldr	r2, [fp, #-16]
   15c00:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15c04:	str	r0, [fp, #-12]
   15c08:	b	15c20 <main@@Base+0x1ff0>
   15c0c:	ldr	r0, [fp, #-8]
   15c10:	ldr	r1, [fp, #-12]
   15c14:	ldr	r2, [fp, #-16]
   15c18:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15c1c:	str	r0, [fp, #-12]
   15c20:	b	15c38 <main@@Base+0x2008>
   15c24:	ldr	r0, [fp, #-8]
   15c28:	ldr	r1, [fp, #-12]
   15c2c:	ldr	r2, [fp, #-16]
   15c30:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15c34:	str	r0, [fp, #-12]
   15c38:	b	15c3c <main@@Base+0x200c>
   15c3c:	b	15c40 <main@@Base+0x2010>
   15c40:	b	16344 <main@@Base+0x2714>
   15c44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c4c:	movw	r2, #28787	; 0x7073
   15c50:	movt	r2, #25965	; 0x656d
   15c54:	subs	r0, r2, r0
   15c58:	movw	r2, #29556	; 0x7374
   15c5c:	movt	r2, #29797	; 0x7465
   15c60:	sbcs	r1, r2, r1
   15c64:	bcc	15f00 <main@@Base+0x22d0>
   15c68:	b	15c6c <main@@Base+0x203c>
   15c6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c74:	movw	r2, #29556	; 0x7374
   15c78:	movt	r2, #29797	; 0x7465
   15c7c:	eor	r1, r1, r2
   15c80:	movw	r2, #29541	; 0x7365
   15c84:	movt	r2, #25185	; 0x6261
   15c88:	eor	r0, r0, r2
   15c8c:	orr	r0, r0, r1
   15c90:	cmp	r0, #0
   15c94:	bne	15d88 <main@@Base+0x2158>
   15c98:	b	15c9c <main@@Base+0x206c>
   15c9c:	ldr	r0, [fp, #-12]
   15ca0:	add	r0, r0, #8
   15ca4:	str	r0, [fp, #-12]
   15ca8:	ldr	r0, [fp, #-12]
   15cac:	ldr	r1, [fp, #-16]
   15cb0:	bl	17bdc <main@@Base+0x3fac>
   15cb4:	str	r1, [fp, #-44]	; 0xffffffd4
   15cb8:	str	r0, [fp, #-48]	; 0xffffffd0
   15cbc:	ldrh	r0, [fp, #-42]	; 0xffffffd6
   15cc0:	movw	r1, #0
   15cc4:	movt	r1, #13876	; 0x3634
   15cc8:	teq	r1, r0, lsl #16
   15ccc:	bne	15d70 <main@@Base+0x2140>
   15cd0:	b	15cd4 <main@@Base+0x20a4>
   15cd4:	ldr	r0, [fp, #-8]
   15cd8:	ldr	r1, [fp, #-12]
   15cdc:	str	r1, [fp, #-40]	; 0xffffffd8
   15ce0:	ldr	r2, [fp, #-16]
   15ce4:	movw	r3, #2
   15ce8:	bl	17c14 <main@@Base+0x3fe4>
   15cec:	str	r0, [fp, #-12]
   15cf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15cf4:	ldr	r1, [fp, #-12]
   15cf8:	cmp	r0, r1
   15cfc:	beq	15d58 <main@@Base+0x2128>
   15d00:	ldr	r0, [fp, #-8]
   15d04:	ldr	r1, [fp, #-12]
   15d08:	ldr	r2, [fp, #-16]
   15d0c:	sub	r3, fp, #32
   15d10:	bl	1b464 <main@@Base+0x7834>
   15d14:	str	r0, [fp, #-12]
   15d18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d1c:	cmp	r0, #0
   15d20:	beq	15d44 <main@@Base+0x2114>
   15d24:	ldr	r0, [fp, #-8]
   15d28:	ldr	r0, [r0]
   15d2c:	movw	r1, #35	; 0x23
   15d30:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   15d34:	str	r0, [fp, #-36]	; 0xffffffdc
   15d38:	movw	r1, #0
   15d3c:	cmp	r0, r1
   15d40:	bne	15d48 <main@@Base+0x2118>
   15d44:	b	17a04 <main@@Base+0x3dd4>
   15d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15d50:	str	r0, [r1]
   15d54:	b	15d6c <main@@Base+0x213c>
   15d58:	ldr	r0, [fp, #-8]
   15d5c:	ldr	r1, [fp, #-12]
   15d60:	ldr	r2, [fp, #-16]
   15d64:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15d68:	str	r0, [fp, #-12]
   15d6c:	b	15d84 <main@@Base+0x2154>
   15d70:	ldr	r0, [fp, #-8]
   15d74:	ldr	r1, [fp, #-12]
   15d78:	ldr	r2, [fp, #-16]
   15d7c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15d80:	str	r0, [fp, #-12]
   15d84:	b	15efc <main@@Base+0x22cc>
   15d88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d90:	movw	r2, #29556	; 0x7374
   15d94:	movt	r2, #29797	; 0x7465
   15d98:	eor	r1, r1, r2
   15d9c:	movw	r2, #28524	; 0x6f6c
   15da0:	movt	r2, #25199	; 0x626f
   15da4:	eor	r0, r0, r2
   15da8:	orr	r0, r0, r1
   15dac:	cmp	r0, #0
   15db0:	bne	15ee4 <main@@Base+0x22b4>
   15db4:	b	15db8 <main@@Base+0x2188>
   15db8:	ldr	r0, [fp, #-8]
   15dbc:	ldr	r1, [fp, #-12]
   15dc0:	str	r1, [fp, #-40]	; 0xffffffd8
   15dc4:	ldr	r2, [fp, #-16]
   15dc8:	movw	r3, #8
   15dcc:	bl	17c14 <main@@Base+0x3fe4>
   15dd0:	str	r0, [fp, #-12]
   15dd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15dd8:	ldr	r1, [fp, #-12]
   15ddc:	cmp	r0, r1
   15de0:	beq	15ecc <main@@Base+0x229c>
   15de4:	movw	r0, #0
   15de8:	strb	r0, [fp, #-62]	; 0xffffffc2
   15dec:	ldr	r0, [fp, #-8]
   15df0:	ldr	r1, [fp, #-12]
   15df4:	str	r1, [fp, #-40]	; 0xffffffd8
   15df8:	ldr	r2, [fp, #-16]
   15dfc:	sub	r3, fp, #62	; 0x3e
   15e00:	bl	1ae0c <main@@Base+0x71dc>
   15e04:	str	r0, [fp, #-12]
   15e08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e0c:	ldr	r1, [fp, #-12]
   15e10:	cmp	r0, r1
   15e14:	bne	15e6c <main@@Base+0x223c>
   15e18:	ldr	r0, [pc, #4064]	; 16e00 <main@@Base+0x31d0>
   15e1c:	add	r3, pc, r0
   15e20:	ldr	r0, [fp, #-8]
   15e24:	ldr	r1, [fp, #-12]
   15e28:	str	r1, [fp, #-40]	; 0xffffffd8
   15e2c:	ldr	r2, [fp, #-16]
   15e30:	sub	ip, fp, #62	; 0x3e
   15e34:	str	ip, [sp]
   15e38:	bl	1af28 <main@@Base+0x72f8>
   15e3c:	str	r0, [fp, #-12]
   15e40:	ldr	r0, [fp, #-12]
   15e44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15e48:	cmp	r0, r1
   15e4c:	beq	15e60 <main@@Base+0x2230>
   15e50:	ldr	r0, [fp, #-12]
   15e54:	ldr	r1, [fp, #-16]
   15e58:	cmp	r0, r1
   15e5c:	bne	15e68 <main@@Base+0x2238>
   15e60:	b	17a04 <main@@Base+0x3dd4>
   15e64:	svccc	0x00ffffff
   15e68:	b	15e6c <main@@Base+0x223c>
   15e6c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15e70:	cmp	r0, #1
   15e74:	bne	15e8c <main@@Base+0x225c>
   15e78:	ldr	r0, [fp, #-8]
   15e7c:	ldr	r0, [r0, #8]
   15e80:	and	r0, r0, #2
   15e84:	cmp	r0, #0
   15e88:	beq	15ec8 <main@@Base+0x2298>
   15e8c:	ldr	r0, [fp, #-8]
   15e90:	ldr	r0, [r0]
   15e94:	movw	r1, #15
   15e98:	movw	r2, #1
   15e9c:	movw	r3, #1
   15ea0:	uxth	r3, r3
   15ea4:	bl	27698 <flatcc_builder_table_add@@Base>
   15ea8:	str	r0, [fp, #-28]	; 0xffffffe4
   15eac:	movw	r1, #0
   15eb0:	cmp	r0, r1
   15eb4:	bne	15ebc <main@@Base+0x228c>
   15eb8:	b	17a04 <main@@Base+0x3dd4>
   15ebc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15ec0:	ldrb	r1, [fp, #-62]	; 0xffffffc2
   15ec4:	bl	1b154 <main@@Base+0x7524>
   15ec8:	b	15ee0 <main@@Base+0x22b0>
   15ecc:	ldr	r0, [fp, #-8]
   15ed0:	ldr	r1, [fp, #-12]
   15ed4:	ldr	r2, [fp, #-16]
   15ed8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15edc:	str	r0, [fp, #-12]
   15ee0:	b	15ef8 <main@@Base+0x22c8>
   15ee4:	ldr	r0, [fp, #-8]
   15ee8:	ldr	r1, [fp, #-12]
   15eec:	ldr	r2, [fp, #-16]
   15ef0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   15ef4:	str	r0, [fp, #-12]
   15ef8:	b	15efc <main@@Base+0x22cc>
   15efc:	b	16340 <main@@Base+0x2710>
   15f00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f08:	mvn	r2, #-1711276032	; 0x9a000000
   15f0c:	subs	r0, r2, r0
   15f10:	movw	r2, #29556	; 0x7374
   15f14:	movt	r2, #29797	; 0x7465
   15f18:	sbcs	r1, r2, r1
   15f1c:	bcc	16058 <main@@Base+0x2428>
   15f20:	b	15f24 <main@@Base+0x22f4>
   15f24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f2c:	movw	r2, #29556	; 0x7374
   15f30:	movt	r2, #29797	; 0x7465
   15f34:	eor	r1, r1, r2
   15f38:	movw	r2, #28788	; 0x7074
   15f3c:	movt	r2, #25965	; 0x656d
   15f40:	eor	r0, r0, r2
   15f44:	orr	r0, r0, r1
   15f48:	cmp	r0, #0
   15f4c:	bne	16040 <main@@Base+0x2410>
   15f50:	b	15f54 <main@@Base+0x2324>
   15f54:	ldr	r0, [fp, #-12]
   15f58:	add	r0, r0, #8
   15f5c:	str	r0, [fp, #-12]
   15f60:	ldr	r0, [fp, #-12]
   15f64:	ldr	r1, [fp, #-16]
   15f68:	bl	17bdc <main@@Base+0x3fac>
   15f6c:	str	r1, [fp, #-44]	; 0xffffffd4
   15f70:	str	r0, [fp, #-48]	; 0xffffffd0
   15f74:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   15f78:	mov	r1, #2030043136	; 0x79000000
   15f7c:	teq	r1, r0, lsl #24
   15f80:	bne	16028 <main@@Base+0x23f8>
   15f84:	b	15f8c <main@@Base+0x235c>
   15f88:	andeq	r5, r0, ip, lsr #16
   15f8c:	ldr	r0, [fp, #-8]
   15f90:	ldr	r1, [fp, #-12]
   15f94:	str	r1, [fp, #-40]	; 0xffffffd8
   15f98:	ldr	r2, [fp, #-16]
   15f9c:	movw	r3, #1
   15fa0:	bl	17c14 <main@@Base+0x3fe4>
   15fa4:	str	r0, [fp, #-12]
   15fa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15fac:	ldr	r1, [fp, #-12]
   15fb0:	cmp	r0, r1
   15fb4:	beq	16010 <main@@Base+0x23e0>
   15fb8:	ldr	r0, [fp, #-8]
   15fbc:	ldr	r1, [fp, #-12]
   15fc0:	ldr	r2, [fp, #-16]
   15fc4:	sub	r3, fp, #32
   15fc8:	bl	1b83c <main@@Base+0x7c0c>
   15fcc:	str	r0, [fp, #-12]
   15fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fd4:	cmp	r0, #0
   15fd8:	beq	15ffc <main@@Base+0x23cc>
   15fdc:	ldr	r0, [fp, #-8]
   15fe0:	ldr	r0, [r0]
   15fe4:	movw	r1, #14
   15fe8:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   15fec:	str	r0, [fp, #-36]	; 0xffffffdc
   15ff0:	movw	r1, #0
   15ff4:	cmp	r0, r1
   15ff8:	bne	16000 <main@@Base+0x23d0>
   15ffc:	b	17a04 <main@@Base+0x3dd4>
   16000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16004:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16008:	str	r0, [r1]
   1600c:	b	16024 <main@@Base+0x23f4>
   16010:	ldr	r0, [fp, #-8]
   16014:	ldr	r1, [fp, #-12]
   16018:	ldr	r2, [fp, #-16]
   1601c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16020:	str	r0, [fp, #-12]
   16024:	b	1603c <main@@Base+0x240c>
   16028:	ldr	r0, [fp, #-8]
   1602c:	ldr	r1, [fp, #-12]
   16030:	ldr	r2, [fp, #-16]
   16034:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16038:	str	r0, [fp, #-12]
   1603c:	b	16054 <main@@Base+0x2424>
   16040:	ldr	r0, [fp, #-8]
   16044:	ldr	r1, [fp, #-12]
   16048:	ldr	r2, [fp, #-16]
   1604c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16050:	str	r0, [fp, #-12]
   16054:	b	1633c <main@@Base+0x270c>
   16058:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   1605c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16060:	movw	r2, #29797	; 0x7465
   16064:	eor	r2, r2, r1, lsr #16
   16068:	orr	r0, r0, r1, lsl #16
   1606c:	movw	r1, #26162	; 0x6632
   16070:	movt	r1, #29556	; 0x7374
   16074:	eor	r0, r0, r1
   16078:	orr	r0, r0, r2
   1607c:	cmp	r0, #0
   16080:	bne	161bc <main@@Base+0x258c>
   16084:	b	16088 <main@@Base+0x2458>
   16088:	ldr	r0, [fp, #-8]
   1608c:	ldr	r1, [fp, #-12]
   16090:	str	r1, [fp, #-40]	; 0xffffffd8
   16094:	ldr	r2, [fp, #-16]
   16098:	movw	r3, #6
   1609c:	bl	17c14 <main@@Base+0x3fe4>
   160a0:	str	r0, [fp, #-12]
   160a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160a8:	ldr	r1, [fp, #-12]
   160ac:	cmp	r0, r1
   160b0:	beq	161a4 <main@@Base+0x2574>
   160b4:	vldr	s0, [pc, #1008]	; 164ac <main@@Base+0x287c>
   160b8:	vstr	s0, [fp, #-68]	; 0xffffffbc
   160bc:	ldr	r0, [fp, #-8]
   160c0:	ldr	r1, [fp, #-12]
   160c4:	str	r1, [fp, #-40]	; 0xffffffd8
   160c8:	ldr	r2, [fp, #-16]
   160cc:	sub	r3, fp, #68	; 0x44
   160d0:	bl	2c7e0 <flatcc_json_parser_float@@Base>
   160d4:	str	r0, [fp, #-12]
   160d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160dc:	ldr	r1, [fp, #-12]
   160e0:	cmp	r0, r1
   160e4:	bne	16138 <main@@Base+0x2508>
   160e8:	ldr	r0, [pc, #4084]	; 170e4 <main@@Base+0x34b4>
   160ec:	add	r3, pc, r0
   160f0:	ldr	r0, [fp, #-8]
   160f4:	ldr	r1, [fp, #-12]
   160f8:	str	r1, [fp, #-40]	; 0xffffffd8
   160fc:	ldr	r2, [fp, #-16]
   16100:	sub	ip, fp, #68	; 0x44
   16104:	str	ip, [sp]
   16108:	bl	1bd00 <main@@Base+0x80d0>
   1610c:	str	r0, [fp, #-12]
   16110:	ldr	r0, [fp, #-12]
   16114:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16118:	cmp	r0, r1
   1611c:	beq	16130 <main@@Base+0x2500>
   16120:	ldr	r0, [fp, #-12]
   16124:	ldr	r1, [fp, #-16]
   16128:	cmp	r0, r1
   1612c:	bne	16134 <main@@Base+0x2504>
   16130:	b	17a04 <main@@Base+0x3dd4>
   16134:	b	16138 <main@@Base+0x2508>
   16138:	vldr	s0, [fp, #-68]	; 0xffffffbc
   1613c:	vcvt.f64.f32	d16, s0
   16140:	vmov.f64	d17, #8	; 0x40400000  3.0
   16144:	vcmp.f64	d16, d17
   16148:	vmrs	APSR_nzcv, fpscr
   1614c:	bne	16164 <main@@Base+0x2534>
   16150:	ldr	r0, [fp, #-8]
   16154:	ldr	r0, [r0, #8]
   16158:	and	r0, r0, #2
   1615c:	cmp	r0, #0
   16160:	beq	161a0 <main@@Base+0x2570>
   16164:	ldr	r0, [fp, #-8]
   16168:	ldr	r0, [r0]
   1616c:	movw	r1, #26
   16170:	movw	r2, #4
   16174:	movw	r3, #4
   16178:	uxth	r3, r3
   1617c:	bl	27698 <flatcc_builder_table_add@@Base>
   16180:	str	r0, [fp, #-28]	; 0xffffffe4
   16184:	movw	r1, #0
   16188:	cmp	r0, r1
   1618c:	bne	16194 <main@@Base+0x2564>
   16190:	b	17a04 <main@@Base+0x3dd4>
   16194:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16198:	vldr	s0, [fp, #-68]	; 0xffffffbc
   1619c:	bl	1bf30 <main@@Base+0x8300>
   161a0:	b	161b8 <main@@Base+0x2588>
   161a4:	ldr	r0, [fp, #-8]
   161a8:	ldr	r1, [fp, #-12]
   161ac:	ldr	r2, [fp, #-16]
   161b0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   161b4:	str	r0, [fp, #-12]
   161b8:	b	16338 <main@@Base+0x2708>
   161bc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   161c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   161c4:	movw	r2, #29556	; 0x7374
   161c8:	movt	r2, #29797	; 0x7465
   161cc:	eor	r1, r1, r2
   161d0:	eor	r0, r0, #102	; 0x66
   161d4:	orr	r0, r1, r0, lsl #24
   161d8:	cmp	r0, #0
   161dc:	bne	16320 <main@@Base+0x26f0>
   161e0:	b	161ec <main@@Base+0x25bc>
   161e4:			; <UNDEFINED> instruction: 0x0002eebc
   161e8:	ldrdeq	r5, [r0], -r8
   161ec:	ldr	r0, [fp, #-8]
   161f0:	ldr	r1, [fp, #-12]
   161f4:	str	r1, [fp, #-40]	; 0xffffffd8
   161f8:	ldr	r2, [fp, #-16]
   161fc:	movw	r3, #5
   16200:	bl	17c14 <main@@Base+0x3fe4>
   16204:	str	r0, [fp, #-12]
   16208:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1620c:	ldr	r1, [fp, #-12]
   16210:	cmp	r0, r1
   16214:	beq	16308 <main@@Base+0x26d8>
   16218:	vldr	s0, [pc, #652]	; 164ac <main@@Base+0x287c>
   1621c:	vstr	s0, [fp, #-72]	; 0xffffffb8
   16220:	ldr	r0, [fp, #-8]
   16224:	ldr	r1, [fp, #-12]
   16228:	str	r1, [fp, #-40]	; 0xffffffd8
   1622c:	ldr	r2, [fp, #-16]
   16230:	sub	r3, fp, #72	; 0x48
   16234:	bl	2c7e0 <flatcc_json_parser_float@@Base>
   16238:	str	r0, [fp, #-12]
   1623c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16240:	ldr	r1, [fp, #-12]
   16244:	cmp	r0, r1
   16248:	bne	1629c <main@@Base+0x266c>
   1624c:	ldr	r0, [pc, #4020]	; 17208 <main@@Base+0x35d8>
   16250:	add	r3, pc, r0
   16254:	ldr	r0, [fp, #-8]
   16258:	ldr	r1, [fp, #-12]
   1625c:	str	r1, [fp, #-40]	; 0xffffffd8
   16260:	ldr	r2, [fp, #-16]
   16264:	sub	ip, fp, #72	; 0x48
   16268:	str	ip, [sp]
   1626c:	bl	1bd00 <main@@Base+0x80d0>
   16270:	str	r0, [fp, #-12]
   16274:	ldr	r0, [fp, #-12]
   16278:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1627c:	cmp	r0, r1
   16280:	beq	16294 <main@@Base+0x2664>
   16284:	ldr	r0, [fp, #-12]
   16288:	ldr	r1, [fp, #-16]
   1628c:	cmp	r0, r1
   16290:	bne	16298 <main@@Base+0x2668>
   16294:	b	17a04 <main@@Base+0x3dd4>
   16298:	b	1629c <main@@Base+0x266c>
   1629c:	vldr	d16, [pc, #932]	; 16648 <main@@Base+0x2a18>
   162a0:	vldr	s0, [fp, #-72]	; 0xffffffb8
   162a4:	vcvt.f64.f32	d17, s0
   162a8:	vcmp.f64	d17, d16
   162ac:	vmrs	APSR_nzcv, fpscr
   162b0:	bne	162c8 <main@@Base+0x2698>
   162b4:	ldr	r0, [fp, #-8]
   162b8:	ldr	r0, [r0, #8]
   162bc:	and	r0, r0, #2
   162c0:	cmp	r0, #0
   162c4:	beq	16304 <main@@Base+0x26d4>
   162c8:	ldr	r0, [fp, #-8]
   162cc:	ldr	r0, [r0]
   162d0:	movw	r1, #25
   162d4:	movw	r2, #4
   162d8:	movw	r3, #4
   162dc:	uxth	r3, r3
   162e0:	bl	27698 <flatcc_builder_table_add@@Base>
   162e4:	str	r0, [fp, #-28]	; 0xffffffe4
   162e8:	movw	r1, #0
   162ec:	cmp	r0, r1
   162f0:	bne	162f8 <main@@Base+0x26c8>
   162f4:	b	17a04 <main@@Base+0x3dd4>
   162f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   162fc:	vldr	s0, [fp, #-72]	; 0xffffffb8
   16300:	bl	1bf30 <main@@Base+0x8300>
   16304:	b	1631c <main@@Base+0x26ec>
   16308:	ldr	r0, [fp, #-8]
   1630c:	ldr	r1, [fp, #-12]
   16310:	ldr	r2, [fp, #-16]
   16314:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16318:	str	r0, [fp, #-12]
   1631c:	b	16334 <main@@Base+0x2704>
   16320:	ldr	r0, [fp, #-8]
   16324:	ldr	r1, [fp, #-12]
   16328:	ldr	r2, [fp, #-16]
   1632c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16330:	str	r0, [fp, #-12]
   16334:	b	16338 <main@@Base+0x2708>
   16338:	b	1633c <main@@Base+0x270c>
   1633c:	b	16340 <main@@Base+0x2710>
   16340:	b	16344 <main@@Base+0x2714>
   16344:	b	1794c <main@@Base+0x3d1c>
   16348:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1634c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16350:	movw	r2, #29543	; 0x7367
   16354:	movt	r2, #26721	; 0x6861
   16358:	subs	r0, r2, r0
   1635c:	movw	r2, #29556	; 0x7374
   16360:	movt	r2, #29797	; 0x7465
   16364:	sbcs	r1, r2, r1
   16368:	bcc	164f0 <main@@Base+0x28c0>
   1636c:	b	16370 <main@@Base+0x2740>
   16370:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   16374:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16378:	movw	r2, #29797	; 0x7465
   1637c:	eor	r2, r2, r1, lsr #16
   16380:	orr	r0, r0, r1, lsl #16
   16384:	movw	r1, #26163	; 0x6633
   16388:	movt	r1, #29556	; 0x7374
   1638c:	eor	r0, r0, r1
   16390:	orr	r0, r0, r2
   16394:	cmp	r0, #0
   16398:	bne	164d8 <main@@Base+0x28a8>
   1639c:	b	163a0 <main@@Base+0x2770>
   163a0:	ldr	r0, [fp, #-8]
   163a4:	ldr	r1, [fp, #-12]
   163a8:	str	r1, [fp, #-40]	; 0xffffffd8
   163ac:	ldr	r2, [fp, #-16]
   163b0:	movw	r3, #6
   163b4:	bl	17c14 <main@@Base+0x3fe4>
   163b8:	str	r0, [fp, #-12]
   163bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   163c0:	ldr	r1, [fp, #-12]
   163c4:	cmp	r0, r1
   163c8:	beq	164c0 <main@@Base+0x2890>
   163cc:	vldr	s0, [pc, #216]	; 164ac <main@@Base+0x287c>
   163d0:	vstr	s0, [fp, #-76]	; 0xffffffb4
   163d4:	ldr	r0, [fp, #-8]
   163d8:	ldr	r1, [fp, #-12]
   163dc:	str	r1, [fp, #-40]	; 0xffffffd8
   163e0:	ldr	r2, [fp, #-16]
   163e4:	sub	r3, fp, #76	; 0x4c
   163e8:	bl	2c7e0 <flatcc_json_parser_float@@Base>
   163ec:	str	r0, [fp, #-12]
   163f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   163f4:	ldr	r1, [fp, #-12]
   163f8:	cmp	r0, r1
   163fc:	bne	16454 <main@@Base+0x2824>
   16400:	ldr	r0, [pc, #4052]	; 173dc <main@@Base+0x37ac>
   16404:	add	r3, pc, r0
   16408:	ldr	r0, [fp, #-8]
   1640c:	ldr	r1, [fp, #-12]
   16410:	str	r1, [fp, #-40]	; 0xffffffd8
   16414:	ldr	r2, [fp, #-16]
   16418:	sub	ip, fp, #76	; 0x4c
   1641c:	str	ip, [sp]
   16420:	bl	1bd00 <main@@Base+0x80d0>
   16424:	str	r0, [fp, #-12]
   16428:	ldr	r0, [fp, #-12]
   1642c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16430:	cmp	r0, r1
   16434:	beq	16448 <main@@Base+0x2818>
   16438:	ldr	r0, [fp, #-12]
   1643c:	ldr	r1, [fp, #-16]
   16440:	cmp	r0, r1
   16444:	bne	16450 <main@@Base+0x2820>
   16448:	b	17a04 <main@@Base+0x3dd4>
   1644c:	andeq	lr, r2, r8, ror #24
   16450:	b	16454 <main@@Base+0x2824>
   16454:	vldr	s0, [fp, #-76]	; 0xffffffb4
   16458:	vcvt.f64.f32	d16, s0
   1645c:	vcmp.f64	d16, #0.0
   16460:	vmrs	APSR_nzcv, fpscr
   16464:	bne	1647c <main@@Base+0x284c>
   16468:	ldr	r0, [fp, #-8]
   1646c:	ldr	r0, [r0, #8]
   16470:	and	r0, r0, #2
   16474:	cmp	r0, #0
   16478:	beq	164bc <main@@Base+0x288c>
   1647c:	ldr	r0, [fp, #-8]
   16480:	ldr	r0, [r0]
   16484:	movw	r1, #27
   16488:	movw	r2, #4
   1648c:	movw	r3, #4
   16490:	uxth	r3, r3
   16494:	bl	27698 <flatcc_builder_table_add@@Base>
   16498:	str	r0, [fp, #-28]	; 0xffffffe4
   1649c:	movw	r1, #0
   164a0:	cmp	r0, r1
   164a4:	bne	164b0 <main@@Base+0x2880>
   164a8:	b	17a04 <main@@Base+0x3dd4>
   164ac:	andeq	r0, r0, r0
   164b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   164b4:	vldr	s0, [fp, #-76]	; 0xffffffb4
   164b8:	bl	1bf30 <main@@Base+0x8300>
   164bc:	b	164d4 <main@@Base+0x28a4>
   164c0:	ldr	r0, [fp, #-8]
   164c4:	ldr	r1, [fp, #-12]
   164c8:	ldr	r2, [fp, #-16]
   164cc:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   164d0:	str	r0, [fp, #-12]
   164d4:	b	164ec <main@@Base+0x28bc>
   164d8:	ldr	r0, [fp, #-8]
   164dc:	ldr	r1, [fp, #-12]
   164e0:	ldr	r2, [fp, #-16]
   164e4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   164e8:	str	r0, [fp, #-12]
   164ec:	b	17948 <main@@Base+0x3d18>
   164f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   164f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   164f8:	movw	r2, #29556	; 0x7374
   164fc:	movt	r2, #29797	; 0x7465
   16500:	eor	r1, r1, r2
   16504:	movw	r2, #29544	; 0x7368
   16508:	movt	r2, #26721	; 0x6861
   1650c:	eor	r0, r0, r2
   16510:	orr	r0, r0, r1
   16514:	cmp	r0, #0
   16518:	bne	17128 <main@@Base+0x34f8>
   1651c:	b	16520 <main@@Base+0x28f0>
   16520:	ldr	r0, [fp, #-12]
   16524:	add	r0, r0, #8
   16528:	str	r0, [fp, #-12]
   1652c:	ldr	r0, [fp, #-12]
   16530:	ldr	r1, [fp, #-16]
   16534:	bl	17bdc <main@@Base+0x3fac>
   16538:	str	r1, [fp, #-44]	; 0xffffffd4
   1653c:	str	r0, [fp, #-48]	; 0xffffffd0
   16540:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16544:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16548:	movw	r2, #30256	; 0x7630
   1654c:	movt	r2, #26222	; 0x666e
   16550:	subs	r0, r2, r0
   16554:	movw	r2, #13407	; 0x345f
   16558:	movt	r2, #29494	; 0x7336
   1655c:	sbcs	r1, r2, r1
   16560:	bcc	16844 <main@@Base+0x2c14>
   16564:	b	16568 <main@@Base+0x2938>
   16568:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1656c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16570:	movw	r2, #12895	; 0x325f
   16574:	movt	r2, #29491	; 0x7333
   16578:	eor	r1, r1, r2
   1657c:	movw	r2, #30257	; 0x7631
   16580:	movt	r2, #26222	; 0x666e
   16584:	eor	r0, r0, r2
   16588:	orr	r0, r0, r1
   1658c:	cmp	r0, #0
   16590:	bne	1682c <main@@Base+0x2bfc>
   16594:	b	1659c <main@@Base+0x296c>
   16598:	svcne	0x00ffffff
   1659c:	ldr	r0, [fp, #-8]
   165a0:	ldr	r1, [fp, #-12]
   165a4:	str	r1, [fp, #-40]	; 0xffffffd8
   165a8:	ldr	r2, [fp, #-16]
   165ac:	movw	r3, #8
   165b0:	bl	17c14 <main@@Base+0x3fe4>
   165b4:	str	r0, [fp, #-12]
   165b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   165bc:	ldr	r1, [fp, #-12]
   165c0:	cmp	r0, r1
   165c4:	beq	166b4 <main@@Base+0x2a84>
   165c8:	movw	r0, #0
   165cc:	str	r0, [fp, #-80]	; 0xffffffb0
   165d0:	ldr	r0, [fp, #-8]
   165d4:	ldr	r1, [fp, #-12]
   165d8:	str	r1, [fp, #-40]	; 0xffffffd8
   165dc:	ldr	r2, [fp, #-16]
   165e0:	sub	r3, fp, #80	; 0x50
   165e4:	bl	1bf5c <main@@Base+0x832c>
   165e8:	str	r0, [fp, #-12]
   165ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   165f0:	ldr	r1, [fp, #-12]
   165f4:	cmp	r0, r1
   165f8:	bne	16654 <main@@Base+0x2a24>
   165fc:	ldr	r0, [pc, #4072]	; 175ec <main@@Base+0x39bc>
   16600:	add	r3, pc, r0
   16604:	ldr	r0, [fp, #-8]
   16608:	ldr	r1, [fp, #-12]
   1660c:	str	r1, [fp, #-40]	; 0xffffffd8
   16610:	ldr	r2, [fp, #-16]
   16614:	sub	ip, fp, #80	; 0x50
   16618:	str	ip, [sp]
   1661c:	bl	1c034 <main@@Base+0x8404>
   16620:	str	r0, [fp, #-12]
   16624:	ldr	r0, [fp, #-12]
   16628:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1662c:	cmp	r0, r1
   16630:	beq	16644 <main@@Base+0x2a14>
   16634:	ldr	r0, [fp, #-12]
   16638:	ldr	r1, [fp, #-16]
   1663c:	cmp	r0, r1
   16640:	bne	16650 <main@@Base+0x2a20>
   16644:	b	17a04 <main@@Base+0x3dd4>
   16648:	andeq	r0, r0, r0
   1664c:			; <UNDEFINED> instruction: 0x41132cbc
   16650:	b	16654 <main@@Base+0x2a24>
   16654:	ldr	r0, [fp, #-80]	; 0xffffffb0
   16658:	cmp	r0, #0
   1665c:	bne	16674 <main@@Base+0x2a44>
   16660:	ldr	r0, [fp, #-8]
   16664:	ldr	r0, [r0, #8]
   16668:	and	r0, r0, #2
   1666c:	cmp	r0, #0
   16670:	beq	166b0 <main@@Base+0x2a80>
   16674:	ldr	r0, [fp, #-8]
   16678:	ldr	r0, [r0]
   1667c:	movw	r1, #16
   16680:	movw	r2, #4
   16684:	movw	r3, #4
   16688:	uxth	r3, r3
   1668c:	bl	27698 <flatcc_builder_table_add@@Base>
   16690:	str	r0, [fp, #-28]	; 0xffffffe4
   16694:	movw	r1, #0
   16698:	cmp	r0, r1
   1669c:	bne	166a4 <main@@Base+0x2a74>
   166a0:	b	17a04 <main@@Base+0x3dd4>
   166a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   166a8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   166ac:	bl	1c25c <main@@Base+0x862c>
   166b0:	b	16828 <main@@Base+0x2bf8>
   166b4:	ldr	r0, [fp, #-12]
   166b8:	add	r0, r0, #8
   166bc:	str	r0, [fp, #-12]
   166c0:	ldr	r0, [fp, #-12]
   166c4:	ldr	r1, [fp, #-16]
   166c8:	bl	17bdc <main@@Base+0x3fac>
   166cc:	str	r1, [fp, #-44]	; 0xffffffd4
   166d0:	str	r0, [fp, #-48]	; 0xffffffd0
   166d4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   166d8:	mov	r1, #1627389952	; 0x61000000
   166dc:	teq	r1, r0, lsl #24
   166e0:	bne	16810 <main@@Base+0x2be0>
   166e4:	b	166e8 <main@@Base+0x2ab8>
   166e8:	ldr	r0, [fp, #-8]
   166ec:	ldr	r1, [fp, #-12]
   166f0:	str	r1, [fp, #-40]	; 0xffffffd8
   166f4:	ldr	r2, [fp, #-16]
   166f8:	movw	r3, #1
   166fc:	bl	17c14 <main@@Base+0x3fe4>
   16700:	str	r0, [fp, #-12]
   16704:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16708:	ldr	r1, [fp, #-12]
   1670c:	cmp	r0, r1
   16710:	beq	167f8 <main@@Base+0x2bc8>
   16714:	movw	r0, #0
   16718:	str	r0, [fp, #-84]	; 0xffffffac
   1671c:	ldr	r0, [fp, #-8]
   16720:	ldr	r1, [fp, #-12]
   16724:	str	r1, [fp, #-40]	; 0xffffffd8
   16728:	ldr	r2, [fp, #-16]
   1672c:	sub	r3, fp, #84	; 0x54
   16730:	bl	1bf5c <main@@Base+0x832c>
   16734:	str	r0, [fp, #-12]
   16738:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1673c:	ldr	r1, [fp, #-12]
   16740:	cmp	r0, r1
   16744:	bne	16798 <main@@Base+0x2b68>
   16748:	ldr	r0, [pc, #4092]	; 1774c <main@@Base+0x3b1c>
   1674c:	add	r3, pc, r0
   16750:	ldr	r0, [fp, #-8]
   16754:	ldr	r1, [fp, #-12]
   16758:	str	r1, [fp, #-40]	; 0xffffffd8
   1675c:	ldr	r2, [fp, #-16]
   16760:	sub	ip, fp, #84	; 0x54
   16764:	str	ip, [sp]
   16768:	bl	1c034 <main@@Base+0x8404>
   1676c:	str	r0, [fp, #-12]
   16770:	ldr	r0, [fp, #-12]
   16774:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16778:	cmp	r0, r1
   1677c:	beq	16790 <main@@Base+0x2b60>
   16780:	ldr	r0, [fp, #-12]
   16784:	ldr	r1, [fp, #-16]
   16788:	cmp	r0, r1
   1678c:	bne	16794 <main@@Base+0x2b64>
   16790:	b	17a04 <main@@Base+0x3dd4>
   16794:	b	16798 <main@@Base+0x2b68>
   16798:	ldr	r0, [fp, #-84]	; 0xffffffac
   1679c:	cmp	r0, #0
   167a0:	bne	167b8 <main@@Base+0x2b88>
   167a4:	ldr	r0, [fp, #-8]
   167a8:	ldr	r0, [r0, #8]
   167ac:	and	r0, r0, #2
   167b0:	cmp	r0, #0
   167b4:	beq	167f4 <main@@Base+0x2bc4>
   167b8:	ldr	r0, [fp, #-8]
   167bc:	ldr	r0, [r0]
   167c0:	movw	r1, #20
   167c4:	movw	r2, #4
   167c8:	movw	r3, #4
   167cc:	uxth	r3, r3
   167d0:	bl	27698 <flatcc_builder_table_add@@Base>
   167d4:	str	r0, [fp, #-28]	; 0xffffffe4
   167d8:	movw	r1, #0
   167dc:	cmp	r0, r1
   167e0:	bne	167e8 <main@@Base+0x2bb8>
   167e4:	b	17a04 <main@@Base+0x3dd4>
   167e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   167ec:	ldr	r1, [fp, #-84]	; 0xffffffac
   167f0:	bl	1c25c <main@@Base+0x862c>
   167f4:	b	1680c <main@@Base+0x2bdc>
   167f8:	ldr	r0, [fp, #-8]
   167fc:	ldr	r1, [fp, #-12]
   16800:	ldr	r2, [fp, #-16]
   16804:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16808:	str	r0, [fp, #-12]
   1680c:	b	16824 <main@@Base+0x2bf4>
   16810:	ldr	r0, [fp, #-8]
   16814:	ldr	r1, [fp, #-12]
   16818:	ldr	r2, [fp, #-16]
   1681c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16820:	str	r0, [fp, #-12]
   16824:	b	16828 <main@@Base+0x2bf8>
   16828:	b	16840 <main@@Base+0x2c10>
   1682c:	ldr	r0, [fp, #-8]
   16830:	ldr	r1, [fp, #-12]
   16834:	ldr	r2, [fp, #-16]
   16838:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1683c:	str	r0, [fp, #-12]
   16840:	b	17124 <main@@Base+0x34f4>
   16844:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16848:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1684c:	movw	r2, #30256	; 0x7630
   16850:	movt	r2, #26222	; 0x666e
   16854:	subs	r0, r2, r0
   16858:	movw	r2, #12895	; 0x325f
   1685c:	movt	r2, #30003	; 0x7533
   16860:	sbcs	r1, r2, r1
   16864:	bcc	16b64 <main@@Base+0x2f34>
   16868:	b	1686c <main@@Base+0x2c3c>
   1686c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16870:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16874:	movw	r2, #13407	; 0x345f
   16878:	movt	r2, #29494	; 0x7336
   1687c:	eor	r1, r1, r2
   16880:	movw	r2, #30257	; 0x7631
   16884:	movt	r2, #26222	; 0x666e
   16888:	eor	r0, r0, r2
   1688c:	orr	r0, r0, r1
   16890:	cmp	r0, #0
   16894:	bne	16b4c <main@@Base+0x2f1c>
   16898:	b	1689c <main@@Base+0x2c6c>
   1689c:	ldr	r0, [fp, #-8]
   168a0:	ldr	r1, [fp, #-12]
   168a4:	str	r1, [fp, #-40]	; 0xffffffd8
   168a8:	ldr	r2, [fp, #-16]
   168ac:	movw	r3, #8
   168b0:	bl	17c14 <main@@Base+0x3fe4>
   168b4:	str	r0, [fp, #-12]
   168b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   168bc:	ldr	r1, [fp, #-12]
   168c0:	cmp	r0, r1
   168c4:	beq	169c0 <main@@Base+0x2d90>
   168c8:	mov	r0, #0
   168cc:	str	r0, [sp, #100]	; 0x64
   168d0:	str	r0, [sp, #96]	; 0x60
   168d4:	ldr	r0, [fp, #-8]
   168d8:	ldr	r1, [fp, #-12]
   168dc:	str	r1, [fp, #-40]	; 0xffffffd8
   168e0:	ldr	r2, [fp, #-16]
   168e4:	add	r3, sp, #96	; 0x60
   168e8:	bl	1c288 <main@@Base+0x8658>
   168ec:	str	r0, [fp, #-12]
   168f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   168f4:	ldr	r1, [fp, #-12]
   168f8:	cmp	r0, r1
   168fc:	bne	16950 <main@@Base+0x2d20>
   16900:	ldr	r0, [pc, #4072]	; 178f0 <main@@Base+0x3cc0>
   16904:	add	r3, pc, r0
   16908:	ldr	r0, [fp, #-8]
   1690c:	ldr	r1, [fp, #-12]
   16910:	str	r1, [fp, #-40]	; 0xffffffd8
   16914:	ldr	r2, [fp, #-16]
   16918:	add	ip, sp, #96	; 0x60
   1691c:	str	ip, [sp]
   16920:	bl	1c360 <main@@Base+0x8730>
   16924:	str	r0, [fp, #-12]
   16928:	ldr	r0, [fp, #-12]
   1692c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16930:	cmp	r0, r1
   16934:	beq	16948 <main@@Base+0x2d18>
   16938:	ldr	r0, [fp, #-12]
   1693c:	ldr	r1, [fp, #-16]
   16940:	cmp	r0, r1
   16944:	bne	1694c <main@@Base+0x2d1c>
   16948:	b	17a04 <main@@Base+0x3dd4>
   1694c:	b	16950 <main@@Base+0x2d20>
   16950:	ldr	r0, [sp, #96]	; 0x60
   16954:	ldr	r1, [sp, #100]	; 0x64
   16958:	orr	r0, r0, r1
   1695c:	cmp	r0, #0
   16960:	bne	1697c <main@@Base+0x2d4c>
   16964:	b	16968 <main@@Base+0x2d38>
   16968:	ldr	r0, [fp, #-8]
   1696c:	ldr	r0, [r0, #8]
   16970:	and	r0, r0, #2
   16974:	cmp	r0, #0
   16978:	beq	169bc <main@@Base+0x2d8c>
   1697c:	ldr	r0, [fp, #-8]
   16980:	ldr	r0, [r0]
   16984:	movw	r1, #18
   16988:	movw	r2, #8
   1698c:	movw	r3, #8
   16990:	uxth	r3, r3
   16994:	bl	27698 <flatcc_builder_table_add@@Base>
   16998:	str	r0, [fp, #-28]	; 0xffffffe4
   1699c:	movw	r1, #0
   169a0:	cmp	r0, r1
   169a4:	bne	169ac <main@@Base+0x2d7c>
   169a8:	b	17a04 <main@@Base+0x3dd4>
   169ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   169b0:	ldr	r2, [sp, #96]	; 0x60
   169b4:	ldr	r3, [sp, #100]	; 0x64
   169b8:	bl	1c5a0 <main@@Base+0x8970>
   169bc:	b	16b48 <main@@Base+0x2f18>
   169c0:	ldr	r0, [fp, #-12]
   169c4:	add	r0, r0, #8
   169c8:	str	r0, [fp, #-12]
   169cc:	ldr	r0, [fp, #-12]
   169d0:	ldr	r1, [fp, #-16]
   169d4:	bl	17bdc <main@@Base+0x3fac>
   169d8:	str	r1, [fp, #-44]	; 0xffffffd4
   169dc:	str	r0, [fp, #-48]	; 0xffffffd0
   169e0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   169e4:	mov	r1, #1627389952	; 0x61000000
   169e8:	teq	r1, r0, lsl #24
   169ec:	bne	16b30 <main@@Base+0x2f00>
   169f0:	b	169f4 <main@@Base+0x2dc4>
   169f4:	ldr	r0, [fp, #-8]
   169f8:	ldr	r1, [fp, #-12]
   169fc:	str	r1, [fp, #-40]	; 0xffffffd8
   16a00:	ldr	r2, [fp, #-16]
   16a04:	movw	r3, #1
   16a08:	bl	17c14 <main@@Base+0x3fe4>
   16a0c:	str	r0, [fp, #-12]
   16a10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16a14:	ldr	r1, [fp, #-12]
   16a18:	cmp	r0, r1
   16a1c:	beq	16b18 <main@@Base+0x2ee8>
   16a20:	mov	r0, #0
   16a24:	str	r0, [sp, #92]	; 0x5c
   16a28:	str	r0, [sp, #88]	; 0x58
   16a2c:	ldr	r0, [fp, #-8]
   16a30:	ldr	r1, [fp, #-12]
   16a34:	str	r1, [fp, #-40]	; 0xffffffd8
   16a38:	ldr	r2, [fp, #-16]
   16a3c:	add	r3, sp, #88	; 0x58
   16a40:	bl	1c288 <main@@Base+0x8658>
   16a44:	str	r0, [fp, #-12]
   16a48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16a4c:	ldr	r1, [fp, #-12]
   16a50:	cmp	r0, r1
   16a54:	bne	16aa8 <main@@Base+0x2e78>
   16a58:	ldr	r0, [pc, #4072]	; 17a48 <main@@Base+0x3e18>
   16a5c:	add	r3, pc, r0
   16a60:	ldr	r0, [fp, #-8]
   16a64:	ldr	r1, [fp, #-12]
   16a68:	str	r1, [fp, #-40]	; 0xffffffd8
   16a6c:	ldr	r2, [fp, #-16]
   16a70:	add	ip, sp, #88	; 0x58
   16a74:	str	ip, [sp]
   16a78:	bl	1c360 <main@@Base+0x8730>
   16a7c:	str	r0, [fp, #-12]
   16a80:	ldr	r0, [fp, #-12]
   16a84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16a88:	cmp	r0, r1
   16a8c:	beq	16aa0 <main@@Base+0x2e70>
   16a90:	ldr	r0, [fp, #-12]
   16a94:	ldr	r1, [fp, #-16]
   16a98:	cmp	r0, r1
   16a9c:	bne	16aa4 <main@@Base+0x2e74>
   16aa0:	b	17a04 <main@@Base+0x3dd4>
   16aa4:	b	16aa8 <main@@Base+0x2e78>
   16aa8:	ldr	r0, [sp, #88]	; 0x58
   16aac:	ldr	r1, [sp, #92]	; 0x5c
   16ab0:	orr	r0, r0, r1
   16ab4:	cmp	r0, #0
   16ab8:	bne	16ad4 <main@@Base+0x2ea4>
   16abc:	b	16ac0 <main@@Base+0x2e90>
   16ac0:	ldr	r0, [fp, #-8]
   16ac4:	ldr	r0, [r0, #8]
   16ac8:	and	r0, r0, #2
   16acc:	cmp	r0, #0
   16ad0:	beq	16b14 <main@@Base+0x2ee4>
   16ad4:	ldr	r0, [fp, #-8]
   16ad8:	ldr	r0, [r0]
   16adc:	movw	r1, #22
   16ae0:	movw	r2, #8
   16ae4:	movw	r3, #8
   16ae8:	uxth	r3, r3
   16aec:	bl	27698 <flatcc_builder_table_add@@Base>
   16af0:	str	r0, [fp, #-28]	; 0xffffffe4
   16af4:	movw	r1, #0
   16af8:	cmp	r0, r1
   16afc:	bne	16b04 <main@@Base+0x2ed4>
   16b00:	b	17a04 <main@@Base+0x3dd4>
   16b04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16b08:	ldr	r2, [sp, #88]	; 0x58
   16b0c:	ldr	r3, [sp, #92]	; 0x5c
   16b10:	bl	1c5a0 <main@@Base+0x8970>
   16b14:	b	16b2c <main@@Base+0x2efc>
   16b18:	ldr	r0, [fp, #-8]
   16b1c:	ldr	r1, [fp, #-12]
   16b20:	ldr	r2, [fp, #-16]
   16b24:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16b28:	str	r0, [fp, #-12]
   16b2c:	b	16b44 <main@@Base+0x2f14>
   16b30:	ldr	r0, [fp, #-8]
   16b34:	ldr	r1, [fp, #-12]
   16b38:	ldr	r2, [fp, #-16]
   16b3c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16b40:	str	r0, [fp, #-12]
   16b44:	b	16b48 <main@@Base+0x2f18>
   16b48:	b	16b60 <main@@Base+0x2f30>
   16b4c:	ldr	r0, [fp, #-8]
   16b50:	ldr	r1, [fp, #-12]
   16b54:	ldr	r2, [fp, #-16]
   16b58:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16b5c:	str	r0, [fp, #-12]
   16b60:	b	17120 <main@@Base+0x34f0>
   16b64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16b68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16b6c:	movw	r2, #12895	; 0x325f
   16b70:	movt	r2, #30003	; 0x7533
   16b74:	eor	r1, r1, r2
   16b78:	movw	r2, #30257	; 0x7631
   16b7c:	movt	r2, #26222	; 0x666e
   16b80:	eor	r0, r0, r2
   16b84:	orr	r0, r0, r1
   16b88:	cmp	r0, #0
   16b8c:	bne	16e20 <main@@Base+0x31f0>
   16b90:	b	16b94 <main@@Base+0x2f64>
   16b94:	ldr	r0, [fp, #-8]
   16b98:	ldr	r1, [fp, #-12]
   16b9c:	str	r1, [fp, #-40]	; 0xffffffd8
   16ba0:	ldr	r2, [fp, #-16]
   16ba4:	movw	r3, #8
   16ba8:	bl	17c14 <main@@Base+0x3fe4>
   16bac:	str	r0, [fp, #-12]
   16bb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bb4:	ldr	r1, [fp, #-12]
   16bb8:	cmp	r0, r1
   16bbc:	beq	16ca4 <main@@Base+0x3074>
   16bc0:	movw	r0, #0
   16bc4:	str	r0, [sp, #84]	; 0x54
   16bc8:	ldr	r0, [fp, #-8]
   16bcc:	ldr	r1, [fp, #-12]
   16bd0:	str	r1, [fp, #-40]	; 0xffffffd8
   16bd4:	ldr	r2, [fp, #-16]
   16bd8:	add	r3, sp, #84	; 0x54
   16bdc:	bl	1c5d8 <main@@Base+0x89a8>
   16be0:	str	r0, [fp, #-12]
   16be4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16be8:	ldr	r1, [fp, #-12]
   16bec:	cmp	r0, r1
   16bf0:	bne	16c44 <main@@Base+0x3014>
   16bf4:	ldr	r0, [pc, #3656]	; 17a44 <main@@Base+0x3e14>
   16bf8:	add	r3, pc, r0
   16bfc:	ldr	r0, [fp, #-8]
   16c00:	ldr	r1, [fp, #-12]
   16c04:	str	r1, [fp, #-40]	; 0xffffffd8
   16c08:	ldr	r2, [fp, #-16]
   16c0c:	add	ip, sp, #84	; 0x54
   16c10:	str	ip, [sp]
   16c14:	bl	1c6b0 <main@@Base+0x8a80>
   16c18:	str	r0, [fp, #-12]
   16c1c:	ldr	r0, [fp, #-12]
   16c20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16c24:	cmp	r0, r1
   16c28:	beq	16c3c <main@@Base+0x300c>
   16c2c:	ldr	r0, [fp, #-12]
   16c30:	ldr	r1, [fp, #-16]
   16c34:	cmp	r0, r1
   16c38:	bne	16c40 <main@@Base+0x3010>
   16c3c:	b	17a04 <main@@Base+0x3dd4>
   16c40:	b	16c44 <main@@Base+0x3014>
   16c44:	ldr	r0, [sp, #84]	; 0x54
   16c48:	cmp	r0, #0
   16c4c:	bne	16c64 <main@@Base+0x3034>
   16c50:	ldr	r0, [fp, #-8]
   16c54:	ldr	r0, [r0, #8]
   16c58:	and	r0, r0, #2
   16c5c:	cmp	r0, #0
   16c60:	beq	16ca0 <main@@Base+0x3070>
   16c64:	ldr	r0, [fp, #-8]
   16c68:	ldr	r0, [r0]
   16c6c:	movw	r1, #17
   16c70:	movw	r2, #4
   16c74:	movw	r3, #4
   16c78:	uxth	r3, r3
   16c7c:	bl	27698 <flatcc_builder_table_add@@Base>
   16c80:	str	r0, [fp, #-28]	; 0xffffffe4
   16c84:	movw	r1, #0
   16c88:	cmp	r0, r1
   16c8c:	bne	16c94 <main@@Base+0x3064>
   16c90:	b	17a04 <main@@Base+0x3dd4>
   16c94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16c98:	ldr	r1, [sp, #84]	; 0x54
   16c9c:	bl	1c8d8 <main@@Base+0x8ca8>
   16ca0:	b	16e1c <main@@Base+0x31ec>
   16ca4:	ldr	r0, [fp, #-12]
   16ca8:	add	r0, r0, #8
   16cac:	str	r0, [fp, #-12]
   16cb0:	ldr	r0, [fp, #-12]
   16cb4:	ldr	r1, [fp, #-16]
   16cb8:	bl	17bdc <main@@Base+0x3fac>
   16cbc:	str	r1, [fp, #-44]	; 0xffffffd4
   16cc0:	str	r0, [fp, #-48]	; 0xffffffd0
   16cc4:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   16cc8:	mov	r1, #1627389952	; 0x61000000
   16ccc:	teq	r1, r0, lsl #24
   16cd0:	bne	16e04 <main@@Base+0x31d4>
   16cd4:	b	16cd8 <main@@Base+0x30a8>
   16cd8:	ldr	r0, [fp, #-8]
   16cdc:	ldr	r1, [fp, #-12]
   16ce0:	str	r1, [fp, #-40]	; 0xffffffd8
   16ce4:	ldr	r2, [fp, #-16]
   16ce8:	movw	r3, #1
   16cec:	bl	17c14 <main@@Base+0x3fe4>
   16cf0:	str	r0, [fp, #-12]
   16cf4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16cf8:	ldr	r1, [fp, #-12]
   16cfc:	cmp	r0, r1
   16d00:	beq	16de8 <main@@Base+0x31b8>
   16d04:	movw	r0, #0
   16d08:	str	r0, [sp, #80]	; 0x50
   16d0c:	ldr	r0, [fp, #-8]
   16d10:	ldr	r1, [fp, #-12]
   16d14:	str	r1, [fp, #-40]	; 0xffffffd8
   16d18:	ldr	r2, [fp, #-16]
   16d1c:	add	r3, sp, #80	; 0x50
   16d20:	bl	1c5d8 <main@@Base+0x89a8>
   16d24:	str	r0, [fp, #-12]
   16d28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d2c:	ldr	r1, [fp, #-12]
   16d30:	cmp	r0, r1
   16d34:	bne	16d88 <main@@Base+0x3158>
   16d38:	ldr	r0, [pc, #3328]	; 17a40 <main@@Base+0x3e10>
   16d3c:	add	r3, pc, r0
   16d40:	ldr	r0, [fp, #-8]
   16d44:	ldr	r1, [fp, #-12]
   16d48:	str	r1, [fp, #-40]	; 0xffffffd8
   16d4c:	ldr	r2, [fp, #-16]
   16d50:	add	ip, sp, #80	; 0x50
   16d54:	str	ip, [sp]
   16d58:	bl	1c6b0 <main@@Base+0x8a80>
   16d5c:	str	r0, [fp, #-12]
   16d60:	ldr	r0, [fp, #-12]
   16d64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16d68:	cmp	r0, r1
   16d6c:	beq	16d80 <main@@Base+0x3150>
   16d70:	ldr	r0, [fp, #-12]
   16d74:	ldr	r1, [fp, #-16]
   16d78:	cmp	r0, r1
   16d7c:	bne	16d84 <main@@Base+0x3154>
   16d80:	b	17a04 <main@@Base+0x3dd4>
   16d84:	b	16d88 <main@@Base+0x3158>
   16d88:	ldr	r0, [sp, #80]	; 0x50
   16d8c:	cmp	r0, #0
   16d90:	bne	16da8 <main@@Base+0x3178>
   16d94:	ldr	r0, [fp, #-8]
   16d98:	ldr	r0, [r0, #8]
   16d9c:	and	r0, r0, #2
   16da0:	cmp	r0, #0
   16da4:	beq	16de4 <main@@Base+0x31b4>
   16da8:	ldr	r0, [fp, #-8]
   16dac:	ldr	r0, [r0]
   16db0:	movw	r1, #21
   16db4:	movw	r2, #4
   16db8:	movw	r3, #4
   16dbc:	uxth	r3, r3
   16dc0:	bl	27698 <flatcc_builder_table_add@@Base>
   16dc4:	str	r0, [fp, #-28]	; 0xffffffe4
   16dc8:	movw	r1, #0
   16dcc:	cmp	r0, r1
   16dd0:	bne	16dd8 <main@@Base+0x31a8>
   16dd4:	b	17a04 <main@@Base+0x3dd4>
   16dd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16ddc:	ldr	r1, [sp, #80]	; 0x50
   16de0:	bl	1c8d8 <main@@Base+0x8ca8>
   16de4:	b	16dfc <main@@Base+0x31cc>
   16de8:	ldr	r0, [fp, #-8]
   16dec:	ldr	r1, [fp, #-12]
   16df0:	ldr	r2, [fp, #-16]
   16df4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16df8:	str	r0, [fp, #-12]
   16dfc:	b	16e18 <main@@Base+0x31e8>
   16e00:	ldrdeq	lr, [r2], -r4
   16e04:	ldr	r0, [fp, #-8]
   16e08:	ldr	r1, [fp, #-12]
   16e0c:	ldr	r2, [fp, #-16]
   16e10:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   16e14:	str	r0, [fp, #-12]
   16e18:	b	16e1c <main@@Base+0x31ec>
   16e1c:	b	1711c <main@@Base+0x34ec>
   16e20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16e24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16e28:	movw	r2, #13407	; 0x345f
   16e2c:	movt	r2, #30006	; 0x7536
   16e30:	eor	r1, r1, r2
   16e34:	movw	r2, #30257	; 0x7631
   16e38:	movt	r2, #26222	; 0x666e
   16e3c:	eor	r0, r0, r2
   16e40:	orr	r0, r0, r1
   16e44:	cmp	r0, #0
   16e48:	bne	17104 <main@@Base+0x34d4>
   16e4c:	b	16e50 <main@@Base+0x3220>
   16e50:	ldr	r0, [fp, #-8]
   16e54:	ldr	r1, [fp, #-12]
   16e58:	str	r1, [fp, #-40]	; 0xffffffd8
   16e5c:	ldr	r2, [fp, #-16]
   16e60:	movw	r3, #8
   16e64:	bl	17c14 <main@@Base+0x3fe4>
   16e68:	str	r0, [fp, #-12]
   16e6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16e70:	ldr	r1, [fp, #-12]
   16e74:	cmp	r0, r1
   16e78:	beq	16f74 <main@@Base+0x3344>
   16e7c:	mov	r0, #0
   16e80:	str	r0, [sp, #76]	; 0x4c
   16e84:	str	r0, [sp, #72]	; 0x48
   16e88:	ldr	r0, [fp, #-8]
   16e8c:	ldr	r1, [fp, #-12]
   16e90:	str	r1, [fp, #-40]	; 0xffffffd8
   16e94:	ldr	r2, [fp, #-16]
   16e98:	add	r3, sp, #72	; 0x48
   16e9c:	bl	1c904 <main@@Base+0x8cd4>
   16ea0:	str	r0, [fp, #-12]
   16ea4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16ea8:	ldr	r1, [fp, #-12]
   16eac:	cmp	r0, r1
   16eb0:	bne	16f04 <main@@Base+0x32d4>
   16eb4:	ldr	r0, [pc, #2944]	; 17a3c <main@@Base+0x3e0c>
   16eb8:	add	r3, pc, r0
   16ebc:	ldr	r0, [fp, #-8]
   16ec0:	ldr	r1, [fp, #-12]
   16ec4:	str	r1, [fp, #-40]	; 0xffffffd8
   16ec8:	ldr	r2, [fp, #-16]
   16ecc:	add	ip, sp, #72	; 0x48
   16ed0:	str	ip, [sp]
   16ed4:	bl	1c9dc <main@@Base+0x8dac>
   16ed8:	str	r0, [fp, #-12]
   16edc:	ldr	r0, [fp, #-12]
   16ee0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16ee4:	cmp	r0, r1
   16ee8:	beq	16efc <main@@Base+0x32cc>
   16eec:	ldr	r0, [fp, #-12]
   16ef0:	ldr	r1, [fp, #-16]
   16ef4:	cmp	r0, r1
   16ef8:	bne	16f00 <main@@Base+0x32d0>
   16efc:	b	17a04 <main@@Base+0x3dd4>
   16f00:	b	16f04 <main@@Base+0x32d4>
   16f04:	ldr	r0, [sp, #72]	; 0x48
   16f08:	ldr	r1, [sp, #76]	; 0x4c
   16f0c:	orr	r0, r0, r1
   16f10:	cmp	r0, #0
   16f14:	bne	16f30 <main@@Base+0x3300>
   16f18:	b	16f1c <main@@Base+0x32ec>
   16f1c:	ldr	r0, [fp, #-8]
   16f20:	ldr	r0, [r0, #8]
   16f24:	and	r0, r0, #2
   16f28:	cmp	r0, #0
   16f2c:	beq	16f70 <main@@Base+0x3340>
   16f30:	ldr	r0, [fp, #-8]
   16f34:	ldr	r0, [r0]
   16f38:	movw	r1, #19
   16f3c:	movw	r2, #8
   16f40:	movw	r3, #8
   16f44:	uxth	r3, r3
   16f48:	bl	27698 <flatcc_builder_table_add@@Base>
   16f4c:	str	r0, [fp, #-28]	; 0xffffffe4
   16f50:	movw	r1, #0
   16f54:	cmp	r0, r1
   16f58:	bne	16f60 <main@@Base+0x3330>
   16f5c:	b	17a04 <main@@Base+0x3dd4>
   16f60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16f64:	ldr	r2, [sp, #72]	; 0x48
   16f68:	ldr	r3, [sp, #76]	; 0x4c
   16f6c:	bl	1cc1c <main@@Base+0x8fec>
   16f70:	b	17100 <main@@Base+0x34d0>
   16f74:	ldr	r0, [fp, #-12]
   16f78:	add	r0, r0, #8
   16f7c:	str	r0, [fp, #-12]
   16f80:	ldr	r0, [fp, #-12]
   16f84:	ldr	r1, [fp, #-16]
   16f88:	bl	17bdc <main@@Base+0x3fac>
   16f8c:	str	r1, [fp, #-44]	; 0xffffffd4
   16f90:	str	r0, [fp, #-48]	; 0xffffffd0
   16f94:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   16f98:	mov	r1, #1627389952	; 0x61000000
   16f9c:	teq	r1, r0, lsl #24
   16fa0:	bne	170e8 <main@@Base+0x34b8>
   16fa4:	b	16fa8 <main@@Base+0x3378>
   16fa8:	ldr	r0, [fp, #-8]
   16fac:	ldr	r1, [fp, #-12]
   16fb0:	str	r1, [fp, #-40]	; 0xffffffd8
   16fb4:	ldr	r2, [fp, #-16]
   16fb8:	movw	r3, #1
   16fbc:	bl	17c14 <main@@Base+0x3fe4>
   16fc0:	str	r0, [fp, #-12]
   16fc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16fc8:	ldr	r1, [fp, #-12]
   16fcc:	cmp	r0, r1
   16fd0:	beq	170cc <main@@Base+0x349c>
   16fd4:	mov	r0, #0
   16fd8:	str	r0, [sp, #68]	; 0x44
   16fdc:	str	r0, [sp, #64]	; 0x40
   16fe0:	ldr	r0, [fp, #-8]
   16fe4:	ldr	r1, [fp, #-12]
   16fe8:	str	r1, [fp, #-40]	; 0xffffffd8
   16fec:	ldr	r2, [fp, #-16]
   16ff0:	add	r3, sp, #64	; 0x40
   16ff4:	bl	1c904 <main@@Base+0x8cd4>
   16ff8:	str	r0, [fp, #-12]
   16ffc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17000:	ldr	r1, [fp, #-12]
   17004:	cmp	r0, r1
   17008:	bne	1705c <main@@Base+0x342c>
   1700c:	ldr	r0, [pc, #2596]	; 17a38 <main@@Base+0x3e08>
   17010:	add	r3, pc, r0
   17014:	ldr	r0, [fp, #-8]
   17018:	ldr	r1, [fp, #-12]
   1701c:	str	r1, [fp, #-40]	; 0xffffffd8
   17020:	ldr	r2, [fp, #-16]
   17024:	add	ip, sp, #64	; 0x40
   17028:	str	ip, [sp]
   1702c:	bl	1c9dc <main@@Base+0x8dac>
   17030:	str	r0, [fp, #-12]
   17034:	ldr	r0, [fp, #-12]
   17038:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1703c:	cmp	r0, r1
   17040:	beq	17054 <main@@Base+0x3424>
   17044:	ldr	r0, [fp, #-12]
   17048:	ldr	r1, [fp, #-16]
   1704c:	cmp	r0, r1
   17050:	bne	17058 <main@@Base+0x3428>
   17054:	b	17a04 <main@@Base+0x3dd4>
   17058:	b	1705c <main@@Base+0x342c>
   1705c:	ldr	r0, [sp, #64]	; 0x40
   17060:	ldr	r1, [sp, #68]	; 0x44
   17064:	orr	r0, r0, r1
   17068:	cmp	r0, #0
   1706c:	bne	17088 <main@@Base+0x3458>
   17070:	b	17074 <main@@Base+0x3444>
   17074:	ldr	r0, [fp, #-8]
   17078:	ldr	r0, [r0, #8]
   1707c:	and	r0, r0, #2
   17080:	cmp	r0, #0
   17084:	beq	170c8 <main@@Base+0x3498>
   17088:	ldr	r0, [fp, #-8]
   1708c:	ldr	r0, [r0]
   17090:	movw	r1, #23
   17094:	movw	r2, #8
   17098:	movw	r3, #8
   1709c:	uxth	r3, r3
   170a0:	bl	27698 <flatcc_builder_table_add@@Base>
   170a4:	str	r0, [fp, #-28]	; 0xffffffe4
   170a8:	movw	r1, #0
   170ac:	cmp	r0, r1
   170b0:	bne	170b8 <main@@Base+0x3488>
   170b4:	b	17a04 <main@@Base+0x3dd4>
   170b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   170bc:	ldr	r2, [sp, #64]	; 0x40
   170c0:	ldr	r3, [sp, #68]	; 0x44
   170c4:	bl	1cc1c <main@@Base+0x8fec>
   170c8:	b	170e0 <main@@Base+0x34b0>
   170cc:	ldr	r0, [fp, #-8]
   170d0:	ldr	r1, [fp, #-12]
   170d4:	ldr	r2, [fp, #-16]
   170d8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   170dc:	str	r0, [fp, #-12]
   170e0:	b	170fc <main@@Base+0x34cc>
   170e4:	andeq	lr, r2, r0, lsl r0
   170e8:	ldr	r0, [fp, #-8]
   170ec:	ldr	r1, [fp, #-12]
   170f0:	ldr	r2, [fp, #-16]
   170f4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   170f8:	str	r0, [fp, #-12]
   170fc:	b	17100 <main@@Base+0x34d0>
   17100:	b	17118 <main@@Base+0x34e8>
   17104:	ldr	r0, [fp, #-8]
   17108:	ldr	r1, [fp, #-12]
   1710c:	ldr	r2, [fp, #-16]
   17110:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   17114:	str	r0, [fp, #-12]
   17118:	b	1711c <main@@Base+0x34ec>
   1711c:	b	17120 <main@@Base+0x34f0>
   17120:	b	17124 <main@@Base+0x34f4>
   17124:	b	17944 <main@@Base+0x3d14>
   17128:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1712c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17130:	movw	r2, #24430	; 0x5f6e
   17134:	movt	r2, #28530	; 0x6f72
   17138:	subs	r0, r2, r0
   1713c:	movw	r2, #25460	; 0x6374
   17140:	movt	r2, #30309	; 0x7665
   17144:	sbcs	r1, r2, r1
   17148:	bcc	17494 <main@@Base+0x3864>
   1714c:	b	17150 <main@@Base+0x3520>
   17150:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17154:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17158:	movw	r2, #29556	; 0x7374
   1715c:	movt	r2, #29797	; 0x7465
   17160:	eor	r1, r1, r2
   17164:	movw	r2, #29556	; 0x7374
   17168:	movt	r2, #28261	; 0x6e65
   1716c:	eor	r0, r0, r2
   17170:	orr	r0, r0, r1
   17174:	cmp	r0, #0
   17178:	bne	1747c <main@@Base+0x384c>
   1717c:	b	17180 <main@@Base+0x3550>
   17180:	ldr	r0, [fp, #-12]
   17184:	add	r0, r0, #8
   17188:	str	r0, [fp, #-12]
   1718c:	ldr	r0, [fp, #-12]
   17190:	ldr	r1, [fp, #-16]
   17194:	bl	17bdc <main@@Base+0x3fac>
   17198:	str	r1, [fp, #-44]	; 0xffffffd4
   1719c:	str	r0, [fp, #-48]	; 0xffffffd0
   171a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   171a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   171a8:	movw	r2, #26220	; 0x666c
   171ac:	movt	r2, #25956	; 0x6564
   171b0:	eor	r1, r1, r2
   171b4:	movw	r2, #25205	; 0x6275
   171b8:	movt	r2, #24948	; 0x6174
   171bc:	eor	r0, r0, r2
   171c0:	orr	r0, r0, r1
   171c4:	cmp	r0, #0
   171c8:	bne	17464 <main@@Base+0x3834>
   171cc:	b	171d0 <main@@Base+0x35a0>
   171d0:	ldr	r0, [fp, #-12]
   171d4:	add	r0, r0, #8
   171d8:	str	r0, [fp, #-12]
   171dc:	ldr	r0, [fp, #-12]
   171e0:	ldr	r1, [fp, #-16]
   171e4:	bl	17bdc <main@@Base+0x3fac>
   171e8:	str	r1, [fp, #-44]	; 0xffffffd4
   171ec:	str	r0, [fp, #-48]	; 0xffffffd0
   171f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   171f4:	movw	r1, #25970	; 0x6572
   171f8:	movt	r1, #26214	; 0x6666
   171fc:	teq	r0, r1
   17200:	bne	1744c <main@@Base+0x381c>
   17204:	b	1720c <main@@Base+0x35dc>
   17208:			; <UNDEFINED> instruction: 0x0002deb8
   1720c:	ldr	r0, [fp, #-8]
   17210:	ldr	r1, [fp, #-12]
   17214:	str	r1, [fp, #-40]	; 0xffffffd8
   17218:	ldr	r2, [fp, #-16]
   1721c:	movw	r3, #4
   17220:	bl	17c14 <main@@Base+0x3fe4>
   17224:	str	r0, [fp, #-12]
   17228:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1722c:	ldr	r1, [fp, #-12]
   17230:	cmp	r0, r1
   17234:	beq	17434 <main@@Base+0x3804>
   17238:	ldr	r0, [fp, #-12]
   1723c:	ldr	r1, [fp, #-16]
   17240:	cmp	r0, r1
   17244:	beq	17388 <main@@Base+0x3758>
   17248:	ldr	r0, [fp, #-12]
   1724c:	ldrb	r0, [r0]
   17250:	cmp	r0, #91	; 0x5b
   17254:	bne	17388 <main@@Base+0x3758>
   17258:	ldr	r0, [fp, #-8]
   1725c:	ldr	r0, [r0]
   17260:	movw	r1, #1
   17264:	movw	r2, #1
   17268:	uxth	r2, r2
   1726c:	mvn	r3, #0
   17270:	bl	25980 <flatcc_builder_start_vector@@Base>
   17274:	cmp	r0, #0
   17278:	beq	17280 <main@@Base+0x3650>
   1727c:	b	17a04 <main@@Base+0x3dd4>
   17280:	ldr	r0, [fp, #-8]
   17284:	ldr	r1, [fp, #-12]
   17288:	ldr	r2, [fp, #-16]
   1728c:	sub	r3, fp, #24
   17290:	bl	19464 <main@@Base+0x5834>
   17294:	str	r0, [fp, #-12]
   17298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1729c:	cmp	r0, #0
   172a0:	beq	17374 <main@@Base+0x3744>
   172a4:	movw	r0, #0
   172a8:	strb	r0, [sp, #63]	; 0x3f
   172ac:	ldr	r0, [fp, #-8]
   172b0:	ldr	r0, [r0]
   172b4:	movw	r1, #1
   172b8:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   172bc:	str	r0, [fp, #-28]	; 0xffffffe4
   172c0:	movw	r1, #0
   172c4:	cmp	r0, r1
   172c8:	bne	172d0 <main@@Base+0x36a0>
   172cc:	b	17a04 <main@@Base+0x3dd4>
   172d0:	ldr	r0, [fp, #-8]
   172d4:	ldr	r1, [fp, #-12]
   172d8:	str	r1, [fp, #-40]	; 0xffffffd8
   172dc:	ldr	r2, [fp, #-16]
   172e0:	add	r3, sp, #63	; 0x3f
   172e4:	bl	19548 <main@@Base+0x5918>
   172e8:	str	r0, [fp, #-12]
   172ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   172f0:	ldr	r1, [fp, #-12]
   172f4:	cmp	r0, r1
   172f8:	bne	1734c <main@@Base+0x371c>
   172fc:	ldr	r0, [pc, #1840]	; 17a34 <main@@Base+0x3e04>
   17300:	add	r3, pc, r0
   17304:	ldr	r0, [fp, #-8]
   17308:	ldr	r1, [fp, #-12]
   1730c:	str	r1, [fp, #-40]	; 0xffffffd8
   17310:	ldr	r2, [fp, #-16]
   17314:	add	ip, sp, #63	; 0x3f
   17318:	str	ip, [sp]
   1731c:	bl	19624 <main@@Base+0x59f4>
   17320:	str	r0, [fp, #-12]
   17324:	ldr	r0, [fp, #-12]
   17328:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1732c:	cmp	r0, r1
   17330:	beq	17344 <main@@Base+0x3714>
   17334:	ldr	r0, [fp, #-12]
   17338:	ldr	r1, [fp, #-16]
   1733c:	cmp	r0, r1
   17340:	bne	17348 <main@@Base+0x3718>
   17344:	b	17a04 <main@@Base+0x3dd4>
   17348:	b	1734c <main@@Base+0x371c>
   1734c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17350:	ldrb	r1, [sp, #63]	; 0x3f
   17354:	bl	19850 <main@@Base+0x5c20>
   17358:	ldr	r0, [fp, #-8]
   1735c:	ldr	r1, [fp, #-12]
   17360:	ldr	r2, [fp, #-16]
   17364:	sub	r3, fp, #24
   17368:	bl	1987c <main@@Base+0x5c4c>
   1736c:	str	r0, [fp, #-12]
   17370:	b	17298 <main@@Base+0x3668>
   17374:	ldr	r0, [fp, #-8]
   17378:	ldr	r0, [r0]
   1737c:	bl	26e60 <flatcc_builder_end_vector@@Base>
   17380:	str	r0, [fp, #-32]	; 0xffffffe0
   17384:	b	173f4 <main@@Base+0x37c4>
   17388:	ldr	r0, [fp, #-8]
   1738c:	ldr	r0, [r0]
   17390:	movw	r1, #0
   17394:	str	r1, [sp, #16]
   17398:	movw	r2, #0
   1739c:	uxth	r2, r2
   173a0:	ldr	r3, [sp, #16]
   173a4:	bl	246cc <flatcc_builder_start_buffer@@Base>
   173a8:	cmp	r0, #0
   173ac:	beq	173b4 <main@@Base+0x3784>
   173b0:	b	17a04 <main@@Base+0x3dd4>
   173b4:	ldr	r0, [fp, #-8]
   173b8:	ldr	r1, [fp, #-12]
   173bc:	ldr	r2, [fp, #-16]
   173c0:	sub	r3, fp, #32
   173c4:	bl	14060 <main@@Base+0x430>
   173c8:	str	r0, [fp, #-12]
   173cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   173d0:	cmp	r0, #0
   173d4:	bne	173e0 <main@@Base+0x37b0>
   173d8:	b	17a04 <main@@Base+0x3dd4>
   173dc:	andeq	sp, r2, r0, lsl sp
   173e0:	ldr	r0, [fp, #-8]
   173e4:	ldr	r0, [r0]
   173e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   173ec:	bl	24a10 <flatcc_builder_end_buffer@@Base>
   173f0:	str	r0, [fp, #-32]	; 0xffffffe0
   173f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   173f8:	cmp	r0, #0
   173fc:	beq	17420 <main@@Base+0x37f0>
   17400:	ldr	r0, [fp, #-8]
   17404:	ldr	r0, [r0]
   17408:	movw	r1, #13
   1740c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   17410:	str	r0, [fp, #-36]	; 0xffffffdc
   17414:	movw	r1, #0
   17418:	cmp	r0, r1
   1741c:	bne	17424 <main@@Base+0x37f4>
   17420:	b	17a04 <main@@Base+0x3dd4>
   17424:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17428:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1742c:	str	r0, [r1]
   17430:	b	17448 <main@@Base+0x3818>
   17434:	ldr	r0, [fp, #-8]
   17438:	ldr	r1, [fp, #-12]
   1743c:	ldr	r2, [fp, #-16]
   17440:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   17444:	str	r0, [fp, #-12]
   17448:	b	17460 <main@@Base+0x3830>
   1744c:	ldr	r0, [fp, #-8]
   17450:	ldr	r1, [fp, #-12]
   17454:	ldr	r2, [fp, #-16]
   17458:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1745c:	str	r0, [fp, #-12]
   17460:	b	17478 <main@@Base+0x3848>
   17464:	ldr	r0, [fp, #-8]
   17468:	ldr	r1, [fp, #-12]
   1746c:	ldr	r2, [fp, #-16]
   17470:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   17474:	str	r0, [fp, #-12]
   17478:	b	17490 <main@@Base+0x3860>
   1747c:	ldr	r0, [fp, #-8]
   17480:	ldr	r1, [fp, #-12]
   17484:	ldr	r2, [fp, #-16]
   17488:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1748c:	str	r0, [fp, #-12]
   17490:	b	17940 <main@@Base+0x3d10>
   17494:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17498:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1749c:	movw	r2, #25460	; 0x6374
   174a0:	movt	r2, #30309	; 0x7665
   174a4:	eor	r1, r1, r2
   174a8:	movw	r2, #24431	; 0x5f6f
   174ac:	movt	r2, #28530	; 0x6f72
   174b0:	eor	r0, r0, r2
   174b4:	orr	r0, r0, r1
   174b8:	cmp	r0, #0
   174bc:	bne	17928 <main@@Base+0x3cf8>
   174c0:	b	174c4 <main@@Base+0x3894>
   174c4:	ldr	r0, [fp, #-12]
   174c8:	add	r0, r0, #8
   174cc:	str	r0, [fp, #-12]
   174d0:	ldr	r0, [fp, #-12]
   174d4:	ldr	r1, [fp, #-16]
   174d8:	bl	17bdc <main@@Base+0x3fac>
   174dc:	str	r1, [fp, #-44]	; 0xffffffd4
   174e0:	str	r0, [fp, #-48]	; 0xffffffd0
   174e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   174e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   174ec:	movw	r2, #25711	; 0x646f
   174f0:	movt	r2, #26207	; 0x665f
   174f4:	eor	r1, r1, r2
   174f8:	movw	r2, #27749	; 0x6c65
   174fc:	movt	r2, #30050	; 0x7562
   17500:	eor	r0, r0, r2
   17504:	orr	r0, r0, r1
   17508:	cmp	r0, #0
   1750c:	bne	17714 <main@@Base+0x3ae4>
   17510:	b	17514 <main@@Base+0x38e4>
   17514:	ldr	r0, [fp, #-12]
   17518:	add	r0, r0, #8
   1751c:	str	r0, [fp, #-12]
   17520:	ldr	r0, [fp, #-12]
   17524:	ldr	r1, [fp, #-16]
   17528:	bl	17bdc <main@@Base+0x3fac>
   1752c:	str	r1, [fp, #-44]	; 0xffffffd4
   17530:	str	r0, [fp, #-48]	; 0xffffffd0
   17534:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   17538:	mov	r1, #1929379840	; 0x73000000
   1753c:	teq	r1, r0, lsl #24
   17540:	bne	176fc <main@@Base+0x3acc>
   17544:	b	17548 <main@@Base+0x3918>
   17548:	ldr	r0, [fp, #-8]
   1754c:	ldr	r1, [fp, #-12]
   17550:	str	r1, [fp, #-40]	; 0xffffffd8
   17554:	ldr	r2, [fp, #-16]
   17558:	movw	r3, #1
   1755c:	bl	17c14 <main@@Base+0x3fe4>
   17560:	str	r0, [fp, #-12]
   17564:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17568:	ldr	r1, [fp, #-12]
   1756c:	cmp	r0, r1
   17570:	beq	176e4 <main@@Base+0x3ab4>
   17574:	ldr	r3, [pc, #1196]	; 17a28 <main@@Base+0x3df8>
   17578:	ldr	r0, [fp, #-8]
   1757c:	ldr	r0, [r0]
   17580:	movw	r1, #8
   17584:	movw	r2, #8
   17588:	uxth	r2, r2
   1758c:	bl	25980 <flatcc_builder_start_vector@@Base>
   17590:	cmp	r0, #0
   17594:	beq	1759c <main@@Base+0x396c>
   17598:	b	17a04 <main@@Base+0x3dd4>
   1759c:	ldr	r0, [fp, #-8]
   175a0:	ldr	r1, [fp, #-12]
   175a4:	ldr	r2, [fp, #-16]
   175a8:	sub	r3, fp, #24
   175ac:	bl	19464 <main@@Base+0x5834>
   175b0:	str	r0, [fp, #-12]
   175b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175b8:	cmp	r0, #0
   175bc:	beq	17694 <main@@Base+0x3a64>
   175c0:	vldr	d16, [pc, #1008]	; 179b8 <main@@Base+0x3d88>
   175c4:	vstr	d16, [sp, #48]	; 0x30
   175c8:	ldr	r0, [fp, #-8]
   175cc:	ldr	r0, [r0]
   175d0:	movw	r1, #1
   175d4:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   175d8:	str	r0, [fp, #-28]	; 0xffffffe4
   175dc:	movw	r1, #0
   175e0:	cmp	r0, r1
   175e4:	bne	175f0 <main@@Base+0x39c0>
   175e8:	b	17a04 <main@@Base+0x3dd4>
   175ec:	andeq	sp, r2, r0, lsr #22
   175f0:	ldr	r0, [fp, #-8]
   175f4:	ldr	r1, [fp, #-12]
   175f8:	str	r1, [fp, #-40]	; 0xffffffd8
   175fc:	ldr	r2, [fp, #-16]
   17600:	add	r3, sp, #48	; 0x30
   17604:	bl	2c620 <flatcc_json_parser_double@@Base>
   17608:	str	r0, [fp, #-12]
   1760c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17610:	ldr	r1, [fp, #-12]
   17614:	cmp	r0, r1
   17618:	bne	1766c <main@@Base+0x3a3c>
   1761c:	ldr	r0, [pc, #1036]	; 17a30 <main@@Base+0x3e00>
   17620:	add	r3, pc, r0
   17624:	ldr	r0, [fp, #-8]
   17628:	ldr	r1, [fp, #-12]
   1762c:	str	r1, [fp, #-40]	; 0xffffffd8
   17630:	ldr	r2, [fp, #-16]
   17634:	add	ip, sp, #48	; 0x30
   17638:	str	ip, [sp]
   1763c:	bl	1cc58 <main@@Base+0x9028>
   17640:	str	r0, [fp, #-12]
   17644:	ldr	r0, [fp, #-12]
   17648:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1764c:	cmp	r0, r1
   17650:	beq	17664 <main@@Base+0x3a34>
   17654:	ldr	r0, [fp, #-12]
   17658:	ldr	r1, [fp, #-16]
   1765c:	cmp	r0, r1
   17660:	bne	17668 <main@@Base+0x3a38>
   17664:	b	17a04 <main@@Base+0x3dd4>
   17668:	b	1766c <main@@Base+0x3a3c>
   1766c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17670:	vldr	d0, [sp, #48]	; 0x30
   17674:	bl	1ce90 <main@@Base+0x9260>
   17678:	ldr	r0, [fp, #-8]
   1767c:	ldr	r1, [fp, #-12]
   17680:	ldr	r2, [fp, #-16]
   17684:	sub	r3, fp, #24
   17688:	bl	1987c <main@@Base+0x5c4c>
   1768c:	str	r0, [fp, #-12]
   17690:	b	175b4 <main@@Base+0x3984>
   17694:	ldr	r0, [fp, #-8]
   17698:	ldr	r0, [r0]
   1769c:	bl	26e60 <flatcc_builder_end_vector@@Base>
   176a0:	str	r0, [fp, #-32]	; 0xffffffe0
   176a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176a8:	cmp	r0, #0
   176ac:	beq	176d0 <main@@Base+0x3aa0>
   176b0:	ldr	r0, [fp, #-8]
   176b4:	ldr	r0, [r0]
   176b8:	movw	r1, #33	; 0x21
   176bc:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   176c0:	str	r0, [fp, #-36]	; 0xffffffdc
   176c4:	movw	r1, #0
   176c8:	cmp	r0, r1
   176cc:	bne	176d4 <main@@Base+0x3aa4>
   176d0:	b	17a04 <main@@Base+0x3dd4>
   176d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   176dc:	str	r0, [r1]
   176e0:	b	176f8 <main@@Base+0x3ac8>
   176e4:	ldr	r0, [fp, #-8]
   176e8:	ldr	r1, [fp, #-12]
   176ec:	ldr	r2, [fp, #-16]
   176f0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   176f4:	str	r0, [fp, #-12]
   176f8:	b	17710 <main@@Base+0x3ae0>
   176fc:	ldr	r0, [fp, #-8]
   17700:	ldr	r1, [fp, #-12]
   17704:	ldr	r2, [fp, #-16]
   17708:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1770c:	str	r0, [fp, #-12]
   17710:	b	17924 <main@@Base+0x3cf4>
   17714:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17718:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1771c:	movw	r2, #24428	; 0x5f6c
   17720:	movt	r2, #102	; 0x66
   17724:	eor	r2, r2, r1, lsr #8
   17728:	lsr	r0, r0, #8
   1772c:	orr	r0, r0, r1, lsl #24
   17730:	movw	r1, #26483	; 0x6773
   17734:	movt	r1, #28526	; 0x6f6e
   17738:	eor	r0, r0, r1
   1773c:	orr	r0, r0, r2
   17740:	cmp	r0, #0
   17744:	bne	1790c <main@@Base+0x3cdc>
   17748:	b	17750 <main@@Base+0x3b20>
   1774c:	andeq	sp, r2, r0, ror #19
   17750:	ldr	r0, [fp, #-8]
   17754:	ldr	r1, [fp, #-12]
   17758:	str	r1, [fp, #-40]	; 0xffffffd8
   1775c:	ldr	r2, [fp, #-16]
   17760:	movw	r3, #7
   17764:	bl	17c14 <main@@Base+0x3fe4>
   17768:	str	r0, [fp, #-12]
   1776c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17770:	ldr	r1, [fp, #-12]
   17774:	cmp	r0, r1
   17778:	beq	178f4 <main@@Base+0x3cc4>
   1777c:	ldr	r3, [pc, #676]	; 17a28 <main@@Base+0x3df8>
   17780:	ldr	r0, [fp, #-8]
   17784:	ldr	r0, [r0]
   17788:	movw	r1, #8
   1778c:	movw	r2, #8
   17790:	uxth	r2, r2
   17794:	bl	25980 <flatcc_builder_start_vector@@Base>
   17798:	cmp	r0, #0
   1779c:	beq	177a4 <main@@Base+0x3b74>
   177a0:	b	17a04 <main@@Base+0x3dd4>
   177a4:	ldr	r0, [fp, #-8]
   177a8:	ldr	r1, [fp, #-12]
   177ac:	ldr	r2, [fp, #-16]
   177b0:	sub	r3, fp, #24
   177b4:	bl	19464 <main@@Base+0x5834>
   177b8:	str	r0, [fp, #-12]
   177bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177c0:	cmp	r0, #0
   177c4:	beq	178a0 <main@@Base+0x3c70>
   177c8:	mov	r0, #0
   177cc:	str	r0, [sp, #44]	; 0x2c
   177d0:	str	r0, [sp, #40]	; 0x28
   177d4:	ldr	r0, [fp, #-8]
   177d8:	ldr	r0, [r0]
   177dc:	movw	r1, #1
   177e0:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   177e4:	str	r0, [fp, #-28]	; 0xffffffe4
   177e8:	movw	r1, #0
   177ec:	cmp	r0, r1
   177f0:	bne	177f8 <main@@Base+0x3bc8>
   177f4:	b	17a04 <main@@Base+0x3dd4>
   177f8:	ldr	r0, [fp, #-8]
   177fc:	ldr	r1, [fp, #-12]
   17800:	str	r1, [fp, #-40]	; 0xffffffd8
   17804:	ldr	r2, [fp, #-16]
   17808:	add	r3, sp, #40	; 0x28
   1780c:	bl	1c288 <main@@Base+0x8658>
   17810:	str	r0, [fp, #-12]
   17814:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17818:	ldr	r1, [fp, #-12]
   1781c:	cmp	r0, r1
   17820:	bne	17874 <main@@Base+0x3c44>
   17824:	ldr	r0, [pc, #512]	; 17a2c <main@@Base+0x3dfc>
   17828:	add	r3, pc, r0
   1782c:	ldr	r0, [fp, #-8]
   17830:	ldr	r1, [fp, #-12]
   17834:	str	r1, [fp, #-40]	; 0xffffffd8
   17838:	ldr	r2, [fp, #-16]
   1783c:	add	ip, sp, #40	; 0x28
   17840:	str	ip, [sp]
   17844:	bl	1c360 <main@@Base+0x8730>
   17848:	str	r0, [fp, #-12]
   1784c:	ldr	r0, [fp, #-12]
   17850:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17854:	cmp	r0, r1
   17858:	beq	1786c <main@@Base+0x3c3c>
   1785c:	ldr	r0, [fp, #-12]
   17860:	ldr	r1, [fp, #-16]
   17864:	cmp	r0, r1
   17868:	bne	17870 <main@@Base+0x3c40>
   1786c:	b	17a04 <main@@Base+0x3dd4>
   17870:	b	17874 <main@@Base+0x3c44>
   17874:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17878:	ldr	r2, [sp, #40]	; 0x28
   1787c:	ldr	r3, [sp, #44]	; 0x2c
   17880:	bl	1c5a0 <main@@Base+0x8970>
   17884:	ldr	r0, [fp, #-8]
   17888:	ldr	r1, [fp, #-12]
   1788c:	ldr	r2, [fp, #-16]
   17890:	sub	r3, fp, #24
   17894:	bl	1987c <main@@Base+0x5c4c>
   17898:	str	r0, [fp, #-12]
   1789c:	b	177bc <main@@Base+0x3b8c>
   178a0:	ldr	r0, [fp, #-8]
   178a4:	ldr	r0, [r0]
   178a8:	bl	26e60 <flatcc_builder_end_vector@@Base>
   178ac:	str	r0, [fp, #-32]	; 0xffffffe0
   178b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178b4:	cmp	r0, #0
   178b8:	beq	178dc <main@@Base+0x3cac>
   178bc:	ldr	r0, [fp, #-8]
   178c0:	ldr	r0, [r0]
   178c4:	movw	r1, #32
   178c8:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   178cc:	str	r0, [fp, #-36]	; 0xffffffdc
   178d0:	movw	r1, #0
   178d4:	cmp	r0, r1
   178d8:	bne	178e0 <main@@Base+0x3cb0>
   178dc:	b	17a04 <main@@Base+0x3dd4>
   178e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   178e8:	str	r0, [r1]
   178ec:	b	17908 <main@@Base+0x3cd8>
   178f0:	andeq	sp, r2, r4, lsr r8
   178f4:	ldr	r0, [fp, #-8]
   178f8:	ldr	r1, [fp, #-12]
   178fc:	ldr	r2, [fp, #-16]
   17900:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   17904:	str	r0, [fp, #-12]
   17908:	b	17920 <main@@Base+0x3cf0>
   1790c:	ldr	r0, [fp, #-8]
   17910:	ldr	r1, [fp, #-12]
   17914:	ldr	r2, [fp, #-16]
   17918:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1791c:	str	r0, [fp, #-12]
   17920:	b	17924 <main@@Base+0x3cf4>
   17924:	b	1793c <main@@Base+0x3d0c>
   17928:	ldr	r0, [fp, #-8]
   1792c:	ldr	r1, [fp, #-12]
   17930:	ldr	r2, [fp, #-16]
   17934:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   17938:	str	r0, [fp, #-12]
   1793c:	b	17940 <main@@Base+0x3d10>
   17940:	b	17944 <main@@Base+0x3d14>
   17944:	b	17948 <main@@Base+0x3d18>
   17948:	b	1794c <main@@Base+0x3d1c>
   1794c:	b	17950 <main@@Base+0x3d20>
   17950:	ldr	r0, [fp, #-8]
   17954:	ldr	r1, [fp, #-12]
   17958:	ldr	r2, [fp, #-16]
   1795c:	sub	r3, fp, #24
   17960:	bl	1cebc <main@@Base+0x928c>
   17964:	str	r0, [fp, #-12]
   17968:	b	140fc <main@@Base+0x4cc>
   1796c:	ldr	r0, [fp, #-8]
   17970:	ldr	r0, [r0, #24]
   17974:	cmp	r0, #0
   17978:	beq	17980 <main@@Base+0x3d50>
   1797c:	b	17a04 <main@@Base+0x3dd4>
   17980:	ldr	r0, [fp, #-8]
   17984:	ldr	r0, [r0]
   17988:	movw	r1, #3
   1798c:	uxth	r1, r1
   17990:	bl	26768 <flatcc_builder_check_required_field@@Base>
   17994:	cmp	r0, #0
   17998:	bne	179c0 <main@@Base+0x3d90>
   1799c:	ldr	r0, [fp, #-8]
   179a0:	ldr	r1, [fp, #-12]
   179a4:	ldr	r2, [fp, #-16]
   179a8:	movw	r3, #29
   179ac:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   179b0:	str	r0, [fp, #-12]
   179b4:	b	17a04 <main@@Base+0x3dd4>
	...
   179c0:	ldr	r0, [fp, #-8]
   179c4:	ldr	r1, [fp, #-12]
   179c8:	ldr	r2, [fp, #-16]
   179cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   179d0:	bl	2dfb4 <flatcc_json_parser_finalize_unions@@Base>
   179d4:	str	r0, [fp, #-12]
   179d8:	ldr	r0, [fp, #-8]
   179dc:	ldr	r0, [r0]
   179e0:	bl	26a5c <flatcc_builder_end_table@@Base>
   179e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   179e8:	str	r0, [r1]
   179ec:	cmp	r0, #0
   179f0:	bne	179f8 <main@@Base+0x3dc8>
   179f4:	b	17a04 <main@@Base+0x3dd4>
   179f8:	ldr	r0, [fp, #-12]
   179fc:	str	r0, [fp, #-4]
   17a00:	b	17a1c <main@@Base+0x3dec>
   17a04:	ldr	r0, [fp, #-8]
   17a08:	ldr	r1, [fp, #-12]
   17a0c:	ldr	r2, [fp, #-16]
   17a10:	movw	r3, #33	; 0x21
   17a14:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   17a18:	str	r0, [fp, #-4]
   17a1c:	ldr	r0, [fp, #-4]
   17a20:	mov	sp, fp
   17a24:	pop	{fp, pc}
   17a28:	svcne	0x00ffffff
   17a2c:	andeq	ip, r2, r0, ror r9
   17a30:	andeq	ip, r2, ip, ror #22
   17a34:	andeq	ip, r2, r0, lsl #29
   17a38:	andeq	sp, r2, r4, ror #2
   17a3c:			; <UNDEFINED> instruction: 0x0002d2b0
   17a40:	andeq	sp, r2, r0, lsr #8
   17a44:	andeq	sp, r2, r8, asr r5
   17a48:	andeq	sp, r2, r8, ror #13
   17a4c:	push	{fp, lr}
   17a50:	mov	fp, sp
   17a54:	sub	sp, sp, #24
   17a58:	str	r0, [fp, #-8]
   17a5c:	str	r1, [sp, #12]
   17a60:	str	r2, [sp, #8]
   17a64:	str	r3, [sp, #4]
   17a68:	ldr	r0, [sp, #12]
   17a6c:	ldr	r1, [sp, #8]
   17a70:	cmp	r0, r1
   17a74:	beq	17a88 <main@@Base+0x3e58>
   17a78:	ldr	r0, [sp, #12]
   17a7c:	ldrb	r0, [r0]
   17a80:	cmp	r0, #123	; 0x7b
   17a84:	beq	17ab0 <main@@Base+0x3e80>
   17a88:	ldr	r0, [sp, #4]
   17a8c:	movw	r1, #0
   17a90:	str	r1, [r0]
   17a94:	ldr	r0, [fp, #-8]
   17a98:	ldr	r1, [sp, #12]
   17a9c:	ldr	r2, [sp, #8]
   17aa0:	movw	r3, #21
   17aa4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   17aa8:	str	r0, [fp, #-4]
   17aac:	b	17b24 <main@@Base+0x3ef4>
   17ab0:	ldr	r0, [fp, #-8]
   17ab4:	ldr	r1, [sp, #12]
   17ab8:	add	r1, r1, #1
   17abc:	ldr	r2, [sp, #8]
   17ac0:	bl	1d020 <main@@Base+0x93f0>
   17ac4:	str	r0, [sp, #12]
   17ac8:	ldr	r0, [sp, #12]
   17acc:	ldr	r1, [sp, #8]
   17ad0:	cmp	r0, r1
   17ad4:	beq	17b10 <main@@Base+0x3ee0>
   17ad8:	ldr	r0, [sp, #12]
   17adc:	ldrb	r0, [r0]
   17ae0:	cmp	r0, #125	; 0x7d
   17ae4:	bne	17b10 <main@@Base+0x3ee0>
   17ae8:	ldr	r0, [sp, #4]
   17aec:	movw	r1, #0
   17af0:	str	r1, [r0]
   17af4:	ldr	r0, [fp, #-8]
   17af8:	ldr	r1, [sp, #12]
   17afc:	add	r1, r1, #1
   17b00:	ldr	r2, [sp, #8]
   17b04:	bl	1d020 <main@@Base+0x93f0>
   17b08:	str	r0, [fp, #-4]
   17b0c:	b	17b24 <main@@Base+0x3ef4>
   17b10:	ldr	r0, [sp, #4]
   17b14:	movw	r1, #1
   17b18:	str	r1, [r0]
   17b1c:	ldr	r0, [sp, #12]
   17b20:	str	r0, [fp, #-4]
   17b24:	ldr	r0, [fp, #-4]
   17b28:	mov	sp, fp
   17b2c:	pop	{fp, pc}
   17b30:	push	{fp, lr}
   17b34:	mov	fp, sp
   17b38:	sub	sp, sp, #16
   17b3c:	str	r0, [sp, #8]
   17b40:	str	r1, [sp, #4]
   17b44:	str	r2, [sp]
   17b48:	ldr	r0, [sp, #4]
   17b4c:	ldr	r1, [sp]
   17b50:	cmp	r0, r1
   17b54:	bne	17b64 <main@@Base+0x3f34>
   17b58:	ldr	r0, [sp, #4]
   17b5c:	str	r0, [fp, #-4]
   17b60:	b	17bd0 <main@@Base+0x3fa0>
   17b64:	ldr	r0, [sp, #4]
   17b68:	ldrb	r0, [r0]
   17b6c:	cmp	r0, #34	; 0x22
   17b70:	bne	17b90 <main@@Base+0x3f60>
   17b74:	ldr	r0, [sp, #4]
   17b78:	add	r0, r0, #1
   17b7c:	str	r0, [sp, #4]
   17b80:	ldr	r0, [sp, #8]
   17b84:	movw	r1, #0
   17b88:	str	r1, [r0, #12]
   17b8c:	b	17bc8 <main@@Base+0x3f98>
   17b90:	ldr	r0, [sp, #4]
   17b94:	ldrb	r0, [r0]
   17b98:	cmp	r0, #46	; 0x2e
   17b9c:	bne	17bbc <main@@Base+0x3f8c>
   17ba0:	ldr	r0, [sp, #8]
   17ba4:	ldr	r1, [sp, #4]
   17ba8:	ldr	r2, [sp]
   17bac:	movw	r3, #5
   17bb0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   17bb4:	str	r0, [fp, #-4]
   17bb8:	b	17bd0 <main@@Base+0x3fa0>
   17bbc:	ldr	r0, [sp, #8]
   17bc0:	movw	r1, #1
   17bc4:	str	r1, [r0, #12]
   17bc8:	ldr	r0, [sp, #4]
   17bcc:	str	r0, [fp, #-4]
   17bd0:	ldr	r0, [fp, #-4]
   17bd4:	mov	sp, fp
   17bd8:	pop	{fp, pc}
   17bdc:	push	{fp, lr}
   17be0:	mov	fp, sp
   17be4:	sub	sp, sp, #16
   17be8:	str	r0, [fp, #-4]
   17bec:	str	r1, [sp, #8]
   17bf0:	ldr	r0, [sp, #8]
   17bf4:	ldr	r1, [fp, #-4]
   17bf8:	sub	r0, r0, r1
   17bfc:	str	r0, [sp, #4]
   17c00:	ldr	r0, [fp, #-4]
   17c04:	ldr	r1, [sp, #8]
   17c08:	bl	1d0bc <main@@Base+0x948c>
   17c0c:	mov	sp, fp
   17c10:	pop	{fp, pc}
   17c14:	push	{fp, lr}
   17c18:	mov	fp, sp
   17c1c:	sub	sp, sp, #24
   17c20:	str	r0, [fp, #-8]
   17c24:	str	r1, [sp, #12]
   17c28:	str	r2, [sp, #8]
   17c2c:	str	r3, [sp, #4]
   17c30:	ldr	r0, [sp, #12]
   17c34:	str	r0, [sp]
   17c38:	ldr	r0, [sp, #8]
   17c3c:	ldr	r1, [sp, #12]
   17c40:	sub	r0, r0, r1
   17c44:	ldr	r1, [sp, #4]
   17c48:	cmp	r0, r1
   17c4c:	bgt	17c5c <main@@Base+0x402c>
   17c50:	ldr	r0, [sp]
   17c54:	str	r0, [fp, #-4]
   17c58:	b	17d70 <main@@Base+0x4140>
   17c5c:	ldr	r0, [fp, #-8]
   17c60:	ldr	r0, [r0, #12]
   17c64:	cmp	r0, #0
   17c68:	beq	17cc8 <main@@Base+0x4098>
   17c6c:	ldr	r0, [sp, #12]
   17c70:	ldr	r1, [sp, #4]
   17c74:	add	r0, r0, r1
   17c78:	ldrb	r0, [r0]
   17c7c:	cmp	r0, #32
   17c80:	ble	17ca8 <main@@Base+0x4078>
   17c84:	ldr	r0, [sp, #12]
   17c88:	ldr	r1, [sp, #4]
   17c8c:	add	r0, r0, r1
   17c90:	ldrb	r0, [r0]
   17c94:	cmp	r0, #58	; 0x3a
   17c98:	beq	17ca8 <main@@Base+0x4078>
   17c9c:	ldr	r0, [sp]
   17ca0:	str	r0, [fp, #-4]
   17ca4:	b	17d70 <main@@Base+0x4140>
   17ca8:	ldr	r0, [sp, #4]
   17cac:	ldr	r1, [sp, #12]
   17cb0:	add	r0, r1, r0
   17cb4:	str	r0, [sp, #12]
   17cb8:	ldr	r0, [fp, #-8]
   17cbc:	movw	r1, #0
   17cc0:	str	r1, [r0, #12]
   17cc4:	b	17d00 <main@@Base+0x40d0>
   17cc8:	ldr	r0, [sp, #12]
   17ccc:	ldr	r1, [sp, #4]
   17cd0:	add	r0, r0, r1
   17cd4:	ldrb	r0, [r0]
   17cd8:	cmp	r0, #34	; 0x22
   17cdc:	beq	17cec <main@@Base+0x40bc>
   17ce0:	ldr	r0, [sp]
   17ce4:	str	r0, [fp, #-4]
   17ce8:	b	17d70 <main@@Base+0x4140>
   17cec:	ldr	r0, [sp, #4]
   17cf0:	add	r0, r0, #1
   17cf4:	ldr	r1, [sp, #12]
   17cf8:	add	r0, r1, r0
   17cfc:	str	r0, [sp, #12]
   17d00:	ldr	r0, [fp, #-8]
   17d04:	ldr	r1, [sp, #12]
   17d08:	ldr	r2, [sp, #8]
   17d0c:	bl	1d020 <main@@Base+0x93f0>
   17d10:	str	r0, [sp, #12]
   17d14:	ldr	r0, [sp, #12]
   17d18:	ldr	r1, [sp, #8]
   17d1c:	cmp	r0, r1
   17d20:	beq	17d58 <main@@Base+0x4128>
   17d24:	ldr	r0, [sp, #12]
   17d28:	ldrb	r0, [r0]
   17d2c:	cmp	r0, #58	; 0x3a
   17d30:	bne	17d58 <main@@Base+0x4128>
   17d34:	ldr	r0, [sp, #12]
   17d38:	add	r0, r0, #1
   17d3c:	str	r0, [sp, #12]
   17d40:	ldr	r0, [fp, #-8]
   17d44:	ldr	r1, [sp, #12]
   17d48:	ldr	r2, [sp, #8]
   17d4c:	bl	1d020 <main@@Base+0x93f0>
   17d50:	str	r0, [fp, #-4]
   17d54:	b	17d70 <main@@Base+0x4140>
   17d58:	ldr	r0, [fp, #-8]
   17d5c:	ldr	r1, [sp, #12]
   17d60:	ldr	r2, [sp, #8]
   17d64:	movw	r3, #4
   17d68:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   17d6c:	str	r0, [fp, #-4]
   17d70:	ldr	r0, [fp, #-4]
   17d74:	mov	sp, fp
   17d78:	pop	{fp, pc}
   17d7c:	push	{fp, lr}
   17d80:	mov	fp, sp
   17d84:	sub	sp, sp, #64	; 0x40
   17d88:	ldr	ip, [fp, #12]
   17d8c:	ldr	lr, [fp, #8]
   17d90:	str	r0, [fp, #-8]
   17d94:	str	r1, [fp, #-12]
   17d98:	str	r2, [fp, #-16]
   17d9c:	str	r3, [fp, #-20]	; 0xffffffec
   17da0:	ldr	r0, [fp, #-12]
   17da4:	str	r0, [fp, #-24]	; 0xffffffe8
   17da8:	ldr	r0, [fp, #-12]
   17dac:	ldr	r1, [fp, #-16]
   17db0:	str	ip, [sp, #20]
   17db4:	str	lr, [sp, #16]
   17db8:	bl	17bdc <main@@Base+0x3fac>
   17dbc:	str	r1, [sp, #28]
   17dc0:	str	r0, [sp, #24]
   17dc4:	ldr	r0, [sp, #24]
   17dc8:	ldr	r1, [sp, #28]
   17dcc:	mvn	r2, #-1845493760	; 0x92000000
   17dd0:	subs	r0, r2, r0
   17dd4:	movw	r2, #25957	; 0x6565
   17dd8:	movt	r2, #18290	; 0x4772
   17ddc:	sbcs	r1, r2, r1
   17de0:	bcc	17e84 <main@@Base+0x4254>
   17de4:	b	17de8 <main@@Base+0x41b8>
   17de8:	ldr	r0, [sp, #28]
   17dec:	movw	r1, #30053	; 0x7565
   17df0:	movt	r1, #17004	; 0x426c
   17df4:	teq	r0, r1
   17df8:	bne	17e74 <main@@Base+0x4244>
   17dfc:	b	17e00 <main@@Base+0x41d0>
   17e00:	ldr	r0, [fp, #-8]
   17e04:	ldr	r1, [fp, #-12]
   17e08:	str	r1, [fp, #-28]	; 0xffffffe4
   17e0c:	ldr	r2, [fp, #-16]
   17e10:	ldr	r3, [fp, #12]
   17e14:	movw	ip, #4
   17e18:	str	r3, [sp, #12]
   17e1c:	mov	r3, ip
   17e20:	ldr	ip, [sp, #12]
   17e24:	str	ip, [sp]
   17e28:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   17e2c:	str	r0, [fp, #-12]
   17e30:	ldr	r0, [fp, #-12]
   17e34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17e38:	cmp	r0, r1
   17e3c:	beq	17e64 <main@@Base+0x4234>
   17e40:	ldr	r0, [fp, #8]
   17e44:	mov	r1, #0
   17e48:	str	r1, [r0, #4]
   17e4c:	mov	r1, #8
   17e50:	str	r1, [r0]
   17e54:	ldr	r0, [fp, #-20]	; 0xffffffec
   17e58:	movw	r1, #0
   17e5c:	str	r1, [r0]
   17e60:	b	17e70 <main@@Base+0x4240>
   17e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e68:	str	r0, [fp, #-4]
   17e6c:	b	17fcc <main@@Base+0x439c>
   17e70:	b	17e80 <main@@Base+0x4250>
   17e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e78:	str	r0, [fp, #-4]
   17e7c:	b	17fcc <main@@Base+0x439c>
   17e80:	b	17fc4 <main@@Base+0x4394>
   17e84:	ldr	r0, [sp, #28]
   17e88:	bic	r0, r0, #255	; 0xff
   17e8c:	movw	r1, #25600	; 0x6400
   17e90:	movt	r1, #21093	; 0x5265
   17e94:	teq	r0, r1
   17e98:	bne	17f14 <main@@Base+0x42e4>
   17e9c:	b	17ea0 <main@@Base+0x4270>
   17ea0:	ldr	r0, [fp, #-8]
   17ea4:	ldr	r1, [fp, #-12]
   17ea8:	str	r1, [fp, #-28]	; 0xffffffe4
   17eac:	ldr	r2, [fp, #-16]
   17eb0:	ldr	r3, [fp, #12]
   17eb4:	movw	ip, #3
   17eb8:	str	r3, [sp, #8]
   17ebc:	mov	r3, ip
   17ec0:	ldr	ip, [sp, #8]
   17ec4:	str	ip, [sp]
   17ec8:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   17ecc:	str	r0, [fp, #-12]
   17ed0:	ldr	r0, [fp, #-12]
   17ed4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17ed8:	cmp	r0, r1
   17edc:	beq	17f04 <main@@Base+0x42d4>
   17ee0:	ldr	r0, [fp, #8]
   17ee4:	mov	r1, #0
   17ee8:	str	r1, [r0, #4]
   17eec:	mov	r1, #1
   17ef0:	str	r1, [r0]
   17ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17ef8:	movw	r1, #0
   17efc:	str	r1, [r0]
   17f00:	b	17f10 <main@@Base+0x42e0>
   17f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f08:	str	r0, [fp, #-4]
   17f0c:	b	17fcc <main@@Base+0x439c>
   17f10:	b	17fc0 <main@@Base+0x4390>
   17f14:	ldrb	r0, [sp, #27]
   17f18:	ldr	r1, [sp, #28]
   17f1c:	movw	r2, #25957	; 0x6565
   17f20:	movt	r2, #18290	; 0x4772
   17f24:	eor	r1, r1, r2
   17f28:	eor	r0, r0, #110	; 0x6e
   17f2c:	orr	r0, r1, r0, lsl #24
   17f30:	cmp	r0, #0
   17f34:	bne	17fb0 <main@@Base+0x4380>
   17f38:	b	17f3c <main@@Base+0x430c>
   17f3c:	ldr	r0, [fp, #-8]
   17f40:	ldr	r1, [fp, #-12]
   17f44:	str	r1, [fp, #-28]	; 0xffffffe4
   17f48:	ldr	r2, [fp, #-16]
   17f4c:	ldr	r3, [fp, #12]
   17f50:	movw	ip, #5
   17f54:	str	r3, [sp, #4]
   17f58:	mov	r3, ip
   17f5c:	ldr	ip, [sp, #4]
   17f60:	str	ip, [sp]
   17f64:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   17f68:	str	r0, [fp, #-12]
   17f6c:	ldr	r0, [fp, #-12]
   17f70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17f74:	cmp	r0, r1
   17f78:	beq	17fa0 <main@@Base+0x4370>
   17f7c:	ldr	r0, [fp, #8]
   17f80:	mov	r1, #0
   17f84:	str	r1, [r0, #4]
   17f88:	mov	r1, #2
   17f8c:	str	r1, [r0]
   17f90:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f94:	movw	r1, #0
   17f98:	str	r1, [r0]
   17f9c:	b	17fac <main@@Base+0x437c>
   17fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fa4:	str	r0, [fp, #-4]
   17fa8:	b	17fcc <main@@Base+0x439c>
   17fac:	b	17fbc <main@@Base+0x438c>
   17fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fb4:	str	r0, [fp, #-4]
   17fb8:	b	17fcc <main@@Base+0x439c>
   17fbc:	b	17fc0 <main@@Base+0x4390>
   17fc0:	b	17fc4 <main@@Base+0x4394>
   17fc4:	ldr	r0, [fp, #-12]
   17fc8:	str	r0, [fp, #-4]
   17fcc:	ldr	r0, [fp, #-4]
   17fd0:	mov	sp, fp
   17fd4:	pop	{fp, pc}
   17fd8:	push	{fp, lr}
   17fdc:	mov	fp, sp
   17fe0:	sub	sp, sp, #56	; 0x38
   17fe4:	ldr	ip, [fp, #12]
   17fe8:	ldr	lr, [fp, #8]
   17fec:	str	r0, [fp, #-8]
   17ff0:	str	r1, [fp, #-12]
   17ff4:	str	r2, [fp, #-16]
   17ff8:	str	r3, [fp, #-20]	; 0xffffffec
   17ffc:	ldr	r0, [fp, #-12]
   18000:	str	r0, [fp, #-24]	; 0xffffffe8
   18004:	ldr	r0, [fp, #-12]
   18008:	ldr	r1, [fp, #-16]
   1800c:	str	ip, [sp, #12]
   18010:	str	lr, [sp, #8]
   18014:	bl	17bdc <main@@Base+0x3fac>
   18018:	str	r1, [sp, #20]
   1801c:	str	r0, [sp, #16]
   18020:	ldr	r0, [sp, #16]
   18024:	ldr	r1, [sp, #20]
   18028:	movw	r2, #30060	; 0x756c
   1802c:	movt	r2, #25966	; 0x656e
   18030:	subs	r0, r2, r0
   18034:	movw	r2, #30815	; 0x785f
   18038:	movt	r2, #26725	; 0x6865
   1803c:	sbcs	r1, r2, r1
   18040:	bcc	1822c <main@@Base+0x45fc>
   18044:	b	18048 <main@@Base+0x4418>
   18048:	ldr	r0, [sp, #16]
   1804c:	ldr	r1, [sp, #20]
   18050:	mvn	r2, #-1912602624	; 0x8e000000
   18054:	subs	r0, r2, r0
   18058:	movw	r2, #27759	; 0x6c6f
   1805c:	movt	r2, #17263	; 0x436f
   18060:	sbcs	r1, r2, r1
   18064:	bcc	18100 <main@@Base+0x44d0>
   18068:	b	1806c <main@@Base+0x443c>
   1806c:	ldr	r0, [sp, #20]
   18070:	bic	r0, r0, #255	; 0xff
   18074:	movw	r1, #30976	; 0x7900
   18078:	movt	r1, #16750	; 0x416e
   1807c:	teq	r0, r1
   18080:	bne	180f0 <main@@Base+0x44c0>
   18084:	b	18088 <main@@Base+0x4458>
   18088:	ldr	r0, [fp, #-8]
   1808c:	ldr	r1, [fp, #-12]
   18090:	str	r1, [sp, #28]
   18094:	ldr	r2, [fp, #-16]
   18098:	movw	r3, #3
   1809c:	bl	1d230 <main@@Base+0x9600>
   180a0:	str	r0, [fp, #-12]
   180a4:	ldr	r0, [fp, #-12]
   180a8:	ldr	r1, [sp, #28]
   180ac:	cmp	r0, r1
   180b0:	beq	180e0 <main@@Base+0x44b0>
   180b4:	ldr	r0, [fp, #-8]
   180b8:	ldr	r1, [fp, #-12]
   180bc:	ldr	r2, [fp, #-16]
   180c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   180c4:	ldr	ip, [fp, #8]
   180c8:	ldr	lr, [fp, #12]
   180cc:	str	ip, [sp]
   180d0:	str	lr, [sp, #4]
   180d4:	bl	1a990 <main@@Base+0x6d60>
   180d8:	str	r0, [fp, #-12]
   180dc:	b	180ec <main@@Base+0x44bc>
   180e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180e4:	str	r0, [fp, #-4]
   180e8:	b	18568 <main@@Base+0x4938>
   180ec:	b	180fc <main@@Base+0x44cc>
   180f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180f4:	str	r0, [fp, #-4]
   180f8:	b	18568 <main@@Base+0x4938>
   180fc:	b	18228 <main@@Base+0x45f8>
   18100:	ldr	r0, [sp, #20]
   18104:	bic	r0, r0, #255	; 0xff
   18108:	movw	r1, #28416	; 0x6f00
   1810c:	movt	r1, #18031	; 0x466f
   18110:	teq	r0, r1
   18114:	bne	18184 <main@@Base+0x4554>
   18118:	b	1811c <main@@Base+0x44ec>
   1811c:	ldr	r0, [fp, #-8]
   18120:	ldr	r1, [fp, #-12]
   18124:	str	r1, [sp, #28]
   18128:	ldr	r2, [fp, #-16]
   1812c:	movw	r3, #3
   18130:	bl	1d230 <main@@Base+0x9600>
   18134:	str	r0, [fp, #-12]
   18138:	ldr	r0, [fp, #-12]
   1813c:	ldr	r1, [sp, #28]
   18140:	cmp	r0, r1
   18144:	beq	18174 <main@@Base+0x4544>
   18148:	ldr	r0, [fp, #-8]
   1814c:	ldr	r1, [fp, #-12]
   18150:	ldr	r2, [fp, #-16]
   18154:	ldr	r3, [fp, #-20]	; 0xffffffec
   18158:	ldr	ip, [fp, #8]
   1815c:	ldr	lr, [fp, #12]
   18160:	str	ip, [sp]
   18164:	str	lr, [sp, #4]
   18168:	bl	1d2b4 <main@@Base+0x9684>
   1816c:	str	r0, [fp, #-12]
   18170:	b	18180 <main@@Base+0x4550>
   18174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18178:	str	r0, [fp, #-4]
   1817c:	b	18568 <main@@Base+0x4938>
   18180:	b	18224 <main@@Base+0x45f4>
   18184:	ldrb	r0, [sp, #19]
   18188:	ldr	r1, [sp, #20]
   1818c:	movw	r2, #27759	; 0x6c6f
   18190:	movt	r2, #17263	; 0x436f
   18194:	eor	r1, r1, r2
   18198:	eor	r0, r0, #114	; 0x72
   1819c:	orr	r0, r1, r0, lsl #24
   181a0:	cmp	r0, #0
   181a4:	bne	18214 <main@@Base+0x45e4>
   181a8:	b	181ac <main@@Base+0x457c>
   181ac:	ldr	r0, [fp, #-8]
   181b0:	ldr	r1, [fp, #-12]
   181b4:	str	r1, [sp, #28]
   181b8:	ldr	r2, [fp, #-16]
   181bc:	movw	r3, #5
   181c0:	bl	1d230 <main@@Base+0x9600>
   181c4:	str	r0, [fp, #-12]
   181c8:	ldr	r0, [fp, #-12]
   181cc:	ldr	r1, [sp, #28]
   181d0:	cmp	r0, r1
   181d4:	beq	18204 <main@@Base+0x45d4>
   181d8:	ldr	r0, [fp, #-8]
   181dc:	ldr	r1, [fp, #-12]
   181e0:	ldr	r2, [fp, #-16]
   181e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   181e8:	ldr	ip, [fp, #8]
   181ec:	ldr	lr, [fp, #12]
   181f0:	str	ip, [sp]
   181f4:	str	lr, [sp, #4]
   181f8:	bl	17d7c <main@@Base+0x414c>
   181fc:	str	r0, [fp, #-12]
   18200:	b	18210 <main@@Base+0x45e0>
   18204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18208:	str	r0, [fp, #-4]
   1820c:	b	18568 <main@@Base+0x4938>
   18210:	b	18220 <main@@Base+0x45f0>
   18214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18218:	str	r0, [fp, #-4]
   1821c:	b	18568 <main@@Base+0x4938>
   18220:	b	18224 <main@@Base+0x45f4>
   18224:	b	18228 <main@@Base+0x45f8>
   18228:	b	18560 <main@@Base+0x4930>
   1822c:	ldr	r0, [sp, #16]
   18230:	ldr	r1, [sp, #20]
   18234:	movw	r2, #30060	; 0x756c
   18238:	movt	r2, #25966	; 0x656e
   1823c:	subs	r0, r2, r0
   18240:	movw	r2, #29791	; 0x745f
   18244:	movt	r2, #26990	; 0x696e
   18248:	sbcs	r1, r2, r1
   1824c:	bcc	182fc <main@@Base+0x46cc>
   18250:	b	18254 <main@@Base+0x4624>
   18254:	ldr	r0, [sp, #16]
   18258:	ldr	r1, [sp, #20]
   1825c:	movw	r2, #30815	; 0x785f
   18260:	movt	r2, #26725	; 0x6865
   18264:	eor	r1, r1, r2
   18268:	movw	r2, #30061	; 0x756d
   1826c:	movt	r2, #25966	; 0x656e
   18270:	eor	r0, r0, r2
   18274:	orr	r0, r0, r1
   18278:	cmp	r0, #0
   1827c:	bne	182ec <main@@Base+0x46bc>
   18280:	b	18284 <main@@Base+0x4654>
   18284:	ldr	r0, [fp, #-8]
   18288:	ldr	r1, [fp, #-12]
   1828c:	str	r1, [sp, #28]
   18290:	ldr	r2, [fp, #-16]
   18294:	movw	r3, #8
   18298:	bl	1d230 <main@@Base+0x9600>
   1829c:	str	r0, [fp, #-12]
   182a0:	ldr	r0, [fp, #-12]
   182a4:	ldr	r1, [sp, #28]
   182a8:	cmp	r0, r1
   182ac:	beq	182dc <main@@Base+0x46ac>
   182b0:	ldr	r0, [fp, #-8]
   182b4:	ldr	r1, [fp, #-12]
   182b8:	ldr	r2, [fp, #-16]
   182bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   182c0:	ldr	ip, [fp, #8]
   182c4:	ldr	lr, [fp, #12]
   182c8:	str	ip, [sp]
   182cc:	str	lr, [sp, #4]
   182d0:	bl	1d4f0 <main@@Base+0x98c0>
   182d4:	str	r0, [fp, #-12]
   182d8:	b	182e8 <main@@Base+0x46b8>
   182dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182e0:	str	r0, [fp, #-4]
   182e4:	b	18568 <main@@Base+0x4938>
   182e8:	b	182f8 <main@@Base+0x46c8>
   182ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182f0:	str	r0, [fp, #-4]
   182f4:	b	18568 <main@@Base+0x4938>
   182f8:	b	1855c <main@@Base+0x492c>
   182fc:	ldr	r0, [sp, #16]
   18300:	ldr	r1, [sp, #20]
   18304:	movw	r2, #30060	; 0x756c
   18308:	movt	r2, #25966	; 0x656e
   1830c:	subs	r0, r2, r0
   18310:	movw	r2, #26463	; 0x675f
   18314:	movt	r2, #28261	; 0x6e65
   18318:	sbcs	r1, r2, r1
   1831c:	bcc	183cc <main@@Base+0x479c>
   18320:	b	18324 <main@@Base+0x46f4>
   18324:	ldr	r0, [sp, #16]
   18328:	ldr	r1, [sp, #20]
   1832c:	movw	r2, #29791	; 0x745f
   18330:	movt	r2, #26990	; 0x696e
   18334:	eor	r1, r1, r2
   18338:	movw	r2, #30061	; 0x756d
   1833c:	movt	r2, #25966	; 0x656e
   18340:	eor	r0, r0, r2
   18344:	orr	r0, r0, r1
   18348:	cmp	r0, #0
   1834c:	bne	183bc <main@@Base+0x478c>
   18350:	b	18354 <main@@Base+0x4724>
   18354:	ldr	r0, [fp, #-8]
   18358:	ldr	r1, [fp, #-12]
   1835c:	str	r1, [sp, #28]
   18360:	ldr	r2, [fp, #-16]
   18364:	movw	r3, #8
   18368:	bl	1d230 <main@@Base+0x9600>
   1836c:	str	r0, [fp, #-12]
   18370:	ldr	r0, [fp, #-12]
   18374:	ldr	r1, [sp, #28]
   18378:	cmp	r0, r1
   1837c:	beq	183ac <main@@Base+0x477c>
   18380:	ldr	r0, [fp, #-8]
   18384:	ldr	r1, [fp, #-12]
   18388:	ldr	r2, [fp, #-16]
   1838c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18390:	ldr	ip, [fp, #8]
   18394:	ldr	lr, [fp, #12]
   18398:	str	ip, [sp]
   1839c:	str	lr, [sp, #4]
   183a0:	bl	1d748 <main@@Base+0x9b18>
   183a4:	str	r0, [fp, #-12]
   183a8:	b	183b8 <main@@Base+0x4788>
   183ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183b0:	str	r0, [fp, #-4]
   183b4:	b	18568 <main@@Base+0x4938>
   183b8:	b	183c8 <main@@Base+0x4798>
   183bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183c0:	str	r0, [fp, #-4]
   183c4:	b	18568 <main@@Base+0x4938>
   183c8:	b	18558 <main@@Base+0x4928>
   183cc:	ldr	r0, [sp, #16]
   183d0:	ldr	r1, [sp, #20]
   183d4:	movw	r2, #26463	; 0x675f
   183d8:	movt	r2, #28261	; 0x6e65
   183dc:	eor	r1, r1, r2
   183e0:	movw	r2, #30061	; 0x756d
   183e4:	movt	r2, #25966	; 0x656e
   183e8:	eor	r0, r0, r2
   183ec:	orr	r0, r0, r1
   183f0:	cmp	r0, #0
   183f4:	bne	1845c <main@@Base+0x482c>
   183f8:	b	183fc <main@@Base+0x47cc>
   183fc:	ldr	r0, [fp, #-8]
   18400:	ldr	r1, [fp, #-12]
   18404:	str	r1, [sp, #28]
   18408:	ldr	r2, [fp, #-16]
   1840c:	movw	r3, #8
   18410:	bl	1d230 <main@@Base+0x9600>
   18414:	str	r0, [fp, #-12]
   18418:	ldr	r0, [fp, #-12]
   1841c:	ldr	r1, [sp, #28]
   18420:	cmp	r0, r1
   18424:	beq	18454 <main@@Base+0x4824>
   18428:	ldr	r0, [fp, #-8]
   1842c:	ldr	r1, [fp, #-12]
   18430:	ldr	r2, [fp, #-16]
   18434:	ldr	r3, [fp, #-20]	; 0xffffffec
   18438:	ldr	ip, [fp, #8]
   1843c:	ldr	lr, [fp, #12]
   18440:	str	ip, [sp]
   18444:	str	lr, [sp, #4]
   18448:	bl	1da80 <main@@Base+0x9e50>
   1844c:	str	r0, [fp, #-12]
   18450:	b	18458 <main@@Base+0x4828>
   18454:	b	18464 <main@@Base+0x4834>
   18458:	b	18460 <main@@Base+0x4830>
   1845c:	b	18464 <main@@Base+0x4834>
   18460:	b	18554 <main@@Base+0x4924>
   18464:	ldr	r0, [sp, #16]
   18468:	ldr	r1, [sp, #20]
   1846c:	movw	r2, #29797	; 0x7465
   18470:	movt	r2, #28271	; 0x6e6f
   18474:	eor	r1, r1, r2
   18478:	movw	r2, #29817	; 0x7479
   1847c:	movt	r2, #28016	; 0x6d70
   18480:	eor	r0, r0, r2
   18484:	orr	r0, r0, r1
   18488:	cmp	r0, #0
   1848c:	bne	18544 <main@@Base+0x4914>
   18490:	b	18494 <main@@Base+0x4864>
   18494:	ldr	r0, [fp, #-12]
   18498:	add	r0, r0, #8
   1849c:	str	r0, [fp, #-12]
   184a0:	ldr	r0, [fp, #-12]
   184a4:	ldr	r1, [fp, #-16]
   184a8:	bl	17bdc <main@@Base+0x3fac>
   184ac:	str	r1, [sp, #20]
   184b0:	str	r0, [sp, #16]
   184b4:	ldr	r0, [sp, #20]
   184b8:	movw	r1, #30061	; 0x756d
   184bc:	movt	r1, #25966	; 0x656e
   184c0:	teq	r0, r1
   184c4:	bne	18534 <main@@Base+0x4904>
   184c8:	b	184cc <main@@Base+0x489c>
   184cc:	ldr	r0, [fp, #-8]
   184d0:	ldr	r1, [fp, #-12]
   184d4:	str	r1, [sp, #28]
   184d8:	ldr	r2, [fp, #-16]
   184dc:	movw	r3, #4
   184e0:	bl	1d230 <main@@Base+0x9600>
   184e4:	str	r0, [fp, #-12]
   184e8:	ldr	r0, [fp, #-12]
   184ec:	ldr	r1, [sp, #28]
   184f0:	cmp	r0, r1
   184f4:	beq	18524 <main@@Base+0x48f4>
   184f8:	ldr	r0, [fp, #-8]
   184fc:	ldr	r1, [fp, #-12]
   18500:	ldr	r2, [fp, #-16]
   18504:	ldr	r3, [fp, #-20]	; 0xffffffec
   18508:	ldr	ip, [fp, #8]
   1850c:	ldr	lr, [fp, #12]
   18510:	str	ip, [sp]
   18514:	str	lr, [sp, #4]
   18518:	bl	1dcbc <main@@Base+0xa08c>
   1851c:	str	r0, [fp, #-12]
   18520:	b	18530 <main@@Base+0x4900>
   18524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18528:	str	r0, [fp, #-4]
   1852c:	b	18568 <main@@Base+0x4938>
   18530:	b	18540 <main@@Base+0x4910>
   18534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18538:	str	r0, [fp, #-4]
   1853c:	b	18568 <main@@Base+0x4938>
   18540:	b	18550 <main@@Base+0x4920>
   18544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18548:	str	r0, [fp, #-4]
   1854c:	b	18568 <main@@Base+0x4938>
   18550:	b	18554 <main@@Base+0x4924>
   18554:	b	18558 <main@@Base+0x4928>
   18558:	b	1855c <main@@Base+0x492c>
   1855c:	b	18560 <main@@Base+0x4930>
   18560:	ldr	r0, [fp, #-12]
   18564:	str	r0, [fp, #-4]
   18568:	ldr	r0, [fp, #-4]
   1856c:	mov	sp, fp
   18570:	pop	{fp, pc}
   18574:	push	{fp, lr}
   18578:	mov	fp, sp
   1857c:	sub	sp, sp, #56	; 0x38
   18580:	ldr	ip, [fp, #12]
   18584:	ldr	lr, [fp, #8]
   18588:	str	r0, [fp, #-8]
   1858c:	str	r1, [fp, #-12]
   18590:	str	r2, [fp, #-16]
   18594:	str	r3, [fp, #-20]	; 0xffffffec
   18598:	ldr	r0, [fp, #-12]
   1859c:	str	r0, [fp, #-24]	; 0xffffffe8
   185a0:	ldr	r0, [fp, #-12]
   185a4:	ldr	r1, [fp, #-16]
   185a8:	str	ip, [sp, #12]
   185ac:	str	lr, [sp, #8]
   185b0:	bl	17bdc <main@@Base+0x3fac>
   185b4:	str	r1, [sp, #20]
   185b8:	str	r0, [sp, #16]
   185bc:	ldr	r0, [sp, #16]
   185c0:	ldr	r1, [sp, #20]
   185c4:	movw	r2, #11844	; 0x2e44
   185c8:	movt	r2, #28005	; 0x6d65
   185cc:	subs	r0, r2, r0
   185d0:	movw	r2, #18273	; 0x4761
   185d4:	movt	r2, #19833	; 0x4d79
   185d8:	sbcs	r1, r2, r1
   185dc:	bcc	18730 <main@@Base+0x4b00>
   185e0:	b	185e4 <main@@Base+0x49b4>
   185e4:	ldr	r0, [sp, #16]
   185e8:	ldr	r1, [sp, #20]
   185ec:	movw	r2, #28276	; 0x6e74
   185f0:	movt	r2, #18017	; 0x4661
   185f4:	eor	r1, r1, r2
   185f8:	movw	r2, #31022	; 0x792e
   185fc:	movt	r2, #24947	; 0x6173
   18600:	eor	r0, r0, r2
   18604:	orr	r0, r0, r1
   18608:	cmp	r0, #0
   1860c:	bne	18720 <main@@Base+0x4af0>
   18610:	b	18614 <main@@Base+0x49e4>
   18614:	ldr	r0, [fp, #-12]
   18618:	add	r0, r0, #8
   1861c:	str	r0, [fp, #-12]
   18620:	ldr	r0, [fp, #-12]
   18624:	ldr	r1, [fp, #-16]
   18628:	bl	17bdc <main@@Base+0x3fac>
   1862c:	str	r1, [sp, #20]
   18630:	str	r0, [sp, #16]
   18634:	ldr	r0, [sp, #16]
   18638:	ldr	r1, [sp, #20]
   1863c:	movw	r2, #24946	; 0x6172
   18640:	movt	r2, #17256	; 0x4368
   18644:	eor	r1, r1, r2
   18648:	movw	r2, #29797	; 0x7465
   1864c:	movt	r2, #24931	; 0x6163
   18650:	eor	r0, r0, r2
   18654:	orr	r0, r0, r1
   18658:	cmp	r0, #0
   1865c:	bne	18710 <main@@Base+0x4ae0>
   18660:	b	18664 <main@@Base+0x4a34>
   18664:	ldr	r0, [fp, #-12]
   18668:	add	r0, r0, #8
   1866c:	str	r0, [fp, #-12]
   18670:	ldr	r0, [fp, #-12]
   18674:	ldr	r1, [fp, #-16]
   18678:	bl	17bdc <main@@Base+0x3fac>
   1867c:	str	r1, [sp, #20]
   18680:	str	r0, [sp, #16]
   18684:	ldrb	r0, [sp, #23]
   18688:	mov	r1, #1912602624	; 0x72000000
   1868c:	teq	r1, r0, lsl #24
   18690:	bne	18700 <main@@Base+0x4ad0>
   18694:	b	18698 <main@@Base+0x4a68>
   18698:	ldr	r0, [fp, #-8]
   1869c:	ldr	r1, [fp, #-12]
   186a0:	str	r1, [sp, #28]
   186a4:	ldr	r2, [fp, #-16]
   186a8:	movw	r3, #1
   186ac:	bl	1d230 <main@@Base+0x9600>
   186b0:	str	r0, [fp, #-12]
   186b4:	ldr	r0, [fp, #-12]
   186b8:	ldr	r1, [sp, #28]
   186bc:	cmp	r0, r1
   186c0:	beq	186f0 <main@@Base+0x4ac0>
   186c4:	ldr	r0, [fp, #-8]
   186c8:	ldr	r1, [fp, #-12]
   186cc:	ldr	r2, [fp, #-16]
   186d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   186d4:	ldr	ip, [fp, #8]
   186d8:	ldr	lr, [fp, #12]
   186dc:	str	ip, [sp]
   186e0:	str	lr, [sp, #4]
   186e4:	bl	1dda8 <main@@Base+0xa178>
   186e8:	str	r0, [fp, #-12]
   186ec:	b	186fc <main@@Base+0x4acc>
   186f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186f4:	str	r0, [fp, #-4]
   186f8:	b	19124 <main@@Base+0x54f4>
   186fc:	b	1870c <main@@Base+0x4adc>
   18700:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18704:	str	r0, [fp, #-4]
   18708:	b	19124 <main@@Base+0x54f4>
   1870c:	b	1871c <main@@Base+0x4aec>
   18710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18714:	str	r0, [fp, #-4]
   18718:	b	19124 <main@@Base+0x54f4>
   1871c:	b	1872c <main@@Base+0x4afc>
   18720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18724:	str	r0, [fp, #-4]
   18728:	b	19124 <main@@Base+0x54f4>
   1872c:	b	1911c <main@@Base+0x54ec>
   18730:	ldr	r0, [sp, #16]
   18734:	ldr	r1, [sp, #20]
   18738:	movw	r2, #18273	; 0x4761
   1873c:	movt	r2, #19833	; 0x4d79
   18740:	eor	r1, r1, r2
   18744:	movw	r2, #11845	; 0x2e45
   18748:	movt	r2, #28005	; 0x6d65
   1874c:	eor	r0, r0, r2
   18750:	orr	r0, r0, r1
   18754:	cmp	r0, #0
   18758:	bne	18f0c <main@@Base+0x52dc>
   1875c:	b	18760 <main@@Base+0x4b30>
   18760:	ldr	r0, [fp, #-12]
   18764:	add	r0, r0, #8
   18768:	str	r0, [fp, #-12]
   1876c:	ldr	r0, [fp, #-12]
   18770:	ldr	r1, [fp, #-16]
   18774:	bl	17bdc <main@@Base+0x3fac>
   18778:	str	r1, [sp, #20]
   1877c:	str	r0, [sp, #16]
   18780:	ldr	r0, [sp, #16]
   18784:	ldr	r1, [sp, #20]
   18788:	movw	r2, #11879	; 0x2e67
   1878c:	movt	r2, #27749	; 0x6c65
   18790:	subs	r0, r2, r0
   18794:	movw	r2, #28016	; 0x6d70
   18798:	movt	r2, #30817	; 0x7861
   1879c:	sbcs	r1, r2, r1
   187a0:	bcc	18a98 <main@@Base+0x4e68>
   187a4:	b	187a8 <main@@Base+0x4b78>
   187a8:	ldr	r0, [sp, #16]
   187ac:	ldr	r1, [sp, #20]
   187b0:	movw	r2, #11842	; 0x2e42
   187b4:	movt	r2, #27749	; 0x6c65
   187b8:	subs	r0, r2, r0
   187bc:	movw	r2, #28016	; 0x6d70
   187c0:	movt	r2, #30817	; 0x7861
   187c4:	sbcs	r1, r2, r1
   187c8:	bcc	188c0 <main@@Base+0x4c90>
   187cc:	b	187d0 <main@@Base+0x4ba0>
   187d0:	ldr	r0, [sp, #16]
   187d4:	ldr	r1, [sp, #20]
   187d8:	movw	r2, #28016	; 0x6d70
   187dc:	movt	r2, #30817	; 0x7861
   187e0:	eor	r1, r1, r2
   187e4:	movw	r2, #11841	; 0x2e41
   187e8:	movt	r2, #27749	; 0x6c65
   187ec:	eor	r0, r0, r2
   187f0:	orr	r0, r0, r1
   187f4:	cmp	r0, #0
   187f8:	bne	188b0 <main@@Base+0x4c80>
   187fc:	b	18800 <main@@Base+0x4bd0>
   18800:	ldr	r0, [fp, #-12]
   18804:	add	r0, r0, #8
   18808:	str	r0, [fp, #-12]
   1880c:	ldr	r0, [fp, #-12]
   18810:	ldr	r1, [fp, #-16]
   18814:	bl	17bdc <main@@Base+0x3fac>
   18818:	str	r1, [sp, #20]
   1881c:	str	r0, [sp, #16]
   18820:	ldrh	r0, [sp, #22]
   18824:	movw	r1, #0
   18828:	movt	r1, #28281	; 0x6e79
   1882c:	teq	r1, r0, lsl #16
   18830:	bne	188a0 <main@@Base+0x4c70>
   18834:	b	18838 <main@@Base+0x4c08>
   18838:	ldr	r0, [fp, #-8]
   1883c:	ldr	r1, [fp, #-12]
   18840:	str	r1, [sp, #28]
   18844:	ldr	r2, [fp, #-16]
   18848:	movw	r3, #2
   1884c:	bl	1d230 <main@@Base+0x9600>
   18850:	str	r0, [fp, #-12]
   18854:	ldr	r0, [fp, #-12]
   18858:	ldr	r1, [sp, #28]
   1885c:	cmp	r0, r1
   18860:	beq	18890 <main@@Base+0x4c60>
   18864:	ldr	r0, [fp, #-8]
   18868:	ldr	r1, [fp, #-12]
   1886c:	ldr	r2, [fp, #-16]
   18870:	ldr	r3, [fp, #-20]	; 0xffffffec
   18874:	ldr	ip, [fp, #8]
   18878:	ldr	lr, [fp, #12]
   1887c:	str	ip, [sp]
   18880:	str	lr, [sp, #4]
   18884:	bl	1a990 <main@@Base+0x6d60>
   18888:	str	r0, [fp, #-12]
   1888c:	b	1889c <main@@Base+0x4c6c>
   18890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18894:	str	r0, [fp, #-4]
   18898:	b	19124 <main@@Base+0x54f4>
   1889c:	b	188ac <main@@Base+0x4c7c>
   188a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188a4:	str	r0, [fp, #-4]
   188a8:	b	19124 <main@@Base+0x54f4>
   188ac:	b	188bc <main@@Base+0x4c8c>
   188b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188b4:	str	r0, [fp, #-4]
   188b8:	b	19124 <main@@Base+0x54f4>
   188bc:	b	18a94 <main@@Base+0x4e64>
   188c0:	ldr	r0, [sp, #16]
   188c4:	ldr	r1, [sp, #20]
   188c8:	movw	r2, #28016	; 0x6d70
   188cc:	movt	r2, #30817	; 0x7861
   188d0:	eor	r1, r1, r2
   188d4:	movw	r2, #11843	; 0x2e43
   188d8:	movt	r2, #27749	; 0x6c65
   188dc:	eor	r0, r0, r2
   188e0:	orr	r0, r0, r1
   188e4:	cmp	r0, #0
   188e8:	bne	189a0 <main@@Base+0x4d70>
   188ec:	b	188f0 <main@@Base+0x4cc0>
   188f0:	ldr	r0, [fp, #-12]
   188f4:	add	r0, r0, #8
   188f8:	str	r0, [fp, #-12]
   188fc:	ldr	r0, [fp, #-12]
   18900:	ldr	r1, [fp, #-16]
   18904:	bl	17bdc <main@@Base+0x3fac>
   18908:	str	r1, [sp, #20]
   1890c:	str	r0, [sp, #16]
   18910:	ldr	r0, [sp, #20]
   18914:	movw	r1, #28530	; 0x6f72
   18918:	movt	r1, #28524	; 0x6f6c
   1891c:	teq	r0, r1
   18920:	bne	18990 <main@@Base+0x4d60>
   18924:	b	18928 <main@@Base+0x4cf8>
   18928:	ldr	r0, [fp, #-8]
   1892c:	ldr	r1, [fp, #-12]
   18930:	str	r1, [sp, #28]
   18934:	ldr	r2, [fp, #-16]
   18938:	movw	r3, #4
   1893c:	bl	1d230 <main@@Base+0x9600>
   18940:	str	r0, [fp, #-12]
   18944:	ldr	r0, [fp, #-12]
   18948:	ldr	r1, [sp, #28]
   1894c:	cmp	r0, r1
   18950:	beq	18980 <main@@Base+0x4d50>
   18954:	ldr	r0, [fp, #-8]
   18958:	ldr	r1, [fp, #-12]
   1895c:	ldr	r2, [fp, #-16]
   18960:	ldr	r3, [fp, #-20]	; 0xffffffec
   18964:	ldr	ip, [fp, #8]
   18968:	ldr	lr, [fp, #12]
   1896c:	str	ip, [sp]
   18970:	str	lr, [sp, #4]
   18974:	bl	17d7c <main@@Base+0x414c>
   18978:	str	r0, [fp, #-12]
   1897c:	b	1898c <main@@Base+0x4d5c>
   18980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18984:	str	r0, [fp, #-4]
   18988:	b	19124 <main@@Base+0x54f4>
   1898c:	b	1899c <main@@Base+0x4d6c>
   18990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18994:	str	r0, [fp, #-4]
   18998:	b	19124 <main@@Base+0x54f4>
   1899c:	b	18a90 <main@@Base+0x4e60>
   189a0:	ldr	r0, [sp, #16]
   189a4:	ldr	r1, [sp, #20]
   189a8:	movw	r2, #28016	; 0x6d70
   189ac:	movt	r2, #30817	; 0x7861
   189b0:	eor	r1, r1, r2
   189b4:	movw	r2, #11846	; 0x2e46
   189b8:	movt	r2, #27749	; 0x6c65
   189bc:	eor	r0, r0, r2
   189c0:	orr	r0, r0, r1
   189c4:	cmp	r0, #0
   189c8:	bne	18a80 <main@@Base+0x4e50>
   189cc:	b	189d0 <main@@Base+0x4da0>
   189d0:	ldr	r0, [fp, #-12]
   189d4:	add	r0, r0, #8
   189d8:	str	r0, [fp, #-12]
   189dc:	ldr	r0, [fp, #-12]
   189e0:	ldr	r1, [fp, #-16]
   189e4:	bl	17bdc <main@@Base+0x3fac>
   189e8:	str	r1, [sp, #20]
   189ec:	str	r0, [sp, #16]
   189f0:	ldrh	r0, [sp, #22]
   189f4:	movw	r1, #0
   189f8:	movt	r1, #28527	; 0x6f6f
   189fc:	teq	r1, r0, lsl #16
   18a00:	bne	18a70 <main@@Base+0x4e40>
   18a04:	b	18a08 <main@@Base+0x4dd8>
   18a08:	ldr	r0, [fp, #-8]
   18a0c:	ldr	r1, [fp, #-12]
   18a10:	str	r1, [sp, #28]
   18a14:	ldr	r2, [fp, #-16]
   18a18:	movw	r3, #2
   18a1c:	bl	1d230 <main@@Base+0x9600>
   18a20:	str	r0, [fp, #-12]
   18a24:	ldr	r0, [fp, #-12]
   18a28:	ldr	r1, [sp, #28]
   18a2c:	cmp	r0, r1
   18a30:	beq	18a60 <main@@Base+0x4e30>
   18a34:	ldr	r0, [fp, #-8]
   18a38:	ldr	r1, [fp, #-12]
   18a3c:	ldr	r2, [fp, #-16]
   18a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a44:	ldr	ip, [fp, #8]
   18a48:	ldr	lr, [fp, #12]
   18a4c:	str	ip, [sp]
   18a50:	str	lr, [sp, #4]
   18a54:	bl	1d2b4 <main@@Base+0x9684>
   18a58:	str	r0, [fp, #-12]
   18a5c:	b	18a6c <main@@Base+0x4e3c>
   18a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a64:	str	r0, [fp, #-4]
   18a68:	b	19124 <main@@Base+0x54f4>
   18a6c:	b	18a7c <main@@Base+0x4e4c>
   18a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a74:	str	r0, [fp, #-4]
   18a78:	b	19124 <main@@Base+0x54f4>
   18a7c:	b	18a8c <main@@Base+0x4e5c>
   18a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a84:	str	r0, [fp, #-4]
   18a88:	b	19124 <main@@Base+0x54f4>
   18a8c:	b	18a90 <main@@Base+0x4e60>
   18a90:	b	18a94 <main@@Base+0x4e64>
   18a94:	b	18f08 <main@@Base+0x52d8>
   18a98:	ldr	r0, [sp, #16]
   18a9c:	ldr	r1, [sp, #20]
   18aa0:	movw	r2, #11880	; 0x2e68
   18aa4:	movt	r2, #27749	; 0x6c65
   18aa8:	subs	r0, r2, r0
   18aac:	movw	r2, #28016	; 0x6d70
   18ab0:	movt	r2, #30817	; 0x7861
   18ab4:	sbcs	r1, r2, r1
   18ab8:	bcc	18bd0 <main@@Base+0x4fa0>
   18abc:	b	18ac0 <main@@Base+0x4e90>
   18ac0:	ldr	r0, [sp, #16]
   18ac4:	ldr	r1, [sp, #20]
   18ac8:	movw	r2, #28016	; 0x6d70
   18acc:	movt	r2, #30817	; 0x7861
   18ad0:	eor	r1, r1, r2
   18ad4:	movw	r2, #11880	; 0x2e68
   18ad8:	movt	r2, #27749	; 0x6c65
   18adc:	eor	r0, r0, r2
   18ae0:	orr	r0, r0, r1
   18ae4:	cmp	r0, #0
   18ae8:	bne	18bc0 <main@@Base+0x4f90>
   18aec:	b	18af0 <main@@Base+0x4ec0>
   18af0:	ldr	r0, [fp, #-12]
   18af4:	add	r0, r0, #8
   18af8:	str	r0, [fp, #-12]
   18afc:	ldr	r0, [fp, #-12]
   18b00:	ldr	r1, [fp, #-16]
   18b04:	bl	17bdc <main@@Base+0x3fac>
   18b08:	str	r1, [sp, #20]
   18b0c:	str	r0, [sp, #16]
   18b10:	ldr	r0, [sp, #16]
   18b14:	ldr	r1, [sp, #20]
   18b18:	movw	r2, #30815	; 0x785f
   18b1c:	movt	r2, #101	; 0x65
   18b20:	eor	r2, r2, r1, lsr #8
   18b24:	lsr	r0, r0, #8
   18b28:	orr	r0, r0, r1, lsl #24
   18b2c:	movw	r1, #30061	; 0x756d
   18b30:	movt	r1, #25966	; 0x656e
   18b34:	eor	r0, r0, r1
   18b38:	orr	r0, r0, r2
   18b3c:	cmp	r0, #0
   18b40:	bne	18bb0 <main@@Base+0x4f80>
   18b44:	b	18b48 <main@@Base+0x4f18>
   18b48:	ldr	r0, [fp, #-8]
   18b4c:	ldr	r1, [fp, #-12]
   18b50:	str	r1, [sp, #28]
   18b54:	ldr	r2, [fp, #-16]
   18b58:	movw	r3, #7
   18b5c:	bl	1d230 <main@@Base+0x9600>
   18b60:	str	r0, [fp, #-12]
   18b64:	ldr	r0, [fp, #-12]
   18b68:	ldr	r1, [sp, #28]
   18b6c:	cmp	r0, r1
   18b70:	beq	18ba0 <main@@Base+0x4f70>
   18b74:	ldr	r0, [fp, #-8]
   18b78:	ldr	r1, [fp, #-12]
   18b7c:	ldr	r2, [fp, #-16]
   18b80:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b84:	ldr	ip, [fp, #8]
   18b88:	ldr	lr, [fp, #12]
   18b8c:	str	ip, [sp]
   18b90:	str	lr, [sp, #4]
   18b94:	bl	1d4f0 <main@@Base+0x98c0>
   18b98:	str	r0, [fp, #-12]
   18b9c:	b	18bac <main@@Base+0x4f7c>
   18ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ba4:	str	r0, [fp, #-4]
   18ba8:	b	19124 <main@@Base+0x54f4>
   18bac:	b	18bbc <main@@Base+0x4f8c>
   18bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bb4:	str	r0, [fp, #-4]
   18bb8:	b	19124 <main@@Base+0x54f4>
   18bbc:	b	18bcc <main@@Base+0x4f9c>
   18bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bc4:	str	r0, [fp, #-4]
   18bc8:	b	19124 <main@@Base+0x54f4>
   18bcc:	b	18f04 <main@@Base+0x52d4>
   18bd0:	ldr	r0, [sp, #16]
   18bd4:	ldr	r1, [sp, #20]
   18bd8:	movw	r2, #11885	; 0x2e6d
   18bdc:	movt	r2, #27749	; 0x6c65
   18be0:	subs	r0, r2, r0
   18be4:	movw	r2, #28016	; 0x6d70
   18be8:	movt	r2, #30817	; 0x7861
   18bec:	sbcs	r1, r2, r1
   18bf0:	bcc	18d08 <main@@Base+0x50d8>
   18bf4:	b	18bf8 <main@@Base+0x4fc8>
   18bf8:	ldr	r0, [sp, #16]
   18bfc:	ldr	r1, [sp, #20]
   18c00:	movw	r2, #28016	; 0x6d70
   18c04:	movt	r2, #30817	; 0x7861
   18c08:	eor	r1, r1, r2
   18c0c:	movw	r2, #11881	; 0x2e69
   18c10:	movt	r2, #27749	; 0x6c65
   18c14:	eor	r0, r0, r2
   18c18:	orr	r0, r0, r1
   18c1c:	cmp	r0, #0
   18c20:	bne	18cf8 <main@@Base+0x50c8>
   18c24:	b	18c28 <main@@Base+0x4ff8>
   18c28:	ldr	r0, [fp, #-12]
   18c2c:	add	r0, r0, #8
   18c30:	str	r0, [fp, #-12]
   18c34:	ldr	r0, [fp, #-12]
   18c38:	ldr	r1, [fp, #-16]
   18c3c:	bl	17bdc <main@@Base+0x3fac>
   18c40:	str	r1, [sp, #20]
   18c44:	str	r0, [sp, #16]
   18c48:	ldr	r0, [sp, #16]
   18c4c:	ldr	r1, [sp, #20]
   18c50:	movw	r2, #29791	; 0x745f
   18c54:	movt	r2, #110	; 0x6e
   18c58:	eor	r2, r2, r1, lsr #8
   18c5c:	lsr	r0, r0, #8
   18c60:	orr	r0, r0, r1, lsl #24
   18c64:	movw	r1, #30061	; 0x756d
   18c68:	movt	r1, #25966	; 0x656e
   18c6c:	eor	r0, r0, r1
   18c70:	orr	r0, r0, r2
   18c74:	cmp	r0, #0
   18c78:	bne	18ce8 <main@@Base+0x50b8>
   18c7c:	b	18c80 <main@@Base+0x5050>
   18c80:	ldr	r0, [fp, #-8]
   18c84:	ldr	r1, [fp, #-12]
   18c88:	str	r1, [sp, #28]
   18c8c:	ldr	r2, [fp, #-16]
   18c90:	movw	r3, #7
   18c94:	bl	1d230 <main@@Base+0x9600>
   18c98:	str	r0, [fp, #-12]
   18c9c:	ldr	r0, [fp, #-12]
   18ca0:	ldr	r1, [sp, #28]
   18ca4:	cmp	r0, r1
   18ca8:	beq	18cd8 <main@@Base+0x50a8>
   18cac:	ldr	r0, [fp, #-8]
   18cb0:	ldr	r1, [fp, #-12]
   18cb4:	ldr	r2, [fp, #-16]
   18cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cbc:	ldr	ip, [fp, #8]
   18cc0:	ldr	lr, [fp, #12]
   18cc4:	str	ip, [sp]
   18cc8:	str	lr, [sp, #4]
   18ccc:	bl	1d748 <main@@Base+0x9b18>
   18cd0:	str	r0, [fp, #-12]
   18cd4:	b	18ce4 <main@@Base+0x50b4>
   18cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cdc:	str	r0, [fp, #-4]
   18ce0:	b	19124 <main@@Base+0x54f4>
   18ce4:	b	18cf4 <main@@Base+0x50c4>
   18ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cec:	str	r0, [fp, #-4]
   18cf0:	b	19124 <main@@Base+0x54f4>
   18cf4:	b	18d04 <main@@Base+0x50d4>
   18cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cfc:	str	r0, [fp, #-4]
   18d00:	b	19124 <main@@Base+0x54f4>
   18d04:	b	18f00 <main@@Base+0x52d0>
   18d08:	ldr	r0, [sp, #16]
   18d0c:	ldr	r1, [sp, #20]
   18d10:	movw	r2, #28016	; 0x6d70
   18d14:	movt	r2, #30817	; 0x7861
   18d18:	eor	r1, r1, r2
   18d1c:	movw	r2, #11886	; 0x2e6e
   18d20:	movt	r2, #27749	; 0x6c65
   18d24:	eor	r0, r0, r2
   18d28:	orr	r0, r0, r1
   18d2c:	cmp	r0, #0
   18d30:	bne	18ef0 <main@@Base+0x52c0>
   18d34:	b	18d38 <main@@Base+0x5108>
   18d38:	ldr	r0, [fp, #-12]
   18d3c:	add	r0, r0, #8
   18d40:	str	r0, [fp, #-12]
   18d44:	ldr	r0, [fp, #-12]
   18d48:	ldr	r1, [fp, #-16]
   18d4c:	bl	17bdc <main@@Base+0x3fac>
   18d50:	str	r1, [sp, #20]
   18d54:	str	r0, [sp, #16]
   18d58:	ldr	r0, [sp, #16]
   18d5c:	ldr	r1, [sp, #20]
   18d60:	movw	r2, #26463	; 0x675f
   18d64:	movt	r2, #101	; 0x65
   18d68:	eor	r2, r2, r1, lsr #8
   18d6c:	lsr	r0, r0, #8
   18d70:	orr	r0, r0, r1, lsl #24
   18d74:	movw	r1, #30061	; 0x756d
   18d78:	movt	r1, #25966	; 0x656e
   18d7c:	eor	r0, r0, r1
   18d80:	orr	r0, r0, r2
   18d84:	cmp	r0, #0
   18d88:	bne	18df0 <main@@Base+0x51c0>
   18d8c:	b	18d90 <main@@Base+0x5160>
   18d90:	ldr	r0, [fp, #-8]
   18d94:	ldr	r1, [fp, #-12]
   18d98:	str	r1, [sp, #28]
   18d9c:	ldr	r2, [fp, #-16]
   18da0:	movw	r3, #7
   18da4:	bl	1d230 <main@@Base+0x9600>
   18da8:	str	r0, [fp, #-12]
   18dac:	ldr	r0, [fp, #-12]
   18db0:	ldr	r1, [sp, #28]
   18db4:	cmp	r0, r1
   18db8:	beq	18de8 <main@@Base+0x51b8>
   18dbc:	ldr	r0, [fp, #-8]
   18dc0:	ldr	r1, [fp, #-12]
   18dc4:	ldr	r2, [fp, #-16]
   18dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18dcc:	ldr	ip, [fp, #8]
   18dd0:	ldr	lr, [fp, #12]
   18dd4:	str	ip, [sp]
   18dd8:	str	lr, [sp, #4]
   18ddc:	bl	1da80 <main@@Base+0x9e50>
   18de0:	str	r0, [fp, #-12]
   18de4:	b	18dec <main@@Base+0x51bc>
   18de8:	b	18df8 <main@@Base+0x51c8>
   18dec:	b	18df4 <main@@Base+0x51c4>
   18df0:	b	18df8 <main@@Base+0x51c8>
   18df4:	b	18eec <main@@Base+0x52bc>
   18df8:	ldr	r0, [sp, #16]
   18dfc:	ldr	r1, [sp, #20]
   18e00:	movw	r2, #25965	; 0x656d
   18e04:	movt	r2, #28532	; 0x6f74
   18e08:	eor	r1, r1, r2
   18e0c:	movw	r2, #31077	; 0x7965
   18e10:	movt	r2, #28788	; 0x7074
   18e14:	eor	r0, r0, r2
   18e18:	orr	r0, r0, r1
   18e1c:	cmp	r0, #0
   18e20:	bne	18edc <main@@Base+0x52ac>
   18e24:	b	18e28 <main@@Base+0x51f8>
   18e28:	ldr	r0, [fp, #-12]
   18e2c:	add	r0, r0, #8
   18e30:	str	r0, [fp, #-12]
   18e34:	ldr	r0, [fp, #-12]
   18e38:	ldr	r1, [fp, #-16]
   18e3c:	bl	17bdc <main@@Base+0x3fac>
   18e40:	str	r1, [sp, #20]
   18e44:	str	r0, [sp, #16]
   18e48:	ldr	r0, [sp, #20]
   18e4c:	bic	r0, r0, #255	; 0xff
   18e50:	movw	r1, #27904	; 0x6d00
   18e54:	movt	r1, #28277	; 0x6e75
   18e58:	teq	r0, r1
   18e5c:	bne	18ecc <main@@Base+0x529c>
   18e60:	b	18e64 <main@@Base+0x5234>
   18e64:	ldr	r0, [fp, #-8]
   18e68:	ldr	r1, [fp, #-12]
   18e6c:	str	r1, [sp, #28]
   18e70:	ldr	r2, [fp, #-16]
   18e74:	movw	r3, #3
   18e78:	bl	1d230 <main@@Base+0x9600>
   18e7c:	str	r0, [fp, #-12]
   18e80:	ldr	r0, [fp, #-12]
   18e84:	ldr	r1, [sp, #28]
   18e88:	cmp	r0, r1
   18e8c:	beq	18ebc <main@@Base+0x528c>
   18e90:	ldr	r0, [fp, #-8]
   18e94:	ldr	r1, [fp, #-12]
   18e98:	ldr	r2, [fp, #-16]
   18e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ea0:	ldr	ip, [fp, #8]
   18ea4:	ldr	lr, [fp, #12]
   18ea8:	str	ip, [sp]
   18eac:	str	lr, [sp, #4]
   18eb0:	bl	1dcbc <main@@Base+0xa08c>
   18eb4:	str	r0, [fp, #-12]
   18eb8:	b	18ec8 <main@@Base+0x5298>
   18ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ec0:	str	r0, [fp, #-4]
   18ec4:	b	19124 <main@@Base+0x54f4>
   18ec8:	b	18ed8 <main@@Base+0x52a8>
   18ecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed0:	str	r0, [fp, #-4]
   18ed4:	b	19124 <main@@Base+0x54f4>
   18ed8:	b	18ee8 <main@@Base+0x52b8>
   18edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ee0:	str	r0, [fp, #-4]
   18ee4:	b	19124 <main@@Base+0x54f4>
   18ee8:	b	18eec <main@@Base+0x52bc>
   18eec:	b	18efc <main@@Base+0x52cc>
   18ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef4:	str	r0, [fp, #-4]
   18ef8:	b	19124 <main@@Base+0x54f4>
   18efc:	b	18f00 <main@@Base+0x52d0>
   18f00:	b	18f04 <main@@Base+0x52d4>
   18f04:	b	18f08 <main@@Base+0x52d8>
   18f08:	b	19118 <main@@Base+0x54e8>
   18f0c:	ldr	r0, [sp, #16]
   18f10:	ldr	r1, [sp, #20]
   18f14:	movw	r2, #18273	; 0x4761
   18f18:	movt	r2, #19833	; 0x4d79
   18f1c:	eor	r1, r1, r2
   18f20:	movw	r2, #11855	; 0x2e4f
   18f24:	movt	r2, #28005	; 0x6d65
   18f28:	eor	r0, r0, r2
   18f2c:	orr	r0, r0, r1
   18f30:	cmp	r0, #0
   18f34:	bne	19108 <main@@Base+0x54d8>
   18f38:	b	18f3c <main@@Base+0x530c>
   18f3c:	ldr	r0, [fp, #-12]
   18f40:	add	r0, r0, #8
   18f44:	str	r0, [fp, #-12]
   18f48:	ldr	r0, [fp, #-12]
   18f4c:	ldr	r1, [fp, #-16]
   18f50:	bl	17bdc <main@@Base+0x3fac>
   18f54:	str	r1, [sp, #20]
   18f58:	str	r0, [sp, #16]
   18f5c:	ldr	r0, [sp, #16]
   18f60:	ldr	r1, [sp, #20]
   18f64:	movw	r2, #25970	; 0x6572
   18f68:	movt	r2, #29800	; 0x7468
   18f6c:	eor	r1, r1, r2
   18f70:	movw	r2, #28005	; 0x6d65
   18f74:	movt	r2, #20065	; 0x4e61
   18f78:	eor	r0, r0, r2
   18f7c:	orr	r0, r0, r1
   18f80:	cmp	r0, #0
   18f84:	bne	190f8 <main@@Base+0x54c8>
   18f88:	b	18f8c <main@@Base+0x535c>
   18f8c:	ldr	r0, [fp, #-12]
   18f90:	add	r0, r0, #8
   18f94:	str	r0, [fp, #-12]
   18f98:	ldr	r0, [fp, #-12]
   18f9c:	ldr	r1, [fp, #-16]
   18fa0:	bl	17bdc <main@@Base+0x3fac>
   18fa4:	str	r1, [sp, #20]
   18fa8:	str	r0, [sp, #16]
   18fac:	ldr	r0, [sp, #16]
   18fb0:	ldr	r1, [sp, #20]
   18fb4:	movw	r2, #24931	; 0x6163
   18fb8:	movt	r2, #21360	; 0x5370
   18fbc:	eor	r1, r1, r2
   18fc0:	movw	r2, #18034	; 0x4672
   18fc4:	movt	r2, #25902	; 0x652e
   18fc8:	eor	r0, r0, r2
   18fcc:	orr	r0, r0, r1
   18fd0:	cmp	r0, #0
   18fd4:	bne	190e8 <main@@Base+0x54b8>
   18fd8:	b	18fdc <main@@Base+0x53ac>
   18fdc:	ldr	r0, [fp, #-12]
   18fe0:	add	r0, r0, #8
   18fe4:	str	r0, [fp, #-12]
   18fe8:	ldr	r0, [fp, #-12]
   18fec:	ldr	r1, [fp, #-16]
   18ff0:	bl	17bdc <main@@Base+0x3fac>
   18ff4:	str	r1, [sp, #20]
   18ff8:	str	r0, [sp, #16]
   18ffc:	ldr	r0, [sp, #16]
   19000:	ldr	r1, [sp, #20]
   19004:	movw	r2, #18798	; 0x496e
   19008:	movt	r2, #28525	; 0x6f6d
   1900c:	eor	r1, r1, r2
   19010:	movw	r2, #30052	; 0x7564
   19014:	movt	r2, #25452	; 0x636c
   19018:	eor	r0, r0, r2
   1901c:	orr	r0, r0, r1
   19020:	cmp	r0, #0
   19024:	bne	190d8 <main@@Base+0x54a8>
   19028:	b	1902c <main@@Base+0x53fc>
   1902c:	ldr	r0, [fp, #-12]
   19030:	add	r0, r0, #8
   19034:	str	r0, [fp, #-12]
   19038:	ldr	r0, [fp, #-12]
   1903c:	ldr	r1, [fp, #-16]
   19040:	bl	17bdc <main@@Base+0x3fac>
   19044:	str	r1, [sp, #20]
   19048:	str	r0, [sp, #16]
   1904c:	ldrb	r0, [sp, #23]
   19050:	mov	r1, #1694498816	; 0x65000000
   19054:	teq	r1, r0, lsl #24
   19058:	bne	190c8 <main@@Base+0x5498>
   1905c:	b	19060 <main@@Base+0x5430>
   19060:	ldr	r0, [fp, #-8]
   19064:	ldr	r1, [fp, #-12]
   19068:	str	r1, [sp, #28]
   1906c:	ldr	r2, [fp, #-16]
   19070:	movw	r3, #1
   19074:	bl	1d230 <main@@Base+0x9600>
   19078:	str	r0, [fp, #-12]
   1907c:	ldr	r0, [fp, #-12]
   19080:	ldr	r1, [sp, #28]
   19084:	cmp	r0, r1
   19088:	beq	190b8 <main@@Base+0x5488>
   1908c:	ldr	r0, [fp, #-8]
   19090:	ldr	r1, [fp, #-12]
   19094:	ldr	r2, [fp, #-16]
   19098:	ldr	r3, [fp, #-20]	; 0xffffffec
   1909c:	ldr	ip, [fp, #8]
   190a0:	ldr	lr, [fp, #12]
   190a4:	str	ip, [sp]
   190a8:	str	lr, [sp, #4]
   190ac:	bl	1e344 <main@@Base+0xa714>
   190b0:	str	r0, [fp, #-12]
   190b4:	b	190c4 <main@@Base+0x5494>
   190b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190bc:	str	r0, [fp, #-4]
   190c0:	b	19124 <main@@Base+0x54f4>
   190c4:	b	190d4 <main@@Base+0x54a4>
   190c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190cc:	str	r0, [fp, #-4]
   190d0:	b	19124 <main@@Base+0x54f4>
   190d4:	b	190e4 <main@@Base+0x54b4>
   190d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190dc:	str	r0, [fp, #-4]
   190e0:	b	19124 <main@@Base+0x54f4>
   190e4:	b	190f4 <main@@Base+0x54c4>
   190e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190ec:	str	r0, [fp, #-4]
   190f0:	b	19124 <main@@Base+0x54f4>
   190f4:	b	19104 <main@@Base+0x54d4>
   190f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190fc:	str	r0, [fp, #-4]
   19100:	b	19124 <main@@Base+0x54f4>
   19104:	b	19114 <main@@Base+0x54e4>
   19108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1910c:	str	r0, [fp, #-4]
   19110:	b	19124 <main@@Base+0x54f4>
   19114:	b	19118 <main@@Base+0x54e8>
   19118:	b	1911c <main@@Base+0x54ec>
   1911c:	ldr	r0, [fp, #-12]
   19120:	str	r0, [fp, #-4]
   19124:	ldr	r0, [fp, #-4]
   19128:	mov	sp, fp
   1912c:	pop	{fp, pc}
   19130:	push	{r4, r5, fp, lr}
   19134:	add	fp, sp, #8
   19138:	sub	sp, sp, #56	; 0x38
   1913c:	str	r0, [fp, #-16]
   19140:	str	r1, [fp, #-20]	; 0xffffffec
   19144:	str	r2, [fp, #-24]	; 0xffffffe8
   19148:	str	r3, [fp, #-28]	; 0xffffffe4
   1914c:	mov	r0, #0
   19150:	str	r0, [sp, #28]
   19154:	str	r0, [sp, #24]
   19158:	movw	r0, #0
   1915c:	str	r0, [sp, #20]
   19160:	ldr	r0, [fp, #-20]	; 0xffffffec
   19164:	str	r0, [sp, #16]
   19168:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1916c:	movw	r1, #0
   19170:	strb	r1, [r0]
   19174:	ldr	r0, [fp, #-20]	; 0xffffffec
   19178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1917c:	cmp	r0, r1
   19180:	bne	19190 <main@@Base+0x5560>
   19184:	ldr	r0, [fp, #-20]	; 0xffffffec
   19188:	str	r0, [fp, #-12]
   1918c:	b	19200 <main@@Base+0x55d0>
   19190:	ldr	r0, [fp, #-16]
   19194:	ldr	r1, [fp, #-20]	; 0xffffffec
   19198:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1919c:	add	r3, sp, #20
   191a0:	add	ip, sp, #24
   191a4:	str	ip, [sp]
   191a8:	bl	2d2cc <flatcc_json_parser_integer@@Base>
   191ac:	str	r0, [fp, #-20]	; 0xffffffec
   191b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   191b4:	ldr	r1, [sp, #16]
   191b8:	cmp	r0, r1
   191bc:	beq	191f8 <main@@Base+0x55c8>
   191c0:	ldr	r0, [fp, #-16]
   191c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   191c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   191cc:	ldr	r3, [sp, #20]
   191d0:	ldr	ip, [sp, #24]
   191d4:	ldr	lr, [sp, #28]
   191d8:	ldr	r4, [fp, #-28]	; 0xffffffe4
   191dc:	mov	r5, sp
   191e0:	str	r4, [r5, #8]
   191e4:	str	lr, [r5, #4]
   191e8:	str	ip, [r5]
   191ec:	bl	1e528 <main@@Base+0xa8f8>
   191f0:	str	r0, [fp, #-12]
   191f4:	b	19200 <main@@Base+0x55d0>
   191f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   191fc:	str	r0, [fp, #-12]
   19200:	ldr	r0, [fp, #-12]
   19204:	sub	sp, fp, #8
   19208:	pop	{r4, r5, fp, pc}
   1920c:	push	{r4, r5, r6, sl, fp, lr}
   19210:	add	fp, sp, #16
   19214:	sub	sp, sp, #88	; 0x58
   19218:	ldr	ip, [fp, #8]
   1921c:	str	r0, [fp, #-24]	; 0xffffffe8
   19220:	str	r1, [fp, #-28]	; 0xffffffe4
   19224:	str	r2, [fp, #-32]	; 0xffffffe0
   19228:	str	r3, [fp, #-36]	; 0xffffffdc
   1922c:	movw	r0, #0
   19230:	strb	r0, [fp, #-45]	; 0xffffffd3
   19234:	movw	r1, #0
   19238:	str	r1, [sp, #36]	; 0x24
   1923c:	ldr	r1, [fp, #8]
   19240:	strb	r0, [r1]
   19244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19248:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1924c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19250:	str	ip, [sp, #32]
   19254:	bl	1e600 <main@@Base+0xa9d0>
   19258:	str	r0, [fp, #-28]	; 0xffffffe4
   1925c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19260:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19264:	cmp	r0, r1
   19268:	bne	19278 <main@@Base+0x5648>
   1926c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19270:	str	r0, [fp, #-20]	; 0xffffffec
   19274:	b	1942c <main@@Base+0x57fc>
   19278:	b	1927c <main@@Base+0x564c>
   1927c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19280:	str	r0, [fp, #-40]	; 0xffffffd8
   19284:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19288:	ldr	r0, [r0]
   1928c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19290:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19294:	str	r2, [fp, #-44]	; 0xffffffd4
   19298:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1929c:	str	r0, [sp, #28]
   192a0:	mov	r0, r1
   192a4:	mov	r1, r2
   192a8:	mov	r2, r3
   192ac:	add	r3, sp, #44	; 0x2c
   192b0:	add	ip, sp, #48	; 0x30
   192b4:	str	ip, [sp]
   192b8:	add	ip, sp, #40	; 0x28
   192bc:	str	ip, [sp, #4]
   192c0:	ldr	ip, [sp, #28]
   192c4:	blx	ip
   192c8:	str	r0, [fp, #-28]	; 0xffffffe4
   192cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   192d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   192d4:	cmp	r0, r1
   192d8:	bne	192e8 <main@@Base+0x56b8>
   192dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   192e0:	str	r0, [fp, #-20]	; 0xffffffec
   192e4:	b	1942c <main@@Base+0x57fc>
   192e8:	b	192ec <main@@Base+0x56bc>
   192ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   192f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   192f4:	cmp	r0, r1
   192f8:	movw	r0, #0
   192fc:	str	r0, [sp, #24]
   19300:	bne	19328 <main@@Base+0x56f8>
   19304:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19308:	add	r1, r0, #4
   1930c:	str	r1, [fp, #-40]	; 0xffffffd8
   19310:	ldr	r0, [r0, #4]
   19314:	movw	r1, #0
   19318:	cmp	r0, r1
   1931c:	movw	r0, #0
   19320:	movne	r0, #1
   19324:	str	r0, [sp, #24]
   19328:	ldr	r0, [sp, #24]
   1932c:	tst	r0, #1
   19330:	bne	19284 <main@@Base+0x5654>
   19334:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19338:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1933c:	cmp	r0, r1
   19340:	bne	19360 <main@@Base+0x5730>
   19344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19348:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1934c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19350:	movw	r3, #23
   19354:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   19358:	str	r0, [fp, #-20]	; 0xffffffec
   1935c:	b	1942c <main@@Base+0x57fc>
   19360:	ldr	r0, [sp, #36]	; 0x24
   19364:	add	r1, r0, #1
   19368:	str	r1, [sp, #36]	; 0x24
   1936c:	cmp	r0, #0
   19370:	beq	193a0 <main@@Base+0x5770>
   19374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19378:	ldr	r0, [r0, #12]
   1937c:	cmp	r0, #0
   19380:	beq	193a0 <main@@Base+0x5770>
   19384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19388:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1938c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19390:	movw	r3, #14
   19394:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   19398:	str	r0, [fp, #-20]	; 0xffffffec
   1939c:	b	1942c <main@@Base+0x57fc>
   193a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   193a4:	mov	r1, r0
   193a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   193ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   193b0:	ldr	ip, [sp, #44]	; 0x2c
   193b4:	ldr	lr, [sp, #48]	; 0x30
   193b8:	ldr	r4, [sp, #52]	; 0x34
   193bc:	mov	r5, sp
   193c0:	sub	r6, fp, #45	; 0x2d
   193c4:	str	r6, [r5, #8]
   193c8:	str	r4, [r5, #4]
   193cc:	str	lr, [r5]
   193d0:	str	r0, [sp, #20]
   193d4:	mov	r0, r2
   193d8:	str	r1, [sp, #16]
   193dc:	mov	r1, r3
   193e0:	ldr	r2, [sp, #20]
   193e4:	mov	r3, ip
   193e8:	bl	1e528 <main@@Base+0xa8f8>
   193ec:	ldr	r1, [sp, #16]
   193f0:	cmp	r1, r0
   193f4:	bne	19404 <main@@Base+0x57d4>
   193f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   193fc:	str	r0, [fp, #-20]	; 0xffffffec
   19400:	b	1942c <main@@Base+0x57fc>
   19404:	ldrsb	r0, [fp, #-45]	; 0xffffffd3
   19408:	ldr	r1, [fp, #8]
   1940c:	ldrsb	r2, [r1]
   19410:	add	r0, r2, r0
   19414:	strb	r0, [r1]
   19418:	ldr	r0, [sp, #40]	; 0x28
   1941c:	cmp	r0, #0
   19420:	bne	1927c <main@@Base+0x564c>
   19424:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19428:	str	r0, [fp, #-20]	; 0xffffffec
   1942c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19430:	sub	sp, fp, #16
   19434:	pop	{r4, r5, r6, sl, fp, pc}
   19438:	push	{fp, lr}
   1943c:	mov	fp, sp
   19440:	sub	sp, sp, #8
   19444:	str	r0, [sp, #4]
   19448:	strb	r1, [sp, #3]
   1944c:	ldrsb	r0, [sp, #3]
   19450:	bl	1e65c <main@@Base+0xaa2c>
   19454:	ldr	r1, [sp, #4]
   19458:	strb	r0, [r1]
   1945c:	mov	sp, fp
   19460:	pop	{fp, pc}
   19464:	push	{fp, lr}
   19468:	mov	fp, sp
   1946c:	sub	sp, sp, #24
   19470:	str	r0, [fp, #-8]
   19474:	str	r1, [sp, #12]
   19478:	str	r2, [sp, #8]
   1947c:	str	r3, [sp, #4]
   19480:	ldr	r0, [sp, #12]
   19484:	ldr	r1, [sp, #8]
   19488:	cmp	r0, r1
   1948c:	beq	194a0 <main@@Base+0x5870>
   19490:	ldr	r0, [sp, #12]
   19494:	ldrb	r0, [r0]
   19498:	cmp	r0, #91	; 0x5b
   1949c:	beq	194c8 <main@@Base+0x5898>
   194a0:	ldr	r0, [sp, #4]
   194a4:	movw	r1, #0
   194a8:	str	r1, [r0]
   194ac:	ldr	r0, [fp, #-8]
   194b0:	ldr	r1, [sp, #12]
   194b4:	ldr	r2, [sp, #8]
   194b8:	movw	r3, #22
   194bc:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   194c0:	str	r0, [fp, #-4]
   194c4:	b	1953c <main@@Base+0x590c>
   194c8:	ldr	r0, [fp, #-8]
   194cc:	ldr	r1, [sp, #12]
   194d0:	add	r1, r1, #1
   194d4:	ldr	r2, [sp, #8]
   194d8:	bl	1d020 <main@@Base+0x93f0>
   194dc:	str	r0, [sp, #12]
   194e0:	ldr	r0, [sp, #12]
   194e4:	ldr	r1, [sp, #8]
   194e8:	cmp	r0, r1
   194ec:	beq	19528 <main@@Base+0x58f8>
   194f0:	ldr	r0, [sp, #12]
   194f4:	ldrb	r0, [r0]
   194f8:	cmp	r0, #93	; 0x5d
   194fc:	bne	19528 <main@@Base+0x58f8>
   19500:	ldr	r0, [sp, #4]
   19504:	movw	r1, #0
   19508:	str	r1, [r0]
   1950c:	ldr	r0, [fp, #-8]
   19510:	ldr	r1, [sp, #12]
   19514:	add	r1, r1, #1
   19518:	ldr	r2, [sp, #8]
   1951c:	bl	1d020 <main@@Base+0x93f0>
   19520:	str	r0, [fp, #-4]
   19524:	b	1953c <main@@Base+0x590c>
   19528:	ldr	r0, [sp, #4]
   1952c:	movw	r1, #1
   19530:	str	r1, [r0]
   19534:	ldr	r0, [sp, #12]
   19538:	str	r0, [fp, #-4]
   1953c:	ldr	r0, [fp, #-4]
   19540:	mov	sp, fp
   19544:	pop	{fp, pc}
   19548:	push	{r4, r5, fp, lr}
   1954c:	add	fp, sp, #8
   19550:	sub	sp, sp, #56	; 0x38
   19554:	str	r0, [fp, #-16]
   19558:	str	r1, [fp, #-20]	; 0xffffffec
   1955c:	str	r2, [fp, #-24]	; 0xffffffe8
   19560:	str	r3, [fp, #-28]	; 0xffffffe4
   19564:	mov	r0, #0
   19568:	str	r0, [sp, #28]
   1956c:	str	r0, [sp, #24]
   19570:	movw	r0, #0
   19574:	str	r0, [sp, #20]
   19578:	ldr	r0, [fp, #-20]	; 0xffffffec
   1957c:	str	r0, [sp, #16]
   19580:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19584:	movw	r1, #0
   19588:	strb	r1, [r0]
   1958c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19594:	cmp	r0, r1
   19598:	bne	195a8 <main@@Base+0x5978>
   1959c:	ldr	r0, [fp, #-20]	; 0xffffffec
   195a0:	str	r0, [fp, #-12]
   195a4:	b	19618 <main@@Base+0x59e8>
   195a8:	ldr	r0, [fp, #-16]
   195ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   195b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   195b4:	add	r3, sp, #20
   195b8:	add	ip, sp, #24
   195bc:	str	ip, [sp]
   195c0:	bl	2d2cc <flatcc_json_parser_integer@@Base>
   195c4:	str	r0, [fp, #-20]	; 0xffffffec
   195c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   195cc:	ldr	r1, [sp, #16]
   195d0:	cmp	r0, r1
   195d4:	beq	19610 <main@@Base+0x59e0>
   195d8:	ldr	r0, [fp, #-16]
   195dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   195e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   195e4:	ldr	r3, [sp, #20]
   195e8:	ldr	ip, [sp, #24]
   195ec:	ldr	lr, [sp, #28]
   195f0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   195f4:	mov	r5, sp
   195f8:	str	r4, [r5, #8]
   195fc:	str	lr, [r5, #4]
   19600:	str	ip, [r5]
   19604:	bl	1e670 <main@@Base+0xaa40>
   19608:	str	r0, [fp, #-12]
   1960c:	b	19618 <main@@Base+0x59e8>
   19610:	ldr	r0, [fp, #-20]	; 0xffffffec
   19614:	str	r0, [fp, #-12]
   19618:	ldr	r0, [fp, #-12]
   1961c:	sub	sp, fp, #8
   19620:	pop	{r4, r5, fp, pc}
   19624:	push	{r4, r5, r6, sl, fp, lr}
   19628:	add	fp, sp, #16
   1962c:	sub	sp, sp, #88	; 0x58
   19630:	ldr	ip, [fp, #8]
   19634:	str	r0, [fp, #-24]	; 0xffffffe8
   19638:	str	r1, [fp, #-28]	; 0xffffffe4
   1963c:	str	r2, [fp, #-32]	; 0xffffffe0
   19640:	str	r3, [fp, #-36]	; 0xffffffdc
   19644:	movw	r0, #0
   19648:	strb	r0, [fp, #-45]	; 0xffffffd3
   1964c:	movw	r1, #0
   19650:	str	r1, [sp, #36]	; 0x24
   19654:	ldr	r1, [fp, #8]
   19658:	strb	r0, [r1]
   1965c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19660:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19664:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19668:	str	ip, [sp, #32]
   1966c:	bl	1e600 <main@@Base+0xa9d0>
   19670:	str	r0, [fp, #-28]	; 0xffffffe4
   19674:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19678:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1967c:	cmp	r0, r1
   19680:	bne	19690 <main@@Base+0x5a60>
   19684:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19688:	str	r0, [fp, #-20]	; 0xffffffec
   1968c:	b	19844 <main@@Base+0x5c14>
   19690:	b	19694 <main@@Base+0x5a64>
   19694:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19698:	str	r0, [fp, #-40]	; 0xffffffd8
   1969c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   196a0:	ldr	r0, [r0]
   196a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   196ac:	str	r2, [fp, #-44]	; 0xffffffd4
   196b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196b4:	str	r0, [sp, #28]
   196b8:	mov	r0, r1
   196bc:	mov	r1, r2
   196c0:	mov	r2, r3
   196c4:	add	r3, sp, #44	; 0x2c
   196c8:	add	ip, sp, #48	; 0x30
   196cc:	str	ip, [sp]
   196d0:	add	ip, sp, #40	; 0x28
   196d4:	str	ip, [sp, #4]
   196d8:	ldr	ip, [sp, #28]
   196dc:	blx	ip
   196e0:	str	r0, [fp, #-28]	; 0xffffffe4
   196e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   196e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   196ec:	cmp	r0, r1
   196f0:	bne	19700 <main@@Base+0x5ad0>
   196f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   196f8:	str	r0, [fp, #-20]	; 0xffffffec
   196fc:	b	19844 <main@@Base+0x5c14>
   19700:	b	19704 <main@@Base+0x5ad4>
   19704:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19708:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1970c:	cmp	r0, r1
   19710:	movw	r0, #0
   19714:	str	r0, [sp, #24]
   19718:	bne	19740 <main@@Base+0x5b10>
   1971c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19720:	add	r1, r0, #4
   19724:	str	r1, [fp, #-40]	; 0xffffffd8
   19728:	ldr	r0, [r0, #4]
   1972c:	movw	r1, #0
   19730:	cmp	r0, r1
   19734:	movw	r0, #0
   19738:	movne	r0, #1
   1973c:	str	r0, [sp, #24]
   19740:	ldr	r0, [sp, #24]
   19744:	tst	r0, #1
   19748:	bne	1969c <main@@Base+0x5a6c>
   1974c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19750:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19754:	cmp	r0, r1
   19758:	bne	19778 <main@@Base+0x5b48>
   1975c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19764:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19768:	movw	r3, #23
   1976c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   19770:	str	r0, [fp, #-20]	; 0xffffffec
   19774:	b	19844 <main@@Base+0x5c14>
   19778:	ldr	r0, [sp, #36]	; 0x24
   1977c:	add	r1, r0, #1
   19780:	str	r1, [sp, #36]	; 0x24
   19784:	cmp	r0, #0
   19788:	beq	197b8 <main@@Base+0x5b88>
   1978c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19790:	ldr	r0, [r0, #12]
   19794:	cmp	r0, #0
   19798:	beq	197b8 <main@@Base+0x5b88>
   1979c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   197a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   197a8:	movw	r3, #14
   197ac:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   197b0:	str	r0, [fp, #-20]	; 0xffffffec
   197b4:	b	19844 <main@@Base+0x5c14>
   197b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   197bc:	mov	r1, r0
   197c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   197c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   197c8:	ldr	ip, [sp, #44]	; 0x2c
   197cc:	ldr	lr, [sp, #48]	; 0x30
   197d0:	ldr	r4, [sp, #52]	; 0x34
   197d4:	mov	r5, sp
   197d8:	sub	r6, fp, #45	; 0x2d
   197dc:	str	r6, [r5, #8]
   197e0:	str	r4, [r5, #4]
   197e4:	str	lr, [r5]
   197e8:	str	r0, [sp, #20]
   197ec:	mov	r0, r2
   197f0:	str	r1, [sp, #16]
   197f4:	mov	r1, r3
   197f8:	ldr	r2, [sp, #20]
   197fc:	mov	r3, ip
   19800:	bl	1e670 <main@@Base+0xaa40>
   19804:	ldr	r1, [sp, #16]
   19808:	cmp	r1, r0
   1980c:	bne	1981c <main@@Base+0x5bec>
   19810:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19814:	str	r0, [fp, #-20]	; 0xffffffec
   19818:	b	19844 <main@@Base+0x5c14>
   1981c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   19820:	ldr	r1, [fp, #8]
   19824:	ldrb	r2, [r1]
   19828:	add	r0, r2, r0
   1982c:	strb	r0, [r1]
   19830:	ldr	r0, [sp, #40]	; 0x28
   19834:	cmp	r0, #0
   19838:	bne	19694 <main@@Base+0x5a64>
   1983c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19840:	str	r0, [fp, #-20]	; 0xffffffec
   19844:	ldr	r0, [fp, #-20]	; 0xffffffec
   19848:	sub	sp, fp, #16
   1984c:	pop	{r4, r5, r6, sl, fp, pc}
   19850:	push	{fp, lr}
   19854:	mov	fp, sp
   19858:	sub	sp, sp, #8
   1985c:	str	r0, [sp, #4]
   19860:	strb	r1, [sp, #3]
   19864:	ldrb	r0, [sp, #3]
   19868:	bl	1e71c <main@@Base+0xaaec>
   1986c:	ldr	r1, [sp, #4]
   19870:	strb	r0, [r1]
   19874:	mov	sp, fp
   19878:	pop	{fp, pc}
   1987c:	push	{fp, lr}
   19880:	mov	fp, sp
   19884:	sub	sp, sp, #24
   19888:	str	r0, [fp, #-8]
   1988c:	str	r1, [sp, #12]
   19890:	str	r2, [sp, #8]
   19894:	str	r3, [sp, #4]
   19898:	ldr	r0, [fp, #-8]
   1989c:	ldr	r1, [sp, #12]
   198a0:	ldr	r2, [sp, #8]
   198a4:	bl	1d020 <main@@Base+0x93f0>
   198a8:	str	r0, [sp, #12]
   198ac:	ldr	r0, [sp, #12]
   198b0:	ldr	r1, [sp, #8]
   198b4:	cmp	r0, r1
   198b8:	bne	198d4 <main@@Base+0x5ca4>
   198bc:	ldr	r0, [sp, #4]
   198c0:	movw	r1, #0
   198c4:	str	r1, [r0]
   198c8:	ldr	r0, [sp, #12]
   198cc:	str	r0, [fp, #-4]
   198d0:	b	199d4 <main@@Base+0x5da4>
   198d4:	ldr	r0, [sp, #12]
   198d8:	ldrb	r0, [r0]
   198dc:	cmp	r0, #44	; 0x2c
   198e0:	beq	19938 <main@@Base+0x5d08>
   198e4:	ldr	r0, [sp, #4]
   198e8:	movw	r1, #0
   198ec:	str	r1, [r0]
   198f0:	ldr	r0, [sp, #12]
   198f4:	ldrb	r0, [r0]
   198f8:	cmp	r0, #93	; 0x5d
   198fc:	beq	1991c <main@@Base+0x5cec>
   19900:	ldr	r0, [fp, #-8]
   19904:	ldr	r1, [sp, #12]
   19908:	ldr	r2, [sp, #8]
   1990c:	movw	r3, #9
   19910:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   19914:	str	r0, [fp, #-4]
   19918:	b	199d4 <main@@Base+0x5da4>
   1991c:	ldr	r0, [fp, #-8]
   19920:	ldr	r1, [sp, #12]
   19924:	add	r1, r1, #1
   19928:	ldr	r2, [sp, #8]
   1992c:	bl	1d020 <main@@Base+0x93f0>
   19930:	str	r0, [fp, #-4]
   19934:	b	199d4 <main@@Base+0x5da4>
   19938:	ldr	r0, [fp, #-8]
   1993c:	ldr	r1, [sp, #12]
   19940:	add	r1, r1, #1
   19944:	ldr	r2, [sp, #8]
   19948:	bl	1d020 <main@@Base+0x93f0>
   1994c:	str	r0, [sp, #12]
   19950:	ldr	r0, [sp, #12]
   19954:	ldr	r1, [sp, #8]
   19958:	cmp	r0, r1
   1995c:	bne	19988 <main@@Base+0x5d58>
   19960:	ldr	r0, [sp, #4]
   19964:	movw	r1, #0
   19968:	str	r1, [r0]
   1996c:	ldr	r0, [fp, #-8]
   19970:	ldr	r1, [sp, #12]
   19974:	ldr	r2, [sp, #8]
   19978:	movw	r3, #9
   1997c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   19980:	str	r0, [fp, #-4]
   19984:	b	199d4 <main@@Base+0x5da4>
   19988:	ldr	r0, [sp, #12]
   1998c:	ldrb	r0, [r0]
   19990:	cmp	r0, #93	; 0x5d
   19994:	bne	199c0 <main@@Base+0x5d90>
   19998:	ldr	r0, [sp, #4]
   1999c:	movw	r1, #0
   199a0:	str	r1, [r0]
   199a4:	ldr	r0, [fp, #-8]
   199a8:	ldr	r1, [sp, #12]
   199ac:	add	r1, r1, #1
   199b0:	ldr	r2, [sp, #8]
   199b4:	bl	1d020 <main@@Base+0x93f0>
   199b8:	str	r0, [fp, #-4]
   199bc:	b	199d4 <main@@Base+0x5da4>
   199c0:	ldr	r0, [sp, #4]
   199c4:	movw	r1, #1
   199c8:	str	r1, [r0]
   199cc:	ldr	r0, [sp, #12]
   199d0:	str	r0, [fp, #-4]
   199d4:	ldr	r0, [fp, #-4]
   199d8:	mov	sp, fp
   199dc:	pop	{fp, pc}
   199e0:	push	{r4, r5, fp, lr}
   199e4:	add	fp, sp, #8
   199e8:	sub	sp, sp, #56	; 0x38
   199ec:	str	r0, [fp, #-16]
   199f0:	str	r1, [fp, #-20]	; 0xffffffec
   199f4:	str	r2, [fp, #-24]	; 0xffffffe8
   199f8:	str	r3, [fp, #-28]	; 0xffffffe4
   199fc:	mov	r0, #0
   19a00:	str	r0, [sp, #28]
   19a04:	str	r0, [sp, #24]
   19a08:	movw	r0, #0
   19a0c:	str	r0, [sp, #20]
   19a10:	ldr	r0, [fp, #-20]	; 0xffffffec
   19a14:	str	r0, [sp, #16]
   19a18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19a1c:	movw	r1, #0
   19a20:	strh	r1, [r0]
   19a24:	ldr	r0, [fp, #-20]	; 0xffffffec
   19a28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a2c:	cmp	r0, r1
   19a30:	bne	19a40 <main@@Base+0x5e10>
   19a34:	ldr	r0, [fp, #-20]	; 0xffffffec
   19a38:	str	r0, [fp, #-12]
   19a3c:	b	19ab0 <main@@Base+0x5e80>
   19a40:	ldr	r0, [fp, #-16]
   19a44:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a4c:	add	r3, sp, #20
   19a50:	add	ip, sp, #24
   19a54:	str	ip, [sp]
   19a58:	bl	2d2cc <flatcc_json_parser_integer@@Base>
   19a5c:	str	r0, [fp, #-20]	; 0xffffffec
   19a60:	ldr	r0, [fp, #-20]	; 0xffffffec
   19a64:	ldr	r1, [sp, #16]
   19a68:	cmp	r0, r1
   19a6c:	beq	19aa8 <main@@Base+0x5e78>
   19a70:	ldr	r0, [fp, #-16]
   19a74:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a7c:	ldr	r3, [sp, #20]
   19a80:	ldr	ip, [sp, #24]
   19a84:	ldr	lr, [sp, #28]
   19a88:	ldr	r4, [fp, #-28]	; 0xffffffe4
   19a8c:	mov	r5, sp
   19a90:	str	r4, [r5, #8]
   19a94:	str	lr, [r5, #4]
   19a98:	str	ip, [r5]
   19a9c:	bl	1e730 <main@@Base+0xab00>
   19aa0:	str	r0, [fp, #-12]
   19aa4:	b	19ab0 <main@@Base+0x5e80>
   19aa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   19aac:	str	r0, [fp, #-12]
   19ab0:	ldr	r0, [fp, #-12]
   19ab4:	sub	sp, fp, #8
   19ab8:	pop	{r4, r5, fp, pc}
   19abc:	push	{r4, r5, r6, sl, fp, lr}
   19ac0:	add	fp, sp, #16
   19ac4:	sub	sp, sp, #88	; 0x58
   19ac8:	ldr	ip, [fp, #8]
   19acc:	str	r0, [fp, #-24]	; 0xffffffe8
   19ad0:	str	r1, [fp, #-28]	; 0xffffffe4
   19ad4:	str	r2, [fp, #-32]	; 0xffffffe0
   19ad8:	str	r3, [fp, #-36]	; 0xffffffdc
   19adc:	movw	r0, #0
   19ae0:	strh	r0, [fp, #-46]	; 0xffffffd2
   19ae4:	movw	r1, #0
   19ae8:	str	r1, [sp, #36]	; 0x24
   19aec:	ldr	r1, [fp, #8]
   19af0:	strh	r0, [r1]
   19af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19af8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19afc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19b00:	str	ip, [sp, #32]
   19b04:	bl	1e600 <main@@Base+0xa9d0>
   19b08:	str	r0, [fp, #-28]	; 0xffffffe4
   19b0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19b10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19b14:	cmp	r0, r1
   19b18:	bne	19b28 <main@@Base+0x5ef8>
   19b1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19b20:	str	r0, [fp, #-20]	; 0xffffffec
   19b24:	b	19cdc <main@@Base+0x60ac>
   19b28:	b	19b2c <main@@Base+0x5efc>
   19b2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19b30:	str	r0, [fp, #-40]	; 0xffffffd8
   19b34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b38:	ldr	r0, [r0]
   19b3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19b44:	str	r2, [fp, #-44]	; 0xffffffd4
   19b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19b4c:	str	r0, [sp, #28]
   19b50:	mov	r0, r1
   19b54:	mov	r1, r2
   19b58:	mov	r2, r3
   19b5c:	add	r3, sp, #44	; 0x2c
   19b60:	add	ip, sp, #48	; 0x30
   19b64:	str	ip, [sp]
   19b68:	add	ip, sp, #40	; 0x28
   19b6c:	str	ip, [sp, #4]
   19b70:	ldr	ip, [sp, #28]
   19b74:	blx	ip
   19b78:	str	r0, [fp, #-28]	; 0xffffffe4
   19b7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19b80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19b84:	cmp	r0, r1
   19b88:	bne	19b98 <main@@Base+0x5f68>
   19b8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19b90:	str	r0, [fp, #-20]	; 0xffffffec
   19b94:	b	19cdc <main@@Base+0x60ac>
   19b98:	b	19b9c <main@@Base+0x5f6c>
   19b9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19ba0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ba4:	cmp	r0, r1
   19ba8:	movw	r0, #0
   19bac:	str	r0, [sp, #24]
   19bb0:	bne	19bd8 <main@@Base+0x5fa8>
   19bb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19bb8:	add	r1, r0, #4
   19bbc:	str	r1, [fp, #-40]	; 0xffffffd8
   19bc0:	ldr	r0, [r0, #4]
   19bc4:	movw	r1, #0
   19bc8:	cmp	r0, r1
   19bcc:	movw	r0, #0
   19bd0:	movne	r0, #1
   19bd4:	str	r0, [sp, #24]
   19bd8:	ldr	r0, [sp, #24]
   19bdc:	tst	r0, #1
   19be0:	bne	19b34 <main@@Base+0x5f04>
   19be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19be8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19bec:	cmp	r0, r1
   19bf0:	bne	19c10 <main@@Base+0x5fe0>
   19bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19bfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19c00:	movw	r3, #23
   19c04:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   19c08:	str	r0, [fp, #-20]	; 0xffffffec
   19c0c:	b	19cdc <main@@Base+0x60ac>
   19c10:	ldr	r0, [sp, #36]	; 0x24
   19c14:	add	r1, r0, #1
   19c18:	str	r1, [sp, #36]	; 0x24
   19c1c:	cmp	r0, #0
   19c20:	beq	19c50 <main@@Base+0x6020>
   19c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c28:	ldr	r0, [r0, #12]
   19c2c:	cmp	r0, #0
   19c30:	beq	19c50 <main@@Base+0x6020>
   19c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19c40:	movw	r3, #14
   19c44:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   19c48:	str	r0, [fp, #-20]	; 0xffffffec
   19c4c:	b	19cdc <main@@Base+0x60ac>
   19c50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c54:	mov	r1, r0
   19c58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19c60:	ldr	ip, [sp, #44]	; 0x2c
   19c64:	ldr	lr, [sp, #48]	; 0x30
   19c68:	ldr	r4, [sp, #52]	; 0x34
   19c6c:	mov	r5, sp
   19c70:	sub	r6, fp, #46	; 0x2e
   19c74:	str	r6, [r5, #8]
   19c78:	str	r4, [r5, #4]
   19c7c:	str	lr, [r5]
   19c80:	str	r0, [sp, #20]
   19c84:	mov	r0, r2
   19c88:	str	r1, [sp, #16]
   19c8c:	mov	r1, r3
   19c90:	ldr	r2, [sp, #20]
   19c94:	mov	r3, ip
   19c98:	bl	1e730 <main@@Base+0xab00>
   19c9c:	ldr	r1, [sp, #16]
   19ca0:	cmp	r1, r0
   19ca4:	bne	19cb4 <main@@Base+0x6084>
   19ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19cac:	str	r0, [fp, #-20]	; 0xffffffec
   19cb0:	b	19cdc <main@@Base+0x60ac>
   19cb4:	ldrsh	r0, [fp, #-46]	; 0xffffffd2
   19cb8:	ldr	r1, [fp, #8]
   19cbc:	ldrsh	r2, [r1]
   19cc0:	add	r0, r2, r0
   19cc4:	strh	r0, [r1]
   19cc8:	ldr	r0, [sp, #40]	; 0x28
   19ccc:	cmp	r0, #0
   19cd0:	bne	19b2c <main@@Base+0x5efc>
   19cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19cd8:	str	r0, [fp, #-20]	; 0xffffffec
   19cdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ce0:	sub	sp, fp, #16
   19ce4:	pop	{r4, r5, r6, sl, fp, pc}
   19ce8:	push	{fp, lr}
   19cec:	mov	fp, sp
   19cf0:	sub	sp, sp, #8
   19cf4:	str	r0, [sp, #4]
   19cf8:	strh	r1, [sp, #2]
   19cfc:	ldrsh	r0, [sp, #2]
   19d00:	bl	1e80c <main@@Base+0xabdc>
   19d04:	ldr	r1, [sp, #4]
   19d08:	strh	r0, [r1]
   19d0c:	mov	sp, fp
   19d10:	pop	{fp, pc}
   19d14:	push	{fp, lr}
   19d18:	mov	fp, sp
   19d1c:	sub	sp, sp, #24
   19d20:	str	r0, [fp, #-8]
   19d24:	str	r1, [sp, #12]
   19d28:	str	r2, [sp, #8]
   19d2c:	str	r3, [sp, #4]
   19d30:	ldr	r0, [sp, #4]
   19d34:	movw	r1, #0
   19d38:	str	r1, [r0]
   19d3c:	ldr	r0, [fp, #-8]
   19d40:	ldr	r0, [r0]
   19d44:	bl	25df4 <flatcc_builder_start_table@@Base>
   19d48:	cmp	r0, #0
   19d4c:	beq	19d54 <main@@Base+0x6124>
   19d50:	b	19dfc <main@@Base+0x61cc>
   19d54:	ldr	r0, [fp, #-8]
   19d58:	ldr	r1, [sp, #12]
   19d5c:	ldr	r2, [sp, #8]
   19d60:	mov	r3, sp
   19d64:	bl	17a4c <main@@Base+0x3e1c>
   19d68:	str	r0, [sp, #12]
   19d6c:	ldr	r0, [sp]
   19d70:	cmp	r0, #0
   19d74:	beq	19dbc <main@@Base+0x618c>
   19d78:	ldr	r0, [fp, #-8]
   19d7c:	ldr	r1, [sp, #12]
   19d80:	ldr	r2, [sp, #8]
   19d84:	bl	17b30 <main@@Base+0x3f00>
   19d88:	str	r0, [sp, #12]
   19d8c:	ldr	r0, [fp, #-8]
   19d90:	ldr	r1, [sp, #12]
   19d94:	ldr	r2, [sp, #8]
   19d98:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   19d9c:	str	r0, [sp, #12]
   19da0:	ldr	r0, [fp, #-8]
   19da4:	ldr	r1, [sp, #12]
   19da8:	ldr	r2, [sp, #8]
   19dac:	mov	r3, sp
   19db0:	bl	1cebc <main@@Base+0x928c>
   19db4:	str	r0, [sp, #12]
   19db8:	b	19d6c <main@@Base+0x613c>
   19dbc:	ldr	r0, [fp, #-8]
   19dc0:	ldr	r0, [r0, #24]
   19dc4:	cmp	r0, #0
   19dc8:	beq	19dd0 <main@@Base+0x61a0>
   19dcc:	b	19dfc <main@@Base+0x61cc>
   19dd0:	ldr	r0, [fp, #-8]
   19dd4:	ldr	r0, [r0]
   19dd8:	bl	26a5c <flatcc_builder_end_table@@Base>
   19ddc:	ldr	r1, [sp, #4]
   19de0:	str	r0, [r1]
   19de4:	cmp	r0, #0
   19de8:	bne	19df0 <main@@Base+0x61c0>
   19dec:	b	19dfc <main@@Base+0x61cc>
   19df0:	ldr	r0, [sp, #12]
   19df4:	str	r0, [fp, #-4]
   19df8:	b	19e14 <main@@Base+0x61e4>
   19dfc:	ldr	r0, [fp, #-8]
   19e00:	ldr	r1, [sp, #12]
   19e04:	ldr	r2, [sp, #8]
   19e08:	movw	r3, #33	; 0x21
   19e0c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   19e10:	str	r0, [fp, #-4]
   19e14:	ldr	r0, [fp, #-4]
   19e18:	mov	sp, fp
   19e1c:	pop	{fp, pc}
   19e20:	push	{fp, lr}
   19e24:	mov	fp, sp
   19e28:	sub	sp, sp, #80	; 0x50
   19e2c:	str	r0, [fp, #-8]
   19e30:	str	r1, [fp, #-12]
   19e34:	str	r2, [fp, #-16]
   19e38:	str	r3, [fp, #-20]	; 0xffffffec
   19e3c:	ldr	r0, [fp, #-8]
   19e40:	ldr	r1, [fp, #-12]
   19e44:	ldr	r2, [fp, #-16]
   19e48:	sub	r3, fp, #24
   19e4c:	bl	17a4c <main@@Base+0x3e1c>
   19e50:	str	r0, [fp, #-12]
   19e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e58:	cmp	r0, #0
   19e5c:	beq	1a4f4 <main@@Base+0x68c4>
   19e60:	ldr	r0, [fp, #-8]
   19e64:	ldr	r1, [fp, #-12]
   19e68:	ldr	r2, [fp, #-16]
   19e6c:	bl	17b30 <main@@Base+0x3f00>
   19e70:	str	r0, [fp, #-12]
   19e74:	ldr	r0, [fp, #-12]
   19e78:	ldr	r1, [fp, #-16]
   19e7c:	bl	17bdc <main@@Base+0x3fac>
   19e80:	str	r1, [sp, #36]	; 0x24
   19e84:	str	r0, [sp, #32]
   19e88:	ldr	r0, [sp, #32]
   19e8c:	ldr	r1, [sp, #36]	; 0x24
   19e90:	mvn	r2, #-855638016	; 0xcd000000
   19e94:	subs	r0, r2, r0
   19e98:	movw	r2, #29556	; 0x7374
   19e9c:	movt	r2, #29797	; 0x7465
   19ea0:	sbcs	r1, r2, r1
   19ea4:	bcc	1a0e0 <main@@Base+0x64b0>
   19ea8:	b	19eac <main@@Base+0x627c>
   19eac:	ldrb	r0, [sp, #35]	; 0x23
   19eb0:	ldr	r1, [sp, #36]	; 0x24
   19eb4:	movw	r2, #29556	; 0x7374
   19eb8:	movt	r2, #29797	; 0x7465
   19ebc:	eor	r1, r1, r2
   19ec0:	eor	r0, r0, #50	; 0x32
   19ec4:	orr	r0, r1, r0, lsl #24
   19ec8:	cmp	r0, #0
   19ecc:	bne	19fb8 <main@@Base+0x6388>
   19ed0:	b	19ed4 <main@@Base+0x62a4>
   19ed4:	ldr	r0, [fp, #-8]
   19ed8:	ldr	r1, [fp, #-12]
   19edc:	str	r1, [fp, #-36]	; 0xffffffdc
   19ee0:	ldr	r2, [fp, #-16]
   19ee4:	movw	r3, #5
   19ee8:	bl	17c14 <main@@Base+0x3fe4>
   19eec:	str	r0, [fp, #-12]
   19ef0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19ef4:	ldr	r1, [fp, #-12]
   19ef8:	cmp	r0, r1
   19efc:	beq	19fa0 <main@@Base+0x6370>
   19f00:	movw	r0, #0
   19f04:	strb	r0, [sp, #31]
   19f08:	ldr	r0, [fp, #-20]	; 0xffffffec
   19f0c:	add	r0, r0, #24
   19f10:	str	r0, [fp, #-32]	; 0xffffffe0
   19f14:	ldr	r0, [fp, #-8]
   19f18:	ldr	r1, [fp, #-12]
   19f1c:	str	r1, [fp, #-36]	; 0xffffffdc
   19f20:	ldr	r2, [fp, #-16]
   19f24:	add	r3, sp, #31
   19f28:	bl	19130 <main@@Base+0x5500>
   19f2c:	str	r0, [fp, #-12]
   19f30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19f34:	ldr	r1, [fp, #-12]
   19f38:	cmp	r0, r1
   19f3c:	bne	19f90 <main@@Base+0x6360>
   19f40:	ldr	r0, [pc, #1520]	; 1a538 <main@@Base+0x6908>
   19f44:	add	r3, pc, r0
   19f48:	ldr	r0, [fp, #-8]
   19f4c:	ldr	r1, [fp, #-12]
   19f50:	str	r1, [fp, #-36]	; 0xffffffdc
   19f54:	ldr	r2, [fp, #-16]
   19f58:	add	ip, sp, #31
   19f5c:	str	ip, [sp]
   19f60:	bl	1920c <main@@Base+0x55dc>
   19f64:	str	r0, [fp, #-12]
   19f68:	ldr	r0, [fp, #-12]
   19f6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f70:	cmp	r0, r1
   19f74:	beq	19f88 <main@@Base+0x6358>
   19f78:	ldr	r0, [fp, #-12]
   19f7c:	ldr	r1, [fp, #-16]
   19f80:	cmp	r0, r1
   19f84:	bne	19f8c <main@@Base+0x635c>
   19f88:	b	1a500 <main@@Base+0x68d0>
   19f8c:	b	19f90 <main@@Base+0x6360>
   19f90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f94:	ldrsb	r1, [sp, #31]
   19f98:	bl	19438 <main@@Base+0x5808>
   19f9c:	b	19fb4 <main@@Base+0x6384>
   19fa0:	ldr	r0, [fp, #-8]
   19fa4:	ldr	r1, [fp, #-12]
   19fa8:	ldr	r2, [fp, #-16]
   19fac:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   19fb0:	str	r0, [fp, #-12]
   19fb4:	b	1a0dc <main@@Base+0x64ac>
   19fb8:	ldrb	r0, [sp, #35]	; 0x23
   19fbc:	ldr	r1, [sp, #36]	; 0x24
   19fc0:	movw	r2, #29556	; 0x7374
   19fc4:	movt	r2, #29797	; 0x7465
   19fc8:	eor	r1, r1, r2
   19fcc:	eor	r0, r0, #49	; 0x31
   19fd0:	orr	r0, r1, r0, lsl #24
   19fd4:	cmp	r0, #0
   19fd8:	bne	1a0c4 <main@@Base+0x6494>
   19fdc:	b	19fe0 <main@@Base+0x63b0>
   19fe0:	ldr	r0, [fp, #-8]
   19fe4:	ldr	r1, [fp, #-12]
   19fe8:	str	r1, [fp, #-36]	; 0xffffffdc
   19fec:	ldr	r2, [fp, #-16]
   19ff0:	movw	r3, #5
   19ff4:	bl	17c14 <main@@Base+0x3fe4>
   19ff8:	str	r0, [fp, #-12]
   19ffc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a000:	ldr	r1, [fp, #-12]
   1a004:	cmp	r0, r1
   1a008:	beq	1a0ac <main@@Base+0x647c>
   1a00c:	vldr	d16, [pc, #948]	; 1a3c8 <main@@Base+0x6798>
   1a010:	vstr	d16, [sp, #16]
   1a014:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a018:	add	r0, r0, #16
   1a01c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a020:	ldr	r0, [fp, #-8]
   1a024:	ldr	r1, [fp, #-12]
   1a028:	str	r1, [fp, #-36]	; 0xffffffdc
   1a02c:	ldr	r2, [fp, #-16]
   1a030:	add	r3, sp, #16
   1a034:	bl	2c620 <flatcc_json_parser_double@@Base>
   1a038:	str	r0, [fp, #-12]
   1a03c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a040:	ldr	r1, [fp, #-12]
   1a044:	cmp	r0, r1
   1a048:	bne	1a09c <main@@Base+0x646c>
   1a04c:	ldr	r0, [pc, #1248]	; 1a534 <main@@Base+0x6904>
   1a050:	add	r3, pc, r0
   1a054:	ldr	r0, [fp, #-8]
   1a058:	ldr	r1, [fp, #-12]
   1a05c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a060:	ldr	r2, [fp, #-16]
   1a064:	add	ip, sp, #16
   1a068:	str	ip, [sp]
   1a06c:	bl	1cc58 <main@@Base+0x9028>
   1a070:	str	r0, [fp, #-12]
   1a074:	ldr	r0, [fp, #-12]
   1a078:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a07c:	cmp	r0, r1
   1a080:	beq	1a094 <main@@Base+0x6464>
   1a084:	ldr	r0, [fp, #-12]
   1a088:	ldr	r1, [fp, #-16]
   1a08c:	cmp	r0, r1
   1a090:	bne	1a098 <main@@Base+0x6468>
   1a094:	b	1a500 <main@@Base+0x68d0>
   1a098:	b	1a09c <main@@Base+0x646c>
   1a09c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0a0:	vldr	d0, [sp, #16]
   1a0a4:	bl	1ce90 <main@@Base+0x9260>
   1a0a8:	b	1a0c0 <main@@Base+0x6490>
   1a0ac:	ldr	r0, [fp, #-8]
   1a0b0:	ldr	r1, [fp, #-12]
   1a0b4:	ldr	r2, [fp, #-16]
   1a0b8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a0bc:	str	r0, [fp, #-12]
   1a0c0:	b	1a0d8 <main@@Base+0x64a8>
   1a0c4:	ldr	r0, [fp, #-8]
   1a0c8:	ldr	r1, [fp, #-12]
   1a0cc:	ldr	r2, [fp, #-16]
   1a0d0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a0d4:	str	r0, [fp, #-12]
   1a0d8:	b	1a0dc <main@@Base+0x64ac>
   1a0dc:	b	1a4d8 <main@@Base+0x68a8>
   1a0e0:	ldr	r0, [sp, #36]	; 0x24
   1a0e4:	cmn	r0, #-2013265919	; 0x88000001
   1a0e8:	bhi	1a19c <main@@Base+0x656c>
   1a0ec:	b	1a0f0 <main@@Base+0x64c0>
   1a0f0:	ldrb	r0, [sp, #35]	; 0x23
   1a0f4:	ldr	r1, [sp, #36]	; 0x24
   1a0f8:	movw	r2, #29556	; 0x7374
   1a0fc:	movt	r2, #29797	; 0x7465
   1a100:	eor	r1, r1, r2
   1a104:	eor	r0, r0, #51	; 0x33
   1a108:	orr	r0, r1, r0, lsl #24
   1a10c:	cmp	r0, #0
   1a110:	bne	1a184 <main@@Base+0x6554>
   1a114:	b	1a118 <main@@Base+0x64e8>
   1a118:	ldr	r0, [fp, #-8]
   1a11c:	ldr	r1, [fp, #-12]
   1a120:	str	r1, [fp, #-36]	; 0xffffffdc
   1a124:	ldr	r2, [fp, #-16]
   1a128:	movw	r3, #5
   1a12c:	bl	17c14 <main@@Base+0x3fe4>
   1a130:	str	r0, [fp, #-12]
   1a134:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a138:	ldr	r1, [fp, #-12]
   1a13c:	cmp	r0, r1
   1a140:	beq	1a16c <main@@Base+0x653c>
   1a144:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a148:	add	r0, r0, #26
   1a14c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a150:	ldr	r0, [fp, #-8]
   1a154:	ldr	r1, [fp, #-12]
   1a158:	ldr	r2, [fp, #-16]
   1a15c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a160:	bl	1a53c <main@@Base+0x690c>
   1a164:	str	r0, [fp, #-12]
   1a168:	b	1a180 <main@@Base+0x6550>
   1a16c:	ldr	r0, [fp, #-8]
   1a170:	ldr	r1, [fp, #-12]
   1a174:	ldr	r2, [fp, #-16]
   1a178:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a17c:	str	r0, [fp, #-12]
   1a180:	b	1a198 <main@@Base+0x6568>
   1a184:	ldr	r0, [fp, #-8]
   1a188:	ldr	r1, [fp, #-12]
   1a18c:	ldr	r2, [fp, #-16]
   1a190:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a194:	str	r0, [fp, #-12]
   1a198:	b	1a4d4 <main@@Base+0x68a4>
   1a19c:	ldrb	r0, [sp, #39]	; 0x27
   1a1a0:	cmp	r0, #120	; 0x78
   1a1a4:	bhi	1a2bc <main@@Base+0x668c>
   1a1a8:	b	1a1ac <main@@Base+0x657c>
   1a1ac:	ldrb	r0, [sp, #39]	; 0x27
   1a1b0:	mov	r1, #2013265920	; 0x78000000
   1a1b4:	teq	r1, r0, lsl #24
   1a1b8:	bne	1a2a4 <main@@Base+0x6674>
   1a1bc:	b	1a1c0 <main@@Base+0x6590>
   1a1c0:	ldr	r0, [fp, #-8]
   1a1c4:	ldr	r1, [fp, #-12]
   1a1c8:	str	r1, [fp, #-36]	; 0xffffffdc
   1a1cc:	ldr	r2, [fp, #-16]
   1a1d0:	movw	r3, #1
   1a1d4:	bl	17c14 <main@@Base+0x3fe4>
   1a1d8:	str	r0, [fp, #-12]
   1a1dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a1e0:	ldr	r1, [fp, #-12]
   1a1e4:	cmp	r0, r1
   1a1e8:	beq	1a28c <main@@Base+0x665c>
   1a1ec:	vldr	s0, [pc, #816]	; 1a524 <main@@Base+0x68f4>
   1a1f0:	vstr	s0, [sp, #12]
   1a1f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a1f8:	add	r0, r0, #0
   1a1fc:	str	r0, [fp, #-32]	; 0xffffffe0
   1a200:	ldr	r0, [fp, #-8]
   1a204:	ldr	r1, [fp, #-12]
   1a208:	str	r1, [fp, #-36]	; 0xffffffdc
   1a20c:	ldr	r2, [fp, #-16]
   1a210:	add	r3, sp, #12
   1a214:	bl	2c7e0 <flatcc_json_parser_float@@Base>
   1a218:	str	r0, [fp, #-12]
   1a21c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a220:	ldr	r1, [fp, #-12]
   1a224:	cmp	r0, r1
   1a228:	bne	1a27c <main@@Base+0x664c>
   1a22c:	ldr	r0, [pc, #764]	; 1a530 <main@@Base+0x6900>
   1a230:	add	r3, pc, r0
   1a234:	ldr	r0, [fp, #-8]
   1a238:	ldr	r1, [fp, #-12]
   1a23c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a240:	ldr	r2, [fp, #-16]
   1a244:	add	ip, sp, #12
   1a248:	str	ip, [sp]
   1a24c:	bl	1bd00 <main@@Base+0x80d0>
   1a250:	str	r0, [fp, #-12]
   1a254:	ldr	r0, [fp, #-12]
   1a258:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a25c:	cmp	r0, r1
   1a260:	beq	1a274 <main@@Base+0x6644>
   1a264:	ldr	r0, [fp, #-12]
   1a268:	ldr	r1, [fp, #-16]
   1a26c:	cmp	r0, r1
   1a270:	bne	1a278 <main@@Base+0x6648>
   1a274:	b	1a500 <main@@Base+0x68d0>
   1a278:	b	1a27c <main@@Base+0x664c>
   1a27c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a280:	vldr	s0, [sp, #12]
   1a284:	bl	1bf30 <main@@Base+0x8300>
   1a288:	b	1a2a0 <main@@Base+0x6670>
   1a28c:	ldr	r0, [fp, #-8]
   1a290:	ldr	r1, [fp, #-12]
   1a294:	ldr	r2, [fp, #-16]
   1a298:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a29c:	str	r0, [fp, #-12]
   1a2a0:	b	1a2b8 <main@@Base+0x6688>
   1a2a4:	ldr	r0, [fp, #-8]
   1a2a8:	ldr	r1, [fp, #-12]
   1a2ac:	ldr	r2, [fp, #-16]
   1a2b0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a2b4:	str	r0, [fp, #-12]
   1a2b8:	b	1a4d0 <main@@Base+0x68a0>
   1a2bc:	ldrb	r0, [sp, #39]	; 0x27
   1a2c0:	mov	r1, #2046820352	; 0x7a000000
   1a2c4:	teq	r1, r0, lsl #24
   1a2c8:	bne	1a3b4 <main@@Base+0x6784>
   1a2cc:	b	1a2d0 <main@@Base+0x66a0>
   1a2d0:	ldr	r0, [fp, #-8]
   1a2d4:	ldr	r1, [fp, #-12]
   1a2d8:	str	r1, [fp, #-36]	; 0xffffffdc
   1a2dc:	ldr	r2, [fp, #-16]
   1a2e0:	movw	r3, #1
   1a2e4:	bl	17c14 <main@@Base+0x3fe4>
   1a2e8:	str	r0, [fp, #-12]
   1a2ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a2f0:	ldr	r1, [fp, #-12]
   1a2f4:	cmp	r0, r1
   1a2f8:	beq	1a39c <main@@Base+0x676c>
   1a2fc:	vldr	s0, [pc, #544]	; 1a524 <main@@Base+0x68f4>
   1a300:	vstr	s0, [sp, #8]
   1a304:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a308:	add	r0, r0, #8
   1a30c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a310:	ldr	r0, [fp, #-8]
   1a314:	ldr	r1, [fp, #-12]
   1a318:	str	r1, [fp, #-36]	; 0xffffffdc
   1a31c:	ldr	r2, [fp, #-16]
   1a320:	add	r3, sp, #8
   1a324:	bl	2c7e0 <flatcc_json_parser_float@@Base>
   1a328:	str	r0, [fp, #-12]
   1a32c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a330:	ldr	r1, [fp, #-12]
   1a334:	cmp	r0, r1
   1a338:	bne	1a38c <main@@Base+0x675c>
   1a33c:	ldr	r0, [pc, #488]	; 1a52c <main@@Base+0x68fc>
   1a340:	add	r3, pc, r0
   1a344:	ldr	r0, [fp, #-8]
   1a348:	ldr	r1, [fp, #-12]
   1a34c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a350:	ldr	r2, [fp, #-16]
   1a354:	add	ip, sp, #8
   1a358:	str	ip, [sp]
   1a35c:	bl	1bd00 <main@@Base+0x80d0>
   1a360:	str	r0, [fp, #-12]
   1a364:	ldr	r0, [fp, #-12]
   1a368:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a36c:	cmp	r0, r1
   1a370:	beq	1a384 <main@@Base+0x6754>
   1a374:	ldr	r0, [fp, #-12]
   1a378:	ldr	r1, [fp, #-16]
   1a37c:	cmp	r0, r1
   1a380:	bne	1a388 <main@@Base+0x6758>
   1a384:	b	1a500 <main@@Base+0x68d0>
   1a388:	b	1a38c <main@@Base+0x675c>
   1a38c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a390:	vldr	s0, [sp, #8]
   1a394:	bl	1bf30 <main@@Base+0x8300>
   1a398:	b	1a3b0 <main@@Base+0x6780>
   1a39c:	ldr	r0, [fp, #-8]
   1a3a0:	ldr	r1, [fp, #-12]
   1a3a4:	ldr	r2, [fp, #-16]
   1a3a8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a3ac:	str	r0, [fp, #-12]
   1a3b0:	b	1a4cc <main@@Base+0x689c>
   1a3b4:	ldrb	r0, [sp, #39]	; 0x27
   1a3b8:	mov	r1, #2030043136	; 0x79000000
   1a3bc:	teq	r1, r0, lsl #24
   1a3c0:	bne	1a4b4 <main@@Base+0x6884>
   1a3c4:	b	1a3d0 <main@@Base+0x67a0>
	...
   1a3d0:	ldr	r0, [fp, #-8]
   1a3d4:	ldr	r1, [fp, #-12]
   1a3d8:	str	r1, [fp, #-36]	; 0xffffffdc
   1a3dc:	ldr	r2, [fp, #-16]
   1a3e0:	movw	r3, #1
   1a3e4:	bl	17c14 <main@@Base+0x3fe4>
   1a3e8:	str	r0, [fp, #-12]
   1a3ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a3f0:	ldr	r1, [fp, #-12]
   1a3f4:	cmp	r0, r1
   1a3f8:	beq	1a49c <main@@Base+0x686c>
   1a3fc:	vldr	s0, [pc, #288]	; 1a524 <main@@Base+0x68f4>
   1a400:	vstr	s0, [sp, #4]
   1a404:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a408:	add	r0, r0, #4
   1a40c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a410:	ldr	r0, [fp, #-8]
   1a414:	ldr	r1, [fp, #-12]
   1a418:	str	r1, [fp, #-36]	; 0xffffffdc
   1a41c:	ldr	r2, [fp, #-16]
   1a420:	add	r3, sp, #4
   1a424:	bl	2c7e0 <flatcc_json_parser_float@@Base>
   1a428:	str	r0, [fp, #-12]
   1a42c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a430:	ldr	r1, [fp, #-12]
   1a434:	cmp	r0, r1
   1a438:	bne	1a48c <main@@Base+0x685c>
   1a43c:	ldr	r0, [pc, #228]	; 1a528 <main@@Base+0x68f8>
   1a440:	add	r3, pc, r0
   1a444:	ldr	r0, [fp, #-8]
   1a448:	ldr	r1, [fp, #-12]
   1a44c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a450:	ldr	r2, [fp, #-16]
   1a454:	add	ip, sp, #4
   1a458:	str	ip, [sp]
   1a45c:	bl	1bd00 <main@@Base+0x80d0>
   1a460:	str	r0, [fp, #-12]
   1a464:	ldr	r0, [fp, #-12]
   1a468:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a46c:	cmp	r0, r1
   1a470:	beq	1a484 <main@@Base+0x6854>
   1a474:	ldr	r0, [fp, #-12]
   1a478:	ldr	r1, [fp, #-16]
   1a47c:	cmp	r0, r1
   1a480:	bne	1a488 <main@@Base+0x6858>
   1a484:	b	1a500 <main@@Base+0x68d0>
   1a488:	b	1a48c <main@@Base+0x685c>
   1a48c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a490:	vldr	s0, [sp, #4]
   1a494:	bl	1bf30 <main@@Base+0x8300>
   1a498:	b	1a4b0 <main@@Base+0x6880>
   1a49c:	ldr	r0, [fp, #-8]
   1a4a0:	ldr	r1, [fp, #-12]
   1a4a4:	ldr	r2, [fp, #-16]
   1a4a8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a4ac:	str	r0, [fp, #-12]
   1a4b0:	b	1a4c8 <main@@Base+0x6898>
   1a4b4:	ldr	r0, [fp, #-8]
   1a4b8:	ldr	r1, [fp, #-12]
   1a4bc:	ldr	r2, [fp, #-16]
   1a4c0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a4c4:	str	r0, [fp, #-12]
   1a4c8:	b	1a4cc <main@@Base+0x689c>
   1a4cc:	b	1a4d0 <main@@Base+0x68a0>
   1a4d0:	b	1a4d4 <main@@Base+0x68a4>
   1a4d4:	b	1a4d8 <main@@Base+0x68a8>
   1a4d8:	ldr	r0, [fp, #-8]
   1a4dc:	ldr	r1, [fp, #-12]
   1a4e0:	ldr	r2, [fp, #-16]
   1a4e4:	sub	r3, fp, #24
   1a4e8:	bl	1cebc <main@@Base+0x928c>
   1a4ec:	str	r0, [fp, #-12]
   1a4f0:	b	19e54 <main@@Base+0x6224>
   1a4f4:	ldr	r0, [fp, #-12]
   1a4f8:	str	r0, [fp, #-4]
   1a4fc:	b	1a518 <main@@Base+0x68e8>
   1a500:	ldr	r0, [fp, #-8]
   1a504:	ldr	r1, [fp, #-12]
   1a508:	ldr	r2, [fp, #-16]
   1a50c:	movw	r3, #33	; 0x21
   1a510:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1a514:	str	r0, [fp, #-4]
   1a518:	ldr	r0, [fp, #-4]
   1a51c:	mov	sp, fp
   1a520:	pop	{fp, pc}
   1a524:	andeq	r0, r0, r0
   1a528:	muleq	r2, r8, sp
   1a52c:	andeq	r9, r2, ip, lsl #29
   1a530:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   1a534:	andeq	sl, r2, r4, ror #2
   1a538:	andeq	sl, r2, r0, ror #4
   1a53c:	push	{fp, lr}
   1a540:	mov	fp, sp
   1a544:	sub	sp, sp, #56	; 0x38
   1a548:	str	r0, [fp, #-8]
   1a54c:	str	r1, [fp, #-12]
   1a550:	str	r2, [fp, #-16]
   1a554:	str	r3, [fp, #-20]	; 0xffffffec
   1a558:	ldr	r0, [fp, #-8]
   1a55c:	ldr	r1, [fp, #-12]
   1a560:	ldr	r2, [fp, #-16]
   1a564:	sub	r3, fp, #24
   1a568:	bl	17a4c <main@@Base+0x3e1c>
   1a56c:	str	r0, [fp, #-12]
   1a570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a574:	cmp	r0, #0
   1a578:	beq	1a7c8 <main@@Base+0x6b98>
   1a57c:	ldr	r0, [fp, #-8]
   1a580:	ldr	r1, [fp, #-12]
   1a584:	ldr	r2, [fp, #-16]
   1a588:	bl	17b30 <main@@Base+0x3f00>
   1a58c:	str	r0, [fp, #-12]
   1a590:	ldr	r0, [fp, #-12]
   1a594:	ldr	r1, [fp, #-16]
   1a598:	bl	17bdc <main@@Base+0x3fac>
   1a59c:	str	r1, [sp, #12]
   1a5a0:	str	r0, [sp, #8]
   1a5a4:	ldrb	r0, [sp, #15]
   1a5a8:	mov	r1, #1644167168	; 0x62000000
   1a5ac:	teq	r1, r0, lsl #24
   1a5b0:	bne	1a69c <main@@Base+0x6a6c>
   1a5b4:	b	1a5b8 <main@@Base+0x6988>
   1a5b8:	ldr	r0, [fp, #-8]
   1a5bc:	ldr	r1, [fp, #-12]
   1a5c0:	str	r1, [sp, #20]
   1a5c4:	ldr	r2, [fp, #-16]
   1a5c8:	movw	r3, #1
   1a5cc:	bl	17c14 <main@@Base+0x3fe4>
   1a5d0:	str	r0, [fp, #-12]
   1a5d4:	ldr	r0, [sp, #20]
   1a5d8:	ldr	r1, [fp, #-12]
   1a5dc:	cmp	r0, r1
   1a5e0:	beq	1a684 <main@@Base+0x6a54>
   1a5e4:	movw	r0, #0
   1a5e8:	strb	r0, [sp, #7]
   1a5ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a5f0:	add	r0, r0, #2
   1a5f4:	str	r0, [sp, #24]
   1a5f8:	ldr	r0, [fp, #-8]
   1a5fc:	ldr	r1, [fp, #-12]
   1a600:	str	r1, [sp, #20]
   1a604:	ldr	r2, [fp, #-16]
   1a608:	add	r3, sp, #7
   1a60c:	bl	19130 <main@@Base+0x5500>
   1a610:	str	r0, [fp, #-12]
   1a614:	ldr	r0, [sp, #20]
   1a618:	ldr	r1, [fp, #-12]
   1a61c:	cmp	r0, r1
   1a620:	bne	1a674 <main@@Base+0x6a44>
   1a624:	ldr	r0, [pc, #464]	; 1a7fc <main@@Base+0x6bcc>
   1a628:	add	r3, pc, r0
   1a62c:	ldr	r0, [fp, #-8]
   1a630:	ldr	r1, [fp, #-12]
   1a634:	str	r1, [sp, #20]
   1a638:	ldr	r2, [fp, #-16]
   1a63c:	add	ip, sp, #7
   1a640:	str	ip, [sp]
   1a644:	bl	1920c <main@@Base+0x55dc>
   1a648:	str	r0, [fp, #-12]
   1a64c:	ldr	r0, [fp, #-12]
   1a650:	ldr	r1, [sp, #20]
   1a654:	cmp	r0, r1
   1a658:	beq	1a66c <main@@Base+0x6a3c>
   1a65c:	ldr	r0, [fp, #-12]
   1a660:	ldr	r1, [fp, #-16]
   1a664:	cmp	r0, r1
   1a668:	bne	1a670 <main@@Base+0x6a40>
   1a66c:	b	1a7d4 <main@@Base+0x6ba4>
   1a670:	b	1a674 <main@@Base+0x6a44>
   1a674:	ldr	r0, [sp, #24]
   1a678:	ldrsb	r1, [sp, #7]
   1a67c:	bl	19438 <main@@Base+0x5808>
   1a680:	b	1a698 <main@@Base+0x6a68>
   1a684:	ldr	r0, [fp, #-8]
   1a688:	ldr	r1, [fp, #-12]
   1a68c:	ldr	r2, [fp, #-16]
   1a690:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a694:	str	r0, [fp, #-12]
   1a698:	b	1a7ac <main@@Base+0x6b7c>
   1a69c:	ldrb	r0, [sp, #15]
   1a6a0:	mov	r1, #1627389952	; 0x61000000
   1a6a4:	teq	r1, r0, lsl #24
   1a6a8:	bne	1a794 <main@@Base+0x6b64>
   1a6ac:	b	1a6b0 <main@@Base+0x6a80>
   1a6b0:	ldr	r0, [fp, #-8]
   1a6b4:	ldr	r1, [fp, #-12]
   1a6b8:	str	r1, [sp, #20]
   1a6bc:	ldr	r2, [fp, #-16]
   1a6c0:	movw	r3, #1
   1a6c4:	bl	17c14 <main@@Base+0x3fe4>
   1a6c8:	str	r0, [fp, #-12]
   1a6cc:	ldr	r0, [sp, #20]
   1a6d0:	ldr	r1, [fp, #-12]
   1a6d4:	cmp	r0, r1
   1a6d8:	beq	1a77c <main@@Base+0x6b4c>
   1a6dc:	movw	r0, #0
   1a6e0:	strh	r0, [sp, #4]
   1a6e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a6e8:	add	r0, r0, #0
   1a6ec:	str	r0, [sp, #24]
   1a6f0:	ldr	r0, [fp, #-8]
   1a6f4:	ldr	r1, [fp, #-12]
   1a6f8:	str	r1, [sp, #20]
   1a6fc:	ldr	r2, [fp, #-16]
   1a700:	add	r3, sp, #4
   1a704:	bl	199e0 <main@@Base+0x5db0>
   1a708:	str	r0, [fp, #-12]
   1a70c:	ldr	r0, [sp, #20]
   1a710:	ldr	r1, [fp, #-12]
   1a714:	cmp	r0, r1
   1a718:	bne	1a76c <main@@Base+0x6b3c>
   1a71c:	ldr	r0, [pc, #212]	; 1a7f8 <main@@Base+0x6bc8>
   1a720:	add	r3, pc, r0
   1a724:	ldr	r0, [fp, #-8]
   1a728:	ldr	r1, [fp, #-12]
   1a72c:	str	r1, [sp, #20]
   1a730:	ldr	r2, [fp, #-16]
   1a734:	add	ip, sp, #4
   1a738:	str	ip, [sp]
   1a73c:	bl	19abc <main@@Base+0x5e8c>
   1a740:	str	r0, [fp, #-12]
   1a744:	ldr	r0, [fp, #-12]
   1a748:	ldr	r1, [sp, #20]
   1a74c:	cmp	r0, r1
   1a750:	beq	1a764 <main@@Base+0x6b34>
   1a754:	ldr	r0, [fp, #-12]
   1a758:	ldr	r1, [fp, #-16]
   1a75c:	cmp	r0, r1
   1a760:	bne	1a768 <main@@Base+0x6b38>
   1a764:	b	1a7d4 <main@@Base+0x6ba4>
   1a768:	b	1a76c <main@@Base+0x6b3c>
   1a76c:	ldr	r0, [sp, #24]
   1a770:	ldrsh	r1, [sp, #4]
   1a774:	bl	19ce8 <main@@Base+0x60b8>
   1a778:	b	1a790 <main@@Base+0x6b60>
   1a77c:	ldr	r0, [fp, #-8]
   1a780:	ldr	r1, [fp, #-12]
   1a784:	ldr	r2, [fp, #-16]
   1a788:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a78c:	str	r0, [fp, #-12]
   1a790:	b	1a7a8 <main@@Base+0x6b78>
   1a794:	ldr	r0, [fp, #-8]
   1a798:	ldr	r1, [fp, #-12]
   1a79c:	ldr	r2, [fp, #-16]
   1a7a0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a7a4:	str	r0, [fp, #-12]
   1a7a8:	b	1a7ac <main@@Base+0x6b7c>
   1a7ac:	ldr	r0, [fp, #-8]
   1a7b0:	ldr	r1, [fp, #-12]
   1a7b4:	ldr	r2, [fp, #-16]
   1a7b8:	sub	r3, fp, #24
   1a7bc:	bl	1cebc <main@@Base+0x928c>
   1a7c0:	str	r0, [fp, #-12]
   1a7c4:	b	1a570 <main@@Base+0x6940>
   1a7c8:	ldr	r0, [fp, #-12]
   1a7cc:	str	r0, [fp, #-4]
   1a7d0:	b	1a7ec <main@@Base+0x6bbc>
   1a7d4:	ldr	r0, [fp, #-8]
   1a7d8:	ldr	r1, [fp, #-12]
   1a7dc:	ldr	r2, [fp, #-16]
   1a7e0:	movw	r3, #33	; 0x21
   1a7e4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1a7e8:	str	r0, [fp, #-4]
   1a7ec:	ldr	r0, [fp, #-4]
   1a7f0:	mov	sp, fp
   1a7f4:	pop	{fp, pc}
   1a7f8:	ldrdeq	r9, [r2], -r0
   1a7fc:			; <UNDEFINED> instruction: 0x00029bbc
   1a800:	push	{fp, lr}
   1a804:	mov	fp, sp
   1a808:	sub	sp, sp, #24
   1a80c:	ldr	ip, [fp, #8]
   1a810:	str	r0, [fp, #-8]
   1a814:	str	r1, [sp, #12]
   1a818:	str	r2, [sp, #8]
   1a81c:	strb	r3, [sp, #7]
   1a820:	ldr	r0, [fp, #8]
   1a824:	mov	r1, #0
   1a828:	str	r1, [r0]
   1a82c:	ldrb	r0, [sp, #7]
   1a830:	mov	r1, r0
   1a834:	cmp	r0, #4
   1a838:	str	r1, [sp]
   1a83c:	bhi	1a8ec <main@@Base+0x6cbc>
   1a840:	add	r0, pc, #8
   1a844:	ldr	r1, [sp]
   1a848:	ldr	r2, [r0, r1, lsl #2]
   1a84c:	add	pc, r0, r2
   1a850:	andeq	r0, r0, r4, lsl r0
   1a854:	andeq	r0, r0, ip, lsr #32
   1a858:	andeq	r0, r0, r8, asr #32
   1a85c:	andeq	r0, r0, r4, rrx
   1a860:	andeq	r0, r0, r0, lsl #1
   1a864:	ldr	r0, [fp, #-8]
   1a868:	ldr	r1, [sp, #12]
   1a86c:	ldr	r2, [sp, #8]
   1a870:	bl	1e820 <main@@Base+0xabf0>
   1a874:	str	r0, [fp, #-4]
   1a878:	b	1a984 <main@@Base+0x6d54>
   1a87c:	ldr	r0, [fp, #-8]
   1a880:	ldr	r1, [sp, #12]
   1a884:	ldr	r2, [sp, #8]
   1a888:	ldr	r3, [fp, #8]
   1a88c:	bl	14060 <main@@Base+0x430>
   1a890:	str	r0, [sp, #12]
   1a894:	b	1a934 <main@@Base+0x6d04>
   1a898:	ldr	r0, [fp, #-8]
   1a89c:	ldr	r1, [sp, #12]
   1a8a0:	ldr	r2, [sp, #8]
   1a8a4:	ldr	r3, [fp, #8]
   1a8a8:	bl	1e8a0 <main@@Base+0xac70>
   1a8ac:	str	r0, [sp, #12]
   1a8b0:	b	1a934 <main@@Base+0x6d04>
   1a8b4:	ldr	r0, [fp, #-8]
   1a8b8:	ldr	r1, [sp, #12]
   1a8bc:	ldr	r2, [sp, #8]
   1a8c0:	ldr	r3, [fp, #8]
   1a8c4:	bl	1eef8 <main@@Base+0xb2c8>
   1a8c8:	str	r0, [sp, #12]
   1a8cc:	b	1a934 <main@@Base+0x6d04>
   1a8d0:	ldr	r0, [fp, #-8]
   1a8d4:	ldr	r1, [sp, #12]
   1a8d8:	ldr	r2, [sp, #8]
   1a8dc:	ldr	r3, [fp, #8]
   1a8e0:	bl	1f004 <main@@Base+0xb3d4>
   1a8e4:	str	r0, [sp, #12]
   1a8e8:	b	1a934 <main@@Base+0x6d04>
   1a8ec:	ldr	r0, [fp, #-8]
   1a8f0:	ldr	r0, [r0, #8]
   1a8f4:	and	r0, r0, #1
   1a8f8:	cmp	r0, #0
   1a8fc:	bne	1a91c <main@@Base+0x6cec>
   1a900:	ldr	r0, [fp, #-8]
   1a904:	ldr	r1, [sp, #12]
   1a908:	ldr	r2, [sp, #8]
   1a90c:	movw	r3, #15
   1a910:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1a914:	str	r0, [fp, #-4]
   1a918:	b	1a984 <main@@Base+0x6d54>
   1a91c:	ldr	r0, [fp, #-8]
   1a920:	ldr	r1, [sp, #12]
   1a924:	ldr	r2, [sp, #8]
   1a928:	bl	2c024 <flatcc_json_parser_generic_json@@Base>
   1a92c:	str	r0, [fp, #-4]
   1a930:	b	1a984 <main@@Base+0x6d54>
   1a934:	ldr	r0, [fp, #-8]
   1a938:	ldr	r0, [r0, #24]
   1a93c:	cmp	r0, #0
   1a940:	beq	1a950 <main@@Base+0x6d20>
   1a944:	ldr	r0, [sp, #12]
   1a948:	str	r0, [fp, #-4]
   1a94c:	b	1a984 <main@@Base+0x6d54>
   1a950:	ldr	r0, [fp, #8]
   1a954:	ldr	r0, [r0]
   1a958:	cmp	r0, #0
   1a95c:	bne	1a97c <main@@Base+0x6d4c>
   1a960:	ldr	r0, [fp, #-8]
   1a964:	ldr	r1, [sp, #12]
   1a968:	ldr	r2, [sp, #8]
   1a96c:	movw	r3, #33	; 0x21
   1a970:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1a974:	str	r0, [fp, #-4]
   1a978:	b	1a984 <main@@Base+0x6d54>
   1a97c:	ldr	r0, [sp, #12]
   1a980:	str	r0, [fp, #-4]
   1a984:	ldr	r0, [fp, #-4]
   1a988:	mov	sp, fp
   1a98c:	pop	{fp, pc}
   1a990:	push	{fp, lr}
   1a994:	mov	fp, sp
   1a998:	sub	sp, sp, #72	; 0x48
   1a99c:	ldr	ip, [fp, #12]
   1a9a0:	ldr	lr, [fp, #8]
   1a9a4:	str	r0, [fp, #-8]
   1a9a8:	str	r1, [fp, #-12]
   1a9ac:	str	r2, [fp, #-16]
   1a9b0:	str	r3, [fp, #-20]	; 0xffffffec
   1a9b4:	ldr	r0, [fp, #-12]
   1a9b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1a9bc:	ldr	r0, [fp, #-12]
   1a9c0:	ldr	r1, [fp, #-16]
   1a9c4:	str	ip, [sp, #28]
   1a9c8:	str	lr, [sp, #24]
   1a9cc:	bl	17bdc <main@@Base+0x3fac>
   1a9d0:	str	r1, [sp, #36]	; 0x24
   1a9d4:	str	r0, [sp, #32]
   1a9d8:	ldr	r0, [sp, #32]
   1a9dc:	ldr	r1, [sp, #36]	; 0x24
   1a9e0:	movw	r2, #29183	; 0x71ff
   1a9e4:	movt	r2, #29797	; 0x7465
   1a9e8:	subs	r0, r2, r0
   1a9ec:	movw	r2, #28275	; 0x6e73
   1a9f0:	movt	r2, #19823	; 0x4d6f
   1a9f4:	sbcs	r1, r2, r1
   1a9f8:	bcc	1aaa0 <main@@Base+0x6e70>
   1a9fc:	b	1aa00 <main@@Base+0x6dd0>
   1aa00:	ldr	r0, [sp, #36]	; 0x24
   1aa04:	bic	r0, r0, #255	; 0xff
   1aa08:	movw	r1, #29696	; 0x7400
   1aa0c:	movt	r1, #16748	; 0x416c
   1aa10:	teq	r0, r1
   1aa14:	bne	1aa90 <main@@Base+0x6e60>
   1aa18:	b	1aa1c <main@@Base+0x6dec>
   1aa1c:	ldr	r0, [fp, #-8]
   1aa20:	ldr	r1, [fp, #-12]
   1aa24:	str	r1, [fp, #-28]	; 0xffffffe4
   1aa28:	ldr	r2, [fp, #-16]
   1aa2c:	ldr	r3, [fp, #12]
   1aa30:	movw	ip, #3
   1aa34:	str	r3, [sp, #20]
   1aa38:	mov	r3, ip
   1aa3c:	ldr	ip, [sp, #20]
   1aa40:	str	ip, [sp]
   1aa44:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1aa48:	str	r0, [fp, #-12]
   1aa4c:	ldr	r0, [fp, #-12]
   1aa50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa54:	cmp	r0, r1
   1aa58:	beq	1aa80 <main@@Base+0x6e50>
   1aa5c:	ldr	r0, [fp, #8]
   1aa60:	mov	r1, #0
   1aa64:	str	r1, [r0, #4]
   1aa68:	mov	r1, #4
   1aa6c:	str	r1, [r0]
   1aa70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aa74:	movw	r1, #0
   1aa78:	str	r1, [r0]
   1aa7c:	b	1aa8c <main@@Base+0x6e5c>
   1aa80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa84:	str	r0, [fp, #-4]
   1aa88:	b	1ae00 <main@@Base+0x71d0>
   1aa8c:	b	1aa9c <main@@Base+0x6e6c>
   1aa90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa94:	str	r0, [fp, #-4]
   1aa98:	b	1ae00 <main@@Base+0x71d0>
   1aa9c:	b	1adf8 <main@@Base+0x71c8>
   1aaa0:	ldr	r0, [sp, #32]
   1aaa4:	ldr	r1, [sp, #36]	; 0x24
   1aaa8:	movw	r2, #28275	; 0x6e73
   1aaac:	movt	r2, #19823	; 0x4d6f
   1aab0:	eor	r1, r1, r2
   1aab4:	movw	r2, #29234	; 0x7232
   1aab8:	movt	r2, #29797	; 0x7465
   1aabc:	eor	r0, r0, r2
   1aac0:	orr	r0, r0, r1
   1aac4:	cmp	r0, #0
   1aac8:	bne	1ab3c <main@@Base+0x6f0c>
   1aacc:	b	1aad0 <main@@Base+0x6ea0>
   1aad0:	ldr	r0, [fp, #-8]
   1aad4:	ldr	r1, [fp, #-12]
   1aad8:	str	r1, [fp, #-28]	; 0xffffffe4
   1aadc:	ldr	r2, [fp, #-16]
   1aae0:	ldr	r3, [fp, #12]
   1aae4:	movw	ip, #8
   1aae8:	str	r3, [sp, #16]
   1aaec:	mov	r3, ip
   1aaf0:	ldr	ip, [sp, #16]
   1aaf4:	str	ip, [sp]
   1aaf8:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1aafc:	str	r0, [fp, #-12]
   1ab00:	ldr	r0, [fp, #-12]
   1ab04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab08:	cmp	r0, r1
   1ab0c:	beq	1ab34 <main@@Base+0x6f04>
   1ab10:	ldr	r0, [fp, #8]
   1ab14:	mov	r1, #0
   1ab18:	str	r1, [r0, #4]
   1ab1c:	mov	r1, #3
   1ab20:	str	r1, [r0]
   1ab24:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ab28:	movw	r1, #0
   1ab2c:	str	r1, [r0]
   1ab30:	b	1ab38 <main@@Base+0x6f08>
   1ab34:	b	1abec <main@@Base+0x6fbc>
   1ab38:	b	1abe8 <main@@Base+0x6fb8>
   1ab3c:	ldr	r0, [sp, #32]
   1ab40:	ldr	r1, [sp, #36]	; 0x24
   1ab44:	movw	r2, #28526	; 0x6f6e
   1ab48:	movt	r2, #77	; 0x4d
   1ab4c:	eor	r2, r2, r1, lsr #8
   1ab50:	lsr	r0, r0, #8
   1ab54:	orr	r0, r0, r1, lsl #24
   1ab58:	movw	r1, #25970	; 0x6572
   1ab5c:	movt	r1, #29556	; 0x7374
   1ab60:	eor	r0, r0, r1
   1ab64:	orr	r0, r0, r2
   1ab68:	cmp	r0, #0
   1ab6c:	bne	1abe0 <main@@Base+0x6fb0>
   1ab70:	b	1ab74 <main@@Base+0x6f44>
   1ab74:	ldr	r0, [fp, #-8]
   1ab78:	ldr	r1, [fp, #-12]
   1ab7c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ab80:	ldr	r2, [fp, #-16]
   1ab84:	ldr	r3, [fp, #12]
   1ab88:	movw	ip, #7
   1ab8c:	str	r3, [sp, #12]
   1ab90:	mov	r3, ip
   1ab94:	ldr	ip, [sp, #12]
   1ab98:	str	ip, [sp]
   1ab9c:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1aba0:	str	r0, [fp, #-12]
   1aba4:	ldr	r0, [fp, #-12]
   1aba8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1abac:	cmp	r0, r1
   1abb0:	beq	1abd8 <main@@Base+0x6fa8>
   1abb4:	ldr	r0, [fp, #8]
   1abb8:	mov	r1, #0
   1abbc:	str	r1, [r0, #4]
   1abc0:	mov	r1, #1
   1abc4:	str	r1, [r0]
   1abc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1abcc:	movw	r1, #0
   1abd0:	str	r1, [r0]
   1abd4:	b	1abdc <main@@Base+0x6fac>
   1abd8:	b	1abec <main@@Base+0x6fbc>
   1abdc:	b	1abe4 <main@@Base+0x6fb4>
   1abe0:	b	1abec <main@@Base+0x6fbc>
   1abe4:	b	1abe8 <main@@Base+0x6fb8>
   1abe8:	b	1adf4 <main@@Base+0x71c4>
   1abec:	ldr	r0, [sp, #36]	; 0x24
   1abf0:	movw	r1, #20037	; 0x4e45
   1abf4:	movt	r1, #20047	; 0x4e4f
   1abf8:	teq	r0, r1
   1abfc:	bne	1ac6c <main@@Base+0x703c>
   1ac00:	b	1ac04 <main@@Base+0x6fd4>
   1ac04:	ldr	r0, [fp, #-8]
   1ac08:	ldr	r1, [fp, #-12]
   1ac0c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ac10:	ldr	r2, [fp, #-16]
   1ac14:	ldr	r3, [fp, #12]
   1ac18:	movw	ip, #4
   1ac1c:	str	r3, [sp, #8]
   1ac20:	mov	r3, ip
   1ac24:	ldr	ip, [sp, #8]
   1ac28:	str	ip, [sp]
   1ac2c:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1ac30:	str	r0, [fp, #-12]
   1ac34:	ldr	r0, [fp, #-12]
   1ac38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac3c:	cmp	r0, r1
   1ac40:	beq	1ac64 <main@@Base+0x7034>
   1ac44:	ldr	r0, [fp, #8]
   1ac48:	mov	r1, #0
   1ac4c:	str	r1, [r0, #4]
   1ac50:	str	r1, [r0]
   1ac54:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac58:	movw	r1, #0
   1ac5c:	str	r1, [r0]
   1ac60:	b	1ac68 <main@@Base+0x7038>
   1ac64:	b	1ac74 <main@@Base+0x7044>
   1ac68:	b	1ac70 <main@@Base+0x7040>
   1ac6c:	b	1ac74 <main@@Base+0x7044>
   1ac70:	b	1adf0 <main@@Base+0x71c0>
   1ac74:	ldr	r0, [sp, #32]
   1ac78:	ldr	r1, [sp, #36]	; 0x24
   1ac7c:	movw	r2, #29556	; 0x7374
   1ac80:	movt	r2, #21605	; 0x5465
   1ac84:	eor	r1, r1, r2
   1ac88:	movw	r2, #28016	; 0x6d70
   1ac8c:	movt	r2, #21353	; 0x5369
   1ac90:	eor	r0, r0, r2
   1ac94:	orr	r0, r0, r1
   1ac98:	cmp	r0, #0
   1ac9c:	bne	1ade0 <main@@Base+0x71b0>
   1aca0:	b	1aca4 <main@@Base+0x7074>
   1aca4:	ldr	r0, [fp, #-12]
   1aca8:	add	r0, r0, #8
   1acac:	str	r0, [fp, #-12]
   1acb0:	ldr	r0, [fp, #-12]
   1acb4:	ldr	r1, [fp, #-16]
   1acb8:	bl	17bdc <main@@Base+0x3fac>
   1acbc:	str	r1, [sp, #36]	; 0x24
   1acc0:	str	r0, [sp, #32]
   1acc4:	ldr	r0, [sp, #32]
   1acc8:	ldr	r1, [sp, #36]	; 0x24
   1accc:	movw	r2, #21601	; 0x5461
   1acd0:	movt	r2, #27749	; 0x6c65
   1acd4:	eor	r1, r1, r2
   1acd8:	movw	r2, #25943	; 0x6557
   1acdc:	movt	r2, #25196	; 0x626c
   1ace0:	eor	r0, r0, r2
   1ace4:	orr	r0, r0, r1
   1ace8:	cmp	r0, #0
   1acec:	bne	1add0 <main@@Base+0x71a0>
   1acf0:	b	1acf4 <main@@Base+0x70c4>
   1acf4:	ldr	r0, [fp, #-12]
   1acf8:	add	r0, r0, #8
   1acfc:	str	r0, [fp, #-12]
   1ad00:	ldr	r0, [fp, #-12]
   1ad04:	ldr	r1, [fp, #-16]
   1ad08:	bl	17bdc <main@@Base+0x3fac>
   1ad0c:	str	r1, [sp, #36]	; 0x24
   1ad10:	str	r0, [sp, #32]
   1ad14:	ldr	r0, [sp, #32]
   1ad18:	ldr	r1, [sp, #36]	; 0x24
   1ad1c:	movw	r2, #29800	; 0x7468
   1ad20:	movt	r2, #105	; 0x69
   1ad24:	eor	r2, r2, r1, lsr #8
   1ad28:	lsr	r0, r0, #8
   1ad2c:	orr	r0, r0, r1, lsl #24
   1ad30:	movw	r1, #30061	; 0x756d
   1ad34:	movt	r1, #17774	; 0x456e
   1ad38:	eor	r0, r0, r1
   1ad3c:	orr	r0, r0, r2
   1ad40:	cmp	r0, #0
   1ad44:	bne	1adc0 <main@@Base+0x7190>
   1ad48:	b	1ad4c <main@@Base+0x711c>
   1ad4c:	ldr	r0, [fp, #-8]
   1ad50:	ldr	r1, [fp, #-12]
   1ad54:	str	r1, [fp, #-28]	; 0xffffffe4
   1ad58:	ldr	r2, [fp, #-16]
   1ad5c:	ldr	r3, [fp, #12]
   1ad60:	movw	ip, #7
   1ad64:	str	r3, [sp, #4]
   1ad68:	mov	r3, ip
   1ad6c:	ldr	ip, [sp, #4]
   1ad70:	str	ip, [sp]
   1ad74:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1ad78:	str	r0, [fp, #-12]
   1ad7c:	ldr	r0, [fp, #-12]
   1ad80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad84:	cmp	r0, r1
   1ad88:	beq	1adb0 <main@@Base+0x7180>
   1ad8c:	ldr	r0, [fp, #8]
   1ad90:	mov	r1, #0
   1ad94:	str	r1, [r0, #4]
   1ad98:	mov	r1, #2
   1ad9c:	str	r1, [r0]
   1ada0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ada4:	movw	r1, #0
   1ada8:	str	r1, [r0]
   1adac:	b	1adbc <main@@Base+0x718c>
   1adb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adb4:	str	r0, [fp, #-4]
   1adb8:	b	1ae00 <main@@Base+0x71d0>
   1adbc:	b	1adcc <main@@Base+0x719c>
   1adc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adc4:	str	r0, [fp, #-4]
   1adc8:	b	1ae00 <main@@Base+0x71d0>
   1adcc:	b	1addc <main@@Base+0x71ac>
   1add0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1add4:	str	r0, [fp, #-4]
   1add8:	b	1ae00 <main@@Base+0x71d0>
   1addc:	b	1adec <main@@Base+0x71bc>
   1ade0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ade4:	str	r0, [fp, #-4]
   1ade8:	b	1ae00 <main@@Base+0x71d0>
   1adec:	b	1adf0 <main@@Base+0x71c0>
   1adf0:	b	1adf4 <main@@Base+0x71c4>
   1adf4:	b	1adf8 <main@@Base+0x71c8>
   1adf8:	ldr	r0, [fp, #-12]
   1adfc:	str	r0, [fp, #-4]
   1ae00:	ldr	r0, [fp, #-4]
   1ae04:	mov	sp, fp
   1ae08:	pop	{fp, pc}
   1ae0c:	push	{fp, lr}
   1ae10:	mov	fp, sp
   1ae14:	sub	sp, sp, #32
   1ae18:	str	r0, [fp, #-8]
   1ae1c:	str	r1, [fp, #-12]
   1ae20:	str	r2, [sp, #16]
   1ae24:	str	r3, [sp, #12]
   1ae28:	ldr	r0, [fp, #-12]
   1ae2c:	str	r0, [sp, #8]
   1ae30:	ldr	r0, [sp, #16]
   1ae34:	ldr	r1, [fp, #-12]
   1ae38:	sub	r0, r0, r1
   1ae3c:	cmp	r0, #4
   1ae40:	blt	1ae80 <main@@Base+0x7250>
   1ae44:	ldr	r0, [fp, #-12]
   1ae48:	ldr	r0, [r0]
   1ae4c:	movw	r1, #29300	; 0x7274
   1ae50:	movt	r1, #25973	; 0x6575
   1ae54:	subs	r0, r0, r1
   1ae58:	movwne	r0, #1
   1ae5c:	cmp	r0, #0
   1ae60:	bne	1ae80 <main@@Base+0x7250>
   1ae64:	ldr	r0, [sp, #12]
   1ae68:	movw	r1, #1
   1ae6c:	strb	r1, [r0]
   1ae70:	ldr	r0, [sp, #8]
   1ae74:	add	r0, r0, #4
   1ae78:	str	r0, [fp, #-4]
   1ae7c:	b	1af18 <main@@Base+0x72e8>
   1ae80:	ldr	r0, [sp, #16]
   1ae84:	ldr	r1, [fp, #-12]
   1ae88:	sub	r0, r0, r1
   1ae8c:	cmp	r0, #5
   1ae90:	blt	1aecc <main@@Base+0x729c>
   1ae94:	ldr	r0, [fp, #-12]
   1ae98:	ldr	r1, [pc, #132]	; 1af24 <main@@Base+0x72f4>
   1ae9c:	add	r1, pc, r1
   1aea0:	mov	r2, #5
   1aea4:	bl	12a90 <memcmp@plt>
   1aea8:	cmp	r0, #0
   1aeac:	bne	1aecc <main@@Base+0x729c>
   1aeb0:	ldr	r0, [sp, #12]
   1aeb4:	movw	r1, #0
   1aeb8:	strb	r1, [r0]
   1aebc:	ldr	r0, [sp, #8]
   1aec0:	add	r0, r0, #5
   1aec4:	str	r0, [fp, #-4]
   1aec8:	b	1af18 <main@@Base+0x72e8>
   1aecc:	b	1aed0 <main@@Base+0x72a0>
   1aed0:	ldr	r0, [fp, #-8]
   1aed4:	ldr	r1, [fp, #-12]
   1aed8:	ldr	r2, [sp, #16]
   1aedc:	add	r3, sp, #7
   1aee0:	bl	19548 <main@@Base+0x5918>
   1aee4:	str	r0, [fp, #-12]
   1aee8:	ldrsb	r0, [sp, #7]
   1aeec:	cmp	r0, #0
   1aef0:	movw	r0, #0
   1aef4:	movne	r0, #1
   1aef8:	mvn	r1, #0
   1aefc:	eor	r0, r0, r1
   1af00:	eor	r0, r0, r1
   1af04:	and	r0, r0, #1
   1af08:	ldr	r1, [sp, #12]
   1af0c:	strb	r0, [r1]
   1af10:	ldr	r0, [fp, #-12]
   1af14:	str	r0, [fp, #-4]
   1af18:	ldr	r0, [fp, #-4]
   1af1c:	mov	sp, fp
   1af20:	pop	{fp, pc}
   1af24:	muleq	r1, r4, r0
   1af28:	push	{r4, r5, r6, sl, fp, lr}
   1af2c:	add	fp, sp, #16
   1af30:	sub	sp, sp, #88	; 0x58
   1af34:	ldr	ip, [fp, #8]
   1af38:	str	r0, [fp, #-24]	; 0xffffffe8
   1af3c:	str	r1, [fp, #-28]	; 0xffffffe4
   1af40:	str	r2, [fp, #-32]	; 0xffffffe0
   1af44:	str	r3, [fp, #-36]	; 0xffffffdc
   1af48:	movw	r0, #0
   1af4c:	strb	r0, [fp, #-45]	; 0xffffffd3
   1af50:	movw	r1, #0
   1af54:	str	r1, [sp, #36]	; 0x24
   1af58:	ldr	r1, [fp, #8]
   1af5c:	strb	r0, [r1]
   1af60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1af68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1af6c:	str	ip, [sp, #32]
   1af70:	bl	1e600 <main@@Base+0xa9d0>
   1af74:	str	r0, [fp, #-28]	; 0xffffffe4
   1af78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1af7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1af80:	cmp	r0, r1
   1af84:	bne	1af94 <main@@Base+0x7364>
   1af88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1af8c:	str	r0, [fp, #-20]	; 0xffffffec
   1af90:	b	1b148 <main@@Base+0x7518>
   1af94:	b	1af98 <main@@Base+0x7368>
   1af98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af9c:	str	r0, [fp, #-40]	; 0xffffffd8
   1afa0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1afa4:	ldr	r0, [r0]
   1afa8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1afac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1afb0:	str	r2, [fp, #-44]	; 0xffffffd4
   1afb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1afb8:	str	r0, [sp, #28]
   1afbc:	mov	r0, r1
   1afc0:	mov	r1, r2
   1afc4:	mov	r2, r3
   1afc8:	add	r3, sp, #44	; 0x2c
   1afcc:	add	ip, sp, #48	; 0x30
   1afd0:	str	ip, [sp]
   1afd4:	add	ip, sp, #40	; 0x28
   1afd8:	str	ip, [sp, #4]
   1afdc:	ldr	ip, [sp, #28]
   1afe0:	blx	ip
   1afe4:	str	r0, [fp, #-28]	; 0xffffffe4
   1afe8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1afec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1aff0:	cmp	r0, r1
   1aff4:	bne	1b004 <main@@Base+0x73d4>
   1aff8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1affc:	str	r0, [fp, #-20]	; 0xffffffec
   1b000:	b	1b148 <main@@Base+0x7518>
   1b004:	b	1b008 <main@@Base+0x73d8>
   1b008:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b00c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b010:	cmp	r0, r1
   1b014:	movw	r0, #0
   1b018:	str	r0, [sp, #24]
   1b01c:	bne	1b044 <main@@Base+0x7414>
   1b020:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b024:	add	r1, r0, #4
   1b028:	str	r1, [fp, #-40]	; 0xffffffd8
   1b02c:	ldr	r0, [r0, #4]
   1b030:	movw	r1, #0
   1b034:	cmp	r0, r1
   1b038:	movw	r0, #0
   1b03c:	movne	r0, #1
   1b040:	str	r0, [sp, #24]
   1b044:	ldr	r0, [sp, #24]
   1b048:	tst	r0, #1
   1b04c:	bne	1afa0 <main@@Base+0x7370>
   1b050:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b054:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b058:	cmp	r0, r1
   1b05c:	bne	1b07c <main@@Base+0x744c>
   1b060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b064:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b068:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b06c:	movw	r3, #23
   1b070:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1b074:	str	r0, [fp, #-20]	; 0xffffffec
   1b078:	b	1b148 <main@@Base+0x7518>
   1b07c:	ldr	r0, [sp, #36]	; 0x24
   1b080:	add	r1, r0, #1
   1b084:	str	r1, [sp, #36]	; 0x24
   1b088:	cmp	r0, #0
   1b08c:	beq	1b0bc <main@@Base+0x748c>
   1b090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b094:	ldr	r0, [r0, #12]
   1b098:	cmp	r0, #0
   1b09c:	beq	1b0bc <main@@Base+0x748c>
   1b0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b0ac:	movw	r3, #14
   1b0b0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1b0b4:	str	r0, [fp, #-20]	; 0xffffffec
   1b0b8:	b	1b148 <main@@Base+0x7518>
   1b0bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b0c0:	mov	r1, r0
   1b0c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b0c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b0cc:	ldr	ip, [sp, #44]	; 0x2c
   1b0d0:	ldr	lr, [sp, #48]	; 0x30
   1b0d4:	ldr	r4, [sp, #52]	; 0x34
   1b0d8:	mov	r5, sp
   1b0dc:	sub	r6, fp, #45	; 0x2d
   1b0e0:	str	r6, [r5, #8]
   1b0e4:	str	r4, [r5, #4]
   1b0e8:	str	lr, [r5]
   1b0ec:	str	r0, [sp, #20]
   1b0f0:	mov	r0, r2
   1b0f4:	str	r1, [sp, #16]
   1b0f8:	mov	r1, r3
   1b0fc:	ldr	r2, [sp, #20]
   1b100:	mov	r3, ip
   1b104:	bl	22d3c <main@@Base+0xf10c>
   1b108:	ldr	r1, [sp, #16]
   1b10c:	cmp	r1, r0
   1b110:	bne	1b120 <main@@Base+0x74f0>
   1b114:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b118:	str	r0, [fp, #-20]	; 0xffffffec
   1b11c:	b	1b148 <main@@Base+0x7518>
   1b120:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b124:	ldr	r1, [fp, #8]
   1b128:	ldrb	r2, [r1]
   1b12c:	add	r0, r2, r0
   1b130:	strb	r0, [r1]
   1b134:	ldr	r0, [sp, #40]	; 0x28
   1b138:	cmp	r0, #0
   1b13c:	bne	1af98 <main@@Base+0x7368>
   1b140:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b144:	str	r0, [fp, #-20]	; 0xffffffec
   1b148:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b14c:	sub	sp, fp, #16
   1b150:	pop	{r4, r5, r6, sl, fp, pc}
   1b154:	push	{fp, lr}
   1b158:	mov	fp, sp
   1b15c:	sub	sp, sp, #8
   1b160:	str	r0, [sp, #4]
   1b164:	strb	r1, [sp, #3]
   1b168:	ldrb	r0, [sp, #3]
   1b16c:	bl	22dd4 <main@@Base+0xf1a4>
   1b170:	ldr	r1, [sp, #4]
   1b174:	strb	r0, [r1]
   1b178:	mov	sp, fp
   1b17c:	pop	{fp, pc}
   1b180:	push	{fp, lr}
   1b184:	mov	fp, sp
   1b188:	sub	sp, sp, #64	; 0x40
   1b18c:	str	r0, [fp, #-8]
   1b190:	str	r1, [fp, #-12]
   1b194:	str	r2, [fp, #-16]
   1b198:	str	r3, [fp, #-20]	; 0xffffffec
   1b19c:	ldr	r0, [fp, #-8]
   1b1a0:	ldr	r1, [fp, #-12]
   1b1a4:	ldr	r2, [fp, #-16]
   1b1a8:	sub	r3, fp, #24
   1b1ac:	bl	17a4c <main@@Base+0x3e1c>
   1b1b0:	str	r0, [fp, #-12]
   1b1b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1b8:	cmp	r0, #0
   1b1bc:	beq	1b42c <main@@Base+0x77fc>
   1b1c0:	ldr	r0, [fp, #-8]
   1b1c4:	ldr	r1, [fp, #-12]
   1b1c8:	ldr	r2, [fp, #-16]
   1b1cc:	bl	17b30 <main@@Base+0x3f00>
   1b1d0:	str	r0, [fp, #-12]
   1b1d4:	ldr	r0, [fp, #-12]
   1b1d8:	ldr	r1, [fp, #-16]
   1b1dc:	bl	17bdc <main@@Base+0x3fac>
   1b1e0:	str	r1, [sp, #20]
   1b1e4:	str	r0, [sp, #16]
   1b1e8:	ldrh	r0, [sp, #22]
   1b1ec:	movw	r1, #0
   1b1f0:	movt	r1, #26980	; 0x6964
   1b1f4:	teq	r1, r0, lsl #16
   1b1f8:	bne	1b2e4 <main@@Base+0x76b4>
   1b1fc:	b	1b200 <main@@Base+0x75d0>
   1b200:	ldr	r0, [fp, #-8]
   1b204:	ldr	r1, [fp, #-12]
   1b208:	str	r1, [sp, #28]
   1b20c:	ldr	r2, [fp, #-16]
   1b210:	movw	r3, #2
   1b214:	bl	17c14 <main@@Base+0x3fe4>
   1b218:	str	r0, [fp, #-12]
   1b21c:	ldr	r0, [sp, #28]
   1b220:	ldr	r1, [fp, #-12]
   1b224:	cmp	r0, r1
   1b228:	beq	1b2cc <main@@Base+0x769c>
   1b22c:	movw	r0, #0
   1b230:	str	r0, [sp, #12]
   1b234:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b238:	add	r0, r0, #0
   1b23c:	str	r0, [sp, #32]
   1b240:	ldr	r0, [fp, #-8]
   1b244:	ldr	r1, [fp, #-12]
   1b248:	str	r1, [sp, #28]
   1b24c:	ldr	r2, [fp, #-16]
   1b250:	add	r3, sp, #12
   1b254:	bl	1c5d8 <main@@Base+0x89a8>
   1b258:	str	r0, [fp, #-12]
   1b25c:	ldr	r0, [sp, #28]
   1b260:	ldr	r1, [fp, #-12]
   1b264:	cmp	r0, r1
   1b268:	bne	1b2bc <main@@Base+0x768c>
   1b26c:	ldr	r0, [pc, #492]	; 1b460 <main@@Base+0x7830>
   1b270:	add	r3, pc, r0
   1b274:	ldr	r0, [fp, #-8]
   1b278:	ldr	r1, [fp, #-12]
   1b27c:	str	r1, [sp, #28]
   1b280:	ldr	r2, [fp, #-16]
   1b284:	add	ip, sp, #12
   1b288:	str	ip, [sp]
   1b28c:	bl	1c6b0 <main@@Base+0x8a80>
   1b290:	str	r0, [fp, #-12]
   1b294:	ldr	r0, [fp, #-12]
   1b298:	ldr	r1, [sp, #28]
   1b29c:	cmp	r0, r1
   1b2a0:	beq	1b2b4 <main@@Base+0x7684>
   1b2a4:	ldr	r0, [fp, #-12]
   1b2a8:	ldr	r1, [fp, #-16]
   1b2ac:	cmp	r0, r1
   1b2b0:	bne	1b2b8 <main@@Base+0x7688>
   1b2b4:	b	1b438 <main@@Base+0x7808>
   1b2b8:	b	1b2bc <main@@Base+0x768c>
   1b2bc:	ldr	r0, [sp, #32]
   1b2c0:	ldr	r1, [sp, #12]
   1b2c4:	bl	1c8d8 <main@@Base+0x8ca8>
   1b2c8:	b	1b2e0 <main@@Base+0x76b0>
   1b2cc:	ldr	r0, [fp, #-8]
   1b2d0:	ldr	r1, [fp, #-12]
   1b2d4:	ldr	r2, [fp, #-16]
   1b2d8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1b2dc:	str	r0, [fp, #-12]
   1b2e0:	b	1b410 <main@@Base+0x77e0>
   1b2e4:	ldr	r0, [sp, #16]
   1b2e8:	ldr	r1, [sp, #20]
   1b2ec:	movw	r2, #29556	; 0x7374
   1b2f0:	movt	r2, #25705	; 0x6469
   1b2f4:	eor	r1, r1, r2
   1b2f8:	movw	r2, #25445	; 0x6365
   1b2fc:	movt	r2, #24942	; 0x616e
   1b300:	eor	r0, r0, r2
   1b304:	orr	r0, r0, r1
   1b308:	cmp	r0, #0
   1b30c:	bne	1b3f8 <main@@Base+0x77c8>
   1b310:	b	1b314 <main@@Base+0x76e4>
   1b314:	ldr	r0, [fp, #-8]
   1b318:	ldr	r1, [fp, #-12]
   1b31c:	str	r1, [sp, #28]
   1b320:	ldr	r2, [fp, #-16]
   1b324:	movw	r3, #8
   1b328:	bl	17c14 <main@@Base+0x3fe4>
   1b32c:	str	r0, [fp, #-12]
   1b330:	ldr	r0, [sp, #28]
   1b334:	ldr	r1, [fp, #-12]
   1b338:	cmp	r0, r1
   1b33c:	beq	1b3e0 <main@@Base+0x77b0>
   1b340:	movw	r0, #0
   1b344:	str	r0, [sp, #8]
   1b348:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b34c:	add	r0, r0, #4
   1b350:	str	r0, [sp, #32]
   1b354:	ldr	r0, [fp, #-8]
   1b358:	ldr	r1, [fp, #-12]
   1b35c:	str	r1, [sp, #28]
   1b360:	ldr	r2, [fp, #-16]
   1b364:	add	r3, sp, #8
   1b368:	bl	1c5d8 <main@@Base+0x89a8>
   1b36c:	str	r0, [fp, #-12]
   1b370:	ldr	r0, [sp, #28]
   1b374:	ldr	r1, [fp, #-12]
   1b378:	cmp	r0, r1
   1b37c:	bne	1b3d0 <main@@Base+0x77a0>
   1b380:	ldr	r0, [pc, #212]	; 1b45c <main@@Base+0x782c>
   1b384:	add	r3, pc, r0
   1b388:	ldr	r0, [fp, #-8]
   1b38c:	ldr	r1, [fp, #-12]
   1b390:	str	r1, [sp, #28]
   1b394:	ldr	r2, [fp, #-16]
   1b398:	add	ip, sp, #8
   1b39c:	str	ip, [sp]
   1b3a0:	bl	1c6b0 <main@@Base+0x8a80>
   1b3a4:	str	r0, [fp, #-12]
   1b3a8:	ldr	r0, [fp, #-12]
   1b3ac:	ldr	r1, [sp, #28]
   1b3b0:	cmp	r0, r1
   1b3b4:	beq	1b3c8 <main@@Base+0x7798>
   1b3b8:	ldr	r0, [fp, #-12]
   1b3bc:	ldr	r1, [fp, #-16]
   1b3c0:	cmp	r0, r1
   1b3c4:	bne	1b3cc <main@@Base+0x779c>
   1b3c8:	b	1b438 <main@@Base+0x7808>
   1b3cc:	b	1b3d0 <main@@Base+0x77a0>
   1b3d0:	ldr	r0, [sp, #32]
   1b3d4:	ldr	r1, [sp, #8]
   1b3d8:	bl	1c8d8 <main@@Base+0x8ca8>
   1b3dc:	b	1b3f4 <main@@Base+0x77c4>
   1b3e0:	ldr	r0, [fp, #-8]
   1b3e4:	ldr	r1, [fp, #-12]
   1b3e8:	ldr	r2, [fp, #-16]
   1b3ec:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1b3f0:	str	r0, [fp, #-12]
   1b3f4:	b	1b40c <main@@Base+0x77dc>
   1b3f8:	ldr	r0, [fp, #-8]
   1b3fc:	ldr	r1, [fp, #-12]
   1b400:	ldr	r2, [fp, #-16]
   1b404:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1b408:	str	r0, [fp, #-12]
   1b40c:	b	1b410 <main@@Base+0x77e0>
   1b410:	ldr	r0, [fp, #-8]
   1b414:	ldr	r1, [fp, #-12]
   1b418:	ldr	r2, [fp, #-16]
   1b41c:	sub	r3, fp, #24
   1b420:	bl	1cebc <main@@Base+0x928c>
   1b424:	str	r0, [fp, #-12]
   1b428:	b	1b1b4 <main@@Base+0x7584>
   1b42c:	ldr	r0, [fp, #-12]
   1b430:	str	r0, [fp, #-4]
   1b434:	b	1b450 <main@@Base+0x7820>
   1b438:	ldr	r0, [fp, #-8]
   1b43c:	ldr	r1, [fp, #-12]
   1b440:	ldr	r2, [fp, #-16]
   1b444:	movw	r3, #33	; 0x21
   1b448:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1b44c:	str	r0, [fp, #-4]
   1b450:	ldr	r0, [fp, #-4]
   1b454:	mov	sp, fp
   1b458:	pop	{fp, pc}
   1b45c:			; <UNDEFINED> instruction: 0x00028fb8
   1b460:	andeq	r9, r2, r0, asr #1
   1b464:	push	{fp, lr}
   1b468:	mov	fp, sp
   1b46c:	sub	sp, sp, #56	; 0x38
   1b470:	str	r0, [fp, #-8]
   1b474:	str	r1, [fp, #-12]
   1b478:	str	r2, [fp, #-16]
   1b47c:	str	r3, [fp, #-20]	; 0xffffffec
   1b480:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b484:	movw	r1, #0
   1b488:	str	r1, [r0]
   1b48c:	ldr	r0, [fp, #-8]
   1b490:	ldr	r0, [r0]
   1b494:	movw	r1, #3
   1b498:	bl	25df4 <flatcc_builder_start_table@@Base>
   1b49c:	cmp	r0, #0
   1b4a0:	beq	1b4a8 <main@@Base+0x7878>
   1b4a4:	b	1b818 <main@@Base+0x7be8>
   1b4a8:	ldr	r0, [fp, #-8]
   1b4ac:	ldr	r1, [fp, #-12]
   1b4b0:	ldr	r2, [fp, #-16]
   1b4b4:	sub	r3, fp, #24
   1b4b8:	bl	17a4c <main@@Base+0x3e1c>
   1b4bc:	str	r0, [fp, #-12]
   1b4c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4c4:	cmp	r0, #0
   1b4c8:	beq	1b7d8 <main@@Base+0x7ba8>
   1b4cc:	ldr	r0, [fp, #-8]
   1b4d0:	ldr	r1, [fp, #-12]
   1b4d4:	ldr	r2, [fp, #-16]
   1b4d8:	bl	17b30 <main@@Base+0x3f00>
   1b4dc:	str	r0, [fp, #-12]
   1b4e0:	ldr	r0, [fp, #-12]
   1b4e4:	ldr	r1, [fp, #-16]
   1b4e8:	bl	17bdc <main@@Base+0x3fac>
   1b4ec:	str	r1, [sp, #12]
   1b4f0:	str	r0, [sp, #8]
   1b4f4:	ldr	r0, [sp, #8]
   1b4f8:	ldr	r1, [sp, #12]
   1b4fc:	movw	r2, #65535	; 0xffff
   1b500:	movt	r2, #25955	; 0x6563
   1b504:	subs	r0, r2, r0
   1b508:	movw	r2, #29556	; 0x7374
   1b50c:	movt	r2, #28261	; 0x6e65
   1b510:	sbcs	r1, r2, r1
   1b514:	bcc	1b5f0 <main@@Base+0x79c0>
   1b518:	b	1b51c <main@@Base+0x78ec>
   1b51c:	ldr	r0, [sp, #12]
   1b520:	movw	r1, #29793	; 0x7461
   1b524:	movt	r1, #25697	; 0x6461
   1b528:	teq	r0, r1
   1b52c:	bne	1b5d8 <main@@Base+0x79a8>
   1b530:	b	1b534 <main@@Base+0x7904>
   1b534:	ldr	r0, [fp, #-8]
   1b538:	ldr	r1, [fp, #-12]
   1b53c:	str	r1, [sp, #16]
   1b540:	ldr	r2, [fp, #-16]
   1b544:	movw	r3, #4
   1b548:	bl	17c14 <main@@Base+0x3fe4>
   1b54c:	str	r0, [fp, #-12]
   1b550:	ldr	r0, [sp, #16]
   1b554:	ldr	r1, [fp, #-12]
   1b558:	cmp	r0, r1
   1b55c:	beq	1b5c0 <main@@Base+0x7990>
   1b560:	ldr	r0, [fp, #-8]
   1b564:	ldr	r1, [fp, #-12]
   1b568:	ldr	r2, [fp, #-16]
   1b56c:	add	r3, sp, #24
   1b570:	movw	ip, #0
   1b574:	str	ip, [sp]
   1b578:	bl	2d4ec <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b57c:	str	r0, [fp, #-12]
   1b580:	ldr	r0, [sp, #24]
   1b584:	cmp	r0, #0
   1b588:	beq	1b5ac <main@@Base+0x797c>
   1b58c:	ldr	r0, [fp, #-8]
   1b590:	ldr	r0, [r0]
   1b594:	movw	r1, #0
   1b598:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1b59c:	str	r0, [sp, #20]
   1b5a0:	movw	r1, #0
   1b5a4:	cmp	r0, r1
   1b5a8:	bne	1b5b0 <main@@Base+0x7980>
   1b5ac:	b	1b818 <main@@Base+0x7be8>
   1b5b0:	ldr	r0, [sp, #24]
   1b5b4:	ldr	r1, [sp, #20]
   1b5b8:	str	r0, [r1]
   1b5bc:	b	1b5d4 <main@@Base+0x79a4>
   1b5c0:	ldr	r0, [fp, #-8]
   1b5c4:	ldr	r1, [fp, #-12]
   1b5c8:	ldr	r2, [fp, #-16]
   1b5cc:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1b5d0:	str	r0, [fp, #-12]
   1b5d4:	b	1b5ec <main@@Base+0x79bc>
   1b5d8:	ldr	r0, [fp, #-8]
   1b5dc:	ldr	r1, [fp, #-12]
   1b5e0:	ldr	r2, [fp, #-16]
   1b5e4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1b5e8:	str	r0, [fp, #-12]
   1b5ec:	b	1b7bc <main@@Base+0x7b8c>
   1b5f0:	ldr	r0, [sp, #8]
   1b5f4:	ldr	r1, [sp, #12]
   1b5f8:	movw	r2, #29292	; 0x726c
   1b5fc:	movt	r2, #117	; 0x75
   1b600:	eor	r2, r2, r1, lsr #8
   1b604:	lsr	r0, r0, #8
   1b608:	orr	r0, r0, r1, lsl #24
   1b60c:	movw	r1, #29793	; 0x7461
   1b610:	movt	r1, #25697	; 0x6461
   1b614:	eor	r0, r0, r1
   1b618:	orr	r0, r0, r2
   1b61c:	cmp	r0, #0
   1b620:	bne	1b6cc <main@@Base+0x7a9c>
   1b624:	b	1b628 <main@@Base+0x79f8>
   1b628:	ldr	r0, [fp, #-8]
   1b62c:	ldr	r1, [fp, #-12]
   1b630:	str	r1, [sp, #16]
   1b634:	ldr	r2, [fp, #-16]
   1b638:	movw	r3, #7
   1b63c:	bl	17c14 <main@@Base+0x3fe4>
   1b640:	str	r0, [fp, #-12]
   1b644:	ldr	r0, [sp, #16]
   1b648:	ldr	r1, [fp, #-12]
   1b64c:	cmp	r0, r1
   1b650:	beq	1b6b4 <main@@Base+0x7a84>
   1b654:	ldr	r0, [fp, #-8]
   1b658:	ldr	r1, [fp, #-12]
   1b65c:	ldr	r2, [fp, #-16]
   1b660:	add	r3, sp, #24
   1b664:	movw	ip, #1
   1b668:	str	ip, [sp]
   1b66c:	bl	2d4ec <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b670:	str	r0, [fp, #-12]
   1b674:	ldr	r0, [sp, #24]
   1b678:	cmp	r0, #0
   1b67c:	beq	1b6a0 <main@@Base+0x7a70>
   1b680:	ldr	r0, [fp, #-8]
   1b684:	ldr	r0, [r0]
   1b688:	movw	r1, #1
   1b68c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1b690:	str	r0, [sp, #20]
   1b694:	movw	r1, #0
   1b698:	cmp	r0, r1
   1b69c:	bne	1b6a4 <main@@Base+0x7a74>
   1b6a0:	b	1b818 <main@@Base+0x7be8>
   1b6a4:	ldr	r0, [sp, #24]
   1b6a8:	ldr	r1, [sp, #20]
   1b6ac:	str	r0, [r1]
   1b6b0:	b	1b6c8 <main@@Base+0x7a98>
   1b6b4:	ldr	r0, [fp, #-8]
   1b6b8:	ldr	r1, [fp, #-12]
   1b6bc:	ldr	r2, [fp, #-16]
   1b6c0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1b6c4:	str	r0, [fp, #-12]
   1b6c8:	b	1b7b8 <main@@Base+0x7b88>
   1b6cc:	ldrh	r0, [sp, #10]
   1b6d0:	ldr	r1, [sp, #12]
   1b6d4:	movw	r2, #28261	; 0x6e65
   1b6d8:	eor	r2, r2, r1, lsr #16
   1b6dc:	orr	r0, r0, r1, lsl #16
   1b6e0:	movw	r1, #25956	; 0x6564
   1b6e4:	movt	r1, #29556	; 0x7374
   1b6e8:	eor	r0, r0, r1
   1b6ec:	orr	r0, r0, r2
   1b6f0:	cmp	r0, #0
   1b6f4:	bne	1b7a0 <main@@Base+0x7b70>
   1b6f8:	b	1b6fc <main@@Base+0x7acc>
   1b6fc:	ldr	r0, [fp, #-8]
   1b700:	ldr	r1, [fp, #-12]
   1b704:	str	r1, [sp, #16]
   1b708:	ldr	r2, [fp, #-16]
   1b70c:	movw	r3, #6
   1b710:	bl	17c14 <main@@Base+0x3fe4>
   1b714:	str	r0, [fp, #-12]
   1b718:	ldr	r0, [sp, #16]
   1b71c:	ldr	r1, [fp, #-12]
   1b720:	cmp	r0, r1
   1b724:	beq	1b788 <main@@Base+0x7b58>
   1b728:	ldr	r0, [fp, #-8]
   1b72c:	ldr	r1, [fp, #-12]
   1b730:	ldr	r2, [fp, #-16]
   1b734:	add	r3, sp, #24
   1b738:	movw	ip, #0
   1b73c:	str	ip, [sp]
   1b740:	bl	2d4ec <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b744:	str	r0, [fp, #-12]
   1b748:	ldr	r0, [sp, #24]
   1b74c:	cmp	r0, #0
   1b750:	beq	1b774 <main@@Base+0x7b44>
   1b754:	ldr	r0, [fp, #-8]
   1b758:	ldr	r0, [r0]
   1b75c:	movw	r1, #2
   1b760:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1b764:	str	r0, [sp, #20]
   1b768:	movw	r1, #0
   1b76c:	cmp	r0, r1
   1b770:	bne	1b778 <main@@Base+0x7b48>
   1b774:	b	1b818 <main@@Base+0x7be8>
   1b778:	ldr	r0, [sp, #24]
   1b77c:	ldr	r1, [sp, #20]
   1b780:	str	r0, [r1]
   1b784:	b	1b79c <main@@Base+0x7b6c>
   1b788:	ldr	r0, [fp, #-8]
   1b78c:	ldr	r1, [fp, #-12]
   1b790:	ldr	r2, [fp, #-16]
   1b794:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1b798:	str	r0, [fp, #-12]
   1b79c:	b	1b7b4 <main@@Base+0x7b84>
   1b7a0:	ldr	r0, [fp, #-8]
   1b7a4:	ldr	r1, [fp, #-12]
   1b7a8:	ldr	r2, [fp, #-16]
   1b7ac:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1b7b0:	str	r0, [fp, #-12]
   1b7b4:	b	1b7b8 <main@@Base+0x7b88>
   1b7b8:	b	1b7bc <main@@Base+0x7b8c>
   1b7bc:	ldr	r0, [fp, #-8]
   1b7c0:	ldr	r1, [fp, #-12]
   1b7c4:	ldr	r2, [fp, #-16]
   1b7c8:	sub	r3, fp, #24
   1b7cc:	bl	1cebc <main@@Base+0x928c>
   1b7d0:	str	r0, [fp, #-12]
   1b7d4:	b	1b4c0 <main@@Base+0x7890>
   1b7d8:	ldr	r0, [fp, #-8]
   1b7dc:	ldr	r0, [r0, #24]
   1b7e0:	cmp	r0, #0
   1b7e4:	beq	1b7ec <main@@Base+0x7bbc>
   1b7e8:	b	1b818 <main@@Base+0x7be8>
   1b7ec:	ldr	r0, [fp, #-8]
   1b7f0:	ldr	r0, [r0]
   1b7f4:	bl	26a5c <flatcc_builder_end_table@@Base>
   1b7f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b7fc:	str	r0, [r1]
   1b800:	cmp	r0, #0
   1b804:	bne	1b80c <main@@Base+0x7bdc>
   1b808:	b	1b818 <main@@Base+0x7be8>
   1b80c:	ldr	r0, [fp, #-12]
   1b810:	str	r0, [fp, #-4]
   1b814:	b	1b830 <main@@Base+0x7c00>
   1b818:	ldr	r0, [fp, #-8]
   1b81c:	ldr	r1, [fp, #-12]
   1b820:	ldr	r2, [fp, #-16]
   1b824:	movw	r3, #33	; 0x21
   1b828:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1b82c:	str	r0, [fp, #-4]
   1b830:	ldr	r0, [fp, #-4]
   1b834:	mov	sp, fp
   1b838:	pop	{fp, pc}
   1b83c:	push	{fp, lr}
   1b840:	mov	fp, sp
   1b844:	sub	sp, sp, #72	; 0x48
   1b848:	str	r0, [fp, #-8]
   1b84c:	str	r1, [fp, #-12]
   1b850:	str	r2, [fp, #-16]
   1b854:	str	r3, [fp, #-20]	; 0xffffffec
   1b858:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b85c:	movw	r1, #0
   1b860:	str	r1, [r0]
   1b864:	ldr	r0, [fp, #-8]
   1b868:	ldr	r0, [r0]
   1b86c:	movw	r1, #3
   1b870:	bl	25df4 <flatcc_builder_start_table@@Base>
   1b874:	cmp	r0, #0
   1b878:	beq	1b880 <main@@Base+0x7c50>
   1b87c:	b	1bcd4 <main@@Base+0x80a4>
   1b880:	ldr	r0, [fp, #-8]
   1b884:	ldr	r1, [fp, #-12]
   1b888:	ldr	r2, [fp, #-16]
   1b88c:	sub	r3, fp, #24
   1b890:	bl	17a4c <main@@Base+0x3e1c>
   1b894:	str	r0, [fp, #-12]
   1b898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b89c:	cmp	r0, #0
   1b8a0:	beq	1bc94 <main@@Base+0x8064>
   1b8a4:	ldr	r0, [fp, #-8]
   1b8a8:	ldr	r1, [fp, #-12]
   1b8ac:	ldr	r2, [fp, #-16]
   1b8b0:	bl	17b30 <main@@Base+0x3f00>
   1b8b4:	str	r0, [fp, #-12]
   1b8b8:	ldr	r0, [fp, #-12]
   1b8bc:	ldr	r1, [fp, #-16]
   1b8c0:	bl	17bdc <main@@Base+0x3fac>
   1b8c4:	str	r1, [sp, #28]
   1b8c8:	str	r0, [sp, #24]
   1b8cc:	ldr	r0, [sp, #28]
   1b8d0:	movw	r1, #65535	; 0xffff
   1b8d4:	movt	r1, #26979	; 0x6963
   1b8d8:	cmp	r0, r1
   1b8dc:	bhi	1ba50 <main@@Base+0x7e20>
   1b8e0:	b	1b8e4 <main@@Base+0x7cb4>
   1b8e4:	ldrb	r0, [sp, #27]
   1b8e8:	ldr	r1, [sp, #28]
   1b8ec:	movw	r2, #30062	; 0x756e
   1b8f0:	movt	r2, #25455	; 0x636f
   1b8f4:	eor	r1, r1, r2
   1b8f8:	eor	r0, r0, #116	; 0x74
   1b8fc:	orr	r0, r1, r0, lsl #24
   1b900:	cmp	r0, #0
   1b904:	bne	1ba38 <main@@Base+0x7e08>
   1b908:	b	1b90c <main@@Base+0x7cdc>
   1b90c:	ldr	r0, [fp, #-8]
   1b910:	ldr	r1, [fp, #-12]
   1b914:	str	r1, [sp, #32]
   1b918:	ldr	r2, [fp, #-16]
   1b91c:	movw	r3, #5
   1b920:	bl	17c14 <main@@Base+0x3fe4>
   1b924:	str	r0, [fp, #-12]
   1b928:	ldr	r0, [sp, #32]
   1b92c:	ldr	r1, [fp, #-12]
   1b930:	cmp	r0, r1
   1b934:	beq	1ba20 <main@@Base+0x7df0>
   1b938:	movw	r0, #0
   1b93c:	strh	r0, [sp, #22]
   1b940:	ldr	r0, [fp, #-8]
   1b944:	ldr	r1, [fp, #-12]
   1b948:	str	r1, [sp, #32]
   1b94c:	ldr	r2, [fp, #-16]
   1b950:	add	r3, sp, #22
   1b954:	bl	22718 <main@@Base+0xeae8>
   1b958:	str	r0, [fp, #-12]
   1b95c:	ldr	r0, [sp, #32]
   1b960:	ldr	r1, [fp, #-12]
   1b964:	cmp	r0, r1
   1b968:	bne	1b9bc <main@@Base+0x7d8c>
   1b96c:	ldr	r0, [pc, #904]	; 1bcfc <main@@Base+0x80cc>
   1b970:	add	r3, pc, r0
   1b974:	ldr	r0, [fp, #-8]
   1b978:	ldr	r1, [fp, #-12]
   1b97c:	str	r1, [sp, #32]
   1b980:	ldr	r2, [fp, #-16]
   1b984:	add	ip, sp, #22
   1b988:	str	ip, [sp]
   1b98c:	bl	227f4 <main@@Base+0xebc4>
   1b990:	str	r0, [fp, #-12]
   1b994:	ldr	r0, [fp, #-12]
   1b998:	ldr	r1, [sp, #32]
   1b99c:	cmp	r0, r1
   1b9a0:	beq	1b9b4 <main@@Base+0x7d84>
   1b9a4:	ldr	r0, [fp, #-12]
   1b9a8:	ldr	r1, [fp, #-16]
   1b9ac:	cmp	r0, r1
   1b9b0:	bne	1b9b8 <main@@Base+0x7d88>
   1b9b4:	b	1bcd4 <main@@Base+0x80a4>
   1b9b8:	b	1b9bc <main@@Base+0x7d8c>
   1b9bc:	ldrh	r0, [sp, #22]
   1b9c0:	cmp	r0, #0
   1b9c4:	bne	1b9dc <main@@Base+0x7dac>
   1b9c8:	ldr	r0, [fp, #-8]
   1b9cc:	ldr	r0, [r0, #8]
   1b9d0:	and	r0, r0, #2
   1b9d4:	cmp	r0, #0
   1b9d8:	beq	1ba1c <main@@Base+0x7dec>
   1b9dc:	ldr	r0, [fp, #-8]
   1b9e0:	ldr	r0, [r0]
   1b9e4:	movw	r1, #2
   1b9e8:	str	r1, [sp, #4]
   1b9ec:	ldr	r2, [sp, #4]
   1b9f0:	movw	r3, #2
   1b9f4:	uxth	r3, r3
   1b9f8:	bl	27698 <flatcc_builder_table_add@@Base>
   1b9fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1ba00:	movw	r1, #0
   1ba04:	cmp	r0, r1
   1ba08:	bne	1ba10 <main@@Base+0x7de0>
   1ba0c:	b	1bcd4 <main@@Base+0x80a4>
   1ba10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ba14:	ldrh	r1, [sp, #22]
   1ba18:	bl	22a20 <main@@Base+0xedf0>
   1ba1c:	b	1ba34 <main@@Base+0x7e04>
   1ba20:	ldr	r0, [fp, #-8]
   1ba24:	ldr	r1, [fp, #-12]
   1ba28:	ldr	r2, [fp, #-16]
   1ba2c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1ba30:	str	r0, [fp, #-12]
   1ba34:	b	1ba4c <main@@Base+0x7e1c>
   1ba38:	ldr	r0, [fp, #-8]
   1ba3c:	ldr	r1, [fp, #-12]
   1ba40:	ldr	r2, [fp, #-16]
   1ba44:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1ba48:	str	r0, [fp, #-12]
   1ba4c:	b	1bc78 <main@@Base+0x8048>
   1ba50:	ldr	r0, [sp, #28]
   1ba54:	bic	r0, r0, #255	; 0xff
   1ba58:	movw	r1, #27648	; 0x6c00
   1ba5c:	movt	r1, #30305	; 0x7661
   1ba60:	teq	r0, r1
   1ba64:	bne	1bba8 <main@@Base+0x7f78>
   1ba68:	b	1ba6c <main@@Base+0x7e3c>
   1ba6c:	ldr	r0, [fp, #-8]
   1ba70:	ldr	r1, [fp, #-12]
   1ba74:	str	r1, [sp, #32]
   1ba78:	ldr	r2, [fp, #-16]
   1ba7c:	movw	r3, #3
   1ba80:	bl	17c14 <main@@Base+0x3fe4>
   1ba84:	str	r0, [fp, #-12]
   1ba88:	ldr	r0, [sp, #32]
   1ba8c:	ldr	r1, [fp, #-12]
   1ba90:	cmp	r0, r1
   1ba94:	beq	1bb90 <main@@Base+0x7f60>
   1ba98:	mov	r0, #0
   1ba9c:	str	r0, [sp, #12]
   1baa0:	str	r0, [sp, #8]
   1baa4:	ldr	r0, [fp, #-8]
   1baa8:	ldr	r1, [fp, #-12]
   1baac:	str	r1, [sp, #32]
   1bab0:	ldr	r2, [fp, #-16]
   1bab4:	add	r3, sp, #8
   1bab8:	bl	1c288 <main@@Base+0x8658>
   1babc:	str	r0, [fp, #-12]
   1bac0:	ldr	r0, [sp, #32]
   1bac4:	ldr	r1, [fp, #-12]
   1bac8:	cmp	r0, r1
   1bacc:	bne	1bb20 <main@@Base+0x7ef0>
   1bad0:	ldr	r0, [pc, #544]	; 1bcf8 <main@@Base+0x80c8>
   1bad4:	add	r3, pc, r0
   1bad8:	ldr	r0, [fp, #-8]
   1badc:	ldr	r1, [fp, #-12]
   1bae0:	str	r1, [sp, #32]
   1bae4:	ldr	r2, [fp, #-16]
   1bae8:	add	ip, sp, #8
   1baec:	str	ip, [sp]
   1baf0:	bl	1c360 <main@@Base+0x8730>
   1baf4:	str	r0, [fp, #-12]
   1baf8:	ldr	r0, [fp, #-12]
   1bafc:	ldr	r1, [sp, #32]
   1bb00:	cmp	r0, r1
   1bb04:	beq	1bb18 <main@@Base+0x7ee8>
   1bb08:	ldr	r0, [fp, #-12]
   1bb0c:	ldr	r1, [fp, #-16]
   1bb10:	cmp	r0, r1
   1bb14:	bne	1bb1c <main@@Base+0x7eec>
   1bb18:	b	1bcd4 <main@@Base+0x80a4>
   1bb1c:	b	1bb20 <main@@Base+0x7ef0>
   1bb20:	ldr	r0, [sp, #8]
   1bb24:	ldr	r1, [sp, #12]
   1bb28:	orr	r0, r0, r1
   1bb2c:	cmp	r0, #0
   1bb30:	bne	1bb4c <main@@Base+0x7f1c>
   1bb34:	b	1bb38 <main@@Base+0x7f08>
   1bb38:	ldr	r0, [fp, #-8]
   1bb3c:	ldr	r0, [r0, #8]
   1bb40:	and	r0, r0, #2
   1bb44:	cmp	r0, #0
   1bb48:	beq	1bb8c <main@@Base+0x7f5c>
   1bb4c:	ldr	r0, [fp, #-8]
   1bb50:	ldr	r0, [r0]
   1bb54:	movw	r1, #1
   1bb58:	movw	r2, #8
   1bb5c:	movw	r3, #8
   1bb60:	uxth	r3, r3
   1bb64:	bl	27698 <flatcc_builder_table_add@@Base>
   1bb68:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb6c:	movw	r1, #0
   1bb70:	cmp	r0, r1
   1bb74:	bne	1bb7c <main@@Base+0x7f4c>
   1bb78:	b	1bcd4 <main@@Base+0x80a4>
   1bb7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb80:	ldr	r2, [sp, #8]
   1bb84:	ldr	r3, [sp, #12]
   1bb88:	bl	1c5a0 <main@@Base+0x8970>
   1bb8c:	b	1bba4 <main@@Base+0x7f74>
   1bb90:	ldr	r0, [fp, #-8]
   1bb94:	ldr	r1, [fp, #-12]
   1bb98:	ldr	r2, [fp, #-16]
   1bb9c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1bba0:	str	r0, [fp, #-12]
   1bba4:	b	1bc74 <main@@Base+0x8044>
   1bba8:	ldrh	r0, [sp, #30]
   1bbac:	movw	r1, #0
   1bbb0:	movt	r1, #26980	; 0x6964
   1bbb4:	teq	r1, r0, lsl #16
   1bbb8:	bne	1bc5c <main@@Base+0x802c>
   1bbbc:	b	1bbc0 <main@@Base+0x7f90>
   1bbc0:	ldr	r0, [fp, #-8]
   1bbc4:	ldr	r1, [fp, #-12]
   1bbc8:	str	r1, [sp, #32]
   1bbcc:	ldr	r2, [fp, #-16]
   1bbd0:	movw	r3, #2
   1bbd4:	bl	17c14 <main@@Base+0x3fe4>
   1bbd8:	str	r0, [fp, #-12]
   1bbdc:	ldr	r0, [sp, #32]
   1bbe0:	ldr	r1, [fp, #-12]
   1bbe4:	cmp	r0, r1
   1bbe8:	beq	1bc44 <main@@Base+0x8014>
   1bbec:	ldr	r0, [fp, #-8]
   1bbf0:	ldr	r1, [fp, #-12]
   1bbf4:	ldr	r2, [fp, #-16]
   1bbf8:	sub	r3, fp, #32
   1bbfc:	bl	2dd04 <flatcc_json_parser_build_string@@Base>
   1bc00:	str	r0, [fp, #-12]
   1bc04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc08:	cmp	r0, #0
   1bc0c:	beq	1bc30 <main@@Base+0x8000>
   1bc10:	ldr	r0, [fp, #-8]
   1bc14:	ldr	r0, [r0]
   1bc18:	movw	r1, #0
   1bc1c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1bc20:	str	r0, [sp, #36]	; 0x24
   1bc24:	movw	r1, #0
   1bc28:	cmp	r0, r1
   1bc2c:	bne	1bc34 <main@@Base+0x8004>
   1bc30:	b	1bcd4 <main@@Base+0x80a4>
   1bc34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc38:	ldr	r1, [sp, #36]	; 0x24
   1bc3c:	str	r0, [r1]
   1bc40:	b	1bc58 <main@@Base+0x8028>
   1bc44:	ldr	r0, [fp, #-8]
   1bc48:	ldr	r1, [fp, #-12]
   1bc4c:	ldr	r2, [fp, #-16]
   1bc50:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1bc54:	str	r0, [fp, #-12]
   1bc58:	b	1bc70 <main@@Base+0x8040>
   1bc5c:	ldr	r0, [fp, #-8]
   1bc60:	ldr	r1, [fp, #-12]
   1bc64:	ldr	r2, [fp, #-16]
   1bc68:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1bc6c:	str	r0, [fp, #-12]
   1bc70:	b	1bc74 <main@@Base+0x8044>
   1bc74:	b	1bc78 <main@@Base+0x8048>
   1bc78:	ldr	r0, [fp, #-8]
   1bc7c:	ldr	r1, [fp, #-12]
   1bc80:	ldr	r2, [fp, #-16]
   1bc84:	sub	r3, fp, #24
   1bc88:	bl	1cebc <main@@Base+0x928c>
   1bc8c:	str	r0, [fp, #-12]
   1bc90:	b	1b898 <main@@Base+0x7c68>
   1bc94:	ldr	r0, [fp, #-8]
   1bc98:	ldr	r0, [r0, #24]
   1bc9c:	cmp	r0, #0
   1bca0:	beq	1bca8 <main@@Base+0x8078>
   1bca4:	b	1bcd4 <main@@Base+0x80a4>
   1bca8:	ldr	r0, [fp, #-8]
   1bcac:	ldr	r0, [r0]
   1bcb0:	bl	26a5c <flatcc_builder_end_table@@Base>
   1bcb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bcb8:	str	r0, [r1]
   1bcbc:	cmp	r0, #0
   1bcc0:	bne	1bcc8 <main@@Base+0x8098>
   1bcc4:	b	1bcd4 <main@@Base+0x80a4>
   1bcc8:	ldr	r0, [fp, #-12]
   1bccc:	str	r0, [fp, #-4]
   1bcd0:	b	1bcec <main@@Base+0x80bc>
   1bcd4:	ldr	r0, [fp, #-8]
   1bcd8:	ldr	r1, [fp, #-12]
   1bcdc:	ldr	r2, [fp, #-16]
   1bce0:	movw	r3, #33	; 0x21
   1bce4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1bce8:	str	r0, [fp, #-4]
   1bcec:	ldr	r0, [fp, #-4]
   1bcf0:	mov	sp, fp
   1bcf4:	pop	{fp, pc}
   1bcf8:	andeq	r8, r2, r0, lsl #17
   1bcfc:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1bd00:	push	{r4, r5, r6, sl, fp, lr}
   1bd04:	add	fp, sp, #16
   1bd08:	sub	sp, sp, #88	; 0x58
   1bd0c:	ldr	ip, [fp, #8]
   1bd10:	vldr	s0, [pc, #532]	; 1bf2c <main@@Base+0x82fc>
   1bd14:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd18:	str	r1, [fp, #-28]	; 0xffffffe4
   1bd1c:	str	r2, [fp, #-32]	; 0xffffffe0
   1bd20:	str	r3, [fp, #-36]	; 0xffffffdc
   1bd24:	vstr	s0, [fp, #-48]	; 0xffffffd0
   1bd28:	movw	r0, #0
   1bd2c:	str	r0, [sp, #36]	; 0x24
   1bd30:	ldr	r0, [fp, #8]
   1bd34:	vstr	s0, [r0]
   1bd38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bd40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bd44:	str	ip, [sp, #32]
   1bd48:	bl	1e600 <main@@Base+0xa9d0>
   1bd4c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bd50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bd54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bd58:	cmp	r0, r1
   1bd5c:	bne	1bd6c <main@@Base+0x813c>
   1bd60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bd64:	str	r0, [fp, #-20]	; 0xffffffec
   1bd68:	b	1bf20 <main@@Base+0x82f0>
   1bd6c:	b	1bd70 <main@@Base+0x8140>
   1bd70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bd74:	str	r0, [fp, #-40]	; 0xffffffd8
   1bd78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bd7c:	ldr	r0, [r0]
   1bd80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bd88:	str	r2, [fp, #-44]	; 0xffffffd4
   1bd8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd90:	str	r0, [sp, #28]
   1bd94:	mov	r0, r1
   1bd98:	mov	r1, r2
   1bd9c:	mov	r2, r3
   1bda0:	add	r3, sp, #44	; 0x2c
   1bda4:	add	ip, sp, #48	; 0x30
   1bda8:	str	ip, [sp]
   1bdac:	add	ip, sp, #40	; 0x28
   1bdb0:	str	ip, [sp, #4]
   1bdb4:	ldr	ip, [sp, #28]
   1bdb8:	blx	ip
   1bdbc:	str	r0, [fp, #-28]	; 0xffffffe4
   1bdc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bdc4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bdc8:	cmp	r0, r1
   1bdcc:	bne	1bddc <main@@Base+0x81ac>
   1bdd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bdd4:	str	r0, [fp, #-20]	; 0xffffffec
   1bdd8:	b	1bf20 <main@@Base+0x82f0>
   1bddc:	b	1bde0 <main@@Base+0x81b0>
   1bde0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bde4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bde8:	cmp	r0, r1
   1bdec:	movw	r0, #0
   1bdf0:	str	r0, [sp, #24]
   1bdf4:	bne	1be1c <main@@Base+0x81ec>
   1bdf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bdfc:	add	r1, r0, #4
   1be00:	str	r1, [fp, #-40]	; 0xffffffd8
   1be04:	ldr	r0, [r0, #4]
   1be08:	movw	r1, #0
   1be0c:	cmp	r0, r1
   1be10:	movw	r0, #0
   1be14:	movne	r0, #1
   1be18:	str	r0, [sp, #24]
   1be1c:	ldr	r0, [sp, #24]
   1be20:	tst	r0, #1
   1be24:	bne	1bd78 <main@@Base+0x8148>
   1be28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1be2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1be30:	cmp	r0, r1
   1be34:	bne	1be54 <main@@Base+0x8224>
   1be38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1be40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1be44:	movw	r3, #23
   1be48:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1be4c:	str	r0, [fp, #-20]	; 0xffffffec
   1be50:	b	1bf20 <main@@Base+0x82f0>
   1be54:	ldr	r0, [sp, #36]	; 0x24
   1be58:	add	r1, r0, #1
   1be5c:	str	r1, [sp, #36]	; 0x24
   1be60:	cmp	r0, #0
   1be64:	beq	1be94 <main@@Base+0x8264>
   1be68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be6c:	ldr	r0, [r0, #12]
   1be70:	cmp	r0, #0
   1be74:	beq	1be94 <main@@Base+0x8264>
   1be78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1be80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1be84:	movw	r3, #14
   1be88:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1be8c:	str	r0, [fp, #-20]	; 0xffffffec
   1be90:	b	1bf20 <main@@Base+0x82f0>
   1be94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be98:	mov	r1, r0
   1be9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bea4:	ldr	ip, [sp, #44]	; 0x2c
   1bea8:	ldr	lr, [sp, #48]	; 0x30
   1beac:	ldr	r4, [sp, #52]	; 0x34
   1beb0:	mov	r5, sp
   1beb4:	sub	r6, fp, #48	; 0x30
   1beb8:	str	r6, [r5, #8]
   1bebc:	str	r4, [r5, #4]
   1bec0:	str	lr, [r5]
   1bec4:	str	r0, [sp, #20]
   1bec8:	mov	r0, r2
   1becc:	str	r1, [sp, #16]
   1bed0:	mov	r1, r3
   1bed4:	ldr	r2, [sp, #20]
   1bed8:	mov	r3, ip
   1bedc:	bl	22de8 <main@@Base+0xf1b8>
   1bee0:	ldr	r1, [sp, #16]
   1bee4:	cmp	r1, r0
   1bee8:	bne	1bef8 <main@@Base+0x82c8>
   1beec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bef0:	str	r0, [fp, #-20]	; 0xffffffec
   1bef4:	b	1bf20 <main@@Base+0x82f0>
   1bef8:	vldr	s0, [fp, #-48]	; 0xffffffd0
   1befc:	ldr	r0, [fp, #8]
   1bf00:	vldr	s2, [r0]
   1bf04:	vadd.f32	s0, s2, s0
   1bf08:	vstr	s0, [r0]
   1bf0c:	ldr	r0, [sp, #40]	; 0x28
   1bf10:	cmp	r0, #0
   1bf14:	bne	1bd70 <main@@Base+0x8140>
   1bf18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf1c:	str	r0, [fp, #-20]	; 0xffffffec
   1bf20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bf24:	sub	sp, fp, #16
   1bf28:	pop	{r4, r5, r6, sl, fp, pc}
   1bf2c:	andeq	r0, r0, r0
   1bf30:	push	{fp, lr}
   1bf34:	mov	fp, sp
   1bf38:	sub	sp, sp, #8
   1bf3c:	str	r0, [sp, #4]
   1bf40:	vstr	s0, [sp]
   1bf44:	vldr	s0, [sp]
   1bf48:	bl	22e6c <main@@Base+0xf23c>
   1bf4c:	ldr	r0, [sp, #4]
   1bf50:	vstr	s0, [r0]
   1bf54:	mov	sp, fp
   1bf58:	pop	{fp, pc}
   1bf5c:	push	{r4, r5, fp, lr}
   1bf60:	add	fp, sp, #8
   1bf64:	sub	sp, sp, #56	; 0x38
   1bf68:	str	r0, [fp, #-16]
   1bf6c:	str	r1, [fp, #-20]	; 0xffffffec
   1bf70:	str	r2, [fp, #-24]	; 0xffffffe8
   1bf74:	str	r3, [fp, #-28]	; 0xffffffe4
   1bf78:	mov	r0, #0
   1bf7c:	str	r0, [sp, #28]
   1bf80:	str	r0, [sp, #24]
   1bf84:	movw	r0, #0
   1bf88:	str	r0, [sp, #20]
   1bf8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bf90:	str	r1, [sp, #16]
   1bf94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bf98:	str	r0, [r1]
   1bf9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bfa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bfa4:	cmp	r0, r1
   1bfa8:	bne	1bfb8 <main@@Base+0x8388>
   1bfac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bfb0:	str	r0, [fp, #-12]
   1bfb4:	b	1c028 <main@@Base+0x83f8>
   1bfb8:	ldr	r0, [fp, #-16]
   1bfbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bfc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bfc4:	add	r3, sp, #20
   1bfc8:	add	ip, sp, #24
   1bfcc:	str	ip, [sp]
   1bfd0:	bl	2d2cc <flatcc_json_parser_integer@@Base>
   1bfd4:	str	r0, [fp, #-20]	; 0xffffffec
   1bfd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bfdc:	ldr	r1, [sp, #16]
   1bfe0:	cmp	r0, r1
   1bfe4:	beq	1c020 <main@@Base+0x83f0>
   1bfe8:	ldr	r0, [fp, #-16]
   1bfec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bff0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bff4:	ldr	r3, [sp, #20]
   1bff8:	ldr	ip, [sp, #24]
   1bffc:	ldr	lr, [sp, #28]
   1c000:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1c004:	mov	r5, sp
   1c008:	str	r4, [r5, #8]
   1c00c:	str	lr, [r5, #4]
   1c010:	str	ip, [r5]
   1c014:	bl	22e90 <main@@Base+0xf260>
   1c018:	str	r0, [fp, #-12]
   1c01c:	b	1c028 <main@@Base+0x83f8>
   1c020:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c024:	str	r0, [fp, #-12]
   1c028:	ldr	r0, [fp, #-12]
   1c02c:	sub	sp, fp, #8
   1c030:	pop	{r4, r5, fp, pc}
   1c034:	push	{r4, r5, r6, sl, fp, lr}
   1c038:	add	fp, sp, #16
   1c03c:	sub	sp, sp, #88	; 0x58
   1c040:	ldr	ip, [fp, #8]
   1c044:	str	r0, [fp, #-24]	; 0xffffffe8
   1c048:	str	r1, [fp, #-28]	; 0xffffffe4
   1c04c:	str	r2, [fp, #-32]	; 0xffffffe0
   1c050:	str	r3, [fp, #-36]	; 0xffffffdc
   1c054:	movw	r0, #0
   1c058:	str	r0, [fp, #-48]	; 0xffffffd0
   1c05c:	str	r0, [sp, #36]	; 0x24
   1c060:	ldr	r1, [fp, #8]
   1c064:	str	r0, [r1]
   1c068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c06c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c070:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c074:	str	ip, [sp, #32]
   1c078:	bl	1e600 <main@@Base+0xa9d0>
   1c07c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c080:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c084:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c088:	cmp	r0, r1
   1c08c:	bne	1c09c <main@@Base+0x846c>
   1c090:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c094:	str	r0, [fp, #-20]	; 0xffffffec
   1c098:	b	1c250 <main@@Base+0x8620>
   1c09c:	b	1c0a0 <main@@Base+0x8470>
   1c0a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c0a4:	str	r0, [fp, #-40]	; 0xffffffd8
   1c0a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c0ac:	ldr	r0, [r0]
   1c0b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c0b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c0b8:	str	r2, [fp, #-44]	; 0xffffffd4
   1c0bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c0c0:	str	r0, [sp, #28]
   1c0c4:	mov	r0, r1
   1c0c8:	mov	r1, r2
   1c0cc:	mov	r2, r3
   1c0d0:	add	r3, sp, #44	; 0x2c
   1c0d4:	add	ip, sp, #48	; 0x30
   1c0d8:	str	ip, [sp]
   1c0dc:	add	ip, sp, #40	; 0x28
   1c0e0:	str	ip, [sp, #4]
   1c0e4:	ldr	ip, [sp, #28]
   1c0e8:	blx	ip
   1c0ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1c0f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c0f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c0f8:	cmp	r0, r1
   1c0fc:	bne	1c10c <main@@Base+0x84dc>
   1c100:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c104:	str	r0, [fp, #-20]	; 0xffffffec
   1c108:	b	1c250 <main@@Base+0x8620>
   1c10c:	b	1c110 <main@@Base+0x84e0>
   1c110:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c114:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c118:	cmp	r0, r1
   1c11c:	movw	r0, #0
   1c120:	str	r0, [sp, #24]
   1c124:	bne	1c14c <main@@Base+0x851c>
   1c128:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c12c:	add	r1, r0, #4
   1c130:	str	r1, [fp, #-40]	; 0xffffffd8
   1c134:	ldr	r0, [r0, #4]
   1c138:	movw	r1, #0
   1c13c:	cmp	r0, r1
   1c140:	movw	r0, #0
   1c144:	movne	r0, #1
   1c148:	str	r0, [sp, #24]
   1c14c:	ldr	r0, [sp, #24]
   1c150:	tst	r0, #1
   1c154:	bne	1c0a8 <main@@Base+0x8478>
   1c158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c15c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c160:	cmp	r0, r1
   1c164:	bne	1c184 <main@@Base+0x8554>
   1c168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c16c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c170:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c174:	movw	r3, #23
   1c178:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1c17c:	str	r0, [fp, #-20]	; 0xffffffec
   1c180:	b	1c250 <main@@Base+0x8620>
   1c184:	ldr	r0, [sp, #36]	; 0x24
   1c188:	add	r1, r0, #1
   1c18c:	str	r1, [sp, #36]	; 0x24
   1c190:	cmp	r0, #0
   1c194:	beq	1c1c4 <main@@Base+0x8594>
   1c198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c19c:	ldr	r0, [r0, #12]
   1c1a0:	cmp	r0, #0
   1c1a4:	beq	1c1c4 <main@@Base+0x8594>
   1c1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c1b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c1b4:	movw	r3, #14
   1c1b8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1c1bc:	str	r0, [fp, #-20]	; 0xffffffec
   1c1c0:	b	1c250 <main@@Base+0x8620>
   1c1c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c1c8:	mov	r1, r0
   1c1cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c1d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c1d4:	ldr	ip, [sp, #44]	; 0x2c
   1c1d8:	ldr	lr, [sp, #48]	; 0x30
   1c1dc:	ldr	r4, [sp, #52]	; 0x34
   1c1e0:	mov	r5, sp
   1c1e4:	sub	r6, fp, #48	; 0x30
   1c1e8:	str	r6, [r5, #8]
   1c1ec:	str	r4, [r5, #4]
   1c1f0:	str	lr, [r5]
   1c1f4:	str	r0, [sp, #20]
   1c1f8:	mov	r0, r2
   1c1fc:	str	r1, [sp, #16]
   1c200:	mov	r1, r3
   1c204:	ldr	r2, [sp, #20]
   1c208:	mov	r3, ip
   1c20c:	bl	22e90 <main@@Base+0xf260>
   1c210:	ldr	r1, [sp, #16]
   1c214:	cmp	r1, r0
   1c218:	bne	1c228 <main@@Base+0x85f8>
   1c21c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c220:	str	r0, [fp, #-20]	; 0xffffffec
   1c224:	b	1c250 <main@@Base+0x8620>
   1c228:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c22c:	ldr	r1, [fp, #8]
   1c230:	ldr	r2, [r1]
   1c234:	add	r0, r2, r0
   1c238:	str	r0, [r1]
   1c23c:	ldr	r0, [sp, #40]	; 0x28
   1c240:	cmp	r0, #0
   1c244:	bne	1c0a0 <main@@Base+0x8470>
   1c248:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c24c:	str	r0, [fp, #-20]	; 0xffffffec
   1c250:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c254:	sub	sp, fp, #16
   1c258:	pop	{r4, r5, r6, sl, fp, pc}
   1c25c:	push	{fp, lr}
   1c260:	mov	fp, sp
   1c264:	sub	sp, sp, #8
   1c268:	str	r0, [sp, #4]
   1c26c:	str	r1, [sp]
   1c270:	ldr	r0, [sp]
   1c274:	bl	22f68 <main@@Base+0xf338>
   1c278:	ldr	r1, [sp, #4]
   1c27c:	str	r0, [r1]
   1c280:	mov	sp, fp
   1c284:	pop	{fp, pc}
   1c288:	push	{r4, r5, fp, lr}
   1c28c:	add	fp, sp, #8
   1c290:	sub	sp, sp, #56	; 0x38
   1c294:	str	r0, [fp, #-16]
   1c298:	str	r1, [fp, #-20]	; 0xffffffec
   1c29c:	str	r2, [fp, #-24]	; 0xffffffe8
   1c2a0:	str	r3, [fp, #-28]	; 0xffffffe4
   1c2a4:	mov	r0, #0
   1c2a8:	str	r0, [sp, #28]
   1c2ac:	str	r0, [sp, #24]
   1c2b0:	str	r0, [sp, #20]
   1c2b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c2b8:	str	r1, [sp, #16]
   1c2bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c2c0:	str	r0, [r1, #4]
   1c2c4:	str	r0, [r1]
   1c2c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c2cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c2d0:	cmp	r0, r1
   1c2d4:	bne	1c2e4 <main@@Base+0x86b4>
   1c2d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c2dc:	str	r0, [fp, #-12]
   1c2e0:	b	1c354 <main@@Base+0x8724>
   1c2e4:	ldr	r0, [fp, #-16]
   1c2e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c2ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c2f0:	add	r3, sp, #20
   1c2f4:	add	ip, sp, #24
   1c2f8:	str	ip, [sp]
   1c2fc:	bl	2d2cc <flatcc_json_parser_integer@@Base>
   1c300:	str	r0, [fp, #-20]	; 0xffffffec
   1c304:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c308:	ldr	r1, [sp, #16]
   1c30c:	cmp	r0, r1
   1c310:	beq	1c34c <main@@Base+0x871c>
   1c314:	ldr	r0, [fp, #-16]
   1c318:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c31c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c320:	ldr	r3, [sp, #20]
   1c324:	ldr	ip, [sp, #24]
   1c328:	ldr	lr, [sp, #28]
   1c32c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1c330:	mov	r5, sp
   1c334:	str	r4, [r5, #8]
   1c338:	str	lr, [r5, #4]
   1c33c:	str	ip, [r5]
   1c340:	bl	22f7c <main@@Base+0xf34c>
   1c344:	str	r0, [fp, #-12]
   1c348:	b	1c354 <main@@Base+0x8724>
   1c34c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c350:	str	r0, [fp, #-12]
   1c354:	ldr	r0, [fp, #-12]
   1c358:	sub	sp, fp, #8
   1c35c:	pop	{r4, r5, fp, pc}
   1c360:	push	{r4, r5, r6, sl, fp, lr}
   1c364:	add	fp, sp, #16
   1c368:	sub	sp, sp, #96	; 0x60
   1c36c:	ldr	ip, [fp, #8]
   1c370:	str	r0, [fp, #-24]	; 0xffffffe8
   1c374:	str	r1, [fp, #-28]	; 0xffffffe4
   1c378:	str	r2, [fp, #-32]	; 0xffffffe0
   1c37c:	str	r3, [fp, #-36]	; 0xffffffdc
   1c380:	mov	r0, #0
   1c384:	str	r0, [sp, #60]	; 0x3c
   1c388:	str	r0, [sp, #56]	; 0x38
   1c38c:	str	r0, [sp, #36]	; 0x24
   1c390:	ldr	r1, [fp, #8]
   1c394:	str	r0, [r1, #4]
   1c398:	str	r0, [r1]
   1c39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c3a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c3a8:	str	ip, [sp, #32]
   1c3ac:	bl	1e600 <main@@Base+0xa9d0>
   1c3b0:	str	r0, [fp, #-28]	; 0xffffffe4
   1c3b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c3b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c3bc:	cmp	r0, r1
   1c3c0:	bne	1c3d0 <main@@Base+0x87a0>
   1c3c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c3c8:	str	r0, [fp, #-20]	; 0xffffffec
   1c3cc:	b	1c594 <main@@Base+0x8964>
   1c3d0:	b	1c3d4 <main@@Base+0x87a4>
   1c3d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c3d8:	str	r0, [fp, #-40]	; 0xffffffd8
   1c3dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c3e0:	ldr	r0, [r0]
   1c3e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c3e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c3ec:	str	r2, [fp, #-44]	; 0xffffffd4
   1c3f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c3f4:	str	r0, [sp, #28]
   1c3f8:	mov	r0, r1
   1c3fc:	mov	r1, r2
   1c400:	mov	r2, r3
   1c404:	add	r3, sp, #44	; 0x2c
   1c408:	add	ip, sp, #48	; 0x30
   1c40c:	str	ip, [sp]
   1c410:	add	ip, sp, #40	; 0x28
   1c414:	str	ip, [sp, #4]
   1c418:	ldr	ip, [sp, #28]
   1c41c:	blx	ip
   1c420:	str	r0, [fp, #-28]	; 0xffffffe4
   1c424:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c428:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c42c:	cmp	r0, r1
   1c430:	bne	1c440 <main@@Base+0x8810>
   1c434:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c438:	str	r0, [fp, #-20]	; 0xffffffec
   1c43c:	b	1c594 <main@@Base+0x8964>
   1c440:	b	1c444 <main@@Base+0x8814>
   1c444:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c448:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c44c:	cmp	r0, r1
   1c450:	movw	r0, #0
   1c454:	str	r0, [sp, #24]
   1c458:	bne	1c480 <main@@Base+0x8850>
   1c45c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c460:	add	r1, r0, #4
   1c464:	str	r1, [fp, #-40]	; 0xffffffd8
   1c468:	ldr	r0, [r0, #4]
   1c46c:	movw	r1, #0
   1c470:	cmp	r0, r1
   1c474:	movw	r0, #0
   1c478:	movne	r0, #1
   1c47c:	str	r0, [sp, #24]
   1c480:	ldr	r0, [sp, #24]
   1c484:	tst	r0, #1
   1c488:	bne	1c3dc <main@@Base+0x87ac>
   1c48c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c490:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c494:	cmp	r0, r1
   1c498:	bne	1c4b8 <main@@Base+0x8888>
   1c49c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c4a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c4a8:	movw	r3, #23
   1c4ac:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1c4b0:	str	r0, [fp, #-20]	; 0xffffffec
   1c4b4:	b	1c594 <main@@Base+0x8964>
   1c4b8:	ldr	r0, [sp, #36]	; 0x24
   1c4bc:	add	r1, r0, #1
   1c4c0:	str	r1, [sp, #36]	; 0x24
   1c4c4:	cmp	r0, #0
   1c4c8:	beq	1c4f8 <main@@Base+0x88c8>
   1c4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4d0:	ldr	r0, [r0, #12]
   1c4d4:	cmp	r0, #0
   1c4d8:	beq	1c4f8 <main@@Base+0x88c8>
   1c4dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c4e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c4e8:	movw	r3, #14
   1c4ec:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1c4f0:	str	r0, [fp, #-20]	; 0xffffffec
   1c4f4:	b	1c594 <main@@Base+0x8964>
   1c4f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c4fc:	mov	r1, r0
   1c500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c508:	ldr	ip, [sp, #44]	; 0x2c
   1c50c:	ldr	lr, [sp, #48]	; 0x30
   1c510:	ldr	r4, [sp, #52]	; 0x34
   1c514:	mov	r5, sp
   1c518:	add	r6, sp, #56	; 0x38
   1c51c:	str	r6, [r5, #8]
   1c520:	str	r4, [r5, #4]
   1c524:	str	lr, [r5]
   1c528:	str	r0, [sp, #20]
   1c52c:	mov	r0, r2
   1c530:	str	r1, [sp, #16]
   1c534:	mov	r1, r3
   1c538:	ldr	r2, [sp, #20]
   1c53c:	mov	r3, ip
   1c540:	bl	22f7c <main@@Base+0xf34c>
   1c544:	ldr	r1, [sp, #16]
   1c548:	cmp	r1, r0
   1c54c:	bne	1c55c <main@@Base+0x892c>
   1c550:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c554:	str	r0, [fp, #-20]	; 0xffffffec
   1c558:	b	1c594 <main@@Base+0x8964>
   1c55c:	ldr	r0, [sp, #56]	; 0x38
   1c560:	ldr	r1, [sp, #60]	; 0x3c
   1c564:	ldr	r2, [fp, #8]
   1c568:	ldr	r3, [r2]
   1c56c:	ldr	ip, [r2, #4]
   1c570:	adds	r0, r3, r0
   1c574:	adc	r1, ip, r1
   1c578:	str	r0, [r2]
   1c57c:	str	r1, [r2, #4]
   1c580:	ldr	r0, [sp, #40]	; 0x28
   1c584:	cmp	r0, #0
   1c588:	bne	1c3d4 <main@@Base+0x87a4>
   1c58c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c590:	str	r0, [fp, #-20]	; 0xffffffec
   1c594:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c598:	sub	sp, fp, #16
   1c59c:	pop	{r4, r5, r6, sl, fp, pc}
   1c5a0:	push	{fp, lr}
   1c5a4:	mov	fp, sp
   1c5a8:	sub	sp, sp, #16
   1c5ac:	str	r0, [fp, #-4]
   1c5b0:	str	r3, [sp, #4]
   1c5b4:	str	r2, [sp]
   1c5b8:	ldr	r0, [sp]
   1c5bc:	ldr	r1, [sp, #4]
   1c5c0:	bl	23060 <main@@Base+0xf430>
   1c5c4:	ldr	r2, [fp, #-4]
   1c5c8:	str	r1, [r2, #4]
   1c5cc:	str	r0, [r2]
   1c5d0:	mov	sp, fp
   1c5d4:	pop	{fp, pc}
   1c5d8:	push	{r4, r5, fp, lr}
   1c5dc:	add	fp, sp, #8
   1c5e0:	sub	sp, sp, #56	; 0x38
   1c5e4:	str	r0, [fp, #-16]
   1c5e8:	str	r1, [fp, #-20]	; 0xffffffec
   1c5ec:	str	r2, [fp, #-24]	; 0xffffffe8
   1c5f0:	str	r3, [fp, #-28]	; 0xffffffe4
   1c5f4:	mov	r0, #0
   1c5f8:	str	r0, [sp, #28]
   1c5fc:	str	r0, [sp, #24]
   1c600:	movw	r0, #0
   1c604:	str	r0, [sp, #20]
   1c608:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c60c:	str	r1, [sp, #16]
   1c610:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c614:	str	r0, [r1]
   1c618:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c61c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c620:	cmp	r0, r1
   1c624:	bne	1c634 <main@@Base+0x8a04>
   1c628:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c62c:	str	r0, [fp, #-12]
   1c630:	b	1c6a4 <main@@Base+0x8a74>
   1c634:	ldr	r0, [fp, #-16]
   1c638:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c63c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c640:	add	r3, sp, #20
   1c644:	add	ip, sp, #24
   1c648:	str	ip, [sp]
   1c64c:	bl	2d2cc <flatcc_json_parser_integer@@Base>
   1c650:	str	r0, [fp, #-20]	; 0xffffffec
   1c654:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c658:	ldr	r1, [sp, #16]
   1c65c:	cmp	r0, r1
   1c660:	beq	1c69c <main@@Base+0x8a6c>
   1c664:	ldr	r0, [fp, #-16]
   1c668:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c66c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c670:	ldr	r3, [sp, #20]
   1c674:	ldr	ip, [sp, #24]
   1c678:	ldr	lr, [sp, #28]
   1c67c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1c680:	mov	r5, sp
   1c684:	str	r4, [r5, #8]
   1c688:	str	lr, [r5, #4]
   1c68c:	str	ip, [r5]
   1c690:	bl	2307c <main@@Base+0xf44c>
   1c694:	str	r0, [fp, #-12]
   1c698:	b	1c6a4 <main@@Base+0x8a74>
   1c69c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6a0:	str	r0, [fp, #-12]
   1c6a4:	ldr	r0, [fp, #-12]
   1c6a8:	sub	sp, fp, #8
   1c6ac:	pop	{r4, r5, fp, pc}
   1c6b0:	push	{r4, r5, r6, sl, fp, lr}
   1c6b4:	add	fp, sp, #16
   1c6b8:	sub	sp, sp, #88	; 0x58
   1c6bc:	ldr	ip, [fp, #8]
   1c6c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c6c4:	str	r1, [fp, #-28]	; 0xffffffe4
   1c6c8:	str	r2, [fp, #-32]	; 0xffffffe0
   1c6cc:	str	r3, [fp, #-36]	; 0xffffffdc
   1c6d0:	movw	r0, #0
   1c6d4:	str	r0, [fp, #-48]	; 0xffffffd0
   1c6d8:	str	r0, [sp, #36]	; 0x24
   1c6dc:	ldr	r1, [fp, #8]
   1c6e0:	str	r0, [r1]
   1c6e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c6ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c6f0:	str	ip, [sp, #32]
   1c6f4:	bl	1e600 <main@@Base+0xa9d0>
   1c6f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1c6fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c700:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c704:	cmp	r0, r1
   1c708:	bne	1c718 <main@@Base+0x8ae8>
   1c70c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c710:	str	r0, [fp, #-20]	; 0xffffffec
   1c714:	b	1c8cc <main@@Base+0x8c9c>
   1c718:	b	1c71c <main@@Base+0x8aec>
   1c71c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c720:	str	r0, [fp, #-40]	; 0xffffffd8
   1c724:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c728:	ldr	r0, [r0]
   1c72c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c730:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c734:	str	r2, [fp, #-44]	; 0xffffffd4
   1c738:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c73c:	str	r0, [sp, #28]
   1c740:	mov	r0, r1
   1c744:	mov	r1, r2
   1c748:	mov	r2, r3
   1c74c:	add	r3, sp, #44	; 0x2c
   1c750:	add	ip, sp, #48	; 0x30
   1c754:	str	ip, [sp]
   1c758:	add	ip, sp, #40	; 0x28
   1c75c:	str	ip, [sp, #4]
   1c760:	ldr	ip, [sp, #28]
   1c764:	blx	ip
   1c768:	str	r0, [fp, #-28]	; 0xffffffe4
   1c76c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c770:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c774:	cmp	r0, r1
   1c778:	bne	1c788 <main@@Base+0x8b58>
   1c77c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c780:	str	r0, [fp, #-20]	; 0xffffffec
   1c784:	b	1c8cc <main@@Base+0x8c9c>
   1c788:	b	1c78c <main@@Base+0x8b5c>
   1c78c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c790:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c794:	cmp	r0, r1
   1c798:	movw	r0, #0
   1c79c:	str	r0, [sp, #24]
   1c7a0:	bne	1c7c8 <main@@Base+0x8b98>
   1c7a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c7a8:	add	r1, r0, #4
   1c7ac:	str	r1, [fp, #-40]	; 0xffffffd8
   1c7b0:	ldr	r0, [r0, #4]
   1c7b4:	movw	r1, #0
   1c7b8:	cmp	r0, r1
   1c7bc:	movw	r0, #0
   1c7c0:	movne	r0, #1
   1c7c4:	str	r0, [sp, #24]
   1c7c8:	ldr	r0, [sp, #24]
   1c7cc:	tst	r0, #1
   1c7d0:	bne	1c724 <main@@Base+0x8af4>
   1c7d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c7d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c7dc:	cmp	r0, r1
   1c7e0:	bne	1c800 <main@@Base+0x8bd0>
   1c7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c7ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c7f0:	movw	r3, #23
   1c7f4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1c7f8:	str	r0, [fp, #-20]	; 0xffffffec
   1c7fc:	b	1c8cc <main@@Base+0x8c9c>
   1c800:	ldr	r0, [sp, #36]	; 0x24
   1c804:	add	r1, r0, #1
   1c808:	str	r1, [sp, #36]	; 0x24
   1c80c:	cmp	r0, #0
   1c810:	beq	1c840 <main@@Base+0x8c10>
   1c814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c818:	ldr	r0, [r0, #12]
   1c81c:	cmp	r0, #0
   1c820:	beq	1c840 <main@@Base+0x8c10>
   1c824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c82c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c830:	movw	r3, #14
   1c834:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1c838:	str	r0, [fp, #-20]	; 0xffffffec
   1c83c:	b	1c8cc <main@@Base+0x8c9c>
   1c840:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c844:	mov	r1, r0
   1c848:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c84c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c850:	ldr	ip, [sp, #44]	; 0x2c
   1c854:	ldr	lr, [sp, #48]	; 0x30
   1c858:	ldr	r4, [sp, #52]	; 0x34
   1c85c:	mov	r5, sp
   1c860:	sub	r6, fp, #48	; 0x30
   1c864:	str	r6, [r5, #8]
   1c868:	str	r4, [r5, #4]
   1c86c:	str	lr, [r5]
   1c870:	str	r0, [sp, #20]
   1c874:	mov	r0, r2
   1c878:	str	r1, [sp, #16]
   1c87c:	mov	r1, r3
   1c880:	ldr	r2, [sp, #20]
   1c884:	mov	r3, ip
   1c888:	bl	2307c <main@@Base+0xf44c>
   1c88c:	ldr	r1, [sp, #16]
   1c890:	cmp	r1, r0
   1c894:	bne	1c8a4 <main@@Base+0x8c74>
   1c898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c89c:	str	r0, [fp, #-20]	; 0xffffffec
   1c8a0:	b	1c8cc <main@@Base+0x8c9c>
   1c8a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c8a8:	ldr	r1, [fp, #8]
   1c8ac:	ldr	r2, [r1]
   1c8b0:	add	r0, r2, r0
   1c8b4:	str	r0, [r1]
   1c8b8:	ldr	r0, [sp, #40]	; 0x28
   1c8bc:	cmp	r0, #0
   1c8c0:	bne	1c71c <main@@Base+0x8aec>
   1c8c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c8c8:	str	r0, [fp, #-20]	; 0xffffffec
   1c8cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c8d0:	sub	sp, fp, #16
   1c8d4:	pop	{r4, r5, r6, sl, fp, pc}
   1c8d8:	push	{fp, lr}
   1c8dc:	mov	fp, sp
   1c8e0:	sub	sp, sp, #8
   1c8e4:	str	r0, [sp, #4]
   1c8e8:	str	r1, [sp]
   1c8ec:	ldr	r0, [sp]
   1c8f0:	bl	23120 <main@@Base+0xf4f0>
   1c8f4:	ldr	r1, [sp, #4]
   1c8f8:	str	r0, [r1]
   1c8fc:	mov	sp, fp
   1c900:	pop	{fp, pc}
   1c904:	push	{r4, r5, fp, lr}
   1c908:	add	fp, sp, #8
   1c90c:	sub	sp, sp, #56	; 0x38
   1c910:	str	r0, [fp, #-16]
   1c914:	str	r1, [fp, #-20]	; 0xffffffec
   1c918:	str	r2, [fp, #-24]	; 0xffffffe8
   1c91c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c920:	mov	r0, #0
   1c924:	str	r0, [sp, #28]
   1c928:	str	r0, [sp, #24]
   1c92c:	str	r0, [sp, #20]
   1c930:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c934:	str	r1, [sp, #16]
   1c938:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c93c:	str	r0, [r1, #4]
   1c940:	str	r0, [r1]
   1c944:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c948:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c94c:	cmp	r0, r1
   1c950:	bne	1c960 <main@@Base+0x8d30>
   1c954:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c958:	str	r0, [fp, #-12]
   1c95c:	b	1c9d0 <main@@Base+0x8da0>
   1c960:	ldr	r0, [fp, #-16]
   1c964:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c968:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c96c:	add	r3, sp, #20
   1c970:	add	ip, sp, #24
   1c974:	str	ip, [sp]
   1c978:	bl	2d2cc <flatcc_json_parser_integer@@Base>
   1c97c:	str	r0, [fp, #-20]	; 0xffffffec
   1c980:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c984:	ldr	r1, [sp, #16]
   1c988:	cmp	r0, r1
   1c98c:	beq	1c9c8 <main@@Base+0x8d98>
   1c990:	ldr	r0, [fp, #-16]
   1c994:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c998:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c99c:	ldr	r3, [sp, #20]
   1c9a0:	ldr	ip, [sp, #24]
   1c9a4:	ldr	lr, [sp, #28]
   1c9a8:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1c9ac:	mov	r5, sp
   1c9b0:	str	r4, [r5, #8]
   1c9b4:	str	lr, [r5, #4]
   1c9b8:	str	ip, [r5]
   1c9bc:	bl	23134 <main@@Base+0xf504>
   1c9c0:	str	r0, [fp, #-12]
   1c9c4:	b	1c9d0 <main@@Base+0x8da0>
   1c9c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c9cc:	str	r0, [fp, #-12]
   1c9d0:	ldr	r0, [fp, #-12]
   1c9d4:	sub	sp, fp, #8
   1c9d8:	pop	{r4, r5, fp, pc}
   1c9dc:	push	{r4, r5, r6, sl, fp, lr}
   1c9e0:	add	fp, sp, #16
   1c9e4:	sub	sp, sp, #96	; 0x60
   1c9e8:	ldr	ip, [fp, #8]
   1c9ec:	str	r0, [fp, #-24]	; 0xffffffe8
   1c9f0:	str	r1, [fp, #-28]	; 0xffffffe4
   1c9f4:	str	r2, [fp, #-32]	; 0xffffffe0
   1c9f8:	str	r3, [fp, #-36]	; 0xffffffdc
   1c9fc:	mov	r0, #0
   1ca00:	str	r0, [sp, #60]	; 0x3c
   1ca04:	str	r0, [sp, #56]	; 0x38
   1ca08:	str	r0, [sp, #36]	; 0x24
   1ca0c:	ldr	r1, [fp, #8]
   1ca10:	str	r0, [r1, #4]
   1ca14:	str	r0, [r1]
   1ca18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ca20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ca24:	str	ip, [sp, #32]
   1ca28:	bl	1e600 <main@@Base+0xa9d0>
   1ca2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ca34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ca38:	cmp	r0, r1
   1ca3c:	bne	1ca4c <main@@Base+0x8e1c>
   1ca40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ca44:	str	r0, [fp, #-20]	; 0xffffffec
   1ca48:	b	1cc10 <main@@Base+0x8fe0>
   1ca4c:	b	1ca50 <main@@Base+0x8e20>
   1ca50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ca54:	str	r0, [fp, #-40]	; 0xffffffd8
   1ca58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ca5c:	ldr	r0, [r0]
   1ca60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ca68:	str	r2, [fp, #-44]	; 0xffffffd4
   1ca6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca70:	str	r0, [sp, #28]
   1ca74:	mov	r0, r1
   1ca78:	mov	r1, r2
   1ca7c:	mov	r2, r3
   1ca80:	add	r3, sp, #44	; 0x2c
   1ca84:	add	ip, sp, #48	; 0x30
   1ca88:	str	ip, [sp]
   1ca8c:	add	ip, sp, #40	; 0x28
   1ca90:	str	ip, [sp, #4]
   1ca94:	ldr	ip, [sp, #28]
   1ca98:	blx	ip
   1ca9c:	str	r0, [fp, #-28]	; 0xffffffe4
   1caa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1caa4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1caa8:	cmp	r0, r1
   1caac:	bne	1cabc <main@@Base+0x8e8c>
   1cab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cab4:	str	r0, [fp, #-20]	; 0xffffffec
   1cab8:	b	1cc10 <main@@Base+0x8fe0>
   1cabc:	b	1cac0 <main@@Base+0x8e90>
   1cac0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cac4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cac8:	cmp	r0, r1
   1cacc:	movw	r0, #0
   1cad0:	str	r0, [sp, #24]
   1cad4:	bne	1cafc <main@@Base+0x8ecc>
   1cad8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cadc:	add	r1, r0, #4
   1cae0:	str	r1, [fp, #-40]	; 0xffffffd8
   1cae4:	ldr	r0, [r0, #4]
   1cae8:	movw	r1, #0
   1caec:	cmp	r0, r1
   1caf0:	movw	r0, #0
   1caf4:	movne	r0, #1
   1caf8:	str	r0, [sp, #24]
   1cafc:	ldr	r0, [sp, #24]
   1cb00:	tst	r0, #1
   1cb04:	bne	1ca58 <main@@Base+0x8e28>
   1cb08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cb0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb10:	cmp	r0, r1
   1cb14:	bne	1cb34 <main@@Base+0x8f04>
   1cb18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cb24:	movw	r3, #23
   1cb28:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1cb2c:	str	r0, [fp, #-20]	; 0xffffffec
   1cb30:	b	1cc10 <main@@Base+0x8fe0>
   1cb34:	ldr	r0, [sp, #36]	; 0x24
   1cb38:	add	r1, r0, #1
   1cb3c:	str	r1, [sp, #36]	; 0x24
   1cb40:	cmp	r0, #0
   1cb44:	beq	1cb74 <main@@Base+0x8f44>
   1cb48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb4c:	ldr	r0, [r0, #12]
   1cb50:	cmp	r0, #0
   1cb54:	beq	1cb74 <main@@Base+0x8f44>
   1cb58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cb64:	movw	r3, #14
   1cb68:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1cb6c:	str	r0, [fp, #-20]	; 0xffffffec
   1cb70:	b	1cc10 <main@@Base+0x8fe0>
   1cb74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cb78:	mov	r1, r0
   1cb7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cb80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cb84:	ldr	ip, [sp, #44]	; 0x2c
   1cb88:	ldr	lr, [sp, #48]	; 0x30
   1cb8c:	ldr	r4, [sp, #52]	; 0x34
   1cb90:	mov	r5, sp
   1cb94:	add	r6, sp, #56	; 0x38
   1cb98:	str	r6, [r5, #8]
   1cb9c:	str	r4, [r5, #4]
   1cba0:	str	lr, [r5]
   1cba4:	str	r0, [sp, #20]
   1cba8:	mov	r0, r2
   1cbac:	str	r1, [sp, #16]
   1cbb0:	mov	r1, r3
   1cbb4:	ldr	r2, [sp, #20]
   1cbb8:	mov	r3, ip
   1cbbc:	bl	23134 <main@@Base+0xf504>
   1cbc0:	ldr	r1, [sp, #16]
   1cbc4:	cmp	r1, r0
   1cbc8:	bne	1cbd8 <main@@Base+0x8fa8>
   1cbcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cbd0:	str	r0, [fp, #-20]	; 0xffffffec
   1cbd4:	b	1cc10 <main@@Base+0x8fe0>
   1cbd8:	ldr	r0, [sp, #56]	; 0x38
   1cbdc:	ldr	r1, [sp, #60]	; 0x3c
   1cbe0:	ldr	r2, [fp, #8]
   1cbe4:	ldr	r3, [r2]
   1cbe8:	ldr	ip, [r2, #4]
   1cbec:	adds	r0, r3, r0
   1cbf0:	adc	r1, ip, r1
   1cbf4:	str	r0, [r2]
   1cbf8:	str	r1, [r2, #4]
   1cbfc:	ldr	r0, [sp, #40]	; 0x28
   1cc00:	cmp	r0, #0
   1cc04:	bne	1ca50 <main@@Base+0x8e20>
   1cc08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cc0c:	str	r0, [fp, #-20]	; 0xffffffec
   1cc10:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cc14:	sub	sp, fp, #16
   1cc18:	pop	{r4, r5, r6, sl, fp, pc}
   1cc1c:	push	{fp, lr}
   1cc20:	mov	fp, sp
   1cc24:	sub	sp, sp, #16
   1cc28:	str	r0, [fp, #-4]
   1cc2c:	str	r3, [sp, #4]
   1cc30:	str	r2, [sp]
   1cc34:	ldr	r0, [sp]
   1cc38:	ldr	r1, [sp, #4]
   1cc3c:	bl	231b4 <main@@Base+0xf584>
   1cc40:	ldr	r2, [fp, #-4]
   1cc44:	str	r1, [r2, #4]
   1cc48:	str	r0, [r2]
   1cc4c:	mov	sp, fp
   1cc50:	pop	{fp, pc}
   1cc54:	nop	{0}
   1cc58:	push	{r4, r5, r6, sl, fp, lr}
   1cc5c:	add	fp, sp, #16
   1cc60:	sub	sp, sp, #96	; 0x60
   1cc64:	ldr	ip, [fp, #8]
   1cc68:	vldr	d16, [pc, #536]	; 1ce88 <main@@Base+0x9258>
   1cc6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cc70:	str	r1, [fp, #-28]	; 0xffffffe4
   1cc74:	str	r2, [fp, #-32]	; 0xffffffe0
   1cc78:	str	r3, [fp, #-36]	; 0xffffffdc
   1cc7c:	vstr	d16, [sp, #56]	; 0x38
   1cc80:	movw	r0, #0
   1cc84:	str	r0, [sp, #36]	; 0x24
   1cc88:	ldr	r0, [fp, #8]
   1cc8c:	vstr	d16, [r0]
   1cc90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cc9c:	str	ip, [sp, #32]
   1cca0:	bl	1e600 <main@@Base+0xa9d0>
   1cca4:	str	r0, [fp, #-28]	; 0xffffffe4
   1cca8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ccac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ccb0:	cmp	r0, r1
   1ccb4:	bne	1ccc4 <main@@Base+0x9094>
   1ccb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ccbc:	str	r0, [fp, #-20]	; 0xffffffec
   1ccc0:	b	1ce78 <main@@Base+0x9248>
   1ccc4:	b	1ccc8 <main@@Base+0x9098>
   1ccc8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cccc:	str	r0, [fp, #-40]	; 0xffffffd8
   1ccd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ccd4:	ldr	r0, [r0]
   1ccd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ccdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cce0:	str	r2, [fp, #-44]	; 0xffffffd4
   1cce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cce8:	str	r0, [sp, #28]
   1ccec:	mov	r0, r1
   1ccf0:	mov	r1, r2
   1ccf4:	mov	r2, r3
   1ccf8:	add	r3, sp, #44	; 0x2c
   1ccfc:	add	ip, sp, #48	; 0x30
   1cd00:	str	ip, [sp]
   1cd04:	add	ip, sp, #40	; 0x28
   1cd08:	str	ip, [sp, #4]
   1cd0c:	ldr	ip, [sp, #28]
   1cd10:	blx	ip
   1cd14:	str	r0, [fp, #-28]	; 0xffffffe4
   1cd18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cd20:	cmp	r0, r1
   1cd24:	bne	1cd34 <main@@Base+0x9104>
   1cd28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd2c:	str	r0, [fp, #-20]	; 0xffffffec
   1cd30:	b	1ce78 <main@@Base+0x9248>
   1cd34:	b	1cd38 <main@@Base+0x9108>
   1cd38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cd40:	cmp	r0, r1
   1cd44:	movw	r0, #0
   1cd48:	str	r0, [sp, #24]
   1cd4c:	bne	1cd74 <main@@Base+0x9144>
   1cd50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cd54:	add	r1, r0, #4
   1cd58:	str	r1, [fp, #-40]	; 0xffffffd8
   1cd5c:	ldr	r0, [r0, #4]
   1cd60:	movw	r1, #0
   1cd64:	cmp	r0, r1
   1cd68:	movw	r0, #0
   1cd6c:	movne	r0, #1
   1cd70:	str	r0, [sp, #24]
   1cd74:	ldr	r0, [sp, #24]
   1cd78:	tst	r0, #1
   1cd7c:	bne	1ccd0 <main@@Base+0x90a0>
   1cd80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cd84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd88:	cmp	r0, r1
   1cd8c:	bne	1cdac <main@@Base+0x917c>
   1cd90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cd9c:	movw	r3, #23
   1cda0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1cda4:	str	r0, [fp, #-20]	; 0xffffffec
   1cda8:	b	1ce78 <main@@Base+0x9248>
   1cdac:	ldr	r0, [sp, #36]	; 0x24
   1cdb0:	add	r1, r0, #1
   1cdb4:	str	r1, [sp, #36]	; 0x24
   1cdb8:	cmp	r0, #0
   1cdbc:	beq	1cdec <main@@Base+0x91bc>
   1cdc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdc4:	ldr	r0, [r0, #12]
   1cdc8:	cmp	r0, #0
   1cdcc:	beq	1cdec <main@@Base+0x91bc>
   1cdd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cdd8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cddc:	movw	r3, #14
   1cde0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1cde4:	str	r0, [fp, #-20]	; 0xffffffec
   1cde8:	b	1ce78 <main@@Base+0x9248>
   1cdec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cdf0:	mov	r1, r0
   1cdf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cdf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cdfc:	ldr	ip, [sp, #44]	; 0x2c
   1ce00:	ldr	lr, [sp, #48]	; 0x30
   1ce04:	ldr	r4, [sp, #52]	; 0x34
   1ce08:	mov	r5, sp
   1ce0c:	add	r6, sp, #56	; 0x38
   1ce10:	str	r6, [r5, #8]
   1ce14:	str	r4, [r5, #4]
   1ce18:	str	lr, [r5]
   1ce1c:	str	r0, [sp, #20]
   1ce20:	mov	r0, r2
   1ce24:	str	r1, [sp, #16]
   1ce28:	mov	r1, r3
   1ce2c:	ldr	r2, [sp, #20]
   1ce30:	mov	r3, ip
   1ce34:	bl	231d0 <main@@Base+0xf5a0>
   1ce38:	ldr	r1, [sp, #16]
   1ce3c:	cmp	r1, r0
   1ce40:	bne	1ce50 <main@@Base+0x9220>
   1ce44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce48:	str	r0, [fp, #-20]	; 0xffffffec
   1ce4c:	b	1ce78 <main@@Base+0x9248>
   1ce50:	vldr	d16, [sp, #56]	; 0x38
   1ce54:	ldr	r0, [fp, #8]
   1ce58:	vldr	d17, [r0]
   1ce5c:	vadd.f64	d16, d17, d16
   1ce60:	vstr	d16, [r0]
   1ce64:	ldr	r0, [sp, #40]	; 0x28
   1ce68:	cmp	r0, #0
   1ce6c:	bne	1ccc8 <main@@Base+0x9098>
   1ce70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce74:	str	r0, [fp, #-20]	; 0xffffffec
   1ce78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ce7c:	sub	sp, fp, #16
   1ce80:	pop	{r4, r5, r6, sl, fp, pc}
   1ce84:	nop	{0}
	...
   1ce90:	push	{fp, lr}
   1ce94:	mov	fp, sp
   1ce98:	sub	sp, sp, #16
   1ce9c:	str	r0, [fp, #-4]
   1cea0:	vstr	d0, [sp]
   1cea4:	vldr	d0, [sp]
   1cea8:	bl	23254 <main@@Base+0xf624>
   1ceac:	ldr	r0, [fp, #-4]
   1ceb0:	vstr	d0, [r0]
   1ceb4:	mov	sp, fp
   1ceb8:	pop	{fp, pc}
   1cebc:	push	{fp, lr}
   1cec0:	mov	fp, sp
   1cec4:	sub	sp, sp, #24
   1cec8:	str	r0, [fp, #-8]
   1cecc:	str	r1, [sp, #12]
   1ced0:	str	r2, [sp, #8]
   1ced4:	str	r3, [sp, #4]
   1ced8:	ldr	r0, [fp, #-8]
   1cedc:	ldr	r1, [sp, #12]
   1cee0:	ldr	r2, [sp, #8]
   1cee4:	bl	1d020 <main@@Base+0x93f0>
   1cee8:	str	r0, [sp, #12]
   1ceec:	ldr	r0, [sp, #12]
   1cef0:	ldr	r1, [sp, #8]
   1cef4:	cmp	r0, r1
   1cef8:	bne	1cf14 <main@@Base+0x92e4>
   1cefc:	ldr	r0, [sp, #4]
   1cf00:	movw	r1, #0
   1cf04:	str	r1, [r0]
   1cf08:	ldr	r0, [sp, #12]
   1cf0c:	str	r0, [fp, #-4]
   1cf10:	b	1d014 <main@@Base+0x93e4>
   1cf14:	ldr	r0, [sp, #12]
   1cf18:	ldrb	r0, [r0]
   1cf1c:	cmp	r0, #44	; 0x2c
   1cf20:	beq	1cf78 <main@@Base+0x9348>
   1cf24:	ldr	r0, [sp, #4]
   1cf28:	movw	r1, #0
   1cf2c:	str	r1, [r0]
   1cf30:	ldr	r0, [sp, #12]
   1cf34:	ldrb	r0, [r0]
   1cf38:	cmp	r0, #125	; 0x7d
   1cf3c:	beq	1cf5c <main@@Base+0x932c>
   1cf40:	ldr	r0, [fp, #-8]
   1cf44:	ldr	r1, [sp, #12]
   1cf48:	ldr	r2, [sp, #8]
   1cf4c:	movw	r3, #10
   1cf50:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1cf54:	str	r0, [fp, #-4]
   1cf58:	b	1d014 <main@@Base+0x93e4>
   1cf5c:	ldr	r0, [fp, #-8]
   1cf60:	ldr	r1, [sp, #12]
   1cf64:	add	r1, r1, #1
   1cf68:	ldr	r2, [sp, #8]
   1cf6c:	bl	1d020 <main@@Base+0x93f0>
   1cf70:	str	r0, [fp, #-4]
   1cf74:	b	1d014 <main@@Base+0x93e4>
   1cf78:	ldr	r0, [fp, #-8]
   1cf7c:	ldr	r1, [sp, #12]
   1cf80:	add	r1, r1, #1
   1cf84:	ldr	r2, [sp, #8]
   1cf88:	bl	1d020 <main@@Base+0x93f0>
   1cf8c:	str	r0, [sp, #12]
   1cf90:	ldr	r0, [sp, #12]
   1cf94:	ldr	r1, [sp, #8]
   1cf98:	cmp	r0, r1
   1cf9c:	bne	1cfc8 <main@@Base+0x9398>
   1cfa0:	ldr	r0, [sp, #4]
   1cfa4:	movw	r1, #0
   1cfa8:	str	r1, [r0]
   1cfac:	ldr	r0, [fp, #-8]
   1cfb0:	ldr	r1, [sp, #12]
   1cfb4:	ldr	r2, [sp, #8]
   1cfb8:	movw	r3, #10
   1cfbc:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1cfc0:	str	r0, [fp, #-4]
   1cfc4:	b	1d014 <main@@Base+0x93e4>
   1cfc8:	ldr	r0, [sp, #12]
   1cfcc:	ldrb	r0, [r0]
   1cfd0:	cmp	r0, #125	; 0x7d
   1cfd4:	bne	1d000 <main@@Base+0x93d0>
   1cfd8:	ldr	r0, [sp, #4]
   1cfdc:	movw	r1, #0
   1cfe0:	str	r1, [r0]
   1cfe4:	ldr	r0, [fp, #-8]
   1cfe8:	ldr	r1, [sp, #12]
   1cfec:	add	r1, r1, #1
   1cff0:	ldr	r2, [sp, #8]
   1cff4:	bl	1d020 <main@@Base+0x93f0>
   1cff8:	str	r0, [fp, #-4]
   1cffc:	b	1d014 <main@@Base+0x93e4>
   1d000:	ldr	r0, [sp, #4]
   1d004:	movw	r1, #1
   1d008:	str	r1, [r0]
   1d00c:	ldr	r0, [sp, #12]
   1d010:	str	r0, [fp, #-4]
   1d014:	ldr	r0, [fp, #-4]
   1d018:	mov	sp, fp
   1d01c:	pop	{fp, pc}
   1d020:	push	{fp, lr}
   1d024:	mov	fp, sp
   1d028:	sub	sp, sp, #16
   1d02c:	str	r0, [sp, #8]
   1d030:	str	r1, [sp, #4]
   1d034:	str	r2, [sp]
   1d038:	ldr	r0, [sp]
   1d03c:	ldr	r1, [sp, #4]
   1d040:	sub	r0, r0, r1
   1d044:	cmp	r0, #1
   1d048:	ble	1d09c <main@@Base+0x946c>
   1d04c:	ldr	r0, [sp, #4]
   1d050:	ldrb	r0, [r0]
   1d054:	cmp	r0, #32
   1d058:	ble	1d068 <main@@Base+0x9438>
   1d05c:	ldr	r0, [sp, #4]
   1d060:	str	r0, [fp, #-4]
   1d064:	b	1d0b0 <main@@Base+0x9480>
   1d068:	ldr	r0, [sp, #4]
   1d06c:	ldrb	r0, [r0]
   1d070:	cmp	r0, #32
   1d074:	bne	1d098 <main@@Base+0x9468>
   1d078:	ldr	r0, [sp, #4]
   1d07c:	ldrb	r0, [r0, #1]
   1d080:	cmp	r0, #32
   1d084:	ble	1d098 <main@@Base+0x9468>
   1d088:	ldr	r0, [sp, #4]
   1d08c:	add	r0, r0, #1
   1d090:	str	r0, [fp, #-4]
   1d094:	b	1d0b0 <main@@Base+0x9480>
   1d098:	b	1d09c <main@@Base+0x946c>
   1d09c:	ldr	r0, [sp, #8]
   1d0a0:	ldr	r1, [sp, #4]
   1d0a4:	ldr	r2, [sp]
   1d0a8:	bl	2ad78 <flatcc_json_parser_space_ext@@Base>
   1d0ac:	str	r0, [fp, #-4]
   1d0b0:	ldr	r0, [fp, #-4]
   1d0b4:	mov	sp, fp
   1d0b8:	pop	{fp, pc}
   1d0bc:	sub	sp, sp, #24
   1d0c0:	str	r0, [sp, #20]
   1d0c4:	str	r1, [sp, #16]
   1d0c8:	mov	r0, #0
   1d0cc:	str	r0, [sp, #12]
   1d0d0:	str	r0, [sp, #8]
   1d0d4:	ldr	r0, [sp, #16]
   1d0d8:	ldr	r1, [sp, #20]
   1d0dc:	sub	r0, r0, r1
   1d0e0:	str	r0, [sp, #4]
   1d0e4:	ldr	r0, [sp, #4]
   1d0e8:	cmp	r0, #8
   1d0ec:	bls	1d0f8 <main@@Base+0x94c8>
   1d0f0:	movw	r0, #8
   1d0f4:	str	r0, [sp, #4]
   1d0f8:	ldr	r0, [sp, #4]
   1d0fc:	cmp	r0, #8
   1d100:	str	r0, [sp]
   1d104:	bhi	1d220 <main@@Base+0x95f0>
   1d108:	add	r0, pc, #8
   1d10c:	ldr	r1, [sp]
   1d110:	ldr	r2, [r0, r1, lsl #2]
   1d114:	add	pc, r0, r2
   1d118:	andeq	r0, r0, r4, lsl #2
   1d11c:	andeq	r0, r0, r8, ror #1
   1d120:	andeq	r0, r0, ip, asr #1
   1d124:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1d128:	muleq	r0, r4, r0
   1d12c:	andeq	r0, r0, r8, ror r0
   1d130:	andeq	r0, r0, ip, asr r0
   1d134:	andeq	r0, r0, r0, asr #32
   1d138:	andeq	r0, r0, r4, lsr #32
   1d13c:	ldr	r0, [sp, #20]
   1d140:	ldrb	r0, [r0, #7]
   1d144:	ldr	r1, [sp, #8]
   1d148:	ldr	r2, [sp, #12]
   1d14c:	orr	r0, r1, r0
   1d150:	str	r2, [sp, #12]
   1d154:	str	r0, [sp, #8]
   1d158:	ldr	r0, [sp, #20]
   1d15c:	ldrb	r0, [r0, #6]
   1d160:	ldr	r1, [sp, #8]
   1d164:	ldr	r2, [sp, #12]
   1d168:	orr	r0, r1, r0, lsl #8
   1d16c:	str	r2, [sp, #12]
   1d170:	str	r0, [sp, #8]
   1d174:	ldr	r0, [sp, #20]
   1d178:	ldrb	r0, [r0, #5]
   1d17c:	ldr	r1, [sp, #8]
   1d180:	ldr	r2, [sp, #12]
   1d184:	orr	r0, r1, r0, lsl #16
   1d188:	str	r2, [sp, #12]
   1d18c:	str	r0, [sp, #8]
   1d190:	ldr	r0, [sp, #20]
   1d194:	ldrb	r0, [r0, #4]
   1d198:	ldr	r1, [sp, #8]
   1d19c:	ldr	r2, [sp, #12]
   1d1a0:	orr	r0, r1, r0, lsl #24
   1d1a4:	str	r2, [sp, #12]
   1d1a8:	str	r0, [sp, #8]
   1d1ac:	ldr	r0, [sp, #20]
   1d1b0:	ldrb	r0, [r0, #3]
   1d1b4:	ldr	r1, [sp, #8]
   1d1b8:	ldr	r2, [sp, #12]
   1d1bc:	orr	r0, r2, r0
   1d1c0:	str	r1, [sp, #8]
   1d1c4:	str	r0, [sp, #12]
   1d1c8:	ldr	r0, [sp, #20]
   1d1cc:	ldrb	r0, [r0, #2]
   1d1d0:	ldr	r1, [sp, #8]
   1d1d4:	ldr	r2, [sp, #12]
   1d1d8:	orr	r0, r2, r0, lsl #8
   1d1dc:	str	r1, [sp, #8]
   1d1e0:	str	r0, [sp, #12]
   1d1e4:	ldr	r0, [sp, #20]
   1d1e8:	ldrb	r0, [r0, #1]
   1d1ec:	ldr	r1, [sp, #8]
   1d1f0:	ldr	r2, [sp, #12]
   1d1f4:	orr	r0, r2, r0, lsl #16
   1d1f8:	str	r1, [sp, #8]
   1d1fc:	str	r0, [sp, #12]
   1d200:	ldr	r0, [sp, #20]
   1d204:	ldrb	r0, [r0]
   1d208:	ldr	r1, [sp, #8]
   1d20c:	ldr	r2, [sp, #12]
   1d210:	orr	r0, r2, r0, lsl #24
   1d214:	str	r1, [sp, #8]
   1d218:	str	r0, [sp, #12]
   1d21c:	b	1d220 <main@@Base+0x95f0>
   1d220:	ldr	r0, [sp, #8]
   1d224:	ldr	r1, [sp, #12]
   1d228:	add	sp, sp, #24
   1d22c:	bx	lr
   1d230:	sub	sp, sp, #24
   1d234:	str	r0, [sp, #16]
   1d238:	str	r1, [sp, #12]
   1d23c:	str	r2, [sp, #8]
   1d240:	str	r3, [sp, #4]
   1d244:	ldr	r0, [sp, #12]
   1d248:	str	r0, [sp]
   1d24c:	ldr	r0, [sp, #8]
   1d250:	ldr	r1, [sp, #12]
   1d254:	sub	r0, r0, r1
   1d258:	ldr	r1, [sp, #4]
   1d25c:	cmp	r0, r1
   1d260:	bgt	1d270 <main@@Base+0x9640>
   1d264:	ldr	r0, [sp]
   1d268:	str	r0, [sp, #20]
   1d26c:	b	1d2a8 <main@@Base+0x9678>
   1d270:	ldr	r0, [sp, #12]
   1d274:	ldr	r1, [sp, #4]
   1d278:	add	r0, r0, r1
   1d27c:	ldrb	r0, [r0]
   1d280:	cmp	r0, #46	; 0x2e
   1d284:	beq	1d294 <main@@Base+0x9664>
   1d288:	ldr	r0, [sp]
   1d28c:	str	r0, [sp, #20]
   1d290:	b	1d2a8 <main@@Base+0x9678>
   1d294:	ldr	r0, [sp, #12]
   1d298:	ldr	r1, [sp, #4]
   1d29c:	add	r0, r0, r1
   1d2a0:	add	r0, r0, #1
   1d2a4:	str	r0, [sp, #20]
   1d2a8:	ldr	r0, [sp, #20]
   1d2ac:	add	sp, sp, #24
   1d2b0:	bx	lr
   1d2b4:	push	{fp, lr}
   1d2b8:	mov	fp, sp
   1d2bc:	sub	sp, sp, #64	; 0x40
   1d2c0:	ldr	ip, [fp, #12]
   1d2c4:	ldr	lr, [fp, #8]
   1d2c8:	str	r0, [fp, #-8]
   1d2cc:	str	r1, [fp, #-12]
   1d2d0:	str	r2, [fp, #-16]
   1d2d4:	str	r3, [fp, #-20]	; 0xffffffec
   1d2d8:	ldr	r0, [fp, #-12]
   1d2dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1d2e0:	ldr	r0, [fp, #-12]
   1d2e4:	ldr	r1, [fp, #-16]
   1d2e8:	str	ip, [sp, #20]
   1d2ec:	str	lr, [sp, #16]
   1d2f0:	bl	17bdc <main@@Base+0x3fac>
   1d2f4:	str	r1, [sp, #28]
   1d2f8:	str	r0, [sp, #24]
   1d2fc:	ldr	r0, [sp, #24]
   1d300:	ldr	r1, [sp, #28]
   1d304:	movw	r2, #20577	; 0x5061
   1d308:	movt	r2, #18798	; 0x496e
   1d30c:	eor	r1, r1, r2
   1d310:	movw	r2, #28276	; 0x6e74
   1d314:	movt	r2, #29285	; 0x7265
   1d318:	eor	r0, r0, r2
   1d31c:	orr	r0, r0, r1
   1d320:	cmp	r0, #0
   1d324:	bne	1d444 <main@@Base+0x9814>
   1d328:	b	1d32c <main@@Base+0x96fc>
   1d32c:	ldr	r0, [fp, #-12]
   1d330:	add	r0, r0, #8
   1d334:	str	r0, [fp, #-12]
   1d338:	ldr	r0, [fp, #-12]
   1d33c:	ldr	r1, [fp, #-16]
   1d340:	bl	17bdc <main@@Base+0x3fac>
   1d344:	str	r1, [sp, #28]
   1d348:	str	r0, [sp, #24]
   1d34c:	ldr	r0, [sp, #24]
   1d350:	ldr	r1, [sp, #28]
   1d354:	movw	r2, #28005	; 0x6d65
   1d358:	movt	r2, #20065	; 0x4e61
   1d35c:	eor	r1, r1, r2
   1d360:	movw	r2, #24931	; 0x6163
   1d364:	movt	r2, #29552	; 0x7370
   1d368:	eor	r0, r0, r2
   1d36c:	orr	r0, r0, r1
   1d370:	cmp	r0, #0
   1d374:	bne	1d434 <main@@Base+0x9804>
   1d378:	b	1d37c <main@@Base+0x974c>
   1d37c:	ldr	r0, [fp, #-12]
   1d380:	add	r0, r0, #8
   1d384:	str	r0, [fp, #-12]
   1d388:	ldr	r0, [fp, #-12]
   1d38c:	ldr	r1, [fp, #-16]
   1d390:	bl	17bdc <main@@Base+0x3fac>
   1d394:	str	r1, [sp, #28]
   1d398:	str	r0, [sp, #24]
   1d39c:	ldrb	r0, [sp, #31]
   1d3a0:	mov	r1, #1694498816	; 0x65000000
   1d3a4:	teq	r1, r0, lsl #24
   1d3a8:	bne	1d424 <main@@Base+0x97f4>
   1d3ac:	b	1d3b0 <main@@Base+0x9780>
   1d3b0:	ldr	r0, [fp, #-8]
   1d3b4:	ldr	r1, [fp, #-12]
   1d3b8:	str	r1, [fp, #-28]	; 0xffffffe4
   1d3bc:	ldr	r2, [fp, #-16]
   1d3c0:	ldr	r3, [fp, #12]
   1d3c4:	movw	ip, #1
   1d3c8:	str	r3, [sp, #12]
   1d3cc:	mov	r3, ip
   1d3d0:	ldr	ip, [sp, #12]
   1d3d4:	str	ip, [sp]
   1d3d8:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1d3dc:	str	r0, [fp, #-12]
   1d3e0:	ldr	r0, [fp, #-12]
   1d3e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d3e8:	cmp	r0, r1
   1d3ec:	beq	1d414 <main@@Base+0x97e4>
   1d3f0:	ldr	r0, [fp, #8]
   1d3f4:	mov	r1, #0
   1d3f8:	str	r1, [r0, #4]
   1d3fc:	mov	r1, #1
   1d400:	str	r1, [r0]
   1d404:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d408:	movw	r1, #0
   1d40c:	str	r1, [r0]
   1d410:	b	1d420 <main@@Base+0x97f0>
   1d414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d418:	str	r0, [fp, #-4]
   1d41c:	b	1d4e4 <main@@Base+0x98b4>
   1d420:	b	1d430 <main@@Base+0x9800>
   1d424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d428:	str	r0, [fp, #-4]
   1d42c:	b	1d4e4 <main@@Base+0x98b4>
   1d430:	b	1d440 <main@@Base+0x9810>
   1d434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d438:	str	r0, [fp, #-4]
   1d43c:	b	1d4e4 <main@@Base+0x98b4>
   1d440:	b	1d4dc <main@@Base+0x98ac>
   1d444:	ldr	r0, [sp, #28]
   1d448:	movw	r1, #20037	; 0x4e45
   1d44c:	movt	r1, #20047	; 0x4e4f
   1d450:	teq	r0, r1
   1d454:	bne	1d4cc <main@@Base+0x989c>
   1d458:	b	1d45c <main@@Base+0x982c>
   1d45c:	ldr	r0, [fp, #-8]
   1d460:	ldr	r1, [fp, #-12]
   1d464:	str	r1, [fp, #-28]	; 0xffffffe4
   1d468:	ldr	r2, [fp, #-16]
   1d46c:	ldr	r3, [fp, #12]
   1d470:	movw	ip, #4
   1d474:	str	r3, [sp, #8]
   1d478:	mov	r3, ip
   1d47c:	ldr	ip, [sp, #8]
   1d480:	str	ip, [sp]
   1d484:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1d488:	str	r0, [fp, #-12]
   1d48c:	ldr	r0, [fp, #-12]
   1d490:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d494:	cmp	r0, r1
   1d498:	beq	1d4bc <main@@Base+0x988c>
   1d49c:	ldr	r0, [fp, #8]
   1d4a0:	mov	r1, #0
   1d4a4:	str	r1, [r0, #4]
   1d4a8:	str	r1, [r0]
   1d4ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d4b0:	movw	r1, #0
   1d4b4:	str	r1, [r0]
   1d4b8:	b	1d4c8 <main@@Base+0x9898>
   1d4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4c0:	str	r0, [fp, #-4]
   1d4c4:	b	1d4e4 <main@@Base+0x98b4>
   1d4c8:	b	1d4d8 <main@@Base+0x98a8>
   1d4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4d0:	str	r0, [fp, #-4]
   1d4d4:	b	1d4e4 <main@@Base+0x98b4>
   1d4d8:	b	1d4dc <main@@Base+0x98ac>
   1d4dc:	ldr	r0, [fp, #-12]
   1d4e0:	str	r0, [fp, #-4]
   1d4e4:	ldr	r0, [fp, #-4]
   1d4e8:	mov	sp, fp
   1d4ec:	pop	{fp, pc}
   1d4f0:	push	{fp, lr}
   1d4f4:	mov	fp, sp
   1d4f8:	sub	sp, sp, #64	; 0x40
   1d4fc:	ldr	ip, [fp, #12]
   1d500:	ldr	lr, [fp, #8]
   1d504:	str	r0, [fp, #-8]
   1d508:	str	r1, [fp, #-12]
   1d50c:	str	r2, [fp, #-16]
   1d510:	str	r3, [fp, #-20]	; 0xffffffec
   1d514:	ldr	r0, [fp, #-12]
   1d518:	str	r0, [fp, #-24]	; 0xffffffe8
   1d51c:	ldr	r0, [fp, #-12]
   1d520:	ldr	r1, [fp, #-16]
   1d524:	str	ip, [sp, #20]
   1d528:	str	lr, [sp, #16]
   1d52c:	bl	17bdc <main@@Base+0x3fac>
   1d530:	str	r1, [sp, #28]
   1d534:	str	r0, [sp, #24]
   1d538:	ldr	r0, [sp, #28]
   1d53c:	movw	r1, #30769	; 0x7831
   1d540:	movt	r1, #26725	; 0x6865
   1d544:	cmp	r0, r1
   1d548:	bhi	1d5ec <main@@Base+0x99bc>
   1d54c:	b	1d550 <main@@Base+0x9920>
   1d550:	ldr	r0, [sp, #28]
   1d554:	movw	r1, #30769	; 0x7831
   1d558:	movt	r1, #26725	; 0x6865
   1d55c:	teq	r0, r1
   1d560:	bne	1d5dc <main@@Base+0x99ac>
   1d564:	b	1d568 <main@@Base+0x9938>
   1d568:	ldr	r0, [fp, #-8]
   1d56c:	ldr	r1, [fp, #-12]
   1d570:	str	r1, [fp, #-28]	; 0xffffffe4
   1d574:	ldr	r2, [fp, #-16]
   1d578:	ldr	r3, [fp, #12]
   1d57c:	movw	ip, #4
   1d580:	str	r3, [sp, #12]
   1d584:	mov	r3, ip
   1d588:	ldr	ip, [sp, #12]
   1d58c:	str	ip, [sp]
   1d590:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1d594:	str	r0, [fp, #-12]
   1d598:	ldr	r0, [fp, #-12]
   1d59c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d5a0:	cmp	r0, r1
   1d5a4:	beq	1d5cc <main@@Base+0x999c>
   1d5a8:	ldr	r0, [fp, #8]
   1d5ac:	mov	r1, #0
   1d5b0:	str	r1, [r0, #4]
   1d5b4:	mov	r1, #3
   1d5b8:	str	r1, [r0]
   1d5bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d5c0:	movw	r1, #0
   1d5c4:	str	r1, [r0]
   1d5c8:	b	1d5d8 <main@@Base+0x99a8>
   1d5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5d0:	str	r0, [fp, #-4]
   1d5d4:	b	1d73c <main@@Base+0x9b0c>
   1d5d8:	b	1d5e8 <main@@Base+0x99b8>
   1d5dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5e0:	str	r0, [fp, #-4]
   1d5e4:	b	1d73c <main@@Base+0x9b0c>
   1d5e8:	b	1d734 <main@@Base+0x9b04>
   1d5ec:	ldrh	r0, [sp, #26]
   1d5f0:	ldr	r1, [sp, #28]
   1d5f4:	movw	r2, #26725	; 0x6865
   1d5f8:	eor	r2, r2, r1, lsr #16
   1d5fc:	orr	r0, r0, r1, lsl #16
   1d600:	movw	r1, #25959	; 0x6567
   1d604:	movt	r1, #30830	; 0x786e
   1d608:	eor	r0, r0, r1
   1d60c:	orr	r0, r0, r2
   1d610:	cmp	r0, #0
   1d614:	bne	1d690 <main@@Base+0x9a60>
   1d618:	b	1d61c <main@@Base+0x99ec>
   1d61c:	ldr	r0, [fp, #-8]
   1d620:	ldr	r1, [fp, #-12]
   1d624:	str	r1, [fp, #-28]	; 0xffffffe4
   1d628:	ldr	r2, [fp, #-16]
   1d62c:	ldr	r3, [fp, #12]
   1d630:	movw	ip, #6
   1d634:	str	r3, [sp, #8]
   1d638:	mov	r3, ip
   1d63c:	ldr	ip, [sp, #8]
   1d640:	str	ip, [sp]
   1d644:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1d648:	str	r0, [fp, #-12]
   1d64c:	ldr	r0, [fp, #-12]
   1d650:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d654:	cmp	r0, r1
   1d658:	beq	1d680 <main@@Base+0x9a50>
   1d65c:	ldr	r0, [fp, #8]
   1d660:	mvn	r1, #0
   1d664:	str	r1, [r0, #4]
   1d668:	mvn	r1, #1
   1d66c:	str	r1, [r0]
   1d670:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d674:	movw	r1, #1
   1d678:	str	r1, [r0]
   1d67c:	b	1d68c <main@@Base+0x9a5c>
   1d680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d684:	str	r0, [fp, #-4]
   1d688:	b	1d73c <main@@Base+0x9b0c>
   1d68c:	b	1d730 <main@@Base+0x9b00>
   1d690:	ldr	r0, [sp, #28]
   1d694:	movw	r1, #30770	; 0x7832
   1d698:	movt	r1, #26725	; 0x6865
   1d69c:	teq	r0, r1
   1d6a0:	bne	1d720 <main@@Base+0x9af0>
   1d6a4:	b	1d6a8 <main@@Base+0x9a78>
   1d6a8:	ldr	r0, [fp, #-8]
   1d6ac:	ldr	r1, [fp, #-12]
   1d6b0:	str	r1, [fp, #-28]	; 0xffffffe4
   1d6b4:	ldr	r2, [fp, #-16]
   1d6b8:	ldr	r3, [fp, #12]
   1d6bc:	movw	ip, #4
   1d6c0:	str	r3, [sp, #4]
   1d6c4:	mov	r3, ip
   1d6c8:	ldr	ip, [sp, #4]
   1d6cc:	str	ip, [sp]
   1d6d0:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1d6d4:	str	r0, [fp, #-12]
   1d6d8:	ldr	r0, [fp, #-12]
   1d6dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d6e0:	cmp	r0, r1
   1d6e4:	beq	1d710 <main@@Base+0x9ae0>
   1d6e8:	ldr	r0, [fp, #8]
   1d6ec:	mov	r1, #0
   1d6f0:	str	r1, [r0, #4]
   1d6f4:	movw	r1, #48815	; 0xbeaf
   1d6f8:	movt	r1, #32431	; 0x7eaf
   1d6fc:	str	r1, [r0]
   1d700:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d704:	movw	r1, #0
   1d708:	str	r1, [r0]
   1d70c:	b	1d71c <main@@Base+0x9aec>
   1d710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d714:	str	r0, [fp, #-4]
   1d718:	b	1d73c <main@@Base+0x9b0c>
   1d71c:	b	1d72c <main@@Base+0x9afc>
   1d720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d724:	str	r0, [fp, #-4]
   1d728:	b	1d73c <main@@Base+0x9b0c>
   1d72c:	b	1d730 <main@@Base+0x9b00>
   1d730:	b	1d734 <main@@Base+0x9b04>
   1d734:	ldr	r0, [fp, #-12]
   1d738:	str	r0, [fp, #-4]
   1d73c:	ldr	r0, [fp, #-4]
   1d740:	mov	sp, fp
   1d744:	pop	{fp, pc}
   1d748:	push	{fp, lr}
   1d74c:	mov	fp, sp
   1d750:	sub	sp, sp, #72	; 0x48
   1d754:	ldr	ip, [fp, #12]
   1d758:	ldr	lr, [fp, #8]
   1d75c:	str	r0, [fp, #-8]
   1d760:	str	r1, [fp, #-12]
   1d764:	str	r2, [fp, #-16]
   1d768:	str	r3, [fp, #-20]	; 0xffffffec
   1d76c:	ldr	r0, [fp, #-12]
   1d770:	str	r0, [fp, #-24]	; 0xffffffe8
   1d774:	ldr	r0, [fp, #-12]
   1d778:	ldr	r1, [fp, #-16]
   1d77c:	str	ip, [sp, #28]
   1d780:	str	lr, [sp, #24]
   1d784:	bl	17bdc <main@@Base+0x3fac>
   1d788:	str	r1, [sp, #36]	; 0x24
   1d78c:	str	r0, [sp, #32]
   1d790:	ldr	r0, [sp, #36]	; 0x24
   1d794:	movw	r1, #29745	; 0x7431
   1d798:	movt	r1, #26990	; 0x696e
   1d79c:	cmp	r0, r1
   1d7a0:	bhi	1d844 <main@@Base+0x9c14>
   1d7a4:	b	1d7a8 <main@@Base+0x9b78>
   1d7a8:	ldr	r0, [sp, #36]	; 0x24
   1d7ac:	movw	r1, #29745	; 0x7431
   1d7b0:	movt	r1, #26990	; 0x696e
   1d7b4:	teq	r0, r1
   1d7b8:	bne	1d834 <main@@Base+0x9c04>
   1d7bc:	b	1d7c0 <main@@Base+0x9b90>
   1d7c0:	ldr	r0, [fp, #-8]
   1d7c4:	ldr	r1, [fp, #-12]
   1d7c8:	str	r1, [fp, #-28]	; 0xffffffe4
   1d7cc:	ldr	r2, [fp, #-16]
   1d7d0:	ldr	r3, [fp, #12]
   1d7d4:	movw	ip, #4
   1d7d8:	str	r3, [sp, #20]
   1d7dc:	mov	r3, ip
   1d7e0:	ldr	ip, [sp, #20]
   1d7e4:	str	ip, [sp]
   1d7e8:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1d7ec:	str	r0, [fp, #-12]
   1d7f0:	ldr	r0, [fp, #-12]
   1d7f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d7f8:	cmp	r0, r1
   1d7fc:	beq	1d824 <main@@Base+0x9bf4>
   1d800:	ldr	r0, [fp, #8]
   1d804:	mov	r1, #0
   1d808:	str	r1, [r0, #4]
   1d80c:	mov	r1, #2
   1d810:	str	r1, [r0]
   1d814:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d818:	movw	r1, #0
   1d81c:	str	r1, [r0]
   1d820:	b	1d830 <main@@Base+0x9c00>
   1d824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d828:	str	r0, [fp, #-4]
   1d82c:	b	1da74 <main@@Base+0x9e44>
   1d830:	b	1d840 <main@@Base+0x9c10>
   1d834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d838:	str	r0, [fp, #-4]
   1d83c:	b	1da74 <main@@Base+0x9e44>
   1d840:	b	1da6c <main@@Base+0x9e3c>
   1d844:	ldr	r0, [sp, #32]
   1d848:	ldr	r1, [sp, #36]	; 0x24
   1d84c:	movw	r2, #65535	; 0xffff
   1d850:	movt	r2, #25958	; 0x6566
   1d854:	subs	r0, r2, r0
   1d858:	movw	r2, #29806	; 0x746e
   1d85c:	movt	r2, #26990	; 0x696e
   1d860:	sbcs	r1, r2, r1
   1d864:	bcc	1d908 <main@@Base+0x9cd8>
   1d868:	b	1d86c <main@@Base+0x9c3c>
   1d86c:	ldr	r0, [sp, #36]	; 0x24
   1d870:	movw	r1, #29746	; 0x7432
   1d874:	movt	r1, #26990	; 0x696e
   1d878:	teq	r0, r1
   1d87c:	bne	1d8f8 <main@@Base+0x9cc8>
   1d880:	b	1d884 <main@@Base+0x9c54>
   1d884:	ldr	r0, [fp, #-8]
   1d888:	ldr	r1, [fp, #-12]
   1d88c:	str	r1, [fp, #-28]	; 0xffffffe4
   1d890:	ldr	r2, [fp, #-16]
   1d894:	ldr	r3, [fp, #12]
   1d898:	movw	ip, #4
   1d89c:	str	r3, [sp, #16]
   1d8a0:	mov	r3, ip
   1d8a4:	ldr	ip, [sp, #16]
   1d8a8:	str	ip, [sp]
   1d8ac:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1d8b0:	str	r0, [fp, #-12]
   1d8b4:	ldr	r0, [fp, #-12]
   1d8b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d8bc:	cmp	r0, r1
   1d8c0:	beq	1d8e8 <main@@Base+0x9cb8>
   1d8c4:	ldr	r0, [fp, #8]
   1d8c8:	mov	r1, #0
   1d8cc:	str	r1, [r0, #4]
   1d8d0:	mov	r1, #42	; 0x2a
   1d8d4:	str	r1, [r0]
   1d8d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d8dc:	movw	r1, #0
   1d8e0:	str	r1, [r0]
   1d8e4:	b	1d8f4 <main@@Base+0x9cc4>
   1d8e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8ec:	str	r0, [fp, #-4]
   1d8f0:	b	1da74 <main@@Base+0x9e44>
   1d8f4:	b	1d904 <main@@Base+0x9cd4>
   1d8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8fc:	str	r0, [fp, #-4]
   1d900:	b	1da74 <main@@Base+0x9e44>
   1d904:	b	1da68 <main@@Base+0x9e38>
   1d908:	ldr	r0, [sp, #32]
   1d90c:	ldr	r1, [sp, #36]	; 0x24
   1d910:	movw	r2, #28276	; 0x6e74
   1d914:	movt	r2, #105	; 0x69
   1d918:	eor	r2, r2, r1, lsr #8
   1d91c:	lsr	r0, r0, #8
   1d920:	orr	r0, r0, r1, lsl #24
   1d924:	movw	r1, #26418	; 0x6732
   1d928:	movt	r1, #28261	; 0x6e65
   1d92c:	eor	r0, r0, r1
   1d930:	orr	r0, r0, r2
   1d934:	cmp	r0, #0
   1d938:	bne	1d9b0 <main@@Base+0x9d80>
   1d93c:	b	1d940 <main@@Base+0x9d10>
   1d940:	ldr	r0, [fp, #-8]
   1d944:	ldr	r1, [fp, #-12]
   1d948:	str	r1, [fp, #-28]	; 0xffffffe4
   1d94c:	ldr	r2, [fp, #-16]
   1d950:	ldr	r3, [fp, #12]
   1d954:	movw	ip, #7
   1d958:	str	r3, [sp, #12]
   1d95c:	mov	r3, ip
   1d960:	ldr	ip, [sp, #12]
   1d964:	str	ip, [sp]
   1d968:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1d96c:	str	r0, [fp, #-12]
   1d970:	ldr	r0, [fp, #-12]
   1d974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d978:	cmp	r0, r1
   1d97c:	beq	1d9a0 <main@@Base+0x9d70>
   1d980:	ldr	r0, [fp, #8]
   1d984:	mvn	r1, #0
   1d988:	str	r1, [r0, #4]
   1d98c:	str	r1, [r0]
   1d990:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d994:	movw	r1, #1
   1d998:	str	r1, [r0]
   1d99c:	b	1d9ac <main@@Base+0x9d7c>
   1d9a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9a4:	str	r0, [fp, #-4]
   1d9a8:	b	1da74 <main@@Base+0x9e44>
   1d9ac:	b	1da64 <main@@Base+0x9e34>
   1d9b0:	ldrh	r0, [sp, #34]	; 0x22
   1d9b4:	ldr	r1, [sp, #36]	; 0x24
   1d9b8:	movw	r2, #26990	; 0x696e
   1d9bc:	eor	r2, r2, r1, lsr #16
   1d9c0:	orr	r0, r0, r1, lsl #16
   1d9c4:	movw	r1, #25959	; 0x6567
   1d9c8:	movt	r1, #29806	; 0x746e
   1d9cc:	eor	r0, r0, r1
   1d9d0:	orr	r0, r0, r2
   1d9d4:	cmp	r0, #0
   1d9d8:	bne	1da54 <main@@Base+0x9e24>
   1d9dc:	b	1d9e0 <main@@Base+0x9db0>
   1d9e0:	ldr	r0, [fp, #-8]
   1d9e4:	ldr	r1, [fp, #-12]
   1d9e8:	str	r1, [fp, #-28]	; 0xffffffe4
   1d9ec:	ldr	r2, [fp, #-16]
   1d9f0:	ldr	r3, [fp, #12]
   1d9f4:	movw	ip, #6
   1d9f8:	str	r3, [sp, #8]
   1d9fc:	mov	r3, ip
   1da00:	ldr	ip, [sp, #8]
   1da04:	str	ip, [sp]
   1da08:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1da0c:	str	r0, [fp, #-12]
   1da10:	ldr	r0, [fp, #-12]
   1da14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1da18:	cmp	r0, r1
   1da1c:	beq	1da44 <main@@Base+0x9e14>
   1da20:	ldr	r0, [fp, #8]
   1da24:	mvn	r1, #0
   1da28:	str	r1, [r0, #4]
   1da2c:	mvn	r1, #1
   1da30:	str	r1, [r0]
   1da34:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da38:	movw	r1, #1
   1da3c:	str	r1, [r0]
   1da40:	b	1da50 <main@@Base+0x9e20>
   1da44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da48:	str	r0, [fp, #-4]
   1da4c:	b	1da74 <main@@Base+0x9e44>
   1da50:	b	1da60 <main@@Base+0x9e30>
   1da54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da58:	str	r0, [fp, #-4]
   1da5c:	b	1da74 <main@@Base+0x9e44>
   1da60:	b	1da64 <main@@Base+0x9e34>
   1da64:	b	1da68 <main@@Base+0x9e38>
   1da68:	b	1da6c <main@@Base+0x9e3c>
   1da6c:	ldr	r0, [fp, #-12]
   1da70:	str	r0, [fp, #-4]
   1da74:	ldr	r0, [fp, #-4]
   1da78:	mov	sp, fp
   1da7c:	pop	{fp, pc}
   1da80:	push	{fp, lr}
   1da84:	mov	fp, sp
   1da88:	sub	sp, sp, #64	; 0x40
   1da8c:	ldr	ip, [fp, #12]
   1da90:	ldr	lr, [fp, #8]
   1da94:	str	r0, [fp, #-8]
   1da98:	str	r1, [fp, #-12]
   1da9c:	str	r2, [fp, #-16]
   1daa0:	str	r3, [fp, #-20]	; 0xffffffec
   1daa4:	ldr	r0, [fp, #-12]
   1daa8:	str	r0, [fp, #-24]	; 0xffffffe8
   1daac:	ldr	r0, [fp, #-12]
   1dab0:	ldr	r1, [fp, #-16]
   1dab4:	str	ip, [sp, #20]
   1dab8:	str	lr, [sp, #16]
   1dabc:	bl	17bdc <main@@Base+0x3fac>
   1dac0:	str	r1, [sp, #28]
   1dac4:	str	r0, [sp, #24]
   1dac8:	ldr	r0, [sp, #28]
   1dacc:	movw	r1, #26417	; 0x6731
   1dad0:	movt	r1, #28261	; 0x6e65
   1dad4:	cmp	r0, r1
   1dad8:	bhi	1db7c <main@@Base+0x9f4c>
   1dadc:	b	1dae0 <main@@Base+0x9eb0>
   1dae0:	ldr	r0, [sp, #28]
   1dae4:	movw	r1, #26417	; 0x6731
   1dae8:	movt	r1, #28261	; 0x6e65
   1daec:	teq	r0, r1
   1daf0:	bne	1db6c <main@@Base+0x9f3c>
   1daf4:	b	1daf8 <main@@Base+0x9ec8>
   1daf8:	ldr	r0, [fp, #-8]
   1dafc:	ldr	r1, [fp, #-12]
   1db00:	str	r1, [fp, #-28]	; 0xffffffe4
   1db04:	ldr	r2, [fp, #-16]
   1db08:	ldr	r3, [fp, #12]
   1db0c:	movw	ip, #4
   1db10:	str	r3, [sp, #12]
   1db14:	mov	r3, ip
   1db18:	ldr	ip, [sp, #12]
   1db1c:	str	ip, [sp]
   1db20:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1db24:	str	r0, [fp, #-12]
   1db28:	ldr	r0, [fp, #-12]
   1db2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1db30:	cmp	r0, r1
   1db34:	beq	1db5c <main@@Base+0x9f2c>
   1db38:	ldr	r0, [fp, #8]
   1db3c:	mvn	r1, #0
   1db40:	str	r1, [r0, #4]
   1db44:	mvn	r1, #11
   1db48:	str	r1, [r0]
   1db4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1db50:	movw	r1, #1
   1db54:	str	r1, [r0]
   1db58:	b	1db68 <main@@Base+0x9f38>
   1db5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db60:	str	r0, [fp, #-4]
   1db64:	b	1dcb0 <main@@Base+0xa080>
   1db68:	b	1db78 <main@@Base+0x9f48>
   1db6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db70:	str	r0, [fp, #-4]
   1db74:	b	1dcb0 <main@@Base+0xa080>
   1db78:	b	1dca8 <main@@Base+0xa078>
   1db7c:	ldr	r0, [sp, #28]
   1db80:	movw	r1, #26419	; 0x6733
   1db84:	movt	r1, #28261	; 0x6e65
   1db88:	teq	r0, r1
   1db8c:	bne	1dc08 <main@@Base+0x9fd8>
   1db90:	b	1db94 <main@@Base+0x9f64>
   1db94:	ldr	r0, [fp, #-8]
   1db98:	ldr	r1, [fp, #-12]
   1db9c:	str	r1, [fp, #-28]	; 0xffffffe4
   1dba0:	ldr	r2, [fp, #-16]
   1dba4:	ldr	r3, [fp, #12]
   1dba8:	movw	ip, #4
   1dbac:	str	r3, [sp, #8]
   1dbb0:	mov	r3, ip
   1dbb4:	ldr	ip, [sp, #8]
   1dbb8:	str	ip, [sp]
   1dbbc:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1dbc0:	str	r0, [fp, #-12]
   1dbc4:	ldr	r0, [fp, #-12]
   1dbc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dbcc:	cmp	r0, r1
   1dbd0:	beq	1dbf8 <main@@Base+0x9fc8>
   1dbd4:	ldr	r0, [fp, #8]
   1dbd8:	mvn	r1, #0
   1dbdc:	str	r1, [r0, #4]
   1dbe0:	mvn	r1, #9
   1dbe4:	str	r1, [r0]
   1dbe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dbec:	movw	r1, #1
   1dbf0:	str	r1, [r0]
   1dbf4:	b	1dc04 <main@@Base+0x9fd4>
   1dbf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbfc:	str	r0, [fp, #-4]
   1dc00:	b	1dcb0 <main@@Base+0xa080>
   1dc04:	b	1dca4 <main@@Base+0xa074>
   1dc08:	ldr	r0, [sp, #28]
   1dc0c:	movw	r1, #26418	; 0x6732
   1dc10:	movt	r1, #28261	; 0x6e65
   1dc14:	teq	r0, r1
   1dc18:	bne	1dc94 <main@@Base+0xa064>
   1dc1c:	b	1dc20 <main@@Base+0x9ff0>
   1dc20:	ldr	r0, [fp, #-8]
   1dc24:	ldr	r1, [fp, #-12]
   1dc28:	str	r1, [fp, #-28]	; 0xffffffe4
   1dc2c:	ldr	r2, [fp, #-16]
   1dc30:	ldr	r3, [fp, #12]
   1dc34:	movw	ip, #4
   1dc38:	str	r3, [sp, #4]
   1dc3c:	mov	r3, ip
   1dc40:	ldr	ip, [sp, #4]
   1dc44:	str	ip, [sp]
   1dc48:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1dc4c:	str	r0, [fp, #-12]
   1dc50:	ldr	r0, [fp, #-12]
   1dc54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dc58:	cmp	r0, r1
   1dc5c:	beq	1dc84 <main@@Base+0xa054>
   1dc60:	ldr	r0, [fp, #8]
   1dc64:	mvn	r1, #0
   1dc68:	str	r1, [r0, #4]
   1dc6c:	mvn	r1, #10
   1dc70:	str	r1, [r0]
   1dc74:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dc78:	movw	r1, #1
   1dc7c:	str	r1, [r0]
   1dc80:	b	1dc90 <main@@Base+0xa060>
   1dc84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc88:	str	r0, [fp, #-4]
   1dc8c:	b	1dcb0 <main@@Base+0xa080>
   1dc90:	b	1dca0 <main@@Base+0xa070>
   1dc94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc98:	str	r0, [fp, #-4]
   1dc9c:	b	1dcb0 <main@@Base+0xa080>
   1dca0:	b	1dca4 <main@@Base+0xa074>
   1dca4:	b	1dca8 <main@@Base+0xa078>
   1dca8:	ldr	r0, [fp, #-12]
   1dcac:	str	r0, [fp, #-4]
   1dcb0:	ldr	r0, [fp, #-4]
   1dcb4:	mov	sp, fp
   1dcb8:	pop	{fp, pc}
   1dcbc:	push	{fp, lr}
   1dcc0:	mov	fp, sp
   1dcc4:	sub	sp, sp, #56	; 0x38
   1dcc8:	ldr	ip, [fp, #12]
   1dccc:	ldr	lr, [fp, #8]
   1dcd0:	str	r0, [fp, #-8]
   1dcd4:	str	r1, [fp, #-12]
   1dcd8:	str	r2, [fp, #-16]
   1dcdc:	str	r3, [fp, #-20]	; 0xffffffec
   1dce0:	ldr	r0, [fp, #-12]
   1dce4:	str	r0, [fp, #-24]	; 0xffffffe8
   1dce8:	ldr	r0, [fp, #-12]
   1dcec:	ldr	r1, [fp, #-16]
   1dcf0:	str	ip, [sp, #12]
   1dcf4:	str	lr, [sp, #8]
   1dcf8:	bl	17bdc <main@@Base+0x3fac>
   1dcfc:	str	r1, [sp, #20]
   1dd00:	str	r0, [sp, #16]
   1dd04:	ldrb	r0, [sp, #23]
   1dd08:	mov	r1, #2013265920	; 0x78000000
   1dd0c:	teq	r1, r0, lsl #24
   1dd10:	bne	1dd88 <main@@Base+0xa158>
   1dd14:	b	1dd18 <main@@Base+0xa0e8>
   1dd18:	ldr	r0, [fp, #-8]
   1dd1c:	ldr	r1, [fp, #-12]
   1dd20:	str	r1, [sp, #28]
   1dd24:	ldr	r2, [fp, #-16]
   1dd28:	ldr	r3, [fp, #12]
   1dd2c:	movw	ip, #1
   1dd30:	str	r3, [sp, #4]
   1dd34:	mov	r3, ip
   1dd38:	ldr	ip, [sp, #4]
   1dd3c:	str	ip, [sp]
   1dd40:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1dd44:	str	r0, [fp, #-12]
   1dd48:	ldr	r0, [fp, #-12]
   1dd4c:	ldr	r1, [sp, #28]
   1dd50:	cmp	r0, r1
   1dd54:	beq	1dd78 <main@@Base+0xa148>
   1dd58:	ldr	r0, [fp, #8]
   1dd5c:	mov	r1, #0
   1dd60:	str	r1, [r0, #4]
   1dd64:	str	r1, [r0]
   1dd68:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd6c:	movw	r1, #0
   1dd70:	str	r1, [r0]
   1dd74:	b	1dd84 <main@@Base+0xa154>
   1dd78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd7c:	str	r0, [fp, #-4]
   1dd80:	b	1dd9c <main@@Base+0xa16c>
   1dd84:	b	1dd94 <main@@Base+0xa164>
   1dd88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd8c:	str	r0, [fp, #-4]
   1dd90:	b	1dd9c <main@@Base+0xa16c>
   1dd94:	ldr	r0, [fp, #-12]
   1dd98:	str	r0, [fp, #-4]
   1dd9c:	ldr	r0, [fp, #-4]
   1dda0:	mov	sp, fp
   1dda4:	pop	{fp, pc}
   1dda8:	push	{fp, lr}
   1ddac:	mov	fp, sp
   1ddb0:	sub	sp, sp, #80	; 0x50
   1ddb4:	ldr	ip, [fp, #12]
   1ddb8:	ldr	lr, [fp, #8]
   1ddbc:	str	r0, [fp, #-8]
   1ddc0:	str	r1, [fp, #-12]
   1ddc4:	str	r2, [fp, #-16]
   1ddc8:	str	r3, [fp, #-20]	; 0xffffffec
   1ddcc:	ldr	r0, [fp, #-12]
   1ddd0:	str	r0, [fp, #-24]	; 0xffffffe8
   1ddd4:	ldr	r0, [fp, #-12]
   1ddd8:	ldr	r1, [fp, #-16]
   1dddc:	str	ip, [sp, #36]	; 0x24
   1dde0:	str	lr, [sp, #32]
   1dde4:	bl	17bdc <main@@Base+0x3fac>
   1dde8:	str	r1, [sp, #44]	; 0x2c
   1ddec:	str	r0, [sp, #40]	; 0x28
   1ddf0:	ldr	r0, [sp, #44]	; 0x2c
   1ddf4:	movw	r1, #20036	; 0x4e44
   1ddf8:	movt	r1, #20047	; 0x4e4f
   1ddfc:	cmp	r0, r1
   1de00:	bhi	1e03c <main@@Base+0xa40c>
   1de04:	b	1de08 <main@@Base+0xa1d8>
   1de08:	ldr	r0, [sp, #40]	; 0x28
   1de0c:	ldr	r1, [sp, #44]	; 0x2c
   1de10:	movw	r2, #28159	; 0x6dff
   1de14:	movt	r2, #18017	; 0x4661
   1de18:	subs	r0, r2, r0
   1de1c:	movw	r2, #28523	; 0x6f6b
   1de20:	movt	r2, #17007	; 0x426f
   1de24:	sbcs	r1, r2, r1
   1de28:	bcc	1dedc <main@@Base+0xa2ac>
   1de2c:	b	1de30 <main@@Base+0xa200>
   1de30:	ldrb	r0, [sp, #43]	; 0x2b
   1de34:	ldr	r1, [sp, #44]	; 0x2c
   1de38:	movw	r2, #27756	; 0x6c6c
   1de3c:	movt	r2, #16997	; 0x4265
   1de40:	eor	r1, r1, r2
   1de44:	eor	r0, r0, #101	; 0x65
   1de48:	orr	r0, r1, r0, lsl #24
   1de4c:	cmp	r0, #0
   1de50:	bne	1decc <main@@Base+0xa29c>
   1de54:	b	1de58 <main@@Base+0xa228>
   1de58:	ldr	r0, [fp, #-8]
   1de5c:	ldr	r1, [fp, #-12]
   1de60:	str	r1, [fp, #-28]	; 0xffffffe4
   1de64:	ldr	r2, [fp, #-16]
   1de68:	ldr	r3, [fp, #12]
   1de6c:	movw	ip, #5
   1de70:	str	r3, [sp, #28]
   1de74:	mov	r3, ip
   1de78:	ldr	ip, [sp, #28]
   1de7c:	str	ip, [sp]
   1de80:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1de84:	str	r0, [fp, #-12]
   1de88:	ldr	r0, [fp, #-12]
   1de8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1de90:	cmp	r0, r1
   1de94:	beq	1debc <main@@Base+0xa28c>
   1de98:	ldr	r0, [fp, #8]
   1de9c:	mov	r1, #0
   1dea0:	str	r1, [r0, #4]
   1dea4:	mov	r1, #9
   1dea8:	str	r1, [r0]
   1deac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1deb0:	movw	r1, #0
   1deb4:	str	r1, [r0]
   1deb8:	b	1dec8 <main@@Base+0xa298>
   1debc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dec0:	str	r0, [fp, #-4]
   1dec4:	b	1e338 <main@@Base+0xa708>
   1dec8:	b	1ded8 <main@@Base+0xa2a8>
   1decc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ded0:	str	r0, [fp, #-4]
   1ded4:	b	1e338 <main@@Base+0xa708>
   1ded8:	b	1e038 <main@@Base+0xa408>
   1dedc:	ldrb	r0, [sp, #43]	; 0x2b
   1dee0:	ldr	r1, [sp, #44]	; 0x2c
   1dee4:	movw	r2, #19553	; 0x4c61
   1dee8:	movt	r2, #19829	; 0x4d75
   1deec:	eor	r1, r1, r2
   1def0:	eor	r0, r0, #110	; 0x6e
   1def4:	orr	r0, r1, r0, lsl #24
   1def8:	cmp	r0, #0
   1defc:	bne	1df78 <main@@Base+0xa348>
   1df00:	b	1df04 <main@@Base+0xa2d4>
   1df04:	ldr	r0, [fp, #-8]
   1df08:	ldr	r1, [fp, #-12]
   1df0c:	str	r1, [fp, #-28]	; 0xffffffe4
   1df10:	ldr	r2, [fp, #-16]
   1df14:	ldr	r3, [fp, #12]
   1df18:	movw	ip, #5
   1df1c:	str	r3, [sp, #24]
   1df20:	mov	r3, ip
   1df24:	ldr	ip, [sp, #24]
   1df28:	str	ip, [sp]
   1df2c:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1df30:	str	r0, [fp, #-12]
   1df34:	ldr	r0, [fp, #-12]
   1df38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1df3c:	cmp	r0, r1
   1df40:	beq	1df68 <main@@Base+0xa338>
   1df44:	ldr	r0, [fp, #8]
   1df48:	mov	r1, #0
   1df4c:	str	r1, [r0, #4]
   1df50:	mov	r1, #2
   1df54:	str	r1, [r0]
   1df58:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df5c:	movw	r1, #0
   1df60:	str	r1, [r0]
   1df64:	b	1df74 <main@@Base+0xa344>
   1df68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df6c:	str	r0, [fp, #-4]
   1df70:	b	1e338 <main@@Base+0xa708>
   1df74:	b	1e034 <main@@Base+0xa404>
   1df78:	ldr	r0, [sp, #40]	; 0x28
   1df7c:	ldr	r1, [sp, #44]	; 0x2c
   1df80:	movw	r2, #28527	; 0x6f6f
   1df84:	movt	r2, #66	; 0x42
   1df88:	eor	r2, r2, r1, lsr #8
   1df8c:	lsr	r0, r0, #8
   1df90:	orr	r0, r0, r1, lsl #24
   1df94:	movw	r1, #24942	; 0x616e
   1df98:	movt	r1, #27462	; 0x6b46
   1df9c:	eor	r0, r0, r1
   1dfa0:	orr	r0, r0, r2
   1dfa4:	cmp	r0, #0
   1dfa8:	bne	1e024 <main@@Base+0xa3f4>
   1dfac:	b	1dfb0 <main@@Base+0xa380>
   1dfb0:	ldr	r0, [fp, #-8]
   1dfb4:	ldr	r1, [fp, #-12]
   1dfb8:	str	r1, [fp, #-28]	; 0xffffffe4
   1dfbc:	ldr	r2, [fp, #-16]
   1dfc0:	ldr	r3, [fp, #12]
   1dfc4:	movw	ip, #7
   1dfc8:	str	r3, [sp, #20]
   1dfcc:	mov	r3, ip
   1dfd0:	ldr	ip, [sp, #20]
   1dfd4:	str	ip, [sp]
   1dfd8:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1dfdc:	str	r0, [fp, #-12]
   1dfe0:	ldr	r0, [fp, #-12]
   1dfe4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dfe8:	cmp	r0, r1
   1dfec:	beq	1e014 <main@@Base+0xa3e4>
   1dff0:	ldr	r0, [fp, #8]
   1dff4:	mov	r1, #0
   1dff8:	str	r1, [r0, #4]
   1dffc:	mov	r1, #10
   1e000:	str	r1, [r0]
   1e004:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e008:	movw	r1, #0
   1e00c:	str	r1, [r0]
   1e010:	b	1e020 <main@@Base+0xa3f0>
   1e014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e018:	str	r0, [fp, #-4]
   1e01c:	b	1e338 <main@@Base+0xa708>
   1e020:	b	1e030 <main@@Base+0xa400>
   1e024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e028:	str	r0, [fp, #-4]
   1e02c:	b	1e338 <main@@Base+0xa708>
   1e030:	b	1e034 <main@@Base+0xa404>
   1e034:	b	1e038 <main@@Base+0xa408>
   1e038:	b	1e330 <main@@Base+0xa700>
   1e03c:	ldr	r0, [sp, #40]	; 0x28
   1e040:	ldr	r1, [sp, #44]	; 0x2c
   1e044:	mvn	r2, #-1912602624	; 0x8e000000
   1e048:	subs	r0, r2, r0
   1e04c:	movw	r2, #26725	; 0x6865
   1e050:	movt	r2, #20340	; 0x4f74
   1e054:	sbcs	r1, r2, r1
   1e058:	bcc	1e0f8 <main@@Base+0xa4c8>
   1e05c:	b	1e060 <main@@Base+0xa430>
   1e060:	ldr	r0, [sp, #44]	; 0x2c
   1e064:	movw	r1, #20037	; 0x4e45
   1e068:	movt	r1, #20047	; 0x4e4f
   1e06c:	teq	r0, r1
   1e070:	bne	1e0e8 <main@@Base+0xa4b8>
   1e074:	b	1e078 <main@@Base+0xa448>
   1e078:	ldr	r0, [fp, #-8]
   1e07c:	ldr	r1, [fp, #-12]
   1e080:	str	r1, [fp, #-28]	; 0xffffffe4
   1e084:	ldr	r2, [fp, #-16]
   1e088:	ldr	r3, [fp, #12]
   1e08c:	movw	ip, #4
   1e090:	str	r3, [sp, #16]
   1e094:	mov	r3, ip
   1e098:	ldr	ip, [sp, #16]
   1e09c:	str	ip, [sp]
   1e0a0:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1e0a4:	str	r0, [fp, #-12]
   1e0a8:	ldr	r0, [fp, #-12]
   1e0ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e0b0:	cmp	r0, r1
   1e0b4:	beq	1e0d8 <main@@Base+0xa4a8>
   1e0b8:	ldr	r0, [fp, #8]
   1e0bc:	mov	r1, #0
   1e0c0:	str	r1, [r0, #4]
   1e0c4:	str	r1, [r0]
   1e0c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e0cc:	movw	r1, #0
   1e0d0:	str	r1, [r0]
   1e0d4:	b	1e0e4 <main@@Base+0xa4b4>
   1e0d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0dc:	str	r0, [fp, #-4]
   1e0e0:	b	1e338 <main@@Base+0xa708>
   1e0e4:	b	1e0f4 <main@@Base+0xa4c4>
   1e0e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0ec:	str	r0, [fp, #-4]
   1e0f0:	b	1e338 <main@@Base+0xa708>
   1e0f4:	b	1e32c <main@@Base+0xa6fc>
   1e0f8:	ldr	r0, [sp, #40]	; 0x28
   1e0fc:	ldr	r1, [sp, #44]	; 0x2c
   1e100:	movw	r2, #25963	; 0x656b
   1e104:	movt	r2, #28282	; 0x6e7a
   1e108:	subs	r0, r2, r0
   1e10c:	movw	r2, #28789	; 0x7075
   1e110:	movt	r2, #21089	; 0x5261
   1e114:	sbcs	r1, r2, r1
   1e118:	bcc	1e1cc <main@@Base+0xa59c>
   1e11c:	b	1e120 <main@@Base+0xa4f0>
   1e120:	ldrb	r0, [sp, #43]	; 0x2b
   1e124:	ldr	r1, [sp, #44]	; 0x2c
   1e128:	movw	r2, #26725	; 0x6865
   1e12c:	movt	r2, #20340	; 0x4f74
   1e130:	eor	r1, r1, r2
   1e134:	eor	r0, r0, #114	; 0x72
   1e138:	orr	r0, r1, r0, lsl #24
   1e13c:	cmp	r0, #0
   1e140:	bne	1e1bc <main@@Base+0xa58c>
   1e144:	b	1e148 <main@@Base+0xa518>
   1e148:	ldr	r0, [fp, #-8]
   1e14c:	ldr	r1, [fp, #-12]
   1e150:	str	r1, [fp, #-28]	; 0xffffffe4
   1e154:	ldr	r2, [fp, #-16]
   1e158:	ldr	r3, [fp, #12]
   1e15c:	movw	ip, #5
   1e160:	str	r3, [sp, #12]
   1e164:	mov	r3, ip
   1e168:	ldr	ip, [sp, #12]
   1e16c:	str	ip, [sp]
   1e170:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1e174:	str	r0, [fp, #-12]
   1e178:	ldr	r0, [fp, #-12]
   1e17c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e180:	cmp	r0, r1
   1e184:	beq	1e1ac <main@@Base+0xa57c>
   1e188:	ldr	r0, [fp, #8]
   1e18c:	mov	r1, #0
   1e190:	str	r1, [r0, #4]
   1e194:	mov	r1, #11
   1e198:	str	r1, [r0]
   1e19c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e1a0:	movw	r1, #0
   1e1a4:	str	r1, [r0]
   1e1a8:	b	1e1b8 <main@@Base+0xa588>
   1e1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1b0:	str	r0, [fp, #-4]
   1e1b4:	b	1e338 <main@@Base+0xa708>
   1e1b8:	b	1e1c8 <main@@Base+0xa598>
   1e1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1c0:	str	r0, [fp, #-4]
   1e1c4:	b	1e338 <main@@Base+0xa708>
   1e1c8:	b	1e328 <main@@Base+0xa6f8>
   1e1cc:	ldrh	r0, [sp, #42]	; 0x2a
   1e1d0:	ldr	r1, [sp, #44]	; 0x2c
   1e1d4:	movw	r2, #21870	; 0x556e
   1e1d8:	eor	r2, r2, r1, lsr #16
   1e1dc:	orr	r0, r0, r1, lsl #16
   1e1e0:	movw	r1, #25956	; 0x6564
   1e1e4:	movt	r1, #30067	; 0x7573
   1e1e8:	eor	r0, r0, r1
   1e1ec:	orr	r0, r0, r2
   1e1f0:	cmp	r0, #0
   1e1f4:	bne	1e270 <main@@Base+0xa640>
   1e1f8:	b	1e1fc <main@@Base+0xa5cc>
   1e1fc:	ldr	r0, [fp, #-8]
   1e200:	ldr	r1, [fp, #-12]
   1e204:	str	r1, [fp, #-28]	; 0xffffffe4
   1e208:	ldr	r2, [fp, #-16]
   1e20c:	ldr	r3, [fp, #12]
   1e210:	movw	ip, #6
   1e214:	str	r3, [sp, #8]
   1e218:	mov	r3, ip
   1e21c:	ldr	ip, [sp, #8]
   1e220:	str	ip, [sp]
   1e224:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1e228:	str	r0, [fp, #-12]
   1e22c:	ldr	r0, [fp, #-12]
   1e230:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e234:	cmp	r0, r1
   1e238:	beq	1e260 <main@@Base+0xa630>
   1e23c:	ldr	r0, [fp, #8]
   1e240:	mov	r1, #0
   1e244:	str	r1, [r0, #4]
   1e248:	mov	r1, #255	; 0xff
   1e24c:	str	r1, [r0]
   1e250:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e254:	movw	r1, #0
   1e258:	str	r1, [r0]
   1e25c:	b	1e26c <main@@Base+0xa63c>
   1e260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e264:	str	r0, [fp, #-4]
   1e268:	b	1e338 <main@@Base+0xa708>
   1e26c:	b	1e324 <main@@Base+0xa6f4>
   1e270:	ldr	r0, [sp, #40]	; 0x28
   1e274:	ldr	r1, [sp, #44]	; 0x2c
   1e278:	movw	r2, #28789	; 0x7075
   1e27c:	movt	r2, #21089	; 0x5261
   1e280:	eor	r1, r1, r2
   1e284:	movw	r2, #25964	; 0x656c
   1e288:	movt	r2, #28282	; 0x6e7a
   1e28c:	eor	r0, r0, r2
   1e290:	orr	r0, r0, r1
   1e294:	cmp	r0, #0
   1e298:	bne	1e314 <main@@Base+0xa6e4>
   1e29c:	b	1e2a0 <main@@Base+0xa670>
   1e2a0:	ldr	r0, [fp, #-8]
   1e2a4:	ldr	r1, [fp, #-12]
   1e2a8:	str	r1, [fp, #-28]	; 0xffffffe4
   1e2ac:	ldr	r2, [fp, #-16]
   1e2b0:	ldr	r3, [fp, #12]
   1e2b4:	movw	ip, #8
   1e2b8:	str	r3, [sp, #4]
   1e2bc:	mov	r3, ip
   1e2c0:	ldr	ip, [sp, #4]
   1e2c4:	str	ip, [sp]
   1e2c8:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1e2cc:	str	r0, [fp, #-12]
   1e2d0:	ldr	r0, [fp, #-12]
   1e2d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e2d8:	cmp	r0, r1
   1e2dc:	beq	1e304 <main@@Base+0xa6d4>
   1e2e0:	ldr	r0, [fp, #8]
   1e2e4:	mov	r1, #0
   1e2e8:	str	r1, [r0, #4]
   1e2ec:	mov	r1, #8
   1e2f0:	str	r1, [r0]
   1e2f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e2f8:	movw	r1, #0
   1e2fc:	str	r1, [r0]
   1e300:	b	1e310 <main@@Base+0xa6e0>
   1e304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e308:	str	r0, [fp, #-4]
   1e30c:	b	1e338 <main@@Base+0xa708>
   1e310:	b	1e320 <main@@Base+0xa6f0>
   1e314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e318:	str	r0, [fp, #-4]
   1e31c:	b	1e338 <main@@Base+0xa708>
   1e320:	b	1e324 <main@@Base+0xa6f4>
   1e324:	b	1e328 <main@@Base+0xa6f8>
   1e328:	b	1e32c <main@@Base+0xa6fc>
   1e32c:	b	1e330 <main@@Base+0xa700>
   1e330:	ldr	r0, [fp, #-12]
   1e334:	str	r0, [fp, #-4]
   1e338:	ldr	r0, [fp, #-4]
   1e33c:	mov	sp, fp
   1e340:	pop	{fp, pc}
   1e344:	push	{fp, lr}
   1e348:	mov	fp, sp
   1e34c:	sub	sp, sp, #64	; 0x40
   1e350:	ldr	ip, [fp, #12]
   1e354:	ldr	lr, [fp, #8]
   1e358:	str	r0, [fp, #-8]
   1e35c:	str	r1, [fp, #-12]
   1e360:	str	r2, [fp, #-16]
   1e364:	str	r3, [fp, #-20]	; 0xffffffec
   1e368:	ldr	r0, [fp, #-12]
   1e36c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e370:	ldr	r0, [fp, #-12]
   1e374:	ldr	r1, [fp, #-16]
   1e378:	str	ip, [sp, #20]
   1e37c:	str	lr, [sp, #16]
   1e380:	bl	17bdc <main@@Base+0x3fac>
   1e384:	str	r1, [sp, #28]
   1e388:	str	r0, [sp, #24]
   1e38c:	ldr	r0, [sp, #28]
   1e390:	bic	r0, r0, #255	; 0xff
   1e394:	movw	r1, #28416	; 0x6f00
   1e398:	movt	r1, #18031	; 0x466f
   1e39c:	teq	r0, r1
   1e3a0:	bne	1e414 <main@@Base+0xa7e4>
   1e3a4:	b	1e3a8 <main@@Base+0xa778>
   1e3a8:	ldr	r0, [fp, #-8]
   1e3ac:	ldr	r1, [fp, #-12]
   1e3b0:	str	r1, [fp, #-28]	; 0xffffffe4
   1e3b4:	ldr	r2, [fp, #-16]
   1e3b8:	ldr	r3, [fp, #12]
   1e3bc:	movw	ip, #3
   1e3c0:	str	r3, [sp, #12]
   1e3c4:	mov	r3, ip
   1e3c8:	ldr	ip, [sp, #12]
   1e3cc:	str	ip, [sp]
   1e3d0:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1e3d4:	str	r0, [fp, #-12]
   1e3d8:	ldr	r0, [fp, #-12]
   1e3dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e3e0:	cmp	r0, r1
   1e3e4:	beq	1e40c <main@@Base+0xa7dc>
   1e3e8:	ldr	r0, [fp, #8]
   1e3ec:	mov	r1, #0
   1e3f0:	str	r1, [r0, #4]
   1e3f4:	mov	r1, #17
   1e3f8:	str	r1, [r0]
   1e3fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e400:	movw	r1, #0
   1e404:	str	r1, [r0]
   1e408:	b	1e410 <main@@Base+0xa7e0>
   1e40c:	b	1e41c <main@@Base+0xa7ec>
   1e410:	b	1e418 <main@@Base+0xa7e8>
   1e414:	b	1e41c <main@@Base+0xa7ec>
   1e418:	b	1e514 <main@@Base+0xa8e4>
   1e41c:	ldr	r0, [sp, #24]
   1e420:	ldr	r1, [sp, #28]
   1e424:	movw	r2, #25452	; 0x636c
   1e428:	movt	r2, #18798	; 0x496e
   1e42c:	eor	r1, r1, r2
   1e430:	movw	r2, #25942	; 0x6556
   1e434:	movt	r2, #30052	; 0x7564
   1e438:	eor	r0, r0, r2
   1e43c:	orr	r0, r0, r1
   1e440:	cmp	r0, #0
   1e444:	bne	1e504 <main@@Base+0xa8d4>
   1e448:	b	1e44c <main@@Base+0xa81c>
   1e44c:	ldr	r0, [fp, #-12]
   1e450:	add	r0, r0, #8
   1e454:	str	r0, [fp, #-12]
   1e458:	ldr	r0, [fp, #-12]
   1e45c:	ldr	r1, [fp, #-16]
   1e460:	bl	17bdc <main@@Base+0x3fac>
   1e464:	str	r1, [sp, #28]
   1e468:	str	r0, [sp, #24]
   1e46c:	ldrh	r0, [sp, #30]
   1e470:	movw	r1, #0
   1e474:	movt	r1, #24940	; 0x616c
   1e478:	teq	r1, r0, lsl #16
   1e47c:	bne	1e4f4 <main@@Base+0xa8c4>
   1e480:	b	1e484 <main@@Base+0xa854>
   1e484:	ldr	r0, [fp, #-8]
   1e488:	ldr	r1, [fp, #-12]
   1e48c:	str	r1, [fp, #-28]	; 0xffffffe4
   1e490:	ldr	r2, [fp, #-16]
   1e494:	ldr	r3, [fp, #12]
   1e498:	movw	ip, #2
   1e49c:	str	r3, [sp, #8]
   1e4a0:	mov	r3, ip
   1e4a4:	ldr	ip, [sp, #8]
   1e4a8:	str	ip, [sp]
   1e4ac:	bl	2ba20 <flatcc_json_parser_match_constant@@Base>
   1e4b0:	str	r0, [fp, #-12]
   1e4b4:	ldr	r0, [fp, #-12]
   1e4b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e4bc:	cmp	r0, r1
   1e4c0:	beq	1e4e4 <main@@Base+0xa8b4>
   1e4c4:	ldr	r0, [fp, #8]
   1e4c8:	mov	r1, #0
   1e4cc:	str	r1, [r0, #4]
   1e4d0:	str	r1, [r0]
   1e4d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e4d8:	movw	r1, #0
   1e4dc:	str	r1, [r0]
   1e4e0:	b	1e4f0 <main@@Base+0xa8c0>
   1e4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4e8:	str	r0, [fp, #-4]
   1e4ec:	b	1e51c <main@@Base+0xa8ec>
   1e4f0:	b	1e500 <main@@Base+0xa8d0>
   1e4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4f8:	str	r0, [fp, #-4]
   1e4fc:	b	1e51c <main@@Base+0xa8ec>
   1e500:	b	1e510 <main@@Base+0xa8e0>
   1e504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e508:	str	r0, [fp, #-4]
   1e50c:	b	1e51c <main@@Base+0xa8ec>
   1e510:	b	1e514 <main@@Base+0xa8e4>
   1e514:	ldr	r0, [fp, #-12]
   1e518:	str	r0, [fp, #-4]
   1e51c:	ldr	r0, [fp, #-4]
   1e520:	mov	sp, fp
   1e524:	pop	{fp, pc}
   1e528:	push	{r4, sl, fp, lr}
   1e52c:	add	fp, sp, #8
   1e530:	sub	sp, sp, #32
   1e534:	ldr	ip, [fp, #12]
   1e538:	ldr	lr, [fp, #8]
   1e53c:	ldr	r4, [fp, #16]
   1e540:	str	r0, [fp, #-16]
   1e544:	str	r1, [sp, #20]
   1e548:	str	r2, [sp, #16]
   1e54c:	str	r3, [sp, #12]
   1e550:	str	ip, [sp, #4]
   1e554:	str	lr, [sp]
   1e558:	ldr	r0, [sp, #12]
   1e55c:	cmp	r0, #0
   1e560:	beq	1e5ac <main@@Base+0xa97c>
   1e564:	ldr	r0, [sp]
   1e568:	ldr	r1, [sp, #4]
   1e56c:	subs	r0, r0, #129	; 0x81
   1e570:	sbcs	r1, r1, #0
   1e574:	bcc	1e598 <main@@Base+0xa968>
   1e578:	b	1e57c <main@@Base+0xa94c>
   1e57c:	ldr	r0, [fp, #-16]
   1e580:	ldr	r1, [sp, #20]
   1e584:	ldr	r2, [sp, #16]
   1e588:	movw	r3, #8
   1e58c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1e590:	str	r0, [fp, #-12]
   1e594:	b	1e5f4 <main@@Base+0xa9c4>
   1e598:	ldr	r0, [sp]
   1e59c:	rsb	r0, r0, #0
   1e5a0:	ldr	r1, [fp, #16]
   1e5a4:	strb	r0, [r1]
   1e5a8:	b	1e5ec <main@@Base+0xa9bc>
   1e5ac:	ldr	r0, [sp]
   1e5b0:	ldr	r1, [sp, #4]
   1e5b4:	subs	r0, r0, #128	; 0x80
   1e5b8:	sbcs	r1, r1, #0
   1e5bc:	bcc	1e5e0 <main@@Base+0xa9b0>
   1e5c0:	b	1e5c4 <main@@Base+0xa994>
   1e5c4:	ldr	r0, [fp, #-16]
   1e5c8:	ldr	r1, [sp, #20]
   1e5cc:	ldr	r2, [sp, #16]
   1e5d0:	movw	r3, #7
   1e5d4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1e5d8:	str	r0, [fp, #-12]
   1e5dc:	b	1e5f4 <main@@Base+0xa9c4>
   1e5e0:	ldrb	r0, [sp]
   1e5e4:	ldr	r1, [fp, #16]
   1e5e8:	strb	r0, [r1]
   1e5ec:	ldr	r0, [sp, #20]
   1e5f0:	str	r0, [fp, #-12]
   1e5f4:	ldr	r0, [fp, #-12]
   1e5f8:	sub	sp, fp, #8
   1e5fc:	pop	{r4, sl, fp, pc}
   1e600:	push	{fp, lr}
   1e604:	mov	fp, sp
   1e608:	sub	sp, sp, #16
   1e60c:	str	r0, [fp, #-4]
   1e610:	str	r1, [sp, #8]
   1e614:	str	r2, [sp, #4]
   1e618:	ldr	r0, [fp, #-4]
   1e61c:	ldr	r1, [sp, #8]
   1e620:	ldr	r2, [sp, #4]
   1e624:	bl	17b30 <main@@Base+0x3f00>
   1e628:	str	r0, [sp, #8]
   1e62c:	ldr	r0, [fp, #-4]
   1e630:	ldr	r0, [r0, #12]
   1e634:	cmp	r0, #0
   1e638:	bne	1e650 <main@@Base+0xaa20>
   1e63c:	ldr	r0, [fp, #-4]
   1e640:	ldr	r1, [sp, #8]
   1e644:	ldr	r2, [sp, #4]
   1e648:	bl	1d020 <main@@Base+0x93f0>
   1e64c:	str	r0, [sp, #8]
   1e650:	ldr	r0, [sp, #8]
   1e654:	mov	sp, fp
   1e658:	pop	{fp, pc}
   1e65c:	sub	sp, sp, #4
   1e660:	strb	r0, [sp, #3]
   1e664:	ldrsb	r0, [sp, #3]
   1e668:	add	sp, sp, #4
   1e66c:	bx	lr
   1e670:	push	{r4, sl, fp, lr}
   1e674:	add	fp, sp, #8
   1e678:	sub	sp, sp, #32
   1e67c:	ldr	ip, [fp, #12]
   1e680:	ldr	lr, [fp, #8]
   1e684:	ldr	r4, [fp, #16]
   1e688:	str	r0, [fp, #-16]
   1e68c:	str	r1, [sp, #20]
   1e690:	str	r2, [sp, #16]
   1e694:	str	r3, [sp, #12]
   1e698:	str	ip, [sp, #4]
   1e69c:	str	lr, [sp]
   1e6a0:	ldr	r0, [sp, #12]
   1e6a4:	cmp	r0, #0
   1e6a8:	beq	1e6c8 <main@@Base+0xaa98>
   1e6ac:	ldr	r0, [fp, #-16]
   1e6b0:	ldr	r1, [sp, #20]
   1e6b4:	ldr	r2, [sp, #16]
   1e6b8:	movw	r3, #8
   1e6bc:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1e6c0:	str	r0, [fp, #-12]
   1e6c4:	b	1e710 <main@@Base+0xaae0>
   1e6c8:	ldr	r0, [sp]
   1e6cc:	ldr	r1, [sp, #4]
   1e6d0:	subs	r0, r0, #256	; 0x100
   1e6d4:	sbcs	r1, r1, #0
   1e6d8:	bcc	1e6fc <main@@Base+0xaacc>
   1e6dc:	b	1e6e0 <main@@Base+0xaab0>
   1e6e0:	ldr	r0, [fp, #-16]
   1e6e4:	ldr	r1, [sp, #20]
   1e6e8:	ldr	r2, [sp, #16]
   1e6ec:	movw	r3, #7
   1e6f0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1e6f4:	str	r0, [fp, #-12]
   1e6f8:	b	1e710 <main@@Base+0xaae0>
   1e6fc:	ldrb	r0, [sp]
   1e700:	ldr	r1, [fp, #16]
   1e704:	strb	r0, [r1]
   1e708:	ldr	r0, [sp, #20]
   1e70c:	str	r0, [fp, #-12]
   1e710:	ldr	r0, [fp, #-12]
   1e714:	sub	sp, fp, #8
   1e718:	pop	{r4, sl, fp, pc}
   1e71c:	sub	sp, sp, #4
   1e720:	strb	r0, [sp, #3]
   1e724:	ldrb	r0, [sp, #3]
   1e728:	add	sp, sp, #4
   1e72c:	bx	lr
   1e730:	push	{r4, sl, fp, lr}
   1e734:	add	fp, sp, #8
   1e738:	sub	sp, sp, #32
   1e73c:	ldr	ip, [fp, #12]
   1e740:	ldr	lr, [fp, #8]
   1e744:	ldr	r4, [fp, #16]
   1e748:	str	r0, [fp, #-16]
   1e74c:	str	r1, [sp, #20]
   1e750:	str	r2, [sp, #16]
   1e754:	str	r3, [sp, #12]
   1e758:	str	ip, [sp, #4]
   1e75c:	str	lr, [sp]
   1e760:	ldr	r0, [sp, #12]
   1e764:	cmp	r0, #0
   1e768:	beq	1e7b8 <main@@Base+0xab88>
   1e76c:	ldr	r0, [sp]
   1e770:	ldr	r1, [sp, #4]
   1e774:	movw	r2, #32769	; 0x8001
   1e778:	subs	r0, r0, r2
   1e77c:	sbcs	r1, r1, #0
   1e780:	bcc	1e7a4 <main@@Base+0xab74>
   1e784:	b	1e788 <main@@Base+0xab58>
   1e788:	ldr	r0, [fp, #-16]
   1e78c:	ldr	r1, [sp, #20]
   1e790:	ldr	r2, [sp, #16]
   1e794:	movw	r3, #8
   1e798:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1e79c:	str	r0, [fp, #-12]
   1e7a0:	b	1e800 <main@@Base+0xabd0>
   1e7a4:	ldr	r0, [sp]
   1e7a8:	rsb	r0, r0, #0
   1e7ac:	ldr	r1, [fp, #16]
   1e7b0:	strh	r0, [r1]
   1e7b4:	b	1e7f8 <main@@Base+0xabc8>
   1e7b8:	ldr	r0, [sp]
   1e7bc:	ldr	r1, [sp, #4]
   1e7c0:	subs	r0, r0, #32768	; 0x8000
   1e7c4:	sbcs	r1, r1, #0
   1e7c8:	bcc	1e7ec <main@@Base+0xabbc>
   1e7cc:	b	1e7d0 <main@@Base+0xaba0>
   1e7d0:	ldr	r0, [fp, #-16]
   1e7d4:	ldr	r1, [sp, #20]
   1e7d8:	ldr	r2, [sp, #16]
   1e7dc:	movw	r3, #7
   1e7e0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1e7e4:	str	r0, [fp, #-12]
   1e7e8:	b	1e800 <main@@Base+0xabd0>
   1e7ec:	ldrh	r0, [sp]
   1e7f0:	ldr	r1, [fp, #16]
   1e7f4:	strh	r0, [r1]
   1e7f8:	ldr	r0, [sp, #20]
   1e7fc:	str	r0, [fp, #-12]
   1e800:	ldr	r0, [fp, #-12]
   1e804:	sub	sp, fp, #8
   1e808:	pop	{r4, sl, fp, pc}
   1e80c:	sub	sp, sp, #4
   1e810:	strh	r0, [sp, #2]
   1e814:	ldrsh	r0, [sp, #2]
   1e818:	add	sp, sp, #4
   1e81c:	bx	lr
   1e820:	push	{fp, lr}
   1e824:	mov	fp, sp
   1e828:	sub	sp, sp, #16
   1e82c:	str	r0, [sp, #8]
   1e830:	str	r1, [sp, #4]
   1e834:	str	r2, [sp]
   1e838:	ldr	r0, [sp]
   1e83c:	ldr	r1, [sp, #4]
   1e840:	sub	r0, r0, r1
   1e844:	cmp	r0, #4
   1e848:	blt	1e87c <main@@Base+0xac4c>
   1e84c:	ldr	r0, [sp, #4]
   1e850:	ldr	r0, [r0]
   1e854:	movw	r1, #30062	; 0x756e
   1e858:	movt	r1, #27756	; 0x6c6c
   1e85c:	subs	r0, r0, r1
   1e860:	movwne	r0, #1
   1e864:	cmp	r0, #0
   1e868:	bne	1e87c <main@@Base+0xac4c>
   1e86c:	ldr	r0, [sp, #4]
   1e870:	add	r0, r0, #4
   1e874:	str	r0, [fp, #-4]
   1e878:	b	1e894 <main@@Base+0xac64>
   1e87c:	ldr	r0, [sp, #8]
   1e880:	ldr	r1, [sp, #4]
   1e884:	ldr	r2, [sp]
   1e888:	movw	r3, #26
   1e88c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1e890:	str	r0, [fp, #-4]
   1e894:	ldr	r0, [fp, #-4]
   1e898:	mov	sp, fp
   1e89c:	pop	{fp, pc}
   1e8a0:	push	{fp, lr}
   1e8a4:	mov	fp, sp
   1e8a8:	sub	sp, sp, #64	; 0x40
   1e8ac:	str	r0, [fp, #-8]
   1e8b0:	str	r1, [fp, #-12]
   1e8b4:	str	r2, [fp, #-16]
   1e8b8:	str	r3, [fp, #-20]	; 0xffffffec
   1e8bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e8c0:	movw	r1, #0
   1e8c4:	str	r1, [r0]
   1e8c8:	ldr	r0, [fp, #-8]
   1e8cc:	ldr	r0, [r0]
   1e8d0:	movw	r1, #4
   1e8d4:	bl	25df4 <flatcc_builder_start_table@@Base>
   1e8d8:	cmp	r0, #0
   1e8dc:	beq	1e8e4 <main@@Base+0xacb4>
   1e8e0:	b	1eec4 <main@@Base+0xb294>
   1e8e4:	ldr	r0, [fp, #-8]
   1e8e8:	ldr	r1, [fp, #-12]
   1e8ec:	ldr	r2, [fp, #-16]
   1e8f0:	sub	r3, fp, #24
   1e8f4:	bl	17a4c <main@@Base+0x3e1c>
   1e8f8:	str	r0, [fp, #-12]
   1e8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e900:	cmp	r0, #0
   1e904:	beq	1ee84 <main@@Base+0xb254>
   1e908:	ldr	r0, [fp, #-8]
   1e90c:	ldr	r1, [fp, #-12]
   1e910:	ldr	r2, [fp, #-16]
   1e914:	bl	17b30 <main@@Base+0x3f00>
   1e918:	str	r0, [fp, #-12]
   1e91c:	ldr	r0, [fp, #-12]
   1e920:	ldr	r1, [fp, #-16]
   1e924:	bl	17bdc <main@@Base+0x3fac>
   1e928:	str	r1, [sp, #20]
   1e92c:	str	r0, [sp, #16]
   1e930:	ldrh	r0, [sp, #18]
   1e934:	ldr	r1, [sp, #20]
   1e938:	movw	r2, #25455	; 0x636f
   1e93c:	eor	r2, r2, r1, lsr #16
   1e940:	orr	r0, r0, r1, lsl #16
   1e944:	movw	r1, #29234	; 0x7232
   1e948:	movt	r1, #27759	; 0x6c6f
   1e94c:	eor	r0, r0, r1
   1e950:	orr	r0, r0, r2
   1e954:	cmp	r0, #0
   1e958:	bne	1ea7c <main@@Base+0xae4c>
   1e95c:	b	1e960 <main@@Base+0xad30>
   1e960:	ldr	r0, [fp, #-8]
   1e964:	ldr	r1, [fp, #-12]
   1e968:	str	r1, [sp, #24]
   1e96c:	ldr	r2, [fp, #-16]
   1e970:	movw	r3, #6
   1e974:	bl	17c14 <main@@Base+0x3fe4>
   1e978:	str	r0, [fp, #-12]
   1e97c:	ldr	r0, [sp, #24]
   1e980:	ldr	r1, [fp, #-12]
   1e984:	cmp	r0, r1
   1e988:	beq	1ea74 <main@@Base+0xae44>
   1e98c:	movw	r0, #0
   1e990:	strb	r0, [sp, #15]
   1e994:	ldr	r0, [fp, #-8]
   1e998:	ldr	r1, [fp, #-12]
   1e99c:	str	r1, [sp, #24]
   1e9a0:	ldr	r2, [fp, #-16]
   1e9a4:	add	r3, sp, #15
   1e9a8:	bl	19130 <main@@Base+0x5500>
   1e9ac:	str	r0, [fp, #-12]
   1e9b0:	ldr	r0, [sp, #24]
   1e9b4:	ldr	r1, [fp, #-12]
   1e9b8:	cmp	r0, r1
   1e9bc:	bne	1ea10 <main@@Base+0xade0>
   1e9c0:	ldr	r0, [pc, #1324]	; 1eef4 <main@@Base+0xb2c4>
   1e9c4:	add	r3, pc, r0
   1e9c8:	ldr	r0, [fp, #-8]
   1e9cc:	ldr	r1, [fp, #-12]
   1e9d0:	str	r1, [sp, #24]
   1e9d4:	ldr	r2, [fp, #-16]
   1e9d8:	add	ip, sp, #15
   1e9dc:	str	ip, [sp]
   1e9e0:	bl	1920c <main@@Base+0x55dc>
   1e9e4:	str	r0, [fp, #-12]
   1e9e8:	ldr	r0, [fp, #-12]
   1e9ec:	ldr	r1, [sp, #24]
   1e9f0:	cmp	r0, r1
   1e9f4:	beq	1ea08 <main@@Base+0xadd8>
   1e9f8:	ldr	r0, [fp, #-12]
   1e9fc:	ldr	r1, [fp, #-16]
   1ea00:	cmp	r0, r1
   1ea04:	bne	1ea0c <main@@Base+0xaddc>
   1ea08:	b	1eec4 <main@@Base+0xb294>
   1ea0c:	b	1ea10 <main@@Base+0xade0>
   1ea10:	ldrsb	r0, [sp, #15]
   1ea14:	cmp	r0, #2
   1ea18:	bne	1ea30 <main@@Base+0xae00>
   1ea1c:	ldr	r0, [fp, #-8]
   1ea20:	ldr	r0, [r0, #8]
   1ea24:	and	r0, r0, #2
   1ea28:	cmp	r0, #0
   1ea2c:	beq	1ea70 <main@@Base+0xae40>
   1ea30:	ldr	r0, [fp, #-8]
   1ea34:	ldr	r0, [r0]
   1ea38:	movw	r1, #1
   1ea3c:	str	r1, [sp, #8]
   1ea40:	ldr	r2, [sp, #8]
   1ea44:	movw	r3, #1
   1ea48:	uxth	r3, r3
   1ea4c:	bl	27698 <flatcc_builder_table_add@@Base>
   1ea50:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea54:	movw	r1, #0
   1ea58:	cmp	r0, r1
   1ea5c:	bne	1ea64 <main@@Base+0xae34>
   1ea60:	b	1eec4 <main@@Base+0xb294>
   1ea64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ea68:	ldrsb	r1, [sp, #15]
   1ea6c:	bl	19438 <main@@Base+0x5808>
   1ea70:	b	1ea78 <main@@Base+0xae48>
   1ea74:	b	1ebc8 <main@@Base+0xaf98>
   1ea78:	b	1ebc4 <main@@Base+0xaf94>
   1ea7c:	ldrb	r0, [sp, #19]
   1ea80:	ldr	r1, [sp, #20]
   1ea84:	movw	r2, #27759	; 0x6c6f
   1ea88:	movt	r2, #25455	; 0x636f
   1ea8c:	eor	r1, r1, r2
   1ea90:	eor	r0, r0, #114	; 0x72
   1ea94:	orr	r0, r1, r0, lsl #24
   1ea98:	cmp	r0, #0
   1ea9c:	bne	1ebbc <main@@Base+0xaf8c>
   1eaa0:	b	1eaa4 <main@@Base+0xae74>
   1eaa4:	ldr	r0, [fp, #-8]
   1eaa8:	ldr	r1, [fp, #-12]
   1eaac:	str	r1, [sp, #24]
   1eab0:	ldr	r2, [fp, #-16]
   1eab4:	movw	r3, #5
   1eab8:	bl	17c14 <main@@Base+0x3fe4>
   1eabc:	str	r0, [fp, #-12]
   1eac0:	ldr	r0, [sp, #24]
   1eac4:	ldr	r1, [fp, #-12]
   1eac8:	cmp	r0, r1
   1eacc:	beq	1ebb4 <main@@Base+0xaf84>
   1ead0:	movw	r0, #0
   1ead4:	strb	r0, [sp, #14]
   1ead8:	ldr	r0, [fp, #-8]
   1eadc:	ldr	r1, [fp, #-12]
   1eae0:	str	r1, [sp, #24]
   1eae4:	ldr	r2, [fp, #-16]
   1eae8:	add	r3, sp, #14
   1eaec:	bl	19130 <main@@Base+0x5500>
   1eaf0:	str	r0, [fp, #-12]
   1eaf4:	ldr	r0, [sp, #24]
   1eaf8:	ldr	r1, [fp, #-12]
   1eafc:	cmp	r0, r1
   1eb00:	bne	1eb54 <main@@Base+0xaf24>
   1eb04:	ldr	r0, [pc, #988]	; 1eee8 <main@@Base+0xb2b8>
   1eb08:	add	r3, pc, r0
   1eb0c:	ldr	r0, [fp, #-8]
   1eb10:	ldr	r1, [fp, #-12]
   1eb14:	str	r1, [sp, #24]
   1eb18:	ldr	r2, [fp, #-16]
   1eb1c:	add	ip, sp, #14
   1eb20:	str	ip, [sp]
   1eb24:	bl	1920c <main@@Base+0x55dc>
   1eb28:	str	r0, [fp, #-12]
   1eb2c:	ldr	r0, [fp, #-12]
   1eb30:	ldr	r1, [sp, #24]
   1eb34:	cmp	r0, r1
   1eb38:	beq	1eb4c <main@@Base+0xaf1c>
   1eb3c:	ldr	r0, [fp, #-12]
   1eb40:	ldr	r1, [fp, #-16]
   1eb44:	cmp	r0, r1
   1eb48:	bne	1eb50 <main@@Base+0xaf20>
   1eb4c:	b	1eec4 <main@@Base+0xb294>
   1eb50:	b	1eb54 <main@@Base+0xaf24>
   1eb54:	ldrsb	r0, [sp, #14]
   1eb58:	cmp	r0, #2
   1eb5c:	bne	1eb74 <main@@Base+0xaf44>
   1eb60:	ldr	r0, [fp, #-8]
   1eb64:	ldr	r0, [r0, #8]
   1eb68:	and	r0, r0, #2
   1eb6c:	cmp	r0, #0
   1eb70:	beq	1ebb0 <main@@Base+0xaf80>
   1eb74:	ldr	r0, [fp, #-8]
   1eb78:	ldr	r0, [r0]
   1eb7c:	movw	r1, #0
   1eb80:	movw	r2, #1
   1eb84:	movw	r3, #1
   1eb88:	uxth	r3, r3
   1eb8c:	bl	27698 <flatcc_builder_table_add@@Base>
   1eb90:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb94:	movw	r1, #0
   1eb98:	cmp	r0, r1
   1eb9c:	bne	1eba4 <main@@Base+0xaf74>
   1eba0:	b	1eec4 <main@@Base+0xb294>
   1eba4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1eba8:	ldrsb	r1, [sp, #14]
   1ebac:	bl	19438 <main@@Base+0x5808>
   1ebb0:	b	1ebb8 <main@@Base+0xaf88>
   1ebb4:	b	1ebc8 <main@@Base+0xaf98>
   1ebb8:	b	1ebc0 <main@@Base+0xaf90>
   1ebbc:	b	1ebc8 <main@@Base+0xaf98>
   1ebc0:	b	1ebc4 <main@@Base+0xaf94>
   1ebc4:	b	1ee68 <main@@Base+0xb238>
   1ebc8:	ldr	r0, [sp, #20]
   1ebcc:	bic	r0, r0, #255	; 0xff
   1ebd0:	movw	r1, #12800	; 0x3200
   1ebd4:	movt	r1, #30051	; 0x7563
   1ebd8:	teq	r0, r1
   1ebdc:	bne	1ed0c <main@@Base+0xb0dc>
   1ebe0:	b	1ebe4 <main@@Base+0xafb4>
   1ebe4:	ldr	r0, [fp, #-8]
   1ebe8:	ldr	r1, [fp, #-12]
   1ebec:	str	r1, [sp, #24]
   1ebf0:	ldr	r2, [fp, #-16]
   1ebf4:	movw	r3, #3
   1ebf8:	bl	17c14 <main@@Base+0x3fe4>
   1ebfc:	str	r0, [fp, #-12]
   1ec00:	ldr	r0, [sp, #24]
   1ec04:	ldr	r1, [fp, #-12]
   1ec08:	cmp	r0, r1
   1ec0c:	beq	1ecf4 <main@@Base+0xb0c4>
   1ec10:	movw	r0, #0
   1ec14:	strb	r0, [sp, #13]
   1ec18:	ldr	r0, [fp, #-8]
   1ec1c:	ldr	r1, [fp, #-12]
   1ec20:	str	r1, [sp, #24]
   1ec24:	ldr	r2, [fp, #-16]
   1ec28:	add	r3, sp, #13
   1ec2c:	bl	19548 <main@@Base+0x5918>
   1ec30:	str	r0, [fp, #-12]
   1ec34:	ldr	r0, [sp, #24]
   1ec38:	ldr	r1, [fp, #-12]
   1ec3c:	cmp	r0, r1
   1ec40:	bne	1ec94 <main@@Base+0xb064>
   1ec44:	ldr	r0, [pc, #676]	; 1eef0 <main@@Base+0xb2c0>
   1ec48:	add	r3, pc, r0
   1ec4c:	ldr	r0, [fp, #-8]
   1ec50:	ldr	r1, [fp, #-12]
   1ec54:	str	r1, [sp, #24]
   1ec58:	ldr	r2, [fp, #-16]
   1ec5c:	add	ip, sp, #13
   1ec60:	str	ip, [sp]
   1ec64:	bl	19624 <main@@Base+0x59f4>
   1ec68:	str	r0, [fp, #-12]
   1ec6c:	ldr	r0, [fp, #-12]
   1ec70:	ldr	r1, [sp, #24]
   1ec74:	cmp	r0, r1
   1ec78:	beq	1ec8c <main@@Base+0xb05c>
   1ec7c:	ldr	r0, [fp, #-12]
   1ec80:	ldr	r1, [fp, #-16]
   1ec84:	cmp	r0, r1
   1ec88:	bne	1ec90 <main@@Base+0xb060>
   1ec8c:	b	1eec4 <main@@Base+0xb294>
   1ec90:	b	1ec94 <main@@Base+0xb064>
   1ec94:	ldrb	r0, [sp, #13]
   1ec98:	cmp	r0, #2
   1ec9c:	bne	1ecb4 <main@@Base+0xb084>
   1eca0:	ldr	r0, [fp, #-8]
   1eca4:	ldr	r0, [r0, #8]
   1eca8:	and	r0, r0, #2
   1ecac:	cmp	r0, #0
   1ecb0:	beq	1ecf0 <main@@Base+0xb0c0>
   1ecb4:	ldr	r0, [fp, #-8]
   1ecb8:	ldr	r0, [r0]
   1ecbc:	movw	r1, #3
   1ecc0:	movw	r2, #1
   1ecc4:	movw	r3, #1
   1ecc8:	uxth	r3, r3
   1eccc:	bl	27698 <flatcc_builder_table_add@@Base>
   1ecd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1ecd4:	movw	r1, #0
   1ecd8:	cmp	r0, r1
   1ecdc:	bne	1ece4 <main@@Base+0xb0b4>
   1ece0:	b	1eec4 <main@@Base+0xb294>
   1ece4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ece8:	ldrb	r1, [sp, #13]
   1ecec:	bl	19850 <main@@Base+0x5c20>
   1ecf0:	b	1ed08 <main@@Base+0xb0d8>
   1ecf4:	ldr	r0, [fp, #-8]
   1ecf8:	ldr	r1, [fp, #-12]
   1ecfc:	ldr	r2, [fp, #-16]
   1ed00:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1ed04:	str	r0, [fp, #-12]
   1ed08:	b	1ee64 <main@@Base+0xb234>
   1ed0c:	ldrh	r0, [sp, #22]
   1ed10:	movw	r1, #0
   1ed14:	movt	r1, #30051	; 0x7563
   1ed18:	teq	r1, r0, lsl #16
   1ed1c:	bne	1ee4c <main@@Base+0xb21c>
   1ed20:	b	1ed24 <main@@Base+0xb0f4>
   1ed24:	ldr	r0, [fp, #-8]
   1ed28:	ldr	r1, [fp, #-12]
   1ed2c:	str	r1, [sp, #24]
   1ed30:	ldr	r2, [fp, #-16]
   1ed34:	movw	r3, #2
   1ed38:	bl	17c14 <main@@Base+0x3fe4>
   1ed3c:	str	r0, [fp, #-12]
   1ed40:	ldr	r0, [sp, #24]
   1ed44:	ldr	r1, [fp, #-12]
   1ed48:	cmp	r0, r1
   1ed4c:	beq	1ee34 <main@@Base+0xb204>
   1ed50:	movw	r0, #0
   1ed54:	strb	r0, [sp, #12]
   1ed58:	ldr	r0, [fp, #-8]
   1ed5c:	ldr	r1, [fp, #-12]
   1ed60:	str	r1, [sp, #24]
   1ed64:	ldr	r2, [fp, #-16]
   1ed68:	add	r3, sp, #12
   1ed6c:	bl	19548 <main@@Base+0x5918>
   1ed70:	str	r0, [fp, #-12]
   1ed74:	ldr	r0, [sp, #24]
   1ed78:	ldr	r1, [fp, #-12]
   1ed7c:	cmp	r0, r1
   1ed80:	bne	1edd4 <main@@Base+0xb1a4>
   1ed84:	ldr	r0, [pc, #352]	; 1eeec <main@@Base+0xb2bc>
   1ed88:	add	r3, pc, r0
   1ed8c:	ldr	r0, [fp, #-8]
   1ed90:	ldr	r1, [fp, #-12]
   1ed94:	str	r1, [sp, #24]
   1ed98:	ldr	r2, [fp, #-16]
   1ed9c:	add	ip, sp, #12
   1eda0:	str	ip, [sp]
   1eda4:	bl	19624 <main@@Base+0x59f4>
   1eda8:	str	r0, [fp, #-12]
   1edac:	ldr	r0, [fp, #-12]
   1edb0:	ldr	r1, [sp, #24]
   1edb4:	cmp	r0, r1
   1edb8:	beq	1edcc <main@@Base+0xb19c>
   1edbc:	ldr	r0, [fp, #-12]
   1edc0:	ldr	r1, [fp, #-16]
   1edc4:	cmp	r0, r1
   1edc8:	bne	1edd0 <main@@Base+0xb1a0>
   1edcc:	b	1eec4 <main@@Base+0xb294>
   1edd0:	b	1edd4 <main@@Base+0xb1a4>
   1edd4:	ldrb	r0, [sp, #12]
   1edd8:	cmp	r0, #2
   1eddc:	bne	1edf4 <main@@Base+0xb1c4>
   1ede0:	ldr	r0, [fp, #-8]
   1ede4:	ldr	r0, [r0, #8]
   1ede8:	and	r0, r0, #2
   1edec:	cmp	r0, #0
   1edf0:	beq	1ee30 <main@@Base+0xb200>
   1edf4:	ldr	r0, [fp, #-8]
   1edf8:	ldr	r0, [r0]
   1edfc:	movw	r1, #2
   1ee00:	movw	r2, #1
   1ee04:	movw	r3, #1
   1ee08:	uxth	r3, r3
   1ee0c:	bl	27698 <flatcc_builder_table_add@@Base>
   1ee10:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee14:	movw	r1, #0
   1ee18:	cmp	r0, r1
   1ee1c:	bne	1ee24 <main@@Base+0xb1f4>
   1ee20:	b	1eec4 <main@@Base+0xb294>
   1ee24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ee28:	ldrb	r1, [sp, #12]
   1ee2c:	bl	19850 <main@@Base+0x5c20>
   1ee30:	b	1ee48 <main@@Base+0xb218>
   1ee34:	ldr	r0, [fp, #-8]
   1ee38:	ldr	r1, [fp, #-12]
   1ee3c:	ldr	r2, [fp, #-16]
   1ee40:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1ee44:	str	r0, [fp, #-12]
   1ee48:	b	1ee60 <main@@Base+0xb230>
   1ee4c:	ldr	r0, [fp, #-8]
   1ee50:	ldr	r1, [fp, #-12]
   1ee54:	ldr	r2, [fp, #-16]
   1ee58:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1ee5c:	str	r0, [fp, #-12]
   1ee60:	b	1ee64 <main@@Base+0xb234>
   1ee64:	b	1ee68 <main@@Base+0xb238>
   1ee68:	ldr	r0, [fp, #-8]
   1ee6c:	ldr	r1, [fp, #-12]
   1ee70:	ldr	r2, [fp, #-16]
   1ee74:	sub	r3, fp, #24
   1ee78:	bl	1cebc <main@@Base+0x928c>
   1ee7c:	str	r0, [fp, #-12]
   1ee80:	b	1e8fc <main@@Base+0xaccc>
   1ee84:	ldr	r0, [fp, #-8]
   1ee88:	ldr	r0, [r0, #24]
   1ee8c:	cmp	r0, #0
   1ee90:	beq	1ee98 <main@@Base+0xb268>
   1ee94:	b	1eec4 <main@@Base+0xb294>
   1ee98:	ldr	r0, [fp, #-8]
   1ee9c:	ldr	r0, [r0]
   1eea0:	bl	26a5c <flatcc_builder_end_table@@Base>
   1eea4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1eea8:	str	r0, [r1]
   1eeac:	cmp	r0, #0
   1eeb0:	bne	1eeb8 <main@@Base+0xb288>
   1eeb4:	b	1eec4 <main@@Base+0xb294>
   1eeb8:	ldr	r0, [fp, #-12]
   1eebc:	str	r0, [fp, #-4]
   1eec0:	b	1eedc <main@@Base+0xb2ac>
   1eec4:	ldr	r0, [fp, #-8]
   1eec8:	ldr	r1, [fp, #-12]
   1eecc:	ldr	r2, [fp, #-16]
   1eed0:	movw	r3, #33	; 0x21
   1eed4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1eed8:	str	r0, [fp, #-4]
   1eedc:	ldr	r0, [fp, #-4]
   1eee0:	mov	sp, fp
   1eee4:	pop	{fp, pc}
   1eee8:	andeq	r5, r2, r4, lsl #14
   1eeec:	andeq	r5, r2, r0, lsr #9
   1eef0:	ldrdeq	r5, [r2], -r4
   1eef4:	andeq	r5, r2, r8, lsr r8
   1eef8:	push	{fp, lr}
   1eefc:	mov	fp, sp
   1ef00:	sub	sp, sp, #24
   1ef04:	str	r0, [fp, #-8]
   1ef08:	str	r1, [sp, #12]
   1ef0c:	str	r2, [sp, #8]
   1ef10:	str	r3, [sp, #4]
   1ef14:	ldr	r0, [sp, #4]
   1ef18:	movw	r1, #0
   1ef1c:	str	r1, [r0]
   1ef20:	ldr	r0, [fp, #-8]
   1ef24:	ldr	r0, [r0]
   1ef28:	bl	25df4 <flatcc_builder_start_table@@Base>
   1ef2c:	cmp	r0, #0
   1ef30:	beq	1ef38 <main@@Base+0xb308>
   1ef34:	b	1efe0 <main@@Base+0xb3b0>
   1ef38:	ldr	r0, [fp, #-8]
   1ef3c:	ldr	r1, [sp, #12]
   1ef40:	ldr	r2, [sp, #8]
   1ef44:	mov	r3, sp
   1ef48:	bl	17a4c <main@@Base+0x3e1c>
   1ef4c:	str	r0, [sp, #12]
   1ef50:	ldr	r0, [sp]
   1ef54:	cmp	r0, #0
   1ef58:	beq	1efa0 <main@@Base+0xb370>
   1ef5c:	ldr	r0, [fp, #-8]
   1ef60:	ldr	r1, [sp, #12]
   1ef64:	ldr	r2, [sp, #8]
   1ef68:	bl	17b30 <main@@Base+0x3f00>
   1ef6c:	str	r0, [sp, #12]
   1ef70:	ldr	r0, [fp, #-8]
   1ef74:	ldr	r1, [sp, #12]
   1ef78:	ldr	r2, [sp, #8]
   1ef7c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1ef80:	str	r0, [sp, #12]
   1ef84:	ldr	r0, [fp, #-8]
   1ef88:	ldr	r1, [sp, #12]
   1ef8c:	ldr	r2, [sp, #8]
   1ef90:	mov	r3, sp
   1ef94:	bl	1cebc <main@@Base+0x928c>
   1ef98:	str	r0, [sp, #12]
   1ef9c:	b	1ef50 <main@@Base+0xb320>
   1efa0:	ldr	r0, [fp, #-8]
   1efa4:	ldr	r0, [r0, #24]
   1efa8:	cmp	r0, #0
   1efac:	beq	1efb4 <main@@Base+0xb384>
   1efb0:	b	1efe0 <main@@Base+0xb3b0>
   1efb4:	ldr	r0, [fp, #-8]
   1efb8:	ldr	r0, [r0]
   1efbc:	bl	26a5c <flatcc_builder_end_table@@Base>
   1efc0:	ldr	r1, [sp, #4]
   1efc4:	str	r0, [r1]
   1efc8:	cmp	r0, #0
   1efcc:	bne	1efd4 <main@@Base+0xb3a4>
   1efd0:	b	1efe0 <main@@Base+0xb3b0>
   1efd4:	ldr	r0, [sp, #12]
   1efd8:	str	r0, [fp, #-4]
   1efdc:	b	1eff8 <main@@Base+0xb3c8>
   1efe0:	ldr	r0, [fp, #-8]
   1efe4:	ldr	r1, [sp, #12]
   1efe8:	ldr	r2, [sp, #8]
   1efec:	movw	r3, #33	; 0x21
   1eff0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1eff4:	str	r0, [fp, #-4]
   1eff8:	ldr	r0, [fp, #-4]
   1effc:	mov	sp, fp
   1f000:	pop	{fp, pc}
   1f004:	push	{r4, sl, fp, lr}
   1f008:	add	fp, sp, #8
   1f00c:	sub	sp, sp, #96	; 0x60
   1f010:	str	r0, [fp, #-16]
   1f014:	str	r1, [fp, #-20]	; 0xffffffec
   1f018:	str	r2, [fp, #-24]	; 0xffffffe8
   1f01c:	str	r3, [fp, #-28]	; 0xffffffe4
   1f020:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f024:	movw	r1, #0
   1f028:	str	r1, [r0]
   1f02c:	ldr	r0, [fp, #-16]
   1f030:	ldr	r0, [r0]
   1f034:	movw	r1, #4
   1f038:	bl	25df4 <flatcc_builder_start_table@@Base>
   1f03c:	cmp	r0, #0
   1f040:	beq	1f048 <main@@Base+0xb418>
   1f044:	b	1f4f8 <main@@Base+0xb8c8>
   1f048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f04c:	ldr	r1, [fp, #-16]
   1f050:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f058:	str	r0, [sp, #40]	; 0x28
   1f05c:	mov	r0, r1
   1f060:	mov	r1, r2
   1f064:	mov	r2, r3
   1f068:	movw	r3, #1
   1f06c:	add	ip, sp, #44	; 0x2c
   1f070:	str	ip, [sp]
   1f074:	bl	2df0c <flatcc_json_parser_prepare_unions@@Base>
   1f078:	ldr	r1, [sp, #40]	; 0x28
   1f07c:	cmp	r1, r0
   1f080:	bne	1f088 <main@@Base+0xb458>
   1f084:	b	1f4f8 <main@@Base+0xb8c8>
   1f088:	ldr	r0, [fp, #-16]
   1f08c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f090:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f094:	sub	r3, fp, #32
   1f098:	bl	17a4c <main@@Base+0x3e1c>
   1f09c:	str	r0, [fp, #-20]	; 0xffffffec
   1f0a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f0a4:	cmp	r0, #0
   1f0a8:	beq	1f4a0 <main@@Base+0xb870>
   1f0ac:	ldr	r0, [fp, #-16]
   1f0b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f0b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f0b8:	bl	17b30 <main@@Base+0x3f00>
   1f0bc:	str	r0, [fp, #-20]	; 0xffffffec
   1f0c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f0c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f0c8:	bl	17bdc <main@@Base+0x3fac>
   1f0cc:	str	r1, [sp, #52]	; 0x34
   1f0d0:	str	r0, [sp, #48]	; 0x30
   1f0d4:	ldr	r0, [sp, #48]	; 0x30
   1f0d8:	ldr	r1, [sp, #52]	; 0x34
   1f0dc:	movw	r2, #28281	; 0x6e79
   1f0e0:	movt	r2, #28001	; 0x6d61
   1f0e4:	eor	r1, r1, r2
   1f0e8:	movw	r2, #31071	; 0x795f
   1f0ec:	movt	r2, #24942	; 0x616e
   1f0f0:	eor	r0, r0, r2
   1f0f4:	orr	r0, r0, r1
   1f0f8:	cmp	r0, #0
   1f0fc:	bne	1f210 <main@@Base+0xb5e0>
   1f100:	b	1f104 <main@@Base+0xb4d4>
   1f104:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f108:	add	r0, r0, #8
   1f10c:	str	r0, [fp, #-20]	; 0xffffffec
   1f110:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f114:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f118:	bl	17bdc <main@@Base+0x3fac>
   1f11c:	str	r1, [sp, #52]	; 0x34
   1f120:	str	r0, [sp, #48]	; 0x30
   1f124:	ldr	r0, [sp, #52]	; 0x34
   1f128:	movw	r1, #28773	; 0x7065
   1f12c:	movt	r1, #29817	; 0x7479
   1f130:	teq	r0, r1
   1f134:	bne	1f1f8 <main@@Base+0xb5c8>
   1f138:	b	1f13c <main@@Base+0xb50c>
   1f13c:	ldr	r0, [fp, #-16]
   1f140:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f144:	str	r1, [fp, #-48]	; 0xffffffd0
   1f148:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f14c:	movw	r3, #4
   1f150:	bl	17c14 <main@@Base+0x3fe4>
   1f154:	str	r0, [fp, #-20]	; 0xffffffec
   1f158:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f15c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f160:	cmp	r0, r1
   1f164:	beq	1f1e0 <main@@Base+0xb5b0>
   1f168:	ldr	r0, [pc, #944]	; 1f520 <main@@Base+0xb8f0>
   1f16c:	add	r0, pc, r0
   1f170:	ldr	r1, [pc, #940]	; 1f524 <main@@Base+0xb8f4>
   1f174:	add	r1, pc, r1
   1f178:	ldr	r2, [pc, #936]	; 1f528 <main@@Base+0xb8f8>
   1f17c:	add	r2, pc, r2
   1f180:	ldr	r3, [fp, #-16]
   1f184:	ldr	ip, [fp, #-20]	; 0xffffffec
   1f188:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1f18c:	ldr	r4, [sp, #44]	; 0x2c
   1f190:	str	r0, [sp, #36]	; 0x24
   1f194:	mov	r0, r3
   1f198:	str	r1, [sp, #32]
   1f19c:	mov	r1, ip
   1f1a0:	str	r2, [sp, #28]
   1f1a4:	mov	r2, lr
   1f1a8:	movw	r3, #0
   1f1ac:	movw	ip, #3
   1f1b0:	uxth	ip, ip
   1f1b4:	str	ip, [sp]
   1f1b8:	str	r4, [sp, #4]
   1f1bc:	ldr	ip, [sp, #36]	; 0x24
   1f1c0:	str	ip, [sp, #8]
   1f1c4:	ldr	lr, [sp, #32]
   1f1c8:	str	lr, [sp, #12]
   1f1cc:	ldr	r4, [sp, #28]
   1f1d0:	str	r4, [sp, #16]
   1f1d4:	bl	2eb58 <flatcc_json_parser_union_type_vector@@Base>
   1f1d8:	str	r0, [fp, #-20]	; 0xffffffec
   1f1dc:	b	1f1f4 <main@@Base+0xb5c4>
   1f1e0:	ldr	r0, [fp, #-16]
   1f1e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f1e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f1ec:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f1f0:	str	r0, [fp, #-20]	; 0xffffffec
   1f1f4:	b	1f20c <main@@Base+0xb5dc>
   1f1f8:	ldr	r0, [fp, #-16]
   1f1fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f200:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f204:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f208:	str	r0, [fp, #-20]	; 0xffffffec
   1f20c:	b	1f484 <main@@Base+0xb854>
   1f210:	ldr	r0, [sp, #48]	; 0x30
   1f214:	ldr	r1, [sp, #52]	; 0x34
   1f218:	movw	r2, #24942	; 0x616e
   1f21c:	movt	r2, #109	; 0x6d
   1f220:	eor	r2, r2, r1, lsr #8
   1f224:	lsr	r0, r0, #8
   1f228:	orr	r0, r0, r1, lsl #24
   1f22c:	movw	r1, #28281	; 0x6e79
   1f230:	movt	r1, #31073	; 0x7961
   1f234:	eor	r0, r0, r1
   1f238:	orr	r0, r0, r2
   1f23c:	cmp	r0, #0
   1f240:	bne	1f2cc <main@@Base+0xb69c>
   1f244:	b	1f248 <main@@Base+0xb618>
   1f248:	ldr	r0, [fp, #-16]
   1f24c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f250:	str	r1, [fp, #-48]	; 0xffffffd0
   1f254:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f258:	movw	r3, #7
   1f25c:	bl	17c14 <main@@Base+0x3fe4>
   1f260:	str	r0, [fp, #-20]	; 0xffffffec
   1f264:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f268:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f26c:	cmp	r0, r1
   1f270:	beq	1f2c4 <main@@Base+0xb694>
   1f274:	ldr	r0, [pc, #672]	; 1f51c <main@@Base+0xb8ec>
   1f278:	add	r0, pc, r0
   1f27c:	ldr	r1, [fp, #-16]
   1f280:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f284:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f288:	ldr	ip, [sp, #44]	; 0x2c
   1f28c:	str	r0, [sp, #24]
   1f290:	mov	r0, r1
   1f294:	mov	r1, r2
   1f298:	mov	r2, r3
   1f29c:	movw	r3, #0
   1f2a0:	movw	lr, #3
   1f2a4:	uxth	lr, lr
   1f2a8:	str	lr, [sp]
   1f2ac:	str	ip, [sp, #4]
   1f2b0:	ldr	ip, [sp, #24]
   1f2b4:	str	ip, [sp, #8]
   1f2b8:	bl	2e7c8 <flatcc_json_parser_union_vector@@Base>
   1f2bc:	str	r0, [fp, #-20]	; 0xffffffec
   1f2c0:	b	1f2c8 <main@@Base+0xb698>
   1f2c4:	b	1f2d4 <main@@Base+0xb6a4>
   1f2c8:	b	1f2d0 <main@@Base+0xb6a0>
   1f2cc:	b	1f2d4 <main@@Base+0xb6a4>
   1f2d0:	b	1f480 <main@@Base+0xb850>
   1f2d4:	ldrh	r0, [sp, #50]	; 0x32
   1f2d8:	ldr	r1, [sp, #52]	; 0x34
   1f2dc:	movw	r2, #28786	; 0x7072
   1f2e0:	eor	r2, r2, r1, lsr #16
   1f2e4:	orr	r0, r0, r1, lsl #16
   1f2e8:	movw	r1, #27000	; 0x6978
   1f2ec:	movt	r1, #25958	; 0x6566
   1f2f0:	eor	r0, r0, r1
   1f2f4:	orr	r0, r0, r2
   1f2f8:	cmp	r0, #0
   1f2fc:	bne	1f3a0 <main@@Base+0xb770>
   1f300:	b	1f304 <main@@Base+0xb6d4>
   1f304:	ldr	r0, [fp, #-16]
   1f308:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f30c:	str	r1, [fp, #-48]	; 0xffffffd0
   1f310:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f314:	movw	r3, #6
   1f318:	bl	17c14 <main@@Base+0x3fe4>
   1f31c:	str	r0, [fp, #-20]	; 0xffffffec
   1f320:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f324:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f328:	cmp	r0, r1
   1f32c:	beq	1f388 <main@@Base+0xb758>
   1f330:	ldr	r0, [fp, #-16]
   1f334:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f338:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f33c:	sub	r3, fp, #40	; 0x28
   1f340:	bl	1f5bc <main@@Base+0xb98c>
   1f344:	str	r0, [fp, #-20]	; 0xffffffec
   1f348:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f34c:	cmp	r0, #0
   1f350:	beq	1f374 <main@@Base+0xb744>
   1f354:	ldr	r0, [fp, #-16]
   1f358:	ldr	r0, [r0]
   1f35c:	movw	r1, #0
   1f360:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1f364:	str	r0, [fp, #-44]	; 0xffffffd4
   1f368:	movw	r1, #0
   1f36c:	cmp	r0, r1
   1f370:	bne	1f378 <main@@Base+0xb748>
   1f374:	b	1f4f8 <main@@Base+0xb8c8>
   1f378:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f37c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f380:	str	r0, [r1]
   1f384:	b	1f39c <main@@Base+0xb76c>
   1f388:	ldr	r0, [fp, #-16]
   1f38c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f390:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f394:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f398:	str	r0, [fp, #-20]	; 0xffffffec
   1f39c:	b	1f47c <main@@Base+0xb84c>
   1f3a0:	ldrb	r0, [sp, #51]	; 0x33
   1f3a4:	ldr	r1, [sp, #52]	; 0x34
   1f3a8:	movw	r2, #30313	; 0x7669
   1f3ac:	movt	r2, #28015	; 0x6d6f
   1f3b0:	eor	r1, r1, r2
   1f3b4:	eor	r0, r0, #101	; 0x65
   1f3b8:	orr	r0, r1, r0, lsl #24
   1f3bc:	cmp	r0, #0
   1f3c0:	bne	1f464 <main@@Base+0xb834>
   1f3c4:	b	1f3c8 <main@@Base+0xb798>
   1f3c8:	ldr	r0, [fp, #-16]
   1f3cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f3d0:	str	r1, [fp, #-48]	; 0xffffffd0
   1f3d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f3d8:	movw	r3, #5
   1f3dc:	bl	17c14 <main@@Base+0x3fe4>
   1f3e0:	str	r0, [fp, #-20]	; 0xffffffec
   1f3e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f3e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f3ec:	cmp	r0, r1
   1f3f0:	beq	1f44c <main@@Base+0xb81c>
   1f3f4:	ldr	r0, [fp, #-16]
   1f3f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f3fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f400:	sub	r3, fp, #40	; 0x28
   1f404:	bl	1f9fc <main@@Base+0xbdcc>
   1f408:	str	r0, [fp, #-20]	; 0xffffffec
   1f40c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f410:	cmp	r0, #0
   1f414:	beq	1f438 <main@@Base+0xb808>
   1f418:	ldr	r0, [fp, #-16]
   1f41c:	ldr	r0, [r0]
   1f420:	movw	r1, #1
   1f424:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1f428:	str	r0, [fp, #-44]	; 0xffffffd4
   1f42c:	movw	r1, #0
   1f430:	cmp	r0, r1
   1f434:	bne	1f43c <main@@Base+0xb80c>
   1f438:	b	1f4f8 <main@@Base+0xb8c8>
   1f43c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f440:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f444:	str	r0, [r1]
   1f448:	b	1f460 <main@@Base+0xb830>
   1f44c:	ldr	r0, [fp, #-16]
   1f450:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f454:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f458:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f45c:	str	r0, [fp, #-20]	; 0xffffffec
   1f460:	b	1f478 <main@@Base+0xb848>
   1f464:	ldr	r0, [fp, #-16]
   1f468:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f46c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f470:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f474:	str	r0, [fp, #-20]	; 0xffffffec
   1f478:	b	1f47c <main@@Base+0xb84c>
   1f47c:	b	1f480 <main@@Base+0xb850>
   1f480:	b	1f484 <main@@Base+0xb854>
   1f484:	ldr	r0, [fp, #-16]
   1f488:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f48c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f490:	sub	r3, fp, #32
   1f494:	bl	1cebc <main@@Base+0x928c>
   1f498:	str	r0, [fp, #-20]	; 0xffffffec
   1f49c:	b	1f0a0 <main@@Base+0xb470>
   1f4a0:	ldr	r0, [fp, #-16]
   1f4a4:	ldr	r0, [r0, #24]
   1f4a8:	cmp	r0, #0
   1f4ac:	beq	1f4b4 <main@@Base+0xb884>
   1f4b0:	b	1f4f8 <main@@Base+0xb8c8>
   1f4b4:	ldr	r0, [fp, #-16]
   1f4b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f4bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f4c0:	ldr	r3, [sp, #44]	; 0x2c
   1f4c4:	bl	2dfb4 <flatcc_json_parser_finalize_unions@@Base>
   1f4c8:	str	r0, [fp, #-20]	; 0xffffffec
   1f4cc:	ldr	r0, [fp, #-16]
   1f4d0:	ldr	r0, [r0]
   1f4d4:	bl	26a5c <flatcc_builder_end_table@@Base>
   1f4d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f4dc:	str	r0, [r1]
   1f4e0:	cmp	r0, #0
   1f4e4:	bne	1f4ec <main@@Base+0xb8bc>
   1f4e8:	b	1f4f8 <main@@Base+0xb8c8>
   1f4ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f4f0:	str	r0, [fp, #-12]
   1f4f4:	b	1f510 <main@@Base+0xb8e0>
   1f4f8:	ldr	r0, [fp, #-16]
   1f4fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f504:	movw	r3, #33	; 0x21
   1f508:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1f50c:	str	r0, [fp, #-12]
   1f510:	ldr	r0, [fp, #-12]
   1f514:	sub	sp, fp, #8
   1f518:	pop	{r4, sl, fp, pc}
   1f51c:			; <UNDEFINED> instruction: 0xffffb580
   1f520:	andeq	r5, r2, r8, asr #1
   1f524:			; <UNDEFINED> instruction: 0xffffb684
   1f528:	andeq	r0, r0, r8, lsr #7
   1f52c:	sub	sp, sp, #12
   1f530:	strb	r0, [sp, #7]
   1f534:	ldrb	r0, [sp, #7]
   1f538:	mov	r1, r0
   1f53c:	cmp	r0, #4
   1f540:	str	r1, [sp]
   1f544:	bhi	1f5a8 <main@@Base+0xb978>
   1f548:	add	r0, pc, #8
   1f54c:	ldr	r1, [sp]
   1f550:	ldr	r2, [r0, r1, lsl #2]
   1f554:	add	pc, r0, r2
   1f558:	andeq	r0, r0, r4, lsl r0
   1f55c:	andeq	r0, r0, r0, lsr #32
   1f560:	andeq	r0, r0, ip, lsr #32
   1f564:	andeq	r0, r0, r8, lsr r0
   1f568:	andeq	r0, r0, r4, asr #32
   1f56c:	movw	r0, #1
   1f570:	str	r0, [sp, #8]
   1f574:	b	1f5b0 <main@@Base+0xb980>
   1f578:	movw	r0, #1
   1f57c:	str	r0, [sp, #8]
   1f580:	b	1f5b0 <main@@Base+0xb980>
   1f584:	movw	r0, #1
   1f588:	str	r0, [sp, #8]
   1f58c:	b	1f5b0 <main@@Base+0xb980>
   1f590:	movw	r0, #1
   1f594:	str	r0, [sp, #8]
   1f598:	b	1f5b0 <main@@Base+0xb980>
   1f59c:	movw	r0, #1
   1f5a0:	str	r0, [sp, #8]
   1f5a4:	b	1f5b0 <main@@Base+0xb980>
   1f5a8:	movw	r0, #0
   1f5ac:	str	r0, [sp, #8]
   1f5b0:	ldr	r0, [sp, #8]
   1f5b4:	add	sp, sp, #12
   1f5b8:	bx	lr
   1f5bc:	push	{fp, lr}
   1f5c0:	mov	fp, sp
   1f5c4:	sub	sp, sp, #48	; 0x30
   1f5c8:	str	r0, [fp, #-8]
   1f5cc:	str	r1, [fp, #-12]
   1f5d0:	str	r2, [fp, #-16]
   1f5d4:	str	r3, [fp, #-20]	; 0xffffffec
   1f5d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f5dc:	movw	r1, #0
   1f5e0:	str	r1, [r0]
   1f5e4:	ldr	r0, [fp, #-8]
   1f5e8:	ldr	r0, [r0]
   1f5ec:	movw	r1, #3
   1f5f0:	bl	25df4 <flatcc_builder_start_table@@Base>
   1f5f4:	cmp	r0, #0
   1f5f8:	beq	1f600 <main@@Base+0xb9d0>
   1f5fc:	b	1f9d8 <main@@Base+0xbda8>
   1f600:	ldr	r0, [fp, #-8]
   1f604:	ldr	r1, [fp, #-12]
   1f608:	ldr	r2, [fp, #-16]
   1f60c:	add	r3, sp, #24
   1f610:	bl	17a4c <main@@Base+0x3e1c>
   1f614:	str	r0, [fp, #-12]
   1f618:	ldr	r0, [sp, #24]
   1f61c:	cmp	r0, #0
   1f620:	beq	1f998 <main@@Base+0xbd68>
   1f624:	ldr	r0, [fp, #-8]
   1f628:	ldr	r1, [fp, #-12]
   1f62c:	ldr	r2, [fp, #-16]
   1f630:	bl	17b30 <main@@Base+0x3f00>
   1f634:	str	r0, [fp, #-12]
   1f638:	ldr	r0, [fp, #-12]
   1f63c:	ldr	r1, [fp, #-16]
   1f640:	bl	17bdc <main@@Base+0x3fac>
   1f644:	str	r1, [sp, #4]
   1f648:	str	r0, [sp]
   1f64c:	ldr	r0, [sp]
   1f650:	ldr	r1, [sp, #4]
   1f654:	movw	r2, #29556	; 0x7374
   1f658:	movt	r2, #29797	; 0x7465
   1f65c:	eor	r1, r1, r2
   1f660:	movw	r2, #28526	; 0x6f6e
   1f664:	movt	r2, #27251	; 0x6a73
   1f668:	eor	r0, r0, r2
   1f66c:	orr	r0, r0, r1
   1f670:	cmp	r0, #0
   1f674:	bne	1f968 <main@@Base+0xbd38>
   1f678:	b	1f67c <main@@Base+0xba4c>
   1f67c:	ldr	r0, [fp, #-12]
   1f680:	add	r0, r0, #8
   1f684:	str	r0, [fp, #-12]
   1f688:	ldr	r0, [fp, #-12]
   1f68c:	ldr	r1, [fp, #-16]
   1f690:	bl	17bdc <main@@Base+0x3fac>
   1f694:	str	r1, [sp, #4]
   1f698:	str	r0, [sp]
   1f69c:	ldr	r0, [sp]
   1f6a0:	ldr	r1, [sp, #4]
   1f6a4:	movw	r2, #25958	; 0x6566
   1f6a8:	movt	r2, #28786	; 0x7072
   1f6ac:	eor	r1, r1, r2
   1f6b0:	movw	r2, #28769	; 0x7061
   1f6b4:	movt	r2, #27000	; 0x6978
   1f6b8:	eor	r0, r0, r2
   1f6bc:	orr	r0, r0, r1
   1f6c0:	cmp	r0, #0
   1f6c4:	bne	1f950 <main@@Base+0xbd20>
   1f6c8:	b	1f6cc <main@@Base+0xba9c>
   1f6cc:	ldr	r0, [fp, #-12]
   1f6d0:	add	r0, r0, #8
   1f6d4:	str	r0, [fp, #-12]
   1f6d8:	ldr	r0, [fp, #-12]
   1f6dc:	ldr	r1, [fp, #-16]
   1f6e0:	bl	17bdc <main@@Base+0x3fac>
   1f6e4:	str	r1, [sp, #4]
   1f6e8:	str	r0, [sp]
   1f6ec:	ldrh	r0, [sp, #2]
   1f6f0:	ldr	r1, [sp, #4]
   1f6f4:	movw	r2, #29299	; 0x7273
   1f6f8:	eor	r2, r2, r1, lsr #16
   1f6fc:	orr	r0, r0, r1, lsl #16
   1f700:	movw	r1, #26418	; 0x6732
   1f704:	movt	r1, #26990	; 0x696e
   1f708:	eor	r0, r0, r1
   1f70c:	orr	r0, r0, r2
   1f710:	cmp	r0, #0
   1f714:	bne	1f7a8 <main@@Base+0xbb78>
   1f718:	b	1f71c <main@@Base+0xbaec>
   1f71c:	ldr	r0, [fp, #-8]
   1f720:	ldr	r1, [fp, #-12]
   1f724:	str	r1, [sp, #8]
   1f728:	ldr	r2, [fp, #-16]
   1f72c:	movw	r3, #6
   1f730:	bl	17c14 <main@@Base+0x3fe4>
   1f734:	str	r0, [fp, #-12]
   1f738:	ldr	r0, [sp, #8]
   1f73c:	ldr	r1, [fp, #-12]
   1f740:	cmp	r0, r1
   1f744:	beq	1f7a0 <main@@Base+0xbb70>
   1f748:	ldr	r0, [fp, #-8]
   1f74c:	ldr	r1, [fp, #-12]
   1f750:	ldr	r2, [fp, #-16]
   1f754:	add	r3, sp, #16
   1f758:	bl	2067c <main@@Base+0xca4c>
   1f75c:	str	r0, [fp, #-12]
   1f760:	ldr	r0, [sp, #16]
   1f764:	cmp	r0, #0
   1f768:	beq	1f78c <main@@Base+0xbb5c>
   1f76c:	ldr	r0, [fp, #-8]
   1f770:	ldr	r0, [r0]
   1f774:	movw	r1, #1
   1f778:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1f77c:	str	r0, [sp, #12]
   1f780:	movw	r1, #0
   1f784:	cmp	r0, r1
   1f788:	bne	1f790 <main@@Base+0xbb60>
   1f78c:	b	1f9d8 <main@@Base+0xbda8>
   1f790:	ldr	r0, [sp, #16]
   1f794:	ldr	r1, [sp, #12]
   1f798:	str	r0, [r1]
   1f79c:	b	1f7a4 <main@@Base+0xbb74>
   1f7a0:	b	1f868 <main@@Base+0xbc38>
   1f7a4:	b	1f864 <main@@Base+0xbc34>
   1f7a8:	ldrb	r0, [sp, #3]
   1f7ac:	ldr	r1, [sp, #4]
   1f7b0:	movw	r2, #26990	; 0x696e
   1f7b4:	movt	r2, #29299	; 0x7273
   1f7b8:	eor	r1, r1, r2
   1f7bc:	eor	r0, r0, #103	; 0x67
   1f7c0:	orr	r0, r1, r0, lsl #24
   1f7c4:	cmp	r0, #0
   1f7c8:	bne	1f85c <main@@Base+0xbc2c>
   1f7cc:	b	1f7d0 <main@@Base+0xbba0>
   1f7d0:	ldr	r0, [fp, #-8]
   1f7d4:	ldr	r1, [fp, #-12]
   1f7d8:	str	r1, [sp, #8]
   1f7dc:	ldr	r2, [fp, #-16]
   1f7e0:	movw	r3, #5
   1f7e4:	bl	17c14 <main@@Base+0x3fe4>
   1f7e8:	str	r0, [fp, #-12]
   1f7ec:	ldr	r0, [sp, #8]
   1f7f0:	ldr	r1, [fp, #-12]
   1f7f4:	cmp	r0, r1
   1f7f8:	beq	1f854 <main@@Base+0xbc24>
   1f7fc:	ldr	r0, [fp, #-8]
   1f800:	ldr	r1, [fp, #-12]
   1f804:	ldr	r2, [fp, #-16]
   1f808:	add	r3, sp, #16
   1f80c:	bl	20ae0 <main@@Base+0xceb0>
   1f810:	str	r0, [fp, #-12]
   1f814:	ldr	r0, [sp, #16]
   1f818:	cmp	r0, #0
   1f81c:	beq	1f840 <main@@Base+0xbc10>
   1f820:	ldr	r0, [fp, #-8]
   1f824:	ldr	r0, [r0]
   1f828:	movw	r1, #0
   1f82c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1f830:	str	r0, [sp, #12]
   1f834:	movw	r1, #0
   1f838:	cmp	r0, r1
   1f83c:	bne	1f844 <main@@Base+0xbc14>
   1f840:	b	1f9d8 <main@@Base+0xbda8>
   1f844:	ldr	r0, [sp, #16]
   1f848:	ldr	r1, [sp, #12]
   1f84c:	str	r0, [r1]
   1f850:	b	1f858 <main@@Base+0xbc28>
   1f854:	b	1f868 <main@@Base+0xbc38>
   1f858:	b	1f860 <main@@Base+0xbc30>
   1f85c:	b	1f868 <main@@Base+0xbc38>
   1f860:	b	1f864 <main@@Base+0xbc34>
   1f864:	b	1f94c <main@@Base+0xbd1c>
   1f868:	ldrh	r0, [sp, #2]
   1f86c:	ldr	r1, [sp, #4]
   1f870:	movw	r2, #29299	; 0x7273
   1f874:	eor	r2, r2, r1, lsr #16
   1f878:	orr	r0, r0, r1, lsl #16
   1f87c:	movw	r1, #26419	; 0x6733
   1f880:	movt	r1, #26990	; 0x696e
   1f884:	eor	r0, r0, r1
   1f888:	orr	r0, r0, r2
   1f88c:	cmp	r0, #0
   1f890:	bne	1f934 <main@@Base+0xbd04>
   1f894:	b	1f898 <main@@Base+0xbc68>
   1f898:	ldr	r0, [fp, #-8]
   1f89c:	ldr	r1, [fp, #-12]
   1f8a0:	str	r1, [sp, #8]
   1f8a4:	ldr	r2, [fp, #-16]
   1f8a8:	movw	r3, #6
   1f8ac:	bl	17c14 <main@@Base+0x3fe4>
   1f8b0:	str	r0, [fp, #-12]
   1f8b4:	ldr	r0, [sp, #8]
   1f8b8:	ldr	r1, [fp, #-12]
   1f8bc:	cmp	r0, r1
   1f8c0:	beq	1f91c <main@@Base+0xbcec>
   1f8c4:	ldr	r0, [fp, #-8]
   1f8c8:	ldr	r1, [fp, #-12]
   1f8cc:	ldr	r2, [fp, #-16]
   1f8d0:	add	r3, sp, #16
   1f8d4:	bl	21718 <main@@Base+0xdae8>
   1f8d8:	str	r0, [fp, #-12]
   1f8dc:	ldr	r0, [sp, #16]
   1f8e0:	cmp	r0, #0
   1f8e4:	beq	1f908 <main@@Base+0xbcd8>
   1f8e8:	ldr	r0, [fp, #-8]
   1f8ec:	ldr	r0, [r0]
   1f8f0:	movw	r1, #2
   1f8f4:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   1f8f8:	str	r0, [sp, #12]
   1f8fc:	movw	r1, #0
   1f900:	cmp	r0, r1
   1f904:	bne	1f90c <main@@Base+0xbcdc>
   1f908:	b	1f9d8 <main@@Base+0xbda8>
   1f90c:	ldr	r0, [sp, #16]
   1f910:	ldr	r1, [sp, #12]
   1f914:	str	r0, [r1]
   1f918:	b	1f930 <main@@Base+0xbd00>
   1f91c:	ldr	r0, [fp, #-8]
   1f920:	ldr	r1, [fp, #-12]
   1f924:	ldr	r2, [fp, #-16]
   1f928:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f92c:	str	r0, [fp, #-12]
   1f930:	b	1f948 <main@@Base+0xbd18>
   1f934:	ldr	r0, [fp, #-8]
   1f938:	ldr	r1, [fp, #-12]
   1f93c:	ldr	r2, [fp, #-16]
   1f940:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f944:	str	r0, [fp, #-12]
   1f948:	b	1f94c <main@@Base+0xbd1c>
   1f94c:	b	1f964 <main@@Base+0xbd34>
   1f950:	ldr	r0, [fp, #-8]
   1f954:	ldr	r1, [fp, #-12]
   1f958:	ldr	r2, [fp, #-16]
   1f95c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f960:	str	r0, [fp, #-12]
   1f964:	b	1f97c <main@@Base+0xbd4c>
   1f968:	ldr	r0, [fp, #-8]
   1f96c:	ldr	r1, [fp, #-12]
   1f970:	ldr	r2, [fp, #-16]
   1f974:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f978:	str	r0, [fp, #-12]
   1f97c:	ldr	r0, [fp, #-8]
   1f980:	ldr	r1, [fp, #-12]
   1f984:	ldr	r2, [fp, #-16]
   1f988:	add	r3, sp, #24
   1f98c:	bl	1cebc <main@@Base+0x928c>
   1f990:	str	r0, [fp, #-12]
   1f994:	b	1f618 <main@@Base+0xb9e8>
   1f998:	ldr	r0, [fp, #-8]
   1f99c:	ldr	r0, [r0, #24]
   1f9a0:	cmp	r0, #0
   1f9a4:	beq	1f9ac <main@@Base+0xbd7c>
   1f9a8:	b	1f9d8 <main@@Base+0xbda8>
   1f9ac:	ldr	r0, [fp, #-8]
   1f9b0:	ldr	r0, [r0]
   1f9b4:	bl	26a5c <flatcc_builder_end_table@@Base>
   1f9b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f9bc:	str	r0, [r1]
   1f9c0:	cmp	r0, #0
   1f9c4:	bne	1f9cc <main@@Base+0xbd9c>
   1f9c8:	b	1f9d8 <main@@Base+0xbda8>
   1f9cc:	ldr	r0, [fp, #-12]
   1f9d0:	str	r0, [fp, #-4]
   1f9d4:	b	1f9f0 <main@@Base+0xbdc0>
   1f9d8:	ldr	r0, [fp, #-8]
   1f9dc:	ldr	r1, [fp, #-12]
   1f9e0:	ldr	r2, [fp, #-16]
   1f9e4:	movw	r3, #33	; 0x21
   1f9e8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   1f9ec:	str	r0, [fp, #-4]
   1f9f0:	ldr	r0, [fp, #-4]
   1f9f4:	mov	sp, fp
   1f9f8:	pop	{fp, pc}
   1f9fc:	push	{r4, sl, fp, lr}
   1fa00:	add	fp, sp, #8
   1fa04:	sub	sp, sp, #144	; 0x90
   1fa08:	str	r0, [fp, #-16]
   1fa0c:	str	r1, [fp, #-20]	; 0xffffffec
   1fa10:	str	r2, [fp, #-24]	; 0xffffffe8
   1fa14:	str	r3, [fp, #-28]	; 0xffffffe4
   1fa18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fa1c:	movw	r1, #0
   1fa20:	str	r1, [r0]
   1fa24:	ldr	r0, [fp, #-16]
   1fa28:	ldr	r0, [r0]
   1fa2c:	movw	r1, #10
   1fa30:	bl	25df4 <flatcc_builder_start_table@@Base>
   1fa34:	cmp	r0, #0
   1fa38:	beq	1fa40 <main@@Base+0xbe10>
   1fa3c:	b	20618 <main@@Base+0xc9e8>
   1fa40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fa44:	ldr	r1, [fp, #-16]
   1fa48:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fa4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fa50:	str	r0, [fp, #-64]	; 0xffffffc0
   1fa54:	mov	r0, r1
   1fa58:	mov	r1, r2
   1fa5c:	mov	r2, r3
   1fa60:	movw	r3, #5
   1fa64:	sub	ip, fp, #60	; 0x3c
   1fa68:	str	ip, [sp]
   1fa6c:	bl	2df0c <flatcc_json_parser_prepare_unions@@Base>
   1fa70:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1fa74:	cmp	r1, r0
   1fa78:	bne	1fa80 <main@@Base+0xbe50>
   1fa7c:	b	20618 <main@@Base+0xc9e8>
   1fa80:	ldr	r0, [fp, #-16]
   1fa84:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fa88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fa8c:	sub	r3, fp, #32
   1fa90:	bl	17a4c <main@@Base+0x3e1c>
   1fa94:	str	r0, [fp, #-20]	; 0xffffffec
   1fa98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fa9c:	cmp	r0, #0
   1faa0:	beq	205c0 <main@@Base+0xc990>
   1faa4:	ldr	r0, [fp, #-16]
   1faa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1faac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fab0:	bl	17b30 <main@@Base+0x3f00>
   1fab4:	str	r0, [fp, #-20]	; 0xffffffec
   1fab8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fabc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fac0:	bl	17bdc <main@@Base+0x3fac>
   1fac4:	str	r1, [fp, #-52]	; 0xffffffcc
   1fac8:	str	r0, [fp, #-56]	; 0xffffffc8
   1facc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fad0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fad4:	movw	r2, #29796	; 0x7464
   1fad8:	movt	r2, #24931	; 0x6163
   1fadc:	subs	r0, r2, r0
   1fae0:	movw	r2, #24946	; 0x6172
   1fae4:	movt	r2, #25448	; 0x6368
   1fae8:	sbcs	r1, r2, r1
   1faec:	bcc	1fef0 <main@@Base+0xc2c0>
   1faf0:	b	1faf4 <main@@Base+0xbec4>
   1faf4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1faf8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fafc:	movw	r2, #29793	; 0x7461
   1fb00:	movt	r2, #24942	; 0x616e
   1fb04:	eor	r1, r1, r2
   1fb08:	movw	r2, #28265	; 0x6e69
   1fb0c:	movt	r2, #26479	; 0x676f
   1fb10:	eor	r0, r0, r2
   1fb14:	orr	r0, r0, r1
   1fb18:	cmp	r0, #0
   1fb1c:	bne	1fcec <main@@Base+0xc0bc>
   1fb20:	b	1fb24 <main@@Base+0xbef4>
   1fb24:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb28:	add	r0, r0, #8
   1fb2c:	str	r0, [fp, #-20]	; 0xffffffec
   1fb30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fb34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fb38:	bl	17bdc <main@@Base+0x3fac>
   1fb3c:	str	r1, [fp, #-52]	; 0xffffffcc
   1fb40:	str	r0, [fp, #-56]	; 0xffffffc8
   1fb44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fb48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fb4c:	movw	r2, #29791	; 0x745f
   1fb50:	movt	r2, #115	; 0x73
   1fb54:	eor	r2, r2, r1, lsr #8
   1fb58:	lsr	r0, r0, #8
   1fb5c:	orr	r0, r0, r1, lsl #24
   1fb60:	movw	r1, #28773	; 0x7065
   1fb64:	movt	r1, #29817	; 0x7479
   1fb68:	eor	r0, r0, r1
   1fb6c:	orr	r0, r0, r2
   1fb70:	cmp	r0, #0
   1fb74:	bne	1fc24 <main@@Base+0xbff4>
   1fb78:	b	1fb7c <main@@Base+0xbf4c>
   1fb7c:	ldr	r0, [fp, #-16]
   1fb80:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fb84:	str	r1, [fp, #-48]	; 0xffffffd0
   1fb88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fb8c:	movw	r3, #7
   1fb90:	bl	17c14 <main@@Base+0x3fe4>
   1fb94:	str	r0, [fp, #-20]	; 0xffffffec
   1fb98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fb9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fba0:	cmp	r0, r1
   1fba4:	beq	1fc0c <main@@Base+0xbfdc>
   1fba8:	ldr	r0, [pc, #2756]	; 20674 <main@@Base+0xca44>
   1fbac:	add	r0, pc, r0
   1fbb0:	ldr	r1, [pc, #2752]	; 20678 <main@@Base+0xca48>
   1fbb4:	add	r1, pc, r1
   1fbb8:	ldr	r2, [fp, #-16]
   1fbbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fbc0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1fbc4:	ldr	lr, [fp, #-60]	; 0xffffffc4
   1fbc8:	str	r0, [fp, #-68]	; 0xffffffbc
   1fbcc:	mov	r0, r2
   1fbd0:	str	r1, [fp, #-72]	; 0xffffffb8
   1fbd4:	mov	r1, r3
   1fbd8:	mov	r2, ip
   1fbdc:	movw	r3, #1
   1fbe0:	movw	ip, #3
   1fbe4:	uxth	ip, ip
   1fbe8:	str	ip, [sp]
   1fbec:	str	lr, [sp, #4]
   1fbf0:	ldr	ip, [fp, #-68]	; 0xffffffbc
   1fbf4:	str	ip, [sp, #8]
   1fbf8:	ldr	lr, [fp, #-72]	; 0xffffffb8
   1fbfc:	str	lr, [sp, #12]
   1fc00:	bl	2e21c <flatcc_json_parser_union_type@@Base>
   1fc04:	str	r0, [fp, #-20]	; 0xffffffec
   1fc08:	b	1fc20 <main@@Base+0xbff0>
   1fc0c:	ldr	r0, [fp, #-16]
   1fc10:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fc18:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1fc1c:	str	r0, [fp, #-20]	; 0xffffffec
   1fc20:	b	1fce8 <main@@Base+0xc0b8>
   1fc24:	ldrh	r0, [fp, #-50]	; 0xffffffce
   1fc28:	movw	r1, #0
   1fc2c:	movt	r1, #29556	; 0x7374
   1fc30:	teq	r1, r0, lsl #16
   1fc34:	bne	1fcd0 <main@@Base+0xc0a0>
   1fc38:	b	1fc3c <main@@Base+0xc00c>
   1fc3c:	ldr	r0, [fp, #-16]
   1fc40:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc44:	str	r1, [fp, #-48]	; 0xffffffd0
   1fc48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fc4c:	movw	r3, #2
   1fc50:	bl	17c14 <main@@Base+0x3fe4>
   1fc54:	str	r0, [fp, #-20]	; 0xffffffec
   1fc58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fc5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc60:	cmp	r0, r1
   1fc64:	beq	1fcb8 <main@@Base+0xc088>
   1fc68:	ldr	r0, [pc, #2560]	; 20670 <main@@Base+0xca40>
   1fc6c:	add	r0, pc, r0
   1fc70:	ldr	r1, [fp, #-16]
   1fc74:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fc78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fc7c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1fc80:	str	r0, [sp, #76]	; 0x4c
   1fc84:	mov	r0, r1
   1fc88:	mov	r1, r2
   1fc8c:	mov	r2, r3
   1fc90:	movw	r3, #1
   1fc94:	movw	lr, #3
   1fc98:	uxth	lr, lr
   1fc9c:	str	lr, [sp]
   1fca0:	str	ip, [sp, #4]
   1fca4:	ldr	ip, [sp, #76]	; 0x4c
   1fca8:	str	ip, [sp, #8]
   1fcac:	bl	2e030 <flatcc_json_parser_union@@Base>
   1fcb0:	str	r0, [fp, #-20]	; 0xffffffec
   1fcb4:	b	1fccc <main@@Base+0xc09c>
   1fcb8:	ldr	r0, [fp, #-16]
   1fcbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fcc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fcc4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1fcc8:	str	r0, [fp, #-20]	; 0xffffffec
   1fccc:	b	1fce4 <main@@Base+0xc0b4>
   1fcd0:	ldr	r0, [fp, #-16]
   1fcd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fcd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fcdc:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1fce0:	str	r0, [fp, #-20]	; 0xffffffec
   1fce4:	b	1fce8 <main@@Base+0xc0b8>
   1fce8:	b	1feec <main@@Base+0xc2bc>
   1fcec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fcf0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fcf4:	movw	r2, #28005	; 0x6d65
   1fcf8:	movt	r2, #25441	; 0x6361
   1fcfc:	eor	r1, r1, r2
   1fd00:	movw	r2, #29817	; 0x7479
   1fd04:	movt	r2, #28511	; 0x6f5f
   1fd08:	eor	r0, r0, r2
   1fd0c:	orr	r0, r0, r1
   1fd10:	cmp	r0, #0
   1fd14:	bne	1fe14 <main@@Base+0xc1e4>
   1fd18:	b	1fd1c <main@@Base+0xc0ec>
   1fd1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd20:	add	r0, r0, #8
   1fd24:	str	r0, [fp, #-20]	; 0xffffffec
   1fd28:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fd30:	bl	17bdc <main@@Base+0x3fac>
   1fd34:	str	r1, [fp, #-52]	; 0xffffffcc
   1fd38:	str	r0, [fp, #-56]	; 0xffffffc8
   1fd3c:	ldrh	r0, [fp, #-50]	; 0xffffffce
   1fd40:	movw	r1, #0
   1fd44:	movt	r1, #28773	; 0x7065
   1fd48:	teq	r1, r0, lsl #16
   1fd4c:	bne	1fdfc <main@@Base+0xc1cc>
   1fd50:	b	1fd54 <main@@Base+0xc124>
   1fd54:	ldr	r0, [fp, #-16]
   1fd58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fd5c:	str	r1, [fp, #-48]	; 0xffffffd0
   1fd60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fd64:	movw	r3, #2
   1fd68:	bl	17c14 <main@@Base+0x3fe4>
   1fd6c:	str	r0, [fp, #-20]	; 0xffffffec
   1fd70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fd74:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fd78:	cmp	r0, r1
   1fd7c:	beq	1fde4 <main@@Base+0xc1b4>
   1fd80:	ldr	r0, [pc, #2272]	; 20668 <main@@Base+0xca38>
   1fd84:	add	r0, pc, r0
   1fd88:	ldr	r1, [pc, #2268]	; 2066c <main@@Base+0xca3c>
   1fd8c:	add	r1, pc, r1
   1fd90:	ldr	r2, [fp, #-16]
   1fd94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd98:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1fd9c:	ldr	lr, [fp, #-60]	; 0xffffffc4
   1fda0:	str	r0, [sp, #72]	; 0x48
   1fda4:	mov	r0, r2
   1fda8:	str	r1, [sp, #68]	; 0x44
   1fdac:	mov	r1, r3
   1fdb0:	mov	r2, ip
   1fdb4:	movw	r3, #3
   1fdb8:	movw	ip, #7
   1fdbc:	uxth	ip, ip
   1fdc0:	str	ip, [sp]
   1fdc4:	str	lr, [sp, #4]
   1fdc8:	ldr	ip, [sp, #72]	; 0x48
   1fdcc:	str	ip, [sp, #8]
   1fdd0:	ldr	lr, [sp, #68]	; 0x44
   1fdd4:	str	lr, [sp, #12]
   1fdd8:	bl	2e21c <flatcc_json_parser_union_type@@Base>
   1fddc:	str	r0, [fp, #-20]	; 0xffffffec
   1fde0:	b	1fdf8 <main@@Base+0xc1c8>
   1fde4:	ldr	r0, [fp, #-16]
   1fde8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fdec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fdf0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1fdf4:	str	r0, [fp, #-20]	; 0xffffffec
   1fdf8:	b	1fe10 <main@@Base+0xc1e0>
   1fdfc:	ldr	r0, [fp, #-16]
   1fe00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fe04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fe08:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1fe0c:	str	r0, [fp, #-20]	; 0xffffffec
   1fe10:	b	1fee8 <main@@Base+0xc2b8>
   1fe14:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   1fe18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fe1c:	movw	r2, #28005	; 0x6d65
   1fe20:	movt	r2, #25441	; 0x6361
   1fe24:	eor	r1, r1, r2
   1fe28:	eor	r0, r0, #111	; 0x6f
   1fe2c:	orr	r0, r1, r0, lsl #24
   1fe30:	cmp	r0, #0
   1fe34:	bne	1fed0 <main@@Base+0xc2a0>
   1fe38:	b	1fe3c <main@@Base+0xc20c>
   1fe3c:	ldr	r0, [fp, #-16]
   1fe40:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fe44:	str	r1, [fp, #-48]	; 0xffffffd0
   1fe48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fe4c:	movw	r3, #5
   1fe50:	bl	17c14 <main@@Base+0x3fe4>
   1fe54:	str	r0, [fp, #-20]	; 0xffffffec
   1fe58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fe5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fe60:	cmp	r0, r1
   1fe64:	beq	1feb8 <main@@Base+0xc288>
   1fe68:	ldr	r0, [pc, #2036]	; 20664 <main@@Base+0xca34>
   1fe6c:	add	r0, pc, r0
   1fe70:	ldr	r1, [fp, #-16]
   1fe74:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fe78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fe7c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1fe80:	str	r0, [sp, #64]	; 0x40
   1fe84:	mov	r0, r1
   1fe88:	mov	r1, r2
   1fe8c:	mov	r2, r3
   1fe90:	movw	r3, #3
   1fe94:	movw	lr, #7
   1fe98:	uxth	lr, lr
   1fe9c:	str	lr, [sp]
   1fea0:	str	ip, [sp, #4]
   1fea4:	ldr	ip, [sp, #64]	; 0x40
   1fea8:	str	ip, [sp, #8]
   1feac:	bl	2e030 <flatcc_json_parser_union@@Base>
   1feb0:	str	r0, [fp, #-20]	; 0xffffffec
   1feb4:	b	1fecc <main@@Base+0xc29c>
   1feb8:	ldr	r0, [fp, #-16]
   1febc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fec0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fec4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1fec8:	str	r0, [fp, #-20]	; 0xffffffec
   1fecc:	b	1fee4 <main@@Base+0xc2b4>
   1fed0:	ldr	r0, [fp, #-16]
   1fed4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fed8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fedc:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   1fee0:	str	r0, [fp, #-20]	; 0xffffffec
   1fee4:	b	1fee8 <main@@Base+0xc2b8>
   1fee8:	b	1feec <main@@Base+0xc2bc>
   1feec:	b	205a4 <main@@Base+0xc974>
   1fef0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fef4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fef8:	movw	r2, #26720	; 0x6860
   1fefc:	movt	r2, #24419	; 0x5f63
   1ff00:	subs	r0, r2, r0
   1ff04:	movw	r2, #26990	; 0x696e
   1ff08:	movt	r2, #28001	; 0x6d61
   1ff0c:	sbcs	r1, r2, r1
   1ff10:	bcc	2013c <main@@Base+0xc50c>
   1ff14:	b	1ff18 <main@@Base+0xc2e8>
   1ff18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ff1c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ff20:	movw	r2, #24946	; 0x6172
   1ff24:	movt	r2, #25448	; 0x6368
   1ff28:	eor	r1, r1, r2
   1ff2c:	movw	r2, #29797	; 0x7465
   1ff30:	movt	r2, #24931	; 0x6163
   1ff34:	eor	r0, r0, r2
   1ff38:	orr	r0, r0, r1
   1ff3c:	cmp	r0, #0
   1ff40:	bne	20124 <main@@Base+0xc4f4>
   1ff44:	b	1ff48 <main@@Base+0xc318>
   1ff48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff4c:	add	r0, r0, #8
   1ff50:	str	r0, [fp, #-20]	; 0xffffffec
   1ff54:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ff5c:	bl	17bdc <main@@Base+0x3fac>
   1ff60:	str	r1, [fp, #-52]	; 0xffffffcc
   1ff64:	str	r0, [fp, #-56]	; 0xffffffc8
   1ff68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ff6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ff70:	movw	r2, #29535	; 0x735f
   1ff74:	movt	r2, #114	; 0x72
   1ff78:	eor	r2, r2, r1, lsr #8
   1ff7c:	lsr	r0, r0, #8
   1ff80:	orr	r0, r0, r1, lsl #24
   1ff84:	movw	r1, #28773	; 0x7065
   1ff88:	movt	r1, #29817	; 0x7479
   1ff8c:	eor	r0, r0, r1
   1ff90:	orr	r0, r0, r2
   1ff94:	cmp	r0, #0
   1ff98:	bne	2005c <main@@Base+0xc42c>
   1ff9c:	b	1ffa0 <main@@Base+0xc370>
   1ffa0:	ldr	r0, [fp, #-16]
   1ffa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ffa8:	str	r1, [fp, #-48]	; 0xffffffd0
   1ffac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ffb0:	movw	r3, #7
   1ffb4:	bl	17c14 <main@@Base+0x3fe4>
   1ffb8:	str	r0, [fp, #-20]	; 0xffffffec
   1ffbc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ffc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ffc4:	cmp	r0, r1
   1ffc8:	beq	20044 <main@@Base+0xc414>
   1ffcc:	ldr	r0, [pc, #1668]	; 20658 <main@@Base+0xca28>
   1ffd0:	add	r0, pc, r0
   1ffd4:	ldr	r1, [pc, #1664]	; 2065c <main@@Base+0xca2c>
   1ffd8:	add	r1, pc, r1
   1ffdc:	ldr	r2, [pc, #1660]	; 20660 <main@@Base+0xca30>
   1ffe0:	add	r2, pc, r2
   1ffe4:	ldr	r3, [fp, #-16]
   1ffe8:	ldr	ip, [fp, #-20]	; 0xffffffec
   1ffec:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1fff0:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1fff4:	str	r0, [sp, #60]	; 0x3c
   1fff8:	mov	r0, r3
   1fffc:	str	r1, [sp, #56]	; 0x38
   20000:	mov	r1, ip
   20004:	str	r2, [sp, #52]	; 0x34
   20008:	mov	r2, lr
   2000c:	movw	r3, #4
   20010:	movw	ip, #9
   20014:	uxth	ip, ip
   20018:	str	ip, [sp]
   2001c:	str	r4, [sp, #4]
   20020:	ldr	ip, [sp, #60]	; 0x3c
   20024:	str	ip, [sp, #8]
   20028:	ldr	lr, [sp, #56]	; 0x38
   2002c:	str	lr, [sp, #12]
   20030:	ldr	r4, [sp, #52]	; 0x34
   20034:	str	r4, [sp, #16]
   20038:	bl	2eb58 <flatcc_json_parser_union_type_vector@@Base>
   2003c:	str	r0, [fp, #-20]	; 0xffffffec
   20040:	b	20058 <main@@Base+0xc428>
   20044:	ldr	r0, [fp, #-16]
   20048:	ldr	r1, [fp, #-20]	; 0xffffffec
   2004c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20050:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20054:	str	r0, [fp, #-20]	; 0xffffffec
   20058:	b	20120 <main@@Base+0xc4f0>
   2005c:	ldrh	r0, [fp, #-50]	; 0xffffffce
   20060:	movw	r1, #0
   20064:	movt	r1, #29299	; 0x7273
   20068:	teq	r1, r0, lsl #16
   2006c:	bne	20108 <main@@Base+0xc4d8>
   20070:	b	20074 <main@@Base+0xc444>
   20074:	ldr	r0, [fp, #-16]
   20078:	ldr	r1, [fp, #-20]	; 0xffffffec
   2007c:	str	r1, [fp, #-48]	; 0xffffffd0
   20080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20084:	movw	r3, #2
   20088:	bl	17c14 <main@@Base+0x3fe4>
   2008c:	str	r0, [fp, #-20]	; 0xffffffec
   20090:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20094:	ldr	r1, [fp, #-20]	; 0xffffffec
   20098:	cmp	r0, r1
   2009c:	beq	200f0 <main@@Base+0xc4c0>
   200a0:	ldr	r0, [pc, #1452]	; 20654 <main@@Base+0xca24>
   200a4:	add	r0, pc, r0
   200a8:	ldr	r1, [fp, #-16]
   200ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   200b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   200b4:	ldr	ip, [fp, #-60]	; 0xffffffc4
   200b8:	str	r0, [sp, #48]	; 0x30
   200bc:	mov	r0, r1
   200c0:	mov	r1, r2
   200c4:	mov	r2, r3
   200c8:	movw	r3, #4
   200cc:	movw	lr, #9
   200d0:	uxth	lr, lr
   200d4:	str	lr, [sp]
   200d8:	str	ip, [sp, #4]
   200dc:	ldr	ip, [sp, #48]	; 0x30
   200e0:	str	ip, [sp, #8]
   200e4:	bl	2e7c8 <flatcc_json_parser_union_vector@@Base>
   200e8:	str	r0, [fp, #-20]	; 0xffffffec
   200ec:	b	20104 <main@@Base+0xc4d4>
   200f0:	ldr	r0, [fp, #-16]
   200f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   200f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   200fc:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20100:	str	r0, [fp, #-20]	; 0xffffffec
   20104:	b	2011c <main@@Base+0xc4ec>
   20108:	ldr	r0, [fp, #-16]
   2010c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20114:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20118:	str	r0, [fp, #-20]	; 0xffffffec
   2011c:	b	20120 <main@@Base+0xc4f0>
   20120:	b	20138 <main@@Base+0xc508>
   20124:	ldr	r0, [fp, #-16]
   20128:	ldr	r1, [fp, #-20]	; 0xffffffec
   2012c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20130:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20134:	str	r0, [fp, #-20]	; 0xffffffec
   20138:	b	205a0 <main@@Base+0xc970>
   2013c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20140:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20144:	movw	r2, #26990	; 0x696e
   20148:	movt	r2, #28001	; 0x6d61
   2014c:	eor	r1, r1, r2
   20150:	movw	r2, #26721	; 0x6861
   20154:	movt	r2, #24419	; 0x5f63
   20158:	eor	r0, r0, r2
   2015c:	orr	r0, r0, r1
   20160:	cmp	r0, #0
   20164:	bne	20398 <main@@Base+0xc768>
   20168:	b	2016c <main@@Base+0xc53c>
   2016c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20170:	add	r0, r0, #8
   20174:	str	r0, [fp, #-20]	; 0xffffffec
   20178:	ldr	r0, [fp, #-20]	; 0xffffffec
   2017c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20180:	bl	17bdc <main@@Base+0x3fac>
   20184:	str	r1, [fp, #-52]	; 0xffffffcc
   20188:	str	r0, [fp, #-56]	; 0xffffffc8
   2018c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20190:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20194:	movw	r2, #25460	; 0x6374
   20198:	movt	r2, #29281	; 0x7261
   2019c:	eor	r1, r1, r2
   201a0:	movw	r2, #24436	; 0x5f74
   201a4:	movt	r2, #25970	; 0x6572
   201a8:	eor	r0, r0, r2
   201ac:	orr	r0, r0, r1
   201b0:	cmp	r0, #0
   201b4:	bne	202b8 <main@@Base+0xc688>
   201b8:	b	201bc <main@@Base+0xc58c>
   201bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   201c0:	add	r0, r0, #8
   201c4:	str	r0, [fp, #-20]	; 0xffffffec
   201c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   201cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   201d0:	bl	17bdc <main@@Base+0x3fac>
   201d4:	str	r1, [fp, #-52]	; 0xffffffcc
   201d8:	str	r0, [fp, #-56]	; 0xffffffc8
   201dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   201e0:	bic	r0, r0, #255	; 0xff
   201e4:	movw	r1, #25856	; 0x6500
   201e8:	movt	r1, #31088	; 0x7970
   201ec:	teq	r0, r1
   201f0:	bne	202a0 <main@@Base+0xc670>
   201f4:	b	201f8 <main@@Base+0xc5c8>
   201f8:	ldr	r0, [fp, #-16]
   201fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   20200:	str	r1, [fp, #-48]	; 0xffffffd0
   20204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20208:	movw	r3, #3
   2020c:	bl	17c14 <main@@Base+0x3fe4>
   20210:	str	r0, [fp, #-20]	; 0xffffffec
   20214:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20218:	ldr	r1, [fp, #-20]	; 0xffffffec
   2021c:	cmp	r0, r1
   20220:	beq	20288 <main@@Base+0xc658>
   20224:	ldr	r0, [pc, #1056]	; 2064c <main@@Base+0xca1c>
   20228:	add	r0, pc, r0
   2022c:	ldr	r1, [pc, #1052]	; 20650 <main@@Base+0xca20>
   20230:	add	r1, pc, r1
   20234:	ldr	r2, [fp, #-16]
   20238:	ldr	r3, [fp, #-20]	; 0xffffffec
   2023c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   20240:	ldr	lr, [fp, #-60]	; 0xffffffc4
   20244:	str	r0, [sp, #44]	; 0x2c
   20248:	mov	r0, r2
   2024c:	str	r1, [sp, #40]	; 0x28
   20250:	mov	r1, r3
   20254:	mov	r2, ip
   20258:	movw	r3, #0
   2025c:	movw	ip, #1
   20260:	uxth	ip, ip
   20264:	str	ip, [sp]
   20268:	str	lr, [sp, #4]
   2026c:	ldr	ip, [sp, #44]	; 0x2c
   20270:	str	ip, [sp, #8]
   20274:	ldr	lr, [sp, #40]	; 0x28
   20278:	str	lr, [sp, #12]
   2027c:	bl	2e21c <flatcc_json_parser_union_type@@Base>
   20280:	str	r0, [fp, #-20]	; 0xffffffec
   20284:	b	2029c <main@@Base+0xc66c>
   20288:	ldr	r0, [fp, #-16]
   2028c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20290:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20294:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20298:	str	r0, [fp, #-20]	; 0xffffffec
   2029c:	b	202b4 <main@@Base+0xc684>
   202a0:	ldr	r0, [fp, #-16]
   202a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   202a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   202ac:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   202b0:	str	r0, [fp, #-20]	; 0xffffffec
   202b4:	b	20394 <main@@Base+0xc764>
   202b8:	ldrh	r0, [fp, #-54]	; 0xffffffca
   202bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   202c0:	movw	r2, #29281	; 0x7261
   202c4:	eor	r2, r2, r1, lsr #16
   202c8:	orr	r0, r0, r1, lsl #16
   202cc:	movw	r1, #25970	; 0x6572
   202d0:	movt	r1, #25460	; 0x6374
   202d4:	eor	r0, r0, r1
   202d8:	orr	r0, r0, r2
   202dc:	cmp	r0, #0
   202e0:	bne	2037c <main@@Base+0xc74c>
   202e4:	b	202e8 <main@@Base+0xc6b8>
   202e8:	ldr	r0, [fp, #-16]
   202ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   202f0:	str	r1, [fp, #-48]	; 0xffffffd0
   202f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   202f8:	movw	r3, #6
   202fc:	bl	17c14 <main@@Base+0x3fe4>
   20300:	str	r0, [fp, #-20]	; 0xffffffec
   20304:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20308:	ldr	r1, [fp, #-20]	; 0xffffffec
   2030c:	cmp	r0, r1
   20310:	beq	20364 <main@@Base+0xc734>
   20314:	ldr	r0, [pc, #812]	; 20648 <main@@Base+0xca18>
   20318:	add	r0, pc, r0
   2031c:	ldr	r1, [fp, #-16]
   20320:	ldr	r2, [fp, #-20]	; 0xffffffec
   20324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20328:	ldr	ip, [fp, #-60]	; 0xffffffc4
   2032c:	str	r0, [sp, #36]	; 0x24
   20330:	mov	r0, r1
   20334:	mov	r1, r2
   20338:	mov	r2, r3
   2033c:	movw	r3, #0
   20340:	movw	lr, #1
   20344:	uxth	lr, lr
   20348:	str	lr, [sp]
   2034c:	str	ip, [sp, #4]
   20350:	ldr	ip, [sp, #36]	; 0x24
   20354:	str	ip, [sp, #8]
   20358:	bl	2e030 <flatcc_json_parser_union@@Base>
   2035c:	str	r0, [fp, #-20]	; 0xffffffec
   20360:	b	20378 <main@@Base+0xc748>
   20364:	ldr	r0, [fp, #-16]
   20368:	ldr	r1, [fp, #-20]	; 0xffffffec
   2036c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20370:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20374:	str	r0, [fp, #-20]	; 0xffffffec
   20378:	b	20390 <main@@Base+0xc760>
   2037c:	ldr	r0, [fp, #-16]
   20380:	ldr	r1, [fp, #-20]	; 0xffffffec
   20384:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20388:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   2038c:	str	r0, [fp, #-20]	; 0xffffffec
   20390:	b	20394 <main@@Base+0xc764>
   20394:	b	2059c <main@@Base+0xc96c>
   20398:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2039c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   203a0:	movw	r2, #25701	; 0x6465
   203a4:	movt	r2, #29545	; 0x7369
   203a8:	eor	r1, r1, r2
   203ac:	movw	r2, #26979	; 0x6963
   203b0:	movt	r2, #24427	; 0x5f6b
   203b4:	eor	r0, r0, r2
   203b8:	orr	r0, r0, r1
   203bc:	cmp	r0, #0
   203c0:	bne	20584 <main@@Base+0xc954>
   203c4:	b	203c8 <main@@Base+0xc798>
   203c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   203cc:	add	r0, r0, #8
   203d0:	str	r0, [fp, #-20]	; 0xffffffec
   203d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   203d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   203dc:	bl	17bdc <main@@Base+0x3fac>
   203e0:	str	r1, [fp, #-52]	; 0xffffffcc
   203e4:	str	r0, [fp, #-56]	; 0xffffffc8
   203e8:	ldrh	r0, [fp, #-54]	; 0xffffffca
   203ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   203f0:	movw	r2, #27487	; 0x6b5f
   203f4:	eor	r2, r2, r1, lsr #16
   203f8:	orr	r0, r0, r1, lsl #16
   203fc:	movw	r1, #28773	; 0x7065
   20400:	movt	r1, #29817	; 0x7479
   20404:	eor	r0, r0, r1
   20408:	orr	r0, r0, r2
   2040c:	cmp	r0, #0
   20410:	bne	204c0 <main@@Base+0xc890>
   20414:	b	20418 <main@@Base+0xc7e8>
   20418:	ldr	r0, [fp, #-16]
   2041c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20420:	str	r1, [fp, #-48]	; 0xffffffd0
   20424:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20428:	movw	r3, #6
   2042c:	bl	17c14 <main@@Base+0x3fe4>
   20430:	str	r0, [fp, #-20]	; 0xffffffec
   20434:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20438:	ldr	r1, [fp, #-20]	; 0xffffffec
   2043c:	cmp	r0, r1
   20440:	beq	204a8 <main@@Base+0xc878>
   20444:	ldr	r0, [pc, #500]	; 20640 <main@@Base+0xca10>
   20448:	add	r0, pc, r0
   2044c:	ldr	r1, [pc, #496]	; 20644 <main@@Base+0xca14>
   20450:	add	r1, pc, r1
   20454:	ldr	r2, [fp, #-16]
   20458:	ldr	r3, [fp, #-20]	; 0xffffffec
   2045c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   20460:	ldr	lr, [fp, #-60]	; 0xffffffc4
   20464:	str	r0, [sp, #32]
   20468:	mov	r0, r2
   2046c:	str	r1, [sp, #28]
   20470:	mov	r1, r3
   20474:	mov	r2, ip
   20478:	movw	r3, #2
   2047c:	movw	ip, #5
   20480:	uxth	ip, ip
   20484:	str	ip, [sp]
   20488:	str	lr, [sp, #4]
   2048c:	ldr	ip, [sp, #32]
   20490:	str	ip, [sp, #8]
   20494:	ldr	lr, [sp, #28]
   20498:	str	lr, [sp, #12]
   2049c:	bl	2e21c <flatcc_json_parser_union_type@@Base>
   204a0:	str	r0, [fp, #-20]	; 0xffffffec
   204a4:	b	204bc <main@@Base+0xc88c>
   204a8:	ldr	r0, [fp, #-16]
   204ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   204b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   204b4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   204b8:	str	r0, [fp, #-20]	; 0xffffffec
   204bc:	b	20580 <main@@Base+0xc950>
   204c0:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   204c4:	mov	r1, #1795162112	; 0x6b000000
   204c8:	teq	r1, r0, lsl #24
   204cc:	bne	20568 <main@@Base+0xc938>
   204d0:	b	204d4 <main@@Base+0xc8a4>
   204d4:	ldr	r0, [fp, #-16]
   204d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   204dc:	str	r1, [fp, #-48]	; 0xffffffd0
   204e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   204e4:	movw	r3, #1
   204e8:	bl	17c14 <main@@Base+0x3fe4>
   204ec:	str	r0, [fp, #-20]	; 0xffffffec
   204f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   204f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   204f8:	cmp	r0, r1
   204fc:	beq	20550 <main@@Base+0xc920>
   20500:	ldr	r0, [pc, #308]	; 2063c <main@@Base+0xca0c>
   20504:	add	r0, pc, r0
   20508:	ldr	r1, [fp, #-16]
   2050c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20514:	ldr	ip, [fp, #-60]	; 0xffffffc4
   20518:	str	r0, [sp, #24]
   2051c:	mov	r0, r1
   20520:	mov	r1, r2
   20524:	mov	r2, r3
   20528:	movw	r3, #2
   2052c:	movw	lr, #5
   20530:	uxth	lr, lr
   20534:	str	lr, [sp]
   20538:	str	ip, [sp, #4]
   2053c:	ldr	ip, [sp, #24]
   20540:	str	ip, [sp, #8]
   20544:	bl	2e030 <flatcc_json_parser_union@@Base>
   20548:	str	r0, [fp, #-20]	; 0xffffffec
   2054c:	b	20564 <main@@Base+0xc934>
   20550:	ldr	r0, [fp, #-16]
   20554:	ldr	r1, [fp, #-20]	; 0xffffffec
   20558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2055c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20560:	str	r0, [fp, #-20]	; 0xffffffec
   20564:	b	2057c <main@@Base+0xc94c>
   20568:	ldr	r0, [fp, #-16]
   2056c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20570:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20574:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20578:	str	r0, [fp, #-20]	; 0xffffffec
   2057c:	b	20580 <main@@Base+0xc950>
   20580:	b	20598 <main@@Base+0xc968>
   20584:	ldr	r0, [fp, #-16]
   20588:	ldr	r1, [fp, #-20]	; 0xffffffec
   2058c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20590:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20594:	str	r0, [fp, #-20]	; 0xffffffec
   20598:	b	2059c <main@@Base+0xc96c>
   2059c:	b	205a0 <main@@Base+0xc970>
   205a0:	b	205a4 <main@@Base+0xc974>
   205a4:	ldr	r0, [fp, #-16]
   205a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   205ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   205b0:	sub	r3, fp, #32
   205b4:	bl	1cebc <main@@Base+0x928c>
   205b8:	str	r0, [fp, #-20]	; 0xffffffec
   205bc:	b	1fa98 <main@@Base+0xbe68>
   205c0:	ldr	r0, [fp, #-16]
   205c4:	ldr	r0, [r0, #24]
   205c8:	cmp	r0, #0
   205cc:	beq	205d4 <main@@Base+0xc9a4>
   205d0:	b	20618 <main@@Base+0xc9e8>
   205d4:	ldr	r0, [fp, #-16]
   205d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   205dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   205e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   205e4:	bl	2dfb4 <flatcc_json_parser_finalize_unions@@Base>
   205e8:	str	r0, [fp, #-20]	; 0xffffffec
   205ec:	ldr	r0, [fp, #-16]
   205f0:	ldr	r0, [r0]
   205f4:	bl	26a5c <flatcc_builder_end_table@@Base>
   205f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   205fc:	str	r0, [r1]
   20600:	cmp	r0, #0
   20604:	bne	2060c <main@@Base+0xc9dc>
   20608:	b	20618 <main@@Base+0xc9e8>
   2060c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20610:	str	r0, [fp, #-12]
   20614:	b	20630 <main@@Base+0xca00>
   20618:	ldr	r0, [fp, #-16]
   2061c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20620:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20624:	movw	r3, #33	; 0x21
   20628:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2062c:	str	r0, [fp, #-12]
   20630:	ldr	r0, [fp, #-12]
   20634:	sub	sp, fp, #8
   20638:	pop	{r4, sl, fp, pc}
   2063c:	andeq	r1, r0, r4, lsl r8
   20640:			; <UNDEFINED> instruction: 0x00023eb4
   20644:	andeq	r1, r0, r8, asr #17
   20648:	andeq	r1, r0, r0, lsl #20
   2064c:	andeq	r4, r2, r4, asr #1
   20650:	andeq	r1, r0, r8, ror #21
   20654:	andeq	r1, r0, r4, ror ip
   20658:	andeq	r4, r2, ip, lsl #6
   2065c:	andeq	r1, r0, r0, asr #26
   20660:	andeq	r1, r0, r0, asr #30
   20664:	andeq	r1, r0, ip, lsr #29
   20668:	andeq	r4, r2, r8, asr #10
   2066c:	andeq	r1, r0, ip, lsl #31
   20670:	andeq	r2, r0, ip, lsr #1
   20674:	andeq	r4, r2, r0, lsl r7
   20678:	andeq	r2, r0, r4, ror #2
   2067c:	push	{fp, lr}
   20680:	mov	fp, sp
   20684:	sub	sp, sp, #64	; 0x40
   20688:	str	r0, [fp, #-8]
   2068c:	str	r1, [fp, #-12]
   20690:	str	r2, [fp, #-16]
   20694:	str	r3, [fp, #-20]	; 0xffffffec
   20698:	ldr	r0, [fp, #-20]	; 0xffffffec
   2069c:	movw	r1, #0
   206a0:	str	r1, [r0]
   206a4:	ldr	r0, [fp, #-8]
   206a8:	ldr	r0, [r0]
   206ac:	movw	r1, #2
   206b0:	bl	25df4 <flatcc_builder_start_table@@Base>
   206b4:	cmp	r0, #0
   206b8:	beq	206c0 <main@@Base+0xca90>
   206bc:	b	20ab4 <main@@Base+0xce84>
   206c0:	ldr	r0, [fp, #-8]
   206c4:	ldr	r1, [fp, #-12]
   206c8:	ldr	r2, [fp, #-16]
   206cc:	sub	r3, fp, #24
   206d0:	bl	17a4c <main@@Base+0x3e1c>
   206d4:	str	r0, [fp, #-12]
   206d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   206dc:	cmp	r0, #0
   206e0:	beq	20a74 <main@@Base+0xce44>
   206e4:	ldr	r0, [fp, #-8]
   206e8:	ldr	r1, [fp, #-12]
   206ec:	ldr	r2, [fp, #-16]
   206f0:	bl	17b30 <main@@Base+0x3f00>
   206f4:	str	r0, [fp, #-12]
   206f8:	ldr	r0, [fp, #-12]
   206fc:	ldr	r1, [fp, #-16]
   20700:	bl	17bdc <main@@Base+0x3fac>
   20704:	str	r1, [sp, #20]
   20708:	str	r0, [sp, #16]
   2070c:	ldr	r0, [sp, #16]
   20710:	ldr	r1, [sp, #20]
   20714:	movw	r2, #24929	; 0x6161
   20718:	movt	r2, #24929	; 0x6161
   2071c:	eor	r1, r1, r2
   20720:	movw	r2, #25186	; 0x6262
   20724:	movt	r2, #24418	; 0x5f62
   20728:	eor	r0, r0, r2
   2072c:	orr	r0, r0, r1
   20730:	cmp	r0, #0
   20734:	bne	20a44 <main@@Base+0xce14>
   20738:	b	2073c <main@@Base+0xcb0c>
   2073c:	ldr	r0, [fp, #-12]
   20740:	add	r0, r0, #8
   20744:	str	r0, [fp, #-12]
   20748:	ldr	r0, [fp, #-12]
   2074c:	ldr	r1, [fp, #-16]
   20750:	bl	17bdc <main@@Base+0x3fac>
   20754:	str	r1, [sp, #20]
   20758:	str	r0, [sp, #16]
   2075c:	ldr	r0, [sp, #16]
   20760:	ldr	r1, [sp, #20]
   20764:	movw	r2, #24435	; 0x5f73
   20768:	movt	r2, #98	; 0x62
   2076c:	eor	r2, r2, r1, lsr #8
   20770:	lsr	r0, r0, #8
   20774:	orr	r0, r0, r1, lsl #24
   20778:	movw	r1, #28787	; 0x7073
   2077c:	movt	r1, #29797	; 0x7465
   20780:	eor	r0, r0, r1
   20784:	orr	r0, r0, r2
   20788:	cmp	r0, #0
   2078c:	bne	208d0 <main@@Base+0xcca0>
   20790:	b	20794 <main@@Base+0xcb64>
   20794:	ldr	r0, [fp, #-8]
   20798:	ldr	r1, [fp, #-12]
   2079c:	str	r1, [sp, #24]
   207a0:	ldr	r2, [fp, #-16]
   207a4:	movw	r3, #7
   207a8:	bl	17c14 <main@@Base+0x3fe4>
   207ac:	str	r0, [fp, #-12]
   207b0:	ldr	r0, [sp, #24]
   207b4:	ldr	r1, [fp, #-12]
   207b8:	cmp	r0, r1
   207bc:	beq	208b8 <main@@Base+0xcc88>
   207c0:	mov	r0, #0
   207c4:	str	r0, [sp, #12]
   207c8:	str	r0, [sp, #8]
   207cc:	ldr	r0, [fp, #-8]
   207d0:	ldr	r1, [fp, #-12]
   207d4:	str	r1, [sp, #24]
   207d8:	ldr	r2, [fp, #-16]
   207dc:	add	r3, sp, #8
   207e0:	bl	1c288 <main@@Base+0x8658>
   207e4:	str	r0, [fp, #-12]
   207e8:	ldr	r0, [sp, #24]
   207ec:	ldr	r1, [fp, #-12]
   207f0:	cmp	r0, r1
   207f4:	bne	20848 <main@@Base+0xcc18>
   207f8:	ldr	r0, [pc, #732]	; 20adc <main@@Base+0xceac>
   207fc:	add	r3, pc, r0
   20800:	ldr	r0, [fp, #-8]
   20804:	ldr	r1, [fp, #-12]
   20808:	str	r1, [sp, #24]
   2080c:	ldr	r2, [fp, #-16]
   20810:	add	ip, sp, #8
   20814:	str	ip, [sp]
   20818:	bl	1c360 <main@@Base+0x8730>
   2081c:	str	r0, [fp, #-12]
   20820:	ldr	r0, [fp, #-12]
   20824:	ldr	r1, [sp, #24]
   20828:	cmp	r0, r1
   2082c:	beq	20840 <main@@Base+0xcc10>
   20830:	ldr	r0, [fp, #-12]
   20834:	ldr	r1, [fp, #-16]
   20838:	cmp	r0, r1
   2083c:	bne	20844 <main@@Base+0xcc14>
   20840:	b	20ab4 <main@@Base+0xce84>
   20844:	b	20848 <main@@Base+0xcc18>
   20848:	ldr	r0, [sp, #8]
   2084c:	ldr	r1, [sp, #12]
   20850:	orr	r0, r0, r1
   20854:	cmp	r0, #0
   20858:	bne	20874 <main@@Base+0xcc44>
   2085c:	b	20860 <main@@Base+0xcc30>
   20860:	ldr	r0, [fp, #-8]
   20864:	ldr	r0, [r0, #8]
   20868:	and	r0, r0, #2
   2086c:	cmp	r0, #0
   20870:	beq	208b4 <main@@Base+0xcc84>
   20874:	ldr	r0, [fp, #-8]
   20878:	ldr	r0, [r0]
   2087c:	movw	r1, #0
   20880:	movw	r2, #8
   20884:	movw	r3, #8
   20888:	uxth	r3, r3
   2088c:	bl	27698 <flatcc_builder_table_add@@Base>
   20890:	str	r0, [fp, #-28]	; 0xffffffe4
   20894:	movw	r1, #0
   20898:	cmp	r0, r1
   2089c:	bne	208a4 <main@@Base+0xcc74>
   208a0:	b	20ab4 <main@@Base+0xce84>
   208a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   208a8:	ldr	r2, [sp, #8]
   208ac:	ldr	r3, [sp, #12]
   208b0:	bl	1c5a0 <main@@Base+0x8970>
   208b4:	b	208cc <main@@Base+0xcc9c>
   208b8:	ldr	r0, [fp, #-8]
   208bc:	ldr	r1, [fp, #-12]
   208c0:	ldr	r2, [fp, #-16]
   208c4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   208c8:	str	r0, [fp, #-12]
   208cc:	b	20a40 <main@@Base+0xce10>
   208d0:	ldr	r0, [sp, #16]
   208d4:	ldr	r1, [sp, #20]
   208d8:	movw	r2, #29556	; 0x7374
   208dc:	movt	r2, #25183	; 0x625f
   208e0:	eor	r1, r1, r2
   208e4:	movw	r2, #29791	; 0x745f
   208e8:	movt	r2, #24946	; 0x6172
   208ec:	eor	r0, r0, r2
   208f0:	orr	r0, r0, r1
   208f4:	cmp	r0, #0
   208f8:	bne	20a28 <main@@Base+0xcdf8>
   208fc:	b	20900 <main@@Base+0xccd0>
   20900:	ldr	r0, [fp, #-8]
   20904:	ldr	r1, [fp, #-12]
   20908:	str	r1, [sp, #24]
   2090c:	ldr	r2, [fp, #-16]
   20910:	movw	r3, #8
   20914:	bl	17c14 <main@@Base+0x3fe4>
   20918:	str	r0, [fp, #-12]
   2091c:	ldr	r0, [sp, #24]
   20920:	ldr	r1, [fp, #-12]
   20924:	cmp	r0, r1
   20928:	beq	20a10 <main@@Base+0xcde0>
   2092c:	movw	r0, #0
   20930:	str	r0, [sp, #4]
   20934:	ldr	r0, [fp, #-8]
   20938:	ldr	r1, [fp, #-12]
   2093c:	str	r1, [sp, #24]
   20940:	ldr	r2, [fp, #-16]
   20944:	add	r3, sp, #4
   20948:	bl	1c5d8 <main@@Base+0x89a8>
   2094c:	str	r0, [fp, #-12]
   20950:	ldr	r0, [sp, #24]
   20954:	ldr	r1, [fp, #-12]
   20958:	cmp	r0, r1
   2095c:	bne	209b0 <main@@Base+0xcd80>
   20960:	ldr	r0, [pc, #368]	; 20ad8 <main@@Base+0xcea8>
   20964:	add	r3, pc, r0
   20968:	ldr	r0, [fp, #-8]
   2096c:	ldr	r1, [fp, #-12]
   20970:	str	r1, [sp, #24]
   20974:	ldr	r2, [fp, #-16]
   20978:	add	ip, sp, #4
   2097c:	str	ip, [sp]
   20980:	bl	1c6b0 <main@@Base+0x8a80>
   20984:	str	r0, [fp, #-12]
   20988:	ldr	r0, [fp, #-12]
   2098c:	ldr	r1, [sp, #24]
   20990:	cmp	r0, r1
   20994:	beq	209a8 <main@@Base+0xcd78>
   20998:	ldr	r0, [fp, #-12]
   2099c:	ldr	r1, [fp, #-16]
   209a0:	cmp	r0, r1
   209a4:	bne	209ac <main@@Base+0xcd7c>
   209a8:	b	20ab4 <main@@Base+0xce84>
   209ac:	b	209b0 <main@@Base+0xcd80>
   209b0:	ldr	r0, [sp, #4]
   209b4:	cmp	r0, #0
   209b8:	bne	209d0 <main@@Base+0xcda0>
   209bc:	ldr	r0, [fp, #-8]
   209c0:	ldr	r0, [r0, #8]
   209c4:	and	r0, r0, #2
   209c8:	cmp	r0, #0
   209cc:	beq	20a0c <main@@Base+0xcddc>
   209d0:	ldr	r0, [fp, #-8]
   209d4:	ldr	r0, [r0]
   209d8:	movw	r1, #1
   209dc:	movw	r2, #4
   209e0:	movw	r3, #4
   209e4:	uxth	r3, r3
   209e8:	bl	27698 <flatcc_builder_table_add@@Base>
   209ec:	str	r0, [fp, #-28]	; 0xffffffe4
   209f0:	movw	r1, #0
   209f4:	cmp	r0, r1
   209f8:	bne	20a00 <main@@Base+0xcdd0>
   209fc:	b	20ab4 <main@@Base+0xce84>
   20a00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20a04:	ldr	r1, [sp, #4]
   20a08:	bl	1c8d8 <main@@Base+0x8ca8>
   20a0c:	b	20a24 <main@@Base+0xcdf4>
   20a10:	ldr	r0, [fp, #-8]
   20a14:	ldr	r1, [fp, #-12]
   20a18:	ldr	r2, [fp, #-16]
   20a1c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20a20:	str	r0, [fp, #-12]
   20a24:	b	20a3c <main@@Base+0xce0c>
   20a28:	ldr	r0, [fp, #-8]
   20a2c:	ldr	r1, [fp, #-12]
   20a30:	ldr	r2, [fp, #-16]
   20a34:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20a38:	str	r0, [fp, #-12]
   20a3c:	b	20a40 <main@@Base+0xce10>
   20a40:	b	20a58 <main@@Base+0xce28>
   20a44:	ldr	r0, [fp, #-8]
   20a48:	ldr	r1, [fp, #-12]
   20a4c:	ldr	r2, [fp, #-16]
   20a50:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20a54:	str	r0, [fp, #-12]
   20a58:	ldr	r0, [fp, #-8]
   20a5c:	ldr	r1, [fp, #-12]
   20a60:	ldr	r2, [fp, #-16]
   20a64:	sub	r3, fp, #24
   20a68:	bl	1cebc <main@@Base+0x928c>
   20a6c:	str	r0, [fp, #-12]
   20a70:	b	206d8 <main@@Base+0xcaa8>
   20a74:	ldr	r0, [fp, #-8]
   20a78:	ldr	r0, [r0, #24]
   20a7c:	cmp	r0, #0
   20a80:	beq	20a88 <main@@Base+0xce58>
   20a84:	b	20ab4 <main@@Base+0xce84>
   20a88:	ldr	r0, [fp, #-8]
   20a8c:	ldr	r0, [r0]
   20a90:	bl	26a5c <flatcc_builder_end_table@@Base>
   20a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   20a98:	str	r0, [r1]
   20a9c:	cmp	r0, #0
   20aa0:	bne	20aa8 <main@@Base+0xce78>
   20aa4:	b	20ab4 <main@@Base+0xce84>
   20aa8:	ldr	r0, [fp, #-12]
   20aac:	str	r0, [fp, #-4]
   20ab0:	b	20acc <main@@Base+0xce9c>
   20ab4:	ldr	r0, [fp, #-8]
   20ab8:	ldr	r1, [fp, #-12]
   20abc:	ldr	r2, [fp, #-16]
   20ac0:	movw	r3, #33	; 0x21
   20ac4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   20ac8:	str	r0, [fp, #-4]
   20acc:	ldr	r0, [fp, #-4]
   20ad0:	mov	sp, fp
   20ad4:	pop	{fp, pc}
   20ad8:	andeq	r3, r2, ip, ror #17
   20adc:	andeq	r3, r2, r8, asr #20
   20ae0:	push	{fp, lr}
   20ae4:	mov	fp, sp
   20ae8:	sub	sp, sp, #96	; 0x60
   20aec:	str	r0, [fp, #-8]
   20af0:	str	r1, [fp, #-12]
   20af4:	str	r2, [fp, #-16]
   20af8:	str	r3, [fp, #-20]	; 0xffffffec
   20afc:	ldr	r0, [fp, #-20]	; 0xffffffec
   20b00:	movw	r1, #0
   20b04:	str	r1, [r0]
   20b08:	ldr	r0, [fp, #-8]
   20b0c:	ldr	r0, [r0]
   20b10:	movw	r1, #9
   20b14:	bl	25df4 <flatcc_builder_start_table@@Base>
   20b18:	cmp	r0, #0
   20b1c:	beq	20b24 <main@@Base+0xcef4>
   20b20:	b	216dc <main@@Base+0xdaac>
   20b24:	ldr	r0, [fp, #-8]
   20b28:	ldr	r1, [fp, #-12]
   20b2c:	ldr	r2, [fp, #-16]
   20b30:	sub	r3, fp, #24
   20b34:	bl	17a4c <main@@Base+0x3e1c>
   20b38:	str	r0, [fp, #-12]
   20b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20b40:	cmp	r0, #0
   20b44:	beq	2169c <main@@Base+0xda6c>
   20b48:	ldr	r0, [fp, #-8]
   20b4c:	ldr	r1, [fp, #-12]
   20b50:	ldr	r2, [fp, #-16]
   20b54:	bl	17b30 <main@@Base+0x3f00>
   20b58:	str	r0, [fp, #-12]
   20b5c:	ldr	r0, [fp, #-12]
   20b60:	ldr	r1, [fp, #-16]
   20b64:	bl	17bdc <main@@Base+0x3fac>
   20b68:	str	r1, [sp, #52]	; 0x34
   20b6c:	str	r0, [sp, #48]	; 0x30
   20b70:	ldr	r0, [sp, #52]	; 0x34
   20b74:	movw	r1, #25442	; 0x6362
   20b78:	movt	r1, #25443	; 0x6363
   20b7c:	cmp	r0, r1
   20b80:	bhi	2101c <main@@Base+0xd3ec>
   20b84:	b	20b88 <main@@Base+0xcf58>
   20b88:	ldr	r0, [sp, #48]	; 0x30
   20b8c:	ldr	r1, [sp, #52]	; 0x34
   20b90:	movw	r2, #24929	; 0x6161
   20b94:	movt	r2, #24929	; 0x6161
   20b98:	eor	r1, r1, r2
   20b9c:	movw	r2, #13108	; 0x3334
   20ba0:	movt	r2, #12594	; 0x3132
   20ba4:	eor	r0, r0, r2
   20ba8:	orr	r0, r0, r1
   20bac:	cmp	r0, #0
   20bb0:	bne	20d2c <main@@Base+0xd0fc>
   20bb4:	b	20bb8 <main@@Base+0xcf88>
   20bb8:	ldr	r0, [fp, #-12]
   20bbc:	add	r0, r0, #8
   20bc0:	str	r0, [fp, #-12]
   20bc4:	ldr	r0, [fp, #-12]
   20bc8:	ldr	r1, [fp, #-16]
   20bcc:	bl	17bdc <main@@Base+0x3fac>
   20bd0:	str	r1, [sp, #52]	; 0x34
   20bd4:	str	r0, [sp, #48]	; 0x30
   20bd8:	ldrb	r0, [sp, #55]	; 0x37
   20bdc:	mov	r1, #889192448	; 0x35000000
   20be0:	teq	r1, r0, lsl #24
   20be4:	bne	20d14 <main@@Base+0xd0e4>
   20be8:	b	20bec <main@@Base+0xcfbc>
   20bec:	ldr	r0, [fp, #-8]
   20bf0:	ldr	r1, [fp, #-12]
   20bf4:	str	r1, [fp, #-40]	; 0xffffffd8
   20bf8:	ldr	r2, [fp, #-16]
   20bfc:	movw	r3, #1
   20c00:	bl	17c14 <main@@Base+0x3fe4>
   20c04:	str	r0, [fp, #-12]
   20c08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20c0c:	ldr	r1, [fp, #-12]
   20c10:	cmp	r0, r1
   20c14:	beq	20cfc <main@@Base+0xd0cc>
   20c18:	movw	r0, #0
   20c1c:	str	r0, [sp, #44]	; 0x2c
   20c20:	ldr	r0, [fp, #-8]
   20c24:	ldr	r1, [fp, #-12]
   20c28:	str	r1, [fp, #-40]	; 0xffffffd8
   20c2c:	ldr	r2, [fp, #-16]
   20c30:	add	r3, sp, #44	; 0x2c
   20c34:	bl	1c5d8 <main@@Base+0x89a8>
   20c38:	str	r0, [fp, #-12]
   20c3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20c40:	ldr	r1, [fp, #-12]
   20c44:	cmp	r0, r1
   20c48:	bne	20c9c <main@@Base+0xd06c>
   20c4c:	ldr	r0, [pc, #2752]	; 21714 <main@@Base+0xdae4>
   20c50:	add	r3, pc, r0
   20c54:	ldr	r0, [fp, #-8]
   20c58:	ldr	r1, [fp, #-12]
   20c5c:	str	r1, [fp, #-40]	; 0xffffffd8
   20c60:	ldr	r2, [fp, #-16]
   20c64:	add	ip, sp, #44	; 0x2c
   20c68:	str	ip, [sp]
   20c6c:	bl	1c6b0 <main@@Base+0x8a80>
   20c70:	str	r0, [fp, #-12]
   20c74:	ldr	r0, [fp, #-12]
   20c78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20c7c:	cmp	r0, r1
   20c80:	beq	20c94 <main@@Base+0xd064>
   20c84:	ldr	r0, [fp, #-12]
   20c88:	ldr	r1, [fp, #-16]
   20c8c:	cmp	r0, r1
   20c90:	bne	20c98 <main@@Base+0xd068>
   20c94:	b	216dc <main@@Base+0xdaac>
   20c98:	b	20c9c <main@@Base+0xd06c>
   20c9c:	ldr	r0, [sp, #44]	; 0x2c
   20ca0:	cmp	r0, #0
   20ca4:	bne	20cbc <main@@Base+0xd08c>
   20ca8:	ldr	r0, [fp, #-8]
   20cac:	ldr	r0, [r0, #8]
   20cb0:	and	r0, r0, #2
   20cb4:	cmp	r0, #0
   20cb8:	beq	20cf8 <main@@Base+0xd0c8>
   20cbc:	ldr	r0, [fp, #-8]
   20cc0:	ldr	r0, [r0]
   20cc4:	movw	r1, #1
   20cc8:	movw	r2, #4
   20ccc:	movw	r3, #4
   20cd0:	uxth	r3, r3
   20cd4:	bl	27698 <flatcc_builder_table_add@@Base>
   20cd8:	str	r0, [fp, #-28]	; 0xffffffe4
   20cdc:	movw	r1, #0
   20ce0:	cmp	r0, r1
   20ce4:	bne	20cec <main@@Base+0xd0bc>
   20ce8:	b	216dc <main@@Base+0xdaac>
   20cec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20cf0:	ldr	r1, [sp, #44]	; 0x2c
   20cf4:	bl	1c8d8 <main@@Base+0x8ca8>
   20cf8:	b	20d10 <main@@Base+0xd0e0>
   20cfc:	ldr	r0, [fp, #-8]
   20d00:	ldr	r1, [fp, #-12]
   20d04:	ldr	r2, [fp, #-16]
   20d08:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20d0c:	str	r0, [fp, #-12]
   20d10:	b	20d28 <main@@Base+0xd0f8>
   20d14:	ldr	r0, [fp, #-8]
   20d18:	ldr	r1, [fp, #-12]
   20d1c:	ldr	r2, [fp, #-16]
   20d20:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20d24:	str	r0, [fp, #-12]
   20d28:	b	21018 <main@@Base+0xd3e8>
   20d2c:	ldr	r0, [sp, #52]	; 0x34
   20d30:	movw	r1, #24929	; 0x6161
   20d34:	movt	r1, #24929	; 0x6161
   20d38:	teq	r0, r1
   20d3c:	bne	20dd0 <main@@Base+0xd1a0>
   20d40:	b	20d44 <main@@Base+0xd114>
   20d44:	ldr	r0, [fp, #-8]
   20d48:	ldr	r1, [fp, #-12]
   20d4c:	str	r1, [fp, #-40]	; 0xffffffd8
   20d50:	ldr	r2, [fp, #-16]
   20d54:	movw	r3, #4
   20d58:	bl	17c14 <main@@Base+0x3fe4>
   20d5c:	str	r0, [fp, #-12]
   20d60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20d64:	ldr	r1, [fp, #-12]
   20d68:	cmp	r0, r1
   20d6c:	beq	20dc8 <main@@Base+0xd198>
   20d70:	ldr	r0, [fp, #-8]
   20d74:	ldr	r1, [fp, #-12]
   20d78:	ldr	r2, [fp, #-16]
   20d7c:	sub	r3, fp, #32
   20d80:	bl	2dd04 <flatcc_json_parser_build_string@@Base>
   20d84:	str	r0, [fp, #-12]
   20d88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20d8c:	cmp	r0, #0
   20d90:	beq	20db4 <main@@Base+0xd184>
   20d94:	ldr	r0, [fp, #-8]
   20d98:	ldr	r0, [r0]
   20d9c:	movw	r1, #0
   20da0:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   20da4:	str	r0, [fp, #-36]	; 0xffffffdc
   20da8:	movw	r1, #0
   20dac:	cmp	r0, r1
   20db0:	bne	20db8 <main@@Base+0xd188>
   20db4:	b	216dc <main@@Base+0xdaac>
   20db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20dbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20dc0:	str	r0, [r1]
   20dc4:	b	20dcc <main@@Base+0xd19c>
   20dc8:	b	20dd8 <main@@Base+0xd1a8>
   20dcc:	b	20dd4 <main@@Base+0xd1a4>
   20dd0:	b	20dd8 <main@@Base+0xd1a8>
   20dd4:	b	21014 <main@@Base+0xd3e4>
   20dd8:	ldr	r0, [sp, #48]	; 0x30
   20ddc:	ldr	r1, [sp, #52]	; 0x34
   20de0:	movw	r2, #25186	; 0x6262
   20de4:	movt	r2, #25186	; 0x6262
   20de8:	eor	r1, r1, r2
   20dec:	movw	r2, #13108	; 0x3334
   20df0:	movt	r2, #12594	; 0x3132
   20df4:	eor	r0, r0, r2
   20df8:	orr	r0, r0, r1
   20dfc:	cmp	r0, #0
   20e00:	bne	20f44 <main@@Base+0xd314>
   20e04:	b	20e08 <main@@Base+0xd1d8>
   20e08:	ldr	r0, [fp, #-8]
   20e0c:	ldr	r1, [fp, #-12]
   20e10:	str	r1, [fp, #-40]	; 0xffffffd8
   20e14:	ldr	r2, [fp, #-16]
   20e18:	movw	r3, #8
   20e1c:	bl	17c14 <main@@Base+0x3fe4>
   20e20:	str	r0, [fp, #-12]
   20e24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20e28:	ldr	r1, [fp, #-12]
   20e2c:	cmp	r0, r1
   20e30:	beq	20f2c <main@@Base+0xd2fc>
   20e34:	mov	r0, #0
   20e38:	str	r0, [sp, #36]	; 0x24
   20e3c:	str	r0, [sp, #32]
   20e40:	ldr	r0, [fp, #-8]
   20e44:	ldr	r1, [fp, #-12]
   20e48:	str	r1, [fp, #-40]	; 0xffffffd8
   20e4c:	ldr	r2, [fp, #-16]
   20e50:	add	r3, sp, #32
   20e54:	bl	1c288 <main@@Base+0x8658>
   20e58:	str	r0, [fp, #-12]
   20e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20e60:	ldr	r1, [fp, #-12]
   20e64:	cmp	r0, r1
   20e68:	bne	20ebc <main@@Base+0xd28c>
   20e6c:	ldr	r0, [pc, #2204]	; 21710 <main@@Base+0xdae0>
   20e70:	add	r3, pc, r0
   20e74:	ldr	r0, [fp, #-8]
   20e78:	ldr	r1, [fp, #-12]
   20e7c:	str	r1, [fp, #-40]	; 0xffffffd8
   20e80:	ldr	r2, [fp, #-16]
   20e84:	add	ip, sp, #32
   20e88:	str	ip, [sp]
   20e8c:	bl	1c360 <main@@Base+0x8730>
   20e90:	str	r0, [fp, #-12]
   20e94:	ldr	r0, [fp, #-12]
   20e98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20e9c:	cmp	r0, r1
   20ea0:	beq	20eb4 <main@@Base+0xd284>
   20ea4:	ldr	r0, [fp, #-12]
   20ea8:	ldr	r1, [fp, #-16]
   20eac:	cmp	r0, r1
   20eb0:	bne	20eb8 <main@@Base+0xd288>
   20eb4:	b	216dc <main@@Base+0xdaac>
   20eb8:	b	20ebc <main@@Base+0xd28c>
   20ebc:	ldr	r0, [sp, #32]
   20ec0:	ldr	r1, [sp, #36]	; 0x24
   20ec4:	orr	r0, r0, r1
   20ec8:	cmp	r0, #0
   20ecc:	bne	20ee8 <main@@Base+0xd2b8>
   20ed0:	b	20ed4 <main@@Base+0xd2a4>
   20ed4:	ldr	r0, [fp, #-8]
   20ed8:	ldr	r0, [r0, #8]
   20edc:	and	r0, r0, #2
   20ee0:	cmp	r0, #0
   20ee4:	beq	20f28 <main@@Base+0xd2f8>
   20ee8:	ldr	r0, [fp, #-8]
   20eec:	ldr	r0, [r0]
   20ef0:	movw	r1, #3
   20ef4:	movw	r2, #8
   20ef8:	movw	r3, #8
   20efc:	uxth	r3, r3
   20f00:	bl	27698 <flatcc_builder_table_add@@Base>
   20f04:	str	r0, [fp, #-28]	; 0xffffffe4
   20f08:	movw	r1, #0
   20f0c:	cmp	r0, r1
   20f10:	bne	20f18 <main@@Base+0xd2e8>
   20f14:	b	216dc <main@@Base+0xdaac>
   20f18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20f1c:	ldr	r2, [sp, #32]
   20f20:	ldr	r3, [sp, #36]	; 0x24
   20f24:	bl	1c5a0 <main@@Base+0x8970>
   20f28:	b	20f40 <main@@Base+0xd310>
   20f2c:	ldr	r0, [fp, #-8]
   20f30:	ldr	r1, [fp, #-12]
   20f34:	ldr	r2, [fp, #-16]
   20f38:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20f3c:	str	r0, [fp, #-12]
   20f40:	b	21010 <main@@Base+0xd3e0>
   20f44:	ldr	r0, [sp, #52]	; 0x34
   20f48:	movw	r1, #25186	; 0x6262
   20f4c:	movt	r1, #25186	; 0x6262
   20f50:	teq	r0, r1
   20f54:	bne	20ff8 <main@@Base+0xd3c8>
   20f58:	b	20f5c <main@@Base+0xd32c>
   20f5c:	ldr	r0, [fp, #-8]
   20f60:	ldr	r1, [fp, #-12]
   20f64:	str	r1, [fp, #-40]	; 0xffffffd8
   20f68:	ldr	r2, [fp, #-16]
   20f6c:	movw	r3, #4
   20f70:	bl	17c14 <main@@Base+0x3fe4>
   20f74:	str	r0, [fp, #-12]
   20f78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20f7c:	ldr	r1, [fp, #-12]
   20f80:	cmp	r0, r1
   20f84:	beq	20fe0 <main@@Base+0xd3b0>
   20f88:	ldr	r0, [fp, #-8]
   20f8c:	ldr	r1, [fp, #-12]
   20f90:	ldr	r2, [fp, #-16]
   20f94:	sub	r3, fp, #32
   20f98:	bl	2dd04 <flatcc_json_parser_build_string@@Base>
   20f9c:	str	r0, [fp, #-12]
   20fa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20fa4:	cmp	r0, #0
   20fa8:	beq	20fcc <main@@Base+0xd39c>
   20fac:	ldr	r0, [fp, #-8]
   20fb0:	ldr	r0, [r0]
   20fb4:	movw	r1, #2
   20fb8:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   20fbc:	str	r0, [fp, #-36]	; 0xffffffdc
   20fc0:	movw	r1, #0
   20fc4:	cmp	r0, r1
   20fc8:	bne	20fd0 <main@@Base+0xd3a0>
   20fcc:	b	216dc <main@@Base+0xdaac>
   20fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20fd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20fd8:	str	r0, [r1]
   20fdc:	b	20ff4 <main@@Base+0xd3c4>
   20fe0:	ldr	r0, [fp, #-8]
   20fe4:	ldr	r1, [fp, #-12]
   20fe8:	ldr	r2, [fp, #-16]
   20fec:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   20ff0:	str	r0, [fp, #-12]
   20ff4:	b	2100c <main@@Base+0xd3dc>
   20ff8:	ldr	r0, [fp, #-8]
   20ffc:	ldr	r1, [fp, #-12]
   21000:	ldr	r2, [fp, #-16]
   21004:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   21008:	str	r0, [fp, #-12]
   2100c:	b	21010 <main@@Base+0xd3e0>
   21010:	b	21014 <main@@Base+0xd3e4>
   21014:	b	21018 <main@@Base+0xd3e8>
   21018:	b	21680 <main@@Base+0xda50>
   2101c:	ldr	r0, [sp, #48]	; 0x30
   21020:	ldr	r1, [sp, #52]	; 0x34
   21024:	movw	r2, #25443	; 0x6363
   21028:	movt	r2, #25443	; 0x6363
   2102c:	eor	r1, r1, r2
   21030:	movw	r2, #13108	; 0x3334
   21034:	movt	r2, #12594	; 0x3132
   21038:	eor	r0, r0, r2
   2103c:	orr	r0, r0, r1
   21040:	cmp	r0, #0
   21044:	bne	212e8 <main@@Base+0xd6b8>
   21048:	b	2104c <main@@Base+0xd41c>
   2104c:	ldr	r0, [fp, #-8]
   21050:	ldr	r1, [fp, #-12]
   21054:	str	r1, [fp, #-40]	; 0xffffffd8
   21058:	ldr	r2, [fp, #-16]
   2105c:	movw	r3, #8
   21060:	bl	17c14 <main@@Base+0x3fe4>
   21064:	str	r0, [fp, #-12]
   21068:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2106c:	ldr	r1, [fp, #-12]
   21070:	cmp	r0, r1
   21074:	beq	21170 <main@@Base+0xd540>
   21078:	mov	r0, #0
   2107c:	str	r0, [sp, #28]
   21080:	str	r0, [sp, #24]
   21084:	ldr	r0, [fp, #-8]
   21088:	ldr	r1, [fp, #-12]
   2108c:	str	r1, [fp, #-40]	; 0xffffffd8
   21090:	ldr	r2, [fp, #-16]
   21094:	add	r3, sp, #24
   21098:	bl	1c288 <main@@Base+0x8658>
   2109c:	str	r0, [fp, #-12]
   210a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   210a4:	ldr	r1, [fp, #-12]
   210a8:	cmp	r0, r1
   210ac:	bne	21100 <main@@Base+0xd4d0>
   210b0:	ldr	r0, [pc, #1620]	; 2170c <main@@Base+0xdadc>
   210b4:	add	r3, pc, r0
   210b8:	ldr	r0, [fp, #-8]
   210bc:	ldr	r1, [fp, #-12]
   210c0:	str	r1, [fp, #-40]	; 0xffffffd8
   210c4:	ldr	r2, [fp, #-16]
   210c8:	add	ip, sp, #24
   210cc:	str	ip, [sp]
   210d0:	bl	1c360 <main@@Base+0x8730>
   210d4:	str	r0, [fp, #-12]
   210d8:	ldr	r0, [fp, #-12]
   210dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   210e0:	cmp	r0, r1
   210e4:	beq	210f8 <main@@Base+0xd4c8>
   210e8:	ldr	r0, [fp, #-12]
   210ec:	ldr	r1, [fp, #-16]
   210f0:	cmp	r0, r1
   210f4:	bne	210fc <main@@Base+0xd4cc>
   210f8:	b	216dc <main@@Base+0xdaac>
   210fc:	b	21100 <main@@Base+0xd4d0>
   21100:	ldr	r0, [sp, #24]
   21104:	ldr	r1, [sp, #28]
   21108:	orr	r0, r0, r1
   2110c:	cmp	r0, #0
   21110:	bne	2112c <main@@Base+0xd4fc>
   21114:	b	21118 <main@@Base+0xd4e8>
   21118:	ldr	r0, [fp, #-8]
   2111c:	ldr	r0, [r0, #8]
   21120:	and	r0, r0, #2
   21124:	cmp	r0, #0
   21128:	beq	2116c <main@@Base+0xd53c>
   2112c:	ldr	r0, [fp, #-8]
   21130:	ldr	r0, [r0]
   21134:	movw	r1, #5
   21138:	movw	r2, #8
   2113c:	movw	r3, #8
   21140:	uxth	r3, r3
   21144:	bl	27698 <flatcc_builder_table_add@@Base>
   21148:	str	r0, [fp, #-28]	; 0xffffffe4
   2114c:	movw	r1, #0
   21150:	cmp	r0, r1
   21154:	bne	2115c <main@@Base+0xd52c>
   21158:	b	216dc <main@@Base+0xdaac>
   2115c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21160:	ldr	r2, [sp, #24]
   21164:	ldr	r3, [sp, #28]
   21168:	bl	1c5a0 <main@@Base+0x8970>
   2116c:	b	212e4 <main@@Base+0xd6b4>
   21170:	ldr	r0, [fp, #-12]
   21174:	add	r0, r0, #8
   21178:	str	r0, [fp, #-12]
   2117c:	ldr	r0, [fp, #-12]
   21180:	ldr	r1, [fp, #-16]
   21184:	bl	17bdc <main@@Base+0x3fac>
   21188:	str	r1, [sp, #52]	; 0x34
   2118c:	str	r0, [sp, #48]	; 0x30
   21190:	ldrb	r0, [sp, #55]	; 0x37
   21194:	mov	r1, #889192448	; 0x35000000
   21198:	teq	r1, r0, lsl #24
   2119c:	bne	212cc <main@@Base+0xd69c>
   211a0:	b	211a4 <main@@Base+0xd574>
   211a4:	ldr	r0, [fp, #-8]
   211a8:	ldr	r1, [fp, #-12]
   211ac:	str	r1, [fp, #-40]	; 0xffffffd8
   211b0:	ldr	r2, [fp, #-16]
   211b4:	movw	r3, #1
   211b8:	bl	17c14 <main@@Base+0x3fe4>
   211bc:	str	r0, [fp, #-12]
   211c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   211c4:	ldr	r1, [fp, #-12]
   211c8:	cmp	r0, r1
   211cc:	beq	212b4 <main@@Base+0xd684>
   211d0:	movw	r0, #0
   211d4:	str	r0, [sp, #20]
   211d8:	ldr	r0, [fp, #-8]
   211dc:	ldr	r1, [fp, #-12]
   211e0:	str	r1, [fp, #-40]	; 0xffffffd8
   211e4:	ldr	r2, [fp, #-16]
   211e8:	add	r3, sp, #20
   211ec:	bl	1c5d8 <main@@Base+0x89a8>
   211f0:	str	r0, [fp, #-12]
   211f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   211f8:	ldr	r1, [fp, #-12]
   211fc:	cmp	r0, r1
   21200:	bne	21254 <main@@Base+0xd624>
   21204:	ldr	r0, [pc, #1276]	; 21708 <main@@Base+0xdad8>
   21208:	add	r3, pc, r0
   2120c:	ldr	r0, [fp, #-8]
   21210:	ldr	r1, [fp, #-12]
   21214:	str	r1, [fp, #-40]	; 0xffffffd8
   21218:	ldr	r2, [fp, #-16]
   2121c:	add	ip, sp, #20
   21220:	str	ip, [sp]
   21224:	bl	1c6b0 <main@@Base+0x8a80>
   21228:	str	r0, [fp, #-12]
   2122c:	ldr	r0, [fp, #-12]
   21230:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21234:	cmp	r0, r1
   21238:	beq	2124c <main@@Base+0xd61c>
   2123c:	ldr	r0, [fp, #-12]
   21240:	ldr	r1, [fp, #-16]
   21244:	cmp	r0, r1
   21248:	bne	21250 <main@@Base+0xd620>
   2124c:	b	216dc <main@@Base+0xdaac>
   21250:	b	21254 <main@@Base+0xd624>
   21254:	ldr	r0, [sp, #20]
   21258:	cmp	r0, #0
   2125c:	bne	21274 <main@@Base+0xd644>
   21260:	ldr	r0, [fp, #-8]
   21264:	ldr	r0, [r0, #8]
   21268:	and	r0, r0, #2
   2126c:	cmp	r0, #0
   21270:	beq	212b0 <main@@Base+0xd680>
   21274:	ldr	r0, [fp, #-8]
   21278:	ldr	r0, [r0]
   2127c:	movw	r1, #6
   21280:	movw	r2, #4
   21284:	movw	r3, #4
   21288:	uxth	r3, r3
   2128c:	bl	27698 <flatcc_builder_table_add@@Base>
   21290:	str	r0, [fp, #-28]	; 0xffffffe4
   21294:	movw	r1, #0
   21298:	cmp	r0, r1
   2129c:	bne	212a4 <main@@Base+0xd674>
   212a0:	b	216dc <main@@Base+0xdaac>
   212a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   212a8:	ldr	r1, [sp, #20]
   212ac:	bl	1c8d8 <main@@Base+0x8ca8>
   212b0:	b	212c8 <main@@Base+0xd698>
   212b4:	ldr	r0, [fp, #-8]
   212b8:	ldr	r1, [fp, #-12]
   212bc:	ldr	r2, [fp, #-16]
   212c0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   212c4:	str	r0, [fp, #-12]
   212c8:	b	212e0 <main@@Base+0xd6b0>
   212cc:	ldr	r0, [fp, #-8]
   212d0:	ldr	r1, [fp, #-12]
   212d4:	ldr	r2, [fp, #-16]
   212d8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   212dc:	str	r0, [fp, #-12]
   212e0:	b	212e4 <main@@Base+0xd6b4>
   212e4:	b	2167c <main@@Base+0xda4c>
   212e8:	ldr	r0, [sp, #52]	; 0x34
   212ec:	movw	r1, #25443	; 0x6363
   212f0:	movt	r1, #25443	; 0x6363
   212f4:	teq	r0, r1
   212f8:	bne	2138c <main@@Base+0xd75c>
   212fc:	b	21300 <main@@Base+0xd6d0>
   21300:	ldr	r0, [fp, #-8]
   21304:	ldr	r1, [fp, #-12]
   21308:	str	r1, [fp, #-40]	; 0xffffffd8
   2130c:	ldr	r2, [fp, #-16]
   21310:	movw	r3, #4
   21314:	bl	17c14 <main@@Base+0x3fe4>
   21318:	str	r0, [fp, #-12]
   2131c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21320:	ldr	r1, [fp, #-12]
   21324:	cmp	r0, r1
   21328:	beq	21384 <main@@Base+0xd754>
   2132c:	ldr	r0, [fp, #-8]
   21330:	ldr	r1, [fp, #-12]
   21334:	ldr	r2, [fp, #-16]
   21338:	sub	r3, fp, #32
   2133c:	bl	2dd04 <flatcc_json_parser_build_string@@Base>
   21340:	str	r0, [fp, #-12]
   21344:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21348:	cmp	r0, #0
   2134c:	beq	21370 <main@@Base+0xd740>
   21350:	ldr	r0, [fp, #-8]
   21354:	ldr	r0, [r0]
   21358:	movw	r1, #4
   2135c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   21360:	str	r0, [fp, #-36]	; 0xffffffdc
   21364:	movw	r1, #0
   21368:	cmp	r0, r1
   2136c:	bne	21374 <main@@Base+0xd744>
   21370:	b	216dc <main@@Base+0xdaac>
   21374:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21378:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2137c:	str	r0, [r1]
   21380:	b	21388 <main@@Base+0xd758>
   21384:	b	21394 <main@@Base+0xd764>
   21388:	b	21390 <main@@Base+0xd760>
   2138c:	b	21394 <main@@Base+0xd764>
   21390:	b	21678 <main@@Base+0xda48>
   21394:	ldr	r0, [sp, #48]	; 0x30
   21398:	ldr	r1, [sp, #52]	; 0x34
   2139c:	movw	r2, #25700	; 0x6464
   213a0:	movt	r2, #25700	; 0x6464
   213a4:	eor	r1, r1, r2
   213a8:	movw	r2, #13108	; 0x3334
   213ac:	movt	r2, #12594	; 0x3132
   213b0:	eor	r0, r0, r2
   213b4:	orr	r0, r0, r1
   213b8:	cmp	r0, #0
   213bc:	bne	21660 <main@@Base+0xda30>
   213c0:	b	213c4 <main@@Base+0xd794>
   213c4:	ldr	r0, [fp, #-8]
   213c8:	ldr	r1, [fp, #-12]
   213cc:	str	r1, [fp, #-40]	; 0xffffffd8
   213d0:	ldr	r2, [fp, #-16]
   213d4:	movw	r3, #8
   213d8:	bl	17c14 <main@@Base+0x3fe4>
   213dc:	str	r0, [fp, #-12]
   213e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   213e4:	ldr	r1, [fp, #-12]
   213e8:	cmp	r0, r1
   213ec:	beq	214e8 <main@@Base+0xd8b8>
   213f0:	mov	r0, #0
   213f4:	str	r0, [sp, #12]
   213f8:	str	r0, [sp, #8]
   213fc:	ldr	r0, [fp, #-8]
   21400:	ldr	r1, [fp, #-12]
   21404:	str	r1, [fp, #-40]	; 0xffffffd8
   21408:	ldr	r2, [fp, #-16]
   2140c:	add	r3, sp, #8
   21410:	bl	1c288 <main@@Base+0x8658>
   21414:	str	r0, [fp, #-12]
   21418:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2141c:	ldr	r1, [fp, #-12]
   21420:	cmp	r0, r1
   21424:	bne	21478 <main@@Base+0xd848>
   21428:	ldr	r0, [pc, #724]	; 21704 <main@@Base+0xdad4>
   2142c:	add	r3, pc, r0
   21430:	ldr	r0, [fp, #-8]
   21434:	ldr	r1, [fp, #-12]
   21438:	str	r1, [fp, #-40]	; 0xffffffd8
   2143c:	ldr	r2, [fp, #-16]
   21440:	add	ip, sp, #8
   21444:	str	ip, [sp]
   21448:	bl	1c360 <main@@Base+0x8730>
   2144c:	str	r0, [fp, #-12]
   21450:	ldr	r0, [fp, #-12]
   21454:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21458:	cmp	r0, r1
   2145c:	beq	21470 <main@@Base+0xd840>
   21460:	ldr	r0, [fp, #-12]
   21464:	ldr	r1, [fp, #-16]
   21468:	cmp	r0, r1
   2146c:	bne	21474 <main@@Base+0xd844>
   21470:	b	216dc <main@@Base+0xdaac>
   21474:	b	21478 <main@@Base+0xd848>
   21478:	ldr	r0, [sp, #8]
   2147c:	ldr	r1, [sp, #12]
   21480:	orr	r0, r0, r1
   21484:	cmp	r0, #0
   21488:	bne	214a4 <main@@Base+0xd874>
   2148c:	b	21490 <main@@Base+0xd860>
   21490:	ldr	r0, [fp, #-8]
   21494:	ldr	r0, [r0, #8]
   21498:	and	r0, r0, #2
   2149c:	cmp	r0, #0
   214a0:	beq	214e4 <main@@Base+0xd8b4>
   214a4:	ldr	r0, [fp, #-8]
   214a8:	ldr	r0, [r0]
   214ac:	movw	r1, #7
   214b0:	movw	r2, #8
   214b4:	movw	r3, #8
   214b8:	uxth	r3, r3
   214bc:	bl	27698 <flatcc_builder_table_add@@Base>
   214c0:	str	r0, [fp, #-28]	; 0xffffffe4
   214c4:	movw	r1, #0
   214c8:	cmp	r0, r1
   214cc:	bne	214d4 <main@@Base+0xd8a4>
   214d0:	b	216dc <main@@Base+0xdaac>
   214d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   214d8:	ldr	r2, [sp, #8]
   214dc:	ldr	r3, [sp, #12]
   214e0:	bl	1c5a0 <main@@Base+0x8970>
   214e4:	b	2165c <main@@Base+0xda2c>
   214e8:	ldr	r0, [fp, #-12]
   214ec:	add	r0, r0, #8
   214f0:	str	r0, [fp, #-12]
   214f4:	ldr	r0, [fp, #-12]
   214f8:	ldr	r1, [fp, #-16]
   214fc:	bl	17bdc <main@@Base+0x3fac>
   21500:	str	r1, [sp, #52]	; 0x34
   21504:	str	r0, [sp, #48]	; 0x30
   21508:	ldrb	r0, [sp, #55]	; 0x37
   2150c:	mov	r1, #889192448	; 0x35000000
   21510:	teq	r1, r0, lsl #24
   21514:	bne	21644 <main@@Base+0xda14>
   21518:	b	2151c <main@@Base+0xd8ec>
   2151c:	ldr	r0, [fp, #-8]
   21520:	ldr	r1, [fp, #-12]
   21524:	str	r1, [fp, #-40]	; 0xffffffd8
   21528:	ldr	r2, [fp, #-16]
   2152c:	movw	r3, #1
   21530:	bl	17c14 <main@@Base+0x3fe4>
   21534:	str	r0, [fp, #-12]
   21538:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2153c:	ldr	r1, [fp, #-12]
   21540:	cmp	r0, r1
   21544:	beq	2162c <main@@Base+0xd9fc>
   21548:	movw	r0, #0
   2154c:	str	r0, [sp, #4]
   21550:	ldr	r0, [fp, #-8]
   21554:	ldr	r1, [fp, #-12]
   21558:	str	r1, [fp, #-40]	; 0xffffffd8
   2155c:	ldr	r2, [fp, #-16]
   21560:	add	r3, sp, #4
   21564:	bl	1c5d8 <main@@Base+0x89a8>
   21568:	str	r0, [fp, #-12]
   2156c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21570:	ldr	r1, [fp, #-12]
   21574:	cmp	r0, r1
   21578:	bne	215cc <main@@Base+0xd99c>
   2157c:	ldr	r0, [pc, #380]	; 21700 <main@@Base+0xdad0>
   21580:	add	r3, pc, r0
   21584:	ldr	r0, [fp, #-8]
   21588:	ldr	r1, [fp, #-12]
   2158c:	str	r1, [fp, #-40]	; 0xffffffd8
   21590:	ldr	r2, [fp, #-16]
   21594:	add	ip, sp, #4
   21598:	str	ip, [sp]
   2159c:	bl	1c6b0 <main@@Base+0x8a80>
   215a0:	str	r0, [fp, #-12]
   215a4:	ldr	r0, [fp, #-12]
   215a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   215ac:	cmp	r0, r1
   215b0:	beq	215c4 <main@@Base+0xd994>
   215b4:	ldr	r0, [fp, #-12]
   215b8:	ldr	r1, [fp, #-16]
   215bc:	cmp	r0, r1
   215c0:	bne	215c8 <main@@Base+0xd998>
   215c4:	b	216dc <main@@Base+0xdaac>
   215c8:	b	215cc <main@@Base+0xd99c>
   215cc:	ldr	r0, [sp, #4]
   215d0:	cmp	r0, #0
   215d4:	bne	215ec <main@@Base+0xd9bc>
   215d8:	ldr	r0, [fp, #-8]
   215dc:	ldr	r0, [r0, #8]
   215e0:	and	r0, r0, #2
   215e4:	cmp	r0, #0
   215e8:	beq	21628 <main@@Base+0xd9f8>
   215ec:	ldr	r0, [fp, #-8]
   215f0:	ldr	r0, [r0]
   215f4:	movw	r1, #8
   215f8:	movw	r2, #4
   215fc:	movw	r3, #4
   21600:	uxth	r3, r3
   21604:	bl	27698 <flatcc_builder_table_add@@Base>
   21608:	str	r0, [fp, #-28]	; 0xffffffe4
   2160c:	movw	r1, #0
   21610:	cmp	r0, r1
   21614:	bne	2161c <main@@Base+0xd9ec>
   21618:	b	216dc <main@@Base+0xdaac>
   2161c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21620:	ldr	r1, [sp, #4]
   21624:	bl	1c8d8 <main@@Base+0x8ca8>
   21628:	b	21640 <main@@Base+0xda10>
   2162c:	ldr	r0, [fp, #-8]
   21630:	ldr	r1, [fp, #-12]
   21634:	ldr	r2, [fp, #-16]
   21638:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   2163c:	str	r0, [fp, #-12]
   21640:	b	21658 <main@@Base+0xda28>
   21644:	ldr	r0, [fp, #-8]
   21648:	ldr	r1, [fp, #-12]
   2164c:	ldr	r2, [fp, #-16]
   21650:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   21654:	str	r0, [fp, #-12]
   21658:	b	2165c <main@@Base+0xda2c>
   2165c:	b	21674 <main@@Base+0xda44>
   21660:	ldr	r0, [fp, #-8]
   21664:	ldr	r1, [fp, #-12]
   21668:	ldr	r2, [fp, #-16]
   2166c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   21670:	str	r0, [fp, #-12]
   21674:	b	21678 <main@@Base+0xda48>
   21678:	b	2167c <main@@Base+0xda4c>
   2167c:	b	21680 <main@@Base+0xda50>
   21680:	ldr	r0, [fp, #-8]
   21684:	ldr	r1, [fp, #-12]
   21688:	ldr	r2, [fp, #-16]
   2168c:	sub	r3, fp, #24
   21690:	bl	1cebc <main@@Base+0x928c>
   21694:	str	r0, [fp, #-12]
   21698:	b	20b3c <main@@Base+0xcf0c>
   2169c:	ldr	r0, [fp, #-8]
   216a0:	ldr	r0, [r0, #24]
   216a4:	cmp	r0, #0
   216a8:	beq	216b0 <main@@Base+0xda80>
   216ac:	b	216dc <main@@Base+0xdaac>
   216b0:	ldr	r0, [fp, #-8]
   216b4:	ldr	r0, [r0]
   216b8:	bl	26a5c <flatcc_builder_end_table@@Base>
   216bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   216c0:	str	r0, [r1]
   216c4:	cmp	r0, #0
   216c8:	bne	216d0 <main@@Base+0xdaa0>
   216cc:	b	216dc <main@@Base+0xdaac>
   216d0:	ldr	r0, [fp, #-12]
   216d4:	str	r0, [fp, #-4]
   216d8:	b	216f4 <main@@Base+0xdac4>
   216dc:	ldr	r0, [fp, #-8]
   216e0:	ldr	r1, [fp, #-12]
   216e4:	ldr	r2, [fp, #-16]
   216e8:	movw	r3, #33	; 0x21
   216ec:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   216f0:	str	r0, [fp, #-4]
   216f4:	ldr	r0, [fp, #-4]
   216f8:	mov	sp, fp
   216fc:	pop	{fp, pc}
   21700:	andeq	r2, r2, r8, lsl sp
   21704:	andeq	r2, r2, r0, ror #28
   21708:	andeq	r3, r2, r8, ror r0
   2170c:	andeq	r3, r2, r0, asr #3
   21710:	strdeq	r3, [r2], -r8
   21714:	andeq	r3, r2, ip, lsl #12
   21718:	push	{fp, lr}
   2171c:	mov	fp, sp
   21720:	sub	sp, sp, #72	; 0x48
   21724:	str	r0, [fp, #-8]
   21728:	str	r1, [fp, #-12]
   2172c:	str	r2, [fp, #-16]
   21730:	str	r3, [fp, #-20]	; 0xffffffec
   21734:	ldr	r0, [fp, #-20]	; 0xffffffec
   21738:	movw	r1, #0
   2173c:	str	r1, [r0]
   21740:	ldr	r0, [fp, #-8]
   21744:	ldr	r0, [r0]
   21748:	movw	r1, #2
   2174c:	bl	25df4 <flatcc_builder_start_table@@Base>
   21750:	cmp	r0, #0
   21754:	beq	2175c <main@@Base+0xdb2c>
   21758:	b	21bb0 <main@@Base+0xdf80>
   2175c:	ldr	r0, [fp, #-8]
   21760:	ldr	r1, [fp, #-12]
   21764:	ldr	r2, [fp, #-16]
   21768:	sub	r3, fp, #24
   2176c:	bl	17a4c <main@@Base+0x3e1c>
   21770:	str	r0, [fp, #-12]
   21774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21778:	cmp	r0, #0
   2177c:	beq	21b70 <main@@Base+0xdf40>
   21780:	ldr	r0, [fp, #-8]
   21784:	ldr	r1, [fp, #-12]
   21788:	ldr	r2, [fp, #-16]
   2178c:	bl	17b30 <main@@Base+0x3f00>
   21790:	str	r0, [fp, #-12]
   21794:	ldr	r0, [fp, #-12]
   21798:	ldr	r1, [fp, #-16]
   2179c:	bl	17bdc <main@@Base+0x3fac>
   217a0:	str	r1, [sp, #28]
   217a4:	str	r0, [sp, #24]
   217a8:	ldr	r0, [sp, #24]
   217ac:	ldr	r1, [sp, #28]
   217b0:	movw	r2, #24929	; 0x6161
   217b4:	movt	r2, #24929	; 0x6161
   217b8:	eor	r1, r1, r2
   217bc:	movw	r2, #25186	; 0x6262
   217c0:	movt	r2, #24418	; 0x5f62
   217c4:	eor	r0, r0, r2
   217c8:	orr	r0, r0, r1
   217cc:	cmp	r0, #0
   217d0:	bne	21b40 <main@@Base+0xdf10>
   217d4:	b	217d8 <main@@Base+0xdba8>
   217d8:	ldr	r0, [fp, #-12]
   217dc:	add	r0, r0, #8
   217e0:	str	r0, [fp, #-12]
   217e4:	ldr	r0, [fp, #-12]
   217e8:	ldr	r1, [fp, #-16]
   217ec:	bl	17bdc <main@@Base+0x3fac>
   217f0:	str	r1, [sp, #28]
   217f4:	str	r0, [sp, #24]
   217f8:	ldr	r0, [sp, #24]
   217fc:	ldr	r1, [sp, #28]
   21800:	movw	r2, #29556	; 0x7374
   21804:	movt	r2, #25183	; 0x625f
   21808:	eor	r1, r1, r2
   2180c:	movw	r2, #29791	; 0x745f
   21810:	movt	r2, #24946	; 0x6172
   21814:	eor	r0, r0, r2
   21818:	orr	r0, r0, r1
   2181c:	cmp	r0, #0
   21820:	bne	219b0 <main@@Base+0xdd80>
   21824:	b	21828 <main@@Base+0xdbf8>
   21828:	ldr	r0, [fp, #-12]
   2182c:	add	r0, r0, #8
   21830:	str	r0, [fp, #-12]
   21834:	ldr	r0, [fp, #-12]
   21838:	ldr	r1, [fp, #-16]
   2183c:	bl	17bdc <main@@Base+0x3fac>
   21840:	str	r1, [sp, #28]
   21844:	str	r0, [sp, #24]
   21848:	ldrb	r0, [sp, #27]
   2184c:	ldr	r1, [sp, #28]
   21850:	movw	r2, #25968	; 0x6570
   21854:	movt	r2, #29556	; 0x7374
   21858:	eor	r1, r1, r2
   2185c:	eor	r0, r0, #115	; 0x73
   21860:	orr	r0, r1, r0, lsl #24
   21864:	cmp	r0, #0
   21868:	bne	21998 <main@@Base+0xdd68>
   2186c:	b	21870 <main@@Base+0xdc40>
   21870:	ldr	r0, [fp, #-8]
   21874:	ldr	r1, [fp, #-12]
   21878:	str	r1, [sp, #32]
   2187c:	ldr	r2, [fp, #-16]
   21880:	movw	r3, #5
   21884:	bl	17c14 <main@@Base+0x3fe4>
   21888:	str	r0, [fp, #-12]
   2188c:	ldr	r0, [sp, #32]
   21890:	ldr	r1, [fp, #-12]
   21894:	cmp	r0, r1
   21898:	beq	21980 <main@@Base+0xdd50>
   2189c:	movw	r0, #0
   218a0:	str	r0, [sp, #20]
   218a4:	ldr	r0, [fp, #-8]
   218a8:	ldr	r1, [fp, #-12]
   218ac:	str	r1, [sp, #32]
   218b0:	ldr	r2, [fp, #-16]
   218b4:	add	r3, sp, #20
   218b8:	bl	1c5d8 <main@@Base+0x89a8>
   218bc:	str	r0, [fp, #-12]
   218c0:	ldr	r0, [sp, #32]
   218c4:	ldr	r1, [fp, #-12]
   218c8:	cmp	r0, r1
   218cc:	bne	21920 <main@@Base+0xdcf0>
   218d0:	ldr	r0, [pc, #768]	; 21bd8 <main@@Base+0xdfa8>
   218d4:	add	r3, pc, r0
   218d8:	ldr	r0, [fp, #-8]
   218dc:	ldr	r1, [fp, #-12]
   218e0:	str	r1, [sp, #32]
   218e4:	ldr	r2, [fp, #-16]
   218e8:	add	ip, sp, #20
   218ec:	str	ip, [sp]
   218f0:	bl	1c6b0 <main@@Base+0x8a80>
   218f4:	str	r0, [fp, #-12]
   218f8:	ldr	r0, [fp, #-12]
   218fc:	ldr	r1, [sp, #32]
   21900:	cmp	r0, r1
   21904:	beq	21918 <main@@Base+0xdce8>
   21908:	ldr	r0, [fp, #-12]
   2190c:	ldr	r1, [fp, #-16]
   21910:	cmp	r0, r1
   21914:	bne	2191c <main@@Base+0xdcec>
   21918:	b	21bb0 <main@@Base+0xdf80>
   2191c:	b	21920 <main@@Base+0xdcf0>
   21920:	ldr	r0, [sp, #20]
   21924:	cmp	r0, #0
   21928:	bne	21940 <main@@Base+0xdd10>
   2192c:	ldr	r0, [fp, #-8]
   21930:	ldr	r0, [r0, #8]
   21934:	and	r0, r0, #2
   21938:	cmp	r0, #0
   2193c:	beq	2197c <main@@Base+0xdd4c>
   21940:	ldr	r0, [fp, #-8]
   21944:	ldr	r0, [r0]
   21948:	movw	r1, #1
   2194c:	movw	r2, #4
   21950:	movw	r3, #4
   21954:	uxth	r3, r3
   21958:	bl	27698 <flatcc_builder_table_add@@Base>
   2195c:	str	r0, [fp, #-28]	; 0xffffffe4
   21960:	movw	r1, #0
   21964:	cmp	r0, r1
   21968:	bne	21970 <main@@Base+0xdd40>
   2196c:	b	21bb0 <main@@Base+0xdf80>
   21970:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21974:	ldr	r1, [sp, #20]
   21978:	bl	1c8d8 <main@@Base+0x8ca8>
   2197c:	b	21994 <main@@Base+0xdd64>
   21980:	ldr	r0, [fp, #-8]
   21984:	ldr	r1, [fp, #-12]
   21988:	ldr	r2, [fp, #-16]
   2198c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   21990:	str	r0, [fp, #-12]
   21994:	b	219ac <main@@Base+0xdd7c>
   21998:	ldr	r0, [fp, #-8]
   2199c:	ldr	r1, [fp, #-12]
   219a0:	ldr	r2, [fp, #-16]
   219a4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   219a8:	str	r0, [fp, #-12]
   219ac:	b	21b3c <main@@Base+0xdf0c>
   219b0:	ldr	r0, [sp, #24]
   219b4:	ldr	r1, [sp, #28]
   219b8:	movw	r2, #24435	; 0x5f73
   219bc:	movt	r2, #98	; 0x62
   219c0:	eor	r2, r2, r1, lsr #8
   219c4:	lsr	r0, r0, #8
   219c8:	orr	r0, r0, r1, lsl #24
   219cc:	movw	r1, #28787	; 0x7073
   219d0:	movt	r1, #29797	; 0x7465
   219d4:	eor	r0, r0, r1
   219d8:	orr	r0, r0, r2
   219dc:	cmp	r0, #0
   219e0:	bne	21b24 <main@@Base+0xdef4>
   219e4:	b	219e8 <main@@Base+0xddb8>
   219e8:	ldr	r0, [fp, #-8]
   219ec:	ldr	r1, [fp, #-12]
   219f0:	str	r1, [sp, #32]
   219f4:	ldr	r2, [fp, #-16]
   219f8:	movw	r3, #7
   219fc:	bl	17c14 <main@@Base+0x3fe4>
   21a00:	str	r0, [fp, #-12]
   21a04:	ldr	r0, [sp, #32]
   21a08:	ldr	r1, [fp, #-12]
   21a0c:	cmp	r0, r1
   21a10:	beq	21b0c <main@@Base+0xdedc>
   21a14:	mov	r0, #0
   21a18:	str	r0, [sp, #12]
   21a1c:	str	r0, [sp, #8]
   21a20:	ldr	r0, [fp, #-8]
   21a24:	ldr	r1, [fp, #-12]
   21a28:	str	r1, [sp, #32]
   21a2c:	ldr	r2, [fp, #-16]
   21a30:	add	r3, sp, #8
   21a34:	bl	1c288 <main@@Base+0x8658>
   21a38:	str	r0, [fp, #-12]
   21a3c:	ldr	r0, [sp, #32]
   21a40:	ldr	r1, [fp, #-12]
   21a44:	cmp	r0, r1
   21a48:	bne	21a9c <main@@Base+0xde6c>
   21a4c:	ldr	r0, [pc, #384]	; 21bd4 <main@@Base+0xdfa4>
   21a50:	add	r3, pc, r0
   21a54:	ldr	r0, [fp, #-8]
   21a58:	ldr	r1, [fp, #-12]
   21a5c:	str	r1, [sp, #32]
   21a60:	ldr	r2, [fp, #-16]
   21a64:	add	ip, sp, #8
   21a68:	str	ip, [sp]
   21a6c:	bl	1c360 <main@@Base+0x8730>
   21a70:	str	r0, [fp, #-12]
   21a74:	ldr	r0, [fp, #-12]
   21a78:	ldr	r1, [sp, #32]
   21a7c:	cmp	r0, r1
   21a80:	beq	21a94 <main@@Base+0xde64>
   21a84:	ldr	r0, [fp, #-12]
   21a88:	ldr	r1, [fp, #-16]
   21a8c:	cmp	r0, r1
   21a90:	bne	21a98 <main@@Base+0xde68>
   21a94:	b	21bb0 <main@@Base+0xdf80>
   21a98:	b	21a9c <main@@Base+0xde6c>
   21a9c:	ldr	r0, [sp, #8]
   21aa0:	ldr	r1, [sp, #12]
   21aa4:	orr	r0, r0, r1
   21aa8:	cmp	r0, #0
   21aac:	bne	21ac8 <main@@Base+0xde98>
   21ab0:	b	21ab4 <main@@Base+0xde84>
   21ab4:	ldr	r0, [fp, #-8]
   21ab8:	ldr	r0, [r0, #8]
   21abc:	and	r0, r0, #2
   21ac0:	cmp	r0, #0
   21ac4:	beq	21b08 <main@@Base+0xded8>
   21ac8:	ldr	r0, [fp, #-8]
   21acc:	ldr	r0, [r0]
   21ad0:	movw	r1, #0
   21ad4:	movw	r2, #8
   21ad8:	movw	r3, #8
   21adc:	uxth	r3, r3
   21ae0:	bl	27698 <flatcc_builder_table_add@@Base>
   21ae4:	str	r0, [fp, #-28]	; 0xffffffe4
   21ae8:	movw	r1, #0
   21aec:	cmp	r0, r1
   21af0:	bne	21af8 <main@@Base+0xdec8>
   21af4:	b	21bb0 <main@@Base+0xdf80>
   21af8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21afc:	ldr	r2, [sp, #8]
   21b00:	ldr	r3, [sp, #12]
   21b04:	bl	1c5a0 <main@@Base+0x8970>
   21b08:	b	21b20 <main@@Base+0xdef0>
   21b0c:	ldr	r0, [fp, #-8]
   21b10:	ldr	r1, [fp, #-12]
   21b14:	ldr	r2, [fp, #-16]
   21b18:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   21b1c:	str	r0, [fp, #-12]
   21b20:	b	21b38 <main@@Base+0xdf08>
   21b24:	ldr	r0, [fp, #-8]
   21b28:	ldr	r1, [fp, #-12]
   21b2c:	ldr	r2, [fp, #-16]
   21b30:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   21b34:	str	r0, [fp, #-12]
   21b38:	b	21b3c <main@@Base+0xdf0c>
   21b3c:	b	21b54 <main@@Base+0xdf24>
   21b40:	ldr	r0, [fp, #-8]
   21b44:	ldr	r1, [fp, #-12]
   21b48:	ldr	r2, [fp, #-16]
   21b4c:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   21b50:	str	r0, [fp, #-12]
   21b54:	ldr	r0, [fp, #-8]
   21b58:	ldr	r1, [fp, #-12]
   21b5c:	ldr	r2, [fp, #-16]
   21b60:	sub	r3, fp, #24
   21b64:	bl	1cebc <main@@Base+0x928c>
   21b68:	str	r0, [fp, #-12]
   21b6c:	b	21774 <main@@Base+0xdb44>
   21b70:	ldr	r0, [fp, #-8]
   21b74:	ldr	r0, [r0, #24]
   21b78:	cmp	r0, #0
   21b7c:	beq	21b84 <main@@Base+0xdf54>
   21b80:	b	21bb0 <main@@Base+0xdf80>
   21b84:	ldr	r0, [fp, #-8]
   21b88:	ldr	r0, [r0]
   21b8c:	bl	26a5c <flatcc_builder_end_table@@Base>
   21b90:	ldr	r1, [fp, #-20]	; 0xffffffec
   21b94:	str	r0, [r1]
   21b98:	cmp	r0, #0
   21b9c:	bne	21ba4 <main@@Base+0xdf74>
   21ba0:	b	21bb0 <main@@Base+0xdf80>
   21ba4:	ldr	r0, [fp, #-12]
   21ba8:	str	r0, [fp, #-4]
   21bac:	b	21bc8 <main@@Base+0xdf98>
   21bb0:	ldr	r0, [fp, #-8]
   21bb4:	ldr	r1, [fp, #-12]
   21bb8:	ldr	r2, [fp, #-16]
   21bbc:	movw	r3, #33	; 0x21
   21bc0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   21bc4:	str	r0, [fp, #-4]
   21bc8:	ldr	r0, [fp, #-4]
   21bcc:	mov	sp, fp
   21bd0:	pop	{fp, pc}
   21bd4:	andeq	r2, r2, r0, ror #16
   21bd8:	ldrdeq	r2, [r2], -r0
   21bdc:	push	{fp, lr}
   21be0:	mov	fp, sp
   21be4:	sub	sp, sp, #56	; 0x38
   21be8:	ldr	ip, [fp, #12]
   21bec:	ldr	lr, [fp, #8]
   21bf0:	str	r0, [fp, #-8]
   21bf4:	str	r1, [fp, #-12]
   21bf8:	str	r2, [fp, #-16]
   21bfc:	str	r3, [fp, #-20]	; 0xffffffec
   21c00:	ldr	r0, [fp, #-12]
   21c04:	str	r0, [fp, #-24]	; 0xffffffe8
   21c08:	ldr	r0, [fp, #-12]
   21c0c:	ldr	r1, [fp, #-16]
   21c10:	str	ip, [sp, #12]
   21c14:	str	lr, [sp, #8]
   21c18:	bl	17bdc <main@@Base+0x3fac>
   21c1c:	str	r1, [sp, #20]
   21c20:	str	r0, [sp, #16]
   21c24:	ldr	r0, [sp, #16]
   21c28:	ldr	r1, [sp, #20]
   21c2c:	movw	r2, #24946	; 0x6172
   21c30:	movt	r2, #17256	; 0x4368
   21c34:	eor	r1, r1, r2
   21c38:	movw	r2, #29797	; 0x7465
   21c3c:	movt	r2, #24931	; 0x6163
   21c40:	eor	r0, r0, r2
   21c44:	orr	r0, r0, r1
   21c48:	cmp	r0, #0
   21c4c:	bne	21d00 <main@@Base+0xe0d0>
   21c50:	b	21c54 <main@@Base+0xe024>
   21c54:	ldr	r0, [fp, #-12]
   21c58:	add	r0, r0, #8
   21c5c:	str	r0, [fp, #-12]
   21c60:	ldr	r0, [fp, #-12]
   21c64:	ldr	r1, [fp, #-16]
   21c68:	bl	17bdc <main@@Base+0x3fac>
   21c6c:	str	r1, [sp, #20]
   21c70:	str	r0, [sp, #16]
   21c74:	ldrb	r0, [sp, #23]
   21c78:	mov	r1, #1912602624	; 0x72000000
   21c7c:	teq	r1, r0, lsl #24
   21c80:	bne	21cf0 <main@@Base+0xe0c0>
   21c84:	b	21c88 <main@@Base+0xe058>
   21c88:	ldr	r0, [fp, #-8]
   21c8c:	ldr	r1, [fp, #-12]
   21c90:	str	r1, [sp, #28]
   21c94:	ldr	r2, [fp, #-16]
   21c98:	movw	r3, #1
   21c9c:	bl	1d230 <main@@Base+0x9600>
   21ca0:	str	r0, [fp, #-12]
   21ca4:	ldr	r0, [fp, #-12]
   21ca8:	ldr	r1, [sp, #28]
   21cac:	cmp	r0, r1
   21cb0:	beq	21ce0 <main@@Base+0xe0b0>
   21cb4:	ldr	r0, [fp, #-8]
   21cb8:	ldr	r1, [fp, #-12]
   21cbc:	ldr	r2, [fp, #-16]
   21cc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21cc4:	ldr	ip, [fp, #8]
   21cc8:	ldr	lr, [fp, #12]
   21ccc:	str	ip, [sp]
   21cd0:	str	lr, [sp, #4]
   21cd4:	bl	1dda8 <main@@Base+0xa178>
   21cd8:	str	r0, [fp, #-12]
   21cdc:	b	21cec <main@@Base+0xe0bc>
   21ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ce4:	str	r0, [fp, #-4]
   21ce8:	b	21d14 <main@@Base+0xe0e4>
   21cec:	b	21cfc <main@@Base+0xe0cc>
   21cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21cf4:	str	r0, [fp, #-4]
   21cf8:	b	21d14 <main@@Base+0xe0e4>
   21cfc:	b	21d0c <main@@Base+0xe0dc>
   21d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d04:	str	r0, [fp, #-4]
   21d08:	b	21d14 <main@@Base+0xe0e4>
   21d0c:	ldr	r0, [fp, #-12]
   21d10:	str	r0, [fp, #-4]
   21d14:	ldr	r0, [fp, #-4]
   21d18:	mov	sp, fp
   21d1c:	pop	{fp, pc}
   21d20:	push	{fp, lr}
   21d24:	mov	fp, sp
   21d28:	sub	sp, sp, #24
   21d2c:	ldr	ip, [fp, #8]
   21d30:	str	r0, [fp, #-8]
   21d34:	str	r1, [sp, #12]
   21d38:	str	r2, [sp, #8]
   21d3c:	strb	r3, [sp, #7]
   21d40:	ldr	r0, [fp, #8]
   21d44:	mov	r1, #0
   21d48:	str	r1, [r0]
   21d4c:	ldrb	r0, [sp, #7]
   21d50:	mov	r1, r0
   21d54:	cmp	r0, #0
   21d58:	str	r1, [sp]
   21d5c:	beq	21dc4 <main@@Base+0xe194>
   21d60:	b	21d64 <main@@Base+0xe134>
   21d64:	ldr	r0, [sp]
   21d68:	cmp	r0, #2
   21d6c:	beq	21ddc <main@@Base+0xe1ac>
   21d70:	b	21d74 <main@@Base+0xe144>
   21d74:	ldr	r0, [sp]
   21d78:	cmp	r0, #8
   21d7c:	beq	21df8 <main@@Base+0xe1c8>
   21d80:	b	21d84 <main@@Base+0xe154>
   21d84:	ldr	r0, [sp]
   21d88:	cmp	r0, #9
   21d8c:	beq	21e14 <main@@Base+0xe1e4>
   21d90:	b	21d94 <main@@Base+0xe164>
   21d94:	ldr	r0, [sp]
   21d98:	cmp	r0, #10
   21d9c:	beq	21e30 <main@@Base+0xe200>
   21da0:	b	21da4 <main@@Base+0xe174>
   21da4:	ldr	r0, [sp]
   21da8:	cmp	r0, #11
   21dac:	beq	21e4c <main@@Base+0xe21c>
   21db0:	b	21db4 <main@@Base+0xe184>
   21db4:	ldr	r0, [sp]
   21db8:	cmp	r0, #255	; 0xff
   21dbc:	beq	21e68 <main@@Base+0xe238>
   21dc0:	b	21e84 <main@@Base+0xe254>
   21dc4:	ldr	r0, [fp, #-8]
   21dc8:	ldr	r1, [sp, #12]
   21dcc:	ldr	r2, [sp, #8]
   21dd0:	bl	1e820 <main@@Base+0xabf0>
   21dd4:	str	r0, [fp, #-4]
   21dd8:	b	21f1c <main@@Base+0xe2ec>
   21ddc:	ldr	r0, [fp, #-8]
   21de0:	ldr	r1, [sp, #12]
   21de4:	ldr	r2, [sp, #8]
   21de8:	ldr	r3, [fp, #8]
   21dec:	bl	22010 <main@@Base+0xe3e0>
   21df0:	str	r0, [sp, #12]
   21df4:	b	21ecc <main@@Base+0xe29c>
   21df8:	ldr	r0, [fp, #-8]
   21dfc:	ldr	r1, [sp, #12]
   21e00:	ldr	r2, [sp, #8]
   21e04:	ldr	r3, [fp, #8]
   21e08:	bl	2234c <main@@Base+0xe71c>
   21e0c:	str	r0, [sp, #12]
   21e10:	b	21ecc <main@@Base+0xe29c>
   21e14:	ldr	r0, [fp, #-8]
   21e18:	ldr	r1, [sp, #12]
   21e1c:	ldr	r2, [sp, #8]
   21e20:	ldr	r3, [fp, #8]
   21e24:	bl	22418 <main@@Base+0xe7e8>
   21e28:	str	r0, [sp, #12]
   21e2c:	b	21ecc <main@@Base+0xe29c>
   21e30:	ldr	r0, [fp, #-8]
   21e34:	ldr	r1, [sp, #12]
   21e38:	ldr	r2, [sp, #8]
   21e3c:	ldr	r3, [fp, #8]
   21e40:	bl	22418 <main@@Base+0xe7e8>
   21e44:	str	r0, [sp, #12]
   21e48:	b	21ecc <main@@Base+0xe29c>
   21e4c:	ldr	r0, [fp, #-8]
   21e50:	ldr	r1, [sp, #12]
   21e54:	ldr	r2, [sp, #8]
   21e58:	ldr	r3, [fp, #8]
   21e5c:	bl	2dd04 <flatcc_json_parser_build_string@@Base>
   21e60:	str	r0, [sp, #12]
   21e64:	b	21ecc <main@@Base+0xe29c>
   21e68:	ldr	r0, [fp, #-8]
   21e6c:	ldr	r1, [sp, #12]
   21e70:	ldr	r2, [sp, #8]
   21e74:	ldr	r3, [fp, #8]
   21e78:	bl	2dd04 <flatcc_json_parser_build_string@@Base>
   21e7c:	str	r0, [sp, #12]
   21e80:	b	21ecc <main@@Base+0xe29c>
   21e84:	ldr	r0, [fp, #-8]
   21e88:	ldr	r0, [r0, #8]
   21e8c:	and	r0, r0, #1
   21e90:	cmp	r0, #0
   21e94:	bne	21eb4 <main@@Base+0xe284>
   21e98:	ldr	r0, [fp, #-8]
   21e9c:	ldr	r1, [sp, #12]
   21ea0:	ldr	r2, [sp, #8]
   21ea4:	movw	r3, #15
   21ea8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   21eac:	str	r0, [fp, #-4]
   21eb0:	b	21f1c <main@@Base+0xe2ec>
   21eb4:	ldr	r0, [fp, #-8]
   21eb8:	ldr	r1, [sp, #12]
   21ebc:	ldr	r2, [sp, #8]
   21ec0:	bl	2c024 <flatcc_json_parser_generic_json@@Base>
   21ec4:	str	r0, [fp, #-4]
   21ec8:	b	21f1c <main@@Base+0xe2ec>
   21ecc:	ldr	r0, [fp, #-8]
   21ed0:	ldr	r0, [r0, #24]
   21ed4:	cmp	r0, #0
   21ed8:	beq	21ee8 <main@@Base+0xe2b8>
   21edc:	ldr	r0, [sp, #12]
   21ee0:	str	r0, [fp, #-4]
   21ee4:	b	21f1c <main@@Base+0xe2ec>
   21ee8:	ldr	r0, [fp, #8]
   21eec:	ldr	r0, [r0]
   21ef0:	cmp	r0, #0
   21ef4:	bne	21f14 <main@@Base+0xe2e4>
   21ef8:	ldr	r0, [fp, #-8]
   21efc:	ldr	r1, [sp, #12]
   21f00:	ldr	r2, [sp, #8]
   21f04:	movw	r3, #33	; 0x21
   21f08:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   21f0c:	str	r0, [fp, #-4]
   21f10:	b	21f1c <main@@Base+0xe2ec>
   21f14:	ldr	r0, [sp, #12]
   21f18:	str	r0, [fp, #-4]
   21f1c:	ldr	r0, [fp, #-4]
   21f20:	mov	sp, fp
   21f24:	pop	{fp, pc}
   21f28:	sub	sp, sp, #12
   21f2c:	strb	r0, [sp, #7]
   21f30:	ldrb	r0, [sp, #7]
   21f34:	mov	r1, r0
   21f38:	cmp	r0, #0
   21f3c:	str	r1, [sp]
   21f40:	beq	21fa8 <main@@Base+0xe378>
   21f44:	b	21f48 <main@@Base+0xe318>
   21f48:	ldr	r0, [sp]
   21f4c:	cmp	r0, #2
   21f50:	beq	21fb4 <main@@Base+0xe384>
   21f54:	b	21f58 <main@@Base+0xe328>
   21f58:	ldr	r0, [sp]
   21f5c:	cmp	r0, #8
   21f60:	beq	21fc0 <main@@Base+0xe390>
   21f64:	b	21f68 <main@@Base+0xe338>
   21f68:	ldr	r0, [sp]
   21f6c:	cmp	r0, #9
   21f70:	beq	21fcc <main@@Base+0xe39c>
   21f74:	b	21f78 <main@@Base+0xe348>
   21f78:	ldr	r0, [sp]
   21f7c:	cmp	r0, #10
   21f80:	beq	21fd8 <main@@Base+0xe3a8>
   21f84:	b	21f88 <main@@Base+0xe358>
   21f88:	ldr	r0, [sp]
   21f8c:	cmp	r0, #11
   21f90:	beq	21fe4 <main@@Base+0xe3b4>
   21f94:	b	21f98 <main@@Base+0xe368>
   21f98:	ldr	r0, [sp]
   21f9c:	cmp	r0, #255	; 0xff
   21fa0:	beq	21ff0 <main@@Base+0xe3c0>
   21fa4:	b	21ffc <main@@Base+0xe3cc>
   21fa8:	movw	r0, #1
   21fac:	str	r0, [sp, #8]
   21fb0:	b	22004 <main@@Base+0xe3d4>
   21fb4:	movw	r0, #1
   21fb8:	str	r0, [sp, #8]
   21fbc:	b	22004 <main@@Base+0xe3d4>
   21fc0:	movw	r0, #1
   21fc4:	str	r0, [sp, #8]
   21fc8:	b	22004 <main@@Base+0xe3d4>
   21fcc:	movw	r0, #1
   21fd0:	str	r0, [sp, #8]
   21fd4:	b	22004 <main@@Base+0xe3d4>
   21fd8:	movw	r0, #1
   21fdc:	str	r0, [sp, #8]
   21fe0:	b	22004 <main@@Base+0xe3d4>
   21fe4:	movw	r0, #1
   21fe8:	str	r0, [sp, #8]
   21fec:	b	22004 <main@@Base+0xe3d4>
   21ff0:	movw	r0, #1
   21ff4:	str	r0, [sp, #8]
   21ff8:	b	22004 <main@@Base+0xe3d4>
   21ffc:	movw	r0, #0
   22000:	str	r0, [sp, #8]
   22004:	ldr	r0, [sp, #8]
   22008:	add	sp, sp, #12
   2200c:	bx	lr
   22010:	push	{fp, lr}
   22014:	mov	fp, sp
   22018:	sub	sp, sp, #56	; 0x38
   2201c:	str	r0, [fp, #-8]
   22020:	str	r1, [fp, #-12]
   22024:	str	r2, [fp, #-16]
   22028:	str	r3, [fp, #-20]	; 0xffffffec
   2202c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22030:	movw	r1, #0
   22034:	str	r1, [r0]
   22038:	ldr	r0, [fp, #-8]
   2203c:	ldr	r0, [r0]
   22040:	movw	r1, #1
   22044:	bl	25df4 <flatcc_builder_start_table@@Base>
   22048:	cmp	r0, #0
   2204c:	beq	22054 <main@@Base+0xe424>
   22050:	b	22324 <main@@Base+0xe6f4>
   22054:	ldr	r0, [fp, #-8]
   22058:	ldr	r1, [fp, #-12]
   2205c:	ldr	r2, [fp, #-16]
   22060:	sub	r3, fp, #24
   22064:	bl	17a4c <main@@Base+0x3e1c>
   22068:	str	r0, [fp, #-12]
   2206c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22070:	cmp	r0, #0
   22074:	beq	222e4 <main@@Base+0xe6b4>
   22078:	ldr	r0, [fp, #-8]
   2207c:	ldr	r1, [fp, #-12]
   22080:	ldr	r2, [fp, #-16]
   22084:	bl	17b30 <main@@Base+0x3f00>
   22088:	str	r0, [fp, #-12]
   2208c:	ldr	r0, [fp, #-12]
   22090:	ldr	r1, [fp, #-16]
   22094:	bl	17bdc <main@@Base+0x3fac>
   22098:	str	r1, [sp, #12]
   2209c:	str	r0, [sp, #8]
   220a0:	ldr	r0, [sp, #8]
   220a4:	ldr	r1, [sp, #12]
   220a8:	movw	r2, #28530	; 0x6f72
   220ac:	movt	r2, #29559	; 0x7377
   220b0:	eor	r1, r1, r2
   220b4:	movw	r2, #24948	; 0x6174
   220b8:	movt	r2, #25695	; 0x645f
   220bc:	eor	r0, r0, r2
   220c0:	orr	r0, r0, r1
   220c4:	cmp	r0, #0
   220c8:	bne	222b4 <main@@Base+0xe684>
   220cc:	b	220d0 <main@@Base+0xe4a0>
   220d0:	ldr	r0, [fp, #-12]
   220d4:	add	r0, r0, #8
   220d8:	str	r0, [fp, #-12]
   220dc:	ldr	r0, [fp, #-12]
   220e0:	ldr	r1, [fp, #-16]
   220e4:	bl	17bdc <main@@Base+0x3fac>
   220e8:	str	r1, [sp, #12]
   220ec:	str	r0, [sp, #8]
   220f0:	ldr	r0, [sp, #8]
   220f4:	ldr	r1, [sp, #12]
   220f8:	movw	r2, #25451	; 0x636b
   220fc:	movt	r2, #29793	; 0x7461
   22100:	eor	r1, r1, r2
   22104:	movw	r2, #24941	; 0x616d
   22108:	movt	r2, #24420	; 0x5f64
   2210c:	eor	r0, r0, r2
   22110:	orr	r0, r0, r1
   22114:	cmp	r0, #0
   22118:	bne	2229c <main@@Base+0xe66c>
   2211c:	b	22120 <main@@Base+0xe4f0>
   22120:	ldr	r0, [fp, #-12]
   22124:	add	r0, r0, #8
   22128:	str	r0, [fp, #-12]
   2212c:	ldr	r0, [fp, #-12]
   22130:	ldr	r1, [fp, #-16]
   22134:	bl	17bdc <main@@Base+0x3fac>
   22138:	str	r1, [sp, #12]
   2213c:	str	r0, [sp, #8]
   22140:	ldr	r0, [sp, #12]
   22144:	bic	r0, r0, #255	; 0xff
   22148:	movw	r1, #25856	; 0x6500
   2214c:	movt	r1, #24935	; 0x6167
   22150:	teq	r0, r1
   22154:	bne	22284 <main@@Base+0xe654>
   22158:	b	2215c <main@@Base+0xe52c>
   2215c:	ldr	r0, [fp, #-8]
   22160:	ldr	r1, [fp, #-12]
   22164:	str	r1, [sp, #16]
   22168:	ldr	r2, [fp, #-16]
   2216c:	movw	r3, #3
   22170:	bl	17c14 <main@@Base+0x3fe4>
   22174:	str	r0, [fp, #-12]
   22178:	ldr	r0, [sp, #16]
   2217c:	ldr	r1, [fp, #-12]
   22180:	cmp	r0, r1
   22184:	beq	2226c <main@@Base+0xe63c>
   22188:	movw	r0, #0
   2218c:	str	r0, [sp, #4]
   22190:	ldr	r0, [fp, #-8]
   22194:	ldr	r1, [fp, #-12]
   22198:	str	r1, [sp, #16]
   2219c:	ldr	r2, [fp, #-16]
   221a0:	add	r3, sp, #4
   221a4:	bl	1bf5c <main@@Base+0x832c>
   221a8:	str	r0, [fp, #-12]
   221ac:	ldr	r0, [sp, #16]
   221b0:	ldr	r1, [fp, #-12]
   221b4:	cmp	r0, r1
   221b8:	bne	2220c <main@@Base+0xe5dc>
   221bc:	ldr	r0, [pc, #388]	; 22348 <main@@Base+0xe718>
   221c0:	add	r3, pc, r0
   221c4:	ldr	r0, [fp, #-8]
   221c8:	ldr	r1, [fp, #-12]
   221cc:	str	r1, [sp, #16]
   221d0:	ldr	r2, [fp, #-16]
   221d4:	add	ip, sp, #4
   221d8:	str	ip, [sp]
   221dc:	bl	1c034 <main@@Base+0x8404>
   221e0:	str	r0, [fp, #-12]
   221e4:	ldr	r0, [fp, #-12]
   221e8:	ldr	r1, [sp, #16]
   221ec:	cmp	r0, r1
   221f0:	beq	22204 <main@@Base+0xe5d4>
   221f4:	ldr	r0, [fp, #-12]
   221f8:	ldr	r1, [fp, #-16]
   221fc:	cmp	r0, r1
   22200:	bne	22208 <main@@Base+0xe5d8>
   22204:	b	22324 <main@@Base+0xe6f4>
   22208:	b	2220c <main@@Base+0xe5dc>
   2220c:	ldr	r0, [sp, #4]
   22210:	cmp	r0, #0
   22214:	bne	2222c <main@@Base+0xe5fc>
   22218:	ldr	r0, [fp, #-8]
   2221c:	ldr	r0, [r0, #8]
   22220:	and	r0, r0, #2
   22224:	cmp	r0, #0
   22228:	beq	22268 <main@@Base+0xe638>
   2222c:	ldr	r0, [fp, #-8]
   22230:	ldr	r0, [r0]
   22234:	movw	r1, #0
   22238:	movw	r2, #4
   2223c:	movw	r3, #4
   22240:	uxth	r3, r3
   22244:	bl	27698 <flatcc_builder_table_add@@Base>
   22248:	str	r0, [sp, #28]
   2224c:	movw	r1, #0
   22250:	cmp	r0, r1
   22254:	bne	2225c <main@@Base+0xe62c>
   22258:	b	22324 <main@@Base+0xe6f4>
   2225c:	ldr	r0, [sp, #28]
   22260:	ldr	r1, [sp, #4]
   22264:	bl	1c25c <main@@Base+0x862c>
   22268:	b	22280 <main@@Base+0xe650>
   2226c:	ldr	r0, [fp, #-8]
   22270:	ldr	r1, [fp, #-12]
   22274:	ldr	r2, [fp, #-16]
   22278:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   2227c:	str	r0, [fp, #-12]
   22280:	b	22298 <main@@Base+0xe668>
   22284:	ldr	r0, [fp, #-8]
   22288:	ldr	r1, [fp, #-12]
   2228c:	ldr	r2, [fp, #-16]
   22290:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   22294:	str	r0, [fp, #-12]
   22298:	b	222b0 <main@@Base+0xe680>
   2229c:	ldr	r0, [fp, #-8]
   222a0:	ldr	r1, [fp, #-12]
   222a4:	ldr	r2, [fp, #-16]
   222a8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   222ac:	str	r0, [fp, #-12]
   222b0:	b	222c8 <main@@Base+0xe698>
   222b4:	ldr	r0, [fp, #-8]
   222b8:	ldr	r1, [fp, #-12]
   222bc:	ldr	r2, [fp, #-16]
   222c0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   222c4:	str	r0, [fp, #-12]
   222c8:	ldr	r0, [fp, #-8]
   222cc:	ldr	r1, [fp, #-12]
   222d0:	ldr	r2, [fp, #-16]
   222d4:	sub	r3, fp, #24
   222d8:	bl	1cebc <main@@Base+0x928c>
   222dc:	str	r0, [fp, #-12]
   222e0:	b	2206c <main@@Base+0xe43c>
   222e4:	ldr	r0, [fp, #-8]
   222e8:	ldr	r0, [r0, #24]
   222ec:	cmp	r0, #0
   222f0:	beq	222f8 <main@@Base+0xe6c8>
   222f4:	b	22324 <main@@Base+0xe6f4>
   222f8:	ldr	r0, [fp, #-8]
   222fc:	ldr	r0, [r0]
   22300:	bl	26a5c <flatcc_builder_end_table@@Base>
   22304:	ldr	r1, [fp, #-20]	; 0xffffffec
   22308:	str	r0, [r1]
   2230c:	cmp	r0, #0
   22310:	bne	22318 <main@@Base+0xe6e8>
   22314:	b	22324 <main@@Base+0xe6f4>
   22318:	ldr	r0, [fp, #-12]
   2231c:	str	r0, [fp, #-4]
   22320:	b	2233c <main@@Base+0xe70c>
   22324:	ldr	r0, [fp, #-8]
   22328:	ldr	r1, [fp, #-12]
   2232c:	ldr	r2, [fp, #-16]
   22330:	movw	r3, #33	; 0x21
   22334:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22338:	str	r0, [fp, #-4]
   2233c:	ldr	r0, [fp, #-4]
   22340:	mov	sp, fp
   22344:	pop	{fp, pc}
   22348:	andeq	r2, r2, ip, asr #2
   2234c:	push	{fp, lr}
   22350:	mov	fp, sp
   22354:	sub	sp, sp, #24
   22358:	str	r0, [fp, #-8]
   2235c:	str	r1, [sp, #12]
   22360:	str	r2, [sp, #8]
   22364:	str	r3, [sp, #4]
   22368:	ldr	r0, [sp, #4]
   2236c:	movw	r1, #0
   22370:	str	r1, [r0]
   22374:	ldr	r0, [fp, #-8]
   22378:	ldr	r0, [r0]
   2237c:	movw	r1, #2
   22380:	movw	r2, #2
   22384:	uxth	r2, r2
   22388:	bl	24c30 <flatcc_builder_start_struct@@Base>
   2238c:	str	r0, [sp]
   22390:	movw	r1, #0
   22394:	cmp	r0, r1
   22398:	bne	223a0 <main@@Base+0xe770>
   2239c:	b	223f4 <main@@Base+0xe7c4>
   223a0:	ldr	r0, [fp, #-8]
   223a4:	ldr	r1, [sp, #12]
   223a8:	ldr	r2, [sp, #8]
   223ac:	ldr	r3, [sp]
   223b0:	bl	224e4 <main@@Base+0xe8b4>
   223b4:	str	r0, [sp, #12]
   223b8:	ldr	r0, [sp, #12]
   223bc:	ldr	r1, [sp, #8]
   223c0:	cmp	r0, r1
   223c4:	beq	223e4 <main@@Base+0xe7b4>
   223c8:	ldr	r0, [fp, #-8]
   223cc:	ldr	r0, [r0]
   223d0:	bl	24dd8 <flatcc_builder_end_struct@@Base>
   223d4:	ldr	r1, [sp, #4]
   223d8:	str	r0, [r1]
   223dc:	cmp	r0, #0
   223e0:	bne	223e8 <main@@Base+0xe7b8>
   223e4:	b	223f4 <main@@Base+0xe7c4>
   223e8:	ldr	r0, [sp, #12]
   223ec:	str	r0, [fp, #-4]
   223f0:	b	2240c <main@@Base+0xe7dc>
   223f4:	ldr	r0, [fp, #-8]
   223f8:	ldr	r1, [sp, #12]
   223fc:	ldr	r2, [sp, #8]
   22400:	movw	r3, #33	; 0x21
   22404:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22408:	str	r0, [fp, #-4]
   2240c:	ldr	r0, [fp, #-4]
   22410:	mov	sp, fp
   22414:	pop	{fp, pc}
   22418:	push	{fp, lr}
   2241c:	mov	fp, sp
   22420:	sub	sp, sp, #24
   22424:	str	r0, [fp, #-8]
   22428:	str	r1, [sp, #12]
   2242c:	str	r2, [sp, #8]
   22430:	str	r3, [sp, #4]
   22434:	ldr	r0, [sp, #4]
   22438:	movw	r1, #0
   2243c:	str	r1, [r0]
   22440:	ldr	r0, [fp, #-8]
   22444:	ldr	r0, [r0]
   22448:	movw	r1, #4
   2244c:	movw	r2, #4
   22450:	uxth	r2, r2
   22454:	bl	24c30 <flatcc_builder_start_struct@@Base>
   22458:	str	r0, [sp]
   2245c:	movw	r1, #0
   22460:	cmp	r0, r1
   22464:	bne	2246c <main@@Base+0xe83c>
   22468:	b	224c0 <main@@Base+0xe890>
   2246c:	ldr	r0, [fp, #-8]
   22470:	ldr	r1, [sp, #12]
   22474:	ldr	r2, [sp, #8]
   22478:	ldr	r3, [sp]
   2247c:	bl	22b0c <main@@Base+0xeedc>
   22480:	str	r0, [sp, #12]
   22484:	ldr	r0, [sp, #12]
   22488:	ldr	r1, [sp, #8]
   2248c:	cmp	r0, r1
   22490:	beq	224b0 <main@@Base+0xe880>
   22494:	ldr	r0, [fp, #-8]
   22498:	ldr	r0, [r0]
   2249c:	bl	24dd8 <flatcc_builder_end_struct@@Base>
   224a0:	ldr	r1, [sp, #4]
   224a4:	str	r0, [r1]
   224a8:	cmp	r0, #0
   224ac:	bne	224b4 <main@@Base+0xe884>
   224b0:	b	224c0 <main@@Base+0xe890>
   224b4:	ldr	r0, [sp, #12]
   224b8:	str	r0, [fp, #-4]
   224bc:	b	224d8 <main@@Base+0xe8a8>
   224c0:	ldr	r0, [fp, #-8]
   224c4:	ldr	r1, [sp, #12]
   224c8:	ldr	r2, [sp, #8]
   224cc:	movw	r3, #33	; 0x21
   224d0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   224d4:	str	r0, [fp, #-4]
   224d8:	ldr	r0, [fp, #-4]
   224dc:	mov	sp, fp
   224e0:	pop	{fp, pc}
   224e4:	push	{fp, lr}
   224e8:	mov	fp, sp
   224ec:	sub	sp, sp, #56	; 0x38
   224f0:	str	r0, [fp, #-8]
   224f4:	str	r1, [fp, #-12]
   224f8:	str	r2, [fp, #-16]
   224fc:	str	r3, [fp, #-20]	; 0xffffffec
   22500:	ldr	r0, [fp, #-8]
   22504:	ldr	r1, [fp, #-12]
   22508:	ldr	r2, [fp, #-16]
   2250c:	sub	r3, fp, #24
   22510:	bl	17a4c <main@@Base+0x3e1c>
   22514:	str	r0, [fp, #-12]
   22518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2251c:	cmp	r0, #0
   22520:	beq	226e4 <main@@Base+0xeab4>
   22524:	ldr	r0, [fp, #-8]
   22528:	ldr	r1, [fp, #-12]
   2252c:	ldr	r2, [fp, #-16]
   22530:	bl	17b30 <main@@Base+0x3f00>
   22534:	str	r0, [fp, #-12]
   22538:	ldr	r0, [fp, #-12]
   2253c:	ldr	r1, [fp, #-16]
   22540:	bl	17bdc <main@@Base+0x3fac>
   22544:	str	r1, [sp, #12]
   22548:	str	r0, [sp, #8]
   2254c:	ldr	r0, [sp, #8]
   22550:	ldr	r1, [sp, #12]
   22554:	movw	r2, #26994	; 0x6972
   22558:	movt	r2, #26721	; 0x6861
   2255c:	eor	r1, r1, r2
   22560:	movw	r2, #25966	; 0x656e
   22564:	movt	r2, #24428	; 0x5f6c
   22568:	eor	r0, r0, r2
   2256c:	orr	r0, r0, r1
   22570:	cmp	r0, #0
   22574:	bne	226b4 <main@@Base+0xea84>
   22578:	b	2257c <main@@Base+0xe94c>
   2257c:	ldr	r0, [fp, #-12]
   22580:	add	r0, r0, #8
   22584:	str	r0, [fp, #-12]
   22588:	ldr	r0, [fp, #-12]
   2258c:	ldr	r1, [fp, #-16]
   22590:	bl	17bdc <main@@Base+0x3fac>
   22594:	str	r1, [sp, #12]
   22598:	str	r0, [sp, #8]
   2259c:	ldr	r0, [sp, #12]
   225a0:	bic	r0, r0, #255	; 0xff
   225a4:	movw	r1, #26624	; 0x6800
   225a8:	movt	r1, #26484	; 0x6774
   225ac:	teq	r0, r1
   225b0:	bne	2269c <main@@Base+0xea6c>
   225b4:	b	225b8 <main@@Base+0xe988>
   225b8:	ldr	r0, [fp, #-8]
   225bc:	ldr	r1, [fp, #-12]
   225c0:	str	r1, [sp, #20]
   225c4:	ldr	r2, [fp, #-16]
   225c8:	movw	r3, #3
   225cc:	bl	17c14 <main@@Base+0x3fe4>
   225d0:	str	r0, [fp, #-12]
   225d4:	ldr	r0, [sp, #20]
   225d8:	ldr	r1, [fp, #-12]
   225dc:	cmp	r0, r1
   225e0:	beq	22684 <main@@Base+0xea54>
   225e4:	movw	r0, #0
   225e8:	strh	r0, [sp, #6]
   225ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   225f0:	add	r0, r0, #0
   225f4:	str	r0, [sp, #24]
   225f8:	ldr	r0, [fp, #-8]
   225fc:	ldr	r1, [fp, #-12]
   22600:	str	r1, [sp, #20]
   22604:	ldr	r2, [fp, #-16]
   22608:	add	r3, sp, #6
   2260c:	bl	22718 <main@@Base+0xeae8>
   22610:	str	r0, [fp, #-12]
   22614:	ldr	r0, [sp, #20]
   22618:	ldr	r1, [fp, #-12]
   2261c:	cmp	r0, r1
   22620:	bne	22674 <main@@Base+0xea44>
   22624:	ldr	r0, [pc, #232]	; 22714 <main@@Base+0xeae4>
   22628:	add	r3, pc, r0
   2262c:	ldr	r0, [fp, #-8]
   22630:	ldr	r1, [fp, #-12]
   22634:	str	r1, [sp, #20]
   22638:	ldr	r2, [fp, #-16]
   2263c:	add	ip, sp, #6
   22640:	str	ip, [sp]
   22644:	bl	227f4 <main@@Base+0xebc4>
   22648:	str	r0, [fp, #-12]
   2264c:	ldr	r0, [fp, #-12]
   22650:	ldr	r1, [sp, #20]
   22654:	cmp	r0, r1
   22658:	beq	2266c <main@@Base+0xea3c>
   2265c:	ldr	r0, [fp, #-12]
   22660:	ldr	r1, [fp, #-16]
   22664:	cmp	r0, r1
   22668:	bne	22670 <main@@Base+0xea40>
   2266c:	b	226f0 <main@@Base+0xeac0>
   22670:	b	22674 <main@@Base+0xea44>
   22674:	ldr	r0, [sp, #24]
   22678:	ldrh	r1, [sp, #6]
   2267c:	bl	22a20 <main@@Base+0xedf0>
   22680:	b	22698 <main@@Base+0xea68>
   22684:	ldr	r0, [fp, #-8]
   22688:	ldr	r1, [fp, #-12]
   2268c:	ldr	r2, [fp, #-16]
   22690:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   22694:	str	r0, [fp, #-12]
   22698:	b	226b0 <main@@Base+0xea80>
   2269c:	ldr	r0, [fp, #-8]
   226a0:	ldr	r1, [fp, #-12]
   226a4:	ldr	r2, [fp, #-16]
   226a8:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   226ac:	str	r0, [fp, #-12]
   226b0:	b	226c8 <main@@Base+0xea98>
   226b4:	ldr	r0, [fp, #-8]
   226b8:	ldr	r1, [fp, #-12]
   226bc:	ldr	r2, [fp, #-16]
   226c0:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   226c4:	str	r0, [fp, #-12]
   226c8:	ldr	r0, [fp, #-8]
   226cc:	ldr	r1, [fp, #-12]
   226d0:	ldr	r2, [fp, #-16]
   226d4:	sub	r3, fp, #24
   226d8:	bl	1cebc <main@@Base+0x928c>
   226dc:	str	r0, [fp, #-12]
   226e0:	b	22518 <main@@Base+0xe8e8>
   226e4:	ldr	r0, [fp, #-12]
   226e8:	str	r0, [fp, #-4]
   226ec:	b	22708 <main@@Base+0xead8>
   226f0:	ldr	r0, [fp, #-8]
   226f4:	ldr	r1, [fp, #-12]
   226f8:	ldr	r2, [fp, #-16]
   226fc:	movw	r3, #33	; 0x21
   22700:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22704:	str	r0, [fp, #-4]
   22708:	ldr	r0, [fp, #-4]
   2270c:	mov	sp, fp
   22710:	pop	{fp, pc}
   22714:	strdeq	r1, [r2], -r0
   22718:	push	{r4, r5, fp, lr}
   2271c:	add	fp, sp, #8
   22720:	sub	sp, sp, #56	; 0x38
   22724:	str	r0, [fp, #-16]
   22728:	str	r1, [fp, #-20]	; 0xffffffec
   2272c:	str	r2, [fp, #-24]	; 0xffffffe8
   22730:	str	r3, [fp, #-28]	; 0xffffffe4
   22734:	mov	r0, #0
   22738:	str	r0, [sp, #28]
   2273c:	str	r0, [sp, #24]
   22740:	movw	r0, #0
   22744:	str	r0, [sp, #20]
   22748:	ldr	r0, [fp, #-20]	; 0xffffffec
   2274c:	str	r0, [sp, #16]
   22750:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22754:	movw	r1, #0
   22758:	strh	r1, [r0]
   2275c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22764:	cmp	r0, r1
   22768:	bne	22778 <main@@Base+0xeb48>
   2276c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22770:	str	r0, [fp, #-12]
   22774:	b	227e8 <main@@Base+0xebb8>
   22778:	ldr	r0, [fp, #-16]
   2277c:	ldr	r1, [fp, #-20]	; 0xffffffec
   22780:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22784:	add	r3, sp, #20
   22788:	add	ip, sp, #24
   2278c:	str	ip, [sp]
   22790:	bl	2d2cc <flatcc_json_parser_integer@@Base>
   22794:	str	r0, [fp, #-20]	; 0xffffffec
   22798:	ldr	r0, [fp, #-20]	; 0xffffffec
   2279c:	ldr	r1, [sp, #16]
   227a0:	cmp	r0, r1
   227a4:	beq	227e0 <main@@Base+0xebb0>
   227a8:	ldr	r0, [fp, #-16]
   227ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   227b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   227b4:	ldr	r3, [sp, #20]
   227b8:	ldr	ip, [sp, #24]
   227bc:	ldr	lr, [sp, #28]
   227c0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   227c4:	mov	r5, sp
   227c8:	str	r4, [r5, #8]
   227cc:	str	lr, [r5, #4]
   227d0:	str	ip, [r5]
   227d4:	bl	22a4c <main@@Base+0xee1c>
   227d8:	str	r0, [fp, #-12]
   227dc:	b	227e8 <main@@Base+0xebb8>
   227e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   227e4:	str	r0, [fp, #-12]
   227e8:	ldr	r0, [fp, #-12]
   227ec:	sub	sp, fp, #8
   227f0:	pop	{r4, r5, fp, pc}
   227f4:	push	{r4, r5, r6, sl, fp, lr}
   227f8:	add	fp, sp, #16
   227fc:	sub	sp, sp, #88	; 0x58
   22800:	ldr	ip, [fp, #8]
   22804:	str	r0, [fp, #-24]	; 0xffffffe8
   22808:	str	r1, [fp, #-28]	; 0xffffffe4
   2280c:	str	r2, [fp, #-32]	; 0xffffffe0
   22810:	str	r3, [fp, #-36]	; 0xffffffdc
   22814:	movw	r0, #0
   22818:	strh	r0, [fp, #-46]	; 0xffffffd2
   2281c:	movw	r1, #0
   22820:	str	r1, [sp, #36]	; 0x24
   22824:	ldr	r1, [fp, #8]
   22828:	strh	r0, [r1]
   2282c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22830:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22834:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22838:	str	ip, [sp, #32]
   2283c:	bl	1e600 <main@@Base+0xa9d0>
   22840:	str	r0, [fp, #-28]	; 0xffffffe4
   22844:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22848:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2284c:	cmp	r0, r1
   22850:	bne	22860 <main@@Base+0xec30>
   22854:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22858:	str	r0, [fp, #-20]	; 0xffffffec
   2285c:	b	22a14 <main@@Base+0xede4>
   22860:	b	22864 <main@@Base+0xec34>
   22864:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22868:	str	r0, [fp, #-40]	; 0xffffffd8
   2286c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22870:	ldr	r0, [r0]
   22874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22878:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2287c:	str	r2, [fp, #-44]	; 0xffffffd4
   22880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22884:	str	r0, [sp, #28]
   22888:	mov	r0, r1
   2288c:	mov	r1, r2
   22890:	mov	r2, r3
   22894:	add	r3, sp, #44	; 0x2c
   22898:	add	ip, sp, #48	; 0x30
   2289c:	str	ip, [sp]
   228a0:	add	ip, sp, #40	; 0x28
   228a4:	str	ip, [sp, #4]
   228a8:	ldr	ip, [sp, #28]
   228ac:	blx	ip
   228b0:	str	r0, [fp, #-28]	; 0xffffffe4
   228b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   228b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   228bc:	cmp	r0, r1
   228c0:	bne	228d0 <main@@Base+0xeca0>
   228c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   228c8:	str	r0, [fp, #-20]	; 0xffffffec
   228cc:	b	22a14 <main@@Base+0xede4>
   228d0:	b	228d4 <main@@Base+0xeca4>
   228d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   228d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   228dc:	cmp	r0, r1
   228e0:	movw	r0, #0
   228e4:	str	r0, [sp, #24]
   228e8:	bne	22910 <main@@Base+0xece0>
   228ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   228f0:	add	r1, r0, #4
   228f4:	str	r1, [fp, #-40]	; 0xffffffd8
   228f8:	ldr	r0, [r0, #4]
   228fc:	movw	r1, #0
   22900:	cmp	r0, r1
   22904:	movw	r0, #0
   22908:	movne	r0, #1
   2290c:	str	r0, [sp, #24]
   22910:	ldr	r0, [sp, #24]
   22914:	tst	r0, #1
   22918:	bne	2286c <main@@Base+0xec3c>
   2291c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22924:	cmp	r0, r1
   22928:	bne	22948 <main@@Base+0xed18>
   2292c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22934:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22938:	movw	r3, #23
   2293c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22940:	str	r0, [fp, #-20]	; 0xffffffec
   22944:	b	22a14 <main@@Base+0xede4>
   22948:	ldr	r0, [sp, #36]	; 0x24
   2294c:	add	r1, r0, #1
   22950:	str	r1, [sp, #36]	; 0x24
   22954:	cmp	r0, #0
   22958:	beq	22988 <main@@Base+0xed58>
   2295c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22960:	ldr	r0, [r0, #12]
   22964:	cmp	r0, #0
   22968:	beq	22988 <main@@Base+0xed58>
   2296c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22974:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22978:	movw	r3, #14
   2297c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22980:	str	r0, [fp, #-20]	; 0xffffffec
   22984:	b	22a14 <main@@Base+0xede4>
   22988:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2298c:	mov	r1, r0
   22990:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22994:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22998:	ldr	ip, [sp, #44]	; 0x2c
   2299c:	ldr	lr, [sp, #48]	; 0x30
   229a0:	ldr	r4, [sp, #52]	; 0x34
   229a4:	mov	r5, sp
   229a8:	sub	r6, fp, #46	; 0x2e
   229ac:	str	r6, [r5, #8]
   229b0:	str	r4, [r5, #4]
   229b4:	str	lr, [r5]
   229b8:	str	r0, [sp, #20]
   229bc:	mov	r0, r2
   229c0:	str	r1, [sp, #16]
   229c4:	mov	r1, r3
   229c8:	ldr	r2, [sp, #20]
   229cc:	mov	r3, ip
   229d0:	bl	22a4c <main@@Base+0xee1c>
   229d4:	ldr	r1, [sp, #16]
   229d8:	cmp	r1, r0
   229dc:	bne	229ec <main@@Base+0xedbc>
   229e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   229e4:	str	r0, [fp, #-20]	; 0xffffffec
   229e8:	b	22a14 <main@@Base+0xede4>
   229ec:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   229f0:	ldr	r1, [fp, #8]
   229f4:	ldrh	r2, [r1]
   229f8:	add	r0, r2, r0
   229fc:	strh	r0, [r1]
   22a00:	ldr	r0, [sp, #40]	; 0x28
   22a04:	cmp	r0, #0
   22a08:	bne	22864 <main@@Base+0xec34>
   22a0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22a10:	str	r0, [fp, #-20]	; 0xffffffec
   22a14:	ldr	r0, [fp, #-20]	; 0xffffffec
   22a18:	sub	sp, fp, #16
   22a1c:	pop	{r4, r5, r6, sl, fp, pc}
   22a20:	push	{fp, lr}
   22a24:	mov	fp, sp
   22a28:	sub	sp, sp, #8
   22a2c:	str	r0, [sp, #4]
   22a30:	strh	r1, [sp, #2]
   22a34:	ldrh	r0, [sp, #2]
   22a38:	bl	22af8 <main@@Base+0xeec8>
   22a3c:	ldr	r1, [sp, #4]
   22a40:	strh	r0, [r1]
   22a44:	mov	sp, fp
   22a48:	pop	{fp, pc}
   22a4c:	push	{r4, sl, fp, lr}
   22a50:	add	fp, sp, #8
   22a54:	sub	sp, sp, #32
   22a58:	ldr	ip, [fp, #12]
   22a5c:	ldr	lr, [fp, #8]
   22a60:	ldr	r4, [fp, #16]
   22a64:	str	r0, [fp, #-16]
   22a68:	str	r1, [sp, #20]
   22a6c:	str	r2, [sp, #16]
   22a70:	str	r3, [sp, #12]
   22a74:	str	ip, [sp, #4]
   22a78:	str	lr, [sp]
   22a7c:	ldr	r0, [sp, #12]
   22a80:	cmp	r0, #0
   22a84:	beq	22aa4 <main@@Base+0xee74>
   22a88:	ldr	r0, [fp, #-16]
   22a8c:	ldr	r1, [sp, #20]
   22a90:	ldr	r2, [sp, #16]
   22a94:	movw	r3, #8
   22a98:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22a9c:	str	r0, [fp, #-12]
   22aa0:	b	22aec <main@@Base+0xeebc>
   22aa4:	ldr	r0, [sp]
   22aa8:	ldr	r1, [sp, #4]
   22aac:	subs	r0, r0, #65536	; 0x10000
   22ab0:	sbcs	r1, r1, #0
   22ab4:	bcc	22ad8 <main@@Base+0xeea8>
   22ab8:	b	22abc <main@@Base+0xee8c>
   22abc:	ldr	r0, [fp, #-16]
   22ac0:	ldr	r1, [sp, #20]
   22ac4:	ldr	r2, [sp, #16]
   22ac8:	movw	r3, #7
   22acc:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22ad0:	str	r0, [fp, #-12]
   22ad4:	b	22aec <main@@Base+0xeebc>
   22ad8:	ldrh	r0, [sp]
   22adc:	ldr	r1, [fp, #16]
   22ae0:	strh	r0, [r1]
   22ae4:	ldr	r0, [sp, #20]
   22ae8:	str	r0, [fp, #-12]
   22aec:	ldr	r0, [fp, #-12]
   22af0:	sub	sp, fp, #8
   22af4:	pop	{r4, sl, fp, pc}
   22af8:	sub	sp, sp, #4
   22afc:	strh	r0, [sp, #2]
   22b00:	ldrh	r0, [sp, #2]
   22b04:	add	sp, sp, #4
   22b08:	bx	lr
   22b0c:	push	{fp, lr}
   22b10:	mov	fp, sp
   22b14:	sub	sp, sp, #56	; 0x38
   22b18:	str	r0, [fp, #-8]
   22b1c:	str	r1, [fp, #-12]
   22b20:	str	r2, [fp, #-16]
   22b24:	str	r3, [fp, #-20]	; 0xffffffec
   22b28:	ldr	r0, [fp, #-8]
   22b2c:	ldr	r1, [fp, #-12]
   22b30:	ldr	r2, [fp, #-16]
   22b34:	sub	r3, fp, #24
   22b38:	bl	17a4c <main@@Base+0x3e1c>
   22b3c:	str	r0, [fp, #-12]
   22b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22b44:	cmp	r0, #0
   22b48:	beq	22d08 <main@@Base+0xf0d8>
   22b4c:	ldr	r0, [fp, #-8]
   22b50:	ldr	r1, [fp, #-12]
   22b54:	ldr	r2, [fp, #-16]
   22b58:	bl	17b30 <main@@Base+0x3f00>
   22b5c:	str	r0, [fp, #-12]
   22b60:	ldr	r0, [fp, #-12]
   22b64:	ldr	r1, [fp, #-16]
   22b68:	bl	17bdc <main@@Base+0x3fac>
   22b6c:	str	r1, [sp, #12]
   22b70:	str	r0, [sp, #8]
   22b74:	ldr	r0, [sp, #8]
   22b78:	ldr	r1, [sp, #12]
   22b7c:	movw	r2, #28523	; 0x6f6b
   22b80:	movt	r2, #25199	; 0x626f
   22b84:	eor	r1, r1, r2
   22b88:	movw	r2, #29285	; 0x7265
   22b8c:	movt	r2, #29535	; 0x735f
   22b90:	eor	r0, r0, r2
   22b94:	orr	r0, r0, r1
   22b98:	cmp	r0, #0
   22b9c:	bne	22cd8 <main@@Base+0xf0a8>
   22ba0:	b	22ba4 <main@@Base+0xef74>
   22ba4:	ldr	r0, [fp, #-12]
   22ba8:	add	r0, r0, #8
   22bac:	str	r0, [fp, #-12]
   22bb0:	ldr	r0, [fp, #-12]
   22bb4:	ldr	r1, [fp, #-16]
   22bb8:	bl	17bdc <main@@Base+0x3fac>
   22bbc:	str	r1, [sp, #12]
   22bc0:	str	r0, [sp, #8]
   22bc4:	ldrh	r0, [sp, #14]
   22bc8:	movw	r1, #0
   22bcc:	movt	r1, #24932	; 0x6164
   22bd0:	teq	r1, r0, lsl #16
   22bd4:	bne	22cc0 <main@@Base+0xf090>
   22bd8:	b	22bdc <main@@Base+0xefac>
   22bdc:	ldr	r0, [fp, #-8]
   22be0:	ldr	r1, [fp, #-12]
   22be4:	str	r1, [sp, #20]
   22be8:	ldr	r2, [fp, #-16]
   22bec:	movw	r3, #2
   22bf0:	bl	17c14 <main@@Base+0x3fe4>
   22bf4:	str	r0, [fp, #-12]
   22bf8:	ldr	r0, [sp, #20]
   22bfc:	ldr	r1, [fp, #-12]
   22c00:	cmp	r0, r1
   22c04:	beq	22ca8 <main@@Base+0xf078>
   22c08:	movw	r0, #0
   22c0c:	str	r0, [sp, #4]
   22c10:	ldr	r0, [fp, #-20]	; 0xffffffec
   22c14:	add	r0, r0, #0
   22c18:	str	r0, [sp, #24]
   22c1c:	ldr	r0, [fp, #-8]
   22c20:	ldr	r1, [fp, #-12]
   22c24:	str	r1, [sp, #20]
   22c28:	ldr	r2, [fp, #-16]
   22c2c:	add	r3, sp, #4
   22c30:	bl	1bf5c <main@@Base+0x832c>
   22c34:	str	r0, [fp, #-12]
   22c38:	ldr	r0, [sp, #20]
   22c3c:	ldr	r1, [fp, #-12]
   22c40:	cmp	r0, r1
   22c44:	bne	22c98 <main@@Base+0xf068>
   22c48:	ldr	r0, [pc, #232]	; 22d38 <main@@Base+0xf108>
   22c4c:	add	r3, pc, r0
   22c50:	ldr	r0, [fp, #-8]
   22c54:	ldr	r1, [fp, #-12]
   22c58:	str	r1, [sp, #20]
   22c5c:	ldr	r2, [fp, #-16]
   22c60:	add	ip, sp, #4
   22c64:	str	ip, [sp]
   22c68:	bl	1c034 <main@@Base+0x8404>
   22c6c:	str	r0, [fp, #-12]
   22c70:	ldr	r0, [fp, #-12]
   22c74:	ldr	r1, [sp, #20]
   22c78:	cmp	r0, r1
   22c7c:	beq	22c90 <main@@Base+0xf060>
   22c80:	ldr	r0, [fp, #-12]
   22c84:	ldr	r1, [fp, #-16]
   22c88:	cmp	r0, r1
   22c8c:	bne	22c94 <main@@Base+0xf064>
   22c90:	b	22d14 <main@@Base+0xf0e4>
   22c94:	b	22c98 <main@@Base+0xf068>
   22c98:	ldr	r0, [sp, #24]
   22c9c:	ldr	r1, [sp, #4]
   22ca0:	bl	1c25c <main@@Base+0x862c>
   22ca4:	b	22cbc <main@@Base+0xf08c>
   22ca8:	ldr	r0, [fp, #-8]
   22cac:	ldr	r1, [fp, #-12]
   22cb0:	ldr	r2, [fp, #-16]
   22cb4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   22cb8:	str	r0, [fp, #-12]
   22cbc:	b	22cd4 <main@@Base+0xf0a4>
   22cc0:	ldr	r0, [fp, #-8]
   22cc4:	ldr	r1, [fp, #-12]
   22cc8:	ldr	r2, [fp, #-16]
   22ccc:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   22cd0:	str	r0, [fp, #-12]
   22cd4:	b	22cec <main@@Base+0xf0bc>
   22cd8:	ldr	r0, [fp, #-8]
   22cdc:	ldr	r1, [fp, #-12]
   22ce0:	ldr	r2, [fp, #-16]
   22ce4:	bl	2bd20 <flatcc_json_parser_unmatched_symbol@@Base>
   22ce8:	str	r0, [fp, #-12]
   22cec:	ldr	r0, [fp, #-8]
   22cf0:	ldr	r1, [fp, #-12]
   22cf4:	ldr	r2, [fp, #-16]
   22cf8:	sub	r3, fp, #24
   22cfc:	bl	1cebc <main@@Base+0x928c>
   22d00:	str	r0, [fp, #-12]
   22d04:	b	22b40 <main@@Base+0xef10>
   22d08:	ldr	r0, [fp, #-12]
   22d0c:	str	r0, [fp, #-4]
   22d10:	b	22d2c <main@@Base+0xf0fc>
   22d14:	ldr	r0, [fp, #-8]
   22d18:	ldr	r1, [fp, #-12]
   22d1c:	ldr	r2, [fp, #-16]
   22d20:	movw	r3, #33	; 0x21
   22d24:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22d28:	str	r0, [fp, #-4]
   22d2c:	ldr	r0, [fp, #-4]
   22d30:	mov	sp, fp
   22d34:	pop	{fp, pc}
   22d38:	ldrdeq	r1, [r2], -r8
   22d3c:	push	{r4, sl, fp, lr}
   22d40:	add	fp, sp, #8
   22d44:	sub	sp, sp, #32
   22d48:	ldr	ip, [fp, #12]
   22d4c:	ldr	lr, [fp, #8]
   22d50:	ldr	r4, [fp, #16]
   22d54:	str	r0, [fp, #-16]
   22d58:	str	r1, [sp, #20]
   22d5c:	str	r2, [sp, #16]
   22d60:	str	r3, [sp, #12]
   22d64:	str	ip, [sp, #4]
   22d68:	str	lr, [sp]
   22d6c:	ldr	r0, [sp, #12]
   22d70:	cmp	r0, #0
   22d74:	beq	22d94 <main@@Base+0xf164>
   22d78:	ldr	r0, [fp, #-16]
   22d7c:	ldr	r1, [sp, #20]
   22d80:	ldr	r2, [sp, #16]
   22d84:	movw	r3, #8
   22d88:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22d8c:	str	r0, [fp, #-12]
   22d90:	b	22dc8 <main@@Base+0xf198>
   22d94:	ldr	r0, [sp]
   22d98:	ldr	r1, [sp, #4]
   22d9c:	orr	r0, r0, r1
   22da0:	cmp	r0, #0
   22da4:	movwne	r0, #1
   22da8:	mvn	r1, #0
   22dac:	eor	r0, r0, r1
   22db0:	eor	r0, r0, r1
   22db4:	and	r0, r0, #1
   22db8:	ldr	r1, [fp, #16]
   22dbc:	strb	r0, [r1]
   22dc0:	ldr	r0, [sp, #20]
   22dc4:	str	r0, [fp, #-12]
   22dc8:	ldr	r0, [fp, #-12]
   22dcc:	sub	sp, fp, #8
   22dd0:	pop	{r4, sl, fp, pc}
   22dd4:	sub	sp, sp, #4
   22dd8:	strb	r0, [sp, #3]
   22ddc:	ldrb	r0, [sp, #3]
   22de0:	add	sp, sp, #4
   22de4:	bx	lr
   22de8:	push	{r4, sl, fp, lr}
   22dec:	add	fp, sp, #8
   22df0:	sub	sp, sp, #32
   22df4:	ldr	ip, [fp, #12]
   22df8:	ldr	lr, [fp, #8]
   22dfc:	ldr	r4, [fp, #16]
   22e00:	str	r0, [fp, #-12]
   22e04:	str	r1, [fp, #-16]
   22e08:	str	r2, [sp, #20]
   22e0c:	str	r3, [sp, #16]
   22e10:	str	ip, [sp, #12]
   22e14:	str	lr, [sp, #8]
   22e18:	ldr	r0, [sp, #16]
   22e1c:	cmp	r0, #0
   22e20:	beq	22e40 <main@@Base+0xf210>
   22e24:	ldr	r0, [sp, #8]
   22e28:	ldr	r1, [sp, #12]
   22e2c:	bl	30bb8 <flatcc_json_parser_struct_as_root@@Base+0x18cc>
   22e30:	vmov	s0, r0
   22e34:	vneg.f32	s0, s0
   22e38:	vstr	s0, [sp, #4]
   22e3c:	b	22e54 <main@@Base+0xf224>
   22e40:	ldr	r0, [sp, #8]
   22e44:	ldr	r1, [sp, #12]
   22e48:	bl	30bb8 <flatcc_json_parser_struct_as_root@@Base+0x18cc>
   22e4c:	vmov	s0, r0
   22e50:	vstr	s0, [sp, #4]
   22e54:	vldr	s0, [sp, #4]
   22e58:	ldr	r0, [fp, #16]
   22e5c:	vstr	s0, [r0]
   22e60:	ldr	r0, [fp, #-16]
   22e64:	sub	sp, fp, #8
   22e68:	pop	{r4, sl, fp, pc}
   22e6c:	sub	sp, sp, #8
   22e70:	vstr	s0, [sp, #4]
   22e74:	vldr	s0, [sp, #4]
   22e78:	vstr	s0, [sp]
   22e7c:	ldr	r0, [sp]
   22e80:	str	r0, [sp]
   22e84:	vldr	s0, [sp]
   22e88:	add	sp, sp, #8
   22e8c:	bx	lr
   22e90:	push	{r4, sl, fp, lr}
   22e94:	add	fp, sp, #8
   22e98:	sub	sp, sp, #32
   22e9c:	ldr	ip, [fp, #12]
   22ea0:	ldr	lr, [fp, #8]
   22ea4:	ldr	r4, [fp, #16]
   22ea8:	str	r0, [fp, #-16]
   22eac:	str	r1, [sp, #20]
   22eb0:	str	r2, [sp, #16]
   22eb4:	str	r3, [sp, #12]
   22eb8:	str	ip, [sp, #4]
   22ebc:	str	lr, [sp]
   22ec0:	ldr	r0, [sp, #12]
   22ec4:	cmp	r0, #0
   22ec8:	beq	22f14 <main@@Base+0xf2e4>
   22ecc:	ldr	r0, [sp]
   22ed0:	ldr	r1, [sp, #4]
   22ed4:	subs	r0, r0, #-2147483647	; 0x80000001
   22ed8:	sbcs	r1, r1, #0
   22edc:	bcc	22f00 <main@@Base+0xf2d0>
   22ee0:	b	22ee4 <main@@Base+0xf2b4>
   22ee4:	ldr	r0, [fp, #-16]
   22ee8:	ldr	r1, [sp, #20]
   22eec:	ldr	r2, [sp, #16]
   22ef0:	movw	r3, #8
   22ef4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22ef8:	str	r0, [fp, #-12]
   22efc:	b	22f5c <main@@Base+0xf32c>
   22f00:	ldr	r0, [sp]
   22f04:	rsb	r0, r0, #0
   22f08:	ldr	r1, [fp, #16]
   22f0c:	str	r0, [r1]
   22f10:	b	22f54 <main@@Base+0xf324>
   22f14:	ldr	r0, [sp]
   22f18:	ldr	r1, [sp, #4]
   22f1c:	subs	r0, r0, #-2147483648	; 0x80000000
   22f20:	sbcs	r1, r1, #0
   22f24:	bcc	22f48 <main@@Base+0xf318>
   22f28:	b	22f2c <main@@Base+0xf2fc>
   22f2c:	ldr	r0, [fp, #-16]
   22f30:	ldr	r1, [sp, #20]
   22f34:	ldr	r2, [sp, #16]
   22f38:	movw	r3, #7
   22f3c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22f40:	str	r0, [fp, #-12]
   22f44:	b	22f5c <main@@Base+0xf32c>
   22f48:	ldr	r0, [sp]
   22f4c:	ldr	r1, [fp, #16]
   22f50:	str	r0, [r1]
   22f54:	ldr	r0, [sp, #20]
   22f58:	str	r0, [fp, #-12]
   22f5c:	ldr	r0, [fp, #-12]
   22f60:	sub	sp, fp, #8
   22f64:	pop	{r4, sl, fp, pc}
   22f68:	sub	sp, sp, #4
   22f6c:	str	r0, [sp]
   22f70:	ldr	r0, [sp]
   22f74:	add	sp, sp, #4
   22f78:	bx	lr
   22f7c:	push	{r4, sl, fp, lr}
   22f80:	add	fp, sp, #8
   22f84:	sub	sp, sp, #32
   22f88:	ldr	ip, [fp, #12]
   22f8c:	ldr	lr, [fp, #8]
   22f90:	ldr	r4, [fp, #16]
   22f94:	str	r0, [fp, #-16]
   22f98:	str	r1, [sp, #20]
   22f9c:	str	r2, [sp, #16]
   22fa0:	str	r3, [sp, #12]
   22fa4:	str	ip, [sp, #4]
   22fa8:	str	lr, [sp]
   22fac:	ldr	r0, [sp, #12]
   22fb0:	cmp	r0, #0
   22fb4:	beq	2300c <main@@Base+0xf3dc>
   22fb8:	ldr	r0, [sp]
   22fbc:	ldr	r1, [sp, #4]
   22fc0:	subs	r0, r0, #1
   22fc4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   22fc8:	bcc	22fec <main@@Base+0xf3bc>
   22fcc:	b	22fd0 <main@@Base+0xf3a0>
   22fd0:	ldr	r0, [fp, #-16]
   22fd4:	ldr	r1, [sp, #20]
   22fd8:	ldr	r2, [sp, #16]
   22fdc:	movw	r3, #8
   22fe0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   22fe4:	str	r0, [fp, #-12]
   22fe8:	b	23054 <main@@Base+0xf424>
   22fec:	ldr	r0, [sp]
   22ff0:	ldr	r1, [sp, #4]
   22ff4:	rsbs	r0, r0, #0
   22ff8:	rsc	r1, r1, #0
   22ffc:	ldr	r2, [fp, #16]
   23000:	str	r0, [r2]
   23004:	str	r1, [r2, #4]
   23008:	b	2304c <main@@Base+0xf41c>
   2300c:	ldr	r0, [sp, #4]
   23010:	cmn	r0, #1
   23014:	bgt	23038 <main@@Base+0xf408>
   23018:	b	2301c <main@@Base+0xf3ec>
   2301c:	ldr	r0, [fp, #-16]
   23020:	ldr	r1, [sp, #20]
   23024:	ldr	r2, [sp, #16]
   23028:	movw	r3, #7
   2302c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   23030:	str	r0, [fp, #-12]
   23034:	b	23054 <main@@Base+0xf424>
   23038:	ldr	r0, [sp]
   2303c:	ldr	r1, [sp, #4]
   23040:	ldr	r2, [fp, #16]
   23044:	str	r1, [r2, #4]
   23048:	str	r0, [r2]
   2304c:	ldr	r0, [sp, #20]
   23050:	str	r0, [fp, #-12]
   23054:	ldr	r0, [fp, #-12]
   23058:	sub	sp, fp, #8
   2305c:	pop	{r4, sl, fp, pc}
   23060:	sub	sp, sp, #8
   23064:	str	r0, [sp]
   23068:	str	r1, [sp, #4]
   2306c:	ldr	r0, [sp]
   23070:	ldr	r1, [sp, #4]
   23074:	add	sp, sp, #8
   23078:	bx	lr
   2307c:	push	{r4, sl, fp, lr}
   23080:	add	fp, sp, #8
   23084:	sub	sp, sp, #32
   23088:	ldr	ip, [fp, #12]
   2308c:	ldr	lr, [fp, #8]
   23090:	ldr	r4, [fp, #16]
   23094:	str	r0, [fp, #-16]
   23098:	str	r1, [sp, #20]
   2309c:	str	r2, [sp, #16]
   230a0:	str	r3, [sp, #12]
   230a4:	str	ip, [sp, #4]
   230a8:	str	lr, [sp]
   230ac:	ldr	r0, [sp, #12]
   230b0:	cmp	r0, #0
   230b4:	beq	230d4 <main@@Base+0xf4a4>
   230b8:	ldr	r0, [fp, #-16]
   230bc:	ldr	r1, [sp, #20]
   230c0:	ldr	r2, [sp, #16]
   230c4:	movw	r3, #8
   230c8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   230cc:	str	r0, [fp, #-12]
   230d0:	b	23114 <main@@Base+0xf4e4>
   230d4:	ldr	r0, [sp, #4]
   230d8:	cmp	r0, #0
   230dc:	beq	23100 <main@@Base+0xf4d0>
   230e0:	b	230e4 <main@@Base+0xf4b4>
   230e4:	ldr	r0, [fp, #-16]
   230e8:	ldr	r1, [sp, #20]
   230ec:	ldr	r2, [sp, #16]
   230f0:	movw	r3, #7
   230f4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   230f8:	str	r0, [fp, #-12]
   230fc:	b	23114 <main@@Base+0xf4e4>
   23100:	ldr	r0, [sp]
   23104:	ldr	r1, [fp, #16]
   23108:	str	r0, [r1]
   2310c:	ldr	r0, [sp, #20]
   23110:	str	r0, [fp, #-12]
   23114:	ldr	r0, [fp, #-12]
   23118:	sub	sp, fp, #8
   2311c:	pop	{r4, sl, fp, pc}
   23120:	sub	sp, sp, #4
   23124:	str	r0, [sp]
   23128:	ldr	r0, [sp]
   2312c:	add	sp, sp, #4
   23130:	bx	lr
   23134:	push	{r4, sl, fp, lr}
   23138:	add	fp, sp, #8
   2313c:	sub	sp, sp, #32
   23140:	ldr	ip, [fp, #12]
   23144:	ldr	lr, [fp, #8]
   23148:	ldr	r4, [fp, #16]
   2314c:	str	r0, [fp, #-16]
   23150:	str	r1, [sp, #20]
   23154:	str	r2, [sp, #16]
   23158:	str	r3, [sp, #12]
   2315c:	str	ip, [sp, #4]
   23160:	str	lr, [sp]
   23164:	ldr	r0, [sp, #12]
   23168:	cmp	r0, #0
   2316c:	beq	2318c <main@@Base+0xf55c>
   23170:	ldr	r0, [fp, #-16]
   23174:	ldr	r1, [sp, #20]
   23178:	ldr	r2, [sp, #16]
   2317c:	movw	r3, #8
   23180:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   23184:	str	r0, [fp, #-12]
   23188:	b	231a8 <main@@Base+0xf578>
   2318c:	ldr	r0, [sp]
   23190:	ldr	r1, [sp, #4]
   23194:	ldr	r2, [fp, #16]
   23198:	str	r1, [r2, #4]
   2319c:	str	r0, [r2]
   231a0:	ldr	r0, [sp, #20]
   231a4:	str	r0, [fp, #-12]
   231a8:	ldr	r0, [fp, #-12]
   231ac:	sub	sp, fp, #8
   231b0:	pop	{r4, sl, fp, pc}
   231b4:	sub	sp, sp, #8
   231b8:	str	r0, [sp]
   231bc:	str	r1, [sp, #4]
   231c0:	ldr	r0, [sp]
   231c4:	ldr	r1, [sp, #4]
   231c8:	add	sp, sp, #8
   231cc:	bx	lr
   231d0:	push	{r4, sl, fp, lr}
   231d4:	add	fp, sp, #8
   231d8:	sub	sp, sp, #32
   231dc:	ldr	ip, [fp, #12]
   231e0:	ldr	lr, [fp, #8]
   231e4:	ldr	r4, [fp, #16]
   231e8:	str	r0, [fp, #-12]
   231ec:	str	r1, [fp, #-16]
   231f0:	str	r2, [sp, #20]
   231f4:	str	r3, [sp, #16]
   231f8:	str	ip, [sp, #12]
   231fc:	str	lr, [sp, #8]
   23200:	ldr	r0, [sp, #16]
   23204:	cmp	r0, #0
   23208:	beq	23228 <main@@Base+0xf5f8>
   2320c:	ldr	r0, [sp, #8]
   23210:	ldr	r1, [sp, #12]
   23214:	bl	30980 <flatcc_json_parser_struct_as_root@@Base+0x1694>
   23218:	vmov	d16, r0, r1
   2321c:	vneg.f64	d16, d16
   23220:	vstr	d16, [sp]
   23224:	b	2323c <main@@Base+0xf60c>
   23228:	ldr	r0, [sp, #8]
   2322c:	ldr	r1, [sp, #12]
   23230:	bl	30980 <flatcc_json_parser_struct_as_root@@Base+0x1694>
   23234:	vmov	d16, r0, r1
   23238:	vstr	d16, [sp]
   2323c:	vldr	d16, [sp]
   23240:	ldr	r0, [fp, #16]
   23244:	vstr	d16, [r0]
   23248:	ldr	r0, [fp, #-16]
   2324c:	sub	sp, fp, #8
   23250:	pop	{r4, sl, fp, pc}
   23254:	sub	sp, sp, #16
   23258:	vstr	d0, [sp, #8]
   2325c:	vldr	d16, [sp, #8]
   23260:	vstr	d16, [sp]
   23264:	vldr	d0, [sp]
   23268:	add	sp, sp, #16
   2326c:	bx	lr

00023270 <flatcc_builder_default_alloc@@Base>:
   23270:	push	{fp, lr}
   23274:	mov	fp, sp
   23278:	sub	sp, sp, #32
   2327c:	ldr	ip, [fp, #8]
   23280:	str	r0, [fp, #-8]
   23284:	str	r1, [fp, #-12]
   23288:	str	r2, [sp, #16]
   2328c:	str	r3, [sp, #12]
   23290:	ldr	r0, [sp, #16]
   23294:	cmp	r0, #0
   23298:	bne	232dc <flatcc_builder_default_alloc@@Base+0x6c>
   2329c:	ldr	r0, [fp, #-12]
   232a0:	ldr	r0, [r0]
   232a4:	movw	r1, #0
   232a8:	cmp	r0, r1
   232ac:	beq	232d0 <flatcc_builder_default_alloc@@Base+0x60>
   232b0:	ldr	r0, [fp, #-12]
   232b4:	ldr	r0, [r0]
   232b8:	bl	12a6c <free@plt>
   232bc:	ldr	r0, [fp, #-12]
   232c0:	movw	r1, #0
   232c4:	str	r1, [r0]
   232c8:	ldr	r0, [fp, #-12]
   232cc:	str	r1, [r0, #4]
   232d0:	movw	r0, #0
   232d4:	str	r0, [fp, #-4]
   232d8:	b	23448 <flatcc_builder_default_alloc@@Base+0x1d8>
   232dc:	ldr	r0, [fp, #8]
   232e0:	sub	r0, r0, #1
   232e4:	cmp	r0, #6
   232e8:	str	r0, [sp]
   232ec:	bhi	2334c <flatcc_builder_default_alloc@@Base+0xdc>
   232f0:	add	r0, pc, #8
   232f4:	ldr	r1, [sp]
   232f8:	ldr	r2, [r0, r1, lsl #2]
   232fc:	add	pc, r0, r2
   23300:	andeq	r0, r0, ip, lsl r0
   23304:	andeq	r0, r0, ip, asr #32
   23308:	andeq	r0, r0, ip, asr #32
   2330c:	andeq	r0, r0, r4, lsr r0
   23310:	andeq	r0, r0, r8, lsr #32
   23314:	andeq	r0, r0, ip, asr #32
   23318:	andeq	r0, r0, r0, asr #32
   2331c:	movw	r0, #256	; 0x100
   23320:	str	r0, [sp, #4]
   23324:	b	23354 <flatcc_builder_default_alloc@@Base+0xe4>
   23328:	ldr	r0, [sp, #16]
   2332c:	str	r0, [sp, #4]
   23330:	b	23354 <flatcc_builder_default_alloc@@Base+0xe4>
   23334:	movw	r0, #288	; 0x120
   23338:	str	r0, [sp, #4]
   2333c:	b	23354 <flatcc_builder_default_alloc@@Base+0xe4>
   23340:	movw	r0, #64	; 0x40
   23344:	str	r0, [sp, #4]
   23348:	b	23354 <flatcc_builder_default_alloc@@Base+0xe4>
   2334c:	movw	r0, #32
   23350:	str	r0, [sp, #4]
   23354:	b	23358 <flatcc_builder_default_alloc@@Base+0xe8>
   23358:	ldr	r0, [sp, #4]
   2335c:	ldr	r1, [sp, #16]
   23360:	cmp	r0, r1
   23364:	bcs	23378 <flatcc_builder_default_alloc@@Base+0x108>
   23368:	ldr	r0, [sp, #4]
   2336c:	lsl	r0, r0, #1
   23370:	str	r0, [sp, #4]
   23374:	b	23358 <flatcc_builder_default_alloc@@Base+0xe8>
   23378:	ldr	r0, [sp, #16]
   2337c:	ldr	r1, [fp, #-12]
   23380:	ldr	r1, [r1, #4]
   23384:	cmp	r0, r1
   23388:	bhi	233b0 <flatcc_builder_default_alloc@@Base+0x140>
   2338c:	ldr	r0, [fp, #-12]
   23390:	ldr	r0, [r0, #4]
   23394:	lsr	r0, r0, #1
   23398:	ldr	r1, [sp, #4]
   2339c:	cmp	r0, r1
   233a0:	bcc	233b0 <flatcc_builder_default_alloc@@Base+0x140>
   233a4:	movw	r0, #0
   233a8:	str	r0, [fp, #-4]
   233ac:	b	23448 <flatcc_builder_default_alloc@@Base+0x1d8>
   233b0:	ldr	r0, [fp, #-12]
   233b4:	ldr	r0, [r0]
   233b8:	ldr	r1, [sp, #4]
   233bc:	bl	12ac0 <realloc@plt>
   233c0:	str	r0, [sp, #8]
   233c4:	movw	r1, #0
   233c8:	cmp	r0, r1
   233cc:	bne	233dc <flatcc_builder_default_alloc@@Base+0x16c>
   233d0:	mvn	r0, #0
   233d4:	str	r0, [fp, #-4]
   233d8:	b	23448 <flatcc_builder_default_alloc@@Base+0x1d8>
   233dc:	ldr	r0, [sp, #12]
   233e0:	cmp	r0, #0
   233e4:	beq	23428 <flatcc_builder_default_alloc@@Base+0x1b8>
   233e8:	ldr	r0, [fp, #-12]
   233ec:	ldr	r0, [r0, #4]
   233f0:	ldr	r1, [sp, #4]
   233f4:	cmp	r0, r1
   233f8:	bcs	23428 <flatcc_builder_default_alloc@@Base+0x1b8>
   233fc:	ldr	r0, [sp, #8]
   23400:	ldr	r1, [fp, #-12]
   23404:	ldr	r1, [r1, #4]
   23408:	add	r0, r0, r1
   2340c:	ldr	r1, [sp, #4]
   23410:	ldr	r2, [fp, #-12]
   23414:	ldr	r2, [r2, #4]
   23418:	sub	r2, r1, r2
   2341c:	movw	r1, #0
   23420:	and	r1, r1, #255	; 0xff
   23424:	bl	12b2c <memset@plt>
   23428:	ldr	r0, [sp, #8]
   2342c:	ldr	r1, [fp, #-12]
   23430:	str	r0, [r1]
   23434:	ldr	r0, [sp, #4]
   23438:	ldr	r1, [fp, #-12]
   2343c:	str	r0, [r1, #4]
   23440:	movw	r0, #0
   23444:	str	r0, [fp, #-4]
   23448:	ldr	r0, [fp, #-4]
   2344c:	mov	sp, fp
   23450:	pop	{fp, pc}

00023454 <flatcc_builder_flush_vtable_cache@@Base>:
   23454:	push	{fp, lr}
   23458:	mov	fp, sp
   2345c:	sub	sp, sp, #8
   23460:	str	r0, [sp, #4]
   23464:	ldr	r0, [sp, #4]
   23468:	add	r0, r0, #52	; 0x34
   2346c:	add	r0, r0, #40	; 0x28
   23470:	str	r0, [sp]
   23474:	ldr	r0, [sp, #4]
   23478:	ldr	r0, [r0, #116]	; 0x74
   2347c:	cmp	r0, #0
   23480:	bne	23488 <flatcc_builder_flush_vtable_cache@@Base+0x34>
   23484:	b	234bc <flatcc_builder_flush_vtable_cache@@Base+0x68>
   23488:	ldr	r0, [sp]
   2348c:	ldr	r0, [r0]
   23490:	ldr	r1, [sp]
   23494:	ldr	r2, [r1, #4]
   23498:	movw	r1, #0
   2349c:	and	r1, r1, #255	; 0xff
   234a0:	bl	12b2c <memset@plt>
   234a4:	ldr	r0, [sp, #4]
   234a8:	movw	r1, #16
   234ac:	str	r1, [r0, #124]	; 0x7c
   234b0:	ldr	r0, [sp, #4]
   234b4:	movw	r1, #0
   234b8:	str	r1, [r0, #120]	; 0x78
   234bc:	mov	sp, fp
   234c0:	pop	{fp, pc}

000234c4 <flatcc_builder_custom_init@@Base>:
   234c4:	push	{fp, lr}
   234c8:	mov	fp, sp
   234cc:	sub	sp, sp, #24
   234d0:	ldr	ip, [fp, #8]
   234d4:	str	r0, [fp, #-4]
   234d8:	str	r1, [fp, #-8]
   234dc:	str	r2, [sp, #12]
   234e0:	str	r3, [sp, #8]
   234e4:	ldr	r0, [fp, #-4]
   234e8:	movw	r1, #0
   234ec:	and	r1, r1, #255	; 0xff
   234f0:	movw	r2, #232	; 0xe8
   234f4:	str	ip, [sp, #4]
   234f8:	bl	12b2c <memset@plt>
   234fc:	ldr	r0, [fp, #-8]
   23500:	movw	r1, #0
   23504:	cmp	r0, r1
   23508:	bne	23530 <flatcc_builder_custom_init@@Base+0x6c>
   2350c:	ldr	r0, [pc, #116]	; 23588 <flatcc_builder_custom_init@@Base+0xc4>
   23510:	ldr	r0, [pc, r0]
   23514:	ldr	r1, [fp, #-4]
   23518:	movw	r2, #1
   2351c:	str	r2, [r1, #184]	; 0xb8
   23520:	str	r0, [fp, #-8]
   23524:	ldr	r0, [fp, #-4]
   23528:	add	r0, r0, #188	; 0xbc
   2352c:	str	r0, [sp, #12]
   23530:	ldr	r0, [sp, #8]
   23534:	movw	r1, #0
   23538:	cmp	r0, r1
   2353c:	bne	2354c <flatcc_builder_custom_init@@Base+0x88>
   23540:	ldr	r0, [pc, #68]	; 2358c <flatcc_builder_custom_init@@Base+0xc8>
   23544:	ldr	r0, [pc, r0]
   23548:	str	r0, [sp, #8]
   2354c:	ldr	r0, [fp, #8]
   23550:	ldr	r1, [fp, #-4]
   23554:	str	r0, [r1, #40]	; 0x28
   23558:	ldr	r0, [sp, #8]
   2355c:	ldr	r1, [fp, #-4]
   23560:	str	r0, [r1, #48]	; 0x30
   23564:	ldr	r0, [sp, #12]
   23568:	ldr	r1, [fp, #-4]
   2356c:	str	r0, [r1, #36]	; 0x24
   23570:	ldr	r0, [fp, #-8]
   23574:	ldr	r1, [fp, #-4]
   23578:	str	r0, [r1, #44]	; 0x2c
   2357c:	movw	r0, #0
   23580:	mov	sp, fp
   23584:	pop	{fp, pc}
   23588:	andeq	r0, r2, r0, ror fp
   2358c:	andeq	r0, r2, r4, lsr fp

00023590 <flatcc_builder_init@@Base>:
   23590:	push	{fp, lr}
   23594:	mov	fp, sp
   23598:	sub	sp, sp, #16
   2359c:	str	r0, [fp, #-4]
   235a0:	ldr	r0, [fp, #-4]
   235a4:	movw	r1, #0
   235a8:	str	r1, [sp, #8]
   235ac:	ldr	r2, [sp, #8]
   235b0:	ldr	r3, [sp, #8]
   235b4:	ldr	ip, [sp, #8]
   235b8:	str	ip, [sp]
   235bc:	bl	234c4 <flatcc_builder_custom_init@@Base>
   235c0:	mov	sp, fp
   235c4:	pop	{fp, pc}

000235c8 <flatcc_builder_custom_reset@@Base>:
   235c8:	push	{r4, sl, fp, lr}
   235cc:	add	fp, sp, #8
   235d0:	sub	sp, sp, #40	; 0x28
   235d4:	str	r0, [fp, #-16]
   235d8:	str	r1, [fp, #-20]	; 0xffffffec
   235dc:	str	r2, [sp, #24]
   235e0:	movw	r0, #0
   235e4:	str	r0, [sp, #16]
   235e8:	ldr	r0, [sp, #16]
   235ec:	cmp	r0, #8
   235f0:	bge	236fc <flatcc_builder_custom_reset@@Base+0x134>
   235f4:	ldr	r0, [fp, #-16]
   235f8:	add	r0, r0, #52	; 0x34
   235fc:	ldr	r1, [sp, #16]
   23600:	add	r0, r0, r1, lsl #3
   23604:	str	r0, [sp, #20]
   23608:	ldr	r0, [sp, #20]
   2360c:	ldr	r0, [r0]
   23610:	movw	r1, #0
   23614:	cmp	r0, r1
   23618:	beq	236b0 <flatcc_builder_custom_reset@@Base+0xe8>
   2361c:	ldr	r0, [sp, #16]
   23620:	cmp	r0, #5
   23624:	beq	23690 <flatcc_builder_custom_reset@@Base+0xc8>
   23628:	ldr	r0, [sp, #24]
   2362c:	cmp	r0, #0
   23630:	beq	23690 <flatcc_builder_custom_reset@@Base+0xc8>
   23634:	ldr	r0, [fp, #-16]
   23638:	ldr	r0, [r0, #48]	; 0x30
   2363c:	ldr	r1, [fp, #-16]
   23640:	ldr	r1, [r1, #40]	; 0x28
   23644:	ldr	r2, [sp, #20]
   23648:	ldr	r3, [sp, #16]
   2364c:	str	r0, [sp, #12]
   23650:	mov	r0, r1
   23654:	mov	r1, r2
   23658:	movw	r2, #1
   2365c:	str	r2, [sp, #8]
   23660:	ldr	ip, [sp, #8]
   23664:	str	r3, [sp, #4]
   23668:	mov	r3, ip
   2366c:	ldr	lr, [sp, #4]
   23670:	str	lr, [sp]
   23674:	ldr	r4, [sp, #12]
   23678:	blx	r4
   2367c:	cmp	r0, #0
   23680:	beq	23690 <flatcc_builder_custom_reset@@Base+0xc8>
   23684:	mvn	r0, #0
   23688:	str	r0, [fp, #-12]
   2368c:	b	237f8 <flatcc_builder_custom_reset@@Base+0x230>
   23690:	ldr	r0, [sp, #20]
   23694:	ldr	r0, [r0]
   23698:	ldr	r1, [sp, #20]
   2369c:	ldr	r2, [r1, #4]
   236a0:	movw	r1, #0
   236a4:	and	r1, r1, #255	; 0xff
   236a8:	bl	12b2c <memset@plt>
   236ac:	b	236e8 <flatcc_builder_custom_reset@@Base+0x120>
   236b0:	ldr	r0, [sp, #20]
   236b4:	ldr	r0, [r0, #4]
   236b8:	cmp	r0, #0
   236bc:	bne	236c4 <flatcc_builder_custom_reset@@Base+0xfc>
   236c0:	b	236e4 <flatcc_builder_custom_reset@@Base+0x11c>
   236c4:	ldr	r0, [pc, #312]	; 23804 <flatcc_builder_custom_reset@@Base+0x23c>
   236c8:	add	r0, pc, r0
   236cc:	ldr	r1, [pc, #308]	; 23808 <flatcc_builder_custom_reset@@Base+0x240>
   236d0:	add	r1, pc, r1
   236d4:	ldr	r2, [pc, #304]	; 2380c <flatcc_builder_custom_reset@@Base+0x244>
   236d8:	add	r3, pc, r2
   236dc:	movw	r2, #434	; 0x1b2
   236e0:	bl	12b80 <__assert_fail@plt>
   236e4:	b	236e8 <flatcc_builder_custom_reset@@Base+0x120>
   236e8:	b	236ec <flatcc_builder_custom_reset@@Base+0x124>
   236ec:	ldr	r0, [sp, #16]
   236f0:	add	r0, r0, #1
   236f4:	str	r0, [sp, #16]
   236f8:	b	235e8 <flatcc_builder_custom_reset@@Base+0x20>
   236fc:	ldr	r0, [fp, #-16]
   23700:	movw	r1, #0
   23704:	str	r1, [r0, #120]	; 0x78
   23708:	ldr	r0, [fp, #-16]
   2370c:	ldr	r0, [r0, #124]	; 0x7c
   23710:	cmp	r0, #0
   23714:	bls	23724 <flatcc_builder_custom_reset@@Base+0x15c>
   23718:	ldr	r0, [fp, #-16]
   2371c:	movw	r1, #16
   23720:	str	r1, [r0, #124]	; 0x7c
   23724:	ldr	r0, [fp, #-16]
   23728:	movw	r1, #0
   2372c:	strh	r1, [r0, #128]	; 0x80
   23730:	ldr	r0, [fp, #-16]
   23734:	movw	r1, #0
   23738:	str	r1, [r0, #136]	; 0x88
   2373c:	ldr	r0, [fp, #-16]
   23740:	str	r1, [r0, #140]	; 0x8c
   23744:	ldr	r0, [fp, #-16]
   23748:	str	r1, [r0, #156]	; 0x9c
   2374c:	ldr	r0, [fp, #-16]
   23750:	str	r1, [r0, #160]	; 0xa0
   23754:	ldr	r0, [fp, #-16]
   23758:	str	r1, [r0, #20]
   2375c:	ldr	r0, [fp, #-16]
   23760:	str	r1, [r0, #24]
   23764:	ldr	r0, [fp, #-16]
   23768:	str	r1, [r0, #148]	; 0x94
   2376c:	ldr	r0, [fp, #-16]
   23770:	str	r1, [r0, #152]	; 0x98
   23774:	ldr	r0, [fp, #-16]
   23778:	ldr	r0, [r0, #60]	; 0x3c
   2377c:	ldr	r2, [fp, #-16]
   23780:	str	r0, [r2, #16]
   23784:	ldr	r0, [fp, #-16]
   23788:	ldr	r0, [r0, #76]	; 0x4c
   2378c:	ldr	r2, [fp, #-16]
   23790:	str	r0, [r2]
   23794:	ldr	r0, [fp, #-16]
   23798:	ldr	r0, [r0, #52]	; 0x34
   2379c:	ldr	r2, [fp, #-16]
   237a0:	str	r0, [r2, #4]
   237a4:	ldr	r0, [fp, #-16]
   237a8:	str	r1, [r0, #32]
   237ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   237b0:	cmp	r0, #0
   237b4:	beq	237d4 <flatcc_builder_custom_reset@@Base+0x20c>
   237b8:	ldr	r0, [fp, #-16]
   237bc:	movw	r1, #0
   237c0:	str	r1, [r0, #172]	; 0xac
   237c4:	ldr	r0, [fp, #-16]
   237c8:	str	r1, [r0, #176]	; 0xb0
   237cc:	ldr	r0, [fp, #-16]
   237d0:	str	r1, [r0, #180]	; 0xb4
   237d4:	ldr	r0, [fp, #-16]
   237d8:	ldr	r0, [r0, #184]	; 0xb8
   237dc:	cmp	r0, #0
   237e0:	beq	237f0 <flatcc_builder_custom_reset@@Base+0x228>
   237e4:	ldr	r0, [fp, #-16]
   237e8:	add	r0, r0, #188	; 0xbc
   237ec:	bl	29178 <flatcc_emitter_reset@@Base>
   237f0:	movw	r0, #0
   237f4:	str	r0, [fp, #-12]
   237f8:	ldr	r0, [fp, #-12]
   237fc:	sub	sp, fp, #8
   23800:	pop	{r4, sl, fp, pc}
   23804:			; <UNDEFINED> instruction: 0x0000dabc
   23808:	andeq	sp, r0, r6, asr #21
   2380c:	andeq	sp, r0, fp, lsl fp

00023810 <flatcc_builder_reset@@Base>:
   23810:	push	{fp, lr}
   23814:	mov	fp, sp
   23818:	sub	sp, sp, #8
   2381c:	str	r0, [sp, #4]
   23820:	ldr	r0, [sp, #4]
   23824:	movw	r1, #0
   23828:	str	r1, [sp]
   2382c:	ldr	r2, [sp]
   23830:	bl	235c8 <flatcc_builder_custom_reset@@Base>
   23834:	mov	sp, fp
   23838:	pop	{fp, pc}

0002383c <flatcc_builder_clear@@Base>:
   2383c:	push	{r4, sl, fp, lr}
   23840:	add	fp, sp, #8
   23844:	sub	sp, sp, #32
   23848:	str	r0, [fp, #-12]
   2384c:	movw	r0, #0
   23850:	str	r0, [sp, #20]
   23854:	ldr	r0, [sp, #20]
   23858:	cmp	r0, #8
   2385c:	bge	238cc <flatcc_builder_clear@@Base+0x90>
   23860:	ldr	r0, [fp, #-12]
   23864:	add	r0, r0, #52	; 0x34
   23868:	ldr	r1, [sp, #20]
   2386c:	add	r0, r0, r1, lsl #3
   23870:	str	r0, [fp, #-16]
   23874:	ldr	r0, [fp, #-12]
   23878:	ldr	r0, [r0, #48]	; 0x30
   2387c:	ldr	r1, [fp, #-12]
   23880:	ldr	r1, [r1, #40]	; 0x28
   23884:	ldr	r2, [fp, #-16]
   23888:	ldr	r3, [sp, #20]
   2388c:	str	r0, [sp, #16]
   23890:	mov	r0, r1
   23894:	mov	r1, r2
   23898:	movw	r2, #0
   2389c:	str	r2, [sp, #12]
   238a0:	ldr	ip, [sp, #12]
   238a4:	str	r3, [sp, #8]
   238a8:	mov	r3, ip
   238ac:	ldr	lr, [sp, #8]
   238b0:	str	lr, [sp]
   238b4:	ldr	r4, [sp, #16]
   238b8:	blx	r4
   238bc:	ldr	r0, [sp, #20]
   238c0:	add	r0, r0, #1
   238c4:	str	r0, [sp, #20]
   238c8:	b	23854 <flatcc_builder_clear@@Base+0x18>
   238cc:	ldr	r0, [fp, #-12]
   238d0:	ldr	r0, [r0, #184]	; 0xb8
   238d4:	cmp	r0, #0
   238d8:	beq	238e8 <flatcc_builder_clear@@Base+0xac>
   238dc:	ldr	r0, [fp, #-12]
   238e0:	add	r0, r0, #188	; 0xbc
   238e4:	bl	29310 <flatcc_emitter_clear@@Base>
   238e8:	ldr	r0, [fp, #-12]
   238ec:	movw	r1, #0
   238f0:	and	r1, r1, #255	; 0xff
   238f4:	movw	r2, #232	; 0xe8
   238f8:	bl	12b2c <memset@plt>
   238fc:	sub	sp, fp, #8
   23900:	pop	{r4, sl, fp, pc}

00023904 <flatcc_builder_enter_user_frame_ptr@@Base>:
   23904:	push	{fp, lr}
   23908:	mov	fp, sp
   2390c:	sub	sp, sp, #24
   23910:	str	r0, [fp, #-8]
   23914:	str	r1, [sp, #12]
   23918:	ldr	r0, [sp, #12]
   2391c:	add	r0, r0, #4
   23920:	sub	r0, r0, #1
   23924:	mvn	r1, #3
   23928:	and	r0, r0, r1
   2392c:	add	r0, r0, #4
   23930:	str	r0, [sp, #12]
   23934:	ldr	r0, [fp, #-8]
   23938:	ldr	r1, [fp, #-8]
   2393c:	ldr	r2, [r1, #228]	; 0xe4
   23940:	ldr	r3, [sp, #12]
   23944:	movw	r1, #7
   23948:	movw	ip, #0
   2394c:	str	ip, [sp]
   23950:	bl	239d8 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   23954:	str	r0, [sp, #8]
   23958:	movw	r1, #0
   2395c:	cmp	r0, r1
   23960:	bne	23970 <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   23964:	movw	r0, #0
   23968:	str	r0, [fp, #-4]
   2396c:	b	239cc <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   23970:	ldr	r0, [sp, #8]
   23974:	ldr	r2, [sp, #12]
   23978:	movw	r1, #0
   2397c:	and	r1, r1, #255	; 0xff
   23980:	bl	12b2c <memset@plt>
   23984:	ldr	r0, [fp, #-8]
   23988:	ldr	r0, [r0, #224]	; 0xe0
   2398c:	ldr	r1, [sp, #8]
   23990:	add	r2, r1, #4
   23994:	str	r2, [sp, #8]
   23998:	str	r0, [r1]
   2399c:	ldr	r0, [fp, #-8]
   239a0:	ldr	r0, [r0, #228]	; 0xe4
   239a4:	add	r0, r0, #4
   239a8:	ldr	r1, [fp, #-8]
   239ac:	str	r0, [r1, #224]	; 0xe0
   239b0:	ldr	r0, [sp, #12]
   239b4:	ldr	r1, [fp, #-8]
   239b8:	ldr	r2, [r1, #228]	; 0xe4
   239bc:	add	r0, r2, r0
   239c0:	str	r0, [r1, #228]	; 0xe4
   239c4:	ldr	r0, [sp, #8]
   239c8:	str	r0, [fp, #-4]
   239cc:	ldr	r0, [fp, #-4]
   239d0:	mov	sp, fp
   239d4:	pop	{fp, pc}
   239d8:	push	{fp, lr}
   239dc:	mov	fp, sp
   239e0:	sub	sp, sp, #32
   239e4:	ldr	ip, [fp, #8]
   239e8:	str	r0, [fp, #-4]
   239ec:	str	r1, [fp, #-8]
   239f0:	str	r2, [fp, #-12]
   239f4:	str	r3, [sp, #16]
   239f8:	ldr	r0, [fp, #-4]
   239fc:	add	r0, r0, #52	; 0x34
   23a00:	ldr	r1, [fp, #-8]
   23a04:	add	r0, r0, r1, lsl #3
   23a08:	str	r0, [sp, #12]
   23a0c:	ldr	r0, [fp, #-12]
   23a10:	ldr	r1, [sp, #16]
   23a14:	add	r0, r0, r1
   23a18:	ldr	r1, [sp, #12]
   23a1c:	ldr	r1, [r1, #4]
   23a20:	cmp	r0, r1
   23a24:	bls	23a9c <flatcc_builder_enter_user_frame_ptr@@Base+0x198>
   23a28:	ldr	r0, [fp, #-4]
   23a2c:	ldr	r0, [r0, #48]	; 0x30
   23a30:	ldr	r1, [fp, #-4]
   23a34:	ldr	r1, [r1, #40]	; 0x28
   23a38:	ldr	r2, [sp, #12]
   23a3c:	ldr	r3, [fp, #-12]
   23a40:	ldr	ip, [sp, #16]
   23a44:	add	r3, r3, ip
   23a48:	ldr	ip, [fp, #8]
   23a4c:	ldr	lr, [fp, #-8]
   23a50:	str	r0, [sp, #8]
   23a54:	mov	r0, r1
   23a58:	mov	r1, r2
   23a5c:	mov	r2, r3
   23a60:	mov	r3, ip
   23a64:	str	lr, [sp]
   23a68:	ldr	ip, [sp, #8]
   23a6c:	blx	ip
   23a70:	cmp	r0, #0
   23a74:	beq	23a98 <flatcc_builder_enter_user_frame_ptr@@Base+0x194>
   23a78:	ldr	r0, [pc, #52]	; 23ab4 <flatcc_builder_enter_user_frame_ptr@@Base+0x1b0>
   23a7c:	add	r0, pc, r0
   23a80:	ldr	r1, [pc, #48]	; 23ab8 <flatcc_builder_enter_user_frame_ptr@@Base+0x1b4>
   23a84:	add	r1, pc, r1
   23a88:	ldr	r2, [pc, #44]	; 23abc <flatcc_builder_enter_user_frame_ptr@@Base+0x1b8>
   23a8c:	add	r3, pc, r2
   23a90:	movw	r2, #308	; 0x134
   23a94:	bl	12b80 <__assert_fail@plt>
   23a98:	b	23a9c <flatcc_builder_enter_user_frame_ptr@@Base+0x198>
   23a9c:	ldr	r0, [sp, #12]
   23aa0:	ldr	r0, [r0]
   23aa4:	ldr	r1, [fp, #-12]
   23aa8:	add	r0, r0, r1
   23aac:	mov	sp, fp
   23ab0:	pop	{fp, pc}
   23ab4:	ldrdeq	lr, [r0], -r7
   23ab8:	andeq	sp, r0, r2, lsl r7
   23abc:	andeq	lr, r0, r1, lsl #14

00023ac0 <flatcc_builder_enter_user_frame@@Base>:
   23ac0:	push	{fp, lr}
   23ac4:	mov	fp, sp
   23ac8:	sub	sp, sp, #24
   23acc:	str	r0, [fp, #-8]
   23ad0:	str	r1, [sp, #12]
   23ad4:	ldr	r0, [sp, #12]
   23ad8:	add	r0, r0, #4
   23adc:	sub	r0, r0, #1
   23ae0:	mvn	r1, #3
   23ae4:	and	r0, r0, r1
   23ae8:	add	r0, r0, #4
   23aec:	str	r0, [sp, #12]
   23af0:	ldr	r0, [fp, #-8]
   23af4:	ldr	r1, [fp, #-8]
   23af8:	ldr	r2, [r1, #228]	; 0xe4
   23afc:	ldr	r3, [sp, #12]
   23b00:	movw	r1, #7
   23b04:	movw	ip, #0
   23b08:	str	ip, [sp]
   23b0c:	bl	239d8 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   23b10:	str	r0, [sp, #8]
   23b14:	movw	r1, #0
   23b18:	cmp	r0, r1
   23b1c:	bne	23b2c <flatcc_builder_enter_user_frame@@Base+0x6c>
   23b20:	movw	r0, #0
   23b24:	str	r0, [fp, #-4]
   23b28:	b	23b8c <flatcc_builder_enter_user_frame@@Base+0xcc>
   23b2c:	ldr	r0, [sp, #8]
   23b30:	ldr	r2, [sp, #12]
   23b34:	movw	r1, #0
   23b38:	and	r1, r1, #255	; 0xff
   23b3c:	bl	12b2c <memset@plt>
   23b40:	ldr	r0, [fp, #-8]
   23b44:	ldr	r0, [r0, #224]	; 0xe0
   23b48:	ldr	r1, [sp, #8]
   23b4c:	add	r2, r1, #4
   23b50:	str	r2, [sp, #8]
   23b54:	str	r0, [r1]
   23b58:	ldr	r0, [fp, #-8]
   23b5c:	ldr	r0, [r0, #228]	; 0xe4
   23b60:	add	r0, r0, #4
   23b64:	ldr	r1, [fp, #-8]
   23b68:	str	r0, [r1, #224]	; 0xe0
   23b6c:	ldr	r0, [sp, #12]
   23b70:	ldr	r1, [fp, #-8]
   23b74:	ldr	r2, [r1, #228]	; 0xe4
   23b78:	add	r0, r2, r0
   23b7c:	str	r0, [r1, #228]	; 0xe4
   23b80:	ldr	r0, [fp, #-8]
   23b84:	ldr	r0, [r0, #224]	; 0xe0
   23b88:	str	r0, [fp, #-4]
   23b8c:	ldr	r0, [fp, #-4]
   23b90:	mov	sp, fp
   23b94:	pop	{fp, pc}

00023b98 <flatcc_builder_exit_user_frame@@Base>:
   23b98:	push	{fp, lr}
   23b9c:	mov	fp, sp
   23ba0:	sub	sp, sp, #8
   23ba4:	str	r0, [sp, #4]
   23ba8:	ldr	r0, [sp, #4]
   23bac:	ldr	r0, [r0, #224]	; 0xe0
   23bb0:	cmp	r0, #0
   23bb4:	bls	23bbc <flatcc_builder_exit_user_frame@@Base+0x24>
   23bb8:	b	23bdc <flatcc_builder_exit_user_frame@@Base+0x44>
   23bbc:	ldr	r0, [pc, #100]	; 23c28 <flatcc_builder_exit_user_frame@@Base+0x90>
   23bc0:	add	r0, pc, r0
   23bc4:	ldr	r1, [pc, #96]	; 23c2c <flatcc_builder_exit_user_frame@@Base+0x94>
   23bc8:	add	r1, pc, r1
   23bcc:	ldr	r2, [pc, #92]	; 23c30 <flatcc_builder_exit_user_frame@@Base+0x98>
   23bd0:	add	r3, pc, r2
   23bd4:	movw	r2, #542	; 0x21e
   23bd8:	bl	12b80 <__assert_fail@plt>
   23bdc:	ldr	r0, [sp, #4]
   23be0:	ldr	r0, [r0, #108]	; 0x6c
   23be4:	ldr	r1, [sp, #4]
   23be8:	ldr	r1, [r1, #224]	; 0xe0
   23bec:	add	r0, r0, r1
   23bf0:	str	r0, [sp]
   23bf4:	ldr	r0, [sp, #4]
   23bf8:	ldr	r0, [r0, #224]	; 0xe0
   23bfc:	sub	r0, r0, #4
   23c00:	ldr	r1, [sp, #4]
   23c04:	str	r0, [r1, #228]	; 0xe4
   23c08:	ldr	r0, [sp]
   23c0c:	mvn	r1, #3
   23c10:	add	r0, r0, r1
   23c14:	ldr	r0, [r0]
   23c18:	ldr	r1, [sp, #4]
   23c1c:	str	r0, [r1, #224]	; 0xe0
   23c20:	mov	sp, fp
   23c24:	pop	{fp, pc}
   23c28:	andeq	sp, r0, r1, ror r6
   23c2c:	andeq	sp, r0, lr, asr #11
   23c30:	andeq	sp, r0, sl, ror r6

00023c34 <flatcc_builder_exit_user_frame_at@@Base>:
   23c34:	push	{fp, lr}
   23c38:	mov	fp, sp
   23c3c:	sub	sp, sp, #8
   23c40:	str	r0, [sp, #4]
   23c44:	str	r1, [sp]
   23c48:	ldr	r0, [sp, #4]
   23c4c:	ldr	r0, [r0, #224]	; 0xe0
   23c50:	ldr	r1, [sp]
   23c54:	cmp	r0, r1
   23c58:	bcc	23c60 <flatcc_builder_exit_user_frame_at@@Base+0x2c>
   23c5c:	b	23c80 <flatcc_builder_exit_user_frame_at@@Base+0x4c>
   23c60:	ldr	r0, [pc, #52]	; 23c9c <flatcc_builder_exit_user_frame_at@@Base+0x68>
   23c64:	add	r0, pc, r0
   23c68:	ldr	r1, [pc, #48]	; 23ca0 <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   23c6c:	add	r1, pc, r1
   23c70:	ldr	r2, [pc, #44]	; 23ca4 <flatcc_builder_exit_user_frame_at@@Base+0x70>
   23c74:	add	r3, pc, r2
   23c78:	movw	r2, #551	; 0x227
   23c7c:	bl	12b80 <__assert_fail@plt>
   23c80:	ldr	r0, [sp]
   23c84:	ldr	r1, [sp, #4]
   23c88:	str	r0, [r1, #224]	; 0xe0
   23c8c:	ldr	r0, [sp, #4]
   23c90:	bl	23b98 <flatcc_builder_exit_user_frame@@Base>
   23c94:	mov	sp, fp
   23c98:	pop	{fp, pc}
   23c9c:	andeq	sp, r0, r0, lsr #12
   23ca0:	andeq	sp, r0, sl, lsr #10
   23ca4:	andeq	sp, r0, pc, lsr #12

00023ca8 <flatcc_builder_get_current_user_frame@@Base>:
   23ca8:	sub	sp, sp, #4
   23cac:	str	r0, [sp]
   23cb0:	ldr	r0, [sp]
   23cb4:	ldr	r0, [r0, #224]	; 0xe0
   23cb8:	add	sp, sp, #4
   23cbc:	bx	lr

00023cc0 <flatcc_builder_get_user_frame_ptr@@Base>:
   23cc0:	sub	sp, sp, #8
   23cc4:	str	r0, [sp, #4]
   23cc8:	str	r1, [sp]
   23ccc:	ldr	r0, [sp, #4]
   23cd0:	ldr	r0, [r0, #108]	; 0x6c
   23cd4:	ldr	r1, [sp]
   23cd8:	add	r0, r0, r1
   23cdc:	add	sp, sp, #8
   23ce0:	bx	lr

00023ce4 <flatcc_builder_embed_buffer@@Base>:
   23ce4:	push	{fp, lr}
   23ce8:	mov	fp, sp
   23cec:	sub	sp, sp, #120	; 0x78
   23cf0:	ldr	ip, [fp, #12]
   23cf4:	ldr	lr, [fp, #8]
   23cf8:	str	r0, [fp, #-8]
   23cfc:	strh	r1, [fp, #-10]
   23d00:	str	r2, [fp, #-16]
   23d04:	str	r3, [fp, #-20]	; 0xffffffec
   23d08:	strh	lr, [fp, #-22]	; 0xffffffea
   23d0c:	ldr	r0, [fp, #12]
   23d10:	and	r0, r0, #2
   23d14:	str	r0, [sp, #12]
   23d18:	ldr	r0, [fp, #-8]
   23d1c:	ldrh	r1, [fp, #-10]
   23d20:	ldr	r2, [fp, #-8]
   23d24:	ldr	r2, [r2, #152]	; 0x98
   23d28:	cmp	r2, #0
   23d2c:	movw	r2, #0
   23d30:	moveq	r2, #1
   23d34:	mvn	r3, #0
   23d38:	eor	r2, r2, r3
   23d3c:	and	r3, r2, #1
   23d40:	sub	r2, fp, #22
   23d44:	str	r1, [sp, #8]
   23d48:	mov	r1, r2
   23d4c:	ldr	r2, [sp, #8]
   23d50:	uxth	r2, r2
   23d54:	str	ip, [sp, #4]
   23d58:	bl	23ecc <flatcc_builder_embed_buffer@@Base+0x1e8>
   23d5c:	cmp	r0, #0
   23d60:	beq	23d70 <flatcc_builder_embed_buffer@@Base+0x8c>
   23d64:	movw	r0, #0
   23d68:	str	r0, [fp, #-4]
   23d6c:	b	23ebc <flatcc_builder_embed_buffer@@Base+0x1d8>
   23d70:	ldr	r0, [fp, #-8]
   23d74:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d78:	ldr	r2, [sp, #12]
   23d7c:	cmp	r2, #0
   23d80:	movw	r2, #0
   23d84:	movne	r2, #1
   23d88:	tst	r2, #1
   23d8c:	movw	r2, #4
   23d90:	moveq	r2, #0
   23d94:	add	r1, r1, r2
   23d98:	ldrh	r2, [fp, #-22]	; 0xffffffea
   23d9c:	bl	24038 <flatcc_builder_embed_buffer@@Base+0x354>
   23da0:	str	r0, [fp, #-32]	; 0xffffffe0
   23da4:	ldr	r0, [fp, #-20]	; 0xffffffec
   23da8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   23dac:	add	r0, r0, r1
   23db0:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   23db4:	str	r0, [fp, #-28]	; 0xffffffe4
   23db8:	movw	r0, #0
   23dbc:	str	r0, [sp, #16]
   23dc0:	str	r0, [sp, #20]
   23dc4:	ldr	r0, [fp, #-8]
   23dc8:	ldr	r0, [r0, #152]	; 0x98
   23dcc:	cmp	r0, #0
   23dd0:	beq	23e10 <flatcc_builder_embed_buffer@@Base+0x12c>
   23dd4:	ldr	r0, [sp, #16]
   23dd8:	add	r0, r0, #4
   23ddc:	str	r0, [sp, #16]
   23de0:	add	r0, sp, #16
   23de4:	add	r0, r0, #8
   23de8:	ldr	r1, [sp, #20]
   23dec:	sub	r2, fp, #28
   23df0:	str	r2, [r0, r1, lsl #3]
   23df4:	ldr	r1, [sp, #20]
   23df8:	add	r0, r0, r1, lsl #3
   23dfc:	movw	r1, #4
   23e00:	str	r1, [r0, #4]
   23e04:	ldr	r0, [sp, #20]
   23e08:	add	r0, r0, #1
   23e0c:	str	r0, [sp, #20]
   23e10:	ldr	r0, [fp, #-20]	; 0xffffffec
   23e14:	cmp	r0, #0
   23e18:	bls	23e5c <flatcc_builder_embed_buffer@@Base+0x178>
   23e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23e20:	ldr	r1, [sp, #16]
   23e24:	add	r0, r1, r0
   23e28:	str	r0, [sp, #16]
   23e2c:	ldr	r0, [fp, #-16]
   23e30:	add	r1, sp, #16
   23e34:	add	r1, r1, #8
   23e38:	ldr	r2, [sp, #20]
   23e3c:	str	r0, [r1, r2, lsl #3]
   23e40:	ldr	r0, [fp, #-20]	; 0xffffffec
   23e44:	ldr	r2, [sp, #20]
   23e48:	add	r1, r1, r2, lsl #3
   23e4c:	str	r0, [r1, #4]
   23e50:	ldr	r0, [sp, #20]
   23e54:	add	r0, r0, #1
   23e58:	str	r0, [sp, #20]
   23e5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23e60:	cmp	r0, #0
   23e64:	bls	23eac <flatcc_builder_embed_buffer@@Base+0x1c8>
   23e68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23e6c:	ldr	r1, [sp, #16]
   23e70:	add	r0, r1, r0
   23e74:	str	r0, [sp, #16]
   23e78:	add	r0, sp, #16
   23e7c:	add	r0, r0, #8
   23e80:	ldr	r1, [sp, #20]
   23e84:	ldr	r2, [pc, #60]	; 23ec8 <flatcc_builder_embed_buffer@@Base+0x1e4>
   23e88:	ldr	r2, [pc, r2]
   23e8c:	str	r2, [r0, r1, lsl #3]
   23e90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   23e94:	ldr	r2, [sp, #20]
   23e98:	add	r0, r0, r2, lsl #3
   23e9c:	str	r1, [r0, #4]
   23ea0:	ldr	r0, [sp, #20]
   23ea4:	add	r0, r0, #1
   23ea8:	str	r0, [sp, #20]
   23eac:	ldr	r0, [fp, #-8]
   23eb0:	add	r1, sp, #16
   23eb4:	bl	24080 <flatcc_builder_embed_buffer@@Base+0x39c>
   23eb8:	str	r0, [fp, #-4]
   23ebc:	ldr	r0, [fp, #-4]
   23ec0:	mov	sp, fp
   23ec4:	pop	{fp, pc}
   23ec8:	andeq	r0, r2, r0, ror #3
   23ecc:	push	{fp, lr}
   23ed0:	mov	fp, sp
   23ed4:	sub	sp, sp, #104	; 0x68
   23ed8:	str	r0, [fp, #-4]
   23edc:	str	r1, [fp, #-8]
   23ee0:	strh	r2, [fp, #-10]
   23ee4:	str	r3, [fp, #-16]
   23ee8:	ldrh	r0, [fp, #-10]
   23eec:	cmp	r0, #0
   23ef0:	beq	23f00 <flatcc_builder_embed_buffer@@Base+0x21c>
   23ef4:	ldrh	r0, [fp, #-10]
   23ef8:	str	r0, [sp, #8]
   23efc:	b	23f34 <flatcc_builder_embed_buffer@@Base+0x250>
   23f00:	ldr	r0, [fp, #-4]
   23f04:	ldrh	r0, [r0, #132]	; 0x84
   23f08:	cmp	r0, #0
   23f0c:	beq	23f20 <flatcc_builder_embed_buffer@@Base+0x23c>
   23f10:	ldr	r0, [fp, #-4]
   23f14:	ldrh	r0, [r0, #132]	; 0x84
   23f18:	str	r0, [sp, #4]
   23f1c:	b	23f2c <flatcc_builder_embed_buffer@@Base+0x248>
   23f20:	movw	r0, #1
   23f24:	str	r0, [sp, #4]
   23f28:	b	23f2c <flatcc_builder_embed_buffer@@Base+0x248>
   23f2c:	ldr	r0, [sp, #4]
   23f30:	str	r0, [sp, #8]
   23f34:	ldr	r0, [sp, #8]
   23f38:	strh	r0, [fp, #-10]
   23f3c:	ldr	r0, [fp, #-8]
   23f40:	movw	r1, #4
   23f44:	uxth	r1, r1
   23f48:	bl	25a2c <flatcc_builder_start_vector@@Base+0xac>
   23f4c:	ldr	r0, [fp, #-8]
   23f50:	ldrh	r1, [fp, #-10]
   23f54:	bl	25a2c <flatcc_builder_start_vector@@Base+0xac>
   23f58:	ldr	r0, [fp, #-16]
   23f5c:	cmp	r0, #0
   23f60:	bne	2401c <flatcc_builder_embed_buffer@@Base+0x338>
   23f64:	ldr	r0, [fp, #-4]
   23f68:	ldrh	r1, [fp, #-10]
   23f6c:	bl	28e60 <flatcc_builder_get_emit_context@@Base+0x18>
   23f70:	str	r0, [fp, #-20]	; 0xffffffec
   23f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   23f78:	cmp	r0, #0
   23f7c:	beq	24018 <flatcc_builder_embed_buffer@@Base+0x334>
   23f80:	movw	r0, #0
   23f84:	str	r0, [sp, #12]
   23f88:	str	r0, [sp, #16]
   23f8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23f90:	cmp	r0, #0
   23f94:	bls	23fdc <flatcc_builder_embed_buffer@@Base+0x2f8>
   23f98:	ldr	r0, [fp, #-20]	; 0xffffffec
   23f9c:	ldr	r1, [sp, #12]
   23fa0:	add	r0, r1, r0
   23fa4:	str	r0, [sp, #12]
   23fa8:	add	r0, sp, #12
   23fac:	add	r0, r0, #8
   23fb0:	ldr	r1, [sp, #16]
   23fb4:	ldr	r2, [pc, #120]	; 24034 <flatcc_builder_embed_buffer@@Base+0x350>
   23fb8:	ldr	r2, [pc, r2]
   23fbc:	str	r2, [r0, r1, lsl #3]
   23fc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23fc4:	ldr	r2, [sp, #16]
   23fc8:	add	r0, r0, r2, lsl #3
   23fcc:	str	r1, [r0, #4]
   23fd0:	ldr	r0, [sp, #16]
   23fd4:	add	r0, r0, #1
   23fd8:	str	r0, [sp, #16]
   23fdc:	ldr	r0, [fp, #-4]
   23fe0:	add	r1, sp, #12
   23fe4:	bl	26010 <flatcc_builder_create_vtable@@Base+0x104>
   23fe8:	movw	r1, #0
   23fec:	cmp	r1, r0
   23ff0:	bne	24014 <flatcc_builder_embed_buffer@@Base+0x330>
   23ff4:	ldr	r0, [pc, #44]	; 24028 <flatcc_builder_embed_buffer@@Base+0x344>
   23ff8:	add	r0, pc, r0
   23ffc:	ldr	r1, [pc, #40]	; 2402c <flatcc_builder_embed_buffer@@Base+0x348>
   24000:	add	r1, pc, r1
   24004:	ldr	r2, [pc, #36]	; 24030 <flatcc_builder_embed_buffer@@Base+0x34c>
   24008:	add	r3, pc, r2
   2400c:	movw	r2, #702	; 0x2be
   24010:	bl	12b80 <__assert_fail@plt>
   24014:	b	24018 <flatcc_builder_embed_buffer@@Base+0x334>
   24018:	b	2401c <flatcc_builder_embed_buffer@@Base+0x338>
   2401c:	movw	r0, #0
   24020:	mov	sp, fp
   24024:	pop	{fp, pc}
   24028:	andeq	lr, r0, fp, asr r3
   2402c:	muleq	r0, r6, r1
   24030:	andeq	lr, r0, r8, asr #3
   24034:	strheq	r0, [r2], -r0	; <UNPREDICTABLE>
   24038:	sub	sp, sp, #12
   2403c:	str	r0, [sp, #8]
   24040:	str	r1, [sp, #4]
   24044:	strh	r2, [sp, #2]
   24048:	ldr	r0, [sp, #8]
   2404c:	ldr	r0, [r0, #136]	; 0x88
   24050:	ldr	r1, [sp, #4]
   24054:	sub	r0, r0, r1
   24058:	ldrh	r1, [sp, #2]
   2405c:	sub	r1, r1, #1
   24060:	and	r0, r0, r1
   24064:	add	sp, sp, #12
   24068:	bx	lr
   2406c:	sub	sp, sp, #4
   24070:	str	r0, [sp]
   24074:	ldr	r0, [sp]
   24078:	add	sp, sp, #4
   2407c:	bx	lr
   24080:	push	{fp, lr}
   24084:	mov	fp, sp
   24088:	sub	sp, sp, #24
   2408c:	str	r0, [fp, #-4]
   24090:	str	r1, [fp, #-8]
   24094:	ldr	r0, [fp, #-4]
   24098:	ldr	r0, [r0, #136]	; 0x88
   2409c:	ldr	r1, [fp, #-8]
   240a0:	ldr	r1, [r1]
   240a4:	sub	r0, r0, r1
   240a8:	str	r0, [sp, #12]
   240ac:	ldr	r0, [fp, #-8]
   240b0:	ldr	r0, [r0]
   240b4:	cmp	r0, #16
   240b8:	bls	240d0 <flatcc_builder_embed_buffer@@Base+0x3ec>
   240bc:	ldr	r0, [fp, #-8]
   240c0:	ldr	r0, [r0]
   240c4:	sub	r0, r0, #16
   240c8:	cmn	r0, #1
   240cc:	bhi	240e4 <flatcc_builder_embed_buffer@@Base+0x400>
   240d0:	ldr	r0, [sp, #12]
   240d4:	ldr	r1, [fp, #-4]
   240d8:	ldr	r1, [r1, #136]	; 0x88
   240dc:	cmp	r0, r1
   240e0:	blt	24104 <flatcc_builder_embed_buffer@@Base+0x420>
   240e4:	ldr	r0, [pc, #172]	; 24198 <flatcc_builder_embed_buffer@@Base+0x4b4>
   240e8:	add	r0, pc, r0
   240ec:	ldr	r1, [pc, #168]	; 2419c <flatcc_builder_embed_buffer@@Base+0x4b8>
   240f0:	add	r1, pc, r1
   240f4:	ldr	r2, [pc, #164]	; 241a0 <flatcc_builder_embed_buffer@@Base+0x4bc>
   240f8:	add	r3, pc, r2
   240fc:	movw	r2, #647	; 0x287
   24100:	bl	12b80 <__assert_fail@plt>
   24104:	ldr	r0, [fp, #-4]
   24108:	ldr	r0, [r0, #44]	; 0x2c
   2410c:	ldr	r1, [fp, #-4]
   24110:	ldr	r1, [r1, #36]	; 0x24
   24114:	ldr	r2, [fp, #-8]
   24118:	add	r2, r2, #8
   2411c:	ldr	r3, [fp, #-8]
   24120:	ldr	r3, [r3, #4]
   24124:	ldr	ip, [sp, #12]
   24128:	ldr	lr, [fp, #-8]
   2412c:	ldr	lr, [lr]
   24130:	str	r0, [sp, #8]
   24134:	mov	r0, r1
   24138:	mov	r1, r2
   2413c:	mov	r2, r3
   24140:	mov	r3, ip
   24144:	str	lr, [sp]
   24148:	ldr	ip, [sp, #8]
   2414c:	blx	ip
   24150:	cmp	r0, #0
   24154:	beq	24178 <flatcc_builder_embed_buffer@@Base+0x494>
   24158:	ldr	r0, [pc, #44]	; 2418c <flatcc_builder_embed_buffer@@Base+0x4a8>
   2415c:	add	r0, pc, r0
   24160:	ldr	r1, [pc, #40]	; 24190 <flatcc_builder_embed_buffer@@Base+0x4ac>
   24164:	add	r1, pc, r1
   24168:	ldr	r2, [pc, #36]	; 24194 <flatcc_builder_embed_buffer@@Base+0x4b0>
   2416c:	add	r3, pc, r2
   24170:	movw	r2, #651	; 0x28b
   24174:	bl	12b80 <__assert_fail@plt>
   24178:	ldr	r0, [sp, #12]
   2417c:	ldr	r1, [fp, #-4]
   24180:	str	r0, [r1, #136]	; 0x88
   24184:	mov	sp, fp
   24188:	pop	{fp, pc}
   2418c:	strdeq	lr, [r0], -r7
   24190:	andeq	sp, r0, r2, lsr r0
   24194:	andeq	lr, r0, r6, lsr #1
   24198:	andeq	lr, r0, fp, ror #4
   2419c:	andeq	sp, r0, r6, lsr #1
   241a0:	andeq	lr, r0, sl, lsl r1

000241a4 <flatcc_builder_create_buffer@@Base>:
   241a4:	push	{fp, lr}
   241a8:	mov	fp, sp
   241ac:	sub	sp, sp, #152	; 0x98
   241b0:	ldr	ip, [fp, #12]
   241b4:	ldr	lr, [fp, #8]
   241b8:	str	r0, [fp, #-8]
   241bc:	str	r1, [fp, #-12]
   241c0:	strh	r2, [fp, #-14]
   241c4:	str	r3, [fp, #-20]	; 0xffffffec
   241c8:	strh	lr, [fp, #-22]	; 0xffffffea
   241cc:	movw	r0, #0
   241d0:	str	r0, [fp, #-36]	; 0xffffffdc
   241d4:	str	r0, [sp, #28]
   241d8:	ldr	r0, [fp, #12]
   241dc:	and	r0, r0, #1
   241e0:	cmp	r0, #0
   241e4:	movw	r0, #0
   241e8:	movne	r0, #1
   241ec:	and	r0, r0, #1
   241f0:	str	r0, [sp, #24]
   241f4:	ldr	r0, [fp, #12]
   241f8:	and	r0, r0, #2
   241fc:	cmp	r0, #0
   24200:	movw	r0, #0
   24204:	movne	r0, #1
   24208:	and	r0, r0, #1
   2420c:	str	r0, [sp, #20]
   24210:	ldr	r0, [fp, #-8]
   24214:	ldrh	r1, [fp, #-14]
   24218:	ldr	r3, [sp, #24]
   2421c:	sub	r2, fp, #22
   24220:	str	r1, [sp, #16]
   24224:	mov	r1, r2
   24228:	ldr	r2, [sp, #16]
   2422c:	uxth	r2, r2
   24230:	str	ip, [sp, #12]
   24234:	bl	23ecc <flatcc_builder_embed_buffer@@Base+0x1e8>
   24238:	cmp	r0, #0
   2423c:	beq	2424c <flatcc_builder_create_buffer@@Base+0xa8>
   24240:	movw	r0, #0
   24244:	str	r0, [fp, #-4]
   24248:	b	24530 <flatcc_builder_create_buffer@@Base+0x38c>
   2424c:	ldr	r0, [fp, #-8]
   24250:	ldrh	r1, [fp, #-22]	; 0xffffffea
   24254:	bl	2454c <flatcc_builder_create_buffer@@Base+0x3a8>
   24258:	ldr	r0, [fp, #-12]
   2425c:	movw	r1, #0
   24260:	cmp	r0, r1
   24264:	beq	242a4 <flatcc_builder_create_buffer@@Base+0x100>
   24268:	ldr	r0, [fp, #-12]
   2426c:	ldrb	r1, [r0]
   24270:	strb	r1, [sp, #28]
   24274:	ldrb	r1, [r0, #1]
   24278:	strb	r1, [sp, #29]
   2427c:	ldrb	r1, [r0, #2]
   24280:	strb	r1, [sp, #30]
   24284:	ldrb	r0, [r0, #3]
   24288:	strb	r0, [sp, #31]
   2428c:	ldr	r0, [sp, #28]
   24290:	bl	24580 <flatcc_builder_create_buffer@@Base+0x3dc>
   24294:	str	r0, [sp, #28]
   24298:	ldr	r0, [sp, #28]
   2429c:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   242a0:	str	r0, [sp, #28]
   242a4:	ldr	r0, [sp, #28]
   242a8:	cmp	r0, #0
   242ac:	movw	r0, #0
   242b0:	movne	r0, #1
   242b4:	tst	r0, #1
   242b8:	movw	r0, #4
   242bc:	mov	r1, r0
   242c0:	moveq	r1, #0
   242c4:	str	r1, [fp, #-36]	; 0xffffffdc
   242c8:	ldr	r1, [fp, #-8]
   242cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   242d0:	add	r2, r2, #4
   242d4:	ldr	r3, [sp, #20]
   242d8:	cmp	r3, #0
   242dc:	movw	r3, #0
   242e0:	movne	r3, #1
   242e4:	tst	r3, #1
   242e8:	moveq	r0, #0
   242ec:	add	r0, r2, r0
   242f0:	str	r0, [sp, #8]
   242f4:	mov	r0, r1
   242f8:	ldr	r1, [sp, #8]
   242fc:	ldrh	r2, [fp, #-22]	; 0xffffffea
   24300:	bl	24038 <flatcc_builder_embed_buffer@@Base+0x354>
   24304:	str	r0, [fp, #-32]	; 0xffffffe0
   24308:	movw	r0, #0
   2430c:	str	r0, [sp, #32]
   24310:	str	r0, [sp, #36]	; 0x24
   24314:	ldr	r0, [sp, #24]
   24318:	cmp	r0, #0
   2431c:	bne	2432c <flatcc_builder_create_buffer@@Base+0x188>
   24320:	ldr	r0, [sp, #20]
   24324:	cmp	r0, #0
   24328:	beq	24368 <flatcc_builder_create_buffer@@Base+0x1c4>
   2432c:	ldr	r0, [sp, #32]
   24330:	add	r0, r0, #4
   24334:	str	r0, [sp, #32]
   24338:	add	r0, sp, #32
   2433c:	add	r0, r0, #8
   24340:	ldr	r1, [sp, #36]	; 0x24
   24344:	sub	r2, fp, #44	; 0x2c
   24348:	str	r2, [r0, r1, lsl #3]
   2434c:	ldr	r1, [sp, #36]	; 0x24
   24350:	add	r0, r0, r1, lsl #3
   24354:	movw	r1, #4
   24358:	str	r1, [r0, #4]
   2435c:	ldr	r0, [sp, #36]	; 0x24
   24360:	add	r0, r0, #1
   24364:	str	r0, [sp, #36]	; 0x24
   24368:	ldr	r0, [sp, #32]
   2436c:	add	r0, r0, #4
   24370:	str	r0, [sp, #32]
   24374:	add	r0, sp, #32
   24378:	add	r0, r0, #8
   2437c:	ldr	r1, [sp, #36]	; 0x24
   24380:	sub	r2, fp, #40	; 0x28
   24384:	str	r2, [r0, r1, lsl #3]
   24388:	ldr	r1, [sp, #36]	; 0x24
   2438c:	add	r0, r0, r1, lsl #3
   24390:	movw	r1, #4
   24394:	str	r1, [r0, #4]
   24398:	ldr	r0, [sp, #36]	; 0x24
   2439c:	add	r0, r0, #1
   243a0:	str	r0, [sp, #36]	; 0x24
   243a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   243a8:	cmp	r0, #0
   243ac:	bls	243f0 <flatcc_builder_create_buffer@@Base+0x24c>
   243b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   243b4:	ldr	r1, [sp, #32]
   243b8:	add	r0, r1, r0
   243bc:	str	r0, [sp, #32]
   243c0:	add	r0, sp, #32
   243c4:	add	r0, r0, #8
   243c8:	ldr	r1, [sp, #36]	; 0x24
   243cc:	add	r2, sp, #28
   243d0:	str	r2, [r0, r1, lsl #3]
   243d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   243d8:	ldr	r2, [sp, #36]	; 0x24
   243dc:	add	r0, r0, r2, lsl #3
   243e0:	str	r1, [r0, #4]
   243e4:	ldr	r0, [sp, #36]	; 0x24
   243e8:	add	r0, r0, #1
   243ec:	str	r0, [sp, #36]	; 0x24
   243f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   243f4:	cmp	r0, #0
   243f8:	bls	24440 <flatcc_builder_create_buffer@@Base+0x29c>
   243fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24400:	ldr	r1, [sp, #32]
   24404:	add	r0, r1, r0
   24408:	str	r0, [sp, #32]
   2440c:	add	r0, sp, #32
   24410:	add	r0, r0, #8
   24414:	ldr	r1, [sp, #36]	; 0x24
   24418:	ldr	r2, [pc, #296]	; 24548 <flatcc_builder_create_buffer@@Base+0x3a4>
   2441c:	ldr	r2, [pc, r2]
   24420:	str	r2, [r0, r1, lsl #3]
   24424:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24428:	ldr	r2, [sp, #36]	; 0x24
   2442c:	add	r0, r0, r2, lsl #3
   24430:	str	r1, [r0, #4]
   24434:	ldr	r0, [sp, #36]	; 0x24
   24438:	add	r0, r0, #1
   2443c:	str	r0, [sp, #36]	; 0x24
   24440:	ldr	r0, [fp, #-8]
   24444:	ldr	r0, [r0, #136]	; 0x88
   24448:	ldr	r1, [sp, #32]
   2444c:	sub	r0, r0, r1
   24450:	ldr	r1, [sp, #24]
   24454:	cmp	r1, #0
   24458:	movw	r1, #1
   2445c:	str	r0, [sp, #4]
   24460:	str	r1, [sp]
   24464:	bne	2447c <flatcc_builder_create_buffer@@Base+0x2d8>
   24468:	ldr	r0, [sp, #20]
   2446c:	cmp	r0, #0
   24470:	movw	r0, #0
   24474:	movne	r0, #1
   24478:	str	r0, [sp]
   2447c:	ldr	r0, [sp]
   24480:	tst	r0, #1
   24484:	movw	r0, #4
   24488:	moveq	r0, #0
   2448c:	ldr	r1, [sp, #4]
   24490:	add	r0, r1, r0
   24494:	str	r0, [fp, #-48]	; 0xffffffd0
   24498:	ldr	r0, [sp, #24]
   2449c:	cmp	r0, #0
   244a0:	beq	244c0 <flatcc_builder_create_buffer@@Base+0x31c>
   244a4:	ldr	r0, [fp, #-8]
   244a8:	ldr	r0, [r0, #144]	; 0x90
   244ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   244b0:	sub	r0, r0, r1
   244b4:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   244b8:	str	r0, [fp, #-44]	; 0xffffffd4
   244bc:	b	244d8 <flatcc_builder_create_buffer@@Base+0x334>
   244c0:	ldr	r0, [fp, #-8]
   244c4:	ldr	r0, [r0, #140]	; 0x8c
   244c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   244cc:	sub	r0, r0, r1
   244d0:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   244d4:	str	r0, [fp, #-44]	; 0xffffffd4
   244d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   244dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   244e0:	sub	r0, r0, r1
   244e4:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   244e8:	str	r0, [fp, #-40]	; 0xffffffd8
   244ec:	ldr	r0, [fp, #-8]
   244f0:	add	r1, sp, #32
   244f4:	bl	24080 <flatcc_builder_embed_buffer@@Base+0x39c>
   244f8:	str	r0, [fp, #-28]	; 0xffffffe4
   244fc:	movw	r1, #0
   24500:	cmp	r1, r0
   24504:	bne	24528 <flatcc_builder_create_buffer@@Base+0x384>
   24508:	ldr	r0, [pc, #44]	; 2453c <flatcc_builder_create_buffer@@Base+0x398>
   2450c:	add	r0, pc, r0
   24510:	ldr	r1, [pc, #40]	; 24540 <flatcc_builder_create_buffer@@Base+0x39c>
   24514:	add	r1, pc, r1
   24518:	ldr	r2, [pc, #36]	; 24544 <flatcc_builder_create_buffer@@Base+0x3a0>
   2451c:	add	r3, pc, r2
   24520:	movw	r2, #772	; 0x304
   24524:	bl	12b80 <__assert_fail@plt>
   24528:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2452c:	str	r0, [fp, #-4]
   24530:	ldr	r0, [fp, #-4]
   24534:	mov	sp, fp
   24538:	pop	{fp, pc}
   2453c:	andeq	sp, r0, r7, asr #28
   24540:	andeq	ip, r0, r2, lsl #25
   24544:	andeq	ip, r0, ip, asr #27
   24548:	andeq	pc, r1, ip, asr #24
   2454c:	sub	sp, sp, #8
   24550:	str	r0, [sp, #4]
   24554:	strh	r1, [sp, #2]
   24558:	ldr	r0, [sp, #4]
   2455c:	ldrh	r0, [r0, #128]	; 0x80
   24560:	ldrh	r1, [sp, #2]
   24564:	cmp	r0, r1
   24568:	bge	24578 <flatcc_builder_create_buffer@@Base+0x3d4>
   2456c:	ldrh	r0, [sp, #2]
   24570:	ldr	r1, [sp, #4]
   24574:	strh	r0, [r1, #128]	; 0x80
   24578:	add	sp, sp, #8
   2457c:	bx	lr
   24580:	sub	sp, sp, #4
   24584:	str	r0, [sp]
   24588:	ldr	r0, [sp]
   2458c:	add	sp, sp, #4
   24590:	bx	lr

00024594 <flatcc_builder_create_struct@@Base>:
   24594:	push	{fp, lr}
   24598:	mov	fp, sp
   2459c:	sub	sp, sp, #96	; 0x60
   245a0:	str	r0, [fp, #-4]
   245a4:	str	r1, [fp, #-8]
   245a8:	str	r2, [fp, #-12]
   245ac:	strh	r3, [fp, #-14]
   245b0:	ldrh	r0, [fp, #-14]
   245b4:	cmp	r0, #1
   245b8:	blt	245c0 <flatcc_builder_create_struct@@Base+0x2c>
   245bc:	b	245e0 <flatcc_builder_create_struct@@Base+0x4c>
   245c0:	ldr	r0, [pc, #244]	; 246bc <flatcc_builder_create_struct@@Base+0x128>
   245c4:	add	r0, pc, r0
   245c8:	ldr	r1, [pc, #240]	; 246c0 <flatcc_builder_create_struct@@Base+0x12c>
   245cc:	add	r1, pc, r1
   245d0:	ldr	r2, [pc, #236]	; 246c4 <flatcc_builder_create_struct@@Base+0x130>
   245d4:	add	r3, pc, r2
   245d8:	movw	r2, #783	; 0x30f
   245dc:	bl	12b80 <__assert_fail@plt>
   245e0:	ldr	r0, [fp, #-4]
   245e4:	ldrh	r1, [fp, #-14]
   245e8:	bl	2454c <flatcc_builder_create_buffer@@Base+0x3a8>
   245ec:	ldr	r0, [fp, #-4]
   245f0:	ldr	r1, [fp, #-12]
   245f4:	ldrh	r2, [fp, #-14]
   245f8:	bl	24038 <flatcc_builder_embed_buffer@@Base+0x354>
   245fc:	str	r0, [fp, #-20]	; 0xffffffec
   24600:	movw	r0, #0
   24604:	str	r0, [sp, #4]
   24608:	str	r0, [sp, #8]
   2460c:	ldr	r0, [fp, #-12]
   24610:	cmp	r0, #0
   24614:	bls	24658 <flatcc_builder_create_struct@@Base+0xc4>
   24618:	ldr	r0, [fp, #-12]
   2461c:	ldr	r1, [sp, #4]
   24620:	add	r0, r1, r0
   24624:	str	r0, [sp, #4]
   24628:	ldr	r0, [fp, #-8]
   2462c:	add	r1, sp, #4
   24630:	add	r1, r1, #8
   24634:	ldr	r2, [sp, #8]
   24638:	str	r0, [r1, r2, lsl #3]
   2463c:	ldr	r0, [fp, #-12]
   24640:	ldr	r2, [sp, #8]
   24644:	add	r1, r1, r2, lsl #3
   24648:	str	r0, [r1, #4]
   2464c:	ldr	r0, [sp, #8]
   24650:	add	r0, r0, #1
   24654:	str	r0, [sp, #8]
   24658:	ldr	r0, [fp, #-20]	; 0xffffffec
   2465c:	cmp	r0, #0
   24660:	bls	246a8 <flatcc_builder_create_struct@@Base+0x114>
   24664:	ldr	r0, [fp, #-20]	; 0xffffffec
   24668:	ldr	r1, [sp, #4]
   2466c:	add	r0, r1, r0
   24670:	str	r0, [sp, #4]
   24674:	add	r0, sp, #4
   24678:	add	r0, r0, #8
   2467c:	ldr	r1, [sp, #8]
   24680:	ldr	r2, [pc, #64]	; 246c8 <flatcc_builder_create_struct@@Base+0x134>
   24684:	ldr	r2, [pc, r2]
   24688:	str	r2, [r0, r1, lsl #3]
   2468c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24690:	ldr	r2, [sp, #8]
   24694:	add	r0, r0, r2, lsl #3
   24698:	str	r1, [r0, #4]
   2469c:	ldr	r0, [sp, #8]
   246a0:	add	r0, r0, #1
   246a4:	str	r0, [sp, #8]
   246a8:	ldr	r0, [fp, #-4]
   246ac:	add	r1, sp, #4
   246b0:	bl	24080 <flatcc_builder_embed_buffer@@Base+0x39c>
   246b4:	mov	sp, fp
   246b8:	pop	{fp, pc}
   246bc:	andeq	ip, r0, r7, lsr #27
   246c0:	andeq	ip, r0, sl, asr #23
   246c4:	andeq	ip, r0, r2, lsr #27
   246c8:	andeq	pc, r1, r4, ror #19

000246cc <flatcc_builder_start_buffer@@Base>:
   246cc:	push	{fp, lr}
   246d0:	mov	fp, sp
   246d4:	sub	sp, sp, #32
   246d8:	str	r0, [fp, #-8]
   246dc:	str	r1, [fp, #-12]
   246e0:	strh	r2, [fp, #-14]
   246e4:	str	r3, [sp, #12]
   246e8:	ldr	r0, [fp, #-8]
   246ec:	ldr	r1, [fp, #-8]
   246f0:	ldrh	r1, [r1, #128]	; 0x80
   246f4:	bl	24844 <flatcc_builder_start_buffer@@Base+0x178>
   246f8:	cmp	r0, #0
   246fc:	beq	2470c <flatcc_builder_start_buffer@@Base+0x40>
   24700:	mvn	r0, #0
   24704:	str	r0, [fp, #-4]
   24708:	b	24834 <flatcc_builder_start_buffer@@Base+0x168>
   2470c:	ldr	r0, [fp, #-8]
   24710:	movw	r1, #1
   24714:	strh	r1, [r0, #128]	; 0x80
   24718:	ldr	r0, [fp, #-8]
   2471c:	ldrh	r0, [r0, #132]	; 0x84
   24720:	ldr	r1, [fp, #-8]
   24724:	ldr	r1, [r1, #32]
   24728:	strh	r0, [r1, #34]	; 0x22
   2472c:	ldrh	r0, [fp, #-14]
   24730:	ldr	r1, [fp, #-8]
   24734:	strh	r0, [r1, #132]	; 0x84
   24738:	ldr	r0, [fp, #-8]
   2473c:	ldrh	r0, [r0, #164]	; 0xa4
   24740:	ldr	r1, [fp, #-8]
   24744:	ldr	r1, [r1, #32]
   24748:	strh	r0, [r1, #32]
   2474c:	ldr	r0, [sp, #12]
   24750:	ldr	r1, [fp, #-8]
   24754:	strh	r0, [r1, #164]	; 0xa4
   24758:	ldr	r0, [fp, #-8]
   2475c:	ldr	r0, [r0, #144]	; 0x90
   24760:	ldr	r1, [fp, #-8]
   24764:	ldr	r1, [r1, #32]
   24768:	str	r0, [r1, #20]
   2476c:	ldr	r0, [fp, #-8]
   24770:	ldr	r0, [r0, #152]	; 0x98
   24774:	ldr	r1, [fp, #-8]
   24778:	ldr	r1, [r1, #32]
   2477c:	str	r0, [r1, #28]
   24780:	ldr	r0, [fp, #-8]
   24784:	ldr	r0, [r0, #136]	; 0x88
   24788:	ldr	r1, [fp, #-8]
   2478c:	str	r0, [r1, #144]	; 0x90
   24790:	ldr	r0, [fp, #-8]
   24794:	ldr	r1, [r0, #148]	; 0x94
   24798:	add	r2, r1, #1
   2479c:	str	r2, [r0, #148]	; 0x94
   247a0:	ldr	r0, [fp, #-8]
   247a4:	str	r1, [r0, #152]	; 0x98
   247a8:	ldr	r0, [fp, #-8]
   247ac:	ldr	r0, [r0, #168]	; 0xa8
   247b0:	ldr	r1, [fp, #-8]
   247b4:	ldr	r1, [r1, #32]
   247b8:	str	r0, [r1, #16]
   247bc:	ldr	r0, [fp, #-8]
   247c0:	add	r0, r0, #168	; 0xa8
   247c4:	ldr	r1, [fp, #-12]
   247c8:	movw	r2, #0
   247cc:	cmp	r1, r2
   247d0:	str	r0, [sp, #8]
   247d4:	beq	247e4 <flatcc_builder_start_buffer@@Base+0x118>
   247d8:	ldr	r0, [fp, #-12]
   247dc:	str	r0, [sp, #4]
   247e0:	b	247f4 <flatcc_builder_start_buffer@@Base+0x128>
   247e4:	ldr	r0, [pc, #84]	; 24840 <flatcc_builder_start_buffer@@Base+0x174>
   247e8:	ldr	r0, [pc, r0]
   247ec:	str	r0, [sp, #4]
   247f0:	b	247f4 <flatcc_builder_start_buffer@@Base+0x128>
   247f4:	ldr	r0, [sp, #4]
   247f8:	ldrb	r1, [r0]
   247fc:	ldr	r2, [sp, #8]
   24800:	strb	r1, [r2]
   24804:	ldrb	r1, [r0, #1]
   24808:	strb	r1, [r2, #1]
   2480c:	ldrb	r1, [r0, #2]
   24810:	strb	r1, [r2, #2]
   24814:	ldrb	r0, [r0, #3]
   24818:	strb	r0, [r2, #3]
   2481c:	ldr	r0, [fp, #-8]
   24820:	ldr	r0, [r0, #32]
   24824:	movw	r1, #1
   24828:	strh	r1, [r0, #14]
   2482c:	movw	r0, #0
   24830:	str	r0, [fp, #-4]
   24834:	ldr	r0, [fp, #-4]
   24838:	mov	sp, fp
   2483c:	pop	{fp, pc}
   24840:	andeq	pc, r1, r0, lsl #17
   24844:	push	{fp, lr}
   24848:	mov	fp, sp
   2484c:	sub	sp, sp, #24
   24850:	str	r0, [fp, #-8]
   24854:	strh	r1, [fp, #-10]
   24858:	ldr	r0, [fp, #-8]
   2485c:	ldr	r1, [r0, #156]	; 0x9c
   24860:	add	r1, r1, #1
   24864:	str	r1, [r0, #156]	; 0x9c
   24868:	ldr	r0, [fp, #-8]
   2486c:	ldr	r0, [r0, #160]	; 0xa0
   24870:	cmp	r1, r0
   24874:	ble	24960 <flatcc_builder_start_buffer@@Base+0x294>
   24878:	ldr	r0, [fp, #-8]
   2487c:	ldr	r0, [r0, #176]	; 0xb0
   24880:	cmp	r0, #0
   24884:	ble	248ac <flatcc_builder_start_buffer@@Base+0x1e0>
   24888:	ldr	r0, [fp, #-8]
   2488c:	ldr	r0, [r0, #156]	; 0x9c
   24890:	ldr	r1, [fp, #-8]
   24894:	ldr	r1, [r1, #176]	; 0xb0
   24898:	cmp	r0, r1
   2489c:	ble	248ac <flatcc_builder_start_buffer@@Base+0x1e0>
   248a0:	mvn	r0, #0
   248a4:	str	r0, [fp, #-4]
   248a8:	b	24a04 <flatcc_builder_start_buffer@@Base+0x338>
   248ac:	ldr	r0, [fp, #-8]
   248b0:	ldr	r1, [fp, #-8]
   248b4:	ldr	r1, [r1, #156]	; 0x9c
   248b8:	sub	r1, r1, #1
   248bc:	movw	r2, #36	; 0x24
   248c0:	mul	r1, r1, r2
   248c4:	movw	r3, #4
   248c8:	str	r1, [sp, #8]
   248cc:	mov	r1, r3
   248d0:	ldr	r3, [sp, #8]
   248d4:	str	r2, [sp, #4]
   248d8:	mov	r2, r3
   248dc:	ldr	r3, [sp, #4]
   248e0:	movw	ip, #0
   248e4:	str	ip, [sp]
   248e8:	bl	239d8 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   248ec:	ldr	r1, [fp, #-8]
   248f0:	str	r0, [r1, #32]
   248f4:	movw	r1, #0
   248f8:	cmp	r0, r1
   248fc:	bne	2490c <flatcc_builder_start_buffer@@Base+0x240>
   24900:	mvn	r0, #0
   24904:	str	r0, [fp, #-4]
   24908:	b	24a04 <flatcc_builder_start_buffer@@Base+0x338>
   2490c:	ldr	r0, [fp, #-8]
   24910:	ldr	r0, [r0, #88]	; 0x58
   24914:	movw	r1, #36	; 0x24
   24918:	udiv	r0, r0, r1
   2491c:	ldr	r1, [fp, #-8]
   24920:	str	r0, [r1, #160]	; 0xa0
   24924:	ldr	r0, [fp, #-8]
   24928:	ldr	r0, [r0, #176]	; 0xb0
   2492c:	cmp	r0, #0
   24930:	ble	2495c <flatcc_builder_start_buffer@@Base+0x290>
   24934:	ldr	r0, [fp, #-8]
   24938:	ldr	r0, [r0, #176]	; 0xb0
   2493c:	ldr	r1, [fp, #-8]
   24940:	ldr	r1, [r1, #160]	; 0xa0
   24944:	cmp	r0, r1
   24948:	bge	2495c <flatcc_builder_start_buffer@@Base+0x290>
   2494c:	ldr	r0, [fp, #-8]
   24950:	ldr	r0, [r0, #176]	; 0xb0
   24954:	ldr	r1, [fp, #-8]
   24958:	str	r0, [r1, #160]	; 0xa0
   2495c:	b	24970 <flatcc_builder_start_buffer@@Base+0x2a4>
   24960:	ldr	r0, [fp, #-8]
   24964:	ldr	r1, [r0, #32]
   24968:	add	r1, r1, #36	; 0x24
   2496c:	str	r1, [r0, #32]
   24970:	ldr	r0, [fp, #-8]
   24974:	ldr	r0, [r0, #20]
   24978:	ldr	r1, [fp, #-8]
   2497c:	ldr	r1, [r1, #32]
   24980:	str	r0, [r1, #8]
   24984:	ldr	r0, [fp, #-8]
   24988:	ldrh	r0, [r0, #130]	; 0x82
   2498c:	ldr	r1, [fp, #-8]
   24990:	ldr	r1, [r1, #32]
   24994:	strh	r0, [r1, #12]
   24998:	ldrh	r0, [fp, #-10]
   2499c:	ldr	r1, [fp, #-8]
   249a0:	strh	r0, [r1, #130]	; 0x82
   249a4:	ldr	r0, [fp, #-8]
   249a8:	ldr	r0, [r0, #28]
   249ac:	ldr	r1, [fp, #-8]
   249b0:	ldr	r1, [r1, #32]
   249b4:	str	r0, [r1]
   249b8:	ldr	r0, [fp, #-8]
   249bc:	ldr	r0, [r0, #32]
   249c0:	mvn	r1, #3
   249c4:	str	r1, [r0, #4]
   249c8:	ldr	r0, [fp, #-8]
   249cc:	ldr	r0, [r0, #28]
   249d0:	ldr	r1, [fp, #-8]
   249d4:	ldr	r1, [r1, #20]
   249d8:	add	r0, r0, r1
   249dc:	add	r0, r0, #8
   249e0:	sub	r0, r0, #1
   249e4:	mvn	r1, #7
   249e8:	and	r0, r0, r1
   249ec:	ldr	r1, [fp, #-8]
   249f0:	str	r0, [r1, #28]
   249f4:	ldr	r0, [fp, #-8]
   249f8:	movw	r1, #0
   249fc:	str	r1, [r0, #20]
   24a00:	str	r1, [fp, #-4]
   24a04:	ldr	r0, [fp, #-4]
   24a08:	mov	sp, fp
   24a0c:	pop	{fp, pc}

00024a10 <flatcc_builder_end_buffer@@Base>:
   24a10:	push	{fp, lr}
   24a14:	mov	fp, sp
   24a18:	sub	sp, sp, #32
   24a1c:	str	r0, [fp, #-8]
   24a20:	str	r1, [fp, #-12]
   24a24:	ldr	r0, [fp, #-8]
   24a28:	ldrh	r0, [r0, #164]	; 0xa4
   24a2c:	and	r0, r0, #2
   24a30:	str	r0, [sp, #12]
   24a34:	ldr	r0, [fp, #-8]
   24a38:	ldr	r0, [r0, #152]	; 0x98
   24a3c:	cmp	r0, #0
   24a40:	movw	r0, #0
   24a44:	moveq	r0, #1
   24a48:	tst	r0, #1
   24a4c:	movw	r0, #0
   24a50:	moveq	r0, #1
   24a54:	ldr	r1, [sp, #12]
   24a58:	orr	r0, r1, r0
   24a5c:	str	r0, [sp, #12]
   24a60:	ldr	r0, [fp, #-8]
   24a64:	ldr	r0, [r0, #32]
   24a68:	ldrh	r0, [r0, #14]
   24a6c:	cmp	r0, #1
   24a70:	bne	24a78 <flatcc_builder_end_buffer@@Base+0x68>
   24a74:	b	24a98 <flatcc_builder_end_buffer@@Base+0x88>
   24a78:	ldr	r0, [pc, #232]	; 24b68 <flatcc_builder_end_buffer@@Base+0x158>
   24a7c:	add	r0, pc, r0
   24a80:	ldr	r1, [pc, #228]	; 24b6c <flatcc_builder_end_buffer@@Base+0x15c>
   24a84:	add	r1, pc, r1
   24a88:	ldr	r2, [pc, #224]	; 24b70 <flatcc_builder_end_buffer@@Base+0x160>
   24a8c:	add	r3, pc, r2
   24a90:	movw	r2, #838	; 0x346
   24a94:	bl	12b80 <__assert_fail@plt>
   24a98:	ldr	r0, [fp, #-8]
   24a9c:	ldr	r1, [fp, #-8]
   24aa0:	ldrh	r1, [r1, #132]	; 0x84
   24aa4:	bl	2454c <flatcc_builder_create_buffer@@Base+0x3a8>
   24aa8:	ldr	r0, [fp, #-8]
   24aac:	ldr	r1, [fp, #-8]
   24ab0:	add	r1, r1, #168	; 0xa8
   24ab4:	ldr	r2, [fp, #-8]
   24ab8:	ldrh	r2, [r2, #132]	; 0x84
   24abc:	ldr	r3, [fp, #-12]
   24ac0:	ldr	ip, [fp, #-8]
   24ac4:	ldrh	ip, [ip, #128]	; 0x80
   24ac8:	ldr	lr, [sp, #12]
   24acc:	uxth	r2, r2
   24ad0:	uxth	ip, ip
   24ad4:	str	ip, [sp]
   24ad8:	str	lr, [sp, #4]
   24adc:	bl	241a4 <flatcc_builder_create_buffer@@Base>
   24ae0:	str	r0, [sp, #16]
   24ae4:	movw	r1, #0
   24ae8:	cmp	r1, r0
   24aec:	bne	24afc <flatcc_builder_end_buffer@@Base+0xec>
   24af0:	movw	r0, #0
   24af4:	str	r0, [fp, #-4]
   24af8:	b	24b5c <flatcc_builder_end_buffer@@Base+0x14c>
   24afc:	ldr	r0, [fp, #-8]
   24b00:	ldr	r0, [r0, #32]
   24b04:	ldr	r0, [r0, #20]
   24b08:	ldr	r1, [fp, #-8]
   24b0c:	str	r0, [r1, #144]	; 0x90
   24b10:	ldr	r0, [fp, #-8]
   24b14:	ldr	r0, [r0, #32]
   24b18:	ldr	r0, [r0, #28]
   24b1c:	ldr	r1, [fp, #-8]
   24b20:	str	r0, [r1, #152]	; 0x98
   24b24:	ldr	r0, [fp, #-8]
   24b28:	ldr	r0, [r0, #32]
   24b2c:	ldr	r0, [r0, #16]
   24b30:	ldr	r1, [fp, #-8]
   24b34:	str	r0, [r1, #168]	; 0xa8
   24b38:	ldr	r0, [fp, #-8]
   24b3c:	ldr	r0, [r0, #32]
   24b40:	ldrh	r0, [r0, #32]
   24b44:	ldr	r1, [fp, #-8]
   24b48:	strh	r0, [r1, #164]	; 0xa4
   24b4c:	ldr	r0, [fp, #-8]
   24b50:	bl	24b74 <flatcc_builder_end_buffer@@Base+0x164>
   24b54:	ldr	r0, [sp, #16]
   24b58:	str	r0, [fp, #-4]
   24b5c:	ldr	r0, [fp, #-4]
   24b60:	mov	sp, fp
   24b64:	pop	{fp, pc}
   24b68:	andeq	ip, r0, r0, ror #18
   24b6c:	andeq	ip, r0, r2, lsl r7
   24b70:	andeq	ip, r0, ip, ror r9
   24b74:	push	{fp, lr}
   24b78:	mov	fp, sp
   24b7c:	sub	sp, sp, #8
   24b80:	str	r0, [sp, #4]
   24b84:	ldr	r0, [sp, #4]
   24b88:	ldr	r0, [r0, #16]
   24b8c:	ldr	r1, [sp, #4]
   24b90:	ldr	r2, [r1, #20]
   24b94:	movw	r1, #0
   24b98:	and	r1, r1, #255	; 0xff
   24b9c:	bl	12b2c <memset@plt>
   24ba0:	ldr	r0, [sp, #4]
   24ba4:	ldr	r0, [r0, #32]
   24ba8:	ldr	r0, [r0, #8]
   24bac:	ldr	r1, [sp, #4]
   24bb0:	str	r0, [r1, #20]
   24bb4:	ldr	r0, [sp, #4]
   24bb8:	ldr	r0, [r0, #32]
   24bbc:	ldr	r0, [r0]
   24bc0:	ldr	r1, [sp, #4]
   24bc4:	str	r0, [r1, #28]
   24bc8:	ldr	r0, [sp, #4]
   24bcc:	ldr	r1, [sp, #4]
   24bd0:	ldr	r1, [r1, #32]
   24bd4:	ldr	r1, [r1, #4]
   24bd8:	bl	24ca0 <flatcc_builder_start_struct@@Base+0x70>
   24bdc:	ldr	r0, [sp, #4]
   24be0:	ldr	r1, [sp, #4]
   24be4:	ldrh	r1, [r1, #130]	; 0x82
   24be8:	bl	2454c <flatcc_builder_create_buffer@@Base+0x3a8>
   24bec:	ldr	r0, [sp, #4]
   24bf0:	ldr	r0, [r0, #32]
   24bf4:	ldrh	r0, [r0, #12]
   24bf8:	ldr	r1, [sp, #4]
   24bfc:	strh	r0, [r1, #130]	; 0x82
   24c00:	ldr	r0, [sp, #4]
   24c04:	ldr	r1, [r0, #32]
   24c08:	mvn	r2, #35	; 0x23
   24c0c:	add	r1, r1, r2
   24c10:	str	r1, [r0, #32]
   24c14:	ldr	r0, [sp, #4]
   24c18:	ldr	r1, [r0, #156]	; 0x9c
   24c1c:	mvn	r2, #0
   24c20:	add	r1, r1, r2
   24c24:	str	r1, [r0, #156]	; 0x9c
   24c28:	mov	sp, fp
   24c2c:	pop	{fp, pc}

00024c30 <flatcc_builder_start_struct@@Base>:
   24c30:	push	{fp, lr}
   24c34:	mov	fp, sp
   24c38:	sub	sp, sp, #16
   24c3c:	str	r0, [sp, #8]
   24c40:	str	r1, [sp, #4]
   24c44:	strh	r2, [sp, #2]
   24c48:	ldr	r0, [sp, #8]
   24c4c:	ldrh	r1, [sp, #2]
   24c50:	bl	24844 <flatcc_builder_start_buffer@@Base+0x178>
   24c54:	cmp	r0, #0
   24c58:	beq	24c68 <flatcc_builder_start_struct@@Base+0x38>
   24c5c:	movw	r0, #0
   24c60:	str	r0, [fp, #-4]
   24c64:	b	24c94 <flatcc_builder_start_struct@@Base+0x64>
   24c68:	ldr	r0, [sp, #8]
   24c6c:	ldr	r0, [r0, #32]
   24c70:	movw	r1, #2
   24c74:	strh	r1, [r0, #14]
   24c78:	ldr	r0, [sp, #8]
   24c7c:	mvn	r1, #3
   24c80:	bl	24ca0 <flatcc_builder_start_struct@@Base+0x70>
   24c84:	ldr	r0, [sp, #8]
   24c88:	ldr	r1, [sp, #4]
   24c8c:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   24c90:	str	r0, [fp, #-4]
   24c94:	ldr	r0, [fp, #-4]
   24c98:	mov	sp, fp
   24c9c:	pop	{fp, pc}
   24ca0:	sub	sp, sp, #12
   24ca4:	str	r0, [sp, #8]
   24ca8:	str	r1, [sp, #4]
   24cac:	ldr	r0, [sp, #8]
   24cb0:	add	r0, r0, #52	; 0x34
   24cb4:	add	r0, r0, #8
   24cb8:	str	r0, [sp]
   24cbc:	ldr	r0, [sp, #8]
   24cc0:	ldr	r0, [r0, #60]	; 0x3c
   24cc4:	ldr	r1, [sp, #8]
   24cc8:	ldr	r1, [r1, #28]
   24ccc:	add	r0, r0, r1
   24cd0:	ldr	r1, [sp, #8]
   24cd4:	str	r0, [r1, #16]
   24cd8:	ldr	r0, [sp]
   24cdc:	ldr	r0, [r0, #4]
   24ce0:	ldr	r1, [sp, #8]
   24ce4:	ldr	r1, [r1, #28]
   24ce8:	sub	r0, r0, r1
   24cec:	ldr	r1, [sp, #8]
   24cf0:	str	r0, [r1, #24]
   24cf4:	ldr	r0, [sp, #8]
   24cf8:	ldr	r0, [r0, #24]
   24cfc:	ldr	r1, [sp, #4]
   24d00:	cmp	r0, r1
   24d04:	bls	24d14 <flatcc_builder_start_struct@@Base+0xe4>
   24d08:	ldr	r0, [sp, #4]
   24d0c:	ldr	r1, [sp, #8]
   24d10:	str	r0, [r1, #24]
   24d14:	ldr	r0, [sp, #4]
   24d18:	ldr	r1, [sp, #8]
   24d1c:	ldr	r1, [r1, #32]
   24d20:	str	r0, [r1, #4]
   24d24:	add	sp, sp, #12
   24d28:	bx	lr
   24d2c:	push	{fp, lr}
   24d30:	mov	fp, sp
   24d34:	sub	sp, sp, #16
   24d38:	str	r0, [sp, #8]
   24d3c:	str	r1, [sp, #4]
   24d40:	ldr	r0, [sp, #8]
   24d44:	ldr	r0, [r0, #20]
   24d48:	str	r0, [sp]
   24d4c:	ldr	r0, [sp, #4]
   24d50:	ldr	r1, [sp, #8]
   24d54:	ldr	r2, [r1, #20]
   24d58:	add	r0, r2, r0
   24d5c:	str	r0, [r1, #20]
   24d60:	ldr	r1, [sp, #8]
   24d64:	ldr	r1, [r1, #24]
   24d68:	cmp	r0, r1
   24d6c:	bcc	24da0 <flatcc_builder_start_struct@@Base+0x170>
   24d70:	ldr	r0, [sp, #8]
   24d74:	ldr	r1, [sp, #8]
   24d78:	ldr	r1, [r1, #20]
   24d7c:	add	r1, r1, #1
   24d80:	mvn	r2, #3
   24d84:	bl	28e88 <flatcc_builder_get_emit_context@@Base+0x40>
   24d88:	cmp	r0, #0
   24d8c:	beq	24d9c <flatcc_builder_start_struct@@Base+0x16c>
   24d90:	movw	r0, #0
   24d94:	str	r0, [fp, #-4]
   24d98:	b	24db4 <flatcc_builder_start_struct@@Base+0x184>
   24d9c:	b	24da0 <flatcc_builder_start_struct@@Base+0x170>
   24da0:	ldr	r0, [sp, #8]
   24da4:	ldr	r0, [r0, #16]
   24da8:	ldr	r1, [sp]
   24dac:	add	r0, r0, r1
   24db0:	str	r0, [fp, #-4]
   24db4:	ldr	r0, [fp, #-4]
   24db8:	mov	sp, fp
   24dbc:	pop	{fp, pc}

00024dc0 <flatcc_builder_struct_edit@@Base>:
   24dc0:	sub	sp, sp, #4
   24dc4:	str	r0, [sp]
   24dc8:	ldr	r0, [sp]
   24dcc:	ldr	r0, [r0, #16]
   24dd0:	add	sp, sp, #4
   24dd4:	bx	lr

00024dd8 <flatcc_builder_end_struct@@Base>:
   24dd8:	push	{fp, lr}
   24ddc:	mov	fp, sp
   24de0:	sub	sp, sp, #16
   24de4:	str	r0, [sp, #8]
   24de8:	ldr	r0, [sp, #8]
   24dec:	ldr	r0, [r0, #32]
   24df0:	ldrh	r0, [r0, #14]
   24df4:	cmp	r0, #2
   24df8:	bne	24e00 <flatcc_builder_end_struct@@Base+0x28>
   24dfc:	b	24e20 <flatcc_builder_end_struct@@Base+0x48>
   24e00:	ldr	r0, [pc, #112]	; 24e78 <flatcc_builder_end_struct@@Base+0xa0>
   24e04:	add	r0, pc, r0
   24e08:	ldr	r1, [pc, #108]	; 24e7c <flatcc_builder_end_struct@@Base+0xa4>
   24e0c:	add	r1, pc, r1
   24e10:	ldr	r2, [pc, #104]	; 24e80 <flatcc_builder_end_struct@@Base+0xa8>
   24e14:	add	r3, pc, r2
   24e18:	movw	r2, #872	; 0x368
   24e1c:	bl	12b80 <__assert_fail@plt>
   24e20:	ldr	r0, [sp, #8]
   24e24:	ldr	r1, [sp, #8]
   24e28:	ldr	r1, [r1, #16]
   24e2c:	ldr	r2, [sp, #8]
   24e30:	ldr	r2, [r2, #20]
   24e34:	ldr	r3, [sp, #8]
   24e38:	ldrh	r3, [r3, #130]	; 0x82
   24e3c:	bl	24594 <flatcc_builder_create_struct@@Base>
   24e40:	str	r0, [sp, #4]
   24e44:	movw	r1, #0
   24e48:	cmp	r1, r0
   24e4c:	bne	24e5c <flatcc_builder_end_struct@@Base+0x84>
   24e50:	movw	r0, #0
   24e54:	str	r0, [fp, #-4]
   24e58:	b	24e6c <flatcc_builder_end_struct@@Base+0x94>
   24e5c:	ldr	r0, [sp, #8]
   24e60:	bl	24b74 <flatcc_builder_end_buffer@@Base+0x164>
   24e64:	ldr	r0, [sp, #4]
   24e68:	str	r0, [fp, #-4]
   24e6c:	ldr	r0, [fp, #-4]
   24e70:	mov	sp, fp
   24e74:	pop	{fp, pc}
   24e78:	andeq	ip, r0, sp, asr r6
   24e7c:	andeq	ip, r0, sl, lsl #7
   24e80:	andeq	ip, r0, r9, ror r6

00024e84 <flatcc_builder_extend_vector@@Base>:
   24e84:	push	{fp, lr}
   24e88:	mov	fp, sp
   24e8c:	sub	sp, sp, #16
   24e90:	str	r0, [sp, #8]
   24e94:	str	r1, [sp, #4]
   24e98:	ldr	r0, [sp, #8]
   24e9c:	ldr	r1, [sp, #4]
   24ea0:	ldr	r2, [sp, #8]
   24ea4:	ldr	r2, [r2, #32]
   24ea8:	ldr	r2, [r2, #24]
   24eac:	bl	24ef0 <flatcc_builder_extend_vector@@Base+0x6c>
   24eb0:	cmp	r0, #0
   24eb4:	beq	24ec4 <flatcc_builder_extend_vector@@Base+0x40>
   24eb8:	movw	r0, #0
   24ebc:	str	r0, [fp, #-4]
   24ec0:	b	24ee4 <flatcc_builder_extend_vector@@Base+0x60>
   24ec4:	ldr	r0, [sp, #8]
   24ec8:	ldr	r1, [sp, #8]
   24ecc:	ldr	r1, [r1, #32]
   24ed0:	ldr	r1, [r1, #16]
   24ed4:	ldr	r2, [sp, #4]
   24ed8:	mul	r1, r1, r2
   24edc:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   24ee0:	str	r0, [fp, #-4]
   24ee4:	ldr	r0, [fp, #-4]
   24ee8:	mov	sp, fp
   24eec:	pop	{fp, pc}
   24ef0:	push	{fp, lr}
   24ef4:	mov	fp, sp
   24ef8:	sub	sp, sp, #24
   24efc:	str	r0, [fp, #-8]
   24f00:	str	r1, [sp, #12]
   24f04:	str	r2, [sp, #8]
   24f08:	ldr	r0, [fp, #-8]
   24f0c:	ldr	r0, [r0, #32]
   24f10:	ldr	r0, [r0, #20]
   24f14:	str	r0, [sp, #4]
   24f18:	ldr	r0, [sp, #4]
   24f1c:	ldr	r1, [sp, #12]
   24f20:	add	r0, r0, r1
   24f24:	str	r0, [sp]
   24f28:	ldr	r0, [sp, #4]
   24f2c:	ldr	r1, [sp]
   24f30:	cmp	r0, r1
   24f34:	bhi	24f48 <flatcc_builder_extend_vector@@Base+0xc4>
   24f38:	ldr	r0, [sp]
   24f3c:	ldr	r1, [sp, #8]
   24f40:	cmp	r0, r1
   24f44:	bls	24f98 <flatcc_builder_extend_vector@@Base+0x114>
   24f48:	ldr	r0, [sp, #4]
   24f4c:	ldr	r1, [sp]
   24f50:	cmp	r0, r1
   24f54:	bhi	24f6c <flatcc_builder_extend_vector@@Base+0xe8>
   24f58:	ldr	r0, [sp]
   24f5c:	ldr	r1, [sp, #8]
   24f60:	cmp	r0, r1
   24f64:	bhi	24f6c <flatcc_builder_extend_vector@@Base+0xe8>
   24f68:	b	24f8c <flatcc_builder_extend_vector@@Base+0x108>
   24f6c:	ldr	r0, [pc, #72]	; 24fbc <flatcc_builder_extend_vector@@Base+0x138>
   24f70:	add	r0, pc, r0
   24f74:	ldr	r1, [pc, #68]	; 24fc0 <flatcc_builder_extend_vector@@Base+0x13c>
   24f78:	add	r1, pc, r1
   24f7c:	ldr	r2, [pc, #64]	; 24fc4 <flatcc_builder_extend_vector@@Base+0x140>
   24f80:	add	r3, pc, r2
   24f84:	movw	r2, #892	; 0x37c
   24f88:	bl	12b80 <__assert_fail@plt>
   24f8c:	mvn	r0, #0
   24f90:	str	r0, [fp, #-4]
   24f94:	b	24fb0 <flatcc_builder_extend_vector@@Base+0x12c>
   24f98:	ldr	r0, [sp]
   24f9c:	ldr	r1, [fp, #-8]
   24fa0:	ldr	r1, [r1, #32]
   24fa4:	str	r0, [r1, #20]
   24fa8:	movw	r0, #0
   24fac:	str	r0, [fp, #-4]
   24fb0:	ldr	r0, [fp, #-4]
   24fb4:	mov	sp, fp
   24fb8:	pop	{fp, pc}
   24fbc:	andeq	sp, r0, ip, ror #5
   24fc0:	andeq	ip, r0, lr, lsl r2
   24fc4:	strdeq	sp, [r0], -r7

00024fc8 <flatcc_builder_vector_push@@Base>:
   24fc8:	push	{fp, lr}
   24fcc:	mov	fp, sp
   24fd0:	sub	sp, sp, #16
   24fd4:	str	r0, [sp, #8]
   24fd8:	str	r1, [sp, #4]
   24fdc:	ldr	r0, [sp, #8]
   24fe0:	ldr	r0, [r0, #32]
   24fe4:	ldrh	r0, [r0, #14]
   24fe8:	cmp	r0, #4
   24fec:	bne	24ff4 <flatcc_builder_vector_push@@Base+0x2c>
   24ff0:	b	25014 <flatcc_builder_vector_push@@Base+0x4c>
   24ff4:	ldr	r0, [pc, #196]	; 250c0 <flatcc_builder_vector_push@@Base+0xf8>
   24ff8:	add	r0, pc, r0
   24ffc:	ldr	r1, [pc, #192]	; 250c4 <flatcc_builder_vector_push@@Base+0xfc>
   25000:	add	r1, pc, r1
   25004:	ldr	r2, [pc, #188]	; 250c8 <flatcc_builder_vector_push@@Base+0x100>
   25008:	add	r3, pc, r2
   2500c:	movw	r2, #907	; 0x38b
   25010:	bl	12b80 <__assert_fail@plt>
   25014:	ldr	r0, [sp, #8]
   25018:	ldr	r0, [r0, #32]
   2501c:	ldr	r0, [r0, #20]
   25020:	ldr	r1, [sp, #8]
   25024:	ldr	r1, [r1, #32]
   25028:	ldr	r1, [r1, #24]
   2502c:	cmp	r0, r1
   25030:	bls	25084 <flatcc_builder_vector_push@@Base+0xbc>
   25034:	ldr	r0, [sp, #8]
   25038:	ldr	r0, [r0, #32]
   2503c:	ldr	r0, [r0, #20]
   25040:	ldr	r1, [sp, #8]
   25044:	ldr	r1, [r1, #32]
   25048:	ldr	r1, [r1, #24]
   2504c:	cmp	r0, r1
   25050:	bhi	25058 <flatcc_builder_vector_push@@Base+0x90>
   25054:	b	25078 <flatcc_builder_vector_push@@Base+0xb0>
   25058:	ldr	r0, [pc, #108]	; 250cc <flatcc_builder_vector_push@@Base+0x104>
   2505c:	add	r0, pc, r0
   25060:	ldr	r1, [pc, #104]	; 250d0 <flatcc_builder_vector_push@@Base+0x108>
   25064:	add	r1, pc, r1
   25068:	ldr	r2, [pc, #100]	; 250d4 <flatcc_builder_vector_push@@Base+0x10c>
   2506c:	add	r3, pc, r2
   25070:	movw	r2, #908	; 0x38c
   25074:	bl	12b80 <__assert_fail@plt>
   25078:	movw	r0, #0
   2507c:	str	r0, [fp, #-4]
   25080:	b	250b4 <flatcc_builder_vector_push@@Base+0xec>
   25084:	ldr	r0, [sp, #8]
   25088:	ldr	r0, [r0, #32]
   2508c:	ldr	r1, [r0, #20]
   25090:	add	r1, r1, #1
   25094:	str	r1, [r0, #20]
   25098:	ldr	r0, [sp, #8]
   2509c:	ldr	r1, [sp, #4]
   250a0:	ldr	r2, [sp, #8]
   250a4:	ldr	r2, [r2, #32]
   250a8:	ldr	r2, [r2, #16]
   250ac:	bl	250d8 <flatcc_builder_vector_push@@Base+0x110>
   250b0:	str	r0, [fp, #-4]
   250b4:	ldr	r0, [fp, #-4]
   250b8:	mov	sp, fp
   250bc:	pop	{fp, pc}
   250c0:	ldrdeq	ip, [r0], -r8
   250c4:	muleq	r0, r6, r1
   250c8:	strdeq	ip, [r0], -r4
   250cc:	andeq	ip, r0, r3, ror #9
   250d0:	andeq	ip, r0, r2, lsr r1
   250d4:	muleq	r0, r0, r4
   250d8:	push	{fp, lr}
   250dc:	mov	fp, sp
   250e0:	sub	sp, sp, #24
   250e4:	str	r0, [fp, #-8]
   250e8:	str	r1, [sp, #12]
   250ec:	str	r2, [sp, #8]
   250f0:	ldr	r0, [fp, #-8]
   250f4:	ldr	r1, [sp, #8]
   250f8:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   250fc:	str	r0, [sp, #4]
   25100:	movw	r1, #0
   25104:	cmp	r0, r1
   25108:	bne	25118 <flatcc_builder_vector_push@@Base+0x150>
   2510c:	movw	r0, #0
   25110:	str	r0, [fp, #-4]
   25114:	b	25130 <flatcc_builder_vector_push@@Base+0x168>
   25118:	ldr	r0, [sp, #4]
   2511c:	ldr	r1, [sp, #12]
   25120:	ldr	r2, [sp, #8]
   25124:	bl	12a78 <memcpy@plt>
   25128:	ldr	r0, [sp, #4]
   2512c:	str	r0, [fp, #-4]
   25130:	ldr	r0, [fp, #-4]
   25134:	mov	sp, fp
   25138:	pop	{fp, pc}

0002513c <flatcc_builder_append_vector@@Base>:
   2513c:	push	{fp, lr}
   25140:	mov	fp, sp
   25144:	sub	sp, sp, #16
   25148:	str	r0, [sp, #8]
   2514c:	str	r1, [sp, #4]
   25150:	str	r2, [sp]
   25154:	ldr	r0, [sp, #8]
   25158:	ldr	r0, [r0, #32]
   2515c:	ldrh	r0, [r0, #14]
   25160:	cmp	r0, #4
   25164:	bne	2516c <flatcc_builder_append_vector@@Base+0x30>
   25168:	b	2518c <flatcc_builder_append_vector@@Base+0x50>
   2516c:	ldr	r0, [pc, #116]	; 251e8 <flatcc_builder_append_vector@@Base+0xac>
   25170:	add	r0, pc, r0
   25174:	ldr	r1, [pc, #112]	; 251ec <flatcc_builder_append_vector@@Base+0xb0>
   25178:	add	r1, pc, r1
   2517c:	ldr	r2, [pc, #108]	; 251f0 <flatcc_builder_append_vector@@Base+0xb4>
   25180:	add	r3, pc, r2
   25184:	movw	r2, #915	; 0x393
   25188:	bl	12b80 <__assert_fail@plt>
   2518c:	ldr	r0, [sp, #8]
   25190:	ldr	r1, [sp]
   25194:	ldr	r2, [sp, #8]
   25198:	ldr	r2, [r2, #32]
   2519c:	ldr	r2, [r2, #24]
   251a0:	bl	24ef0 <flatcc_builder_extend_vector@@Base+0x6c>
   251a4:	cmp	r0, #0
   251a8:	beq	251b8 <flatcc_builder_append_vector@@Base+0x7c>
   251ac:	movw	r0, #0
   251b0:	str	r0, [fp, #-4]
   251b4:	b	251dc <flatcc_builder_append_vector@@Base+0xa0>
   251b8:	ldr	r0, [sp, #8]
   251bc:	ldr	r1, [sp, #4]
   251c0:	ldr	r2, [sp, #8]
   251c4:	ldr	r2, [r2, #32]
   251c8:	ldr	r2, [r2, #16]
   251cc:	ldr	r3, [sp]
   251d0:	mul	r2, r2, r3
   251d4:	bl	250d8 <flatcc_builder_vector_push@@Base+0x110>
   251d8:	str	r0, [fp, #-4]
   251dc:	ldr	r0, [fp, #-4]
   251e0:	mov	sp, fp
   251e4:	pop	{fp, pc}
   251e8:	andeq	ip, r0, r0, ror #6
   251ec:	andeq	ip, r0, lr, lsl r0
   251f0:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>

000251f4 <flatcc_builder_extend_offset_vector@@Base>:
   251f4:	push	{fp, lr}
   251f8:	mov	fp, sp
   251fc:	sub	sp, sp, #16
   25200:	ldr	r2, [pc, #68]	; 2524c <flatcc_builder_extend_offset_vector@@Base+0x58>
   25204:	str	r0, [sp, #8]
   25208:	str	r1, [sp, #4]
   2520c:	ldr	r0, [sp, #8]
   25210:	ldr	r1, [sp, #4]
   25214:	bl	24ef0 <flatcc_builder_extend_vector@@Base+0x6c>
   25218:	cmp	r0, #0
   2521c:	beq	2522c <flatcc_builder_extend_offset_vector@@Base+0x38>
   25220:	movw	r0, #0
   25224:	str	r0, [fp, #-4]
   25228:	b	25240 <flatcc_builder_extend_offset_vector@@Base+0x4c>
   2522c:	ldr	r0, [sp, #8]
   25230:	ldr	r1, [sp, #4]
   25234:	lsl	r1, r1, #2
   25238:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   2523c:	str	r0, [fp, #-4]
   25240:	ldr	r0, [fp, #-4]
   25244:	mov	sp, fp
   25248:	pop	{fp, pc}
   2524c:	svccc	0x00ffffff

00025250 <flatcc_builder_offset_vector_push@@Base>:
   25250:	push	{fp, lr}
   25254:	mov	fp, sp
   25258:	sub	sp, sp, #16
   2525c:	str	r0, [sp, #8]
   25260:	str	r1, [sp, #4]
   25264:	ldr	r0, [sp, #8]
   25268:	ldr	r0, [r0, #32]
   2526c:	ldrh	r0, [r0, #14]
   25270:	cmp	r0, #5
   25274:	bne	2527c <flatcc_builder_offset_vector_push@@Base+0x2c>
   25278:	b	2529c <flatcc_builder_offset_vector_push@@Base+0x4c>
   2527c:	ldr	r0, [pc, #152]	; 2531c <flatcc_builder_offset_vector_push@@Base+0xcc>
   25280:	add	r0, pc, r0
   25284:	ldr	r1, [pc, #148]	; 25320 <flatcc_builder_offset_vector_push@@Base+0xd0>
   25288:	add	r1, pc, r1
   2528c:	ldr	r2, [pc, #144]	; 25324 <flatcc_builder_offset_vector_push@@Base+0xd4>
   25290:	add	r3, pc, r2
   25294:	movw	r2, #934	; 0x3a6
   25298:	bl	12b80 <__assert_fail@plt>
   2529c:	ldr	r0, [pc, #132]	; 25328 <flatcc_builder_offset_vector_push@@Base+0xd8>
   252a0:	ldr	r1, [sp, #8]
   252a4:	ldr	r1, [r1, #32]
   252a8:	ldr	r1, [r1, #20]
   252ac:	cmp	r1, r0
   252b0:	bne	252c0 <flatcc_builder_offset_vector_push@@Base+0x70>
   252b4:	movw	r0, #0
   252b8:	str	r0, [fp, #-4]
   252bc:	b	25310 <flatcc_builder_offset_vector_push@@Base+0xc0>
   252c0:	ldr	r0, [sp, #8]
   252c4:	ldr	r0, [r0, #32]
   252c8:	ldr	r1, [r0, #20]
   252cc:	add	r1, r1, #1
   252d0:	str	r1, [r0, #20]
   252d4:	ldr	r0, [sp, #8]
   252d8:	movw	r1, #4
   252dc:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   252e0:	str	r0, [sp]
   252e4:	movw	r1, #0
   252e8:	cmp	r1, r0
   252ec:	bne	252fc <flatcc_builder_offset_vector_push@@Base+0xac>
   252f0:	movw	r0, #0
   252f4:	str	r0, [fp, #-4]
   252f8:	b	25310 <flatcc_builder_offset_vector_push@@Base+0xc0>
   252fc:	ldr	r0, [sp, #4]
   25300:	ldr	r1, [sp]
   25304:	str	r0, [r1]
   25308:	ldr	r0, [sp]
   2530c:	str	r0, [fp, #-4]
   25310:	ldr	r0, [fp, #-4]
   25314:	mov	sp, fp
   25318:	pop	{fp, pc}
   2531c:	andeq	ip, r0, r9, asr #6
   25320:	andeq	fp, r0, lr, lsl #30
   25324:	andeq	ip, r0, ip, ror #6
   25328:	svccc	0x00ffffff

0002532c <flatcc_builder_append_offset_vector@@Base>:
   2532c:	push	{fp, lr}
   25330:	mov	fp, sp
   25334:	sub	sp, sp, #16
   25338:	str	r0, [sp, #8]
   2533c:	str	r1, [sp, #4]
   25340:	str	r2, [sp]
   25344:	ldr	r0, [sp, #8]
   25348:	ldr	r0, [r0, #32]
   2534c:	ldrh	r0, [r0, #14]
   25350:	cmp	r0, #5
   25354:	bne	2535c <flatcc_builder_append_offset_vector@@Base+0x30>
   25358:	b	2537c <flatcc_builder_append_offset_vector@@Base+0x50>
   2535c:	ldr	r0, [pc, #96]	; 253c4 <flatcc_builder_append_offset_vector@@Base+0x98>
   25360:	add	r0, pc, r0
   25364:	ldr	r1, [pc, #92]	; 253c8 <flatcc_builder_append_offset_vector@@Base+0x9c>
   25368:	add	r1, pc, r1
   2536c:	ldr	r2, [pc, #88]	; 253cc <flatcc_builder_append_offset_vector@@Base+0xa0>
   25370:	add	r3, pc, r2
   25374:	movw	r2, #948	; 0x3b4
   25378:	bl	12b80 <__assert_fail@plt>
   2537c:	ldr	r2, [pc, #76]	; 253d0 <flatcc_builder_append_offset_vector@@Base+0xa4>
   25380:	ldr	r0, [sp, #8]
   25384:	ldr	r1, [sp]
   25388:	bl	24ef0 <flatcc_builder_extend_vector@@Base+0x6c>
   2538c:	cmp	r0, #0
   25390:	beq	253a0 <flatcc_builder_append_offset_vector@@Base+0x74>
   25394:	movw	r0, #0
   25398:	str	r0, [fp, #-4]
   2539c:	b	253b8 <flatcc_builder_append_offset_vector@@Base+0x8c>
   253a0:	ldr	r0, [sp, #8]
   253a4:	ldr	r1, [sp, #4]
   253a8:	ldr	r2, [sp]
   253ac:	lsl	r2, r2, #2
   253b0:	bl	250d8 <flatcc_builder_vector_push@@Base+0x110>
   253b4:	str	r0, [fp, #-4]
   253b8:	ldr	r0, [fp, #-4]
   253bc:	mov	sp, fp
   253c0:	pop	{fp, pc}
   253c4:	andeq	ip, r0, r9, ror #4
   253c8:	andeq	fp, r0, lr, lsr #28
   253cc:	andeq	ip, r0, lr, ror #5
   253d0:	svccc	0x00ffffff

000253d4 <flatcc_builder_extend_string@@Base>:
   253d4:	push	{fp, lr}
   253d8:	mov	fp, sp
   253dc:	sub	sp, sp, #16
   253e0:	str	r0, [sp, #8]
   253e4:	str	r1, [sp, #4]
   253e8:	ldr	r0, [sp, #8]
   253ec:	ldr	r0, [r0, #32]
   253f0:	ldrh	r0, [r0, #14]
   253f4:	cmp	r0, #6
   253f8:	bne	25400 <flatcc_builder_extend_string@@Base+0x2c>
   253fc:	b	25420 <flatcc_builder_extend_string@@Base+0x4c>
   25400:	ldr	r0, [pc, #88]	; 25460 <flatcc_builder_extend_string@@Base+0x8c>
   25404:	add	r0, pc, r0
   25408:	ldr	r1, [pc, #84]	; 25464 <flatcc_builder_extend_string@@Base+0x90>
   2540c:	add	r1, pc, r1
   25410:	ldr	r2, [pc, #80]	; 25468 <flatcc_builder_extend_string@@Base+0x94>
   25414:	add	r3, pc, r2
   25418:	movw	r2, #957	; 0x3bd
   2541c:	bl	12b80 <__assert_fail@plt>
   25420:	ldr	r0, [sp, #8]
   25424:	ldr	r1, [sp, #4]
   25428:	mvn	r2, #0
   2542c:	bl	24ef0 <flatcc_builder_extend_vector@@Base+0x6c>
   25430:	cmp	r0, #0
   25434:	beq	25444 <flatcc_builder_extend_string@@Base+0x70>
   25438:	movw	r0, #0
   2543c:	str	r0, [fp, #-4]
   25440:	b	25454 <flatcc_builder_extend_string@@Base+0x80>
   25444:	ldr	r0, [sp, #8]
   25448:	ldr	r1, [sp, #4]
   2544c:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   25450:	str	r0, [fp, #-4]
   25454:	ldr	r0, [fp, #-4]
   25458:	mov	sp, fp
   2545c:	pop	{fp, pc}
   25460:	andeq	ip, r0, lr, asr #5
   25464:	andeq	fp, r0, sl, lsl #27
   25468:	andeq	ip, r0, sl, ror #5

0002546c <flatcc_builder_append_string@@Base>:
   2546c:	push	{fp, lr}
   25470:	mov	fp, sp
   25474:	sub	sp, sp, #16
   25478:	str	r0, [sp, #8]
   2547c:	str	r1, [sp, #4]
   25480:	str	r2, [sp]
   25484:	ldr	r0, [sp, #8]
   25488:	ldr	r0, [r0, #32]
   2548c:	ldrh	r0, [r0, #14]
   25490:	cmp	r0, #6
   25494:	bne	2549c <flatcc_builder_append_string@@Base+0x30>
   25498:	b	254bc <flatcc_builder_append_string@@Base+0x50>
   2549c:	ldr	r0, [pc, #92]	; 25500 <flatcc_builder_append_string@@Base+0x94>
   254a0:	add	r0, pc, r0
   254a4:	ldr	r1, [pc, #88]	; 25504 <flatcc_builder_append_string@@Base+0x98>
   254a8:	add	r1, pc, r1
   254ac:	ldr	r2, [pc, #84]	; 25508 <flatcc_builder_append_string@@Base+0x9c>
   254b0:	add	r3, pc, r2
   254b4:	movw	r2, #966	; 0x3c6
   254b8:	bl	12b80 <__assert_fail@plt>
   254bc:	ldr	r0, [sp, #8]
   254c0:	ldr	r1, [sp]
   254c4:	mvn	r2, #0
   254c8:	bl	24ef0 <flatcc_builder_extend_vector@@Base+0x6c>
   254cc:	cmp	r0, #0
   254d0:	beq	254e0 <flatcc_builder_append_string@@Base+0x74>
   254d4:	movw	r0, #0
   254d8:	str	r0, [fp, #-4]
   254dc:	b	254f4 <flatcc_builder_append_string@@Base+0x88>
   254e0:	ldr	r0, [sp, #8]
   254e4:	ldr	r1, [sp, #4]
   254e8:	ldr	r2, [sp]
   254ec:	bl	250d8 <flatcc_builder_vector_push@@Base+0x110>
   254f0:	str	r0, [fp, #-4]
   254f4:	ldr	r0, [fp, #-4]
   254f8:	mov	sp, fp
   254fc:	pop	{fp, pc}
   25500:	andeq	ip, r0, r2, lsr r2
   25504:	andeq	fp, r0, lr, ror #25
   25508:	andeq	ip, r0, sp, lsl #5

0002550c <flatcc_builder_append_string_str@@Base>:
   2550c:	push	{fp, lr}
   25510:	mov	fp, sp
   25514:	sub	sp, sp, #24
   25518:	str	r0, [fp, #-4]
   2551c:	str	r1, [fp, #-8]
   25520:	ldr	r0, [fp, #-4]
   25524:	ldr	r1, [fp, #-8]
   25528:	ldr	r2, [fp, #-8]
   2552c:	str	r0, [sp, #12]
   25530:	mov	r0, r2
   25534:	str	r1, [sp, #8]
   25538:	bl	12b08 <strlen@plt>
   2553c:	ldr	r1, [sp, #12]
   25540:	str	r0, [sp, #4]
   25544:	mov	r0, r1
   25548:	ldr	r1, [sp, #8]
   2554c:	ldr	r2, [sp, #4]
   25550:	bl	2546c <flatcc_builder_append_string@@Base>
   25554:	mov	sp, fp
   25558:	pop	{fp, pc}

0002555c <flatcc_builder_append_string_strn@@Base>:
   2555c:	push	{fp, lr}
   25560:	mov	fp, sp
   25564:	sub	sp, sp, #24
   25568:	str	r0, [fp, #-4]
   2556c:	str	r1, [fp, #-8]
   25570:	str	r2, [sp, #12]
   25574:	ldr	r0, [fp, #-4]
   25578:	ldr	r1, [fp, #-8]
   2557c:	ldr	r2, [fp, #-8]
   25580:	ldr	r3, [sp, #12]
   25584:	str	r0, [sp, #8]
   25588:	mov	r0, r2
   2558c:	str	r1, [sp, #4]
   25590:	mov	r1, r3
   25594:	bl	255b8 <flatcc_builder_append_string_strn@@Base+0x5c>
   25598:	ldr	r1, [sp, #8]
   2559c:	str	r0, [sp]
   255a0:	mov	r0, r1
   255a4:	ldr	r1, [sp, #4]
   255a8:	ldr	r2, [sp]
   255ac:	bl	2546c <flatcc_builder_append_string@@Base>
   255b0:	mov	sp, fp
   255b4:	pop	{fp, pc}
   255b8:	push	{fp, lr}
   255bc:	mov	fp, sp
   255c0:	sub	sp, sp, #16
   255c4:	str	r0, [fp, #-4]
   255c8:	str	r1, [sp, #8]
   255cc:	ldr	r0, [fp, #-4]
   255d0:	ldr	r2, [sp, #8]
   255d4:	mov	r1, #0
   255d8:	bl	12b50 <memchr@plt>
   255dc:	str	r0, [sp, #4]
   255e0:	ldr	r0, [sp, #4]
   255e4:	movw	r1, #0
   255e8:	cmp	r0, r1
   255ec:	beq	25604 <flatcc_builder_append_string_strn@@Base+0xa8>
   255f0:	ldr	r0, [sp, #4]
   255f4:	ldr	r1, [fp, #-4]
   255f8:	sub	r0, r0, r1
   255fc:	str	r0, [sp]
   25600:	b	2560c <flatcc_builder_append_string_strn@@Base+0xb0>
   25604:	ldr	r0, [sp, #8]
   25608:	str	r0, [sp]
   2560c:	ldr	r0, [sp]
   25610:	mov	sp, fp
   25614:	pop	{fp, pc}

00025618 <flatcc_builder_truncate_vector@@Base>:
   25618:	push	{fp, lr}
   2561c:	mov	fp, sp
   25620:	sub	sp, sp, #16
   25624:	str	r0, [sp, #8]
   25628:	str	r1, [sp, #4]
   2562c:	ldr	r0, [sp, #8]
   25630:	ldr	r0, [r0, #32]
   25634:	ldrh	r0, [r0, #14]
   25638:	cmp	r0, #4
   2563c:	bne	25644 <flatcc_builder_truncate_vector@@Base+0x2c>
   25640:	b	25664 <flatcc_builder_truncate_vector@@Base+0x4c>
   25644:	ldr	r0, [pc, #192]	; 2570c <flatcc_builder_truncate_vector@@Base+0xf4>
   25648:	add	r0, pc, r0
   2564c:	ldr	r1, [pc, #188]	; 25710 <flatcc_builder_truncate_vector@@Base+0xf8>
   25650:	add	r1, pc, r1
   25654:	ldr	r2, [pc, #184]	; 25714 <flatcc_builder_truncate_vector@@Base+0xfc>
   25658:	add	r3, pc, r2
   2565c:	movw	r2, #985	; 0x3d9
   25660:	bl	12b80 <__assert_fail@plt>
   25664:	ldr	r0, [sp, #8]
   25668:	ldr	r0, [r0, #32]
   2566c:	ldr	r0, [r0, #20]
   25670:	ldr	r1, [sp, #4]
   25674:	cmp	r0, r1
   25678:	bcs	256c4 <flatcc_builder_truncate_vector@@Base+0xac>
   2567c:	ldr	r0, [sp, #8]
   25680:	ldr	r0, [r0, #32]
   25684:	ldr	r0, [r0, #20]
   25688:	ldr	r1, [sp, #4]
   2568c:	cmp	r0, r1
   25690:	bcc	25698 <flatcc_builder_truncate_vector@@Base+0x80>
   25694:	b	256b8 <flatcc_builder_truncate_vector@@Base+0xa0>
   25698:	ldr	r0, [pc, #120]	; 25718 <flatcc_builder_truncate_vector@@Base+0x100>
   2569c:	add	r0, pc, r0
   256a0:	ldr	r1, [pc, #116]	; 2571c <flatcc_builder_truncate_vector@@Base+0x104>
   256a4:	add	r1, pc, r1
   256a8:	ldr	r2, [pc, #112]	; 25720 <flatcc_builder_truncate_vector@@Base+0x108>
   256ac:	add	r3, pc, r2
   256b0:	movw	r2, #986	; 0x3da
   256b4:	bl	12b80 <__assert_fail@plt>
   256b8:	mvn	r0, #0
   256bc:	str	r0, [fp, #-4]
   256c0:	b	25700 <flatcc_builder_truncate_vector@@Base+0xe8>
   256c4:	ldr	r0, [sp, #4]
   256c8:	ldr	r1, [sp, #8]
   256cc:	ldr	r1, [r1, #32]
   256d0:	ldr	r2, [r1, #20]
   256d4:	sub	r0, r2, r0
   256d8:	str	r0, [r1, #20]
   256dc:	ldr	r0, [sp, #8]
   256e0:	ldr	r1, [sp, #8]
   256e4:	ldr	r1, [r1, #32]
   256e8:	ldr	r1, [r1, #16]
   256ec:	ldr	r2, [sp, #4]
   256f0:	mul	r1, r1, r2
   256f4:	bl	25724 <flatcc_builder_truncate_vector@@Base+0x10c>
   256f8:	movw	r0, #0
   256fc:	str	r0, [fp, #-4]
   25700:	ldr	r0, [fp, #-4]
   25704:	mov	sp, fp
   25708:	pop	{fp, pc}
   2570c:	andeq	fp, r0, r8, lsl #29
   25710:	andeq	fp, r0, r6, asr #22
   25714:	andeq	ip, r0, r2, lsr r1
   25718:	andeq	ip, r0, sp, lsr #2
   2571c:	strdeq	fp, [r0], -r2
   25720:	ldrdeq	ip, [r0], -lr
   25724:	push	{fp, lr}
   25728:	mov	fp, sp
   2572c:	sub	sp, sp, #8
   25730:	str	r0, [sp, #4]
   25734:	str	r1, [sp]
   25738:	ldr	r0, [sp]
   2573c:	ldr	r1, [sp, #4]
   25740:	ldr	r2, [r1, #20]
   25744:	sub	r0, r2, r0
   25748:	str	r0, [r1, #20]
   2574c:	ldr	r0, [sp, #4]
   25750:	ldr	r0, [r0, #16]
   25754:	ldr	r1, [sp, #4]
   25758:	ldr	r1, [r1, #20]
   2575c:	add	r0, r0, r1
   25760:	ldr	r2, [sp]
   25764:	movw	r1, #0
   25768:	and	r1, r1, #255	; 0xff
   2576c:	bl	12b2c <memset@plt>
   25770:	mov	sp, fp
   25774:	pop	{fp, pc}

00025778 <flatcc_builder_truncate_offset_vector@@Base>:
   25778:	push	{fp, lr}
   2577c:	mov	fp, sp
   25780:	sub	sp, sp, #16
   25784:	str	r0, [sp, #8]
   25788:	str	r1, [sp, #4]
   2578c:	ldr	r0, [sp, #8]
   25790:	ldr	r0, [r0, #32]
   25794:	ldrh	r0, [r0, #14]
   25798:	cmp	r0, #5
   2579c:	bne	257a4 <flatcc_builder_truncate_offset_vector@@Base+0x2c>
   257a0:	b	257c4 <flatcc_builder_truncate_offset_vector@@Base+0x4c>
   257a4:	ldr	r0, [pc, #192]	; 2586c <flatcc_builder_truncate_offset_vector@@Base+0xf4>
   257a8:	add	r0, pc, r0
   257ac:	ldr	r1, [pc, #188]	; 25870 <flatcc_builder_truncate_offset_vector@@Base+0xf8>
   257b0:	add	r1, pc, r1
   257b4:	ldr	r2, [pc, #184]	; 25874 <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   257b8:	add	r3, pc, r2
   257bc:	movw	r2, #994	; 0x3e2
   257c0:	bl	12b80 <__assert_fail@plt>
   257c4:	ldr	r0, [sp, #8]
   257c8:	ldr	r0, [r0, #32]
   257cc:	ldr	r0, [r0, #20]
   257d0:	ldr	r1, [sp, #4]
   257d4:	cmp	r0, r1
   257d8:	bcs	25824 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   257dc:	ldr	r0, [sp, #8]
   257e0:	ldr	r0, [r0, #32]
   257e4:	ldr	r0, [r0, #20]
   257e8:	ldr	r1, [sp, #4]
   257ec:	cmp	r0, r1
   257f0:	bcc	257f8 <flatcc_builder_truncate_offset_vector@@Base+0x80>
   257f4:	b	25818 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   257f8:	ldr	r0, [pc, #120]	; 25878 <flatcc_builder_truncate_offset_vector@@Base+0x100>
   257fc:	add	r0, pc, r0
   25800:	ldr	r1, [pc, #116]	; 2587c <flatcc_builder_truncate_offset_vector@@Base+0x104>
   25804:	add	r1, pc, r1
   25808:	ldr	r2, [pc, #112]	; 25880 <flatcc_builder_truncate_offset_vector@@Base+0x108>
   2580c:	add	r3, pc, r2
   25810:	movw	r2, #995	; 0x3e3
   25814:	bl	12b80 <__assert_fail@plt>
   25818:	mvn	r0, #0
   2581c:	str	r0, [fp, #-4]
   25820:	b	25860 <flatcc_builder_truncate_offset_vector@@Base+0xe8>
   25824:	ldr	r0, [sp, #4]
   25828:	ldr	r1, [sp, #8]
   2582c:	ldr	r1, [r1, #32]
   25830:	ldr	r2, [r1, #20]
   25834:	sub	r0, r2, r0
   25838:	str	r0, [r1, #20]
   2583c:	ldr	r0, [sp, #8]
   25840:	ldr	r1, [sp, #8]
   25844:	ldr	r1, [r1, #32]
   25848:	ldr	r1, [r1, #16]
   2584c:	ldr	r2, [sp, #4]
   25850:	mul	r1, r1, r2
   25854:	bl	25724 <flatcc_builder_truncate_vector@@Base+0x10c>
   25858:	movw	r0, #0
   2585c:	str	r0, [fp, #-4]
   25860:	ldr	r0, [fp, #-4]
   25864:	mov	sp, fp
   25868:	pop	{fp, pc}
   2586c:	andeq	fp, r0, r1, lsr #28
   25870:	andeq	fp, r0, r6, ror #19
   25874:	andeq	ip, r0, r5, lsr r0
   25878:	andeq	ip, r0, r7, lsr r0
   2587c:	muleq	r0, r2, r9
   25880:	andeq	fp, r0, r1, ror #31

00025884 <flatcc_builder_truncate_string@@Base>:
   25884:	push	{fp, lr}
   25888:	mov	fp, sp
   2588c:	sub	sp, sp, #16
   25890:	str	r0, [sp, #8]
   25894:	str	r1, [sp, #4]
   25898:	ldr	r0, [sp, #8]
   2589c:	ldr	r0, [r0, #32]
   258a0:	ldrh	r0, [r0, #14]
   258a4:	cmp	r0, #6
   258a8:	bne	258b0 <flatcc_builder_truncate_string@@Base+0x2c>
   258ac:	b	258d0 <flatcc_builder_truncate_string@@Base+0x4c>
   258b0:	ldr	r0, [pc, #176]	; 25968 <flatcc_builder_truncate_string@@Base+0xe4>
   258b4:	add	r0, pc, r0
   258b8:	ldr	r1, [pc, #172]	; 2596c <flatcc_builder_truncate_string@@Base+0xe8>
   258bc:	add	r1, pc, r1
   258c0:	ldr	r2, [pc, #168]	; 25970 <flatcc_builder_truncate_string@@Base+0xec>
   258c4:	add	r3, pc, r2
   258c8:	movw	r2, #1003	; 0x3eb
   258cc:	bl	12b80 <__assert_fail@plt>
   258d0:	ldr	r0, [sp, #8]
   258d4:	ldr	r0, [r0, #32]
   258d8:	ldr	r0, [r0, #20]
   258dc:	ldr	r1, [sp, #4]
   258e0:	cmp	r0, r1
   258e4:	bcs	25930 <flatcc_builder_truncate_string@@Base+0xac>
   258e8:	ldr	r0, [sp, #8]
   258ec:	ldr	r0, [r0, #32]
   258f0:	ldr	r0, [r0, #20]
   258f4:	ldr	r1, [sp, #4]
   258f8:	cmp	r0, r1
   258fc:	bcc	25904 <flatcc_builder_truncate_string@@Base+0x80>
   25900:	b	25924 <flatcc_builder_truncate_string@@Base+0xa0>
   25904:	ldr	r0, [pc, #104]	; 25974 <flatcc_builder_truncate_string@@Base+0xf0>
   25908:	add	r0, pc, r0
   2590c:	ldr	r1, [pc, #100]	; 25978 <flatcc_builder_truncate_string@@Base+0xf4>
   25910:	add	r1, pc, r1
   25914:	ldr	r2, [pc, #96]	; 2597c <flatcc_builder_truncate_string@@Base+0xf8>
   25918:	add	r3, pc, r2
   2591c:	movw	r2, #1004	; 0x3ec
   25920:	bl	12b80 <__assert_fail@plt>
   25924:	mvn	r0, #0
   25928:	str	r0, [fp, #-4]
   2592c:	b	2595c <flatcc_builder_truncate_string@@Base+0xd8>
   25930:	ldr	r0, [sp, #4]
   25934:	ldr	r1, [sp, #8]
   25938:	ldr	r1, [r1, #32]
   2593c:	ldr	r2, [r1, #20]
   25940:	sub	r0, r2, r0
   25944:	str	r0, [r1, #20]
   25948:	ldr	r0, [sp, #8]
   2594c:	ldr	r1, [sp, #4]
   25950:	bl	25724 <flatcc_builder_truncate_vector@@Base+0x10c>
   25954:	movw	r0, #0
   25958:	str	r0, [fp, #-4]
   2595c:	ldr	r0, [fp, #-4]
   25960:	mov	sp, fp
   25964:	pop	{fp, pc}
   25968:	andeq	fp, r0, lr, lsl lr
   2596c:	ldrdeq	fp, [r0], -sl
   25970:	andeq	fp, r0, sl, lsr #31
   25974:	andeq	fp, r0, r5, lsr #31
   25978:	andeq	fp, r0, r6, lsl #17
   2597c:	andeq	fp, r0, r6, asr pc

00025980 <flatcc_builder_start_vector@@Base>:
   25980:	push	{fp, lr}
   25984:	mov	fp, sp
   25988:	sub	sp, sp, #24
   2598c:	str	r0, [fp, #-8]
   25990:	str	r1, [sp, #12]
   25994:	strh	r2, [sp, #10]
   25998:	str	r3, [sp, #4]
   2599c:	add	r0, sp, #10
   259a0:	movw	r1, #4
   259a4:	uxth	r1, r1
   259a8:	bl	25a2c <flatcc_builder_start_vector@@Base+0xac>
   259ac:	ldr	r0, [fp, #-8]
   259b0:	ldrh	r1, [sp, #10]
   259b4:	bl	24844 <flatcc_builder_start_buffer@@Base+0x178>
   259b8:	cmp	r0, #0
   259bc:	beq	259cc <flatcc_builder_start_vector@@Base+0x4c>
   259c0:	mvn	r0, #0
   259c4:	str	r0, [fp, #-4]
   259c8:	b	25a20 <flatcc_builder_start_vector@@Base+0xa0>
   259cc:	ldr	r0, [sp, #12]
   259d0:	ldr	r1, [fp, #-8]
   259d4:	ldr	r1, [r1, #32]
   259d8:	str	r0, [r1, #16]
   259dc:	ldr	r0, [fp, #-8]
   259e0:	ldr	r0, [r0, #32]
   259e4:	movw	r1, #0
   259e8:	str	r1, [r0, #20]
   259ec:	ldr	r0, [sp, #4]
   259f0:	ldr	r1, [fp, #-8]
   259f4:	ldr	r1, [r1, #32]
   259f8:	str	r0, [r1, #24]
   259fc:	ldr	r0, [fp, #-8]
   25a00:	ldr	r0, [r0, #32]
   25a04:	movw	r1, #4
   25a08:	strh	r1, [r0, #14]
   25a0c:	ldr	r0, [fp, #-8]
   25a10:	mvn	r1, #3
   25a14:	bl	24ca0 <flatcc_builder_start_struct@@Base+0x70>
   25a18:	movw	r0, #0
   25a1c:	str	r0, [fp, #-4]
   25a20:	ldr	r0, [fp, #-4]
   25a24:	mov	sp, fp
   25a28:	pop	{fp, pc}
   25a2c:	sub	sp, sp, #8
   25a30:	str	r0, [sp, #4]
   25a34:	strh	r1, [sp, #2]
   25a38:	ldr	r0, [sp, #4]
   25a3c:	ldrh	r0, [r0]
   25a40:	ldrh	r1, [sp, #2]
   25a44:	cmp	r0, r1
   25a48:	bge	25a58 <flatcc_builder_start_vector@@Base+0xd8>
   25a4c:	ldrh	r0, [sp, #2]
   25a50:	ldr	r1, [sp, #4]
   25a54:	strh	r0, [r1]
   25a58:	add	sp, sp, #8
   25a5c:	bx	lr

00025a60 <flatcc_builder_start_offset_vector@@Base>:
   25a60:	push	{fp, lr}
   25a64:	mov	fp, sp
   25a68:	sub	sp, sp, #8
   25a6c:	str	r0, [sp]
   25a70:	ldr	r0, [sp]
   25a74:	movw	r1, #4
   25a78:	uxth	r1, r1
   25a7c:	bl	24844 <flatcc_builder_start_buffer@@Base+0x178>
   25a80:	cmp	r0, #0
   25a84:	beq	25a94 <flatcc_builder_start_offset_vector@@Base+0x34>
   25a88:	mvn	r0, #0
   25a8c:	str	r0, [sp, #4]
   25a90:	b	25ad8 <flatcc_builder_start_offset_vector@@Base+0x78>
   25a94:	ldr	r0, [sp]
   25a98:	ldr	r0, [r0, #32]
   25a9c:	movw	r1, #4
   25aa0:	str	r1, [r0, #16]
   25aa4:	ldr	r0, [sp]
   25aa8:	ldr	r0, [r0, #32]
   25aac:	movw	r1, #0
   25ab0:	str	r1, [r0, #20]
   25ab4:	ldr	r0, [sp]
   25ab8:	ldr	r0, [r0, #32]
   25abc:	movw	r1, #5
   25ac0:	strh	r1, [r0, #14]
   25ac4:	ldr	r0, [sp]
   25ac8:	mvn	r1, #3
   25acc:	bl	24ca0 <flatcc_builder_start_struct@@Base+0x70>
   25ad0:	movw	r0, #0
   25ad4:	str	r0, [sp, #4]
   25ad8:	ldr	r0, [sp, #4]
   25adc:	mov	sp, fp
   25ae0:	pop	{fp, pc}

00025ae4 <flatcc_builder_create_offset_vector@@Base>:
   25ae4:	push	{fp, lr}
   25ae8:	mov	fp, sp
   25aec:	sub	sp, sp, #24
   25af0:	str	r0, [fp, #-8]
   25af4:	str	r1, [sp, #12]
   25af8:	str	r2, [sp, #8]
   25afc:	ldr	r0, [fp, #-8]
   25b00:	bl	25a60 <flatcc_builder_start_offset_vector@@Base>
   25b04:	cmp	r0, #0
   25b08:	beq	25b18 <flatcc_builder_create_offset_vector@@Base+0x34>
   25b0c:	movw	r0, #0
   25b10:	str	r0, [fp, #-4]
   25b14:	b	25b60 <flatcc_builder_create_offset_vector@@Base+0x7c>
   25b18:	ldr	r0, [fp, #-8]
   25b1c:	ldr	r1, [sp, #8]
   25b20:	bl	251f4 <flatcc_builder_extend_offset_vector@@Base>
   25b24:	str	r0, [sp, #4]
   25b28:	movw	r1, #0
   25b2c:	cmp	r0, r1
   25b30:	bne	25b40 <flatcc_builder_create_offset_vector@@Base+0x5c>
   25b34:	movw	r0, #0
   25b38:	str	r0, [fp, #-4]
   25b3c:	b	25b60 <flatcc_builder_create_offset_vector@@Base+0x7c>
   25b40:	ldr	r0, [sp, #4]
   25b44:	ldr	r1, [sp, #12]
   25b48:	ldr	r2, [sp, #8]
   25b4c:	lsl	r2, r2, #2
   25b50:	bl	12a78 <memcpy@plt>
   25b54:	ldr	r0, [fp, #-8]
   25b58:	bl	25b6c <flatcc_builder_end_offset_vector@@Base>
   25b5c:	str	r0, [fp, #-4]
   25b60:	ldr	r0, [fp, #-4]
   25b64:	mov	sp, fp
   25b68:	pop	{fp, pc}

00025b6c <flatcc_builder_end_offset_vector@@Base>:
   25b6c:	push	{fp, lr}
   25b70:	mov	fp, sp
   25b74:	sub	sp, sp, #16
   25b78:	str	r0, [sp, #8]
   25b7c:	ldr	r0, [sp, #8]
   25b80:	ldr	r0, [r0, #32]
   25b84:	ldrh	r0, [r0, #14]
   25b88:	cmp	r0, #5
   25b8c:	bne	25b94 <flatcc_builder_end_offset_vector@@Base+0x28>
   25b90:	b	25bb4 <flatcc_builder_end_offset_vector@@Base+0x48>
   25b94:	ldr	r0, [pc, #108]	; 25c08 <flatcc_builder_end_offset_vector@@Base+0x9c>
   25b98:	add	r0, pc, r0
   25b9c:	ldr	r1, [pc, #104]	; 25c0c <flatcc_builder_end_offset_vector@@Base+0xa0>
   25ba0:	add	r1, pc, r1
   25ba4:	ldr	r2, [pc, #100]	; 25c10 <flatcc_builder_end_offset_vector@@Base+0xa4>
   25ba8:	add	r3, pc, r2
   25bac:	movw	r2, #1480	; 0x5c8
   25bb0:	bl	12b80 <__assert_fail@plt>
   25bb4:	ldr	r0, [sp, #8]
   25bb8:	ldr	r1, [sp, #8]
   25bbc:	ldr	r1, [r1, #16]
   25bc0:	ldr	r2, [sp, #8]
   25bc4:	ldr	r2, [r2, #32]
   25bc8:	ldr	r2, [r2, #20]
   25bcc:	bl	26f68 <flatcc_builder_create_offset_vector_direct@@Base>
   25bd0:	str	r0, [sp, #4]
   25bd4:	movw	r1, #0
   25bd8:	cmp	r1, r0
   25bdc:	bne	25bec <flatcc_builder_end_offset_vector@@Base+0x80>
   25be0:	movw	r0, #0
   25be4:	str	r0, [fp, #-4]
   25be8:	b	25bfc <flatcc_builder_end_offset_vector@@Base+0x90>
   25bec:	ldr	r0, [sp, #8]
   25bf0:	bl	24b74 <flatcc_builder_end_buffer@@Base+0x164>
   25bf4:	ldr	r0, [sp, #4]
   25bf8:	str	r0, [fp, #-4]
   25bfc:	ldr	r0, [fp, #-4]
   25c00:	mov	sp, fp
   25c04:	pop	{fp, pc}
   25c08:	andeq	fp, r0, r1, lsr sl
   25c0c:	strdeq	fp, [r0], -r6
   25c10:	andeq	ip, r0, r0, asr r0

00025c14 <flatcc_builder_start_string@@Base>:
   25c14:	push	{fp, lr}
   25c18:	mov	fp, sp
   25c1c:	sub	sp, sp, #8
   25c20:	str	r0, [sp]
   25c24:	ldr	r0, [sp]
   25c28:	movw	r1, #1
   25c2c:	uxth	r1, r1
   25c30:	bl	24844 <flatcc_builder_start_buffer@@Base+0x178>
   25c34:	cmp	r0, #0
   25c38:	beq	25c48 <flatcc_builder_start_string@@Base+0x34>
   25c3c:	mvn	r0, #0
   25c40:	str	r0, [sp, #4]
   25c44:	b	25c8c <flatcc_builder_start_string@@Base+0x78>
   25c48:	ldr	r0, [sp]
   25c4c:	ldr	r0, [r0, #32]
   25c50:	movw	r1, #1
   25c54:	str	r1, [r0, #16]
   25c58:	ldr	r0, [sp]
   25c5c:	ldr	r0, [r0, #32]
   25c60:	movw	r1, #0
   25c64:	str	r1, [r0, #20]
   25c68:	ldr	r0, [sp]
   25c6c:	ldr	r0, [r0, #32]
   25c70:	movw	r1, #6
   25c74:	strh	r1, [r0, #14]
   25c78:	ldr	r0, [sp]
   25c7c:	mvn	r1, #3
   25c80:	bl	24ca0 <flatcc_builder_start_struct@@Base+0x70>
   25c84:	movw	r0, #0
   25c88:	str	r0, [sp, #4]
   25c8c:	ldr	r0, [sp, #4]
   25c90:	mov	sp, fp
   25c94:	pop	{fp, pc}

00025c98 <flatcc_builder_reserve_table@@Base>:
   25c98:	push	{fp, lr}
   25c9c:	mov	fp, sp
   25ca0:	sub	sp, sp, #8
   25ca4:	str	r0, [sp, #4]
   25ca8:	str	r1, [sp]
   25cac:	ldr	r0, [sp]
   25cb0:	cmp	r0, #0
   25cb4:	blt	25cbc <flatcc_builder_reserve_table@@Base+0x24>
   25cb8:	b	25cdc <flatcc_builder_reserve_table@@Base+0x44>
   25cbc:	ldr	r0, [pc, #44]	; 25cf0 <flatcc_builder_reserve_table@@Base+0x58>
   25cc0:	add	r0, pc, r0
   25cc4:	ldr	r1, [pc, #40]	; 25cf4 <flatcc_builder_reserve_table@@Base+0x5c>
   25cc8:	add	r1, pc, r1
   25ccc:	ldr	r2, [pc, #36]	; 25cf8 <flatcc_builder_reserve_table@@Base+0x60>
   25cd0:	add	r3, pc, r2
   25cd4:	movw	r2, #1065	; 0x429
   25cd8:	bl	12b80 <__assert_fail@plt>
   25cdc:	ldr	r0, [sp, #4]
   25ce0:	ldr	r1, [sp]
   25ce4:	bl	25cfc <flatcc_builder_reserve_table@@Base+0x64>
   25ce8:	mov	sp, fp
   25cec:	pop	{fp, pc}
   25cf0:	andeq	fp, r0, r0, asr ip
   25cf4:	andeq	fp, r0, lr, asr #9
   25cf8:	strdeq	fp, [r0], -pc	; <UNPREDICTABLE>
   25cfc:	push	{fp, lr}
   25d00:	mov	fp, sp
   25d04:	sub	sp, sp, #24
   25d08:	str	r0, [fp, #-8]
   25d0c:	str	r1, [sp, #12]
   25d10:	ldr	r0, [fp, #-8]
   25d14:	ldr	r0, [r0, #32]
   25d18:	ldr	r1, [r0, #16]
   25d1c:	ldrh	r0, [r0, #28]
   25d20:	add	r0, r1, r0, lsl #1
   25d24:	str	r0, [sp, #8]
   25d28:	ldr	r0, [sp, #12]
   25d2c:	add	r0, r0, #2
   25d30:	lsl	r0, r0, #1
   25d34:	str	r0, [sp, #4]
   25d38:	ldr	r0, [fp, #-8]
   25d3c:	ldr	r2, [sp, #8]
   25d40:	ldr	r3, [sp, #4]
   25d44:	movw	r1, #0
   25d48:	movw	ip, #1
   25d4c:	str	ip, [sp]
   25d50:	bl	239d8 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   25d54:	ldr	r1, [fp, #-8]
   25d58:	str	r0, [r1, #4]
   25d5c:	movw	r1, #0
   25d60:	cmp	r0, r1
   25d64:	bne	25d74 <flatcc_builder_reserve_table@@Base+0xdc>
   25d68:	mvn	r0, #0
   25d6c:	str	r0, [fp, #-4]
   25d70:	b	25de8 <flatcc_builder_reserve_table@@Base+0x150>
   25d74:	ldr	r0, [fp, #-8]
   25d78:	ldr	r1, [r0, #4]
   25d7c:	add	r1, r1, #4
   25d80:	str	r1, [r0, #4]
   25d84:	ldr	r0, [fp, #-8]
   25d88:	ldr	r0, [r0, #32]
   25d8c:	ldr	r0, [r0, #20]
   25d90:	str	r0, [sp, #8]
   25d94:	ldr	r0, [sp, #12]
   25d98:	lsl	r0, r0, #1
   25d9c:	add	r0, r0, #1
   25da0:	str	r0, [sp, #4]
   25da4:	ldr	r0, [fp, #-8]
   25da8:	ldr	r2, [sp, #8]
   25dac:	ldr	r3, [sp, #4]
   25db0:	movw	r1, #3
   25db4:	movw	ip, #0
   25db8:	str	ip, [sp]
   25dbc:	bl	239d8 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   25dc0:	ldr	r1, [fp, #-8]
   25dc4:	str	r0, [r1]
   25dc8:	movw	r1, #0
   25dcc:	cmp	r0, r1
   25dd0:	bne	25de0 <flatcc_builder_reserve_table@@Base+0x148>
   25dd4:	mvn	r0, #0
   25dd8:	str	r0, [fp, #-4]
   25ddc:	b	25de8 <flatcc_builder_reserve_table@@Base+0x150>
   25de0:	movw	r0, #0
   25de4:	str	r0, [fp, #-4]
   25de8:	ldr	r0, [fp, #-4]
   25dec:	mov	sp, fp
   25df0:	pop	{fp, pc}

00025df4 <flatcc_builder_start_table@@Base>:
   25df4:	push	{fp, lr}
   25df8:	mov	fp, sp
   25dfc:	sub	sp, sp, #16
   25e00:	str	r0, [sp, #8]
   25e04:	str	r1, [sp, #4]
   25e08:	ldr	r0, [sp, #8]
   25e0c:	movw	r1, #4
   25e10:	uxth	r1, r1
   25e14:	bl	24844 <flatcc_builder_start_buffer@@Base+0x178>
   25e18:	cmp	r0, #0
   25e1c:	beq	25e2c <flatcc_builder_start_table@@Base+0x38>
   25e20:	mvn	r0, #0
   25e24:	str	r0, [fp, #-4]
   25e28:	b	25efc <flatcc_builder_start_table@@Base+0x108>
   25e2c:	ldr	r0, [pc, #212]	; 25f08 <flatcc_builder_start_table@@Base+0x114>
   25e30:	ldr	r1, [sp, #8]
   25e34:	ldr	r1, [r1, #4]
   25e38:	ldr	r2, [sp, #8]
   25e3c:	ldr	r2, [r2, #52]	; 0x34
   25e40:	sub	r1, r1, r2
   25e44:	ldr	r2, [sp, #8]
   25e48:	ldr	r2, [r2, #32]
   25e4c:	str	r1, [r2, #16]
   25e50:	ldr	r1, [sp, #8]
   25e54:	ldr	r1, [r1]
   25e58:	ldr	r2, [sp, #8]
   25e5c:	ldr	r2, [r2, #76]	; 0x4c
   25e60:	sub	r1, r1, r2
   25e64:	ldr	r2, [sp, #8]
   25e68:	ldr	r2, [r2, #32]
   25e6c:	str	r1, [r2, #20]
   25e70:	ldr	r1, [sp, #8]
   25e74:	ldr	r1, [r1, #12]
   25e78:	ldr	r2, [sp, #8]
   25e7c:	ldr	r2, [r2, #32]
   25e80:	str	r1, [r2, #24]
   25e84:	ldr	r1, [sp, #8]
   25e88:	ldrh	r1, [r1, #8]
   25e8c:	ldr	r2, [sp, #8]
   25e90:	ldr	r2, [r2, #32]
   25e94:	strh	r1, [r2, #28]
   25e98:	ldr	r1, [sp, #8]
   25e9c:	movw	r2, #0
   25ea0:	str	r2, [r1, #12]
   25ea4:	ldr	r1, [sp, #8]
   25ea8:	str	r0, [r1, #12]
   25eac:	ldr	r0, [sp, #8]
   25eb0:	movw	r1, #0
   25eb4:	strh	r1, [r0, #8]
   25eb8:	ldr	r0, [sp, #8]
   25ebc:	ldr	r0, [r0, #32]
   25ec0:	movw	r1, #3
   25ec4:	strh	r1, [r0, #14]
   25ec8:	ldr	r0, [sp, #8]
   25ecc:	ldr	r1, [sp, #4]
   25ed0:	bl	25cfc <flatcc_builder_reserve_table@@Base+0x64>
   25ed4:	cmp	r0, #0
   25ed8:	beq	25ee8 <flatcc_builder_start_table@@Base+0xf4>
   25edc:	mvn	r0, #0
   25ee0:	str	r0, [fp, #-4]
   25ee4:	b	25efc <flatcc_builder_start_table@@Base+0x108>
   25ee8:	ldr	r0, [sp, #8]
   25eec:	movw	r1, #65532	; 0xfffc
   25ef0:	bl	24ca0 <flatcc_builder_start_struct@@Base+0x70>
   25ef4:	movw	r0, #0
   25ef8:	str	r0, [fp, #-4]
   25efc:	ldr	r0, [fp, #-4]
   25f00:	mov	sp, fp
   25f04:	pop	{fp, pc}
   25f08:	svccs	0x00693b52

00025f0c <flatcc_builder_create_vtable@@Base>:
   25f0c:	push	{fp, lr}
   25f10:	mov	fp, sp
   25f14:	sub	sp, sp, #104	; 0x68
   25f18:	str	r0, [fp, #-8]
   25f1c:	str	r1, [fp, #-12]
   25f20:	strh	r2, [fp, #-14]
   25f24:	movw	r0, #0
   25f28:	str	r0, [sp, #12]
   25f2c:	str	r0, [sp, #16]
   25f30:	ldrh	r0, [fp, #-14]
   25f34:	cmp	r0, #0
   25f38:	ble	25f7c <flatcc_builder_create_vtable@@Base+0x70>
   25f3c:	ldrh	r0, [fp, #-14]
   25f40:	ldr	r1, [sp, #12]
   25f44:	add	r0, r1, r0
   25f48:	str	r0, [sp, #12]
   25f4c:	ldr	r0, [fp, #-12]
   25f50:	add	r1, sp, #12
   25f54:	add	r1, r1, #8
   25f58:	ldr	r2, [sp, #16]
   25f5c:	str	r0, [r1, r2, lsl #3]
   25f60:	ldrh	r0, [fp, #-14]
   25f64:	ldr	r2, [sp, #16]
   25f68:	add	r1, r1, r2, lsl #3
   25f6c:	str	r0, [r1, #4]
   25f70:	ldr	r0, [sp, #16]
   25f74:	add	r0, r0, #1
   25f78:	str	r0, [sp, #16]
   25f7c:	ldr	r0, [fp, #-8]
   25f80:	ldr	r0, [r0, #152]	; 0x98
   25f84:	cmp	r0, #0
   25f88:	bne	25fc8 <flatcc_builder_create_vtable@@Base+0xbc>
   25f8c:	ldr	r0, [fp, #-8]
   25f90:	ldr	r0, [r0, #180]	; 0xb4
   25f94:	cmp	r0, #0
   25f98:	bne	25fc8 <flatcc_builder_create_vtable@@Base+0xbc>
   25f9c:	ldr	r0, [fp, #-8]
   25fa0:	add	r1, sp, #12
   25fa4:	bl	26010 <flatcc_builder_create_vtable@@Base+0x104>
   25fa8:	str	r0, [fp, #-20]	; 0xffffffec
   25fac:	movw	r1, #0
   25fb0:	cmp	r1, r0
   25fb4:	bne	25fc4 <flatcc_builder_create_vtable@@Base+0xb8>
   25fb8:	movw	r0, #0
   25fbc:	str	r0, [fp, #-4]
   25fc0:	b	26004 <flatcc_builder_create_vtable@@Base+0xf8>
   25fc4:	b	25ffc <flatcc_builder_create_vtable@@Base+0xf0>
   25fc8:	ldr	r0, [fp, #-8]
   25fcc:	add	r1, sp, #12
   25fd0:	bl	24080 <flatcc_builder_embed_buffer@@Base+0x39c>
   25fd4:	str	r0, [fp, #-20]	; 0xffffffec
   25fd8:	movw	r1, #0
   25fdc:	cmp	r1, r0
   25fe0:	bne	25ff0 <flatcc_builder_create_vtable@@Base+0xe4>
   25fe4:	movw	r0, #0
   25fe8:	str	r0, [fp, #-4]
   25fec:	b	26004 <flatcc_builder_create_vtable@@Base+0xf8>
   25ff0:	ldr	r0, [fp, #-20]	; 0xffffffec
   25ff4:	add	r0, r0, #1
   25ff8:	str	r0, [fp, #-20]	; 0xffffffec
   25ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   26000:	str	r0, [fp, #-4]
   26004:	ldr	r0, [fp, #-4]
   26008:	mov	sp, fp
   2600c:	pop	{fp, pc}
   26010:	push	{fp, lr}
   26014:	mov	fp, sp
   26018:	sub	sp, sp, #24
   2601c:	str	r0, [fp, #-4]
   26020:	str	r1, [fp, #-8]
   26024:	ldr	r0, [fp, #-4]
   26028:	ldr	r0, [r0, #140]	; 0x8c
   2602c:	str	r0, [sp, #12]
   26030:	ldr	r0, [sp, #12]
   26034:	ldr	r1, [fp, #-8]
   26038:	ldr	r1, [r1]
   2603c:	add	r0, r0, r1
   26040:	ldr	r1, [fp, #-4]
   26044:	str	r0, [r1, #140]	; 0x8c
   26048:	ldr	r0, [fp, #-4]
   2604c:	ldr	r0, [r0, #140]	; 0x8c
   26050:	ldr	r1, [sp, #12]
   26054:	cmp	r0, r1
   26058:	bge	2607c <flatcc_builder_create_vtable@@Base+0x170>
   2605c:	ldr	r0, [pc, #168]	; 2610c <flatcc_builder_create_vtable@@Base+0x200>
   26060:	add	r0, pc, r0
   26064:	ldr	r1, [pc, #164]	; 26110 <flatcc_builder_create_vtable@@Base+0x204>
   26068:	add	r1, pc, r1
   2606c:	ldr	r2, [pc, #160]	; 26114 <flatcc_builder_create_vtable@@Base+0x208>
   26070:	add	r3, pc, r2
   26074:	movw	r2, #673	; 0x2a1
   26078:	bl	12b80 <__assert_fail@plt>
   2607c:	ldr	r0, [fp, #-4]
   26080:	ldr	r0, [r0, #44]	; 0x2c
   26084:	ldr	r1, [fp, #-4]
   26088:	ldr	r1, [r1, #36]	; 0x24
   2608c:	ldr	r2, [fp, #-8]
   26090:	add	r2, r2, #8
   26094:	ldr	r3, [fp, #-8]
   26098:	ldr	r3, [r3, #4]
   2609c:	ldr	ip, [sp, #12]
   260a0:	ldr	lr, [fp, #-8]
   260a4:	ldr	lr, [lr]
   260a8:	str	r0, [sp, #8]
   260ac:	mov	r0, r1
   260b0:	mov	r1, r2
   260b4:	mov	r2, r3
   260b8:	mov	r3, ip
   260bc:	str	lr, [sp]
   260c0:	ldr	ip, [sp, #8]
   260c4:	blx	ip
   260c8:	cmp	r0, #0
   260cc:	beq	260f0 <flatcc_builder_create_vtable@@Base+0x1e4>
   260d0:	ldr	r0, [pc, #40]	; 26100 <flatcc_builder_create_vtable@@Base+0x1f4>
   260d4:	add	r0, pc, r0
   260d8:	ldr	r1, [pc, #36]	; 26104 <flatcc_builder_create_vtable@@Base+0x1f8>
   260dc:	add	r1, pc, r1
   260e0:	ldr	r2, [pc, #32]	; 26108 <flatcc_builder_create_vtable@@Base+0x1fc>
   260e4:	add	r3, pc, r2
   260e8:	movw	r2, #677	; 0x2a5
   260ec:	bl	12b80 <__assert_fail@plt>
   260f0:	ldr	r0, [sp, #12]
   260f4:	add	r0, r0, #1
   260f8:	mov	sp, fp
   260fc:	pop	{fp, pc}
   26100:	andeq	ip, r0, pc, ror r2
   26104:	strheq	fp, [r0], -sl
   26108:	andeq	ip, r0, sl, ror #3
   2610c:	strdeq	ip, [r0], -r3
   26110:	andeq	fp, r0, lr, lsr #2
   26114:	andeq	ip, r0, lr, asr r2

00026118 <flatcc_builder_create_cached_vtable@@Base>:
   26118:	push	{fp, lr}
   2611c:	mov	fp, sp
   26120:	sub	sp, sp, #48	; 0x30
   26124:	str	r0, [fp, #-8]
   26128:	str	r1, [fp, #-12]
   2612c:	strh	r2, [fp, #-14]
   26130:	str	r3, [fp, #-20]	; 0xffffffec
   26134:	ldr	r0, [fp, #-8]
   26138:	ldr	r1, [fp, #-20]	; 0xffffffec
   2613c:	bl	26424 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   26140:	str	r0, [sp, #12]
   26144:	movw	r1, #0
   26148:	cmp	r0, r1
   2614c:	bne	2615c <flatcc_builder_create_cached_vtable@@Base+0x44>
   26150:	movw	r0, #0
   26154:	str	r0, [fp, #-4]
   26158:	b	26418 <flatcc_builder_create_cached_vtable@@Base+0x300>
   2615c:	ldr	r0, [sp, #12]
   26160:	str	r0, [sp, #16]
   26164:	ldr	r0, [sp, #16]
   26168:	ldr	r0, [r0]
   2616c:	str	r0, [sp, #8]
   26170:	movw	r0, #0
   26174:	str	r0, [sp, #20]
   26178:	ldr	r0, [sp, #8]
   2617c:	cmp	r0, #0
   26180:	beq	26284 <flatcc_builder_create_cached_vtable@@Base+0x16c>
   26184:	ldr	r0, [fp, #-8]
   26188:	ldr	r0, [r0, #100]	; 0x64
   2618c:	ldr	r1, [sp, #8]
   26190:	add	r0, r0, r1
   26194:	str	r0, [sp, #24]
   26198:	ldr	r0, [fp, #-8]
   2619c:	ldr	r0, [r0, #68]	; 0x44
   261a0:	ldr	r1, [sp, #24]
   261a4:	ldr	r1, [r1, #8]
   261a8:	add	r0, r0, r1
   261ac:	str	r0, [sp, #4]
   261b0:	ldr	r0, [sp, #4]
   261b4:	ldrh	r0, [r0]
   261b8:	ldrh	r1, [fp, #-14]
   261bc:	cmp	r0, r1
   261c0:	bne	261e0 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   261c4:	ldr	r0, [fp, #-12]
   261c8:	ldr	r1, [sp, #4]
   261cc:	ldrh	r2, [fp, #-14]
   261d0:	bl	12a90 <memcmp@plt>
   261d4:	movw	r1, #0
   261d8:	cmp	r1, r0
   261dc:	beq	261fc <flatcc_builder_create_cached_vtable@@Base+0xe4>
   261e0:	ldr	r0, [sp, #24]
   261e4:	add	r0, r0, #12
   261e8:	str	r0, [sp, #16]
   261ec:	ldr	r0, [sp, #24]
   261f0:	ldr	r0, [r0, #12]
   261f4:	str	r0, [sp, #8]
   261f8:	b	26178 <flatcc_builder_create_cached_vtable@@Base+0x60>
   261fc:	ldr	r0, [sp, #24]
   26200:	ldr	r0, [r0, #4]
   26204:	ldr	r1, [fp, #-8]
   26208:	ldr	r1, [r1, #152]	; 0x98
   2620c:	cmp	r0, r1
   26210:	beq	26238 <flatcc_builder_create_cached_vtable@@Base+0x120>
   26214:	ldr	r0, [sp, #24]
   26218:	str	r0, [sp, #20]
   2621c:	ldr	r0, [sp, #24]
   26220:	add	r0, r0, #12
   26224:	str	r0, [sp, #16]
   26228:	ldr	r0, [sp, #24]
   2622c:	ldr	r0, [r0, #12]
   26230:	str	r0, [sp, #8]
   26234:	b	26178 <flatcc_builder_create_cached_vtable@@Base+0x60>
   26238:	ldr	r0, [sp, #16]
   2623c:	ldr	r1, [sp, #12]
   26240:	cmp	r0, r1
   26244:	beq	26274 <flatcc_builder_create_cached_vtable@@Base+0x15c>
   26248:	ldr	r0, [sp, #24]
   2624c:	ldr	r0, [r0, #12]
   26250:	ldr	r1, [sp, #16]
   26254:	str	r0, [r1]
   26258:	ldr	r0, [sp, #12]
   2625c:	ldr	r0, [r0]
   26260:	ldr	r1, [sp, #24]
   26264:	str	r0, [r1, #12]
   26268:	ldr	r0, [sp, #8]
   2626c:	ldr	r1, [sp, #12]
   26270:	str	r0, [r1]
   26274:	ldr	r0, [sp, #24]
   26278:	ldr	r0, [r0]
   2627c:	str	r0, [fp, #-4]
   26280:	b	26418 <flatcc_builder_create_cached_vtable@@Base+0x300>
   26284:	ldr	r0, [fp, #-8]
   26288:	ldr	r1, [fp, #-8]
   2628c:	ldr	r2, [r1, #124]	; 0x7c
   26290:	movw	r1, #6
   26294:	movw	r3, #16
   26298:	movw	ip, #0
   2629c:	str	ip, [sp]
   262a0:	bl	239d8 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   262a4:	str	r0, [sp, #24]
   262a8:	movw	r1, #0
   262ac:	cmp	r0, r1
   262b0:	bne	262c0 <flatcc_builder_create_cached_vtable@@Base+0x1a8>
   262b4:	movw	r0, #0
   262b8:	str	r0, [fp, #-4]
   262bc:	b	26418 <flatcc_builder_create_cached_vtable@@Base+0x300>
   262c0:	ldr	r0, [fp, #-8]
   262c4:	ldr	r0, [r0, #124]	; 0x7c
   262c8:	str	r0, [sp, #8]
   262cc:	ldr	r0, [fp, #-8]
   262d0:	ldr	r1, [r0, #124]	; 0x7c
   262d4:	add	r1, r1, #16
   262d8:	str	r1, [r0, #124]	; 0x7c
   262dc:	ldr	r0, [fp, #-8]
   262e0:	ldr	r0, [r0, #152]	; 0x98
   262e4:	ldr	r1, [sp, #24]
   262e8:	str	r0, [r1, #4]
   262ec:	ldr	r0, [sp, #12]
   262f0:	ldr	r0, [r0]
   262f4:	ldr	r1, [sp, #24]
   262f8:	str	r0, [r1, #12]
   262fc:	ldr	r0, [sp, #8]
   26300:	ldr	r1, [sp, #12]
   26304:	str	r0, [r1]
   26308:	ldr	r0, [fp, #-8]
   2630c:	ldr	r1, [fp, #-12]
   26310:	ldrh	r2, [fp, #-14]
   26314:	bl	25f0c <flatcc_builder_create_vtable@@Base>
   26318:	ldr	r1, [sp, #24]
   2631c:	str	r0, [r1]
   26320:	movw	r1, #0
   26324:	cmp	r1, r0
   26328:	bne	26338 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2632c:	movw	r0, #0
   26330:	str	r0, [fp, #-4]
   26334:	b	26418 <flatcc_builder_create_cached_vtable@@Base+0x300>
   26338:	ldr	r0, [sp, #20]
   2633c:	movw	r1, #0
   26340:	cmp	r0, r1
   26344:	beq	2635c <flatcc_builder_create_cached_vtable@@Base+0x244>
   26348:	ldr	r0, [sp, #20]
   2634c:	ldr	r0, [r0, #8]
   26350:	ldr	r1, [sp, #24]
   26354:	str	r0, [r1, #8]
   26358:	b	2640c <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   2635c:	ldr	r0, [fp, #-8]
   26360:	ldr	r0, [r0, #172]	; 0xac
   26364:	cmp	r0, #0
   26368:	beq	26398 <flatcc_builder_create_cached_vtable@@Base+0x280>
   2636c:	ldr	r0, [fp, #-8]
   26370:	ldr	r0, [r0, #172]	; 0xac
   26374:	ldr	r1, [fp, #-8]
   26378:	ldr	r1, [r1, #120]	; 0x78
   2637c:	ldrh	r2, [fp, #-14]
   26380:	add	r1, r1, r2
   26384:	cmp	r0, r1
   26388:	bcs	26398 <flatcc_builder_create_cached_vtable@@Base+0x280>
   2638c:	ldr	r0, [fp, #-8]
   26390:	bl	23454 <flatcc_builder_flush_vtable_cache@@Base>
   26394:	b	26408 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   26398:	ldr	r0, [fp, #-8]
   2639c:	ldr	r1, [fp, #-8]
   263a0:	ldr	r2, [r1, #120]	; 0x78
   263a4:	ldrh	r3, [fp, #-14]
   263a8:	movw	r1, #2
   263ac:	movw	ip, #0
   263b0:	str	ip, [sp]
   263b4:	bl	239d8 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   263b8:	str	r0, [sp, #4]
   263bc:	movw	r1, #0
   263c0:	cmp	r0, r1
   263c4:	bne	263d4 <flatcc_builder_create_cached_vtable@@Base+0x2bc>
   263c8:	mvn	r0, #0
   263cc:	str	r0, [fp, #-4]
   263d0:	b	26418 <flatcc_builder_create_cached_vtable@@Base+0x300>
   263d4:	ldr	r0, [fp, #-8]
   263d8:	ldr	r0, [r0, #120]	; 0x78
   263dc:	ldr	r1, [sp, #24]
   263e0:	str	r0, [r1, #8]
   263e4:	ldrh	r0, [fp, #-14]
   263e8:	ldr	r1, [fp, #-8]
   263ec:	ldr	r2, [r1, #120]	; 0x78
   263f0:	add	r0, r2, r0
   263f4:	str	r0, [r1, #120]	; 0x78
   263f8:	ldr	r0, [sp, #4]
   263fc:	ldr	r1, [fp, #-12]
   26400:	ldrh	r2, [fp, #-14]
   26404:	bl	12a78 <memcpy@plt>
   26408:	b	2640c <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   2640c:	ldr	r0, [sp, #24]
   26410:	ldr	r0, [r0]
   26414:	str	r0, [fp, #-4]
   26418:	ldr	r0, [fp, #-4]
   2641c:	mov	sp, fp
   26420:	pop	{fp, pc}
   26424:	push	{fp, lr}
   26428:	mov	fp, sp
   2642c:	sub	sp, sp, #16
   26430:	str	r0, [sp, #8]
   26434:	str	r1, [sp, #4]
   26438:	ldr	r0, [sp, #8]
   2643c:	ldr	r0, [r0, #116]	; 0x74
   26440:	cmp	r0, #0
   26444:	bne	26468 <flatcc_builder_create_cached_vtable@@Base+0x350>
   26448:	ldr	r0, [sp, #8]
   2644c:	bl	28f30 <flatcc_builder_get_emit_context@@Base+0xe8>
   26450:	cmp	r0, #0
   26454:	beq	26464 <flatcc_builder_create_cached_vtable@@Base+0x34c>
   26458:	movw	r0, #0
   2645c:	str	r0, [fp, #-4]
   26460:	b	26498 <flatcc_builder_create_cached_vtable@@Base+0x380>
   26464:	b	26468 <flatcc_builder_create_cached_vtable@@Base+0x350>
   26468:	ldr	r0, [sp, #8]
   2646c:	ldr	r0, [r0, #92]	; 0x5c
   26470:	str	r0, [sp]
   26474:	ldr	r0, [sp]
   26478:	ldr	r1, [sp, #4]
   2647c:	ldr	r2, [sp, #8]
   26480:	ldr	r2, [r2, #116]	; 0x74
   26484:	rsb	r2, r2, #32
   26488:	lsr	r1, r1, r2
   2648c:	mov	r2, r1
   26490:	add	r0, r0, r1, lsl #2
   26494:	str	r0, [fp, #-4]
   26498:	ldr	r0, [fp, #-4]
   2649c:	mov	sp, fp
   264a0:	pop	{fp, pc}

000264a4 <flatcc_builder_create_table@@Base>:
   264a4:	push	{r4, sl, fp, lr}
   264a8:	add	fp, sp, #8
   264ac:	sub	sp, sp, #128	; 0x80
   264b0:	ldr	ip, [fp, #16]
   264b4:	ldr	lr, [fp, #12]
   264b8:	ldr	r4, [fp, #8]
   264bc:	str	r0, [fp, #-16]
   264c0:	str	r1, [fp, #-20]	; 0xffffffec
   264c4:	str	r2, [fp, #-24]	; 0xffffffe8
   264c8:	strh	r3, [fp, #-26]	; 0xffffffe6
   264cc:	ldr	r0, [fp, #12]
   264d0:	cmp	r0, #0
   264d4:	blt	264dc <flatcc_builder_create_table@@Base+0x38>
   264d8:	b	264fc <flatcc_builder_create_table@@Base+0x58>
   264dc:	ldr	r0, [pc, #616]	; 2674c <flatcc_builder_create_table@@Base+0x2a8>
   264e0:	add	r0, pc, r0
   264e4:	ldr	r1, [pc, #612]	; 26750 <flatcc_builder_create_table@@Base+0x2ac>
   264e8:	add	r1, pc, r1
   264ec:	ldr	r2, [pc, #608]	; 26754 <flatcc_builder_create_table@@Base+0x2b0>
   264f0:	add	r3, pc, r2
   264f4:	movw	r2, #1237	; 0x4d5
   264f8:	bl	12b80 <__assert_fail@plt>
   264fc:	ldr	r0, [fp, #16]
   26500:	and	r0, r0, #1
   26504:	cmp	r0, #0
   26508:	beq	26510 <flatcc_builder_create_table@@Base+0x6c>
   2650c:	b	26530 <flatcc_builder_create_table@@Base+0x8c>
   26510:	ldr	r0, [pc, #576]	; 26758 <flatcc_builder_create_table@@Base+0x2b4>
   26514:	add	r0, pc, r0
   26518:	ldr	r1, [pc, #572]	; 2675c <flatcc_builder_create_table@@Base+0x2b8>
   2651c:	add	r1, pc, r1
   26520:	ldr	r2, [pc, #568]	; 26760 <flatcc_builder_create_table@@Base+0x2bc>
   26524:	add	r3, pc, r2
   26528:	movw	r2, #1243	; 0x4db
   2652c:	bl	12b80 <__assert_fail@plt>
   26530:	sub	r0, fp, #26
   26534:	movw	r1, #4
   26538:	uxth	r1, r1
   2653c:	bl	25a2c <flatcc_builder_start_vector@@Base+0xac>
   26540:	ldr	r0, [fp, #-16]
   26544:	ldrh	r1, [fp, #-26]	; 0xffffffe6
   26548:	bl	2454c <flatcc_builder_create_buffer@@Base+0x3a8>
   2654c:	ldr	r0, [fp, #-16]
   26550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   26554:	ldrh	r2, [fp, #-26]	; 0xffffffe6
   26558:	bl	24038 <flatcc_builder_embed_buffer@@Base+0x354>
   2655c:	str	r0, [fp, #-36]	; 0xffffffdc
   26560:	ldr	r0, [fp, #-16]
   26564:	ldr	r0, [r0, #136]	; 0x88
   26568:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2656c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26570:	add	r1, r1, r2
   26574:	add	r1, r1, #4
   26578:	sub	r0, r0, r1
   2657c:	str	r0, [fp, #-52]	; 0xffffffcc
   26580:	ldr	r0, [fp, #16]
   26584:	sub	r0, r0, #1
   26588:	str	r0, [fp, #-48]	; 0xffffffd0
   2658c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26590:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26594:	sub	r0, r0, r1
   26598:	str	r0, [fp, #-40]	; 0xffffffd8
   2659c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   265a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   265a4:	sub	r0, r0, r1
   265a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   265ac:	cmp	r0, r1
   265b0:	beq	265c0 <flatcc_builder_create_table@@Base+0x11c>
   265b4:	mvn	r0, #0
   265b8:	str	r0, [fp, #-12]
   265bc:	b	26740 <flatcc_builder_create_table@@Base+0x29c>
   265c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   265c4:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   265c8:	str	r0, [fp, #-44]	; 0xffffffd4
   265cc:	movw	r0, #0
   265d0:	str	r0, [fp, #-32]	; 0xffffffe0
   265d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   265d8:	ldr	r1, [fp, #12]
   265dc:	cmp	r0, r1
   265e0:	bge	2664c <flatcc_builder_create_table@@Base+0x1a8>
   265e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   265e8:	ldr	r1, [fp, #8]
   265ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   265f0:	add	r1, r1, r2, lsl #1
   265f4:	ldrh	r1, [r1]
   265f8:	add	r0, r0, r1
   265fc:	str	r0, [fp, #-60]	; 0xffffffc4
   26600:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26604:	ldr	r0, [r0]
   26608:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2660c:	sub	r0, r0, r1
   26610:	ldr	r1, [fp, #8]
   26614:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26618:	add	r1, r1, r2, lsl #1
   2661c:	ldrh	r1, [r1]
   26620:	sub	r0, r0, r1
   26624:	sub	r0, r0, #4
   26628:	str	r0, [fp, #-56]	; 0xffffffc8
   2662c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26630:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   26634:	ldr	r1, [fp, #-60]	; 0xffffffc4
   26638:	str	r0, [r1]
   2663c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26640:	add	r0, r0, #1
   26644:	str	r0, [fp, #-32]	; 0xffffffe0
   26648:	b	265d4 <flatcc_builder_create_table@@Base+0x130>
   2664c:	mov	r0, #0
   26650:	str	r0, [sp, #4]
   26654:	str	r0, [sp, #8]
   26658:	ldr	r0, [sp, #4]
   2665c:	add	r0, r0, #4
   26660:	str	r0, [sp, #4]
   26664:	add	r0, sp, #4
   26668:	add	r0, r0, #8
   2666c:	ldr	r1, [sp, #8]
   26670:	sub	r2, fp, #44	; 0x2c
   26674:	str	r2, [r0, r1, lsl #3]
   26678:	ldr	r1, [sp, #8]
   2667c:	add	r0, r0, r1, lsl #3
   26680:	movw	r1, #4
   26684:	str	r1, [r0, #4]
   26688:	ldr	r0, [sp, #8]
   2668c:	add	r0, r0, #1
   26690:	str	r0, [sp, #8]
   26694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26698:	cmp	r0, #0
   2669c:	bls	266e0 <flatcc_builder_create_table@@Base+0x23c>
   266a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   266a4:	ldr	r1, [sp, #4]
   266a8:	add	r0, r1, r0
   266ac:	str	r0, [sp, #4]
   266b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   266b4:	add	r1, sp, #4
   266b8:	add	r1, r1, #8
   266bc:	ldr	r2, [sp, #8]
   266c0:	str	r0, [r1, r2, lsl #3]
   266c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   266c8:	ldr	r2, [sp, #8]
   266cc:	add	r1, r1, r2, lsl #3
   266d0:	str	r0, [r1, #4]
   266d4:	ldr	r0, [sp, #8]
   266d8:	add	r0, r0, #1
   266dc:	str	r0, [sp, #8]
   266e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   266e4:	cmp	r0, #0
   266e8:	bls	26730 <flatcc_builder_create_table@@Base+0x28c>
   266ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   266f0:	ldr	r1, [sp, #4]
   266f4:	add	r0, r1, r0
   266f8:	str	r0, [sp, #4]
   266fc:	add	r0, sp, #4
   26700:	add	r0, r0, #8
   26704:	ldr	r1, [sp, #8]
   26708:	ldr	r2, [pc, #84]	; 26764 <flatcc_builder_create_table@@Base+0x2c0>
   2670c:	ldr	r2, [pc, r2]
   26710:	str	r2, [r0, r1, lsl #3]
   26714:	ldr	r1, [fp, #-36]	; 0xffffffdc
   26718:	ldr	r2, [sp, #8]
   2671c:	add	r0, r0, r2, lsl #3
   26720:	str	r1, [r0, #4]
   26724:	ldr	r0, [sp, #8]
   26728:	add	r0, r0, #1
   2672c:	str	r0, [sp, #8]
   26730:	ldr	r0, [fp, #-16]
   26734:	add	r1, sp, #4
   26738:	bl	24080 <flatcc_builder_embed_buffer@@Base+0x39c>
   2673c:	str	r0, [fp, #-12]
   26740:	ldr	r0, [fp, #-12]
   26744:	sub	sp, fp, #8
   26748:	pop	{r4, sl, fp, pc}
   2674c:	andeq	fp, r0, r9, lsr #8
   26750:	andeq	sl, r0, lr, lsr #25
   26754:	andeq	fp, r0, fp, lsr #8
   26758:	andeq	fp, r0, r3, lsr #9
   2675c:	andeq	sl, r0, sl, ror ip
   26760:	strdeq	fp, [r0], -r7
   26764:	andeq	sp, r1, ip, asr r9

00026768 <flatcc_builder_check_required_field@@Base>:
   26768:	push	{fp, lr}
   2676c:	mov	fp, sp
   26770:	sub	sp, sp, #16
   26774:	str	r0, [fp, #-4]
   26778:	strh	r1, [fp, #-6]
   2677c:	ldr	r0, [fp, #-4]
   26780:	ldr	r0, [r0, #32]
   26784:	ldrh	r0, [r0, #14]
   26788:	cmp	r0, #3
   2678c:	bne	26794 <flatcc_builder_check_required_field@@Base+0x2c>
   26790:	b	267b4 <flatcc_builder_check_required_field@@Base+0x4c>
   26794:	ldr	r0, [pc, #104]	; 26804 <flatcc_builder_check_required_field@@Base+0x9c>
   26798:	add	r0, pc, r0
   2679c:	ldr	r1, [pc, #100]	; 26808 <flatcc_builder_check_required_field@@Base+0xa0>
   267a0:	add	r1, pc, r1
   267a4:	ldr	r2, [pc, #96]	; 2680c <flatcc_builder_check_required_field@@Base+0xa4>
   267a8:	add	r3, pc, r2
   267ac:	movw	r2, #1272	; 0x4f8
   267b0:	bl	12b80 <__assert_fail@plt>
   267b4:	ldrh	r0, [fp, #-6]
   267b8:	ldr	r1, [fp, #-4]
   267bc:	ldrh	r1, [r1, #8]
   267c0:	cmp	r0, r1
   267c4:	movw	r0, #0
   267c8:	str	r0, [sp, #4]
   267cc:	bge	267f4 <flatcc_builder_check_required_field@@Base+0x8c>
   267d0:	ldr	r0, [fp, #-4]
   267d4:	ldr	r0, [r0, #4]
   267d8:	ldrh	r1, [fp, #-6]
   267dc:	add	r0, r0, r1, lsl #1
   267e0:	ldrh	r0, [r0]
   267e4:	cmp	r0, #0
   267e8:	movw	r0, #0
   267ec:	movne	r0, #1
   267f0:	str	r0, [sp, #4]
   267f4:	ldr	r0, [sp, #4]
   267f8:	and	r0, r0, #1
   267fc:	mov	sp, fp
   26800:	pop	{fp, pc}
   26804:	andeq	fp, r0, sl, lsr #4
   26808:	strdeq	sl, [r0], -r6
   2680c:	andeq	fp, r0, r5, asr #4

00026810 <flatcc_builder_check_union_field@@Base>:
   26810:	push	{fp, lr}
   26814:	mov	fp, sp
   26818:	sub	sp, sp, #16
   2681c:	str	r0, [sp, #8]
   26820:	strh	r1, [sp, #6]
   26824:	ldr	r0, [sp, #8]
   26828:	ldr	r0, [r0, #32]
   2682c:	ldrh	r0, [r0, #14]
   26830:	cmp	r0, #3
   26834:	bne	2683c <flatcc_builder_check_union_field@@Base+0x2c>
   26838:	b	2685c <flatcc_builder_check_union_field@@Base+0x4c>
   2683c:	ldr	r0, [pc, #284]	; 26960 <flatcc_builder_check_union_field@@Base+0x150>
   26840:	add	r0, pc, r0
   26844:	ldr	r1, [pc, #280]	; 26964 <flatcc_builder_check_union_field@@Base+0x154>
   26848:	add	r1, pc, r1
   2684c:	ldr	r2, [pc, #276]	; 26968 <flatcc_builder_check_union_field@@Base+0x158>
   26850:	add	r3, pc, r2
   26854:	movw	r2, #1279	; 0x4ff
   26858:	bl	12b80 <__assert_fail@plt>
   2685c:	ldrh	r0, [sp, #6]
   26860:	cmp	r0, #0
   26864:	beq	2687c <flatcc_builder_check_union_field@@Base+0x6c>
   26868:	ldrh	r0, [sp, #6]
   2686c:	ldr	r1, [sp, #8]
   26870:	ldrh	r1, [r1, #8]
   26874:	cmp	r0, r1
   26878:	blt	26888 <flatcc_builder_check_union_field@@Base+0x78>
   2687c:	movw	r0, #0
   26880:	str	r0, [fp, #-4]
   26884:	b	26954 <flatcc_builder_check_union_field@@Base+0x144>
   26888:	ldr	r0, [sp, #8]
   2688c:	ldr	r0, [r0, #4]
   26890:	ldrh	r1, [sp, #6]
   26894:	sub	r1, r1, #1
   26898:	add	r0, r0, r1, lsl #1
   2689c:	ldrh	r0, [r0]
   268a0:	cmp	r0, #0
   268a4:	bne	268d4 <flatcc_builder_check_union_field@@Base+0xc4>
   268a8:	ldr	r0, [sp, #8]
   268ac:	ldr	r0, [r0, #4]
   268b0:	ldrh	r1, [sp, #6]
   268b4:	add	r0, r0, r1, lsl #1
   268b8:	ldrh	r0, [r0]
   268bc:	cmp	r0, #0
   268c0:	movw	r0, #0
   268c4:	moveq	r0, #1
   268c8:	and	r0, r0, #1
   268cc:	str	r0, [fp, #-4]
   268d0:	b	26954 <flatcc_builder_check_union_field@@Base+0x144>
   268d4:	ldr	r0, [sp, #8]
   268d8:	ldr	r1, [r0, #4]
   268dc:	ldr	r0, [r0, #16]
   268e0:	ldrh	r2, [sp, #6]
   268e4:	sub	r2, r2, #1
   268e8:	add	r1, r1, r2, lsl #1
   268ec:	ldrh	r1, [r1]
   268f0:	add	r0, r0, r1
   268f4:	ldrsb	r0, [r0]
   268f8:	cmp	r0, #0
   268fc:	beq	2692c <flatcc_builder_check_union_field@@Base+0x11c>
   26900:	ldr	r0, [sp, #8]
   26904:	ldr	r0, [r0, #4]
   26908:	ldrh	r1, [sp, #6]
   2690c:	add	r0, r0, r1, lsl #1
   26910:	ldrh	r0, [r0]
   26914:	cmp	r0, #0
   26918:	movw	r0, #0
   2691c:	movne	r0, #1
   26920:	and	r0, r0, #1
   26924:	str	r0, [fp, #-4]
   26928:	b	26954 <flatcc_builder_check_union_field@@Base+0x144>
   2692c:	ldr	r0, [sp, #8]
   26930:	ldr	r0, [r0, #4]
   26934:	ldrh	r1, [sp, #6]
   26938:	add	r0, r0, r1, lsl #1
   2693c:	ldrh	r0, [r0]
   26940:	cmp	r0, #0
   26944:	movw	r0, #0
   26948:	moveq	r0, #1
   2694c:	and	r0, r0, #1
   26950:	str	r0, [fp, #-4]
   26954:	ldr	r0, [fp, #-4]
   26958:	mov	sp, fp
   2695c:	pop	{fp, pc}
   26960:	andeq	fp, r0, r2, lsl #3
   26964:	andeq	sl, r0, lr, asr #18
   26968:	strdeq	fp, [r0], -r0

0002696c <flatcc_builder_check_required@@Base>:
   2696c:	push	{fp, lr}
   26970:	mov	fp, sp
   26974:	sub	sp, sp, #24
   26978:	str	r0, [fp, #-8]
   2697c:	str	r1, [sp, #12]
   26980:	str	r2, [sp, #8]
   26984:	ldr	r0, [fp, #-8]
   26988:	ldr	r0, [r0, #32]
   2698c:	ldrh	r0, [r0, #14]
   26990:	cmp	r0, #3
   26994:	bne	2699c <flatcc_builder_check_required@@Base+0x30>
   26998:	b	269bc <flatcc_builder_check_required@@Base+0x50>
   2699c:	ldr	r0, [pc, #172]	; 26a50 <flatcc_builder_check_required@@Base+0xe4>
   269a0:	add	r0, pc, r0
   269a4:	ldr	r1, [pc, #168]	; 26a54 <flatcc_builder_check_required@@Base+0xe8>
   269a8:	add	r1, pc, r1
   269ac:	ldr	r2, [pc, #164]	; 26a58 <flatcc_builder_check_required@@Base+0xec>
   269b0:	add	r3, pc, r2
   269b4:	movw	r2, #1297	; 0x511
   269b8:	bl	12b80 <__assert_fail@plt>
   269bc:	ldr	r0, [fp, #-8]
   269c0:	ldrh	r0, [r0, #8]
   269c4:	ldr	r1, [sp, #8]
   269c8:	cmp	r0, r1
   269cc:	bge	269dc <flatcc_builder_check_required@@Base+0x70>
   269d0:	movw	r0, #0
   269d4:	str	r0, [fp, #-4]
   269d8:	b	26a44 <flatcc_builder_check_required@@Base+0xd8>
   269dc:	movw	r0, #0
   269e0:	str	r0, [sp, #4]
   269e4:	ldr	r0, [sp, #4]
   269e8:	ldr	r1, [sp, #8]
   269ec:	cmp	r0, r1
   269f0:	bge	26a3c <flatcc_builder_check_required@@Base+0xd0>
   269f4:	ldr	r0, [fp, #-8]
   269f8:	ldr	r0, [r0, #4]
   269fc:	ldr	r1, [sp, #12]
   26a00:	ldr	r2, [sp, #4]
   26a04:	add	r1, r1, r2, lsl #1
   26a08:	ldrh	r1, [r1]
   26a0c:	add	r0, r0, r1, lsl #1
   26a10:	ldrh	r0, [r0]
   26a14:	cmp	r0, #0
   26a18:	bne	26a28 <flatcc_builder_check_required@@Base+0xbc>
   26a1c:	movw	r0, #0
   26a20:	str	r0, [fp, #-4]
   26a24:	b	26a44 <flatcc_builder_check_required@@Base+0xd8>
   26a28:	b	26a2c <flatcc_builder_check_required@@Base+0xc0>
   26a2c:	ldr	r0, [sp, #4]
   26a30:	add	r0, r0, #1
   26a34:	str	r0, [sp, #4]
   26a38:	b	269e4 <flatcc_builder_check_required@@Base+0x78>
   26a3c:	movw	r0, #1
   26a40:	str	r0, [fp, #-4]
   26a44:	ldr	r0, [fp, #-4]
   26a48:	mov	sp, fp
   26a4c:	pop	{fp, pc}
   26a50:	andeq	fp, r0, r2, lsr #32
   26a54:	andeq	sl, r0, lr, ror #15
   26a58:	andeq	fp, r0, r0, ror #1

00026a5c <flatcc_builder_end_table@@Base>:
   26a5c:	push	{r4, r5, fp, lr}
   26a60:	add	fp, sp, #8
   26a64:	sub	sp, sp, #48	; 0x30
   26a68:	str	r0, [fp, #-16]
   26a6c:	ldr	r0, [fp, #-16]
   26a70:	ldr	r0, [r0, #32]
   26a74:	ldrh	r0, [r0, #14]
   26a78:	cmp	r0, #3
   26a7c:	bne	26a84 <flatcc_builder_end_table@@Base+0x28>
   26a80:	b	26aa4 <flatcc_builder_end_table@@Base+0x48>
   26a84:	ldr	r0, [pc, #500]	; 26c80 <flatcc_builder_end_table@@Base+0x224>
   26a88:	add	r0, pc, r0
   26a8c:	ldr	r1, [pc, #496]	; 26c84 <flatcc_builder_end_table@@Base+0x228>
   26a90:	add	r1, pc, r1
   26a94:	ldr	r2, [pc, #492]	; 26c88 <flatcc_builder_end_table@@Base+0x22c>
   26a98:	add	r3, pc, r2
   26a9c:	movw	r2, #1317	; 0x525
   26aa0:	bl	12b80 <__assert_fail@plt>
   26aa4:	ldr	r0, [pc, #480]	; 26c8c <flatcc_builder_end_table@@Base+0x230>
   26aa8:	ldr	r1, [fp, #-16]
   26aac:	ldr	r1, [r1, #4]
   26ab0:	sub	r1, r1, #4
   26ab4:	str	r1, [fp, #-20]	; 0xffffffec
   26ab8:	ldr	r1, [fp, #-16]
   26abc:	ldrh	r1, [r1, #8]
   26ac0:	add	r1, r1, #2
   26ac4:	lsl	r1, r1, #1
   26ac8:	strh	r1, [fp, #-22]	; 0xffffffea
   26acc:	ldrh	r1, [fp, #-22]	; 0xffffffea
   26ad0:	ldr	r2, [fp, #-20]	; 0xffffffec
   26ad4:	strh	r1, [r2]
   26ad8:	ldr	r1, [fp, #-16]
   26adc:	ldr	r1, [r1, #20]
   26ae0:	uxth	r1, r1
   26ae4:	add	r1, r1, #4
   26ae8:	ldr	r2, [fp, #-20]	; 0xffffffec
   26aec:	strh	r1, [r2, #2]
   26af0:	ldr	r1, [fp, #-20]	; 0xffffffec
   26af4:	ldrh	r1, [r1]
   26af8:	ldr	r2, [fp, #-16]
   26afc:	ldr	r2, [r2, #12]
   26b00:	eor	r1, r1, r2
   26b04:	mul	r1, r1, r0
   26b08:	ldr	r2, [fp, #-20]	; 0xffffffec
   26b0c:	ldrh	r2, [r2, #2]
   26b10:	eor	r1, r1, r2
   26b14:	mul	r0, r1, r0
   26b18:	ldr	r1, [fp, #-16]
   26b1c:	str	r0, [r1, #12]
   26b20:	ldr	r0, [fp, #-16]
   26b24:	ldr	r1, [fp, #-20]	; 0xffffffec
   26b28:	ldrh	r2, [fp, #-22]	; 0xffffffea
   26b2c:	ldr	r3, [fp, #-16]
   26b30:	ldr	r3, [r3, #12]
   26b34:	uxth	r2, r2
   26b38:	bl	26118 <flatcc_builder_create_cached_vtable@@Base>
   26b3c:	str	r0, [sp, #24]
   26b40:	cmp	r0, #0
   26b44:	bne	26b54 <flatcc_builder_end_table@@Base+0xf8>
   26b48:	movw	r0, #0
   26b4c:	str	r0, [fp, #-12]
   26b50:	b	26c74 <flatcc_builder_end_table@@Base+0x218>
   26b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   26b58:	ldrh	r2, [fp, #-22]	; 0xffffffea
   26b5c:	mov	r1, #0
   26b60:	bl	12b2c <memset@plt>
   26b64:	ldr	r1, [fp, #-16]
   26b68:	ldr	r2, [r1, #32]
   26b6c:	ldr	r1, [r1, #76]	; 0x4c
   26b70:	ldr	r2, [r2, #20]
   26b74:	add	r1, r1, r2
   26b78:	str	r1, [sp, #16]
   26b7c:	ldr	r1, [fp, #-16]
   26b80:	ldr	r1, [r1]
   26b84:	ldr	r2, [sp, #16]
   26b88:	sub	r1, r1, r2
   26b8c:	asr	r1, r1, #1
   26b90:	str	r1, [sp, #20]
   26b94:	ldr	r1, [fp, #-16]
   26b98:	ldr	r2, [fp, #-16]
   26b9c:	ldr	r2, [r2, #16]
   26ba0:	ldr	r3, [fp, #-16]
   26ba4:	ldr	r3, [r3, #20]
   26ba8:	ldr	ip, [fp, #-16]
   26bac:	ldrh	ip, [ip, #130]	; 0x82
   26bb0:	ldr	lr, [sp, #16]
   26bb4:	ldr	r4, [sp, #20]
   26bb8:	ldr	r5, [sp, #24]
   26bbc:	str	r0, [sp, #12]
   26bc0:	mov	r0, r1
   26bc4:	mov	r1, r2
   26bc8:	mov	r2, r3
   26bcc:	uxth	r3, ip
   26bd0:	str	lr, [sp]
   26bd4:	str	r4, [sp, #4]
   26bd8:	str	r5, [sp, #8]
   26bdc:	bl	264a4 <flatcc_builder_create_table@@Base>
   26be0:	str	r0, [sp, #28]
   26be4:	movw	r1, #0
   26be8:	cmp	r1, r0
   26bec:	bne	26bfc <flatcc_builder_end_table@@Base+0x1a0>
   26bf0:	movw	r0, #0
   26bf4:	str	r0, [fp, #-12]
   26bf8:	b	26c74 <flatcc_builder_end_table@@Base+0x218>
   26bfc:	ldr	r0, [fp, #-16]
   26c00:	ldr	r0, [r0, #32]
   26c04:	ldr	r0, [r0, #24]
   26c08:	ldr	r1, [fp, #-16]
   26c0c:	str	r0, [r1, #12]
   26c10:	ldr	r0, [fp, #-16]
   26c14:	ldr	r0, [r0, #32]
   26c18:	ldrh	r0, [r0, #28]
   26c1c:	ldr	r1, [fp, #-16]
   26c20:	strh	r0, [r1, #8]
   26c24:	ldr	r0, [fp, #-16]
   26c28:	ldr	r0, [r0, #52]	; 0x34
   26c2c:	ldr	r1, [fp, #-16]
   26c30:	ldr	r1, [r1, #32]
   26c34:	ldr	r1, [r1, #16]
   26c38:	add	r0, r0, r1
   26c3c:	ldr	r1, [fp, #-16]
   26c40:	str	r0, [r1, #4]
   26c44:	ldr	r0, [fp, #-16]
   26c48:	ldr	r0, [r0, #76]	; 0x4c
   26c4c:	ldr	r1, [fp, #-16]
   26c50:	ldr	r1, [r1, #32]
   26c54:	ldr	r1, [r1, #20]
   26c58:	add	r0, r0, r1
   26c5c:	ldr	r1, [fp, #-16]
   26c60:	str	r0, [r1]
   26c64:	ldr	r0, [fp, #-16]
   26c68:	bl	24b74 <flatcc_builder_end_buffer@@Base+0x164>
   26c6c:	ldr	r0, [sp, #28]
   26c70:	str	r0, [fp, #-12]
   26c74:	ldr	r0, [fp, #-12]
   26c78:	sub	sp, fp, #8
   26c7c:	pop	{r4, r5, fp, pc}
   26c80:	andeq	sl, r0, sl, lsr pc
   26c84:	andeq	sl, r0, r6, lsl #14
   26c88:	andeq	fp, r0, r2, asr r0
   26c8c:			; <UNDEFINED> instruction: 0x9e3779b1

00026c90 <flatcc_builder_create_vector@@Base>:
   26c90:	push	{fp, lr}
   26c94:	mov	fp, sp
   26c98:	sub	sp, sp, #112	; 0x70
   26c9c:	ldr	ip, [fp, #12]
   26ca0:	ldr	lr, [fp, #8]
   26ca4:	str	r0, [fp, #-8]
   26ca8:	str	r1, [fp, #-12]
   26cac:	str	r2, [fp, #-16]
   26cb0:	str	r3, [fp, #-20]	; 0xffffffec
   26cb4:	strh	lr, [fp, #-22]	; 0xffffffea
   26cb8:	ldr	r0, [fp, #-16]
   26cbc:	ldr	r1, [fp, #12]
   26cc0:	cmp	r0, r1
   26cc4:	bls	26d08 <flatcc_builder_create_vector@@Base+0x78>
   26cc8:	ldr	r0, [fp, #-16]
   26ccc:	ldr	r1, [fp, #12]
   26cd0:	cmp	r0, r1
   26cd4:	bhi	26cdc <flatcc_builder_create_vector@@Base+0x4c>
   26cd8:	b	26cfc <flatcc_builder_create_vector@@Base+0x6c>
   26cdc:	ldr	r0, [pc, #364]	; 26e50 <flatcc_builder_create_vector@@Base+0x1c0>
   26ce0:	add	r0, pc, r0
   26ce4:	ldr	r1, [pc, #360]	; 26e54 <flatcc_builder_create_vector@@Base+0x1c4>
   26ce8:	add	r1, pc, r1
   26cec:	ldr	r2, [pc, #356]	; 26e58 <flatcc_builder_create_vector@@Base+0x1c8>
   26cf0:	add	r3, pc, r2
   26cf4:	movw	r2, #1365	; 0x555
   26cf8:	bl	12b80 <__assert_fail@plt>
   26cfc:	movw	r0, #0
   26d00:	str	r0, [fp, #-4]
   26d04:	b	26e44 <flatcc_builder_create_vector@@Base+0x1b4>
   26d08:	sub	r0, fp, #22
   26d0c:	mov	r1, #4
   26d10:	bl	25a2c <flatcc_builder_start_vector@@Base+0xac>
   26d14:	ldr	r0, [fp, #-8]
   26d18:	ldrh	r1, [fp, #-22]	; 0xffffffea
   26d1c:	bl	2454c <flatcc_builder_create_buffer@@Base+0x3a8>
   26d20:	ldr	r0, [fp, #-16]
   26d24:	ldr	r1, [fp, #-20]	; 0xffffffec
   26d28:	mul	r0, r0, r1
   26d2c:	str	r0, [fp, #-28]	; 0xffffffe4
   26d30:	ldr	r0, [fp, #-16]
   26d34:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   26d38:	str	r0, [fp, #-36]	; 0xffffffdc
   26d3c:	ldr	r0, [fp, #-8]
   26d40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26d44:	ldrh	r2, [fp, #-22]	; 0xffffffea
   26d48:	bl	24038 <flatcc_builder_embed_buffer@@Base+0x354>
   26d4c:	str	r0, [fp, #-32]	; 0xffffffe0
   26d50:	mov	r0, #0
   26d54:	str	r0, [sp, #4]
   26d58:	str	r0, [sp, #8]
   26d5c:	ldr	r0, [sp, #4]
   26d60:	add	r0, r0, #4
   26d64:	str	r0, [sp, #4]
   26d68:	add	r0, sp, #4
   26d6c:	add	r0, r0, #8
   26d70:	ldr	r1, [sp, #8]
   26d74:	sub	r2, fp, #36	; 0x24
   26d78:	str	r2, [r0, r1, lsl #3]
   26d7c:	ldr	r1, [sp, #8]
   26d80:	add	r0, r0, r1, lsl #3
   26d84:	movw	r1, #4
   26d88:	str	r1, [r0, #4]
   26d8c:	ldr	r0, [sp, #8]
   26d90:	add	r0, r0, #1
   26d94:	str	r0, [sp, #8]
   26d98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26d9c:	cmp	r0, #0
   26da0:	bls	26de4 <flatcc_builder_create_vector@@Base+0x154>
   26da4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26da8:	ldr	r1, [sp, #4]
   26dac:	add	r0, r1, r0
   26db0:	str	r0, [sp, #4]
   26db4:	ldr	r0, [fp, #-12]
   26db8:	add	r1, sp, #4
   26dbc:	add	r1, r1, #8
   26dc0:	ldr	r2, [sp, #8]
   26dc4:	str	r0, [r1, r2, lsl #3]
   26dc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26dcc:	ldr	r2, [sp, #8]
   26dd0:	add	r1, r1, r2, lsl #3
   26dd4:	str	r0, [r1, #4]
   26dd8:	ldr	r0, [sp, #8]
   26ddc:	add	r0, r0, #1
   26de0:	str	r0, [sp, #8]
   26de4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26de8:	cmp	r0, #0
   26dec:	bls	26e34 <flatcc_builder_create_vector@@Base+0x1a4>
   26df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26df4:	ldr	r1, [sp, #4]
   26df8:	add	r0, r1, r0
   26dfc:	str	r0, [sp, #4]
   26e00:	add	r0, sp, #4
   26e04:	add	r0, r0, #8
   26e08:	ldr	r1, [sp, #8]
   26e0c:	ldr	r2, [pc, #72]	; 26e5c <flatcc_builder_create_vector@@Base+0x1cc>
   26e10:	ldr	r2, [pc, r2]
   26e14:	str	r2, [r0, r1, lsl #3]
   26e18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26e1c:	ldr	r2, [sp, #8]
   26e20:	add	r0, r0, r2, lsl #3
   26e24:	str	r1, [r0, #4]
   26e28:	ldr	r0, [sp, #8]
   26e2c:	add	r0, r0, #1
   26e30:	str	r0, [sp, #8]
   26e34:	ldr	r0, [fp, #-8]
   26e38:	add	r1, sp, #4
   26e3c:	bl	24080 <flatcc_builder_embed_buffer@@Base+0x39c>
   26e40:	str	r0, [fp, #-4]
   26e44:	ldr	r0, [fp, #-4]
   26e48:	mov	sp, fp
   26e4c:	pop	{fp, pc}
   26e50:	andeq	sl, r0, ip, asr #28
   26e54:	andeq	sl, r0, lr, lsr #9
   26e58:	andeq	sl, r0, pc, asr #28
   26e5c:	andeq	sp, r1, r8, asr r2

00026e60 <flatcc_builder_end_vector@@Base>:
   26e60:	push	{fp, lr}
   26e64:	mov	fp, sp
   26e68:	sub	sp, sp, #24
   26e6c:	str	r0, [fp, #-8]
   26e70:	ldr	r0, [fp, #-8]
   26e74:	ldr	r0, [r0, #32]
   26e78:	ldrh	r0, [r0, #14]
   26e7c:	cmp	r0, #4
   26e80:	bne	26e88 <flatcc_builder_end_vector@@Base+0x28>
   26e84:	b	26ea8 <flatcc_builder_end_vector@@Base+0x48>
   26e88:	ldr	r0, [pc, #152]	; 26f28 <flatcc_builder_end_vector@@Base+0xc8>
   26e8c:	add	r0, pc, r0
   26e90:	ldr	r1, [pc, #148]	; 26f2c <flatcc_builder_end_vector@@Base+0xcc>
   26e94:	add	r1, pc, r1
   26e98:	ldr	r2, [pc, #144]	; 26f30 <flatcc_builder_end_vector@@Base+0xd0>
   26e9c:	add	r3, pc, r2
   26ea0:	movw	r2, #1400	; 0x578
   26ea4:	bl	12b80 <__assert_fail@plt>
   26ea8:	ldr	r0, [fp, #-8]
   26eac:	ldr	r1, [fp, #-8]
   26eb0:	ldr	r1, [r1, #16]
   26eb4:	ldr	r2, [fp, #-8]
   26eb8:	ldr	r2, [r2, #32]
   26ebc:	ldr	r2, [r2, #20]
   26ec0:	ldr	r3, [fp, #-8]
   26ec4:	ldr	r3, [r3, #32]
   26ec8:	ldr	r3, [r3, #16]
   26ecc:	ldr	ip, [fp, #-8]
   26ed0:	ldrh	ip, [ip, #130]	; 0x82
   26ed4:	ldr	lr, [fp, #-8]
   26ed8:	ldr	lr, [lr, #32]
   26edc:	ldr	lr, [lr, #24]
   26ee0:	uxth	ip, ip
   26ee4:	str	ip, [sp]
   26ee8:	str	lr, [sp, #4]
   26eec:	bl	26c90 <flatcc_builder_create_vector@@Base>
   26ef0:	str	r0, [sp, #12]
   26ef4:	movw	r1, #0
   26ef8:	cmp	r1, r0
   26efc:	bne	26f0c <flatcc_builder_end_vector@@Base+0xac>
   26f00:	movw	r0, #0
   26f04:	str	r0, [fp, #-4]
   26f08:	b	26f1c <flatcc_builder_end_vector@@Base+0xbc>
   26f0c:	ldr	r0, [fp, #-8]
   26f10:	bl	24b74 <flatcc_builder_end_buffer@@Base+0x164>
   26f14:	ldr	r0, [sp, #12]
   26f18:	str	r0, [fp, #-4]
   26f1c:	ldr	r0, [fp, #-4]
   26f20:	mov	sp, fp
   26f24:	pop	{fp, pc}
   26f28:	andeq	sl, r0, r4, asr #12
   26f2c:	andeq	sl, r0, r2, lsl #6
   26f30:	andeq	sl, r0, r9, lsl sp

00026f34 <flatcc_builder_vector_count@@Base>:
   26f34:	sub	sp, sp, #4
   26f38:	str	r0, [sp]
   26f3c:	ldr	r0, [sp]
   26f40:	ldr	r0, [r0, #32]
   26f44:	ldr	r0, [r0, #20]
   26f48:	add	sp, sp, #4
   26f4c:	bx	lr

00026f50 <flatcc_builder_vector_edit@@Base>:
   26f50:	sub	sp, sp, #4
   26f54:	str	r0, [sp]
   26f58:	ldr	r0, [sp]
   26f5c:	ldr	r0, [r0, #16]
   26f60:	add	sp, sp, #4
   26f64:	bx	lr

00026f68 <flatcc_builder_create_offset_vector_direct@@Base>:
   26f68:	push	{fp, lr}
   26f6c:	mov	fp, sp
   26f70:	sub	sp, sp, #16
   26f74:	str	r0, [fp, #-4]
   26f78:	str	r1, [sp, #8]
   26f7c:	str	r2, [sp, #4]
   26f80:	ldr	r0, [fp, #-4]
   26f84:	ldr	r1, [sp, #8]
   26f88:	ldr	r2, [sp, #4]
   26f8c:	movw	r3, #0
   26f90:	bl	26f9c <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   26f94:	mov	sp, fp
   26f98:	pop	{fp, pc}
   26f9c:	push	{fp, lr}
   26fa0:	mov	fp, sp
   26fa4:	sub	sp, sp, #120	; 0x78
   26fa8:	ldr	ip, [pc, #696]	; 27268 <flatcc_builder_create_offset_vector_direct@@Base+0x300>
   26fac:	str	r0, [fp, #-8]
   26fb0:	str	r1, [fp, #-12]
   26fb4:	str	r2, [fp, #-16]
   26fb8:	str	r3, [fp, #-20]	; 0xffffffec
   26fbc:	ldr	r0, [fp, #-16]
   26fc0:	cmp	r0, ip
   26fc4:	bls	26fd4 <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
   26fc8:	movw	r0, #0
   26fcc:	str	r0, [fp, #-4]
   26fd0:	b	2725c <flatcc_builder_create_offset_vector_direct@@Base+0x2f4>
   26fd4:	ldr	r0, [fp, #-8]
   26fd8:	mov	r1, #4
   26fdc:	str	r1, [sp]
   26fe0:	bl	2454c <flatcc_builder_create_buffer@@Base+0x3a8>
   26fe4:	ldr	r0, [fp, #-16]
   26fe8:	lsl	r0, r0, #2
   26fec:	str	r0, [fp, #-24]	; 0xffffffe8
   26ff0:	ldr	r0, [fp, #-16]
   26ff4:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   26ff8:	str	r0, [fp, #-32]	; 0xffffffe0
   26ffc:	ldr	r0, [fp, #-8]
   27000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27004:	ldr	r2, [sp]
   27008:	bl	24038 <flatcc_builder_embed_buffer@@Base+0x354>
   2700c:	str	r0, [fp, #-28]	; 0xffffffe4
   27010:	mov	r0, #0
   27014:	str	r0, [sp, #4]
   27018:	str	r0, [sp, #8]
   2701c:	ldr	r0, [sp, #4]
   27020:	add	r0, r0, #4
   27024:	str	r0, [sp, #4]
   27028:	add	r0, sp, #4
   2702c:	add	r0, r0, #8
   27030:	ldr	r1, [sp, #8]
   27034:	sub	r2, fp, #32
   27038:	str	r2, [r0, r1, lsl #3]
   2703c:	ldr	r1, [sp, #8]
   27040:	add	r0, r0, r1, lsl #3
   27044:	movw	r1, #4
   27048:	str	r1, [r0, #4]
   2704c:	ldr	r0, [sp, #8]
   27050:	add	r0, r0, #1
   27054:	str	r0, [sp, #8]
   27058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2705c:	cmp	r0, #0
   27060:	bls	270a4 <flatcc_builder_create_offset_vector_direct@@Base+0x13c>
   27064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27068:	ldr	r1, [sp, #4]
   2706c:	add	r0, r1, r0
   27070:	str	r0, [sp, #4]
   27074:	ldr	r0, [fp, #-12]
   27078:	add	r1, sp, #4
   2707c:	add	r1, r1, #8
   27080:	ldr	r2, [sp, #8]
   27084:	str	r0, [r1, r2, lsl #3]
   27088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2708c:	ldr	r2, [sp, #8]
   27090:	add	r1, r1, r2, lsl #3
   27094:	str	r0, [r1, #4]
   27098:	ldr	r0, [sp, #8]
   2709c:	add	r0, r0, #1
   270a0:	str	r0, [sp, #8]
   270a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   270a8:	cmp	r0, #0
   270ac:	bls	270f4 <flatcc_builder_create_offset_vector_direct@@Base+0x18c>
   270b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   270b4:	ldr	r1, [sp, #4]
   270b8:	add	r0, r1, r0
   270bc:	str	r0, [sp, #4]
   270c0:	add	r0, sp, #4
   270c4:	add	r0, r0, #8
   270c8:	ldr	r1, [sp, #8]
   270cc:	ldr	r2, [pc, #444]	; 27290 <flatcc_builder_create_offset_vector_direct@@Base+0x328>
   270d0:	ldr	r2, [pc, r2]
   270d4:	str	r2, [r0, r1, lsl #3]
   270d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   270dc:	ldr	r2, [sp, #8]
   270e0:	add	r0, r0, r2, lsl #3
   270e4:	str	r1, [r0, #4]
   270e8:	ldr	r0, [sp, #8]
   270ec:	add	r0, r0, #1
   270f0:	str	r0, [sp, #8]
   270f4:	ldr	r0, [fp, #-8]
   270f8:	ldr	r0, [r0, #136]	; 0x88
   270fc:	ldr	r1, [sp, #4]
   27100:	sub	r0, r0, r1
   27104:	str	r0, [fp, #-36]	; 0xffffffdc
   27108:	movw	r0, #0
   2710c:	str	r0, [fp, #-44]	; 0xffffffd4
   27110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27114:	ldr	r1, [fp, #-16]
   27118:	cmp	r0, r1
   2711c:	bcs	2724c <flatcc_builder_create_offset_vector_direct@@Base+0x2e4>
   27120:	ldr	r0, [fp, #-12]
   27124:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27128:	add	r0, r0, r1, lsl #2
   2712c:	ldr	r0, [r0]
   27130:	cmp	r0, #0
   27134:	beq	271c4 <flatcc_builder_create_offset_vector_direct@@Base+0x25c>
   27138:	ldr	r0, [fp, #-12]
   2713c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27140:	ldr	r0, [r0, r1, lsl #2]
   27144:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27148:	sub	r0, r0, r2
   2714c:	sub	r0, r0, r1, lsl #2
   27150:	sub	r0, r0, #4
   27154:	str	r0, [fp, #-40]	; 0xffffffd8
   27158:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2715c:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   27160:	ldr	r1, [fp, #-12]
   27164:	ldr	r2, [fp, #-44]	; 0xffffffd4
   27168:	add	r1, r1, r2, lsl #2
   2716c:	str	r0, [r1]
   27170:	ldr	r0, [fp, #-20]	; 0xffffffec
   27174:	movw	r1, #0
   27178:	cmp	r0, r1
   2717c:	beq	271c0 <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   27180:	ldr	r0, [fp, #-20]	; 0xffffffec
   27184:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27188:	add	r0, r0, r1
   2718c:	ldrb	r0, [r0]
   27190:	cmp	r0, #0
   27194:	beq	2719c <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   27198:	b	271bc <flatcc_builder_create_offset_vector_direct@@Base+0x254>
   2719c:	ldr	r0, [pc, #224]	; 27284 <flatcc_builder_create_offset_vector_direct@@Base+0x31c>
   271a0:	add	r0, pc, r0
   271a4:	ldr	r1, [pc, #220]	; 27288 <flatcc_builder_create_offset_vector_direct@@Base+0x320>
   271a8:	add	r1, pc, r1
   271ac:	ldr	r2, [pc, #216]	; 2728c <flatcc_builder_create_offset_vector_direct@@Base+0x324>
   271b0:	add	r3, pc, r2
   271b4:	movw	r2, #1457	; 0x5b1
   271b8:	bl	12b80 <__assert_fail@plt>
   271bc:	b	271c0 <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   271c0:	b	27238 <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   271c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   271c8:	movw	r1, #0
   271cc:	cmp	r0, r1
   271d0:	beq	27214 <flatcc_builder_create_offset_vector_direct@@Base+0x2ac>
   271d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   271d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   271dc:	add	r0, r0, r1
   271e0:	ldrb	r0, [r0]
   271e4:	cmp	r0, #0
   271e8:	bne	271f0 <flatcc_builder_create_offset_vector_direct@@Base+0x288>
   271ec:	b	27210 <flatcc_builder_create_offset_vector_direct@@Base+0x2a8>
   271f0:	ldr	r0, [pc, #128]	; 27278 <flatcc_builder_create_offset_vector_direct@@Base+0x310>
   271f4:	add	r0, pc, r0
   271f8:	ldr	r1, [pc, #124]	; 2727c <flatcc_builder_create_offset_vector_direct@@Base+0x314>
   271fc:	add	r1, pc, r1
   27200:	ldr	r2, [pc, #120]	; 27280 <flatcc_builder_create_offset_vector_direct@@Base+0x318>
   27204:	add	r3, pc, r2
   27208:	movw	r2, #1461	; 0x5b5
   2720c:	bl	12b80 <__assert_fail@plt>
   27210:	b	27234 <flatcc_builder_create_offset_vector_direct@@Base+0x2cc>
   27214:	ldr	r0, [pc, #80]	; 2726c <flatcc_builder_create_offset_vector_direct@@Base+0x304>
   27218:	add	r0, pc, r0
   2721c:	ldr	r1, [pc, #76]	; 27270 <flatcc_builder_create_offset_vector_direct@@Base+0x308>
   27220:	add	r1, pc, r1
   27224:	ldr	r2, [pc, #72]	; 27274 <flatcc_builder_create_offset_vector_direct@@Base+0x30c>
   27228:	add	r3, pc, r2
   2722c:	movw	r2, #1463	; 0x5b7
   27230:	bl	12b80 <__assert_fail@plt>
   27234:	b	27238 <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   27238:	b	2723c <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
   2723c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   27240:	add	r0, r0, #1
   27244:	str	r0, [fp, #-44]	; 0xffffffd4
   27248:	b	27110 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2724c:	ldr	r0, [fp, #-8]
   27250:	add	r1, sp, #4
   27254:	bl	24080 <flatcc_builder_embed_buffer@@Base+0x39c>
   27258:	str	r0, [fp, #-4]
   2725c:	ldr	r0, [fp, #-4]
   27260:	mov	sp, fp
   27264:	pop	{fp, pc}
   27268:	svccc	0x00ffffff
   2726c:	andeq	fp, r0, fp, lsr r1
   27270:	andeq	r9, r0, r6, ror pc
   27274:	andeq	fp, r0, sp, lsr #2
   27278:	andeq	fp, r0, r4, ror #3
   2727c:	muleq	r0, sl, pc	; <UNPREDICTABLE>
   27280:	andeq	fp, r0, r1, asr r1
   27284:	andeq	fp, r0, r7, lsr #3
   27288:	andeq	r9, r0, lr, ror #31
   2728c:	andeq	fp, r0, r5, lsr #3
   27290:	muleq	r1, r8, pc	; <UNPREDICTABLE>

00027294 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   27294:	push	{fp, lr}
   27298:	mov	fp, sp
   2729c:	sub	sp, sp, #16
   272a0:	str	r0, [sp, #8]
   272a4:	str	r1, [sp, #4]
   272a8:	ldr	r0, [sp, #8]
   272ac:	ldr	r0, [r0, #32]
   272b0:	ldrh	r0, [r0, #14]
   272b4:	cmp	r0, #5
   272b8:	bne	272c0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   272bc:	b	272e0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x4c>
   272c0:	ldr	r0, [pc, #112]	; 27338 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   272c4:	add	r0, pc, r0
   272c8:	ldr	r1, [pc, #108]	; 2733c <flatcc_builder_end_offset_vector_for_unions@@Base+0xa8>
   272cc:	add	r1, pc, r1
   272d0:	ldr	r2, [pc, #104]	; 27340 <flatcc_builder_end_offset_vector_for_unions@@Base+0xac>
   272d4:	add	r3, pc, r2
   272d8:	movw	r2, #1493	; 0x5d5
   272dc:	bl	12b80 <__assert_fail@plt>
   272e0:	ldr	r0, [sp, #8]
   272e4:	ldr	r1, [sp, #8]
   272e8:	ldr	r1, [r1, #16]
   272ec:	ldr	r2, [sp, #8]
   272f0:	ldr	r2, [r2, #32]
   272f4:	ldr	r2, [r2, #20]
   272f8:	ldr	r3, [sp, #4]
   272fc:	bl	26f9c <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   27300:	str	r0, [sp]
   27304:	movw	r1, #0
   27308:	cmp	r1, r0
   2730c:	bne	2731c <flatcc_builder_end_offset_vector_for_unions@@Base+0x88>
   27310:	movw	r0, #0
   27314:	str	r0, [fp, #-4]
   27318:	b	2732c <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
   2731c:	ldr	r0, [sp, #8]
   27320:	bl	24b74 <flatcc_builder_end_buffer@@Base+0x164>
   27324:	ldr	r0, [sp]
   27328:	str	r0, [fp, #-4]
   2732c:	ldr	r0, [fp, #-4]
   27330:	mov	sp, fp
   27334:	pop	{fp, pc}
   27338:	andeq	sl, r0, r5, lsl #6
   2733c:	andeq	r9, r0, sl, asr #29
   27340:	andeq	sl, r0, lr, ror #18

00027344 <flatcc_builder_offset_vector_edit@@Base>:
   27344:	sub	sp, sp, #4
   27348:	str	r0, [sp]
   2734c:	ldr	r0, [sp]
   27350:	ldr	r0, [r0, #16]
   27354:	add	sp, sp, #4
   27358:	bx	lr

0002735c <flatcc_builder_offset_vector_count@@Base>:
   2735c:	sub	sp, sp, #4
   27360:	str	r0, [sp]
   27364:	ldr	r0, [sp]
   27368:	ldr	r0, [r0, #32]
   2736c:	ldr	r0, [r0, #20]
   27370:	add	sp, sp, #4
   27374:	bx	lr

00027378 <flatcc_builder_table_add_union@@Base>:
   27378:	push	{fp, lr}
   2737c:	mov	fp, sp
   27380:	sub	sp, sp, #32
   27384:	str	r2, [fp, #-12]
   27388:	str	r3, [fp, #-8]
   2738c:	str	r0, [sp, #16]
   27390:	str	r1, [sp, #12]
   27394:	ldr	r0, [sp, #16]
   27398:	ldr	r0, [r0, #32]
   2739c:	ldrh	r0, [r0, #14]
   273a0:	cmp	r0, #3
   273a4:	bne	273ac <flatcc_builder_table_add_union@@Base+0x34>
   273a8:	b	273cc <flatcc_builder_table_add_union@@Base+0x54>
   273ac:	ldr	r0, [pc, #388]	; 27538 <flatcc_builder_table_add_union@@Base+0x1c0>
   273b0:	add	r0, pc, r0
   273b4:	ldr	r1, [pc, #384]	; 2753c <flatcc_builder_table_add_union@@Base+0x1c4>
   273b8:	add	r1, pc, r1
   273bc:	ldr	r2, [pc, #380]	; 27540 <flatcc_builder_table_add_union@@Base+0x1c8>
   273c0:	add	r3, pc, r2
   273c4:	movw	r2, #1518	; 0x5ee
   273c8:	bl	12b80 <__assert_fail@plt>
   273cc:	ldrb	r0, [fp, #-12]
   273d0:	cmp	r0, #0
   273d4:	bne	2742c <flatcc_builder_table_add_union@@Base+0xb4>
   273d8:	ldr	r0, [fp, #-8]
   273dc:	cmp	r0, #0
   273e0:	beq	2742c <flatcc_builder_table_add_union@@Base+0xb4>
   273e4:	ldrb	r0, [fp, #-12]
   273e8:	cmp	r0, #0
   273ec:	bne	273fc <flatcc_builder_table_add_union@@Base+0x84>
   273f0:	ldr	r0, [fp, #-8]
   273f4:	cmp	r0, #0
   273f8:	bne	27400 <flatcc_builder_table_add_union@@Base+0x88>
   273fc:	b	27420 <flatcc_builder_table_add_union@@Base+0xa8>
   27400:	ldr	r0, [pc, #316]	; 27544 <flatcc_builder_table_add_union@@Base+0x1cc>
   27404:	add	r0, pc, r0
   27408:	ldr	r1, [pc, #312]	; 27548 <flatcc_builder_table_add_union@@Base+0x1d0>
   2740c:	add	r1, pc, r1
   27410:	ldr	r2, [pc, #308]	; 2754c <flatcc_builder_table_add_union@@Base+0x1d4>
   27414:	add	r3, pc, r2
   27418:	movw	r2, #1519	; 0x5ef
   2741c:	bl	12b80 <__assert_fail@plt>
   27420:	mvn	r0, #0
   27424:	str	r0, [fp, #-4]
   27428:	b	2752c <flatcc_builder_table_add_union@@Base+0x1b4>
   2742c:	ldr	r0, [fp, #-8]
   27430:	cmp	r0, #0
   27434:	beq	274a4 <flatcc_builder_table_add_union@@Base+0x12c>
   27438:	ldr	r0, [sp, #16]
   2743c:	ldr	r1, [sp, #12]
   27440:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   27444:	str	r0, [sp, #8]
   27448:	ldr	r0, [sp, #8]
   2744c:	movw	r1, #0
   27450:	cmp	r0, r1
   27454:	bne	27498 <flatcc_builder_table_add_union@@Base+0x120>
   27458:	ldr	r0, [sp, #8]
   2745c:	movw	r1, #0
   27460:	cmp	r0, r1
   27464:	beq	2746c <flatcc_builder_table_add_union@@Base+0xf4>
   27468:	b	2748c <flatcc_builder_table_add_union@@Base+0x114>
   2746c:	ldr	r0, [pc, #220]	; 27550 <flatcc_builder_table_add_union@@Base+0x1d8>
   27470:	add	r0, pc, r0
   27474:	ldr	r1, [pc, #216]	; 27554 <flatcc_builder_table_add_union@@Base+0x1dc>
   27478:	add	r1, pc, r1
   2747c:	ldr	r2, [pc, #212]	; 27558 <flatcc_builder_table_add_union@@Base+0x1e0>
   27480:	add	r3, pc, r2
   27484:	movw	r2, #1522	; 0x5f2
   27488:	bl	12b80 <__assert_fail@plt>
   2748c:	mvn	r0, #0
   27490:	str	r0, [fp, #-4]
   27494:	b	2752c <flatcc_builder_table_add_union@@Base+0x1b4>
   27498:	ldr	r0, [fp, #-8]
   2749c:	ldr	r1, [sp, #8]
   274a0:	str	r0, [r1]
   274a4:	ldr	r0, [sp, #16]
   274a8:	ldr	r1, [sp, #12]
   274ac:	sub	r1, r1, #1
   274b0:	movw	r2, #1
   274b4:	movw	r3, #1
   274b8:	uxth	r3, r3
   274bc:	bl	27698 <flatcc_builder_table_add@@Base>
   274c0:	str	r0, [sp, #4]
   274c4:	ldr	r0, [sp, #4]
   274c8:	movw	r1, #0
   274cc:	cmp	r0, r1
   274d0:	bne	27514 <flatcc_builder_table_add_union@@Base+0x19c>
   274d4:	ldr	r0, [sp, #4]
   274d8:	movw	r1, #0
   274dc:	cmp	r0, r1
   274e0:	beq	274e8 <flatcc_builder_table_add_union@@Base+0x170>
   274e4:	b	27508 <flatcc_builder_table_add_union@@Base+0x190>
   274e8:	ldr	r0, [pc, #108]	; 2755c <flatcc_builder_table_add_union@@Base+0x1e4>
   274ec:	add	r0, pc, r0
   274f0:	ldr	r1, [pc, #104]	; 27560 <flatcc_builder_table_add_union@@Base+0x1e8>
   274f4:	add	r1, pc, r1
   274f8:	ldr	r2, [pc, #100]	; 27564 <flatcc_builder_table_add_union@@Base+0x1ec>
   274fc:	add	r3, pc, r2
   27500:	movw	r2, #1526	; 0x5f6
   27504:	bl	12b80 <__assert_fail@plt>
   27508:	mvn	r0, #0
   2750c:	str	r0, [fp, #-4]
   27510:	b	2752c <flatcc_builder_table_add_union@@Base+0x1b4>
   27514:	ldrb	r0, [fp, #-12]
   27518:	bl	27800 <flatcc_builder_table_add@@Base+0x168>
   2751c:	ldr	r1, [sp, #4]
   27520:	strb	r0, [r1]
   27524:	movw	r0, #0
   27528:	str	r0, [fp, #-4]
   2752c:	ldr	r0, [fp, #-4]
   27530:	mov	sp, fp
   27534:	pop	{fp, pc}
   27538:	andeq	sl, r0, r2, lsl r6
   2753c:	ldrdeq	r9, [r0], -lr
   27540:	strdeq	sl, [r0], -r4
   27544:	andeq	sl, r0, r8, lsl #18
   27548:	andeq	r9, r0, sl, lsl #27
   2754c:	andeq	sl, r0, r0, lsr #17
   27550:			; <UNDEFINED> instruction: 0x0000a8be
   27554:	andeq	r9, r0, lr, lsl sp
   27558:	andeq	sl, r0, r4, lsr r8
   2755c:	andeq	sl, r0, ip, asr #16
   27560:	andeq	r9, r0, r2, lsr #25
   27564:			; <UNDEFINED> instruction: 0x0000a7b8

00027568 <flatcc_builder_table_add_offset@@Base>:
   27568:	push	{fp, lr}
   2756c:	mov	fp, sp
   27570:	sub	sp, sp, #8
   27574:	str	r0, [sp, #4]
   27578:	str	r1, [sp]
   2757c:	ldr	r0, [sp, #4]
   27580:	ldr	r0, [r0, #32]
   27584:	ldrh	r0, [r0, #14]
   27588:	cmp	r0, #3
   2758c:	bne	27594 <flatcc_builder_table_add_offset@@Base+0x2c>
   27590:	b	275b4 <flatcc_builder_table_add_offset@@Base+0x4c>
   27594:	ldr	r0, [pc, #212]	; 27670 <flatcc_builder_table_add_offset@@Base+0x108>
   27598:	add	r0, pc, r0
   2759c:	ldr	r1, [pc, #208]	; 27674 <flatcc_builder_table_add_offset@@Base+0x10c>
   275a0:	add	r1, pc, r1
   275a4:	ldr	r2, [pc, #204]	; 27678 <flatcc_builder_table_add_offset@@Base+0x110>
   275a8:	add	r3, pc, r2
   275ac:	movw	r2, #1811	; 0x713
   275b0:	bl	12b80 <__assert_fail@plt>
   275b4:	ldr	r0, [sp]
   275b8:	cmp	r0, #0
   275bc:	blt	275d4 <flatcc_builder_table_add_offset@@Base+0x6c>
   275c0:	ldr	r0, [sp]
   275c4:	movw	r1, #32764	; 0x7ffc
   275c8:	cmp	r0, r1
   275cc:	bgt	275d4 <flatcc_builder_table_add_offset@@Base+0x6c>
   275d0:	b	275f4 <flatcc_builder_table_add_offset@@Base+0x8c>
   275d4:	ldr	r0, [pc, #160]	; 2767c <flatcc_builder_table_add_offset@@Base+0x114>
   275d8:	add	r0, pc, r0
   275dc:	ldr	r1, [pc, #156]	; 27680 <flatcc_builder_table_add_offset@@Base+0x118>
   275e0:	add	r1, pc, r1
   275e4:	ldr	r2, [pc, #152]	; 27684 <flatcc_builder_table_add_offset@@Base+0x11c>
   275e8:	add	r3, pc, r2
   275ec:	movw	r2, #1812	; 0x714
   275f0:	bl	12b80 <__assert_fail@plt>
   275f4:	ldr	r0, [sp, #4]
   275f8:	ldr	r0, [r0, #4]
   275fc:	ldr	r1, [sp]
   27600:	add	r0, r0, r1, lsl #1
   27604:	ldrh	r0, [r0]
   27608:	cmp	r0, #0
   2760c:	beq	27630 <flatcc_builder_table_add_offset@@Base+0xc8>
   27610:	ldr	r0, [pc, #116]	; 2768c <flatcc_builder_table_add_offset@@Base+0x124>
   27614:	add	r0, pc, r0
   27618:	ldr	r1, [pc, #112]	; 27690 <flatcc_builder_table_add_offset@@Base+0x128>
   2761c:	add	r1, pc, r1
   27620:	ldr	r2, [pc, #108]	; 27694 <flatcc_builder_table_add_offset@@Base+0x12c>
   27624:	add	r3, pc, r2
   27628:	movw	r2, #1819	; 0x71b
   2762c:	bl	12b80 <__assert_fail@plt>
   27630:	ldr	r0, [pc, #80]	; 27688 <flatcc_builder_table_add_offset@@Base+0x120>
   27634:	ldr	r1, [sp]
   27638:	ldr	r2, [sp, #4]
   2763c:	ldr	r2, [r2, #12]
   27640:	eor	r1, r1, r2
   27644:	mul	r1, r1, r0
   27648:	eor	r1, r1, #4
   2764c:	mul	r0, r1, r0
   27650:	ldr	r1, [sp, #4]
   27654:	str	r0, [r1, #12]
   27658:	ldr	r0, [sp, #4]
   2765c:	ldr	r1, [sp]
   27660:	uxth	r1, r1
   27664:	bl	28628 <flatcc_builder_table_add_copy@@Base+0x64>
   27668:	mov	sp, fp
   2766c:	pop	{fp, pc}
   27670:	andeq	sl, r0, sl, lsr #8
   27674:	strdeq	r9, [r0], -r6
   27678:	andeq	sl, r0, lr, lsl #22
   2767c:	andeq	sl, r0, lr, asr sl
   27680:			; <UNDEFINED> instruction: 0x00009bb6
   27684:	andeq	sl, r0, lr, asr #21
   27688:			; <UNDEFINED> instruction: 0x9e3779b1
   2768c:	andeq	sl, r0, pc, lsr sp
   27690:	andeq	r9, r0, sl, ror fp
   27694:	muleq	r0, r2, sl

00027698 <flatcc_builder_table_add@@Base>:
   27698:	push	{fp, lr}
   2769c:	mov	fp, sp
   276a0:	sub	sp, sp, #16
   276a4:	str	r0, [fp, #-4]
   276a8:	str	r1, [sp, #8]
   276ac:	str	r2, [sp, #4]
   276b0:	strh	r3, [sp, #2]
   276b4:	ldr	r0, [fp, #-4]
   276b8:	ldr	r0, [r0, #32]
   276bc:	ldrh	r0, [r0, #14]
   276c0:	cmp	r0, #3
   276c4:	bne	276cc <flatcc_builder_table_add@@Base+0x34>
   276c8:	b	276ec <flatcc_builder_table_add@@Base+0x54>
   276cc:	ldr	r0, [pc, #260]	; 277d8 <flatcc_builder_table_add@@Base+0x140>
   276d0:	add	r0, pc, r0
   276d4:	ldr	r1, [pc, #256]	; 277dc <flatcc_builder_table_add@@Base+0x144>
   276d8:	add	r1, pc, r1
   276dc:	ldr	r2, [pc, #252]	; 277e0 <flatcc_builder_table_add@@Base+0x148>
   276e0:	add	r3, pc, r2
   276e4:	movw	r2, #1773	; 0x6ed
   276e8:	bl	12b80 <__assert_fail@plt>
   276ec:	ldr	r0, [sp, #8]
   276f0:	cmp	r0, #0
   276f4:	blt	2770c <flatcc_builder_table_add@@Base+0x74>
   276f8:	ldr	r0, [sp, #8]
   276fc:	movw	r1, #32764	; 0x7ffc
   27700:	cmp	r0, r1
   27704:	bgt	2770c <flatcc_builder_table_add@@Base+0x74>
   27708:	b	2772c <flatcc_builder_table_add@@Base+0x94>
   2770c:	ldr	r0, [pc, #208]	; 277e4 <flatcc_builder_table_add@@Base+0x14c>
   27710:	add	r0, pc, r0
   27714:	ldr	r1, [pc, #204]	; 277e8 <flatcc_builder_table_add@@Base+0x150>
   27718:	add	r1, pc, r1
   2771c:	ldr	r2, [pc, #200]	; 277ec <flatcc_builder_table_add@@Base+0x154>
   27720:	add	r3, pc, r2
   27724:	movw	r2, #1774	; 0x6ee
   27728:	bl	12b80 <__assert_fail@plt>
   2772c:	ldrh	r0, [sp, #2]
   27730:	ldr	r1, [fp, #-4]
   27734:	ldrh	r1, [r1, #130]	; 0x82
   27738:	cmp	r0, r1
   2773c:	ble	2774c <flatcc_builder_table_add@@Base+0xb4>
   27740:	ldrh	r0, [sp, #2]
   27744:	ldr	r1, [fp, #-4]
   27748:	strh	r0, [r1, #130]	; 0x82
   2774c:	ldr	r0, [fp, #-4]
   27750:	ldr	r0, [r0, #4]
   27754:	ldr	r1, [sp, #8]
   27758:	add	r0, r0, r1, lsl #1
   2775c:	ldrh	r0, [r0]
   27760:	cmp	r0, #0
   27764:	beq	27788 <flatcc_builder_table_add@@Base+0xf0>
   27768:	ldr	r0, [pc, #132]	; 277f4 <flatcc_builder_table_add@@Base+0x15c>
   2776c:	add	r0, pc, r0
   27770:	ldr	r1, [pc, #128]	; 277f8 <flatcc_builder_table_add@@Base+0x160>
   27774:	add	r1, pc, r1
   27778:	ldr	r2, [pc, #124]	; 277fc <flatcc_builder_table_add@@Base+0x164>
   2777c:	add	r3, pc, r2
   27780:	movw	r2, #1784	; 0x6f8
   27784:	bl	12b80 <__assert_fail@plt>
   27788:	ldr	r0, [pc, #96]	; 277f0 <flatcc_builder_table_add@@Base+0x158>
   2778c:	ldr	r1, [sp, #8]
   27790:	ldr	r2, [fp, #-4]
   27794:	ldr	r2, [r2, #12]
   27798:	eor	r1, r1, r2
   2779c:	mul	r1, r1, r0
   277a0:	ldr	r2, [sp, #4]
   277a4:	eor	r1, r1, r2
   277a8:	mul	r0, r1, r0
   277ac:	ldr	r1, [fp, #-4]
   277b0:	str	r0, [r1, #12]
   277b4:	ldr	r0, [fp, #-4]
   277b8:	ldr	r1, [sp, #4]
   277bc:	ldrh	r2, [sp, #2]
   277c0:	ldr	r3, [sp, #8]
   277c4:	uxth	r2, r2
   277c8:	uxth	r3, r3
   277cc:	bl	28444 <flatcc_builder_string_len@@Base+0x1c>
   277d0:	mov	sp, fp
   277d4:	pop	{fp, pc}
   277d8:	strdeq	sl, [r0], -r2
   277dc:			; <UNDEFINED> instruction: 0x00009abe
   277e0:	andeq	sl, r0, ip, lsl #18
   277e4:	andeq	sl, r0, r6, lsr #18
   277e8:	andeq	r9, r0, lr, ror sl
   277ec:	andeq	sl, r0, ip, asr #17
   277f0:			; <UNDEFINED> instruction: 0x9e3779b1
   277f4:	andeq	sl, r0, r7, ror #23
   277f8:	andeq	r9, r0, r2, lsr #20
   277fc:	andeq	sl, r0, r0, ror r8
   27800:	sub	sp, sp, #4
   27804:	strb	r0, [sp, #3]
   27808:	ldrb	r0, [sp, #3]
   2780c:	add	sp, sp, #4
   27810:	bx	lr

00027814 <flatcc_builder_table_add_union_vector@@Base>:
   27814:	push	{fp, lr}
   27818:	mov	fp, sp
   2781c:	sub	sp, sp, #24
   27820:	str	r2, [sp, #12]
   27824:	str	r3, [sp, #16]
   27828:	str	r0, [sp, #8]
   2782c:	str	r1, [sp, #4]
   27830:	ldr	r0, [sp, #8]
   27834:	ldr	r0, [r0, #32]
   27838:	ldrh	r0, [r0, #14]
   2783c:	cmp	r0, #3
   27840:	bne	27848 <flatcc_builder_table_add_union_vector@@Base+0x34>
   27844:	b	27868 <flatcc_builder_table_add_union_vector@@Base+0x54>
   27848:	ldr	r0, [pc, #420]	; 279f4 <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   2784c:	add	r0, pc, r0
   27850:	ldr	r1, [pc, #416]	; 279f8 <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   27854:	add	r1, pc, r1
   27858:	ldr	r2, [pc, #412]	; 279fc <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   2785c:	add	r3, pc, r2
   27860:	movw	r2, #1536	; 0x600
   27864:	bl	12b80 <__assert_fail@plt>
   27868:	ldr	r0, [sp, #12]
   2786c:	cmp	r0, #0
   27870:	movw	r0, #0
   27874:	moveq	r0, #1
   27878:	and	r0, r0, #1
   2787c:	ldr	r1, [sp, #16]
   27880:	cmp	r1, #0
   27884:	movw	r1, #0
   27888:	moveq	r1, #1
   2788c:	and	r1, r1, #1
   27890:	cmp	r0, r1
   27894:	beq	278f8 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   27898:	ldr	r0, [sp, #12]
   2789c:	cmp	r0, #0
   278a0:	movw	r0, #0
   278a4:	moveq	r0, #1
   278a8:	and	r0, r0, #1
   278ac:	ldr	r1, [sp, #16]
   278b0:	cmp	r1, #0
   278b4:	movw	r1, #0
   278b8:	moveq	r1, #1
   278bc:	and	r1, r1, #1
   278c0:	cmp	r0, r1
   278c4:	bne	278cc <flatcc_builder_table_add_union_vector@@Base+0xb8>
   278c8:	b	278ec <flatcc_builder_table_add_union_vector@@Base+0xd8>
   278cc:	ldr	r0, [pc, #300]	; 27a00 <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   278d0:	add	r0, pc, r0
   278d4:	ldr	r1, [pc, #296]	; 27a04 <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   278d8:	add	r1, pc, r1
   278dc:	ldr	r2, [pc, #292]	; 27a08 <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   278e0:	add	r3, pc, r2
   278e4:	movw	r2, #1537	; 0x601
   278e8:	bl	12b80 <__assert_fail@plt>
   278ec:	mvn	r0, #0
   278f0:	str	r0, [fp, #-4]
   278f4:	b	279e8 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   278f8:	ldr	r0, [sp, #12]
   278fc:	cmp	r0, #0
   27900:	beq	279e0 <flatcc_builder_table_add_union_vector@@Base+0x1cc>
   27904:	ldr	r0, [sp, #8]
   27908:	ldr	r1, [sp, #4]
   2790c:	sub	r1, r1, #1
   27910:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   27914:	str	r0, [sp]
   27918:	ldr	r0, [sp]
   2791c:	movw	r1, #0
   27920:	cmp	r0, r1
   27924:	bne	27968 <flatcc_builder_table_add_union_vector@@Base+0x154>
   27928:	ldr	r0, [sp]
   2792c:	movw	r1, #0
   27930:	cmp	r0, r1
   27934:	beq	2793c <flatcc_builder_table_add_union_vector@@Base+0x128>
   27938:	b	2795c <flatcc_builder_table_add_union_vector@@Base+0x148>
   2793c:	ldr	r0, [pc, #200]	; 27a0c <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   27940:	add	r0, pc, r0
   27944:	ldr	r1, [pc, #196]	; 27a10 <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   27948:	add	r1, pc, r1
   2794c:	ldr	r2, [pc, #192]	; 27a14 <flatcc_builder_table_add_union_vector@@Base+0x200>
   27950:	add	r3, pc, r2
   27954:	movw	r2, #1540	; 0x604
   27958:	bl	12b80 <__assert_fail@plt>
   2795c:	mvn	r0, #0
   27960:	str	r0, [fp, #-4]
   27964:	b	279e8 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   27968:	ldr	r0, [sp, #12]
   2796c:	ldr	r1, [sp]
   27970:	str	r0, [r1]
   27974:	ldr	r0, [sp, #8]
   27978:	ldr	r1, [sp, #4]
   2797c:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   27980:	str	r0, [sp]
   27984:	ldr	r0, [sp]
   27988:	movw	r1, #0
   2798c:	cmp	r0, r1
   27990:	bne	279d4 <flatcc_builder_table_add_union_vector@@Base+0x1c0>
   27994:	ldr	r0, [sp]
   27998:	movw	r1, #0
   2799c:	cmp	r0, r1
   279a0:	beq	279a8 <flatcc_builder_table_add_union_vector@@Base+0x194>
   279a4:	b	279c8 <flatcc_builder_table_add_union_vector@@Base+0x1b4>
   279a8:	ldr	r0, [pc, #104]	; 27a18 <flatcc_builder_table_add_union_vector@@Base+0x204>
   279ac:	add	r0, pc, r0
   279b0:	ldr	r1, [pc, #100]	; 27a1c <flatcc_builder_table_add_union_vector@@Base+0x208>
   279b4:	add	r1, pc, r1
   279b8:	ldr	r2, [pc, #96]	; 27a20 <flatcc_builder_table_add_union_vector@@Base+0x20c>
   279bc:	add	r3, pc, r2
   279c0:	movw	r2, #1544	; 0x608
   279c4:	bl	12b80 <__assert_fail@plt>
   279c8:	mvn	r0, #0
   279cc:	str	r0, [fp, #-4]
   279d0:	b	279e8 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   279d4:	ldr	r0, [sp, #16]
   279d8:	ldr	r1, [sp]
   279dc:	str	r0, [r1]
   279e0:	movw	r0, #0
   279e4:	str	r0, [fp, #-4]
   279e8:	ldr	r0, [fp, #-4]
   279ec:	mov	sp, fp
   279f0:	pop	{fp, pc}
   279f4:	andeq	sl, r0, r6, ror r1
   279f8:	andeq	r9, r0, r2, asr #18
   279fc:	andeq	sl, r0, r8, ror #9
   27a00:	ldrdeq	sl, [r0], -r7
   27a04:			; <UNDEFINED> instruction: 0x000098be
   27a08:	andeq	sl, r0, r4, ror #8
   27a0c:	andeq	sl, r0, lr, ror #7
   27a10:	andeq	r9, r0, lr, asr #16
   27a14:	strdeq	sl, [r0], -r4
   27a18:	andeq	sl, r0, r2, lsl #7
   27a1c:	andeq	r9, r0, r2, ror #15
   27a20:	andeq	sl, r0, r8, lsl #7

00027a24 <flatcc_builder_create_union_vector@@Base>:
   27a24:	push	{fp, lr}
   27a28:	mov	fp, sp
   27a2c:	sub	sp, sp, #48	; 0x30
   27a30:	str	r1, [fp, #-4]
   27a34:	str	r2, [fp, #-8]
   27a38:	str	r3, [fp, #-12]
   27a3c:	mov	r1, r0
   27a40:	str	r0, [sp, #12]
   27a44:	mov	r0, r1
   27a48:	movw	r1, #0
   27a4c:	and	r1, r1, #255	; 0xff
   27a50:	movw	r2, #8
   27a54:	bl	12b2c <memset@plt>
   27a58:	ldr	r0, [fp, #-4]
   27a5c:	bl	25a60 <flatcc_builder_start_offset_vector@@Base>
   27a60:	cmp	r0, #0
   27a64:	beq	27a6c <flatcc_builder_create_union_vector@@Base+0x48>
   27a68:	b	27b50 <flatcc_builder_create_union_vector@@Base+0x12c>
   27a6c:	ldr	r0, [fp, #-4]
   27a70:	ldr	r1, [fp, #-12]
   27a74:	bl	251f4 <flatcc_builder_extend_offset_vector@@Base>
   27a78:	movw	r1, #0
   27a7c:	cmp	r1, r0
   27a80:	bne	27a88 <flatcc_builder_create_union_vector@@Base+0x64>
   27a84:	b	27b50 <flatcc_builder_create_union_vector@@Base+0x12c>
   27a88:	ldr	r0, [fp, #-4]
   27a8c:	ldr	r1, [fp, #-12]
   27a90:	mov	r2, r1
   27a94:	str	r2, [sp, #8]
   27a98:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   27a9c:	str	r0, [fp, #-16]
   27aa0:	movw	r1, #0
   27aa4:	cmp	r1, r0
   27aa8:	bne	27ab0 <flatcc_builder_create_union_vector@@Base+0x8c>
   27aac:	b	27b50 <flatcc_builder_create_union_vector@@Base+0x12c>
   27ab0:	ldr	r0, [fp, #-4]
   27ab4:	bl	27344 <flatcc_builder_offset_vector_edit@@Base>
   27ab8:	str	r0, [fp, #-20]	; 0xffffffec
   27abc:	movw	r0, #0
   27ac0:	str	r0, [sp, #24]
   27ac4:	ldr	r0, [sp, #24]
   27ac8:	ldr	r1, [fp, #-12]
   27acc:	cmp	r0, r1
   27ad0:	bcs	27b14 <flatcc_builder_create_union_vector@@Base+0xf0>
   27ad4:	ldr	r0, [fp, #-8]
   27ad8:	ldr	r1, [sp, #24]
   27adc:	ldrb	r0, [r0, r1, lsl #3]
   27ae0:	ldr	r2, [fp, #-16]
   27ae4:	strb	r0, [r2, r1]
   27ae8:	ldr	r0, [fp, #-8]
   27aec:	ldr	r1, [sp, #24]
   27af0:	add	r0, r0, r1, lsl #3
   27af4:	ldr	r0, [r0, #4]
   27af8:	ldr	r2, [fp, #-20]	; 0xffffffec
   27afc:	add	r1, r2, r1, lsl #2
   27b00:	str	r0, [r1]
   27b04:	ldr	r0, [sp, #24]
   27b08:	add	r0, r0, #1
   27b0c:	str	r0, [sp, #24]
   27b10:	b	27ac4 <flatcc_builder_create_union_vector@@Base+0xa0>
   27b14:	ldr	r1, [fp, #-4]
   27b18:	ldr	r2, [fp, #-16]
   27b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b20:	ldr	r0, [fp, #-12]
   27b24:	mov	ip, sp
   27b28:	str	r0, [ip]
   27b2c:	add	r0, sp, #16
   27b30:	bl	27b58 <flatcc_builder_create_union_vector_direct@@Base>
   27b34:	ldr	r0, [sp, #16]
   27b38:	ldr	r1, [sp, #12]
   27b3c:	str	r0, [r1]
   27b40:	ldr	r0, [sp, #20]
   27b44:	str	r0, [r1, #4]
   27b48:	ldr	r0, [fp, #-4]
   27b4c:	bl	24b74 <flatcc_builder_end_buffer@@Base+0x164>
   27b50:	mov	sp, fp
   27b54:	pop	{fp, pc}

00027b58 <flatcc_builder_create_union_vector_direct@@Base>:
   27b58:	push	{fp, lr}
   27b5c:	mov	fp, sp
   27b60:	sub	sp, sp, #32
   27b64:	ldr	ip, [fp, #8]
   27b68:	str	r1, [fp, #-4]
   27b6c:	str	r2, [fp, #-8]
   27b70:	str	r3, [fp, #-12]
   27b74:	mov	r1, r0
   27b78:	str	r0, [sp, #16]
   27b7c:	mov	r0, r1
   27b80:	movw	r1, #0
   27b84:	and	r1, r1, #255	; 0xff
   27b88:	movw	r2, #8
   27b8c:	str	ip, [sp, #12]
   27b90:	bl	12b2c <memset@plt>
   27b94:	ldr	r0, [fp, #-4]
   27b98:	ldr	r1, [fp, #-12]
   27b9c:	ldr	r2, [fp, #8]
   27ba0:	ldr	r3, [fp, #-8]
   27ba4:	bl	26f9c <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   27ba8:	ldr	r1, [sp, #16]
   27bac:	str	r0, [r1, #4]
   27bb0:	movw	r2, #0
   27bb4:	cmp	r2, r0
   27bb8:	bne	27bc0 <flatcc_builder_create_union_vector_direct@@Base+0x68>
   27bbc:	b	27c04 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   27bc0:	ldr	r0, [fp, #-4]
   27bc4:	ldr	r1, [fp, #-8]
   27bc8:	ldr	r2, [fp, #8]
   27bcc:	movw	r3, #1
   27bd0:	movw	ip, #1
   27bd4:	uxth	ip, ip
   27bd8:	str	ip, [sp]
   27bdc:	mvn	ip, #0
   27be0:	str	ip, [sp, #4]
   27be4:	bl	26c90 <flatcc_builder_create_vector@@Base>
   27be8:	ldr	r1, [sp, #16]
   27bec:	str	r0, [r1]
   27bf0:	movw	r2, #0
   27bf4:	cmp	r2, r0
   27bf8:	bne	27c00 <flatcc_builder_create_union_vector_direct@@Base+0xa8>
   27bfc:	b	27c04 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   27c00:	b	27c04 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   27c04:	mov	sp, fp
   27c08:	pop	{fp, pc}

00027c0c <flatcc_builder_start_union_vector@@Base>:
   27c0c:	push	{fp, lr}
   27c10:	mov	fp, sp
   27c14:	sub	sp, sp, #8
   27c18:	str	r0, [sp]
   27c1c:	ldr	r0, [sp]
   27c20:	movw	r1, #4
   27c24:	uxth	r1, r1
   27c28:	bl	24844 <flatcc_builder_start_buffer@@Base+0x178>
   27c2c:	cmp	r0, #0
   27c30:	beq	27c40 <flatcc_builder_start_union_vector@@Base+0x34>
   27c34:	mvn	r0, #0
   27c38:	str	r0, [sp, #4]
   27c3c:	b	27c84 <flatcc_builder_start_union_vector@@Base+0x78>
   27c40:	ldr	r0, [sp]
   27c44:	ldr	r0, [r0, #32]
   27c48:	movw	r1, #8
   27c4c:	str	r1, [r0, #16]
   27c50:	ldr	r0, [sp]
   27c54:	ldr	r0, [r0, #32]
   27c58:	movw	r1, #0
   27c5c:	str	r1, [r0, #20]
   27c60:	ldr	r0, [sp]
   27c64:	ldr	r0, [r0, #32]
   27c68:	movw	r1, #7
   27c6c:	strh	r1, [r0, #14]
   27c70:	ldr	r0, [sp]
   27c74:	mvn	r1, #3
   27c78:	bl	24ca0 <flatcc_builder_start_struct@@Base+0x70>
   27c7c:	movw	r0, #0
   27c80:	str	r0, [sp, #4]
   27c84:	ldr	r0, [sp, #4]
   27c88:	mov	sp, fp
   27c8c:	pop	{fp, pc}

00027c90 <flatcc_builder_end_union_vector@@Base>:
   27c90:	push	{fp, lr}
   27c94:	mov	fp, sp
   27c98:	sub	sp, sp, #40	; 0x28
   27c9c:	str	r1, [fp, #-4]
   27ca0:	mov	r1, r0
   27ca4:	str	r0, [sp, #4]
   27ca8:	mov	r0, r1
   27cac:	movw	r1, #0
   27cb0:	and	r1, r1, #255	; 0xff
   27cb4:	movw	r2, #8
   27cb8:	bl	12b2c <memset@plt>
   27cbc:	ldr	r0, [fp, #-4]
   27cc0:	ldr	r0, [r0, #32]
   27cc4:	ldrh	r0, [r0, #14]
   27cc8:	cmp	r0, #7
   27ccc:	bne	27cd4 <flatcc_builder_end_union_vector@@Base+0x44>
   27cd0:	b	27cf4 <flatcc_builder_end_union_vector@@Base+0x64>
   27cd4:	ldr	r0, [pc, #260]	; 27de0 <flatcc_builder_end_union_vector@@Base+0x150>
   27cd8:	add	r0, pc, r0
   27cdc:	ldr	r1, [pc, #256]	; 27de4 <flatcc_builder_end_union_vector@@Base+0x154>
   27ce0:	add	r1, pc, r1
   27ce4:	ldr	r2, [pc, #252]	; 27de8 <flatcc_builder_end_union_vector@@Base+0x158>
   27ce8:	add	r3, pc, r2
   27cec:	movw	r2, #1617	; 0x651
   27cf0:	bl	12b80 <__assert_fail@plt>
   27cf4:	ldr	r0, [fp, #-4]
   27cf8:	bl	27dec <flatcc_builder_union_vector_count@@Base>
   27cfc:	str	r0, [sp, #16]
   27d00:	ldr	r0, [fp, #-4]
   27d04:	ldr	r1, [sp, #16]
   27d08:	movw	r2, #5
   27d0c:	mul	r1, r1, r2
   27d10:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   27d14:	str	r0, [fp, #-16]
   27d18:	movw	r1, #0
   27d1c:	cmp	r1, r0
   27d20:	bne	27d28 <flatcc_builder_end_union_vector@@Base+0x98>
   27d24:	b	27dd8 <flatcc_builder_end_union_vector@@Base+0x148>
   27d28:	ldr	r0, [fp, #-16]
   27d2c:	ldr	r1, [sp, #16]
   27d30:	add	r0, r0, r1, lsl #2
   27d34:	str	r0, [fp, #-8]
   27d38:	ldr	r0, [fp, #-4]
   27d3c:	bl	27e08 <flatcc_builder_union_vector_edit@@Base>
   27d40:	str	r0, [fp, #-12]
   27d44:	movw	r0, #0
   27d48:	str	r0, [sp, #20]
   27d4c:	ldr	r0, [sp, #20]
   27d50:	ldr	r1, [sp, #16]
   27d54:	cmp	r0, r1
   27d58:	bcs	27d9c <flatcc_builder_end_union_vector@@Base+0x10c>
   27d5c:	ldr	r0, [fp, #-12]
   27d60:	ldr	r1, [sp, #20]
   27d64:	ldrb	r0, [r0, r1, lsl #3]
   27d68:	ldr	r2, [fp, #-8]
   27d6c:	strb	r0, [r2, r1]
   27d70:	ldr	r0, [fp, #-12]
   27d74:	ldr	r1, [sp, #20]
   27d78:	add	r0, r0, r1, lsl #3
   27d7c:	ldr	r0, [r0, #4]
   27d80:	ldr	r2, [fp, #-16]
   27d84:	add	r1, r2, r1, lsl #2
   27d88:	str	r0, [r1]
   27d8c:	ldr	r0, [sp, #20]
   27d90:	add	r0, r0, #1
   27d94:	str	r0, [sp, #20]
   27d98:	b	27d4c <flatcc_builder_end_union_vector@@Base+0xbc>
   27d9c:	ldr	r1, [fp, #-4]
   27da0:	ldr	r2, [fp, #-8]
   27da4:	ldr	r3, [fp, #-16]
   27da8:	ldr	r0, [sp, #16]
   27dac:	mov	ip, sp
   27db0:	str	r0, [ip]
   27db4:	add	r0, sp, #8
   27db8:	bl	27b58 <flatcc_builder_create_union_vector_direct@@Base>
   27dbc:	ldr	r0, [sp, #8]
   27dc0:	ldr	r1, [sp, #4]
   27dc4:	str	r0, [r1]
   27dc8:	ldr	r0, [sp, #12]
   27dcc:	str	r0, [r1, #4]
   27dd0:	ldr	r0, [fp, #-4]
   27dd4:	bl	24b74 <flatcc_builder_end_buffer@@Base+0x164>
   27dd8:	mov	sp, fp
   27ddc:	pop	{fp, pc}
   27de0:	strdeq	sl, [r0], -r7
   27de4:			; <UNDEFINED> instruction: 0x000094b6
   27de8:	andeq	sl, r0, r9, lsl r1

00027dec <flatcc_builder_union_vector_count@@Base>:
   27dec:	sub	sp, sp, #4
   27df0:	str	r0, [sp]
   27df4:	ldr	r0, [sp]
   27df8:	ldr	r0, [r0, #32]
   27dfc:	ldr	r0, [r0, #20]
   27e00:	add	sp, sp, #4
   27e04:	bx	lr

00027e08 <flatcc_builder_union_vector_edit@@Base>:
   27e08:	sub	sp, sp, #4
   27e0c:	str	r0, [sp]
   27e10:	ldr	r0, [sp]
   27e14:	ldr	r0, [r0, #16]
   27e18:	add	sp, sp, #4
   27e1c:	bx	lr

00027e20 <flatcc_builder_extend_union_vector@@Base>:
   27e20:	push	{fp, lr}
   27e24:	mov	fp, sp
   27e28:	sub	sp, sp, #16
   27e2c:	ldr	r2, [pc, #68]	; 27e78 <flatcc_builder_extend_union_vector@@Base+0x58>
   27e30:	str	r0, [sp, #8]
   27e34:	str	r1, [sp, #4]
   27e38:	ldr	r0, [sp, #8]
   27e3c:	ldr	r1, [sp, #4]
   27e40:	bl	24ef0 <flatcc_builder_extend_vector@@Base+0x6c>
   27e44:	cmp	r0, #0
   27e48:	beq	27e58 <flatcc_builder_extend_union_vector@@Base+0x38>
   27e4c:	movw	r0, #0
   27e50:	str	r0, [fp, #-4]
   27e54:	b	27e6c <flatcc_builder_extend_union_vector@@Base+0x4c>
   27e58:	ldr	r0, [sp, #8]
   27e5c:	ldr	r1, [sp, #4]
   27e60:	lsl	r1, r1, #3
   27e64:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   27e68:	str	r0, [fp, #-4]
   27e6c:	ldr	r0, [fp, #-4]
   27e70:	mov	sp, fp
   27e74:	pop	{fp, pc}
   27e78:	svcne	0x00ffffff

00027e7c <flatcc_builder_truncate_union_vector@@Base>:
   27e7c:	push	{fp, lr}
   27e80:	mov	fp, sp
   27e84:	sub	sp, sp, #16
   27e88:	str	r0, [sp, #8]
   27e8c:	str	r1, [sp, #4]
   27e90:	ldr	r0, [sp, #8]
   27e94:	ldr	r0, [r0, #32]
   27e98:	ldrh	r0, [r0, #14]
   27e9c:	cmp	r0, #7
   27ea0:	bne	27ea8 <flatcc_builder_truncate_union_vector@@Base+0x2c>
   27ea4:	b	27ec8 <flatcc_builder_truncate_union_vector@@Base+0x4c>
   27ea8:	ldr	r0, [pc, #192]	; 27f70 <flatcc_builder_truncate_union_vector@@Base+0xf4>
   27eac:	add	r0, pc, r0
   27eb0:	ldr	r1, [pc, #188]	; 27f74 <flatcc_builder_truncate_union_vector@@Base+0xf8>
   27eb4:	add	r1, pc, r1
   27eb8:	ldr	r2, [pc, #184]	; 27f78 <flatcc_builder_truncate_union_vector@@Base+0xfc>
   27ebc:	add	r3, pc, r2
   27ec0:	movw	r2, #1665	; 0x681
   27ec4:	bl	12b80 <__assert_fail@plt>
   27ec8:	ldr	r0, [sp, #8]
   27ecc:	ldr	r0, [r0, #32]
   27ed0:	ldr	r0, [r0, #20]
   27ed4:	ldr	r1, [sp, #4]
   27ed8:	cmp	r0, r1
   27edc:	bcs	27f28 <flatcc_builder_truncate_union_vector@@Base+0xac>
   27ee0:	ldr	r0, [sp, #8]
   27ee4:	ldr	r0, [r0, #32]
   27ee8:	ldr	r0, [r0, #20]
   27eec:	ldr	r1, [sp, #4]
   27ef0:	cmp	r0, r1
   27ef4:	bcc	27efc <flatcc_builder_truncate_union_vector@@Base+0x80>
   27ef8:	b	27f1c <flatcc_builder_truncate_union_vector@@Base+0xa0>
   27efc:	ldr	r0, [pc, #120]	; 27f7c <flatcc_builder_truncate_union_vector@@Base+0x100>
   27f00:	add	r0, pc, r0
   27f04:	ldr	r1, [pc, #116]	; 27f80 <flatcc_builder_truncate_union_vector@@Base+0x104>
   27f08:	add	r1, pc, r1
   27f0c:	ldr	r2, [pc, #112]	; 27f84 <flatcc_builder_truncate_union_vector@@Base+0x108>
   27f10:	add	r3, pc, r2
   27f14:	movw	r2, #1666	; 0x682
   27f18:	bl	12b80 <__assert_fail@plt>
   27f1c:	mvn	r0, #0
   27f20:	str	r0, [fp, #-4]
   27f24:	b	27f64 <flatcc_builder_truncate_union_vector@@Base+0xe8>
   27f28:	ldr	r0, [sp, #4]
   27f2c:	ldr	r1, [sp, #8]
   27f30:	ldr	r1, [r1, #32]
   27f34:	ldr	r2, [r1, #20]
   27f38:	sub	r0, r2, r0
   27f3c:	str	r0, [r1, #20]
   27f40:	ldr	r0, [sp, #8]
   27f44:	ldr	r1, [sp, #8]
   27f48:	ldr	r1, [r1, #32]
   27f4c:	ldr	r1, [r1, #16]
   27f50:	ldr	r2, [sp, #4]
   27f54:	mul	r1, r1, r2
   27f58:	bl	25724 <flatcc_builder_truncate_vector@@Base+0x10c>
   27f5c:	movw	r0, #0
   27f60:	str	r0, [fp, #-4]
   27f64:	ldr	r0, [fp, #-4]
   27f68:	mov	sp, fp
   27f6c:	pop	{fp, pc}
   27f70:	andeq	r9, r0, r3, lsr #30
   27f74:	andeq	r9, r0, r2, ror #5
   27f78:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   27f7c:	andeq	r9, r0, r3, lsr r9
   27f80:	andeq	r9, r0, lr, lsl #5
   27f84:	andeq	r9, r0, r4, asr #30

00027f88 <flatcc_builder_union_vector_push@@Base>:
   27f88:	push	{fp, lr}
   27f8c:	mov	fp, sp
   27f90:	sub	sp, sp, #24
   27f94:	str	r1, [sp, #12]
   27f98:	str	r2, [sp, #16]
   27f9c:	str	r0, [sp, #8]
   27fa0:	ldr	r0, [sp, #8]
   27fa4:	ldr	r0, [r0, #32]
   27fa8:	ldrh	r0, [r0, #14]
   27fac:	cmp	r0, #7
   27fb0:	bne	27fb8 <flatcc_builder_union_vector_push@@Base+0x30>
   27fb4:	b	27fd8 <flatcc_builder_union_vector_push@@Base+0x50>
   27fb8:	ldr	r0, [pc, #160]	; 28060 <flatcc_builder_union_vector_push@@Base+0xd8>
   27fbc:	add	r0, pc, r0
   27fc0:	ldr	r1, [pc, #156]	; 28064 <flatcc_builder_union_vector_push@@Base+0xdc>
   27fc4:	add	r1, pc, r1
   27fc8:	ldr	r2, [pc, #152]	; 28068 <flatcc_builder_union_vector_push@@Base+0xe0>
   27fcc:	add	r3, pc, r2
   27fd0:	movw	r2, #1677	; 0x68d
   27fd4:	bl	12b80 <__assert_fail@plt>
   27fd8:	ldr	r0, [pc, #140]	; 2806c <flatcc_builder_union_vector_push@@Base+0xe4>
   27fdc:	ldr	r1, [sp, #8]
   27fe0:	ldr	r1, [r1, #32]
   27fe4:	ldr	r1, [r1, #20]
   27fe8:	cmp	r1, r0
   27fec:	bne	27ffc <flatcc_builder_union_vector_push@@Base+0x74>
   27ff0:	movw	r0, #0
   27ff4:	str	r0, [fp, #-4]
   27ff8:	b	28054 <flatcc_builder_union_vector_push@@Base+0xcc>
   27ffc:	ldr	r0, [sp, #8]
   28000:	ldr	r0, [r0, #32]
   28004:	ldr	r1, [r0, #20]
   28008:	add	r1, r1, #1
   2800c:	str	r1, [r0, #20]
   28010:	ldr	r0, [sp, #8]
   28014:	movw	r1, #8
   28018:	bl	24d2c <flatcc_builder_start_struct@@Base+0xfc>
   2801c:	str	r0, [sp, #4]
   28020:	movw	r1, #0
   28024:	cmp	r1, r0
   28028:	bne	28038 <flatcc_builder_union_vector_push@@Base+0xb0>
   2802c:	movw	r0, #0
   28030:	str	r0, [fp, #-4]
   28034:	b	28054 <flatcc_builder_union_vector_push@@Base+0xcc>
   28038:	ldr	r0, [sp, #4]
   2803c:	ldr	r1, [sp, #12]
   28040:	str	r1, [r0]
   28044:	ldr	r1, [sp, #16]
   28048:	str	r1, [r0, #4]
   2804c:	ldr	r0, [sp, #4]
   28050:	str	r0, [fp, #-4]
   28054:	ldr	r0, [fp, #-4]
   28058:	mov	sp, fp
   2805c:	pop	{fp, pc}
   28060:	andeq	r9, r0, r3, lsl lr
   28064:	ldrdeq	r9, [r0], -r2
   28068:	andeq	r9, r0, sp, asr #29
   2806c:	svcne	0x00ffffff

00028070 <flatcc_builder_append_union_vector@@Base>:
   28070:	push	{fp, lr}
   28074:	mov	fp, sp
   28078:	sub	sp, sp, #16
   2807c:	str	r0, [sp, #8]
   28080:	str	r1, [sp, #4]
   28084:	str	r2, [sp]
   28088:	ldr	r0, [sp, #8]
   2808c:	ldr	r0, [r0, #32]
   28090:	ldrh	r0, [r0, #14]
   28094:	cmp	r0, #7
   28098:	bne	280a0 <flatcc_builder_append_union_vector@@Base+0x30>
   2809c:	b	280c0 <flatcc_builder_append_union_vector@@Base+0x50>
   280a0:	ldr	r0, [pc, #96]	; 28108 <flatcc_builder_append_union_vector@@Base+0x98>
   280a4:	add	r0, pc, r0
   280a8:	ldr	r1, [pc, #92]	; 2810c <flatcc_builder_append_union_vector@@Base+0x9c>
   280ac:	add	r1, pc, r1
   280b0:	ldr	r2, [pc, #88]	; 28110 <flatcc_builder_append_union_vector@@Base+0xa0>
   280b4:	add	r3, pc, r2
   280b8:	movw	r2, #1692	; 0x69c
   280bc:	bl	12b80 <__assert_fail@plt>
   280c0:	ldr	r2, [pc, #76]	; 28114 <flatcc_builder_append_union_vector@@Base+0xa4>
   280c4:	ldr	r0, [sp, #8]
   280c8:	ldr	r1, [sp]
   280cc:	bl	24ef0 <flatcc_builder_extend_vector@@Base+0x6c>
   280d0:	cmp	r0, #0
   280d4:	beq	280e4 <flatcc_builder_append_union_vector@@Base+0x74>
   280d8:	movw	r0, #0
   280dc:	str	r0, [fp, #-4]
   280e0:	b	280fc <flatcc_builder_append_union_vector@@Base+0x8c>
   280e4:	ldr	r0, [sp, #8]
   280e8:	ldr	r1, [sp, #4]
   280ec:	ldr	r2, [sp]
   280f0:	lsl	r2, r2, #3
   280f4:	bl	250d8 <flatcc_builder_vector_push@@Base+0x110>
   280f8:	str	r0, [fp, #-4]
   280fc:	ldr	r0, [fp, #-4]
   28100:	mov	sp, fp
   28104:	pop	{fp, pc}
   28108:	andeq	r9, r0, fp, lsr #26
   2810c:	andeq	r9, r0, sl, ror #1
   28110:	andeq	r9, r0, r2, asr lr
   28114:	svcne	0x00ffffff

00028118 <flatcc_builder_create_string@@Base>:
   28118:	push	{fp, lr}
   2811c:	mov	fp, sp
   28120:	sub	sp, sp, #96	; 0x60
   28124:	str	r0, [fp, #-8]
   28128:	str	r1, [fp, #-12]
   2812c:	str	r2, [fp, #-16]
   28130:	ldr	r0, [fp, #-16]
   28134:	cmn	r0, #1
   28138:	bls	28148 <flatcc_builder_create_string@@Base+0x30>
   2813c:	movw	r0, #0
   28140:	str	r0, [fp, #-4]
   28144:	b	28264 <flatcc_builder_create_string@@Base+0x14c>
   28148:	ldr	r0, [fp, #-16]
   2814c:	bl	2406c <flatcc_builder_embed_buffer@@Base+0x388>
   28150:	str	r0, [fp, #-24]	; 0xffffffe8
   28154:	ldr	r0, [fp, #-8]
   28158:	ldr	r1, [fp, #-16]
   2815c:	add	r1, r1, #1
   28160:	mov	r2, #4
   28164:	bl	24038 <flatcc_builder_embed_buffer@@Base+0x354>
   28168:	add	r0, r0, #1
   2816c:	str	r0, [fp, #-20]	; 0xffffffec
   28170:	mov	r0, #0
   28174:	str	r0, [sp]
   28178:	str	r0, [sp, #4]
   2817c:	ldr	r0, [sp]
   28180:	add	r0, r0, #4
   28184:	str	r0, [sp]
   28188:	mov	r0, sp
   2818c:	add	r0, r0, #8
   28190:	ldr	r1, [sp, #4]
   28194:	sub	r2, fp, #24
   28198:	str	r2, [r0, r1, lsl #3]
   2819c:	ldr	r1, [sp, #4]
   281a0:	add	r0, r0, r1, lsl #3
   281a4:	movw	r1, #4
   281a8:	str	r1, [r0, #4]
   281ac:	ldr	r0, [sp, #4]
   281b0:	add	r0, r0, #1
   281b4:	str	r0, [sp, #4]
   281b8:	ldr	r0, [fp, #-16]
   281bc:	cmp	r0, #0
   281c0:	bls	28204 <flatcc_builder_create_string@@Base+0xec>
   281c4:	ldr	r0, [fp, #-16]
   281c8:	ldr	r1, [sp]
   281cc:	add	r0, r1, r0
   281d0:	str	r0, [sp]
   281d4:	ldr	r0, [fp, #-12]
   281d8:	mov	r1, sp
   281dc:	add	r1, r1, #8
   281e0:	ldr	r2, [sp, #4]
   281e4:	str	r0, [r1, r2, lsl #3]
   281e8:	ldr	r0, [fp, #-16]
   281ec:	ldr	r2, [sp, #4]
   281f0:	add	r1, r1, r2, lsl #3
   281f4:	str	r0, [r1, #4]
   281f8:	ldr	r0, [sp, #4]
   281fc:	add	r0, r0, #1
   28200:	str	r0, [sp, #4]
   28204:	ldr	r0, [fp, #-20]	; 0xffffffec
   28208:	cmp	r0, #0
   2820c:	bls	28254 <flatcc_builder_create_string@@Base+0x13c>
   28210:	ldr	r0, [fp, #-20]	; 0xffffffec
   28214:	ldr	r1, [sp]
   28218:	add	r0, r1, r0
   2821c:	str	r0, [sp]
   28220:	mov	r0, sp
   28224:	add	r0, r0, #8
   28228:	ldr	r1, [sp, #4]
   2822c:	ldr	r2, [pc, #60]	; 28270 <flatcc_builder_create_string@@Base+0x158>
   28230:	ldr	r2, [pc, r2]
   28234:	str	r2, [r0, r1, lsl #3]
   28238:	ldr	r1, [fp, #-20]	; 0xffffffec
   2823c:	ldr	r2, [sp, #4]
   28240:	add	r0, r0, r2, lsl #3
   28244:	str	r1, [r0, #4]
   28248:	ldr	r0, [sp, #4]
   2824c:	add	r0, r0, #1
   28250:	str	r0, [sp, #4]
   28254:	ldr	r0, [fp, #-8]
   28258:	mov	r1, sp
   2825c:	bl	24080 <flatcc_builder_embed_buffer@@Base+0x39c>
   28260:	str	r0, [fp, #-4]
   28264:	ldr	r0, [fp, #-4]
   28268:	mov	sp, fp
   2826c:	pop	{fp, pc}
   28270:	andeq	fp, r1, r8, lsr lr

00028274 <flatcc_builder_create_string_str@@Base>:
   28274:	push	{fp, lr}
   28278:	mov	fp, sp
   2827c:	sub	sp, sp, #24
   28280:	str	r0, [fp, #-4]
   28284:	str	r1, [fp, #-8]
   28288:	ldr	r0, [fp, #-4]
   2828c:	ldr	r1, [fp, #-8]
   28290:	ldr	r2, [fp, #-8]
   28294:	str	r0, [sp, #12]
   28298:	mov	r0, r2
   2829c:	str	r1, [sp, #8]
   282a0:	bl	12b08 <strlen@plt>
   282a4:	ldr	r1, [sp, #12]
   282a8:	str	r0, [sp, #4]
   282ac:	mov	r0, r1
   282b0:	ldr	r1, [sp, #8]
   282b4:	ldr	r2, [sp, #4]
   282b8:	bl	28118 <flatcc_builder_create_string@@Base>
   282bc:	mov	sp, fp
   282c0:	pop	{fp, pc}

000282c4 <flatcc_builder_create_string_strn@@Base>:
   282c4:	push	{fp, lr}
   282c8:	mov	fp, sp
   282cc:	sub	sp, sp, #24
   282d0:	str	r0, [fp, #-4]
   282d4:	str	r1, [fp, #-8]
   282d8:	str	r2, [sp, #12]
   282dc:	ldr	r0, [fp, #-4]
   282e0:	ldr	r1, [fp, #-8]
   282e4:	ldr	r2, [fp, #-8]
   282e8:	ldr	r3, [sp, #12]
   282ec:	str	r0, [sp, #8]
   282f0:	mov	r0, r2
   282f4:	str	r1, [sp, #4]
   282f8:	mov	r1, r3
   282fc:	bl	255b8 <flatcc_builder_append_string_strn@@Base+0x5c>
   28300:	ldr	r1, [sp, #8]
   28304:	str	r0, [sp]
   28308:	mov	r0, r1
   2830c:	ldr	r1, [sp, #4]
   28310:	ldr	r2, [sp]
   28314:	bl	28118 <flatcc_builder_create_string@@Base>
   28318:	mov	sp, fp
   2831c:	pop	{fp, pc}

00028320 <flatcc_builder_end_string@@Base>:
   28320:	push	{fp, lr}
   28324:	mov	fp, sp
   28328:	sub	sp, sp, #16
   2832c:	str	r0, [sp, #8]
   28330:	ldr	r0, [sp, #8]
   28334:	ldr	r0, [r0, #32]
   28338:	ldrh	r0, [r0, #14]
   2833c:	cmp	r0, #6
   28340:	bne	28348 <flatcc_builder_end_string@@Base+0x28>
   28344:	b	28368 <flatcc_builder_end_string@@Base+0x48>
   28348:	ldr	r0, [pc, #168]	; 283f8 <flatcc_builder_end_string@@Base+0xd8>
   2834c:	add	r0, pc, r0
   28350:	ldr	r1, [pc, #164]	; 283fc <flatcc_builder_end_string@@Base+0xdc>
   28354:	add	r1, pc, r1
   28358:	ldr	r2, [pc, #160]	; 28400 <flatcc_builder_end_string@@Base+0xe0>
   2835c:	add	r3, pc, r2
   28360:	movw	r2, #1732	; 0x6c4
   28364:	bl	12b80 <__assert_fail@plt>
   28368:	ldr	r0, [sp, #8]
   2836c:	ldr	r0, [r0, #32]
   28370:	ldr	r0, [r0, #20]
   28374:	ldr	r1, [sp, #8]
   28378:	ldr	r1, [r1, #20]
   2837c:	cmp	r0, r1
   28380:	bne	28388 <flatcc_builder_end_string@@Base+0x68>
   28384:	b	283a8 <flatcc_builder_end_string@@Base+0x88>
   28388:	ldr	r0, [pc, #116]	; 28404 <flatcc_builder_end_string@@Base+0xe4>
   2838c:	add	r0, pc, r0
   28390:	ldr	r1, [pc, #112]	; 28408 <flatcc_builder_end_string@@Base+0xe8>
   28394:	add	r1, pc, r1
   28398:	ldr	r2, [pc, #108]	; 2840c <flatcc_builder_end_string@@Base+0xec>
   2839c:	add	r3, pc, r2
   283a0:	movw	r2, #1733	; 0x6c5
   283a4:	bl	12b80 <__assert_fail@plt>
   283a8:	ldr	r0, [sp, #8]
   283ac:	ldr	r1, [sp, #8]
   283b0:	ldr	r1, [r1, #16]
   283b4:	ldr	r2, [sp, #8]
   283b8:	ldr	r2, [r2, #20]
   283bc:	bl	28118 <flatcc_builder_create_string@@Base>
   283c0:	str	r0, [sp, #4]
   283c4:	movw	r1, #0
   283c8:	cmp	r1, r0
   283cc:	bne	283dc <flatcc_builder_end_string@@Base+0xbc>
   283d0:	movw	r0, #0
   283d4:	str	r0, [fp, #-4]
   283d8:	b	283ec <flatcc_builder_end_string@@Base+0xcc>
   283dc:	ldr	r0, [sp, #8]
   283e0:	bl	24b74 <flatcc_builder_end_buffer@@Base+0x164>
   283e4:	ldr	r0, [sp, #4]
   283e8:	str	r0, [fp, #-4]
   283ec:	ldr	r0, [fp, #-4]
   283f0:	mov	sp, fp
   283f4:	pop	{fp, pc}
   283f8:	andeq	r9, r0, r6, lsl #7
   283fc:	andeq	r8, r0, r2, asr #28
   28400:	andeq	r9, r0, r9, lsr #24
   28404:	andeq	r9, r0, ip, lsr ip
   28408:	andeq	r8, r0, r2, lsl #28
   2840c:	andeq	r9, r0, r9, ror #23

00028410 <flatcc_builder_string_edit@@Base>:
   28410:	sub	sp, sp, #4
   28414:	str	r0, [sp]
   28418:	ldr	r0, [sp]
   2841c:	ldr	r0, [r0, #16]
   28420:	add	sp, sp, #4
   28424:	bx	lr

00028428 <flatcc_builder_string_len@@Base>:
   28428:	sub	sp, sp, #4
   2842c:	str	r0, [sp]
   28430:	ldr	r0, [sp]
   28434:	ldr	r0, [r0, #32]
   28438:	ldr	r0, [r0, #20]
   2843c:	add	sp, sp, #4
   28440:	bx	lr
   28444:	push	{fp, lr}
   28448:	mov	fp, sp
   2844c:	sub	sp, sp, #24
   28450:	str	r0, [fp, #-8]
   28454:	str	r1, [sp, #12]
   28458:	strh	r2, [sp, #10]
   2845c:	strh	r3, [sp, #8]
   28460:	ldr	r0, [fp, #-8]
   28464:	ldr	r0, [r0, #20]
   28468:	ldrh	r1, [sp, #10]
   2846c:	add	r0, r0, r1
   28470:	sub	r0, r0, #1
   28474:	ldrh	r1, [sp, #10]
   28478:	sub	r1, r1, #1
   2847c:	mvn	r2, #0
   28480:	eor	r1, r1, r2
   28484:	and	r0, r0, r1
   28488:	str	r0, [sp, #4]
   2848c:	ldr	r0, [sp, #4]
   28490:	ldr	r1, [sp, #12]
   28494:	add	r0, r0, r1
   28498:	ldr	r1, [fp, #-8]
   2849c:	str	r0, [r1, #20]
   284a0:	ldr	r1, [fp, #-8]
   284a4:	ldr	r1, [r1, #24]
   284a8:	cmp	r0, r1
   284ac:	bcc	284e0 <flatcc_builder_string_len@@Base+0xb8>
   284b0:	ldr	r0, [fp, #-8]
   284b4:	ldr	r1, [fp, #-8]
   284b8:	ldr	r1, [r1, #20]
   284bc:	add	r1, r1, #1
   284c0:	movw	r2, #65532	; 0xfffc
   284c4:	bl	28e88 <flatcc_builder_get_emit_context@@Base+0x40>
   284c8:	cmp	r0, #0
   284cc:	beq	284dc <flatcc_builder_string_len@@Base+0xb4>
   284d0:	movw	r0, #0
   284d4:	str	r0, [fp, #-4]
   284d8:	b	28534 <flatcc_builder_string_len@@Base+0x10c>
   284dc:	b	284e0 <flatcc_builder_string_len@@Base+0xb8>
   284e0:	ldr	r0, [sp, #4]
   284e4:	add	r0, r0, #4
   284e8:	ldr	r1, [fp, #-8]
   284ec:	ldr	r1, [r1, #4]
   284f0:	ldrh	r2, [sp, #8]
   284f4:	add	r1, r1, r2, lsl #1
   284f8:	strh	r0, [r1]
   284fc:	ldrh	r0, [sp, #8]
   28500:	ldr	r1, [fp, #-8]
   28504:	ldrh	r1, [r1, #8]
   28508:	cmp	r0, r1
   2850c:	blt	28520 <flatcc_builder_string_len@@Base+0xf8>
   28510:	ldrh	r0, [sp, #8]
   28514:	add	r0, r0, #1
   28518:	ldr	r1, [fp, #-8]
   2851c:	strh	r0, [r1, #8]
   28520:	ldr	r0, [fp, #-8]
   28524:	ldr	r0, [r0, #16]
   28528:	ldr	r1, [sp, #4]
   2852c:	add	r0, r0, r1
   28530:	str	r0, [fp, #-4]
   28534:	ldr	r0, [fp, #-4]
   28538:	mov	sp, fp
   2853c:	pop	{fp, pc}

00028540 <flatcc_builder_table_edit@@Base>:
   28540:	push	{fp, lr}
   28544:	mov	fp, sp
   28548:	sub	sp, sp, #8
   2854c:	str	r0, [sp, #4]
   28550:	str	r1, [sp]
   28554:	ldr	r0, [sp, #4]
   28558:	ldr	r0, [r0, #32]
   2855c:	ldrh	r0, [r0, #14]
   28560:	cmp	r0, #3
   28564:	bne	2856c <flatcc_builder_table_edit@@Base+0x2c>
   28568:	b	2858c <flatcc_builder_table_edit@@Base+0x4c>
   2856c:	ldr	r0, [pc, #68]	; 285b8 <flatcc_builder_table_edit@@Base+0x78>
   28570:	add	r0, pc, r0
   28574:	ldr	r1, [pc, #64]	; 285bc <flatcc_builder_table_edit@@Base+0x7c>
   28578:	add	r1, pc, r1
   2857c:	ldr	r2, [pc, #60]	; 285c0 <flatcc_builder_table_edit@@Base+0x80>
   28580:	add	r3, pc, r2
   28584:	movw	r2, #1794	; 0x702
   28588:	bl	12b80 <__assert_fail@plt>
   2858c:	ldr	r0, [sp, #4]
   28590:	ldr	r0, [r0, #16]
   28594:	ldr	r1, [sp, #4]
   28598:	ldr	r1, [r1, #20]
   2859c:	add	r0, r0, r1
   285a0:	ldr	r1, [sp]
   285a4:	movw	r2, #0
   285a8:	sub	r1, r2, r1
   285ac:	add	r0, r0, r1
   285b0:	mov	sp, fp
   285b4:	pop	{fp, pc}
   285b8:	andeq	r9, r0, r2, asr r4
   285bc:	andeq	r8, r0, lr, lsl ip
   285c0:	strdeq	r9, [r0], -sl

000285c4 <flatcc_builder_table_add_copy@@Base>:
   285c4:	push	{fp, lr}
   285c8:	mov	fp, sp
   285cc:	sub	sp, sp, #24
   285d0:	ldr	ip, [fp, #8]
   285d4:	str	r0, [fp, #-4]
   285d8:	str	r1, [fp, #-8]
   285dc:	str	r2, [sp, #12]
   285e0:	str	r3, [sp, #8]
   285e4:	strh	ip, [sp, #6]
   285e8:	ldr	r0, [fp, #-4]
   285ec:	ldr	r1, [fp, #-8]
   285f0:	ldr	r2, [sp, #8]
   285f4:	ldrh	r3, [sp, #6]
   285f8:	bl	27698 <flatcc_builder_table_add@@Base>
   285fc:	str	r0, [sp]
   28600:	movw	r1, #0
   28604:	cmp	r0, r1
   28608:	beq	2861c <flatcc_builder_table_add_copy@@Base+0x58>
   2860c:	ldr	r0, [sp]
   28610:	ldr	r1, [sp, #12]
   28614:	ldr	r2, [sp, #8]
   28618:	bl	12a78 <memcpy@plt>
   2861c:	ldr	r0, [sp]
   28620:	mov	sp, fp
   28624:	pop	{fp, pc}
   28628:	push	{fp, lr}
   2862c:	mov	fp, sp
   28630:	sub	sp, sp, #16
   28634:	str	r0, [sp, #8]
   28638:	strh	r1, [sp, #6]
   2863c:	ldr	r0, [sp, #8]
   28640:	ldr	r0, [r0, #20]
   28644:	add	r0, r0, #4
   28648:	sub	r0, r0, #1
   2864c:	mvn	r1, #3
   28650:	and	r0, r0, r1
   28654:	str	r0, [sp]
   28658:	ldr	r0, [sp]
   2865c:	add	r0, r0, #4
   28660:	ldr	r1, [sp, #8]
   28664:	str	r0, [r1, #20]
   28668:	ldr	r1, [sp, #8]
   2866c:	ldr	r1, [r1, #24]
   28670:	cmp	r0, r1
   28674:	bls	286a4 <flatcc_builder_table_add_copy@@Base+0xe0>
   28678:	ldr	r0, [sp, #8]
   2867c:	ldr	r1, [sp, #8]
   28680:	ldr	r1, [r1, #20]
   28684:	movw	r2, #65532	; 0xfffc
   28688:	bl	28e88 <flatcc_builder_get_emit_context@@Base+0x40>
   2868c:	cmp	r0, #0
   28690:	beq	286a0 <flatcc_builder_table_add_copy@@Base+0xdc>
   28694:	movw	r0, #0
   28698:	str	r0, [fp, #-4]
   2869c:	b	28710 <flatcc_builder_table_add_copy@@Base+0x14c>
   286a0:	b	286a4 <flatcc_builder_table_add_copy@@Base+0xe0>
   286a4:	ldr	r0, [sp]
   286a8:	add	r0, r0, #4
   286ac:	ldr	r1, [sp, #8]
   286b0:	ldr	r1, [r1, #4]
   286b4:	ldrh	r2, [sp, #6]
   286b8:	add	r1, r1, r2, lsl #1
   286bc:	strh	r0, [r1]
   286c0:	ldrh	r0, [sp, #6]
   286c4:	ldr	r1, [sp, #8]
   286c8:	ldrh	r1, [r1, #8]
   286cc:	cmp	r0, r1
   286d0:	blt	286e4 <flatcc_builder_table_add_copy@@Base+0x120>
   286d4:	ldrh	r0, [sp, #6]
   286d8:	add	r0, r0, #1
   286dc:	ldr	r1, [sp, #8]
   286e0:	strh	r0, [r1, #8]
   286e4:	ldr	r0, [sp]
   286e8:	ldr	r1, [sp, #8]
   286ec:	ldr	r2, [r1]
   286f0:	add	r3, r2, #2
   286f4:	str	r3, [r1]
   286f8:	strh	r0, [r2]
   286fc:	ldr	r0, [sp, #8]
   28700:	ldr	r0, [r0, #16]
   28704:	ldr	r1, [sp]
   28708:	add	r0, r0, r1
   2870c:	str	r0, [fp, #-4]
   28710:	ldr	r0, [fp, #-4]
   28714:	mov	sp, fp
   28718:	pop	{fp, pc}

0002871c <flatcc_builder_push_buffer_alignment@@Base>:
   2871c:	sub	sp, sp, #8
   28720:	str	r0, [sp, #4]
   28724:	ldr	r0, [sp, #4]
   28728:	ldrh	r0, [r0, #128]	; 0x80
   2872c:	strh	r0, [sp, #2]
   28730:	ldr	r0, [sp, #4]
   28734:	movw	r1, #4
   28738:	strh	r1, [r0, #128]	; 0x80
   2873c:	ldrh	r0, [sp, #2]
   28740:	add	sp, sp, #8
   28744:	bx	lr

00028748 <flatcc_builder_pop_buffer_alignment@@Base>:
   28748:	push	{fp, lr}
   2874c:	mov	fp, sp
   28750:	sub	sp, sp, #8
   28754:	str	r0, [sp, #4]
   28758:	strh	r1, [sp, #2]
   2875c:	ldr	r0, [sp, #4]
   28760:	ldrh	r1, [sp, #2]
   28764:	bl	2454c <flatcc_builder_create_buffer@@Base+0x3a8>
   28768:	mov	sp, fp
   2876c:	pop	{fp, pc}

00028770 <flatcc_builder_get_buffer_alignment@@Base>:
   28770:	sub	sp, sp, #4
   28774:	str	r0, [sp]
   28778:	ldr	r0, [sp]
   2877c:	ldrh	r0, [r0, #128]	; 0x80
   28780:	add	sp, sp, #4
   28784:	bx	lr

00028788 <flatcc_builder_set_vtable_clustering@@Base>:
   28788:	sub	sp, sp, #8
   2878c:	str	r0, [sp, #4]
   28790:	str	r1, [sp]
   28794:	ldr	r0, [sp]
   28798:	cmp	r0, #0
   2879c:	movw	r0, #0
   287a0:	movne	r0, #1
   287a4:	mvn	r1, #0
   287a8:	eor	r0, r0, r1
   287ac:	and	r0, r0, #1
   287b0:	ldr	r1, [sp, #4]
   287b4:	str	r0, [r1, #180]	; 0xb4
   287b8:	add	sp, sp, #8
   287bc:	bx	lr

000287c0 <flatcc_builder_set_block_align@@Base>:
   287c0:	sub	sp, sp, #8
   287c4:	str	r0, [sp, #4]
   287c8:	strh	r1, [sp, #2]
   287cc:	ldrh	r0, [sp, #2]
   287d0:	ldr	r1, [sp, #4]
   287d4:	strh	r0, [r1, #132]	; 0x84
   287d8:	add	sp, sp, #8
   287dc:	bx	lr

000287e0 <flatcc_builder_get_level@@Base>:
   287e0:	sub	sp, sp, #4
   287e4:	str	r0, [sp]
   287e8:	ldr	r0, [sp]
   287ec:	ldr	r0, [r0, #156]	; 0x9c
   287f0:	add	sp, sp, #4
   287f4:	bx	lr

000287f8 <flatcc_builder_set_max_level@@Base>:
   287f8:	sub	sp, sp, #8
   287fc:	str	r0, [sp, #4]
   28800:	str	r1, [sp]
   28804:	ldr	r0, [sp]
   28808:	ldr	r1, [sp, #4]
   2880c:	str	r0, [r1, #176]	; 0xb0
   28810:	ldr	r0, [sp, #4]
   28814:	ldr	r0, [r0, #160]	; 0xa0
   28818:	ldr	r1, [sp, #4]
   2881c:	ldr	r1, [r1, #176]	; 0xb0
   28820:	cmp	r0, r1
   28824:	bge	28838 <flatcc_builder_set_max_level@@Base+0x40>
   28828:	ldr	r0, [sp, #4]
   2882c:	ldr	r0, [r0, #176]	; 0xb0
   28830:	ldr	r1, [sp, #4]
   28834:	str	r0, [r1, #160]	; 0xa0
   28838:	add	sp, sp, #8
   2883c:	bx	lr

00028840 <flatcc_builder_get_buffer_size@@Base>:
   28840:	sub	sp, sp, #4
   28844:	str	r0, [sp]
   28848:	ldr	r0, [sp]
   2884c:	ldr	r0, [r0, #140]	; 0x8c
   28850:	ldr	r1, [sp]
   28854:	ldr	r1, [r1, #136]	; 0x88
   28858:	sub	r0, r0, r1
   2885c:	add	sp, sp, #4
   28860:	bx	lr

00028864 <flatcc_builder_get_buffer_start@@Base>:
   28864:	sub	sp, sp, #4
   28868:	str	r0, [sp]
   2886c:	ldr	r0, [sp]
   28870:	ldr	r0, [r0, #136]	; 0x88
   28874:	add	sp, sp, #4
   28878:	bx	lr

0002887c <flatcc_builder_get_buffer_end@@Base>:
   2887c:	sub	sp, sp, #4
   28880:	str	r0, [sp]
   28884:	ldr	r0, [sp]
   28888:	ldr	r0, [r0, #140]	; 0x8c
   2888c:	add	sp, sp, #4
   28890:	bx	lr

00028894 <flatcc_builder_set_vtable_cache_limit@@Base>:
   28894:	sub	sp, sp, #8
   28898:	str	r0, [sp, #4]
   2889c:	str	r1, [sp]
   288a0:	ldr	r0, [sp]
   288a4:	ldr	r1, [sp, #4]
   288a8:	str	r0, [r1, #172]	; 0xac
   288ac:	add	sp, sp, #8
   288b0:	bx	lr

000288b4 <flatcc_builder_set_identifier@@Base>:
   288b4:	sub	sp, sp, #16
   288b8:	str	r0, [sp, #12]
   288bc:	str	r1, [sp, #8]
   288c0:	ldr	r0, [sp, #12]
   288c4:	add	r0, r0, #168	; 0xa8
   288c8:	ldr	r1, [sp, #8]
   288cc:	movw	r2, #0
   288d0:	cmp	r1, r2
   288d4:	str	r0, [sp, #4]
   288d8:	beq	288e8 <flatcc_builder_set_identifier@@Base+0x34>
   288dc:	ldr	r0, [sp, #8]
   288e0:	str	r0, [sp]
   288e4:	b	288f8 <flatcc_builder_set_identifier@@Base+0x44>
   288e8:	ldr	r0, [pc, #56]	; 28928 <flatcc_builder_set_identifier@@Base+0x74>
   288ec:	ldr	r0, [pc, r0]
   288f0:	str	r0, [sp]
   288f4:	b	288f8 <flatcc_builder_set_identifier@@Base+0x44>
   288f8:	ldr	r0, [sp]
   288fc:	ldrb	r1, [r0]
   28900:	ldr	r2, [sp, #4]
   28904:	strb	r1, [r2]
   28908:	ldrb	r1, [r0, #1]
   2890c:	strb	r1, [r2, #1]
   28910:	ldrb	r1, [r0, #2]
   28914:	strb	r1, [r2, #2]
   28918:	ldrb	r0, [r0, #3]
   2891c:	strb	r0, [r2, #3]
   28920:	add	sp, sp, #16
   28924:	bx	lr
   28928:	andeq	fp, r1, ip, ror r7

0002892c <flatcc_builder_get_type@@Base>:
   2892c:	sub	sp, sp, #8
   28930:	str	r0, [sp, #4]
   28934:	ldr	r0, [sp, #4]
   28938:	ldr	r0, [r0, #32]
   2893c:	movw	r1, #0
   28940:	cmp	r0, r1
   28944:	beq	2895c <flatcc_builder_get_type@@Base+0x30>
   28948:	ldr	r0, [sp, #4]
   2894c:	ldr	r0, [r0, #32]
   28950:	ldrh	r0, [r0, #14]
   28954:	str	r0, [sp]
   28958:	b	28968 <flatcc_builder_get_type@@Base+0x3c>
   2895c:	movw	r0, #0
   28960:	str	r0, [sp]
   28964:	b	28968 <flatcc_builder_get_type@@Base+0x3c>
   28968:	ldr	r0, [sp]
   2896c:	add	sp, sp, #8
   28970:	bx	lr

00028974 <flatcc_builder_get_type_at@@Base>:
   28974:	sub	sp, sp, #12
   28978:	str	r0, [sp, #4]
   2897c:	str	r1, [sp]
   28980:	ldr	r0, [sp]
   28984:	cmp	r0, #1
   28988:	blt	289a0 <flatcc_builder_get_type_at@@Base+0x2c>
   2898c:	ldr	r0, [sp]
   28990:	ldr	r1, [sp, #4]
   28994:	ldr	r1, [r1, #156]	; 0x9c
   28998:	cmp	r0, r1
   2899c:	ble	289ac <flatcc_builder_get_type_at@@Base+0x38>
   289a0:	movw	r0, #0
   289a4:	str	r0, [sp, #8]
   289a8:	b	289d8 <flatcc_builder_get_type_at@@Base+0x64>
   289ac:	ldr	r0, [sp, #4]
   289b0:	ldr	r0, [r0, #32]
   289b4:	ldr	r1, [sp]
   289b8:	ldr	r2, [sp, #4]
   289bc:	ldr	r2, [r2, #156]	; 0x9c
   289c0:	sub	r1, r1, r2
   289c4:	movw	r2, #36	; 0x24
   289c8:	mul	r1, r1, r2
   289cc:	add	r0, r0, r1
   289d0:	ldrh	r0, [r0, #14]
   289d4:	str	r0, [sp, #8]
   289d8:	ldr	r0, [sp, #8]
   289dc:	add	sp, sp, #12
   289e0:	bx	lr

000289e4 <flatcc_builder_get_direct_buffer@@Base>:
   289e4:	push	{fp, lr}
   289e8:	mov	fp, sp
   289ec:	sub	sp, sp, #16
   289f0:	str	r0, [sp, #8]
   289f4:	str	r1, [sp, #4]
   289f8:	ldr	r0, [sp, #8]
   289fc:	ldr	r0, [r0, #184]	; 0xb8
   28a00:	cmp	r0, #0
   28a04:	beq	28a20 <flatcc_builder_get_direct_buffer@@Base+0x3c>
   28a08:	ldr	r0, [sp, #8]
   28a0c:	add	r0, r0, #188	; 0xbc
   28a10:	ldr	r1, [sp, #4]
   28a14:	bl	28a54 <flatcc_builder_get_direct_buffer@@Base+0x70>
   28a18:	str	r0, [fp, #-4]
   28a1c:	b	28a48 <flatcc_builder_get_direct_buffer@@Base+0x64>
   28a20:	ldr	r0, [sp, #4]
   28a24:	movw	r1, #0
   28a28:	cmp	r0, r1
   28a2c:	beq	28a3c <flatcc_builder_get_direct_buffer@@Base+0x58>
   28a30:	ldr	r0, [sp, #4]
   28a34:	movw	r1, #0
   28a38:	str	r1, [r0]
   28a3c:	b	28a40 <flatcc_builder_get_direct_buffer@@Base+0x5c>
   28a40:	movw	r0, #0
   28a44:	str	r0, [fp, #-4]
   28a48:	ldr	r0, [fp, #-4]
   28a4c:	mov	sp, fp
   28a50:	pop	{fp, pc}
   28a54:	sub	sp, sp, #12
   28a58:	str	r0, [sp, #4]
   28a5c:	str	r1, [sp]
   28a60:	ldr	r0, [sp, #4]
   28a64:	ldr	r0, [r0]
   28a68:	ldr	r1, [sp, #4]
   28a6c:	ldr	r1, [r1, #4]
   28a70:	cmp	r0, r1
   28a74:	bne	28aa8 <flatcc_builder_get_direct_buffer@@Base+0xc4>
   28a78:	ldr	r0, [sp]
   28a7c:	movw	r1, #0
   28a80:	cmp	r0, r1
   28a84:	beq	28a98 <flatcc_builder_get_direct_buffer@@Base+0xb4>
   28a88:	ldr	r0, [sp, #4]
   28a8c:	ldr	r0, [r0, #24]
   28a90:	ldr	r1, [sp]
   28a94:	str	r0, [r1]
   28a98:	ldr	r0, [sp, #4]
   28a9c:	ldr	r0, [r0, #8]
   28aa0:	str	r0, [sp, #8]
   28aa4:	b	28acc <flatcc_builder_get_direct_buffer@@Base+0xe8>
   28aa8:	ldr	r0, [sp]
   28aac:	movw	r1, #0
   28ab0:	cmp	r0, r1
   28ab4:	beq	28ac4 <flatcc_builder_get_direct_buffer@@Base+0xe0>
   28ab8:	ldr	r0, [sp]
   28abc:	movw	r1, #0
   28ac0:	str	r1, [r0]
   28ac4:	movw	r0, #0
   28ac8:	str	r0, [sp, #8]
   28acc:	ldr	r0, [sp, #8]
   28ad0:	add	sp, sp, #12
   28ad4:	bx	lr

00028ad8 <flatcc_builder_copy_buffer@@Base>:
   28ad8:	push	{fp, lr}
   28adc:	mov	fp, sp
   28ae0:	sub	sp, sp, #16
   28ae4:	str	r0, [sp, #8]
   28ae8:	str	r1, [sp, #4]
   28aec:	str	r2, [sp]
   28af0:	ldr	r0, [sp, #8]
   28af4:	ldr	r0, [r0, #184]	; 0xb8
   28af8:	cmp	r0, #0
   28afc:	bne	28b0c <flatcc_builder_copy_buffer@@Base+0x34>
   28b00:	movw	r0, #0
   28b04:	str	r0, [fp, #-4]
   28b08:	b	28b60 <flatcc_builder_copy_buffer@@Base+0x88>
   28b0c:	ldr	r0, [sp, #8]
   28b10:	add	r0, r0, #188	; 0xbc
   28b14:	ldr	r1, [sp, #4]
   28b18:	ldr	r2, [sp]
   28b1c:	bl	297c8 <flatcc_emitter_copy_buffer@@Base>
   28b20:	str	r0, [sp, #4]
   28b24:	ldr	r0, [sp, #4]
   28b28:	movw	r1, #0
   28b2c:	cmp	r0, r1
   28b30:	beq	28b38 <flatcc_builder_copy_buffer@@Base+0x60>
   28b34:	b	28b58 <flatcc_builder_copy_buffer@@Base+0x80>
   28b38:	ldr	r0, [pc, #44]	; 28b6c <flatcc_builder_copy_buffer@@Base+0x94>
   28b3c:	add	r0, pc, r0
   28b40:	ldr	r1, [pc, #40]	; 28b70 <flatcc_builder_copy_buffer@@Base+0x98>
   28b44:	add	r1, pc, r1
   28b48:	ldr	r2, [pc, #36]	; 28b74 <flatcc_builder_copy_buffer@@Base+0x9c>
   28b4c:	add	r3, pc, r2
   28b50:	movw	r2, #1926	; 0x786
   28b54:	bl	12b80 <__assert_fail@plt>
   28b58:	ldr	r0, [sp, #4]
   28b5c:	str	r0, [fp, #-4]
   28b60:	ldr	r0, [fp, #-4]
   28b64:	mov	sp, fp
   28b68:	pop	{fp, pc}
   28b6c:	andeq	r8, r0, r5, asr #17
   28b70:	andeq	r8, r0, r2, asr r6
   28b74:			; <UNDEFINED> instruction: 0x000095b9

00028b78 <flatcc_builder_finalize_buffer@@Base>:
   28b78:	push	{fp, lr}
   28b7c:	mov	fp, sp
   28b80:	sub	sp, sp, #16
   28b84:	str	r0, [fp, #-4]
   28b88:	str	r1, [sp, #8]
   28b8c:	ldr	r0, [fp, #-4]
   28b90:	bl	28840 <flatcc_builder_get_buffer_size@@Base>
   28b94:	str	r0, [sp]
   28b98:	ldr	r0, [sp, #8]
   28b9c:	movw	r1, #0
   28ba0:	cmp	r0, r1
   28ba4:	beq	28bb4 <flatcc_builder_finalize_buffer@@Base+0x3c>
   28ba8:	ldr	r0, [sp]
   28bac:	ldr	r1, [sp, #8]
   28bb0:	str	r0, [r1]
   28bb4:	ldr	r0, [sp]
   28bb8:	bl	12ad8 <malloc@plt>
   28bbc:	str	r0, [sp, #4]
   28bc0:	ldr	r0, [sp, #4]
   28bc4:	movw	r1, #0
   28bc8:	cmp	r0, r1
   28bcc:	bne	28bf0 <flatcc_builder_finalize_buffer@@Base+0x78>
   28bd0:	ldr	r0, [pc, #144]	; 28c68 <flatcc_builder_finalize_buffer@@Base+0xf0>
   28bd4:	add	r0, pc, r0
   28bd8:	ldr	r1, [pc, #140]	; 28c6c <flatcc_builder_finalize_buffer@@Base+0xf4>
   28bdc:	add	r1, pc, r1
   28be0:	ldr	r2, [pc, #136]	; 28c70 <flatcc_builder_finalize_buffer@@Base+0xf8>
   28be4:	add	r3, pc, r2
   28be8:	movw	r2, #1944	; 0x798
   28bec:	bl	12b80 <__assert_fail@plt>
   28bf0:	ldr	r0, [fp, #-4]
   28bf4:	ldr	r1, [sp, #4]
   28bf8:	ldr	r2, [sp]
   28bfc:	bl	28ad8 <flatcc_builder_copy_buffer@@Base>
   28c00:	movw	r1, #0
   28c04:	cmp	r0, r1
   28c08:	bne	28c2c <flatcc_builder_finalize_buffer@@Base+0xb4>
   28c0c:	ldr	r0, [pc, #96]	; 28c74 <flatcc_builder_finalize_buffer@@Base+0xfc>
   28c10:	add	r0, pc, r0
   28c14:	ldr	r1, [pc, #92]	; 28c78 <flatcc_builder_finalize_buffer@@Base+0x100>
   28c18:	add	r1, pc, r1
   28c1c:	ldr	r2, [pc, #88]	; 28c7c <flatcc_builder_finalize_buffer@@Base+0x104>
   28c20:	add	r3, pc, r2
   28c24:	movw	r2, #1948	; 0x79c
   28c28:	bl	12b80 <__assert_fail@plt>
   28c2c:	b	28c30 <flatcc_builder_finalize_buffer@@Base+0xb8>
   28c30:	ldr	r0, [sp, #4]
   28c34:	movw	r1, #0
   28c38:	cmp	r0, r1
   28c3c:	bne	28c5c <flatcc_builder_finalize_buffer@@Base+0xe4>
   28c40:	ldr	r0, [sp, #8]
   28c44:	movw	r1, #0
   28c48:	cmp	r0, r1
   28c4c:	beq	28c5c <flatcc_builder_finalize_buffer@@Base+0xe4>
   28c50:	ldr	r0, [sp, #8]
   28c54:	movw	r1, #0
   28c58:	str	r1, [r0]
   28c5c:	ldr	r0, [sp, #4]
   28c60:	mov	sp, fp
   28c64:	pop	{fp, pc}
   28c68:	andeq	r9, r0, pc, ror r7
   28c6c:			; <UNDEFINED> instruction: 0x000085ba
   28c70:	andeq	r9, r0, r6, ror #10
   28c74:	andeq	r9, r0, r3, asr #14
   28c78:	andeq	r8, r0, lr, ror r5
   28c7c:	andeq	r9, r0, sl, lsr #10

00028c80 <flatcc_builder_finalize_aligned_buffer@@Base>:
   28c80:	push	{fp, lr}
   28c84:	mov	fp, sp
   28c88:	sub	sp, sp, #24
   28c8c:	str	r0, [fp, #-4]
   28c90:	str	r1, [fp, #-8]
   28c94:	ldr	r0, [fp, #-4]
   28c98:	bl	28840 <flatcc_builder_get_buffer_size@@Base>
   28c9c:	str	r0, [sp, #4]
   28ca0:	ldr	r0, [fp, #-8]
   28ca4:	movw	r1, #0
   28ca8:	cmp	r0, r1
   28cac:	beq	28cbc <flatcc_builder_finalize_aligned_buffer@@Base+0x3c>
   28cb0:	ldr	r0, [sp, #4]
   28cb4:	ldr	r1, [fp, #-8]
   28cb8:	str	r0, [r1]
   28cbc:	ldr	r0, [fp, #-4]
   28cc0:	bl	28770 <flatcc_builder_get_buffer_alignment@@Base>
   28cc4:	uxth	r0, r0
   28cc8:	str	r0, [sp, #8]
   28ccc:	ldr	r0, [sp, #4]
   28cd0:	ldr	r1, [sp, #8]
   28cd4:	add	r0, r0, r1
   28cd8:	sub	r0, r0, #1
   28cdc:	ldr	r1, [sp, #8]
   28ce0:	sub	r1, r1, #1
   28ce4:	mvn	r2, #0
   28ce8:	eor	r1, r1, r2
   28cec:	and	r0, r0, r1
   28cf0:	str	r0, [sp, #4]
   28cf4:	ldr	r0, [sp, #8]
   28cf8:	ldr	r1, [sp, #4]
   28cfc:	bl	28d84 <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   28d00:	str	r0, [sp, #12]
   28d04:	ldr	r0, [sp, #12]
   28d08:	movw	r1, #0
   28d0c:	cmp	r0, r1
   28d10:	bne	28d18 <flatcc_builder_finalize_aligned_buffer@@Base+0x98>
   28d14:	b	28d4c <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   28d18:	ldr	r0, [fp, #-4]
   28d1c:	ldr	r1, [sp, #12]
   28d20:	ldr	r2, [sp, #4]
   28d24:	bl	28ad8 <flatcc_builder_copy_buffer@@Base>
   28d28:	movw	r1, #0
   28d2c:	cmp	r0, r1
   28d30:	bne	28d48 <flatcc_builder_finalize_aligned_buffer@@Base+0xc8>
   28d34:	ldr	r0, [sp, #12]
   28d38:	bl	12a6c <free@plt>
   28d3c:	movw	r0, #0
   28d40:	str	r0, [sp, #12]
   28d44:	b	28d4c <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   28d48:	b	28d4c <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   28d4c:	ldr	r0, [sp, #12]
   28d50:	movw	r1, #0
   28d54:	cmp	r0, r1
   28d58:	bne	28d78 <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   28d5c:	ldr	r0, [fp, #-8]
   28d60:	movw	r1, #0
   28d64:	cmp	r0, r1
   28d68:	beq	28d78 <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   28d6c:	ldr	r0, [fp, #-8]
   28d70:	movw	r1, #0
   28d74:	str	r1, [r0]
   28d78:	ldr	r0, [sp, #12]
   28d7c:	mov	sp, fp
   28d80:	pop	{fp, pc}
   28d84:	push	{fp, lr}
   28d88:	mov	fp, sp
   28d8c:	sub	sp, sp, #16
   28d90:	str	r0, [fp, #-4]
   28d94:	str	r1, [sp, #8]
   28d98:	movw	r0, #0
   28d9c:	str	r0, [sp]
   28da0:	ldr	r0, [fp, #-4]
   28da4:	cmp	r0, #4
   28da8:	bcs	28db4 <flatcc_builder_finalize_aligned_buffer@@Base+0x134>
   28dac:	movw	r0, #4
   28db0:	str	r0, [fp, #-4]
   28db4:	ldr	r1, [fp, #-4]
   28db8:	ldr	r2, [sp, #8]
   28dbc:	mov	r0, sp
   28dc0:	bl	12b20 <posix_memalign@plt>
   28dc4:	str	r0, [sp, #4]
   28dc8:	ldr	r0, [sp, #4]
   28dcc:	cmp	r0, #0
   28dd0:	beq	28df4 <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   28dd4:	ldr	r0, [sp]
   28dd8:	movw	r1, #0
   28ddc:	cmp	r0, r1
   28de0:	beq	28df4 <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   28de4:	ldr	r0, [sp]
   28de8:	bl	12a6c <free@plt>
   28dec:	movw	r0, #0
   28df0:	str	r0, [sp]
   28df4:	ldr	r0, [sp]
   28df8:	mov	sp, fp
   28dfc:	pop	{fp, pc}

00028e00 <flatcc_builder_aligned_alloc@@Base>:
   28e00:	push	{fp, lr}
   28e04:	mov	fp, sp
   28e08:	sub	sp, sp, #8
   28e0c:	str	r0, [sp, #4]
   28e10:	str	r1, [sp]
   28e14:	ldr	r0, [sp, #4]
   28e18:	ldr	r1, [sp]
   28e1c:	bl	28d84 <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   28e20:	mov	sp, fp
   28e24:	pop	{fp, pc}

00028e28 <flatcc_builder_aligned_free@@Base>:
   28e28:	push	{fp, lr}
   28e2c:	mov	fp, sp
   28e30:	sub	sp, sp, #8
   28e34:	str	r0, [sp, #4]
   28e38:	ldr	r0, [sp, #4]
   28e3c:	bl	12a6c <free@plt>
   28e40:	mov	sp, fp
   28e44:	pop	{fp, pc}

00028e48 <flatcc_builder_get_emit_context@@Base>:
   28e48:	sub	sp, sp, #4
   28e4c:	str	r0, [sp]
   28e50:	ldr	r0, [sp]
   28e54:	ldr	r0, [r0, #36]	; 0x24
   28e58:	add	sp, sp, #4
   28e5c:	bx	lr
   28e60:	sub	sp, sp, #8
   28e64:	str	r0, [sp, #4]
   28e68:	strh	r1, [sp, #2]
   28e6c:	ldr	r0, [sp, #4]
   28e70:	ldr	r0, [r0, #140]	; 0x8c
   28e74:	ldrh	r1, [sp, #2]
   28e78:	sub	r1, r1, #1
   28e7c:	and	r0, r0, r1
   28e80:	add	sp, sp, #8
   28e84:	bx	lr
   28e88:	push	{fp, lr}
   28e8c:	mov	fp, sp
   28e90:	sub	sp, sp, #32
   28e94:	str	r0, [fp, #-8]
   28e98:	str	r1, [fp, #-12]
   28e9c:	str	r2, [sp, #16]
   28ea0:	ldr	r0, [fp, #-8]
   28ea4:	add	r0, r0, #52	; 0x34
   28ea8:	add	r0, r0, #8
   28eac:	str	r0, [sp, #12]
   28eb0:	ldr	r0, [fp, #-8]
   28eb4:	ldr	r0, [r0, #48]	; 0x30
   28eb8:	ldr	r1, [fp, #-8]
   28ebc:	ldr	r1, [r1, #40]	; 0x28
   28ec0:	ldr	r2, [sp, #12]
   28ec4:	ldr	r3, [fp, #-8]
   28ec8:	ldr	r3, [r3, #28]
   28ecc:	ldr	ip, [fp, #-12]
   28ed0:	add	r3, r3, ip
   28ed4:	str	r0, [sp, #8]
   28ed8:	mov	r0, r1
   28edc:	mov	r1, r2
   28ee0:	mov	r2, r3
   28ee4:	movw	r3, #1
   28ee8:	str	r3, [sp, #4]
   28eec:	ldr	ip, [sp, #4]
   28ef0:	str	ip, [sp]
   28ef4:	ldr	lr, [sp, #8]
   28ef8:	blx	lr
   28efc:	cmp	r0, #0
   28f00:	beq	28f10 <flatcc_builder_get_emit_context@@Base+0xc8>
   28f04:	mvn	r0, #0
   28f08:	str	r0, [fp, #-4]
   28f0c:	b	28f24 <flatcc_builder_get_emit_context@@Base+0xdc>
   28f10:	ldr	r0, [fp, #-8]
   28f14:	ldr	r1, [sp, #16]
   28f18:	bl	24ca0 <flatcc_builder_start_struct@@Base+0x70>
   28f1c:	movw	r0, #0
   28f20:	str	r0, [fp, #-4]
   28f24:	ldr	r0, [fp, #-4]
   28f28:	mov	sp, fp
   28f2c:	pop	{fp, pc}
   28f30:	push	{fp, lr}
   28f34:	mov	fp, sp
   28f38:	sub	sp, sp, #32
   28f3c:	str	r0, [fp, #-8]
   28f40:	ldr	r0, [fp, #-8]
   28f44:	add	r0, r0, #52	; 0x34
   28f48:	add	r0, r0, #40	; 0x28
   28f4c:	str	r0, [fp, #-12]
   28f50:	ldr	r0, [fp, #-8]
   28f54:	ldr	r0, [r0, #124]	; 0x7c
   28f58:	cmp	r0, #0
   28f5c:	bne	28f64 <flatcc_builder_get_emit_context@@Base+0x11c>
   28f60:	b	28f84 <flatcc_builder_get_emit_context@@Base+0x13c>
   28f64:	ldr	r0, [pc, #320]	; 290ac <flatcc_builder_get_emit_context@@Base+0x264>
   28f68:	add	r0, pc, r0
   28f6c:	ldr	r1, [pc, #316]	; 290b0 <flatcc_builder_get_emit_context@@Base+0x268>
   28f70:	add	r1, pc, r1
   28f74:	ldr	r2, [pc, #312]	; 290b4 <flatcc_builder_get_emit_context@@Base+0x26c>
   28f78:	add	r3, pc, r2
   28f7c:	movw	r2, #342	; 0x156
   28f80:	bl	12b80 <__assert_fail@plt>
   28f84:	ldr	r0, [fp, #-8]
   28f88:	ldr	r1, [fp, #-8]
   28f8c:	ldr	r2, [r1, #124]	; 0x7c
   28f90:	movw	r1, #6
   28f94:	movw	r3, #16
   28f98:	movw	ip, #0
   28f9c:	str	ip, [sp]
   28fa0:	bl	239d8 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   28fa4:	movw	r1, #0
   28fa8:	cmp	r0, r1
   28fac:	bne	28fbc <flatcc_builder_get_emit_context@@Base+0x174>
   28fb0:	mvn	r0, #0
   28fb4:	str	r0, [fp, #-4]
   28fb8:	b	290a0 <flatcc_builder_get_emit_context@@Base+0x258>
   28fbc:	ldr	r0, [fp, #-8]
   28fc0:	movw	r1, #16
   28fc4:	str	r1, [r0, #124]	; 0x7c
   28fc8:	movw	r0, #256	; 0x100
   28fcc:	str	r0, [sp, #16]
   28fd0:	ldr	r0, [fp, #-8]
   28fd4:	ldr	r0, [r0, #48]	; 0x30
   28fd8:	ldr	r1, [fp, #-8]
   28fdc:	ldr	r1, [r1, #40]	; 0x28
   28fe0:	ldr	r2, [fp, #-12]
   28fe4:	ldr	r3, [sp, #16]
   28fe8:	str	r0, [sp, #8]
   28fec:	mov	r0, r1
   28ff0:	mov	r1, r2
   28ff4:	mov	r2, r3
   28ff8:	movw	r3, #1
   28ffc:	movw	ip, #5
   29000:	str	ip, [sp]
   29004:	ldr	ip, [sp, #8]
   29008:	blx	ip
   2900c:	cmp	r0, #0
   29010:	beq	29020 <flatcc_builder_get_emit_context@@Base+0x1d8>
   29014:	mvn	r0, #0
   29018:	str	r0, [fp, #-4]
   2901c:	b	290a0 <flatcc_builder_get_emit_context@@Base+0x258>
   29020:	b	29024 <flatcc_builder_get_emit_context@@Base+0x1dc>
   29024:	ldr	r0, [sp, #16]
   29028:	lsl	r0, r0, #1
   2902c:	ldr	r1, [fp, #-12]
   29030:	ldr	r1, [r1, #4]
   29034:	cmp	r0, r1
   29038:	bhi	2904c <flatcc_builder_get_emit_context@@Base+0x204>
   2903c:	ldr	r0, [sp, #16]
   29040:	lsl	r0, r0, #1
   29044:	str	r0, [sp, #16]
   29048:	b	29024 <flatcc_builder_get_emit_context@@Base+0x1dc>
   2904c:	ldr	r0, [sp, #16]
   29050:	lsr	r0, r0, #2
   29054:	str	r0, [sp, #16]
   29058:	movw	r0, #0
   2905c:	str	r0, [sp, #12]
   29060:	ldr	r0, [sp, #12]
   29064:	movw	r1, #1
   29068:	lsl	r0, r1, r0
   2906c:	ldr	r1, [sp, #16]
   29070:	cmp	r0, r1
   29074:	bcs	2908c <flatcc_builder_get_emit_context@@Base+0x244>
   29078:	b	2907c <flatcc_builder_get_emit_context@@Base+0x234>
   2907c:	ldr	r0, [sp, #12]
   29080:	add	r0, r0, #1
   29084:	str	r0, [sp, #12]
   29088:	b	29060 <flatcc_builder_get_emit_context@@Base+0x218>
   2908c:	ldr	r0, [sp, #12]
   29090:	ldr	r1, [fp, #-8]
   29094:	str	r0, [r1, #116]	; 0x74
   29098:	movw	r0, #0
   2909c:	str	r0, [fp, #-4]
   290a0:	ldr	r0, [fp, #-4]
   290a4:	mov	sp, fp
   290a8:	pop	{fp, pc}
   290ac:	andeq	r9, r0, pc, lsr #7
   290b0:	andeq	r8, r0, r6, lsr #4
   290b4:	andeq	r9, r0, lr, lsr #7

000290b8 <flatcc_emitter_recycle_page@@Base>:
   290b8:	sub	sp, sp, #12
   290bc:	str	r0, [sp, #4]
   290c0:	str	r1, [sp]
   290c4:	ldr	r0, [sp]
   290c8:	ldr	r1, [sp, #4]
   290cc:	ldr	r1, [r1]
   290d0:	cmp	r0, r1
   290d4:	beq	290ec <flatcc_emitter_recycle_page@@Base+0x34>
   290d8:	ldr	r0, [sp]
   290dc:	ldr	r1, [sp, #4]
   290e0:	ldr	r1, [r1, #4]
   290e4:	cmp	r0, r1
   290e8:	bne	290f8 <flatcc_emitter_recycle_page@@Base+0x40>
   290ec:	mvn	r0, #0
   290f0:	str	r0, [sp, #8]
   290f4:	b	2916c <flatcc_emitter_recycle_page@@Base+0xb4>
   290f8:	ldr	r0, [sp]
   290fc:	ldr	r0, [r0, #2948]	; 0xb84
   29100:	ldr	r1, [sp]
   29104:	ldr	r1, [r1, #2944]	; 0xb80
   29108:	str	r0, [r1, #2948]	; 0xb84
   2910c:	ldr	r0, [sp]
   29110:	ldr	r0, [r0, #2944]	; 0xb80
   29114:	ldr	r1, [sp]
   29118:	ldr	r1, [r1, #2948]	; 0xb84
   2911c:	str	r0, [r1, #2944]	; 0xb80
   29120:	ldr	r0, [sp, #4]
   29124:	ldr	r0, [r0]
   29128:	ldr	r0, [r0, #2948]	; 0xb84
   2912c:	ldr	r1, [sp]
   29130:	str	r0, [r1, #2948]	; 0xb84
   29134:	ldr	r0, [sp, #4]
   29138:	ldr	r0, [r0]
   2913c:	ldr	r1, [sp]
   29140:	str	r0, [r1, #2944]	; 0xb80
   29144:	ldr	r0, [sp]
   29148:	ldr	r1, [sp]
   2914c:	ldr	r1, [r1, #2948]	; 0xb84
   29150:	str	r0, [r1, #2944]	; 0xb80
   29154:	ldr	r0, [sp]
   29158:	ldr	r1, [sp]
   2915c:	ldr	r1, [r1, #2944]	; 0xb80
   29160:	str	r0, [r1, #2948]	; 0xb84
   29164:	movw	r0, #0
   29168:	str	r0, [sp, #8]
   2916c:	ldr	r0, [sp, #8]
   29170:	add	sp, sp, #12
   29174:	bx	lr

00029178 <flatcc_emitter_reset@@Base>:
   29178:	push	{fp, lr}
   2917c:	mov	fp, sp
   29180:	sub	sp, sp, #16
   29184:	str	r0, [fp, #-4]
   29188:	ldr	r0, [fp, #-4]
   2918c:	ldr	r0, [r0]
   29190:	str	r0, [sp, #8]
   29194:	ldr	r0, [fp, #-4]
   29198:	ldr	r0, [r0]
   2919c:	movw	r1, #0
   291a0:	cmp	r0, r1
   291a4:	bne	291ac <flatcc_emitter_reset@@Base+0x34>
   291a8:	b	29308 <flatcc_emitter_reset@@Base+0x190>
   291ac:	ldr	r0, [fp, #-4]
   291b0:	ldr	r0, [r0]
   291b4:	ldr	r1, [fp, #-4]
   291b8:	str	r0, [r1, #4]
   291bc:	ldr	r0, [fp, #-4]
   291c0:	ldr	r0, [r0]
   291c4:	add	r0, r0, #1472	; 0x5c0
   291c8:	ldr	r1, [fp, #-4]
   291cc:	str	r0, [r1, #8]
   291d0:	ldr	r0, [fp, #-4]
   291d4:	ldr	r0, [r0, #8]
   291d8:	ldr	r1, [fp, #-4]
   291dc:	str	r0, [r1, #16]
   291e0:	ldr	r0, [fp, #-4]
   291e4:	movw	r1, #1472	; 0x5c0
   291e8:	str	r1, [r0, #12]
   291ec:	ldr	r0, [fp, #-4]
   291f0:	str	r1, [r0, #20]
   291f4:	ldr	r0, [fp, #-4]
   291f8:	ldr	r0, [r0, #12]
   291fc:	movw	r1, #0
   29200:	sub	r0, r1, r0
   29204:	ldr	r1, [fp, #-4]
   29208:	ldr	r1, [r1]
   2920c:	str	r0, [r1, #2952]	; 0xb88
   29210:	ldr	r0, [fp, #-4]
   29214:	ldr	r0, [r0, #32]
   29218:	cmp	r0, #0
   2921c:	bne	29230 <flatcc_emitter_reset@@Base+0xb8>
   29220:	ldr	r0, [fp, #-4]
   29224:	ldr	r0, [r0, #24]
   29228:	ldr	r1, [fp, #-4]
   2922c:	str	r0, [r1, #32]
   29230:	ldr	r0, [fp, #-4]
   29234:	ldr	r1, [r0, #24]
   29238:	ldr	r0, [r0, #32]
   2923c:	add	r0, r0, r0, lsl #1
   29240:	lsr	r0, r0, #2
   29244:	lsr	r1, r1, #2
   29248:	add	r0, r0, r1
   2924c:	ldr	r1, [fp, #-4]
   29250:	str	r0, [r1, #32]
   29254:	ldr	r0, [fp, #-4]
   29258:	movw	r1, #0
   2925c:	str	r1, [r0, #24]
   29260:	ldr	r0, [fp, #-4]
   29264:	ldr	r0, [r0, #32]
   29268:	lsl	r0, r0, #1
   2926c:	ldr	r1, [fp, #-4]
   29270:	ldr	r1, [r1, #28]
   29274:	cmp	r0, r1
   29278:	movw	r0, #0
   2927c:	str	r0, [sp, #4]
   29280:	bcs	292a8 <flatcc_emitter_reset@@Base+0x130>
   29284:	ldr	r0, [fp, #-4]
   29288:	ldr	r0, [r0, #4]
   2928c:	ldr	r0, [r0, #2944]	; 0xb80
   29290:	ldr	r1, [fp, #-4]
   29294:	ldr	r1, [r1]
   29298:	cmp	r0, r1
   2929c:	movw	r0, #0
   292a0:	movne	r0, #1
   292a4:	str	r0, [sp, #4]
   292a8:	ldr	r0, [sp, #4]
   292ac:	tst	r0, #1
   292b0:	beq	29308 <flatcc_emitter_reset@@Base+0x190>
   292b4:	ldr	r0, [fp, #-4]
   292b8:	ldr	r0, [r0, #4]
   292bc:	ldr	r0, [r0, #2944]	; 0xb80
   292c0:	str	r0, [sp, #8]
   292c4:	ldr	r0, [sp, #8]
   292c8:	ldr	r0, [r0, #2944]	; 0xb80
   292cc:	ldr	r1, [fp, #-4]
   292d0:	ldr	r1, [r1, #4]
   292d4:	str	r0, [r1, #2944]	; 0xb80
   292d8:	ldr	r0, [fp, #-4]
   292dc:	ldr	r0, [r0, #4]
   292e0:	ldr	r1, [sp, #8]
   292e4:	ldr	r1, [r1, #2944]	; 0xb80
   292e8:	str	r0, [r1, #2948]	; 0xb84
   292ec:	ldr	r0, [sp, #8]
   292f0:	bl	12a6c <free@plt>
   292f4:	ldr	r0, [fp, #-4]
   292f8:	ldr	r1, [r0, #28]
   292fc:	sub	r1, r1, #2944	; 0xb80
   29300:	str	r1, [r0, #28]
   29304:	b	29260 <flatcc_emitter_reset@@Base+0xe8>
   29308:	mov	sp, fp
   2930c:	pop	{fp, pc}

00029310 <flatcc_emitter_clear@@Base>:
   29310:	push	{fp, lr}
   29314:	mov	fp, sp
   29318:	sub	sp, sp, #8
   2931c:	str	r0, [sp, #4]
   29320:	ldr	r0, [sp, #4]
   29324:	ldr	r0, [r0]
   29328:	str	r0, [sp]
   2932c:	ldr	r0, [sp]
   29330:	movw	r1, #0
   29334:	cmp	r0, r1
   29338:	bne	29340 <flatcc_emitter_clear@@Base+0x30>
   2933c:	b	2939c <flatcc_emitter_clear@@Base+0x8c>
   29340:	ldr	r0, [sp]
   29344:	ldr	r0, [r0, #2948]	; 0xb84
   29348:	movw	r1, #0
   2934c:	str	r1, [r0, #2944]	; 0xb80
   29350:	ldr	r0, [sp]
   29354:	ldr	r0, [r0, #2944]	; 0xb80
   29358:	movw	r1, #0
   2935c:	cmp	r0, r1
   29360:	beq	29380 <flatcc_emitter_clear@@Base+0x70>
   29364:	ldr	r0, [sp]
   29368:	ldr	r0, [r0, #2944]	; 0xb80
   2936c:	str	r0, [sp]
   29370:	ldr	r0, [sp]
   29374:	ldr	r0, [r0, #2948]	; 0xb84
   29378:	bl	12a6c <free@plt>
   2937c:	b	29350 <flatcc_emitter_clear@@Base+0x40>
   29380:	ldr	r0, [sp]
   29384:	bl	12a6c <free@plt>
   29388:	ldr	r0, [sp, #4]
   2938c:	movw	r1, #0
   29390:	and	r1, r1, #255	; 0xff
   29394:	movw	r2, #36	; 0x24
   29398:	bl	12b2c <memset@plt>
   2939c:	mov	sp, fp
   293a0:	pop	{fp, pc}

000293a4 <flatcc_emitter@@Base>:
   293a4:	push	{fp, lr}
   293a8:	mov	fp, sp
   293ac:	sub	sp, sp, #32
   293b0:	ldr	ip, [fp, #8]
   293b4:	str	r0, [fp, #-8]
   293b8:	str	r1, [fp, #-12]
   293bc:	str	r2, [sp, #16]
   293c0:	str	r3, [sp, #12]
   293c4:	ldr	r0, [fp, #-8]
   293c8:	str	r0, [sp, #8]
   293cc:	ldr	r0, [fp, #8]
   293d0:	ldr	r1, [sp, #8]
   293d4:	ldr	r2, [r1, #24]
   293d8:	add	r0, r2, r0
   293dc:	str	r0, [r1, #24]
   293e0:	ldr	r0, [sp, #12]
   293e4:	cmp	r0, #0
   293e8:	bge	294ac <flatcc_emitter@@Base+0x108>
   293ec:	ldr	r0, [fp, #8]
   293f0:	ldr	r1, [sp, #8]
   293f4:	ldr	r1, [r1, #12]
   293f8:	cmp	r0, r1
   293fc:	bhi	29440 <flatcc_emitter@@Base+0x9c>
   29400:	ldr	r0, [fp, #8]
   29404:	ldr	r1, [sp, #8]
   29408:	ldr	r2, [r1, #8]
   2940c:	movw	r3, #0
   29410:	sub	r0, r3, r0
   29414:	add	r0, r2, r0
   29418:	str	r0, [r1, #8]
   2941c:	ldr	r0, [fp, #8]
   29420:	ldr	r1, [sp, #8]
   29424:	ldr	r2, [r1, #12]
   29428:	sub	r0, r2, r0
   2942c:	str	r0, [r1, #12]
   29430:	ldr	r0, [sp, #8]
   29434:	ldr	r0, [r0, #8]
   29438:	str	r0, [sp, #4]
   2943c:	b	29560 <flatcc_emitter@@Base+0x1bc>
   29440:	ldr	r0, [sp, #16]
   29444:	ldr	r1, [fp, #-12]
   29448:	add	r0, r1, r0, lsl #3
   2944c:	str	r0, [fp, #-12]
   29450:	ldr	r0, [sp, #16]
   29454:	mvn	r1, #0
   29458:	add	r1, r0, r1
   2945c:	str	r1, [sp, #16]
   29460:	cmp	r0, #0
   29464:	beq	294a8 <flatcc_emitter@@Base+0x104>
   29468:	ldr	r0, [fp, #-12]
   2946c:	mvn	r1, #7
   29470:	add	r0, r0, r1
   29474:	str	r0, [fp, #-12]
   29478:	ldr	r0, [sp, #8]
   2947c:	ldr	r1, [fp, #-12]
   29480:	ldr	r1, [r1]
   29484:	ldr	r2, [fp, #-12]
   29488:	ldr	r2, [r2, #4]
   2948c:	bl	295cc <flatcc_emitter@@Base+0x228>
   29490:	cmp	r0, #0
   29494:	beq	294a4 <flatcc_emitter@@Base+0x100>
   29498:	mvn	r0, #0
   2949c:	str	r0, [fp, #-4]
   294a0:	b	295c0 <flatcc_emitter@@Base+0x21c>
   294a4:	b	29450 <flatcc_emitter@@Base+0xac>
   294a8:	b	29554 <flatcc_emitter@@Base+0x1b0>
   294ac:	ldr	r0, [fp, #8]
   294b0:	ldr	r1, [sp, #8]
   294b4:	ldr	r1, [r1, #20]
   294b8:	cmp	r0, r1
   294bc:	bhi	294f8 <flatcc_emitter@@Base+0x154>
   294c0:	ldr	r0, [sp, #8]
   294c4:	ldr	r0, [r0, #16]
   294c8:	str	r0, [sp, #4]
   294cc:	ldr	r0, [fp, #8]
   294d0:	ldr	r1, [sp, #8]
   294d4:	ldr	r2, [r1, #16]
   294d8:	add	r0, r2, r0
   294dc:	str	r0, [r1, #16]
   294e0:	ldr	r0, [fp, #8]
   294e4:	ldr	r1, [sp, #8]
   294e8:	ldr	r2, [r1, #20]
   294ec:	sub	r0, r2, r0
   294f0:	str	r0, [r1, #20]
   294f4:	b	29560 <flatcc_emitter@@Base+0x1bc>
   294f8:	b	294fc <flatcc_emitter@@Base+0x158>
   294fc:	ldr	r0, [sp, #16]
   29500:	mvn	r1, #0
   29504:	add	r1, r0, r1
   29508:	str	r1, [sp, #16]
   2950c:	cmp	r0, #0
   29510:	beq	29550 <flatcc_emitter@@Base+0x1ac>
   29514:	ldr	r0, [sp, #8]
   29518:	ldr	r1, [fp, #-12]
   2951c:	ldr	r1, [r1]
   29520:	ldr	r2, [fp, #-12]
   29524:	ldr	r2, [r2, #4]
   29528:	bl	296d8 <flatcc_emitter@@Base+0x334>
   2952c:	cmp	r0, #0
   29530:	beq	29540 <flatcc_emitter@@Base+0x19c>
   29534:	mvn	r0, #0
   29538:	str	r0, [fp, #-4]
   2953c:	b	295c0 <flatcc_emitter@@Base+0x21c>
   29540:	ldr	r0, [fp, #-12]
   29544:	add	r0, r0, #8
   29548:	str	r0, [fp, #-12]
   2954c:	b	294fc <flatcc_emitter@@Base+0x158>
   29550:	b	29554 <flatcc_emitter@@Base+0x1b0>
   29554:	movw	r0, #0
   29558:	str	r0, [fp, #-4]
   2955c:	b	295c0 <flatcc_emitter@@Base+0x21c>
   29560:	b	29564 <flatcc_emitter@@Base+0x1c0>
   29564:	ldr	r0, [sp, #16]
   29568:	mvn	r1, #0
   2956c:	add	r1, r0, r1
   29570:	str	r1, [sp, #16]
   29574:	cmp	r0, #0
   29578:	beq	295b8 <flatcc_emitter@@Base+0x214>
   2957c:	ldr	r0, [sp, #4]
   29580:	ldr	r1, [fp, #-12]
   29584:	ldr	r1, [r1]
   29588:	ldr	r2, [fp, #-12]
   2958c:	ldr	r2, [r2, #4]
   29590:	bl	12a78 <memcpy@plt>
   29594:	ldr	r0, [fp, #-12]
   29598:	ldr	r0, [r0, #4]
   2959c:	ldr	r1, [sp, #4]
   295a0:	add	r0, r1, r0
   295a4:	str	r0, [sp, #4]
   295a8:	ldr	r0, [fp, #-12]
   295ac:	add	r0, r0, #8
   295b0:	str	r0, [fp, #-12]
   295b4:	b	29564 <flatcc_emitter@@Base+0x1c0>
   295b8:	movw	r0, #0
   295bc:	str	r0, [fp, #-4]
   295c0:	ldr	r0, [fp, #-4]
   295c4:	mov	sp, fp
   295c8:	pop	{fp, pc}
   295cc:	push	{fp, lr}
   295d0:	mov	fp, sp
   295d4:	sub	sp, sp, #24
   295d8:	str	r0, [fp, #-8]
   295dc:	str	r1, [sp, #12]
   295e0:	str	r2, [sp, #8]
   295e4:	ldr	r0, [sp, #8]
   295e8:	ldr	r1, [sp, #12]
   295ec:	add	r0, r1, r0
   295f0:	str	r0, [sp, #12]
   295f4:	ldr	r0, [sp, #8]
   295f8:	cmp	r0, #0
   295fc:	beq	296c4 <flatcc_emitter@@Base+0x320>
   29600:	ldr	r0, [sp, #8]
   29604:	str	r0, [sp, #4]
   29608:	ldr	r0, [sp, #4]
   2960c:	ldr	r1, [fp, #-8]
   29610:	ldr	r1, [r1, #12]
   29614:	cmp	r0, r1
   29618:	bls	29658 <flatcc_emitter@@Base+0x2b4>
   2961c:	ldr	r0, [fp, #-8]
   29620:	ldr	r0, [r0, #12]
   29624:	str	r0, [sp, #4]
   29628:	ldr	r0, [sp, #4]
   2962c:	cmp	r0, #0
   29630:	bne	29654 <flatcc_emitter@@Base+0x2b0>
   29634:	ldr	r0, [fp, #-8]
   29638:	bl	29914 <flatcc_emitter_copy_buffer@@Base+0x14c>
   2963c:	cmp	r0, #0
   29640:	beq	29650 <flatcc_emitter@@Base+0x2ac>
   29644:	mvn	r0, #0
   29648:	str	r0, [fp, #-4]
   2964c:	b	296cc <flatcc_emitter@@Base+0x328>
   29650:	b	295f4 <flatcc_emitter@@Base+0x250>
   29654:	b	29658 <flatcc_emitter@@Base+0x2b4>
   29658:	ldr	r0, [sp, #4]
   2965c:	ldr	r1, [fp, #-8]
   29660:	ldr	r2, [r1, #8]
   29664:	movw	r3, #0
   29668:	sub	r0, r3, r0
   2966c:	add	r0, r2, r0
   29670:	str	r0, [r1, #8]
   29674:	ldr	r0, [sp, #4]
   29678:	ldr	r1, [fp, #-8]
   2967c:	ldr	r2, [r1, #12]
   29680:	sub	r0, r2, r0
   29684:	str	r0, [r1, #12]
   29688:	ldr	r0, [sp, #4]
   2968c:	ldr	r1, [sp, #12]
   29690:	sub	r0, r3, r0
   29694:	add	r0, r1, r0
   29698:	str	r0, [sp, #12]
   2969c:	ldr	r0, [sp, #4]
   296a0:	ldr	r1, [sp, #8]
   296a4:	sub	r0, r1, r0
   296a8:	str	r0, [sp, #8]
   296ac:	ldr	r0, [fp, #-8]
   296b0:	ldr	r0, [r0, #8]
   296b4:	ldr	r1, [sp, #12]
   296b8:	ldr	r2, [sp, #4]
   296bc:	bl	12a78 <memcpy@plt>
   296c0:	b	295f4 <flatcc_emitter@@Base+0x250>
   296c4:	movw	r0, #0
   296c8:	str	r0, [fp, #-4]
   296cc:	ldr	r0, [fp, #-4]
   296d0:	mov	sp, fp
   296d4:	pop	{fp, pc}
   296d8:	push	{fp, lr}
   296dc:	mov	fp, sp
   296e0:	sub	sp, sp, #24
   296e4:	str	r0, [fp, #-8]
   296e8:	str	r1, [sp, #12]
   296ec:	str	r2, [sp, #8]
   296f0:	ldr	r0, [sp, #8]
   296f4:	cmp	r0, #0
   296f8:	beq	297b4 <flatcc_emitter@@Base+0x410>
   296fc:	ldr	r0, [sp, #8]
   29700:	str	r0, [sp, #4]
   29704:	ldr	r0, [sp, #4]
   29708:	ldr	r1, [fp, #-8]
   2970c:	ldr	r1, [r1, #20]
   29710:	cmp	r0, r1
   29714:	bls	29754 <flatcc_emitter@@Base+0x3b0>
   29718:	ldr	r0, [fp, #-8]
   2971c:	ldr	r0, [r0, #20]
   29720:	str	r0, [sp, #4]
   29724:	ldr	r0, [sp, #4]
   29728:	cmp	r0, #0
   2972c:	bne	29750 <flatcc_emitter@@Base+0x3ac>
   29730:	ldr	r0, [fp, #-8]
   29734:	bl	29b14 <flatcc_emitter_copy_buffer@@Base+0x34c>
   29738:	cmp	r0, #0
   2973c:	beq	2974c <flatcc_emitter@@Base+0x3a8>
   29740:	mvn	r0, #0
   29744:	str	r0, [fp, #-4]
   29748:	b	297bc <flatcc_emitter@@Base+0x418>
   2974c:	b	296f0 <flatcc_emitter@@Base+0x34c>
   29750:	b	29754 <flatcc_emitter@@Base+0x3b0>
   29754:	ldr	r0, [fp, #-8]
   29758:	ldr	r0, [r0, #16]
   2975c:	ldr	r1, [sp, #12]
   29760:	ldr	r2, [sp, #4]
   29764:	bl	12a78 <memcpy@plt>
   29768:	ldr	r0, [sp, #4]
   2976c:	ldr	r1, [sp, #8]
   29770:	sub	r0, r1, r0
   29774:	str	r0, [sp, #8]
   29778:	ldr	r0, [sp, #4]
   2977c:	ldr	r1, [sp, #12]
   29780:	add	r0, r1, r0
   29784:	str	r0, [sp, #12]
   29788:	ldr	r0, [sp, #4]
   2978c:	ldr	r1, [fp, #-8]
   29790:	ldr	r2, [r1, #16]
   29794:	add	r0, r2, r0
   29798:	str	r0, [r1, #16]
   2979c:	ldr	r0, [sp, #4]
   297a0:	ldr	r1, [fp, #-8]
   297a4:	ldr	r2, [r1, #20]
   297a8:	sub	r0, r2, r0
   297ac:	str	r0, [r1, #20]
   297b0:	b	296f0 <flatcc_emitter@@Base+0x34c>
   297b4:	movw	r0, #0
   297b8:	str	r0, [fp, #-4]
   297bc:	ldr	r0, [fp, #-4]
   297c0:	mov	sp, fp
   297c4:	pop	{fp, pc}

000297c8 <flatcc_emitter_copy_buffer@@Base>:
   297c8:	push	{fp, lr}
   297cc:	mov	fp, sp
   297d0:	sub	sp, sp, #24
   297d4:	str	r0, [fp, #-8]
   297d8:	str	r1, [sp, #12]
   297dc:	str	r2, [sp, #8]
   297e0:	ldr	r0, [sp, #8]
   297e4:	ldr	r1, [fp, #-8]
   297e8:	ldr	r1, [r1, #24]
   297ec:	cmp	r0, r1
   297f0:	bcs	29800 <flatcc_emitter_copy_buffer@@Base+0x38>
   297f4:	movw	r0, #0
   297f8:	str	r0, [fp, #-4]
   297fc:	b	29908 <flatcc_emitter_copy_buffer@@Base+0x140>
   29800:	ldr	r0, [fp, #-8]
   29804:	ldr	r0, [r0]
   29808:	movw	r1, #0
   2980c:	cmp	r0, r1
   29810:	bne	29820 <flatcc_emitter_copy_buffer@@Base+0x58>
   29814:	movw	r0, #0
   29818:	str	r0, [fp, #-4]
   2981c:	b	29908 <flatcc_emitter_copy_buffer@@Base+0x140>
   29820:	ldr	r0, [fp, #-8]
   29824:	ldr	r0, [r0]
   29828:	ldr	r1, [fp, #-8]
   2982c:	ldr	r1, [r1, #4]
   29830:	cmp	r0, r1
   29834:	bne	2985c <flatcc_emitter_copy_buffer@@Base+0x94>
   29838:	ldr	r0, [sp, #12]
   2983c:	ldr	r1, [fp, #-8]
   29840:	ldr	r1, [r1, #8]
   29844:	ldr	r2, [fp, #-8]
   29848:	ldr	r2, [r2, #24]
   2984c:	bl	12a78 <memcpy@plt>
   29850:	ldr	r0, [sp, #12]
   29854:	str	r0, [fp, #-4]
   29858:	b	29908 <flatcc_emitter_copy_buffer@@Base+0x140>
   2985c:	ldr	r0, [fp, #-8]
   29860:	ldr	r0, [r0, #12]
   29864:	movw	r1, #2944	; 0xb80
   29868:	sub	r0, r1, r0
   2986c:	str	r0, [sp]
   29870:	ldr	r0, [sp, #12]
   29874:	ldr	r1, [fp, #-8]
   29878:	ldr	r1, [r1, #8]
   2987c:	ldr	r2, [sp]
   29880:	bl	12a78 <memcpy@plt>
   29884:	ldr	r0, [sp, #12]
   29888:	ldr	r1, [sp]
   2988c:	add	r0, r0, r1
   29890:	str	r0, [sp, #12]
   29894:	ldr	r0, [fp, #-8]
   29898:	ldr	r0, [r0]
   2989c:	ldr	r0, [r0, #2944]	; 0xb80
   298a0:	str	r0, [sp, #4]
   298a4:	ldr	r0, [sp, #4]
   298a8:	ldr	r1, [fp, #-8]
   298ac:	ldr	r1, [r1, #4]
   298b0:	cmp	r0, r1
   298b4:	beq	298e4 <flatcc_emitter_copy_buffer@@Base+0x11c>
   298b8:	ldr	r0, [sp, #12]
   298bc:	ldr	r1, [sp, #4]
   298c0:	movw	r2, #2944	; 0xb80
   298c4:	bl	12a78 <memcpy@plt>
   298c8:	ldr	r0, [sp, #12]
   298cc:	add	r0, r0, #2944	; 0xb80
   298d0:	str	r0, [sp, #12]
   298d4:	ldr	r0, [sp, #4]
   298d8:	ldr	r0, [r0, #2944]	; 0xb80
   298dc:	str	r0, [sp, #4]
   298e0:	b	298a4 <flatcc_emitter_copy_buffer@@Base+0xdc>
   298e4:	ldr	r0, [sp, #12]
   298e8:	ldr	r1, [sp, #4]
   298ec:	ldr	r2, [fp, #-8]
   298f0:	ldr	r2, [r2, #20]
   298f4:	movw	r3, #2944	; 0xb80
   298f8:	sub	r2, r3, r2
   298fc:	bl	12a78 <memcpy@plt>
   29900:	ldr	r0, [sp, #12]
   29904:	str	r0, [fp, #-4]
   29908:	ldr	r0, [fp, #-4]
   2990c:	mov	sp, fp
   29910:	pop	{fp, pc}
   29914:	push	{fp, lr}
   29918:	mov	fp, sp
   2991c:	sub	sp, sp, #16
   29920:	str	r0, [sp, #8]
   29924:	movw	r0, #0
   29928:	str	r0, [sp, #4]
   2992c:	ldr	r1, [sp, #8]
   29930:	ldr	r1, [r1]
   29934:	cmp	r1, r0
   29938:	beq	29990 <flatcc_emitter_copy_buffer@@Base+0x1c8>
   2993c:	ldr	r0, [sp, #8]
   29940:	ldr	r0, [r0]
   29944:	ldr	r0, [r0, #2948]	; 0xb84
   29948:	ldr	r1, [sp, #8]
   2994c:	ldr	r1, [r1, #4]
   29950:	cmp	r0, r1
   29954:	beq	29990 <flatcc_emitter_copy_buffer@@Base+0x1c8>
   29958:	ldr	r0, [sp, #8]
   2995c:	ldr	r0, [r0]
   29960:	ldr	r0, [r0, #2952]	; 0xb88
   29964:	sub	r0, r0, #2944	; 0xb80
   29968:	ldr	r1, [sp, #8]
   2996c:	ldr	r1, [r1]
   29970:	ldr	r1, [r1, #2948]	; 0xb84
   29974:	str	r0, [r1, #2952]	; 0xb88
   29978:	ldr	r0, [sp, #8]
   2997c:	ldr	r0, [r0]
   29980:	ldr	r0, [r0, #2948]	; 0xb84
   29984:	ldr	r1, [sp, #8]
   29988:	str	r0, [r1]
   2998c:	b	29ac0 <flatcc_emitter_copy_buffer@@Base+0x2f8>
   29990:	movw	r0, #2956	; 0xb8c
   29994:	bl	12ad8 <malloc@plt>
   29998:	str	r0, [sp, #4]
   2999c:	movw	r1, #0
   299a0:	cmp	r0, r1
   299a4:	bne	299b4 <flatcc_emitter_copy_buffer@@Base+0x1ec>
   299a8:	mvn	r0, #0
   299ac:	str	r0, [fp, #-4]
   299b0:	b	29b08 <flatcc_emitter_copy_buffer@@Base+0x340>
   299b4:	ldr	r0, [sp, #8]
   299b8:	ldr	r1, [r0, #28]
   299bc:	add	r1, r1, #2944	; 0xb80
   299c0:	str	r1, [r0, #28]
   299c4:	ldr	r0, [sp, #8]
   299c8:	ldr	r0, [r0]
   299cc:	movw	r1, #0
   299d0:	cmp	r0, r1
   299d4:	beq	29a28 <flatcc_emitter_copy_buffer@@Base+0x260>
   299d8:	ldr	r0, [sp, #8]
   299dc:	ldr	r0, [r0, #4]
   299e0:	ldr	r1, [sp, #4]
   299e4:	str	r0, [r1, #2948]	; 0xb84
   299e8:	ldr	r0, [sp, #8]
   299ec:	ldr	r0, [r0]
   299f0:	ldr	r1, [sp, #4]
   299f4:	str	r0, [r1, #2944]	; 0xb80
   299f8:	ldr	r0, [sp, #4]
   299fc:	ldr	r1, [sp, #8]
   29a00:	ldr	r1, [r1]
   29a04:	str	r0, [r1, #2948]	; 0xb84
   29a08:	ldr	r0, [sp, #4]
   29a0c:	ldr	r1, [sp, #8]
   29a10:	ldr	r1, [r1, #4]
   29a14:	str	r0, [r1, #2944]	; 0xb80
   29a18:	ldr	r0, [sp, #4]
   29a1c:	ldr	r1, [sp, #8]
   29a20:	str	r0, [r1]
   29a24:	b	29ac0 <flatcc_emitter_copy_buffer@@Base+0x2f8>
   29a28:	ldr	r0, [sp, #4]
   29a2c:	ldr	r1, [sp, #8]
   29a30:	str	r0, [r1]
   29a34:	ldr	r0, [sp, #4]
   29a38:	ldr	r1, [sp, #8]
   29a3c:	str	r0, [r1, #4]
   29a40:	ldr	r0, [sp, #4]
   29a44:	ldr	r1, [sp, #4]
   29a48:	str	r0, [r1, #2944]	; 0xb80
   29a4c:	ldr	r0, [sp, #4]
   29a50:	ldr	r1, [sp, #4]
   29a54:	str	r0, [r1, #2948]	; 0xb84
   29a58:	ldr	r0, [sp, #8]
   29a5c:	ldr	r0, [r0]
   29a60:	add	r0, r0, #1472	; 0x5c0
   29a64:	ldr	r1, [sp, #8]
   29a68:	str	r0, [r1, #8]
   29a6c:	ldr	r0, [sp, #8]
   29a70:	ldr	r0, [r0, #8]
   29a74:	ldr	r1, [sp, #8]
   29a78:	str	r0, [r1, #16]
   29a7c:	ldr	r0, [sp, #8]
   29a80:	movw	r1, #1472	; 0x5c0
   29a84:	str	r1, [r0, #12]
   29a88:	ldr	r0, [sp, #8]
   29a8c:	ldr	r0, [r0, #12]
   29a90:	movw	r1, #2944	; 0xb80
   29a94:	sub	r0, r1, r0
   29a98:	ldr	r1, [sp, #8]
   29a9c:	str	r0, [r1, #20]
   29aa0:	ldr	r0, [sp, #8]
   29aa4:	ldr	r0, [r0, #12]
   29aa8:	movw	r1, #0
   29aac:	sub	r0, r1, r0
   29ab0:	ldr	r2, [sp, #4]
   29ab4:	str	r0, [r2, #2952]	; 0xb88
   29ab8:	str	r1, [fp, #-4]
   29abc:	b	29b08 <flatcc_emitter_copy_buffer@@Base+0x340>
   29ac0:	ldr	r0, [sp, #8]
   29ac4:	ldr	r0, [r0]
   29ac8:	add	r0, r0, #2944	; 0xb80
   29acc:	ldr	r1, [sp, #8]
   29ad0:	str	r0, [r1, #8]
   29ad4:	ldr	r0, [sp, #8]
   29ad8:	movw	r1, #2944	; 0xb80
   29adc:	str	r1, [r0, #12]
   29ae0:	ldr	r0, [sp, #8]
   29ae4:	ldr	r0, [r0]
   29ae8:	ldr	r0, [r0, #2944]	; 0xb80
   29aec:	ldr	r0, [r0, #2952]	; 0xb88
   29af0:	sub	r0, r0, #2944	; 0xb80
   29af4:	ldr	r1, [sp, #8]
   29af8:	ldr	r1, [r1]
   29afc:	str	r0, [r1, #2952]	; 0xb88
   29b00:	movw	r0, #0
   29b04:	str	r0, [fp, #-4]
   29b08:	ldr	r0, [fp, #-4]
   29b0c:	mov	sp, fp
   29b10:	pop	{fp, pc}
   29b14:	push	{fp, lr}
   29b18:	mov	fp, sp
   29b1c:	sub	sp, sp, #16
   29b20:	str	r0, [sp, #8]
   29b24:	movw	r0, #0
   29b28:	str	r0, [sp, #4]
   29b2c:	ldr	r1, [sp, #8]
   29b30:	ldr	r1, [r1, #4]
   29b34:	cmp	r1, r0
   29b38:	beq	29b70 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   29b3c:	ldr	r0, [sp, #8]
   29b40:	ldr	r0, [r0, #4]
   29b44:	ldr	r0, [r0, #2944]	; 0xb80
   29b48:	ldr	r1, [sp, #8]
   29b4c:	ldr	r1, [r1]
   29b50:	cmp	r0, r1
   29b54:	beq	29b70 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   29b58:	ldr	r0, [sp, #8]
   29b5c:	ldr	r0, [r0, #4]
   29b60:	ldr	r0, [r0, #2944]	; 0xb80
   29b64:	ldr	r1, [sp, #8]
   29b68:	str	r0, [r1, #4]
   29b6c:	b	29ca0 <flatcc_emitter_copy_buffer@@Base+0x4d8>
   29b70:	movw	r0, #2956	; 0xb8c
   29b74:	bl	12ad8 <malloc@plt>
   29b78:	str	r0, [sp, #4]
   29b7c:	movw	r1, #0
   29b80:	cmp	r0, r1
   29b84:	bne	29b94 <flatcc_emitter_copy_buffer@@Base+0x3cc>
   29b88:	mvn	r0, #0
   29b8c:	str	r0, [fp, #-4]
   29b90:	b	29ce4 <flatcc_emitter_copy_buffer@@Base+0x51c>
   29b94:	ldr	r0, [sp, #8]
   29b98:	ldr	r1, [r0, #28]
   29b9c:	add	r1, r1, #2944	; 0xb80
   29ba0:	str	r1, [r0, #28]
   29ba4:	ldr	r0, [sp, #8]
   29ba8:	ldr	r0, [r0, #4]
   29bac:	movw	r1, #0
   29bb0:	cmp	r0, r1
   29bb4:	beq	29c08 <flatcc_emitter_copy_buffer@@Base+0x440>
   29bb8:	ldr	r0, [sp, #8]
   29bbc:	ldr	r0, [r0, #4]
   29bc0:	ldr	r1, [sp, #4]
   29bc4:	str	r0, [r1, #2948]	; 0xb84
   29bc8:	ldr	r0, [sp, #8]
   29bcc:	ldr	r0, [r0]
   29bd0:	ldr	r1, [sp, #4]
   29bd4:	str	r0, [r1, #2944]	; 0xb80
   29bd8:	ldr	r0, [sp, #4]
   29bdc:	ldr	r1, [sp, #8]
   29be0:	ldr	r1, [r1]
   29be4:	str	r0, [r1, #2948]	; 0xb84
   29be8:	ldr	r0, [sp, #4]
   29bec:	ldr	r1, [sp, #8]
   29bf0:	ldr	r1, [r1, #4]
   29bf4:	str	r0, [r1, #2944]	; 0xb80
   29bf8:	ldr	r0, [sp, #4]
   29bfc:	ldr	r1, [sp, #8]
   29c00:	str	r0, [r1, #4]
   29c04:	b	29ca0 <flatcc_emitter_copy_buffer@@Base+0x4d8>
   29c08:	ldr	r0, [sp, #4]
   29c0c:	ldr	r1, [sp, #8]
   29c10:	str	r0, [r1]
   29c14:	ldr	r0, [sp, #4]
   29c18:	ldr	r1, [sp, #8]
   29c1c:	str	r0, [r1, #4]
   29c20:	ldr	r0, [sp, #4]
   29c24:	ldr	r1, [sp, #4]
   29c28:	str	r0, [r1, #2944]	; 0xb80
   29c2c:	ldr	r0, [sp, #4]
   29c30:	ldr	r1, [sp, #4]
   29c34:	str	r0, [r1, #2948]	; 0xb84
   29c38:	ldr	r0, [sp, #8]
   29c3c:	ldr	r0, [r0]
   29c40:	add	r0, r0, #1472	; 0x5c0
   29c44:	ldr	r1, [sp, #8]
   29c48:	str	r0, [r1, #8]
   29c4c:	ldr	r0, [sp, #8]
   29c50:	ldr	r0, [r0, #8]
   29c54:	ldr	r1, [sp, #8]
   29c58:	str	r0, [r1, #16]
   29c5c:	ldr	r0, [sp, #8]
   29c60:	movw	r1, #1472	; 0x5c0
   29c64:	str	r1, [r0, #12]
   29c68:	ldr	r0, [sp, #8]
   29c6c:	ldr	r0, [r0, #12]
   29c70:	movw	r1, #2944	; 0xb80
   29c74:	sub	r0, r1, r0
   29c78:	ldr	r1, [sp, #8]
   29c7c:	str	r0, [r1, #20]
   29c80:	ldr	r0, [sp, #8]
   29c84:	ldr	r0, [r0, #12]
   29c88:	movw	r1, #0
   29c8c:	sub	r0, r1, r0
   29c90:	ldr	r2, [sp, #4]
   29c94:	str	r0, [r2, #2952]	; 0xb88
   29c98:	str	r1, [fp, #-4]
   29c9c:	b	29ce4 <flatcc_emitter_copy_buffer@@Base+0x51c>
   29ca0:	ldr	r0, [sp, #8]
   29ca4:	ldr	r0, [r0, #4]
   29ca8:	ldr	r1, [sp, #8]
   29cac:	str	r0, [r1, #16]
   29cb0:	ldr	r0, [sp, #8]
   29cb4:	movw	r1, #2944	; 0xb80
   29cb8:	str	r1, [r0, #20]
   29cbc:	ldr	r0, [sp, #8]
   29cc0:	ldr	r0, [r0, #4]
   29cc4:	ldr	r0, [r0, #2948]	; 0xb84
   29cc8:	ldr	r0, [r0, #2952]	; 0xb88
   29ccc:	add	r0, r0, #2944	; 0xb80
   29cd0:	ldr	r1, [sp, #8]
   29cd4:	ldr	r1, [r1, #4]
   29cd8:	str	r0, [r1, #2952]	; 0xb88
   29cdc:	movw	r0, #0
   29ce0:	str	r0, [fp, #-4]
   29ce4:	ldr	r0, [fp, #-4]
   29ce8:	mov	sp, fp
   29cec:	pop	{fp, pc}

00029cf0 <grisu3_diy_fp_encode_double@@Base>:
   29cf0:	push	{r4, r5, r6, sl, fp, lr}
   29cf4:	add	fp, sp, #16
   29cf8:	sub	sp, sp, #256	; 0x100
   29cfc:	ldr	ip, [fp, #12]
   29d00:	ldr	lr, [fp, #8]
   29d04:	str	r0, [fp, #-24]	; 0xffffffe8
   29d08:	str	r1, [fp, #-20]	; 0xffffffec
   29d0c:	str	r2, [fp, #-28]	; 0xffffffe4
   29d10:	str	r3, [fp, #-32]	; 0xffffffe0
   29d14:	mov	r0, #3
   29d18:	str	r0, [fp, #-36]	; 0xffffffdc
   29d1c:	mov	r0, #8
   29d20:	str	r0, [fp, #-40]	; 0xffffffd8
   29d24:	movw	r0, #64462	; 0xfbce
   29d28:	movt	r0, #65535	; 0xffff
   29d2c:	str	r0, [fp, #-44]	; 0xffffffd4
   29d30:	mov	r0, #1048576	; 0x100000
   29d34:	str	r0, [fp, #-52]	; 0xffffffcc
   29d38:	mov	r0, #0
   29d3c:	str	r0, [fp, #-56]	; 0xffffffc8
   29d40:	mov	r1, #64	; 0x40
   29d44:	str	r1, [fp, #-60]	; 0xffffffc4
   29d48:	mov	r1, #19
   29d4c:	str	r1, [fp, #-64]	; 0xffffffc0
   29d50:	ldr	r1, [fp, #8]
   29d54:	cmp	r1, #0
   29d58:	movwne	r1, #1
   29d5c:	lsl	r1, r1, #2
   29d60:	str	r1, [fp, #-68]	; 0xffffffbc
   29d64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29d68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29d6c:	sub	r1, r1, r2
   29d70:	str	r1, [fp, #-72]	; 0xffffffb8
   29d74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29d78:	ldr	r2, [fp, #-20]	; 0xffffffec
   29d7c:	str	r2, [fp, #-92]	; 0xffffffa4
   29d80:	str	r1, [fp, #-96]	; 0xffffffa0
   29d84:	str	r0, [fp, #-88]	; 0xffffffa8
   29d88:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29d8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29d90:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29d94:	ldr	r1, [fp, #-84]	; 0xffffffac
   29d98:	mov	r4, sp
   29d9c:	str	r0, [r4]
   29da0:	str	r1, [r4, #4]
   29da4:	add	r0, sp, #112	; 0x70
   29da8:	str	ip, [sp, #48]	; 0x30
   29dac:	str	lr, [sp, #44]	; 0x2c
   29db0:	bl	2a248 <grisu3_diy_fp_encode_double@@Base+0x558>
   29db4:	ldr	r0, [sp, #112]	; 0x70
   29db8:	str	r0, [fp, #-96]	; 0xffffffa0
   29dbc:	ldr	r0, [sp, #116]	; 0x74
   29dc0:	str	r0, [fp, #-92]	; 0xffffffa4
   29dc4:	ldr	r0, [sp, #120]	; 0x78
   29dc8:	str	r0, [fp, #-88]	; 0xffffffa8
   29dcc:	ldr	r0, [sp, #124]	; 0x7c
   29dd0:	str	r0, [fp, #-84]	; 0xffffffac
   29dd4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29dd8:	movw	r1, #0
   29ddc:	sub	r0, r1, r0
   29de0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   29de4:	lsl	r0, r1, r0
   29de8:	str	r0, [fp, #-68]	; 0xffffffbc
   29dec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   29df0:	sub	r1, fp, #112	; 0x70
   29df4:	bl	2a380 <grisu3_diy_fp_encode_double@@Base+0x690>
   29df8:	str	r0, [fp, #-76]	; 0xffffffb4
   29dfc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   29e00:	ldr	r1, [fp, #-72]	; 0xffffffb8
   29e04:	cmp	r0, r1
   29e08:	beq	29ef4 <grisu3_diy_fp_encode_double@@Base+0x204>
   29e0c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   29e10:	ldr	r1, [fp, #-76]	; 0xffffffb4
   29e14:	sub	r0, r0, r1
   29e18:	sub	r0, r0, #1
   29e1c:	str	r0, [sp, #108]	; 0x6c
   29e20:	ldr	r0, [sp, #108]	; 0x6c
   29e24:	cmp	r0, #0
   29e28:	blt	29e3c <grisu3_diy_fp_encode_double@@Base+0x14c>
   29e2c:	ldr	r0, [sp, #108]	; 0x6c
   29e30:	cmp	r0, #7
   29e34:	bge	29e3c <grisu3_diy_fp_encode_double@@Base+0x14c>
   29e38:	b	29e5c <grisu3_diy_fp_encode_double@@Base+0x16c>
   29e3c:	ldr	r0, [pc, #1004]	; 2a230 <grisu3_diy_fp_encode_double@@Base+0x540>
   29e40:	add	r0, pc, r0
   29e44:	ldr	r1, [pc, #1000]	; 2a234 <grisu3_diy_fp_encode_double@@Base+0x544>
   29e48:	add	r1, pc, r1
   29e4c:	ldr	r2, [pc, #996]	; 2a238 <grisu3_diy_fp_encode_double@@Base+0x548>
   29e50:	add	r3, pc, r2
   29e54:	movw	r2, #185	; 0xb9
   29e58:	bl	12b80 <__assert_fail@plt>
   29e5c:	ldr	r0, [sp, #108]	; 0x6c
   29e60:	ldr	r1, [pc, #988]	; 2a244 <grisu3_diy_fp_encode_double@@Base+0x554>
   29e64:	add	r1, pc, r1
   29e68:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29e6c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29e70:	ldr	ip, [fp, #-88]	; 0xffffffa8
   29e74:	ldr	lr, [fp, #-84]	; 0xffffffac
   29e78:	ldr	r0, [r1, r0, lsl #4]!
   29e7c:	ldr	r4, [r1, #4]
   29e80:	ldr	r5, [r1, #8]
   29e84:	ldr	r1, [r1, #12]
   29e88:	mov	r6, sp
   29e8c:	str	r4, [r6, #12]
   29e90:	str	r0, [r6, #8]
   29e94:	str	r5, [r6, #16]
   29e98:	str	ip, [r6]
   29e9c:	str	r1, [r6, #20]
   29ea0:	str	lr, [r6, #4]
   29ea4:	add	r0, sp, #88	; 0x58
   29ea8:	bl	2a524 <grisu3_diy_fp_encode_double@@Base+0x834>
   29eac:	ldr	r0, [sp, #88]	; 0x58
   29eb0:	str	r0, [fp, #-96]	; 0xffffffa0
   29eb4:	ldr	r0, [sp, #92]	; 0x5c
   29eb8:	str	r0, [fp, #-92]	; 0xffffffa4
   29ebc:	ldr	r0, [sp, #96]	; 0x60
   29ec0:	str	r0, [fp, #-88]	; 0xffffffa8
   29ec4:	ldr	r0, [sp, #100]	; 0x64
   29ec8:	str	r0, [fp, #-84]	; 0xffffffac
   29ecc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29ed0:	add	r0, r0, #1
   29ed4:	ldr	r1, [sp, #108]	; 0x6c
   29ed8:	add	r0, r0, r1
   29edc:	cmp	r0, #19
   29ee0:	ble	29ef0 <grisu3_diy_fp_encode_double@@Base+0x200>
   29ee4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   29ee8:	add	r0, r0, #4
   29eec:	str	r0, [fp, #-68]	; 0xffffffbc
   29ef0:	b	29ef4 <grisu3_diy_fp_encode_double@@Base+0x204>
   29ef4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29ef8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29efc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   29f00:	ldr	r1, [fp, #-84]	; 0xffffffac
   29f04:	ldr	ip, [fp, #-112]	; 0xffffff90
   29f08:	ldr	lr, [fp, #-108]	; 0xffffff94
   29f0c:	ldr	r4, [fp, #-104]	; 0xffffff98
   29f10:	ldr	r5, [fp, #-100]	; 0xffffff9c
   29f14:	mov	r6, sp
   29f18:	str	r5, [r6, #20]
   29f1c:	str	r4, [r6, #16]
   29f20:	str	lr, [r6, #12]
   29f24:	str	ip, [r6, #8]
   29f28:	str	r1, [r6, #4]
   29f2c:	str	r0, [r6]
   29f30:	add	r0, sp, #72	; 0x48
   29f34:	str	r0, [sp, #40]	; 0x28
   29f38:	bl	2a524 <grisu3_diy_fp_encode_double@@Base+0x834>
   29f3c:	ldr	r0, [sp, #40]	; 0x28
   29f40:	vld1.64	{d16-d17}, [r0]
   29f44:	sub	r1, fp, #96	; 0x60
   29f48:	vst1.64	{d16-d17}, [r1]
   29f4c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   29f50:	add	r2, r1, #1
   29f54:	cmp	r1, #0
   29f58:	movne	r1, r2
   29f5c:	add	r1, r1, #8
   29f60:	str	r1, [fp, #-68]	; 0xffffffbc
   29f64:	ldr	r1, [fp, #-88]	; 0xffffffa8
   29f68:	str	r1, [fp, #-80]	; 0xffffffb0
   29f6c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   29f70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   29f74:	ldr	r1, [fp, #-88]	; 0xffffffa8
   29f78:	ldr	ip, [fp, #-84]	; 0xffffffac
   29f7c:	mov	lr, sp
   29f80:	str	r1, [lr]
   29f84:	str	ip, [lr, #4]
   29f88:	add	r0, sp, #56	; 0x38
   29f8c:	bl	2a248 <grisu3_diy_fp_encode_double@@Base+0x558>
   29f90:	ldr	r0, [pc, #676]	; 2a23c <grisu3_diy_fp_encode_double@@Base+0x54c>
   29f94:	ldr	r1, [sp, #56]	; 0x38
   29f98:	str	r1, [fp, #-96]	; 0xffffffa0
   29f9c:	ldr	r1, [sp, #60]	; 0x3c
   29fa0:	str	r1, [fp, #-92]	; 0xffffffa4
   29fa4:	ldr	r1, [sp, #64]	; 0x40
   29fa8:	str	r1, [fp, #-88]	; 0xffffffa8
   29fac:	ldr	r1, [sp, #68]	; 0x44
   29fb0:	str	r1, [fp, #-84]	; 0xffffffac
   29fb4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   29fb8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   29fbc:	sub	r1, r1, r2
   29fc0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   29fc4:	lsl	r1, r2, r1
   29fc8:	str	r1, [fp, #-68]	; 0xffffffbc
   29fcc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   29fd0:	add	r1, r1, #64	; 0x40
   29fd4:	str	r1, [fp, #-132]	; 0xffffff7c
   29fd8:	ldr	r1, [fp, #-132]	; 0xffffff7c
   29fdc:	cmp	r1, r0
   29fe0:	blt	29ff0 <grisu3_diy_fp_encode_double@@Base+0x300>
   29fe4:	movw	r0, #64	; 0x40
   29fe8:	str	r0, [sp, #36]	; 0x24
   29fec:	b	2a024 <grisu3_diy_fp_encode_double@@Base+0x334>
   29ff0:	ldr	r0, [pc, #584]	; 2a240 <grisu3_diy_fp_encode_double@@Base+0x550>
   29ff4:	ldr	r1, [fp, #-132]	; 0xffffff7c
   29ff8:	cmp	r1, r0
   29ffc:	bgt	2a00c <grisu3_diy_fp_encode_double@@Base+0x31c>
   2a000:	movw	r0, #0
   2a004:	str	r0, [sp, #32]
   2a008:	b	2a01c <grisu3_diy_fp_encode_double@@Base+0x32c>
   2a00c:	ldr	r0, [pc, #556]	; 2a240 <grisu3_diy_fp_encode_double@@Base+0x550>
   2a010:	ldr	r1, [fp, #-132]	; 0xffffff7c
   2a014:	sub	r0, r1, r0
   2a018:	str	r0, [sp, #32]
   2a01c:	ldr	r0, [sp, #32]
   2a020:	str	r0, [sp, #36]	; 0x24
   2a024:	ldr	r0, [sp, #36]	; 0x24
   2a028:	str	r0, [fp, #-132]	; 0xffffff7c
   2a02c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   2a030:	movw	r1, #64	; 0x40
   2a034:	sub	r0, r1, r0
   2a038:	str	r0, [sp, #136]	; 0x88
   2a03c:	ldr	r0, [sp, #136]	; 0x88
   2a040:	add	r0, r0, #3
   2a044:	cmp	r0, #64	; 0x40
   2a048:	blt	2a0c8 <grisu3_diy_fp_encode_double@@Base+0x3d8>
   2a04c:	ldr	r0, [sp, #136]	; 0x88
   2a050:	sub	r0, r0, #62	; 0x3e
   2a054:	str	r0, [sp, #52]	; 0x34
   2a058:	ldr	r0, [sp, #52]	; 0x34
   2a05c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2a060:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2a064:	lsr	r1, r1, r0
   2a068:	rsb	r3, r0, #32
   2a06c:	orr	r1, r1, r2, lsl r3
   2a070:	sub	r3, r0, #32
   2a074:	cmp	r3, #0
   2a078:	lsrpl	r1, r2, r3
   2a07c:	lsr	r0, r2, r0
   2a080:	cmp	r3, #0
   2a084:	movwpl	r0, #0
   2a088:	str	r0, [fp, #-92]	; 0xffffffa4
   2a08c:	str	r1, [fp, #-96]	; 0xffffffa0
   2a090:	ldr	r0, [sp, #52]	; 0x34
   2a094:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2a098:	add	r0, r1, r0
   2a09c:	str	r0, [fp, #-88]	; 0xffffffa8
   2a0a0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2a0a4:	ldr	r1, [sp, #52]	; 0x34
   2a0a8:	asr	r0, r0, r1
   2a0ac:	add	r0, r0, #1
   2a0b0:	add	r0, r0, #8
   2a0b4:	str	r0, [fp, #-68]	; 0xffffffbc
   2a0b8:	ldr	r0, [sp, #52]	; 0x34
   2a0bc:	ldr	r1, [sp, #136]	; 0x88
   2a0c0:	sub	r0, r1, r0
   2a0c4:	str	r0, [sp, #136]	; 0x88
   2a0c8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2a0cc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2a0d0:	ldr	r2, [sp, #136]	; 0x88
   2a0d4:	lsr	r0, r0, r2
   2a0d8:	rsb	r3, r2, #32
   2a0dc:	orr	r0, r0, r1, lsl r3
   2a0e0:	sub	r3, r2, #32
   2a0e4:	cmp	r3, #0
   2a0e8:	lsrpl	r0, r1, r3
   2a0ec:	lsr	r1, r1, r2
   2a0f0:	cmp	r3, #0
   2a0f4:	movwpl	r1, #0
   2a0f8:	str	r1, [fp, #-124]	; 0xffffff84
   2a0fc:	str	r0, [fp, #-128]	; 0xffffff80
   2a100:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a104:	ldr	r1, [sp, #136]	; 0x88
   2a108:	add	r0, r0, r1
   2a10c:	str	r0, [fp, #-120]	; 0xffffff88
   2a110:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2a114:	ldr	r1, [sp, #136]	; 0x88
   2a118:	sub	r2, r1, #1
   2a11c:	mov	r3, #1
   2a120:	lsl	r2, r3, r2
   2a124:	sub	r1, r1, #33	; 0x21
   2a128:	cmp	r1, #0
   2a12c:	movwpl	r2, #0
   2a130:	and	r0, r0, r2
   2a134:	lsl	r0, r0, #3
   2a138:	str	r0, [sp, #132]	; 0x84
   2a13c:	ldr	r0, [sp, #136]	; 0x88
   2a140:	sub	r1, r0, #1
   2a144:	lsl	r1, r3, r1
   2a148:	sub	r0, r0, #33	; 0x21
   2a14c:	cmp	r0, #0
   2a150:	movwpl	r1, #0
   2a154:	lsl	r0, r1, #3
   2a158:	str	r0, [sp, #128]	; 0x80
   2a15c:	ldr	r0, [sp, #136]	; 0x88
   2a160:	ldr	r1, [sp, #128]	; 0x80
   2a164:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2a168:	add	r1, r1, r2
   2a16c:	cmp	r0, r1
   2a170:	blt	2a1c4 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   2a174:	ldr	r0, [fp, #-128]	; 0xffffff80
   2a178:	ldr	r1, [fp, #-124]	; 0xffffff84
   2a17c:	adds	r0, r0, #1
   2a180:	adc	r1, r1, #0
   2a184:	str	r0, [fp, #-128]	; 0xffffff80
   2a188:	str	r1, [fp, #-124]	; 0xffffff84
   2a18c:	ldrb	r0, [fp, #-122]	; 0xffffff86
   2a190:	tst	r0, #32
   2a194:	beq	2a1c0 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   2a198:	b	2a19c <grisu3_diy_fp_encode_double@@Base+0x4ac>
   2a19c:	ldr	r0, [fp, #-128]	; 0xffffff80
   2a1a0:	ldr	r1, [fp, #-124]	; 0xffffff84
   2a1a4:	lsrs	r1, r1, #1
   2a1a8:	rrx	r0, r0
   2a1ac:	str	r1, [fp, #-124]	; 0xffffff84
   2a1b0:	str	r0, [fp, #-128]	; 0xffffff80
   2a1b4:	ldr	r0, [fp, #-120]	; 0xffffff88
   2a1b8:	add	r0, r0, #1
   2a1bc:	str	r0, [fp, #-120]	; 0xffffff88
   2a1c0:	b	2a1c4 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   2a1c4:	ldr	r0, [fp, #-128]	; 0xffffff80
   2a1c8:	ldr	r1, [fp, #-124]	; 0xffffff84
   2a1cc:	ldr	r2, [fp, #-120]	; 0xffffff88
   2a1d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2a1d4:	bl	2a6b8 <grisu3_diy_fp_encode_double@@Base+0x9c8>
   2a1d8:	ldr	r0, [fp, #12]
   2a1dc:	vstr	d0, [r0]
   2a1e0:	ldr	r0, [sp, #128]	; 0x80
   2a1e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2a1e8:	sub	r0, r0, r1
   2a1ec:	ldr	r1, [sp, #132]	; 0x84
   2a1f0:	cmp	r0, r1
   2a1f4:	movw	r0, #1
   2a1f8:	str	r0, [sp, #28]
   2a1fc:	bge	2a220 <grisu3_diy_fp_encode_double@@Base+0x530>
   2a200:	ldr	r0, [sp, #132]	; 0x84
   2a204:	ldr	r1, [sp, #128]	; 0x80
   2a208:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2a20c:	add	r1, r1, r2
   2a210:	cmp	r0, r1
   2a214:	movw	r0, #0
   2a218:	movge	r0, #1
   2a21c:	str	r0, [sp, #28]
   2a220:	ldr	r0, [sp, #28]
   2a224:	and	r0, r0, #1
   2a228:	sub	sp, fp, #16
   2a22c:	pop	{r4, r5, r6, sl, fp, pc}
   2a230:	andeq	r8, r0, r6, lsr #11
   2a234:			; <UNDEFINED> instruction: 0x000085ba
   2a238:	andeq	r8, r0, r0, lsr #12
   2a23c:			; <UNDEFINED> instruction: 0xfffffc0e
   2a240:			; <UNDEFINED> instruction: 0xfffffbce
   2a244:	strdeq	sl, [r1], -ip
   2a248:	push	{fp, lr}
   2a24c:	mov	fp, sp
   2a250:	sub	sp, sp, #24
   2a254:	ldr	r1, [fp, #12]
   2a258:	ldr	ip, [fp, #8]
   2a25c:	str	r2, [sp, #8]
   2a260:	str	r3, [sp, #12]
   2a264:	str	ip, [sp, #16]
   2a268:	str	r1, [sp, #20]
   2a26c:	ldr	r1, [sp, #8]
   2a270:	ldr	r2, [sp, #12]
   2a274:	orr	r1, r1, r2
   2a278:	cmp	r1, #0
   2a27c:	str	r0, [sp, #4]
   2a280:	beq	2a28c <grisu3_diy_fp_encode_double@@Base+0x59c>
   2a284:	b	2a288 <grisu3_diy_fp_encode_double@@Base+0x598>
   2a288:	b	2a2ac <grisu3_diy_fp_encode_double@@Base+0x5bc>
   2a28c:	ldr	r0, [pc, #224]	; 2a374 <grisu3_diy_fp_encode_double@@Base+0x684>
   2a290:	add	r0, pc, r0
   2a294:	ldr	r1, [pc, #220]	; 2a378 <grisu3_diy_fp_encode_double@@Base+0x688>
   2a298:	add	r1, pc, r1
   2a29c:	ldr	r2, [pc, #216]	; 2a37c <grisu3_diy_fp_encode_double@@Base+0x68c>
   2a2a0:	add	r3, pc, r2
   2a2a4:	movw	r2, #260	; 0x104
   2a2a8:	bl	12b80 <__assert_fail@plt>
   2a2ac:	b	2a2b0 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   2a2b0:	ldrh	r0, [sp, #14]
   2a2b4:	bic	r0, r0, #63	; 0x3f
   2a2b8:	cmp	r0, #0
   2a2bc:	movwne	r0, #1
   2a2c0:	mvn	r1, #0
   2a2c4:	eor	r0, r0, r1
   2a2c8:	tst	r0, #1
   2a2cc:	beq	2a2fc <grisu3_diy_fp_encode_double@@Base+0x60c>
   2a2d0:	ldr	r0, [sp, #8]
   2a2d4:	ldr	r1, [sp, #12]
   2a2d8:	lsl	r1, r1, #10
   2a2dc:	orr	r1, r1, r0, lsr #22
   2a2e0:	lsl	r0, r0, #10
   2a2e4:	str	r0, [sp, #8]
   2a2e8:	str	r1, [sp, #12]
   2a2ec:	ldr	r0, [sp, #16]
   2a2f0:	sub	r0, r0, #10
   2a2f4:	str	r0, [sp, #16]
   2a2f8:	b	2a2b0 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   2a2fc:	b	2a300 <grisu3_diy_fp_encode_double@@Base+0x610>
   2a300:	ldrb	r0, [sp, #15]
   2a304:	lsr	r0, r0, #7
   2a308:	mvn	r1, #0
   2a30c:	eor	r0, r0, r1
   2a310:	tst	r0, #1
   2a314:	beq	2a348 <grisu3_diy_fp_encode_double@@Base+0x658>
   2a318:	ldr	r0, [sp, #8]
   2a31c:	ldr	r1, [sp, #12]
   2a320:	lsl	r1, r1, #1
   2a324:	orr	r1, r1, r0, lsr #31
   2a328:	lsl	r0, r0, #1
   2a32c:	str	r0, [sp, #8]
   2a330:	str	r1, [sp, #12]
   2a334:	ldr	r0, [sp, #16]
   2a338:	mvn	r1, #0
   2a33c:	add	r0, r0, r1
   2a340:	str	r0, [sp, #16]
   2a344:	b	2a300 <grisu3_diy_fp_encode_double@@Base+0x610>
   2a348:	ldr	r0, [sp, #8]
   2a34c:	ldr	r1, [sp, #4]
   2a350:	str	r0, [r1]
   2a354:	ldr	r0, [sp, #12]
   2a358:	str	r0, [r1, #4]
   2a35c:	ldr	r0, [sp, #16]
   2a360:	str	r0, [r1, #8]
   2a364:	ldr	r0, [sp, #20]
   2a368:	str	r0, [r1, #12]
   2a36c:	mov	sp, fp
   2a370:	pop	{fp, pc}
   2a374:	andeq	r8, r0, r3, ror #13
   2a378:	andeq	r8, r0, r4, ror #13
   2a37c:	andeq	r8, r0, r9, asr #14
   2a380:	push	{fp, lr}
   2a384:	mov	fp, sp
   2a388:	sub	sp, sp, #24
   2a38c:	ldr	r2, [pc, #340]	; 2a4e8 <grisu3_diy_fp_encode_double@@Base+0x7f8>
   2a390:	str	r0, [fp, #-4]
   2a394:	str	r1, [fp, #-8]
   2a398:	movw	r0, #348	; 0x15c
   2a39c:	str	r0, [sp, #12]
   2a3a0:	movw	r0, #8
   2a3a4:	str	r0, [sp, #8]
   2a3a8:	ldr	r0, [fp, #-4]
   2a3ac:	cmp	r2, r0
   2a3b0:	bgt	2a3b8 <grisu3_diy_fp_encode_double@@Base+0x6c8>
   2a3b4:	b	2a3d8 <grisu3_diy_fp_encode_double@@Base+0x6e8>
   2a3b8:	ldr	r0, [pc, #300]	; 2a4ec <grisu3_diy_fp_encode_double@@Base+0x7fc>
   2a3bc:	add	r0, pc, r0
   2a3c0:	ldr	r1, [pc, #296]	; 2a4f0 <grisu3_diy_fp_encode_double@@Base+0x800>
   2a3c4:	add	r1, pc, r1
   2a3c8:	ldr	r2, [pc, #292]	; 2a4f4 <grisu3_diy_fp_encode_double@@Base+0x804>
   2a3cc:	add	r3, pc, r2
   2a3d0:	movw	r2, #80	; 0x50
   2a3d4:	bl	12b80 <__assert_fail@plt>
   2a3d8:	ldr	r0, [fp, #-4]
   2a3dc:	cmp	r0, #348	; 0x15c
   2a3e0:	bge	2a3e8 <grisu3_diy_fp_encode_double@@Base+0x6f8>
   2a3e4:	b	2a408 <grisu3_diy_fp_encode_double@@Base+0x718>
   2a3e8:	ldr	r0, [pc, #264]	; 2a4f8 <grisu3_diy_fp_encode_double@@Base+0x808>
   2a3ec:	add	r0, pc, r0
   2a3f0:	ldr	r1, [pc, #260]	; 2a4fc <grisu3_diy_fp_encode_double@@Base+0x80c>
   2a3f4:	add	r1, pc, r1
   2a3f8:	ldr	r2, [pc, #256]	; 2a500 <grisu3_diy_fp_encode_double@@Base+0x810>
   2a3fc:	add	r3, pc, r2
   2a400:	movw	r2, #81	; 0x51
   2a404:	bl	12b80 <__assert_fail@plt>
   2a408:	ldr	r0, [pc, #244]	; 2a504 <grisu3_diy_fp_encode_double@@Base+0x814>
   2a40c:	add	r0, pc, r0
   2a410:	ldr	r1, [fp, #-4]
   2a414:	add	r1, r1, #348	; 0x15c
   2a418:	asr	r2, r1, #31
   2a41c:	add	r1, r1, r2, lsr #29
   2a420:	asr	r1, r1, #3
   2a424:	str	r1, [sp, #4]
   2a428:	ldr	r1, [sp, #4]
   2a42c:	ldr	r2, [pc, #236]	; 2a520 <grisu3_diy_fp_encode_double@@Base+0x830>
   2a430:	add	r2, pc, r2
   2a434:	add	r1, r2, r1, lsl #4
   2a438:	ldrsh	r1, [r1, #10]
   2a43c:	str	r1, [sp]
   2a440:	ldr	r1, [sp, #4]
   2a444:	mov	r3, r2
   2a448:	ldr	r1, [r3, r1, lsl #4]!
   2a44c:	ldr	r3, [r3, #4]
   2a450:	ldr	ip, [fp, #-8]
   2a454:	str	r3, [ip, #4]
   2a458:	str	r1, [ip]
   2a45c:	ldr	r1, [sp, #4]
   2a460:	add	r1, r2, r1, lsl #4
   2a464:	ldrsh	r1, [r1, #8]
   2a468:	ldr	r2, [fp, #-8]
   2a46c:	str	r1, [r2, #8]
   2a470:	ldr	r1, [sp]
   2a474:	ldr	r2, [fp, #-4]
   2a478:	cmp	r1, r2
   2a47c:	bgt	2a484 <grisu3_diy_fp_encode_double@@Base+0x794>
   2a480:	b	2a4a4 <grisu3_diy_fp_encode_double@@Base+0x7b4>
   2a484:	ldr	r0, [pc, #124]	; 2a508 <grisu3_diy_fp_encode_double@@Base+0x818>
   2a488:	add	r0, pc, r0
   2a48c:	ldr	r1, [pc, #120]	; 2a50c <grisu3_diy_fp_encode_double@@Base+0x81c>
   2a490:	add	r1, pc, r1
   2a494:	ldr	r2, [pc, #116]	; 2a510 <grisu3_diy_fp_encode_double@@Base+0x820>
   2a498:	add	r3, pc, r2
   2a49c:	movw	r2, #88	; 0x58
   2a4a0:	bl	12b80 <__assert_fail@plt>
   2a4a4:	ldr	r0, [fp, #-4]
   2a4a8:	ldr	r1, [sp]
   2a4ac:	add	r1, r1, #8
   2a4b0:	cmp	r0, r1
   2a4b4:	bge	2a4bc <grisu3_diy_fp_encode_double@@Base+0x7cc>
   2a4b8:	b	2a4dc <grisu3_diy_fp_encode_double@@Base+0x7ec>
   2a4bc:	ldr	r0, [pc, #80]	; 2a514 <grisu3_diy_fp_encode_double@@Base+0x824>
   2a4c0:	add	r0, pc, r0
   2a4c4:	ldr	r1, [pc, #76]	; 2a518 <grisu3_diy_fp_encode_double@@Base+0x828>
   2a4c8:	add	r1, pc, r1
   2a4cc:	ldr	r2, [pc, #72]	; 2a51c <grisu3_diy_fp_encode_double@@Base+0x82c>
   2a4d0:	add	r3, pc, r2
   2a4d4:	movw	r2, #89	; 0x59
   2a4d8:	bl	12b80 <__assert_fail@plt>
   2a4dc:	ldr	r0, [sp]
   2a4e0:	mov	sp, fp
   2a4e4:	pop	{fp, pc}
   2a4e8:			; <UNDEFINED> instruction: 0xfffffea4
   2a4ec:	andeq	r8, r0, r6, ror #12
   2a4f0:	andeq	r8, r0, lr, lsr r0
   2a4f4:	andeq	r8, r0, r5, ror r6
   2a4f8:	andeq	r8, r0, lr, lsl #13
   2a4fc:	andeq	r8, r0, lr
   2a500:	andeq	r8, r0, r5, asr #12
   2a504:	andeq	r8, r0, r4, asr #13
   2a508:	andeq	r8, r0, sp, lsl r6
   2a50c:	andeq	r7, r0, r2, ror pc
   2a510:	andeq	r8, r0, r9, lsr #11
   2a514:	strdeq	r8, [r0], -r4
   2a518:	andeq	r7, r0, sl, lsr pc
   2a51c:	andeq	r8, r0, r1, ror r5
   2a520:	andeq	r8, r0, r0, lsr #13
   2a524:	push	{r4, r5, r6, sl, fp, lr}
   2a528:	add	fp, sp, #16
   2a52c:	sub	sp, sp, #104	; 0x68
   2a530:	ldr	r1, [fp, #28]
   2a534:	ldr	ip, [fp, #24]
   2a538:	ldr	lr, [fp, #20]
   2a53c:	ldr	r4, [fp, #16]
   2a540:	ldr	r5, [fp, #12]
   2a544:	ldr	r6, [fp, #8]
   2a548:	str	r2, [fp, #-32]	; 0xffffffe0
   2a54c:	str	r3, [fp, #-28]	; 0xffffffe4
   2a550:	str	r6, [fp, #-24]	; 0xffffffe8
   2a554:	str	r5, [fp, #-20]	; 0xffffffec
   2a558:	str	r1, [fp, #-36]	; 0xffffffdc
   2a55c:	str	ip, [fp, #-40]	; 0xffffffd8
   2a560:	str	lr, [fp, #-44]	; 0xffffffd4
   2a564:	str	r4, [fp, #-48]	; 0xffffffd0
   2a568:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a56c:	mov	r2, #0
   2a570:	str	r2, [fp, #-52]	; 0xffffffcc
   2a574:	str	r1, [fp, #-56]	; 0xffffffc8
   2a578:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a57c:	str	r2, [sp, #60]	; 0x3c
   2a580:	str	r1, [sp, #56]	; 0x38
   2a584:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a588:	str	r2, [sp, #52]	; 0x34
   2a58c:	str	r1, [sp, #48]	; 0x30
   2a590:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a594:	str	r2, [sp, #44]	; 0x2c
   2a598:	str	r1, [sp, #40]	; 0x28
   2a59c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a5a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a5a4:	ldr	ip, [sp, #48]	; 0x30
   2a5a8:	ldr	lr, [sp, #52]	; 0x34
   2a5ac:	umull	r4, r5, r1, ip
   2a5b0:	mla	r1, r1, lr, r5
   2a5b4:	mla	r1, r3, ip, r1
   2a5b8:	str	r4, [sp, #32]
   2a5bc:	str	r1, [sp, #36]	; 0x24
   2a5c0:	ldr	r1, [sp, #56]	; 0x38
   2a5c4:	ldr	r3, [sp, #60]	; 0x3c
   2a5c8:	ldr	ip, [sp, #48]	; 0x30
   2a5cc:	ldr	lr, [sp, #52]	; 0x34
   2a5d0:	umull	r4, r5, r1, ip
   2a5d4:	mla	r1, r1, lr, r5
   2a5d8:	mla	r1, r3, ip, r1
   2a5dc:	str	r4, [sp, #24]
   2a5e0:	str	r1, [sp, #28]
   2a5e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a5e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a5ec:	ldr	ip, [sp, #40]	; 0x28
   2a5f0:	ldr	lr, [sp, #44]	; 0x2c
   2a5f4:	umull	r4, r5, r1, ip
   2a5f8:	mla	r1, r1, lr, r5
   2a5fc:	mla	r1, r3, ip, r1
   2a600:	str	r4, [sp, #16]
   2a604:	str	r1, [sp, #20]
   2a608:	ldr	r1, [sp, #56]	; 0x38
   2a60c:	ldr	r3, [sp, #60]	; 0x3c
   2a610:	ldr	ip, [sp, #40]	; 0x28
   2a614:	ldr	lr, [sp, #44]	; 0x2c
   2a618:	umull	r4, r5, r1, ip
   2a61c:	mla	r1, r1, lr, r5
   2a620:	mla	r1, r3, ip, r1
   2a624:	str	r4, [sp, #8]
   2a628:	str	r1, [sp, #12]
   2a62c:	ldr	r1, [sp, #12]
   2a630:	ldr	r3, [sp, #16]
   2a634:	adds	r1, r1, r3
   2a638:	adc	r2, r2, #0
   2a63c:	ldr	r3, [sp, #24]
   2a640:	adds	r1, r1, r3
   2a644:	adc	r2, r2, #0
   2a648:	str	r1, [sp]
   2a64c:	str	r2, [sp, #4]
   2a650:	ldr	r1, [sp]
   2a654:	ldr	r2, [sp, #4]
   2a658:	adds	r1, r1, #-2147483648	; 0x80000000
   2a65c:	adc	r2, r2, #0
   2a660:	str	r1, [sp]
   2a664:	str	r2, [sp, #4]
   2a668:	ldr	r1, [sp, #32]
   2a66c:	ldr	r2, [sp, #36]	; 0x24
   2a670:	ldr	r3, [sp, #20]
   2a674:	adds	r1, r1, r3
   2a678:	adc	r2, r2, #0
   2a67c:	ldr	r3, [sp, #28]
   2a680:	adds	r1, r1, r3
   2a684:	adc	r2, r2, #0
   2a688:	ldr	r3, [sp, #4]
   2a68c:	adds	r1, r1, r3
   2a690:	adc	r2, r2, #0
   2a694:	str	r1, [r0]
   2a698:	str	r2, [r0, #4]
   2a69c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a6a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a6a4:	add	r1, r1, r2
   2a6a8:	add	r1, r1, #64	; 0x40
   2a6ac:	str	r1, [r0, #8]
   2a6b0:	sub	sp, fp, #16
   2a6b4:	pop	{r4, r5, r6, sl, fp, pc}
   2a6b8:	push	{fp, lr}
   2a6bc:	mov	fp, sp
   2a6c0:	sub	sp, sp, #88	; 0x58
   2a6c4:	ldr	ip, [pc, #412]	; 2a868 <grisu3_diy_fp_encode_double@@Base+0xb78>
   2a6c8:	str	r0, [fp, #-24]	; 0xffffffe8
   2a6cc:	str	r1, [fp, #-20]	; 0xffffffec
   2a6d0:	str	r2, [fp, #-16]
   2a6d4:	str	r3, [fp, #-12]
   2a6d8:	mov	r0, #1048576	; 0x100000
   2a6dc:	str	r0, [fp, #-28]	; 0xffffffe4
   2a6e0:	mov	r0, #0
   2a6e4:	str	r0, [fp, #-32]	; 0xffffffe0
   2a6e8:	movw	r0, #65535	; 0xffff
   2a6ec:	movt	r0, #15
   2a6f0:	str	r0, [fp, #-36]	; 0xffffffdc
   2a6f4:	mvn	r0, #0
   2a6f8:	str	r0, [fp, #-40]	; 0xffffffd8
   2a6fc:	str	ip, [sp, #44]	; 0x2c
   2a700:	movw	r0, #1075	; 0x433
   2a704:	str	r0, [sp, #40]	; 0x28
   2a708:	movw	r0, #52	; 0x34
   2a70c:	str	r0, [sp, #36]	; 0x24
   2a710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a714:	str	r0, [sp, #16]
   2a718:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a71c:	str	r0, [sp, #20]
   2a720:	ldr	r0, [fp, #-16]
   2a724:	str	r0, [sp, #24]
   2a728:	ldr	r0, [fp, #-12]
   2a72c:	str	r0, [sp, #28]
   2a730:	ldr	r0, [sp, #20]
   2a734:	cmp	r0, #2097152	; 0x200000
   2a738:	bcc	2a768 <grisu3_diy_fp_encode_double@@Base+0xa78>
   2a73c:	b	2a740 <grisu3_diy_fp_encode_double@@Base+0xa50>
   2a740:	ldr	r0, [sp, #16]
   2a744:	ldr	r1, [sp, #20]
   2a748:	lsrs	r1, r1, #1
   2a74c:	rrx	r0, r0
   2a750:	str	r1, [sp, #20]
   2a754:	str	r0, [sp, #16]
   2a758:	ldr	r0, [sp, #24]
   2a75c:	add	r0, r0, #1
   2a760:	str	r0, [sp, #24]
   2a764:	b	2a730 <grisu3_diy_fp_encode_double@@Base+0xa40>
   2a768:	ldr	r0, [pc, #248]	; 2a868 <grisu3_diy_fp_encode_double@@Base+0xb78>
   2a76c:	ldr	r1, [sp, #24]
   2a770:	cmp	r1, r0
   2a774:	bge	2a784 <grisu3_diy_fp_encode_double@@Base+0xa94>
   2a778:	vldr	d16, [pc, #224]	; 2a860 <grisu3_diy_fp_encode_double@@Base+0xb70>
   2a77c:	vstr	d16, [fp, #-8]
   2a780:	b	2a854 <grisu3_diy_fp_encode_double@@Base+0xb64>
   2a784:	b	2a788 <grisu3_diy_fp_encode_double@@Base+0xa98>
   2a788:	ldr	r0, [pc, #216]	; 2a868 <grisu3_diy_fp_encode_double@@Base+0xb78>
   2a78c:	ldr	r1, [sp, #24]
   2a790:	cmp	r1, r0
   2a794:	movw	r0, #0
   2a798:	str	r0, [sp, #4]
   2a79c:	ble	2a7b4 <grisu3_diy_fp_encode_double@@Base+0xac4>
   2a7a0:	ldrb	r0, [sp, #22]
   2a7a4:	and	r0, r0, #16
   2a7a8:	mov	r1, #1
   2a7ac:	eor	r0, r1, r0, lsr #4
   2a7b0:	str	r0, [sp, #4]
   2a7b4:	ldr	r0, [sp, #4]
   2a7b8:	tst	r0, #1
   2a7bc:	beq	2a7f0 <grisu3_diy_fp_encode_double@@Base+0xb00>
   2a7c0:	ldr	r0, [sp, #16]
   2a7c4:	ldr	r1, [sp, #20]
   2a7c8:	lsl	r1, r1, #1
   2a7cc:	orr	r1, r1, r0, lsr #31
   2a7d0:	lsl	r0, r0, #1
   2a7d4:	str	r0, [sp, #16]
   2a7d8:	str	r1, [sp, #20]
   2a7dc:	ldr	r0, [sp, #24]
   2a7e0:	mvn	r1, #0
   2a7e4:	add	r0, r0, r1
   2a7e8:	str	r0, [sp, #24]
   2a7ec:	b	2a788 <grisu3_diy_fp_encode_double@@Base+0xa98>
   2a7f0:	ldr	r0, [pc, #112]	; 2a868 <grisu3_diy_fp_encode_double@@Base+0xb78>
   2a7f4:	ldr	r1, [sp, #24]
   2a7f8:	cmp	r1, r0
   2a7fc:	bne	2a820 <grisu3_diy_fp_encode_double@@Base+0xb30>
   2a800:	ldrb	r0, [sp, #22]
   2a804:	tst	r0, #16
   2a808:	bne	2a820 <grisu3_diy_fp_encode_double@@Base+0xb30>
   2a80c:	b	2a810 <grisu3_diy_fp_encode_double@@Base+0xb20>
   2a810:	mov	r0, #0
   2a814:	str	r0, [sp, #12]
   2a818:	str	r0, [sp, #8]
   2a81c:	b	2a838 <grisu3_diy_fp_encode_double@@Base+0xb48>
   2a820:	ldr	r0, [sp, #24]
   2a824:	movw	r1, #1075	; 0x433
   2a828:	add	r0, r0, r1
   2a82c:	asr	r1, r0, #31
   2a830:	str	r0, [sp, #8]
   2a834:	str	r1, [sp, #12]
   2a838:	ldr	r0, [sp, #16]
   2a83c:	ldr	r1, [sp, #20]
   2a840:	bfc	r1, #20, #12
   2a844:	ldr	r2, [sp, #8]
   2a848:	orr	r1, r1, r2, lsl #20
   2a84c:	bl	2f44c <flatcc_json_parser_struct_as_root@@Base+0x160>
   2a850:	vstr	d0, [fp, #-8]
   2a854:	vldr	d0, [fp, #-8]
   2a858:	mov	sp, fp
   2a85c:	pop	{fp, pc}
	...
   2a868:			; <UNDEFINED> instruction: 0xfffffbce

0002a86c <flatcc_json_parser_error_string@@Base>:
   2a86c:	sub	sp, sp, #12
   2a870:	str	r0, [sp, #4]
   2a874:	ldr	r0, [sp, #4]
   2a878:	cmp	r0, #34	; 0x22
   2a87c:	str	r0, [sp]
   2a880:	bhi	2ab50 <flatcc_json_parser_error_string@@Base+0x2e4>
   2a884:	add	r0, pc, #8
   2a888:	ldr	r1, [sp]
   2a88c:	ldr	r2, [r0, r1, lsl #2]
   2a890:	add	pc, r0, r2
   2a894:	andeq	r0, r0, ip, lsl #1
   2a898:	muleq	r0, ip, r0
   2a89c:	andeq	r0, r0, ip, lsr #1
   2a8a0:	strheq	r0, [r0], -ip
   2a8a4:	andeq	r0, r0, ip, asr #1
   2a8a8:	ldrdeq	r0, [r0], -ip
   2a8ac:	andeq	r0, r0, ip, ror #1
   2a8b0:	strdeq	r0, [r0], -ip
   2a8b4:	andeq	r0, r0, ip, lsl #2
   2a8b8:	andeq	r0, r0, ip, lsl r1
   2a8bc:	andeq	r0, r0, ip, lsr #2
   2a8c0:	andeq	r0, r0, ip, lsr r1
   2a8c4:	andeq	r0, r0, ip, asr #2
   2a8c8:	andeq	r0, r0, ip, asr r1
   2a8cc:	andeq	r0, r0, ip, ror #2
   2a8d0:	andeq	r0, r0, ip, ror r1
   2a8d4:	andeq	r0, r0, ip, lsl #3
   2a8d8:	muleq	r0, ip, r1
   2a8dc:	andeq	r0, r0, ip, lsr #3
   2a8e0:			; <UNDEFINED> instruction: 0x000001bc
   2a8e4:	andeq	r0, r0, ip, asr #3
   2a8e8:	ldrdeq	r0, [r0], -ip
   2a8ec:	andeq	r0, r0, ip, ror #3
   2a8f0:	strdeq	r0, [r0], -ip
   2a8f4:	andeq	r0, r0, ip, lsl #4
   2a8f8:	andeq	r0, r0, ip, lsl r2
   2a8fc:	andeq	r0, r0, ip, lsr #4
   2a900:	andeq	r0, r0, ip, lsr r2
   2a904:	andeq	r0, r0, ip, asr #4
   2a908:	andeq	r0, r0, ip, asr r2
   2a90c:	andeq	r0, r0, ip, ror #4
   2a910:	andeq	r0, r0, ip, ror r2
   2a914:	andeq	r0, r0, ip, lsl #5
   2a918:	muleq	r0, ip, r2
   2a91c:	andeq	r0, r0, ip, lsr #5
   2a920:	ldr	r0, [pc, #712]	; 2abf0 <flatcc_json_parser_error_string@@Base+0x384>
   2a924:	add	r0, pc, r0
   2a928:	str	r0, [sp, #8]
   2a92c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a930:	ldr	r0, [pc, #692]	; 2abec <flatcc_json_parser_error_string@@Base+0x380>
   2a934:	add	r0, pc, r0
   2a938:	str	r0, [sp, #8]
   2a93c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a940:	ldr	r0, [pc, #672]	; 2abe8 <flatcc_json_parser_error_string@@Base+0x37c>
   2a944:	add	r0, pc, r0
   2a948:	str	r0, [sp, #8]
   2a94c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a950:	ldr	r0, [pc, #652]	; 2abe4 <flatcc_json_parser_error_string@@Base+0x378>
   2a954:	add	r0, pc, r0
   2a958:	str	r0, [sp, #8]
   2a95c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a960:	ldr	r0, [pc, #632]	; 2abe0 <flatcc_json_parser_error_string@@Base+0x374>
   2a964:	add	r0, pc, r0
   2a968:	str	r0, [sp, #8]
   2a96c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a970:	ldr	r0, [pc, #612]	; 2abdc <flatcc_json_parser_error_string@@Base+0x370>
   2a974:	add	r0, pc, r0
   2a978:	str	r0, [sp, #8]
   2a97c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a980:	ldr	r0, [pc, #592]	; 2abd8 <flatcc_json_parser_error_string@@Base+0x36c>
   2a984:	add	r0, pc, r0
   2a988:	str	r0, [sp, #8]
   2a98c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a990:	ldr	r0, [pc, #572]	; 2abd4 <flatcc_json_parser_error_string@@Base+0x368>
   2a994:	add	r0, pc, r0
   2a998:	str	r0, [sp, #8]
   2a99c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a9a0:	ldr	r0, [pc, #552]	; 2abd0 <flatcc_json_parser_error_string@@Base+0x364>
   2a9a4:	add	r0, pc, r0
   2a9a8:	str	r0, [sp, #8]
   2a9ac:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a9b0:	ldr	r0, [pc, #532]	; 2abcc <flatcc_json_parser_error_string@@Base+0x360>
   2a9b4:	add	r0, pc, r0
   2a9b8:	str	r0, [sp, #8]
   2a9bc:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a9c0:	ldr	r0, [pc, #512]	; 2abc8 <flatcc_json_parser_error_string@@Base+0x35c>
   2a9c4:	add	r0, pc, r0
   2a9c8:	str	r0, [sp, #8]
   2a9cc:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a9d0:	ldr	r0, [pc, #492]	; 2abc4 <flatcc_json_parser_error_string@@Base+0x358>
   2a9d4:	add	r0, pc, r0
   2a9d8:	str	r0, [sp, #8]
   2a9dc:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a9e0:	ldr	r0, [pc, #472]	; 2abc0 <flatcc_json_parser_error_string@@Base+0x354>
   2a9e4:	add	r0, pc, r0
   2a9e8:	str	r0, [sp, #8]
   2a9ec:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2a9f0:	ldr	r0, [pc, #452]	; 2abbc <flatcc_json_parser_error_string@@Base+0x350>
   2a9f4:	add	r0, pc, r0
   2a9f8:	str	r0, [sp, #8]
   2a9fc:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa00:	ldr	r0, [pc, #432]	; 2abb8 <flatcc_json_parser_error_string@@Base+0x34c>
   2aa04:	add	r0, pc, r0
   2aa08:	str	r0, [sp, #8]
   2aa0c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa10:	ldr	r0, [pc, #412]	; 2abb4 <flatcc_json_parser_error_string@@Base+0x348>
   2aa14:	add	r0, pc, r0
   2aa18:	str	r0, [sp, #8]
   2aa1c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa20:	ldr	r0, [pc, #392]	; 2abb0 <flatcc_json_parser_error_string@@Base+0x344>
   2aa24:	add	r0, pc, r0
   2aa28:	str	r0, [sp, #8]
   2aa2c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa30:	ldr	r0, [pc, #372]	; 2abac <flatcc_json_parser_error_string@@Base+0x340>
   2aa34:	add	r0, pc, r0
   2aa38:	str	r0, [sp, #8]
   2aa3c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa40:	ldr	r0, [pc, #352]	; 2aba8 <flatcc_json_parser_error_string@@Base+0x33c>
   2aa44:	add	r0, pc, r0
   2aa48:	str	r0, [sp, #8]
   2aa4c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa50:	ldr	r0, [pc, #332]	; 2aba4 <flatcc_json_parser_error_string@@Base+0x338>
   2aa54:	add	r0, pc, r0
   2aa58:	str	r0, [sp, #8]
   2aa5c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa60:	ldr	r0, [pc, #312]	; 2aba0 <flatcc_json_parser_error_string@@Base+0x334>
   2aa64:	add	r0, pc, r0
   2aa68:	str	r0, [sp, #8]
   2aa6c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa70:	ldr	r0, [pc, #292]	; 2ab9c <flatcc_json_parser_error_string@@Base+0x330>
   2aa74:	add	r0, pc, r0
   2aa78:	str	r0, [sp, #8]
   2aa7c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa80:	ldr	r0, [pc, #272]	; 2ab98 <flatcc_json_parser_error_string@@Base+0x32c>
   2aa84:	add	r0, pc, r0
   2aa88:	str	r0, [sp, #8]
   2aa8c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aa90:	ldr	r0, [pc, #252]	; 2ab94 <flatcc_json_parser_error_string@@Base+0x328>
   2aa94:	add	r0, pc, r0
   2aa98:	str	r0, [sp, #8]
   2aa9c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aaa0:	ldr	r0, [pc, #232]	; 2ab90 <flatcc_json_parser_error_string@@Base+0x324>
   2aaa4:	add	r0, pc, r0
   2aaa8:	str	r0, [sp, #8]
   2aaac:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aab0:	ldr	r0, [pc, #212]	; 2ab8c <flatcc_json_parser_error_string@@Base+0x320>
   2aab4:	add	r0, pc, r0
   2aab8:	str	r0, [sp, #8]
   2aabc:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aac0:	ldr	r0, [pc, #192]	; 2ab88 <flatcc_json_parser_error_string@@Base+0x31c>
   2aac4:	add	r0, pc, r0
   2aac8:	str	r0, [sp, #8]
   2aacc:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aad0:	ldr	r0, [pc, #172]	; 2ab84 <flatcc_json_parser_error_string@@Base+0x318>
   2aad4:	add	r0, pc, r0
   2aad8:	str	r0, [sp, #8]
   2aadc:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aae0:	ldr	r0, [pc, #152]	; 2ab80 <flatcc_json_parser_error_string@@Base+0x314>
   2aae4:	add	r0, pc, r0
   2aae8:	str	r0, [sp, #8]
   2aaec:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2aaf0:	ldr	r0, [pc, #132]	; 2ab7c <flatcc_json_parser_error_string@@Base+0x310>
   2aaf4:	add	r0, pc, r0
   2aaf8:	str	r0, [sp, #8]
   2aafc:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2ab00:	ldr	r0, [pc, #112]	; 2ab78 <flatcc_json_parser_error_string@@Base+0x30c>
   2ab04:	add	r0, pc, r0
   2ab08:	str	r0, [sp, #8]
   2ab0c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2ab10:	ldr	r0, [pc, #92]	; 2ab74 <flatcc_json_parser_error_string@@Base+0x308>
   2ab14:	add	r0, pc, r0
   2ab18:	str	r0, [sp, #8]
   2ab1c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2ab20:	ldr	r0, [pc, #72]	; 2ab70 <flatcc_json_parser_error_string@@Base+0x304>
   2ab24:	add	r0, pc, r0
   2ab28:	str	r0, [sp, #8]
   2ab2c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2ab30:	ldr	r0, [pc, #52]	; 2ab6c <flatcc_json_parser_error_string@@Base+0x300>
   2ab34:	add	r0, pc, r0
   2ab38:	str	r0, [sp, #8]
   2ab3c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2ab40:	ldr	r0, [pc, #32]	; 2ab68 <flatcc_json_parser_error_string@@Base+0x2fc>
   2ab44:	add	r0, pc, r0
   2ab48:	str	r0, [sp, #8]
   2ab4c:	b	2ab5c <flatcc_json_parser_error_string@@Base+0x2f0>
   2ab50:	ldr	r0, [pc, #156]	; 2abf4 <flatcc_json_parser_error_string@@Base+0x388>
   2ab54:	add	r0, pc, r0
   2ab58:	str	r0, [sp, #8]
   2ab5c:	ldr	r0, [sp, #8]
   2ab60:	add	sp, sp, #12
   2ab64:	bx	lr
   2ab68:	andeq	r7, r0, r4, ror #23
   2ab6c:	andeq	r7, r0, r6, ror #23
   2ab70:	ldrdeq	r7, [r0], -ip
   2ab74:	ldrdeq	r7, [r0], -r5
   2ab78:	andeq	r7, r0, r8, asr #23
   2ab7c:	andeq	r7, r0, r1, asr #23
   2ab80:			; <UNDEFINED> instruction: 0x00007bb7
   2ab84:	andeq	r7, r0, ip, lsr #23
   2ab88:	muleq	r0, sp, fp
   2ab8c:	muleq	r0, r0, fp
   2ab90:	andeq	r7, r0, ip, lsl #23
   2ab94:	andeq	r7, r0, r8, ror fp
   2ab98:	andeq	r7, r0, r9, ror fp
   2ab9c:	andeq	r7, r0, r9, ror fp
   2aba0:	andeq	r7, r0, r5, ror fp
   2aba4:	andeq	r7, r0, r8, ror fp
   2aba8:	andeq	r7, r0, r9, ror fp
   2abac:	andeq	r7, r0, r7, ror fp
   2abb0:	andeq	r7, r0, r7, ror fp
   2abb4:	andeq	r7, r0, r4, ror fp
   2abb8:	andeq	r7, r0, fp, ror #22
   2abbc:	andeq	r7, r0, ip, ror #22
   2abc0:	andeq	r7, r0, fp, ror #22
   2abc4:	andeq	r7, r0, ip, ror #22
   2abc8:	andeq	r7, r0, sl, ror #22
   2abcc:	andeq	r7, r0, r9, ror #22
   2abd0:	andeq	r7, r0, pc, ror #22
   2abd4:	andeq	r7, r0, r6, ror fp
   2abd8:	andeq	r7, r0, r6, ror fp
   2abdc:	andeq	r7, r0, r1, ror fp
   2abe0:	andeq	r7, r0, r2, ror fp
   2abe4:	andeq	r7, r0, r3, ror fp
   2abe8:	andeq	r7, r0, r6, ror fp
   2abec:	andeq	r7, r0, r2, lsl #23
   2abf0:	andeq	r7, r0, pc, lsl #23
   2abf4:	andeq	r7, r0, r2, ror #23

0002abf8 <flatcc_json_parser_set_error@@Base>:
   2abf8:	sub	sp, sp, #16
   2abfc:	str	r0, [sp, #12]
   2ac00:	str	r1, [sp, #8]
   2ac04:	str	r2, [sp, #4]
   2ac08:	str	r3, [sp]
   2ac0c:	ldr	r0, [sp, #12]
   2ac10:	ldr	r0, [r0, #24]
   2ac14:	cmp	r0, #0
   2ac18:	bne	2ac50 <flatcc_json_parser_set_error@@Base+0x58>
   2ac1c:	ldr	r0, [sp]
   2ac20:	ldr	r1, [sp, #12]
   2ac24:	str	r0, [r1, #24]
   2ac28:	ldr	r0, [sp, #8]
   2ac2c:	ldr	r1, [sp, #12]
   2ac30:	ldr	r1, [r1, #4]
   2ac34:	sub	r0, r0, r1
   2ac38:	add	r0, r0, #1
   2ac3c:	ldr	r1, [sp, #12]
   2ac40:	str	r0, [r1, #20]
   2ac44:	ldr	r0, [sp, #8]
   2ac48:	ldr	r1, [sp, #12]
   2ac4c:	str	r0, [r1, #36]	; 0x24
   2ac50:	ldr	r0, [sp, #4]
   2ac54:	add	sp, sp, #16
   2ac58:	bx	lr

0002ac5c <flatcc_json_parser_string_part@@Base>:
   2ac5c:	push	{fp, lr}
   2ac60:	mov	fp, sp
   2ac64:	sub	sp, sp, #24
   2ac68:	str	r0, [fp, #-8]
   2ac6c:	str	r1, [sp, #12]
   2ac70:	str	r2, [sp, #8]
   2ac74:	ldr	r0, [sp, #12]
   2ac78:	ldr	r1, [sp, #8]
   2ac7c:	cmp	r0, r1
   2ac80:	movw	r0, #0
   2ac84:	str	r0, [sp, #4]
   2ac88:	beq	2acd4 <flatcc_json_parser_string_part@@Base+0x78>
   2ac8c:	ldr	r0, [sp, #12]
   2ac90:	ldrb	r0, [r0]
   2ac94:	cmp	r0, #34	; 0x22
   2ac98:	movw	r0, #0
   2ac9c:	str	r0, [sp, #4]
   2aca0:	beq	2acd4 <flatcc_json_parser_string_part@@Base+0x78>
   2aca4:	ldr	r0, [sp, #12]
   2aca8:	ldrb	r0, [r0]
   2acac:	cmp	r0, #32
   2acb0:	movw	r0, #0
   2acb4:	str	r0, [sp, #4]
   2acb8:	blt	2acd4 <flatcc_json_parser_string_part@@Base+0x78>
   2acbc:	ldr	r0, [sp, #12]
   2acc0:	ldrb	r0, [r0]
   2acc4:	cmp	r0, #92	; 0x5c
   2acc8:	movw	r0, #0
   2accc:	movne	r0, #1
   2acd0:	str	r0, [sp, #4]
   2acd4:	ldr	r0, [sp, #4]
   2acd8:	tst	r0, #1
   2acdc:	beq	2acf0 <flatcc_json_parser_string_part@@Base+0x94>
   2ace0:	ldr	r0, [sp, #12]
   2ace4:	add	r0, r0, #1
   2ace8:	str	r0, [sp, #12]
   2acec:	b	2ac74 <flatcc_json_parser_string_part@@Base+0x18>
   2acf0:	ldr	r0, [sp, #12]
   2acf4:	ldr	r1, [sp, #8]
   2acf8:	cmp	r0, r1
   2acfc:	bne	2ad1c <flatcc_json_parser_string_part@@Base+0xc0>
   2ad00:	ldr	r0, [fp, #-8]
   2ad04:	ldr	r1, [sp, #12]
   2ad08:	ldr	r2, [sp, #8]
   2ad0c:	movw	r3, #20
   2ad10:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2ad14:	str	r0, [fp, #-4]
   2ad18:	b	2ad6c <flatcc_json_parser_string_part@@Base+0x110>
   2ad1c:	ldr	r0, [sp, #12]
   2ad20:	ldrb	r0, [r0]
   2ad24:	cmp	r0, #34	; 0x22
   2ad28:	bne	2ad38 <flatcc_json_parser_string_part@@Base+0xdc>
   2ad2c:	ldr	r0, [sp, #12]
   2ad30:	str	r0, [fp, #-4]
   2ad34:	b	2ad6c <flatcc_json_parser_string_part@@Base+0x110>
   2ad38:	ldr	r0, [sp, #12]
   2ad3c:	ldrb	r0, [r0]
   2ad40:	cmp	r0, #32
   2ad44:	bge	2ad64 <flatcc_json_parser_string_part@@Base+0x108>
   2ad48:	ldr	r0, [fp, #-8]
   2ad4c:	ldr	r1, [sp, #12]
   2ad50:	ldr	r2, [sp, #8]
   2ad54:	movw	r3, #17
   2ad58:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2ad5c:	str	r0, [fp, #-4]
   2ad60:	b	2ad6c <flatcc_json_parser_string_part@@Base+0x110>
   2ad64:	ldr	r0, [sp, #12]
   2ad68:	str	r0, [fp, #-4]
   2ad6c:	ldr	r0, [fp, #-4]
   2ad70:	mov	sp, fp
   2ad74:	pop	{fp, pc}

0002ad78 <flatcc_json_parser_space_ext@@Base>:
   2ad78:	push	{fp, lr}
   2ad7c:	mov	fp, sp
   2ad80:	sub	sp, sp, #32
   2ad84:	str	r0, [fp, #-8]
   2ad88:	str	r1, [fp, #-12]
   2ad8c:	str	r2, [sp, #16]
   2ad90:	b	2ad94 <flatcc_json_parser_space_ext@@Base+0x1c>
   2ad94:	ldr	r0, [fp, #-12]
   2ad98:	ldr	r1, [sp, #16]
   2ad9c:	cmp	r0, r1
   2ada0:	movw	r0, #0
   2ada4:	str	r0, [sp, #12]
   2ada8:	beq	2adc4 <flatcc_json_parser_space_ext@@Base+0x4c>
   2adac:	ldr	r0, [fp, #-12]
   2adb0:	ldrb	r0, [r0]
   2adb4:	cmp	r0, #32
   2adb8:	movw	r0, #0
   2adbc:	moveq	r0, #1
   2adc0:	str	r0, [sp, #12]
   2adc4:	ldr	r0, [sp, #12]
   2adc8:	tst	r0, #1
   2adcc:	beq	2ade0 <flatcc_json_parser_space_ext@@Base+0x68>
   2add0:	ldr	r0, [fp, #-12]
   2add4:	add	r0, r0, #1
   2add8:	str	r0, [fp, #-12]
   2addc:	b	2ad94 <flatcc_json_parser_space_ext@@Base+0x1c>
   2ade0:	b	2ade4 <flatcc_json_parser_space_ext@@Base+0x6c>
   2ade4:	ldr	r0, [fp, #-12]
   2ade8:	ldr	r1, [sp, #16]
   2adec:	cmp	r0, r1
   2adf0:	movw	r0, #0
   2adf4:	str	r0, [sp, #8]
   2adf8:	beq	2ae14 <flatcc_json_parser_space_ext@@Base+0x9c>
   2adfc:	ldr	r0, [fp, #-12]
   2ae00:	ldrb	r0, [r0]
   2ae04:	cmp	r0, #32
   2ae08:	movw	r0, #0
   2ae0c:	movle	r0, #1
   2ae10:	str	r0, [sp, #8]
   2ae14:	ldr	r0, [sp, #8]
   2ae18:	tst	r0, #1
   2ae1c:	beq	2af48 <flatcc_json_parser_space_ext@@Base+0x1d0>
   2ae20:	ldr	r0, [fp, #-12]
   2ae24:	ldrb	r0, [r0]
   2ae28:	sub	r0, r0, #9
   2ae2c:	cmp	r0, #23
   2ae30:	str	r0, [sp, #4]
   2ae34:	bhi	2af2c <flatcc_json_parser_space_ext@@Base+0x1b4>
   2ae38:	add	r0, pc, #8
   2ae3c:	ldr	r1, [sp, #4]
   2ae40:	ldr	r2, [r0, r1, lsl #2]
   2ae44:	add	pc, r0, r2
   2ae48:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2ae4c:	andeq	r0, r0, r8, lsr #1
   2ae50:	andeq	r0, r0, r4, ror #1
   2ae54:	andeq	r0, r0, r4, ror #1
   2ae58:	andeq	r0, r0, r0, rrx
   2ae5c:	andeq	r0, r0, r4, ror #1
   2ae60:	andeq	r0, r0, r4, ror #1
   2ae64:	andeq	r0, r0, r4, ror #1
   2ae68:	andeq	r0, r0, r4, ror #1
   2ae6c:	andeq	r0, r0, r4, ror #1
   2ae70:	andeq	r0, r0, r4, ror #1
   2ae74:	andeq	r0, r0, r4, ror #1
   2ae78:	andeq	r0, r0, r4, ror #1
   2ae7c:	andeq	r0, r0, r4, ror #1
   2ae80:	andeq	r0, r0, r4, ror #1
   2ae84:	andeq	r0, r0, r4, ror #1
   2ae88:	andeq	r0, r0, r4, ror #1
   2ae8c:	andeq	r0, r0, r4, ror #1
   2ae90:	andeq	r0, r0, r4, ror #1
   2ae94:	andeq	r0, r0, r4, ror #1
   2ae98:	andeq	r0, r0, r4, ror #1
   2ae9c:	andeq	r0, r0, r4, ror #1
   2aea0:	andeq	r0, r0, r4, ror #1
   2aea4:	andeq	r0, r0, r0, ror #1
   2aea8:	ldr	r0, [sp, #16]
   2aeac:	ldr	r1, [fp, #-12]
   2aeb0:	sub	r0, r0, r1
   2aeb4:	cmp	r0, #1
   2aeb8:	movw	r0, #0
   2aebc:	str	r0, [sp]
   2aec0:	ble	2aedc <flatcc_json_parser_space_ext@@Base+0x164>
   2aec4:	ldr	r0, [fp, #-12]
   2aec8:	ldrb	r0, [r0, #1]
   2aecc:	cmp	r0, #10
   2aed0:	movw	r0, #0
   2aed4:	moveq	r0, #1
   2aed8:	str	r0, [sp]
   2aedc:	ldr	r0, [sp]
   2aee0:	and	r0, r0, #1
   2aee4:	ldr	r1, [fp, #-12]
   2aee8:	add	r0, r1, r0
   2aeec:	str	r0, [fp, #-12]
   2aef0:	ldr	r0, [fp, #-8]
   2aef4:	ldr	r1, [r0, #16]
   2aef8:	add	r1, r1, #1
   2aefc:	str	r1, [r0, #16]
   2af00:	ldr	r0, [fp, #-12]
   2af04:	add	r0, r0, #1
   2af08:	str	r0, [fp, #-12]
   2af0c:	ldr	r1, [fp, #-8]
   2af10:	str	r0, [r1, #4]
   2af14:	b	2ade4 <flatcc_json_parser_space_ext@@Base+0x6c>
   2af18:	ldr	r0, [fp, #-12]
   2af1c:	add	r0, r0, #1
   2af20:	str	r0, [fp, #-12]
   2af24:	b	2ade4 <flatcc_json_parser_space_ext@@Base+0x6c>
   2af28:	b	2ad90 <flatcc_json_parser_space_ext@@Base+0x18>
   2af2c:	ldr	r0, [fp, #-8]
   2af30:	ldr	r1, [fp, #-12]
   2af34:	ldr	r2, [sp, #16]
   2af38:	movw	r3, #5
   2af3c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2af40:	str	r0, [fp, #-4]
   2af44:	b	2af50 <flatcc_json_parser_space_ext@@Base+0x1d8>
   2af48:	ldr	r0, [fp, #-12]
   2af4c:	str	r0, [fp, #-4]
   2af50:	ldr	r0, [fp, #-4]
   2af54:	mov	sp, fp
   2af58:	pop	{fp, pc}

0002af5c <flatcc_json_parser_string_escape@@Base>:
   2af5c:	push	{fp, lr}
   2af60:	mov	fp, sp
   2af64:	sub	sp, sp, #32
   2af68:	str	r0, [fp, #-8]
   2af6c:	str	r1, [fp, #-12]
   2af70:	str	r2, [sp, #16]
   2af74:	str	r3, [sp, #12]
   2af78:	ldr	r0, [sp, #16]
   2af7c:	ldr	r1, [fp, #-12]
   2af80:	sub	r0, r0, r1
   2af84:	cmp	r0, #2
   2af88:	blt	2af9c <flatcc_json_parser_string_escape@@Base+0x40>
   2af8c:	ldr	r0, [fp, #-12]
   2af90:	ldrb	r0, [r0]
   2af94:	cmp	r0, #92	; 0x5c
   2af98:	beq	2afc4 <flatcc_json_parser_string_escape@@Base+0x68>
   2af9c:	ldr	r0, [sp, #12]
   2afa0:	movw	r1, #0
   2afa4:	strb	r1, [r0]
   2afa8:	ldr	r0, [fp, #-8]
   2afac:	ldr	r1, [fp, #-12]
   2afb0:	ldr	r2, [sp, #16]
   2afb4:	movw	r3, #18
   2afb8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2afbc:	str	r0, [fp, #-4]
   2afc0:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2afc4:	ldr	r0, [fp, #-12]
   2afc8:	ldrb	r0, [r0, #1]
   2afcc:	sub	r0, r0, #34	; 0x22
   2afd0:	cmp	r0, #86	; 0x56
   2afd4:	str	r0, [sp]
   2afd8:	bhi	2b850 <flatcc_json_parser_string_escape@@Base+0x8f4>
   2afdc:	add	r0, pc, #8
   2afe0:	ldr	r1, [sp]
   2afe4:	ldr	r2, [r0, r1, lsl #2]
   2afe8:	add	pc, r0, r2
   2afec:	andeq	r0, r0, ip, ror #15
   2aff0:	andeq	r0, r0, r4, ror #16
   2aff4:	andeq	r0, r0, r4, ror #16
   2aff8:	andeq	r0, r0, r4, ror #16
   2affc:	andeq	r0, r0, r4, ror #16
   2b000:	andeq	r0, r0, r4, ror #16
   2b004:	andeq	r0, r0, r4, ror #16
   2b008:	andeq	r0, r0, r4, ror #16
   2b00c:	andeq	r0, r0, r4, ror #16
   2b010:	andeq	r0, r0, r4, ror #16
   2b014:	andeq	r0, r0, r4, ror #16
   2b018:	andeq	r0, r0, r4, ror #16
   2b01c:	andeq	r0, r0, r4, ror #16
   2b020:	andeq	r0, r0, ip, lsr r8
   2b024:	andeq	r0, r0, r4, ror #16
   2b028:	andeq	r0, r0, r4, ror #16
   2b02c:	andeq	r0, r0, r4, ror #16
   2b030:	andeq	r0, r0, r4, ror #16
   2b034:	andeq	r0, r0, r4, ror #16
   2b038:	andeq	r0, r0, r4, ror #16
   2b03c:	andeq	r0, r0, r4, ror #16
   2b040:	andeq	r0, r0, r4, ror #16
   2b044:	andeq	r0, r0, r4, ror #16
   2b048:	andeq	r0, r0, r4, ror #16
   2b04c:	andeq	r0, r0, r4, ror #16
   2b050:	andeq	r0, r0, r4, ror #16
   2b054:	andeq	r0, r0, r4, ror #16
   2b058:	andeq	r0, r0, r4, ror #16
   2b05c:	andeq	r0, r0, r4, ror #16
   2b060:	andeq	r0, r0, r4, ror #16
   2b064:	andeq	r0, r0, r4, ror #16
   2b068:	andeq	r0, r0, r4, ror #16
   2b06c:	andeq	r0, r0, r4, ror #16
   2b070:	andeq	r0, r0, r4, ror #16
   2b074:	andeq	r0, r0, r4, ror #16
   2b078:	andeq	r0, r0, r4, ror #16
   2b07c:	andeq	r0, r0, r4, ror #16
   2b080:	andeq	r0, r0, r4, ror #16
   2b084:	andeq	r0, r0, r4, ror #16
   2b088:	andeq	r0, r0, r4, ror #16
   2b08c:	andeq	r0, r0, r4, ror #16
   2b090:	andeq	r0, r0, r4, ror #16
   2b094:	andeq	r0, r0, r4, ror #16
   2b098:	andeq	r0, r0, r4, ror #16
   2b09c:	andeq	r0, r0, r4, ror #16
   2b0a0:	andeq	r0, r0, r4, ror #16
   2b0a4:	andeq	r0, r0, r4, ror #16
   2b0a8:	andeq	r0, r0, r4, ror #16
   2b0ac:	andeq	r0, r0, r4, ror #16
   2b0b0:	andeq	r0, r0, r4, ror #16
   2b0b4:	andeq	r0, r0, r4, ror #16
   2b0b8:	andeq	r0, r0, r4, ror #16
   2b0bc:	andeq	r0, r0, r4, ror #16
   2b0c0:	andeq	r0, r0, r4, ror #16
   2b0c4:	andeq	r0, r0, r4, ror #16
   2b0c8:	andeq	r0, r0, r4, ror #16
   2b0cc:	andeq	r0, r0, r4, ror #16
   2b0d0:	andeq	r0, r0, r4, ror #16
   2b0d4:	andeq	r0, r0, r4, lsl r8
   2b0d8:	andeq	r0, r0, r4, ror #16
   2b0dc:	andeq	r0, r0, r4, ror #16
   2b0e0:	andeq	r0, r0, r4, ror #16
   2b0e4:	andeq	r0, r0, r4, ror #16
   2b0e8:	andeq	r0, r0, r4, ror #16
   2b0ec:	muleq	r0, ip, r7
   2b0f0:	andeq	r0, r0, r4, ror #16
   2b0f4:	andeq	r0, r0, r4, ror #16
   2b0f8:	andeq	r0, r0, r4, ror #16
   2b0fc:	andeq	r0, r0, r4, asr #15
   2b100:	andeq	r0, r0, r4, ror #16
   2b104:	andeq	r0, r0, r4, ror #16
   2b108:	andeq	r0, r0, r4, ror #16
   2b10c:	andeq	r0, r0, r4, ror #16
   2b110:	andeq	r0, r0, r4, ror #16
   2b114:	andeq	r0, r0, r4, ror #16
   2b118:	andeq	r0, r0, r4, ror #16
   2b11c:	andeq	r0, r0, ip, asr #14
   2b120:	andeq	r0, r0, r4, ror #16
   2b124:	andeq	r0, r0, r4, ror #16
   2b128:	andeq	r0, r0, r4, ror #16
   2b12c:	andeq	r0, r0, r4, ror r7
   2b130:	andeq	r0, r0, r4, ror #16
   2b134:	andeq	r0, r0, r4, lsr #14
   2b138:	andeq	r0, r0, r0, lsr #6
   2b13c:	andeq	r0, r0, r4, ror #16
   2b140:	andeq	r0, r0, r4, ror #16
   2b144:	andeq	r0, r0, ip, asr r1
   2b148:	movw	r0, #0
   2b14c:	strb	r0, [sp, #10]
   2b150:	ldr	r0, [sp, #12]
   2b154:	movw	r1, #1
   2b158:	strb	r1, [r0]
   2b15c:	ldr	r0, [sp, #16]
   2b160:	ldr	r1, [fp, #-12]
   2b164:	sub	r0, r0, r1
   2b168:	cmp	r0, #4
   2b16c:	bge	2b198 <flatcc_json_parser_string_escape@@Base+0x23c>
   2b170:	ldr	r0, [sp, #12]
   2b174:	movw	r1, #0
   2b178:	strb	r1, [r0]
   2b17c:	ldr	r0, [fp, #-8]
   2b180:	ldr	r1, [fp, #-12]
   2b184:	ldr	r2, [sp, #16]
   2b188:	movw	r3, #18
   2b18c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2b190:	str	r0, [fp, #-4]
   2b194:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b198:	ldr	r0, [fp, #-12]
   2b19c:	ldrb	r0, [r0, #2]
   2b1a0:	strb	r0, [sp, #11]
   2b1a4:	ldrb	r0, [sp, #11]
   2b1a8:	cmp	r0, #48	; 0x30
   2b1ac:	blt	2b1d8 <flatcc_json_parser_string_escape@@Base+0x27c>
   2b1b0:	ldrb	r0, [sp, #11]
   2b1b4:	cmp	r0, #57	; 0x39
   2b1b8:	bgt	2b1d8 <flatcc_json_parser_string_escape@@Base+0x27c>
   2b1bc:	ldrb	r0, [sp, #11]
   2b1c0:	sub	r0, r0, #48	; 0x30
   2b1c4:	lsl	r0, r0, #4
   2b1c8:	ldrb	r1, [sp, #10]
   2b1cc:	orr	r0, r1, r0
   2b1d0:	strb	r0, [sp, #10]
   2b1d4:	b	2b248 <flatcc_json_parser_string_escape@@Base+0x2ec>
   2b1d8:	ldrb	r0, [sp, #11]
   2b1dc:	orr	r0, r0, #32
   2b1e0:	strb	r0, [sp, #11]
   2b1e4:	ldrb	r0, [sp, #11]
   2b1e8:	cmp	r0, #97	; 0x61
   2b1ec:	blt	2b21c <flatcc_json_parser_string_escape@@Base+0x2c0>
   2b1f0:	ldrb	r0, [sp, #11]
   2b1f4:	cmp	r0, #102	; 0x66
   2b1f8:	bgt	2b21c <flatcc_json_parser_string_escape@@Base+0x2c0>
   2b1fc:	ldrb	r0, [sp, #11]
   2b200:	sub	r0, r0, #97	; 0x61
   2b204:	add	r0, r0, #10
   2b208:	lsl	r0, r0, #4
   2b20c:	ldrb	r1, [sp, #10]
   2b210:	orr	r0, r1, r0
   2b214:	strb	r0, [sp, #10]
   2b218:	b	2b244 <flatcc_json_parser_string_escape@@Base+0x2e8>
   2b21c:	ldr	r0, [sp, #12]
   2b220:	movw	r1, #0
   2b224:	strb	r1, [r0]
   2b228:	ldr	r0, [fp, #-8]
   2b22c:	ldr	r1, [fp, #-12]
   2b230:	ldr	r2, [sp, #16]
   2b234:	movw	r3, #18
   2b238:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2b23c:	str	r0, [fp, #-4]
   2b240:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b244:	b	2b248 <flatcc_json_parser_string_escape@@Base+0x2ec>
   2b248:	ldr	r0, [fp, #-12]
   2b24c:	ldrb	r0, [r0, #3]
   2b250:	strb	r0, [sp, #11]
   2b254:	ldrb	r0, [sp, #11]
   2b258:	cmp	r0, #48	; 0x30
   2b25c:	blt	2b284 <flatcc_json_parser_string_escape@@Base+0x328>
   2b260:	ldrb	r0, [sp, #11]
   2b264:	cmp	r0, #57	; 0x39
   2b268:	bgt	2b284 <flatcc_json_parser_string_escape@@Base+0x328>
   2b26c:	ldrb	r0, [sp, #11]
   2b270:	sub	r0, r0, #48	; 0x30
   2b274:	ldrb	r1, [sp, #10]
   2b278:	orr	r0, r1, r0
   2b27c:	strb	r0, [sp, #10]
   2b280:	b	2b2f0 <flatcc_json_parser_string_escape@@Base+0x394>
   2b284:	ldrb	r0, [sp, #11]
   2b288:	orr	r0, r0, #32
   2b28c:	strb	r0, [sp, #11]
   2b290:	ldrb	r0, [sp, #11]
   2b294:	cmp	r0, #97	; 0x61
   2b298:	blt	2b2c4 <flatcc_json_parser_string_escape@@Base+0x368>
   2b29c:	ldrb	r0, [sp, #11]
   2b2a0:	cmp	r0, #102	; 0x66
   2b2a4:	bgt	2b2c4 <flatcc_json_parser_string_escape@@Base+0x368>
   2b2a8:	ldrb	r0, [sp, #11]
   2b2ac:	sub	r0, r0, #97	; 0x61
   2b2b0:	add	r0, r0, #10
   2b2b4:	ldrb	r1, [sp, #10]
   2b2b8:	orr	r0, r1, r0
   2b2bc:	strb	r0, [sp, #10]
   2b2c0:	b	2b2ec <flatcc_json_parser_string_escape@@Base+0x390>
   2b2c4:	ldr	r0, [sp, #12]
   2b2c8:	movw	r1, #0
   2b2cc:	strb	r1, [r0]
   2b2d0:	ldr	r0, [fp, #-8]
   2b2d4:	ldr	r1, [fp, #-12]
   2b2d8:	ldr	r2, [sp, #16]
   2b2dc:	movw	r3, #18
   2b2e0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2b2e4:	str	r0, [fp, #-4]
   2b2e8:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b2ec:	b	2b2f0 <flatcc_json_parser_string_escape@@Base+0x394>
   2b2f0:	ldrb	r0, [sp, #10]
   2b2f4:	ldr	r1, [sp, #12]
   2b2f8:	strb	r0, [r1, #1]
   2b2fc:	ldr	r0, [fp, #-12]
   2b300:	add	r0, r0, #4
   2b304:	str	r0, [fp, #-4]
   2b308:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b30c:	ldr	r0, [sp, #16]
   2b310:	ldr	r1, [fp, #-12]
   2b314:	sub	r0, r0, r1
   2b318:	cmp	r0, #6
   2b31c:	bge	2b348 <flatcc_json_parser_string_escape@@Base+0x3ec>
   2b320:	ldr	r0, [sp, #12]
   2b324:	movw	r1, #0
   2b328:	strb	r1, [r0]
   2b32c:	ldr	r0, [fp, #-8]
   2b330:	ldr	r1, [fp, #-12]
   2b334:	ldr	r2, [sp, #16]
   2b338:	movw	r3, #18
   2b33c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2b340:	str	r0, [fp, #-4]
   2b344:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b348:	movw	r0, #0
   2b34c:	strh	r0, [sp, #8]
   2b350:	ldr	r0, [fp, #-12]
   2b354:	ldrb	r0, [r0, #2]
   2b358:	strb	r0, [sp, #11]
   2b35c:	ldrb	r0, [sp, #11]
   2b360:	cmp	r0, #48	; 0x30
   2b364:	blt	2b390 <flatcc_json_parser_string_escape@@Base+0x434>
   2b368:	ldrb	r0, [sp, #11]
   2b36c:	cmp	r0, #57	; 0x39
   2b370:	bgt	2b390 <flatcc_json_parser_string_escape@@Base+0x434>
   2b374:	ldrb	r0, [sp, #11]
   2b378:	sub	r0, r0, #48	; 0x30
   2b37c:	strh	r0, [sp, #6]
   2b380:	ldrh	r0, [sp, #6]
   2b384:	lsl	r0, r0, #12
   2b388:	strh	r0, [sp, #8]
   2b38c:	b	2b408 <flatcc_json_parser_string_escape@@Base+0x4ac>
   2b390:	ldrb	r0, [sp, #11]
   2b394:	orr	r0, r0, #32
   2b398:	strb	r0, [sp, #11]
   2b39c:	ldrb	r0, [sp, #11]
   2b3a0:	cmp	r0, #97	; 0x61
   2b3a4:	blt	2b3dc <flatcc_json_parser_string_escape@@Base+0x480>
   2b3a8:	ldrb	r0, [sp, #11]
   2b3ac:	cmp	r0, #102	; 0x66
   2b3b0:	bgt	2b3dc <flatcc_json_parser_string_escape@@Base+0x480>
   2b3b4:	ldrb	r0, [sp, #11]
   2b3b8:	sub	r0, r0, #97	; 0x61
   2b3bc:	add	r0, r0, #10
   2b3c0:	strh	r0, [sp, #6]
   2b3c4:	ldrh	r0, [sp, #6]
   2b3c8:	lsl	r0, r0, #12
   2b3cc:	ldrh	r1, [sp, #8]
   2b3d0:	orr	r0, r1, r0
   2b3d4:	strh	r0, [sp, #8]
   2b3d8:	b	2b404 <flatcc_json_parser_string_escape@@Base+0x4a8>
   2b3dc:	ldr	r0, [sp, #12]
   2b3e0:	movw	r1, #0
   2b3e4:	strb	r1, [r0]
   2b3e8:	ldr	r0, [fp, #-8]
   2b3ec:	ldr	r1, [fp, #-12]
   2b3f0:	ldr	r2, [sp, #16]
   2b3f4:	movw	r3, #18
   2b3f8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2b3fc:	str	r0, [fp, #-4]
   2b400:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b404:	b	2b408 <flatcc_json_parser_string_escape@@Base+0x4ac>
   2b408:	ldr	r0, [fp, #-12]
   2b40c:	ldrb	r0, [r0, #3]
   2b410:	strb	r0, [sp, #11]
   2b414:	ldrb	r0, [sp, #11]
   2b418:	cmp	r0, #48	; 0x30
   2b41c:	blt	2b450 <flatcc_json_parser_string_escape@@Base+0x4f4>
   2b420:	ldrb	r0, [sp, #11]
   2b424:	cmp	r0, #57	; 0x39
   2b428:	bgt	2b450 <flatcc_json_parser_string_escape@@Base+0x4f4>
   2b42c:	ldrb	r0, [sp, #11]
   2b430:	sub	r0, r0, #48	; 0x30
   2b434:	strh	r0, [sp, #6]
   2b438:	ldrh	r0, [sp, #6]
   2b43c:	lsl	r0, r0, #8
   2b440:	ldrh	r1, [sp, #8]
   2b444:	orr	r0, r1, r0
   2b448:	strh	r0, [sp, #8]
   2b44c:	b	2b4c8 <flatcc_json_parser_string_escape@@Base+0x56c>
   2b450:	ldrb	r0, [sp, #11]
   2b454:	orr	r0, r0, #32
   2b458:	strb	r0, [sp, #11]
   2b45c:	ldrb	r0, [sp, #11]
   2b460:	cmp	r0, #97	; 0x61
   2b464:	blt	2b49c <flatcc_json_parser_string_escape@@Base+0x540>
   2b468:	ldrb	r0, [sp, #11]
   2b46c:	cmp	r0, #102	; 0x66
   2b470:	bgt	2b49c <flatcc_json_parser_string_escape@@Base+0x540>
   2b474:	ldrb	r0, [sp, #11]
   2b478:	sub	r0, r0, #97	; 0x61
   2b47c:	add	r0, r0, #10
   2b480:	strh	r0, [sp, #6]
   2b484:	ldrh	r0, [sp, #6]
   2b488:	lsl	r0, r0, #8
   2b48c:	ldrh	r1, [sp, #8]
   2b490:	orr	r0, r1, r0
   2b494:	strh	r0, [sp, #8]
   2b498:	b	2b4c4 <flatcc_json_parser_string_escape@@Base+0x568>
   2b49c:	ldr	r0, [sp, #12]
   2b4a0:	movw	r1, #0
   2b4a4:	strb	r1, [r0]
   2b4a8:	ldr	r0, [fp, #-8]
   2b4ac:	ldr	r1, [fp, #-12]
   2b4b0:	ldr	r2, [sp, #16]
   2b4b4:	movw	r3, #18
   2b4b8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2b4bc:	str	r0, [fp, #-4]
   2b4c0:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b4c4:	b	2b4c8 <flatcc_json_parser_string_escape@@Base+0x56c>
   2b4c8:	ldr	r0, [fp, #-12]
   2b4cc:	ldrb	r0, [r0, #4]
   2b4d0:	strb	r0, [sp, #11]
   2b4d4:	ldrb	r0, [sp, #11]
   2b4d8:	cmp	r0, #48	; 0x30
   2b4dc:	blt	2b510 <flatcc_json_parser_string_escape@@Base+0x5b4>
   2b4e0:	ldrb	r0, [sp, #11]
   2b4e4:	cmp	r0, #57	; 0x39
   2b4e8:	bgt	2b510 <flatcc_json_parser_string_escape@@Base+0x5b4>
   2b4ec:	ldrb	r0, [sp, #11]
   2b4f0:	sub	r0, r0, #48	; 0x30
   2b4f4:	strh	r0, [sp, #6]
   2b4f8:	ldrh	r0, [sp, #6]
   2b4fc:	lsl	r0, r0, #4
   2b500:	ldrh	r1, [sp, #8]
   2b504:	orr	r0, r1, r0
   2b508:	strh	r0, [sp, #8]
   2b50c:	b	2b588 <flatcc_json_parser_string_escape@@Base+0x62c>
   2b510:	ldrb	r0, [sp, #11]
   2b514:	orr	r0, r0, #32
   2b518:	strb	r0, [sp, #11]
   2b51c:	ldrb	r0, [sp, #11]
   2b520:	cmp	r0, #97	; 0x61
   2b524:	blt	2b55c <flatcc_json_parser_string_escape@@Base+0x600>
   2b528:	ldrb	r0, [sp, #11]
   2b52c:	cmp	r0, #102	; 0x66
   2b530:	bgt	2b55c <flatcc_json_parser_string_escape@@Base+0x600>
   2b534:	ldrb	r0, [sp, #11]
   2b538:	sub	r0, r0, #97	; 0x61
   2b53c:	add	r0, r0, #10
   2b540:	strh	r0, [sp, #6]
   2b544:	ldrh	r0, [sp, #6]
   2b548:	lsl	r0, r0, #4
   2b54c:	ldrh	r1, [sp, #8]
   2b550:	orr	r0, r1, r0
   2b554:	strh	r0, [sp, #8]
   2b558:	b	2b584 <flatcc_json_parser_string_escape@@Base+0x628>
   2b55c:	ldr	r0, [sp, #12]
   2b560:	movw	r1, #0
   2b564:	strb	r1, [r0]
   2b568:	ldr	r0, [fp, #-8]
   2b56c:	ldr	r1, [fp, #-12]
   2b570:	ldr	r2, [sp, #16]
   2b574:	movw	r3, #18
   2b578:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2b57c:	str	r0, [fp, #-4]
   2b580:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b584:	b	2b588 <flatcc_json_parser_string_escape@@Base+0x62c>
   2b588:	ldr	r0, [fp, #-12]
   2b58c:	ldrb	r0, [r0, #5]
   2b590:	strb	r0, [sp, #11]
   2b594:	ldrb	r0, [sp, #11]
   2b598:	cmp	r0, #48	; 0x30
   2b59c:	blt	2b5cc <flatcc_json_parser_string_escape@@Base+0x670>
   2b5a0:	ldrb	r0, [sp, #11]
   2b5a4:	cmp	r0, #57	; 0x39
   2b5a8:	bgt	2b5cc <flatcc_json_parser_string_escape@@Base+0x670>
   2b5ac:	ldrb	r0, [sp, #11]
   2b5b0:	sub	r0, r0, #48	; 0x30
   2b5b4:	strh	r0, [sp, #6]
   2b5b8:	ldrh	r0, [sp, #6]
   2b5bc:	ldrh	r1, [sp, #8]
   2b5c0:	orr	r0, r1, r0
   2b5c4:	strh	r0, [sp, #8]
   2b5c8:	b	2b640 <flatcc_json_parser_string_escape@@Base+0x6e4>
   2b5cc:	ldrb	r0, [sp, #11]
   2b5d0:	orr	r0, r0, #32
   2b5d4:	strb	r0, [sp, #11]
   2b5d8:	ldrb	r0, [sp, #11]
   2b5dc:	cmp	r0, #97	; 0x61
   2b5e0:	blt	2b614 <flatcc_json_parser_string_escape@@Base+0x6b8>
   2b5e4:	ldrb	r0, [sp, #11]
   2b5e8:	cmp	r0, #102	; 0x66
   2b5ec:	bgt	2b614 <flatcc_json_parser_string_escape@@Base+0x6b8>
   2b5f0:	ldrb	r0, [sp, #11]
   2b5f4:	sub	r0, r0, #97	; 0x61
   2b5f8:	add	r0, r0, #10
   2b5fc:	strh	r0, [sp, #6]
   2b600:	ldrh	r0, [sp, #6]
   2b604:	ldrh	r1, [sp, #8]
   2b608:	orr	r0, r1, r0
   2b60c:	strh	r0, [sp, #8]
   2b610:	b	2b63c <flatcc_json_parser_string_escape@@Base+0x6e0>
   2b614:	ldr	r0, [sp, #12]
   2b618:	movw	r1, #0
   2b61c:	strb	r1, [r0]
   2b620:	ldr	r0, [fp, #-8]
   2b624:	ldr	r1, [fp, #-12]
   2b628:	ldr	r2, [sp, #16]
   2b62c:	movw	r3, #18
   2b630:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2b634:	str	r0, [fp, #-4]
   2b638:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b63c:	b	2b640 <flatcc_json_parser_string_escape@@Base+0x6e4>
   2b640:	ldrh	r0, [sp, #8]
   2b644:	cmp	r0, #127	; 0x7f
   2b648:	bgt	2b668 <flatcc_json_parser_string_escape@@Base+0x70c>
   2b64c:	ldr	r0, [sp, #12]
   2b650:	movw	r1, #1
   2b654:	strb	r1, [r0]
   2b658:	ldrh	r0, [sp, #8]
   2b65c:	ldr	r1, [sp, #12]
   2b660:	strb	r0, [r1, #1]
   2b664:	b	2b700 <flatcc_json_parser_string_escape@@Base+0x7a4>
   2b668:	ldrh	r0, [sp, #8]
   2b66c:	movw	r1, #2047	; 0x7ff
   2b670:	cmp	r0, r1
   2b674:	bgt	2b6b0 <flatcc_json_parser_string_escape@@Base+0x754>
   2b678:	ldr	r0, [sp, #12]
   2b67c:	movw	r1, #2
   2b680:	strb	r1, [r0]
   2b684:	ldrh	r0, [sp, #8]
   2b688:	asr	r0, r0, #6
   2b68c:	orr	r0, r0, #192	; 0xc0
   2b690:	ldr	r1, [sp, #12]
   2b694:	strb	r0, [r1, #1]
   2b698:	ldrh	r0, [sp, #8]
   2b69c:	and	r0, r0, #63	; 0x3f
   2b6a0:	orr	r0, r0, #128	; 0x80
   2b6a4:	ldr	r1, [sp, #12]
   2b6a8:	strb	r0, [r1, #2]
   2b6ac:	b	2b6fc <flatcc_json_parser_string_escape@@Base+0x7a0>
   2b6b0:	ldr	r0, [sp, #12]
   2b6b4:	movw	r1, #3
   2b6b8:	strb	r1, [r0]
   2b6bc:	ldrh	r0, [sp, #8]
   2b6c0:	asr	r0, r0, #12
   2b6c4:	orr	r0, r0, #224	; 0xe0
   2b6c8:	ldr	r1, [sp, #12]
   2b6cc:	strb	r0, [r1, #1]
   2b6d0:	ldrh	r0, [sp, #8]
   2b6d4:	asr	r0, r0, #6
   2b6d8:	and	r0, r0, #63	; 0x3f
   2b6dc:	orr	r0, r0, #128	; 0x80
   2b6e0:	ldr	r1, [sp, #12]
   2b6e4:	strb	r0, [r1, #2]
   2b6e8:	ldrh	r0, [sp, #8]
   2b6ec:	and	r0, r0, #63	; 0x3f
   2b6f0:	orr	r0, r0, #128	; 0x80
   2b6f4:	ldr	r1, [sp, #12]
   2b6f8:	strb	r0, [r1, #3]
   2b6fc:	b	2b700 <flatcc_json_parser_string_escape@@Base+0x7a4>
   2b700:	ldr	r0, [fp, #-12]
   2b704:	add	r0, r0, #6
   2b708:	str	r0, [fp, #-4]
   2b70c:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b710:	ldr	r0, [sp, #12]
   2b714:	movw	r1, #1
   2b718:	strb	r1, [r0]
   2b71c:	ldr	r0, [sp, #12]
   2b720:	movw	r1, #9
   2b724:	strb	r1, [r0, #1]
   2b728:	ldr	r0, [fp, #-12]
   2b72c:	add	r0, r0, #2
   2b730:	str	r0, [fp, #-4]
   2b734:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b738:	ldr	r0, [sp, #12]
   2b73c:	movw	r1, #1
   2b740:	strb	r1, [r0]
   2b744:	ldr	r0, [sp, #12]
   2b748:	movw	r1, #10
   2b74c:	strb	r1, [r0, #1]
   2b750:	ldr	r0, [fp, #-12]
   2b754:	add	r0, r0, #2
   2b758:	str	r0, [fp, #-4]
   2b75c:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b760:	ldr	r0, [sp, #12]
   2b764:	movw	r1, #1
   2b768:	strb	r1, [r0]
   2b76c:	ldr	r0, [sp, #12]
   2b770:	movw	r1, #13
   2b774:	strb	r1, [r0, #1]
   2b778:	ldr	r0, [fp, #-12]
   2b77c:	add	r0, r0, #2
   2b780:	str	r0, [fp, #-4]
   2b784:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b788:	ldr	r0, [sp, #12]
   2b78c:	movw	r1, #1
   2b790:	strb	r1, [r0]
   2b794:	ldr	r0, [sp, #12]
   2b798:	movw	r1, #8
   2b79c:	strb	r1, [r0, #1]
   2b7a0:	ldr	r0, [fp, #-12]
   2b7a4:	add	r0, r0, #2
   2b7a8:	str	r0, [fp, #-4]
   2b7ac:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b7b0:	ldr	r0, [sp, #12]
   2b7b4:	movw	r1, #1
   2b7b8:	strb	r1, [r0]
   2b7bc:	ldr	r0, [sp, #12]
   2b7c0:	movw	r1, #12
   2b7c4:	strb	r1, [r0, #1]
   2b7c8:	ldr	r0, [fp, #-12]
   2b7cc:	add	r0, r0, #2
   2b7d0:	str	r0, [fp, #-4]
   2b7d4:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b7d8:	ldr	r0, [sp, #12]
   2b7dc:	movw	r1, #1
   2b7e0:	strb	r1, [r0]
   2b7e4:	ldr	r0, [sp, #12]
   2b7e8:	movw	r1, #34	; 0x22
   2b7ec:	strb	r1, [r0, #1]
   2b7f0:	ldr	r0, [fp, #-12]
   2b7f4:	add	r0, r0, #2
   2b7f8:	str	r0, [fp, #-4]
   2b7fc:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b800:	ldr	r0, [sp, #12]
   2b804:	movw	r1, #1
   2b808:	strb	r1, [r0]
   2b80c:	ldr	r0, [sp, #12]
   2b810:	movw	r1, #92	; 0x5c
   2b814:	strb	r1, [r0, #1]
   2b818:	ldr	r0, [fp, #-12]
   2b81c:	add	r0, r0, #2
   2b820:	str	r0, [fp, #-4]
   2b824:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b828:	ldr	r0, [sp, #12]
   2b82c:	movw	r1, #1
   2b830:	strb	r1, [r0]
   2b834:	ldr	r0, [sp, #12]
   2b838:	movw	r1, #47	; 0x2f
   2b83c:	strb	r1, [r0, #1]
   2b840:	ldr	r0, [fp, #-12]
   2b844:	add	r0, r0, #2
   2b848:	str	r0, [fp, #-4]
   2b84c:	b	2b874 <flatcc_json_parser_string_escape@@Base+0x918>
   2b850:	ldr	r0, [sp, #12]
   2b854:	movw	r1, #0
   2b858:	strb	r1, [r0]
   2b85c:	ldr	r0, [fp, #-8]
   2b860:	ldr	r1, [fp, #-12]
   2b864:	ldr	r2, [sp, #16]
   2b868:	movw	r3, #18
   2b86c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2b870:	str	r0, [fp, #-4]
   2b874:	ldr	r0, [fp, #-4]
   2b878:	mov	sp, fp
   2b87c:	pop	{fp, pc}

0002b880 <flatcc_json_parser_skip_constant@@Base>:
   2b880:	push	{fp, lr}
   2b884:	mov	fp, sp
   2b888:	sub	sp, sp, #24
   2b88c:	str	r0, [fp, #-8]
   2b890:	str	r1, [sp, #12]
   2b894:	str	r2, [sp, #8]
   2b898:	ldr	r0, [sp, #12]
   2b89c:	ldr	r1, [sp, #8]
   2b8a0:	cmp	r0, r1
   2b8a4:	beq	2b970 <flatcc_json_parser_skip_constant@@Base+0xf0>
   2b8a8:	ldr	r0, [sp, #12]
   2b8ac:	ldrb	r0, [r0]
   2b8b0:	strb	r0, [sp, #7]
   2b8b4:	ldrb	r0, [sp, #7]
   2b8b8:	and	r0, r0, #128	; 0x80
   2b8bc:	cmp	r0, #0
   2b8c0:	bne	2b8f4 <flatcc_json_parser_skip_constant@@Base+0x74>
   2b8c4:	ldrb	r0, [sp, #7]
   2b8c8:	cmp	r0, #95	; 0x5f
   2b8cc:	beq	2b8f4 <flatcc_json_parser_skip_constant@@Base+0x74>
   2b8d0:	ldrb	r0, [sp, #7]
   2b8d4:	cmp	r0, #48	; 0x30
   2b8d8:	blt	2b8e8 <flatcc_json_parser_skip_constant@@Base+0x68>
   2b8dc:	ldrb	r0, [sp, #7]
   2b8e0:	cmp	r0, #57	; 0x39
   2b8e4:	ble	2b8f4 <flatcc_json_parser_skip_constant@@Base+0x74>
   2b8e8:	ldrb	r0, [sp, #7]
   2b8ec:	cmp	r0, #46	; 0x2e
   2b8f0:	bne	2b904 <flatcc_json_parser_skip_constant@@Base+0x84>
   2b8f4:	ldr	r0, [sp, #12]
   2b8f8:	add	r0, r0, #1
   2b8fc:	str	r0, [sp, #12]
   2b900:	b	2b898 <flatcc_json_parser_skip_constant@@Base+0x18>
   2b904:	ldrb	r0, [sp, #7]
   2b908:	orr	r0, r0, #32
   2b90c:	strb	r0, [sp, #7]
   2b910:	ldrb	r0, [sp, #7]
   2b914:	cmp	r0, #97	; 0x61
   2b918:	blt	2b938 <flatcc_json_parser_skip_constant@@Base+0xb8>
   2b91c:	ldrb	r0, [sp, #7]
   2b920:	cmp	r0, #122	; 0x7a
   2b924:	bgt	2b938 <flatcc_json_parser_skip_constant@@Base+0xb8>
   2b928:	ldr	r0, [sp, #12]
   2b92c:	add	r0, r0, #1
   2b930:	str	r0, [sp, #12]
   2b934:	b	2b898 <flatcc_json_parser_skip_constant@@Base+0x18>
   2b938:	ldr	r0, [fp, #-8]
   2b93c:	ldr	r1, [sp, #12]
   2b940:	str	r1, [sp]
   2b944:	ldr	r2, [sp, #8]
   2b948:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2b94c:	str	r0, [sp, #12]
   2b950:	ldr	r0, [sp, #12]
   2b954:	ldr	r1, [sp]
   2b958:	cmp	r0, r1
   2b95c:	bne	2b96c <flatcc_json_parser_skip_constant@@Base+0xec>
   2b960:	ldr	r0, [sp, #12]
   2b964:	str	r0, [fp, #-4]
   2b968:	b	2b978 <flatcc_json_parser_skip_constant@@Base+0xf8>
   2b96c:	b	2b898 <flatcc_json_parser_skip_constant@@Base+0x18>
   2b970:	ldr	r0, [sp, #12]
   2b974:	str	r0, [fp, #-4]
   2b978:	ldr	r0, [fp, #-4]
   2b97c:	mov	sp, fp
   2b980:	pop	{fp, pc}
   2b984:	push	{fp, lr}
   2b988:	mov	fp, sp
   2b98c:	sub	sp, sp, #16
   2b990:	str	r0, [sp, #8]
   2b994:	str	r1, [sp, #4]
   2b998:	str	r2, [sp]
   2b99c:	ldr	r0, [sp]
   2b9a0:	ldr	r1, [sp, #4]
   2b9a4:	sub	r0, r0, r1
   2b9a8:	cmp	r0, #1
   2b9ac:	ble	2ba00 <flatcc_json_parser_skip_constant@@Base+0x180>
   2b9b0:	ldr	r0, [sp, #4]
   2b9b4:	ldrb	r0, [r0]
   2b9b8:	cmp	r0, #32
   2b9bc:	ble	2b9cc <flatcc_json_parser_skip_constant@@Base+0x14c>
   2b9c0:	ldr	r0, [sp, #4]
   2b9c4:	str	r0, [fp, #-4]
   2b9c8:	b	2ba14 <flatcc_json_parser_skip_constant@@Base+0x194>
   2b9cc:	ldr	r0, [sp, #4]
   2b9d0:	ldrb	r0, [r0]
   2b9d4:	cmp	r0, #32
   2b9d8:	bne	2b9fc <flatcc_json_parser_skip_constant@@Base+0x17c>
   2b9dc:	ldr	r0, [sp, #4]
   2b9e0:	ldrb	r0, [r0, #1]
   2b9e4:	cmp	r0, #32
   2b9e8:	ble	2b9fc <flatcc_json_parser_skip_constant@@Base+0x17c>
   2b9ec:	ldr	r0, [sp, #4]
   2b9f0:	add	r0, r0, #1
   2b9f4:	str	r0, [fp, #-4]
   2b9f8:	b	2ba14 <flatcc_json_parser_skip_constant@@Base+0x194>
   2b9fc:	b	2ba00 <flatcc_json_parser_skip_constant@@Base+0x180>
   2ba00:	ldr	r0, [sp, #8]
   2ba04:	ldr	r1, [sp, #4]
   2ba08:	ldr	r2, [sp]
   2ba0c:	bl	2ad78 <flatcc_json_parser_space_ext@@Base>
   2ba10:	str	r0, [fp, #-4]
   2ba14:	ldr	r0, [fp, #-4]
   2ba18:	mov	sp, fp
   2ba1c:	pop	{fp, pc}

0002ba20 <flatcc_json_parser_match_constant@@Base>:
   2ba20:	push	{fp, lr}
   2ba24:	mov	fp, sp
   2ba28:	sub	sp, sp, #40	; 0x28
   2ba2c:	ldr	ip, [fp, #8]
   2ba30:	str	r0, [fp, #-8]
   2ba34:	str	r1, [fp, #-12]
   2ba38:	str	r2, [fp, #-16]
   2ba3c:	str	r3, [sp, #20]
   2ba40:	ldr	r0, [fp, #-12]
   2ba44:	str	r0, [sp, #16]
   2ba48:	ldr	r0, [fp, #-12]
   2ba4c:	ldr	r1, [sp, #20]
   2ba50:	add	r0, r0, r1
   2ba54:	str	r0, [sp, #12]
   2ba58:	ldr	r0, [fp, #-16]
   2ba5c:	ldr	r1, [fp, #-12]
   2ba60:	sub	r0, r0, r1
   2ba64:	ldr	r1, [sp, #20]
   2ba68:	cmp	r0, r1
   2ba6c:	bgt	2ba88 <flatcc_json_parser_match_constant@@Base+0x68>
   2ba70:	ldr	r0, [fp, #8]
   2ba74:	movw	r1, #0
   2ba78:	str	r1, [r0]
   2ba7c:	ldr	r0, [fp, #-12]
   2ba80:	str	r0, [fp, #-4]
   2ba84:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2ba88:	ldr	r0, [fp, #-8]
   2ba8c:	ldr	r0, [r0, #12]
   2ba90:	cmp	r0, #0
   2ba94:	beq	2bbb8 <flatcc_json_parser_match_constant@@Base+0x198>
   2ba98:	ldr	r0, [fp, #-8]
   2ba9c:	ldr	r1, [sp, #12]
   2baa0:	ldr	r2, [fp, #-16]
   2baa4:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2baa8:	str	r0, [fp, #-12]
   2baac:	ldr	r0, [fp, #-12]
   2bab0:	ldr	r1, [fp, #-16]
   2bab4:	cmp	r0, r1
   2bab8:	bne	2bad4 <flatcc_json_parser_match_constant@@Base+0xb4>
   2babc:	ldr	r0, [fp, #8]
   2bac0:	movw	r1, #0
   2bac4:	str	r1, [r0]
   2bac8:	ldr	r0, [fp, #-12]
   2bacc:	str	r0, [fp, #-4]
   2bad0:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2bad4:	ldr	r0, [fp, #-12]
   2bad8:	ldr	r1, [sp, #12]
   2badc:	cmp	r0, r1
   2bae0:	beq	2bb64 <flatcc_json_parser_match_constant@@Base+0x144>
   2bae4:	ldr	r0, [fp, #-12]
   2bae8:	ldrb	r0, [r0]
   2baec:	strb	r0, [sp, #11]
   2baf0:	ldrb	r0, [sp, #11]
   2baf4:	cmp	r0, #95	; 0x5f
   2baf8:	beq	2bb0c <flatcc_json_parser_match_constant@@Base+0xec>
   2bafc:	ldrb	r0, [sp, #11]
   2bb00:	and	r0, r0, #128	; 0x80
   2bb04:	cmp	r0, #0
   2bb08:	beq	2bb24 <flatcc_json_parser_match_constant@@Base+0x104>
   2bb0c:	ldr	r0, [fp, #8]
   2bb10:	movw	r1, #1
   2bb14:	str	r1, [r0]
   2bb18:	ldr	r0, [fp, #-12]
   2bb1c:	str	r0, [fp, #-4]
   2bb20:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2bb24:	ldrb	r0, [sp, #11]
   2bb28:	orr	r0, r0, #32
   2bb2c:	strb	r0, [sp, #11]
   2bb30:	ldrb	r0, [sp, #11]
   2bb34:	cmp	r0, #97	; 0x61
   2bb38:	blt	2bb60 <flatcc_json_parser_match_constant@@Base+0x140>
   2bb3c:	ldrb	r0, [sp, #11]
   2bb40:	cmp	r0, #122	; 0x7a
   2bb44:	bgt	2bb60 <flatcc_json_parser_match_constant@@Base+0x140>
   2bb48:	ldr	r0, [fp, #8]
   2bb4c:	movw	r1, #1
   2bb50:	str	r1, [r0]
   2bb54:	ldr	r0, [fp, #-12]
   2bb58:	str	r0, [fp, #-4]
   2bb5c:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2bb60:	b	2bb64 <flatcc_json_parser_match_constant@@Base+0x144>
   2bb64:	ldr	r0, [fp, #8]
   2bb68:	movw	r1, #0
   2bb6c:	str	r1, [r0]
   2bb70:	ldr	r0, [fp, #-12]
   2bb74:	ldrb	r0, [r0]
   2bb78:	cmp	r0, #44	; 0x2c
   2bb7c:	beq	2bba0 <flatcc_json_parser_match_constant@@Base+0x180>
   2bb80:	ldr	r0, [fp, #-12]
   2bb84:	ldrb	r0, [r0]
   2bb88:	cmp	r0, #125	; 0x7d
   2bb8c:	beq	2bba0 <flatcc_json_parser_match_constant@@Base+0x180>
   2bb90:	ldr	r0, [fp, #-12]
   2bb94:	ldrb	r0, [r0]
   2bb98:	cmp	r0, #93	; 0x5d
   2bb9c:	bne	2bbac <flatcc_json_parser_match_constant@@Base+0x18c>
   2bba0:	ldr	r0, [fp, #-12]
   2bba4:	str	r0, [fp, #-4]
   2bba8:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2bbac:	ldr	r0, [sp, #16]
   2bbb0:	str	r0, [fp, #-4]
   2bbb4:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2bbb8:	ldr	r0, [sp, #12]
   2bbbc:	str	r0, [fp, #-12]
   2bbc0:	ldr	r0, [fp, #-12]
   2bbc4:	ldrb	r0, [r0]
   2bbc8:	cmp	r0, #32
   2bbcc:	bne	2bc7c <flatcc_json_parser_match_constant@@Base+0x25c>
   2bbd0:	ldr	r0, [fp, #-12]
   2bbd4:	add	r0, r0, #1
   2bbd8:	str	r0, [fp, #-12]
   2bbdc:	ldr	r0, [fp, #-12]
   2bbe0:	ldr	r1, [fp, #-16]
   2bbe4:	cmp	r0, r1
   2bbe8:	movw	r0, #0
   2bbec:	str	r0, [sp, #4]
   2bbf0:	beq	2bc0c <flatcc_json_parser_match_constant@@Base+0x1ec>
   2bbf4:	ldr	r0, [fp, #-12]
   2bbf8:	ldrb	r0, [r0]
   2bbfc:	cmp	r0, #32
   2bc00:	movw	r0, #0
   2bc04:	moveq	r0, #1
   2bc08:	str	r0, [sp, #4]
   2bc0c:	ldr	r0, [sp, #4]
   2bc10:	tst	r0, #1
   2bc14:	beq	2bc28 <flatcc_json_parser_match_constant@@Base+0x208>
   2bc18:	ldr	r0, [fp, #-12]
   2bc1c:	add	r0, r0, #1
   2bc20:	str	r0, [fp, #-12]
   2bc24:	b	2bbdc <flatcc_json_parser_match_constant@@Base+0x1bc>
   2bc28:	ldr	r0, [fp, #-12]
   2bc2c:	ldr	r1, [fp, #-16]
   2bc30:	cmp	r0, r1
   2bc34:	bne	2bc50 <flatcc_json_parser_match_constant@@Base+0x230>
   2bc38:	ldr	r0, [fp, #8]
   2bc3c:	movw	r1, #0
   2bc40:	str	r1, [r0]
   2bc44:	ldr	r0, [fp, #-12]
   2bc48:	str	r0, [fp, #-4]
   2bc4c:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2bc50:	ldr	r0, [fp, #-12]
   2bc54:	ldrb	r0, [r0]
   2bc58:	cmp	r0, #34	; 0x22
   2bc5c:	beq	2bc78 <flatcc_json_parser_match_constant@@Base+0x258>
   2bc60:	ldr	r0, [fp, #8]
   2bc64:	movw	r1, #1
   2bc68:	str	r1, [r0]
   2bc6c:	ldr	r0, [fp, #-12]
   2bc70:	str	r0, [fp, #-4]
   2bc74:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2bc78:	b	2bc7c <flatcc_json_parser_match_constant@@Base+0x25c>
   2bc7c:	ldr	r0, [fp, #-12]
   2bc80:	ldrb	r0, [r0]
   2bc84:	mov	r1, r0
   2bc88:	cmp	r0, #34	; 0x22
   2bc8c:	str	r1, [sp]
   2bc90:	beq	2bcd0 <flatcc_json_parser_match_constant@@Base+0x2b0>
   2bc94:	b	2bc98 <flatcc_json_parser_match_constant@@Base+0x278>
   2bc98:	ldr	r0, [sp]
   2bc9c:	cmp	r0, #92	; 0x5c
   2bca0:	bne	2bd00 <flatcc_json_parser_match_constant@@Base+0x2e0>
   2bca4:	b	2bca8 <flatcc_json_parser_match_constant@@Base+0x288>
   2bca8:	ldr	r0, [fp, #8]
   2bcac:	movw	r1, #0
   2bcb0:	str	r1, [r0]
   2bcb4:	ldr	r0, [fp, #-8]
   2bcb8:	ldr	r1, [fp, #-12]
   2bcbc:	ldr	r2, [fp, #-16]
   2bcc0:	movw	r3, #18
   2bcc4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2bcc8:	str	r0, [fp, #-4]
   2bccc:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2bcd0:	ldr	r0, [fp, #-8]
   2bcd4:	ldr	r1, [fp, #-12]
   2bcd8:	add	r1, r1, #1
   2bcdc:	movw	r2, #0
   2bce0:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2bce4:	str	r0, [fp, #-12]
   2bce8:	ldr	r0, [fp, #8]
   2bcec:	movw	r1, #0
   2bcf0:	str	r1, [r0]
   2bcf4:	ldr	r0, [fp, #-12]
   2bcf8:	str	r0, [fp, #-4]
   2bcfc:	b	2bd14 <flatcc_json_parser_match_constant@@Base+0x2f4>
   2bd00:	ldr	r0, [fp, #8]
   2bd04:	movw	r1, #0
   2bd08:	str	r1, [r0]
   2bd0c:	ldr	r0, [sp, #16]
   2bd10:	str	r0, [fp, #-4]
   2bd14:	ldr	r0, [fp, #-4]
   2bd18:	mov	sp, fp
   2bd1c:	pop	{fp, pc}

0002bd20 <flatcc_json_parser_unmatched_symbol@@Base>:
   2bd20:	push	{fp, lr}
   2bd24:	mov	fp, sp
   2bd28:	sub	sp, sp, #16
   2bd2c:	str	r0, [sp, #8]
   2bd30:	str	r1, [sp, #4]
   2bd34:	str	r2, [sp]
   2bd38:	ldr	r0, [sp, #8]
   2bd3c:	ldr	r0, [r0, #8]
   2bd40:	and	r0, r0, #1
   2bd44:	cmp	r0, #0
   2bd48:	beq	2bdec <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   2bd4c:	ldr	r0, [sp, #8]
   2bd50:	ldr	r1, [sp, #4]
   2bd54:	ldr	r2, [sp]
   2bd58:	bl	2be10 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   2bd5c:	str	r0, [sp, #4]
   2bd60:	ldr	r0, [sp, #8]
   2bd64:	ldr	r1, [sp, #4]
   2bd68:	ldr	r2, [sp]
   2bd6c:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2bd70:	str	r0, [sp, #4]
   2bd74:	ldr	r0, [sp, #4]
   2bd78:	ldr	r1, [sp]
   2bd7c:	cmp	r0, r1
   2bd80:	beq	2bdb8 <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   2bd84:	ldr	r0, [sp, #4]
   2bd88:	ldrb	r0, [r0]
   2bd8c:	cmp	r0, #58	; 0x3a
   2bd90:	bne	2bdb8 <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   2bd94:	ldr	r0, [sp, #4]
   2bd98:	add	r0, r0, #1
   2bd9c:	str	r0, [sp, #4]
   2bda0:	ldr	r0, [sp, #8]
   2bda4:	ldr	r1, [sp, #4]
   2bda8:	ldr	r2, [sp]
   2bdac:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2bdb0:	str	r0, [sp, #4]
   2bdb4:	b	2bdd4 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   2bdb8:	ldr	r0, [sp, #8]
   2bdbc:	ldr	r1, [sp, #4]
   2bdc0:	ldr	r2, [sp]
   2bdc4:	movw	r3, #4
   2bdc8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2bdcc:	str	r0, [fp, #-4]
   2bdd0:	b	2be04 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   2bdd4:	ldr	r0, [sp, #8]
   2bdd8:	ldr	r1, [sp, #4]
   2bddc:	ldr	r2, [sp]
   2bde0:	bl	2c024 <flatcc_json_parser_generic_json@@Base>
   2bde4:	str	r0, [fp, #-4]
   2bde8:	b	2be04 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   2bdec:	ldr	r0, [sp, #8]
   2bdf0:	ldr	r1, [sp, #4]
   2bdf4:	ldr	r2, [sp]
   2bdf8:	movw	r3, #13
   2bdfc:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2be00:	str	r0, [fp, #-4]
   2be04:	ldr	r0, [fp, #-4]
   2be08:	mov	sp, fp
   2be0c:	pop	{fp, pc}
   2be10:	push	{fp, lr}
   2be14:	mov	fp, sp
   2be18:	sub	sp, sp, #32
   2be1c:	str	r0, [fp, #-8]
   2be20:	str	r1, [fp, #-12]
   2be24:	str	r2, [sp, #16]
   2be28:	movw	r0, #0
   2be2c:	strb	r0, [sp, #14]
   2be30:	ldr	r0, [fp, #-8]
   2be34:	ldr	r0, [r0, #12]
   2be38:	cmp	r0, #0
   2be3c:	beq	2bf44 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   2be40:	b	2be44 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   2be44:	ldr	r0, [fp, #-12]
   2be48:	ldr	r1, [sp, #16]
   2be4c:	cmp	r0, r1
   2be50:	movw	r0, #0
   2be54:	str	r0, [sp, #8]
   2be58:	beq	2be74 <flatcc_json_parser_unmatched_symbol@@Base+0x154>
   2be5c:	ldr	r0, [fp, #-12]
   2be60:	ldrb	r0, [r0]
   2be64:	cmp	r0, #32
   2be68:	movw	r0, #0
   2be6c:	movgt	r0, #1
   2be70:	str	r0, [sp, #8]
   2be74:	ldr	r0, [sp, #8]
   2be78:	tst	r0, #1
   2be7c:	beq	2bf18 <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   2be80:	ldr	r0, [fp, #-12]
   2be84:	ldrb	r0, [r0]
   2be88:	strb	r0, [sp, #15]
   2be8c:	strb	r0, [sp, #14]
   2be90:	ldrb	r0, [sp, #15]
   2be94:	cmp	r0, #95	; 0x5f
   2be98:	beq	2bed0 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   2be9c:	ldrb	r0, [sp, #15]
   2bea0:	cmp	r0, #46	; 0x2e
   2bea4:	beq	2bed0 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   2bea8:	ldrb	r0, [sp, #15]
   2beac:	and	r0, r0, #128	; 0x80
   2beb0:	cmp	r0, #0
   2beb4:	bne	2bed0 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   2beb8:	ldrb	r0, [sp, #15]
   2bebc:	cmp	r0, #48	; 0x30
   2bec0:	blt	2bee0 <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   2bec4:	ldrb	r0, [sp, #15]
   2bec8:	cmp	r0, #57	; 0x39
   2becc:	bgt	2bee0 <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   2bed0:	ldr	r0, [fp, #-12]
   2bed4:	add	r0, r0, #1
   2bed8:	str	r0, [fp, #-12]
   2bedc:	b	2be44 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   2bee0:	ldrb	r0, [sp, #15]
   2bee4:	orr	r0, r0, #32
   2bee8:	strb	r0, [sp, #15]
   2beec:	ldrb	r0, [sp, #15]
   2bef0:	cmp	r0, #97	; 0x61
   2bef4:	blt	2bf14 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   2bef8:	ldrb	r0, [sp, #15]
   2befc:	cmp	r0, #122	; 0x7a
   2bf00:	bgt	2bf14 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   2bf04:	ldr	r0, [fp, #-12]
   2bf08:	add	r0, r0, #1
   2bf0c:	str	r0, [fp, #-12]
   2bf10:	b	2be44 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   2bf14:	b	2bf18 <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   2bf18:	ldrb	r0, [sp, #14]
   2bf1c:	cmp	r0, #46	; 0x2e
   2bf20:	bne	2bf40 <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   2bf24:	ldr	r0, [fp, #-8]
   2bf28:	ldr	r1, [fp, #-12]
   2bf2c:	ldr	r2, [sp, #16]
   2bf30:	movw	r3, #5
   2bf34:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2bf38:	str	r0, [fp, #-4]
   2bf3c:	b	2c018 <flatcc_json_parser_unmatched_symbol@@Base+0x2f8>
   2bf40:	b	2c010 <flatcc_json_parser_unmatched_symbol@@Base+0x2f0>
   2bf44:	b	2bf48 <flatcc_json_parser_unmatched_symbol@@Base+0x228>
   2bf48:	ldr	r0, [fp, #-12]
   2bf4c:	ldr	r1, [sp, #16]
   2bf50:	cmp	r0, r1
   2bf54:	movw	r0, #0
   2bf58:	str	r0, [sp, #4]
   2bf5c:	beq	2bf78 <flatcc_json_parser_unmatched_symbol@@Base+0x258>
   2bf60:	ldr	r0, [fp, #-12]
   2bf64:	ldrb	r0, [r0]
   2bf68:	cmp	r0, #34	; 0x22
   2bf6c:	movw	r0, #0
   2bf70:	movne	r0, #1
   2bf74:	str	r0, [sp, #4]
   2bf78:	ldr	r0, [sp, #4]
   2bf7c:	tst	r0, #1
   2bf80:	beq	2bfc8 <flatcc_json_parser_unmatched_symbol@@Base+0x2a8>
   2bf84:	ldr	r0, [fp, #-12]
   2bf88:	ldrb	r0, [r0]
   2bf8c:	cmp	r0, #92	; 0x5c
   2bf90:	bne	2bfb8 <flatcc_json_parser_unmatched_symbol@@Base+0x298>
   2bf94:	ldr	r0, [sp, #16]
   2bf98:	ldr	r1, [fp, #-12]
   2bf9c:	sub	r0, r0, r1
   2bfa0:	cmp	r0, #2
   2bfa4:	bge	2bfac <flatcc_json_parser_unmatched_symbol@@Base+0x28c>
   2bfa8:	b	2bfc8 <flatcc_json_parser_unmatched_symbol@@Base+0x2a8>
   2bfac:	ldr	r0, [fp, #-12]
   2bfb0:	add	r0, r0, #1
   2bfb4:	str	r0, [fp, #-12]
   2bfb8:	ldr	r0, [fp, #-12]
   2bfbc:	add	r0, r0, #1
   2bfc0:	str	r0, [fp, #-12]
   2bfc4:	b	2bf48 <flatcc_json_parser_unmatched_symbol@@Base+0x228>
   2bfc8:	ldr	r0, [fp, #-12]
   2bfcc:	ldr	r1, [sp, #16]
   2bfd0:	cmp	r0, r1
   2bfd4:	beq	2bfe8 <flatcc_json_parser_unmatched_symbol@@Base+0x2c8>
   2bfd8:	ldr	r0, [fp, #-12]
   2bfdc:	ldrb	r0, [r0]
   2bfe0:	cmp	r0, #34	; 0x22
   2bfe4:	beq	2c004 <flatcc_json_parser_unmatched_symbol@@Base+0x2e4>
   2bfe8:	ldr	r0, [fp, #-8]
   2bfec:	ldr	r1, [fp, #-12]
   2bff0:	ldr	r2, [sp, #16]
   2bff4:	movw	r3, #20
   2bff8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2bffc:	str	r0, [fp, #-4]
   2c000:	b	2c018 <flatcc_json_parser_unmatched_symbol@@Base+0x2f8>
   2c004:	ldr	r0, [fp, #-12]
   2c008:	add	r0, r0, #1
   2c00c:	str	r0, [fp, #-12]
   2c010:	ldr	r0, [fp, #-12]
   2c014:	str	r0, [fp, #-4]
   2c018:	ldr	r0, [fp, #-4]
   2c01c:	mov	sp, fp
   2c020:	pop	{fp, pc}

0002c024 <flatcc_json_parser_generic_json@@Base>:
   2c024:	push	{r4, r5, fp, lr}
   2c028:	add	fp, sp, #8
   2c02c:	sub	sp, sp, #560	; 0x230
   2c030:	add	r3, sp, #32
   2c034:	str	r0, [fp, #-16]
   2c038:	str	r1, [fp, #-20]	; 0xffffffec
   2c03c:	str	r2, [fp, #-24]	; 0xffffffe8
   2c040:	movw	r0, #0
   2c044:	str	r0, [sp, #12]
   2c048:	str	r3, [sp, #28]
   2c04c:	ldr	r0, [sp, #28]
   2c050:	add	r0, r0, #512	; 0x200
   2c054:	str	r0, [sp, #24]
   2c058:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c05c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c060:	cmp	r0, r1
   2c064:	bne	2c074 <flatcc_json_parser_generic_json@@Base+0x50>
   2c068:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c06c:	str	r0, [fp, #-12]
   2c070:	b	2c610 <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c074:	add	r0, sp, #32
   2c078:	ldr	r1, [sp, #28]
   2c07c:	cmp	r1, r0
   2c080:	beq	2c148 <flatcc_json_parser_generic_json@@Base+0x124>
   2c084:	ldr	r0, [sp, #28]
   2c088:	mvn	r1, #0
   2c08c:	add	r0, r0, r1
   2c090:	ldrb	r0, [r0]
   2c094:	cmp	r0, #125	; 0x7d
   2c098:	bne	2c148 <flatcc_json_parser_generic_json@@Base+0x124>
   2c09c:	ldr	r0, [fp, #-16]
   2c0a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c0a8:	bl	2ca34 <flatcc_json_parser_float@@Base+0x254>
   2c0ac:	str	r0, [fp, #-20]	; 0xffffffec
   2c0b0:	ldr	r0, [fp, #-16]
   2c0b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c0bc:	bl	2be10 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   2c0c0:	str	r0, [fp, #-20]	; 0xffffffec
   2c0c4:	ldr	r0, [fp, #-16]
   2c0c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c0d0:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2c0d4:	str	r0, [fp, #-20]	; 0xffffffec
   2c0d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c0dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c0e0:	cmp	r0, r1
   2c0e4:	bne	2c104 <flatcc_json_parser_generic_json@@Base+0xe0>
   2c0e8:	ldr	r0, [fp, #-16]
   2c0ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c0f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c0f4:	movw	r3, #10
   2c0f8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c0fc:	str	r0, [fp, #-12]
   2c100:	b	2c610 <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c104:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c108:	ldrb	r0, [r0]
   2c10c:	cmp	r0, #58	; 0x3a
   2c110:	beq	2c130 <flatcc_json_parser_generic_json@@Base+0x10c>
   2c114:	ldr	r0, [fp, #-16]
   2c118:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c11c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c120:	movw	r3, #4
   2c124:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c128:	str	r0, [fp, #-12]
   2c12c:	b	2c610 <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c130:	ldr	r0, [fp, #-16]
   2c134:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c138:	add	r1, r1, #1
   2c13c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c140:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2c144:	str	r0, [fp, #-20]	; 0xffffffec
   2c148:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c14c:	ldrb	r0, [r0]
   2c150:	sub	r0, r0, #34	; 0x22
   2c154:	cmp	r0, #89	; 0x59
   2c158:	str	r0, [sp, #8]
   2c15c:	bhi	2c4ac <flatcc_json_parser_generic_json@@Base+0x488>
   2c160:	add	r0, pc, #8
   2c164:	ldr	r1, [sp, #8]
   2c168:	ldr	r2, [r0, r1, lsl #2]
   2c16c:	add	pc, r0, r2
   2c170:	andeq	r0, r0, r8, ror #2
   2c174:	andeq	r0, r0, ip, lsr r3
   2c178:	andeq	r0, r0, ip, lsr r3
   2c17c:	andeq	r0, r0, ip, lsr r3
   2c180:	andeq	r0, r0, ip, lsr r3
   2c184:	andeq	r0, r0, ip, lsr r3
   2c188:	andeq	r0, r0, ip, lsr r3
   2c18c:	andeq	r0, r0, ip, lsr r3
   2c190:	andeq	r0, r0, ip, lsr r3
   2c194:	andeq	r0, r0, ip, lsr r3
   2c198:	andeq	r0, r0, ip, lsr r3
   2c19c:	andeq	r0, r0, r4, lsr #4
   2c1a0:	andeq	r0, r0, ip, lsr r3
   2c1a4:	andeq	r0, r0, ip, lsr r3
   2c1a8:	andeq	r0, r0, r4, lsr #4
   2c1ac:	andeq	r0, r0, r4, lsr #4
   2c1b0:	andeq	r0, r0, r4, lsr #4
   2c1b4:	andeq	r0, r0, r4, lsr #4
   2c1b8:	andeq	r0, r0, r4, lsr #4
   2c1bc:	andeq	r0, r0, r4, lsr #4
   2c1c0:	andeq	r0, r0, r4, lsr #4
   2c1c4:	andeq	r0, r0, r4, lsr #4
   2c1c8:	andeq	r0, r0, r4, lsr #4
   2c1cc:	andeq	r0, r0, r4, lsr #4
   2c1d0:	andeq	r0, r0, ip, lsr r3
   2c1d4:	andeq	r0, r0, ip, lsr r3
   2c1d8:	andeq	r0, r0, ip, lsr r3
   2c1dc:	andeq	r0, r0, ip, lsr r3
   2c1e0:	andeq	r0, r0, ip, lsr r3
   2c1e4:	andeq	r0, r0, ip, lsr r3
   2c1e8:	andeq	r0, r0, ip, lsr r3
   2c1ec:	andeq	r0, r0, ip, lsr r3
   2c1f0:	andeq	r0, r0, ip, lsr r3
   2c1f4:	andeq	r0, r0, ip, lsr r3
   2c1f8:	andeq	r0, r0, ip, lsr r3
   2c1fc:	andeq	r0, r0, ip, lsr r3
   2c200:	andeq	r0, r0, ip, lsr r3
   2c204:	andeq	r0, r0, ip, lsr r3
   2c208:	andeq	r0, r0, ip, lsr r3
   2c20c:	andeq	r0, r0, ip, lsr r3
   2c210:	andeq	r0, r0, ip, lsr r3
   2c214:	andeq	r0, r0, ip, lsr r3
   2c218:	andeq	r0, r0, ip, lsr r3
   2c21c:	andeq	r0, r0, ip, lsr r3
   2c220:	andeq	r0, r0, ip, lsr r3
   2c224:	andeq	r0, r0, ip, lsr r3
   2c228:	andeq	r0, r0, ip, lsr r3
   2c22c:	andeq	r0, r0, ip, lsr r3
   2c230:	andeq	r0, r0, ip, lsr r3
   2c234:	andeq	r0, r0, ip, lsr r3
   2c238:	andeq	r0, r0, ip, lsr r3
   2c23c:	andeq	r0, r0, ip, lsr r3
   2c240:	andeq	r0, r0, ip, lsr r3
   2c244:	andeq	r0, r0, ip, lsr r3
   2c248:	andeq	r0, r0, ip, lsr r3
   2c24c:	andeq	r0, r0, ip, lsr r3
   2c250:	andeq	r0, r0, ip, lsr r3
   2c254:	andeq	r0, r0, ip, lsr r2
   2c258:	andeq	r0, r0, ip, lsr r3
   2c25c:	andeq	r0, r0, ip, lsr r3
   2c260:	andeq	r0, r0, ip, lsr r3
   2c264:	andeq	r0, r0, ip, lsr r3
   2c268:	andeq	r0, r0, ip, lsr r3
   2c26c:	andeq	r0, r0, ip, lsr r3
   2c270:	andeq	r0, r0, ip, lsr r3
   2c274:	andeq	r0, r0, ip, lsr r3
   2c278:	andeq	r0, r0, ip, lsr r3
   2c27c:	andeq	r0, r0, ip, lsr r3
   2c280:	andeq	r0, r0, ip, lsr r3
   2c284:	andeq	r0, r0, ip, lsr r3
   2c288:	andeq	r0, r0, ip, lsr r3
   2c28c:	andeq	r0, r0, ip, lsr r3
   2c290:	andeq	r0, r0, ip, lsr r3
   2c294:	andeq	r0, r0, ip, lsr r3
   2c298:	andeq	r0, r0, ip, lsr r3
   2c29c:	andeq	r0, r0, ip, lsr r3
   2c2a0:	andeq	r0, r0, ip, lsr r3
   2c2a4:	andeq	r0, r0, ip, lsr r3
   2c2a8:	andeq	r0, r0, ip, lsr r3
   2c2ac:	andeq	r0, r0, ip, lsr r3
   2c2b0:	andeq	r0, r0, ip, lsr r3
   2c2b4:	andeq	r0, r0, ip, lsr r3
   2c2b8:	andeq	r0, r0, ip, lsr r3
   2c2bc:	andeq	r0, r0, ip, lsr r3
   2c2c0:	andeq	r0, r0, ip, lsr r3
   2c2c4:	andeq	r0, r0, ip, lsr r3
   2c2c8:	andeq	r0, r0, ip, lsr r3
   2c2cc:	andeq	r0, r0, ip, lsr r3
   2c2d0:	andeq	r0, r0, ip, lsr r3
   2c2d4:			; <UNDEFINED> instruction: 0x000002bc
   2c2d8:	ldr	r0, [fp, #-16]
   2c2dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c2e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c2e4:	bl	2cae0 <flatcc_json_parser_float@@Base+0x300>
   2c2e8:	str	r0, [fp, #-20]	; 0xffffffec
   2c2ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c2f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c2f4:	cmp	r0, r1
   2c2f8:	movw	r0, #0
   2c2fc:	str	r0, [sp, #4]
   2c300:	beq	2c31c <flatcc_json_parser_generic_json@@Base+0x2f8>
   2c304:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c308:	ldrb	r0, [r0]
   2c30c:	cmp	r0, #34	; 0x22
   2c310:	movw	r0, #0
   2c314:	movne	r0, #1
   2c318:	str	r0, [sp, #4]
   2c31c:	ldr	r0, [sp, #4]
   2c320:	tst	r0, #1
   2c324:	beq	2c37c <flatcc_json_parser_generic_json@@Base+0x358>
   2c328:	ldr	r0, [fp, #-16]
   2c32c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c330:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c334:	bl	2ac5c <flatcc_json_parser_string_part@@Base>
   2c338:	str	r0, [fp, #-20]	; 0xffffffec
   2c33c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c344:	cmp	r0, r1
   2c348:	beq	2c360 <flatcc_json_parser_generic_json@@Base+0x33c>
   2c34c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c350:	ldrb	r0, [r0]
   2c354:	cmp	r0, #34	; 0x22
   2c358:	bne	2c360 <flatcc_json_parser_generic_json@@Base+0x33c>
   2c35c:	b	2c37c <flatcc_json_parser_generic_json@@Base+0x358>
   2c360:	add	r3, sp, #16
   2c364:	ldr	r0, [fp, #-16]
   2c368:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c36c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c370:	bl	2af5c <flatcc_json_parser_string_escape@@Base>
   2c374:	str	r0, [fp, #-20]	; 0xffffffec
   2c378:	b	2c2ec <flatcc_json_parser_generic_json@@Base+0x2c8>
   2c37c:	ldr	r0, [fp, #-16]
   2c380:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c384:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c388:	bl	2cb50 <flatcc_json_parser_float@@Base+0x370>
   2c38c:	str	r0, [fp, #-20]	; 0xffffffec
   2c390:	b	2c4f4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c394:	ldr	r0, [fp, #-16]
   2c398:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c39c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c3a0:	bl	2cbc0 <flatcc_json_parser_float@@Base+0x3e0>
   2c3a4:	str	r0, [fp, #-20]	; 0xffffffec
   2c3a8:	b	2c4f4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c3ac:	ldr	r0, [sp, #28]
   2c3b0:	ldr	r1, [sp, #24]
   2c3b4:	cmp	r0, r1
   2c3b8:	bne	2c3d8 <flatcc_json_parser_generic_json@@Base+0x3b4>
   2c3bc:	ldr	r0, [fp, #-16]
   2c3c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c3c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c3c8:	movw	r3, #2
   2c3cc:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c3d0:	str	r0, [fp, #-12]
   2c3d4:	b	2c610 <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c3d8:	ldr	r0, [sp, #28]
   2c3dc:	add	r1, r0, #1
   2c3e0:	str	r1, [sp, #28]
   2c3e4:	movw	r1, #93	; 0x5d
   2c3e8:	strb	r1, [r0]
   2c3ec:	ldr	r0, [fp, #-16]
   2c3f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c3f4:	add	r1, r1, #1
   2c3f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c3fc:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2c400:	str	r0, [fp, #-20]	; 0xffffffec
   2c404:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c408:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c40c:	cmp	r0, r1
   2c410:	beq	2c428 <flatcc_json_parser_generic_json@@Base+0x404>
   2c414:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c418:	ldrb	r0, [r0]
   2c41c:	cmp	r0, #93	; 0x5d
   2c420:	bne	2c428 <flatcc_json_parser_generic_json@@Base+0x404>
   2c424:	b	2c4f4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c428:	b	2c058 <flatcc_json_parser_generic_json@@Base+0x34>
   2c42c:	ldr	r0, [sp, #28]
   2c430:	ldr	r1, [sp, #24]
   2c434:	cmp	r0, r1
   2c438:	bne	2c458 <flatcc_json_parser_generic_json@@Base+0x434>
   2c43c:	ldr	r0, [fp, #-16]
   2c440:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c444:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c448:	movw	r3, #2
   2c44c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c450:	str	r0, [fp, #-12]
   2c454:	b	2c610 <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c458:	ldr	r0, [sp, #28]
   2c45c:	add	r1, r0, #1
   2c460:	str	r1, [sp, #28]
   2c464:	movw	r1, #125	; 0x7d
   2c468:	strb	r1, [r0]
   2c46c:	ldr	r0, [fp, #-16]
   2c470:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c474:	add	r1, r1, #1
   2c478:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c47c:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2c480:	str	r0, [fp, #-20]	; 0xffffffec
   2c484:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c48c:	cmp	r0, r1
   2c490:	beq	2c4a8 <flatcc_json_parser_generic_json@@Base+0x484>
   2c494:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c498:	ldrb	r0, [r0]
   2c49c:	cmp	r0, #125	; 0x7d
   2c4a0:	bne	2c4a8 <flatcc_json_parser_generic_json@@Base+0x484>
   2c4a4:	b	2c4f4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c4a8:	b	2c058 <flatcc_json_parser_generic_json@@Base+0x34>
   2c4ac:	ldr	r0, [fp, #-16]
   2c4b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c4b4:	str	r1, [sp, #20]
   2c4b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c4bc:	bl	2b880 <flatcc_json_parser_skip_constant@@Base>
   2c4c0:	str	r0, [fp, #-20]	; 0xffffffec
   2c4c4:	ldr	r0, [sp, #20]
   2c4c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c4cc:	cmp	r0, r1
   2c4d0:	bne	2c4f0 <flatcc_json_parser_generic_json@@Base+0x4cc>
   2c4d4:	ldr	r0, [fp, #-16]
   2c4d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c4dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c4e0:	movw	r3, #5
   2c4e4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c4e8:	str	r0, [fp, #-12]
   2c4ec:	b	2c610 <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c4f0:	b	2c4f4 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c4f4:	b	2c4f8 <flatcc_json_parser_generic_json@@Base+0x4d4>
   2c4f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c4fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c500:	cmp	r0, r1
   2c504:	movw	r0, #0
   2c508:	str	r0, [sp]
   2c50c:	beq	2c528 <flatcc_json_parser_generic_json@@Base+0x504>
   2c510:	add	r0, sp, #32
   2c514:	ldr	r1, [sp, #28]
   2c518:	cmp	r1, r0
   2c51c:	movw	r0, #0
   2c520:	movne	r0, #1
   2c524:	str	r0, [sp]
   2c528:	ldr	r0, [sp]
   2c52c:	tst	r0, #1
   2c530:	beq	2c5a8 <flatcc_json_parser_generic_json@@Base+0x584>
   2c534:	ldr	r0, [sp, #28]
   2c538:	mvn	r1, #0
   2c53c:	add	r0, r0, r1
   2c540:	str	r0, [sp, #28]
   2c544:	ldr	r0, [sp, #28]
   2c548:	ldrb	r0, [r0]
   2c54c:	cmp	r0, #93	; 0x5d
   2c550:	bne	2c570 <flatcc_json_parser_generic_json@@Base+0x54c>
   2c554:	ldr	r0, [fp, #-16]
   2c558:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c55c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c560:	add	r3, sp, #12
   2c564:	bl	2d004 <flatcc_json_parser_float@@Base+0x824>
   2c568:	str	r0, [fp, #-20]	; 0xffffffec
   2c56c:	b	2c588 <flatcc_json_parser_generic_json@@Base+0x564>
   2c570:	ldr	r0, [fp, #-16]
   2c574:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c578:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c57c:	add	r3, sp, #12
   2c580:	bl	2d168 <flatcc_json_parser_float@@Base+0x988>
   2c584:	str	r0, [fp, #-20]	; 0xffffffec
   2c588:	ldr	r0, [sp, #12]
   2c58c:	cmp	r0, #0
   2c590:	beq	2c5a4 <flatcc_json_parser_generic_json@@Base+0x580>
   2c594:	ldr	r0, [sp, #28]
   2c598:	add	r0, r0, #1
   2c59c:	str	r0, [sp, #28]
   2c5a0:	b	2c058 <flatcc_json_parser_generic_json@@Base+0x34>
   2c5a4:	b	2c4f8 <flatcc_json_parser_generic_json@@Base+0x4d4>
   2c5a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c5ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c5b0:	cmp	r0, r1
   2c5b4:	bne	2c608 <flatcc_json_parser_generic_json@@Base+0x5e4>
   2c5b8:	add	r0, sp, #32
   2c5bc:	ldr	r1, [sp, #28]
   2c5c0:	cmp	r1, r0
   2c5c4:	beq	2c608 <flatcc_json_parser_generic_json@@Base+0x5e4>
   2c5c8:	ldr	r0, [fp, #-16]
   2c5cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c5d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c5d4:	ldr	r3, [sp, #28]
   2c5d8:	mvn	ip, #0
   2c5dc:	add	r3, r3, ip
   2c5e0:	ldrb	r3, [r3]
   2c5e4:	cmp	r3, #93	; 0x5d
   2c5e8:	movw	r3, #0
   2c5ec:	moveq	r3, #1
   2c5f0:	tst	r3, #1
   2c5f4:	movw	r3, #9
   2c5f8:	moveq	r3, #10
   2c5fc:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c600:	str	r0, [fp, #-12]
   2c604:	b	2c610 <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c608:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c60c:	str	r0, [fp, #-12]
   2c610:	ldr	r0, [fp, #-12]
   2c614:	sub	sp, fp, #8
   2c618:	pop	{r4, r5, fp, pc}
   2c61c:	nop	{0}

0002c620 <flatcc_json_parser_double@@Base>:
   2c620:	push	{fp, lr}
   2c624:	mov	fp, sp
   2c628:	sub	sp, sp, #32
   2c62c:	vldr	d16, [pc, #372]	; 2c7a8 <flatcc_json_parser_double@@Base+0x188>
   2c630:	str	r0, [fp, #-8]
   2c634:	str	r1, [fp, #-12]
   2c638:	str	r2, [sp, #16]
   2c63c:	str	r3, [sp, #12]
   2c640:	ldr	r0, [sp, #12]
   2c644:	vstr	d16, [r0]
   2c648:	ldr	r0, [fp, #-12]
   2c64c:	ldr	r1, [sp, #16]
   2c650:	cmp	r0, r1
   2c654:	bne	2c664 <flatcc_json_parser_double@@Base+0x44>
   2c658:	ldr	r0, [fp, #-12]
   2c65c:	str	r0, [fp, #-4]
   2c660:	b	2c798 <flatcc_json_parser_double@@Base+0x178>
   2c664:	ldr	r0, [fp, #-12]
   2c668:	str	r0, [sp, #4]
   2c66c:	ldr	r0, [fp, #-12]
   2c670:	ldrb	r0, [r0]
   2c674:	cmp	r0, #45	; 0x2d
   2c678:	bne	2c688 <flatcc_json_parser_double@@Base+0x68>
   2c67c:	ldr	r0, [sp, #4]
   2c680:	add	r0, r0, #1
   2c684:	str	r0, [sp, #4]
   2c688:	ldr	r0, [sp, #16]
   2c68c:	ldr	r1, [sp, #4]
   2c690:	sub	r0, r0, r1
   2c694:	cmp	r0, #1
   2c698:	ble	2c6e8 <flatcc_json_parser_double@@Base+0xc8>
   2c69c:	ldr	r0, [sp, #4]
   2c6a0:	ldrb	r0, [r0]
   2c6a4:	cmp	r0, #46	; 0x2e
   2c6a8:	beq	2c6cc <flatcc_json_parser_double@@Base+0xac>
   2c6ac:	ldr	r0, [sp, #4]
   2c6b0:	ldrb	r0, [r0]
   2c6b4:	cmp	r0, #48	; 0x30
   2c6b8:	bne	2c6e8 <flatcc_json_parser_double@@Base+0xc8>
   2c6bc:	ldr	r0, [sp, #4]
   2c6c0:	ldrb	r0, [r0, #1]
   2c6c4:	cmp	r0, #48	; 0x30
   2c6c8:	bne	2c6e8 <flatcc_json_parser_double@@Base+0xc8>
   2c6cc:	ldr	r0, [fp, #-8]
   2c6d0:	ldr	r1, [fp, #-12]
   2c6d4:	ldr	r2, [sp, #16]
   2c6d8:	movw	r3, #6
   2c6dc:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c6e0:	str	r0, [fp, #-4]
   2c6e4:	b	2c798 <flatcc_json_parser_double@@Base+0x178>
   2c6e8:	ldr	r0, [fp, #-12]
   2c6ec:	ldr	r1, [sp, #16]
   2c6f0:	ldr	r2, [fp, #-12]
   2c6f4:	sub	r1, r1, r2
   2c6f8:	ldr	r2, [sp, #12]
   2c6fc:	bl	2c7b0 <flatcc_json_parser_double@@Base+0x190>
   2c700:	str	r0, [sp, #8]
   2c704:	ldr	r0, [sp, #8]
   2c708:	movw	r1, #0
   2c70c:	cmp	r0, r1
   2c710:	beq	2c724 <flatcc_json_parser_double@@Base+0x104>
   2c714:	ldr	r0, [sp, #8]
   2c718:	ldr	r1, [fp, #-12]
   2c71c:	cmp	r0, r1
   2c720:	bne	2c790 <flatcc_json_parser_double@@Base+0x170>
   2c724:	b	2c744 <flatcc_json_parser_double@@Base+0x124>
   2c728:	ldr	r0, [sp, #12]
   2c72c:	vldr	d16, [r0]
   2c730:	vcvt.f32.f64	s0, d16
   2c734:	bl	12aa8 <__isinff@plt>
   2c738:	cmp	r0, #0
   2c73c:	bne	2c758 <flatcc_json_parser_double@@Base+0x138>
   2c740:	b	2c774 <flatcc_json_parser_double@@Base+0x154>
   2c744:	ldr	r0, [sp, #12]
   2c748:	vldr	d0, [r0]
   2c74c:	bl	12ab4 <__isinf@plt>
   2c750:	cmp	r0, #0
   2c754:	beq	2c774 <flatcc_json_parser_double@@Base+0x154>
   2c758:	ldr	r0, [fp, #-8]
   2c75c:	ldr	r1, [fp, #-12]
   2c760:	ldr	r2, [sp, #16]
   2c764:	movw	r3, #7
   2c768:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c76c:	str	r0, [fp, #-4]
   2c770:	b	2c798 <flatcc_json_parser_double@@Base+0x178>
   2c774:	ldr	r0, [fp, #-8]
   2c778:	ldr	r1, [fp, #-12]
   2c77c:	ldr	r2, [sp, #16]
   2c780:	movw	r3, #6
   2c784:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c788:	str	r0, [fp, #-4]
   2c78c:	b	2c798 <flatcc_json_parser_double@@Base+0x178>
   2c790:	ldr	r0, [sp, #8]
   2c794:	str	r0, [fp, #-4]
   2c798:	ldr	r0, [fp, #-4]
   2c79c:	mov	sp, fp
   2c7a0:	pop	{fp, pc}
   2c7a4:	nop	{0}
	...
   2c7b0:	push	{fp, lr}
   2c7b4:	mov	fp, sp
   2c7b8:	sub	sp, sp, #16
   2c7bc:	str	r0, [fp, #-4]
   2c7c0:	str	r1, [sp, #8]
   2c7c4:	str	r2, [sp, #4]
   2c7c8:	ldr	r0, [fp, #-4]
   2c7cc:	ldr	r1, [sp, #8]
   2c7d0:	ldr	r2, [sp, #4]
   2c7d4:	bl	2f478 <flatcc_json_parser_struct_as_root@@Base+0x18c>
   2c7d8:	mov	sp, fp
   2c7dc:	pop	{fp, pc}

0002c7e0 <flatcc_json_parser_float@@Base>:
   2c7e0:	push	{fp, lr}
   2c7e4:	mov	fp, sp
   2c7e8:	sub	sp, sp, #32
   2c7ec:	vldr	s0, [pc, #368]	; 2c964 <flatcc_json_parser_float@@Base+0x184>
   2c7f0:	str	r0, [fp, #-8]
   2c7f4:	str	r1, [fp, #-12]
   2c7f8:	str	r2, [sp, #16]
   2c7fc:	str	r3, [sp, #12]
   2c800:	ldr	r0, [sp, #12]
   2c804:	vstr	s0, [r0]
   2c808:	ldr	r0, [fp, #-12]
   2c80c:	ldr	r1, [sp, #16]
   2c810:	cmp	r0, r1
   2c814:	bne	2c824 <flatcc_json_parser_float@@Base+0x44>
   2c818:	ldr	r0, [fp, #-12]
   2c81c:	str	r0, [fp, #-4]
   2c820:	b	2c958 <flatcc_json_parser_float@@Base+0x178>
   2c824:	ldr	r0, [fp, #-12]
   2c828:	str	r0, [sp, #4]
   2c82c:	ldr	r0, [fp, #-12]
   2c830:	ldrb	r0, [r0]
   2c834:	cmp	r0, #45	; 0x2d
   2c838:	bne	2c848 <flatcc_json_parser_float@@Base+0x68>
   2c83c:	ldr	r0, [sp, #4]
   2c840:	add	r0, r0, #1
   2c844:	str	r0, [sp, #4]
   2c848:	ldr	r0, [sp, #16]
   2c84c:	ldr	r1, [sp, #4]
   2c850:	sub	r0, r0, r1
   2c854:	cmp	r0, #1
   2c858:	ble	2c8a8 <flatcc_json_parser_float@@Base+0xc8>
   2c85c:	ldr	r0, [sp, #4]
   2c860:	ldrb	r0, [r0]
   2c864:	cmp	r0, #46	; 0x2e
   2c868:	beq	2c88c <flatcc_json_parser_float@@Base+0xac>
   2c86c:	ldr	r0, [sp, #4]
   2c870:	ldrb	r0, [r0]
   2c874:	cmp	r0, #48	; 0x30
   2c878:	bne	2c8a8 <flatcc_json_parser_float@@Base+0xc8>
   2c87c:	ldr	r0, [sp, #4]
   2c880:	ldrb	r0, [r0, #1]
   2c884:	cmp	r0, #48	; 0x30
   2c888:	bne	2c8a8 <flatcc_json_parser_float@@Base+0xc8>
   2c88c:	ldr	r0, [fp, #-8]
   2c890:	ldr	r1, [fp, #-12]
   2c894:	ldr	r2, [sp, #16]
   2c898:	movw	r3, #6
   2c89c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c8a0:	str	r0, [fp, #-4]
   2c8a4:	b	2c958 <flatcc_json_parser_float@@Base+0x178>
   2c8a8:	ldr	r0, [fp, #-12]
   2c8ac:	ldr	r1, [sp, #16]
   2c8b0:	ldr	r2, [fp, #-12]
   2c8b4:	sub	r1, r1, r2
   2c8b8:	ldr	r2, [sp, #12]
   2c8bc:	bl	2c968 <flatcc_json_parser_float@@Base+0x188>
   2c8c0:	str	r0, [sp, #8]
   2c8c4:	ldr	r0, [sp, #8]
   2c8c8:	movw	r1, #0
   2c8cc:	cmp	r0, r1
   2c8d0:	beq	2c8e4 <flatcc_json_parser_float@@Base+0x104>
   2c8d4:	ldr	r0, [sp, #8]
   2c8d8:	ldr	r1, [fp, #-12]
   2c8dc:	cmp	r0, r1
   2c8e0:	bne	2c950 <flatcc_json_parser_float@@Base+0x170>
   2c8e4:	b	2c8e8 <flatcc_json_parser_float@@Base+0x108>
   2c8e8:	ldr	r0, [sp, #12]
   2c8ec:	vldr	s0, [r0]
   2c8f0:	bl	12aa8 <__isinff@plt>
   2c8f4:	cmp	r0, #0
   2c8f8:	bne	2c918 <flatcc_json_parser_float@@Base+0x138>
   2c8fc:	b	2c934 <flatcc_json_parser_float@@Base+0x154>
   2c900:	ldr	r0, [sp, #12]
   2c904:	vldr	s0, [r0]
   2c908:	vcvt.f64.f32	d0, s0
   2c90c:	bl	12ab4 <__isinf@plt>
   2c910:	cmp	r0, #0
   2c914:	beq	2c934 <flatcc_json_parser_float@@Base+0x154>
   2c918:	ldr	r0, [fp, #-8]
   2c91c:	ldr	r1, [fp, #-12]
   2c920:	ldr	r2, [sp, #16]
   2c924:	movw	r3, #7
   2c928:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c92c:	str	r0, [fp, #-4]
   2c930:	b	2c958 <flatcc_json_parser_float@@Base+0x178>
   2c934:	ldr	r0, [fp, #-8]
   2c938:	ldr	r1, [fp, #-12]
   2c93c:	ldr	r2, [sp, #16]
   2c940:	movw	r3, #6
   2c944:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2c948:	str	r0, [fp, #-4]
   2c94c:	b	2c958 <flatcc_json_parser_float@@Base+0x178>
   2c950:	ldr	r0, [sp, #8]
   2c954:	str	r0, [fp, #-4]
   2c958:	ldr	r0, [fp, #-4]
   2c95c:	mov	sp, fp
   2c960:	pop	{fp, pc}
   2c964:	andeq	r0, r0, r0
   2c968:	push	{fp, lr}
   2c96c:	mov	fp, sp
   2c970:	sub	sp, sp, #40	; 0x28
   2c974:	ldr	r3, [pc, #180]	; 2ca30 <flatcc_json_parser_float@@Base+0x250>
   2c978:	str	r0, [fp, #-8]
   2c97c:	str	r1, [fp, #-12]
   2c980:	str	r2, [fp, #-16]
   2c984:	str	r3, [sp, #4]
   2c988:	ldr	r0, [fp, #-8]
   2c98c:	ldr	r1, [fp, #-12]
   2c990:	add	r2, sp, #8
   2c994:	bl	2c7b0 <flatcc_json_parser_double@@Base+0x190>
   2c998:	str	r0, [sp, #20]
   2c99c:	vldr	d16, [sp, #8]
   2c9a0:	vcvt.f32.f64	s0, d16
   2c9a4:	ldr	r0, [fp, #-16]
   2c9a8:	vstr	s0, [r0]
   2c9ac:	ldr	r0, [fp, #-16]
   2c9b0:	vldr	s0, [r0]
   2c9b4:	bl	12aa8 <__isinff@plt>
   2c9b8:	cmp	r0, #0
   2c9bc:	bne	2c9dc <flatcc_json_parser_float@@Base+0x1fc>
   2c9c0:	b	2ca1c <flatcc_json_parser_float@@Base+0x23c>
   2c9c4:	ldr	r0, [fp, #-16]
   2c9c8:	vldr	s0, [r0]
   2c9cc:	vcvt.f64.f32	d0, s0
   2c9d0:	bl	12ab4 <__isinf@plt>
   2c9d4:	cmp	r0, #0
   2c9d8:	beq	2ca1c <flatcc_json_parser_float@@Base+0x23c>
   2c9dc:	vldr	d16, [sp, #8]
   2c9e0:	vcmpe.f64	d16, #0.0
   2c9e4:	vmrs	APSR_nzcv, fpscr
   2c9e8:	bpl	2c9fc <flatcc_json_parser_float@@Base+0x21c>
   2c9ec:	vldr	s0, [sp, #4]
   2c9f0:	vneg.f32	s0, s0
   2c9f4:	vstr	s0, [sp]
   2c9f8:	b	2ca04 <flatcc_json_parser_float@@Base+0x224>
   2c9fc:	vldr	s0, [sp, #4]
   2ca00:	vstr	s0, [sp]
   2ca04:	vldr	s0, [sp]
   2ca08:	ldr	r0, [fp, #-16]
   2ca0c:	vstr	s0, [r0]
   2ca10:	ldr	r0, [fp, #-8]
   2ca14:	str	r0, [fp, #-4]
   2ca18:	b	2ca24 <flatcc_json_parser_float@@Base+0x244>
   2ca1c:	ldr	r0, [sp, #20]
   2ca20:	str	r0, [fp, #-4]
   2ca24:	ldr	r0, [fp, #-4]
   2ca28:	mov	sp, fp
   2ca2c:	pop	{fp, pc}
   2ca30:	svcvc	0x00800000
   2ca34:	push	{fp, lr}
   2ca38:	mov	fp, sp
   2ca3c:	sub	sp, sp, #16
   2ca40:	str	r0, [sp, #8]
   2ca44:	str	r1, [sp, #4]
   2ca48:	str	r2, [sp]
   2ca4c:	ldr	r0, [sp, #4]
   2ca50:	ldr	r1, [sp]
   2ca54:	cmp	r0, r1
   2ca58:	bne	2ca68 <flatcc_json_parser_float@@Base+0x288>
   2ca5c:	ldr	r0, [sp, #4]
   2ca60:	str	r0, [fp, #-4]
   2ca64:	b	2cad4 <flatcc_json_parser_float@@Base+0x2f4>
   2ca68:	ldr	r0, [sp, #4]
   2ca6c:	ldrb	r0, [r0]
   2ca70:	cmp	r0, #34	; 0x22
   2ca74:	bne	2ca94 <flatcc_json_parser_float@@Base+0x2b4>
   2ca78:	ldr	r0, [sp, #4]
   2ca7c:	add	r0, r0, #1
   2ca80:	str	r0, [sp, #4]
   2ca84:	ldr	r0, [sp, #8]
   2ca88:	movw	r1, #0
   2ca8c:	str	r1, [r0, #12]
   2ca90:	b	2cacc <flatcc_json_parser_float@@Base+0x2ec>
   2ca94:	ldr	r0, [sp, #4]
   2ca98:	ldrb	r0, [r0]
   2ca9c:	cmp	r0, #46	; 0x2e
   2caa0:	bne	2cac0 <flatcc_json_parser_float@@Base+0x2e0>
   2caa4:	ldr	r0, [sp, #8]
   2caa8:	ldr	r1, [sp, #4]
   2caac:	ldr	r2, [sp]
   2cab0:	movw	r3, #5
   2cab4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2cab8:	str	r0, [fp, #-4]
   2cabc:	b	2cad4 <flatcc_json_parser_float@@Base+0x2f4>
   2cac0:	ldr	r0, [sp, #8]
   2cac4:	movw	r1, #1
   2cac8:	str	r1, [r0, #12]
   2cacc:	ldr	r0, [sp, #4]
   2cad0:	str	r0, [fp, #-4]
   2cad4:	ldr	r0, [fp, #-4]
   2cad8:	mov	sp, fp
   2cadc:	pop	{fp, pc}
   2cae0:	push	{fp, lr}
   2cae4:	mov	fp, sp
   2cae8:	sub	sp, sp, #16
   2caec:	str	r0, [sp, #8]
   2caf0:	str	r1, [sp, #4]
   2caf4:	str	r2, [sp]
   2caf8:	ldr	r0, [sp, #4]
   2cafc:	ldr	r1, [sp]
   2cb00:	cmp	r0, r1
   2cb04:	beq	2cb18 <flatcc_json_parser_float@@Base+0x338>
   2cb08:	ldr	r0, [sp, #4]
   2cb0c:	ldrb	r0, [r0]
   2cb10:	cmp	r0, #34	; 0x22
   2cb14:	beq	2cb34 <flatcc_json_parser_float@@Base+0x354>
   2cb18:	ldr	r0, [sp, #8]
   2cb1c:	ldr	r1, [sp, #4]
   2cb20:	ldr	r2, [sp]
   2cb24:	movw	r3, #16
   2cb28:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2cb2c:	str	r0, [fp, #-4]
   2cb30:	b	2cb44 <flatcc_json_parser_float@@Base+0x364>
   2cb34:	ldr	r0, [sp, #4]
   2cb38:	add	r0, r0, #1
   2cb3c:	str	r0, [sp, #4]
   2cb40:	str	r0, [fp, #-4]
   2cb44:	ldr	r0, [fp, #-4]
   2cb48:	mov	sp, fp
   2cb4c:	pop	{fp, pc}
   2cb50:	push	{fp, lr}
   2cb54:	mov	fp, sp
   2cb58:	sub	sp, sp, #16
   2cb5c:	str	r0, [sp, #8]
   2cb60:	str	r1, [sp, #4]
   2cb64:	str	r2, [sp]
   2cb68:	ldr	r0, [sp, #4]
   2cb6c:	ldr	r1, [sp]
   2cb70:	cmp	r0, r1
   2cb74:	beq	2cb88 <flatcc_json_parser_float@@Base+0x3a8>
   2cb78:	ldr	r0, [sp, #4]
   2cb7c:	ldrb	r0, [r0]
   2cb80:	cmp	r0, #34	; 0x22
   2cb84:	beq	2cba4 <flatcc_json_parser_float@@Base+0x3c4>
   2cb88:	ldr	r0, [sp, #8]
   2cb8c:	ldr	r1, [sp, #4]
   2cb90:	ldr	r2, [sp]
   2cb94:	movw	r3, #20
   2cb98:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2cb9c:	str	r0, [fp, #-4]
   2cba0:	b	2cbb4 <flatcc_json_parser_float@@Base+0x3d4>
   2cba4:	ldr	r0, [sp, #4]
   2cba8:	add	r0, r0, #1
   2cbac:	str	r0, [sp, #4]
   2cbb0:	str	r0, [fp, #-4]
   2cbb4:	ldr	r0, [fp, #-4]
   2cbb8:	mov	sp, fp
   2cbbc:	pop	{fp, pc}
   2cbc0:	push	{fp, lr}
   2cbc4:	mov	fp, sp
   2cbc8:	sub	sp, sp, #32
   2cbcc:	str	r0, [fp, #-8]
   2cbd0:	str	r1, [fp, #-12]
   2cbd4:	str	r2, [sp, #16]
   2cbd8:	ldr	r0, [fp, #-12]
   2cbdc:	ldr	r1, [sp, #16]
   2cbe0:	cmp	r0, r1
   2cbe4:	bne	2cbf4 <flatcc_json_parser_float@@Base+0x414>
   2cbe8:	ldr	r0, [fp, #-12]
   2cbec:	str	r0, [fp, #-4]
   2cbf0:	b	2cff8 <flatcc_json_parser_float@@Base+0x818>
   2cbf4:	ldr	r0, [fp, #-12]
   2cbf8:	ldrb	r0, [r0]
   2cbfc:	cmp	r0, #45	; 0x2d
   2cc00:	bne	2cc40 <flatcc_json_parser_float@@Base+0x460>
   2cc04:	ldr	r0, [fp, #-12]
   2cc08:	add	r0, r0, #1
   2cc0c:	str	r0, [fp, #-12]
   2cc10:	ldr	r0, [fp, #-12]
   2cc14:	ldr	r1, [sp, #16]
   2cc18:	cmp	r0, r1
   2cc1c:	bne	2cc3c <flatcc_json_parser_float@@Base+0x45c>
   2cc20:	ldr	r0, [fp, #-8]
   2cc24:	ldr	r1, [fp, #-12]
   2cc28:	ldr	r2, [sp, #16]
   2cc2c:	movw	r3, #6
   2cc30:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2cc34:	str	r0, [fp, #-4]
   2cc38:	b	2cff8 <flatcc_json_parser_float@@Base+0x818>
   2cc3c:	b	2cc40 <flatcc_json_parser_float@@Base+0x460>
   2cc40:	ldr	r0, [fp, #-12]
   2cc44:	ldrb	r0, [r0]
   2cc48:	cmp	r0, #48	; 0x30
   2cc4c:	bne	2cc60 <flatcc_json_parser_float@@Base+0x480>
   2cc50:	ldr	r0, [fp, #-12]
   2cc54:	add	r0, r0, #1
   2cc58:	str	r0, [fp, #-12]
   2cc5c:	b	2cd10 <flatcc_json_parser_float@@Base+0x530>
   2cc60:	ldr	r0, [fp, #-12]
   2cc64:	ldrb	r0, [r0]
   2cc68:	cmp	r0, #49	; 0x31
   2cc6c:	blt	2cc80 <flatcc_json_parser_float@@Base+0x4a0>
   2cc70:	ldr	r0, [fp, #-12]
   2cc74:	ldrb	r0, [r0]
   2cc78:	cmp	r0, #57	; 0x39
   2cc7c:	ble	2cc9c <flatcc_json_parser_float@@Base+0x4bc>
   2cc80:	ldr	r0, [fp, #-8]
   2cc84:	ldr	r1, [fp, #-12]
   2cc88:	ldr	r2, [sp, #16]
   2cc8c:	movw	r3, #6
   2cc90:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2cc94:	str	r0, [fp, #-4]
   2cc98:	b	2cff8 <flatcc_json_parser_float@@Base+0x818>
   2cc9c:	ldr	r0, [fp, #-12]
   2cca0:	add	r0, r0, #1
   2cca4:	str	r0, [fp, #-12]
   2cca8:	ldr	r0, [fp, #-12]
   2ccac:	ldr	r1, [sp, #16]
   2ccb0:	cmp	r0, r1
   2ccb4:	movw	r0, #0
   2ccb8:	str	r0, [sp, #12]
   2ccbc:	beq	2ccf0 <flatcc_json_parser_float@@Base+0x510>
   2ccc0:	ldr	r0, [fp, #-12]
   2ccc4:	ldrb	r0, [r0]
   2ccc8:	cmp	r0, #48	; 0x30
   2cccc:	movw	r0, #0
   2ccd0:	str	r0, [sp, #12]
   2ccd4:	blt	2ccf0 <flatcc_json_parser_float@@Base+0x510>
   2ccd8:	ldr	r0, [fp, #-12]
   2ccdc:	ldrb	r0, [r0]
   2cce0:	cmp	r0, #57	; 0x39
   2cce4:	movw	r0, #0
   2cce8:	movle	r0, #1
   2ccec:	str	r0, [sp, #12]
   2ccf0:	ldr	r0, [sp, #12]
   2ccf4:	tst	r0, #1
   2ccf8:	beq	2cd0c <flatcc_json_parser_float@@Base+0x52c>
   2ccfc:	ldr	r0, [fp, #-12]
   2cd00:	add	r0, r0, #1
   2cd04:	str	r0, [fp, #-12]
   2cd08:	b	2cca8 <flatcc_json_parser_float@@Base+0x4c8>
   2cd0c:	b	2cd10 <flatcc_json_parser_float@@Base+0x530>
   2cd10:	ldr	r0, [fp, #-12]
   2cd14:	ldr	r1, [sp, #16]
   2cd18:	cmp	r0, r1
   2cd1c:	beq	2cdf0 <flatcc_json_parser_float@@Base+0x610>
   2cd20:	ldr	r0, [fp, #-12]
   2cd24:	ldrb	r0, [r0]
   2cd28:	cmp	r0, #46	; 0x2e
   2cd2c:	bne	2cdec <flatcc_json_parser_float@@Base+0x60c>
   2cd30:	ldr	r0, [fp, #-12]
   2cd34:	add	r0, r0, #1
   2cd38:	str	r0, [fp, #-12]
   2cd3c:	ldr	r0, [fp, #-12]
   2cd40:	ldrb	r0, [r0]
   2cd44:	cmp	r0, #48	; 0x30
   2cd48:	blt	2cd5c <flatcc_json_parser_float@@Base+0x57c>
   2cd4c:	ldr	r0, [fp, #-12]
   2cd50:	ldrb	r0, [r0]
   2cd54:	cmp	r0, #57	; 0x39
   2cd58:	ble	2cd78 <flatcc_json_parser_float@@Base+0x598>
   2cd5c:	ldr	r0, [fp, #-8]
   2cd60:	ldr	r1, [fp, #-12]
   2cd64:	ldr	r2, [sp, #16]
   2cd68:	movw	r3, #6
   2cd6c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2cd70:	str	r0, [fp, #-4]
   2cd74:	b	2cff8 <flatcc_json_parser_float@@Base+0x818>
   2cd78:	ldr	r0, [fp, #-12]
   2cd7c:	add	r0, r0, #1
   2cd80:	str	r0, [fp, #-12]
   2cd84:	ldr	r0, [fp, #-12]
   2cd88:	ldr	r1, [sp, #16]
   2cd8c:	cmp	r0, r1
   2cd90:	movw	r0, #0
   2cd94:	str	r0, [sp, #8]
   2cd98:	beq	2cdcc <flatcc_json_parser_float@@Base+0x5ec>
   2cd9c:	ldr	r0, [fp, #-12]
   2cda0:	ldrb	r0, [r0]
   2cda4:	cmp	r0, #48	; 0x30
   2cda8:	movw	r0, #0
   2cdac:	str	r0, [sp, #8]
   2cdb0:	blt	2cdcc <flatcc_json_parser_float@@Base+0x5ec>
   2cdb4:	ldr	r0, [fp, #-12]
   2cdb8:	ldrb	r0, [r0]
   2cdbc:	cmp	r0, #57	; 0x39
   2cdc0:	movw	r0, #0
   2cdc4:	movle	r0, #1
   2cdc8:	str	r0, [sp, #8]
   2cdcc:	ldr	r0, [sp, #8]
   2cdd0:	tst	r0, #1
   2cdd4:	beq	2cde8 <flatcc_json_parser_float@@Base+0x608>
   2cdd8:	ldr	r0, [fp, #-12]
   2cddc:	add	r0, r0, #1
   2cde0:	str	r0, [fp, #-12]
   2cde4:	b	2cd84 <flatcc_json_parser_float@@Base+0x5a4>
   2cde8:	b	2cdec <flatcc_json_parser_float@@Base+0x60c>
   2cdec:	b	2cdf0 <flatcc_json_parser_float@@Base+0x610>
   2cdf0:	ldr	r0, [fp, #-12]
   2cdf4:	ldr	r1, [sp, #16]
   2cdf8:	cmp	r0, r1
   2cdfc:	beq	2cf44 <flatcc_json_parser_float@@Base+0x764>
   2ce00:	ldr	r0, [fp, #-12]
   2ce04:	ldrb	r0, [r0]
   2ce08:	cmp	r0, #101	; 0x65
   2ce0c:	beq	2ce20 <flatcc_json_parser_float@@Base+0x640>
   2ce10:	ldr	r0, [fp, #-12]
   2ce14:	ldrb	r0, [r0]
   2ce18:	cmp	r0, #69	; 0x45
   2ce1c:	bne	2cf44 <flatcc_json_parser_float@@Base+0x764>
   2ce20:	ldr	r0, [fp, #-12]
   2ce24:	add	r0, r0, #1
   2ce28:	str	r0, [fp, #-12]
   2ce2c:	ldr	r0, [fp, #-12]
   2ce30:	ldr	r1, [sp, #16]
   2ce34:	cmp	r0, r1
   2ce38:	bne	2ce58 <flatcc_json_parser_float@@Base+0x678>
   2ce3c:	ldr	r0, [fp, #-8]
   2ce40:	ldr	r1, [fp, #-12]
   2ce44:	ldr	r2, [sp, #16]
   2ce48:	movw	r3, #6
   2ce4c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2ce50:	str	r0, [fp, #-4]
   2ce54:	b	2cff8 <flatcc_json_parser_float@@Base+0x818>
   2ce58:	ldr	r0, [fp, #-12]
   2ce5c:	ldrb	r0, [r0]
   2ce60:	cmp	r0, #43	; 0x2b
   2ce64:	beq	2ce78 <flatcc_json_parser_float@@Base+0x698>
   2ce68:	ldr	r0, [fp, #-12]
   2ce6c:	ldrb	r0, [r0]
   2ce70:	cmp	r0, #45	; 0x2d
   2ce74:	bne	2ce84 <flatcc_json_parser_float@@Base+0x6a4>
   2ce78:	ldr	r0, [fp, #-12]
   2ce7c:	add	r0, r0, #1
   2ce80:	str	r0, [fp, #-12]
   2ce84:	ldr	r0, [fp, #-12]
   2ce88:	ldr	r1, [sp, #16]
   2ce8c:	cmp	r0, r1
   2ce90:	beq	2ceb4 <flatcc_json_parser_float@@Base+0x6d4>
   2ce94:	ldr	r0, [fp, #-12]
   2ce98:	ldrb	r0, [r0]
   2ce9c:	cmp	r0, #48	; 0x30
   2cea0:	blt	2ceb4 <flatcc_json_parser_float@@Base+0x6d4>
   2cea4:	ldr	r0, [fp, #-12]
   2cea8:	ldrb	r0, [r0]
   2ceac:	cmp	r0, #57	; 0x39
   2ceb0:	ble	2ced0 <flatcc_json_parser_float@@Base+0x6f0>
   2ceb4:	ldr	r0, [fp, #-8]
   2ceb8:	ldr	r1, [fp, #-12]
   2cebc:	ldr	r2, [sp, #16]
   2cec0:	movw	r3, #6
   2cec4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2cec8:	str	r0, [fp, #-4]
   2cecc:	b	2cff8 <flatcc_json_parser_float@@Base+0x818>
   2ced0:	ldr	r0, [fp, #-12]
   2ced4:	add	r0, r0, #1
   2ced8:	str	r0, [fp, #-12]
   2cedc:	ldr	r0, [fp, #-12]
   2cee0:	ldr	r1, [sp, #16]
   2cee4:	cmp	r0, r1
   2cee8:	movw	r0, #0
   2ceec:	str	r0, [sp, #4]
   2cef0:	beq	2cf24 <flatcc_json_parser_float@@Base+0x744>
   2cef4:	ldr	r0, [fp, #-12]
   2cef8:	ldrb	r0, [r0]
   2cefc:	cmp	r0, #48	; 0x30
   2cf00:	movw	r0, #0
   2cf04:	str	r0, [sp, #4]
   2cf08:	blt	2cf24 <flatcc_json_parser_float@@Base+0x744>
   2cf0c:	ldr	r0, [fp, #-12]
   2cf10:	ldrb	r0, [r0]
   2cf14:	cmp	r0, #57	; 0x39
   2cf18:	movw	r0, #0
   2cf1c:	movle	r0, #1
   2cf20:	str	r0, [sp, #4]
   2cf24:	ldr	r0, [sp, #4]
   2cf28:	tst	r0, #1
   2cf2c:	beq	2cf40 <flatcc_json_parser_float@@Base+0x760>
   2cf30:	ldr	r0, [fp, #-12]
   2cf34:	add	r0, r0, #1
   2cf38:	str	r0, [fp, #-12]
   2cf3c:	b	2cedc <flatcc_json_parser_float@@Base+0x6fc>
   2cf40:	b	2cf44 <flatcc_json_parser_float@@Base+0x764>
   2cf44:	ldr	r0, [fp, #-12]
   2cf48:	ldr	r1, [sp, #16]
   2cf4c:	cmp	r0, r1
   2cf50:	beq	2cfe0 <flatcc_json_parser_float@@Base+0x800>
   2cf54:	ldr	r0, [fp, #-12]
   2cf58:	ldrb	r0, [r0]
   2cf5c:	sub	r1, r0, #9
   2cf60:	cmp	r1, #3
   2cf64:	str	r0, [sp]
   2cf68:	bcc	2cfd0 <flatcc_json_parser_float@@Base+0x7f0>
   2cf6c:	b	2cf70 <flatcc_json_parser_float@@Base+0x790>
   2cf70:	ldr	r0, [sp]
   2cf74:	cmp	r0, #13
   2cf78:	beq	2cfd0 <flatcc_json_parser_float@@Base+0x7f0>
   2cf7c:	b	2cf80 <flatcc_json_parser_float@@Base+0x7a0>
   2cf80:	ldr	r0, [sp]
   2cf84:	cmp	r0, #32
   2cf88:	beq	2cfd0 <flatcc_json_parser_float@@Base+0x7f0>
   2cf8c:	b	2cf90 <flatcc_json_parser_float@@Base+0x7b0>
   2cf90:	ldr	r0, [sp]
   2cf94:	cmp	r0, #44	; 0x2c
   2cf98:	beq	2cfd0 <flatcc_json_parser_float@@Base+0x7f0>
   2cf9c:	b	2cfa0 <flatcc_json_parser_float@@Base+0x7c0>
   2cfa0:	ldr	r0, [sp]
   2cfa4:	cmp	r0, #58	; 0x3a
   2cfa8:	beq	2cfd0 <flatcc_json_parser_float@@Base+0x7f0>
   2cfac:	b	2cfb0 <flatcc_json_parser_float@@Base+0x7d0>
   2cfb0:	ldr	r0, [sp]
   2cfb4:	cmp	r0, #93	; 0x5d
   2cfb8:	beq	2cfd0 <flatcc_json_parser_float@@Base+0x7f0>
   2cfbc:	b	2cfc0 <flatcc_json_parser_float@@Base+0x7e0>
   2cfc0:	ldr	r0, [sp]
   2cfc4:	cmp	r0, #125	; 0x7d
   2cfc8:	bne	2cfdc <flatcc_json_parser_float@@Base+0x7fc>
   2cfcc:	b	2cfd0 <flatcc_json_parser_float@@Base+0x7f0>
   2cfd0:	ldr	r0, [fp, #-12]
   2cfd4:	str	r0, [fp, #-4]
   2cfd8:	b	2cff8 <flatcc_json_parser_float@@Base+0x818>
   2cfdc:	b	2cfe0 <flatcc_json_parser_float@@Base+0x800>
   2cfe0:	ldr	r0, [fp, #-8]
   2cfe4:	ldr	r1, [fp, #-12]
   2cfe8:	ldr	r2, [sp, #16]
   2cfec:	movw	r3, #6
   2cff0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2cff4:	str	r0, [fp, #-4]
   2cff8:	ldr	r0, [fp, #-4]
   2cffc:	mov	sp, fp
   2d000:	pop	{fp, pc}
   2d004:	push	{fp, lr}
   2d008:	mov	fp, sp
   2d00c:	sub	sp, sp, #24
   2d010:	str	r0, [fp, #-8]
   2d014:	str	r1, [sp, #12]
   2d018:	str	r2, [sp, #8]
   2d01c:	str	r3, [sp, #4]
   2d020:	ldr	r0, [fp, #-8]
   2d024:	ldr	r1, [sp, #12]
   2d028:	ldr	r2, [sp, #8]
   2d02c:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2d030:	str	r0, [sp, #12]
   2d034:	ldr	r0, [sp, #12]
   2d038:	ldr	r1, [sp, #8]
   2d03c:	cmp	r0, r1
   2d040:	bne	2d05c <flatcc_json_parser_float@@Base+0x87c>
   2d044:	ldr	r0, [sp, #4]
   2d048:	movw	r1, #0
   2d04c:	str	r1, [r0]
   2d050:	ldr	r0, [sp, #12]
   2d054:	str	r0, [fp, #-4]
   2d058:	b	2d15c <flatcc_json_parser_float@@Base+0x97c>
   2d05c:	ldr	r0, [sp, #12]
   2d060:	ldrb	r0, [r0]
   2d064:	cmp	r0, #44	; 0x2c
   2d068:	beq	2d0c0 <flatcc_json_parser_float@@Base+0x8e0>
   2d06c:	ldr	r0, [sp, #4]
   2d070:	movw	r1, #0
   2d074:	str	r1, [r0]
   2d078:	ldr	r0, [sp, #12]
   2d07c:	ldrb	r0, [r0]
   2d080:	cmp	r0, #93	; 0x5d
   2d084:	beq	2d0a4 <flatcc_json_parser_float@@Base+0x8c4>
   2d088:	ldr	r0, [fp, #-8]
   2d08c:	ldr	r1, [sp, #12]
   2d090:	ldr	r2, [sp, #8]
   2d094:	movw	r3, #9
   2d098:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2d09c:	str	r0, [fp, #-4]
   2d0a0:	b	2d15c <flatcc_json_parser_float@@Base+0x97c>
   2d0a4:	ldr	r0, [fp, #-8]
   2d0a8:	ldr	r1, [sp, #12]
   2d0ac:	add	r1, r1, #1
   2d0b0:	ldr	r2, [sp, #8]
   2d0b4:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2d0b8:	str	r0, [fp, #-4]
   2d0bc:	b	2d15c <flatcc_json_parser_float@@Base+0x97c>
   2d0c0:	ldr	r0, [fp, #-8]
   2d0c4:	ldr	r1, [sp, #12]
   2d0c8:	add	r1, r1, #1
   2d0cc:	ldr	r2, [sp, #8]
   2d0d0:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2d0d4:	str	r0, [sp, #12]
   2d0d8:	ldr	r0, [sp, #12]
   2d0dc:	ldr	r1, [sp, #8]
   2d0e0:	cmp	r0, r1
   2d0e4:	bne	2d110 <flatcc_json_parser_float@@Base+0x930>
   2d0e8:	ldr	r0, [sp, #4]
   2d0ec:	movw	r1, #0
   2d0f0:	str	r1, [r0]
   2d0f4:	ldr	r0, [fp, #-8]
   2d0f8:	ldr	r1, [sp, #12]
   2d0fc:	ldr	r2, [sp, #8]
   2d100:	movw	r3, #9
   2d104:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2d108:	str	r0, [fp, #-4]
   2d10c:	b	2d15c <flatcc_json_parser_float@@Base+0x97c>
   2d110:	ldr	r0, [sp, #12]
   2d114:	ldrb	r0, [r0]
   2d118:	cmp	r0, #93	; 0x5d
   2d11c:	bne	2d148 <flatcc_json_parser_float@@Base+0x968>
   2d120:	ldr	r0, [sp, #4]
   2d124:	movw	r1, #0
   2d128:	str	r1, [r0]
   2d12c:	ldr	r0, [fp, #-8]
   2d130:	ldr	r1, [sp, #12]
   2d134:	add	r1, r1, #1
   2d138:	ldr	r2, [sp, #8]
   2d13c:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2d140:	str	r0, [fp, #-4]
   2d144:	b	2d15c <flatcc_json_parser_float@@Base+0x97c>
   2d148:	ldr	r0, [sp, #4]
   2d14c:	movw	r1, #1
   2d150:	str	r1, [r0]
   2d154:	ldr	r0, [sp, #12]
   2d158:	str	r0, [fp, #-4]
   2d15c:	ldr	r0, [fp, #-4]
   2d160:	mov	sp, fp
   2d164:	pop	{fp, pc}
   2d168:	push	{fp, lr}
   2d16c:	mov	fp, sp
   2d170:	sub	sp, sp, #24
   2d174:	str	r0, [fp, #-8]
   2d178:	str	r1, [sp, #12]
   2d17c:	str	r2, [sp, #8]
   2d180:	str	r3, [sp, #4]
   2d184:	ldr	r0, [fp, #-8]
   2d188:	ldr	r1, [sp, #12]
   2d18c:	ldr	r2, [sp, #8]
   2d190:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2d194:	str	r0, [sp, #12]
   2d198:	ldr	r0, [sp, #12]
   2d19c:	ldr	r1, [sp, #8]
   2d1a0:	cmp	r0, r1
   2d1a4:	bne	2d1c0 <flatcc_json_parser_float@@Base+0x9e0>
   2d1a8:	ldr	r0, [sp, #4]
   2d1ac:	movw	r1, #0
   2d1b0:	str	r1, [r0]
   2d1b4:	ldr	r0, [sp, #12]
   2d1b8:	str	r0, [fp, #-4]
   2d1bc:	b	2d2c0 <flatcc_json_parser_float@@Base+0xae0>
   2d1c0:	ldr	r0, [sp, #12]
   2d1c4:	ldrb	r0, [r0]
   2d1c8:	cmp	r0, #44	; 0x2c
   2d1cc:	beq	2d224 <flatcc_json_parser_float@@Base+0xa44>
   2d1d0:	ldr	r0, [sp, #4]
   2d1d4:	movw	r1, #0
   2d1d8:	str	r1, [r0]
   2d1dc:	ldr	r0, [sp, #12]
   2d1e0:	ldrb	r0, [r0]
   2d1e4:	cmp	r0, #125	; 0x7d
   2d1e8:	beq	2d208 <flatcc_json_parser_float@@Base+0xa28>
   2d1ec:	ldr	r0, [fp, #-8]
   2d1f0:	ldr	r1, [sp, #12]
   2d1f4:	ldr	r2, [sp, #8]
   2d1f8:	movw	r3, #10
   2d1fc:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2d200:	str	r0, [fp, #-4]
   2d204:	b	2d2c0 <flatcc_json_parser_float@@Base+0xae0>
   2d208:	ldr	r0, [fp, #-8]
   2d20c:	ldr	r1, [sp, #12]
   2d210:	add	r1, r1, #1
   2d214:	ldr	r2, [sp, #8]
   2d218:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2d21c:	str	r0, [fp, #-4]
   2d220:	b	2d2c0 <flatcc_json_parser_float@@Base+0xae0>
   2d224:	ldr	r0, [fp, #-8]
   2d228:	ldr	r1, [sp, #12]
   2d22c:	add	r1, r1, #1
   2d230:	ldr	r2, [sp, #8]
   2d234:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2d238:	str	r0, [sp, #12]
   2d23c:	ldr	r0, [sp, #12]
   2d240:	ldr	r1, [sp, #8]
   2d244:	cmp	r0, r1
   2d248:	bne	2d274 <flatcc_json_parser_float@@Base+0xa94>
   2d24c:	ldr	r0, [sp, #4]
   2d250:	movw	r1, #0
   2d254:	str	r1, [r0]
   2d258:	ldr	r0, [fp, #-8]
   2d25c:	ldr	r1, [sp, #12]
   2d260:	ldr	r2, [sp, #8]
   2d264:	movw	r3, #10
   2d268:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2d26c:	str	r0, [fp, #-4]
   2d270:	b	2d2c0 <flatcc_json_parser_float@@Base+0xae0>
   2d274:	ldr	r0, [sp, #12]
   2d278:	ldrb	r0, [r0]
   2d27c:	cmp	r0, #125	; 0x7d
   2d280:	bne	2d2ac <flatcc_json_parser_float@@Base+0xacc>
   2d284:	ldr	r0, [sp, #4]
   2d288:	movw	r1, #0
   2d28c:	str	r1, [r0]
   2d290:	ldr	r0, [fp, #-8]
   2d294:	ldr	r1, [sp, #12]
   2d298:	add	r1, r1, #1
   2d29c:	ldr	r2, [sp, #8]
   2d2a0:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2d2a4:	str	r0, [fp, #-4]
   2d2a8:	b	2d2c0 <flatcc_json_parser_float@@Base+0xae0>
   2d2ac:	ldr	r0, [sp, #4]
   2d2b0:	movw	r1, #1
   2d2b4:	str	r1, [r0]
   2d2b8:	ldr	r0, [sp, #12]
   2d2bc:	str	r0, [fp, #-4]
   2d2c0:	ldr	r0, [fp, #-4]
   2d2c4:	mov	sp, fp
   2d2c8:	pop	{fp, pc}

0002d2cc <flatcc_json_parser_integer@@Base>:
   2d2cc:	push	{fp, lr}
   2d2d0:	mov	fp, sp
   2d2d4:	sub	sp, sp, #48	; 0x30
   2d2d8:	ldr	ip, [fp, #8]
   2d2dc:	str	r0, [fp, #-8]
   2d2e0:	str	r1, [fp, #-12]
   2d2e4:	str	r2, [fp, #-16]
   2d2e8:	str	r3, [fp, #-20]	; 0xffffffec
   2d2ec:	mov	r0, #0
   2d2f0:	str	r0, [sp, #12]
   2d2f4:	str	r0, [sp, #8]
   2d2f8:	ldr	r0, [fp, #-12]
   2d2fc:	ldr	r1, [fp, #-16]
   2d300:	cmp	r0, r1
   2d304:	bne	2d314 <flatcc_json_parser_integer@@Base+0x48>
   2d308:	ldr	r0, [fp, #-12]
   2d30c:	str	r0, [fp, #-4]
   2d310:	b	2d4e0 <flatcc_json_parser_integer@@Base+0x214>
   2d314:	ldr	r0, [fp, #-12]
   2d318:	str	r0, [sp, #4]
   2d31c:	ldr	r0, [fp, #-12]
   2d320:	ldrb	r0, [r0]
   2d324:	cmp	r0, #45	; 0x2d
   2d328:	movw	r0, #0
   2d32c:	moveq	r0, #1
   2d330:	and	r0, r0, #1
   2d334:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d338:	str	r0, [r1]
   2d33c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d340:	ldr	r0, [r0]
   2d344:	ldr	r1, [fp, #-12]
   2d348:	add	r0, r1, r0
   2d34c:	str	r0, [fp, #-12]
   2d350:	ldr	r0, [fp, #-12]
   2d354:	ldr	r1, [fp, #-16]
   2d358:	cmp	r0, r1
   2d35c:	movw	r0, #0
   2d360:	str	r0, [sp]
   2d364:	beq	2d398 <flatcc_json_parser_integer@@Base+0xcc>
   2d368:	ldr	r0, [fp, #-12]
   2d36c:	ldrb	r0, [r0]
   2d370:	cmp	r0, #48	; 0x30
   2d374:	movw	r0, #0
   2d378:	str	r0, [sp]
   2d37c:	blt	2d398 <flatcc_json_parser_integer@@Base+0xcc>
   2d380:	ldr	r0, [fp, #-12]
   2d384:	ldrb	r0, [r0]
   2d388:	cmp	r0, #57	; 0x39
   2d38c:	movw	r0, #0
   2d390:	movle	r0, #1
   2d394:	str	r0, [sp]
   2d398:	ldr	r0, [sp]
   2d39c:	tst	r0, #1
   2d3a0:	beq	2d44c <flatcc_json_parser_integer@@Base+0x180>
   2d3a4:	ldr	r0, [sp, #8]
   2d3a8:	ldr	r1, [sp, #12]
   2d3ac:	str	r1, [sp, #20]
   2d3b0:	str	r0, [sp, #16]
   2d3b4:	ldr	r0, [sp, #8]
   2d3b8:	ldr	r1, [sp, #12]
   2d3bc:	add	r1, r1, r1, lsl #2
   2d3c0:	lsl	r1, r1, #1
   2d3c4:	ldr	r2, [fp, #-12]
   2d3c8:	ldrb	r2, [r2]
   2d3cc:	mov	r3, #10
   2d3d0:	umlal	r2, r1, r0, r3
   2d3d4:	subs	r0, r2, #48	; 0x30
   2d3d8:	sbc	r1, r1, #0
   2d3dc:	str	r0, [sp, #8]
   2d3e0:	str	r1, [sp, #12]
   2d3e4:	ldr	r0, [sp, #16]
   2d3e8:	ldr	r1, [sp, #20]
   2d3ec:	ldr	r2, [sp, #8]
   2d3f0:	ldr	r3, [sp, #12]
   2d3f4:	subs	r0, r2, r0
   2d3f8:	sbcs	r1, r3, r1
   2d3fc:	bcs	2d43c <flatcc_json_parser_integer@@Base+0x170>
   2d400:	b	2d404 <flatcc_json_parser_integer@@Base+0x138>
   2d404:	ldr	r0, [fp, #-8]
   2d408:	ldr	r1, [fp, #-12]
   2d40c:	ldr	r2, [fp, #-16]
   2d410:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d414:	movw	ip, #0
   2d418:	cmp	r3, ip
   2d41c:	movw	r3, #0
   2d420:	movne	r3, #1
   2d424:	tst	r3, #1
   2d428:	movw	r3, #8
   2d42c:	moveq	r3, #7
   2d430:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2d434:	str	r0, [fp, #-4]
   2d438:	b	2d4e0 <flatcc_json_parser_integer@@Base+0x214>
   2d43c:	ldr	r0, [fp, #-12]
   2d440:	add	r0, r0, #1
   2d444:	str	r0, [fp, #-12]
   2d448:	b	2d350 <flatcc_json_parser_integer@@Base+0x84>
   2d44c:	ldr	r0, [fp, #-12]
   2d450:	ldr	r1, [sp, #4]
   2d454:	cmp	r0, r1
   2d458:	bne	2d468 <flatcc_json_parser_integer@@Base+0x19c>
   2d45c:	ldr	r0, [fp, #-12]
   2d460:	str	r0, [fp, #-4]
   2d464:	b	2d4e0 <flatcc_json_parser_integer@@Base+0x214>
   2d468:	ldr	r0, [fp, #-12]
   2d46c:	ldr	r1, [fp, #-16]
   2d470:	cmp	r0, r1
   2d474:	beq	2d4c4 <flatcc_json_parser_integer@@Base+0x1f8>
   2d478:	ldr	r0, [fp, #-12]
   2d47c:	ldrb	r0, [r0]
   2d480:	cmp	r0, #101	; 0x65
   2d484:	beq	2d4a8 <flatcc_json_parser_integer@@Base+0x1dc>
   2d488:	ldr	r0, [fp, #-12]
   2d48c:	ldrb	r0, [r0]
   2d490:	cmp	r0, #69	; 0x45
   2d494:	beq	2d4a8 <flatcc_json_parser_integer@@Base+0x1dc>
   2d498:	ldr	r0, [fp, #-12]
   2d49c:	ldrb	r0, [r0]
   2d4a0:	cmp	r0, #46	; 0x2e
   2d4a4:	bne	2d4c4 <flatcc_json_parser_integer@@Base+0x1f8>
   2d4a8:	ldr	r0, [fp, #-8]
   2d4ac:	ldr	r1, [fp, #-12]
   2d4b0:	ldr	r2, [fp, #-16]
   2d4b4:	movw	r3, #12
   2d4b8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2d4bc:	str	r0, [fp, #-4]
   2d4c0:	b	2d4e0 <flatcc_json_parser_integer@@Base+0x214>
   2d4c4:	ldr	r0, [sp, #8]
   2d4c8:	ldr	r1, [sp, #12]
   2d4cc:	ldr	r2, [fp, #8]
   2d4d0:	str	r1, [r2, #4]
   2d4d4:	str	r0, [r2]
   2d4d8:	ldr	r0, [fp, #-12]
   2d4dc:	str	r0, [fp, #-4]
   2d4e0:	ldr	r0, [fp, #-4]
   2d4e4:	mov	sp, fp
   2d4e8:	pop	{fp, pc}

0002d4ec <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   2d4ec:	push	{fp, lr}
   2d4f0:	mov	fp, sp
   2d4f4:	sub	sp, sp, #64	; 0x40
   2d4f8:	ldr	ip, [fp, #8]
   2d4fc:	str	r0, [fp, #-8]
   2d500:	str	r1, [fp, #-12]
   2d504:	str	r2, [fp, #-16]
   2d508:	str	r3, [fp, #-20]	; 0xffffffec
   2d50c:	ldr	r0, [fp, #8]
   2d510:	cmp	r0, #0
   2d514:	movw	r0, #0
   2d518:	movne	r0, #1
   2d51c:	tst	r0, #1
   2d520:	movw	r0, #1
   2d524:	moveq	r0, #0
   2d528:	str	r0, [sp, #20]
   2d52c:	ldr	r0, [fp, #-8]
   2d530:	ldr	r1, [fp, #-12]
   2d534:	ldr	r2, [fp, #-16]
   2d538:	str	ip, [sp, #12]
   2d53c:	bl	2cae0 <flatcc_json_parser_float@@Base+0x300>
   2d540:	str	r0, [fp, #-12]
   2d544:	ldr	r0, [fp, #-8]
   2d548:	ldr	r1, [fp, #-12]
   2d54c:	str	r1, [fp, #-24]	; 0xffffffe8
   2d550:	ldr	r2, [fp, #-16]
   2d554:	bl	2ac5c <flatcc_json_parser_string_part@@Base>
   2d558:	str	r0, [fp, #-12]
   2d55c:	ldr	r0, [fp, #-12]
   2d560:	ldr	r1, [fp, #-16]
   2d564:	cmp	r0, r1
   2d568:	beq	2d57c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   2d56c:	ldr	r0, [fp, #-12]
   2d570:	ldrb	r0, [r0]
   2d574:	cmp	r0, #34	; 0x22
   2d578:	beq	2d580 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x94>
   2d57c:	b	2d704 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   2d580:	ldr	r0, [fp, #-12]
   2d584:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d588:	sub	r0, r0, r1
   2d58c:	bl	2d74c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x260>
   2d590:	str	r0, [sp, #32]
   2d594:	ldr	r0, [fp, #-8]
   2d598:	ldr	r0, [r0]
   2d59c:	movw	r1, #1
   2d5a0:	movw	r2, #1
   2d5a4:	uxth	r2, r2
   2d5a8:	mvn	r3, #0
   2d5ac:	bl	25980 <flatcc_builder_start_vector@@Base>
   2d5b0:	cmp	r0, #0
   2d5b4:	beq	2d5bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd0>
   2d5b8:	b	2d6dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   2d5bc:	ldr	r0, [fp, #-8]
   2d5c0:	ldr	r0, [r0]
   2d5c4:	ldr	r1, [sp, #32]
   2d5c8:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   2d5cc:	str	r0, [fp, #-28]	; 0xffffffe4
   2d5d0:	movw	r1, #0
   2d5d4:	cmp	r0, r1
   2d5d8:	bne	2d5e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf4>
   2d5dc:	b	2d6dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   2d5e0:	ldr	r0, [fp, #-12]
   2d5e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d5e8:	sub	r0, r0, r1
   2d5ec:	str	r0, [sp, #24]
   2d5f0:	ldr	r0, [sp, #32]
   2d5f4:	str	r0, [sp, #28]
   2d5f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d5fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d600:	ldr	r2, [sp, #20]
   2d604:	add	r3, sp, #28
   2d608:	str	r2, [sp, #8]
   2d60c:	mov	r2, r3
   2d610:	add	r3, sp, #24
   2d614:	ldr	ip, [sp, #8]
   2d618:	str	ip, [sp]
   2d61c:	bl	2d7dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f0>
   2d620:	str	r0, [sp, #16]
   2d624:	cmp	r0, #0
   2d628:	beq	2d640 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   2d62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d630:	ldr	r1, [sp, #24]
   2d634:	add	r0, r0, r1
   2d638:	str	r0, [fp, #-12]
   2d63c:	b	2d704 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   2d640:	ldr	r0, [sp, #24]
   2d644:	ldr	r1, [fp, #-12]
   2d648:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d64c:	sub	r1, r1, r2
   2d650:	cmp	r0, r1
   2d654:	beq	2d66c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   2d658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d65c:	ldr	r1, [sp, #24]
   2d660:	add	r0, r0, r1
   2d664:	str	r0, [fp, #-12]
   2d668:	b	2d704 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   2d66c:	ldr	r0, [sp, #28]
   2d670:	ldr	r1, [sp, #32]
   2d674:	cmp	r0, r1
   2d678:	bcs	2d6a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   2d67c:	ldr	r0, [fp, #-8]
   2d680:	ldr	r0, [r0]
   2d684:	ldr	r1, [sp, #32]
   2d688:	ldr	r2, [sp, #28]
   2d68c:	sub	r1, r1, r2
   2d690:	bl	25618 <flatcc_builder_truncate_vector@@Base>
   2d694:	cmp	r0, #0
   2d698:	beq	2d6a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b4>
   2d69c:	b	2d6dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   2d6a0:	b	2d6a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   2d6a4:	ldr	r0, [fp, #-8]
   2d6a8:	ldr	r0, [r0]
   2d6ac:	bl	26e60 <flatcc_builder_end_vector@@Base>
   2d6b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d6b4:	str	r0, [r1]
   2d6b8:	cmp	r0, #0
   2d6bc:	bne	2d6c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d8>
   2d6c0:	b	2d6dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   2d6c4:	ldr	r0, [fp, #-8]
   2d6c8:	ldr	r1, [fp, #-12]
   2d6cc:	ldr	r2, [fp, #-16]
   2d6d0:	bl	2cb50 <flatcc_json_parser_float@@Base+0x370>
   2d6d4:	str	r0, [fp, #-4]
   2d6d8:	b	2d740 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   2d6dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d6e0:	movw	r1, #0
   2d6e4:	str	r1, [r0]
   2d6e8:	ldr	r0, [fp, #-8]
   2d6ec:	ldr	r1, [fp, #-12]
   2d6f0:	ldr	r2, [fp, #-16]
   2d6f4:	movw	r3, #33	; 0x21
   2d6f8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2d6fc:	str	r0, [fp, #-4]
   2d700:	b	2d740 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   2d704:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d708:	movw	r1, #0
   2d70c:	str	r1, [r0]
   2d710:	ldr	r0, [fp, #-8]
   2d714:	ldr	r1, [fp, #-12]
   2d718:	ldr	r2, [fp, #-16]
   2d71c:	ldr	r3, [fp, #8]
   2d720:	cmp	r3, #0
   2d724:	movw	r3, #0
   2d728:	movne	r3, #1
   2d72c:	tst	r3, #1
   2d730:	movw	r3, #32
   2d734:	moveq	r3, #31
   2d738:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2d73c:	str	r0, [fp, #-4]
   2d740:	ldr	r0, [fp, #-4]
   2d744:	mov	sp, fp
   2d748:	pop	{fp, pc}
   2d74c:	sub	sp, sp, #20
   2d750:	str	r0, [sp, #12]
   2d754:	ldr	r0, [sp, #12]
   2d758:	and	r0, r0, #3
   2d75c:	str	r0, [sp, #8]
   2d760:	ldr	r0, [sp, #12]
   2d764:	lsr	r0, r0, #2
   2d768:	add	r0, r0, r0, lsl #1
   2d76c:	str	r0, [sp, #4]
   2d770:	ldr	r0, [sp, #8]
   2d774:	cmp	r0, #2
   2d778:	str	r0, [sp]
   2d77c:	bcc	2d7c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   2d780:	b	2d784 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x298>
   2d784:	ldr	r0, [sp]
   2d788:	cmp	r0, #2
   2d78c:	beq	2d7b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c8>
   2d790:	b	2d794 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2a8>
   2d794:	ldr	r0, [sp]
   2d798:	cmp	r0, #3
   2d79c:	bne	2d7c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   2d7a0:	b	2d7a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b8>
   2d7a4:	ldr	r0, [sp, #4]
   2d7a8:	add	r0, r0, #2
   2d7ac:	str	r0, [sp, #16]
   2d7b0:	b	2d7d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   2d7b4:	ldr	r0, [sp, #4]
   2d7b8:	add	r0, r0, #1
   2d7bc:	str	r0, [sp, #16]
   2d7c0:	b	2d7d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   2d7c4:	b	2d7c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   2d7c8:	ldr	r0, [sp, #4]
   2d7cc:	str	r0, [sp, #16]
   2d7d0:	ldr	r0, [sp, #16]
   2d7d4:	add	sp, sp, #20
   2d7d8:	bx	lr
   2d7dc:	push	{fp, lr}
   2d7e0:	mov	fp, sp
   2d7e4:	sub	sp, sp, #68	; 0x44
   2d7e8:	ldr	ip, [fp, #8]
   2d7ec:	ldr	lr, [pc, #1276]	; 2dcf0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x804>
   2d7f0:	add	lr, pc, lr
   2d7f4:	str	r0, [fp, #-4]
   2d7f8:	str	r1, [fp, #-8]
   2d7fc:	str	r2, [fp, #-12]
   2d800:	str	r3, [fp, #-16]
   2d804:	movw	r0, #0
   2d808:	str	r0, [fp, #-20]	; 0xffffffec
   2d80c:	ldr	r1, [fp, #-4]
   2d810:	str	r1, [sp, #32]
   2d814:	mvn	r1, #0
   2d818:	str	r1, [sp, #28]
   2d81c:	str	r1, [sp, #24]
   2d820:	str	lr, [sp, #16]
   2d824:	ldr	r1, [fp, #8]
   2d828:	and	r1, r1, #32
   2d82c:	str	r1, [sp, #12]
   2d830:	ldr	r1, [fp, #-16]
   2d834:	cmp	r1, r0
   2d838:	beq	2d848 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35c>
   2d83c:	ldr	r0, [fp, #-16]
   2d840:	ldr	r0, [r0]
   2d844:	str	r0, [sp, #24]
   2d848:	ldr	r0, [sp, #24]
   2d84c:	str	r0, [sp, #20]
   2d850:	ldr	r0, [fp, #8]
   2d854:	bic	r0, r0, #224	; 0xe0
   2d858:	str	r0, [fp, #8]
   2d85c:	ldr	r0, [fp, #8]
   2d860:	cmp	r0, #0
   2d864:	str	r0, [sp, #8]
   2d868:	beq	2d880 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
   2d86c:	b	2d870 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x384>
   2d870:	ldr	r0, [sp, #8]
   2d874:	cmp	r0, #1
   2d878:	beq	2d8b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   2d87c:	b	2d8e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f4>
   2d880:	ldr	r0, [pc, #1140]	; 2dcfc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x810>
   2d884:	add	r0, pc, r0
   2d888:	ldr	r1, [pc, #1136]	; 2dd00 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x814>
   2d88c:	add	r1, pc, r1
   2d890:	ldr	r2, [sp, #12]
   2d894:	cmp	r2, #0
   2d898:	movw	r2, #0
   2d89c:	movne	r2, #1
   2d8a0:	tst	r2, #1
   2d8a4:	movne	r1, r0
   2d8a8:	str	r1, [sp, #16]
   2d8ac:	b	2d8ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x400>
   2d8b0:	ldr	r0, [pc, #1084]	; 2dcf4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x808>
   2d8b4:	add	r0, pc, r0
   2d8b8:	ldr	r1, [pc, #1080]	; 2dcf8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x80c>
   2d8bc:	add	r1, pc, r1
   2d8c0:	ldr	r2, [sp, #12]
   2d8c4:	cmp	r2, #0
   2d8c8:	movw	r2, #0
   2d8cc:	movne	r2, #1
   2d8d0:	tst	r2, #1
   2d8d4:	movne	r1, r0
   2d8d8:	str	r1, [sp, #16]
   2d8dc:	b	2d8ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x400>
   2d8e0:	movw	r0, #3
   2d8e4:	str	r0, [fp, #-20]	; 0xffffffec
   2d8e8:	b	2db70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   2d8ec:	ldr	r0, [fp, #-12]
   2d8f0:	movw	r1, #0
   2d8f4:	cmp	r0, r1
   2d8f8:	beq	2d918 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x42c>
   2d8fc:	ldr	r0, [fp, #-12]
   2d900:	ldr	r0, [r0]
   2d904:	cmp	r0, #0
   2d908:	bls	2d918 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x42c>
   2d90c:	ldr	r0, [fp, #-12]
   2d910:	ldr	r0, [r0]
   2d914:	str	r0, [sp, #28]
   2d918:	b	2d91c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   2d91c:	ldr	r0, [sp, #28]
   2d920:	cmp	r0, #0
   2d924:	bls	2db6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x680>
   2d928:	movw	r0, #0
   2d92c:	str	r0, [fp, #-24]	; 0xffffffe8
   2d930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d934:	cmp	r0, #4
   2d938:	bcs	2dad0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5e4>
   2d93c:	ldr	r0, [sp, #24]
   2d940:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d944:	cmp	r0, r1
   2d948:	bne	2d968 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x47c>
   2d94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d950:	str	r0, [fp, #-28]	; 0xffffffe4
   2d954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d958:	ldr	r1, [sp, #24]
   2d95c:	sub	r0, r1, r0
   2d960:	str	r0, [sp, #24]
   2d964:	b	2dbc4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6d8>
   2d968:	ldr	r0, [sp, #16]
   2d96c:	ldr	r1, [fp, #-8]
   2d970:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d974:	add	r1, r1, r2
   2d978:	ldrb	r1, [r1]
   2d97c:	add	r0, r0, r1
   2d980:	ldrb	r0, [r0]
   2d984:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d988:	sub	r2, fp, #32
   2d98c:	add	r1, r2, r1
   2d990:	strb	r0, [r1]
   2d994:	and	r0, r0, #255	; 0xff
   2d998:	cmp	r0, #64	; 0x40
   2d99c:	blt	2dabc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d0>
   2d9a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d9a4:	sub	r1, fp, #32
   2d9a8:	add	r0, r1, r0
   2d9ac:	ldrb	r0, [r0]
   2d9b0:	cmp	r0, #65	; 0x41
   2d9b4:	bne	2d9e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4f8>
   2d9b8:	ldr	r0, [fp, #-8]
   2d9bc:	add	r0, r0, #1
   2d9c0:	str	r0, [fp, #-8]
   2d9c4:	ldr	r0, [sp, #24]
   2d9c8:	mvn	r1, #0
   2d9cc:	add	r0, r0, r1
   2d9d0:	str	r0, [sp, #24]
   2d9d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d9d8:	add	r0, r0, r1
   2d9dc:	str	r0, [fp, #-24]	; 0xffffffe8
   2d9e0:	b	2dac0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d4>
   2d9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d9e8:	str	r0, [fp, #-28]	; 0xffffffe4
   2d9ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d9f0:	sub	r1, fp, #32
   2d9f4:	add	r0, r1, r0
   2d9f8:	ldrb	r0, [r0]
   2d9fc:	cmp	r0, #66	; 0x42
   2da00:	bne	2daa8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   2da04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da08:	add	r0, r0, #1
   2da0c:	str	r0, [fp, #-24]	; 0xffffffe8
   2da10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da14:	ldr	r1, [sp, #24]
   2da18:	cmp	r0, r1
   2da1c:	movw	r0, #0
   2da20:	str	r0, [sp, #4]
   2da24:	bcs	2da3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x550>
   2da28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da2c:	cmp	r0, #8
   2da30:	movw	r0, #0
   2da34:	movcc	r0, #1
   2da38:	str	r0, [sp, #4]
   2da3c:	ldr	r0, [sp, #4]
   2da40:	tst	r0, #1
   2da44:	beq	2daa4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5b8>
   2da48:	ldr	r0, [sp, #16]
   2da4c:	ldr	r1, [fp, #-8]
   2da50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2da54:	add	r1, r1, r2
   2da58:	ldrb	r1, [r1]
   2da5c:	add	r0, r0, r1
   2da60:	ldrb	r0, [r0]
   2da64:	cmp	r0, #66	; 0x42
   2da68:	beq	2da94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5a8>
   2da6c:	ldr	r0, [sp, #16]
   2da70:	ldr	r1, [fp, #-8]
   2da74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2da78:	add	r1, r1, r2
   2da7c:	ldrb	r1, [r1]
   2da80:	add	r0, r0, r1
   2da84:	ldrb	r0, [r0]
   2da88:	cmp	r0, #65	; 0x41
   2da8c:	beq	2da94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5a8>
   2da90:	b	2daa4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5b8>
   2da94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2da98:	add	r0, r0, #1
   2da9c:	str	r0, [fp, #-24]	; 0xffffffe8
   2daa0:	b	2da10 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x524>
   2daa4:	b	2daa8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   2daa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2daac:	ldr	r1, [sp, #24]
   2dab0:	sub	r0, r1, r0
   2dab4:	str	r0, [sp, #24]
   2dab8:	b	2dbc4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6d8>
   2dabc:	b	2dac0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d4>
   2dac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dac4:	add	r0, r0, #1
   2dac8:	str	r0, [fp, #-24]	; 0xffffffe8
   2dacc:	b	2d930 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x444>
   2dad0:	ldr	r0, [sp, #28]
   2dad4:	cmp	r0, #3
   2dad8:	bcs	2dae0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5f4>
   2dadc:	b	2dce4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f8>
   2dae0:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   2dae4:	lsl	r0, r0, #2
   2dae8:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   2daec:	asr	r1, r1, #4
   2daf0:	orr	r0, r0, r1
   2daf4:	ldr	r1, [fp, #-4]
   2daf8:	strb	r0, [r1]
   2dafc:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   2db00:	lsl	r0, r0, #4
   2db04:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   2db08:	asr	r1, r1, #2
   2db0c:	orr	r0, r0, r1
   2db10:	ldr	r1, [fp, #-4]
   2db14:	strb	r0, [r1, #1]
   2db18:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   2db1c:	lsl	r0, r0, #6
   2db20:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   2db24:	orr	r0, r0, r1
   2db28:	ldr	r1, [fp, #-4]
   2db2c:	strb	r0, [r1, #2]
   2db30:	ldr	r0, [fp, #-4]
   2db34:	add	r0, r0, #3
   2db38:	str	r0, [fp, #-4]
   2db3c:	ldr	r0, [fp, #-8]
   2db40:	add	r0, r0, #4
   2db44:	str	r0, [fp, #-8]
   2db48:	ldr	r0, [sp, #28]
   2db4c:	sub	r0, r0, #3
   2db50:	str	r0, [sp, #28]
   2db54:	ldr	r0, [sp, #24]
   2db58:	sub	r0, r0, #4
   2db5c:	str	r0, [sp, #24]
   2db60:	ldr	r0, [sp, #24]
   2db64:	str	r0, [sp, #20]
   2db68:	b	2d91c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   2db6c:	b	2db70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   2db70:	ldr	r0, [fp, #-12]
   2db74:	movw	r1, #0
   2db78:	cmp	r0, r1
   2db7c:	beq	2db94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a8>
   2db80:	ldr	r0, [fp, #-4]
   2db84:	ldr	r1, [sp, #32]
   2db88:	sub	r0, r0, r1
   2db8c:	ldr	r1, [fp, #-12]
   2db90:	str	r0, [r1]
   2db94:	ldr	r0, [fp, #-16]
   2db98:	movw	r1, #0
   2db9c:	cmp	r0, r1
   2dba0:	beq	2dbb8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6cc>
   2dba4:	ldr	r0, [sp, #20]
   2dba8:	ldr	r1, [fp, #-16]
   2dbac:	ldr	r2, [r1]
   2dbb0:	sub	r0, r2, r0
   2dbb4:	str	r0, [r1]
   2dbb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2dbbc:	mov	sp, fp
   2dbc0:	pop	{fp, pc}
   2dbc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2dbc8:	cmp	r0, #0
   2dbcc:	str	r0, [sp]
   2dbd0:	beq	2dbf8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x70c>
   2dbd4:	b	2dbd8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6ec>
   2dbd8:	ldr	r0, [sp]
   2dbdc:	cmp	r0, #2
   2dbe0:	beq	2dbfc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x710>
   2dbe4:	b	2dbe8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6fc>
   2dbe8:	ldr	r0, [sp]
   2dbec:	cmp	r0, #3
   2dbf0:	beq	2dc50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x764>
   2dbf4:	b	2dcc0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7d4>
   2dbf8:	b	2dccc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e0>
   2dbfc:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   2dc00:	lsl	r0, r0, #4
   2dc04:	and	r0, r0, #255	; 0xff
   2dc08:	cmp	r0, #0
   2dc0c:	beq	2dc14 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x728>
   2dc10:	b	2dcd8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7ec>
   2dc14:	ldr	r0, [sp, #28]
   2dc18:	cmp	r0, #1
   2dc1c:	bcs	2dc24 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x738>
   2dc20:	b	2dce4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f8>
   2dc24:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   2dc28:	lsl	r0, r0, #2
   2dc2c:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   2dc30:	asr	r1, r1, #4
   2dc34:	orr	r0, r0, r1
   2dc38:	ldr	r1, [fp, #-4]
   2dc3c:	strb	r0, [r1]
   2dc40:	ldr	r0, [fp, #-4]
   2dc44:	add	r0, r0, #1
   2dc48:	str	r0, [fp, #-4]
   2dc4c:	b	2dccc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e0>
   2dc50:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   2dc54:	lsl	r0, r0, #6
   2dc58:	and	r0, r0, #255	; 0xff
   2dc5c:	cmp	r0, #0
   2dc60:	beq	2dc68 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x77c>
   2dc64:	b	2dcd8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7ec>
   2dc68:	ldr	r0, [sp, #28]
   2dc6c:	cmp	r0, #2
   2dc70:	bcs	2dc78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x78c>
   2dc74:	b	2dce4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f8>
   2dc78:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   2dc7c:	lsl	r0, r0, #2
   2dc80:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   2dc84:	asr	r1, r1, #4
   2dc88:	orr	r0, r0, r1
   2dc8c:	ldr	r1, [fp, #-4]
   2dc90:	strb	r0, [r1]
   2dc94:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   2dc98:	lsl	r0, r0, #4
   2dc9c:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   2dca0:	asr	r1, r1, #2
   2dca4:	orr	r0, r0, r1
   2dca8:	ldr	r1, [fp, #-4]
   2dcac:	strb	r0, [r1, #1]
   2dcb0:	ldr	r0, [fp, #-4]
   2dcb4:	add	r0, r0, #2
   2dcb8:	str	r0, [fp, #-4]
   2dcbc:	b	2dccc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e0>
   2dcc0:	movw	r0, #4
   2dcc4:	str	r0, [fp, #-20]	; 0xffffffec
   2dcc8:	b	2db70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   2dccc:	ldr	r0, [sp, #24]
   2dcd0:	str	r0, [sp, #20]
   2dcd4:	b	2db70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   2dcd8:	movw	r0, #5
   2dcdc:	str	r0, [fp, #-20]	; 0xffffffec
   2dce0:	b	2db70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   2dce4:	movw	r0, #1
   2dce8:	str	r0, [fp, #-20]	; 0xffffffec
   2dcec:	b	2db70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   2dcf0:	andeq	r5, r0, r3, asr r8
   2dcf4:	andeq	r5, r0, pc, lsl #21
   2dcf8:	andeq	r5, r0, r7, lsl #17
   2dcfc:			; <UNDEFINED> instruction: 0x000059bf
   2dd00:			; <UNDEFINED> instruction: 0x000057b7

0002dd04 <flatcc_json_parser_build_string@@Base>:
   2dd04:	push	{fp, lr}
   2dd08:	mov	fp, sp
   2dd0c:	sub	sp, sp, #40	; 0x28
   2dd10:	str	r0, [fp, #-8]
   2dd14:	str	r1, [fp, #-12]
   2dd18:	str	r2, [fp, #-16]
   2dd1c:	str	r3, [sp, #20]
   2dd20:	ldr	r0, [fp, #-8]
   2dd24:	ldr	r1, [fp, #-12]
   2dd28:	ldr	r2, [fp, #-16]
   2dd2c:	bl	2cae0 <flatcc_json_parser_float@@Base+0x300>
   2dd30:	str	r0, [fp, #-12]
   2dd34:	ldr	r0, [fp, #-8]
   2dd38:	ldr	r1, [fp, #-12]
   2dd3c:	str	r1, [sp, #12]
   2dd40:	ldr	r2, [fp, #-16]
   2dd44:	bl	2ac5c <flatcc_json_parser_string_part@@Base>
   2dd48:	str	r0, [fp, #-12]
   2dd4c:	ldr	r0, [fp, #-12]
   2dd50:	ldr	r1, [fp, #-16]
   2dd54:	cmp	r0, r1
   2dd58:	beq	2dd94 <flatcc_json_parser_build_string@@Base+0x90>
   2dd5c:	ldr	r0, [fp, #-12]
   2dd60:	ldrb	r0, [r0]
   2dd64:	cmp	r0, #34	; 0x22
   2dd68:	bne	2dd94 <flatcc_json_parser_build_string@@Base+0x90>
   2dd6c:	ldr	r0, [fp, #-8]
   2dd70:	ldr	r0, [r0]
   2dd74:	ldr	r1, [sp, #12]
   2dd78:	ldr	r2, [fp, #-12]
   2dd7c:	ldr	r3, [sp, #12]
   2dd80:	sub	r2, r2, r3
   2dd84:	bl	28118 <flatcc_builder_create_string@@Base>
   2dd88:	ldr	r1, [sp, #20]
   2dd8c:	str	r0, [r1]
   2dd90:	b	2ded4 <flatcc_json_parser_build_string@@Base+0x1d0>
   2dd94:	ldr	r0, [fp, #-8]
   2dd98:	ldr	r0, [r0]
   2dd9c:	bl	25c14 <flatcc_builder_start_string@@Base>
   2dda0:	cmp	r0, #0
   2dda4:	bne	2ddd0 <flatcc_json_parser_build_string@@Base+0xcc>
   2dda8:	ldr	r0, [fp, #-8]
   2ddac:	ldr	r0, [r0]
   2ddb0:	ldr	r1, [sp, #12]
   2ddb4:	ldr	r2, [fp, #-12]
   2ddb8:	ldr	r3, [sp, #12]
   2ddbc:	sub	r2, r2, r3
   2ddc0:	bl	2546c <flatcc_builder_append_string@@Base>
   2ddc4:	movw	r1, #0
   2ddc8:	cmp	r1, r0
   2ddcc:	bne	2ddd4 <flatcc_json_parser_build_string@@Base+0xd0>
   2ddd0:	b	2deec <flatcc_json_parser_build_string@@Base+0x1e8>
   2ddd4:	b	2ddd8 <flatcc_json_parser_build_string@@Base+0xd4>
   2ddd8:	ldr	r0, [fp, #-12]
   2dddc:	ldr	r1, [fp, #-16]
   2dde0:	cmp	r0, r1
   2dde4:	movw	r0, #0
   2dde8:	str	r0, [sp, #8]
   2ddec:	beq	2de08 <flatcc_json_parser_build_string@@Base+0x104>
   2ddf0:	ldr	r0, [fp, #-12]
   2ddf4:	ldrb	r0, [r0]
   2ddf8:	cmp	r0, #34	; 0x22
   2ddfc:	movw	r0, #0
   2de00:	movne	r0, #1
   2de04:	str	r0, [sp, #8]
   2de08:	ldr	r0, [sp, #8]
   2de0c:	tst	r0, #1
   2de10:	beq	2dec0 <flatcc_json_parser_build_string@@Base+0x1bc>
   2de14:	add	r3, sp, #16
   2de18:	ldr	r0, [fp, #-8]
   2de1c:	ldr	r1, [fp, #-12]
   2de20:	ldr	r2, [fp, #-16]
   2de24:	bl	2af5c <flatcc_json_parser_string_escape@@Base>
   2de28:	add	r1, sp, #16
   2de2c:	str	r0, [fp, #-12]
   2de30:	ldr	r0, [fp, #-8]
   2de34:	ldr	r0, [r0]
   2de38:	add	r1, r1, #1
   2de3c:	ldrb	r2, [sp, #16]
   2de40:	bl	2546c <flatcc_builder_append_string@@Base>
   2de44:	movw	r1, #0
   2de48:	cmp	r1, r0
   2de4c:	bne	2de54 <flatcc_json_parser_build_string@@Base+0x150>
   2de50:	b	2deec <flatcc_json_parser_build_string@@Base+0x1e8>
   2de54:	ldr	r0, [fp, #-16]
   2de58:	ldr	r1, [fp, #-8]
   2de5c:	ldr	r2, [fp, #-12]
   2de60:	str	r2, [sp, #12]
   2de64:	ldr	r3, [fp, #-16]
   2de68:	str	r0, [sp, #4]
   2de6c:	mov	r0, r1
   2de70:	mov	r1, r2
   2de74:	mov	r2, r3
   2de78:	bl	2ac5c <flatcc_json_parser_string_part@@Base>
   2de7c:	str	r0, [fp, #-12]
   2de80:	ldr	r1, [sp, #4]
   2de84:	cmp	r1, r0
   2de88:	beq	2debc <flatcc_json_parser_build_string@@Base+0x1b8>
   2de8c:	ldr	r0, [fp, #-8]
   2de90:	ldr	r0, [r0]
   2de94:	ldr	r1, [sp, #12]
   2de98:	ldr	r2, [fp, #-12]
   2de9c:	ldr	r3, [sp, #12]
   2dea0:	sub	r2, r2, r3
   2dea4:	bl	2546c <flatcc_builder_append_string@@Base>
   2dea8:	movw	r1, #0
   2deac:	cmp	r1, r0
   2deb0:	bne	2deb8 <flatcc_json_parser_build_string@@Base+0x1b4>
   2deb4:	b	2deec <flatcc_json_parser_build_string@@Base+0x1e8>
   2deb8:	b	2debc <flatcc_json_parser_build_string@@Base+0x1b8>
   2debc:	b	2ddd8 <flatcc_json_parser_build_string@@Base+0xd4>
   2dec0:	ldr	r0, [fp, #-8]
   2dec4:	ldr	r0, [r0]
   2dec8:	bl	28320 <flatcc_builder_end_string@@Base>
   2decc:	ldr	r1, [sp, #20]
   2ded0:	str	r0, [r1]
   2ded4:	ldr	r0, [fp, #-8]
   2ded8:	ldr	r1, [fp, #-12]
   2dedc:	ldr	r2, [fp, #-16]
   2dee0:	bl	2cb50 <flatcc_json_parser_float@@Base+0x370>
   2dee4:	str	r0, [fp, #-4]
   2dee8:	b	2df00 <flatcc_json_parser_build_string@@Base+0x1fc>
   2deec:	ldr	r0, [sp, #20]
   2def0:	movw	r1, #0
   2def4:	str	r1, [r0]
   2def8:	ldr	r0, [fp, #-12]
   2defc:	str	r0, [fp, #-4]
   2df00:	ldr	r0, [fp, #-4]
   2df04:	mov	sp, fp
   2df08:	pop	{fp, pc}

0002df0c <flatcc_json_parser_prepare_unions@@Base>:
   2df0c:	push	{fp, lr}
   2df10:	mov	fp, sp
   2df14:	sub	sp, sp, #32
   2df18:	ldr	ip, [fp, #8]
   2df1c:	str	r0, [fp, #-8]
   2df20:	str	r1, [fp, #-12]
   2df24:	str	r2, [sp, #16]
   2df28:	str	r3, [sp, #12]
   2df2c:	ldr	r0, [fp, #-8]
   2df30:	ldr	r0, [r0]
   2df34:	ldr	r1, [sp, #12]
   2df38:	sub	r1, r1, #1
   2df3c:	movw	r2, #24
   2df40:	mul	r1, r1, r2
   2df44:	add	r1, r1, #32
   2df48:	str	ip, [sp, #4]
   2df4c:	bl	23ac0 <flatcc_builder_enter_user_frame@@Base>
   2df50:	ldr	r1, [fp, #8]
   2df54:	str	r0, [r1]
   2df58:	cmp	r0, #0
   2df5c:	bne	2df7c <flatcc_json_parser_prepare_unions@@Base+0x70>
   2df60:	ldr	r0, [fp, #-8]
   2df64:	ldr	r1, [fp, #-12]
   2df68:	ldr	r2, [sp, #16]
   2df6c:	movw	r3, #33	; 0x21
   2df70:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2df74:	str	r0, [fp, #-4]
   2df78:	b	2dfa8 <flatcc_json_parser_prepare_unions@@Base+0x9c>
   2df7c:	ldr	r0, [fp, #-8]
   2df80:	ldr	r0, [r0]
   2df84:	ldr	r1, [fp, #8]
   2df88:	ldr	r1, [r1]
   2df8c:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2df90:	str	r0, [sp, #8]
   2df94:	ldr	r0, [sp, #12]
   2df98:	ldr	r1, [sp, #8]
   2df9c:	str	r0, [r1]
   2dfa0:	ldr	r0, [fp, #-12]
   2dfa4:	str	r0, [fp, #-4]
   2dfa8:	ldr	r0, [fp, #-4]
   2dfac:	mov	sp, fp
   2dfb0:	pop	{fp, pc}

0002dfb4 <flatcc_json_parser_finalize_unions@@Base>:
   2dfb4:	push	{fp, lr}
   2dfb8:	mov	fp, sp
   2dfbc:	sub	sp, sp, #24
   2dfc0:	str	r0, [fp, #-4]
   2dfc4:	str	r1, [fp, #-8]
   2dfc8:	str	r2, [sp, #12]
   2dfcc:	str	r3, [sp, #8]
   2dfd0:	ldr	r0, [fp, #-4]
   2dfd4:	ldr	r0, [r0]
   2dfd8:	ldr	r1, [sp, #8]
   2dfdc:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2dfe0:	str	r0, [sp, #4]
   2dfe4:	ldr	r0, [sp, #4]
   2dfe8:	ldr	r0, [r0, #4]
   2dfec:	cmp	r0, #0
   2dff0:	beq	2e00c <flatcc_json_parser_finalize_unions@@Base+0x58>
   2dff4:	ldr	r0, [fp, #-4]
   2dff8:	ldr	r1, [fp, #-8]
   2dffc:	ldr	r2, [sp, #12]
   2e000:	movw	r3, #27
   2e004:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e008:	str	r0, [fp, #-8]
   2e00c:	ldr	r0, [fp, #-4]
   2e010:	ldr	r0, [r0]
   2e014:	ldr	r1, [sp, #8]
   2e018:	bl	23c34 <flatcc_builder_exit_user_frame_at@@Base>
   2e01c:	ldr	r1, [fp, #-8]
   2e020:	str	r0, [sp]
   2e024:	mov	r0, r1
   2e028:	mov	sp, fp
   2e02c:	pop	{fp, pc}

0002e030 <flatcc_json_parser_union@@Base>:
   2e030:	push	{r4, sl, fp, lr}
   2e034:	add	fp, sp, #8
   2e038:	sub	sp, sp, #56	; 0x38
   2e03c:	ldr	ip, [fp, #16]
   2e040:	ldr	lr, [fp, #12]
   2e044:	ldr	r4, [fp, #8]
   2e048:	str	r0, [fp, #-16]
   2e04c:	str	r1, [fp, #-20]	; 0xffffffec
   2e050:	str	r2, [fp, #-24]	; 0xffffffe8
   2e054:	str	r3, [fp, #-28]	; 0xffffffe4
   2e058:	strh	r4, [fp, #-30]	; 0xffffffe2
   2e05c:	ldr	r0, [fp, #-16]
   2e060:	ldr	r0, [r0]
   2e064:	ldr	r1, [fp, #12]
   2e068:	str	ip, [sp, #12]
   2e06c:	str	lr, [sp, #8]
   2e070:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2e074:	str	r0, [sp, #28]
   2e078:	ldr	r0, [sp, #28]
   2e07c:	add	r0, r0, #8
   2e080:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e084:	movw	r2, #24
   2e088:	mul	r1, r1, r2
   2e08c:	add	r0, r0, r1
   2e090:	str	r0, [sp, #24]
   2e094:	ldr	r0, [sp, #24]
   2e098:	ldr	r0, [r0]
   2e09c:	movw	r1, #0
   2e0a0:	cmp	r0, r1
   2e0a4:	beq	2e0c4 <flatcc_json_parser_union@@Base+0x94>
   2e0a8:	ldr	r0, [fp, #-16]
   2e0ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e0b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e0b4:	movw	r3, #28
   2e0b8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e0bc:	str	r0, [fp, #-12]
   2e0c0:	b	2e210 <flatcc_json_parser_union@@Base+0x1e0>
   2e0c4:	ldr	r0, [sp, #24]
   2e0c8:	ldrsb	r0, [r0, #12]
   2e0cc:	cmp	r0, #0
   2e0d0:	bne	2e124 <flatcc_json_parser_union@@Base+0xf4>
   2e0d4:	ldr	r0, [sp, #28]
   2e0d8:	ldr	r1, [r0, #4]
   2e0dc:	add	r1, r1, #1
   2e0e0:	str	r1, [r0, #4]
   2e0e4:	ldr	r0, [fp, #-16]
   2e0e8:	ldr	r0, [r0, #16]
   2e0ec:	ldr	r1, [sp, #24]
   2e0f0:	str	r0, [r1, #8]
   2e0f4:	ldr	r0, [fp, #-16]
   2e0f8:	ldr	r0, [r0, #4]
   2e0fc:	ldr	r1, [sp, #24]
   2e100:	str	r0, [r1, #4]
   2e104:	ldr	r0, [fp, #-16]
   2e108:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e10c:	ldr	r2, [sp, #24]
   2e110:	str	r1, [r2]
   2e114:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e118:	bl	2c024 <flatcc_json_parser_generic_json@@Base>
   2e11c:	str	r0, [fp, #-20]	; 0xffffffec
   2e120:	b	2e208 <flatcc_json_parser_union@@Base+0x1d8>
   2e124:	ldr	r0, [sp, #24]
   2e128:	ldrb	r0, [r0, #13]
   2e12c:	strb	r0, [sp, #16]
   2e130:	ldr	r0, [sp, #24]
   2e134:	ldrb	r0, [r0, #13]
   2e138:	cmp	r0, #0
   2e13c:	bne	2e15c <flatcc_json_parser_union@@Base+0x12c>
   2e140:	ldr	r0, [fp, #-16]
   2e144:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e148:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e14c:	movw	r3, #25
   2e150:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e154:	str	r0, [fp, #-12]
   2e158:	b	2e210 <flatcc_json_parser_union@@Base+0x1e0>
   2e15c:	ldr	r0, [sp, #28]
   2e160:	ldr	r1, [r0, #4]
   2e164:	mvn	r2, #0
   2e168:	add	r1, r1, r2
   2e16c:	str	r1, [r0, #4]
   2e170:	ldr	r0, [fp, #16]
   2e174:	ldr	r1, [fp, #-16]
   2e178:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e17c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e180:	ldr	ip, [sp, #24]
   2e184:	ldrb	ip, [ip, #13]
   2e188:	add	lr, sp, #16
   2e18c:	add	lr, lr, #4
   2e190:	str	r0, [sp, #4]
   2e194:	mov	r0, r1
   2e198:	mov	r1, r2
   2e19c:	mov	r2, r3
   2e1a0:	and	r3, ip, #255	; 0xff
   2e1a4:	str	lr, [sp]
   2e1a8:	ldr	ip, [sp, #4]
   2e1ac:	blx	ip
   2e1b0:	str	r0, [fp, #-20]	; 0xffffffec
   2e1b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e1b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e1bc:	cmp	r0, r1
   2e1c0:	beq	2e204 <flatcc_json_parser_union@@Base+0x1d4>
   2e1c4:	ldr	r0, [fp, #-16]
   2e1c8:	ldr	r0, [r0]
   2e1cc:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2e1d0:	ldr	r2, [sp, #16]
   2e1d4:	ldr	r3, [sp, #20]
   2e1d8:	bl	27378 <flatcc_builder_table_add_union@@Base>
   2e1dc:	cmp	r0, #0
   2e1e0:	beq	2e200 <flatcc_json_parser_union@@Base+0x1d0>
   2e1e4:	ldr	r0, [fp, #-16]
   2e1e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e1ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e1f0:	movw	r3, #28
   2e1f4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e1f8:	str	r0, [fp, #-12]
   2e1fc:	b	2e210 <flatcc_json_parser_union@@Base+0x1e0>
   2e200:	b	2e204 <flatcc_json_parser_union@@Base+0x1d4>
   2e204:	b	2e208 <flatcc_json_parser_union@@Base+0x1d8>
   2e208:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e20c:	str	r0, [fp, #-12]
   2e210:	ldr	r0, [fp, #-12]
   2e214:	sub	sp, fp, #8
   2e218:	pop	{r4, sl, fp, pc}

0002e21c <flatcc_json_parser_union_type@@Base>:
   2e21c:	push	{r4, r5, fp, lr}
   2e220:	add	fp, sp, #8
   2e224:	sub	sp, sp, #80	; 0x50
   2e228:	ldr	ip, [fp, #20]
   2e22c:	ldr	lr, [fp, #16]
   2e230:	ldr	r4, [fp, #12]
   2e234:	ldr	r5, [fp, #8]
   2e238:	str	r0, [fp, #-16]
   2e23c:	str	r1, [fp, #-20]	; 0xffffffec
   2e240:	str	r2, [fp, #-24]	; 0xffffffe8
   2e244:	str	r3, [fp, #-28]	; 0xffffffe4
   2e248:	strh	r5, [fp, #-30]	; 0xffffffe2
   2e24c:	ldr	r0, [fp, #-16]
   2e250:	ldr	r0, [r0]
   2e254:	ldr	r1, [fp, #12]
   2e258:	str	ip, [sp, #24]
   2e25c:	str	lr, [sp, #20]
   2e260:	str	r4, [sp, #16]
   2e264:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2e268:	str	r0, [fp, #-36]	; 0xffffffdc
   2e26c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e270:	add	r0, r0, #8
   2e274:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e278:	movw	r2, #24
   2e27c:	mul	r1, r1, r2
   2e280:	add	r0, r0, r1
   2e284:	str	r0, [fp, #-40]	; 0xffffffd8
   2e288:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e28c:	ldrsb	r0, [r0, #12]
   2e290:	cmp	r0, #0
   2e294:	beq	2e2b4 <flatcc_json_parser_union_type@@Base+0x98>
   2e298:	ldr	r0, [fp, #-16]
   2e29c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e2a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e2a4:	movw	r3, #28
   2e2a8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e2ac:	str	r0, [fp, #-12]
   2e2b0:	b	2e4a8 <flatcc_json_parser_union_type@@Base+0x28c>
   2e2b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e2b8:	movw	r1, #1
   2e2bc:	strb	r1, [r0, #12]
   2e2c0:	ldr	r0, [fp, #-16]
   2e2c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e2c8:	str	r1, [sp, #36]	; 0x24
   2e2cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e2d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e2d4:	add	r3, r3, #13
   2e2d8:	bl	2e4c0 <flatcc_json_parser_union_type@@Base+0x2a4>
   2e2dc:	str	r0, [fp, #-20]	; 0xffffffec
   2e2e0:	ldr	r0, [sp, #36]	; 0x24
   2e2e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e2e8:	cmp	r0, r1
   2e2ec:	bne	2e314 <flatcc_json_parser_union_type@@Base+0xf8>
   2e2f0:	ldr	r0, [fp, #-16]
   2e2f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e2f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e2fc:	ldr	r3, [fp, #16]
   2e300:	ldr	ip, [fp, #-40]	; 0xffffffd8
   2e304:	add	ip, ip, #13
   2e308:	str	ip, [sp]
   2e30c:	bl	2e59c <flatcc_json_parser_union_type@@Base+0x380>
   2e310:	str	r0, [fp, #-20]	; 0xffffffec
   2e314:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e318:	ldr	r0, [r0]
   2e31c:	movw	r1, #0
   2e320:	cmp	r0, r1
   2e324:	bne	2e35c <flatcc_json_parser_union_type@@Base+0x140>
   2e328:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e32c:	ldrb	r0, [r0, #13]
   2e330:	cmp	r0, #0
   2e334:	movw	r0, #0
   2e338:	movne	r0, #1
   2e33c:	and	r0, r0, #1
   2e340:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e344:	ldr	r2, [r1, #4]
   2e348:	add	r0, r2, r0
   2e34c:	str	r0, [r1, #4]
   2e350:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e354:	str	r0, [fp, #-12]
   2e358:	b	2e4a8 <flatcc_json_parser_union_type@@Base+0x28c>
   2e35c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e360:	ldr	r0, [r0, #4]
   2e364:	cmp	r0, #0
   2e368:	beq	2e370 <flatcc_json_parser_union_type@@Base+0x154>
   2e36c:	b	2e390 <flatcc_json_parser_union_type@@Base+0x174>
   2e370:	ldr	r0, [pc, #316]	; 2e4b4 <flatcc_json_parser_union_type@@Base+0x298>
   2e374:	add	r0, pc, r0
   2e378:	ldr	r1, [pc, #312]	; 2e4b8 <flatcc_json_parser_union_type@@Base+0x29c>
   2e37c:	add	r1, pc, r1
   2e380:	ldr	r2, [pc, #308]	; 2e4bc <flatcc_json_parser_union_type@@Base+0x2a0>
   2e384:	add	r3, pc, r2
   2e388:	movw	r2, #965	; 0x3c5
   2e38c:	bl	12b80 <__assert_fail@plt>
   2e390:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e394:	ldr	r1, [r0, #4]
   2e398:	mvn	r2, #0
   2e39c:	add	r1, r1, r2
   2e3a0:	str	r1, [r0, #4]
   2e3a4:	ldr	r0, [fp, #-16]
   2e3a8:	ldr	r0, [r0, #16]
   2e3ac:	str	r0, [sp, #32]
   2e3b0:	ldr	r0, [fp, #-16]
   2e3b4:	ldr	r0, [r0, #4]
   2e3b8:	str	r0, [sp, #28]
   2e3bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e3c0:	ldr	r0, [r0, #8]
   2e3c4:	ldr	r1, [fp, #-16]
   2e3c8:	str	r0, [r1, #16]
   2e3cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e3d0:	ldr	r0, [r0, #4]
   2e3d4:	ldr	r1, [fp, #-16]
   2e3d8:	str	r0, [r1, #4]
   2e3dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e3e0:	ldrb	r0, [r0, #13]
   2e3e4:	strb	r0, [sp, #40]	; 0x28
   2e3e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e3ec:	ldr	r1, [fp, #20]
   2e3f0:	ldr	r2, [fp, #-16]
   2e3f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e3f8:	ldr	r3, [r3]
   2e3fc:	ldr	ip, [fp, #-24]	; 0xffffffe8
   2e400:	ldr	lr, [fp, #-40]	; 0xffffffd8
   2e404:	ldrb	lr, [lr, #13]
   2e408:	add	r4, sp, #40	; 0x28
   2e40c:	add	r4, r4, #4
   2e410:	str	r0, [sp, #12]
   2e414:	mov	r0, r2
   2e418:	str	r1, [sp, #8]
   2e41c:	mov	r1, r3
   2e420:	mov	r2, ip
   2e424:	and	r3, lr, #255	; 0xff
   2e428:	str	r4, [sp]
   2e42c:	ldr	ip, [sp, #8]
   2e430:	blx	ip
   2e434:	ldr	r1, [sp, #12]
   2e438:	cmp	r1, r0
   2e43c:	bne	2e44c <flatcc_json_parser_union_type@@Base+0x230>
   2e440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e444:	str	r0, [fp, #-12]
   2e448:	b	2e4a8 <flatcc_json_parser_union_type@@Base+0x28c>
   2e44c:	ldr	r0, [fp, #-16]
   2e450:	ldr	r0, [r0]
   2e454:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2e458:	ldr	r2, [sp, #40]	; 0x28
   2e45c:	ldr	r3, [sp, #44]	; 0x2c
   2e460:	bl	27378 <flatcc_builder_table_add_union@@Base>
   2e464:	cmp	r0, #0
   2e468:	beq	2e488 <flatcc_json_parser_union_type@@Base+0x26c>
   2e46c:	ldr	r0, [fp, #-16]
   2e470:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e474:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e478:	movw	r3, #28
   2e47c:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e480:	str	r0, [fp, #-12]
   2e484:	b	2e4a8 <flatcc_json_parser_union_type@@Base+0x28c>
   2e488:	ldr	r0, [sp, #32]
   2e48c:	ldr	r1, [fp, #-16]
   2e490:	str	r0, [r1, #16]
   2e494:	ldr	r0, [sp, #28]
   2e498:	ldr	r1, [fp, #-16]
   2e49c:	str	r0, [r1, #4]
   2e4a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e4a4:	str	r0, [fp, #-12]
   2e4a8:	ldr	r0, [fp, #-12]
   2e4ac:	sub	sp, fp, #8
   2e4b0:	pop	{r4, r5, fp, pc}
   2e4b4:	andeq	r4, r0, sl, asr #7
   2e4b8:	ldrdeq	r4, [r0], -r1
   2e4bc:	andeq	r4, r0, sl, lsr #8
   2e4c0:	push	{r4, r5, fp, lr}
   2e4c4:	add	fp, sp, #8
   2e4c8:	sub	sp, sp, #56	; 0x38
   2e4cc:	str	r0, [fp, #-16]
   2e4d0:	str	r1, [fp, #-20]	; 0xffffffec
   2e4d4:	str	r2, [fp, #-24]	; 0xffffffe8
   2e4d8:	str	r3, [fp, #-28]	; 0xffffffe4
   2e4dc:	mov	r0, #0
   2e4e0:	str	r0, [sp, #28]
   2e4e4:	str	r0, [sp, #24]
   2e4e8:	movw	r0, #0
   2e4ec:	str	r0, [sp, #20]
   2e4f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e4f4:	str	r0, [sp, #16]
   2e4f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e4fc:	movw	r1, #0
   2e500:	strb	r1, [r0]
   2e504:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e50c:	cmp	r0, r1
   2e510:	bne	2e520 <flatcc_json_parser_union_type@@Base+0x304>
   2e514:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e518:	str	r0, [fp, #-12]
   2e51c:	b	2e590 <flatcc_json_parser_union_type@@Base+0x374>
   2e520:	ldr	r0, [fp, #-16]
   2e524:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e52c:	add	r3, sp, #20
   2e530:	add	ip, sp, #24
   2e534:	str	ip, [sp]
   2e538:	bl	2d2cc <flatcc_json_parser_integer@@Base>
   2e53c:	str	r0, [fp, #-20]	; 0xffffffec
   2e540:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e544:	ldr	r1, [sp, #16]
   2e548:	cmp	r0, r1
   2e54c:	beq	2e588 <flatcc_json_parser_union_type@@Base+0x36c>
   2e550:	ldr	r0, [fp, #-16]
   2e554:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e55c:	ldr	r3, [sp, #20]
   2e560:	ldr	ip, [sp, #24]
   2e564:	ldr	lr, [sp, #28]
   2e568:	ldr	r4, [fp, #-28]	; 0xffffffe4
   2e56c:	mov	r5, sp
   2e570:	str	r4, [r5, #8]
   2e574:	str	lr, [r5, #4]
   2e578:	str	ip, [r5]
   2e57c:	bl	30518 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   2e580:	str	r0, [fp, #-12]
   2e584:	b	2e590 <flatcc_json_parser_union_type@@Base+0x374>
   2e588:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e58c:	str	r0, [fp, #-12]
   2e590:	ldr	r0, [fp, #-12]
   2e594:	sub	sp, fp, #8
   2e598:	pop	{r4, r5, fp, pc}
   2e59c:	push	{r4, r5, r6, sl, fp, lr}
   2e5a0:	add	fp, sp, #16
   2e5a4:	sub	sp, sp, #88	; 0x58
   2e5a8:	ldr	ip, [fp, #8]
   2e5ac:	str	r0, [fp, #-24]	; 0xffffffe8
   2e5b0:	str	r1, [fp, #-28]	; 0xffffffe4
   2e5b4:	str	r2, [fp, #-32]	; 0xffffffe0
   2e5b8:	str	r3, [fp, #-36]	; 0xffffffdc
   2e5bc:	movw	r0, #0
   2e5c0:	strb	r0, [fp, #-45]	; 0xffffffd3
   2e5c4:	movw	r1, #0
   2e5c8:	str	r1, [sp, #36]	; 0x24
   2e5cc:	ldr	r1, [fp, #8]
   2e5d0:	strb	r0, [r1]
   2e5d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e5d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e5dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e5e0:	str	ip, [sp, #32]
   2e5e4:	bl	305c4 <flatcc_json_parser_struct_as_root@@Base+0x12d8>
   2e5e8:	str	r0, [fp, #-28]	; 0xffffffe4
   2e5ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e5f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e5f4:	cmp	r0, r1
   2e5f8:	bne	2e608 <flatcc_json_parser_union_type@@Base+0x3ec>
   2e5fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e600:	str	r0, [fp, #-20]	; 0xffffffec
   2e604:	b	2e7bc <flatcc_json_parser_union_type@@Base+0x5a0>
   2e608:	b	2e60c <flatcc_json_parser_union_type@@Base+0x3f0>
   2e60c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e610:	str	r0, [fp, #-40]	; 0xffffffd8
   2e614:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e618:	ldr	r0, [r0]
   2e61c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e620:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e624:	str	r2, [fp, #-44]	; 0xffffffd4
   2e628:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e62c:	str	r0, [sp, #28]
   2e630:	mov	r0, r1
   2e634:	mov	r1, r2
   2e638:	mov	r2, r3
   2e63c:	add	r3, sp, #44	; 0x2c
   2e640:	add	ip, sp, #48	; 0x30
   2e644:	str	ip, [sp]
   2e648:	add	ip, sp, #40	; 0x28
   2e64c:	str	ip, [sp, #4]
   2e650:	ldr	ip, [sp, #28]
   2e654:	blx	ip
   2e658:	str	r0, [fp, #-28]	; 0xffffffe4
   2e65c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e660:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e664:	cmp	r0, r1
   2e668:	bne	2e678 <flatcc_json_parser_union_type@@Base+0x45c>
   2e66c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e670:	str	r0, [fp, #-20]	; 0xffffffec
   2e674:	b	2e7bc <flatcc_json_parser_union_type@@Base+0x5a0>
   2e678:	b	2e67c <flatcc_json_parser_union_type@@Base+0x460>
   2e67c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e680:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2e684:	cmp	r0, r1
   2e688:	movw	r0, #0
   2e68c:	str	r0, [sp, #24]
   2e690:	bne	2e6b8 <flatcc_json_parser_union_type@@Base+0x49c>
   2e694:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e698:	add	r1, r0, #4
   2e69c:	str	r1, [fp, #-40]	; 0xffffffd8
   2e6a0:	ldr	r0, [r0, #4]
   2e6a4:	movw	r1, #0
   2e6a8:	cmp	r0, r1
   2e6ac:	movw	r0, #0
   2e6b0:	movne	r0, #1
   2e6b4:	str	r0, [sp, #24]
   2e6b8:	ldr	r0, [sp, #24]
   2e6bc:	tst	r0, #1
   2e6c0:	bne	2e614 <flatcc_json_parser_union_type@@Base+0x3f8>
   2e6c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2e6c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e6cc:	cmp	r0, r1
   2e6d0:	bne	2e6f0 <flatcc_json_parser_union_type@@Base+0x4d4>
   2e6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e6d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e6dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e6e0:	movw	r3, #23
   2e6e4:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e6e8:	str	r0, [fp, #-20]	; 0xffffffec
   2e6ec:	b	2e7bc <flatcc_json_parser_union_type@@Base+0x5a0>
   2e6f0:	ldr	r0, [sp, #36]	; 0x24
   2e6f4:	add	r1, r0, #1
   2e6f8:	str	r1, [sp, #36]	; 0x24
   2e6fc:	cmp	r0, #0
   2e700:	beq	2e730 <flatcc_json_parser_union_type@@Base+0x514>
   2e704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e708:	ldr	r0, [r0, #12]
   2e70c:	cmp	r0, #0
   2e710:	beq	2e730 <flatcc_json_parser_union_type@@Base+0x514>
   2e714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e718:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e71c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e720:	movw	r3, #14
   2e724:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e728:	str	r0, [fp, #-20]	; 0xffffffec
   2e72c:	b	2e7bc <flatcc_json_parser_union_type@@Base+0x5a0>
   2e730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e734:	mov	r1, r0
   2e738:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e73c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e740:	ldr	ip, [sp, #44]	; 0x2c
   2e744:	ldr	lr, [sp, #48]	; 0x30
   2e748:	ldr	r4, [sp, #52]	; 0x34
   2e74c:	mov	r5, sp
   2e750:	sub	r6, fp, #45	; 0x2d
   2e754:	str	r6, [r5, #8]
   2e758:	str	r4, [r5, #4]
   2e75c:	str	lr, [r5]
   2e760:	str	r0, [sp, #20]
   2e764:	mov	r0, r2
   2e768:	str	r1, [sp, #16]
   2e76c:	mov	r1, r3
   2e770:	ldr	r2, [sp, #20]
   2e774:	mov	r3, ip
   2e778:	bl	30518 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   2e77c:	ldr	r1, [sp, #16]
   2e780:	cmp	r1, r0
   2e784:	bne	2e794 <flatcc_json_parser_union_type@@Base+0x578>
   2e788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e78c:	str	r0, [fp, #-20]	; 0xffffffec
   2e790:	b	2e7bc <flatcc_json_parser_union_type@@Base+0x5a0>
   2e794:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   2e798:	ldr	r1, [fp, #8]
   2e79c:	ldrb	r2, [r1]
   2e7a0:	add	r0, r2, r0
   2e7a4:	strb	r0, [r1]
   2e7a8:	ldr	r0, [sp, #40]	; 0x28
   2e7ac:	cmp	r0, #0
   2e7b0:	bne	2e60c <flatcc_json_parser_union_type@@Base+0x3f0>
   2e7b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e7b8:	str	r0, [fp, #-20]	; 0xffffffec
   2e7bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e7c0:	sub	sp, fp, #16
   2e7c4:	pop	{r4, r5, r6, sl, fp, pc}

0002e7c8 <flatcc_json_parser_union_vector@@Base>:
   2e7c8:	push	{r4, sl, fp, lr}
   2e7cc:	add	fp, sp, #8
   2e7d0:	sub	sp, sp, #56	; 0x38
   2e7d4:	ldr	ip, [fp, #16]
   2e7d8:	ldr	lr, [fp, #12]
   2e7dc:	ldr	r4, [fp, #8]
   2e7e0:	str	r0, [fp, #-16]
   2e7e4:	str	r1, [fp, #-20]	; 0xffffffec
   2e7e8:	str	r2, [fp, #-24]	; 0xffffffe8
   2e7ec:	str	r3, [fp, #-28]	; 0xffffffe4
   2e7f0:	strh	r4, [fp, #-30]	; 0xffffffe2
   2e7f4:	ldr	r0, [fp, #-16]
   2e7f8:	ldr	r0, [r0]
   2e7fc:	ldr	r1, [fp, #12]
   2e800:	str	ip, [sp, #20]
   2e804:	str	lr, [sp, #16]
   2e808:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2e80c:	str	r0, [sp, #28]
   2e810:	ldr	r0, [sp, #28]
   2e814:	add	r0, r0, #8
   2e818:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e81c:	movw	r2, #24
   2e820:	mul	r1, r1, r2
   2e824:	add	r0, r0, r1
   2e828:	str	r0, [sp, #24]
   2e82c:	ldr	r0, [sp, #24]
   2e830:	ldr	r0, [r0]
   2e834:	movw	r1, #0
   2e838:	cmp	r0, r1
   2e83c:	beq	2e85c <flatcc_json_parser_union_vector@@Base+0x94>
   2e840:	ldr	r0, [fp, #-16]
   2e844:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e848:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e84c:	movw	r3, #28
   2e850:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e854:	str	r0, [fp, #-12]
   2e858:	b	2e914 <flatcc_json_parser_union_vector@@Base+0x14c>
   2e85c:	ldr	r0, [sp, #24]
   2e860:	ldrsb	r0, [r0, #12]
   2e864:	cmp	r0, #0
   2e868:	bne	2e8bc <flatcc_json_parser_union_vector@@Base+0xf4>
   2e86c:	ldr	r0, [sp, #28]
   2e870:	ldr	r1, [r0, #4]
   2e874:	add	r1, r1, #1
   2e878:	str	r1, [r0, #4]
   2e87c:	ldr	r0, [fp, #-16]
   2e880:	ldr	r0, [r0, #16]
   2e884:	ldr	r1, [sp, #24]
   2e888:	str	r0, [r1, #8]
   2e88c:	ldr	r0, [fp, #-16]
   2e890:	ldr	r0, [r0, #4]
   2e894:	ldr	r1, [sp, #24]
   2e898:	str	r0, [r1, #4]
   2e89c:	ldr	r0, [fp, #-16]
   2e8a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e8a4:	ldr	r2, [sp, #24]
   2e8a8:	str	r1, [r2]
   2e8ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e8b0:	bl	2c024 <flatcc_json_parser_generic_json@@Base>
   2e8b4:	str	r0, [fp, #-20]	; 0xffffffec
   2e8b8:	b	2e90c <flatcc_json_parser_union_vector@@Base+0x144>
   2e8bc:	ldr	r0, [sp, #28]
   2e8c0:	ldr	r1, [r0, #4]
   2e8c4:	mvn	r2, #0
   2e8c8:	add	r1, r1, r2
   2e8cc:	str	r1, [r0, #4]
   2e8d0:	ldr	r0, [fp, #-16]
   2e8d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e8d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e8dc:	ldr	r3, [sp, #24]
   2e8e0:	ldr	r3, [r3, #20]
   2e8e4:	ldr	ip, [sp, #24]
   2e8e8:	ldr	ip, [ip, #16]
   2e8ec:	ldrh	lr, [fp, #-30]	; 0xffffffe2
   2e8f0:	ldr	r4, [fp, #16]
   2e8f4:	str	ip, [sp]
   2e8f8:	uxth	ip, lr
   2e8fc:	str	ip, [sp, #4]
   2e900:	str	r4, [sp, #8]
   2e904:	bl	2e920 <flatcc_json_parser_union_vector@@Base+0x158>
   2e908:	str	r0, [fp, #-20]	; 0xffffffec
   2e90c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e910:	str	r0, [fp, #-12]
   2e914:	ldr	r0, [fp, #-12]
   2e918:	sub	sp, fp, #8
   2e91c:	pop	{r4, sl, fp, pc}
   2e920:	push	{r4, sl, fp, lr}
   2e924:	add	fp, sp, #8
   2e928:	sub	sp, sp, #64	; 0x40
   2e92c:	ldr	ip, [fp, #16]
   2e930:	ldr	lr, [fp, #12]
   2e934:	ldr	r4, [fp, #8]
   2e938:	str	r0, [fp, #-16]
   2e93c:	str	r1, [fp, #-20]	; 0xffffffec
   2e940:	str	r2, [fp, #-24]	; 0xffffffe8
   2e944:	str	r3, [fp, #-28]	; 0xffffffe4
   2e948:	strh	lr, [fp, #-30]	; 0xffffffe2
   2e94c:	movw	r0, #0
   2e950:	str	r0, [sp, #36]	; 0x24
   2e954:	ldr	r0, [fp, #-16]
   2e958:	ldr	r0, [r0]
   2e95c:	str	ip, [sp, #16]
   2e960:	str	r4, [sp, #12]
   2e964:	bl	25a60 <flatcc_builder_start_offset_vector@@Base>
   2e968:	cmp	r0, #0
   2e96c:	beq	2e974 <flatcc_json_parser_union_vector@@Base+0x1ac>
   2e970:	b	2eb34 <flatcc_json_parser_union_vector@@Base+0x36c>
   2e974:	ldr	r0, [fp, #-16]
   2e978:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e97c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e980:	add	r3, sp, #24
   2e984:	bl	2efe8 <flatcc_json_parser_union_type_vector@@Base+0x490>
   2e988:	str	r0, [fp, #-20]	; 0xffffffec
   2e98c:	movw	r0, #0
   2e990:	str	r0, [sp, #20]
   2e994:	ldr	r0, [sp, #24]
   2e998:	cmp	r0, #0
   2e99c:	beq	2ea98 <flatcc_json_parser_union_vector@@Base+0x2d0>
   2e9a0:	ldr	r0, [sp, #20]
   2e9a4:	ldr	r1, [fp, #8]
   2e9a8:	cmp	r0, r1
   2e9ac:	bne	2e9cc <flatcc_json_parser_union_vector@@Base+0x204>
   2e9b0:	ldr	r0, [fp, #-16]
   2e9b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e9b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e9bc:	movw	r3, #30
   2e9c0:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2e9c4:	str	r0, [fp, #-12]
   2e9c8:	b	2eb4c <flatcc_json_parser_union_vector@@Base+0x384>
   2e9cc:	ldr	r0, [fp, #-16]
   2e9d0:	ldr	r0, [r0]
   2e9d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e9d8:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2e9dc:	str	r0, [sp, #28]
   2e9e0:	ldr	r0, [fp, #16]
   2e9e4:	ldr	r1, [fp, #-16]
   2e9e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e9ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e9f0:	ldr	ip, [sp, #28]
   2e9f4:	ldr	lr, [sp, #20]
   2e9f8:	add	ip, ip, lr
   2e9fc:	str	r0, [sp, #8]
   2ea00:	mov	r0, r1
   2ea04:	mov	r1, r2
   2ea08:	mov	r2, r3
   2ea0c:	ldrb	r3, [ip]
   2ea10:	add	ip, sp, #36	; 0x24
   2ea14:	str	ip, [sp]
   2ea18:	ldr	ip, [sp, #8]
   2ea1c:	blx	ip
   2ea20:	str	r0, [fp, #-20]	; 0xffffffec
   2ea24:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ea28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ea2c:	cmp	r0, r1
   2ea30:	bne	2ea40 <flatcc_json_parser_union_vector@@Base+0x278>
   2ea34:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ea38:	str	r0, [fp, #-12]
   2ea3c:	b	2eb4c <flatcc_json_parser_union_vector@@Base+0x384>
   2ea40:	ldr	r0, [fp, #-16]
   2ea44:	ldr	r0, [r0]
   2ea48:	movw	r1, #1
   2ea4c:	bl	251f4 <flatcc_builder_extend_offset_vector@@Base>
   2ea50:	str	r0, [sp, #32]
   2ea54:	movw	r1, #0
   2ea58:	cmp	r0, r1
   2ea5c:	bne	2ea64 <flatcc_json_parser_union_vector@@Base+0x29c>
   2ea60:	b	2eb34 <flatcc_json_parser_union_vector@@Base+0x36c>
   2ea64:	ldr	r0, [sp, #36]	; 0x24
   2ea68:	ldr	r1, [sp, #32]
   2ea6c:	str	r0, [r1]
   2ea70:	ldr	r0, [fp, #-16]
   2ea74:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ea78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ea7c:	add	r3, sp, #24
   2ea80:	bl	2d004 <flatcc_json_parser_float@@Base+0x824>
   2ea84:	str	r0, [fp, #-20]	; 0xffffffec
   2ea88:	ldr	r0, [sp, #20]
   2ea8c:	add	r0, r0, #1
   2ea90:	str	r0, [sp, #20]
   2ea94:	b	2e994 <flatcc_json_parser_union_vector@@Base+0x1cc>
   2ea98:	ldr	r0, [sp, #20]
   2ea9c:	ldr	r1, [fp, #8]
   2eaa0:	cmp	r0, r1
   2eaa4:	beq	2eac4 <flatcc_json_parser_union_vector@@Base+0x2fc>
   2eaa8:	ldr	r0, [fp, #-16]
   2eaac:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eab0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eab4:	movw	r3, #30
   2eab8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2eabc:	str	r0, [fp, #-12]
   2eac0:	b	2eb4c <flatcc_json_parser_union_vector@@Base+0x384>
   2eac4:	ldr	r0, [fp, #-16]
   2eac8:	ldr	r0, [r0]
   2eacc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ead0:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2ead4:	str	r0, [sp, #28]
   2ead8:	ldr	r0, [fp, #-16]
   2eadc:	ldr	r0, [r0]
   2eae0:	ldr	r1, [sp, #28]
   2eae4:	bl	27294 <flatcc_builder_end_offset_vector_for_unions@@Base>
   2eae8:	str	r0, [sp, #36]	; 0x24
   2eaec:	cmp	r0, #0
   2eaf0:	bne	2eaf8 <flatcc_json_parser_union_vector@@Base+0x330>
   2eaf4:	b	2eb34 <flatcc_json_parser_union_vector@@Base+0x36c>
   2eaf8:	ldr	r0, [fp, #-16]
   2eafc:	ldr	r0, [r0]
   2eb00:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2eb04:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   2eb08:	str	r0, [sp, #32]
   2eb0c:	movw	r1, #0
   2eb10:	cmp	r0, r1
   2eb14:	bne	2eb1c <flatcc_json_parser_union_vector@@Base+0x354>
   2eb18:	b	2eb34 <flatcc_json_parser_union_vector@@Base+0x36c>
   2eb1c:	ldr	r0, [sp, #36]	; 0x24
   2eb20:	ldr	r1, [sp, #32]
   2eb24:	str	r0, [r1]
   2eb28:	ldr	r0, [fp, #-20]	; 0xffffffec
   2eb2c:	str	r0, [fp, #-12]
   2eb30:	b	2eb4c <flatcc_json_parser_union_vector@@Base+0x384>
   2eb34:	ldr	r0, [fp, #-16]
   2eb38:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eb3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eb40:	movw	r3, #33	; 0x21
   2eb44:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2eb48:	str	r0, [fp, #-12]
   2eb4c:	ldr	r0, [fp, #-12]
   2eb50:	sub	sp, fp, #8
   2eb54:	pop	{r4, sl, fp, pc}

0002eb58 <flatcc_json_parser_union_type_vector@@Base>:
   2eb58:	push	{r4, r5, r6, sl, fp, lr}
   2eb5c:	add	fp, sp, #16
   2eb60:	sub	sp, sp, #128	; 0x80
   2eb64:	ldr	ip, [fp, #24]
   2eb68:	ldr	lr, [fp, #20]
   2eb6c:	ldr	r4, [fp, #16]
   2eb70:	ldr	r5, [fp, #12]
   2eb74:	ldr	r6, [fp, #8]
   2eb78:	str	r0, [fp, #-24]	; 0xffffffe8
   2eb7c:	str	r1, [fp, #-28]	; 0xffffffe4
   2eb80:	str	r2, [fp, #-32]	; 0xffffffe0
   2eb84:	str	r3, [fp, #-36]	; 0xffffffdc
   2eb88:	strh	r6, [fp, #-38]	; 0xffffffda
   2eb8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eb90:	ldr	r0, [r0]
   2eb94:	ldr	r1, [fp, #12]
   2eb98:	str	ip, [sp, #44]	; 0x2c
   2eb9c:	str	lr, [sp, #40]	; 0x28
   2eba0:	str	r4, [sp, #36]	; 0x24
   2eba4:	str	r5, [sp, #32]
   2eba8:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2ebac:	str	r0, [fp, #-44]	; 0xffffffd4
   2ebb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ebb4:	add	r0, r0, #8
   2ebb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ebbc:	movw	r2, #24
   2ebc0:	mul	r1, r1, r2
   2ebc4:	add	r0, r0, r1
   2ebc8:	str	r0, [fp, #-48]	; 0xffffffd0
   2ebcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ebd0:	ldrsb	r0, [r0, #12]
   2ebd4:	cmp	r0, #0
   2ebd8:	beq	2ebf8 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   2ebdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ebe0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ebe4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ebe8:	movw	r3, #28
   2ebec:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2ebf0:	str	r0, [fp, #-20]	; 0xffffffec
   2ebf4:	b	2efd0 <flatcc_json_parser_union_type_vector@@Base+0x478>
   2ebf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ebfc:	movw	r1, #1
   2ec00:	strb	r1, [r0, #12]
   2ec04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec08:	ldr	r0, [r0]
   2ec0c:	movw	r1, #1
   2ec10:	movw	r2, #1
   2ec14:	uxth	r2, r2
   2ec18:	mvn	r3, #0
   2ec1c:	bl	25980 <flatcc_builder_start_vector@@Base>
   2ec20:	cmp	r0, #0
   2ec24:	beq	2ec2c <flatcc_json_parser_union_type_vector@@Base+0xd4>
   2ec28:	b	2efb8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   2ec2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ec34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ec38:	sub	r3, fp, #64	; 0x40
   2ec3c:	bl	2efe8 <flatcc_json_parser_union_type_vector@@Base+0x490>
   2ec40:	str	r0, [fp, #-28]	; 0xffffffe4
   2ec44:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2ec48:	cmp	r0, #0
   2ec4c:	beq	2ed6c <flatcc_json_parser_union_type_vector@@Base+0x214>
   2ec50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec54:	ldr	r0, [r0]
   2ec58:	movw	r1, #1
   2ec5c:	bl	24e84 <flatcc_builder_extend_vector@@Base>
   2ec60:	str	r0, [sp, #72]	; 0x48
   2ec64:	movw	r1, #0
   2ec68:	cmp	r0, r1
   2ec6c:	bne	2ec74 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   2ec70:	b	2efb8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   2ec74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ec78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ec7c:	str	r1, [fp, #-52]	; 0xffffffcc
   2ec80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ec84:	sub	r3, fp, #65	; 0x41
   2ec88:	bl	2e4c0 <flatcc_json_parser_union_type@@Base+0x2a4>
   2ec8c:	str	r0, [fp, #-28]	; 0xffffffe4
   2ec90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ec94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ec98:	cmp	r0, r1
   2ec9c:	bne	2ecec <flatcc_json_parser_union_type_vector@@Base+0x194>
   2eca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2eca8:	str	r1, [fp, #-52]	; 0xffffffcc
   2ecac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ecb0:	ldr	r3, [fp, #16]
   2ecb4:	sub	ip, fp, #65	; 0x41
   2ecb8:	str	ip, [sp]
   2ecbc:	bl	2e59c <flatcc_json_parser_union_type@@Base+0x380>
   2ecc0:	str	r0, [fp, #-28]	; 0xffffffe4
   2ecc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ecc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2eccc:	cmp	r0, r1
   2ecd0:	beq	2ece4 <flatcc_json_parser_union_type_vector@@Base+0x18c>
   2ecd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ecd8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ecdc:	cmp	r0, r1
   2ece0:	bne	2ece8 <flatcc_json_parser_union_type_vector@@Base+0x190>
   2ece4:	b	2efb8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   2ece8:	b	2ecec <flatcc_json_parser_union_type_vector@@Base+0x194>
   2ecec:	ldr	r0, [fp, #24]
   2ecf0:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   2ecf4:	str	r0, [sp, #28]
   2ecf8:	mov	r0, r1
   2ecfc:	ldr	r1, [sp, #28]
   2ed00:	blx	r1
   2ed04:	cmp	r0, #0
   2ed08:	bne	2ed44 <flatcc_json_parser_union_type_vector@@Base+0x1ec>
   2ed0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed10:	ldr	r0, [r0, #8]
   2ed14:	and	r0, r0, #1
   2ed18:	cmp	r0, #0
   2ed1c:	bne	2ed3c <flatcc_json_parser_union_type_vector@@Base+0x1e4>
   2ed20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ed28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ed2c:	movw	r3, #15
   2ed30:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2ed34:	str	r0, [fp, #-20]	; 0xffffffec
   2ed38:	b	2efd0 <flatcc_json_parser_union_type_vector@@Base+0x478>
   2ed3c:	movw	r0, #0
   2ed40:	strb	r0, [fp, #-65]	; 0xffffffbf
   2ed44:	ldr	r0, [sp, #72]	; 0x48
   2ed48:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   2ed4c:	bl	2f0cc <flatcc_json_parser_union_type_vector@@Base+0x574>
   2ed50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ed58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ed5c:	sub	r3, fp, #64	; 0x40
   2ed60:	bl	2d004 <flatcc_json_parser_float@@Base+0x824>
   2ed64:	str	r0, [fp, #-28]	; 0xffffffe4
   2ed68:	b	2ec44 <flatcc_json_parser_union_type_vector@@Base+0xec>
   2ed6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed70:	ldr	r0, [r0]
   2ed74:	bl	26f34 <flatcc_builder_vector_count@@Base>
   2ed78:	str	r0, [sp, #48]	; 0x30
   2ed7c:	ldr	r0, [sp, #48]	; 0x30
   2ed80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2ed84:	str	r0, [r1, #16]
   2ed88:	ldr	r0, [sp, #48]	; 0x30
   2ed8c:	mov	r1, r0
   2ed90:	str	r0, [sp, #56]	; 0x38
   2ed94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ed98:	ldr	r0, [r0]
   2ed9c:	ldr	r2, [sp, #56]	; 0x38
   2eda0:	str	r1, [sp, #24]
   2eda4:	mov	r1, r2
   2eda8:	bl	23ac0 <flatcc_builder_enter_user_frame@@Base>
   2edac:	str	r0, [sp, #52]	; 0x34
   2edb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2edb4:	ldr	r0, [r0]
   2edb8:	ldr	r1, [sp, #52]	; 0x34
   2edbc:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2edc0:	str	r0, [sp, #60]	; 0x3c
   2edc4:	ldr	r0, [sp, #60]	; 0x3c
   2edc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2edcc:	ldr	r1, [r1]
   2edd0:	str	r0, [sp, #20]
   2edd4:	mov	r0, r1
   2edd8:	bl	26f50 <flatcc_builder_vector_edit@@Base>
   2eddc:	ldr	r2, [sp, #56]	; 0x38
   2ede0:	ldr	r1, [sp, #20]
   2ede4:	str	r0, [sp, #16]
   2ede8:	mov	r0, r1
   2edec:	ldr	r1, [sp, #16]
   2edf0:	bl	12a78 <memcpy@plt>
   2edf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2edf8:	ldr	r0, [r0]
   2edfc:	bl	26e60 <flatcc_builder_end_vector@@Base>
   2ee00:	str	r0, [sp, #68]	; 0x44
   2ee04:	cmp	r0, #0
   2ee08:	bne	2ee10 <flatcc_json_parser_union_type_vector@@Base+0x2b8>
   2ee0c:	b	2efb8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   2ee10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee14:	ldr	r0, [r0]
   2ee18:	ldrh	r1, [fp, #-38]	; 0xffffffda
   2ee1c:	sub	r1, r1, #1
   2ee20:	bl	27568 <flatcc_builder_table_add_offset@@Base>
   2ee24:	str	r0, [sp, #64]	; 0x40
   2ee28:	movw	r1, #0
   2ee2c:	cmp	r0, r1
   2ee30:	bne	2ee38 <flatcc_json_parser_union_type_vector@@Base+0x2e0>
   2ee34:	b	2efb8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   2ee38:	ldr	r0, [sp, #68]	; 0x44
   2ee3c:	ldr	r1, [sp, #64]	; 0x40
   2ee40:	str	r0, [r1]
   2ee44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee48:	ldr	r0, [r0]
   2ee4c:	ldr	r1, [fp, #12]
   2ee50:	bl	23cc0 <flatcc_builder_get_user_frame_ptr@@Base>
   2ee54:	str	r0, [fp, #-44]	; 0xffffffd4
   2ee58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ee5c:	add	r0, r0, #8
   2ee60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ee64:	movw	r2, #24
   2ee68:	mul	r1, r1, r2
   2ee6c:	add	r0, r0, r1
   2ee70:	str	r0, [fp, #-48]	; 0xffffffd0
   2ee74:	ldr	r0, [sp, #52]	; 0x34
   2ee78:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2ee7c:	str	r0, [r1, #20]
   2ee80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ee84:	ldr	r0, [r0]
   2ee88:	movw	r1, #0
   2ee8c:	cmp	r0, r1
   2ee90:	bne	2eeb0 <flatcc_json_parser_union_type_vector@@Base+0x358>
   2ee94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ee98:	ldr	r1, [r0, #4]
   2ee9c:	add	r1, r1, #1
   2eea0:	str	r1, [r0, #4]
   2eea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2eea8:	str	r0, [fp, #-20]	; 0xffffffec
   2eeac:	b	2efd0 <flatcc_json_parser_union_type_vector@@Base+0x478>
   2eeb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2eeb4:	ldr	r0, [r0, #4]
   2eeb8:	cmp	r0, #0
   2eebc:	beq	2eec4 <flatcc_json_parser_union_type_vector@@Base+0x36c>
   2eec0:	b	2eee4 <flatcc_json_parser_union_type_vector@@Base+0x38c>
   2eec4:	ldr	r0, [pc, #272]	; 2efdc <flatcc_json_parser_union_type_vector@@Base+0x484>
   2eec8:	add	r0, pc, r0
   2eecc:	ldr	r1, [pc, #268]	; 2efe0 <flatcc_json_parser_union_type_vector@@Base+0x488>
   2eed0:	add	r1, pc, r1
   2eed4:	ldr	r2, [pc, #264]	; 2efe4 <flatcc_json_parser_union_type_vector@@Base+0x48c>
   2eed8:	add	r3, pc, r2
   2eedc:	movw	r2, #1122	; 0x462
   2eee0:	bl	12b80 <__assert_fail@plt>
   2eee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2eee8:	ldr	r1, [r0, #4]
   2eeec:	mvn	r2, #0
   2eef0:	add	r1, r1, r2
   2eef4:	str	r1, [r0, #4]
   2eef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eefc:	ldr	r0, [r0, #16]
   2ef00:	str	r0, [fp, #-56]	; 0xffffffc8
   2ef04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef08:	ldr	r0, [r0, #4]
   2ef0c:	str	r0, [fp, #-60]	; 0xffffffc4
   2ef10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ef14:	ldr	r0, [r0, #8]
   2ef18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ef1c:	str	r0, [r1, #16]
   2ef20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ef24:	ldr	r0, [r0, #4]
   2ef28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ef2c:	str	r0, [r1, #4]
   2ef30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ef34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ef38:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ef3c:	ldr	r2, [r2]
   2ef40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ef44:	ldr	ip, [sp, #52]	; 0x34
   2ef48:	ldr	lr, [sp, #48]	; 0x30
   2ef4c:	ldrh	r4, [fp, #-38]	; 0xffffffda
   2ef50:	ldr	r5, [fp, #20]
   2ef54:	str	r0, [sp, #12]
   2ef58:	mov	r0, r1
   2ef5c:	mov	r1, r2
   2ef60:	mov	r2, r3
   2ef64:	mov	r3, ip
   2ef68:	str	lr, [sp]
   2ef6c:	uxth	ip, r4
   2ef70:	str	ip, [sp, #4]
   2ef74:	str	r5, [sp, #8]
   2ef78:	bl	2e920 <flatcc_json_parser_union_vector@@Base+0x158>
   2ef7c:	ldr	r1, [sp, #12]
   2ef80:	cmp	r1, r0
   2ef84:	bne	2ef94 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   2ef88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ef8c:	str	r0, [fp, #-20]	; 0xffffffec
   2ef90:	b	2efd0 <flatcc_json_parser_union_type_vector@@Base+0x478>
   2ef94:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ef98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ef9c:	str	r0, [r1, #16]
   2efa0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2efa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2efa8:	str	r0, [r1, #4]
   2efac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2efb0:	str	r0, [fp, #-20]	; 0xffffffec
   2efb4:	b	2efd0 <flatcc_json_parser_union_type_vector@@Base+0x478>
   2efb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2efbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2efc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2efc4:	movw	r3, #33	; 0x21
   2efc8:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2efcc:	str	r0, [fp, #-20]	; 0xffffffec
   2efd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2efd4:	sub	sp, fp, #16
   2efd8:	pop	{r4, r5, r6, sl, fp, pc}
   2efdc:	andeq	r3, r0, r6, ror r8
   2efe0:	andeq	r3, r0, sp, ror r8
   2efe4:	andeq	r3, r0, r2, lsr #19
   2efe8:	push	{fp, lr}
   2efec:	mov	fp, sp
   2eff0:	sub	sp, sp, #24
   2eff4:	str	r0, [fp, #-8]
   2eff8:	str	r1, [sp, #12]
   2effc:	str	r2, [sp, #8]
   2f000:	str	r3, [sp, #4]
   2f004:	ldr	r0, [sp, #12]
   2f008:	ldr	r1, [sp, #8]
   2f00c:	cmp	r0, r1
   2f010:	beq	2f024 <flatcc_json_parser_union_type_vector@@Base+0x4cc>
   2f014:	ldr	r0, [sp, #12]
   2f018:	ldrb	r0, [r0]
   2f01c:	cmp	r0, #91	; 0x5b
   2f020:	beq	2f04c <flatcc_json_parser_union_type_vector@@Base+0x4f4>
   2f024:	ldr	r0, [sp, #4]
   2f028:	movw	r1, #0
   2f02c:	str	r1, [r0]
   2f030:	ldr	r0, [fp, #-8]
   2f034:	ldr	r1, [sp, #12]
   2f038:	ldr	r2, [sp, #8]
   2f03c:	movw	r3, #22
   2f040:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   2f044:	str	r0, [fp, #-4]
   2f048:	b	2f0c0 <flatcc_json_parser_union_type_vector@@Base+0x568>
   2f04c:	ldr	r0, [fp, #-8]
   2f050:	ldr	r1, [sp, #12]
   2f054:	add	r1, r1, #1
   2f058:	ldr	r2, [sp, #8]
   2f05c:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2f060:	str	r0, [sp, #12]
   2f064:	ldr	r0, [sp, #12]
   2f068:	ldr	r1, [sp, #8]
   2f06c:	cmp	r0, r1
   2f070:	beq	2f0ac <flatcc_json_parser_union_type_vector@@Base+0x554>
   2f074:	ldr	r0, [sp, #12]
   2f078:	ldrb	r0, [r0]
   2f07c:	cmp	r0, #93	; 0x5d
   2f080:	bne	2f0ac <flatcc_json_parser_union_type_vector@@Base+0x554>
   2f084:	ldr	r0, [sp, #4]
   2f088:	movw	r1, #0
   2f08c:	str	r1, [r0]
   2f090:	ldr	r0, [fp, #-8]
   2f094:	ldr	r1, [sp, #12]
   2f098:	add	r1, r1, #1
   2f09c:	ldr	r2, [sp, #8]
   2f0a0:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   2f0a4:	str	r0, [fp, #-4]
   2f0a8:	b	2f0c0 <flatcc_json_parser_union_type_vector@@Base+0x568>
   2f0ac:	ldr	r0, [sp, #4]
   2f0b0:	movw	r1, #1
   2f0b4:	str	r1, [r0]
   2f0b8:	ldr	r0, [sp, #12]
   2f0bc:	str	r0, [fp, #-4]
   2f0c0:	ldr	r0, [fp, #-4]
   2f0c4:	mov	sp, fp
   2f0c8:	pop	{fp, pc}
   2f0cc:	push	{fp, lr}
   2f0d0:	mov	fp, sp
   2f0d4:	sub	sp, sp, #8
   2f0d8:	str	r0, [sp, #4]
   2f0dc:	strb	r1, [sp, #3]
   2f0e0:	ldrb	r0, [sp, #3]
   2f0e4:	bl	30620 <flatcc_json_parser_struct_as_root@@Base+0x1334>
   2f0e8:	ldr	r1, [sp, #4]
   2f0ec:	strb	r0, [r1]
   2f0f0:	mov	sp, fp
   2f0f4:	pop	{fp, pc}

0002f0f8 <flatcc_json_parser_table_as_root@@Base>:
   2f0f8:	push	{r4, sl, fp, lr}
   2f0fc:	add	fp, sp, #8
   2f100:	sub	sp, sp, #88	; 0x58
   2f104:	ldr	ip, [fp, #16]
   2f108:	ldr	lr, [fp, #12]
   2f10c:	ldr	r4, [fp, #8]
   2f110:	str	r0, [fp, #-16]
   2f114:	str	r1, [fp, #-20]	; 0xffffffec
   2f118:	str	r2, [fp, #-24]	; 0xffffffe8
   2f11c:	str	r3, [fp, #-28]	; 0xffffffe4
   2f120:	ldr	r0, [fp, #8]
   2f124:	and	r0, r0, #4
   2f128:	cmp	r0, #0
   2f12c:	movw	r0, #0
   2f130:	movne	r0, #1
   2f134:	tst	r0, #1
   2f138:	movw	r0, #2
   2f13c:	moveq	r0, #0
   2f140:	str	r0, [sp, #16]
   2f144:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f148:	movw	r1, #0
   2f14c:	cmp	r0, r1
   2f150:	beq	2f160 <flatcc_json_parser_table_as_root@@Base+0x68>
   2f154:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f158:	str	r0, [sp, #12]
   2f15c:	b	2f16c <flatcc_json_parser_table_as_root@@Base+0x74>
   2f160:	add	r0, sp, #24
   2f164:	str	r0, [sp, #12]
   2f168:	b	2f16c <flatcc_json_parser_table_as_root@@Base+0x74>
   2f16c:	ldr	r0, [sp, #12]
   2f170:	str	r0, [fp, #-20]	; 0xffffffec
   2f174:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f178:	ldr	r1, [fp, #-16]
   2f17c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f184:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f188:	add	r3, r3, ip
   2f18c:	ldr	ip, [fp, #8]
   2f190:	str	ip, [sp]
   2f194:	bl	2f258 <flatcc_json_parser_table_as_root@@Base+0x160>
   2f198:	ldr	r0, [fp, #-16]
   2f19c:	ldr	r1, [fp, #12]
   2f1a0:	ldr	r3, [sp, #16]
   2f1a4:	movw	r2, #0
   2f1a8:	uxth	r2, r2
   2f1ac:	bl	246cc <flatcc_builder_start_buffer@@Base>
   2f1b0:	cmp	r0, #0
   2f1b4:	beq	2f1c4 <flatcc_json_parser_table_as_root@@Base+0xcc>
   2f1b8:	mvn	r0, #0
   2f1bc:	str	r0, [fp, #-12]
   2f1c0:	b	2f24c <flatcc_json_parser_table_as_root@@Base+0x154>
   2f1c4:	ldr	r0, [fp, #16]
   2f1c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f1cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f1d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f1d4:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f1d8:	add	r3, r3, ip
   2f1dc:	str	r0, [sp, #8]
   2f1e0:	mov	r0, r1
   2f1e4:	mov	r1, r2
   2f1e8:	mov	r2, r3
   2f1ec:	add	r3, sp, #20
   2f1f0:	ldr	ip, [sp, #8]
   2f1f4:	blx	ip
   2f1f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f1fc:	ldr	r1, [r1, #24]
   2f200:	cmp	r1, #0
   2f204:	beq	2f218 <flatcc_json_parser_table_as_root@@Base+0x120>
   2f208:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f20c:	ldr	r0, [r0, #24]
   2f210:	str	r0, [fp, #-12]
   2f214:	b	2f24c <flatcc_json_parser_table_as_root@@Base+0x154>
   2f218:	ldr	r0, [fp, #-16]
   2f21c:	ldr	r1, [sp, #20]
   2f220:	bl	24a10 <flatcc_builder_end_buffer@@Base>
   2f224:	cmp	r0, #0
   2f228:	bne	2f238 <flatcc_json_parser_table_as_root@@Base+0x140>
   2f22c:	mvn	r0, #0
   2f230:	str	r0, [fp, #-12]
   2f234:	b	2f24c <flatcc_json_parser_table_as_root@@Base+0x154>
   2f238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f23c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f240:	str	r0, [r1, #40]	; 0x28
   2f244:	movw	r0, #0
   2f248:	str	r0, [fp, #-12]
   2f24c:	ldr	r0, [fp, #-12]
   2f250:	sub	sp, fp, #8
   2f254:	pop	{r4, sl, fp, pc}
   2f258:	push	{fp, lr}
   2f25c:	mov	fp, sp
   2f260:	sub	sp, sp, #24
   2f264:	ldr	ip, [fp, #8]
   2f268:	str	r0, [fp, #-4]
   2f26c:	str	r1, [fp, #-8]
   2f270:	str	r2, [sp, #12]
   2f274:	str	r3, [sp, #8]
   2f278:	ldr	r0, [fp, #-4]
   2f27c:	movw	r1, #0
   2f280:	and	r1, r1, #255	; 0xff
   2f284:	movw	r2, #44	; 0x2c
   2f288:	str	ip, [sp, #4]
   2f28c:	bl	12b2c <memset@plt>
   2f290:	ldr	r0, [fp, #-8]
   2f294:	ldr	r1, [fp, #-4]
   2f298:	str	r0, [r1]
   2f29c:	ldr	r0, [sp, #12]
   2f2a0:	ldr	r1, [fp, #-4]
   2f2a4:	str	r0, [r1, #4]
   2f2a8:	ldr	r0, [fp, #-4]
   2f2ac:	movw	r1, #1
   2f2b0:	str	r1, [r0, #16]
   2f2b4:	ldr	r0, [fp, #8]
   2f2b8:	ldr	r1, [fp, #-4]
   2f2bc:	str	r0, [r1, #8]
   2f2c0:	ldr	r0, [sp, #12]
   2f2c4:	ldr	r1, [fp, #-4]
   2f2c8:	str	r0, [r1, #28]
   2f2cc:	ldr	r0, [sp, #8]
   2f2d0:	ldr	r1, [fp, #-4]
   2f2d4:	str	r0, [r1, #32]
   2f2d8:	ldr	r0, [sp, #12]
   2f2dc:	ldr	r1, [fp, #-4]
   2f2e0:	str	r0, [r1, #36]	; 0x24
   2f2e4:	mov	sp, fp
   2f2e8:	pop	{fp, pc}

0002f2ec <flatcc_json_parser_struct_as_root@@Base>:
   2f2ec:	push	{r4, sl, fp, lr}
   2f2f0:	add	fp, sp, #8
   2f2f4:	sub	sp, sp, #88	; 0x58
   2f2f8:	ldr	ip, [fp, #16]
   2f2fc:	ldr	lr, [fp, #12]
   2f300:	ldr	r4, [fp, #8]
   2f304:	str	r0, [fp, #-16]
   2f308:	str	r1, [fp, #-20]	; 0xffffffec
   2f30c:	str	r2, [fp, #-24]	; 0xffffffe8
   2f310:	str	r3, [fp, #-28]	; 0xffffffe4
   2f314:	ldr	r0, [fp, #8]
   2f318:	and	r0, r0, #4
   2f31c:	cmp	r0, #0
   2f320:	movw	r0, #0
   2f324:	movne	r0, #1
   2f328:	tst	r0, #1
   2f32c:	movw	r0, #2
   2f330:	moveq	r0, #0
   2f334:	str	r0, [sp, #16]
   2f338:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f33c:	movw	r1, #0
   2f340:	cmp	r0, r1
   2f344:	beq	2f354 <flatcc_json_parser_struct_as_root@@Base+0x68>
   2f348:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f34c:	str	r0, [sp, #12]
   2f350:	b	2f360 <flatcc_json_parser_struct_as_root@@Base+0x74>
   2f354:	add	r0, sp, #24
   2f358:	str	r0, [sp, #12]
   2f35c:	b	2f360 <flatcc_json_parser_struct_as_root@@Base+0x74>
   2f360:	ldr	r0, [sp, #12]
   2f364:	str	r0, [fp, #-20]	; 0xffffffec
   2f368:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f36c:	ldr	r1, [fp, #-16]
   2f370:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f378:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f37c:	add	r3, r3, ip
   2f380:	ldr	ip, [fp, #8]
   2f384:	str	ip, [sp]
   2f388:	bl	2f258 <flatcc_json_parser_table_as_root@@Base+0x160>
   2f38c:	ldr	r0, [fp, #-16]
   2f390:	ldr	r1, [fp, #12]
   2f394:	ldr	r3, [sp, #16]
   2f398:	movw	r2, #0
   2f39c:	uxth	r2, r2
   2f3a0:	bl	246cc <flatcc_builder_start_buffer@@Base>
   2f3a4:	cmp	r0, #0
   2f3a8:	beq	2f3b8 <flatcc_json_parser_struct_as_root@@Base+0xcc>
   2f3ac:	mvn	r0, #0
   2f3b0:	str	r0, [fp, #-12]
   2f3b4:	b	2f440 <flatcc_json_parser_struct_as_root@@Base+0x154>
   2f3b8:	ldr	r0, [fp, #16]
   2f3bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f3c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f3c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f3c8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f3cc:	add	r3, r3, ip
   2f3d0:	str	r0, [sp, #8]
   2f3d4:	mov	r0, r1
   2f3d8:	mov	r1, r2
   2f3dc:	mov	r2, r3
   2f3e0:	add	r3, sp, #20
   2f3e4:	ldr	ip, [sp, #8]
   2f3e8:	blx	ip
   2f3ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f3f0:	ldr	r1, [r1, #24]
   2f3f4:	cmp	r1, #0
   2f3f8:	beq	2f40c <flatcc_json_parser_struct_as_root@@Base+0x120>
   2f3fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f400:	ldr	r0, [r0, #24]
   2f404:	str	r0, [fp, #-12]
   2f408:	b	2f440 <flatcc_json_parser_struct_as_root@@Base+0x154>
   2f40c:	ldr	r0, [fp, #-16]
   2f410:	ldr	r1, [sp, #20]
   2f414:	bl	24a10 <flatcc_builder_end_buffer@@Base>
   2f418:	cmp	r0, #0
   2f41c:	bne	2f42c <flatcc_json_parser_struct_as_root@@Base+0x140>
   2f420:	mvn	r0, #0
   2f424:	str	r0, [fp, #-12]
   2f428:	b	2f440 <flatcc_json_parser_struct_as_root@@Base+0x154>
   2f42c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f430:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f434:	str	r0, [r1, #40]	; 0x28
   2f438:	movw	r0, #0
   2f43c:	str	r0, [fp, #-12]
   2f440:	ldr	r0, [fp, #-12]
   2f444:	sub	sp, fp, #8
   2f448:	pop	{r4, sl, fp, pc}
   2f44c:	sub	sp, sp, #16
   2f450:	str	r0, [sp, #8]
   2f454:	str	r1, [sp, #12]
   2f458:	ldr	r0, [sp, #8]
   2f45c:	ldr	r1, [sp, #12]
   2f460:	str	r1, [sp, #4]
   2f464:	str	r0, [sp]
   2f468:	vldr	d0, [sp]
   2f46c:	add	sp, sp, #16
   2f470:	bx	lr
   2f474:	nop	{0}
   2f478:	push	{r4, r5, r6, r7, fp, lr}
   2f47c:	add	fp, sp, #16
   2f480:	sub	sp, sp, #136	; 0x88
   2f484:	vldr	d16, [pc, #884]	; 2f800 <flatcc_json_parser_struct_as_root@@Base+0x514>
   2f488:	str	r0, [fp, #-24]	; 0xffffffe8
   2f48c:	str	r1, [fp, #-28]	; 0xffffffe4
   2f490:	str	r2, [fp, #-32]	; 0xffffffe0
   2f494:	mov	r0, #0
   2f498:	str	r0, [fp, #-48]	; 0xffffffd0
   2f49c:	str	r0, [fp, #-52]	; 0xffffffcc
   2f4a0:	str	r0, [fp, #-60]	; 0xffffffc4
   2f4a4:	str	r0, [fp, #-64]	; 0xffffffc0
   2f4a8:	movw	r0, #0
   2f4ac:	str	r0, [fp, #-68]	; 0xffffffbc
   2f4b0:	str	r0, [fp, #-72]	; 0xffffffb8
   2f4b4:	str	r0, [sp, #76]	; 0x4c
   2f4b8:	str	r0, [sp, #72]	; 0x48
   2f4bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f4c0:	vstr	d16, [r0]
   2f4c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f4cc:	add	r0, r0, r1
   2f4d0:	add	r0, r0, #1
   2f4d4:	str	r0, [fp, #-44]	; 0xffffffd4
   2f4d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f4dc:	cmp	r0, #1000	; 0x3e8
   2f4e0:	ble	2f4f4 <flatcc_json_parser_struct_as_root@@Base+0x208>
   2f4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4e8:	add	r0, r0, #1000	; 0x3e8
   2f4ec:	add	r0, r0, #1
   2f4f0:	str	r0, [fp, #-44]	; 0xffffffd4
   2f4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f4fc:	cmp	r0, r1
   2f500:	bne	2f510 <flatcc_json_parser_struct_as_root@@Base+0x224>
   2f504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f508:	str	r0, [fp, #-20]	; 0xffffffec
   2f50c:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2f510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f514:	str	r0, [fp, #-36]	; 0xffffffdc
   2f518:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f51c:	ldrb	r0, [r0]
   2f520:	cmp	r0, #45	; 0x2d
   2f524:	bne	2f55c <flatcc_json_parser_struct_as_root@@Base+0x270>
   2f528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f52c:	add	r0, r0, #1
   2f530:	str	r0, [fp, #-24]	; 0xffffffe8
   2f534:	movw	r0, #1
   2f538:	str	r0, [fp, #-48]	; 0xffffffd0
   2f53c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f540:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f544:	cmp	r0, r1
   2f548:	bne	2f558 <flatcc_json_parser_struct_as_root@@Base+0x26c>
   2f54c:	movw	r0, #0
   2f550:	str	r0, [fp, #-20]	; 0xffffffec
   2f554:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2f558:	b	2f55c <flatcc_json_parser_struct_as_root@@Base+0x270>
   2f55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f560:	ldrb	r0, [r0]
   2f564:	cmp	r0, #48	; 0x30
   2f568:	bne	2f630 <flatcc_json_parser_struct_as_root@@Base+0x344>
   2f56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f570:	add	r0, r0, #1
   2f574:	str	r0, [fp, #-24]	; 0xffffffe8
   2f578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f57c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f580:	cmp	r0, r1
   2f584:	beq	2f5dc <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   2f588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f58c:	ldrb	r0, [r0]
   2f590:	orr	r0, r0, #32
   2f594:	cmp	r0, #120	; 0x78
   2f598:	bne	2f5dc <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   2f59c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f5a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2f5a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f5ac:	bl	2fdd0 <flatcc_json_parser_struct_as_root@@Base+0xae4>
   2f5b0:	str	r0, [fp, #-40]	; 0xffffffd8
   2f5b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f5b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f5bc:	cmp	r0, r1
   2f5c0:	bne	2f5d0 <flatcc_json_parser_struct_as_root@@Base+0x2e4>
   2f5c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f5c8:	str	r0, [fp, #-20]	; 0xffffffec
   2f5cc:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2f5d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f5d4:	str	r0, [fp, #-20]	; 0xffffffec
   2f5d8:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2f5dc:	b	2f5e0 <flatcc_json_parser_struct_as_root@@Base+0x2f4>
   2f5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f5e8:	cmp	r0, r1
   2f5ec:	movw	r0, #0
   2f5f0:	str	r0, [sp, #68]	; 0x44
   2f5f4:	beq	2f610 <flatcc_json_parser_struct_as_root@@Base+0x324>
   2f5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f5fc:	ldrb	r0, [r0]
   2f600:	cmp	r0, #48	; 0x30
   2f604:	movw	r0, #0
   2f608:	moveq	r0, #1
   2f60c:	str	r0, [sp, #68]	; 0x44
   2f610:	ldr	r0, [sp, #68]	; 0x44
   2f614:	tst	r0, #1
   2f618:	beq	2f62c <flatcc_json_parser_struct_as_root@@Base+0x340>
   2f61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f620:	add	r0, r0, #1
   2f624:	str	r0, [fp, #-24]	; 0xffffffe8
   2f628:	b	2f5e0 <flatcc_json_parser_struct_as_root@@Base+0x2f4>
   2f62c:	b	2f69c <flatcc_json_parser_struct_as_root@@Base+0x3b0>
   2f630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f634:	ldrb	r0, [r0]
   2f638:	cmp	r0, #49	; 0x31
   2f63c:	blt	2f650 <flatcc_json_parser_struct_as_root@@Base+0x364>
   2f640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f644:	ldrb	r0, [r0]
   2f648:	cmp	r0, #57	; 0x39
   2f64c:	ble	2f67c <flatcc_json_parser_struct_as_root@@Base+0x390>
   2f650:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f654:	cmp	r0, #0
   2f658:	beq	2f668 <flatcc_json_parser_struct_as_root@@Base+0x37c>
   2f65c:	movw	r0, #0
   2f660:	str	r0, [sp, #64]	; 0x40
   2f664:	b	2f670 <flatcc_json_parser_struct_as_root@@Base+0x384>
   2f668:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f66c:	str	r0, [sp, #64]	; 0x40
   2f670:	ldr	r0, [sp, #64]	; 0x40
   2f674:	str	r0, [fp, #-20]	; 0xffffffec
   2f678:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2f67c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f680:	add	r1, r0, #1
   2f684:	str	r1, [fp, #-24]	; 0xffffffe8
   2f688:	ldrb	r0, [r0]
   2f68c:	sub	r0, r0, #48	; 0x30
   2f690:	asr	r1, r0, #31
   2f694:	str	r0, [fp, #-64]	; 0xffffffc0
   2f698:	str	r1, [fp, #-60]	; 0xffffffc4
   2f69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6a0:	str	r0, [fp, #-40]	; 0xffffffd8
   2f6a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f6ac:	cmp	r0, r1
   2f6b0:	movw	r0, #0
   2f6b4:	str	r0, [sp, #60]	; 0x3c
   2f6b8:	beq	2f6ec <flatcc_json_parser_struct_as_root@@Base+0x400>
   2f6bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6c0:	ldrb	r0, [r0]
   2f6c4:	cmp	r0, #48	; 0x30
   2f6c8:	movw	r0, #0
   2f6cc:	str	r0, [sp, #60]	; 0x3c
   2f6d0:	blt	2f6ec <flatcc_json_parser_struct_as_root@@Base+0x400>
   2f6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6d8:	ldrb	r0, [r0]
   2f6dc:	cmp	r0, #57	; 0x39
   2f6e0:	movw	r0, #0
   2f6e4:	movle	r0, #1
   2f6e8:	str	r0, [sp, #60]	; 0x3c
   2f6ec:	ldr	r0, [sp, #60]	; 0x3c
   2f6f0:	tst	r0, #1
   2f6f4:	beq	2f798 <flatcc_json_parser_struct_as_root@@Base+0x4ac>
   2f6f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f6fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f700:	movw	r2, #39321	; 0x9999
   2f704:	movt	r2, #39321	; 0x9999
   2f708:	subs	r0, r0, r2
   2f70c:	movw	r2, #39321	; 0x9999
   2f710:	movt	r2, #6553	; 0x1999
   2f714:	sbcs	r1, r1, r2
   2f718:	bcc	2f75c <flatcc_json_parser_struct_as_root@@Base+0x470>
   2f71c:	b	2f720 <flatcc_json_parser_struct_as_root@@Base+0x434>
   2f720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f724:	ldrb	r0, [r0]
   2f728:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2f72c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2f730:	adds	r3, r1, #1
   2f734:	adc	ip, r2, #0
   2f738:	cmp	r0, #52	; 0x34
   2f73c:	movgt	r1, r3
   2f740:	cmp	r0, #52	; 0x34
   2f744:	movgt	r2, ip
   2f748:	str	r1, [fp, #-64]	; 0xffffffc0
   2f74c:	str	r2, [fp, #-60]	; 0xffffffc4
   2f750:	movw	r0, #1
   2f754:	str	r0, [sp, #72]	; 0x48
   2f758:	b	2f798 <flatcc_json_parser_struct_as_root@@Base+0x4ac>
   2f75c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f760:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f764:	add	r1, r1, r1, lsl #2
   2f768:	lsl	r1, r1, #1
   2f76c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f770:	add	r3, r2, #1
   2f774:	str	r3, [fp, #-24]	; 0xffffffe8
   2f778:	ldrb	r2, [r2]
   2f77c:	mov	r3, #10
   2f780:	umlal	r2, r1, r0, r3
   2f784:	subs	r0, r2, #48	; 0x30
   2f788:	sbc	r1, r1, #0
   2f78c:	str	r0, [fp, #-64]	; 0xffffffc0
   2f790:	str	r1, [fp, #-60]	; 0xffffffc4
   2f794:	b	2f6a4 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   2f798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f79c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2f7a0:	sub	r0, r0, r1
   2f7a4:	str	r0, [sp, #76]	; 0x4c
   2f7a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f7b0:	cmp	r0, r1
   2f7b4:	movw	r0, #0
   2f7b8:	str	r0, [sp, #56]	; 0x38
   2f7bc:	beq	2f7d8 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   2f7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7c4:	ldrb	r0, [r0]
   2f7c8:	cmp	r0, #48	; 0x30
   2f7cc:	movw	r0, #0
   2f7d0:	moveq	r0, #1
   2f7d4:	str	r0, [sp, #56]	; 0x38
   2f7d8:	ldr	r0, [sp, #56]	; 0x38
   2f7dc:	tst	r0, #1
   2f7e0:	beq	2f808 <flatcc_json_parser_struct_as_root@@Base+0x51c>
   2f7e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2f7e8:	add	r0, r0, #1
   2f7ec:	str	r0, [fp, #-68]	; 0xffffffbc
   2f7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7f4:	add	r0, r0, #1
   2f7f8:	str	r0, [fp, #-24]	; 0xffffffe8
   2f7fc:	b	2f7a8 <flatcc_json_parser_struct_as_root@@Base+0x4bc>
	...
   2f808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f80c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f810:	cmp	r0, r1
   2f814:	beq	2f8cc <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   2f818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f81c:	ldrb	r0, [r0]
   2f820:	cmp	r0, #49	; 0x31
   2f824:	blt	2f8cc <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   2f828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f82c:	ldrb	r0, [r0]
   2f830:	cmp	r0, #57	; 0x39
   2f834:	bgt	2f8cc <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   2f838:	movw	r0, #1
   2f83c:	str	r0, [sp, #72]	; 0x48
   2f840:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2f844:	add	r0, r0, #1
   2f848:	str	r0, [fp, #-68]	; 0xffffffbc
   2f84c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f850:	add	r0, r0, #1
   2f854:	str	r0, [fp, #-24]	; 0xffffffe8
   2f858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f85c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f860:	cmp	r0, r1
   2f864:	movw	r0, #0
   2f868:	str	r0, [sp, #52]	; 0x34
   2f86c:	beq	2f8a0 <flatcc_json_parser_struct_as_root@@Base+0x5b4>
   2f870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f874:	ldrb	r0, [r0]
   2f878:	cmp	r0, #48	; 0x30
   2f87c:	movw	r0, #0
   2f880:	str	r0, [sp, #52]	; 0x34
   2f884:	blt	2f8a0 <flatcc_json_parser_struct_as_root@@Base+0x5b4>
   2f888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f88c:	ldrb	r0, [r0]
   2f890:	cmp	r0, #57	; 0x39
   2f894:	movw	r0, #0
   2f898:	movle	r0, #1
   2f89c:	str	r0, [sp, #52]	; 0x34
   2f8a0:	ldr	r0, [sp, #52]	; 0x34
   2f8a4:	tst	r0, #1
   2f8a8:	beq	2f8c8 <flatcc_json_parser_struct_as_root@@Base+0x5dc>
   2f8ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2f8b0:	add	r0, r0, #1
   2f8b4:	str	r0, [fp, #-68]	; 0xffffffbc
   2f8b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8bc:	add	r0, r0, #1
   2f8c0:	str	r0, [fp, #-24]	; 0xffffffe8
   2f8c4:	b	2f858 <flatcc_json_parser_struct_as_root@@Base+0x56c>
   2f8c8:	b	2f8cc <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   2f8cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f8d4:	cmp	r0, r1
   2f8d8:	beq	2fb60 <flatcc_json_parser_struct_as_root@@Base+0x874>
   2f8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8e0:	ldrb	r0, [r0]
   2f8e4:	cmp	r0, #46	; 0x2e
   2f8e8:	bne	2fb60 <flatcc_json_parser_struct_as_root@@Base+0x874>
   2f8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8f0:	add	r0, r0, #1
   2f8f4:	str	r0, [fp, #-24]	; 0xffffffe8
   2f8f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8fc:	str	r0, [fp, #-40]	; 0xffffffd8
   2f900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f904:	ldrb	r0, [r0]
   2f908:	cmp	r0, #48	; 0x30
   2f90c:	blt	2f920 <flatcc_json_parser_struct_as_root@@Base+0x634>
   2f910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f914:	ldrb	r0, [r0]
   2f918:	cmp	r0, #57	; 0x39
   2f91c:	ble	2f92c <flatcc_json_parser_struct_as_root@@Base+0x640>
   2f920:	movw	r0, #0
   2f924:	str	r0, [fp, #-20]	; 0xffffffec
   2f928:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2f92c:	b	2f930 <flatcc_json_parser_struct_as_root@@Base+0x644>
   2f930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f934:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f938:	cmp	r0, r1
   2f93c:	movw	r0, #0
   2f940:	str	r0, [sp, #48]	; 0x30
   2f944:	beq	2f978 <flatcc_json_parser_struct_as_root@@Base+0x68c>
   2f948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f94c:	ldrb	r0, [r0]
   2f950:	cmp	r0, #48	; 0x30
   2f954:	movw	r0, #0
   2f958:	str	r0, [sp, #48]	; 0x30
   2f95c:	blt	2f978 <flatcc_json_parser_struct_as_root@@Base+0x68c>
   2f960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f964:	ldrb	r0, [r0]
   2f968:	cmp	r0, #57	; 0x39
   2f96c:	movw	r0, #0
   2f970:	movle	r0, #1
   2f974:	str	r0, [sp, #48]	; 0x30
   2f978:	ldr	r0, [sp, #48]	; 0x30
   2f97c:	tst	r0, #1
   2f980:	beq	2fa40 <flatcc_json_parser_struct_as_root@@Base+0x754>
   2f984:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f988:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f98c:	movw	r2, #39321	; 0x9999
   2f990:	movt	r2, #39321	; 0x9999
   2f994:	subs	r0, r0, r2
   2f998:	movw	r2, #39321	; 0x9999
   2f99c:	movt	r2, #6553	; 0x1999
   2f9a0:	sbcs	r1, r1, r2
   2f9a4:	bcc	2f9f4 <flatcc_json_parser_struct_as_root@@Base+0x708>
   2f9a8:	b	2f9ac <flatcc_json_parser_struct_as_root@@Base+0x6c0>
   2f9ac:	ldr	r0, [sp, #72]	; 0x48
   2f9b0:	cmp	r0, #0
   2f9b4:	bne	2f9f0 <flatcc_json_parser_struct_as_root@@Base+0x704>
   2f9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f9bc:	ldrb	r0, [r0]
   2f9c0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2f9c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2f9c8:	adds	r3, r1, #1
   2f9cc:	adc	ip, r2, #0
   2f9d0:	cmp	r0, #52	; 0x34
   2f9d4:	movgt	r1, r3
   2f9d8:	cmp	r0, #52	; 0x34
   2f9dc:	movgt	r2, ip
   2f9e0:	str	r1, [fp, #-64]	; 0xffffffc0
   2f9e4:	str	r2, [fp, #-60]	; 0xffffffc4
   2f9e8:	movw	r0, #1
   2f9ec:	str	r0, [sp, #72]	; 0x48
   2f9f0:	b	2fa40 <flatcc_json_parser_struct_as_root@@Base+0x754>
   2f9f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f9f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f9fc:	add	r1, r1, r1, lsl #2
   2fa00:	lsl	r1, r1, #1
   2fa04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fa08:	add	r3, r2, #1
   2fa0c:	str	r3, [fp, #-24]	; 0xffffffe8
   2fa10:	ldrb	r2, [r2]
   2fa14:	mov	r3, #10
   2fa18:	umlal	r2, r1, r0, r3
   2fa1c:	subs	r0, r2, #48	; 0x30
   2fa20:	sbc	r1, r1, #0
   2fa24:	str	r0, [fp, #-64]	; 0xffffffc0
   2fa28:	str	r1, [fp, #-60]	; 0xffffffc4
   2fa2c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fa30:	mvn	r1, #0
   2fa34:	add	r0, r0, r1
   2fa38:	str	r0, [fp, #-68]	; 0xffffffbc
   2fa3c:	b	2f930 <flatcc_json_parser_struct_as_root@@Base+0x644>
   2fa40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2fa48:	sub	r0, r0, r1
   2fa4c:	ldr	r1, [sp, #76]	; 0x4c
   2fa50:	add	r0, r1, r0
   2fa54:	str	r0, [sp, #76]	; 0x4c
   2fa58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fa60:	cmp	r0, r1
   2fa64:	movw	r0, #0
   2fa68:	str	r0, [sp, #44]	; 0x2c
   2fa6c:	beq	2fa88 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   2fa70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa74:	ldrb	r0, [r0]
   2fa78:	cmp	r0, #48	; 0x30
   2fa7c:	movw	r0, #0
   2fa80:	moveq	r0, #1
   2fa84:	str	r0, [sp, #44]	; 0x2c
   2fa88:	ldr	r0, [sp, #44]	; 0x2c
   2fa8c:	tst	r0, #1
   2fa90:	beq	2fab0 <flatcc_json_parser_struct_as_root@@Base+0x7c4>
   2fa94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fa98:	add	r0, r0, #1
   2fa9c:	str	r0, [fp, #-68]	; 0xffffffbc
   2faa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2faa4:	add	r0, r0, #1
   2faa8:	str	r0, [fp, #-24]	; 0xffffffe8
   2faac:	b	2fa58 <flatcc_json_parser_struct_as_root@@Base+0x76c>
   2fab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fab4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fab8:	cmp	r0, r1
   2fabc:	beq	2fb5c <flatcc_json_parser_struct_as_root@@Base+0x870>
   2fac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fac4:	ldrb	r0, [r0]
   2fac8:	cmp	r0, #49	; 0x31
   2facc:	blt	2fb5c <flatcc_json_parser_struct_as_root@@Base+0x870>
   2fad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fad4:	ldrb	r0, [r0]
   2fad8:	cmp	r0, #57	; 0x39
   2fadc:	bgt	2fb5c <flatcc_json_parser_struct_as_root@@Base+0x870>
   2fae0:	movw	r0, #1
   2fae4:	str	r0, [sp, #72]	; 0x48
   2fae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2faec:	add	r0, r0, #1
   2faf0:	str	r0, [fp, #-24]	; 0xffffffe8
   2faf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2faf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fafc:	cmp	r0, r1
   2fb00:	movw	r0, #0
   2fb04:	str	r0, [sp, #40]	; 0x28
   2fb08:	beq	2fb3c <flatcc_json_parser_struct_as_root@@Base+0x850>
   2fb0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb10:	ldrb	r0, [r0]
   2fb14:	cmp	r0, #48	; 0x30
   2fb18:	movw	r0, #0
   2fb1c:	str	r0, [sp, #40]	; 0x28
   2fb20:	blt	2fb3c <flatcc_json_parser_struct_as_root@@Base+0x850>
   2fb24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb28:	ldrb	r0, [r0]
   2fb2c:	cmp	r0, #57	; 0x39
   2fb30:	movw	r0, #0
   2fb34:	movle	r0, #1
   2fb38:	str	r0, [sp, #40]	; 0x28
   2fb3c:	ldr	r0, [sp, #40]	; 0x28
   2fb40:	tst	r0, #1
   2fb44:	beq	2fb58 <flatcc_json_parser_struct_as_root@@Base+0x86c>
   2fb48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb4c:	add	r0, r0, #1
   2fb50:	str	r0, [fp, #-24]	; 0xffffffe8
   2fb54:	b	2faf4 <flatcc_json_parser_struct_as_root@@Base+0x808>
   2fb58:	b	2fb5c <flatcc_json_parser_struct_as_root@@Base+0x870>
   2fb5c:	b	2fb60 <flatcc_json_parser_struct_as_root@@Base+0x874>
   2fb60:	ldr	r0, [sp, #76]	; 0x4c
   2fb64:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2fb68:	add	r0, r1, r0
   2fb6c:	str	r0, [fp, #-68]	; 0xffffffbc
   2fb70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fb78:	cmp	r0, r1
   2fb7c:	beq	2fd20 <flatcc_json_parser_struct_as_root@@Base+0xa34>
   2fb80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb84:	ldrb	r0, [r0]
   2fb88:	orr	r0, r0, #32
   2fb8c:	cmp	r0, #101	; 0x65
   2fb90:	bne	2fd20 <flatcc_json_parser_struct_as_root@@Base+0xa34>
   2fb94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2fb98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fb9c:	sub	r0, r0, r1
   2fba0:	cmp	r0, #2
   2fba4:	bge	2fbb4 <flatcc_json_parser_struct_as_root@@Base+0x8c8>
   2fba8:	movw	r0, #0
   2fbac:	str	r0, [fp, #-20]	; 0xffffffec
   2fbb0:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2fbb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbb8:	add	r0, r0, #1
   2fbbc:	str	r0, [fp, #-24]	; 0xffffffe8
   2fbc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbc4:	ldrb	r0, [r0]
   2fbc8:	cmp	r0, #43	; 0x2b
   2fbcc:	bne	2fbfc <flatcc_json_parser_struct_as_root@@Base+0x910>
   2fbd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbd4:	add	r0, r0, #1
   2fbd8:	str	r0, [fp, #-24]	; 0xffffffe8
   2fbdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbe0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fbe4:	cmp	r0, r1
   2fbe8:	bne	2fbf8 <flatcc_json_parser_struct_as_root@@Base+0x90c>
   2fbec:	movw	r0, #0
   2fbf0:	str	r0, [fp, #-20]	; 0xffffffec
   2fbf4:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2fbf8:	b	2fc44 <flatcc_json_parser_struct_as_root@@Base+0x958>
   2fbfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc00:	ldrb	r0, [r0]
   2fc04:	cmp	r0, #45	; 0x2d
   2fc08:	bne	2fc40 <flatcc_json_parser_struct_as_root@@Base+0x954>
   2fc0c:	movw	r0, #1
   2fc10:	str	r0, [fp, #-52]	; 0xffffffcc
   2fc14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc18:	add	r0, r0, #1
   2fc1c:	str	r0, [fp, #-24]	; 0xffffffe8
   2fc20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fc28:	cmp	r0, r1
   2fc2c:	bne	2fc3c <flatcc_json_parser_struct_as_root@@Base+0x950>
   2fc30:	movw	r0, #0
   2fc34:	str	r0, [fp, #-20]	; 0xffffffec
   2fc38:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2fc3c:	b	2fc40 <flatcc_json_parser_struct_as_root@@Base+0x954>
   2fc40:	b	2fc44 <flatcc_json_parser_struct_as_root@@Base+0x958>
   2fc44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc48:	ldrb	r0, [r0]
   2fc4c:	cmp	r0, #48	; 0x30
   2fc50:	blt	2fc64 <flatcc_json_parser_struct_as_root@@Base+0x978>
   2fc54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc58:	ldrb	r0, [r0]
   2fc5c:	cmp	r0, #57	; 0x39
   2fc60:	ble	2fc70 <flatcc_json_parser_struct_as_root@@Base+0x984>
   2fc64:	movw	r0, #0
   2fc68:	str	r0, [fp, #-20]	; 0xffffffec
   2fc6c:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2fc70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc74:	add	r1, r0, #1
   2fc78:	str	r1, [fp, #-24]	; 0xffffffe8
   2fc7c:	ldrb	r0, [r0]
   2fc80:	sub	r0, r0, #48	; 0x30
   2fc84:	str	r0, [fp, #-72]	; 0xffffffb8
   2fc88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fc90:	cmp	r0, r1
   2fc94:	movw	r0, #0
   2fc98:	str	r0, [sp, #36]	; 0x24
   2fc9c:	beq	2fcd0 <flatcc_json_parser_struct_as_root@@Base+0x9e4>
   2fca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fca4:	ldrb	r0, [r0]
   2fca8:	cmp	r0, #48	; 0x30
   2fcac:	movw	r0, #0
   2fcb0:	str	r0, [sp, #36]	; 0x24
   2fcb4:	blt	2fcd0 <flatcc_json_parser_struct_as_root@@Base+0x9e4>
   2fcb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fcbc:	ldrb	r0, [r0]
   2fcc0:	cmp	r0, #57	; 0x39
   2fcc4:	movw	r0, #0
   2fcc8:	movle	r0, #1
   2fccc:	str	r0, [sp, #36]	; 0x24
   2fcd0:	ldr	r0, [sp, #36]	; 0x24
   2fcd4:	tst	r0, #1
   2fcd8:	beq	2fd1c <flatcc_json_parser_struct_as_root@@Base+0xa30>
   2fcdc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2fce0:	movw	r1, #32767	; 0x7fff
   2fce4:	cmp	r0, r1
   2fce8:	bgt	2fd0c <flatcc_json_parser_struct_as_root@@Base+0xa20>
   2fcec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2fcf0:	movw	r1, #10
   2fcf4:	mul	r0, r0, r1
   2fcf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fcfc:	ldrb	r1, [r1]
   2fd00:	add	r0, r0, r1
   2fd04:	sub	r0, r0, #48	; 0x30
   2fd08:	str	r0, [fp, #-72]	; 0xffffffb8
   2fd0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd10:	add	r0, r0, #1
   2fd14:	str	r0, [fp, #-24]	; 0xffffffe8
   2fd18:	b	2fc88 <flatcc_json_parser_struct_as_root@@Base+0x99c>
   2fd1c:	b	2fd20 <flatcc_json_parser_struct_as_root@@Base+0xa34>
   2fd20:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fd24:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fd28:	cmp	r1, #0
   2fd2c:	str	r0, [sp, #32]
   2fd30:	beq	2fd48 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   2fd34:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2fd38:	movw	r1, #0
   2fd3c:	sub	r0, r1, r0
   2fd40:	str	r0, [sp, #28]
   2fd44:	b	2fd50 <flatcc_json_parser_struct_as_root@@Base+0xa64>
   2fd48:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2fd4c:	str	r0, [sp, #28]
   2fd50:	ldr	r0, [sp, #28]
   2fd54:	ldr	r1, [sp, #32]
   2fd58:	add	r0, r1, r0
   2fd5c:	str	r0, [fp, #-68]	; 0xffffffbc
   2fd60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd64:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2fd68:	cmp	r0, r2
   2fd6c:	bne	2fd7c <flatcc_json_parser_struct_as_root@@Base+0xa90>
   2fd70:	movw	r0, #0
   2fd74:	str	r0, [fp, #-20]	; 0xffffffec
   2fd78:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0xad8>
   2fd7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2fd80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fd84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2fd88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2fd8c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   2fd90:	ldr	lr, [fp, #-68]	; 0xffffffbc
   2fd94:	ldr	r4, [sp, #76]	; 0x4c
   2fd98:	ldr	r5, [sp, #72]	; 0x48
   2fd9c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   2fda0:	mov	r7, sp
   2fda4:	str	r6, [r7, #20]
   2fda8:	str	r5, [r7, #16]
   2fdac:	str	r4, [r7, #12]
   2fdb0:	str	lr, [r7, #8]
   2fdb4:	str	ip, [r7, #4]
   2fdb8:	str	r3, [r7]
   2fdbc:	bl	2fe08 <flatcc_json_parser_struct_as_root@@Base+0xb1c>
   2fdc0:	str	r0, [fp, #-20]	; 0xffffffec
   2fdc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2fdc8:	sub	sp, fp, #16
   2fdcc:	pop	{r4, r5, r6, r7, fp, pc}
   2fdd0:	sub	sp, sp, #16
   2fdd4:	vldr	d16, [pc, #36]	; 2fe00 <flatcc_json_parser_struct_as_root@@Base+0xb14>
   2fdd8:	str	r0, [sp, #12]
   2fddc:	str	r1, [sp, #8]
   2fde0:	str	r2, [sp, #4]
   2fde4:	str	r3, [sp]
   2fde8:	ldr	r0, [sp]
   2fdec:	vstr	d16, [r0]
   2fdf0:	ldr	r0, [sp, #12]
   2fdf4:	add	sp, sp, #16
   2fdf8:	bx	lr
   2fdfc:	nop	{0}
	...
   2fe08:	push	{r4, r5, r6, sl, fp, lr}
   2fe0c:	add	fp, sp, #16
   2fe10:	sub	sp, sp, #64	; 0x40
   2fe14:	ldr	r3, [fp, #12]
   2fe18:	ldr	ip, [fp, #8]
   2fe1c:	ldr	lr, [fp, #28]
   2fe20:	ldr	r4, [fp, #24]
   2fe24:	ldr	r5, [fp, #20]
   2fe28:	ldr	r6, [fp, #16]
   2fe2c:	str	r0, [fp, #-24]	; 0xffffffe8
   2fe30:	str	r1, [fp, #-28]	; 0xffffffe4
   2fe34:	str	r2, [fp, #-32]	; 0xffffffe0
   2fe38:	str	r3, [sp, #44]	; 0x2c
   2fe3c:	str	ip, [sp, #40]	; 0x28
   2fe40:	movw	r0, #309	; 0x135
   2fe44:	str	r0, [sp, #36]	; 0x24
   2fe48:	movw	r0, #65212	; 0xfebc
   2fe4c:	movt	r0, #65535	; 0xffff
   2fe50:	str	r0, [sp, #32]
   2fe54:	ldr	r0, [sp, #40]	; 0x28
   2fe58:	ldr	r1, [sp, #44]	; 0x2c
   2fe5c:	orr	r0, r0, r1
   2fe60:	cmp	r0, #0
   2fe64:	beq	2fe78 <flatcc_json_parser_struct_as_root@@Base+0xb8c>
   2fe68:	b	2fe6c <flatcc_json_parser_struct_as_root@@Base+0xb80>
   2fe6c:	ldr	r0, [fp, #16]
   2fe70:	cmn	r0, #324	; 0x144
   2fe74:	bge	2fe88 <flatcc_json_parser_struct_as_root@@Base+0xb9c>
   2fe78:	vldr	d16, [pc, #1008]	; 30270 <flatcc_json_parser_struct_as_root@@Base+0xf84>
   2fe7c:	ldr	r0, [fp, #28]
   2fe80:	vstr	d16, [r0]
   2fe84:	b	30438 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   2fe88:	ldr	r0, [fp, #16]
   2fe8c:	sub	r0, r0, #1
   2fe90:	movw	r1, #309	; 0x135
   2fe94:	cmp	r0, r1
   2fe98:	ble	2feb8 <flatcc_json_parser_struct_as_root@@Base+0xbcc>
   2fe9c:	mov	r0, #0
   2fea0:	movw	r1, #0
   2fea4:	movt	r1, #32752	; 0x7ff0
   2fea8:	bl	2f44c <flatcc_json_parser_struct_as_root@@Base+0x160>
   2feac:	ldr	r0, [fp, #28]
   2feb0:	vstr	d0, [r0]
   2feb4:	b	30438 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   2feb8:	ldr	r0, [sp, #44]	; 0x2c
   2febc:	mov	r1, #0
   2fec0:	cmp	r1, r0, lsr #21
   2fec4:	bne	303c8 <flatcc_json_parser_struct_as_root@@Base+0x10dc>
   2fec8:	b	2fecc <flatcc_json_parser_struct_as_root@@Base+0xbe0>
   2fecc:	ldr	r0, [fp, #16]
   2fed0:	cmp	r0, #0
   2fed4:	blt	303c8 <flatcc_json_parser_struct_as_root@@Base+0x10dc>
   2fed8:	ldr	r0, [fp, #16]
   2fedc:	cmp	r0, #22
   2fee0:	bgt	303c8 <flatcc_json_parser_struct_as_root@@Base+0x10dc>
   2fee4:	ldr	r0, [sp, #40]	; 0x28
   2fee8:	ldr	r1, [sp, #44]	; 0x2c
   2feec:	bl	30980 <flatcc_json_parser_struct_as_root@@Base+0x1694>
   2fef0:	str	r0, [sp, #16]
   2fef4:	str	r1, [sp, #20]
   2fef8:	ldr	r0, [fp, #16]
   2fefc:	ldr	r1, [fp, #20]
   2ff00:	sub	r0, r0, r1
   2ff04:	add	r0, r0, #22
   2ff08:	cmp	r0, #44	; 0x2c
   2ff0c:	str	r0, [sp, #12]
   2ff10:	bhi	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   2ff14:	add	r0, pc, #8
   2ff18:	ldr	r1, [sp, #12]
   2ff1c:	ldr	r2, [r0, r1, lsl #2]
   2ff20:	add	pc, r0, r2
   2ff24:	strheq	r0, [r0], -r4
   2ff28:	andeq	r0, r0, r8, asr #1
   2ff2c:	ldrdeq	r0, [r0], -ip
   2ff30:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2ff34:	andeq	r0, r0, r4, lsl #2
   2ff38:	andeq	r0, r0, r8, lsl r1
   2ff3c:	andeq	r0, r0, ip, lsr #2
   2ff40:	andeq	r0, r0, r0, asr #2
   2ff44:	andeq	r0, r0, r4, asr r1
   2ff48:	andeq	r0, r0, r8, ror #2
   2ff4c:	andeq	r0, r0, ip, ror r1
   2ff50:	muleq	r0, r0, r1
   2ff54:	andeq	r0, r0, r4, lsr #3
   2ff58:			; <UNDEFINED> instruction: 0x000001b8
   2ff5c:	andeq	r0, r0, ip, asr #3
   2ff60:	andeq	r0, r0, r0, ror #3
   2ff64:	strdeq	r0, [r0], -r4
   2ff68:	andeq	r0, r0, r8, lsl #4
   2ff6c:	andeq	r0, r0, ip, lsl r2
   2ff70:	andeq	r0, r0, r0, lsr r2
   2ff74:	andeq	r0, r0, r4, asr #4
   2ff78:	andeq	r0, r0, r8, asr r2
   2ff7c:	andeq	r0, r0, ip, ror #4
   2ff80:	andeq	r0, r0, r0, ror r2
   2ff84:	andeq	r0, r0, r4, lsl #5
   2ff88:	muleq	r0, r8, r2
   2ff8c:	andeq	r0, r0, ip, lsr #5
   2ff90:	andeq	r0, r0, r0, asr #5
   2ff94:	ldrdeq	r0, [r0], -r4
   2ff98:	andeq	r0, r0, r8, ror #5
   2ff9c:	strdeq	r0, [r0], -ip
   2ffa0:	andeq	r0, r0, r0, lsl r3
   2ffa4:	andeq	r0, r0, r4, lsr #6
   2ffa8:	andeq	r0, r0, r8, lsr r3
   2ffac:			; <UNDEFINED> instruction: 0x000003bc
   2ffb0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2ffb4:	andeq	r0, r0, r4, ror #7
   2ffb8:	strdeq	r0, [r0], -r8
   2ffbc:	andeq	r0, r0, ip, lsl #8
   2ffc0:	andeq	r0, r0, r0, lsr #8
   2ffc4:	andeq	r0, r0, r4, lsr r4
   2ffc8:	andeq	r0, r0, r8, asr #8
   2ffcc:	andeq	r0, r0, ip, asr r4
   2ffd0:	andeq	r0, r0, r0, ror r4
   2ffd4:	andeq	r0, r0, r4, lsl #9
   2ffd8:	vldr	d16, [pc, #664]	; 30278 <flatcc_json_parser_struct_as_root@@Base+0xf8c>
   2ffdc:	vldr	d17, [sp, #16]
   2ffe0:	vdiv.f64	d16, d17, d16
   2ffe4:	vstr	d16, [sp, #16]
   2ffe8:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   2ffec:	vldr	d16, [pc, #652]	; 30280 <flatcc_json_parser_struct_as_root@@Base+0xf94>
   2fff0:	vldr	d17, [sp, #16]
   2fff4:	vdiv.f64	d16, d17, d16
   2fff8:	vstr	d16, [sp, #16]
   2fffc:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30000:	vldr	d16, [pc, #640]	; 30288 <flatcc_json_parser_struct_as_root@@Base+0xf9c>
   30004:	vldr	d17, [sp, #16]
   30008:	vdiv.f64	d16, d17, d16
   3000c:	vstr	d16, [sp, #16]
   30010:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30014:	vldr	d16, [pc, #628]	; 30290 <flatcc_json_parser_struct_as_root@@Base+0xfa4>
   30018:	vldr	d17, [sp, #16]
   3001c:	vdiv.f64	d16, d17, d16
   30020:	vstr	d16, [sp, #16]
   30024:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30028:	vldr	d16, [pc, #616]	; 30298 <flatcc_json_parser_struct_as_root@@Base+0xfac>
   3002c:	vldr	d17, [sp, #16]
   30030:	vdiv.f64	d16, d17, d16
   30034:	vstr	d16, [sp, #16]
   30038:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3003c:	vldr	d16, [pc, #604]	; 302a0 <flatcc_json_parser_struct_as_root@@Base+0xfb4>
   30040:	vldr	d17, [sp, #16]
   30044:	vdiv.f64	d16, d17, d16
   30048:	vstr	d16, [sp, #16]
   3004c:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30050:	vldr	d16, [pc, #592]	; 302a8 <flatcc_json_parser_struct_as_root@@Base+0xfbc>
   30054:	vldr	d17, [sp, #16]
   30058:	vdiv.f64	d16, d17, d16
   3005c:	vstr	d16, [sp, #16]
   30060:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30064:	vldr	d16, [pc, #580]	; 302b0 <flatcc_json_parser_struct_as_root@@Base+0xfc4>
   30068:	vldr	d17, [sp, #16]
   3006c:	vdiv.f64	d16, d17, d16
   30070:	vstr	d16, [sp, #16]
   30074:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30078:	vldr	d16, [pc, #568]	; 302b8 <flatcc_json_parser_struct_as_root@@Base+0xfcc>
   3007c:	vldr	d17, [sp, #16]
   30080:	vdiv.f64	d16, d17, d16
   30084:	vstr	d16, [sp, #16]
   30088:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3008c:	vldr	d16, [pc, #556]	; 302c0 <flatcc_json_parser_struct_as_root@@Base+0xfd4>
   30090:	vldr	d17, [sp, #16]
   30094:	vdiv.f64	d16, d17, d16
   30098:	vstr	d16, [sp, #16]
   3009c:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   300a0:	vldr	d16, [pc, #544]	; 302c8 <flatcc_json_parser_struct_as_root@@Base+0xfdc>
   300a4:	vldr	d17, [sp, #16]
   300a8:	vdiv.f64	d16, d17, d16
   300ac:	vstr	d16, [sp, #16]
   300b0:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   300b4:	vldr	d16, [pc, #532]	; 302d0 <flatcc_json_parser_struct_as_root@@Base+0xfe4>
   300b8:	vldr	d17, [sp, #16]
   300bc:	vdiv.f64	d16, d17, d16
   300c0:	vstr	d16, [sp, #16]
   300c4:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   300c8:	vldr	d16, [pc, #520]	; 302d8 <flatcc_json_parser_struct_as_root@@Base+0xfec>
   300cc:	vldr	d17, [sp, #16]
   300d0:	vdiv.f64	d16, d17, d16
   300d4:	vstr	d16, [sp, #16]
   300d8:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   300dc:	vldr	d16, [pc, #1012]	; 304d8 <flatcc_json_parser_struct_as_root@@Base+0x11ec>
   300e0:	vldr	d17, [sp, #16]
   300e4:	vdiv.f64	d16, d17, d16
   300e8:	vstr	d16, [sp, #16]
   300ec:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   300f0:	vldr	d16, [pc, #1000]	; 304e0 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   300f4:	vldr	d17, [sp, #16]
   300f8:	vdiv.f64	d16, d17, d16
   300fc:	vstr	d16, [sp, #16]
   30100:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30104:	vldr	d16, [pc, #988]	; 304e8 <flatcc_json_parser_struct_as_root@@Base+0x11fc>
   30108:	vldr	d17, [sp, #16]
   3010c:	vdiv.f64	d16, d17, d16
   30110:	vstr	d16, [sp, #16]
   30114:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30118:	vldr	d16, [pc, #976]	; 304f0 <flatcc_json_parser_struct_as_root@@Base+0x1204>
   3011c:	vldr	d17, [sp, #16]
   30120:	vdiv.f64	d16, d17, d16
   30124:	vstr	d16, [sp, #16]
   30128:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3012c:	vldr	d16, [pc, #964]	; 304f8 <flatcc_json_parser_struct_as_root@@Base+0x120c>
   30130:	vldr	d17, [sp, #16]
   30134:	vdiv.f64	d16, d17, d16
   30138:	vstr	d16, [sp, #16]
   3013c:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30140:	vldr	d16, [pc, #952]	; 30500 <flatcc_json_parser_struct_as_root@@Base+0x1214>
   30144:	vldr	d17, [sp, #16]
   30148:	vdiv.f64	d16, d17, d16
   3014c:	vstr	d16, [sp, #16]
   30150:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30154:	vldr	d16, [pc, #940]	; 30508 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   30158:	vldr	d17, [sp, #16]
   3015c:	vdiv.f64	d16, d17, d16
   30160:	vstr	d16, [sp, #16]
   30164:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30168:	vldr	d16, [pc, #928]	; 30510 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   3016c:	vldr	d17, [sp, #16]
   30170:	vdiv.f64	d16, d17, d16
   30174:	vstr	d16, [sp, #16]
   30178:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3017c:	vldr	d16, [sp, #16]
   30180:	vmov.f64	d17, #36	; 0x41200000  10.0
   30184:	vdiv.f64	d16, d16, d17
   30188:	vstr	d16, [sp, #16]
   3018c:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30190:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30194:	vldr	d16, [sp, #16]
   30198:	vmov.f64	d17, #36	; 0x41200000  10.0
   3019c:	vmul.f64	d16, d16, d17
   301a0:	vstr	d16, [sp, #16]
   301a4:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   301a8:	vldr	d16, [pc, #864]	; 30510 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   301ac:	vldr	d17, [sp, #16]
   301b0:	vmul.f64	d16, d17, d16
   301b4:	vstr	d16, [sp, #16]
   301b8:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   301bc:	vldr	d16, [pc, #836]	; 30508 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   301c0:	vldr	d17, [sp, #16]
   301c4:	vmul.f64	d16, d17, d16
   301c8:	vstr	d16, [sp, #16]
   301cc:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   301d0:	vldr	d16, [pc, #808]	; 30500 <flatcc_json_parser_struct_as_root@@Base+0x1214>
   301d4:	vldr	d17, [sp, #16]
   301d8:	vmul.f64	d16, d17, d16
   301dc:	vstr	d16, [sp, #16]
   301e0:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   301e4:	vldr	d16, [pc, #780]	; 304f8 <flatcc_json_parser_struct_as_root@@Base+0x120c>
   301e8:	vldr	d17, [sp, #16]
   301ec:	vmul.f64	d16, d17, d16
   301f0:	vstr	d16, [sp, #16]
   301f4:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   301f8:	vldr	d16, [pc, #752]	; 304f0 <flatcc_json_parser_struct_as_root@@Base+0x1204>
   301fc:	vldr	d17, [sp, #16]
   30200:	vmul.f64	d16, d17, d16
   30204:	vstr	d16, [sp, #16]
   30208:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3020c:	vldr	d16, [pc, #724]	; 304e8 <flatcc_json_parser_struct_as_root@@Base+0x11fc>
   30210:	vldr	d17, [sp, #16]
   30214:	vmul.f64	d16, d17, d16
   30218:	vstr	d16, [sp, #16]
   3021c:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30220:	vldr	d16, [pc, #696]	; 304e0 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   30224:	vldr	d17, [sp, #16]
   30228:	vmul.f64	d16, d17, d16
   3022c:	vstr	d16, [sp, #16]
   30230:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30234:	vldr	d16, [pc, #668]	; 304d8 <flatcc_json_parser_struct_as_root@@Base+0x11ec>
   30238:	vldr	d17, [sp, #16]
   3023c:	vmul.f64	d16, d17, d16
   30240:	vstr	d16, [sp, #16]
   30244:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30248:	vldr	d16, [pc, #640]	; 304d0 <flatcc_json_parser_struct_as_root@@Base+0x11e4>
   3024c:	vldr	d17, [sp, #16]
   30250:	vmul.f64	d16, d17, d16
   30254:	vstr	d16, [sp, #16]
   30258:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3025c:	vldr	d16, [pc, #612]	; 304c8 <flatcc_json_parser_struct_as_root@@Base+0x11dc>
   30260:	vldr	d17, [sp, #16]
   30264:	vmul.f64	d16, d17, d16
   30268:	vstr	d16, [sp, #16]
   3026c:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
	...
   30278:			; <UNDEFINED> instruction: 0x064dd592
   3027c:	strmi	pc, [r0], #207	; 0xcf
   30280:	usatle	lr, #2, r0, asr #30
   30284:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   30288:	ldmvc	r5!, {r6, sl, fp, pc}
   3028c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   30290:	addsvs	r3, r1, r0, lsl #26
   30294:	mvnmi	r5, #228, 16	; 0xe40000
   30298:	strbvs	ip, [lr, -r0, lsl #16]
   3029c:			; <UNDEFINED> instruction: 0x43abc16d
   302a0:	ldrbhi	sl, [r8]
   302a4:	cmnmi	r6, #1459617792	; 0x57000000
   302a8:	strbcc	r8, [r0, r0]!
   302ac:	movtmi	ip, #4985	; 0x1379
   302b0:	ldrtcs	r0, [r4], -r0
   302b4:	movwmi	r6, #52213	; 0xcbf5
   302b8:	cdpne	0, 9, cr0, cr0, cr0, {0}
   302bc:	sbcsmi	fp, r6, #196, 24	; 0xc400
   302c0:	strb	r0, [r0, #-0]
   302c4:	adcmi	r3, r2, #156	; 0x9c
   302c8:	andge	r0, r0, #0
   302cc:	rsbmi	r1, sp, #148, 20	; 0x94000
   302d0:	stmda	r0, {}	; <UNPREDICTABLE>
   302d4:	eorsmi	r4, r7, #7733248	; 0x760000
   302d8:	andcs	r0, r0, r0
   302dc:	andmi	sl, r2, #95	; 0x5f
   302e0:	vldr	d16, [pc, #472]	; 304c0 <flatcc_json_parser_struct_as_root@@Base+0x11d4>
   302e4:	vldr	d17, [sp, #16]
   302e8:	vmul.f64	d16, d17, d16
   302ec:	vstr	d16, [sp, #16]
   302f0:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   302f4:	vldr	d16, [pc, #444]	; 304b8 <flatcc_json_parser_struct_as_root@@Base+0x11cc>
   302f8:	vldr	d17, [sp, #16]
   302fc:	vmul.f64	d16, d17, d16
   30300:	vstr	d16, [sp, #16]
   30304:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30308:	vldr	d16, [pc, #416]	; 304b0 <flatcc_json_parser_struct_as_root@@Base+0x11c4>
   3030c:	vldr	d17, [sp, #16]
   30310:	vmul.f64	d16, d17, d16
   30314:	vstr	d16, [sp, #16]
   30318:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3031c:	vldr	d16, [pc, #388]	; 304a8 <flatcc_json_parser_struct_as_root@@Base+0x11bc>
   30320:	vldr	d17, [sp, #16]
   30324:	vmul.f64	d16, d17, d16
   30328:	vstr	d16, [sp, #16]
   3032c:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30330:	vldr	d16, [pc, #360]	; 304a0 <flatcc_json_parser_struct_as_root@@Base+0x11b4>
   30334:	vldr	d17, [sp, #16]
   30338:	vmul.f64	d16, d17, d16
   3033c:	vstr	d16, [sp, #16]
   30340:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30344:	vldr	d16, [pc, #332]	; 30498 <flatcc_json_parser_struct_as_root@@Base+0x11ac>
   30348:	vldr	d17, [sp, #16]
   3034c:	vmul.f64	d16, d17, d16
   30350:	vstr	d16, [sp, #16]
   30354:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30358:	vldr	d16, [pc, #304]	; 30490 <flatcc_json_parser_struct_as_root@@Base+0x11a4>
   3035c:	vldr	d17, [sp, #16]
   30360:	vmul.f64	d16, d17, d16
   30364:	vstr	d16, [sp, #16]
   30368:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3036c:	vldr	d16, [pc, #276]	; 30488 <flatcc_json_parser_struct_as_root@@Base+0x119c>
   30370:	vldr	d17, [sp, #16]
   30374:	vmul.f64	d16, d17, d16
   30378:	vstr	d16, [sp, #16]
   3037c:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30380:	vldr	d16, [pc, #248]	; 30480 <flatcc_json_parser_struct_as_root@@Base+0x1194>
   30384:	vldr	d17, [sp, #16]
   30388:	vmul.f64	d16, d17, d16
   3038c:	vstr	d16, [sp, #16]
   30390:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   30394:	vldr	d16, [pc, #220]	; 30478 <flatcc_json_parser_struct_as_root@@Base+0x118c>
   30398:	vldr	d17, [sp, #16]
   3039c:	vmul.f64	d16, d17, d16
   303a0:	vstr	d16, [sp, #16]
   303a4:	b	303b8 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   303a8:	vldr	d16, [pc, #192]	; 30470 <flatcc_json_parser_struct_as_root@@Base+0x1184>
   303ac:	vldr	d17, [sp, #16]
   303b0:	vmul.f64	d16, d17, d16
   303b4:	vstr	d16, [sp, #16]
   303b8:	vldr	d16, [sp, #16]
   303bc:	ldr	r0, [fp, #28]
   303c0:	vstr	d16, [r0]
   303c4:	b	30438 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   303c8:	ldr	r0, [sp, #40]	; 0x28
   303cc:	ldr	r1, [sp, #44]	; 0x2c
   303d0:	ldr	r2, [fp, #16]
   303d4:	ldr	r3, [fp, #20]
   303d8:	ldr	ip, [fp, #24]
   303dc:	ldr	lr, [fp, #28]
   303e0:	mov	r4, sp
   303e4:	str	lr, [r4, #4]
   303e8:	str	ip, [r4]
   303ec:	bl	29cf0 <grisu3_diy_fp_encode_double@@Base>
   303f0:	cmp	r0, #0
   303f4:	beq	303fc <flatcc_json_parser_struct_as_root@@Base+0x1110>
   303f8:	b	30438 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   303fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30400:	add	r1, sp, #28
   30404:	bl	12b44 <strtod@plt>
   30408:	ldr	r0, [fp, #28]
   3040c:	vstr	d0, [r0]
   30410:	ldr	r0, [sp, #28]
   30414:	ldr	r1, [fp, #-28]	; 0xffffffe4
   30418:	cmp	r0, r1
   3041c:	bcs	3042c <flatcc_json_parser_struct_as_root@@Base+0x1140>
   30420:	ldr	r0, [sp, #28]
   30424:	str	r0, [fp, #-20]	; 0xffffffec
   30428:	b	30460 <flatcc_json_parser_struct_as_root@@Base+0x1174>
   3042c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30430:	str	r0, [fp, #-20]	; 0xffffffec
   30434:	b	30460 <flatcc_json_parser_struct_as_root@@Base+0x1174>
   30438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3043c:	cmp	r0, #0
   30440:	beq	30458 <flatcc_json_parser_struct_as_root@@Base+0x116c>
   30444:	ldr	r0, [fp, #28]
   30448:	vldr	d16, [r0]
   3044c:	vneg.f64	d16, d16
   30450:	ldr	r0, [fp, #28]
   30454:	vstr	d16, [r0]
   30458:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3045c:	str	r0, [fp, #-20]	; 0xffffffec
   30460:	ldr	r0, [fp, #-20]	; 0xffffffec
   30464:	sub	sp, fp, #16
   30468:	pop	{r4, r5, r6, sl, fp, pc}
   3046c:	nop	{0}
   30470:			; <UNDEFINED> instruction: 0x064dd592
   30474:	strmi	pc, [r0], #207	; 0xcf
   30478:	usatle	lr, #2, r0, asr #30
   3047c:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   30480:	ldmvc	r5!, {r6, sl, fp, pc}
   30484:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   30488:	addsvs	r3, r1, r0, lsl #26
   3048c:	mvnmi	r5, #228, 16	; 0xe40000
   30490:	strbvs	ip, [lr, -r0, lsl #16]
   30494:			; <UNDEFINED> instruction: 0x43abc16d
   30498:	ldrbhi	sl, [r8]
   3049c:	cmnmi	r6, #1459617792	; 0x57000000
   304a0:	strbcc	r8, [r0, r0]!
   304a4:	movtmi	ip, #4985	; 0x1379
   304a8:	ldrtcs	r0, [r4], -r0
   304ac:	movwmi	r6, #52213	; 0xcbf5
   304b0:	cdpne	0, 9, cr0, cr0, cr0, {0}
   304b4:	sbcsmi	fp, r6, #196, 24	; 0xc400
   304b8:	strb	r0, [r0, #-0]
   304bc:	adcmi	r3, r2, #156	; 0x9c
   304c0:	andge	r0, r0, #0
   304c4:	rsbmi	r1, sp, #148, 20	; 0x94000
   304c8:	stmda	r0, {}	; <UNPREDICTABLE>
   304cc:	eorsmi	r4, r7, #7733248	; 0x760000
   304d0:	andcs	r0, r0, r0
   304d4:	andmi	sl, r2, #95	; 0x5f
   304d8:	andeq	r0, r0, r0
   304dc:	bicmi	ip, sp, r5, ror #26
   304e0:	andeq	r0, r0, r0
   304e4:	orrsmi	sp, r7, r4, lsl #15
   304e8:	andeq	r0, r0, r0
   304ec:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   304f0:	andeq	r0, r0, r0
   304f4:	smlawbmi	lr, r0, r4, r8
   304f8:	andeq	r0, r0, r0
   304fc:	rscsmi	r6, r8, r0, lsl #20
   30500:	andeq	r0, r0, r0
   30504:	sbcmi	r8, r3, r0, lsl #16
   30508:	andeq	r0, r0, r0
   3050c:	addmi	r4, pc, r0
   30510:	andeq	r0, r0, r0
   30514:	subsmi	r0, r9, r0
   30518:	push	{r4, sl, fp, lr}
   3051c:	add	fp, sp, #8
   30520:	sub	sp, sp, #32
   30524:	ldr	ip, [fp, #12]
   30528:	ldr	lr, [fp, #8]
   3052c:	ldr	r4, [fp, #16]
   30530:	str	r0, [fp, #-16]
   30534:	str	r1, [sp, #20]
   30538:	str	r2, [sp, #16]
   3053c:	str	r3, [sp, #12]
   30540:	str	ip, [sp, #4]
   30544:	str	lr, [sp]
   30548:	ldr	r0, [sp, #12]
   3054c:	cmp	r0, #0
   30550:	beq	30570 <flatcc_json_parser_struct_as_root@@Base+0x1284>
   30554:	ldr	r0, [fp, #-16]
   30558:	ldr	r1, [sp, #20]
   3055c:	ldr	r2, [sp, #16]
   30560:	movw	r3, #8
   30564:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   30568:	str	r0, [fp, #-12]
   3056c:	b	305b8 <flatcc_json_parser_struct_as_root@@Base+0x12cc>
   30570:	ldr	r0, [sp]
   30574:	ldr	r1, [sp, #4]
   30578:	subs	r0, r0, #256	; 0x100
   3057c:	sbcs	r1, r1, #0
   30580:	bcc	305a4 <flatcc_json_parser_struct_as_root@@Base+0x12b8>
   30584:	b	30588 <flatcc_json_parser_struct_as_root@@Base+0x129c>
   30588:	ldr	r0, [fp, #-16]
   3058c:	ldr	r1, [sp, #20]
   30590:	ldr	r2, [sp, #16]
   30594:	movw	r3, #7
   30598:	bl	2abf8 <flatcc_json_parser_set_error@@Base>
   3059c:	str	r0, [fp, #-12]
   305a0:	b	305b8 <flatcc_json_parser_struct_as_root@@Base+0x12cc>
   305a4:	ldrb	r0, [sp]
   305a8:	ldr	r1, [fp, #16]
   305ac:	strb	r0, [r1]
   305b0:	ldr	r0, [sp, #20]
   305b4:	str	r0, [fp, #-12]
   305b8:	ldr	r0, [fp, #-12]
   305bc:	sub	sp, fp, #8
   305c0:	pop	{r4, sl, fp, pc}
   305c4:	push	{fp, lr}
   305c8:	mov	fp, sp
   305cc:	sub	sp, sp, #16
   305d0:	str	r0, [fp, #-4]
   305d4:	str	r1, [sp, #8]
   305d8:	str	r2, [sp, #4]
   305dc:	ldr	r0, [fp, #-4]
   305e0:	ldr	r1, [sp, #8]
   305e4:	ldr	r2, [sp, #4]
   305e8:	bl	2ca34 <flatcc_json_parser_float@@Base+0x254>
   305ec:	str	r0, [sp, #8]
   305f0:	ldr	r0, [fp, #-4]
   305f4:	ldr	r0, [r0, #12]
   305f8:	cmp	r0, #0
   305fc:	bne	30614 <flatcc_json_parser_struct_as_root@@Base+0x1328>
   30600:	ldr	r0, [fp, #-4]
   30604:	ldr	r1, [sp, #8]
   30608:	ldr	r2, [sp, #4]
   3060c:	bl	2b984 <flatcc_json_parser_skip_constant@@Base+0x104>
   30610:	str	r0, [sp, #8]
   30614:	ldr	r0, [sp, #8]
   30618:	mov	sp, fp
   3061c:	pop	{fp, pc}
   30620:	sub	sp, sp, #4
   30624:	strb	r0, [sp, #3]
   30628:	ldrb	r0, [sp, #3]
   3062c:	add	sp, sp, #4
   30630:	bx	lr
   30634:	eor	r1, r1, #-2147483648	; 0x80000000
   30638:	b	30640 <flatcc_json_parser_struct_as_root@@Base+0x1354>
   3063c:	eor	r3, r3, #-2147483648	; 0x80000000
   30640:	push	{r4, r5, lr}
   30644:	lsl	r4, r1, #1
   30648:	lsl	r5, r3, #1
   3064c:	teq	r4, r5
   30650:	teqeq	r0, r2
   30654:	orrsne	ip, r4, r0
   30658:	orrsne	ip, r5, r2
   3065c:	mvnsne	ip, r4, asr #21
   30660:	mvnsne	ip, r5, asr #21
   30664:	beq	30850 <flatcc_json_parser_struct_as_root@@Base+0x1564>
   30668:	lsr	r4, r4, #21
   3066c:	rsbs	r5, r4, r5, lsr #21
   30670:	rsblt	r5, r5, #0
   30674:	ble	30694 <flatcc_json_parser_struct_as_root@@Base+0x13a8>
   30678:	add	r4, r4, r5
   3067c:	eor	r2, r0, r2
   30680:	eor	r3, r1, r3
   30684:	eor	r0, r2, r0
   30688:	eor	r1, r3, r1
   3068c:	eor	r2, r0, r2
   30690:	eor	r3, r1, r3
   30694:	cmp	r5, #54	; 0x36
   30698:	pophi	{r4, r5, pc}
   3069c:	tst	r1, #-2147483648	; 0x80000000
   306a0:	lsl	r1, r1, #12
   306a4:	mov	ip, #1048576	; 0x100000
   306a8:	orr	r1, ip, r1, lsr #12
   306ac:	beq	306b8 <flatcc_json_parser_struct_as_root@@Base+0x13cc>
   306b0:	rsbs	r0, r0, #0
   306b4:	rsc	r1, r1, #0
   306b8:	tst	r3, #-2147483648	; 0x80000000
   306bc:	lsl	r3, r3, #12
   306c0:	orr	r3, ip, r3, lsr #12
   306c4:	beq	306d0 <flatcc_json_parser_struct_as_root@@Base+0x13e4>
   306c8:	rsbs	r2, r2, #0
   306cc:	rsc	r3, r3, #0
   306d0:	teq	r4, r5
   306d4:	beq	30838 <flatcc_json_parser_struct_as_root@@Base+0x154c>
   306d8:	sub	r4, r4, #1
   306dc:	rsbs	lr, r5, #32
   306e0:	blt	306fc <flatcc_json_parser_struct_as_root@@Base+0x1410>
   306e4:	lsl	ip, r2, lr
   306e8:	adds	r0, r0, r2, lsr r5
   306ec:	adc	r1, r1, #0
   306f0:	adds	r0, r0, r3, lsl lr
   306f4:	adcs	r1, r1, r3, asr r5
   306f8:	b	30718 <flatcc_json_parser_struct_as_root@@Base+0x142c>
   306fc:	sub	r5, r5, #32
   30700:	add	lr, lr, #32
   30704:	cmp	r2, #1
   30708:	lsl	ip, r3, lr
   3070c:	orrcs	ip, ip, #2
   30710:	adds	r0, r0, r3, asr r5
   30714:	adcs	r1, r1, r3, asr #31
   30718:	and	r5, r1, #-2147483648	; 0x80000000
   3071c:	bpl	3072c <flatcc_json_parser_struct_as_root@@Base+0x1440>
   30720:	rsbs	ip, ip, #0
   30724:	rscs	r0, r0, #0
   30728:	rsc	r1, r1, #0
   3072c:	cmp	r1, #1048576	; 0x100000
   30730:	bcc	30770 <flatcc_json_parser_struct_as_root@@Base+0x1484>
   30734:	cmp	r1, #2097152	; 0x200000
   30738:	bcc	30758 <flatcc_json_parser_struct_as_root@@Base+0x146c>
   3073c:	lsrs	r1, r1, #1
   30740:	rrxs	r0, r0
   30744:	rrx	ip, ip
   30748:	add	r4, r4, #1
   3074c:	lsl	r2, r4, #21
   30750:	cmn	r2, #4194304	; 0x400000
   30754:	bcs	308b0 <flatcc_json_parser_struct_as_root@@Base+0x15c4>
   30758:	cmp	ip, #-2147483648	; 0x80000000
   3075c:	lsrseq	ip, r0, #1
   30760:	adcs	r0, r0, #0
   30764:	adc	r1, r1, r4, lsl #20
   30768:	orr	r1, r1, r5
   3076c:	pop	{r4, r5, pc}
   30770:	lsls	ip, ip, #1
   30774:	adcs	r0, r0, r0
   30778:	adc	r1, r1, r1
   3077c:	tst	r1, #1048576	; 0x100000
   30780:	sub	r4, r4, #1
   30784:	bne	30758 <flatcc_json_parser_struct_as_root@@Base+0x146c>
   30788:	teq	r1, #0
   3078c:	moveq	r1, r0
   30790:	moveq	r0, #0
   30794:	clz	r3, r1
   30798:	addeq	r3, r3, #32
   3079c:	sub	r3, r3, #11
   307a0:	subs	r2, r3, #32
   307a4:	bge	307c8 <flatcc_json_parser_struct_as_root@@Base+0x14dc>
   307a8:	adds	r2, r2, #12
   307ac:	ble	307c4 <flatcc_json_parser_struct_as_root@@Base+0x14d8>
   307b0:	add	ip, r2, #20
   307b4:	rsb	r2, r2, #12
   307b8:	lsl	r0, r1, ip
   307bc:	lsr	r1, r1, r2
   307c0:	b	307d8 <flatcc_json_parser_struct_as_root@@Base+0x14ec>
   307c4:	add	r2, r2, #20
   307c8:	rsble	ip, r2, #32
   307cc:	lsl	r1, r1, r2
   307d0:	orrle	r1, r1, r0, lsr ip
   307d4:	lslle	r0, r0, r2
   307d8:	subs	r4, r4, r3
   307dc:	addge	r1, r1, r4, lsl #20
   307e0:	orrge	r1, r1, r5
   307e4:	popge	{r4, r5, pc}
   307e8:	mvn	r4, r4
   307ec:	subs	r4, r4, #31
   307f0:	bge	3082c <flatcc_json_parser_struct_as_root@@Base+0x1540>
   307f4:	adds	r4, r4, #12
   307f8:	bgt	30814 <flatcc_json_parser_struct_as_root@@Base+0x1528>
   307fc:	add	r4, r4, #20
   30800:	rsb	r2, r4, #32
   30804:	lsr	r0, r0, r4
   30808:	orr	r0, r0, r1, lsl r2
   3080c:	orr	r1, r5, r1, lsr r4
   30810:	pop	{r4, r5, pc}
   30814:	rsb	r4, r4, #12
   30818:	rsb	r2, r4, #32
   3081c:	lsr	r0, r0, r2
   30820:	orr	r0, r0, r1, lsl r4
   30824:	mov	r1, r5
   30828:	pop	{r4, r5, pc}
   3082c:	lsr	r0, r1, r4
   30830:	mov	r1, r5
   30834:	pop	{r4, r5, pc}
   30838:	teq	r4, #0
   3083c:	eor	r3, r3, #1048576	; 0x100000
   30840:	eoreq	r1, r1, #1048576	; 0x100000
   30844:	addeq	r4, r4, #1
   30848:	subne	r5, r5, #1
   3084c:	b	306d8 <flatcc_json_parser_struct_as_root@@Base+0x13ec>
   30850:	mvns	ip, r4, asr #21
   30854:	mvnsne	ip, r5, asr #21
   30858:	beq	308c0 <flatcc_json_parser_struct_as_root@@Base+0x15d4>
   3085c:	teq	r4, r5
   30860:	teqeq	r0, r2
   30864:	beq	30878 <flatcc_json_parser_struct_as_root@@Base+0x158c>
   30868:	orrs	ip, r4, r0
   3086c:	moveq	r1, r3
   30870:	moveq	r0, r2
   30874:	pop	{r4, r5, pc}
   30878:	teq	r1, r3
   3087c:	movne	r1, #0
   30880:	movne	r0, #0
   30884:	popne	{r4, r5, pc}
   30888:	lsrs	ip, r4, #21
   3088c:	bne	308a0 <flatcc_json_parser_struct_as_root@@Base+0x15b4>
   30890:	lsls	r0, r0, #1
   30894:	adcs	r1, r1, r1
   30898:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3089c:	pop	{r4, r5, pc}
   308a0:	adds	r4, r4, #4194304	; 0x400000
   308a4:	addcc	r1, r1, #1048576	; 0x100000
   308a8:	popcc	{r4, r5, pc}
   308ac:	and	r5, r1, #-2147483648	; 0x80000000
   308b0:	orr	r1, r5, #2130706432	; 0x7f000000
   308b4:	orr	r1, r1, #15728640	; 0xf00000
   308b8:	mov	r0, #0
   308bc:	pop	{r4, r5, pc}
   308c0:	mvns	ip, r4, asr #21
   308c4:	movne	r1, r3
   308c8:	movne	r0, r2
   308cc:	mvnseq	ip, r5, asr #21
   308d0:	movne	r3, r1
   308d4:	movne	r2, r0
   308d8:	orrs	r4, r0, r1, lsl #12
   308dc:	orrseq	r5, r2, r3, lsl #12
   308e0:	teqeq	r1, r3
   308e4:	orrne	r1, r1, #524288	; 0x80000
   308e8:	pop	{r4, r5, pc}
   308ec:	teq	r0, #0
   308f0:	moveq	r1, #0
   308f4:	bxeq	lr
   308f8:	push	{r4, r5, lr}
   308fc:	mov	r4, #1024	; 0x400
   30900:	add	r4, r4, #50	; 0x32
   30904:	mov	r5, #0
   30908:	mov	r1, #0
   3090c:	b	30788 <flatcc_json_parser_struct_as_root@@Base+0x149c>
   30910:	teq	r0, #0
   30914:	moveq	r1, #0
   30918:	bxeq	lr
   3091c:	push	{r4, r5, lr}
   30920:	mov	r4, #1024	; 0x400
   30924:	add	r4, r4, #50	; 0x32
   30928:	ands	r5, r0, #-2147483648	; 0x80000000
   3092c:	rsbmi	r0, r0, #0
   30930:	mov	r1, #0
   30934:	b	30788 <flatcc_json_parser_struct_as_root@@Base+0x149c>
   30938:	lsls	r2, r0, #1
   3093c:	asr	r1, r2, #3
   30940:	rrx	r1, r1
   30944:	lsl	r0, r2, #28
   30948:	andsne	r3, r2, #-16777216	; 0xff000000
   3094c:	teqne	r3, #-16777216	; 0xff000000
   30950:	eorne	r1, r1, #939524096	; 0x38000000
   30954:	bxne	lr
   30958:	bics	r2, r2, #-16777216	; 0xff000000
   3095c:	bxeq	lr
   30960:	teq	r3, #-16777216	; 0xff000000
   30964:	orreq	r1, r1, #524288	; 0x80000
   30968:	bxeq	lr
   3096c:	push	{r4, r5, lr}
   30970:	mov	r4, #896	; 0x380
   30974:	and	r5, r1, #-2147483648	; 0x80000000
   30978:	bic	r1, r1, #-2147483648	; 0x80000000
   3097c:	b	30788 <flatcc_json_parser_struct_as_root@@Base+0x149c>
   30980:	orrs	r2, r0, r1
   30984:	bxeq	lr
   30988:	push	{r4, r5, lr}
   3098c:	mov	r5, #0
   30990:	b	309b0 <flatcc_json_parser_struct_as_root@@Base+0x16c4>
   30994:	orrs	r2, r0, r1
   30998:	bxeq	lr
   3099c:	push	{r4, r5, lr}
   309a0:	ands	r5, r1, #-2147483648	; 0x80000000
   309a4:	bpl	309b0 <flatcc_json_parser_struct_as_root@@Base+0x16c4>
   309a8:	rsbs	r0, r0, #0
   309ac:	rsc	r1, r1, #0
   309b0:	mov	r4, #1024	; 0x400
   309b4:	add	r4, r4, #50	; 0x32
   309b8:	lsrs	ip, r1, #22
   309bc:	beq	3072c <flatcc_json_parser_struct_as_root@@Base+0x1440>
   309c0:	mov	r2, #3
   309c4:	lsrs	ip, ip, #3
   309c8:	addne	r2, r2, #3
   309cc:	lsrs	ip, ip, #3
   309d0:	addne	r2, r2, #3
   309d4:	add	r2, r2, ip, lsr #3
   309d8:	rsb	r3, r2, #32
   309dc:	lsl	ip, r0, r3
   309e0:	lsr	r0, r0, r2
   309e4:	orr	r0, r0, r1, lsl r3
   309e8:	lsr	r1, r1, r2
   309ec:	add	r4, r4, r2
   309f0:	b	3072c <flatcc_json_parser_struct_as_root@@Base+0x1440>
   309f4:	eor	r0, r0, #-2147483648	; 0x80000000
   309f8:	b	30a00 <flatcc_json_parser_struct_as_root@@Base+0x1714>
   309fc:	eor	r1, r1, #-2147483648	; 0x80000000
   30a00:	lsls	r2, r0, #1
   30a04:	lslsne	r3, r1, #1
   30a08:	teqne	r2, r3
   30a0c:	mvnsne	ip, r2, asr #24
   30a10:	mvnsne	ip, r3, asr #24
   30a14:	beq	30b0c <flatcc_json_parser_struct_as_root@@Base+0x1820>
   30a18:	lsr	r2, r2, #24
   30a1c:	rsbs	r3, r2, r3, lsr #24
   30a20:	addgt	r2, r2, r3
   30a24:	eorgt	r1, r0, r1
   30a28:	eorgt	r0, r1, r0
   30a2c:	eorgt	r1, r0, r1
   30a30:	rsblt	r3, r3, #0
   30a34:	cmp	r3, #25
   30a38:	bxhi	lr
   30a3c:	tst	r0, #-2147483648	; 0x80000000
   30a40:	orr	r0, r0, #8388608	; 0x800000
   30a44:	bic	r0, r0, #-16777216	; 0xff000000
   30a48:	rsbne	r0, r0, #0
   30a4c:	tst	r1, #-2147483648	; 0x80000000
   30a50:	orr	r1, r1, #8388608	; 0x800000
   30a54:	bic	r1, r1, #-16777216	; 0xff000000
   30a58:	rsbne	r1, r1, #0
   30a5c:	teq	r2, r3
   30a60:	beq	30af4 <flatcc_json_parser_struct_as_root@@Base+0x1808>
   30a64:	sub	r2, r2, #1
   30a68:	adds	r0, r0, r1, asr r3
   30a6c:	rsb	r3, r3, #32
   30a70:	lsl	r1, r1, r3
   30a74:	and	r3, r0, #-2147483648	; 0x80000000
   30a78:	bpl	30a84 <flatcc_json_parser_struct_as_root@@Base+0x1798>
   30a7c:	rsbs	r1, r1, #0
   30a80:	rsc	r0, r0, #0
   30a84:	cmp	r0, #8388608	; 0x800000
   30a88:	bcc	30abc <flatcc_json_parser_struct_as_root@@Base+0x17d0>
   30a8c:	cmp	r0, #16777216	; 0x1000000
   30a90:	bcc	30aa8 <flatcc_json_parser_struct_as_root@@Base+0x17bc>
   30a94:	lsrs	r0, r0, #1
   30a98:	rrx	r1, r1
   30a9c:	add	r2, r2, #1
   30aa0:	cmp	r2, #254	; 0xfe
   30aa4:	bcs	30b60 <flatcc_json_parser_struct_as_root@@Base+0x1874>
   30aa8:	cmp	r1, #-2147483648	; 0x80000000
   30aac:	adc	r0, r0, r2, lsl #23
   30ab0:	biceq	r0, r0, #1
   30ab4:	orr	r0, r0, r3
   30ab8:	bx	lr
   30abc:	lsls	r1, r1, #1
   30ac0:	adc	r0, r0, r0
   30ac4:	tst	r0, #8388608	; 0x800000
   30ac8:	sub	r2, r2, #1
   30acc:	bne	30aa8 <flatcc_json_parser_struct_as_root@@Base+0x17bc>
   30ad0:	clz	ip, r0
   30ad4:	sub	ip, ip, #8
   30ad8:	subs	r2, r2, ip
   30adc:	lsl	r0, r0, ip
   30ae0:	addge	r0, r0, r2, lsl #23
   30ae4:	rsblt	r2, r2, #0
   30ae8:	orrge	r0, r0, r3
   30aec:	orrlt	r0, r3, r0, lsr r2
   30af0:	bx	lr
   30af4:	teq	r2, #0
   30af8:	eor	r1, r1, #8388608	; 0x800000
   30afc:	eoreq	r0, r0, #8388608	; 0x800000
   30b00:	addeq	r2, r2, #1
   30b04:	subne	r3, r3, #1
   30b08:	b	30a64 <flatcc_json_parser_struct_as_root@@Base+0x1778>
   30b0c:	lsl	r3, r1, #1
   30b10:	mvns	ip, r2, asr #24
   30b14:	mvnsne	ip, r3, asr #24
   30b18:	beq	30b6c <flatcc_json_parser_struct_as_root@@Base+0x1880>
   30b1c:	teq	r2, r3
   30b20:	beq	30b30 <flatcc_json_parser_struct_as_root@@Base+0x1844>
   30b24:	teq	r2, #0
   30b28:	moveq	r0, r1
   30b2c:	bx	lr
   30b30:	teq	r0, r1
   30b34:	movne	r0, #0
   30b38:	bxne	lr
   30b3c:	tst	r2, #-16777216	; 0xff000000
   30b40:	bne	30b50 <flatcc_json_parser_struct_as_root@@Base+0x1864>
   30b44:	lsls	r0, r0, #1
   30b48:	orrcs	r0, r0, #-2147483648	; 0x80000000
   30b4c:	bx	lr
   30b50:	adds	r2, r2, #33554432	; 0x2000000
   30b54:	addcc	r0, r0, #8388608	; 0x800000
   30b58:	bxcc	lr
   30b5c:	and	r3, r0, #-2147483648	; 0x80000000
   30b60:	orr	r0, r3, #2130706432	; 0x7f000000
   30b64:	orr	r0, r0, #8388608	; 0x800000
   30b68:	bx	lr
   30b6c:	mvns	r2, r2, asr #24
   30b70:	movne	r0, r1
   30b74:	mvnseq	r3, r3, asr #24
   30b78:	movne	r1, r0
   30b7c:	lsls	r2, r0, #9
   30b80:	lslseq	r3, r1, #9
   30b84:	teqeq	r0, r1
   30b88:	orrne	r0, r0, #4194304	; 0x400000
   30b8c:	bx	lr
   30b90:	mov	r3, #0
   30b94:	b	30ba0 <flatcc_json_parser_struct_as_root@@Base+0x18b4>
   30b98:	ands	r3, r0, #-2147483648	; 0x80000000
   30b9c:	rsbmi	r0, r0, #0
   30ba0:	movs	ip, r0
   30ba4:	bxeq	lr
   30ba8:	orr	r3, r3, #1258291200	; 0x4b000000
   30bac:	mov	r1, r0
   30bb0:	mov	r0, #0
   30bb4:	b	30bf8 <flatcc_json_parser_struct_as_root@@Base+0x190c>
   30bb8:	orrs	r2, r0, r1
   30bbc:	bxeq	lr
   30bc0:	mov	r3, #0
   30bc4:	b	30be0 <flatcc_json_parser_struct_as_root@@Base+0x18f4>
   30bc8:	orrs	r2, r0, r1
   30bcc:	bxeq	lr
   30bd0:	ands	r3, r1, #-2147483648	; 0x80000000
   30bd4:	bpl	30be0 <flatcc_json_parser_struct_as_root@@Base+0x18f4>
   30bd8:	rsbs	r0, r0, #0
   30bdc:	rsc	r1, r1, #0
   30be0:	movs	ip, r1
   30be4:	moveq	ip, r0
   30be8:	moveq	r1, r0
   30bec:	moveq	r0, #0
   30bf0:	orr	r3, r3, #1526726656	; 0x5b000000
   30bf4:	subeq	r3, r3, #268435456	; 0x10000000
   30bf8:	sub	r3, r3, #8388608	; 0x800000
   30bfc:	clz	r2, ip
   30c00:	subs	r2, r2, #8
   30c04:	sub	r3, r3, r2, lsl #23
   30c08:	blt	30c28 <flatcc_json_parser_struct_as_root@@Base+0x193c>
   30c0c:	add	r3, r3, r1, lsl r2
   30c10:	lsl	ip, r0, r2
   30c14:	rsb	r2, r2, #32
   30c18:	cmp	ip, #-2147483648	; 0x80000000
   30c1c:	adc	r0, r3, r0, lsr r2
   30c20:	biceq	r0, r0, #1
   30c24:	bx	lr
   30c28:	add	r2, r2, #32
   30c2c:	lsl	ip, r1, r2
   30c30:	rsb	r2, r2, #32
   30c34:	orrs	r0, r0, ip, lsl #1
   30c38:	adc	r0, r3, r1, lsr r2
   30c3c:	biceq	r0, r0, ip, lsr #31
   30c40:	bx	lr

00030c44 <__libc_csu_init@@Base>:
   30c44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30c48:	mov	r7, r0
   30c4c:	ldr	r6, [pc, #72]	; 30c9c <__libc_csu_init@@Base+0x58>
   30c50:	ldr	r5, [pc, #72]	; 30ca0 <__libc_csu_init@@Base+0x5c>
   30c54:	add	r6, pc, r6
   30c58:	add	r5, pc, r5
   30c5c:	sub	r6, r6, r5
   30c60:	mov	r8, r1
   30c64:	mov	r9, r2
   30c68:	bl	12a40 <fopen@plt-0x20>
   30c6c:	asrs	r6, r6, #2
   30c70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   30c74:	mov	r4, #0
   30c78:	add	r4, r4, #1
   30c7c:	ldr	r3, [r5], #4
   30c80:	mov	r2, r9
   30c84:	mov	r1, r8
   30c88:	mov	r0, r7
   30c8c:	blx	r3
   30c90:	cmp	r6, r4
   30c94:	bne	30c78 <__libc_csu_init@@Base+0x34>
   30c98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30c9c:			; <UNDEFINED> instruction: 0x000132b0
   30ca0:	andeq	r3, r1, r8, lsr #5

00030ca4 <__libc_csu_fini@@Base>:
   30ca4:	bx	lr

Disassembly of section .fini:

00030ca8 <.fini>:
   30ca8:	push	{r3, lr}
   30cac:	pop	{r3, pc}
