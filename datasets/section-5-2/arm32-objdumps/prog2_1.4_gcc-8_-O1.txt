
../repos/prog2/1.4:     file format elf32-littlearm


Disassembly of section .init:

00010640 <.init>:
   10640:	push	{r3, lr}
   10644:	bl	10720 <_start@@Base+0x3c>
   10648:	pop	{r3, pc}

Disassembly of section .plt:

0001064c <printf@plt-0x14>:
   1064c:	push	{lr}		; (str lr, [sp, #-4]!)
   10650:	ldr	lr, [pc, #4]	; 1065c <printf@plt-0x4>
   10654:	add	lr, pc, lr
   10658:	ldr	pc, [lr, #8]!
   1065c:	andeq	r0, r1, r4, lsr #19

00010660 <printf@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #16, 20	; 0x10000
   10668:	ldr	pc, [ip, #2468]!	; 0x9a4

0001066c <fopen@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #16, 20	; 0x10000
   10674:	ldr	pc, [ip, #2460]!	; 0x99c

00010678 <free@plt>:
   10678:	add	ip, pc, #0, 12
   1067c:	add	ip, ip, #16, 20	; 0x10000
   10680:	ldr	pc, [ip, #2452]!	; 0x994

00010684 <malloc@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2444]!	; 0x98c

00010690 <__libc_start_main@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2436]!	; 0x984

0001069c <__gmon_start__@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2428]!	; 0x97c

000106a8 <exit@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2420]!	; 0x974

000106b4 <fclose@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2412]!	; 0x96c

000106c0 <fseek@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2404]!	; 0x964

000106cc <abort@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2396]!	; 0x95c

000106d8 <getc@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2388]!	; 0x954

Disassembly of section .text:

000106e4 <_start@@Base>:
   106e4:	mov	fp, #0
   106e8:	mov	lr, #0
   106ec:	pop	{r1}		; (ldr r1, [sp], #4)
   106f0:	mov	r2, sp
   106f4:	push	{r2}		; (str r2, [sp, #-4]!)
   106f8:	push	{r0}		; (str r0, [sp, #-4]!)
   106fc:	ldr	ip, [pc, #16]	; 10714 <_start@@Base+0x30>
   10700:	push	{ip}		; (str ip, [sp, #-4]!)
   10704:	ldr	r0, [pc, #12]	; 10718 <_start@@Base+0x34>
   10708:	ldr	r3, [pc, #12]	; 1071c <_start@@Base+0x38>
   1070c:	bl	10690 <__libc_start_main@plt>
   10710:	bl	106cc <abort@plt>
   10714:	strdeq	r0, [r1], -r4
   10718:	andeq	r0, r1, r0, lsl r8
   1071c:	muleq	r1, r4, fp
   10720:	ldr	r3, [pc, #20]	; 1073c <_start@@Base+0x58>
   10724:	ldr	r2, [pc, #20]	; 10740 <_start@@Base+0x5c>
   10728:	add	r3, pc, r3
   1072c:	ldr	r2, [r3, r2]
   10730:	cmp	r2, #0
   10734:	bxeq	lr
   10738:	b	1069c <__gmon_start__@plt>
   1073c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10740:	andeq	r0, r0, r8, lsr r0
   10744:	ldr	r0, [pc, #24]	; 10764 <_start@@Base+0x80>
   10748:	ldr	r3, [pc, #24]	; 10768 <_start@@Base+0x84>
   1074c:	cmp	r3, r0
   10750:	bxeq	lr
   10754:	ldr	r3, [pc, #16]	; 1076c <_start@@Base+0x88>
   10758:	cmp	r3, #0
   1075c:	bxeq	lr
   10760:	bx	r3
   10764:	andeq	r1, r2, r4, asr #32
   10768:	andeq	r1, r2, r4, asr #32
   1076c:	andeq	r0, r0, r0
   10770:	ldr	r0, [pc, #36]	; 1079c <_start@@Base+0xb8>
   10774:	ldr	r1, [pc, #36]	; 107a0 <_start@@Base+0xbc>
   10778:	sub	r1, r1, r0
   1077c:	asr	r1, r1, #2
   10780:	add	r1, r1, r1, lsr #31
   10784:	asrs	r1, r1, #1
   10788:	bxeq	lr
   1078c:	ldr	r3, [pc, #16]	; 107a4 <_start@@Base+0xc0>
   10790:	cmp	r3, #0
   10794:	bxeq	lr
   10798:	bx	r3
   1079c:	andeq	r1, r2, r4, asr #32
   107a0:	andeq	r1, r2, r4, asr #32
   107a4:	andeq	r0, r0, r0
   107a8:	push	{r4, lr}
   107ac:	ldr	r4, [pc, #24]	; 107cc <_start@@Base+0xe8>
   107b0:	ldrb	r3, [r4]
   107b4:	cmp	r3, #0
   107b8:	popne	{r4, pc}
   107bc:	bl	10744 <_start@@Base+0x60>
   107c0:	mov	r3, #1
   107c4:	strb	r3, [r4]
   107c8:	pop	{r4, pc}
   107cc:	andeq	r1, r2, r4, asr #32
   107d0:	b	10770 <_start@@Base+0x8c>

000107d4 <print_pixelinfo@@Base>:
   107d4:	push	{lr}		; (str lr, [sp, #-4]!)
   107d8:	sub	sp, sp, #12
   107dc:	add	r3, r2, r2, lsl #1
   107e0:	ldr	ip, [r0, r1, lsl #2]
   107e4:	add	r0, ip, r3
   107e8:	ldrb	r3, [ip, r3]
   107ec:	ldrb	ip, [r0, #2]
   107f0:	str	ip, [sp, #4]
   107f4:	ldrb	r0, [r0, #1]
   107f8:	str	r0, [sp]
   107fc:	movw	r0, #3076	; 0xc04
   10800:	movt	r0, #1
   10804:	bl	10660 <printf@plt>
   10808:	add	sp, sp, #12
   1080c:	pop	{pc}		; (ldr pc, [sp], #4)

00010810 <main@@Base>:
   10810:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10814:	strd	r6, [sp, #8]
   10818:	strd	r8, [sp, #16]
   1081c:	strd	sl, [sp, #24]
   10820:	str	lr, [sp, #32]
   10824:	sub	sp, sp, #12
   10828:	movw	r1, #3116	; 0xc2c
   1082c:	movt	r1, #1
   10830:	movw	r0, #3120	; 0xc30
   10834:	movt	r0, #1
   10838:	bl	1066c <fopen@plt>
   1083c:	mov	r5, r0
   10840:	bl	106d8 <getc@plt>
   10844:	cmp	r0, #66	; 0x42
   10848:	bne	10a38 <main@@Base+0x228>
   1084c:	mov	r0, r5
   10850:	bl	106d8 <getc@plt>
   10854:	cmp	r0, #77	; 0x4d
   10858:	bne	10a38 <main@@Base+0x228>
   1085c:	mov	r0, r5
   10860:	bl	106d8 <getc@plt>
   10864:	mov	r6, r0
   10868:	mov	r0, r5
   1086c:	bl	106d8 <getc@plt>
   10870:	mov	r7, r0
   10874:	mov	r0, r5
   10878:	bl	106d8 <getc@plt>
   1087c:	lsl	r4, r0, #16
   10880:	orr	r4, r4, r7, lsl #8
   10884:	orr	r4, r4, r6
   10888:	mov	r0, r5
   1088c:	bl	106d8 <getc@plt>
   10890:	orr	r1, r4, r0, lsl #24
   10894:	movw	r0, #3204	; 0xc84
   10898:	movt	r0, #1
   1089c:	bl	10660 <printf@plt>
   108a0:	mov	r2, #1
   108a4:	mov	r1, #4
   108a8:	mov	r0, r5
   108ac:	bl	106c0 <fseek@plt>
   108b0:	mov	r0, r5
   108b4:	bl	106d8 <getc@plt>
   108b8:	mov	r6, r0
   108bc:	mov	r0, r5
   108c0:	bl	106d8 <getc@plt>
   108c4:	mov	r7, r0
   108c8:	mov	r0, r5
   108cc:	bl	106d8 <getc@plt>
   108d0:	lsl	r4, r0, #16
   108d4:	orr	r4, r4, r7, lsl #8
   108d8:	orr	r4, r4, r6
   108dc:	mov	r0, r5
   108e0:	bl	106d8 <getc@plt>
   108e4:	orr	r4, r4, r0, lsl #24
   108e8:	mov	r2, #1
   108ec:	mov	r1, #4
   108f0:	mov	r0, r5
   108f4:	bl	106c0 <fseek@plt>
   108f8:	mov	r0, r5
   108fc:	bl	106d8 <getc@plt>
   10900:	mov	r6, r0
   10904:	mov	r0, r5
   10908:	bl	106d8 <getc@plt>
   1090c:	mov	r7, r0
   10910:	mov	r0, r5
   10914:	bl	106d8 <getc@plt>
   10918:	lsl	r9, r0, #16
   1091c:	orr	r9, r9, r7, lsl #8
   10920:	orr	r9, r9, r6
   10924:	mov	r0, r5
   10928:	bl	106d8 <getc@plt>
   1092c:	orr	r9, r9, r0, lsl #24
   10930:	mov	r1, r9
   10934:	movw	r0, #3240	; 0xca8
   10938:	movt	r0, #1
   1093c:	bl	10660 <printf@plt>
   10940:	mov	r0, r5
   10944:	bl	106d8 <getc@plt>
   10948:	mov	r6, r0
   1094c:	mov	r0, r5
   10950:	bl	106d8 <getc@plt>
   10954:	mov	r7, r0
   10958:	mov	r0, r5
   1095c:	bl	106d8 <getc@plt>
   10960:	lsl	sl, r0, #16
   10964:	orr	sl, sl, r7, lsl #8
   10968:	orr	sl, sl, r6
   1096c:	mov	r0, r5
   10970:	bl	106d8 <getc@plt>
   10974:	orr	sl, sl, r0, lsl #24
   10978:	mov	r1, sl
   1097c:	movw	r0, #3264	; 0xcc0
   10980:	movt	r0, #1
   10984:	bl	10660 <printf@plt>
   10988:	mov	r0, r5
   1098c:	bl	106d8 <getc@plt>
   10990:	mov	r6, r0
   10994:	mov	r0, r5
   10998:	bl	106d8 <getc@plt>
   1099c:	orr	r0, r6, r0, lsl #8
   109a0:	cmp	r0, #1
   109a4:	bne	10a4c <main@@Base+0x23c>
   109a8:	mov	r0, r5
   109ac:	bl	106d8 <getc@plt>
   109b0:	mov	r6, r0
   109b4:	mov	r0, r5
   109b8:	bl	106d8 <getc@plt>
   109bc:	orr	r6, r6, r0, lsl #8
   109c0:	mov	r1, r6
   109c4:	movw	r0, #3384	; 0xd38
   109c8:	movt	r0, #1
   109cc:	bl	10660 <printf@plt>
   109d0:	cmp	r6, #24
   109d4:	bne	10a60 <main@@Base+0x250>
   109d8:	mov	r2, #0
   109dc:	mov	r1, r4
   109e0:	mov	r0, r5
   109e4:	bl	106c0 <fseek@plt>
   109e8:	lsl	r3, sl, #2
   109ec:	mov	r6, r3
   109f0:	str	r3, [sp, #4]
   109f4:	mov	r0, r3
   109f8:	bl	10684 <malloc@plt>
   109fc:	mov	fp, r0
   10a00:	cmp	sl, #0
   10a04:	ble	10b58 <main@@Base+0x348>
   10a08:	add	r7, r9, r9, lsl #1
   10a0c:	mov	r4, r0
   10a10:	add	r6, r6, r0
   10a14:	mov	r0, r7
   10a18:	bl	10684 <malloc@plt>
   10a1c:	str	r0, [r4], #4
   10a20:	cmp	r4, r6
   10a24:	bne	10a14 <main@@Base+0x204>
   10a28:	sub	r8, sl, #1
   10a2c:	add	r6, fp, r8, lsl #2
   10a30:	add	r7, r9, r9, lsl #1
   10a34:	b	10a80 <main@@Base+0x270>
   10a38:	movw	r0, #3144	; 0xc48
   10a3c:	movt	r0, #1
   10a40:	bl	10660 <printf@plt>
   10a44:	mov	r0, #1
   10a48:	bl	106a8 <exit@plt>
   10a4c:	movw	r0, #3288	; 0xcd8
   10a50:	movt	r0, #1
   10a54:	bl	10660 <printf@plt>
   10a58:	mov	r0, #2
   10a5c:	bl	106a8 <exit@plt>
   10a60:	movw	r0, #3404	; 0xd4c
   10a64:	movt	r0, #1
   10a68:	bl	10660 <printf@plt>
   10a6c:	mov	r0, #3
   10a70:	bl	106a8 <exit@plt>
   10a74:	sub	r6, r6, #4
   10a78:	subs	r8, r8, #1
   10a7c:	bmi	10ad4 <main@@Base+0x2c4>
   10a80:	cmp	r9, #0
   10a84:	movgt	r4, #0
   10a88:	ble	10a74 <main@@Base+0x264>
   10a8c:	mov	r0, r5
   10a90:	bl	106d8 <getc@plt>
   10a94:	ldr	r3, [r6]
   10a98:	add	r3, r3, r4
   10a9c:	strb	r0, [r3, #2]
   10aa0:	mov	r0, r5
   10aa4:	bl	106d8 <getc@plt>
   10aa8:	ldr	r3, [r6]
   10aac:	add	r3, r3, r4
   10ab0:	strb	r0, [r3, #1]
   10ab4:	mov	r0, r5
   10ab8:	bl	106d8 <getc@plt>
   10abc:	ldr	r3, [r6]
   10ac0:	strb	r0, [r3, r4]
   10ac4:	add	r4, r4, #3
   10ac8:	cmp	r4, r7
   10acc:	bne	10a8c <main@@Base+0x27c>
   10ad0:	b	10a74 <main@@Base+0x264>
   10ad4:	mov	r0, r5
   10ad8:	bl	106b4 <fclose@plt>
   10adc:	mov	r2, #0
   10ae0:	mov	r1, r2
   10ae4:	mov	r0, fp
   10ae8:	bl	107d4 <print_pixelinfo@@Base>
   10aec:	mov	r2, #0
   10af0:	mov	r1, #532	; 0x214
   10af4:	mov	r0, fp
   10af8:	bl	107d4 <print_pixelinfo@@Base>
   10afc:	movw	r2, #443	; 0x1bb
   10b00:	mov	r1, #408	; 0x198
   10b04:	mov	r0, fp
   10b08:	bl	107d4 <print_pixelinfo@@Base>
   10b0c:	cmp	sl, #0
   10b10:	ble	10b30 <main@@Base+0x320>
   10b14:	mov	r4, fp
   10b18:	ldr	r3, [sp, #4]
   10b1c:	add	r5, fp, r3
   10b20:	ldr	r0, [r4], #4
   10b24:	bl	10678 <free@plt>
   10b28:	cmp	r4, r5
   10b2c:	bne	10b20 <main@@Base+0x310>
   10b30:	mov	r0, fp
   10b34:	bl	10678 <free@plt>
   10b38:	mov	r0, #0
   10b3c:	add	sp, sp, #12
   10b40:	ldrd	r4, [sp]
   10b44:	ldrd	r6, [sp, #8]
   10b48:	ldrd	r8, [sp, #16]
   10b4c:	ldrd	sl, [sp, #24]
   10b50:	add	sp, sp, #32
   10b54:	pop	{pc}		; (ldr pc, [sp], #4)
   10b58:	mov	r0, r5
   10b5c:	bl	106b4 <fclose@plt>
   10b60:	mov	r2, #0
   10b64:	mov	r1, r2
   10b68:	mov	r0, fp
   10b6c:	bl	107d4 <print_pixelinfo@@Base>
   10b70:	mov	r2, #0
   10b74:	mov	r1, #532	; 0x214
   10b78:	mov	r0, fp
   10b7c:	bl	107d4 <print_pixelinfo@@Base>
   10b80:	movw	r2, #443	; 0x1bb
   10b84:	mov	r1, #408	; 0x198
   10b88:	mov	r0, fp
   10b8c:	bl	107d4 <print_pixelinfo@@Base>
   10b90:	b	10b30 <main@@Base+0x320>

00010b94 <__libc_csu_init@@Base>:
   10b94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b98:	mov	r7, r0
   10b9c:	ldr	r6, [pc, #72]	; 10bec <__libc_csu_init@@Base+0x58>
   10ba0:	ldr	r5, [pc, #72]	; 10bf0 <__libc_csu_init@@Base+0x5c>
   10ba4:	add	r6, pc, r6
   10ba8:	add	r5, pc, r5
   10bac:	sub	r6, r6, r5
   10bb0:	mov	r8, r1
   10bb4:	mov	r9, r2
   10bb8:	bl	10640 <printf@plt-0x20>
   10bbc:	asrs	r6, r6, #2
   10bc0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bc4:	mov	r4, #0
   10bc8:	add	r4, r4, #1
   10bcc:	ldr	r3, [r5], #4
   10bd0:	mov	r2, r9
   10bd4:	mov	r1, r8
   10bd8:	mov	r0, r7
   10bdc:	blx	r3
   10be0:	cmp	r6, r4
   10be4:	bne	10bc8 <__libc_csu_init@@Base+0x34>
   10be8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bec:	andeq	r0, r1, r8, ror #6
   10bf0:	andeq	r0, r1, r0, ror #6

00010bf4 <__libc_csu_fini@@Base>:
   10bf4:	bx	lr

Disassembly of section .fini:

00010bf8 <.fini>:
   10bf8:	push	{r3, lr}
   10bfc:	pop	{r3, pc}
