
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

00010764 <.init>:
   10764:	push	{r3, lr}
   10768:	bl	108e4 <_start@@Base+0x3c>
   1076c:	pop	{r3, pc}

Disassembly of section .plt:

00010770 <strcmp@plt-0x14>:
   10770:	push	{lr}		; (str lr, [sp, #-4]!)
   10774:	ldr	lr, [pc, #4]	; 10780 <strcmp@plt-0x4>
   10778:	add	lr, pc, lr
   1077c:	ldr	pc, [lr, #8]!
   10780:	andeq	r1, r1, r0, lsl #17

00010784 <strcmp@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2176]!	; 0x880

00010790 <printf@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2168]!	; 0x878

0001079c <fopen@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2160]!	; 0x870

000107a8 <free@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2152]!	; 0x868

000107b4 <ftell@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2144]!	; 0x860

000107c0 <rewind@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2136]!	; 0x858

000107cc <fwrite@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2128]!	; 0x850

000107d8 <fread@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2120]!	; 0x848

000107e4 <puts@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2112]!	; 0x840

000107f0 <malloc@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2104]!	; 0x838

000107fc <__libc_start_main@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2096]!	; 0x830

00010808 <__gmon_start__@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2088]!	; 0x828

00010814 <exit@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2080]!	; 0x820

00010820 <fclose@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2072]!	; 0x818

0001082c <fseek@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2064]!	; 0x810

00010838 <abort@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2056]!	; 0x808

00010844 <__assert_fail@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2048]!	; 0x800

Disassembly of section .text:

00010850 <main@@Base>:
   10850:	sub	r3, r0, #1
   10854:	cmp	r3, #1
   10858:	bhi	10878 <main@@Base+0x28>
   1085c:	cmp	r0, #2
   10860:	movw	r3, #8284	; 0x205c
   10864:	movt	r3, #2
   10868:	ldreq	r2, [r1, #4]
   1086c:	streq	r2, [r3]
   10870:	ldr	r0, [r3]
   10874:	b	10ad8 <test_schema@@Base>
   10878:	movw	r3, #8288	; 0x2060
   1087c:	movt	r3, #2
   10880:	str	r4, [sp, #-8]!
   10884:	movw	r0, #7012	; 0x1b64
   10888:	movt	r0, #1
   1088c:	ldr	r3, [r3]
   10890:	mov	r2, #64	; 0x40
   10894:	mov	r1, #1
   10898:	str	lr, [sp, #4]
   1089c:	bl	107cc <fwrite@plt>
   108a0:	mov	r0, #1
   108a4:	bl	10814 <exit@plt>

000108a8 <_start@@Base>:
   108a8:	mov	fp, #0
   108ac:	mov	lr, #0
   108b0:	pop	{r1}		; (ldr r1, [sp], #4)
   108b4:	mov	r2, sp
   108b8:	push	{r2}		; (str r2, [sp, #-4]!)
   108bc:	push	{r0}		; (str r0, [sp, #-4]!)
   108c0:	ldr	ip, [pc, #16]	; 108d8 <_start@@Base+0x30>
   108c4:	push	{ip}		; (str ip, [sp, #-4]!)
   108c8:	ldr	r0, [pc, #12]	; 108dc <_start@@Base+0x34>
   108cc:	ldr	r3, [pc, #12]	; 108e0 <_start@@Base+0x38>
   108d0:	bl	107fc <__libc_start_main@plt>
   108d4:	bl	10838 <abort@plt>
   108d8:	andeq	r1, r1, r4, ror #14
   108dc:	andeq	r0, r1, r0, asr r8
   108e0:	andeq	r1, r1, r4, lsl #14
   108e4:	ldr	r3, [pc, #20]	; 10900 <_start@@Base+0x58>
   108e8:	ldr	r2, [pc, #20]	; 10904 <_start@@Base+0x5c>
   108ec:	add	r3, pc, r3
   108f0:	ldr	r2, [r3, r2]
   108f4:	cmp	r2, #0
   108f8:	bxeq	lr
   108fc:	b	10808 <__gmon_start__@plt>
   10900:	andeq	r1, r1, ip, lsl #14
   10904:	andeq	r0, r0, r0, asr r0
   10908:	ldr	r0, [pc, #24]	; 10928 <_start@@Base+0x80>
   1090c:	ldr	r3, [pc, #24]	; 1092c <_start@@Base+0x84>
   10910:	cmp	r3, r0
   10914:	bxeq	lr
   10918:	ldr	r3, [pc, #16]	; 10930 <_start@@Base+0x88>
   1091c:	cmp	r3, #0
   10920:	bxeq	lr
   10924:	bx	r3
   10928:	andeq	r2, r2, r0, rrx
   1092c:	andeq	r2, r2, r0, rrx
   10930:	andeq	r0, r0, r0
   10934:	ldr	r0, [pc, #36]	; 10960 <_start@@Base+0xb8>
   10938:	ldr	r1, [pc, #36]	; 10964 <_start@@Base+0xbc>
   1093c:	sub	r1, r1, r0
   10940:	asr	r1, r1, #2
   10944:	add	r1, r1, r1, lsr #31
   10948:	asrs	r1, r1, #1
   1094c:	bxeq	lr
   10950:	ldr	r3, [pc, #16]	; 10968 <_start@@Base+0xc0>
   10954:	cmp	r3, #0
   10958:	bxeq	lr
   1095c:	bx	r3
   10960:	andeq	r2, r2, r0, rrx
   10964:	andeq	r2, r2, r0, rrx
   10968:	andeq	r0, r0, r0
   1096c:	push	{r4, lr}
   10970:	ldr	r4, [pc, #24]	; 10990 <_start@@Base+0xe8>
   10974:	ldrb	r3, [r4]
   10978:	cmp	r3, #0
   1097c:	popne	{r4, pc}
   10980:	bl	10908 <_start@@Base+0x60>
   10984:	mov	r3, #1
   10988:	strb	r3, [r4]
   1098c:	pop	{r4, pc}
   10990:	andeq	r2, r2, r4, rrx
   10994:	b	10934 <_start@@Base+0x8c>
   10998:	movw	r3, #6004	; 0x1774
   1099c:	movt	r3, #1
   109a0:	str	r4, [sp, #-8]!
   109a4:	movw	r1, #6272	; 0x1880
   109a8:	movt	r1, #1
   109ac:	str	lr, [sp, #4]
   109b0:	movw	r0, #6368	; 0x18e0
   109b4:	movt	r0, #1
   109b8:	mov	r2, #215	; 0xd7
   109bc:	bl	10844 <__assert_fail@plt>
   109c0:	movw	r1, #6272	; 0x1880
   109c4:	movt	r1, #1
   109c8:	ldr	r3, [pc, #20]	; 109e4 <_start@@Base+0x13c>
   109cc:	movw	r0, #6424	; 0x1918
   109d0:	movt	r0, #1
   109d4:	str	r4, [sp, #-8]!
   109d8:	mov	r2, #218	; 0xda
   109dc:	str	lr, [sp, #4]
   109e0:	bl	10844 <__assert_fail@plt>
   109e4:	muleq	r1, r0, r7
   109e8:	movw	r1, #6272	; 0x1880
   109ec:	movt	r1, #1
   109f0:	ldr	r3, [pc, #20]	; 10a0c <_start@@Base+0x164>
   109f4:	movw	r0, #6424	; 0x1918
   109f8:	movt	r0, #1
   109fc:	str	r4, [sp, #-8]!
   10a00:	mov	r2, #195	; 0xc3
   10a04:	str	lr, [sp, #4]
   10a08:	bl	10844 <__assert_fail@plt>
   10a0c:	andeq	r1, r1, r8, lsr #15
   10a10:	movw	r1, #6272	; 0x1880
   10a14:	movt	r1, #1
   10a18:	ldr	r3, [pc, #20]	; 10a34 <_start@@Base+0x18c>
   10a1c:	movw	r0, #6424	; 0x1918
   10a20:	movt	r0, #1
   10a24:	str	r4, [sp, #-8]!
   10a28:	mov	r2, #204	; 0xcc
   10a2c:	str	lr, [sp, #4]
   10a30:	bl	10844 <__assert_fail@plt>
   10a34:	andeq	r1, r1, r0, asr #15
   10a38:	movw	r1, #6272	; 0x1880
   10a3c:	movt	r1, #1
   10a40:	ldr	r3, [pc, #20]	; 10a5c <_start@@Base+0x1b4>
   10a44:	movw	r0, #6368	; 0x18e0
   10a48:	movt	r0, #1
   10a4c:	str	r4, [sp, #-8]!
   10a50:	mov	r2, #192	; 0xc0
   10a54:	str	lr, [sp, #4]
   10a58:	bl	10844 <__assert_fail@plt>
   10a5c:	andeq	r1, r1, r4, ror #15
   10a60:	movw	r1, #6272	; 0x1880
   10a64:	movt	r1, #1
   10a68:	ldr	r3, [pc, #20]	; 10a84 <_start@@Base+0x1dc>
   10a6c:	movw	r0, #6424	; 0x1918
   10a70:	movt	r0, #1
   10a74:	str	r4, [sp, #-8]!
   10a78:	mov	r2, #201	; 0xc9
   10a7c:	str	lr, [sp, #4]
   10a80:	bl	10844 <__assert_fail@plt>
   10a84:	strdeq	r1, [r1], -ip
   10a88:	movw	r1, #6272	; 0x1880
   10a8c:	movt	r1, #1
   10a90:	ldr	r3, [pc, #20]	; 10aac <_start@@Base+0x204>
   10a94:	movw	r0, #6424	; 0x1918
   10a98:	movt	r0, #1
   10a9c:	str	r4, [sp, #-8]!
   10aa0:	mov	r2, #147	; 0x93
   10aa4:	str	lr, [sp, #4]
   10aa8:	bl	10844 <__assert_fail@plt>
   10aac:	andeq	r1, r1, r4, lsl r8
   10ab0:	movw	r1, #6272	; 0x1880
   10ab4:	movt	r1, #1
   10ab8:	ldr	r3, [pc, #20]	; 10ad4 <_start@@Base+0x22c>
   10abc:	movw	r0, #6424	; 0x1918
   10ac0:	movt	r0, #1
   10ac4:	str	r4, [sp, #-8]!
   10ac8:	mov	r2, #149	; 0x95
   10acc:	str	lr, [sp, #4]
   10ad0:	bl	10844 <__assert_fail@plt>
   10ad4:	andeq	r1, r1, r0, lsr r8

00010ad8 <test_schema@@Base>:
   10ad8:	movw	r1, #6464	; 0x1940
   10adc:	movt	r1, #1
   10ae0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10ae4:	strd	r6, [sp, #8]
   10ae8:	strd	r8, [sp, #16]
   10aec:	strd	sl, [sp, #24]
   10af0:	str	lr, [sp, #32]
   10af4:	sub	sp, sp, #20
   10af8:	bl	1079c <fopen@plt>
   10afc:	subs	r6, r0, #0
   10b00:	beq	10e44 <test_schema@@Base+0x36c>
   10b04:	mov	r2, #2
   10b08:	mov	r1, #0
   10b0c:	bl	1082c <fseek@plt>
   10b10:	mov	r0, r6
   10b14:	bl	107b4 <ftell@plt>
   10b18:	mov	r7, r0
   10b1c:	movw	r3, #10000	; 0x2710
   10b20:	cmp	r7, r3
   10b24:	mov	r0, r6
   10b28:	bhi	10e40 <test_schema@@Base+0x368>
   10b2c:	bl	107c0 <rewind@plt>
   10b30:	cmp	r7, #0
   10b34:	movne	r0, r7
   10b38:	moveq	r0, #1
   10b3c:	bl	107f0 <malloc@plt>
   10b40:	subs	r9, r0, #0
   10b44:	beq	10e3c <test_schema@@Base+0x364>
   10b48:	mov	r4, #0
   10b4c:	b	10b54 <test_schema@@Base+0x7c>
   10b50:	add	r4, r4, r0
   10b54:	mov	r3, r6
   10b58:	sub	r2, r7, r4
   10b5c:	mov	r1, #1
   10b60:	add	r0, r9, r4
   10b64:	bl	107d8 <fread@plt>
   10b68:	cmp	r0, #0
   10b6c:	bne	10b50 <test_schema@@Base+0x78>
   10b70:	cmp	r7, r4
   10b74:	mov	r5, r0
   10b78:	mov	r0, r6
   10b7c:	bne	10e1c <test_schema@@Base+0x344>
   10b80:	bl	10820 <fclose@plt>
   10b84:	ldr	r2, [r9, #4]
   10b88:	movw	r3, #17986	; 0x4642
   10b8c:	movt	r3, #21314	; 0x5342
   10b90:	cmp	r2, r3
   10b94:	beq	10bb4 <test_schema@@Base+0xdc>
   10b98:	movw	r1, #6272	; 0x1880
   10b9c:	movt	r1, #1
   10ba0:	ldr	r3, [pc, #2884]	; 116ec <test_schema@@Base+0xc14>
   10ba4:	movw	r0, #6424	; 0x1918
   10ba8:	movt	r0, #1
   10bac:	mov	r2, #237	; 0xed
   10bb0:	bl	10844 <__assert_fail@plt>
   10bb4:	ldr	r2, [r9]
   10bb8:	adds	r3, r9, r2
   10bbc:	beq	10b98 <test_schema@@Base+0xc0>
   10bc0:	ldr	r2, [r9, r2]
   10bc4:	sub	r2, r3, r2
   10bc8:	ldrh	r1, [r2]
   10bcc:	cmp	r1, #5
   10bd0:	bls	116c0 <test_schema@@Base+0xbe8>
   10bd4:	ldrh	r1, [r2, #4]
   10bd8:	cmp	r1, #0
   10bdc:	beq	116c0 <test_schema@@Base+0xbe8>
   10be0:	ldr	r2, [r3, r1]
   10be4:	add	r3, r3, r1
   10be8:	add	r2, r2, #4
   10bec:	adds	r4, r3, r2
   10bf0:	beq	10cc8 <test_schema@@Base+0x1f0>
   10bf4:	ldr	r1, [r4, #-4]
   10bf8:	cmp	r1, #0
   10bfc:	beq	10cc8 <test_schema@@Base+0x1f0>
   10c00:	ldr	r3, [r3, r2]
   10c04:	adds	r0, r4, r3
   10c08:	beq	10ca0 <test_schema@@Base+0x1c8>
   10c0c:	ldr	r3, [r4, r3]
   10c10:	sub	r3, r0, r3
   10c14:	ldrh	r2, [r3]
   10c18:	cmp	r2, #5
   10c1c:	bls	10e00 <test_schema@@Base+0x328>
   10c20:	ldrh	r2, [r3, #4]
   10c24:	cmp	r2, #0
   10c28:	beq	10e00 <test_schema@@Base+0x328>
   10c2c:	movw	r7, #6504	; 0x1968
   10c30:	movt	r7, #1
   10c34:	add	r8, r4, #4
   10c38:	mov	r6, #0
   10c3c:	b	10c60 <test_schema@@Base+0x188>
   10c40:	ldr	r3, [r3, r2]
   10c44:	sub	r3, r0, r3
   10c48:	ldrh	r2, [r3]
   10c4c:	cmp	r2, #5
   10c50:	bls	10e00 <test_schema@@Base+0x328>
   10c54:	ldrh	r2, [r3, #4]
   10c58:	cmp	r2, #0
   10c5c:	beq	10e00 <test_schema@@Base+0x328>
   10c60:	ldr	r3, [r0, r2]
   10c64:	add	r2, r0, r2
   10c68:	mov	r1, r6
   10c6c:	mov	r0, r7
   10c70:	add	r6, r6, #1
   10c74:	add	r3, r3, #4
   10c78:	add	r2, r2, r3
   10c7c:	bl	10790 <printf@plt>
   10c80:	ldr	fp, [r4, #-4]
   10c84:	cmp	r6, fp
   10c88:	bcs	10d00 <test_schema@@Base+0x228>
   10c8c:	mov	r3, r8
   10c90:	add	r8, r8, #4
   10c94:	ldr	r2, [r3]
   10c98:	adds	r0, r3, r2
   10c9c:	bne	10c40 <test_schema@@Base+0x168>
   10ca0:	movw	r1, #6272	; 0x1880
   10ca4:	movt	r1, #1
   10ca8:	ldr	r3, [pc, #2624]	; 116f0 <test_schema@@Base+0xc18>
   10cac:	movw	r0, #6424	; 0x1918
   10cb0:	movt	r0, #1
   10cb4:	mov	r2, #218	; 0xda
   10cb8:	bl	10844 <__assert_fail@plt>
   10cbc:	mov	sl, r6
   10cc0:	cmp	sl, r7
   10cc4:	beq	10e5c <test_schema@@Base+0x384>
   10cc8:	movw	r0, #6548	; 0x1994
   10ccc:	movt	r0, #1
   10cd0:	mvn	r5, #0
   10cd4:	bl	107e4 <puts@plt>
   10cd8:	mov	r0, r9
   10cdc:	bl	107a8 <free@plt>
   10ce0:	mov	r0, r5
   10ce4:	add	sp, sp, #20
   10ce8:	ldrd	r4, [sp]
   10cec:	ldrd	r6, [sp, #8]
   10cf0:	ldrd	r8, [sp, #16]
   10cf4:	ldrd	sl, [sp, #24]
   10cf8:	add	sp, sp, #32
   10cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   10d00:	cmp	fp, #0
   10d04:	beq	10cc8 <test_schema@@Base+0x1f0>
   10d08:	subs	r6, fp, #1
   10d0c:	beq	10e58 <test_schema@@Base+0x380>
   10d10:	lsr	sl, r6, #1
   10d14:	cmp	fp, sl
   10d18:	add	r2, r4, sl, lsl #2
   10d1c:	bls	11664 <test_schema@@Base+0xb8c>
   10d20:	ldr	r3, [r4, sl, lsl #2]
   10d24:	adds	r0, r2, r3
   10d28:	beq	10ca0 <test_schema@@Base+0x1c8>
   10d2c:	ldr	r2, [r2, r3]
   10d30:	sub	r2, r0, r2
   10d34:	ldrh	r3, [r2]
   10d38:	cmp	r3, #5
   10d3c:	movwhi	r8, #6524	; 0x197c
   10d40:	movhi	r7, #0
   10d44:	movthi	r8, #1
   10d48:	bhi	10d94 <test_schema@@Base+0x2bc>
   10d4c:	b	10e00 <test_schema@@Base+0x328>
   10d50:	cmp	r7, sl
   10d54:	bcs	10cc0 <test_schema@@Base+0x1e8>
   10d58:	sub	r3, sl, r7
   10d5c:	add	r3, r7, r3, lsr #1
   10d60:	cmp	fp, r3
   10d64:	add	r1, r4, r3, lsl #2
   10d68:	bls	11664 <test_schema@@Base+0xb8c>
   10d6c:	ldr	r2, [r4, r3, lsl #2]
   10d70:	adds	r0, r1, r2
   10d74:	beq	10ca0 <test_schema@@Base+0x1c8>
   10d78:	ldr	r2, [r1, r2]
   10d7c:	mov	r6, sl
   10d80:	sub	r2, r0, r2
   10d84:	ldrh	r1, [r2]
   10d88:	cmp	r1, #5
   10d8c:	bls	10e00 <test_schema@@Base+0x328>
   10d90:	mov	sl, r3
   10d94:	ldrh	r3, [r2, #4]
   10d98:	cmp	r3, #0
   10d9c:	beq	10e00 <test_schema@@Base+0x328>
   10da0:	ldr	r2, [r0, r3]
   10da4:	add	r3, r0, r3
   10da8:	mov	r1, r8
   10dac:	add	r0, r2, #4
   10db0:	add	r0, r3, r0
   10db4:	bl	10784 <strcmp@plt>
   10db8:	cmp	r0, #0
   10dbc:	bge	10d50 <test_schema@@Base+0x278>
   10dc0:	add	r7, sl, #1
   10dc4:	cmp	r7, r6
   10dc8:	bcs	10cbc <test_schema@@Base+0x1e4>
   10dcc:	sub	sl, r6, r7
   10dd0:	add	sl, r7, sl, lsr #1
   10dd4:	cmp	fp, sl
   10dd8:	add	r2, r4, sl, lsl #2
   10ddc:	bls	11664 <test_schema@@Base+0xb8c>
   10de0:	ldr	r3, [r4, sl, lsl #2]
   10de4:	adds	r0, r2, r3
   10de8:	beq	10ca0 <test_schema@@Base+0x1c8>
   10dec:	ldr	r2, [r2, r3]
   10df0:	sub	r2, r0, r2
   10df4:	ldrh	r3, [r2]
   10df8:	cmp	r3, #5
   10dfc:	bhi	10d94 <test_schema@@Base+0x2bc>
   10e00:	movw	r1, #6272	; 0x1880
   10e04:	movt	r1, #1
   10e08:	ldr	r3, [pc, #2272]	; 116f0 <test_schema@@Base+0xc18>
   10e0c:	movw	r0, #6468	; 0x1944
   10e10:	movt	r0, #1
   10e14:	mov	r2, #218	; 0xda
   10e18:	bl	10844 <__assert_fail@plt>
   10e1c:	bl	10820 <fclose@plt>
   10e20:	mov	r0, r9
   10e24:	mvn	r5, #0
   10e28:	bl	107a8 <free@plt>
   10e2c:	movw	r0, #6980	; 0x1b44
   10e30:	movt	r0, #1
   10e34:	bl	107e4 <puts@plt>
   10e38:	b	10ce0 <test_schema@@Base+0x208>
   10e3c:	mov	r0, r6
   10e40:	bl	10820 <fclose@plt>
   10e44:	movw	r0, #6980	; 0x1b44
   10e48:	movt	r0, #1
   10e4c:	bl	107e4 <puts@plt>
   10e50:	mvn	r5, #0
   10e54:	b	10ce0 <test_schema@@Base+0x208>
   10e58:	mov	r7, r6
   10e5c:	cmp	fp, r7
   10e60:	add	r2, r4, r7, lsl #2
   10e64:	bls	116e8 <test_schema@@Base+0xc10>
   10e68:	ldr	r3, [r4, r7, lsl #2]
   10e6c:	adds	r4, r2, r3
   10e70:	beq	116e4 <test_schema@@Base+0xc0c>
   10e74:	ldr	r6, [r2, r3]
   10e78:	sub	r6, r4, r6
   10e7c:	ldrh	r8, [r6]
   10e80:	cmp	r8, #5
   10e84:	bls	10e00 <test_schema@@Base+0x328>
   10e88:	ldrh	r0, [r6, #4]
   10e8c:	cmp	r0, #0
   10e90:	beq	10e00 <test_schema@@Base+0x328>
   10e94:	ldr	r3, [r4, r0]
   10e98:	add	r0, r4, r0
   10e9c:	movw	r1, #6524	; 0x197c
   10ea0:	movt	r1, #1
   10ea4:	add	r3, r3, #4
   10ea8:	add	r0, r0, r3
   10eac:	bl	10784 <strcmp@plt>
   10eb0:	cmp	r0, #0
   10eb4:	bne	10cc8 <test_schema@@Base+0x1f0>
   10eb8:	cmp	r8, #7
   10ebc:	bls	116a4 <test_schema@@Base+0xbcc>
   10ec0:	ldrh	r2, [r6, #6]
   10ec4:	cmp	r2, #0
   10ec8:	beq	116a4 <test_schema@@Base+0xbcc>
   10ecc:	ldr	r3, [r4, r2]
   10ed0:	add	r4, r4, r2
   10ed4:	add	r3, r3, #4
   10ed8:	adds	r4, r4, r3
   10edc:	beq	11018 <test_schema@@Base+0x540>
   10ee0:	ldr	r6, [r4, #-4]
   10ee4:	cmp	r6, #0
   10ee8:	beq	11018 <test_schema@@Base+0x540>
   10eec:	subs	r8, r6, #1
   10ef0:	beq	1102c <test_schema@@Base+0x554>
   10ef4:	lsr	sl, r8, #1
   10ef8:	cmp	r6, sl
   10efc:	add	r1, r4, sl, lsl #2
   10f00:	bls	11648 <test_schema@@Base+0xb70>
   10f04:	ldr	r3, [r4, sl, lsl #2]
   10f08:	adds	r0, r1, r3
   10f0c:	beq	1162c <test_schema@@Base+0xb54>
   10f10:	ldr	ip, [r1, r3]
   10f14:	sub	ip, r0, ip
   10f18:	ldrh	r3, [ip]
   10f1c:	cmp	r3, #5
   10f20:	bls	10ff0 <test_schema@@Base+0x518>
   10f24:	movw	r3, #6584	; 0x19b8
   10f28:	movt	r3, #1
   10f2c:	str	r8, [sp, #4]
   10f30:	mov	fp, #0
   10f34:	str	r3, [sp, #8]
   10f38:	b	10f80 <test_schema@@Base+0x4a8>
   10f3c:	cmp	fp, sl
   10f40:	bcs	11010 <test_schema@@Base+0x538>
   10f44:	sub	r3, sl, fp
   10f48:	add	r3, fp, r3, lsr #1
   10f4c:	cmp	r6, r3
   10f50:	add	r1, r4, r3, lsl #2
   10f54:	bls	11648 <test_schema@@Base+0xb70>
   10f58:	ldr	r2, [r4, r3, lsl #2]
   10f5c:	adds	r0, r1, r2
   10f60:	beq	1162c <test_schema@@Base+0xb54>
   10f64:	ldr	ip, [r1, r2]
   10f68:	str	sl, [sp, #4]
   10f6c:	sub	ip, r0, ip
   10f70:	ldrh	r2, [ip]
   10f74:	cmp	r2, #5
   10f78:	bls	10ff0 <test_schema@@Base+0x518>
   10f7c:	mov	sl, r3
   10f80:	ldrh	r3, [ip, #4]
   10f84:	cmp	r3, #0
   10f88:	beq	10ff0 <test_schema@@Base+0x518>
   10f8c:	ldr	r2, [r0, r3]
   10f90:	add	r3, r0, r3
   10f94:	ldr	r1, [sp, #8]
   10f98:	add	r0, r2, #4
   10f9c:	add	r0, r3, r0
   10fa0:	bl	10784 <strcmp@plt>
   10fa4:	cmp	r0, #0
   10fa8:	bge	10f3c <test_schema@@Base+0x464>
   10fac:	ldr	r3, [sp, #4]
   10fb0:	add	fp, sl, #1
   10fb4:	cmp	fp, r3
   10fb8:	bcs	1100c <test_schema@@Base+0x534>
   10fbc:	sub	sl, r3, fp
   10fc0:	add	sl, fp, sl, lsr #1
   10fc4:	cmp	r6, sl
   10fc8:	add	r2, r4, sl, lsl #2
   10fcc:	bls	11648 <test_schema@@Base+0xb70>
   10fd0:	ldr	r3, [r4, sl, lsl #2]
   10fd4:	adds	r0, r2, r3
   10fd8:	beq	1162c <test_schema@@Base+0xb54>
   10fdc:	ldr	ip, [r2, r3]
   10fe0:	sub	ip, r0, ip
   10fe4:	ldrh	r3, [ip]
   10fe8:	cmp	r3, #5
   10fec:	bhi	10f80 <test_schema@@Base+0x4a8>
   10ff0:	movw	r1, #6272	; 0x1880
   10ff4:	movt	r1, #1
   10ff8:	ldr	r3, [pc, #1780]	; 116f4 <test_schema@@Base+0xc1c>
   10ffc:	movw	r0, #6468	; 0x1944
   11000:	movt	r0, #1
   11004:	mov	r2, #195	; 0xc3
   11008:	bl	10844 <__assert_fail@plt>
   1100c:	mov	sl, r3
   11010:	cmp	sl, fp
   11014:	beq	11030 <test_schema@@Base+0x558>
   11018:	movw	r0, #6592	; 0x19c0
   1101c:	movt	r0, #1
   11020:	bl	107e4 <puts@plt>
   11024:	mvn	r5, #0
   11028:	b	10cd8 <test_schema@@Base+0x200>
   1102c:	mov	fp, r8
   11030:	cmp	r6, fp
   11034:	add	r2, r4, fp, lsl #2
   11038:	bls	116e0 <test_schema@@Base+0xc08>
   1103c:	ldr	r3, [r4, fp, lsl #2]
   11040:	adds	sl, r2, r3
   11044:	str	r3, [sp, #4]
   11048:	beq	116dc <test_schema@@Base+0xc04>
   1104c:	ldr	fp, [r2, r3]
   11050:	str	r2, [sp, #12]
   11054:	sub	fp, sl, fp
   11058:	ldrh	r3, [fp]
   1105c:	cmp	r3, #5
   11060:	str	r3, [sp, #8]
   11064:	bls	10ff0 <test_schema@@Base+0x518>
   11068:	ldrh	r1, [fp, #4]
   1106c:	cmp	r1, #0
   11070:	beq	10ff0 <test_schema@@Base+0x518>
   11074:	ldr	ip, [sl, r1]
   11078:	add	r0, sl, r1
   1107c:	movw	r1, #6584	; 0x19b8
   11080:	movt	r1, #1
   11084:	add	ip, ip, #4
   11088:	add	r0, r0, ip
   1108c:	bl	10784 <strcmp@plt>
   11090:	cmp	r0, #0
   11094:	ldr	r3, [sp, #8]
   11098:	ldr	r2, [sp, #12]
   1109c:	bne	11018 <test_schema@@Base+0x540>
   110a0:	cmp	r3, #13
   110a4:	bhi	1113c <test_schema@@Base+0x664>
   110a8:	movw	r0, #6636	; 0x19ec
   110ac:	movt	r0, #1
   110b0:	str	r2, [sp, #8]
   110b4:	bl	107e4 <puts@plt>
   110b8:	ldr	r4, [sp, #4]
   110bc:	ldr	r2, [sp, #8]
   110c0:	ldr	r3, [r2, r4]
   110c4:	str	r2, [sp, #4]
   110c8:	sub	r3, sl, r3
   110cc:	ldrh	r1, [r3]
   110d0:	cmp	r1, #5
   110d4:	bls	10ff0 <test_schema@@Base+0x518>
   110d8:	ldrh	r3, [r3, #4]
   110dc:	cmp	r3, #0
   110e0:	beq	10ff0 <test_schema@@Base+0x518>
   110e4:	ldr	r1, [sl, r3]
   110e8:	add	r3, sl, r3
   110ec:	movw	r0, #6672	; 0x1a10
   110f0:	movt	r0, #1
   110f4:	add	r1, r1, #4
   110f8:	add	r1, r3, r1
   110fc:	bl	10790 <printf@plt>
   11100:	ldr	r2, [sp, #4]
   11104:	ldr	r3, [r2, r4]
   11108:	sub	r3, sl, r3
   1110c:	ldrh	r2, [r3]
   11110:	cmp	r2, #13
   11114:	bls	11620 <test_schema@@Base+0xb48>
   11118:	ldrh	r3, [r3, #12]
   1111c:	cmp	r3, #0
   11120:	beq	11620 <test_schema@@Base+0xb48>
   11124:	ldrd	r2, [r3, sl]
   11128:	movw	r0, #6688	; 0x1a20
   1112c:	movt	r0, #1
   11130:	mvn	r5, #0
   11134:	bl	10790 <printf@plt>
   11138:	b	10cd8 <test_schema@@Base+0x200>
   1113c:	ldrh	r3, [fp, #12]
   11140:	cmp	r3, #0
   11144:	beq	110a8 <test_schema@@Base+0x5d0>
   11148:	ldrd	r0, [sl, r3]
   1114c:	cmp	r1, #0
   11150:	cmpeq	r0, #150	; 0x96
   11154:	bne	110a8 <test_schema@@Base+0x5d0>
   11158:	ldrh	r2, [fp, #6]
   1115c:	cmp	r2, #0
   11160:	beq	11684 <test_schema@@Base+0xbac>
   11164:	ldr	r3, [sl, r2]
   11168:	add	sl, sl, r2
   1116c:	adds	r2, sl, r3
   11170:	beq	116a0 <test_schema@@Base+0xbc8>
   11174:	ldr	r3, [sl, r3]
   11178:	sub	r3, r2, r3
   1117c:	ldrh	r1, [r3]
   11180:	cmp	r1, #5
   11184:	bhi	1119c <test_schema@@Base+0x6c4>
   11188:	movw	r0, #6696	; 0x1a28
   1118c:	movt	r0, #1
   11190:	bl	107e4 <puts@plt>
   11194:	mvn	r5, #0
   11198:	b	10cd8 <test_schema@@Base+0x200>
   1119c:	ldrh	r3, [r3, #4]
   111a0:	cmp	r3, #0
   111a4:	beq	11188 <test_schema@@Base+0x6b0>
   111a8:	ldrsb	r3, [r2, r3]
   111ac:	cmp	r3, #5
   111b0:	bne	11188 <test_schema@@Base+0x6b0>
   111b4:	cmp	r8, #0
   111b8:	beq	112dc <test_schema@@Base+0x804>
   111bc:	lsr	sl, r8, #1
   111c0:	cmp	r6, sl
   111c4:	add	r1, r4, sl, lsl #2
   111c8:	bls	11648 <test_schema@@Base+0xb70>
   111cc:	ldr	r2, [r4, sl, lsl #2]
   111d0:	adds	r0, r1, r2
   111d4:	beq	1162c <test_schema@@Base+0xb54>
   111d8:	ldr	ip, [r1, r2]
   111dc:	sub	ip, r0, ip
   111e0:	ldrh	r2, [ip]
   111e4:	cmp	r2, #5
   111e8:	bls	10ff0 <test_schema@@Base+0x518>
   111ec:	movw	r3, #6724	; 0x1a44
   111f0:	movt	r3, #1
   111f4:	str	r8, [sp, #4]
   111f8:	mov	fp, #0
   111fc:	str	r3, [sp, #8]
   11200:	b	11248 <test_schema@@Base+0x770>
   11204:	cmp	fp, sl
   11208:	bcs	112c0 <test_schema@@Base+0x7e8>
   1120c:	sub	r3, sl, fp
   11210:	add	r3, fp, r3, lsr #1
   11214:	cmp	r6, r3
   11218:	add	r1, r4, r3, lsl #2
   1121c:	bls	11648 <test_schema@@Base+0xb70>
   11220:	ldr	r2, [r4, r3, lsl #2]
   11224:	adds	r0, r1, r2
   11228:	beq	1162c <test_schema@@Base+0xb54>
   1122c:	ldr	ip, [r1, r2]
   11230:	str	sl, [sp, #4]
   11234:	sub	ip, r0, ip
   11238:	ldrh	r2, [ip]
   1123c:	cmp	r2, #5
   11240:	bls	10ff0 <test_schema@@Base+0x518>
   11244:	mov	sl, r3
   11248:	ldrh	r3, [ip, #4]
   1124c:	cmp	r3, #0
   11250:	beq	10ff0 <test_schema@@Base+0x518>
   11254:	ldr	r2, [r0, r3]
   11258:	add	r3, r0, r3
   1125c:	ldr	r1, [sp, #8]
   11260:	add	r0, r2, #4
   11264:	add	r0, r3, r0
   11268:	bl	10784 <strcmp@plt>
   1126c:	cmp	r0, #0
   11270:	bge	11204 <test_schema@@Base+0x72c>
   11274:	ldr	r3, [sp, #4]
   11278:	add	fp, sl, #1
   1127c:	cmp	fp, r3
   11280:	bcs	112bc <test_schema@@Base+0x7e4>
   11284:	sub	sl, r3, fp
   11288:	add	sl, fp, sl, lsr #1
   1128c:	cmp	r6, sl
   11290:	add	r2, r4, sl, lsl #2
   11294:	bls	11648 <test_schema@@Base+0xb70>
   11298:	ldr	r3, [r4, sl, lsl #2]
   1129c:	adds	r0, r2, r3
   112a0:	beq	1162c <test_schema@@Base+0xb54>
   112a4:	ldr	ip, [r2, r3]
   112a8:	sub	ip, r0, ip
   112ac:	ldrh	r3, [ip]
   112b0:	cmp	r3, #5
   112b4:	bhi	11248 <test_schema@@Base+0x770>
   112b8:	b	10ff0 <test_schema@@Base+0x518>
   112bc:	mov	sl, r3
   112c0:	cmp	sl, fp
   112c4:	beq	112e0 <test_schema@@Base+0x808>
   112c8:	movw	r0, #6732	; 0x1a4c
   112cc:	movt	r0, #1
   112d0:	bl	107e4 <puts@plt>
   112d4:	mvn	r5, #0
   112d8:	b	10cd8 <test_schema@@Base+0x200>
   112dc:	mov	fp, r8
   112e0:	cmp	r6, fp
   112e4:	add	r1, r4, fp, lsl #2
   112e8:	bls	116e0 <test_schema@@Base+0xc08>
   112ec:	ldr	r3, [r4, fp, lsl #2]
   112f0:	adds	sl, r1, r3
   112f4:	beq	116dc <test_schema@@Base+0xc04>
   112f8:	ldr	fp, [r1, r3]
   112fc:	sub	fp, sl, fp
   11300:	ldrh	r3, [fp]
   11304:	cmp	r3, #5
   11308:	str	r3, [sp, #4]
   1130c:	bls	10ff0 <test_schema@@Base+0x518>
   11310:	ldrh	r2, [fp, #4]
   11314:	cmp	r2, #0
   11318:	beq	10ff0 <test_schema@@Base+0x518>
   1131c:	ldr	r0, [sl, r2]
   11320:	add	r2, sl, r2
   11324:	movw	r1, #6724	; 0x1a44
   11328:	movt	r1, #1
   1132c:	add	r0, r0, #4
   11330:	add	r0, r2, r0
   11334:	bl	10784 <strcmp@plt>
   11338:	cmp	r0, #0
   1133c:	ldr	r3, [sp, #4]
   11340:	bne	112c8 <test_schema@@Base+0x7f0>
   11344:	cmp	r3, #7
   11348:	bls	11684 <test_schema@@Base+0xbac>
   1134c:	ldrh	r3, [fp, #6]
   11350:	cmp	r3, #0
   11354:	beq	11684 <test_schema@@Base+0xbac>
   11358:	ldr	r2, [sl, r3]
   1135c:	add	r3, sl, r3
   11360:	adds	r1, r3, r2
   11364:	beq	116a0 <test_schema@@Base+0xbc8>
   11368:	ldr	r3, [r3, r2]
   1136c:	sub	r3, r1, r3
   11370:	ldrh	r2, [r3]
   11374:	cmp	r2, #5
   11378:	bhi	11390 <test_schema@@Base+0x8b8>
   1137c:	movw	r0, #6756	; 0x1a64
   11380:	movt	r0, #1
   11384:	bl	107e4 <puts@plt>
   11388:	mvn	r5, #0
   1138c:	b	10cd8 <test_schema@@Base+0x200>
   11390:	ldrh	r0, [r3, #4]
   11394:	cmp	r0, #0
   11398:	beq	1137c <test_schema@@Base+0x8a4>
   1139c:	ldrsb	r0, [r1, r0]
   113a0:	cmp	r0, #15
   113a4:	bne	1137c <test_schema@@Base+0x8a4>
   113a8:	cmp	r2, #9
   113ac:	bls	1160c <test_schema@@Base+0xb34>
   113b0:	ldrh	r3, [r3, #8]
   113b4:	cmp	r3, #0
   113b8:	beq	1160c <test_schema@@Base+0xb34>
   113bc:	ldr	r3, [r1, r3]
   113c0:	cmp	r3, r7
   113c4:	bne	1160c <test_schema@@Base+0xb34>
   113c8:	cmp	r8, #0
   113cc:	beq	114e0 <test_schema@@Base+0xa08>
   113d0:	lsr	fp, r8, #1
   113d4:	cmp	r6, fp
   113d8:	add	r1, r4, fp, lsl #2
   113dc:	bls	11648 <test_schema@@Base+0xb70>
   113e0:	ldr	r3, [r4, fp, lsl #2]
   113e4:	adds	r2, r1, r3
   113e8:	beq	1162c <test_schema@@Base+0xb54>
   113ec:	ldr	r1, [r1, r3]
   113f0:	sub	r1, r2, r1
   113f4:	ldrh	r3, [r1]
   113f8:	cmp	r3, #5
   113fc:	bls	10ff0 <test_schema@@Base+0x518>
   11400:	movw	sl, #6804	; 0x1a94
   11404:	movt	sl, #1
   11408:	b	11450 <test_schema@@Base+0x978>
   1140c:	cmp	r5, fp
   11410:	bcs	114c4 <test_schema@@Base+0x9ec>
   11414:	sub	r3, fp, r5
   11418:	add	r3, r5, r3, lsr #1
   1141c:	cmp	r6, r3
   11420:	add	r0, r4, r3, lsl #2
   11424:	bls	11648 <test_schema@@Base+0xb70>
   11428:	ldr	r1, [r4, r3, lsl #2]
   1142c:	adds	r2, r0, r1
   11430:	beq	1162c <test_schema@@Base+0xb54>
   11434:	ldr	r1, [r0, r1]
   11438:	mov	r8, fp
   1143c:	sub	r1, r2, r1
   11440:	ldrh	r0, [r1]
   11444:	cmp	r0, #5
   11448:	bls	10ff0 <test_schema@@Base+0x518>
   1144c:	mov	fp, r3
   11450:	ldrh	r0, [r1, #4]
   11454:	cmp	r0, #0
   11458:	beq	10ff0 <test_schema@@Base+0x518>
   1145c:	ldr	r3, [r2, r0]
   11460:	add	r0, r2, r0
   11464:	mov	r1, sl
   11468:	add	r3, r3, #4
   1146c:	add	r0, r0, r3
   11470:	bl	10784 <strcmp@plt>
   11474:	cmp	r0, #0
   11478:	bge	1140c <test_schema@@Base+0x934>
   1147c:	add	r5, fp, #1
   11480:	cmp	r5, r8
   11484:	bcs	114c0 <test_schema@@Base+0x9e8>
   11488:	sub	fp, r8, r5
   1148c:	add	fp, r5, fp, lsr #1
   11490:	cmp	r6, fp
   11494:	add	r1, r4, fp, lsl #2
   11498:	bls	11648 <test_schema@@Base+0xb70>
   1149c:	ldr	r3, [r4, fp, lsl #2]
   114a0:	adds	r2, r1, r3
   114a4:	beq	1162c <test_schema@@Base+0xb54>
   114a8:	ldr	r1, [r1, r3]
   114ac:	sub	r1, r2, r1
   114b0:	ldrh	r3, [r1]
   114b4:	cmp	r3, #5
   114b8:	bhi	11450 <test_schema@@Base+0x978>
   114bc:	b	10ff0 <test_schema@@Base+0x518>
   114c0:	mov	fp, r8
   114c4:	cmp	fp, r5
   114c8:	beq	114e4 <test_schema@@Base+0xa0c>
   114cc:	movw	r0, #6824	; 0x1aa8
   114d0:	movt	r0, #1
   114d4:	bl	107e4 <puts@plt>
   114d8:	mvn	r5, #0
   114dc:	b	10cd8 <test_schema@@Base+0x200>
   114e0:	mov	r5, r8
   114e4:	cmp	r6, r5
   114e8:	add	r2, r4, r5, lsl #2
   114ec:	bls	116e0 <test_schema@@Base+0xc08>
   114f0:	ldr	r3, [r4, r5, lsl #2]
   114f4:	adds	r4, r2, r3
   114f8:	beq	116dc <test_schema@@Base+0xc04>
   114fc:	ldr	r6, [r2, r3]
   11500:	sub	r6, r4, r6
   11504:	ldrh	r8, [r6]
   11508:	cmp	r8, #5
   1150c:	bls	10ff0 <test_schema@@Base+0x518>
   11510:	ldrh	r3, [r6, #4]
   11514:	cmp	r3, #0
   11518:	beq	10ff0 <test_schema@@Base+0x518>
   1151c:	ldr	r0, [r4, r3]
   11520:	add	r3, r4, r3
   11524:	movw	r1, #6804	; 0x1a94
   11528:	movt	r1, #1
   1152c:	add	r0, r0, #4
   11530:	add	r0, r3, r0
   11534:	bl	10784 <strcmp@plt>
   11538:	subs	r5, r0, #0
   1153c:	bne	114cc <test_schema@@Base+0x9f4>
   11540:	cmp	r8, #7
   11544:	bls	11684 <test_schema@@Base+0xbac>
   11548:	ldrh	r3, [r6, #6]
   1154c:	cmp	r3, #0
   11550:	beq	11684 <test_schema@@Base+0xbac>
   11554:	ldr	r2, [r4, r3]
   11558:	add	r3, r4, r3
   1155c:	adds	r1, r3, r2
   11560:	beq	116a0 <test_schema@@Base+0xbc8>
   11564:	ldr	r3, [r3, r2]
   11568:	sub	r3, r1, r3
   1156c:	ldrh	r2, [r3]
   11570:	cmp	r2, #5
   11574:	bhi	1158c <test_schema@@Base+0xab4>
   11578:	movw	r0, #6852	; 0x1ac4
   1157c:	movt	r0, #1
   11580:	bl	107e4 <puts@plt>
   11584:	mvn	r5, #0
   11588:	b	10cd8 <test_schema@@Base+0x200>
   1158c:	ldrh	r0, [r3, #4]
   11590:	cmp	r0, #0
   11594:	beq	11578 <test_schema@@Base+0xaa0>
   11598:	ldrsb	r0, [r1, r0]
   1159c:	cmp	r0, #14
   115a0:	bne	11578 <test_schema@@Base+0xaa0>
   115a4:	cmp	r2, #7
   115a8:	bhi	115c0 <test_schema@@Base+0xae8>
   115ac:	movw	r0, #6892	; 0x1aec
   115b0:	movt	r0, #1
   115b4:	bl	107e4 <puts@plt>
   115b8:	mvn	r5, #0
   115bc:	b	10cd8 <test_schema@@Base+0x200>
   115c0:	ldrh	r0, [r3, #6]
   115c4:	cmp	r0, #0
   115c8:	beq	115ac <test_schema@@Base+0xad4>
   115cc:	ldrsb	r0, [r1, r0]
   115d0:	cmp	r0, #15
   115d4:	bne	115ac <test_schema@@Base+0xad4>
   115d8:	cmp	r2, #9
   115dc:	bls	115f8 <test_schema@@Base+0xb20>
   115e0:	ldrh	r3, [r3, #8]
   115e4:	cmp	r3, #0
   115e8:	beq	115f8 <test_schema@@Base+0xb20>
   115ec:	ldr	r3, [r1, r3]
   115f0:	cmp	r3, r7
   115f4:	beq	10cd8 <test_schema@@Base+0x200>
   115f8:	movw	r0, #6940	; 0x1b1c
   115fc:	movt	r0, #1
   11600:	mvn	r5, #0
   11604:	bl	107e4 <puts@plt>
   11608:	b	10cd8 <test_schema@@Base+0x200>
   1160c:	movw	r0, #6780	; 0x1a7c
   11610:	movt	r0, #1
   11614:	bl	107e4 <puts@plt>
   11618:	mvn	r5, #0
   1161c:	b	10cd8 <test_schema@@Base+0x200>
   11620:	mov	r2, #0
   11624:	mov	r3, #0
   11628:	b	11128 <test_schema@@Base+0x650>
   1162c:	movw	r1, #6272	; 0x1880
   11630:	movt	r1, #1
   11634:	ldr	r3, [pc, #184]	; 116f4 <test_schema@@Base+0xc1c>
   11638:	movw	r0, #6424	; 0x1918
   1163c:	movt	r0, #1
   11640:	mov	r2, #195	; 0xc3
   11644:	bl	10844 <__assert_fail@plt>
   11648:	movw	r1, #6272	; 0x1880
   1164c:	movt	r1, #1
   11650:	ldr	r3, [pc, #160]	; 116f8 <test_schema@@Base+0xc20>
   11654:	movw	r0, #6368	; 0x18e0
   11658:	movt	r0, #1
   1165c:	mov	r2, #192	; 0xc0
   11660:	bl	10844 <__assert_fail@plt>
   11664:	movw	r3, #6004	; 0x1774
   11668:	movt	r3, #1
   1166c:	movw	r1, #6272	; 0x1880
   11670:	movt	r1, #1
   11674:	movw	r0, #6368	; 0x18e0
   11678:	movt	r0, #1
   1167c:	mov	r2, #215	; 0xd7
   11680:	bl	10844 <__assert_fail@plt>
   11684:	movw	r1, #6272	; 0x1880
   11688:	movt	r1, #1
   1168c:	ldr	r3, [pc, #104]	; 116fc <test_schema@@Base+0xc24>
   11690:	movw	r0, #6468	; 0x1944
   11694:	movt	r0, #1
   11698:	mov	r2, #201	; 0xc9
   1169c:	bl	10844 <__assert_fail@plt>
   116a0:	bl	10a88 <_start@@Base+0x1e0>
   116a4:	movw	r1, #6272	; 0x1880
   116a8:	movt	r1, #1
   116ac:	ldr	r3, [pc, #76]	; 11700 <test_schema@@Base+0xc28>
   116b0:	movw	r0, #6468	; 0x1944
   116b4:	movt	r0, #1
   116b8:	mov	r2, #224	; 0xe0
   116bc:	bl	10844 <__assert_fail@plt>
   116c0:	movw	r1, #6272	; 0x1880
   116c4:	movt	r1, #1
   116c8:	ldr	r3, [pc, #28]	; 116ec <test_schema@@Base+0xc14>
   116cc:	movw	r0, #6468	; 0x1944
   116d0:	movt	r0, #1
   116d4:	mov	r2, #237	; 0xed
   116d8:	bl	10844 <__assert_fail@plt>
   116dc:	bl	109e8 <_start@@Base+0x140>
   116e0:	bl	10a38 <_start@@Base+0x190>
   116e4:	bl	109c0 <_start@@Base+0x118>
   116e8:	bl	10998 <_start@@Base+0xf0>
   116ec:	andeq	r1, r1, r8, asr #16
   116f0:	muleq	r1, r0, r7
   116f4:	andeq	r1, r1, r8, lsr #15
   116f8:	andeq	r1, r1, r4, ror #15
   116fc:	strdeq	r1, [r1], -ip
   11700:	andeq	r1, r1, r4, ror #16

00011704 <__libc_csu_init@@Base>:
   11704:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11708:	mov	r7, r0
   1170c:	ldr	r6, [pc, #72]	; 1175c <__libc_csu_init@@Base+0x58>
   11710:	ldr	r5, [pc, #72]	; 11760 <__libc_csu_init@@Base+0x5c>
   11714:	add	r6, pc, r6
   11718:	add	r5, pc, r5
   1171c:	sub	r6, r6, r5
   11720:	mov	r8, r1
   11724:	mov	r9, r2
   11728:	bl	10764 <strcmp@plt-0x20>
   1172c:	asrs	r6, r6, #2
   11730:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11734:	mov	r4, #0
   11738:	add	r4, r4, #1
   1173c:	ldr	r3, [r5], #4
   11740:	mov	r2, r9
   11744:	mov	r1, r8
   11748:	mov	r0, r7
   1174c:	blx	r3
   11750:	cmp	r6, r4
   11754:	bne	11738 <__libc_csu_init@@Base+0x34>
   11758:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1175c:	strdeq	r0, [r1], -r8
   11760:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00011764 <__libc_csu_fini@@Base>:
   11764:	bx	lr

Disassembly of section .fini:

00011768 <.fini>:
   11768:	push	{r3, lr}
   1176c:	pop	{r3, pc}
