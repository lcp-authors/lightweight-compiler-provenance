
../repos/eddieantonio-ocreval-3ab279a/wordaccsum/wordaccsum:     file format elf32-littlearm


Disassembly of section .init:

000106fc <.init>:
   106fc:	push	{r3, lr}
   10700:	bl	108d8 <abort@plt+0xb4>
   10704:	pop	{r3, pc}

Disassembly of section .plt:

00010708 <calloc@plt-0x14>:
   10708:	push	{lr}		; (str lr, [sp, #-4]!)
   1070c:	ldr	lr, [pc, #4]	; 10718 <calloc@plt-0x4>
   10710:	add	lr, pc, lr
   10714:	ldr	pc, [lr, #8]!
   10718:	andeq	r1, r1, r8, ror #17

0001071c <calloc@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2280]!	; 0x8e8

00010728 <strcmp@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2272]!	; 0x8e0

00010734 <fopen@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2264]!	; 0x8d8

00010740 <free@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2256]!	; 0x8d0

0001074c <fgets@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2248]!	; 0x8c8

00010758 <strdup@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2240]!	; 0x8c0

00010764 <unlink@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2232]!	; 0x8b8

00010770 <__xstat@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2224]!	; 0x8b0

0001077c <__libc_start_main@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2216]!	; 0x8a8

00010788 <__sysv_signal@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2208]!	; 0x8a0

00010794 <__gmon_start__@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2200]!	; 0x898

000107a0 <getpid@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2192]!	; 0x890

000107ac <exit@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2184]!	; 0x888

000107b8 <strlen@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2176]!	; 0x880

000107c4 <fprintf@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2168]!	; 0x878

000107d0 <__isoc99_sscanf@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #69632	; 0x11000
   107d8:	ldr	pc, [ip, #2160]!	; 0x870

000107dc <fclose@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #69632	; 0x11000
   107e4:	ldr	pc, [ip, #2152]!	; 0x868

000107e8 <fputc@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #69632	; 0x11000
   107f0:	ldr	pc, [ip, #2144]!	; 0x860

000107f4 <sprintf@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #69632	; 0x11000
   107fc:	ldr	pc, [ip, #2136]!	; 0x858

00010800 <atoi@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #69632	; 0x11000
   10808:	ldr	pc, [ip, #2128]!	; 0x850

0001080c <fputs@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #69632	; 0x11000
   10814:	ldr	pc, [ip, #2120]!	; 0x848

00010818 <strncmp@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #69632	; 0x11000
   10820:	ldr	pc, [ip, #2112]!	; 0x840

00010824 <abort@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #69632	; 0x11000
   1082c:	ldr	pc, [ip, #2104]!	; 0x838

Disassembly of section .text:

00010830 <error@@Base-0xcd4>:
   10830:	push	{r0, r1, r2, r4, r5, lr}
   10834:	mov	r3, #0
   10838:	mov	r5, r1
   1083c:	ldr	r2, [pc, #76]	; 10890 <abort@plt+0x6c>
   10840:	str	r0, [sp, #4]
   10844:	add	r0, sp, #4
   10848:	bl	11624 <error@@Base+0x120>
   1084c:	ldr	r3, [sp, #4]
   10850:	cmp	r3, #1
   10854:	movgt	r4, #0
   10858:	bgt	10864 <abort@plt+0x40>
   1085c:	ldr	r0, [pc, #48]	; 10894 <abort@plt+0x70>
   10860:	bl	11504 <error@@Base>
   10864:	ldr	r0, [pc, #44]	; 10898 <abort@plt+0x74>
   10868:	ldr	r1, [r5, r4, lsl #2]
   1086c:	add	r4, r4, #1
   10870:	bl	10e34 <abort@plt+0x610>
   10874:	ldr	r3, [sp, #4]
   10878:	cmp	r3, r4
   1087c:	bgt	10864 <abort@plt+0x40>
   10880:	mov	r1, #0
   10884:	ldr	r0, [pc, #12]	; 10898 <abort@plt+0x74>
   10888:	bl	10fac <abort@plt+0x788>
   1088c:	bl	114ac <abort@plt+0xc88>
   10890:	andeq	r1, r1, r8, asr #22
   10894:	andeq	r1, r1, ip, ror fp
   10898:	andeq	r2, r2, r4, lsl #2
   1089c:	mov	fp, #0
   108a0:	mov	lr, #0
   108a4:	pop	{r1}		; (ldr r1, [sp], #4)
   108a8:	mov	r2, sp
   108ac:	push	{r2}		; (str r2, [sp, #-4]!)
   108b0:	push	{r0}		; (str r0, [sp, #-4]!)
   108b4:	ldr	ip, [pc, #16]	; 108cc <abort@plt+0xa8>
   108b8:	push	{ip}		; (str ip, [sp, #-4]!)
   108bc:	ldr	r0, [pc, #12]	; 108d0 <abort@plt+0xac>
   108c0:	ldr	r3, [pc, #12]	; 108d4 <abort@plt+0xb0>
   108c4:	bl	1077c <__libc_start_main@plt>
   108c8:	bl	10824 <abort@plt>
   108cc:	andeq	r1, r1, r8, lsr #22
   108d0:	andeq	r0, r1, r0, lsr r8
   108d4:	andeq	r1, r1, r8, asr #21
   108d8:	ldr	r3, [pc, #20]	; 108f4 <abort@plt+0xd0>
   108dc:	ldr	r2, [pc, #20]	; 108f8 <abort@plt+0xd4>
   108e0:	add	r3, pc, r3
   108e4:	ldr	r2, [r3, r2]
   108e8:	cmp	r2, #0
   108ec:	bxeq	lr
   108f0:	b	10794 <__gmon_start__@plt>
   108f4:	andeq	r1, r1, r8, lsl r7
   108f8:	andeq	r0, r0, r8, rrx
   108fc:	ldr	r0, [pc, #24]	; 1091c <abort@plt+0xf8>
   10900:	ldr	r3, [pc, #24]	; 10920 <abort@plt+0xfc>
   10904:	cmp	r3, r0
   10908:	bxeq	lr
   1090c:	ldr	r3, [pc, #16]	; 10924 <abort@plt+0x100>
   10910:	cmp	r3, #0
   10914:	bxeq	lr
   10918:	bx	r3
   1091c:	andeq	r2, r2, ip, ror r0
   10920:	andeq	r2, r2, ip, ror r0
   10924:	andeq	r0, r0, r0
   10928:	ldr	r0, [pc, #36]	; 10954 <abort@plt+0x130>
   1092c:	ldr	r1, [pc, #36]	; 10958 <abort@plt+0x134>
   10930:	sub	r1, r1, r0
   10934:	asr	r1, r1, #2
   10938:	add	r1, r1, r1, lsr #31
   1093c:	asrs	r1, r1, #1
   10940:	bxeq	lr
   10944:	ldr	r3, [pc, #16]	; 1095c <abort@plt+0x138>
   10948:	cmp	r3, #0
   1094c:	bxeq	lr
   10950:	bx	r3
   10954:	andeq	r2, r2, ip, ror r0
   10958:	andeq	r2, r2, ip, ror r0
   1095c:	andeq	r0, r0, r0
   10960:	push	{r4, lr}
   10964:	ldr	r4, [pc, #24]	; 10984 <abort@plt+0x160>
   10968:	ldrb	r3, [r4]
   1096c:	cmp	r3, #0
   10970:	popne	{r4, pc}
   10974:	bl	108fc <abort@plt+0xd8>
   10978:	mov	r3, #1
   1097c:	strb	r3, [r4]
   10980:	pop	{r4, pc}
   10984:	muleq	r2, r0, r0
   10988:	b	10928 <abort@plt+0x104>
   1098c:	andeq	r0, r0, r0
   10990:	mov	r2, r0
   10994:	push	{r4, lr}
   10998:	mov	r1, #99	; 0x63
   1099c:	ldr	r0, [pc, #12]	; 109b0 <abort@plt+0x18c>
   109a0:	bl	1074c <fgets@plt>
   109a4:	adds	r0, r0, #0
   109a8:	movne	r0, #1
   109ac:	pop	{r4, pc}
   109b0:	muleq	r2, r1, r0
   109b4:	push	{r4, lr}
   109b8:	mov	r4, r1
   109bc:	bl	10990 <abort@plt+0x16c>
   109c0:	cmp	r0, #0
   109c4:	popeq	{r4, pc}
   109c8:	mov	r2, r4
   109cc:	ldr	r1, [pc, #20]	; 109e8 <abort@plt+0x1c4>
   109d0:	ldr	r0, [pc, #20]	; 109ec <abort@plt+0x1c8>
   109d4:	bl	107d0 <__isoc99_sscanf@plt>
   109d8:	sub	r0, r0, #1
   109dc:	clz	r0, r0
   109e0:	lsr	r0, r0, #5
   109e4:	pop	{r4, pc}
   109e8:	strdeq	r1, [r1], -sp
   109ec:	muleq	r2, r1, r0
   109f0:	ldr	r2, [r1]
   109f4:	cmp	r2, #0
   109f8:	bne	10a08 <abort@plt+0x1e4>
   109fc:	mov	r1, r0
   10a00:	ldr	r0, [pc, #56]	; 10a40 <abort@plt+0x21c>
   10a04:	b	1080c <fputs@plt>
   10a08:	ldr	r3, [r1, #4]
   10a0c:	vldr	d6, [pc, #36]	; 10a38 <abort@plt+0x214>
   10a10:	ldr	r1, [pc, #44]	; 10a44 <abort@plt+0x220>
   10a14:	sub	r3, r2, r3
   10a18:	vmov	s14, r3
   10a1c:	vcvt.f64.s32	d7, s14
   10a20:	vmul.f64	d7, d7, d6
   10a24:	vmov	s13, r2
   10a28:	vcvt.f64.s32	d6, s13
   10a2c:	vdiv.f64	d7, d7, d6
   10a30:	vmov	r2, r3, d7
   10a34:	b	107c4 <fprintf@plt>
   10a38:	andeq	r0, r0, r0
   10a3c:	subsmi	r0, r9, r0
   10a40:	muleq	r1, r3, fp
   10a44:	muleq	r1, ip, fp
   10a48:	push	{r4, r5, r6, lr}
   10a4c:	subs	r5, r1, #0
   10a50:	mov	r4, r0
   10a54:	beq	10a80 <abort@plt+0x25c>
   10a58:	ldr	r1, [pc, #48]	; 10a90 <abort@plt+0x26c>
   10a5c:	ldrd	r2, [r5]
   10a60:	bl	107c4 <fprintf@plt>
   10a64:	mov	r1, r5
   10a68:	mov	r0, r4
   10a6c:	bl	109f0 <abort@plt+0x1cc>
   10a70:	mov	r1, r4
   10a74:	ldr	r0, [pc, #24]	; 10a94 <abort@plt+0x270>
   10a78:	pop	{r4, r5, r6, lr}
   10a7c:	b	1080c <fputs@plt>
   10a80:	mov	r1, r0
   10a84:	ldr	r0, [pc, #12]	; 10a98 <abort@plt+0x274>
   10a88:	bl	1080c <fputs@plt>
   10a8c:	b	10a70 <abort@plt+0x24c>
   10a90:	andeq	r1, r1, r2, lsr #23
   10a94:	andeq	r1, r1, r8, asr #23
   10a98:	andeq	r1, r1, sp, lsr #23
   10a9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10aa0:	mov	r4, r0
   10aa4:	mov	r6, r1
   10aa8:	mov	r7, r2
   10aac:	mov	r2, r3
   10ab0:	mov	r5, #1
   10ab4:	ldr	r1, [pc, #196]	; 10b80 <abort@plt+0x35c>
   10ab8:	ldrb	r8, [sp, #32]
   10abc:	ldrb	r9, [sp, #36]	; 0x24
   10ac0:	bl	107c4 <fprintf@plt>
   10ac4:	mov	r1, #0
   10ac8:	mov	r0, r4
   10acc:	ldr	sl, [pc, #176]	; 10b84 <abort@plt+0x360>
   10ad0:	bl	10a48 <abort@plt+0x224>
   10ad4:	ldr	r3, [pc, #172]	; 10b88 <abort@plt+0x364>
   10ad8:	cmp	r8, #0
   10adc:	mov	r0, r4
   10ae0:	ldr	r2, [pc, #164]	; 10b8c <abort@plt+0x368>
   10ae4:	ldr	r1, [pc, #164]	; 10b90 <abort@plt+0x36c>
   10ae8:	moveq	r2, r3
   10aec:	bl	107c4 <fprintf@plt>
   10af0:	ldr	r3, [r6, r5, lsl #3]
   10af4:	add	r1, r6, r5, lsl #3
   10af8:	cmp	r3, #0
   10afc:	ble	10b18 <abort@plt+0x2f4>
   10b00:	mov	r0, r4
   10b04:	bl	10a48 <abort@plt+0x224>
   10b08:	mov	r2, r5
   10b0c:	mov	r1, sl
   10b10:	mov	r0, r4
   10b14:	bl	107c4 <fprintf@plt>
   10b18:	add	r5, r5, #1
   10b1c:	sxth	r3, r5
   10b20:	cmp	r7, r3
   10b24:	bge	10af0 <abort@plt+0x2cc>
   10b28:	cmp	r8, #0
   10b2c:	beq	10b5c <abort@plt+0x338>
   10b30:	add	r3, r7, #1
   10b34:	add	r1, r6, r3, lsl #3
   10b38:	ldr	r3, [r6, r3, lsl #3]
   10b3c:	cmp	r3, #0
   10b40:	ble	10b5c <abort@plt+0x338>
   10b44:	mov	r0, r4
   10b48:	bl	10a48 <abort@plt+0x224>
   10b4c:	mov	r2, r7
   10b50:	ldr	r1, [pc, #60]	; 10b94 <abort@plt+0x370>
   10b54:	mov	r0, r4
   10b58:	bl	107c4 <fprintf@plt>
   10b5c:	cmp	r9, #0
   10b60:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b64:	mov	r1, r6
   10b68:	mov	r0, r4
   10b6c:	bl	10a48 <abort@plt+0x224>
   10b70:	mov	r1, r4
   10b74:	ldr	r0, [pc, #28]	; 10b98 <abort@plt+0x374>
   10b78:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b7c:	b	1080c <fputs@plt>
   10b80:	ldrdeq	r1, [r1], -sl
   10b84:	ldrdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   10b88:	ldrdeq	r1, [r1], -r3
   10b8c:	andeq	r1, r1, ip, asr #23
   10b90:	ldrdeq	r1, [r1], -fp
   10b94:	andeq	r1, r1, r8, ror #23
   10b98:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10b9c:	push	{r4, r5, r6, r7, r8, lr}
   10ba0:	mov	r4, r1
   10ba4:	mov	r6, r0
   10ba8:	add	r4, r4, #4096	; 0x1000
   10bac:	mov	r0, r1
   10bb0:	mov	r5, r2
   10bb4:	ldr	r7, [pc, #124]	; 10c38 <abort@plt+0x414>
   10bb8:	bl	11238 <abort@plt+0xa14>
   10bbc:	ldr	r2, [pc, #120]	; 10c3c <abort@plt+0x418>
   10bc0:	ldr	r1, [r4, #3952]	; 0xf70
   10bc4:	ldr	r0, [r4, #3956]	; 0xf74
   10bc8:	bl	11aa8 <error@@Base+0x5a4>
   10bcc:	mov	r2, r5
   10bd0:	ldr	r1, [pc, #104]	; 10c40 <abort@plt+0x41c>
   10bd4:	mov	r0, r6
   10bd8:	bl	107c4 <fprintf@plt>
   10bdc:	mov	r1, #0
   10be0:	mov	r0, r6
   10be4:	bl	10a48 <abort@plt+0x224>
   10be8:	mov	r5, #0
   10bec:	mov	r1, r6
   10bf0:	mov	r0, #10
   10bf4:	bl	107e8 <fputc@plt>
   10bf8:	ldr	r3, [r4, #3956]	; 0xf74
   10bfc:	cmp	r3, r5
   10c00:	pople	{r4, r5, r6, r7, r8, pc}
   10c04:	mov	r0, r6
   10c08:	ldr	r3, [r4, #3952]	; 0xf70
   10c0c:	ldr	r1, [r3, r5, lsl #2]
   10c10:	add	r1, r1, #12
   10c14:	bl	10a48 <abort@plt+0x224>
   10c18:	ldr	r3, [r4, #3952]	; 0xf70
   10c1c:	mov	r1, r7
   10c20:	mov	r0, r6
   10c24:	ldr	r3, [r3, r5, lsl #2]
   10c28:	add	r5, r5, #1
   10c2c:	ldr	r2, [r3, #8]
   10c30:	bl	107c4 <fprintf@plt>
   10c34:	b	10bf8 <abort@plt+0x3d4>
   10c38:	ldrdeq	r1, [r1], -fp
   10c3c:	andeq	r0, r1, r4, asr #24
   10c40:	ldrdeq	r1, [r1], -sl
   10c44:	ldr	r0, [r0, #8]
   10c48:	ldr	r1, [r1, #8]
   10c4c:	b	113b0 <abort@plt+0xb8c>
   10c50:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   10c54:	mov	r7, r0
   10c58:	mov	r5, r1
   10c5c:	bl	10990 <abort@plt+0x16c>
   10c60:	cmp	r0, #0
   10c64:	bne	10c78 <abort@plt+0x454>
   10c68:	mov	r4, #0
   10c6c:	mov	r0, r4
   10c70:	add	sp, sp, #8
   10c74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c78:	mov	r0, r7
   10c7c:	bl	10990 <abort@plt+0x16c>
   10c80:	cmp	r0, #0
   10c84:	beq	10c68 <abort@plt+0x444>
   10c88:	ldr	r6, [pc, #136]	; 10d18 <abort@plt+0x4f4>
   10c8c:	mov	r4, #0
   10c90:	ldr	r9, [pc, #132]	; 10d1c <abort@plt+0x4f8>
   10c94:	add	r8, r6, #29
   10c98:	b	10ce8 <abort@plt+0x4c4>
   10c9c:	mov	r0, r8
   10ca0:	bl	10800 <atoi@plt>
   10ca4:	subs	r3, r0, #0
   10ca8:	ldr	sl, [sp]
   10cac:	bne	10cc8 <abort@plt+0x4a4>
   10cb0:	ldr	r1, [pc, #104]	; 10d20 <abort@plt+0x4fc>
   10cb4:	mov	r0, r8
   10cb8:	bl	10728 <strcmp@plt>
   10cbc:	subs	r3, r0, #0
   10cc0:	moveq	r4, sl
   10cc4:	movne	r3, #11
   10cc8:	ldr	r2, [r5, r3, lsl #3]
   10ccc:	add	r1, r5, r3, lsl #3
   10cd0:	add	r2, r2, sl
   10cd4:	str	r2, [r5, r3, lsl #3]
   10cd8:	ldr	r3, [r1, #4]
   10cdc:	ldr	r2, [sp, #4]
   10ce0:	add	r3, r3, r2
   10ce4:	str	r3, [r1, #4]
   10ce8:	mov	r0, r7
   10cec:	bl	10990 <abort@plt+0x16c>
   10cf0:	cmp	r0, #0
   10cf4:	beq	10c6c <abort@plt+0x448>
   10cf8:	add	r3, sp, #4
   10cfc:	mov	r2, sp
   10d00:	mov	r1, r9
   10d04:	mov	r0, r6
   10d08:	bl	107d0 <__isoc99_sscanf@plt>
   10d0c:	cmp	r0, #2
   10d10:	beq	10c9c <abort@plt+0x478>
   10d14:	b	10c6c <abort@plt+0x448>
   10d18:	muleq	r2, r1, r0
   10d1c:	strdeq	r1, [r1], -r9
   10d20:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10d24:	ldr	r3, [r0]
   10d28:	add	r1, r3, r1
   10d2c:	ldr	r3, [r0, #4]
   10d30:	add	r2, r3, r2
   10d34:	stm	r0, {r1, r2}
   10d38:	bx	lr
   10d3c:	push	{r4, r5, r6, r7, r8, lr}
   10d40:	mov	r7, r0
   10d44:	mov	r8, r1
   10d48:	mov	r6, r2
   10d4c:	mov	r5, r3
   10d50:	bl	1116c <abort@plt+0x948>
   10d54:	subs	r4, r0, #0
   10d58:	bne	10d84 <abort@plt+0x560>
   10d5c:	mov	r1, #20
   10d60:	mov	r0, #1
   10d64:	bl	11540 <error@@Base+0x3c>
   10d68:	mov	r4, r0
   10d6c:	mov	r0, r8
   10d70:	bl	10758 <strdup@plt>
   10d74:	mov	r1, r4
   10d78:	str	r0, [r4, #8]
   10d7c:	mov	r0, r7
   10d80:	bl	111b0 <abort@plt+0x98c>
   10d84:	ldrd	r2, [r4, #12]
   10d88:	add	r2, r2, r6
   10d8c:	add	r3, r3, r5
   10d90:	strd	r2, [r4, #12]
   10d94:	pop	{r4, r5, r6, r7, r8, pc}
   10d98:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   10d9c:	mov	r5, r0
   10da0:	mov	r7, r1
   10da4:	bl	10990 <abort@plt+0x16c>
   10da8:	cmp	r0, #0
   10dac:	beq	10df8 <abort@plt+0x5d4>
   10db0:	mov	r0, r5
   10db4:	bl	10990 <abort@plt+0x16c>
   10db8:	cmp	r0, #0
   10dbc:	beq	10df8 <abort@plt+0x5d4>
   10dc0:	ldr	r4, [pc, #100]	; 10e2c <abort@plt+0x608>
   10dc4:	ldr	r6, [pc, #100]	; 10e30 <abort@plt+0x60c>
   10dc8:	add	r8, r4, #29
   10dcc:	mov	r0, r5
   10dd0:	bl	10990 <abort@plt+0x16c>
   10dd4:	cmp	r0, #0
   10dd8:	beq	10df8 <abort@plt+0x5d4>
   10ddc:	add	r3, sp, #4
   10de0:	mov	r2, sp
   10de4:	ldr	r0, [pc, #64]	; 10e2c <abort@plt+0x608>
   10de8:	mov	r1, r6
   10dec:	bl	107d0 <__isoc99_sscanf@plt>
   10df0:	cmp	r0, #2
   10df4:	beq	10e00 <abort@plt+0x5dc>
   10df8:	add	sp, sp, #8
   10dfc:	pop	{r4, r5, r6, r7, r8, pc}
   10e00:	mov	r0, r4
   10e04:	bl	107b8 <strlen@plt>
   10e08:	add	r0, r4, r0
   10e0c:	mov	r3, #0
   10e10:	ldr	r2, [sp]
   10e14:	mov	r1, r8
   10e18:	strb	r3, [r0, #-1]
   10e1c:	mov	r0, r7
   10e20:	ldr	r3, [sp, #4]
   10e24:	bl	10d3c <abort@plt+0x518>
   10e28:	b	10dcc <abort@plt+0x5a8>
   10e2c:	muleq	r2, r1, r0
   10e30:	strdeq	r1, [r1], -r9
   10e34:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10e38:	mov	r6, r1
   10e3c:	mov	r5, r0
   10e40:	mov	r0, r6
   10e44:	ldr	r1, [pc, #328]	; 10f94 <abort@plt+0x770>
   10e48:	bl	115c8 <error@@Base+0xc4>
   10e4c:	mov	r4, r0
   10e50:	bl	10990 <abort@plt+0x16c>
   10e54:	cmp	r0, #0
   10e58:	beq	10f80 <abort@plt+0x75c>
   10e5c:	mov	r2, #45	; 0x2d
   10e60:	ldr	r1, [pc, #304]	; 10f98 <abort@plt+0x774>
   10e64:	ldr	r0, [pc, #304]	; 10f9c <abort@plt+0x778>
   10e68:	bl	10818 <strncmp@plt>
   10e6c:	cmp	r0, #0
   10e70:	bne	10f80 <abort@plt+0x75c>
   10e74:	mov	r0, r4
   10e78:	bl	10990 <abort@plt+0x16c>
   10e7c:	cmp	r0, #0
   10e80:	beq	10f80 <abort@plt+0x75c>
   10e84:	ldr	r1, [pc, #276]	; 10fa0 <abort@plt+0x77c>
   10e88:	ldr	r0, [pc, #268]	; 10f9c <abort@plt+0x778>
   10e8c:	bl	10728 <strcmp@plt>
   10e90:	cmp	r0, #0
   10e94:	bne	10f80 <abort@plt+0x75c>
   10e98:	mov	r1, sp
   10e9c:	mov	r0, r4
   10ea0:	bl	109b4 <abort@plt+0x190>
   10ea4:	cmp	r0, #0
   10ea8:	beq	10f80 <abort@plt+0x75c>
   10eac:	add	r1, sp, #4
   10eb0:	mov	r0, r4
   10eb4:	bl	109b4 <abort@plt+0x190>
   10eb8:	cmp	r0, #0
   10ebc:	beq	10f80 <abort@plt+0x75c>
   10ec0:	mov	r0, r4
   10ec4:	bl	10990 <abort@plt+0x16c>
   10ec8:	cmp	r0, #0
   10ecc:	beq	10f80 <abort@plt+0x75c>
   10ed0:	mov	r0, r4
   10ed4:	bl	10990 <abort@plt+0x16c>
   10ed8:	cmp	r0, #0
   10edc:	beq	10f80 <abort@plt+0x75c>
   10ee0:	ldr	r3, [r5]
   10ee4:	add	r1, r5, #8
   10ee8:	mov	r0, r4
   10eec:	ldr	r2, [sp]
   10ef0:	add	r3, r3, r2
   10ef4:	ldr	r2, [sp, #4]
   10ef8:	str	r3, [r5]
   10efc:	ldr	r3, [r5, #4]
   10f00:	add	r3, r3, r2
   10f04:	str	r3, [r5, #4]
   10f08:	bl	10c50 <abort@plt+0x42c>
   10f0c:	mov	r7, r0
   10f10:	add	r1, r5, #416	; 0x1a0
   10f14:	mov	r0, r4
   10f18:	bl	10c50 <abort@plt+0x42c>
   10f1c:	mov	r6, r0
   10f20:	add	r1, r5, #824	; 0x338
   10f24:	mov	r0, r4
   10f28:	bl	10c50 <abort@plt+0x42c>
   10f2c:	ldr	r3, [sp]
   10f30:	cmp	r3, #0
   10f34:	ble	10f70 <abort@plt+0x74c>
   10f38:	add	r1, r5, #920	; 0x398
   10f3c:	mov	r0, r4
   10f40:	bl	10c50 <abort@plt+0x42c>
   10f44:	cmp	r7, #0
   10f48:	ble	10f58 <abort@plt+0x734>
   10f4c:	add	r1, r5, #992	; 0x3e0
   10f50:	mov	r0, r4
   10f54:	bl	10d98 <abort@plt+0x574>
   10f58:	cmp	r6, #0
   10f5c:	ble	10f70 <abort@plt+0x74c>
   10f60:	add	r1, r5, #9024	; 0x2340
   10f64:	mov	r0, r4
   10f68:	add	r1, r1, #24
   10f6c:	bl	10d98 <abort@plt+0x574>
   10f70:	mov	r0, r4
   10f74:	bl	113ec <abort@plt+0xbc8>
   10f78:	add	sp, sp, #12
   10f7c:	pop	{r4, r5, r6, r7, pc}
   10f80:	cmp	r6, #0
   10f84:	ldr	r1, [pc, #24]	; 10fa4 <abort@plt+0x780>
   10f88:	movne	r1, r6
   10f8c:	ldr	r0, [pc, #20]	; 10fa8 <abort@plt+0x784>
   10f90:	bl	11588 <error@@Base+0x84>
   10f94:	andeq	r1, r1, r7, lsl #24
   10f98:	andeq	r1, r1, r9, lsl #24
   10f9c:	muleq	r2, r1, r0
   10fa0:	andeq	r1, r1, r9, lsr ip
   10fa4:	andeq	r1, r1, r1, lsl #24
   10fa8:	andeq	r1, r1, r9, ror #24
   10fac:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   10fb0:	mov	r4, r0
   10fb4:	mov	r0, r1
   10fb8:	mov	r7, #1
   10fbc:	mov	r6, #0
   10fc0:	ldr	r1, [pc, #268]	; 110d4 <abort@plt+0x8b0>
   10fc4:	bl	115c8 <error@@Base+0xc4>
   10fc8:	mov	r5, r0
   10fcc:	ldr	r3, [pc, #260]	; 110d8 <abort@plt+0x8b4>
   10fd0:	ldr	r2, [pc, #260]	; 110dc <abort@plt+0x8b8>
   10fd4:	ldr	r1, [pc, #260]	; 110e0 <abort@plt+0x8bc>
   10fd8:	bl	107c4 <fprintf@plt>
   10fdc:	ldr	r1, [pc, #256]	; 110e4 <abort@plt+0x8c0>
   10fe0:	mov	r0, r5
   10fe4:	ldr	r2, [r4]
   10fe8:	bl	107c4 <fprintf@plt>
   10fec:	ldr	r1, [pc, #244]	; 110e8 <abort@plt+0x8c4>
   10ff0:	mov	r0, r5
   10ff4:	ldr	r2, [r4, #4]
   10ff8:	bl	107c4 <fprintf@plt>
   10ffc:	mov	r1, r4
   11000:	mov	r0, r5
   11004:	bl	109f0 <abort@plt+0x1cc>
   11008:	mov	r1, r5
   1100c:	ldr	r0, [pc, #216]	; 110ec <abort@plt+0x8c8>
   11010:	bl	1080c <fputs@plt>
   11014:	ldr	r3, [pc, #212]	; 110f0 <abort@plt+0x8cc>
   11018:	mov	r2, #50	; 0x32
   1101c:	add	r1, r4, #8
   11020:	mov	r0, r5
   11024:	strd	r6, [sp]
   11028:	bl	10a9c <abort@plt+0x278>
   1102c:	ldr	r3, [pc, #192]	; 110f4 <abort@plt+0x8d0>
   11030:	mov	r2, #50	; 0x32
   11034:	add	r1, r4, #416	; 0x1a0
   11038:	mov	r0, r5
   1103c:	strd	r6, [sp]
   11040:	bl	10a9c <abort@plt+0x278>
   11044:	ldr	r3, [pc, #172]	; 110f8 <abort@plt+0x8d4>
   11048:	mov	r2, #10
   1104c:	add	r1, r4, #824	; 0x338
   11050:	mov	r0, r5
   11054:	str	r7, [sp]
   11058:	str	r7, [sp, #4]
   1105c:	bl	10a9c <abort@plt+0x278>
   11060:	ldr	r3, [r4]
   11064:	cmp	r3, r6
   11068:	ble	110c4 <abort@plt+0x8a0>
   1106c:	ldr	r3, [pc, #136]	; 110fc <abort@plt+0x8d8>
   11070:	mov	r2, #8
   11074:	add	r1, r4, #920	; 0x398
   11078:	mov	r0, r5
   1107c:	str	r6, [sp]
   11080:	str	r6, [sp, #4]
   11084:	bl	10a9c <abort@plt+0x278>
   11088:	ldr	r3, [r4, #8]
   1108c:	cmp	r3, r6
   11090:	ble	110a4 <abort@plt+0x880>
   11094:	ldr	r2, [pc, #84]	; 110f0 <abort@plt+0x8cc>
   11098:	add	r1, r4, #992	; 0x3e0
   1109c:	mov	r0, r5
   110a0:	bl	10b9c <abort@plt+0x378>
   110a4:	ldr	r3, [r4, #416]	; 0x1a0
   110a8:	cmp	r3, #0
   110ac:	ble	110c4 <abort@plt+0x8a0>
   110b0:	add	r1, r4, #9024	; 0x2340
   110b4:	ldr	r2, [pc, #56]	; 110f4 <abort@plt+0x8d0>
   110b8:	mov	r0, r5
   110bc:	add	r1, r1, #24
   110c0:	bl	10b9c <abort@plt+0x378>
   110c4:	mov	r0, r5
   110c8:	add	sp, sp, #12
   110cc:	pop	{r4, r5, r6, r7, lr}
   110d0:	b	113ec <abort@plt+0xbc8>
   110d4:	andeq	r1, r1, fp, ror ip
   110d8:	andeq	r1, r1, r9, lsr ip
   110dc:	andeq	r1, r1, r9, lsl #24
   110e0:	andeq	r1, r1, sp, ror ip
   110e4:	andeq	r1, r1, r2, lsl #25
   110e8:	muleq	r1, r0, ip
   110ec:	andeq	r1, r1, r6, lsr #25
   110f0:			; <UNDEFINED> instruction: 0x00011cb3
   110f4:	andeq	r1, r1, r6, asr #25
   110f8:			; <UNDEFINED> instruction: 0x00011cbd
   110fc:	ldrdeq	r1, [r1], -r4
   11100:	sub	r0, r0, #1
   11104:	mov	r3, #0
   11108:	ldrb	r2, [r0, #1]!
   1110c:	cmp	r2, #0
   11110:	bne	11128 <abort@plt+0x904>
   11114:	movw	r2, #503	; 0x1f7
   11118:	udiv	r0, r3, r2
   1111c:	mls	r0, r2, r0, r3
   11120:	sxth	r0, r0
   11124:	bx	lr
   11128:	add	r3, r3, r2
   1112c:	b	11108 <abort@plt+0x8e4>
   11130:	push	{r4, r5, r6, lr}
   11134:	add	r6, r0, #8000	; 0x1f40
   11138:	mov	r4, r0
   1113c:	mov	r5, r0
   11140:	add	r6, r6, #48	; 0x30
   11144:	mov	r0, r5
   11148:	add	r5, r5, #16
   1114c:	bl	11870 <error@@Base+0x36c>
   11150:	cmp	r5, r6
   11154:	bne	11144 <abort@plt+0x920>
   11158:	add	r4, r4, #4096	; 0x1000
   1115c:	mov	r3, #0
   11160:	str	r3, [r4, #3952]	; 0xf70
   11164:	str	r3, [r4, #3956]	; 0xf74
   11168:	pop	{r4, r5, r6, pc}
   1116c:	push	{r4, r5, r6, lr}
   11170:	mov	r4, r0
   11174:	mov	r0, r1
   11178:	mov	r5, r1
   1117c:	bl	11100 <abort@plt+0x8dc>
   11180:	ldr	r4, [r4, r0, lsl #4]
   11184:	cmp	r4, #0
   11188:	beq	111a0 <abort@plt+0x97c>
   1118c:	mov	r0, r5
   11190:	ldr	r1, [r4, #8]
   11194:	bl	10728 <strcmp@plt>
   11198:	cmp	r0, #0
   1119c:	bne	111a8 <abort@plt+0x984>
   111a0:	mov	r0, r4
   111a4:	pop	{r4, r5, r6, pc}
   111a8:	ldr	r4, [r4, #4]
   111ac:	b	11184 <abort@plt+0x960>
   111b0:	push	{r4, lr}
   111b4:	mov	r4, r0
   111b8:	ldr	r0, [r1, #8]
   111bc:	bl	11100 <abort@plt+0x8dc>
   111c0:	add	r0, r4, r0, lsl #4
   111c4:	add	r4, r4, #4096	; 0x1000
   111c8:	bl	11888 <error@@Base+0x384>
   111cc:	ldr	r0, [r4, #3952]	; 0xf70
   111d0:	cmp	r0, #0
   111d4:	beq	111e4 <abort@plt+0x9c0>
   111d8:	bl	10740 <free@plt>
   111dc:	mov	r3, #0
   111e0:	str	r3, [r4, #3952]	; 0xf70
   111e4:	ldr	r3, [r4, #3956]	; 0xf74
   111e8:	add	r3, r3, #1
   111ec:	str	r3, [r4, #3956]	; 0xf74
   111f0:	pop	{r4, pc}
   111f4:	push	{r4, lr}
   111f8:	mov	r4, r0
   111fc:	ldr	r0, [r1, #8]
   11200:	bl	11100 <abort@plt+0x8dc>
   11204:	add	r0, r4, r0, lsl #4
   11208:	add	r4, r4, #4096	; 0x1000
   1120c:	bl	118c0 <error@@Base+0x3bc>
   11210:	ldr	r0, [r4, #3952]	; 0xf70
   11214:	cmp	r0, #0
   11218:	beq	11228 <abort@plt+0xa04>
   1121c:	bl	10740 <free@plt>
   11220:	mov	r3, #0
   11224:	str	r3, [r4, #3952]	; 0xf70
   11228:	ldr	r3, [r4, #3956]	; 0xf74
   1122c:	sub	r3, r3, #1
   11230:	str	r3, [r4, #3956]	; 0xf74
   11234:	pop	{r4, pc}
   11238:	push	{r4, r5, r6, lr}
   1123c:	add	r6, r0, #4096	; 0x1000
   11240:	ldr	r4, [r6, #3952]	; 0xf70
   11244:	cmp	r4, #0
   11248:	popne	{r4, r5, r6, pc}
   1124c:	ldr	r3, [r6, #3956]	; 0xf74
   11250:	cmp	r3, #0
   11254:	popeq	{r4, r5, r6, pc}
   11258:	mov	r5, r0
   1125c:	mov	r1, #4
   11260:	mov	r0, r3
   11264:	bl	11540 <error@@Base+0x3c>
   11268:	mov	r3, r4
   1126c:	mov	r2, r4
   11270:	str	r0, [r6, #3952]	; 0xf70
   11274:	movw	lr, #503	; 0x1f7
   11278:	ldr	r1, [r5, r2, lsl #4]
   1127c:	mov	ip, r3
   11280:	cmp	r1, #0
   11284:	mov	r3, ip
   11288:	bne	1129c <abort@plt+0xa78>
   1128c:	add	r2, r2, #1
   11290:	cmp	r2, lr
   11294:	bne	11278 <abort@plt+0xa54>
   11298:	pop	{r4, r5, r6, pc}
   1129c:	str	r1, [r0, ip, lsl #2]
   112a0:	add	ip, ip, #1
   112a4:	ldr	r1, [r1, #4]
   112a8:	b	11280 <abort@plt+0xa5c>
   112ac:	push	{r4, r5, r6, r7, r8, lr}
   112b0:	add	r6, r0, #8000	; 0x1f40
   112b4:	mov	r4, r0
   112b8:	mov	r7, r1
   112bc:	mov	r5, r0
   112c0:	add	r6, r6, #48	; 0x30
   112c4:	mov	r0, r5
   112c8:	mov	r1, r7
   112cc:	add	r5, r5, #16
   112d0:	bl	11968 <error@@Base+0x464>
   112d4:	cmp	r5, r6
   112d8:	bne	112c4 <abort@plt+0xaa0>
   112dc:	add	r4, r4, #4096	; 0x1000
   112e0:	ldr	r0, [r4, #3952]	; 0xf70
   112e4:	cmp	r0, #0
   112e8:	beq	112f8 <abort@plt+0xad4>
   112ec:	bl	10740 <free@plt>
   112f0:	mov	r3, #0
   112f4:	str	r3, [r4, #3952]	; 0xf70
   112f8:	mov	r3, #0
   112fc:	str	r3, [r4, #3956]	; 0xf74
   11300:	pop	{r4, r5, r6, r7, r8, pc}
   11304:	ldr	r3, [pc, #56]	; 11344 <abort@plt+0xb20>
   11308:	push	{r4, r5, lr}
   1130c:	sub	sp, sp, #116	; 0x74
   11310:	mov	r5, r0
   11314:	ldr	r4, [r3]
   11318:	bl	107a0 <getpid@plt>
   1131c:	ldr	r1, [pc, #36]	; 11348 <abort@plt+0xb24>
   11320:	mov	r3, r0
   11324:	add	r0, sp, #12
   11328:	str	r5, [sp]
   1132c:	mov	r2, r4
   11330:	bl	107f4 <sprintf@plt>
   11334:	add	r0, sp, #12
   11338:	bl	10758 <strdup@plt>
   1133c:	add	sp, sp, #116	; 0x74
   11340:	pop	{r4, r5, pc}
   11344:	ldrdeq	r6, [r2], -r8
   11348:	ldrdeq	r1, [r1], -ip
   1134c:	ldr	r3, [pc, #84]	; 113a8 <abort@plt+0xb84>
   11350:	mov	r5, r0
   11354:	push	{r7, lr}
   11358:	ldr	r3, [r3]
   1135c:	cmp	r3, #0
   11360:	beq	11368 <abort@plt+0xb44>
   11364:	blx	r3
   11368:	ldr	r6, [pc, #60]	; 113ac <abort@plt+0xb88>
   1136c:	mov	r4, #1
   11370:	ldrsh	r3, [r6]
   11374:	cmp	r3, r4
   11378:	bge	11384 <abort@plt+0xb60>
   1137c:	mov	r0, r5
   11380:	bl	107ac <exit@plt>
   11384:	mov	r0, r4
   11388:	add	r4, r4, #1
   1138c:	bl	11304 <abort@plt+0xae0>
   11390:	mov	r7, r0
   11394:	sxth	r4, r4
   11398:	bl	10764 <unlink@plt>
   1139c:	mov	r0, r7
   113a0:	bl	10740 <free@plt>
   113a4:	b	11370 <abort@plt+0xb4c>
   113a8:	ldrdeq	r6, [r2], -ip
   113ac:	strdeq	r2, [r2], -r6
   113b0:	sub	r2, r0, #1
   113b4:	sub	r1, r1, #1
   113b8:	ldrb	r3, [r2, #1]!
   113bc:	ldrb	r0, [r1, #1]!
   113c0:	cmp	r3, #0
   113c4:	beq	113e0 <abort@plt+0xbbc>
   113c8:	cmp	r3, r0
   113cc:	beq	113b8 <abort@plt+0xb94>
   113d0:	cmp	r3, r0
   113d4:	mvncc	r0, #0
   113d8:	movcs	r0, #1
   113dc:	bx	lr
   113e0:	cmp	r0, #0
   113e4:	bxeq	lr
   113e8:	b	113d0 <abort@plt+0xbac>
   113ec:	ldr	r2, [pc, #28]	; 11410 <abort@plt+0xbec>
   113f0:	ldr	r2, [r2]
   113f4:	cmp	r2, r0
   113f8:	bxeq	lr
   113fc:	ldr	r2, [pc, #16]	; 11414 <abort@plt+0xbf0>
   11400:	ldr	r2, [r2]
   11404:	cmp	r2, r0
   11408:	bxeq	lr
   1140c:	b	107dc <fclose@plt>
   11410:	andeq	r2, r2, r8, lsl #1
   11414:	andeq	r2, r2, ip, lsl #1
   11418:	push	{lr}		; (str lr, [sp, #-4]!)
   1141c:	sub	sp, sp, #92	; 0x5c
   11420:	mov	r1, sp
   11424:	bl	11b2c <error@@Base+0x628>
   11428:	clz	r0, r0
   1142c:	lsr	r0, r0, #5
   11430:	add	sp, sp, #92	; 0x5c
   11434:	pop	{pc}		; (ldr pc, [sp], #4)
   11438:	ldr	r3, [pc, #36]	; 11464 <abort@plt+0xc40>
   1143c:	push	{r4, lr}
   11440:	ldrh	r0, [r3]
   11444:	add	r0, r0, #1
   11448:	sxth	r0, r0
   1144c:	strh	r0, [r3]
   11450:	bl	11304 <abort@plt+0xae0>
   11454:	mov	r4, r0
   11458:	bl	10764 <unlink@plt>
   1145c:	mov	r0, r4
   11460:	pop	{r4, pc}
   11464:	strdeq	r2, [r2], -r6
   11468:	push	{r4, lr}
   1146c:	mov	r4, r0
   11470:	bl	107b8 <strlen@plt>
   11474:	sub	r0, r0, #1
   11478:	add	r1, r4, #1
   1147c:	sxth	r0, r0
   11480:	tst	r0, #32768	; 0x8000
   11484:	bne	11498 <abort@plt+0xc74>
   11488:	sub	r3, r0, #1
   1148c:	ldrb	r2, [r1, r3]
   11490:	cmp	r2, #47	; 0x2f
   11494:	bne	114a4 <abort@plt+0xc80>
   11498:	add	r0, r0, #1
   1149c:	add	r0, r4, r0
   114a0:	pop	{r4, pc}
   114a4:	mov	r0, r3
   114a8:	b	11480 <abort@plt+0xc5c>
   114ac:	push	{r4, lr}
   114b0:	mov	r0, #0
   114b4:	bl	1134c <abort@plt+0xb28>
   114b8:	ldr	r2, [pc, #52]	; 114f4 <abort@plt+0xcd0>
   114bc:	push	{r4, lr}
   114c0:	ldr	r2, [r2]
   114c4:	cmp	r2, #0
   114c8:	beq	114d4 <abort@plt+0xcb0>
   114cc:	blx	r2
   114d0:	bl	114ac <abort@plt+0xc88>
   114d4:	mov	r3, r0
   114d8:	ldr	r2, [pc, #24]	; 114f8 <abort@plt+0xcd4>
   114dc:	ldr	r0, [pc, #24]	; 114fc <abort@plt+0xcd8>
   114e0:	ldr	r1, [pc, #24]	; 11500 <abort@plt+0xcdc>
   114e4:	ldr	r2, [r2]
   114e8:	ldr	r0, [r0]
   114ec:	bl	107c4 <fprintf@plt>
   114f0:	b	114d0 <abort@plt+0xcac>
   114f4:	ldrdeq	r6, [r2], -r4
   114f8:	ldrdeq	r6, [r2], -r8
   114fc:	andeq	r2, r2, r0, lsl #1
   11500:	andeq	r1, r1, sl, ror #25

00011504 <error@@Base>:
   11504:	mov	r3, r0
   11508:	ldr	r2, [pc, #32]	; 11530 <error@@Base+0x2c>
   1150c:	push	{r4, lr}
   11510:	ldr	r0, [pc, #28]	; 11534 <error@@Base+0x30>
   11514:	ldr	r1, [pc, #28]	; 11538 <error@@Base+0x34>
   11518:	ldr	r2, [r2]
   1151c:	ldr	r0, [r0]
   11520:	bl	107c4 <fprintf@plt>
   11524:	ldr	r3, [pc, #16]	; 1153c <error@@Base+0x38>
   11528:	ldr	r0, [r3]
   1152c:	bl	1134c <abort@plt+0xb28>
   11530:	ldrdeq	r6, [r2], -r8
   11534:	andeq	r2, r2, r0, lsl #1
   11538:	strdeq	r1, [r1], -r9
   1153c:	andeq	r2, r2, r4, ror r0
   11540:	push	{r4, lr}
   11544:	bl	1071c <calloc@plt>
   11548:	cmp	r0, #0
   1154c:	popne	{r4, pc}
   11550:	ldr	r0, [pc]	; 11558 <error@@Base+0x54>
   11554:	bl	11504 <error@@Base>
   11558:	andeq	r1, r1, r1, lsl #26
   1155c:	ldr	r3, [pc, #28]	; 11580 <error@@Base+0x7c>
   11560:	ldrb	r2, [r3, #2]
   11564:	cmp	r2, #0
   11568:	bxne	lr
   1156c:	mov	r2, #1
   11570:	push	{r4, lr}
   11574:	ldr	r0, [pc, #8]	; 11584 <error@@Base+0x80>
   11578:	strb	r2, [r3, #2]
   1157c:	bl	11504 <error@@Base>
   11580:	strdeq	r2, [r2], -r6
   11584:	andeq	r1, r1, fp, lsl sp
   11588:	push	{r0, r1, r2, lr}
   1158c:	mov	r3, r0
   11590:	ldr	r2, [pc, #32]	; 115b8 <error@@Base+0xb4>
   11594:	str	r1, [sp]
   11598:	ldr	r0, [pc, #28]	; 115bc <error@@Base+0xb8>
   1159c:	ldr	r1, [pc, #28]	; 115c0 <error@@Base+0xbc>
   115a0:	ldr	r2, [r2]
   115a4:	ldr	r0, [r0]
   115a8:	bl	107c4 <fprintf@plt>
   115ac:	ldr	r3, [pc, #16]	; 115c4 <error@@Base+0xc0>
   115b0:	ldr	r0, [r3]
   115b4:	bl	1134c <abort@plt+0xb28>
   115b8:	ldrdeq	r6, [r2], -r8
   115bc:	andeq	r2, r2, r0, lsl #1
   115c0:	andeq	r1, r1, sl, lsr #26
   115c4:	andeq	r2, r2, r4, ror r0
   115c8:	push	{r4, r5, r6, lr}
   115cc:	subs	r4, r0, #0
   115d0:	mov	r5, r1
   115d4:	bne	115f0 <error@@Base+0xec>
   115d8:	ldrb	r3, [r1]
   115dc:	cmp	r3, #114	; 0x72
   115e0:	ldreq	r3, [pc, #44]	; 11614 <error@@Base+0x110>
   115e4:	ldrne	r3, [pc, #44]	; 11618 <error@@Base+0x114>
   115e8:	ldr	r0, [r3]
   115ec:	pop	{r4, r5, r6, pc}
   115f0:	bl	10734 <fopen@plt>
   115f4:	cmp	r0, #0
   115f8:	popne	{r4, r5, r6, pc}
   115fc:	mov	r1, r4
   11600:	ldrb	r3, [r5]
   11604:	cmp	r3, #119	; 0x77
   11608:	ldreq	r0, [pc, #12]	; 1161c <error@@Base+0x118>
   1160c:	ldrne	r0, [pc, #12]	; 11620 <error@@Base+0x11c>
   11610:	bl	11588 <error@@Base+0x84>
   11614:	andeq	r2, r2, r8, lsl #1
   11618:	andeq	r2, r2, ip, lsl #1
   1161c:	andeq	r1, r1, r7, lsr sp
   11620:	andeq	r1, r1, sp, asr #26
   11624:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11628:	mov	r8, r0
   1162c:	mov	r7, r1
   11630:	mov	r9, r3
   11634:	ldr	r0, [r1]
   11638:	str	r2, [sp]
   1163c:	bl	11468 <abort@plt+0xc44>
   11640:	ldr	r3, [pc, #396]	; 117d4 <error@@Base+0x2d0>
   11644:	ldr	r1, [pc, #396]	; 117d8 <error@@Base+0x2d4>
   11648:	str	r0, [r3]
   1164c:	mov	r0, #2
   11650:	bl	10788 <__sysv_signal@plt>
   11654:	ldr	r1, [pc, #380]	; 117d8 <error@@Base+0x2d4>
   11658:	mov	r0, #15
   1165c:	bl	10788 <__sysv_signal@plt>
   11660:	ldr	r4, [r8]
   11664:	cmp	r4, #1
   11668:	movne	r6, #0
   1166c:	movne	r4, #1
   11670:	bne	11794 <error@@Base+0x290>
   11674:	ldr	r3, [pc, #352]	; 117dc <error@@Base+0x2d8>
   11678:	ldrb	r6, [r3, #4]
   1167c:	cmp	r6, #0
   11680:	beq	11794 <error@@Base+0x290>
   11684:	ldr	r0, [sp]
   11688:	bl	114b8 <abort@plt+0xc94>
   1168c:	ldr	r5, [r7, r4, lsl #2]
   11690:	lsl	sl, r4, #2
   11694:	ldrb	r3, [r5]
   11698:	cmp	r3, #45	; 0x2d
   1169c:	bne	117c4 <error@@Base+0x2c0>
   116a0:	ldrb	r3, [r5, #1]
   116a4:	cmp	r3, #0
   116a8:	str	r3, [sp, #4]
   116ac:	beq	117c4 <error@@Base+0x2c0>
   116b0:	mov	r0, r5
   116b4:	bl	107b8 <strlen@plt>
   116b8:	mov	r2, r0
   116bc:	mov	r1, r5
   116c0:	ldr	r0, [pc, #280]	; 117e0 <error@@Base+0x2dc>
   116c4:	bl	10818 <strncmp@plt>
   116c8:	cmp	r0, #0
   116cc:	beq	11684 <error@@Base+0x180>
   116d0:	add	r0, r4, #1
   116d4:	ldr	r3, [sp, #4]
   116d8:	cmp	r0, fp
   116dc:	addlt	sl, r7, sl
   116e0:	movge	r1, #0
   116e4:	ldrlt	r1, [sl, #4]
   116e8:	cmp	r9, #0
   116ec:	beq	117ac <error@@Base+0x2a8>
   116f0:	mov	ip, #0
   116f4:	sxth	r2, ip
   116f8:	add	r2, r2, r2, lsl #1
   116fc:	add	lr, r9, r2, lsl #2
   11700:	ldrb	r2, [r9, r2, lsl #2]
   11704:	cmp	r2, #0
   11708:	beq	117ac <error@@Base+0x2a8>
   1170c:	cmp	r3, r2
   11710:	add	ip, ip, #1
   11714:	bne	116f4 <error@@Base+0x1f0>
   11718:	ldr	r3, [lr, #4]
   1171c:	cmp	r3, #0
   11720:	bne	11754 <error@@Base+0x250>
   11724:	ldr	r3, [lr, #8]
   11728:	cmp	r3, #0
   1172c:	beq	117ac <error@@Base+0x2a8>
   11730:	ldrb	r2, [r5, #2]
   11734:	cmp	r2, #0
   11738:	bne	117ac <error@@Base+0x2a8>
   1173c:	ldrb	r2, [r3]
   11740:	cmp	r2, #0
   11744:	bne	117b8 <error@@Base+0x2b4>
   11748:	mov	r2, #1
   1174c:	strb	r2, [r3]
   11750:	b	1178c <error@@Base+0x288>
   11754:	ldrb	r2, [r5, #2]
   11758:	cmp	r1, #0
   1175c:	cmpeq	r2, #0
   11760:	beq	11724 <error@@Base+0x220>
   11764:	ldr	ip, [r3]
   11768:	cmp	ip, #0
   1176c:	bne	117b8 <error@@Base+0x2b4>
   11770:	cmp	r2, #0
   11774:	sxth	r0, r0
   11778:	addne	r1, r5, #2
   1177c:	str	r1, [r3]
   11780:	ldrb	r3, [r5, #2]
   11784:	cmp	r3, #0
   11788:	moveq	r4, r0
   1178c:	add	r4, r4, #1
   11790:	sxth	r4, r4
   11794:	ldr	fp, [r8]
   11798:	cmp	r4, fp
   1179c:	blt	1168c <error@@Base+0x188>
   117a0:	str	r6, [r8]
   117a4:	add	sp, sp, #12
   117a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117ac:	ldr	r0, [pc, #48]	; 117e4 <error@@Base+0x2e0>
   117b0:	mov	r1, r5
   117b4:	bl	11588 <error@@Base+0x84>
   117b8:	mov	r1, r5
   117bc:	ldr	r0, [pc, #36]	; 117e8 <error@@Base+0x2e4>
   117c0:	b	117b4 <error@@Base+0x2b0>
   117c4:	add	r3, r6, #1
   117c8:	str	r5, [r7, r6, lsl #2]
   117cc:	sxth	r6, r3
   117d0:	b	1178c <error@@Base+0x288>
   117d4:	ldrdeq	r6, [r2], -r8
   117d8:	andeq	r1, r1, ip, asr r5
   117dc:	andeq	r2, r2, r4, ror r0
   117e0:	andeq	r1, r1, r1, ror #26
   117e4:	andeq	r1, r1, r7, ror #26
   117e8:	andeq	r1, r1, r6, ror sp
   117ec:	push	{r0, r1, r2, lr}
   117f0:	mov	r3, r0
   117f4:	ldr	r2, [pc, #28]	; 11818 <error@@Base+0x314>
   117f8:	str	r1, [sp]
   117fc:	ldr	r0, [pc, #24]	; 1181c <error@@Base+0x318>
   11800:	ldr	r1, [pc, #24]	; 11820 <error@@Base+0x31c>
   11804:	ldr	r2, [r2]
   11808:	ldr	r0, [r0]
   1180c:	bl	107c4 <fprintf@plt>
   11810:	add	sp, sp, #12
   11814:	pop	{pc}		; (ldr pc, [sp], #4)
   11818:	ldrdeq	r6, [r2], -r8
   1181c:	andeq	r2, r2, r0, lsl #1
   11820:	andeq	r1, r1, sl, lsr #26
   11824:	cmp	r1, #0
   11828:	push	{r4, lr}
   1182c:	mov	r4, r0
   11830:	stm	r2, {r1, r3}
   11834:	strne	r2, [r1, #4]
   11838:	streq	r2, [r0]
   1183c:	cmp	r3, #0
   11840:	streq	r2, [r0, #4]
   11844:	ldr	r0, [r0, #8]
   11848:	strne	r2, [r3]
   1184c:	cmp	r0, #0
   11850:	beq	11860 <error@@Base+0x35c>
   11854:	bl	10740 <free@plt>
   11858:	mov	r3, #0
   1185c:	str	r3, [r4, #8]
   11860:	ldr	r3, [r4, #12]
   11864:	add	r3, r3, #1
   11868:	str	r3, [r4, #12]
   1186c:	pop	{r4, pc}
   11870:	mov	r3, #0
   11874:	str	r3, [r0]
   11878:	str	r3, [r0, #4]
   1187c:	str	r3, [r0, #8]
   11880:	str	r3, [r0, #12]
   11884:	bx	lr
   11888:	mov	r2, r1
   1188c:	mov	r1, #0
   11890:	ldr	r3, [r0]
   11894:	b	11824 <error@@Base+0x320>
   11898:	mov	r2, r1
   1189c:	mov	r3, #0
   118a0:	ldr	r1, [r0, #4]
   118a4:	b	11824 <error@@Base+0x320>
   118a8:	mov	r3, r2
   118ac:	mov	r2, r1
   118b0:	ldr	r1, [r3]
   118b4:	b	11824 <error@@Base+0x320>
   118b8:	ldr	r3, [r1, #4]
   118bc:	b	11824 <error@@Base+0x320>
   118c0:	ldr	r3, [r1]
   118c4:	push	{r4, r5, r6, lr}
   118c8:	mov	r4, r0
   118cc:	mov	r5, #0
   118d0:	ldr	r2, [r1, #4]
   118d4:	cmp	r3, #0
   118d8:	strne	r2, [r3, #4]
   118dc:	streq	r2, [r0]
   118e0:	ldr	r2, [r1, #4]
   118e4:	cmp	r2, #0
   118e8:	streq	r3, [r0, #4]
   118ec:	ldr	r0, [r0, #8]
   118f0:	strne	r3, [r2]
   118f4:	str	r5, [r1]
   118f8:	str	r5, [r1, #4]
   118fc:	cmp	r0, r5
   11900:	beq	1190c <error@@Base+0x408>
   11904:	bl	10740 <free@plt>
   11908:	str	r5, [r4, #8]
   1190c:	ldr	r3, [r4, #12]
   11910:	sub	r3, r3, #1
   11914:	str	r3, [r4, #12]
   11918:	pop	{r4, r5, r6, pc}
   1191c:	ldr	r3, [r0, #8]
   11920:	cmp	r3, #0
   11924:	bxne	lr
   11928:	ldr	r3, [r0, #12]
   1192c:	cmp	r3, #0
   11930:	bxeq	lr
   11934:	push	{r4, lr}
   11938:	mov	r1, #4
   1193c:	mov	r4, r0
   11940:	mov	r0, r3
   11944:	bl	11540 <error@@Base+0x3c>
   11948:	ldr	r3, [r4]
   1194c:	str	r0, [r4, #8]
   11950:	sub	r0, r0, #4
   11954:	cmp	r3, #0
   11958:	popeq	{r4, pc}
   1195c:	str	r3, [r0, #4]!
   11960:	ldr	r3, [r3, #4]
   11964:	b	11954 <error@@Base+0x450>
   11968:	push	{r4, r5, r6, lr}
   1196c:	mov	r5, r0
   11970:	mov	r6, r1
   11974:	ldr	r4, [r5]
   11978:	cmp	r4, #0
   1197c:	popeq	{r4, r5, r6, pc}
   11980:	mov	r0, r5
   11984:	mov	r1, r4
   11988:	bl	118c0 <error@@Base+0x3bc>
   1198c:	mov	r0, r4
   11990:	blx	r6
   11994:	b	11974 <error@@Base+0x470>
   11998:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1199c:	mov	r8, r0
   119a0:	mov	r9, r1
   119a4:	ldr	sl, [pc, #248]	; 11aa4 <error@@Base+0x5a0>
   119a8:	mov	r7, sl
   119ac:	ldr	r3, [sl]
   119b0:	mov	r4, r9
   119b4:	mov	r5, r8
   119b8:	ldr	fp, [r3, r8, lsl #2]
   119bc:	cmp	r5, r4
   119c0:	blt	11a00 <error@@Base+0x4fc>
   119c4:	ldr	r3, [r7]
   119c8:	sub	r1, r4, #1
   119cc:	cmp	r8, r1
   119d0:	str	fp, [r3, r4, lsl #2]
   119d4:	bge	119e0 <error@@Base+0x4dc>
   119d8:	mov	r0, r8
   119dc:	bl	11998 <error@@Base+0x494>
   119e0:	add	r8, r5, #1
   119e4:	cmp	r8, r9
   119e8:	blt	119ac <error@@Base+0x4a8>
   119ec:	add	sp, sp, #12
   119f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119f4:	sub	r4, r4, #1
   119f8:	cmp	r5, r4
   119fc:	beq	11a9c <error@@Base+0x598>
   11a00:	ldrd	r2, [r7]
   11a04:	mov	r0, fp
   11a08:	ldr	r1, [r2, r4, lsl #2]
   11a0c:	blx	r3
   11a10:	cmp	r0, #0
   11a14:	blt	119f4 <error@@Base+0x4f0>
   11a18:	cmp	r5, r4
   11a1c:	beq	11a9c <error@@Base+0x598>
   11a20:	ldr	r2, [r7]
   11a24:	lsl	r3, r4, #2
   11a28:	add	r6, r5, #1
   11a2c:	ldr	r1, [r2, r4, lsl #2]
   11a30:	str	r1, [r2, r5, lsl #2]
   11a34:	cmp	r6, r4
   11a38:	lsl	r2, r6, #2
   11a3c:	ldr	r1, [r7]
   11a40:	bge	11a90 <error@@Base+0x58c>
   11a44:	mov	r0, fp
   11a48:	ldr	r1, [r1, r6, lsl #2]
   11a4c:	str	r3, [sp]
   11a50:	ldr	r5, [r7, #4]
   11a54:	str	r2, [sp, #4]
   11a58:	blx	r5
   11a5c:	cmp	r0, #0
   11a60:	ldr	r3, [sp]
   11a64:	ldr	r2, [sp, #4]
   11a68:	bgt	11a88 <error@@Base+0x584>
   11a6c:	ldr	r1, [r7]
   11a70:	sub	r5, r4, #1
   11a74:	ldr	r2, [r1, r2]
   11a78:	str	r2, [r1, r3]
   11a7c:	mov	r4, r5
   11a80:	mov	r5, r6
   11a84:	b	119bc <error@@Base+0x4b8>
   11a88:	add	r6, r6, #1
   11a8c:	b	11a34 <error@@Base+0x530>
   11a90:	moveq	r5, r6
   11a94:	bne	11a6c <error@@Base+0x568>
   11a98:	b	11a7c <error@@Base+0x578>
   11a9c:	mov	r6, r5
   11aa0:	b	11a7c <error@@Base+0x578>
   11aa4:	strdeq	r2, [r2], -ip
   11aa8:	cmp	r0, #1
   11aac:	bxle	lr
   11ab0:	ldr	r3, [pc, #12]	; 11ac4 <error@@Base+0x5c0>
   11ab4:	stm	r3, {r1, r2}
   11ab8:	sub	r1, r0, #1
   11abc:	mov	r0, #0
   11ac0:	b	11998 <error@@Base+0x494>
   11ac4:	strdeq	r2, [r2], -ip
   11ac8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11acc:	mov	r7, r0
   11ad0:	ldr	r6, [pc, #72]	; 11b20 <error@@Base+0x61c>
   11ad4:	ldr	r5, [pc, #72]	; 11b24 <error@@Base+0x620>
   11ad8:	add	r6, pc, r6
   11adc:	add	r5, pc, r5
   11ae0:	sub	r6, r6, r5
   11ae4:	mov	r8, r1
   11ae8:	mov	r9, r2
   11aec:	bl	106fc <calloc@plt-0x20>
   11af0:	asrs	r6, r6, #2
   11af4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11af8:	mov	r4, #0
   11afc:	add	r4, r4, #1
   11b00:	ldr	r3, [r5], #4
   11b04:	mov	r2, r9
   11b08:	mov	r1, r8
   11b0c:	mov	r0, r7
   11b10:	blx	r3
   11b14:	cmp	r6, r4
   11b18:	bne	11afc <error@@Base+0x5f8>
   11b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b20:	andeq	r0, r1, r4, lsr #8
   11b24:	andeq	r0, r1, ip, lsl r4
   11b28:	bx	lr
   11b2c:	mov	r2, r1
   11b30:	mov	r1, r0
   11b34:	mov	r0, #3
   11b38:	b	10770 <__xstat@plt>

Disassembly of section .fini:

00011b3c <.fini>:
   11b3c:	push	{r3, lr}
   11b40:	pop	{r3, pc}
