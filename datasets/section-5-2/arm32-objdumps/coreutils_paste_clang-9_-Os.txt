
../repos/coreutils/src/paste:     file format elf32-littlearm


Disassembly of section .init:

00010d64 <.init>:
   10d64:	push	{r3, lr}
   10d68:	bl	11000 <putchar_unlocked@plt+0x48>
   10d6c:	pop	{r3, pc}

Disassembly of section .plt:

00010d70 <calloc@plt-0x14>:
   10d70:	push	{lr}		; (str lr, [sp, #-4]!)
   10d74:	ldr	lr, [pc, #4]	; 10d80 <calloc@plt-0x4>
   10d78:	add	lr, pc, lr
   10d7c:	ldr	pc, [lr, #8]!
   10d80:	andeq	r5, r1, r0, lsl #5

00010d84 <calloc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #640]!	; 0x280

00010d90 <fputs_unlocked@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #632]!	; 0x278

00010d9c <strcmp@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #624]!	; 0x270

00010da8 <posix_fadvise64@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #616]!	; 0x268

00010db4 <fflush@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #608]!	; 0x260

00010dc0 <free@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #600]!	; 0x258

00010dcc <_exit@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #592]!	; 0x250

00010dd8 <memcpy@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #584]!	; 0x248

00010de4 <mbsinit@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #576]!	; 0x240

00010df0 <fwrite_unlocked@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #568]!	; 0x238

00010dfc <getc_unlocked@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #560]!	; 0x230

00010e08 <dcgettext@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #552]!	; 0x228

00010e14 <realloc@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #544]!	; 0x220

00010e20 <textdomain@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #536]!	; 0x218

00010e2c <iswprint@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #528]!	; 0x210

00010e38 <lseek64@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #520]!	; 0x208

00010e44 <__ctype_get_mb_cur_max@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #512]!	; 0x200

00010e50 <__fpending@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #504]!	; 0x1f8

00010e5c <ferror_unlocked@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #496]!	; 0x1f0

00010e68 <mbrtowc@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #488]!	; 0x1e8

00010e74 <error@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e80 <malloc@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #472]!	; 0x1d8

00010e8c <__libc_start_main@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #464]!	; 0x1d0

00010e98 <__freading@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea4 <__gmon_start__@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #448]!	; 0x1c0

00010eb0 <getopt_long@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #440]!	; 0x1b8

00010ebc <__ctype_b_loc@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec8 <exit@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed4 <bcmp@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ee0 <strlen@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #408]!	; 0x198

00010eec <__errno_location@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #400]!	; 0x190

00010ef8 <__cxa_atexit@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #392]!	; 0x188

00010f04 <memset@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #384]!	; 0x180

00010f10 <__printf_chk@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #86016	; 0x15000
   10f18:	ldr	pc, [ip, #376]!	; 0x178

00010f1c <fileno@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #86016	; 0x15000
   10f24:	ldr	pc, [ip, #368]!	; 0x170

00010f28 <__fprintf_chk@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #86016	; 0x15000
   10f30:	ldr	pc, [ip, #360]!	; 0x168

00010f34 <fclose@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #86016	; 0x15000
   10f3c:	ldr	pc, [ip, #352]!	; 0x160

00010f40 <fseeko64@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #86016	; 0x15000
   10f48:	ldr	pc, [ip, #344]!	; 0x158

00010f4c <setlocale@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #86016	; 0x15000
   10f54:	ldr	pc, [ip, #336]!	; 0x150

00010f58 <strrchr@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #86016	; 0x15000
   10f60:	ldr	pc, [ip, #328]!	; 0x148

00010f64 <nl_langinfo@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #86016	; 0x15000
   10f6c:	ldr	pc, [ip, #320]!	; 0x140

00010f70 <clearerr_unlocked@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #86016	; 0x15000
   10f78:	ldr	pc, [ip, #312]!	; 0x138

00010f7c <fopen64@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #86016	; 0x15000
   10f84:	ldr	pc, [ip, #304]!	; 0x130

00010f88 <bindtextdomain@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #86016	; 0x15000
   10f90:	ldr	pc, [ip, #296]!	; 0x128

00010f94 <fputs@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #86016	; 0x15000
   10f9c:	ldr	pc, [ip, #288]!	; 0x120

00010fa0 <strncmp@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #86016	; 0x15000
   10fa8:	ldr	pc, [ip, #280]!	; 0x118

00010fac <abort@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #86016	; 0x15000
   10fb4:	ldr	pc, [ip, #272]!	; 0x110

00010fb8 <putchar_unlocked@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #86016	; 0x15000
   10fc0:	ldr	pc, [ip, #264]!	; 0x108

Disassembly of section .text:

00010fc4 <.text>:
   10fc4:	mov	fp, #0
   10fc8:	mov	lr, #0
   10fcc:	pop	{r1}		; (ldr r1, [sp], #4)
   10fd0:	mov	r2, sp
   10fd4:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd8:	push	{r0}		; (str r0, [sp, #-4]!)
   10fdc:	ldr	ip, [pc, #16]	; 10ff4 <putchar_unlocked@plt+0x3c>
   10fe0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fe4:	ldr	r0, [pc, #12]	; 10ff8 <putchar_unlocked@plt+0x40>
   10fe8:	ldr	r3, [pc, #12]	; 10ffc <putchar_unlocked@plt+0x44>
   10fec:	bl	10e8c <__libc_start_main@plt>
   10ff0:	bl	10fac <abort@plt>
   10ff4:	andeq	r4, r1, r4, ror #18
   10ff8:	andeq	r1, r1, r8, asr #6
   10ffc:	andeq	r4, r1, r4, lsl #18
   11000:	ldr	r3, [pc, #20]	; 1101c <putchar_unlocked@plt+0x64>
   11004:	ldr	r2, [pc, #20]	; 11020 <putchar_unlocked@plt+0x68>
   11008:	add	r3, pc, r3
   1100c:	ldr	r2, [r3, r2]
   11010:	cmp	r2, #0
   11014:	bxeq	lr
   11018:	b	10ea4 <__gmon_start__@plt>
   1101c:	strdeq	r4, [r1], -r0
   11020:	andeq	r0, r0, ip, asr #1
   11024:	ldr	r0, [pc, #24]	; 11044 <putchar_unlocked@plt+0x8c>
   11028:	ldr	r3, [pc, #24]	; 11048 <putchar_unlocked@plt+0x90>
   1102c:	cmp	r3, r0
   11030:	bxeq	lr
   11034:	ldr	r3, [pc, #16]	; 1104c <putchar_unlocked@plt+0x94>
   11038:	cmp	r3, #0
   1103c:	bxeq	lr
   11040:	bx	r3
   11044:	andeq	r6, r2, r0, lsr #2
   11048:	andeq	r6, r2, r0, lsr #2
   1104c:	andeq	r0, r0, r0
   11050:	ldr	r0, [pc, #36]	; 1107c <putchar_unlocked@plt+0xc4>
   11054:	ldr	r1, [pc, #36]	; 11080 <putchar_unlocked@plt+0xc8>
   11058:	sub	r1, r1, r0
   1105c:	asr	r1, r1, #2
   11060:	add	r1, r1, r1, lsr #31
   11064:	asrs	r1, r1, #1
   11068:	bxeq	lr
   1106c:	ldr	r3, [pc, #16]	; 11084 <putchar_unlocked@plt+0xcc>
   11070:	cmp	r3, #0
   11074:	bxeq	lr
   11078:	bx	r3
   1107c:	andeq	r6, r2, r0, lsr #2
   11080:	andeq	r6, r2, r0, lsr #2
   11084:	andeq	r0, r0, r0
   11088:	push	{r4, lr}
   1108c:	ldr	r4, [pc, #24]	; 110ac <putchar_unlocked@plt+0xf4>
   11090:	ldrb	r3, [r4]
   11094:	cmp	r3, #0
   11098:	popne	{r4, pc}
   1109c:	bl	11024 <putchar_unlocked@plt+0x6c>
   110a0:	mov	r3, #1
   110a4:	strb	r3, [r4]
   110a8:	pop	{r4, pc}
   110ac:	andeq	r6, r2, r4, asr #2
   110b0:	b	11050 <putchar_unlocked@plt+0x98>
   110b4:	push	{fp, lr}
   110b8:	mov	fp, sp
   110bc:	sub	sp, sp, #56	; 0x38
   110c0:	mov	r8, r0
   110c4:	cmp	r0, #0
   110c8:	bne	11308 <putchar_unlocked@plt+0x350>
   110cc:	movw	r1, #18867	; 0x49b3
   110d0:	mov	r0, #0
   110d4:	mov	r2, #5
   110d8:	movt	r1, #1
   110dc:	bl	10e08 <dcgettext@plt>
   110e0:	mov	r1, r0
   110e4:	movw	r0, #24924	; 0x615c
   110e8:	movt	r0, #2
   110ec:	ldr	r2, [r0]
   110f0:	mov	r0, #1
   110f4:	bl	10f10 <__printf_chk@plt>
   110f8:	movw	r1, #18900	; 0x49d4
   110fc:	mov	r0, #0
   11100:	mov	r2, #5
   11104:	movt	r1, #1
   11108:	bl	10e08 <dcgettext@plt>
   1110c:	movw	r9, #24892	; 0x613c
   11110:	movt	r9, #2
   11114:	ldr	r1, [r9]
   11118:	bl	10d90 <fputs_unlocked@plt>
   1111c:	movw	r1, #19462	; 0x4c06
   11120:	mov	r0, #0
   11124:	mov	r2, #5
   11128:	movt	r1, #1
   1112c:	bl	10e08 <dcgettext@plt>
   11130:	ldr	r1, [r9]
   11134:	bl	10d90 <fputs_unlocked@plt>
   11138:	movw	r1, #19518	; 0x4c3e
   1113c:	mov	r0, #0
   11140:	mov	r2, #5
   11144:	movt	r1, #1
   11148:	bl	10e08 <dcgettext@plt>
   1114c:	ldr	r1, [r9]
   11150:	bl	10d90 <fputs_unlocked@plt>
   11154:	movw	r1, #19019	; 0x4a4b
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	movt	r1, #1
   11164:	bl	10e08 <dcgettext@plt>
   11168:	ldr	r1, [r9]
   1116c:	bl	10d90 <fputs_unlocked@plt>
   11170:	movw	r1, #19163	; 0x4adb
   11174:	mov	r0, #0
   11178:	mov	r2, #5
   1117c:	movt	r1, #1
   11180:	bl	10e08 <dcgettext@plt>
   11184:	ldr	r1, [r9]
   11188:	bl	10d90 <fputs_unlocked@plt>
   1118c:	movw	r1, #19226	; 0x4b1a
   11190:	mov	r0, #0
   11194:	mov	r2, #5
   11198:	movt	r1, #1
   1119c:	bl	10e08 <dcgettext@plt>
   111a0:	ldr	r1, [r9]
   111a4:	bl	10d90 <fputs_unlocked@plt>
   111a8:	movw	r1, #19271	; 0x4b47
   111ac:	mov	r0, #0
   111b0:	mov	r2, #5
   111b4:	movt	r1, #1
   111b8:	bl	10e08 <dcgettext@plt>
   111bc:	ldr	r1, [r9]
   111c0:	bl	10d90 <fputs_unlocked@plt>
   111c4:	movw	r0, #20088	; 0x4e78
   111c8:	mov	r6, sp
   111cc:	movt	r0, #1
   111d0:	mov	r1, r6
   111d4:	ldm	r0!, {r2, r3, r4, r5}
   111d8:	stmia	r1!, {r2, r3, r4, r5}
   111dc:	ldm	r0!, {r2, r3, r4, r5, r7}
   111e0:	stmia	r1!, {r2, r3, r4, r5, r7}
   111e4:	ldm	r0, {r2, r3, r4, r5, r7}
   111e8:	stm	r1, {r2, r3, r4, r5, r7}
   111ec:	movw	r1, #19593	; 0x4c89
   111f0:	movw	r5, #19325	; 0x4b7d
   111f4:	movt	r1, #1
   111f8:	movt	r5, #1
   111fc:	mov	r0, r5
   11200:	bl	10d9c <strcmp@plt>
   11204:	cmp	r0, #0
   11208:	ldrne	r1, [r6, #8]!
   1120c:	cmpne	r1, #0
   11210:	bne	111fc <putchar_unlocked@plt+0x244>
   11214:	movw	r1, #19688	; 0x4ce8
   11218:	ldr	r6, [r6, #4]
   1121c:	mov	r0, #0
   11220:	mov	r2, #5
   11224:	movt	r1, #1
   11228:	bl	10e08 <dcgettext@plt>
   1122c:	movw	r2, #19365	; 0x4ba5
   11230:	movw	r3, #19711	; 0x4cff
   11234:	mov	r1, r0
   11238:	mov	r0, #1
   1123c:	movt	r2, #1
   11240:	movt	r3, #1
   11244:	bl	10f10 <__printf_chk@plt>
   11248:	cmp	r6, #0
   1124c:	mov	r0, #5
   11250:	mov	r1, #0
   11254:	moveq	r6, r5
   11258:	bl	10f4c <setlocale@plt>
   1125c:	cmp	r0, #0
   11260:	beq	11298 <putchar_unlocked@plt+0x2e0>
   11264:	movw	r1, #19751	; 0x4d27
   11268:	mov	r2, #3
   1126c:	movt	r1, #1
   11270:	bl	10fa0 <strncmp@plt>
   11274:	cmp	r0, #0
   11278:	beq	11298 <putchar_unlocked@plt+0x2e0>
   1127c:	movw	r1, #19755	; 0x4d2b
   11280:	mov	r0, #0
   11284:	mov	r2, #5
   11288:	movt	r1, #1
   1128c:	bl	10e08 <dcgettext@plt>
   11290:	ldr	r1, [r9]
   11294:	bl	10d90 <fputs_unlocked@plt>
   11298:	movw	r1, #19826	; 0x4d72
   1129c:	mov	r0, #0
   112a0:	mov	r2, #5
   112a4:	movt	r1, #1
   112a8:	bl	10e08 <dcgettext@plt>
   112ac:	movw	r2, #19711	; 0x4cff
   112b0:	mov	r1, r0
   112b4:	mov	r0, #1
   112b8:	mov	r3, r5
   112bc:	movt	r2, #1
   112c0:	bl	10f10 <__printf_chk@plt>
   112c4:	movw	r1, #19853	; 0x4d8d
   112c8:	mov	r0, #0
   112cc:	mov	r2, #5
   112d0:	movt	r1, #1
   112d4:	bl	10e08 <dcgettext@plt>
   112d8:	mov	r1, r0
   112dc:	movw	r0, #19621	; 0x4ca5
   112e0:	movw	r3, #19332	; 0x4b84
   112e4:	cmp	r6, r5
   112e8:	mov	r2, r6
   112ec:	movt	r0, #1
   112f0:	movt	r3, #1
   112f4:	moveq	r3, r0
   112f8:	mov	r0, #1
   112fc:	bl	10f10 <__printf_chk@plt>
   11300:	mov	r0, r8
   11304:	bl	10ec8 <exit@plt>
   11308:	movw	r0, #24880	; 0x6130
   1130c:	movw	r1, #18828	; 0x498c
   11310:	mov	r2, #5
   11314:	movt	r0, #2
   11318:	movt	r1, #1
   1131c:	ldr	r5, [r0]
   11320:	mov	r0, #0
   11324:	bl	10e08 <dcgettext@plt>
   11328:	mov	r2, r0
   1132c:	movw	r0, #24924	; 0x615c
   11330:	mov	r1, #1
   11334:	movt	r0, #2
   11338:	ldr	r3, [r0]
   1133c:	mov	r0, r5
   11340:	bl	10f28 <__fprintf_chk@plt>
   11344:	b	11300 <putchar_unlocked@plt+0x348>
   11348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1134c:	add	fp, sp, #28
   11350:	sub	sp, sp, #12
   11354:	mov	r6, r0
   11358:	ldr	r0, [r1]
   1135c:	mov	r4, r1
   11360:	bl	12170 <putchar_unlocked@plt+0x11b8>
   11364:	movw	r1, #19332	; 0x4b84
   11368:	mov	r0, #6
   1136c:	movt	r1, #1
   11370:	bl	10f4c <setlocale@plt>
   11374:	movw	r5, #19369	; 0x4ba9
   11378:	movw	r1, #19333	; 0x4b85
   1137c:	movt	r5, #1
   11380:	movt	r1, #1
   11384:	mov	r0, r5
   11388:	bl	10f88 <bindtextdomain@plt>
   1138c:	mov	r0, r5
   11390:	bl	10e20 <textdomain@plt>
   11394:	movw	r0, #7812	; 0x1e84
   11398:	movt	r0, #1
   1139c:	bl	14968 <putchar_unlocked@plt+0x39b0>
   113a0:	movw	r0, #24904	; 0x6148
   113a4:	movw	r9, #24905	; 0x6149
   113a8:	movw	r5, #19331	; 0x4b83
   113ac:	movw	r8, #19357	; 0x4b9d
   113b0:	movw	sl, #19992	; 0x4e18
   113b4:	mov	r7, #0
   113b8:	movt	r0, #2
   113bc:	movt	r9, #2
   113c0:	movt	r5, #1
   113c4:	movt	r8, #1
   113c8:	movt	sl, #1
   113cc:	strb	r7, [r0]
   113d0:	strb	r7, [r9]
   113d4:	mov	r0, r6
   113d8:	mov	r1, r4
   113dc:	mov	r2, r8
   113e0:	mov	r3, sl
   113e4:	str	r7, [sp]
   113e8:	bl	10eb0 <getopt_long@plt>
   113ec:	cmp	r0, #99	; 0x63
   113f0:	ble	11448 <putchar_unlocked@plt+0x490>
   113f4:	cmp	r0, #122	; 0x7a
   113f8:	beq	11434 <putchar_unlocked@plt+0x47c>
   113fc:	cmp	r0, #115	; 0x73
   11400:	mov	r1, r9
   11404:	beq	1143c <putchar_unlocked@plt+0x484>
   11408:	cmp	r0, #100	; 0x64
   1140c:	bne	116ac <putchar_unlocked@plt+0x6f4>
   11410:	movw	r0, #24896	; 0x6140
   11414:	movt	r0, #2
   11418:	ldr	r5, [r0]
   1141c:	ldrb	r0, [r5]
   11420:	cmp	r0, #0
   11424:	movw	r0, #19362	; 0x4ba2
   11428:	movt	r0, #1
   1142c:	moveq	r5, r0
   11430:	b	113d4 <putchar_unlocked@plt+0x41c>
   11434:	movw	r1, #24906	; 0x614a
   11438:	movt	r1, #2
   1143c:	mov	r0, #1
   11440:	strb	r0, [r1]
   11444:	b	113d4 <putchar_unlocked@plt+0x41c>
   11448:	cmn	r0, #1
   1144c:	bne	11640 <putchar_unlocked@plt+0x688>
   11450:	movw	r8, #24872	; 0x6128
   11454:	movt	r8, #2
   11458:	ldr	r0, [r8]
   1145c:	subs	r6, r6, r0
   11460:	bne	11474 <putchar_unlocked@plt+0x4bc>
   11464:	movw	r1, #20232	; 0x4f08
   11468:	mov	r6, #1
   1146c:	movt	r1, #1
   11470:	str	r1, [r4, r0, lsl #2]
   11474:	mov	r0, r5
   11478:	bl	1455c <putchar_unlocked@plt+0x35a4>
   1147c:	movw	r9, #24908	; 0x614c
   11480:	movt	r9, #2
   11484:	str	r0, [r9]
   11488:	ldrb	r2, [r5]
   1148c:	cmp	r2, #0
   11490:	beq	11574 <putchar_unlocked@plt+0x5bc>
   11494:	mov	r1, r5
   11498:	uxtb	r7, r2
   1149c:	add	r3, r1, #1
   114a0:	cmp	r7, #92	; 0x5c
   114a4:	bne	114cc <putchar_unlocked@plt+0x514>
   114a8:	ldrb	r2, [r3]
   114ac:	cmp	r2, #97	; 0x61
   114b0:	bgt	114d8 <putchar_unlocked@plt+0x520>
   114b4:	cmp	r2, #48	; 0x30
   114b8:	beq	11518 <putchar_unlocked@plt+0x560>
   114bc:	cmp	r2, #92	; 0x5c
   114c0:	bne	11534 <putchar_unlocked@plt+0x57c>
   114c4:	mov	r2, #92	; 0x5c
   114c8:	b	1155c <putchar_unlocked@plt+0x5a4>
   114cc:	strb	r2, [r0]
   114d0:	mov	r1, r3
   114d4:	b	11564 <putchar_unlocked@plt+0x5ac>
   114d8:	sub	r3, r2, #110	; 0x6e
   114dc:	cmp	r3, #8
   114e0:	bhi	11520 <putchar_unlocked@plt+0x568>
   114e4:	add	r7, pc, #0
   114e8:	ldr	pc, [r7, r3, lsl #2]
   114ec:	andeq	r1, r1, r0, lsl r5
   114f0:	andeq	r1, r1, ip, asr r5
   114f4:	andeq	r1, r1, ip, asr r5
   114f8:	andeq	r1, r1, ip, asr r5
   114fc:	andeq	r1, r1, r8, asr #10
   11500:	andeq	r1, r1, ip, asr r5
   11504:	andeq	r1, r1, r0, asr r5
   11508:	andeq	r1, r1, ip, asr r5
   1150c:	andeq	r1, r1, r0, asr #10
   11510:	mov	r2, #10
   11514:	b	1155c <putchar_unlocked@plt+0x5a4>
   11518:	mov	r2, #0
   1151c:	b	1155c <putchar_unlocked@plt+0x5a4>
   11520:	cmp	r2, #102	; 0x66
   11524:	beq	11558 <putchar_unlocked@plt+0x5a0>
   11528:	cmp	r2, #98	; 0x62
   1152c:	moveq	r2, #8
   11530:	b	1155c <putchar_unlocked@plt+0x5a4>
   11534:	cmp	r2, #0
   11538:	bne	1155c <putchar_unlocked@plt+0x5a4>
   1153c:	b	115f8 <putchar_unlocked@plt+0x640>
   11540:	mov	r2, #11
   11544:	b	1155c <putchar_unlocked@plt+0x5a4>
   11548:	mov	r2, #13
   1154c:	b	1155c <putchar_unlocked@plt+0x5a4>
   11550:	mov	r2, #9
   11554:	b	1155c <putchar_unlocked@plt+0x5a4>
   11558:	mov	r2, #12
   1155c:	add	r1, r1, #2
   11560:	strb	r2, [r0]
   11564:	ldrb	r2, [r1]
   11568:	add	r0, r0, #1
   1156c:	cmp	r2, #0
   11570:	bne	11498 <putchar_unlocked@plt+0x4e0>
   11574:	movw	r1, #24912	; 0x6150
   11578:	movw	r2, #6492	; 0x195c
   1157c:	movt	r1, #2
   11580:	movt	r2, #1
   11584:	str	r0, [r1]
   11588:	movw	r0, #24905	; 0x6149
   1158c:	movw	r1, #5836	; 0x16cc
   11590:	movt	r0, #2
   11594:	movt	r1, #1
   11598:	ldrb	r0, [r0]
   1159c:	cmp	r0, #0
   115a0:	ldr	r0, [r8]
   115a4:	movne	r2, r1
   115a8:	add	r1, r4, r0, lsl #2
   115ac:	mov	r0, r6
   115b0:	blx	r2
   115b4:	mov	r4, r0
   115b8:	ldr	r0, [r9]
   115bc:	bl	120a4 <putchar_unlocked@plt+0x10ec>
   115c0:	movw	r0, #24904	; 0x6148
   115c4:	movt	r0, #2
   115c8:	ldrb	r0, [r0]
   115cc:	cmp	r0, #1
   115d0:	bne	115ec <putchar_unlocked@plt+0x634>
   115d4:	movw	r0, #24888	; 0x6138
   115d8:	movt	r0, #2
   115dc:	ldr	r0, [r0]
   115e0:	bl	11fac <putchar_unlocked@plt+0xff4>
   115e4:	cmn	r0, #1
   115e8:	beq	116b4 <putchar_unlocked@plt+0x6fc>
   115ec:	eor	r0, r4, #1
   115f0:	sub	sp, fp, #28
   115f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115f8:	movw	r1, #24912	; 0x6150
   115fc:	mov	r2, #5
   11600:	movt	r1, #2
   11604:	str	r0, [r1]
   11608:	movw	r1, #19410	; 0x4bd2
   1160c:	mov	r0, #0
   11610:	movt	r1, #1
   11614:	bl	10e08 <dcgettext@plt>
   11618:	mov	r4, r0
   1161c:	mov	r0, #0
   11620:	mov	r1, #6
   11624:	mov	r2, r5
   11628:	bl	139c8 <putchar_unlocked@plt+0x2a10>
   1162c:	mov	r3, r0
   11630:	mov	r0, #1
   11634:	mov	r1, #0
   11638:	mov	r2, r4
   1163c:	bl	10e74 <error@plt>
   11640:	cmn	r0, #3
   11644:	bne	1169c <putchar_unlocked@plt+0x6e4>
   11648:	movw	r0, #24792	; 0x60d8
   1164c:	movw	r2, #19394	; 0x4bc2
   11650:	mov	r1, #0
   11654:	movw	r7, #19379	; 0x4bb3
   11658:	movt	r0, #2
   1165c:	movt	r2, #1
   11660:	str	r1, [sp, #8]
   11664:	movw	r1, #19325	; 0x4b7d
   11668:	movt	r7, #1
   1166c:	movt	r1, #1
   11670:	ldr	r3, [r0]
   11674:	movw	r0, #24892	; 0x613c
   11678:	str	r2, [sp, #4]
   1167c:	movw	r2, #19365	; 0x4ba5
   11680:	str	r7, [sp]
   11684:	movt	r0, #2
   11688:	movt	r2, #1
   1168c:	ldr	r0, [r0]
   11690:	bl	14060 <putchar_unlocked@plt+0x30a8>
   11694:	mov	r0, #0
   11698:	bl	10ec8 <exit@plt>
   1169c:	cmn	r0, #2
   116a0:	bne	116ac <putchar_unlocked@plt+0x6f4>
   116a4:	mov	r0, #0
   116a8:	bl	110b4 <putchar_unlocked@plt+0xfc>
   116ac:	mov	r0, #1
   116b0:	bl	110b4 <putchar_unlocked@plt+0xfc>
   116b4:	bl	10eec <__errno_location@plt>
   116b8:	ldr	r1, [r0]
   116bc:	movw	r2, #20232	; 0x4f08
   116c0:	mov	r0, #1
   116c4:	movt	r2, #1
   116c8:	bl	10e74 <error@plt>
   116cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116d0:	add	fp, sp, #28
   116d4:	sub	sp, sp, #20
   116d8:	cmp	r0, #0
   116dc:	beq	11940 <putchar_unlocked@plt+0x988>
   116e0:	movw	sl, #20232	; 0x4f08
   116e4:	movw	r9, #24908	; 0x614c
   116e8:	movw	r4, #24906	; 0x614a
   116ec:	mov	r7, r0
   116f0:	mov	r0, #1
   116f4:	mov	r8, r1
   116f8:	movt	sl, #1
   116fc:	movt	r9, #2
   11700:	movt	r4, #2
   11704:	str	r0, [sp, #4]
   11708:	ldr	r6, [r8]
   1170c:	mov	r1, sl
   11710:	mov	r0, r6
   11714:	bl	10d9c <strcmp@plt>
   11718:	mov	r5, r0
   1171c:	cmp	r0, #0
   11720:	beq	11754 <putchar_unlocked@plt+0x79c>
   11724:	movw	r1, #19961	; 0x4df9
   11728:	mov	r0, r6
   1172c:	movt	r1, #1
   11730:	bl	10f7c <fopen64@plt>
   11734:	cmp	r0, #0
   11738:	beq	118e4 <putchar_unlocked@plt+0x92c>
   1173c:	mov	r1, #2
   11740:	mov	r6, r0
   11744:	str	r5, [sp, #12]
   11748:	str	r7, [sp, #16]
   1174c:	bl	11f70 <putchar_unlocked@plt+0xfb8>
   11750:	b	11778 <putchar_unlocked@plt+0x7c0>
   11754:	movw	r1, #24904	; 0x6148
   11758:	mov	r0, #1
   1175c:	str	r5, [sp, #12]
   11760:	str	r7, [sp, #16]
   11764:	movt	r1, #2
   11768:	strb	r0, [r1]
   1176c:	movw	r0, #24888	; 0x6138
   11770:	movt	r0, #2
   11774:	ldr	r6, [r0]
   11778:	ldr	r7, [r9]
   1177c:	mov	r0, r6
   11780:	bl	10dfc <getc_unlocked@plt>
   11784:	mov	sl, r0
   11788:	bl	10eec <__errno_location@plt>
   1178c:	mov	r1, r0
   11790:	cmn	sl, #1
   11794:	beq	1186c <putchar_unlocked@plt+0x8b4>
   11798:	mov	r0, r6
   1179c:	str	r1, [sp, #8]
   117a0:	bl	10dfc <getc_unlocked@plt>
   117a4:	cmn	r0, #1
   117a8:	beq	11828 <putchar_unlocked@plt+0x870>
   117ac:	mov	r5, r0
   117b0:	ldrb	r0, [r4]
   117b4:	cmp	r0, #0
   117b8:	mov	r0, #10
   117bc:	movwne	r0, #0
   117c0:	cmp	sl, r0
   117c4:	bne	11804 <putchar_unlocked@plt+0x84c>
   117c8:	ldrb	r0, [r7]
   117cc:	cmp	r0, #0
   117d0:	beq	117e0 <putchar_unlocked@plt+0x828>
   117d4:	bl	10fb8 <putchar_unlocked@plt>
   117d8:	cmn	r0, #1
   117dc:	ble	11958 <putchar_unlocked@plt+0x9a0>
   117e0:	movw	r0, #24912	; 0x6150
   117e4:	add	r2, r7, #1
   117e8:	ldr	r1, [r9]
   117ec:	movt	r0, #2
   117f0:	ldr	r0, [r0]
   117f4:	cmp	r2, r0
   117f8:	movne	r1, r2
   117fc:	mov	r7, r1
   11800:	b	11814 <putchar_unlocked@plt+0x85c>
   11804:	uxtb	r0, sl
   11808:	bl	10fb8 <putchar_unlocked@plt>
   1180c:	cmn	r0, #1
   11810:	ble	11958 <putchar_unlocked@plt+0x9a0>
   11814:	mov	r0, r6
   11818:	bl	10dfc <getc_unlocked@plt>
   1181c:	cmn	r0, #1
   11820:	mov	sl, r5
   11824:	bne	117ac <putchar_unlocked@plt+0x7f4>
   11828:	ldr	r4, [sp, #8]
   1182c:	uxtb	r0, sl
   11830:	ldr	r9, [r4]
   11834:	bl	10fb8 <putchar_unlocked@plt>
   11838:	cmn	r0, #1
   1183c:	ble	11958 <putchar_unlocked@plt+0x9a0>
   11840:	movw	r0, #24906	; 0x614a
   11844:	movt	r0, #2
   11848:	ldrb	r0, [r0]
   1184c:	cmp	r0, #0
   11850:	mov	r0, #10
   11854:	movwne	r0, #0
   11858:	cmp	sl, r0
   1185c:	movw	sl, #20232	; 0x4f08
   11860:	movt	sl, #1
   11864:	bne	1188c <putchar_unlocked@plt+0x8d4>
   11868:	b	11898 <putchar_unlocked@plt+0x8e0>
   1186c:	ldrb	r0, [r4]
   11870:	ldr	r9, [r1]
   11874:	movw	sl, #20232	; 0x4f08
   11878:	mov	r4, r1
   1187c:	movt	sl, #1
   11880:	cmp	r0, #0
   11884:	mov	r0, #10
   11888:	movwne	r0, #0
   1188c:	bl	10fb8 <putchar_unlocked@plt>
   11890:	cmn	r0, #1
   11894:	ble	11958 <putchar_unlocked@plt+0x9a0>
   11898:	mov	r0, r6
   1189c:	bl	10e5c <ferror_unlocked@plt>
   118a0:	cmp	r0, #0
   118a4:	ldr	r7, [sp, #16]
   118a8:	moveq	r9, r0
   118ac:	ldr	r0, [sp, #12]
   118b0:	cmp	r0, #0
   118b4:	mov	r0, r6
   118b8:	beq	118d4 <putchar_unlocked@plt+0x91c>
   118bc:	bl	11fac <putchar_unlocked@plt+0xff4>
   118c0:	cmp	r9, #0
   118c4:	bne	118d8 <putchar_unlocked@plt+0x920>
   118c8:	cmp	r0, #0
   118cc:	ldrne	r9, [r4]
   118d0:	b	118d8 <putchar_unlocked@plt+0x920>
   118d4:	bl	10f70 <clearerr_unlocked@plt>
   118d8:	cmp	r9, #0
   118dc:	bne	118ec <putchar_unlocked@plt+0x934>
   118e0:	b	1191c <putchar_unlocked@plt+0x964>
   118e4:	bl	10eec <__errno_location@plt>
   118e8:	ldr	r9, [r0]
   118ec:	ldr	r2, [r8]
   118f0:	mov	r0, #0
   118f4:	mov	r1, #3
   118f8:	str	r0, [sp, #4]
   118fc:	mov	r0, #0
   11900:	bl	139c8 <putchar_unlocked@plt+0x2a10>
   11904:	movw	r2, #19459	; 0x4c03
   11908:	mov	r3, r0
   1190c:	mov	r0, #0
   11910:	mov	r1, r9
   11914:	movt	r2, #1
   11918:	bl	10e74 <error@plt>
   1191c:	movw	r4, #24908	; 0x614c
   11920:	add	r8, r8, #4
   11924:	subs	r7, r7, #1
   11928:	movt	r4, #2
   1192c:	mov	r9, r4
   11930:	movw	r4, #24906	; 0x614a
   11934:	movt	r4, #2
   11938:	bne	11708 <putchar_unlocked@plt+0x750>
   1193c:	b	11948 <putchar_unlocked@plt+0x990>
   11940:	mov	r0, #1
   11944:	str	r0, [sp, #4]
   11948:	ldr	r0, [sp, #4]
   1194c:	and	r0, r0, #1
   11950:	sub	sp, fp, #28
   11954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11958:	bl	11e30 <putchar_unlocked@plt+0xe78>
   1195c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11960:	add	fp, sp, #28
   11964:	sub	sp, sp, #28
   11968:	mov	r4, r0
   1196c:	add	r0, r0, #2
   11970:	str	r1, [sp, #8]
   11974:	bl	14168 <putchar_unlocked@plt+0x31b0>
   11978:	str	r0, [sp, #16]
   1197c:	add	r0, r4, #1
   11980:	mov	r1, #4
   11984:	bl	14238 <putchar_unlocked@plt+0x3280>
   11988:	mov	r7, r0
   1198c:	cmp	r4, #0
   11990:	beq	11dac <putchar_unlocked@plt+0xdf4>
   11994:	movw	sl, #20232	; 0x4f08
   11998:	movw	r8, #19961	; 0x4df9
   1199c:	str	r4, [sp, #20]
   119a0:	mov	r6, #0
   119a4:	mov	r9, #1
   119a8:	mov	r4, #0
   119ac:	movt	sl, #1
   119b0:	movt	r8, #1
   119b4:	ldr	r0, [sp, #8]
   119b8:	mov	r1, sl
   119bc:	ldr	r5, [r0, r4, lsl #2]
   119c0:	mov	r0, r5
   119c4:	bl	10d9c <strcmp@plt>
   119c8:	cmp	r0, #0
   119cc:	beq	11a0c <putchar_unlocked@plt+0xa54>
   119d0:	mov	r0, r5
   119d4:	mov	r1, r8
   119d8:	bl	10f7c <fopen64@plt>
   119dc:	cmp	r0, #0
   119e0:	str	r0, [r7, r4, lsl #2]
   119e4:	beq	11dd8 <putchar_unlocked@plt+0xe20>
   119e8:	bl	10f1c <fileno@plt>
   119ec:	mov	r5, r0
   119f0:	ldr	r0, [r7, r4, lsl #2]
   119f4:	mov	r1, #2
   119f8:	bl	11f70 <putchar_unlocked@plt+0xfb8>
   119fc:	clz	r0, r5
   11a00:	lsr	r0, r0, #5
   11a04:	orr	r6, r6, r0
   11a08:	b	11a28 <putchar_unlocked@plt+0xa70>
   11a0c:	movw	r0, #24904	; 0x6148
   11a10:	movt	r0, #2
   11a14:	strb	r9, [r0]
   11a18:	movw	r0, #24888	; 0x6138
   11a1c:	movt	r0, #2
   11a20:	ldr	r0, [r0]
   11a24:	str	r0, [r7, r4, lsl #2]
   11a28:	ldr	r0, [sp, #20]
   11a2c:	add	r4, r4, #1
   11a30:	cmp	r0, r4
   11a34:	bne	119b4 <putchar_unlocked@plt+0x9fc>
   11a38:	tst	r6, #1
   11a3c:	beq	11a54 <putchar_unlocked@plt+0xa9c>
   11a40:	movw	r0, #24904	; 0x6148
   11a44:	movt	r0, #2
   11a48:	ldrb	r0, [r0]
   11a4c:	cmp	r0, #1
   11a50:	beq	11e0c <putchar_unlocked@plt+0xe54>
   11a54:	ldr	r4, [sp, #20]
   11a58:	cmp	r4, #0
   11a5c:	beq	11dac <putchar_unlocked@plt+0xdf4>
   11a60:	movw	sl, #24906	; 0x614a
   11a64:	mov	r0, #1
   11a68:	mov	r3, r4
   11a6c:	str	r0, [sp]
   11a70:	movt	sl, #2
   11a74:	cmp	r3, #0
   11a78:	beq	11da0 <putchar_unlocked@plt+0xde8>
   11a7c:	movw	r0, #24908	; 0x614c
   11a80:	mov	r6, #0
   11a84:	mov	r5, #0
   11a88:	movt	r0, #2
   11a8c:	ldr	r8, [r0]
   11a90:	mov	r0, #0
   11a94:	str	r0, [sp, #12]
   11a98:	ldr	r0, [r7, r6, lsl #2]
   11a9c:	cmp	r0, #0
   11aa0:	beq	11cd8 <putchar_unlocked@plt+0xd20>
   11aa4:	str	r3, [sp, #24]
   11aa8:	bl	10dfc <getc_unlocked@plt>
   11aac:	mov	r4, r0
   11ab0:	bl	10eec <__errno_location@plt>
   11ab4:	ldr	r1, [r0]
   11ab8:	cmp	r5, #0
   11abc:	mov	r9, r0
   11ac0:	cmnne	r4, #1
   11ac4:	bne	11ad8 <putchar_unlocked@plt+0xb20>
   11ac8:	cmn	r4, #1
   11acc:	beq	11c0c <putchar_unlocked@plt+0xc54>
   11ad0:	mov	r9, r5
   11ad4:	b	11b00 <putchar_unlocked@plt+0xb48>
   11ad8:	movw	r0, #24892	; 0x613c
   11adc:	mov	r1, #1
   11ae0:	mov	r2, r5
   11ae4:	movt	r0, #2
   11ae8:	ldr	r3, [r0]
   11aec:	ldr	r0, [sp, #16]
   11af0:	bl	10df0 <fwrite_unlocked@plt>
   11af4:	mov	r9, #0
   11af8:	cmp	r0, r5
   11afc:	bne	11dd4 <putchar_unlocked@plt+0xe1c>
   11b00:	ldrb	r0, [sl]
   11b04:	cmp	r0, #0
   11b08:	mov	r0, #10
   11b0c:	movwne	r0, #0
   11b10:	cmp	r4, r0
   11b14:	beq	11b40 <putchar_unlocked@plt+0xb88>
   11b18:	uxtb	r0, r4
   11b1c:	bl	10fb8 <putchar_unlocked@plt>
   11b20:	cmn	r0, #1
   11b24:	ble	11dd4 <putchar_unlocked@plt+0xe1c>
   11b28:	ldr	r0, [r7, r6, lsl #2]
   11b2c:	bl	10dfc <getc_unlocked@plt>
   11b30:	mov	r4, r0
   11b34:	cmn	r0, #1
   11b38:	bne	11b00 <putchar_unlocked@plt+0xb48>
   11b3c:	mvn	r4, #0
   11b40:	ldr	r0, [sp, #20]
   11b44:	add	r6, r6, #1
   11b48:	cmp	r6, r0
   11b4c:	bne	11b90 <putchar_unlocked@plt+0xbd8>
   11b50:	ldrb	r0, [sl]
   11b54:	cmp	r0, #0
   11b58:	mov	r0, #10
   11b5c:	movwne	r0, #0
   11b60:	cmn	r4, #1
   11b64:	movne	r0, r4
   11b68:	uxtb	r0, r0
   11b6c:	bl	10fb8 <putchar_unlocked@plt>
   11b70:	ldr	r4, [sp, #20]
   11b74:	ldr	r3, [sp, #24]
   11b78:	mov	r1, #1
   11b7c:	cmn	r0, #1
   11b80:	mov	r0, r8
   11b84:	str	r1, [sp, #12]
   11b88:	bgt	11d28 <putchar_unlocked@plt+0xd70>
   11b8c:	b	11dd4 <putchar_unlocked@plt+0xe1c>
   11b90:	ldrb	r0, [sl]
   11b94:	cmp	r0, #0
   11b98:	mov	r0, #10
   11b9c:	movwne	r0, #0
   11ba0:	cmn	r4, #1
   11ba4:	cmpne	r4, r0
   11ba8:	beq	11bbc <putchar_unlocked@plt+0xc04>
   11bac:	uxtb	r0, r4
   11bb0:	bl	10fb8 <putchar_unlocked@plt>
   11bb4:	cmn	r0, #1
   11bb8:	ble	11dd4 <putchar_unlocked@plt+0xe1c>
   11bbc:	ldrb	r0, [r8]
   11bc0:	cmp	r0, #0
   11bc4:	beq	11bd4 <putchar_unlocked@plt+0xc1c>
   11bc8:	bl	10fb8 <putchar_unlocked@plt>
   11bcc:	cmn	r0, #1
   11bd0:	ble	11dd4 <putchar_unlocked@plt+0xe1c>
   11bd4:	movw	r0, #24912	; 0x6150
   11bd8:	ldr	r4, [sp, #20]
   11bdc:	ldr	r3, [sp, #24]
   11be0:	add	r2, r8, #1
   11be4:	movt	r0, #2
   11be8:	ldr	r1, [r0]
   11bec:	movw	r0, #24908	; 0x614c
   11bf0:	movt	r0, #2
   11bf4:	ldr	r0, [r0]
   11bf8:	cmp	r2, r1
   11bfc:	mov	r1, #1
   11c00:	movne	r0, r2
   11c04:	str	r1, [sp, #12]
   11c08:	b	11d28 <putchar_unlocked@plt+0xd70>
   11c0c:	ldr	r0, [r7, r6, lsl #2]
   11c10:	cmp	r0, #0
   11c14:	beq	11c68 <putchar_unlocked@plt+0xcb0>
   11c18:	mov	r4, r1
   11c1c:	bl	10e5c <ferror_unlocked@plt>
   11c20:	movw	r1, #24888	; 0x6138
   11c24:	cmp	r0, #0
   11c28:	movt	r1, #2
   11c2c:	moveq	r4, r0
   11c30:	ldr	r0, [r7, r6, lsl #2]
   11c34:	str	r4, [sp, #4]
   11c38:	ldr	r4, [sp, #20]
   11c3c:	ldr	r1, [r1]
   11c40:	cmp	r0, r1
   11c44:	beq	11c74 <putchar_unlocked@plt+0xcbc>
   11c48:	bl	11fac <putchar_unlocked@plt+0xff4>
   11c4c:	ldr	r1, [sp, #4]
   11c50:	cmp	r1, #0
   11c54:	bne	11c84 <putchar_unlocked@plt+0xccc>
   11c58:	cmn	r0, #1
   11c5c:	ldr	r3, [sp, #24]
   11c60:	ldreq	r1, [r9]
   11c64:	b	11c88 <putchar_unlocked@plt+0xcd0>
   11c68:	ldr	r4, [sp, #20]
   11c6c:	ldr	r3, [sp, #24]
   11c70:	b	11cd8 <putchar_unlocked@plt+0xd20>
   11c74:	bl	10f70 <clearerr_unlocked@plt>
   11c78:	ldr	r3, [sp, #24]
   11c7c:	ldr	r1, [sp, #4]
   11c80:	b	11c88 <putchar_unlocked@plt+0xcd0>
   11c84:	ldr	r3, [sp, #24]
   11c88:	cmp	r1, #0
   11c8c:	beq	11ccc <putchar_unlocked@plt+0xd14>
   11c90:	ldr	r0, [sp, #8]
   11c94:	mov	r9, r1
   11c98:	mov	r1, #3
   11c9c:	ldr	r2, [r0, r6, lsl #2]
   11ca0:	mov	r0, #0
   11ca4:	str	r0, [sp]
   11ca8:	mov	r0, #0
   11cac:	bl	139c8 <putchar_unlocked@plt+0x2a10>
   11cb0:	movw	r2, #19459	; 0x4c03
   11cb4:	mov	r3, r0
   11cb8:	mov	r0, #0
   11cbc:	mov	r1, r9
   11cc0:	movt	r2, #1
   11cc4:	bl	10e74 <error@plt>
   11cc8:	ldr	r3, [sp, #24]
   11ccc:	mov	r0, #0
   11cd0:	sub	r3, r3, #1
   11cd4:	str	r0, [r7, r6, lsl #2]
   11cd8:	add	r6, r6, #1
   11cdc:	cmp	r6, r4
   11ce0:	beq	11d44 <putchar_unlocked@plt+0xd8c>
   11ce4:	ldrb	r0, [r8]
   11ce8:	cmp	r0, #0
   11cec:	beq	11d00 <putchar_unlocked@plt+0xd48>
   11cf0:	ldr	r1, [sp, #16]
   11cf4:	add	r9, r5, #1
   11cf8:	strb	r0, [r1, r5]
   11cfc:	b	11d04 <putchar_unlocked@plt+0xd4c>
   11d00:	mov	r9, r5
   11d04:	movw	r0, #24912	; 0x6150
   11d08:	add	r2, r8, #1
   11d0c:	movt	r0, #2
   11d10:	ldr	r1, [r0]
   11d14:	movw	r0, #24908	; 0x614c
   11d18:	movt	r0, #2
   11d1c:	ldr	r0, [r0]
   11d20:	cmp	r2, r1
   11d24:	movne	r0, r2
   11d28:	cmp	r3, #0
   11d2c:	beq	11da0 <putchar_unlocked@plt+0xde8>
   11d30:	cmp	r6, r4
   11d34:	mov	r5, r9
   11d38:	mov	r8, r0
   11d3c:	bcc	11a98 <putchar_unlocked@plt+0xae0>
   11d40:	b	11da0 <putchar_unlocked@plt+0xde8>
   11d44:	ldr	r0, [sp, #12]
   11d48:	tst	r0, #1
   11d4c:	beq	11da0 <putchar_unlocked@plt+0xde8>
   11d50:	mov	r6, r3
   11d54:	cmp	r5, #0
   11d58:	beq	11d80 <putchar_unlocked@plt+0xdc8>
   11d5c:	movw	r0, #24892	; 0x613c
   11d60:	mov	r1, #1
   11d64:	mov	r2, r5
   11d68:	movt	r0, #2
   11d6c:	ldr	r3, [r0]
   11d70:	ldr	r0, [sp, #16]
   11d74:	bl	10df0 <fwrite_unlocked@plt>
   11d78:	cmp	r0, r5
   11d7c:	bne	11dd4 <putchar_unlocked@plt+0xe1c>
   11d80:	ldrb	r0, [sl]
   11d84:	cmp	r0, #0
   11d88:	mov	r0, #10
   11d8c:	movwne	r0, #0
   11d90:	bl	10fb8 <putchar_unlocked@plt>
   11d94:	cmn	r0, #1
   11d98:	mov	r3, r6
   11d9c:	ble	11dd4 <putchar_unlocked@plt+0xe1c>
   11da0:	cmp	r3, #0
   11da4:	bne	11a74 <putchar_unlocked@plt+0xabc>
   11da8:	b	11db4 <putchar_unlocked@plt+0xdfc>
   11dac:	mov	r0, #1
   11db0:	str	r0, [sp]
   11db4:	mov	r0, r7
   11db8:	bl	120a4 <putchar_unlocked@plt+0x10ec>
   11dbc:	ldr	r0, [sp, #16]
   11dc0:	bl	120a4 <putchar_unlocked@plt+0x10ec>
   11dc4:	ldr	r0, [sp]
   11dc8:	and	r0, r0, #1
   11dcc:	sub	sp, fp, #28
   11dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dd4:	bl	11e30 <putchar_unlocked@plt+0xe78>
   11dd8:	bl	10eec <__errno_location@plt>
   11ddc:	ldr	r1, [sp, #8]
   11de0:	ldr	r2, [r1, r4, lsl #2]
   11de4:	ldr	r4, [r0]
   11de8:	mov	r0, #0
   11dec:	mov	r1, #3
   11df0:	bl	139c8 <putchar_unlocked@plt+0x2a10>
   11df4:	movw	r2, #19459	; 0x4c03
   11df8:	mov	r3, r0
   11dfc:	mov	r0, #1
   11e00:	mov	r1, r4
   11e04:	movt	r2, #1
   11e08:	bl	10e74 <error@plt>
   11e0c:	movw	r1, #19963	; 0x4dfb
   11e10:	mov	r0, #0
   11e14:	mov	r2, #5
   11e18:	movt	r1, #1
   11e1c:	bl	10e08 <dcgettext@plt>
   11e20:	mov	r2, r0
   11e24:	mov	r0, #1
   11e28:	mov	r1, #0
   11e2c:	bl	10e74 <error@plt>
   11e30:	push	{fp, lr}
   11e34:	mov	fp, sp
   11e38:	bl	10eec <__errno_location@plt>
   11e3c:	movw	r1, #19951	; 0x4def
   11e40:	ldr	r4, [r0]
   11e44:	mov	r0, #0
   11e48:	mov	r2, #5
   11e4c:	movt	r1, #1
   11e50:	bl	10e08 <dcgettext@plt>
   11e54:	mov	r2, r0
   11e58:	mov	r0, #1
   11e5c:	mov	r1, r4
   11e60:	bl	10e74 <error@plt>
   11e64:	movw	r1, #24916	; 0x6154
   11e68:	movt	r1, #2
   11e6c:	str	r0, [r1]
   11e70:	bx	lr
   11e74:	movw	r1, #24920	; 0x6158
   11e78:	movt	r1, #2
   11e7c:	strb	r0, [r1]
   11e80:	bx	lr
   11e84:	push	{r4, r5, r6, sl, fp, lr}
   11e88:	add	fp, sp, #16
   11e8c:	sub	sp, sp, #8
   11e90:	movw	r0, #24892	; 0x613c
   11e94:	movt	r0, #2
   11e98:	ldr	r0, [r0]
   11e9c:	bl	146ac <putchar_unlocked@plt+0x36f4>
   11ea0:	cmp	r0, #0
   11ea4:	beq	11ecc <putchar_unlocked@plt+0xf14>
   11ea8:	movw	r0, #24920	; 0x6158
   11eac:	movt	r0, #2
   11eb0:	ldrb	r0, [r0]
   11eb4:	cmp	r0, #0
   11eb8:	beq	11eec <putchar_unlocked@plt+0xf34>
   11ebc:	bl	10eec <__errno_location@plt>
   11ec0:	ldr	r0, [r0]
   11ec4:	cmp	r0, #32
   11ec8:	bne	11eec <putchar_unlocked@plt+0xf34>
   11ecc:	movw	r0, #24880	; 0x6130
   11ed0:	movt	r0, #2
   11ed4:	ldr	r0, [r0]
   11ed8:	bl	146ac <putchar_unlocked@plt+0x36f4>
   11edc:	cmp	r0, #0
   11ee0:	subeq	sp, fp, #16
   11ee4:	popeq	{r4, r5, r6, sl, fp, pc}
   11ee8:	b	11f5c <putchar_unlocked@plt+0xfa4>
   11eec:	movw	r1, #19951	; 0x4def
   11ef0:	mov	r0, #0
   11ef4:	mov	r2, #5
   11ef8:	movt	r1, #1
   11efc:	bl	10e08 <dcgettext@plt>
   11f00:	mov	r4, r0
   11f04:	movw	r0, #24916	; 0x6154
   11f08:	movt	r0, #2
   11f0c:	ldr	r6, [r0]
   11f10:	bl	10eec <__errno_location@plt>
   11f14:	ldr	r5, [r0]
   11f18:	cmp	r6, #0
   11f1c:	bne	11f38 <putchar_unlocked@plt+0xf80>
   11f20:	movw	r2, #19459	; 0x4c03
   11f24:	mov	r0, #0
   11f28:	mov	r1, r5
   11f2c:	mov	r3, r4
   11f30:	movt	r2, #1
   11f34:	b	11f58 <putchar_unlocked@plt+0xfa0>
   11f38:	mov	r0, r6
   11f3c:	bl	1391c <putchar_unlocked@plt+0x2964>
   11f40:	movw	r2, #20159	; 0x4ebf
   11f44:	mov	r3, r0
   11f48:	str	r4, [sp]
   11f4c:	mov	r0, #0
   11f50:	mov	r1, r5
   11f54:	movt	r2, #1
   11f58:	bl	10e74 <error@plt>
   11f5c:	movw	r0, #24796	; 0x60dc
   11f60:	movt	r0, #2
   11f64:	ldr	r0, [r0]
   11f68:	bl	10dcc <_exit@plt>
   11f6c:	b	10da8 <posix_fadvise64@plt>
   11f70:	cmp	r0, #0
   11f74:	bxeq	lr
   11f78:	push	{r4, sl, fp, lr}
   11f7c:	add	fp, sp, #8
   11f80:	sub	sp, sp, #16
   11f84:	mov	r4, r1
   11f88:	bl	10f1c <fileno@plt>
   11f8c:	mov	r1, #0
   11f90:	mov	r2, #0
   11f94:	mov	r3, #0
   11f98:	str	r1, [sp]
   11f9c:	stmib	sp, {r1, r4}
   11fa0:	bl	10da8 <posix_fadvise64@plt>
   11fa4:	sub	sp, fp, #8
   11fa8:	pop	{r4, sl, fp, pc}
   11fac:	push	{r4, r5, r6, sl, fp, lr}
   11fb0:	add	fp, sp, #16
   11fb4:	sub	sp, sp, #8
   11fb8:	mov	r4, r0
   11fbc:	bl	10f1c <fileno@plt>
   11fc0:	cmn	r0, #1
   11fc4:	ble	12038 <putchar_unlocked@plt+0x1080>
   11fc8:	mov	r0, r4
   11fcc:	bl	10e98 <__freading@plt>
   11fd0:	cmp	r0, #0
   11fd4:	beq	12000 <putchar_unlocked@plt+0x1048>
   11fd8:	mov	r0, r4
   11fdc:	bl	10f1c <fileno@plt>
   11fe0:	mov	r1, #1
   11fe4:	mov	r2, #0
   11fe8:	mov	r3, #0
   11fec:	str	r1, [sp]
   11ff0:	bl	10e38 <lseek64@plt>
   11ff4:	and	r0, r0, r1
   11ff8:	cmn	r0, #1
   11ffc:	beq	12038 <putchar_unlocked@plt+0x1080>
   12000:	mov	r0, r4
   12004:	bl	12048 <putchar_unlocked@plt+0x1090>
   12008:	cmp	r0, #0
   1200c:	beq	12038 <putchar_unlocked@plt+0x1080>
   12010:	bl	10eec <__errno_location@plt>
   12014:	ldr	r6, [r0]
   12018:	mov	r5, r0
   1201c:	mov	r0, r4
   12020:	bl	10f34 <fclose@plt>
   12024:	cmp	r6, #0
   12028:	strne	r6, [r5]
   1202c:	mvnne	r0, #0
   12030:	sub	sp, fp, #16
   12034:	pop	{r4, r5, r6, sl, fp, pc}
   12038:	mov	r0, r4
   1203c:	sub	sp, fp, #16
   12040:	pop	{r4, r5, r6, sl, fp, lr}
   12044:	b	10f34 <fclose@plt>
   12048:	push	{r4, sl, fp, lr}
   1204c:	add	fp, sp, #8
   12050:	sub	sp, sp, #8
   12054:	mov	r4, r0
   12058:	cmp	r0, #0
   1205c:	beq	12094 <putchar_unlocked@plt+0x10dc>
   12060:	mov	r0, r4
   12064:	bl	10e98 <__freading@plt>
   12068:	cmp	r0, #0
   1206c:	beq	12094 <putchar_unlocked@plt+0x10dc>
   12070:	ldrb	r0, [r4, #1]
   12074:	tst	r0, #1
   12078:	beq	12094 <putchar_unlocked@plt+0x10dc>
   1207c:	mov	r0, #1
   12080:	mov	r2, #0
   12084:	mov	r3, #0
   12088:	str	r0, [sp]
   1208c:	mov	r0, r4
   12090:	bl	120cc <putchar_unlocked@plt+0x1114>
   12094:	mov	r0, r4
   12098:	sub	sp, fp, #8
   1209c:	pop	{r4, sl, fp, lr}
   120a0:	b	10db4 <fflush@plt>
   120a4:	push	{r4, r5, r6, sl, fp, lr}
   120a8:	add	fp, sp, #16
   120ac:	mov	r4, r0
   120b0:	bl	10eec <__errno_location@plt>
   120b4:	ldr	r6, [r0]
   120b8:	mov	r5, r0
   120bc:	mov	r0, r4
   120c0:	bl	10dc0 <free@plt>
   120c4:	str	r6, [r5]
   120c8:	pop	{r4, r5, r6, sl, fp, pc}
   120cc:	push	{r4, r5, r6, r7, fp, lr}
   120d0:	add	fp, sp, #16
   120d4:	sub	sp, sp, #8
   120d8:	mov	r4, r0
   120dc:	ldr	r0, [r0, #4]
   120e0:	mov	r5, r3
   120e4:	mov	r6, r2
   120e8:	ldr	r1, [r4, #8]
   120ec:	cmp	r1, r0
   120f0:	bne	1210c <putchar_unlocked@plt+0x1154>
   120f4:	ldrd	r0, [r4, #16]
   120f8:	cmp	r1, r0
   120fc:	bne	1210c <putchar_unlocked@plt+0x1154>
   12100:	ldr	r0, [r4, #36]	; 0x24
   12104:	cmp	r0, #0
   12108:	beq	12124 <putchar_unlocked@plt+0x116c>
   1210c:	mov	r0, r4
   12110:	mov	r2, r6
   12114:	mov	r3, r5
   12118:	sub	sp, fp, #16
   1211c:	pop	{r4, r5, r6, r7, fp, lr}
   12120:	b	10f40 <fseeko64@plt>
   12124:	ldr	r7, [fp, #8]
   12128:	mov	r0, r4
   1212c:	bl	10f1c <fileno@plt>
   12130:	mov	r2, r6
   12134:	mov	r3, r5
   12138:	str	r7, [sp]
   1213c:	bl	10e38 <lseek64@plt>
   12140:	and	r2, r0, r1
   12144:	cmn	r2, #1
   12148:	beq	12164 <putchar_unlocked@plt+0x11ac>
   1214c:	strd	r0, [r4, #80]	; 0x50
   12150:	ldr	r0, [r4]
   12154:	bic	r0, r0, #16
   12158:	str	r0, [r4]
   1215c:	mov	r0, #0
   12160:	b	12168 <putchar_unlocked@plt+0x11b0>
   12164:	mvn	r0, #0
   12168:	sub	sp, fp, #16
   1216c:	pop	{r4, r5, r6, r7, fp, pc}
   12170:	push	{r4, r5, fp, lr}
   12174:	add	fp, sp, #8
   12178:	cmp	r0, #0
   1217c:	beq	12210 <putchar_unlocked@plt+0x1258>
   12180:	mov	r1, #47	; 0x2f
   12184:	mov	r4, r0
   12188:	bl	10f58 <strrchr@plt>
   1218c:	cmp	r0, #0
   12190:	mov	r5, r4
   12194:	addne	r5, r0, #1
   12198:	sub	r0, r5, r4
   1219c:	cmp	r0, #7
   121a0:	blt	121f4 <putchar_unlocked@plt+0x123c>
   121a4:	movw	r1, #20222	; 0x4efe
   121a8:	sub	r0, r5, #7
   121ac:	mov	r2, #7
   121b0:	movt	r1, #1
   121b4:	bl	10fa0 <strncmp@plt>
   121b8:	cmp	r0, #0
   121bc:	bne	121f4 <putchar_unlocked@plt+0x123c>
   121c0:	movw	r1, #20230	; 0x4f06
   121c4:	mov	r0, r5
   121c8:	mov	r2, #3
   121cc:	movt	r1, #1
   121d0:	bl	10fa0 <strncmp@plt>
   121d4:	cmp	r0, #0
   121d8:	beq	121e4 <putchar_unlocked@plt+0x122c>
   121dc:	mov	r4, r5
   121e0:	b	121f4 <putchar_unlocked@plt+0x123c>
   121e4:	movw	r0, #24864	; 0x6120
   121e8:	add	r4, r5, #3
   121ec:	movt	r0, #2
   121f0:	str	r4, [r0]
   121f4:	movw	r0, #24868	; 0x6124
   121f8:	movt	r0, #2
   121fc:	str	r4, [r0]
   12200:	movw	r0, #24924	; 0x615c
   12204:	movt	r0, #2
   12208:	str	r4, [r0]
   1220c:	pop	{r4, r5, fp, pc}
   12210:	movw	r0, #24880	; 0x6130
   12214:	movt	r0, #2
   12218:	ldr	r1, [r0]
   1221c:	movw	r0, #20166	; 0x4ec6
   12220:	movt	r0, #1
   12224:	bl	10f94 <fputs@plt>
   12228:	bl	10fac <abort@plt>
   1222c:	push	{r4, r5, r6, sl, fp, lr}
   12230:	add	fp, sp, #16
   12234:	mov	r4, r0
   12238:	movw	r0, #24928	; 0x6160
   1223c:	movt	r0, #2
   12240:	cmp	r4, #0
   12244:	moveq	r4, r0
   12248:	bl	10eec <__errno_location@plt>
   1224c:	ldr	r6, [r0]
   12250:	mov	r5, r0
   12254:	mov	r0, r4
   12258:	mov	r1, #48	; 0x30
   1225c:	bl	144b8 <putchar_unlocked@plt+0x3500>
   12260:	str	r6, [r5]
   12264:	pop	{r4, r5, r6, sl, fp, pc}
   12268:	movw	r1, #24928	; 0x6160
   1226c:	cmp	r0, #0
   12270:	movt	r1, #2
   12274:	movne	r1, r0
   12278:	ldr	r0, [r1]
   1227c:	bx	lr
   12280:	movw	r2, #24928	; 0x6160
   12284:	cmp	r0, #0
   12288:	movt	r2, #2
   1228c:	movne	r2, r0
   12290:	str	r1, [r2]
   12294:	bx	lr
   12298:	movw	r3, #24928	; 0x6160
   1229c:	cmp	r0, #0
   122a0:	and	r2, r2, #1
   122a4:	movt	r3, #2
   122a8:	movne	r3, r0
   122ac:	ubfx	r0, r1, #5, #3
   122b0:	and	r1, r1, #31
   122b4:	add	ip, r3, r0, lsl #2
   122b8:	mov	r0, #1
   122bc:	ldr	r3, [ip, #8]
   122c0:	and	r0, r0, r3, lsr r1
   122c4:	eor	r2, r0, r2
   122c8:	eor	r1, r3, r2, lsl r1
   122cc:	str	r1, [ip, #8]
   122d0:	bx	lr
   122d4:	movw	r2, #24928	; 0x6160
   122d8:	cmp	r0, #0
   122dc:	movt	r2, #2
   122e0:	movne	r2, r0
   122e4:	ldr	r0, [r2, #4]
   122e8:	str	r1, [r2, #4]
   122ec:	bx	lr
   122f0:	push	{fp, lr}
   122f4:	mov	fp, sp
   122f8:	movw	r3, #24928	; 0x6160
   122fc:	cmp	r0, #0
   12300:	movt	r3, #2
   12304:	movne	r3, r0
   12308:	cmp	r1, #0
   1230c:	mov	r0, #10
   12310:	cmpne	r2, #0
   12314:	str	r0, [r3]
   12318:	bne	12320 <putchar_unlocked@plt+0x1368>
   1231c:	bl	10fac <abort@plt>
   12320:	str	r1, [r3, #40]	; 0x28
   12324:	str	r2, [r3, #44]	; 0x2c
   12328:	pop	{fp, pc}
   1232c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12330:	add	fp, sp, #28
   12334:	sub	sp, sp, #20
   12338:	mov	r7, r0
   1233c:	ldr	r0, [fp, #8]
   12340:	movw	r5, #24928	; 0x6160
   12344:	mov	r8, r3
   12348:	mov	r9, r2
   1234c:	mov	sl, r1
   12350:	movt	r5, #2
   12354:	cmp	r0, #0
   12358:	movne	r5, r0
   1235c:	bl	10eec <__errno_location@plt>
   12360:	ldr	r2, [r5, #40]	; 0x28
   12364:	ldr	r3, [r5, #44]	; 0x2c
   12368:	mov	r4, r0
   1236c:	ldm	r5, {r0, r1}
   12370:	add	r5, r5, #8
   12374:	ldr	r6, [r4]
   12378:	stm	sp, {r0, r1, r5}
   1237c:	mov	r0, r7
   12380:	mov	r1, sl
   12384:	str	r2, [sp, #12]
   12388:	str	r3, [sp, #16]
   1238c:	mov	r2, r9
   12390:	mov	r3, r8
   12394:	bl	123a4 <putchar_unlocked@plt+0x13ec>
   12398:	str	r6, [r4]
   1239c:	sub	sp, fp, #28
   123a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123a8:	add	fp, sp, #28
   123ac:	sub	sp, sp, #156	; 0x9c
   123b0:	mov	r5, r0
   123b4:	add	r0, r2, #1
   123b8:	mov	r6, r1
   123bc:	mov	sl, r3
   123c0:	str	r2, [fp, #-80]	; 0xffffffb0
   123c4:	str	r0, [sp, #72]	; 0x48
   123c8:	ldr	r0, [fp, #12]
   123cc:	and	r1, r0, #1
   123d0:	str	r1, [sp, #32]
   123d4:	and	r1, r0, #4
   123d8:	str	r1, [sp, #28]
   123dc:	ubfx	r9, r0, #1, #1
   123e0:	bl	10e44 <__ctype_get_mb_cur_max@plt>
   123e4:	str	r0, [sp, #40]	; 0x28
   123e8:	ldr	r0, [fp, #24]
   123ec:	ldr	r7, [fp, #8]
   123f0:	mov	r1, #0
   123f4:	mov	lr, #0
   123f8:	str	r5, [fp, #-84]	; 0xffffffac
   123fc:	str	r1, [sp, #60]	; 0x3c
   12400:	mov	r1, #1
   12404:	str	r1, [fp, #-48]	; 0xffffffd0
   12408:	str	r0, [sp, #80]	; 0x50
   1240c:	ldr	r0, [fp, #20]
   12410:	str	r0, [sp, #76]	; 0x4c
   12414:	mov	r0, #0
   12418:	str	r0, [sp, #56]	; 0x38
   1241c:	mov	r0, #0
   12420:	str	r0, [fp, #-88]	; 0xffffffa8
   12424:	mov	r0, #0
   12428:	str	r0, [fp, #-72]	; 0xffffffb8
   1242c:	mov	r0, #0
   12430:	cmp	r7, #10
   12434:	bhi	13410 <putchar_unlocked@plt+0x2458>
   12438:	add	r1, pc, #24
   1243c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12440:	mov	ip, r6
   12444:	mov	r8, #0
   12448:	mov	r2, #1
   1244c:	mov	r6, #0
   12450:	mov	r3, sl
   12454:	ldr	pc, [r1, r7, lsl #2]
   12458:	andeq	r2, r1, r4, asr #10
   1245c:	muleq	r1, r8, r5
   12460:	andeq	r2, r1, r8, asr r5
   12464:	andeq	r2, r1, ip, lsr r5
   12468:	andeq	r2, r1, ip, lsl #11
   1246c:	andeq	r2, r1, r0, asr #11
   12470:	andeq	r2, r1, r8, ror #10
   12474:	andeq	r2, r1, r4, asr #12
   12478:	andeq	r2, r1, r4, lsl #9
   1247c:	andeq	r2, r1, r4, lsl #9
   12480:	andeq	r2, r1, r4, asr #9
   12484:	movw	r0, #20314	; 0x4f5a
   12488:	mov	r1, r7
   1248c:	mov	r6, r5
   12490:	mov	r4, ip
   12494:	mov	r5, lr
   12498:	movt	r0, #1
   1249c:	bl	13b74 <putchar_unlocked@plt+0x2bbc>
   124a0:	str	r0, [sp, #76]	; 0x4c
   124a4:	movw	r0, #20316	; 0x4f5c
   124a8:	mov	r1, r7
   124ac:	movt	r0, #1
   124b0:	bl	13b74 <putchar_unlocked@plt+0x2bbc>
   124b4:	mov	lr, r5
   124b8:	mov	r5, r6
   124bc:	mov	ip, r4
   124c0:	str	r0, [sp, #80]	; 0x50
   124c4:	mov	r8, #0
   124c8:	tst	r9, #1
   124cc:	str	lr, [sp, #44]	; 0x2c
   124d0:	bne	12508 <putchar_unlocked@plt+0x1550>
   124d4:	ldr	r0, [sp, #76]	; 0x4c
   124d8:	ldrb	r0, [r0]
   124dc:	cmp	r0, #0
   124e0:	beq	12508 <putchar_unlocked@plt+0x1550>
   124e4:	ldr	r1, [sp, #76]	; 0x4c
   124e8:	mov	r8, #0
   124ec:	add	r1, r1, #1
   124f0:	cmp	r8, ip
   124f4:	strbcc	r0, [r5, r8]
   124f8:	ldrb	r0, [r1, r8]
   124fc:	add	r8, r8, #1
   12500:	cmp	r0, #0
   12504:	bne	124f0 <putchar_unlocked@plt+0x1538>
   12508:	ldr	r6, [sp, #80]	; 0x50
   1250c:	mov	r4, ip
   12510:	mov	r0, r6
   12514:	bl	10ee0 <strlen@plt>
   12518:	mov	ip, r4
   1251c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12520:	ldr	lr, [sp, #44]	; 0x2c
   12524:	str	r6, [fp, #-88]	; 0xffffffa8
   12528:	str	r0, [fp, #-72]	; 0xffffffb8
   1252c:	mov	r2, #1
   12530:	mov	r6, r9
   12534:	mov	r3, sl
   12538:	b	12644 <putchar_unlocked@plt+0x168c>
   1253c:	mov	r0, #1
   12540:	b	12598 <putchar_unlocked@plt+0x15e0>
   12544:	mov	r7, #0
   12548:	mov	r8, #0
   1254c:	mov	r2, r0
   12550:	mov	r6, #0
   12554:	b	12644 <putchar_unlocked@plt+0x168c>
   12558:	tst	r9, #1
   1255c:	bne	12598 <putchar_unlocked@plt+0x15e0>
   12560:	mov	r2, r0
   12564:	b	125f0 <putchar_unlocked@plt+0x1638>
   12568:	mov	r0, #1
   1256c:	mov	r8, #0
   12570:	mov	r7, #5
   12574:	mov	r2, #1
   12578:	str	r0, [fp, #-72]	; 0xffffffb8
   1257c:	movw	r0, #20312	; 0x4f58
   12580:	movt	r0, #1
   12584:	str	r0, [fp, #-88]	; 0xffffffa8
   12588:	b	125b8 <putchar_unlocked@plt+0x1600>
   1258c:	mov	r2, #1
   12590:	tst	r9, #1
   12594:	beq	125f0 <putchar_unlocked@plt+0x1638>
   12598:	mov	r1, #1
   1259c:	mov	r8, #0
   125a0:	mov	r7, #2
   125a4:	mov	r2, r0
   125a8:	str	r1, [fp, #-72]	; 0xffffffb8
   125ac:	movw	r1, #20316	; 0x4f5c
   125b0:	movt	r1, #1
   125b4:	str	r1, [fp, #-88]	; 0xffffffa8
   125b8:	mov	r6, #1
   125bc:	b	12644 <putchar_unlocked@plt+0x168c>
   125c0:	tst	r9, #1
   125c4:	beq	12614 <putchar_unlocked@plt+0x165c>
   125c8:	mov	r0, #1
   125cc:	mov	r8, #0
   125d0:	mov	r2, #1
   125d4:	mov	r6, #1
   125d8:	mov	r7, #5
   125dc:	str	r0, [fp, #-72]	; 0xffffffb8
   125e0:	movw	r0, #20312	; 0x4f58
   125e4:	movt	r0, #1
   125e8:	str	r0, [fp, #-88]	; 0xffffffa8
   125ec:	b	12644 <putchar_unlocked@plt+0x168c>
   125f0:	cmp	ip, #0
   125f4:	mov	r8, #1
   125f8:	mov	r6, #0
   125fc:	mov	r7, #2
   12600:	movne	r0, #39	; 0x27
   12604:	strbne	r0, [r5]
   12608:	movw	r0, #20316	; 0x4f5c
   1260c:	movt	r0, #1
   12610:	b	12638 <putchar_unlocked@plt+0x1680>
   12614:	cmp	ip, #0
   12618:	mov	r8, #1
   1261c:	mov	r2, #1
   12620:	mov	r7, #5
   12624:	mov	r6, #0
   12628:	movne	r0, #34	; 0x22
   1262c:	strbne	r0, [r5]
   12630:	movw	r0, #20312	; 0x4f58
   12634:	movt	r0, #1
   12638:	str	r0, [fp, #-88]	; 0xffffffa8
   1263c:	mov	r0, #1
   12640:	str	r0, [fp, #-72]	; 0xffffffb8
   12644:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12648:	str	r7, [fp, #-68]	; 0xffffffbc
   1264c:	str	r6, [fp, #-76]	; 0xffffffb4
   12650:	str	r2, [sp, #84]	; 0x54
   12654:	cmp	r0, #0
   12658:	movwne	r0, #1
   1265c:	and	r1, r0, r6
   12660:	and	r1, r2, r1
   12664:	str	r1, [sp, #48]	; 0x30
   12668:	sub	r1, r7, #2
   1266c:	clz	r1, r1
   12670:	lsr	r1, r1, #5
   12674:	and	r1, r1, r6
   12678:	str	r1, [sp, #64]	; 0x40
   1267c:	subs	r1, r7, #2
   12680:	eor	r7, r6, #1
   12684:	movwne	r1, #1
   12688:	str	r7, [sp, #92]	; 0x5c
   1268c:	orr	r7, r1, r7
   12690:	and	r1, r1, r2
   12694:	and	r0, r0, r1
   12698:	str	r7, [sp, #68]	; 0x44
   1269c:	mov	r7, #0
   126a0:	str	r0, [fp, #-60]	; 0xffffffc4
   126a4:	orr	r0, r1, r6
   126a8:	ldr	r1, [fp, #16]
   126ac:	eor	r0, r0, #1
   126b0:	clz	r1, r1
   126b4:	lsr	r1, r1, #5
   126b8:	orr	r0, r1, r0
   126bc:	str	r0, [fp, #-64]	; 0xffffffc0
   126c0:	eor	r0, r2, #1
   126c4:	str	r0, [sp, #52]	; 0x34
   126c8:	cmn	r3, #1
   126cc:	beq	126dc <putchar_unlocked@plt+0x1724>
   126d0:	cmp	r7, r3
   126d4:	bne	126e8 <putchar_unlocked@plt+0x1730>
   126d8:	b	13244 <putchar_unlocked@plt+0x228c>
   126dc:	ldrb	r0, [r4, r7]
   126e0:	cmp	r0, #0
   126e4:	beq	1324c <putchar_unlocked@plt+0x2294>
   126e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   126ec:	cmp	r0, #0
   126f0:	beq	12738 <putchar_unlocked@plt+0x1780>
   126f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   126f8:	add	r5, r7, r0
   126fc:	cmp	r0, #2
   12700:	bcc	1274c <putchar_unlocked@plt+0x1794>
   12704:	mov	r0, #0
   12708:	cmn	r3, #1
   1270c:	str	r0, [fp, #-56]	; 0xffffffc8
   12710:	bne	12754 <putchar_unlocked@plt+0x179c>
   12714:	mov	r0, r4
   12718:	mov	r4, ip
   1271c:	mov	r6, lr
   12720:	bl	10ee0 <strlen@plt>
   12724:	mov	ip, r4
   12728:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1272c:	mov	lr, r6
   12730:	mov	r3, r0
   12734:	b	12754 <putchar_unlocked@plt+0x179c>
   12738:	mov	r0, #0
   1273c:	mov	sl, r3
   12740:	str	r0, [fp, #-56]	; 0xffffffc8
   12744:	mov	r0, #0
   12748:	b	127c0 <putchar_unlocked@plt+0x1808>
   1274c:	mov	r0, #0
   12750:	str	r0, [fp, #-56]	; 0xffffffc8
   12754:	cmp	r5, r3
   12758:	bls	1276c <putchar_unlocked@plt+0x17b4>
   1275c:	ldr	r5, [fp, #-84]	; 0xffffffac
   12760:	mov	r0, #0
   12764:	mov	sl, r3
   12768:	b	127c0 <putchar_unlocked@plt+0x1808>
   1276c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12770:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12774:	add	r0, r4, r7
   12778:	mov	r5, lr
   1277c:	mov	r6, ip
   12780:	mov	sl, r3
   12784:	bl	10ed4 <bcmp@plt>
   12788:	ldr	r2, [sp, #92]	; 0x5c
   1278c:	cmp	r0, #0
   12790:	ldr	r3, [fp, #-84]	; 0xffffffac
   12794:	mov	r1, r0
   12798:	movwne	r1, #1
   1279c:	orr	r1, r1, r2
   127a0:	tst	r1, #1
   127a4:	beq	132d0 <putchar_unlocked@plt+0x2318>
   127a8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   127ac:	clz	r0, r0
   127b0:	mov	lr, r5
   127b4:	mov	ip, r6
   127b8:	mov	r5, r3
   127bc:	lsr	r0, r0, #5
   127c0:	str	r0, [fp, #-52]	; 0xffffffcc
   127c4:	ldrb	r6, [r4, r7]
   127c8:	cmp	r6, #126	; 0x7e
   127cc:	bhi	12cf4 <putchar_unlocked@plt+0x1d3c>
   127d0:	add	r3, pc, #16
   127d4:	mov	r9, #1
   127d8:	mov	r2, #110	; 0x6e
   127dc:	mov	r0, #97	; 0x61
   127e0:	mov	r1, #0
   127e4:	ldr	pc, [r3, r6, lsl #2]
   127e8:	andeq	r2, r1, r8, asr fp
   127ec:	strdeq	r2, [r1], -r4
   127f0:	strdeq	r2, [r1], -r4
   127f4:	strdeq	r2, [r1], -r4
   127f8:	strdeq	r2, [r1], -r4
   127fc:	strdeq	r2, [r1], -r4
   12800:	strdeq	r2, [r1], -r4
   12804:	andeq	r2, r1, r4, ror sp
   12808:	andeq	r2, r1, r8, lsr fp
   1280c:	andeq	r2, r1, r0, lsr fp
   12810:	andeq	r2, r1, r4, asr #22
   12814:	andeq	r2, r1, ip, asr ip
   12818:	andeq	r2, r1, r8, lsr #22
   1281c:	andeq	r2, r1, r0, asr #22
   12820:	strdeq	r2, [r1], -r4
   12824:	strdeq	r2, [r1], -r4
   12828:	strdeq	r2, [r1], -r4
   1282c:	strdeq	r2, [r1], -r4
   12830:	strdeq	r2, [r1], -r4
   12834:	strdeq	r2, [r1], -r4
   12838:	strdeq	r2, [r1], -r4
   1283c:	strdeq	r2, [r1], -r4
   12840:	strdeq	r2, [r1], -r4
   12844:	strdeq	r2, [r1], -r4
   12848:	strdeq	r2, [r1], -r4
   1284c:	strdeq	r2, [r1], -r4
   12850:	strdeq	r2, [r1], -r4
   12854:	strdeq	r2, [r1], -r4
   12858:	strdeq	r2, [r1], -r4
   1285c:	strdeq	r2, [r1], -r4
   12860:	strdeq	r2, [r1], -r4
   12864:	strdeq	r2, [r1], -r4
   12868:	ldrdeq	r2, [r1], -r8
   1286c:	ldrdeq	r2, [r1], -ip
   12870:	ldrdeq	r2, [r1], -ip
   12874:	andeq	r2, r1, r0, asr #21
   12878:	ldrdeq	r2, [r1], -ip
   1287c:	andeq	r2, r1, r4, ror #19
   12880:	ldrdeq	r2, [r1], -ip
   12884:	andeq	r2, r1, r4, ror #24
   12888:	ldrdeq	r2, [r1], -ip
   1288c:	ldrdeq	r2, [r1], -ip
   12890:	ldrdeq	r2, [r1], -ip
   12894:	andeq	r2, r1, r4, ror #19
   12898:	andeq	r2, r1, r4, ror #19
   1289c:	andeq	r2, r1, r4, ror #19
   128a0:	andeq	r2, r1, r4, ror #19
   128a4:	andeq	r2, r1, r4, ror #19
   128a8:	andeq	r2, r1, r4, ror #19
   128ac:	andeq	r2, r1, r4, ror #19
   128b0:	andeq	r2, r1, r4, ror #19
   128b4:	andeq	r2, r1, r4, ror #19
   128b8:	andeq	r2, r1, r4, ror #19
   128bc:	andeq	r2, r1, r4, ror #19
   128c0:	andeq	r2, r1, r4, ror #19
   128c4:	andeq	r2, r1, r4, ror #19
   128c8:	andeq	r2, r1, r4, ror #19
   128cc:	andeq	r2, r1, r4, ror #19
   128d0:	andeq	r2, r1, r4, ror #19
   128d4:	ldrdeq	r2, [r1], -ip
   128d8:	ldrdeq	r2, [r1], -ip
   128dc:	ldrdeq	r2, [r1], -ip
   128e0:	ldrdeq	r2, [r1], -ip
   128e4:	andeq	r2, r1, r0, lsr ip
   128e8:	strdeq	r2, [r1], -r4
   128ec:	andeq	r2, r1, r4, ror #19
   128f0:	andeq	r2, r1, r4, ror #19
   128f4:	andeq	r2, r1, r4, ror #19
   128f8:	andeq	r2, r1, r4, ror #19
   128fc:	andeq	r2, r1, r4, ror #19
   12900:	andeq	r2, r1, r4, ror #19
   12904:	andeq	r2, r1, r4, ror #19
   12908:	andeq	r2, r1, r4, ror #19
   1290c:	andeq	r2, r1, r4, ror #19
   12910:	andeq	r2, r1, r4, ror #19
   12914:	andeq	r2, r1, r4, ror #19
   12918:	andeq	r2, r1, r4, ror #19
   1291c:	andeq	r2, r1, r4, ror #19
   12920:	andeq	r2, r1, r4, ror #19
   12924:	andeq	r2, r1, r4, ror #19
   12928:	andeq	r2, r1, r4, ror #19
   1292c:	andeq	r2, r1, r4, ror #19
   12930:	andeq	r2, r1, r4, ror #19
   12934:	andeq	r2, r1, r4, ror #19
   12938:	andeq	r2, r1, r4, ror #19
   1293c:	andeq	r2, r1, r4, ror #19
   12940:	andeq	r2, r1, r4, ror #19
   12944:	andeq	r2, r1, r4, ror #19
   12948:	andeq	r2, r1, r4, ror #19
   1294c:	andeq	r2, r1, r4, ror #19
   12950:	andeq	r2, r1, r4, ror #19
   12954:	ldrdeq	r2, [r1], -ip
   12958:	andeq	r2, r1, r4, lsl #22
   1295c:	andeq	r2, r1, r4, ror #19
   12960:	ldrdeq	r2, [r1], -ip
   12964:	andeq	r2, r1, r4, ror #19
   12968:	ldrdeq	r2, [r1], -ip
   1296c:	andeq	r2, r1, r4, ror #19
   12970:	andeq	r2, r1, r4, ror #19
   12974:	andeq	r2, r1, r4, ror #19
   12978:	andeq	r2, r1, r4, ror #19
   1297c:	andeq	r2, r1, r4, ror #19
   12980:	andeq	r2, r1, r4, ror #19
   12984:	andeq	r2, r1, r4, ror #19
   12988:	andeq	r2, r1, r4, ror #19
   1298c:	andeq	r2, r1, r4, ror #19
   12990:	andeq	r2, r1, r4, ror #19
   12994:	andeq	r2, r1, r4, ror #19
   12998:	andeq	r2, r1, r4, ror #19
   1299c:	andeq	r2, r1, r4, ror #19
   129a0:	andeq	r2, r1, r4, ror #19
   129a4:	andeq	r2, r1, r4, ror #19
   129a8:	andeq	r2, r1, r4, ror #19
   129ac:	andeq	r2, r1, r4, ror #19
   129b0:	andeq	r2, r1, r4, ror #19
   129b4:	andeq	r2, r1, r4, ror #19
   129b8:	andeq	r2, r1, r4, ror #19
   129bc:	andeq	r2, r1, r4, ror #19
   129c0:	andeq	r2, r1, r4, ror #19
   129c4:	andeq	r2, r1, r4, ror #19
   129c8:	andeq	r2, r1, r4, ror #19
   129cc:	andeq	r2, r1, r4, ror #19
   129d0:	andeq	r2, r1, r4, ror #19
   129d4:	muleq	r1, r8, sl
   129d8:	ldrdeq	r2, [r1], -ip
   129dc:	muleq	r1, r8, sl
   129e0:	andeq	r2, r1, r0, asr #21
   129e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   129e8:	tst	r0, #1
   129ec:	bne	12a18 <putchar_unlocked@plt+0x1a60>
   129f0:	ldr	r1, [fp, #16]
   129f4:	ubfx	r0, r6, #5, #3
   129f8:	mov	r2, #1
   129fc:	ldr	r0, [r1, r0, lsl #2]
   12a00:	and	r1, r6, #31
   12a04:	tst	r0, r2, lsl r1
   12a08:	beq	12a18 <putchar_unlocked@plt+0x1a60>
   12a0c:	mov	r0, r6
   12a10:	mov	r1, r9
   12a14:	b	12a2c <putchar_unlocked@plt+0x1a74>
   12a18:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12a1c:	mov	r1, r9
   12a20:	cmp	r0, #0
   12a24:	mov	r0, r6
   12a28:	beq	13178 <putchar_unlocked@plt+0x21c0>
   12a2c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12a30:	tst	r2, #1
   12a34:	bne	13314 <putchar_unlocked@plt+0x235c>
   12a38:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12a3c:	subs	r2, r2, #2
   12a40:	movwne	r2, #1
   12a44:	orr	r2, r2, lr
   12a48:	tst	r2, #1
   12a4c:	bne	12a84 <putchar_unlocked@plt+0x1acc>
   12a50:	cmp	r8, ip
   12a54:	mov	lr, #1
   12a58:	movcc	r2, #39	; 0x27
   12a5c:	strbcc	r2, [r5, r8]
   12a60:	add	r2, r8, #1
   12a64:	cmp	r2, ip
   12a68:	movcc	r3, #36	; 0x24
   12a6c:	strbcc	r3, [r5, r2]
   12a70:	add	r2, r8, #2
   12a74:	add	r8, r8, #3
   12a78:	cmp	r2, ip
   12a7c:	movcc	r3, #39	; 0x27
   12a80:	strbcc	r3, [r5, r2]
   12a84:	cmp	r8, ip
   12a88:	movcc	r2, #92	; 0x5c
   12a8c:	strbcc	r2, [r5, r8]
   12a90:	add	r8, r8, #1
   12a94:	b	131b8 <putchar_unlocked@plt+0x2200>
   12a98:	cmp	sl, #1
   12a9c:	beq	12ac0 <putchar_unlocked@plt+0x1b08>
   12aa0:	mov	r9, #0
   12aa4:	cmn	sl, #1
   12aa8:	bne	12acc <putchar_unlocked@plt+0x1b14>
   12aac:	ldrb	r0, [r4, #1]
   12ab0:	cmp	r0, #0
   12ab4:	beq	12ac0 <putchar_unlocked@plt+0x1b08>
   12ab8:	mvn	sl, #0
   12abc:	b	12acc <putchar_unlocked@plt+0x1b14>
   12ac0:	mov	r9, #0
   12ac4:	cmp	r7, #0
   12ac8:	beq	12ad8 <putchar_unlocked@plt+0x1b20>
   12acc:	mov	r0, #0
   12ad0:	str	r0, [fp, #-56]	; 0xffffffc8
   12ad4:	b	129e4 <putchar_unlocked@plt+0x1a2c>
   12ad8:	mov	r1, #1
   12adc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12ae0:	cmp	r0, #2
   12ae4:	bne	12afc <putchar_unlocked@plt+0x1b44>
   12ae8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12aec:	mov	r9, r1
   12af0:	tst	r0, #1
   12af4:	beq	129e4 <putchar_unlocked@plt+0x1a2c>
   12af8:	b	13314 <putchar_unlocked@plt+0x235c>
   12afc:	mov	r9, r1
   12b00:	b	129e4 <putchar_unlocked@plt+0x1a2c>
   12b04:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b08:	cmp	r0, #2
   12b0c:	bne	12d50 <putchar_unlocked@plt+0x1d98>
   12b10:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b14:	tst	r0, #1
   12b18:	bne	13314 <putchar_unlocked@plt+0x235c>
   12b1c:	mov	r0, #0
   12b20:	str	r0, [fp, #-56]	; 0xffffffc8
   12b24:	b	12d68 <putchar_unlocked@plt+0x1db0>
   12b28:	mov	r0, #102	; 0x66
   12b2c:	b	12d74 <putchar_unlocked@plt+0x1dbc>
   12b30:	mov	r2, #116	; 0x74
   12b34:	b	12b44 <putchar_unlocked@plt+0x1b8c>
   12b38:	mov	r0, #98	; 0x62
   12b3c:	b	12d74 <putchar_unlocked@plt+0x1dbc>
   12b40:	mov	r2, #114	; 0x72
   12b44:	ldr	r0, [sp, #68]	; 0x44
   12b48:	tst	r0, #1
   12b4c:	mov	r0, r2
   12b50:	bne	12d74 <putchar_unlocked@plt+0x1dbc>
   12b54:	b	13314 <putchar_unlocked@plt+0x235c>
   12b58:	ldr	r0, [sp, #84]	; 0x54
   12b5c:	tst	r0, #1
   12b60:	beq	12d94 <putchar_unlocked@plt+0x1ddc>
   12b64:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12b68:	tst	r0, #1
   12b6c:	bne	13400 <putchar_unlocked@plt+0x2448>
   12b70:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b74:	mov	r2, sl
   12b78:	subs	r0, r0, #2
   12b7c:	movwne	r0, #1
   12b80:	orr	r0, r0, lr
   12b84:	tst	r0, #1
   12b88:	bne	12bc0 <putchar_unlocked@plt+0x1c08>
   12b8c:	cmp	r8, ip
   12b90:	mov	lr, #1
   12b94:	movcc	r0, #39	; 0x27
   12b98:	strbcc	r0, [r5, r8]
   12b9c:	add	r0, r8, #1
   12ba0:	cmp	r0, ip
   12ba4:	movcc	r1, #36	; 0x24
   12ba8:	strbcc	r1, [r5, r0]
   12bac:	add	r0, r8, #2
   12bb0:	add	r8, r8, #3
   12bb4:	cmp	r0, ip
   12bb8:	movcc	r1, #39	; 0x27
   12bbc:	strbcc	r1, [r5, r0]
   12bc0:	mov	r1, #1
   12bc4:	cmp	r8, ip
   12bc8:	mov	r9, #0
   12bcc:	mov	r6, #48	; 0x30
   12bd0:	str	r1, [fp, #-56]	; 0xffffffc8
   12bd4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   12bd8:	movcc	r0, #92	; 0x5c
   12bdc:	strbcc	r0, [r5, r8]
   12be0:	add	r0, r8, #1
   12be4:	cmp	r1, #2
   12be8:	beq	12ef0 <putchar_unlocked@plt+0x1f38>
   12bec:	add	r1, r7, #1
   12bf0:	cmp	r1, r2
   12bf4:	bcs	12ef0 <putchar_unlocked@plt+0x1f38>
   12bf8:	ldrb	r1, [r4, r1]
   12bfc:	sub	r1, r1, #48	; 0x30
   12c00:	uxtb	r1, r1
   12c04:	cmp	r1, #9
   12c08:	bhi	12ef0 <putchar_unlocked@plt+0x1f38>
   12c0c:	cmp	r0, ip
   12c10:	movcc	r1, #48	; 0x30
   12c14:	strbcc	r1, [r5, r0]
   12c18:	add	r0, r8, #2
   12c1c:	add	r8, r8, #3
   12c20:	cmp	r0, ip
   12c24:	movcc	r1, #48	; 0x30
   12c28:	strbcc	r1, [r5, r0]
   12c2c:	b	129e4 <putchar_unlocked@plt+0x1a2c>
   12c30:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12c34:	mov	r6, #63	; 0x3f
   12c38:	cmp	r0, #5
   12c3c:	beq	12ef8 <putchar_unlocked@plt+0x1f40>
   12c40:	mov	r1, #0
   12c44:	cmp	r0, #2
   12c48:	str	r1, [fp, #-56]	; 0xffffffc8
   12c4c:	bne	12fac <putchar_unlocked@plt+0x1ff4>
   12c50:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12c54:	mov	r9, #0
   12c58:	b	12af0 <putchar_unlocked@plt+0x1b38>
   12c5c:	mov	r0, #118	; 0x76
   12c60:	b	12d74 <putchar_unlocked@plt+0x1dbc>
   12c64:	mov	r0, #1
   12c68:	mov	r6, #39	; 0x27
   12c6c:	str	r0, [sp, #60]	; 0x3c
   12c70:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12c74:	cmp	r0, #2
   12c78:	bne	12cec <putchar_unlocked@plt+0x1d34>
   12c7c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12c80:	tst	r0, #1
   12c84:	bne	13314 <putchar_unlocked@plt+0x235c>
   12c88:	ldr	r2, [sp, #56]	; 0x38
   12c8c:	clz	r1, ip
   12c90:	mov	lr, #0
   12c94:	lsr	r1, r1, #5
   12c98:	cmp	r2, #0
   12c9c:	mov	r0, r2
   12ca0:	movwne	r0, #1
   12ca4:	orrs	r0, r0, r1
   12ca8:	moveq	r2, ip
   12cac:	moveq	ip, r0
   12cb0:	cmp	r8, ip
   12cb4:	str	r2, [sp, #56]	; 0x38
   12cb8:	movcc	r0, #39	; 0x27
   12cbc:	strbcc	r0, [r5, r8]
   12cc0:	add	r0, r8, #1
   12cc4:	cmp	r0, ip
   12cc8:	movcc	r1, #92	; 0x5c
   12ccc:	strbcc	r1, [r5, r0]
   12cd0:	add	r0, r8, #2
   12cd4:	add	r8, r8, #3
   12cd8:	cmp	r0, ip
   12cdc:	movcc	r1, #39	; 0x27
   12ce0:	strbcc	r1, [r5, r0]
   12ce4:	mov	r0, #0
   12ce8:	str	r0, [fp, #-56]	; 0xffffffc8
   12cec:	mov	r9, #1
   12cf0:	b	129e4 <putchar_unlocked@plt+0x1a2c>
   12cf4:	ldr	r0, [sp, #40]	; 0x28
   12cf8:	str	lr, [sp, #44]	; 0x2c
   12cfc:	str	ip, [sp, #88]	; 0x58
   12d00:	cmp	r0, #1
   12d04:	bne	12db4 <putchar_unlocked@plt+0x1dfc>
   12d08:	str	sl, [sp, #36]	; 0x24
   12d0c:	bl	10ebc <__ctype_b_loc@plt>
   12d10:	ldr	r0, [r0]
   12d14:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12d18:	mov	r1, #1
   12d1c:	add	r0, r0, r6, lsl #1
   12d20:	ldrb	r0, [r0, #1]
   12d24:	ubfx	r9, r0, #6, #1
   12d28:	ldr	r0, [sp, #52]	; 0x34
   12d2c:	ldr	lr, [sp, #44]	; 0x2c
   12d30:	cmp	r1, #1
   12d34:	orr	r3, r9, r0
   12d38:	bhi	12fb4 <putchar_unlocked@plt+0x1ffc>
   12d3c:	tst	r3, #1
   12d40:	beq	12fb4 <putchar_unlocked@plt+0x1ffc>
   12d44:	ldr	sl, [sp, #36]	; 0x24
   12d48:	ldr	ip, [sp, #88]	; 0x58
   12d4c:	b	129e4 <putchar_unlocked@plt+0x1a2c>
   12d50:	ldr	r1, [sp, #48]	; 0x30
   12d54:	mov	r0, #0
   12d58:	str	r0, [fp, #-56]	; 0xffffffc8
   12d5c:	mov	r0, #92	; 0x5c
   12d60:	cmp	r1, #0
   12d64:	beq	12d74 <putchar_unlocked@plt+0x1dbc>
   12d68:	mov	r6, #92	; 0x5c
   12d6c:	mov	r9, #0
   12d70:	b	13178 <putchar_unlocked@plt+0x21c0>
   12d74:	mov	r1, #0
   12d78:	mov	r9, #0
   12d7c:	str	r1, [fp, #-56]	; 0xffffffc8
   12d80:	ldr	r1, [sp, #84]	; 0x54
   12d84:	tst	r1, #1
   12d88:	mov	r1, #0
   12d8c:	beq	129e4 <putchar_unlocked@plt+0x1a2c>
   12d90:	b	12a2c <putchar_unlocked@plt+0x1a74>
   12d94:	ldr	r0, [sp, #32]
   12d98:	mov	r6, #0
   12d9c:	mov	r9, #0
   12da0:	cmp	r0, #0
   12da4:	mov	r0, #0
   12da8:	str	r0, [fp, #-56]	; 0xffffffc8
   12dac:	beq	129e4 <putchar_unlocked@plt+0x1a2c>
   12db0:	b	131d0 <putchar_unlocked@plt+0x2218>
   12db4:	mov	r0, #0
   12db8:	cmn	sl, #1
   12dbc:	sub	r3, fp, #40	; 0x28
   12dc0:	str	r0, [fp, #-36]	; 0xffffffdc
   12dc4:	str	r0, [fp, #-40]	; 0xffffffd8
   12dc8:	bne	12de0 <putchar_unlocked@plt+0x1e28>
   12dcc:	mov	r0, r4
   12dd0:	bl	10ee0 <strlen@plt>
   12dd4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12dd8:	sub	r3, fp, #40	; 0x28
   12ddc:	mov	sl, r0
   12de0:	ldr	r0, [sp, #72]	; 0x48
   12de4:	mov	r9, #1
   12de8:	mov	r1, #0
   12dec:	str	sl, [sp, #36]	; 0x24
   12df0:	add	r0, r0, r7
   12df4:	str	r0, [sp, #20]
   12df8:	add	r0, r1, r7
   12dfc:	str	r1, [sp, #24]
   12e00:	add	r1, r4, r0
   12e04:	mov	r4, r0
   12e08:	sub	r2, sl, r0
   12e0c:	sub	r0, fp, #44	; 0x2c
   12e10:	bl	14764 <putchar_unlocked@plt+0x37ac>
   12e14:	cmp	r0, #0
   12e18:	beq	13224 <putchar_unlocked@plt+0x226c>
   12e1c:	cmn	r0, #1
   12e20:	beq	131dc <putchar_unlocked@plt+0x2224>
   12e24:	ldr	r2, [sp, #36]	; 0x24
   12e28:	cmn	r0, #2
   12e2c:	beq	131e4 <putchar_unlocked@plt+0x222c>
   12e30:	ldr	r2, [sp, #64]	; 0x40
   12e34:	ldr	ip, [sp, #88]	; 0x58
   12e38:	ldr	r4, [sp, #84]	; 0x54
   12e3c:	ldr	lr, [fp, #-48]	; 0xffffffd0
   12e40:	cmp	r0, #2
   12e44:	mov	r1, #0
   12e48:	movwcc	r1, #1
   12e4c:	eor	r2, r2, #1
   12e50:	orrs	r1, r2, r1
   12e54:	bne	12ea4 <putchar_unlocked@plt+0x1eec>
   12e58:	ldr	r1, [sp, #24]
   12e5c:	ldr	r2, [sp, #20]
   12e60:	add	r1, r2, r1
   12e64:	sub	r2, r0, #1
   12e68:	ldrb	r3, [r1]
   12e6c:	sub	r5, r3, #94	; 0x5e
   12e70:	cmp	r5, #30
   12e74:	bhi	12e8c <putchar_unlocked@plt+0x1ed4>
   12e78:	mov	r4, #1
   12e7c:	mov	sl, #1073741829	; 0x40000005
   12e80:	tst	sl, r4, lsl r5
   12e84:	ldr	r4, [sp, #84]	; 0x54
   12e88:	bne	132ec <putchar_unlocked@plt+0x2334>
   12e8c:	sub	r3, r3, #91	; 0x5b
   12e90:	cmp	r3, #2
   12e94:	bcc	132ec <putchar_unlocked@plt+0x2334>
   12e98:	add	r1, r1, #1
   12e9c:	subs	r2, r2, #1
   12ea0:	bne	12e68 <putchar_unlocked@plt+0x1eb0>
   12ea4:	ldr	r5, [sp, #24]
   12ea8:	str	lr, [fp, #-48]	; 0xffffffd0
   12eac:	add	r5, r0, r5
   12eb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12eb4:	bl	10e2c <iswprint@plt>
   12eb8:	cmp	r0, #0
   12ebc:	sub	r4, fp, #40	; 0x28
   12ec0:	movwne	r0, #1
   12ec4:	and	r9, r9, r0
   12ec8:	mov	r0, r4
   12ecc:	bl	10de4 <mbsinit@plt>
   12ed0:	mov	r1, r5
   12ed4:	mov	r3, r4
   12ed8:	ldr	sl, [sp, #36]	; 0x24
   12edc:	ldr	r5, [fp, #-84]	; 0xffffffac
   12ee0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   12ee4:	cmp	r0, #0
   12ee8:	beq	12df8 <putchar_unlocked@plt+0x1e40>
   12eec:	b	12d28 <putchar_unlocked@plt+0x1d70>
   12ef0:	mov	r8, r0
   12ef4:	b	129e4 <putchar_unlocked@plt+0x1a2c>
   12ef8:	mov	r0, #0
   12efc:	str	r0, [fp, #-56]	; 0xffffffc8
   12f00:	ldr	r0, [sp, #28]
   12f04:	cmp	r0, #0
   12f08:	beq	12fac <putchar_unlocked@plt+0x1ff4>
   12f0c:	add	r0, r7, #2
   12f10:	mov	r1, sl
   12f14:	cmp	r0, sl
   12f18:	bcs	12fac <putchar_unlocked@plt+0x1ff4>
   12f1c:	add	r1, r7, r4
   12f20:	ldrb	r1, [r1, #1]
   12f24:	cmp	r1, #63	; 0x3f
   12f28:	bne	12fac <putchar_unlocked@plt+0x1ff4>
   12f2c:	ldrb	r9, [r4, r0]
   12f30:	sub	r2, r9, #33	; 0x21
   12f34:	cmp	r2, #29
   12f38:	bhi	12fac <putchar_unlocked@plt+0x1ff4>
   12f3c:	mov	r1, r4
   12f40:	movw	r4, #20929	; 0x51c1
   12f44:	mov	r3, #1
   12f48:	movt	r4, #14336	; 0x3800
   12f4c:	tst	r4, r3, lsl r2
   12f50:	beq	13238 <putchar_unlocked@plt+0x2280>
   12f54:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12f58:	tst	r2, #1
   12f5c:	bne	13408 <putchar_unlocked@plt+0x2450>
   12f60:	cmp	r8, ip
   12f64:	mov	r4, r1
   12f68:	mov	r7, r0
   12f6c:	mov	r6, r9
   12f70:	movcc	r2, #63	; 0x3f
   12f74:	strbcc	r2, [r5, r8]
   12f78:	add	r2, r8, #1
   12f7c:	cmp	r2, ip
   12f80:	movcc	r3, #34	; 0x22
   12f84:	strbcc	r3, [r5, r2]
   12f88:	add	r2, r8, #2
   12f8c:	cmp	r2, ip
   12f90:	movcc	r3, #34	; 0x22
   12f94:	strbcc	r3, [r5, r2]
   12f98:	add	r2, r8, #3
   12f9c:	add	r8, r8, #4
   12fa0:	cmp	r2, ip
   12fa4:	movcc	r3, #63	; 0x3f
   12fa8:	strbcc	r3, [r5, r2]
   12fac:	mov	r9, #0
   12fb0:	b	129e4 <putchar_unlocked@plt+0x1a2c>
   12fb4:	ldr	sl, [sp, #36]	; 0x24
   12fb8:	add	r0, r1, r7
   12fbc:	mov	r2, #0
   12fc0:	str	r3, [sp, #24]
   12fc4:	str	r0, [fp, #-56]	; 0xffffffc8
   12fc8:	tst	r3, #1
   12fcc:	beq	12ff8 <putchar_unlocked@plt+0x2040>
   12fd0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12fd4:	tst	r0, #1
   12fd8:	beq	130c0 <putchar_unlocked@plt+0x2108>
   12fdc:	ldr	r1, [sp, #88]	; 0x58
   12fe0:	mov	r0, r3
   12fe4:	cmp	r8, r1
   12fe8:	movcc	r1, #92	; 0x5c
   12fec:	strbcc	r1, [r5, r8]
   12ff0:	add	r8, r8, #1
   12ff4:	b	130c4 <putchar_unlocked@plt+0x210c>
   12ff8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12ffc:	tst	r1, #1
   13000:	bne	13310 <putchar_unlocked@plt+0x2358>
   13004:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13008:	subs	r2, r1, #2
   1300c:	movwne	r2, #1
   13010:	orr	r2, r2, lr
   13014:	tst	r2, #1
   13018:	bne	1305c <putchar_unlocked@plt+0x20a4>
   1301c:	ldr	r1, [sp, #88]	; 0x58
   13020:	add	r2, r8, #1
   13024:	mov	lr, #1
   13028:	cmp	r8, r1
   1302c:	movcc	r1, #39	; 0x27
   13030:	strbcc	r1, [r5, r8]
   13034:	ldr	r1, [sp, #88]	; 0x58
   13038:	cmp	r2, r1
   1303c:	movcc	r1, #36	; 0x24
   13040:	strbcc	r1, [r5, r2]
   13044:	ldr	r1, [sp, #88]	; 0x58
   13048:	add	r2, r8, #2
   1304c:	add	r8, r8, #3
   13050:	cmp	r2, r1
   13054:	movcc	r1, #39	; 0x27
   13058:	strbcc	r1, [r5, r2]
   1305c:	ldr	r1, [sp, #88]	; 0x58
   13060:	add	r2, r8, #1
   13064:	mov	r0, r3
   13068:	cmp	r8, r1
   1306c:	movcc	r1, #92	; 0x5c
   13070:	strbcc	r1, [r5, r8]
   13074:	ldr	r1, [sp, #88]	; 0x58
   13078:	cmp	r2, r1
   1307c:	bcs	13090 <putchar_unlocked@plt+0x20d8>
   13080:	uxtb	r3, r6
   13084:	mov	r1, #48	; 0x30
   13088:	orr	r3, r1, r3, lsr #6
   1308c:	strb	r3, [r5, r2]
   13090:	ldr	r1, [sp, #88]	; 0x58
   13094:	add	r2, r8, #2
   13098:	add	r8, r8, #3
   1309c:	cmp	r2, r1
   130a0:	lsrcc	r3, r6, #3
   130a4:	movcc	r1, #6
   130a8:	bficc	r3, r1, #3, #29
   130ac:	mov	r1, #6
   130b0:	bfi	r6, r1, #3, #29
   130b4:	strbcc	r3, [r5, r2]
   130b8:	mov	r2, #1
   130bc:	b	130cc <putchar_unlocked@plt+0x2114>
   130c0:	mov	r0, r3
   130c4:	mov	r1, #0
   130c8:	str	r1, [fp, #-52]	; 0xffffffcc
   130cc:	mov	ip, r2
   130d0:	and	r1, r2, #1
   130d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   130d8:	add	r3, r7, #1
   130dc:	cmp	r2, r3
   130e0:	bls	13168 <putchar_unlocked@plt+0x21b0>
   130e4:	cmp	r1, #0
   130e8:	mvn	r5, lr
   130ec:	movwne	r1, #1
   130f0:	orr	r5, r5, r1
   130f4:	tst	r5, #1
   130f8:	bne	1313c <putchar_unlocked@plt+0x2184>
   130fc:	ldr	r1, [sp, #88]	; 0x58
   13100:	ldr	r5, [fp, #-84]	; 0xffffffac
   13104:	mov	r2, r4
   13108:	ldr	r4, [sp, #88]	; 0x58
   1310c:	ldr	r0, [sp, #24]
   13110:	mov	lr, #0
   13114:	cmp	r8, r1
   13118:	movcc	r1, #39	; 0x27
   1311c:	strbcc	r1, [r5, r8]
   13120:	add	r1, r8, #1
   13124:	add	r8, r8, #2
   13128:	cmp	r1, r4
   1312c:	movcc	r4, #39	; 0x27
   13130:	strbcc	r4, [r5, r1]
   13134:	mov	r4, r2
   13138:	b	13140 <putchar_unlocked@plt+0x2188>
   1313c:	ldr	r5, [fp, #-84]	; 0xffffffac
   13140:	ldr	r1, [sp, #88]	; 0x58
   13144:	mov	r2, ip
   13148:	cmp	r8, r1
   1314c:	ldr	r1, [sp, #72]	; 0x48
   13150:	strbcc	r6, [r5, r8]
   13154:	add	r8, r8, #1
   13158:	ldrb	r6, [r1, r7]
   1315c:	mov	r7, r3
   13160:	mov	r3, r0
   13164:	b	12fc8 <putchar_unlocked@plt+0x2010>
   13168:	ldr	ip, [sp, #88]	; 0x58
   1316c:	cmp	r1, #0
   13170:	movwne	r1, #1
   13174:	str	r1, [fp, #-56]	; 0xffffffc8
   13178:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1317c:	cmp	r0, #0
   13180:	bne	131b0 <putchar_unlocked@plt+0x21f8>
   13184:	tst	lr, #1
   13188:	beq	131b0 <putchar_unlocked@plt+0x21f8>
   1318c:	cmp	r8, ip
   13190:	mov	lr, #0
   13194:	movcc	r0, #39	; 0x27
   13198:	strbcc	r0, [r5, r8]
   1319c:	add	r0, r8, #1
   131a0:	add	r8, r8, #2
   131a4:	cmp	r0, ip
   131a8:	movcc	r1, #39	; 0x27
   131ac:	strbcc	r1, [r5, r0]
   131b0:	mov	r1, r9
   131b4:	mov	r0, r6
   131b8:	cmp	r8, ip
   131bc:	strbcc	r0, [r5, r8]
   131c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   131c4:	add	r8, r8, #1
   131c8:	and	r0, r0, r1
   131cc:	str	r0, [fp, #-48]	; 0xffffffd0
   131d0:	mov	r3, sl
   131d4:	add	r7, r7, #1
   131d8:	b	126c8 <putchar_unlocked@plt+0x1710>
   131dc:	mov	r9, #0
   131e0:	b	13224 <putchar_unlocked@plt+0x226c>
   131e4:	mov	r9, #0
   131e8:	cmp	r2, r4
   131ec:	bls	13224 <putchar_unlocked@plt+0x226c>
   131f0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   131f4:	ldr	r1, [sp, #24]
   131f8:	add	r0, r4, r7
   131fc:	mov	r3, r1
   13200:	ldrb	r1, [r0, r1]
   13204:	cmp	r1, #0
   13208:	beq	13230 <putchar_unlocked@plt+0x2278>
   1320c:	add	r3, r3, #1
   13210:	add	r1, r7, r3
   13214:	cmp	r1, r2
   13218:	mov	r1, r3
   1321c:	bcc	131fc <putchar_unlocked@plt+0x2244>
   13220:	b	12d28 <putchar_unlocked@plt+0x1d70>
   13224:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13228:	ldr	r1, [sp, #24]
   1322c:	b	12d28 <putchar_unlocked@plt+0x1d70>
   13230:	mov	r1, r3
   13234:	b	12d28 <putchar_unlocked@plt+0x1d70>
   13238:	mov	r9, #0
   1323c:	mov	r4, r1
   13240:	b	129e4 <putchar_unlocked@plt+0x1a2c>
   13244:	mov	sl, r7
   13248:	b	13250 <putchar_unlocked@plt+0x2298>
   1324c:	mvn	sl, #0
   13250:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13254:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13258:	eor	r0, r1, #2
   1325c:	orr	r0, r0, r8
   13260:	clz	r0, r0
   13264:	lsr	r0, r0, #5
   13268:	tst	r2, r0
   1326c:	bne	13314 <putchar_unlocked@plt+0x235c>
   13270:	subs	r0, r1, #2
   13274:	movwne	r0, #1
   13278:	orr	r0, r2, r0
   1327c:	tst	r0, #1
   13280:	ldreq	r0, [sp, #60]	; 0x3c
   13284:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   13288:	eoreq	r0, r0, #1
   1328c:	tsteq	r0, #1
   13290:	bne	133a8 <putchar_unlocked@plt+0x23f0>
   13294:	tst	r1, #1
   13298:	bne	13374 <putchar_unlocked@plt+0x23bc>
   1329c:	ldr	r6, [sp, #56]	; 0x38
   132a0:	mov	r9, #0
   132a4:	cmp	r6, #0
   132a8:	beq	133a0 <putchar_unlocked@plt+0x23e8>
   132ac:	ldr	r0, [sp, #84]	; 0x54
   132b0:	mov	r1, #0
   132b4:	mov	r7, #2
   132b8:	cmp	ip, #0
   132bc:	str	r1, [fp, #-48]	; 0xffffffd0
   132c0:	mov	r1, #0
   132c4:	str	r1, [fp, #-76]	; 0xffffffb4
   132c8:	beq	12430 <putchar_unlocked@plt+0x1478>
   132cc:	b	133a8 <putchar_unlocked@plt+0x23f0>
   132d0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   132d4:	ldr	r1, [fp, #12]
   132d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   132dc:	mov	r5, r3
   132e0:	mov	ip, r6
   132e4:	mov	r3, sl
   132e8:	b	13338 <putchar_unlocked@plt+0x2380>
   132ec:	tst	r4, #1
   132f0:	ldr	r5, [fp, #-84]	; 0xffffffac
   132f4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   132f8:	ldr	r1, [fp, #12]
   132fc:	ldr	r3, [sp, #36]	; 0x24
   13300:	mov	r0, #2
   13304:	movwne	r0, #4
   13308:	mov	r2, r0
   1330c:	b	13338 <putchar_unlocked@plt+0x2380>
   13310:	ldr	ip, [sp, #88]	; 0x58
   13314:	ldr	r1, [sp, #84]	; 0x54
   13318:	mov	r0, #2
   1331c:	tst	r1, #1
   13320:	movwne	r0, #4
   13324:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13328:	ldr	r1, [fp, #12]
   1332c:	mov	r3, sl
   13330:	cmp	r2, #2
   13334:	moveq	r2, r0
   13338:	mov	r0, #0
   1333c:	bic	r1, r1, #2
   13340:	str	r2, [sp]
   13344:	mov	r2, r4
   13348:	str	r0, [sp, #8]
   1334c:	ldr	r0, [sp, #76]	; 0x4c
   13350:	str	r1, [sp, #4]
   13354:	mov	r1, ip
   13358:	str	r0, [sp, #12]
   1335c:	ldr	r0, [sp, #80]	; 0x50
   13360:	str	r0, [sp, #16]
   13364:	mov	r0, r5
   13368:	bl	123a4 <putchar_unlocked@plt+0x13ec>
   1336c:	mov	r8, r0
   13370:	b	133f4 <putchar_unlocked@plt+0x243c>
   13374:	mov	r0, #5
   13378:	ldr	r1, [sp, #56]	; 0x38
   1337c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13380:	mov	r3, sl
   13384:	str	r0, [sp]
   13388:	ldr	r0, [fp, #12]
   1338c:	str	r0, [sp, #4]
   13390:	ldr	r0, [fp, #16]
   13394:	str	r0, [sp, #8]
   13398:	ldr	r0, [sp, #76]	; 0x4c
   1339c:	b	13358 <putchar_unlocked@plt+0x23a0>
   133a0:	mov	r0, #0
   133a4:	str	r0, [fp, #-76]	; 0xffffffb4
   133a8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   133ac:	cmp	r1, #0
   133b0:	beq	133e8 <putchar_unlocked@plt+0x2430>
   133b4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   133b8:	tst	r0, #1
   133bc:	bne	133e8 <putchar_unlocked@plt+0x2430>
   133c0:	ldrb	r0, [r1]
   133c4:	cmp	r0, #0
   133c8:	beq	133e8 <putchar_unlocked@plt+0x2430>
   133cc:	add	r1, r1, #1
   133d0:	cmp	r8, ip
   133d4:	strbcc	r0, [r5, r8]
   133d8:	add	r8, r8, #1
   133dc:	ldrb	r0, [r1], #1
   133e0:	cmp	r0, #0
   133e4:	bne	133d0 <putchar_unlocked@plt+0x2418>
   133e8:	cmp	r8, ip
   133ec:	movcc	r0, #0
   133f0:	strbcc	r0, [r5, r8]
   133f4:	mov	r0, r8
   133f8:	sub	sp, fp, #28
   133fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13400:	mov	r0, #4
   13404:	b	13324 <putchar_unlocked@plt+0x236c>
   13408:	mov	r4, r1
   1340c:	b	13314 <putchar_unlocked@plt+0x235c>
   13410:	bl	10fac <abort@plt>
   13414:	mov	r3, r2
   13418:	mov	r2, #0
   1341c:	b	13420 <putchar_unlocked@plt+0x2468>
   13420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13424:	add	fp, sp, #28
   13428:	sub	sp, sp, #36	; 0x24
   1342c:	movw	r8, #24928	; 0x6160
   13430:	cmp	r3, #0
   13434:	mov	r4, r2
   13438:	str	r2, [sp, #24]
   1343c:	mov	r5, r1
   13440:	mov	r6, r0
   13444:	str	r0, [sp, #20]
   13448:	movt	r8, #2
   1344c:	movne	r8, r3
   13450:	bl	10eec <__errno_location@plt>
   13454:	str	r0, [sp, #28]
   13458:	ldr	r1, [r8, #40]	; 0x28
   1345c:	ldr	r2, [r8, #44]	; 0x2c
   13460:	ldr	r7, [r0]
   13464:	cmp	r4, #0
   13468:	add	sl, r8, #8
   1346c:	mov	r0, #0
   13470:	ldm	r8, {r3, r9}
   13474:	orreq	r9, r9, #1
   13478:	stm	sp, {r3, r9, sl}
   1347c:	str	r1, [sp, #12]
   13480:	str	r2, [sp, #16]
   13484:	mov	r1, #0
   13488:	mov	r2, r6
   1348c:	mov	r3, r5
   13490:	str	r7, [sp, #32]
   13494:	mov	r7, r5
   13498:	bl	123a4 <putchar_unlocked@plt+0x13ec>
   1349c:	add	r4, r0, #1
   134a0:	mov	r5, r0
   134a4:	mov	r0, r4
   134a8:	bl	14198 <putchar_unlocked@plt+0x31e0>
   134ac:	mov	r6, r0
   134b0:	ldr	r0, [r8]
   134b4:	ldr	r2, [r8, #44]	; 0x2c
   134b8:	ldr	r1, [r8, #40]	; 0x28
   134bc:	mov	r3, r7
   134c0:	stm	sp, {r0, r9, sl}
   134c4:	str	r2, [sp, #16]
   134c8:	ldr	r2, [sp, #20]
   134cc:	str	r1, [sp, #12]
   134d0:	mov	r0, r6
   134d4:	mov	r1, r4
   134d8:	bl	123a4 <putchar_unlocked@plt+0x13ec>
   134dc:	ldr	r0, [sp, #24]
   134e0:	ldr	r1, [sp, #32]
   134e4:	ldr	r2, [sp, #28]
   134e8:	cmp	r0, #0
   134ec:	str	r1, [r2]
   134f0:	strne	r5, [r0]
   134f4:	mov	r0, r6
   134f8:	sub	sp, fp, #28
   134fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13500:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13504:	add	fp, sp, #24
   13508:	movw	r5, #24804	; 0x60e4
   1350c:	movw	r8, #24800	; 0x60e0
   13510:	movt	r5, #2
   13514:	movt	r8, #2
   13518:	ldr	r0, [r5]
   1351c:	ldr	r4, [r8]
   13520:	cmp	r0, #2
   13524:	blt	13550 <putchar_unlocked@plt+0x2598>
   13528:	add	r7, r4, #12
   1352c:	mov	r6, #0
   13530:	ldr	r0, [r7, r6, lsl #3]
   13534:	bl	120a4 <putchar_unlocked@plt+0x10ec>
   13538:	ldr	r1, [r5]
   1353c:	add	r2, r6, #2
   13540:	add	r0, r6, #1
   13544:	mov	r6, r0
   13548:	cmp	r2, r1
   1354c:	blt	13530 <putchar_unlocked@plt+0x2578>
   13550:	ldr	r0, [r4, #4]
   13554:	movw	r9, #24976	; 0x6190
   13558:	movw	r7, #24808	; 0x60e8
   1355c:	movt	r9, #2
   13560:	movt	r7, #2
   13564:	cmp	r0, r9
   13568:	beq	13578 <putchar_unlocked@plt+0x25c0>
   1356c:	bl	120a4 <putchar_unlocked@plt+0x10ec>
   13570:	mov	r0, #256	; 0x100
   13574:	stm	r7, {r0, r9}
   13578:	cmp	r4, r7
   1357c:	beq	1358c <putchar_unlocked@plt+0x25d4>
   13580:	mov	r0, r4
   13584:	bl	120a4 <putchar_unlocked@plt+0x10ec>
   13588:	str	r7, [r8]
   1358c:	mov	r0, #1
   13590:	str	r0, [r5]
   13594:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13598:	movw	r3, #24928	; 0x6160
   1359c:	mvn	r2, #0
   135a0:	movt	r3, #2
   135a4:	b	135a8 <putchar_unlocked@plt+0x25f0>
   135a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135ac:	add	fp, sp, #28
   135b0:	sub	sp, sp, #44	; 0x2c
   135b4:	mov	r7, r3
   135b8:	str	r2, [sp, #36]	; 0x24
   135bc:	str	r1, [sp, #32]
   135c0:	mov	r5, r0
   135c4:	bl	10eec <__errno_location@plt>
   135c8:	cmp	r5, #0
   135cc:	bmi	1373c <putchar_unlocked@plt+0x2784>
   135d0:	cmn	r5, #-2147483647	; 0x80000001
   135d4:	beq	1373c <putchar_unlocked@plt+0x2784>
   135d8:	movw	r8, #24804	; 0x60e4
   135dc:	movw	r4, #24800	; 0x60e0
   135e0:	str	r0, [sp, #28]
   135e4:	ldr	r0, [r0]
   135e8:	movt	r8, #2
   135ec:	movt	r4, #2
   135f0:	ldr	r1, [r8]
   135f4:	ldr	r6, [r4]
   135f8:	str	r0, [sp, #24]
   135fc:	cmp	r1, r5
   13600:	ble	1360c <putchar_unlocked@plt+0x2654>
   13604:	mov	sl, r6
   13608:	b	13678 <putchar_unlocked@plt+0x26c0>
   1360c:	movw	r9, #24808	; 0x60e8
   13610:	mov	r0, #8
   13614:	str	r1, [fp, #-32]	; 0xffffffe0
   13618:	sub	r1, r5, r1
   1361c:	mvn	r3, #-2147483648	; 0x80000000
   13620:	movt	r9, #2
   13624:	str	r0, [sp]
   13628:	add	r2, r1, #1
   1362c:	sub	r1, fp, #32
   13630:	subs	r0, r6, r9
   13634:	movne	r0, r6
   13638:	bl	142c8 <putchar_unlocked@plt+0x3310>
   1363c:	mov	sl, r0
   13640:	cmp	r6, r9
   13644:	str	r0, [r4]
   13648:	bne	13654 <putchar_unlocked@plt+0x269c>
   1364c:	ldrd	r0, [r9]
   13650:	stm	sl, {r0, r1}
   13654:	ldr	r1, [r8]
   13658:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1365c:	add	r0, sl, r1, lsl #3
   13660:	sub	r1, r2, r1
   13664:	lsl	r2, r1, #3
   13668:	mov	r1, #0
   1366c:	bl	10f04 <memset@plt>
   13670:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13674:	str	r0, [r8]
   13678:	mov	r9, sl
   1367c:	ldm	r7, {r0, r1}
   13680:	orr	r8, r1, #1
   13684:	add	r1, r7, #8
   13688:	ldr	r2, [r7, #40]	; 0x28
   1368c:	ldr	r3, [r7, #44]	; 0x2c
   13690:	ldr	r6, [r9, r5, lsl #3]!
   13694:	str	r1, [sp, #20]
   13698:	ldr	r4, [r9, #4]!
   1369c:	stm	sp, {r0, r8}
   136a0:	add	r0, sp, #8
   136a4:	stm	r0, {r1, r2, r3}
   136a8:	ldr	r2, [sp, #32]
   136ac:	ldr	r3, [sp, #36]	; 0x24
   136b0:	mov	r1, r6
   136b4:	mov	r0, r4
   136b8:	bl	123a4 <putchar_unlocked@plt+0x13ec>
   136bc:	cmp	r6, r0
   136c0:	bhi	13724 <putchar_unlocked@plt+0x276c>
   136c4:	add	r6, r0, #1
   136c8:	movw	r0, #24976	; 0x6190
   136cc:	movt	r0, #2
   136d0:	str	r6, [sl, r5, lsl #3]
   136d4:	cmp	r4, r0
   136d8:	beq	136e4 <putchar_unlocked@plt+0x272c>
   136dc:	mov	r0, r4
   136e0:	bl	120a4 <putchar_unlocked@plt+0x10ec>
   136e4:	mov	r0, r6
   136e8:	bl	14198 <putchar_unlocked@plt+0x31e0>
   136ec:	str	r0, [r9]
   136f0:	mov	r4, r0
   136f4:	add	r3, sp, #8
   136f8:	ldr	r0, [r7]
   136fc:	ldr	r1, [r7, #40]	; 0x28
   13700:	ldr	r2, [r7, #44]	; 0x2c
   13704:	stm	sp, {r0, r8}
   13708:	ldr	r0, [sp, #20]
   1370c:	stm	r3, {r0, r1, r2}
   13710:	ldr	r2, [sp, #32]
   13714:	ldr	r3, [sp, #36]	; 0x24
   13718:	mov	r0, r4
   1371c:	mov	r1, r6
   13720:	bl	123a4 <putchar_unlocked@plt+0x13ec>
   13724:	ldr	r0, [sp, #28]
   13728:	ldr	r1, [sp, #24]
   1372c:	str	r1, [r0]
   13730:	mov	r0, r4
   13734:	sub	sp, fp, #28
   13738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1373c:	bl	10fac <abort@plt>
   13740:	movw	r3, #24928	; 0x6160
   13744:	movt	r3, #2
   13748:	b	135a8 <putchar_unlocked@plt+0x25f0>
   1374c:	movw	r3, #24928	; 0x6160
   13750:	mov	r1, r0
   13754:	mov	r0, #0
   13758:	mvn	r2, #0
   1375c:	movt	r3, #2
   13760:	b	135a8 <putchar_unlocked@plt+0x25f0>
   13764:	movw	r3, #24928	; 0x6160
   13768:	mov	r2, r1
   1376c:	mov	r1, r0
   13770:	mov	r0, #0
   13774:	movt	r3, #2
   13778:	b	135a8 <putchar_unlocked@plt+0x25f0>
   1377c:	push	{fp, lr}
   13780:	mov	fp, sp
   13784:	sub	sp, sp, #48	; 0x30
   13788:	vmov.i32	q8, #0	; 0x00000000
   1378c:	mov	ip, #32
   13790:	mov	r3, sp
   13794:	mov	lr, r2
   13798:	cmp	r1, #10
   1379c:	add	r2, r3, #16
   137a0:	vst1.64	{d16-d17}, [r3], ip
   137a4:	vst1.64	{d16-d17}, [r2]
   137a8:	vst1.64	{d16-d17}, [r3]
   137ac:	beq	137cc <putchar_unlocked@plt+0x2814>
   137b0:	str	r1, [sp]
   137b4:	mov	r3, sp
   137b8:	mov	r1, lr
   137bc:	mvn	r2, #0
   137c0:	bl	135a8 <putchar_unlocked@plt+0x25f0>
   137c4:	mov	sp, fp
   137c8:	pop	{fp, pc}
   137cc:	bl	10fac <abort@plt>
   137d0:	push	{r4, sl, fp, lr}
   137d4:	add	fp, sp, #8
   137d8:	sub	sp, sp, #48	; 0x30
   137dc:	vmov.i32	q8, #0	; 0x00000000
   137e0:	mov	ip, r3
   137e4:	mov	r3, sp
   137e8:	mov	lr, #32
   137ec:	cmp	r1, #10
   137f0:	add	r4, r3, #16
   137f4:	vst1.64	{d16-d17}, [r3], lr
   137f8:	vst1.64	{d16-d17}, [r4]
   137fc:	vst1.64	{d16-d17}, [r3]
   13800:	beq	13820 <putchar_unlocked@plt+0x2868>
   13804:	str	r1, [sp]
   13808:	mov	r1, r2
   1380c:	mov	r3, sp
   13810:	mov	r2, ip
   13814:	bl	135a8 <putchar_unlocked@plt+0x25f0>
   13818:	sub	sp, fp, #8
   1381c:	pop	{r4, sl, fp, pc}
   13820:	bl	10fac <abort@plt>
   13824:	mov	r2, r1
   13828:	mov	r1, r0
   1382c:	mov	r0, #0
   13830:	b	1377c <putchar_unlocked@plt+0x27c4>
   13834:	mov	r3, r2
   13838:	mov	r2, r1
   1383c:	mov	r1, r0
   13840:	mov	r0, #0
   13844:	b	137d0 <putchar_unlocked@plt+0x2818>
   13848:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1384c:	add	fp, sp, #24
   13850:	sub	sp, sp, #48	; 0x30
   13854:	movw	r8, #24928	; 0x6160
   13858:	mov	lr, r0
   1385c:	mov	r3, sp
   13860:	mov	ip, r1
   13864:	movt	r8, #2
   13868:	mov	r1, r3
   1386c:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   13870:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   13874:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   13878:	stm	r1, {r0, r4, r5, r6, r7, r9}
   1387c:	ubfx	r0, r2, #5, #3
   13880:	and	r2, r2, #31
   13884:	mov	r4, #1
   13888:	add	r0, r3, r0, lsl #2
   1388c:	ldr	r1, [r0, #8]
   13890:	bic	r4, r4, r1, lsr r2
   13894:	eor	r1, r1, r4, lsl r2
   13898:	mov	r2, ip
   1389c:	str	r1, [r0, #8]
   138a0:	mov	r0, #0
   138a4:	mov	r1, lr
   138a8:	bl	135a8 <putchar_unlocked@plt+0x25f0>
   138ac:	sub	sp, fp, #24
   138b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   138b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138b8:	add	fp, sp, #24
   138bc:	sub	sp, sp, #48	; 0x30
   138c0:	movw	lr, #24928	; 0x6160
   138c4:	mov	ip, r0
   138c8:	mov	r3, sp
   138cc:	movt	lr, #2
   138d0:	mov	r2, r3
   138d4:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   138d8:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   138dc:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   138e0:	stm	r2, {r0, r4, r5, r6, r7, r8}
   138e4:	ubfx	r0, r1, #5, #3
   138e8:	and	r1, r1, #31
   138ec:	mov	r7, #1
   138f0:	add	r0, r3, r0, lsl #2
   138f4:	ldr	r2, [r0, #8]
   138f8:	bic	r7, r7, r2, lsr r1
   138fc:	eor	r1, r2, r7, lsl r1
   13900:	mvn	r2, #0
   13904:	str	r1, [r0, #8]
   13908:	mov	r0, #0
   1390c:	mov	r1, ip
   13910:	bl	135a8 <putchar_unlocked@plt+0x25f0>
   13914:	sub	sp, fp, #24
   13918:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1391c:	push	{r4, r5, r6, r7, fp, lr}
   13920:	add	fp, sp, #16
   13924:	sub	sp, sp, #48	; 0x30
   13928:	movw	lr, #24928	; 0x6160
   1392c:	mov	ip, r0
   13930:	mov	r3, sp
   13934:	movt	lr, #2
   13938:	mov	r2, r3
   1393c:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   13940:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13944:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   13948:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1394c:	mov	r1, ip
   13950:	mvn	r2, #0
   13954:	ldr	r0, [sp, #12]
   13958:	orr	r0, r0, #67108864	; 0x4000000
   1395c:	str	r0, [sp, #12]
   13960:	mov	r0, #0
   13964:	bl	135a8 <putchar_unlocked@plt+0x25f0>
   13968:	sub	sp, fp, #16
   1396c:	pop	{r4, r5, r6, r7, fp, pc}
   13970:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13974:	add	fp, sp, #24
   13978:	sub	sp, sp, #48	; 0x30
   1397c:	movw	r8, #24928	; 0x6160
   13980:	mov	ip, r1
   13984:	mov	lr, r0
   13988:	mov	r3, sp
   1398c:	movt	r8, #2
   13990:	mov	r2, r3
   13994:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   13998:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1399c:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   139a0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   139a4:	mov	r1, lr
   139a8:	mov	r2, ip
   139ac:	ldr	r0, [sp, #12]
   139b0:	orr	r0, r0, #67108864	; 0x4000000
   139b4:	str	r0, [sp, #12]
   139b8:	mov	r0, #0
   139bc:	bl	135a8 <putchar_unlocked@plt+0x25f0>
   139c0:	sub	sp, fp, #24
   139c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   139c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139cc:	add	fp, sp, #24
   139d0:	sub	sp, sp, #96	; 0x60
   139d4:	vmov.i32	q8, #0	; 0x00000000
   139d8:	mov	lr, sp
   139dc:	mov	ip, r2
   139e0:	cmp	r1, #10
   139e4:	add	r3, lr, #16
   139e8:	mov	r2, lr
   139ec:	vst1.64	{d16-d17}, [r3]
   139f0:	mov	r3, #28
   139f4:	vst1.64	{d16-d17}, [r2], r3
   139f8:	vst1.32	{d16-d17}, [r2]
   139fc:	beq	13a3c <putchar_unlocked@plt+0x2a84>
   13a00:	str	r1, [sp, #48]	; 0x30
   13a04:	add	r3, sp, #48	; 0x30
   13a08:	ldm	lr!, {r2, r4, r5, r6, r7}
   13a0c:	add	r1, r3, #4
   13a10:	stmia	r1!, {r2, r4, r5, r6, r7}
   13a14:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   13a18:	stm	r1, {r2, r4, r5, r6, r7, r8}
   13a1c:	mvn	r2, #0
   13a20:	ldr	r1, [sp, #60]	; 0x3c
   13a24:	orr	r1, r1, #67108864	; 0x4000000
   13a28:	str	r1, [sp, #60]	; 0x3c
   13a2c:	mov	r1, ip
   13a30:	bl	135a8 <putchar_unlocked@plt+0x25f0>
   13a34:	sub	sp, fp, #24
   13a38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a3c:	bl	10fac <abort@plt>
   13a40:	push	{fp, lr}
   13a44:	mov	fp, sp
   13a48:	sub	sp, sp, #8
   13a4c:	mvn	ip, #0
   13a50:	str	ip, [sp]
   13a54:	bl	13a60 <putchar_unlocked@plt+0x2aa8>
   13a58:	mov	sp, fp
   13a5c:	pop	{fp, pc}
   13a60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a64:	add	fp, sp, #24
   13a68:	sub	sp, sp, #48	; 0x30
   13a6c:	movw	ip, #24928	; 0x6160
   13a70:	mov	lr, r3
   13a74:	mov	r3, sp
   13a78:	cmp	r1, #0
   13a7c:	movt	ip, #2
   13a80:	cmpne	r2, #0
   13a84:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13a88:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   13a8c:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   13a90:	stm	r3, {r4, r5, r6, r7, r8, r9}
   13a94:	mov	r3, #10
   13a98:	str	r3, [sp]
   13a9c:	bne	13aa4 <putchar_unlocked@plt+0x2aec>
   13aa0:	bl	10fac <abort@plt>
   13aa4:	ldr	ip, [fp, #8]
   13aa8:	str	r2, [sp, #44]	; 0x2c
   13aac:	str	r1, [sp, #40]	; 0x28
   13ab0:	mov	r3, sp
   13ab4:	mov	r1, lr
   13ab8:	mov	r2, ip
   13abc:	bl	135a8 <putchar_unlocked@plt+0x25f0>
   13ac0:	sub	sp, fp, #24
   13ac4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ac8:	push	{fp, lr}
   13acc:	mov	fp, sp
   13ad0:	sub	sp, sp, #8
   13ad4:	mov	r3, r2
   13ad8:	mov	r2, r1
   13adc:	mov	r1, r0
   13ae0:	mvn	r0, #0
   13ae4:	str	r0, [sp]
   13ae8:	mov	r0, #0
   13aec:	bl	13a60 <putchar_unlocked@plt+0x2aa8>
   13af0:	mov	sp, fp
   13af4:	pop	{fp, pc}
   13af8:	push	{fp, lr}
   13afc:	mov	fp, sp
   13b00:	sub	sp, sp, #8
   13b04:	mov	ip, r2
   13b08:	mov	r2, r1
   13b0c:	mov	r1, r0
   13b10:	str	r3, [sp]
   13b14:	mov	r0, #0
   13b18:	mov	r3, ip
   13b1c:	bl	13a60 <putchar_unlocked@plt+0x2aa8>
   13b20:	mov	sp, fp
   13b24:	pop	{fp, pc}
   13b28:	movw	r3, #24816	; 0x60f0
   13b2c:	movt	r3, #2
   13b30:	b	135a8 <putchar_unlocked@plt+0x25f0>
   13b34:	movw	r3, #24816	; 0x60f0
   13b38:	mov	r2, r1
   13b3c:	mov	r1, r0
   13b40:	mov	r0, #0
   13b44:	movt	r3, #2
   13b48:	b	135a8 <putchar_unlocked@plt+0x25f0>
   13b4c:	movw	r3, #24816	; 0x60f0
   13b50:	mvn	r2, #0
   13b54:	movt	r3, #2
   13b58:	b	135a8 <putchar_unlocked@plt+0x25f0>
   13b5c:	movw	r3, #24816	; 0x60f0
   13b60:	mov	r1, r0
   13b64:	mov	r0, #0
   13b68:	mvn	r2, #0
   13b6c:	movt	r3, #2
   13b70:	b	135a8 <putchar_unlocked@plt+0x25f0>
   13b74:	push	{r4, r5, fp, lr}
   13b78:	add	fp, sp, #8
   13b7c:	mov	r5, r0
   13b80:	mov	r4, r1
   13b84:	mov	r0, #0
   13b88:	mov	r2, #5
   13b8c:	mov	r1, r5
   13b90:	bl	10e08 <dcgettext@plt>
   13b94:	cmp	r0, r5
   13b98:	popne	{r4, r5, fp, pc}
   13b9c:	bl	1472c <putchar_unlocked@plt+0x3774>
   13ba0:	ldrb	r1, [r0]
   13ba4:	and	r1, r1, #223	; 0xdf
   13ba8:	cmp	r1, #71	; 0x47
   13bac:	beq	13c14 <putchar_unlocked@plt+0x2c5c>
   13bb0:	cmp	r1, #85	; 0x55
   13bb4:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13bb8:	ldrb	r1, [r0, #1]
   13bbc:	and	r1, r1, #223	; 0xdf
   13bc0:	cmp	r1, #84	; 0x54
   13bc4:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13bc8:	ldrb	r1, [r0, #2]
   13bcc:	and	r1, r1, #223	; 0xdf
   13bd0:	cmp	r1, #70	; 0x46
   13bd4:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13bd8:	ldrb	r1, [r0, #3]
   13bdc:	cmp	r1, #45	; 0x2d
   13be0:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13be4:	ldrb	r1, [r0, #4]
   13be8:	cmp	r1, #56	; 0x38
   13bec:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13bf0:	ldrb	r0, [r0, #5]
   13bf4:	cmp	r0, #0
   13bf8:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13bfc:	ldrb	r1, [r5]
   13c00:	movw	r2, #20318	; 0x4f5e
   13c04:	movw	r0, #20322	; 0x4f62
   13c08:	movt	r2, #1
   13c0c:	movt	r0, #1
   13c10:	b	13c9c <putchar_unlocked@plt+0x2ce4>
   13c14:	ldrb	r1, [r0, #1]
   13c18:	and	r1, r1, #223	; 0xdf
   13c1c:	cmp	r1, #66	; 0x42
   13c20:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13c24:	ldrb	r1, [r0, #2]
   13c28:	cmp	r1, #49	; 0x31
   13c2c:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13c30:	ldrb	r1, [r0, #3]
   13c34:	cmp	r1, #56	; 0x38
   13c38:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13c3c:	ldrb	r1, [r0, #4]
   13c40:	cmp	r1, #48	; 0x30
   13c44:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13c48:	ldrb	r1, [r0, #5]
   13c4c:	cmp	r1, #51	; 0x33
   13c50:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13c54:	ldrb	r1, [r0, #6]
   13c58:	cmp	r1, #48	; 0x30
   13c5c:	bne	13c6c <putchar_unlocked@plt+0x2cb4>
   13c60:	ldrb	r0, [r0, #7]
   13c64:	cmp	r0, #0
   13c68:	beq	13c88 <putchar_unlocked@plt+0x2cd0>
   13c6c:	movw	r1, #20312	; 0x4f58
   13c70:	movw	r0, #20316	; 0x4f5c
   13c74:	cmp	r4, #9
   13c78:	movt	r1, #1
   13c7c:	movt	r0, #1
   13c80:	moveq	r0, r1
   13c84:	pop	{r4, r5, fp, pc}
   13c88:	ldrb	r1, [r5]
   13c8c:	movw	r2, #20326	; 0x4f66
   13c90:	movw	r0, #20330	; 0x4f6a
   13c94:	movt	r2, #1
   13c98:	movt	r0, #1
   13c9c:	cmp	r1, #96	; 0x60
   13ca0:	moveq	r0, r2
   13ca4:	pop	{r4, r5, fp, pc}
   13ca8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13cac:	add	fp, sp, #24
   13cb0:	sub	sp, sp, #32
   13cb4:	ldr	r6, [fp, #12]
   13cb8:	ldr	r7, [fp, #8]
   13cbc:	mov	r4, r2
   13cc0:	mov	r8, r0
   13cc4:	cmp	r1, #0
   13cc8:	beq	13cf0 <putchar_unlocked@plt+0x2d38>
   13ccc:	movw	r2, #20420	; 0x4fc4
   13cd0:	mov	r5, r1
   13cd4:	str	r3, [sp, #4]
   13cd8:	str	r4, [sp]
   13cdc:	mov	r0, r8
   13ce0:	mov	r1, #1
   13ce4:	movt	r2, #1
   13ce8:	mov	r3, r5
   13cec:	b	13d08 <putchar_unlocked@plt+0x2d50>
   13cf0:	movw	r2, #20432	; 0x4fd0
   13cf4:	str	r3, [sp]
   13cf8:	mov	r0, r8
   13cfc:	mov	r1, #1
   13d00:	mov	r3, r4
   13d04:	movt	r2, #1
   13d08:	bl	10f28 <__fprintf_chk@plt>
   13d0c:	movw	r1, #20439	; 0x4fd7
   13d10:	mov	r0, #0
   13d14:	mov	r2, #5
   13d18:	movt	r1, #1
   13d1c:	bl	10e08 <dcgettext@plt>
   13d20:	movw	r2, #21157	; 0x52a5
   13d24:	mov	r3, r0
   13d28:	movw	r0, #2022	; 0x7e6
   13d2c:	mov	r1, #1
   13d30:	movt	r2, #1
   13d34:	str	r0, [sp]
   13d38:	mov	r0, r8
   13d3c:	bl	10f28 <__fprintf_chk@plt>
   13d40:	movw	r4, #19902	; 0x4dbe
   13d44:	mov	r1, r8
   13d48:	movt	r4, #1
   13d4c:	mov	r0, r4
   13d50:	bl	10d90 <fputs_unlocked@plt>
   13d54:	movw	r1, #20443	; 0x4fdb
   13d58:	mov	r0, #0
   13d5c:	mov	r2, #5
   13d60:	movt	r1, #1
   13d64:	bl	10e08 <dcgettext@plt>
   13d68:	movw	r3, #20614	; 0x5086
   13d6c:	mov	r2, r0
   13d70:	mov	r0, r8
   13d74:	mov	r1, #1
   13d78:	movt	r3, #1
   13d7c:	bl	10f28 <__fprintf_chk@plt>
   13d80:	mov	r0, r4
   13d84:	mov	r1, r8
   13d88:	bl	10d90 <fputs_unlocked@plt>
   13d8c:	cmp	r6, #9
   13d90:	bhi	13df4 <putchar_unlocked@plt+0x2e3c>
   13d94:	add	r0, pc, #0
   13d98:	ldr	pc, [r0, r6, lsl #2]
   13d9c:	andeq	r3, r1, ip, asr #31
   13da0:	andeq	r3, r1, r4, asr #27
   13da4:	andeq	r3, r1, r0, lsl #28
   13da8:	andeq	r3, r1, r8, lsr #28
   13dac:	andeq	r3, r1, r0, asr lr
   13db0:	andeq	r3, r1, r8, ror lr
   13db4:	andeq	r3, r1, r0, lsr #29
   13db8:	ldrdeq	r3, [r1], -r8
   13dbc:	andeq	r3, r1, r8, ror pc
   13dc0:	andeq	r3, r1, r0, lsr #30
   13dc4:	movw	r1, #20648	; 0x50a8
   13dc8:	mov	r0, #0
   13dcc:	mov	r2, #5
   13dd0:	movt	r1, #1
   13dd4:	bl	10e08 <dcgettext@plt>
   13dd8:	ldr	r3, [r7]
   13ddc:	mov	r2, r0
   13de0:	mov	r0, r8
   13de4:	mov	r1, #1
   13de8:	sub	sp, fp, #24
   13dec:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13df0:	b	10f28 <__fprintf_chk@plt>
   13df4:	movw	r1, #20967	; 0x51e7
   13df8:	movt	r1, #1
   13dfc:	b	13f28 <putchar_unlocked@plt+0x2f70>
   13e00:	movw	r1, #20664	; 0x50b8
   13e04:	mov	r0, #0
   13e08:	mov	r2, #5
   13e0c:	movt	r1, #1
   13e10:	bl	10e08 <dcgettext@plt>
   13e14:	mov	r2, r0
   13e18:	ldr	r3, [r7]
   13e1c:	ldr	r0, [r7, #4]
   13e20:	str	r0, [sp]
   13e24:	b	13f14 <putchar_unlocked@plt+0x2f5c>
   13e28:	movw	r1, #20687	; 0x50cf
   13e2c:	mov	r0, #0
   13e30:	mov	r2, #5
   13e34:	movt	r1, #1
   13e38:	bl	10e08 <dcgettext@plt>
   13e3c:	mov	r2, r0
   13e40:	ldr	r3, [r7]
   13e44:	ldmib	r7, {r0, r1}
   13e48:	stm	sp, {r0, r1}
   13e4c:	b	13f14 <putchar_unlocked@plt+0x2f5c>
   13e50:	movw	r1, #20715	; 0x50eb
   13e54:	mov	r0, #0
   13e58:	mov	r2, #5
   13e5c:	movt	r1, #1
   13e60:	bl	10e08 <dcgettext@plt>
   13e64:	ldr	r3, [r7]
   13e68:	mov	r2, r0
   13e6c:	ldmib	r7, {r0, r1, r7}
   13e70:	stm	sp, {r0, r1, r7}
   13e74:	b	13f14 <putchar_unlocked@plt+0x2f5c>
   13e78:	movw	r1, #20747	; 0x510b
   13e7c:	mov	r0, #0
   13e80:	mov	r2, #5
   13e84:	movt	r1, #1
   13e88:	bl	10e08 <dcgettext@plt>
   13e8c:	ldr	r3, [r7]
   13e90:	mov	r2, r0
   13e94:	ldmib	r7, {r0, r1, r6, r7}
   13e98:	stm	sp, {r0, r1, r6, r7}
   13e9c:	b	13f14 <putchar_unlocked@plt+0x2f5c>
   13ea0:	movw	r1, #20783	; 0x512f
   13ea4:	mov	r0, #0
   13ea8:	mov	r2, #5
   13eac:	movt	r1, #1
   13eb0:	bl	10e08 <dcgettext@plt>
   13eb4:	mov	r2, r0
   13eb8:	ldr	r3, [r7]
   13ebc:	ldmib	r7, {r0, r1, r6}
   13ec0:	ldr	r5, [r7, #16]
   13ec4:	ldr	r7, [r7, #20]
   13ec8:	stm	sp, {r0, r1, r6}
   13ecc:	str	r5, [sp, #12]
   13ed0:	str	r7, [sp, #16]
   13ed4:	b	13f14 <putchar_unlocked@plt+0x2f5c>
   13ed8:	movw	r1, #20823	; 0x5157
   13edc:	mov	r0, #0
   13ee0:	mov	r2, #5
   13ee4:	movt	r1, #1
   13ee8:	bl	10e08 <dcgettext@plt>
   13eec:	mov	r2, r0
   13ef0:	ldr	r3, [r7]
   13ef4:	ldmib	r7, {r0, r1, r6}
   13ef8:	ldr	r5, [r7, #16]
   13efc:	ldr	r4, [r7, #20]
   13f00:	ldr	r7, [r7, #24]
   13f04:	stm	sp, {r0, r1, r6}
   13f08:	str	r5, [sp, #12]
   13f0c:	str	r4, [sp, #16]
   13f10:	str	r7, [sp, #20]
   13f14:	mov	r0, r8
   13f18:	mov	r1, #1
   13f1c:	b	13fc8 <putchar_unlocked@plt+0x3010>
   13f20:	movw	r1, #20915	; 0x51b3
   13f24:	movt	r1, #1
   13f28:	mov	r0, #0
   13f2c:	mov	r2, #5
   13f30:	bl	10e08 <dcgettext@plt>
   13f34:	mov	ip, r0
   13f38:	ldr	r3, [r7]
   13f3c:	ldr	r0, [r7, #4]
   13f40:	ldr	r1, [r7, #8]
   13f44:	ldr	r6, [r7, #12]
   13f48:	ldr	r5, [r7, #16]
   13f4c:	ldr	r4, [r7, #20]
   13f50:	ldr	r2, [r7, #24]
   13f54:	ldr	lr, [r7, #28]
   13f58:	ldr	r7, [r7, #32]
   13f5c:	stm	sp, {r0, r1, r6}
   13f60:	str	r5, [sp, #12]
   13f64:	str	r4, [sp, #16]
   13f68:	str	r2, [sp, #20]
   13f6c:	str	lr, [sp, #24]
   13f70:	str	r7, [sp, #28]
   13f74:	b	13fbc <putchar_unlocked@plt+0x3004>
   13f78:	movw	r1, #20867	; 0x5183
   13f7c:	mov	r0, #0
   13f80:	mov	r2, #5
   13f84:	movt	r1, #1
   13f88:	bl	10e08 <dcgettext@plt>
   13f8c:	mov	ip, r0
   13f90:	ldr	r3, [r7]
   13f94:	ldmib	r7, {r0, r1, r6}
   13f98:	ldr	r5, [r7, #16]
   13f9c:	ldr	r4, [r7, #20]
   13fa0:	ldr	r2, [r7, #24]
   13fa4:	ldr	r7, [r7, #28]
   13fa8:	stm	sp, {r0, r1, r6}
   13fac:	str	r5, [sp, #12]
   13fb0:	str	r4, [sp, #16]
   13fb4:	str	r2, [sp, #20]
   13fb8:	str	r7, [sp, #24]
   13fbc:	mov	r0, r8
   13fc0:	mov	r1, #1
   13fc4:	mov	r2, ip
   13fc8:	bl	10f28 <__fprintf_chk@plt>
   13fcc:	sub	sp, fp, #24
   13fd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13fd4:	push	{r4, sl, fp, lr}
   13fd8:	add	fp, sp, #8
   13fdc:	sub	sp, sp, #8
   13fe0:	ldr	ip, [fp, #8]
   13fe4:	mov	lr, #0
   13fe8:	ldr	r4, [ip, lr, lsl #2]
   13fec:	add	lr, lr, #1
   13ff0:	cmp	r4, #0
   13ff4:	bne	13fe8 <putchar_unlocked@plt+0x3030>
   13ff8:	sub	r4, lr, #1
   13ffc:	str	ip, [sp]
   14000:	str	r4, [sp, #4]
   14004:	bl	13ca8 <putchar_unlocked@plt+0x2cf0>
   14008:	sub	sp, fp, #8
   1400c:	pop	{r4, sl, fp, pc}
   14010:	push	{r4, r5, fp, lr}
   14014:	add	fp, sp, #8
   14018:	sub	sp, sp, #48	; 0x30
   1401c:	ldr	r4, [fp, #8]
   14020:	mov	ip, #0
   14024:	add	lr, sp, #8
   14028:	ldr	r5, [r4]
   1402c:	cmp	r5, #0
   14030:	str	r5, [lr, ip, lsl #2]
   14034:	beq	1404c <putchar_unlocked@plt+0x3094>
   14038:	add	ip, ip, #1
   1403c:	add	r4, r4, #4
   14040:	cmp	ip, #10
   14044:	bne	14028 <putchar_unlocked@plt+0x3070>
   14048:	mov	ip, #10
   1404c:	str	lr, [sp]
   14050:	str	ip, [sp, #4]
   14054:	bl	13ca8 <putchar_unlocked@plt+0x2cf0>
   14058:	sub	sp, fp, #8
   1405c:	pop	{r4, r5, fp, pc}
   14060:	push	{fp, lr}
   14064:	mov	fp, sp
   14068:	sub	sp, sp, #8
   1406c:	add	ip, fp, #8
   14070:	str	ip, [sp, #4]
   14074:	str	ip, [sp]
   14078:	bl	14010 <putchar_unlocked@plt+0x3058>
   1407c:	mov	sp, fp
   14080:	pop	{fp, pc}
   14084:	push	{fp, lr}
   14088:	mov	fp, sp
   1408c:	movw	r0, #24892	; 0x613c
   14090:	movt	r0, #2
   14094:	ldr	r1, [r0]
   14098:	movw	r0, #19902	; 0x4dbe
   1409c:	movt	r0, #1
   140a0:	bl	10d90 <fputs_unlocked@plt>
   140a4:	movw	r1, #21027	; 0x5223
   140a8:	mov	r0, #0
   140ac:	mov	r2, #5
   140b0:	movt	r1, #1
   140b4:	bl	10e08 <dcgettext@plt>
   140b8:	movw	r2, #21047	; 0x5237
   140bc:	mov	r1, r0
   140c0:	mov	r0, #1
   140c4:	movt	r2, #1
   140c8:	bl	10f10 <__printf_chk@plt>
   140cc:	movw	r1, #21069	; 0x524d
   140d0:	mov	r0, #0
   140d4:	mov	r2, #5
   140d8:	movt	r1, #1
   140dc:	bl	10e08 <dcgettext@plt>
   140e0:	movw	r2, #19365	; 0x4ba5
   140e4:	movw	r3, #19711	; 0x4cff
   140e8:	mov	r1, r0
   140ec:	mov	r0, #1
   140f0:	movt	r2, #1
   140f4:	movt	r3, #1
   140f8:	bl	10f10 <__printf_chk@plt>
   140fc:	movw	r1, #21089	; 0x5261
   14100:	mov	r0, #0
   14104:	mov	r2, #5
   14108:	movt	r1, #1
   1410c:	bl	10e08 <dcgettext@plt>
   14110:	movw	r2, #21128	; 0x5288
   14114:	mov	r1, r0
   14118:	mov	r0, #1
   1411c:	movt	r2, #1
   14120:	pop	{fp, lr}
   14124:	b	10f10 <__printf_chk@plt>
   14128:	b	1412c <putchar_unlocked@plt+0x3174>
   1412c:	push	{r4, r5, r6, sl, fp, lr}
   14130:	add	fp, sp, #16
   14134:	mov	r4, r2
   14138:	mov	r5, r1
   1413c:	mov	r6, r0
   14140:	bl	147c8 <putchar_unlocked@plt+0x3810>
   14144:	cmp	r0, #0
   14148:	popne	{r4, r5, r6, sl, fp, pc}
   1414c:	cmp	r6, #0
   14150:	beq	14164 <putchar_unlocked@plt+0x31ac>
   14154:	cmp	r5, #0
   14158:	cmpne	r4, #0
   1415c:	bne	14164 <putchar_unlocked@plt+0x31ac>
   14160:	pop	{r4, r5, r6, sl, fp, pc}
   14164:	bl	14594 <putchar_unlocked@plt+0x35dc>
   14168:	push	{fp, lr}
   1416c:	mov	fp, sp
   14170:	bl	1462c <putchar_unlocked@plt+0x3674>
   14174:	cmp	r0, #0
   14178:	popne	{fp, pc}
   1417c:	bl	14594 <putchar_unlocked@plt+0x35dc>
   14180:	push	{fp, lr}
   14184:	mov	fp, sp
   14188:	bl	1462c <putchar_unlocked@plt+0x3674>
   1418c:	cmp	r0, #0
   14190:	popne	{fp, pc}
   14194:	bl	14594 <putchar_unlocked@plt+0x35dc>
   14198:	push	{fp, lr}
   1419c:	mov	fp, sp
   141a0:	bl	1462c <putchar_unlocked@plt+0x3674>
   141a4:	cmp	r0, #0
   141a8:	popne	{fp, pc}
   141ac:	bl	14594 <putchar_unlocked@plt+0x35dc>
   141b0:	push	{r4, r5, fp, lr}
   141b4:	add	fp, sp, #8
   141b8:	mov	r4, r1
   141bc:	mov	r5, r0
   141c0:	bl	1465c <putchar_unlocked@plt+0x36a4>
   141c4:	cmp	r0, #0
   141c8:	popne	{r4, r5, fp, pc}
   141cc:	cmp	r5, #0
   141d0:	beq	141e0 <putchar_unlocked@plt+0x3228>
   141d4:	cmp	r4, #0
   141d8:	bne	141e0 <putchar_unlocked@plt+0x3228>
   141dc:	pop	{r4, r5, fp, pc}
   141e0:	bl	14594 <putchar_unlocked@plt+0x35dc>
   141e4:	push	{fp, lr}
   141e8:	mov	fp, sp
   141ec:	cmp	r1, #0
   141f0:	orreq	r1, r1, #1
   141f4:	bl	1465c <putchar_unlocked@plt+0x36a4>
   141f8:	cmp	r0, #0
   141fc:	popne	{fp, pc}
   14200:	bl	14594 <putchar_unlocked@plt+0x35dc>
   14204:	push	{fp, lr}
   14208:	mov	fp, sp
   1420c:	clz	r3, r2
   14210:	lsr	ip, r3, #5
   14214:	clz	r3, r1
   14218:	lsr	r3, r3, #5
   1421c:	orrs	r3, r3, ip
   14220:	movwne	r1, #1
   14224:	movwne	r2, #1
   14228:	bl	147c8 <putchar_unlocked@plt+0x3810>
   1422c:	cmp	r0, #0
   14230:	popne	{fp, pc}
   14234:	bl	14594 <putchar_unlocked@plt+0x35dc>
   14238:	push	{fp, lr}
   1423c:	mov	fp, sp
   14240:	mov	r2, r1
   14244:	mov	r1, r0
   14248:	mov	r0, #0
   1424c:	bl	147c8 <putchar_unlocked@plt+0x3810>
   14250:	cmp	r0, #0
   14254:	popne	{fp, pc}
   14258:	bl	14594 <putchar_unlocked@plt+0x35dc>
   1425c:	mov	r2, r1
   14260:	mov	r1, r0
   14264:	mov	r0, #0
   14268:	b	14204 <putchar_unlocked@plt+0x324c>
   1426c:	mov	r2, #1
   14270:	b	14274 <putchar_unlocked@plt+0x32bc>
   14274:	push	{r4, r5, fp, lr}
   14278:	add	fp, sp, #8
   1427c:	ldr	r5, [r1]
   14280:	mov	r4, r1
   14284:	cmp	r0, #0
   14288:	beq	142a0 <putchar_unlocked@plt+0x32e8>
   1428c:	mov	r1, #1
   14290:	add	r1, r1, r5, lsr #1
   14294:	adds	r5, r5, r1
   14298:	bcc	142b8 <putchar_unlocked@plt+0x3300>
   1429c:	bl	14594 <putchar_unlocked@plt+0x35dc>
   142a0:	cmp	r5, #0
   142a4:	bne	142b8 <putchar_unlocked@plt+0x3300>
   142a8:	mov	r1, #64	; 0x40
   142ac:	cmp	r2, #64	; 0x40
   142b0:	udiv	r5, r1, r2
   142b4:	addhi	r5, r5, #1
   142b8:	mov	r1, r5
   142bc:	bl	1412c <putchar_unlocked@plt+0x3174>
   142c0:	str	r5, [r4]
   142c4:	pop	{r4, r5, fp, pc}
   142c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142cc:	add	fp, sp, #24
   142d0:	ldr	r6, [r1]
   142d4:	mov	r8, r1
   142d8:	ldr	r4, [fp, #8]
   142dc:	add	r1, r6, r6, asr #1
   142e0:	cmp	r1, r6
   142e4:	mvnvs	r1, #-2147483648	; 0x80000000
   142e8:	cmp	r1, r3
   142ec:	mov	r5, r1
   142f0:	movgt	r5, r3
   142f4:	cmn	r3, #1
   142f8:	movle	r5, r1
   142fc:	cmn	r4, #1
   14300:	ble	14320 <putchar_unlocked@plt+0x3368>
   14304:	cmp	r4, #0
   14308:	beq	14374 <putchar_unlocked@plt+0x33bc>
   1430c:	cmn	r5, #1
   14310:	ble	14348 <putchar_unlocked@plt+0x3390>
   14314:	mvn	r7, #-2147483648	; 0x80000000
   14318:	udiv	r1, r7, r4
   1431c:	b	1433c <putchar_unlocked@plt+0x3384>
   14320:	cmn	r5, #1
   14324:	ble	14364 <putchar_unlocked@plt+0x33ac>
   14328:	cmn	r4, #1
   1432c:	beq	14374 <putchar_unlocked@plt+0x33bc>
   14330:	mov	r1, #-2147483648	; 0x80000000
   14334:	mvn	r7, #-2147483648	; 0x80000000
   14338:	sdiv	r1, r1, r4
   1433c:	cmp	r1, r5
   14340:	bge	14374 <putchar_unlocked@plt+0x33bc>
   14344:	b	14384 <putchar_unlocked@plt+0x33cc>
   14348:	beq	14374 <putchar_unlocked@plt+0x33bc>
   1434c:	mov	r1, #-2147483648	; 0x80000000
   14350:	mvn	r7, #-2147483648	; 0x80000000
   14354:	sdiv	r1, r1, r5
   14358:	cmp	r1, r4
   1435c:	bge	14374 <putchar_unlocked@plt+0x33bc>
   14360:	b	14384 <putchar_unlocked@plt+0x33cc>
   14364:	mvn	r7, #-2147483648	; 0x80000000
   14368:	sdiv	r1, r7, r4
   1436c:	cmp	r5, r1
   14370:	blt	14384 <putchar_unlocked@plt+0x33cc>
   14374:	mul	r1, r5, r4
   14378:	mov	r7, #64	; 0x40
   1437c:	cmp	r1, #63	; 0x3f
   14380:	bgt	1438c <putchar_unlocked@plt+0x33d4>
   14384:	sdiv	r5, r7, r4
   14388:	mul	r1, r5, r4
   1438c:	cmp	r0, #0
   14390:	moveq	r7, #0
   14394:	streq	r7, [r8]
   14398:	sub	r7, r5, r6
   1439c:	cmp	r7, r2
   143a0:	bge	14444 <putchar_unlocked@plt+0x348c>
   143a4:	add	r5, r6, r2
   143a8:	mov	r2, #0
   143ac:	mov	r1, #0
   143b0:	cmp	r5, r3
   143b4:	movwgt	r2, #1
   143b8:	cmn	r3, #1
   143bc:	movwgt	r1, #1
   143c0:	cmp	r5, r6
   143c4:	bvs	1442c <putchar_unlocked@plt+0x3474>
   143c8:	ands	r1, r1, r2
   143cc:	bne	1442c <putchar_unlocked@plt+0x3474>
   143d0:	cmn	r4, #1
   143d4:	ble	143f4 <putchar_unlocked@plt+0x343c>
   143d8:	cmp	r4, #0
   143dc:	beq	14440 <putchar_unlocked@plt+0x3488>
   143e0:	cmn	r5, #1
   143e4:	ble	14418 <putchar_unlocked@plt+0x3460>
   143e8:	mvn	r1, #-2147483648	; 0x80000000
   143ec:	udiv	r1, r1, r4
   143f0:	b	1440c <putchar_unlocked@plt+0x3454>
   143f4:	cmn	r5, #1
   143f8:	ble	14430 <putchar_unlocked@plt+0x3478>
   143fc:	cmn	r4, #1
   14400:	beq	14440 <putchar_unlocked@plt+0x3488>
   14404:	mov	r1, #-2147483648	; 0x80000000
   14408:	sdiv	r1, r1, r4
   1440c:	cmp	r1, r5
   14410:	bge	14440 <putchar_unlocked@plt+0x3488>
   14414:	b	1442c <putchar_unlocked@plt+0x3474>
   14418:	beq	14440 <putchar_unlocked@plt+0x3488>
   1441c:	mov	r1, #-2147483648	; 0x80000000
   14420:	sdiv	r1, r1, r5
   14424:	cmp	r1, r4
   14428:	bge	14440 <putchar_unlocked@plt+0x3488>
   1442c:	bl	14594 <putchar_unlocked@plt+0x35dc>
   14430:	mvn	r1, #-2147483648	; 0x80000000
   14434:	sdiv	r1, r1, r4
   14438:	cmp	r5, r1
   1443c:	blt	1442c <putchar_unlocked@plt+0x3474>
   14440:	mul	r1, r5, r4
   14444:	bl	141b0 <putchar_unlocked@plt+0x31f8>
   14448:	str	r5, [r8]
   1444c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14450:	push	{fp, lr}
   14454:	mov	fp, sp
   14458:	mov	r1, #1
   1445c:	bl	145d8 <putchar_unlocked@plt+0x3620>
   14460:	cmp	r0, #0
   14464:	popne	{fp, pc}
   14468:	bl	14594 <putchar_unlocked@plt+0x35dc>
   1446c:	push	{fp, lr}
   14470:	mov	fp, sp
   14474:	bl	145d8 <putchar_unlocked@plt+0x3620>
   14478:	cmp	r0, #0
   1447c:	popne	{fp, pc}
   14480:	bl	14594 <putchar_unlocked@plt+0x35dc>
   14484:	push	{fp, lr}
   14488:	mov	fp, sp
   1448c:	mov	r1, #1
   14490:	bl	145d8 <putchar_unlocked@plt+0x3620>
   14494:	cmp	r0, #0
   14498:	popne	{fp, pc}
   1449c:	bl	14594 <putchar_unlocked@plt+0x35dc>
   144a0:	push	{fp, lr}
   144a4:	mov	fp, sp
   144a8:	bl	145d8 <putchar_unlocked@plt+0x3620>
   144ac:	cmp	r0, #0
   144b0:	popne	{fp, pc}
   144b4:	bl	14594 <putchar_unlocked@plt+0x35dc>
   144b8:	push	{r4, r5, fp, lr}
   144bc:	add	fp, sp, #8
   144c0:	mov	r5, r0
   144c4:	mov	r0, r1
   144c8:	mov	r4, r1
   144cc:	bl	1462c <putchar_unlocked@plt+0x3674>
   144d0:	cmp	r0, #0
   144d4:	beq	144e8 <putchar_unlocked@plt+0x3530>
   144d8:	mov	r1, r5
   144dc:	mov	r2, r4
   144e0:	pop	{r4, r5, fp, lr}
   144e4:	b	10dd8 <memcpy@plt>
   144e8:	bl	14594 <putchar_unlocked@plt+0x35dc>
   144ec:	push	{r4, r5, fp, lr}
   144f0:	add	fp, sp, #8
   144f4:	mov	r5, r0
   144f8:	mov	r0, r1
   144fc:	mov	r4, r1
   14500:	bl	1462c <putchar_unlocked@plt+0x3674>
   14504:	cmp	r0, #0
   14508:	beq	1451c <putchar_unlocked@plt+0x3564>
   1450c:	mov	r1, r5
   14510:	mov	r2, r4
   14514:	pop	{r4, r5, fp, lr}
   14518:	b	10dd8 <memcpy@plt>
   1451c:	bl	14594 <putchar_unlocked@plt+0x35dc>
   14520:	push	{r4, r5, fp, lr}
   14524:	add	fp, sp, #8
   14528:	mov	r5, r0
   1452c:	add	r0, r1, #1
   14530:	mov	r4, r1
   14534:	bl	1462c <putchar_unlocked@plt+0x3674>
   14538:	cmp	r0, #0
   1453c:	beq	14558 <putchar_unlocked@plt+0x35a0>
   14540:	mov	r1, #0
   14544:	mov	r2, r4
   14548:	strb	r1, [r0, r4]
   1454c:	mov	r1, r5
   14550:	pop	{r4, r5, fp, lr}
   14554:	b	10dd8 <memcpy@plt>
   14558:	bl	14594 <putchar_unlocked@plt+0x35dc>
   1455c:	push	{r4, r5, fp, lr}
   14560:	add	fp, sp, #8
   14564:	mov	r4, r0
   14568:	bl	10ee0 <strlen@plt>
   1456c:	add	r5, r0, #1
   14570:	mov	r0, r5
   14574:	bl	1462c <putchar_unlocked@plt+0x3674>
   14578:	cmp	r0, #0
   1457c:	beq	14590 <putchar_unlocked@plt+0x35d8>
   14580:	mov	r1, r4
   14584:	mov	r2, r5
   14588:	pop	{r4, r5, fp, lr}
   1458c:	b	10dd8 <memcpy@plt>
   14590:	bl	14594 <putchar_unlocked@plt+0x35dc>
   14594:	push	{fp, lr}
   14598:	mov	fp, sp
   1459c:	movw	r0, #24796	; 0x60dc
   145a0:	movw	r1, #21204	; 0x52d4
   145a4:	mov	r2, #5
   145a8:	movt	r0, #2
   145ac:	movt	r1, #1
   145b0:	ldr	r4, [r0]
   145b4:	mov	r0, #0
   145b8:	bl	10e08 <dcgettext@plt>
   145bc:	movw	r2, #19459	; 0x4c03
   145c0:	mov	r3, r0
   145c4:	mov	r0, r4
   145c8:	mov	r1, #0
   145cc:	movt	r2, #1
   145d0:	bl	10e74 <error@plt>
   145d4:	bl	10fac <abort@plt>
   145d8:	clz	r2, r1
   145dc:	clz	r3, r0
   145e0:	lsr	r2, r2, #5
   145e4:	lsr	r3, r3, #5
   145e8:	orrs	r2, r3, r2
   145ec:	movwne	r1, #1
   145f0:	movwne	r0, #1
   145f4:	cmp	r1, #0
   145f8:	beq	14628 <putchar_unlocked@plt+0x3670>
   145fc:	mvn	r2, #-2147483648	; 0x80000000
   14600:	udiv	r2, r2, r1
   14604:	cmp	r2, r0
   14608:	bcs	14628 <putchar_unlocked@plt+0x3670>
   1460c:	push	{fp, lr}
   14610:	mov	fp, sp
   14614:	bl	10eec <__errno_location@plt>
   14618:	mov	r1, #12
   1461c:	str	r1, [r0]
   14620:	mov	r0, #0
   14624:	pop	{fp, pc}
   14628:	b	10d84 <calloc@plt>
   1462c:	cmp	r0, #0
   14630:	movweq	r0, #1
   14634:	cmn	r0, #1
   14638:	ble	14640 <putchar_unlocked@plt+0x3688>
   1463c:	b	10e80 <malloc@plt>
   14640:	push	{fp, lr}
   14644:	mov	fp, sp
   14648:	bl	10eec <__errno_location@plt>
   1464c:	mov	r1, #12
   14650:	str	r1, [r0]
   14654:	mov	r0, #0
   14658:	pop	{fp, pc}
   1465c:	push	{fp, lr}
   14660:	mov	fp, sp
   14664:	cmp	r0, #0
   14668:	beq	14684 <putchar_unlocked@plt+0x36cc>
   1466c:	cmp	r1, #0
   14670:	beq	14690 <putchar_unlocked@plt+0x36d8>
   14674:	cmn	r1, #1
   14678:	ble	14698 <putchar_unlocked@plt+0x36e0>
   1467c:	pop	{fp, lr}
   14680:	b	10e14 <realloc@plt>
   14684:	mov	r0, r1
   14688:	pop	{fp, lr}
   1468c:	b	1462c <putchar_unlocked@plt+0x3674>
   14690:	bl	120a4 <putchar_unlocked@plt+0x10ec>
   14694:	b	146a4 <putchar_unlocked@plt+0x36ec>
   14698:	bl	10eec <__errno_location@plt>
   1469c:	mov	r1, #12
   146a0:	str	r1, [r0]
   146a4:	mov	r0, #0
   146a8:	pop	{fp, pc}
   146ac:	push	{r4, r5, r6, sl, fp, lr}
   146b0:	add	fp, sp, #16
   146b4:	mov	r4, r0
   146b8:	bl	10e50 <__fpending@plt>
   146bc:	mov	r5, r0
   146c0:	mov	r0, r4
   146c4:	bl	10e5c <ferror_unlocked@plt>
   146c8:	mov	r6, r0
   146cc:	mov	r0, r4
   146d0:	bl	11fac <putchar_unlocked@plt+0xff4>
   146d4:	cmp	r6, #0
   146d8:	beq	146f8 <putchar_unlocked@plt+0x3740>
   146dc:	mvn	r4, #0
   146e0:	cmp	r0, #0
   146e4:	bne	14724 <putchar_unlocked@plt+0x376c>
   146e8:	bl	10eec <__errno_location@plt>
   146ec:	mov	r1, #0
   146f0:	str	r1, [r0]
   146f4:	b	14724 <putchar_unlocked@plt+0x376c>
   146f8:	cmp	r0, #0
   146fc:	mov	r4, r0
   14700:	mvnne	r4, #0
   14704:	cmp	r5, #0
   14708:	bne	14724 <putchar_unlocked@plt+0x376c>
   1470c:	cmp	r0, #0
   14710:	beq	14724 <putchar_unlocked@plt+0x376c>
   14714:	bl	10eec <__errno_location@plt>
   14718:	ldr	r0, [r0]
   1471c:	subs	r4, r0, #9
   14720:	mvnne	r4, #0
   14724:	mov	r0, r4
   14728:	pop	{r4, r5, r6, sl, fp, pc}
   1472c:	push	{fp, lr}
   14730:	mov	fp, sp
   14734:	mov	r0, #14
   14738:	bl	10f64 <nl_langinfo@plt>
   1473c:	movw	r1, #19332	; 0x4b84
   14740:	cmp	r0, #0
   14744:	movt	r1, #1
   14748:	movne	r1, r0
   1474c:	movw	r0, #21221	; 0x52e5
   14750:	ldrb	r2, [r1]
   14754:	movt	r0, #1
   14758:	cmp	r2, #0
   1475c:	movne	r0, r1
   14760:	pop	{fp, pc}
   14764:	push	{r4, r5, r6, r7, fp, lr}
   14768:	add	fp, sp, #16
   1476c:	sub	sp, sp, #8
   14770:	cmp	r0, #0
   14774:	add	r5, sp, #4
   14778:	mov	r7, r2
   1477c:	mov	r4, r1
   14780:	movne	r5, r0
   14784:	mov	r0, r5
   14788:	bl	10e68 <mbrtowc@plt>
   1478c:	mov	r6, r0
   14790:	cmp	r7, #0
   14794:	beq	147bc <putchar_unlocked@plt+0x3804>
   14798:	cmn	r6, #2
   1479c:	bcc	147bc <putchar_unlocked@plt+0x3804>
   147a0:	mov	r0, #0
   147a4:	bl	14804 <putchar_unlocked@plt+0x384c>
   147a8:	cmp	r0, #0
   147ac:	bne	147bc <putchar_unlocked@plt+0x3804>
   147b0:	ldrb	r0, [r4]
   147b4:	mov	r6, #1
   147b8:	str	r0, [r5]
   147bc:	mov	r0, r6
   147c0:	sub	sp, fp, #16
   147c4:	pop	{r4, r5, r6, r7, fp, pc}
   147c8:	cmp	r2, #0
   147cc:	beq	147fc <putchar_unlocked@plt+0x3844>
   147d0:	mvn	r3, #0
   147d4:	udiv	r3, r3, r2
   147d8:	cmp	r3, r1
   147dc:	bcs	147fc <putchar_unlocked@plt+0x3844>
   147e0:	push	{fp, lr}
   147e4:	mov	fp, sp
   147e8:	bl	10eec <__errno_location@plt>
   147ec:	mov	r1, #12
   147f0:	str	r1, [r0]
   147f4:	mov	r0, #0
   147f8:	pop	{fp, pc}
   147fc:	mul	r1, r2, r1
   14800:	b	1465c <putchar_unlocked@plt+0x36a4>
   14804:	push	{r4, sl, fp, lr}
   14808:	add	fp, sp, #8
   1480c:	sub	sp, sp, #264	; 0x108
   14810:	add	r1, sp, #7
   14814:	movw	r2, #257	; 0x101
   14818:	bl	14870 <putchar_unlocked@plt+0x38b8>
   1481c:	mov	r4, #0
   14820:	cmp	r0, #0
   14824:	bne	14864 <putchar_unlocked@plt+0x38ac>
   14828:	movw	r1, #21227	; 0x52eb
   1482c:	add	r0, sp, #7
   14830:	mov	r2, #2
   14834:	movt	r1, #1
   14838:	bl	10ed4 <bcmp@plt>
   1483c:	cmp	r0, #0
   14840:	beq	14864 <putchar_unlocked@plt+0x38ac>
   14844:	movw	r1, #21229	; 0x52ed
   14848:	add	r0, sp, #7
   1484c:	mov	r2, #6
   14850:	movt	r1, #1
   14854:	bl	10ed4 <bcmp@plt>
   14858:	cmp	r0, #0
   1485c:	mov	r4, r0
   14860:	movwne	r4, #1
   14864:	mov	r0, r4
   14868:	sub	sp, fp, #8
   1486c:	pop	{r4, sl, fp, pc}
   14870:	push	{r4, r5, r6, r7, fp, lr}
   14874:	add	fp, sp, #16
   14878:	mov	r4, r1
   1487c:	mov	r1, #0
   14880:	mov	r6, r2
   14884:	bl	10f4c <setlocale@plt>
   14888:	cmp	r0, #0
   1488c:	beq	148b8 <putchar_unlocked@plt+0x3900>
   14890:	mov	r7, r0
   14894:	bl	10ee0 <strlen@plt>
   14898:	cmp	r0, r6
   1489c:	bcs	148cc <putchar_unlocked@plt+0x3914>
   148a0:	add	r2, r0, #1
   148a4:	mov	r0, r4
   148a8:	mov	r1, r7
   148ac:	bl	10dd8 <memcpy@plt>
   148b0:	mov	r5, #0
   148b4:	b	148f4 <putchar_unlocked@plt+0x393c>
   148b8:	cmp	r6, #0
   148bc:	mov	r5, #22
   148c0:	movne	r0, #0
   148c4:	strbne	r0, [r4]
   148c8:	b	148f4 <putchar_unlocked@plt+0x393c>
   148cc:	mov	r5, #34	; 0x22
   148d0:	cmp	r6, #0
   148d4:	beq	148f4 <putchar_unlocked@plt+0x393c>
   148d8:	sub	r6, r6, #1
   148dc:	mov	r0, r4
   148e0:	mov	r1, r7
   148e4:	mov	r2, r6
   148e8:	bl	10dd8 <memcpy@plt>
   148ec:	mov	r0, #0
   148f0:	strb	r0, [r4, r6]
   148f4:	mov	r0, r5
   148f8:	pop	{r4, r5, r6, r7, fp, pc}
   148fc:	mov	r1, #0
   14900:	b	10f4c <setlocale@plt>
   14904:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14908:	mov	r7, r0
   1490c:	ldr	r6, [pc, #72]	; 1495c <putchar_unlocked@plt+0x39a4>
   14910:	ldr	r5, [pc, #72]	; 14960 <putchar_unlocked@plt+0x39a8>
   14914:	add	r6, pc, r6
   14918:	add	r5, pc, r5
   1491c:	sub	r6, r6, r5
   14920:	mov	r8, r1
   14924:	mov	r9, r2
   14928:	bl	10d64 <calloc@plt-0x20>
   1492c:	asrs	r6, r6, #2
   14930:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14934:	mov	r4, #0
   14938:	add	r4, r4, #1
   1493c:	ldr	r3, [r5], #4
   14940:	mov	r2, r9
   14944:	mov	r1, r8
   14948:	mov	r0, r7
   1494c:	blx	r3
   14950:	cmp	r6, r4
   14954:	bne	14938 <putchar_unlocked@plt+0x3980>
   14958:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1495c:	strdeq	r1, [r1], -r0
   14960:	andeq	r1, r1, r8, ror #11
   14964:	bx	lr
   14968:	ldr	r3, [pc, #12]	; 1497c <putchar_unlocked@plt+0x39c4>
   1496c:	mov	r1, #0
   14970:	add	r3, pc, r3
   14974:	ldr	r2, [r3]
   14978:	b	10ef8 <__cxa_atexit@plt>
   1497c:	andeq	r1, r1, ip, asr r7

Disassembly of section .fini:

00014980 <.fini>:
   14980:	push	{r3, lr}
   14984:	pop	{r3, pc}
