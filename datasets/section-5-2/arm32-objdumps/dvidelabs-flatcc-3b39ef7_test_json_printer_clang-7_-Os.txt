
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

0001285c <.init>:
   1285c:	push	{r3, lr}
   12860:	bl	129e4 <_start@@Base+0x3c>
   12864:	pop	{r3, pc}

Disassembly of section .plt:

00012868 <raise@plt-0x14>:
   12868:	push	{lr}		; (str lr, [sp, #-4]!)
   1286c:	ldr	lr, [pc, #4]	; 12878 <raise@plt-0x4>
   12870:	add	lr, pc, lr
   12874:	ldr	pc, [lr, #8]!
   12878:	andeq	pc, r1, r8, lsl #15

0001287c <raise@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #126976	; 0x1f000
   12884:	ldr	pc, [ip, #1928]!	; 0x788

00012888 <strcmp@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #126976	; 0x1f000
   12890:	ldr	pc, [ip, #1920]!	; 0x780

00012894 <fopen@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #126976	; 0x1f000
   1289c:	ldr	pc, [ip, #1912]!	; 0x778

000128a0 <memmove@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #126976	; 0x1f000
   128a8:	ldr	pc, [ip, #1904]!	; 0x770

000128ac <free@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #126976	; 0x1f000
   128b4:	ldr	pc, [ip, #1896]!	; 0x768

000128b8 <memcpy@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #126976	; 0x1f000
   128c0:	ldr	pc, [ip, #1888]!	; 0x760

000128c4 <ftell@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #126976	; 0x1f000
   128cc:	ldr	pc, [ip, #1880]!	; 0x758

000128d0 <memcmp@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #126976	; 0x1f000
   128d8:	ldr	pc, [ip, #1872]!	; 0x750

000128dc <rewind@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #126976	; 0x1f000
   128e4:	ldr	pc, [ip, #1864]!	; 0x748

000128e8 <realloc@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #126976	; 0x1f000
   128f0:	ldr	pc, [ip, #1856]!	; 0x740

000128f4 <fwrite@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #126976	; 0x1f000
   128fc:	ldr	pc, [ip, #1848]!	; 0x738

00012900 <puts@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #126976	; 0x1f000
   12908:	ldr	pc, [ip, #1840]!	; 0x730

0001290c <malloc@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #126976	; 0x1f000
   12914:	ldr	pc, [ip, #1832]!	; 0x728

00012918 <__libc_start_main@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #126976	; 0x1f000
   12920:	ldr	pc, [ip, #1824]!	; 0x720

00012924 <__gmon_start__@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #126976	; 0x1f000
   1292c:	ldr	pc, [ip, #1816]!	; 0x718

00012930 <exit@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #126976	; 0x1f000
   12938:	ldr	pc, [ip, #1808]!	; 0x710

0001293c <fprintf@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #126976	; 0x1f000
   12944:	ldr	pc, [ip, #1800]!	; 0x708

00012948 <memset@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #126976	; 0x1f000
   12950:	ldr	pc, [ip, #1792]!	; 0x700

00012954 <strncpy@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #126976	; 0x1f000
   1295c:	ldr	pc, [ip, #1784]!	; 0x6f8

00012960 <fclose@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #126976	; 0x1f000
   12968:	ldr	pc, [ip, #1776]!	; 0x6f0

0001296c <sprintf@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #126976	; 0x1f000
   12974:	ldr	pc, [ip, #1768]!	; 0x6e8

00012978 <fread_unlocked@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #126976	; 0x1f000
   12980:	ldr	pc, [ip, #1760]!	; 0x6e0

00012984 <fseek@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #126976	; 0x1f000
   1298c:	ldr	pc, [ip, #1752]!	; 0x6d8

00012990 <abort@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #126976	; 0x1f000
   12998:	ldr	pc, [ip, #1744]!	; 0x6d0

0001299c <__assert_fail@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #126976	; 0x1f000
   129a4:	ldr	pc, [ip, #1736]!	; 0x6c8

Disassembly of section .text:

000129a8 <_start@@Base>:
   129a8:	mov	fp, #0
   129ac:	mov	lr, #0
   129b0:	pop	{r1}		; (ldr r1, [sp], #4)
   129b4:	mov	r2, sp
   129b8:	push	{r2}		; (str r2, [sp, #-4]!)
   129bc:	push	{r0}		; (str r0, [sp, #-4]!)
   129c0:	ldr	ip, [pc, #16]	; 129d8 <_start@@Base+0x30>
   129c4:	push	{ip}		; (str ip, [sp, #-4]!)
   129c8:	ldr	r0, [pc, #12]	; 129dc <_start@@Base+0x34>
   129cc:	ldr	r3, [pc, #12]	; 129e0 <_start@@Base+0x38>
   129d0:	bl	12918 <__libc_start_main@plt>
   129d4:	bl	12990 <abort@plt>
   129d8:	andeq	pc, r1, r8, ror #25
   129dc:	andeq	r2, r1, r8, lsr lr
   129e0:	andeq	pc, r1, r8, lsl #25
   129e4:	ldr	r3, [pc, #20]	; 12a00 <_start@@Base+0x58>
   129e8:	ldr	r2, [pc, #20]	; 12a04 <_start@@Base+0x5c>
   129ec:	add	r3, pc, r3
   129f0:	ldr	r2, [r3, r2]
   129f4:	cmp	r2, #0
   129f8:	bxeq	lr
   129fc:	b	12924 <__gmon_start__@plt>
   12a00:	andeq	pc, r1, ip, lsl #12
   12a04:	andeq	r0, r0, r0, ror r0
   12a08:	ldr	r0, [pc, #24]	; 12a28 <_start@@Base+0x80>
   12a0c:	ldr	r3, [pc, #24]	; 12a2c <_start@@Base+0x84>
   12a10:	cmp	r3, r0
   12a14:	bxeq	lr
   12a18:	ldr	r3, [pc, #16]	; 12a30 <_start@@Base+0x88>
   12a1c:	cmp	r3, #0
   12a20:	bxeq	lr
   12a24:	bx	r3
   12a28:	andeq	r2, r3, r4, lsl #1
   12a2c:	andeq	r2, r3, r4, lsl #1
   12a30:	andeq	r0, r0, r0
   12a34:	ldr	r0, [pc, #36]	; 12a60 <_start@@Base+0xb8>
   12a38:	ldr	r1, [pc, #36]	; 12a64 <_start@@Base+0xbc>
   12a3c:	sub	r1, r1, r0
   12a40:	asr	r1, r1, #2
   12a44:	add	r1, r1, r1, lsr #31
   12a48:	asrs	r1, r1, #1
   12a4c:	bxeq	lr
   12a50:	ldr	r3, [pc, #16]	; 12a68 <_start@@Base+0xc0>
   12a54:	cmp	r3, #0
   12a58:	bxeq	lr
   12a5c:	bx	r3
   12a60:	andeq	r2, r3, r4, lsl #1
   12a64:	andeq	r2, r3, r4, lsl #1
   12a68:	andeq	r0, r0, r0
   12a6c:	push	{r4, lr}
   12a70:	ldr	r4, [pc, #24]	; 12a90 <_start@@Base+0xe8>
   12a74:	ldrb	r3, [r4]
   12a78:	cmp	r3, #0
   12a7c:	popne	{r4, pc}
   12a80:	bl	12a08 <_start@@Base+0x60>
   12a84:	mov	r3, #1
   12a88:	strb	r3, [r4]
   12a8c:	pop	{r4, pc}
   12a90:	muleq	r3, r0, r0
   12a94:	b	12a34 <_start@@Base+0x8c>

00012a98 <test_print@@Base>:
   12a98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a9c:	add	fp, sp, #28
   12aa0:	sub	sp, sp, #68	; 0x44
   12aa4:	movw	sl, #8320	; 0x2080
   12aa8:	movw	r1, #64822	; 0xfd36
   12aac:	mov	r4, #0
   12ab0:	movt	sl, #3
   12ab4:	movt	r1, #1
   12ab8:	str	r4, [fp, #-32]	; 0xffffffe0
   12abc:	str	r4, [fp, #-36]	; 0xffffffdc
   12ac0:	str	r4, [fp, #-40]	; 0xffffffd8
   12ac4:	ldr	r0, [sl]
   12ac8:	bl	12894 <fopen@plt>
   12acc:	cmp	r0, #0
   12ad0:	bne	12af8 <test_print@@Base+0x60>
   12ad4:	movw	r0, #8328	; 0x2088
   12ad8:	ldr	r2, [sl]
   12adc:	movw	r1, #64825	; 0xfd39
   12ae0:	movt	r0, #3
   12ae4:	movt	r1, #1
   12ae8:	ldr	r0, [r0]
   12aec:	bl	1293c <fprintf@plt>
   12af0:	mvn	r4, #0
   12af4:	b	12d40 <test_print@@Base+0x2a8>
   12af8:	mov	r5, r0
   12afc:	add	r0, sp, #8
   12b00:	mov	r1, r5
   12b04:	bl	1f1e8 <flatcc_json_printer_init@@Base>
   12b08:	movw	r9, #8340	; 0x2094
   12b0c:	movw	r0, #258	; 0x102
   12b10:	movt	r9, #3
   12b14:	strh	r0, [sp, #33]	; 0x21
   12b18:	strb	r4, [sp, #35]	; 0x23
   12b1c:	ldr	r4, [r9]
   12b20:	cmp	r4, #0
   12b24:	beq	12b40 <test_print@@Base+0xa8>
   12b28:	movw	r1, #64857	; 0xfd59
   12b2c:	mov	r0, r4
   12b30:	movt	r1, #1
   12b34:	bl	12888 <strcmp@plt>
   12b38:	cmp	r0, #0
   12b3c:	bne	12c2c <test_print@@Base+0x194>
   12b40:	movw	r8, #661	; 0x295
   12b44:	mov	r0, #288	; 0x120
   12b48:	movt	r8, #2
   12b4c:	str	r0, [fp, #-32]	; 0xffffffe0
   12b50:	movw	r4, #8316	; 0x207c
   12b54:	sub	r1, fp, #36	; 0x24
   12b58:	movt	r4, #3
   12b5c:	ldr	r0, [r4]
   12b60:	bl	12d4c <test_print@@Base+0x2b4>
   12b64:	cmp	r0, #0
   12b68:	bne	12b94 <test_print@@Base+0xfc>
   12b6c:	movw	r0, #8328	; 0x2088
   12b70:	ldr	r2, [r4]
   12b74:	movw	r1, #64901	; 0xfd85
   12b78:	movt	r0, #3
   12b7c:	movt	r1, #1
   12b80:	ldr	r0, [r0]
   12b84:	bl	1293c <fprintf@plt>
   12b88:	mov	r6, #0
   12b8c:	mvn	r4, #0
   12b90:	b	12c6c <test_print@@Base+0x1d4>
   12b94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12b98:	mov	r6, r0
   12b9c:	movw	r0, #11976	; 0x2ec8
   12ba0:	movw	r3, #64944	; 0xfdb0
   12ba4:	add	r4, sp, #8
   12ba8:	mov	r1, r8
   12bac:	movt	r0, #1
   12bb0:	movt	r3, #1
   12bb4:	str	r0, [sp]
   12bb8:	mov	r0, r4
   12bbc:	bl	1ec80 <flatcc_json_printer_table_as_root@@Base>
   12bc0:	ldr	r2, [sp, #52]	; 0x34
   12bc4:	mov	r0, r4
   12bc8:	mov	r1, #1
   12bcc:	blx	r2
   12bd0:	ldr	r0, [sp, #44]	; 0x2c
   12bd4:	cmp	r0, #0
   12bd8:	beq	12be8 <test_print@@Base+0x150>
   12bdc:	movw	r0, #960	; 0x3c0
   12be0:	movt	r0, #2
   12be4:	bl	12900 <puts@plt>
   12be8:	mov	r0, r5
   12bec:	bl	12960 <fclose@plt>
   12bf0:	ldr	r0, [sl]
   12bf4:	sub	r1, fp, #40	; 0x28
   12bf8:	bl	12d4c <test_print@@Base+0x2b4>
   12bfc:	cmp	r0, #0
   12c00:	bne	12c74 <test_print@@Base+0x1dc>
   12c04:	movw	r0, #8328	; 0x2088
   12c08:	ldr	r2, [sl]
   12c0c:	movw	r1, #64949	; 0xfdb5
   12c10:	movt	r0, #3
   12c14:	movt	r1, #1
   12c18:	ldr	r0, [r0]
   12c1c:	bl	1293c <fprintf@plt>
   12c20:	mov	r7, #0
   12c24:	mvn	r4, #0
   12c28:	b	12cc0 <test_print@@Base+0x228>
   12c2c:	sub	r1, fp, #32
   12c30:	mov	r0, r4
   12c34:	bl	12d4c <test_print@@Base+0x2b4>
   12c38:	mov	r8, r0
   12c3c:	cmp	r0, #0
   12c40:	bne	12b50 <test_print@@Base+0xb8>
   12c44:	movw	r0, #8328	; 0x2088
   12c48:	ldr	r2, [r9]
   12c4c:	movw	r1, #64859	; 0xfd5b
   12c50:	movt	r0, #3
   12c54:	movt	r1, #1
   12c58:	ldr	r0, [r0]
   12c5c:	bl	1293c <fprintf@plt>
   12c60:	mvn	r4, #0
   12c64:	mov	r8, #0
   12c68:	mov	r6, #0
   12c6c:	mov	r7, #0
   12c70:	b	12cf0 <test_print@@Base+0x258>
   12c74:	mov	r7, r0
   12c78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12c80:	cmp	r2, r0
   12c84:	bne	12cc8 <test_print@@Base+0x230>
   12c88:	mov	r0, r7
   12c8c:	mov	r1, r6
   12c90:	bl	128d0 <memcmp@plt>
   12c94:	cmp	r0, #0
   12c98:	bne	12cc8 <test_print@@Base+0x230>
   12c9c:	movw	r0, #8328	; 0x2088
   12ca0:	mov	r1, #26
   12ca4:	mov	r2, #1
   12ca8:	movt	r0, #3
   12cac:	ldr	r3, [r0]
   12cb0:	movw	r0, #65041	; 0xfe11
   12cb4:	movt	r0, #1
   12cb8:	bl	128f4 <fwrite@plt>
   12cbc:	mov	r4, #0
   12cc0:	mov	r5, #0
   12cc4:	b	12cf0 <test_print@@Base+0x258>
   12cc8:	movw	r0, #8328	; 0x2088
   12ccc:	mov	r1, #54	; 0x36
   12cd0:	mov	r2, #1
   12cd4:	movt	r0, #3
   12cd8:	ldr	r3, [r0]
   12cdc:	movw	r0, #64986	; 0xfdda
   12ce0:	movt	r0, #1
   12ce4:	bl	128f4 <fwrite@plt>
   12ce8:	mov	r5, #0
   12cec:	mvn	r4, #0
   12cf0:	add	r0, sp, #8
   12cf4:	bl	1f594 <flatcc_json_printer_clear@@Base>
   12cf8:	cmp	r8, #0
   12cfc:	ldrne	r0, [r9]
   12d00:	cmpne	r0, #0
   12d04:	beq	12d10 <test_print@@Base+0x278>
   12d08:	mov	r0, r8
   12d0c:	bl	128ac <free@plt>
   12d10:	cmp	r6, #0
   12d14:	beq	12d20 <test_print@@Base+0x288>
   12d18:	mov	r0, r6
   12d1c:	bl	128ac <free@plt>
   12d20:	cmp	r7, #0
   12d24:	beq	12d30 <test_print@@Base+0x298>
   12d28:	mov	r0, r7
   12d2c:	bl	128ac <free@plt>
   12d30:	cmp	r5, #0
   12d34:	beq	12d40 <test_print@@Base+0x2a8>
   12d38:	mov	r0, r5
   12d3c:	bl	12960 <fclose@plt>
   12d40:	mov	r0, r4
   12d44:	sub	sp, fp, #28
   12d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d50:	add	fp, sp, #24
   12d54:	sub	sp, sp, #8
   12d58:	add	r9, sp, #4
   12d5c:	cmp	r1, #0
   12d60:	movne	r9, r1
   12d64:	movw	r1, #65285	; 0xff05
   12d68:	movt	r1, #1
   12d6c:	bl	12894 <fopen@plt>
   12d70:	cmp	r0, #0
   12d74:	beq	12e14 <test_print@@Base+0x37c>
   12d78:	mov	r1, #0
   12d7c:	mov	r2, #2
   12d80:	mov	r5, r0
   12d84:	mov	r8, #0
   12d88:	bl	12984 <fseek@plt>
   12d8c:	mov	r0, r5
   12d90:	bl	128c4 <ftell@plt>
   12d94:	mov	r4, r0
   12d98:	cmp	r0, #10240	; 0x2800
   12d9c:	str	r0, [r9]
   12da0:	bhi	12e08 <test_print@@Base+0x370>
   12da4:	mov	r0, r5
   12da8:	bl	128dc <rewind@plt>
   12dac:	cmp	r4, #0
   12db0:	mov	r0, r4
   12db4:	movweq	r0, #1
   12db8:	bl	1290c <malloc@plt>
   12dbc:	cmp	r0, #0
   12dc0:	beq	12e08 <test_print@@Base+0x370>
   12dc4:	mov	r7, r0
   12dc8:	mov	r1, #0
   12dcc:	mov	r6, r1
   12dd0:	add	r0, r7, r1
   12dd4:	sub	r2, r4, r1
   12dd8:	mov	r1, #1
   12ddc:	mov	r3, r5
   12de0:	bl	12978 <fread_unlocked@plt>
   12de4:	add	r1, r0, r6
   12de8:	cmp	r0, #0
   12dec:	bne	12dcc <test_print@@Base+0x334>
   12df0:	mov	r0, r5
   12df4:	bl	12960 <fclose@plt>
   12df8:	cmp	r4, r6
   12dfc:	bne	12e1c <test_print@@Base+0x384>
   12e00:	mov	r8, r7
   12e04:	b	12e28 <test_print@@Base+0x390>
   12e08:	mov	r0, r5
   12e0c:	bl	12960 <fclose@plt>
   12e10:	b	12e28 <test_print@@Base+0x390>
   12e14:	mov	r4, #0
   12e18:	b	12e24 <test_print@@Base+0x38c>
   12e1c:	mov	r0, r7
   12e20:	bl	128ac <free@plt>
   12e24:	mov	r8, #0
   12e28:	str	r4, [r9]
   12e2c:	mov	r0, r8
   12e30:	sub	sp, fp, #24
   12e34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012e38 <main@@Base>:
   12e38:	push	{r4, r5, r6, sl, fp, lr}
   12e3c:	add	fp, sp, #16
   12e40:	movw	r6, #8328	; 0x2088
   12e44:	mov	r5, r0
   12e48:	movw	r0, #65068	; 0xfe2c
   12e4c:	mov	r4, r1
   12e50:	mov	r1, #24
   12e54:	mov	r2, #1
   12e58:	movt	r6, #3
   12e5c:	movt	r0, #1
   12e60:	ldr	r3, [r6]
   12e64:	bl	128f4 <fwrite@plt>
   12e68:	cmp	r5, #1
   12e6c:	beq	12ea0 <main@@Base+0x68>
   12e70:	cmp	r5, #4
   12e74:	bne	12ea8 <main@@Base+0x70>
   12e78:	ldmib	r4, {r0, r1, r2}
   12e7c:	movw	r3, #8340	; 0x2094
   12e80:	movt	r3, #3
   12e84:	str	r0, [r3]
   12e88:	movw	r0, #8316	; 0x207c
   12e8c:	movt	r0, #3
   12e90:	str	r1, [r0]
   12e94:	movw	r0, #8320	; 0x2080
   12e98:	movt	r0, #3
   12e9c:	str	r2, [r0]
   12ea0:	pop	{r4, r5, r6, sl, fp, lr}
   12ea4:	b	12a98 <test_print@@Base>
   12ea8:	ldr	r3, [r6]
   12eac:	movw	r0, #65093	; 0xfe45
   12eb0:	mov	r1, #191	; 0xbf
   12eb4:	mov	r2, #1
   12eb8:	movt	r0, #1
   12ebc:	bl	128f4 <fwrite@plt>
   12ec0:	mov	r0, #1
   12ec4:	bl	12930 <exit@plt>
   12ec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ecc:	add	fp, sp, #28
   12ed0:	sub	sp, sp, #20
   12ed4:	mov	r5, r0
   12ed8:	movw	r0, #13268	; 0x33d4
   12edc:	movw	r3, #65288	; 0xff08
   12ee0:	mov	r4, r1
   12ee4:	mov	r1, #3
   12ee8:	mov	r2, #0
   12eec:	mov	r8, #0
   12ef0:	movt	r0, #1
   12ef4:	str	r1, [sp]
   12ef8:	movt	r3, #1
   12efc:	mov	r1, r4
   12f00:	str	r0, [sp, #4]
   12f04:	mov	r0, r5
   12f08:	bl	1e8b8 <flatcc_json_printer_struct_field@@Base>
   12f0c:	movw	r3, #65292	; 0xff0c
   12f10:	mov	r0, #150	; 0x96
   12f14:	mov	r1, #4
   12f18:	mov	r2, #1
   12f1c:	mov	r6, #4
   12f20:	str	r1, [sp]
   12f24:	str	r0, [sp, #4]
   12f28:	movt	r3, #1
   12f2c:	mov	r0, r5
   12f30:	mov	r1, r4
   12f34:	bl	162d0 <flatcc_json_printer_int16_field@@Base>
   12f38:	movw	r3, #65297	; 0xff11
   12f3c:	mov	r0, #100	; 0x64
   12f40:	mov	r1, #2
   12f44:	mov	r2, #2
   12f48:	str	r1, [sp]
   12f4c:	str	r0, [sp, #4]
   12f50:	movt	r3, #1
   12f54:	mov	r0, r5
   12f58:	mov	r1, r4
   12f5c:	bl	162d0 <flatcc_json_printer_int16_field@@Base>
   12f60:	movw	r3, #65300	; 0xff14
   12f64:	mov	r0, r5
   12f68:	mov	r1, r4
   12f6c:	mov	r2, #3
   12f70:	str	r6, [sp]
   12f74:	movt	r3, #1
   12f78:	bl	15a60 <flatcc_json_printer_string_field@@Base>
   12f7c:	movw	r3, #65305	; 0xff19
   12f80:	mov	r0, #9
   12f84:	mov	r1, r4
   12f88:	mov	r2, #5
   12f8c:	mov	r7, #5
   12f90:	str	r0, [sp]
   12f94:	movt	r3, #1
   12f98:	mov	r0, r5
   12f9c:	bl	17e4c <flatcc_json_printer_uint8_vector_field@@Base>
   12fa0:	movw	r0, #13520	; 0x34d0
   12fa4:	movw	r3, #65315	; 0xff23
   12fa8:	mov	r1, #8
   12fac:	mov	r2, #6
   12fb0:	str	r7, [sp]
   12fb4:	mov	r7, #5
   12fb8:	movt	r0, #1
   12fbc:	str	r1, [sp, #4]
   12fc0:	movt	r3, #1
   12fc4:	mov	r1, r4
   12fc8:	str	r0, [sp, #8]
   12fcc:	mov	r0, r5
   12fd0:	bl	16bc4 <flatcc_json_printer_int8_enum_field@@Base>
   12fd4:	movw	r0, #13832	; 0x3608
   12fd8:	movw	r1, #13716	; 0x3594
   12fdc:	movw	r3, #155	; 0x9b
   12fe0:	mov	r2, #8
   12fe4:	str	r6, [sp]
   12fe8:	movt	r0, #1
   12fec:	movt	r1, #1
   12ff0:	movt	r3, #2
   12ff4:	str	r1, [sp, #4]
   12ff8:	str	r0, [sp, #8]
   12ffc:	mov	r0, r5
   13000:	mov	r1, r4
   13004:	bl	1e0a0 <flatcc_json_printer_union_field@@Base>
   13008:	movw	r0, #13920	; 0x3660
   1300c:	movw	r3, #65321	; 0xff29
   13010:	mov	r1, r4
   13014:	mov	r2, #9
   13018:	str	r7, [sp]
   1301c:	mov	sl, #5
   13020:	str	r6, [sp, #4]
   13024:	movt	r0, #1
   13028:	movt	r3, #1
   1302c:	str	r0, [sp, #8]
   13030:	mov	r0, r5
   13034:	bl	1cd48 <flatcc_json_printer_struct_vector_field@@Base>
   13038:	movw	r3, #65327	; 0xff2f
   1303c:	mov	r7, #17
   13040:	mov	r0, r5
   13044:	mov	r1, r4
   13048:	mov	r2, #10
   1304c:	movt	r3, #1
   13050:	str	r7, [sp]
   13054:	bl	1d2dc <flatcc_json_printer_string_vector_field@@Base>
   13058:	movw	r9, #11976	; 0x2ec8
   1305c:	movw	r3, #65345	; 0xff41
   13060:	mov	r0, r5
   13064:	mov	r1, r4
   13068:	mov	r2, #11
   1306c:	movt	r9, #1
   13070:	movt	r3, #1
   13074:	stm	sp, {r7, r9}
   13078:	bl	1d68c <flatcc_json_printer_table_vector_field@@Base>
   1307c:	movw	r3, #65363	; 0xff53
   13080:	mov	r0, r5
   13084:	mov	r1, r4
   13088:	mov	r2, #12
   1308c:	str	sl, [sp]
   13090:	mov	sl, #5
   13094:	str	r9, [sp, #4]
   13098:	movt	r3, #1
   1309c:	bl	1dec4 <flatcc_json_printer_table_field@@Base>
   130a0:	movw	r3, #65369	; 0xff59
   130a4:	mov	r0, #20
   130a8:	mov	r1, r4
   130ac:	mov	r2, #13
   130b0:	stm	sp, {r0, r8, r9}
   130b4:	movt	r3, #1
   130b8:	mov	r0, r5
   130bc:	bl	1efe8 <flatcc_json_printer_table_as_nested_root@@Base>
   130c0:	movw	r0, #14016	; 0x36c0
   130c4:	movw	r3, #65390	; 0xff6e
   130c8:	mov	r1, #9
   130cc:	mov	r2, #14
   130d0:	movt	r0, #1
   130d4:	str	r1, [sp]
   130d8:	movt	r3, #1
   130dc:	mov	r1, r4
   130e0:	str	r0, [sp, #4]
   130e4:	mov	r0, r5
   130e8:	bl	1dec4 <flatcc_json_printer_table_field@@Base>
   130ec:	movw	r3, #65400	; 0xff78
   130f0:	mov	r0, #1
   130f4:	mov	r9, #8
   130f8:	mov	r1, r4
   130fc:	mov	r2, #15
   13100:	str	r0, [sp, #4]
   13104:	movt	r3, #1
   13108:	mov	r0, r5
   1310c:	str	r9, [sp]
   13110:	bl	16580 <flatcc_json_printer_bool_field@@Base>
   13114:	movw	r3, #65409	; 0xff81
   13118:	mov	r6, #16
   1311c:	mov	r0, r5
   13120:	mov	r1, r4
   13124:	mov	r2, #16
   13128:	movt	r3, #1
   1312c:	stm	sp, {r6, r8}
   13130:	bl	163b0 <flatcc_json_printer_int32_field@@Base>
   13134:	movw	r3, #65426	; 0xff92
   13138:	mov	r0, r5
   1313c:	mov	r1, r4
   13140:	mov	r2, #17
   13144:	stm	sp, {r6, r8}
   13148:	movt	r3, #1
   1314c:	bl	16054 <flatcc_json_printer_uint32_field@@Base>
   13150:	movw	r3, #65443	; 0xffa3
   13154:	mov	r0, r5
   13158:	mov	r1, r4
   1315c:	mov	r2, #18
   13160:	str	r8, [sp, #8]
   13164:	str	r8, [sp, #12]
   13168:	str	r6, [sp]
   1316c:	movt	r3, #1
   13170:	bl	16488 <flatcc_json_printer_int64_field@@Base>
   13174:	movw	r3, #65460	; 0xffb4
   13178:	mov	r0, r5
   1317c:	mov	r1, r4
   13180:	mov	r2, #19
   13184:	str	r8, [sp, #8]
   13188:	str	r8, [sp, #12]
   1318c:	str	r6, [sp]
   13190:	movt	r3, #1
   13194:	bl	16114 <flatcc_json_printer_uint64_field@@Base>
   13198:	movw	r3, #65477	; 0xffc5
   1319c:	mov	r0, r5
   131a0:	mov	r1, r4
   131a4:	mov	r2, #20
   131a8:	stm	sp, {r7, r8}
   131ac:	movt	r3, #1
   131b0:	bl	163b0 <flatcc_json_printer_int32_field@@Base>
   131b4:	movw	r3, #65495	; 0xffd7
   131b8:	mov	r0, r5
   131bc:	mov	r1, r4
   131c0:	mov	r2, #21
   131c4:	stm	sp, {r7, r8}
   131c8:	movt	r3, #1
   131cc:	bl	16054 <flatcc_json_printer_uint32_field@@Base>
   131d0:	movw	r3, #65513	; 0xffe9
   131d4:	mov	r0, r5
   131d8:	mov	r1, r4
   131dc:	mov	r2, #22
   131e0:	str	r8, [sp, #8]
   131e4:	str	r8, [sp, #12]
   131e8:	str	r7, [sp]
   131ec:	movt	r3, #1
   131f0:	bl	16488 <flatcc_json_printer_int64_field@@Base>
   131f4:	movw	r3, #65531	; 0xfffb
   131f8:	mov	r0, r5
   131fc:	mov	r1, r4
   13200:	mov	r2, #23
   13204:	str	r8, [sp, #8]
   13208:	str	r8, [sp, #12]
   1320c:	str	r7, [sp]
   13210:	mov	r8, #23
   13214:	movt	r3, #1
   13218:	bl	16114 <flatcc_json_printer_uint64_field@@Base>
   1321c:	movw	r3, #13
   13220:	mov	r0, r5
   13224:	mov	r1, r4
   13228:	mov	r2, #24
   1322c:	str	r6, [sp]
   13230:	movt	r3, #2
   13234:	bl	19cb0 <flatcc_json_printer_bool_vector_field@@Base>
   13238:	vldr	s0, [pc, #396]	; 133cc <main@@Base+0x594>
   1323c:	movw	r3, #30
   13240:	mov	r0, r5
   13244:	mov	r1, r4
   13248:	mov	r2, #25
   1324c:	str	sl, [sp]
   13250:	movt	r3, #2
   13254:	bl	16674 <flatcc_json_printer_float_field@@Base>
   13258:	movw	r3, #36	; 0x24
   1325c:	mov	r6, #6
   13260:	vmov.f32	s0, #8	; 0x40400000  3.0
   13264:	mov	r0, r5
   13268:	mov	r1, r4
   1326c:	mov	r2, #26
   13270:	movt	r3, #2
   13274:	str	r6, [sp]
   13278:	bl	16674 <flatcc_json_printer_float_field@@Base>
   1327c:	vldr	s0, [pc, #332]	; 133d0 <main@@Base+0x598>
   13280:	movw	r3, #43	; 0x2b
   13284:	mov	r0, r5
   13288:	mov	r1, r4
   1328c:	mov	r2, #27
   13290:	str	r6, [sp]
   13294:	movt	r3, #2
   13298:	bl	16674 <flatcc_json_printer_float_field@@Base>
   1329c:	movw	r3, #50	; 0x32
   132a0:	mov	r0, #18
   132a4:	mov	r1, r4
   132a8:	mov	r2, #28
   132ac:	str	r0, [sp]
   132b0:	movt	r3, #2
   132b4:	mov	r0, r5
   132b8:	bl	1d2dc <flatcc_json_printer_string_vector_field@@Base>
   132bc:	movw	r0, #14148	; 0x3744
   132c0:	movw	r3, #69	; 0x45
   132c4:	stm	sp, {r8, r9}
   132c8:	mov	r1, r4
   132cc:	mov	r2, #29
   132d0:	movt	r0, #1
   132d4:	movt	r3, #2
   132d8:	str	r0, [sp, #8]
   132dc:	mov	r0, r5
   132e0:	bl	1cd48 <flatcc_json_printer_struct_vector_field@@Base>
   132e4:	movw	r3, #93	; 0x5d
   132e8:	mov	r6, #4
   132ec:	mov	r0, r5
   132f0:	mov	r1, r4
   132f4:	mov	r2, #30
   132f8:	movt	r3, #2
   132fc:	str	r6, [sp]
   13300:	bl	17e4c <flatcc_json_printer_uint8_vector_field@@Base>
   13304:	movw	r0, #13920	; 0x3660
   13308:	movw	r3, #98	; 0x62
   1330c:	mov	r1, r4
   13310:	mov	r2, #31
   13314:	str	sl, [sp]
   13318:	str	r6, [sp, #4]
   1331c:	movt	r0, #1
   13320:	movt	r3, #2
   13324:	str	r0, [sp, #8]
   13328:	mov	r0, r5
   1332c:	bl	1cd48 <flatcc_json_printer_struct_vector_field@@Base>
   13330:	movw	r3, #104	; 0x68
   13334:	mov	r0, #15
   13338:	mov	r1, r4
   1333c:	mov	r2, #32
   13340:	str	r0, [sp]
   13344:	movt	r3, #2
   13348:	mov	r0, r5
   1334c:	bl	198c0 <flatcc_json_printer_int64_vector_field@@Base>
   13350:	movw	r3, #120	; 0x78
   13354:	mov	r0, r5
   13358:	mov	r1, r4
   1335c:	mov	r2, #33	; 0x21
   13360:	str	r7, [sp]
   13364:	movt	r3, #2
   13368:	bl	1a488 <flatcc_json_printer_double_vector_field@@Base>
   1336c:	movw	r0, #14256	; 0x37b0
   13370:	movw	r3, #138	; 0x8a
   13374:	mov	r1, #21
   13378:	mov	r2, #34	; 0x22
   1337c:	movt	r0, #1
   13380:	str	r1, [sp]
   13384:	movt	r3, #2
   13388:	mov	r1, r4
   1338c:	str	r0, [sp, #4]
   13390:	mov	r0, r5
   13394:	bl	1dec4 <flatcc_json_printer_table_field@@Base>
   13398:	movw	r0, #14260	; 0x37b4
   1339c:	movw	r3, #160	; 0xa0
   133a0:	mov	r1, #10
   133a4:	mov	r2, #35	; 0x23
   133a8:	movt	r0, #1
   133ac:	str	r1, [sp]
   133b0:	movt	r3, #2
   133b4:	mov	r1, r4
   133b8:	str	r0, [sp, #4]
   133bc:	mov	r0, r5
   133c0:	bl	1dec4 <flatcc_json_printer_table_field@@Base>
   133c4:	sub	sp, fp, #28
   133c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133cc:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   133d0:	andeq	r0, r0, r0
   133d4:	push	{r4, r5, r6, sl, fp, lr}
   133d8:	add	fp, sp, #16
   133dc:	sub	sp, sp, #16
   133e0:	mov	r5, r0
   133e4:	movw	r0, #96	; 0x60
   133e8:	mov	r4, r1
   133ec:	mov	r6, #1
   133f0:	mov	r1, #0
   133f4:	mov	r3, #0
   133f8:	movt	r0, #2
   133fc:	mov	r2, r4
   13400:	stm	sp, {r0, r6}
   13404:	mov	r0, r5
   13408:	bl	174e0 <flatcc_json_printer_float_struct_field@@Base>
   1340c:	movw	r0, #65367	; 0xff57
   13410:	mov	r1, #1
   13414:	mov	r2, r4
   13418:	mov	r3, #4
   1341c:	movt	r0, #1
   13420:	stm	sp, {r0, r6}
   13424:	mov	r0, r5
   13428:	bl	174e0 <flatcc_json_printer_float_struct_field@@Base>
   1342c:	movw	r0, #171	; 0xab
   13430:	mov	r1, #2
   13434:	mov	r2, r4
   13438:	mov	r3, #8
   1343c:	movt	r0, #2
   13440:	stm	sp, {r0, r6}
   13444:	mov	r0, r5
   13448:	bl	174e0 <flatcc_json_printer_float_struct_field@@Base>
   1344c:	movw	r0, #173	; 0xad
   13450:	mov	r6, #5
   13454:	mov	r1, #3
   13458:	mov	r2, r4
   1345c:	mov	r3, #16
   13460:	movt	r0, #2
   13464:	stm	sp, {r0, r6}
   13468:	mov	r0, r5
   1346c:	bl	17544 <flatcc_json_printer_double_struct_field@@Base>
   13470:	movw	r0, #13520	; 0x34d0
   13474:	movw	r1, #179	; 0xb3
   13478:	mov	r2, r4
   1347c:	mov	r3, #24
   13480:	movt	r1, #2
   13484:	movt	r0, #1
   13488:	stm	sp, {r1, r6}
   1348c:	str	r0, [sp, #8]
   13490:	mov	r0, r5
   13494:	mov	r1, #4
   13498:	bl	17798 <flatcc_json_printer_int8_enum_struct_field@@Base>
   1349c:	movw	r0, #13920	; 0x3660
   134a0:	movw	r1, #185	; 0xb9
   134a4:	mov	r2, r4
   134a8:	mov	r3, #26
   134ac:	movt	r1, #2
   134b0:	movt	r0, #1
   134b4:	stm	sp, {r1, r6}
   134b8:	str	r0, [sp, #8]
   134bc:	mov	r0, r5
   134c0:	mov	r1, #5
   134c4:	bl	1e76c <flatcc_json_printer_embedded_struct_field@@Base>
   134c8:	sub	sp, fp, #16
   134cc:	pop	{r4, r5, r6, sl, fp, pc}
   134d0:	push	{r4, r5, r6, r7, fp, lr}
   134d4:	add	fp, sp, #16
   134d8:	mov	r4, r0
   134dc:	mvn	r0, #0
   134e0:	uxtb	r7, r1
   134e4:	uxtab	r0, r0, r1
   134e8:	ands	r5, r0, r7
   134ec:	movwne	r5, #1
   134f0:	cmp	r1, #0
   134f4:	beq	13588 <main@@Base+0x750>
   134f8:	ands	r0, r1, #244	; 0xf4
   134fc:	bne	13588 <main@@Base+0x750>
   13500:	mov	r0, r4
   13504:	mov	r1, r5
   13508:	bl	15960 <flatcc_json_printer_delimit_enum_flags@@Base>
   1350c:	mov	r6, #0
   13510:	tst	r7, #1
   13514:	beq	13534 <main@@Base+0x6fc>
   13518:	movw	r2, #191	; 0xbf
   1351c:	mov	r0, r4
   13520:	mov	r1, #0
   13524:	mov	r3, #3
   13528:	movt	r2, #2
   1352c:	bl	15994 <flatcc_json_printer_enum_flag@@Base>
   13530:	mov	r6, #1
   13534:	tst	r7, #2
   13538:	beq	13558 <main@@Base+0x720>
   1353c:	movw	r2, #195	; 0xc3
   13540:	mov	r0, r4
   13544:	mov	r1, r6
   13548:	mov	r3, #5
   1354c:	movt	r2, #2
   13550:	bl	15994 <flatcc_json_printer_enum_flag@@Base>
   13554:	add	r6, r6, #1
   13558:	tst	r7, #8
   1355c:	beq	13578 <main@@Base+0x740>
   13560:	movw	r2, #201	; 0xc9
   13564:	mov	r0, r4
   13568:	mov	r1, r6
   1356c:	mov	r3, #4
   13570:	movt	r2, #2
   13574:	bl	15994 <flatcc_json_printer_enum_flag@@Base>
   13578:	mov	r0, r4
   1357c:	mov	r1, r5
   13580:	pop	{r4, r5, r6, r7, fp, lr}
   13584:	b	15960 <flatcc_json_printer_delimit_enum_flags@@Base>
   13588:	mov	r0, r4
   1358c:	pop	{r4, r5, r6, r7, fp, lr}
   13590:	b	1570c <flatcc_json_printer_int8@@Base>
   13594:	sub	r1, r1, #1
   13598:	cmp	r1, #3
   1359c:	bhi	135c8 <main@@Base+0x790>
   135a0:	add	r2, pc, #0
   135a4:	ldr	pc, [r2, r1, lsl #2]
   135a8:			; <UNDEFINED> instruction: 0x000135b8
   135ac:	ldrdeq	r3, [r1], -r8
   135b0:	andeq	r3, r1, r8, ror #11
   135b4:	strdeq	r3, [r1], -r8
   135b8:	movw	r1, #206	; 0xce
   135bc:	mov	r2, #7
   135c0:	movt	r1, #2
   135c4:	b	15874 <flatcc_json_printer_enum@@Base>
   135c8:	movw	r1, #251	; 0xfb
   135cc:	mov	r2, #4
   135d0:	movt	r1, #2
   135d4:	b	15874 <flatcc_json_printer_enum@@Base>
   135d8:	movw	r1, #214	; 0xd6
   135dc:	mov	r2, #23
   135e0:	movt	r1, #2
   135e4:	b	15874 <flatcc_json_printer_enum@@Base>
   135e8:	movw	r1, #238	; 0xee
   135ec:	mov	r2, #8
   135f0:	movt	r1, #2
   135f4:	b	15874 <flatcc_json_printer_enum@@Base>
   135f8:	movw	r1, #247	; 0xf7
   135fc:	mov	r2, #3
   13600:	movt	r1, #2
   13604:	b	15874 <flatcc_json_printer_enum@@Base>
   13608:	ldrb	r2, [r1, #8]
   1360c:	sub	r2, r2, #1
   13610:	cmp	r2, #3
   13614:	bxhi	lr
   13618:	add	r3, pc, #0
   1361c:	ldr	pc, [r3, r2, lsl #2]
   13620:	andeq	r3, r1, r0, lsr r6
   13624:	andeq	r3, r1, r4, asr r6
   13628:	andeq	r3, r1, ip, lsr r6
   1362c:	andeq	r3, r1, r8, asr #12
   13630:	movw	r2, #11976	; 0x2ec8
   13634:	movt	r2, #1
   13638:	b	1e4c8 <flatcc_json_printer_union_table@@Base>
   1363c:	movw	r2, #14556	; 0x38dc
   13640:	movt	r2, #1
   13644:	b	1e4c8 <flatcc_json_printer_union_table@@Base>
   13648:	movw	r2, #14560	; 0x38e0
   1364c:	movt	r2, #1
   13650:	b	1e4c8 <flatcc_json_printer_union_table@@Base>
   13654:	movw	r2, #14392	; 0x3838
   13658:	movt	r2, #1
   1365c:	b	1e4c8 <flatcc_json_printer_union_table@@Base>
   13660:	push	{r4, r5, r6, sl, fp, lr}
   13664:	add	fp, sp, #16
   13668:	sub	sp, sp, #8
   1366c:	mov	r5, r0
   13670:	movw	r0, #65493	; 0xffd5
   13674:	mov	r4, r1
   13678:	mov	r6, #1
   1367c:	mov	r1, #0
   13680:	mov	r3, #0
   13684:	movt	r0, #1
   13688:	mov	r2, r4
   1368c:	stm	sp, {r0, r6}
   13690:	mov	r0, r5
   13694:	bl	172f0 <flatcc_json_printer_int16_struct_field@@Base>
   13698:	movw	r0, #377	; 0x179
   1369c:	mov	r1, #1
   136a0:	mov	r2, r4
   136a4:	mov	r3, #2
   136a8:	movt	r0, #2
   136ac:	stm	sp, {r0, r6}
   136b0:	mov	r0, r5
   136b4:	bl	1727c <flatcc_json_printer_int8_struct_field@@Base>
   136b8:	sub	sp, fp, #16
   136bc:	pop	{r4, r5, r6, sl, fp, pc}
   136c0:	push	{r4, r5, r6, sl, fp, lr}
   136c4:	add	fp, sp, #16
   136c8:	sub	sp, sp, #16
   136cc:	movw	r3, #624	; 0x270
   136d0:	mov	r5, r0
   136d4:	mov	r0, #2
   136d8:	mov	r2, #0
   136dc:	mov	r4, r1
   136e0:	mov	r6, #0
   136e4:	str	r0, [sp]
   136e8:	movt	r3, #2
   136ec:	mov	r0, r5
   136f0:	bl	15a60 <flatcc_json_printer_string_field@@Base>
   136f4:	movw	r3, #627	; 0x273
   136f8:	mov	r0, #3
   136fc:	mov	r1, r4
   13700:	mov	r2, #1
   13704:	str	r6, [sp, #8]
   13708:	str	r6, [sp, #12]
   1370c:	str	r0, [sp]
   13710:	movt	r3, #2
   13714:	mov	r0, r5
   13718:	bl	16488 <flatcc_json_printer_int64_field@@Base>
   1371c:	movw	r3, #631	; 0x277
   13720:	mov	r0, #5
   13724:	mov	r1, r4
   13728:	mov	r2, #2
   1372c:	stm	sp, {r0, r6}
   13730:	movt	r3, #2
   13734:	mov	r0, r5
   13738:	bl	15f94 <flatcc_json_printer_uint16_field@@Base>
   1373c:	sub	sp, fp, #16
   13740:	pop	{r4, r5, r6, sl, fp, pc}
   13744:	push	{r4, r5, fp, lr}
   13748:	add	fp, sp, #8
   1374c:	sub	sp, sp, #8
   13750:	mov	r4, r1
   13754:	movw	r1, #624	; 0x270
   13758:	mov	r5, r0
   1375c:	mov	r0, #2
   13760:	mov	r3, #0
   13764:	movt	r1, #2
   13768:	str	r0, [sp, #4]
   1376c:	mov	r0, r5
   13770:	mov	r2, r4
   13774:	str	r1, [sp]
   13778:	mov	r1, #0
   1377c:	bl	171c4 <flatcc_json_printer_uint32_struct_field@@Base>
   13780:	movw	r1, #637	; 0x27d
   13784:	mov	r0, #8
   13788:	mov	r2, r4
   1378c:	mov	r3, #4
   13790:	movt	r1, #2
   13794:	str	r0, [sp, #4]
   13798:	mov	r0, r5
   1379c:	str	r1, [sp]
   137a0:	mov	r1, #1
   137a4:	bl	171c4 <flatcc_json_printer_uint32_struct_field@@Base>
   137a8:	sub	sp, fp, #8
   137ac:	pop	{r4, r5, fp, pc}
   137b0:	bx	lr
   137b4:	push	{r4, r5, r6, sl, fp, lr}
   137b8:	add	fp, sp, #16
   137bc:	sub	sp, sp, #8
   137c0:	movw	r3, #649	; 0x289
   137c4:	mov	r5, r0
   137c8:	mov	r6, #0
   137cc:	mov	r0, #4
   137d0:	mov	r2, #0
   137d4:	mov	r4, r1
   137d8:	stm	sp, {r0, r6}
   137dc:	movt	r3, #2
   137e0:	mov	r0, r5
   137e4:	bl	15cf0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   137e8:	movw	r3, #646	; 0x286
   137ec:	mov	r0, #1
   137f0:	mov	r1, #7
   137f4:	mov	r2, #1
   137f8:	str	r1, [sp]
   137fc:	str	r0, [sp, #4]
   13800:	movt	r3, #2
   13804:	mov	r0, r5
   13808:	mov	r1, r4
   1380c:	bl	15cf0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13810:	movw	r3, #654	; 0x28e
   13814:	mov	r0, #6
   13818:	mov	r1, r4
   1381c:	mov	r2, #2
   13820:	stm	sp, {r0, r6}
   13824:	movt	r3, #2
   13828:	mov	r0, r5
   1382c:	bl	15cf0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13830:	sub	sp, fp, #16
   13834:	pop	{r4, r5, r6, sl, fp, pc}
   13838:	push	{r4, r5, r6, r7, fp, lr}
   1383c:	add	fp, sp, #16
   13840:	sub	sp, sp, #16
   13844:	movw	r7, #13520	; 0x34d0
   13848:	movw	r3, #65315	; 0xff23
   1384c:	mov	r5, r0
   13850:	mov	r6, #2
   13854:	mov	r0, #5
   13858:	mov	r2, #0
   1385c:	mov	r4, r1
   13860:	movt	r7, #1
   13864:	movt	r3, #1
   13868:	stm	sp, {r0, r6, r7}
   1386c:	mov	r0, r5
   13870:	bl	16bc4 <flatcc_json_printer_int8_enum_field@@Base>
   13874:	movw	r3, #256	; 0x100
   13878:	mov	r0, #6
   1387c:	mov	r1, r4
   13880:	mov	r2, #1
   13884:	stm	sp, {r0, r6, r7}
   13888:	movt	r3, #2
   1388c:	mov	r0, r5
   13890:	bl	16bc4 <flatcc_json_printer_int8_enum_field@@Base>
   13894:	movw	r3, #263	; 0x107
   13898:	mov	r0, r5
   1389c:	mov	r1, r4
   138a0:	mov	r2, #2
   138a4:	str	r6, [sp]
   138a8:	str	r6, [sp, #4]
   138ac:	movt	r3, #2
   138b0:	bl	15ed4 <flatcc_json_printer_uint8_field@@Base>
   138b4:	movw	r3, #266	; 0x10a
   138b8:	mov	r0, #3
   138bc:	mov	r1, r4
   138c0:	mov	r2, #3
   138c4:	stm	sp, {r0, r6}
   138c8:	movt	r3, #2
   138cc:	mov	r0, r5
   138d0:	bl	15ed4 <flatcc_json_printer_uint8_field@@Base>
   138d4:	sub	sp, fp, #16
   138d8:	pop	{r4, r5, r6, r7, fp, pc}
   138dc:	bx	lr
   138e0:	push	{r4, r5, fp, lr}
   138e4:	add	fp, sp, #8
   138e8:	sub	sp, sp, #16
   138ec:	mov	r5, r0
   138f0:	movw	r0, #14732	; 0x398c
   138f4:	movw	r3, #270	; 0x10e
   138f8:	mov	r4, r1
   138fc:	mov	r1, #6
   13900:	mov	r2, #0
   13904:	movt	r0, #1
   13908:	str	r1, [sp]
   1390c:	movt	r3, #2
   13910:	mov	r1, r4
   13914:	str	r0, [sp, #4]
   13918:	mov	r0, r5
   1391c:	bl	1dec4 <flatcc_json_printer_table_field@@Base>
   13920:	movw	r0, #14888	; 0x3a28
   13924:	movw	r3, #277	; 0x115
   13928:	mov	r1, #5
   1392c:	mov	r2, #1
   13930:	movt	r0, #1
   13934:	str	r1, [sp]
   13938:	movt	r3, #2
   1393c:	mov	r1, r4
   13940:	str	r0, [sp, #4]
   13944:	mov	r0, r5
   13948:	bl	1dec4 <flatcc_json_printer_table_field@@Base>
   1394c:	movw	r0, #13832	; 0x3608
   13950:	movw	r1, #13716	; 0x3594
   13954:	movw	r3, #283	; 0x11b
   13958:	mov	r2, #7
   1395c:	movt	r0, #1
   13960:	movt	r1, #1
   13964:	str	r2, [sp]
   13968:	movt	r3, #2
   1396c:	mov	r2, #3
   13970:	str	r1, [sp, #4]
   13974:	str	r0, [sp, #8]
   13978:	mov	r0, r5
   1397c:	mov	r1, r4
   13980:	bl	1db0c <flatcc_json_printer_union_vector_field@@Base>
   13984:	sub	sp, fp, #8
   13988:	pop	{r4, r5, fp, pc}
   1398c:	push	{r4, r5, r6, sl, fp, lr}
   13990:	add	fp, sp, #16
   13994:	sub	sp, sp, #8
   13998:	mov	r5, r0
   1399c:	movw	r0, #15116	; 0x3b0c
   139a0:	movw	r3, #291	; 0x123
   139a4:	mov	r4, r1
   139a8:	mov	r1, #21
   139ac:	mov	r2, #0
   139b0:	movt	r0, #1
   139b4:	str	r1, [sp]
   139b8:	movt	r3, #2
   139bc:	mov	r1, r4
   139c0:	str	r0, [sp, #4]
   139c4:	mov	r0, r5
   139c8:	bl	1dec4 <flatcc_json_printer_table_field@@Base>
   139cc:	movw	r0, #15440	; 0x3c50
   139d0:	movw	r3, #313	; 0x139
   139d4:	mov	r6, #22
   139d8:	mov	r1, r4
   139dc:	mov	r2, #1
   139e0:	movt	r0, #1
   139e4:	movt	r3, #2
   139e8:	str	r6, [sp]
   139ec:	str	r0, [sp, #4]
   139f0:	mov	r0, r5
   139f4:	bl	1dec4 <flatcc_json_printer_table_field@@Base>
   139f8:	movw	r0, #15540	; 0x3cb4
   139fc:	movw	r3, #336	; 0x150
   13a00:	mov	r1, r4
   13a04:	mov	r2, #2
   13a08:	str	r6, [sp]
   13a0c:	movt	r0, #1
   13a10:	movt	r3, #2
   13a14:	str	r0, [sp, #4]
   13a18:	mov	r0, r5
   13a1c:	bl	1dec4 <flatcc_json_printer_table_field@@Base>
   13a20:	sub	sp, fp, #16
   13a24:	pop	{r4, r5, r6, sl, fp, pc}
   13a28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a2c:	add	fp, sp, #24
   13a30:	sub	sp, sp, #16
   13a34:	movw	r7, #15640	; 0x3d18
   13a38:	movw	r6, #15820	; 0x3dcc
   13a3c:	movw	r3, #486	; 0x1e6
   13a40:	mov	r5, r0
   13a44:	mov	r0, #14
   13a48:	mov	r2, #1
   13a4c:	mov	r4, r1
   13a50:	movt	r7, #1
   13a54:	movt	r6, #1
   13a58:	movt	r3, #2
   13a5c:	stm	sp, {r0, r7}
   13a60:	mov	r0, r5
   13a64:	str	r6, [sp, #8]
   13a68:	bl	1e0a0 <flatcc_json_printer_union_field@@Base>
   13a6c:	movw	r3, #501	; 0x1f5
   13a70:	mov	r8, #10
   13a74:	mov	r0, r5
   13a78:	mov	r1, r4
   13a7c:	mov	r2, #3
   13a80:	str	r7, [sp, #4]
   13a84:	str	r6, [sp, #8]
   13a88:	movt	r3, #2
   13a8c:	str	r8, [sp]
   13a90:	bl	1e0a0 <flatcc_json_printer_union_field@@Base>
   13a94:	movw	r3, #512	; 0x200
   13a98:	mov	r0, #9
   13a9c:	mov	r1, r4
   13aa0:	mov	r2, #5
   13aa4:	mov	r9, #5
   13aa8:	stm	sp, {r0, r7}
   13aac:	movt	r3, #2
   13ab0:	mov	r0, r5
   13ab4:	str	r6, [sp, #8]
   13ab8:	bl	1e0a0 <flatcc_json_printer_union_field@@Base>
   13abc:	movw	r3, #522	; 0x20a
   13ac0:	mov	r0, r5
   13ac4:	mov	r1, r4
   13ac8:	mov	r2, #7
   13acc:	str	r9, [sp]
   13ad0:	str	r7, [sp, #4]
   13ad4:	str	r6, [sp, #8]
   13ad8:	movt	r3, #2
   13adc:	bl	1e0a0 <flatcc_json_printer_union_field@@Base>
   13ae0:	movw	r3, #528	; 0x210
   13ae4:	mov	r0, r5
   13ae8:	mov	r1, r4
   13aec:	mov	r2, #9
   13af0:	str	r8, [sp]
   13af4:	str	r7, [sp, #4]
   13af8:	str	r6, [sp, #8]
   13afc:	movt	r3, #2
   13b00:	bl	1db0c <flatcc_json_printer_union_vector_field@@Base>
   13b04:	sub	sp, fp, #24
   13b08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13b0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b10:	add	fp, sp, #24
   13b14:	sub	sp, sp, #16
   13b18:	movw	r3, #359	; 0x167
   13b1c:	mov	r9, #4
   13b20:	mov	r2, #0
   13b24:	mov	r4, r1
   13b28:	mov	r5, r0
   13b2c:	mov	r6, #0
   13b30:	movt	r3, #2
   13b34:	str	r9, [sp]
   13b38:	bl	15a60 <flatcc_json_printer_string_field@@Base>
   13b3c:	movw	r3, #364	; 0x16c
   13b40:	mov	r8, #9
   13b44:	mov	r0, r5
   13b48:	mov	r1, r4
   13b4c:	mov	r2, #1
   13b50:	str	r6, [sp, #4]
   13b54:	movt	r3, #2
   13b58:	str	r8, [sp]
   13b5c:	bl	16054 <flatcc_json_printer_uint32_field@@Base>
   13b60:	movw	r3, #374	; 0x176
   13b64:	mov	r0, r5
   13b68:	mov	r1, r4
   13b6c:	mov	r2, #2
   13b70:	str	r9, [sp]
   13b74:	movt	r3, #2
   13b78:	bl	15a60 <flatcc_json_printer_string_field@@Base>
   13b7c:	movw	r3, #379	; 0x17b
   13b80:	mov	r7, #8
   13b84:	mov	r0, r5
   13b88:	mov	r1, r4
   13b8c:	mov	r2, #3
   13b90:	str	r6, [sp, #8]
   13b94:	str	r6, [sp, #12]
   13b98:	movt	r3, #2
   13b9c:	str	r7, [sp]
   13ba0:	bl	16488 <flatcc_json_printer_int64_field@@Base>
   13ba4:	movw	r3, #388	; 0x184
   13ba8:	mov	r0, r5
   13bac:	mov	r1, r4
   13bb0:	mov	r2, #4
   13bb4:	str	r9, [sp]
   13bb8:	movt	r3, #2
   13bbc:	bl	15a60 <flatcc_json_printer_string_field@@Base>
   13bc0:	movw	r3, #393	; 0x189
   13bc4:	mov	r0, r5
   13bc8:	mov	r1, r4
   13bcc:	mov	r2, #5
   13bd0:	str	r6, [sp, #8]
   13bd4:	str	r6, [sp, #12]
   13bd8:	str	r7, [sp]
   13bdc:	movt	r3, #2
   13be0:	bl	16488 <flatcc_json_printer_int64_field@@Base>
   13be4:	movw	r3, #402	; 0x192
   13be8:	mov	r0, r5
   13bec:	mov	r1, r4
   13bf0:	mov	r2, #6
   13bf4:	str	r8, [sp]
   13bf8:	str	r6, [sp, #4]
   13bfc:	movt	r3, #2
   13c00:	bl	16054 <flatcc_json_printer_uint32_field@@Base>
   13c04:	movw	r3, #412	; 0x19c
   13c08:	mov	r0, r5
   13c0c:	mov	r1, r4
   13c10:	mov	r2, #7
   13c14:	str	r6, [sp, #8]
   13c18:	str	r6, [sp, #12]
   13c1c:	str	r7, [sp]
   13c20:	movt	r3, #2
   13c24:	bl	16488 <flatcc_json_printer_int64_field@@Base>
   13c28:	movw	r3, #421	; 0x1a5
   13c2c:	mov	r0, r5
   13c30:	mov	r1, r4
   13c34:	mov	r2, #8
   13c38:	str	r8, [sp]
   13c3c:	str	r6, [sp, #4]
   13c40:	movt	r3, #2
   13c44:	bl	16054 <flatcc_json_printer_uint32_field@@Base>
   13c48:	sub	sp, fp, #24
   13c4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c50:	push	{r4, r5, r6, sl, fp, lr}
   13c54:	add	fp, sp, #16
   13c58:	sub	sp, sp, #16
   13c5c:	movw	r3, #431	; 0x1af
   13c60:	mov	r5, r0
   13c64:	mov	r0, #15
   13c68:	mov	r6, #0
   13c6c:	mov	r2, #0
   13c70:	mov	r4, r1
   13c74:	str	r0, [sp]
   13c78:	movt	r3, #2
   13c7c:	mov	r0, r5
   13c80:	str	r6, [sp, #8]
   13c84:	str	r6, [sp, #12]
   13c88:	bl	16488 <flatcc_json_printer_int64_field@@Base>
   13c8c:	movw	r3, #447	; 0x1bf
   13c90:	mov	r0, #16
   13c94:	mov	r1, r4
   13c98:	mov	r2, #1
   13c9c:	stm	sp, {r0, r6}
   13ca0:	movt	r3, #2
   13ca4:	mov	r0, r5
   13ca8:	bl	16054 <flatcc_json_printer_uint32_field@@Base>
   13cac:	sub	sp, fp, #16
   13cb0:	pop	{r4, r5, r6, sl, fp, pc}
   13cb4:	push	{r4, r5, r6, sl, fp, lr}
   13cb8:	add	fp, sp, #16
   13cbc:	sub	sp, sp, #16
   13cc0:	movw	r3, #431	; 0x1af
   13cc4:	mov	r5, r0
   13cc8:	mov	r0, #15
   13ccc:	mov	r6, #0
   13cd0:	mov	r2, #0
   13cd4:	mov	r4, r1
   13cd8:	str	r0, [sp]
   13cdc:	movt	r3, #2
   13ce0:	mov	r0, r5
   13ce4:	str	r6, [sp, #8]
   13ce8:	str	r6, [sp, #12]
   13cec:	bl	16488 <flatcc_json_printer_int64_field@@Base>
   13cf0:	movw	r3, #464	; 0x1d0
   13cf4:	mov	r0, #21
   13cf8:	mov	r1, r4
   13cfc:	mov	r2, #1
   13d00:	stm	sp, {r0, r6}
   13d04:	movt	r3, #2
   13d08:	mov	r0, r5
   13d0c:	bl	16054 <flatcc_json_printer_uint32_field@@Base>
   13d10:	sub	sp, fp, #16
   13d14:	pop	{r4, r5, r6, sl, fp, pc}
   13d18:	sub	r2, r1, #2
   13d1c:	cmp	r2, #9
   13d20:	bhi	13d64 <main@@Base+0xf2c>
   13d24:	add	r1, pc, #0
   13d28:	ldr	pc, [r1, r2, lsl #2]
   13d2c:	andeq	r3, r1, r4, asr sp
   13d30:	andeq	r3, r1, ip, ror sp
   13d34:	andeq	r3, r1, ip, ror sp
   13d38:	andeq	r3, r1, ip, ror sp
   13d3c:	andeq	r3, r1, ip, ror sp
   13d40:	andeq	r3, r1, ip, ror sp
   13d44:	andeq	r3, r1, ip, lsl #27
   13d48:	muleq	r1, ip, sp
   13d4c:	andeq	r3, r1, ip, lsr #27
   13d50:			; <UNDEFINED> instruction: 0x00013dbc
   13d54:	movw	r1, #539	; 0x21b
   13d58:	mov	r2, #5
   13d5c:	movt	r1, #2
   13d60:	b	15874 <flatcc_json_printer_enum@@Base>
   13d64:	cmp	r1, #255	; 0xff
   13d68:	bne	13d7c <main@@Base+0xf44>
   13d6c:	movw	r1, #574	; 0x23e
   13d70:	mov	r2, #6
   13d74:	movt	r1, #2
   13d78:	b	15874 <flatcc_json_printer_enum@@Base>
   13d7c:	movw	r1, #251	; 0xfb
   13d80:	mov	r2, #4
   13d84:	movt	r1, #2
   13d88:	b	15874 <flatcc_json_printer_enum@@Base>
   13d8c:	movw	r1, #545	; 0x221
   13d90:	mov	r2, #8
   13d94:	movt	r1, #2
   13d98:	b	15874 <flatcc_json_printer_enum@@Base>
   13d9c:	movw	r1, #554	; 0x22a
   13da0:	mov	r2, #5
   13da4:	movt	r1, #2
   13da8:	b	15874 <flatcc_json_printer_enum@@Base>
   13dac:	movw	r1, #560	; 0x230
   13db0:	mov	r2, #7
   13db4:	movt	r1, #2
   13db8:	b	15874 <flatcc_json_printer_enum@@Base>
   13dbc:	movw	r1, #568	; 0x238
   13dc0:	mov	r2, #5
   13dc4:	movt	r1, #2
   13dc8:	b	15874 <flatcc_json_printer_enum@@Base>
   13dcc:	ldrb	r3, [r1, #8]
   13dd0:	sub	r2, r3, #2
   13dd4:	cmp	r2, #9
   13dd8:	bhi	13e18 <main@@Base+0xfe0>
   13ddc:	add	r3, pc, #0
   13de0:	ldr	pc, [r3, r2, lsl #2]
   13de4:	andeq	r3, r1, r4, lsr #28
   13de8:	andeq	r3, r1, ip, lsr lr
   13dec:	andeq	r3, r1, ip, lsr lr
   13df0:	andeq	r3, r1, ip, lsr lr
   13df4:	andeq	r3, r1, ip, lsr lr
   13df8:	andeq	r3, r1, ip, lsr lr
   13dfc:	andeq	r3, r1, r0, lsr lr
   13e00:	andeq	r3, r1, ip, lsl #28
   13e04:	andeq	r3, r1, ip, lsl #28
   13e08:	andeq	r3, r1, r0, lsr #28
   13e0c:	movw	r2, #16044	; 0x3eac
   13e10:	movt	r2, #1
   13e14:	b	1e638 <flatcc_json_printer_union_struct@@Base>
   13e18:	cmp	r3, #255	; 0xff
   13e1c:	bxne	lr
   13e20:	b	1e758 <flatcc_json_printer_union_string@@Base>
   13e24:	movw	r2, #15936	; 0x3e40
   13e28:	movt	r2, #1
   13e2c:	b	1e4c8 <flatcc_json_printer_union_table@@Base>
   13e30:	movw	r2, #15988	; 0x3e74
   13e34:	movt	r2, #1
   13e38:	b	1e638 <flatcc_json_printer_union_struct@@Base>
   13e3c:	bx	lr
   13e40:	push	{fp, lr}
   13e44:	mov	fp, sp
   13e48:	sub	sp, sp, #8
   13e4c:	mov	r3, #19
   13e50:	mov	r2, #0
   13e54:	str	r3, [sp]
   13e58:	movw	r3, #581	; 0x245
   13e5c:	str	r2, [sp, #4]
   13e60:	mov	r2, #0
   13e64:	movt	r3, #2
   13e68:	bl	163b0 <flatcc_json_printer_int32_field@@Base>
   13e6c:	mov	sp, fp
   13e70:	pop	{fp, pc}
   13e74:	push	{fp, lr}
   13e78:	mov	fp, sp
   13e7c:	sub	sp, sp, #8
   13e80:	movw	r3, #601	; 0x259
   13e84:	mov	r2, r1
   13e88:	mov	r1, #11
   13e8c:	movt	r3, #2
   13e90:	str	r1, [sp, #4]
   13e94:	mov	r1, #0
   13e98:	str	r3, [sp]
   13e9c:	mov	r3, #0
   13ea0:	bl	17168 <flatcc_json_printer_uint16_struct_field@@Base>
   13ea4:	mov	sp, fp
   13ea8:	pop	{fp, pc}
   13eac:	push	{fp, lr}
   13eb0:	mov	fp, sp
   13eb4:	sub	sp, sp, #8
   13eb8:	movw	r3, #613	; 0x265
   13ebc:	mov	r2, r1
   13ec0:	mov	r1, #10
   13ec4:	movt	r3, #2
   13ec8:	str	r1, [sp, #4]
   13ecc:	mov	r1, #0
   13ed0:	str	r3, [sp]
   13ed4:	mov	r3, #0
   13ed8:	bl	17364 <flatcc_json_printer_int32_struct_field@@Base>
   13edc:	mov	sp, fp
   13ee0:	pop	{fp, pc}
   13ee4:	andeq	r0, r0, r0

00013ee8 <flatcc_json_printer_error_string@@Base>:
   13ee8:	cmp	r0, #3
   13eec:	movwhi	r0, #1029	; 0x405
   13ef0:	movthi	r0, #2
   13ef4:	bxhi	lr
   13ef8:	movw	r1, #3956	; 0xf74
   13efc:	movt	r1, #2
   13f00:	ldr	r0, [r1, r0, lsl #2]
   13f04:	bx	lr

00013f08 <flatcc_json_printer_fmt_float@@Base>:
   13f08:	vcvt.f64.f32	d0, s0
   13f0c:	b	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   13f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f14:	add	fp, sp, #28
   13f18:	sub	sp, sp, #4
   13f1c:	vpush	{d8}
   13f20:	sub	sp, sp, #168	; 0xa8
   13f24:	cmp	r0, #0
   13f28:	beq	14738 <flatcc_json_printer_fmt_float@@Base+0x830>
   13f2c:	vmov	r3, r2, d0
   13f30:	mov	r5, #-2147483648	; 0x80000000
   13f34:	mov	r6, #0
   13f38:	vorr	d8, d0, d0
   13f3c:	add	r1, r5, #266338304	; 0xfe00000
   13f40:	lsl	r7, r2, #1
   13f44:	subs	r6, r6, r3, lsl #1
   13f48:	add	r1, r1, #1879048192	; 0x70000000
   13f4c:	orr	r7, r7, r3, lsr #31
   13f50:	sbcs	r1, r1, r7
   13f54:	bcs	13f74 <flatcc_json_printer_fmt_float@@Base+0x6c>
   13f58:	movw	r1, #1602	; 0x642
   13f5c:	movt	r1, #2
   13f60:	sub	sp, fp, #40	; 0x28
   13f64:	vpop	{d8}
   13f68:	add	sp, sp, #4
   13f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f70:	b	1296c <sprintf@plt>
   13f74:	cmn	r2, #1
   13f78:	ble	13f84 <flatcc_json_printer_fmt_float@@Base+0x7c>
   13f7c:	mov	r4, r0
   13f80:	b	13f98 <flatcc_json_printer_fmt_float@@Base+0x90>
   13f84:	mov	r1, #45	; 0x2d
   13f88:	mov	r4, r0
   13f8c:	vneg.f64	d8, d8
   13f90:	eor	r2, r2, r5
   13f94:	strb	r1, [r4], #1
   13f98:	movw	r5, #0
   13f9c:	movt	r5, #32752	; 0x7ff0
   13fa0:	eor	r1, r2, r5
   13fa4:	orrs	r1, r3, r1
   13fa8:	beq	13fc0 <flatcc_json_printer_fmt_float@@Base+0xb8>
   13fac:	orrs	r1, r3, r2
   13fb0:	bne	13fd4 <flatcc_json_printer_fmt_float@@Base+0xcc>
   13fb4:	mov	r1, #48	; 0x30
   13fb8:	strh	r1, [r4], #1
   13fbc:	b	13fcc <flatcc_json_printer_fmt_float@@Base+0xc4>
   13fc0:	movw	r1, #28265	; 0x6e69
   13fc4:	movt	r1, #102	; 0x66
   13fc8:	str	r1, [r4], #3
   13fcc:	sub	r0, r4, r0
   13fd0:	b	14720 <flatcc_json_printer_fmt_float@@Base+0x818>
   13fd4:	vmov	r6, r7, d8
   13fd8:	str	r0, [sp, #76]	; 0x4c
   13fdc:	str	r4, [sp, #100]	; 0x64
   13fe0:	ands	sl, r7, r5
   13fe4:	bfc	r7, #20, #12
   13fe8:	beq	14000 <flatcc_json_printer_fmt_float@@Base+0xf8>
   13fec:	movw	r0, #64461	; 0xfbcd
   13ff0:	orr	r8, r7, #1048576	; 0x100000
   13ff4:	movt	r0, #65535	; 0xffff
   13ff8:	add	r5, r0, sl, lsr #20
   13ffc:	b	1400c <flatcc_json_printer_fmt_float@@Base+0x104>
   14000:	movw	r5, #64462	; 0xfbce
   14004:	mov	r8, r7
   14008:	movt	r5, #65535	; 0xffff
   1400c:	mov	r4, #0
   14010:	sub	r0, fp, #88	; 0x58
   14014:	mov	r2, r6
   14018:	mov	r3, r8
   1401c:	str	r5, [sp]
   14020:	str	r4, [sp, #4]
   14024:	bl	1f674 <flatcc_json_printer_clear@@Base+0xe0>
   14028:	mov	r0, #1
   1402c:	str	r4, [sp, #4]
   14030:	sub	r9, r5, #1
   14034:	orr	r2, r0, r6, lsl #1
   14038:	lsl	r0, r8, #1
   1403c:	str	r9, [sp]
   14040:	orr	r4, r0, r6, lsr #31
   14044:	add	r0, sp, #104	; 0x68
   14048:	mov	r3, r4
   1404c:	bl	1f674 <flatcc_json_printer_clear@@Base+0xe0>
   14050:	vcmpe.f64	d8, #0.0
   14054:	vmrs	APSR_nzcv, fpscr
   14058:	ble	14758 <flatcc_json_printer_fmt_float@@Base+0x850>
   1405c:	vldr	d16, [pc, #940]	; 14410 <flatcc_json_printer_fmt_float@@Base+0x508>
   14060:	vcmpe.f64	d8, d16
   14064:	vmrs	APSR_nzcv, fpscr
   14068:	bhi	14758 <flatcc_json_printer_fmt_float@@Base+0x850>
   1406c:	orrs	r1, r6, r7
   14070:	clz	r2, sl
   14074:	mvn	r3, #60	; 0x3c
   14078:	lsl	r0, r8, #2
   1407c:	vldr	d16, [pc, #916]	; 14418 <flatcc_json_printer_fmt_float@@Base+0x510>
   14080:	movwne	r1, #1
   14084:	lsr	r2, r2, #5
   14088:	orrs	r1, r1, r2
   1408c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14090:	orreq	r4, r0, r6, lsr #30
   14094:	lsl	r0, r6, #2
   14098:	lslne	r0, r6, #1
   1409c:	subs	r0, r0, #1
   140a0:	sub	r2, r3, r2
   140a4:	vmov	s0, r2
   140a8:	sbc	r2, r4, #0
   140ac:	cmp	r1, #0
   140b0:	vcvt.f64.s32	d17, s0
   140b4:	ldr	sl, [sp, #112]	; 0x70
   140b8:	subeq	r9, r5, #2
   140bc:	vmul.f64	d16, d17, d16
   140c0:	vcvt.s32.f64	s0, d16
   140c4:	vcmpe.f64	d16, #0.0
   140c8:	sub	r1, r9, sl
   140cc:	rsb	r3, r1, #32
   140d0:	lsl	r7, r0, r1
   140d4:	lsr	r3, r0, r3
   140d8:	orr	r6, r3, r2, lsl r1
   140dc:	sub	r2, r1, #32
   140e0:	sub	r1, fp, #88	; 0x58
   140e4:	cmp	r2, #0
   140e8:	lslge	r6, r0, r2
   140ec:	add	r2, r1, #8
   140f0:	add	r1, sp, #104	; 0x68
   140f4:	movwge	r7, #0
   140f8:	vmov	r0, s0
   140fc:	vmrs	APSR_nzcv, fpscr
   14100:	add	r1, r1, #8
   14104:	str	r1, [sp, #96]	; 0x60
   14108:	bmi	14120 <flatcc_json_printer_fmt_float@@Base+0x218>
   1410c:	vcvt.f64.s32	d17, s0
   14110:	vsub.f64	d16, d16, d17
   14114:	vcmp.f64	d16, #0.0
   14118:	vmrs	APSR_nzcv, fpscr
   1411c:	addne	r0, r0, #1
   14120:	mov	r1, #0
   14124:	ldrd	r4, [r2]
   14128:	str	r2, [sp, #92]	; 0x5c
   1412c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14130:	ldr	r3, [fp, #-84]	; 0xffffffac
   14134:	str	r1, [sp, #20]
   14138:	movw	r1, #347	; 0x15b
   1413c:	add	r0, r0, r1
   14140:	asr	r1, r0, #31
   14144:	add	r0, r0, r1, lsr #29
   14148:	mvn	r1, #15
   1414c:	stm	sp, {r4, r5}
   14150:	and	r0, r1, r0, lsl #1
   14154:	movw	r1, #2504	; 0x9c8
   14158:	movt	r1, #2
   1415c:	add	r0, r1, r0
   14160:	ldrsh	r8, [r0, #24]
   14164:	ldrd	r4, [r0, #16]
   14168:	str	r8, [sp, #16]
   1416c:	str	r0, [sp, #36]	; 0x24
   14170:	sub	r0, fp, #88	; 0x58
   14174:	str	r5, [sp, #12]
   14178:	str	r4, [sp, #8]
   1417c:	bl	1f718 <flatcc_json_printer_clear@@Base+0x184>
   14180:	mov	r0, #0
   14184:	str	sl, [sp]
   14188:	mov	r2, r7
   1418c:	mov	r3, r6
   14190:	stmib	sp, {r0, r4, r5, r8}
   14194:	str	r0, [sp, #20]
   14198:	sub	r0, fp, #56	; 0x38
   1419c:	bl	1f718 <flatcc_json_printer_clear@@Base+0x184>
   141a0:	sub	sl, fp, #56	; 0x38
   141a4:	ldm	sl, {r6, r7, sl}
   141a8:	ldr	r9, [sp, #96]	; 0x60
   141ac:	ldr	r2, [sp, #104]	; 0x68
   141b0:	ldr	r3, [sp, #108]	; 0x6c
   141b4:	ldrd	r0, [r9]
   141b8:	stm	sp, {r0, r1, r4, r5, r8}
   141bc:	mov	r0, #0
   141c0:	mov	r8, #0
   141c4:	str	r0, [sp, #20]
   141c8:	add	r0, sp, #104	; 0x68
   141cc:	bl	1f718 <flatcc_json_printer_clear@@Base+0x184>
   141d0:	ldr	r0, [sp, #92]	; 0x5c
   141d4:	subs	r2, r6, #1
   141d8:	add	ip, sp, #8
   141dc:	sbc	r3, r7, #0
   141e0:	ldr	r4, [r0]
   141e4:	ldr	r0, [r0, #4]
   141e8:	ldr	r5, [r9]
   141ec:	ldr	r1, [sp, #108]	; 0x6c
   141f0:	str	r0, [sp, #72]	; 0x48
   141f4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   141f8:	str	r0, [sp, #60]	; 0x3c
   141fc:	ldr	r0, [fp, #-84]	; 0xffffffac
   14200:	str	r0, [sp, #64]	; 0x40
   14204:	ldr	r0, [sp, #104]	; 0x68
   14208:	str	r5, [sp, #48]	; 0x30
   1420c:	stm	sp, {r5, r8}
   14210:	stm	ip, {r2, r3, sl}
   14214:	mov	r2, #0
   14218:	str	r2, [sp, #20]
   1421c:	adds	r8, r0, #1
   14220:	sub	r0, fp, #56	; 0x38
   14224:	adc	sl, r1, #0
   14228:	mov	r2, r8
   1422c:	mov	r3, sl
   14230:	bl	1f77c <flatcc_json_printer_clear@@Base+0x1e8>
   14234:	rsb	r1, r4, #0
   14238:	add	ip, r4, #32
   1423c:	movw	r7, #1233	; 0x4d1
   14240:	mov	r5, #1
   14244:	str	r4, [sp, #68]	; 0x44
   14248:	str	r8, [sp, #52]	; 0x34
   1424c:	lsr	r0, r8, r1
   14250:	orr	r2, r0, sl, lsl ip
   14254:	mvn	r0, #31
   14258:	sub	r3, r0, r4
   1425c:	movw	r0, #14609	; 0x3911
   14260:	movt	r0, #1
   14264:	cmp	r3, #0
   14268:	mla	r7, r4, r7, r0
   1426c:	movw	r0, #3896	; 0xf38
   14270:	lsrge	r2, sl, r3
   14274:	lsl	r4, r5, r1
   14278:	add	lr, r5, r7, asr #12
   1427c:	movt	r0, #2
   14280:	ldr	r6, [r0, lr, lsl #2]
   14284:	cmp	r6, r2
   14288:	lsr	r6, r5, ip
   1428c:	asrhi	lr, r7, #12
   14290:	cmp	r3, #0
   14294:	ldr	r7, [fp, #-56]	; 0xffffffc8
   14298:	movwge	r4, #0
   1429c:	lslge	r6, r5, r3
   142a0:	subs	ip, r4, #1
   142a4:	sbc	r3, r6, #0
   142a8:	and	r9, ip, r8
   142ac:	cmp	lr, #0
   142b0:	str	r3, [sp, #92]	; 0x5c
   142b4:	and	r8, r3, sl
   142b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   142bc:	str	sl, [sp, #56]	; 0x38
   142c0:	str	r6, [sp, #44]	; 0x2c
   142c4:	str	r4, [sp, #40]	; 0x28
   142c8:	str	ip, [sp, #96]	; 0x60
   142cc:	ble	14408 <flatcc_json_printer_fmt_float@@Base+0x500>
   142d0:	str	r3, [sp, #80]	; 0x50
   142d4:	ldr	r0, [r0, lr, lsl #2]
   142d8:	sub	lr, lr, #1
   142dc:	mov	r4, #0
   142e0:	ldr	ip, [sp, #100]	; 0x64
   142e4:	b	14314 <flatcc_json_printer_fmt_float@@Base+0x40c>
   142e8:	add	r3, lr, #1
   142ec:	cmp	r3, #2
   142f0:	blt	14420 <flatcc_json_printer_fmt_float@@Base+0x518>
   142f4:	ldr	r0, [sp, #84]	; 0x54
   142f8:	ldr	r4, [sp, #88]	; 0x58
   142fc:	movw	r3, #52429	; 0xcccd
   14300:	sub	lr, lr, #1
   14304:	movt	r3, #52428	; 0xcccc
   14308:	umull	r3, r6, r0, r3
   1430c:	add	r4, r4, #1
   14310:	lsr	r0, r6, #3
   14314:	udiv	r3, r2, r0
   14318:	str	r4, [sp, #88]	; 0x58
   1431c:	str	r0, [sp, #84]	; 0x54
   14320:	add	r6, r3, #48	; 0x30
   14324:	mls	r2, r3, r0, r2
   14328:	rsb	r0, r1, #32
   1432c:	strb	r6, [ip, r4]
   14330:	sub	r6, r1, #32
   14334:	lsl	r4, r2, r1
   14338:	lsr	r3, r2, r0
   1433c:	cmp	r6, #0
   14340:	movwge	r4, #0
   14344:	lslge	r3, r2, r6
   14348:	adds	r4, r4, r9
   1434c:	adc	sl, r3, r8
   14350:	subs	r3, r4, r7
   14354:	ldr	r3, [sp, #80]	; 0x50
   14358:	sbcs	r3, sl, r3
   1435c:	bcs	142e8 <flatcc_json_printer_fmt_float@@Base+0x3e0>
   14360:	str	lr, [sp, #96]	; 0x60
   14364:	mov	r8, r0
   14368:	mov	r2, #0
   1436c:	mov	r9, ip
   14370:	mov	r5, r1
   14374:	ldr	r0, [sp, #48]	; 0x30
   14378:	stm	sp, {r0, r2}
   1437c:	ldr	r0, [sp, #60]	; 0x3c
   14380:	str	r0, [sp, #8]
   14384:	ldr	r0, [sp, #64]	; 0x40
   14388:	str	r0, [sp, #12]
   1438c:	ldr	r0, [sp, #68]	; 0x44
   14390:	str	r0, [sp, #16]
   14394:	ldr	r0, [sp, #72]	; 0x48
   14398:	str	r0, [sp, #20]
   1439c:	sub	r0, fp, #72	; 0x48
   143a0:	ldr	r2, [sp, #52]	; 0x34
   143a4:	ldr	r3, [sp, #56]	; 0x38
   143a8:	bl	1f77c <flatcc_json_printer_clear@@Base+0x1e8>
   143ac:	ldr	r0, [sp, #84]	; 0x54
   143b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   143b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   143b8:	str	r7, [sp]
   143bc:	cmp	r6, #0
   143c0:	mov	ip, #1
   143c4:	ldr	r7, [sp, #80]	; 0x50
   143c8:	str	r4, [sp, #8]
   143cc:	str	sl, [sp, #12]
   143d0:	str	ip, [sp, #24]
   143d4:	lsr	r1, r0, r8
   143d8:	lslge	r1, r0, r6
   143dc:	lsl	r6, r0, r5
   143e0:	mov	r0, #0
   143e4:	str	r7, [sp, #4]
   143e8:	movwge	r6, #0
   143ec:	str	r1, [sp, #20]
   143f0:	str	r0, [sp, #28]
   143f4:	str	r6, [sp, #16]
   143f8:	ldr	r0, [sp, #88]	; 0x58
   143fc:	add	r6, r0, #1
   14400:	mov	r0, r9
   14404:	b	14544 <flatcc_json_printer_fmt_float@@Base+0x63c>
   14408:	mov	r6, #0
   1440c:	b	1442c <flatcc_json_printer_fmt_float@@Base+0x524>
   14410:			; <UNDEFINED> instruction: 0xffffffff
   14414:	svcvc	0x00efffff
   14418:			; <UNDEFINED> instruction: 0x509f79fe
   1441c:	svccc	0x00d34413
   14420:	ldr	r0, [sp, #88]	; 0x58
   14424:	ldr	r3, [sp, #80]	; 0x50
   14428:	add	r6, r0, #1
   1442c:	rsb	r0, r1, #32
   14430:	mov	sl, #0
   14434:	mov	ip, #10
   14438:	str	r0, [sp, #84]	; 0x54
   1443c:	sub	r0, r1, #32
   14440:	str	r1, [sp, #88]	; 0x58
   14444:	str	r0, [sp, #80]	; 0x50
   14448:	ldr	r2, [sp, #88]	; 0x58
   1444c:	umull	r4, r1, r9, ip
   14450:	mov	r0, r3
   14454:	sub	lr, lr, #1
   14458:	lsr	r3, r4, r2
   1445c:	add	r2, r8, r8, lsl #2
   14460:	add	r1, r1, r2, lsl #1
   14464:	ldr	r2, [sp, #84]	; 0x54
   14468:	orr	r2, r3, r1, lsl r2
   1446c:	ldr	r3, [sp, #80]	; 0x50
   14470:	cmp	r3, #0
   14474:	lsrge	r2, r1, r3
   14478:	ldr	r3, [sp, #100]	; 0x64
   1447c:	add	r2, r2, #48	; 0x30
   14480:	strb	r2, [r3, r6]
   14484:	umull	r5, r2, r5, ip
   14488:	add	r3, sl, sl, lsl #2
   1448c:	add	r6, r6, #1
   14490:	add	sl, r2, r3, lsl #1
   14494:	add	r3, r0, r0, lsl #2
   14498:	ldr	r0, [sp, #92]	; 0x5c
   1449c:	umull	r7, r2, r7, ip
   144a0:	add	r3, r2, r3, lsl #1
   144a4:	and	r8, r1, r0
   144a8:	ldr	r0, [sp, #96]	; 0x60
   144ac:	and	r9, r4, r0
   144b0:	subs	r1, r9, r7
   144b4:	sbcs	r1, r8, r3
   144b8:	bcs	14448 <flatcc_json_printer_fmt_float@@Base+0x540>
   144bc:	str	lr, [sp, #96]	; 0x60
   144c0:	mov	r0, #0
   144c4:	str	r7, [fp, #-56]	; 0xffffffc8
   144c8:	str	r3, [fp, #-52]	; 0xffffffcc
   144cc:	mov	r4, r3
   144d0:	ldr	r1, [sp, #48]	; 0x30
   144d4:	str	r0, [sp, #4]
   144d8:	str	r1, [sp]
   144dc:	ldr	r0, [sp, #60]	; 0x3c
   144e0:	str	r0, [sp, #8]
   144e4:	ldr	r0, [sp, #64]	; 0x40
   144e8:	str	r0, [sp, #12]
   144ec:	ldr	r0, [sp, #68]	; 0x44
   144f0:	str	r0, [sp, #16]
   144f4:	ldr	r0, [sp, #72]	; 0x48
   144f8:	str	r0, [sp, #20]
   144fc:	sub	r0, fp, #72	; 0x48
   14500:	ldr	r2, [sp, #52]	; 0x34
   14504:	ldr	r3, [sp, #56]	; 0x38
   14508:	bl	1f77c <flatcc_json_printer_clear@@Base+0x1e8>
   1450c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14510:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14514:	str	r7, [sp]
   14518:	stmib	sp, {r4, r9}
   1451c:	str	r8, [sp, #12]
   14520:	add	r3, sp, #20
   14524:	ldr	r2, [sp, #40]	; 0x28
   14528:	str	r2, [sp, #16]
   1452c:	ldr	r2, [sp, #44]	; 0x2c
   14530:	stm	r3, {r2, r5, sl}
   14534:	umull	r2, r3, r0, r5
   14538:	mla	r0, r0, sl, r3
   1453c:	mla	r3, r1, r5, r0
   14540:	ldr	r0, [sp, #100]	; 0x64
   14544:	mov	r1, r6
   14548:	bl	1f7d4 <flatcc_json_printer_clear@@Base+0x240>
   1454c:	ldr	r4, [sp, #96]	; 0x60
   14550:	cmp	r0, #0
   14554:	beq	145e4 <flatcc_json_printer_fmt_float@@Base+0x6dc>
   14558:	ldr	r0, [sp, #36]	; 0x24
   1455c:	cmp	r6, #3
   14560:	ldr	r1, [sp, #100]	; 0x64
   14564:	ldrsh	r5, [r0, #26]
   14568:	sub	r0, r6, #1
   1456c:	movwlt	r0, #1
   14570:	sub	r7, r4, r5
   14574:	rsb	r3, r7, #0
   14578:	cmp	r0, r3
   1457c:	movge	r0, r3
   14580:	cmn	r7, #1
   14584:	ble	1460c <flatcc_json_printer_fmt_float@@Base+0x704>
   14588:	cmp	r7, #3
   1458c:	bcs	146f0 <flatcc_json_printer_fmt_float@@Base+0x7e8>
   14590:	cmp	r7, #0
   14594:	beq	14710 <flatcc_json_printer_fmt_float@@Base+0x808>
   14598:	add	r0, r1, r6
   1459c:	mvn	r1, r4
   145a0:	add	r1, r1, r5
   145a4:	cmn	r1, #2
   145a8:	mvnle	r1, #1
   145ac:	add	r1, r4, r1
   145b0:	add	r1, r1, #2
   145b4:	sub	r2, r1, r5
   145b8:	mov	r1, #48	; 0x30
   145bc:	bl	12948 <memset@plt>
   145c0:	add	r0, r4, #1
   145c4:	ldr	r1, [sp, #100]	; 0x64
   145c8:	sub	r0, r0, r5
   145cc:	ldr	r5, [sp, #76]	; 0x4c
   145d0:	sub	r0, r0, #1
   145d4:	add	r6, r6, #1
   145d8:	cmp	r0, #1
   145dc:	bgt	145d0 <flatcc_json_printer_fmt_float@@Base+0x6c8>
   145e0:	b	14714 <flatcc_json_printer_fmt_float@@Base+0x80c>
   145e4:	ldr	r4, [sp, #100]	; 0x64
   145e8:	movw	r1, #1616	; 0x650
   145ec:	vmov	r2, r3, d8
   145f0:	movt	r1, #2
   145f4:	mov	r0, r4
   145f8:	bl	1296c <sprintf@plt>
   145fc:	ldr	r1, [sp, #76]	; 0x4c
   14600:	sub	r1, r4, r1
   14604:	add	r0, r1, r0
   14608:	b	14720 <flatcc_json_printer_fmt_float@@Base+0x818>
   1460c:	cmp	r6, r3
   14610:	bgt	14680 <flatcc_json_printer_fmt_float@@Base+0x778>
   14614:	add	r2, r7, r6
   14618:	cmn	r2, #2
   1461c:	blt	14680 <flatcc_json_printer_fmt_float@@Base+0x778>
   14620:	add	r8, r1, #2
   14624:	rsb	r0, r6, #0
   14628:	add	r2, r8, r3
   1462c:	add	r0, r2, r0
   14630:	mov	r2, r6
   14634:	bl	128a0 <memmove@plt>
   14638:	ldr	r1, [sp, #100]	; 0x64
   1463c:	movw	r0, #11824	; 0x2e30
   14640:	strh	r0, [r1]
   14644:	rsb	r0, r6, #2
   14648:	sub	r4, r0, r7
   1464c:	mov	r0, #2
   14650:	cmp	r4, #3
   14654:	blt	14678 <flatcc_json_printer_fmt_float@@Base+0x770>
   14658:	ldr	r0, [sp, #96]	; 0x60
   1465c:	mov	r1, #48	; 0x30
   14660:	sub	r0, r5, r0
   14664:	sub	r2, r0, r6
   14668:	mov	r0, r8
   1466c:	bl	12948 <memset@plt>
   14670:	ldr	r1, [sp, #100]	; 0x64
   14674:	mov	r0, r4
   14678:	add	r6, r0, r6
   1467c:	b	14710 <flatcc_json_printer_fmt_float@@Base+0x808>
   14680:	cmp	r6, #2
   14684:	blt	146f0 <flatcc_json_printer_fmt_float@@Base+0x7e8>
   14688:	cmp	r0, #1
   1468c:	blt	146b4 <flatcc_json_printer_fmt_float@@Base+0x7ac>
   14690:	add	r2, r1, r6
   14694:	mov	r4, #0
   14698:	mov	r3, r2
   1469c:	ldrb	r5, [r3, #-1]!
   146a0:	add	r4, r4, #1
   146a4:	cmp	r4, r0
   146a8:	strb	r5, [r2]
   146ac:	mov	r2, r3
   146b0:	blt	1469c <flatcc_json_printer_fmt_float@@Base+0x794>
   146b4:	ldr	r5, [sp, #76]	; 0x4c
   146b8:	sub	r3, r6, r0
   146bc:	mov	r2, #46	; 0x2e
   146c0:	adds	r0, r0, r7
   146c4:	strb	r2, [r1, r3]
   146c8:	add	r3, r6, #1
   146cc:	beq	14730 <flatcc_json_printer_fmt_float@@Base+0x828>
   146d0:	mov	r2, #101	; 0x65
   146d4:	add	r4, r6, #2
   146d8:	strb	r2, [r1, r3]
   146dc:	add	r1, r1, r4
   146e0:	bl	1f5d4 <flatcc_json_printer_clear@@Base+0x40>
   146e4:	ldr	r1, [sp, #100]	; 0x64
   146e8:	add	r6, r0, r4
   146ec:	b	14714 <flatcc_json_printer_fmt_float@@Base+0x80c>
   146f0:	mov	r0, #101	; 0x65
   146f4:	add	r4, r6, #1
   146f8:	strb	r0, [r1, r6]
   146fc:	add	r1, r1, r4
   14700:	mov	r0, r7
   14704:	bl	1f5d4 <flatcc_json_printer_clear@@Base+0x40>
   14708:	ldr	r1, [sp, #100]	; 0x64
   1470c:	add	r6, r0, r4
   14710:	ldr	r5, [sp, #76]	; 0x4c
   14714:	mov	r0, #0
   14718:	strb	r0, [r1, r6]!
   1471c:	sub	r0, r1, r5
   14720:	sub	sp, fp, #40	; 0x28
   14724:	vpop	{d8}
   14728:	add	sp, sp, #4
   1472c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14730:	mov	r6, r3
   14734:	b	14714 <flatcc_json_printer_fmt_float@@Base+0x80c>
   14738:	movw	r0, #1471	; 0x5bf
   1473c:	movw	r1, #1475	; 0x5c3
   14740:	movw	r3, #1562	; 0x61a
   14744:	mov	r2, #189	; 0xbd
   14748:	movt	r0, #2
   1474c:	movt	r1, #2
   14750:	movt	r3, #2
   14754:	bl	1299c <__assert_fail@plt>
   14758:	movw	r0, #1622	; 0x656
   1475c:	movw	r1, #1475	; 0x5c3
   14760:	movw	r3, #1659	; 0x67b
   14764:	mov	r2, #138	; 0x8a
   14768:	movt	r0, #2
   1476c:	movt	r1, #2
   14770:	movt	r3, #2
   14774:	bl	1299c <__assert_fail@plt>

00014778 <flatcc_json_printer_fmt_double@@Base>:
   14778:	b	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>

0001477c <flatcc_json_printer_fmt_bool@@Base>:
   1477c:	cmp	r1, #0
   14780:	movwne	r1, #29300	; 0x7274
   14784:	movtne	r1, #25973	; 0x6575
   14788:	strne	r1, [r0]
   1478c:	movne	r0, #4
   14790:	bxne	lr
   14794:	mov	r1, #101	; 0x65
   14798:	strb	r1, [r0, #4]
   1479c:	movw	r1, #24934	; 0x6166
   147a0:	movt	r1, #29548	; 0x736c
   147a4:	str	r1, [r0]
   147a8:	mov	r0, #5
   147ac:	bx	lr

000147b0 <flatcc_json_printer_string@@Base>:
   147b0:	b	147b4 <flatcc_json_printer_string@@Base+0x4>
   147b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147b8:	add	fp, sp, #28
   147bc:	sub	sp, sp, #12
   147c0:	mov	r5, r0
   147c4:	mov	r4, r0
   147c8:	mov	r6, r1
   147cc:	mov	r3, r2
   147d0:	ldr	r0, [r5, #20]!
   147d4:	add	r1, r0, #1
   147d8:	str	r5, [sp, #4]
   147dc:	str	r1, [r5]
   147e0:	mov	r1, #34	; 0x22
   147e4:	strb	r1, [r0]
   147e8:	b	14948 <flatcc_json_printer_string@@Base+0x198>
   147ec:	mov	r2, #92	; 0x5c
   147f0:	strb	r2, [r1]
   147f4:	mvn	r1, #7
   147f8:	uxtab	r2, r1, sl
   147fc:	uxtb	r1, sl
   14800:	cmp	r2, #5
   14804:	bhi	1483c <flatcc_json_printer_string@@Base+0x8c>
   14808:	add	r3, pc, #0
   1480c:	ldr	pc, [r3, r2, lsl #2]
   14810:	andeq	r4, r1, r8, lsr #16
   14814:	ldrdeq	r4, [r1], -ip
   14818:	strdeq	r4, [r1], -r0
   1481c:	andeq	r4, r1, r0, ror #16
   14820:	andeq	r4, r1, r4, lsl #18
   14824:	andeq	r4, r1, r8, lsl r9
   14828:	ldr	r1, [r5]
   1482c:	add	r2, r1, #1
   14830:	str	r2, [r5]
   14834:	mov	r2, #98	; 0x62
   14838:	b	1493c <flatcc_json_printer_string@@Base+0x18c>
   1483c:	cmp	r1, #92	; 0x5c
   14840:	beq	1492c <flatcc_json_printer_string@@Base+0x17c>
   14844:	cmp	r1, #34	; 0x22
   14848:	bne	14860 <flatcc_json_printer_string@@Base+0xb0>
   1484c:	ldr	r1, [r5]
   14850:	add	r2, r1, #1
   14854:	str	r2, [r5]
   14858:	mov	r2, #34	; 0x22
   1485c:	b	1493c <flatcc_json_printer_string@@Base+0x18c>
   14860:	ldr	r2, [r5]
   14864:	mov	r7, #48	; 0x30
   14868:	cmp	r1, #160	; 0xa0
   1486c:	add	r3, r2, #1
   14870:	str	r3, [r5]
   14874:	mov	r3, #117	; 0x75
   14878:	strb	r3, [r2]
   1487c:	ldr	r2, [r5]
   14880:	add	r3, r2, #1
   14884:	str	r3, [r5]
   14888:	strb	r7, [r2]
   1488c:	ldr	r2, [r5]
   14890:	add	r3, r2, #1
   14894:	str	r3, [r5]
   14898:	strb	r7, [r2]
   1489c:	ldr	r2, [r5]
   148a0:	add	r3, r2, #1
   148a4:	str	r3, [r5]
   148a8:	mov	r3, #87	; 0x57
   148ac:	movwcc	r3, #48	; 0x30
   148b0:	add	r1, r3, r1, lsr #4
   148b4:	mov	r3, #87	; 0x57
   148b8:	strb	r1, [r2]
   148bc:	ldr	r1, [r5]
   148c0:	add	r2, r1, #1
   148c4:	str	r2, [r5]
   148c8:	and	r2, sl, #15
   148cc:	cmp	r2, #10
   148d0:	movwcc	r3, #48	; 0x30
   148d4:	add	r2, r3, r2
   148d8:	b	1493c <flatcc_json_printer_string@@Base+0x18c>
   148dc:	ldr	r1, [r5]
   148e0:	add	r2, r1, #1
   148e4:	str	r2, [r5]
   148e8:	mov	r2, #116	; 0x74
   148ec:	b	1493c <flatcc_json_printer_string@@Base+0x18c>
   148f0:	ldr	r1, [r5]
   148f4:	add	r2, r1, #1
   148f8:	str	r2, [r5]
   148fc:	mov	r2, #110	; 0x6e
   14900:	b	1493c <flatcc_json_printer_string@@Base+0x18c>
   14904:	ldr	r1, [r5]
   14908:	add	r2, r1, #1
   1490c:	str	r2, [r5]
   14910:	mov	r2, #102	; 0x66
   14914:	b	1493c <flatcc_json_printer_string@@Base+0x18c>
   14918:	ldr	r1, [r5]
   1491c:	add	r2, r1, #1
   14920:	str	r2, [r5]
   14924:	mov	r2, #114	; 0x72
   14928:	b	1493c <flatcc_json_printer_string@@Base+0x18c>
   1492c:	ldr	r1, [r5]
   14930:	add	r2, r1, #1
   14934:	str	r2, [r5]
   14938:	mov	r2, #92	; 0x5c
   1493c:	strb	r2, [r1]
   14940:	sub	r3, r0, #1
   14944:	add	r6, r8, #1
   14948:	ldrb	sl, [r6]
   1494c:	mov	r8, r6
   14950:	cmp	sl, #32
   14954:	bcc	14974 <flatcc_json_printer_string@@Base+0x1c4>
   14958:	uxtb	r0, sl
   1495c:	cmp	r0, #34	; 0x22
   14960:	cmpne	r0, #92	; 0x5c
   14964:	beq	14974 <flatcc_json_printer_string@@Base+0x1c4>
   14968:	ldrb	sl, [r8, #1]!
   1496c:	cmp	sl, #31
   14970:	bhi	14958 <flatcc_json_printer_string@@Base+0x1a8>
   14974:	ldr	r0, [r4, #20]
   14978:	ldr	r1, [r4, #16]
   1497c:	sub	r9, r8, r6
   14980:	add	r2, r0, r9
   14984:	cmp	r2, r1
   14988:	bcs	149a8 <flatcc_json_printer_string@@Base+0x1f8>
   1498c:	mov	r1, r6
   14990:	mov	r2, r9
   14994:	mov	r6, r3
   14998:	bl	128b8 <memcpy@plt>
   1499c:	mov	r2, r6
   149a0:	mov	r7, r9
   149a4:	b	14a34 <flatcc_json_printer_string@@Base+0x284>
   149a8:	cmp	r0, r1
   149ac:	str	r3, [sp, #8]
   149b0:	bcc	149cc <flatcc_json_printer_string@@Base+0x21c>
   149b4:	ldr	r2, [r4, #44]	; 0x2c
   149b8:	mov	r0, r4
   149bc:	mov	r1, #0
   149c0:	blx	r2
   149c4:	ldr	r1, [r4, #16]
   149c8:	ldr	r0, [r4, #20]
   149cc:	sub	r5, r1, r0
   149d0:	mov	r7, r9
   149d4:	cmp	r5, r9
   149d8:	bcs	14a20 <flatcc_json_printer_string@@Base+0x270>
   149dc:	mov	r1, r6
   149e0:	mov	r2, r5
   149e4:	bl	128b8 <memcpy@plt>
   149e8:	ldr	r0, [r4, #20]
   149ec:	ldr	r2, [r4, #44]	; 0x2c
   149f0:	mov	r1, #0
   149f4:	add	r0, r0, r5
   149f8:	str	r0, [r4, #20]
   149fc:	mov	r0, r4
   14a00:	blx	r2
   14a04:	ldr	r1, [r4, #16]
   14a08:	ldr	r0, [r4, #20]
   14a0c:	sub	r7, r7, r5
   14a10:	add	r6, r6, r5
   14a14:	sub	r5, r1, r0
   14a18:	cmp	r7, r5
   14a1c:	bhi	149dc <flatcc_json_printer_string@@Base+0x22c>
   14a20:	ldr	r5, [sp, #4]
   14a24:	mov	r1, r6
   14a28:	mov	r2, r7
   14a2c:	bl	128b8 <memcpy@plt>
   14a30:	ldr	r2, [sp, #8]
   14a34:	ldr	r0, [r5]
   14a38:	add	r1, r0, r7
   14a3c:	add	r0, r1, #1
   14a40:	str	r0, [r5]
   14a44:	subs	r0, r2, r9
   14a48:	bne	147ec <flatcc_json_printer_string@@Base+0x3c>
   14a4c:	mov	r0, #34	; 0x22
   14a50:	strb	r0, [r1]
   14a54:	sub	sp, fp, #28
   14a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014a5c <flatcc_json_printer_write@@Base>:
   14a5c:	push	{r4, r5, r6, r7, fp, lr}
   14a60:	add	fp, sp, #16
   14a64:	mov	r6, r1
   14a68:	mov	r5, r0
   14a6c:	ldr	r1, [r0, #16]
   14a70:	ldr	r0, [r0, #20]
   14a74:	mov	r4, r2
   14a78:	add	r2, r0, r2
   14a7c:	cmp	r2, r1
   14a80:	bcc	14af4 <flatcc_json_printer_write@@Base+0x98>
   14a84:	cmp	r0, r1
   14a88:	bcc	14aa4 <flatcc_json_printer_write@@Base+0x48>
   14a8c:	ldr	r2, [r5, #44]	; 0x2c
   14a90:	mov	r0, r5
   14a94:	mov	r1, #0
   14a98:	blx	r2
   14a9c:	ldr	r1, [r5, #16]
   14aa0:	ldr	r0, [r5, #20]
   14aa4:	sub	r7, r1, r0
   14aa8:	cmp	r7, r4
   14aac:	bcs	14af4 <flatcc_json_printer_write@@Base+0x98>
   14ab0:	mov	r1, r6
   14ab4:	mov	r2, r7
   14ab8:	bl	128b8 <memcpy@plt>
   14abc:	ldr	r0, [r5, #20]
   14ac0:	ldr	r2, [r5, #44]	; 0x2c
   14ac4:	mov	r1, #0
   14ac8:	add	r0, r0, r7
   14acc:	str	r0, [r5, #20]
   14ad0:	mov	r0, r5
   14ad4:	blx	r2
   14ad8:	ldr	r1, [r5, #16]
   14adc:	ldr	r0, [r5, #20]
   14ae0:	sub	r4, r4, r7
   14ae4:	add	r6, r6, r7
   14ae8:	sub	r7, r1, r0
   14aec:	cmp	r4, r7
   14af0:	bhi	14ab0 <flatcc_json_printer_write@@Base+0x54>
   14af4:	mov	r1, r6
   14af8:	mov	r2, r4
   14afc:	bl	128b8 <memcpy@plt>
   14b00:	ldr	r0, [r5, #20]
   14b04:	add	r0, r0, r4
   14b08:	str	r0, [r5, #20]
   14b0c:	pop	{r4, r5, r6, r7, fp, pc}

00014b10 <flatcc_json_printer_nl@@Base>:
   14b10:	ldr	r1, [r0, #20]
   14b14:	add	r2, r1, #1
   14b18:	str	r2, [r0, #20]
   14b1c:	mov	r2, #10
   14b20:	strb	r2, [r1]
   14b24:	ldr	r1, [r0, #16]
   14b28:	ldr	r2, [r0, #20]
   14b2c:	cmp	r2, r1
   14b30:	bxcc	lr
   14b34:	ldr	r2, [r0, #44]	; 0x2c
   14b38:	mov	r1, #0
   14b3c:	bx	r2

00014b40 <flatcc_json_printer_char@@Base>:
   14b40:	ldr	r2, [r0, #20]
   14b44:	add	r3, r2, #1
   14b48:	str	r3, [r0, #20]
   14b4c:	strb	r1, [r2]
   14b50:	bx	lr

00014b54 <flatcc_json_printer_indent@@Base>:
   14b54:	push	{r4, r5, r6, sl, fp, lr}
   14b58:	add	fp, sp, #16
   14b5c:	mov	r4, r0
   14b60:	ldr	r1, [r0, #16]
   14b64:	ldr	r0, [r0, #20]
   14b68:	ldrb	r2, [r4, #25]
   14b6c:	ldr	r3, [r4, #32]
   14b70:	mla	r6, r3, r2, r0
   14b74:	mul	r5, r3, r2
   14b78:	cmp	r6, r1
   14b7c:	bls	14bec <flatcc_json_printer_indent@@Base+0x98>
   14b80:	cmp	r0, r1
   14b84:	bcc	14ba0 <flatcc_json_printer_indent@@Base+0x4c>
   14b88:	ldr	r2, [r4, #44]	; 0x2c
   14b8c:	mov	r0, r4
   14b90:	mov	r1, #0
   14b94:	blx	r2
   14b98:	ldr	r1, [r4, #16]
   14b9c:	ldr	r0, [r4, #20]
   14ba0:	sub	r6, r1, r0
   14ba4:	cmp	r6, r5
   14ba8:	bcs	14bec <flatcc_json_printer_indent@@Base+0x98>
   14bac:	mov	r1, #32
   14bb0:	mov	r2, r6
   14bb4:	bl	12948 <memset@plt>
   14bb8:	ldr	r0, [r4, #20]
   14bbc:	ldr	r2, [r4, #44]	; 0x2c
   14bc0:	mov	r1, #0
   14bc4:	add	r0, r0, r6
   14bc8:	str	r0, [r4, #20]
   14bcc:	mov	r0, r4
   14bd0:	blx	r2
   14bd4:	ldr	r1, [r4, #16]
   14bd8:	ldr	r0, [r4, #20]
   14bdc:	sub	r5, r5, r6
   14be0:	sub	r6, r1, r0
   14be4:	cmp	r5, r6
   14be8:	bhi	14bac <flatcc_json_printer_indent@@Base+0x58>
   14bec:	mov	r1, #32
   14bf0:	mov	r2, r5
   14bf4:	bl	12948 <memset@plt>
   14bf8:	ldr	r0, [r4, #20]
   14bfc:	add	r0, r0, r5
   14c00:	str	r0, [r4, #20]
   14c04:	pop	{r4, r5, r6, sl, fp, pc}

00014c08 <flatcc_json_printer_add_level@@Base>:
   14c08:	ldr	r2, [r0, #32]
   14c0c:	add	r1, r2, r1
   14c10:	str	r1, [r0, #32]
   14c14:	bx	lr

00014c18 <flatcc_json_printer_get_level@@Base>:
   14c18:	ldr	r0, [r0, #32]
   14c1c:	bx	lr

00014c20 <flatcc_json_printer_uint8@@Base>:
   14c20:	push	{r4, sl, fp, lr}
   14c24:	add	fp, sp, #8
   14c28:	mov	r2, r1
   14c2c:	ldr	r1, [r0, #20]
   14c30:	mov	r4, r0
   14c34:	mov	r0, r2
   14c38:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   14c3c:	ldr	r1, [r4, #20]
   14c40:	add	r0, r1, r0
   14c44:	str	r0, [r4, #20]
   14c48:	pop	{r4, sl, fp, pc}
   14c4c:	mov	r2, #0
   14c50:	cmp	r0, #100	; 0x64
   14c54:	bcc	14c9c <flatcc_json_printer_uint8@@Base+0x7c>
   14c58:	strb	r2, [r1, #3]
   14c5c:	movw	r2, #34079	; 0x851f
   14c60:	movt	r2, #20971	; 0x51eb
   14c64:	umull	r2, r3, r0, r2
   14c68:	mov	r2, #48	; 0x30
   14c6c:	orr	r2, r2, r3, lsr #5
   14c70:	strb	r2, [r1]
   14c74:	lsr	r2, r3, #5
   14c78:	mov	r3, #100	; 0x64
   14c7c:	mls	r0, r2, r3, r0
   14c80:	movw	r2, #1947	; 0x79b
   14c84:	movt	r2, #2
   14c88:	add	r0, r2, r0, lsl #1
   14c8c:	ldrh	r0, [r0]
   14c90:	strh	r0, [r1, #1]
   14c94:	mov	r0, #3
   14c98:	bx	lr
   14c9c:	cmp	r0, #10
   14ca0:	bcc	14cdc <flatcc_json_printer_uint8@@Base+0xbc>
   14ca4:	strb	r2, [r1, #2]
   14ca8:	movw	r2, #34079	; 0x851f
   14cac:	movt	r2, #20971	; 0x51eb
   14cb0:	umull	r2, r3, r0, r2
   14cb4:	lsr	r2, r3, #5
   14cb8:	mov	r3, #100	; 0x64
   14cbc:	mls	r0, r2, r3, r0
   14cc0:	movw	r2, #1947	; 0x79b
   14cc4:	movt	r2, #2
   14cc8:	add	r0, r2, r0, lsl #1
   14ccc:	ldrh	r0, [r0]
   14cd0:	strh	r0, [r1]
   14cd4:	mov	r0, #2
   14cd8:	bx	lr
   14cdc:	add	r0, r0, #48	; 0x30
   14ce0:	strb	r2, [r1, #1]
   14ce4:	strb	r0, [r1]
   14ce8:	mov	r0, #1
   14cec:	bx	lr

00014cf0 <flatcc_json_printer_uint16@@Base>:
   14cf0:	push	{r4, sl, fp, lr}
   14cf4:	add	fp, sp, #8
   14cf8:	mov	r2, r1
   14cfc:	ldr	r1, [r0, #20]
   14d00:	mov	r4, r0
   14d04:	mov	r0, r2
   14d08:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   14d0c:	ldr	r1, [r4, #20]
   14d10:	add	r0, r1, r0
   14d14:	str	r0, [r4, #20]
   14d18:	pop	{r4, sl, fp, pc}
   14d1c:	mov	ip, r0
   14d20:	cmp	r0, #1000	; 0x3e8
   14d24:	bcc	14d3c <flatcc_json_printer_uint16@@Base+0x4c>
   14d28:	movw	r3, #9999	; 0x270f
   14d2c:	mov	r0, #4
   14d30:	cmp	ip, r3
   14d34:	movwhi	r0, #5
   14d38:	b	14d60 <flatcc_json_printer_uint16@@Base+0x70>
   14d3c:	cmp	ip, #100	; 0x64
   14d40:	bcc	14d54 <flatcc_json_printer_uint16@@Base+0x64>
   14d44:	mov	r0, #0
   14d48:	strb	r0, [r1, #3]!
   14d4c:	mov	r0, #3
   14d50:	b	14dfc <flatcc_json_printer_uint16@@Base+0x10c>
   14d54:	mov	r0, #1
   14d58:	cmp	ip, #9
   14d5c:	movwhi	r0, #2
   14d60:	mov	r3, #0
   14d64:	tst	r0, #1
   14d68:	strb	r3, [r1, r0]!
   14d6c:	bne	14db4 <flatcc_json_printer_uint16@@Base+0xc4>
   14d70:	cmp	r0, #2
   14d74:	beq	14e3c <flatcc_json_printer_uint16@@Base+0x14c>
   14d78:	cmp	r0, #4
   14d7c:	bxne	lr
   14d80:	movw	r2, #34079	; 0x851f
   14d84:	movt	r2, #20971	; 0x51eb
   14d88:	umull	r2, r3, ip, r2
   14d8c:	lsr	r3, r3, #5
   14d90:	mov	r2, #100	; 0x64
   14d94:	mls	r2, r3, r2, ip
   14d98:	uxth	ip, r2
   14d9c:	movw	r2, #1947	; 0x79b
   14da0:	movt	r2, #2
   14da4:	add	r2, r2, ip, lsl #1
   14da8:	ldrh	r2, [r2]
   14dac:	strh	r2, [r1, #-2]!
   14db0:	b	14e40 <flatcc_json_printer_uint16@@Base+0x150>
   14db4:	cmp	r0, #1
   14db8:	beq	14e74 <flatcc_json_printer_uint16@@Base+0x184>
   14dbc:	cmp	r0, #3
   14dc0:	beq	14dfc <flatcc_json_printer_uint16@@Base+0x10c>
   14dc4:	cmp	r0, #5
   14dc8:	bne	14e70 <flatcc_json_printer_uint16@@Base+0x180>
   14dcc:	movw	r3, #34079	; 0x851f
   14dd0:	movt	r3, #20971	; 0x51eb
   14dd4:	umull	r3, r2, ip, r3
   14dd8:	lsr	r2, r2, #5
   14ddc:	mov	r3, #100	; 0x64
   14de0:	mls	ip, r2, r3, ip
   14de4:	movw	r3, #1947	; 0x79b
   14de8:	movt	r3, #2
   14dec:	add	r3, r3, ip, lsl #1
   14df0:	mov	ip, r2
   14df4:	ldrh	r3, [r3]
   14df8:	strh	r3, [r1, #-2]!
   14dfc:	movw	r3, #34079	; 0x851f
   14e00:	uxth	r2, ip
   14e04:	movt	r3, #20971	; 0x51eb
   14e08:	umull	r2, r3, r2, r3
   14e0c:	lsr	r3, r3, #5
   14e10:	mov	r2, #100	; 0x64
   14e14:	mls	r2, r3, r2, ip
   14e18:	uxth	ip, r2
   14e1c:	movw	r2, #1947	; 0x79b
   14e20:	movt	r2, #2
   14e24:	add	r2, r2, ip, lsl #1
   14e28:	ldrh	r2, [r2]
   14e2c:	strh	r2, [r1, #-2]!
   14e30:	add	r2, r3, #48	; 0x30
   14e34:	strb	r2, [r1, #-1]
   14e38:	bx	lr
   14e3c:	mov	r3, ip
   14e40:	uxth	ip, r3
   14e44:	movw	r3, #34079	; 0x851f
   14e48:	movt	r3, #20971	; 0x51eb
   14e4c:	umull	r3, r2, ip, r3
   14e50:	lsr	r2, r2, #5
   14e54:	mov	r3, #100	; 0x64
   14e58:	mls	r2, r2, r3, ip
   14e5c:	movw	r3, #1947	; 0x79b
   14e60:	movt	r3, #2
   14e64:	add	r2, r3, r2, lsl #1
   14e68:	ldrh	r2, [r2]
   14e6c:	strh	r2, [r1, #-2]
   14e70:	bx	lr
   14e74:	mov	r3, ip
   14e78:	b	14e30 <flatcc_json_printer_uint16@@Base+0x140>

00014e7c <flatcc_json_printer_uint32@@Base>:
   14e7c:	push	{r4, sl, fp, lr}
   14e80:	add	fp, sp, #8
   14e84:	mov	r2, r1
   14e88:	ldr	r1, [r0, #20]
   14e8c:	mov	r4, r0
   14e90:	mov	r0, r2
   14e94:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   14e98:	ldr	r1, [r4, #20]
   14e9c:	add	r0, r1, r0
   14ea0:	str	r0, [r4, #20]
   14ea4:	pop	{r4, sl, fp, pc}
   14ea8:	mov	ip, r0
   14eac:	movw	r0, #10000	; 0x2710
   14eb0:	cmp	ip, r0
   14eb4:	bcc	14ee8 <flatcc_json_printer_uint32@@Base+0x6c>
   14eb8:	movw	r0, #38528	; 0x9680
   14ebc:	movt	r0, #152	; 0x98
   14ec0:	cmp	ip, r0
   14ec4:	bcc	14f04 <flatcc_json_printer_uint32@@Base+0x88>
   14ec8:	movw	r0, #51712	; 0xca00
   14ecc:	movt	r0, #15258	; 0x3b9a
   14ed0:	cmp	ip, r0
   14ed4:	bcc	14f34 <flatcc_json_printer_uint32@@Base+0xb8>
   14ed8:	mov	r0, #0
   14edc:	strb	r0, [r1, #10]!
   14ee0:	mov	r0, #10
   14ee4:	b	14f70 <flatcc_json_printer_uint32@@Base+0xf4>
   14ee8:	cmp	ip, #100	; 0x64
   14eec:	bcc	14f24 <flatcc_json_printer_uint32@@Base+0xa8>
   14ef0:	lsr	r3, ip, #3
   14ef4:	mov	r0, #3
   14ef8:	cmp	r3, #124	; 0x7c
   14efc:	movwhi	r0, #4
   14f00:	b	14f60 <flatcc_json_printer_uint32@@Base+0xe4>
   14f04:	movw	r0, #16960	; 0x4240
   14f08:	movt	r0, #15
   14f0c:	cmp	ip, r0
   14f10:	bcc	14f4c <flatcc_json_printer_uint32@@Base+0xd0>
   14f14:	mov	r0, #0
   14f18:	strb	r0, [r1, #7]!
   14f1c:	mov	r0, #7
   14f20:	b	150a4 <flatcc_json_printer_uint32@@Base+0x228>
   14f24:	mov	r0, #1
   14f28:	cmp	ip, #9
   14f2c:	movwhi	r0, #2
   14f30:	b	14f60 <flatcc_json_printer_uint32@@Base+0xe4>
   14f34:	movw	r3, #57599	; 0xe0ff
   14f38:	mov	r0, #8
   14f3c:	movt	r3, #1525	; 0x5f5
   14f40:	cmp	ip, r3
   14f44:	movwhi	r0, #9
   14f48:	b	14f60 <flatcc_json_printer_uint32@@Base+0xe4>
   14f4c:	movw	r3, #34463	; 0x869f
   14f50:	mov	r0, #5
   14f54:	movt	r3, #1
   14f58:	cmp	ip, r3
   14f5c:	movwhi	r0, #6
   14f60:	mov	r3, #0
   14f64:	tst	r0, #1
   14f68:	strb	r3, [r1, r0]!
   14f6c:	bne	150a4 <flatcc_json_printer_uint32@@Base+0x228>
   14f70:	lsr	r2, r0, #1
   14f74:	orr	r2, r2, r0, lsl #3
   14f78:	eor	r3, r2, #4
   14f7c:	sbfx	r2, r3, #0, #4
   14f80:	cmp	r2, #0
   14f84:	blt	150a0 <flatcc_json_printer_uint32@@Base+0x224>
   14f88:	and	r2, r3, #15
   14f8c:	add	r3, pc, #0
   14f90:	ldr	pc, [r3, r2, lsl #2]
   14f94:	andeq	r4, r1, r4, ror #31
   14f98:			; <UNDEFINED> instruction: 0x00014fb4
   14f9c:	andeq	r5, r1, r0, lsr #1
   14fa0:	andeq	r5, r1, r0, lsr #1
   14fa4:	andeq	r5, r1, r0, lsr #1
   14fa8:	andeq	r5, r1, r4, ror r0
   14fac:	andeq	r5, r1, r4, asr #32
   14fb0:	andeq	r5, r1, r4, lsl r0
   14fb4:	movw	r2, #34079	; 0x851f
   14fb8:	movt	r2, #20971	; 0x51eb
   14fbc:	umull	r2, r3, ip, r2
   14fc0:	lsr	r2, r3, #5
   14fc4:	mov	r3, #100	; 0x64
   14fc8:	mls	ip, r2, r3, ip
   14fcc:	movw	r3, #1947	; 0x79b
   14fd0:	movt	r3, #2
   14fd4:	add	r3, r3, ip, lsl #1
   14fd8:	mov	ip, r2
   14fdc:	ldrh	r3, [r3]
   14fe0:	strh	r3, [r1, #-2]!
   14fe4:	movw	r2, #34079	; 0x851f
   14fe8:	movt	r2, #20971	; 0x51eb
   14fec:	umull	r2, r3, ip, r2
   14ff0:	lsr	r2, r3, #5
   14ff4:	mov	r3, #100	; 0x64
   14ff8:	mls	ip, r2, r3, ip
   14ffc:	movw	r3, #1947	; 0x79b
   15000:	movt	r3, #2
   15004:	add	r3, r3, ip, lsl #1
   15008:	mov	ip, r2
   1500c:	ldrh	r3, [r3]
   15010:	strh	r3, [r1, #-2]!
   15014:	movw	r2, #34079	; 0x851f
   15018:	movt	r2, #20971	; 0x51eb
   1501c:	umull	r2, r3, ip, r2
   15020:	lsr	r2, r3, #5
   15024:	mov	r3, #100	; 0x64
   15028:	mls	ip, r2, r3, ip
   1502c:	movw	r3, #1947	; 0x79b
   15030:	movt	r3, #2
   15034:	add	r3, r3, ip, lsl #1
   15038:	mov	ip, r2
   1503c:	ldrh	r3, [r3]
   15040:	strh	r3, [r1, #-2]!
   15044:	movw	r2, #34079	; 0x851f
   15048:	movt	r2, #20971	; 0x51eb
   1504c:	umull	r2, r3, ip, r2
   15050:	lsr	r2, r3, #5
   15054:	mov	r3, #100	; 0x64
   15058:	mls	ip, r2, r3, ip
   1505c:	movw	r3, #1947	; 0x79b
   15060:	movt	r3, #2
   15064:	add	r3, r3, ip, lsl #1
   15068:	mov	ip, r2
   1506c:	ldrh	r3, [r3]
   15070:	strh	r3, [r1, #-2]!
   15074:	movw	r2, #34079	; 0x851f
   15078:	movt	r2, #20971	; 0x51eb
   1507c:	umull	r2, r3, ip, r2
   15080:	lsr	r2, r3, #5
   15084:	mov	r3, #100	; 0x64
   15088:	mls	r2, r2, r3, ip
   1508c:	movw	r3, #1947	; 0x79b
   15090:	movt	r3, #2
   15094:	add	r2, r3, r2, lsl #1
   15098:	ldrh	r2, [r2]
   1509c:	strh	r2, [r1, #-2]
   150a0:	bx	lr
   150a4:	add	r3, r0, #7
   150a8:	ubfx	r2, r3, #1, #3
   150ac:	orr	r3, r2, r3, lsl #3
   150b0:	sbfx	r2, r3, #0, #4
   150b4:	cmp	r2, #0
   150b8:	bxlt	lr
   150bc:	and	r2, r3, #15
   150c0:	add	r3, pc, #0
   150c4:	ldr	pc, [r3, r2, lsl #2]
   150c8:	andeq	r5, r1, r8, ror #1
   150cc:	andeq	r5, r1, r0, lsr #1
   150d0:	andeq	r5, r1, r0, lsr #1
   150d4:	andeq	r5, r1, r0, lsr #1
   150d8:	andeq	r5, r1, r8, lsr #3
   150dc:	andeq	r5, r1, r8, ror r1
   150e0:	andeq	r5, r1, r8, asr #2
   150e4:	andeq	r5, r1, r8, lsl r1
   150e8:	movw	r2, #34079	; 0x851f
   150ec:	movt	r2, #20971	; 0x51eb
   150f0:	umull	r2, r3, ip, r2
   150f4:	lsr	r2, r3, #5
   150f8:	mov	r3, #100	; 0x64
   150fc:	mls	ip, r2, r3, ip
   15100:	movw	r3, #1947	; 0x79b
   15104:	movt	r3, #2
   15108:	add	r3, r3, ip, lsl #1
   1510c:	mov	ip, r2
   15110:	ldrh	r3, [r3]
   15114:	strh	r3, [r1, #-2]!
   15118:	movw	r2, #34079	; 0x851f
   1511c:	movt	r2, #20971	; 0x51eb
   15120:	umull	r2, r3, ip, r2
   15124:	lsr	r2, r3, #5
   15128:	mov	r3, #100	; 0x64
   1512c:	mls	ip, r2, r3, ip
   15130:	movw	r3, #1947	; 0x79b
   15134:	movt	r3, #2
   15138:	add	r3, r3, ip, lsl #1
   1513c:	mov	ip, r2
   15140:	ldrh	r3, [r3]
   15144:	strh	r3, [r1, #-2]!
   15148:	movw	r2, #34079	; 0x851f
   1514c:	movt	r2, #20971	; 0x51eb
   15150:	umull	r2, r3, ip, r2
   15154:	lsr	r2, r3, #5
   15158:	mov	r3, #100	; 0x64
   1515c:	mls	ip, r2, r3, ip
   15160:	movw	r3, #1947	; 0x79b
   15164:	movt	r3, #2
   15168:	add	r3, r3, ip, lsl #1
   1516c:	mov	ip, r2
   15170:	ldrh	r3, [r3]
   15174:	strh	r3, [r1, #-2]!
   15178:	movw	r2, #34079	; 0x851f
   1517c:	movt	r2, #20971	; 0x51eb
   15180:	umull	r2, r3, ip, r2
   15184:	lsr	r2, r3, #5
   15188:	mov	r3, #100	; 0x64
   1518c:	mls	ip, r2, r3, ip
   15190:	movw	r3, #1947	; 0x79b
   15194:	movt	r3, #2
   15198:	add	r3, r3, ip, lsl #1
   1519c:	mov	ip, r2
   151a0:	ldrh	r3, [r3]
   151a4:	strh	r3, [r1, #-2]!
   151a8:	add	r2, ip, #48	; 0x30
   151ac:	strb	r2, [r1, #-1]
   151b0:	bx	lr

000151b4 <flatcc_json_printer_uint64@@Base>:
   151b4:	push	{r4, sl, fp, lr}
   151b8:	add	fp, sp, #8
   151bc:	mov	r1, r3
   151c0:	mov	r3, r2
   151c4:	ldr	r2, [r0, #20]
   151c8:	mov	r4, r0
   151cc:	mov	r0, r3
   151d0:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   151d4:	ldr	r1, [r4, #20]
   151d8:	add	r0, r1, r0
   151dc:	str	r0, [r4, #20]
   151e0:	pop	{r4, sl, fp, pc}
   151e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   151e8:	add	fp, sp, #24
   151ec:	mov	r7, r0
   151f0:	movw	r0, #51711	; 0xc9ff
   151f4:	mov	r4, r2
   151f8:	movt	r0, #15258	; 0x3b9a
   151fc:	subs	r0, r0, r7
   15200:	rscs	r0, r1, #0
   15204:	bcc	15218 <flatcc_json_printer_uint64@@Base+0x64>
   15208:	mov	r0, r7
   1520c:	mov	r1, r4
   15210:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15214:	b	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   15218:	mov	r6, r1
   1521c:	movw	r1, #40960	; 0xa000
   15220:	movw	r0, #2328	; 0x918
   15224:	movt	r1, #20082	; 0x4e72
   15228:	subs	r1, r7, r1
   1522c:	sbcs	r0, r6, r0
   15230:	bcc	15290 <flatcc_json_printer_uint64@@Base+0xdc>
   15234:	movw	r1, #0
   15238:	movw	r0, #34546	; 0x86f2
   1523c:	movt	r1, #28609	; 0x6fc1
   15240:	movt	r0, #35	; 0x23
   15244:	subs	r1, r7, r1
   15248:	sbcs	r0, r6, r0
   1524c:	bcc	152c0 <flatcc_json_printer_uint64@@Base+0x10c>
   15250:	movw	r1, #0
   15254:	movw	r0, #46771	; 0xb6b3
   15258:	movt	r1, #42852	; 0xa764
   1525c:	movt	r0, #3552	; 0xde0
   15260:	subs	r1, r7, r1
   15264:	sbcs	r0, r6, r0
   15268:	bcc	15308 <flatcc_json_printer_uint64@@Base+0x154>
   1526c:	movw	r1, #65535	; 0xffff
   15270:	movw	r0, #8964	; 0x2304
   15274:	mov	r8, #19
   15278:	movt	r1, #35303	; 0x89e7
   1527c:	movt	r0, #35527	; 0x8ac7
   15280:	subs	r1, r1, r7
   15284:	sbcs	r0, r0, r6
   15288:	movwcc	r8, #20
   1528c:	b	15348 <flatcc_json_printer_uint64@@Base+0x194>
   15290:	movw	r0, #59392	; 0xe800
   15294:	movt	r0, #18550	; 0x4876
   15298:	subs	r0, r7, r0
   1529c:	sbcs	r0, r6, #23
   152a0:	bcc	152ec <flatcc_json_printer_uint64@@Base+0x138>
   152a4:	movw	r0, #4095	; 0xfff
   152a8:	mov	r8, #12
   152ac:	movt	r0, #54437	; 0xd4a5
   152b0:	subs	r0, r0, r7
   152b4:	rscs	r0, r6, #232	; 0xe8
   152b8:	movwcc	r8, #13
   152bc:	b	15348 <flatcc_json_printer_uint64@@Base+0x194>
   152c0:	movw	r1, #32768	; 0x8000
   152c4:	movw	r0, #36222	; 0x8d7e
   152c8:	movt	r1, #42182	; 0xa4c6
   152cc:	movt	r0, #3
   152d0:	subs	r1, r7, r1
   152d4:	sbcs	r0, r6, r0
   152d8:	bcc	1532c <flatcc_json_printer_uint64@@Base+0x178>
   152dc:	mov	r0, #0
   152e0:	mov	r8, #16
   152e4:	strb	r0, [r4, #16]!
   152e8:	b	15408 <flatcc_json_printer_uint64@@Base+0x254>
   152ec:	movw	r0, #58367	; 0xe3ff
   152f0:	mov	r8, #10
   152f4:	movt	r0, #21515	; 0x540b
   152f8:	subs	r0, r0, r7
   152fc:	rscs	r0, r6, #2
   15300:	movwcc	r8, #11
   15304:	b	15348 <flatcc_json_printer_uint64@@Base+0x194>
   15308:	movw	r1, #65535	; 0xffff
   1530c:	movw	r0, #17784	; 0x4578
   15310:	mov	r8, #17
   15314:	movt	r1, #23945	; 0x5d89
   15318:	movt	r0, #355	; 0x163
   1531c:	subs	r1, r1, r7
   15320:	sbcs	r0, r0, r6
   15324:	movwcc	r8, #18
   15328:	b	15348 <flatcc_json_printer_uint64@@Base+0x194>
   1532c:	movw	r1, #16383	; 0x3fff
   15330:	movw	r0, #23283	; 0x5af3
   15334:	mov	r8, #14
   15338:	movt	r1, #4218	; 0x107a
   1533c:	subs	r1, r1, r7
   15340:	sbcs	r0, r0, r6
   15344:	movwcc	r8, #15
   15348:	mov	r0, #0
   1534c:	tst	r8, #1
   15350:	strb	r0, [r4, r8]!
   15354:	bne	154ec <flatcc_json_printer_uint64@@Base+0x338>
   15358:	sub	r0, r8, #10
   1535c:	cmp	r0, #10
   15360:	bhi	15660 <flatcc_json_printer_uint64@@Base+0x4ac>
   15364:	add	r1, pc, #0
   15368:	ldr	pc, [r1, r0, lsl #2]
   1536c:			; <UNDEFINED> instruction: 0x000154b0
   15370:	andeq	r5, r1, r0, ror #12
   15374:	andeq	r5, r1, r8, ror r4
   15378:	andeq	r5, r1, r0, ror #12
   1537c:	andeq	r5, r1, r0, asr #8
   15380:	andeq	r5, r1, r0, ror #12
   15384:	andeq	r5, r1, r8, lsl #8
   15388:	andeq	r5, r1, r0, ror #12
   1538c:	ldrdeq	r5, [r1], -r0
   15390:	andeq	r5, r1, r0, ror #12
   15394:	muleq	r1, r8, r3
   15398:	mov	r0, r7
   1539c:	mov	r1, r6
   153a0:	mov	r2, #100	; 0x64
   153a4:	mov	r3, #0
   153a8:	mov	r5, #100	; 0x64
   153ac:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   153b0:	movw	r2, #1947	; 0x79b
   153b4:	mov	r6, r1
   153b8:	mls	r1, r0, r5, r7
   153bc:	mov	r7, r0
   153c0:	movt	r2, #2
   153c4:	add	r1, r2, r1, lsl #1
   153c8:	ldrh	r1, [r1]
   153cc:	strh	r1, [r4, #-2]!
   153d0:	mov	r0, r7
   153d4:	mov	r1, r6
   153d8:	mov	r2, #100	; 0x64
   153dc:	mov	r3, #0
   153e0:	mov	r5, #100	; 0x64
   153e4:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   153e8:	movw	r2, #1947	; 0x79b
   153ec:	mov	r6, r1
   153f0:	mls	r1, r0, r5, r7
   153f4:	mov	r7, r0
   153f8:	movt	r2, #2
   153fc:	add	r1, r2, r1, lsl #1
   15400:	ldrh	r1, [r1]
   15404:	strh	r1, [r4, #-2]!
   15408:	mov	r0, r7
   1540c:	mov	r1, r6
   15410:	mov	r2, #100	; 0x64
   15414:	mov	r3, #0
   15418:	mov	r5, #100	; 0x64
   1541c:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   15420:	movw	r2, #1947	; 0x79b
   15424:	mov	r6, r1
   15428:	mls	r1, r0, r5, r7
   1542c:	mov	r7, r0
   15430:	movt	r2, #2
   15434:	add	r1, r2, r1, lsl #1
   15438:	ldrh	r1, [r1]
   1543c:	strh	r1, [r4, #-2]!
   15440:	mov	r0, r7
   15444:	mov	r1, r6
   15448:	mov	r2, #100	; 0x64
   1544c:	mov	r3, #0
   15450:	mov	r5, #100	; 0x64
   15454:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   15458:	movw	r2, #1947	; 0x79b
   1545c:	mov	r6, r1
   15460:	mls	r1, r0, r5, r7
   15464:	mov	r7, r0
   15468:	movt	r2, #2
   1546c:	add	r1, r2, r1, lsl #1
   15470:	ldrh	r1, [r1]
   15474:	strh	r1, [r4, #-2]!
   15478:	mov	r0, r7
   1547c:	mov	r1, r6
   15480:	mov	r2, #100	; 0x64
   15484:	mov	r3, #0
   15488:	mov	r5, #100	; 0x64
   1548c:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   15490:	movw	r2, #1947	; 0x79b
   15494:	mov	r6, r1
   15498:	mls	r1, r0, r5, r7
   1549c:	mov	r7, r0
   154a0:	movt	r2, #2
   154a4:	add	r1, r2, r1, lsl #1
   154a8:	ldrh	r1, [r1]
   154ac:	strh	r1, [r4, #-2]!
   154b0:	mov	r0, r7
   154b4:	mov	r1, r6
   154b8:	mov	r2, #100	; 0x64
   154bc:	mov	r3, #0
   154c0:	mov	r5, #100	; 0x64
   154c4:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   154c8:	movw	r2, #1947	; 0x79b
   154cc:	mov	r6, r1
   154d0:	mls	r1, r0, r5, r7
   154d4:	mov	r7, r0
   154d8:	movt	r2, #2
   154dc:	add	r1, r2, r1, lsl #1
   154e0:	ldrh	r1, [r1]
   154e4:	strh	r1, [r4, #-2]!
   154e8:	b	15660 <flatcc_json_printer_uint64@@Base+0x4ac>
   154ec:	sub	r0, r8, #11
   154f0:	cmp	r0, #8
   154f4:	bhi	15660 <flatcc_json_printer_uint64@@Base+0x4ac>
   154f8:	add	r1, pc, #0
   154fc:	ldr	pc, [r1, r0, lsl #2]
   15500:	strdeq	r5, [r1], -ip
   15504:	andeq	r5, r1, r0, ror #12
   15508:	andeq	r5, r1, r4, asr #11
   1550c:	andeq	r5, r1, r0, ror #12
   15510:	andeq	r5, r1, ip, lsl #11
   15514:	andeq	r5, r1, r0, ror #12
   15518:	andeq	r5, r1, r4, asr r5
   1551c:	andeq	r5, r1, r0, ror #12
   15520:	andeq	r5, r1, r4, lsr #10
   15524:	mov	r0, r7
   15528:	mov	r1, r6
   1552c:	mov	r2, #100	; 0x64
   15530:	mov	r3, #0
   15534:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   15538:	mov	r7, r0
   1553c:	movw	r0, #1947	; 0x79b
   15540:	mov	r6, r1
   15544:	movt	r0, #2
   15548:	add	r0, r0, r2, lsl #1
   1554c:	ldrh	r0, [r0]
   15550:	strh	r0, [r4, #-2]!
   15554:	mov	r0, r7
   15558:	mov	r1, r6
   1555c:	mov	r2, #100	; 0x64
   15560:	mov	r3, #0
   15564:	mov	r5, #100	; 0x64
   15568:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   1556c:	movw	r2, #1947	; 0x79b
   15570:	mov	r6, r1
   15574:	mls	r1, r0, r5, r7
   15578:	mov	r7, r0
   1557c:	movt	r2, #2
   15580:	add	r1, r2, r1, lsl #1
   15584:	ldrh	r1, [r1]
   15588:	strh	r1, [r4, #-2]!
   1558c:	mov	r0, r7
   15590:	mov	r1, r6
   15594:	mov	r2, #100	; 0x64
   15598:	mov	r3, #0
   1559c:	mov	r5, #100	; 0x64
   155a0:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   155a4:	movw	r2, #1947	; 0x79b
   155a8:	mov	r6, r1
   155ac:	mls	r1, r0, r5, r7
   155b0:	mov	r7, r0
   155b4:	movt	r2, #2
   155b8:	add	r1, r2, r1, lsl #1
   155bc:	ldrh	r1, [r1]
   155c0:	strh	r1, [r4, #-2]!
   155c4:	mov	r0, r7
   155c8:	mov	r1, r6
   155cc:	mov	r2, #100	; 0x64
   155d0:	mov	r3, #0
   155d4:	mov	r5, #100	; 0x64
   155d8:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   155dc:	movw	r2, #1947	; 0x79b
   155e0:	mov	r6, r1
   155e4:	mls	r1, r0, r5, r7
   155e8:	mov	r7, r0
   155ec:	movt	r2, #2
   155f0:	add	r1, r2, r1, lsl #1
   155f4:	ldrh	r1, [r1]
   155f8:	strh	r1, [r4, #-2]!
   155fc:	mov	r0, r7
   15600:	mov	r1, r6
   15604:	mov	r2, #100	; 0x64
   15608:	mov	r3, #0
   1560c:	mov	r9, #100	; 0x64
   15610:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   15614:	mov	r2, #10
   15618:	mov	r3, #0
   1561c:	mov	r5, r0
   15620:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   15624:	orr	r0, r2, #48	; 0x30
   15628:	movw	r1, #1947	; 0x79b
   1562c:	mov	r2, #1000	; 0x3e8
   15630:	mov	r3, #0
   15634:	strb	r0, [r4, #-3]!
   15638:	mls	r0, r5, r9, r7
   1563c:	movt	r1, #2
   15640:	add	r0, r1, r0, lsl #1
   15644:	mov	r1, r6
   15648:	ldrh	r0, [r0]
   1564c:	strh	r0, [r4, #1]
   15650:	mov	r0, r7
   15654:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   15658:	mov	r7, r0
   1565c:	mov	r6, r1
   15660:	mov	r0, r7
   15664:	mov	r1, r6
   15668:	mov	r2, #100	; 0x64
   1566c:	mov	r3, #0
   15670:	mov	r5, #100	; 0x64
   15674:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   15678:	mls	r2, r0, r5, r7
   1567c:	movw	r5, #1947	; 0x79b
   15680:	mov	r3, #0
   15684:	movt	r5, #2
   15688:	add	r2, r5, r2, lsl #1
   1568c:	ldrh	r2, [r2]
   15690:	strh	r2, [r4, #-2]
   15694:	mov	r2, #100	; 0x64
   15698:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   1569c:	add	r0, r5, r2, lsl #1
   156a0:	mov	r1, r6
   156a4:	movw	r2, #10000	; 0x2710
   156a8:	mov	r3, #0
   156ac:	ldrh	r0, [r0]
   156b0:	strh	r0, [r4, #-4]
   156b4:	mov	r0, r7
   156b8:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   156bc:	mov	r2, #100	; 0x64
   156c0:	mov	r3, #0
   156c4:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   156c8:	add	r0, r5, r2, lsl #1
   156cc:	movw	r2, #16960	; 0x4240
   156d0:	mov	r1, r6
   156d4:	mov	r3, #0
   156d8:	ldrh	r0, [r0]
   156dc:	movt	r2, #15
   156e0:	strh	r0, [r4, #-6]
   156e4:	mov	r0, r7
   156e8:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   156ec:	mov	r2, #100	; 0x64
   156f0:	mov	r3, #0
   156f4:	bl	1fb14 <flatcc_json_printer_clear@@Base+0x580>
   156f8:	add	r0, r5, r2, lsl #1
   156fc:	ldrh	r0, [r0]
   15700:	strh	r0, [r4, #-8]
   15704:	mov	r0, r8
   15708:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001570c <flatcc_json_printer_int8@@Base>:
   1570c:	push	{r4, r5, fp, lr}
   15710:	add	fp, sp, #8
   15714:	ubfx	r5, r1, #7, #1
   15718:	ldr	r2, [r0, #20]
   1571c:	cmn	r1, #1
   15720:	mov	r4, r0
   15724:	movle	r0, #45	; 0x2d
   15728:	rsble	r1, r1, #0
   1572c:	strble	r0, [r2], #1
   15730:	uxtb	r0, r1
   15734:	mov	r1, r2
   15738:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   1573c:	ldr	r1, [r4, #20]
   15740:	add	r0, r0, r5
   15744:	add	r0, r1, r0
   15748:	str	r0, [r4, #20]
   1574c:	pop	{r4, r5, fp, pc}

00015750 <flatcc_json_printer_int16@@Base>:
   15750:	push	{r4, r5, fp, lr}
   15754:	add	fp, sp, #8
   15758:	ubfx	r5, r1, #15, #1
   1575c:	ldr	r2, [r0, #20]
   15760:	cmn	r1, #1
   15764:	mov	r4, r0
   15768:	movle	r0, #45	; 0x2d
   1576c:	rsble	r1, r1, #0
   15770:	strble	r0, [r2], #1
   15774:	uxth	r0, r1
   15778:	mov	r1, r2
   1577c:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   15780:	ldr	r1, [r4, #20]
   15784:	add	r0, r0, r5
   15788:	add	r0, r1, r0
   1578c:	str	r0, [r4, #20]
   15790:	pop	{r4, r5, fp, pc}

00015794 <flatcc_json_printer_int32@@Base>:
   15794:	push	{r4, r5, fp, lr}
   15798:	add	fp, sp, #8
   1579c:	mov	r2, r1
   157a0:	lsr	r5, r1, #31
   157a4:	ldr	r1, [r0, #20]
   157a8:	mov	r4, r0
   157ac:	cmn	r2, #1
   157b0:	movle	r0, #45	; 0x2d
   157b4:	rsble	r2, r2, #0
   157b8:	strble	r0, [r1], #1
   157bc:	mov	r0, r2
   157c0:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   157c4:	ldr	r1, [r4, #20]
   157c8:	add	r0, r0, r5
   157cc:	add	r0, r1, r0
   157d0:	str	r0, [r4, #20]
   157d4:	pop	{r4, r5, fp, pc}

000157d8 <flatcc_json_printer_int64@@Base>:
   157d8:	push	{r4, r5, fp, lr}
   157dc:	add	fp, sp, #8
   157e0:	mov	r1, r3
   157e4:	mov	r3, r2
   157e8:	ldr	r2, [r0, #20]
   157ec:	mov	r4, r0
   157f0:	lsr	r5, r1, #31
   157f4:	cmn	r1, #1
   157f8:	bgt	1580c <flatcc_json_printer_int64@@Base+0x34>
   157fc:	mov	r0, #45	; 0x2d
   15800:	rsbs	r3, r3, #0
   15804:	strb	r0, [r2], #1
   15808:	rsc	r1, r1, #0
   1580c:	mov	r0, r3
   15810:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   15814:	ldr	r1, [r4, #20]
   15818:	add	r0, r0, r5
   1581c:	add	r0, r1, r0
   15820:	str	r0, [r4, #20]
   15824:	pop	{r4, r5, fp, pc}

00015828 <flatcc_json_printer_float@@Base>:
   15828:	push	{r4, sl, fp, lr}
   1582c:	add	fp, sp, #8
   15830:	mov	r4, r0
   15834:	ldr	r0, [r0, #20]
   15838:	vcvt.f64.f32	d0, s0
   1583c:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   15840:	ldr	r1, [r4, #20]
   15844:	add	r0, r1, r0
   15848:	str	r0, [r4, #20]
   1584c:	pop	{r4, sl, fp, pc}

00015850 <flatcc_json_printer_double@@Base>:
   15850:	push	{r4, sl, fp, lr}
   15854:	add	fp, sp, #8
   15858:	mov	r4, r0
   1585c:	ldr	r0, [r0, #20]
   15860:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   15864:	ldr	r1, [r4, #20]
   15868:	add	r0, r1, r0
   1586c:	str	r0, [r4, #20]
   15870:	pop	{r4, sl, fp, pc}

00015874 <flatcc_json_printer_enum@@Base>:
   15874:	push	{r4, r5, r6, r7, fp, lr}
   15878:	add	fp, sp, #16
   1587c:	mov	r4, r0
   15880:	ldr	r0, [r0, #20]
   15884:	mov	r6, r1
   15888:	mov	r1, #34	; 0x22
   1588c:	mov	r5, r2
   15890:	strb	r1, [r0]
   15894:	ldrb	r2, [r4, #26]
   15898:	ldr	r0, [r4, #20]
   1589c:	ldr	r1, [r4, #16]
   158a0:	cmp	r2, #0
   158a4:	addeq	r0, r0, #1
   158a8:	add	r2, r0, r5
   158ac:	str	r0, [r4, #20]
   158b0:	cmp	r2, r1
   158b4:	bcc	15928 <flatcc_json_printer_enum@@Base+0xb4>
   158b8:	cmp	r0, r1
   158bc:	bcc	158d8 <flatcc_json_printer_enum@@Base+0x64>
   158c0:	ldr	r2, [r4, #44]	; 0x2c
   158c4:	mov	r0, r4
   158c8:	mov	r1, #0
   158cc:	blx	r2
   158d0:	ldr	r1, [r4, #16]
   158d4:	ldr	r0, [r4, #20]
   158d8:	sub	r7, r1, r0
   158dc:	cmp	r7, r5
   158e0:	bcs	15928 <flatcc_json_printer_enum@@Base+0xb4>
   158e4:	mov	r1, r6
   158e8:	mov	r2, r7
   158ec:	bl	128b8 <memcpy@plt>
   158f0:	ldr	r0, [r4, #20]
   158f4:	ldr	r2, [r4, #44]	; 0x2c
   158f8:	mov	r1, #0
   158fc:	add	r0, r0, r7
   15900:	str	r0, [r4, #20]
   15904:	mov	r0, r4
   15908:	blx	r2
   1590c:	ldr	r1, [r4, #16]
   15910:	ldr	r0, [r4, #20]
   15914:	sub	r5, r5, r7
   15918:	add	r6, r6, r7
   1591c:	sub	r7, r1, r0
   15920:	cmp	r5, r7
   15924:	bhi	158e4 <flatcc_json_printer_enum@@Base+0x70>
   15928:	mov	r1, r6
   1592c:	mov	r2, r5
   15930:	bl	128b8 <memcpy@plt>
   15934:	ldr	r0, [r4, #20]
   15938:	add	r1, r0, r5
   1593c:	str	r1, [r4, #20]
   15940:	mov	r1, #34	; 0x22
   15944:	strb	r1, [r0, r5]
   15948:	ldrb	r0, [r4, #26]
   1594c:	ldr	r1, [r4, #20]
   15950:	cmp	r0, #0
   15954:	addeq	r1, r1, #1
   15958:	str	r1, [r4, #20]
   1595c:	pop	{r4, r5, r6, r7, fp, pc}

00015960 <flatcc_json_printer_delimit_enum_flags@@Base>:
   15960:	ldrb	ip, [r0, #26]
   15964:	ldr	r3, [r0, #20]
   15968:	mov	r2, #34	; 0x22
   1596c:	cmp	r1, #0
   15970:	movwne	r1, #1
   15974:	strb	r2, [r3]
   15978:	clz	r2, ip
   1597c:	lsr	r2, r2, #5
   15980:	orr	r1, r1, r2
   15984:	ldr	r2, [r0, #20]
   15988:	add	r1, r2, r1
   1598c:	str	r1, [r0, #20]
   15990:	bx	lr

00015994 <flatcc_json_printer_enum_flag@@Base>:
   15994:	push	{r4, r5, r6, r7, fp, lr}
   15998:	add	fp, sp, #16
   1599c:	mov	r5, r0
   159a0:	ldr	r0, [r0, #20]
   159a4:	mov	r6, r2
   159a8:	mov	r2, #32
   159ac:	cmp	r1, #0
   159b0:	mov	r4, r3
   159b4:	strb	r2, [r0]
   159b8:	ldr	r0, [r5, #20]
   159bc:	ldr	r2, [r5, #16]
   159c0:	addgt	r0, r0, #1
   159c4:	add	r1, r0, r3
   159c8:	str	r0, [r5, #20]
   159cc:	cmp	r1, r2
   159d0:	bcc	15a44 <flatcc_json_printer_enum_flag@@Base+0xb0>
   159d4:	cmp	r0, r2
   159d8:	bcc	159f4 <flatcc_json_printer_enum_flag@@Base+0x60>
   159dc:	ldr	r2, [r5, #44]	; 0x2c
   159e0:	mov	r0, r5
   159e4:	mov	r1, #0
   159e8:	blx	r2
   159ec:	ldr	r2, [r5, #16]
   159f0:	ldr	r0, [r5, #20]
   159f4:	sub	r7, r2, r0
   159f8:	cmp	r7, r4
   159fc:	bcs	15a44 <flatcc_json_printer_enum_flag@@Base+0xb0>
   15a00:	mov	r1, r6
   15a04:	mov	r2, r7
   15a08:	bl	128b8 <memcpy@plt>
   15a0c:	ldr	r0, [r5, #20]
   15a10:	ldr	r2, [r5, #44]	; 0x2c
   15a14:	mov	r1, #0
   15a18:	add	r0, r0, r7
   15a1c:	str	r0, [r5, #20]
   15a20:	mov	r0, r5
   15a24:	blx	r2
   15a28:	ldr	r1, [r5, #16]
   15a2c:	ldr	r0, [r5, #20]
   15a30:	sub	r4, r4, r7
   15a34:	add	r6, r6, r7
   15a38:	sub	r7, r1, r0
   15a3c:	cmp	r4, r7
   15a40:	bhi	15a00 <flatcc_json_printer_enum_flag@@Base+0x6c>
   15a44:	mov	r1, r6
   15a48:	mov	r2, r4
   15a4c:	bl	128b8 <memcpy@plt>
   15a50:	ldr	r0, [r5, #20]
   15a54:	add	r0, r0, r4
   15a58:	str	r0, [r5, #20]
   15a5c:	pop	{r4, r5, r6, r7, fp, pc}

00015a60 <flatcc_json_printer_string_field@@Base>:
   15a60:	push	{r4, r5, fp, lr}
   15a64:	add	fp, sp, #8
   15a68:	mov	r4, r0
   15a6c:	mov	r0, #4
   15a70:	add	r0, r0, r2, lsl #1
   15a74:	ldr	r2, [r1, #8]
   15a78:	cmp	r0, r2
   15a7c:	popge	{r4, r5, fp, pc}
   15a80:	ldr	r2, [r1, #4]
   15a84:	add	r0, r2, r0
   15a88:	ldrh	r0, [r0]
   15a8c:	cmp	r0, #0
   15a90:	ldrne	r2, [r1]
   15a94:	addsne	r5, r2, r0
   15a98:	bne	15aa0 <flatcc_json_printer_string_field@@Base+0x40>
   15a9c:	pop	{r4, r5, fp, pc}
   15aa0:	ldr	ip, [r1, #16]
   15aa4:	ldr	r2, [fp, #8]
   15aa8:	add	r0, ip, #1
   15aac:	cmp	ip, #0
   15ab0:	str	r0, [r1, #16]
   15ab4:	ldrne	r0, [r4, #20]
   15ab8:	addne	r1, r0, #1
   15abc:	strne	r1, [r4, #20]
   15ac0:	movne	r1, #44	; 0x2c
   15ac4:	strbne	r1, [r0]
   15ac8:	mov	r0, r4
   15acc:	mov	r1, r3
   15ad0:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   15ad4:	ldr	r0, [r5]
   15ad8:	ldr	r2, [r5, r0]!
   15adc:	mov	r0, r4
   15ae0:	add	r1, r5, #4
   15ae4:	pop	{r4, r5, fp, lr}
   15ae8:	b	147b4 <flatcc_json_printer_string@@Base+0x4>
   15aec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15af0:	add	fp, sp, #24
   15af4:	mov	r4, r0
   15af8:	mov	r6, r1
   15afc:	ldr	r0, [r0, #20]
   15b00:	mov	r8, r2
   15b04:	ldrb	r1, [r4, #25]
   15b08:	cmp	r1, #0
   15b0c:	beq	15bcc <flatcc_json_printer_string_field@@Base+0x16c>
   15b10:	add	r1, r0, #1
   15b14:	mov	r9, r4
   15b18:	str	r1, [r4, #20]
   15b1c:	mov	r1, #10
   15b20:	strb	r1, [r0]
   15b24:	ldr	r1, [r9, #16]!
   15b28:	ldr	r0, [r4, #20]
   15b2c:	ldrb	r2, [r9, #9]
   15b30:	ldr	r3, [r9, #16]
   15b34:	mla	r5, r3, r2, r0
   15b38:	mul	r7, r3, r2
   15b3c:	cmp	r5, r1
   15b40:	bls	15bb0 <flatcc_json_printer_string_field@@Base+0x150>
   15b44:	cmp	r0, r1
   15b48:	bcc	15b64 <flatcc_json_printer_string_field@@Base+0x104>
   15b4c:	ldr	r2, [r4, #44]	; 0x2c
   15b50:	mov	r0, r4
   15b54:	mov	r1, #0
   15b58:	blx	r2
   15b5c:	ldr	r1, [r4, #16]
   15b60:	ldr	r0, [r4, #20]
   15b64:	sub	r5, r1, r0
   15b68:	cmp	r5, r7
   15b6c:	bcs	15bb0 <flatcc_json_printer_string_field@@Base+0x150>
   15b70:	mov	r1, #32
   15b74:	mov	r2, r5
   15b78:	bl	12948 <memset@plt>
   15b7c:	ldr	r0, [r4, #20]
   15b80:	ldr	r2, [r4, #44]	; 0x2c
   15b84:	mov	r1, #0
   15b88:	add	r0, r0, r5
   15b8c:	str	r0, [r4, #20]
   15b90:	mov	r0, r4
   15b94:	blx	r2
   15b98:	ldr	r1, [r4, #16]
   15b9c:	ldr	r0, [r4, #20]
   15ba0:	sub	r7, r7, r5
   15ba4:	sub	r5, r1, r0
   15ba8:	cmp	r7, r5
   15bac:	bhi	15b70 <flatcc_json_printer_string_field@@Base+0x110>
   15bb0:	mov	r1, #32
   15bb4:	mov	r2, r7
   15bb8:	bl	12948 <memset@plt>
   15bbc:	ldr	r0, [r4, #20]
   15bc0:	add	r0, r0, r7
   15bc4:	str	r0, [r4, #20]
   15bc8:	b	15bf0 <flatcc_json_printer_string_field@@Base+0x190>
   15bcc:	mov	r9, r4
   15bd0:	ldr	r1, [r9, #16]!
   15bd4:	cmp	r0, r1
   15bd8:	bcc	15bf0 <flatcc_json_printer_string_field@@Base+0x190>
   15bdc:	ldr	r2, [r4, #44]	; 0x2c
   15be0:	mov	r0, r4
   15be4:	mov	r1, #0
   15be8:	blx	r2
   15bec:	ldr	r0, [r4, #20]
   15bf0:	mov	r1, #34	; 0x22
   15bf4:	strb	r1, [r0]
   15bf8:	ldrb	r2, [r4, #26]
   15bfc:	ldr	r0, [r4, #20]
   15c00:	ldr	r1, [r4, #16]
   15c04:	cmp	r2, #0
   15c08:	addeq	r0, r0, #1
   15c0c:	add	r2, r0, r8
   15c10:	str	r0, [r4, #20]
   15c14:	cmp	r2, r1
   15c18:	bcc	15c8c <flatcc_json_printer_string_field@@Base+0x22c>
   15c1c:	cmp	r0, r1
   15c20:	bcc	15c3c <flatcc_json_printer_string_field@@Base+0x1dc>
   15c24:	ldr	r2, [r4, #44]	; 0x2c
   15c28:	mov	r0, r4
   15c2c:	mov	r1, #0
   15c30:	blx	r2
   15c34:	ldr	r0, [r4, #20]
   15c38:	ldr	r1, [r9]
   15c3c:	sub	r7, r1, r0
   15c40:	cmp	r7, r8
   15c44:	bcs	15c8c <flatcc_json_printer_string_field@@Base+0x22c>
   15c48:	mov	r1, r6
   15c4c:	mov	r2, r7
   15c50:	bl	128b8 <memcpy@plt>
   15c54:	ldr	r0, [r4, #20]
   15c58:	ldr	r2, [r4, #44]	; 0x2c
   15c5c:	mov	r1, #0
   15c60:	add	r0, r0, r7
   15c64:	str	r0, [r4, #20]
   15c68:	mov	r0, r4
   15c6c:	blx	r2
   15c70:	ldr	r0, [r4, #20]
   15c74:	ldr	r1, [r9]
   15c78:	sub	r8, r8, r7
   15c7c:	add	r6, r6, r7
   15c80:	sub	r7, r1, r0
   15c84:	cmp	r8, r7
   15c88:	bhi	15c48 <flatcc_json_printer_string_field@@Base+0x1e8>
   15c8c:	mov	r1, r6
   15c90:	mov	r2, r8
   15c94:	bl	128b8 <memcpy@plt>
   15c98:	ldr	r0, [r4, #20]
   15c9c:	add	r1, r0, r8
   15ca0:	str	r1, [r4, #20]
   15ca4:	mov	r1, #34	; 0x22
   15ca8:	strb	r1, [r0, r8]
   15cac:	ldrb	r0, [r4, #26]
   15cb0:	ldr	r1, [r4, #20]
   15cb4:	cmp	r0, #0
   15cb8:	addeq	r1, r1, #1
   15cbc:	add	r0, r1, #1
   15cc0:	str	r0, [r4, #20]
   15cc4:	mov	r0, #58	; 0x3a
   15cc8:	strb	r0, [r1]
   15ccc:	mov	r1, #32
   15cd0:	ldr	r0, [r4, #20]
   15cd4:	strb	r1, [r0]
   15cd8:	ldrb	r0, [r4, #25]
   15cdc:	ldr	r1, [r4, #20]
   15ce0:	cmp	r0, #0
   15ce4:	addne	r1, r1, #1
   15ce8:	str	r1, [r4, #20]
   15cec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015cf0 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   15cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cf4:	add	fp, sp, #28
   15cf8:	sub	sp, sp, #12
   15cfc:	mov	r4, r0
   15d00:	mov	r0, #4
   15d04:	add	r0, r0, r2, lsl #1
   15d08:	ldr	r2, [r1, #8]
   15d0c:	cmp	r0, r2
   15d10:	bge	15eac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   15d14:	ldr	r2, [r1, #4]
   15d18:	add	r0, r2, r0
   15d1c:	ldrh	r0, [r0]
   15d20:	cmp	r0, #0
   15d24:	beq	15eac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   15d28:	ldr	r5, [fp, #12]
   15d2c:	ldr	r2, [r1]
   15d30:	cmp	r5, #0
   15d34:	add	r6, r2, r0
   15d38:	movwne	r5, #1
   15d3c:	cmp	r6, #0
   15d40:	beq	15eac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   15d44:	ldr	r0, [r1, #16]
   15d48:	ldr	r2, [fp, #8]
   15d4c:	add	r7, r0, #1
   15d50:	cmp	r0, #0
   15d54:	str	r7, [r1, #16]
   15d58:	ldrne	r0, [r4, #20]
   15d5c:	addne	r1, r0, #1
   15d60:	strne	r1, [r4, #20]
   15d64:	movne	r1, #44	; 0x2c
   15d68:	strbne	r1, [r0]
   15d6c:	mov	r0, r4
   15d70:	mov	r1, r3
   15d74:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   15d78:	ldr	r0, [r6]
   15d7c:	ldr	r0, [r6, r0]!
   15d80:	str	r0, [sp, #8]
   15d84:	ldr	r0, [r4, #20]
   15d88:	add	r1, r0, #1
   15d8c:	str	r1, [r4, #20]
   15d90:	mov	r1, #34	; 0x22
   15d94:	strb	r1, [r0]
   15d98:	movw	r1, #43691	; 0xaaab
   15d9c:	ldr	r0, [sp, #8]
   15da0:	movt	r1, #43690	; 0xaaaa
   15da4:	lsl	r0, r0, #2
   15da8:	umull	r0, r1, r0, r1
   15dac:	mov	r0, #3
   15db0:	add	r0, r0, r1, lsr #1
   15db4:	ldr	r1, [r4, #16]
   15db8:	bic	r7, r0, #3
   15dbc:	ldr	r0, [r4, #20]
   15dc0:	add	r2, r0, r7
   15dc4:	cmp	r2, r1
   15dc8:	bcc	15de8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   15dcc:	ldr	r2, [r4, #44]	; 0x2c
   15dd0:	mov	r0, r4
   15dd4:	mov	r1, #0
   15dd8:	blx	r2
   15ddc:	ldr	r0, [r4, #20]
   15de0:	ldr	r1, [r4, #16]
   15de4:	add	r2, r0, r7
   15de8:	add	r6, r6, #4
   15dec:	cmp	r2, r1
   15df0:	bls	15e84 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   15df4:	add	r9, sp, #4
   15df8:	mov	sl, #3
   15dfc:	sub	r1, r1, r0
   15e00:	bic	r7, r1, #3
   15e04:	add	r1, r7, r7, lsl #1
   15e08:	cmp	r1, #0
   15e0c:	beq	15eb4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c4>
   15e10:	lsr	r8, r1, #2
   15e14:	mov	r1, r6
   15e18:	mov	r2, r9
   15e1c:	mov	r3, r5
   15e20:	str	r8, [sp, #4]
   15e24:	bl	1f9d0 <flatcc_json_printer_clear@@Base+0x43c>
   15e28:	ldr	r0, [r4, #20]
   15e2c:	mov	r1, #0
   15e30:	add	r0, r0, r7
   15e34:	str	r0, [r4, #20]
   15e38:	ldr	r0, [sp, #8]
   15e3c:	sub	r0, r0, r8
   15e40:	str	r0, [sp, #8]
   15e44:	mov	r0, r4
   15e48:	ldr	r2, [r4, #44]	; 0x2c
   15e4c:	blx	r2
   15e50:	ldr	r0, [sp, #8]
   15e54:	movw	r1, #43691	; 0xaaab
   15e58:	add	r6, r6, r8
   15e5c:	movt	r1, #43690	; 0xaaaa
   15e60:	lsl	r0, r0, #2
   15e64:	umull	r0, r1, r0, r1
   15e68:	add	r0, sl, r1, lsr #1
   15e6c:	ldr	r1, [r4, #16]
   15e70:	bic	r7, r0, #3
   15e74:	ldr	r0, [r4, #20]
   15e78:	add	r2, r0, r7
   15e7c:	cmp	r2, r1
   15e80:	bhi	15dfc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x10c>
   15e84:	orr	r3, r5, #128	; 0x80
   15e88:	add	r2, sp, #8
   15e8c:	mov	r1, r6
   15e90:	bl	1f9d0 <flatcc_json_printer_clear@@Base+0x43c>
   15e94:	ldr	r0, [r4, #20]
   15e98:	add	r1, r0, r7
   15e9c:	add	r1, r1, #1
   15ea0:	str	r1, [r4, #20]
   15ea4:	mov	r1, #34	; 0x22
   15ea8:	strb	r1, [r0, r7]
   15eac:	sub	sp, fp, #28
   15eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15eb4:	movw	r0, #2148	; 0x864
   15eb8:	movw	r1, #1070	; 0x42e
   15ebc:	movw	r3, #2154	; 0x86a
   15ec0:	movw	r2, #277	; 0x115
   15ec4:	movt	r0, #2
   15ec8:	movt	r1, #2
   15ecc:	movt	r3, #2
   15ed0:	bl	1299c <__assert_fail@plt>

00015ed4 <flatcc_json_printer_uint8_field@@Base>:
   15ed4:	push	{r4, r5, r6, sl, fp, lr}
   15ed8:	add	fp, sp, #16
   15edc:	mov	r4, r0
   15ee0:	mov	r0, #4
   15ee4:	ldr	r5, [r1, #8]
   15ee8:	add	r2, r0, r2, lsl #1
   15eec:	ldr	r0, [fp, #12]
   15ef0:	cmp	r2, r5
   15ef4:	bge	15f14 <flatcc_json_printer_uint8_field@@Base+0x40>
   15ef8:	ldr	r5, [r1, #4]
   15efc:	add	r2, r5, r2
   15f00:	ldrh	r2, [r2]
   15f04:	cmp	r2, #0
   15f08:	ldrne	r5, [r1]
   15f0c:	addsne	r2, r5, r2
   15f10:	bne	15f74 <flatcc_json_printer_uint8_field@@Base+0xa0>
   15f14:	ldrb	r2, [r4, #29]
   15f18:	mov	r6, r0
   15f1c:	cmp	r2, #0
   15f20:	popeq	{r4, r5, r6, sl, fp, pc}
   15f24:	ldr	r0, [r1, #16]
   15f28:	ldr	r2, [fp, #8]
   15f2c:	add	r5, r0, #1
   15f30:	cmp	r0, #0
   15f34:	str	r5, [r1, #16]
   15f38:	ldrne	r0, [r4, #20]
   15f3c:	addne	r1, r0, #1
   15f40:	strne	r1, [r4, #20]
   15f44:	movne	r1, #44	; 0x2c
   15f48:	strbne	r1, [r0]
   15f4c:	mov	r0, r4
   15f50:	mov	r1, r3
   15f54:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   15f58:	ldr	r1, [r4, #20]
   15f5c:	mov	r0, r6
   15f60:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   15f64:	ldr	r1, [r4, #20]
   15f68:	add	r0, r1, r0
   15f6c:	str	r0, [r4, #20]
   15f70:	pop	{r4, r5, r6, sl, fp, pc}
   15f74:	ldrb	r6, [r2]
   15f78:	cmp	r6, r0
   15f7c:	bne	15f24 <flatcc_json_printer_uint8_field@@Base+0x50>
   15f80:	ldrb	r2, [r4, #28]
   15f84:	mov	r6, r0
   15f88:	cmp	r2, #0
   15f8c:	bne	15f70 <flatcc_json_printer_uint8_field@@Base+0x9c>
   15f90:	b	15f24 <flatcc_json_printer_uint8_field@@Base+0x50>

00015f94 <flatcc_json_printer_uint16_field@@Base>:
   15f94:	push	{r4, r5, r6, sl, fp, lr}
   15f98:	add	fp, sp, #16
   15f9c:	mov	r4, r0
   15fa0:	mov	r0, #4
   15fa4:	ldr	r5, [r1, #8]
   15fa8:	add	r2, r0, r2, lsl #1
   15fac:	ldr	r0, [fp, #12]
   15fb0:	cmp	r2, r5
   15fb4:	bge	15fd4 <flatcc_json_printer_uint16_field@@Base+0x40>
   15fb8:	ldr	r5, [r1, #4]
   15fbc:	add	r2, r5, r2
   15fc0:	ldrh	r2, [r2]
   15fc4:	cmp	r2, #0
   15fc8:	ldrne	r5, [r1]
   15fcc:	addsne	r2, r5, r2
   15fd0:	bne	16034 <flatcc_json_printer_uint16_field@@Base+0xa0>
   15fd4:	ldrb	r2, [r4, #29]
   15fd8:	mov	r6, r0
   15fdc:	cmp	r2, #0
   15fe0:	popeq	{r4, r5, r6, sl, fp, pc}
   15fe4:	ldr	r0, [r1, #16]
   15fe8:	ldr	r2, [fp, #8]
   15fec:	add	r5, r0, #1
   15ff0:	cmp	r0, #0
   15ff4:	str	r5, [r1, #16]
   15ff8:	ldrne	r0, [r4, #20]
   15ffc:	addne	r1, r0, #1
   16000:	strne	r1, [r4, #20]
   16004:	movne	r1, #44	; 0x2c
   16008:	strbne	r1, [r0]
   1600c:	mov	r0, r4
   16010:	mov	r1, r3
   16014:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16018:	ldr	r1, [r4, #20]
   1601c:	mov	r0, r6
   16020:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   16024:	ldr	r1, [r4, #20]
   16028:	add	r0, r1, r0
   1602c:	str	r0, [r4, #20]
   16030:	pop	{r4, r5, r6, sl, fp, pc}
   16034:	ldrh	r6, [r2]
   16038:	cmp	r6, r0
   1603c:	bne	15fe4 <flatcc_json_printer_uint16_field@@Base+0x50>
   16040:	ldrb	r2, [r4, #28]
   16044:	mov	r6, r0
   16048:	cmp	r2, #0
   1604c:	bne	16030 <flatcc_json_printer_uint16_field@@Base+0x9c>
   16050:	b	15fe4 <flatcc_json_printer_uint16_field@@Base+0x50>

00016054 <flatcc_json_printer_uint32_field@@Base>:
   16054:	push	{r4, r5, r6, sl, fp, lr}
   16058:	add	fp, sp, #16
   1605c:	mov	r4, r0
   16060:	mov	r0, #4
   16064:	ldr	r5, [r1, #8]
   16068:	add	r2, r0, r2, lsl #1
   1606c:	ldr	r0, [fp, #12]
   16070:	cmp	r2, r5
   16074:	bge	16094 <flatcc_json_printer_uint32_field@@Base+0x40>
   16078:	ldr	r5, [r1, #4]
   1607c:	add	r2, r5, r2
   16080:	ldrh	r2, [r2]
   16084:	cmp	r2, #0
   16088:	ldrne	r5, [r1]
   1608c:	addsne	r2, r5, r2
   16090:	bne	160f4 <flatcc_json_printer_uint32_field@@Base+0xa0>
   16094:	ldrb	r2, [r4, #29]
   16098:	mov	r6, r0
   1609c:	cmp	r2, #0
   160a0:	popeq	{r4, r5, r6, sl, fp, pc}
   160a4:	ldr	r0, [r1, #16]
   160a8:	ldr	r2, [fp, #8]
   160ac:	add	r5, r0, #1
   160b0:	cmp	r0, #0
   160b4:	str	r5, [r1, #16]
   160b8:	ldrne	r0, [r4, #20]
   160bc:	addne	r1, r0, #1
   160c0:	strne	r1, [r4, #20]
   160c4:	movne	r1, #44	; 0x2c
   160c8:	strbne	r1, [r0]
   160cc:	mov	r0, r4
   160d0:	mov	r1, r3
   160d4:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   160d8:	ldr	r1, [r4, #20]
   160dc:	mov	r0, r6
   160e0:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   160e4:	ldr	r1, [r4, #20]
   160e8:	add	r0, r1, r0
   160ec:	str	r0, [r4, #20]
   160f0:	pop	{r4, r5, r6, sl, fp, pc}
   160f4:	ldr	r6, [r2]
   160f8:	cmp	r6, r0
   160fc:	bne	160a4 <flatcc_json_printer_uint32_field@@Base+0x50>
   16100:	ldrb	r2, [r4, #28]
   16104:	mov	r6, r0
   16108:	cmp	r2, #0
   1610c:	bne	160f0 <flatcc_json_printer_uint32_field@@Base+0x9c>
   16110:	b	160a4 <flatcc_json_printer_uint32_field@@Base+0x50>

00016114 <flatcc_json_printer_uint64_field@@Base>:
   16114:	push	{r4, r6, r7, r8, fp, lr}
   16118:	add	fp, sp, #16
   1611c:	mov	r4, r0
   16120:	mov	r0, #4
   16124:	ldr	r6, [r1, #8]
   16128:	ldr	lr, [fp, #20]
   1612c:	add	r7, r0, r2, lsl #1
   16130:	ldr	r2, [fp, #16]
   16134:	cmp	r7, r6
   16138:	bge	16158 <flatcc_json_printer_uint64_field@@Base+0x44>
   1613c:	ldr	r6, [r1, #4]
   16140:	add	r7, r6, r7
   16144:	ldrh	r7, [r7]
   16148:	cmp	r7, #0
   1614c:	ldrne	r6, [r1]
   16150:	addsne	r7, r6, r7
   16154:	bne	161c0 <flatcc_json_printer_uint64_field@@Base+0xac>
   16158:	ldrb	r0, [r4, #29]
   1615c:	mov	r8, r2
   16160:	mov	r7, lr
   16164:	cmp	r0, #0
   16168:	popeq	{r4, r6, r7, r8, fp, pc}
   1616c:	ldr	r0, [r1, #16]
   16170:	ldr	r2, [fp, #8]
   16174:	add	r6, r0, #1
   16178:	cmp	r0, #0
   1617c:	str	r6, [r1, #16]
   16180:	ldrne	r0, [r4, #20]
   16184:	addne	r1, r0, #1
   16188:	strne	r1, [r4, #20]
   1618c:	movne	r1, #44	; 0x2c
   16190:	strbne	r1, [r0]
   16194:	mov	r0, r4
   16198:	mov	r1, r3
   1619c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   161a0:	ldr	r2, [r4, #20]
   161a4:	mov	r0, r8
   161a8:	mov	r1, r7
   161ac:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   161b0:	ldr	r1, [r4, #20]
   161b4:	add	r0, r1, r0
   161b8:	str	r0, [r4, #20]
   161bc:	pop	{r4, r6, r7, r8, fp, pc}
   161c0:	ldr	r8, [r7]
   161c4:	ldr	r7, [r7, #4]
   161c8:	eor	ip, r7, lr
   161cc:	eor	r0, r8, r2
   161d0:	orrs	r0, r0, ip
   161d4:	bne	1616c <flatcc_json_printer_uint64_field@@Base+0x58>
   161d8:	ldrb	r0, [r4, #28]
   161dc:	mov	r8, r2
   161e0:	mov	r7, lr
   161e4:	cmp	r0, #0
   161e8:	bne	161bc <flatcc_json_printer_uint64_field@@Base+0xa8>
   161ec:	b	1616c <flatcc_json_printer_uint64_field@@Base+0x58>

000161f0 <flatcc_json_printer_int8_field@@Base>:
   161f0:	push	{r4, r5, r6, sl, fp, lr}
   161f4:	add	fp, sp, #16
   161f8:	mov	r4, r0
   161fc:	mov	r0, #4
   16200:	ldr	r6, [r1, #8]
   16204:	add	r2, r0, r2, lsl #1
   16208:	ldr	r0, [fp, #12]
   1620c:	cmp	r2, r6
   16210:	bge	16230 <flatcc_json_printer_int8_field@@Base+0x40>
   16214:	ldr	r6, [r1, #4]
   16218:	add	r2, r6, r2
   1621c:	ldrh	r2, [r2]
   16220:	cmp	r2, #0
   16224:	ldrne	r6, [r1]
   16228:	addsne	r2, r6, r2
   1622c:	bne	162ac <flatcc_json_printer_int8_field@@Base+0xbc>
   16230:	ldrb	r2, [r4, #29]
   16234:	mov	r5, r0
   16238:	cmp	r2, #0
   1623c:	popeq	{r4, r5, r6, sl, fp, pc}
   16240:	ldr	r0, [r1, #16]
   16244:	ldr	r2, [fp, #8]
   16248:	add	r6, r0, #1
   1624c:	cmp	r0, #0
   16250:	str	r6, [r1, #16]
   16254:	ldrne	r0, [r4, #20]
   16258:	addne	r1, r0, #1
   1625c:	strne	r1, [r4, #20]
   16260:	movne	r1, #44	; 0x2c
   16264:	strbne	r1, [r0]
   16268:	mov	r0, r4
   1626c:	mov	r1, r3
   16270:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16274:	ubfx	r6, r5, #7, #1
   16278:	ldr	r1, [r4, #20]
   1627c:	sxtb	r0, r5
   16280:	cmn	r0, #1
   16284:	movle	r0, #45	; 0x2d
   16288:	rsble	r5, r5, #0
   1628c:	strble	r0, [r1], #1
   16290:	uxtb	r0, r5
   16294:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   16298:	ldr	r1, [r4, #20]
   1629c:	add	r0, r0, r6
   162a0:	add	r0, r1, r0
   162a4:	str	r0, [r4, #20]
   162a8:	pop	{r4, r5, r6, sl, fp, pc}
   162ac:	ldrb	r5, [r2]
   162b0:	uxtb	r2, r0
   162b4:	cmp	r5, r2
   162b8:	bne	16240 <flatcc_json_printer_int8_field@@Base+0x50>
   162bc:	ldrb	r2, [r4, #28]
   162c0:	mov	r5, r0
   162c4:	cmp	r2, #0
   162c8:	bne	162a8 <flatcc_json_printer_int8_field@@Base+0xb8>
   162cc:	b	16240 <flatcc_json_printer_int8_field@@Base+0x50>

000162d0 <flatcc_json_printer_int16_field@@Base>:
   162d0:	push	{r4, r5, r6, sl, fp, lr}
   162d4:	add	fp, sp, #16
   162d8:	mov	r4, r0
   162dc:	mov	r0, #4
   162e0:	ldr	r6, [r1, #8]
   162e4:	add	r2, r0, r2, lsl #1
   162e8:	ldr	r0, [fp, #12]
   162ec:	cmp	r2, r6
   162f0:	bge	16310 <flatcc_json_printer_int16_field@@Base+0x40>
   162f4:	ldr	r6, [r1, #4]
   162f8:	add	r2, r6, r2
   162fc:	ldrh	r2, [r2]
   16300:	cmp	r2, #0
   16304:	ldrne	r6, [r1]
   16308:	addsne	r2, r6, r2
   1630c:	bne	1638c <flatcc_json_printer_int16_field@@Base+0xbc>
   16310:	ldrb	r2, [r4, #29]
   16314:	mov	r5, r0
   16318:	cmp	r2, #0
   1631c:	popeq	{r4, r5, r6, sl, fp, pc}
   16320:	ldr	r0, [r1, #16]
   16324:	ldr	r2, [fp, #8]
   16328:	add	r6, r0, #1
   1632c:	cmp	r0, #0
   16330:	str	r6, [r1, #16]
   16334:	ldrne	r0, [r4, #20]
   16338:	addne	r1, r0, #1
   1633c:	strne	r1, [r4, #20]
   16340:	movne	r1, #44	; 0x2c
   16344:	strbne	r1, [r0]
   16348:	mov	r0, r4
   1634c:	mov	r1, r3
   16350:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16354:	ubfx	r6, r5, #15, #1
   16358:	ldr	r1, [r4, #20]
   1635c:	sxth	r0, r5
   16360:	cmn	r0, #1
   16364:	movle	r0, #45	; 0x2d
   16368:	rsble	r5, r5, #0
   1636c:	strble	r0, [r1], #1
   16370:	uxth	r0, r5
   16374:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   16378:	ldr	r1, [r4, #20]
   1637c:	add	r0, r0, r6
   16380:	add	r0, r1, r0
   16384:	str	r0, [r4, #20]
   16388:	pop	{r4, r5, r6, sl, fp, pc}
   1638c:	ldrh	r5, [r2]
   16390:	uxth	r2, r0
   16394:	cmp	r5, r2
   16398:	bne	16320 <flatcc_json_printer_int16_field@@Base+0x50>
   1639c:	ldrb	r2, [r4, #28]
   163a0:	mov	r5, r0
   163a4:	cmp	r2, #0
   163a8:	bne	16388 <flatcc_json_printer_int16_field@@Base+0xb8>
   163ac:	b	16320 <flatcc_json_printer_int16_field@@Base+0x50>

000163b0 <flatcc_json_printer_int32_field@@Base>:
   163b0:	push	{r4, r5, r6, sl, fp, lr}
   163b4:	add	fp, sp, #16
   163b8:	mov	r4, r0
   163bc:	mov	r0, #4
   163c0:	ldr	r6, [r1, #8]
   163c4:	add	r2, r0, r2, lsl #1
   163c8:	ldr	r0, [fp, #12]
   163cc:	cmp	r2, r6
   163d0:	bge	163f0 <flatcc_json_printer_int32_field@@Base+0x40>
   163d4:	ldr	r6, [r1, #4]
   163d8:	add	r2, r6, r2
   163dc:	ldrh	r2, [r2]
   163e0:	cmp	r2, #0
   163e4:	ldrne	r6, [r1]
   163e8:	addsne	r2, r6, r2
   163ec:	bne	16468 <flatcc_json_printer_int32_field@@Base+0xb8>
   163f0:	ldrb	r2, [r4, #29]
   163f4:	mov	r5, r0
   163f8:	cmp	r2, #0
   163fc:	popeq	{r4, r5, r6, sl, fp, pc}
   16400:	ldr	r0, [r1, #16]
   16404:	ldr	r2, [fp, #8]
   16408:	add	r6, r0, #1
   1640c:	cmp	r0, #0
   16410:	str	r6, [r1, #16]
   16414:	ldrne	r0, [r4, #20]
   16418:	addne	r1, r0, #1
   1641c:	strne	r1, [r4, #20]
   16420:	movne	r1, #44	; 0x2c
   16424:	strbne	r1, [r0]
   16428:	mov	r0, r4
   1642c:	mov	r1, r3
   16430:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16434:	ldr	r1, [r4, #20]
   16438:	cmn	r5, #1
   1643c:	lsr	r6, r5, #31
   16440:	movle	r0, #45	; 0x2d
   16444:	rsble	r5, r5, #0
   16448:	strble	r0, [r1], #1
   1644c:	mov	r0, r5
   16450:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   16454:	ldr	r1, [r4, #20]
   16458:	add	r0, r0, r6
   1645c:	add	r0, r1, r0
   16460:	str	r0, [r4, #20]
   16464:	pop	{r4, r5, r6, sl, fp, pc}
   16468:	ldr	r5, [r2]
   1646c:	cmp	r5, r0
   16470:	bne	16400 <flatcc_json_printer_int32_field@@Base+0x50>
   16474:	ldrb	r2, [r4, #28]
   16478:	mov	r5, r0
   1647c:	cmp	r2, #0
   16480:	bne	16464 <flatcc_json_printer_int32_field@@Base+0xb4>
   16484:	b	16400 <flatcc_json_printer_int32_field@@Base+0x50>

00016488 <flatcc_json_printer_int64_field@@Base>:
   16488:	push	{r4, r5, r6, r7, fp, lr}
   1648c:	add	fp, sp, #16
   16490:	mov	r4, r0
   16494:	mov	r0, #4
   16498:	ldr	r6, [r1, #8]
   1649c:	add	r7, r0, r2, lsl #1
   164a0:	ldr	r0, [fp, #20]
   164a4:	ldr	r2, [fp, #16]
   164a8:	cmp	r7, r6
   164ac:	bge	164cc <flatcc_json_printer_int64_field@@Base+0x44>
   164b0:	ldr	r6, [r1, #4]
   164b4:	add	r7, r6, r7
   164b8:	ldrh	r7, [r7]
   164bc:	cmp	r7, #0
   164c0:	ldrne	r6, [r1]
   164c4:	addsne	r7, r6, r7
   164c8:	bne	16554 <flatcc_json_printer_int64_field@@Base+0xcc>
   164cc:	ldrb	r7, [r4, #29]
   164d0:	mov	r6, r2
   164d4:	cmp	r7, #0
   164d8:	mov	r7, r0
   164dc:	popeq	{r4, r5, r6, r7, fp, pc}
   164e0:	ldr	r0, [r1, #16]
   164e4:	ldr	r2, [fp, #8]
   164e8:	add	r5, r0, #1
   164ec:	cmp	r0, #0
   164f0:	str	r5, [r1, #16]
   164f4:	ldrne	r0, [r4, #20]
   164f8:	addne	r1, r0, #1
   164fc:	strne	r1, [r4, #20]
   16500:	movne	r1, #44	; 0x2c
   16504:	strbne	r1, [r0]
   16508:	mov	r0, r4
   1650c:	mov	r1, r3
   16510:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16514:	ldr	r2, [r4, #20]
   16518:	lsr	r5, r7, #31
   1651c:	cmn	r7, #1
   16520:	bgt	16534 <flatcc_json_printer_int64_field@@Base+0xac>
   16524:	mov	r0, #45	; 0x2d
   16528:	rsbs	r6, r6, #0
   1652c:	strb	r0, [r2], #1
   16530:	rsc	r7, r7, #0
   16534:	mov	r0, r6
   16538:	mov	r1, r7
   1653c:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   16540:	ldr	r1, [r4, #20]
   16544:	add	r0, r0, r5
   16548:	add	r0, r1, r0
   1654c:	str	r0, [r4, #20]
   16550:	pop	{r4, r5, r6, r7, fp, pc}
   16554:	ldrd	r6, [r7]
   16558:	eor	ip, r7, r0
   1655c:	eor	r5, r6, r2
   16560:	orrs	r5, r5, ip
   16564:	bne	164e0 <flatcc_json_printer_int64_field@@Base+0x58>
   16568:	ldrb	r7, [r4, #28]
   1656c:	mov	r6, r2
   16570:	cmp	r7, #0
   16574:	mov	r7, r0
   16578:	bne	16550 <flatcc_json_printer_int64_field@@Base+0xc8>
   1657c:	b	164e0 <flatcc_json_printer_int64_field@@Base+0x58>

00016580 <flatcc_json_printer_bool_field@@Base>:
   16580:	push	{r4, r5, r6, sl, fp, lr}
   16584:	add	fp, sp, #16
   16588:	mov	r4, r0
   1658c:	mov	r0, #4
   16590:	ldr	r5, [r1, #8]
   16594:	add	r2, r0, r2, lsl #1
   16598:	ldr	r0, [fp, #12]
   1659c:	cmp	r2, r5
   165a0:	bge	165c0 <flatcc_json_printer_bool_field@@Base+0x40>
   165a4:	ldr	r5, [r1, #4]
   165a8:	add	r2, r5, r2
   165ac:	ldrh	r2, [r2]
   165b0:	cmp	r2, #0
   165b4:	ldrne	r5, [r1]
   165b8:	addsne	r2, r5, r2
   165bc:	bne	16654 <flatcc_json_printer_bool_field@@Base+0xd4>
   165c0:	ldrb	r2, [r4, #29]
   165c4:	mov	r6, r0
   165c8:	cmp	r2, #0
   165cc:	popeq	{r4, r5, r6, sl, fp, pc}
   165d0:	ldr	r0, [r1, #16]
   165d4:	ldr	r2, [fp, #8]
   165d8:	add	r5, r0, #1
   165dc:	cmp	r0, #0
   165e0:	str	r5, [r1, #16]
   165e4:	ldrne	r0, [r4, #20]
   165e8:	addne	r1, r0, #1
   165ec:	strne	r1, [r4, #20]
   165f0:	movne	r1, #44	; 0x2c
   165f4:	strbne	r1, [r0]
   165f8:	mov	r0, r4
   165fc:	mov	r1, r3
   16600:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16604:	ldr	r0, [r4, #20]
   16608:	cmp	r6, #0
   1660c:	beq	1662c <flatcc_json_printer_bool_field@@Base+0xac>
   16610:	mov	r1, #0
   16614:	strb	r1, [r0, #4]
   16618:	movw	r1, #29300	; 0x7274
   1661c:	movt	r1, #25973	; 0x6575
   16620:	str	r1, [r0]
   16624:	mov	r0, #4
   16628:	b	16644 <flatcc_json_printer_bool_field@@Base+0xc4>
   1662c:	mov	r1, #101	; 0x65
   16630:	strh	r1, [r0, #4]
   16634:	movw	r1, #24934	; 0x6166
   16638:	movt	r1, #29548	; 0x736c
   1663c:	str	r1, [r0]
   16640:	mov	r0, #5
   16644:	ldr	r1, [r4, #20]
   16648:	add	r0, r1, r0
   1664c:	str	r0, [r4, #20]
   16650:	pop	{r4, r5, r6, sl, fp, pc}
   16654:	ldrb	r6, [r2]
   16658:	cmp	r6, r0
   1665c:	bne	165d0 <flatcc_json_printer_bool_field@@Base+0x50>
   16660:	ldrb	r2, [r4, #28]
   16664:	mov	r6, r0
   16668:	cmp	r2, #0
   1666c:	bne	16650 <flatcc_json_printer_bool_field@@Base+0xd0>
   16670:	b	165d0 <flatcc_json_printer_bool_field@@Base+0x50>

00016674 <flatcc_json_printer_float_field@@Base>:
   16674:	push	{r4, r5, fp, lr}
   16678:	add	fp, sp, #8
   1667c:	vpush	{d8}
   16680:	mov	r5, r0
   16684:	mov	r0, #4
   16688:	vmov.f32	s16, s0
   1668c:	add	r0, r0, r2, lsl #1
   16690:	ldr	r2, [r1, #8]
   16694:	cmp	r0, r2
   16698:	bge	166b8 <flatcc_json_printer_float_field@@Base+0x44>
   1669c:	ldr	r2, [r1, #4]
   166a0:	add	r0, r2, r0
   166a4:	ldrh	r0, [r0]
   166a8:	cmp	r0, #0
   166ac:	ldrne	r2, [r1]
   166b0:	addsne	r0, r2, r0
   166b4:	bne	16718 <flatcc_json_printer_float_field@@Base+0xa4>
   166b8:	ldrb	r0, [r5, #29]
   166bc:	cmp	r0, #0
   166c0:	beq	16710 <flatcc_json_printer_float_field@@Base+0x9c>
   166c4:	ldr	r0, [r1, #16]
   166c8:	ldr	r2, [fp, #8]
   166cc:	add	r4, r0, #1
   166d0:	cmp	r0, #0
   166d4:	str	r4, [r1, #16]
   166d8:	ldrne	r0, [r5, #20]
   166dc:	addne	r1, r0, #1
   166e0:	strne	r1, [r5, #20]
   166e4:	movne	r1, #44	; 0x2c
   166e8:	strbne	r1, [r0]
   166ec:	mov	r0, r5
   166f0:	mov	r1, r3
   166f4:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   166f8:	ldr	r0, [r5, #20]
   166fc:	vcvt.f64.f32	d0, s16
   16700:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   16704:	ldr	r1, [r5, #20]
   16708:	add	r0, r1, r0
   1670c:	str	r0, [r5, #20]
   16710:	vpop	{d8}
   16714:	pop	{r4, r5, fp, pc}
   16718:	vldr	s0, [r0]
   1671c:	vcmp.f32	s0, s16
   16720:	vmrs	APSR_nzcv, fpscr
   16724:	bne	1673c <flatcc_json_printer_float_field@@Base+0xc8>
   16728:	ldrb	r0, [r5, #28]
   1672c:	vmov.f32	s16, s0
   16730:	cmp	r0, #0
   16734:	bne	16710 <flatcc_json_printer_float_field@@Base+0x9c>
   16738:	b	166c4 <flatcc_json_printer_float_field@@Base+0x50>
   1673c:	vmov.f32	s16, s0
   16740:	b	166c4 <flatcc_json_printer_float_field@@Base+0x50>

00016744 <flatcc_json_printer_double_field@@Base>:
   16744:	push	{r4, r5, fp, lr}
   16748:	add	fp, sp, #8
   1674c:	vpush	{d8}
   16750:	mov	r5, r0
   16754:	mov	r0, #4
   16758:	vmov.f64	d8, d0
   1675c:	add	r0, r0, r2, lsl #1
   16760:	ldr	r2, [r1, #8]
   16764:	cmp	r0, r2
   16768:	bge	16788 <flatcc_json_printer_double_field@@Base+0x44>
   1676c:	ldr	r2, [r1, #4]
   16770:	add	r0, r2, r0
   16774:	ldrh	r0, [r0]
   16778:	cmp	r0, #0
   1677c:	ldrne	r2, [r1]
   16780:	addsne	r0, r2, r0
   16784:	bne	167e8 <flatcc_json_printer_double_field@@Base+0xa4>
   16788:	ldrb	r0, [r5, #29]
   1678c:	cmp	r0, #0
   16790:	beq	167e0 <flatcc_json_printer_double_field@@Base+0x9c>
   16794:	ldr	r0, [r1, #16]
   16798:	ldr	r2, [fp, #8]
   1679c:	add	r4, r0, #1
   167a0:	cmp	r0, #0
   167a4:	str	r4, [r1, #16]
   167a8:	ldrne	r0, [r5, #20]
   167ac:	addne	r1, r0, #1
   167b0:	strne	r1, [r5, #20]
   167b4:	movne	r1, #44	; 0x2c
   167b8:	strbne	r1, [r0]
   167bc:	mov	r0, r5
   167c0:	mov	r1, r3
   167c4:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   167c8:	ldr	r0, [r5, #20]
   167cc:	vmov.f64	d0, d8
   167d0:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   167d4:	ldr	r1, [r5, #20]
   167d8:	add	r0, r1, r0
   167dc:	str	r0, [r5, #20]
   167e0:	vpop	{d8}
   167e4:	pop	{r4, r5, fp, pc}
   167e8:	vldr	d16, [r0]
   167ec:	vcmp.f64	d16, d8
   167f0:	vmrs	APSR_nzcv, fpscr
   167f4:	bne	1680c <flatcc_json_printer_double_field@@Base+0xc8>
   167f8:	ldrb	r0, [r5, #28]
   167fc:	vmov.f64	d8, d16
   16800:	cmp	r0, #0
   16804:	bne	167e0 <flatcc_json_printer_double_field@@Base+0x9c>
   16808:	b	16794 <flatcc_json_printer_double_field@@Base+0x50>
   1680c:	vmov.f64	d8, d16
   16810:	b	16794 <flatcc_json_printer_double_field@@Base+0x50>

00016814 <flatcc_json_printer_uint8_enum_field@@Base>:
   16814:	push	{r4, r5, r6, r7, fp, lr}
   16818:	add	fp, sp, #16
   1681c:	mov	r4, r0
   16820:	mov	r0, #4
   16824:	ldr	r7, [fp, #16]
   16828:	ldr	ip, [fp, #12]
   1682c:	add	r5, r0, r2, lsl #1
   16830:	ldr	r0, [r1, #8]
   16834:	ldr	r2, [fp, #8]
   16838:	cmp	r5, r0
   1683c:	bge	1685c <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   16840:	ldr	r0, [r1, #4]
   16844:	add	r0, r0, r5
   16848:	ldrh	r5, [r0]
   1684c:	cmp	r5, #0
   16850:	ldrne	r0, [r1]
   16854:	addsne	r5, r0, r5
   16858:	bne	168d8 <flatcc_json_printer_uint8_enum_field@@Base+0xc4>
   1685c:	ldrb	r0, [r4, #29]
   16860:	mov	r6, ip
   16864:	cmp	r0, #0
   16868:	popeq	{r4, r5, r6, r7, fp, pc}
   1686c:	ldr	r0, [r1, #16]
   16870:	add	r5, r0, #1
   16874:	cmp	r0, #0
   16878:	str	r5, [r1, #16]
   1687c:	ldrne	r0, [r4, #20]
   16880:	addne	r1, r0, #1
   16884:	strne	r1, [r4, #20]
   16888:	movne	r1, #44	; 0x2c
   1688c:	strbne	r1, [r0]
   16890:	mov	r0, r4
   16894:	mov	r1, r3
   16898:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1689c:	ldrb	r0, [r4, #27]
   168a0:	cmp	r0, #0
   168a4:	beq	168c4 <flatcc_json_printer_uint8_enum_field@@Base+0xb0>
   168a8:	ldr	r1, [r4, #20]
   168ac:	mov	r0, r6
   168b0:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   168b4:	ldr	r1, [r4, #20]
   168b8:	add	r0, r1, r0
   168bc:	str	r0, [r4, #20]
   168c0:	pop	{r4, r5, r6, r7, fp, pc}
   168c4:	mov	r0, r4
   168c8:	mov	r1, r6
   168cc:	mov	r2, r7
   168d0:	pop	{r4, r5, r6, r7, fp, lr}
   168d4:	bx	r2
   168d8:	ldrb	r6, [r5]
   168dc:	cmp	r6, ip
   168e0:	bne	1686c <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   168e4:	ldrb	r0, [r4, #28]
   168e8:	mov	r6, ip
   168ec:	cmp	r0, #0
   168f0:	bne	168c0 <flatcc_json_printer_uint8_enum_field@@Base+0xac>
   168f4:	b	1686c <flatcc_json_printer_uint8_enum_field@@Base+0x58>

000168f8 <flatcc_json_printer_uint16_enum_field@@Base>:
   168f8:	push	{r4, r5, r6, r7, fp, lr}
   168fc:	add	fp, sp, #16
   16900:	mov	r4, r0
   16904:	mov	r0, #4
   16908:	ldr	r7, [fp, #16]
   1690c:	ldr	ip, [fp, #12]
   16910:	add	r5, r0, r2, lsl #1
   16914:	ldr	r0, [r1, #8]
   16918:	ldr	r2, [fp, #8]
   1691c:	cmp	r5, r0
   16920:	bge	16940 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   16924:	ldr	r0, [r1, #4]
   16928:	add	r0, r0, r5
   1692c:	ldrh	r5, [r0]
   16930:	cmp	r5, #0
   16934:	ldrne	r0, [r1]
   16938:	addsne	r5, r0, r5
   1693c:	bne	169bc <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
   16940:	ldrb	r0, [r4, #29]
   16944:	mov	r6, ip
   16948:	cmp	r0, #0
   1694c:	popeq	{r4, r5, r6, r7, fp, pc}
   16950:	ldr	r0, [r1, #16]
   16954:	add	r5, r0, #1
   16958:	cmp	r0, #0
   1695c:	str	r5, [r1, #16]
   16960:	ldrne	r0, [r4, #20]
   16964:	addne	r1, r0, #1
   16968:	strne	r1, [r4, #20]
   1696c:	movne	r1, #44	; 0x2c
   16970:	strbne	r1, [r0]
   16974:	mov	r0, r4
   16978:	mov	r1, r3
   1697c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16980:	ldrb	r0, [r4, #27]
   16984:	cmp	r0, #0
   16988:	beq	169a8 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   1698c:	ldr	r1, [r4, #20]
   16990:	mov	r0, r6
   16994:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   16998:	ldr	r1, [r4, #20]
   1699c:	add	r0, r1, r0
   169a0:	str	r0, [r4, #20]
   169a4:	pop	{r4, r5, r6, r7, fp, pc}
   169a8:	mov	r0, r4
   169ac:	mov	r1, r6
   169b0:	mov	r2, r7
   169b4:	pop	{r4, r5, r6, r7, fp, lr}
   169b8:	bx	r2
   169bc:	ldrh	r6, [r5]
   169c0:	cmp	r6, ip
   169c4:	bne	16950 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   169c8:	ldrb	r0, [r4, #28]
   169cc:	mov	r6, ip
   169d0:	cmp	r0, #0
   169d4:	bne	169a4 <flatcc_json_printer_uint16_enum_field@@Base+0xac>
   169d8:	b	16950 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

000169dc <flatcc_json_printer_uint32_enum_field@@Base>:
   169dc:	push	{r4, r5, r6, r7, fp, lr}
   169e0:	add	fp, sp, #16
   169e4:	mov	r4, r0
   169e8:	mov	r0, #4
   169ec:	ldr	r7, [fp, #16]
   169f0:	ldr	ip, [fp, #12]
   169f4:	add	r5, r0, r2, lsl #1
   169f8:	ldr	r0, [r1, #8]
   169fc:	ldr	r2, [fp, #8]
   16a00:	cmp	r5, r0
   16a04:	bge	16a24 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   16a08:	ldr	r0, [r1, #4]
   16a0c:	add	r0, r0, r5
   16a10:	ldrh	r5, [r0]
   16a14:	cmp	r5, #0
   16a18:	ldrne	r0, [r1]
   16a1c:	addsne	r5, r0, r5
   16a20:	bne	16aa0 <flatcc_json_printer_uint32_enum_field@@Base+0xc4>
   16a24:	ldrb	r0, [r4, #29]
   16a28:	mov	r6, ip
   16a2c:	cmp	r0, #0
   16a30:	popeq	{r4, r5, r6, r7, fp, pc}
   16a34:	ldr	r0, [r1, #16]
   16a38:	add	r5, r0, #1
   16a3c:	cmp	r0, #0
   16a40:	str	r5, [r1, #16]
   16a44:	ldrne	r0, [r4, #20]
   16a48:	addne	r1, r0, #1
   16a4c:	strne	r1, [r4, #20]
   16a50:	movne	r1, #44	; 0x2c
   16a54:	strbne	r1, [r0]
   16a58:	mov	r0, r4
   16a5c:	mov	r1, r3
   16a60:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16a64:	ldrb	r0, [r4, #27]
   16a68:	cmp	r0, #0
   16a6c:	beq	16a8c <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   16a70:	ldr	r1, [r4, #20]
   16a74:	mov	r0, r6
   16a78:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   16a7c:	ldr	r1, [r4, #20]
   16a80:	add	r0, r1, r0
   16a84:	str	r0, [r4, #20]
   16a88:	pop	{r4, r5, r6, r7, fp, pc}
   16a8c:	mov	r0, r4
   16a90:	mov	r1, r6
   16a94:	mov	r2, r7
   16a98:	pop	{r4, r5, r6, r7, fp, lr}
   16a9c:	bx	r2
   16aa0:	ldr	r6, [r5]
   16aa4:	cmp	r6, ip
   16aa8:	bne	16a34 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   16aac:	ldrb	r0, [r4, #28]
   16ab0:	mov	r6, ip
   16ab4:	cmp	r0, #0
   16ab8:	bne	16a88 <flatcc_json_printer_uint32_enum_field@@Base+0xac>
   16abc:	b	16a34 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

00016ac0 <flatcc_json_printer_uint64_enum_field@@Base>:
   16ac0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16ac4:	add	fp, sp, #24
   16ac8:	mov	r4, r0
   16acc:	mov	r0, #4
   16ad0:	ldr	ip, [fp, #20]
   16ad4:	ldr	r6, [fp, #16]
   16ad8:	ldr	r5, [fp, #24]
   16adc:	add	r7, r0, r2, lsl #1
   16ae0:	ldr	r0, [r1, #8]
   16ae4:	ldr	r2, [fp, #8]
   16ae8:	cmp	r7, r0
   16aec:	bge	16b0c <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   16af0:	ldr	r0, [r1, #4]
   16af4:	add	r0, r0, r7
   16af8:	ldrh	r7, [r0]
   16afc:	cmp	r7, #0
   16b00:	ldrne	r0, [r1]
   16b04:	addsne	r7, r0, r7
   16b08:	bne	16b94 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   16b0c:	ldrb	r0, [r4, #29]
   16b10:	mov	r8, r6
   16b14:	mov	r7, ip
   16b18:	cmp	r0, #0
   16b1c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   16b20:	ldr	r0, [r1, #16]
   16b24:	add	r6, r0, #1
   16b28:	cmp	r0, #0
   16b2c:	str	r6, [r1, #16]
   16b30:	ldrne	r0, [r4, #20]
   16b34:	addne	r1, r0, #1
   16b38:	strne	r1, [r4, #20]
   16b3c:	movne	r1, #44	; 0x2c
   16b40:	strbne	r1, [r0]
   16b44:	mov	r0, r4
   16b48:	mov	r1, r3
   16b4c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16b50:	ldrb	r0, [r4, #27]
   16b54:	cmp	r0, #0
   16b58:	beq	16b7c <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   16b5c:	ldr	r2, [r4, #20]
   16b60:	mov	r0, r8
   16b64:	mov	r1, r7
   16b68:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   16b6c:	ldr	r1, [r4, #20]
   16b70:	add	r0, r1, r0
   16b74:	str	r0, [r4, #20]
   16b78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16b7c:	mov	r0, r4
   16b80:	mov	r2, r8
   16b84:	mov	r3, r7
   16b88:	mov	r1, r5
   16b8c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16b90:	bx	r1
   16b94:	ldr	r8, [r7]
   16b98:	ldr	r7, [r7, #4]
   16b9c:	eor	lr, r7, ip
   16ba0:	eor	r0, r8, r6
   16ba4:	orrs	r0, r0, lr
   16ba8:	bne	16b20 <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   16bac:	ldrb	r0, [r4, #28]
   16bb0:	mov	r8, r6
   16bb4:	mov	r7, ip
   16bb8:	cmp	r0, #0
   16bbc:	bne	16b78 <flatcc_json_printer_uint64_enum_field@@Base+0xb8>
   16bc0:	b	16b20 <flatcc_json_printer_uint64_enum_field@@Base+0x60>

00016bc4 <flatcc_json_printer_int8_enum_field@@Base>:
   16bc4:	push	{r4, r5, r6, r7, fp, lr}
   16bc8:	add	fp, sp, #16
   16bcc:	mov	r4, r0
   16bd0:	mov	r0, #4
   16bd4:	ldr	r5, [r1, #8]
   16bd8:	ldr	ip, [fp, #16]
   16bdc:	add	r6, r0, r2, lsl #1
   16be0:	ldr	r0, [fp, #12]
   16be4:	ldr	r2, [fp, #8]
   16be8:	cmp	r6, r5
   16bec:	bge	16c0c <flatcc_json_printer_int8_enum_field@@Base+0x48>
   16bf0:	ldr	r5, [r1, #4]
   16bf4:	add	r6, r5, r6
   16bf8:	ldrh	r6, [r6]
   16bfc:	cmp	r6, #0
   16c00:	ldrne	r5, [r1]
   16c04:	addsne	r6, r5, r6
   16c08:	bne	16ca8 <flatcc_json_printer_int8_enum_field@@Base+0xe4>
   16c0c:	ldrb	r6, [r4, #29]
   16c10:	mov	r5, r0
   16c14:	cmp	r6, #0
   16c18:	popeq	{r4, r5, r6, r7, fp, pc}
   16c1c:	ldr	r0, [r1, #16]
   16c20:	mov	r7, ip
   16c24:	add	r6, r0, #1
   16c28:	cmp	r0, #0
   16c2c:	str	r6, [r1, #16]
   16c30:	ldrne	r0, [r4, #20]
   16c34:	addne	r1, r0, #1
   16c38:	strne	r1, [r4, #20]
   16c3c:	movne	r1, #44	; 0x2c
   16c40:	strbne	r1, [r0]
   16c44:	mov	r0, r4
   16c48:	mov	r1, r3
   16c4c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16c50:	ldrb	r0, [r4, #27]
   16c54:	cmp	r0, #0
   16c58:	beq	16c94 <flatcc_json_printer_int8_enum_field@@Base+0xd0>
   16c5c:	ubfx	r6, r5, #7, #1
   16c60:	ldr	r1, [r4, #20]
   16c64:	sxtb	r0, r5
   16c68:	cmn	r0, #1
   16c6c:	movle	r0, #45	; 0x2d
   16c70:	rsble	r5, r5, #0
   16c74:	strble	r0, [r1], #1
   16c78:	uxtb	r0, r5
   16c7c:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   16c80:	ldr	r1, [r4, #20]
   16c84:	add	r0, r0, r6
   16c88:	add	r0, r1, r0
   16c8c:	str	r0, [r4, #20]
   16c90:	pop	{r4, r5, r6, r7, fp, pc}
   16c94:	sxtb	r1, r5
   16c98:	mov	r0, r4
   16c9c:	mov	r2, r7
   16ca0:	pop	{r4, r5, r6, r7, fp, lr}
   16ca4:	bx	r2
   16ca8:	ldrb	r5, [r6]
   16cac:	uxtb	r6, r0
   16cb0:	cmp	r5, r6
   16cb4:	bne	16c1c <flatcc_json_printer_int8_enum_field@@Base+0x58>
   16cb8:	ldrb	r6, [r4, #28]
   16cbc:	mov	r5, r0
   16cc0:	cmp	r6, #0
   16cc4:	bne	16c90 <flatcc_json_printer_int8_enum_field@@Base+0xcc>
   16cc8:	b	16c1c <flatcc_json_printer_int8_enum_field@@Base+0x58>

00016ccc <flatcc_json_printer_int16_enum_field@@Base>:
   16ccc:	push	{r4, r5, r6, r7, fp, lr}
   16cd0:	add	fp, sp, #16
   16cd4:	mov	r4, r0
   16cd8:	mov	r0, #4
   16cdc:	ldr	r5, [r1, #8]
   16ce0:	ldr	ip, [fp, #16]
   16ce4:	add	r6, r0, r2, lsl #1
   16ce8:	ldr	r0, [fp, #12]
   16cec:	ldr	r2, [fp, #8]
   16cf0:	cmp	r6, r5
   16cf4:	bge	16d14 <flatcc_json_printer_int16_enum_field@@Base+0x48>
   16cf8:	ldr	r5, [r1, #4]
   16cfc:	add	r6, r5, r6
   16d00:	ldrh	r6, [r6]
   16d04:	cmp	r6, #0
   16d08:	ldrne	r5, [r1]
   16d0c:	addsne	r6, r5, r6
   16d10:	bne	16db0 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   16d14:	ldrb	r6, [r4, #29]
   16d18:	mov	r5, r0
   16d1c:	cmp	r6, #0
   16d20:	popeq	{r4, r5, r6, r7, fp, pc}
   16d24:	ldr	r0, [r1, #16]
   16d28:	mov	r7, ip
   16d2c:	add	r6, r0, #1
   16d30:	cmp	r0, #0
   16d34:	str	r6, [r1, #16]
   16d38:	ldrne	r0, [r4, #20]
   16d3c:	addne	r1, r0, #1
   16d40:	strne	r1, [r4, #20]
   16d44:	movne	r1, #44	; 0x2c
   16d48:	strbne	r1, [r0]
   16d4c:	mov	r0, r4
   16d50:	mov	r1, r3
   16d54:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16d58:	ldrb	r0, [r4, #27]
   16d5c:	cmp	r0, #0
   16d60:	beq	16d9c <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   16d64:	ubfx	r6, r5, #15, #1
   16d68:	ldr	r1, [r4, #20]
   16d6c:	sxth	r0, r5
   16d70:	cmn	r0, #1
   16d74:	movle	r0, #45	; 0x2d
   16d78:	rsble	r5, r5, #0
   16d7c:	strble	r0, [r1], #1
   16d80:	uxth	r0, r5
   16d84:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   16d88:	ldr	r1, [r4, #20]
   16d8c:	add	r0, r0, r6
   16d90:	add	r0, r1, r0
   16d94:	str	r0, [r4, #20]
   16d98:	pop	{r4, r5, r6, r7, fp, pc}
   16d9c:	sxth	r1, r5
   16da0:	mov	r0, r4
   16da4:	mov	r2, r7
   16da8:	pop	{r4, r5, r6, r7, fp, lr}
   16dac:	bx	r2
   16db0:	ldrh	r5, [r6]
   16db4:	uxth	r6, r0
   16db8:	cmp	r5, r6
   16dbc:	bne	16d24 <flatcc_json_printer_int16_enum_field@@Base+0x58>
   16dc0:	ldrb	r6, [r4, #28]
   16dc4:	mov	r5, r0
   16dc8:	cmp	r6, #0
   16dcc:	bne	16d98 <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   16dd0:	b	16d24 <flatcc_json_printer_int16_enum_field@@Base+0x58>

00016dd4 <flatcc_json_printer_int32_enum_field@@Base>:
   16dd4:	push	{r4, r5, r6, r7, fp, lr}
   16dd8:	add	fp, sp, #16
   16ddc:	mov	r4, r0
   16de0:	mov	r0, #4
   16de4:	ldr	r5, [r1, #8]
   16de8:	ldr	ip, [fp, #16]
   16dec:	add	r6, r0, r2, lsl #1
   16df0:	ldr	r0, [fp, #12]
   16df4:	ldr	r2, [fp, #8]
   16df8:	cmp	r6, r5
   16dfc:	bge	16e1c <flatcc_json_printer_int32_enum_field@@Base+0x48>
   16e00:	ldr	r5, [r1, #4]
   16e04:	add	r6, r5, r6
   16e08:	ldrh	r6, [r6]
   16e0c:	cmp	r6, #0
   16e10:	ldrne	r5, [r1]
   16e14:	addsne	r6, r5, r6
   16e18:	bne	16eb4 <flatcc_json_printer_int32_enum_field@@Base+0xe0>
   16e1c:	ldrb	r6, [r4, #29]
   16e20:	mov	r5, r0
   16e24:	cmp	r6, #0
   16e28:	popeq	{r4, r5, r6, r7, fp, pc}
   16e2c:	ldr	r0, [r1, #16]
   16e30:	mov	r7, ip
   16e34:	add	r6, r0, #1
   16e38:	cmp	r0, #0
   16e3c:	str	r6, [r1, #16]
   16e40:	ldrne	r0, [r4, #20]
   16e44:	addne	r1, r0, #1
   16e48:	strne	r1, [r4, #20]
   16e4c:	movne	r1, #44	; 0x2c
   16e50:	strbne	r1, [r0]
   16e54:	mov	r0, r4
   16e58:	mov	r1, r3
   16e5c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16e60:	ldrb	r0, [r4, #27]
   16e64:	cmp	r0, #0
   16e68:	beq	16ea0 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   16e6c:	ldr	r1, [r4, #20]
   16e70:	cmn	r5, #1
   16e74:	lsr	r6, r5, #31
   16e78:	movle	r0, #45	; 0x2d
   16e7c:	rsble	r5, r5, #0
   16e80:	strble	r0, [r1], #1
   16e84:	mov	r0, r5
   16e88:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   16e8c:	ldr	r1, [r4, #20]
   16e90:	add	r0, r0, r6
   16e94:	add	r0, r1, r0
   16e98:	str	r0, [r4, #20]
   16e9c:	pop	{r4, r5, r6, r7, fp, pc}
   16ea0:	mov	r0, r4
   16ea4:	mov	r1, r5
   16ea8:	mov	r2, r7
   16eac:	pop	{r4, r5, r6, r7, fp, lr}
   16eb0:	bx	r2
   16eb4:	ldr	r5, [r6]
   16eb8:	cmp	r5, r0
   16ebc:	bne	16e2c <flatcc_json_printer_int32_enum_field@@Base+0x58>
   16ec0:	ldrb	r6, [r4, #28]
   16ec4:	mov	r5, r0
   16ec8:	cmp	r6, #0
   16ecc:	bne	16e9c <flatcc_json_printer_int32_enum_field@@Base+0xc8>
   16ed0:	b	16e2c <flatcc_json_printer_int32_enum_field@@Base+0x58>

00016ed4 <flatcc_json_printer_int64_enum_field@@Base>:
   16ed4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16ed8:	add	fp, sp, #24
   16edc:	mov	r4, r0
   16ee0:	mov	r0, #4
   16ee4:	ldr	r5, [r1, #8]
   16ee8:	ldr	r6, [fp, #16]
   16eec:	ldr	r9, [fp, #24]
   16ef0:	add	r7, r0, r2, lsl #1
   16ef4:	ldr	r0, [fp, #20]
   16ef8:	ldr	r2, [fp, #8]
   16efc:	cmp	r7, r5
   16f00:	bge	16f20 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   16f04:	ldr	r5, [r1, #4]
   16f08:	add	r7, r5, r7
   16f0c:	ldrh	r7, [r7]
   16f10:	cmp	r7, #0
   16f14:	ldrne	r5, [r1]
   16f18:	addsne	r7, r5, r7
   16f1c:	bne	16fc8 <flatcc_json_printer_int64_enum_field@@Base+0xf4>
   16f20:	ldrb	r7, [r4, #29]
   16f24:	mov	r8, r6
   16f28:	cmp	r7, #0
   16f2c:	mov	r7, r0
   16f30:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   16f34:	ldr	r0, [r1, #16]
   16f38:	add	r6, r0, #1
   16f3c:	cmp	r0, #0
   16f40:	str	r6, [r1, #16]
   16f44:	ldrne	r0, [r4, #20]
   16f48:	addne	r1, r0, #1
   16f4c:	strne	r1, [r4, #20]
   16f50:	movne	r1, #44	; 0x2c
   16f54:	strbne	r1, [r0]
   16f58:	mov	r0, r4
   16f5c:	mov	r1, r3
   16f60:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   16f64:	ldrb	r0, [r4, #27]
   16f68:	cmp	r0, #0
   16f6c:	beq	16fb0 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   16f70:	ldr	r2, [r4, #20]
   16f74:	lsr	r5, r7, #31
   16f78:	cmn	r7, #1
   16f7c:	bgt	16f90 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   16f80:	mov	r0, #45	; 0x2d
   16f84:	rsbs	r8, r8, #0
   16f88:	strb	r0, [r2], #1
   16f8c:	rsc	r7, r7, #0
   16f90:	mov	r0, r8
   16f94:	mov	r1, r7
   16f98:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   16f9c:	ldr	r1, [r4, #20]
   16fa0:	add	r0, r0, r5
   16fa4:	add	r0, r1, r0
   16fa8:	str	r0, [r4, #20]
   16fac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16fb0:	mov	r0, r4
   16fb4:	mov	r2, r8
   16fb8:	mov	r3, r7
   16fbc:	mov	r1, r9
   16fc0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   16fc4:	bx	r1
   16fc8:	ldr	r8, [r7]
   16fcc:	ldr	r7, [r7, #4]
   16fd0:	eor	ip, r7, r0
   16fd4:	eor	r5, r8, r6
   16fd8:	orrs	r5, r5, ip
   16fdc:	bne	16f34 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   16fe0:	ldrb	r7, [r4, #28]
   16fe4:	mov	r8, r6
   16fe8:	cmp	r7, #0
   16fec:	mov	r7, r0
   16ff0:	bne	16fac <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   16ff4:	b	16f34 <flatcc_json_printer_int64_enum_field@@Base+0x60>

00016ff8 <flatcc_json_printer_bool_enum_field@@Base>:
   16ff8:	push	{r4, r5, r6, r7, fp, lr}
   16ffc:	add	fp, sp, #16
   17000:	mov	r4, r0
   17004:	mov	r0, #4
   17008:	ldr	r7, [fp, #16]
   1700c:	ldr	ip, [fp, #12]
   17010:	add	r5, r0, r2, lsl #1
   17014:	ldr	r0, [r1, #8]
   17018:	ldr	r2, [fp, #8]
   1701c:	cmp	r5, r0
   17020:	bge	17040 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   17024:	ldr	r0, [r1, #4]
   17028:	add	r0, r0, r5
   1702c:	ldrh	r5, [r0]
   17030:	cmp	r5, #0
   17034:	ldrne	r0, [r1]
   17038:	addsne	r5, r0, r5
   1703c:	bne	170f0 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   17040:	ldrb	r0, [r4, #29]
   17044:	mov	r6, ip
   17048:	cmp	r0, #0
   1704c:	popeq	{r4, r5, r6, r7, fp, pc}
   17050:	ldr	r0, [r1, #16]
   17054:	add	r5, r0, #1
   17058:	cmp	r0, #0
   1705c:	str	r5, [r1, #16]
   17060:	ldrne	r0, [r4, #20]
   17064:	addne	r1, r0, #1
   17068:	strne	r1, [r4, #20]
   1706c:	movne	r1, #44	; 0x2c
   17070:	strbne	r1, [r0]
   17074:	mov	r0, r4
   17078:	mov	r1, r3
   1707c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17080:	ldrb	r0, [r4, #27]
   17084:	cmp	r0, #0
   17088:	beq	170b4 <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   1708c:	ldr	r0, [r4, #20]
   17090:	cmp	r6, #0
   17094:	beq	170c8 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   17098:	mov	r1, #0
   1709c:	strb	r1, [r0, #4]
   170a0:	movw	r1, #29300	; 0x7274
   170a4:	movt	r1, #25973	; 0x6575
   170a8:	str	r1, [r0]
   170ac:	mov	r0, #4
   170b0:	b	170e0 <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   170b4:	mov	r0, r4
   170b8:	mov	r1, r6
   170bc:	mov	r2, r7
   170c0:	pop	{r4, r5, r6, r7, fp, lr}
   170c4:	bx	r2
   170c8:	mov	r1, #101	; 0x65
   170cc:	strh	r1, [r0, #4]
   170d0:	movw	r1, #24934	; 0x6166
   170d4:	movt	r1, #29548	; 0x736c
   170d8:	str	r1, [r0]
   170dc:	mov	r0, #5
   170e0:	ldr	r1, [r4, #20]
   170e4:	add	r0, r1, r0
   170e8:	str	r0, [r4, #20]
   170ec:	pop	{r4, r5, r6, r7, fp, pc}
   170f0:	ldrb	r6, [r5]
   170f4:	cmp	r6, ip
   170f8:	bne	17050 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   170fc:	ldrb	r0, [r4, #28]
   17100:	mov	r6, ip
   17104:	cmp	r0, #0
   17108:	bne	170ec <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   1710c:	b	17050 <flatcc_json_printer_bool_enum_field@@Base+0x58>

00017110 <flatcc_json_printer_uint8_struct_field@@Base>:
   17110:	push	{r4, r5, r6, sl, fp, lr}
   17114:	add	fp, sp, #16
   17118:	mov	r5, r1
   1711c:	mov	r4, r0
   17120:	ldrb	r6, [r2, r3]
   17124:	ldr	r2, [fp, #12]
   17128:	ldr	r1, [fp, #8]
   1712c:	cmp	r5, #0
   17130:	ldrne	r0, [r4, #20]
   17134:	addne	r3, r0, #1
   17138:	strne	r3, [r4, #20]
   1713c:	movne	r3, #44	; 0x2c
   17140:	strbne	r3, [r0]
   17144:	mov	r0, r4
   17148:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1714c:	ldr	r1, [r4, #20]
   17150:	mov	r0, r6
   17154:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   17158:	ldr	r1, [r4, #20]
   1715c:	add	r0, r1, r0
   17160:	str	r0, [r4, #20]
   17164:	pop	{r4, r5, r6, sl, fp, pc}

00017168 <flatcc_json_printer_uint16_struct_field@@Base>:
   17168:	push	{r4, r5, r6, sl, fp, lr}
   1716c:	add	fp, sp, #16
   17170:	mov	r5, r1
   17174:	mov	r4, r0
   17178:	add	r0, r2, r3
   1717c:	ldr	r2, [fp, #12]
   17180:	ldr	r1, [fp, #8]
   17184:	cmp	r5, #0
   17188:	ldrh	r6, [r0]
   1718c:	ldrne	r0, [r4, #20]
   17190:	addne	r3, r0, #1
   17194:	strne	r3, [r4, #20]
   17198:	movne	r3, #44	; 0x2c
   1719c:	strbne	r3, [r0]
   171a0:	mov	r0, r4
   171a4:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   171a8:	ldr	r1, [r4, #20]
   171ac:	mov	r0, r6
   171b0:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   171b4:	ldr	r1, [r4, #20]
   171b8:	add	r0, r1, r0
   171bc:	str	r0, [r4, #20]
   171c0:	pop	{r4, r5, r6, sl, fp, pc}

000171c4 <flatcc_json_printer_uint32_struct_field@@Base>:
   171c4:	push	{r4, r5, r6, sl, fp, lr}
   171c8:	add	fp, sp, #16
   171cc:	mov	r5, r1
   171d0:	mov	r4, r0
   171d4:	ldr	r6, [r2, r3]
   171d8:	ldr	r2, [fp, #12]
   171dc:	ldr	r1, [fp, #8]
   171e0:	cmp	r5, #0
   171e4:	ldrne	r0, [r4, #20]
   171e8:	addne	r3, r0, #1
   171ec:	strne	r3, [r4, #20]
   171f0:	movne	r3, #44	; 0x2c
   171f4:	strbne	r3, [r0]
   171f8:	mov	r0, r4
   171fc:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17200:	ldr	r1, [r4, #20]
   17204:	mov	r0, r6
   17208:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   1720c:	ldr	r1, [r4, #20]
   17210:	add	r0, r1, r0
   17214:	str	r0, [r4, #20]
   17218:	pop	{r4, r5, r6, sl, fp, pc}

0001721c <flatcc_json_printer_uint64_struct_field@@Base>:
   1721c:	push	{r4, r5, r6, r7, fp, lr}
   17220:	add	fp, sp, #16
   17224:	mov	r5, r1
   17228:	ldr	r7, [r2, r3]!
   1722c:	mov	r4, r0
   17230:	ldr	r1, [fp, #8]
   17234:	cmp	r5, #0
   17238:	ldrne	r0, [r4, #20]
   1723c:	ldr	r6, [r2, #4]
   17240:	ldr	r2, [fp, #12]
   17244:	addne	r3, r0, #1
   17248:	strne	r3, [r4, #20]
   1724c:	movne	r3, #44	; 0x2c
   17250:	strbne	r3, [r0]
   17254:	mov	r0, r4
   17258:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1725c:	ldr	r2, [r4, #20]
   17260:	mov	r0, r7
   17264:	mov	r1, r6
   17268:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   1726c:	ldr	r1, [r4, #20]
   17270:	add	r0, r1, r0
   17274:	str	r0, [r4, #20]
   17278:	pop	{r4, r5, r6, r7, fp, pc}

0001727c <flatcc_json_printer_int8_struct_field@@Base>:
   1727c:	push	{r4, r5, r6, sl, fp, lr}
   17280:	add	fp, sp, #16
   17284:	mov	ip, r1
   17288:	mov	r4, r0
   1728c:	add	r0, r2, r3
   17290:	ldr	r2, [fp, #12]
   17294:	ldr	r1, [fp, #8]
   17298:	cmp	ip, #0
   1729c:	ldrsb	r5, [r0]
   172a0:	ldrne	r0, [r4, #20]
   172a4:	addne	r3, r0, #1
   172a8:	strne	r3, [r4, #20]
   172ac:	movne	r3, #44	; 0x2c
   172b0:	strbne	r3, [r0]
   172b4:	mov	r0, r4
   172b8:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   172bc:	ubfx	r6, r5, #7, #1
   172c0:	ldr	r1, [r4, #20]
   172c4:	cmn	r5, #1
   172c8:	movle	r0, #45	; 0x2d
   172cc:	rsble	r5, r5, #0
   172d0:	strble	r0, [r1], #1
   172d4:	uxtb	r0, r5
   172d8:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   172dc:	ldr	r1, [r4, #20]
   172e0:	add	r0, r0, r6
   172e4:	add	r0, r1, r0
   172e8:	str	r0, [r4, #20]
   172ec:	pop	{r4, r5, r6, sl, fp, pc}

000172f0 <flatcc_json_printer_int16_struct_field@@Base>:
   172f0:	push	{r4, r5, r6, sl, fp, lr}
   172f4:	add	fp, sp, #16
   172f8:	mov	ip, r1
   172fc:	mov	r4, r0
   17300:	add	r0, r2, r3
   17304:	ldr	r2, [fp, #12]
   17308:	ldr	r1, [fp, #8]
   1730c:	cmp	ip, #0
   17310:	ldrsh	r5, [r0]
   17314:	ldrne	r0, [r4, #20]
   17318:	addne	r3, r0, #1
   1731c:	strne	r3, [r4, #20]
   17320:	movne	r3, #44	; 0x2c
   17324:	strbne	r3, [r0]
   17328:	mov	r0, r4
   1732c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17330:	ubfx	r6, r5, #15, #1
   17334:	ldr	r1, [r4, #20]
   17338:	cmn	r5, #1
   1733c:	movle	r0, #45	; 0x2d
   17340:	rsble	r5, r5, #0
   17344:	strble	r0, [r1], #1
   17348:	uxth	r0, r5
   1734c:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   17350:	ldr	r1, [r4, #20]
   17354:	add	r0, r0, r6
   17358:	add	r0, r1, r0
   1735c:	str	r0, [r4, #20]
   17360:	pop	{r4, r5, r6, sl, fp, pc}

00017364 <flatcc_json_printer_int32_struct_field@@Base>:
   17364:	push	{r4, r5, r6, sl, fp, lr}
   17368:	add	fp, sp, #16
   1736c:	mov	ip, r1
   17370:	mov	r4, r0
   17374:	ldr	r5, [r2, r3]
   17378:	ldr	r2, [fp, #12]
   1737c:	ldr	r1, [fp, #8]
   17380:	cmp	ip, #0
   17384:	ldrne	r0, [r4, #20]
   17388:	addne	r3, r0, #1
   1738c:	strne	r3, [r4, #20]
   17390:	movne	r3, #44	; 0x2c
   17394:	strbne	r3, [r0]
   17398:	mov	r0, r4
   1739c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   173a0:	ldr	r1, [r4, #20]
   173a4:	cmn	r5, #1
   173a8:	lsr	r6, r5, #31
   173ac:	movle	r0, #45	; 0x2d
   173b0:	rsble	r5, r5, #0
   173b4:	strble	r0, [r1], #1
   173b8:	mov	r0, r5
   173bc:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   173c0:	ldr	r1, [r4, #20]
   173c4:	add	r0, r0, r6
   173c8:	add	r0, r1, r0
   173cc:	str	r0, [r4, #20]
   173d0:	pop	{r4, r5, r6, sl, fp, pc}

000173d4 <flatcc_json_printer_int64_struct_field@@Base>:
   173d4:	push	{r4, r5, r6, r7, fp, lr}
   173d8:	add	fp, sp, #16
   173dc:	mov	r5, r1
   173e0:	ldr	r7, [r2, r3]!
   173e4:	mov	r4, r0
   173e8:	ldr	r1, [fp, #8]
   173ec:	cmp	r5, #0
   173f0:	ldrne	r0, [r4, #20]
   173f4:	ldr	r6, [r2, #4]
   173f8:	ldr	r2, [fp, #12]
   173fc:	addne	r3, r0, #1
   17400:	strne	r3, [r4, #20]
   17404:	movne	r3, #44	; 0x2c
   17408:	strbne	r3, [r0]
   1740c:	mov	r0, r4
   17410:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17414:	ldr	r2, [r4, #20]
   17418:	lsr	r5, r6, #31
   1741c:	cmn	r6, #1
   17420:	bgt	17434 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   17424:	mov	r0, #45	; 0x2d
   17428:	rsbs	r7, r7, #0
   1742c:	strb	r0, [r2], #1
   17430:	rsc	r6, r6, #0
   17434:	mov	r0, r7
   17438:	mov	r1, r6
   1743c:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   17440:	ldr	r1, [r4, #20]
   17444:	add	r0, r0, r5
   17448:	add	r0, r1, r0
   1744c:	str	r0, [r4, #20]
   17450:	pop	{r4, r5, r6, r7, fp, pc}

00017454 <flatcc_json_printer_bool_struct_field@@Base>:
   17454:	push	{r4, r5, fp, lr}
   17458:	add	fp, sp, #8
   1745c:	mov	ip, r1
   17460:	mov	r4, r0
   17464:	ldrb	r5, [r2, r3]
   17468:	ldr	r2, [fp, #12]
   1746c:	ldr	r1, [fp, #8]
   17470:	cmp	ip, #0
   17474:	ldrne	r0, [r4, #20]
   17478:	addne	r3, r0, #1
   1747c:	strne	r3, [r4, #20]
   17480:	movne	r3, #44	; 0x2c
   17484:	strbne	r3, [r0]
   17488:	mov	r0, r4
   1748c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17490:	ldr	r0, [r4, #20]
   17494:	cmp	r5, #0
   17498:	beq	174b8 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1749c:	mov	r1, #0
   174a0:	strb	r1, [r0, #4]
   174a4:	movw	r1, #29300	; 0x7274
   174a8:	movt	r1, #25973	; 0x6575
   174ac:	str	r1, [r0]
   174b0:	mov	r0, #4
   174b4:	b	174d0 <flatcc_json_printer_bool_struct_field@@Base+0x7c>
   174b8:	mov	r1, #101	; 0x65
   174bc:	strh	r1, [r0, #4]
   174c0:	movw	r1, #24934	; 0x6166
   174c4:	movt	r1, #29548	; 0x736c
   174c8:	str	r1, [r0]
   174cc:	mov	r0, #5
   174d0:	ldr	r1, [r4, #20]
   174d4:	add	r0, r1, r0
   174d8:	str	r0, [r4, #20]
   174dc:	pop	{r4, r5, fp, pc}

000174e0 <flatcc_json_printer_float_struct_field@@Base>:
   174e0:	push	{r4, sl, fp, lr}
   174e4:	add	fp, sp, #8
   174e8:	vpush	{d8}
   174ec:	mov	ip, r1
   174f0:	mov	r4, r0
   174f4:	add	r0, r2, r3
   174f8:	ldr	r2, [fp, #12]
   174fc:	ldr	r1, [fp, #8]
   17500:	cmp	ip, #0
   17504:	vldr	s16, [r0]
   17508:	ldrne	r0, [r4, #20]
   1750c:	addne	r3, r0, #1
   17510:	strne	r3, [r4, #20]
   17514:	movne	r3, #44	; 0x2c
   17518:	strbne	r3, [r0]
   1751c:	mov	r0, r4
   17520:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17524:	ldr	r0, [r4, #20]
   17528:	vcvt.f64.f32	d0, s16
   1752c:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   17530:	ldr	r1, [r4, #20]
   17534:	add	r0, r1, r0
   17538:	str	r0, [r4, #20]
   1753c:	vpop	{d8}
   17540:	pop	{r4, sl, fp, pc}

00017544 <flatcc_json_printer_double_struct_field@@Base>:
   17544:	push	{r4, sl, fp, lr}
   17548:	add	fp, sp, #8
   1754c:	vpush	{d8}
   17550:	mov	ip, r1
   17554:	mov	r4, r0
   17558:	add	r0, r2, r3
   1755c:	ldr	r2, [fp, #12]
   17560:	ldr	r1, [fp, #8]
   17564:	cmp	ip, #0
   17568:	vldr	d8, [r0]
   1756c:	ldrne	r0, [r4, #20]
   17570:	addne	r3, r0, #1
   17574:	strne	r3, [r4, #20]
   17578:	movne	r3, #44	; 0x2c
   1757c:	strbne	r3, [r0]
   17580:	mov	r0, r4
   17584:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17588:	ldr	r0, [r4, #20]
   1758c:	vorr	d0, d8, d8
   17590:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   17594:	ldr	r1, [r4, #20]
   17598:	add	r0, r1, r0
   1759c:	str	r0, [r4, #20]
   175a0:	vpop	{d8}
   175a4:	pop	{r4, sl, fp, pc}

000175a8 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   175a8:	push	{r4, r5, r6, r7, fp, lr}
   175ac:	add	fp, sp, #16
   175b0:	mov	r5, r1
   175b4:	mov	r4, r0
   175b8:	add	r7, fp, #8
   175bc:	ldrb	r6, [r2, r3]
   175c0:	cmp	r5, #0
   175c4:	ldm	r7, {r1, r2, r7}
   175c8:	ldrne	r0, [r4, #20]
   175cc:	addne	r3, r0, #1
   175d0:	strne	r3, [r4, #20]
   175d4:	movne	r3, #44	; 0x2c
   175d8:	strbne	r3, [r0]
   175dc:	mov	r0, r4
   175e0:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   175e4:	ldrb	r0, [r4, #27]
   175e8:	cmp	r0, #0
   175ec:	beq	1760c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x64>
   175f0:	ldr	r1, [r4, #20]
   175f4:	mov	r0, r6
   175f8:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   175fc:	ldr	r1, [r4, #20]
   17600:	add	r0, r1, r0
   17604:	str	r0, [r4, #20]
   17608:	pop	{r4, r5, r6, r7, fp, pc}
   1760c:	mov	r0, r4
   17610:	mov	r1, r6
   17614:	mov	r2, r7
   17618:	pop	{r4, r5, r6, r7, fp, lr}
   1761c:	bx	r2

00017620 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   17620:	push	{r4, r5, r6, r7, fp, lr}
   17624:	add	fp, sp, #16
   17628:	mov	r5, r1
   1762c:	mov	r4, r0
   17630:	add	r0, r2, r3
   17634:	add	r7, fp, #8
   17638:	cmp	r5, #0
   1763c:	ldrh	r6, [r0]
   17640:	ldm	r7, {r1, r2, r7}
   17644:	ldrne	r0, [r4, #20]
   17648:	addne	r3, r0, #1
   1764c:	strne	r3, [r4, #20]
   17650:	movne	r3, #44	; 0x2c
   17654:	strbne	r3, [r0]
   17658:	mov	r0, r4
   1765c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17660:	ldrb	r0, [r4, #27]
   17664:	cmp	r0, #0
   17668:	beq	17688 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x68>
   1766c:	ldr	r1, [r4, #20]
   17670:	mov	r0, r6
   17674:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   17678:	ldr	r1, [r4, #20]
   1767c:	add	r0, r1, r0
   17680:	str	r0, [r4, #20]
   17684:	pop	{r4, r5, r6, r7, fp, pc}
   17688:	mov	r0, r4
   1768c:	mov	r1, r6
   17690:	mov	r2, r7
   17694:	pop	{r4, r5, r6, r7, fp, lr}
   17698:	bx	r2

0001769c <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   1769c:	push	{r4, r5, r6, r7, fp, lr}
   176a0:	add	fp, sp, #16
   176a4:	mov	r5, r1
   176a8:	mov	r4, r0
   176ac:	add	r7, fp, #8
   176b0:	ldr	r6, [r2, r3]
   176b4:	cmp	r5, #0
   176b8:	ldm	r7, {r1, r2, r7}
   176bc:	ldrne	r0, [r4, #20]
   176c0:	addne	r3, r0, #1
   176c4:	strne	r3, [r4, #20]
   176c8:	movne	r3, #44	; 0x2c
   176cc:	strbne	r3, [r0]
   176d0:	mov	r0, r4
   176d4:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   176d8:	ldrb	r0, [r4, #27]
   176dc:	cmp	r0, #0
   176e0:	beq	17700 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   176e4:	ldr	r1, [r4, #20]
   176e8:	mov	r0, r6
   176ec:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   176f0:	ldr	r1, [r4, #20]
   176f4:	add	r0, r1, r0
   176f8:	str	r0, [r4, #20]
   176fc:	pop	{r4, r5, r6, r7, fp, pc}
   17700:	mov	r0, r4
   17704:	mov	r1, r6
   17708:	mov	r2, r7
   1770c:	pop	{r4, r5, r6, r7, fp, lr}
   17710:	bx	r2

00017714 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   17714:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17718:	add	fp, sp, #24
   1771c:	ldr	r6, [r2, r3]!
   17720:	mov	r5, r1
   17724:	mov	r4, r0
   17728:	add	r8, fp, #8
   1772c:	cmp	r5, #0
   17730:	ldr	r7, [r2, #4]
   17734:	ldm	r8, {r1, r2, r8}
   17738:	ldrne	r0, [r4, #20]
   1773c:	addne	r3, r0, #1
   17740:	strne	r3, [r4, #20]
   17744:	movne	r3, #44	; 0x2c
   17748:	strbne	r3, [r0]
   1774c:	mov	r0, r4
   17750:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17754:	ldrb	r0, [r4, #27]
   17758:	cmp	r0, #0
   1775c:	beq	17780 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x6c>
   17760:	ldr	r2, [r4, #20]
   17764:	mov	r0, r6
   17768:	mov	r1, r7
   1776c:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   17770:	ldr	r1, [r4, #20]
   17774:	add	r0, r1, r0
   17778:	str	r0, [r4, #20]
   1777c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17780:	mov	r0, r4
   17784:	mov	r2, r6
   17788:	mov	r3, r7
   1778c:	mov	r1, r8
   17790:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17794:	bx	r1

00017798 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   17798:	push	{r4, r5, r6, r7, fp, lr}
   1779c:	add	fp, sp, #16
   177a0:	mov	r5, r1
   177a4:	mov	r4, r0
   177a8:	add	r0, r2, r3
   177ac:	add	r7, fp, #8
   177b0:	cmp	r5, #0
   177b4:	ldrsb	r6, [r0]
   177b8:	ldm	r7, {r1, r2, r7}
   177bc:	ldrne	r0, [r4, #20]
   177c0:	addne	r3, r0, #1
   177c4:	strne	r3, [r4, #20]
   177c8:	movne	r3, #44	; 0x2c
   177cc:	strbne	r3, [r0]
   177d0:	mov	r0, r4
   177d4:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   177d8:	ldrb	r0, [r4, #27]
   177dc:	cmp	r0, #0
   177e0:	beq	17818 <flatcc_json_printer_int8_enum_struct_field@@Base+0x80>
   177e4:	ubfx	r5, r6, #7, #1
   177e8:	ldr	r1, [r4, #20]
   177ec:	cmn	r6, #1
   177f0:	movle	r0, #45	; 0x2d
   177f4:	rsble	r6, r6, #0
   177f8:	strble	r0, [r1], #1
   177fc:	uxtb	r0, r6
   17800:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   17804:	ldr	r1, [r4, #20]
   17808:	add	r0, r0, r5
   1780c:	add	r0, r1, r0
   17810:	str	r0, [r4, #20]
   17814:	pop	{r4, r5, r6, r7, fp, pc}
   17818:	mov	r0, r4
   1781c:	mov	r1, r6
   17820:	mov	r2, r7
   17824:	pop	{r4, r5, r6, r7, fp, lr}
   17828:	bx	r2

0001782c <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1782c:	push	{r4, r5, r6, r7, fp, lr}
   17830:	add	fp, sp, #16
   17834:	mov	r5, r1
   17838:	mov	r4, r0
   1783c:	add	r0, r2, r3
   17840:	add	r7, fp, #8
   17844:	cmp	r5, #0
   17848:	ldrsh	r6, [r0]
   1784c:	ldm	r7, {r1, r2, r7}
   17850:	ldrne	r0, [r4, #20]
   17854:	addne	r3, r0, #1
   17858:	strne	r3, [r4, #20]
   1785c:	movne	r3, #44	; 0x2c
   17860:	strbne	r3, [r0]
   17864:	mov	r0, r4
   17868:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1786c:	ldrb	r0, [r4, #27]
   17870:	cmp	r0, #0
   17874:	beq	178ac <flatcc_json_printer_int16_enum_struct_field@@Base+0x80>
   17878:	ubfx	r5, r6, #15, #1
   1787c:	ldr	r1, [r4, #20]
   17880:	cmn	r6, #1
   17884:	movle	r0, #45	; 0x2d
   17888:	rsble	r6, r6, #0
   1788c:	strble	r0, [r1], #1
   17890:	uxth	r0, r6
   17894:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   17898:	ldr	r1, [r4, #20]
   1789c:	add	r0, r0, r5
   178a0:	add	r0, r1, r0
   178a4:	str	r0, [r4, #20]
   178a8:	pop	{r4, r5, r6, r7, fp, pc}
   178ac:	mov	r0, r4
   178b0:	mov	r1, r6
   178b4:	mov	r2, r7
   178b8:	pop	{r4, r5, r6, r7, fp, lr}
   178bc:	bx	r2

000178c0 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   178c0:	push	{r4, r5, r6, r7, fp, lr}
   178c4:	add	fp, sp, #16
   178c8:	mov	r5, r1
   178cc:	mov	r4, r0
   178d0:	add	r7, fp, #8
   178d4:	ldr	r6, [r2, r3]
   178d8:	cmp	r5, #0
   178dc:	ldm	r7, {r1, r2, r7}
   178e0:	ldrne	r0, [r4, #20]
   178e4:	addne	r3, r0, #1
   178e8:	strne	r3, [r4, #20]
   178ec:	movne	r3, #44	; 0x2c
   178f0:	strbne	r3, [r0]
   178f4:	mov	r0, r4
   178f8:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   178fc:	ldrb	r0, [r4, #27]
   17900:	cmp	r0, #0
   17904:	beq	1793c <flatcc_json_printer_int32_enum_struct_field@@Base+0x7c>
   17908:	ldr	r1, [r4, #20]
   1790c:	cmn	r6, #1
   17910:	lsr	r5, r6, #31
   17914:	movle	r0, #45	; 0x2d
   17918:	rsble	r6, r6, #0
   1791c:	strble	r0, [r1], #1
   17920:	mov	r0, r6
   17924:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   17928:	ldr	r1, [r4, #20]
   1792c:	add	r0, r0, r5
   17930:	add	r0, r1, r0
   17934:	str	r0, [r4, #20]
   17938:	pop	{r4, r5, r6, r7, fp, pc}
   1793c:	mov	r0, r4
   17940:	mov	r1, r6
   17944:	mov	r2, r7
   17948:	pop	{r4, r5, r6, r7, fp, lr}
   1794c:	bx	r2

00017950 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   17950:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17954:	add	fp, sp, #24
   17958:	ldr	r7, [r2, r3]!
   1795c:	mov	r6, r1
   17960:	mov	r4, r0
   17964:	add	r8, fp, #8
   17968:	cmp	r6, #0
   1796c:	ldr	r5, [r2, #4]
   17970:	ldm	r8, {r1, r2, r8}
   17974:	ldrne	r0, [r4, #20]
   17978:	addne	r3, r0, #1
   1797c:	strne	r3, [r4, #20]
   17980:	movne	r3, #44	; 0x2c
   17984:	strbne	r3, [r0]
   17988:	mov	r0, r4
   1798c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17990:	ldrb	r0, [r4, #27]
   17994:	cmp	r0, #0
   17998:	beq	179dc <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   1799c:	ldr	r2, [r4, #20]
   179a0:	lsr	r6, r5, #31
   179a4:	cmn	r5, #1
   179a8:	bgt	179bc <flatcc_json_printer_int64_enum_struct_field@@Base+0x6c>
   179ac:	mov	r0, #45	; 0x2d
   179b0:	rsbs	r7, r7, #0
   179b4:	strb	r0, [r2], #1
   179b8:	rsc	r5, r5, #0
   179bc:	mov	r0, r7
   179c0:	mov	r1, r5
   179c4:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   179c8:	ldr	r1, [r4, #20]
   179cc:	add	r0, r0, r6
   179d0:	add	r0, r1, r0
   179d4:	str	r0, [r4, #20]
   179d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   179dc:	mov	r0, r4
   179e0:	mov	r2, r7
   179e4:	mov	r3, r5
   179e8:	mov	r1, r8
   179ec:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   179f0:	bx	r1

000179f4 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   179f4:	push	{r4, r5, r6, r7, fp, lr}
   179f8:	add	fp, sp, #16
   179fc:	mov	r5, r1
   17a00:	mov	r4, r0
   17a04:	add	r7, fp, #8
   17a08:	ldrb	r6, [r2, r3]
   17a0c:	cmp	r5, #0
   17a10:	ldm	r7, {r1, r2, r7}
   17a14:	ldrne	r0, [r4, #20]
   17a18:	addne	r3, r0, #1
   17a1c:	strne	r3, [r4, #20]
   17a20:	movne	r3, #44	; 0x2c
   17a24:	strbne	r3, [r0]
   17a28:	mov	r0, r4
   17a2c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17a30:	ldrb	r0, [r4, #27]
   17a34:	cmp	r0, #0
   17a38:	beq	17a64 <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   17a3c:	ldr	r0, [r4, #20]
   17a40:	cmp	r6, #0
   17a44:	beq	17a78 <flatcc_json_printer_bool_enum_struct_field@@Base+0x84>
   17a48:	mov	r1, #0
   17a4c:	strb	r1, [r0, #4]
   17a50:	movw	r1, #29300	; 0x7274
   17a54:	movt	r1, #25973	; 0x6575
   17a58:	str	r1, [r0]
   17a5c:	mov	r0, #4
   17a60:	b	17a90 <flatcc_json_printer_bool_enum_struct_field@@Base+0x9c>
   17a64:	mov	r0, r4
   17a68:	mov	r1, r6
   17a6c:	mov	r2, r7
   17a70:	pop	{r4, r5, r6, r7, fp, lr}
   17a74:	bx	r2
   17a78:	mov	r1, #101	; 0x65
   17a7c:	strh	r1, [r0, #4]
   17a80:	movw	r1, #24934	; 0x6166
   17a84:	movt	r1, #29548	; 0x736c
   17a88:	str	r1, [r0]
   17a8c:	mov	r0, #5
   17a90:	ldr	r1, [r4, #20]
   17a94:	add	r0, r1, r0
   17a98:	str	r0, [r4, #20]
   17a9c:	pop	{r4, r5, r6, r7, fp, pc}

00017aa0 <flatcc_json_printer_utype_vector_field@@Base>:
   17aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17aa4:	add	fp, sp, #28
   17aa8:	sub	sp, sp, #4
   17aac:	mov	r4, r0
   17ab0:	mov	r0, #4
   17ab4:	add	r0, r0, r2, lsl #1
   17ab8:	ldr	r2, [r1, #8]
   17abc:	cmp	r0, r2
   17ac0:	bge	17e44 <flatcc_json_printer_utype_vector_field@@Base+0x3a4>
   17ac4:	ldr	r2, [r1, #4]
   17ac8:	add	r0, r2, r0
   17acc:	ldrh	r0, [r0]
   17ad0:	cmp	r0, #0
   17ad4:	ldrne	r2, [r1]
   17ad8:	addsne	r8, r2, r0
   17adc:	beq	17e44 <flatcc_json_printer_utype_vector_field@@Base+0x3a4>
   17ae0:	ldr	r0, [r1, #16]
   17ae4:	ldr	r2, [fp, #8]
   17ae8:	add	r7, r0, #1
   17aec:	cmp	r0, #0
   17af0:	str	r7, [r1, #16]
   17af4:	ldrne	r0, [r4, #20]
   17af8:	addne	r1, r0, #1
   17afc:	strne	r1, [r4, #20]
   17b00:	movne	r1, #44	; 0x2c
   17b04:	strbne	r1, [r0]
   17b08:	mov	r1, r3
   17b0c:	ldr	r0, [r8]
   17b10:	ldr	r7, [r8, r0]!
   17b14:	mov	r0, r4
   17b18:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17b1c:	ldr	r1, [r4, #32]
   17b20:	ldr	r0, [r4, #20]
   17b24:	cmp	r7, #0
   17b28:	add	r1, r1, #1
   17b2c:	str	r1, [r4, #32]
   17b30:	add	r1, r0, #1
   17b34:	str	r1, [r4, #20]
   17b38:	mov	r1, #91	; 0x5b
   17b3c:	strb	r1, [r0]
   17b40:	beq	17d68 <flatcc_json_printer_utype_vector_field@@Base+0x2c8>
   17b44:	ldrb	r0, [r4, #25]
   17b48:	ldr	r1, [r4, #20]
   17b4c:	cmp	r0, #0
   17b50:	beq	17c0c <flatcc_json_printer_utype_vector_field@@Base+0x16c>
   17b54:	add	r0, r1, #1
   17b58:	str	r0, [r4, #20]
   17b5c:	mov	r0, #10
   17b60:	strb	r0, [r1]
   17b64:	ldr	r0, [r4, #20]
   17b68:	ldrb	r2, [r4, #25]
   17b6c:	ldr	r3, [r4, #32]
   17b70:	ldr	r1, [r4, #16]
   17b74:	mla	r6, r3, r2, r0
   17b78:	mul	r5, r3, r2
   17b7c:	cmp	r6, r1
   17b80:	bls	17bf0 <flatcc_json_printer_utype_vector_field@@Base+0x150>
   17b84:	cmp	r0, r1
   17b88:	bcc	17ba4 <flatcc_json_printer_utype_vector_field@@Base+0x104>
   17b8c:	ldr	r2, [r4, #44]	; 0x2c
   17b90:	mov	r0, r4
   17b94:	mov	r1, #0
   17b98:	blx	r2
   17b9c:	ldr	r1, [r4, #16]
   17ba0:	ldr	r0, [r4, #20]
   17ba4:	sub	r6, r1, r0
   17ba8:	cmp	r6, r5
   17bac:	bcs	17bf0 <flatcc_json_printer_utype_vector_field@@Base+0x150>
   17bb0:	mov	r1, #32
   17bb4:	mov	r2, r6
   17bb8:	bl	12948 <memset@plt>
   17bbc:	ldr	r0, [r4, #20]
   17bc0:	ldr	r2, [r4, #44]	; 0x2c
   17bc4:	mov	r1, #0
   17bc8:	add	r0, r0, r6
   17bcc:	str	r0, [r4, #20]
   17bd0:	mov	r0, r4
   17bd4:	blx	r2
   17bd8:	ldr	r1, [r4, #16]
   17bdc:	ldr	r0, [r4, #20]
   17be0:	sub	r5, r5, r6
   17be4:	sub	r6, r1, r0
   17be8:	cmp	r5, r6
   17bec:	bhi	17bb0 <flatcc_json_printer_utype_vector_field@@Base+0x110>
   17bf0:	mov	r1, #32
   17bf4:	mov	r2, r5
   17bf8:	bl	12948 <memset@plt>
   17bfc:	ldr	r0, [r4, #20]
   17c00:	add	r1, r0, r5
   17c04:	str	r1, [r4, #20]
   17c08:	b	17c2c <flatcc_json_printer_utype_vector_field@@Base+0x18c>
   17c0c:	ldr	r0, [r4, #16]
   17c10:	cmp	r1, r0
   17c14:	bcc	17c2c <flatcc_json_printer_utype_vector_field@@Base+0x18c>
   17c18:	ldr	r2, [r4, #44]	; 0x2c
   17c1c:	mov	r0, r4
   17c20:	mov	r1, #0
   17c24:	blx	r2
   17c28:	ldr	r1, [r4, #20]
   17c2c:	ldrb	r0, [r8, #4]
   17c30:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   17c34:	ldr	r1, [r4, #20]
   17c38:	subs	r9, r7, #1
   17c3c:	add	r0, r1, r0
   17c40:	str	r0, [r4, #20]
   17c44:	beq	17d68 <flatcc_json_printer_utype_vector_field@@Base+0x2c8>
   17c48:	ldr	r0, [r4, #20]
   17c4c:	add	r7, r8, #5
   17c50:	mov	r8, #44	; 0x2c
   17c54:	mov	sl, #10
   17c58:	add	r1, r0, #1
   17c5c:	sub	r9, r9, #1
   17c60:	str	r1, [r4, #20]
   17c64:	strb	r8, [r0]
   17c68:	ldrb	r0, [r4, #25]
   17c6c:	ldr	r1, [r4, #20]
   17c70:	cmp	r0, #0
   17c74:	beq	17d2c <flatcc_json_printer_utype_vector_field@@Base+0x28c>
   17c78:	add	r0, r1, #1
   17c7c:	str	r0, [r4, #20]
   17c80:	strb	sl, [r1]
   17c84:	ldr	r0, [r4, #20]
   17c88:	ldrb	r2, [r4, #25]
   17c8c:	ldr	r3, [r4, #32]
   17c90:	ldr	r1, [r4, #16]
   17c94:	mla	r6, r3, r2, r0
   17c98:	mul	r5, r3, r2
   17c9c:	cmp	r6, r1
   17ca0:	bls	17d10 <flatcc_json_printer_utype_vector_field@@Base+0x270>
   17ca4:	cmp	r0, r1
   17ca8:	bcc	17cc4 <flatcc_json_printer_utype_vector_field@@Base+0x224>
   17cac:	ldr	r2, [r4, #44]	; 0x2c
   17cb0:	mov	r0, r4
   17cb4:	mov	r1, #0
   17cb8:	blx	r2
   17cbc:	ldr	r1, [r4, #16]
   17cc0:	ldr	r0, [r4, #20]
   17cc4:	sub	r6, r1, r0
   17cc8:	cmp	r6, r5
   17ccc:	bcs	17d10 <flatcc_json_printer_utype_vector_field@@Base+0x270>
   17cd0:	mov	r1, #32
   17cd4:	mov	r2, r6
   17cd8:	bl	12948 <memset@plt>
   17cdc:	ldr	r0, [r4, #20]
   17ce0:	ldr	r2, [r4, #44]	; 0x2c
   17ce4:	mov	r1, #0
   17ce8:	add	r0, r0, r6
   17cec:	str	r0, [r4, #20]
   17cf0:	mov	r0, r4
   17cf4:	blx	r2
   17cf8:	ldr	r1, [r4, #16]
   17cfc:	ldr	r0, [r4, #20]
   17d00:	sub	r5, r5, r6
   17d04:	sub	r6, r1, r0
   17d08:	cmp	r5, r6
   17d0c:	bhi	17cd0 <flatcc_json_printer_utype_vector_field@@Base+0x230>
   17d10:	mov	r1, #32
   17d14:	mov	r2, r5
   17d18:	bl	12948 <memset@plt>
   17d1c:	ldr	r0, [r4, #20]
   17d20:	add	r1, r0, r5
   17d24:	str	r1, [r4, #20]
   17d28:	b	17d4c <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   17d2c:	ldr	r0, [r4, #16]
   17d30:	cmp	r1, r0
   17d34:	bcc	17d4c <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   17d38:	ldr	r2, [r4, #44]	; 0x2c
   17d3c:	mov	r0, r4
   17d40:	mov	r1, #0
   17d44:	blx	r2
   17d48:	ldr	r1, [r4, #20]
   17d4c:	ldrb	r0, [r7], #1
   17d50:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   17d54:	ldr	r1, [r4, #20]
   17d58:	cmp	r9, #0
   17d5c:	add	r0, r1, r0
   17d60:	str	r0, [r4, #20]
   17d64:	bne	17c58 <flatcc_json_printer_utype_vector_field@@Base+0x1b8>
   17d68:	ldrb	r1, [r4, #25]
   17d6c:	ldr	r0, [r4, #20]
   17d70:	cmp	r1, #0
   17d74:	beq	17e34 <flatcc_json_printer_utype_vector_field@@Base+0x394>
   17d78:	add	r1, r0, #1
   17d7c:	str	r1, [r4, #20]
   17d80:	mov	r1, #10
   17d84:	strb	r1, [r0]
   17d88:	ldr	r0, [r4, #32]
   17d8c:	sub	r2, r0, #1
   17d90:	str	r2, [r4, #32]
   17d94:	ldrb	r3, [r4, #25]
   17d98:	ldr	r0, [r4, #20]
   17d9c:	ldr	r1, [r4, #16]
   17da0:	mla	r7, r2, r3, r0
   17da4:	mul	r5, r2, r3
   17da8:	cmp	r7, r1
   17dac:	bls	17e1c <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   17db0:	cmp	r0, r1
   17db4:	bcc	17dd0 <flatcc_json_printer_utype_vector_field@@Base+0x330>
   17db8:	ldr	r2, [r4, #44]	; 0x2c
   17dbc:	mov	r0, r4
   17dc0:	mov	r1, #0
   17dc4:	blx	r2
   17dc8:	ldr	r1, [r4, #16]
   17dcc:	ldr	r0, [r4, #20]
   17dd0:	sub	r6, r1, r0
   17dd4:	cmp	r6, r5
   17dd8:	bcs	17e1c <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   17ddc:	mov	r1, #32
   17de0:	mov	r2, r6
   17de4:	bl	12948 <memset@plt>
   17de8:	ldr	r0, [r4, #20]
   17dec:	ldr	r2, [r4, #44]	; 0x2c
   17df0:	mov	r1, #0
   17df4:	add	r0, r0, r6
   17df8:	str	r0, [r4, #20]
   17dfc:	mov	r0, r4
   17e00:	blx	r2
   17e04:	ldr	r1, [r4, #16]
   17e08:	ldr	r0, [r4, #20]
   17e0c:	sub	r5, r5, r6
   17e10:	sub	r6, r1, r0
   17e14:	cmp	r5, r6
   17e18:	bhi	17ddc <flatcc_json_printer_utype_vector_field@@Base+0x33c>
   17e1c:	mov	r1, #32
   17e20:	mov	r2, r5
   17e24:	bl	12948 <memset@plt>
   17e28:	ldr	r0, [r4, #20]
   17e2c:	add	r0, r0, r5
   17e30:	str	r0, [r4, #20]
   17e34:	add	r1, r0, #1
   17e38:	str	r1, [r4, #20]
   17e3c:	mov	r1, #93	; 0x5d
   17e40:	strb	r1, [r0]
   17e44:	sub	sp, fp, #28
   17e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017e4c <flatcc_json_printer_uint8_vector_field@@Base>:
   17e4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e50:	add	fp, sp, #28
   17e54:	sub	sp, sp, #4
   17e58:	mov	r4, r0
   17e5c:	mov	r0, #4
   17e60:	add	r0, r0, r2, lsl #1
   17e64:	ldr	r2, [r1, #8]
   17e68:	cmp	r0, r2
   17e6c:	bge	181f0 <flatcc_json_printer_uint8_vector_field@@Base+0x3a4>
   17e70:	ldr	r2, [r1, #4]
   17e74:	add	r0, r2, r0
   17e78:	ldrh	r0, [r0]
   17e7c:	cmp	r0, #0
   17e80:	ldrne	r2, [r1]
   17e84:	addsne	r8, r2, r0
   17e88:	beq	181f0 <flatcc_json_printer_uint8_vector_field@@Base+0x3a4>
   17e8c:	ldr	r0, [r1, #16]
   17e90:	ldr	r2, [fp, #8]
   17e94:	add	r7, r0, #1
   17e98:	cmp	r0, #0
   17e9c:	str	r7, [r1, #16]
   17ea0:	ldrne	r0, [r4, #20]
   17ea4:	addne	r1, r0, #1
   17ea8:	strne	r1, [r4, #20]
   17eac:	movne	r1, #44	; 0x2c
   17eb0:	strbne	r1, [r0]
   17eb4:	mov	r1, r3
   17eb8:	ldr	r0, [r8]
   17ebc:	ldr	r7, [r8, r0]!
   17ec0:	mov	r0, r4
   17ec4:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   17ec8:	ldr	r1, [r4, #32]
   17ecc:	ldr	r0, [r4, #20]
   17ed0:	cmp	r7, #0
   17ed4:	add	r1, r1, #1
   17ed8:	str	r1, [r4, #32]
   17edc:	add	r1, r0, #1
   17ee0:	str	r1, [r4, #20]
   17ee4:	mov	r1, #91	; 0x5b
   17ee8:	strb	r1, [r0]
   17eec:	beq	18114 <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   17ef0:	ldrb	r0, [r4, #25]
   17ef4:	ldr	r1, [r4, #20]
   17ef8:	cmp	r0, #0
   17efc:	beq	17fb8 <flatcc_json_printer_uint8_vector_field@@Base+0x16c>
   17f00:	add	r0, r1, #1
   17f04:	str	r0, [r4, #20]
   17f08:	mov	r0, #10
   17f0c:	strb	r0, [r1]
   17f10:	ldr	r0, [r4, #20]
   17f14:	ldrb	r2, [r4, #25]
   17f18:	ldr	r3, [r4, #32]
   17f1c:	ldr	r1, [r4, #16]
   17f20:	mla	r6, r3, r2, r0
   17f24:	mul	r5, r3, r2
   17f28:	cmp	r6, r1
   17f2c:	bls	17f9c <flatcc_json_printer_uint8_vector_field@@Base+0x150>
   17f30:	cmp	r0, r1
   17f34:	bcc	17f50 <flatcc_json_printer_uint8_vector_field@@Base+0x104>
   17f38:	ldr	r2, [r4, #44]	; 0x2c
   17f3c:	mov	r0, r4
   17f40:	mov	r1, #0
   17f44:	blx	r2
   17f48:	ldr	r1, [r4, #16]
   17f4c:	ldr	r0, [r4, #20]
   17f50:	sub	r6, r1, r0
   17f54:	cmp	r6, r5
   17f58:	bcs	17f9c <flatcc_json_printer_uint8_vector_field@@Base+0x150>
   17f5c:	mov	r1, #32
   17f60:	mov	r2, r6
   17f64:	bl	12948 <memset@plt>
   17f68:	ldr	r0, [r4, #20]
   17f6c:	ldr	r2, [r4, #44]	; 0x2c
   17f70:	mov	r1, #0
   17f74:	add	r0, r0, r6
   17f78:	str	r0, [r4, #20]
   17f7c:	mov	r0, r4
   17f80:	blx	r2
   17f84:	ldr	r1, [r4, #16]
   17f88:	ldr	r0, [r4, #20]
   17f8c:	sub	r5, r5, r6
   17f90:	sub	r6, r1, r0
   17f94:	cmp	r5, r6
   17f98:	bhi	17f5c <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   17f9c:	mov	r1, #32
   17fa0:	mov	r2, r5
   17fa4:	bl	12948 <memset@plt>
   17fa8:	ldr	r0, [r4, #20]
   17fac:	add	r1, r0, r5
   17fb0:	str	r1, [r4, #20]
   17fb4:	b	17fd8 <flatcc_json_printer_uint8_vector_field@@Base+0x18c>
   17fb8:	ldr	r0, [r4, #16]
   17fbc:	cmp	r1, r0
   17fc0:	bcc	17fd8 <flatcc_json_printer_uint8_vector_field@@Base+0x18c>
   17fc4:	ldr	r2, [r4, #44]	; 0x2c
   17fc8:	mov	r0, r4
   17fcc:	mov	r1, #0
   17fd0:	blx	r2
   17fd4:	ldr	r1, [r4, #20]
   17fd8:	ldrb	r0, [r8, #4]
   17fdc:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   17fe0:	ldr	r1, [r4, #20]
   17fe4:	subs	r9, r7, #1
   17fe8:	add	r0, r1, r0
   17fec:	str	r0, [r4, #20]
   17ff0:	beq	18114 <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   17ff4:	ldr	r0, [r4, #20]
   17ff8:	add	r7, r8, #5
   17ffc:	mov	r8, #44	; 0x2c
   18000:	mov	sl, #10
   18004:	add	r1, r0, #1
   18008:	sub	r9, r9, #1
   1800c:	str	r1, [r4, #20]
   18010:	strb	r8, [r0]
   18014:	ldrb	r0, [r4, #25]
   18018:	ldr	r1, [r4, #20]
   1801c:	cmp	r0, #0
   18020:	beq	180d8 <flatcc_json_printer_uint8_vector_field@@Base+0x28c>
   18024:	add	r0, r1, #1
   18028:	str	r0, [r4, #20]
   1802c:	strb	sl, [r1]
   18030:	ldr	r0, [r4, #20]
   18034:	ldrb	r2, [r4, #25]
   18038:	ldr	r3, [r4, #32]
   1803c:	ldr	r1, [r4, #16]
   18040:	mla	r6, r3, r2, r0
   18044:	mul	r5, r3, r2
   18048:	cmp	r6, r1
   1804c:	bls	180bc <flatcc_json_printer_uint8_vector_field@@Base+0x270>
   18050:	cmp	r0, r1
   18054:	bcc	18070 <flatcc_json_printer_uint8_vector_field@@Base+0x224>
   18058:	ldr	r2, [r4, #44]	; 0x2c
   1805c:	mov	r0, r4
   18060:	mov	r1, #0
   18064:	blx	r2
   18068:	ldr	r1, [r4, #16]
   1806c:	ldr	r0, [r4, #20]
   18070:	sub	r6, r1, r0
   18074:	cmp	r6, r5
   18078:	bcs	180bc <flatcc_json_printer_uint8_vector_field@@Base+0x270>
   1807c:	mov	r1, #32
   18080:	mov	r2, r6
   18084:	bl	12948 <memset@plt>
   18088:	ldr	r0, [r4, #20]
   1808c:	ldr	r2, [r4, #44]	; 0x2c
   18090:	mov	r1, #0
   18094:	add	r0, r0, r6
   18098:	str	r0, [r4, #20]
   1809c:	mov	r0, r4
   180a0:	blx	r2
   180a4:	ldr	r1, [r4, #16]
   180a8:	ldr	r0, [r4, #20]
   180ac:	sub	r5, r5, r6
   180b0:	sub	r6, r1, r0
   180b4:	cmp	r5, r6
   180b8:	bhi	1807c <flatcc_json_printer_uint8_vector_field@@Base+0x230>
   180bc:	mov	r1, #32
   180c0:	mov	r2, r5
   180c4:	bl	12948 <memset@plt>
   180c8:	ldr	r0, [r4, #20]
   180cc:	add	r1, r0, r5
   180d0:	str	r1, [r4, #20]
   180d4:	b	180f8 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   180d8:	ldr	r0, [r4, #16]
   180dc:	cmp	r1, r0
   180e0:	bcc	180f8 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   180e4:	ldr	r2, [r4, #44]	; 0x2c
   180e8:	mov	r0, r4
   180ec:	mov	r1, #0
   180f0:	blx	r2
   180f4:	ldr	r1, [r4, #20]
   180f8:	ldrb	r0, [r7], #1
   180fc:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   18100:	ldr	r1, [r4, #20]
   18104:	cmp	r9, #0
   18108:	add	r0, r1, r0
   1810c:	str	r0, [r4, #20]
   18110:	bne	18004 <flatcc_json_printer_uint8_vector_field@@Base+0x1b8>
   18114:	ldrb	r1, [r4, #25]
   18118:	ldr	r0, [r4, #20]
   1811c:	cmp	r1, #0
   18120:	beq	181e0 <flatcc_json_printer_uint8_vector_field@@Base+0x394>
   18124:	add	r1, r0, #1
   18128:	str	r1, [r4, #20]
   1812c:	mov	r1, #10
   18130:	strb	r1, [r0]
   18134:	ldr	r0, [r4, #32]
   18138:	sub	r2, r0, #1
   1813c:	str	r2, [r4, #32]
   18140:	ldrb	r3, [r4, #25]
   18144:	ldr	r0, [r4, #20]
   18148:	ldr	r1, [r4, #16]
   1814c:	mla	r7, r2, r3, r0
   18150:	mul	r5, r2, r3
   18154:	cmp	r7, r1
   18158:	bls	181c8 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   1815c:	cmp	r0, r1
   18160:	bcc	1817c <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   18164:	ldr	r2, [r4, #44]	; 0x2c
   18168:	mov	r0, r4
   1816c:	mov	r1, #0
   18170:	blx	r2
   18174:	ldr	r1, [r4, #16]
   18178:	ldr	r0, [r4, #20]
   1817c:	sub	r6, r1, r0
   18180:	cmp	r6, r5
   18184:	bcs	181c8 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   18188:	mov	r1, #32
   1818c:	mov	r2, r6
   18190:	bl	12948 <memset@plt>
   18194:	ldr	r0, [r4, #20]
   18198:	ldr	r2, [r4, #44]	; 0x2c
   1819c:	mov	r1, #0
   181a0:	add	r0, r0, r6
   181a4:	str	r0, [r4, #20]
   181a8:	mov	r0, r4
   181ac:	blx	r2
   181b0:	ldr	r1, [r4, #16]
   181b4:	ldr	r0, [r4, #20]
   181b8:	sub	r5, r5, r6
   181bc:	sub	r6, r1, r0
   181c0:	cmp	r5, r6
   181c4:	bhi	18188 <flatcc_json_printer_uint8_vector_field@@Base+0x33c>
   181c8:	mov	r1, #32
   181cc:	mov	r2, r5
   181d0:	bl	12948 <memset@plt>
   181d4:	ldr	r0, [r4, #20]
   181d8:	add	r0, r0, r5
   181dc:	str	r0, [r4, #20]
   181e0:	add	r1, r0, #1
   181e4:	str	r1, [r4, #20]
   181e8:	mov	r1, #93	; 0x5d
   181ec:	strb	r1, [r0]
   181f0:	sub	sp, fp, #28
   181f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000181f8 <flatcc_json_printer_uint16_vector_field@@Base>:
   181f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181fc:	add	fp, sp, #28
   18200:	sub	sp, sp, #4
   18204:	mov	r4, r0
   18208:	mov	r0, #4
   1820c:	add	r0, r0, r2, lsl #1
   18210:	ldr	r2, [r1, #8]
   18214:	cmp	r0, r2
   18218:	bge	1859c <flatcc_json_printer_uint16_vector_field@@Base+0x3a4>
   1821c:	ldr	r2, [r1, #4]
   18220:	add	r0, r2, r0
   18224:	ldrh	r0, [r0]
   18228:	cmp	r0, #0
   1822c:	ldrne	r2, [r1]
   18230:	addsne	r8, r2, r0
   18234:	beq	1859c <flatcc_json_printer_uint16_vector_field@@Base+0x3a4>
   18238:	ldr	r0, [r1, #16]
   1823c:	ldr	r2, [fp, #8]
   18240:	add	r7, r0, #1
   18244:	cmp	r0, #0
   18248:	str	r7, [r1, #16]
   1824c:	ldrne	r0, [r4, #20]
   18250:	addne	r1, r0, #1
   18254:	strne	r1, [r4, #20]
   18258:	movne	r1, #44	; 0x2c
   1825c:	strbne	r1, [r0]
   18260:	mov	r1, r3
   18264:	ldr	r0, [r8]
   18268:	ldr	r7, [r8, r0]!
   1826c:	mov	r0, r4
   18270:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   18274:	ldr	r1, [r4, #32]
   18278:	ldr	r0, [r4, #20]
   1827c:	cmp	r7, #0
   18280:	add	r1, r1, #1
   18284:	str	r1, [r4, #32]
   18288:	add	r1, r0, #1
   1828c:	str	r1, [r4, #20]
   18290:	mov	r1, #91	; 0x5b
   18294:	strb	r1, [r0]
   18298:	beq	184c0 <flatcc_json_printer_uint16_vector_field@@Base+0x2c8>
   1829c:	ldrb	r0, [r4, #25]
   182a0:	ldr	r1, [r4, #20]
   182a4:	cmp	r0, #0
   182a8:	beq	18364 <flatcc_json_printer_uint16_vector_field@@Base+0x16c>
   182ac:	add	r0, r1, #1
   182b0:	str	r0, [r4, #20]
   182b4:	mov	r0, #10
   182b8:	strb	r0, [r1]
   182bc:	ldr	r0, [r4, #20]
   182c0:	ldrb	r2, [r4, #25]
   182c4:	ldr	r3, [r4, #32]
   182c8:	ldr	r1, [r4, #16]
   182cc:	mla	r6, r3, r2, r0
   182d0:	mul	r5, r3, r2
   182d4:	cmp	r6, r1
   182d8:	bls	18348 <flatcc_json_printer_uint16_vector_field@@Base+0x150>
   182dc:	cmp	r0, r1
   182e0:	bcc	182fc <flatcc_json_printer_uint16_vector_field@@Base+0x104>
   182e4:	ldr	r2, [r4, #44]	; 0x2c
   182e8:	mov	r0, r4
   182ec:	mov	r1, #0
   182f0:	blx	r2
   182f4:	ldr	r1, [r4, #16]
   182f8:	ldr	r0, [r4, #20]
   182fc:	sub	r6, r1, r0
   18300:	cmp	r6, r5
   18304:	bcs	18348 <flatcc_json_printer_uint16_vector_field@@Base+0x150>
   18308:	mov	r1, #32
   1830c:	mov	r2, r6
   18310:	bl	12948 <memset@plt>
   18314:	ldr	r0, [r4, #20]
   18318:	ldr	r2, [r4, #44]	; 0x2c
   1831c:	mov	r1, #0
   18320:	add	r0, r0, r6
   18324:	str	r0, [r4, #20]
   18328:	mov	r0, r4
   1832c:	blx	r2
   18330:	ldr	r1, [r4, #16]
   18334:	ldr	r0, [r4, #20]
   18338:	sub	r5, r5, r6
   1833c:	sub	r6, r1, r0
   18340:	cmp	r5, r6
   18344:	bhi	18308 <flatcc_json_printer_uint16_vector_field@@Base+0x110>
   18348:	mov	r1, #32
   1834c:	mov	r2, r5
   18350:	bl	12948 <memset@plt>
   18354:	ldr	r0, [r4, #20]
   18358:	add	r1, r0, r5
   1835c:	str	r1, [r4, #20]
   18360:	b	18384 <flatcc_json_printer_uint16_vector_field@@Base+0x18c>
   18364:	ldr	r0, [r4, #16]
   18368:	cmp	r1, r0
   1836c:	bcc	18384 <flatcc_json_printer_uint16_vector_field@@Base+0x18c>
   18370:	ldr	r2, [r4, #44]	; 0x2c
   18374:	mov	r0, r4
   18378:	mov	r1, #0
   1837c:	blx	r2
   18380:	ldr	r1, [r4, #20]
   18384:	ldrh	r0, [r8, #4]
   18388:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   1838c:	ldr	r1, [r4, #20]
   18390:	subs	r9, r7, #1
   18394:	add	r0, r1, r0
   18398:	str	r0, [r4, #20]
   1839c:	beq	184c0 <flatcc_json_printer_uint16_vector_field@@Base+0x2c8>
   183a0:	ldr	r0, [r4, #20]
   183a4:	add	r7, r8, #6
   183a8:	mov	r8, #44	; 0x2c
   183ac:	mov	sl, #10
   183b0:	add	r1, r0, #1
   183b4:	sub	r9, r9, #1
   183b8:	str	r1, [r4, #20]
   183bc:	strb	r8, [r0]
   183c0:	ldrb	r0, [r4, #25]
   183c4:	ldr	r1, [r4, #20]
   183c8:	cmp	r0, #0
   183cc:	beq	18484 <flatcc_json_printer_uint16_vector_field@@Base+0x28c>
   183d0:	add	r0, r1, #1
   183d4:	str	r0, [r4, #20]
   183d8:	strb	sl, [r1]
   183dc:	ldr	r0, [r4, #20]
   183e0:	ldrb	r2, [r4, #25]
   183e4:	ldr	r3, [r4, #32]
   183e8:	ldr	r1, [r4, #16]
   183ec:	mla	r6, r3, r2, r0
   183f0:	mul	r5, r3, r2
   183f4:	cmp	r6, r1
   183f8:	bls	18468 <flatcc_json_printer_uint16_vector_field@@Base+0x270>
   183fc:	cmp	r0, r1
   18400:	bcc	1841c <flatcc_json_printer_uint16_vector_field@@Base+0x224>
   18404:	ldr	r2, [r4, #44]	; 0x2c
   18408:	mov	r0, r4
   1840c:	mov	r1, #0
   18410:	blx	r2
   18414:	ldr	r1, [r4, #16]
   18418:	ldr	r0, [r4, #20]
   1841c:	sub	r6, r1, r0
   18420:	cmp	r6, r5
   18424:	bcs	18468 <flatcc_json_printer_uint16_vector_field@@Base+0x270>
   18428:	mov	r1, #32
   1842c:	mov	r2, r6
   18430:	bl	12948 <memset@plt>
   18434:	ldr	r0, [r4, #20]
   18438:	ldr	r2, [r4, #44]	; 0x2c
   1843c:	mov	r1, #0
   18440:	add	r0, r0, r6
   18444:	str	r0, [r4, #20]
   18448:	mov	r0, r4
   1844c:	blx	r2
   18450:	ldr	r1, [r4, #16]
   18454:	ldr	r0, [r4, #20]
   18458:	sub	r5, r5, r6
   1845c:	sub	r6, r1, r0
   18460:	cmp	r5, r6
   18464:	bhi	18428 <flatcc_json_printer_uint16_vector_field@@Base+0x230>
   18468:	mov	r1, #32
   1846c:	mov	r2, r5
   18470:	bl	12948 <memset@plt>
   18474:	ldr	r0, [r4, #20]
   18478:	add	r1, r0, r5
   1847c:	str	r1, [r4, #20]
   18480:	b	184a4 <flatcc_json_printer_uint16_vector_field@@Base+0x2ac>
   18484:	ldr	r0, [r4, #16]
   18488:	cmp	r1, r0
   1848c:	bcc	184a4 <flatcc_json_printer_uint16_vector_field@@Base+0x2ac>
   18490:	ldr	r2, [r4, #44]	; 0x2c
   18494:	mov	r0, r4
   18498:	mov	r1, #0
   1849c:	blx	r2
   184a0:	ldr	r1, [r4, #20]
   184a4:	ldrh	r0, [r7], #2
   184a8:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   184ac:	ldr	r1, [r4, #20]
   184b0:	cmp	r9, #0
   184b4:	add	r0, r1, r0
   184b8:	str	r0, [r4, #20]
   184bc:	bne	183b0 <flatcc_json_printer_uint16_vector_field@@Base+0x1b8>
   184c0:	ldrb	r1, [r4, #25]
   184c4:	ldr	r0, [r4, #20]
   184c8:	cmp	r1, #0
   184cc:	beq	1858c <flatcc_json_printer_uint16_vector_field@@Base+0x394>
   184d0:	add	r1, r0, #1
   184d4:	str	r1, [r4, #20]
   184d8:	mov	r1, #10
   184dc:	strb	r1, [r0]
   184e0:	ldr	r0, [r4, #32]
   184e4:	sub	r2, r0, #1
   184e8:	str	r2, [r4, #32]
   184ec:	ldrb	r3, [r4, #25]
   184f0:	ldr	r0, [r4, #20]
   184f4:	ldr	r1, [r4, #16]
   184f8:	mla	r7, r2, r3, r0
   184fc:	mul	r5, r2, r3
   18500:	cmp	r7, r1
   18504:	bls	18574 <flatcc_json_printer_uint16_vector_field@@Base+0x37c>
   18508:	cmp	r0, r1
   1850c:	bcc	18528 <flatcc_json_printer_uint16_vector_field@@Base+0x330>
   18510:	ldr	r2, [r4, #44]	; 0x2c
   18514:	mov	r0, r4
   18518:	mov	r1, #0
   1851c:	blx	r2
   18520:	ldr	r1, [r4, #16]
   18524:	ldr	r0, [r4, #20]
   18528:	sub	r6, r1, r0
   1852c:	cmp	r6, r5
   18530:	bcs	18574 <flatcc_json_printer_uint16_vector_field@@Base+0x37c>
   18534:	mov	r1, #32
   18538:	mov	r2, r6
   1853c:	bl	12948 <memset@plt>
   18540:	ldr	r0, [r4, #20]
   18544:	ldr	r2, [r4, #44]	; 0x2c
   18548:	mov	r1, #0
   1854c:	add	r0, r0, r6
   18550:	str	r0, [r4, #20]
   18554:	mov	r0, r4
   18558:	blx	r2
   1855c:	ldr	r1, [r4, #16]
   18560:	ldr	r0, [r4, #20]
   18564:	sub	r5, r5, r6
   18568:	sub	r6, r1, r0
   1856c:	cmp	r5, r6
   18570:	bhi	18534 <flatcc_json_printer_uint16_vector_field@@Base+0x33c>
   18574:	mov	r1, #32
   18578:	mov	r2, r5
   1857c:	bl	12948 <memset@plt>
   18580:	ldr	r0, [r4, #20]
   18584:	add	r0, r0, r5
   18588:	str	r0, [r4, #20]
   1858c:	add	r1, r0, #1
   18590:	str	r1, [r4, #20]
   18594:	mov	r1, #93	; 0x5d
   18598:	strb	r1, [r0]
   1859c:	sub	sp, fp, #28
   185a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000185a4 <flatcc_json_printer_uint32_vector_field@@Base>:
   185a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185a8:	add	fp, sp, #28
   185ac:	sub	sp, sp, #4
   185b0:	mov	r4, r0
   185b4:	mov	r0, #4
   185b8:	add	r0, r0, r2, lsl #1
   185bc:	ldr	r2, [r1, #8]
   185c0:	cmp	r0, r2
   185c4:	bge	18948 <flatcc_json_printer_uint32_vector_field@@Base+0x3a4>
   185c8:	ldr	r2, [r1, #4]
   185cc:	add	r0, r2, r0
   185d0:	ldrh	r0, [r0]
   185d4:	cmp	r0, #0
   185d8:	ldrne	r2, [r1]
   185dc:	addsne	r8, r2, r0
   185e0:	beq	18948 <flatcc_json_printer_uint32_vector_field@@Base+0x3a4>
   185e4:	ldr	r0, [r1, #16]
   185e8:	ldr	r2, [fp, #8]
   185ec:	add	r7, r0, #1
   185f0:	cmp	r0, #0
   185f4:	str	r7, [r1, #16]
   185f8:	ldrne	r0, [r4, #20]
   185fc:	addne	r1, r0, #1
   18600:	strne	r1, [r4, #20]
   18604:	movne	r1, #44	; 0x2c
   18608:	strbne	r1, [r0]
   1860c:	mov	r1, r3
   18610:	ldr	r0, [r8]
   18614:	ldr	r7, [r8, r0]!
   18618:	mov	r0, r4
   1861c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   18620:	ldr	r1, [r4, #32]
   18624:	ldr	r0, [r4, #20]
   18628:	cmp	r7, #0
   1862c:	add	r1, r1, #1
   18630:	str	r1, [r4, #32]
   18634:	add	r1, r0, #1
   18638:	str	r1, [r4, #20]
   1863c:	mov	r1, #91	; 0x5b
   18640:	strb	r1, [r0]
   18644:	beq	1886c <flatcc_json_printer_uint32_vector_field@@Base+0x2c8>
   18648:	ldrb	r0, [r4, #25]
   1864c:	ldr	r1, [r4, #20]
   18650:	cmp	r0, #0
   18654:	beq	18710 <flatcc_json_printer_uint32_vector_field@@Base+0x16c>
   18658:	add	r0, r1, #1
   1865c:	str	r0, [r4, #20]
   18660:	mov	r0, #10
   18664:	strb	r0, [r1]
   18668:	ldr	r0, [r4, #20]
   1866c:	ldrb	r2, [r4, #25]
   18670:	ldr	r3, [r4, #32]
   18674:	ldr	r1, [r4, #16]
   18678:	mla	r6, r3, r2, r0
   1867c:	mul	r5, r3, r2
   18680:	cmp	r6, r1
   18684:	bls	186f4 <flatcc_json_printer_uint32_vector_field@@Base+0x150>
   18688:	cmp	r0, r1
   1868c:	bcc	186a8 <flatcc_json_printer_uint32_vector_field@@Base+0x104>
   18690:	ldr	r2, [r4, #44]	; 0x2c
   18694:	mov	r0, r4
   18698:	mov	r1, #0
   1869c:	blx	r2
   186a0:	ldr	r1, [r4, #16]
   186a4:	ldr	r0, [r4, #20]
   186a8:	sub	r6, r1, r0
   186ac:	cmp	r6, r5
   186b0:	bcs	186f4 <flatcc_json_printer_uint32_vector_field@@Base+0x150>
   186b4:	mov	r1, #32
   186b8:	mov	r2, r6
   186bc:	bl	12948 <memset@plt>
   186c0:	ldr	r0, [r4, #20]
   186c4:	ldr	r2, [r4, #44]	; 0x2c
   186c8:	mov	r1, #0
   186cc:	add	r0, r0, r6
   186d0:	str	r0, [r4, #20]
   186d4:	mov	r0, r4
   186d8:	blx	r2
   186dc:	ldr	r1, [r4, #16]
   186e0:	ldr	r0, [r4, #20]
   186e4:	sub	r5, r5, r6
   186e8:	sub	r6, r1, r0
   186ec:	cmp	r5, r6
   186f0:	bhi	186b4 <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   186f4:	mov	r1, #32
   186f8:	mov	r2, r5
   186fc:	bl	12948 <memset@plt>
   18700:	ldr	r0, [r4, #20]
   18704:	add	r1, r0, r5
   18708:	str	r1, [r4, #20]
   1870c:	b	18730 <flatcc_json_printer_uint32_vector_field@@Base+0x18c>
   18710:	ldr	r0, [r4, #16]
   18714:	cmp	r1, r0
   18718:	bcc	18730 <flatcc_json_printer_uint32_vector_field@@Base+0x18c>
   1871c:	ldr	r2, [r4, #44]	; 0x2c
   18720:	mov	r0, r4
   18724:	mov	r1, #0
   18728:	blx	r2
   1872c:	ldr	r1, [r4, #20]
   18730:	ldr	r0, [r8, #4]
   18734:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   18738:	ldr	r1, [r4, #20]
   1873c:	subs	r9, r7, #1
   18740:	add	r0, r1, r0
   18744:	str	r0, [r4, #20]
   18748:	beq	1886c <flatcc_json_printer_uint32_vector_field@@Base+0x2c8>
   1874c:	ldr	r0, [r4, #20]
   18750:	add	r7, r8, #8
   18754:	mov	r8, #44	; 0x2c
   18758:	mov	sl, #10
   1875c:	add	r1, r0, #1
   18760:	sub	r9, r9, #1
   18764:	str	r1, [r4, #20]
   18768:	strb	r8, [r0]
   1876c:	ldrb	r0, [r4, #25]
   18770:	ldr	r1, [r4, #20]
   18774:	cmp	r0, #0
   18778:	beq	18830 <flatcc_json_printer_uint32_vector_field@@Base+0x28c>
   1877c:	add	r0, r1, #1
   18780:	str	r0, [r4, #20]
   18784:	strb	sl, [r1]
   18788:	ldr	r0, [r4, #20]
   1878c:	ldrb	r2, [r4, #25]
   18790:	ldr	r3, [r4, #32]
   18794:	ldr	r1, [r4, #16]
   18798:	mla	r6, r3, r2, r0
   1879c:	mul	r5, r3, r2
   187a0:	cmp	r6, r1
   187a4:	bls	18814 <flatcc_json_printer_uint32_vector_field@@Base+0x270>
   187a8:	cmp	r0, r1
   187ac:	bcc	187c8 <flatcc_json_printer_uint32_vector_field@@Base+0x224>
   187b0:	ldr	r2, [r4, #44]	; 0x2c
   187b4:	mov	r0, r4
   187b8:	mov	r1, #0
   187bc:	blx	r2
   187c0:	ldr	r1, [r4, #16]
   187c4:	ldr	r0, [r4, #20]
   187c8:	sub	r6, r1, r0
   187cc:	cmp	r6, r5
   187d0:	bcs	18814 <flatcc_json_printer_uint32_vector_field@@Base+0x270>
   187d4:	mov	r1, #32
   187d8:	mov	r2, r6
   187dc:	bl	12948 <memset@plt>
   187e0:	ldr	r0, [r4, #20]
   187e4:	ldr	r2, [r4, #44]	; 0x2c
   187e8:	mov	r1, #0
   187ec:	add	r0, r0, r6
   187f0:	str	r0, [r4, #20]
   187f4:	mov	r0, r4
   187f8:	blx	r2
   187fc:	ldr	r1, [r4, #16]
   18800:	ldr	r0, [r4, #20]
   18804:	sub	r5, r5, r6
   18808:	sub	r6, r1, r0
   1880c:	cmp	r5, r6
   18810:	bhi	187d4 <flatcc_json_printer_uint32_vector_field@@Base+0x230>
   18814:	mov	r1, #32
   18818:	mov	r2, r5
   1881c:	bl	12948 <memset@plt>
   18820:	ldr	r0, [r4, #20]
   18824:	add	r1, r0, r5
   18828:	str	r1, [r4, #20]
   1882c:	b	18850 <flatcc_json_printer_uint32_vector_field@@Base+0x2ac>
   18830:	ldr	r0, [r4, #16]
   18834:	cmp	r1, r0
   18838:	bcc	18850 <flatcc_json_printer_uint32_vector_field@@Base+0x2ac>
   1883c:	ldr	r2, [r4, #44]	; 0x2c
   18840:	mov	r0, r4
   18844:	mov	r1, #0
   18848:	blx	r2
   1884c:	ldr	r1, [r4, #20]
   18850:	ldr	r0, [r7], #4
   18854:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   18858:	ldr	r1, [r4, #20]
   1885c:	cmp	r9, #0
   18860:	add	r0, r1, r0
   18864:	str	r0, [r4, #20]
   18868:	bne	1875c <flatcc_json_printer_uint32_vector_field@@Base+0x1b8>
   1886c:	ldrb	r1, [r4, #25]
   18870:	ldr	r0, [r4, #20]
   18874:	cmp	r1, #0
   18878:	beq	18938 <flatcc_json_printer_uint32_vector_field@@Base+0x394>
   1887c:	add	r1, r0, #1
   18880:	str	r1, [r4, #20]
   18884:	mov	r1, #10
   18888:	strb	r1, [r0]
   1888c:	ldr	r0, [r4, #32]
   18890:	sub	r2, r0, #1
   18894:	str	r2, [r4, #32]
   18898:	ldrb	r3, [r4, #25]
   1889c:	ldr	r0, [r4, #20]
   188a0:	ldr	r1, [r4, #16]
   188a4:	mla	r7, r2, r3, r0
   188a8:	mul	r5, r2, r3
   188ac:	cmp	r7, r1
   188b0:	bls	18920 <flatcc_json_printer_uint32_vector_field@@Base+0x37c>
   188b4:	cmp	r0, r1
   188b8:	bcc	188d4 <flatcc_json_printer_uint32_vector_field@@Base+0x330>
   188bc:	ldr	r2, [r4, #44]	; 0x2c
   188c0:	mov	r0, r4
   188c4:	mov	r1, #0
   188c8:	blx	r2
   188cc:	ldr	r1, [r4, #16]
   188d0:	ldr	r0, [r4, #20]
   188d4:	sub	r6, r1, r0
   188d8:	cmp	r6, r5
   188dc:	bcs	18920 <flatcc_json_printer_uint32_vector_field@@Base+0x37c>
   188e0:	mov	r1, #32
   188e4:	mov	r2, r6
   188e8:	bl	12948 <memset@plt>
   188ec:	ldr	r0, [r4, #20]
   188f0:	ldr	r2, [r4, #44]	; 0x2c
   188f4:	mov	r1, #0
   188f8:	add	r0, r0, r6
   188fc:	str	r0, [r4, #20]
   18900:	mov	r0, r4
   18904:	blx	r2
   18908:	ldr	r1, [r4, #16]
   1890c:	ldr	r0, [r4, #20]
   18910:	sub	r5, r5, r6
   18914:	sub	r6, r1, r0
   18918:	cmp	r5, r6
   1891c:	bhi	188e0 <flatcc_json_printer_uint32_vector_field@@Base+0x33c>
   18920:	mov	r1, #32
   18924:	mov	r2, r5
   18928:	bl	12948 <memset@plt>
   1892c:	ldr	r0, [r4, #20]
   18930:	add	r0, r0, r5
   18934:	str	r0, [r4, #20]
   18938:	add	r1, r0, #1
   1893c:	str	r1, [r4, #20]
   18940:	mov	r1, #93	; 0x5d
   18944:	strb	r1, [r0]
   18948:	sub	sp, fp, #28
   1894c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018950 <flatcc_json_printer_uint64_vector_field@@Base>:
   18950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18954:	add	fp, sp, #28
   18958:	sub	sp, sp, #4
   1895c:	mov	r4, r0
   18960:	mov	r0, #4
   18964:	add	r0, r0, r2, lsl #1
   18968:	ldr	r2, [r1, #8]
   1896c:	cmp	r0, r2
   18970:	bge	18cf8 <flatcc_json_printer_uint64_vector_field@@Base+0x3a8>
   18974:	ldr	r2, [r1, #4]
   18978:	add	r0, r2, r0
   1897c:	ldrh	r0, [r0]
   18980:	cmp	r0, #0
   18984:	ldrne	r2, [r1]
   18988:	addsne	r8, r2, r0
   1898c:	beq	18cf8 <flatcc_json_printer_uint64_vector_field@@Base+0x3a8>
   18990:	ldr	r0, [r1, #16]
   18994:	ldr	r2, [fp, #8]
   18998:	add	r7, r0, #1
   1899c:	cmp	r0, #0
   189a0:	str	r7, [r1, #16]
   189a4:	ldrne	r0, [r4, #20]
   189a8:	addne	r1, r0, #1
   189ac:	strne	r1, [r4, #20]
   189b0:	movne	r1, #44	; 0x2c
   189b4:	strbne	r1, [r0]
   189b8:	mov	r1, r3
   189bc:	ldr	r0, [r8]
   189c0:	ldr	r7, [r8, r0]!
   189c4:	mov	r0, r4
   189c8:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   189cc:	ldr	r1, [r4, #32]
   189d0:	ldr	r0, [r4, #20]
   189d4:	cmp	r7, #0
   189d8:	add	r1, r1, #1
   189dc:	str	r1, [r4, #32]
   189e0:	add	r1, r0, #1
   189e4:	str	r1, [r4, #20]
   189e8:	mov	r1, #91	; 0x5b
   189ec:	strb	r1, [r0]
   189f0:	beq	18c1c <flatcc_json_printer_uint64_vector_field@@Base+0x2cc>
   189f4:	ldrb	r0, [r4, #25]
   189f8:	ldr	r2, [r4, #20]
   189fc:	cmp	r0, #0
   18a00:	beq	18abc <flatcc_json_printer_uint64_vector_field@@Base+0x16c>
   18a04:	add	r0, r2, #1
   18a08:	str	r0, [r4, #20]
   18a0c:	mov	r0, #10
   18a10:	strb	r0, [r2]
   18a14:	ldr	r0, [r4, #20]
   18a18:	ldrb	r2, [r4, #25]
   18a1c:	ldr	r3, [r4, #32]
   18a20:	ldr	r1, [r4, #16]
   18a24:	mla	r6, r3, r2, r0
   18a28:	mul	r5, r3, r2
   18a2c:	cmp	r6, r1
   18a30:	bls	18aa0 <flatcc_json_printer_uint64_vector_field@@Base+0x150>
   18a34:	cmp	r0, r1
   18a38:	bcc	18a54 <flatcc_json_printer_uint64_vector_field@@Base+0x104>
   18a3c:	ldr	r2, [r4, #44]	; 0x2c
   18a40:	mov	r0, r4
   18a44:	mov	r1, #0
   18a48:	blx	r2
   18a4c:	ldr	r1, [r4, #16]
   18a50:	ldr	r0, [r4, #20]
   18a54:	sub	r6, r1, r0
   18a58:	cmp	r6, r5
   18a5c:	bcs	18aa0 <flatcc_json_printer_uint64_vector_field@@Base+0x150>
   18a60:	mov	r1, #32
   18a64:	mov	r2, r6
   18a68:	bl	12948 <memset@plt>
   18a6c:	ldr	r0, [r4, #20]
   18a70:	ldr	r2, [r4, #44]	; 0x2c
   18a74:	mov	r1, #0
   18a78:	add	r0, r0, r6
   18a7c:	str	r0, [r4, #20]
   18a80:	mov	r0, r4
   18a84:	blx	r2
   18a88:	ldr	r1, [r4, #16]
   18a8c:	ldr	r0, [r4, #20]
   18a90:	sub	r5, r5, r6
   18a94:	sub	r6, r1, r0
   18a98:	cmp	r5, r6
   18a9c:	bhi	18a60 <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   18aa0:	mov	r1, #32
   18aa4:	mov	r2, r5
   18aa8:	bl	12948 <memset@plt>
   18aac:	ldr	r0, [r4, #20]
   18ab0:	add	r2, r0, r5
   18ab4:	str	r2, [r4, #20]
   18ab8:	b	18adc <flatcc_json_printer_uint64_vector_field@@Base+0x18c>
   18abc:	ldr	r0, [r4, #16]
   18ac0:	cmp	r2, r0
   18ac4:	bcc	18adc <flatcc_json_printer_uint64_vector_field@@Base+0x18c>
   18ac8:	ldr	r2, [r4, #44]	; 0x2c
   18acc:	mov	r0, r4
   18ad0:	mov	r1, #0
   18ad4:	blx	r2
   18ad8:	ldr	r2, [r4, #20]
   18adc:	ldrd	r0, [r8, #4]
   18ae0:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   18ae4:	ldr	r1, [r4, #20]
   18ae8:	subs	r9, r7, #1
   18aec:	add	r0, r1, r0
   18af0:	str	r0, [r4, #20]
   18af4:	beq	18c1c <flatcc_json_printer_uint64_vector_field@@Base+0x2cc>
   18af8:	ldr	r0, [r4, #20]
   18afc:	add	r7, r8, #12
   18b00:	mov	r8, #44	; 0x2c
   18b04:	mov	sl, #10
   18b08:	add	r1, r0, #1
   18b0c:	sub	r9, r9, #1
   18b10:	str	r1, [r4, #20]
   18b14:	strb	r8, [r0]
   18b18:	ldrb	r0, [r4, #25]
   18b1c:	ldr	r2, [r4, #20]
   18b20:	cmp	r0, #0
   18b24:	beq	18bdc <flatcc_json_printer_uint64_vector_field@@Base+0x28c>
   18b28:	add	r0, r2, #1
   18b2c:	str	r0, [r4, #20]
   18b30:	strb	sl, [r2]
   18b34:	ldr	r0, [r4, #20]
   18b38:	ldrb	r2, [r4, #25]
   18b3c:	ldr	r3, [r4, #32]
   18b40:	ldr	r1, [r4, #16]
   18b44:	mla	r6, r3, r2, r0
   18b48:	mul	r5, r3, r2
   18b4c:	cmp	r6, r1
   18b50:	bls	18bc0 <flatcc_json_printer_uint64_vector_field@@Base+0x270>
   18b54:	cmp	r0, r1
   18b58:	bcc	18b74 <flatcc_json_printer_uint64_vector_field@@Base+0x224>
   18b5c:	ldr	r2, [r4, #44]	; 0x2c
   18b60:	mov	r0, r4
   18b64:	mov	r1, #0
   18b68:	blx	r2
   18b6c:	ldr	r1, [r4, #16]
   18b70:	ldr	r0, [r4, #20]
   18b74:	sub	r6, r1, r0
   18b78:	cmp	r6, r5
   18b7c:	bcs	18bc0 <flatcc_json_printer_uint64_vector_field@@Base+0x270>
   18b80:	mov	r1, #32
   18b84:	mov	r2, r6
   18b88:	bl	12948 <memset@plt>
   18b8c:	ldr	r0, [r4, #20]
   18b90:	ldr	r2, [r4, #44]	; 0x2c
   18b94:	mov	r1, #0
   18b98:	add	r0, r0, r6
   18b9c:	str	r0, [r4, #20]
   18ba0:	mov	r0, r4
   18ba4:	blx	r2
   18ba8:	ldr	r1, [r4, #16]
   18bac:	ldr	r0, [r4, #20]
   18bb0:	sub	r5, r5, r6
   18bb4:	sub	r6, r1, r0
   18bb8:	cmp	r5, r6
   18bbc:	bhi	18b80 <flatcc_json_printer_uint64_vector_field@@Base+0x230>
   18bc0:	mov	r1, #32
   18bc4:	mov	r2, r5
   18bc8:	bl	12948 <memset@plt>
   18bcc:	ldr	r0, [r4, #20]
   18bd0:	add	r2, r0, r5
   18bd4:	str	r2, [r4, #20]
   18bd8:	b	18bfc <flatcc_json_printer_uint64_vector_field@@Base+0x2ac>
   18bdc:	ldr	r0, [r4, #16]
   18be0:	cmp	r2, r0
   18be4:	bcc	18bfc <flatcc_json_printer_uint64_vector_field@@Base+0x2ac>
   18be8:	ldr	r2, [r4, #44]	; 0x2c
   18bec:	mov	r0, r4
   18bf0:	mov	r1, #0
   18bf4:	blx	r2
   18bf8:	ldr	r2, [r4, #20]
   18bfc:	ldrd	r0, [r7]
   18c00:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   18c04:	ldr	r1, [r4, #20]
   18c08:	add	r7, r7, #8
   18c0c:	cmp	r9, #0
   18c10:	add	r0, r1, r0
   18c14:	str	r0, [r4, #20]
   18c18:	bne	18b08 <flatcc_json_printer_uint64_vector_field@@Base+0x1b8>
   18c1c:	ldrb	r1, [r4, #25]
   18c20:	ldr	r0, [r4, #20]
   18c24:	cmp	r1, #0
   18c28:	beq	18ce8 <flatcc_json_printer_uint64_vector_field@@Base+0x398>
   18c2c:	add	r1, r0, #1
   18c30:	str	r1, [r4, #20]
   18c34:	mov	r1, #10
   18c38:	strb	r1, [r0]
   18c3c:	ldr	r0, [r4, #32]
   18c40:	sub	r2, r0, #1
   18c44:	str	r2, [r4, #32]
   18c48:	ldrb	r3, [r4, #25]
   18c4c:	ldr	r0, [r4, #20]
   18c50:	ldr	r1, [r4, #16]
   18c54:	mla	r7, r2, r3, r0
   18c58:	mul	r5, r2, r3
   18c5c:	cmp	r7, r1
   18c60:	bls	18cd0 <flatcc_json_printer_uint64_vector_field@@Base+0x380>
   18c64:	cmp	r0, r1
   18c68:	bcc	18c84 <flatcc_json_printer_uint64_vector_field@@Base+0x334>
   18c6c:	ldr	r2, [r4, #44]	; 0x2c
   18c70:	mov	r0, r4
   18c74:	mov	r1, #0
   18c78:	blx	r2
   18c7c:	ldr	r1, [r4, #16]
   18c80:	ldr	r0, [r4, #20]
   18c84:	sub	r6, r1, r0
   18c88:	cmp	r6, r5
   18c8c:	bcs	18cd0 <flatcc_json_printer_uint64_vector_field@@Base+0x380>
   18c90:	mov	r1, #32
   18c94:	mov	r2, r6
   18c98:	bl	12948 <memset@plt>
   18c9c:	ldr	r0, [r4, #20]
   18ca0:	ldr	r2, [r4, #44]	; 0x2c
   18ca4:	mov	r1, #0
   18ca8:	add	r0, r0, r6
   18cac:	str	r0, [r4, #20]
   18cb0:	mov	r0, r4
   18cb4:	blx	r2
   18cb8:	ldr	r1, [r4, #16]
   18cbc:	ldr	r0, [r4, #20]
   18cc0:	sub	r5, r5, r6
   18cc4:	sub	r6, r1, r0
   18cc8:	cmp	r5, r6
   18ccc:	bhi	18c90 <flatcc_json_printer_uint64_vector_field@@Base+0x340>
   18cd0:	mov	r1, #32
   18cd4:	mov	r2, r5
   18cd8:	bl	12948 <memset@plt>
   18cdc:	ldr	r0, [r4, #20]
   18ce0:	add	r0, r0, r5
   18ce4:	str	r0, [r4, #20]
   18ce8:	add	r1, r0, #1
   18cec:	str	r1, [r4, #20]
   18cf0:	mov	r1, #93	; 0x5d
   18cf4:	strb	r1, [r0]
   18cf8:	sub	sp, fp, #28
   18cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018d00 <flatcc_json_printer_int8_vector_field@@Base>:
   18d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d04:	add	fp, sp, #28
   18d08:	sub	sp, sp, #4
   18d0c:	mov	r4, r0
   18d10:	mov	r0, #4
   18d14:	add	r0, r0, r2, lsl #1
   18d18:	ldr	r2, [r1, #8]
   18d1c:	cmp	r0, r2
   18d20:	bge	190e8 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   18d24:	ldr	r2, [r1, #4]
   18d28:	add	r0, r2, r0
   18d2c:	ldrh	r0, [r0]
   18d30:	cmp	r0, #0
   18d34:	ldrne	r2, [r1]
   18d38:	addsne	r8, r2, r0
   18d3c:	beq	190e8 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   18d40:	ldr	r0, [r1, #16]
   18d44:	ldr	r2, [fp, #8]
   18d48:	add	r7, r0, #1
   18d4c:	cmp	r0, #0
   18d50:	str	r7, [r1, #16]
   18d54:	ldrne	r0, [r4, #20]
   18d58:	addne	r1, r0, #1
   18d5c:	strne	r1, [r4, #20]
   18d60:	movne	r1, #44	; 0x2c
   18d64:	strbne	r1, [r0]
   18d68:	mov	r1, r3
   18d6c:	ldr	r0, [r8]
   18d70:	ldr	r7, [r8, r0]!
   18d74:	mov	r0, r4
   18d78:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   18d7c:	ldr	r1, [r4, #32]
   18d80:	ldr	r0, [r4, #20]
   18d84:	cmp	r7, #0
   18d88:	add	r1, r1, #1
   18d8c:	str	r1, [r4, #32]
   18d90:	add	r1, r0, #1
   18d94:	str	r1, [r4, #20]
   18d98:	mov	r1, #91	; 0x5b
   18d9c:	strb	r1, [r0]
   18da0:	beq	1900c <flatcc_json_printer_int8_vector_field@@Base+0x30c>
   18da4:	ldrb	r0, [r4, #25]
   18da8:	ldr	r1, [r4, #20]
   18dac:	cmp	r0, #0
   18db0:	beq	18e6c <flatcc_json_printer_int8_vector_field@@Base+0x16c>
   18db4:	add	r0, r1, #1
   18db8:	str	r0, [r4, #20]
   18dbc:	mov	r0, #10
   18dc0:	strb	r0, [r1]
   18dc4:	ldr	r0, [r4, #20]
   18dc8:	ldrb	r2, [r4, #25]
   18dcc:	ldr	r3, [r4, #32]
   18dd0:	ldr	r1, [r4, #16]
   18dd4:	mla	r6, r3, r2, r0
   18dd8:	mul	r5, r3, r2
   18ddc:	cmp	r6, r1
   18de0:	bls	18e50 <flatcc_json_printer_int8_vector_field@@Base+0x150>
   18de4:	cmp	r0, r1
   18de8:	bcc	18e04 <flatcc_json_printer_int8_vector_field@@Base+0x104>
   18dec:	ldr	r2, [r4, #44]	; 0x2c
   18df0:	mov	r0, r4
   18df4:	mov	r1, #0
   18df8:	blx	r2
   18dfc:	ldr	r1, [r4, #16]
   18e00:	ldr	r0, [r4, #20]
   18e04:	sub	r6, r1, r0
   18e08:	cmp	r6, r5
   18e0c:	bcs	18e50 <flatcc_json_printer_int8_vector_field@@Base+0x150>
   18e10:	mov	r1, #32
   18e14:	mov	r2, r6
   18e18:	bl	12948 <memset@plt>
   18e1c:	ldr	r0, [r4, #20]
   18e20:	ldr	r2, [r4, #44]	; 0x2c
   18e24:	mov	r1, #0
   18e28:	add	r0, r0, r6
   18e2c:	str	r0, [r4, #20]
   18e30:	mov	r0, r4
   18e34:	blx	r2
   18e38:	ldr	r1, [r4, #16]
   18e3c:	ldr	r0, [r4, #20]
   18e40:	sub	r5, r5, r6
   18e44:	sub	r6, r1, r0
   18e48:	cmp	r5, r6
   18e4c:	bhi	18e10 <flatcc_json_printer_int8_vector_field@@Base+0x110>
   18e50:	mov	r1, #32
   18e54:	mov	r2, r5
   18e58:	bl	12948 <memset@plt>
   18e5c:	ldr	r0, [r4, #20]
   18e60:	add	r1, r0, r5
   18e64:	str	r1, [r4, #20]
   18e68:	b	18e8c <flatcc_json_printer_int8_vector_field@@Base+0x18c>
   18e6c:	ldr	r0, [r4, #16]
   18e70:	cmp	r1, r0
   18e74:	bcc	18e8c <flatcc_json_printer_int8_vector_field@@Base+0x18c>
   18e78:	ldr	r2, [r4, #44]	; 0x2c
   18e7c:	mov	r0, r4
   18e80:	mov	r1, #0
   18e84:	blx	r2
   18e88:	ldr	r1, [r4, #20]
   18e8c:	ldrb	r0, [r8, #4]
   18e90:	lsr	r5, r0, #7
   18e94:	sxtb	r0, r0
   18e98:	cmn	r0, #1
   18e9c:	rsble	r0, r0, #0
   18ea0:	movle	r2, #45	; 0x2d
   18ea4:	strble	r2, [r1], #1
   18ea8:	uxtb	r0, r0
   18eac:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   18eb0:	ldr	r1, [r4, #20]
   18eb4:	add	r0, r0, r5
   18eb8:	subs	r9, r7, #1
   18ebc:	add	r0, r1, r0
   18ec0:	str	r0, [r4, #20]
   18ec4:	beq	1900c <flatcc_json_printer_int8_vector_field@@Base+0x30c>
   18ec8:	ldr	r0, [r4, #20]
   18ecc:	add	r7, r8, #5
   18ed0:	mov	r8, #44	; 0x2c
   18ed4:	mov	sl, #10
   18ed8:	add	r1, r0, #1
   18edc:	str	r1, [r4, #20]
   18ee0:	strb	r8, [r0]
   18ee4:	ldrb	r0, [r4, #25]
   18ee8:	ldr	r1, [r4, #20]
   18eec:	cmp	r0, #0
   18ef0:	beq	18fa8 <flatcc_json_printer_int8_vector_field@@Base+0x2a8>
   18ef4:	add	r0, r1, #1
   18ef8:	str	r0, [r4, #20]
   18efc:	strb	sl, [r1]
   18f00:	ldr	r0, [r4, #20]
   18f04:	ldrb	r2, [r4, #25]
   18f08:	ldr	r3, [r4, #32]
   18f0c:	ldr	r1, [r4, #16]
   18f10:	mla	r6, r3, r2, r0
   18f14:	mul	r5, r3, r2
   18f18:	cmp	r6, r1
   18f1c:	bls	18f8c <flatcc_json_printer_int8_vector_field@@Base+0x28c>
   18f20:	cmp	r0, r1
   18f24:	bcc	18f40 <flatcc_json_printer_int8_vector_field@@Base+0x240>
   18f28:	ldr	r2, [r4, #44]	; 0x2c
   18f2c:	mov	r0, r4
   18f30:	mov	r1, #0
   18f34:	blx	r2
   18f38:	ldr	r1, [r4, #16]
   18f3c:	ldr	r0, [r4, #20]
   18f40:	sub	r6, r1, r0
   18f44:	cmp	r6, r5
   18f48:	bcs	18f8c <flatcc_json_printer_int8_vector_field@@Base+0x28c>
   18f4c:	mov	r1, #32
   18f50:	mov	r2, r6
   18f54:	bl	12948 <memset@plt>
   18f58:	ldr	r0, [r4, #20]
   18f5c:	ldr	r2, [r4, #44]	; 0x2c
   18f60:	mov	r1, #0
   18f64:	add	r0, r0, r6
   18f68:	str	r0, [r4, #20]
   18f6c:	mov	r0, r4
   18f70:	blx	r2
   18f74:	ldr	r1, [r4, #16]
   18f78:	ldr	r0, [r4, #20]
   18f7c:	sub	r5, r5, r6
   18f80:	sub	r6, r1, r0
   18f84:	cmp	r5, r6
   18f88:	bhi	18f4c <flatcc_json_printer_int8_vector_field@@Base+0x24c>
   18f8c:	mov	r1, #32
   18f90:	mov	r2, r5
   18f94:	bl	12948 <memset@plt>
   18f98:	ldr	r0, [r4, #20]
   18f9c:	add	r1, r0, r5
   18fa0:	str	r1, [r4, #20]
   18fa4:	b	18fc8 <flatcc_json_printer_int8_vector_field@@Base+0x2c8>
   18fa8:	ldr	r0, [r4, #16]
   18fac:	cmp	r1, r0
   18fb0:	bcc	18fc8 <flatcc_json_printer_int8_vector_field@@Base+0x2c8>
   18fb4:	ldr	r2, [r4, #44]	; 0x2c
   18fb8:	mov	r0, r4
   18fbc:	mov	r1, #0
   18fc0:	blx	r2
   18fc4:	ldr	r1, [r4, #20]
   18fc8:	ldrb	r0, [r7]
   18fcc:	sub	r9, r9, #1
   18fd0:	lsr	r5, r0, #7
   18fd4:	sxtb	r0, r0
   18fd8:	cmn	r0, #1
   18fdc:	rsble	r0, r0, #0
   18fe0:	movle	r2, #45	; 0x2d
   18fe4:	strble	r2, [r1], #1
   18fe8:	uxtb	r0, r0
   18fec:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   18ff0:	ldr	r1, [r4, #20]
   18ff4:	add	r0, r0, r5
   18ff8:	add	r7, r7, #1
   18ffc:	cmp	r9, #0
   19000:	add	r0, r1, r0
   19004:	str	r0, [r4, #20]
   19008:	bne	18ed8 <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   1900c:	ldrb	r1, [r4, #25]
   19010:	ldr	r0, [r4, #20]
   19014:	cmp	r1, #0
   19018:	beq	190d8 <flatcc_json_printer_int8_vector_field@@Base+0x3d8>
   1901c:	add	r1, r0, #1
   19020:	str	r1, [r4, #20]
   19024:	mov	r1, #10
   19028:	strb	r1, [r0]
   1902c:	ldr	r0, [r4, #32]
   19030:	sub	r2, r0, #1
   19034:	str	r2, [r4, #32]
   19038:	ldrb	r3, [r4, #25]
   1903c:	ldr	r0, [r4, #20]
   19040:	ldr	r1, [r4, #16]
   19044:	mla	r7, r2, r3, r0
   19048:	mul	r5, r2, r3
   1904c:	cmp	r7, r1
   19050:	bls	190c0 <flatcc_json_printer_int8_vector_field@@Base+0x3c0>
   19054:	cmp	r0, r1
   19058:	bcc	19074 <flatcc_json_printer_int8_vector_field@@Base+0x374>
   1905c:	ldr	r2, [r4, #44]	; 0x2c
   19060:	mov	r0, r4
   19064:	mov	r1, #0
   19068:	blx	r2
   1906c:	ldr	r1, [r4, #16]
   19070:	ldr	r0, [r4, #20]
   19074:	sub	r6, r1, r0
   19078:	cmp	r6, r5
   1907c:	bcs	190c0 <flatcc_json_printer_int8_vector_field@@Base+0x3c0>
   19080:	mov	r1, #32
   19084:	mov	r2, r6
   19088:	bl	12948 <memset@plt>
   1908c:	ldr	r0, [r4, #20]
   19090:	ldr	r2, [r4, #44]	; 0x2c
   19094:	mov	r1, #0
   19098:	add	r0, r0, r6
   1909c:	str	r0, [r4, #20]
   190a0:	mov	r0, r4
   190a4:	blx	r2
   190a8:	ldr	r1, [r4, #16]
   190ac:	ldr	r0, [r4, #20]
   190b0:	sub	r5, r5, r6
   190b4:	sub	r6, r1, r0
   190b8:	cmp	r5, r6
   190bc:	bhi	19080 <flatcc_json_printer_int8_vector_field@@Base+0x380>
   190c0:	mov	r1, #32
   190c4:	mov	r2, r5
   190c8:	bl	12948 <memset@plt>
   190cc:	ldr	r0, [r4, #20]
   190d0:	add	r0, r0, r5
   190d4:	str	r0, [r4, #20]
   190d8:	add	r1, r0, #1
   190dc:	str	r1, [r4, #20]
   190e0:	mov	r1, #93	; 0x5d
   190e4:	strb	r1, [r0]
   190e8:	sub	sp, fp, #28
   190ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000190f0 <flatcc_json_printer_int16_vector_field@@Base>:
   190f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190f4:	add	fp, sp, #28
   190f8:	sub	sp, sp, #4
   190fc:	mov	r4, r0
   19100:	mov	r0, #4
   19104:	add	r0, r0, r2, lsl #1
   19108:	ldr	r2, [r1, #8]
   1910c:	cmp	r0, r2
   19110:	bge	194d8 <flatcc_json_printer_int16_vector_field@@Base+0x3e8>
   19114:	ldr	r2, [r1, #4]
   19118:	add	r0, r2, r0
   1911c:	ldrh	r0, [r0]
   19120:	cmp	r0, #0
   19124:	ldrne	r2, [r1]
   19128:	addsne	r8, r2, r0
   1912c:	beq	194d8 <flatcc_json_printer_int16_vector_field@@Base+0x3e8>
   19130:	ldr	r0, [r1, #16]
   19134:	ldr	r2, [fp, #8]
   19138:	add	r7, r0, #1
   1913c:	cmp	r0, #0
   19140:	str	r7, [r1, #16]
   19144:	ldrne	r0, [r4, #20]
   19148:	addne	r1, r0, #1
   1914c:	strne	r1, [r4, #20]
   19150:	movne	r1, #44	; 0x2c
   19154:	strbne	r1, [r0]
   19158:	mov	r1, r3
   1915c:	ldr	r0, [r8]
   19160:	ldr	r7, [r8, r0]!
   19164:	mov	r0, r4
   19168:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1916c:	ldr	r1, [r4, #32]
   19170:	ldr	r0, [r4, #20]
   19174:	cmp	r7, #0
   19178:	add	r1, r1, #1
   1917c:	str	r1, [r4, #32]
   19180:	add	r1, r0, #1
   19184:	str	r1, [r4, #20]
   19188:	mov	r1, #91	; 0x5b
   1918c:	strb	r1, [r0]
   19190:	beq	193fc <flatcc_json_printer_int16_vector_field@@Base+0x30c>
   19194:	ldrb	r0, [r4, #25]
   19198:	ldr	r1, [r4, #20]
   1919c:	cmp	r0, #0
   191a0:	beq	1925c <flatcc_json_printer_int16_vector_field@@Base+0x16c>
   191a4:	add	r0, r1, #1
   191a8:	str	r0, [r4, #20]
   191ac:	mov	r0, #10
   191b0:	strb	r0, [r1]
   191b4:	ldr	r0, [r4, #20]
   191b8:	ldrb	r2, [r4, #25]
   191bc:	ldr	r3, [r4, #32]
   191c0:	ldr	r1, [r4, #16]
   191c4:	mla	r6, r3, r2, r0
   191c8:	mul	r5, r3, r2
   191cc:	cmp	r6, r1
   191d0:	bls	19240 <flatcc_json_printer_int16_vector_field@@Base+0x150>
   191d4:	cmp	r0, r1
   191d8:	bcc	191f4 <flatcc_json_printer_int16_vector_field@@Base+0x104>
   191dc:	ldr	r2, [r4, #44]	; 0x2c
   191e0:	mov	r0, r4
   191e4:	mov	r1, #0
   191e8:	blx	r2
   191ec:	ldr	r1, [r4, #16]
   191f0:	ldr	r0, [r4, #20]
   191f4:	sub	r6, r1, r0
   191f8:	cmp	r6, r5
   191fc:	bcs	19240 <flatcc_json_printer_int16_vector_field@@Base+0x150>
   19200:	mov	r1, #32
   19204:	mov	r2, r6
   19208:	bl	12948 <memset@plt>
   1920c:	ldr	r0, [r4, #20]
   19210:	ldr	r2, [r4, #44]	; 0x2c
   19214:	mov	r1, #0
   19218:	add	r0, r0, r6
   1921c:	str	r0, [r4, #20]
   19220:	mov	r0, r4
   19224:	blx	r2
   19228:	ldr	r1, [r4, #16]
   1922c:	ldr	r0, [r4, #20]
   19230:	sub	r5, r5, r6
   19234:	sub	r6, r1, r0
   19238:	cmp	r5, r6
   1923c:	bhi	19200 <flatcc_json_printer_int16_vector_field@@Base+0x110>
   19240:	mov	r1, #32
   19244:	mov	r2, r5
   19248:	bl	12948 <memset@plt>
   1924c:	ldr	r0, [r4, #20]
   19250:	add	r1, r0, r5
   19254:	str	r1, [r4, #20]
   19258:	b	1927c <flatcc_json_printer_int16_vector_field@@Base+0x18c>
   1925c:	ldr	r0, [r4, #16]
   19260:	cmp	r1, r0
   19264:	bcc	1927c <flatcc_json_printer_int16_vector_field@@Base+0x18c>
   19268:	ldr	r2, [r4, #44]	; 0x2c
   1926c:	mov	r0, r4
   19270:	mov	r1, #0
   19274:	blx	r2
   19278:	ldr	r1, [r4, #20]
   1927c:	ldrh	r0, [r8, #4]
   19280:	lsr	r5, r0, #15
   19284:	sxth	r0, r0
   19288:	cmn	r0, #1
   1928c:	rsble	r0, r0, #0
   19290:	movle	r2, #45	; 0x2d
   19294:	strble	r2, [r1], #1
   19298:	uxth	r0, r0
   1929c:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   192a0:	ldr	r1, [r4, #20]
   192a4:	add	r0, r0, r5
   192a8:	subs	r9, r7, #1
   192ac:	add	r0, r1, r0
   192b0:	str	r0, [r4, #20]
   192b4:	beq	193fc <flatcc_json_printer_int16_vector_field@@Base+0x30c>
   192b8:	ldr	r0, [r4, #20]
   192bc:	add	r7, r8, #6
   192c0:	mov	r8, #44	; 0x2c
   192c4:	mov	sl, #10
   192c8:	add	r1, r0, #1
   192cc:	str	r1, [r4, #20]
   192d0:	strb	r8, [r0]
   192d4:	ldrb	r0, [r4, #25]
   192d8:	ldr	r1, [r4, #20]
   192dc:	cmp	r0, #0
   192e0:	beq	19398 <flatcc_json_printer_int16_vector_field@@Base+0x2a8>
   192e4:	add	r0, r1, #1
   192e8:	str	r0, [r4, #20]
   192ec:	strb	sl, [r1]
   192f0:	ldr	r0, [r4, #20]
   192f4:	ldrb	r2, [r4, #25]
   192f8:	ldr	r3, [r4, #32]
   192fc:	ldr	r1, [r4, #16]
   19300:	mla	r6, r3, r2, r0
   19304:	mul	r5, r3, r2
   19308:	cmp	r6, r1
   1930c:	bls	1937c <flatcc_json_printer_int16_vector_field@@Base+0x28c>
   19310:	cmp	r0, r1
   19314:	bcc	19330 <flatcc_json_printer_int16_vector_field@@Base+0x240>
   19318:	ldr	r2, [r4, #44]	; 0x2c
   1931c:	mov	r0, r4
   19320:	mov	r1, #0
   19324:	blx	r2
   19328:	ldr	r1, [r4, #16]
   1932c:	ldr	r0, [r4, #20]
   19330:	sub	r6, r1, r0
   19334:	cmp	r6, r5
   19338:	bcs	1937c <flatcc_json_printer_int16_vector_field@@Base+0x28c>
   1933c:	mov	r1, #32
   19340:	mov	r2, r6
   19344:	bl	12948 <memset@plt>
   19348:	ldr	r0, [r4, #20]
   1934c:	ldr	r2, [r4, #44]	; 0x2c
   19350:	mov	r1, #0
   19354:	add	r0, r0, r6
   19358:	str	r0, [r4, #20]
   1935c:	mov	r0, r4
   19360:	blx	r2
   19364:	ldr	r1, [r4, #16]
   19368:	ldr	r0, [r4, #20]
   1936c:	sub	r5, r5, r6
   19370:	sub	r6, r1, r0
   19374:	cmp	r5, r6
   19378:	bhi	1933c <flatcc_json_printer_int16_vector_field@@Base+0x24c>
   1937c:	mov	r1, #32
   19380:	mov	r2, r5
   19384:	bl	12948 <memset@plt>
   19388:	ldr	r0, [r4, #20]
   1938c:	add	r1, r0, r5
   19390:	str	r1, [r4, #20]
   19394:	b	193b8 <flatcc_json_printer_int16_vector_field@@Base+0x2c8>
   19398:	ldr	r0, [r4, #16]
   1939c:	cmp	r1, r0
   193a0:	bcc	193b8 <flatcc_json_printer_int16_vector_field@@Base+0x2c8>
   193a4:	ldr	r2, [r4, #44]	; 0x2c
   193a8:	mov	r0, r4
   193ac:	mov	r1, #0
   193b0:	blx	r2
   193b4:	ldr	r1, [r4, #20]
   193b8:	ldrh	r0, [r7]
   193bc:	sub	r9, r9, #1
   193c0:	lsr	r5, r0, #15
   193c4:	sxth	r0, r0
   193c8:	cmn	r0, #1
   193cc:	rsble	r0, r0, #0
   193d0:	movle	r2, #45	; 0x2d
   193d4:	strble	r2, [r1], #1
   193d8:	uxth	r0, r0
   193dc:	bl	14d1c <flatcc_json_printer_uint16@@Base+0x2c>
   193e0:	ldr	r1, [r4, #20]
   193e4:	add	r0, r0, r5
   193e8:	add	r7, r7, #2
   193ec:	cmp	r9, #0
   193f0:	add	r0, r1, r0
   193f4:	str	r0, [r4, #20]
   193f8:	bne	192c8 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   193fc:	ldrb	r1, [r4, #25]
   19400:	ldr	r0, [r4, #20]
   19404:	cmp	r1, #0
   19408:	beq	194c8 <flatcc_json_printer_int16_vector_field@@Base+0x3d8>
   1940c:	add	r1, r0, #1
   19410:	str	r1, [r4, #20]
   19414:	mov	r1, #10
   19418:	strb	r1, [r0]
   1941c:	ldr	r0, [r4, #32]
   19420:	sub	r2, r0, #1
   19424:	str	r2, [r4, #32]
   19428:	ldrb	r3, [r4, #25]
   1942c:	ldr	r0, [r4, #20]
   19430:	ldr	r1, [r4, #16]
   19434:	mla	r7, r2, r3, r0
   19438:	mul	r5, r2, r3
   1943c:	cmp	r7, r1
   19440:	bls	194b0 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
   19444:	cmp	r0, r1
   19448:	bcc	19464 <flatcc_json_printer_int16_vector_field@@Base+0x374>
   1944c:	ldr	r2, [r4, #44]	; 0x2c
   19450:	mov	r0, r4
   19454:	mov	r1, #0
   19458:	blx	r2
   1945c:	ldr	r1, [r4, #16]
   19460:	ldr	r0, [r4, #20]
   19464:	sub	r6, r1, r0
   19468:	cmp	r6, r5
   1946c:	bcs	194b0 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
   19470:	mov	r1, #32
   19474:	mov	r2, r6
   19478:	bl	12948 <memset@plt>
   1947c:	ldr	r0, [r4, #20]
   19480:	ldr	r2, [r4, #44]	; 0x2c
   19484:	mov	r1, #0
   19488:	add	r0, r0, r6
   1948c:	str	r0, [r4, #20]
   19490:	mov	r0, r4
   19494:	blx	r2
   19498:	ldr	r1, [r4, #16]
   1949c:	ldr	r0, [r4, #20]
   194a0:	sub	r5, r5, r6
   194a4:	sub	r6, r1, r0
   194a8:	cmp	r5, r6
   194ac:	bhi	19470 <flatcc_json_printer_int16_vector_field@@Base+0x380>
   194b0:	mov	r1, #32
   194b4:	mov	r2, r5
   194b8:	bl	12948 <memset@plt>
   194bc:	ldr	r0, [r4, #20]
   194c0:	add	r0, r0, r5
   194c4:	str	r0, [r4, #20]
   194c8:	add	r1, r0, #1
   194cc:	str	r1, [r4, #20]
   194d0:	mov	r1, #93	; 0x5d
   194d4:	strb	r1, [r0]
   194d8:	sub	sp, fp, #28
   194dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000194e0 <flatcc_json_printer_int32_vector_field@@Base>:
   194e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194e4:	add	fp, sp, #28
   194e8:	sub	sp, sp, #4
   194ec:	mov	r4, r0
   194f0:	mov	r0, #4
   194f4:	add	r0, r0, r2, lsl #1
   194f8:	ldr	r2, [r1, #8]
   194fc:	cmp	r0, r2
   19500:	bge	198b8 <flatcc_json_printer_int32_vector_field@@Base+0x3d8>
   19504:	ldr	r2, [r1, #4]
   19508:	add	r0, r2, r0
   1950c:	ldrh	r0, [r0]
   19510:	cmp	r0, #0
   19514:	ldrne	r2, [r1]
   19518:	addsne	r8, r2, r0
   1951c:	beq	198b8 <flatcc_json_printer_int32_vector_field@@Base+0x3d8>
   19520:	ldr	r0, [r1, #16]
   19524:	ldr	r2, [fp, #8]
   19528:	add	r7, r0, #1
   1952c:	cmp	r0, #0
   19530:	str	r7, [r1, #16]
   19534:	ldrne	r0, [r4, #20]
   19538:	addne	r1, r0, #1
   1953c:	strne	r1, [r4, #20]
   19540:	movne	r1, #44	; 0x2c
   19544:	strbne	r1, [r0]
   19548:	mov	r1, r3
   1954c:	ldr	r0, [r8]
   19550:	ldr	r7, [r8, r0]!
   19554:	mov	r0, r4
   19558:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1955c:	ldr	r1, [r4, #32]
   19560:	ldr	r0, [r4, #20]
   19564:	cmp	r7, #0
   19568:	add	r1, r1, #1
   1956c:	str	r1, [r4, #32]
   19570:	add	r1, r0, #1
   19574:	str	r1, [r4, #20]
   19578:	mov	r1, #91	; 0x5b
   1957c:	strb	r1, [r0]
   19580:	beq	197dc <flatcc_json_printer_int32_vector_field@@Base+0x2fc>
   19584:	ldrb	r0, [r4, #25]
   19588:	ldr	r1, [r4, #20]
   1958c:	cmp	r0, #0
   19590:	beq	1964c <flatcc_json_printer_int32_vector_field@@Base+0x16c>
   19594:	add	r0, r1, #1
   19598:	str	r0, [r4, #20]
   1959c:	mov	r0, #10
   195a0:	strb	r0, [r1]
   195a4:	ldr	r0, [r4, #20]
   195a8:	ldrb	r2, [r4, #25]
   195ac:	ldr	r3, [r4, #32]
   195b0:	ldr	r1, [r4, #16]
   195b4:	mla	r6, r3, r2, r0
   195b8:	mul	r5, r3, r2
   195bc:	cmp	r6, r1
   195c0:	bls	19630 <flatcc_json_printer_int32_vector_field@@Base+0x150>
   195c4:	cmp	r0, r1
   195c8:	bcc	195e4 <flatcc_json_printer_int32_vector_field@@Base+0x104>
   195cc:	ldr	r2, [r4, #44]	; 0x2c
   195d0:	mov	r0, r4
   195d4:	mov	r1, #0
   195d8:	blx	r2
   195dc:	ldr	r1, [r4, #16]
   195e0:	ldr	r0, [r4, #20]
   195e4:	sub	r6, r1, r0
   195e8:	cmp	r6, r5
   195ec:	bcs	19630 <flatcc_json_printer_int32_vector_field@@Base+0x150>
   195f0:	mov	r1, #32
   195f4:	mov	r2, r6
   195f8:	bl	12948 <memset@plt>
   195fc:	ldr	r0, [r4, #20]
   19600:	ldr	r2, [r4, #44]	; 0x2c
   19604:	mov	r1, #0
   19608:	add	r0, r0, r6
   1960c:	str	r0, [r4, #20]
   19610:	mov	r0, r4
   19614:	blx	r2
   19618:	ldr	r1, [r4, #16]
   1961c:	ldr	r0, [r4, #20]
   19620:	sub	r5, r5, r6
   19624:	sub	r6, r1, r0
   19628:	cmp	r5, r6
   1962c:	bhi	195f0 <flatcc_json_printer_int32_vector_field@@Base+0x110>
   19630:	mov	r1, #32
   19634:	mov	r2, r5
   19638:	bl	12948 <memset@plt>
   1963c:	ldr	r0, [r4, #20]
   19640:	add	r1, r0, r5
   19644:	str	r1, [r4, #20]
   19648:	b	1966c <flatcc_json_printer_int32_vector_field@@Base+0x18c>
   1964c:	ldr	r0, [r4, #16]
   19650:	cmp	r1, r0
   19654:	bcc	1966c <flatcc_json_printer_int32_vector_field@@Base+0x18c>
   19658:	ldr	r2, [r4, #44]	; 0x2c
   1965c:	mov	r0, r4
   19660:	mov	r1, #0
   19664:	blx	r2
   19668:	ldr	r1, [r4, #20]
   1966c:	ldr	r0, [r8, #4]
   19670:	cmn	r0, #1
   19674:	lsr	r5, r0, #31
   19678:	movle	r2, #45	; 0x2d
   1967c:	rsble	r0, r0, #0
   19680:	strble	r2, [r1], #1
   19684:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   19688:	ldr	r1, [r4, #20]
   1968c:	add	r0, r0, r5
   19690:	subs	r9, r7, #1
   19694:	add	r0, r1, r0
   19698:	str	r0, [r4, #20]
   1969c:	beq	197dc <flatcc_json_printer_int32_vector_field@@Base+0x2fc>
   196a0:	ldr	r0, [r4, #20]
   196a4:	add	r7, r8, #8
   196a8:	mov	r8, #44	; 0x2c
   196ac:	mov	sl, #10
   196b0:	add	r1, r0, #1
   196b4:	str	r1, [r4, #20]
   196b8:	strb	r8, [r0]
   196bc:	ldrb	r0, [r4, #25]
   196c0:	ldr	r1, [r4, #20]
   196c4:	cmp	r0, #0
   196c8:	beq	19780 <flatcc_json_printer_int32_vector_field@@Base+0x2a0>
   196cc:	add	r0, r1, #1
   196d0:	str	r0, [r4, #20]
   196d4:	strb	sl, [r1]
   196d8:	ldr	r0, [r4, #20]
   196dc:	ldrb	r2, [r4, #25]
   196e0:	ldr	r3, [r4, #32]
   196e4:	ldr	r1, [r4, #16]
   196e8:	mla	r6, r3, r2, r0
   196ec:	mul	r5, r3, r2
   196f0:	cmp	r6, r1
   196f4:	bls	19764 <flatcc_json_printer_int32_vector_field@@Base+0x284>
   196f8:	cmp	r0, r1
   196fc:	bcc	19718 <flatcc_json_printer_int32_vector_field@@Base+0x238>
   19700:	ldr	r2, [r4, #44]	; 0x2c
   19704:	mov	r0, r4
   19708:	mov	r1, #0
   1970c:	blx	r2
   19710:	ldr	r1, [r4, #16]
   19714:	ldr	r0, [r4, #20]
   19718:	sub	r6, r1, r0
   1971c:	cmp	r6, r5
   19720:	bcs	19764 <flatcc_json_printer_int32_vector_field@@Base+0x284>
   19724:	mov	r1, #32
   19728:	mov	r2, r6
   1972c:	bl	12948 <memset@plt>
   19730:	ldr	r0, [r4, #20]
   19734:	ldr	r2, [r4, #44]	; 0x2c
   19738:	mov	r1, #0
   1973c:	add	r0, r0, r6
   19740:	str	r0, [r4, #20]
   19744:	mov	r0, r4
   19748:	blx	r2
   1974c:	ldr	r1, [r4, #16]
   19750:	ldr	r0, [r4, #20]
   19754:	sub	r5, r5, r6
   19758:	sub	r6, r1, r0
   1975c:	cmp	r5, r6
   19760:	bhi	19724 <flatcc_json_printer_int32_vector_field@@Base+0x244>
   19764:	mov	r1, #32
   19768:	mov	r2, r5
   1976c:	bl	12948 <memset@plt>
   19770:	ldr	r0, [r4, #20]
   19774:	add	r1, r0, r5
   19778:	str	r1, [r4, #20]
   1977c:	b	197a0 <flatcc_json_printer_int32_vector_field@@Base+0x2c0>
   19780:	ldr	r0, [r4, #16]
   19784:	cmp	r1, r0
   19788:	bcc	197a0 <flatcc_json_printer_int32_vector_field@@Base+0x2c0>
   1978c:	ldr	r2, [r4, #44]	; 0x2c
   19790:	mov	r0, r4
   19794:	mov	r1, #0
   19798:	blx	r2
   1979c:	ldr	r1, [r4, #20]
   197a0:	ldr	r0, [r7]
   197a4:	sub	r9, r9, #1
   197a8:	cmn	r0, #1
   197ac:	lsr	r5, r0, #31
   197b0:	movle	r2, #45	; 0x2d
   197b4:	rsble	r0, r0, #0
   197b8:	strble	r2, [r1], #1
   197bc:	bl	14ea8 <flatcc_json_printer_uint32@@Base+0x2c>
   197c0:	ldr	r1, [r4, #20]
   197c4:	add	r0, r0, r5
   197c8:	add	r7, r7, #4
   197cc:	cmp	r9, #0
   197d0:	add	r0, r1, r0
   197d4:	str	r0, [r4, #20]
   197d8:	bne	196b0 <flatcc_json_printer_int32_vector_field@@Base+0x1d0>
   197dc:	ldrb	r1, [r4, #25]
   197e0:	ldr	r0, [r4, #20]
   197e4:	cmp	r1, #0
   197e8:	beq	198a8 <flatcc_json_printer_int32_vector_field@@Base+0x3c8>
   197ec:	add	r1, r0, #1
   197f0:	str	r1, [r4, #20]
   197f4:	mov	r1, #10
   197f8:	strb	r1, [r0]
   197fc:	ldr	r0, [r4, #32]
   19800:	sub	r2, r0, #1
   19804:	str	r2, [r4, #32]
   19808:	ldrb	r3, [r4, #25]
   1980c:	ldr	r0, [r4, #20]
   19810:	ldr	r1, [r4, #16]
   19814:	mla	r7, r2, r3, r0
   19818:	mul	r5, r2, r3
   1981c:	cmp	r7, r1
   19820:	bls	19890 <flatcc_json_printer_int32_vector_field@@Base+0x3b0>
   19824:	cmp	r0, r1
   19828:	bcc	19844 <flatcc_json_printer_int32_vector_field@@Base+0x364>
   1982c:	ldr	r2, [r4, #44]	; 0x2c
   19830:	mov	r0, r4
   19834:	mov	r1, #0
   19838:	blx	r2
   1983c:	ldr	r1, [r4, #16]
   19840:	ldr	r0, [r4, #20]
   19844:	sub	r6, r1, r0
   19848:	cmp	r6, r5
   1984c:	bcs	19890 <flatcc_json_printer_int32_vector_field@@Base+0x3b0>
   19850:	mov	r1, #32
   19854:	mov	r2, r6
   19858:	bl	12948 <memset@plt>
   1985c:	ldr	r0, [r4, #20]
   19860:	ldr	r2, [r4, #44]	; 0x2c
   19864:	mov	r1, #0
   19868:	add	r0, r0, r6
   1986c:	str	r0, [r4, #20]
   19870:	mov	r0, r4
   19874:	blx	r2
   19878:	ldr	r1, [r4, #16]
   1987c:	ldr	r0, [r4, #20]
   19880:	sub	r5, r5, r6
   19884:	sub	r6, r1, r0
   19888:	cmp	r5, r6
   1988c:	bhi	19850 <flatcc_json_printer_int32_vector_field@@Base+0x370>
   19890:	mov	r1, #32
   19894:	mov	r2, r5
   19898:	bl	12948 <memset@plt>
   1989c:	ldr	r0, [r4, #20]
   198a0:	add	r0, r0, r5
   198a4:	str	r0, [r4, #20]
   198a8:	add	r1, r0, #1
   198ac:	str	r1, [r4, #20]
   198b0:	mov	r1, #93	; 0x5d
   198b4:	strb	r1, [r0]
   198b8:	sub	sp, fp, #28
   198bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000198c0 <flatcc_json_printer_int64_vector_field@@Base>:
   198c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198c4:	add	fp, sp, #28
   198c8:	sub	sp, sp, #4
   198cc:	mov	r4, r0
   198d0:	mov	r0, #4
   198d4:	add	r0, r0, r2, lsl #1
   198d8:	ldr	r2, [r1, #8]
   198dc:	cmp	r0, r2
   198e0:	bge	19ca8 <flatcc_json_printer_int64_vector_field@@Base+0x3e8>
   198e4:	ldr	r2, [r1, #4]
   198e8:	add	r0, r2, r0
   198ec:	ldrh	r0, [r0]
   198f0:	cmp	r0, #0
   198f4:	ldrne	r2, [r1]
   198f8:	addsne	r8, r2, r0
   198fc:	beq	19ca8 <flatcc_json_printer_int64_vector_field@@Base+0x3e8>
   19900:	ldr	r0, [r1, #16]
   19904:	ldr	r2, [fp, #8]
   19908:	add	r7, r0, #1
   1990c:	cmp	r0, #0
   19910:	str	r7, [r1, #16]
   19914:	ldrne	r0, [r4, #20]
   19918:	addne	r1, r0, #1
   1991c:	strne	r1, [r4, #20]
   19920:	movne	r1, #44	; 0x2c
   19924:	strbne	r1, [r0]
   19928:	mov	r1, r3
   1992c:	ldr	r0, [r8]
   19930:	ldr	r7, [r8, r0]!
   19934:	mov	r0, r4
   19938:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1993c:	ldr	r1, [r4, #32]
   19940:	ldr	r0, [r4, #20]
   19944:	cmp	r7, #0
   19948:	add	r1, r1, #1
   1994c:	str	r1, [r4, #32]
   19950:	add	r1, r0, #1
   19954:	str	r1, [r4, #20]
   19958:	mov	r1, #91	; 0x5b
   1995c:	strb	r1, [r0]
   19960:	beq	19bcc <flatcc_json_printer_int64_vector_field@@Base+0x30c>
   19964:	ldrb	r0, [r4, #25]
   19968:	ldr	r2, [r4, #20]
   1996c:	cmp	r0, #0
   19970:	beq	19a2c <flatcc_json_printer_int64_vector_field@@Base+0x16c>
   19974:	add	r0, r2, #1
   19978:	str	r0, [r4, #20]
   1997c:	mov	r0, #10
   19980:	strb	r0, [r2]
   19984:	ldr	r0, [r4, #20]
   19988:	ldrb	r2, [r4, #25]
   1998c:	ldr	r3, [r4, #32]
   19990:	ldr	r1, [r4, #16]
   19994:	mla	r6, r3, r2, r0
   19998:	mul	r5, r3, r2
   1999c:	cmp	r6, r1
   199a0:	bls	19a10 <flatcc_json_printer_int64_vector_field@@Base+0x150>
   199a4:	cmp	r0, r1
   199a8:	bcc	199c4 <flatcc_json_printer_int64_vector_field@@Base+0x104>
   199ac:	ldr	r2, [r4, #44]	; 0x2c
   199b0:	mov	r0, r4
   199b4:	mov	r1, #0
   199b8:	blx	r2
   199bc:	ldr	r1, [r4, #16]
   199c0:	ldr	r0, [r4, #20]
   199c4:	sub	r6, r1, r0
   199c8:	cmp	r6, r5
   199cc:	bcs	19a10 <flatcc_json_printer_int64_vector_field@@Base+0x150>
   199d0:	mov	r1, #32
   199d4:	mov	r2, r6
   199d8:	bl	12948 <memset@plt>
   199dc:	ldr	r0, [r4, #20]
   199e0:	ldr	r2, [r4, #44]	; 0x2c
   199e4:	mov	r1, #0
   199e8:	add	r0, r0, r6
   199ec:	str	r0, [r4, #20]
   199f0:	mov	r0, r4
   199f4:	blx	r2
   199f8:	ldr	r1, [r4, #16]
   199fc:	ldr	r0, [r4, #20]
   19a00:	sub	r5, r5, r6
   19a04:	sub	r6, r1, r0
   19a08:	cmp	r5, r6
   19a0c:	bhi	199d0 <flatcc_json_printer_int64_vector_field@@Base+0x110>
   19a10:	mov	r1, #32
   19a14:	mov	r2, r5
   19a18:	bl	12948 <memset@plt>
   19a1c:	ldr	r0, [r4, #20]
   19a20:	add	r2, r0, r5
   19a24:	str	r2, [r4, #20]
   19a28:	b	19a4c <flatcc_json_printer_int64_vector_field@@Base+0x18c>
   19a2c:	ldr	r0, [r4, #16]
   19a30:	cmp	r2, r0
   19a34:	bcc	19a4c <flatcc_json_printer_int64_vector_field@@Base+0x18c>
   19a38:	ldr	r2, [r4, #44]	; 0x2c
   19a3c:	mov	r0, r4
   19a40:	mov	r1, #0
   19a44:	blx	r2
   19a48:	ldr	r2, [r4, #20]
   19a4c:	ldrd	r0, [r8, #4]
   19a50:	lsr	r5, r1, #31
   19a54:	cmn	r1, #1
   19a58:	bgt	19a6c <flatcc_json_printer_int64_vector_field@@Base+0x1ac>
   19a5c:	mov	r3, #45	; 0x2d
   19a60:	rsbs	r0, r0, #0
   19a64:	strb	r3, [r2], #1
   19a68:	rsc	r1, r1, #0
   19a6c:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   19a70:	ldr	r1, [r4, #20]
   19a74:	add	r0, r0, r5
   19a78:	subs	r9, r7, #1
   19a7c:	add	r0, r1, r0
   19a80:	str	r0, [r4, #20]
   19a84:	beq	19bcc <flatcc_json_printer_int64_vector_field@@Base+0x30c>
   19a88:	ldr	r0, [r4, #20]
   19a8c:	add	r7, r8, #12
   19a90:	mov	r8, #44	; 0x2c
   19a94:	mov	sl, #10
   19a98:	add	r1, r0, #1
   19a9c:	str	r1, [r4, #20]
   19aa0:	strb	r8, [r0]
   19aa4:	ldrb	r0, [r4, #25]
   19aa8:	ldr	r2, [r4, #20]
   19aac:	cmp	r0, #0
   19ab0:	beq	19b68 <flatcc_json_printer_int64_vector_field@@Base+0x2a8>
   19ab4:	add	r0, r2, #1
   19ab8:	str	r0, [r4, #20]
   19abc:	strb	sl, [r2]
   19ac0:	ldr	r0, [r4, #20]
   19ac4:	ldrb	r2, [r4, #25]
   19ac8:	ldr	r3, [r4, #32]
   19acc:	ldr	r1, [r4, #16]
   19ad0:	mla	r6, r3, r2, r0
   19ad4:	mul	r5, r3, r2
   19ad8:	cmp	r6, r1
   19adc:	bls	19b4c <flatcc_json_printer_int64_vector_field@@Base+0x28c>
   19ae0:	cmp	r0, r1
   19ae4:	bcc	19b00 <flatcc_json_printer_int64_vector_field@@Base+0x240>
   19ae8:	ldr	r2, [r4, #44]	; 0x2c
   19aec:	mov	r0, r4
   19af0:	mov	r1, #0
   19af4:	blx	r2
   19af8:	ldr	r1, [r4, #16]
   19afc:	ldr	r0, [r4, #20]
   19b00:	sub	r6, r1, r0
   19b04:	cmp	r6, r5
   19b08:	bcs	19b4c <flatcc_json_printer_int64_vector_field@@Base+0x28c>
   19b0c:	mov	r1, #32
   19b10:	mov	r2, r6
   19b14:	bl	12948 <memset@plt>
   19b18:	ldr	r0, [r4, #20]
   19b1c:	ldr	r2, [r4, #44]	; 0x2c
   19b20:	mov	r1, #0
   19b24:	add	r0, r0, r6
   19b28:	str	r0, [r4, #20]
   19b2c:	mov	r0, r4
   19b30:	blx	r2
   19b34:	ldr	r1, [r4, #16]
   19b38:	ldr	r0, [r4, #20]
   19b3c:	sub	r5, r5, r6
   19b40:	sub	r6, r1, r0
   19b44:	cmp	r5, r6
   19b48:	bhi	19b0c <flatcc_json_printer_int64_vector_field@@Base+0x24c>
   19b4c:	mov	r1, #32
   19b50:	mov	r2, r5
   19b54:	bl	12948 <memset@plt>
   19b58:	ldr	r0, [r4, #20]
   19b5c:	add	r2, r0, r5
   19b60:	str	r2, [r4, #20]
   19b64:	b	19b88 <flatcc_json_printer_int64_vector_field@@Base+0x2c8>
   19b68:	ldr	r0, [r4, #16]
   19b6c:	cmp	r2, r0
   19b70:	bcc	19b88 <flatcc_json_printer_int64_vector_field@@Base+0x2c8>
   19b74:	ldr	r2, [r4, #44]	; 0x2c
   19b78:	mov	r0, r4
   19b7c:	mov	r1, #0
   19b80:	blx	r2
   19b84:	ldr	r2, [r4, #20]
   19b88:	ldrd	r0, [r7]
   19b8c:	sub	r9, r9, #1
   19b90:	lsr	r5, r1, #31
   19b94:	cmn	r1, #1
   19b98:	bgt	19bac <flatcc_json_printer_int64_vector_field@@Base+0x2ec>
   19b9c:	mov	r3, #45	; 0x2d
   19ba0:	rsbs	r0, r0, #0
   19ba4:	strb	r3, [r2], #1
   19ba8:	rsc	r1, r1, #0
   19bac:	bl	151e4 <flatcc_json_printer_uint64@@Base+0x30>
   19bb0:	ldr	r1, [r4, #20]
   19bb4:	add	r0, r0, r5
   19bb8:	add	r7, r7, #8
   19bbc:	cmp	r9, #0
   19bc0:	add	r0, r1, r0
   19bc4:	str	r0, [r4, #20]
   19bc8:	bne	19a98 <flatcc_json_printer_int64_vector_field@@Base+0x1d8>
   19bcc:	ldrb	r1, [r4, #25]
   19bd0:	ldr	r0, [r4, #20]
   19bd4:	cmp	r1, #0
   19bd8:	beq	19c98 <flatcc_json_printer_int64_vector_field@@Base+0x3d8>
   19bdc:	add	r1, r0, #1
   19be0:	str	r1, [r4, #20]
   19be4:	mov	r1, #10
   19be8:	strb	r1, [r0]
   19bec:	ldr	r0, [r4, #32]
   19bf0:	sub	r2, r0, #1
   19bf4:	str	r2, [r4, #32]
   19bf8:	ldrb	r3, [r4, #25]
   19bfc:	ldr	r0, [r4, #20]
   19c00:	ldr	r1, [r4, #16]
   19c04:	mla	r7, r2, r3, r0
   19c08:	mul	r5, r2, r3
   19c0c:	cmp	r7, r1
   19c10:	bls	19c80 <flatcc_json_printer_int64_vector_field@@Base+0x3c0>
   19c14:	cmp	r0, r1
   19c18:	bcc	19c34 <flatcc_json_printer_int64_vector_field@@Base+0x374>
   19c1c:	ldr	r2, [r4, #44]	; 0x2c
   19c20:	mov	r0, r4
   19c24:	mov	r1, #0
   19c28:	blx	r2
   19c2c:	ldr	r1, [r4, #16]
   19c30:	ldr	r0, [r4, #20]
   19c34:	sub	r6, r1, r0
   19c38:	cmp	r6, r5
   19c3c:	bcs	19c80 <flatcc_json_printer_int64_vector_field@@Base+0x3c0>
   19c40:	mov	r1, #32
   19c44:	mov	r2, r6
   19c48:	bl	12948 <memset@plt>
   19c4c:	ldr	r0, [r4, #20]
   19c50:	ldr	r2, [r4, #44]	; 0x2c
   19c54:	mov	r1, #0
   19c58:	add	r0, r0, r6
   19c5c:	str	r0, [r4, #20]
   19c60:	mov	r0, r4
   19c64:	blx	r2
   19c68:	ldr	r1, [r4, #16]
   19c6c:	ldr	r0, [r4, #20]
   19c70:	sub	r5, r5, r6
   19c74:	sub	r6, r1, r0
   19c78:	cmp	r5, r6
   19c7c:	bhi	19c40 <flatcc_json_printer_int64_vector_field@@Base+0x380>
   19c80:	mov	r1, #32
   19c84:	mov	r2, r5
   19c88:	bl	12948 <memset@plt>
   19c8c:	ldr	r0, [r4, #20]
   19c90:	add	r0, r0, r5
   19c94:	str	r0, [r4, #20]
   19c98:	add	r1, r0, #1
   19c9c:	str	r1, [r4, #20]
   19ca0:	mov	r1, #93	; 0x5d
   19ca4:	strb	r1, [r0]
   19ca8:	sub	sp, fp, #28
   19cac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019cb0 <flatcc_json_printer_bool_vector_field@@Base>:
   19cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19cb4:	add	fp, sp, #28
   19cb8:	sub	sp, sp, #4
   19cbc:	mov	r4, r0
   19cc0:	mov	r0, #4
   19cc4:	add	r0, r0, r2, lsl #1
   19cc8:	ldr	r2, [r1, #8]
   19ccc:	cmp	r0, r2
   19cd0:	bge	1a0c8 <flatcc_json_printer_bool_vector_field@@Base+0x418>
   19cd4:	ldr	r2, [r1, #4]
   19cd8:	add	r0, r2, r0
   19cdc:	ldrh	r0, [r0]
   19ce0:	cmp	r0, #0
   19ce4:	ldrne	r2, [r1]
   19ce8:	addsne	r8, r2, r0
   19cec:	beq	1a0c8 <flatcc_json_printer_bool_vector_field@@Base+0x418>
   19cf0:	ldr	r0, [r1, #16]
   19cf4:	ldr	r2, [fp, #8]
   19cf8:	add	r7, r0, #1
   19cfc:	cmp	r0, #0
   19d00:	str	r7, [r1, #16]
   19d04:	ldrne	r0, [r4, #20]
   19d08:	addne	r1, r0, #1
   19d0c:	strne	r1, [r4, #20]
   19d10:	movne	r1, #44	; 0x2c
   19d14:	strbne	r1, [r0]
   19d18:	mov	r1, r3
   19d1c:	ldr	r0, [r8]
   19d20:	ldr	r7, [r8, r0]!
   19d24:	mov	r0, r4
   19d28:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   19d2c:	ldr	r1, [r4, #32]
   19d30:	ldr	r0, [r4, #20]
   19d34:	cmp	r7, #0
   19d38:	add	r1, r1, #1
   19d3c:	str	r1, [r4, #32]
   19d40:	add	r1, r0, #1
   19d44:	str	r1, [r4, #20]
   19d48:	mov	r1, #91	; 0x5b
   19d4c:	strb	r1, [r0]
   19d50:	beq	19fec <flatcc_json_printer_bool_vector_field@@Base+0x33c>
   19d54:	ldrb	r1, [r4, #25]
   19d58:	ldr	r0, [r4, #20]
   19d5c:	cmp	r1, #0
   19d60:	beq	19e1c <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   19d64:	add	r1, r0, #1
   19d68:	str	r1, [r4, #20]
   19d6c:	mov	r1, #10
   19d70:	strb	r1, [r0]
   19d74:	ldr	r0, [r4, #20]
   19d78:	ldrb	r2, [r4, #25]
   19d7c:	ldr	r3, [r4, #32]
   19d80:	ldr	r1, [r4, #16]
   19d84:	mla	r6, r3, r2, r0
   19d88:	mul	r5, r3, r2
   19d8c:	cmp	r6, r1
   19d90:	bls	19e00 <flatcc_json_printer_bool_vector_field@@Base+0x150>
   19d94:	cmp	r0, r1
   19d98:	bcc	19db4 <flatcc_json_printer_bool_vector_field@@Base+0x104>
   19d9c:	ldr	r2, [r4, #44]	; 0x2c
   19da0:	mov	r0, r4
   19da4:	mov	r1, #0
   19da8:	blx	r2
   19dac:	ldr	r1, [r4, #16]
   19db0:	ldr	r0, [r4, #20]
   19db4:	sub	r6, r1, r0
   19db8:	cmp	r6, r5
   19dbc:	bcs	19e00 <flatcc_json_printer_bool_vector_field@@Base+0x150>
   19dc0:	mov	r1, #32
   19dc4:	mov	r2, r6
   19dc8:	bl	12948 <memset@plt>
   19dcc:	ldr	r0, [r4, #20]
   19dd0:	ldr	r2, [r4, #44]	; 0x2c
   19dd4:	mov	r1, #0
   19dd8:	add	r0, r0, r6
   19ddc:	str	r0, [r4, #20]
   19de0:	mov	r0, r4
   19de4:	blx	r2
   19de8:	ldr	r1, [r4, #16]
   19dec:	ldr	r0, [r4, #20]
   19df0:	sub	r5, r5, r6
   19df4:	sub	r6, r1, r0
   19df8:	cmp	r5, r6
   19dfc:	bhi	19dc0 <flatcc_json_printer_bool_vector_field@@Base+0x110>
   19e00:	mov	r1, #32
   19e04:	mov	r2, r5
   19e08:	bl	12948 <memset@plt>
   19e0c:	ldr	r0, [r4, #20]
   19e10:	add	r0, r0, r5
   19e14:	str	r0, [r4, #20]
   19e18:	b	19e3c <flatcc_json_printer_bool_vector_field@@Base+0x18c>
   19e1c:	ldr	r1, [r4, #16]
   19e20:	cmp	r0, r1
   19e24:	bcc	19e3c <flatcc_json_printer_bool_vector_field@@Base+0x18c>
   19e28:	ldr	r2, [r4, #44]	; 0x2c
   19e2c:	mov	r0, r4
   19e30:	mov	r1, #0
   19e34:	blx	r2
   19e38:	ldr	r0, [r4, #20]
   19e3c:	ldrb	r1, [r8, #4]
   19e40:	cmp	r1, #0
   19e44:	beq	19e64 <flatcc_json_printer_bool_vector_field@@Base+0x1b4>
   19e48:	mov	r1, #0
   19e4c:	strb	r1, [r0, #4]
   19e50:	movw	r1, #29300	; 0x7274
   19e54:	movt	r1, #25973	; 0x6575
   19e58:	str	r1, [r0]
   19e5c:	mov	r0, #4
   19e60:	b	19e7c <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   19e64:	mov	r1, #101	; 0x65
   19e68:	strh	r1, [r0, #4]
   19e6c:	movw	r1, #24934	; 0x6166
   19e70:	movt	r1, #29548	; 0x736c
   19e74:	str	r1, [r0]
   19e78:	mov	r0, #5
   19e7c:	ldr	r1, [r4, #20]
   19e80:	subs	r9, r7, #1
   19e84:	add	r0, r1, r0
   19e88:	str	r0, [r4, #20]
   19e8c:	beq	19fec <flatcc_json_printer_bool_vector_field@@Base+0x33c>
   19e90:	ldr	r0, [r4, #20]
   19e94:	add	r7, r8, #5
   19e98:	mov	r8, #44	; 0x2c
   19e9c:	mov	sl, #10
   19ea0:	add	r1, r0, #1
   19ea4:	str	r1, [r4, #20]
   19ea8:	strb	r8, [r0]
   19eac:	ldrb	r1, [r4, #25]
   19eb0:	ldr	r0, [r4, #20]
   19eb4:	cmp	r1, #0
   19eb8:	beq	19f70 <flatcc_json_printer_bool_vector_field@@Base+0x2c0>
   19ebc:	add	r1, r0, #1
   19ec0:	str	r1, [r4, #20]
   19ec4:	strb	sl, [r0]
   19ec8:	ldr	r0, [r4, #20]
   19ecc:	ldrb	r2, [r4, #25]
   19ed0:	ldr	r3, [r4, #32]
   19ed4:	ldr	r1, [r4, #16]
   19ed8:	mla	r6, r3, r2, r0
   19edc:	mul	r5, r3, r2
   19ee0:	cmp	r6, r1
   19ee4:	bls	19f54 <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   19ee8:	cmp	r0, r1
   19eec:	bcc	19f08 <flatcc_json_printer_bool_vector_field@@Base+0x258>
   19ef0:	ldr	r2, [r4, #44]	; 0x2c
   19ef4:	mov	r0, r4
   19ef8:	mov	r1, #0
   19efc:	blx	r2
   19f00:	ldr	r1, [r4, #16]
   19f04:	ldr	r0, [r4, #20]
   19f08:	sub	r6, r1, r0
   19f0c:	cmp	r6, r5
   19f10:	bcs	19f54 <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   19f14:	mov	r1, #32
   19f18:	mov	r2, r6
   19f1c:	bl	12948 <memset@plt>
   19f20:	ldr	r0, [r4, #20]
   19f24:	ldr	r2, [r4, #44]	; 0x2c
   19f28:	mov	r1, #0
   19f2c:	add	r0, r0, r6
   19f30:	str	r0, [r4, #20]
   19f34:	mov	r0, r4
   19f38:	blx	r2
   19f3c:	ldr	r1, [r4, #16]
   19f40:	ldr	r0, [r4, #20]
   19f44:	sub	r5, r5, r6
   19f48:	sub	r6, r1, r0
   19f4c:	cmp	r5, r6
   19f50:	bhi	19f14 <flatcc_json_printer_bool_vector_field@@Base+0x264>
   19f54:	mov	r1, #32
   19f58:	mov	r2, r5
   19f5c:	bl	12948 <memset@plt>
   19f60:	ldr	r0, [r4, #20]
   19f64:	add	r0, r0, r5
   19f68:	str	r0, [r4, #20]
   19f6c:	b	19f90 <flatcc_json_printer_bool_vector_field@@Base+0x2e0>
   19f70:	ldr	r1, [r4, #16]
   19f74:	cmp	r0, r1
   19f78:	bcc	19f90 <flatcc_json_printer_bool_vector_field@@Base+0x2e0>
   19f7c:	ldr	r2, [r4, #44]	; 0x2c
   19f80:	mov	r0, r4
   19f84:	mov	r1, #0
   19f88:	blx	r2
   19f8c:	ldr	r0, [r4, #20]
   19f90:	ldrb	r1, [r7]
   19f94:	sub	r9, r9, #1
   19f98:	cmp	r1, #0
   19f9c:	beq	19fbc <flatcc_json_printer_bool_vector_field@@Base+0x30c>
   19fa0:	mov	r1, #0
   19fa4:	strb	r1, [r0, #4]
   19fa8:	movw	r1, #29300	; 0x7274
   19fac:	movt	r1, #25973	; 0x6575
   19fb0:	str	r1, [r0]
   19fb4:	mov	r0, #4
   19fb8:	b	19fd4 <flatcc_json_printer_bool_vector_field@@Base+0x324>
   19fbc:	mov	r1, #101	; 0x65
   19fc0:	strh	r1, [r0, #4]
   19fc4:	movw	r1, #24934	; 0x6166
   19fc8:	movt	r1, #29548	; 0x736c
   19fcc:	str	r1, [r0]
   19fd0:	mov	r0, #5
   19fd4:	ldr	r1, [r4, #20]
   19fd8:	add	r7, r7, #1
   19fdc:	cmp	r9, #0
   19fe0:	add	r0, r1, r0
   19fe4:	str	r0, [r4, #20]
   19fe8:	bne	19ea0 <flatcc_json_printer_bool_vector_field@@Base+0x1f0>
   19fec:	ldrb	r1, [r4, #25]
   19ff0:	ldr	r0, [r4, #20]
   19ff4:	cmp	r1, #0
   19ff8:	beq	1a0b8 <flatcc_json_printer_bool_vector_field@@Base+0x408>
   19ffc:	add	r1, r0, #1
   1a000:	str	r1, [r4, #20]
   1a004:	mov	r1, #10
   1a008:	strb	r1, [r0]
   1a00c:	ldr	r0, [r4, #32]
   1a010:	sub	r2, r0, #1
   1a014:	str	r2, [r4, #32]
   1a018:	ldrb	r3, [r4, #25]
   1a01c:	ldr	r0, [r4, #20]
   1a020:	ldr	r1, [r4, #16]
   1a024:	mla	r7, r2, r3, r0
   1a028:	mul	r5, r2, r3
   1a02c:	cmp	r7, r1
   1a030:	bls	1a0a0 <flatcc_json_printer_bool_vector_field@@Base+0x3f0>
   1a034:	cmp	r0, r1
   1a038:	bcc	1a054 <flatcc_json_printer_bool_vector_field@@Base+0x3a4>
   1a03c:	ldr	r2, [r4, #44]	; 0x2c
   1a040:	mov	r0, r4
   1a044:	mov	r1, #0
   1a048:	blx	r2
   1a04c:	ldr	r1, [r4, #16]
   1a050:	ldr	r0, [r4, #20]
   1a054:	sub	r6, r1, r0
   1a058:	cmp	r6, r5
   1a05c:	bcs	1a0a0 <flatcc_json_printer_bool_vector_field@@Base+0x3f0>
   1a060:	mov	r1, #32
   1a064:	mov	r2, r6
   1a068:	bl	12948 <memset@plt>
   1a06c:	ldr	r0, [r4, #20]
   1a070:	ldr	r2, [r4, #44]	; 0x2c
   1a074:	mov	r1, #0
   1a078:	add	r0, r0, r6
   1a07c:	str	r0, [r4, #20]
   1a080:	mov	r0, r4
   1a084:	blx	r2
   1a088:	ldr	r1, [r4, #16]
   1a08c:	ldr	r0, [r4, #20]
   1a090:	sub	r5, r5, r6
   1a094:	sub	r6, r1, r0
   1a098:	cmp	r5, r6
   1a09c:	bhi	1a060 <flatcc_json_printer_bool_vector_field@@Base+0x3b0>
   1a0a0:	mov	r1, #32
   1a0a4:	mov	r2, r5
   1a0a8:	bl	12948 <memset@plt>
   1a0ac:	ldr	r0, [r4, #20]
   1a0b0:	add	r0, r0, r5
   1a0b4:	str	r0, [r4, #20]
   1a0b8:	add	r1, r0, #1
   1a0bc:	str	r1, [r4, #20]
   1a0c0:	mov	r1, #93	; 0x5d
   1a0c4:	strb	r1, [r0]
   1a0c8:	sub	sp, fp, #28
   1a0cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a0d0 <flatcc_json_printer_float_vector_field@@Base>:
   1a0d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a0d4:	add	fp, sp, #28
   1a0d8:	sub	sp, sp, #4
   1a0dc:	mov	r4, r0
   1a0e0:	mov	r0, #4
   1a0e4:	add	r0, r0, r2, lsl #1
   1a0e8:	ldr	r2, [r1, #8]
   1a0ec:	cmp	r0, r2
   1a0f0:	bge	1a480 <flatcc_json_printer_float_vector_field@@Base+0x3b0>
   1a0f4:	ldr	r2, [r1, #4]
   1a0f8:	add	r0, r2, r0
   1a0fc:	ldrh	r0, [r0]
   1a100:	cmp	r0, #0
   1a104:	ldrne	r2, [r1]
   1a108:	addsne	r8, r2, r0
   1a10c:	beq	1a480 <flatcc_json_printer_float_vector_field@@Base+0x3b0>
   1a110:	ldr	r0, [r1, #16]
   1a114:	ldr	r2, [fp, #8]
   1a118:	add	r7, r0, #1
   1a11c:	cmp	r0, #0
   1a120:	str	r7, [r1, #16]
   1a124:	ldrne	r0, [r4, #20]
   1a128:	addne	r1, r0, #1
   1a12c:	strne	r1, [r4, #20]
   1a130:	movne	r1, #44	; 0x2c
   1a134:	strbne	r1, [r0]
   1a138:	mov	r1, r3
   1a13c:	ldr	r0, [r8]
   1a140:	ldr	r7, [r8, r0]!
   1a144:	mov	r0, r4
   1a148:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1a14c:	ldr	r1, [r4, #32]
   1a150:	ldr	r0, [r4, #20]
   1a154:	cmp	r7, #0
   1a158:	add	r1, r1, #1
   1a15c:	str	r1, [r4, #32]
   1a160:	add	r1, r0, #1
   1a164:	str	r1, [r4, #20]
   1a168:	mov	r1, #91	; 0x5b
   1a16c:	strb	r1, [r0]
   1a170:	beq	1a3a4 <flatcc_json_printer_float_vector_field@@Base+0x2d4>
   1a174:	ldrb	r1, [r4, #25]
   1a178:	ldr	r0, [r4, #20]
   1a17c:	cmp	r1, #0
   1a180:	beq	1a23c <flatcc_json_printer_float_vector_field@@Base+0x16c>
   1a184:	add	r1, r0, #1
   1a188:	str	r1, [r4, #20]
   1a18c:	mov	r1, #10
   1a190:	strb	r1, [r0]
   1a194:	ldr	r0, [r4, #20]
   1a198:	ldrb	r2, [r4, #25]
   1a19c:	ldr	r3, [r4, #32]
   1a1a0:	ldr	r1, [r4, #16]
   1a1a4:	mla	r6, r3, r2, r0
   1a1a8:	mul	r5, r3, r2
   1a1ac:	cmp	r6, r1
   1a1b0:	bls	1a220 <flatcc_json_printer_float_vector_field@@Base+0x150>
   1a1b4:	cmp	r0, r1
   1a1b8:	bcc	1a1d4 <flatcc_json_printer_float_vector_field@@Base+0x104>
   1a1bc:	ldr	r2, [r4, #44]	; 0x2c
   1a1c0:	mov	r0, r4
   1a1c4:	mov	r1, #0
   1a1c8:	blx	r2
   1a1cc:	ldr	r1, [r4, #16]
   1a1d0:	ldr	r0, [r4, #20]
   1a1d4:	sub	r6, r1, r0
   1a1d8:	cmp	r6, r5
   1a1dc:	bcs	1a220 <flatcc_json_printer_float_vector_field@@Base+0x150>
   1a1e0:	mov	r1, #32
   1a1e4:	mov	r2, r6
   1a1e8:	bl	12948 <memset@plt>
   1a1ec:	ldr	r0, [r4, #20]
   1a1f0:	ldr	r2, [r4, #44]	; 0x2c
   1a1f4:	mov	r1, #0
   1a1f8:	add	r0, r0, r6
   1a1fc:	str	r0, [r4, #20]
   1a200:	mov	r0, r4
   1a204:	blx	r2
   1a208:	ldr	r1, [r4, #16]
   1a20c:	ldr	r0, [r4, #20]
   1a210:	sub	r5, r5, r6
   1a214:	sub	r6, r1, r0
   1a218:	cmp	r5, r6
   1a21c:	bhi	1a1e0 <flatcc_json_printer_float_vector_field@@Base+0x110>
   1a220:	mov	r1, #32
   1a224:	mov	r2, r5
   1a228:	bl	12948 <memset@plt>
   1a22c:	ldr	r0, [r4, #20]
   1a230:	add	r0, r0, r5
   1a234:	str	r0, [r4, #20]
   1a238:	b	1a25c <flatcc_json_printer_float_vector_field@@Base+0x18c>
   1a23c:	ldr	r1, [r4, #16]
   1a240:	cmp	r0, r1
   1a244:	bcc	1a25c <flatcc_json_printer_float_vector_field@@Base+0x18c>
   1a248:	ldr	r2, [r4, #44]	; 0x2c
   1a24c:	mov	r0, r4
   1a250:	mov	r1, #0
   1a254:	blx	r2
   1a258:	ldr	r0, [r4, #20]
   1a25c:	vldr	s0, [r8, #4]
   1a260:	vcvt.f64.f32	d0, s0
   1a264:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   1a268:	ldr	r1, [r4, #20]
   1a26c:	subs	r9, r7, #1
   1a270:	add	r0, r1, r0
   1a274:	str	r0, [r4, #20]
   1a278:	beq	1a3a4 <flatcc_json_printer_float_vector_field@@Base+0x2d4>
   1a27c:	ldr	r0, [r4, #20]
   1a280:	add	r7, r8, #8
   1a284:	mov	r8, #44	; 0x2c
   1a288:	mov	sl, #10
   1a28c:	add	r1, r0, #1
   1a290:	sub	r9, r9, #1
   1a294:	str	r1, [r4, #20]
   1a298:	strb	r8, [r0]
   1a29c:	ldrb	r1, [r4, #25]
   1a2a0:	ldr	r0, [r4, #20]
   1a2a4:	cmp	r1, #0
   1a2a8:	beq	1a360 <flatcc_json_printer_float_vector_field@@Base+0x290>
   1a2ac:	add	r1, r0, #1
   1a2b0:	str	r1, [r4, #20]
   1a2b4:	strb	sl, [r0]
   1a2b8:	ldr	r0, [r4, #20]
   1a2bc:	ldrb	r2, [r4, #25]
   1a2c0:	ldr	r3, [r4, #32]
   1a2c4:	ldr	r1, [r4, #16]
   1a2c8:	mla	r6, r3, r2, r0
   1a2cc:	mul	r5, r3, r2
   1a2d0:	cmp	r6, r1
   1a2d4:	bls	1a344 <flatcc_json_printer_float_vector_field@@Base+0x274>
   1a2d8:	cmp	r0, r1
   1a2dc:	bcc	1a2f8 <flatcc_json_printer_float_vector_field@@Base+0x228>
   1a2e0:	ldr	r2, [r4, #44]	; 0x2c
   1a2e4:	mov	r0, r4
   1a2e8:	mov	r1, #0
   1a2ec:	blx	r2
   1a2f0:	ldr	r1, [r4, #16]
   1a2f4:	ldr	r0, [r4, #20]
   1a2f8:	sub	r6, r1, r0
   1a2fc:	cmp	r6, r5
   1a300:	bcs	1a344 <flatcc_json_printer_float_vector_field@@Base+0x274>
   1a304:	mov	r1, #32
   1a308:	mov	r2, r6
   1a30c:	bl	12948 <memset@plt>
   1a310:	ldr	r0, [r4, #20]
   1a314:	ldr	r2, [r4, #44]	; 0x2c
   1a318:	mov	r1, #0
   1a31c:	add	r0, r0, r6
   1a320:	str	r0, [r4, #20]
   1a324:	mov	r0, r4
   1a328:	blx	r2
   1a32c:	ldr	r1, [r4, #16]
   1a330:	ldr	r0, [r4, #20]
   1a334:	sub	r5, r5, r6
   1a338:	sub	r6, r1, r0
   1a33c:	cmp	r5, r6
   1a340:	bhi	1a304 <flatcc_json_printer_float_vector_field@@Base+0x234>
   1a344:	mov	r1, #32
   1a348:	mov	r2, r5
   1a34c:	bl	12948 <memset@plt>
   1a350:	ldr	r0, [r4, #20]
   1a354:	add	r0, r0, r5
   1a358:	str	r0, [r4, #20]
   1a35c:	b	1a380 <flatcc_json_printer_float_vector_field@@Base+0x2b0>
   1a360:	ldr	r1, [r4, #16]
   1a364:	cmp	r0, r1
   1a368:	bcc	1a380 <flatcc_json_printer_float_vector_field@@Base+0x2b0>
   1a36c:	ldr	r2, [r4, #44]	; 0x2c
   1a370:	mov	r0, r4
   1a374:	mov	r1, #0
   1a378:	blx	r2
   1a37c:	ldr	r0, [r4, #20]
   1a380:	vldr	s0, [r7]
   1a384:	vcvt.f64.f32	d0, s0
   1a388:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   1a38c:	ldr	r1, [r4, #20]
   1a390:	add	r7, r7, #4
   1a394:	cmp	r9, #0
   1a398:	add	r0, r1, r0
   1a39c:	str	r0, [r4, #20]
   1a3a0:	bne	1a28c <flatcc_json_printer_float_vector_field@@Base+0x1bc>
   1a3a4:	ldrb	r1, [r4, #25]
   1a3a8:	ldr	r0, [r4, #20]
   1a3ac:	cmp	r1, #0
   1a3b0:	beq	1a470 <flatcc_json_printer_float_vector_field@@Base+0x3a0>
   1a3b4:	add	r1, r0, #1
   1a3b8:	str	r1, [r4, #20]
   1a3bc:	mov	r1, #10
   1a3c0:	strb	r1, [r0]
   1a3c4:	ldr	r0, [r4, #32]
   1a3c8:	sub	r2, r0, #1
   1a3cc:	str	r2, [r4, #32]
   1a3d0:	ldrb	r3, [r4, #25]
   1a3d4:	ldr	r0, [r4, #20]
   1a3d8:	ldr	r1, [r4, #16]
   1a3dc:	mla	r7, r2, r3, r0
   1a3e0:	mul	r5, r2, r3
   1a3e4:	cmp	r7, r1
   1a3e8:	bls	1a458 <flatcc_json_printer_float_vector_field@@Base+0x388>
   1a3ec:	cmp	r0, r1
   1a3f0:	bcc	1a40c <flatcc_json_printer_float_vector_field@@Base+0x33c>
   1a3f4:	ldr	r2, [r4, #44]	; 0x2c
   1a3f8:	mov	r0, r4
   1a3fc:	mov	r1, #0
   1a400:	blx	r2
   1a404:	ldr	r1, [r4, #16]
   1a408:	ldr	r0, [r4, #20]
   1a40c:	sub	r6, r1, r0
   1a410:	cmp	r6, r5
   1a414:	bcs	1a458 <flatcc_json_printer_float_vector_field@@Base+0x388>
   1a418:	mov	r1, #32
   1a41c:	mov	r2, r6
   1a420:	bl	12948 <memset@plt>
   1a424:	ldr	r0, [r4, #20]
   1a428:	ldr	r2, [r4, #44]	; 0x2c
   1a42c:	mov	r1, #0
   1a430:	add	r0, r0, r6
   1a434:	str	r0, [r4, #20]
   1a438:	mov	r0, r4
   1a43c:	blx	r2
   1a440:	ldr	r1, [r4, #16]
   1a444:	ldr	r0, [r4, #20]
   1a448:	sub	r5, r5, r6
   1a44c:	sub	r6, r1, r0
   1a450:	cmp	r5, r6
   1a454:	bhi	1a418 <flatcc_json_printer_float_vector_field@@Base+0x348>
   1a458:	mov	r1, #32
   1a45c:	mov	r2, r5
   1a460:	bl	12948 <memset@plt>
   1a464:	ldr	r0, [r4, #20]
   1a468:	add	r0, r0, r5
   1a46c:	str	r0, [r4, #20]
   1a470:	add	r1, r0, #1
   1a474:	str	r1, [r4, #20]
   1a478:	mov	r1, #93	; 0x5d
   1a47c:	strb	r1, [r0]
   1a480:	sub	sp, fp, #28
   1a484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a488 <flatcc_json_printer_double_vector_field@@Base>:
   1a488:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a48c:	add	fp, sp, #28
   1a490:	sub	sp, sp, #4
   1a494:	mov	r4, r0
   1a498:	mov	r0, #4
   1a49c:	add	r0, r0, r2, lsl #1
   1a4a0:	ldr	r2, [r1, #8]
   1a4a4:	cmp	r0, r2
   1a4a8:	bge	1a830 <flatcc_json_printer_double_vector_field@@Base+0x3a8>
   1a4ac:	ldr	r2, [r1, #4]
   1a4b0:	add	r0, r2, r0
   1a4b4:	ldrh	r0, [r0]
   1a4b8:	cmp	r0, #0
   1a4bc:	ldrne	r2, [r1]
   1a4c0:	addsne	r8, r2, r0
   1a4c4:	beq	1a830 <flatcc_json_printer_double_vector_field@@Base+0x3a8>
   1a4c8:	ldr	r0, [r1, #16]
   1a4cc:	ldr	r2, [fp, #8]
   1a4d0:	add	r7, r0, #1
   1a4d4:	cmp	r0, #0
   1a4d8:	str	r7, [r1, #16]
   1a4dc:	ldrne	r0, [r4, #20]
   1a4e0:	addne	r1, r0, #1
   1a4e4:	strne	r1, [r4, #20]
   1a4e8:	movne	r1, #44	; 0x2c
   1a4ec:	strbne	r1, [r0]
   1a4f0:	mov	r1, r3
   1a4f4:	ldr	r0, [r8]
   1a4f8:	ldr	r7, [r8, r0]!
   1a4fc:	mov	r0, r4
   1a500:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1a504:	ldr	r1, [r4, #32]
   1a508:	ldr	r0, [r4, #20]
   1a50c:	cmp	r7, #0
   1a510:	add	r1, r1, #1
   1a514:	str	r1, [r4, #32]
   1a518:	add	r1, r0, #1
   1a51c:	str	r1, [r4, #20]
   1a520:	mov	r1, #91	; 0x5b
   1a524:	strb	r1, [r0]
   1a528:	beq	1a754 <flatcc_json_printer_double_vector_field@@Base+0x2cc>
   1a52c:	ldrb	r1, [r4, #25]
   1a530:	ldr	r0, [r4, #20]
   1a534:	cmp	r1, #0
   1a538:	beq	1a5f4 <flatcc_json_printer_double_vector_field@@Base+0x16c>
   1a53c:	add	r1, r0, #1
   1a540:	str	r1, [r4, #20]
   1a544:	mov	r1, #10
   1a548:	strb	r1, [r0]
   1a54c:	ldr	r0, [r4, #20]
   1a550:	ldrb	r2, [r4, #25]
   1a554:	ldr	r3, [r4, #32]
   1a558:	ldr	r1, [r4, #16]
   1a55c:	mla	r6, r3, r2, r0
   1a560:	mul	r5, r3, r2
   1a564:	cmp	r6, r1
   1a568:	bls	1a5d8 <flatcc_json_printer_double_vector_field@@Base+0x150>
   1a56c:	cmp	r0, r1
   1a570:	bcc	1a58c <flatcc_json_printer_double_vector_field@@Base+0x104>
   1a574:	ldr	r2, [r4, #44]	; 0x2c
   1a578:	mov	r0, r4
   1a57c:	mov	r1, #0
   1a580:	blx	r2
   1a584:	ldr	r1, [r4, #16]
   1a588:	ldr	r0, [r4, #20]
   1a58c:	sub	r6, r1, r0
   1a590:	cmp	r6, r5
   1a594:	bcs	1a5d8 <flatcc_json_printer_double_vector_field@@Base+0x150>
   1a598:	mov	r1, #32
   1a59c:	mov	r2, r6
   1a5a0:	bl	12948 <memset@plt>
   1a5a4:	ldr	r0, [r4, #20]
   1a5a8:	ldr	r2, [r4, #44]	; 0x2c
   1a5ac:	mov	r1, #0
   1a5b0:	add	r0, r0, r6
   1a5b4:	str	r0, [r4, #20]
   1a5b8:	mov	r0, r4
   1a5bc:	blx	r2
   1a5c0:	ldr	r1, [r4, #16]
   1a5c4:	ldr	r0, [r4, #20]
   1a5c8:	sub	r5, r5, r6
   1a5cc:	sub	r6, r1, r0
   1a5d0:	cmp	r5, r6
   1a5d4:	bhi	1a598 <flatcc_json_printer_double_vector_field@@Base+0x110>
   1a5d8:	mov	r1, #32
   1a5dc:	mov	r2, r5
   1a5e0:	bl	12948 <memset@plt>
   1a5e4:	ldr	r0, [r4, #20]
   1a5e8:	add	r0, r0, r5
   1a5ec:	str	r0, [r4, #20]
   1a5f0:	b	1a614 <flatcc_json_printer_double_vector_field@@Base+0x18c>
   1a5f4:	ldr	r1, [r4, #16]
   1a5f8:	cmp	r0, r1
   1a5fc:	bcc	1a614 <flatcc_json_printer_double_vector_field@@Base+0x18c>
   1a600:	ldr	r2, [r4, #44]	; 0x2c
   1a604:	mov	r0, r4
   1a608:	mov	r1, #0
   1a60c:	blx	r2
   1a610:	ldr	r0, [r4, #20]
   1a614:	vldr	d0, [r8, #4]
   1a618:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   1a61c:	ldr	r1, [r4, #20]
   1a620:	subs	r9, r7, #1
   1a624:	add	r0, r1, r0
   1a628:	str	r0, [r4, #20]
   1a62c:	beq	1a754 <flatcc_json_printer_double_vector_field@@Base+0x2cc>
   1a630:	ldr	r0, [r4, #20]
   1a634:	add	r7, r8, #12
   1a638:	mov	r8, #44	; 0x2c
   1a63c:	mov	sl, #10
   1a640:	add	r1, r0, #1
   1a644:	sub	r9, r9, #1
   1a648:	str	r1, [r4, #20]
   1a64c:	strb	r8, [r0]
   1a650:	ldrb	r1, [r4, #25]
   1a654:	ldr	r0, [r4, #20]
   1a658:	cmp	r1, #0
   1a65c:	beq	1a714 <flatcc_json_printer_double_vector_field@@Base+0x28c>
   1a660:	add	r1, r0, #1
   1a664:	str	r1, [r4, #20]
   1a668:	strb	sl, [r0]
   1a66c:	ldr	r0, [r4, #20]
   1a670:	ldrb	r2, [r4, #25]
   1a674:	ldr	r3, [r4, #32]
   1a678:	ldr	r1, [r4, #16]
   1a67c:	mla	r6, r3, r2, r0
   1a680:	mul	r5, r3, r2
   1a684:	cmp	r6, r1
   1a688:	bls	1a6f8 <flatcc_json_printer_double_vector_field@@Base+0x270>
   1a68c:	cmp	r0, r1
   1a690:	bcc	1a6ac <flatcc_json_printer_double_vector_field@@Base+0x224>
   1a694:	ldr	r2, [r4, #44]	; 0x2c
   1a698:	mov	r0, r4
   1a69c:	mov	r1, #0
   1a6a0:	blx	r2
   1a6a4:	ldr	r1, [r4, #16]
   1a6a8:	ldr	r0, [r4, #20]
   1a6ac:	sub	r6, r1, r0
   1a6b0:	cmp	r6, r5
   1a6b4:	bcs	1a6f8 <flatcc_json_printer_double_vector_field@@Base+0x270>
   1a6b8:	mov	r1, #32
   1a6bc:	mov	r2, r6
   1a6c0:	bl	12948 <memset@plt>
   1a6c4:	ldr	r0, [r4, #20]
   1a6c8:	ldr	r2, [r4, #44]	; 0x2c
   1a6cc:	mov	r1, #0
   1a6d0:	add	r0, r0, r6
   1a6d4:	str	r0, [r4, #20]
   1a6d8:	mov	r0, r4
   1a6dc:	blx	r2
   1a6e0:	ldr	r1, [r4, #16]
   1a6e4:	ldr	r0, [r4, #20]
   1a6e8:	sub	r5, r5, r6
   1a6ec:	sub	r6, r1, r0
   1a6f0:	cmp	r5, r6
   1a6f4:	bhi	1a6b8 <flatcc_json_printer_double_vector_field@@Base+0x230>
   1a6f8:	mov	r1, #32
   1a6fc:	mov	r2, r5
   1a700:	bl	12948 <memset@plt>
   1a704:	ldr	r0, [r4, #20]
   1a708:	add	r0, r0, r5
   1a70c:	str	r0, [r4, #20]
   1a710:	b	1a734 <flatcc_json_printer_double_vector_field@@Base+0x2ac>
   1a714:	ldr	r1, [r4, #16]
   1a718:	cmp	r0, r1
   1a71c:	bcc	1a734 <flatcc_json_printer_double_vector_field@@Base+0x2ac>
   1a720:	ldr	r2, [r4, #44]	; 0x2c
   1a724:	mov	r0, r4
   1a728:	mov	r1, #0
   1a72c:	blx	r2
   1a730:	ldr	r0, [r4, #20]
   1a734:	vldr	d0, [r7]
   1a738:	bl	13f10 <flatcc_json_printer_fmt_float@@Base+0x8>
   1a73c:	ldr	r1, [r4, #20]
   1a740:	add	r7, r7, #8
   1a744:	cmp	r9, #0
   1a748:	add	r0, r1, r0
   1a74c:	str	r0, [r4, #20]
   1a750:	bne	1a640 <flatcc_json_printer_double_vector_field@@Base+0x1b8>
   1a754:	ldrb	r1, [r4, #25]
   1a758:	ldr	r0, [r4, #20]
   1a75c:	cmp	r1, #0
   1a760:	beq	1a820 <flatcc_json_printer_double_vector_field@@Base+0x398>
   1a764:	add	r1, r0, #1
   1a768:	str	r1, [r4, #20]
   1a76c:	mov	r1, #10
   1a770:	strb	r1, [r0]
   1a774:	ldr	r0, [r4, #32]
   1a778:	sub	r2, r0, #1
   1a77c:	str	r2, [r4, #32]
   1a780:	ldrb	r3, [r4, #25]
   1a784:	ldr	r0, [r4, #20]
   1a788:	ldr	r1, [r4, #16]
   1a78c:	mla	r7, r2, r3, r0
   1a790:	mul	r5, r2, r3
   1a794:	cmp	r7, r1
   1a798:	bls	1a808 <flatcc_json_printer_double_vector_field@@Base+0x380>
   1a79c:	cmp	r0, r1
   1a7a0:	bcc	1a7bc <flatcc_json_printer_double_vector_field@@Base+0x334>
   1a7a4:	ldr	r2, [r4, #44]	; 0x2c
   1a7a8:	mov	r0, r4
   1a7ac:	mov	r1, #0
   1a7b0:	blx	r2
   1a7b4:	ldr	r1, [r4, #16]
   1a7b8:	ldr	r0, [r4, #20]
   1a7bc:	sub	r6, r1, r0
   1a7c0:	cmp	r6, r5
   1a7c4:	bcs	1a808 <flatcc_json_printer_double_vector_field@@Base+0x380>
   1a7c8:	mov	r1, #32
   1a7cc:	mov	r2, r6
   1a7d0:	bl	12948 <memset@plt>
   1a7d4:	ldr	r0, [r4, #20]
   1a7d8:	ldr	r2, [r4, #44]	; 0x2c
   1a7dc:	mov	r1, #0
   1a7e0:	add	r0, r0, r6
   1a7e4:	str	r0, [r4, #20]
   1a7e8:	mov	r0, r4
   1a7ec:	blx	r2
   1a7f0:	ldr	r1, [r4, #16]
   1a7f4:	ldr	r0, [r4, #20]
   1a7f8:	sub	r5, r5, r6
   1a7fc:	sub	r6, r1, r0
   1a800:	cmp	r5, r6
   1a804:	bhi	1a7c8 <flatcc_json_printer_double_vector_field@@Base+0x340>
   1a808:	mov	r1, #32
   1a80c:	mov	r2, r5
   1a810:	bl	12948 <memset@plt>
   1a814:	ldr	r0, [r4, #20]
   1a818:	add	r0, r0, r5
   1a81c:	str	r0, [r4, #20]
   1a820:	add	r1, r0, #1
   1a824:	str	r1, [r4, #20]
   1a828:	mov	r1, #93	; 0x5d
   1a82c:	strb	r1, [r0]
   1a830:	sub	sp, fp, #28
   1a834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a838 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1a838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a83c:	add	fp, sp, #28
   1a840:	sub	sp, sp, #4
   1a844:	mov	r4, r0
   1a848:	ldrb	r0, [r0, #27]
   1a84c:	cmp	r0, #0
   1a850:	beq	1a864 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   1a854:	mov	r0, r4
   1a858:	sub	sp, fp, #28
   1a85c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a860:	b	17aa0 <flatcc_json_printer_utype_vector_field@@Base>
   1a864:	mov	r0, #4
   1a868:	add	r0, r0, r2, lsl #1
   1a86c:	ldr	r2, [r1, #8]
   1a870:	cmp	r0, r2
   1a874:	bge	1abe4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3ac>
   1a878:	ldr	r2, [r1, #4]
   1a87c:	add	r0, r2, r0
   1a880:	ldrh	r0, [r0]
   1a884:	cmp	r0, #0
   1a888:	ldrne	r2, [r1]
   1a88c:	addsne	r8, r2, r0
   1a890:	beq	1abe4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3ac>
   1a894:	ldr	r0, [r1, #16]
   1a898:	ldr	sl, [fp, #12]
   1a89c:	ldr	r2, [fp, #8]
   1a8a0:	add	r7, r0, #1
   1a8a4:	cmp	r0, #0
   1a8a8:	str	r7, [r1, #16]
   1a8ac:	ldrne	r0, [r4, #20]
   1a8b0:	addne	r1, r0, #1
   1a8b4:	strne	r1, [r4, #20]
   1a8b8:	movne	r1, #44	; 0x2c
   1a8bc:	strbne	r1, [r0]
   1a8c0:	mov	r1, r3
   1a8c4:	ldr	r0, [r8]
   1a8c8:	ldr	r9, [r8, r0]!
   1a8cc:	mov	r0, r4
   1a8d0:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1a8d4:	ldr	r1, [r4, #32]
   1a8d8:	ldr	r0, [r4, #20]
   1a8dc:	cmp	r9, #0
   1a8e0:	add	r1, r1, #1
   1a8e4:	str	r1, [r4, #32]
   1a8e8:	add	r1, r0, #1
   1a8ec:	str	r1, [r4, #20]
   1a8f0:	mov	r1, #91	; 0x5b
   1a8f4:	strb	r1, [r0]
   1a8f8:	beq	1ab08 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d0>
   1a8fc:	ldrb	r1, [r4, #25]
   1a900:	ldr	r0, [r4, #20]
   1a904:	cmp	r1, #0
   1a908:	beq	1a9c4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x18c>
   1a90c:	add	r1, r0, #1
   1a910:	str	r1, [r4, #20]
   1a914:	mov	r1, #10
   1a918:	strb	r1, [r0]
   1a91c:	ldr	r0, [r4, #20]
   1a920:	ldrb	r2, [r4, #25]
   1a924:	ldr	r3, [r4, #32]
   1a928:	ldr	r1, [r4, #16]
   1a92c:	mla	r7, r3, r2, r0
   1a930:	mul	r5, r3, r2
   1a934:	cmp	r7, r1
   1a938:	bls	1a9a8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x170>
   1a93c:	cmp	r0, r1
   1a940:	bcc	1a95c <flatcc_json_printer_utype_enum_vector_field@@Base+0x124>
   1a944:	ldr	r2, [r4, #44]	; 0x2c
   1a948:	mov	r0, r4
   1a94c:	mov	r1, #0
   1a950:	blx	r2
   1a954:	ldr	r1, [r4, #16]
   1a958:	ldr	r0, [r4, #20]
   1a95c:	sub	r6, r1, r0
   1a960:	cmp	r6, r5
   1a964:	bcs	1a9a8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x170>
   1a968:	mov	r1, #32
   1a96c:	mov	r2, r6
   1a970:	bl	12948 <memset@plt>
   1a974:	ldr	r0, [r4, #20]
   1a978:	ldr	r2, [r4, #44]	; 0x2c
   1a97c:	mov	r1, #0
   1a980:	add	r0, r0, r6
   1a984:	str	r0, [r4, #20]
   1a988:	mov	r0, r4
   1a98c:	blx	r2
   1a990:	ldr	r1, [r4, #16]
   1a994:	ldr	r0, [r4, #20]
   1a998:	sub	r5, r5, r6
   1a99c:	sub	r6, r1, r0
   1a9a0:	cmp	r5, r6
   1a9a4:	bhi	1a968 <flatcc_json_printer_utype_enum_vector_field@@Base+0x130>
   1a9a8:	mov	r1, #32
   1a9ac:	mov	r2, r5
   1a9b0:	bl	12948 <memset@plt>
   1a9b4:	ldr	r0, [r4, #20]
   1a9b8:	add	r0, r0, r5
   1a9bc:	str	r0, [r4, #20]
   1a9c0:	b	1a9e0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   1a9c4:	ldr	r1, [r4, #16]
   1a9c8:	cmp	r0, r1
   1a9cc:	bcc	1a9e0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   1a9d0:	ldr	r2, [r4, #44]	; 0x2c
   1a9d4:	mov	r0, r4
   1a9d8:	mov	r1, #0
   1a9dc:	blx	r2
   1a9e0:	ldrb	r1, [r8, #4]
   1a9e4:	mov	r0, r4
   1a9e8:	blx	sl
   1a9ec:	subs	r9, r9, #1
   1a9f0:	beq	1ab08 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d0>
   1a9f4:	add	r7, r8, #5
   1a9f8:	mov	r8, #44	; 0x2c
   1a9fc:	ldr	r0, [r4, #20]
   1aa00:	sub	r9, r9, #1
   1aa04:	add	r1, r0, #1
   1aa08:	str	r1, [r4, #20]
   1aa0c:	strb	r8, [r0]
   1aa10:	ldrb	r1, [r4, #25]
   1aa14:	ldr	r0, [r4, #20]
   1aa18:	cmp	r1, #0
   1aa1c:	beq	1aad8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a0>
   1aa20:	add	r1, r0, #1
   1aa24:	str	r1, [r4, #20]
   1aa28:	mov	r1, #10
   1aa2c:	strb	r1, [r0]
   1aa30:	ldr	r0, [r4, #20]
   1aa34:	ldrb	r2, [r4, #25]
   1aa38:	ldr	r3, [r4, #32]
   1aa3c:	ldr	r1, [r4, #16]
   1aa40:	mla	r6, r3, r2, r0
   1aa44:	mul	r5, r3, r2
   1aa48:	cmp	r6, r1
   1aa4c:	bls	1aabc <flatcc_json_printer_utype_enum_vector_field@@Base+0x284>
   1aa50:	cmp	r0, r1
   1aa54:	bcc	1aa70 <flatcc_json_printer_utype_enum_vector_field@@Base+0x238>
   1aa58:	ldr	r2, [r4, #44]	; 0x2c
   1aa5c:	mov	r0, r4
   1aa60:	mov	r1, #0
   1aa64:	blx	r2
   1aa68:	ldr	r1, [r4, #16]
   1aa6c:	ldr	r0, [r4, #20]
   1aa70:	sub	r6, r1, r0
   1aa74:	cmp	r6, r5
   1aa78:	bcs	1aabc <flatcc_json_printer_utype_enum_vector_field@@Base+0x284>
   1aa7c:	mov	r1, #32
   1aa80:	mov	r2, r6
   1aa84:	bl	12948 <memset@plt>
   1aa88:	ldr	r0, [r4, #20]
   1aa8c:	ldr	r2, [r4, #44]	; 0x2c
   1aa90:	mov	r1, #0
   1aa94:	add	r0, r0, r6
   1aa98:	str	r0, [r4, #20]
   1aa9c:	mov	r0, r4
   1aaa0:	blx	r2
   1aaa4:	ldr	r1, [r4, #16]
   1aaa8:	ldr	r0, [r4, #20]
   1aaac:	sub	r5, r5, r6
   1aab0:	sub	r6, r1, r0
   1aab4:	cmp	r5, r6
   1aab8:	bhi	1aa7c <flatcc_json_printer_utype_enum_vector_field@@Base+0x244>
   1aabc:	mov	r1, #32
   1aac0:	mov	r2, r5
   1aac4:	bl	12948 <memset@plt>
   1aac8:	ldr	r0, [r4, #20]
   1aacc:	add	r0, r0, r5
   1aad0:	str	r0, [r4, #20]
   1aad4:	b	1aaf4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2bc>
   1aad8:	ldr	r1, [r4, #16]
   1aadc:	cmp	r0, r1
   1aae0:	bcc	1aaf4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2bc>
   1aae4:	ldr	r2, [r4, #44]	; 0x2c
   1aae8:	mov	r0, r4
   1aaec:	mov	r1, #0
   1aaf0:	blx	r2
   1aaf4:	ldrb	r1, [r7], #1
   1aaf8:	mov	r0, r4
   1aafc:	blx	sl
   1ab00:	cmp	r9, #0
   1ab04:	bne	1a9fc <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c4>
   1ab08:	ldrb	r1, [r4, #25]
   1ab0c:	ldr	r0, [r4, #20]
   1ab10:	cmp	r1, #0
   1ab14:	beq	1abd4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x39c>
   1ab18:	add	r1, r0, #1
   1ab1c:	str	r1, [r4, #20]
   1ab20:	mov	r1, #10
   1ab24:	strb	r1, [r0]
   1ab28:	ldr	r0, [r4, #32]
   1ab2c:	sub	r2, r0, #1
   1ab30:	str	r2, [r4, #32]
   1ab34:	ldrb	r3, [r4, #25]
   1ab38:	ldr	r0, [r4, #20]
   1ab3c:	ldr	r1, [r4, #16]
   1ab40:	mla	r7, r2, r3, r0
   1ab44:	mul	r5, r2, r3
   1ab48:	cmp	r7, r1
   1ab4c:	bls	1abbc <flatcc_json_printer_utype_enum_vector_field@@Base+0x384>
   1ab50:	cmp	r0, r1
   1ab54:	bcc	1ab70 <flatcc_json_printer_utype_enum_vector_field@@Base+0x338>
   1ab58:	ldr	r2, [r4, #44]	; 0x2c
   1ab5c:	mov	r0, r4
   1ab60:	mov	r1, #0
   1ab64:	blx	r2
   1ab68:	ldr	r1, [r4, #16]
   1ab6c:	ldr	r0, [r4, #20]
   1ab70:	sub	r6, r1, r0
   1ab74:	cmp	r6, r5
   1ab78:	bcs	1abbc <flatcc_json_printer_utype_enum_vector_field@@Base+0x384>
   1ab7c:	mov	r1, #32
   1ab80:	mov	r2, r6
   1ab84:	bl	12948 <memset@plt>
   1ab88:	ldr	r0, [r4, #20]
   1ab8c:	ldr	r2, [r4, #44]	; 0x2c
   1ab90:	mov	r1, #0
   1ab94:	add	r0, r0, r6
   1ab98:	str	r0, [r4, #20]
   1ab9c:	mov	r0, r4
   1aba0:	blx	r2
   1aba4:	ldr	r1, [r4, #16]
   1aba8:	ldr	r0, [r4, #20]
   1abac:	sub	r5, r5, r6
   1abb0:	sub	r6, r1, r0
   1abb4:	cmp	r5, r6
   1abb8:	bhi	1ab7c <flatcc_json_printer_utype_enum_vector_field@@Base+0x344>
   1abbc:	mov	r1, #32
   1abc0:	mov	r2, r5
   1abc4:	bl	12948 <memset@plt>
   1abc8:	ldr	r0, [r4, #20]
   1abcc:	add	r0, r0, r5
   1abd0:	str	r0, [r4, #20]
   1abd4:	add	r1, r0, #1
   1abd8:	str	r1, [r4, #20]
   1abdc:	mov	r1, #93	; 0x5d
   1abe0:	strb	r1, [r0]
   1abe4:	sub	sp, fp, #28
   1abe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001abec <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1abec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1abf0:	add	fp, sp, #28
   1abf4:	sub	sp, sp, #4
   1abf8:	mov	r4, r0
   1abfc:	ldrb	r0, [r0, #27]
   1ac00:	cmp	r0, #0
   1ac04:	beq	1ac18 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   1ac08:	mov	r0, r4
   1ac0c:	sub	sp, fp, #28
   1ac10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac14:	b	17e4c <flatcc_json_printer_uint8_vector_field@@Base>
   1ac18:	mov	r0, #4
   1ac1c:	add	r0, r0, r2, lsl #1
   1ac20:	ldr	r2, [r1, #8]
   1ac24:	cmp	r0, r2
   1ac28:	bge	1af98 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3ac>
   1ac2c:	ldr	r2, [r1, #4]
   1ac30:	add	r0, r2, r0
   1ac34:	ldrh	r0, [r0]
   1ac38:	cmp	r0, #0
   1ac3c:	ldrne	r2, [r1]
   1ac40:	addsne	r8, r2, r0
   1ac44:	beq	1af98 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3ac>
   1ac48:	ldr	r0, [r1, #16]
   1ac4c:	ldr	sl, [fp, #12]
   1ac50:	ldr	r2, [fp, #8]
   1ac54:	add	r7, r0, #1
   1ac58:	cmp	r0, #0
   1ac5c:	str	r7, [r1, #16]
   1ac60:	ldrne	r0, [r4, #20]
   1ac64:	addne	r1, r0, #1
   1ac68:	strne	r1, [r4, #20]
   1ac6c:	movne	r1, #44	; 0x2c
   1ac70:	strbne	r1, [r0]
   1ac74:	mov	r1, r3
   1ac78:	ldr	r0, [r8]
   1ac7c:	ldr	r9, [r8, r0]!
   1ac80:	mov	r0, r4
   1ac84:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1ac88:	ldr	r1, [r4, #32]
   1ac8c:	ldr	r0, [r4, #20]
   1ac90:	cmp	r9, #0
   1ac94:	add	r1, r1, #1
   1ac98:	str	r1, [r4, #32]
   1ac9c:	add	r1, r0, #1
   1aca0:	str	r1, [r4, #20]
   1aca4:	mov	r1, #91	; 0x5b
   1aca8:	strb	r1, [r0]
   1acac:	beq	1aebc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d0>
   1acb0:	ldrb	r1, [r4, #25]
   1acb4:	ldr	r0, [r4, #20]
   1acb8:	cmp	r1, #0
   1acbc:	beq	1ad78 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x18c>
   1acc0:	add	r1, r0, #1
   1acc4:	str	r1, [r4, #20]
   1acc8:	mov	r1, #10
   1accc:	strb	r1, [r0]
   1acd0:	ldr	r0, [r4, #20]
   1acd4:	ldrb	r2, [r4, #25]
   1acd8:	ldr	r3, [r4, #32]
   1acdc:	ldr	r1, [r4, #16]
   1ace0:	mla	r7, r3, r2, r0
   1ace4:	mul	r5, r3, r2
   1ace8:	cmp	r7, r1
   1acec:	bls	1ad5c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x170>
   1acf0:	cmp	r0, r1
   1acf4:	bcc	1ad10 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x124>
   1acf8:	ldr	r2, [r4, #44]	; 0x2c
   1acfc:	mov	r0, r4
   1ad00:	mov	r1, #0
   1ad04:	blx	r2
   1ad08:	ldr	r1, [r4, #16]
   1ad0c:	ldr	r0, [r4, #20]
   1ad10:	sub	r6, r1, r0
   1ad14:	cmp	r6, r5
   1ad18:	bcs	1ad5c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x170>
   1ad1c:	mov	r1, #32
   1ad20:	mov	r2, r6
   1ad24:	bl	12948 <memset@plt>
   1ad28:	ldr	r0, [r4, #20]
   1ad2c:	ldr	r2, [r4, #44]	; 0x2c
   1ad30:	mov	r1, #0
   1ad34:	add	r0, r0, r6
   1ad38:	str	r0, [r4, #20]
   1ad3c:	mov	r0, r4
   1ad40:	blx	r2
   1ad44:	ldr	r1, [r4, #16]
   1ad48:	ldr	r0, [r4, #20]
   1ad4c:	sub	r5, r5, r6
   1ad50:	sub	r6, r1, r0
   1ad54:	cmp	r5, r6
   1ad58:	bhi	1ad1c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x130>
   1ad5c:	mov	r1, #32
   1ad60:	mov	r2, r5
   1ad64:	bl	12948 <memset@plt>
   1ad68:	ldr	r0, [r4, #20]
   1ad6c:	add	r0, r0, r5
   1ad70:	str	r0, [r4, #20]
   1ad74:	b	1ad94 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   1ad78:	ldr	r1, [r4, #16]
   1ad7c:	cmp	r0, r1
   1ad80:	bcc	1ad94 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   1ad84:	ldr	r2, [r4, #44]	; 0x2c
   1ad88:	mov	r0, r4
   1ad8c:	mov	r1, #0
   1ad90:	blx	r2
   1ad94:	ldrb	r1, [r8, #4]
   1ad98:	mov	r0, r4
   1ad9c:	blx	sl
   1ada0:	subs	r9, r9, #1
   1ada4:	beq	1aebc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d0>
   1ada8:	add	r7, r8, #5
   1adac:	mov	r8, #44	; 0x2c
   1adb0:	ldr	r0, [r4, #20]
   1adb4:	sub	r9, r9, #1
   1adb8:	add	r1, r0, #1
   1adbc:	str	r1, [r4, #20]
   1adc0:	strb	r8, [r0]
   1adc4:	ldrb	r1, [r4, #25]
   1adc8:	ldr	r0, [r4, #20]
   1adcc:	cmp	r1, #0
   1add0:	beq	1ae8c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a0>
   1add4:	add	r1, r0, #1
   1add8:	str	r1, [r4, #20]
   1addc:	mov	r1, #10
   1ade0:	strb	r1, [r0]
   1ade4:	ldr	r0, [r4, #20]
   1ade8:	ldrb	r2, [r4, #25]
   1adec:	ldr	r3, [r4, #32]
   1adf0:	ldr	r1, [r4, #16]
   1adf4:	mla	r6, r3, r2, r0
   1adf8:	mul	r5, r3, r2
   1adfc:	cmp	r6, r1
   1ae00:	bls	1ae70 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x284>
   1ae04:	cmp	r0, r1
   1ae08:	bcc	1ae24 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x238>
   1ae0c:	ldr	r2, [r4, #44]	; 0x2c
   1ae10:	mov	r0, r4
   1ae14:	mov	r1, #0
   1ae18:	blx	r2
   1ae1c:	ldr	r1, [r4, #16]
   1ae20:	ldr	r0, [r4, #20]
   1ae24:	sub	r6, r1, r0
   1ae28:	cmp	r6, r5
   1ae2c:	bcs	1ae70 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x284>
   1ae30:	mov	r1, #32
   1ae34:	mov	r2, r6
   1ae38:	bl	12948 <memset@plt>
   1ae3c:	ldr	r0, [r4, #20]
   1ae40:	ldr	r2, [r4, #44]	; 0x2c
   1ae44:	mov	r1, #0
   1ae48:	add	r0, r0, r6
   1ae4c:	str	r0, [r4, #20]
   1ae50:	mov	r0, r4
   1ae54:	blx	r2
   1ae58:	ldr	r1, [r4, #16]
   1ae5c:	ldr	r0, [r4, #20]
   1ae60:	sub	r5, r5, r6
   1ae64:	sub	r6, r1, r0
   1ae68:	cmp	r5, r6
   1ae6c:	bhi	1ae30 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x244>
   1ae70:	mov	r1, #32
   1ae74:	mov	r2, r5
   1ae78:	bl	12948 <memset@plt>
   1ae7c:	ldr	r0, [r4, #20]
   1ae80:	add	r0, r0, r5
   1ae84:	str	r0, [r4, #20]
   1ae88:	b	1aea8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2bc>
   1ae8c:	ldr	r1, [r4, #16]
   1ae90:	cmp	r0, r1
   1ae94:	bcc	1aea8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2bc>
   1ae98:	ldr	r2, [r4, #44]	; 0x2c
   1ae9c:	mov	r0, r4
   1aea0:	mov	r1, #0
   1aea4:	blx	r2
   1aea8:	ldrb	r1, [r7], #1
   1aeac:	mov	r0, r4
   1aeb0:	blx	sl
   1aeb4:	cmp	r9, #0
   1aeb8:	bne	1adb0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c4>
   1aebc:	ldrb	r1, [r4, #25]
   1aec0:	ldr	r0, [r4, #20]
   1aec4:	cmp	r1, #0
   1aec8:	beq	1af88 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x39c>
   1aecc:	add	r1, r0, #1
   1aed0:	str	r1, [r4, #20]
   1aed4:	mov	r1, #10
   1aed8:	strb	r1, [r0]
   1aedc:	ldr	r0, [r4, #32]
   1aee0:	sub	r2, r0, #1
   1aee4:	str	r2, [r4, #32]
   1aee8:	ldrb	r3, [r4, #25]
   1aeec:	ldr	r0, [r4, #20]
   1aef0:	ldr	r1, [r4, #16]
   1aef4:	mla	r7, r2, r3, r0
   1aef8:	mul	r5, r2, r3
   1aefc:	cmp	r7, r1
   1af00:	bls	1af70 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x384>
   1af04:	cmp	r0, r1
   1af08:	bcc	1af24 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x338>
   1af0c:	ldr	r2, [r4, #44]	; 0x2c
   1af10:	mov	r0, r4
   1af14:	mov	r1, #0
   1af18:	blx	r2
   1af1c:	ldr	r1, [r4, #16]
   1af20:	ldr	r0, [r4, #20]
   1af24:	sub	r6, r1, r0
   1af28:	cmp	r6, r5
   1af2c:	bcs	1af70 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x384>
   1af30:	mov	r1, #32
   1af34:	mov	r2, r6
   1af38:	bl	12948 <memset@plt>
   1af3c:	ldr	r0, [r4, #20]
   1af40:	ldr	r2, [r4, #44]	; 0x2c
   1af44:	mov	r1, #0
   1af48:	add	r0, r0, r6
   1af4c:	str	r0, [r4, #20]
   1af50:	mov	r0, r4
   1af54:	blx	r2
   1af58:	ldr	r1, [r4, #16]
   1af5c:	ldr	r0, [r4, #20]
   1af60:	sub	r5, r5, r6
   1af64:	sub	r6, r1, r0
   1af68:	cmp	r5, r6
   1af6c:	bhi	1af30 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x344>
   1af70:	mov	r1, #32
   1af74:	mov	r2, r5
   1af78:	bl	12948 <memset@plt>
   1af7c:	ldr	r0, [r4, #20]
   1af80:	add	r0, r0, r5
   1af84:	str	r0, [r4, #20]
   1af88:	add	r1, r0, #1
   1af8c:	str	r1, [r4, #20]
   1af90:	mov	r1, #93	; 0x5d
   1af94:	strb	r1, [r0]
   1af98:	sub	sp, fp, #28
   1af9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001afa0 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1afa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afa4:	add	fp, sp, #28
   1afa8:	sub	sp, sp, #4
   1afac:	mov	r4, r0
   1afb0:	ldrb	r0, [r0, #27]
   1afb4:	cmp	r0, #0
   1afb8:	beq	1afcc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   1afbc:	mov	r0, r4
   1afc0:	sub	sp, fp, #28
   1afc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afc8:	b	181f8 <flatcc_json_printer_uint16_vector_field@@Base>
   1afcc:	mov	r0, #4
   1afd0:	add	r0, r0, r2, lsl #1
   1afd4:	ldr	r2, [r1, #8]
   1afd8:	cmp	r0, r2
   1afdc:	bge	1b34c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3ac>
   1afe0:	ldr	r2, [r1, #4]
   1afe4:	add	r0, r2, r0
   1afe8:	ldrh	r0, [r0]
   1afec:	cmp	r0, #0
   1aff0:	ldrne	r2, [r1]
   1aff4:	addsne	r8, r2, r0
   1aff8:	beq	1b34c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3ac>
   1affc:	ldr	r0, [r1, #16]
   1b000:	ldr	sl, [fp, #12]
   1b004:	ldr	r2, [fp, #8]
   1b008:	add	r7, r0, #1
   1b00c:	cmp	r0, #0
   1b010:	str	r7, [r1, #16]
   1b014:	ldrne	r0, [r4, #20]
   1b018:	addne	r1, r0, #1
   1b01c:	strne	r1, [r4, #20]
   1b020:	movne	r1, #44	; 0x2c
   1b024:	strbne	r1, [r0]
   1b028:	mov	r1, r3
   1b02c:	ldr	r0, [r8]
   1b030:	ldr	r9, [r8, r0]!
   1b034:	mov	r0, r4
   1b038:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1b03c:	ldr	r1, [r4, #32]
   1b040:	ldr	r0, [r4, #20]
   1b044:	cmp	r9, #0
   1b048:	add	r1, r1, #1
   1b04c:	str	r1, [r4, #32]
   1b050:	add	r1, r0, #1
   1b054:	str	r1, [r4, #20]
   1b058:	mov	r1, #91	; 0x5b
   1b05c:	strb	r1, [r0]
   1b060:	beq	1b270 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d0>
   1b064:	ldrb	r1, [r4, #25]
   1b068:	ldr	r0, [r4, #20]
   1b06c:	cmp	r1, #0
   1b070:	beq	1b12c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x18c>
   1b074:	add	r1, r0, #1
   1b078:	str	r1, [r4, #20]
   1b07c:	mov	r1, #10
   1b080:	strb	r1, [r0]
   1b084:	ldr	r0, [r4, #20]
   1b088:	ldrb	r2, [r4, #25]
   1b08c:	ldr	r3, [r4, #32]
   1b090:	ldr	r1, [r4, #16]
   1b094:	mla	r7, r3, r2, r0
   1b098:	mul	r5, r3, r2
   1b09c:	cmp	r7, r1
   1b0a0:	bls	1b110 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
   1b0a4:	cmp	r0, r1
   1b0a8:	bcc	1b0c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x124>
   1b0ac:	ldr	r2, [r4, #44]	; 0x2c
   1b0b0:	mov	r0, r4
   1b0b4:	mov	r1, #0
   1b0b8:	blx	r2
   1b0bc:	ldr	r1, [r4, #16]
   1b0c0:	ldr	r0, [r4, #20]
   1b0c4:	sub	r6, r1, r0
   1b0c8:	cmp	r6, r5
   1b0cc:	bcs	1b110 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
   1b0d0:	mov	r1, #32
   1b0d4:	mov	r2, r6
   1b0d8:	bl	12948 <memset@plt>
   1b0dc:	ldr	r0, [r4, #20]
   1b0e0:	ldr	r2, [r4, #44]	; 0x2c
   1b0e4:	mov	r1, #0
   1b0e8:	add	r0, r0, r6
   1b0ec:	str	r0, [r4, #20]
   1b0f0:	mov	r0, r4
   1b0f4:	blx	r2
   1b0f8:	ldr	r1, [r4, #16]
   1b0fc:	ldr	r0, [r4, #20]
   1b100:	sub	r5, r5, r6
   1b104:	sub	r6, r1, r0
   1b108:	cmp	r5, r6
   1b10c:	bhi	1b0d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x130>
   1b110:	mov	r1, #32
   1b114:	mov	r2, r5
   1b118:	bl	12948 <memset@plt>
   1b11c:	ldr	r0, [r4, #20]
   1b120:	add	r0, r0, r5
   1b124:	str	r0, [r4, #20]
   1b128:	b	1b148 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   1b12c:	ldr	r1, [r4, #16]
   1b130:	cmp	r0, r1
   1b134:	bcc	1b148 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   1b138:	ldr	r2, [r4, #44]	; 0x2c
   1b13c:	mov	r0, r4
   1b140:	mov	r1, #0
   1b144:	blx	r2
   1b148:	ldrh	r1, [r8, #4]
   1b14c:	mov	r0, r4
   1b150:	blx	sl
   1b154:	subs	r9, r9, #1
   1b158:	beq	1b270 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d0>
   1b15c:	add	r7, r8, #6
   1b160:	mov	r8, #44	; 0x2c
   1b164:	ldr	r0, [r4, #20]
   1b168:	sub	r9, r9, #1
   1b16c:	add	r1, r0, #1
   1b170:	str	r1, [r4, #20]
   1b174:	strb	r8, [r0]
   1b178:	ldrb	r1, [r4, #25]
   1b17c:	ldr	r0, [r4, #20]
   1b180:	cmp	r1, #0
   1b184:	beq	1b240 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a0>
   1b188:	add	r1, r0, #1
   1b18c:	str	r1, [r4, #20]
   1b190:	mov	r1, #10
   1b194:	strb	r1, [r0]
   1b198:	ldr	r0, [r4, #20]
   1b19c:	ldrb	r2, [r4, #25]
   1b1a0:	ldr	r3, [r4, #32]
   1b1a4:	ldr	r1, [r4, #16]
   1b1a8:	mla	r6, r3, r2, r0
   1b1ac:	mul	r5, r3, r2
   1b1b0:	cmp	r6, r1
   1b1b4:	bls	1b224 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x284>
   1b1b8:	cmp	r0, r1
   1b1bc:	bcc	1b1d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x238>
   1b1c0:	ldr	r2, [r4, #44]	; 0x2c
   1b1c4:	mov	r0, r4
   1b1c8:	mov	r1, #0
   1b1cc:	blx	r2
   1b1d0:	ldr	r1, [r4, #16]
   1b1d4:	ldr	r0, [r4, #20]
   1b1d8:	sub	r6, r1, r0
   1b1dc:	cmp	r6, r5
   1b1e0:	bcs	1b224 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x284>
   1b1e4:	mov	r1, #32
   1b1e8:	mov	r2, r6
   1b1ec:	bl	12948 <memset@plt>
   1b1f0:	ldr	r0, [r4, #20]
   1b1f4:	ldr	r2, [r4, #44]	; 0x2c
   1b1f8:	mov	r1, #0
   1b1fc:	add	r0, r0, r6
   1b200:	str	r0, [r4, #20]
   1b204:	mov	r0, r4
   1b208:	blx	r2
   1b20c:	ldr	r1, [r4, #16]
   1b210:	ldr	r0, [r4, #20]
   1b214:	sub	r5, r5, r6
   1b218:	sub	r6, r1, r0
   1b21c:	cmp	r5, r6
   1b220:	bhi	1b1e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x244>
   1b224:	mov	r1, #32
   1b228:	mov	r2, r5
   1b22c:	bl	12948 <memset@plt>
   1b230:	ldr	r0, [r4, #20]
   1b234:	add	r0, r0, r5
   1b238:	str	r0, [r4, #20]
   1b23c:	b	1b25c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2bc>
   1b240:	ldr	r1, [r4, #16]
   1b244:	cmp	r0, r1
   1b248:	bcc	1b25c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2bc>
   1b24c:	ldr	r2, [r4, #44]	; 0x2c
   1b250:	mov	r0, r4
   1b254:	mov	r1, #0
   1b258:	blx	r2
   1b25c:	ldrh	r1, [r7], #2
   1b260:	mov	r0, r4
   1b264:	blx	sl
   1b268:	cmp	r9, #0
   1b26c:	bne	1b164 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c4>
   1b270:	ldrb	r1, [r4, #25]
   1b274:	ldr	r0, [r4, #20]
   1b278:	cmp	r1, #0
   1b27c:	beq	1b33c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x39c>
   1b280:	add	r1, r0, #1
   1b284:	str	r1, [r4, #20]
   1b288:	mov	r1, #10
   1b28c:	strb	r1, [r0]
   1b290:	ldr	r0, [r4, #32]
   1b294:	sub	r2, r0, #1
   1b298:	str	r2, [r4, #32]
   1b29c:	ldrb	r3, [r4, #25]
   1b2a0:	ldr	r0, [r4, #20]
   1b2a4:	ldr	r1, [r4, #16]
   1b2a8:	mla	r7, r2, r3, r0
   1b2ac:	mul	r5, r2, r3
   1b2b0:	cmp	r7, r1
   1b2b4:	bls	1b324 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x384>
   1b2b8:	cmp	r0, r1
   1b2bc:	bcc	1b2d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x338>
   1b2c0:	ldr	r2, [r4, #44]	; 0x2c
   1b2c4:	mov	r0, r4
   1b2c8:	mov	r1, #0
   1b2cc:	blx	r2
   1b2d0:	ldr	r1, [r4, #16]
   1b2d4:	ldr	r0, [r4, #20]
   1b2d8:	sub	r6, r1, r0
   1b2dc:	cmp	r6, r5
   1b2e0:	bcs	1b324 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x384>
   1b2e4:	mov	r1, #32
   1b2e8:	mov	r2, r6
   1b2ec:	bl	12948 <memset@plt>
   1b2f0:	ldr	r0, [r4, #20]
   1b2f4:	ldr	r2, [r4, #44]	; 0x2c
   1b2f8:	mov	r1, #0
   1b2fc:	add	r0, r0, r6
   1b300:	str	r0, [r4, #20]
   1b304:	mov	r0, r4
   1b308:	blx	r2
   1b30c:	ldr	r1, [r4, #16]
   1b310:	ldr	r0, [r4, #20]
   1b314:	sub	r5, r5, r6
   1b318:	sub	r6, r1, r0
   1b31c:	cmp	r5, r6
   1b320:	bhi	1b2e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x344>
   1b324:	mov	r1, #32
   1b328:	mov	r2, r5
   1b32c:	bl	12948 <memset@plt>
   1b330:	ldr	r0, [r4, #20]
   1b334:	add	r0, r0, r5
   1b338:	str	r0, [r4, #20]
   1b33c:	add	r1, r0, #1
   1b340:	str	r1, [r4, #20]
   1b344:	mov	r1, #93	; 0x5d
   1b348:	strb	r1, [r0]
   1b34c:	sub	sp, fp, #28
   1b350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b354 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1b354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b358:	add	fp, sp, #28
   1b35c:	sub	sp, sp, #4
   1b360:	mov	r4, r0
   1b364:	ldrb	r0, [r0, #27]
   1b368:	cmp	r0, #0
   1b36c:	beq	1b380 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   1b370:	mov	r0, r4
   1b374:	sub	sp, fp, #28
   1b378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b37c:	b	185a4 <flatcc_json_printer_uint32_vector_field@@Base>
   1b380:	mov	r0, #4
   1b384:	add	r0, r0, r2, lsl #1
   1b388:	ldr	r2, [r1, #8]
   1b38c:	cmp	r0, r2
   1b390:	bge	1b700 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3ac>
   1b394:	ldr	r2, [r1, #4]
   1b398:	add	r0, r2, r0
   1b39c:	ldrh	r0, [r0]
   1b3a0:	cmp	r0, #0
   1b3a4:	ldrne	r2, [r1]
   1b3a8:	addsne	r8, r2, r0
   1b3ac:	beq	1b700 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3ac>
   1b3b0:	ldr	r0, [r1, #16]
   1b3b4:	ldr	sl, [fp, #12]
   1b3b8:	ldr	r2, [fp, #8]
   1b3bc:	add	r7, r0, #1
   1b3c0:	cmp	r0, #0
   1b3c4:	str	r7, [r1, #16]
   1b3c8:	ldrne	r0, [r4, #20]
   1b3cc:	addne	r1, r0, #1
   1b3d0:	strne	r1, [r4, #20]
   1b3d4:	movne	r1, #44	; 0x2c
   1b3d8:	strbne	r1, [r0]
   1b3dc:	mov	r1, r3
   1b3e0:	ldr	r0, [r8]
   1b3e4:	ldr	r9, [r8, r0]!
   1b3e8:	mov	r0, r4
   1b3ec:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1b3f0:	ldr	r1, [r4, #32]
   1b3f4:	ldr	r0, [r4, #20]
   1b3f8:	cmp	r9, #0
   1b3fc:	add	r1, r1, #1
   1b400:	str	r1, [r4, #32]
   1b404:	add	r1, r0, #1
   1b408:	str	r1, [r4, #20]
   1b40c:	mov	r1, #91	; 0x5b
   1b410:	strb	r1, [r0]
   1b414:	beq	1b624 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d0>
   1b418:	ldrb	r1, [r4, #25]
   1b41c:	ldr	r0, [r4, #20]
   1b420:	cmp	r1, #0
   1b424:	beq	1b4e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18c>
   1b428:	add	r1, r0, #1
   1b42c:	str	r1, [r4, #20]
   1b430:	mov	r1, #10
   1b434:	strb	r1, [r0]
   1b438:	ldr	r0, [r4, #20]
   1b43c:	ldrb	r2, [r4, #25]
   1b440:	ldr	r3, [r4, #32]
   1b444:	ldr	r1, [r4, #16]
   1b448:	mla	r7, r3, r2, r0
   1b44c:	mul	r5, r3, r2
   1b450:	cmp	r7, r1
   1b454:	bls	1b4c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x170>
   1b458:	cmp	r0, r1
   1b45c:	bcc	1b478 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x124>
   1b460:	ldr	r2, [r4, #44]	; 0x2c
   1b464:	mov	r0, r4
   1b468:	mov	r1, #0
   1b46c:	blx	r2
   1b470:	ldr	r1, [r4, #16]
   1b474:	ldr	r0, [r4, #20]
   1b478:	sub	r6, r1, r0
   1b47c:	cmp	r6, r5
   1b480:	bcs	1b4c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x170>
   1b484:	mov	r1, #32
   1b488:	mov	r2, r6
   1b48c:	bl	12948 <memset@plt>
   1b490:	ldr	r0, [r4, #20]
   1b494:	ldr	r2, [r4, #44]	; 0x2c
   1b498:	mov	r1, #0
   1b49c:	add	r0, r0, r6
   1b4a0:	str	r0, [r4, #20]
   1b4a4:	mov	r0, r4
   1b4a8:	blx	r2
   1b4ac:	ldr	r1, [r4, #16]
   1b4b0:	ldr	r0, [r4, #20]
   1b4b4:	sub	r5, r5, r6
   1b4b8:	sub	r6, r1, r0
   1b4bc:	cmp	r5, r6
   1b4c0:	bhi	1b484 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x130>
   1b4c4:	mov	r1, #32
   1b4c8:	mov	r2, r5
   1b4cc:	bl	12948 <memset@plt>
   1b4d0:	ldr	r0, [r4, #20]
   1b4d4:	add	r0, r0, r5
   1b4d8:	str	r0, [r4, #20]
   1b4dc:	b	1b4fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   1b4e0:	ldr	r1, [r4, #16]
   1b4e4:	cmp	r0, r1
   1b4e8:	bcc	1b4fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   1b4ec:	ldr	r2, [r4, #44]	; 0x2c
   1b4f0:	mov	r0, r4
   1b4f4:	mov	r1, #0
   1b4f8:	blx	r2
   1b4fc:	ldr	r1, [r8, #4]
   1b500:	mov	r0, r4
   1b504:	blx	sl
   1b508:	subs	r9, r9, #1
   1b50c:	beq	1b624 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d0>
   1b510:	add	r7, r8, #8
   1b514:	mov	r8, #44	; 0x2c
   1b518:	ldr	r0, [r4, #20]
   1b51c:	sub	r9, r9, #1
   1b520:	add	r1, r0, #1
   1b524:	str	r1, [r4, #20]
   1b528:	strb	r8, [r0]
   1b52c:	ldrb	r1, [r4, #25]
   1b530:	ldr	r0, [r4, #20]
   1b534:	cmp	r1, #0
   1b538:	beq	1b5f4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a0>
   1b53c:	add	r1, r0, #1
   1b540:	str	r1, [r4, #20]
   1b544:	mov	r1, #10
   1b548:	strb	r1, [r0]
   1b54c:	ldr	r0, [r4, #20]
   1b550:	ldrb	r2, [r4, #25]
   1b554:	ldr	r3, [r4, #32]
   1b558:	ldr	r1, [r4, #16]
   1b55c:	mla	r6, r3, r2, r0
   1b560:	mul	r5, r3, r2
   1b564:	cmp	r6, r1
   1b568:	bls	1b5d8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x284>
   1b56c:	cmp	r0, r1
   1b570:	bcc	1b58c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x238>
   1b574:	ldr	r2, [r4, #44]	; 0x2c
   1b578:	mov	r0, r4
   1b57c:	mov	r1, #0
   1b580:	blx	r2
   1b584:	ldr	r1, [r4, #16]
   1b588:	ldr	r0, [r4, #20]
   1b58c:	sub	r6, r1, r0
   1b590:	cmp	r6, r5
   1b594:	bcs	1b5d8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x284>
   1b598:	mov	r1, #32
   1b59c:	mov	r2, r6
   1b5a0:	bl	12948 <memset@plt>
   1b5a4:	ldr	r0, [r4, #20]
   1b5a8:	ldr	r2, [r4, #44]	; 0x2c
   1b5ac:	mov	r1, #0
   1b5b0:	add	r0, r0, r6
   1b5b4:	str	r0, [r4, #20]
   1b5b8:	mov	r0, r4
   1b5bc:	blx	r2
   1b5c0:	ldr	r1, [r4, #16]
   1b5c4:	ldr	r0, [r4, #20]
   1b5c8:	sub	r5, r5, r6
   1b5cc:	sub	r6, r1, r0
   1b5d0:	cmp	r5, r6
   1b5d4:	bhi	1b598 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x244>
   1b5d8:	mov	r1, #32
   1b5dc:	mov	r2, r5
   1b5e0:	bl	12948 <memset@plt>
   1b5e4:	ldr	r0, [r4, #20]
   1b5e8:	add	r0, r0, r5
   1b5ec:	str	r0, [r4, #20]
   1b5f0:	b	1b610 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   1b5f4:	ldr	r1, [r4, #16]
   1b5f8:	cmp	r0, r1
   1b5fc:	bcc	1b610 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   1b600:	ldr	r2, [r4, #44]	; 0x2c
   1b604:	mov	r0, r4
   1b608:	mov	r1, #0
   1b60c:	blx	r2
   1b610:	ldr	r1, [r7], #4
   1b614:	mov	r0, r4
   1b618:	blx	sl
   1b61c:	cmp	r9, #0
   1b620:	bne	1b518 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c4>
   1b624:	ldrb	r1, [r4, #25]
   1b628:	ldr	r0, [r4, #20]
   1b62c:	cmp	r1, #0
   1b630:	beq	1b6f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x39c>
   1b634:	add	r1, r0, #1
   1b638:	str	r1, [r4, #20]
   1b63c:	mov	r1, #10
   1b640:	strb	r1, [r0]
   1b644:	ldr	r0, [r4, #32]
   1b648:	sub	r2, r0, #1
   1b64c:	str	r2, [r4, #32]
   1b650:	ldrb	r3, [r4, #25]
   1b654:	ldr	r0, [r4, #20]
   1b658:	ldr	r1, [r4, #16]
   1b65c:	mla	r7, r2, r3, r0
   1b660:	mul	r5, r2, r3
   1b664:	cmp	r7, r1
   1b668:	bls	1b6d8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x384>
   1b66c:	cmp	r0, r1
   1b670:	bcc	1b68c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x338>
   1b674:	ldr	r2, [r4, #44]	; 0x2c
   1b678:	mov	r0, r4
   1b67c:	mov	r1, #0
   1b680:	blx	r2
   1b684:	ldr	r1, [r4, #16]
   1b688:	ldr	r0, [r4, #20]
   1b68c:	sub	r6, r1, r0
   1b690:	cmp	r6, r5
   1b694:	bcs	1b6d8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x384>
   1b698:	mov	r1, #32
   1b69c:	mov	r2, r6
   1b6a0:	bl	12948 <memset@plt>
   1b6a4:	ldr	r0, [r4, #20]
   1b6a8:	ldr	r2, [r4, #44]	; 0x2c
   1b6ac:	mov	r1, #0
   1b6b0:	add	r0, r0, r6
   1b6b4:	str	r0, [r4, #20]
   1b6b8:	mov	r0, r4
   1b6bc:	blx	r2
   1b6c0:	ldr	r1, [r4, #16]
   1b6c4:	ldr	r0, [r4, #20]
   1b6c8:	sub	r5, r5, r6
   1b6cc:	sub	r6, r1, r0
   1b6d0:	cmp	r5, r6
   1b6d4:	bhi	1b698 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x344>
   1b6d8:	mov	r1, #32
   1b6dc:	mov	r2, r5
   1b6e0:	bl	12948 <memset@plt>
   1b6e4:	ldr	r0, [r4, #20]
   1b6e8:	add	r0, r0, r5
   1b6ec:	str	r0, [r4, #20]
   1b6f0:	add	r1, r0, #1
   1b6f4:	str	r1, [r4, #20]
   1b6f8:	mov	r1, #93	; 0x5d
   1b6fc:	strb	r1, [r0]
   1b700:	sub	sp, fp, #28
   1b704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b708 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1b708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b70c:	add	fp, sp, #28
   1b710:	sub	sp, sp, #4
   1b714:	mov	r4, r0
   1b718:	ldrb	r0, [r0, #27]
   1b71c:	cmp	r0, #0
   1b720:	beq	1b734 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   1b724:	mov	r0, r4
   1b728:	sub	sp, fp, #28
   1b72c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b730:	b	18950 <flatcc_json_printer_uint64_vector_field@@Base>
   1b734:	mov	r0, #4
   1b738:	add	r0, r0, r2, lsl #1
   1b73c:	ldr	r2, [r1, #8]
   1b740:	cmp	r0, r2
   1b744:	bge	1bab8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b0>
   1b748:	ldr	r2, [r1, #4]
   1b74c:	add	r0, r2, r0
   1b750:	ldrh	r0, [r0]
   1b754:	cmp	r0, #0
   1b758:	ldrne	r2, [r1]
   1b75c:	addsne	r8, r2, r0
   1b760:	beq	1bab8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b0>
   1b764:	ldr	r0, [r1, #16]
   1b768:	ldr	sl, [fp, #12]
   1b76c:	ldr	r2, [fp, #8]
   1b770:	add	r7, r0, #1
   1b774:	cmp	r0, #0
   1b778:	str	r7, [r1, #16]
   1b77c:	ldrne	r0, [r4, #20]
   1b780:	addne	r1, r0, #1
   1b784:	strne	r1, [r4, #20]
   1b788:	movne	r1, #44	; 0x2c
   1b78c:	strbne	r1, [r0]
   1b790:	mov	r1, r3
   1b794:	ldr	r0, [r8]
   1b798:	ldr	r9, [r8, r0]!
   1b79c:	mov	r0, r4
   1b7a0:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1b7a4:	ldr	r1, [r4, #32]
   1b7a8:	ldr	r0, [r4, #20]
   1b7ac:	cmp	r9, #0
   1b7b0:	add	r1, r1, #1
   1b7b4:	str	r1, [r4, #32]
   1b7b8:	add	r1, r0, #1
   1b7bc:	str	r1, [r4, #20]
   1b7c0:	mov	r1, #91	; 0x5b
   1b7c4:	strb	r1, [r0]
   1b7c8:	beq	1b9dc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d4>
   1b7cc:	ldrb	r1, [r4, #25]
   1b7d0:	ldr	r0, [r4, #20]
   1b7d4:	cmp	r1, #0
   1b7d8:	beq	1b894 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18c>
   1b7dc:	add	r1, r0, #1
   1b7e0:	str	r1, [r4, #20]
   1b7e4:	mov	r1, #10
   1b7e8:	strb	r1, [r0]
   1b7ec:	ldr	r0, [r4, #20]
   1b7f0:	ldrb	r2, [r4, #25]
   1b7f4:	ldr	r3, [r4, #32]
   1b7f8:	ldr	r1, [r4, #16]
   1b7fc:	mla	r7, r3, r2, r0
   1b800:	mul	r5, r3, r2
   1b804:	cmp	r7, r1
   1b808:	bls	1b878 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
   1b80c:	cmp	r0, r1
   1b810:	bcc	1b82c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x124>
   1b814:	ldr	r2, [r4, #44]	; 0x2c
   1b818:	mov	r0, r4
   1b81c:	mov	r1, #0
   1b820:	blx	r2
   1b824:	ldr	r1, [r4, #16]
   1b828:	ldr	r0, [r4, #20]
   1b82c:	sub	r6, r1, r0
   1b830:	cmp	r6, r5
   1b834:	bcs	1b878 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
   1b838:	mov	r1, #32
   1b83c:	mov	r2, r6
   1b840:	bl	12948 <memset@plt>
   1b844:	ldr	r0, [r4, #20]
   1b848:	ldr	r2, [r4, #44]	; 0x2c
   1b84c:	mov	r1, #0
   1b850:	add	r0, r0, r6
   1b854:	str	r0, [r4, #20]
   1b858:	mov	r0, r4
   1b85c:	blx	r2
   1b860:	ldr	r1, [r4, #16]
   1b864:	ldr	r0, [r4, #20]
   1b868:	sub	r5, r5, r6
   1b86c:	sub	r6, r1, r0
   1b870:	cmp	r5, r6
   1b874:	bhi	1b838 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   1b878:	mov	r1, #32
   1b87c:	mov	r2, r5
   1b880:	bl	12948 <memset@plt>
   1b884:	ldr	r0, [r4, #20]
   1b888:	add	r0, r0, r5
   1b88c:	str	r0, [r4, #20]
   1b890:	b	1b8b0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   1b894:	ldr	r1, [r4, #16]
   1b898:	cmp	r0, r1
   1b89c:	bcc	1b8b0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   1b8a0:	ldr	r2, [r4, #44]	; 0x2c
   1b8a4:	mov	r0, r4
   1b8a8:	mov	r1, #0
   1b8ac:	blx	r2
   1b8b0:	ldrd	r2, [r8, #4]
   1b8b4:	mov	r0, r4
   1b8b8:	blx	sl
   1b8bc:	subs	r9, r9, #1
   1b8c0:	beq	1b9dc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d4>
   1b8c4:	add	r7, r8, #12
   1b8c8:	mov	r8, #44	; 0x2c
   1b8cc:	ldr	r0, [r4, #20]
   1b8d0:	sub	r9, r9, #1
   1b8d4:	add	r1, r0, #1
   1b8d8:	str	r1, [r4, #20]
   1b8dc:	strb	r8, [r0]
   1b8e0:	ldrb	r1, [r4, #25]
   1b8e4:	ldr	r0, [r4, #20]
   1b8e8:	cmp	r1, #0
   1b8ec:	beq	1b9a8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a0>
   1b8f0:	add	r1, r0, #1
   1b8f4:	str	r1, [r4, #20]
   1b8f8:	mov	r1, #10
   1b8fc:	strb	r1, [r0]
   1b900:	ldr	r0, [r4, #20]
   1b904:	ldrb	r2, [r4, #25]
   1b908:	ldr	r3, [r4, #32]
   1b90c:	ldr	r1, [r4, #16]
   1b910:	mla	r6, r3, r2, r0
   1b914:	mul	r5, r3, r2
   1b918:	cmp	r6, r1
   1b91c:	bls	1b98c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   1b920:	cmp	r0, r1
   1b924:	bcc	1b940 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x238>
   1b928:	ldr	r2, [r4, #44]	; 0x2c
   1b92c:	mov	r0, r4
   1b930:	mov	r1, #0
   1b934:	blx	r2
   1b938:	ldr	r1, [r4, #16]
   1b93c:	ldr	r0, [r4, #20]
   1b940:	sub	r6, r1, r0
   1b944:	cmp	r6, r5
   1b948:	bcs	1b98c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   1b94c:	mov	r1, #32
   1b950:	mov	r2, r6
   1b954:	bl	12948 <memset@plt>
   1b958:	ldr	r0, [r4, #20]
   1b95c:	ldr	r2, [r4, #44]	; 0x2c
   1b960:	mov	r1, #0
   1b964:	add	r0, r0, r6
   1b968:	str	r0, [r4, #20]
   1b96c:	mov	r0, r4
   1b970:	blx	r2
   1b974:	ldr	r1, [r4, #16]
   1b978:	ldr	r0, [r4, #20]
   1b97c:	sub	r5, r5, r6
   1b980:	sub	r6, r1, r0
   1b984:	cmp	r5, r6
   1b988:	bhi	1b94c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x244>
   1b98c:	mov	r1, #32
   1b990:	mov	r2, r5
   1b994:	bl	12948 <memset@plt>
   1b998:	ldr	r0, [r4, #20]
   1b99c:	add	r0, r0, r5
   1b9a0:	str	r0, [r4, #20]
   1b9a4:	b	1b9c4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2bc>
   1b9a8:	ldr	r1, [r4, #16]
   1b9ac:	cmp	r0, r1
   1b9b0:	bcc	1b9c4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2bc>
   1b9b4:	ldr	r2, [r4, #44]	; 0x2c
   1b9b8:	mov	r0, r4
   1b9bc:	mov	r1, #0
   1b9c0:	blx	r2
   1b9c4:	ldrd	r2, [r7]
   1b9c8:	mov	r0, r4
   1b9cc:	blx	sl
   1b9d0:	add	r7, r7, #8
   1b9d4:	cmp	r9, #0
   1b9d8:	bne	1b8cc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c4>
   1b9dc:	ldrb	r1, [r4, #25]
   1b9e0:	ldr	r0, [r4, #20]
   1b9e4:	cmp	r1, #0
   1b9e8:	beq	1baa8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a0>
   1b9ec:	add	r1, r0, #1
   1b9f0:	str	r1, [r4, #20]
   1b9f4:	mov	r1, #10
   1b9f8:	strb	r1, [r0]
   1b9fc:	ldr	r0, [r4, #32]
   1ba00:	sub	r2, r0, #1
   1ba04:	str	r2, [r4, #32]
   1ba08:	ldrb	r3, [r4, #25]
   1ba0c:	ldr	r0, [r4, #20]
   1ba10:	ldr	r1, [r4, #16]
   1ba14:	mla	r7, r2, r3, r0
   1ba18:	mul	r5, r2, r3
   1ba1c:	cmp	r7, r1
   1ba20:	bls	1ba90 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x388>
   1ba24:	cmp	r0, r1
   1ba28:	bcc	1ba44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x33c>
   1ba2c:	ldr	r2, [r4, #44]	; 0x2c
   1ba30:	mov	r0, r4
   1ba34:	mov	r1, #0
   1ba38:	blx	r2
   1ba3c:	ldr	r1, [r4, #16]
   1ba40:	ldr	r0, [r4, #20]
   1ba44:	sub	r6, r1, r0
   1ba48:	cmp	r6, r5
   1ba4c:	bcs	1ba90 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x388>
   1ba50:	mov	r1, #32
   1ba54:	mov	r2, r6
   1ba58:	bl	12948 <memset@plt>
   1ba5c:	ldr	r0, [r4, #20]
   1ba60:	ldr	r2, [r4, #44]	; 0x2c
   1ba64:	mov	r1, #0
   1ba68:	add	r0, r0, r6
   1ba6c:	str	r0, [r4, #20]
   1ba70:	mov	r0, r4
   1ba74:	blx	r2
   1ba78:	ldr	r1, [r4, #16]
   1ba7c:	ldr	r0, [r4, #20]
   1ba80:	sub	r5, r5, r6
   1ba84:	sub	r6, r1, r0
   1ba88:	cmp	r5, r6
   1ba8c:	bhi	1ba50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x348>
   1ba90:	mov	r1, #32
   1ba94:	mov	r2, r5
   1ba98:	bl	12948 <memset@plt>
   1ba9c:	ldr	r0, [r4, #20]
   1baa0:	add	r0, r0, r5
   1baa4:	str	r0, [r4, #20]
   1baa8:	add	r1, r0, #1
   1baac:	str	r1, [r4, #20]
   1bab0:	mov	r1, #93	; 0x5d
   1bab4:	strb	r1, [r0]
   1bab8:	sub	sp, fp, #28
   1babc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bac0 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1bac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bac4:	add	fp, sp, #28
   1bac8:	sub	sp, sp, #4
   1bacc:	mov	r4, r0
   1bad0:	ldrb	r0, [r0, #27]
   1bad4:	cmp	r0, #0
   1bad8:	beq	1baec <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   1badc:	mov	r0, r4
   1bae0:	sub	sp, fp, #28
   1bae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bae8:	b	18d00 <flatcc_json_printer_int8_vector_field@@Base>
   1baec:	mov	r0, #4
   1baf0:	add	r0, r0, r2, lsl #1
   1baf4:	ldr	r2, [r1, #8]
   1baf8:	cmp	r0, r2
   1bafc:	bge	1be6c <flatcc_json_printer_int8_enum_vector_field@@Base+0x3ac>
   1bb00:	ldr	r2, [r1, #4]
   1bb04:	add	r0, r2, r0
   1bb08:	ldrh	r0, [r0]
   1bb0c:	cmp	r0, #0
   1bb10:	ldrne	r2, [r1]
   1bb14:	addsne	r8, r2, r0
   1bb18:	beq	1be6c <flatcc_json_printer_int8_enum_vector_field@@Base+0x3ac>
   1bb1c:	ldr	r0, [r1, #16]
   1bb20:	ldr	sl, [fp, #12]
   1bb24:	ldr	r2, [fp, #8]
   1bb28:	add	r7, r0, #1
   1bb2c:	cmp	r0, #0
   1bb30:	str	r7, [r1, #16]
   1bb34:	ldrne	r0, [r4, #20]
   1bb38:	addne	r1, r0, #1
   1bb3c:	strne	r1, [r4, #20]
   1bb40:	movne	r1, #44	; 0x2c
   1bb44:	strbne	r1, [r0]
   1bb48:	mov	r1, r3
   1bb4c:	ldr	r0, [r8]
   1bb50:	ldr	r9, [r8, r0]!
   1bb54:	mov	r0, r4
   1bb58:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1bb5c:	ldr	r1, [r4, #32]
   1bb60:	ldr	r0, [r4, #20]
   1bb64:	cmp	r9, #0
   1bb68:	add	r1, r1, #1
   1bb6c:	str	r1, [r4, #32]
   1bb70:	add	r1, r0, #1
   1bb74:	str	r1, [r4, #20]
   1bb78:	mov	r1, #91	; 0x5b
   1bb7c:	strb	r1, [r0]
   1bb80:	beq	1bd90 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d0>
   1bb84:	ldrb	r1, [r4, #25]
   1bb88:	ldr	r0, [r4, #20]
   1bb8c:	cmp	r1, #0
   1bb90:	beq	1bc4c <flatcc_json_printer_int8_enum_vector_field@@Base+0x18c>
   1bb94:	add	r1, r0, #1
   1bb98:	str	r1, [r4, #20]
   1bb9c:	mov	r1, #10
   1bba0:	strb	r1, [r0]
   1bba4:	ldr	r0, [r4, #20]
   1bba8:	ldrb	r2, [r4, #25]
   1bbac:	ldr	r3, [r4, #32]
   1bbb0:	ldr	r1, [r4, #16]
   1bbb4:	mla	r7, r3, r2, r0
   1bbb8:	mul	r5, r3, r2
   1bbbc:	cmp	r7, r1
   1bbc0:	bls	1bc30 <flatcc_json_printer_int8_enum_vector_field@@Base+0x170>
   1bbc4:	cmp	r0, r1
   1bbc8:	bcc	1bbe4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x124>
   1bbcc:	ldr	r2, [r4, #44]	; 0x2c
   1bbd0:	mov	r0, r4
   1bbd4:	mov	r1, #0
   1bbd8:	blx	r2
   1bbdc:	ldr	r1, [r4, #16]
   1bbe0:	ldr	r0, [r4, #20]
   1bbe4:	sub	r6, r1, r0
   1bbe8:	cmp	r6, r5
   1bbec:	bcs	1bc30 <flatcc_json_printer_int8_enum_vector_field@@Base+0x170>
   1bbf0:	mov	r1, #32
   1bbf4:	mov	r2, r6
   1bbf8:	bl	12948 <memset@plt>
   1bbfc:	ldr	r0, [r4, #20]
   1bc00:	ldr	r2, [r4, #44]	; 0x2c
   1bc04:	mov	r1, #0
   1bc08:	add	r0, r0, r6
   1bc0c:	str	r0, [r4, #20]
   1bc10:	mov	r0, r4
   1bc14:	blx	r2
   1bc18:	ldr	r1, [r4, #16]
   1bc1c:	ldr	r0, [r4, #20]
   1bc20:	sub	r5, r5, r6
   1bc24:	sub	r6, r1, r0
   1bc28:	cmp	r5, r6
   1bc2c:	bhi	1bbf0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x130>
   1bc30:	mov	r1, #32
   1bc34:	mov	r2, r5
   1bc38:	bl	12948 <memset@plt>
   1bc3c:	ldr	r0, [r4, #20]
   1bc40:	add	r0, r0, r5
   1bc44:	str	r0, [r4, #20]
   1bc48:	b	1bc68 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   1bc4c:	ldr	r1, [r4, #16]
   1bc50:	cmp	r0, r1
   1bc54:	bcc	1bc68 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   1bc58:	ldr	r2, [r4, #44]	; 0x2c
   1bc5c:	mov	r0, r4
   1bc60:	mov	r1, #0
   1bc64:	blx	r2
   1bc68:	ldrsb	r1, [r8, #4]
   1bc6c:	mov	r0, r4
   1bc70:	blx	sl
   1bc74:	subs	r9, r9, #1
   1bc78:	beq	1bd90 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d0>
   1bc7c:	add	r7, r8, #5
   1bc80:	mov	r8, #44	; 0x2c
   1bc84:	ldr	r0, [r4, #20]
   1bc88:	sub	r9, r9, #1
   1bc8c:	add	r1, r0, #1
   1bc90:	str	r1, [r4, #20]
   1bc94:	strb	r8, [r0]
   1bc98:	ldrb	r1, [r4, #25]
   1bc9c:	ldr	r0, [r4, #20]
   1bca0:	cmp	r1, #0
   1bca4:	beq	1bd60 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a0>
   1bca8:	add	r1, r0, #1
   1bcac:	str	r1, [r4, #20]
   1bcb0:	mov	r1, #10
   1bcb4:	strb	r1, [r0]
   1bcb8:	ldr	r0, [r4, #20]
   1bcbc:	ldrb	r2, [r4, #25]
   1bcc0:	ldr	r3, [r4, #32]
   1bcc4:	ldr	r1, [r4, #16]
   1bcc8:	mla	r6, r3, r2, r0
   1bccc:	mul	r5, r3, r2
   1bcd0:	cmp	r6, r1
   1bcd4:	bls	1bd44 <flatcc_json_printer_int8_enum_vector_field@@Base+0x284>
   1bcd8:	cmp	r0, r1
   1bcdc:	bcc	1bcf8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x238>
   1bce0:	ldr	r2, [r4, #44]	; 0x2c
   1bce4:	mov	r0, r4
   1bce8:	mov	r1, #0
   1bcec:	blx	r2
   1bcf0:	ldr	r1, [r4, #16]
   1bcf4:	ldr	r0, [r4, #20]
   1bcf8:	sub	r6, r1, r0
   1bcfc:	cmp	r6, r5
   1bd00:	bcs	1bd44 <flatcc_json_printer_int8_enum_vector_field@@Base+0x284>
   1bd04:	mov	r1, #32
   1bd08:	mov	r2, r6
   1bd0c:	bl	12948 <memset@plt>
   1bd10:	ldr	r0, [r4, #20]
   1bd14:	ldr	r2, [r4, #44]	; 0x2c
   1bd18:	mov	r1, #0
   1bd1c:	add	r0, r0, r6
   1bd20:	str	r0, [r4, #20]
   1bd24:	mov	r0, r4
   1bd28:	blx	r2
   1bd2c:	ldr	r1, [r4, #16]
   1bd30:	ldr	r0, [r4, #20]
   1bd34:	sub	r5, r5, r6
   1bd38:	sub	r6, r1, r0
   1bd3c:	cmp	r5, r6
   1bd40:	bhi	1bd04 <flatcc_json_printer_int8_enum_vector_field@@Base+0x244>
   1bd44:	mov	r1, #32
   1bd48:	mov	r2, r5
   1bd4c:	bl	12948 <memset@plt>
   1bd50:	ldr	r0, [r4, #20]
   1bd54:	add	r0, r0, r5
   1bd58:	str	r0, [r4, #20]
   1bd5c:	b	1bd7c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2bc>
   1bd60:	ldr	r1, [r4, #16]
   1bd64:	cmp	r0, r1
   1bd68:	bcc	1bd7c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2bc>
   1bd6c:	ldr	r2, [r4, #44]	; 0x2c
   1bd70:	mov	r0, r4
   1bd74:	mov	r1, #0
   1bd78:	blx	r2
   1bd7c:	ldrsb	r1, [r7], #1
   1bd80:	mov	r0, r4
   1bd84:	blx	sl
   1bd88:	cmp	r9, #0
   1bd8c:	bne	1bc84 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c4>
   1bd90:	ldrb	r1, [r4, #25]
   1bd94:	ldr	r0, [r4, #20]
   1bd98:	cmp	r1, #0
   1bd9c:	beq	1be5c <flatcc_json_printer_int8_enum_vector_field@@Base+0x39c>
   1bda0:	add	r1, r0, #1
   1bda4:	str	r1, [r4, #20]
   1bda8:	mov	r1, #10
   1bdac:	strb	r1, [r0]
   1bdb0:	ldr	r0, [r4, #32]
   1bdb4:	sub	r2, r0, #1
   1bdb8:	str	r2, [r4, #32]
   1bdbc:	ldrb	r3, [r4, #25]
   1bdc0:	ldr	r0, [r4, #20]
   1bdc4:	ldr	r1, [r4, #16]
   1bdc8:	mla	r7, r2, r3, r0
   1bdcc:	mul	r5, r2, r3
   1bdd0:	cmp	r7, r1
   1bdd4:	bls	1be44 <flatcc_json_printer_int8_enum_vector_field@@Base+0x384>
   1bdd8:	cmp	r0, r1
   1bddc:	bcc	1bdf8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x338>
   1bde0:	ldr	r2, [r4, #44]	; 0x2c
   1bde4:	mov	r0, r4
   1bde8:	mov	r1, #0
   1bdec:	blx	r2
   1bdf0:	ldr	r1, [r4, #16]
   1bdf4:	ldr	r0, [r4, #20]
   1bdf8:	sub	r6, r1, r0
   1bdfc:	cmp	r6, r5
   1be00:	bcs	1be44 <flatcc_json_printer_int8_enum_vector_field@@Base+0x384>
   1be04:	mov	r1, #32
   1be08:	mov	r2, r6
   1be0c:	bl	12948 <memset@plt>
   1be10:	ldr	r0, [r4, #20]
   1be14:	ldr	r2, [r4, #44]	; 0x2c
   1be18:	mov	r1, #0
   1be1c:	add	r0, r0, r6
   1be20:	str	r0, [r4, #20]
   1be24:	mov	r0, r4
   1be28:	blx	r2
   1be2c:	ldr	r1, [r4, #16]
   1be30:	ldr	r0, [r4, #20]
   1be34:	sub	r5, r5, r6
   1be38:	sub	r6, r1, r0
   1be3c:	cmp	r5, r6
   1be40:	bhi	1be04 <flatcc_json_printer_int8_enum_vector_field@@Base+0x344>
   1be44:	mov	r1, #32
   1be48:	mov	r2, r5
   1be4c:	bl	12948 <memset@plt>
   1be50:	ldr	r0, [r4, #20]
   1be54:	add	r0, r0, r5
   1be58:	str	r0, [r4, #20]
   1be5c:	add	r1, r0, #1
   1be60:	str	r1, [r4, #20]
   1be64:	mov	r1, #93	; 0x5d
   1be68:	strb	r1, [r0]
   1be6c:	sub	sp, fp, #28
   1be70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001be74 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1be74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be78:	add	fp, sp, #28
   1be7c:	sub	sp, sp, #4
   1be80:	mov	r4, r0
   1be84:	ldrb	r0, [r0, #27]
   1be88:	cmp	r0, #0
   1be8c:	beq	1bea0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   1be90:	mov	r0, r4
   1be94:	sub	sp, fp, #28
   1be98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be9c:	b	190f0 <flatcc_json_printer_int16_vector_field@@Base>
   1bea0:	mov	r0, #4
   1bea4:	add	r0, r0, r2, lsl #1
   1bea8:	ldr	r2, [r1, #8]
   1beac:	cmp	r0, r2
   1beb0:	bge	1c220 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3ac>
   1beb4:	ldr	r2, [r1, #4]
   1beb8:	add	r0, r2, r0
   1bebc:	ldrh	r0, [r0]
   1bec0:	cmp	r0, #0
   1bec4:	ldrne	r2, [r1]
   1bec8:	addsne	r8, r2, r0
   1becc:	beq	1c220 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3ac>
   1bed0:	ldr	r0, [r1, #16]
   1bed4:	ldr	sl, [fp, #12]
   1bed8:	ldr	r2, [fp, #8]
   1bedc:	add	r7, r0, #1
   1bee0:	cmp	r0, #0
   1bee4:	str	r7, [r1, #16]
   1bee8:	ldrne	r0, [r4, #20]
   1beec:	addne	r1, r0, #1
   1bef0:	strne	r1, [r4, #20]
   1bef4:	movne	r1, #44	; 0x2c
   1bef8:	strbne	r1, [r0]
   1befc:	mov	r1, r3
   1bf00:	ldr	r0, [r8]
   1bf04:	ldr	r9, [r8, r0]!
   1bf08:	mov	r0, r4
   1bf0c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1bf10:	ldr	r1, [r4, #32]
   1bf14:	ldr	r0, [r4, #20]
   1bf18:	cmp	r9, #0
   1bf1c:	add	r1, r1, #1
   1bf20:	str	r1, [r4, #32]
   1bf24:	add	r1, r0, #1
   1bf28:	str	r1, [r4, #20]
   1bf2c:	mov	r1, #91	; 0x5b
   1bf30:	strb	r1, [r0]
   1bf34:	beq	1c144 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d0>
   1bf38:	ldrb	r1, [r4, #25]
   1bf3c:	ldr	r0, [r4, #20]
   1bf40:	cmp	r1, #0
   1bf44:	beq	1c000 <flatcc_json_printer_int16_enum_vector_field@@Base+0x18c>
   1bf48:	add	r1, r0, #1
   1bf4c:	str	r1, [r4, #20]
   1bf50:	mov	r1, #10
   1bf54:	strb	r1, [r0]
   1bf58:	ldr	r0, [r4, #20]
   1bf5c:	ldrb	r2, [r4, #25]
   1bf60:	ldr	r3, [r4, #32]
   1bf64:	ldr	r1, [r4, #16]
   1bf68:	mla	r7, r3, r2, r0
   1bf6c:	mul	r5, r3, r2
   1bf70:	cmp	r7, r1
   1bf74:	bls	1bfe4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
   1bf78:	cmp	r0, r1
   1bf7c:	bcc	1bf98 <flatcc_json_printer_int16_enum_vector_field@@Base+0x124>
   1bf80:	ldr	r2, [r4, #44]	; 0x2c
   1bf84:	mov	r0, r4
   1bf88:	mov	r1, #0
   1bf8c:	blx	r2
   1bf90:	ldr	r1, [r4, #16]
   1bf94:	ldr	r0, [r4, #20]
   1bf98:	sub	r6, r1, r0
   1bf9c:	cmp	r6, r5
   1bfa0:	bcs	1bfe4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
   1bfa4:	mov	r1, #32
   1bfa8:	mov	r2, r6
   1bfac:	bl	12948 <memset@plt>
   1bfb0:	ldr	r0, [r4, #20]
   1bfb4:	ldr	r2, [r4, #44]	; 0x2c
   1bfb8:	mov	r1, #0
   1bfbc:	add	r0, r0, r6
   1bfc0:	str	r0, [r4, #20]
   1bfc4:	mov	r0, r4
   1bfc8:	blx	r2
   1bfcc:	ldr	r1, [r4, #16]
   1bfd0:	ldr	r0, [r4, #20]
   1bfd4:	sub	r5, r5, r6
   1bfd8:	sub	r6, r1, r0
   1bfdc:	cmp	r5, r6
   1bfe0:	bhi	1bfa4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x130>
   1bfe4:	mov	r1, #32
   1bfe8:	mov	r2, r5
   1bfec:	bl	12948 <memset@plt>
   1bff0:	ldr	r0, [r4, #20]
   1bff4:	add	r0, r0, r5
   1bff8:	str	r0, [r4, #20]
   1bffc:	b	1c01c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   1c000:	ldr	r1, [r4, #16]
   1c004:	cmp	r0, r1
   1c008:	bcc	1c01c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   1c00c:	ldr	r2, [r4, #44]	; 0x2c
   1c010:	mov	r0, r4
   1c014:	mov	r1, #0
   1c018:	blx	r2
   1c01c:	ldrsh	r1, [r8, #4]
   1c020:	mov	r0, r4
   1c024:	blx	sl
   1c028:	subs	r9, r9, #1
   1c02c:	beq	1c144 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d0>
   1c030:	add	r7, r8, #6
   1c034:	mov	r8, #44	; 0x2c
   1c038:	ldr	r0, [r4, #20]
   1c03c:	sub	r9, r9, #1
   1c040:	add	r1, r0, #1
   1c044:	str	r1, [r4, #20]
   1c048:	strb	r8, [r0]
   1c04c:	ldrb	r1, [r4, #25]
   1c050:	ldr	r0, [r4, #20]
   1c054:	cmp	r1, #0
   1c058:	beq	1c114 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a0>
   1c05c:	add	r1, r0, #1
   1c060:	str	r1, [r4, #20]
   1c064:	mov	r1, #10
   1c068:	strb	r1, [r0]
   1c06c:	ldr	r0, [r4, #20]
   1c070:	ldrb	r2, [r4, #25]
   1c074:	ldr	r3, [r4, #32]
   1c078:	ldr	r1, [r4, #16]
   1c07c:	mla	r6, r3, r2, r0
   1c080:	mul	r5, r3, r2
   1c084:	cmp	r6, r1
   1c088:	bls	1c0f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x284>
   1c08c:	cmp	r0, r1
   1c090:	bcc	1c0ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x238>
   1c094:	ldr	r2, [r4, #44]	; 0x2c
   1c098:	mov	r0, r4
   1c09c:	mov	r1, #0
   1c0a0:	blx	r2
   1c0a4:	ldr	r1, [r4, #16]
   1c0a8:	ldr	r0, [r4, #20]
   1c0ac:	sub	r6, r1, r0
   1c0b0:	cmp	r6, r5
   1c0b4:	bcs	1c0f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x284>
   1c0b8:	mov	r1, #32
   1c0bc:	mov	r2, r6
   1c0c0:	bl	12948 <memset@plt>
   1c0c4:	ldr	r0, [r4, #20]
   1c0c8:	ldr	r2, [r4, #44]	; 0x2c
   1c0cc:	mov	r1, #0
   1c0d0:	add	r0, r0, r6
   1c0d4:	str	r0, [r4, #20]
   1c0d8:	mov	r0, r4
   1c0dc:	blx	r2
   1c0e0:	ldr	r1, [r4, #16]
   1c0e4:	ldr	r0, [r4, #20]
   1c0e8:	sub	r5, r5, r6
   1c0ec:	sub	r6, r1, r0
   1c0f0:	cmp	r5, r6
   1c0f4:	bhi	1c0b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x244>
   1c0f8:	mov	r1, #32
   1c0fc:	mov	r2, r5
   1c100:	bl	12948 <memset@plt>
   1c104:	ldr	r0, [r4, #20]
   1c108:	add	r0, r0, r5
   1c10c:	str	r0, [r4, #20]
   1c110:	b	1c130 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2bc>
   1c114:	ldr	r1, [r4, #16]
   1c118:	cmp	r0, r1
   1c11c:	bcc	1c130 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2bc>
   1c120:	ldr	r2, [r4, #44]	; 0x2c
   1c124:	mov	r0, r4
   1c128:	mov	r1, #0
   1c12c:	blx	r2
   1c130:	ldrsh	r1, [r7], #2
   1c134:	mov	r0, r4
   1c138:	blx	sl
   1c13c:	cmp	r9, #0
   1c140:	bne	1c038 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c4>
   1c144:	ldrb	r1, [r4, #25]
   1c148:	ldr	r0, [r4, #20]
   1c14c:	cmp	r1, #0
   1c150:	beq	1c210 <flatcc_json_printer_int16_enum_vector_field@@Base+0x39c>
   1c154:	add	r1, r0, #1
   1c158:	str	r1, [r4, #20]
   1c15c:	mov	r1, #10
   1c160:	strb	r1, [r0]
   1c164:	ldr	r0, [r4, #32]
   1c168:	sub	r2, r0, #1
   1c16c:	str	r2, [r4, #32]
   1c170:	ldrb	r3, [r4, #25]
   1c174:	ldr	r0, [r4, #20]
   1c178:	ldr	r1, [r4, #16]
   1c17c:	mla	r7, r2, r3, r0
   1c180:	mul	r5, r2, r3
   1c184:	cmp	r7, r1
   1c188:	bls	1c1f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x384>
   1c18c:	cmp	r0, r1
   1c190:	bcc	1c1ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x338>
   1c194:	ldr	r2, [r4, #44]	; 0x2c
   1c198:	mov	r0, r4
   1c19c:	mov	r1, #0
   1c1a0:	blx	r2
   1c1a4:	ldr	r1, [r4, #16]
   1c1a8:	ldr	r0, [r4, #20]
   1c1ac:	sub	r6, r1, r0
   1c1b0:	cmp	r6, r5
   1c1b4:	bcs	1c1f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x384>
   1c1b8:	mov	r1, #32
   1c1bc:	mov	r2, r6
   1c1c0:	bl	12948 <memset@plt>
   1c1c4:	ldr	r0, [r4, #20]
   1c1c8:	ldr	r2, [r4, #44]	; 0x2c
   1c1cc:	mov	r1, #0
   1c1d0:	add	r0, r0, r6
   1c1d4:	str	r0, [r4, #20]
   1c1d8:	mov	r0, r4
   1c1dc:	blx	r2
   1c1e0:	ldr	r1, [r4, #16]
   1c1e4:	ldr	r0, [r4, #20]
   1c1e8:	sub	r5, r5, r6
   1c1ec:	sub	r6, r1, r0
   1c1f0:	cmp	r5, r6
   1c1f4:	bhi	1c1b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x344>
   1c1f8:	mov	r1, #32
   1c1fc:	mov	r2, r5
   1c200:	bl	12948 <memset@plt>
   1c204:	ldr	r0, [r4, #20]
   1c208:	add	r0, r0, r5
   1c20c:	str	r0, [r4, #20]
   1c210:	add	r1, r0, #1
   1c214:	str	r1, [r4, #20]
   1c218:	mov	r1, #93	; 0x5d
   1c21c:	strb	r1, [r0]
   1c220:	sub	sp, fp, #28
   1c224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c228 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1c228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c22c:	add	fp, sp, #28
   1c230:	sub	sp, sp, #4
   1c234:	mov	r4, r0
   1c238:	ldrb	r0, [r0, #27]
   1c23c:	cmp	r0, #0
   1c240:	beq	1c254 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   1c244:	mov	r0, r4
   1c248:	sub	sp, fp, #28
   1c24c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c250:	b	194e0 <flatcc_json_printer_int32_vector_field@@Base>
   1c254:	mov	r0, #4
   1c258:	add	r0, r0, r2, lsl #1
   1c25c:	ldr	r2, [r1, #8]
   1c260:	cmp	r0, r2
   1c264:	bge	1c5d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3ac>
   1c268:	ldr	r2, [r1, #4]
   1c26c:	add	r0, r2, r0
   1c270:	ldrh	r0, [r0]
   1c274:	cmp	r0, #0
   1c278:	ldrne	r2, [r1]
   1c27c:	addsne	r8, r2, r0
   1c280:	beq	1c5d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3ac>
   1c284:	ldr	r0, [r1, #16]
   1c288:	ldr	sl, [fp, #12]
   1c28c:	ldr	r2, [fp, #8]
   1c290:	add	r7, r0, #1
   1c294:	cmp	r0, #0
   1c298:	str	r7, [r1, #16]
   1c29c:	ldrne	r0, [r4, #20]
   1c2a0:	addne	r1, r0, #1
   1c2a4:	strne	r1, [r4, #20]
   1c2a8:	movne	r1, #44	; 0x2c
   1c2ac:	strbne	r1, [r0]
   1c2b0:	mov	r1, r3
   1c2b4:	ldr	r0, [r8]
   1c2b8:	ldr	r9, [r8, r0]!
   1c2bc:	mov	r0, r4
   1c2c0:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1c2c4:	ldr	r1, [r4, #32]
   1c2c8:	ldr	r0, [r4, #20]
   1c2cc:	cmp	r9, #0
   1c2d0:	add	r1, r1, #1
   1c2d4:	str	r1, [r4, #32]
   1c2d8:	add	r1, r0, #1
   1c2dc:	str	r1, [r4, #20]
   1c2e0:	mov	r1, #91	; 0x5b
   1c2e4:	strb	r1, [r0]
   1c2e8:	beq	1c4f8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d0>
   1c2ec:	ldrb	r1, [r4, #25]
   1c2f0:	ldr	r0, [r4, #20]
   1c2f4:	cmp	r1, #0
   1c2f8:	beq	1c3b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x18c>
   1c2fc:	add	r1, r0, #1
   1c300:	str	r1, [r4, #20]
   1c304:	mov	r1, #10
   1c308:	strb	r1, [r0]
   1c30c:	ldr	r0, [r4, #20]
   1c310:	ldrb	r2, [r4, #25]
   1c314:	ldr	r3, [r4, #32]
   1c318:	ldr	r1, [r4, #16]
   1c31c:	mla	r7, r3, r2, r0
   1c320:	mul	r5, r3, r2
   1c324:	cmp	r7, r1
   1c328:	bls	1c398 <flatcc_json_printer_int32_enum_vector_field@@Base+0x170>
   1c32c:	cmp	r0, r1
   1c330:	bcc	1c34c <flatcc_json_printer_int32_enum_vector_field@@Base+0x124>
   1c334:	ldr	r2, [r4, #44]	; 0x2c
   1c338:	mov	r0, r4
   1c33c:	mov	r1, #0
   1c340:	blx	r2
   1c344:	ldr	r1, [r4, #16]
   1c348:	ldr	r0, [r4, #20]
   1c34c:	sub	r6, r1, r0
   1c350:	cmp	r6, r5
   1c354:	bcs	1c398 <flatcc_json_printer_int32_enum_vector_field@@Base+0x170>
   1c358:	mov	r1, #32
   1c35c:	mov	r2, r6
   1c360:	bl	12948 <memset@plt>
   1c364:	ldr	r0, [r4, #20]
   1c368:	ldr	r2, [r4, #44]	; 0x2c
   1c36c:	mov	r1, #0
   1c370:	add	r0, r0, r6
   1c374:	str	r0, [r4, #20]
   1c378:	mov	r0, r4
   1c37c:	blx	r2
   1c380:	ldr	r1, [r4, #16]
   1c384:	ldr	r0, [r4, #20]
   1c388:	sub	r5, r5, r6
   1c38c:	sub	r6, r1, r0
   1c390:	cmp	r5, r6
   1c394:	bhi	1c358 <flatcc_json_printer_int32_enum_vector_field@@Base+0x130>
   1c398:	mov	r1, #32
   1c39c:	mov	r2, r5
   1c3a0:	bl	12948 <memset@plt>
   1c3a4:	ldr	r0, [r4, #20]
   1c3a8:	add	r0, r0, r5
   1c3ac:	str	r0, [r4, #20]
   1c3b0:	b	1c3d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   1c3b4:	ldr	r1, [r4, #16]
   1c3b8:	cmp	r0, r1
   1c3bc:	bcc	1c3d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   1c3c0:	ldr	r2, [r4, #44]	; 0x2c
   1c3c4:	mov	r0, r4
   1c3c8:	mov	r1, #0
   1c3cc:	blx	r2
   1c3d0:	ldr	r1, [r8, #4]
   1c3d4:	mov	r0, r4
   1c3d8:	blx	sl
   1c3dc:	subs	r9, r9, #1
   1c3e0:	beq	1c4f8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d0>
   1c3e4:	add	r7, r8, #8
   1c3e8:	mov	r8, #44	; 0x2c
   1c3ec:	ldr	r0, [r4, #20]
   1c3f0:	sub	r9, r9, #1
   1c3f4:	add	r1, r0, #1
   1c3f8:	str	r1, [r4, #20]
   1c3fc:	strb	r8, [r0]
   1c400:	ldrb	r1, [r4, #25]
   1c404:	ldr	r0, [r4, #20]
   1c408:	cmp	r1, #0
   1c40c:	beq	1c4c8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a0>
   1c410:	add	r1, r0, #1
   1c414:	str	r1, [r4, #20]
   1c418:	mov	r1, #10
   1c41c:	strb	r1, [r0]
   1c420:	ldr	r0, [r4, #20]
   1c424:	ldrb	r2, [r4, #25]
   1c428:	ldr	r3, [r4, #32]
   1c42c:	ldr	r1, [r4, #16]
   1c430:	mla	r6, r3, r2, r0
   1c434:	mul	r5, r3, r2
   1c438:	cmp	r6, r1
   1c43c:	bls	1c4ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x284>
   1c440:	cmp	r0, r1
   1c444:	bcc	1c460 <flatcc_json_printer_int32_enum_vector_field@@Base+0x238>
   1c448:	ldr	r2, [r4, #44]	; 0x2c
   1c44c:	mov	r0, r4
   1c450:	mov	r1, #0
   1c454:	blx	r2
   1c458:	ldr	r1, [r4, #16]
   1c45c:	ldr	r0, [r4, #20]
   1c460:	sub	r6, r1, r0
   1c464:	cmp	r6, r5
   1c468:	bcs	1c4ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x284>
   1c46c:	mov	r1, #32
   1c470:	mov	r2, r6
   1c474:	bl	12948 <memset@plt>
   1c478:	ldr	r0, [r4, #20]
   1c47c:	ldr	r2, [r4, #44]	; 0x2c
   1c480:	mov	r1, #0
   1c484:	add	r0, r0, r6
   1c488:	str	r0, [r4, #20]
   1c48c:	mov	r0, r4
   1c490:	blx	r2
   1c494:	ldr	r1, [r4, #16]
   1c498:	ldr	r0, [r4, #20]
   1c49c:	sub	r5, r5, r6
   1c4a0:	sub	r6, r1, r0
   1c4a4:	cmp	r5, r6
   1c4a8:	bhi	1c46c <flatcc_json_printer_int32_enum_vector_field@@Base+0x244>
   1c4ac:	mov	r1, #32
   1c4b0:	mov	r2, r5
   1c4b4:	bl	12948 <memset@plt>
   1c4b8:	ldr	r0, [r4, #20]
   1c4bc:	add	r0, r0, r5
   1c4c0:	str	r0, [r4, #20]
   1c4c4:	b	1c4e4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   1c4c8:	ldr	r1, [r4, #16]
   1c4cc:	cmp	r0, r1
   1c4d0:	bcc	1c4e4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   1c4d4:	ldr	r2, [r4, #44]	; 0x2c
   1c4d8:	mov	r0, r4
   1c4dc:	mov	r1, #0
   1c4e0:	blx	r2
   1c4e4:	ldr	r1, [r7], #4
   1c4e8:	mov	r0, r4
   1c4ec:	blx	sl
   1c4f0:	cmp	r9, #0
   1c4f4:	bne	1c3ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c4>
   1c4f8:	ldrb	r1, [r4, #25]
   1c4fc:	ldr	r0, [r4, #20]
   1c500:	cmp	r1, #0
   1c504:	beq	1c5c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x39c>
   1c508:	add	r1, r0, #1
   1c50c:	str	r1, [r4, #20]
   1c510:	mov	r1, #10
   1c514:	strb	r1, [r0]
   1c518:	ldr	r0, [r4, #32]
   1c51c:	sub	r2, r0, #1
   1c520:	str	r2, [r4, #32]
   1c524:	ldrb	r3, [r4, #25]
   1c528:	ldr	r0, [r4, #20]
   1c52c:	ldr	r1, [r4, #16]
   1c530:	mla	r7, r2, r3, r0
   1c534:	mul	r5, r2, r3
   1c538:	cmp	r7, r1
   1c53c:	bls	1c5ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x384>
   1c540:	cmp	r0, r1
   1c544:	bcc	1c560 <flatcc_json_printer_int32_enum_vector_field@@Base+0x338>
   1c548:	ldr	r2, [r4, #44]	; 0x2c
   1c54c:	mov	r0, r4
   1c550:	mov	r1, #0
   1c554:	blx	r2
   1c558:	ldr	r1, [r4, #16]
   1c55c:	ldr	r0, [r4, #20]
   1c560:	sub	r6, r1, r0
   1c564:	cmp	r6, r5
   1c568:	bcs	1c5ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x384>
   1c56c:	mov	r1, #32
   1c570:	mov	r2, r6
   1c574:	bl	12948 <memset@plt>
   1c578:	ldr	r0, [r4, #20]
   1c57c:	ldr	r2, [r4, #44]	; 0x2c
   1c580:	mov	r1, #0
   1c584:	add	r0, r0, r6
   1c588:	str	r0, [r4, #20]
   1c58c:	mov	r0, r4
   1c590:	blx	r2
   1c594:	ldr	r1, [r4, #16]
   1c598:	ldr	r0, [r4, #20]
   1c59c:	sub	r5, r5, r6
   1c5a0:	sub	r6, r1, r0
   1c5a4:	cmp	r5, r6
   1c5a8:	bhi	1c56c <flatcc_json_printer_int32_enum_vector_field@@Base+0x344>
   1c5ac:	mov	r1, #32
   1c5b0:	mov	r2, r5
   1c5b4:	bl	12948 <memset@plt>
   1c5b8:	ldr	r0, [r4, #20]
   1c5bc:	add	r0, r0, r5
   1c5c0:	str	r0, [r4, #20]
   1c5c4:	add	r1, r0, #1
   1c5c8:	str	r1, [r4, #20]
   1c5cc:	mov	r1, #93	; 0x5d
   1c5d0:	strb	r1, [r0]
   1c5d4:	sub	sp, fp, #28
   1c5d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c5dc <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1c5dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c5e0:	add	fp, sp, #28
   1c5e4:	sub	sp, sp, #4
   1c5e8:	mov	r4, r0
   1c5ec:	ldrb	r0, [r0, #27]
   1c5f0:	cmp	r0, #0
   1c5f4:	beq	1c608 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   1c5f8:	mov	r0, r4
   1c5fc:	sub	sp, fp, #28
   1c600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c604:	b	198c0 <flatcc_json_printer_int64_vector_field@@Base>
   1c608:	mov	r0, #4
   1c60c:	add	r0, r0, r2, lsl #1
   1c610:	ldr	r2, [r1, #8]
   1c614:	cmp	r0, r2
   1c618:	bge	1c98c <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b0>
   1c61c:	ldr	r2, [r1, #4]
   1c620:	add	r0, r2, r0
   1c624:	ldrh	r0, [r0]
   1c628:	cmp	r0, #0
   1c62c:	ldrne	r2, [r1]
   1c630:	addsne	r8, r2, r0
   1c634:	beq	1c98c <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b0>
   1c638:	ldr	r0, [r1, #16]
   1c63c:	ldr	sl, [fp, #12]
   1c640:	ldr	r2, [fp, #8]
   1c644:	add	r7, r0, #1
   1c648:	cmp	r0, #0
   1c64c:	str	r7, [r1, #16]
   1c650:	ldrne	r0, [r4, #20]
   1c654:	addne	r1, r0, #1
   1c658:	strne	r1, [r4, #20]
   1c65c:	movne	r1, #44	; 0x2c
   1c660:	strbne	r1, [r0]
   1c664:	mov	r1, r3
   1c668:	ldr	r0, [r8]
   1c66c:	ldr	r9, [r8, r0]!
   1c670:	mov	r0, r4
   1c674:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1c678:	ldr	r1, [r4, #32]
   1c67c:	ldr	r0, [r4, #20]
   1c680:	cmp	r9, #0
   1c684:	add	r1, r1, #1
   1c688:	str	r1, [r4, #32]
   1c68c:	add	r1, r0, #1
   1c690:	str	r1, [r4, #20]
   1c694:	mov	r1, #91	; 0x5b
   1c698:	strb	r1, [r0]
   1c69c:	beq	1c8b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d4>
   1c6a0:	ldrb	r1, [r4, #25]
   1c6a4:	ldr	r0, [r4, #20]
   1c6a8:	cmp	r1, #0
   1c6ac:	beq	1c768 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18c>
   1c6b0:	add	r1, r0, #1
   1c6b4:	str	r1, [r4, #20]
   1c6b8:	mov	r1, #10
   1c6bc:	strb	r1, [r0]
   1c6c0:	ldr	r0, [r4, #20]
   1c6c4:	ldrb	r2, [r4, #25]
   1c6c8:	ldr	r3, [r4, #32]
   1c6cc:	ldr	r1, [r4, #16]
   1c6d0:	mla	r7, r3, r2, r0
   1c6d4:	mul	r5, r3, r2
   1c6d8:	cmp	r7, r1
   1c6dc:	bls	1c74c <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
   1c6e0:	cmp	r0, r1
   1c6e4:	bcc	1c700 <flatcc_json_printer_int64_enum_vector_field@@Base+0x124>
   1c6e8:	ldr	r2, [r4, #44]	; 0x2c
   1c6ec:	mov	r0, r4
   1c6f0:	mov	r1, #0
   1c6f4:	blx	r2
   1c6f8:	ldr	r1, [r4, #16]
   1c6fc:	ldr	r0, [r4, #20]
   1c700:	sub	r6, r1, r0
   1c704:	cmp	r6, r5
   1c708:	bcs	1c74c <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
   1c70c:	mov	r1, #32
   1c710:	mov	r2, r6
   1c714:	bl	12948 <memset@plt>
   1c718:	ldr	r0, [r4, #20]
   1c71c:	ldr	r2, [r4, #44]	; 0x2c
   1c720:	mov	r1, #0
   1c724:	add	r0, r0, r6
   1c728:	str	r0, [r4, #20]
   1c72c:	mov	r0, r4
   1c730:	blx	r2
   1c734:	ldr	r1, [r4, #16]
   1c738:	ldr	r0, [r4, #20]
   1c73c:	sub	r5, r5, r6
   1c740:	sub	r6, r1, r0
   1c744:	cmp	r5, r6
   1c748:	bhi	1c70c <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   1c74c:	mov	r1, #32
   1c750:	mov	r2, r5
   1c754:	bl	12948 <memset@plt>
   1c758:	ldr	r0, [r4, #20]
   1c75c:	add	r0, r0, r5
   1c760:	str	r0, [r4, #20]
   1c764:	b	1c784 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   1c768:	ldr	r1, [r4, #16]
   1c76c:	cmp	r0, r1
   1c770:	bcc	1c784 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   1c774:	ldr	r2, [r4, #44]	; 0x2c
   1c778:	mov	r0, r4
   1c77c:	mov	r1, #0
   1c780:	blx	r2
   1c784:	ldrd	r2, [r8, #4]
   1c788:	mov	r0, r4
   1c78c:	blx	sl
   1c790:	subs	r9, r9, #1
   1c794:	beq	1c8b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d4>
   1c798:	add	r7, r8, #12
   1c79c:	mov	r8, #44	; 0x2c
   1c7a0:	ldr	r0, [r4, #20]
   1c7a4:	sub	r9, r9, #1
   1c7a8:	add	r1, r0, #1
   1c7ac:	str	r1, [r4, #20]
   1c7b0:	strb	r8, [r0]
   1c7b4:	ldrb	r1, [r4, #25]
   1c7b8:	ldr	r0, [r4, #20]
   1c7bc:	cmp	r1, #0
   1c7c0:	beq	1c87c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a0>
   1c7c4:	add	r1, r0, #1
   1c7c8:	str	r1, [r4, #20]
   1c7cc:	mov	r1, #10
   1c7d0:	strb	r1, [r0]
   1c7d4:	ldr	r0, [r4, #20]
   1c7d8:	ldrb	r2, [r4, #25]
   1c7dc:	ldr	r3, [r4, #32]
   1c7e0:	ldr	r1, [r4, #16]
   1c7e4:	mla	r6, r3, r2, r0
   1c7e8:	mul	r5, r3, r2
   1c7ec:	cmp	r6, r1
   1c7f0:	bls	1c860 <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   1c7f4:	cmp	r0, r1
   1c7f8:	bcc	1c814 <flatcc_json_printer_int64_enum_vector_field@@Base+0x238>
   1c7fc:	ldr	r2, [r4, #44]	; 0x2c
   1c800:	mov	r0, r4
   1c804:	mov	r1, #0
   1c808:	blx	r2
   1c80c:	ldr	r1, [r4, #16]
   1c810:	ldr	r0, [r4, #20]
   1c814:	sub	r6, r1, r0
   1c818:	cmp	r6, r5
   1c81c:	bcs	1c860 <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   1c820:	mov	r1, #32
   1c824:	mov	r2, r6
   1c828:	bl	12948 <memset@plt>
   1c82c:	ldr	r0, [r4, #20]
   1c830:	ldr	r2, [r4, #44]	; 0x2c
   1c834:	mov	r1, #0
   1c838:	add	r0, r0, r6
   1c83c:	str	r0, [r4, #20]
   1c840:	mov	r0, r4
   1c844:	blx	r2
   1c848:	ldr	r1, [r4, #16]
   1c84c:	ldr	r0, [r4, #20]
   1c850:	sub	r5, r5, r6
   1c854:	sub	r6, r1, r0
   1c858:	cmp	r5, r6
   1c85c:	bhi	1c820 <flatcc_json_printer_int64_enum_vector_field@@Base+0x244>
   1c860:	mov	r1, #32
   1c864:	mov	r2, r5
   1c868:	bl	12948 <memset@plt>
   1c86c:	ldr	r0, [r4, #20]
   1c870:	add	r0, r0, r5
   1c874:	str	r0, [r4, #20]
   1c878:	b	1c898 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2bc>
   1c87c:	ldr	r1, [r4, #16]
   1c880:	cmp	r0, r1
   1c884:	bcc	1c898 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2bc>
   1c888:	ldr	r2, [r4, #44]	; 0x2c
   1c88c:	mov	r0, r4
   1c890:	mov	r1, #0
   1c894:	blx	r2
   1c898:	ldrd	r2, [r7]
   1c89c:	mov	r0, r4
   1c8a0:	blx	sl
   1c8a4:	add	r7, r7, #8
   1c8a8:	cmp	r9, #0
   1c8ac:	bne	1c7a0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c4>
   1c8b0:	ldrb	r1, [r4, #25]
   1c8b4:	ldr	r0, [r4, #20]
   1c8b8:	cmp	r1, #0
   1c8bc:	beq	1c97c <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a0>
   1c8c0:	add	r1, r0, #1
   1c8c4:	str	r1, [r4, #20]
   1c8c8:	mov	r1, #10
   1c8cc:	strb	r1, [r0]
   1c8d0:	ldr	r0, [r4, #32]
   1c8d4:	sub	r2, r0, #1
   1c8d8:	str	r2, [r4, #32]
   1c8dc:	ldrb	r3, [r4, #25]
   1c8e0:	ldr	r0, [r4, #20]
   1c8e4:	ldr	r1, [r4, #16]
   1c8e8:	mla	r7, r2, r3, r0
   1c8ec:	mul	r5, r2, r3
   1c8f0:	cmp	r7, r1
   1c8f4:	bls	1c964 <flatcc_json_printer_int64_enum_vector_field@@Base+0x388>
   1c8f8:	cmp	r0, r1
   1c8fc:	bcc	1c918 <flatcc_json_printer_int64_enum_vector_field@@Base+0x33c>
   1c900:	ldr	r2, [r4, #44]	; 0x2c
   1c904:	mov	r0, r4
   1c908:	mov	r1, #0
   1c90c:	blx	r2
   1c910:	ldr	r1, [r4, #16]
   1c914:	ldr	r0, [r4, #20]
   1c918:	sub	r6, r1, r0
   1c91c:	cmp	r6, r5
   1c920:	bcs	1c964 <flatcc_json_printer_int64_enum_vector_field@@Base+0x388>
   1c924:	mov	r1, #32
   1c928:	mov	r2, r6
   1c92c:	bl	12948 <memset@plt>
   1c930:	ldr	r0, [r4, #20]
   1c934:	ldr	r2, [r4, #44]	; 0x2c
   1c938:	mov	r1, #0
   1c93c:	add	r0, r0, r6
   1c940:	str	r0, [r4, #20]
   1c944:	mov	r0, r4
   1c948:	blx	r2
   1c94c:	ldr	r1, [r4, #16]
   1c950:	ldr	r0, [r4, #20]
   1c954:	sub	r5, r5, r6
   1c958:	sub	r6, r1, r0
   1c95c:	cmp	r5, r6
   1c960:	bhi	1c924 <flatcc_json_printer_int64_enum_vector_field@@Base+0x348>
   1c964:	mov	r1, #32
   1c968:	mov	r2, r5
   1c96c:	bl	12948 <memset@plt>
   1c970:	ldr	r0, [r4, #20]
   1c974:	add	r0, r0, r5
   1c978:	str	r0, [r4, #20]
   1c97c:	add	r1, r0, #1
   1c980:	str	r1, [r4, #20]
   1c984:	mov	r1, #93	; 0x5d
   1c988:	strb	r1, [r0]
   1c98c:	sub	sp, fp, #28
   1c990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c994 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1c994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c998:	add	fp, sp, #28
   1c99c:	sub	sp, sp, #4
   1c9a0:	mov	r4, r0
   1c9a4:	ldrb	r0, [r0, #27]
   1c9a8:	cmp	r0, #0
   1c9ac:	beq	1c9c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   1c9b0:	mov	r0, r4
   1c9b4:	sub	sp, fp, #28
   1c9b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c9bc:	b	19cb0 <flatcc_json_printer_bool_vector_field@@Base>
   1c9c0:	mov	r0, #4
   1c9c4:	add	r0, r0, r2, lsl #1
   1c9c8:	ldr	r2, [r1, #8]
   1c9cc:	cmp	r0, r2
   1c9d0:	bge	1cd40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3ac>
   1c9d4:	ldr	r2, [r1, #4]
   1c9d8:	add	r0, r2, r0
   1c9dc:	ldrh	r0, [r0]
   1c9e0:	cmp	r0, #0
   1c9e4:	ldrne	r2, [r1]
   1c9e8:	addsne	r8, r2, r0
   1c9ec:	beq	1cd40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3ac>
   1c9f0:	ldr	r0, [r1, #16]
   1c9f4:	ldr	sl, [fp, #12]
   1c9f8:	ldr	r2, [fp, #8]
   1c9fc:	add	r7, r0, #1
   1ca00:	cmp	r0, #0
   1ca04:	str	r7, [r1, #16]
   1ca08:	ldrne	r0, [r4, #20]
   1ca0c:	addne	r1, r0, #1
   1ca10:	strne	r1, [r4, #20]
   1ca14:	movne	r1, #44	; 0x2c
   1ca18:	strbne	r1, [r0]
   1ca1c:	mov	r1, r3
   1ca20:	ldr	r0, [r8]
   1ca24:	ldr	r9, [r8, r0]!
   1ca28:	mov	r0, r4
   1ca2c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1ca30:	ldr	r1, [r4, #32]
   1ca34:	ldr	r0, [r4, #20]
   1ca38:	cmp	r9, #0
   1ca3c:	add	r1, r1, #1
   1ca40:	str	r1, [r4, #32]
   1ca44:	add	r1, r0, #1
   1ca48:	str	r1, [r4, #20]
   1ca4c:	mov	r1, #91	; 0x5b
   1ca50:	strb	r1, [r0]
   1ca54:	beq	1cc64 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d0>
   1ca58:	ldrb	r1, [r4, #25]
   1ca5c:	ldr	r0, [r4, #20]
   1ca60:	cmp	r1, #0
   1ca64:	beq	1cb20 <flatcc_json_printer_bool_enum_vector_field@@Base+0x18c>
   1ca68:	add	r1, r0, #1
   1ca6c:	str	r1, [r4, #20]
   1ca70:	mov	r1, #10
   1ca74:	strb	r1, [r0]
   1ca78:	ldr	r0, [r4, #20]
   1ca7c:	ldrb	r2, [r4, #25]
   1ca80:	ldr	r3, [r4, #32]
   1ca84:	ldr	r1, [r4, #16]
   1ca88:	mla	r7, r3, r2, r0
   1ca8c:	mul	r5, r3, r2
   1ca90:	cmp	r7, r1
   1ca94:	bls	1cb04 <flatcc_json_printer_bool_enum_vector_field@@Base+0x170>
   1ca98:	cmp	r0, r1
   1ca9c:	bcc	1cab8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x124>
   1caa0:	ldr	r2, [r4, #44]	; 0x2c
   1caa4:	mov	r0, r4
   1caa8:	mov	r1, #0
   1caac:	blx	r2
   1cab0:	ldr	r1, [r4, #16]
   1cab4:	ldr	r0, [r4, #20]
   1cab8:	sub	r6, r1, r0
   1cabc:	cmp	r6, r5
   1cac0:	bcs	1cb04 <flatcc_json_printer_bool_enum_vector_field@@Base+0x170>
   1cac4:	mov	r1, #32
   1cac8:	mov	r2, r6
   1cacc:	bl	12948 <memset@plt>
   1cad0:	ldr	r0, [r4, #20]
   1cad4:	ldr	r2, [r4, #44]	; 0x2c
   1cad8:	mov	r1, #0
   1cadc:	add	r0, r0, r6
   1cae0:	str	r0, [r4, #20]
   1cae4:	mov	r0, r4
   1cae8:	blx	r2
   1caec:	ldr	r1, [r4, #16]
   1caf0:	ldr	r0, [r4, #20]
   1caf4:	sub	r5, r5, r6
   1caf8:	sub	r6, r1, r0
   1cafc:	cmp	r5, r6
   1cb00:	bhi	1cac4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x130>
   1cb04:	mov	r1, #32
   1cb08:	mov	r2, r5
   1cb0c:	bl	12948 <memset@plt>
   1cb10:	ldr	r0, [r4, #20]
   1cb14:	add	r0, r0, r5
   1cb18:	str	r0, [r4, #20]
   1cb1c:	b	1cb3c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   1cb20:	ldr	r1, [r4, #16]
   1cb24:	cmp	r0, r1
   1cb28:	bcc	1cb3c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   1cb2c:	ldr	r2, [r4, #44]	; 0x2c
   1cb30:	mov	r0, r4
   1cb34:	mov	r1, #0
   1cb38:	blx	r2
   1cb3c:	ldrb	r1, [r8, #4]
   1cb40:	mov	r0, r4
   1cb44:	blx	sl
   1cb48:	subs	r9, r9, #1
   1cb4c:	beq	1cc64 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d0>
   1cb50:	add	r7, r8, #5
   1cb54:	mov	r8, #44	; 0x2c
   1cb58:	ldr	r0, [r4, #20]
   1cb5c:	sub	r9, r9, #1
   1cb60:	add	r1, r0, #1
   1cb64:	str	r1, [r4, #20]
   1cb68:	strb	r8, [r0]
   1cb6c:	ldrb	r1, [r4, #25]
   1cb70:	ldr	r0, [r4, #20]
   1cb74:	cmp	r1, #0
   1cb78:	beq	1cc34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a0>
   1cb7c:	add	r1, r0, #1
   1cb80:	str	r1, [r4, #20]
   1cb84:	mov	r1, #10
   1cb88:	strb	r1, [r0]
   1cb8c:	ldr	r0, [r4, #20]
   1cb90:	ldrb	r2, [r4, #25]
   1cb94:	ldr	r3, [r4, #32]
   1cb98:	ldr	r1, [r4, #16]
   1cb9c:	mla	r6, r3, r2, r0
   1cba0:	mul	r5, r3, r2
   1cba4:	cmp	r6, r1
   1cba8:	bls	1cc18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x284>
   1cbac:	cmp	r0, r1
   1cbb0:	bcc	1cbcc <flatcc_json_printer_bool_enum_vector_field@@Base+0x238>
   1cbb4:	ldr	r2, [r4, #44]	; 0x2c
   1cbb8:	mov	r0, r4
   1cbbc:	mov	r1, #0
   1cbc0:	blx	r2
   1cbc4:	ldr	r1, [r4, #16]
   1cbc8:	ldr	r0, [r4, #20]
   1cbcc:	sub	r6, r1, r0
   1cbd0:	cmp	r6, r5
   1cbd4:	bcs	1cc18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x284>
   1cbd8:	mov	r1, #32
   1cbdc:	mov	r2, r6
   1cbe0:	bl	12948 <memset@plt>
   1cbe4:	ldr	r0, [r4, #20]
   1cbe8:	ldr	r2, [r4, #44]	; 0x2c
   1cbec:	mov	r1, #0
   1cbf0:	add	r0, r0, r6
   1cbf4:	str	r0, [r4, #20]
   1cbf8:	mov	r0, r4
   1cbfc:	blx	r2
   1cc00:	ldr	r1, [r4, #16]
   1cc04:	ldr	r0, [r4, #20]
   1cc08:	sub	r5, r5, r6
   1cc0c:	sub	r6, r1, r0
   1cc10:	cmp	r5, r6
   1cc14:	bhi	1cbd8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x244>
   1cc18:	mov	r1, #32
   1cc1c:	mov	r2, r5
   1cc20:	bl	12948 <memset@plt>
   1cc24:	ldr	r0, [r4, #20]
   1cc28:	add	r0, r0, r5
   1cc2c:	str	r0, [r4, #20]
   1cc30:	b	1cc50 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2bc>
   1cc34:	ldr	r1, [r4, #16]
   1cc38:	cmp	r0, r1
   1cc3c:	bcc	1cc50 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2bc>
   1cc40:	ldr	r2, [r4, #44]	; 0x2c
   1cc44:	mov	r0, r4
   1cc48:	mov	r1, #0
   1cc4c:	blx	r2
   1cc50:	ldrb	r1, [r7], #1
   1cc54:	mov	r0, r4
   1cc58:	blx	sl
   1cc5c:	cmp	r9, #0
   1cc60:	bne	1cb58 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c4>
   1cc64:	ldrb	r1, [r4, #25]
   1cc68:	ldr	r0, [r4, #20]
   1cc6c:	cmp	r1, #0
   1cc70:	beq	1cd30 <flatcc_json_printer_bool_enum_vector_field@@Base+0x39c>
   1cc74:	add	r1, r0, #1
   1cc78:	str	r1, [r4, #20]
   1cc7c:	mov	r1, #10
   1cc80:	strb	r1, [r0]
   1cc84:	ldr	r0, [r4, #32]
   1cc88:	sub	r2, r0, #1
   1cc8c:	str	r2, [r4, #32]
   1cc90:	ldrb	r3, [r4, #25]
   1cc94:	ldr	r0, [r4, #20]
   1cc98:	ldr	r1, [r4, #16]
   1cc9c:	mla	r7, r2, r3, r0
   1cca0:	mul	r5, r2, r3
   1cca4:	cmp	r7, r1
   1cca8:	bls	1cd18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x384>
   1ccac:	cmp	r0, r1
   1ccb0:	bcc	1cccc <flatcc_json_printer_bool_enum_vector_field@@Base+0x338>
   1ccb4:	ldr	r2, [r4, #44]	; 0x2c
   1ccb8:	mov	r0, r4
   1ccbc:	mov	r1, #0
   1ccc0:	blx	r2
   1ccc4:	ldr	r1, [r4, #16]
   1ccc8:	ldr	r0, [r4, #20]
   1cccc:	sub	r6, r1, r0
   1ccd0:	cmp	r6, r5
   1ccd4:	bcs	1cd18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x384>
   1ccd8:	mov	r1, #32
   1ccdc:	mov	r2, r6
   1cce0:	bl	12948 <memset@plt>
   1cce4:	ldr	r0, [r4, #20]
   1cce8:	ldr	r2, [r4, #44]	; 0x2c
   1ccec:	mov	r1, #0
   1ccf0:	add	r0, r0, r6
   1ccf4:	str	r0, [r4, #20]
   1ccf8:	mov	r0, r4
   1ccfc:	blx	r2
   1cd00:	ldr	r1, [r4, #16]
   1cd04:	ldr	r0, [r4, #20]
   1cd08:	sub	r5, r5, r6
   1cd0c:	sub	r6, r1, r0
   1cd10:	cmp	r5, r6
   1cd14:	bhi	1ccd8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x344>
   1cd18:	mov	r1, #32
   1cd1c:	mov	r2, r5
   1cd20:	bl	12948 <memset@plt>
   1cd24:	ldr	r0, [r4, #20]
   1cd28:	add	r0, r0, r5
   1cd2c:	str	r0, [r4, #20]
   1cd30:	add	r1, r0, #1
   1cd34:	str	r1, [r4, #20]
   1cd38:	mov	r1, #93	; 0x5d
   1cd3c:	strb	r1, [r0]
   1cd40:	sub	sp, fp, #28
   1cd44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cd48 <flatcc_json_printer_struct_vector_field@@Base>:
   1cd48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd4c:	add	fp, sp, #28
   1cd50:	sub	sp, sp, #4
   1cd54:	mov	r4, r0
   1cd58:	mov	r0, #4
   1cd5c:	add	r0, r0, r2, lsl #1
   1cd60:	ldr	r2, [r1, #8]
   1cd64:	cmp	r0, r2
   1cd68:	bge	1d2d4 <flatcc_json_printer_struct_vector_field@@Base+0x58c>
   1cd6c:	ldr	r2, [r1, #4]
   1cd70:	add	r0, r2, r0
   1cd74:	ldrh	r0, [r0]
   1cd78:	cmp	r0, #0
   1cd7c:	ldrne	r2, [r1]
   1cd80:	addsne	r6, r2, r0
   1cd84:	beq	1d2d4 <flatcc_json_printer_struct_vector_field@@Base+0x58c>
   1cd88:	ldr	r0, [r1, #16]
   1cd8c:	ldr	r2, [fp, #8]
   1cd90:	add	r7, r0, #1
   1cd94:	cmp	r0, #0
   1cd98:	str	r7, [r1, #16]
   1cd9c:	ldrne	r0, [r4, #20]
   1cda0:	addne	r1, r0, #1
   1cda4:	strne	r1, [r4, #20]
   1cda8:	movne	r1, #44	; 0x2c
   1cdac:	strbne	r1, [r0]
   1cdb0:	mov	r1, r3
   1cdb4:	ldr	r0, [r6]
   1cdb8:	ldr	r5, [r6, r0]!
   1cdbc:	mov	r0, r4
   1cdc0:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1cdc4:	ldr	r1, [r4, #32]
   1cdc8:	ldr	r0, [r4, #20]
   1cdcc:	cmp	r5, #0
   1cdd0:	add	r1, r1, #1
   1cdd4:	str	r1, [r4, #32]
   1cdd8:	add	r1, r0, #1
   1cddc:	str	r1, [r4, #20]
   1cde0:	mov	r1, #91	; 0x5b
   1cde4:	strb	r1, [r0]
   1cde8:	beq	1d1f8 <flatcc_json_printer_struct_vector_field@@Base+0x4b0>
   1cdec:	ldrb	r1, [r4, #25]
   1cdf0:	ldr	r0, [r4, #20]
   1cdf4:	add	r9, r6, #4
   1cdf8:	cmp	r1, #0
   1cdfc:	beq	1ceb8 <flatcc_json_printer_struct_vector_field@@Base+0x170>
   1ce00:	add	r1, r0, #1
   1ce04:	str	r1, [r4, #20]
   1ce08:	mov	r1, #10
   1ce0c:	strb	r1, [r0]
   1ce10:	ldr	r0, [r4, #20]
   1ce14:	ldrb	r2, [r4, #25]
   1ce18:	ldr	r3, [r4, #32]
   1ce1c:	ldr	r1, [r4, #16]
   1ce20:	mla	r7, r3, r2, r0
   1ce24:	mul	r6, r3, r2
   1ce28:	cmp	r7, r1
   1ce2c:	bls	1ce9c <flatcc_json_printer_struct_vector_field@@Base+0x154>
   1ce30:	cmp	r0, r1
   1ce34:	bcc	1ce50 <flatcc_json_printer_struct_vector_field@@Base+0x108>
   1ce38:	ldr	r2, [r4, #44]	; 0x2c
   1ce3c:	mov	r0, r4
   1ce40:	mov	r1, #0
   1ce44:	blx	r2
   1ce48:	ldr	r1, [r4, #16]
   1ce4c:	ldr	r0, [r4, #20]
   1ce50:	sub	r7, r1, r0
   1ce54:	cmp	r7, r6
   1ce58:	bcs	1ce9c <flatcc_json_printer_struct_vector_field@@Base+0x154>
   1ce5c:	mov	r1, #32
   1ce60:	mov	r2, r7
   1ce64:	bl	12948 <memset@plt>
   1ce68:	ldr	r0, [r4, #20]
   1ce6c:	ldr	r2, [r4, #44]	; 0x2c
   1ce70:	mov	r1, #0
   1ce74:	add	r0, r0, r7
   1ce78:	str	r0, [r4, #20]
   1ce7c:	mov	r0, r4
   1ce80:	blx	r2
   1ce84:	ldr	r1, [r4, #16]
   1ce88:	ldr	r0, [r4, #20]
   1ce8c:	sub	r6, r6, r7
   1ce90:	sub	r7, r1, r0
   1ce94:	cmp	r6, r7
   1ce98:	bhi	1ce5c <flatcc_json_printer_struct_vector_field@@Base+0x114>
   1ce9c:	mov	r1, #32
   1cea0:	mov	r2, r6
   1cea4:	bl	12948 <memset@plt>
   1cea8:	ldr	r0, [r4, #20]
   1ceac:	add	r0, r0, r6
   1ceb0:	str	r0, [r4, #20]
   1ceb4:	b	1ced8 <flatcc_json_printer_struct_vector_field@@Base+0x190>
   1ceb8:	ldr	r1, [r4, #16]
   1cebc:	cmp	r0, r1
   1cec0:	bcc	1ced8 <flatcc_json_printer_struct_vector_field@@Base+0x190>
   1cec4:	ldr	r2, [r4, #44]	; 0x2c
   1cec8:	mov	r0, r4
   1cecc:	mov	r1, #0
   1ced0:	blx	r2
   1ced4:	ldr	r0, [r4, #20]
   1ced8:	add	r1, r0, #1
   1cedc:	ldr	r2, [fp, #16]
   1cee0:	str	r1, [r4, #20]
   1cee4:	ldr	r1, [r4, #32]
   1cee8:	add	r1, r1, #1
   1ceec:	str	r1, [r4, #32]
   1cef0:	mov	r1, #123	; 0x7b
   1cef4:	strb	r1, [r0]
   1cef8:	mov	r0, r4
   1cefc:	mov	r1, r9
   1cf00:	blx	r2
   1cf04:	ldrb	r1, [r4, #25]
   1cf08:	ldr	r0, [r4, #20]
   1cf0c:	cmp	r1, #0
   1cf10:	beq	1cfd0 <flatcc_json_printer_struct_vector_field@@Base+0x288>
   1cf14:	add	r1, r0, #1
   1cf18:	str	r1, [r4, #20]
   1cf1c:	mov	r1, #10
   1cf20:	strb	r1, [r0]
   1cf24:	ldr	r0, [r4, #32]
   1cf28:	sub	r2, r0, #1
   1cf2c:	str	r2, [r4, #32]
   1cf30:	ldrb	r3, [r4, #25]
   1cf34:	ldr	r0, [r4, #20]
   1cf38:	ldr	r1, [r4, #16]
   1cf3c:	mla	r7, r2, r3, r0
   1cf40:	mul	r6, r2, r3
   1cf44:	cmp	r7, r1
   1cf48:	bls	1cfb8 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   1cf4c:	cmp	r0, r1
   1cf50:	bcc	1cf6c <flatcc_json_printer_struct_vector_field@@Base+0x224>
   1cf54:	ldr	r2, [r4, #44]	; 0x2c
   1cf58:	mov	r0, r4
   1cf5c:	mov	r1, #0
   1cf60:	blx	r2
   1cf64:	ldr	r1, [r4, #16]
   1cf68:	ldr	r0, [r4, #20]
   1cf6c:	sub	r7, r1, r0
   1cf70:	cmp	r7, r6
   1cf74:	bcs	1cfb8 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   1cf78:	mov	r1, #32
   1cf7c:	mov	r2, r7
   1cf80:	bl	12948 <memset@plt>
   1cf84:	ldr	r0, [r4, #20]
   1cf88:	ldr	r2, [r4, #44]	; 0x2c
   1cf8c:	mov	r1, #0
   1cf90:	add	r0, r0, r7
   1cf94:	str	r0, [r4, #20]
   1cf98:	mov	r0, r4
   1cf9c:	blx	r2
   1cfa0:	ldr	r1, [r4, #16]
   1cfa4:	ldr	r0, [r4, #20]
   1cfa8:	sub	r6, r6, r7
   1cfac:	sub	r7, r1, r0
   1cfb0:	cmp	r6, r7
   1cfb4:	bhi	1cf78 <flatcc_json_printer_struct_vector_field@@Base+0x230>
   1cfb8:	mov	r1, #32
   1cfbc:	mov	r2, r6
   1cfc0:	bl	12948 <memset@plt>
   1cfc4:	ldr	r0, [r4, #20]
   1cfc8:	add	r0, r0, r6
   1cfcc:	str	r0, [r4, #20]
   1cfd0:	add	r1, r0, #1
   1cfd4:	mov	sl, #125	; 0x7d
   1cfd8:	subs	r5, r5, #1
   1cfdc:	str	r1, [r4, #20]
   1cfe0:	strb	sl, [r0]
   1cfe4:	beq	1d1f8 <flatcc_json_printer_struct_vector_field@@Base+0x4b0>
   1cfe8:	mov	r8, #10
   1cfec:	ldr	r0, [r4, #20]
   1cff0:	add	r1, r0, #1
   1cff4:	str	r1, [r4, #20]
   1cff8:	mov	r1, #44	; 0x2c
   1cffc:	strb	r1, [r0]
   1d000:	ldr	r0, [fp, #12]
   1d004:	ldrb	r1, [r4, #25]
   1d008:	add	r9, r9, r0
   1d00c:	ldr	r0, [r4, #20]
   1d010:	cmp	r1, #0
   1d014:	beq	1d0cc <flatcc_json_printer_struct_vector_field@@Base+0x384>
   1d018:	add	r1, r0, #1
   1d01c:	str	r1, [r4, #20]
   1d020:	strb	r8, [r0]
   1d024:	ldr	r0, [r4, #20]
   1d028:	ldrb	r2, [r4, #25]
   1d02c:	ldr	r3, [r4, #32]
   1d030:	ldr	r1, [r4, #16]
   1d034:	mla	r7, r3, r2, r0
   1d038:	mul	r6, r3, r2
   1d03c:	cmp	r7, r1
   1d040:	bls	1d0b0 <flatcc_json_printer_struct_vector_field@@Base+0x368>
   1d044:	cmp	r0, r1
   1d048:	bcc	1d064 <flatcc_json_printer_struct_vector_field@@Base+0x31c>
   1d04c:	ldr	r2, [r4, #44]	; 0x2c
   1d050:	mov	r0, r4
   1d054:	mov	r1, #0
   1d058:	blx	r2
   1d05c:	ldr	r1, [r4, #16]
   1d060:	ldr	r0, [r4, #20]
   1d064:	sub	r7, r1, r0
   1d068:	cmp	r7, r6
   1d06c:	bcs	1d0b0 <flatcc_json_printer_struct_vector_field@@Base+0x368>
   1d070:	mov	r1, #32
   1d074:	mov	r2, r7
   1d078:	bl	12948 <memset@plt>
   1d07c:	ldr	r0, [r4, #20]
   1d080:	ldr	r2, [r4, #44]	; 0x2c
   1d084:	mov	r1, #0
   1d088:	add	r0, r0, r7
   1d08c:	str	r0, [r4, #20]
   1d090:	mov	r0, r4
   1d094:	blx	r2
   1d098:	ldr	r1, [r4, #16]
   1d09c:	ldr	r0, [r4, #20]
   1d0a0:	sub	r6, r6, r7
   1d0a4:	sub	r7, r1, r0
   1d0a8:	cmp	r6, r7
   1d0ac:	bhi	1d070 <flatcc_json_printer_struct_vector_field@@Base+0x328>
   1d0b0:	mov	r1, #32
   1d0b4:	mov	r2, r6
   1d0b8:	bl	12948 <memset@plt>
   1d0bc:	ldr	r0, [r4, #20]
   1d0c0:	add	r0, r0, r6
   1d0c4:	str	r0, [r4, #20]
   1d0c8:	b	1d0ec <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   1d0cc:	ldr	r1, [r4, #16]
   1d0d0:	cmp	r0, r1
   1d0d4:	bcc	1d0ec <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   1d0d8:	ldr	r2, [r4, #44]	; 0x2c
   1d0dc:	mov	r0, r4
   1d0e0:	mov	r1, #0
   1d0e4:	blx	r2
   1d0e8:	ldr	r0, [r4, #20]
   1d0ec:	add	r1, r0, #1
   1d0f0:	ldr	r2, [fp, #16]
   1d0f4:	sub	r5, r5, #1
   1d0f8:	str	r1, [r4, #20]
   1d0fc:	ldr	r1, [r4, #32]
   1d100:	add	r1, r1, #1
   1d104:	str	r1, [r4, #32]
   1d108:	mov	r1, #123	; 0x7b
   1d10c:	strb	r1, [r0]
   1d110:	mov	r0, r4
   1d114:	mov	r1, r9
   1d118:	blx	r2
   1d11c:	ldrb	r1, [r4, #25]
   1d120:	ldr	r0, [r4, #20]
   1d124:	cmp	r1, #0
   1d128:	beq	1d1e4 <flatcc_json_printer_struct_vector_field@@Base+0x49c>
   1d12c:	add	r1, r0, #1
   1d130:	str	r1, [r4, #20]
   1d134:	strb	r8, [r0]
   1d138:	ldr	r0, [r4, #32]
   1d13c:	sub	r2, r0, #1
   1d140:	str	r2, [r4, #32]
   1d144:	ldrb	r3, [r4, #25]
   1d148:	ldr	r0, [r4, #20]
   1d14c:	ldr	r1, [r4, #16]
   1d150:	mla	r7, r2, r3, r0
   1d154:	mul	r6, r2, r3
   1d158:	cmp	r7, r1
   1d15c:	bls	1d1cc <flatcc_json_printer_struct_vector_field@@Base+0x484>
   1d160:	cmp	r0, r1
   1d164:	bcc	1d180 <flatcc_json_printer_struct_vector_field@@Base+0x438>
   1d168:	ldr	r2, [r4, #44]	; 0x2c
   1d16c:	mov	r0, r4
   1d170:	mov	r1, #0
   1d174:	blx	r2
   1d178:	ldr	r1, [r4, #16]
   1d17c:	ldr	r0, [r4, #20]
   1d180:	sub	r7, r1, r0
   1d184:	cmp	r7, r6
   1d188:	bcs	1d1cc <flatcc_json_printer_struct_vector_field@@Base+0x484>
   1d18c:	mov	r1, #32
   1d190:	mov	r2, r7
   1d194:	bl	12948 <memset@plt>
   1d198:	ldr	r0, [r4, #20]
   1d19c:	ldr	r2, [r4, #44]	; 0x2c
   1d1a0:	mov	r1, #0
   1d1a4:	add	r0, r0, r7
   1d1a8:	str	r0, [r4, #20]
   1d1ac:	mov	r0, r4
   1d1b0:	blx	r2
   1d1b4:	ldr	r1, [r4, #16]
   1d1b8:	ldr	r0, [r4, #20]
   1d1bc:	sub	r6, r6, r7
   1d1c0:	sub	r7, r1, r0
   1d1c4:	cmp	r6, r7
   1d1c8:	bhi	1d18c <flatcc_json_printer_struct_vector_field@@Base+0x444>
   1d1cc:	mov	r1, #32
   1d1d0:	mov	r2, r6
   1d1d4:	bl	12948 <memset@plt>
   1d1d8:	ldr	r0, [r4, #20]
   1d1dc:	add	r0, r0, r6
   1d1e0:	str	r0, [r4, #20]
   1d1e4:	add	r1, r0, #1
   1d1e8:	cmp	r5, #0
   1d1ec:	str	r1, [r4, #20]
   1d1f0:	strb	sl, [r0]
   1d1f4:	bne	1cfec <flatcc_json_printer_struct_vector_field@@Base+0x2a4>
   1d1f8:	ldrb	r1, [r4, #25]
   1d1fc:	ldr	r0, [r4, #20]
   1d200:	cmp	r1, #0
   1d204:	beq	1d2c4 <flatcc_json_printer_struct_vector_field@@Base+0x57c>
   1d208:	add	r1, r0, #1
   1d20c:	str	r1, [r4, #20]
   1d210:	mov	r1, #10
   1d214:	strb	r1, [r0]
   1d218:	ldr	r0, [r4, #32]
   1d21c:	sub	r2, r0, #1
   1d220:	str	r2, [r4, #32]
   1d224:	ldrb	r3, [r4, #25]
   1d228:	ldr	r0, [r4, #20]
   1d22c:	ldr	r1, [r4, #16]
   1d230:	mla	r7, r2, r3, r0
   1d234:	mul	r5, r2, r3
   1d238:	cmp	r7, r1
   1d23c:	bls	1d2ac <flatcc_json_printer_struct_vector_field@@Base+0x564>
   1d240:	cmp	r0, r1
   1d244:	bcc	1d260 <flatcc_json_printer_struct_vector_field@@Base+0x518>
   1d248:	ldr	r2, [r4, #44]	; 0x2c
   1d24c:	mov	r0, r4
   1d250:	mov	r1, #0
   1d254:	blx	r2
   1d258:	ldr	r1, [r4, #16]
   1d25c:	ldr	r0, [r4, #20]
   1d260:	sub	r6, r1, r0
   1d264:	cmp	r6, r5
   1d268:	bcs	1d2ac <flatcc_json_printer_struct_vector_field@@Base+0x564>
   1d26c:	mov	r1, #32
   1d270:	mov	r2, r6
   1d274:	bl	12948 <memset@plt>
   1d278:	ldr	r0, [r4, #20]
   1d27c:	ldr	r2, [r4, #44]	; 0x2c
   1d280:	mov	r1, #0
   1d284:	add	r0, r0, r6
   1d288:	str	r0, [r4, #20]
   1d28c:	mov	r0, r4
   1d290:	blx	r2
   1d294:	ldr	r1, [r4, #16]
   1d298:	ldr	r0, [r4, #20]
   1d29c:	sub	r5, r5, r6
   1d2a0:	sub	r6, r1, r0
   1d2a4:	cmp	r5, r6
   1d2a8:	bhi	1d26c <flatcc_json_printer_struct_vector_field@@Base+0x524>
   1d2ac:	mov	r1, #32
   1d2b0:	mov	r2, r5
   1d2b4:	bl	12948 <memset@plt>
   1d2b8:	ldr	r0, [r4, #20]
   1d2bc:	add	r0, r0, r5
   1d2c0:	str	r0, [r4, #20]
   1d2c4:	add	r1, r0, #1
   1d2c8:	str	r1, [r4, #20]
   1d2cc:	mov	r1, #93	; 0x5d
   1d2d0:	strb	r1, [r0]
   1d2d4:	sub	sp, fp, #28
   1d2d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d2dc <flatcc_json_printer_string_vector_field@@Base>:
   1d2dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2e0:	add	fp, sp, #28
   1d2e4:	sub	sp, sp, #4
   1d2e8:	mov	r4, r0
   1d2ec:	mov	r0, #4
   1d2f0:	add	r0, r0, r2, lsl #1
   1d2f4:	ldr	r2, [r1, #8]
   1d2f8:	cmp	r0, r2
   1d2fc:	bge	1d684 <flatcc_json_printer_string_vector_field@@Base+0x3a8>
   1d300:	ldr	r2, [r1, #4]
   1d304:	add	r0, r2, r0
   1d308:	ldrh	r0, [r0]
   1d30c:	cmp	r0, #0
   1d310:	ldrne	r2, [r1]
   1d314:	addsne	r5, r2, r0
   1d318:	beq	1d684 <flatcc_json_printer_string_vector_field@@Base+0x3a8>
   1d31c:	ldr	r0, [r1, #16]
   1d320:	ldr	r2, [fp, #8]
   1d324:	add	r7, r0, #1
   1d328:	cmp	r0, #0
   1d32c:	str	r7, [r1, #16]
   1d330:	ldrne	r0, [r4, #20]
   1d334:	addne	r1, r0, #1
   1d338:	strne	r1, [r4, #20]
   1d33c:	movne	r1, #44	; 0x2c
   1d340:	strbne	r1, [r0]
   1d344:	mov	r1, r3
   1d348:	ldr	r0, [r5]
   1d34c:	ldr	r8, [r5, r0]!
   1d350:	mov	r0, r4
   1d354:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1d358:	ldr	r1, [r4, #32]
   1d35c:	ldr	r0, [r4, #20]
   1d360:	cmp	r8, #0
   1d364:	add	r1, r1, #1
   1d368:	str	r1, [r4, #32]
   1d36c:	add	r1, r0, #1
   1d370:	str	r1, [r4, #20]
   1d374:	mov	r1, #91	; 0x5b
   1d378:	strb	r1, [r0]
   1d37c:	beq	1d5a8 <flatcc_json_printer_string_vector_field@@Base+0x2cc>
   1d380:	ldrb	r1, [r4, #25]
   1d384:	ldr	r0, [r4, #20]
   1d388:	add	r9, r5, #4
   1d38c:	cmp	r1, #0
   1d390:	beq	1d44c <flatcc_json_printer_string_vector_field@@Base+0x170>
   1d394:	add	r1, r0, #1
   1d398:	str	r1, [r4, #20]
   1d39c:	mov	r1, #10
   1d3a0:	strb	r1, [r0]
   1d3a4:	ldr	r0, [r4, #20]
   1d3a8:	ldrb	r2, [r4, #25]
   1d3ac:	ldr	r3, [r4, #32]
   1d3b0:	ldr	r1, [r4, #16]
   1d3b4:	mla	r7, r3, r2, r0
   1d3b8:	mul	r5, r3, r2
   1d3bc:	cmp	r7, r1
   1d3c0:	bls	1d430 <flatcc_json_printer_string_vector_field@@Base+0x154>
   1d3c4:	cmp	r0, r1
   1d3c8:	bcc	1d3e4 <flatcc_json_printer_string_vector_field@@Base+0x108>
   1d3cc:	ldr	r2, [r4, #44]	; 0x2c
   1d3d0:	mov	r0, r4
   1d3d4:	mov	r1, #0
   1d3d8:	blx	r2
   1d3dc:	ldr	r1, [r4, #16]
   1d3e0:	ldr	r0, [r4, #20]
   1d3e4:	sub	r6, r1, r0
   1d3e8:	cmp	r6, r5
   1d3ec:	bcs	1d430 <flatcc_json_printer_string_vector_field@@Base+0x154>
   1d3f0:	mov	r1, #32
   1d3f4:	mov	r2, r6
   1d3f8:	bl	12948 <memset@plt>
   1d3fc:	ldr	r0, [r4, #20]
   1d400:	ldr	r2, [r4, #44]	; 0x2c
   1d404:	mov	r1, #0
   1d408:	add	r0, r0, r6
   1d40c:	str	r0, [r4, #20]
   1d410:	mov	r0, r4
   1d414:	blx	r2
   1d418:	ldr	r1, [r4, #16]
   1d41c:	ldr	r0, [r4, #20]
   1d420:	sub	r5, r5, r6
   1d424:	sub	r6, r1, r0
   1d428:	cmp	r5, r6
   1d42c:	bhi	1d3f0 <flatcc_json_printer_string_vector_field@@Base+0x114>
   1d430:	mov	r1, #32
   1d434:	mov	r2, r5
   1d438:	bl	12948 <memset@plt>
   1d43c:	ldr	r0, [r4, #20]
   1d440:	add	r0, r0, r5
   1d444:	str	r0, [r4, #20]
   1d448:	b	1d468 <flatcc_json_printer_string_vector_field@@Base+0x18c>
   1d44c:	ldr	r1, [r4, #16]
   1d450:	cmp	r0, r1
   1d454:	bcc	1d468 <flatcc_json_printer_string_vector_field@@Base+0x18c>
   1d458:	ldr	r2, [r4, #44]	; 0x2c
   1d45c:	mov	r0, r4
   1d460:	mov	r1, #0
   1d464:	blx	r2
   1d468:	ldr	r0, [r9]
   1d46c:	mov	r1, r9
   1d470:	ldr	r2, [r1, r0]!
   1d474:	mov	r0, r4
   1d478:	add	r1, r1, #4
   1d47c:	bl	147b4 <flatcc_json_printer_string@@Base+0x4>
   1d480:	subs	r7, r8, #1
   1d484:	beq	1d5a8 <flatcc_json_printer_string_vector_field@@Base+0x2cc>
   1d488:	mov	r8, #44	; 0x2c
   1d48c:	mov	sl, #10
   1d490:	ldr	r0, [r4, #20]
   1d494:	add	r9, r9, #4
   1d498:	sub	r7, r7, #1
   1d49c:	add	r1, r0, #1
   1d4a0:	str	r1, [r4, #20]
   1d4a4:	strb	r8, [r0]
   1d4a8:	ldrb	r1, [r4, #25]
   1d4ac:	ldr	r0, [r4, #20]
   1d4b0:	cmp	r1, #0
   1d4b4:	beq	1d56c <flatcc_json_printer_string_vector_field@@Base+0x290>
   1d4b8:	add	r1, r0, #1
   1d4bc:	str	r1, [r4, #20]
   1d4c0:	strb	sl, [r0]
   1d4c4:	ldr	r0, [r4, #20]
   1d4c8:	ldrb	r2, [r4, #25]
   1d4cc:	ldr	r3, [r4, #32]
   1d4d0:	ldr	r1, [r4, #16]
   1d4d4:	mla	r6, r3, r2, r0
   1d4d8:	mul	r5, r3, r2
   1d4dc:	cmp	r6, r1
   1d4e0:	bls	1d550 <flatcc_json_printer_string_vector_field@@Base+0x274>
   1d4e4:	cmp	r0, r1
   1d4e8:	bcc	1d504 <flatcc_json_printer_string_vector_field@@Base+0x228>
   1d4ec:	ldr	r2, [r4, #44]	; 0x2c
   1d4f0:	mov	r0, r4
   1d4f4:	mov	r1, #0
   1d4f8:	blx	r2
   1d4fc:	ldr	r1, [r4, #16]
   1d500:	ldr	r0, [r4, #20]
   1d504:	sub	r6, r1, r0
   1d508:	cmp	r6, r5
   1d50c:	bcs	1d550 <flatcc_json_printer_string_vector_field@@Base+0x274>
   1d510:	mov	r1, #32
   1d514:	mov	r2, r6
   1d518:	bl	12948 <memset@plt>
   1d51c:	ldr	r0, [r4, #20]
   1d520:	ldr	r2, [r4, #44]	; 0x2c
   1d524:	mov	r1, #0
   1d528:	add	r0, r0, r6
   1d52c:	str	r0, [r4, #20]
   1d530:	mov	r0, r4
   1d534:	blx	r2
   1d538:	ldr	r1, [r4, #16]
   1d53c:	ldr	r0, [r4, #20]
   1d540:	sub	r5, r5, r6
   1d544:	sub	r6, r1, r0
   1d548:	cmp	r5, r6
   1d54c:	bhi	1d510 <flatcc_json_printer_string_vector_field@@Base+0x234>
   1d550:	mov	r1, #32
   1d554:	mov	r2, r5
   1d558:	bl	12948 <memset@plt>
   1d55c:	ldr	r0, [r4, #20]
   1d560:	add	r0, r0, r5
   1d564:	str	r0, [r4, #20]
   1d568:	b	1d588 <flatcc_json_printer_string_vector_field@@Base+0x2ac>
   1d56c:	ldr	r1, [r4, #16]
   1d570:	cmp	r0, r1
   1d574:	bcc	1d588 <flatcc_json_printer_string_vector_field@@Base+0x2ac>
   1d578:	ldr	r2, [r4, #44]	; 0x2c
   1d57c:	mov	r0, r4
   1d580:	mov	r1, #0
   1d584:	blx	r2
   1d588:	ldr	r0, [r9]
   1d58c:	mov	r1, r9
   1d590:	ldr	r2, [r1, r0]!
   1d594:	mov	r0, r4
   1d598:	add	r1, r1, #4
   1d59c:	bl	147b4 <flatcc_json_printer_string@@Base+0x4>
   1d5a0:	cmp	r7, #0
   1d5a4:	bne	1d490 <flatcc_json_printer_string_vector_field@@Base+0x1b4>
   1d5a8:	ldrb	r1, [r4, #25]
   1d5ac:	ldr	r0, [r4, #20]
   1d5b0:	cmp	r1, #0
   1d5b4:	beq	1d674 <flatcc_json_printer_string_vector_field@@Base+0x398>
   1d5b8:	add	r1, r0, #1
   1d5bc:	str	r1, [r4, #20]
   1d5c0:	mov	r1, #10
   1d5c4:	strb	r1, [r0]
   1d5c8:	ldr	r0, [r4, #32]
   1d5cc:	sub	r2, r0, #1
   1d5d0:	str	r2, [r4, #32]
   1d5d4:	ldrb	r3, [r4, #25]
   1d5d8:	ldr	r0, [r4, #20]
   1d5dc:	ldr	r1, [r4, #16]
   1d5e0:	mla	r7, r2, r3, r0
   1d5e4:	mul	r5, r2, r3
   1d5e8:	cmp	r7, r1
   1d5ec:	bls	1d65c <flatcc_json_printer_string_vector_field@@Base+0x380>
   1d5f0:	cmp	r0, r1
   1d5f4:	bcc	1d610 <flatcc_json_printer_string_vector_field@@Base+0x334>
   1d5f8:	ldr	r2, [r4, #44]	; 0x2c
   1d5fc:	mov	r0, r4
   1d600:	mov	r1, #0
   1d604:	blx	r2
   1d608:	ldr	r1, [r4, #16]
   1d60c:	ldr	r0, [r4, #20]
   1d610:	sub	r6, r1, r0
   1d614:	cmp	r6, r5
   1d618:	bcs	1d65c <flatcc_json_printer_string_vector_field@@Base+0x380>
   1d61c:	mov	r1, #32
   1d620:	mov	r2, r6
   1d624:	bl	12948 <memset@plt>
   1d628:	ldr	r0, [r4, #20]
   1d62c:	ldr	r2, [r4, #44]	; 0x2c
   1d630:	mov	r1, #0
   1d634:	add	r0, r0, r6
   1d638:	str	r0, [r4, #20]
   1d63c:	mov	r0, r4
   1d640:	blx	r2
   1d644:	ldr	r1, [r4, #16]
   1d648:	ldr	r0, [r4, #20]
   1d64c:	sub	r5, r5, r6
   1d650:	sub	r6, r1, r0
   1d654:	cmp	r5, r6
   1d658:	bhi	1d61c <flatcc_json_printer_string_vector_field@@Base+0x340>
   1d65c:	mov	r1, #32
   1d660:	mov	r2, r5
   1d664:	bl	12948 <memset@plt>
   1d668:	ldr	r0, [r4, #20]
   1d66c:	add	r0, r0, r5
   1d670:	str	r0, [r4, #20]
   1d674:	add	r1, r0, #1
   1d678:	str	r1, [r4, #20]
   1d67c:	mov	r1, #93	; 0x5d
   1d680:	strb	r1, [r0]
   1d684:	sub	sp, fp, #28
   1d688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d68c <flatcc_json_printer_table_vector_field@@Base>:
   1d68c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d690:	add	fp, sp, #28
   1d694:	sub	sp, sp, #20
   1d698:	mov	sl, r1
   1d69c:	ldr	r1, [r1, #8]
   1d6a0:	mov	r4, r0
   1d6a4:	mov	r0, #4
   1d6a8:	add	r0, r0, r2, lsl #1
   1d6ac:	cmp	r0, r1
   1d6b0:	bge	1db04 <flatcc_json_printer_table_vector_field@@Base+0x478>
   1d6b4:	ldr	r1, [sl, #4]
   1d6b8:	add	r0, r1, r0
   1d6bc:	ldrh	r0, [r0]
   1d6c0:	cmp	r0, #0
   1d6c4:	ldrne	r1, [sl]
   1d6c8:	addsne	r5, r1, r0
   1d6cc:	beq	1db04 <flatcc_json_printer_table_vector_field@@Base+0x478>
   1d6d0:	ldr	r0, [sl, #16]
   1d6d4:	ldr	r2, [fp, #8]
   1d6d8:	add	r1, r0, #1
   1d6dc:	cmp	r0, #0
   1d6e0:	str	r1, [sl, #16]
   1d6e4:	ldrne	r0, [r4, #20]
   1d6e8:	addne	r1, r0, #1
   1d6ec:	strne	r1, [r4, #20]
   1d6f0:	movne	r1, #44	; 0x2c
   1d6f4:	strbne	r1, [r0]
   1d6f8:	mov	r1, r3
   1d6fc:	ldr	r0, [r5]
   1d700:	ldr	r8, [r5, r0]!
   1d704:	mov	r0, r4
   1d708:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1d70c:	ldr	r1, [r4, #32]
   1d710:	ldr	r0, [r4, #20]
   1d714:	cmp	r8, #0
   1d718:	add	r1, r1, #1
   1d71c:	str	r1, [r4, #32]
   1d720:	add	r1, r0, #1
   1d724:	str	r1, [r4, #20]
   1d728:	mov	r1, #91	; 0x5b
   1d72c:	strb	r1, [r0]
   1d730:	beq	1da28 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   1d734:	ldr	r0, [sl, #12]
   1d738:	ldr	r6, [fp, #12]
   1d73c:	add	r5, r5, #4
   1d740:	subs	r0, r0, #1
   1d744:	beq	1d884 <flatcc_json_printer_table_vector_field@@Base+0x1f8>
   1d748:	ldr	r3, [r4, #32]
   1d74c:	ldr	r2, [r4, #20]
   1d750:	ldr	r1, [r5]
   1d754:	add	r3, r3, #1
   1d758:	add	r1, r5, r1
   1d75c:	str	r3, [r4, #32]
   1d760:	add	r3, r2, #1
   1d764:	str	r3, [r4, #20]
   1d768:	mov	r3, #123	; 0x7b
   1d76c:	strb	r3, [r2]
   1d770:	str	r0, [sp, #12]
   1d774:	mov	r0, #0
   1d778:	str	r0, [sp, #16]
   1d77c:	str	r1, [sp]
   1d780:	ldr	r0, [r1]
   1d784:	sub	r2, r1, r0
   1d788:	str	r2, [sp, #4]
   1d78c:	ldrh	r0, [r1, -r0]
   1d790:	mov	r1, sp
   1d794:	str	r0, [sp, #8]
   1d798:	mov	r0, r4
   1d79c:	blx	r6
   1d7a0:	ldrb	r1, [r4, #25]
   1d7a4:	ldr	r0, [r4, #20]
   1d7a8:	cmp	r1, #0
   1d7ac:	beq	1d870 <flatcc_json_printer_table_vector_field@@Base+0x1e4>
   1d7b0:	add	r1, r0, #1
   1d7b4:	str	r1, [r4, #20]
   1d7b8:	mov	r1, #10
   1d7bc:	strb	r1, [r0]
   1d7c0:	ldr	r0, [r4, #32]
   1d7c4:	sub	r2, r0, #1
   1d7c8:	str	r2, [r4, #32]
   1d7cc:	ldrb	r3, [r4, #25]
   1d7d0:	ldr	r0, [r4, #20]
   1d7d4:	ldr	r1, [r4, #16]
   1d7d8:	mla	r7, r2, r3, r0
   1d7dc:	mul	r6, r2, r3
   1d7e0:	cmp	r7, r1
   1d7e4:	bls	1d854 <flatcc_json_printer_table_vector_field@@Base+0x1c8>
   1d7e8:	cmp	r0, r1
   1d7ec:	bcc	1d808 <flatcc_json_printer_table_vector_field@@Base+0x17c>
   1d7f0:	ldr	r2, [r4, #44]	; 0x2c
   1d7f4:	mov	r0, r4
   1d7f8:	mov	r1, #0
   1d7fc:	blx	r2
   1d800:	ldr	r1, [r4, #16]
   1d804:	ldr	r0, [r4, #20]
   1d808:	sub	r7, r1, r0
   1d80c:	cmp	r7, r6
   1d810:	bcs	1d854 <flatcc_json_printer_table_vector_field@@Base+0x1c8>
   1d814:	mov	r1, #32
   1d818:	mov	r2, r7
   1d81c:	bl	12948 <memset@plt>
   1d820:	ldr	r0, [r4, #20]
   1d824:	ldr	r2, [r4, #44]	; 0x2c
   1d828:	mov	r1, #0
   1d82c:	add	r0, r0, r7
   1d830:	str	r0, [r4, #20]
   1d834:	mov	r0, r4
   1d838:	blx	r2
   1d83c:	ldr	r1, [r4, #16]
   1d840:	ldr	r0, [r4, #20]
   1d844:	sub	r6, r6, r7
   1d848:	sub	r7, r1, r0
   1d84c:	cmp	r6, r7
   1d850:	bhi	1d814 <flatcc_json_printer_table_vector_field@@Base+0x188>
   1d854:	mov	r1, #32
   1d858:	mov	r2, r6
   1d85c:	bl	12948 <memset@plt>
   1d860:	ldr	r0, [r4, #20]
   1d864:	add	r0, r0, r6
   1d868:	ldr	r6, [fp, #12]
   1d86c:	str	r0, [r4, #20]
   1d870:	add	r1, r0, #1
   1d874:	str	r1, [r4, #20]
   1d878:	mov	r1, #125	; 0x7d
   1d87c:	strb	r1, [r0]
   1d880:	b	1d894 <flatcc_json_printer_table_vector_field@@Base+0x208>
   1d884:	ldr	r0, [r4, #36]	; 0x24
   1d888:	cmp	r0, #0
   1d88c:	moveq	r0, #2
   1d890:	streq	r0, [r4, #36]	; 0x24
   1d894:	subs	r9, r8, #1
   1d898:	beq	1da28 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   1d89c:	mov	r8, #44	; 0x2c
   1d8a0:	ldr	r0, [r4, #20]
   1d8a4:	sub	r9, r9, #1
   1d8a8:	add	r1, r0, #1
   1d8ac:	str	r1, [r4, #20]
   1d8b0:	strb	r8, [r0]
   1d8b4:	ldr	r0, [sl, #12]
   1d8b8:	ldr	r1, [r5, #4]!
   1d8bc:	subs	r0, r0, #1
   1d8c0:	beq	1d9e0 <flatcc_json_printer_table_vector_field@@Base+0x354>
   1d8c4:	ldr	r3, [r4, #32]
   1d8c8:	ldr	r2, [r4, #20]
   1d8cc:	add	r1, r5, r1
   1d8d0:	add	r3, r3, #1
   1d8d4:	str	r3, [r4, #32]
   1d8d8:	add	r3, r2, #1
   1d8dc:	str	r3, [r4, #20]
   1d8e0:	mov	r3, #123	; 0x7b
   1d8e4:	strb	r3, [r2]
   1d8e8:	str	r0, [sp, #12]
   1d8ec:	mov	r0, #0
   1d8f0:	str	r0, [sp, #16]
   1d8f4:	str	r1, [sp]
   1d8f8:	ldr	r0, [r1]
   1d8fc:	sub	r2, r1, r0
   1d900:	str	r2, [sp, #4]
   1d904:	ldrh	r0, [r1, -r0]
   1d908:	mov	r1, sp
   1d90c:	str	r0, [sp, #8]
   1d910:	mov	r0, r4
   1d914:	blx	r6
   1d918:	ldrb	r1, [r4, #25]
   1d91c:	ldr	r0, [r4, #20]
   1d920:	cmp	r1, #0
   1d924:	beq	1da10 <flatcc_json_printer_table_vector_field@@Base+0x384>
   1d928:	add	r1, r0, #1
   1d92c:	str	r1, [r4, #20]
   1d930:	mov	r1, #10
   1d934:	strb	r1, [r0]
   1d938:	ldr	r0, [r4, #32]
   1d93c:	sub	r2, r0, #1
   1d940:	str	r2, [r4, #32]
   1d944:	ldrb	r3, [r4, #25]
   1d948:	ldr	r0, [r4, #20]
   1d94c:	ldr	r1, [r4, #16]
   1d950:	mla	r6, r2, r3, r0
   1d954:	mul	r7, r2, r3
   1d958:	cmp	r6, r1
   1d95c:	bls	1d9f4 <flatcc_json_printer_table_vector_field@@Base+0x368>
   1d960:	cmp	r0, r1
   1d964:	bcc	1d980 <flatcc_json_printer_table_vector_field@@Base+0x2f4>
   1d968:	ldr	r2, [r4, #44]	; 0x2c
   1d96c:	mov	r0, r4
   1d970:	mov	r1, #0
   1d974:	blx	r2
   1d978:	ldr	r1, [r4, #16]
   1d97c:	ldr	r0, [r4, #20]
   1d980:	sub	r6, r1, r0
   1d984:	cmp	r6, r7
   1d988:	bcs	1d9cc <flatcc_json_printer_table_vector_field@@Base+0x340>
   1d98c:	mov	r1, #32
   1d990:	mov	r2, r6
   1d994:	bl	12948 <memset@plt>
   1d998:	ldr	r0, [r4, #20]
   1d99c:	ldr	r2, [r4, #44]	; 0x2c
   1d9a0:	mov	r1, #0
   1d9a4:	add	r0, r0, r6
   1d9a8:	str	r0, [r4, #20]
   1d9ac:	mov	r0, r4
   1d9b0:	blx	r2
   1d9b4:	ldr	r1, [r4, #16]
   1d9b8:	ldr	r0, [r4, #20]
   1d9bc:	sub	r7, r7, r6
   1d9c0:	sub	r6, r1, r0
   1d9c4:	cmp	r7, r6
   1d9c8:	bhi	1d98c <flatcc_json_printer_table_vector_field@@Base+0x300>
   1d9cc:	ldr	r6, [fp, #12]
   1d9d0:	mov	r1, #32
   1d9d4:	mov	r2, r7
   1d9d8:	bl	12948 <memset@plt>
   1d9dc:	b	1da04 <flatcc_json_printer_table_vector_field@@Base+0x378>
   1d9e0:	ldr	r0, [r4, #36]	; 0x24
   1d9e4:	cmp	r0, #0
   1d9e8:	moveq	r0, #2
   1d9ec:	streq	r0, [r4, #36]	; 0x24
   1d9f0:	b	1da20 <flatcc_json_printer_table_vector_field@@Base+0x394>
   1d9f4:	mov	r1, #32
   1d9f8:	mov	r2, r7
   1d9fc:	bl	12948 <memset@plt>
   1da00:	ldr	r6, [fp, #12]
   1da04:	ldr	r0, [r4, #20]
   1da08:	add	r0, r0, r7
   1da0c:	str	r0, [r4, #20]
   1da10:	add	r1, r0, #1
   1da14:	str	r1, [r4, #20]
   1da18:	mov	r1, #125	; 0x7d
   1da1c:	strb	r1, [r0]
   1da20:	cmp	r9, #0
   1da24:	bne	1d8a0 <flatcc_json_printer_table_vector_field@@Base+0x214>
   1da28:	ldrb	r1, [r4, #25]
   1da2c:	ldr	r0, [r4, #20]
   1da30:	cmp	r1, #0
   1da34:	beq	1daf4 <flatcc_json_printer_table_vector_field@@Base+0x468>
   1da38:	add	r1, r0, #1
   1da3c:	str	r1, [r4, #20]
   1da40:	mov	r1, #10
   1da44:	strb	r1, [r0]
   1da48:	ldr	r0, [r4, #32]
   1da4c:	sub	r2, r0, #1
   1da50:	str	r2, [r4, #32]
   1da54:	ldrb	r3, [r4, #25]
   1da58:	ldr	r0, [r4, #20]
   1da5c:	ldr	r1, [r4, #16]
   1da60:	mla	r7, r2, r3, r0
   1da64:	mul	r5, r2, r3
   1da68:	cmp	r7, r1
   1da6c:	bls	1dadc <flatcc_json_printer_table_vector_field@@Base+0x450>
   1da70:	cmp	r0, r1
   1da74:	bcc	1da90 <flatcc_json_printer_table_vector_field@@Base+0x404>
   1da78:	ldr	r2, [r4, #44]	; 0x2c
   1da7c:	mov	r0, r4
   1da80:	mov	r1, #0
   1da84:	blx	r2
   1da88:	ldr	r1, [r4, #16]
   1da8c:	ldr	r0, [r4, #20]
   1da90:	sub	r6, r1, r0
   1da94:	cmp	r6, r5
   1da98:	bcs	1dadc <flatcc_json_printer_table_vector_field@@Base+0x450>
   1da9c:	mov	r1, #32
   1daa0:	mov	r2, r6
   1daa4:	bl	12948 <memset@plt>
   1daa8:	ldr	r0, [r4, #20]
   1daac:	ldr	r2, [r4, #44]	; 0x2c
   1dab0:	mov	r1, #0
   1dab4:	add	r0, r0, r6
   1dab8:	str	r0, [r4, #20]
   1dabc:	mov	r0, r4
   1dac0:	blx	r2
   1dac4:	ldr	r1, [r4, #16]
   1dac8:	ldr	r0, [r4, #20]
   1dacc:	sub	r5, r5, r6
   1dad0:	sub	r6, r1, r0
   1dad4:	cmp	r5, r6
   1dad8:	bhi	1da9c <flatcc_json_printer_table_vector_field@@Base+0x410>
   1dadc:	mov	r1, #32
   1dae0:	mov	r2, r5
   1dae4:	bl	12948 <memset@plt>
   1dae8:	ldr	r0, [r4, #20]
   1daec:	add	r0, r0, r5
   1daf0:	str	r0, [r4, #20]
   1daf4:	add	r1, r0, #1
   1daf8:	str	r1, [r4, #20]
   1dafc:	mov	r1, #93	; 0x5d
   1db00:	strb	r1, [r0]
   1db04:	sub	sp, fp, #28
   1db08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001db0c <flatcc_json_printer_union_vector_field@@Base>:
   1db0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db10:	add	fp, sp, #28
   1db14:	sub	sp, sp, #140	; 0x8c
   1db18:	mov	r6, r1
   1db1c:	mov	r9, r0
   1db20:	sub	r1, r2, #1
   1db24:	mov	r0, #4
   1db28:	mov	r4, r3
   1db2c:	mov	r5, #0
   1db30:	mov	r8, #0
   1db34:	str	r1, [sp, #8]
   1db38:	add	r3, r0, r1, lsl #1
   1db3c:	ldr	r1, [r6, #8]
   1db40:	cmp	r3, r1
   1db44:	bge	1db64 <flatcc_json_printer_union_vector_field@@Base+0x58>
   1db48:	ldr	r7, [r6, #4]
   1db4c:	mov	r8, #0
   1db50:	add	r3, r7, r3
   1db54:	ldrh	r3, [r3]
   1db58:	cmp	r3, #0
   1db5c:	ldrne	r7, [r6]
   1db60:	addne	r8, r7, r3
   1db64:	ldr	sl, [fp, #8]
   1db68:	add	r0, r0, r2, lsl #1
   1db6c:	cmp	r0, r1
   1db70:	bge	1db8c <flatcc_json_printer_union_vector_field@@Base+0x80>
   1db74:	ldr	r1, [r6, #4]
   1db78:	add	r0, r1, r0
   1db7c:	ldrh	r0, [r0]
   1db80:	cmp	r0, #0
   1db84:	ldrne	r1, [r6]
   1db88:	addne	r5, r1, r0
   1db8c:	ldr	r0, [r6, #12]
   1db90:	cmp	sl, #101	; 0x65
   1db94:	str	r5, [sp, #16]
   1db98:	str	r0, [sp, #24]
   1db9c:	bge	1de94 <flatcc_json_printer_union_vector_field@@Base+0x388>
   1dba0:	add	r5, sp, #32
   1dba4:	mov	r1, r4
   1dba8:	mov	r2, sl
   1dbac:	str	r4, [sp, #12]
   1dbb0:	mov	r0, r5
   1dbb4:	bl	128b8 <memcpy@plt>
   1dbb8:	movw	r0, #29791	; 0x745f
   1dbbc:	cmp	r8, #0
   1dbc0:	mov	r1, #101	; 0x65
   1dbc4:	movt	r0, #28793	; 0x7079
   1dbc8:	str	r0, [r5, sl]
   1dbcc:	add	r0, r5, sl
   1dbd0:	ldr	r5, [sp, #16]
   1dbd4:	strb	r1, [r0, #4]
   1dbd8:	cmpne	r5, #0
   1dbdc:	beq	1de8c <flatcc_json_printer_union_vector_field@@Base+0x380>
   1dbe0:	ldr	r0, [fp, #12]
   1dbe4:	ldr	r2, [sp, #8]
   1dbe8:	add	r1, sl, #5
   1dbec:	add	r3, sp, #32
   1dbf0:	str	r1, [sp]
   1dbf4:	mov	r1, r6
   1dbf8:	str	r0, [sp, #4]
   1dbfc:	mov	r0, r9
   1dc00:	bl	1a838 <flatcc_json_printer_utype_enum_vector_field@@Base>
   1dc04:	ldr	r0, [r6, #16]
   1dc08:	add	r7, r9, #20
   1dc0c:	mov	r2, sl
   1dc10:	add	r1, r0, #1
   1dc14:	cmp	r0, #0
   1dc18:	str	r1, [r6, #16]
   1dc1c:	mov	r6, r5
   1dc20:	ldrne	r0, [r7]
   1dc24:	addne	r1, r0, #1
   1dc28:	strne	r1, [r7]
   1dc2c:	movne	r1, #44	; 0x2c
   1dc30:	strbne	r1, [r0]
   1dc34:	ldr	r1, [sp, #12]
   1dc38:	ldr	r0, [r5]
   1dc3c:	ldr	r5, [r8]
   1dc40:	ldr	r4, [r6, r0]!
   1dc44:	str	r0, [sp, #8]
   1dc48:	mov	r0, r9
   1dc4c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1dc50:	ldr	r1, [r9, #32]
   1dc54:	ldr	r0, [r9, #20]
   1dc58:	cmp	r4, #0
   1dc5c:	add	r1, r1, #1
   1dc60:	str	r1, [r9, #32]
   1dc64:	add	r1, r0, #1
   1dc68:	str	r1, [r9, #20]
   1dc6c:	mov	r1, #91	; 0x5b
   1dc70:	strb	r1, [r0]
   1dc74:	beq	1ddb0 <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   1dc78:	add	r5, r8, r5
   1dc7c:	ldr	r2, [fp, #16]
   1dc80:	ldrb	r0, [r5, #4]
   1dc84:	cmp	r0, #0
   1dc88:	beq	1dcac <flatcc_json_printer_union_vector_field@@Base+0x1a0>
   1dc8c:	add	r1, r6, #4
   1dc90:	mov	r8, r2
   1dc94:	str	r1, [sp, #20]
   1dc98:	strb	r0, [sp, #28]
   1dc9c:	add	r1, sp, #20
   1dca0:	mov	r0, r9
   1dca4:	blx	r2
   1dca8:	b	1dcfc <flatcc_json_printer_union_vector_field@@Base+0x1f0>
   1dcac:	ldr	r0, [r7]
   1dcb0:	mov	r8, r2
   1dcb4:	add	r1, r0, #1
   1dcb8:	str	r1, [r7]
   1dcbc:	mov	r1, #110	; 0x6e
   1dcc0:	strb	r1, [r0]
   1dcc4:	ldr	r0, [r7]
   1dcc8:	add	r1, r0, #1
   1dccc:	str	r1, [r7]
   1dcd0:	mov	r1, #117	; 0x75
   1dcd4:	strb	r1, [r0]
   1dcd8:	ldr	r0, [r7]
   1dcdc:	add	r1, r0, #1
   1dce0:	str	r1, [r7]
   1dce4:	mov	r1, #108	; 0x6c
   1dce8:	strb	r1, [r0]
   1dcec:	ldr	r0, [r7]
   1dcf0:	add	r2, r0, #1
   1dcf4:	str	r2, [r7]
   1dcf8:	strb	r1, [r0]
   1dcfc:	cmp	r4, #1
   1dd00:	beq	1ddb0 <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   1dd04:	ldr	r0, [sp, #16]
   1dd08:	ldr	r1, [sp, #8]
   1dd0c:	add	r5, r5, #5
   1dd10:	rsb	r4, r4, #1
   1dd14:	mov	sl, #44	; 0x2c
   1dd18:	add	r0, r0, r1
   1dd1c:	add	r6, r0, #8
   1dd20:	ldrb	r0, [r5]
   1dd24:	ldr	r1, [r7]
   1dd28:	add	r2, r1, #1
   1dd2c:	cmp	r0, #0
   1dd30:	str	r2, [r7]
   1dd34:	strb	sl, [r1]
   1dd38:	beq	1dd54 <flatcc_json_printer_union_vector_field@@Base+0x248>
   1dd3c:	str	r6, [sp, #20]
   1dd40:	strb	r0, [sp, #28]
   1dd44:	mov	r0, r9
   1dd48:	add	r1, sp, #20
   1dd4c:	blx	r8
   1dd50:	b	1dda0 <flatcc_json_printer_union_vector_field@@Base+0x294>
   1dd54:	ldr	r0, [r7]
   1dd58:	mov	r2, #108	; 0x6c
   1dd5c:	add	r1, r0, #1
   1dd60:	str	r1, [r7]
   1dd64:	mov	r1, #110	; 0x6e
   1dd68:	strb	r1, [r0]
   1dd6c:	ldr	r0, [r7]
   1dd70:	add	r1, r0, #1
   1dd74:	str	r1, [r7]
   1dd78:	mov	r1, #117	; 0x75
   1dd7c:	strb	r1, [r0]
   1dd80:	ldr	r0, [r7]
   1dd84:	add	r1, r0, #1
   1dd88:	str	r1, [r7]
   1dd8c:	strb	r2, [r0]
   1dd90:	ldr	r0, [r7]
   1dd94:	add	r1, r0, #1
   1dd98:	str	r1, [r7]
   1dd9c:	strb	r2, [r0]
   1dda0:	add	r6, r6, #4
   1dda4:	add	r5, r5, #1
   1dda8:	adds	r4, r4, #1
   1ddac:	bne	1dd20 <flatcc_json_printer_union_vector_field@@Base+0x214>
   1ddb0:	ldrb	r1, [r9, #25]
   1ddb4:	ldr	r0, [r9, #20]
   1ddb8:	cmp	r1, #0
   1ddbc:	beq	1de7c <flatcc_json_printer_union_vector_field@@Base+0x370>
   1ddc0:	add	r1, r0, #1
   1ddc4:	str	r1, [r9, #20]
   1ddc8:	mov	r1, #10
   1ddcc:	strb	r1, [r0]
   1ddd0:	ldr	r0, [r9, #32]
   1ddd4:	sub	r2, r0, #1
   1ddd8:	str	r2, [r9, #32]
   1dddc:	ldrb	r3, [r9, #25]
   1dde0:	ldr	r0, [r9, #20]
   1dde4:	ldr	r1, [r9, #16]
   1dde8:	mla	r6, r2, r3, r0
   1ddec:	mul	r5, r2, r3
   1ddf0:	cmp	r6, r1
   1ddf4:	bls	1de64 <flatcc_json_printer_union_vector_field@@Base+0x358>
   1ddf8:	cmp	r0, r1
   1ddfc:	bcc	1de18 <flatcc_json_printer_union_vector_field@@Base+0x30c>
   1de00:	ldr	r2, [r9, #44]	; 0x2c
   1de04:	mov	r0, r9
   1de08:	mov	r1, #0
   1de0c:	blx	r2
   1de10:	ldr	r1, [r9, #16]
   1de14:	ldr	r0, [r9, #20]
   1de18:	sub	r6, r1, r0
   1de1c:	cmp	r6, r5
   1de20:	bcs	1de64 <flatcc_json_printer_union_vector_field@@Base+0x358>
   1de24:	mov	r1, #32
   1de28:	mov	r2, r6
   1de2c:	bl	12948 <memset@plt>
   1de30:	ldr	r0, [r9, #20]
   1de34:	ldr	r2, [r9, #44]	; 0x2c
   1de38:	mov	r1, #0
   1de3c:	add	r0, r0, r6
   1de40:	str	r0, [r9, #20]
   1de44:	mov	r0, r9
   1de48:	blx	r2
   1de4c:	ldr	r1, [r9, #16]
   1de50:	ldr	r0, [r9, #20]
   1de54:	sub	r5, r5, r6
   1de58:	sub	r6, r1, r0
   1de5c:	cmp	r5, r6
   1de60:	bhi	1de24 <flatcc_json_printer_union_vector_field@@Base+0x318>
   1de64:	mov	r1, #32
   1de68:	mov	r2, r5
   1de6c:	bl	12948 <memset@plt>
   1de70:	ldr	r0, [r7]
   1de74:	add	r0, r0, r5
   1de78:	str	r0, [r7]
   1de7c:	add	r1, r0, #1
   1de80:	str	r1, [r7]
   1de84:	mov	r1, #93	; 0x5d
   1de88:	strb	r1, [r0]
   1de8c:	sub	sp, fp, #28
   1de90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de94:	ldr	r0, [r9, #36]	; 0x24
   1de98:	movw	r1, #1070	; 0x42e
   1de9c:	movw	r3, #1145	; 0x479
   1dea0:	movw	r2, #843	; 0x34b
   1dea4:	movt	r1, #2
   1dea8:	movt	r3, #2
   1deac:	cmp	r0, #0
   1deb0:	moveq	r0, #1
   1deb4:	streq	r0, [r9, #36]	; 0x24
   1deb8:	movw	r0, #1043	; 0x413
   1debc:	movt	r0, #2
   1dec0:	bl	1299c <__assert_fail@plt>

0001dec4 <flatcc_json_printer_table_field@@Base>:
   1dec4:	push	{r4, r5, r6, sl, fp, lr}
   1dec8:	add	fp, sp, #16
   1decc:	sub	sp, sp, #24
   1ded0:	mov	r5, r1
   1ded4:	ldr	r1, [r1, #8]
   1ded8:	mov	r4, r0
   1dedc:	mov	r0, #4
   1dee0:	add	r0, r0, r2, lsl #1
   1dee4:	cmp	r0, r1
   1dee8:	bge	1df08 <flatcc_json_printer_table_field@@Base+0x44>
   1deec:	ldr	r1, [r5, #4]
   1def0:	add	r0, r1, r0
   1def4:	ldrh	r0, [r0]
   1def8:	cmp	r0, #0
   1defc:	ldrne	r1, [r5]
   1df00:	addsne	r6, r1, r0
   1df04:	bne	1df10 <flatcc_json_printer_table_field@@Base+0x4c>
   1df08:	sub	sp, fp, #16
   1df0c:	pop	{r4, r5, r6, sl, fp, pc}
   1df10:	ldr	r0, [r5, #16]
   1df14:	ldr	r2, [fp, #8]
   1df18:	add	r1, r0, #1
   1df1c:	cmp	r0, #0
   1df20:	str	r1, [r5, #16]
   1df24:	ldrne	r0, [r4, #20]
   1df28:	addne	r1, r0, #1
   1df2c:	strne	r1, [r4, #20]
   1df30:	movne	r1, #44	; 0x2c
   1df34:	strbne	r1, [r0]
   1df38:	mov	r0, r4
   1df3c:	mov	r1, r3
   1df40:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1df44:	ldr	r0, [r5, #12]
   1df48:	subs	r0, r0, #1
   1df4c:	beq	1e08c <flatcc_json_printer_table_field@@Base+0x1c8>
   1df50:	ldr	r1, [r6]
   1df54:	ldr	r3, [r4, #20]
   1df58:	ldr	r2, [fp, #12]
   1df5c:	add	r1, r6, r1
   1df60:	ldr	r6, [r4, #32]
   1df64:	add	r6, r6, #1
   1df68:	str	r6, [r4, #32]
   1df6c:	add	r6, r3, #1
   1df70:	str	r6, [r4, #20]
   1df74:	mov	r6, #123	; 0x7b
   1df78:	strb	r6, [r3]
   1df7c:	str	r0, [sp, #16]
   1df80:	mov	r0, #0
   1df84:	str	r0, [sp, #20]
   1df88:	str	r1, [sp, #4]
   1df8c:	ldr	r0, [r1]
   1df90:	sub	r3, r1, r0
   1df94:	str	r3, [sp, #8]
   1df98:	ldrh	r0, [r1, -r0]
   1df9c:	add	r1, sp, #4
   1dfa0:	str	r0, [sp, #12]
   1dfa4:	mov	r0, r4
   1dfa8:	blx	r2
   1dfac:	ldrb	r1, [r4, #25]
   1dfb0:	ldr	r0, [r4, #20]
   1dfb4:	cmp	r1, #0
   1dfb8:	beq	1e078 <flatcc_json_printer_table_field@@Base+0x1b4>
   1dfbc:	add	r1, r0, #1
   1dfc0:	str	r1, [r4, #20]
   1dfc4:	mov	r1, #10
   1dfc8:	strb	r1, [r0]
   1dfcc:	ldr	r0, [r4, #32]
   1dfd0:	sub	r2, r0, #1
   1dfd4:	str	r2, [r4, #32]
   1dfd8:	ldrb	r3, [r4, #25]
   1dfdc:	ldr	r0, [r4, #20]
   1dfe0:	ldr	r1, [r4, #16]
   1dfe4:	mla	r6, r2, r3, r0
   1dfe8:	mul	r5, r2, r3
   1dfec:	cmp	r6, r1
   1dff0:	bls	1e060 <flatcc_json_printer_table_field@@Base+0x19c>
   1dff4:	cmp	r0, r1
   1dff8:	bcc	1e014 <flatcc_json_printer_table_field@@Base+0x150>
   1dffc:	ldr	r2, [r4, #44]	; 0x2c
   1e000:	mov	r0, r4
   1e004:	mov	r1, #0
   1e008:	blx	r2
   1e00c:	ldr	r1, [r4, #16]
   1e010:	ldr	r0, [r4, #20]
   1e014:	sub	r6, r1, r0
   1e018:	cmp	r6, r5
   1e01c:	bcs	1e060 <flatcc_json_printer_table_field@@Base+0x19c>
   1e020:	mov	r1, #32
   1e024:	mov	r2, r6
   1e028:	bl	12948 <memset@plt>
   1e02c:	ldr	r0, [r4, #20]
   1e030:	ldr	r2, [r4, #44]	; 0x2c
   1e034:	mov	r1, #0
   1e038:	add	r0, r0, r6
   1e03c:	str	r0, [r4, #20]
   1e040:	mov	r0, r4
   1e044:	blx	r2
   1e048:	ldr	r1, [r4, #16]
   1e04c:	ldr	r0, [r4, #20]
   1e050:	sub	r5, r5, r6
   1e054:	sub	r6, r1, r0
   1e058:	cmp	r5, r6
   1e05c:	bhi	1e020 <flatcc_json_printer_table_field@@Base+0x15c>
   1e060:	mov	r1, #32
   1e064:	mov	r2, r5
   1e068:	bl	12948 <memset@plt>
   1e06c:	ldr	r0, [r4, #20]
   1e070:	add	r0, r0, r5
   1e074:	str	r0, [r4, #20]
   1e078:	add	r1, r0, #1
   1e07c:	str	r1, [r4, #20]
   1e080:	mov	r1, #125	; 0x7d
   1e084:	strb	r1, [r0]
   1e088:	b	1df08 <flatcc_json_printer_table_field@@Base+0x44>
   1e08c:	ldr	r0, [r4, #36]	; 0x24
   1e090:	cmp	r0, #0
   1e094:	moveq	r0, #2
   1e098:	streq	r0, [r4, #36]	; 0x24
   1e09c:	b	1df08 <flatcc_json_printer_table_field@@Base+0x44>

0001e0a0 <flatcc_json_printer_union_field@@Base>:
   1e0a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e0a4:	add	fp, sp, #28
   1e0a8:	sub	sp, sp, #20
   1e0ac:	mov	r9, r1
   1e0b0:	mov	r4, r0
   1e0b4:	mov	r0, #2
   1e0b8:	mov	r8, r3
   1e0bc:	lsl	r1, r2, #1
   1e0c0:	add	r3, r0, r2, lsl #1
   1e0c4:	ldr	r2, [r9, #8]
   1e0c8:	mov	r0, #0
   1e0cc:	cmp	r3, r2
   1e0d0:	bge	1e0ec <flatcc_json_printer_union_field@@Base+0x4c>
   1e0d4:	ldr	r7, [r9, #4]
   1e0d8:	add	r3, r7, r3
   1e0dc:	ldrh	r3, [r3]
   1e0e0:	cmp	r3, #0
   1e0e4:	ldrne	r0, [r9]
   1e0e8:	addne	r0, r0, r3
   1e0ec:	add	r1, r1, #4
   1e0f0:	cmp	r1, r2
   1e0f4:	bge	1e11c <flatcc_json_printer_union_field@@Base+0x7c>
   1e0f8:	ldr	r2, [r9, #4]
   1e0fc:	add	r1, r2, r1
   1e100:	ldrh	r1, [r1]
   1e104:	cmp	r1, #0
   1e108:	beq	1e11c <flatcc_json_printer_union_field@@Base+0x7c>
   1e10c:	cmp	r0, #0
   1e110:	ldrne	r2, [r9]
   1e114:	addsne	r2, r2, r1
   1e118:	bne	1e124 <flatcc_json_printer_union_field@@Base+0x84>
   1e11c:	sub	sp, fp, #28
   1e120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e124:	ldrb	r3, [r0]
   1e128:	ldr	r0, [r9, #16]
   1e12c:	ldr	r7, [fp, #8]
   1e130:	str	r2, [sp, #4]
   1e134:	add	r1, r0, #1
   1e138:	cmp	r0, #0
   1e13c:	str	r3, [sp]
   1e140:	str	r1, [r9, #16]
   1e144:	ldrne	r0, [r4, #20]
   1e148:	addne	r1, r0, #1
   1e14c:	strne	r1, [r4, #20]
   1e150:	movne	r1, #44	; 0x2c
   1e154:	strbne	r1, [r0]
   1e158:	ldrb	r1, [r4, #25]
   1e15c:	ldr	r0, [r4, #20]
   1e160:	cmp	r1, #0
   1e164:	beq	1e228 <flatcc_json_printer_union_field@@Base+0x188>
   1e168:	add	r1, r0, #1
   1e16c:	mov	sl, r4
   1e170:	str	r1, [r4, #20]
   1e174:	mov	r1, #10
   1e178:	strb	r1, [r0]
   1e17c:	ldr	r1, [sl, #16]!
   1e180:	ldr	r0, [r4, #20]
   1e184:	ldrb	r2, [sl, #9]
   1e188:	ldr	r3, [sl, #16]
   1e18c:	mla	r6, r3, r2, r0
   1e190:	mul	r7, r3, r2
   1e194:	cmp	r6, r1
   1e198:	bls	1e208 <flatcc_json_printer_union_field@@Base+0x168>
   1e19c:	cmp	r0, r1
   1e1a0:	bcc	1e1bc <flatcc_json_printer_union_field@@Base+0x11c>
   1e1a4:	ldr	r2, [r4, #44]	; 0x2c
   1e1a8:	mov	r0, r4
   1e1ac:	mov	r1, #0
   1e1b0:	blx	r2
   1e1b4:	ldr	r1, [r4, #16]
   1e1b8:	ldr	r0, [r4, #20]
   1e1bc:	sub	r5, r1, r0
   1e1c0:	cmp	r5, r7
   1e1c4:	bcs	1e208 <flatcc_json_printer_union_field@@Base+0x168>
   1e1c8:	mov	r1, #32
   1e1cc:	mov	r2, r5
   1e1d0:	bl	12948 <memset@plt>
   1e1d4:	ldr	r0, [r4, #20]
   1e1d8:	ldr	r2, [r4, #44]	; 0x2c
   1e1dc:	mov	r1, #0
   1e1e0:	add	r0, r0, r5
   1e1e4:	str	r0, [r4, #20]
   1e1e8:	mov	r0, r4
   1e1ec:	blx	r2
   1e1f0:	ldr	r1, [r4, #16]
   1e1f4:	ldr	r0, [r4, #20]
   1e1f8:	sub	r7, r7, r5
   1e1fc:	sub	r5, r1, r0
   1e200:	cmp	r7, r5
   1e204:	bhi	1e1c8 <flatcc_json_printer_union_field@@Base+0x128>
   1e208:	mov	r1, #32
   1e20c:	mov	r2, r7
   1e210:	bl	12948 <memset@plt>
   1e214:	ldr	r0, [r4, #20]
   1e218:	add	r0, r0, r7
   1e21c:	ldr	r7, [fp, #8]
   1e220:	str	r0, [r4, #20]
   1e224:	b	1e24c <flatcc_json_printer_union_field@@Base+0x1ac>
   1e228:	mov	sl, r4
   1e22c:	ldr	r1, [sl, #16]!
   1e230:	cmp	r0, r1
   1e234:	bcc	1e24c <flatcc_json_printer_union_field@@Base+0x1ac>
   1e238:	ldr	r2, [r4, #44]	; 0x2c
   1e23c:	mov	r0, r4
   1e240:	mov	r1, #0
   1e244:	blx	r2
   1e248:	ldr	r0, [r4, #20]
   1e24c:	mov	r1, #34	; 0x22
   1e250:	strb	r1, [r0]
   1e254:	ldrb	r2, [r4, #26]
   1e258:	ldr	r0, [r4, #20]
   1e25c:	ldr	r1, [r4, #16]
   1e260:	cmp	r2, #0
   1e264:	addeq	r0, r0, #1
   1e268:	add	r2, r0, r7
   1e26c:	str	r0, [r4, #20]
   1e270:	cmp	r2, r1
   1e274:	bcs	1e288 <flatcc_json_printer_union_field@@Base+0x1e8>
   1e278:	mov	r1, r8
   1e27c:	mov	r2, r7
   1e280:	bl	128b8 <memcpy@plt>
   1e284:	b	1e318 <flatcc_json_printer_union_field@@Base+0x278>
   1e288:	mov	r5, r8
   1e28c:	cmp	r0, r1
   1e290:	bcc	1e2ac <flatcc_json_printer_union_field@@Base+0x20c>
   1e294:	ldr	r2, [r4, #44]	; 0x2c
   1e298:	mov	r0, r4
   1e29c:	mov	r1, #0
   1e2a0:	blx	r2
   1e2a4:	ldr	r0, [r4, #20]
   1e2a8:	ldr	r1, [sl]
   1e2ac:	sub	r8, r1, r0
   1e2b0:	mov	r6, r5
   1e2b4:	cmp	r8, r7
   1e2b8:	bcs	1e308 <flatcc_json_printer_union_field@@Base+0x268>
   1e2bc:	ldr	r7, [fp, #8]
   1e2c0:	mov	r6, r5
   1e2c4:	mov	r1, r6
   1e2c8:	mov	r2, r8
   1e2cc:	bl	128b8 <memcpy@plt>
   1e2d0:	ldr	r0, [r4, #20]
   1e2d4:	ldr	r2, [r4, #44]	; 0x2c
   1e2d8:	mov	r1, #0
   1e2dc:	add	r0, r0, r8
   1e2e0:	str	r0, [r4, #20]
   1e2e4:	mov	r0, r4
   1e2e8:	blx	r2
   1e2ec:	ldr	r0, [r4, #20]
   1e2f0:	ldr	r1, [sl]
   1e2f4:	sub	r7, r7, r8
   1e2f8:	add	r6, r6, r8
   1e2fc:	sub	r8, r1, r0
   1e300:	cmp	r7, r8
   1e304:	bhi	1e2c4 <flatcc_json_printer_union_field@@Base+0x224>
   1e308:	mov	r1, r6
   1e30c:	mov	r2, r7
   1e310:	bl	128b8 <memcpy@plt>
   1e314:	mov	r8, r5
   1e318:	ldr	r0, [r4, #20]
   1e31c:	ldr	r1, [r4, #16]
   1e320:	add	r0, r0, r7
   1e324:	add	r2, r0, #5
   1e328:	str	r0, [r4, #20]
   1e32c:	cmp	r2, r1
   1e330:	bcs	1e354 <flatcc_json_printer_union_field@@Base+0x2b4>
   1e334:	mov	r1, #101	; 0x65
   1e338:	mov	r7, #5
   1e33c:	strb	r1, [r0, #4]
   1e340:	movw	r1, #29791	; 0x745f
   1e344:	movt	r1, #28793	; 0x7079
   1e348:	str	r1, [r0]
   1e34c:	ldm	sp, {r5, sl}
   1e350:	b	1e3f0 <flatcc_json_printer_union_field@@Base+0x350>
   1e354:	cmp	r0, r1
   1e358:	bcc	1e374 <flatcc_json_printer_union_field@@Base+0x2d4>
   1e35c:	ldr	r2, [r4, #44]	; 0x2c
   1e360:	mov	r0, r4
   1e364:	mov	r1, #0
   1e368:	blx	r2
   1e36c:	ldr	r0, [r4, #20]
   1e370:	ldr	r1, [sl]
   1e374:	sub	r5, r1, r0
   1e378:	cmp	r5, #4
   1e37c:	bhi	1e3d4 <flatcc_json_printer_union_field@@Base+0x334>
   1e380:	movw	r6, #1347	; 0x543
   1e384:	mov	r7, #5
   1e388:	movt	r6, #2
   1e38c:	mov	r1, r6
   1e390:	mov	r2, r5
   1e394:	bl	128b8 <memcpy@plt>
   1e398:	ldr	r0, [r4, #20]
   1e39c:	ldr	r2, [r4, #44]	; 0x2c
   1e3a0:	mov	r1, #0
   1e3a4:	add	r0, r0, r5
   1e3a8:	str	r0, [r4, #20]
   1e3ac:	mov	r0, r4
   1e3b0:	blx	r2
   1e3b4:	ldr	r0, [r4, #20]
   1e3b8:	ldr	r1, [sl]
   1e3bc:	sub	r7, r7, r5
   1e3c0:	add	r6, r6, r5
   1e3c4:	sub	r5, r1, r0
   1e3c8:	cmp	r7, r5
   1e3cc:	bhi	1e38c <flatcc_json_printer_union_field@@Base+0x2ec>
   1e3d0:	b	1e3e0 <flatcc_json_printer_union_field@@Base+0x340>
   1e3d4:	movw	r6, #1347	; 0x543
   1e3d8:	mov	r7, #5
   1e3dc:	movt	r6, #2
   1e3e0:	ldm	sp, {r5, sl}
   1e3e4:	mov	r1, r6
   1e3e8:	mov	r2, r7
   1e3ec:	bl	128b8 <memcpy@plt>
   1e3f0:	ldr	r0, [r4, #20]
   1e3f4:	add	r1, r0, r7
   1e3f8:	str	r1, [r4, #20]
   1e3fc:	mov	r1, #34	; 0x22
   1e400:	strb	r1, [r0, r7]
   1e404:	ldrb	r0, [r4, #26]
   1e408:	ldr	r1, [r4, #20]
   1e40c:	cmp	r0, #0
   1e410:	addeq	r1, r1, #1
   1e414:	add	r0, r1, #1
   1e418:	str	r0, [r4, #20]
   1e41c:	mov	r0, #58	; 0x3a
   1e420:	strb	r0, [r1]
   1e424:	mov	r1, #32
   1e428:	ldr	r0, [r4, #20]
   1e42c:	strb	r1, [r0]
   1e430:	ldrb	r0, [r4, #25]
   1e434:	ldr	r1, [r4, #20]
   1e438:	cmp	r0, #0
   1e43c:	addne	r1, r1, #1
   1e440:	str	r1, [r4, #20]
   1e444:	ldrb	r0, [r4, #27]
   1e448:	cmp	r0, #0
   1e44c:	beq	1e468 <flatcc_json_printer_union_field@@Base+0x3c8>
   1e450:	mov	r0, r5
   1e454:	bl	14c4c <flatcc_json_printer_uint8@@Base+0x2c>
   1e458:	ldr	r1, [r4, #20]
   1e45c:	add	r0, r1, r0
   1e460:	str	r0, [r4, #20]
   1e464:	b	1e478 <flatcc_json_printer_union_field@@Base+0x3d8>
   1e468:	ldr	r2, [fp, #12]
   1e46c:	mov	r0, r4
   1e470:	mov	r1, r5
   1e474:	blx	r2
   1e478:	ldr	r2, [fp, #8]
   1e47c:	cmp	r5, #0
   1e480:	beq	1e11c <flatcc_json_printer_union_field@@Base+0x7c>
   1e484:	ldr	r0, [r4, #20]
   1e488:	ldr	r6, [fp, #16]
   1e48c:	add	r1, r0, #1
   1e490:	str	r1, [r4, #20]
   1e494:	mov	r1, #44	; 0x2c
   1e498:	strb	r1, [r0]
   1e49c:	mov	r0, r4
   1e4a0:	mov	r1, r8
   1e4a4:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1e4a8:	ldr	r0, [r9, #12]
   1e4ac:	strb	r5, [sp, #16]
   1e4b0:	str	sl, [sp, #8]
   1e4b4:	add	r1, sp, #8
   1e4b8:	str	r0, [sp, #12]
   1e4bc:	mov	r0, r4
   1e4c0:	blx	r6
   1e4c4:	b	1e11c <flatcc_json_printer_union_field@@Base+0x7c>

0001e4c8 <flatcc_json_printer_union_table@@Base>:
   1e4c8:	push	{r4, r5, r6, sl, fp, lr}
   1e4cc:	add	fp, sp, #16
   1e4d0:	sub	sp, sp, #24
   1e4d4:	mov	r4, r0
   1e4d8:	ldr	r0, [r1, #4]
   1e4dc:	subs	r0, r0, #1
   1e4e0:	beq	1e620 <flatcc_json_printer_union_table@@Base+0x158>
   1e4e4:	ldr	r1, [r1]
   1e4e8:	ldr	r6, [r4, #32]
   1e4ec:	ldr	r3, [r1]
   1e4f0:	add	r6, r6, #1
   1e4f4:	add	r1, r1, r3
   1e4f8:	ldr	r3, [r4, #20]
   1e4fc:	str	r6, [r4, #32]
   1e500:	add	r6, r3, #1
   1e504:	str	r6, [r4, #20]
   1e508:	mov	r6, #123	; 0x7b
   1e50c:	strb	r6, [r3]
   1e510:	str	r0, [sp, #16]
   1e514:	mov	r0, #0
   1e518:	str	r0, [sp, #20]
   1e51c:	str	r1, [sp, #4]
   1e520:	ldr	r0, [r1]
   1e524:	sub	r3, r1, r0
   1e528:	str	r3, [sp, #8]
   1e52c:	ldrh	r0, [r1, -r0]
   1e530:	add	r1, sp, #4
   1e534:	str	r0, [sp, #12]
   1e538:	mov	r0, r4
   1e53c:	blx	r2
   1e540:	ldrb	r1, [r4, #25]
   1e544:	ldr	r0, [r4, #20]
   1e548:	cmp	r1, #0
   1e54c:	beq	1e60c <flatcc_json_printer_union_table@@Base+0x144>
   1e550:	add	r1, r0, #1
   1e554:	str	r1, [r4, #20]
   1e558:	mov	r1, #10
   1e55c:	strb	r1, [r0]
   1e560:	ldr	r0, [r4, #32]
   1e564:	sub	r2, r0, #1
   1e568:	str	r2, [r4, #32]
   1e56c:	ldrb	r3, [r4, #25]
   1e570:	ldr	r0, [r4, #20]
   1e574:	ldr	r1, [r4, #16]
   1e578:	mla	r6, r2, r3, r0
   1e57c:	mul	r5, r2, r3
   1e580:	cmp	r6, r1
   1e584:	bls	1e5f4 <flatcc_json_printer_union_table@@Base+0x12c>
   1e588:	cmp	r0, r1
   1e58c:	bcc	1e5a8 <flatcc_json_printer_union_table@@Base+0xe0>
   1e590:	ldr	r2, [r4, #44]	; 0x2c
   1e594:	mov	r0, r4
   1e598:	mov	r1, #0
   1e59c:	blx	r2
   1e5a0:	ldr	r1, [r4, #16]
   1e5a4:	ldr	r0, [r4, #20]
   1e5a8:	sub	r6, r1, r0
   1e5ac:	cmp	r6, r5
   1e5b0:	bcs	1e5f4 <flatcc_json_printer_union_table@@Base+0x12c>
   1e5b4:	mov	r1, #32
   1e5b8:	mov	r2, r6
   1e5bc:	bl	12948 <memset@plt>
   1e5c0:	ldr	r0, [r4, #20]
   1e5c4:	ldr	r2, [r4, #44]	; 0x2c
   1e5c8:	mov	r1, #0
   1e5cc:	add	r0, r0, r6
   1e5d0:	str	r0, [r4, #20]
   1e5d4:	mov	r0, r4
   1e5d8:	blx	r2
   1e5dc:	ldr	r1, [r4, #16]
   1e5e0:	ldr	r0, [r4, #20]
   1e5e4:	sub	r5, r5, r6
   1e5e8:	sub	r6, r1, r0
   1e5ec:	cmp	r5, r6
   1e5f0:	bhi	1e5b4 <flatcc_json_printer_union_table@@Base+0xec>
   1e5f4:	mov	r1, #32
   1e5f8:	mov	r2, r5
   1e5fc:	bl	12948 <memset@plt>
   1e600:	ldr	r0, [r4, #20]
   1e604:	add	r0, r0, r5
   1e608:	str	r0, [r4, #20]
   1e60c:	add	r1, r0, #1
   1e610:	str	r1, [r4, #20]
   1e614:	mov	r1, #125	; 0x7d
   1e618:	strb	r1, [r0]
   1e61c:	b	1e630 <flatcc_json_printer_union_table@@Base+0x168>
   1e620:	ldr	r0, [r4, #36]	; 0x24
   1e624:	cmp	r0, #0
   1e628:	moveq	r0, #2
   1e62c:	streq	r0, [r4, #36]	; 0x24
   1e630:	sub	sp, fp, #16
   1e634:	pop	{r4, r5, r6, sl, fp, pc}

0001e638 <flatcc_json_printer_union_struct@@Base>:
   1e638:	push	{r4, r5, r6, sl, fp, lr}
   1e63c:	add	fp, sp, #16
   1e640:	mov	r4, r0
   1e644:	ldr	r0, [r0, #20]
   1e648:	ldr	r3, [r4, #32]
   1e64c:	add	r3, r3, #1
   1e650:	str	r3, [r4, #32]
   1e654:	add	r3, r0, #1
   1e658:	str	r3, [r4, #20]
   1e65c:	mov	r3, #123	; 0x7b
   1e660:	strb	r3, [r0]
   1e664:	ldr	r0, [r1]
   1e668:	ldr	r1, [r0]
   1e66c:	add	r1, r0, r1
   1e670:	mov	r0, r4
   1e674:	blx	r2
   1e678:	ldrb	r1, [r4, #25]
   1e67c:	ldr	r0, [r4, #20]
   1e680:	cmp	r1, #0
   1e684:	beq	1e744 <flatcc_json_printer_union_struct@@Base+0x10c>
   1e688:	add	r1, r0, #1
   1e68c:	str	r1, [r4, #20]
   1e690:	mov	r1, #10
   1e694:	strb	r1, [r0]
   1e698:	ldr	r0, [r4, #32]
   1e69c:	sub	r2, r0, #1
   1e6a0:	str	r2, [r4, #32]
   1e6a4:	ldrb	r3, [r4, #25]
   1e6a8:	ldr	r0, [r4, #20]
   1e6ac:	ldr	r1, [r4, #16]
   1e6b0:	mla	r6, r2, r3, r0
   1e6b4:	mul	r5, r2, r3
   1e6b8:	cmp	r6, r1
   1e6bc:	bls	1e72c <flatcc_json_printer_union_struct@@Base+0xf4>
   1e6c0:	cmp	r0, r1
   1e6c4:	bcc	1e6e0 <flatcc_json_printer_union_struct@@Base+0xa8>
   1e6c8:	ldr	r2, [r4, #44]	; 0x2c
   1e6cc:	mov	r0, r4
   1e6d0:	mov	r1, #0
   1e6d4:	blx	r2
   1e6d8:	ldr	r1, [r4, #16]
   1e6dc:	ldr	r0, [r4, #20]
   1e6e0:	sub	r6, r1, r0
   1e6e4:	cmp	r6, r5
   1e6e8:	bcs	1e72c <flatcc_json_printer_union_struct@@Base+0xf4>
   1e6ec:	mov	r1, #32
   1e6f0:	mov	r2, r6
   1e6f4:	bl	12948 <memset@plt>
   1e6f8:	ldr	r0, [r4, #20]
   1e6fc:	ldr	r2, [r4, #44]	; 0x2c
   1e700:	mov	r1, #0
   1e704:	add	r0, r0, r6
   1e708:	str	r0, [r4, #20]
   1e70c:	mov	r0, r4
   1e710:	blx	r2
   1e714:	ldr	r1, [r4, #16]
   1e718:	ldr	r0, [r4, #20]
   1e71c:	sub	r5, r5, r6
   1e720:	sub	r6, r1, r0
   1e724:	cmp	r5, r6
   1e728:	bhi	1e6ec <flatcc_json_printer_union_struct@@Base+0xb4>
   1e72c:	mov	r1, #32
   1e730:	mov	r2, r5
   1e734:	bl	12948 <memset@plt>
   1e738:	ldr	r0, [r4, #20]
   1e73c:	add	r0, r0, r5
   1e740:	str	r0, [r4, #20]
   1e744:	add	r1, r0, #1
   1e748:	str	r1, [r4, #20]
   1e74c:	mov	r1, #125	; 0x7d
   1e750:	strb	r1, [r0]
   1e754:	pop	{r4, r5, r6, sl, fp, pc}

0001e758 <flatcc_json_printer_union_string@@Base>:
   1e758:	ldr	r1, [r1]
   1e75c:	ldr	r2, [r1]
   1e760:	ldr	r2, [r1, r2]!
   1e764:	add	r1, r1, #4
   1e768:	b	147b4 <flatcc_json_printer_string@@Base+0x4>

0001e76c <flatcc_json_printer_embedded_struct_field@@Base>:
   1e76c:	push	{r4, r5, r6, r7, fp, lr}
   1e770:	add	fp, sp, #16
   1e774:	mov	r5, r3
   1e778:	mov	r3, r1
   1e77c:	mov	r4, r0
   1e780:	add	r7, fp, #8
   1e784:	mov	r6, r2
   1e788:	cmp	r3, #0
   1e78c:	ldm	r7, {r1, r2, r7}
   1e790:	ldrne	r0, [r4, #20]
   1e794:	addne	r3, r0, #1
   1e798:	strne	r3, [r4, #20]
   1e79c:	movne	r3, #44	; 0x2c
   1e7a0:	strbne	r3, [r0]
   1e7a4:	mov	r0, r4
   1e7a8:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1e7ac:	ldr	r1, [r4, #32]
   1e7b0:	ldr	r0, [r4, #20]
   1e7b4:	add	r1, r1, #1
   1e7b8:	str	r1, [r4, #32]
   1e7bc:	add	r1, r0, #1
   1e7c0:	str	r1, [r4, #20]
   1e7c4:	mov	r1, #123	; 0x7b
   1e7c8:	strb	r1, [r0]
   1e7cc:	add	r1, r6, r5
   1e7d0:	mov	r0, r4
   1e7d4:	blx	r7
   1e7d8:	ldrb	r1, [r4, #25]
   1e7dc:	ldr	r0, [r4, #20]
   1e7e0:	cmp	r1, #0
   1e7e4:	beq	1e8a4 <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   1e7e8:	add	r1, r0, #1
   1e7ec:	str	r1, [r4, #20]
   1e7f0:	mov	r1, #10
   1e7f4:	strb	r1, [r0]
   1e7f8:	ldr	r0, [r4, #32]
   1e7fc:	sub	r2, r0, #1
   1e800:	str	r2, [r4, #32]
   1e804:	ldrb	r3, [r4, #25]
   1e808:	ldr	r0, [r4, #20]
   1e80c:	ldr	r1, [r4, #16]
   1e810:	mla	r7, r2, r3, r0
   1e814:	mul	r5, r2, r3
   1e818:	cmp	r7, r1
   1e81c:	bls	1e88c <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   1e820:	cmp	r0, r1
   1e824:	bcc	1e840 <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
   1e828:	ldr	r2, [r4, #44]	; 0x2c
   1e82c:	mov	r0, r4
   1e830:	mov	r1, #0
   1e834:	blx	r2
   1e838:	ldr	r1, [r4, #16]
   1e83c:	ldr	r0, [r4, #20]
   1e840:	sub	r6, r1, r0
   1e844:	cmp	r6, r5
   1e848:	bcs	1e88c <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   1e84c:	mov	r1, #32
   1e850:	mov	r2, r6
   1e854:	bl	12948 <memset@plt>
   1e858:	ldr	r0, [r4, #20]
   1e85c:	ldr	r2, [r4, #44]	; 0x2c
   1e860:	mov	r1, #0
   1e864:	add	r0, r0, r6
   1e868:	str	r0, [r4, #20]
   1e86c:	mov	r0, r4
   1e870:	blx	r2
   1e874:	ldr	r1, [r4, #16]
   1e878:	ldr	r0, [r4, #20]
   1e87c:	sub	r5, r5, r6
   1e880:	sub	r6, r1, r0
   1e884:	cmp	r5, r6
   1e888:	bhi	1e84c <flatcc_json_printer_embedded_struct_field@@Base+0xe0>
   1e88c:	mov	r1, #32
   1e890:	mov	r2, r5
   1e894:	bl	12948 <memset@plt>
   1e898:	ldr	r0, [r4, #20]
   1e89c:	add	r0, r0, r5
   1e8a0:	str	r0, [r4, #20]
   1e8a4:	add	r1, r0, #1
   1e8a8:	str	r1, [r4, #20]
   1e8ac:	mov	r1, #125	; 0x7d
   1e8b0:	strb	r1, [r0]
   1e8b4:	pop	{r4, r5, r6, r7, fp, pc}

0001e8b8 <flatcc_json_printer_struct_field@@Base>:
   1e8b8:	push	{r4, r5, r6, r7, fp, lr}
   1e8bc:	add	fp, sp, #16
   1e8c0:	mov	r4, r0
   1e8c4:	mov	r0, #4
   1e8c8:	add	r0, r0, r2, lsl #1
   1e8cc:	ldr	r2, [r1, #8]
   1e8d0:	cmp	r0, r2
   1e8d4:	popge	{r4, r5, r6, r7, fp, pc}
   1e8d8:	ldr	r2, [r1, #4]
   1e8dc:	add	r0, r2, r0
   1e8e0:	ldrh	r0, [r0]
   1e8e4:	cmp	r0, #0
   1e8e8:	ldrne	r2, [r1]
   1e8ec:	addsne	r5, r2, r0
   1e8f0:	bne	1e8f8 <flatcc_json_printer_struct_field@@Base+0x40>
   1e8f4:	pop	{r4, r5, r6, r7, fp, pc}
   1e8f8:	ldr	r0, [r1, #16]
   1e8fc:	ldr	r2, [fp, #8]
   1e900:	ldr	r7, [fp, #12]
   1e904:	add	r6, r0, #1
   1e908:	cmp	r0, #0
   1e90c:	str	r6, [r1, #16]
   1e910:	ldrne	r0, [r4, #20]
   1e914:	addne	r1, r0, #1
   1e918:	strne	r1, [r4, #20]
   1e91c:	movne	r1, #44	; 0x2c
   1e920:	strbne	r1, [r0]
   1e924:	mov	r0, r4
   1e928:	mov	r1, r3
   1e92c:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1e930:	ldr	r1, [r4, #32]
   1e934:	ldr	r0, [r4, #20]
   1e938:	add	r1, r1, #1
   1e93c:	str	r1, [r4, #32]
   1e940:	add	r1, r0, #1
   1e944:	str	r1, [r4, #20]
   1e948:	mov	r1, #123	; 0x7b
   1e94c:	strb	r1, [r0]
   1e950:	mov	r0, r4
   1e954:	mov	r1, r5
   1e958:	blx	r7
   1e95c:	ldrb	r1, [r4, #25]
   1e960:	ldr	r0, [r4, #20]
   1e964:	cmp	r1, #0
   1e968:	beq	1ea28 <flatcc_json_printer_struct_field@@Base+0x170>
   1e96c:	add	r1, r0, #1
   1e970:	str	r1, [r4, #20]
   1e974:	mov	r1, #10
   1e978:	strb	r1, [r0]
   1e97c:	ldr	r0, [r4, #32]
   1e980:	sub	r2, r0, #1
   1e984:	str	r2, [r4, #32]
   1e988:	ldrb	r3, [r4, #25]
   1e98c:	ldr	r0, [r4, #20]
   1e990:	ldr	r1, [r4, #16]
   1e994:	mla	r7, r2, r3, r0
   1e998:	mul	r5, r2, r3
   1e99c:	cmp	r7, r1
   1e9a0:	bls	1ea10 <flatcc_json_printer_struct_field@@Base+0x158>
   1e9a4:	cmp	r0, r1
   1e9a8:	bcc	1e9c4 <flatcc_json_printer_struct_field@@Base+0x10c>
   1e9ac:	ldr	r2, [r4, #44]	; 0x2c
   1e9b0:	mov	r0, r4
   1e9b4:	mov	r1, #0
   1e9b8:	blx	r2
   1e9bc:	ldr	r1, [r4, #16]
   1e9c0:	ldr	r0, [r4, #20]
   1e9c4:	sub	r6, r1, r0
   1e9c8:	cmp	r6, r5
   1e9cc:	bcs	1ea10 <flatcc_json_printer_struct_field@@Base+0x158>
   1e9d0:	mov	r1, #32
   1e9d4:	mov	r2, r6
   1e9d8:	bl	12948 <memset@plt>
   1e9dc:	ldr	r0, [r4, #20]
   1e9e0:	ldr	r2, [r4, #44]	; 0x2c
   1e9e4:	mov	r1, #0
   1e9e8:	add	r0, r0, r6
   1e9ec:	str	r0, [r4, #20]
   1e9f0:	mov	r0, r4
   1e9f4:	blx	r2
   1e9f8:	ldr	r1, [r4, #16]
   1e9fc:	ldr	r0, [r4, #20]
   1ea00:	sub	r5, r5, r6
   1ea04:	sub	r6, r1, r0
   1ea08:	cmp	r5, r6
   1ea0c:	bhi	1e9d0 <flatcc_json_printer_struct_field@@Base+0x118>
   1ea10:	mov	r1, #32
   1ea14:	mov	r2, r5
   1ea18:	bl	12948 <memset@plt>
   1ea1c:	ldr	r0, [r4, #20]
   1ea20:	add	r0, r0, r5
   1ea24:	str	r0, [r4, #20]
   1ea28:	add	r1, r0, #1
   1ea2c:	str	r1, [r4, #20]
   1ea30:	mov	r1, #125	; 0x7d
   1ea34:	strb	r1, [r0]
   1ea38:	pop	{r4, r5, r6, r7, fp, pc}

0001ea3c <flatcc_json_printer_struct_as_root@@Base>:
   1ea3c:	push	{r4, r5, r6, sl, fp, lr}
   1ea40:	add	fp, sp, #16
   1ea44:	mov	r5, r1
   1ea48:	mov	r4, r0
   1ea4c:	bl	1ebc4 <flatcc_json_printer_struct_as_root@@Base+0x188>
   1ea50:	ldr	r1, [r4, #32]
   1ea54:	ldr	r0, [r4, #20]
   1ea58:	ldr	r2, [fp, #8]
   1ea5c:	add	r1, r1, #1
   1ea60:	str	r1, [r4, #32]
   1ea64:	add	r1, r0, #1
   1ea68:	str	r1, [r4, #20]
   1ea6c:	mov	r1, #123	; 0x7b
   1ea70:	strb	r1, [r0]
   1ea74:	ldr	r0, [r5]
   1ea78:	add	r1, r5, r0
   1ea7c:	mov	r0, r4
   1ea80:	blx	r2
   1ea84:	ldrb	r1, [r4, #25]
   1ea88:	ldr	r0, [r4, #20]
   1ea8c:	cmp	r1, #0
   1ea90:	beq	1eb50 <flatcc_json_printer_struct_as_root@@Base+0x114>
   1ea94:	add	r1, r0, #1
   1ea98:	str	r1, [r4, #20]
   1ea9c:	mov	r1, #10
   1eaa0:	strb	r1, [r0]
   1eaa4:	ldr	r0, [r4, #32]
   1eaa8:	sub	r2, r0, #1
   1eaac:	str	r2, [r4, #32]
   1eab0:	ldrb	r3, [r4, #25]
   1eab4:	ldr	r0, [r4, #20]
   1eab8:	ldr	r1, [r4, #16]
   1eabc:	mla	r6, r2, r3, r0
   1eac0:	mul	r5, r2, r3
   1eac4:	cmp	r6, r1
   1eac8:	bls	1eb38 <flatcc_json_printer_struct_as_root@@Base+0xfc>
   1eacc:	cmp	r0, r1
   1ead0:	bcc	1eaec <flatcc_json_printer_struct_as_root@@Base+0xb0>
   1ead4:	ldr	r2, [r4, #44]	; 0x2c
   1ead8:	mov	r0, r4
   1eadc:	mov	r1, #0
   1eae0:	blx	r2
   1eae4:	ldr	r1, [r4, #16]
   1eae8:	ldr	r0, [r4, #20]
   1eaec:	sub	r6, r1, r0
   1eaf0:	cmp	r6, r5
   1eaf4:	bcs	1eb38 <flatcc_json_printer_struct_as_root@@Base+0xfc>
   1eaf8:	mov	r1, #32
   1eafc:	mov	r2, r6
   1eb00:	bl	12948 <memset@plt>
   1eb04:	ldr	r0, [r4, #20]
   1eb08:	ldr	r2, [r4, #44]	; 0x2c
   1eb0c:	mov	r1, #0
   1eb10:	add	r0, r0, r6
   1eb14:	str	r0, [r4, #20]
   1eb18:	mov	r0, r4
   1eb1c:	blx	r2
   1eb20:	ldr	r1, [r4, #16]
   1eb24:	ldr	r0, [r4, #20]
   1eb28:	sub	r5, r5, r6
   1eb2c:	sub	r6, r1, r0
   1eb30:	cmp	r5, r6
   1eb34:	bhi	1eaf8 <flatcc_json_printer_struct_as_root@@Base+0xbc>
   1eb38:	mov	r1, #32
   1eb3c:	mov	r2, r5
   1eb40:	bl	12948 <memset@plt>
   1eb44:	ldr	r0, [r4, #20]
   1eb48:	add	r0, r0, r5
   1eb4c:	str	r0, [r4, #20]
   1eb50:	add	r1, r0, #1
   1eb54:	str	r1, [r4, #20]
   1eb58:	mov	r1, #125	; 0x7d
   1eb5c:	strb	r1, [r0]
   1eb60:	ldrb	r0, [r4, #25]
   1eb64:	cmp	r0, #0
   1eb68:	beq	1eb8c <flatcc_json_printer_struct_as_root@@Base+0x150>
   1eb6c:	ldr	r0, [r4, #32]
   1eb70:	cmp	r0, #0
   1eb74:	bne	1eb8c <flatcc_json_printer_struct_as_root@@Base+0x150>
   1eb78:	ldr	r0, [r4, #20]
   1eb7c:	add	r1, r0, #1
   1eb80:	str	r1, [r4, #20]
   1eb84:	mov	r1, #10
   1eb88:	strb	r1, [r0]
   1eb8c:	ldr	r2, [r4, #44]	; 0x2c
   1eb90:	mov	r0, r4
   1eb94:	mov	r1, #1
   1eb98:	blx	r2
   1eb9c:	ldr	r1, [r4, #36]	; 0x24
   1eba0:	mvn	r0, #0
   1eba4:	cmp	r1, #0
   1eba8:	popne	{r4, r5, r6, sl, fp, pc}
   1ebac:	ldr	r1, [r4, #12]
   1ebb0:	ldr	r2, [r4, #20]
   1ebb4:	ldr	r0, [r4]
   1ebb8:	add	r1, r2, r1
   1ebbc:	sub	r0, r1, r0
   1ebc0:	pop	{r4, r5, r6, sl, fp, pc}
   1ebc4:	push	{r4, r5, fp, lr}
   1ebc8:	add	fp, sp, #8
   1ebcc:	sub	sp, sp, #8
   1ebd0:	cmp	r1, #0
   1ebd4:	mov	r4, r0
   1ebd8:	mov	r0, #0
   1ebdc:	cmpne	r2, #7
   1ebe0:	str	r0, [sp, #4]
   1ebe4:	bls	1ec20 <flatcc_json_printer_struct_as_root@@Base+0x1e4>
   1ebe8:	cmp	r3, #0
   1ebec:	beq	1ec18 <flatcc_json_printer_struct_as_root@@Base+0x1dc>
   1ebf0:	mov	r5, r1
   1ebf4:	add	r0, sp, #4
   1ebf8:	mov	r1, r3
   1ebfc:	mov	r2, #4
   1ec00:	bl	12954 <strncpy@plt>
   1ec04:	ldr	r0, [sp, #4]
   1ec08:	cmp	r0, #0
   1ec0c:	ldrne	r1, [r5, #4]
   1ec10:	cmpne	r1, r0
   1ec14:	bne	1ec50 <flatcc_json_printer_struct_as_root@@Base+0x214>
   1ec18:	sub	sp, fp, #8
   1ec1c:	pop	{r4, r5, fp, pc}
   1ec20:	ldr	r0, [r4, #36]	; 0x24
   1ec24:	movw	r1, #1070	; 0x42e
   1ec28:	movw	r3, #2397	; 0x95d
   1ec2c:	movw	r2, #1019	; 0x3fb
   1ec30:	movt	r1, #2
   1ec34:	movt	r3, #2
   1ec38:	cmp	r0, #0
   1ec3c:	moveq	r0, #1
   1ec40:	streq	r0, [r4, #36]	; 0x24
   1ec44:	movw	r0, #2366	; 0x93e
   1ec48:	movt	r0, #2
   1ec4c:	bl	1299c <__assert_fail@plt>
   1ec50:	ldr	r0, [r4, #36]	; 0x24
   1ec54:	movw	r1, #1070	; 0x42e
   1ec58:	movw	r3, #2397	; 0x95d
   1ec5c:	movw	r2, #1028	; 0x404
   1ec60:	movt	r1, #2
   1ec64:	movt	r3, #2
   1ec68:	cmp	r0, #0
   1ec6c:	moveq	r0, #1
   1ec70:	streq	r0, [r4, #36]	; 0x24
   1ec74:	movw	r0, #2476	; 0x9ac
   1ec78:	movt	r0, #2
   1ec7c:	bl	1299c <__assert_fail@plt>

0001ec80 <flatcc_json_printer_table_as_root@@Base>:
   1ec80:	push	{r4, r5, r6, sl, fp, lr}
   1ec84:	add	fp, sp, #16
   1ec88:	sub	sp, sp, #24
   1ec8c:	mov	r5, r1
   1ec90:	mov	r4, r0
   1ec94:	bl	1ebc4 <flatcc_json_printer_struct_as_root@@Base+0x188>
   1ec98:	ldr	r2, [r4, #32]
   1ec9c:	ldr	r1, [r4, #20]
   1eca0:	ldr	r0, [r5]
   1eca4:	add	r2, r2, #1
   1eca8:	str	r2, [r4, #32]
   1ecac:	add	r2, r1, #1
   1ecb0:	str	r2, [r4, #20]
   1ecb4:	mov	r2, #123	; 0x7b
   1ecb8:	strb	r2, [r1]
   1ecbc:	mov	r1, #99	; 0x63
   1ecc0:	str	r1, [sp, #16]
   1ecc4:	mov	r1, #0
   1ecc8:	str	r1, [sp, #20]
   1eccc:	add	r1, r5, r0
   1ecd0:	str	r1, [sp, #4]
   1ecd4:	ldr	r0, [r5, r0]
   1ecd8:	sub	r2, r1, r0
   1ecdc:	str	r2, [sp, #8]
   1ece0:	ldr	r2, [fp, #8]
   1ece4:	ldrh	r0, [r1, -r0]
   1ece8:	add	r1, sp, #4
   1ecec:	str	r0, [sp, #12]
   1ecf0:	mov	r0, r4
   1ecf4:	blx	r2
   1ecf8:	ldrb	r1, [r4, #25]
   1ecfc:	ldr	r0, [r4, #20]
   1ed00:	cmp	r1, #0
   1ed04:	beq	1edc4 <flatcc_json_printer_table_as_root@@Base+0x144>
   1ed08:	add	r1, r0, #1
   1ed0c:	str	r1, [r4, #20]
   1ed10:	mov	r1, #10
   1ed14:	strb	r1, [r0]
   1ed18:	ldr	r0, [r4, #32]
   1ed1c:	sub	r2, r0, #1
   1ed20:	str	r2, [r4, #32]
   1ed24:	ldrb	r3, [r4, #25]
   1ed28:	ldr	r0, [r4, #20]
   1ed2c:	ldr	r1, [r4, #16]
   1ed30:	mla	r6, r2, r3, r0
   1ed34:	mul	r5, r2, r3
   1ed38:	cmp	r6, r1
   1ed3c:	bls	1edac <flatcc_json_printer_table_as_root@@Base+0x12c>
   1ed40:	cmp	r0, r1
   1ed44:	bcc	1ed60 <flatcc_json_printer_table_as_root@@Base+0xe0>
   1ed48:	ldr	r2, [r4, #44]	; 0x2c
   1ed4c:	mov	r0, r4
   1ed50:	mov	r1, #0
   1ed54:	blx	r2
   1ed58:	ldr	r1, [r4, #16]
   1ed5c:	ldr	r0, [r4, #20]
   1ed60:	sub	r6, r1, r0
   1ed64:	cmp	r6, r5
   1ed68:	bcs	1edac <flatcc_json_printer_table_as_root@@Base+0x12c>
   1ed6c:	mov	r1, #32
   1ed70:	mov	r2, r6
   1ed74:	bl	12948 <memset@plt>
   1ed78:	ldr	r0, [r4, #20]
   1ed7c:	ldr	r2, [r4, #44]	; 0x2c
   1ed80:	mov	r1, #0
   1ed84:	add	r0, r0, r6
   1ed88:	str	r0, [r4, #20]
   1ed8c:	mov	r0, r4
   1ed90:	blx	r2
   1ed94:	ldr	r1, [r4, #16]
   1ed98:	ldr	r0, [r4, #20]
   1ed9c:	sub	r5, r5, r6
   1eda0:	sub	r6, r1, r0
   1eda4:	cmp	r5, r6
   1eda8:	bhi	1ed6c <flatcc_json_printer_table_as_root@@Base+0xec>
   1edac:	mov	r1, #32
   1edb0:	mov	r2, r5
   1edb4:	bl	12948 <memset@plt>
   1edb8:	ldr	r0, [r4, #20]
   1edbc:	add	r0, r0, r5
   1edc0:	str	r0, [r4, #20]
   1edc4:	add	r1, r0, #1
   1edc8:	str	r1, [r4, #20]
   1edcc:	mov	r1, #125	; 0x7d
   1edd0:	strb	r1, [r0]
   1edd4:	ldrb	r0, [r4, #25]
   1edd8:	cmp	r0, #0
   1eddc:	beq	1ee00 <flatcc_json_printer_table_as_root@@Base+0x180>
   1ede0:	ldr	r0, [r4, #32]
   1ede4:	cmp	r0, #0
   1ede8:	bne	1ee00 <flatcc_json_printer_table_as_root@@Base+0x180>
   1edec:	ldr	r0, [r4, #20]
   1edf0:	add	r1, r0, #1
   1edf4:	str	r1, [r4, #20]
   1edf8:	mov	r1, #10
   1edfc:	strb	r1, [r0]
   1ee00:	ldr	r2, [r4, #44]	; 0x2c
   1ee04:	mov	r0, r4
   1ee08:	mov	r1, #1
   1ee0c:	blx	r2
   1ee10:	ldr	r1, [r4, #36]	; 0x24
   1ee14:	mvn	r0, #0
   1ee18:	cmp	r1, #0
   1ee1c:	bne	1ee34 <flatcc_json_printer_table_as_root@@Base+0x1b4>
   1ee20:	ldr	r1, [r4, #12]
   1ee24:	ldr	r2, [r4, #20]
   1ee28:	ldr	r0, [r4]
   1ee2c:	add	r1, r2, r1
   1ee30:	sub	r0, r1, r0
   1ee34:	sub	sp, fp, #16
   1ee38:	pop	{r4, r5, r6, sl, fp, pc}

0001ee3c <flatcc_json_printer_struct_as_nested_root@@Base>:
   1ee3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ee40:	add	fp, sp, #24
   1ee44:	mov	r7, r1
   1ee48:	ldr	r1, [r1, #8]
   1ee4c:	mov	r4, r0
   1ee50:	mov	r0, #4
   1ee54:	add	r0, r0, r2, lsl #1
   1ee58:	cmp	r0, r1
   1ee5c:	popge	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ee60:	ldr	r1, [r7, #4]
   1ee64:	add	r0, r1, r0
   1ee68:	ldrh	r0, [r0]
   1ee6c:	cmp	r0, #0
   1ee70:	ldrne	r1, [r7]
   1ee74:	addsne	r0, r1, r0
   1ee78:	bne	1ee80 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   1ee7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ee80:	ldr	r6, [r0]
   1ee84:	mov	r5, r3
   1ee88:	ldr	r3, [fp, #12]
   1ee8c:	ldr	r9, [fp, #16]
   1ee90:	ldr	r8, [fp, #8]
   1ee94:	ldr	r2, [r6, r0]!
   1ee98:	mov	r0, r4
   1ee9c:	mov	r1, r6
   1eea0:	bl	1ebc4 <flatcc_json_printer_struct_as_root@@Base+0x188>
   1eea4:	ldr	r0, [r7, #16]
   1eea8:	mov	r2, r8
   1eeac:	add	r1, r0, #1
   1eeb0:	cmp	r0, #0
   1eeb4:	str	r1, [r7, #16]
   1eeb8:	ldrne	r0, [r4, #20]
   1eebc:	addne	r1, r0, #1
   1eec0:	strne	r1, [r4, #20]
   1eec4:	movne	r1, #44	; 0x2c
   1eec8:	strbne	r1, [r0]
   1eecc:	mov	r0, r4
   1eed0:	mov	r1, r5
   1eed4:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1eed8:	ldr	r1, [r4, #32]
   1eedc:	ldr	r0, [r4, #20]
   1eee0:	add	r1, r1, #1
   1eee4:	str	r1, [r4, #32]
   1eee8:	add	r1, r0, #1
   1eeec:	str	r1, [r4, #20]
   1eef0:	mov	r1, #123	; 0x7b
   1eef4:	strb	r1, [r0]
   1eef8:	ldr	r0, [r6]
   1eefc:	add	r1, r6, r0
   1ef00:	mov	r0, r4
   1ef04:	blx	r9
   1ef08:	ldrb	r1, [r4, #25]
   1ef0c:	ldr	r0, [r4, #20]
   1ef10:	cmp	r1, #0
   1ef14:	beq	1efd4 <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   1ef18:	add	r1, r0, #1
   1ef1c:	str	r1, [r4, #20]
   1ef20:	mov	r1, #10
   1ef24:	strb	r1, [r0]
   1ef28:	ldr	r0, [r4, #32]
   1ef2c:	sub	r2, r0, #1
   1ef30:	str	r2, [r4, #32]
   1ef34:	ldrb	r3, [r4, #25]
   1ef38:	ldr	r0, [r4, #20]
   1ef3c:	ldr	r1, [r4, #16]
   1ef40:	mla	r7, r2, r3, r0
   1ef44:	mul	r5, r2, r3
   1ef48:	cmp	r7, r1
   1ef4c:	bls	1efbc <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   1ef50:	cmp	r0, r1
   1ef54:	bcc	1ef70 <flatcc_json_printer_struct_as_nested_root@@Base+0x134>
   1ef58:	ldr	r2, [r4, #44]	; 0x2c
   1ef5c:	mov	r0, r4
   1ef60:	mov	r1, #0
   1ef64:	blx	r2
   1ef68:	ldr	r1, [r4, #16]
   1ef6c:	ldr	r0, [r4, #20]
   1ef70:	sub	r6, r1, r0
   1ef74:	cmp	r6, r5
   1ef78:	bcs	1efbc <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   1ef7c:	mov	r1, #32
   1ef80:	mov	r2, r6
   1ef84:	bl	12948 <memset@plt>
   1ef88:	ldr	r0, [r4, #20]
   1ef8c:	ldr	r2, [r4, #44]	; 0x2c
   1ef90:	mov	r1, #0
   1ef94:	add	r0, r0, r6
   1ef98:	str	r0, [r4, #20]
   1ef9c:	mov	r0, r4
   1efa0:	blx	r2
   1efa4:	ldr	r1, [r4, #16]
   1efa8:	ldr	r0, [r4, #20]
   1efac:	sub	r5, r5, r6
   1efb0:	sub	r6, r1, r0
   1efb4:	cmp	r5, r6
   1efb8:	bhi	1ef7c <flatcc_json_printer_struct_as_nested_root@@Base+0x140>
   1efbc:	mov	r1, #32
   1efc0:	mov	r2, r5
   1efc4:	bl	12948 <memset@plt>
   1efc8:	ldr	r0, [r4, #20]
   1efcc:	add	r0, r0, r5
   1efd0:	str	r0, [r4, #20]
   1efd4:	add	r1, r0, #1
   1efd8:	str	r1, [r4, #20]
   1efdc:	mov	r1, #125	; 0x7d
   1efe0:	strb	r1, [r0]
   1efe4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001efe8 <flatcc_json_printer_table_as_nested_root@@Base>:
   1efe8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1efec:	add	fp, sp, #24
   1eff0:	sub	sp, sp, #24
   1eff4:	mov	r5, r1
   1eff8:	ldr	r1, [r1, #8]
   1effc:	mov	r4, r0
   1f000:	mov	r0, #4
   1f004:	add	r0, r0, r2, lsl #1
   1f008:	cmp	r0, r1
   1f00c:	bge	1f02c <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   1f010:	ldr	r1, [r5, #4]
   1f014:	add	r0, r1, r0
   1f018:	ldrh	r0, [r0]
   1f01c:	cmp	r0, #0
   1f020:	ldrne	r1, [r5]
   1f024:	addsne	r0, r1, r0
   1f028:	bne	1f034 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   1f02c:	sub	sp, fp, #24
   1f030:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f034:	ldr	r1, [r0]
   1f038:	mov	r6, r3
   1f03c:	ldr	r3, [fp, #12]
   1f040:	ldr	r8, [fp, #8]
   1f044:	ldr	r2, [r1, r0]!
   1f048:	mov	r0, r4
   1f04c:	add	r7, r1, #4
   1f050:	mov	r1, r7
   1f054:	bl	1ebc4 <flatcc_json_printer_struct_as_root@@Base+0x188>
   1f058:	ldr	r0, [r5, #16]
   1f05c:	mov	r2, r8
   1f060:	add	r1, r0, #1
   1f064:	cmp	r0, #0
   1f068:	str	r1, [r5, #16]
   1f06c:	ldrne	r0, [r4, #20]
   1f070:	addne	r1, r0, #1
   1f074:	strne	r1, [r4, #20]
   1f078:	movne	r1, #44	; 0x2c
   1f07c:	strbne	r1, [r0]
   1f080:	mov	r0, r4
   1f084:	mov	r1, r6
   1f088:	bl	15aec <flatcc_json_printer_string_field@@Base+0x8c>
   1f08c:	ldr	r0, [r5, #12]
   1f090:	subs	r0, r0, #1
   1f094:	beq	1f1d4 <flatcc_json_printer_table_as_nested_root@@Base+0x1ec>
   1f098:	ldr	r1, [r7]
   1f09c:	ldr	r3, [r4, #20]
   1f0a0:	ldr	r2, [fp, #16]
   1f0a4:	add	r1, r7, r1
   1f0a8:	ldr	r7, [r4, #32]
   1f0ac:	add	r7, r7, #1
   1f0b0:	str	r7, [r4, #32]
   1f0b4:	add	r7, r3, #1
   1f0b8:	str	r7, [r4, #20]
   1f0bc:	mov	r7, #123	; 0x7b
   1f0c0:	strb	r7, [r3]
   1f0c4:	str	r0, [sp, #16]
   1f0c8:	mov	r0, #0
   1f0cc:	str	r0, [sp, #20]
   1f0d0:	str	r1, [sp, #4]
   1f0d4:	ldr	r0, [r1]
   1f0d8:	sub	r3, r1, r0
   1f0dc:	str	r3, [sp, #8]
   1f0e0:	ldrh	r0, [r1, -r0]
   1f0e4:	add	r1, sp, #4
   1f0e8:	str	r0, [sp, #12]
   1f0ec:	mov	r0, r4
   1f0f0:	blx	r2
   1f0f4:	ldrb	r1, [r4, #25]
   1f0f8:	ldr	r0, [r4, #20]
   1f0fc:	cmp	r1, #0
   1f100:	beq	1f1c0 <flatcc_json_printer_table_as_nested_root@@Base+0x1d8>
   1f104:	add	r1, r0, #1
   1f108:	str	r1, [r4, #20]
   1f10c:	mov	r1, #10
   1f110:	strb	r1, [r0]
   1f114:	ldr	r0, [r4, #32]
   1f118:	sub	r2, r0, #1
   1f11c:	str	r2, [r4, #32]
   1f120:	ldrb	r3, [r4, #25]
   1f124:	ldr	r0, [r4, #20]
   1f128:	ldr	r1, [r4, #16]
   1f12c:	mla	r7, r2, r3, r0
   1f130:	mul	r5, r2, r3
   1f134:	cmp	r7, r1
   1f138:	bls	1f1a8 <flatcc_json_printer_table_as_nested_root@@Base+0x1c0>
   1f13c:	cmp	r0, r1
   1f140:	bcc	1f15c <flatcc_json_printer_table_as_nested_root@@Base+0x174>
   1f144:	ldr	r2, [r4, #44]	; 0x2c
   1f148:	mov	r0, r4
   1f14c:	mov	r1, #0
   1f150:	blx	r2
   1f154:	ldr	r1, [r4, #16]
   1f158:	ldr	r0, [r4, #20]
   1f15c:	sub	r6, r1, r0
   1f160:	cmp	r6, r5
   1f164:	bcs	1f1a8 <flatcc_json_printer_table_as_nested_root@@Base+0x1c0>
   1f168:	mov	r1, #32
   1f16c:	mov	r2, r6
   1f170:	bl	12948 <memset@plt>
   1f174:	ldr	r0, [r4, #20]
   1f178:	ldr	r2, [r4, #44]	; 0x2c
   1f17c:	mov	r1, #0
   1f180:	add	r0, r0, r6
   1f184:	str	r0, [r4, #20]
   1f188:	mov	r0, r4
   1f18c:	blx	r2
   1f190:	ldr	r1, [r4, #16]
   1f194:	ldr	r0, [r4, #20]
   1f198:	sub	r5, r5, r6
   1f19c:	sub	r6, r1, r0
   1f1a0:	cmp	r5, r6
   1f1a4:	bhi	1f168 <flatcc_json_printer_table_as_nested_root@@Base+0x180>
   1f1a8:	mov	r1, #32
   1f1ac:	mov	r2, r5
   1f1b0:	bl	12948 <memset@plt>
   1f1b4:	ldr	r0, [r4, #20]
   1f1b8:	add	r0, r0, r5
   1f1bc:	str	r0, [r4, #20]
   1f1c0:	add	r1, r0, #1
   1f1c4:	str	r1, [r4, #20]
   1f1c8:	mov	r1, #125	; 0x7d
   1f1cc:	strb	r1, [r0]
   1f1d0:	b	1f02c <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   1f1d4:	ldr	r0, [r4, #36]	; 0x24
   1f1d8:	cmp	r0, #0
   1f1dc:	moveq	r0, #2
   1f1e0:	streq	r0, [r4, #36]	; 0x24
   1f1e4:	b	1f02c <flatcc_json_printer_table_as_nested_root@@Base+0x44>

0001f1e8 <flatcc_json_printer_init@@Base>:
   1f1e8:	push	{r4, r5, r6, sl, fp, lr}
   1f1ec:	add	fp, sp, #16
   1f1f0:	mov	r5, r0
   1f1f4:	mov	r4, #0
   1f1f8:	vmov.i32	q8, #0	; 0x00000000
   1f1fc:	cmp	r1, #0
   1f200:	movw	r6, #16448	; 0x4040
   1f204:	str	r4, [r0, #32]
   1f208:	mov	r0, #36	; 0x24
   1f20c:	mov	r2, r5
   1f210:	vst1.32	{d16-d17}, [r2], r0
   1f214:	add	r0, r5, #16
   1f218:	vst1.32	{d16-d17}, [r0]
   1f21c:	movw	r0, #8332	; 0x208c
   1f220:	str	r4, [r2]
   1f224:	movw	r2, #62084	; 0xf284
   1f228:	movt	r0, #3
   1f22c:	movt	r2, #1
   1f230:	ldr	r0, [r0]
   1f234:	movne	r0, r1
   1f238:	str	r0, [r5, #40]	; 0x28
   1f23c:	movw	r0, #16448	; 0x4040
   1f240:	str	r2, [r5, #44]	; 0x2c
   1f244:	bl	1290c <malloc@plt>
   1f248:	cmp	r0, #0
   1f24c:	str	r0, [r5]
   1f250:	beq	1f278 <flatcc_json_printer_init@@Base+0x90>
   1f254:	mov	r1, #1
   1f258:	strb	r1, [r5, #24]
   1f25c:	mov	r1, #16384	; 0x4000
   1f260:	str	r6, [r5, #4]
   1f264:	str	r1, [r5, #8]
   1f268:	add	r1, r0, #16384	; 0x4000
   1f26c:	str	r1, [r5, #16]
   1f270:	str	r0, [r5, #20]
   1f274:	b	1f27c <flatcc_json_printer_init@@Base+0x94>
   1f278:	mvn	r4, #0
   1f27c:	mov	r0, r4
   1f280:	pop	{r4, r5, r6, sl, fp, pc}
   1f284:	push	{r4, r5, r6, sl, fp, lr}
   1f288:	add	fp, sp, #16
   1f28c:	mov	r4, r0
   1f290:	cmp	r1, #0
   1f294:	beq	1f2a0 <flatcc_json_printer_init@@Base+0xb8>
   1f298:	ldr	r5, [r4, #20]
   1f29c:	b	1f2b0 <flatcc_json_printer_init@@Base+0xc8>
   1f2a0:	ldr	r6, [r4, #16]
   1f2a4:	ldr	r5, [r4, #20]
   1f2a8:	cmp	r5, r6
   1f2ac:	bcs	1f2dc <flatcc_json_printer_init@@Base+0xf4>
   1f2b0:	ldr	r0, [r4]
   1f2b4:	ldr	r3, [r4, #40]	; 0x28
   1f2b8:	mov	r2, #1
   1f2bc:	sub	r5, r5, r0
   1f2c0:	mov	r1, r5
   1f2c4:	bl	128f4 <fwrite@plt>
   1f2c8:	ldr	r1, [r4, #12]
   1f2cc:	ldr	r0, [r4]
   1f2d0:	str	r0, [r4, #20]
   1f2d4:	add	r1, r1, r5
   1f2d8:	b	1f320 <flatcc_json_printer_init@@Base+0x138>
   1f2dc:	ldr	r0, [r4]
   1f2e0:	ldr	r1, [r4, #8]
   1f2e4:	ldr	r3, [r4, #40]	; 0x28
   1f2e8:	mov	r2, #1
   1f2ec:	bl	128f4 <fwrite@plt>
   1f2f0:	ldr	r0, [r4]
   1f2f4:	ldr	r1, [r4, #8]
   1f2f8:	sub	r5, r5, r6
   1f2fc:	mov	r2, r5
   1f300:	add	r1, r0, r1
   1f304:	bl	128b8 <memcpy@plt>
   1f308:	ldr	r0, [r4]
   1f30c:	ldr	r1, [r4, #8]
   1f310:	ldr	r2, [r4, #12]
   1f314:	add	r0, r0, r5
   1f318:	add	r1, r2, r1
   1f31c:	str	r0, [r4, #20]
   1f320:	str	r1, [r4, #12]
   1f324:	mov	r1, #0
   1f328:	strb	r1, [r0]
   1f32c:	pop	{r4, r5, r6, sl, fp, pc}

0001f330 <flatcc_json_printer_init_buffer@@Base>:
   1f330:	cmp	r2, #63	; 0x3f
   1f334:	bls	1f374 <flatcc_json_printer_init_buffer@@Base+0x44>
   1f338:	vmov.i32	q8, #0	; 0x00000000
   1f33c:	add	r3, r0, #12
   1f340:	vst1.32	{d16-d17}, [r3]
   1f344:	movw	r3, #62364	; 0xf39c
   1f348:	movt	r3, #1
   1f34c:	str	r3, [r0, #44]	; 0x2c
   1f350:	add	r3, r0, #28
   1f354:	vst1.32	{d16-d17}, [r3]
   1f358:	sub	r3, r2, #64	; 0x40
   1f35c:	stm	r0, {r1, r2, r3}
   1f360:	add	r2, r1, r3
   1f364:	str	r2, [r0, #16]
   1f368:	str	r1, [r0, #20]
   1f36c:	mov	r0, #0
   1f370:	bx	lr
   1f374:	push	{fp, lr}
   1f378:	mov	fp, sp
   1f37c:	movw	r0, #1353	; 0x549
   1f380:	movw	r1, #1070	; 0x42e
   1f384:	movw	r3, #1394	; 0x572
   1f388:	movw	r2, #1165	; 0x48d
   1f38c:	movt	r0, #2
   1f390:	movt	r1, #2
   1f394:	movt	r3, #2
   1f398:	bl	1299c <__assert_fail@plt>
   1f39c:	ldr	r2, [r0, #16]
   1f3a0:	ldr	r1, [r0, #20]
   1f3a4:	cmp	r1, r2
   1f3a8:	bcs	1f3b4 <flatcc_json_printer_init_buffer@@Base+0x84>
   1f3ac:	mov	r2, r1
   1f3b0:	b	1f3dc <flatcc_json_printer_init_buffer@@Base+0xac>
   1f3b4:	ldr	r2, [r0, #36]	; 0x24
   1f3b8:	cmp	r2, #0
   1f3bc:	moveq	r2, #3
   1f3c0:	streq	r2, [r0, #36]	; 0x24
   1f3c4:	ldr	r2, [r0]
   1f3c8:	ldr	r3, [r0, #12]
   1f3cc:	sub	r1, r1, r2
   1f3d0:	str	r2, [r0, #20]
   1f3d4:	add	r1, r1, r3
   1f3d8:	str	r1, [r0, #12]
   1f3dc:	mov	r0, #0
   1f3e0:	strb	r0, [r2]
   1f3e4:	bx	lr

0001f3e8 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   1f3e8:	push	{r4, r5, fp, lr}
   1f3ec:	add	fp, sp, #8
   1f3f0:	mov	r5, r1
   1f3f4:	cmp	r1, #0
   1f3f8:	mov	r4, r0
   1f3fc:	vmov.i32	q8, #0	; 0x00000000
   1f400:	add	r0, r0, #28
   1f404:	movweq	r5, #4096	; 0x1000
   1f408:	vst1.32	{d16-d17}, [r0]
   1f40c:	add	r0, r4, #12
   1f410:	cmp	r5, #64	; 0x40
   1f414:	vst1.32	{d16-d17}, [r0]
   1f418:	movls	r5, #64	; 0x40
   1f41c:	mov	r0, r5
   1f420:	bl	1290c <malloc@plt>
   1f424:	mov	r1, r0
   1f428:	mov	r0, #1
   1f42c:	movw	r2, #62572	; 0xf46c
   1f430:	strb	r0, [r4, #24]
   1f434:	sub	r0, r5, #64	; 0x40
   1f438:	stm	r4, {r1, r5}
   1f43c:	movt	r2, #1
   1f440:	cmp	r1, #0
   1f444:	str	r0, [r4, #8]
   1f448:	add	r0, r1, r0
   1f44c:	str	r2, [r4, #44]	; 0x2c
   1f450:	str	r0, [r4, #16]
   1f454:	mov	r0, #0
   1f458:	str	r1, [r4, #20]
   1f45c:	moveq	r0, #3
   1f460:	streq	r0, [r4, #36]	; 0x24
   1f464:	mvneq	r0, #0
   1f468:	pop	{r4, r5, fp, pc}
   1f46c:	push	{r4, r5, fp, lr}
   1f470:	add	fp, sp, #8
   1f474:	mov	r4, r0
   1f478:	ldr	r0, [r0]
   1f47c:	mov	r1, #0
   1f480:	ldr	r5, [r4, #20]
   1f484:	strb	r1, [r5], -r0
   1f488:	ldr	r0, [r4, #16]
   1f48c:	ldr	r1, [r4, #20]
   1f490:	cmp	r1, r0
   1f494:	popcc	{r4, r5, fp, pc}
   1f498:	ldm	r4, {r0, r1}
   1f49c:	lsl	r1, r1, #1
   1f4a0:	bl	128e8 <realloc@plt>
   1f4a4:	cmp	r0, #0
   1f4a8:	beq	1f4dc <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   1f4ac:	str	r0, [r4]
   1f4b0:	mvn	r3, #63	; 0x3f
   1f4b4:	add	r1, r0, r5
   1f4b8:	ldr	r2, [r4, #4]
   1f4bc:	add	r3, r3, r2, lsl #1
   1f4c0:	lsl	r2, r2, #1
   1f4c4:	add	r0, r0, r3
   1f4c8:	str	r3, [r4, #8]
   1f4cc:	str	r2, [r4, #4]
   1f4d0:	str	r0, [r4, #16]
   1f4d4:	str	r1, [r4, #20]
   1f4d8:	b	1f500 <flatcc_json_printer_init_dynamic_buffer@@Base+0x118>
   1f4dc:	ldr	r0, [r4, #36]	; 0x24
   1f4e0:	cmp	r0, #0
   1f4e4:	moveq	r0, #3
   1f4e8:	streq	r0, [r4, #36]	; 0x24
   1f4ec:	ldr	r0, [r4, #12]
   1f4f0:	ldr	r1, [r4]
   1f4f4:	add	r0, r0, r5
   1f4f8:	str	r1, [r4, #20]
   1f4fc:	str	r0, [r4, #12]
   1f500:	mov	r0, #0
   1f504:	strb	r0, [r1]
   1f508:	pop	{r4, r5, fp, pc}

0001f50c <flatcc_json_printer_get_buffer@@Base>:
   1f50c:	push	{r4, r5, fp, lr}
   1f510:	add	fp, sp, #8
   1f514:	ldr	r2, [r0, #44]	; 0x2c
   1f518:	mov	r4, r1
   1f51c:	mov	r1, #0
   1f520:	mov	r5, r0
   1f524:	blx	r2
   1f528:	cmp	r4, #0
   1f52c:	ldrne	r0, [r5]
   1f530:	ldrne	r1, [r5, #20]
   1f534:	subne	r1, r1, r0
   1f538:	strne	r1, [r4]
   1f53c:	popne	{r4, r5, fp, pc}
   1f540:	ldr	r0, [r5]
   1f544:	pop	{r4, r5, fp, pc}

0001f548 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   1f548:	push	{r4, r5, fp, lr}
   1f54c:	add	fp, sp, #8
   1f550:	ldr	r2, [r0, #44]	; 0x2c
   1f554:	mov	r5, r1
   1f558:	mov	r1, #0
   1f55c:	mov	r4, r0
   1f560:	blx	r2
   1f564:	cmp	r5, #0
   1f568:	ldr	r0, [r4]
   1f56c:	vmov.i32	q8, #0	; 0x00000000
   1f570:	add	r2, r4, #16
   1f574:	ldrne	r1, [r4, #20]
   1f578:	subne	r1, r1, r0
   1f57c:	strne	r1, [r5]
   1f580:	mov	r1, #32
   1f584:	vst1.32	{d16-d17}, [r2]
   1f588:	vst1.32	{d16-d17}, [r4], r1
   1f58c:	vst1.32	{d16-d17}, [r4]
   1f590:	pop	{r4, r5, fp, pc}

0001f594 <flatcc_json_printer_clear@@Base>:
   1f594:	push	{r4, sl, fp, lr}
   1f598:	add	fp, sp, #8
   1f59c:	mov	r4, r0
   1f5a0:	ldrb	r0, [r0, #24]
   1f5a4:	cmp	r0, #0
   1f5a8:	ldrne	r0, [r4]
   1f5ac:	cmpne	r0, #0
   1f5b0:	beq	1f5b8 <flatcc_json_printer_clear@@Base+0x24>
   1f5b4:	bl	128ac <free@plt>
   1f5b8:	vmov.i32	q8, #0	; 0x00000000
   1f5bc:	mov	r0, #32
   1f5c0:	add	r1, r4, #16
   1f5c4:	vst1.32	{d16-d17}, [r4], r0
   1f5c8:	vst1.32	{d16-d17}, [r1]
   1f5cc:	vst1.32	{d16-d17}, [r4]
   1f5d0:	pop	{r4, sl, fp, pc}
   1f5d4:	push	{r4, sl, fp, lr}
   1f5d8:	add	fp, sp, #8
   1f5dc:	cmn	r0, #1
   1f5e0:	ble	1f5ec <flatcc_json_printer_clear@@Base+0x58>
   1f5e4:	mov	lr, r1
   1f5e8:	b	1f5fc <flatcc_json_printer_clear@@Base+0x68>
   1f5ec:	mov	r2, #45	; 0x2d
   1f5f0:	mov	lr, r1
   1f5f4:	rsb	r0, r0, #0
   1f5f8:	strb	r2, [lr], #1
   1f5fc:	movw	ip, #26215	; 0x6667
   1f600:	mov	r3, lr
   1f604:	movt	ip, #26214	; 0x6666
   1f608:	smmul	r2, r0, ip
   1f60c:	asr	r4, r2, #2
   1f610:	add	r2, r4, r2, lsr #31
   1f614:	add	r4, r2, r2, lsl #2
   1f618:	sub	r4, r0, r4, lsl #1
   1f61c:	add	r0, r0, #9
   1f620:	add	r4, r4, #48	; 0x30
   1f624:	cmp	r0, #18
   1f628:	mov	r0, r2
   1f62c:	strb	r4, [r3], #1
   1f630:	bhi	1f608 <flatcc_json_printer_clear@@Base+0x74>
   1f634:	mov	r2, #0
   1f638:	mov	r0, r3
   1f63c:	strb	r2, [r0], -lr
   1f640:	cmp	r0, #2
   1f644:	blt	1f66c <flatcc_json_printer_clear@@Base+0xd8>
   1f648:	add	r0, r0, r0, lsr #31
   1f64c:	sub	r2, r3, #1
   1f650:	asr	r0, r0, #1
   1f654:	ldrb	ip, [lr]
   1f658:	ldrb	r4, [r2]
   1f65c:	subs	r0, r0, #1
   1f660:	strb	r4, [lr], #1
   1f664:	strb	ip, [r2], #-1
   1f668:	bne	1f654 <flatcc_json_printer_clear@@Base+0xc0>
   1f66c:	sub	r0, r3, r1
   1f670:	pop	{r4, sl, fp, pc}
   1f674:	push	{r4, sl, fp, lr}
   1f678:	add	fp, sp, #8
   1f67c:	orrs	r1, r2, r3
   1f680:	beq	1f6f8 <flatcc_json_printer_clear@@Base+0x164>
   1f684:	ldr	ip, [fp, #12]
   1f688:	ldr	r1, [fp, #8]
   1f68c:	mov	r4, #0
   1f690:	cmp	r4, r3, lsr #22
   1f694:	bne	1f6b0 <flatcc_json_printer_clear@@Base+0x11c>
   1f698:	lsl	r3, r3, #10
   1f69c:	sub	r1, r1, #10
   1f6a0:	orr	r3, r3, r2, lsr #22
   1f6a4:	lsl	r2, r2, #10
   1f6a8:	cmp	r3, #4194304	; 0x400000
   1f6ac:	bcc	1f698 <flatcc_json_printer_clear@@Base+0x104>
   1f6b0:	cmp	r3, #0
   1f6b4:	blt	1f6e0 <flatcc_json_printer_clear@@Base+0x14c>
   1f6b8:	mvn	lr, #0
   1f6bc:	lsl	r3, r3, #1
   1f6c0:	lsl	r4, r2, #1
   1f6c4:	sub	r1, r1, #1
   1f6c8:	orr	r3, r3, r2, lsr #31
   1f6cc:	subs	r2, lr, r2, lsl #1
   1f6d0:	sbcs	r2, lr, r3
   1f6d4:	mov	r2, r4
   1f6d8:	blt	1f6bc <flatcc_json_printer_clear@@Base+0x128>
   1f6dc:	b	1f6e4 <flatcc_json_printer_clear@@Base+0x150>
   1f6e0:	mov	r4, r2
   1f6e4:	str	r4, [r0]
   1f6e8:	str	r3, [r0, #4]
   1f6ec:	str	r1, [r0, #8]
   1f6f0:	str	ip, [r0, #12]
   1f6f4:	pop	{r4, sl, fp, pc}
   1f6f8:	movw	r0, #1700	; 0x6a4
   1f6fc:	movw	r1, #1709	; 0x6ad
   1f700:	movw	r3, #1795	; 0x703
   1f704:	mov	r2, #260	; 0x104
   1f708:	movt	r0, #2
   1f70c:	movt	r1, #2
   1f710:	movt	r3, #2
   1f714:	bl	1299c <__assert_fail@plt>
   1f718:	push	{r4, r5, fp, lr}
   1f71c:	add	fp, sp, #8
   1f720:	ldr	ip, [fp, #24]
   1f724:	ldr	r1, [fp, #8]
   1f728:	mov	r5, #0
   1f72c:	add	r1, r1, ip
   1f730:	ldr	ip, [fp, #16]
   1f734:	add	r1, r1, #64	; 0x40
   1f738:	str	r1, [r0, #8]
   1f73c:	umull	r1, lr, ip, r2
   1f740:	umull	ip, r1, ip, r3
   1f744:	adds	lr, ip, lr
   1f748:	ldr	ip, [fp, #20]
   1f74c:	adc	r5, r5, #0
   1f750:	umull	r2, r4, ip, r2
   1f754:	adds	r2, lr, r2
   1f758:	umaal	r1, r4, ip, r3
   1f75c:	adc	r5, r5, #0
   1f760:	adds	r2, r2, #-2147483648	; 0x80000000
   1f764:	adc	r2, r5, #0
   1f768:	adds	r1, r1, r2
   1f76c:	str	r1, [r0]
   1f770:	adc	r1, r4, #0
   1f774:	str	r1, [r0, #4]
   1f778:	pop	{r4, r5, fp, pc}
   1f77c:	push	{fp, lr}
   1f780:	mov	fp, sp
   1f784:	ldr	r1, [fp, #16]
   1f788:	ldr	ip, [fp, #8]
   1f78c:	subs	r1, r2, r1
   1f790:	str	ip, [r0, #8]
   1f794:	str	r1, [r0]
   1f798:	ldr	r1, [fp, #20]
   1f79c:	sbcs	r1, r3, r1
   1f7a0:	str	r1, [r0, #4]
   1f7a4:	bcc	1f7b4 <flatcc_json_printer_clear@@Base+0x220>
   1f7a8:	ldr	r0, [fp, #24]
   1f7ac:	cmp	ip, r0
   1f7b0:	popeq	{fp, pc}
   1f7b4:	movw	r0, #1852	; 0x73c
   1f7b8:	movw	r1, #1709	; 0x6ad
   1f7bc:	movw	r3, #1877	; 0x755
   1f7c0:	mov	r2, #239	; 0xef
   1f7c4:	movt	r0, #2
   1f7c8:	movt	r1, #2
   1f7cc:	movt	r3, #2
   1f7d0:	bl	1299c <__assert_fail@plt>
   1f7d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f7d8:	add	fp, sp, #28
   1f7dc:	sub	sp, sp, #20
   1f7e0:	str	r1, [sp, #12]
   1f7e4:	ldr	r1, [fp, #16]
   1f7e8:	ldr	r9, [fp, #8]
   1f7ec:	mov	r8, r2
   1f7f0:	ldr	r2, [fp, #20]
   1f7f4:	ldr	lr, [fp, #12]
   1f7f8:	ldr	r4, [fp, #24]
   1f7fc:	str	r0, [sp, #16]
   1f800:	ldr	r0, [fp, #28]
   1f804:	mov	r6, #0
   1f808:	subs	r7, r9, r1
   1f80c:	sbc	ip, lr, r2
   1f810:	subs	r4, r7, r4
   1f814:	sbcs	r4, ip, r0
   1f818:	ldr	r0, [fp, #32]
   1f81c:	ldr	r4, [fp, #36]	; 0x24
   1f820:	movwcc	r6, #1
   1f824:	adds	r5, r0, r8
   1f828:	str	r5, [sp, #8]
   1f82c:	adc	r5, r4, r3
   1f830:	subs	sl, r8, r0
   1f834:	sbc	r8, r3, r4
   1f838:	subs	r3, r1, sl
   1f83c:	str	r5, [sp, #4]
   1f840:	sbcs	r3, r2, r8
   1f844:	bcs	1f900 <flatcc_json_printer_clear@@Base+0x36c>
   1f848:	ldr	r0, [fp, #24]
   1f84c:	ldr	r4, [fp, #28]
   1f850:	subs	r3, r7, r0
   1f854:	mov	r7, r0
   1f858:	sbcs	r3, ip, r4
   1f85c:	bcc	1f910 <flatcc_json_printer_clear@@Base+0x37c>
   1f860:	ldr	r0, [sp, #12]
   1f864:	sub	r0, r0, #1
   1f868:	str	r0, [sp, #12]
   1f86c:	adds	ip, r1, r7
   1f870:	adc	r3, r2, r4
   1f874:	subs	r6, ip, sl
   1f878:	sbcs	r6, r3, r8
   1f87c:	bcc	1f8b4 <flatcc_json_printer_clear@@Base+0x320>
   1f880:	subs	r6, ip, sl
   1f884:	mov	r5, lr
   1f888:	mov	r0, r9
   1f88c:	sbc	r4, r3, r8
   1f890:	subs	lr, sl, r1
   1f894:	sbc	r9, r8, r2
   1f898:	subs	r6, lr, r6
   1f89c:	mov	lr, r5
   1f8a0:	sbcs	r6, r9, r4
   1f8a4:	mov	r9, r0
   1f8a8:	ldr	r4, [fp, #28]
   1f8ac:	ldr	r0, [sp, #12]
   1f8b0:	bcc	1f90c <flatcc_json_printer_clear@@Base+0x378>
   1f8b4:	ldr	r2, [sp, #16]
   1f8b8:	ldrb	r1, [r2, r0]
   1f8bc:	sub	r1, r1, #1
   1f8c0:	strb	r1, [r2, r0]
   1f8c4:	subs	r1, r9, ip
   1f8c8:	sbc	r2, lr, r3
   1f8cc:	subs	r6, r1, r7
   1f8d0:	sbcs	r6, r2, r4
   1f8d4:	mov	r6, #0
   1f8d8:	movwcc	r6, #1
   1f8dc:	subs	r5, ip, sl
   1f8e0:	sbcs	r5, r3, r8
   1f8e4:	bcs	1f918 <flatcc_json_printer_clear@@Base+0x384>
   1f8e8:	subs	r1, r1, r7
   1f8ec:	sbcs	r1, r2, r4
   1f8f0:	mov	r2, r3
   1f8f4:	mov	r1, ip
   1f8f8:	bcs	1f86c <flatcc_json_printer_clear@@Base+0x2d8>
   1f8fc:	b	1f918 <flatcc_json_printer_clear@@Base+0x384>
   1f900:	ldr	r4, [fp, #28]
   1f904:	ldr	r7, [fp, #24]
   1f908:	b	1f910 <flatcc_json_printer_clear@@Base+0x37c>
   1f90c:	mov	r6, #0
   1f910:	mov	ip, r1
   1f914:	mov	r3, r2
   1f918:	ldr	r1, [sp, #8]
   1f91c:	ldr	r5, [sp, #4]
   1f920:	subs	r0, ip, r1
   1f924:	sbcs	r0, r3, r5
   1f928:	bcs	1f988 <flatcc_json_printer_clear@@Base+0x3f4>
   1f92c:	cmp	r6, #0
   1f930:	bne	1f988 <flatcc_json_printer_clear@@Base+0x3f4>
   1f934:	adds	r7, ip, r7
   1f938:	mov	r0, #0
   1f93c:	adc	r2, r3, r4
   1f940:	subs	r6, r7, r1
   1f944:	sbcs	r6, r2, r5
   1f948:	bcc	1f9c8 <flatcc_json_printer_clear@@Base+0x434>
   1f94c:	subs	r7, r7, r1
   1f950:	ldr	r6, [fp, #36]	; 0x24
   1f954:	sbc	r8, r2, r5
   1f958:	subs	sl, r1, ip
   1f95c:	sbc	r2, r5, r3
   1f960:	ldr	r5, [fp, #32]
   1f964:	lsl	r4, r6, #1
   1f968:	orr	r4, r4, r5, lsr #31
   1f96c:	subs	r1, ip, r5, lsl #1
   1f970:	sbcs	r1, r3, r4
   1f974:	bcc	1f9c8 <flatcc_json_printer_clear@@Base+0x434>
   1f978:	subs	r1, r7, sl
   1f97c:	sbcs	r1, r8, r2
   1f980:	bcs	1f9a8 <flatcc_json_printer_clear@@Base+0x414>
   1f984:	b	1f9c8 <flatcc_json_printer_clear@@Base+0x434>
   1f988:	ldr	r6, [fp, #36]	; 0x24
   1f98c:	ldr	r5, [fp, #32]
   1f990:	lsl	r0, r6, #1
   1f994:	subs	r2, ip, r5, lsl #1
   1f998:	orr	r1, r0, r5, lsr #31
   1f99c:	mov	r0, #0
   1f9a0:	sbcs	r1, r3, r1
   1f9a4:	bcc	1f9c8 <flatcc_json_printer_clear@@Base+0x434>
   1f9a8:	lsl	r0, r6, #2
   1f9ac:	subs	r1, r9, r5, lsl #2
   1f9b0:	orr	r0, r0, r5, lsr #30
   1f9b4:	sbc	r2, lr, r0
   1f9b8:	subs	r1, r1, ip
   1f9bc:	mov	r0, #0
   1f9c0:	sbcs	r1, r2, r3
   1f9c4:	movwcs	r0, #1
   1f9c8:	sub	sp, fp, #28
   1f9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f9d0:	cmp	r2, #0
   1f9d4:	bxeq	lr
   1f9d8:	push	{r4, r5, fp, lr}
   1f9dc:	add	fp, sp, #8
   1f9e0:	ldr	lr, [r2]
   1f9e4:	bic	ip, r3, #224	; 0xe0
   1f9e8:	cmp	ip, #0
   1f9ec:	beq	1fa04 <flatcc_json_printer_clear@@Base+0x470>
   1f9f0:	cmp	ip, #1
   1f9f4:	bne	1facc <flatcc_json_printer_clear@@Base+0x538>
   1f9f8:	movw	ip, #2301	; 0x8fd
   1f9fc:	movt	ip, #2
   1fa00:	b	1fa0c <flatcc_json_printer_clear@@Base+0x478>
   1fa04:	movw	ip, #2236	; 0x8bc
   1fa08:	movt	ip, #2
   1fa0c:	cmp	lr, #3
   1fa10:	bcc	1fa74 <flatcc_json_printer_clear@@Base+0x4e0>
   1fa14:	ldrb	r4, [r1]
   1fa18:	sub	lr, lr, #3
   1fa1c:	cmp	lr, #2
   1fa20:	ldrb	r4, [ip, r4, lsr #2]
   1fa24:	strb	r4, [r0]
   1fa28:	ldrb	r5, [r1, #1]
   1fa2c:	ldrb	r4, [r1]
   1fa30:	lsr	r5, r5, #4
   1fa34:	bfi	r5, r4, #4, #2
   1fa38:	ldrb	r4, [ip, r5]
   1fa3c:	strb	r4, [r0, #1]
   1fa40:	ldrb	r5, [r1, #2]
   1fa44:	ldrb	r4, [r1, #1]
   1fa48:	lsr	r5, r5, #6
   1fa4c:	bfi	r5, r4, #2, #4
   1fa50:	ldrb	r4, [ip, r5]
   1fa54:	strb	r4, [r0, #2]
   1fa58:	ldrb	r4, [r1, #2]
   1fa5c:	add	r1, r1, #3
   1fa60:	and	r4, r4, #63	; 0x3f
   1fa64:	ldrb	r4, [ip, r4]
   1fa68:	strb	r4, [r0, #3]
   1fa6c:	add	r0, r0, #4
   1fa70:	bhi	1fa14 <flatcc_json_printer_clear@@Base+0x480>
   1fa74:	and	r3, r3, #128	; 0x80
   1fa78:	cmp	lr, #1
   1fa7c:	beq	1fad4 <flatcc_json_printer_clear@@Base+0x540>
   1fa80:	cmp	lr, #2
   1fa84:	bne	1fafc <flatcc_json_printer_clear@@Base+0x568>
   1fa88:	ldrb	r5, [r1]
   1fa8c:	cmp	r3, #0
   1fa90:	ldrb	r5, [ip, r5, lsr #2]
   1fa94:	strb	r5, [r0]
   1fa98:	ldrb	r4, [r1, #1]
   1fa9c:	ldrb	r5, [r1]
   1faa0:	lsr	r4, r4, #4
   1faa4:	bfi	r4, r5, #4, #2
   1faa8:	ldrb	r5, [ip, r4]
   1faac:	strb	r5, [r0, #1]
   1fab0:	ldrb	r1, [r1, #1]
   1fab4:	and	r1, r1, #15
   1fab8:	ldrb	r1, [ip, r1, lsl #2]
   1fabc:	strb	r1, [r0, #2]
   1fac0:	movne	r1, #61	; 0x3d
   1fac4:	strbne	r1, [r0, #3]
   1fac8:	b	1fafc <flatcc_json_printer_clear@@Base+0x568>
   1facc:	mov	r0, lr
   1fad0:	b	1fb04 <flatcc_json_printer_clear@@Base+0x570>
   1fad4:	ldrb	r5, [r1]
   1fad8:	cmp	r3, #0
   1fadc:	ldrb	r5, [ip, r5, lsr #2]
   1fae0:	strb	r5, [r0]
   1fae4:	ldrb	r1, [r1]
   1fae8:	and	r1, r1, #3
   1faec:	ldrb	r1, [ip, r1, lsl #4]
   1faf0:	strb	r1, [r0, #1]
   1faf4:	movwne	r1, #15677	; 0x3d3d
   1faf8:	strhne	r1, [r0, #2]
   1fafc:	ldr	lr, [r2]
   1fb00:	mov	r0, #0
   1fb04:	sub	r0, lr, r0
   1fb08:	str	r0, [r2]
   1fb0c:	pop	{r4, r5, fp, lr}
   1fb10:	bx	lr
   1fb14:	cmp	r3, #0
   1fb18:	cmpeq	r2, #0
   1fb1c:	bne	1fb34 <flatcc_json_printer_clear@@Base+0x5a0>
   1fb20:	cmp	r1, #0
   1fb24:	cmpeq	r0, #0
   1fb28:	mvnne	r1, #0
   1fb2c:	mvnne	r0, #0
   1fb30:	b	1fb50 <flatcc_json_printer_clear@@Base+0x5bc>
   1fb34:	sub	sp, sp, #8
   1fb38:	push	{sp, lr}
   1fb3c:	bl	1fb60 <flatcc_json_printer_clear@@Base+0x5cc>
   1fb40:	ldr	lr, [sp, #4]
   1fb44:	add	sp, sp, #8
   1fb48:	pop	{r2, r3}
   1fb4c:	bx	lr
   1fb50:	push	{r1, lr}
   1fb54:	mov	r0, #8
   1fb58:	bl	1287c <raise@plt>
   1fb5c:	pop	{r1, pc}
   1fb60:	cmp	r1, r3
   1fb64:	cmpeq	r0, r2
   1fb68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb6c:	mov	r4, r0
   1fb70:	movcc	r0, #0
   1fb74:	mov	r5, r1
   1fb78:	ldr	lr, [sp, #36]	; 0x24
   1fb7c:	movcc	r1, r0
   1fb80:	bcc	1fc7c <flatcc_json_printer_clear@@Base+0x6e8>
   1fb84:	cmp	r3, #0
   1fb88:	clzeq	ip, r2
   1fb8c:	clzne	ip, r3
   1fb90:	addeq	ip, ip, #32
   1fb94:	cmp	r5, #0
   1fb98:	clzeq	r1, r4
   1fb9c:	addeq	r1, r1, #32
   1fba0:	clzne	r1, r5
   1fba4:	sub	ip, ip, r1
   1fba8:	sub	sl, ip, #32
   1fbac:	lsl	r9, r3, ip
   1fbb0:	rsb	fp, ip, #32
   1fbb4:	orr	r9, r9, r2, lsl sl
   1fbb8:	orr	r9, r9, r2, lsr fp
   1fbbc:	lsl	r8, r2, ip
   1fbc0:	cmp	r5, r9
   1fbc4:	cmpeq	r4, r8
   1fbc8:	movcc	r0, #0
   1fbcc:	movcc	r1, r0
   1fbd0:	bcc	1fbec <flatcc_json_printer_clear@@Base+0x658>
   1fbd4:	mov	r0, #1
   1fbd8:	subs	r4, r4, r8
   1fbdc:	lsl	r1, r0, sl
   1fbe0:	orr	r1, r1, r0, lsr fp
   1fbe4:	lsl	r0, r0, ip
   1fbe8:	sbc	r5, r5, r9
   1fbec:	cmp	ip, #0
   1fbf0:	beq	1fc7c <flatcc_json_printer_clear@@Base+0x6e8>
   1fbf4:	lsr	r6, r8, #1
   1fbf8:	orr	r6, r6, r9, lsl #31
   1fbfc:	lsr	r7, r9, #1
   1fc00:	mov	r2, ip
   1fc04:	b	1fc28 <flatcc_json_printer_clear@@Base+0x694>
   1fc08:	subs	r3, r4, r6
   1fc0c:	sbc	r8, r5, r7
   1fc10:	adds	r3, r3, r3
   1fc14:	adc	r8, r8, r8
   1fc18:	adds	r4, r3, #1
   1fc1c:	adc	r5, r8, #0
   1fc20:	subs	r2, r2, #1
   1fc24:	beq	1fc44 <flatcc_json_printer_clear@@Base+0x6b0>
   1fc28:	cmp	r5, r7
   1fc2c:	cmpeq	r4, r6
   1fc30:	bcs	1fc08 <flatcc_json_printer_clear@@Base+0x674>
   1fc34:	adds	r4, r4, r4
   1fc38:	adc	r5, r5, r5
   1fc3c:	subs	r2, r2, #1
   1fc40:	bne	1fc28 <flatcc_json_printer_clear@@Base+0x694>
   1fc44:	lsr	r3, r4, ip
   1fc48:	orr	r3, r3, r5, lsl fp
   1fc4c:	lsr	r2, r5, ip
   1fc50:	orr	r3, r3, r5, lsr sl
   1fc54:	adds	r0, r0, r4
   1fc58:	mov	r4, r3
   1fc5c:	lsl	r3, r2, ip
   1fc60:	orr	r3, r3, r4, lsl sl
   1fc64:	lsl	ip, r4, ip
   1fc68:	orr	r3, r3, r4, lsr fp
   1fc6c:	adc	r1, r1, r5
   1fc70:	subs	r0, r0, ip
   1fc74:	mov	r5, r2
   1fc78:	sbc	r1, r1, r3
   1fc7c:	cmp	lr, #0
   1fc80:	strdne	r4, [lr]
   1fc84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001fc88 <__libc_csu_init@@Base>:
   1fc88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fc8c:	mov	r7, r0
   1fc90:	ldr	r6, [pc, #72]	; 1fce0 <__libc_csu_init@@Base+0x58>
   1fc94:	ldr	r5, [pc, #72]	; 1fce4 <__libc_csu_init@@Base+0x5c>
   1fc98:	add	r6, pc, r6
   1fc9c:	add	r5, pc, r5
   1fca0:	sub	r6, r6, r5
   1fca4:	mov	r8, r1
   1fca8:	mov	r9, r2
   1fcac:	bl	1285c <raise@plt-0x20>
   1fcb0:	asrs	r6, r6, #2
   1fcb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fcb8:	mov	r4, #0
   1fcbc:	add	r4, r4, #1
   1fcc0:	ldr	r3, [r5], #4
   1fcc4:	mov	r2, r9
   1fcc8:	mov	r1, r8
   1fccc:	mov	r0, r7
   1fcd0:	blx	r3
   1fcd4:	cmp	r6, r4
   1fcd8:	bne	1fcbc <__libc_csu_init@@Base+0x34>
   1fcdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fce0:	andeq	r2, r1, ip, ror #4
   1fce4:	andeq	r2, r1, r4, ror #4

0001fce8 <__libc_csu_fini@@Base>:
   1fce8:	bx	lr

Disassembly of section .fini:

0001fcec <.fini>:
   1fcec:	push	{r3, lr}
   1fcf0:	pop	{r3, pc}
