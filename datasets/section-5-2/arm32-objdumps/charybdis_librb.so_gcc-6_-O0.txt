
../repos/charybdis/librb/src/.libs/librb.so:     file format elf32-littlearm


Disassembly of section .init:

000043b0 <_init>:
    43b0:	push	{r3, lr}
    43b4:	bl	4db8 <call_weak_fn>
    43b8:	pop	{r3, pc}

Disassembly of section .plt:

000043bc <.plt>:
    43bc:	push	{lr}		; (str lr, [sp, #-4]!)
    43c0:	ldr	lr, [pc, #4]	; 43cc <.plt+0x10>
    43c4:	add	lr, pc, lr
    43c8:	ldr	pc, [lr, #8]!
    43cc:	.word	0x0002fc34

000043d0 <rb_helper_run@plt>:
    43d0:	add	ip, pc, #0, 12
    43d4:	add	ip, ip, #192512	; 0x2f000
    43d8:	ldr	pc, [ip, #3124]!	; 0xc34

000043dc <TLS_method@plt>:
    43dc:	add	ip, pc, #0, 12
    43e0:	add	ip, ip, #192512	; 0x2f000
    43e4:	ldr	pc, [ip, #3116]!	; 0xc2c

000043e8 <open@plt>:
    43e8:	add	ip, pc, #0, 12
    43ec:	add	ip, ip, #192512	; 0x2f000
    43f0:	ldr	pc, [ip, #3108]!	; 0xc24

000043f4 <rb_init_netio@plt>:
    43f4:	add	ip, pc, #0, 12
    43f8:	add	ip, ip, #192512	; 0x2f000
    43fc:	ldr	pc, [ip, #3100]!	; 0xc1c

00004400 <sigemptyset@plt>:
    4400:	add	ip, pc, #0, 12
    4404:	add	ip, ip, #192512	; 0x2f000
    4408:	ldr	pc, [ip, #3092]!	; 0xc14

0000440c <strerror@plt>:
    440c:	add	ip, pc, #0, 12
    4410:	add	ip, ip, #192512	; 0x2f000
    4414:	ldr	pc, [ip, #3084]!	; 0xc0c

00004418 <rb_radixtree_elem_delete@plt>:
    4418:	add	ip, pc, #0, 12
    441c:	add	ip, ip, #192512	; 0x2f000
    4420:	ldr	pc, [ip, #3076]!	; 0xc04

00004424 <getdtablesize@plt>:
    4424:	add	ip, pc, #0, 12
    4428:	add	ip, ip, #192512	; 0x2f000
    442c:	ldr	pc, [ip, #3068]!	; 0xbfc

00004430 <abort@plt>:
    4430:	add	ip, pc, #0, 12
    4434:	add	ip, ip, #192512	; 0x2f000
    4438:	ldr	pc, [ip, #3060]!	; 0xbf4

0000443c <connect@plt>:
    443c:	add	ip, pc, #0, 12
    4440:	add	ip, ip, #192512	; 0x2f000
    4444:	ldr	pc, [ip, #3052]!	; 0xbec

00004448 <rb_ignore_errno@plt>:
    4448:	add	ip, pc, #0, 12
    444c:	add	ip, ip, #192512	; 0x2f000
    4450:	ldr	pc, [ip, #3044]!	; 0xbe4

00004454 <rb_settimeout@plt>:
    4454:	add	ip, pc, #0, 12
    4458:	add	ip, ip, #192512	; 0x2f000
    445c:	ldr	pc, [ip, #3036]!	; 0xbdc

00004460 <SSL_CTX_set_cipher_list@plt>:
    4460:	add	ip, pc, #0, 12
    4464:	add	ip, ip, #192512	; 0x2f000
    4468:	ldr	pc, [ip, #3028]!	; 0xbd4

0000446c <ERR_get_error@plt>:
    446c:	add	ip, pc, #0, 12
    4470:	add	ip, ip, #192512	; 0x2f000
    4474:	ldr	pc, [ip, #3020]!	; 0xbcc

00004478 <rb_radixtree_foreach_start@plt>:
    4478:	add	ip, pc, #0, 12
    447c:	add	ip, ip, #192512	; 0x2f000
    4480:	ldr	pc, [ip, #3012]!	; 0xbc4

00004484 <strcasestr@plt>:
    4484:	add	ip, pc, #0, 12
    4488:	add	ip, ip, #192512	; 0x2f000
    448c:	ldr	pc, [ip, #3004]!	; 0xbbc

00004490 <rb_connect_tcp@plt>:
    4490:	add	ip, pc, #0, 12
    4494:	add	ip, ip, #192512	; 0x2f000
    4498:	ldr	pc, [ip, #2996]!	; 0xbb4

0000449c <RAND_load_file@plt>:
    449c:	add	ip, pc, #0, 12
    44a0:	add	ip, ip, #192512	; 0x2f000
    44a4:	ldr	pc, [ip, #2988]!	; 0xbac

000044a8 <signalfd@plt>:
    44a8:	add	ip, pc, #0, 12
    44ac:	add	ip, ip, #192512	; 0x2f000
    44b0:	ldr	pc, [ip, #2980]!	; 0xba4

000044b4 <rb_radixtree_foreach_next@plt>:
    44b4:	add	ip, pc, #0, 12
    44b8:	add	ip, ip, #192512	; 0x2f000
    44bc:	ldr	pc, [ip, #2972]!	; 0xb9c

000044c0 <memcmp@plt>:
    44c0:	add	ip, pc, #0, 12
    44c4:	add	ip, ip, #192512	; 0x2f000
    44c8:	ldr	pc, [ip, #2964]!	; 0xb94

000044cc <SSL_CTX_free@plt>:
    44cc:	add	ip, pc, #0, 12
    44d0:	add	ip, ip, #192512	; 0x2f000
    44d4:	ldr	pc, [ip, #2956]!	; 0xb8c

000044d8 <rb_getmaxconnect@plt>:
    44d8:	add	ip, pc, #0, 12
    44dc:	add	ip, ip, #192512	; 0x2f000
    44e0:	ldr	pc, [ip, #2948]!	; 0xb84

000044e4 <sigwaitinfo@plt>:
    44e4:	add	ip, pc, #0, 12
    44e8:	add	ip, ip, #192512	; 0x2f000
    44ec:	ldr	pc, [ip, #2940]!	; 0xb7c

000044f0 <__libc_current_sigrtmin@plt>:
    44f0:	add	ip, pc, #0, 12
    44f4:	add	ip, ip, #192512	; 0x2f000
    44f8:	ldr	pc, [ip, #2932]!	; 0xb74

000044fc <__xstat@plt>:
    44fc:	add	ip, pc, #0, 12
    4500:	add	ip, ip, #192512	; 0x2f000
    4504:	ldr	pc, [ip, #2924]!	; 0xb6c

00004508 <rb_event_delete@plt>:
    4508:	add	ip, pc, #0, 12
    450c:	add	ip, ip, #192512	; 0x2f000
    4510:	ldr	pc, [ip, #2916]!	; 0xb64

00004514 <rb_setselect@plt>:
    4514:	add	ip, pc, #0, 12
    4518:	add	ip, ip, #192512	; 0x2f000
    451c:	ldr	pc, [ip, #2908]!	; 0xb5c

00004520 <rb_fd_ssl@plt>:
    4520:	add	ip, pc, #0, 12
    4524:	add	ip, ip, #192512	; 0x2f000
    4528:	ldr	pc, [ip, #2900]!	; 0xb54

0000452c <sigtimedwait@plt>:
    452c:	add	ip, pc, #0, 12
    4530:	add	ip, ip, #192512	; 0x2f000
    4534:	ldr	pc, [ip, #2892]!	; 0xb4c

00004538 <rb_setenv@plt>:
    4538:	add	ip, pc, #0, 12
    453c:	add	ip, ip, #192512	; 0x2f000
    4540:	ldr	pc, [ip, #2884]!	; 0xb44

00004544 <signal@plt>:
    4544:	add	ip, pc, #0, 12
    4548:	add	ip, ip, #192512	; 0x2f000
    454c:	ldr	pc, [ip, #2876]!	; 0xb3c

00004550 <rb_get_fd@plt>:
    4550:	add	ip, pc, #0, 12
    4554:	add	ip, ip, #192512	; 0x2f000
    4558:	ldr	pc, [ip, #2868]!	; 0xb34

0000455c <epoll_create@plt>:
    455c:	add	ip, pc, #0, 12
    4560:	add	ip, ip, #192512	; 0x2f000
    4564:	ldr	pc, [ip, #2860]!	; 0xb2c

00004568 <rb_clear_patricia@plt>:
    4568:	add	ip, pc, #0, 12
    456c:	add	ip, ip, #192512	; 0x2f000
    4570:	ldr	pc, [ip, #2852]!	; 0xb24

00004574 <__gmon_start__@plt>:
    4574:	add	ip, pc, #0, 12
    4578:	add	ip, ip, #192512	; 0x2f000
    457c:	ldr	pc, [ip, #2844]!	; 0xb1c

00004580 <SSL_CTX_clear_options@plt>:
    4580:	add	ip, pc, #0, 12
    4584:	add	ip, ip, #192512	; 0x2f000
    4588:	ldr	pc, [ip, #2836]!	; 0xb14

0000458c <SSL_get_current_cipher@plt>:
    458c:	add	ip, pc, #0, 12
    4590:	add	ip, ip, #192512	; 0x2f000
    4594:	ldr	pc, [ip, #2828]!	; 0xb0c

00004598 <timer_create@plt>:
    4598:	add	ip, pc, #0, 12
    459c:	add	ip, ip, #192512	; 0x2f000
    45a0:	ldr	pc, [ip, #2820]!	; 0xb04

000045a4 <X509_get_X509_PUBKEY@plt>:
    45a4:	add	ip, pc, #0, 12
    45a8:	add	ip, ip, #192512	; 0x2f000
    45ac:	ldr	pc, [ip, #2812]!	; 0xafc

000045b0 <rb_select@plt>:
    45b0:	add	ip, pc, #0, 12
    45b4:	add	ip, ip, #192512	; 0x2f000
    45b8:	ldr	pc, [ip, #2804]!	; 0xaf4

000045bc <rb_patricia_search_best@plt>:
    45bc:	add	ip, pc, #0, 12
    45c0:	add	ip, ip, #192512	; 0x2f000
    45c4:	ldr	pc, [ip, #2796]!	; 0xaec

000045c8 <vsnprintf@plt>:
    45c8:	add	ip, pc, #0, 12
    45cc:	add	ip, ip, #192512	; 0x2f000
    45d0:	ldr	pc, [ip, #2788]!	; 0xae4

000045d4 <socketpair@plt>:
    45d4:	add	ip, pc, #0, 12
    45d8:	add	ip, ip, #192512	; 0x2f000
    45dc:	ldr	pc, [ip, #2780]!	; 0xadc

000045e0 <strncpy@plt>:
    45e0:	add	ip, pc, #0, 12
    45e4:	add	ip, ip, #192512	; 0x2f000
    45e8:	ldr	pc, [ip, #2772]!	; 0xad4

000045ec <fclose@plt>:
    45ec:	add	ip, pc, #0, 12
    45f0:	add	ip, ip, #192512	; 0x2f000
    45f4:	ldr	pc, [ip, #2764]!	; 0xacc

000045f8 <recv@plt>:
    45f8:	add	ip, pc, #0, 12
    45fc:	add	ip, ip, #192512	; 0x2f000
    4600:	ldr	pc, [ip, #2756]!	; 0xac4

00004604 <getenv@plt>:
    4604:	add	ip, pc, #0, 12
    4608:	add	ip, ip, #192512	; 0x2f000
    460c:	ldr	pc, [ip, #2748]!	; 0xabc

00004610 <ERR_error_string_n@plt>:
    4610:	add	ip, pc, #0, 12
    4614:	add	ip, ip, #192512	; 0x2f000
    4618:	ldr	pc, [ip, #2740]!	; 0xab4

0000461c <strchr@plt>:
    461c:	add	ip, pc, #0, 12
    4620:	add	ip, ip, #192512	; 0x2f000
    4624:	ldr	pc, [ip, #2732]!	; 0xaac

00004628 <rb_gettimeofday@plt>:
    4628:	add	ip, pc, #0, 12
    462c:	add	ip, ip, #192512	; 0x2f000
    4630:	ldr	pc, [ip, #2724]!	; 0xaa4

00004634 <strcasecmp@plt>:
    4634:	add	ip, pc, #0, 12
    4638:	add	ip, ip, #192512	; 0x2f000
    463c:	ldr	pc, [ip, #2716]!	; 0xa9c

00004640 <rb_helper_restart@plt>:
    4640:	add	ip, pc, #0, 12
    4644:	add	ip, ip, #192512	; 0x2f000
    4648:	ldr	pc, [ip, #2708]!	; 0xa94

0000464c <listen@plt>:
    464c:	add	ip, pc, #0, 12
    4650:	add	ip, ip, #192512	; 0x2f000
    4654:	ldr	pc, [ip, #2700]!	; 0xa8c

00004658 <calloc@plt>:
    4658:	add	ip, pc, #0, 12
    465c:	add	ip, ip, #192512	; 0x2f000
    4660:	ldr	pc, [ip, #2692]!	; 0xa84

00004664 <SSL_write@plt>:
    4664:	add	ip, pc, #0, 12
    4668:	add	ip, ip, #192512	; 0x2f000
    466c:	ldr	pc, [ip, #2684]!	; 0xa7c

00004670 <rb_event_init@plt>:
    4670:	add	ip, pc, #0, 12
    4674:	add	ip, ip, #192512	; 0x2f000
    4678:	ldr	pc, [ip, #2676]!	; 0xa74

0000467c <fopen@plt>:
    467c:	add	ip, pc, #0, 12
    4680:	add	ip, ip, #192512	; 0x2f000
    4684:	ldr	pc, [ip, #2668]!	; 0xa6c

00004688 <rb_set_nb@plt>:
    4688:	add	ip, pc, #0, 12
    468c:	add	ip, ip, #192512	; 0x2f000
    4690:	ldr	pc, [ip, #2660]!	; 0xa64

00004694 <memset@plt>:
    4694:	add	ip, pc, #0, 12
    4698:	add	ip, ip, #192512	; 0x2f000
    469c:	ldr	pc, [ip, #2652]!	; 0xa5c

000046a0 <rb_inet_pton@plt>:
    46a0:	add	ip, pc, #0, 12
    46a4:	add	ip, ip, #192512	; 0x2f000
    46a8:	ldr	pc, [ip, #2644]!	; 0xa54

000046ac <rb_radixtree_stats@plt>:
    46ac:	add	ip, pc, #0, 12
    46b0:	add	ip, ip, #192512	; 0x2f000
    46b4:	ldr	pc, [ip, #2636]!	; 0xa4c

000046b8 <strrchr@plt>:
    46b8:	add	ip, pc, #0, 12
    46bc:	add	ip, ip, #192512	; 0x2f000
    46c0:	ldr	pc, [ip, #2628]!	; 0xa44

000046c4 <rb_write@plt>:
    46c4:	add	ip, pc, #0, 12
    46c8:	add	ip, ip, #192512	; 0x2f000
    46cc:	ldr	pc, [ip, #2620]!	; 0xa3c

000046d0 <SSL_set_fd@plt>:
    46d0:	add	ip, pc, #0, 12
    46d4:	add	ip, ip, #192512	; 0x2f000
    46d8:	ldr	pc, [ip, #2612]!	; 0xa34

000046dc <SSL_CTX_ctrl@plt>:
    46dc:	add	ip, pc, #0, 12
    46e0:	add	ip, ip, #192512	; 0x2f000
    46e4:	ldr	pc, [ip, #2604]!	; 0xa2c

000046e8 <rb_linebuf_parse@plt>:
    46e8:	add	ip, pc, #0, 12
    46ec:	add	ip, ip, #192512	; 0x2f000
    46f0:	ldr	pc, [ip, #2596]!	; 0xa24

000046f4 <writev@plt>:
    46f4:	add	ip, pc, #0, 12
    46f8:	add	ip, ip, #192512	; 0x2f000
    46fc:	ldr	pc, [ip, #2588]!	; 0xa1c

00004700 <rb_fsnprint@plt>:
    4700:	add	ip, pc, #0, 12
    4704:	add	ip, ip, #192512	; 0x2f000
    4708:	ldr	pc, [ip, #2580]!	; 0xa14

0000470c <rb_strlcpy@plt>:
    470c:	add	ip, pc, #0, 12
    4710:	add	ip, ip, #192512	; 0x2f000
    4714:	ldr	pc, [ip, #2572]!	; 0xa0c

00004718 <ntohl@plt>:
    4718:	add	ip, pc, #0, 12
    471c:	add	ip, ip, #192512	; 0x2f000
    4720:	ldr	pc, [ip, #2564]!	; 0xa04

00004724 <rb_patricia_search_best2@plt>:
    4724:	add	ip, pc, #0, 12
    4728:	add	ip, ip, #192512	; 0x2f000
    472c:	ldr	pc, [ip, #2556]!	; 0x9fc

00004730 <SSL_CIPHER_get_name@plt>:
    4730:	add	ip, pc, #0, 12
    4734:	add	ip, ip, #192512	; 0x2f000
    4738:	ldr	pc, [ip, #2548]!	; 0x9f4

0000473c <posix_spawnattr_init@plt>:
    473c:	add	ip, pc, #0, 12
    4740:	add	ip, ip, #192512	; 0x2f000
    4744:	ldr	pc, [ip, #2540]!	; 0x9ec

00004748 <OpenSSL_version_num@plt>:
    4748:	add	ip, pc, #0, 12
    474c:	add	ip, ip, #192512	; 0x2f000
    4750:	ldr	pc, [ip, #2532]!	; 0x9e4

00004754 <rb_dictionary_foreach_next@plt>:
    4754:	add	ip, pc, #0, 12
    4758:	add	ip, ip, #192512	; 0x2f000
    475c:	ldr	pc, [ip, #2524]!	; 0x9dc

00004760 <rb_kill@plt>:
    4760:	add	ip, pc, #0, 12
    4764:	add	ip, ip, #192512	; 0x2f000
    4768:	ldr	pc, [ip, #2516]!	; 0x9d4

0000476c <free@plt>:
    476c:	add	ip, pc, #0, 12
    4770:	add	ip, ip, #192512	; 0x2f000
    4774:	ldr	pc, [ip, #2508]!	; 0x9cc

00004778 <sendmsg@plt>:
    4778:	add	ip, pc, #0, 12
    477c:	add	ip, ip, #192512	; 0x2f000
    4780:	ldr	pc, [ip, #2500]!	; 0x9c4

00004784 <read@plt>:
    4784:	add	ip, pc, #0, 12
    4788:	add	ip, ip, #192512	; 0x2f000
    478c:	ldr	pc, [ip, #2492]!	; 0x9bc

00004790 <rb_radixtree_elem_add@plt>:
    4790:	add	ip, pc, #0, 12
    4794:	add	ip, ip, #192512	; 0x2f000
    4798:	ldr	pc, [ip, #2484]!	; 0x9b4

0000479c <write@plt>:
    479c:	add	ip, pc, #0, 12
    47a0:	add	ip, ip, #192512	; 0x2f000
    47a4:	ldr	pc, [ip, #2476]!	; 0x9ac

000047a8 <SSL_new@plt>:
    47a8:	add	ip, pc, #0, 12
    47ac:	add	ip, ip, #192512	; 0x2f000
    47b0:	ldr	pc, [ip, #2468]!	; 0x9a4

000047b4 <access@plt>:
    47b4:	add	ip, pc, #0, 12
    47b8:	add	ip, ip, #192512	; 0x2f000
    47bc:	ldr	pc, [ip, #2460]!	; 0x99c

000047c0 <rb_lib_loop@plt>:
    47c0:	add	ip, pc, #0, 12
    47c4:	add	ip, ip, #192512	; 0x2f000
    47c8:	ldr	pc, [ip, #2452]!	; 0x994

000047cc <timer_settime@plt>:
    47cc:	add	ip, pc, #0, 12
    47d0:	add	ip, ip, #192512	; 0x2f000
    47d4:	ldr	pc, [ip, #2444]!	; 0x98c

000047d8 <gettimeofday@plt>:
    47d8:	add	ip, pc, #0, 12
    47dc:	add	ip, ip, #192512	; 0x2f000
    47e0:	ldr	pc, [ip, #2436]!	; 0x984

000047e4 <accept@plt>:
    47e4:	add	ip, pc, #0, 12
    47e8:	add	ip, ip, #192512	; 0x2f000
    47ec:	ldr	pc, [ip, #2428]!	; 0x97c

000047f0 <SSL_read@plt>:
    47f0:	add	ip, pc, #0, 12
    47f4:	add	ip, ip, #192512	; 0x2f000
    47f8:	ldr	pc, [ip, #2420]!	; 0x974

000047fc <rb_read@plt>:
    47fc:	add	ip, pc, #0, 12
    4800:	add	ip, ip, #192512	; 0x2f000
    4804:	ldr	pc, [ip, #2412]!	; 0x96c

00004808 <socket@plt>:
    4808:	add	ip, pc, #0, 12
    480c:	add	ip, ip, #192512	; 0x2f000
    4810:	ldr	pc, [ip, #2404]!	; 0x964

00004814 <rb_linebuf_get@plt>:
    4814:	add	ip, pc, #0, 12
    4818:	add	ip, ip, #192512	; 0x2f000
    481c:	ldr	pc, [ip, #2396]!	; 0x95c

00004820 <rb_radixtree_foreach_cur@plt>:
    4820:	add	ip, pc, #0, 12
    4824:	add	ip, ip, #192512	; 0x2f000
    4828:	ldr	pc, [ip, #2388]!	; 0x954

0000482c <epoll_wait@plt>:
    482c:	add	ip, pc, #0, 12
    4830:	add	ip, ip, #192512	; 0x2f000
    4834:	ldr	pc, [ip, #2380]!	; 0x94c

00004838 <SSL_do_handshake@plt>:
    4838:	add	ip, pc, #0, 12
    483c:	add	ip, ip, #192512	; 0x2f000
    4840:	ldr	pc, [ip, #2372]!	; 0x944

00004844 <rb_linebuf_flush@plt>:
    4844:	add	ip, pc, #0, 12
    4848:	add	ip, ip, #192512	; 0x2f000
    484c:	ldr	pc, [ip, #2364]!	; 0x93c

00004850 <posix_spawn@plt>:
    4850:	add	ip, pc, #0, 12
    4854:	add	ip, ip, #192512	; 0x2f000
    4858:	ldr	pc, [ip, #2356]!	; 0x934

0000485c <strlen@plt>:
    485c:	add	ip, pc, #0, 12
    4860:	add	ip, ip, #192512	; 0x2f000
    4864:	ldr	pc, [ip, #2348]!	; 0x92c

00004868 <rb_current_time@plt>:
    4868:	add	ip, pc, #0, 12
    486c:	add	ip, ip, #192512	; 0x2f000
    4870:	ldr	pc, [ip, #2340]!	; 0x924

00004874 <strtoul@plt>:
    4874:	add	ip, pc, #0, 12
    4878:	add	ip, ip, #192512	; 0x2f000
    487c:	ldr	pc, [ip, #2332]!	; 0x91c

00004880 <memcpy@plt>:
    4880:	add	ip, pc, #0, 12
    4884:	add	ip, ip, #192512	; 0x2f000
    4888:	ldr	pc, [ip, #2324]!	; 0x914

0000488c <PEM_read_X509@plt>:
    488c:	add	ip, pc, #0, 12
    4890:	add	ip, ip, #192512	; 0x2f000
    4894:	ldr	pc, [ip, #2316]!	; 0x90c

00004898 <posix_spawnattr_setflags@plt>:
    4898:	add	ip, pc, #0, 12
    489c:	add	ip, ip, #192512	; 0x2f000
    48a0:	ldr	pc, [ip, #2308]!	; 0x904

000048a4 <SSL_CTX_use_certificate_chain_file@plt>:
    48a4:	add	ip, pc, #0, 12
    48a8:	add	ip, ip, #192512	; 0x2f000
    48ac:	ldr	pc, [ip, #2300]!	; 0x8fc

000048b0 <rb_free_rb_dlink_node@plt>:
    48b0:	add	ip, pc, #0, 12
    48b4:	add	ip, ip, #192512	; 0x2f000
    48b8:	ldr	pc, [ip, #2292]!	; 0x8f4

000048bc <SSL_CTX_set_options@plt>:
    48bc:	add	ip, pc, #0, 12
    48c0:	add	ip, ip, #192512	; 0x2f000
    48c4:	ldr	pc, [ip, #2284]!	; 0x8ec

000048c8 <posix_spawnattr_destroy@plt>:
    48c8:	add	ip, pc, #0, 12
    48cc:	add	ip, ip, #192512	; 0x2f000
    48d0:	ldr	pc, [ip, #2276]!	; 0x8e4

000048d4 <rb_close@plt>:
    48d4:	add	ip, pc, #0, 12
    48d8:	add	ip, ip, #192512	; 0x2f000
    48dc:	ldr	pc, [ip, #2268]!	; 0x8dc

000048e0 <strtol@plt>:
    48e0:	add	ip, pc, #0, 12
    48e4:	add	ip, ip, #192512	; 0x2f000
    48e8:	ldr	pc, [ip, #2260]!	; 0x8d4

000048ec <sigaddset@plt>:
    48ec:	add	ip, pc, #0, 12
    48f0:	add	ip, ip, #192512	; 0x2f000
    48f4:	ldr	pc, [ip, #2252]!	; 0x8cc

000048f8 <strcpy@plt>:
    48f8:	add	ip, pc, #0, 12
    48fc:	add	ip, ip, #192512	; 0x2f000
    4900:	ldr	pc, [ip, #2244]!	; 0x8c4

00004904 <waitpid@plt>:
    4904:	add	ip, pc, #0, 12
    4908:	add	ip, ip, #192512	; 0x2f000
    490c:	ldr	pc, [ip, #2236]!	; 0x8bc

00004910 <rb_run_one_event@plt>:
    4910:	add	ip, pc, #0, 12
    4914:	add	ip, ip, #192512	; 0x2f000
    4918:	ldr	pc, [ip, #2228]!	; 0x8b4

0000491c <rb_patricia_search_exact@plt>:
    491c:	add	ip, pc, #0, 12
    4920:	add	ip, ip, #192512	; 0x2f000
    4924:	ldr	pc, [ip, #2220]!	; 0x8ac

00004928 <strncat@plt>:
    4928:	add	ip, pc, #0, 12
    492c:	add	ip, ip, #192512	; 0x2f000
    4930:	ldr	pc, [ip, #2212]!	; 0x8a4

00004934 <atol@plt>:
    4934:	add	ip, pc, #0, 12
    4938:	add	ip, ip, #192512	; 0x2f000
    493c:	ldr	pc, [ip, #2204]!	; 0x89c

00004940 <rb_bh_free@plt>:
    4940:	add	ip, pc, #0, 12
    4944:	add	ip, ip, #192512	; 0x2f000
    4948:	ldr	pc, [ip, #2196]!	; 0x894

0000494c <rb_init_rb_dlink_nodes@plt>:
    494c:	add	ip, pc, #0, 12
    4950:	add	ip, ip, #192512	; 0x2f000
    4954:	ldr	pc, [ip, #2188]!	; 0x88c

00004958 <raise@plt>:
    4958:	add	ip, pc, #0, 12
    495c:	add	ip, ip, #192512	; 0x2f000
    4960:	ldr	pc, [ip, #2180]!	; 0x884

00004964 <EVP_sha1@plt>:
    4964:	add	ip, pc, #0, 12
    4968:	add	ip, ip, #192512	; 0x2f000
    496c:	ldr	pc, [ip, #2172]!	; 0x87c

00004970 <rb_patricia_lookup@plt>:
    4970:	add	ip, pc, #0, 12
    4974:	add	ip, ip, #192512	; 0x2f000
    4978:	ldr	pc, [ip, #2164]!	; 0x874

0000497c <shutdown@plt>:
    497c:	add	ip, pc, #0, 12
    4980:	add	ip, ip, #192512	; 0x2f000
    4984:	ldr	pc, [ip, #2156]!	; 0x86c

00004988 <bind@plt>:
    4988:	add	ip, pc, #0, 12
    498c:	add	ip, ip, #192512	; 0x2f000
    4990:	ldr	pc, [ip, #2148]!	; 0x864

00004994 <rb_lib_log@plt>:
    4994:	add	ip, pc, #0, 12
    4998:	add	ip, ip, #192512	; 0x2f000
    499c:	ldr	pc, [ip, #2140]!	; 0x85c

000049a0 <SSL_CTX_use_PrivateKey_file@plt>:
    49a0:	add	ip, pc, #0, 12
    49a4:	add	ip, ip, #192512	; 0x2f000
    49a8:	ldr	pc, [ip, #2132]!	; 0x854

000049ac <select@plt>:
    49ac:	add	ip, pc, #0, 12
    49b0:	add	ip, ip, #192512	; 0x2f000
    49b4:	ldr	pc, [ip, #2124]!	; 0x84c

000049b8 <close@plt>:
    49b8:	add	ip, pc, #0, 12
    49bc:	add	ip, ip, #192512	; 0x2f000
    49c0:	ldr	pc, [ip, #2116]!	; 0x844

000049c4 <rb_inet_ntop@plt>:
    49c4:	add	ip, pc, #0, 12
    49c8:	add	ip, ip, #192512	; 0x2f000
    49cc:	ldr	pc, [ip, #2108]!	; 0x83c

000049d0 <rb_bh_alloc@plt>:
    49d0:	add	ip, pc, #0, 12
    49d4:	add	ip, ip, #192512	; 0x2f000
    49d8:	ldr	pc, [ip, #2100]!	; 0x834

000049dc <SSL_free@plt>:
    49dc:	add	ip, pc, #0, 12
    49e0:	add	ip, ip, #192512	; 0x2f000
    49e4:	ldr	pc, [ip, #2092]!	; 0x82c

000049e8 <rb_pipe@plt>:
    49e8:	add	ip, pc, #0, 12
    49ec:	add	ip, ip, #192512	; 0x2f000
    49f0:	ldr	pc, [ip, #2084]!	; 0x824

000049f4 <strncasecmp@plt>:
    49f4:	add	ip, pc, #0, 12
    49f8:	add	ip, ip, #192512	; 0x2f000
    49fc:	ldr	pc, [ip, #2076]!	; 0x81c

00004a00 <rb_outofmemory@plt>:
    4a00:	add	ip, pc, #0, 12
    4a04:	add	ip, ip, #192512	; 0x2f000
    4a08:	ldr	pc, [ip, #2068]!	; 0x814

00004a0c <rb_set_time@plt>:
    4a0c:	add	ip, pc, #0, 12
    4a10:	add	ip, ip, #192512	; 0x2f000
    4a14:	ldr	pc, [ip, #2060]!	; 0x80c

00004a18 <rb_dictionary_stats@plt>:
    4a18:	add	ip, pc, #0, 12
    4a1c:	add	ip, ip, #192512	; 0x2f000
    4a20:	ldr	pc, [ip, #2052]!	; 0x804

00004a24 <malloc@plt>:
    4a24:	add	ip, pc, #0, 12
    4a28:	add	ip, ip, #192512	; 0x2f000
    4a2c:	ldr	pc, [ip, #2044]!	; 0x7fc

00004a30 <sigprocmask@plt>:
    4a30:	add	ip, pc, #0, 12
    4a34:	add	ip, ip, #192512	; 0x2f000
    4a38:	ldr	pc, [ip, #2036]!	; 0x7f4

00004a3c <rb_event_run@plt>:
    4a3c:	add	ip, pc, #0, 12
    4a40:	add	ip, ip, #192512	; 0x2f000
    4a44:	ldr	pc, [ip, #2028]!	; 0x7ec

00004a48 <SSL_set_accept_state@plt>:
    4a48:	add	ip, pc, #0, 12
    4a4c:	add	ip, ip, #192512	; 0x2f000
    4a50:	ldr	pc, [ip, #2020]!	; 0x7e4

00004a54 <rb_init_bh@plt>:
    4a54:	add	ip, pc, #0, 12
    4a58:	add	ip, ip, #192512	; 0x2f000
    4a5c:	ldr	pc, [ip, #2012]!	; 0x7dc

00004a60 <PEM_read_DHparams@plt>:
    4a60:	add	ip, pc, #0, 12
    4a64:	add	ip, ip, #192512	; 0x2f000
    4a68:	ldr	pc, [ip, #2004]!	; 0x7d4

00004a6c <gmtime_r@plt>:
    4a6c:	add	ip, pc, #0, 12
    4a70:	add	ip, ip, #192512	; 0x2f000
    4a74:	ldr	pc, [ip, #1996]!	; 0x7cc

00004a78 <poll@plt>:
    4a78:	add	ip, pc, #0, 12
    4a7c:	add	ip, ip, #192512	; 0x2f000
    4a80:	ldr	pc, [ip, #1988]!	; 0x7c4

00004a84 <ASN1_item_digest@plt>:
    4a84:	add	ip, pc, #0, 12
    4a88:	add	ip, ip, #192512	; 0x2f000
    4a8c:	ldr	pc, [ip, #1980]!	; 0x7bc

00004a90 <strnlen@plt>:
    4a90:	add	ip, pc, #0, 12
    4a94:	add	ip, ip, #192512	; 0x2f000
    4a98:	ldr	pc, [ip, #1972]!	; 0x7b4

00004a9c <SSL_get_peer_certificate@plt>:
    4a9c:	add	ip, pc, #0, 12
    4aa0:	add	ip, ip, #192512	; 0x2f000
    4aa4:	ldr	pc, [ip, #1964]!	; 0x7ac

00004aa8 <rb_dictionary_find@plt>:
    4aa8:	add	ip, pc, #0, 12
    4aac:	add	ip, ip, #192512	; 0x2f000
    4ab0:	ldr	pc, [ip, #1956]!	; 0x7a4

00004ab4 <rb_lib_init@plt>:
    4ab4:	add	ip, pc, #0, 12
    4ab8:	add	ip, ip, #192512	; 0x2f000
    4abc:	ldr	pc, [ip, #1948]!	; 0x79c

00004ac0 <SSL_get_verify_result@plt>:
    4ac0:	add	ip, pc, #0, 12
    4ac4:	add	ip, ip, #192512	; 0x2f000
    4ac8:	ldr	pc, [ip, #1940]!	; 0x794

00004acc <strtok_r@plt>:
    4acc:	add	ip, pc, #0, 12
    4ad0:	add	ip, ip, #192512	; 0x2f000
    4ad4:	ldr	pc, [ip, #1932]!	; 0x78c

00004ad8 <rb_lib_restart@plt>:
    4ad8:	add	ip, pc, #0, 12
    4adc:	add	ip, ip, #192512	; 0x2f000
    4ae0:	ldr	pc, [ip, #1924]!	; 0x784

00004ae4 <DH_free@plt>:
    4ae4:	add	ip, pc, #0, 12
    4ae8:	add	ip, ip, #192512	; 0x2f000
    4aec:	ldr	pc, [ip, #1916]!	; 0x77c

00004af0 <timer_delete@plt>:
    4af0:	add	ip, pc, #0, 12
    4af4:	add	ip, ip, #192512	; 0x2f000
    4af8:	ldr	pc, [ip, #1908]!	; 0x774

00004afc <rb_open@plt>:
    4afc:	add	ip, pc, #0, 12
    4b00:	add	ip, ip, #192512	; 0x2f000
    4b04:	ldr	pc, [ip, #1900]!	; 0x76c

00004b08 <rb_get_sockerr@plt>:
    4b08:	add	ip, pc, #0, 12
    4b0c:	add	ip, ip, #192512	; 0x2f000
    4b10:	ldr	pc, [ip, #1892]!	; 0x764

00004b14 <send@plt>:
    4b14:	add	ip, pc, #0, 12
    4b18:	add	ip, ip, #192512	; 0x2f000
    4b1c:	ldr	pc, [ip, #1884]!	; 0x75c

00004b20 <SSL_shutdown@plt>:
    4b20:	add	ip, pc, #0, 12
    4b24:	add	ip, ip, #192512	; 0x2f000
    4b28:	ldr	pc, [ip, #1876]!	; 0x754

00004b2c <rb_bh_create@plt>:
    4b2c:	add	ip, pc, #0, 12
    4b30:	add	ip, ip, #192512	; 0x2f000
    4b34:	ldr	pc, [ip, #1868]!	; 0x74c

00004b38 <dup2@plt>:
    4b38:	add	ip, pc, #0, 12
    4b3c:	add	ip, ip, #192512	; 0x2f000
    4b40:	ldr	pc, [ip, #1860]!	; 0x744

00004b44 <getpid@plt>:
    4b44:	add	ip, pc, #0, 12
    4b48:	add	ip, ip, #192512	; 0x2f000
    4b4c:	ldr	pc, [ip, #1852]!	; 0x73c

00004b50 <rb_writev@plt>:
    4b50:	add	ip, pc, #0, 12
    4b54:	add	ip, ip, #192512	; 0x2f000
    4b58:	ldr	pc, [ip, #1844]!	; 0x734

00004b5c <RAND_bytes@plt>:
    4b5c:	add	ip, pc, #0, 12
    4b60:	add	ip, ip, #192512	; 0x2f000
    4b64:	ldr	pc, [ip, #1836]!	; 0x72c

00004b68 <rb_linebuf_newbuf@plt>:
    4b68:	add	ip, pc, #0, 12
    4b6c:	add	ip, ip, #192512	; 0x2f000
    4b70:	ldr	pc, [ip, #1828]!	; 0x724

00004b74 <rb_fdlist_init@plt>:
    4b74:	add	ip, pc, #0, 12
    4b78:	add	ip, ip, #192512	; 0x2f000
    4b7c:	ldr	pc, [ip, #1820]!	; 0x71c

00004b80 <rb_event_add@plt>:
    4b80:	add	ip, pc, #0, 12
    4b84:	add	ip, ip, #192512	; 0x2f000
    4b88:	ldr	pc, [ip, #1812]!	; 0x714

00004b8c <readlink@plt>:
    4b8c:	add	ip, pc, #0, 12
    4b90:	add	ip, ip, #192512	; 0x2f000
    4b94:	ldr	pc, [ip, #1804]!	; 0x70c

00004b98 <htonl@plt>:
    4b98:	add	ip, pc, #0, 12
    4b9c:	add	ip, ip, #192512	; 0x2f000
    4ba0:	ldr	pc, [ip, #1796]!	; 0x704

00004ba4 <SSL_CTX_new@plt>:
    4ba4:	add	ip, pc, #0, 12
    4ba8:	add	ip, ip, #192512	; 0x2f000
    4bac:	ldr	pc, [ip, #1788]!	; 0x6fc

00004bb0 <rb_setup_fd@plt>:
    4bb0:	add	ip, pc, #0, 12
    4bb4:	add	ip, ip, #192512	; 0x2f000
    4bb8:	ldr	pc, [ip, #1780]!	; 0x6f4

00004bbc <recvmsg@plt>:
    4bbc:	add	ip, pc, #0, 12
    4bc0:	add	ip, ip, #192512	; 0x2f000
    4bc4:	ldr	pc, [ip, #1772]!	; 0x6ec

00004bc8 <rand@plt>:
    4bc8:	add	ip, pc, #0, 12
    4bcc:	add	ip, ip, #192512	; 0x2f000
    4bd0:	ldr	pc, [ip, #1764]!	; 0x6e4

00004bd4 <rb_linebuf_init@plt>:
    4bd4:	add	ip, pc, #0, 12
    4bd8:	add	ip, ip, #192512	; 0x2f000
    4bdc:	ldr	pc, [ip, #1756]!	; 0x6dc

00004be0 <__fxstat@plt>:
    4be0:	add	ip, pc, #0, 12
    4be4:	add	ip, ip, #192512	; 0x2f000
    4be8:	ldr	pc, [ip, #1748]!	; 0x6d4

00004bec <SSL_set_connect_state@plt>:
    4bec:	add	ip, pc, #0, 12
    4bf0:	add	ip, ip, #192512	; 0x2f000
    4bf4:	ldr	pc, [ip, #1740]!	; 0x6cc

00004bf8 <rb_radixtree_elem_find@plt>:
    4bf8:	add	ip, pc, #0, 12
    4bfc:	add	ip, ip, #192512	; 0x2f000
    4c00:	ldr	pc, [ip, #1732]!	; 0x6c4

00004c04 <rb_make_rb_dlink_node@plt>:
    4c04:	add	ip, pc, #0, 12
    4c08:	add	ip, ip, #192512	; 0x2f000
    4c0c:	ldr	pc, [ip, #1724]!	; 0x6bc

00004c10 <rb_strlcat@plt>:
    4c10:	add	ip, pc, #0, 12
    4c14:	add	ip, ip, #192512	; 0x2f000
    4c18:	ldr	pc, [ip, #1716]!	; 0x6b4

00004c1c <rb_spawn_process@plt>:
    4c1c:	add	ip, pc, #0, 12
    4c20:	add	ip, ip, #192512	; 0x2f000
    4c24:	ldr	pc, [ip, #1708]!	; 0x6ac

00004c28 <EVP_sha512@plt>:
    4c28:	add	ip, pc, #0, 12
    4c2c:	add	ip, ip, #192512	; 0x2f000
    4c30:	ldr	pc, [ip, #1700]!	; 0x6a4

00004c34 <snprintf@plt>:
    4c34:	add	ip, pc, #0, 12
    4c38:	add	ip, ip, #192512	; 0x2f000
    4c3c:	ldr	pc, [ip, #1692]!	; 0x69c

00004c40 <RAND_status@plt>:
    4c40:	add	ip, pc, #0, 12
    4c44:	add	ip, ip, #192512	; 0x2f000
    4c48:	ldr	pc, [ip, #1684]!	; 0x694

00004c4c <timerfd_create@plt>:
    4c4c:	add	ip, pc, #0, 12
    4c50:	add	ip, ip, #192512	; 0x2f000
    4c54:	ldr	pc, [ip, #1676]!	; 0x68c

00004c58 <EVP_sha256@plt>:
    4c58:	add	ip, pc, #0, 12
    4c5c:	add	ip, ip, #192512	; 0x2f000
    4c60:	ldr	pc, [ip, #1668]!	; 0x684

00004c64 <strcspn@plt>:
    4c64:	add	ip, pc, #0, 12
    4c68:	add	ip, ip, #192512	; 0x2f000
    4c6c:	ldr	pc, [ip, #1660]!	; 0x67c

00004c70 <rb_linebuf_put@plt>:
    4c70:	add	ip, pc, #0, 12
    4c74:	add	ip, ip, #192512	; 0x2f000
    4c78:	ldr	pc, [ip, #1652]!	; 0x674

00004c7c <rb_listen@plt>:
    4c7c:	add	ip, pc, #0, 12
    4c80:	add	ip, ip, #192512	; 0x2f000
    4c84:	ldr	pc, [ip, #1644]!	; 0x66c

00004c88 <fcntl@plt>:
    4c88:	add	ip, pc, #0, 12
    4c8c:	add	ip, ip, #192512	; 0x2f000
    4c90:	ldr	pc, [ip, #1636]!	; 0x664

00004c94 <strncmp@plt>:
    4c94:	add	ip, pc, #0, 12
    4c98:	add	ip, ip, #192512	; 0x2f000
    4c9c:	ldr	pc, [ip, #1628]!	; 0x65c

00004ca0 <kill@plt>:
    4ca0:	add	ip, pc, #0, 12
    4ca4:	add	ip, ip, #192512	; 0x2f000
    4ca8:	ldr	pc, [ip, #1620]!	; 0x654

00004cac <nanosleep@plt>:
    4cac:	add	ip, pc, #0, 12
    4cb0:	add	ip, ip, #192512	; 0x2f000
    4cb4:	ldr	pc, [ip, #1612]!	; 0x64c

00004cb8 <rb_event_next@plt>:
    4cb8:	add	ip, pc, #0, 12
    4cbc:	add	ip, ip, #192512	; 0x2f000
    4cc0:	ldr	pc, [ip, #1604]!	; 0x644

00004cc4 <realloc@plt>:
    4cc4:	add	ip, pc, #0, 12
    4cc8:	add	ip, ip, #192512	; 0x2f000
    4ccc:	ldr	pc, [ip, #1596]!	; 0x63c

00004cd0 <timerfd_settime@plt>:
    4cd0:	add	ip, pc, #0, 12
    4cd4:	add	ip, ip, #192512	; 0x2f000
    4cd8:	ldr	pc, [ip, #1588]!	; 0x634

00004cdc <epoll_ctl@plt>:
    4cdc:	add	ip, pc, #0, 12
    4ce0:	add	ip, ip, #192512	; 0x2f000
    4ce4:	ldr	pc, [ip, #1580]!	; 0x62c

00004ce8 <X509_free@plt>:
    4ce8:	add	ip, pc, #0, 12
    4cec:	add	ip, ip, #192512	; 0x2f000
    4cf0:	ldr	pc, [ip, #1572]!	; 0x624

00004cf4 <readv@plt>:
    4cf4:	add	ip, pc, #0, 12
    4cf8:	add	ip, ip, #192512	; 0x2f000
    4cfc:	ldr	pc, [ip, #1564]!	; 0x61c

00004d00 <getsockopt@plt>:
    4d00:	add	ip, pc, #0, 12
    4d04:	add	ip, ip, #192512	; 0x2f000
    4d08:	ldr	pc, [ip, #1556]!	; 0x614

00004d0c <pipe@plt>:
    4d0c:	add	ip, pc, #0, 12
    4d10:	add	ip, ip, #192512	; 0x2f000
    4d14:	ldr	pc, [ip, #1548]!	; 0x60c

00004d18 <OpenSSL_version@plt>:
    4d18:	add	ip, pc, #0, 12
    4d1c:	add	ip, ip, #192512	; 0x2f000
    4d20:	ldr	pc, [ip, #1540]!	; 0x604

00004d24 <setsockopt@plt>:
    4d24:	add	ip, pc, #0, 12
    4d28:	add	ip, ip, #192512	; 0x2f000
    4d2c:	ldr	pc, [ip, #1532]!	; 0x5fc

00004d30 <SSL_get_error@plt>:
    4d30:	add	ip, pc, #0, 12
    4d34:	add	ip, ip, #192512	; 0x2f000
    4d38:	ldr	pc, [ip, #1524]!	; 0x5f4

00004d3c <SSL_get_version@plt>:
    4d3c:	add	ip, pc, #0, 12
    4d40:	add	ip, ip, #192512	; 0x2f000
    4d44:	ldr	pc, [ip, #1516]!	; 0x5ec

00004d48 <rb_radixtree_delete@plt>:
    4d48:	add	ip, pc, #0, 12
    4d4c:	add	ip, ip, #192512	; 0x2f000
    4d50:	ldr	pc, [ip, #1508]!	; 0x5e4

00004d54 <tolower@plt>:
    4d54:	add	ip, pc, #0, 12
    4d58:	add	ip, ip, #192512	; 0x2f000
    4d5c:	ldr	pc, [ip, #1500]!	; 0x5dc

00004d60 <setenv@plt>:
    4d60:	add	ip, pc, #0, 12
    4d64:	add	ip, ip, #192512	; 0x2f000
    4d68:	ldr	pc, [ip, #1492]!	; 0x5d4

00004d6c <strcmp@plt>:
    4d6c:	add	ip, pc, #0, 12
    4d70:	add	ip, ip, #192512	; 0x2f000
    4d74:	ldr	pc, [ip, #1484]!	; 0x5cc

00004d78 <__errno_location@plt>:
    4d78:	add	ip, pc, #0, 12
    4d7c:	add	ip, ip, #192512	; 0x2f000
    4d80:	ldr	pc, [ip, #1476]!	; 0x5c4

00004d84 <__cxa_finalize@plt>:
    4d84:	add	ip, pc, #0, 12
    4d88:	add	ip, ip, #192512	; 0x2f000
    4d8c:	ldr	pc, [ip, #1468]!	; 0x5bc

00004d90 <sprintf@plt>:
    4d90:	add	ip, pc, #0, 12
    4d94:	add	ip, ip, #192512	; 0x2f000
    4d98:	ldr	pc, [ip, #1460]!	; 0x5b4

00004d9c <rb_bh_usage@plt>:
    4d9c:	add	ip, pc, #0, 12
    4da0:	add	ip, ip, #192512	; 0x2f000
    4da4:	ldr	pc, [ip, #1452]!	; 0x5ac

00004da8 <SSL_CTX_set_verify@plt>:
    4da8:	add	ip, pc, #0, 12
    4dac:	add	ip, ip, #192512	; 0x2f000
    4db0:	ldr	pc, [ip, #1444]!	; 0x5a4

Disassembly of section .text:

00004db8 <call_weak_fn>:
    4db8:	ldr	r3, [pc, #20]	; 4dd4 <call_weak_fn+0x1c>
    4dbc:	ldr	r2, [pc, #20]	; 4dd8 <call_weak_fn+0x20>
    4dc0:	add	r3, pc, r3
    4dc4:	ldr	r2, [r3, r2]
    4dc8:	cmp	r2, #0
    4dcc:	bxeq	lr
    4dd0:	b	4574 <__gmon_start__@plt>
    4dd4:	.word	0x0002f238
    4dd8:	.word	0x00000368

00004ddc <deregister_tm_clones>:
    4ddc:	ldr	r3, [pc, #52]	; 4e18 <deregister_tm_clones+0x3c>
    4de0:	ldr	r0, [pc, #52]	; 4e1c <deregister_tm_clones+0x40>
    4de4:	add	r3, pc, r3
    4de8:	add	r0, pc, r0
    4dec:	add	r3, r3, #3
    4df0:	sub	r3, r3, r0
    4df4:	cmp	r3, #6
    4df8:	ldr	r3, [pc, #32]	; 4e20 <deregister_tm_clones+0x44>
    4dfc:	add	r3, pc, r3
    4e00:	bxls	lr
    4e04:	ldr	r2, [pc, #24]	; 4e24 <deregister_tm_clones+0x48>
    4e08:	ldr	r3, [r3, r2]
    4e0c:	cmp	r3, #0
    4e10:	bxeq	lr
    4e14:	bx	r3
    4e18:	.word	0x0002fbb0
    4e1c:	.word	0x0002fbac
    4e20:	.word	0x0002f1fc
    4e24:	.word	0x00000388

00004e28 <register_tm_clones>:
    4e28:	ldr	r1, [pc, #56]	; 4e68 <register_tm_clones+0x40>
    4e2c:	ldr	r0, [pc, #56]	; 4e6c <register_tm_clones+0x44>
    4e30:	add	r1, pc, r1
    4e34:	add	r0, pc, r0
    4e38:	sub	r1, r1, r0
    4e3c:	ldr	r3, [pc, #44]	; 4e70 <register_tm_clones+0x48>
    4e40:	asr	r1, r1, #2
    4e44:	add	r3, pc, r3
    4e48:	add	r1, r1, r1, lsr #31
    4e4c:	asrs	r1, r1, #1
    4e50:	bxeq	lr
    4e54:	ldr	r2, [pc, #24]	; 4e74 <register_tm_clones+0x4c>
    4e58:	ldr	r3, [r3, r2]
    4e5c:	cmp	r3, #0
    4e60:	bxeq	lr
    4e64:	bx	r3
    4e68:	.word	0x0002fb64
    4e6c:	.word	0x0002fb60
    4e70:	.word	0x0002f1b4
    4e74:	.word	0x00000398

00004e78 <__do_global_dtors_aux>:
    4e78:	ldr	r3, [pc, #76]	; 4ecc <__do_global_dtors_aux+0x54>
    4e7c:	ldr	r2, [pc, #76]	; 4ed0 <__do_global_dtors_aux+0x58>
    4e80:	add	r3, pc, r3
    4e84:	add	r2, pc, r2
    4e88:	ldrb	r3, [r3]
    4e8c:	cmp	r3, #0
    4e90:	bxne	lr
    4e94:	ldr	r3, [pc, #56]	; 4ed4 <__do_global_dtors_aux+0x5c>
    4e98:	push	{r4, lr}
    4e9c:	ldr	r3, [r2, r3]
    4ea0:	cmp	r3, #0
    4ea4:	beq	4eb4 <__do_global_dtors_aux+0x3c>
    4ea8:	ldr	r3, [pc, #40]	; 4ed8 <__do_global_dtors_aux+0x60>
    4eac:	ldr	r0, [pc, r3]
    4eb0:	bl	4d84 <__cxa_finalize@plt>
    4eb4:	bl	4ddc <deregister_tm_clones>
    4eb8:	ldr	r3, [pc, #28]	; 4edc <__do_global_dtors_aux+0x64>
    4ebc:	mov	r2, #1
    4ec0:	add	r3, pc, r3
    4ec4:	strb	r2, [r3]
    4ec8:	pop	{r4, pc}
    4ecc:	.word	0x0002fb18
    4ed0:	.word	0x0002f174
    4ed4:	.word	0x00000428
    4ed8:	.word	0x0002f57c
    4edc:	.word	0x0002fad8

00004ee0 <frame_dummy>:
    4ee0:	ldr	r0, [pc, #56]	; 4f20 <frame_dummy+0x40>
    4ee4:	ldr	r3, [pc, #56]	; 4f24 <frame_dummy+0x44>
    4ee8:	add	r0, pc, r0
    4eec:	ldr	r2, [r0]
    4ef0:	add	r3, pc, r3
    4ef4:	cmp	r2, #0
    4ef8:	bne	4f00 <frame_dummy+0x20>
    4efc:	b	4e28 <register_tm_clones>
    4f00:	ldr	r2, [pc, #32]	; 4f28 <frame_dummy+0x48>
    4f04:	ldr	r3, [r3, r2]
    4f08:	cmp	r3, #0
    4f0c:	beq	4efc <frame_dummy+0x1c>
    4f10:	push	{r4, lr}
    4f14:	blx	r3
    4f18:	pop	{r4, lr}
    4f1c:	b	4e28 <register_tm_clones>
    4f20:	.word	0x0002f004
    4f24:	.word	0x0002f108
    4f28:	.word	0x0000036c

00004f2c <rb_spawn_process>:
    4f2c:	push	{r4, fp, lr}
    4f30:	add	fp, sp, #8
    4f34:	sub	sp, sp, #372	; 0x174
    4f38:	str	r0, [fp, #-368]	; 0xfffffe90
    4f3c:	str	r1, [fp, #-372]	; 0xfffffe8c
    4f40:	ldr	r4, [pc, #160]	; 4fe8 <rb_spawn_process+0xbc>
    4f44:	add	r4, pc, r4
    4f48:	ldr	r3, [fp, #-372]	; 0xfffffe8c
    4f4c:	str	r3, [fp, #-16]
    4f50:	sub	r3, fp, #364	; 0x16c
    4f54:	mov	r0, r3
    4f58:	bl	473c <posix_spawnattr_init@plt>
    4f5c:	sub	r3, fp, #364	; 0x16c
    4f60:	mov	r1, #64	; 0x40
    4f64:	mov	r0, r3
    4f68:	bl	4898 <posix_spawnattr_setflags@plt>
    4f6c:	ldr	r3, [pc, #120]	; 4fec <rb_spawn_process+0xc0>
    4f70:	ldr	r3, [r4, r3]
    4f74:	ldr	r3, [r3]
    4f78:	str	r3, [fp, #-20]	; 0xffffffec
    4f7c:	sub	r2, fp, #364	; 0x16c
    4f80:	sub	r0, fp, #28
    4f84:	ldr	r3, [fp, #-20]	; 0xffffffec
    4f88:	str	r3, [sp, #4]
    4f8c:	ldr	r3, [fp, #-16]
    4f90:	str	r3, [sp]
    4f94:	mov	r3, r2
    4f98:	mov	r2, #0
    4f9c:	ldr	r1, [fp, #-368]	; 0xfffffe90
    4fa0:	bl	4850 <posix_spawn@plt>
    4fa4:	str	r0, [fp, #-24]	; 0xffffffe8
    4fa8:	sub	r3, fp, #364	; 0x16c
    4fac:	mov	r0, r3
    4fb0:	bl	48c8 <posix_spawnattr_destroy@plt>
    4fb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4fb8:	cmp	r3, #0
    4fbc:	beq	4fd8 <rb_spawn_process+0xac>
    4fc0:	bl	4d78 <__errno_location@plt>
    4fc4:	mov	r2, r0
    4fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4fcc:	str	r3, [r2]
    4fd0:	mvn	r3, #0
    4fd4:	str	r3, [fp, #-28]	; 0xffffffe4
    4fd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4fdc:	mov	r0, r3
    4fe0:	sub	sp, fp, #8
    4fe4:	pop	{r4, fp, pc}
    4fe8:	.word	0x0002f0b4
    4fec:	.word	0x000003b0

00004ff0 <rb_gettimeofday>:
    4ff0:	push	{fp, lr}
    4ff4:	add	fp, sp, #4
    4ff8:	sub	sp, sp, #8
    4ffc:	str	r0, [fp, #-8]
    5000:	str	r1, [fp, #-12]
    5004:	ldr	r1, [fp, #-12]
    5008:	ldr	r0, [fp, #-8]
    500c:	bl	47d8 <gettimeofday@plt>
    5010:	mov	r3, r0
    5014:	mov	r0, r3
    5018:	sub	sp, fp, #4
    501c:	pop	{fp, pc}

00005020 <rb_sleep>:
    5020:	push	{fp, lr}
    5024:	add	fp, sp, #4
    5028:	sub	sp, sp, #16
    502c:	str	r0, [fp, #-16]
    5030:	str	r1, [fp, #-20]	; 0xffffffec
    5034:	ldr	r3, [fp, #-20]	; 0xffffffec
    5038:	mov	r2, #1000	; 0x3e8
    503c:	mul	r3, r2, r3
    5040:	str	r3, [fp, #-8]
    5044:	ldr	r3, [fp, #-16]
    5048:	str	r3, [fp, #-12]
    504c:	sub	r3, fp, #12
    5050:	mov	r1, #0
    5054:	mov	r0, r3
    5058:	bl	4cac <nanosleep@plt>
    505c:	nop			; (mov r0, r0)
    5060:	sub	sp, fp, #4
    5064:	pop	{fp, pc}

00005068 <rb_strerror>:
    5068:	push	{fp, lr}
    506c:	add	fp, sp, #4
    5070:	sub	sp, sp, #8
    5074:	str	r0, [fp, #-8]
    5078:	ldr	r0, [fp, #-8]
    507c:	bl	440c <strerror@plt>
    5080:	mov	r3, r0
    5084:	mov	r0, r3
    5088:	sub	sp, fp, #4
    508c:	pop	{fp, pc}

00005090 <rb_kill>:
    5090:	push	{fp, lr}
    5094:	add	fp, sp, #4
    5098:	sub	sp, sp, #8
    509c:	str	r0, [fp, #-8]
    50a0:	str	r1, [fp, #-12]
    50a4:	ldr	r1, [fp, #-12]
    50a8:	ldr	r0, [fp, #-8]
    50ac:	bl	4ca0 <kill@plt>
    50b0:	mov	r3, r0
    50b4:	mov	r0, r3
    50b8:	sub	sp, fp, #4
    50bc:	pop	{fp, pc}

000050c0 <rb_setenv>:
    50c0:	push	{fp, lr}
    50c4:	add	fp, sp, #4
    50c8:	sub	sp, sp, #16
    50cc:	str	r0, [fp, #-8]
    50d0:	str	r1, [fp, #-12]
    50d4:	str	r2, [fp, #-16]
    50d8:	ldr	r2, [fp, #-16]
    50dc:	ldr	r1, [fp, #-12]
    50e0:	ldr	r0, [fp, #-8]
    50e4:	bl	4d60 <setenv@plt>
    50e8:	mov	r3, r0
    50ec:	mov	r0, r3
    50f0:	sub	sp, fp, #4
    50f4:	pop	{fp, pc}

000050f8 <rb_waitpid>:
    50f8:	push	{fp, lr}
    50fc:	add	fp, sp, #4
    5100:	sub	sp, sp, #16
    5104:	str	r0, [fp, #-8]
    5108:	str	r1, [fp, #-12]
    510c:	str	r2, [fp, #-16]
    5110:	ldr	r2, [fp, #-16]
    5114:	ldr	r1, [fp, #-12]
    5118:	ldr	r0, [fp, #-8]
    511c:	bl	4904 <waitpid@plt>
    5120:	mov	r3, r0
    5124:	mov	r0, r3
    5128:	sub	sp, fp, #4
    512c:	pop	{fp, pc}

00005130 <rb_getpid>:
    5130:	push	{fp, lr}
    5134:	add	fp, sp, #4
    5138:	bl	4b44 <getpid@plt>
    513c:	mov	r3, r0
    5140:	mov	r0, r3
    5144:	pop	{fp, pc}

00005148 <rb_path_to_self>:
    5148:	push	{fp, lr}
    514c:	add	fp, sp, #4
    5150:	mov	r2, #4096	; 0x1000
    5154:	ldr	r3, [pc, #56]	; 5194 <rb_path_to_self+0x4c>
    5158:	add	r3, pc, r3
    515c:	mov	r1, r3
    5160:	ldr	r3, [pc, #48]	; 5198 <rb_path_to_self+0x50>
    5164:	add	r3, pc, r3
    5168:	mov	r0, r3
    516c:	bl	4b8c <readlink@plt>
    5170:	mov	r3, r0
    5174:	cmn	r3, #1
    5178:	beq	5188 <rb_path_to_self+0x40>
    517c:	ldr	r3, [pc, #24]	; 519c <rb_path_to_self+0x54>
    5180:	add	r3, pc, r3
    5184:	b	518c <rb_path_to_self+0x44>
    5188:	mov	r3, #0
    518c:	mov	r0, r3
    5190:	pop	{fp, pc}
    5194:	.word	0x0002f844
    5198:	.word	0x0001c88c
    519c:	.word	0x0002f81c

000051a0 <rb_init_netio_win32>:
    51a0:	push	{fp, lr}
    51a4:	add	fp, sp, #4
    51a8:	bl	4d78 <__errno_location@plt>
    51ac:	mov	r2, r0
    51b0:	mov	r3, #38	; 0x26
    51b4:	str	r3, [r2]
    51b8:	mvn	r3, #0
    51bc:	mov	r0, r3
    51c0:	pop	{fp, pc}

000051c4 <rb_setselect_win32>:
    51c4:	push	{fp, lr}
    51c8:	add	fp, sp, #4
    51cc:	sub	sp, sp, #16
    51d0:	str	r0, [fp, #-8]
    51d4:	str	r1, [fp, #-12]
    51d8:	str	r2, [fp, #-16]
    51dc:	str	r3, [fp, #-20]	; 0xffffffec
    51e0:	bl	4d78 <__errno_location@plt>
    51e4:	mov	r2, r0
    51e8:	mov	r3, #38	; 0x26
    51ec:	str	r3, [r2]
    51f0:	nop			; (mov r0, r0)
    51f4:	sub	sp, fp, #4
    51f8:	pop	{fp, pc}

000051fc <rb_select_win32>:
    51fc:	push	{fp, lr}
    5200:	add	fp, sp, #4
    5204:	sub	sp, sp, #8
    5208:	str	r0, [fp, #-8]
    520c:	bl	4d78 <__errno_location@plt>
    5210:	mov	r2, r0
    5214:	mov	r3, #38	; 0x26
    5218:	str	r3, [r2]
    521c:	mvn	r3, #0
    5220:	mov	r0, r3
    5224:	sub	sp, fp, #4
    5228:	pop	{fp, pc}

0000522c <rb_setup_fd_win32>:
    522c:	push	{fp, lr}
    5230:	add	fp, sp, #4
    5234:	sub	sp, sp, #8
    5238:	str	r0, [fp, #-8]
    523c:	bl	4d78 <__errno_location@plt>
    5240:	mov	r2, r0
    5244:	mov	r3, #38	; 0x26
    5248:	str	r3, [r2]
    524c:	mvn	r3, #0
    5250:	mov	r0, r3
    5254:	sub	sp, fp, #4
    5258:	pop	{fp, pc}
    525c:	andeq	r0, r0, r0

00005260 <rb_crypt>:
    5260:	push	{fp, lr}
    5264:	add	fp, sp, #4
    5268:	sub	sp, sp, #8
    526c:	str	r0, [fp, #-8]
    5270:	str	r1, [fp, #-12]
    5274:	ldr	r3, [fp, #-12]
    5278:	ldrb	r3, [r3]
    527c:	cmp	r3, #36	; 0x24
    5280:	bne	5314 <rb_crypt+0xb4>
    5284:	ldr	r3, [fp, #-12]
    5288:	add	r3, r3, #2
    528c:	ldrb	r3, [r3]
    5290:	cmp	r3, #36	; 0x24
    5294:	beq	52ac <rb_crypt+0x4c>
    5298:	ldr	r3, [fp, #-12]
    529c:	add	r3, r3, #3
    52a0:	ldrb	r3, [r3]
    52a4:	cmp	r3, #36	; 0x24
    52a8:	bne	5314 <rb_crypt+0xb4>
    52ac:	ldr	r3, [fp, #-12]
    52b0:	add	r3, r3, #1
    52b4:	ldrb	r3, [r3]
    52b8:	cmp	r3, #53	; 0x35
    52bc:	beq	52e4 <rb_crypt+0x84>
    52c0:	cmp	r3, #54	; 0x36
    52c4:	beq	52f8 <rb_crypt+0x98>
    52c8:	cmp	r3, #49	; 0x31
    52cc:	bne	530c <rb_crypt+0xac>
    52d0:	ldr	r1, [fp, #-12]
    52d4:	ldr	r0, [fp, #-8]
    52d8:	bl	8b44 <rb_md5_crypt>
    52dc:	mov	r3, r0
    52e0:	b	5324 <rb_crypt+0xc4>
    52e4:	ldr	r1, [fp, #-12]
    52e8:	ldr	r0, [fp, #-8]
    52ec:	bl	adec <rb_sha256_crypt>
    52f0:	mov	r3, r0
    52f4:	b	5324 <rb_crypt+0xc4>
    52f8:	ldr	r1, [fp, #-12]
    52fc:	ldr	r0, [fp, #-8]
    5300:	bl	dc08 <rb_sha512_crypt>
    5304:	mov	r3, r0
    5308:	b	5324 <rb_crypt+0xc4>
    530c:	mov	r3, #0
    5310:	b	5324 <rb_crypt+0xc4>
    5314:	ldr	r1, [fp, #-12]
    5318:	ldr	r0, [fp, #-8]
    531c:	bl	6d84 <rb_des_crypt>
    5320:	mov	r3, r0
    5324:	mov	r0, r3
    5328:	sub	sp, fp, #4
    532c:	pop	{fp, pc}

00005330 <rb_ascii_to_bin>:
    5330:	push	{fp}		; (str fp, [sp, #-4]!)
    5334:	add	fp, sp, #0
    5338:	sub	sp, sp, #12
    533c:	mov	r3, r0
    5340:	strb	r3, [fp, #-5]
    5344:	ldrb	r3, [fp, #-5]
    5348:	cmp	r3, #122	; 0x7a
    534c:	bls	5358 <rb_ascii_to_bin+0x28>
    5350:	mov	r3, #0
    5354:	b	53cc <rb_ascii_to_bin+0x9c>
    5358:	ldrb	r3, [fp, #-5]
    535c:	cmp	r3, #96	; 0x60
    5360:	bls	5370 <rb_ascii_to_bin+0x40>
    5364:	ldrb	r3, [fp, #-5]
    5368:	sub	r3, r3, #59	; 0x3b
    536c:	b	53cc <rb_ascii_to_bin+0x9c>
    5370:	ldrb	r3, [fp, #-5]
    5374:	cmp	r3, #90	; 0x5a
    5378:	bls	5384 <rb_ascii_to_bin+0x54>
    537c:	mov	r3, #0
    5380:	b	53cc <rb_ascii_to_bin+0x9c>
    5384:	ldrb	r3, [fp, #-5]
    5388:	cmp	r3, #64	; 0x40
    538c:	bls	539c <rb_ascii_to_bin+0x6c>
    5390:	ldrb	r3, [fp, #-5]
    5394:	sub	r3, r3, #53	; 0x35
    5398:	b	53cc <rb_ascii_to_bin+0x9c>
    539c:	ldrb	r3, [fp, #-5]
    53a0:	cmp	r3, #57	; 0x39
    53a4:	bls	53b0 <rb_ascii_to_bin+0x80>
    53a8:	mov	r3, #0
    53ac:	b	53cc <rb_ascii_to_bin+0x9c>
    53b0:	ldrb	r3, [fp, #-5]
    53b4:	cmp	r3, #45	; 0x2d
    53b8:	bls	53c8 <rb_ascii_to_bin+0x98>
    53bc:	ldrb	r3, [fp, #-5]
    53c0:	sub	r3, r3, #46	; 0x2e
    53c4:	b	53cc <rb_ascii_to_bin+0x9c>
    53c8:	mov	r3, #0
    53cc:	mov	r0, r3
    53d0:	add	sp, fp, #0
    53d4:	pop	{fp}		; (ldr fp, [sp], #4)
    53d8:	bx	lr

000053dc <rb_des_init>:
    53dc:	push	{fp}		; (str fp, [sp, #-4]!)
    53e0:	add	fp, sp, #0
    53e4:	sub	sp, sp, #52	; 0x34
    53e8:	ldr	r3, [pc, #2632]	; 5e38 <rb_des_init+0xa5c>
    53ec:	add	r3, pc, r3
    53f0:	ldr	r3, [r3]
    53f4:	cmp	r3, #1
    53f8:	beq	5e28 <rb_des_init+0xa4c>
    53fc:	ldr	r3, [pc, #2616]	; 5e3c <rb_des_init+0xa60>
    5400:	add	r3, pc, r3
    5404:	mov	r2, #0
    5408:	str	r2, [r3]
    540c:	ldr	r3, [pc, #2604]	; 5e40 <rb_des_init+0xa64>
    5410:	add	r3, pc, r3
    5414:	ldr	r2, [r3]
    5418:	ldr	r3, [pc, #2596]	; 5e44 <rb_des_init+0xa68>
    541c:	add	r3, pc, r3
    5420:	str	r2, [r3]
    5424:	ldr	r3, [pc, #2588]	; 5e48 <rb_des_init+0xa6c>
    5428:	add	r3, pc, r3
    542c:	mov	r2, #0
    5430:	str	r2, [r3]
    5434:	ldr	r3, [pc, #2576]	; 5e4c <rb_des_init+0xa70>
    5438:	add	r3, pc, r3
    543c:	mov	r2, #0
    5440:	str	r2, [r3]
    5444:	ldr	r3, [pc, #2564]	; 5e50 <rb_des_init+0xa74>
    5448:	add	r3, pc, r3
    544c:	add	r2, r3, #16
    5450:	ldr	r3, [pc, #2556]	; 5e54 <rb_des_init+0xa78>
    5454:	add	r3, pc, r3
    5458:	str	r2, [r3]
    545c:	ldr	r3, [pc, #2548]	; 5e58 <rb_des_init+0xa7c>
    5460:	add	r3, pc, r3
    5464:	ldr	r3, [r3]
    5468:	add	r2, r3, #16
    546c:	ldr	r3, [pc, #2536]	; 5e5c <rb_des_init+0xa80>
    5470:	add	r3, pc, r3
    5474:	str	r2, [r3]
    5478:	mov	r3, #0
    547c:	str	r3, [fp, #-8]
    5480:	b	5524 <rb_des_init+0x148>
    5484:	mov	r3, #0
    5488:	str	r3, [fp, #-12]
    548c:	b	550c <rb_des_init+0x130>
    5490:	ldr	r3, [fp, #-12]
    5494:	and	r2, r3, #32
    5498:	ldr	r3, [fp, #-12]
    549c:	lsl	r3, r3, #4
    54a0:	and	r3, r3, #16
    54a4:	orr	r2, r2, r3
    54a8:	ldr	r3, [fp, #-12]
    54ac:	asr	r3, r3, #1
    54b0:	and	r3, r3, #15
    54b4:	orr	r3, r2, r3
    54b8:	str	r3, [fp, #-16]
    54bc:	ldr	r2, [pc, #2460]	; 5e60 <rb_des_init+0xa84>
    54c0:	add	r2, pc, r2
    54c4:	ldr	r3, [fp, #-8]
    54c8:	lsl	r3, r3, #6
    54cc:	add	r2, r2, r3
    54d0:	ldr	r3, [fp, #-16]
    54d4:	add	r3, r2, r3
    54d8:	ldrb	r1, [r3]
    54dc:	ldr	r2, [pc, #2432]	; 5e64 <rb_des_init+0xa88>
    54e0:	add	r2, pc, r2
    54e4:	ldr	r3, [fp, #-8]
    54e8:	lsl	r3, r3, #6
    54ec:	add	r2, r2, r3
    54f0:	ldr	r3, [fp, #-12]
    54f4:	add	r3, r2, r3
    54f8:	mov	r2, r1
    54fc:	strb	r2, [r3]
    5500:	ldr	r3, [fp, #-12]
    5504:	add	r3, r3, #1
    5508:	str	r3, [fp, #-12]
    550c:	ldr	r3, [fp, #-12]
    5510:	cmp	r3, #63	; 0x3f
    5514:	ble	5490 <rb_des_init+0xb4>
    5518:	ldr	r3, [fp, #-8]
    551c:	add	r3, r3, #1
    5520:	str	r3, [fp, #-8]
    5524:	ldr	r3, [fp, #-8]
    5528:	cmp	r3, #7
    552c:	ble	5484 <rb_des_init+0xa8>
    5530:	mov	r3, #0
    5534:	str	r3, [fp, #-16]
    5538:	b	5624 <rb_des_init+0x248>
    553c:	mov	r3, #0
    5540:	str	r3, [fp, #-8]
    5544:	b	560c <rb_des_init+0x230>
    5548:	mov	r3, #0
    554c:	str	r3, [fp, #-12]
    5550:	b	55f4 <rb_des_init+0x218>
    5554:	ldr	r3, [fp, #-8]
    5558:	lsl	r2, r3, #6
    555c:	ldr	r3, [fp, #-12]
    5560:	orr	r3, r2, r3
    5564:	ldr	r2, [fp, #-16]
    5568:	lsl	r2, r2, #1
    556c:	ldr	r1, [pc, #2292]	; 5e68 <rb_des_init+0xa8c>
    5570:	add	r1, pc, r1
    5574:	lsl	r2, r2, #6
    5578:	add	r1, r1, r2
    557c:	ldr	r2, [fp, #-8]
    5580:	add	r2, r1, r2
    5584:	ldrb	r2, [r2]
    5588:	lsl	r2, r2, #4
    558c:	sxtb	r1, r2
    5590:	ldr	r2, [fp, #-16]
    5594:	lsl	r2, r2, #1
    5598:	add	r2, r2, #1
    559c:	ldr	r0, [pc, #2248]	; 5e6c <rb_des_init+0xa90>
    55a0:	add	r0, pc, r0
    55a4:	lsl	r2, r2, #6
    55a8:	add	r0, r0, r2
    55ac:	ldr	r2, [fp, #-12]
    55b0:	add	r2, r0, r2
    55b4:	ldrb	r2, [r2]
    55b8:	sxtb	r2, r2
    55bc:	orr	r2, r1, r2
    55c0:	sxtb	r2, r2
    55c4:	uxtb	r0, r2
    55c8:	ldr	r1, [pc, #2208]	; 5e70 <rb_des_init+0xa94>
    55cc:	add	r1, pc, r1
    55d0:	ldr	r2, [fp, #-16]
    55d4:	lsl	r2, r2, #12
    55d8:	add	r2, r1, r2
    55dc:	add	r3, r2, r3
    55e0:	mov	r2, r0
    55e4:	strb	r2, [r3]
    55e8:	ldr	r3, [fp, #-12]
    55ec:	add	r3, r3, #1
    55f0:	str	r3, [fp, #-12]
    55f4:	ldr	r3, [fp, #-12]
    55f8:	cmp	r3, #63	; 0x3f
    55fc:	ble	5554 <rb_des_init+0x178>
    5600:	ldr	r3, [fp, #-8]
    5604:	add	r3, r3, #1
    5608:	str	r3, [fp, #-8]
    560c:	ldr	r3, [fp, #-8]
    5610:	cmp	r3, #63	; 0x3f
    5614:	ble	5548 <rb_des_init+0x16c>
    5618:	ldr	r3, [fp, #-16]
    561c:	add	r3, r3, #1
    5620:	str	r3, [fp, #-16]
    5624:	ldr	r3, [fp, #-16]
    5628:	cmp	r3, #3
    562c:	ble	553c <rb_des_init+0x160>
    5630:	mov	r3, #0
    5634:	str	r3, [fp, #-8]
    5638:	b	56c0 <rb_des_init+0x2e4>
    563c:	ldr	r2, [pc, #2096]	; 5e74 <rb_des_init+0xa98>
    5640:	add	r2, pc, r2
    5644:	ldr	r3, [fp, #-8]
    5648:	add	r3, r2, r3
    564c:	ldrb	r3, [r3]
    5650:	sub	r3, r3, #1
    5654:	uxtb	r1, r3
    5658:	ldr	r2, [pc, #2072]	; 5e78 <rb_des_init+0xa9c>
    565c:	add	r2, pc, r2
    5660:	ldr	r3, [fp, #-8]
    5664:	add	r3, r2, r3
    5668:	mov	r2, r1
    566c:	strb	r2, [r3]
    5670:	ldr	r2, [pc, #2052]	; 5e7c <rb_des_init+0xaa0>
    5674:	add	r2, pc, r2
    5678:	ldr	r3, [fp, #-8]
    567c:	add	r3, r2, r3
    5680:	ldrb	r3, [r3]
    5684:	mov	r2, r3
    5688:	ldr	r3, [fp, #-8]
    568c:	uxtb	r1, r3
    5690:	ldr	r3, [pc, #2024]	; 5e80 <rb_des_init+0xaa4>
    5694:	add	r3, pc, r3
    5698:	strb	r1, [r3, r2]
    569c:	ldr	r2, [pc, #2016]	; 5e84 <rb_des_init+0xaa8>
    56a0:	add	r2, pc, r2
    56a4:	ldr	r3, [fp, #-8]
    56a8:	add	r3, r2, r3
    56ac:	mvn	r2, #0
    56b0:	strb	r2, [r3]
    56b4:	ldr	r3, [fp, #-8]
    56b8:	add	r3, r3, #1
    56bc:	str	r3, [fp, #-8]
    56c0:	ldr	r3, [fp, #-8]
    56c4:	cmp	r3, #63	; 0x3f
    56c8:	ble	563c <rb_des_init+0x260>
    56cc:	mov	r3, #0
    56d0:	str	r3, [fp, #-8]
    56d4:	b	5728 <rb_des_init+0x34c>
    56d8:	ldr	r2, [pc, #1960]	; 5e88 <rb_des_init+0xaac>
    56dc:	add	r2, pc, r2
    56e0:	ldr	r3, [fp, #-8]
    56e4:	add	r3, r2, r3
    56e8:	ldrb	r3, [r3]
    56ec:	sub	r3, r3, #1
    56f0:	ldr	r2, [fp, #-8]
    56f4:	uxtb	r1, r2
    56f8:	ldr	r2, [pc, #1932]	; 5e8c <rb_des_init+0xab0>
    56fc:	add	r2, pc, r2
    5700:	strb	r1, [r2, r3]
    5704:	ldr	r2, [pc, #1924]	; 5e90 <rb_des_init+0xab4>
    5708:	add	r2, pc, r2
    570c:	ldr	r3, [fp, #-8]
    5710:	add	r3, r2, r3
    5714:	mvn	r2, #0
    5718:	strb	r2, [r3]
    571c:	ldr	r3, [fp, #-8]
    5720:	add	r3, r3, #1
    5724:	str	r3, [fp, #-8]
    5728:	ldr	r3, [fp, #-8]
    572c:	cmp	r3, #55	; 0x37
    5730:	ble	56d8 <rb_des_init+0x2fc>
    5734:	mov	r3, #0
    5738:	str	r3, [fp, #-8]
    573c:	b	5778 <rb_des_init+0x39c>
    5740:	ldr	r2, [pc, #1868]	; 5e94 <rb_des_init+0xab8>
    5744:	add	r2, pc, r2
    5748:	ldr	r3, [fp, #-8]
    574c:	add	r3, r2, r3
    5750:	ldrb	r3, [r3]
    5754:	sub	r3, r3, #1
    5758:	ldr	r2, [fp, #-8]
    575c:	uxtb	r1, r2
    5760:	ldr	r2, [pc, #1840]	; 5e98 <rb_des_init+0xabc>
    5764:	add	r2, pc, r2
    5768:	strb	r1, [r2, r3]
    576c:	ldr	r3, [fp, #-8]
    5770:	add	r3, r3, #1
    5774:	str	r3, [fp, #-8]
    5778:	ldr	r3, [fp, #-8]
    577c:	cmp	r3, #47	; 0x2f
    5780:	ble	5740 <rb_des_init+0x364>
    5784:	mov	r3, #0
    5788:	str	r3, [fp, #-20]	; 0xffffffec
    578c:	b	5cb4 <rb_des_init+0x8d8>
    5790:	mov	r3, #0
    5794:	str	r3, [fp, #-8]
    5798:	b	59b0 <rb_des_init+0x5d4>
    579c:	ldr	r3, [fp, #-20]	; 0xffffffec
    57a0:	lsl	r2, r3, #8
    57a4:	ldr	r3, [fp, #-8]
    57a8:	add	r3, r2, r3
    57ac:	lsl	r3, r3, #2
    57b0:	ldr	r2, [pc, #1764]	; 5e9c <rb_des_init+0xac0>
    57b4:	add	r2, pc, r2
    57b8:	add	r3, r3, r2
    57bc:	str	r3, [fp, #-24]	; 0xffffffe8
    57c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    57c4:	mov	r2, #0
    57c8:	str	r2, [r3]
    57cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    57d0:	lsl	r2, r3, #8
    57d4:	ldr	r3, [fp, #-8]
    57d8:	add	r3, r2, r3
    57dc:	lsl	r3, r3, #2
    57e0:	ldr	r2, [pc, #1720]	; 5ea0 <rb_des_init+0xac4>
    57e4:	add	r2, pc, r2
    57e8:	add	r3, r3, r2
    57ec:	str	r3, [fp, #-28]	; 0xffffffe4
    57f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    57f4:	mov	r2, #0
    57f8:	str	r2, [r3]
    57fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    5800:	lsl	r2, r3, #8
    5804:	ldr	r3, [fp, #-8]
    5808:	add	r3, r2, r3
    580c:	lsl	r3, r3, #2
    5810:	ldr	r2, [pc, #1676]	; 5ea4 <rb_des_init+0xac8>
    5814:	add	r2, pc, r2
    5818:	add	r3, r3, r2
    581c:	str	r3, [fp, #-32]	; 0xffffffe0
    5820:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5824:	mov	r2, #0
    5828:	str	r2, [r3]
    582c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5830:	lsl	r2, r3, #8
    5834:	ldr	r3, [fp, #-8]
    5838:	add	r3, r2, r3
    583c:	lsl	r3, r3, #2
    5840:	ldr	r2, [pc, #1632]	; 5ea8 <rb_des_init+0xacc>
    5844:	add	r2, pc, r2
    5848:	add	r3, r3, r2
    584c:	str	r3, [fp, #-36]	; 0xffffffdc
    5850:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5854:	mov	r2, #0
    5858:	str	r2, [r3]
    585c:	mov	r3, #0
    5860:	str	r3, [fp, #-12]
    5864:	b	5998 <rb_des_init+0x5bc>
    5868:	ldr	r3, [fp, #-20]	; 0xffffffec
    586c:	lsl	r2, r3, #3
    5870:	ldr	r3, [fp, #-12]
    5874:	add	r3, r2, r3
    5878:	str	r3, [fp, #-40]	; 0xffffffd8
    587c:	ldr	r2, [pc, #1576]	; 5eac <rb_des_init+0xad0>
    5880:	add	r2, pc, r2
    5884:	ldr	r3, [fp, #-12]
    5888:	add	r3, r2, r3
    588c:	ldrb	r3, [r3]
    5890:	mov	r2, r3
    5894:	ldr	r3, [fp, #-8]
    5898:	and	r3, r3, r2
    589c:	cmp	r3, #0
    58a0:	beq	598c <rb_des_init+0x5b0>
    58a4:	ldr	r2, [pc, #1540]	; 5eb0 <rb_des_init+0xad4>
    58a8:	add	r2, pc, r2
    58ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    58b0:	add	r3, r2, r3
    58b4:	ldrb	r3, [r3]
    58b8:	str	r3, [fp, #-44]	; 0xffffffd4
    58bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    58c0:	cmp	r3, #31
    58c4:	bgt	58f0 <rb_des_init+0x514>
    58c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    58cc:	ldr	r2, [r3]
    58d0:	ldr	r3, [pc, #1500]	; 5eb4 <rb_des_init+0xad8>
    58d4:	add	r3, pc, r3
    58d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    58dc:	ldr	r3, [r3, r1, lsl #2]
    58e0:	orr	r2, r2, r3
    58e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    58e8:	str	r2, [r3]
    58ec:	b	5918 <rb_des_init+0x53c>
    58f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    58f4:	ldr	r2, [r3]
    58f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    58fc:	sub	r1, r3, #32
    5900:	ldr	r3, [pc, #1456]	; 5eb8 <rb_des_init+0xadc>
    5904:	add	r3, pc, r3
    5908:	ldr	r3, [r3, r1, lsl #2]
    590c:	orr	r2, r2, r3
    5910:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5914:	str	r2, [r3]
    5918:	ldr	r2, [pc, #1436]	; 5ebc <rb_des_init+0xae0>
    591c:	add	r2, pc, r2
    5920:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5924:	add	r3, r2, r3
    5928:	ldrb	r3, [r3]
    592c:	str	r3, [fp, #-44]	; 0xffffffd4
    5930:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5934:	cmp	r3, #31
    5938:	bgt	5964 <rb_des_init+0x588>
    593c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5940:	ldr	r2, [r3]
    5944:	ldr	r3, [pc, #1396]	; 5ec0 <rb_des_init+0xae4>
    5948:	add	r3, pc, r3
    594c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5950:	ldr	r3, [r3, r1, lsl #2]
    5954:	orr	r2, r2, r3
    5958:	ldr	r3, [fp, #-32]	; 0xffffffe0
    595c:	str	r2, [r3]
    5960:	b	598c <rb_des_init+0x5b0>
    5964:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5968:	ldr	r2, [r3]
    596c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5970:	sub	r1, r3, #32
    5974:	ldr	r3, [pc, #1352]	; 5ec4 <rb_des_init+0xae8>
    5978:	add	r3, pc, r3
    597c:	ldr	r3, [r3, r1, lsl #2]
    5980:	orr	r2, r2, r3
    5984:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5988:	str	r2, [r3]
    598c:	ldr	r3, [fp, #-12]
    5990:	add	r3, r3, #1
    5994:	str	r3, [fp, #-12]
    5998:	ldr	r3, [fp, #-12]
    599c:	cmp	r3, #7
    59a0:	ble	5868 <rb_des_init+0x48c>
    59a4:	ldr	r3, [fp, #-8]
    59a8:	add	r3, r3, #1
    59ac:	str	r3, [fp, #-8]
    59b0:	ldr	r3, [fp, #-8]
    59b4:	cmp	r3, #255	; 0xff
    59b8:	ble	579c <rb_des_init+0x3c0>
    59bc:	mov	r3, #0
    59c0:	str	r3, [fp, #-8]
    59c4:	b	5c9c <rb_des_init+0x8c0>
    59c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    59cc:	lsl	r2, r3, #7
    59d0:	ldr	r3, [fp, #-8]
    59d4:	add	r3, r2, r3
    59d8:	lsl	r3, r3, #2
    59dc:	ldr	r2, [pc, #1252]	; 5ec8 <rb_des_init+0xaec>
    59e0:	add	r2, pc, r2
    59e4:	add	r3, r3, r2
    59e8:	str	r3, [fp, #-24]	; 0xffffffe8
    59ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    59f0:	mov	r2, #0
    59f4:	str	r2, [r3]
    59f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    59fc:	lsl	r2, r3, #7
    5a00:	ldr	r3, [fp, #-8]
    5a04:	add	r3, r2, r3
    5a08:	lsl	r3, r3, #2
    5a0c:	ldr	r2, [pc, #1208]	; 5ecc <rb_des_init+0xaf0>
    5a10:	add	r2, pc, r2
    5a14:	add	r3, r3, r2
    5a18:	str	r3, [fp, #-28]	; 0xffffffe4
    5a1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5a20:	mov	r2, #0
    5a24:	str	r2, [r3]
    5a28:	mov	r3, #0
    5a2c:	str	r3, [fp, #-12]
    5a30:	b	5b1c <rb_des_init+0x740>
    5a34:	ldr	r3, [fp, #-20]	; 0xffffffec
    5a38:	lsl	r2, r3, #3
    5a3c:	ldr	r3, [fp, #-12]
    5a40:	add	r3, r2, r3
    5a44:	str	r3, [fp, #-40]	; 0xffffffd8
    5a48:	ldr	r3, [fp, #-12]
    5a4c:	add	r3, r3, #1
    5a50:	ldr	r2, [pc, #1144]	; 5ed0 <rb_des_init+0xaf4>
    5a54:	add	r2, pc, r2
    5a58:	ldrb	r3, [r2, r3]
    5a5c:	mov	r2, r3
    5a60:	ldr	r3, [fp, #-8]
    5a64:	and	r3, r3, r2
    5a68:	cmp	r3, #0
    5a6c:	beq	5b10 <rb_des_init+0x734>
    5a70:	ldr	r2, [pc, #1116]	; 5ed4 <rb_des_init+0xaf8>
    5a74:	add	r2, pc, r2
    5a78:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5a7c:	add	r3, r2, r3
    5a80:	ldrb	r3, [r3]
    5a84:	str	r3, [fp, #-44]	; 0xffffffd4
    5a88:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5a8c:	cmp	r3, #255	; 0xff
    5a90:	beq	5b0c <rb_des_init+0x730>
    5a94:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5a98:	cmp	r3, #27
    5a9c:	bgt	5ad4 <rb_des_init+0x6f8>
    5aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5aa4:	ldr	r2, [r3]
    5aa8:	ldr	r3, [pc, #1064]	; 5ed8 <rb_des_init+0xafc>
    5aac:	add	r3, pc, r3
    5ab0:	ldr	r1, [r3]
    5ab4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5ab8:	lsl	r3, r3, #2
    5abc:	add	r3, r1, r3
    5ac0:	ldr	r3, [r3]
    5ac4:	orr	r2, r2, r3
    5ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5acc:	str	r2, [r3]
    5ad0:	b	5b10 <rb_des_init+0x734>
    5ad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5ad8:	ldr	r2, [r3]
    5adc:	ldr	r3, [pc, #1016]	; 5edc <rb_des_init+0xb00>
    5ae0:	add	r3, pc, r3
    5ae4:	ldr	r1, [r3]
    5ae8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5aec:	sub	r3, r3, #-1073741796	; 0xc000001c
    5af0:	lsl	r3, r3, #2
    5af4:	add	r3, r1, r3
    5af8:	ldr	r3, [r3]
    5afc:	orr	r2, r2, r3
    5b00:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5b04:	str	r2, [r3]
    5b08:	b	5b10 <rb_des_init+0x734>
    5b0c:	nop			; (mov r0, r0)
    5b10:	ldr	r3, [fp, #-12]
    5b14:	add	r3, r3, #1
    5b18:	str	r3, [fp, #-12]
    5b1c:	ldr	r3, [fp, #-12]
    5b20:	cmp	r3, #6
    5b24:	ble	5a34 <rb_des_init+0x658>
    5b28:	ldr	r3, [fp, #-20]	; 0xffffffec
    5b2c:	lsl	r2, r3, #7
    5b30:	ldr	r3, [fp, #-8]
    5b34:	add	r3, r2, r3
    5b38:	lsl	r3, r3, #2
    5b3c:	ldr	r2, [pc, #924]	; 5ee0 <rb_des_init+0xb04>
    5b40:	add	r2, pc, r2
    5b44:	add	r3, r3, r2
    5b48:	str	r3, [fp, #-24]	; 0xffffffe8
    5b4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b50:	mov	r2, #0
    5b54:	str	r2, [r3]
    5b58:	ldr	r3, [fp, #-20]	; 0xffffffec
    5b5c:	lsl	r2, r3, #7
    5b60:	ldr	r3, [fp, #-8]
    5b64:	add	r3, r2, r3
    5b68:	lsl	r3, r3, #2
    5b6c:	ldr	r2, [pc, #880]	; 5ee4 <rb_des_init+0xb08>
    5b70:	add	r2, pc, r2
    5b74:	add	r3, r3, r2
    5b78:	str	r3, [fp, #-28]	; 0xffffffe4
    5b7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5b80:	mov	r2, #0
    5b84:	str	r2, [r3]
    5b88:	mov	r3, #0
    5b8c:	str	r3, [fp, #-12]
    5b90:	b	5c84 <rb_des_init+0x8a8>
    5b94:	ldr	r2, [fp, #-20]	; 0xffffffec
    5b98:	mov	r3, r2
    5b9c:	lsl	r3, r3, #3
    5ba0:	sub	r2, r3, r2
    5ba4:	ldr	r3, [fp, #-12]
    5ba8:	add	r3, r2, r3
    5bac:	str	r3, [fp, #-40]	; 0xffffffd8
    5bb0:	ldr	r3, [fp, #-12]
    5bb4:	add	r3, r3, #1
    5bb8:	ldr	r2, [pc, #808]	; 5ee8 <rb_des_init+0xb0c>
    5bbc:	add	r2, pc, r2
    5bc0:	ldrb	r3, [r2, r3]
    5bc4:	mov	r2, r3
    5bc8:	ldr	r3, [fp, #-8]
    5bcc:	and	r3, r3, r2
    5bd0:	cmp	r3, #0
    5bd4:	beq	5c78 <rb_des_init+0x89c>
    5bd8:	ldr	r2, [pc, #780]	; 5eec <rb_des_init+0xb10>
    5bdc:	add	r2, pc, r2
    5be0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5be4:	add	r3, r2, r3
    5be8:	ldrb	r3, [r3]
    5bec:	str	r3, [fp, #-44]	; 0xffffffd4
    5bf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5bf4:	cmp	r3, #255	; 0xff
    5bf8:	beq	5c74 <rb_des_init+0x898>
    5bfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5c00:	cmp	r3, #23
    5c04:	bgt	5c3c <rb_des_init+0x860>
    5c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5c0c:	ldr	r2, [r3]
    5c10:	ldr	r3, [pc, #728]	; 5ef0 <rb_des_init+0xb14>
    5c14:	add	r3, pc, r3
    5c18:	ldr	r1, [r3]
    5c1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5c20:	lsl	r3, r3, #2
    5c24:	add	r3, r1, r3
    5c28:	ldr	r3, [r3]
    5c2c:	orr	r2, r2, r3
    5c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5c34:	str	r2, [r3]
    5c38:	b	5c78 <rb_des_init+0x89c>
    5c3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5c40:	ldr	r2, [r3]
    5c44:	ldr	r3, [pc, #680]	; 5ef4 <rb_des_init+0xb18>
    5c48:	add	r3, pc, r3
    5c4c:	ldr	r1, [r3]
    5c50:	ldr	r3, [fp, #-44]	; 0xffffffd4
    5c54:	sub	r3, r3, #-1073741800	; 0xc0000018
    5c58:	lsl	r3, r3, #2
    5c5c:	add	r3, r1, r3
    5c60:	ldr	r3, [r3]
    5c64:	orr	r2, r2, r3
    5c68:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5c6c:	str	r2, [r3]
    5c70:	b	5c78 <rb_des_init+0x89c>
    5c74:	nop			; (mov r0, r0)
    5c78:	ldr	r3, [fp, #-12]
    5c7c:	add	r3, r3, #1
    5c80:	str	r3, [fp, #-12]
    5c84:	ldr	r3, [fp, #-12]
    5c88:	cmp	r3, #6
    5c8c:	ble	5b94 <rb_des_init+0x7b8>
    5c90:	ldr	r3, [fp, #-8]
    5c94:	add	r3, r3, #1
    5c98:	str	r3, [fp, #-8]
    5c9c:	ldr	r3, [fp, #-8]
    5ca0:	cmp	r3, #127	; 0x7f
    5ca4:	ble	59c8 <rb_des_init+0x5ec>
    5ca8:	ldr	r3, [fp, #-20]	; 0xffffffec
    5cac:	add	r3, r3, #1
    5cb0:	str	r3, [fp, #-20]	; 0xffffffec
    5cb4:	ldr	r3, [fp, #-20]	; 0xffffffec
    5cb8:	cmp	r3, #7
    5cbc:	ble	5790 <rb_des_init+0x3b4>
    5cc0:	mov	r3, #0
    5cc4:	str	r3, [fp, #-8]
    5cc8:	b	5d04 <rb_des_init+0x928>
    5ccc:	ldr	r2, [pc, #548]	; 5ef8 <rb_des_init+0xb1c>
    5cd0:	add	r2, pc, r2
    5cd4:	ldr	r3, [fp, #-8]
    5cd8:	add	r3, r2, r3
    5cdc:	ldrb	r3, [r3]
    5ce0:	sub	r3, r3, #1
    5ce4:	ldr	r2, [fp, #-8]
    5ce8:	uxtb	r1, r2
    5cec:	ldr	r2, [pc, #520]	; 5efc <rb_des_init+0xb20>
    5cf0:	add	r2, pc, r2
    5cf4:	strb	r1, [r2, r3]
    5cf8:	ldr	r3, [fp, #-8]
    5cfc:	add	r3, r3, #1
    5d00:	str	r3, [fp, #-8]
    5d04:	ldr	r3, [fp, #-8]
    5d08:	cmp	r3, #31
    5d0c:	ble	5ccc <rb_des_init+0x8f0>
    5d10:	mov	r3, #0
    5d14:	str	r3, [fp, #-16]
    5d18:	b	5e08 <rb_des_init+0xa2c>
    5d1c:	mov	r3, #0
    5d20:	str	r3, [fp, #-8]
    5d24:	b	5df0 <rb_des_init+0xa14>
    5d28:	ldr	r3, [fp, #-16]
    5d2c:	lsl	r2, r3, #8
    5d30:	ldr	r3, [fp, #-8]
    5d34:	add	r3, r2, r3
    5d38:	lsl	r3, r3, #2
    5d3c:	ldr	r2, [pc, #444]	; 5f00 <rb_des_init+0xb24>
    5d40:	add	r2, pc, r2
    5d44:	add	r3, r3, r2
    5d48:	str	r3, [fp, #-48]	; 0xffffffd0
    5d4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5d50:	mov	r2, #0
    5d54:	str	r2, [r3]
    5d58:	mov	r3, #0
    5d5c:	str	r3, [fp, #-12]
    5d60:	b	5dd8 <rb_des_init+0x9fc>
    5d64:	ldr	r2, [pc, #408]	; 5f04 <rb_des_init+0xb28>
    5d68:	add	r2, pc, r2
    5d6c:	ldr	r3, [fp, #-12]
    5d70:	add	r3, r2, r3
    5d74:	ldrb	r3, [r3]
    5d78:	mov	r2, r3
    5d7c:	ldr	r3, [fp, #-8]
    5d80:	and	r3, r3, r2
    5d84:	cmp	r3, #0
    5d88:	beq	5dcc <rb_des_init+0x9f0>
    5d8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5d90:	ldr	r2, [r3]
    5d94:	ldr	r3, [fp, #-16]
    5d98:	lsl	r1, r3, #3
    5d9c:	ldr	r3, [fp, #-12]
    5da0:	add	r3, r1, r3
    5da4:	ldr	r1, [pc, #348]	; 5f08 <rb_des_init+0xb2c>
    5da8:	add	r1, pc, r1
    5dac:	ldrb	r3, [r1, r3]
    5db0:	mov	r1, r3
    5db4:	ldr	r3, [pc, #336]	; 5f0c <rb_des_init+0xb30>
    5db8:	add	r3, pc, r3
    5dbc:	ldr	r3, [r3, r1, lsl #2]
    5dc0:	orr	r2, r2, r3
    5dc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5dc8:	str	r2, [r3]
    5dcc:	ldr	r3, [fp, #-12]
    5dd0:	add	r3, r3, #1
    5dd4:	str	r3, [fp, #-12]
    5dd8:	ldr	r3, [fp, #-12]
    5ddc:	cmp	r3, #7
    5de0:	ble	5d64 <rb_des_init+0x988>
    5de4:	ldr	r3, [fp, #-8]
    5de8:	add	r3, r3, #1
    5dec:	str	r3, [fp, #-8]
    5df0:	ldr	r3, [fp, #-8]
    5df4:	cmp	r3, #255	; 0xff
    5df8:	ble	5d28 <rb_des_init+0x94c>
    5dfc:	ldr	r3, [fp, #-16]
    5e00:	add	r3, r3, #1
    5e04:	str	r3, [fp, #-16]
    5e08:	ldr	r3, [fp, #-16]
    5e0c:	cmp	r3, #3
    5e10:	ble	5d1c <rb_des_init+0x940>
    5e14:	ldr	r3, [pc, #244]	; 5f10 <rb_des_init+0xb34>
    5e18:	add	r3, pc, r3
    5e1c:	mov	r2, #1
    5e20:	str	r2, [r3]
    5e24:	b	5e2c <rb_des_init+0xa50>
    5e28:	nop			; (mov r0, r0)
    5e2c:	add	sp, fp, #0
    5e30:	pop	{fp}		; (ldr fp, [sp], #4)
    5e34:	bx	lr
    5e38:	.word	0x000419e4
    5e3c:	.word	0x0003c940
    5e40:	.word	0x0003c930
    5e44:	.word	0x0003c920
    5e48:	.word	0x0003c90c
    5e4c:	.word	0x0003c900
    5e50:	.word	0x0001c8d4
    5e54:	.word	0x00041970
    5e58:	.word	0x00041964
    5e5c:	.word	0x00041958
    5e60:	.word	0x0001c63c
    5e64:	.word	0x00030534
    5e68:	.word	0x000304a4
    5e6c:	.word	0x00030474
    5e70:	.word	0x0003c7f8
    5e74:	.word	0x0001c404
    5e78:	.word	0x0003c728
    5e7c:	.word	0x0003c710
    5e80:	.word	0x0003c6b0
    5e84:	.word	0x000302fc
    5e88:	.word	0x0001c3a8
    5e8c:	.word	0x000302a0
    5e90:	.word	0x000302d4
    5e94:	.word	0x0001c388
    5e98:	.word	0x00030278
    5e9c:	.word	0x00030580
    5ea0:	.word	0x00032550
    5ea4:	.word	0x00034520
    5ea8:	.word	0x000364f0
    5eac:	.word	0x0001c51c
    5eb0:	.word	0x0003c49c
    5eb4:	.word	0x0001c448
    5eb8:	.word	0x0001c418
    5ebc:	.word	0x0003c468
    5ec0:	.word	0x0001c3d4
    5ec4:	.word	0x0001c3a4
    5ec8:	.word	0x00038354
    5ecc:	.word	0x00039324
    5ed0:	.word	0x0001c348
    5ed4:	.word	0x0002ff28
    5ed8:	.word	0x00041318
    5edc:	.word	0x000412e4
    5ee0:	.word	0x0003a1f4
    5ee4:	.word	0x0003b1c4
    5ee8:	.word	0x0001c1e0
    5eec:	.word	0x0002fe00
    5ef0:	.word	0x000411b4
    5ef4:	.word	0x00041180
    5ef8:	.word	0x0001c02c
    5efc:	.word	0x0002ff24
    5f00:	.word	0x00040084
    5f04:	.word	0x0001c034
    5f08:	.word	0x0002fe6c
    5f0c:	.word	0x0001bf64
    5f10:	.word	0x00040fb8

00005f14 <rb_setup_salt>:
    5f14:	push	{fp}		; (str fp, [sp, #-4]!)
    5f18:	add	fp, sp, #0
    5f1c:	sub	sp, sp, #28
    5f20:	str	r0, [fp, #-24]	; 0xffffffe8
    5f24:	ldr	r3, [pc, #200]	; 5ff4 <rb_setup_salt+0xe0>
    5f28:	add	r3, pc, r3
    5f2c:	ldr	r3, [r3]
    5f30:	mov	r2, r3
    5f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5f38:	cmp	r3, r2
    5f3c:	beq	5fe4 <rb_setup_salt+0xd0>
    5f40:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f44:	ldr	r3, [pc, #172]	; 5ff8 <rb_setup_salt+0xe4>
    5f48:	add	r3, pc, r3
    5f4c:	str	r2, [r3]
    5f50:	ldr	r3, [pc, #164]	; 5ffc <rb_setup_salt+0xe8>
    5f54:	add	r3, pc, r3
    5f58:	mov	r2, #0
    5f5c:	str	r2, [r3]
    5f60:	mov	r3, #1
    5f64:	str	r3, [fp, #-12]
    5f68:	mov	r3, #8388608	; 0x800000
    5f6c:	str	r3, [fp, #-8]
    5f70:	mov	r3, #0
    5f74:	str	r3, [fp, #-16]
    5f78:	b	5fd4 <rb_setup_salt+0xc0>
    5f7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f80:	ldr	r3, [fp, #-12]
    5f84:	and	r3, r3, r2
    5f88:	cmp	r3, #0
    5f8c:	beq	5fb0 <rb_setup_salt+0x9c>
    5f90:	ldr	r3, [pc, #104]	; 6000 <rb_setup_salt+0xec>
    5f94:	add	r3, pc, r3
    5f98:	ldr	r2, [r3]
    5f9c:	ldr	r3, [fp, #-8]
    5fa0:	orr	r2, r2, r3
    5fa4:	ldr	r3, [pc, #88]	; 6004 <rb_setup_salt+0xf0>
    5fa8:	add	r3, pc, r3
    5fac:	str	r2, [r3]
    5fb0:	ldr	r3, [fp, #-12]
    5fb4:	lsl	r3, r3, #1
    5fb8:	str	r3, [fp, #-12]
    5fbc:	ldr	r3, [fp, #-8]
    5fc0:	lsr	r3, r3, #1
    5fc4:	str	r3, [fp, #-8]
    5fc8:	ldr	r3, [fp, #-16]
    5fcc:	add	r3, r3, #1
    5fd0:	str	r3, [fp, #-16]
    5fd4:	ldr	r3, [fp, #-16]
    5fd8:	cmp	r3, #23
    5fdc:	ble	5f7c <rb_setup_salt+0x68>
    5fe0:	b	5fe8 <rb_setup_salt+0xd4>
    5fe4:	nop			; (mov r0, r0)
    5fe8:	add	sp, fp, #0
    5fec:	pop	{fp}		; (ldr fp, [sp], #4)
    5ff0:	bx	lr
    5ff4:	.word	0x0003be10
    5ff8:	.word	0x0003bdf0
    5ffc:	.word	0x0003bde0
    6000:	.word	0x0003bda0
    6004:	.word	0x0003bd8c

00006008 <rb_des_setkey>:
    6008:	push	{fp, lr}
    600c:	add	fp, sp, #4
    6010:	sub	sp, sp, #40	; 0x28
    6014:	str	r0, [fp, #-40]	; 0xffffffd8
    6018:	bl	53dc <rb_des_init>
    601c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6020:	ldr	r3, [r3]
    6024:	mov	r0, r3
    6028:	bl	4718 <ntohl@plt>
    602c:	str	r0, [fp, #-16]
    6030:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6034:	add	r3, r3, #4
    6038:	ldr	r3, [r3]
    603c:	mov	r0, r3
    6040:	bl	4718 <ntohl@plt>
    6044:	str	r0, [fp, #-20]	; 0xffffffec
    6048:	ldr	r2, [fp, #-16]
    604c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6050:	orr	r3, r2, r3
    6054:	cmp	r3, #0
    6058:	beq	6094 <rb_des_setkey+0x8c>
    605c:	ldr	r3, [pc, #1320]	; 658c <rb_des_setkey+0x584>
    6060:	add	r3, pc, r3
    6064:	ldr	r3, [r3]
    6068:	ldr	r2, [fp, #-16]
    606c:	cmp	r2, r3
    6070:	bne	6094 <rb_des_setkey+0x8c>
    6074:	ldr	r3, [pc, #1300]	; 6590 <rb_des_setkey+0x588>
    6078:	add	r3, pc, r3
    607c:	ldr	r3, [r3]
    6080:	ldr	r2, [fp, #-20]	; 0xffffffec
    6084:	cmp	r2, r3
    6088:	bne	6094 <rb_des_setkey+0x8c>
    608c:	mov	r3, #0
    6090:	b	6580 <rb_des_setkey+0x578>
    6094:	ldr	r3, [pc, #1272]	; 6594 <rb_des_setkey+0x58c>
    6098:	add	r3, pc, r3
    609c:	ldr	r2, [fp, #-16]
    60a0:	str	r2, [r3]
    60a4:	ldr	r3, [pc, #1260]	; 6598 <rb_des_setkey+0x590>
    60a8:	add	r3, pc, r3
    60ac:	ldr	r2, [fp, #-20]	; 0xffffffec
    60b0:	str	r2, [r3]
    60b4:	ldr	r3, [fp, #-16]
    60b8:	lsr	r2, r3, #25
    60bc:	ldr	r3, [pc, #1240]	; 659c <rb_des_setkey+0x594>
    60c0:	add	r3, pc, r3
    60c4:	ldr	r2, [r3, r2, lsl #2]
    60c8:	ldr	r3, [fp, #-16]
    60cc:	lsr	r3, r3, #17
    60d0:	and	r1, r3, #127	; 0x7f
    60d4:	ldr	r3, [pc, #1220]	; 65a0 <rb_des_setkey+0x598>
    60d8:	add	r3, pc, r3
    60dc:	add	r1, r1, #128	; 0x80
    60e0:	ldr	r3, [r3, r1, lsl #2]
    60e4:	orr	r2, r2, r3
    60e8:	ldr	r3, [fp, #-16]
    60ec:	lsr	r3, r3, #9
    60f0:	and	r1, r3, #127	; 0x7f
    60f4:	ldr	r3, [pc, #1192]	; 65a4 <rb_des_setkey+0x59c>
    60f8:	add	r3, pc, r3
    60fc:	add	r1, r1, #256	; 0x100
    6100:	ldr	r3, [r3, r1, lsl #2]
    6104:	orr	r2, r2, r3
    6108:	ldr	r3, [fp, #-16]
    610c:	lsr	r3, r3, #1
    6110:	and	r1, r3, #127	; 0x7f
    6114:	ldr	r3, [pc, #1164]	; 65a8 <rb_des_setkey+0x5a0>
    6118:	add	r3, pc, r3
    611c:	add	r1, r1, #384	; 0x180
    6120:	ldr	r3, [r3, r1, lsl #2]
    6124:	orr	r2, r2, r3
    6128:	ldr	r3, [fp, #-20]	; 0xffffffec
    612c:	lsr	r1, r3, #25
    6130:	ldr	r3, [pc, #1140]	; 65ac <rb_des_setkey+0x5a4>
    6134:	add	r3, pc, r3
    6138:	add	r1, r1, #512	; 0x200
    613c:	ldr	r3, [r3, r1, lsl #2]
    6140:	orr	r2, r2, r3
    6144:	ldr	r3, [fp, #-20]	; 0xffffffec
    6148:	lsr	r3, r3, #17
    614c:	and	r1, r3, #127	; 0x7f
    6150:	ldr	r3, [pc, #1112]	; 65b0 <rb_des_setkey+0x5a8>
    6154:	add	r3, pc, r3
    6158:	add	r1, r1, #640	; 0x280
    615c:	ldr	r3, [r3, r1, lsl #2]
    6160:	orr	r2, r2, r3
    6164:	ldr	r3, [fp, #-20]	; 0xffffffec
    6168:	lsr	r3, r3, #9
    616c:	and	r1, r3, #127	; 0x7f
    6170:	ldr	r3, [pc, #1084]	; 65b4 <rb_des_setkey+0x5ac>
    6174:	add	r3, pc, r3
    6178:	add	r1, r1, #768	; 0x300
    617c:	ldr	r3, [r3, r1, lsl #2]
    6180:	orr	r2, r2, r3
    6184:	ldr	r3, [fp, #-20]	; 0xffffffec
    6188:	lsr	r3, r3, #1
    618c:	and	r1, r3, #127	; 0x7f
    6190:	ldr	r3, [pc, #1056]	; 65b8 <rb_des_setkey+0x5b0>
    6194:	add	r3, pc, r3
    6198:	add	r1, r1, #896	; 0x380
    619c:	ldr	r3, [r3, r1, lsl #2]
    61a0:	orr	r3, r2, r3
    61a4:	str	r3, [fp, #-24]	; 0xffffffe8
    61a8:	ldr	r3, [fp, #-16]
    61ac:	lsr	r2, r3, #25
    61b0:	ldr	r3, [pc, #1028]	; 65bc <rb_des_setkey+0x5b4>
    61b4:	add	r3, pc, r3
    61b8:	ldr	r2, [r3, r2, lsl #2]
    61bc:	ldr	r3, [fp, #-16]
    61c0:	lsr	r3, r3, #17
    61c4:	and	r1, r3, #127	; 0x7f
    61c8:	ldr	r3, [pc, #1008]	; 65c0 <rb_des_setkey+0x5b8>
    61cc:	add	r3, pc, r3
    61d0:	add	r1, r1, #128	; 0x80
    61d4:	ldr	r3, [r3, r1, lsl #2]
    61d8:	orr	r2, r2, r3
    61dc:	ldr	r3, [fp, #-16]
    61e0:	lsr	r3, r3, #9
    61e4:	and	r1, r3, #127	; 0x7f
    61e8:	ldr	r3, [pc, #980]	; 65c4 <rb_des_setkey+0x5bc>
    61ec:	add	r3, pc, r3
    61f0:	add	r1, r1, #256	; 0x100
    61f4:	ldr	r3, [r3, r1, lsl #2]
    61f8:	orr	r2, r2, r3
    61fc:	ldr	r3, [fp, #-16]
    6200:	lsr	r3, r3, #1
    6204:	and	r1, r3, #127	; 0x7f
    6208:	ldr	r3, [pc, #952]	; 65c8 <rb_des_setkey+0x5c0>
    620c:	add	r3, pc, r3
    6210:	add	r1, r1, #384	; 0x180
    6214:	ldr	r3, [r3, r1, lsl #2]
    6218:	orr	r2, r2, r3
    621c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6220:	lsr	r1, r3, #25
    6224:	ldr	r3, [pc, #928]	; 65cc <rb_des_setkey+0x5c4>
    6228:	add	r3, pc, r3
    622c:	add	r1, r1, #512	; 0x200
    6230:	ldr	r3, [r3, r1, lsl #2]
    6234:	orr	r2, r2, r3
    6238:	ldr	r3, [fp, #-20]	; 0xffffffec
    623c:	lsr	r3, r3, #17
    6240:	and	r1, r3, #127	; 0x7f
    6244:	ldr	r3, [pc, #900]	; 65d0 <rb_des_setkey+0x5c8>
    6248:	add	r3, pc, r3
    624c:	add	r1, r1, #640	; 0x280
    6250:	ldr	r3, [r3, r1, lsl #2]
    6254:	orr	r2, r2, r3
    6258:	ldr	r3, [fp, #-20]	; 0xffffffec
    625c:	lsr	r3, r3, #9
    6260:	and	r1, r3, #127	; 0x7f
    6264:	ldr	r3, [pc, #872]	; 65d4 <rb_des_setkey+0x5cc>
    6268:	add	r3, pc, r3
    626c:	add	r1, r1, #768	; 0x300
    6270:	ldr	r3, [r3, r1, lsl #2]
    6274:	orr	r2, r2, r3
    6278:	ldr	r3, [fp, #-20]	; 0xffffffec
    627c:	lsr	r3, r3, #1
    6280:	and	r1, r3, #127	; 0x7f
    6284:	ldr	r3, [pc, #844]	; 65d8 <rb_des_setkey+0x5d0>
    6288:	add	r3, pc, r3
    628c:	add	r1, r1, #896	; 0x380
    6290:	ldr	r3, [r3, r1, lsl #2]
    6294:	orr	r3, r2, r3
    6298:	str	r3, [fp, #-28]	; 0xffffffe4
    629c:	mov	r3, #0
    62a0:	str	r3, [fp, #-8]
    62a4:	mov	r3, #0
    62a8:	str	r3, [fp, #-12]
    62ac:	b	6570 <rb_des_setkey+0x568>
    62b0:	ldr	r2, [pc, #804]	; 65dc <rb_des_setkey+0x5d4>
    62b4:	add	r2, pc, r2
    62b8:	ldr	r3, [fp, #-12]
    62bc:	add	r3, r2, r3
    62c0:	ldrb	r3, [r3]
    62c4:	mov	r2, r3
    62c8:	ldr	r3, [fp, #-8]
    62cc:	add	r3, r3, r2
    62d0:	str	r3, [fp, #-8]
    62d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    62d8:	ldr	r3, [fp, #-8]
    62dc:	lsl	r2, r2, r3
    62e0:	ldr	r3, [fp, #-8]
    62e4:	rsb	r3, r3, #28
    62e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    62ec:	lsr	r3, r1, r3
    62f0:	orr	r3, r2, r3
    62f4:	str	r3, [fp, #-32]	; 0xffffffe0
    62f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    62fc:	ldr	r3, [fp, #-8]
    6300:	lsl	r2, r2, r3
    6304:	ldr	r3, [fp, #-8]
    6308:	rsb	r3, r3, #28
    630c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6310:	lsr	r3, r1, r3
    6314:	orr	r3, r2, r3
    6318:	str	r3, [fp, #-36]	; 0xffffffdc
    631c:	ldr	r3, [fp, #-12]
    6320:	rsb	r2, r3, #15
    6324:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6328:	lsr	r3, r3, #21
    632c:	and	r1, r3, #127	; 0x7f
    6330:	ldr	r3, [pc, #680]	; 65e0 <rb_des_setkey+0x5d8>
    6334:	add	r3, pc, r3
    6338:	ldr	r1, [r3, r1, lsl #2]
    633c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6340:	lsr	r3, r3, #14
    6344:	and	r0, r3, #127	; 0x7f
    6348:	ldr	r3, [pc, #660]	; 65e4 <rb_des_setkey+0x5dc>
    634c:	add	r3, pc, r3
    6350:	add	r0, r0, #128	; 0x80
    6354:	ldr	r3, [r3, r0, lsl #2]
    6358:	orr	r1, r1, r3
    635c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6360:	lsr	r3, r3, #7
    6364:	and	r0, r3, #127	; 0x7f
    6368:	ldr	r3, [pc, #632]	; 65e8 <rb_des_setkey+0x5e0>
    636c:	add	r3, pc, r3
    6370:	add	r0, r0, #256	; 0x100
    6374:	ldr	r3, [r3, r0, lsl #2]
    6378:	orr	r1, r1, r3
    637c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6380:	and	r0, r3, #127	; 0x7f
    6384:	ldr	r3, [pc, #608]	; 65ec <rb_des_setkey+0x5e4>
    6388:	add	r3, pc, r3
    638c:	add	r0, r0, #384	; 0x180
    6390:	ldr	r3, [r3, r0, lsl #2]
    6394:	orr	r1, r1, r3
    6398:	ldr	r3, [fp, #-36]	; 0xffffffdc
    639c:	lsr	r3, r3, #21
    63a0:	and	r0, r3, #127	; 0x7f
    63a4:	ldr	r3, [pc, #580]	; 65f0 <rb_des_setkey+0x5e8>
    63a8:	add	r3, pc, r3
    63ac:	add	r0, r0, #512	; 0x200
    63b0:	ldr	r3, [r3, r0, lsl #2]
    63b4:	orr	r1, r1, r3
    63b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    63bc:	lsr	r3, r3, #14
    63c0:	and	r0, r3, #127	; 0x7f
    63c4:	ldr	r3, [pc, #552]	; 65f4 <rb_des_setkey+0x5ec>
    63c8:	add	r3, pc, r3
    63cc:	add	r0, r0, #640	; 0x280
    63d0:	ldr	r3, [r3, r0, lsl #2]
    63d4:	orr	r1, r1, r3
    63d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    63dc:	lsr	r3, r3, #7
    63e0:	and	r0, r3, #127	; 0x7f
    63e4:	ldr	r3, [pc, #524]	; 65f8 <rb_des_setkey+0x5f0>
    63e8:	add	r3, pc, r3
    63ec:	add	r0, r0, #768	; 0x300
    63f0:	ldr	r3, [r3, r0, lsl #2]
    63f4:	orr	r1, r1, r3
    63f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    63fc:	and	r0, r3, #127	; 0x7f
    6400:	ldr	r3, [pc, #500]	; 65fc <rb_des_setkey+0x5f4>
    6404:	add	r3, pc, r3
    6408:	add	r0, r0, #896	; 0x380
    640c:	ldr	r3, [r3, r0, lsl #2]
    6410:	orr	r0, r1, r3
    6414:	ldr	r3, [pc, #484]	; 6600 <rb_des_setkey+0x5f8>
    6418:	add	r3, pc, r3
    641c:	ldr	r1, [fp, #-12]
    6420:	str	r0, [r3, r1, lsl #2]
    6424:	ldr	r3, [pc, #472]	; 6604 <rb_des_setkey+0x5fc>
    6428:	add	r3, pc, r3
    642c:	ldr	r1, [fp, #-12]
    6430:	ldr	r1, [r3, r1, lsl #2]
    6434:	ldr	r3, [pc, #460]	; 6608 <rb_des_setkey+0x600>
    6438:	add	r3, pc, r3
    643c:	str	r1, [r3, r2, lsl #2]
    6440:	ldr	r3, [fp, #-12]
    6444:	rsb	r2, r3, #15
    6448:	ldr	r3, [fp, #-32]	; 0xffffffe0
    644c:	lsr	r3, r3, #21
    6450:	and	r1, r3, #127	; 0x7f
    6454:	ldr	r3, [pc, #432]	; 660c <rb_des_setkey+0x604>
    6458:	add	r3, pc, r3
    645c:	ldr	r1, [r3, r1, lsl #2]
    6460:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6464:	lsr	r3, r3, #14
    6468:	and	r0, r3, #127	; 0x7f
    646c:	ldr	r3, [pc, #412]	; 6610 <rb_des_setkey+0x608>
    6470:	add	r3, pc, r3
    6474:	add	r0, r0, #128	; 0x80
    6478:	ldr	r3, [r3, r0, lsl #2]
    647c:	orr	r1, r1, r3
    6480:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6484:	lsr	r3, r3, #7
    6488:	and	r0, r3, #127	; 0x7f
    648c:	ldr	r3, [pc, #384]	; 6614 <rb_des_setkey+0x60c>
    6490:	add	r3, pc, r3
    6494:	add	r0, r0, #256	; 0x100
    6498:	ldr	r3, [r3, r0, lsl #2]
    649c:	orr	r1, r1, r3
    64a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    64a4:	and	r0, r3, #127	; 0x7f
    64a8:	ldr	r3, [pc, #360]	; 6618 <rb_des_setkey+0x610>
    64ac:	add	r3, pc, r3
    64b0:	add	r0, r0, #384	; 0x180
    64b4:	ldr	r3, [r3, r0, lsl #2]
    64b8:	orr	r1, r1, r3
    64bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    64c0:	lsr	r3, r3, #21
    64c4:	and	r0, r3, #127	; 0x7f
    64c8:	ldr	r3, [pc, #332]	; 661c <rb_des_setkey+0x614>
    64cc:	add	r3, pc, r3
    64d0:	add	r0, r0, #512	; 0x200
    64d4:	ldr	r3, [r3, r0, lsl #2]
    64d8:	orr	r1, r1, r3
    64dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    64e0:	lsr	r3, r3, #14
    64e4:	and	r0, r3, #127	; 0x7f
    64e8:	ldr	r3, [pc, #304]	; 6620 <rb_des_setkey+0x618>
    64ec:	add	r3, pc, r3
    64f0:	add	r0, r0, #640	; 0x280
    64f4:	ldr	r3, [r3, r0, lsl #2]
    64f8:	orr	r1, r1, r3
    64fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6500:	lsr	r3, r3, #7
    6504:	and	r0, r3, #127	; 0x7f
    6508:	ldr	r3, [pc, #276]	; 6624 <rb_des_setkey+0x61c>
    650c:	add	r3, pc, r3
    6510:	add	r0, r0, #768	; 0x300
    6514:	ldr	r3, [r3, r0, lsl #2]
    6518:	orr	r1, r1, r3
    651c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6520:	and	r0, r3, #127	; 0x7f
    6524:	ldr	r3, [pc, #252]	; 6628 <rb_des_setkey+0x620>
    6528:	add	r3, pc, r3
    652c:	add	r0, r0, #896	; 0x380
    6530:	ldr	r3, [r3, r0, lsl #2]
    6534:	orr	r0, r1, r3
    6538:	ldr	r3, [pc, #236]	; 662c <rb_des_setkey+0x624>
    653c:	add	r3, pc, r3
    6540:	ldr	r1, [fp, #-12]
    6544:	str	r0, [r3, r1, lsl #2]
    6548:	ldr	r3, [pc, #224]	; 6630 <rb_des_setkey+0x628>
    654c:	add	r3, pc, r3
    6550:	ldr	r1, [fp, #-12]
    6554:	ldr	r1, [r3, r1, lsl #2]
    6558:	ldr	r3, [pc, #212]	; 6634 <rb_des_setkey+0x62c>
    655c:	add	r3, pc, r3
    6560:	str	r1, [r3, r2, lsl #2]
    6564:	ldr	r3, [fp, #-12]
    6568:	add	r3, r3, #1
    656c:	str	r3, [fp, #-12]
    6570:	ldr	r3, [fp, #-12]
    6574:	cmp	r3, #15
    6578:	ble	62b0 <rb_des_setkey+0x2a8>
    657c:	mov	r3, #0
    6580:	mov	r0, r3
    6584:	sub	sp, fp, #4
    6588:	pop	{fp, pc}
    658c:	.word	0x0003bcdc
    6590:	.word	0x0003bcc8
    6594:	.word	0x0003bca4
    6598:	.word	0x0003bc98
    659c:	.word	0x00037c74
    65a0:	.word	0x00037c5c
    65a4:	.word	0x00037c3c
    65a8:	.word	0x00037c1c
    65ac:	.word	0x00037c00
    65b0:	.word	0x00037be0
    65b4:	.word	0x00037bc0
    65b8:	.word	0x00037ba0
    65bc:	.word	0x00038b80
    65c0:	.word	0x00038b68
    65c4:	.word	0x00038b48
    65c8:	.word	0x00038b28
    65cc:	.word	0x00038b0c
    65d0:	.word	0x00038aec
    65d4:	.word	0x00038acc
    65d8:	.word	0x00038aac
    65dc:	.word	0x0001b808
    65e0:	.word	0x00039a00
    65e4:	.word	0x000399e8
    65e8:	.word	0x000399c8
    65ec:	.word	0x000399ac
    65f0:	.word	0x0003998c
    65f4:	.word	0x0003996c
    65f8:	.word	0x0003994c
    65fc:	.word	0x00039930
    6600:	.word	0x0002f81c
    6604:	.word	0x0002f80c
    6608:	.word	0x0002f87c
    660c:	.word	0x0003a8dc
    6610:	.word	0x0003a8c4
    6614:	.word	0x0003a8a4
    6618:	.word	0x0003a888
    661c:	.word	0x0003a868
    6620:	.word	0x0003a848
    6624:	.word	0x0003a828
    6628:	.word	0x0003a80c
    662c:	.word	0x0002f738
    6630:	.word	0x0002f728
    6634:	.word	0x0002f798

00006638 <rb_do_des>:
    6638:	push	{fp}		; (str fp, [sp, #-4]!)
    663c:	add	fp, sp, #0
    6640:	sub	sp, sp, #60	; 0x3c
    6644:	str	r0, [fp, #-48]	; 0xffffffd0
    6648:	str	r1, [fp, #-52]	; 0xffffffcc
    664c:	str	r2, [fp, #-56]	; 0xffffffc8
    6650:	str	r3, [fp, #-60]	; 0xffffffc4
    6654:	mov	r3, #0
    6658:	str	r3, [fp, #-32]	; 0xffffffe0
    665c:	ldr	r3, [fp, #4]
    6660:	cmp	r3, #0
    6664:	bne	6670 <rb_do_des+0x38>
    6668:	mov	r3, #1
    666c:	b	6cc0 <rb_do_des+0x688>
    6670:	ldr	r3, [fp, #4]
    6674:	cmp	r3, #0
    6678:	ble	6698 <rb_do_des+0x60>
    667c:	ldr	r3, [pc, #1612]	; 6cd0 <rb_do_des+0x698>
    6680:	add	r3, pc, r3
    6684:	str	r3, [fp, #-24]	; 0xffffffe8
    6688:	ldr	r3, [pc, #1604]	; 6cd4 <rb_do_des+0x69c>
    668c:	add	r3, pc, r3
    6690:	str	r3, [fp, #-28]	; 0xffffffe4
    6694:	b	66bc <rb_do_des+0x84>
    6698:	ldr	r3, [fp, #4]
    669c:	rsb	r3, r3, #0
    66a0:	str	r3, [fp, #4]
    66a4:	ldr	r3, [pc, #1580]	; 6cd8 <rb_do_des+0x6a0>
    66a8:	add	r3, pc, r3
    66ac:	str	r3, [fp, #-24]	; 0xffffffe8
    66b0:	ldr	r3, [pc, #1572]	; 6cdc <rb_do_des+0x6a4>
    66b4:	add	r3, pc, r3
    66b8:	str	r3, [fp, #-28]	; 0xffffffe4
    66bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    66c0:	lsr	r2, r3, #24
    66c4:	ldr	r3, [pc, #1556]	; 6ce0 <rb_do_des+0x6a8>
    66c8:	add	r3, pc, r3
    66cc:	ldr	r2, [r3, r2, lsl #2]
    66d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    66d4:	lsr	r3, r3, #16
    66d8:	uxtb	r1, r3
    66dc:	ldr	r3, [pc, #1536]	; 6ce4 <rb_do_des+0x6ac>
    66e0:	add	r3, pc, r3
    66e4:	add	r1, r1, #256	; 0x100
    66e8:	ldr	r3, [r3, r1, lsl #2]
    66ec:	orr	r2, r2, r3
    66f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    66f4:	lsr	r3, r3, #8
    66f8:	uxtb	r1, r3
    66fc:	ldr	r3, [pc, #1508]	; 6ce8 <rb_do_des+0x6b0>
    6700:	add	r3, pc, r3
    6704:	add	r1, r1, #512	; 0x200
    6708:	ldr	r3, [r3, r1, lsl #2]
    670c:	orr	r2, r2, r3
    6710:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6714:	uxtb	r1, r3
    6718:	ldr	r3, [pc, #1484]	; 6cec <rb_do_des+0x6b4>
    671c:	add	r3, pc, r3
    6720:	add	r1, r1, #768	; 0x300
    6724:	ldr	r3, [r3, r1, lsl #2]
    6728:	orr	r2, r2, r3
    672c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6730:	lsr	r1, r3, #24
    6734:	ldr	r3, [pc, #1460]	; 6cf0 <rb_do_des+0x6b8>
    6738:	add	r3, pc, r3
    673c:	add	r1, r1, #1024	; 0x400
    6740:	ldr	r3, [r3, r1, lsl #2]
    6744:	orr	r2, r2, r3
    6748:	ldr	r3, [fp, #-52]	; 0xffffffcc
    674c:	lsr	r3, r3, #16
    6750:	uxtb	r1, r3
    6754:	ldr	r3, [pc, #1432]	; 6cf4 <rb_do_des+0x6bc>
    6758:	add	r3, pc, r3
    675c:	add	r1, r1, #1280	; 0x500
    6760:	ldr	r3, [r3, r1, lsl #2]
    6764:	orr	r2, r2, r3
    6768:	ldr	r3, [fp, #-52]	; 0xffffffcc
    676c:	lsr	r3, r3, #8
    6770:	uxtb	r1, r3
    6774:	ldr	r3, [pc, #1404]	; 6cf8 <rb_do_des+0x6c0>
    6778:	add	r3, pc, r3
    677c:	add	r1, r1, #1536	; 0x600
    6780:	ldr	r3, [r3, r1, lsl #2]
    6784:	orr	r2, r2, r3
    6788:	ldr	r3, [fp, #-52]	; 0xffffffcc
    678c:	uxtb	r1, r3
    6790:	ldr	r3, [pc, #1380]	; 6cfc <rb_do_des+0x6c4>
    6794:	add	r3, pc, r3
    6798:	add	r1, r1, #1792	; 0x700
    679c:	ldr	r3, [r3, r1, lsl #2]
    67a0:	orr	r3, r2, r3
    67a4:	str	r3, [fp, #-8]
    67a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    67ac:	lsr	r2, r3, #24
    67b0:	ldr	r3, [pc, #1352]	; 6d00 <rb_do_des+0x6c8>
    67b4:	add	r3, pc, r3
    67b8:	ldr	r2, [r3, r2, lsl #2]
    67bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    67c0:	lsr	r3, r3, #16
    67c4:	uxtb	r1, r3
    67c8:	ldr	r3, [pc, #1332]	; 6d04 <rb_do_des+0x6cc>
    67cc:	add	r3, pc, r3
    67d0:	add	r1, r1, #256	; 0x100
    67d4:	ldr	r3, [r3, r1, lsl #2]
    67d8:	orr	r2, r2, r3
    67dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    67e0:	lsr	r3, r3, #8
    67e4:	uxtb	r1, r3
    67e8:	ldr	r3, [pc, #1304]	; 6d08 <rb_do_des+0x6d0>
    67ec:	add	r3, pc, r3
    67f0:	add	r1, r1, #512	; 0x200
    67f4:	ldr	r3, [r3, r1, lsl #2]
    67f8:	orr	r2, r2, r3
    67fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6800:	uxtb	r1, r3
    6804:	ldr	r3, [pc, #1280]	; 6d0c <rb_do_des+0x6d4>
    6808:	add	r3, pc, r3
    680c:	add	r1, r1, #768	; 0x300
    6810:	ldr	r3, [r3, r1, lsl #2]
    6814:	orr	r2, r2, r3
    6818:	ldr	r3, [fp, #-52]	; 0xffffffcc
    681c:	lsr	r1, r3, #24
    6820:	ldr	r3, [pc, #1256]	; 6d10 <rb_do_des+0x6d8>
    6824:	add	r3, pc, r3
    6828:	add	r1, r1, #1024	; 0x400
    682c:	ldr	r3, [r3, r1, lsl #2]
    6830:	orr	r2, r2, r3
    6834:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6838:	lsr	r3, r3, #16
    683c:	uxtb	r1, r3
    6840:	ldr	r3, [pc, #1228]	; 6d14 <rb_do_des+0x6dc>
    6844:	add	r3, pc, r3
    6848:	add	r1, r1, #1280	; 0x500
    684c:	ldr	r3, [r3, r1, lsl #2]
    6850:	orr	r2, r2, r3
    6854:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6858:	lsr	r3, r3, #8
    685c:	uxtb	r1, r3
    6860:	ldr	r3, [pc, #1200]	; 6d18 <rb_do_des+0x6e0>
    6864:	add	r3, pc, r3
    6868:	add	r1, r1, #1536	; 0x600
    686c:	ldr	r3, [r3, r1, lsl #2]
    6870:	orr	r2, r2, r3
    6874:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6878:	uxtb	r1, r3
    687c:	ldr	r3, [pc, #1176]	; 6d1c <rb_do_des+0x6e4>
    6880:	add	r3, pc, r3
    6884:	add	r1, r1, #1792	; 0x700
    6888:	ldr	r3, [r3, r1, lsl #2]
    688c:	orr	r3, r2, r3
    6890:	str	r3, [fp, #-12]
    6894:	b	6ac8 <rb_do_des+0x490>
    6898:	ldr	r3, [fp, #-24]	; 0xffffffe8
    689c:	str	r3, [fp, #-16]
    68a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    68a4:	str	r3, [fp, #-20]	; 0xffffffec
    68a8:	mov	r3, #16
    68ac:	str	r3, [fp, #-36]	; 0xffffffdc
    68b0:	b	6aa4 <rb_do_des+0x46c>
    68b4:	ldr	r3, [fp, #-12]
    68b8:	lsl	r3, r3, #23
    68bc:	and	r2, r3, #8388608	; 0x800000
    68c0:	ldr	r3, [fp, #-12]
    68c4:	lsr	r3, r3, #9
    68c8:	and	r3, r3, #8126464	; 0x7c0000
    68cc:	orr	r2, r2, r3
    68d0:	ldr	r3, [fp, #-12]
    68d4:	lsr	r3, r3, #11
    68d8:	and	r3, r3, #258048	; 0x3f000
    68dc:	orr	r2, r2, r3
    68e0:	ldr	r3, [fp, #-12]
    68e4:	lsr	r3, r3, #13
    68e8:	and	r3, r3, #4032	; 0xfc0
    68ec:	orr	r2, r2, r3
    68f0:	ldr	r3, [fp, #-12]
    68f4:	lsr	r3, r3, #15
    68f8:	and	r3, r3, #63	; 0x3f
    68fc:	orr	r3, r2, r3
    6900:	str	r3, [fp, #-40]	; 0xffffffd8
    6904:	ldr	r3, [fp, #-12]
    6908:	lsl	r3, r3, #7
    690c:	and	r2, r3, #16515072	; 0xfc0000
    6910:	ldr	r3, [fp, #-12]
    6914:	lsl	r3, r3, #5
    6918:	and	r3, r3, #258048	; 0x3f000
    691c:	orr	r2, r2, r3
    6920:	ldr	r3, [fp, #-12]
    6924:	lsl	r3, r3, #3
    6928:	and	r3, r3, #4032	; 0xfc0
    692c:	orr	r2, r2, r3
    6930:	ldr	r3, [fp, #-12]
    6934:	lsl	r3, r3, #1
    6938:	and	r3, r3, #62	; 0x3e
    693c:	orr	r2, r2, r3
    6940:	ldr	r3, [fp, #-12]
    6944:	lsr	r3, r3, #31
    6948:	orr	r3, r2, r3
    694c:	str	r3, [fp, #-44]	; 0xffffffd4
    6950:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6954:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6958:	eor	r2, r2, r3
    695c:	ldr	r3, [pc, #956]	; 6d20 <rb_do_des+0x6e8>
    6960:	add	r3, pc, r3
    6964:	ldr	r3, [r3]
    6968:	and	r3, r3, r2
    696c:	str	r3, [fp, #-32]	; 0xffffffe0
    6970:	ldr	r3, [fp, #-16]
    6974:	add	r2, r3, #4
    6978:	str	r2, [fp, #-16]
    697c:	ldr	r2, [r3]
    6980:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6984:	eor	r3, r3, r2
    6988:	ldr	r2, [fp, #-40]	; 0xffffffd8
    698c:	eor	r3, r3, r2
    6990:	str	r3, [fp, #-40]	; 0xffffffd8
    6994:	ldr	r3, [fp, #-20]	; 0xffffffec
    6998:	add	r2, r3, #4
    699c:	str	r2, [fp, #-20]	; 0xffffffec
    69a0:	ldr	r2, [r3]
    69a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    69a8:	eor	r3, r3, r2
    69ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
    69b0:	eor	r3, r3, r2
    69b4:	str	r3, [fp, #-44]	; 0xffffffd4
    69b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    69bc:	lsr	r3, r3, #12
    69c0:	ldr	r2, [pc, #860]	; 6d24 <rb_do_des+0x6ec>
    69c4:	add	r2, pc, r2
    69c8:	ldrb	r3, [r2, r3]
    69cc:	mov	r2, r3
    69d0:	ldr	r3, [pc, #848]	; 6d28 <rb_do_des+0x6f0>
    69d4:	add	r3, pc, r3
    69d8:	ldr	r2, [r3, r2, lsl #2]
    69dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    69e0:	lsl	r3, r3, #20
    69e4:	lsr	r3, r3, #20
    69e8:	ldr	r1, [pc, #828]	; 6d2c <rb_do_des+0x6f4>
    69ec:	add	r1, pc, r1
    69f0:	add	r3, r1, r3
    69f4:	add	r3, r3, #4096	; 0x1000
    69f8:	ldrb	r3, [r3]
    69fc:	mov	r1, r3
    6a00:	ldr	r3, [pc, #808]	; 6d30 <rb_do_des+0x6f8>
    6a04:	add	r3, pc, r3
    6a08:	add	r1, r1, #256	; 0x100
    6a0c:	ldr	r3, [r3, r1, lsl #2]
    6a10:	orr	r2, r2, r3
    6a14:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6a18:	lsr	r3, r3, #12
    6a1c:	ldr	r1, [pc, #784]	; 6d34 <rb_do_des+0x6fc>
    6a20:	add	r1, pc, r1
    6a24:	add	r3, r1, r3
    6a28:	add	r3, r3, #8192	; 0x2000
    6a2c:	ldrb	r3, [r3]
    6a30:	mov	r1, r3
    6a34:	ldr	r3, [pc, #764]	; 6d38 <rb_do_des+0x700>
    6a38:	add	r3, pc, r3
    6a3c:	add	r1, r1, #512	; 0x200
    6a40:	ldr	r3, [r3, r1, lsl #2]
    6a44:	orr	r2, r2, r3
    6a48:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6a4c:	lsl	r3, r3, #20
    6a50:	lsr	r3, r3, #20
    6a54:	ldr	r1, [pc, #736]	; 6d3c <rb_do_des+0x704>
    6a58:	add	r1, pc, r1
    6a5c:	add	r3, r1, r3
    6a60:	add	r3, r3, #12288	; 0x3000
    6a64:	ldrb	r3, [r3]
    6a68:	mov	r1, r3
    6a6c:	ldr	r3, [pc, #716]	; 6d40 <rb_do_des+0x708>
    6a70:	add	r3, pc, r3
    6a74:	add	r1, r1, #768	; 0x300
    6a78:	ldr	r3, [r3, r1, lsl #2]
    6a7c:	orr	r3, r2, r3
    6a80:	str	r3, [fp, #-32]	; 0xffffffe0
    6a84:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6a88:	ldr	r3, [fp, #-8]
    6a8c:	eor	r3, r3, r2
    6a90:	str	r3, [fp, #-32]	; 0xffffffe0
    6a94:	ldr	r3, [fp, #-12]
    6a98:	str	r3, [fp, #-8]
    6a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6aa0:	str	r3, [fp, #-12]
    6aa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6aa8:	sub	r2, r3, #1
    6aac:	str	r2, [fp, #-36]	; 0xffffffdc
    6ab0:	cmp	r3, #0
    6ab4:	bne	68b4 <rb_do_des+0x27c>
    6ab8:	ldr	r3, [fp, #-8]
    6abc:	str	r3, [fp, #-12]
    6ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6ac4:	str	r3, [fp, #-8]
    6ac8:	ldr	r3, [fp, #4]
    6acc:	sub	r2, r3, #1
    6ad0:	str	r2, [fp, #4]
    6ad4:	cmp	r3, #0
    6ad8:	bne	6898 <rb_do_des+0x260>
    6adc:	ldr	r3, [fp, #-8]
    6ae0:	lsr	r2, r3, #24
    6ae4:	ldr	r3, [pc, #600]	; 6d44 <rb_do_des+0x70c>
    6ae8:	add	r3, pc, r3
    6aec:	ldr	r2, [r3, r2, lsl #2]
    6af0:	ldr	r3, [fp, #-8]
    6af4:	lsr	r3, r3, #16
    6af8:	uxtb	r1, r3
    6afc:	ldr	r3, [pc, #580]	; 6d48 <rb_do_des+0x710>
    6b00:	add	r3, pc, r3
    6b04:	add	r1, r1, #256	; 0x100
    6b08:	ldr	r3, [r3, r1, lsl #2]
    6b0c:	orr	r2, r2, r3
    6b10:	ldr	r3, [fp, #-8]
    6b14:	lsr	r3, r3, #8
    6b18:	uxtb	r1, r3
    6b1c:	ldr	r3, [pc, #552]	; 6d4c <rb_do_des+0x714>
    6b20:	add	r3, pc, r3
    6b24:	add	r1, r1, #512	; 0x200
    6b28:	ldr	r3, [r3, r1, lsl #2]
    6b2c:	orr	r2, r2, r3
    6b30:	ldr	r3, [fp, #-8]
    6b34:	uxtb	r1, r3
    6b38:	ldr	r3, [pc, #528]	; 6d50 <rb_do_des+0x718>
    6b3c:	add	r3, pc, r3
    6b40:	add	r1, r1, #768	; 0x300
    6b44:	ldr	r3, [r3, r1, lsl #2]
    6b48:	orr	r2, r2, r3
    6b4c:	ldr	r3, [fp, #-12]
    6b50:	lsr	r1, r3, #24
    6b54:	ldr	r3, [pc, #504]	; 6d54 <rb_do_des+0x71c>
    6b58:	add	r3, pc, r3
    6b5c:	add	r1, r1, #1024	; 0x400
    6b60:	ldr	r3, [r3, r1, lsl #2]
    6b64:	orr	r2, r2, r3
    6b68:	ldr	r3, [fp, #-12]
    6b6c:	lsr	r3, r3, #16
    6b70:	uxtb	r1, r3
    6b74:	ldr	r3, [pc, #476]	; 6d58 <rb_do_des+0x720>
    6b78:	add	r3, pc, r3
    6b7c:	add	r1, r1, #1280	; 0x500
    6b80:	ldr	r3, [r3, r1, lsl #2]
    6b84:	orr	r2, r2, r3
    6b88:	ldr	r3, [fp, #-12]
    6b8c:	lsr	r3, r3, #8
    6b90:	uxtb	r1, r3
    6b94:	ldr	r3, [pc, #448]	; 6d5c <rb_do_des+0x724>
    6b98:	add	r3, pc, r3
    6b9c:	add	r1, r1, #1536	; 0x600
    6ba0:	ldr	r3, [r3, r1, lsl #2]
    6ba4:	orr	r2, r2, r3
    6ba8:	ldr	r3, [fp, #-12]
    6bac:	uxtb	r1, r3
    6bb0:	ldr	r3, [pc, #424]	; 6d60 <rb_do_des+0x728>
    6bb4:	add	r3, pc, r3
    6bb8:	add	r1, r1, #1792	; 0x700
    6bbc:	ldr	r3, [r3, r1, lsl #2]
    6bc0:	orr	r2, r2, r3
    6bc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6bc8:	str	r2, [r3]
    6bcc:	ldr	r3, [fp, #-8]
    6bd0:	lsr	r2, r3, #24
    6bd4:	ldr	r3, [pc, #392]	; 6d64 <rb_do_des+0x72c>
    6bd8:	add	r3, pc, r3
    6bdc:	ldr	r2, [r3, r2, lsl #2]
    6be0:	ldr	r3, [fp, #-8]
    6be4:	lsr	r3, r3, #16
    6be8:	uxtb	r1, r3
    6bec:	ldr	r3, [pc, #372]	; 6d68 <rb_do_des+0x730>
    6bf0:	add	r3, pc, r3
    6bf4:	add	r1, r1, #256	; 0x100
    6bf8:	ldr	r3, [r3, r1, lsl #2]
    6bfc:	orr	r2, r2, r3
    6c00:	ldr	r3, [fp, #-8]
    6c04:	lsr	r3, r3, #8
    6c08:	uxtb	r1, r3
    6c0c:	ldr	r3, [pc, #344]	; 6d6c <rb_do_des+0x734>
    6c10:	add	r3, pc, r3
    6c14:	add	r1, r1, #512	; 0x200
    6c18:	ldr	r3, [r3, r1, lsl #2]
    6c1c:	orr	r2, r2, r3
    6c20:	ldr	r3, [fp, #-8]
    6c24:	uxtb	r1, r3
    6c28:	ldr	r3, [pc, #320]	; 6d70 <rb_do_des+0x738>
    6c2c:	add	r3, pc, r3
    6c30:	add	r1, r1, #768	; 0x300
    6c34:	ldr	r3, [r3, r1, lsl #2]
    6c38:	orr	r2, r2, r3
    6c3c:	ldr	r3, [fp, #-12]
    6c40:	lsr	r1, r3, #24
    6c44:	ldr	r3, [pc, #296]	; 6d74 <rb_do_des+0x73c>
    6c48:	add	r3, pc, r3
    6c4c:	add	r1, r1, #1024	; 0x400
    6c50:	ldr	r3, [r3, r1, lsl #2]
    6c54:	orr	r2, r2, r3
    6c58:	ldr	r3, [fp, #-12]
    6c5c:	lsr	r3, r3, #16
    6c60:	uxtb	r1, r3
    6c64:	ldr	r3, [pc, #268]	; 6d78 <rb_do_des+0x740>
    6c68:	add	r3, pc, r3
    6c6c:	add	r1, r1, #1280	; 0x500
    6c70:	ldr	r3, [r3, r1, lsl #2]
    6c74:	orr	r2, r2, r3
    6c78:	ldr	r3, [fp, #-12]
    6c7c:	lsr	r3, r3, #8
    6c80:	uxtb	r1, r3
    6c84:	ldr	r3, [pc, #240]	; 6d7c <rb_do_des+0x744>
    6c88:	add	r3, pc, r3
    6c8c:	add	r1, r1, #1536	; 0x600
    6c90:	ldr	r3, [r3, r1, lsl #2]
    6c94:	orr	r2, r2, r3
    6c98:	ldr	r3, [fp, #-12]
    6c9c:	uxtb	r1, r3
    6ca0:	ldr	r3, [pc, #216]	; 6d80 <rb_do_des+0x748>
    6ca4:	add	r3, pc, r3
    6ca8:	add	r1, r1, #1792	; 0x700
    6cac:	ldr	r3, [r3, r1, lsl #2]
    6cb0:	orr	r2, r2, r3
    6cb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6cb8:	str	r2, [r3]
    6cbc:	mov	r3, #0
    6cc0:	mov	r0, r3
    6cc4:	add	sp, fp, #0
    6cc8:	pop	{fp}		; (ldr fp, [sp], #4)
    6ccc:	bx	lr
    6cd0:	.word	0x0002f5b4
    6cd4:	.word	0x0002f5e8
    6cd8:	.word	0x0002f60c
    6cdc:	.word	0x0002f640
    6ce0:	.word	0x0002f66c
    6ce4:	.word	0x0002f654
    6ce8:	.word	0x0002f634
    6cec:	.word	0x0002f618
    6cf0:	.word	0x0002f5fc
    6cf4:	.word	0x0002f5dc
    6cf8:	.word	0x0002f5bc
    6cfc:	.word	0x0002f5a0
    6d00:	.word	0x00031580
    6d04:	.word	0x00031568
    6d08:	.word	0x00031548
    6d0c:	.word	0x0003152c
    6d10:	.word	0x00031510
    6d14:	.word	0x000314f0
    6d18:	.word	0x000314d0
    6d1c:	.word	0x000314b4
    6d20:	.word	0x0003b3d4
    6d24:	.word	0x0003b400
    6d28:	.word	0x0003f3f0
    6d2c:	.word	0x0003b3d8
    6d30:	.word	0x0003f3c0
    6d34:	.word	0x0003b3a4
    6d38:	.word	0x0003f38c
    6d3c:	.word	0x0003b36c
    6d40:	.word	0x0003f354
    6d44:	.word	0x0003324c
    6d48:	.word	0x00033234
    6d4c:	.word	0x00033214
    6d50:	.word	0x000331f8
    6d54:	.word	0x000331dc
    6d58:	.word	0x000331bc
    6d5c:	.word	0x0003319c
    6d60:	.word	0x00033180
    6d64:	.word	0x0003515c
    6d68:	.word	0x00035144
    6d6c:	.word	0x00035124
    6d70:	.word	0x00035108
    6d74:	.word	0x000350ec
    6d78:	.word	0x000350cc
    6d7c:	.word	0x000350ac
    6d80:	.word	0x00035090

00006d84 <rb_des_crypt>:
    6d84:	push	{r4, fp, lr}
    6d88:	add	fp, sp, #8
    6d8c:	sub	sp, sp, #60	; 0x3c
    6d90:	str	r0, [fp, #-56]	; 0xffffffc8
    6d94:	str	r1, [fp, #-60]	; 0xffffffc4
    6d98:	bl	53dc <rb_des_init>
    6d9c:	sub	r3, fp, #48	; 0x30
    6da0:	str	r3, [fp, #-16]
    6da4:	b	6de8 <rb_des_crypt+0x64>
    6da8:	ldr	r3, [fp, #-16]
    6dac:	add	r2, r3, #1
    6db0:	str	r2, [fp, #-16]
    6db4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    6db8:	ldrb	r2, [r2]
    6dbc:	lsl	r2, r2, #1
    6dc0:	uxtb	r2, r2
    6dc4:	strb	r2, [r3]
    6dc8:	ldr	r3, [fp, #-16]
    6dcc:	sub	r3, r3, #1
    6dd0:	ldrb	r3, [r3]
    6dd4:	cmp	r3, #0
    6dd8:	beq	6de8 <rb_des_crypt+0x64>
    6ddc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6de0:	add	r3, r3, #1
    6de4:	str	r3, [fp, #-56]	; 0xffffffc8
    6de8:	ldr	r2, [fp, #-16]
    6dec:	sub	r3, fp, #48	; 0x30
    6df0:	sub	r3, r2, r3
    6df4:	cmp	r3, #8
    6df8:	bne	6da8 <rb_des_crypt+0x24>
    6dfc:	sub	r3, fp, #48	; 0x30
    6e00:	mov	r0, r3
    6e04:	bl	6008 <rb_des_setkey>
    6e08:	mov	r3, r0
    6e0c:	cmp	r3, #0
    6e10:	beq	6e1c <rb_des_crypt+0x98>
    6e14:	mov	r3, #0
    6e18:	b	70ec <rb_des_crypt+0x368>
    6e1c:	mov	r3, #25
    6e20:	str	r3, [fp, #-20]	; 0xffffffec
    6e24:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e28:	add	r3, r3, #1
    6e2c:	ldrb	r3, [r3]
    6e30:	mov	r0, r3
    6e34:	bl	5330 <rb_ascii_to_bin>
    6e38:	mov	r3, r0
    6e3c:	lsl	r4, r3, #6
    6e40:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e44:	ldrb	r3, [r3]
    6e48:	mov	r0, r3
    6e4c:	bl	5330 <rb_ascii_to_bin>
    6e50:	mov	r3, r0
    6e54:	orr	r3, r4, r3
    6e58:	str	r3, [fp, #-24]	; 0xffffffe8
    6e5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e60:	ldrb	r2, [r3]
    6e64:	ldr	r3, [pc, #652]	; 70f8 <rb_des_crypt+0x374>
    6e68:	add	r3, pc, r3
    6e6c:	strb	r2, [r3]
    6e70:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e74:	add	r3, r3, #1
    6e78:	ldrb	r3, [r3]
    6e7c:	cmp	r3, #0
    6e80:	beq	6e94 <rb_des_crypt+0x110>
    6e84:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6e88:	add	r3, r3, #1
    6e8c:	ldrb	r3, [r3]
    6e90:	b	6ea0 <rb_des_crypt+0x11c>
    6e94:	ldr	r3, [pc, #608]	; 70fc <rb_des_crypt+0x378>
    6e98:	add	r3, pc, r3
    6e9c:	ldrb	r3, [r3]
    6ea0:	ldr	r2, [pc, #600]	; 7100 <rb_des_crypt+0x37c>
    6ea4:	add	r2, pc, r2
    6ea8:	strb	r3, [r2, #1]
    6eac:	ldr	r3, [pc, #592]	; 7104 <rb_des_crypt+0x380>
    6eb0:	add	r3, pc, r3
    6eb4:	add	r3, r3, #2
    6eb8:	str	r3, [fp, #-28]	; 0xffffffe4
    6ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6ec0:	mov	r0, r3
    6ec4:	bl	5f14 <rb_setup_salt>
    6ec8:	ldr	r3, [fp, #-20]	; 0xffffffec
    6ecc:	sub	r1, fp, #40	; 0x28
    6ed0:	sub	r2, fp, #36	; 0x24
    6ed4:	str	r3, [sp]
    6ed8:	mov	r3, r1
    6edc:	mov	r1, #0
    6ee0:	mov	r0, #0
    6ee4:	bl	6638 <rb_do_des>
    6ee8:	mov	r3, r0
    6eec:	cmp	r3, #0
    6ef0:	beq	6efc <rb_des_crypt+0x178>
    6ef4:	mov	r3, #0
    6ef8:	b	70ec <rb_des_crypt+0x368>
    6efc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6f00:	lsr	r3, r3, #8
    6f04:	str	r3, [fp, #-32]	; 0xffffffe0
    6f08:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f0c:	add	r2, r3, #1
    6f10:	str	r2, [fp, #-28]	; 0xffffffe4
    6f14:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6f18:	lsr	r2, r2, #18
    6f1c:	and	r2, r2, #63	; 0x3f
    6f20:	ldr	r1, [pc, #480]	; 7108 <rb_des_crypt+0x384>
    6f24:	add	r1, pc, r1
    6f28:	ldrb	r2, [r1, r2]
    6f2c:	strb	r2, [r3]
    6f30:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f34:	add	r2, r3, #1
    6f38:	str	r2, [fp, #-28]	; 0xffffffe4
    6f3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6f40:	lsr	r2, r2, #12
    6f44:	and	r2, r2, #63	; 0x3f
    6f48:	ldr	r1, [pc, #444]	; 710c <rb_des_crypt+0x388>
    6f4c:	add	r1, pc, r1
    6f50:	ldrb	r2, [r1, r2]
    6f54:	strb	r2, [r3]
    6f58:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f5c:	add	r2, r3, #1
    6f60:	str	r2, [fp, #-28]	; 0xffffffe4
    6f64:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6f68:	lsr	r2, r2, #6
    6f6c:	and	r2, r2, #63	; 0x3f
    6f70:	ldr	r1, [pc, #408]	; 7110 <rb_des_crypt+0x38c>
    6f74:	add	r1, pc, r1
    6f78:	ldrb	r2, [r1, r2]
    6f7c:	strb	r2, [r3]
    6f80:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f84:	add	r2, r3, #1
    6f88:	str	r2, [fp, #-28]	; 0xffffffe4
    6f8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6f90:	and	r2, r2, #63	; 0x3f
    6f94:	ldr	r1, [pc, #376]	; 7114 <rb_des_crypt+0x390>
    6f98:	add	r1, pc, r1
    6f9c:	ldrb	r2, [r1, r2]
    6fa0:	strb	r2, [r3]
    6fa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6fa8:	lsl	r2, r3, #16
    6fac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6fb0:	lsr	r3, r3, #16
    6fb4:	orr	r3, r2, r3
    6fb8:	str	r3, [fp, #-32]	; 0xffffffe0
    6fbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6fc0:	add	r2, r3, #1
    6fc4:	str	r2, [fp, #-28]	; 0xffffffe4
    6fc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6fcc:	lsr	r2, r2, #18
    6fd0:	and	r2, r2, #63	; 0x3f
    6fd4:	ldr	r1, [pc, #316]	; 7118 <rb_des_crypt+0x394>
    6fd8:	add	r1, pc, r1
    6fdc:	ldrb	r2, [r1, r2]
    6fe0:	strb	r2, [r3]
    6fe4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6fe8:	add	r2, r3, #1
    6fec:	str	r2, [fp, #-28]	; 0xffffffe4
    6ff0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6ff4:	lsr	r2, r2, #12
    6ff8:	and	r2, r2, #63	; 0x3f
    6ffc:	ldr	r1, [pc, #280]	; 711c <rb_des_crypt+0x398>
    7000:	add	r1, pc, r1
    7004:	ldrb	r2, [r1, r2]
    7008:	strb	r2, [r3]
    700c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7010:	add	r2, r3, #1
    7014:	str	r2, [fp, #-28]	; 0xffffffe4
    7018:	ldr	r2, [fp, #-32]	; 0xffffffe0
    701c:	lsr	r2, r2, #6
    7020:	and	r2, r2, #63	; 0x3f
    7024:	ldr	r1, [pc, #244]	; 7120 <rb_des_crypt+0x39c>
    7028:	add	r1, pc, r1
    702c:	ldrb	r2, [r1, r2]
    7030:	strb	r2, [r3]
    7034:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7038:	add	r2, r3, #1
    703c:	str	r2, [fp, #-28]	; 0xffffffe4
    7040:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7044:	and	r2, r2, #63	; 0x3f
    7048:	ldr	r1, [pc, #212]	; 7124 <rb_des_crypt+0x3a0>
    704c:	add	r1, pc, r1
    7050:	ldrb	r2, [r1, r2]
    7054:	strb	r2, [r3]
    7058:	ldr	r3, [fp, #-40]	; 0xffffffd8
    705c:	lsl	r3, r3, #2
    7060:	str	r3, [fp, #-32]	; 0xffffffe0
    7064:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7068:	add	r2, r3, #1
    706c:	str	r2, [fp, #-28]	; 0xffffffe4
    7070:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7074:	lsr	r2, r2, #12
    7078:	and	r2, r2, #63	; 0x3f
    707c:	ldr	r1, [pc, #164]	; 7128 <rb_des_crypt+0x3a4>
    7080:	add	r1, pc, r1
    7084:	ldrb	r2, [r1, r2]
    7088:	strb	r2, [r3]
    708c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7090:	add	r2, r3, #1
    7094:	str	r2, [fp, #-28]	; 0xffffffe4
    7098:	ldr	r2, [fp, #-32]	; 0xffffffe0
    709c:	lsr	r2, r2, #6
    70a0:	and	r2, r2, #63	; 0x3f
    70a4:	ldr	r1, [pc, #128]	; 712c <rb_des_crypt+0x3a8>
    70a8:	add	r1, pc, r1
    70ac:	ldrb	r2, [r1, r2]
    70b0:	strb	r2, [r3]
    70b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    70b8:	add	r2, r3, #1
    70bc:	str	r2, [fp, #-28]	; 0xffffffe4
    70c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    70c4:	and	r2, r2, #63	; 0x3f
    70c8:	ldr	r1, [pc, #96]	; 7130 <rb_des_crypt+0x3ac>
    70cc:	add	r1, pc, r1
    70d0:	ldrb	r2, [r1, r2]
    70d4:	strb	r2, [r3]
    70d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    70dc:	mov	r2, #0
    70e0:	strb	r2, [r3]
    70e4:	ldr	r3, [pc, #72]	; 7134 <rb_des_crypt+0x3b0>
    70e8:	add	r3, pc, r3
    70ec:	mov	r0, r3
    70f0:	sub	sp, fp, #8
    70f4:	pop	{r4, fp, pc}
    70f8:	.word	0x0003ff6c
    70fc:	.word	0x0003ff3c
    7100:	.word	0x0003ff30
    7104:	.word	0x0003ff24
    7108:	.word	0x0001aadc
    710c:	.word	0x0001aab4
    7110:	.word	0x0001aa8c
    7114:	.word	0x0001aa68
    7118:	.word	0x0001aa28
    711c:	.word	0x0001aa00
    7120:	.word	0x0001a9d8
    7124:	.word	0x0001a9b4
    7128:	.word	0x0001a980
    712c:	.word	0x0001a958
    7130:	.word	0x0001a934
    7134:	.word	0x0003fcec

00007138 <_crypt_to64>:
    7138:	push	{fp}		; (str fp, [sp, #-4]!)
    713c:	add	fp, sp, #0
    7140:	sub	sp, sp, #20
    7144:	str	r0, [fp, #-8]
    7148:	str	r1, [fp, #-12]
    714c:	str	r2, [fp, #-16]
    7150:	b	7184 <_crypt_to64+0x4c>
    7154:	ldr	r3, [fp, #-8]
    7158:	add	r2, r3, #1
    715c:	str	r2, [fp, #-8]
    7160:	ldr	r2, [fp, #-12]
    7164:	and	r2, r2, #63	; 0x3f
    7168:	ldr	r1, [pc, #60]	; 71ac <_crypt_to64+0x74>
    716c:	add	r1, pc, r1
    7170:	ldrb	r2, [r1, r2]
    7174:	strb	r2, [r3]
    7178:	ldr	r3, [fp, #-12]
    717c:	lsr	r3, r3, #6
    7180:	str	r3, [fp, #-12]
    7184:	ldr	r3, [fp, #-16]
    7188:	sub	r3, r3, #1
    718c:	str	r3, [fp, #-16]
    7190:	ldr	r3, [fp, #-16]
    7194:	cmp	r3, #0
    7198:	bge	7154 <_crypt_to64+0x1c>
    719c:	nop			; (mov r0, r0)
    71a0:	add	sp, fp, #0
    71a4:	pop	{fp}		; (ldr fp, [sp], #4)
    71a8:	bx	lr
    71ac:	.word	0x0001a894

000071b0 <MD5Init>:
    71b0:	push	{fp}		; (str fp, [sp, #-4]!)
    71b4:	add	fp, sp, #0
    71b8:	sub	sp, sp, #12
    71bc:	str	r0, [fp, #-8]
    71c0:	ldr	r3, [fp, #-8]
    71c4:	mov	r2, #0
    71c8:	str	r2, [r3, #20]
    71cc:	ldr	r3, [fp, #-8]
    71d0:	ldr	r2, [r3, #20]
    71d4:	ldr	r3, [fp, #-8]
    71d8:	str	r2, [r3, #16]
    71dc:	ldr	r3, [fp, #-8]
    71e0:	ldr	r2, [pc, #52]	; 721c <MD5Init+0x6c>
    71e4:	str	r2, [r3]
    71e8:	ldr	r3, [fp, #-8]
    71ec:	ldr	r2, [pc, #44]	; 7220 <MD5Init+0x70>
    71f0:	str	r2, [r3, #4]
    71f4:	ldr	r3, [fp, #-8]
    71f8:	ldr	r2, [pc, #36]	; 7224 <MD5Init+0x74>
    71fc:	str	r2, [r3, #8]
    7200:	ldr	r3, [fp, #-8]
    7204:	ldr	r2, [pc, #28]	; 7228 <MD5Init+0x78>
    7208:	str	r2, [r3, #12]
    720c:	nop			; (mov r0, r0)
    7210:	add	sp, fp, #0
    7214:	pop	{fp}		; (ldr fp, [sp], #4)
    7218:	bx	lr
    721c:	.word	0x67452301
    7220:	.word	0xefcdab89
    7224:	.word	0x98badcfe
    7228:	.word	0x10325476

0000722c <MD5Update>:
    722c:	push	{fp, lr}
    7230:	add	fp, sp, #4
    7234:	sub	sp, sp, #32
    7238:	str	r0, [fp, #-24]	; 0xffffffe8
    723c:	str	r1, [fp, #-28]	; 0xffffffe4
    7240:	str	r2, [fp, #-32]	; 0xffffffe0
    7244:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7248:	str	r3, [fp, #-16]
    724c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7250:	ldr	r3, [r3, #16]
    7254:	lsr	r3, r3, #3
    7258:	and	r3, r3, #63	; 0x3f
    725c:	str	r3, [fp, #-12]
    7260:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7264:	ldr	r2, [r3, #16]
    7268:	ldr	r3, [fp, #-32]	; 0xffffffe0
    726c:	lsl	r3, r3, #3
    7270:	add	r2, r2, r3
    7274:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7278:	str	r2, [r3, #16]
    727c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7280:	ldr	r2, [r3, #16]
    7284:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7288:	lsl	r3, r3, #3
    728c:	cmp	r2, r3
    7290:	bcs	72a8 <MD5Update+0x7c>
    7294:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7298:	ldr	r3, [r3, #20]
    729c:	add	r2, r3, #1
    72a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72a4:	str	r2, [r3, #20]
    72a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72ac:	ldr	r2, [r3, #20]
    72b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    72b4:	lsr	r3, r3, #29
    72b8:	add	r2, r2, r3
    72bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    72c0:	str	r2, [r3, #20]
    72c4:	ldr	r3, [fp, #-12]
    72c8:	rsb	r3, r3, #64	; 0x40
    72cc:	str	r3, [fp, #-20]	; 0xffffffec
    72d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    72d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    72d8:	cmp	r2, r3
    72dc:	bcc	7368 <MD5Update+0x13c>
    72e0:	ldr	r3, [fp, #-12]
    72e4:	add	r3, r3, #24
    72e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    72ec:	add	r3, r2, r3
    72f0:	ldr	r2, [fp, #-20]	; 0xffffffec
    72f4:	ldr	r1, [fp, #-16]
    72f8:	mov	r0, r3
    72fc:	bl	4880 <memcpy@plt>
    7300:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7304:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7308:	add	r3, r3, #24
    730c:	mov	r1, r3
    7310:	mov	r0, r2
    7314:	bl	7494 <MD5Transform>
    7318:	ldr	r3, [fp, #-20]	; 0xffffffec
    731c:	str	r3, [fp, #-8]
    7320:	b	7348 <MD5Update+0x11c>
    7324:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7328:	ldr	r2, [fp, #-16]
    732c:	ldr	r3, [fp, #-8]
    7330:	add	r3, r2, r3
    7334:	mov	r1, r3
    7338:	bl	7494 <MD5Transform>
    733c:	ldr	r3, [fp, #-8]
    7340:	add	r3, r3, #64	; 0x40
    7344:	str	r3, [fp, #-8]
    7348:	ldr	r3, [fp, #-8]
    734c:	add	r2, r3, #63	; 0x3f
    7350:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7354:	cmp	r2, r3
    7358:	bcc	7324 <MD5Update+0xf8>
    735c:	mov	r3, #0
    7360:	str	r3, [fp, #-12]
    7364:	b	7370 <MD5Update+0x144>
    7368:	mov	r3, #0
    736c:	str	r3, [fp, #-8]
    7370:	ldr	r3, [fp, #-12]
    7374:	add	r3, r3, #24
    7378:	ldr	r2, [fp, #-24]	; 0xffffffe8
    737c:	add	r0, r2, r3
    7380:	ldr	r2, [fp, #-16]
    7384:	ldr	r3, [fp, #-8]
    7388:	add	r1, r2, r3
    738c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7390:	ldr	r3, [fp, #-8]
    7394:	sub	r3, r2, r3
    7398:	mov	r2, r3
    739c:	bl	4880 <memcpy@plt>
    73a0:	nop			; (mov r0, r0)
    73a4:	sub	sp, fp, #4
    73a8:	pop	{fp, pc}

000073ac <MD5Pad>:
    73ac:	push	{fp, lr}
    73b0:	add	fp, sp, #4
    73b4:	sub	sp, sp, #24
    73b8:	str	r0, [fp, #-24]	; 0xffffffe8
    73bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    73c0:	add	r1, r3, #16
    73c4:	sub	r3, fp, #20
    73c8:	mov	r2, #8
    73cc:	mov	r0, r3
    73d0:	bl	4880 <memcpy@plt>
    73d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    73d8:	ldr	r3, [r3, #16]
    73dc:	lsr	r3, r3, #3
    73e0:	and	r3, r3, #63	; 0x3f
    73e4:	str	r3, [fp, #-8]
    73e8:	ldr	r3, [fp, #-8]
    73ec:	cmp	r3, #55	; 0x37
    73f0:	bhi	7400 <MD5Pad+0x54>
    73f4:	ldr	r3, [fp, #-8]
    73f8:	rsb	r3, r3, #56	; 0x38
    73fc:	b	7408 <MD5Pad+0x5c>
    7400:	ldr	r3, [fp, #-8]
    7404:	rsb	r3, r3, #120	; 0x78
    7408:	str	r3, [fp, #-12]
    740c:	ldr	r2, [fp, #-12]
    7410:	ldr	r3, [pc, #44]	; 7444 <MD5Pad+0x98>
    7414:	add	r3, pc, r3
    7418:	mov	r1, r3
    741c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7420:	bl	722c <MD5Update>
    7424:	sub	r3, fp, #20
    7428:	mov	r2, #8
    742c:	mov	r1, r3
    7430:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7434:	bl	722c <MD5Update>
    7438:	nop			; (mov r0, r0)
    743c:	sub	sp, fp, #4
    7440:	pop	{fp, pc}
    7444:	.word	0x0002d018

00007448 <MD5Final>:
    7448:	push	{fp, lr}
    744c:	add	fp, sp, #4
    7450:	sub	sp, sp, #8
    7454:	str	r0, [fp, #-8]
    7458:	str	r1, [fp, #-12]
    745c:	ldr	r0, [fp, #-12]
    7460:	bl	73ac <MD5Pad>
    7464:	ldr	r3, [fp, #-12]
    7468:	mov	r2, #16
    746c:	mov	r1, r3
    7470:	ldr	r0, [fp, #-8]
    7474:	bl	4880 <memcpy@plt>
    7478:	mov	r2, #88	; 0x58
    747c:	mov	r1, #0
    7480:	ldr	r0, [fp, #-12]
    7484:	bl	4694 <memset@plt>
    7488:	nop			; (mov r0, r0)
    748c:	sub	sp, fp, #4
    7490:	pop	{fp, pc}

00007494 <MD5Transform>:
    7494:	push	{fp, lr}
    7498:	add	fp, sp, #4
    749c:	sub	sp, sp, #88	; 0x58
    74a0:	str	r0, [fp, #-88]	; 0xffffffa8
    74a4:	str	r1, [fp, #-92]	; 0xffffffa4
    74a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    74ac:	ldr	r3, [r3]
    74b0:	str	r3, [fp, #-8]
    74b4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    74b8:	ldr	r3, [r3, #4]
    74bc:	str	r3, [fp, #-12]
    74c0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    74c4:	ldr	r3, [r3, #8]
    74c8:	str	r3, [fp, #-16]
    74cc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    74d0:	ldr	r3, [r3, #12]
    74d4:	str	r3, [fp, #-20]	; 0xffffffec
    74d8:	sub	r3, fp, #84	; 0x54
    74dc:	mov	r2, #64	; 0x40
    74e0:	ldr	r1, [fp, #-92]	; 0xffffffa4
    74e4:	mov	r0, r3
    74e8:	bl	4880 <memcpy@plt>
    74ec:	ldr	r2, [fp, #-12]
    74f0:	ldr	r3, [fp, #-16]
    74f4:	and	r2, r2, r3
    74f8:	ldr	r3, [fp, #-12]
    74fc:	mvn	r1, r3
    7500:	ldr	r3, [fp, #-20]	; 0xffffffec
    7504:	and	r3, r3, r1
    7508:	orr	r2, r2, r3
    750c:	ldr	r3, [fp, #-84]	; 0xffffffac
    7510:	add	r2, r2, r3
    7514:	ldr	r3, [fp, #-8]
    7518:	add	r2, r2, r3
    751c:	ldr	r3, [pc, #4088]	; 851c <MD5Transform+0x1088>
    7520:	add	r3, r2, r3
    7524:	str	r3, [fp, #-8]
    7528:	ldr	r3, [fp, #-8]
    752c:	ror	r3, r3, #25
    7530:	str	r3, [fp, #-8]
    7534:	ldr	r2, [fp, #-8]
    7538:	ldr	r3, [fp, #-12]
    753c:	add	r3, r2, r3
    7540:	str	r3, [fp, #-8]
    7544:	ldr	r2, [fp, #-8]
    7548:	ldr	r3, [fp, #-12]
    754c:	and	r2, r2, r3
    7550:	ldr	r3, [fp, #-8]
    7554:	mvn	r1, r3
    7558:	ldr	r3, [fp, #-16]
    755c:	and	r3, r3, r1
    7560:	orr	r2, r2, r3
    7564:	ldr	r3, [fp, #-80]	; 0xffffffb0
    7568:	add	r2, r2, r3
    756c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7570:	add	r2, r2, r3
    7574:	ldr	r3, [pc, #4004]	; 8520 <MD5Transform+0x108c>
    7578:	add	r3, r2, r3
    757c:	str	r3, [fp, #-20]	; 0xffffffec
    7580:	ldr	r3, [fp, #-20]	; 0xffffffec
    7584:	ror	r3, r3, #20
    7588:	str	r3, [fp, #-20]	; 0xffffffec
    758c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7590:	ldr	r3, [fp, #-8]
    7594:	add	r3, r2, r3
    7598:	str	r3, [fp, #-20]	; 0xffffffec
    759c:	ldr	r2, [fp, #-20]	; 0xffffffec
    75a0:	ldr	r3, [fp, #-8]
    75a4:	and	r2, r2, r3
    75a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    75ac:	mvn	r1, r3
    75b0:	ldr	r3, [fp, #-12]
    75b4:	and	r3, r3, r1
    75b8:	orr	r2, r2, r3
    75bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
    75c0:	add	r2, r2, r3
    75c4:	ldr	r3, [fp, #-16]
    75c8:	add	r2, r2, r3
    75cc:	ldr	r3, [pc, #3920]	; 8524 <MD5Transform+0x1090>
    75d0:	add	r3, r2, r3
    75d4:	str	r3, [fp, #-16]
    75d8:	ldr	r3, [fp, #-16]
    75dc:	ror	r3, r3, #15
    75e0:	str	r3, [fp, #-16]
    75e4:	ldr	r2, [fp, #-16]
    75e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    75ec:	add	r3, r2, r3
    75f0:	str	r3, [fp, #-16]
    75f4:	ldr	r2, [fp, #-16]
    75f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    75fc:	and	r2, r2, r3
    7600:	ldr	r3, [fp, #-16]
    7604:	mvn	r1, r3
    7608:	ldr	r3, [fp, #-8]
    760c:	and	r3, r3, r1
    7610:	orr	r2, r2, r3
    7614:	ldr	r3, [fp, #-72]	; 0xffffffb8
    7618:	add	r2, r2, r3
    761c:	ldr	r3, [fp, #-12]
    7620:	add	r2, r2, r3
    7624:	ldr	r3, [pc, #3836]	; 8528 <MD5Transform+0x1094>
    7628:	add	r3, r2, r3
    762c:	str	r3, [fp, #-12]
    7630:	ldr	r3, [fp, #-12]
    7634:	ror	r3, r3, #10
    7638:	str	r3, [fp, #-12]
    763c:	ldr	r2, [fp, #-12]
    7640:	ldr	r3, [fp, #-16]
    7644:	add	r3, r2, r3
    7648:	str	r3, [fp, #-12]
    764c:	ldr	r2, [fp, #-12]
    7650:	ldr	r3, [fp, #-16]
    7654:	and	r2, r2, r3
    7658:	ldr	r3, [fp, #-12]
    765c:	mvn	r1, r3
    7660:	ldr	r3, [fp, #-20]	; 0xffffffec
    7664:	and	r3, r3, r1
    7668:	orr	r2, r2, r3
    766c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7670:	add	r2, r2, r3
    7674:	ldr	r3, [fp, #-8]
    7678:	add	r2, r2, r3
    767c:	ldr	r3, [pc, #3752]	; 852c <MD5Transform+0x1098>
    7680:	add	r3, r2, r3
    7684:	str	r3, [fp, #-8]
    7688:	ldr	r3, [fp, #-8]
    768c:	ror	r3, r3, #25
    7690:	str	r3, [fp, #-8]
    7694:	ldr	r2, [fp, #-8]
    7698:	ldr	r3, [fp, #-12]
    769c:	add	r3, r2, r3
    76a0:	str	r3, [fp, #-8]
    76a4:	ldr	r2, [fp, #-8]
    76a8:	ldr	r3, [fp, #-12]
    76ac:	and	r2, r2, r3
    76b0:	ldr	r3, [fp, #-8]
    76b4:	mvn	r1, r3
    76b8:	ldr	r3, [fp, #-16]
    76bc:	and	r3, r3, r1
    76c0:	orr	r2, r2, r3
    76c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    76c8:	add	r2, r2, r3
    76cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    76d0:	add	r2, r2, r3
    76d4:	ldr	r3, [pc, #3668]	; 8530 <MD5Transform+0x109c>
    76d8:	add	r3, r2, r3
    76dc:	str	r3, [fp, #-20]	; 0xffffffec
    76e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    76e4:	ror	r3, r3, #20
    76e8:	str	r3, [fp, #-20]	; 0xffffffec
    76ec:	ldr	r2, [fp, #-20]	; 0xffffffec
    76f0:	ldr	r3, [fp, #-8]
    76f4:	add	r3, r2, r3
    76f8:	str	r3, [fp, #-20]	; 0xffffffec
    76fc:	ldr	r2, [fp, #-20]	; 0xffffffec
    7700:	ldr	r3, [fp, #-8]
    7704:	and	r2, r2, r3
    7708:	ldr	r3, [fp, #-20]	; 0xffffffec
    770c:	mvn	r1, r3
    7710:	ldr	r3, [fp, #-12]
    7714:	and	r3, r3, r1
    7718:	orr	r2, r2, r3
    771c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7720:	add	r2, r2, r3
    7724:	ldr	r3, [fp, #-16]
    7728:	add	r2, r2, r3
    772c:	ldr	r3, [pc, #3584]	; 8534 <MD5Transform+0x10a0>
    7730:	add	r3, r2, r3
    7734:	str	r3, [fp, #-16]
    7738:	ldr	r3, [fp, #-16]
    773c:	ror	r3, r3, #15
    7740:	str	r3, [fp, #-16]
    7744:	ldr	r2, [fp, #-16]
    7748:	ldr	r3, [fp, #-20]	; 0xffffffec
    774c:	add	r3, r2, r3
    7750:	str	r3, [fp, #-16]
    7754:	ldr	r2, [fp, #-16]
    7758:	ldr	r3, [fp, #-20]	; 0xffffffec
    775c:	and	r2, r2, r3
    7760:	ldr	r3, [fp, #-16]
    7764:	mvn	r1, r3
    7768:	ldr	r3, [fp, #-8]
    776c:	and	r3, r3, r1
    7770:	orr	r2, r2, r3
    7774:	ldr	r3, [fp, #-56]	; 0xffffffc8
    7778:	add	r2, r2, r3
    777c:	ldr	r3, [fp, #-12]
    7780:	add	r2, r2, r3
    7784:	ldr	r3, [pc, #3500]	; 8538 <MD5Transform+0x10a4>
    7788:	add	r3, r2, r3
    778c:	str	r3, [fp, #-12]
    7790:	ldr	r3, [fp, #-12]
    7794:	ror	r3, r3, #10
    7798:	str	r3, [fp, #-12]
    779c:	ldr	r2, [fp, #-12]
    77a0:	ldr	r3, [fp, #-16]
    77a4:	add	r3, r2, r3
    77a8:	str	r3, [fp, #-12]
    77ac:	ldr	r2, [fp, #-12]
    77b0:	ldr	r3, [fp, #-16]
    77b4:	and	r2, r2, r3
    77b8:	ldr	r3, [fp, #-12]
    77bc:	mvn	r1, r3
    77c0:	ldr	r3, [fp, #-20]	; 0xffffffec
    77c4:	and	r3, r3, r1
    77c8:	orr	r2, r2, r3
    77cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    77d0:	add	r2, r2, r3
    77d4:	ldr	r3, [fp, #-8]
    77d8:	add	r2, r2, r3
    77dc:	ldr	r3, [pc, #3416]	; 853c <MD5Transform+0x10a8>
    77e0:	add	r3, r2, r3
    77e4:	str	r3, [fp, #-8]
    77e8:	ldr	r3, [fp, #-8]
    77ec:	ror	r3, r3, #25
    77f0:	str	r3, [fp, #-8]
    77f4:	ldr	r2, [fp, #-8]
    77f8:	ldr	r3, [fp, #-12]
    77fc:	add	r3, r2, r3
    7800:	str	r3, [fp, #-8]
    7804:	ldr	r2, [fp, #-8]
    7808:	ldr	r3, [fp, #-12]
    780c:	and	r2, r2, r3
    7810:	ldr	r3, [fp, #-8]
    7814:	mvn	r1, r3
    7818:	ldr	r3, [fp, #-16]
    781c:	and	r3, r3, r1
    7820:	orr	r2, r2, r3
    7824:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7828:	add	r2, r2, r3
    782c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7830:	add	r2, r2, r3
    7834:	ldr	r3, [pc, #3332]	; 8540 <MD5Transform+0x10ac>
    7838:	add	r3, r2, r3
    783c:	str	r3, [fp, #-20]	; 0xffffffec
    7840:	ldr	r3, [fp, #-20]	; 0xffffffec
    7844:	ror	r3, r3, #20
    7848:	str	r3, [fp, #-20]	; 0xffffffec
    784c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7850:	ldr	r3, [fp, #-8]
    7854:	add	r3, r2, r3
    7858:	str	r3, [fp, #-20]	; 0xffffffec
    785c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7860:	ldr	r3, [fp, #-8]
    7864:	and	r2, r2, r3
    7868:	ldr	r3, [fp, #-20]	; 0xffffffec
    786c:	mvn	r1, r3
    7870:	ldr	r3, [fp, #-12]
    7874:	and	r3, r3, r1
    7878:	orr	r2, r2, r3
    787c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7880:	add	r2, r2, r3
    7884:	ldr	r3, [fp, #-16]
    7888:	add	r3, r2, r3
    788c:	sub	r3, r3, #41984	; 0xa400
    7890:	sub	r3, r3, #79	; 0x4f
    7894:	str	r3, [fp, #-16]
    7898:	ldr	r3, [fp, #-16]
    789c:	ror	r3, r3, #15
    78a0:	str	r3, [fp, #-16]
    78a4:	ldr	r2, [fp, #-16]
    78a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    78ac:	add	r3, r2, r3
    78b0:	str	r3, [fp, #-16]
    78b4:	ldr	r2, [fp, #-16]
    78b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    78bc:	and	r2, r2, r3
    78c0:	ldr	r3, [fp, #-16]
    78c4:	mvn	r1, r3
    78c8:	ldr	r3, [fp, #-8]
    78cc:	and	r3, r3, r1
    78d0:	orr	r2, r2, r3
    78d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    78d8:	add	r2, r2, r3
    78dc:	ldr	r3, [fp, #-12]
    78e0:	add	r2, r2, r3
    78e4:	ldr	r3, [pc, #3160]	; 8544 <MD5Transform+0x10b0>
    78e8:	add	r3, r2, r3
    78ec:	str	r3, [fp, #-12]
    78f0:	ldr	r3, [fp, #-12]
    78f4:	ror	r3, r3, #10
    78f8:	str	r3, [fp, #-12]
    78fc:	ldr	r2, [fp, #-12]
    7900:	ldr	r3, [fp, #-16]
    7904:	add	r3, r2, r3
    7908:	str	r3, [fp, #-12]
    790c:	ldr	r2, [fp, #-12]
    7910:	ldr	r3, [fp, #-16]
    7914:	and	r2, r2, r3
    7918:	ldr	r3, [fp, #-12]
    791c:	mvn	r1, r3
    7920:	ldr	r3, [fp, #-20]	; 0xffffffec
    7924:	and	r3, r3, r1
    7928:	orr	r2, r2, r3
    792c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    7930:	add	r2, r2, r3
    7934:	ldr	r3, [fp, #-8]
    7938:	add	r2, r2, r3
    793c:	ldr	r3, [pc, #3076]	; 8548 <MD5Transform+0x10b4>
    7940:	add	r3, r2, r3
    7944:	str	r3, [fp, #-8]
    7948:	ldr	r3, [fp, #-8]
    794c:	ror	r3, r3, #25
    7950:	str	r3, [fp, #-8]
    7954:	ldr	r2, [fp, #-8]
    7958:	ldr	r3, [fp, #-12]
    795c:	add	r3, r2, r3
    7960:	str	r3, [fp, #-8]
    7964:	ldr	r2, [fp, #-8]
    7968:	ldr	r3, [fp, #-12]
    796c:	and	r2, r2, r3
    7970:	ldr	r3, [fp, #-8]
    7974:	mvn	r1, r3
    7978:	ldr	r3, [fp, #-16]
    797c:	and	r3, r3, r1
    7980:	orr	r2, r2, r3
    7984:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7988:	add	r2, r2, r3
    798c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7990:	add	r2, r2, r3
    7994:	ldr	r3, [pc, #2992]	; 854c <MD5Transform+0x10b8>
    7998:	add	r3, r2, r3
    799c:	str	r3, [fp, #-20]	; 0xffffffec
    79a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    79a4:	ror	r3, r3, #20
    79a8:	str	r3, [fp, #-20]	; 0xffffffec
    79ac:	ldr	r2, [fp, #-20]	; 0xffffffec
    79b0:	ldr	r3, [fp, #-8]
    79b4:	add	r3, r2, r3
    79b8:	str	r3, [fp, #-20]	; 0xffffffec
    79bc:	ldr	r2, [fp, #-20]	; 0xffffffec
    79c0:	ldr	r3, [fp, #-8]
    79c4:	and	r2, r2, r3
    79c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    79cc:	mvn	r1, r3
    79d0:	ldr	r3, [fp, #-12]
    79d4:	and	r3, r3, r1
    79d8:	orr	r2, r2, r3
    79dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    79e0:	add	r2, r2, r3
    79e4:	ldr	r3, [fp, #-16]
    79e8:	add	r2, r2, r3
    79ec:	ldr	r3, [pc, #2908]	; 8550 <MD5Transform+0x10bc>
    79f0:	add	r3, r2, r3
    79f4:	str	r3, [fp, #-16]
    79f8:	ldr	r3, [fp, #-16]
    79fc:	ror	r3, r3, #15
    7a00:	str	r3, [fp, #-16]
    7a04:	ldr	r2, [fp, #-16]
    7a08:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a0c:	add	r3, r2, r3
    7a10:	str	r3, [fp, #-16]
    7a14:	ldr	r2, [fp, #-16]
    7a18:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a1c:	and	r2, r2, r3
    7a20:	ldr	r3, [fp, #-16]
    7a24:	mvn	r1, r3
    7a28:	ldr	r3, [fp, #-8]
    7a2c:	and	r3, r3, r1
    7a30:	orr	r2, r2, r3
    7a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7a38:	add	r2, r2, r3
    7a3c:	ldr	r3, [fp, #-12]
    7a40:	add	r2, r2, r3
    7a44:	ldr	r3, [pc, #2824]	; 8554 <MD5Transform+0x10c0>
    7a48:	add	r3, r2, r3
    7a4c:	str	r3, [fp, #-12]
    7a50:	ldr	r3, [fp, #-12]
    7a54:	ror	r3, r3, #10
    7a58:	str	r3, [fp, #-12]
    7a5c:	ldr	r2, [fp, #-12]
    7a60:	ldr	r3, [fp, #-16]
    7a64:	add	r3, r2, r3
    7a68:	str	r3, [fp, #-12]
    7a6c:	ldr	r2, [fp, #-12]
    7a70:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a74:	and	r2, r2, r3
    7a78:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a7c:	mvn	r1, r3
    7a80:	ldr	r3, [fp, #-16]
    7a84:	and	r3, r3, r1
    7a88:	orr	r2, r2, r3
    7a8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    7a90:	add	r2, r2, r3
    7a94:	ldr	r3, [fp, #-8]
    7a98:	add	r2, r2, r3
    7a9c:	ldr	r3, [pc, #2740]	; 8558 <MD5Transform+0x10c4>
    7aa0:	add	r3, r2, r3
    7aa4:	str	r3, [fp, #-8]
    7aa8:	ldr	r3, [fp, #-8]
    7aac:	ror	r3, r3, #27
    7ab0:	str	r3, [fp, #-8]
    7ab4:	ldr	r2, [fp, #-8]
    7ab8:	ldr	r3, [fp, #-12]
    7abc:	add	r3, r2, r3
    7ac0:	str	r3, [fp, #-8]
    7ac4:	ldr	r2, [fp, #-8]
    7ac8:	ldr	r3, [fp, #-16]
    7acc:	and	r2, r2, r3
    7ad0:	ldr	r3, [fp, #-16]
    7ad4:	mvn	r1, r3
    7ad8:	ldr	r3, [fp, #-12]
    7adc:	and	r3, r3, r1
    7ae0:	orr	r2, r2, r3
    7ae4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7ae8:	add	r2, r2, r3
    7aec:	ldr	r3, [fp, #-20]	; 0xffffffec
    7af0:	add	r2, r2, r3
    7af4:	ldr	r3, [pc, #2656]	; 855c <MD5Transform+0x10c8>
    7af8:	add	r3, r2, r3
    7afc:	str	r3, [fp, #-20]	; 0xffffffec
    7b00:	ldr	r3, [fp, #-20]	; 0xffffffec
    7b04:	ror	r3, r3, #23
    7b08:	str	r3, [fp, #-20]	; 0xffffffec
    7b0c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7b10:	ldr	r3, [fp, #-8]
    7b14:	add	r3, r2, r3
    7b18:	str	r3, [fp, #-20]	; 0xffffffec
    7b1c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7b20:	ldr	r3, [fp, #-12]
    7b24:	and	r2, r2, r3
    7b28:	ldr	r3, [fp, #-12]
    7b2c:	mvn	r1, r3
    7b30:	ldr	r3, [fp, #-8]
    7b34:	and	r3, r3, r1
    7b38:	orr	r2, r2, r3
    7b3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7b40:	add	r2, r2, r3
    7b44:	ldr	r3, [fp, #-16]
    7b48:	add	r2, r2, r3
    7b4c:	ldr	r3, [pc, #2572]	; 8560 <MD5Transform+0x10cc>
    7b50:	add	r3, r2, r3
    7b54:	str	r3, [fp, #-16]
    7b58:	ldr	r3, [fp, #-16]
    7b5c:	ror	r3, r3, #18
    7b60:	str	r3, [fp, #-16]
    7b64:	ldr	r2, [fp, #-16]
    7b68:	ldr	r3, [fp, #-20]	; 0xffffffec
    7b6c:	add	r3, r2, r3
    7b70:	str	r3, [fp, #-16]
    7b74:	ldr	r2, [fp, #-16]
    7b78:	ldr	r3, [fp, #-8]
    7b7c:	and	r2, r2, r3
    7b80:	ldr	r3, [fp, #-8]
    7b84:	mvn	r1, r3
    7b88:	ldr	r3, [fp, #-20]	; 0xffffffec
    7b8c:	and	r3, r3, r1
    7b90:	orr	r2, r2, r3
    7b94:	ldr	r3, [fp, #-84]	; 0xffffffac
    7b98:	add	r2, r2, r3
    7b9c:	ldr	r3, [fp, #-12]
    7ba0:	add	r2, r2, r3
    7ba4:	ldr	r3, [pc, #2488]	; 8564 <MD5Transform+0x10d0>
    7ba8:	add	r3, r2, r3
    7bac:	str	r3, [fp, #-12]
    7bb0:	ldr	r3, [fp, #-12]
    7bb4:	ror	r3, r3, #12
    7bb8:	str	r3, [fp, #-12]
    7bbc:	ldr	r2, [fp, #-12]
    7bc0:	ldr	r3, [fp, #-16]
    7bc4:	add	r3, r2, r3
    7bc8:	str	r3, [fp, #-12]
    7bcc:	ldr	r2, [fp, #-12]
    7bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
    7bd4:	and	r2, r2, r3
    7bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
    7bdc:	mvn	r1, r3
    7be0:	ldr	r3, [fp, #-16]
    7be4:	and	r3, r3, r1
    7be8:	orr	r2, r2, r3
    7bec:	ldr	r3, [fp, #-64]	; 0xffffffc0
    7bf0:	add	r2, r2, r3
    7bf4:	ldr	r3, [fp, #-8]
    7bf8:	add	r2, r2, r3
    7bfc:	ldr	r3, [pc, #2404]	; 8568 <MD5Transform+0x10d4>
    7c00:	add	r3, r2, r3
    7c04:	str	r3, [fp, #-8]
    7c08:	ldr	r3, [fp, #-8]
    7c0c:	ror	r3, r3, #27
    7c10:	str	r3, [fp, #-8]
    7c14:	ldr	r2, [fp, #-8]
    7c18:	ldr	r3, [fp, #-12]
    7c1c:	add	r3, r2, r3
    7c20:	str	r3, [fp, #-8]
    7c24:	ldr	r2, [fp, #-8]
    7c28:	ldr	r3, [fp, #-16]
    7c2c:	and	r2, r2, r3
    7c30:	ldr	r3, [fp, #-16]
    7c34:	mvn	r1, r3
    7c38:	ldr	r3, [fp, #-12]
    7c3c:	and	r3, r3, r1
    7c40:	orr	r2, r2, r3
    7c44:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7c48:	add	r2, r2, r3
    7c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7c50:	add	r2, r2, r3
    7c54:	ldr	r3, [pc, #2320]	; 856c <MD5Transform+0x10d8>
    7c58:	add	r3, r2, r3
    7c5c:	str	r3, [fp, #-20]	; 0xffffffec
    7c60:	ldr	r3, [fp, #-20]	; 0xffffffec
    7c64:	ror	r3, r3, #23
    7c68:	str	r3, [fp, #-20]	; 0xffffffec
    7c6c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7c70:	ldr	r3, [fp, #-8]
    7c74:	add	r3, r2, r3
    7c78:	str	r3, [fp, #-20]	; 0xffffffec
    7c7c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7c80:	ldr	r3, [fp, #-12]
    7c84:	and	r2, r2, r3
    7c88:	ldr	r3, [fp, #-12]
    7c8c:	mvn	r1, r3
    7c90:	ldr	r3, [fp, #-8]
    7c94:	and	r3, r3, r1
    7c98:	orr	r2, r2, r3
    7c9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7ca0:	add	r2, r2, r3
    7ca4:	ldr	r3, [fp, #-16]
    7ca8:	add	r2, r2, r3
    7cac:	ldr	r3, [pc, #2236]	; 8570 <MD5Transform+0x10dc>
    7cb0:	add	r3, r2, r3
    7cb4:	str	r3, [fp, #-16]
    7cb8:	ldr	r3, [fp, #-16]
    7cbc:	ror	r3, r3, #18
    7cc0:	str	r3, [fp, #-16]
    7cc4:	ldr	r2, [fp, #-16]
    7cc8:	ldr	r3, [fp, #-20]	; 0xffffffec
    7ccc:	add	r3, r2, r3
    7cd0:	str	r3, [fp, #-16]
    7cd4:	ldr	r2, [fp, #-16]
    7cd8:	ldr	r3, [fp, #-8]
    7cdc:	and	r2, r2, r3
    7ce0:	ldr	r3, [fp, #-8]
    7ce4:	mvn	r1, r3
    7ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
    7cec:	and	r3, r3, r1
    7cf0:	orr	r2, r2, r3
    7cf4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7cf8:	add	r2, r2, r3
    7cfc:	ldr	r3, [fp, #-12]
    7d00:	add	r2, r2, r3
    7d04:	ldr	r3, [pc, #2152]	; 8574 <MD5Transform+0x10e0>
    7d08:	add	r3, r2, r3
    7d0c:	str	r3, [fp, #-12]
    7d10:	ldr	r3, [fp, #-12]
    7d14:	ror	r3, r3, #12
    7d18:	str	r3, [fp, #-12]
    7d1c:	ldr	r2, [fp, #-12]
    7d20:	ldr	r3, [fp, #-16]
    7d24:	add	r3, r2, r3
    7d28:	str	r3, [fp, #-12]
    7d2c:	ldr	r2, [fp, #-12]
    7d30:	ldr	r3, [fp, #-20]	; 0xffffffec
    7d34:	and	r2, r2, r3
    7d38:	ldr	r3, [fp, #-20]	; 0xffffffec
    7d3c:	mvn	r1, r3
    7d40:	ldr	r3, [fp, #-16]
    7d44:	and	r3, r3, r1
    7d48:	orr	r2, r2, r3
    7d4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7d50:	add	r2, r2, r3
    7d54:	ldr	r3, [fp, #-8]
    7d58:	add	r2, r2, r3
    7d5c:	ldr	r3, [pc, #2068]	; 8578 <MD5Transform+0x10e4>
    7d60:	add	r3, r2, r3
    7d64:	str	r3, [fp, #-8]
    7d68:	ldr	r3, [fp, #-8]
    7d6c:	ror	r3, r3, #27
    7d70:	str	r3, [fp, #-8]
    7d74:	ldr	r2, [fp, #-8]
    7d78:	ldr	r3, [fp, #-12]
    7d7c:	add	r3, r2, r3
    7d80:	str	r3, [fp, #-8]
    7d84:	ldr	r2, [fp, #-8]
    7d88:	ldr	r3, [fp, #-16]
    7d8c:	and	r2, r2, r3
    7d90:	ldr	r3, [fp, #-16]
    7d94:	mvn	r1, r3
    7d98:	ldr	r3, [fp, #-12]
    7d9c:	and	r3, r3, r1
    7da0:	orr	r2, r2, r3
    7da4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7da8:	add	r2, r2, r3
    7dac:	ldr	r3, [fp, #-20]	; 0xffffffec
    7db0:	add	r2, r2, r3
    7db4:	ldr	r3, [pc, #1984]	; 857c <MD5Transform+0x10e8>
    7db8:	add	r3, r2, r3
    7dbc:	str	r3, [fp, #-20]	; 0xffffffec
    7dc0:	ldr	r3, [fp, #-20]	; 0xffffffec
    7dc4:	ror	r3, r3, #23
    7dc8:	str	r3, [fp, #-20]	; 0xffffffec
    7dcc:	ldr	r2, [fp, #-20]	; 0xffffffec
    7dd0:	ldr	r3, [fp, #-8]
    7dd4:	add	r3, r2, r3
    7dd8:	str	r3, [fp, #-20]	; 0xffffffec
    7ddc:	ldr	r2, [fp, #-20]	; 0xffffffec
    7de0:	ldr	r3, [fp, #-12]
    7de4:	and	r2, r2, r3
    7de8:	ldr	r3, [fp, #-12]
    7dec:	mvn	r1, r3
    7df0:	ldr	r3, [fp, #-8]
    7df4:	and	r3, r3, r1
    7df8:	orr	r2, r2, r3
    7dfc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    7e00:	add	r2, r2, r3
    7e04:	ldr	r3, [fp, #-16]
    7e08:	add	r2, r2, r3
    7e0c:	ldr	r3, [pc, #1900]	; 8580 <MD5Transform+0x10ec>
    7e10:	add	r3, r2, r3
    7e14:	str	r3, [fp, #-16]
    7e18:	ldr	r3, [fp, #-16]
    7e1c:	ror	r3, r3, #18
    7e20:	str	r3, [fp, #-16]
    7e24:	ldr	r2, [fp, #-16]
    7e28:	ldr	r3, [fp, #-20]	; 0xffffffec
    7e2c:	add	r3, r2, r3
    7e30:	str	r3, [fp, #-16]
    7e34:	ldr	r2, [fp, #-16]
    7e38:	ldr	r3, [fp, #-8]
    7e3c:	and	r2, r2, r3
    7e40:	ldr	r3, [fp, #-8]
    7e44:	mvn	r1, r3
    7e48:	ldr	r3, [fp, #-20]	; 0xffffffec
    7e4c:	and	r3, r3, r1
    7e50:	orr	r2, r2, r3
    7e54:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7e58:	add	r2, r2, r3
    7e5c:	ldr	r3, [fp, #-12]
    7e60:	add	r2, r2, r3
    7e64:	ldr	r3, [pc, #1816]	; 8584 <MD5Transform+0x10f0>
    7e68:	add	r3, r2, r3
    7e6c:	str	r3, [fp, #-12]
    7e70:	ldr	r3, [fp, #-12]
    7e74:	ror	r3, r3, #12
    7e78:	str	r3, [fp, #-12]
    7e7c:	ldr	r2, [fp, #-12]
    7e80:	ldr	r3, [fp, #-16]
    7e84:	add	r3, r2, r3
    7e88:	str	r3, [fp, #-12]
    7e8c:	ldr	r2, [fp, #-12]
    7e90:	ldr	r3, [fp, #-20]	; 0xffffffec
    7e94:	and	r2, r2, r3
    7e98:	ldr	r3, [fp, #-20]	; 0xffffffec
    7e9c:	mvn	r1, r3
    7ea0:	ldr	r3, [fp, #-16]
    7ea4:	and	r3, r3, r1
    7ea8:	orr	r2, r2, r3
    7eac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7eb0:	add	r2, r2, r3
    7eb4:	ldr	r3, [fp, #-8]
    7eb8:	add	r2, r2, r3
    7ebc:	ldr	r3, [pc, #1732]	; 8588 <MD5Transform+0x10f4>
    7ec0:	add	r3, r2, r3
    7ec4:	str	r3, [fp, #-8]
    7ec8:	ldr	r3, [fp, #-8]
    7ecc:	ror	r3, r3, #27
    7ed0:	str	r3, [fp, #-8]
    7ed4:	ldr	r2, [fp, #-8]
    7ed8:	ldr	r3, [fp, #-12]
    7edc:	add	r3, r2, r3
    7ee0:	str	r3, [fp, #-8]
    7ee4:	ldr	r2, [fp, #-8]
    7ee8:	ldr	r3, [fp, #-16]
    7eec:	and	r2, r2, r3
    7ef0:	ldr	r3, [fp, #-16]
    7ef4:	mvn	r1, r3
    7ef8:	ldr	r3, [fp, #-12]
    7efc:	and	r3, r3, r1
    7f00:	orr	r2, r2, r3
    7f04:	ldr	r3, [fp, #-76]	; 0xffffffb4
    7f08:	add	r2, r2, r3
    7f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7f10:	add	r2, r2, r3
    7f14:	ldr	r3, [pc, #1648]	; 858c <MD5Transform+0x10f8>
    7f18:	add	r3, r2, r3
    7f1c:	str	r3, [fp, #-20]	; 0xffffffec
    7f20:	ldr	r3, [fp, #-20]	; 0xffffffec
    7f24:	ror	r3, r3, #23
    7f28:	str	r3, [fp, #-20]	; 0xffffffec
    7f2c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7f30:	ldr	r3, [fp, #-8]
    7f34:	add	r3, r2, r3
    7f38:	str	r3, [fp, #-20]	; 0xffffffec
    7f3c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7f40:	ldr	r3, [fp, #-12]
    7f44:	and	r2, r2, r3
    7f48:	ldr	r3, [fp, #-12]
    7f4c:	mvn	r1, r3
    7f50:	ldr	r3, [fp, #-8]
    7f54:	and	r3, r3, r1
    7f58:	orr	r2, r2, r3
    7f5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    7f60:	add	r2, r2, r3
    7f64:	ldr	r3, [fp, #-16]
    7f68:	add	r2, r2, r3
    7f6c:	ldr	r3, [pc, #1564]	; 8590 <MD5Transform+0x10fc>
    7f70:	add	r3, r2, r3
    7f74:	str	r3, [fp, #-16]
    7f78:	ldr	r3, [fp, #-16]
    7f7c:	ror	r3, r3, #18
    7f80:	str	r3, [fp, #-16]
    7f84:	ldr	r2, [fp, #-16]
    7f88:	ldr	r3, [fp, #-20]	; 0xffffffec
    7f8c:	add	r3, r2, r3
    7f90:	str	r3, [fp, #-16]
    7f94:	ldr	r2, [fp, #-16]
    7f98:	ldr	r3, [fp, #-8]
    7f9c:	and	r2, r2, r3
    7fa0:	ldr	r3, [fp, #-8]
    7fa4:	mvn	r1, r3
    7fa8:	ldr	r3, [fp, #-20]	; 0xffffffec
    7fac:	and	r3, r3, r1
    7fb0:	orr	r2, r2, r3
    7fb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    7fb8:	add	r2, r2, r3
    7fbc:	ldr	r3, [fp, #-12]
    7fc0:	add	r2, r2, r3
    7fc4:	ldr	r3, [pc, #1480]	; 8594 <MD5Transform+0x1100>
    7fc8:	add	r3, r2, r3
    7fcc:	str	r3, [fp, #-12]
    7fd0:	ldr	r3, [fp, #-12]
    7fd4:	ror	r3, r3, #12
    7fd8:	str	r3, [fp, #-12]
    7fdc:	ldr	r2, [fp, #-12]
    7fe0:	ldr	r3, [fp, #-16]
    7fe4:	add	r3, r2, r3
    7fe8:	str	r3, [fp, #-12]
    7fec:	ldr	r2, [fp, #-12]
    7ff0:	ldr	r3, [fp, #-16]
    7ff4:	eor	r2, r2, r3
    7ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
    7ffc:	eor	r2, r2, r3
    8000:	ldr	r3, [fp, #-64]	; 0xffffffc0
    8004:	add	r2, r2, r3
    8008:	ldr	r3, [fp, #-8]
    800c:	add	r2, r2, r3
    8010:	ldr	r3, [pc, #1408]	; 8598 <MD5Transform+0x1104>
    8014:	add	r3, r2, r3
    8018:	str	r3, [fp, #-8]
    801c:	ldr	r3, [fp, #-8]
    8020:	ror	r3, r3, #28
    8024:	str	r3, [fp, #-8]
    8028:	ldr	r2, [fp, #-8]
    802c:	ldr	r3, [fp, #-12]
    8030:	add	r3, r2, r3
    8034:	str	r3, [fp, #-8]
    8038:	ldr	r2, [fp, #-8]
    803c:	ldr	r3, [fp, #-12]
    8040:	eor	r2, r2, r3
    8044:	ldr	r3, [fp, #-16]
    8048:	eor	r2, r2, r3
    804c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8050:	add	r2, r2, r3
    8054:	ldr	r3, [fp, #-20]	; 0xffffffec
    8058:	add	r2, r2, r3
    805c:	ldr	r3, [pc, #1336]	; 859c <MD5Transform+0x1108>
    8060:	add	r3, r2, r3
    8064:	str	r3, [fp, #-20]	; 0xffffffec
    8068:	ldr	r3, [fp, #-20]	; 0xffffffec
    806c:	ror	r3, r3, #21
    8070:	str	r3, [fp, #-20]	; 0xffffffec
    8074:	ldr	r2, [fp, #-20]	; 0xffffffec
    8078:	ldr	r3, [fp, #-8]
    807c:	add	r3, r2, r3
    8080:	str	r3, [fp, #-20]	; 0xffffffec
    8084:	ldr	r2, [fp, #-20]	; 0xffffffec
    8088:	ldr	r3, [fp, #-8]
    808c:	eor	r2, r2, r3
    8090:	ldr	r3, [fp, #-12]
    8094:	eor	r2, r2, r3
    8098:	ldr	r3, [fp, #-40]	; 0xffffffd8
    809c:	add	r2, r2, r3
    80a0:	ldr	r3, [fp, #-16]
    80a4:	add	r2, r2, r3
    80a8:	ldr	r3, [pc, #1264]	; 85a0 <MD5Transform+0x110c>
    80ac:	add	r3, r2, r3
    80b0:	str	r3, [fp, #-16]
    80b4:	ldr	r3, [fp, #-16]
    80b8:	ror	r3, r3, #16
    80bc:	str	r3, [fp, #-16]
    80c0:	ldr	r2, [fp, #-16]
    80c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    80c8:	add	r3, r2, r3
    80cc:	str	r3, [fp, #-16]
    80d0:	ldr	r2, [fp, #-16]
    80d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    80d8:	eor	r2, r2, r3
    80dc:	ldr	r3, [fp, #-8]
    80e0:	eor	r2, r2, r3
    80e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    80e8:	add	r2, r2, r3
    80ec:	ldr	r3, [fp, #-12]
    80f0:	add	r2, r2, r3
    80f4:	ldr	r3, [pc, #1192]	; 85a4 <MD5Transform+0x1110>
    80f8:	add	r3, r2, r3
    80fc:	str	r3, [fp, #-12]
    8100:	ldr	r3, [fp, #-12]
    8104:	ror	r3, r3, #9
    8108:	str	r3, [fp, #-12]
    810c:	ldr	r2, [fp, #-12]
    8110:	ldr	r3, [fp, #-16]
    8114:	add	r3, r2, r3
    8118:	str	r3, [fp, #-12]
    811c:	ldr	r2, [fp, #-12]
    8120:	ldr	r3, [fp, #-16]
    8124:	eor	r2, r2, r3
    8128:	ldr	r3, [fp, #-20]	; 0xffffffec
    812c:	eor	r2, r2, r3
    8130:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8134:	add	r2, r2, r3
    8138:	ldr	r3, [fp, #-8]
    813c:	add	r2, r2, r3
    8140:	ldr	r3, [pc, #1120]	; 85a8 <MD5Transform+0x1114>
    8144:	add	r3, r2, r3
    8148:	str	r3, [fp, #-8]
    814c:	ldr	r3, [fp, #-8]
    8150:	ror	r3, r3, #28
    8154:	str	r3, [fp, #-8]
    8158:	ldr	r2, [fp, #-8]
    815c:	ldr	r3, [fp, #-12]
    8160:	add	r3, r2, r3
    8164:	str	r3, [fp, #-8]
    8168:	ldr	r2, [fp, #-8]
    816c:	ldr	r3, [fp, #-12]
    8170:	eor	r2, r2, r3
    8174:	ldr	r3, [fp, #-16]
    8178:	eor	r2, r2, r3
    817c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8180:	add	r2, r2, r3
    8184:	ldr	r3, [fp, #-20]	; 0xffffffec
    8188:	add	r2, r2, r3
    818c:	ldr	r3, [pc, #1048]	; 85ac <MD5Transform+0x1118>
    8190:	add	r3, r2, r3
    8194:	str	r3, [fp, #-20]	; 0xffffffec
    8198:	ldr	r3, [fp, #-20]	; 0xffffffec
    819c:	ror	r3, r3, #21
    81a0:	str	r3, [fp, #-20]	; 0xffffffec
    81a4:	ldr	r2, [fp, #-20]	; 0xffffffec
    81a8:	ldr	r3, [fp, #-8]
    81ac:	add	r3, r2, r3
    81b0:	str	r3, [fp, #-20]	; 0xffffffec
    81b4:	ldr	r2, [fp, #-20]	; 0xffffffec
    81b8:	ldr	r3, [fp, #-8]
    81bc:	eor	r2, r2, r3
    81c0:	ldr	r3, [fp, #-12]
    81c4:	eor	r2, r2, r3
    81c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    81cc:	add	r2, r2, r3
    81d0:	ldr	r3, [fp, #-16]
    81d4:	add	r2, r2, r3
    81d8:	ldr	r3, [pc, #976]	; 85b0 <MD5Transform+0x111c>
    81dc:	add	r3, r2, r3
    81e0:	str	r3, [fp, #-16]
    81e4:	ldr	r3, [fp, #-16]
    81e8:	ror	r3, r3, #16
    81ec:	str	r3, [fp, #-16]
    81f0:	ldr	r2, [fp, #-16]
    81f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    81f8:	add	r3, r2, r3
    81fc:	str	r3, [fp, #-16]
    8200:	ldr	r2, [fp, #-16]
    8204:	ldr	r3, [fp, #-20]	; 0xffffffec
    8208:	eor	r2, r2, r3
    820c:	ldr	r3, [fp, #-8]
    8210:	eor	r2, r2, r3
    8214:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8218:	add	r2, r2, r3
    821c:	ldr	r3, [fp, #-12]
    8220:	add	r2, r2, r3
    8224:	ldr	r3, [pc, #904]	; 85b4 <MD5Transform+0x1120>
    8228:	add	r3, r2, r3
    822c:	str	r3, [fp, #-12]
    8230:	ldr	r3, [fp, #-12]
    8234:	ror	r3, r3, #9
    8238:	str	r3, [fp, #-12]
    823c:	ldr	r2, [fp, #-12]
    8240:	ldr	r3, [fp, #-16]
    8244:	add	r3, r2, r3
    8248:	str	r3, [fp, #-12]
    824c:	ldr	r2, [fp, #-12]
    8250:	ldr	r3, [fp, #-16]
    8254:	eor	r2, r2, r3
    8258:	ldr	r3, [fp, #-20]	; 0xffffffec
    825c:	eor	r2, r2, r3
    8260:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8264:	add	r2, r2, r3
    8268:	ldr	r3, [fp, #-8]
    826c:	add	r2, r2, r3
    8270:	ldr	r3, [pc, #832]	; 85b8 <MD5Transform+0x1124>
    8274:	add	r3, r2, r3
    8278:	str	r3, [fp, #-8]
    827c:	ldr	r3, [fp, #-8]
    8280:	ror	r3, r3, #28
    8284:	str	r3, [fp, #-8]
    8288:	ldr	r2, [fp, #-8]
    828c:	ldr	r3, [fp, #-12]
    8290:	add	r3, r2, r3
    8294:	str	r3, [fp, #-8]
    8298:	ldr	r2, [fp, #-8]
    829c:	ldr	r3, [fp, #-12]
    82a0:	eor	r2, r2, r3
    82a4:	ldr	r3, [fp, #-16]
    82a8:	eor	r2, r2, r3
    82ac:	ldr	r3, [fp, #-84]	; 0xffffffac
    82b0:	add	r2, r2, r3
    82b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    82b8:	add	r2, r2, r3
    82bc:	ldr	r3, [pc, #760]	; 85bc <MD5Transform+0x1128>
    82c0:	add	r3, r2, r3
    82c4:	str	r3, [fp, #-20]	; 0xffffffec
    82c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    82cc:	ror	r3, r3, #21
    82d0:	str	r3, [fp, #-20]	; 0xffffffec
    82d4:	ldr	r2, [fp, #-20]	; 0xffffffec
    82d8:	ldr	r3, [fp, #-8]
    82dc:	add	r3, r2, r3
    82e0:	str	r3, [fp, #-20]	; 0xffffffec
    82e4:	ldr	r2, [fp, #-20]	; 0xffffffec
    82e8:	ldr	r3, [fp, #-8]
    82ec:	eor	r2, r2, r3
    82f0:	ldr	r3, [fp, #-12]
    82f4:	eor	r2, r2, r3
    82f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    82fc:	add	r2, r2, r3
    8300:	ldr	r3, [fp, #-16]
    8304:	add	r2, r2, r3
    8308:	ldr	r3, [pc, #688]	; 85c0 <MD5Transform+0x112c>
    830c:	add	r3, r2, r3
    8310:	str	r3, [fp, #-16]
    8314:	ldr	r3, [fp, #-16]
    8318:	ror	r3, r3, #16
    831c:	str	r3, [fp, #-16]
    8320:	ldr	r2, [fp, #-16]
    8324:	ldr	r3, [fp, #-20]	; 0xffffffec
    8328:	add	r3, r2, r3
    832c:	str	r3, [fp, #-16]
    8330:	ldr	r2, [fp, #-16]
    8334:	ldr	r3, [fp, #-20]	; 0xffffffec
    8338:	eor	r2, r2, r3
    833c:	ldr	r3, [fp, #-8]
    8340:	eor	r2, r2, r3
    8344:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8348:	add	r2, r2, r3
    834c:	ldr	r3, [fp, #-12]
    8350:	add	r2, r2, r3
    8354:	ldr	r3, [pc, #616]	; 85c4 <MD5Transform+0x1130>
    8358:	add	r3, r2, r3
    835c:	str	r3, [fp, #-12]
    8360:	ldr	r3, [fp, #-12]
    8364:	ror	r3, r3, #9
    8368:	str	r3, [fp, #-12]
    836c:	ldr	r2, [fp, #-12]
    8370:	ldr	r3, [fp, #-16]
    8374:	add	r3, r2, r3
    8378:	str	r3, [fp, #-12]
    837c:	ldr	r2, [fp, #-12]
    8380:	ldr	r3, [fp, #-16]
    8384:	eor	r2, r2, r3
    8388:	ldr	r3, [fp, #-20]	; 0xffffffec
    838c:	eor	r2, r2, r3
    8390:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8394:	add	r2, r2, r3
    8398:	ldr	r3, [fp, #-8]
    839c:	add	r2, r2, r3
    83a0:	ldr	r3, [pc, #544]	; 85c8 <MD5Transform+0x1134>
    83a4:	add	r3, r2, r3
    83a8:	str	r3, [fp, #-8]
    83ac:	ldr	r3, [fp, #-8]
    83b0:	ror	r3, r3, #28
    83b4:	str	r3, [fp, #-8]
    83b8:	ldr	r2, [fp, #-8]
    83bc:	ldr	r3, [fp, #-12]
    83c0:	add	r3, r2, r3
    83c4:	str	r3, [fp, #-8]
    83c8:	ldr	r2, [fp, #-8]
    83cc:	ldr	r3, [fp, #-12]
    83d0:	eor	r2, r2, r3
    83d4:	ldr	r3, [fp, #-16]
    83d8:	eor	r2, r2, r3
    83dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    83e0:	add	r2, r2, r3
    83e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    83e8:	add	r2, r2, r3
    83ec:	ldr	r3, [pc, #472]	; 85cc <MD5Transform+0x1138>
    83f0:	add	r3, r2, r3
    83f4:	str	r3, [fp, #-20]	; 0xffffffec
    83f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    83fc:	ror	r3, r3, #21
    8400:	str	r3, [fp, #-20]	; 0xffffffec
    8404:	ldr	r2, [fp, #-20]	; 0xffffffec
    8408:	ldr	r3, [fp, #-8]
    840c:	add	r3, r2, r3
    8410:	str	r3, [fp, #-20]	; 0xffffffec
    8414:	ldr	r2, [fp, #-20]	; 0xffffffec
    8418:	ldr	r3, [fp, #-8]
    841c:	eor	r2, r2, r3
    8420:	ldr	r3, [fp, #-12]
    8424:	eor	r2, r2, r3
    8428:	ldr	r3, [fp, #-24]	; 0xffffffe8
    842c:	add	r2, r2, r3
    8430:	ldr	r3, [fp, #-16]
    8434:	add	r2, r2, r3
    8438:	ldr	r3, [pc, #400]	; 85d0 <MD5Transform+0x113c>
    843c:	add	r3, r2, r3
    8440:	str	r3, [fp, #-16]
    8444:	ldr	r3, [fp, #-16]
    8448:	ror	r3, r3, #16
    844c:	str	r3, [fp, #-16]
    8450:	ldr	r2, [fp, #-16]
    8454:	ldr	r3, [fp, #-20]	; 0xffffffec
    8458:	add	r3, r2, r3
    845c:	str	r3, [fp, #-16]
    8460:	ldr	r2, [fp, #-16]
    8464:	ldr	r3, [fp, #-20]	; 0xffffffec
    8468:	eor	r2, r2, r3
    846c:	ldr	r3, [fp, #-8]
    8470:	eor	r2, r2, r3
    8474:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8478:	add	r2, r2, r3
    847c:	ldr	r3, [fp, #-12]
    8480:	add	r2, r2, r3
    8484:	ldr	r3, [pc, #328]	; 85d4 <MD5Transform+0x1140>
    8488:	add	r3, r2, r3
    848c:	str	r3, [fp, #-12]
    8490:	ldr	r3, [fp, #-12]
    8494:	ror	r3, r3, #9
    8498:	str	r3, [fp, #-12]
    849c:	ldr	r2, [fp, #-12]
    84a0:	ldr	r3, [fp, #-16]
    84a4:	add	r3, r2, r3
    84a8:	str	r3, [fp, #-12]
    84ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    84b0:	mvn	r2, r3
    84b4:	ldr	r3, [fp, #-12]
    84b8:	orr	r2, r2, r3
    84bc:	ldr	r3, [fp, #-16]
    84c0:	eor	r2, r2, r3
    84c4:	ldr	r3, [fp, #-84]	; 0xffffffac
    84c8:	add	r2, r2, r3
    84cc:	ldr	r3, [fp, #-8]
    84d0:	add	r2, r2, r3
    84d4:	ldr	r3, [pc, #252]	; 85d8 <MD5Transform+0x1144>
    84d8:	add	r3, r2, r3
    84dc:	str	r3, [fp, #-8]
    84e0:	ldr	r3, [fp, #-8]
    84e4:	ror	r3, r3, #26
    84e8:	str	r3, [fp, #-8]
    84ec:	ldr	r2, [fp, #-8]
    84f0:	ldr	r3, [fp, #-12]
    84f4:	add	r3, r2, r3
    84f8:	str	r3, [fp, #-8]
    84fc:	ldr	r3, [fp, #-16]
    8500:	mvn	r2, r3
    8504:	ldr	r3, [fp, #-8]
    8508:	orr	r2, r2, r3
    850c:	ldr	r3, [fp, #-12]
    8510:	eor	r2, r2, r3
    8514:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8518:	b	8618 <MD5Transform+0x1184>
    851c:	.word	0xd76aa478
    8520:	.word	0xe8c7b756
    8524:	.word	0x242070db
    8528:	.word	0xc1bdceee
    852c:	.word	0xf57c0faf
    8530:	.word	0x4787c62a
    8534:	.word	0xa8304613
    8538:	.word	0xfd469501
    853c:	.word	0x698098d8
    8540:	.word	0x8b44f7af
    8544:	.word	0x895cd7be
    8548:	.word	0x6b901122
    854c:	.word	0xfd987193
    8550:	.word	0xa679438e
    8554:	.word	0x49b40821
    8558:	.word	0xf61e2562
    855c:	.word	0xc040b340
    8560:	.word	0x265e5a51
    8564:	.word	0xe9b6c7aa
    8568:	.word	0xd62f105d
    856c:	.word	0x02441453
    8570:	.word	0xd8a1e681
    8574:	.word	0xe7d3fbc8
    8578:	.word	0x21e1cde6
    857c:	.word	0xc33707d6
    8580:	.word	0xf4d50d87
    8584:	.word	0x455a14ed
    8588:	.word	0xa9e3e905
    858c:	.word	0xfcefa3f8
    8590:	.word	0x676f02d9
    8594:	.word	0x8d2a4c8a
    8598:	.word	0xfffa3942
    859c:	.word	0x8771f681
    85a0:	.word	0x6d9d6122
    85a4:	.word	0xfde5380c
    85a8:	.word	0xa4beea44
    85ac:	.word	0x4bdecfa9
    85b0:	.word	0xf6bb4b60
    85b4:	.word	0xbebfbc70
    85b8:	.word	0x289b7ec6
    85bc:	.word	0xeaa127fa
    85c0:	.word	0xd4ef3085
    85c4:	.word	0x04881d05
    85c8:	.word	0xd9d4d039
    85cc:	.word	0xe6db99e5
    85d0:	.word	0x1fa27cf8
    85d4:	.word	0xc4ac5665
    85d8:	.word	0xf4292244
    85dc:	.word	0x432aff97
    85e0:	.word	0xab9423a7
    85e4:	.word	0xfc93a039
    85e8:	.word	0x655b59c3
    85ec:	.word	0x8f0ccc92
    85f0:	.word	0xffeff47d
    85f4:	.word	0x85845dd1
    85f8:	.word	0x6fa87e4f
    85fc:	.word	0xfe2ce6e0
    8600:	.word	0xa3014314
    8604:	.word	0x4e0811a1
    8608:	.word	0xf7537e82
    860c:	.word	0xbd3af235
    8610:	.word	0x2ad7d2bb
    8614:	.word	0xeb86d391
    8618:	add	r2, r2, r3
    861c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8620:	add	r2, r2, r3
    8624:	ldr	r3, [pc, #-80]	; 85dc <MD5Transform+0x1148>
    8628:	add	r3, r2, r3
    862c:	str	r3, [fp, #-20]	; 0xffffffec
    8630:	ldr	r3, [fp, #-20]	; 0xffffffec
    8634:	ror	r3, r3, #22
    8638:	str	r3, [fp, #-20]	; 0xffffffec
    863c:	ldr	r2, [fp, #-20]	; 0xffffffec
    8640:	ldr	r3, [fp, #-8]
    8644:	add	r3, r2, r3
    8648:	str	r3, [fp, #-20]	; 0xffffffec
    864c:	ldr	r3, [fp, #-12]
    8650:	mvn	r2, r3
    8654:	ldr	r3, [fp, #-20]	; 0xffffffec
    8658:	orr	r2, r2, r3
    865c:	ldr	r3, [fp, #-8]
    8660:	eor	r2, r2, r3
    8664:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8668:	add	r2, r2, r3
    866c:	ldr	r3, [fp, #-16]
    8670:	add	r2, r2, r3
    8674:	ldr	r3, [pc, #-156]	; 85e0 <MD5Transform+0x114c>
    8678:	add	r3, r2, r3
    867c:	str	r3, [fp, #-16]
    8680:	ldr	r3, [fp, #-16]
    8684:	ror	r3, r3, #17
    8688:	str	r3, [fp, #-16]
    868c:	ldr	r2, [fp, #-16]
    8690:	ldr	r3, [fp, #-20]	; 0xffffffec
    8694:	add	r3, r2, r3
    8698:	str	r3, [fp, #-16]
    869c:	ldr	r3, [fp, #-8]
    86a0:	mvn	r2, r3
    86a4:	ldr	r3, [fp, #-16]
    86a8:	orr	r2, r2, r3
    86ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    86b0:	eor	r2, r2, r3
    86b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    86b8:	add	r2, r2, r3
    86bc:	ldr	r3, [fp, #-12]
    86c0:	add	r2, r2, r3
    86c4:	ldr	r3, [pc, #-232]	; 85e4 <MD5Transform+0x1150>
    86c8:	add	r3, r2, r3
    86cc:	str	r3, [fp, #-12]
    86d0:	ldr	r3, [fp, #-12]
    86d4:	ror	r3, r3, #11
    86d8:	str	r3, [fp, #-12]
    86dc:	ldr	r2, [fp, #-12]
    86e0:	ldr	r3, [fp, #-16]
    86e4:	add	r3, r2, r3
    86e8:	str	r3, [fp, #-12]
    86ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    86f0:	mvn	r2, r3
    86f4:	ldr	r3, [fp, #-12]
    86f8:	orr	r2, r2, r3
    86fc:	ldr	r3, [fp, #-16]
    8700:	eor	r2, r2, r3
    8704:	ldr	r3, [fp, #-36]	; 0xffffffdc
    8708:	add	r2, r2, r3
    870c:	ldr	r3, [fp, #-8]
    8710:	add	r2, r2, r3
    8714:	ldr	r3, [pc, #-308]	; 85e8 <MD5Transform+0x1154>
    8718:	add	r3, r2, r3
    871c:	str	r3, [fp, #-8]
    8720:	ldr	r3, [fp, #-8]
    8724:	ror	r3, r3, #26
    8728:	str	r3, [fp, #-8]
    872c:	ldr	r2, [fp, #-8]
    8730:	ldr	r3, [fp, #-12]
    8734:	add	r3, r2, r3
    8738:	str	r3, [fp, #-8]
    873c:	ldr	r3, [fp, #-16]
    8740:	mvn	r2, r3
    8744:	ldr	r3, [fp, #-8]
    8748:	orr	r2, r2, r3
    874c:	ldr	r3, [fp, #-12]
    8750:	eor	r2, r2, r3
    8754:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8758:	add	r2, r2, r3
    875c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8760:	add	r2, r2, r3
    8764:	ldr	r3, [pc, #-384]	; 85ec <MD5Transform+0x1158>
    8768:	add	r3, r2, r3
    876c:	str	r3, [fp, #-20]	; 0xffffffec
    8770:	ldr	r3, [fp, #-20]	; 0xffffffec
    8774:	ror	r3, r3, #22
    8778:	str	r3, [fp, #-20]	; 0xffffffec
    877c:	ldr	r2, [fp, #-20]	; 0xffffffec
    8780:	ldr	r3, [fp, #-8]
    8784:	add	r3, r2, r3
    8788:	str	r3, [fp, #-20]	; 0xffffffec
    878c:	ldr	r3, [fp, #-12]
    8790:	mvn	r2, r3
    8794:	ldr	r3, [fp, #-20]	; 0xffffffec
    8798:	orr	r2, r2, r3
    879c:	ldr	r3, [fp, #-8]
    87a0:	eor	r2, r2, r3
    87a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    87a8:	add	r2, r2, r3
    87ac:	ldr	r3, [fp, #-16]
    87b0:	add	r2, r2, r3
    87b4:	ldr	r3, [pc, #-460]	; 85f0 <MD5Transform+0x115c>
    87b8:	add	r3, r2, r3
    87bc:	str	r3, [fp, #-16]
    87c0:	ldr	r3, [fp, #-16]
    87c4:	ror	r3, r3, #17
    87c8:	str	r3, [fp, #-16]
    87cc:	ldr	r2, [fp, #-16]
    87d0:	ldr	r3, [fp, #-20]	; 0xffffffec
    87d4:	add	r3, r2, r3
    87d8:	str	r3, [fp, #-16]
    87dc:	ldr	r3, [fp, #-8]
    87e0:	mvn	r2, r3
    87e4:	ldr	r3, [fp, #-16]
    87e8:	orr	r2, r2, r3
    87ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    87f0:	eor	r2, r2, r3
    87f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
    87f8:	add	r2, r2, r3
    87fc:	ldr	r3, [fp, #-12]
    8800:	add	r2, r2, r3
    8804:	ldr	r3, [pc, #-536]	; 85f4 <MD5Transform+0x1160>
    8808:	add	r3, r2, r3
    880c:	str	r3, [fp, #-12]
    8810:	ldr	r3, [fp, #-12]
    8814:	ror	r3, r3, #11
    8818:	str	r3, [fp, #-12]
    881c:	ldr	r2, [fp, #-12]
    8820:	ldr	r3, [fp, #-16]
    8824:	add	r3, r2, r3
    8828:	str	r3, [fp, #-12]
    882c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8830:	mvn	r2, r3
    8834:	ldr	r3, [fp, #-12]
    8838:	orr	r2, r2, r3
    883c:	ldr	r3, [fp, #-16]
    8840:	eor	r2, r2, r3
    8844:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8848:	add	r2, r2, r3
    884c:	ldr	r3, [fp, #-8]
    8850:	add	r2, r2, r3
    8854:	ldr	r3, [pc, #-612]	; 85f8 <MD5Transform+0x1164>
    8858:	add	r3, r2, r3
    885c:	str	r3, [fp, #-8]
    8860:	ldr	r3, [fp, #-8]
    8864:	ror	r3, r3, #26
    8868:	str	r3, [fp, #-8]
    886c:	ldr	r2, [fp, #-8]
    8870:	ldr	r3, [fp, #-12]
    8874:	add	r3, r2, r3
    8878:	str	r3, [fp, #-8]
    887c:	ldr	r3, [fp, #-16]
    8880:	mvn	r2, r3
    8884:	ldr	r3, [fp, #-8]
    8888:	orr	r2, r2, r3
    888c:	ldr	r3, [fp, #-12]
    8890:	eor	r2, r2, r3
    8894:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8898:	add	r2, r2, r3
    889c:	ldr	r3, [fp, #-20]	; 0xffffffec
    88a0:	add	r2, r2, r3
    88a4:	ldr	r3, [pc, #-688]	; 85fc <MD5Transform+0x1168>
    88a8:	add	r3, r2, r3
    88ac:	str	r3, [fp, #-20]	; 0xffffffec
    88b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    88b4:	ror	r3, r3, #22
    88b8:	str	r3, [fp, #-20]	; 0xffffffec
    88bc:	ldr	r2, [fp, #-20]	; 0xffffffec
    88c0:	ldr	r3, [fp, #-8]
    88c4:	add	r3, r2, r3
    88c8:	str	r3, [fp, #-20]	; 0xffffffec
    88cc:	ldr	r3, [fp, #-12]
    88d0:	mvn	r2, r3
    88d4:	ldr	r3, [fp, #-20]	; 0xffffffec
    88d8:	orr	r2, r2, r3
    88dc:	ldr	r3, [fp, #-8]
    88e0:	eor	r2, r2, r3
    88e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    88e8:	add	r2, r2, r3
    88ec:	ldr	r3, [fp, #-16]
    88f0:	add	r2, r2, r3
    88f4:	ldr	r3, [pc, #-764]	; 8600 <MD5Transform+0x116c>
    88f8:	add	r3, r2, r3
    88fc:	str	r3, [fp, #-16]
    8900:	ldr	r3, [fp, #-16]
    8904:	ror	r3, r3, #17
    8908:	str	r3, [fp, #-16]
    890c:	ldr	r2, [fp, #-16]
    8910:	ldr	r3, [fp, #-20]	; 0xffffffec
    8914:	add	r3, r2, r3
    8918:	str	r3, [fp, #-16]
    891c:	ldr	r3, [fp, #-8]
    8920:	mvn	r2, r3
    8924:	ldr	r3, [fp, #-16]
    8928:	orr	r2, r2, r3
    892c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8930:	eor	r2, r2, r3
    8934:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8938:	add	r2, r2, r3
    893c:	ldr	r3, [fp, #-12]
    8940:	add	r2, r2, r3
    8944:	ldr	r3, [pc, #-840]	; 8604 <MD5Transform+0x1170>
    8948:	add	r3, r2, r3
    894c:	str	r3, [fp, #-12]
    8950:	ldr	r3, [fp, #-12]
    8954:	ror	r3, r3, #11
    8958:	str	r3, [fp, #-12]
    895c:	ldr	r2, [fp, #-12]
    8960:	ldr	r3, [fp, #-16]
    8964:	add	r3, r2, r3
    8968:	str	r3, [fp, #-12]
    896c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8970:	mvn	r2, r3
    8974:	ldr	r3, [fp, #-12]
    8978:	orr	r2, r2, r3
    897c:	ldr	r3, [fp, #-16]
    8980:	eor	r2, r2, r3
    8984:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8988:	add	r2, r2, r3
    898c:	ldr	r3, [fp, #-8]
    8990:	add	r2, r2, r3
    8994:	ldr	r3, [pc, #-916]	; 8608 <MD5Transform+0x1174>
    8998:	add	r3, r2, r3
    899c:	str	r3, [fp, #-8]
    89a0:	ldr	r3, [fp, #-8]
    89a4:	ror	r3, r3, #26
    89a8:	str	r3, [fp, #-8]
    89ac:	ldr	r2, [fp, #-8]
    89b0:	ldr	r3, [fp, #-12]
    89b4:	add	r3, r2, r3
    89b8:	str	r3, [fp, #-8]
    89bc:	ldr	r3, [fp, #-16]
    89c0:	mvn	r2, r3
    89c4:	ldr	r3, [fp, #-8]
    89c8:	orr	r2, r2, r3
    89cc:	ldr	r3, [fp, #-12]
    89d0:	eor	r2, r2, r3
    89d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    89d8:	add	r2, r2, r3
    89dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    89e0:	add	r2, r2, r3
    89e4:	ldr	r3, [pc, #-992]	; 860c <MD5Transform+0x1178>
    89e8:	add	r3, r2, r3
    89ec:	str	r3, [fp, #-20]	; 0xffffffec
    89f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    89f4:	ror	r3, r3, #22
    89f8:	str	r3, [fp, #-20]	; 0xffffffec
    89fc:	ldr	r2, [fp, #-20]	; 0xffffffec
    8a00:	ldr	r3, [fp, #-8]
    8a04:	add	r3, r2, r3
    8a08:	str	r3, [fp, #-20]	; 0xffffffec
    8a0c:	ldr	r3, [fp, #-12]
    8a10:	mvn	r2, r3
    8a14:	ldr	r3, [fp, #-20]	; 0xffffffec
    8a18:	orr	r2, r2, r3
    8a1c:	ldr	r3, [fp, #-8]
    8a20:	eor	r2, r2, r3
    8a24:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8a28:	add	r2, r2, r3
    8a2c:	ldr	r3, [fp, #-16]
    8a30:	add	r2, r2, r3
    8a34:	ldr	r3, [pc, #-1068]	; 8610 <MD5Transform+0x117c>
    8a38:	add	r3, r2, r3
    8a3c:	str	r3, [fp, #-16]
    8a40:	ldr	r3, [fp, #-16]
    8a44:	ror	r3, r3, #17
    8a48:	str	r3, [fp, #-16]
    8a4c:	ldr	r2, [fp, #-16]
    8a50:	ldr	r3, [fp, #-20]	; 0xffffffec
    8a54:	add	r3, r2, r3
    8a58:	str	r3, [fp, #-16]
    8a5c:	ldr	r3, [fp, #-8]
    8a60:	mvn	r2, r3
    8a64:	ldr	r3, [fp, #-16]
    8a68:	orr	r2, r2, r3
    8a6c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8a70:	eor	r2, r2, r3
    8a74:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8a78:	add	r2, r2, r3
    8a7c:	ldr	r3, [fp, #-12]
    8a80:	add	r2, r2, r3
    8a84:	ldr	r3, [pc, #-1144]	; 8614 <MD5Transform+0x1180>
    8a88:	add	r3, r2, r3
    8a8c:	str	r3, [fp, #-12]
    8a90:	ldr	r3, [fp, #-12]
    8a94:	ror	r3, r3, #11
    8a98:	str	r3, [fp, #-12]
    8a9c:	ldr	r2, [fp, #-12]
    8aa0:	ldr	r3, [fp, #-16]
    8aa4:	add	r3, r2, r3
    8aa8:	str	r3, [fp, #-12]
    8aac:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8ab0:	ldr	r2, [r3]
    8ab4:	ldr	r3, [fp, #-8]
    8ab8:	add	r2, r2, r3
    8abc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8ac0:	str	r2, [r3]
    8ac4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8ac8:	add	r3, r3, #4
    8acc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8ad0:	add	r2, r2, #4
    8ad4:	ldr	r1, [r2]
    8ad8:	ldr	r2, [fp, #-12]
    8adc:	add	r2, r1, r2
    8ae0:	str	r2, [r3]
    8ae4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8ae8:	add	r3, r3, #8
    8aec:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8af0:	add	r2, r2, #8
    8af4:	ldr	r1, [r2]
    8af8:	ldr	r2, [fp, #-16]
    8afc:	add	r2, r1, r2
    8b00:	str	r2, [r3]
    8b04:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b08:	add	r3, r3, #12
    8b0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8b10:	add	r2, r2, #12
    8b14:	ldr	r1, [r2]
    8b18:	ldr	r2, [fp, #-20]	; 0xffffffec
    8b1c:	add	r2, r1, r2
    8b20:	str	r2, [r3]
    8b24:	sub	r3, fp, #84	; 0x54
    8b28:	mov	r2, #64	; 0x40
    8b2c:	mov	r1, #0
    8b30:	mov	r0, r3
    8b34:	bl	4694 <memset@plt>
    8b38:	nop			; (mov r0, r0)
    8b3c:	sub	sp, fp, #4
    8b40:	pop	{fp, pc}

00008b44 <rb_md5_crypt>:
    8b44:	push	{r4, r5, fp, lr}
    8b48:	add	fp, sp, #12
    8b4c:	sub	sp, sp, #216	; 0xd8
    8b50:	str	r0, [fp, #-224]	; 0xffffff20
    8b54:	str	r1, [fp, #-228]	; 0xffffff1c
    8b58:	ldr	r3, [pc, #1832]	; 9288 <rb_md5_crypt+0x744>
    8b5c:	add	r3, pc, r3
    8b60:	ldr	r2, [fp, #-228]	; 0xffffff1c
    8b64:	str	r2, [r3]
    8b68:	ldr	r3, [pc, #1820]	; 928c <rb_md5_crypt+0x748>
    8b6c:	add	r3, pc, r3
    8b70:	ldr	r4, [r3]
    8b74:	ldr	r3, [pc, #1812]	; 9290 <rb_md5_crypt+0x74c>
    8b78:	add	r3, pc, r3
    8b7c:	ldr	r5, [r3]
    8b80:	ldr	r3, [pc, #1804]	; 9294 <rb_md5_crypt+0x750>
    8b84:	add	r3, pc, r3
    8b88:	ldr	r3, [r3]
    8b8c:	mov	r0, r3
    8b90:	bl	485c <strlen@plt>
    8b94:	mov	r3, r0
    8b98:	mov	r2, r3
    8b9c:	mov	r1, r5
    8ba0:	mov	r0, r4
    8ba4:	bl	4c94 <strncmp@plt>
    8ba8:	mov	r3, r0
    8bac:	cmp	r3, #0
    8bb0:	bne	8be8 <rb_md5_crypt+0xa4>
    8bb4:	ldr	r3, [pc, #1756]	; 9298 <rb_md5_crypt+0x754>
    8bb8:	add	r3, pc, r3
    8bbc:	ldr	r4, [r3]
    8bc0:	ldr	r3, [pc, #1748]	; 929c <rb_md5_crypt+0x758>
    8bc4:	add	r3, pc, r3
    8bc8:	ldr	r3, [r3]
    8bcc:	mov	r0, r3
    8bd0:	bl	485c <strlen@plt>
    8bd4:	mov	r3, r0
    8bd8:	add	r2, r4, r3
    8bdc:	ldr	r3, [pc, #1724]	; 92a0 <rb_md5_crypt+0x75c>
    8be0:	add	r3, pc, r3
    8be4:	str	r2, [r3]
    8be8:	ldr	r3, [pc, #1716]	; 92a4 <rb_md5_crypt+0x760>
    8bec:	add	r3, pc, r3
    8bf0:	ldr	r2, [r3]
    8bf4:	ldr	r3, [pc, #1708]	; 92a8 <rb_md5_crypt+0x764>
    8bf8:	add	r3, pc, r3
    8bfc:	str	r2, [r3]
    8c00:	b	8c20 <rb_md5_crypt+0xdc>
    8c04:	ldr	r3, [pc, #1696]	; 92ac <rb_md5_crypt+0x768>
    8c08:	add	r3, pc, r3
    8c0c:	ldr	r3, [r3]
    8c10:	add	r2, r3, #1
    8c14:	ldr	r3, [pc, #1684]	; 92b0 <rb_md5_crypt+0x76c>
    8c18:	add	r3, pc, r3
    8c1c:	str	r2, [r3]
    8c20:	ldr	r3, [pc, #1676]	; 92b4 <rb_md5_crypt+0x770>
    8c24:	add	r3, pc, r3
    8c28:	ldr	r3, [r3]
    8c2c:	ldrb	r3, [r3]
    8c30:	cmp	r3, #0
    8c34:	beq	8c74 <rb_md5_crypt+0x130>
    8c38:	ldr	r3, [pc, #1656]	; 92b8 <rb_md5_crypt+0x774>
    8c3c:	add	r3, pc, r3
    8c40:	ldr	r3, [r3]
    8c44:	ldrb	r3, [r3]
    8c48:	cmp	r3, #36	; 0x24
    8c4c:	beq	8c74 <rb_md5_crypt+0x130>
    8c50:	ldr	r3, [pc, #1636]	; 92bc <rb_md5_crypt+0x778>
    8c54:	add	r3, pc, r3
    8c58:	ldr	r3, [r3]
    8c5c:	add	r2, r3, #8
    8c60:	ldr	r3, [pc, #1624]	; 92c0 <rb_md5_crypt+0x77c>
    8c64:	add	r3, pc, r3
    8c68:	ldr	r3, [r3]
    8c6c:	cmp	r2, r3
    8c70:	bhi	8c04 <rb_md5_crypt+0xc0>
    8c74:	ldr	r3, [pc, #1608]	; 92c4 <rb_md5_crypt+0x780>
    8c78:	add	r3, pc, r3
    8c7c:	ldr	r3, [r3]
    8c80:	mov	r2, r3
    8c84:	ldr	r3, [pc, #1596]	; 92c8 <rb_md5_crypt+0x784>
    8c88:	add	r3, pc, r3
    8c8c:	ldr	r3, [r3]
    8c90:	sub	r3, r2, r3
    8c94:	str	r3, [fp, #-24]	; 0xffffffe8
    8c98:	sub	r3, fp, #116	; 0x74
    8c9c:	mov	r0, r3
    8ca0:	bl	71b0 <MD5Init>
    8ca4:	ldr	r0, [fp, #-224]	; 0xffffff20
    8ca8:	bl	485c <strlen@plt>
    8cac:	mov	r2, r0
    8cb0:	sub	r3, fp, #116	; 0x74
    8cb4:	ldr	r1, [fp, #-224]	; 0xffffff20
    8cb8:	mov	r0, r3
    8cbc:	bl	722c <MD5Update>
    8cc0:	ldr	r3, [pc, #1540]	; 92cc <rb_md5_crypt+0x788>
    8cc4:	add	r3, pc, r3
    8cc8:	ldr	r4, [r3]
    8ccc:	ldr	r3, [pc, #1532]	; 92d0 <rb_md5_crypt+0x78c>
    8cd0:	add	r3, pc, r3
    8cd4:	ldr	r3, [r3]
    8cd8:	mov	r0, r3
    8cdc:	bl	485c <strlen@plt>
    8ce0:	mov	r2, r0
    8ce4:	sub	r3, fp, #116	; 0x74
    8ce8:	mov	r1, r4
    8cec:	mov	r0, r3
    8cf0:	bl	722c <MD5Update>
    8cf4:	ldr	r3, [pc, #1496]	; 92d4 <rb_md5_crypt+0x790>
    8cf8:	add	r3, pc, r3
    8cfc:	ldr	r1, [r3]
    8d00:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8d04:	sub	r3, fp, #116	; 0x74
    8d08:	mov	r0, r3
    8d0c:	bl	722c <MD5Update>
    8d10:	sub	r3, fp, #204	; 0xcc
    8d14:	mov	r0, r3
    8d18:	bl	71b0 <MD5Init>
    8d1c:	ldr	r0, [fp, #-224]	; 0xffffff20
    8d20:	bl	485c <strlen@plt>
    8d24:	mov	r2, r0
    8d28:	sub	r3, fp, #204	; 0xcc
    8d2c:	ldr	r1, [fp, #-224]	; 0xffffff20
    8d30:	mov	r0, r3
    8d34:	bl	722c <MD5Update>
    8d38:	ldr	r3, [pc, #1432]	; 92d8 <rb_md5_crypt+0x794>
    8d3c:	add	r3, pc, r3
    8d40:	ldr	r1, [r3]
    8d44:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8d48:	sub	r3, fp, #204	; 0xcc
    8d4c:	mov	r0, r3
    8d50:	bl	722c <MD5Update>
    8d54:	ldr	r0, [fp, #-224]	; 0xffffff20
    8d58:	bl	485c <strlen@plt>
    8d5c:	mov	r2, r0
    8d60:	sub	r3, fp, #204	; 0xcc
    8d64:	ldr	r1, [fp, #-224]	; 0xffffff20
    8d68:	mov	r0, r3
    8d6c:	bl	722c <MD5Update>
    8d70:	sub	r2, fp, #204	; 0xcc
    8d74:	sub	r3, fp, #220	; 0xdc
    8d78:	mov	r1, r2
    8d7c:	mov	r0, r3
    8d80:	bl	7448 <MD5Final>
    8d84:	ldr	r0, [fp, #-224]	; 0xffffff20
    8d88:	bl	485c <strlen@plt>
    8d8c:	mov	r3, r0
    8d90:	str	r3, [fp, #-16]
    8d94:	b	8dc8 <rb_md5_crypt+0x284>
    8d98:	ldr	r3, [fp, #-16]
    8d9c:	cmp	r3, #16
    8da0:	movlt	r3, r3
    8da4:	movge	r3, #16
    8da8:	mov	r2, r3
    8dac:	sub	r1, fp, #220	; 0xdc
    8db0:	sub	r3, fp, #116	; 0x74
    8db4:	mov	r0, r3
    8db8:	bl	722c <MD5Update>
    8dbc:	ldr	r3, [fp, #-16]
    8dc0:	sub	r3, r3, #16
    8dc4:	str	r3, [fp, #-16]
    8dc8:	ldr	r3, [fp, #-16]
    8dcc:	cmp	r3, #0
    8dd0:	bgt	8d98 <rb_md5_crypt+0x254>
    8dd4:	sub	r3, fp, #220	; 0xdc
    8dd8:	mov	r2, #16
    8ddc:	mov	r1, #0
    8de0:	mov	r0, r3
    8de4:	bl	4694 <memset@plt>
    8de8:	ldr	r0, [fp, #-224]	; 0xffffff20
    8dec:	bl	485c <strlen@plt>
    8df0:	str	r0, [fp, #-20]	; 0xffffffec
    8df4:	b	8e40 <rb_md5_crypt+0x2fc>
    8df8:	ldr	r3, [fp, #-20]	; 0xffffffec
    8dfc:	and	r3, r3, #1
    8e00:	cmp	r3, #0
    8e04:	beq	8e20 <rb_md5_crypt+0x2dc>
    8e08:	sub	r1, fp, #220	; 0xdc
    8e0c:	sub	r3, fp, #116	; 0x74
    8e10:	mov	r2, #1
    8e14:	mov	r0, r3
    8e18:	bl	722c <MD5Update>
    8e1c:	b	8e34 <rb_md5_crypt+0x2f0>
    8e20:	sub	r3, fp, #116	; 0x74
    8e24:	mov	r2, #1
    8e28:	ldr	r1, [fp, #-224]	; 0xffffff20
    8e2c:	mov	r0, r3
    8e30:	bl	722c <MD5Update>
    8e34:	ldr	r3, [fp, #-20]	; 0xffffffec
    8e38:	lsr	r3, r3, #1
    8e3c:	str	r3, [fp, #-20]	; 0xffffffec
    8e40:	ldr	r3, [fp, #-20]	; 0xffffffec
    8e44:	cmp	r3, #0
    8e48:	bne	8df8 <rb_md5_crypt+0x2b4>
    8e4c:	ldr	r3, [pc, #1160]	; 92dc <rb_md5_crypt+0x798>
    8e50:	add	r3, pc, r3
    8e54:	ldr	r3, [r3]
    8e58:	mov	r2, #120	; 0x78
    8e5c:	mov	r1, r3
    8e60:	ldr	r3, [pc, #1144]	; 92e0 <rb_md5_crypt+0x79c>
    8e64:	add	r3, pc, r3
    8e68:	mov	r0, r3
    8e6c:	bl	470c <rb_strlcpy@plt>
    8e70:	ldr	r3, [pc, #1132]	; 92e4 <rb_md5_crypt+0x7a0>
    8e74:	add	r3, pc, r3
    8e78:	ldr	r3, [r3]
    8e7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8e80:	mov	r1, r3
    8e84:	ldr	r3, [pc, #1116]	; 92e8 <rb_md5_crypt+0x7a4>
    8e88:	add	r3, pc, r3
    8e8c:	mov	r0, r3
    8e90:	bl	4928 <strncat@plt>
    8e94:	mov	r2, #120	; 0x78
    8e98:	ldr	r3, [pc, #1100]	; 92ec <rb_md5_crypt+0x7a8>
    8e9c:	add	r3, pc, r3
    8ea0:	mov	r1, r3
    8ea4:	ldr	r3, [pc, #1092]	; 92f0 <rb_md5_crypt+0x7ac>
    8ea8:	add	r3, pc, r3
    8eac:	mov	r0, r3
    8eb0:	bl	4c10 <rb_strlcat@plt>
    8eb4:	sub	r2, fp, #116	; 0x74
    8eb8:	sub	r3, fp, #220	; 0xdc
    8ebc:	mov	r1, r2
    8ec0:	mov	r0, r3
    8ec4:	bl	7448 <MD5Final>
    8ec8:	mov	r3, #0
    8ecc:	str	r3, [fp, #-20]	; 0xffffffec
    8ed0:	b	901c <rb_md5_crypt+0x4d8>
    8ed4:	sub	r3, fp, #204	; 0xcc
    8ed8:	mov	r0, r3
    8edc:	bl	71b0 <MD5Init>
    8ee0:	ldr	r3, [fp, #-20]	; 0xffffffec
    8ee4:	and	r3, r3, #1
    8ee8:	cmp	r3, #0
    8eec:	beq	8f10 <rb_md5_crypt+0x3cc>
    8ef0:	ldr	r0, [fp, #-224]	; 0xffffff20
    8ef4:	bl	485c <strlen@plt>
    8ef8:	mov	r2, r0
    8efc:	sub	r3, fp, #204	; 0xcc
    8f00:	ldr	r1, [fp, #-224]	; 0xffffff20
    8f04:	mov	r0, r3
    8f08:	bl	722c <MD5Update>
    8f0c:	b	8f24 <rb_md5_crypt+0x3e0>
    8f10:	sub	r1, fp, #220	; 0xdc
    8f14:	sub	r3, fp, #204	; 0xcc
    8f18:	mov	r2, #16
    8f1c:	mov	r0, r3
    8f20:	bl	722c <MD5Update>
    8f24:	ldr	r1, [fp, #-20]	; 0xffffffec
    8f28:	ldr	r3, [pc, #964]	; 92f4 <rb_md5_crypt+0x7b0>
    8f2c:	umull	r2, r3, r3, r1
    8f30:	lsr	r2, r3, #1
    8f34:	mov	r3, r2
    8f38:	lsl	r3, r3, #1
    8f3c:	add	r3, r3, r2
    8f40:	sub	r2, r1, r3
    8f44:	cmp	r2, #0
    8f48:	beq	8f68 <rb_md5_crypt+0x424>
    8f4c:	ldr	r3, [pc, #932]	; 92f8 <rb_md5_crypt+0x7b4>
    8f50:	add	r3, pc, r3
    8f54:	ldr	r1, [r3]
    8f58:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8f5c:	sub	r3, fp, #204	; 0xcc
    8f60:	mov	r0, r3
    8f64:	bl	722c <MD5Update>
    8f68:	ldr	r1, [fp, #-20]	; 0xffffffec
    8f6c:	ldr	r3, [pc, #904]	; 92fc <rb_md5_crypt+0x7b8>
    8f70:	umull	r2, r3, r3, r1
    8f74:	sub	r2, r1, r3
    8f78:	lsr	r2, r2, #1
    8f7c:	add	r3, r3, r2
    8f80:	lsr	r2, r3, #2
    8f84:	mov	r3, r2
    8f88:	lsl	r3, r3, #3
    8f8c:	sub	r3, r3, r2
    8f90:	sub	r2, r1, r3
    8f94:	cmp	r2, #0
    8f98:	beq	8fb8 <rb_md5_crypt+0x474>
    8f9c:	ldr	r0, [fp, #-224]	; 0xffffff20
    8fa0:	bl	485c <strlen@plt>
    8fa4:	mov	r2, r0
    8fa8:	sub	r3, fp, #204	; 0xcc
    8fac:	ldr	r1, [fp, #-224]	; 0xffffff20
    8fb0:	mov	r0, r3
    8fb4:	bl	722c <MD5Update>
    8fb8:	ldr	r3, [fp, #-20]	; 0xffffffec
    8fbc:	and	r3, r3, #1
    8fc0:	cmp	r3, #0
    8fc4:	beq	8fe0 <rb_md5_crypt+0x49c>
    8fc8:	sub	r1, fp, #220	; 0xdc
    8fcc:	sub	r3, fp, #204	; 0xcc
    8fd0:	mov	r2, #16
    8fd4:	mov	r0, r3
    8fd8:	bl	722c <MD5Update>
    8fdc:	b	8ffc <rb_md5_crypt+0x4b8>
    8fe0:	ldr	r0, [fp, #-224]	; 0xffffff20
    8fe4:	bl	485c <strlen@plt>
    8fe8:	mov	r2, r0
    8fec:	sub	r3, fp, #204	; 0xcc
    8ff0:	ldr	r1, [fp, #-224]	; 0xffffff20
    8ff4:	mov	r0, r3
    8ff8:	bl	722c <MD5Update>
    8ffc:	sub	r2, fp, #204	; 0xcc
    9000:	sub	r3, fp, #220	; 0xdc
    9004:	mov	r1, r2
    9008:	mov	r0, r3
    900c:	bl	7448 <MD5Final>
    9010:	ldr	r3, [fp, #-20]	; 0xffffffec
    9014:	add	r3, r3, #1
    9018:	str	r3, [fp, #-20]	; 0xffffffec
    901c:	ldr	r3, [fp, #-20]	; 0xffffffec
    9020:	cmp	r3, #1000	; 0x3e8
    9024:	bcc	8ed4 <rb_md5_crypt+0x390>
    9028:	ldr	r3, [pc, #720]	; 9300 <rb_md5_crypt+0x7bc>
    902c:	add	r3, pc, r3
    9030:	mov	r0, r3
    9034:	bl	485c <strlen@plt>
    9038:	mov	r2, r0
    903c:	ldr	r3, [pc, #704]	; 9304 <rb_md5_crypt+0x7c0>
    9040:	add	r3, pc, r3
    9044:	add	r2, r2, r3
    9048:	ldr	r3, [pc, #696]	; 9308 <rb_md5_crypt+0x7c4>
    904c:	add	r3, pc, r3
    9050:	str	r2, [r3]
    9054:	ldrb	r3, [fp, #-220]	; 0xffffff24
    9058:	lsl	r2, r3, #16
    905c:	ldrb	r3, [fp, #-214]	; 0xffffff2a
    9060:	lsl	r3, r3, #8
    9064:	orr	r3, r2, r3
    9068:	ldrb	r2, [fp, #-208]	; 0xffffff30
    906c:	orr	r3, r3, r2
    9070:	str	r3, [fp, #-28]	; 0xffffffe4
    9074:	ldr	r3, [pc, #656]	; 930c <rb_md5_crypt+0x7c8>
    9078:	add	r3, pc, r3
    907c:	ldr	r3, [r3]
    9080:	mov	r2, #4
    9084:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9088:	mov	r0, r3
    908c:	bl	7138 <_crypt_to64>
    9090:	ldr	r3, [pc, #632]	; 9310 <rb_md5_crypt+0x7cc>
    9094:	add	r3, pc, r3
    9098:	ldr	r3, [r3]
    909c:	add	r2, r3, #4
    90a0:	ldr	r3, [pc, #620]	; 9314 <rb_md5_crypt+0x7d0>
    90a4:	add	r3, pc, r3
    90a8:	str	r2, [r3]
    90ac:	ldrb	r3, [fp, #-219]	; 0xffffff25
    90b0:	lsl	r2, r3, #16
    90b4:	ldrb	r3, [fp, #-213]	; 0xffffff2b
    90b8:	lsl	r3, r3, #8
    90bc:	orr	r3, r2, r3
    90c0:	ldrb	r2, [fp, #-207]	; 0xffffff31
    90c4:	orr	r3, r3, r2
    90c8:	str	r3, [fp, #-28]	; 0xffffffe4
    90cc:	ldr	r3, [pc, #580]	; 9318 <rb_md5_crypt+0x7d4>
    90d0:	add	r3, pc, r3
    90d4:	ldr	r3, [r3]
    90d8:	mov	r2, #4
    90dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    90e0:	mov	r0, r3
    90e4:	bl	7138 <_crypt_to64>
    90e8:	ldr	r3, [pc, #556]	; 931c <rb_md5_crypt+0x7d8>
    90ec:	add	r3, pc, r3
    90f0:	ldr	r3, [r3]
    90f4:	add	r2, r3, #4
    90f8:	ldr	r3, [pc, #544]	; 9320 <rb_md5_crypt+0x7dc>
    90fc:	add	r3, pc, r3
    9100:	str	r2, [r3]
    9104:	ldrb	r3, [fp, #-218]	; 0xffffff26
    9108:	lsl	r2, r3, #16
    910c:	ldrb	r3, [fp, #-212]	; 0xffffff2c
    9110:	lsl	r3, r3, #8
    9114:	orr	r3, r2, r3
    9118:	ldrb	r2, [fp, #-206]	; 0xffffff32
    911c:	orr	r3, r3, r2
    9120:	str	r3, [fp, #-28]	; 0xffffffe4
    9124:	ldr	r3, [pc, #504]	; 9324 <rb_md5_crypt+0x7e0>
    9128:	add	r3, pc, r3
    912c:	ldr	r3, [r3]
    9130:	mov	r2, #4
    9134:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9138:	mov	r0, r3
    913c:	bl	7138 <_crypt_to64>
    9140:	ldr	r3, [pc, #480]	; 9328 <rb_md5_crypt+0x7e4>
    9144:	add	r3, pc, r3
    9148:	ldr	r3, [r3]
    914c:	add	r2, r3, #4
    9150:	ldr	r3, [pc, #468]	; 932c <rb_md5_crypt+0x7e8>
    9154:	add	r3, pc, r3
    9158:	str	r2, [r3]
    915c:	ldrb	r3, [fp, #-217]	; 0xffffff27
    9160:	lsl	r2, r3, #16
    9164:	ldrb	r3, [fp, #-211]	; 0xffffff2d
    9168:	lsl	r3, r3, #8
    916c:	orr	r3, r2, r3
    9170:	ldrb	r2, [fp, #-205]	; 0xffffff33
    9174:	orr	r3, r3, r2
    9178:	str	r3, [fp, #-28]	; 0xffffffe4
    917c:	ldr	r3, [pc, #428]	; 9330 <rb_md5_crypt+0x7ec>
    9180:	add	r3, pc, r3
    9184:	ldr	r3, [r3]
    9188:	mov	r2, #4
    918c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9190:	mov	r0, r3
    9194:	bl	7138 <_crypt_to64>
    9198:	ldr	r3, [pc, #404]	; 9334 <rb_md5_crypt+0x7f0>
    919c:	add	r3, pc, r3
    91a0:	ldr	r3, [r3]
    91a4:	add	r2, r3, #4
    91a8:	ldr	r3, [pc, #392]	; 9338 <rb_md5_crypt+0x7f4>
    91ac:	add	r3, pc, r3
    91b0:	str	r2, [r3]
    91b4:	ldrb	r3, [fp, #-216]	; 0xffffff28
    91b8:	lsl	r2, r3, #16
    91bc:	ldrb	r3, [fp, #-210]	; 0xffffff2e
    91c0:	lsl	r3, r3, #8
    91c4:	orr	r3, r2, r3
    91c8:	ldrb	r2, [fp, #-215]	; 0xffffff29
    91cc:	orr	r3, r3, r2
    91d0:	str	r3, [fp, #-28]	; 0xffffffe4
    91d4:	ldr	r3, [pc, #352]	; 933c <rb_md5_crypt+0x7f8>
    91d8:	add	r3, pc, r3
    91dc:	ldr	r3, [r3]
    91e0:	mov	r2, #4
    91e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    91e8:	mov	r0, r3
    91ec:	bl	7138 <_crypt_to64>
    91f0:	ldr	r3, [pc, #328]	; 9340 <rb_md5_crypt+0x7fc>
    91f4:	add	r3, pc, r3
    91f8:	ldr	r3, [r3]
    91fc:	add	r2, r3, #4
    9200:	ldr	r3, [pc, #316]	; 9344 <rb_md5_crypt+0x800>
    9204:	add	r3, pc, r3
    9208:	str	r2, [r3]
    920c:	ldrb	r3, [fp, #-209]	; 0xffffff2f
    9210:	str	r3, [fp, #-28]	; 0xffffffe4
    9214:	ldr	r3, [pc, #300]	; 9348 <rb_md5_crypt+0x804>
    9218:	add	r3, pc, r3
    921c:	ldr	r3, [r3]
    9220:	mov	r2, #2
    9224:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9228:	mov	r0, r3
    922c:	bl	7138 <_crypt_to64>
    9230:	ldr	r3, [pc, #276]	; 934c <rb_md5_crypt+0x808>
    9234:	add	r3, pc, r3
    9238:	ldr	r3, [r3]
    923c:	add	r2, r3, #2
    9240:	ldr	r3, [pc, #264]	; 9350 <rb_md5_crypt+0x80c>
    9244:	add	r3, pc, r3
    9248:	str	r2, [r3]
    924c:	ldr	r3, [pc, #256]	; 9354 <rb_md5_crypt+0x810>
    9250:	add	r3, pc, r3
    9254:	ldr	r3, [r3]
    9258:	mov	r2, #0
    925c:	strb	r2, [r3]
    9260:	sub	r3, fp, #220	; 0xdc
    9264:	mov	r2, #16
    9268:	mov	r1, #0
    926c:	mov	r0, r3
    9270:	bl	4694 <memset@plt>
    9274:	ldr	r3, [pc, #220]	; 9358 <rb_md5_crypt+0x814>
    9278:	add	r3, pc, r3
    927c:	mov	r0, r3
    9280:	sub	sp, fp, #12
    9284:	pop	{r4, r5, fp, pc}
    9288:	.word	0x0003e270
    928c:	.word	0x0003e260
    9290:	.word	0x0002b8f4
    9294:	.word	0x0002b8e8
    9298:	.word	0x0003e214
    929c:	.word	0x0002b8a8
    92a0:	.word	0x0003e1ec
    92a4:	.word	0x0003e1e0
    92a8:	.word	0x0003e1f4
    92ac:	.word	0x0003e1e4
    92b0:	.word	0x0003e1d4
    92b4:	.word	0x0003e1c8
    92b8:	.word	0x0003e1b0
    92bc:	.word	0x0003e178
    92c0:	.word	0x0003e188
    92c4:	.word	0x0003e174
    92c8:	.word	0x0003e144
    92cc:	.word	0x0002b7a8
    92d0:	.word	0x0002b79c
    92d4:	.word	0x0003e0d4
    92d8:	.word	0x0003e090
    92dc:	.word	0x0002b61c
    92e0:	.word	0x0003df8c
    92e4:	.word	0x0003df58
    92e8:	.word	0x0003df68
    92ec:	.word	0x00018f08
    92f0:	.word	0x0003df48
    92f4:	.word	0xaaaaaaab
    92f8:	.word	0x0003de7c
    92fc:	.word	0x24924925
    9300:	.word	0x0003ddc4
    9304:	.word	0x0003ddb0
    9308:	.word	0x0003de1c
    930c:	.word	0x0003ddf0
    9310:	.word	0x0003ddd4
    9314:	.word	0x0003ddc4
    9318:	.word	0x0003dd98
    931c:	.word	0x0003dd7c
    9320:	.word	0x0003dd6c
    9324:	.word	0x0003dd40
    9328:	.word	0x0003dd24
    932c:	.word	0x0003dd14
    9330:	.word	0x0003dce8
    9334:	.word	0x0003dccc
    9338:	.word	0x0003dcbc
    933c:	.word	0x0003dc90
    9340:	.word	0x0003dc74
    9344:	.word	0x0003dc64
    9348:	.word	0x0003dc50
    934c:	.word	0x0003dc34
    9350:	.word	0x0003dc24
    9354:	.word	0x0003dc18
    9358:	.word	0x0003db78

0000935c <rb_sha256_process_block>:
    935c:	push	{fp}		; (str fp, [sp, #-4]!)
    9360:	add	fp, sp, #0
    9364:	sub	sp, sp, #364	; 0x16c
    9368:	str	r0, [fp, #-352]	; 0xfffffea0
    936c:	str	r1, [fp, #-356]	; 0xfffffe9c
    9370:	str	r2, [fp, #-360]	; 0xfffffe98
    9374:	ldr	r3, [fp, #-352]	; 0xfffffea0
    9378:	str	r3, [fp, #-8]
    937c:	ldr	r3, [fp, #-356]	; 0xfffffe9c
    9380:	lsr	r3, r3, #2
    9384:	str	r3, [fp, #-12]
    9388:	ldr	r3, [fp, #-360]	; 0xfffffe98
    938c:	ldr	r3, [r3]
    9390:	str	r3, [fp, #-16]
    9394:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9398:	ldr	r3, [r3, #4]
    939c:	str	r3, [fp, #-20]	; 0xffffffec
    93a0:	ldr	r3, [fp, #-360]	; 0xfffffe98
    93a4:	ldr	r3, [r3, #8]
    93a8:	str	r3, [fp, #-24]	; 0xffffffe8
    93ac:	ldr	r3, [fp, #-360]	; 0xfffffe98
    93b0:	ldr	r3, [r3, #12]
    93b4:	str	r3, [fp, #-28]	; 0xffffffe4
    93b8:	ldr	r3, [fp, #-360]	; 0xfffffe98
    93bc:	ldr	r3, [r3, #16]
    93c0:	str	r3, [fp, #-32]	; 0xffffffe0
    93c4:	ldr	r3, [fp, #-360]	; 0xfffffe98
    93c8:	ldr	r3, [r3, #20]
    93cc:	str	r3, [fp, #-36]	; 0xffffffdc
    93d0:	ldr	r3, [fp, #-360]	; 0xfffffe98
    93d4:	ldr	r3, [r3, #24]
    93d8:	str	r3, [fp, #-40]	; 0xffffffd8
    93dc:	ldr	r3, [fp, #-360]	; 0xfffffe98
    93e0:	ldr	r3, [r3, #28]
    93e4:	str	r3, [fp, #-44]	; 0xffffffd4
    93e8:	ldr	r3, [fp, #-360]	; 0xfffffe98
    93ec:	ldr	r2, [r3, #32]
    93f0:	ldr	r3, [fp, #-356]	; 0xfffffe9c
    93f4:	add	r2, r2, r3
    93f8:	ldr	r3, [fp, #-360]	; 0xfffffe98
    93fc:	str	r2, [r3, #32]
    9400:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9404:	ldr	r2, [r3, #32]
    9408:	ldr	r3, [fp, #-356]	; 0xfffffe9c
    940c:	cmp	r2, r3
    9410:	bcs	97f0 <rb_sha256_process_block+0x494>
    9414:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9418:	ldr	r3, [r3, #36]	; 0x24
    941c:	add	r2, r3, #1
    9420:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9424:	str	r2, [r3, #36]	; 0x24
    9428:	b	97f0 <rb_sha256_process_block+0x494>
    942c:	ldr	r3, [fp, #-16]
    9430:	str	r3, [fp, #-52]	; 0xffffffcc
    9434:	ldr	r3, [fp, #-20]	; 0xffffffec
    9438:	str	r3, [fp, #-56]	; 0xffffffc8
    943c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9440:	str	r3, [fp, #-60]	; 0xffffffc4
    9444:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9448:	str	r3, [fp, #-64]	; 0xffffffc0
    944c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9450:	str	r3, [fp, #-68]	; 0xffffffbc
    9454:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9458:	str	r3, [fp, #-72]	; 0xffffffb8
    945c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9460:	str	r3, [fp, #-76]	; 0xffffffb4
    9464:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9468:	str	r3, [fp, #-80]	; 0xffffffb0
    946c:	mov	r3, #0
    9470:	str	r3, [fp, #-48]	; 0xffffffd0
    9474:	b	94e8 <rb_sha256_process_block+0x18c>
    9478:	ldr	r3, [fp, #-8]
    947c:	ldr	r3, [r3]
    9480:	lsl	r2, r3, #24
    9484:	ldr	r3, [fp, #-8]
    9488:	ldr	r3, [r3]
    948c:	lsl	r3, r3, #8
    9490:	and	r3, r3, #16711680	; 0xff0000
    9494:	orr	r2, r2, r3
    9498:	ldr	r3, [fp, #-8]
    949c:	ldr	r3, [r3]
    94a0:	lsr	r3, r3, #8
    94a4:	and	r3, r3, #65280	; 0xff00
    94a8:	orr	r2, r2, r3
    94ac:	ldr	r3, [fp, #-8]
    94b0:	ldr	r3, [r3]
    94b4:	lsr	r3, r3, #24
    94b8:	orr	r2, r2, r3
    94bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    94c0:	lsl	r3, r3, #2
    94c4:	sub	r1, fp, #4
    94c8:	add	r3, r1, r3
    94cc:	str	r2, [r3, #-340]	; 0xfffffeac
    94d0:	ldr	r3, [fp, #-8]
    94d4:	add	r3, r3, #4
    94d8:	str	r3, [fp, #-8]
    94dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    94e0:	add	r3, r3, #1
    94e4:	str	r3, [fp, #-48]	; 0xffffffd0
    94e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    94ec:	cmp	r3, #15
    94f0:	bls	9478 <rb_sha256_process_block+0x11c>
    94f4:	mov	r3, #16
    94f8:	str	r3, [fp, #-48]	; 0xffffffd0
    94fc:	b	9614 <rb_sha256_process_block+0x2b8>
    9500:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9504:	sub	r3, r3, #2
    9508:	lsl	r3, r3, #2
    950c:	sub	r2, fp, #4
    9510:	add	r3, r2, r3
    9514:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9518:	ror	r2, r3, #17
    951c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9520:	sub	r3, r3, #2
    9524:	lsl	r3, r3, #2
    9528:	sub	r1, fp, #4
    952c:	add	r3, r1, r3
    9530:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9534:	ror	r3, r3, #19
    9538:	eor	r2, r2, r3
    953c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9540:	sub	r3, r3, #2
    9544:	lsl	r3, r3, #2
    9548:	sub	r1, fp, #4
    954c:	add	r3, r1, r3
    9550:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9554:	lsr	r3, r3, #10
    9558:	eor	r2, r2, r3
    955c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9560:	sub	r3, r3, #7
    9564:	lsl	r3, r3, #2
    9568:	sub	r1, fp, #4
    956c:	add	r3, r1, r3
    9570:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9574:	add	r2, r2, r3
    9578:	ldr	r3, [fp, #-48]	; 0xffffffd0
    957c:	sub	r3, r3, #15
    9580:	lsl	r3, r3, #2
    9584:	sub	r1, fp, #4
    9588:	add	r3, r1, r3
    958c:	ldr	r3, [r3, #-340]	; 0xfffffeac
    9590:	ror	r1, r3, #7
    9594:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9598:	sub	r3, r3, #15
    959c:	lsl	r3, r3, #2
    95a0:	sub	r0, fp, #4
    95a4:	add	r3, r0, r3
    95a8:	ldr	r3, [r3, #-340]	; 0xfffffeac
    95ac:	ror	r3, r3, #18
    95b0:	eor	r1, r1, r3
    95b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    95b8:	sub	r3, r3, #15
    95bc:	lsl	r3, r3, #2
    95c0:	sub	r0, fp, #4
    95c4:	add	r3, r0, r3
    95c8:	ldr	r3, [r3, #-340]	; 0xfffffeac
    95cc:	lsr	r3, r3, #3
    95d0:	eor	r3, r3, r1
    95d4:	add	r2, r2, r3
    95d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    95dc:	sub	r3, r3, #16
    95e0:	lsl	r3, r3, #2
    95e4:	sub	r1, fp, #4
    95e8:	add	r3, r1, r3
    95ec:	ldr	r3, [r3, #-340]	; 0xfffffeac
    95f0:	add	r2, r2, r3
    95f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    95f8:	lsl	r3, r3, #2
    95fc:	sub	r1, fp, #4
    9600:	add	r3, r1, r3
    9604:	str	r2, [r3, #-340]	; 0xfffffeac
    9608:	ldr	r3, [fp, #-48]	; 0xffffffd0
    960c:	add	r3, r3, #1
    9610:	str	r3, [fp, #-48]	; 0xffffffd0
    9614:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9618:	cmp	r3, #63	; 0x3f
    961c:	bls	9500 <rb_sha256_process_block+0x1a4>
    9620:	mov	r3, #0
    9624:	str	r3, [fp, #-48]	; 0xffffffd0
    9628:	b	9758 <rb_sha256_process_block+0x3fc>
    962c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9630:	ror	r2, r3, #6
    9634:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9638:	ror	r3, r3, #11
    963c:	eor	r2, r2, r3
    9640:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9644:	ror	r3, r3, #25
    9648:	eor	r2, r2, r3
    964c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9650:	add	r2, r2, r3
    9654:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9658:	ldr	r3, [fp, #-36]	; 0xffffffdc
    965c:	and	r1, r1, r3
    9660:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9664:	mvn	r0, r3
    9668:	ldr	r3, [fp, #-40]	; 0xffffffd8
    966c:	and	r3, r3, r0
    9670:	eor	r3, r3, r1
    9674:	add	r2, r2, r3
    9678:	ldr	r3, [pc, #492]	; 986c <rb_sha256_process_block+0x510>
    967c:	add	r3, pc, r3
    9680:	ldr	r1, [fp, #-48]	; 0xffffffd0
    9684:	ldr	r3, [r3, r1, lsl #2]
    9688:	add	r2, r2, r3
    968c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9690:	lsl	r3, r3, #2
    9694:	sub	r1, fp, #4
    9698:	add	r3, r1, r3
    969c:	ldr	r3, [r3, #-340]	; 0xfffffeac
    96a0:	add	r3, r2, r3
    96a4:	str	r3, [fp, #-84]	; 0xffffffac
    96a8:	ldr	r3, [fp, #-16]
    96ac:	ror	r2, r3, #2
    96b0:	ldr	r3, [fp, #-16]
    96b4:	ror	r3, r3, #13
    96b8:	eor	r2, r2, r3
    96bc:	ldr	r3, [fp, #-16]
    96c0:	ror	r3, r3, #22
    96c4:	eor	r2, r2, r3
    96c8:	ldr	r1, [fp, #-16]
    96cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    96d0:	and	r1, r1, r3
    96d4:	ldr	r0, [fp, #-16]
    96d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    96dc:	and	r3, r3, r0
    96e0:	eor	r1, r1, r3
    96e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    96e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    96ec:	and	r3, r3, r0
    96f0:	eor	r3, r3, r1
    96f4:	add	r3, r2, r3
    96f8:	str	r3, [fp, #-88]	; 0xffffffa8
    96fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9700:	str	r3, [fp, #-44]	; 0xffffffd4
    9704:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9708:	str	r3, [fp, #-40]	; 0xffffffd8
    970c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9710:	str	r3, [fp, #-36]	; 0xffffffdc
    9714:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9718:	ldr	r3, [fp, #-84]	; 0xffffffac
    971c:	add	r3, r2, r3
    9720:	str	r3, [fp, #-32]	; 0xffffffe0
    9724:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9728:	str	r3, [fp, #-28]	; 0xffffffe4
    972c:	ldr	r3, [fp, #-20]	; 0xffffffec
    9730:	str	r3, [fp, #-24]	; 0xffffffe8
    9734:	ldr	r3, [fp, #-16]
    9738:	str	r3, [fp, #-20]	; 0xffffffec
    973c:	ldr	r2, [fp, #-84]	; 0xffffffac
    9740:	ldr	r3, [fp, #-88]	; 0xffffffa8
    9744:	add	r3, r2, r3
    9748:	str	r3, [fp, #-16]
    974c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9750:	add	r3, r3, #1
    9754:	str	r3, [fp, #-48]	; 0xffffffd0
    9758:	ldr	r3, [fp, #-48]	; 0xffffffd0
    975c:	cmp	r3, #63	; 0x3f
    9760:	bls	962c <rb_sha256_process_block+0x2d0>
    9764:	ldr	r2, [fp, #-16]
    9768:	ldr	r3, [fp, #-52]	; 0xffffffcc
    976c:	add	r3, r2, r3
    9770:	str	r3, [fp, #-16]
    9774:	ldr	r2, [fp, #-20]	; 0xffffffec
    9778:	ldr	r3, [fp, #-56]	; 0xffffffc8
    977c:	add	r3, r2, r3
    9780:	str	r3, [fp, #-20]	; 0xffffffec
    9784:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9788:	ldr	r3, [fp, #-60]	; 0xffffffc4
    978c:	add	r3, r2, r3
    9790:	str	r3, [fp, #-24]	; 0xffffffe8
    9794:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9798:	ldr	r3, [fp, #-64]	; 0xffffffc0
    979c:	add	r3, r2, r3
    97a0:	str	r3, [fp, #-28]	; 0xffffffe4
    97a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    97a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    97ac:	add	r3, r2, r3
    97b0:	str	r3, [fp, #-32]	; 0xffffffe0
    97b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    97b8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    97bc:	add	r3, r2, r3
    97c0:	str	r3, [fp, #-36]	; 0xffffffdc
    97c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    97c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    97cc:	add	r3, r2, r3
    97d0:	str	r3, [fp, #-40]	; 0xffffffd8
    97d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    97d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
    97dc:	add	r3, r2, r3
    97e0:	str	r3, [fp, #-44]	; 0xffffffd4
    97e4:	ldr	r3, [fp, #-12]
    97e8:	sub	r3, r3, #16
    97ec:	str	r3, [fp, #-12]
    97f0:	ldr	r3, [fp, #-12]
    97f4:	cmp	r3, #0
    97f8:	bne	942c <rb_sha256_process_block+0xd0>
    97fc:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9800:	ldr	r2, [fp, #-16]
    9804:	str	r2, [r3]
    9808:	ldr	r3, [fp, #-360]	; 0xfffffe98
    980c:	ldr	r2, [fp, #-20]	; 0xffffffec
    9810:	str	r2, [r3, #4]
    9814:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9818:	ldr	r2, [fp, #-24]	; 0xffffffe8
    981c:	str	r2, [r3, #8]
    9820:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9824:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9828:	str	r2, [r3, #12]
    982c:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9830:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9834:	str	r2, [r3, #16]
    9838:	ldr	r3, [fp, #-360]	; 0xfffffe98
    983c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9840:	str	r2, [r3, #20]
    9844:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9848:	ldr	r2, [fp, #-40]	; 0xffffffd8
    984c:	str	r2, [r3, #24]
    9850:	ldr	r3, [fp, #-360]	; 0xfffffe98
    9854:	ldr	r2, [fp, #-44]	; 0xffffffd4
    9858:	str	r2, [r3, #28]
    985c:	nop			; (mov r0, r0)
    9860:	add	sp, fp, #0
    9864:	pop	{fp}		; (ldr fp, [sp], #4)
    9868:	bx	lr
    986c:	.word	0x0001876c

00009870 <rb_sha256_init_ctx>:
    9870:	push	{fp}		; (str fp, [sp, #-4]!)
    9874:	add	fp, sp, #0
    9878:	sub	sp, sp, #12
    987c:	str	r0, [fp, #-8]
    9880:	ldr	r3, [fp, #-8]
    9884:	ldr	r2, [pc, #140]	; 9918 <rb_sha256_init_ctx+0xa8>
    9888:	str	r2, [r3]
    988c:	ldr	r3, [fp, #-8]
    9890:	ldr	r2, [pc, #132]	; 991c <rb_sha256_init_ctx+0xac>
    9894:	str	r2, [r3, #4]
    9898:	ldr	r3, [fp, #-8]
    989c:	ldr	r2, [pc, #124]	; 9920 <rb_sha256_init_ctx+0xb0>
    98a0:	str	r2, [r3, #8]
    98a4:	ldr	r3, [fp, #-8]
    98a8:	ldr	r2, [pc, #116]	; 9924 <rb_sha256_init_ctx+0xb4>
    98ac:	str	r2, [r3, #12]
    98b0:	ldr	r3, [fp, #-8]
    98b4:	ldr	r2, [pc, #108]	; 9928 <rb_sha256_init_ctx+0xb8>
    98b8:	str	r2, [r3, #16]
    98bc:	ldr	r3, [fp, #-8]
    98c0:	ldr	r2, [pc, #100]	; 992c <rb_sha256_init_ctx+0xbc>
    98c4:	str	r2, [r3, #20]
    98c8:	ldr	r3, [fp, #-8]
    98cc:	ldr	r2, [pc, #92]	; 9930 <rb_sha256_init_ctx+0xc0>
    98d0:	str	r2, [r3, #24]
    98d4:	ldr	r3, [fp, #-8]
    98d8:	ldr	r2, [pc, #84]	; 9934 <rb_sha256_init_ctx+0xc4>
    98dc:	str	r2, [r3, #28]
    98e0:	ldr	r3, [fp, #-8]
    98e4:	mov	r2, #0
    98e8:	str	r2, [r3, #36]	; 0x24
    98ec:	ldr	r3, [fp, #-8]
    98f0:	ldr	r2, [r3, #36]	; 0x24
    98f4:	ldr	r3, [fp, #-8]
    98f8:	str	r2, [r3, #32]
    98fc:	ldr	r3, [fp, #-8]
    9900:	mov	r2, #0
    9904:	str	r2, [r3, #40]	; 0x28
    9908:	nop			; (mov r0, r0)
    990c:	add	sp, fp, #0
    9910:	pop	{fp}		; (ldr fp, [sp], #4)
    9914:	bx	lr
    9918:	.word	0x6a09e667
    991c:	.word	0xbb67ae85
    9920:	.word	0x3c6ef372
    9924:	.word	0xa54ff53a
    9928:	.word	0x510e527f
    992c:	.word	0x9b05688c
    9930:	.word	0x1f83d9ab
    9934:	.word	0x5be0cd19

00009938 <rb_sha256_finish_ctx>:
    9938:	push	{fp, lr}
    993c:	add	fp, sp, #4
    9940:	sub	sp, sp, #24
    9944:	str	r0, [fp, #-24]	; 0xffffffe8
    9948:	str	r1, [fp, #-28]	; 0xffffffe4
    994c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9950:	ldr	r3, [r3, #40]	; 0x28
    9954:	str	r3, [fp, #-12]
    9958:	ldr	r3, [fp, #-24]	; 0xffffffe8
    995c:	ldr	r2, [r3, #32]
    9960:	ldr	r3, [fp, #-12]
    9964:	add	r2, r2, r3
    9968:	ldr	r3, [fp, #-24]	; 0xffffffe8
    996c:	str	r2, [r3, #32]
    9970:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9974:	ldr	r2, [r3, #32]
    9978:	ldr	r3, [fp, #-12]
    997c:	cmp	r2, r3
    9980:	bcs	9998 <rb_sha256_finish_ctx+0x60>
    9984:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9988:	ldr	r3, [r3, #36]	; 0x24
    998c:	add	r2, r3, #1
    9990:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9994:	str	r2, [r3, #36]	; 0x24
    9998:	ldr	r3, [fp, #-12]
    999c:	cmp	r3, #55	; 0x37
    99a0:	bls	99b0 <rb_sha256_finish_ctx+0x78>
    99a4:	ldr	r3, [fp, #-12]
    99a8:	rsb	r3, r3, #120	; 0x78
    99ac:	b	99b8 <rb_sha256_finish_ctx+0x80>
    99b0:	ldr	r3, [fp, #-12]
    99b4:	rsb	r3, r3, #56	; 0x38
    99b8:	str	r3, [fp, #-16]
    99bc:	ldr	r3, [fp, #-12]
    99c0:	add	r3, r3, #40	; 0x28
    99c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    99c8:	add	r3, r2, r3
    99cc:	add	r3, r3, #4
    99d0:	ldr	r2, [fp, #-16]
    99d4:	ldr	r1, [pc, #508]	; 9bd8 <rb_sha256_finish_ctx+0x2a0>
    99d8:	add	r1, pc, r1
    99dc:	mov	r0, r3
    99e0:	bl	4880 <memcpy@plt>
    99e4:	ldr	r2, [fp, #-12]
    99e8:	ldr	r3, [fp, #-16]
    99ec:	add	r3, r2, r3
    99f0:	add	r3, r3, #4
    99f4:	add	r3, r3, #40	; 0x28
    99f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    99fc:	add	r3, r2, r3
    9a00:	add	r3, r3, #4
    9a04:	str	r3, [fp, #-20]	; 0xffffffec
    9a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a0c:	ldr	r3, [r3, #32]
    9a10:	lsl	r2, r3, #27
    9a14:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a18:	ldr	r3, [r3, #32]
    9a1c:	lsl	r3, r3, #11
    9a20:	and	r3, r3, #16711680	; 0xff0000
    9a24:	orr	r2, r2, r3
    9a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a2c:	ldr	r3, [r3, #32]
    9a30:	lsl	r3, r3, #3
    9a34:	lsr	r3, r3, #8
    9a38:	and	r3, r3, #65280	; 0xff00
    9a3c:	orr	r2, r2, r3
    9a40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a44:	ldr	r3, [r3, #32]
    9a48:	lsl	r3, r3, #3
    9a4c:	lsr	r3, r3, #24
    9a50:	orr	r2, r2, r3
    9a54:	ldr	r3, [fp, #-20]	; 0xffffffec
    9a58:	str	r2, [r3]
    9a5c:	ldr	r2, [fp, #-12]
    9a60:	ldr	r3, [fp, #-16]
    9a64:	add	r3, r2, r3
    9a68:	add	r3, r3, #40	; 0x28
    9a6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9a70:	add	r3, r2, r3
    9a74:	add	r3, r3, #4
    9a78:	str	r3, [fp, #-20]	; 0xffffffec
    9a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a80:	ldr	r3, [r3, #36]	; 0x24
    9a84:	lsl	r2, r3, #3
    9a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9a8c:	ldr	r3, [r3, #32]
    9a90:	lsr	r3, r3, #29
    9a94:	orr	r3, r2, r3
    9a98:	lsl	r2, r3, #24
    9a9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9aa0:	ldr	r3, [r3, #36]	; 0x24
    9aa4:	lsl	r1, r3, #3
    9aa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9aac:	ldr	r3, [r3, #32]
    9ab0:	lsr	r3, r3, #29
    9ab4:	orr	r3, r1, r3
    9ab8:	lsl	r3, r3, #8
    9abc:	and	r3, r3, #16711680	; 0xff0000
    9ac0:	orr	r2, r2, r3
    9ac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9ac8:	ldr	r3, [r3, #36]	; 0x24
    9acc:	lsl	r1, r3, #3
    9ad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9ad4:	ldr	r3, [r3, #32]
    9ad8:	lsr	r3, r3, #29
    9adc:	orr	r3, r1, r3
    9ae0:	lsr	r3, r3, #8
    9ae4:	and	r3, r3, #65280	; 0xff00
    9ae8:	orr	r2, r2, r3
    9aec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9af0:	ldr	r3, [r3, #36]	; 0x24
    9af4:	lsl	r1, r3, #3
    9af8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9afc:	ldr	r3, [r3, #32]
    9b00:	lsr	r3, r3, #29
    9b04:	orr	r3, r1, r3
    9b08:	lsr	r3, r3, #24
    9b0c:	orr	r2, r2, r3
    9b10:	ldr	r3, [fp, #-20]	; 0xffffffec
    9b14:	str	r2, [r3]
    9b18:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9b1c:	add	r0, r3, #44	; 0x2c
    9b20:	ldr	r2, [fp, #-12]
    9b24:	ldr	r3, [fp, #-16]
    9b28:	add	r3, r2, r3
    9b2c:	add	r3, r3, #8
    9b30:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9b34:	mov	r1, r3
    9b38:	bl	935c <rb_sha256_process_block>
    9b3c:	mov	r3, #0
    9b40:	str	r3, [fp, #-8]
    9b44:	b	9bbc <rb_sha256_finish_ctx+0x284>
    9b48:	ldr	r3, [fp, #-8]
    9b4c:	lsl	r3, r3, #2
    9b50:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9b54:	add	r3, r2, r3
    9b58:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9b5c:	ldr	r1, [fp, #-8]
    9b60:	ldr	r2, [r2, r1, lsl #2]
    9b64:	lsl	r1, r2, #24
    9b68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9b6c:	ldr	r0, [fp, #-8]
    9b70:	ldr	r2, [r2, r0, lsl #2]
    9b74:	lsl	r2, r2, #8
    9b78:	and	r2, r2, #16711680	; 0xff0000
    9b7c:	orr	r1, r1, r2
    9b80:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9b84:	ldr	r0, [fp, #-8]
    9b88:	ldr	r2, [r2, r0, lsl #2]
    9b8c:	lsr	r2, r2, #8
    9b90:	and	r2, r2, #65280	; 0xff00
    9b94:	orr	r1, r1, r2
    9b98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9b9c:	ldr	r0, [fp, #-8]
    9ba0:	ldr	r2, [r2, r0, lsl #2]
    9ba4:	lsr	r2, r2, #24
    9ba8:	orr	r2, r1, r2
    9bac:	str	r2, [r3]
    9bb0:	ldr	r3, [fp, #-8]
    9bb4:	add	r3, r3, #1
    9bb8:	str	r3, [fp, #-8]
    9bbc:	ldr	r3, [fp, #-8]
    9bc0:	cmp	r3, #7
    9bc4:	bls	9b48 <rb_sha256_finish_ctx+0x210>
    9bc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9bcc:	mov	r0, r3
    9bd0:	sub	sp, fp, #4
    9bd4:	pop	{fp, pc}
    9bd8:	.word	0x000183d0

00009bdc <rb_sha256_process_bytes>:
    9bdc:	push	{fp, lr}
    9be0:	add	fp, sp, #4
    9be4:	sub	sp, sp, #32
    9be8:	str	r0, [fp, #-24]	; 0xffffffe8
    9bec:	str	r1, [fp, #-28]	; 0xffffffe4
    9bf0:	str	r2, [fp, #-32]	; 0xffffffe0
    9bf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9bf8:	ldr	r3, [r3, #40]	; 0x28
    9bfc:	cmp	r3, #0
    9c00:	beq	9d04 <rb_sha256_process_bytes+0x128>
    9c04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9c08:	ldr	r3, [r3, #40]	; 0x28
    9c0c:	str	r3, [fp, #-12]
    9c10:	ldr	r3, [fp, #-12]
    9c14:	rsb	r2, r3, #128	; 0x80
    9c18:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9c1c:	cmp	r2, r3
    9c20:	movcc	r3, r2
    9c24:	movcs	r3, r3
    9c28:	str	r3, [fp, #-16]
    9c2c:	ldr	r3, [fp, #-12]
    9c30:	add	r3, r3, #40	; 0x28
    9c34:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9c38:	add	r3, r2, r3
    9c3c:	add	r3, r3, #4
    9c40:	ldr	r2, [fp, #-16]
    9c44:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9c48:	mov	r0, r3
    9c4c:	bl	4880 <memcpy@plt>
    9c50:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9c54:	ldr	r2, [r3, #40]	; 0x28
    9c58:	ldr	r3, [fp, #-16]
    9c5c:	add	r2, r2, r3
    9c60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9c64:	str	r2, [r3, #40]	; 0x28
    9c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9c6c:	ldr	r3, [r3, #40]	; 0x28
    9c70:	cmp	r3, #64	; 0x40
    9c74:	bls	9ce4 <rb_sha256_process_bytes+0x108>
    9c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9c7c:	add	r0, r3, #44	; 0x2c
    9c80:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9c84:	ldr	r3, [r3, #40]	; 0x28
    9c88:	bic	r3, r3, #63	; 0x3f
    9c8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9c90:	mov	r1, r3
    9c94:	bl	935c <rb_sha256_process_block>
    9c98:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9c9c:	ldr	r3, [r3, #40]	; 0x28
    9ca0:	and	r2, r3, #63	; 0x3f
    9ca4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9ca8:	str	r2, [r3, #40]	; 0x28
    9cac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9cb0:	add	r0, r3, #44	; 0x2c
    9cb4:	ldr	r2, [fp, #-12]
    9cb8:	ldr	r3, [fp, #-16]
    9cbc:	add	r3, r2, r3
    9cc0:	bic	r3, r3, #63	; 0x3f
    9cc4:	add	r3, r3, #40	; 0x28
    9cc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9ccc:	add	r3, r2, r3
    9cd0:	add	r1, r3, #4
    9cd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9cd8:	ldr	r3, [r3, #40]	; 0x28
    9cdc:	mov	r2, r3
    9ce0:	bl	4880 <memcpy@plt>
    9ce4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9ce8:	ldr	r3, [fp, #-16]
    9cec:	add	r3, r2, r3
    9cf0:	str	r3, [fp, #-24]	; 0xffffffe8
    9cf4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9cf8:	ldr	r3, [fp, #-16]
    9cfc:	sub	r3, r2, r3
    9d00:	str	r3, [fp, #-28]	; 0xffffffe4
    9d04:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9d08:	cmp	r3, #63	; 0x3f
    9d0c:	bls	9db0 <rb_sha256_process_bytes+0x1d4>
    9d10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9d14:	and	r3, r3, #3
    9d18:	cmp	r3, #0
    9d1c:	beq	9d78 <rb_sha256_process_bytes+0x19c>
    9d20:	b	9d68 <rb_sha256_process_bytes+0x18c>
    9d24:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d28:	add	r3, r3, #44	; 0x2c
    9d2c:	mov	r2, #64	; 0x40
    9d30:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9d34:	mov	r0, r3
    9d38:	bl	4880 <memcpy@plt>
    9d3c:	mov	r3, r0
    9d40:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9d44:	mov	r1, #64	; 0x40
    9d48:	mov	r0, r3
    9d4c:	bl	935c <rb_sha256_process_block>
    9d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9d54:	add	r3, r3, #64	; 0x40
    9d58:	str	r3, [fp, #-24]	; 0xffffffe8
    9d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9d60:	sub	r3, r3, #64	; 0x40
    9d64:	str	r3, [fp, #-28]	; 0xffffffe4
    9d68:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9d6c:	cmp	r3, #64	; 0x40
    9d70:	bhi	9d24 <rb_sha256_process_bytes+0x148>
    9d74:	b	9db0 <rb_sha256_process_bytes+0x1d4>
    9d78:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9d7c:	bic	r3, r3, #63	; 0x3f
    9d80:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9d84:	mov	r1, r3
    9d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9d8c:	bl	935c <rb_sha256_process_block>
    9d90:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9d94:	bic	r3, r3, #63	; 0x3f
    9d98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9d9c:	add	r3, r2, r3
    9da0:	str	r3, [fp, #-24]	; 0xffffffe8
    9da4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9da8:	and	r3, r3, #63	; 0x3f
    9dac:	str	r3, [fp, #-28]	; 0xffffffe4
    9db0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9db4:	cmp	r3, #0
    9db8:	beq	9e54 <rb_sha256_process_bytes+0x278>
    9dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9dc0:	ldr	r3, [r3, #40]	; 0x28
    9dc4:	str	r3, [fp, #-8]
    9dc8:	ldr	r3, [fp, #-8]
    9dcc:	add	r3, r3, #40	; 0x28
    9dd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9dd4:	add	r3, r2, r3
    9dd8:	add	r3, r3, #4
    9ddc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9de4:	mov	r0, r3
    9de8:	bl	4880 <memcpy@plt>
    9dec:	ldr	r2, [fp, #-8]
    9df0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9df4:	add	r3, r2, r3
    9df8:	str	r3, [fp, #-8]
    9dfc:	ldr	r3, [fp, #-8]
    9e00:	cmp	r3, #63	; 0x3f
    9e04:	bls	9e48 <rb_sha256_process_bytes+0x26c>
    9e08:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9e0c:	add	r3, r3, #44	; 0x2c
    9e10:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9e14:	mov	r1, #64	; 0x40
    9e18:	mov	r0, r3
    9e1c:	bl	935c <rb_sha256_process_block>
    9e20:	ldr	r3, [fp, #-8]
    9e24:	sub	r3, r3, #64	; 0x40
    9e28:	str	r3, [fp, #-8]
    9e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9e30:	add	r0, r3, #44	; 0x2c
    9e34:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9e38:	add	r3, r3, #108	; 0x6c
    9e3c:	ldr	r2, [fp, #-8]
    9e40:	mov	r1, r3
    9e44:	bl	4880 <memcpy@plt>
    9e48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9e4c:	ldr	r2, [fp, #-8]
    9e50:	str	r2, [r3, #40]	; 0x28
    9e54:	nop			; (mov r0, r0)
    9e58:	sub	sp, fp, #4
    9e5c:	pop	{fp, pc}

00009e60 <rb_sha256_crypt_r>:
    9e60:	push	{fp, lr}
    9e64:	add	fp, sp, #4
    9e68:	sub	sp, sp, #584	; 0x248
    9e6c:	str	r0, [fp, #-568]	; 0xfffffdc8
    9e70:	str	r1, [fp, #-572]	; 0xfffffdc4
    9e74:	str	r2, [fp, #-576]	; 0xfffffdc0
    9e78:	str	r3, [fp, #-580]	; 0xfffffdbc
    9e7c:	mov	r3, #0
    9e80:	str	r3, [fp, #-16]
    9e84:	mov	r3, #0
    9e88:	str	r3, [fp, #-20]	; 0xffffffec
    9e8c:	ldr	r3, [pc, #3840]	; ad94 <rb_sha256_crypt_r+0xf34>
    9e90:	str	r3, [fp, #-24]	; 0xffffffe8
    9e94:	mov	r3, #0
    9e98:	str	r3, [fp, #-28]	; 0xffffffe4
    9e9c:	mov	r2, #3
    9ea0:	ldr	r1, [fp, #-572]	; 0xfffffdc4
    9ea4:	ldr	r3, [pc, #3820]	; ad98 <rb_sha256_crypt_r+0xf38>
    9ea8:	add	r3, pc, r3
    9eac:	mov	r0, r3
    9eb0:	bl	4c94 <strncmp@plt>
    9eb4:	mov	r3, r0
    9eb8:	cmp	r3, #0
    9ebc:	bne	9ecc <rb_sha256_crypt_r+0x6c>
    9ec0:	ldr	r3, [fp, #-572]	; 0xfffffdc4
    9ec4:	add	r3, r3, #3
    9ec8:	str	r3, [fp, #-572]	; 0xfffffdc4
    9ecc:	mov	r2, #7
    9ed0:	ldr	r3, [pc, #3780]	; ad9c <rb_sha256_crypt_r+0xf3c>
    9ed4:	add	r3, pc, r3
    9ed8:	mov	r1, r3
    9edc:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    9ee0:	bl	4c94 <strncmp@plt>
    9ee4:	mov	r3, r0
    9ee8:	cmp	r3, #0
    9eec:	bne	9f64 <rb_sha256_crypt_r+0x104>
    9ef0:	ldr	r3, [fp, #-572]	; 0xfffffdc4
    9ef4:	add	r3, r3, #7
    9ef8:	str	r3, [fp, #-120]	; 0xffffff88
    9efc:	sub	r3, fp, #564	; 0x234
    9f00:	mov	r2, #10
    9f04:	mov	r1, r3
    9f08:	ldr	r0, [fp, #-120]	; 0xffffff88
    9f0c:	bl	4874 <strtoul@plt>
    9f10:	str	r0, [fp, #-124]	; 0xffffff84
    9f14:	ldr	r3, [fp, #-564]	; 0xfffffdcc
    9f18:	ldrb	r3, [r3]
    9f1c:	cmp	r3, #36	; 0x24
    9f20:	bne	9f64 <rb_sha256_crypt_r+0x104>
    9f24:	ldr	r3, [fp, #-564]	; 0xfffffdcc
    9f28:	add	r3, r3, #1
    9f2c:	str	r3, [fp, #-572]	; 0xfffffdc4
    9f30:	ldr	r3, [fp, #-124]	; 0xffffff84
    9f34:	cmp	r3, #1000	; 0x3e8
    9f38:	bcc	9f54 <rb_sha256_crypt_r+0xf4>
    9f3c:	ldr	r3, [fp, #-124]	; 0xffffff84
    9f40:	ldr	r2, [pc, #3672]	; ada0 <rb_sha256_crypt_r+0xf40>
    9f44:	cmp	r3, r2
    9f48:	movcc	r3, r3
    9f4c:	movcs	r3, r2
    9f50:	b	9f58 <rb_sha256_crypt_r+0xf8>
    9f54:	mov	r3, #1000	; 0x3e8
    9f58:	str	r3, [fp, #-24]	; 0xffffffe8
    9f5c:	mov	r3, #1
    9f60:	str	r3, [fp, #-28]	; 0xffffffe4
    9f64:	ldr	r3, [pc, #3640]	; ada4 <rb_sha256_crypt_r+0xf44>
    9f68:	add	r3, pc, r3
    9f6c:	mov	r1, r3
    9f70:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    9f74:	bl	4c64 <strcspn@plt>
    9f78:	mov	r3, r0
    9f7c:	cmp	r3, #15
    9f80:	bhi	9fa0 <rb_sha256_crypt_r+0x140>
    9f84:	ldr	r3, [pc, #3612]	; ada8 <rb_sha256_crypt_r+0xf48>
    9f88:	add	r3, pc, r3
    9f8c:	mov	r1, r3
    9f90:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    9f94:	bl	4c64 <strcspn@plt>
    9f98:	mov	r3, r0
    9f9c:	b	9fa4 <rb_sha256_crypt_r+0x144>
    9fa0:	mov	r3, #16
    9fa4:	str	r3, [fp, #-128]	; 0xffffff80
    9fa8:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    9fac:	bl	485c <strlen@plt>
    9fb0:	str	r0, [fp, #-132]	; 0xffffff7c
    9fb4:	ldr	r3, [fp, #-568]	; 0xfffffdc8
    9fb8:	and	r3, r3, #3
    9fbc:	cmp	r3, #0
    9fc0:	beq	a024 <rb_sha256_crypt_r+0x1c4>
    9fc4:	ldr	r3, [fp, #-132]	; 0xffffff7c
    9fc8:	add	r3, r3, #4
    9fcc:	add	r3, r3, #7
    9fd0:	add	r3, r3, #7
    9fd4:	lsr	r3, r3, #3
    9fd8:	lsl	r3, r3, #3
    9fdc:	sub	sp, sp, r3
    9fe0:	add	r3, sp, #8
    9fe4:	add	r3, r3, #7
    9fe8:	lsr	r3, r3, #3
    9fec:	lsl	r3, r3, #3
    9ff0:	str	r3, [fp, #-136]	; 0xffffff78
    9ff4:	ldr	r3, [fp, #-136]	; 0xffffff78
    9ff8:	and	r3, r3, #3
    9ffc:	rsb	r3, r3, #4
    a000:	ldr	r2, [fp, #-136]	; 0xffffff78
    a004:	add	r3, r2, r3
    a008:	ldr	r2, [fp, #-132]	; 0xffffff7c
    a00c:	ldr	r1, [fp, #-568]	; 0xfffffdc8
    a010:	mov	r0, r3
    a014:	bl	4880 <memcpy@plt>
    a018:	str	r0, [fp, #-16]
    a01c:	ldr	r3, [fp, #-16]
    a020:	str	r3, [fp, #-568]	; 0xfffffdc8
    a024:	ldr	r3, [fp, #-572]	; 0xfffffdc4
    a028:	and	r3, r3, #3
    a02c:	cmp	r3, #0
    a030:	beq	a094 <rb_sha256_crypt_r+0x234>
    a034:	ldr	r3, [fp, #-128]	; 0xffffff80
    a038:	add	r3, r3, #4
    a03c:	add	r3, r3, #7
    a040:	add	r3, r3, #7
    a044:	lsr	r3, r3, #3
    a048:	lsl	r3, r3, #3
    a04c:	sub	sp, sp, r3
    a050:	add	r3, sp, #8
    a054:	add	r3, r3, #7
    a058:	lsr	r3, r3, #3
    a05c:	lsl	r3, r3, #3
    a060:	str	r3, [fp, #-140]	; 0xffffff74
    a064:	ldr	r3, [fp, #-140]	; 0xffffff74
    a068:	and	r3, r3, #3
    a06c:	rsb	r3, r3, #4
    a070:	ldr	r2, [fp, #-140]	; 0xffffff74
    a074:	add	r3, r2, r3
    a078:	ldr	r2, [fp, #-128]	; 0xffffff80
    a07c:	ldr	r1, [fp, #-572]	; 0xfffffdc4
    a080:	mov	r0, r3
    a084:	bl	4880 <memcpy@plt>
    a088:	str	r0, [fp, #-20]	; 0xffffffec
    a08c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a090:	str	r3, [fp, #-572]	; 0xfffffdc4
    a094:	sub	r3, fp, #388	; 0x184
    a098:	mov	r0, r3
    a09c:	bl	9870 <rb_sha256_init_ctx>
    a0a0:	sub	r3, fp, #388	; 0x184
    a0a4:	mov	r2, r3
    a0a8:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a0ac:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a0b0:	bl	9bdc <rb_sha256_process_bytes>
    a0b4:	sub	r3, fp, #388	; 0x184
    a0b8:	mov	r2, r3
    a0bc:	ldr	r1, [fp, #-128]	; 0xffffff80
    a0c0:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    a0c4:	bl	9bdc <rb_sha256_process_bytes>
    a0c8:	sub	r3, fp, #560	; 0x230
    a0cc:	mov	r0, r3
    a0d0:	bl	9870 <rb_sha256_init_ctx>
    a0d4:	sub	r3, fp, #560	; 0x230
    a0d8:	mov	r2, r3
    a0dc:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a0e0:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a0e4:	bl	9bdc <rb_sha256_process_bytes>
    a0e8:	sub	r3, fp, #560	; 0x230
    a0ec:	mov	r2, r3
    a0f0:	ldr	r1, [fp, #-128]	; 0xffffff80
    a0f4:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    a0f8:	bl	9bdc <rb_sha256_process_bytes>
    a0fc:	sub	r3, fp, #560	; 0x230
    a100:	mov	r2, r3
    a104:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a108:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a10c:	bl	9bdc <rb_sha256_process_bytes>
    a110:	sub	r2, fp, #184	; 0xb8
    a114:	sub	r3, fp, #560	; 0x230
    a118:	mov	r1, r2
    a11c:	mov	r0, r3
    a120:	bl	9938 <rb_sha256_finish_ctx>
    a124:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a128:	str	r3, [fp, #-8]
    a12c:	b	a150 <rb_sha256_crypt_r+0x2f0>
    a130:	sub	r2, fp, #388	; 0x184
    a134:	sub	r3, fp, #184	; 0xb8
    a138:	mov	r1, #32
    a13c:	mov	r0, r3
    a140:	bl	9bdc <rb_sha256_process_bytes>
    a144:	ldr	r3, [fp, #-8]
    a148:	sub	r3, r3, #32
    a14c:	str	r3, [fp, #-8]
    a150:	ldr	r3, [fp, #-8]
    a154:	cmp	r3, #32
    a158:	bhi	a130 <rb_sha256_crypt_r+0x2d0>
    a15c:	sub	r2, fp, #388	; 0x184
    a160:	sub	r3, fp, #184	; 0xb8
    a164:	ldr	r1, [fp, #-8]
    a168:	mov	r0, r3
    a16c:	bl	9bdc <rb_sha256_process_bytes>
    a170:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a174:	str	r3, [fp, #-8]
    a178:	b	a1c4 <rb_sha256_crypt_r+0x364>
    a17c:	ldr	r3, [fp, #-8]
    a180:	and	r3, r3, #1
    a184:	cmp	r3, #0
    a188:	beq	a1a4 <rb_sha256_crypt_r+0x344>
    a18c:	sub	r2, fp, #388	; 0x184
    a190:	sub	r3, fp, #184	; 0xb8
    a194:	mov	r1, #32
    a198:	mov	r0, r3
    a19c:	bl	9bdc <rb_sha256_process_bytes>
    a1a0:	b	a1b8 <rb_sha256_crypt_r+0x358>
    a1a4:	sub	r3, fp, #388	; 0x184
    a1a8:	mov	r2, r3
    a1ac:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a1b0:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a1b4:	bl	9bdc <rb_sha256_process_bytes>
    a1b8:	ldr	r3, [fp, #-8]
    a1bc:	lsr	r3, r3, #1
    a1c0:	str	r3, [fp, #-8]
    a1c4:	ldr	r3, [fp, #-8]
    a1c8:	cmp	r3, #0
    a1cc:	bne	a17c <rb_sha256_crypt_r+0x31c>
    a1d0:	sub	r2, fp, #184	; 0xb8
    a1d4:	sub	r3, fp, #388	; 0x184
    a1d8:	mov	r1, r2
    a1dc:	mov	r0, r3
    a1e0:	bl	9938 <rb_sha256_finish_ctx>
    a1e4:	sub	r3, fp, #560	; 0x230
    a1e8:	mov	r0, r3
    a1ec:	bl	9870 <rb_sha256_init_ctx>
    a1f0:	mov	r3, #0
    a1f4:	str	r3, [fp, #-8]
    a1f8:	b	a21c <rb_sha256_crypt_r+0x3bc>
    a1fc:	sub	r3, fp, #560	; 0x230
    a200:	mov	r2, r3
    a204:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a208:	ldr	r0, [fp, #-568]	; 0xfffffdc8
    a20c:	bl	9bdc <rb_sha256_process_bytes>
    a210:	ldr	r3, [fp, #-8]
    a214:	add	r3, r3, #1
    a218:	str	r3, [fp, #-8]
    a21c:	ldr	r2, [fp, #-8]
    a220:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a224:	cmp	r2, r3
    a228:	bcc	a1fc <rb_sha256_crypt_r+0x39c>
    a22c:	sub	r2, fp, #216	; 0xd8
    a230:	sub	r3, fp, #560	; 0x230
    a234:	mov	r1, r2
    a238:	mov	r0, r3
    a23c:	bl	9938 <rb_sha256_finish_ctx>
    a240:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a244:	add	r3, r3, #7
    a248:	add	r3, r3, #7
    a24c:	lsr	r3, r3, #3
    a250:	lsl	r3, r3, #3
    a254:	sub	sp, sp, r3
    a258:	add	r3, sp, #8
    a25c:	add	r3, r3, #7
    a260:	lsr	r3, r3, #3
    a264:	lsl	r3, r3, #3
    a268:	str	r3, [fp, #-144]	; 0xffffff70
    a26c:	ldr	r3, [fp, #-144]	; 0xffffff70
    a270:	str	r3, [fp, #-12]
    a274:	ldr	r3, [fp, #-132]	; 0xffffff7c
    a278:	str	r3, [fp, #-8]
    a27c:	b	a2cc <rb_sha256_crypt_r+0x46c>
    a280:	ldr	r3, [fp, #-12]
    a284:	mov	lr, r3
    a288:	sub	ip, fp, #216	; 0xd8
    a28c:	ldm	ip!, {r0, r1, r2, r3}
    a290:	str	r0, [lr]
    a294:	str	r1, [lr, #4]
    a298:	str	r2, [lr, #8]
    a29c:	str	r3, [lr, #12]
    a2a0:	ldm	ip!, {r0, r1, r2, r3}
    a2a4:	str	r0, [lr, #16]
    a2a8:	str	r1, [lr, #20]
    a2ac:	str	r2, [lr, #24]
    a2b0:	str	r3, [lr, #28]
    a2b4:	ldr	r3, [fp, #-12]
    a2b8:	add	r3, r3, #32
    a2bc:	str	r3, [fp, #-12]
    a2c0:	ldr	r3, [fp, #-8]
    a2c4:	sub	r3, r3, #32
    a2c8:	str	r3, [fp, #-8]
    a2cc:	ldr	r3, [fp, #-8]
    a2d0:	cmp	r3, #31
    a2d4:	bhi	a280 <rb_sha256_crypt_r+0x420>
    a2d8:	sub	r3, fp, #216	; 0xd8
    a2dc:	ldr	r2, [fp, #-8]
    a2e0:	mov	r1, r3
    a2e4:	ldr	r0, [fp, #-12]
    a2e8:	bl	4880 <memcpy@plt>
    a2ec:	sub	r3, fp, #560	; 0x230
    a2f0:	mov	r0, r3
    a2f4:	bl	9870 <rb_sha256_init_ctx>
    a2f8:	mov	r3, #0
    a2fc:	str	r3, [fp, #-8]
    a300:	b	a324 <rb_sha256_crypt_r+0x4c4>
    a304:	sub	r3, fp, #560	; 0x230
    a308:	mov	r2, r3
    a30c:	ldr	r1, [fp, #-128]	; 0xffffff80
    a310:	ldr	r0, [fp, #-572]	; 0xfffffdc4
    a314:	bl	9bdc <rb_sha256_process_bytes>
    a318:	ldr	r3, [fp, #-8]
    a31c:	add	r3, r3, #1
    a320:	str	r3, [fp, #-8]
    a324:	ldrb	r3, [fp, #-184]	; 0xffffff48
    a328:	add	r3, r3, #16
    a32c:	mov	r2, r3
    a330:	ldr	r3, [fp, #-8]
    a334:	cmp	r2, r3
    a338:	bhi	a304 <rb_sha256_crypt_r+0x4a4>
    a33c:	sub	r2, fp, #216	; 0xd8
    a340:	sub	r3, fp, #560	; 0x230
    a344:	mov	r1, r2
    a348:	mov	r0, r3
    a34c:	bl	9938 <rb_sha256_finish_ctx>
    a350:	ldr	r3, [fp, #-128]	; 0xffffff80
    a354:	add	r3, r3, #7
    a358:	add	r3, r3, #7
    a35c:	lsr	r3, r3, #3
    a360:	lsl	r3, r3, #3
    a364:	sub	sp, sp, r3
    a368:	add	r3, sp, #8
    a36c:	add	r3, r3, #7
    a370:	lsr	r3, r3, #3
    a374:	lsl	r3, r3, #3
    a378:	str	r3, [fp, #-148]	; 0xffffff6c
    a37c:	ldr	r3, [fp, #-148]	; 0xffffff6c
    a380:	str	r3, [fp, #-12]
    a384:	ldr	r3, [fp, #-128]	; 0xffffff80
    a388:	str	r3, [fp, #-8]
    a38c:	b	a3dc <rb_sha256_crypt_r+0x57c>
    a390:	ldr	r3, [fp, #-12]
    a394:	mov	lr, r3
    a398:	sub	ip, fp, #216	; 0xd8
    a39c:	ldm	ip!, {r0, r1, r2, r3}
    a3a0:	str	r0, [lr]
    a3a4:	str	r1, [lr, #4]
    a3a8:	str	r2, [lr, #8]
    a3ac:	str	r3, [lr, #12]
    a3b0:	ldm	ip!, {r0, r1, r2, r3}
    a3b4:	str	r0, [lr, #16]
    a3b8:	str	r1, [lr, #20]
    a3bc:	str	r2, [lr, #24]
    a3c0:	str	r3, [lr, #28]
    a3c4:	ldr	r3, [fp, #-12]
    a3c8:	add	r3, r3, #32
    a3cc:	str	r3, [fp, #-12]
    a3d0:	ldr	r3, [fp, #-8]
    a3d4:	sub	r3, r3, #32
    a3d8:	str	r3, [fp, #-8]
    a3dc:	ldr	r3, [fp, #-8]
    a3e0:	cmp	r3, #31
    a3e4:	bhi	a390 <rb_sha256_crypt_r+0x530>
    a3e8:	sub	r3, fp, #216	; 0xd8
    a3ec:	ldr	r2, [fp, #-8]
    a3f0:	mov	r1, r3
    a3f4:	ldr	r0, [fp, #-12]
    a3f8:	bl	4880 <memcpy@plt>
    a3fc:	mov	r3, #0
    a400:	str	r3, [fp, #-8]
    a404:	b	a530 <rb_sha256_crypt_r+0x6d0>
    a408:	sub	r3, fp, #388	; 0x184
    a40c:	mov	r0, r3
    a410:	bl	9870 <rb_sha256_init_ctx>
    a414:	ldr	r3, [fp, #-8]
    a418:	and	r3, r3, #1
    a41c:	cmp	r3, #0
    a420:	beq	a43c <rb_sha256_crypt_r+0x5dc>
    a424:	sub	r3, fp, #388	; 0x184
    a428:	mov	r2, r3
    a42c:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a430:	ldr	r0, [fp, #-144]	; 0xffffff70
    a434:	bl	9bdc <rb_sha256_process_bytes>
    a438:	b	a450 <rb_sha256_crypt_r+0x5f0>
    a43c:	sub	r2, fp, #388	; 0x184
    a440:	sub	r3, fp, #184	; 0xb8
    a444:	mov	r1, #32
    a448:	mov	r0, r3
    a44c:	bl	9bdc <rb_sha256_process_bytes>
    a450:	ldr	r1, [fp, #-8]
    a454:	ldr	r3, [pc, #2384]	; adac <rb_sha256_crypt_r+0xf4c>
    a458:	umull	r2, r3, r3, r1
    a45c:	lsr	r2, r3, #1
    a460:	mov	r3, r2
    a464:	lsl	r3, r3, #1
    a468:	add	r3, r3, r2
    a46c:	sub	r2, r1, r3
    a470:	cmp	r2, #0
    a474:	beq	a48c <rb_sha256_crypt_r+0x62c>
    a478:	sub	r3, fp, #388	; 0x184
    a47c:	mov	r2, r3
    a480:	ldr	r1, [fp, #-128]	; 0xffffff80
    a484:	ldr	r0, [fp, #-148]	; 0xffffff6c
    a488:	bl	9bdc <rb_sha256_process_bytes>
    a48c:	ldr	r1, [fp, #-8]
    a490:	ldr	r3, [pc, #2328]	; adb0 <rb_sha256_crypt_r+0xf50>
    a494:	umull	r2, r3, r3, r1
    a498:	sub	r2, r1, r3
    a49c:	lsr	r2, r2, #1
    a4a0:	add	r3, r3, r2
    a4a4:	lsr	r2, r3, #2
    a4a8:	mov	r3, r2
    a4ac:	lsl	r3, r3, #3
    a4b0:	sub	r3, r3, r2
    a4b4:	sub	r2, r1, r3
    a4b8:	cmp	r2, #0
    a4bc:	beq	a4d4 <rb_sha256_crypt_r+0x674>
    a4c0:	sub	r3, fp, #388	; 0x184
    a4c4:	mov	r2, r3
    a4c8:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a4cc:	ldr	r0, [fp, #-144]	; 0xffffff70
    a4d0:	bl	9bdc <rb_sha256_process_bytes>
    a4d4:	ldr	r3, [fp, #-8]
    a4d8:	and	r3, r3, #1
    a4dc:	cmp	r3, #0
    a4e0:	beq	a4fc <rb_sha256_crypt_r+0x69c>
    a4e4:	sub	r2, fp, #388	; 0x184
    a4e8:	sub	r3, fp, #184	; 0xb8
    a4ec:	mov	r1, #32
    a4f0:	mov	r0, r3
    a4f4:	bl	9bdc <rb_sha256_process_bytes>
    a4f8:	b	a510 <rb_sha256_crypt_r+0x6b0>
    a4fc:	sub	r3, fp, #388	; 0x184
    a500:	mov	r2, r3
    a504:	ldr	r1, [fp, #-132]	; 0xffffff7c
    a508:	ldr	r0, [fp, #-144]	; 0xffffff70
    a50c:	bl	9bdc <rb_sha256_process_bytes>
    a510:	sub	r2, fp, #184	; 0xb8
    a514:	sub	r3, fp, #388	; 0x184
    a518:	mov	r1, r2
    a51c:	mov	r0, r3
    a520:	bl	9938 <rb_sha256_finish_ctx>
    a524:	ldr	r3, [fp, #-8]
    a528:	add	r3, r3, #1
    a52c:	str	r3, [fp, #-8]
    a530:	ldr	r2, [fp, #-8]
    a534:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a538:	cmp	r2, r3
    a53c:	bcc	a408 <rb_sha256_crypt_r+0x5a8>
    a540:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a544:	bic	r3, r3, r3, asr #31
    a548:	mov	r2, r3
    a54c:	mov	r1, #0
    a550:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    a554:	bl	4694 <memset@plt>
    a558:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a55c:	bic	r3, r3, r3, asr #31
    a560:	mov	r2, r3
    a564:	ldr	r3, [pc, #2120]	; adb4 <rb_sha256_crypt_r+0xf54>
    a568:	add	r3, pc, r3
    a56c:	mov	r1, r3
    a570:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    a574:	bl	45e0 <strncpy@plt>
    a578:	mov	r1, #0
    a57c:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    a580:	bl	461c <strchr@plt>
    a584:	str	r0, [fp, #-12]
    a588:	ldr	r3, [fp, #-12]
    a58c:	cmp	r3, #0
    a590:	bne	a5ac <rb_sha256_crypt_r+0x74c>
    a594:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a598:	bic	r3, r3, r3, asr #31
    a59c:	mov	r2, r3
    a5a0:	ldr	r3, [fp, #-576]	; 0xfffffdc0
    a5a4:	add	r3, r3, r2
    a5a8:	str	r3, [fp, #-12]
    a5ac:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a5b0:	sub	r3, r3, #3
    a5b4:	str	r3, [fp, #-580]	; 0xfffffdbc
    a5b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a5bc:	cmp	r3, #0
    a5c0:	beq	a614 <rb_sha256_crypt_r+0x7b4>
    a5c4:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a5c8:	bic	r3, r3, r3, asr #31
    a5cc:	mov	r1, r3
    a5d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a5d4:	str	r3, [sp]
    a5d8:	ldr	r3, [pc, #2008]	; adb8 <rb_sha256_crypt_r+0xf58>
    a5dc:	add	r3, pc, r3
    a5e0:	ldr	r2, [pc, #2004]	; adbc <rb_sha256_crypt_r+0xf5c>
    a5e4:	add	r2, pc, r2
    a5e8:	ldr	r0, [fp, #-12]
    a5ec:	bl	4c34 <snprintf@plt>
    a5f0:	str	r0, [fp, #-152]	; 0xffffff68
    a5f4:	ldr	r3, [fp, #-152]	; 0xffffff68
    a5f8:	ldr	r2, [fp, #-12]
    a5fc:	add	r3, r2, r3
    a600:	str	r3, [fp, #-12]
    a604:	ldr	r2, [fp, #-580]	; 0xfffffdbc
    a608:	ldr	r3, [fp, #-152]	; 0xffffff68
    a60c:	sub	r3, r2, r3
    a610:	str	r3, [fp, #-580]	; 0xfffffdbc
    a614:	ldr	r2, [fp, #-128]	; 0xffffff80
    a618:	mov	r1, #0
    a61c:	ldr	r0, [fp, #-12]
    a620:	bl	4694 <memset@plt>
    a624:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a628:	bic	r3, r3, r3, asr #31
    a62c:	mov	r2, r3
    a630:	ldr	r3, [fp, #-128]	; 0xffffff80
    a634:	cmp	r2, r3
    a638:	movcc	r3, r2
    a63c:	movcs	r3, r3
    a640:	mov	r2, r3
    a644:	ldr	r1, [fp, #-572]	; 0xfffffdc4
    a648:	ldr	r0, [fp, #-12]
    a64c:	bl	45e0 <strncpy@plt>
    a650:	mov	r1, #0
    a654:	ldr	r0, [fp, #-576]	; 0xfffffdc0
    a658:	bl	461c <strchr@plt>
    a65c:	str	r0, [fp, #-12]
    a660:	ldr	r3, [fp, #-12]
    a664:	cmp	r3, #0
    a668:	bne	a67c <rb_sha256_crypt_r+0x81c>
    a66c:	ldr	r2, [fp, #-12]
    a670:	ldr	r3, [fp, #-128]	; 0xffffff80
    a674:	add	r3, r2, r3
    a678:	str	r3, [fp, #-12]
    a67c:	ldr	r1, [fp, #-580]	; 0xfffffdbc
    a680:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a684:	bic	r3, r3, r3, asr #31
    a688:	mov	r2, r3
    a68c:	ldr	r3, [fp, #-128]	; 0xffffff80
    a690:	cmp	r2, r3
    a694:	movcc	r3, r2
    a698:	movcs	r3, r3
    a69c:	sub	r3, r1, r3
    a6a0:	str	r3, [fp, #-580]	; 0xfffffdbc
    a6a4:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a6a8:	cmp	r3, #0
    a6ac:	ble	a6d0 <rb_sha256_crypt_r+0x870>
    a6b0:	ldr	r3, [fp, #-12]
    a6b4:	add	r2, r3, #1
    a6b8:	str	r2, [fp, #-12]
    a6bc:	mov	r2, #36	; 0x24
    a6c0:	strb	r2, [r3]
    a6c4:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a6c8:	sub	r3, r3, #1
    a6cc:	str	r3, [fp, #-580]	; 0xfffffdbc
    a6d0:	ldrb	r3, [fp, #-184]	; 0xffffff48
    a6d4:	lsl	r2, r3, #16
    a6d8:	ldrb	r3, [fp, #-174]	; 0xffffff52
    a6dc:	lsl	r3, r3, #8
    a6e0:	orr	r3, r2, r3
    a6e4:	ldrb	r2, [fp, #-164]	; 0xffffff5c
    a6e8:	orr	r3, r3, r2
    a6ec:	str	r3, [fp, #-32]	; 0xffffffe0
    a6f0:	mov	r3, #4
    a6f4:	str	r3, [fp, #-36]	; 0xffffffdc
    a6f8:	b	a738 <rb_sha256_crypt_r+0x8d8>
    a6fc:	ldr	r3, [fp, #-12]
    a700:	add	r2, r3, #1
    a704:	str	r2, [fp, #-12]
    a708:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a70c:	and	r2, r2, #63	; 0x3f
    a710:	ldr	r1, [pc, #1704]	; adc0 <rb_sha256_crypt_r+0xf60>
    a714:	add	r1, pc, r1
    a718:	ldrb	r2, [r1, r2]
    a71c:	strb	r2, [r3]
    a720:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a724:	sub	r3, r3, #1
    a728:	str	r3, [fp, #-580]	; 0xfffffdbc
    a72c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a730:	lsr	r3, r3, #6
    a734:	str	r3, [fp, #-32]	; 0xffffffe0
    a738:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a73c:	sub	r2, r3, #1
    a740:	str	r2, [fp, #-36]	; 0xffffffdc
    a744:	cmp	r3, #0
    a748:	ble	a758 <rb_sha256_crypt_r+0x8f8>
    a74c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a750:	cmp	r3, #0
    a754:	bgt	a6fc <rb_sha256_crypt_r+0x89c>
    a758:	ldrb	r3, [fp, #-163]	; 0xffffff5d
    a75c:	lsl	r2, r3, #16
    a760:	ldrb	r3, [fp, #-183]	; 0xffffff49
    a764:	lsl	r3, r3, #8
    a768:	orr	r3, r2, r3
    a76c:	ldrb	r2, [fp, #-173]	; 0xffffff53
    a770:	orr	r3, r3, r2
    a774:	str	r3, [fp, #-40]	; 0xffffffd8
    a778:	mov	r3, #4
    a77c:	str	r3, [fp, #-44]	; 0xffffffd4
    a780:	b	a7c0 <rb_sha256_crypt_r+0x960>
    a784:	ldr	r3, [fp, #-12]
    a788:	add	r2, r3, #1
    a78c:	str	r2, [fp, #-12]
    a790:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a794:	and	r2, r2, #63	; 0x3f
    a798:	ldr	r1, [pc, #1572]	; adc4 <rb_sha256_crypt_r+0xf64>
    a79c:	add	r1, pc, r1
    a7a0:	ldrb	r2, [r1, r2]
    a7a4:	strb	r2, [r3]
    a7a8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a7ac:	sub	r3, r3, #1
    a7b0:	str	r3, [fp, #-580]	; 0xfffffdbc
    a7b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a7b8:	lsr	r3, r3, #6
    a7bc:	str	r3, [fp, #-40]	; 0xffffffd8
    a7c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a7c4:	sub	r2, r3, #1
    a7c8:	str	r2, [fp, #-44]	; 0xffffffd4
    a7cc:	cmp	r3, #0
    a7d0:	ble	a7e0 <rb_sha256_crypt_r+0x980>
    a7d4:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a7d8:	cmp	r3, #0
    a7dc:	bgt	a784 <rb_sha256_crypt_r+0x924>
    a7e0:	ldrb	r3, [fp, #-172]	; 0xffffff54
    a7e4:	lsl	r2, r3, #16
    a7e8:	ldrb	r3, [fp, #-162]	; 0xffffff5e
    a7ec:	lsl	r3, r3, #8
    a7f0:	orr	r3, r2, r3
    a7f4:	ldrb	r2, [fp, #-182]	; 0xffffff4a
    a7f8:	orr	r3, r3, r2
    a7fc:	str	r3, [fp, #-48]	; 0xffffffd0
    a800:	mov	r3, #4
    a804:	str	r3, [fp, #-52]	; 0xffffffcc
    a808:	b	a848 <rb_sha256_crypt_r+0x9e8>
    a80c:	ldr	r3, [fp, #-12]
    a810:	add	r2, r3, #1
    a814:	str	r2, [fp, #-12]
    a818:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a81c:	and	r2, r2, #63	; 0x3f
    a820:	ldr	r1, [pc, #1440]	; adc8 <rb_sha256_crypt_r+0xf68>
    a824:	add	r1, pc, r1
    a828:	ldrb	r2, [r1, r2]
    a82c:	strb	r2, [r3]
    a830:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a834:	sub	r3, r3, #1
    a838:	str	r3, [fp, #-580]	; 0xfffffdbc
    a83c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a840:	lsr	r3, r3, #6
    a844:	str	r3, [fp, #-48]	; 0xffffffd0
    a848:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a84c:	sub	r2, r3, #1
    a850:	str	r2, [fp, #-52]	; 0xffffffcc
    a854:	cmp	r3, #0
    a858:	ble	a868 <rb_sha256_crypt_r+0xa08>
    a85c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a860:	cmp	r3, #0
    a864:	bgt	a80c <rb_sha256_crypt_r+0x9ac>
    a868:	ldrb	r3, [fp, #-181]	; 0xffffff4b
    a86c:	lsl	r2, r3, #16
    a870:	ldrb	r3, [fp, #-171]	; 0xffffff55
    a874:	lsl	r3, r3, #8
    a878:	orr	r3, r2, r3
    a87c:	ldrb	r2, [fp, #-161]	; 0xffffff5f
    a880:	orr	r3, r3, r2
    a884:	str	r3, [fp, #-56]	; 0xffffffc8
    a888:	mov	r3, #4
    a88c:	str	r3, [fp, #-60]	; 0xffffffc4
    a890:	b	a8d0 <rb_sha256_crypt_r+0xa70>
    a894:	ldr	r3, [fp, #-12]
    a898:	add	r2, r3, #1
    a89c:	str	r2, [fp, #-12]
    a8a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    a8a4:	and	r2, r2, #63	; 0x3f
    a8a8:	ldr	r1, [pc, #1308]	; adcc <rb_sha256_crypt_r+0xf6c>
    a8ac:	add	r1, pc, r1
    a8b0:	ldrb	r2, [r1, r2]
    a8b4:	strb	r2, [r3]
    a8b8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a8bc:	sub	r3, r3, #1
    a8c0:	str	r3, [fp, #-580]	; 0xfffffdbc
    a8c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a8c8:	lsr	r3, r3, #6
    a8cc:	str	r3, [fp, #-56]	; 0xffffffc8
    a8d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a8d4:	sub	r2, r3, #1
    a8d8:	str	r2, [fp, #-60]	; 0xffffffc4
    a8dc:	cmp	r3, #0
    a8e0:	ble	a8f0 <rb_sha256_crypt_r+0xa90>
    a8e4:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a8e8:	cmp	r3, #0
    a8ec:	bgt	a894 <rb_sha256_crypt_r+0xa34>
    a8f0:	ldrb	r3, [fp, #-160]	; 0xffffff60
    a8f4:	lsl	r2, r3, #16
    a8f8:	ldrb	r3, [fp, #-180]	; 0xffffff4c
    a8fc:	lsl	r3, r3, #8
    a900:	orr	r3, r2, r3
    a904:	ldrb	r2, [fp, #-170]	; 0xffffff56
    a908:	orr	r3, r3, r2
    a90c:	str	r3, [fp, #-64]	; 0xffffffc0
    a910:	mov	r3, #4
    a914:	str	r3, [fp, #-68]	; 0xffffffbc
    a918:	b	a958 <rb_sha256_crypt_r+0xaf8>
    a91c:	ldr	r3, [fp, #-12]
    a920:	add	r2, r3, #1
    a924:	str	r2, [fp, #-12]
    a928:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a92c:	and	r2, r2, #63	; 0x3f
    a930:	ldr	r1, [pc, #1176]	; add0 <rb_sha256_crypt_r+0xf70>
    a934:	add	r1, pc, r1
    a938:	ldrb	r2, [r1, r2]
    a93c:	strb	r2, [r3]
    a940:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a944:	sub	r3, r3, #1
    a948:	str	r3, [fp, #-580]	; 0xfffffdbc
    a94c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a950:	lsr	r3, r3, #6
    a954:	str	r3, [fp, #-64]	; 0xffffffc0
    a958:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a95c:	sub	r2, r3, #1
    a960:	str	r2, [fp, #-68]	; 0xffffffbc
    a964:	cmp	r3, #0
    a968:	ble	a978 <rb_sha256_crypt_r+0xb18>
    a96c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a970:	cmp	r3, #0
    a974:	bgt	a91c <rb_sha256_crypt_r+0xabc>
    a978:	ldrb	r3, [fp, #-169]	; 0xffffff57
    a97c:	lsl	r2, r3, #16
    a980:	ldrb	r3, [fp, #-159]	; 0xffffff61
    a984:	lsl	r3, r3, #8
    a988:	orr	r3, r2, r3
    a98c:	ldrb	r2, [fp, #-179]	; 0xffffff4d
    a990:	orr	r3, r3, r2
    a994:	str	r3, [fp, #-72]	; 0xffffffb8
    a998:	mov	r3, #4
    a99c:	str	r3, [fp, #-76]	; 0xffffffb4
    a9a0:	b	a9e0 <rb_sha256_crypt_r+0xb80>
    a9a4:	ldr	r3, [fp, #-12]
    a9a8:	add	r2, r3, #1
    a9ac:	str	r2, [fp, #-12]
    a9b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
    a9b4:	and	r2, r2, #63	; 0x3f
    a9b8:	ldr	r1, [pc, #1044]	; add4 <rb_sha256_crypt_r+0xf74>
    a9bc:	add	r1, pc, r1
    a9c0:	ldrb	r2, [r1, r2]
    a9c4:	strb	r2, [r3]
    a9c8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a9cc:	sub	r3, r3, #1
    a9d0:	str	r3, [fp, #-580]	; 0xfffffdbc
    a9d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    a9d8:	lsr	r3, r3, #6
    a9dc:	str	r3, [fp, #-72]	; 0xffffffb8
    a9e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a9e4:	sub	r2, r3, #1
    a9e8:	str	r2, [fp, #-76]	; 0xffffffb4
    a9ec:	cmp	r3, #0
    a9f0:	ble	aa00 <rb_sha256_crypt_r+0xba0>
    a9f4:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    a9f8:	cmp	r3, #0
    a9fc:	bgt	a9a4 <rb_sha256_crypt_r+0xb44>
    aa00:	ldrb	r3, [fp, #-178]	; 0xffffff4e
    aa04:	lsl	r2, r3, #16
    aa08:	ldrb	r3, [fp, #-168]	; 0xffffff58
    aa0c:	lsl	r3, r3, #8
    aa10:	orr	r3, r2, r3
    aa14:	ldrb	r2, [fp, #-158]	; 0xffffff62
    aa18:	orr	r3, r3, r2
    aa1c:	str	r3, [fp, #-80]	; 0xffffffb0
    aa20:	mov	r3, #4
    aa24:	str	r3, [fp, #-84]	; 0xffffffac
    aa28:	b	aa68 <rb_sha256_crypt_r+0xc08>
    aa2c:	ldr	r3, [fp, #-12]
    aa30:	add	r2, r3, #1
    aa34:	str	r2, [fp, #-12]
    aa38:	ldr	r2, [fp, #-80]	; 0xffffffb0
    aa3c:	and	r2, r2, #63	; 0x3f
    aa40:	ldr	r1, [pc, #912]	; add8 <rb_sha256_crypt_r+0xf78>
    aa44:	add	r1, pc, r1
    aa48:	ldrb	r2, [r1, r2]
    aa4c:	strb	r2, [r3]
    aa50:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    aa54:	sub	r3, r3, #1
    aa58:	str	r3, [fp, #-580]	; 0xfffffdbc
    aa5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    aa60:	lsr	r3, r3, #6
    aa64:	str	r3, [fp, #-80]	; 0xffffffb0
    aa68:	ldr	r3, [fp, #-84]	; 0xffffffac
    aa6c:	sub	r2, r3, #1
    aa70:	str	r2, [fp, #-84]	; 0xffffffac
    aa74:	cmp	r3, #0
    aa78:	ble	aa88 <rb_sha256_crypt_r+0xc28>
    aa7c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    aa80:	cmp	r3, #0
    aa84:	bgt	aa2c <rb_sha256_crypt_r+0xbcc>
    aa88:	ldrb	r3, [fp, #-157]	; 0xffffff63
    aa8c:	lsl	r2, r3, #16
    aa90:	ldrb	r3, [fp, #-177]	; 0xffffff4f
    aa94:	lsl	r3, r3, #8
    aa98:	orr	r3, r2, r3
    aa9c:	ldrb	r2, [fp, #-167]	; 0xffffff59
    aaa0:	orr	r3, r3, r2
    aaa4:	str	r3, [fp, #-88]	; 0xffffffa8
    aaa8:	mov	r3, #4
    aaac:	str	r3, [fp, #-92]	; 0xffffffa4
    aab0:	b	aaf0 <rb_sha256_crypt_r+0xc90>
    aab4:	ldr	r3, [fp, #-12]
    aab8:	add	r2, r3, #1
    aabc:	str	r2, [fp, #-12]
    aac0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    aac4:	and	r2, r2, #63	; 0x3f
    aac8:	ldr	r1, [pc, #780]	; addc <rb_sha256_crypt_r+0xf7c>
    aacc:	add	r1, pc, r1
    aad0:	ldrb	r2, [r1, r2]
    aad4:	strb	r2, [r3]
    aad8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    aadc:	sub	r3, r3, #1
    aae0:	str	r3, [fp, #-580]	; 0xfffffdbc
    aae4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    aae8:	lsr	r3, r3, #6
    aaec:	str	r3, [fp, #-88]	; 0xffffffa8
    aaf0:	ldr	r3, [fp, #-92]	; 0xffffffa4
    aaf4:	sub	r2, r3, #1
    aaf8:	str	r2, [fp, #-92]	; 0xffffffa4
    aafc:	cmp	r3, #0
    ab00:	ble	ab10 <rb_sha256_crypt_r+0xcb0>
    ab04:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ab08:	cmp	r3, #0
    ab0c:	bgt	aab4 <rb_sha256_crypt_r+0xc54>
    ab10:	ldrb	r3, [fp, #-166]	; 0xffffff5a
    ab14:	lsl	r2, r3, #16
    ab18:	ldrb	r3, [fp, #-156]	; 0xffffff64
    ab1c:	lsl	r3, r3, #8
    ab20:	orr	r3, r2, r3
    ab24:	ldrb	r2, [fp, #-176]	; 0xffffff50
    ab28:	orr	r3, r3, r2
    ab2c:	str	r3, [fp, #-96]	; 0xffffffa0
    ab30:	mov	r3, #4
    ab34:	str	r3, [fp, #-100]	; 0xffffff9c
    ab38:	b	ab78 <rb_sha256_crypt_r+0xd18>
    ab3c:	ldr	r3, [fp, #-12]
    ab40:	add	r2, r3, #1
    ab44:	str	r2, [fp, #-12]
    ab48:	ldr	r2, [fp, #-96]	; 0xffffffa0
    ab4c:	and	r2, r2, #63	; 0x3f
    ab50:	ldr	r1, [pc, #648]	; ade0 <rb_sha256_crypt_r+0xf80>
    ab54:	add	r1, pc, r1
    ab58:	ldrb	r2, [r1, r2]
    ab5c:	strb	r2, [r3]
    ab60:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ab64:	sub	r3, r3, #1
    ab68:	str	r3, [fp, #-580]	; 0xfffffdbc
    ab6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    ab70:	lsr	r3, r3, #6
    ab74:	str	r3, [fp, #-96]	; 0xffffffa0
    ab78:	ldr	r3, [fp, #-100]	; 0xffffff9c
    ab7c:	sub	r2, r3, #1
    ab80:	str	r2, [fp, #-100]	; 0xffffff9c
    ab84:	cmp	r3, #0
    ab88:	ble	ab98 <rb_sha256_crypt_r+0xd38>
    ab8c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ab90:	cmp	r3, #0
    ab94:	bgt	ab3c <rb_sha256_crypt_r+0xcdc>
    ab98:	ldrb	r3, [fp, #-175]	; 0xffffff51
    ab9c:	lsl	r2, r3, #16
    aba0:	ldrb	r3, [fp, #-165]	; 0xffffff5b
    aba4:	lsl	r3, r3, #8
    aba8:	orr	r3, r2, r3
    abac:	ldrb	r2, [fp, #-155]	; 0xffffff65
    abb0:	orr	r3, r3, r2
    abb4:	str	r3, [fp, #-104]	; 0xffffff98
    abb8:	mov	r3, #4
    abbc:	str	r3, [fp, #-108]	; 0xffffff94
    abc0:	b	ac00 <rb_sha256_crypt_r+0xda0>
    abc4:	ldr	r3, [fp, #-12]
    abc8:	add	r2, r3, #1
    abcc:	str	r2, [fp, #-12]
    abd0:	ldr	r2, [fp, #-104]	; 0xffffff98
    abd4:	and	r2, r2, #63	; 0x3f
    abd8:	ldr	r1, [pc, #516]	; ade4 <rb_sha256_crypt_r+0xf84>
    abdc:	add	r1, pc, r1
    abe0:	ldrb	r2, [r1, r2]
    abe4:	strb	r2, [r3]
    abe8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    abec:	sub	r3, r3, #1
    abf0:	str	r3, [fp, #-580]	; 0xfffffdbc
    abf4:	ldr	r3, [fp, #-104]	; 0xffffff98
    abf8:	lsr	r3, r3, #6
    abfc:	str	r3, [fp, #-104]	; 0xffffff98
    ac00:	ldr	r3, [fp, #-108]	; 0xffffff94
    ac04:	sub	r2, r3, #1
    ac08:	str	r2, [fp, #-108]	; 0xffffff94
    ac0c:	cmp	r3, #0
    ac10:	ble	ac20 <rb_sha256_crypt_r+0xdc0>
    ac14:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ac18:	cmp	r3, #0
    ac1c:	bgt	abc4 <rb_sha256_crypt_r+0xd64>
    ac20:	ldrb	r3, [fp, #-153]	; 0xffffff67
    ac24:	lsl	r3, r3, #8
    ac28:	ldrb	r2, [fp, #-154]	; 0xffffff66
    ac2c:	orr	r3, r3, r2
    ac30:	str	r3, [fp, #-112]	; 0xffffff90
    ac34:	mov	r3, #3
    ac38:	str	r3, [fp, #-116]	; 0xffffff8c
    ac3c:	b	ac7c <rb_sha256_crypt_r+0xe1c>
    ac40:	ldr	r3, [fp, #-12]
    ac44:	add	r2, r3, #1
    ac48:	str	r2, [fp, #-12]
    ac4c:	ldr	r2, [fp, #-112]	; 0xffffff90
    ac50:	and	r2, r2, #63	; 0x3f
    ac54:	ldr	r1, [pc, #396]	; ade8 <rb_sha256_crypt_r+0xf88>
    ac58:	add	r1, pc, r1
    ac5c:	ldrb	r2, [r1, r2]
    ac60:	strb	r2, [r3]
    ac64:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ac68:	sub	r3, r3, #1
    ac6c:	str	r3, [fp, #-580]	; 0xfffffdbc
    ac70:	ldr	r3, [fp, #-112]	; 0xffffff90
    ac74:	lsr	r3, r3, #6
    ac78:	str	r3, [fp, #-112]	; 0xffffff90
    ac7c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    ac80:	sub	r2, r3, #1
    ac84:	str	r2, [fp, #-116]	; 0xffffff8c
    ac88:	cmp	r3, #0
    ac8c:	ble	ac9c <rb_sha256_crypt_r+0xe3c>
    ac90:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    ac94:	cmp	r3, #0
    ac98:	bgt	ac40 <rb_sha256_crypt_r+0xde0>
    ac9c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
    aca0:	cmp	r3, #0
    aca4:	bgt	acc4 <rb_sha256_crypt_r+0xe64>
    aca8:	bl	4d78 <__errno_location@plt>
    acac:	mov	r2, r0
    acb0:	mov	r3, #34	; 0x22
    acb4:	str	r3, [r2]
    acb8:	mov	r3, #0
    acbc:	str	r3, [fp, #-576]	; 0xfffffdc0
    acc0:	b	acd0 <rb_sha256_crypt_r+0xe70>
    acc4:	ldr	r3, [fp, #-12]
    acc8:	mov	r2, #0
    accc:	strb	r2, [r3]
    acd0:	sub	r3, fp, #388	; 0x184
    acd4:	mov	r0, r3
    acd8:	bl	9870 <rb_sha256_init_ctx>
    acdc:	sub	r2, fp, #184	; 0xb8
    ace0:	sub	r3, fp, #388	; 0x184
    ace4:	mov	r1, r2
    ace8:	mov	r0, r3
    acec:	bl	9938 <rb_sha256_finish_ctx>
    acf0:	sub	r3, fp, #216	; 0xd8
    acf4:	mov	r2, #32
    acf8:	mov	r1, #0
    acfc:	mov	r0, r3
    ad00:	bl	4694 <memset@plt>
    ad04:	ldr	r2, [fp, #-132]	; 0xffffff7c
    ad08:	mov	r1, #0
    ad0c:	ldr	r0, [fp, #-144]	; 0xffffff70
    ad10:	bl	4694 <memset@plt>
    ad14:	ldr	r2, [fp, #-128]	; 0xffffff80
    ad18:	mov	r1, #0
    ad1c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    ad20:	bl	4694 <memset@plt>
    ad24:	sub	r3, fp, #388	; 0x184
    ad28:	mov	r2, #172	; 0xac
    ad2c:	mov	r1, #0
    ad30:	mov	r0, r3
    ad34:	bl	4694 <memset@plt>
    ad38:	sub	r3, fp, #560	; 0x230
    ad3c:	mov	r2, #172	; 0xac
    ad40:	mov	r1, #0
    ad44:	mov	r0, r3
    ad48:	bl	4694 <memset@plt>
    ad4c:	ldr	r3, [fp, #-16]
    ad50:	cmp	r3, #0
    ad54:	beq	ad68 <rb_sha256_crypt_r+0xf08>
    ad58:	ldr	r2, [fp, #-132]	; 0xffffff7c
    ad5c:	mov	r1, #0
    ad60:	ldr	r0, [fp, #-16]
    ad64:	bl	4694 <memset@plt>
    ad68:	ldr	r3, [fp, #-20]	; 0xffffffec
    ad6c:	cmp	r3, #0
    ad70:	beq	ad84 <rb_sha256_crypt_r+0xf24>
    ad74:	ldr	r2, [fp, #-128]	; 0xffffff80
    ad78:	mov	r1, #0
    ad7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ad80:	bl	4694 <memset@plt>
    ad84:	ldr	r3, [fp, #-576]	; 0xfffffdc0
    ad88:	mov	r0, r3
    ad8c:	sub	sp, fp, #4
    ad90:	pop	{fp, pc}
    ad94:	.word	0x00001388
    ad98:	.word	0x00018040
    ad9c:	.word	0x00018018
    ada0:	.word	0x3b9ac9ff
    ada4:	.word	0x00017e3c
    ada8:	.word	0x00017e1c
    adac:	.word	0xaaaaaaab
    adb0:	.word	0x24924925
    adb4:	.word	0x00017980
    adb8:	.word	0x00017910
    adbc:	.word	0x00017910
    adc0:	.word	0x000172ec
    adc4:	.word	0x00017264
    adc8:	.word	0x000171dc
    adcc:	.word	0x00017154
    add0:	.word	0x000170cc
    add4:	.word	0x00017044
    add8:	.word	0x00016fbc
    addc:	.word	0x00016f34
    ade0:	.word	0x00016eac
    ade4:	.word	0x00016e24
    ade8:	.word	0x00016da8

0000adec <rb_sha256_crypt>:
    adec:	push	{fp, lr}
    adf0:	add	fp, sp, #4
    adf4:	sub	sp, sp, #16
    adf8:	str	r0, [fp, #-16]
    adfc:	str	r1, [fp, #-20]	; 0xffffffec
    ae00:	ldr	r0, [fp, #-20]	; 0xffffffec
    ae04:	bl	485c <strlen@plt>
    ae08:	mov	r3, r0
    ae0c:	add	r3, r3, #66	; 0x42
    ae10:	str	r3, [fp, #-8]
    ae14:	ldr	r3, [fp, #-8]
    ae18:	mov	r0, r3
    ae1c:	bl	4a24 <malloc@plt>
    ae20:	mov	r3, r0
    ae24:	str	r3, [fp, #-12]
    ae28:	ldr	r3, [fp, #-12]
    ae2c:	cmp	r3, #0
    ae30:	bne	ae3c <rb_sha256_crypt+0x50>
    ae34:	mov	r3, #0
    ae38:	b	ae84 <rb_sha256_crypt+0x98>
    ae3c:	ldr	r3, [pc, #76]	; ae90 <rb_sha256_crypt+0xa4>
    ae40:	add	r3, pc, r3
    ae44:	ldr	r2, [fp, #-12]
    ae48:	str	r2, [r3]
    ae4c:	ldr	r3, [pc, #64]	; ae94 <rb_sha256_crypt+0xa8>
    ae50:	add	r3, pc, r3
    ae54:	ldr	r2, [fp, #-8]
    ae58:	str	r2, [r3]
    ae5c:	ldr	r3, [pc, #52]	; ae98 <rb_sha256_crypt+0xac>
    ae60:	add	r3, pc, r3
    ae64:	ldr	r2, [r3]
    ae68:	ldr	r3, [pc, #44]	; ae9c <rb_sha256_crypt+0xb0>
    ae6c:	add	r3, pc, r3
    ae70:	ldr	r3, [r3]
    ae74:	ldr	r1, [fp, #-20]	; 0xffffffec
    ae78:	ldr	r0, [fp, #-16]
    ae7c:	bl	9e60 <rb_sha256_crypt_r>
    ae80:	mov	r3, r0
    ae84:	mov	r0, r3
    ae88:	sub	sp, fp, #4
    ae8c:	pop	{fp, pc}
    ae90:	.word	0x0003c02c
    ae94:	.word	0x0003c020
    ae98:	.word	0x0003c00c
    ae9c:	.word	0x0003c004

0000aea0 <rb_sha512_process_block>:
    aea0:	push	{r4, r5, r6, r7, r8, r9, fp}
    aea4:	add	fp, sp, #24
    aea8:	sub	sp, sp, #972	; 0x3cc
    aeac:	str	r0, [fp, #-832]	; 0xfffffcc0
    aeb0:	str	r1, [fp, #-836]	; 0xfffffcbc
    aeb4:	str	r2, [fp, #-840]	; 0xfffffcb8
    aeb8:	ldr	r3, [fp, #-832]	; 0xfffffcc0
    aebc:	str	r3, [fp, #-32]	; 0xffffffe0
    aec0:	ldr	r3, [fp, #-836]	; 0xfffffcbc
    aec4:	lsr	r3, r3, #3
    aec8:	str	r3, [fp, #-36]	; 0xffffffdc
    aecc:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    aed0:	ldrd	r2, [r3]
    aed4:	strd	r2, [fp, #-44]	; 0xffffffd4
    aed8:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    aedc:	ldrd	r2, [r3, #8]
    aee0:	strd	r2, [fp, #-52]	; 0xffffffcc
    aee4:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    aee8:	ldrd	r2, [r3, #16]
    aeec:	strd	r2, [fp, #-60]	; 0xffffffc4
    aef0:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    aef4:	ldrd	r2, [r3, #24]
    aef8:	strd	r2, [fp, #-68]	; 0xffffffbc
    aefc:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af00:	ldrd	r2, [r3, #32]
    af04:	strd	r2, [fp, #-76]	; 0xffffffb4
    af08:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af0c:	ldrd	r2, [r3, #40]	; 0x28
    af10:	strd	r2, [fp, #-84]	; 0xffffffac
    af14:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af18:	ldrd	r2, [r3, #48]	; 0x30
    af1c:	strd	r2, [fp, #-92]	; 0xffffffa4
    af20:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af24:	ldrd	r2, [r3, #56]	; 0x38
    af28:	strd	r2, [fp, #-100]	; 0xffffff9c
    af2c:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af30:	ldrd	r0, [r3, #64]	; 0x40
    af34:	ldr	r3, [fp, #-836]	; 0xfffffcbc
    af38:	mov	r2, r3
    af3c:	mov	r3, #0
    af40:	adds	r0, r0, r2
    af44:	adc	r1, r1, r3
    af48:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af4c:	strd	r0, [r3, #64]	; 0x40
    af50:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af54:	ldrd	r0, [r3, #64]	; 0x40
    af58:	ldr	r3, [fp, #-836]	; 0xfffffcbc
    af5c:	mov	r2, r3
    af60:	mov	r3, #0
    af64:	cmp	r1, r3
    af68:	cmpeq	r0, r2
    af6c:	bcs	b7b4 <rb_sha512_process_block+0x914>
    af70:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af74:	ldrd	r2, [r3, #72]	; 0x48
    af78:	adds	r0, r2, #1
    af7c:	adc	r1, r3, #0
    af80:	ldr	r3, [fp, #-840]	; 0xfffffcb8
    af84:	strd	r0, [r3, #72]	; 0x48
    af88:	b	b7b4 <rb_sha512_process_block+0x914>
    af8c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    af90:	strd	r2, [fp, #-116]	; 0xffffff8c
    af94:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    af98:	strd	r2, [fp, #-124]	; 0xffffff84
    af9c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    afa0:	strd	r2, [fp, #-132]	; 0xffffff7c
    afa4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    afa8:	strd	r2, [fp, #-140]	; 0xffffff74
    afac:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    afb0:	strd	r2, [fp, #-148]	; 0xffffff6c
    afb4:	ldrd	r2, [fp, #-84]	; 0xffffffac
    afb8:	strd	r2, [fp, #-156]	; 0xffffff64
    afbc:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    afc0:	strd	r2, [fp, #-164]	; 0xffffff5c
    afc4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    afc8:	strd	r2, [fp, #-172]	; 0xffffff54
    afcc:	mov	r3, #0
    afd0:	str	r3, [fp, #-104]	; 0xffffff98
    afd4:	b	b208 <rb_sha512_process_block+0x368>
    afd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    afdc:	ldrd	r2, [r3]
    afe0:	lsl	r3, r2, #24
    afe4:	str	r3, [fp, #-888]	; 0xfffffc88
    afe8:	mov	r3, #0
    afec:	str	r3, [fp, #-892]	; 0xfffffc84
    aff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    aff4:	ldrd	r2, [r3]
    aff8:	lsl	r3, r2, #8
    affc:	str	r3, [fp, #-896]	; 0xfffffc80
    b000:	mov	r3, #0
    b004:	str	r3, [fp, #-900]	; 0xfffffc7c
    b008:	mov	r2, #0
    b00c:	mov	r3, #16711680	; 0xff0000
    b010:	sub	r1, fp, #900	; 0x384
    b014:	ldrd	r0, [r1]
    b018:	and	r0, r0, r2
    b01c:	and	r1, r1, r3
    b020:	mov	r2, r0
    b024:	mov	r3, r1
    b028:	sub	r1, fp, #892	; 0x37c
    b02c:	ldrd	r0, [r1]
    b030:	orr	r0, r0, r2
    b034:	orr	r1, r1, r3
    b038:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b03c:	ldrd	r2, [r3]
    b040:	lsl	ip, r3, #24
    b044:	str	ip, [fp, #-848]	; 0xfffffcb0
    b048:	ldr	ip, [fp, #-848]	; 0xfffffcb0
    b04c:	orr	ip, ip, r2, lsr #8
    b050:	str	ip, [fp, #-848]	; 0xfffffcb0
    b054:	lsl	r3, r2, #24
    b058:	str	r3, [fp, #-852]	; 0xfffffcac
    b05c:	mov	r2, #0
    b060:	mov	r3, #65280	; 0xff00
    b064:	sub	ip, fp, #852	; 0x354
    b068:	ldrd	r4, [ip]
    b06c:	and	r4, r4, r2
    b070:	and	r5, r5, r3
    b074:	mov	r2, r4
    b078:	mov	r3, r5
    b07c:	orr	r0, r0, r2
    b080:	orr	r1, r1, r3
    b084:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b088:	ldrd	r2, [r3]
    b08c:	lsl	ip, r3, #8
    b090:	str	ip, [fp, #-856]	; 0xfffffca8
    b094:	ldr	ip, [fp, #-856]	; 0xfffffca8
    b098:	orr	ip, ip, r2, lsr #24
    b09c:	str	ip, [fp, #-856]	; 0xfffffca8
    b0a0:	lsl	r3, r2, #8
    b0a4:	str	r3, [fp, #-860]	; 0xfffffca4
    b0a8:	mov	r2, #0
    b0ac:	mov	r3, #255	; 0xff
    b0b0:	sub	ip, fp, #860	; 0x35c
    b0b4:	ldrd	r4, [ip]
    b0b8:	and	r4, r4, r2
    b0bc:	and	r5, r5, r3
    b0c0:	mov	r2, r4
    b0c4:	mov	r3, r5
    b0c8:	orr	r0, r0, r2
    b0cc:	orr	r1, r1, r3
    b0d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b0d4:	ldrd	r2, [r3]
    b0d8:	lsr	ip, r2, #8
    b0dc:	str	ip, [fp, #-868]	; 0xfffffc9c
    b0e0:	ldr	ip, [fp, #-868]	; 0xfffffc9c
    b0e4:	orr	ip, ip, r3, lsl #24
    b0e8:	str	ip, [fp, #-868]	; 0xfffffc9c
    b0ec:	lsr	r3, r3, #8
    b0f0:	str	r3, [fp, #-864]	; 0xfffffca0
    b0f4:	mov	r2, #-16777216	; 0xff000000
    b0f8:	mov	r3, #0
    b0fc:	sub	ip, fp, #868	; 0x364
    b100:	ldrd	r4, [ip]
    b104:	and	r4, r4, r2
    b108:	and	r5, r5, r3
    b10c:	mov	r2, r4
    b110:	mov	r3, r5
    b114:	orr	r0, r0, r2
    b118:	orr	r1, r1, r3
    b11c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b120:	ldrd	r2, [r3]
    b124:	lsr	ip, r2, #24
    b128:	str	ip, [fp, #-876]	; 0xfffffc94
    b12c:	ldr	ip, [fp, #-876]	; 0xfffffc94
    b130:	orr	ip, ip, r3, lsl #8
    b134:	str	ip, [fp, #-876]	; 0xfffffc94
    b138:	lsr	r3, r3, #24
    b13c:	str	r3, [fp, #-872]	; 0xfffffc98
    b140:	mov	r2, #16711680	; 0xff0000
    b144:	mov	r3, #0
    b148:	sub	ip, fp, #876	; 0x36c
    b14c:	ldrd	r4, [ip]
    b150:	and	r4, r4, r2
    b154:	and	r5, r5, r3
    b158:	mov	r2, r4
    b15c:	mov	r3, r5
    b160:	orr	r0, r0, r2
    b164:	orr	r1, r1, r3
    b168:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b16c:	ldrd	r2, [r3]
    b170:	lsr	r3, r3, #8
    b174:	str	r3, [fp, #-908]	; 0xfffffc74
    b178:	mov	r3, #0
    b17c:	str	r3, [fp, #-904]	; 0xfffffc78
    b180:	mov	r2, #65280	; 0xff00
    b184:	mov	r3, #0
    b188:	sub	ip, fp, #908	; 0x38c
    b18c:	ldrd	r4, [ip]
    b190:	and	r4, r4, r2
    b194:	and	r5, r5, r3
    b198:	mov	r2, r4
    b19c:	mov	r3, r5
    b1a0:	orr	r0, r0, r2
    b1a4:	orr	r1, r1, r3
    b1a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b1ac:	ldrd	r2, [r3]
    b1b0:	lsr	r3, r3, #24
    b1b4:	str	r3, [fp, #-916]	; 0xfffffc6c
    b1b8:	mov	r3, #0
    b1bc:	str	r3, [fp, #-912]	; 0xfffffc70
    b1c0:	sub	r3, fp, #916	; 0x394
    b1c4:	ldrd	r2, [r3]
    b1c8:	orr	r2, r2, r0
    b1cc:	orr	r3, r3, r1
    b1d0:	mov	r0, r2
    b1d4:	mov	r1, r3
    b1d8:	sub	r3, fp, #828	; 0x33c
    b1dc:	mov	r2, r3
    b1e0:	ldr	r3, [fp, #-104]	; 0xffffff98
    b1e4:	lsl	r3, r3, #3
    b1e8:	add	r3, r2, r3
    b1ec:	strd	r0, [r3]
    b1f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b1f4:	add	r3, r3, #8
    b1f8:	str	r3, [fp, #-32]	; 0xffffffe0
    b1fc:	ldr	r3, [fp, #-104]	; 0xffffff98
    b200:	add	r3, r3, #1
    b204:	str	r3, [fp, #-104]	; 0xffffff98
    b208:	ldr	r3, [fp, #-104]	; 0xffffff98
    b20c:	cmp	r3, #15
    b210:	bls	afd8 <rb_sha512_process_block+0x138>
    b214:	mov	r3, #16
    b218:	str	r3, [fp, #-104]	; 0xffffff98
    b21c:	b	b434 <rb_sha512_process_block+0x594>
    b220:	ldr	r3, [fp, #-104]	; 0xffffff98
    b224:	sub	r2, r3, #2
    b228:	sub	r3, fp, #828	; 0x33c
    b22c:	mov	r1, r3
    b230:	lsl	r3, r2, #3
    b234:	add	r3, r1, r3
    b238:	ldrd	r2, [r3]
    b23c:	lsl	r0, r3, #13
    b240:	lsr	r1, r2, #19
    b244:	orr	r1, r0, r1
    b248:	str	r1, [fp, #-924]	; 0xfffffc64
    b24c:	lsl	r1, r2, #13
    b250:	lsr	r3, r3, #19
    b254:	orr	r3, r1, r3
    b258:	str	r3, [fp, #-920]	; 0xfffffc68
    b25c:	ldr	r3, [fp, #-104]	; 0xffffff98
    b260:	sub	r2, r3, #2
    b264:	sub	r3, fp, #828	; 0x33c
    b268:	mov	r1, r3
    b26c:	lsl	r3, r2, #3
    b270:	add	r3, r1, r3
    b274:	ldrd	r2, [r3]
    b278:	lsr	r0, r2, #29
    b27c:	lsl	r1, r3, #3
    b280:	orr	r1, r0, r1
    b284:	str	r1, [fp, #-928]	; 0xfffffc60
    b288:	lsr	r1, r3, #29
    b28c:	lsl	r3, r2, #3
    b290:	orr	r3, r1, r3
    b294:	str	r3, [fp, #-932]	; 0xfffffc5c
    b298:	sub	r3, fp, #924	; 0x39c
    b29c:	ldrd	r4, [r3]
    b2a0:	sub	r3, fp, #932	; 0x3a4
    b2a4:	ldrd	r2, [r3]
    b2a8:	eor	r4, r4, r2
    b2ac:	eor	r5, r5, r3
    b2b0:	ldr	r3, [fp, #-104]	; 0xffffff98
    b2b4:	sub	r2, r3, #2
    b2b8:	sub	r3, fp, #828	; 0x33c
    b2bc:	mov	r1, r3
    b2c0:	lsl	r3, r2, #3
    b2c4:	add	r3, r1, r3
    b2c8:	ldrd	r2, [r3]
    b2cc:	lsr	r1, r2, #6
    b2d0:	str	r1, [fp, #-884]	; 0xfffffc8c
    b2d4:	ldr	r1, [fp, #-884]	; 0xfffffc8c
    b2d8:	orr	r1, r1, r3, lsl #26
    b2dc:	str	r1, [fp, #-884]	; 0xfffffc8c
    b2e0:	lsr	r3, r3, #6
    b2e4:	str	r3, [fp, #-880]	; 0xfffffc90
    b2e8:	sub	r3, fp, #884	; 0x374
    b2ec:	ldrd	r2, [r3]
    b2f0:	eor	r2, r2, r4
    b2f4:	eor	r3, r3, r5
    b2f8:	mov	r4, r2
    b2fc:	mov	r5, r3
    b300:	ldr	r3, [fp, #-104]	; 0xffffff98
    b304:	sub	r2, r3, #7
    b308:	sub	r3, fp, #828	; 0x33c
    b30c:	mov	r1, r3
    b310:	lsl	r3, r2, #3
    b314:	add	r3, r1, r3
    b318:	ldrd	r2, [r3]
    b31c:	adds	r6, r4, r2
    b320:	adc	r7, r5, r3
    b324:	ldr	r3, [fp, #-104]	; 0xffffff98
    b328:	sub	r2, r3, #15
    b32c:	sub	r3, fp, #828	; 0x33c
    b330:	mov	r1, r3
    b334:	lsl	r3, r2, #3
    b338:	add	r3, r1, r3
    b33c:	ldrd	r2, [r3]
    b340:	lsl	r0, r3, #31
    b344:	lsr	r1, r2, #1
    b348:	orr	r1, r0, r1
    b34c:	str	r1, [fp, #-940]	; 0xfffffc54
    b350:	lsl	r1, r2, #31
    b354:	lsr	r3, r3, #1
    b358:	orr	r3, r1, r3
    b35c:	str	r3, [fp, #-936]	; 0xfffffc58
    b360:	ldr	r3, [fp, #-104]	; 0xffffff98
    b364:	sub	r2, r3, #15
    b368:	sub	r3, fp, #828	; 0x33c
    b36c:	mov	r1, r3
    b370:	lsl	r3, r2, #3
    b374:	add	r3, r1, r3
    b378:	ldrd	r2, [r3]
    b37c:	lsl	r0, r3, #24
    b380:	lsr	r1, r2, #8
    b384:	orr	r1, r0, r1
    b388:	str	r1, [fp, #-948]	; 0xfffffc4c
    b38c:	lsl	r1, r2, #24
    b390:	lsr	r3, r3, #8
    b394:	orr	r3, r1, r3
    b398:	str	r3, [fp, #-944]	; 0xfffffc50
    b39c:	sub	r3, fp, #940	; 0x3ac
    b3a0:	ldrd	r4, [r3]
    b3a4:	sub	r3, fp, #948	; 0x3b4
    b3a8:	ldrd	r2, [r3]
    b3ac:	eor	r4, r4, r2
    b3b0:	eor	r5, r5, r3
    b3b4:	ldr	r3, [fp, #-104]	; 0xffffff98
    b3b8:	sub	r2, r3, #15
    b3bc:	sub	r3, fp, #828	; 0x33c
    b3c0:	mov	r1, r3
    b3c4:	lsl	r3, r2, #3
    b3c8:	add	r3, r1, r3
    b3cc:	ldrd	r2, [r3]
    b3d0:	lsr	r8, r2, #7
    b3d4:	orr	r8, r8, r3, lsl #25
    b3d8:	lsr	r9, r3, #7
    b3dc:	eor	r2, r4, r8
    b3e0:	eor	r3, r5, r9
    b3e4:	adds	r4, r6, r2
    b3e8:	adc	r5, r7, r3
    b3ec:	ldr	r3, [fp, #-104]	; 0xffffff98
    b3f0:	sub	r2, r3, #16
    b3f4:	sub	r3, fp, #828	; 0x33c
    b3f8:	mov	r1, r3
    b3fc:	lsl	r3, r2, #3
    b400:	add	r3, r1, r3
    b404:	ldrd	r2, [r3]
    b408:	adds	r0, r4, r2
    b40c:	adc	r1, r5, r3
    b410:	sub	r3, fp, #828	; 0x33c
    b414:	mov	r2, r3
    b418:	ldr	r3, [fp, #-104]	; 0xffffff98
    b41c:	lsl	r3, r3, #3
    b420:	add	r3, r2, r3
    b424:	strd	r0, [r3]
    b428:	ldr	r3, [fp, #-104]	; 0xffffff98
    b42c:	add	r3, r3, #1
    b430:	str	r3, [fp, #-104]	; 0xffffff98
    b434:	ldr	r3, [fp, #-104]	; 0xffffff98
    b438:	cmp	r3, #79	; 0x4f
    b43c:	bls	b220 <rb_sha512_process_block+0x380>
    b440:	mov	r3, #0
    b444:	str	r3, [fp, #-104]	; 0xffffff98
    b448:	b	b6fc <rb_sha512_process_block+0x85c>
    b44c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b450:	lsl	r2, r3, #18
    b454:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b458:	lsr	r3, r3, #14
    b45c:	orr	r3, r2, r3
    b460:	str	r3, [fp, #-956]	; 0xfffffc44
    b464:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b468:	lsl	r2, r3, #18
    b46c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b470:	lsr	r3, r3, #14
    b474:	orr	r3, r2, r3
    b478:	str	r3, [fp, #-952]	; 0xfffffc48
    b47c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b480:	lsl	r2, r3, #14
    b484:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b488:	lsr	r3, r3, #18
    b48c:	orr	r3, r2, r3
    b490:	str	r3, [fp, #-964]	; 0xfffffc3c
    b494:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b498:	lsl	r2, r3, #14
    b49c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b4a0:	lsr	r3, r3, #18
    b4a4:	orr	r3, r2, r3
    b4a8:	str	r3, [fp, #-960]	; 0xfffffc40
    b4ac:	sub	r3, fp, #956	; 0x3bc
    b4b0:	ldrd	r0, [r3]
    b4b4:	sub	r3, fp, #964	; 0x3c4
    b4b8:	ldrd	r2, [r3]
    b4bc:	eor	r0, r0, r2
    b4c0:	eor	r1, r1, r3
    b4c4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b4c8:	lsr	r2, r3, #9
    b4cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b4d0:	lsl	r3, r3, #23
    b4d4:	orr	r3, r2, r3
    b4d8:	str	r3, [fp, #-968]	; 0xfffffc38
    b4dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b4e0:	lsr	r2, r3, #9
    b4e4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    b4e8:	lsl	r3, r3, #23
    b4ec:	orr	r3, r2, r3
    b4f0:	str	r3, [fp, #-972]	; 0xfffffc34
    b4f4:	sub	r3, fp, #972	; 0x3cc
    b4f8:	ldrd	r2, [r3]
    b4fc:	eor	r2, r2, r0
    b500:	eor	r3, r3, r1
    b504:	mov	r0, r2
    b508:	mov	r1, r3
    b50c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    b510:	adds	r6, r0, r2
    b514:	adc	r7, r1, r3
    b518:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    b51c:	ldrd	r2, [fp, #-84]	; 0xffffffac
    b520:	and	r4, r0, r2
    b524:	and	r5, r1, r3
    b528:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    b52c:	mvn	r0, r2
    b530:	mvn	r1, r3
    b534:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    b538:	and	r2, r2, r0
    b53c:	and	r3, r3, r1
    b540:	eor	r2, r2, r4
    b544:	eor	r3, r3, r5
    b548:	adds	r0, r6, r2
    b54c:	adc	r1, r7, r3
    b550:	ldr	r2, [pc, #728]	; b830 <rb_sha512_process_block+0x990>
    b554:	add	r2, pc, r2
    b558:	ldr	r3, [fp, #-104]	; 0xffffff98
    b55c:	lsl	r3, r3, #3
    b560:	add	r3, r2, r3
    b564:	ldrd	r2, [r3]
    b568:	adds	r0, r0, r2
    b56c:	adc	r1, r1, r3
    b570:	sub	r3, fp, #828	; 0x33c
    b574:	mov	r2, r3
    b578:	ldr	r3, [fp, #-104]	; 0xffffff98
    b57c:	lsl	r3, r3, #3
    b580:	add	r3, r2, r3
    b584:	ldrd	r2, [r3]
    b588:	adds	r2, r2, r0
    b58c:	adc	r3, r3, r1
    b590:	strd	r2, [fp, #-180]	; 0xffffff4c
    b594:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b598:	lsl	r2, r3, #4
    b59c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b5a0:	lsr	r3, r3, #28
    b5a4:	orr	r3, r2, r3
    b5a8:	str	r3, [fp, #-980]	; 0xfffffc2c
    b5ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b5b0:	lsl	r2, r3, #4
    b5b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b5b8:	lsr	r3, r3, #28
    b5bc:	orr	r3, r2, r3
    b5c0:	str	r3, [fp, #-976]	; 0xfffffc30
    b5c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b5c8:	lsr	r2, r3, #2
    b5cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b5d0:	lsl	r3, r3, #30
    b5d4:	orr	r3, r2, r3
    b5d8:	str	r3, [fp, #-984]	; 0xfffffc28
    b5dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b5e0:	lsr	r2, r3, #2
    b5e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b5e8:	lsl	r3, r3, #30
    b5ec:	orr	r3, r2, r3
    b5f0:	str	r3, [fp, #-988]	; 0xfffffc24
    b5f4:	sub	r3, fp, #980	; 0x3d4
    b5f8:	ldrd	r0, [r3]
    b5fc:	sub	r3, fp, #988	; 0x3dc
    b600:	ldrd	r2, [r3]
    b604:	eor	r0, r0, r2
    b608:	eor	r1, r1, r3
    b60c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b610:	lsr	r2, r3, #7
    b614:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b618:	lsl	r3, r3, #25
    b61c:	orr	r3, r2, r3
    b620:	str	r3, [fp, #-992]	; 0xfffffc20
    b624:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b628:	lsr	r2, r3, #7
    b62c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b630:	lsl	r3, r3, #25
    b634:	orr	r3, r2, r3
    b638:	str	r3, [fp, #-996]	; 0xfffffc1c
    b63c:	sub	r3, fp, #996	; 0x3e4
    b640:	ldrd	r6, [r3]
    b644:	eor	r6, r6, r0
    b648:	eor	r7, r7, r1
    b64c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
    b650:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    b654:	and	r4, r0, r2
    b658:	and	r5, r1, r3
    b65c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
    b660:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    b664:	and	r2, r2, r0
    b668:	and	r3, r3, r1
    b66c:	eor	r4, r4, r2
    b670:	eor	r5, r5, r3
    b674:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    b678:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    b67c:	and	r2, r2, r0
    b680:	and	r3, r3, r1
    b684:	eor	r2, r2, r4
    b688:	eor	r3, r3, r5
    b68c:	adds	r2, r2, r6
    b690:	adc	r3, r3, r7
    b694:	strd	r2, [fp, #-188]	; 0xffffff44
    b698:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    b69c:	strd	r2, [fp, #-100]	; 0xffffff9c
    b6a0:	ldrd	r2, [fp, #-84]	; 0xffffffac
    b6a4:	strd	r2, [fp, #-92]	; 0xffffffa4
    b6a8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    b6ac:	strd	r2, [fp, #-84]	; 0xffffffac
    b6b0:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    b6b4:	ldrd	r2, [fp, #-180]	; 0xffffff4c
    b6b8:	adds	r2, r2, r0
    b6bc:	adc	r3, r3, r1
    b6c0:	strd	r2, [fp, #-76]	; 0xffffffb4
    b6c4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    b6c8:	strd	r2, [fp, #-68]	; 0xffffffbc
    b6cc:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    b6d0:	strd	r2, [fp, #-60]	; 0xffffffc4
    b6d4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    b6d8:	strd	r2, [fp, #-52]	; 0xffffffcc
    b6dc:	ldrd	r0, [fp, #-180]	; 0xffffff4c
    b6e0:	ldrd	r2, [fp, #-188]	; 0xffffff44
    b6e4:	adds	r2, r2, r0
    b6e8:	adc	r3, r3, r1
    b6ec:	strd	r2, [fp, #-44]	; 0xffffffd4
    b6f0:	ldr	r3, [fp, #-104]	; 0xffffff98
    b6f4:	add	r3, r3, #1
    b6f8:	str	r3, [fp, #-104]	; 0xffffff98
    b6fc:	ldr	r3, [fp, #-104]	; 0xffffff98
    b700:	cmp	r3, #79	; 0x4f
    b704:	bls	b44c <rb_sha512_process_block+0x5ac>
    b708:	ldrd	r0, [fp, #-44]	; 0xffffffd4
    b70c:	ldrd	r2, [fp, #-116]	; 0xffffff8c
    b710:	adds	r2, r2, r0
    b714:	adc	r3, r3, r1
    b718:	strd	r2, [fp, #-44]	; 0xffffffd4
    b71c:	ldrd	r0, [fp, #-52]	; 0xffffffcc
    b720:	ldrd	r2, [fp, #-124]	; 0xffffff84
    b724:	adds	r2, r2, r0
    b728:	adc	r3, r3, r1
    b72c:	strd	r2, [fp, #-52]	; 0xffffffcc
    b730:	ldrd	r0, [fp, #-60]	; 0xffffffc4
    b734:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    b738:	adds	r2, r2, r0
    b73c:	adc	r3, r3, r1
    b740:	strd	r2, [fp, #-60]	; 0xffffffc4
    b744:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    b748:	ldrd	r2, [fp, #-140]	; 0xffffff74
    b74c:	adds	r2, r2, r0
    b750:	adc	r3, r3, r1
    b754:	strd	r2, [fp, #-68]	; 0xffffffbc
    b758:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    b75c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    b760:	adds	r2, r2, r0
    b764:	adc	r3, r3, r1
    b768:	strd	r2, [fp, #-76]	; 0xffffffb4
    b76c:	ldrd	r0, [fp, #-84]	; 0xffffffac
    b770:	ldrd	r2, [fp, #-156]	; 0xffffff64
    b774:	adds	r2, r2, r0
    b778:	adc	r3, r3, r1
    b77c:	strd	r2, [fp, #-84]	; 0xffffffac
    b780:	ldrd	r0, [fp, #-92]	; 0xffffffa4
    b784:	ldrd	r2, [fp, #-164]	; 0xffffff5c
    b788:	adds	r2, r2, r0
    b78c:	adc	r3, r3, r1
    b790:	strd	r2, [fp, #-92]	; 0xffffffa4
    b794:	ldrd	r0, [fp, #-100]	; 0xffffff9c
    b798:	ldrd	r2, [fp, #-172]	; 0xffffff54
    b79c:	adds	r2, r2, r0
    b7a0:	adc	r3, r3, r1
    b7a4:	strd	r2, [fp, #-100]	; 0xffffff9c
    b7a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b7ac:	sub	r3, r3, #16
    b7b0:	str	r3, [fp, #-36]	; 0xffffffdc
    b7b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b7b8:	cmp	r3, #0
    b7bc:	bne	af8c <rb_sha512_process_block+0xec>
    b7c0:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    b7c4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    b7c8:	strd	r2, [r1]
    b7cc:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    b7d0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    b7d4:	strd	r2, [r1, #8]
    b7d8:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    b7dc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    b7e0:	strd	r2, [r1, #16]
    b7e4:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    b7e8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    b7ec:	strd	r2, [r1, #24]
    b7f0:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    b7f4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    b7f8:	strd	r2, [r1, #32]
    b7fc:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    b800:	ldrd	r2, [fp, #-84]	; 0xffffffac
    b804:	strd	r2, [r1, #40]	; 0x28
    b808:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    b80c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    b810:	strd	r2, [r1, #48]	; 0x30
    b814:	ldr	r1, [fp, #-840]	; 0xfffffcb8
    b818:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    b81c:	strd	r2, [r1, #56]	; 0x38
    b820:	nop			; (mov r0, r0)
    b824:	sub	sp, fp, #24
    b828:	pop	{r4, r5, r6, r7, r8, r9, fp}
    b82c:	bx	lr
    b830:	.word	0x00016a2c

0000b834 <rb_sha512_init_ctx>:
    b834:	push	{fp}		; (str fp, [sp, #-4]!)
    b838:	add	fp, sp, #0
    b83c:	sub	sp, sp, #12
    b840:	str	r0, [fp, #-8]
    b844:	ldr	r1, [fp, #-8]
    b848:	add	r3, pc, #184	; 0xb8
    b84c:	ldrd	r2, [r3]
    b850:	strd	r2, [r1]
    b854:	ldr	r1, [fp, #-8]
    b858:	add	r3, pc, #176	; 0xb0
    b85c:	ldrd	r2, [r3]
    b860:	strd	r2, [r1, #8]
    b864:	ldr	r1, [fp, #-8]
    b868:	add	r3, pc, #168	; 0xa8
    b86c:	ldrd	r2, [r3]
    b870:	strd	r2, [r1, #16]
    b874:	ldr	r1, [fp, #-8]
    b878:	add	r3, pc, #160	; 0xa0
    b87c:	ldrd	r2, [r3]
    b880:	strd	r2, [r1, #24]
    b884:	ldr	r1, [fp, #-8]
    b888:	add	r3, pc, #152	; 0x98
    b88c:	ldrd	r2, [r3]
    b890:	strd	r2, [r1, #32]
    b894:	ldr	r1, [fp, #-8]
    b898:	add	r3, pc, #144	; 0x90
    b89c:	ldrd	r2, [r3]
    b8a0:	strd	r2, [r1, #40]	; 0x28
    b8a4:	ldr	r1, [fp, #-8]
    b8a8:	add	r3, pc, #136	; 0x88
    b8ac:	ldrd	r2, [r3]
    b8b0:	strd	r2, [r1, #48]	; 0x30
    b8b4:	ldr	r1, [fp, #-8]
    b8b8:	add	r3, pc, #128	; 0x80
    b8bc:	ldrd	r2, [r3]
    b8c0:	strd	r2, [r1, #56]	; 0x38
    b8c4:	ldr	r1, [fp, #-8]
    b8c8:	mov	r2, #0
    b8cc:	mov	r3, #0
    b8d0:	strd	r2, [r1, #72]	; 0x48
    b8d4:	ldr	r3, [fp, #-8]
    b8d8:	ldrd	r2, [r3, #72]	; 0x48
    b8dc:	ldr	r1, [fp, #-8]
    b8e0:	strd	r2, [r1, #64]	; 0x40
    b8e4:	ldr	r1, [fp, #-8]
    b8e8:	mov	r2, #0
    b8ec:	mov	r3, #0
    b8f0:	strd	r2, [r1, #80]	; 0x50
    b8f4:	nop			; (mov r0, r0)
    b8f8:	add	sp, fp, #0
    b8fc:	pop	{fp}		; (ldr fp, [sp], #4)
    b900:	bx	lr
    b904:	nop			; (mov r0, r0)
    b908:	.word	0xf3bcc908
    b90c:	.word	0x6a09e667
    b910:	.word	0x84caa73b
    b914:	.word	0xbb67ae85
    b918:	.word	0xfe94f82b
    b91c:	.word	0x3c6ef372
    b920:	.word	0x5f1d36f1
    b924:	.word	0xa54ff53a
    b928:	.word	0xade682d1
    b92c:	.word	0x510e527f
    b930:	.word	0x2b3e6c1f
    b934:	.word	0x9b05688c
    b938:	.word	0xfb41bd6b
    b93c:	.word	0x1f83d9ab
    b940:	.word	0x137e2179
    b944:	.word	0x5be0cd19

0000b948 <rb_sha512_finish_ctx>:
    b948:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b94c:	add	fp, sp, #28
    b950:	sub	sp, sp, #360	; 0x168
    b954:	str	r0, [fp, #-56]	; 0xffffffc8
    b958:	str	r1, [fp, #-60]	; 0xffffffc4
    b95c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b960:	ldrd	r2, [r3, #80]	; 0x50
    b964:	strd	r2, [fp, #-44]	; 0xffffffd4
    b968:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b96c:	ldrd	r0, [r3, #64]	; 0x40
    b970:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    b974:	adds	r0, r0, r2
    b978:	adc	r1, r1, r3
    b97c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b980:	strd	r0, [r3, #64]	; 0x40
    b984:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b988:	ldrd	r0, [r3, #64]	; 0x40
    b98c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    b990:	cmp	r1, r3
    b994:	cmpeq	r0, r2
    b998:	bcs	b9b4 <rb_sha512_finish_ctx+0x6c>
    b99c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b9a0:	ldrd	r2, [r3, #72]	; 0x48
    b9a4:	adds	r0, r2, #1
    b9a8:	adc	r1, r3, #0
    b9ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b9b0:	strd	r0, [r3, #72]	; 0x48
    b9b4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    b9b8:	cmp	r3, #0
    b9bc:	cmpeq	r2, #111	; 0x6f
    b9c0:	bls	b9d0 <rb_sha512_finish_ctx+0x88>
    b9c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b9c8:	rsb	r3, r3, #240	; 0xf0
    b9cc:	b	b9d8 <rb_sha512_finish_ctx+0x90>
    b9d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b9d4:	rsb	r3, r3, #112	; 0x70
    b9d8:	str	r3, [fp, #-48]	; 0xffffffd0
    b9dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b9e0:	add	r2, r3, #88	; 0x58
    b9e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b9e8:	add	r0, r3, r2
    b9ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
    b9f0:	ldr	r3, [pc, #2420]	; c36c <rb_sha512_finish_ctx+0xa24>
    b9f4:	add	r3, pc, r3
    b9f8:	mov	r1, r3
    b9fc:	bl	4880 <memcpy@plt>
    ba00:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ba04:	mov	r0, r3
    ba08:	mov	r1, #0
    ba0c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    ba10:	adds	r2, r2, r0
    ba14:	adc	r3, r3, r1
    ba18:	adds	r2, r2, #8
    ba1c:	adc	r3, r3, #0
    ba20:	add	r2, r2, #88	; 0x58
    ba24:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ba28:	add	r3, r3, r2
    ba2c:	str	r3, [fp, #-52]	; 0xffffffcc
    ba30:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ba34:	ldrd	r2, [r3, #64]	; 0x40
    ba38:	lsl	r3, r2, #27
    ba3c:	str	r3, [fp, #-232]	; 0xffffff18
    ba40:	mov	r3, #0
    ba44:	str	r3, [fp, #-236]	; 0xffffff14
    ba48:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ba4c:	ldrd	r2, [r3, #64]	; 0x40
    ba50:	lsl	r3, r2, #11
    ba54:	str	r3, [fp, #-240]	; 0xffffff10
    ba58:	mov	r3, #0
    ba5c:	str	r3, [fp, #-244]	; 0xffffff0c
    ba60:	mov	r2, #0
    ba64:	mov	r3, #16711680	; 0xff0000
    ba68:	ldrd	r0, [fp, #-244]	; 0xffffff0c
    ba6c:	and	r0, r0, r2
    ba70:	and	r1, r1, r3
    ba74:	mov	r2, r0
    ba78:	mov	r3, r1
    ba7c:	ldrd	r0, [fp, #-236]	; 0xffffff14
    ba80:	orr	r0, r0, r2
    ba84:	orr	r1, r1, r3
    ba88:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ba8c:	ldrd	r2, [r3, #64]	; 0x40
    ba90:	lsl	r9, r3, #27
    ba94:	orr	r9, r9, r2, lsr #5
    ba98:	lsl	r8, r2, #27
    ba9c:	mov	r2, #0
    baa0:	mov	r3, #65280	; 0xff00
    baa4:	and	r2, r2, r8
    baa8:	and	r3, r3, r9
    baac:	orr	r0, r0, r2
    bab0:	orr	r1, r1, r3
    bab4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bab8:	ldrd	r2, [r3, #64]	; 0x40
    babc:	lsl	ip, r3, #11
    bac0:	str	ip, [fp, #-64]	; 0xffffffc0
    bac4:	ldr	ip, [fp, #-64]	; 0xffffffc0
    bac8:	orr	ip, ip, r2, lsr #21
    bacc:	str	ip, [fp, #-64]	; 0xffffffc0
    bad0:	lsl	r3, r2, #11
    bad4:	str	r3, [fp, #-68]	; 0xffffffbc
    bad8:	mov	r2, #0
    badc:	mov	r3, #255	; 0xff
    bae0:	ldrd	r8, [fp, #-68]	; 0xffffffbc
    bae4:	and	r8, r8, r2
    bae8:	and	r9, r9, r3
    baec:	mov	r2, r8
    baf0:	mov	r3, r9
    baf4:	orr	r0, r0, r2
    baf8:	orr	r1, r1, r3
    bafc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bb00:	ldrd	r2, [r3, #64]	; 0x40
    bb04:	lsl	r5, r3, #3
    bb08:	orr	r5, r5, r2, lsr #29
    bb0c:	lsl	r4, r2, #3
    bb10:	lsr	r3, r4, #8
    bb14:	str	r3, [fp, #-76]	; 0xffffffb4
    bb18:	ldr	r3, [fp, #-76]	; 0xffffffb4
    bb1c:	orr	r3, r3, r5, lsl #24
    bb20:	str	r3, [fp, #-76]	; 0xffffffb4
    bb24:	lsr	r3, r5, #8
    bb28:	str	r3, [fp, #-72]	; 0xffffffb8
    bb2c:	mov	r2, #-16777216	; 0xff000000
    bb30:	mov	r3, #0
    bb34:	ldrd	r4, [fp, #-76]	; 0xffffffb4
    bb38:	and	r4, r4, r2
    bb3c:	and	r5, r5, r3
    bb40:	mov	r2, r4
    bb44:	mov	r3, r5
    bb48:	orr	r0, r0, r2
    bb4c:	orr	r1, r1, r3
    bb50:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bb54:	ldrd	r2, [r3, #64]	; 0x40
    bb58:	lsl	r7, r3, #3
    bb5c:	orr	r7, r7, r2, lsr #29
    bb60:	lsl	r6, r2, #3
    bb64:	lsr	r3, r6, #24
    bb68:	str	r3, [fp, #-84]	; 0xffffffac
    bb6c:	ldr	r3, [fp, #-84]	; 0xffffffac
    bb70:	orr	r3, r3, r7, lsl #8
    bb74:	str	r3, [fp, #-84]	; 0xffffffac
    bb78:	lsr	r3, r7, #24
    bb7c:	str	r3, [fp, #-80]	; 0xffffffb0
    bb80:	mov	r2, #16711680	; 0xff0000
    bb84:	mov	r3, #0
    bb88:	ldrd	r4, [fp, #-84]	; 0xffffffac
    bb8c:	and	r4, r4, r2
    bb90:	and	r5, r5, r3
    bb94:	mov	r2, r4
    bb98:	mov	r3, r5
    bb9c:	orr	r0, r0, r2
    bba0:	orr	r1, r1, r3
    bba4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bba8:	ldrd	r2, [r3, #64]	; 0x40
    bbac:	lsl	ip, r3, #3
    bbb0:	str	ip, [fp, #-88]	; 0xffffffa8
    bbb4:	ldr	ip, [fp, #-88]	; 0xffffffa8
    bbb8:	orr	ip, ip, r2, lsr #29
    bbbc:	str	ip, [fp, #-88]	; 0xffffffa8
    bbc0:	lsl	r3, r2, #3
    bbc4:	str	r3, [fp, #-92]	; 0xffffffa4
    bbc8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    bbcc:	lsr	r3, r3, #8
    bbd0:	str	r3, [fp, #-252]	; 0xffffff04
    bbd4:	mov	r3, #0
    bbd8:	str	r3, [fp, #-248]	; 0xffffff08
    bbdc:	mov	r2, #65280	; 0xff00
    bbe0:	mov	r3, #0
    bbe4:	ldrd	r4, [fp, #-252]	; 0xffffff04
    bbe8:	and	r4, r4, r2
    bbec:	and	r5, r5, r3
    bbf0:	mov	r2, r4
    bbf4:	mov	r3, r5
    bbf8:	orr	r0, r0, r2
    bbfc:	orr	r1, r1, r3
    bc00:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bc04:	ldrd	r2, [r3, #64]	; 0x40
    bc08:	lsl	ip, r3, #3
    bc0c:	str	ip, [fp, #-96]	; 0xffffffa0
    bc10:	ldr	ip, [fp, #-96]	; 0xffffffa0
    bc14:	orr	ip, ip, r2, lsr #29
    bc18:	str	ip, [fp, #-96]	; 0xffffffa0
    bc1c:	lsl	r3, r2, #3
    bc20:	str	r3, [fp, #-100]	; 0xffffff9c
    bc24:	ldr	r3, [fp, #-96]	; 0xffffffa0
    bc28:	lsr	r3, r3, #24
    bc2c:	str	r3, [fp, #-260]	; 0xfffffefc
    bc30:	mov	r3, #0
    bc34:	str	r3, [fp, #-256]	; 0xffffff00
    bc38:	sub	r3, fp, #260	; 0x104
    bc3c:	ldrd	r2, [r3]
    bc40:	orr	r2, r2, r0
    bc44:	orr	r3, r3, r1
    bc48:	mov	r0, r2
    bc4c:	mov	r1, r3
    bc50:	ldr	r3, [fp, #-52]	; 0xffffffcc
    bc54:	strd	r0, [r3]
    bc58:	ldr	r3, [fp, #-48]	; 0xffffffd0
    bc5c:	mov	r0, r3
    bc60:	mov	r1, #0
    bc64:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    bc68:	adds	r2, r2, r0
    bc6c:	adc	r3, r3, r1
    bc70:	add	r2, r2, #88	; 0x58
    bc74:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bc78:	add	r3, r3, r2
    bc7c:	str	r3, [fp, #-52]	; 0xffffffcc
    bc80:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bc84:	ldrd	r2, [r3, #72]	; 0x48
    bc88:	lsl	r1, r3, #3
    bc8c:	str	r1, [fp, #-104]	; 0xffffff98
    bc90:	ldr	r1, [fp, #-104]	; 0xffffff98
    bc94:	orr	r1, r1, r2, lsr #29
    bc98:	str	r1, [fp, #-104]	; 0xffffff98
    bc9c:	lsl	r3, r2, #3
    bca0:	str	r3, [fp, #-108]	; 0xffffff94
    bca4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bca8:	ldrd	r2, [r3, #64]	; 0x40
    bcac:	lsr	r3, r3, #29
    bcb0:	str	r3, [fp, #-268]	; 0xfffffef4
    bcb4:	mov	r3, #0
    bcb8:	str	r3, [fp, #-264]	; 0xfffffef8
    bcbc:	ldrd	r2, [fp, #-108]	; 0xffffff94
    bcc0:	sub	r1, fp, #268	; 0x10c
    bcc4:	ldrd	r0, [r1]
    bcc8:	orr	r2, r2, r0
    bccc:	orr	r3, r3, r1
    bcd0:	lsl	r3, r2, #24
    bcd4:	str	r3, [fp, #-272]	; 0xfffffef0
    bcd8:	mov	r3, #0
    bcdc:	str	r3, [fp, #-276]	; 0xfffffeec
    bce0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bce4:	ldrd	r2, [r3, #72]	; 0x48
    bce8:	lsl	r1, r3, #3
    bcec:	str	r1, [fp, #-112]	; 0xffffff90
    bcf0:	ldr	r1, [fp, #-112]	; 0xffffff90
    bcf4:	orr	r1, r1, r2, lsr #29
    bcf8:	str	r1, [fp, #-112]	; 0xffffff90
    bcfc:	lsl	r3, r2, #3
    bd00:	str	r3, [fp, #-116]	; 0xffffff8c
    bd04:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bd08:	ldrd	r2, [r3, #64]	; 0x40
    bd0c:	lsr	r3, r3, #29
    bd10:	str	r3, [fp, #-284]	; 0xfffffee4
    bd14:	mov	r3, #0
    bd18:	str	r3, [fp, #-280]	; 0xfffffee8
    bd1c:	ldrd	r2, [fp, #-116]	; 0xffffff8c
    bd20:	sub	r1, fp, #284	; 0x11c
    bd24:	ldrd	r0, [r1]
    bd28:	orr	r2, r2, r0
    bd2c:	orr	r3, r3, r1
    bd30:	lsl	r3, r2, #8
    bd34:	str	r3, [fp, #-288]	; 0xfffffee0
    bd38:	mov	r3, #0
    bd3c:	str	r3, [fp, #-292]	; 0xfffffedc
    bd40:	mov	r2, #0
    bd44:	mov	r3, #16711680	; 0xff0000
    bd48:	sub	r1, fp, #292	; 0x124
    bd4c:	ldrd	r0, [r1]
    bd50:	and	r0, r0, r2
    bd54:	and	r1, r1, r3
    bd58:	mov	r2, r0
    bd5c:	mov	r3, r1
    bd60:	sub	r1, fp, #276	; 0x114
    bd64:	ldrd	r0, [r1]
    bd68:	orr	r0, r0, r2
    bd6c:	orr	r1, r1, r3
    bd70:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bd74:	ldrd	r2, [r3, #72]	; 0x48
    bd78:	lsl	ip, r3, #3
    bd7c:	str	ip, [fp, #-120]	; 0xffffff88
    bd80:	ldr	ip, [fp, #-120]	; 0xffffff88
    bd84:	orr	ip, ip, r2, lsr #29
    bd88:	str	ip, [fp, #-120]	; 0xffffff88
    bd8c:	lsl	r3, r2, #3
    bd90:	str	r3, [fp, #-124]	; 0xffffff84
    bd94:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bd98:	ldrd	r2, [r3, #64]	; 0x40
    bd9c:	lsr	r3, r3, #29
    bda0:	str	r3, [fp, #-300]	; 0xfffffed4
    bda4:	mov	r3, #0
    bda8:	str	r3, [fp, #-296]	; 0xfffffed8
    bdac:	ldrd	r2, [fp, #-124]	; 0xffffff84
    bdb0:	sub	ip, fp, #300	; 0x12c
    bdb4:	ldrd	r4, [ip]
    bdb8:	orr	r2, r2, r4
    bdbc:	orr	r3, r3, r5
    bdc0:	lsl	ip, r3, #24
    bdc4:	str	ip, [fp, #-128]	; 0xffffff80
    bdc8:	ldr	ip, [fp, #-128]	; 0xffffff80
    bdcc:	orr	ip, ip, r2, lsr #8
    bdd0:	str	ip, [fp, #-128]	; 0xffffff80
    bdd4:	lsl	r3, r2, #24
    bdd8:	str	r3, [fp, #-132]	; 0xffffff7c
    bddc:	mov	r2, #0
    bde0:	mov	r3, #65280	; 0xff00
    bde4:	ldrd	r4, [fp, #-132]	; 0xffffff7c
    bde8:	and	r4, r4, r2
    bdec:	and	r5, r5, r3
    bdf0:	mov	r2, r4
    bdf4:	mov	r3, r5
    bdf8:	orr	r0, r0, r2
    bdfc:	orr	r1, r1, r3
    be00:	ldr	r3, [fp, #-56]	; 0xffffffc8
    be04:	ldrd	r2, [r3, #72]	; 0x48
    be08:	lsl	ip, r3, #3
    be0c:	str	ip, [fp, #-136]	; 0xffffff78
    be10:	ldr	ip, [fp, #-136]	; 0xffffff78
    be14:	orr	ip, ip, r2, lsr #29
    be18:	str	ip, [fp, #-136]	; 0xffffff78
    be1c:	lsl	r3, r2, #3
    be20:	str	r3, [fp, #-140]	; 0xffffff74
    be24:	ldr	r3, [fp, #-56]	; 0xffffffc8
    be28:	ldrd	r2, [r3, #64]	; 0x40
    be2c:	lsr	r3, r3, #29
    be30:	str	r3, [fp, #-308]	; 0xfffffecc
    be34:	mov	r3, #0
    be38:	str	r3, [fp, #-304]	; 0xfffffed0
    be3c:	ldrd	r2, [fp, #-140]	; 0xffffff74
    be40:	sub	ip, fp, #308	; 0x134
    be44:	ldrd	r4, [ip]
    be48:	orr	r2, r2, r4
    be4c:	orr	r3, r3, r5
    be50:	lsl	ip, r3, #8
    be54:	str	ip, [fp, #-144]	; 0xffffff70
    be58:	ldr	ip, [fp, #-144]	; 0xffffff70
    be5c:	orr	ip, ip, r2, lsr #24
    be60:	str	ip, [fp, #-144]	; 0xffffff70
    be64:	lsl	r3, r2, #8
    be68:	str	r3, [fp, #-148]	; 0xffffff6c
    be6c:	mov	r2, #0
    be70:	mov	r3, #255	; 0xff
    be74:	ldrd	r4, [fp, #-148]	; 0xffffff6c
    be78:	and	r4, r4, r2
    be7c:	and	r5, r5, r3
    be80:	mov	r2, r4
    be84:	mov	r3, r5
    be88:	orr	r0, r0, r2
    be8c:	orr	r1, r1, r3
    be90:	ldr	r3, [fp, #-56]	; 0xffffffc8
    be94:	ldrd	r2, [r3, #72]	; 0x48
    be98:	lsl	ip, r3, #3
    be9c:	str	ip, [fp, #-152]	; 0xffffff68
    bea0:	ldr	ip, [fp, #-152]	; 0xffffff68
    bea4:	orr	ip, ip, r2, lsr #29
    bea8:	str	ip, [fp, #-152]	; 0xffffff68
    beac:	lsl	r3, r2, #3
    beb0:	str	r3, [fp, #-156]	; 0xffffff64
    beb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    beb8:	ldrd	r2, [r3, #64]	; 0x40
    bebc:	lsr	r3, r3, #29
    bec0:	str	r3, [fp, #-316]	; 0xfffffec4
    bec4:	mov	r3, #0
    bec8:	str	r3, [fp, #-312]	; 0xfffffec8
    becc:	ldrd	r2, [fp, #-156]	; 0xffffff64
    bed0:	sub	ip, fp, #316	; 0x13c
    bed4:	ldrd	r4, [ip]
    bed8:	orr	r2, r2, r4
    bedc:	orr	r3, r3, r5
    bee0:	lsr	ip, r2, #8
    bee4:	str	ip, [fp, #-164]	; 0xffffff5c
    bee8:	ldr	ip, [fp, #-164]	; 0xffffff5c
    beec:	orr	ip, ip, r3, lsl #24
    bef0:	str	ip, [fp, #-164]	; 0xffffff5c
    bef4:	lsr	r3, r3, #8
    bef8:	str	r3, [fp, #-160]	; 0xffffff60
    befc:	mov	r2, #-16777216	; 0xff000000
    bf00:	mov	r3, #0
    bf04:	ldrd	r4, [fp, #-164]	; 0xffffff5c
    bf08:	and	r4, r4, r2
    bf0c:	and	r5, r5, r3
    bf10:	mov	r2, r4
    bf14:	mov	r3, r5
    bf18:	orr	r0, r0, r2
    bf1c:	orr	r1, r1, r3
    bf20:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bf24:	ldrd	r2, [r3, #72]	; 0x48
    bf28:	lsl	ip, r3, #3
    bf2c:	str	ip, [fp, #-168]	; 0xffffff58
    bf30:	ldr	ip, [fp, #-168]	; 0xffffff58
    bf34:	orr	ip, ip, r2, lsr #29
    bf38:	str	ip, [fp, #-168]	; 0xffffff58
    bf3c:	lsl	r3, r2, #3
    bf40:	str	r3, [fp, #-172]	; 0xffffff54
    bf44:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bf48:	ldrd	r2, [r3, #64]	; 0x40
    bf4c:	lsr	r3, r3, #29
    bf50:	str	r3, [fp, #-324]	; 0xfffffebc
    bf54:	mov	r3, #0
    bf58:	str	r3, [fp, #-320]	; 0xfffffec0
    bf5c:	ldrd	r2, [fp, #-172]	; 0xffffff54
    bf60:	sub	ip, fp, #324	; 0x144
    bf64:	ldrd	r4, [ip]
    bf68:	orr	r2, r2, r4
    bf6c:	orr	r3, r3, r5
    bf70:	lsr	ip, r2, #24
    bf74:	str	ip, [fp, #-180]	; 0xffffff4c
    bf78:	ldr	ip, [fp, #-180]	; 0xffffff4c
    bf7c:	orr	ip, ip, r3, lsl #8
    bf80:	str	ip, [fp, #-180]	; 0xffffff4c
    bf84:	lsr	r3, r3, #24
    bf88:	str	r3, [fp, #-176]	; 0xffffff50
    bf8c:	mov	r2, #16711680	; 0xff0000
    bf90:	mov	r3, #0
    bf94:	ldrd	r4, [fp, #-180]	; 0xffffff4c
    bf98:	and	r4, r4, r2
    bf9c:	and	r5, r5, r3
    bfa0:	mov	r2, r4
    bfa4:	mov	r3, r5
    bfa8:	orr	r0, r0, r2
    bfac:	orr	r1, r1, r3
    bfb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bfb4:	ldrd	r2, [r3, #72]	; 0x48
    bfb8:	lsl	ip, r3, #3
    bfbc:	str	ip, [fp, #-184]	; 0xffffff48
    bfc0:	ldr	ip, [fp, #-184]	; 0xffffff48
    bfc4:	orr	ip, ip, r2, lsr #29
    bfc8:	str	ip, [fp, #-184]	; 0xffffff48
    bfcc:	lsl	r3, r2, #3
    bfd0:	str	r3, [fp, #-188]	; 0xffffff44
    bfd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bfd8:	ldrd	r2, [r3, #64]	; 0x40
    bfdc:	lsr	r3, r3, #29
    bfe0:	str	r3, [fp, #-332]	; 0xfffffeb4
    bfe4:	mov	r3, #0
    bfe8:	str	r3, [fp, #-328]	; 0xfffffeb8
    bfec:	ldrd	r2, [fp, #-188]	; 0xffffff44
    bff0:	sub	ip, fp, #332	; 0x14c
    bff4:	ldrd	r4, [ip]
    bff8:	orr	r2, r2, r4
    bffc:	orr	r3, r3, r5
    c000:	lsr	r3, r3, #8
    c004:	str	r3, [fp, #-340]	; 0xfffffeac
    c008:	mov	r3, #0
    c00c:	str	r3, [fp, #-336]	; 0xfffffeb0
    c010:	mov	r2, #65280	; 0xff00
    c014:	mov	r3, #0
    c018:	sub	ip, fp, #340	; 0x154
    c01c:	ldrd	r4, [ip]
    c020:	and	r4, r4, r2
    c024:	and	r5, r5, r3
    c028:	mov	r2, r4
    c02c:	mov	r3, r5
    c030:	orr	r0, r0, r2
    c034:	orr	r1, r1, r3
    c038:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c03c:	ldrd	r2, [r3, #72]	; 0x48
    c040:	lsl	ip, r3, #3
    c044:	str	ip, [fp, #-192]	; 0xffffff40
    c048:	ldr	ip, [fp, #-192]	; 0xffffff40
    c04c:	orr	ip, ip, r2, lsr #29
    c050:	str	ip, [fp, #-192]	; 0xffffff40
    c054:	lsl	r3, r2, #3
    c058:	str	r3, [fp, #-196]	; 0xffffff3c
    c05c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c060:	ldrd	r2, [r3, #64]	; 0x40
    c064:	lsr	r3, r3, #29
    c068:	str	r3, [fp, #-348]	; 0xfffffea4
    c06c:	mov	r3, #0
    c070:	str	r3, [fp, #-344]	; 0xfffffea8
    c074:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    c078:	sub	ip, fp, #348	; 0x15c
    c07c:	ldrd	r4, [ip]
    c080:	orr	r2, r2, r4
    c084:	orr	r3, r3, r5
    c088:	lsr	r3, r3, #24
    c08c:	str	r3, [fp, #-356]	; 0xfffffe9c
    c090:	mov	r3, #0
    c094:	str	r3, [fp, #-352]	; 0xfffffea0
    c098:	sub	r3, fp, #356	; 0x164
    c09c:	ldrd	r2, [r3]
    c0a0:	orr	r2, r2, r0
    c0a4:	orr	r3, r3, r1
    c0a8:	mov	r0, r2
    c0ac:	mov	r1, r3
    c0b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    c0b4:	strd	r0, [r3]
    c0b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c0bc:	add	r0, r3, #88	; 0x58
    c0c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
    c0c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c0c8:	add	r3, r2, r3
    c0cc:	add	r3, r3, #16
    c0d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c0d4:	mov	r1, r3
    c0d8:	bl	aea0 <rb_sha512_process_block>
    c0dc:	mov	r3, #0
    c0e0:	str	r3, [fp, #-32]	; 0xffffffe0
    c0e4:	b	c350 <rb_sha512_finish_ctx+0xa08>
    c0e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c0ec:	lsl	r2, r3, #3
    c0f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    c0f4:	add	ip, r3, r2
    c0f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c0fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c100:	lsl	r3, r3, #3
    c104:	add	r3, r2, r3
    c108:	ldrd	r2, [r3]
    c10c:	lsl	r3, r2, #24
    c110:	str	r3, [fp, #-360]	; 0xfffffe98
    c114:	mov	r3, #0
    c118:	str	r3, [fp, #-364]	; 0xfffffe94
    c11c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c120:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c124:	lsl	r3, r3, #3
    c128:	add	r3, r2, r3
    c12c:	ldrd	r2, [r3]
    c130:	lsl	r3, r2, #8
    c134:	str	r3, [fp, #-368]	; 0xfffffe90
    c138:	mov	r3, #0
    c13c:	str	r3, [fp, #-372]	; 0xfffffe8c
    c140:	mov	r2, #0
    c144:	mov	r3, #16711680	; 0xff0000
    c148:	sub	r1, fp, #372	; 0x174
    c14c:	ldrd	r0, [r1]
    c150:	and	r0, r0, r2
    c154:	and	r1, r1, r3
    c158:	mov	r2, r0
    c15c:	mov	r3, r1
    c160:	sub	r1, fp, #364	; 0x16c
    c164:	ldrd	r0, [r1]
    c168:	orr	r0, r0, r2
    c16c:	orr	r1, r1, r3
    c170:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c174:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c178:	lsl	r3, r3, #3
    c17c:	add	r3, r2, r3
    c180:	ldrd	r2, [r3]
    c184:	lsl	lr, r3, #24
    c188:	str	lr, [fp, #-200]	; 0xffffff38
    c18c:	ldr	lr, [fp, #-200]	; 0xffffff38
    c190:	orr	lr, lr, r2, lsr #8
    c194:	str	lr, [fp, #-200]	; 0xffffff38
    c198:	lsl	r3, r2, #24
    c19c:	str	r3, [fp, #-204]	; 0xffffff34
    c1a0:	mov	r2, #0
    c1a4:	mov	r3, #65280	; 0xff00
    c1a8:	ldrd	r4, [fp, #-204]	; 0xffffff34
    c1ac:	and	r4, r4, r2
    c1b0:	and	r5, r5, r3
    c1b4:	mov	r2, r4
    c1b8:	mov	r3, r5
    c1bc:	orr	r0, r0, r2
    c1c0:	orr	r1, r1, r3
    c1c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c1c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c1cc:	lsl	r3, r3, #3
    c1d0:	add	r3, r2, r3
    c1d4:	ldrd	r2, [r3]
    c1d8:	lsl	lr, r3, #8
    c1dc:	str	lr, [fp, #-208]	; 0xffffff30
    c1e0:	ldr	lr, [fp, #-208]	; 0xffffff30
    c1e4:	orr	lr, lr, r2, lsr #24
    c1e8:	str	lr, [fp, #-208]	; 0xffffff30
    c1ec:	lsl	r3, r2, #8
    c1f0:	str	r3, [fp, #-212]	; 0xffffff2c
    c1f4:	mov	r2, #0
    c1f8:	mov	r3, #255	; 0xff
    c1fc:	ldrd	r4, [fp, #-212]	; 0xffffff2c
    c200:	and	r4, r4, r2
    c204:	and	r5, r5, r3
    c208:	mov	r2, r4
    c20c:	mov	r3, r5
    c210:	orr	r0, r0, r2
    c214:	orr	r1, r1, r3
    c218:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c21c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c220:	lsl	r3, r3, #3
    c224:	add	r3, r2, r3
    c228:	ldrd	r2, [r3]
    c22c:	lsr	lr, r2, #8
    c230:	str	lr, [fp, #-220]	; 0xffffff24
    c234:	ldr	lr, [fp, #-220]	; 0xffffff24
    c238:	orr	lr, lr, r3, lsl #24
    c23c:	str	lr, [fp, #-220]	; 0xffffff24
    c240:	lsr	r3, r3, #8
    c244:	str	r3, [fp, #-216]	; 0xffffff28
    c248:	mov	r2, #-16777216	; 0xff000000
    c24c:	mov	r3, #0
    c250:	ldrd	r4, [fp, #-220]	; 0xffffff24
    c254:	and	r4, r4, r2
    c258:	and	r5, r5, r3
    c25c:	mov	r2, r4
    c260:	mov	r3, r5
    c264:	orr	r0, r0, r2
    c268:	orr	r1, r1, r3
    c26c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c270:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c274:	lsl	r3, r3, #3
    c278:	add	r3, r2, r3
    c27c:	ldrd	r2, [r3]
    c280:	lsr	lr, r2, #24
    c284:	str	lr, [fp, #-228]	; 0xffffff1c
    c288:	ldr	lr, [fp, #-228]	; 0xffffff1c
    c28c:	orr	lr, lr, r3, lsl #8
    c290:	str	lr, [fp, #-228]	; 0xffffff1c
    c294:	lsr	r3, r3, #24
    c298:	str	r3, [fp, #-224]	; 0xffffff20
    c29c:	mov	r2, #16711680	; 0xff0000
    c2a0:	mov	r3, #0
    c2a4:	ldrd	r4, [fp, #-228]	; 0xffffff1c
    c2a8:	and	r4, r4, r2
    c2ac:	and	r5, r5, r3
    c2b0:	mov	r2, r4
    c2b4:	mov	r3, r5
    c2b8:	orr	r0, r0, r2
    c2bc:	orr	r1, r1, r3
    c2c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c2c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c2c8:	lsl	r3, r3, #3
    c2cc:	add	r3, r2, r3
    c2d0:	ldrd	r2, [r3]
    c2d4:	lsr	r3, r3, #8
    c2d8:	str	r3, [fp, #-380]	; 0xfffffe84
    c2dc:	mov	r3, #0
    c2e0:	str	r3, [fp, #-376]	; 0xfffffe88
    c2e4:	mov	r2, #65280	; 0xff00
    c2e8:	mov	r3, #0
    c2ec:	sub	lr, fp, #380	; 0x17c
    c2f0:	ldrd	r4, [lr]
    c2f4:	and	r4, r4, r2
    c2f8:	and	r5, r5, r3
    c2fc:	mov	r2, r4
    c300:	mov	r3, r5
    c304:	orr	r0, r0, r2
    c308:	orr	r1, r1, r3
    c30c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c310:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c314:	lsl	r3, r3, #3
    c318:	add	r3, r2, r3
    c31c:	ldrd	r2, [r3]
    c320:	lsr	r3, r3, #24
    c324:	str	r3, [fp, #-388]	; 0xfffffe7c
    c328:	mov	r3, #0
    c32c:	str	r3, [fp, #-384]	; 0xfffffe80
    c330:	sub	r3, fp, #388	; 0x184
    c334:	ldrd	r2, [r3]
    c338:	orr	r2, r2, r0
    c33c:	orr	r3, r3, r1
    c340:	strd	r2, [ip]
    c344:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c348:	add	r3, r3, #1
    c34c:	str	r3, [fp, #-32]	; 0xffffffe0
    c350:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c354:	cmp	r3, #7
    c358:	bls	c0e8 <rb_sha512_finish_ctx+0x7a0>
    c35c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    c360:	mov	r0, r3
    c364:	sub	sp, fp, #28
    c368:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    c36c:	.word	0x00016508

0000c370 <rb_sha512_process_bytes>:
    c370:	push	{fp, lr}
    c374:	add	fp, sp, #4
    c378:	sub	sp, sp, #32
    c37c:	str	r0, [fp, #-24]	; 0xffffffe8
    c380:	str	r1, [fp, #-28]	; 0xffffffe4
    c384:	str	r2, [fp, #-32]	; 0xffffffe0
    c388:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c38c:	ldrd	r2, [r3, #80]	; 0x50
    c390:	orrs	r3, r2, r3
    c394:	beq	c4b8 <rb_sha512_process_bytes+0x148>
    c398:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c39c:	ldrd	r2, [r3, #80]	; 0x50
    c3a0:	mov	r3, r2
    c3a4:	str	r3, [fp, #-12]
    c3a8:	ldr	r3, [fp, #-12]
    c3ac:	rsb	r2, r3, #256	; 0x100
    c3b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c3b4:	cmp	r2, r3
    c3b8:	movcc	r3, r2
    c3bc:	movcs	r3, r3
    c3c0:	str	r3, [fp, #-16]
    c3c4:	ldr	r3, [fp, #-12]
    c3c8:	add	r3, r3, #88	; 0x58
    c3cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c3d0:	add	r3, r2, r3
    c3d4:	ldr	r2, [fp, #-16]
    c3d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c3dc:	mov	r0, r3
    c3e0:	bl	4880 <memcpy@plt>
    c3e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c3e8:	ldrd	r0, [r3, #80]	; 0x50
    c3ec:	ldr	r3, [fp, #-16]
    c3f0:	mov	r2, r3
    c3f4:	mov	r3, #0
    c3f8:	adds	r2, r2, r0
    c3fc:	adc	r3, r3, r1
    c400:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c404:	strd	r2, [r1, #80]	; 0x50
    c408:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c40c:	ldrd	r2, [r3, #80]	; 0x50
    c410:	cmp	r3, #0
    c414:	cmpeq	r2, #128	; 0x80
    c418:	bls	c498 <rb_sha512_process_bytes+0x128>
    c41c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c420:	add	r0, r3, #88	; 0x58
    c424:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c428:	ldrd	r2, [r3, #80]	; 0x50
    c42c:	mov	r3, r2
    c430:	bic	r3, r3, #127	; 0x7f
    c434:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c438:	mov	r1, r3
    c43c:	bl	aea0 <rb_sha512_process_block>
    c440:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c444:	ldrd	r2, [r3, #80]	; 0x50
    c448:	mov	r0, #127	; 0x7f
    c44c:	mov	r1, #0
    c450:	and	r2, r2, r0
    c454:	and	r3, r3, r1
    c458:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c45c:	strd	r2, [r1, #80]	; 0x50
    c460:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c464:	add	r0, r3, #88	; 0x58
    c468:	ldr	r2, [fp, #-12]
    c46c:	ldr	r3, [fp, #-16]
    c470:	add	r3, r2, r3
    c474:	bic	r3, r3, #127	; 0x7f
    c478:	add	r3, r3, #88	; 0x58
    c47c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c480:	add	r1, r2, r3
    c484:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c488:	ldrd	r2, [r3, #80]	; 0x50
    c48c:	mov	r3, r2
    c490:	mov	r2, r3
    c494:	bl	4880 <memcpy@plt>
    c498:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c49c:	ldr	r3, [fp, #-16]
    c4a0:	add	r3, r2, r3
    c4a4:	str	r3, [fp, #-24]	; 0xffffffe8
    c4a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    c4ac:	ldr	r3, [fp, #-16]
    c4b0:	sub	r3, r2, r3
    c4b4:	str	r3, [fp, #-28]	; 0xffffffe4
    c4b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c4bc:	cmp	r3, #127	; 0x7f
    c4c0:	bls	c564 <rb_sha512_process_bytes+0x1f4>
    c4c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c4c8:	and	r3, r3, #7
    c4cc:	cmp	r3, #0
    c4d0:	beq	c52c <rb_sha512_process_bytes+0x1bc>
    c4d4:	b	c51c <rb_sha512_process_bytes+0x1ac>
    c4d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c4dc:	add	r3, r3, #88	; 0x58
    c4e0:	mov	r2, #128	; 0x80
    c4e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c4e8:	mov	r0, r3
    c4ec:	bl	4880 <memcpy@plt>
    c4f0:	mov	r3, r0
    c4f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c4f8:	mov	r1, #128	; 0x80
    c4fc:	mov	r0, r3
    c500:	bl	aea0 <rb_sha512_process_block>
    c504:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c508:	add	r3, r3, #128	; 0x80
    c50c:	str	r3, [fp, #-24]	; 0xffffffe8
    c510:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c514:	sub	r3, r3, #128	; 0x80
    c518:	str	r3, [fp, #-28]	; 0xffffffe4
    c51c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c520:	cmp	r3, #128	; 0x80
    c524:	bhi	c4d8 <rb_sha512_process_bytes+0x168>
    c528:	b	c564 <rb_sha512_process_bytes+0x1f4>
    c52c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c530:	bic	r3, r3, #127	; 0x7f
    c534:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c538:	mov	r1, r3
    c53c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c540:	bl	aea0 <rb_sha512_process_block>
    c544:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c548:	bic	r3, r3, #127	; 0x7f
    c54c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c550:	add	r3, r2, r3
    c554:	str	r3, [fp, #-24]	; 0xffffffe8
    c558:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c55c:	and	r3, r3, #127	; 0x7f
    c560:	str	r3, [fp, #-28]	; 0xffffffe4
    c564:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c568:	cmp	r3, #0
    c56c:	beq	c610 <rb_sha512_process_bytes+0x2a0>
    c570:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c574:	ldrd	r2, [r3, #80]	; 0x50
    c578:	mov	r3, r2
    c57c:	str	r3, [fp, #-8]
    c580:	ldr	r3, [fp, #-8]
    c584:	add	r3, r3, #88	; 0x58
    c588:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c58c:	add	r3, r2, r3
    c590:	ldr	r2, [fp, #-28]	; 0xffffffe4
    c594:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c598:	mov	r0, r3
    c59c:	bl	4880 <memcpy@plt>
    c5a0:	ldr	r2, [fp, #-8]
    c5a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c5a8:	add	r3, r2, r3
    c5ac:	str	r3, [fp, #-8]
    c5b0:	ldr	r3, [fp, #-8]
    c5b4:	cmp	r3, #127	; 0x7f
    c5b8:	bls	c5fc <rb_sha512_process_bytes+0x28c>
    c5bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c5c0:	add	r3, r3, #88	; 0x58
    c5c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c5c8:	mov	r1, #128	; 0x80
    c5cc:	mov	r0, r3
    c5d0:	bl	aea0 <rb_sha512_process_block>
    c5d4:	ldr	r3, [fp, #-8]
    c5d8:	sub	r3, r3, #128	; 0x80
    c5dc:	str	r3, [fp, #-8]
    c5e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c5e4:	add	r0, r3, #88	; 0x58
    c5e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c5ec:	add	r3, r3, #216	; 0xd8
    c5f0:	ldr	r2, [fp, #-8]
    c5f4:	mov	r1, r3
    c5f8:	bl	4880 <memcpy@plt>
    c5fc:	ldr	r3, [fp, #-8]
    c600:	mov	r2, r3
    c604:	mov	r3, #0
    c608:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c60c:	strd	r2, [r1, #80]	; 0x50
    c610:	nop			; (mov r0, r0)
    c614:	sub	sp, fp, #4
    c618:	pop	{fp, pc}

0000c61c <rb_sha512_crypt_r>:
    c61c:	push	{r4, r5, r6, fp, lr}
    c620:	add	fp, sp, #16
    c624:	sub	sp, sp, #1088	; 0x440
    c628:	sub	sp, sp, #4
    c62c:	str	r0, [fp, #-1088]	; 0xfffffbc0
    c630:	str	r1, [fp, #-1092]	; 0xfffffbbc
    c634:	str	r2, [fp, #-1096]	; 0xfffffbb8
    c638:	str	r3, [fp, #-1100]	; 0xfffffbb4
    c63c:	mov	r3, #0
    c640:	str	r3, [fp, #-32]	; 0xffffffe0
    c644:	mov	r3, #0
    c648:	str	r3, [fp, #-36]	; 0xffffffdc
    c64c:	ldr	r3, [pc, #4016]	; d604 <rb_sha512_crypt_r+0xfe8>
    c650:	str	r3, [fp, #-40]	; 0xffffffd8
    c654:	mov	r3, #0
    c658:	str	r3, [fp, #-44]	; 0xffffffd4
    c65c:	mov	r2, #3
    c660:	ldr	r1, [fp, #-1092]	; 0xfffffbbc
    c664:	ldr	r3, [pc, #3996]	; d608 <rb_sha512_crypt_r+0xfec>
    c668:	add	r3, pc, r3
    c66c:	mov	r0, r3
    c670:	bl	4c94 <strncmp@plt>
    c674:	mov	r3, r0
    c678:	cmp	r3, #0
    c67c:	bne	c68c <rb_sha512_crypt_r+0x70>
    c680:	ldr	r3, [fp, #-1092]	; 0xfffffbbc
    c684:	add	r3, r3, #3
    c688:	str	r3, [fp, #-1092]	; 0xfffffbbc
    c68c:	mov	r2, #7
    c690:	ldr	r3, [pc, #3956]	; d60c <rb_sha512_crypt_r+0xff0>
    c694:	add	r3, pc, r3
    c698:	mov	r1, r3
    c69c:	ldr	r0, [fp, #-1092]	; 0xfffffbbc
    c6a0:	bl	4c94 <strncmp@plt>
    c6a4:	mov	r3, r0
    c6a8:	cmp	r3, #0
    c6ac:	bne	c72c <rb_sha512_crypt_r+0x110>
    c6b0:	ldr	r3, [fp, #-1092]	; 0xfffffbbc
    c6b4:	add	r3, r3, #7
    c6b8:	str	r3, [fp, #-224]	; 0xffffff20
    c6bc:	sub	r3, fp, #1072	; 0x430
    c6c0:	sub	r3, r3, #4
    c6c4:	sub	r3, r3, #4
    c6c8:	mov	r2, #10
    c6cc:	mov	r1, r3
    c6d0:	ldr	r0, [fp, #-224]	; 0xffffff20
    c6d4:	bl	4874 <strtoul@plt>
    c6d8:	str	r0, [fp, #-228]	; 0xffffff1c
    c6dc:	ldr	r3, [fp, #-1080]	; 0xfffffbc8
    c6e0:	ldrb	r3, [r3]
    c6e4:	cmp	r3, #36	; 0x24
    c6e8:	bne	c72c <rb_sha512_crypt_r+0x110>
    c6ec:	ldr	r3, [fp, #-1080]	; 0xfffffbc8
    c6f0:	add	r3, r3, #1
    c6f4:	str	r3, [fp, #-1092]	; 0xfffffbbc
    c6f8:	ldr	r3, [fp, #-228]	; 0xffffff1c
    c6fc:	cmp	r3, #1000	; 0x3e8
    c700:	bcc	c71c <rb_sha512_crypt_r+0x100>
    c704:	ldr	r3, [fp, #-228]	; 0xffffff1c
    c708:	ldr	r2, [pc, #3840]	; d610 <rb_sha512_crypt_r+0xff4>
    c70c:	cmp	r3, r2
    c710:	movcc	r3, r3
    c714:	movcs	r3, r2
    c718:	b	c720 <rb_sha512_crypt_r+0x104>
    c71c:	mov	r3, #1000	; 0x3e8
    c720:	str	r3, [fp, #-40]	; 0xffffffd8
    c724:	mov	r3, #1
    c728:	str	r3, [fp, #-44]	; 0xffffffd4
    c72c:	ldr	r3, [pc, #3808]	; d614 <rb_sha512_crypt_r+0xff8>
    c730:	add	r3, pc, r3
    c734:	mov	r1, r3
    c738:	ldr	r0, [fp, #-1092]	; 0xfffffbbc
    c73c:	bl	4c64 <strcspn@plt>
    c740:	mov	r3, r0
    c744:	cmp	r3, #15
    c748:	bhi	c768 <rb_sha512_crypt_r+0x14c>
    c74c:	ldr	r3, [pc, #3780]	; d618 <rb_sha512_crypt_r+0xffc>
    c750:	add	r3, pc, r3
    c754:	mov	r1, r3
    c758:	ldr	r0, [fp, #-1092]	; 0xfffffbbc
    c75c:	bl	4c64 <strcspn@plt>
    c760:	mov	r3, r0
    c764:	b	c76c <rb_sha512_crypt_r+0x150>
    c768:	mov	r3, #16
    c76c:	str	r3, [fp, #-232]	; 0xffffff18
    c770:	ldr	r0, [fp, #-1088]	; 0xfffffbc0
    c774:	bl	485c <strlen@plt>
    c778:	str	r0, [fp, #-236]	; 0xffffff14
    c77c:	ldr	r3, [fp, #-1088]	; 0xfffffbc0
    c780:	and	r3, r3, #7
    c784:	cmp	r3, #0
    c788:	beq	c7ec <rb_sha512_crypt_r+0x1d0>
    c78c:	ldr	r3, [fp, #-236]	; 0xffffff14
    c790:	add	r3, r3, #8
    c794:	add	r3, r3, #7
    c798:	add	r3, r3, #7
    c79c:	lsr	r3, r3, #3
    c7a0:	lsl	r3, r3, #3
    c7a4:	sub	sp, sp, r3
    c7a8:	add	r3, sp, #8
    c7ac:	add	r3, r3, #7
    c7b0:	lsr	r3, r3, #3
    c7b4:	lsl	r3, r3, #3
    c7b8:	str	r3, [fp, #-240]	; 0xffffff10
    c7bc:	ldr	r3, [fp, #-240]	; 0xffffff10
    c7c0:	and	r3, r3, #7
    c7c4:	rsb	r3, r3, #8
    c7c8:	ldr	r2, [fp, #-240]	; 0xffffff10
    c7cc:	add	r3, r2, r3
    c7d0:	ldr	r2, [fp, #-236]	; 0xffffff14
    c7d4:	ldr	r1, [fp, #-1088]	; 0xfffffbc0
    c7d8:	mov	r0, r3
    c7dc:	bl	4880 <memcpy@plt>
    c7e0:	str	r0, [fp, #-32]	; 0xffffffe0
    c7e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c7e8:	str	r3, [fp, #-1088]	; 0xfffffbc0
    c7ec:	ldr	r3, [fp, #-1092]	; 0xfffffbbc
    c7f0:	and	r3, r3, #7
    c7f4:	cmp	r3, #0
    c7f8:	beq	c85c <rb_sha512_crypt_r+0x240>
    c7fc:	ldr	r3, [fp, #-232]	; 0xffffff18
    c800:	add	r3, r3, #8
    c804:	add	r3, r3, #7
    c808:	add	r3, r3, #7
    c80c:	lsr	r3, r3, #3
    c810:	lsl	r3, r3, #3
    c814:	sub	sp, sp, r3
    c818:	add	r3, sp, #8
    c81c:	add	r3, r3, #7
    c820:	lsr	r3, r3, #3
    c824:	lsl	r3, r3, #3
    c828:	str	r3, [fp, #-244]	; 0xffffff0c
    c82c:	ldr	r3, [fp, #-244]	; 0xffffff0c
    c830:	and	r3, r3, #7
    c834:	rsb	r3, r3, #8
    c838:	ldr	r2, [fp, #-244]	; 0xffffff0c
    c83c:	add	r3, r2, r3
    c840:	ldr	r2, [fp, #-232]	; 0xffffff18
    c844:	ldr	r1, [fp, #-1092]	; 0xfffffbbc
    c848:	mov	r0, r3
    c84c:	bl	4880 <memcpy@plt>
    c850:	str	r0, [fp, #-36]	; 0xffffffdc
    c854:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c858:	str	r3, [fp, #-1092]	; 0xfffffbbc
    c85c:	sub	r3, fp, #732	; 0x2dc
    c860:	mov	r0, r3
    c864:	bl	b834 <rb_sha512_init_ctx>
    c868:	sub	r3, fp, #732	; 0x2dc
    c86c:	mov	r2, r3
    c870:	ldr	r1, [fp, #-236]	; 0xffffff14
    c874:	ldr	r0, [fp, #-1088]	; 0xfffffbc0
    c878:	bl	c370 <rb_sha512_process_bytes>
    c87c:	sub	r3, fp, #732	; 0x2dc
    c880:	mov	r2, r3
    c884:	ldr	r1, [fp, #-232]	; 0xffffff18
    c888:	ldr	r0, [fp, #-1092]	; 0xfffffbbc
    c88c:	bl	c370 <rb_sha512_process_bytes>
    c890:	sub	r3, fp, #1072	; 0x430
    c894:	sub	r3, r3, #4
    c898:	mov	r0, r3
    c89c:	bl	b834 <rb_sha512_init_ctx>
    c8a0:	sub	r3, fp, #1072	; 0x430
    c8a4:	sub	r3, r3, #4
    c8a8:	mov	r2, r3
    c8ac:	ldr	r1, [fp, #-236]	; 0xffffff14
    c8b0:	ldr	r0, [fp, #-1088]	; 0xfffffbc0
    c8b4:	bl	c370 <rb_sha512_process_bytes>
    c8b8:	sub	r3, fp, #1072	; 0x430
    c8bc:	sub	r3, r3, #4
    c8c0:	mov	r2, r3
    c8c4:	ldr	r1, [fp, #-232]	; 0xffffff18
    c8c8:	ldr	r0, [fp, #-1092]	; 0xfffffbbc
    c8cc:	bl	c370 <rb_sha512_process_bytes>
    c8d0:	sub	r3, fp, #1072	; 0x430
    c8d4:	sub	r3, r3, #4
    c8d8:	mov	r2, r3
    c8dc:	ldr	r1, [fp, #-236]	; 0xffffff14
    c8e0:	ldr	r0, [fp, #-1088]	; 0xfffffbc0
    c8e4:	bl	c370 <rb_sha512_process_bytes>
    c8e8:	sub	r2, fp, #324	; 0x144
    c8ec:	sub	r3, fp, #1072	; 0x430
    c8f0:	sub	r3, r3, #4
    c8f4:	mov	r1, r2
    c8f8:	mov	r0, r3
    c8fc:	bl	b948 <rb_sha512_finish_ctx>
    c900:	ldr	r3, [fp, #-236]	; 0xffffff14
    c904:	str	r3, [fp, #-24]	; 0xffffffe8
    c908:	b	c92c <rb_sha512_crypt_r+0x310>
    c90c:	sub	r2, fp, #732	; 0x2dc
    c910:	sub	r3, fp, #324	; 0x144
    c914:	mov	r1, #64	; 0x40
    c918:	mov	r0, r3
    c91c:	bl	c370 <rb_sha512_process_bytes>
    c920:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c924:	sub	r3, r3, #64	; 0x40
    c928:	str	r3, [fp, #-24]	; 0xffffffe8
    c92c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c930:	cmp	r3, #64	; 0x40
    c934:	bhi	c90c <rb_sha512_crypt_r+0x2f0>
    c938:	sub	r2, fp, #732	; 0x2dc
    c93c:	sub	r3, fp, #324	; 0x144
    c940:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c944:	mov	r0, r3
    c948:	bl	c370 <rb_sha512_process_bytes>
    c94c:	ldr	r3, [fp, #-236]	; 0xffffff14
    c950:	str	r3, [fp, #-24]	; 0xffffffe8
    c954:	b	c9a0 <rb_sha512_crypt_r+0x384>
    c958:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c95c:	and	r3, r3, #1
    c960:	cmp	r3, #0
    c964:	beq	c980 <rb_sha512_crypt_r+0x364>
    c968:	sub	r2, fp, #732	; 0x2dc
    c96c:	sub	r3, fp, #324	; 0x144
    c970:	mov	r1, #64	; 0x40
    c974:	mov	r0, r3
    c978:	bl	c370 <rb_sha512_process_bytes>
    c97c:	b	c994 <rb_sha512_crypt_r+0x378>
    c980:	sub	r3, fp, #732	; 0x2dc
    c984:	mov	r2, r3
    c988:	ldr	r1, [fp, #-236]	; 0xffffff14
    c98c:	ldr	r0, [fp, #-1088]	; 0xfffffbc0
    c990:	bl	c370 <rb_sha512_process_bytes>
    c994:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c998:	lsr	r3, r3, #1
    c99c:	str	r3, [fp, #-24]	; 0xffffffe8
    c9a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c9a4:	cmp	r3, #0
    c9a8:	bne	c958 <rb_sha512_crypt_r+0x33c>
    c9ac:	sub	r2, fp, #324	; 0x144
    c9b0:	sub	r3, fp, #732	; 0x2dc
    c9b4:	mov	r1, r2
    c9b8:	mov	r0, r3
    c9bc:	bl	b948 <rb_sha512_finish_ctx>
    c9c0:	sub	r3, fp, #1072	; 0x430
    c9c4:	sub	r3, r3, #4
    c9c8:	mov	r0, r3
    c9cc:	bl	b834 <rb_sha512_init_ctx>
    c9d0:	mov	r3, #0
    c9d4:	str	r3, [fp, #-24]	; 0xffffffe8
    c9d8:	b	ca00 <rb_sha512_crypt_r+0x3e4>
    c9dc:	sub	r3, fp, #1072	; 0x430
    c9e0:	sub	r3, r3, #4
    c9e4:	mov	r2, r3
    c9e8:	ldr	r1, [fp, #-236]	; 0xffffff14
    c9ec:	ldr	r0, [fp, #-1088]	; 0xfffffbc0
    c9f0:	bl	c370 <rb_sha512_process_bytes>
    c9f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c9f8:	add	r3, r3, #1
    c9fc:	str	r3, [fp, #-24]	; 0xffffffe8
    ca00:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ca04:	ldr	r3, [fp, #-236]	; 0xffffff14
    ca08:	cmp	r2, r3
    ca0c:	bcc	c9dc <rb_sha512_crypt_r+0x3c0>
    ca10:	sub	r2, fp, #388	; 0x184
    ca14:	sub	r3, fp, #1072	; 0x430
    ca18:	sub	r3, r3, #4
    ca1c:	mov	r1, r2
    ca20:	mov	r0, r3
    ca24:	bl	b948 <rb_sha512_finish_ctx>
    ca28:	ldr	r3, [fp, #-236]	; 0xffffff14
    ca2c:	add	r3, r3, #7
    ca30:	add	r3, r3, #7
    ca34:	lsr	r3, r3, #3
    ca38:	lsl	r3, r3, #3
    ca3c:	sub	sp, sp, r3
    ca40:	add	r3, sp, #8
    ca44:	add	r3, r3, #7
    ca48:	lsr	r3, r3, #3
    ca4c:	lsl	r3, r3, #3
    ca50:	str	r3, [fp, #-248]	; 0xffffff08
    ca54:	ldr	r3, [fp, #-248]	; 0xffffff08
    ca58:	str	r3, [fp, #-28]	; 0xffffffe4
    ca5c:	ldr	r3, [fp, #-236]	; 0xffffff14
    ca60:	str	r3, [fp, #-24]	; 0xffffffe8
    ca64:	b	cabc <rb_sha512_crypt_r+0x4a0>
    ca68:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ca6c:	sub	ip, fp, #388	; 0x184
    ca70:	mov	r5, r3
    ca74:	add	r6, ip, #64	; 0x40
    ca78:	mov	lr, r5
    ca7c:	mov	r4, ip
    ca80:	ldm	r4!, {r0, r1, r2, r3}
    ca84:	str	r0, [lr]
    ca88:	str	r1, [lr, #4]
    ca8c:	str	r2, [lr, #8]
    ca90:	str	r3, [lr, #12]
    ca94:	add	ip, ip, #16
    ca98:	add	r5, r5, #16
    ca9c:	cmp	ip, r6
    caa0:	bne	ca78 <rb_sha512_crypt_r+0x45c>
    caa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    caa8:	add	r3, r3, #64	; 0x40
    caac:	str	r3, [fp, #-28]	; 0xffffffe4
    cab0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cab4:	sub	r3, r3, #64	; 0x40
    cab8:	str	r3, [fp, #-24]	; 0xffffffe8
    cabc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cac0:	cmp	r3, #63	; 0x3f
    cac4:	bhi	ca68 <rb_sha512_crypt_r+0x44c>
    cac8:	sub	r3, fp, #388	; 0x184
    cacc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cad0:	mov	r1, r3
    cad4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    cad8:	bl	4880 <memcpy@plt>
    cadc:	sub	r3, fp, #1072	; 0x430
    cae0:	sub	r3, r3, #4
    cae4:	mov	r0, r3
    cae8:	bl	b834 <rb_sha512_init_ctx>
    caec:	mov	r3, #0
    caf0:	str	r3, [fp, #-24]	; 0xffffffe8
    caf4:	b	cb1c <rb_sha512_crypt_r+0x500>
    caf8:	sub	r3, fp, #1072	; 0x430
    cafc:	sub	r3, r3, #4
    cb00:	mov	r2, r3
    cb04:	ldr	r1, [fp, #-232]	; 0xffffff18
    cb08:	ldr	r0, [fp, #-1092]	; 0xfffffbbc
    cb0c:	bl	c370 <rb_sha512_process_bytes>
    cb10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb14:	add	r3, r3, #1
    cb18:	str	r3, [fp, #-24]	; 0xffffffe8
    cb1c:	ldrb	r3, [fp, #-324]	; 0xfffffebc
    cb20:	add	r3, r3, #16
    cb24:	mov	r2, r3
    cb28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb2c:	cmp	r2, r3
    cb30:	bhi	caf8 <rb_sha512_crypt_r+0x4dc>
    cb34:	sub	r2, fp, #388	; 0x184
    cb38:	sub	r3, fp, #1072	; 0x430
    cb3c:	sub	r3, r3, #4
    cb40:	mov	r1, r2
    cb44:	mov	r0, r3
    cb48:	bl	b948 <rb_sha512_finish_ctx>
    cb4c:	ldr	r3, [fp, #-232]	; 0xffffff18
    cb50:	add	r3, r3, #7
    cb54:	add	r3, r3, #7
    cb58:	lsr	r3, r3, #3
    cb5c:	lsl	r3, r3, #3
    cb60:	sub	sp, sp, r3
    cb64:	add	r3, sp, #8
    cb68:	add	r3, r3, #7
    cb6c:	lsr	r3, r3, #3
    cb70:	lsl	r3, r3, #3
    cb74:	str	r3, [fp, #-252]	; 0xffffff04
    cb78:	ldr	r3, [fp, #-252]	; 0xffffff04
    cb7c:	str	r3, [fp, #-28]	; 0xffffffe4
    cb80:	ldr	r3, [fp, #-232]	; 0xffffff18
    cb84:	str	r3, [fp, #-24]	; 0xffffffe8
    cb88:	b	cbe0 <rb_sha512_crypt_r+0x5c4>
    cb8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cb90:	sub	ip, fp, #388	; 0x184
    cb94:	mov	r5, r3
    cb98:	add	r6, ip, #64	; 0x40
    cb9c:	mov	lr, r5
    cba0:	mov	r4, ip
    cba4:	ldm	r4!, {r0, r1, r2, r3}
    cba8:	str	r0, [lr]
    cbac:	str	r1, [lr, #4]
    cbb0:	str	r2, [lr, #8]
    cbb4:	str	r3, [lr, #12]
    cbb8:	add	ip, ip, #16
    cbbc:	add	r5, r5, #16
    cbc0:	cmp	ip, r6
    cbc4:	bne	cb9c <rb_sha512_crypt_r+0x580>
    cbc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cbcc:	add	r3, r3, #64	; 0x40
    cbd0:	str	r3, [fp, #-28]	; 0xffffffe4
    cbd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbd8:	sub	r3, r3, #64	; 0x40
    cbdc:	str	r3, [fp, #-24]	; 0xffffffe8
    cbe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbe4:	cmp	r3, #63	; 0x3f
    cbe8:	bhi	cb8c <rb_sha512_crypt_r+0x570>
    cbec:	sub	r3, fp, #388	; 0x184
    cbf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cbf4:	mov	r1, r3
    cbf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    cbfc:	bl	4880 <memcpy@plt>
    cc00:	mov	r3, #0
    cc04:	str	r3, [fp, #-24]	; 0xffffffe8
    cc08:	b	cd34 <rb_sha512_crypt_r+0x718>
    cc0c:	sub	r3, fp, #732	; 0x2dc
    cc10:	mov	r0, r3
    cc14:	bl	b834 <rb_sha512_init_ctx>
    cc18:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cc1c:	and	r3, r3, #1
    cc20:	cmp	r3, #0
    cc24:	beq	cc40 <rb_sha512_crypt_r+0x624>
    cc28:	sub	r3, fp, #732	; 0x2dc
    cc2c:	mov	r2, r3
    cc30:	ldr	r1, [fp, #-236]	; 0xffffff14
    cc34:	ldr	r0, [fp, #-248]	; 0xffffff08
    cc38:	bl	c370 <rb_sha512_process_bytes>
    cc3c:	b	cc54 <rb_sha512_crypt_r+0x638>
    cc40:	sub	r2, fp, #732	; 0x2dc
    cc44:	sub	r3, fp, #324	; 0x144
    cc48:	mov	r1, #64	; 0x40
    cc4c:	mov	r0, r3
    cc50:	bl	c370 <rb_sha512_process_bytes>
    cc54:	ldr	r1, [fp, #-24]	; 0xffffffe8
    cc58:	ldr	r3, [pc, #2492]	; d61c <rb_sha512_crypt_r+0x1000>
    cc5c:	umull	r2, r3, r3, r1
    cc60:	lsr	r2, r3, #1
    cc64:	mov	r3, r2
    cc68:	lsl	r3, r3, #1
    cc6c:	add	r3, r3, r2
    cc70:	sub	r2, r1, r3
    cc74:	cmp	r2, #0
    cc78:	beq	cc90 <rb_sha512_crypt_r+0x674>
    cc7c:	sub	r3, fp, #732	; 0x2dc
    cc80:	mov	r2, r3
    cc84:	ldr	r1, [fp, #-232]	; 0xffffff18
    cc88:	ldr	r0, [fp, #-252]	; 0xffffff04
    cc8c:	bl	c370 <rb_sha512_process_bytes>
    cc90:	ldr	r1, [fp, #-24]	; 0xffffffe8
    cc94:	ldr	r3, [pc, #2436]	; d620 <rb_sha512_crypt_r+0x1004>
    cc98:	umull	r2, r3, r3, r1
    cc9c:	sub	r2, r1, r3
    cca0:	lsr	r2, r2, #1
    cca4:	add	r3, r3, r2
    cca8:	lsr	r2, r3, #2
    ccac:	mov	r3, r2
    ccb0:	lsl	r3, r3, #3
    ccb4:	sub	r3, r3, r2
    ccb8:	sub	r2, r1, r3
    ccbc:	cmp	r2, #0
    ccc0:	beq	ccd8 <rb_sha512_crypt_r+0x6bc>
    ccc4:	sub	r3, fp, #732	; 0x2dc
    ccc8:	mov	r2, r3
    cccc:	ldr	r1, [fp, #-236]	; 0xffffff14
    ccd0:	ldr	r0, [fp, #-248]	; 0xffffff08
    ccd4:	bl	c370 <rb_sha512_process_bytes>
    ccd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ccdc:	and	r3, r3, #1
    cce0:	cmp	r3, #0
    cce4:	beq	cd00 <rb_sha512_crypt_r+0x6e4>
    cce8:	sub	r2, fp, #732	; 0x2dc
    ccec:	sub	r3, fp, #324	; 0x144
    ccf0:	mov	r1, #64	; 0x40
    ccf4:	mov	r0, r3
    ccf8:	bl	c370 <rb_sha512_process_bytes>
    ccfc:	b	cd14 <rb_sha512_crypt_r+0x6f8>
    cd00:	sub	r3, fp, #732	; 0x2dc
    cd04:	mov	r2, r3
    cd08:	ldr	r1, [fp, #-236]	; 0xffffff14
    cd0c:	ldr	r0, [fp, #-248]	; 0xffffff08
    cd10:	bl	c370 <rb_sha512_process_bytes>
    cd14:	sub	r2, fp, #324	; 0x144
    cd18:	sub	r3, fp, #732	; 0x2dc
    cd1c:	mov	r1, r2
    cd20:	mov	r0, r3
    cd24:	bl	b948 <rb_sha512_finish_ctx>
    cd28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cd2c:	add	r3, r3, #1
    cd30:	str	r3, [fp, #-24]	; 0xffffffe8
    cd34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cd38:	ldr	r3, [fp, #-40]	; 0xffffffd8
    cd3c:	cmp	r2, r3
    cd40:	bcc	cc0c <rb_sha512_crypt_r+0x5f0>
    cd44:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cd48:	bic	r3, r3, r3, asr #31
    cd4c:	mov	r2, r3
    cd50:	mov	r1, #0
    cd54:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
    cd58:	bl	4694 <memset@plt>
    cd5c:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cd60:	bic	r3, r3, r3, asr #31
    cd64:	mov	r2, r3
    cd68:	ldr	r3, [pc, #2228]	; d624 <rb_sha512_crypt_r+0x1008>
    cd6c:	add	r3, pc, r3
    cd70:	mov	r1, r3
    cd74:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
    cd78:	bl	45e0 <strncpy@plt>
    cd7c:	mov	r1, #0
    cd80:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
    cd84:	bl	461c <strchr@plt>
    cd88:	str	r0, [fp, #-28]	; 0xffffffe4
    cd8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cd90:	cmp	r3, #0
    cd94:	bne	cdb0 <rb_sha512_crypt_r+0x794>
    cd98:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cd9c:	bic	r3, r3, r3, asr #31
    cda0:	mov	r2, r3
    cda4:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    cda8:	add	r3, r3, r2
    cdac:	str	r3, [fp, #-28]	; 0xffffffe4
    cdb0:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cdb4:	sub	r3, r3, #3
    cdb8:	str	r3, [fp, #-1100]	; 0xfffffbb4
    cdbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    cdc0:	cmp	r3, #0
    cdc4:	beq	ce18 <rb_sha512_crypt_r+0x7fc>
    cdc8:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cdcc:	bic	r3, r3, r3, asr #31
    cdd0:	mov	r1, r3
    cdd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    cdd8:	str	r3, [sp]
    cddc:	ldr	r3, [pc, #2116]	; d628 <rb_sha512_crypt_r+0x100c>
    cde0:	add	r3, pc, r3
    cde4:	ldr	r2, [pc, #2112]	; d62c <rb_sha512_crypt_r+0x1010>
    cde8:	add	r2, pc, r2
    cdec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    cdf0:	bl	4c34 <snprintf@plt>
    cdf4:	str	r0, [fp, #-256]	; 0xffffff00
    cdf8:	ldr	r3, [fp, #-256]	; 0xffffff00
    cdfc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ce00:	add	r3, r2, r3
    ce04:	str	r3, [fp, #-28]	; 0xffffffe4
    ce08:	ldr	r2, [fp, #-1100]	; 0xfffffbb4
    ce0c:	ldr	r3, [fp, #-256]	; 0xffffff00
    ce10:	sub	r3, r2, r3
    ce14:	str	r3, [fp, #-1100]	; 0xfffffbb4
    ce18:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    ce1c:	bic	r3, r3, r3, asr #31
    ce20:	mov	r2, r3
    ce24:	ldr	r3, [fp, #-232]	; 0xffffff18
    ce28:	cmp	r2, r3
    ce2c:	movcc	r3, r2
    ce30:	movcs	r3, r3
    ce34:	mov	r2, r3
    ce38:	mov	r1, #0
    ce3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ce40:	bl	4694 <memset@plt>
    ce44:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    ce48:	bic	r3, r3, r3, asr #31
    ce4c:	mov	r2, r3
    ce50:	ldr	r3, [fp, #-232]	; 0xffffff18
    ce54:	cmp	r2, r3
    ce58:	movcc	r3, r2
    ce5c:	movcs	r3, r3
    ce60:	mov	r2, r3
    ce64:	ldr	r1, [fp, #-1092]	; 0xfffffbbc
    ce68:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ce6c:	bl	45e0 <strncpy@plt>
    ce70:	mov	r1, #0
    ce74:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
    ce78:	bl	461c <strchr@plt>
    ce7c:	str	r0, [fp, #-28]	; 0xffffffe4
    ce80:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ce84:	cmp	r3, #0
    ce88:	bne	ce9c <rb_sha512_crypt_r+0x880>
    ce8c:	ldr	r2, [fp, #-1096]	; 0xfffffbb8
    ce90:	ldr	r3, [fp, #-232]	; 0xffffff18
    ce94:	add	r3, r2, r3
    ce98:	str	r3, [fp, #-28]	; 0xffffffe4
    ce9c:	ldr	r1, [fp, #-1100]	; 0xfffffbb4
    cea0:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cea4:	bic	r3, r3, r3, asr #31
    cea8:	mov	r2, r3
    ceac:	ldr	r3, [fp, #-232]	; 0xffffff18
    ceb0:	cmp	r2, r3
    ceb4:	movcc	r3, r2
    ceb8:	movcs	r3, r3
    cebc:	sub	r3, r1, r3
    cec0:	str	r3, [fp, #-1100]	; 0xfffffbb4
    cec4:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cec8:	cmp	r3, #0
    cecc:	ble	cef0 <rb_sha512_crypt_r+0x8d4>
    ced0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ced4:	add	r2, r3, #1
    ced8:	str	r2, [fp, #-28]	; 0xffffffe4
    cedc:	mov	r2, #36	; 0x24
    cee0:	strb	r2, [r3]
    cee4:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cee8:	sub	r3, r3, #1
    ceec:	str	r3, [fp, #-1100]	; 0xfffffbb4
    cef0:	ldrb	r3, [fp, #-324]	; 0xfffffebc
    cef4:	lsl	r2, r3, #16
    cef8:	ldrb	r3, [fp, #-303]	; 0xfffffed1
    cefc:	lsl	r3, r3, #8
    cf00:	orr	r3, r2, r3
    cf04:	ldrb	r2, [fp, #-282]	; 0xfffffee6
    cf08:	orr	r3, r3, r2
    cf0c:	str	r3, [fp, #-48]	; 0xffffffd0
    cf10:	mov	r3, #4
    cf14:	str	r3, [fp, #-52]	; 0xffffffcc
    cf18:	b	cf58 <rb_sha512_crypt_r+0x93c>
    cf1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cf20:	add	r2, r3, #1
    cf24:	str	r2, [fp, #-28]	; 0xffffffe4
    cf28:	ldr	r2, [fp, #-48]	; 0xffffffd0
    cf2c:	and	r2, r2, #63	; 0x3f
    cf30:	ldr	r1, [pc, #1784]	; d630 <rb_sha512_crypt_r+0x1014>
    cf34:	add	r1, pc, r1
    cf38:	ldrb	r2, [r1, r2]
    cf3c:	strb	r2, [r3]
    cf40:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cf44:	sub	r3, r3, #1
    cf48:	str	r3, [fp, #-1100]	; 0xfffffbb4
    cf4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    cf50:	lsr	r3, r3, #6
    cf54:	str	r3, [fp, #-48]	; 0xffffffd0
    cf58:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cf5c:	sub	r2, r3, #1
    cf60:	str	r2, [fp, #-52]	; 0xffffffcc
    cf64:	cmp	r3, #0
    cf68:	ble	cf78 <rb_sha512_crypt_r+0x95c>
    cf6c:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cf70:	cmp	r3, #0
    cf74:	bgt	cf1c <rb_sha512_crypt_r+0x900>
    cf78:	ldrb	r3, [fp, #-302]	; 0xfffffed2
    cf7c:	lsl	r2, r3, #16
    cf80:	ldrb	r3, [fp, #-281]	; 0xfffffee7
    cf84:	lsl	r3, r3, #8
    cf88:	orr	r3, r2, r3
    cf8c:	ldrb	r2, [fp, #-323]	; 0xfffffebd
    cf90:	orr	r3, r3, r2
    cf94:	str	r3, [fp, #-56]	; 0xffffffc8
    cf98:	mov	r3, #4
    cf9c:	str	r3, [fp, #-60]	; 0xffffffc4
    cfa0:	b	cfe0 <rb_sha512_crypt_r+0x9c4>
    cfa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cfa8:	add	r2, r3, #1
    cfac:	str	r2, [fp, #-28]	; 0xffffffe4
    cfb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    cfb4:	and	r2, r2, #63	; 0x3f
    cfb8:	ldr	r1, [pc, #1652]	; d634 <rb_sha512_crypt_r+0x1018>
    cfbc:	add	r1, pc, r1
    cfc0:	ldrb	r2, [r1, r2]
    cfc4:	strb	r2, [r3]
    cfc8:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cfcc:	sub	r3, r3, #1
    cfd0:	str	r3, [fp, #-1100]	; 0xfffffbb4
    cfd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    cfd8:	lsr	r3, r3, #6
    cfdc:	str	r3, [fp, #-56]	; 0xffffffc8
    cfe0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    cfe4:	sub	r2, r3, #1
    cfe8:	str	r2, [fp, #-60]	; 0xffffffc4
    cfec:	cmp	r3, #0
    cff0:	ble	d000 <rb_sha512_crypt_r+0x9e4>
    cff4:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    cff8:	cmp	r3, #0
    cffc:	bgt	cfa4 <rb_sha512_crypt_r+0x988>
    d000:	ldrb	r3, [fp, #-280]	; 0xfffffee8
    d004:	lsl	r2, r3, #16
    d008:	ldrb	r3, [fp, #-322]	; 0xfffffebe
    d00c:	lsl	r3, r3, #8
    d010:	orr	r3, r2, r3
    d014:	ldrb	r2, [fp, #-301]	; 0xfffffed3
    d018:	orr	r3, r3, r2
    d01c:	str	r3, [fp, #-64]	; 0xffffffc0
    d020:	mov	r3, #4
    d024:	str	r3, [fp, #-68]	; 0xffffffbc
    d028:	b	d068 <rb_sha512_crypt_r+0xa4c>
    d02c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d030:	add	r2, r3, #1
    d034:	str	r2, [fp, #-28]	; 0xffffffe4
    d038:	ldr	r2, [fp, #-64]	; 0xffffffc0
    d03c:	and	r2, r2, #63	; 0x3f
    d040:	ldr	r1, [pc, #1520]	; d638 <rb_sha512_crypt_r+0x101c>
    d044:	add	r1, pc, r1
    d048:	ldrb	r2, [r1, r2]
    d04c:	strb	r2, [r3]
    d050:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d054:	sub	r3, r3, #1
    d058:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d05c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    d060:	lsr	r3, r3, #6
    d064:	str	r3, [fp, #-64]	; 0xffffffc0
    d068:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d06c:	sub	r2, r3, #1
    d070:	str	r2, [fp, #-68]	; 0xffffffbc
    d074:	cmp	r3, #0
    d078:	ble	d088 <rb_sha512_crypt_r+0xa6c>
    d07c:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d080:	cmp	r3, #0
    d084:	bgt	d02c <rb_sha512_crypt_r+0xa10>
    d088:	ldrb	r3, [fp, #-321]	; 0xfffffebf
    d08c:	lsl	r2, r3, #16
    d090:	ldrb	r3, [fp, #-300]	; 0xfffffed4
    d094:	lsl	r3, r3, #8
    d098:	orr	r3, r2, r3
    d09c:	ldrb	r2, [fp, #-279]	; 0xfffffee9
    d0a0:	orr	r3, r3, r2
    d0a4:	str	r3, [fp, #-72]	; 0xffffffb8
    d0a8:	mov	r3, #4
    d0ac:	str	r3, [fp, #-76]	; 0xffffffb4
    d0b0:	b	d0f0 <rb_sha512_crypt_r+0xad4>
    d0b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d0b8:	add	r2, r3, #1
    d0bc:	str	r2, [fp, #-28]	; 0xffffffe4
    d0c0:	ldr	r2, [fp, #-72]	; 0xffffffb8
    d0c4:	and	r2, r2, #63	; 0x3f
    d0c8:	ldr	r1, [pc, #1388]	; d63c <rb_sha512_crypt_r+0x1020>
    d0cc:	add	r1, pc, r1
    d0d0:	ldrb	r2, [r1, r2]
    d0d4:	strb	r2, [r3]
    d0d8:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d0dc:	sub	r3, r3, #1
    d0e0:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d0e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d0e8:	lsr	r3, r3, #6
    d0ec:	str	r3, [fp, #-72]	; 0xffffffb8
    d0f0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    d0f4:	sub	r2, r3, #1
    d0f8:	str	r2, [fp, #-76]	; 0xffffffb4
    d0fc:	cmp	r3, #0
    d100:	ble	d110 <rb_sha512_crypt_r+0xaf4>
    d104:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d108:	cmp	r3, #0
    d10c:	bgt	d0b4 <rb_sha512_crypt_r+0xa98>
    d110:	ldrb	r3, [fp, #-299]	; 0xfffffed5
    d114:	lsl	r2, r3, #16
    d118:	ldrb	r3, [fp, #-278]	; 0xfffffeea
    d11c:	lsl	r3, r3, #8
    d120:	orr	r3, r2, r3
    d124:	ldrb	r2, [fp, #-320]	; 0xfffffec0
    d128:	orr	r3, r3, r2
    d12c:	str	r3, [fp, #-80]	; 0xffffffb0
    d130:	mov	r3, #4
    d134:	str	r3, [fp, #-84]	; 0xffffffac
    d138:	b	d178 <rb_sha512_crypt_r+0xb5c>
    d13c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d140:	add	r2, r3, #1
    d144:	str	r2, [fp, #-28]	; 0xffffffe4
    d148:	ldr	r2, [fp, #-80]	; 0xffffffb0
    d14c:	and	r2, r2, #63	; 0x3f
    d150:	ldr	r1, [pc, #1256]	; d640 <rb_sha512_crypt_r+0x1024>
    d154:	add	r1, pc, r1
    d158:	ldrb	r2, [r1, r2]
    d15c:	strb	r2, [r3]
    d160:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d164:	sub	r3, r3, #1
    d168:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d16c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    d170:	lsr	r3, r3, #6
    d174:	str	r3, [fp, #-80]	; 0xffffffb0
    d178:	ldr	r3, [fp, #-84]	; 0xffffffac
    d17c:	sub	r2, r3, #1
    d180:	str	r2, [fp, #-84]	; 0xffffffac
    d184:	cmp	r3, #0
    d188:	ble	d198 <rb_sha512_crypt_r+0xb7c>
    d18c:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d190:	cmp	r3, #0
    d194:	bgt	d13c <rb_sha512_crypt_r+0xb20>
    d198:	ldrb	r3, [fp, #-277]	; 0xfffffeeb
    d19c:	lsl	r2, r3, #16
    d1a0:	ldrb	r3, [fp, #-319]	; 0xfffffec1
    d1a4:	lsl	r3, r3, #8
    d1a8:	orr	r3, r2, r3
    d1ac:	ldrb	r2, [fp, #-298]	; 0xfffffed6
    d1b0:	orr	r3, r3, r2
    d1b4:	str	r3, [fp, #-88]	; 0xffffffa8
    d1b8:	mov	r3, #4
    d1bc:	str	r3, [fp, #-92]	; 0xffffffa4
    d1c0:	b	d200 <rb_sha512_crypt_r+0xbe4>
    d1c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d1c8:	add	r2, r3, #1
    d1cc:	str	r2, [fp, #-28]	; 0xffffffe4
    d1d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    d1d4:	and	r2, r2, #63	; 0x3f
    d1d8:	ldr	r1, [pc, #1124]	; d644 <rb_sha512_crypt_r+0x1028>
    d1dc:	add	r1, pc, r1
    d1e0:	ldrb	r2, [r1, r2]
    d1e4:	strb	r2, [r3]
    d1e8:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d1ec:	sub	r3, r3, #1
    d1f0:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d1f4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    d1f8:	lsr	r3, r3, #6
    d1fc:	str	r3, [fp, #-88]	; 0xffffffa8
    d200:	ldr	r3, [fp, #-92]	; 0xffffffa4
    d204:	sub	r2, r3, #1
    d208:	str	r2, [fp, #-92]	; 0xffffffa4
    d20c:	cmp	r3, #0
    d210:	ble	d220 <rb_sha512_crypt_r+0xc04>
    d214:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d218:	cmp	r3, #0
    d21c:	bgt	d1c4 <rb_sha512_crypt_r+0xba8>
    d220:	ldrb	r3, [fp, #-318]	; 0xfffffec2
    d224:	lsl	r2, r3, #16
    d228:	ldrb	r3, [fp, #-297]	; 0xfffffed7
    d22c:	lsl	r3, r3, #8
    d230:	orr	r3, r2, r3
    d234:	ldrb	r2, [fp, #-276]	; 0xfffffeec
    d238:	orr	r3, r3, r2
    d23c:	str	r3, [fp, #-96]	; 0xffffffa0
    d240:	mov	r3, #4
    d244:	str	r3, [fp, #-100]	; 0xffffff9c
    d248:	b	d288 <rb_sha512_crypt_r+0xc6c>
    d24c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d250:	add	r2, r3, #1
    d254:	str	r2, [fp, #-28]	; 0xffffffe4
    d258:	ldr	r2, [fp, #-96]	; 0xffffffa0
    d25c:	and	r2, r2, #63	; 0x3f
    d260:	ldr	r1, [pc, #992]	; d648 <rb_sha512_crypt_r+0x102c>
    d264:	add	r1, pc, r1
    d268:	ldrb	r2, [r1, r2]
    d26c:	strb	r2, [r3]
    d270:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d274:	sub	r3, r3, #1
    d278:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d27c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    d280:	lsr	r3, r3, #6
    d284:	str	r3, [fp, #-96]	; 0xffffffa0
    d288:	ldr	r3, [fp, #-100]	; 0xffffff9c
    d28c:	sub	r2, r3, #1
    d290:	str	r2, [fp, #-100]	; 0xffffff9c
    d294:	cmp	r3, #0
    d298:	ble	d2a8 <rb_sha512_crypt_r+0xc8c>
    d29c:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d2a0:	cmp	r3, #0
    d2a4:	bgt	d24c <rb_sha512_crypt_r+0xc30>
    d2a8:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    d2ac:	lsl	r2, r3, #16
    d2b0:	ldrb	r3, [fp, #-275]	; 0xfffffeed
    d2b4:	lsl	r3, r3, #8
    d2b8:	orr	r3, r2, r3
    d2bc:	ldrb	r2, [fp, #-317]	; 0xfffffec3
    d2c0:	orr	r3, r3, r2
    d2c4:	str	r3, [fp, #-104]	; 0xffffff98
    d2c8:	mov	r3, #4
    d2cc:	str	r3, [fp, #-108]	; 0xffffff94
    d2d0:	b	d310 <rb_sha512_crypt_r+0xcf4>
    d2d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d2d8:	add	r2, r3, #1
    d2dc:	str	r2, [fp, #-28]	; 0xffffffe4
    d2e0:	ldr	r2, [fp, #-104]	; 0xffffff98
    d2e4:	and	r2, r2, #63	; 0x3f
    d2e8:	ldr	r1, [pc, #860]	; d64c <rb_sha512_crypt_r+0x1030>
    d2ec:	add	r1, pc, r1
    d2f0:	ldrb	r2, [r1, r2]
    d2f4:	strb	r2, [r3]
    d2f8:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d2fc:	sub	r3, r3, #1
    d300:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d304:	ldr	r3, [fp, #-104]	; 0xffffff98
    d308:	lsr	r3, r3, #6
    d30c:	str	r3, [fp, #-104]	; 0xffffff98
    d310:	ldr	r3, [fp, #-108]	; 0xffffff94
    d314:	sub	r2, r3, #1
    d318:	str	r2, [fp, #-108]	; 0xffffff94
    d31c:	cmp	r3, #0
    d320:	ble	d330 <rb_sha512_crypt_r+0xd14>
    d324:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d328:	cmp	r3, #0
    d32c:	bgt	d2d4 <rb_sha512_crypt_r+0xcb8>
    d330:	ldrb	r3, [fp, #-274]	; 0xfffffeee
    d334:	lsl	r2, r3, #16
    d338:	ldrb	r3, [fp, #-316]	; 0xfffffec4
    d33c:	lsl	r3, r3, #8
    d340:	orr	r3, r2, r3
    d344:	ldrb	r2, [fp, #-295]	; 0xfffffed9
    d348:	orr	r3, r3, r2
    d34c:	str	r3, [fp, #-112]	; 0xffffff90
    d350:	mov	r3, #4
    d354:	str	r3, [fp, #-116]	; 0xffffff8c
    d358:	b	d398 <rb_sha512_crypt_r+0xd7c>
    d35c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d360:	add	r2, r3, #1
    d364:	str	r2, [fp, #-28]	; 0xffffffe4
    d368:	ldr	r2, [fp, #-112]	; 0xffffff90
    d36c:	and	r2, r2, #63	; 0x3f
    d370:	ldr	r1, [pc, #728]	; d650 <rb_sha512_crypt_r+0x1034>
    d374:	add	r1, pc, r1
    d378:	ldrb	r2, [r1, r2]
    d37c:	strb	r2, [r3]
    d380:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d384:	sub	r3, r3, #1
    d388:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d38c:	ldr	r3, [fp, #-112]	; 0xffffff90
    d390:	lsr	r3, r3, #6
    d394:	str	r3, [fp, #-112]	; 0xffffff90
    d398:	ldr	r3, [fp, #-116]	; 0xffffff8c
    d39c:	sub	r2, r3, #1
    d3a0:	str	r2, [fp, #-116]	; 0xffffff8c
    d3a4:	cmp	r3, #0
    d3a8:	ble	d3b8 <rb_sha512_crypt_r+0xd9c>
    d3ac:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d3b0:	cmp	r3, #0
    d3b4:	bgt	d35c <rb_sha512_crypt_r+0xd40>
    d3b8:	ldrb	r3, [fp, #-315]	; 0xfffffec5
    d3bc:	lsl	r2, r3, #16
    d3c0:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    d3c4:	lsl	r3, r3, #8
    d3c8:	orr	r3, r2, r3
    d3cc:	ldrb	r2, [fp, #-273]	; 0xfffffeef
    d3d0:	orr	r3, r3, r2
    d3d4:	str	r3, [fp, #-120]	; 0xffffff88
    d3d8:	mov	r3, #4
    d3dc:	str	r3, [fp, #-124]	; 0xffffff84
    d3e0:	b	d420 <rb_sha512_crypt_r+0xe04>
    d3e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d3e8:	add	r2, r3, #1
    d3ec:	str	r2, [fp, #-28]	; 0xffffffe4
    d3f0:	ldr	r2, [fp, #-120]	; 0xffffff88
    d3f4:	and	r2, r2, #63	; 0x3f
    d3f8:	ldr	r1, [pc, #596]	; d654 <rb_sha512_crypt_r+0x1038>
    d3fc:	add	r1, pc, r1
    d400:	ldrb	r2, [r1, r2]
    d404:	strb	r2, [r3]
    d408:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d40c:	sub	r3, r3, #1
    d410:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d414:	ldr	r3, [fp, #-120]	; 0xffffff88
    d418:	lsr	r3, r3, #6
    d41c:	str	r3, [fp, #-120]	; 0xffffff88
    d420:	ldr	r3, [fp, #-124]	; 0xffffff84
    d424:	sub	r2, r3, #1
    d428:	str	r2, [fp, #-124]	; 0xffffff84
    d42c:	cmp	r3, #0
    d430:	ble	d440 <rb_sha512_crypt_r+0xe24>
    d434:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d438:	cmp	r3, #0
    d43c:	bgt	d3e4 <rb_sha512_crypt_r+0xdc8>
    d440:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    d444:	lsl	r2, r3, #16
    d448:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    d44c:	lsl	r3, r3, #8
    d450:	orr	r3, r2, r3
    d454:	ldrb	r2, [fp, #-314]	; 0xfffffec6
    d458:	orr	r3, r3, r2
    d45c:	str	r3, [fp, #-128]	; 0xffffff80
    d460:	mov	r3, #4
    d464:	str	r3, [fp, #-132]	; 0xffffff7c
    d468:	b	d4a8 <rb_sha512_crypt_r+0xe8c>
    d46c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d470:	add	r2, r3, #1
    d474:	str	r2, [fp, #-28]	; 0xffffffe4
    d478:	ldr	r2, [fp, #-128]	; 0xffffff80
    d47c:	and	r2, r2, #63	; 0x3f
    d480:	ldr	r1, [pc, #464]	; d658 <rb_sha512_crypt_r+0x103c>
    d484:	add	r1, pc, r1
    d488:	ldrb	r2, [r1, r2]
    d48c:	strb	r2, [r3]
    d490:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d494:	sub	r3, r3, #1
    d498:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d49c:	ldr	r3, [fp, #-128]	; 0xffffff80
    d4a0:	lsr	r3, r3, #6
    d4a4:	str	r3, [fp, #-128]	; 0xffffff80
    d4a8:	ldr	r3, [fp, #-132]	; 0xffffff7c
    d4ac:	sub	r2, r3, #1
    d4b0:	str	r2, [fp, #-132]	; 0xffffff7c
    d4b4:	cmp	r3, #0
    d4b8:	ble	d4c8 <rb_sha512_crypt_r+0xeac>
    d4bc:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d4c0:	cmp	r3, #0
    d4c4:	bgt	d46c <rb_sha512_crypt_r+0xe50>
    d4c8:	ldrb	r3, [fp, #-271]	; 0xfffffef1
    d4cc:	lsl	r2, r3, #16
    d4d0:	ldrb	r3, [fp, #-313]	; 0xfffffec7
    d4d4:	lsl	r3, r3, #8
    d4d8:	orr	r3, r2, r3
    d4dc:	ldrb	r2, [fp, #-292]	; 0xfffffedc
    d4e0:	orr	r3, r3, r2
    d4e4:	str	r3, [fp, #-136]	; 0xffffff78
    d4e8:	mov	r3, #4
    d4ec:	str	r3, [fp, #-140]	; 0xffffff74
    d4f0:	b	d530 <rb_sha512_crypt_r+0xf14>
    d4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d4f8:	add	r2, r3, #1
    d4fc:	str	r2, [fp, #-28]	; 0xffffffe4
    d500:	ldr	r2, [fp, #-136]	; 0xffffff78
    d504:	and	r2, r2, #63	; 0x3f
    d508:	ldr	r1, [pc, #332]	; d65c <rb_sha512_crypt_r+0x1040>
    d50c:	add	r1, pc, r1
    d510:	ldrb	r2, [r1, r2]
    d514:	strb	r2, [r3]
    d518:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d51c:	sub	r3, r3, #1
    d520:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d524:	ldr	r3, [fp, #-136]	; 0xffffff78
    d528:	lsr	r3, r3, #6
    d52c:	str	r3, [fp, #-136]	; 0xffffff78
    d530:	ldr	r3, [fp, #-140]	; 0xffffff74
    d534:	sub	r2, r3, #1
    d538:	str	r2, [fp, #-140]	; 0xffffff74
    d53c:	cmp	r3, #0
    d540:	ble	d550 <rb_sha512_crypt_r+0xf34>
    d544:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d548:	cmp	r3, #0
    d54c:	bgt	d4f4 <rb_sha512_crypt_r+0xed8>
    d550:	ldrb	r3, [fp, #-312]	; 0xfffffec8
    d554:	lsl	r2, r3, #16
    d558:	ldrb	r3, [fp, #-291]	; 0xfffffedd
    d55c:	lsl	r3, r3, #8
    d560:	orr	r3, r2, r3
    d564:	ldrb	r2, [fp, #-270]	; 0xfffffef2
    d568:	orr	r3, r3, r2
    d56c:	str	r3, [fp, #-144]	; 0xffffff70
    d570:	mov	r3, #4
    d574:	str	r3, [fp, #-148]	; 0xffffff6c
    d578:	b	d5b8 <rb_sha512_crypt_r+0xf9c>
    d57c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d580:	add	r2, r3, #1
    d584:	str	r2, [fp, #-28]	; 0xffffffe4
    d588:	ldr	r2, [fp, #-144]	; 0xffffff70
    d58c:	and	r2, r2, #63	; 0x3f
    d590:	ldr	r1, [pc, #200]	; d660 <rb_sha512_crypt_r+0x1044>
    d594:	add	r1, pc, r1
    d598:	ldrb	r2, [r1, r2]
    d59c:	strb	r2, [r3]
    d5a0:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d5a4:	sub	r3, r3, #1
    d5a8:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d5ac:	ldr	r3, [fp, #-144]	; 0xffffff70
    d5b0:	lsr	r3, r3, #6
    d5b4:	str	r3, [fp, #-144]	; 0xffffff70
    d5b8:	ldr	r3, [fp, #-148]	; 0xffffff6c
    d5bc:	sub	r2, r3, #1
    d5c0:	str	r2, [fp, #-148]	; 0xffffff6c
    d5c4:	cmp	r3, #0
    d5c8:	ble	d5d8 <rb_sha512_crypt_r+0xfbc>
    d5cc:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d5d0:	cmp	r3, #0
    d5d4:	bgt	d57c <rb_sha512_crypt_r+0xf60>
    d5d8:	ldrb	r3, [fp, #-290]	; 0xfffffede
    d5dc:	lsl	r2, r3, #16
    d5e0:	ldrb	r3, [fp, #-269]	; 0xfffffef3
    d5e4:	lsl	r3, r3, #8
    d5e8:	orr	r3, r2, r3
    d5ec:	ldrb	r2, [fp, #-311]	; 0xfffffec9
    d5f0:	orr	r3, r3, r2
    d5f4:	str	r3, [fp, #-152]	; 0xffffff68
    d5f8:	mov	r3, #4
    d5fc:	str	r3, [fp, #-156]	; 0xffffff64
    d600:	b	d6c4 <rb_sha512_crypt_r+0x10a8>
    d604:	.word	0x00001388
    d608:	.word	0x00015b98
    d60c:	.word	0x00015b70
    d610:	.word	0x3b9ac9ff
    d614:	.word	0x00015674
    d618:	.word	0x00015654
    d61c:	.word	0xaaaaaaab
    d620:	.word	0x24924925
    d624:	.word	0x00015494
    d628:	.word	0x00015424
    d62c:	.word	0x0001510c
    d630:	.word	0x00014acc
    d634:	.word	0x00014a44
    d638:	.word	0x000149bc
    d63c:	.word	0x00014934
    d640:	.word	0x000148ac
    d644:	.word	0x00014824
    d648:	.word	0x0001479c
    d64c:	.word	0x00014714
    d650:	.word	0x0001468c
    d654:	.word	0x00014604
    d658:	.word	0x0001457c
    d65c:	.word	0x000144f4
    d660:	.word	0x0001446c
    d664:	.word	0x00014360
    d668:	.word	0x000142d8
    d66c:	.word	0x00014250
    d670:	.word	0x000141c8
    d674:	.word	0x00014140
    d678:	.word	0x000140b8
    d67c:	.word	0x00014030
    d680:	.word	0x00013fa8
    d684:	.word	0x00013f38
    d688:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d68c:	add	r2, r3, #1
    d690:	str	r2, [fp, #-28]	; 0xffffffe4
    d694:	ldr	r2, [fp, #-152]	; 0xffffff68
    d698:	and	r2, r2, #63	; 0x3f
    d69c:	ldr	r1, [pc, #-64]	; d664 <rb_sha512_crypt_r+0x1048>
    d6a0:	add	r1, pc, r1
    d6a4:	ldrb	r2, [r1, r2]
    d6a8:	strb	r2, [r3]
    d6ac:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d6b0:	sub	r3, r3, #1
    d6b4:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d6b8:	ldr	r3, [fp, #-152]	; 0xffffff68
    d6bc:	lsr	r3, r3, #6
    d6c0:	str	r3, [fp, #-152]	; 0xffffff68
    d6c4:	ldr	r3, [fp, #-156]	; 0xffffff64
    d6c8:	sub	r2, r3, #1
    d6cc:	str	r2, [fp, #-156]	; 0xffffff64
    d6d0:	cmp	r3, #0
    d6d4:	ble	d6e4 <rb_sha512_crypt_r+0x10c8>
    d6d8:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d6dc:	cmp	r3, #0
    d6e0:	bgt	d688 <rb_sha512_crypt_r+0x106c>
    d6e4:	ldrb	r3, [fp, #-268]	; 0xfffffef4
    d6e8:	lsl	r2, r3, #16
    d6ec:	ldrb	r3, [fp, #-310]	; 0xfffffeca
    d6f0:	lsl	r3, r3, #8
    d6f4:	orr	r3, r2, r3
    d6f8:	ldrb	r2, [fp, #-289]	; 0xfffffedf
    d6fc:	orr	r3, r3, r2
    d700:	str	r3, [fp, #-160]	; 0xffffff60
    d704:	mov	r3, #4
    d708:	str	r3, [fp, #-164]	; 0xffffff5c
    d70c:	b	d74c <rb_sha512_crypt_r+0x1130>
    d710:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d714:	add	r2, r3, #1
    d718:	str	r2, [fp, #-28]	; 0xffffffe4
    d71c:	ldr	r2, [fp, #-160]	; 0xffffff60
    d720:	and	r2, r2, #63	; 0x3f
    d724:	ldr	r1, [pc, #-196]	; d668 <rb_sha512_crypt_r+0x104c>
    d728:	add	r1, pc, r1
    d72c:	ldrb	r2, [r1, r2]
    d730:	strb	r2, [r3]
    d734:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d738:	sub	r3, r3, #1
    d73c:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d740:	ldr	r3, [fp, #-160]	; 0xffffff60
    d744:	lsr	r3, r3, #6
    d748:	str	r3, [fp, #-160]	; 0xffffff60
    d74c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d750:	sub	r2, r3, #1
    d754:	str	r2, [fp, #-164]	; 0xffffff5c
    d758:	cmp	r3, #0
    d75c:	ble	d76c <rb_sha512_crypt_r+0x1150>
    d760:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d764:	cmp	r3, #0
    d768:	bgt	d710 <rb_sha512_crypt_r+0x10f4>
    d76c:	ldrb	r3, [fp, #-309]	; 0xfffffecb
    d770:	lsl	r2, r3, #16
    d774:	ldrb	r3, [fp, #-288]	; 0xfffffee0
    d778:	lsl	r3, r3, #8
    d77c:	orr	r3, r2, r3
    d780:	ldrb	r2, [fp, #-267]	; 0xfffffef5
    d784:	orr	r3, r3, r2
    d788:	str	r3, [fp, #-168]	; 0xffffff58
    d78c:	mov	r3, #4
    d790:	str	r3, [fp, #-172]	; 0xffffff54
    d794:	b	d7d4 <rb_sha512_crypt_r+0x11b8>
    d798:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d79c:	add	r2, r3, #1
    d7a0:	str	r2, [fp, #-28]	; 0xffffffe4
    d7a4:	ldr	r2, [fp, #-168]	; 0xffffff58
    d7a8:	and	r2, r2, #63	; 0x3f
    d7ac:	ldr	r1, [pc, #-328]	; d66c <rb_sha512_crypt_r+0x1050>
    d7b0:	add	r1, pc, r1
    d7b4:	ldrb	r2, [r1, r2]
    d7b8:	strb	r2, [r3]
    d7bc:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d7c0:	sub	r3, r3, #1
    d7c4:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d7c8:	ldr	r3, [fp, #-168]	; 0xffffff58
    d7cc:	lsr	r3, r3, #6
    d7d0:	str	r3, [fp, #-168]	; 0xffffff58
    d7d4:	ldr	r3, [fp, #-172]	; 0xffffff54
    d7d8:	sub	r2, r3, #1
    d7dc:	str	r2, [fp, #-172]	; 0xffffff54
    d7e0:	cmp	r3, #0
    d7e4:	ble	d7f4 <rb_sha512_crypt_r+0x11d8>
    d7e8:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d7ec:	cmp	r3, #0
    d7f0:	bgt	d798 <rb_sha512_crypt_r+0x117c>
    d7f4:	ldrb	r3, [fp, #-287]	; 0xfffffee1
    d7f8:	lsl	r2, r3, #16
    d7fc:	ldrb	r3, [fp, #-266]	; 0xfffffef6
    d800:	lsl	r3, r3, #8
    d804:	orr	r3, r2, r3
    d808:	ldrb	r2, [fp, #-308]	; 0xfffffecc
    d80c:	orr	r3, r3, r2
    d810:	str	r3, [fp, #-176]	; 0xffffff50
    d814:	mov	r3, #4
    d818:	str	r3, [fp, #-180]	; 0xffffff4c
    d81c:	b	d85c <rb_sha512_crypt_r+0x1240>
    d820:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d824:	add	r2, r3, #1
    d828:	str	r2, [fp, #-28]	; 0xffffffe4
    d82c:	ldr	r2, [fp, #-176]	; 0xffffff50
    d830:	and	r2, r2, #63	; 0x3f
    d834:	ldr	r1, [pc, #-460]	; d670 <rb_sha512_crypt_r+0x1054>
    d838:	add	r1, pc, r1
    d83c:	ldrb	r2, [r1, r2]
    d840:	strb	r2, [r3]
    d844:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d848:	sub	r3, r3, #1
    d84c:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d850:	ldr	r3, [fp, #-176]	; 0xffffff50
    d854:	lsr	r3, r3, #6
    d858:	str	r3, [fp, #-176]	; 0xffffff50
    d85c:	ldr	r3, [fp, #-180]	; 0xffffff4c
    d860:	sub	r2, r3, #1
    d864:	str	r2, [fp, #-180]	; 0xffffff4c
    d868:	cmp	r3, #0
    d86c:	ble	d87c <rb_sha512_crypt_r+0x1260>
    d870:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d874:	cmp	r3, #0
    d878:	bgt	d820 <rb_sha512_crypt_r+0x1204>
    d87c:	ldrb	r3, [fp, #-265]	; 0xfffffef7
    d880:	lsl	r2, r3, #16
    d884:	ldrb	r3, [fp, #-307]	; 0xfffffecd
    d888:	lsl	r3, r3, #8
    d88c:	orr	r3, r2, r3
    d890:	ldrb	r2, [fp, #-286]	; 0xfffffee2
    d894:	orr	r3, r3, r2
    d898:	str	r3, [fp, #-184]	; 0xffffff48
    d89c:	mov	r3, #4
    d8a0:	str	r3, [fp, #-188]	; 0xffffff44
    d8a4:	b	d8e4 <rb_sha512_crypt_r+0x12c8>
    d8a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d8ac:	add	r2, r3, #1
    d8b0:	str	r2, [fp, #-28]	; 0xffffffe4
    d8b4:	ldr	r2, [fp, #-184]	; 0xffffff48
    d8b8:	and	r2, r2, #63	; 0x3f
    d8bc:	ldr	r1, [pc, #-592]	; d674 <rb_sha512_crypt_r+0x1058>
    d8c0:	add	r1, pc, r1
    d8c4:	ldrb	r2, [r1, r2]
    d8c8:	strb	r2, [r3]
    d8cc:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d8d0:	sub	r3, r3, #1
    d8d4:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d8d8:	ldr	r3, [fp, #-184]	; 0xffffff48
    d8dc:	lsr	r3, r3, #6
    d8e0:	str	r3, [fp, #-184]	; 0xffffff48
    d8e4:	ldr	r3, [fp, #-188]	; 0xffffff44
    d8e8:	sub	r2, r3, #1
    d8ec:	str	r2, [fp, #-188]	; 0xffffff44
    d8f0:	cmp	r3, #0
    d8f4:	ble	d904 <rb_sha512_crypt_r+0x12e8>
    d8f8:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d8fc:	cmp	r3, #0
    d900:	bgt	d8a8 <rb_sha512_crypt_r+0x128c>
    d904:	ldrb	r3, [fp, #-306]	; 0xfffffece
    d908:	lsl	r2, r3, #16
    d90c:	ldrb	r3, [fp, #-285]	; 0xfffffee3
    d910:	lsl	r3, r3, #8
    d914:	orr	r3, r2, r3
    d918:	ldrb	r2, [fp, #-264]	; 0xfffffef8
    d91c:	orr	r3, r3, r2
    d920:	str	r3, [fp, #-192]	; 0xffffff40
    d924:	mov	r3, #4
    d928:	str	r3, [fp, #-196]	; 0xffffff3c
    d92c:	b	d96c <rb_sha512_crypt_r+0x1350>
    d930:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d934:	add	r2, r3, #1
    d938:	str	r2, [fp, #-28]	; 0xffffffe4
    d93c:	ldr	r2, [fp, #-192]	; 0xffffff40
    d940:	and	r2, r2, #63	; 0x3f
    d944:	ldr	r1, [pc, #-724]	; d678 <rb_sha512_crypt_r+0x105c>
    d948:	add	r1, pc, r1
    d94c:	ldrb	r2, [r1, r2]
    d950:	strb	r2, [r3]
    d954:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d958:	sub	r3, r3, #1
    d95c:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d960:	ldr	r3, [fp, #-192]	; 0xffffff40
    d964:	lsr	r3, r3, #6
    d968:	str	r3, [fp, #-192]	; 0xffffff40
    d96c:	ldr	r3, [fp, #-196]	; 0xffffff3c
    d970:	sub	r2, r3, #1
    d974:	str	r2, [fp, #-196]	; 0xffffff3c
    d978:	cmp	r3, #0
    d97c:	ble	d98c <rb_sha512_crypt_r+0x1370>
    d980:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d984:	cmp	r3, #0
    d988:	bgt	d930 <rb_sha512_crypt_r+0x1314>
    d98c:	ldrb	r3, [fp, #-284]	; 0xfffffee4
    d990:	lsl	r2, r3, #16
    d994:	ldrb	r3, [fp, #-263]	; 0xfffffef9
    d998:	lsl	r3, r3, #8
    d99c:	orr	r3, r2, r3
    d9a0:	ldrb	r2, [fp, #-305]	; 0xfffffecf
    d9a4:	orr	r3, r3, r2
    d9a8:	str	r3, [fp, #-200]	; 0xffffff38
    d9ac:	mov	r3, #4
    d9b0:	str	r3, [fp, #-204]	; 0xffffff34
    d9b4:	b	d9f4 <rb_sha512_crypt_r+0x13d8>
    d9b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d9bc:	add	r2, r3, #1
    d9c0:	str	r2, [fp, #-28]	; 0xffffffe4
    d9c4:	ldr	r2, [fp, #-200]	; 0xffffff38
    d9c8:	and	r2, r2, #63	; 0x3f
    d9cc:	ldr	r1, [pc, #-856]	; d67c <rb_sha512_crypt_r+0x1060>
    d9d0:	add	r1, pc, r1
    d9d4:	ldrb	r2, [r1, r2]
    d9d8:	strb	r2, [r3]
    d9dc:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    d9e0:	sub	r3, r3, #1
    d9e4:	str	r3, [fp, #-1100]	; 0xfffffbb4
    d9e8:	ldr	r3, [fp, #-200]	; 0xffffff38
    d9ec:	lsr	r3, r3, #6
    d9f0:	str	r3, [fp, #-200]	; 0xffffff38
    d9f4:	ldr	r3, [fp, #-204]	; 0xffffff34
    d9f8:	sub	r2, r3, #1
    d9fc:	str	r2, [fp, #-204]	; 0xffffff34
    da00:	cmp	r3, #0
    da04:	ble	da14 <rb_sha512_crypt_r+0x13f8>
    da08:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    da0c:	cmp	r3, #0
    da10:	bgt	d9b8 <rb_sha512_crypt_r+0x139c>
    da14:	ldrb	r3, [fp, #-262]	; 0xfffffefa
    da18:	lsl	r2, r3, #16
    da1c:	ldrb	r3, [fp, #-304]	; 0xfffffed0
    da20:	lsl	r3, r3, #8
    da24:	orr	r3, r2, r3
    da28:	ldrb	r2, [fp, #-283]	; 0xfffffee5
    da2c:	orr	r3, r3, r2
    da30:	str	r3, [fp, #-208]	; 0xffffff30
    da34:	mov	r3, #4
    da38:	str	r3, [fp, #-212]	; 0xffffff2c
    da3c:	b	da7c <rb_sha512_crypt_r+0x1460>
    da40:	ldr	r3, [fp, #-28]	; 0xffffffe4
    da44:	add	r2, r3, #1
    da48:	str	r2, [fp, #-28]	; 0xffffffe4
    da4c:	ldr	r2, [fp, #-208]	; 0xffffff30
    da50:	and	r2, r2, #63	; 0x3f
    da54:	ldr	r1, [pc, #-988]	; d680 <rb_sha512_crypt_r+0x1064>
    da58:	add	r1, pc, r1
    da5c:	ldrb	r2, [r1, r2]
    da60:	strb	r2, [r3]
    da64:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    da68:	sub	r3, r3, #1
    da6c:	str	r3, [fp, #-1100]	; 0xfffffbb4
    da70:	ldr	r3, [fp, #-208]	; 0xffffff30
    da74:	lsr	r3, r3, #6
    da78:	str	r3, [fp, #-208]	; 0xffffff30
    da7c:	ldr	r3, [fp, #-212]	; 0xffffff2c
    da80:	sub	r2, r3, #1
    da84:	str	r2, [fp, #-212]	; 0xffffff2c
    da88:	cmp	r3, #0
    da8c:	ble	da9c <rb_sha512_crypt_r+0x1480>
    da90:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    da94:	cmp	r3, #0
    da98:	bgt	da40 <rb_sha512_crypt_r+0x1424>
    da9c:	ldrb	r3, [fp, #-261]	; 0xfffffefb
    daa0:	str	r3, [fp, #-216]	; 0xffffff28
    daa4:	mov	r3, #2
    daa8:	str	r3, [fp, #-220]	; 0xffffff24
    daac:	b	daec <rb_sha512_crypt_r+0x14d0>
    dab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    dab4:	add	r2, r3, #1
    dab8:	str	r2, [fp, #-28]	; 0xffffffe4
    dabc:	ldr	r2, [fp, #-216]	; 0xffffff28
    dac0:	and	r2, r2, #63	; 0x3f
    dac4:	ldr	r1, [pc, #-1096]	; d684 <rb_sha512_crypt_r+0x1068>
    dac8:	add	r1, pc, r1
    dacc:	ldrb	r2, [r1, r2]
    dad0:	strb	r2, [r3]
    dad4:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    dad8:	sub	r3, r3, #1
    dadc:	str	r3, [fp, #-1100]	; 0xfffffbb4
    dae0:	ldr	r3, [fp, #-216]	; 0xffffff28
    dae4:	lsr	r3, r3, #6
    dae8:	str	r3, [fp, #-216]	; 0xffffff28
    daec:	ldr	r3, [fp, #-220]	; 0xffffff24
    daf0:	sub	r2, r3, #1
    daf4:	str	r2, [fp, #-220]	; 0xffffff24
    daf8:	cmp	r3, #0
    dafc:	ble	db0c <rb_sha512_crypt_r+0x14f0>
    db00:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    db04:	cmp	r3, #0
    db08:	bgt	dab0 <rb_sha512_crypt_r+0x1494>
    db0c:	ldr	r3, [fp, #-1100]	; 0xfffffbb4
    db10:	cmp	r3, #0
    db14:	bgt	db34 <rb_sha512_crypt_r+0x1518>
    db18:	bl	4d78 <__errno_location@plt>
    db1c:	mov	r2, r0
    db20:	mov	r3, #34	; 0x22
    db24:	str	r3, [r2]
    db28:	mov	r3, #0
    db2c:	str	r3, [fp, #-1096]	; 0xfffffbb8
    db30:	b	db40 <rb_sha512_crypt_r+0x1524>
    db34:	ldr	r3, [fp, #-28]	; 0xffffffe4
    db38:	mov	r2, #0
    db3c:	strb	r2, [r3]
    db40:	sub	r3, fp, #732	; 0x2dc
    db44:	mov	r0, r3
    db48:	bl	b834 <rb_sha512_init_ctx>
    db4c:	sub	r2, fp, #324	; 0x144
    db50:	sub	r3, fp, #732	; 0x2dc
    db54:	mov	r1, r2
    db58:	mov	r0, r3
    db5c:	bl	b948 <rb_sha512_finish_ctx>
    db60:	sub	r3, fp, #388	; 0x184
    db64:	mov	r2, #64	; 0x40
    db68:	mov	r1, #0
    db6c:	mov	r0, r3
    db70:	bl	4694 <memset@plt>
    db74:	ldr	r2, [fp, #-236]	; 0xffffff14
    db78:	mov	r1, #0
    db7c:	ldr	r0, [fp, #-248]	; 0xffffff08
    db80:	bl	4694 <memset@plt>
    db84:	ldr	r2, [fp, #-232]	; 0xffffff18
    db88:	mov	r1, #0
    db8c:	ldr	r0, [fp, #-252]	; 0xffffff04
    db90:	bl	4694 <memset@plt>
    db94:	sub	r3, fp, #732	; 0x2dc
    db98:	mov	r2, #344	; 0x158
    db9c:	mov	r1, #0
    dba0:	mov	r0, r3
    dba4:	bl	4694 <memset@plt>
    dba8:	sub	r3, fp, #1072	; 0x430
    dbac:	sub	r3, r3, #4
    dbb0:	mov	r2, #344	; 0x158
    dbb4:	mov	r1, #0
    dbb8:	mov	r0, r3
    dbbc:	bl	4694 <memset@plt>
    dbc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    dbc4:	cmp	r3, #0
    dbc8:	beq	dbdc <rb_sha512_crypt_r+0x15c0>
    dbcc:	ldr	r2, [fp, #-236]	; 0xffffff14
    dbd0:	mov	r1, #0
    dbd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    dbd8:	bl	4694 <memset@plt>
    dbdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    dbe0:	cmp	r3, #0
    dbe4:	beq	dbf8 <rb_sha512_crypt_r+0x15dc>
    dbe8:	ldr	r2, [fp, #-232]	; 0xffffff18
    dbec:	mov	r1, #0
    dbf0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    dbf4:	bl	4694 <memset@plt>
    dbf8:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    dbfc:	mov	r0, r3
    dc00:	sub	sp, fp, #16
    dc04:	pop	{r4, r5, r6, fp, pc}

0000dc08 <rb_sha512_crypt>:
    dc08:	push	{fp, lr}
    dc0c:	add	fp, sp, #4
    dc10:	sub	sp, sp, #16
    dc14:	str	r0, [fp, #-16]
    dc18:	str	r1, [fp, #-20]	; 0xffffffec
    dc1c:	ldr	r0, [fp, #-20]	; 0xffffffec
    dc20:	bl	485c <strlen@plt>
    dc24:	mov	r3, r0
    dc28:	add	r3, r3, #109	; 0x6d
    dc2c:	str	r3, [fp, #-8]
    dc30:	ldr	r3, [pc, #152]	; dcd0 <rb_sha512_crypt+0xc8>
    dc34:	add	r3, pc, r3
    dc38:	ldr	r2, [r3]
    dc3c:	ldr	r3, [fp, #-8]
    dc40:	cmp	r2, r3
    dc44:	bge	dc9c <rb_sha512_crypt+0x94>
    dc48:	ldr	r3, [pc, #132]	; dcd4 <rb_sha512_crypt+0xcc>
    dc4c:	add	r3, pc, r3
    dc50:	ldr	r3, [r3]
    dc54:	ldr	r2, [fp, #-8]
    dc58:	mov	r1, r2
    dc5c:	mov	r0, r3
    dc60:	bl	4cc4 <realloc@plt>
    dc64:	str	r0, [fp, #-12]
    dc68:	ldr	r3, [fp, #-12]
    dc6c:	cmp	r3, #0
    dc70:	bne	dc7c <rb_sha512_crypt+0x74>
    dc74:	mov	r3, #0
    dc78:	b	dcc4 <rb_sha512_crypt+0xbc>
    dc7c:	ldr	r3, [pc, #84]	; dcd8 <rb_sha512_crypt+0xd0>
    dc80:	add	r3, pc, r3
    dc84:	ldr	r2, [fp, #-12]
    dc88:	str	r2, [r3]
    dc8c:	ldr	r3, [pc, #72]	; dcdc <rb_sha512_crypt+0xd4>
    dc90:	add	r3, pc, r3
    dc94:	ldr	r2, [fp, #-8]
    dc98:	str	r2, [r3]
    dc9c:	ldr	r3, [pc, #60]	; dce0 <rb_sha512_crypt+0xd8>
    dca0:	add	r3, pc, r3
    dca4:	ldr	r2, [r3]
    dca8:	ldr	r3, [pc, #52]	; dce4 <rb_sha512_crypt+0xdc>
    dcac:	add	r3, pc, r3
    dcb0:	ldr	r3, [r3]
    dcb4:	ldr	r1, [fp, #-20]	; 0xffffffec
    dcb8:	ldr	r0, [fp, #-16]
    dcbc:	bl	c61c <rb_sha512_crypt_r>
    dcc0:	mov	r3, r0
    dcc4:	mov	r0, r3
    dcc8:	sub	sp, fp, #4
    dccc:	pop	{fp, pc}
    dcd0:	.word	0x00039240
    dcd4:	.word	0x0003922c
    dcd8:	.word	0x000391f8
    dcdc:	.word	0x000391e4
    dce0:	.word	0x000391d8
    dce4:	.word	0x000391c8

0000dce8 <rb_dlinkAdd>:
    dce8:	push	{fp}		; (str fp, [sp, #-4]!)
    dcec:	add	fp, sp, #0
    dcf0:	sub	sp, sp, #20
    dcf4:	str	r0, [fp, #-8]
    dcf8:	str	r1, [fp, #-12]
    dcfc:	str	r2, [fp, #-16]
    dd00:	ldr	r3, [fp, #-12]
    dd04:	ldr	r2, [fp, #-8]
    dd08:	str	r2, [r3]
    dd0c:	ldr	r3, [fp, #-12]
    dd10:	mov	r2, #0
    dd14:	str	r2, [r3, #4]
    dd18:	ldr	r3, [fp, #-16]
    dd1c:	ldr	r2, [r3]
    dd20:	ldr	r3, [fp, #-12]
    dd24:	str	r2, [r3, #8]
    dd28:	ldr	r3, [fp, #-16]
    dd2c:	ldr	r3, [r3]
    dd30:	cmp	r3, #0
    dd34:	beq	dd4c <rb_dlinkAdd+0x64>
    dd38:	ldr	r3, [fp, #-16]
    dd3c:	ldr	r3, [r3]
    dd40:	ldr	r2, [fp, #-12]
    dd44:	str	r2, [r3, #4]
    dd48:	b	dd68 <rb_dlinkAdd+0x80>
    dd4c:	ldr	r3, [fp, #-16]
    dd50:	ldr	r3, [r3, #4]
    dd54:	cmp	r3, #0
    dd58:	bne	dd68 <rb_dlinkAdd+0x80>
    dd5c:	ldr	r3, [fp, #-16]
    dd60:	ldr	r2, [fp, #-12]
    dd64:	str	r2, [r3, #4]
    dd68:	ldr	r3, [fp, #-16]
    dd6c:	ldr	r2, [fp, #-12]
    dd70:	str	r2, [r3]
    dd74:	ldr	r3, [fp, #-16]
    dd78:	ldr	r3, [r3, #8]
    dd7c:	add	r2, r3, #1
    dd80:	ldr	r3, [fp, #-16]
    dd84:	str	r2, [r3, #8]
    dd88:	nop			; (mov r0, r0)
    dd8c:	add	sp, fp, #0
    dd90:	pop	{fp}		; (ldr fp, [sp], #4)
    dd94:	bx	lr

0000dd98 <rb_dlinkDelete>:
    dd98:	push	{fp}		; (str fp, [sp, #-4]!)
    dd9c:	add	fp, sp, #0
    dda0:	sub	sp, sp, #12
    dda4:	str	r0, [fp, #-8]
    dda8:	str	r1, [fp, #-12]
    ddac:	ldr	r3, [fp, #-8]
    ddb0:	ldr	r3, [r3, #8]
    ddb4:	cmp	r3, #0
    ddb8:	beq	ddd4 <rb_dlinkDelete+0x3c>
    ddbc:	ldr	r3, [fp, #-8]
    ddc0:	ldr	r3, [r3, #8]
    ddc4:	ldr	r2, [fp, #-8]
    ddc8:	ldr	r2, [r2, #4]
    ddcc:	str	r2, [r3, #4]
    ddd0:	b	dde4 <rb_dlinkDelete+0x4c>
    ddd4:	ldr	r3, [fp, #-8]
    ddd8:	ldr	r2, [r3, #4]
    dddc:	ldr	r3, [fp, #-12]
    dde0:	str	r2, [r3, #4]
    dde4:	ldr	r3, [fp, #-8]
    dde8:	ldr	r3, [r3, #4]
    ddec:	cmp	r3, #0
    ddf0:	beq	de0c <rb_dlinkDelete+0x74>
    ddf4:	ldr	r3, [fp, #-8]
    ddf8:	ldr	r3, [r3, #4]
    ddfc:	ldr	r2, [fp, #-8]
    de00:	ldr	r2, [r2, #8]
    de04:	str	r2, [r3, #8]
    de08:	b	de1c <rb_dlinkDelete+0x84>
    de0c:	ldr	r3, [fp, #-8]
    de10:	ldr	r2, [r3, #8]
    de14:	ldr	r3, [fp, #-12]
    de18:	str	r2, [r3]
    de1c:	ldr	r3, [fp, #-8]
    de20:	mov	r2, #0
    de24:	str	r2, [r3, #4]
    de28:	ldr	r3, [fp, #-8]
    de2c:	ldr	r2, [r3, #4]
    de30:	ldr	r3, [fp, #-8]
    de34:	str	r2, [r3, #8]
    de38:	ldr	r3, [fp, #-12]
    de3c:	ldr	r3, [r3, #8]
    de40:	sub	r2, r3, #1
    de44:	ldr	r3, [fp, #-12]
    de48:	str	r2, [r3, #8]
    de4c:	nop			; (mov r0, r0)
    de50:	add	sp, fp, #0
    de54:	pop	{fp}		; (ldr fp, [sp], #4)
    de58:	bx	lr

0000de5c <rb_malloc>:
    de5c:	push	{fp, lr}
    de60:	add	fp, sp, #4
    de64:	sub	sp, sp, #16
    de68:	str	r0, [fp, #-16]
    de6c:	ldr	r1, [fp, #-16]
    de70:	mov	r0, #1
    de74:	bl	4658 <calloc@plt>
    de78:	mov	r3, r0
    de7c:	str	r3, [fp, #-8]
    de80:	ldr	r3, [fp, #-8]
    de84:	cmp	r3, #0
    de88:	moveq	r3, #1
    de8c:	movne	r3, #0
    de90:	uxtb	r3, r3
    de94:	cmp	r3, #0
    de98:	beq	dea0 <rb_malloc+0x44>
    de9c:	bl	4a00 <rb_outofmemory@plt>
    dea0:	ldr	r3, [fp, #-8]
    dea4:	mov	r0, r3
    dea8:	sub	sp, fp, #4
    deac:	pop	{fp, pc}

0000deb0 <rb_strdup>:
    deb0:	push	{fp, lr}
    deb4:	add	fp, sp, #4
    deb8:	sub	sp, sp, #16
    debc:	str	r0, [fp, #-16]
    dec0:	ldr	r0, [fp, #-16]
    dec4:	bl	485c <strlen@plt>
    dec8:	mov	r3, r0
    decc:	add	r3, r3, #1
    ded0:	mov	r0, r3
    ded4:	bl	4a24 <malloc@plt>
    ded8:	mov	r3, r0
    dedc:	str	r3, [fp, #-8]
    dee0:	ldr	r3, [fp, #-8]
    dee4:	cmp	r3, #0
    dee8:	moveq	r3, #1
    deec:	movne	r3, #0
    def0:	uxtb	r3, r3
    def4:	cmp	r3, #0
    def8:	beq	df00 <rb_strdup+0x50>
    defc:	bl	4a00 <rb_outofmemory@plt>
    df00:	ldr	r1, [fp, #-16]
    df04:	ldr	r0, [fp, #-8]
    df08:	bl	48f8 <strcpy@plt>
    df0c:	ldr	r3, [fp, #-8]
    df10:	mov	r0, r3
    df14:	sub	sp, fp, #4
    df18:	pop	{fp, pc}

0000df1c <rb_free>:
    df1c:	push	{fp, lr}
    df20:	add	fp, sp, #4
    df24:	sub	sp, sp, #8
    df28:	str	r0, [fp, #-8]
    df2c:	ldr	r3, [fp, #-8]
    df30:	cmp	r3, #0
    df34:	movne	r3, #1
    df38:	moveq	r3, #0
    df3c:	uxtb	r3, r3
    df40:	cmp	r3, #0
    df44:	beq	df50 <rb_free+0x34>
    df48:	ldr	r0, [fp, #-8]
    df4c:	bl	476c <free@plt>
    df50:	nop			; (mov r0, r0)
    df54:	sub	sp, fp, #4
    df58:	pop	{fp, pc}

0000df5c <_rb_bh_fail>:
    df5c:	push	{fp, lr}
    df60:	add	fp, sp, #4
    df64:	sub	sp, sp, #16
    df68:	str	r0, [fp, #-8]
    df6c:	str	r1, [fp, #-12]
    df70:	str	r2, [fp, #-16]
    df74:	ldr	r3, [fp, #-16]
    df78:	ldr	r2, [fp, #-12]
    df7c:	ldr	r1, [fp, #-8]
    df80:	ldr	r0, [pc, #8]	; df90 <_rb_bh_fail+0x34>
    df84:	add	r0, pc, r0
    df88:	bl	4994 <rb_lib_log@plt>
    df8c:	bl	4430 <abort@plt>
    df90:	.word	0x0001428c

0000df94 <rb_init_bh>:
    df94:	push	{fp, lr}
    df98:	add	fp, sp, #4
    df9c:	mov	r0, #12
    dfa0:	bl	de5c <rb_malloc>
    dfa4:	mov	r2, r0
    dfa8:	ldr	r3, [pc, #28]	; dfcc <rb_init_bh+0x38>
    dfac:	add	r3, pc, r3
    dfb0:	str	r2, [r3]
    dfb4:	ldr	r3, [pc, #20]	; dfd0 <rb_init_bh+0x3c>
    dfb8:	add	r3, pc, r3
    dfbc:	mov	r2, #4
    dfc0:	str	r2, [r3]
    dfc4:	nop			; (mov r0, r0)
    dfc8:	pop	{fp, pc}
    dfcc:	.word	0x00038ed4
    dfd0:	.word	0x00038ec4

0000dfd4 <rb_bh_create>:
    dfd4:	push	{fp, lr}
    dfd8:	add	fp, sp, #4
    dfdc:	sub	sp, sp, #24
    dfe0:	str	r0, [fp, #-16]
    dfe4:	str	r1, [fp, #-20]	; 0xffffffec
    dfe8:	str	r2, [fp, #-24]	; 0xffffffe8
    dfec:	ldr	r3, [fp, #-16]
    dff0:	cmp	r3, #0
    dff4:	beq	e004 <rb_bh_create+0x30>
    dff8:	ldr	r3, [fp, #-20]	; 0xffffffec
    dffc:	cmp	r3, #0
    e000:	bgt	e024 <rb_bh_create+0x50>
    e004:	mov	r2, #147	; 0x93
    e008:	ldr	r3, [pc, #220]	; e0ec <rb_bh_create+0x118>
    e00c:	add	r3, pc, r3
    e010:	mov	r1, r3
    e014:	ldr	r3, [pc, #212]	; e0f0 <rb_bh_create+0x11c>
    e018:	add	r3, pc, r3
    e01c:	mov	r0, r3
    e020:	bl	df5c <_rb_bh_fail>
    e024:	ldr	r3, [fp, #-16]
    e028:	cmp	r3, #11
    e02c:	bhi	e050 <rb_bh_create+0x7c>
    e030:	mov	r2, #151	; 0x97
    e034:	ldr	r3, [pc, #184]	; e0f4 <rb_bh_create+0x120>
    e038:	add	r3, pc, r3
    e03c:	mov	r1, r3
    e040:	ldr	r3, [pc, #176]	; e0f8 <rb_bh_create+0x124>
    e044:	add	r3, pc, r3
    e048:	mov	r0, r3
    e04c:	bl	df5c <_rb_bh_fail>
    e050:	mov	r0, #48	; 0x30
    e054:	bl	de5c <rb_malloc>
    e058:	str	r0, [fp, #-8]
    e05c:	ldr	r3, [fp, #-8]
    e060:	ldr	r2, [fp, #-16]
    e064:	str	r2, [r3, #12]
    e068:	ldr	r2, [fp, #-20]	; 0xffffffec
    e06c:	ldr	r3, [fp, #-8]
    e070:	str	r2, [r3, #16]
    e074:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e078:	cmp	r3, #0
    e07c:	beq	e094 <rb_bh_create+0xc0>
    e080:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e084:	bl	deb0 <rb_strdup>
    e088:	mov	r2, r0
    e08c:	ldr	r3, [fp, #-8]
    e090:	str	r2, [r3, #44]	; 0x2c
    e094:	ldr	r3, [fp, #-8]
    e098:	cmp	r3, #0
    e09c:	bne	e0c0 <rb_bh_create+0xec>
    e0a0:	mov	r2, #162	; 0xa2
    e0a4:	ldr	r3, [pc, #80]	; e0fc <rb_bh_create+0x128>
    e0a8:	add	r3, pc, r3
    e0ac:	mov	r1, r3
    e0b0:	ldr	r3, [pc, #72]	; e100 <rb_bh_create+0x12c>
    e0b4:	add	r3, pc, r3
    e0b8:	mov	r0, r3
    e0bc:	bl	df5c <_rb_bh_fail>
    e0c0:	ldr	r1, [fp, #-8]
    e0c4:	ldr	r3, [pc, #56]	; e104 <rb_bh_create+0x130>
    e0c8:	add	r3, pc, r3
    e0cc:	ldr	r3, [r3]
    e0d0:	mov	r2, r3
    e0d4:	ldr	r0, [fp, #-8]
    e0d8:	bl	dce8 <rb_dlinkAdd>
    e0dc:	ldr	r3, [fp, #-8]
    e0e0:	mov	r0, r3
    e0e4:	sub	sp, fp, #4
    e0e8:	pop	{fp, pc}
    e0ec:	.word	0x0001422c
    e0f0:	.word	0x0001422c
    e0f4:	.word	0x00014200
    e0f8:	.word	0x0001422c
    e0fc:	.word	0x00014190
    e100:	.word	0x000141f8
    e104:	.word	0x00038db8

0000e108 <rb_bh_alloc>:
    e108:	push	{fp, lr}
    e10c:	add	fp, sp, #4
    e110:	sub	sp, sp, #8
    e114:	str	r0, [fp, #-8]
    e118:	ldr	r3, [fp, #-8]
    e11c:	cmp	r3, #0
    e120:	moveq	r3, #1
    e124:	movne	r3, #0
    e128:	uxtb	r3, r3
    e12c:	cmp	r3, #0
    e130:	beq	e154 <rb_bh_alloc+0x4c>
    e134:	mov	r2, #186	; 0xba
    e138:	ldr	r3, [pc, #52]	; e174 <rb_bh_alloc+0x6c>
    e13c:	add	r3, pc, r3
    e140:	mov	r1, r3
    e144:	ldr	r3, [pc, #44]	; e178 <rb_bh_alloc+0x70>
    e148:	add	r3, pc, r3
    e14c:	mov	r0, r3
    e150:	bl	df5c <_rb_bh_fail>
    e154:	ldr	r3, [fp, #-8]
    e158:	ldr	r3, [r3, #12]
    e15c:	mov	r0, r3
    e160:	bl	de5c <rb_malloc>
    e164:	mov	r3, r0
    e168:	mov	r0, r3
    e16c:	sub	sp, fp, #4
    e170:	pop	{fp, pc}
    e174:	.word	0x000140fc
    e178:	.word	0x00014184

0000e17c <rb_bh_free>:
    e17c:	push	{fp, lr}
    e180:	add	fp, sp, #4
    e184:	sub	sp, sp, #8
    e188:	str	r0, [fp, #-8]
    e18c:	str	r1, [fp, #-12]
    e190:	ldr	r3, [fp, #-8]
    e194:	cmp	r3, #0
    e198:	moveq	r3, #1
    e19c:	movne	r3, #0
    e1a0:	uxtb	r3, r3
    e1a4:	cmp	r3, #0
    e1a8:	beq	e1c4 <rb_bh_free+0x48>
    e1ac:	ldr	r3, [pc, #92]	; e210 <rb_bh_free+0x94>
    e1b0:	add	r3, pc, r3
    e1b4:	mov	r0, r3
    e1b8:	bl	4994 <rb_lib_log@plt>
    e1bc:	mov	r3, #1
    e1c0:	b	e204 <rb_bh_free+0x88>
    e1c4:	ldr	r3, [fp, #-12]
    e1c8:	cmp	r3, #0
    e1cc:	moveq	r3, #1
    e1d0:	movne	r3, #0
    e1d4:	uxtb	r3, r3
    e1d8:	cmp	r3, #0
    e1dc:	beq	e1f8 <rb_bh_free+0x7c>
    e1e0:	ldr	r3, [pc, #44]	; e214 <rb_bh_free+0x98>
    e1e4:	add	r3, pc, r3
    e1e8:	mov	r0, r3
    e1ec:	bl	4994 <rb_lib_log@plt>
    e1f0:	mov	r3, #1
    e1f4:	b	e204 <rb_bh_free+0x88>
    e1f8:	ldr	r0, [fp, #-12]
    e1fc:	bl	df1c <rb_free>
    e200:	mov	r3, #0
    e204:	mov	r0, r3
    e208:	sub	sp, fp, #4
    e20c:	pop	{fp, pc}
    e210:	.word	0x0001413c
    e214:	.word	0x00014128

0000e218 <rb_bh_destroy>:
    e218:	push	{fp, lr}
    e21c:	add	fp, sp, #4
    e220:	sub	sp, sp, #8
    e224:	str	r0, [fp, #-8]
    e228:	ldr	r3, [fp, #-8]
    e22c:	cmp	r3, #0
    e230:	bne	e23c <rb_bh_destroy+0x24>
    e234:	mov	r3, #1
    e238:	b	e274 <rb_bh_destroy+0x5c>
    e23c:	ldr	r2, [fp, #-8]
    e240:	ldr	r3, [pc, #56]	; e280 <rb_bh_destroy+0x68>
    e244:	add	r3, pc, r3
    e248:	ldr	r3, [r3]
    e24c:	mov	r1, r3
    e250:	mov	r0, r2
    e254:	bl	dd98 <rb_dlinkDelete>
    e258:	ldr	r3, [fp, #-8]
    e25c:	ldr	r3, [r3, #44]	; 0x2c
    e260:	mov	r0, r3
    e264:	bl	df1c <rb_free>
    e268:	ldr	r0, [fp, #-8]
    e26c:	bl	df1c <rb_free>
    e270:	mov	r3, #0
    e274:	mov	r0, r3
    e278:	sub	sp, fp, #4
    e27c:	pop	{fp, pc}
    e280:	.word	0x00038c3c

0000e284 <rb_bh_usage>:
    e284:	push	{fp}		; (str fp, [sp, #-4]!)
    e288:	add	fp, sp, #0
    e28c:	sub	sp, sp, #20
    e290:	str	r0, [fp, #-8]
    e294:	str	r1, [fp, #-12]
    e298:	str	r2, [fp, #-16]
    e29c:	str	r3, [fp, #-20]	; 0xffffffec
    e2a0:	ldr	r3, [fp, #-12]
    e2a4:	cmp	r3, #0
    e2a8:	beq	e2b8 <rb_bh_usage+0x34>
    e2ac:	ldr	r3, [fp, #-12]
    e2b0:	mov	r2, #0
    e2b4:	str	r2, [r3]
    e2b8:	ldr	r3, [fp, #-16]
    e2bc:	cmp	r3, #0
    e2c0:	beq	e2d0 <rb_bh_usage+0x4c>
    e2c4:	ldr	r3, [fp, #-16]
    e2c8:	mov	r2, #0
    e2cc:	str	r2, [r3]
    e2d0:	ldr	r3, [fp, #-20]	; 0xffffffec
    e2d4:	cmp	r3, #0
    e2d8:	beq	e2e8 <rb_bh_usage+0x64>
    e2dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    e2e0:	mov	r2, #0
    e2e4:	str	r2, [r3]
    e2e8:	ldr	r3, [fp, #4]
    e2ec:	cmp	r3, #0
    e2f0:	beq	e304 <rb_bh_usage+0x80>
    e2f4:	ldr	r3, [fp, #4]
    e2f8:	ldr	r2, [pc, #20]	; e314 <rb_bh_usage+0x90>
    e2fc:	add	r2, pc, r2
    e300:	str	r2, [r3]
    e304:	nop			; (mov r0, r0)
    e308:	add	sp, fp, #0
    e30c:	pop	{fp}		; (ldr fp, [sp], #4)
    e310:	bx	lr
    e314:	.word	0x00014030

0000e318 <rb_bh_usage_all>:
    e318:	push	{r4, fp, lr}
    e31c:	add	fp, sp, #8
    e320:	sub	sp, sp, #52	; 0x34
    e324:	str	r0, [fp, #-48]	; 0xffffffd0
    e328:	str	r1, [fp, #-52]	; 0xffffffcc
    e32c:	ldr	r3, [pc, #260]	; e438 <rb_bh_usage_all+0x120>
    e330:	add	r3, pc, r3
    e334:	ldr	r3, [r3]
    e338:	str	r3, [fp, #-20]	; 0xffffffec
    e33c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e340:	cmp	r3, #0
    e344:	beq	e42c <rb_bh_usage_all+0x114>
    e348:	ldr	r3, [pc, #236]	; e43c <rb_bh_usage_all+0x124>
    e34c:	add	r3, pc, r3
    e350:	ldr	r3, [r3]
    e354:	ldr	r3, [r3]
    e358:	str	r3, [fp, #-16]
    e35c:	b	e418 <rb_bh_usage_all+0x100>
    e360:	ldr	r3, [fp, #-16]
    e364:	ldr	r3, [r3]
    e368:	str	r3, [fp, #-24]	; 0xffffffe8
    e36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e370:	ldr	r3, [r3, #40]	; 0x28
    e374:	str	r3, [fp, #-28]	; 0xffffffe4
    e378:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e37c:	ldr	r3, [r3, #28]
    e380:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e384:	ldr	r2, [r2, #16]
    e388:	mul	r2, r2, r3
    e38c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    e390:	sub	r3, r2, r3
    e394:	str	r3, [fp, #-32]	; 0xffffffe0
    e398:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e39c:	ldr	r3, [r3, #12]
    e3a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    e3a4:	mul	r3, r2, r3
    e3a8:	str	r3, [fp, #-36]	; 0xffffffdc
    e3ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
    e3b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    e3b4:	add	r3, r2, r3
    e3b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e3bc:	ldr	r2, [r2, #12]
    e3c0:	mul	r3, r2, r3
    e3c4:	str	r3, [fp, #-40]	; 0xffffffd8
    e3c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e3cc:	ldr	r3, [r3, #44]	; 0x2c
    e3d0:	cmp	r3, #0
    e3d4:	beq	e3e4 <rb_bh_usage_all+0xcc>
    e3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e3dc:	ldr	r3, [r3, #44]	; 0x2c
    e3e0:	str	r3, [fp, #-20]	; 0xffffffec
    e3e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    e3e8:	str	r3, [sp, #4]
    e3ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    e3f0:	str	r3, [sp]
    e3f4:	ldr	r4, [fp, #-48]	; 0xffffffd0
    e3f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    e3fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    e400:	ldr	r1, [fp, #-28]	; 0xffffffe4
    e404:	ldr	r0, [fp, #-32]	; 0xffffffe0
    e408:	blx	r4
    e40c:	ldr	r3, [fp, #-16]
    e410:	ldr	r3, [r3, #8]
    e414:	str	r3, [fp, #-16]
    e418:	ldr	r3, [fp, #-16]
    e41c:	cmp	r3, #0
    e420:	bne	e360 <rb_bh_usage_all+0x48>
    e424:	nop			; (mov r0, r0)
    e428:	b	e430 <rb_bh_usage_all+0x118>
    e42c:	nop			; (mov r0, r0)
    e430:	sub	sp, fp, #8
    e434:	pop	{r4, fp, pc}
    e438:	.word	0x00026140
    e43c:	.word	0x00038b34

0000e440 <rb_bh_total_usage>:
    e440:	push	{fp}		; (str fp, [sp, #-4]!)
    e444:	add	fp, sp, #0
    e448:	sub	sp, sp, #36	; 0x24
    e44c:	str	r0, [fp, #-32]	; 0xffffffe0
    e450:	str	r1, [fp, #-36]	; 0xffffffdc
    e454:	mov	r3, #0
    e458:	str	r3, [fp, #-12]
    e45c:	mov	r3, #0
    e460:	str	r3, [fp, #-16]
    e464:	ldr	r3, [pc, #224]	; e54c <rb_bh_total_usage+0x10c>
    e468:	add	r3, pc, r3
    e46c:	ldr	r3, [r3]
    e470:	ldr	r3, [r3]
    e474:	str	r3, [fp, #-8]
    e478:	b	e500 <rb_bh_total_usage+0xc0>
    e47c:	ldr	r3, [fp, #-8]
    e480:	ldr	r3, [r3]
    e484:	str	r3, [fp, #-20]	; 0xffffffec
    e488:	ldr	r3, [fp, #-20]	; 0xffffffec
    e48c:	ldr	r3, [r3, #40]	; 0x28
    e490:	str	r3, [fp, #-24]	; 0xffffffe8
    e494:	ldr	r3, [fp, #-20]	; 0xffffffec
    e498:	ldr	r3, [r3, #28]
    e49c:	ldr	r2, [fp, #-20]	; 0xffffffec
    e4a0:	ldr	r2, [r2, #16]
    e4a4:	mul	r2, r2, r3
    e4a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e4ac:	sub	r3, r2, r3
    e4b0:	str	r3, [fp, #-28]	; 0xffffffe4
    e4b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    e4b8:	ldr	r3, [r3, #12]
    e4bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    e4c0:	mul	r3, r2, r3
    e4c4:	ldr	r2, [fp, #-16]
    e4c8:	add	r3, r2, r3
    e4cc:	str	r3, [fp, #-16]
    e4d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e4d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    e4d8:	add	r3, r2, r3
    e4dc:	ldr	r2, [fp, #-20]	; 0xffffffec
    e4e0:	ldr	r2, [r2, #12]
    e4e4:	mul	r3, r2, r3
    e4e8:	ldr	r2, [fp, #-12]
    e4ec:	add	r3, r2, r3
    e4f0:	str	r3, [fp, #-12]
    e4f4:	ldr	r3, [fp, #-8]
    e4f8:	ldr	r3, [r3, #8]
    e4fc:	str	r3, [fp, #-8]
    e500:	ldr	r3, [fp, #-8]
    e504:	cmp	r3, #0
    e508:	bne	e47c <rb_bh_total_usage+0x3c>
    e50c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    e510:	cmp	r3, #0
    e514:	beq	e524 <rb_bh_total_usage+0xe4>
    e518:	ldr	r3, [fp, #-32]	; 0xffffffe0
    e51c:	ldr	r2, [fp, #-12]
    e520:	str	r2, [r3]
    e524:	ldr	r3, [fp, #-36]	; 0xffffffdc
    e528:	cmp	r3, #0
    e52c:	beq	e53c <rb_bh_total_usage+0xfc>
    e530:	ldr	r3, [fp, #-36]	; 0xffffffdc
    e534:	ldr	r2, [fp, #-16]
    e538:	str	r2, [r3]
    e53c:	nop			; (mov r0, r0)
    e540:	add	sp, fp, #0
    e544:	pop	{fp}		; (ldr fp, [sp], #4)
    e548:	bx	lr
    e54c:	.word	0x00038a18

0000e550 <rb_dlinkMoveNode>:
    e550:	push	{fp}		; (str fp, [sp, #-4]!)
    e554:	add	fp, sp, #0
    e558:	sub	sp, sp, #20
    e55c:	str	r0, [fp, #-8]
    e560:	str	r1, [fp, #-12]
    e564:	str	r2, [fp, #-16]
    e568:	ldr	r3, [fp, #-8]
    e56c:	ldr	r3, [r3, #8]
    e570:	cmp	r3, #0
    e574:	beq	e590 <rb_dlinkMoveNode+0x40>
    e578:	ldr	r3, [fp, #-8]
    e57c:	ldr	r3, [r3, #8]
    e580:	ldr	r2, [fp, #-8]
    e584:	ldr	r2, [r2, #4]
    e588:	str	r2, [r3, #4]
    e58c:	b	e5a0 <rb_dlinkMoveNode+0x50>
    e590:	ldr	r3, [fp, #-8]
    e594:	ldr	r2, [r3, #4]
    e598:	ldr	r3, [fp, #-12]
    e59c:	str	r2, [r3, #4]
    e5a0:	ldr	r3, [fp, #-8]
    e5a4:	ldr	r3, [r3, #4]
    e5a8:	cmp	r3, #0
    e5ac:	beq	e5c8 <rb_dlinkMoveNode+0x78>
    e5b0:	ldr	r3, [fp, #-8]
    e5b4:	ldr	r3, [r3, #4]
    e5b8:	ldr	r2, [fp, #-8]
    e5bc:	ldr	r2, [r2, #8]
    e5c0:	str	r2, [r3, #8]
    e5c4:	b	e5d8 <rb_dlinkMoveNode+0x88>
    e5c8:	ldr	r3, [fp, #-8]
    e5cc:	ldr	r2, [r3, #8]
    e5d0:	ldr	r3, [fp, #-12]
    e5d4:	str	r2, [r3]
    e5d8:	ldr	r3, [fp, #-8]
    e5dc:	mov	r2, #0
    e5e0:	str	r2, [r3, #4]
    e5e4:	ldr	r3, [fp, #-16]
    e5e8:	ldr	r2, [r3]
    e5ec:	ldr	r3, [fp, #-8]
    e5f0:	str	r2, [r3, #8]
    e5f4:	ldr	r3, [fp, #-16]
    e5f8:	ldr	r3, [r3]
    e5fc:	cmp	r3, #0
    e600:	beq	e618 <rb_dlinkMoveNode+0xc8>
    e604:	ldr	r3, [fp, #-16]
    e608:	ldr	r3, [r3]
    e60c:	ldr	r2, [fp, #-8]
    e610:	str	r2, [r3, #4]
    e614:	b	e634 <rb_dlinkMoveNode+0xe4>
    e618:	ldr	r3, [fp, #-16]
    e61c:	ldr	r3, [r3, #4]
    e620:	cmp	r3, #0
    e624:	bne	e634 <rb_dlinkMoveNode+0xe4>
    e628:	ldr	r3, [fp, #-16]
    e62c:	ldr	r2, [fp, #-8]
    e630:	str	r2, [r3, #4]
    e634:	ldr	r3, [fp, #-16]
    e638:	ldr	r2, [fp, #-8]
    e63c:	str	r2, [r3]
    e640:	ldr	r3, [fp, #-12]
    e644:	ldr	r3, [r3, #8]
    e648:	sub	r2, r3, #1
    e64c:	ldr	r3, [fp, #-12]
    e650:	str	r2, [r3, #8]
    e654:	ldr	r3, [fp, #-16]
    e658:	ldr	r3, [r3, #8]
    e65c:	add	r2, r3, #1
    e660:	ldr	r3, [fp, #-16]
    e664:	str	r2, [r3, #8]
    e668:	nop			; (mov r0, r0)
    e66c:	add	sp, fp, #0
    e670:	pop	{fp}		; (ldr fp, [sp], #4)
    e674:	bx	lr

0000e678 <rb_dlinkAdd>:
    e678:	push	{fp}		; (str fp, [sp, #-4]!)
    e67c:	add	fp, sp, #0
    e680:	sub	sp, sp, #20
    e684:	str	r0, [fp, #-8]
    e688:	str	r1, [fp, #-12]
    e68c:	str	r2, [fp, #-16]
    e690:	ldr	r3, [fp, #-12]
    e694:	ldr	r2, [fp, #-8]
    e698:	str	r2, [r3]
    e69c:	ldr	r3, [fp, #-12]
    e6a0:	mov	r2, #0
    e6a4:	str	r2, [r3, #4]
    e6a8:	ldr	r3, [fp, #-16]
    e6ac:	ldr	r2, [r3]
    e6b0:	ldr	r3, [fp, #-12]
    e6b4:	str	r2, [r3, #8]
    e6b8:	ldr	r3, [fp, #-16]
    e6bc:	ldr	r3, [r3]
    e6c0:	cmp	r3, #0
    e6c4:	beq	e6dc <rb_dlinkAdd+0x64>
    e6c8:	ldr	r3, [fp, #-16]
    e6cc:	ldr	r3, [r3]
    e6d0:	ldr	r2, [fp, #-12]
    e6d4:	str	r2, [r3, #4]
    e6d8:	b	e6f8 <rb_dlinkAdd+0x80>
    e6dc:	ldr	r3, [fp, #-16]
    e6e0:	ldr	r3, [r3, #4]
    e6e4:	cmp	r3, #0
    e6e8:	bne	e6f8 <rb_dlinkAdd+0x80>
    e6ec:	ldr	r3, [fp, #-16]
    e6f0:	ldr	r2, [fp, #-12]
    e6f4:	str	r2, [r3, #4]
    e6f8:	ldr	r3, [fp, #-16]
    e6fc:	ldr	r2, [fp, #-12]
    e700:	str	r2, [r3]
    e704:	ldr	r3, [fp, #-16]
    e708:	ldr	r3, [r3, #8]
    e70c:	add	r2, r3, #1
    e710:	ldr	r3, [fp, #-16]
    e714:	str	r2, [r3, #8]
    e718:	nop			; (mov r0, r0)
    e71c:	add	sp, fp, #0
    e720:	pop	{fp}		; (ldr fp, [sp], #4)
    e724:	bx	lr

0000e728 <rb_dlinkDelete>:
    e728:	push	{fp}		; (str fp, [sp, #-4]!)
    e72c:	add	fp, sp, #0
    e730:	sub	sp, sp, #12
    e734:	str	r0, [fp, #-8]
    e738:	str	r1, [fp, #-12]
    e73c:	ldr	r3, [fp, #-8]
    e740:	ldr	r3, [r3, #8]
    e744:	cmp	r3, #0
    e748:	beq	e764 <rb_dlinkDelete+0x3c>
    e74c:	ldr	r3, [fp, #-8]
    e750:	ldr	r3, [r3, #8]
    e754:	ldr	r2, [fp, #-8]
    e758:	ldr	r2, [r2, #4]
    e75c:	str	r2, [r3, #4]
    e760:	b	e774 <rb_dlinkDelete+0x4c>
    e764:	ldr	r3, [fp, #-8]
    e768:	ldr	r2, [r3, #4]
    e76c:	ldr	r3, [fp, #-12]
    e770:	str	r2, [r3, #4]
    e774:	ldr	r3, [fp, #-8]
    e778:	ldr	r3, [r3, #4]
    e77c:	cmp	r3, #0
    e780:	beq	e79c <rb_dlinkDelete+0x74>
    e784:	ldr	r3, [fp, #-8]
    e788:	ldr	r3, [r3, #4]
    e78c:	ldr	r2, [fp, #-8]
    e790:	ldr	r2, [r2, #8]
    e794:	str	r2, [r3, #8]
    e798:	b	e7ac <rb_dlinkDelete+0x84>
    e79c:	ldr	r3, [fp, #-8]
    e7a0:	ldr	r2, [r3, #8]
    e7a4:	ldr	r3, [fp, #-12]
    e7a8:	str	r2, [r3]
    e7ac:	ldr	r3, [fp, #-8]
    e7b0:	mov	r2, #0
    e7b4:	str	r2, [r3, #4]
    e7b8:	ldr	r3, [fp, #-8]
    e7bc:	ldr	r2, [r3, #4]
    e7c0:	ldr	r3, [fp, #-8]
    e7c4:	str	r2, [r3, #8]
    e7c8:	ldr	r3, [fp, #-12]
    e7cc:	ldr	r3, [r3, #8]
    e7d0:	sub	r2, r3, #1
    e7d4:	ldr	r3, [fp, #-12]
    e7d8:	str	r2, [r3, #8]
    e7dc:	nop			; (mov r0, r0)
    e7e0:	add	sp, fp, #0
    e7e4:	pop	{fp}		; (ldr fp, [sp], #4)
    e7e8:	bx	lr

0000e7ec <rb_malloc>:
    e7ec:	push	{fp, lr}
    e7f0:	add	fp, sp, #4
    e7f4:	sub	sp, sp, #16
    e7f8:	str	r0, [fp, #-16]
    e7fc:	ldr	r1, [fp, #-16]
    e800:	mov	r0, #1
    e804:	bl	4658 <calloc@plt>
    e808:	mov	r3, r0
    e80c:	str	r3, [fp, #-8]
    e810:	ldr	r3, [fp, #-8]
    e814:	cmp	r3, #0
    e818:	moveq	r3, #1
    e81c:	movne	r3, #0
    e820:	uxtb	r3, r3
    e824:	cmp	r3, #0
    e828:	beq	e830 <rb_malloc+0x44>
    e82c:	bl	4a00 <rb_outofmemory@plt>
    e830:	ldr	r3, [fp, #-8]
    e834:	mov	r0, r3
    e838:	sub	sp, fp, #4
    e83c:	pop	{fp, pc}

0000e840 <rb_strndup>:
    e840:	push	{fp, lr}
    e844:	add	fp, sp, #4
    e848:	sub	sp, sp, #16
    e84c:	str	r0, [fp, #-16]
    e850:	str	r1, [fp, #-20]	; 0xffffffec
    e854:	ldr	r0, [fp, #-20]	; 0xffffffec
    e858:	bl	4a24 <malloc@plt>
    e85c:	mov	r3, r0
    e860:	str	r3, [fp, #-8]
    e864:	ldr	r3, [fp, #-8]
    e868:	cmp	r3, #0
    e86c:	moveq	r3, #1
    e870:	movne	r3, #0
    e874:	uxtb	r3, r3
    e878:	cmp	r3, #0
    e87c:	beq	e884 <rb_strndup+0x44>
    e880:	bl	4a00 <rb_outofmemory@plt>
    e884:	ldr	r2, [fp, #-20]	; 0xffffffec
    e888:	ldr	r1, [fp, #-16]
    e88c:	ldr	r0, [fp, #-8]
    e890:	bl	470c <rb_strlcpy@plt>
    e894:	ldr	r3, [fp, #-8]
    e898:	mov	r0, r3
    e89c:	sub	sp, fp, #4
    e8a0:	pop	{fp, pc}

0000e8a4 <rb_free>:
    e8a4:	push	{fp, lr}
    e8a8:	add	fp, sp, #4
    e8ac:	sub	sp, sp, #8
    e8b0:	str	r0, [fp, #-8]
    e8b4:	ldr	r3, [fp, #-8]
    e8b8:	cmp	r3, #0
    e8bc:	movne	r3, #1
    e8c0:	moveq	r3, #0
    e8c4:	uxtb	r3, r3
    e8c8:	cmp	r3, #0
    e8cc:	beq	e8d8 <rb_free+0x34>
    e8d0:	ldr	r0, [fp, #-8]
    e8d4:	bl	476c <free@plt>
    e8d8:	nop			; (mov r0, r0)
    e8dc:	sub	sp, fp, #4
    e8e0:	pop	{fp, pc}

0000e8e4 <rb_find_fd>:
    e8e4:	push	{fp}		; (str fp, [sp, #-4]!)
    e8e8:	add	fp, sp, #0
    e8ec:	sub	sp, sp, #28
    e8f0:	str	r0, [fp, #-24]	; 0xffffffe8
    e8f4:	ldr	r2, [pc, #224]	; e9dc <rb_find_fd+0xf8>
    e8f8:	add	r2, pc, r2
    e8fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e900:	lsr	r3, r3, #31
    e904:	uxtb	r3, r3
    e908:	cmp	r3, #0
    e90c:	beq	e918 <rb_find_fd+0x34>
    e910:	mov	r3, #0
    e914:	b	e9cc <rb_find_fd+0xe8>
    e918:	ldr	r3, [pc, #192]	; e9e0 <rb_find_fd+0xfc>
    e91c:	ldr	r3, [r2, r3]
    e920:	ldr	r1, [r3]
    e924:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e928:	asr	r2, r3, #12
    e92c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e930:	eor	r2, r2, r3
    e934:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e938:	asr	r3, r3, #24
    e93c:	eor	r3, r3, r2
    e940:	lsl	r2, r3, #20
    e944:	lsr	r2, r2, #20
    e948:	mov	r3, r2
    e94c:	lsl	r3, r3, #1
    e950:	add	r3, r3, r2
    e954:	lsl	r3, r3, #2
    e958:	add	r3, r1, r3
    e95c:	str	r3, [fp, #-12]
    e960:	ldr	r3, [fp, #-12]
    e964:	ldr	r3, [r3]
    e968:	cmp	r3, #0
    e96c:	bne	e978 <rb_find_fd+0x94>
    e970:	mov	r3, #0
    e974:	b	e9cc <rb_find_fd+0xe8>
    e978:	ldr	r3, [fp, #-12]
    e97c:	ldr	r3, [r3]
    e980:	str	r3, [fp, #-8]
    e984:	b	e9bc <rb_find_fd+0xd8>
    e988:	ldr	r3, [fp, #-8]
    e98c:	ldr	r3, [r3]
    e990:	str	r3, [fp, #-16]
    e994:	ldr	r3, [fp, #-16]
    e998:	ldr	r2, [r3, #12]
    e99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e9a0:	cmp	r2, r3
    e9a4:	bne	e9b0 <rb_find_fd+0xcc>
    e9a8:	ldr	r3, [fp, #-16]
    e9ac:	b	e9cc <rb_find_fd+0xe8>
    e9b0:	ldr	r3, [fp, #-8]
    e9b4:	ldr	r3, [r3, #8]
    e9b8:	str	r3, [fp, #-8]
    e9bc:	ldr	r3, [fp, #-8]
    e9c0:	cmp	r3, #0
    e9c4:	bne	e988 <rb_find_fd+0xa4>
    e9c8:	mov	r3, #0
    e9cc:	mov	r0, r3
    e9d0:	add	sp, fp, #0
    e9d4:	pop	{fp}		; (ldr fp, [sp], #4)
    e9d8:	bx	lr
    e9dc:	.word	0x00025700
    e9e0:	.word	0x000003cc

0000e9e4 <add_fd>:
    e9e4:	push	{r4, fp, lr}
    e9e8:	add	fp, sp, #8
    e9ec:	sub	sp, sp, #20
    e9f0:	str	r0, [fp, #-24]	; 0xffffffe8
    e9f4:	ldr	r4, [pc, #172]	; eaa8 <add_fd+0xc4>
    e9f8:	add	r4, pc, r4
    e9fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ea00:	bl	e8e4 <rb_find_fd>
    ea04:	str	r0, [fp, #-16]
    ea08:	ldr	r3, [fp, #-16]
    ea0c:	cmp	r3, #0
    ea10:	beq	ea1c <add_fd+0x38>
    ea14:	ldr	r3, [fp, #-16]
    ea18:	b	ea9c <add_fd+0xb8>
    ea1c:	ldr	r3, [pc, #136]	; eaac <add_fd+0xc8>
    ea20:	add	r3, pc, r3
    ea24:	ldr	r3, [r3]
    ea28:	mov	r0, r3
    ea2c:	bl	49d0 <rb_bh_alloc@plt>
    ea30:	str	r0, [fp, #-16]
    ea34:	ldr	r3, [fp, #-16]
    ea38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ea3c:	str	r2, [r3, #12]
    ea40:	ldr	r0, [fp, #-16]
    ea44:	ldr	r3, [pc, #100]	; eab0 <add_fd+0xcc>
    ea48:	ldr	r3, [r4, r3]
    ea4c:	ldr	r1, [r3]
    ea50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ea54:	asr	r2, r3, #12
    ea58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ea5c:	eor	r2, r2, r3
    ea60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ea64:	asr	r3, r3, #24
    ea68:	eor	r3, r3, r2
    ea6c:	lsl	r2, r3, #20
    ea70:	lsr	r2, r2, #20
    ea74:	mov	r3, r2
    ea78:	lsl	r3, r3, #1
    ea7c:	add	r3, r3, r2
    ea80:	lsl	r3, r3, #2
    ea84:	add	r3, r1, r3
    ea88:	mov	r2, r3
    ea8c:	mov	r1, r0
    ea90:	ldr	r0, [fp, #-16]
    ea94:	bl	e678 <rb_dlinkAdd>
    ea98:	ldr	r3, [fp, #-16]
    ea9c:	mov	r0, r3
    eaa0:	sub	sp, fp, #8
    eaa4:	pop	{r4, fp, pc}
    eaa8:	.word	0x00025600
    eaac:	.word	0x00038468
    eab0:	.word	0x000003cc

0000eab4 <remove_fd>:
    eab4:	push	{fp, lr}
    eab8:	add	fp, sp, #4
    eabc:	sub	sp, sp, #8
    eac0:	str	r0, [fp, #-8]
    eac4:	ldr	r2, [pc, #148]	; eb60 <remove_fd+0xac>
    eac8:	add	r2, pc, r2
    eacc:	ldr	r3, [fp, #-8]
    ead0:	cmp	r3, #0
    ead4:	beq	eb54 <remove_fd+0xa0>
    ead8:	ldr	r3, [fp, #-8]
    eadc:	ldrb	r3, [r3, #16]
    eae0:	and	r3, r3, #1
    eae4:	cmp	r3, #0
    eae8:	beq	eb54 <remove_fd+0xa0>
    eaec:	ldr	r0, [fp, #-8]
    eaf0:	ldr	r3, [pc, #108]	; eb64 <remove_fd+0xb0>
    eaf4:	ldr	r3, [r2, r3]
    eaf8:	ldr	r1, [r3]
    eafc:	ldr	r3, [fp, #-8]
    eb00:	ldr	r2, [r3, #12]
    eb04:	ldr	r3, [fp, #-8]
    eb08:	ldr	r3, [r3, #12]
    eb0c:	asr	r3, r3, #12
    eb10:	eor	r2, r2, r3
    eb14:	ldr	r3, [fp, #-8]
    eb18:	ldr	r3, [r3, #12]
    eb1c:	asr	r3, r3, #24
    eb20:	eor	r3, r3, r2
    eb24:	lsl	r2, r3, #20
    eb28:	lsr	r2, r2, #20
    eb2c:	mov	r3, r2
    eb30:	lsl	r3, r3, #1
    eb34:	add	r3, r3, r2
    eb38:	lsl	r3, r3, #2
    eb3c:	add	r3, r1, r3
    eb40:	ldr	r2, [pc, #32]	; eb68 <remove_fd+0xb4>
    eb44:	add	r2, pc, r2
    eb48:	mov	r1, r3
    eb4c:	bl	e550 <rb_dlinkMoveNode>
    eb50:	b	eb58 <remove_fd+0xa4>
    eb54:	nop			; (mov r0, r0)
    eb58:	sub	sp, fp, #4
    eb5c:	pop	{fp, pc}
    eb60:	.word	0x00025530
    eb64:	.word	0x000003cc
    eb68:	.word	0x00038354

0000eb6c <free_fds>:
    eb6c:	push	{fp, lr}
    eb70:	add	fp, sp, #4
    eb74:	sub	sp, sp, #16
    eb78:	ldr	r3, [pc, #208]	; ec50 <free_fds+0xe4>
    eb7c:	add	r3, pc, r3
    eb80:	ldr	r3, [r3]
    eb84:	str	r3, [fp, #-8]
    eb88:	ldr	r3, [fp, #-8]
    eb8c:	cmp	r3, #0
    eb90:	beq	eba0 <free_fds+0x34>
    eb94:	ldr	r3, [fp, #-8]
    eb98:	ldr	r3, [r3, #8]
    eb9c:	b	eba4 <free_fds+0x38>
    eba0:	mov	r3, #0
    eba4:	str	r3, [fp, #-12]
    eba8:	b	ec38 <free_fds+0xcc>
    ebac:	ldr	r3, [fp, #-8]
    ebb0:	ldr	r3, [r3]
    ebb4:	str	r3, [fp, #-16]
    ebb8:	ldr	r3, [pc, #148]	; ec54 <free_fds+0xe8>
    ebbc:	add	r3, pc, r3
    ebc0:	ldr	r3, [r3]
    ebc4:	sub	r2, r3, #1
    ebc8:	ldr	r3, [pc, #136]	; ec58 <free_fds+0xec>
    ebcc:	add	r3, pc, r3
    ebd0:	str	r2, [r3]
    ebd4:	ldr	r3, [fp, #-16]
    ebd8:	ldr	r3, [r3, #12]
    ebdc:	mov	r0, r3
    ebe0:	bl	49b8 <close@plt>
    ebe4:	ldr	r3, [pc, #112]	; ec5c <free_fds+0xf0>
    ebe8:	add	r3, pc, r3
    ebec:	mov	r1, r3
    ebf0:	ldr	r0, [fp, #-8]
    ebf4:	bl	e728 <rb_dlinkDelete>
    ebf8:	ldr	r3, [pc, #96]	; ec60 <free_fds+0xf4>
    ebfc:	add	r3, pc, r3
    ec00:	ldr	r3, [r3]
    ec04:	ldr	r1, [fp, #-16]
    ec08:	mov	r0, r3
    ec0c:	bl	4940 <rb_bh_free@plt>
    ec10:	ldr	r3, [fp, #-12]
    ec14:	str	r3, [fp, #-8]
    ec18:	ldr	r3, [fp, #-8]
    ec1c:	cmp	r3, #0
    ec20:	beq	ec30 <free_fds+0xc4>
    ec24:	ldr	r3, [fp, #-8]
    ec28:	ldr	r3, [r3, #8]
    ec2c:	b	ec34 <free_fds+0xc8>
    ec30:	mov	r3, #0
    ec34:	str	r3, [fp, #-12]
    ec38:	ldr	r3, [fp, #-8]
    ec3c:	cmp	r3, #0
    ec40:	bne	ebac <free_fds+0x40>
    ec44:	nop			; (mov r0, r0)
    ec48:	sub	sp, fp, #4
    ec4c:	pop	{fp, pc}
    ec50:	.word	0x0003831c
    ec54:	.word	0x000382ec
    ec58:	.word	0x000382dc
    ec5c:	.word	0x000382b0
    ec60:	.word	0x0003828c

0000ec64 <rb_close_all>:
    ec64:	push	{r4, fp, lr}
    ec68:	add	fp, sp, #8
    ec6c:	sub	sp, sp, #12
    ec70:	ldr	r4, [pc, #68]	; ecbc <rb_close_all+0x58>
    ec74:	add	r4, pc, r4
    ec78:	mov	r3, #3
    ec7c:	str	r3, [fp, #-16]
    ec80:	b	ec98 <rb_close_all+0x34>
    ec84:	ldr	r0, [fp, #-16]
    ec88:	bl	49b8 <close@plt>
    ec8c:	ldr	r3, [fp, #-16]
    ec90:	add	r3, r3, #1
    ec94:	str	r3, [fp, #-16]
    ec98:	ldr	r3, [pc, #32]	; ecc0 <rb_close_all+0x5c>
    ec9c:	ldr	r3, [r4, r3]
    eca0:	ldr	r3, [r3]
    eca4:	ldr	r2, [fp, #-16]
    eca8:	cmp	r2, r3
    ecac:	blt	ec84 <rb_close_all+0x20>
    ecb0:	nop			; (mov r0, r0)
    ecb4:	sub	sp, fp, #8
    ecb8:	pop	{r4, fp, pc}
    ecbc:	.word	0x00025384
    ecc0:	.word	0x000003ac

0000ecc4 <rb_get_sockerr>:
    ecc4:	push	{fp, lr}
    ecc8:	add	fp, sp, #4
    eccc:	sub	sp, sp, #32
    ecd0:	str	r0, [fp, #-24]	; 0xffffffe8
    ecd4:	mov	r3, #0
    ecd8:	str	r3, [fp, #-12]
    ecdc:	mov	r3, #4
    ece0:	str	r3, [fp, #-16]
    ece4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ece8:	ldrb	r3, [r3, #17]
    ecec:	and	r3, r3, #4
    ecf0:	cmp	r3, #0
    ecf4:	bne	ed08 <rb_get_sockerr+0x44>
    ecf8:	bl	4d78 <__errno_location@plt>
    ecfc:	mov	r3, r0
    ed00:	ldr	r3, [r3]
    ed04:	b	ed7c <rb_get_sockerr+0xb8>
    ed08:	bl	4d78 <__errno_location@plt>
    ed0c:	mov	r3, r0
    ed10:	ldr	r3, [r3]
    ed14:	str	r3, [fp, #-8]
    ed18:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ed1c:	cmp	r3, #0
    ed20:	beq	ed68 <rb_get_sockerr+0xa4>
    ed24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ed28:	bl	4550 <rb_get_fd@plt>
    ed2c:	sub	r2, fp, #12
    ed30:	sub	r3, fp, #16
    ed34:	str	r3, [sp]
    ed38:	mov	r3, r2
    ed3c:	mov	r2, #4
    ed40:	mov	r1, #1
    ed44:	bl	4d00 <getsockopt@plt>
    ed48:	mov	r3, r0
    ed4c:	cmp	r3, #0
    ed50:	bne	ed68 <rb_get_sockerr+0xa4>
    ed54:	ldr	r3, [fp, #-12]
    ed58:	cmp	r3, #0
    ed5c:	beq	ed68 <rb_get_sockerr+0xa4>
    ed60:	ldr	r3, [fp, #-12]
    ed64:	str	r3, [fp, #-8]
    ed68:	bl	4d78 <__errno_location@plt>
    ed6c:	mov	r2, r0
    ed70:	ldr	r3, [fp, #-8]
    ed74:	str	r3, [r2]
    ed78:	ldr	r3, [fp, #-8]
    ed7c:	mov	r0, r3
    ed80:	sub	sp, fp, #4
    ed84:	pop	{fp, pc}

0000ed88 <rb_getmaxconnect>:
    ed88:	push	{fp}		; (str fp, [sp, #-4]!)
    ed8c:	add	fp, sp, #0
    ed90:	ldr	r2, [pc, #28]	; edb4 <rb_getmaxconnect+0x2c>
    ed94:	add	r2, pc, r2
    ed98:	ldr	r3, [pc, #24]	; edb8 <rb_getmaxconnect+0x30>
    ed9c:	ldr	r3, [r2, r3]
    eda0:	ldr	r3, [r3]
    eda4:	mov	r0, r3
    eda8:	add	sp, fp, #0
    edac:	pop	{fp}		; (ldr fp, [sp], #4)
    edb0:	bx	lr
    edb4:	.word	0x00025264
    edb8:	.word	0x000003ac

0000edbc <rb_set_buffers>:
    edbc:	push	{fp, lr}
    edc0:	add	fp, sp, #4
    edc4:	sub	sp, sp, #16
    edc8:	str	r0, [fp, #-8]
    edcc:	str	r1, [fp, #-12]
    edd0:	ldr	r3, [fp, #-8]
    edd4:	cmp	r3, #0
    edd8:	bne	ede4 <rb_set_buffers+0x28>
    eddc:	mov	r3, #0
    ede0:	b	ee50 <rb_set_buffers+0x94>
    ede4:	ldr	r3, [fp, #-8]
    ede8:	ldr	r0, [r3, #12]
    edec:	sub	r2, fp, #12
    edf0:	mov	r3, #4
    edf4:	str	r3, [sp]
    edf8:	mov	r3, r2
    edfc:	mov	r2, #8
    ee00:	mov	r1, #1
    ee04:	bl	4d24 <setsockopt@plt>
    ee08:	mov	r3, r0
    ee0c:	cmp	r3, #0
    ee10:	bne	ee44 <rb_set_buffers+0x88>
    ee14:	ldr	r3, [fp, #-8]
    ee18:	ldr	r0, [r3, #12]
    ee1c:	sub	r2, fp, #12
    ee20:	mov	r3, #4
    ee24:	str	r3, [sp]
    ee28:	mov	r3, r2
    ee2c:	mov	r2, #7
    ee30:	mov	r1, #1
    ee34:	bl	4d24 <setsockopt@plt>
    ee38:	mov	r3, r0
    ee3c:	cmp	r3, #0
    ee40:	beq	ee4c <rb_set_buffers+0x90>
    ee44:	mov	r3, #0
    ee48:	b	ee50 <rb_set_buffers+0x94>
    ee4c:	mov	r3, #1
    ee50:	mov	r0, r3
    ee54:	sub	sp, fp, #4
    ee58:	pop	{fp, pc}

0000ee5c <rb_set_nb>:
    ee5c:	push	{fp, lr}
    ee60:	add	fp, sp, #4
    ee64:	sub	sp, sp, #24
    ee68:	str	r0, [fp, #-24]	; 0xffffffe8
    ee6c:	mov	r3, #0
    ee70:	str	r3, [fp, #-8]
    ee74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ee78:	cmp	r3, #0
    ee7c:	bne	ee88 <rb_set_nb+0x2c>
    ee80:	mov	r3, #0
    ee84:	b	ef14 <rb_set_nb+0xb8>
    ee88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ee8c:	ldr	r3, [r3, #12]
    ee90:	str	r3, [fp, #-12]
    ee94:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ee98:	bl	4bb0 <rb_setup_fd@plt>
    ee9c:	str	r0, [fp, #-16]
    eea0:	ldr	r3, [fp, #-16]
    eea4:	cmp	r3, #0
    eea8:	beq	eeb4 <rb_set_nb+0x58>
    eeac:	ldr	r3, [fp, #-16]
    eeb0:	b	ef14 <rb_set_nb+0xb8>
    eeb4:	ldr	r3, [fp, #-8]
    eeb8:	orr	r3, r3, #2048	; 0x800
    eebc:	str	r3, [fp, #-8]
    eec0:	mov	r2, #0
    eec4:	mov	r1, #3
    eec8:	ldr	r0, [fp, #-12]
    eecc:	bl	4c88 <fcntl@plt>
    eed0:	str	r0, [fp, #-16]
    eed4:	ldr	r3, [fp, #-16]
    eed8:	cmn	r3, #1
    eedc:	beq	ef08 <rb_set_nb+0xac>
    eee0:	ldr	r2, [fp, #-16]
    eee4:	ldr	r3, [fp, #-8]
    eee8:	orr	r3, r2, r3
    eeec:	mov	r2, r3
    eef0:	mov	r1, #4
    eef4:	ldr	r0, [fp, #-12]
    eef8:	bl	4c88 <fcntl@plt>
    eefc:	mov	r3, r0
    ef00:	cmn	r3, #1
    ef04:	bne	ef10 <rb_set_nb+0xb4>
    ef08:	mov	r3, #0
    ef0c:	b	ef14 <rb_set_nb+0xb8>
    ef10:	mov	r3, #1
    ef14:	mov	r0, r3
    ef18:	sub	sp, fp, #4
    ef1c:	pop	{fp, pc}

0000ef20 <rb_settimeout>:
    ef20:	push	{r4, fp, lr}
    ef24:	add	fp, sp, #8
    ef28:	sub	sp, sp, #28
    ef2c:	str	r0, [fp, #-24]	; 0xffffffe8
    ef30:	str	r1, [fp, #-28]	; 0xffffffe4
    ef34:	str	r2, [fp, #-32]	; 0xffffffe0
    ef38:	str	r3, [fp, #-36]	; 0xffffffdc
    ef3c:	ldr	r4, [pc, #388]	; f0c8 <rb_settimeout+0x1a8>
    ef40:	add	r4, pc, r4
    ef44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ef48:	cmp	r3, #0
    ef4c:	beq	f0ac <rb_settimeout+0x18c>
    ef50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ef54:	ldr	r3, [r3, #44]	; 0x2c
    ef58:	str	r3, [fp, #-16]
    ef5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ef60:	cmp	r3, #0
    ef64:	bne	efe0 <rb_settimeout+0xc0>
    ef68:	ldr	r3, [fp, #-16]
    ef6c:	cmp	r3, #0
    ef70:	beq	f0b4 <rb_settimeout+0x194>
    ef74:	ldr	r3, [fp, #-16]
    ef78:	add	r3, r3, #4
    ef7c:	ldr	r2, [pc, #328]	; f0cc <rb_settimeout+0x1ac>
    ef80:	add	r2, pc, r2
    ef84:	mov	r1, r2
    ef88:	mov	r0, r3
    ef8c:	bl	e728 <rb_dlinkDelete>
    ef90:	ldr	r0, [fp, #-16]
    ef94:	bl	e8a4 <rb_free>
    ef98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ef9c:	mov	r2, #0
    efa0:	str	r2, [r3, #44]	; 0x2c
    efa4:	ldr	r3, [pc, #292]	; f0d0 <rb_settimeout+0x1b0>
    efa8:	add	r3, pc, r3
    efac:	ldr	r3, [r3, #8]
    efb0:	cmp	r3, #0
    efb4:	bne	f0bc <rb_settimeout+0x19c>
    efb8:	ldr	r3, [pc, #276]	; f0d4 <rb_settimeout+0x1b4>
    efbc:	add	r3, pc, r3
    efc0:	ldr	r3, [r3]
    efc4:	mov	r0, r3
    efc8:	bl	4508 <rb_event_delete@plt>
    efcc:	ldr	r3, [pc, #260]	; f0d8 <rb_settimeout+0x1b8>
    efd0:	add	r3, pc, r3
    efd4:	mov	r2, #0
    efd8:	str	r2, [r3]
    efdc:	b	f0bc <rb_settimeout+0x19c>
    efe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    efe4:	ldr	r3, [r3, #44]	; 0x2c
    efe8:	cmp	r3, #0
    efec:	bne	f010 <rb_settimeout+0xf0>
    eff0:	mov	r0, #28
    eff4:	bl	e7ec <rb_malloc>
    eff8:	mov	r2, r0
    effc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f000:	str	r2, [r3, #44]	; 0x2c
    f004:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f008:	ldr	r3, [r3, #44]	; 0x2c
    f00c:	str	r3, [fp, #-16]
    f010:	ldr	r3, [fp, #-16]
    f014:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f018:	str	r2, [r3]
    f01c:	bl	4868 <rb_current_time@plt>
    f020:	mov	r2, r0
    f024:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f028:	add	r2, r2, r3
    f02c:	ldr	r3, [fp, #-16]
    f030:	str	r2, [r3, #16]
    f034:	ldr	r3, [fp, #-16]
    f038:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f03c:	str	r2, [r3, #20]
    f040:	ldr	r3, [fp, #-16]
    f044:	ldr	r2, [fp, #-36]	; 0xffffffdc
    f048:	str	r2, [r3, #24]
    f04c:	ldr	r3, [fp, #-16]
    f050:	add	r3, r3, #4
    f054:	ldr	r2, [pc, #128]	; f0dc <rb_settimeout+0x1bc>
    f058:	add	r2, pc, r2
    f05c:	mov	r1, r3
    f060:	ldr	r0, [fp, #-16]
    f064:	bl	e678 <rb_dlinkAdd>
    f068:	ldr	r3, [pc, #112]	; f0e0 <rb_settimeout+0x1c0>
    f06c:	add	r3, pc, r3
    f070:	ldr	r3, [r3]
    f074:	cmp	r3, #0
    f078:	bne	f0c0 <rb_settimeout+0x1a0>
    f07c:	mov	r3, #5
    f080:	mov	r2, #0
    f084:	ldr	r1, [pc, #88]	; f0e4 <rb_settimeout+0x1c4>
    f088:	ldr	r1, [r4, r1]
    f08c:	ldr	r0, [pc, #84]	; f0e8 <rb_settimeout+0x1c8>
    f090:	add	r0, pc, r0
    f094:	bl	4b80 <rb_event_add@plt>
    f098:	mov	r2, r0
    f09c:	ldr	r3, [pc, #72]	; f0ec <rb_settimeout+0x1cc>
    f0a0:	add	r3, pc, r3
    f0a4:	str	r2, [r3]
    f0a8:	b	f0c0 <rb_settimeout+0x1a0>
    f0ac:	nop			; (mov r0, r0)
    f0b0:	b	f0c0 <rb_settimeout+0x1a0>
    f0b4:	nop			; (mov r0, r0)
    f0b8:	b	f0c0 <rb_settimeout+0x1a0>
    f0bc:	nop			; (mov r0, r0)
    f0c0:	sub	sp, fp, #8
    f0c4:	pop	{r4, fp, pc}
    f0c8:	.word	0x000250b8
    f0cc:	.word	0x00037f0c
    f0d0:	.word	0x00037ee4
    f0d4:	.word	0x00037ee8
    f0d8:	.word	0x00037ed4
    f0dc:	.word	0x00037e34
    f0e0:	.word	0x00037e38
    f0e4:	.word	0x00000358
    f0e8:	.word	0x00013334
    f0ec:	.word	0x00037e04

0000f0f0 <rb_checktimeouts>:
    f0f0:	push	{r4, fp, lr}
    f0f4:	add	fp, sp, #8
    f0f8:	sub	sp, sp, #36	; 0x24
    f0fc:	str	r0, [fp, #-40]	; 0xffffffd8
    f100:	ldr	r3, [pc, #284]	; f224 <rb_checktimeouts+0x134>
    f104:	add	r3, pc, r3
    f108:	ldr	r3, [r3]
    f10c:	str	r3, [fp, #-16]
    f110:	ldr	r3, [fp, #-16]
    f114:	cmp	r3, #0
    f118:	beq	f128 <rb_checktimeouts+0x38>
    f11c:	ldr	r3, [fp, #-16]
    f120:	ldr	r3, [r3, #8]
    f124:	b	f12c <rb_checktimeouts+0x3c>
    f128:	mov	r3, #0
    f12c:	str	r3, [fp, #-20]	; 0xffffffec
    f130:	b	f20c <rb_checktimeouts+0x11c>
    f134:	ldr	r3, [fp, #-16]
    f138:	ldr	r3, [r3]
    f13c:	str	r3, [fp, #-24]	; 0xffffffe8
    f140:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f144:	ldr	r3, [r3]
    f148:	str	r3, [fp, #-28]	; 0xffffffe4
    f14c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f150:	cmp	r3, #0
    f154:	beq	f1e0 <rb_checktimeouts+0xf0>
    f158:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f15c:	ldrb	r3, [r3, #16]
    f160:	and	r3, r3, #1
    f164:	cmp	r3, #0
    f168:	beq	f1e0 <rb_checktimeouts+0xf0>
    f16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f170:	ldr	r4, [r3, #16]
    f174:	bl	4868 <rb_current_time@plt>
    f178:	mov	r3, r0
    f17c:	cmp	r4, r3
    f180:	bge	f1e4 <rb_checktimeouts+0xf4>
    f184:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f188:	ldr	r3, [r3, #20]
    f18c:	str	r3, [fp, #-32]	; 0xffffffe0
    f190:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f194:	ldr	r3, [r3, #24]
    f198:	str	r3, [fp, #-36]	; 0xffffffdc
    f19c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f1a0:	add	r3, r3, #4
    f1a4:	ldr	r2, [pc, #124]	; f228 <rb_checktimeouts+0x138>
    f1a8:	add	r2, pc, r2
    f1ac:	mov	r1, r2
    f1b0:	mov	r0, r3
    f1b4:	bl	e728 <rb_dlinkDelete>
    f1b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f1bc:	mov	r2, #0
    f1c0:	str	r2, [r3, #44]	; 0x2c
    f1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f1c8:	bl	e8a4 <rb_free>
    f1cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    f1d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    f1d8:	blx	r3
    f1dc:	b	f1e4 <rb_checktimeouts+0xf4>
    f1e0:	nop			; (mov r0, r0)
    f1e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f1e8:	str	r3, [fp, #-16]
    f1ec:	ldr	r3, [fp, #-16]
    f1f0:	cmp	r3, #0
    f1f4:	beq	f204 <rb_checktimeouts+0x114>
    f1f8:	ldr	r3, [fp, #-16]
    f1fc:	ldr	r3, [r3, #8]
    f200:	b	f208 <rb_checktimeouts+0x118>
    f204:	mov	r3, #0
    f208:	str	r3, [fp, #-20]	; 0xffffffec
    f20c:	ldr	r3, [fp, #-16]
    f210:	cmp	r3, #0
    f214:	bne	f134 <rb_checktimeouts+0x44>
    f218:	nop			; (mov r0, r0)
    f21c:	sub	sp, fp, #8
    f220:	pop	{r4, fp, pc}
    f224:	.word	0x00037d88
    f228:	.word	0x00037ce4

0000f22c <rb_setsockopt_reuseaddr>:
    f22c:	push	{r4, fp, lr}
    f230:	add	fp, sp, #8
    f234:	sub	sp, sp, #28
    f238:	str	r0, [fp, #-24]	; 0xffffffe8
    f23c:	mov	r3, #1
    f240:	str	r3, [fp, #-20]	; 0xffffffec
    f244:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f248:	ldr	r0, [r3, #12]
    f24c:	sub	r2, fp, #20
    f250:	mov	r3, #4
    f254:	str	r3, [sp]
    f258:	mov	r3, r2
    f25c:	mov	r2, #2
    f260:	mov	r1, #1
    f264:	bl	4d24 <setsockopt@plt>
    f268:	str	r0, [fp, #-16]
    f26c:	ldr	r3, [fp, #-16]
    f270:	cmp	r3, #0
    f274:	beq	f2b8 <rb_setsockopt_reuseaddr+0x8c>
    f278:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f27c:	ldr	r4, [r3, #12]
    f280:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f284:	bl	4b08 <rb_get_sockerr@plt>
    f288:	mov	r3, r0
    f28c:	mov	r0, r3
    f290:	bl	440c <strerror@plt>
    f294:	mov	r3, r0
    f298:	mov	r2, r3
    f29c:	mov	r1, r4
    f2a0:	ldr	r3, [pc, #32]	; f2c8 <rb_setsockopt_reuseaddr+0x9c>
    f2a4:	add	r3, pc, r3
    f2a8:	mov	r0, r3
    f2ac:	bl	4994 <rb_lib_log@plt>
    f2b0:	ldr	r3, [fp, #-16]
    f2b4:	b	f2bc <rb_setsockopt_reuseaddr+0x90>
    f2b8:	mov	r3, #0
    f2bc:	mov	r0, r3
    f2c0:	sub	sp, fp, #8
    f2c4:	pop	{r4, fp, pc}
    f2c8:	.word	0x00013134

0000f2cc <rb_bind>:
    f2cc:	push	{fp, lr}
    f2d0:	add	fp, sp, #4
    f2d4:	sub	sp, sp, #16
    f2d8:	str	r0, [fp, #-16]
    f2dc:	str	r1, [fp, #-20]	; 0xffffffec
    f2e0:	ldr	r0, [fp, #-16]
    f2e4:	bl	f22c <rb_setsockopt_reuseaddr>
    f2e8:	str	r0, [fp, #-8]
    f2ec:	ldr	r3, [fp, #-8]
    f2f0:	cmp	r3, #0
    f2f4:	beq	f300 <rb_bind+0x34>
    f2f8:	ldr	r3, [fp, #-8]
    f2fc:	b	f34c <rb_bind+0x80>
    f300:	ldr	r3, [fp, #-16]
    f304:	ldr	r0, [r3, #12]
    f308:	ldr	r1, [fp, #-20]	; 0xffffffec
    f30c:	ldr	r3, [fp, #-20]	; 0xffffffec
    f310:	ldrh	r3, [r3]
    f314:	cmp	r3, #2
    f318:	bne	f324 <rb_bind+0x58>
    f31c:	mov	r3, #16
    f320:	b	f328 <rb_bind+0x5c>
    f324:	mov	r3, #28
    f328:	mov	r2, r3
    f32c:	bl	4988 <bind@plt>
    f330:	str	r0, [fp, #-8]
    f334:	ldr	r3, [fp, #-8]
    f338:	cmp	r3, #0
    f33c:	beq	f348 <rb_bind+0x7c>
    f340:	ldr	r3, [fp, #-8]
    f344:	b	f34c <rb_bind+0x80>
    f348:	mov	r3, #0
    f34c:	mov	r0, r3
    f350:	sub	sp, fp, #4
    f354:	pop	{fp, pc}

0000f358 <rb_sctp_bindx>:
    f358:	push	{fp}		; (str fp, [sp, #-4]!)
    f35c:	add	fp, sp, #0
    f360:	sub	sp, sp, #20
    f364:	str	r0, [fp, #-8]
    f368:	str	r1, [fp, #-12]
    f36c:	str	r2, [fp, #-16]
    f370:	mvn	r3, #0
    f374:	mov	r0, r3
    f378:	add	sp, fp, #0
    f37c:	pop	{fp}		; (ldr fp, [sp], #4)
    f380:	bx	lr

0000f384 <rb_inet_get_proto>:
    f384:	push	{fp}		; (str fp, [sp, #-4]!)
    f388:	add	fp, sp, #0
    f38c:	sub	sp, sp, #12
    f390:	str	r0, [fp, #-8]
    f394:	mov	r3, #6
    f398:	mov	r0, r3
    f39c:	add	sp, fp, #0
    f3a0:	pop	{fp}		; (ldr fp, [sp], #4)
    f3a4:	bx	lr

0000f3a8 <rb_accept_tryaccept>:
    f3a8:	push	{r4, fp, lr}
    f3ac:	add	fp, sp, #8
    f3b0:	sub	sp, sp, #164	; 0xa4
    f3b4:	str	r0, [fp, #-160]	; 0xffffff60
    f3b8:	str	r1, [fp, #-164]	; 0xffffff5c
    f3bc:	sub	r3, fp, #148	; 0x94
    f3c0:	mov	r2, #128	; 0x80
    f3c4:	mov	r1, #0
    f3c8:	mov	r0, r3
    f3cc:	bl	4694 <memset@plt>
    f3d0:	mov	r3, #128	; 0x80
    f3d4:	str	r3, [fp, #-152]	; 0xffffff68
    f3d8:	ldr	r3, [fp, #-160]	; 0xffffff60
    f3dc:	ldr	r3, [r3, #12]
    f3e0:	sub	r2, fp, #148	; 0x94
    f3e4:	mov	r1, r2
    f3e8:	sub	r2, fp, #152	; 0x98
    f3ec:	mov	r0, r3
    f3f0:	bl	47e4 <accept@plt>
    f3f4:	str	r0, [fp, #-16]
    f3f8:	ldr	r3, [fp, #-16]
    f3fc:	cmp	r3, #0
    f400:	bge	f420 <rb_accept_tryaccept+0x78>
    f404:	mov	r3, #0
    f408:	ldr	r2, [pc, #388]	; f594 <rb_accept_tryaccept+0x1ec>
    f40c:	add	r2, pc, r2
    f410:	mov	r1, #1
    f414:	ldr	r0, [fp, #-160]	; 0xffffff60
    f418:	bl	4514 <rb_setselect@plt>
    f41c:	b	f58c <rb_accept_tryaccept+0x1e4>
    f420:	ldr	r3, [fp, #-160]	; 0xffffff60
    f424:	ldrb	r3, [r3, #17]
    f428:	sxtb	r3, r3
    f42c:	bic	r3, r3, #127	; 0x7f
    f430:	sxtb	r3, r3
    f434:	orr	r3, r3, #4
    f438:	sxtb	r3, r3
    f43c:	uxtb	r3, r3
    f440:	ldr	r2, [pc, #336]	; f598 <rb_accept_tryaccept+0x1f0>
    f444:	add	r2, pc, r2
    f448:	mov	r1, r3
    f44c:	ldr	r0, [fp, #-16]
    f450:	bl	4afc <rb_open@plt>
    f454:	str	r0, [fp, #-20]	; 0xffffffec
    f458:	ldr	r3, [fp, #-20]	; 0xffffffec
    f45c:	cmp	r3, #0
    f460:	bne	f484 <rb_accept_tryaccept+0xdc>
    f464:	ldr	r1, [fp, #-16]
    f468:	ldr	r3, [pc, #300]	; f59c <rb_accept_tryaccept+0x1f4>
    f46c:	add	r3, pc, r3
    f470:	mov	r0, r3
    f474:	bl	4994 <rb_lib_log@plt>
    f478:	ldr	r0, [fp, #-16]
    f47c:	bl	49b8 <close@plt>
    f480:	b	f588 <rb_accept_tryaccept+0x1e0>
    f484:	ldr	r0, [fp, #-20]	; 0xffffffec
    f488:	bl	4688 <rb_set_nb@plt>
    f48c:	mov	r3, r0
    f490:	cmp	r3, #0
    f494:	moveq	r3, #1
    f498:	movne	r3, #0
    f49c:	uxtb	r3, r3
    f4a0:	cmp	r3, #0
    f4a4:	beq	f4cc <rb_accept_tryaccept+0x124>
    f4a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    f4ac:	ldr	r3, [r3, #12]
    f4b0:	mov	r1, r3
    f4b4:	ldr	r3, [pc, #228]	; f5a0 <rb_accept_tryaccept+0x1f8>
    f4b8:	add	r3, pc, r3
    f4bc:	mov	r0, r3
    f4c0:	bl	4994 <rb_lib_log@plt>
    f4c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    f4c8:	bl	48d4 <rb_close@plt>
    f4cc:	sub	r3, fp, #148	; 0x94
    f4d0:	mov	r0, r3
    f4d4:	bl	1010c <mangle_mapped_sockaddr>
    f4d8:	ldr	r3, [fp, #-160]	; 0xffffff60
    f4dc:	ldr	r3, [r3, #52]	; 0x34
    f4e0:	ldr	r3, [r3, #136]	; 0x88
    f4e4:	cmp	r3, #0
    f4e8:	beq	f520 <rb_accept_tryaccept+0x178>
    f4ec:	ldr	r3, [fp, #-160]	; 0xffffff60
    f4f0:	ldr	r3, [r3, #52]	; 0x34
    f4f4:	ldr	r4, [r3, #136]	; 0x88
    f4f8:	ldr	r2, [fp, #-152]	; 0xffffff68
    f4fc:	ldr	r3, [fp, #-160]	; 0xffffff60
    f500:	ldr	r3, [r3, #52]	; 0x34
    f504:	ldr	r3, [r3, #140]	; 0x8c
    f508:	sub	r1, fp, #148	; 0x94
    f50c:	ldr	r0, [fp, #-20]	; 0xffffffec
    f510:	blx	r4
    f514:	mov	r3, r0
    f518:	cmp	r3, #0
    f51c:	beq	f584 <rb_accept_tryaccept+0x1dc>
    f520:	ldr	r3, [fp, #-160]	; 0xffffff60
    f524:	ldrb	r3, [r3, #17]
    f528:	and	r3, r3, #32
    f52c:	cmp	r3, #0
    f530:	beq	f54c <rb_accept_tryaccept+0x1a4>
    f534:	ldr	r3, [fp, #-152]	; 0xffffff68
    f538:	sub	r2, fp, #148	; 0x94
    f53c:	ldr	r1, [fp, #-20]	; 0xffffffec
    f540:	ldr	r0, [fp, #-160]	; 0xffffff60
    f544:	bl	14568 <rb_ssl_accept_setup>
    f548:	b	f3bc <rb_accept_tryaccept+0x14>
    f54c:	ldr	r3, [fp, #-160]	; 0xffffff60
    f550:	ldr	r3, [r3, #52]	; 0x34
    f554:	ldr	r4, [r3, #132]	; 0x84
    f558:	ldr	r1, [fp, #-152]	; 0xffffff68
    f55c:	ldr	r3, [fp, #-160]	; 0xffffff60
    f560:	ldr	r3, [r3, #52]	; 0x34
    f564:	ldr	r3, [r3, #140]	; 0x8c
    f568:	sub	r2, fp, #148	; 0x94
    f56c:	str	r3, [sp]
    f570:	mov	r3, r1
    f574:	mov	r1, #0
    f578:	ldr	r0, [fp, #-20]	; 0xffffffec
    f57c:	blx	r4
    f580:	b	f3bc <rb_accept_tryaccept+0x14>
    f584:	nop			; (mov r0, r0)
    f588:	b	f3bc <rb_accept_tryaccept+0x14>
    f58c:	sub	sp, fp, #8
    f590:	pop	{r4, fp, pc}
    f594:	.word	0xffffff94
    f598:	.word	0x00012fd4
    f59c:	.word	0x00012fc0
    f5a0:	.word	0x00012fbc

0000f5a4 <rb_accept_tcp>:
    f5a4:	push	{fp, lr}
    f5a8:	add	fp, sp, #4
    f5ac:	sub	sp, sp, #16
    f5b0:	str	r0, [fp, #-8]
    f5b4:	str	r1, [fp, #-12]
    f5b8:	str	r2, [fp, #-16]
    f5bc:	str	r3, [fp, #-20]	; 0xffffffec
    f5c0:	ldr	r3, [fp, #-8]
    f5c4:	cmp	r3, #0
    f5c8:	beq	f620 <rb_accept_tcp+0x7c>
    f5cc:	mov	r0, #144	; 0x90
    f5d0:	bl	e7ec <rb_malloc>
    f5d4:	mov	r2, r0
    f5d8:	ldr	r3, [fp, #-8]
    f5dc:	str	r2, [r3, #52]	; 0x34
    f5e0:	ldr	r3, [fp, #-8]
    f5e4:	ldr	r3, [r3, #52]	; 0x34
    f5e8:	ldr	r2, [fp, #-16]
    f5ec:	str	r2, [r3, #132]	; 0x84
    f5f0:	ldr	r3, [fp, #-8]
    f5f4:	ldr	r3, [r3, #52]	; 0x34
    f5f8:	ldr	r2, [fp, #-20]	; 0xffffffec
    f5fc:	str	r2, [r3, #140]	; 0x8c
    f600:	ldr	r3, [fp, #-8]
    f604:	ldr	r3, [r3, #52]	; 0x34
    f608:	ldr	r2, [fp, #-12]
    f60c:	str	r2, [r3, #136]	; 0x88
    f610:	mov	r1, #0
    f614:	ldr	r0, [fp, #-8]
    f618:	bl	f3a8 <rb_accept_tryaccept>
    f61c:	b	f624 <rb_accept_tcp+0x80>
    f620:	nop			; (mov r0, r0)
    f624:	sub	sp, fp, #4
    f628:	pop	{fp, pc}

0000f62c <rb_connect_tcp>:
    f62c:	push	{fp, lr}
    f630:	add	fp, sp, #4
    f634:	sub	sp, sp, #24
    f638:	str	r0, [fp, #-16]
    f63c:	str	r1, [fp, #-20]	; 0xffffffec
    f640:	str	r2, [fp, #-24]	; 0xffffffe8
    f644:	str	r3, [fp, #-28]	; 0xffffffe4
    f648:	ldr	r3, [fp, #-16]
    f64c:	cmp	r3, #0
    f650:	beq	f7e8 <rb_connect_tcp+0x1bc>
    f654:	mov	r0, #268	; 0x10c
    f658:	bl	e7ec <rb_malloc>
    f65c:	mov	r2, r0
    f660:	ldr	r3, [fp, #-16]
    f664:	str	r2, [r3, #48]	; 0x30
    f668:	ldr	r3, [fp, #-16]
    f66c:	ldr	r3, [r3, #48]	; 0x30
    f670:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f674:	str	r2, [r3, #260]	; 0x104
    f678:	ldr	r3, [fp, #-16]
    f67c:	ldr	r3, [r3, #48]	; 0x30
    f680:	ldr	r2, [fp, #4]
    f684:	str	r2, [r3, #264]	; 0x108
    f688:	ldr	r3, [fp, #-16]
    f68c:	ldr	r3, [r3, #48]	; 0x30
    f690:	add	r3, r3, #128	; 0x80
    f694:	mov	r2, #128	; 0x80
    f698:	ldr	r1, [fp, #-20]	; 0xffffffec
    f69c:	mov	r0, r3
    f6a0:	bl	4880 <memcpy@plt>
    f6a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f6a8:	cmp	r3, #0
    f6ac:	beq	f6fc <rb_connect_tcp+0xd0>
    f6b0:	ldr	r3, [fp, #-16]
    f6b4:	ldr	r0, [r3, #12]
    f6b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    f6bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f6c0:	ldrh	r3, [r3]
    f6c4:	cmp	r3, #2
    f6c8:	bne	f6d4 <rb_connect_tcp+0xa8>
    f6cc:	mov	r3, #16
    f6d0:	b	f6d8 <rb_connect_tcp+0xac>
    f6d4:	mov	r3, #28
    f6d8:	mov	r2, r3
    f6dc:	bl	4988 <bind@plt>
    f6e0:	mov	r3, r0
    f6e4:	cmp	r3, #0
    f6e8:	bge	f6fc <rb_connect_tcp+0xd0>
    f6ec:	mov	r1, #1
    f6f0:	ldr	r0, [fp, #-16]
    f6f4:	bl	f830 <rb_connect_callback>
    f6f8:	b	f7ec <rb_connect_tcp+0x1c0>
    f6fc:	mov	r3, #0
    f700:	ldr	r2, [pc, #236]	; f7f4 <rb_connect_tcp+0x1c8>
    f704:	add	r2, pc, r2
    f708:	ldr	r1, [fp, #8]
    f70c:	ldr	r0, [fp, #-16]
    f710:	bl	4454 <rb_settimeout@plt>
    f714:	ldr	r3, [fp, #-16]
    f718:	ldr	r0, [r3, #12]
    f71c:	ldr	r3, [fp, #-16]
    f720:	ldr	r3, [r3, #48]	; 0x30
    f724:	add	r3, r3, #128	; 0x80
    f728:	mov	r1, r3
    f72c:	ldr	r3, [fp, #-16]
    f730:	ldr	r3, [r3, #48]	; 0x30
    f734:	add	r3, r3, #128	; 0x80
    f738:	ldrh	r3, [r3]
    f73c:	cmp	r3, #2
    f740:	bne	f74c <rb_connect_tcp+0x120>
    f744:	mov	r3, #16
    f748:	b	f750 <rb_connect_tcp+0x124>
    f74c:	mov	r3, #28
    f750:	mov	r2, r3
    f754:	bl	443c <connect@plt>
    f758:	str	r0, [fp, #-8]
    f75c:	ldr	r3, [fp, #-8]
    f760:	cmp	r3, #0
    f764:	bge	f7d8 <rb_connect_tcp+0x1ac>
    f768:	bl	4d78 <__errno_location@plt>
    f76c:	mov	r3, r0
    f770:	ldr	r3, [r3]
    f774:	cmp	r3, #106	; 0x6a
    f778:	bne	f78c <rb_connect_tcp+0x160>
    f77c:	mov	r1, #0
    f780:	ldr	r0, [fp, #-16]
    f784:	bl	f830 <rb_connect_callback>
    f788:	b	f7ec <rb_connect_tcp+0x1c0>
    f78c:	bl	4d78 <__errno_location@plt>
    f790:	mov	r3, r0
    f794:	ldr	r3, [r3]
    f798:	mov	r0, r3
    f79c:	bl	4448 <rb_ignore_errno@plt>
    f7a0:	mov	r3, r0
    f7a4:	cmp	r3, #0
    f7a8:	beq	f7c8 <rb_connect_tcp+0x19c>
    f7ac:	mov	r3, #0
    f7b0:	ldr	r2, [pc, #64]	; f7f8 <rb_connect_tcp+0x1cc>
    f7b4:	add	r2, pc, r2
    f7b8:	mov	r1, #2
    f7bc:	ldr	r0, [fp, #-16]
    f7c0:	bl	4514 <rb_setselect@plt>
    f7c4:	b	f7ec <rb_connect_tcp+0x1c0>
    f7c8:	mov	r1, #4
    f7cc:	ldr	r0, [fp, #-16]
    f7d0:	bl	f830 <rb_connect_callback>
    f7d4:	b	f7ec <rb_connect_tcp+0x1c0>
    f7d8:	mov	r1, #0
    f7dc:	ldr	r0, [fp, #-16]
    f7e0:	bl	f830 <rb_connect_callback>
    f7e4:	b	f7ec <rb_connect_tcp+0x1c0>
    f7e8:	nop			; (mov r0, r0)
    f7ec:	sub	sp, fp, #4
    f7f0:	pop	{fp, pc}
    f7f4:	.word	0x000001f0
    f7f8:	.word	0x0000016c

0000f7fc <rb_connect_sctp>:
    f7fc:	push	{fp, lr}
    f800:	add	fp, sp, #4
    f804:	sub	sp, sp, #16
    f808:	str	r0, [fp, #-8]
    f80c:	str	r1, [fp, #-12]
    f810:	str	r2, [fp, #-16]
    f814:	str	r3, [fp, #-20]	; 0xffffffec
    f818:	mov	r1, #4
    f81c:	ldr	r0, [fp, #-8]
    f820:	bl	f830 <rb_connect_callback>
    f824:	nop			; (mov r0, r0)
    f828:	sub	sp, fp, #4
    f82c:	pop	{fp, pc}

0000f830 <rb_connect_callback>:
    f830:	push	{fp, lr}
    f834:	add	fp, sp, #4
    f838:	sub	sp, sp, #24
    f83c:	str	r0, [fp, #-24]	; 0xffffffe8
    f840:	str	r1, [fp, #-28]	; 0xffffffe4
    f844:	bl	4d78 <__errno_location@plt>
    f848:	mov	r3, r0
    f84c:	ldr	r3, [r3]
    f850:	str	r3, [fp, #-8]
    f854:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f858:	cmp	r3, #0
    f85c:	beq	f8f0 <rb_connect_callback+0xc0>
    f860:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f864:	ldr	r3, [r3, #48]	; 0x30
    f868:	cmp	r3, #0
    f86c:	beq	f8f0 <rb_connect_callback+0xc0>
    f870:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f874:	ldr	r3, [r3, #48]	; 0x30
    f878:	ldr	r3, [r3, #260]	; 0x104
    f87c:	cmp	r3, #0
    f880:	beq	f8f0 <rb_connect_callback+0xc0>
    f884:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f888:	ldr	r3, [r3, #48]	; 0x30
    f88c:	ldr	r3, [r3, #260]	; 0x104
    f890:	str	r3, [fp, #-12]
    f894:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f898:	ldr	r3, [r3, #48]	; 0x30
    f89c:	ldr	r3, [r3, #264]	; 0x108
    f8a0:	str	r3, [fp, #-16]
    f8a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f8a8:	ldr	r3, [r3, #48]	; 0x30
    f8ac:	mov	r2, #0
    f8b0:	str	r2, [r3, #260]	; 0x104
    f8b4:	mov	r3, #0
    f8b8:	mov	r2, #0
    f8bc:	mov	r1, #0
    f8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f8c4:	bl	4454 <rb_settimeout@plt>
    f8c8:	bl	4d78 <__errno_location@plt>
    f8cc:	mov	r2, r0
    f8d0:	ldr	r3, [fp, #-8]
    f8d4:	str	r3, [r2]
    f8d8:	ldr	r3, [fp, #-12]
    f8dc:	ldr	r2, [fp, #-16]
    f8e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    f8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f8e8:	blx	r3
    f8ec:	b	f8f4 <rb_connect_callback+0xc4>
    f8f0:	nop			; (mov r0, r0)
    f8f4:	sub	sp, fp, #4
    f8f8:	pop	{fp, pc}

0000f8fc <rb_connect_timeout>:
    f8fc:	push	{fp, lr}
    f900:	add	fp, sp, #4
    f904:	sub	sp, sp, #8
    f908:	str	r0, [fp, #-8]
    f90c:	str	r1, [fp, #-12]
    f910:	mov	r1, #3
    f914:	ldr	r0, [fp, #-8]
    f918:	bl	f830 <rb_connect_callback>
    f91c:	nop			; (mov r0, r0)
    f920:	sub	sp, fp, #4
    f924:	pop	{fp, pc}

0000f928 <rb_connect_outcome>:
    f928:	push	{fp, lr}
    f92c:	add	fp, sp, #4
    f930:	sub	sp, sp, #32
    f934:	str	r0, [fp, #-24]	; 0xffffffe8
    f938:	str	r1, [fp, #-28]	; 0xffffffe4
    f93c:	mov	r3, #0
    f940:	str	r3, [fp, #-12]
    f944:	mov	r3, #4
    f948:	str	r3, [fp, #-16]
    f94c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f950:	cmp	r3, #0
    f954:	beq	fa00 <rb_connect_outcome+0xd8>
    f958:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f95c:	ldr	r3, [r3, #48]	; 0x30
    f960:	cmp	r3, #0
    f964:	beq	fa00 <rb_connect_outcome+0xd8>
    f968:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f96c:	ldr	r3, [r3, #48]	; 0x30
    f970:	ldr	r3, [r3, #260]	; 0x104
    f974:	cmp	r3, #0
    f978:	beq	fa00 <rb_connect_outcome+0xd8>
    f97c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f980:	ldr	r0, [r3, #12]
    f984:	sub	r2, fp, #12
    f988:	sub	r3, fp, #16
    f98c:	str	r3, [sp]
    f990:	mov	r3, r2
    f994:	mov	r2, #4
    f998:	mov	r1, #1
    f99c:	bl	4d00 <getsockopt@plt>
    f9a0:	str	r0, [fp, #-8]
    f9a4:	ldr	r3, [fp, #-8]
    f9a8:	cmp	r3, #0
    f9ac:	blt	f9d4 <rb_connect_outcome+0xac>
    f9b0:	ldr	r3, [fp, #-12]
    f9b4:	cmp	r3, #0
    f9b8:	beq	f9d4 <rb_connect_outcome+0xac>
    f9bc:	bl	4d78 <__errno_location@plt>
    f9c0:	mov	r2, r0
    f9c4:	ldr	r3, [fp, #-12]
    f9c8:	str	r3, [r2]
    f9cc:	mvn	r3, #0
    f9d0:	str	r3, [fp, #-8]
    f9d4:	ldr	r3, [fp, #-8]
    f9d8:	cmp	r3, #0
    f9dc:	bge	f9f0 <rb_connect_outcome+0xc8>
    f9e0:	mov	r1, #4
    f9e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f9e8:	bl	f830 <rb_connect_callback>
    f9ec:	b	fa04 <rb_connect_outcome+0xdc>
    f9f0:	mov	r1, #0
    f9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f9f8:	bl	f830 <rb_connect_callback>
    f9fc:	b	fa04 <rb_connect_outcome+0xdc>
    fa00:	nop			; (mov r0, r0)
    fa04:	sub	sp, fp, #4
    fa08:	pop	{fp, pc}

0000fa0c <rb_connect_sockaddr>:
    fa0c:	push	{fp, lr}
    fa10:	add	fp, sp, #4
    fa14:	sub	sp, sp, #16
    fa18:	str	r0, [fp, #-8]
    fa1c:	str	r1, [fp, #-12]
    fa20:	str	r2, [fp, #-16]
    fa24:	ldr	r3, [fp, #-8]
    fa28:	cmp	r3, #0
    fa2c:	bne	fa38 <rb_connect_sockaddr+0x2c>
    fa30:	mov	r3, #0
    fa34:	b	fa58 <rb_connect_sockaddr+0x4c>
    fa38:	ldr	r3, [fp, #-8]
    fa3c:	ldr	r3, [r3, #48]	; 0x30
    fa40:	add	r3, r3, #128	; 0x80
    fa44:	ldr	r2, [fp, #-16]
    fa48:	mov	r1, r3
    fa4c:	ldr	r0, [fp, #-12]
    fa50:	bl	4880 <memcpy@plt>
    fa54:	mov	r3, #1
    fa58:	mov	r0, r3
    fa5c:	sub	sp, fp, #4
    fa60:	pop	{fp, pc}

0000fa64 <rb_errstr>:
    fa64:	push	{fp}		; (str fp, [sp, #-4]!)
    fa68:	add	fp, sp, #0
    fa6c:	sub	sp, sp, #12
    fa70:	str	r0, [fp, #-8]
    fa74:	ldr	r3, [fp, #-8]
    fa78:	cmp	r3, #0
    fa7c:	blt	fa8c <rb_errstr+0x28>
    fa80:	ldr	r3, [fp, #-8]
    fa84:	cmp	r3, #6
    fa88:	ble	fa98 <rb_errstr+0x34>
    fa8c:	ldr	r3, [pc, #36]	; fab8 <rb_errstr+0x54>
    fa90:	add	r3, pc, r3
    fa94:	b	faa8 <rb_errstr+0x44>
    fa98:	ldr	r3, [pc, #28]	; fabc <rb_errstr+0x58>
    fa9c:	add	r3, pc, r3
    faa0:	ldr	r2, [fp, #-8]
    faa4:	ldr	r3, [r3, r2, lsl #2]
    faa8:	mov	r0, r3
    faac:	add	sp, fp, #0
    fab0:	pop	{fp}		; (ldr fp, [sp], #4)
    fab4:	bx	lr
    fab8:	.word	0x00012a10
    fabc:	.word	0x000249d8

0000fac0 <rb_socketpair>:
    fac0:	push	{r4, fp, lr}
    fac4:	add	fp, sp, #8
    fac8:	sub	sp, sp, #28
    facc:	str	r0, [fp, #-24]	; 0xffffffe8
    fad0:	str	r1, [fp, #-28]	; 0xffffffe4
    fad4:	str	r2, [fp, #-32]	; 0xffffffe0
    fad8:	str	r3, [fp, #-36]	; 0xffffffdc
    fadc:	ldr	r1, [pc, #544]	; fd04 <rb_socketpair+0x244>
    fae0:	add	r1, pc, r1
    fae4:	ldr	r3, [pc, #540]	; fd08 <rb_socketpair+0x248>
    fae8:	add	r3, pc, r3
    faec:	ldr	r2, [r3]
    faf0:	ldr	r3, [pc, #532]	; fd0c <rb_socketpair+0x24c>
    faf4:	ldr	r3, [r1, r3]
    faf8:	ldr	r3, [r3]
    fafc:	cmp	r2, r3
    fb00:	blt	fb1c <rb_socketpair+0x5c>
    fb04:	bl	4d78 <__errno_location@plt>
    fb08:	mov	r2, r0
    fb0c:	mov	r3, #23
    fb10:	str	r3, [r2]
    fb14:	mvn	r3, #0
    fb18:	b	fcf8 <rb_socketpair+0x238>
    fb1c:	sub	r3, fp, #20
    fb20:	ldr	r2, [fp, #-32]	; 0xffffffe0
    fb24:	ldr	r1, [fp, #-28]	; 0xffffffe4
    fb28:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fb2c:	bl	45d4 <socketpair@plt>
    fb30:	mov	r3, r0
    fb34:	cmp	r3, #0
    fb38:	beq	fb44 <rb_socketpair+0x84>
    fb3c:	mvn	r3, #0
    fb40:	b	fcf8 <rb_socketpair+0x238>
    fb44:	ldr	r3, [fp, #-20]	; 0xffffffec
    fb48:	ldr	r2, [fp, #8]
    fb4c:	mov	r1, #4
    fb50:	mov	r0, r3
    fb54:	bl	4afc <rb_open@plt>
    fb58:	mov	r2, r0
    fb5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fb60:	str	r2, [r3]
    fb64:	ldr	r3, [fp, #-16]
    fb68:	ldr	r2, [fp, #8]
    fb6c:	mov	r1, #4
    fb70:	mov	r0, r3
    fb74:	bl	4afc <rb_open@plt>
    fb78:	mov	r2, r0
    fb7c:	ldr	r3, [fp, #4]
    fb80:	str	r2, [r3]
    fb84:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fb88:	ldr	r3, [r3]
    fb8c:	cmp	r3, #0
    fb90:	bne	fbbc <rb_socketpair+0xfc>
    fb94:	ldr	r3, [fp, #4]
    fb98:	ldr	r3, [r3]
    fb9c:	cmp	r3, #0
    fba0:	beq	fbb4 <rb_socketpair+0xf4>
    fba4:	ldr	r3, [fp, #4]
    fba8:	ldr	r3, [r3]
    fbac:	mov	r0, r3
    fbb0:	bl	48d4 <rb_close@plt>
    fbb4:	mvn	r3, #0
    fbb8:	b	fcf8 <rb_socketpair+0x238>
    fbbc:	ldr	r3, [fp, #4]
    fbc0:	ldr	r3, [r3]
    fbc4:	cmp	r3, #0
    fbc8:	bne	fbe4 <rb_socketpair+0x124>
    fbcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fbd0:	ldr	r3, [r3]
    fbd4:	mov	r0, r3
    fbd8:	bl	48d4 <rb_close@plt>
    fbdc:	mvn	r3, #0
    fbe0:	b	fcf8 <rb_socketpair+0x238>
    fbe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fbe8:	ldr	r3, [r3]
    fbec:	mov	r0, r3
    fbf0:	bl	4688 <rb_set_nb@plt>
    fbf4:	mov	r3, r0
    fbf8:	cmp	r3, #0
    fbfc:	moveq	r3, #1
    fc00:	movne	r3, #0
    fc04:	uxtb	r3, r3
    fc08:	cmp	r3, #0
    fc0c:	beq	fc6c <rb_socketpair+0x1ac>
    fc10:	ldr	r4, [fp, #-20]	; 0xffffffec
    fc14:	bl	4d78 <__errno_location@plt>
    fc18:	mov	r3, r0
    fc1c:	ldr	r3, [r3]
    fc20:	mov	r0, r3
    fc24:	bl	440c <strerror@plt>
    fc28:	mov	r3, r0
    fc2c:	mov	r2, r3
    fc30:	mov	r1, r4
    fc34:	ldr	r3, [pc, #212]	; fd10 <rb_socketpair+0x250>
    fc38:	add	r3, pc, r3
    fc3c:	mov	r0, r3
    fc40:	bl	4994 <rb_lib_log@plt>
    fc44:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fc48:	ldr	r3, [r3]
    fc4c:	mov	r0, r3
    fc50:	bl	48d4 <rb_close@plt>
    fc54:	ldr	r3, [fp, #4]
    fc58:	ldr	r3, [r3]
    fc5c:	mov	r0, r3
    fc60:	bl	48d4 <rb_close@plt>
    fc64:	mvn	r3, #0
    fc68:	b	fcf8 <rb_socketpair+0x238>
    fc6c:	ldr	r3, [fp, #4]
    fc70:	ldr	r3, [r3]
    fc74:	mov	r0, r3
    fc78:	bl	4688 <rb_set_nb@plt>
    fc7c:	mov	r3, r0
    fc80:	cmp	r3, #0
    fc84:	moveq	r3, #1
    fc88:	movne	r3, #0
    fc8c:	uxtb	r3, r3
    fc90:	cmp	r3, #0
    fc94:	beq	fcf4 <rb_socketpair+0x234>
    fc98:	ldr	r4, [fp, #-16]
    fc9c:	bl	4d78 <__errno_location@plt>
    fca0:	mov	r3, r0
    fca4:	ldr	r3, [r3]
    fca8:	mov	r0, r3
    fcac:	bl	440c <strerror@plt>
    fcb0:	mov	r3, r0
    fcb4:	mov	r2, r3
    fcb8:	mov	r1, r4
    fcbc:	ldr	r3, [pc, #80]	; fd14 <rb_socketpair+0x254>
    fcc0:	add	r3, pc, r3
    fcc4:	mov	r0, r3
    fcc8:	bl	4994 <rb_lib_log@plt>
    fccc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fcd0:	ldr	r3, [r3]
    fcd4:	mov	r0, r3
    fcd8:	bl	48d4 <rb_close@plt>
    fcdc:	ldr	r3, [fp, #4]
    fce0:	ldr	r3, [r3]
    fce4:	mov	r0, r3
    fce8:	bl	48d4 <rb_close@plt>
    fcec:	mvn	r3, #0
    fcf0:	b	fcf8 <rb_socketpair+0x238>
    fcf4:	mov	r3, #0
    fcf8:	mov	r0, r3
    fcfc:	sub	sp, fp, #8
    fd00:	pop	{r4, fp, pc}
    fd04:	.word	0x00024518
    fd08:	.word	0x000373c0
    fd0c:	.word	0x000003ac
    fd10:	.word	0x00012880
    fd14:	.word	0x000127f8

0000fd18 <rb_pipe>:
    fd18:	push	{r4, fp, lr}
    fd1c:	add	fp, sp, #8
    fd20:	sub	sp, sp, #28
    fd24:	str	r0, [fp, #-24]	; 0xffffffe8
    fd28:	str	r1, [fp, #-28]	; 0xffffffe4
    fd2c:	str	r2, [fp, #-32]	; 0xffffffe0
    fd30:	ldr	r1, [pc, #440]	; fef0 <rb_pipe+0x1d8>
    fd34:	add	r1, pc, r1
    fd38:	ldr	r3, [pc, #436]	; fef4 <rb_pipe+0x1dc>
    fd3c:	add	r3, pc, r3
    fd40:	ldr	r2, [r3]
    fd44:	ldr	r3, [pc, #428]	; fef8 <rb_pipe+0x1e0>
    fd48:	ldr	r3, [r1, r3]
    fd4c:	ldr	r3, [r3]
    fd50:	cmp	r2, r3
    fd54:	blt	fd70 <rb_pipe+0x58>
    fd58:	bl	4d78 <__errno_location@plt>
    fd5c:	mov	r2, r0
    fd60:	mov	r3, #23
    fd64:	str	r3, [r2]
    fd68:	mvn	r3, #0
    fd6c:	b	fee4 <rb_pipe+0x1cc>
    fd70:	sub	r3, fp, #20
    fd74:	mov	r0, r3
    fd78:	bl	4d0c <pipe@plt>
    fd7c:	mov	r3, r0
    fd80:	cmn	r3, #1
    fd84:	bne	fd90 <rb_pipe+0x78>
    fd88:	mvn	r3, #0
    fd8c:	b	fee4 <rb_pipe+0x1cc>
    fd90:	ldr	r3, [fp, #-20]	; 0xffffffec
    fd94:	ldr	r2, [fp, #-32]	; 0xffffffe0
    fd98:	mov	r1, #8
    fd9c:	mov	r0, r3
    fda0:	bl	4afc <rb_open@plt>
    fda4:	mov	r2, r0
    fda8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fdac:	str	r2, [r3]
    fdb0:	ldr	r3, [fp, #-16]
    fdb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    fdb8:	mov	r1, #8
    fdbc:	mov	r0, r3
    fdc0:	bl	4afc <rb_open@plt>
    fdc4:	mov	r2, r0
    fdc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fdcc:	str	r2, [r3]
    fdd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fdd4:	ldr	r3, [r3]
    fdd8:	mov	r0, r3
    fddc:	bl	4688 <rb_set_nb@plt>
    fde0:	mov	r3, r0
    fde4:	cmp	r3, #0
    fde8:	moveq	r3, #1
    fdec:	movne	r3, #0
    fdf0:	uxtb	r3, r3
    fdf4:	cmp	r3, #0
    fdf8:	beq	fe58 <rb_pipe+0x140>
    fdfc:	ldr	r4, [fp, #-20]	; 0xffffffec
    fe00:	bl	4d78 <__errno_location@plt>
    fe04:	mov	r3, r0
    fe08:	ldr	r3, [r3]
    fe0c:	mov	r0, r3
    fe10:	bl	440c <strerror@plt>
    fe14:	mov	r3, r0
    fe18:	mov	r2, r3
    fe1c:	mov	r1, r4
    fe20:	ldr	r3, [pc, #212]	; fefc <rb_pipe+0x1e4>
    fe24:	add	r3, pc, r3
    fe28:	mov	r0, r3
    fe2c:	bl	4994 <rb_lib_log@plt>
    fe30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fe34:	ldr	r3, [r3]
    fe38:	mov	r0, r3
    fe3c:	bl	48d4 <rb_close@plt>
    fe40:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fe44:	ldr	r3, [r3]
    fe48:	mov	r0, r3
    fe4c:	bl	48d4 <rb_close@plt>
    fe50:	mvn	r3, #0
    fe54:	b	fee4 <rb_pipe+0x1cc>
    fe58:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fe5c:	ldr	r3, [r3]
    fe60:	mov	r0, r3
    fe64:	bl	4688 <rb_set_nb@plt>
    fe68:	mov	r3, r0
    fe6c:	cmp	r3, #0
    fe70:	moveq	r3, #1
    fe74:	movne	r3, #0
    fe78:	uxtb	r3, r3
    fe7c:	cmp	r3, #0
    fe80:	beq	fee0 <rb_pipe+0x1c8>
    fe84:	ldr	r4, [fp, #-16]
    fe88:	bl	4d78 <__errno_location@plt>
    fe8c:	mov	r3, r0
    fe90:	ldr	r3, [r3]
    fe94:	mov	r0, r3
    fe98:	bl	440c <strerror@plt>
    fe9c:	mov	r3, r0
    fea0:	mov	r2, r3
    fea4:	mov	r1, r4
    fea8:	ldr	r3, [pc, #80]	; ff00 <rb_pipe+0x1e8>
    feac:	add	r3, pc, r3
    feb0:	mov	r0, r3
    feb4:	bl	4994 <rb_lib_log@plt>
    feb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    febc:	ldr	r3, [r3]
    fec0:	mov	r0, r3
    fec4:	bl	48d4 <rb_close@plt>
    fec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fecc:	ldr	r3, [r3]
    fed0:	mov	r0, r3
    fed4:	bl	48d4 <rb_close@plt>
    fed8:	mvn	r3, #0
    fedc:	b	fee4 <rb_pipe+0x1cc>
    fee0:	mov	r3, #0
    fee4:	mov	r0, r3
    fee8:	sub	sp, fp, #8
    feec:	pop	{r4, fp, pc}
    fef0:	.word	0x000242c4
    fef4:	.word	0x0003716c
    fef8:	.word	0x000003ac
    fefc:	.word	0x00012694
    ff00:	.word	0x0001260c

0000ff04 <rb_socket>:
    ff04:	push	{r4, fp, lr}
    ff08:	add	fp, sp, #8
    ff0c:	sub	sp, sp, #44	; 0x2c
    ff10:	str	r0, [fp, #-32]	; 0xffffffe0
    ff14:	str	r1, [fp, #-36]	; 0xffffffdc
    ff18:	str	r2, [fp, #-40]	; 0xffffffd8
    ff1c:	str	r3, [fp, #-44]	; 0xffffffd4
    ff20:	ldr	r1, [pc, #460]	; 100f4 <rb_socket+0x1f0>
    ff24:	add	r1, pc, r1
    ff28:	ldr	r3, [pc, #456]	; 100f8 <rb_socket+0x1f4>
    ff2c:	add	r3, pc, r3
    ff30:	ldr	r2, [r3]
    ff34:	ldr	r3, [pc, #448]	; 100fc <rb_socket+0x1f8>
    ff38:	ldr	r3, [r1, r3]
    ff3c:	ldr	r3, [r3]
    ff40:	cmp	r2, r3
    ff44:	movge	r3, #1
    ff48:	movlt	r3, #0
    ff4c:	uxtb	r3, r3
    ff50:	cmp	r3, #0
    ff54:	beq	ff70 <rb_socket+0x6c>
    ff58:	bl	4d78 <__errno_location@plt>
    ff5c:	mov	r2, r0
    ff60:	mov	r3, #23
    ff64:	str	r3, [r2]
    ff68:	mov	r3, #0
    ff6c:	b	100e8 <rb_socket+0x1e4>
    ff70:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ff74:	ldr	r1, [fp, #-36]	; 0xffffffdc
    ff78:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ff7c:	bl	4808 <socket@plt>
    ff80:	str	r0, [fp, #-16]
    ff84:	ldr	r3, [fp, #-16]
    ff88:	lsr	r3, r3, #31
    ff8c:	uxtb	r3, r3
    ff90:	cmp	r3, #0
    ff94:	beq	ffa0 <rb_socket+0x9c>
    ff98:	mov	r3, #0
    ff9c:	b	100e8 <rb_socket+0x1e4>
    ffa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ffa4:	cmp	r3, #10
    ffa8:	bne	10020 <rb_socket+0x11c>
    ffac:	mov	r3, #1
    ffb0:	str	r3, [fp, #-24]	; 0xffffffe8
    ffb4:	sub	r2, fp, #24
    ffb8:	mov	r3, #4
    ffbc:	str	r3, [sp]
    ffc0:	mov	r3, r2
    ffc4:	mov	r2, #26
    ffc8:	mov	r1, #41	; 0x29
    ffcc:	ldr	r0, [fp, #-16]
    ffd0:	bl	4d24 <setsockopt@plt>
    ffd4:	mov	r3, r0
    ffd8:	cmn	r3, #1
    ffdc:	bne	10020 <rb_socket+0x11c>
    ffe0:	ldr	r4, [fp, #-24]	; 0xffffffe8
    ffe4:	bl	4d78 <__errno_location@plt>
    ffe8:	mov	r3, r0
    ffec:	ldr	r3, [r3]
    fff0:	mov	r0, r3
    fff4:	bl	440c <strerror@plt>
    fff8:	mov	r3, r0
    fffc:	ldr	r2, [fp, #-16]
   10000:	mov	r1, r4
   10004:	ldr	r0, [pc, #244]	; 10100 <rb_socket+0x1fc>
   10008:	add	r0, pc, r0
   1000c:	bl	4994 <rb_lib_log@plt>
   10010:	ldr	r0, [fp, #-16]
   10014:	bl	49b8 <close@plt>
   10018:	mov	r3, #0
   1001c:	b	100e8 <rb_socket+0x1e4>
   10020:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10024:	mov	r1, #4
   10028:	ldr	r0, [fp, #-16]
   1002c:	bl	4afc <rb_open@plt>
   10030:	str	r0, [fp, #-20]	; 0xffffffec
   10034:	ldr	r3, [fp, #-20]	; 0xffffffec
   10038:	cmp	r3, #0
   1003c:	bne	10080 <rb_socket+0x17c>
   10040:	bl	4d78 <__errno_location@plt>
   10044:	mov	r3, r0
   10048:	ldr	r3, [r3]
   1004c:	mov	r0, r3
   10050:	bl	440c <strerror@plt>
   10054:	mov	r3, r0
   10058:	mov	r2, r3
   1005c:	ldr	r1, [fp, #-16]
   10060:	ldr	r3, [pc, #156]	; 10104 <rb_socket+0x200>
   10064:	add	r3, pc, r3
   10068:	mov	r0, r3
   1006c:	bl	4994 <rb_lib_log@plt>
   10070:	ldr	r0, [fp, #-16]
   10074:	bl	49b8 <close@plt>
   10078:	mov	r3, #0
   1007c:	b	100e8 <rb_socket+0x1e4>
   10080:	ldr	r0, [fp, #-20]	; 0xffffffec
   10084:	bl	4688 <rb_set_nb@plt>
   10088:	mov	r3, r0
   1008c:	cmp	r3, #0
   10090:	moveq	r3, #1
   10094:	movne	r3, #0
   10098:	uxtb	r3, r3
   1009c:	cmp	r3, #0
   100a0:	beq	100e4 <rb_socket+0x1e0>
   100a4:	bl	4d78 <__errno_location@plt>
   100a8:	mov	r3, r0
   100ac:	ldr	r3, [r3]
   100b0:	mov	r0, r3
   100b4:	bl	440c <strerror@plt>
   100b8:	mov	r3, r0
   100bc:	mov	r2, r3
   100c0:	ldr	r1, [fp, #-16]
   100c4:	ldr	r3, [pc, #60]	; 10108 <rb_socket+0x204>
   100c8:	add	r3, pc, r3
   100cc:	mov	r0, r3
   100d0:	bl	4994 <rb_lib_log@plt>
   100d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   100d8:	bl	48d4 <rb_close@plt>
   100dc:	mov	r3, #0
   100e0:	b	100e8 <rb_socket+0x1e4>
   100e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   100e8:	mov	r0, r3
   100ec:	sub	sp, fp, #8
   100f0:	pop	{r4, fp, pc}
   100f4:	.word	0x000240d4
   100f8:	.word	0x00036f7c
   100fc:	.word	0x000003ac
   10100:	.word	0x000124e0
   10104:	.word	0x000124c4
   10108:	.word	0x000123f0

0001010c <mangle_mapped_sockaddr>:
   1010c:	push	{r4, fp, lr}
   10110:	add	fp, sp, #8
   10114:	sub	sp, sp, #36	; 0x24
   10118:	str	r0, [fp, #-40]	; 0xffffffd8
   1011c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10120:	str	r3, [fp, #-16]
   10124:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10128:	ldrh	r3, [r3]
   1012c:	cmp	r3, #10
   10130:	bne	101e0 <mangle_mapped_sockaddr+0xd4>
   10134:	ldr	r3, [fp, #-16]
   10138:	add	r3, r3, #8
   1013c:	str	r3, [fp, #-20]	; 0xffffffec
   10140:	ldr	r3, [fp, #-20]	; 0xffffffec
   10144:	ldr	r3, [r3]
   10148:	cmp	r3, #0
   1014c:	bne	10184 <mangle_mapped_sockaddr+0x78>
   10150:	ldr	r3, [fp, #-20]	; 0xffffffec
   10154:	ldr	r3, [r3, #4]
   10158:	cmp	r3, #0
   1015c:	bne	10184 <mangle_mapped_sockaddr+0x78>
   10160:	ldr	r3, [fp, #-20]	; 0xffffffec
   10164:	ldr	r4, [r3, #8]
   10168:	ldr	r0, [pc, #124]	; 101ec <mangle_mapped_sockaddr+0xe0>
   1016c:	bl	4b98 <htonl@plt>
   10170:	mov	r3, r0
   10174:	cmp	r4, r3
   10178:	bne	10184 <mangle_mapped_sockaddr+0x78>
   1017c:	mov	r3, #1
   10180:	b	10188 <mangle_mapped_sockaddr+0x7c>
   10184:	mov	r3, #0
   10188:	cmp	r3, #0
   1018c:	beq	101e0 <mangle_mapped_sockaddr+0xd4>
   10190:	sub	r3, fp, #36	; 0x24
   10194:	mov	r2, #16
   10198:	mov	r1, #0
   1019c:	mov	r0, r3
   101a0:	bl	4694 <memset@plt>
   101a4:	mov	r3, #2
   101a8:	strh	r3, [fp, #-36]	; 0xffffffdc
   101ac:	ldr	r3, [fp, #-16]
   101b0:	ldrh	r3, [r3, #2]
   101b4:	strh	r3, [fp, #-34]	; 0xffffffde
   101b8:	ldr	r3, [fp, #-16]
   101bc:	add	r3, r3, #8
   101c0:	add	r3, r3, #12
   101c4:	ldr	r3, [r3]
   101c8:	str	r3, [fp, #-32]	; 0xffffffe0
   101cc:	sub	r3, fp, #36	; 0x24
   101d0:	mov	r2, #16
   101d4:	mov	r1, r3
   101d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   101dc:	bl	4880 <memcpy@plt>
   101e0:	nop			; (mov r0, r0)
   101e4:	sub	sp, fp, #8
   101e8:	pop	{r4, fp, pc}
   101ec:	.word	0x0000ffff

000101f0 <rb_listen>:
   101f0:	push	{fp, lr}
   101f4:	add	fp, sp, #4
   101f8:	sub	sp, sp, #32
   101fc:	str	r0, [fp, #-16]
   10200:	str	r1, [fp, #-20]	; 0xffffffec
   10204:	str	r2, [fp, #-24]	; 0xffffffe8
   10208:	ldr	r3, [fp, #-16]
   1020c:	ldrb	r3, [r3, #17]
   10210:	sxtb	r3, r3
   10214:	bic	r3, r3, #127	; 0x7f
   10218:	sxtb	r3, r3
   1021c:	orr	r3, r3, #20
   10220:	sxtb	r3, r3
   10224:	uxtb	r2, r3
   10228:	ldr	r3, [fp, #-16]
   1022c:	strb	r2, [r3, #17]
   10230:	ldr	r3, [fp, #-16]
   10234:	ldr	r3, [r3, #12]
   10238:	ldr	r2, [fp, #-20]	; 0xffffffec
   1023c:	mov	r1, r2
   10240:	mov	r0, r3
   10244:	bl	464c <listen@plt>
   10248:	str	r0, [fp, #-8]
   1024c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10250:	cmp	r3, #0
   10254:	beq	10288 <rb_listen+0x98>
   10258:	ldr	r3, [fp, #-8]
   1025c:	cmp	r3, #0
   10260:	bne	10288 <rb_listen+0x98>
   10264:	ldr	r3, [fp, #-16]
   10268:	ldr	r0, [r3, #12]
   1026c:	sub	r2, fp, #20
   10270:	mov	r3, #4
   10274:	str	r3, [sp]
   10278:	mov	r3, r2
   1027c:	mov	r2, #9
   10280:	mov	r1, #6
   10284:	bl	4d24 <setsockopt@plt>
   10288:	ldr	r3, [fp, #-8]
   1028c:	mov	r0, r3
   10290:	sub	sp, fp, #4
   10294:	pop	{fp, pc}

00010298 <rb_fdlist_init>:
   10298:	push	{fp, lr}
   1029c:	add	fp, sp, #4
   102a0:	sub	sp, sp, #16
   102a4:	str	r0, [fp, #-8]
   102a8:	str	r1, [fp, #-12]
   102ac:	str	r2, [fp, #-16]
   102b0:	ldr	r2, [pc, #120]	; 10330 <rb_fdlist_init+0x98>
   102b4:	add	r2, pc, r2
   102b8:	ldr	r3, [pc, #116]	; 10334 <rb_fdlist_init+0x9c>
   102bc:	add	r3, pc, r3
   102c0:	ldr	r3, [r3]
   102c4:	cmp	r3, #0
   102c8:	bne	102fc <rb_fdlist_init+0x64>
   102cc:	ldr	r3, [pc, #100]	; 10338 <rb_fdlist_init+0xa0>
   102d0:	ldr	r3, [r2, r3]
   102d4:	ldr	r2, [fp, #-12]
   102d8:	str	r2, [r3]
   102dc:	ldr	r3, [fp, #-8]
   102e0:	cmp	r3, #0
   102e4:	beq	102ec <rb_fdlist_init+0x54>
   102e8:	bl	ec64 <rb_close_all>
   102ec:	ldr	r3, [pc, #72]	; 1033c <rb_fdlist_init+0xa4>
   102f0:	add	r3, pc, r3
   102f4:	mov	r2, #1
   102f8:	str	r2, [r3]
   102fc:	ldr	r3, [fp, #-16]
   10300:	ldr	r2, [pc, #56]	; 10340 <rb_fdlist_init+0xa8>
   10304:	add	r2, pc, r2
   10308:	mov	r1, r3
   1030c:	mov	r0, #68	; 0x44
   10310:	bl	4b2c <rb_bh_create@plt>
   10314:	mov	r2, r0
   10318:	ldr	r3, [pc, #36]	; 10344 <rb_fdlist_init+0xac>
   1031c:	add	r3, pc, r3
   10320:	str	r2, [r3]
   10324:	nop			; (mov r0, r0)
   10328:	sub	sp, fp, #4
   1032c:	pop	{fp, pc}
   10330:	.word	0x00023d44
   10334:	.word	0x00036c28
   10338:	.word	0x000003ac
   1033c:	.word	0x00036bf4
   10340:	.word	0x00012260
   10344:	.word	0x00036b6c

00010348 <rb_open>:
   10348:	push	{fp, lr}
   1034c:	add	fp, sp, #4
   10350:	sub	sp, sp, #24
   10354:	str	r0, [fp, #-16]
   10358:	mov	r3, r1
   1035c:	str	r2, [fp, #-24]	; 0xffffffe8
   10360:	strb	r3, [fp, #-17]	; 0xffffffef
   10364:	ldr	r0, [fp, #-16]
   10368:	bl	e9e4 <add_fd>
   1036c:	str	r0, [fp, #-12]
   10370:	ldr	r3, [fp, #-12]
   10374:	ldrb	r3, [r3, #16]
   10378:	and	r3, r3, #1
   1037c:	cmp	r3, #0
   10380:	movne	r3, #1
   10384:	moveq	r3, #0
   10388:	uxtb	r3, r3
   1038c:	cmp	r3, #0
   10390:	beq	103ec <rb_open+0xa4>
   10394:	ldr	r3, [fp, #-12]
   10398:	cmp	r3, #0
   1039c:	beq	103c0 <rb_open+0x78>
   103a0:	ldr	r3, [fp, #-12]
   103a4:	ldr	r3, [r3, #24]
   103a8:	cmp	r3, #0
   103ac:	beq	103c0 <rb_open+0x78>
   103b0:	ldr	r3, [fp, #-12]
   103b4:	ldr	r3, [r3, #24]
   103b8:	str	r3, [fp, #-8]
   103bc:	b	103cc <rb_open+0x84>
   103c0:	ldr	r3, [pc, #164]	; 1046c <rb_open+0x124>
   103c4:	add	r3, pc, r3
   103c8:	str	r3, [fp, #-8]
   103cc:	ldr	r2, [fp, #-8]
   103d0:	ldr	r1, [fp, #-16]
   103d4:	ldr	r3, [pc, #148]	; 10470 <rb_open+0x128>
   103d8:	add	r3, pc, r3
   103dc:	mov	r0, r3
   103e0:	bl	4994 <rb_lib_log@plt>
   103e4:	mov	r3, #0
   103e8:	b	10460 <rb_open+0x118>
   103ec:	ldr	r3, [fp, #-12]
   103f0:	ldr	r2, [fp, #-16]
   103f4:	str	r2, [r3, #12]
   103f8:	ldr	r3, [fp, #-12]
   103fc:	ldrb	r2, [fp, #-17]	; 0xffffffef
   10400:	strb	r2, [r3, #17]
   10404:	ldr	r3, [fp, #-12]
   10408:	ldrb	r3, [r3, #16]
   1040c:	orr	r3, r3, #1
   10410:	uxtb	r2, r3
   10414:	ldr	r3, [fp, #-12]
   10418:	strb	r2, [r3, #16]
   1041c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10420:	cmp	r3, #0
   10424:	beq	10440 <rb_open+0xf8>
   10428:	mov	r1, #128	; 0x80
   1042c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10430:	bl	e840 <rb_strndup>
   10434:	mov	r2, r0
   10438:	ldr	r3, [fp, #-12]
   1043c:	str	r2, [r3, #24]
   10440:	ldr	r3, [pc, #44]	; 10474 <rb_open+0x12c>
   10444:	add	r3, pc, r3
   10448:	ldr	r3, [r3]
   1044c:	add	r2, r3, #1
   10450:	ldr	r3, [pc, #32]	; 10478 <rb_open+0x130>
   10454:	add	r3, pc, r3
   10458:	str	r2, [r3]
   1045c:	ldr	r3, [fp, #-12]
   10460:	mov	r0, r3
   10464:	sub	sp, fp, #4
   10468:	pop	{fp, pc}
   1046c:	.word	0x000121b0
   10470:	.word	0x000121a4
   10474:	.word	0x00036a64
   10478:	.word	0x00036a54

0001047c <rb_close>:
   1047c:	push	{fp, lr}
   10480:	add	fp, sp, #4
   10484:	sub	sp, sp, #16
   10488:	str	r0, [fp, #-16]
   1048c:	ldr	r3, [fp, #-16]
   10490:	cmp	r3, #0
   10494:	beq	105a4 <rb_close+0x128>
   10498:	ldr	r3, [fp, #-16]
   1049c:	ldr	r3, [r3, #12]
   104a0:	str	r3, [fp, #-8]
   104a4:	ldr	r3, [fp, #-16]
   104a8:	ldrb	r3, [r3, #17]
   104ac:	str	r3, [fp, #-12]
   104b0:	ldr	r3, [fp, #-12]
   104b4:	and	r3, r3, #2
   104b8:	cmp	r3, #0
   104bc:	ldr	r3, [fp, #-12]
   104c0:	and	r3, r3, #16
   104c4:	cmp	r3, #0
   104c8:	beq	104e0 <rb_close+0x64>
   104cc:	ldr	r3, [fp, #-16]
   104d0:	ldr	r3, [r3, #12]
   104d4:	mov	r1, #0
   104d8:	mov	r0, r3
   104dc:	bl	464c <listen@plt>
   104e0:	mov	r3, #0
   104e4:	mov	r2, #0
   104e8:	mov	r1, #3
   104ec:	ldr	r0, [fp, #-16]
   104f0:	bl	4514 <rb_setselect@plt>
   104f4:	mov	r3, #0
   104f8:	mov	r2, #0
   104fc:	mov	r1, #0
   10500:	ldr	r0, [fp, #-16]
   10504:	bl	4454 <rb_settimeout@plt>
   10508:	ldr	r3, [fp, #-16]
   1050c:	ldr	r3, [r3, #52]	; 0x34
   10510:	mov	r0, r3
   10514:	bl	e8a4 <rb_free>
   10518:	ldr	r3, [fp, #-16]
   1051c:	ldr	r3, [r3, #48]	; 0x30
   10520:	mov	r0, r3
   10524:	bl	e8a4 <rb_free>
   10528:	ldr	r3, [fp, #-16]
   1052c:	ldr	r3, [r3, #24]
   10530:	mov	r0, r3
   10534:	bl	e8a4 <rb_free>
   10538:	ldr	r3, [fp, #-12]
   1053c:	and	r3, r3, #32
   10540:	cmp	r3, #0
   10544:	beq	10550 <rb_close+0xd4>
   10548:	ldr	r0, [fp, #-16]
   1054c:	bl	1380c <rb_ssl_shutdown>
   10550:	ldr	r3, [fp, #-16]
   10554:	ldrb	r3, [r3, #16]
   10558:	and	r3, r3, #1
   1055c:	cmp	r3, #0
   10560:	beq	10584 <rb_close+0x108>
   10564:	ldr	r0, [fp, #-16]
   10568:	bl	eab4 <remove_fd>
   1056c:	ldr	r3, [fp, #-16]
   10570:	ldrb	r3, [r3, #16]
   10574:	bic	r3, r3, #1
   10578:	uxtb	r2, r3
   1057c:	ldr	r3, [fp, #-16]
   10580:	strb	r2, [r3, #16]
   10584:	ldr	r3, [fp, #-12]
   10588:	and	r3, r3, #16
   1058c:	cmp	r3, #0
   10590:	beq	105a8 <rb_close+0x12c>
   10594:	mov	r1, #2
   10598:	ldr	r0, [fp, #-8]
   1059c:	bl	497c <shutdown@plt>
   105a0:	b	105a8 <rb_close+0x12c>
   105a4:	nop			; (mov r0, r0)
   105a8:	sub	sp, fp, #4
   105ac:	pop	{fp, pc}

000105b0 <rb_dump_fd>:
   105b0:	push	{r4, r5, fp, lr}
   105b4:	add	fp, sp, #12
   105b8:	sub	sp, sp, #24
   105bc:	str	r0, [fp, #-32]	; 0xffffffe0
   105c0:	str	r1, [fp, #-36]	; 0xffffffdc
   105c4:	ldr	r4, [pc, #268]	; 106d8 <rb_dump_fd+0x128>
   105c8:	add	r4, pc, r4
   105cc:	mov	r3, #0
   105d0:	str	r3, [fp, #-20]	; 0xffffffec
   105d4:	b	106c0 <rb_dump_fd+0x110>
   105d8:	ldr	r3, [pc, #252]	; 106dc <rb_dump_fd+0x12c>
   105dc:	ldr	r3, [r4, r3]
   105e0:	ldr	r1, [r3]
   105e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   105e8:	mov	r3, r2
   105ec:	lsl	r3, r3, #1
   105f0:	add	r3, r3, r2
   105f4:	lsl	r3, r3, #2
   105f8:	add	r3, r1, r3
   105fc:	str	r3, [fp, #-24]	; 0xffffffe8
   10600:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10604:	ldr	r3, [r3, #8]
   10608:	cmp	r3, #0
   1060c:	beq	106b0 <rb_dump_fd+0x100>
   10610:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10614:	ldr	r3, [r3]
   10618:	str	r3, [fp, #-16]
   1061c:	b	106a0 <rb_dump_fd+0xf0>
   10620:	ldr	r3, [fp, #-16]
   10624:	ldr	r3, [r3]
   10628:	str	r3, [fp, #-28]	; 0xffffffe4
   1062c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10630:	cmp	r3, #0
   10634:	beq	10690 <rb_dump_fd+0xe0>
   10638:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1063c:	ldrb	r3, [r3, #16]
   10640:	and	r3, r3, #1
   10644:	cmp	r3, #0
   10648:	beq	10690 <rb_dump_fd+0xe0>
   1064c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10650:	ldr	r0, [r3, #12]
   10654:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10658:	ldr	r3, [r3, #24]
   1065c:	cmp	r3, #0
   10660:	beq	10670 <rb_dump_fd+0xc0>
   10664:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10668:	ldr	r3, [r3, #24]
   1066c:	b	1067c <rb_dump_fd+0xcc>
   10670:	ldr	r3, [pc, #104]	; 106e0 <rb_dump_fd+0x130>
   10674:	add	r3, pc, r3
   10678:	ldr	r3, [r3]
   1067c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   10680:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10684:	mov	r1, r3
   10688:	blx	r5
   1068c:	b	10694 <rb_dump_fd+0xe4>
   10690:	nop			; (mov r0, r0)
   10694:	ldr	r3, [fp, #-16]
   10698:	ldr	r3, [r3, #8]
   1069c:	str	r3, [fp, #-16]
   106a0:	ldr	r3, [fp, #-16]
   106a4:	cmp	r3, #0
   106a8:	bne	10620 <rb_dump_fd+0x70>
   106ac:	b	106b4 <rb_dump_fd+0x104>
   106b0:	nop			; (mov r0, r0)
   106b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   106b8:	add	r3, r3, #1
   106bc:	str	r3, [fp, #-20]	; 0xffffffec
   106c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   106c4:	cmp	r3, #4096	; 0x1000
   106c8:	bcc	105d8 <rb_dump_fd+0x28>
   106cc:	nop			; (mov r0, r0)
   106d0:	sub	sp, fp, #12
   106d4:	pop	{r4, r5, fp, pc}
   106d8:	.word	0x00023a30
   106dc:	.word	0x000003cc
   106e0:	.word	0x0002421c

000106e4 <rb_note>:
   106e4:	push	{fp, lr}
   106e8:	add	fp, sp, #4
   106ec:	sub	sp, sp, #8
   106f0:	str	r0, [fp, #-8]
   106f4:	str	r1, [fp, #-12]
   106f8:	ldr	r3, [fp, #-8]
   106fc:	cmp	r3, #0
   10700:	beq	10730 <rb_note+0x4c>
   10704:	ldr	r3, [fp, #-8]
   10708:	ldr	r3, [r3, #24]
   1070c:	mov	r0, r3
   10710:	bl	e8a4 <rb_free>
   10714:	mov	r1, #128	; 0x80
   10718:	ldr	r0, [fp, #-12]
   1071c:	bl	e840 <rb_strndup>
   10720:	mov	r2, r0
   10724:	ldr	r3, [fp, #-8]
   10728:	str	r2, [r3, #24]
   1072c:	b	10734 <rb_note+0x50>
   10730:	nop			; (mov r0, r0)
   10734:	sub	sp, fp, #4
   10738:	pop	{fp, pc}

0001073c <rb_set_type>:
   1073c:	push	{fp}		; (str fp, [sp, #-4]!)
   10740:	add	fp, sp, #0
   10744:	sub	sp, sp, #12
   10748:	str	r0, [fp, #-8]
   1074c:	mov	r3, r1
   10750:	strb	r3, [fp, #-9]
   10754:	ldr	r3, [fp, #-8]
   10758:	ldrb	r2, [fp, #-9]
   1075c:	strb	r2, [r3, #17]
   10760:	nop			; (mov r0, r0)
   10764:	add	sp, fp, #0
   10768:	pop	{fp}		; (ldr fp, [sp], #4)
   1076c:	bx	lr

00010770 <rb_get_type>:
   10770:	push	{fp}		; (str fp, [sp, #-4]!)
   10774:	add	fp, sp, #0
   10778:	sub	sp, sp, #12
   1077c:	str	r0, [fp, #-8]
   10780:	ldr	r3, [fp, #-8]
   10784:	ldrb	r3, [r3, #17]
   10788:	mov	r0, r3
   1078c:	add	sp, fp, #0
   10790:	pop	{fp}		; (ldr fp, [sp], #4)
   10794:	bx	lr

00010798 <rb_fd_ssl>:
   10798:	push	{fp}		; (str fp, [sp, #-4]!)
   1079c:	add	fp, sp, #0
   107a0:	sub	sp, sp, #12
   107a4:	str	r0, [fp, #-8]
   107a8:	ldr	r3, [fp, #-8]
   107ac:	cmp	r3, #0
   107b0:	bne	107bc <rb_fd_ssl+0x24>
   107b4:	mov	r3, #0
   107b8:	b	107dc <rb_fd_ssl+0x44>
   107bc:	ldr	r3, [fp, #-8]
   107c0:	ldrb	r3, [r3, #17]
   107c4:	and	r3, r3, #32
   107c8:	cmp	r3, #0
   107cc:	beq	107d8 <rb_fd_ssl+0x40>
   107d0:	mov	r3, #1
   107d4:	b	107dc <rb_fd_ssl+0x44>
   107d8:	mov	r3, #0
   107dc:	mov	r0, r3
   107e0:	add	sp, fp, #0
   107e4:	pop	{fp}		; (ldr fp, [sp], #4)
   107e8:	bx	lr

000107ec <rb_get_fd>:
   107ec:	push	{fp}		; (str fp, [sp, #-4]!)
   107f0:	add	fp, sp, #0
   107f4:	sub	sp, sp, #12
   107f8:	str	r0, [fp, #-8]
   107fc:	ldr	r3, [fp, #-8]
   10800:	cmp	r3, #0
   10804:	bne	10810 <rb_get_fd+0x24>
   10808:	mvn	r3, #0
   1080c:	b	10818 <rb_get_fd+0x2c>
   10810:	ldr	r3, [fp, #-8]
   10814:	ldr	r3, [r3, #12]
   10818:	mov	r0, r3
   1081c:	add	sp, fp, #0
   10820:	pop	{fp}		; (ldr fp, [sp], #4)
   10824:	bx	lr

00010828 <rb_get_fde>:
   10828:	push	{fp, lr}
   1082c:	add	fp, sp, #4
   10830:	sub	sp, sp, #8
   10834:	str	r0, [fp, #-8]
   10838:	ldr	r0, [fp, #-8]
   1083c:	bl	e8e4 <rb_find_fd>
   10840:	mov	r3, r0
   10844:	mov	r0, r3
   10848:	sub	sp, fp, #4
   1084c:	pop	{fp, pc}

00010850 <rb_read>:
   10850:	push	{fp, lr}
   10854:	add	fp, sp, #4
   10858:	sub	sp, sp, #24
   1085c:	str	r0, [fp, #-16]
   10860:	str	r1, [fp, #-20]	; 0xffffffec
   10864:	str	r2, [fp, #-24]	; 0xffffffe8
   10868:	ldr	r3, [fp, #-16]
   1086c:	cmp	r3, #0
   10870:	bne	1087c <rb_read+0x2c>
   10874:	mov	r3, #0
   10878:	b	10900 <rb_read+0xb0>
   1087c:	ldr	r3, [fp, #-16]
   10880:	ldrb	r3, [r3, #17]
   10884:	and	r3, r3, #32
   10888:	cmp	r3, #0
   1088c:	beq	108ac <rb_read+0x5c>
   10890:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10894:	mov	r2, r3
   10898:	ldr	r1, [fp, #-20]	; 0xffffffec
   1089c:	ldr	r0, [fp, #-16]
   108a0:	bl	14228 <rb_ssl_read>
   108a4:	mov	r3, r0
   108a8:	b	10900 <rb_read+0xb0>
   108ac:	ldr	r3, [fp, #-16]
   108b0:	ldrb	r3, [r3, #17]
   108b4:	and	r3, r3, #4
   108b8:	cmp	r3, #0
   108bc:	beq	108e4 <rb_read+0x94>
   108c0:	ldr	r3, [fp, #-16]
   108c4:	ldr	r0, [r3, #12]
   108c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   108cc:	mov	r3, #0
   108d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   108d4:	bl	45f8 <recv@plt>
   108d8:	str	r0, [fp, #-8]
   108dc:	ldr	r3, [fp, #-8]
   108e0:	b	10900 <rb_read+0xb0>
   108e4:	ldr	r3, [fp, #-16]
   108e8:	ldr	r3, [r3, #12]
   108ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   108f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   108f4:	mov	r0, r3
   108f8:	bl	4784 <read@plt>
   108fc:	mov	r3, r0
   10900:	mov	r0, r3
   10904:	sub	sp, fp, #4
   10908:	pop	{fp, pc}

0001090c <rb_write>:
   1090c:	push	{fp, lr}
   10910:	add	fp, sp, #4
   10914:	sub	sp, sp, #24
   10918:	str	r0, [fp, #-16]
   1091c:	str	r1, [fp, #-20]	; 0xffffffec
   10920:	str	r2, [fp, #-24]	; 0xffffffe8
   10924:	ldr	r3, [fp, #-16]
   10928:	cmp	r3, #0
   1092c:	bne	10938 <rb_write+0x2c>
   10930:	mov	r3, #0
   10934:	b	109bc <rb_write+0xb0>
   10938:	ldr	r3, [fp, #-16]
   1093c:	ldrb	r3, [r3, #17]
   10940:	and	r3, r3, #32
   10944:	cmp	r3, #0
   10948:	beq	10968 <rb_write+0x5c>
   1094c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10950:	mov	r2, r3
   10954:	ldr	r1, [fp, #-20]	; 0xffffffec
   10958:	ldr	r0, [fp, #-16]
   1095c:	bl	1426c <rb_ssl_write>
   10960:	mov	r3, r0
   10964:	b	109bc <rb_write+0xb0>
   10968:	ldr	r3, [fp, #-16]
   1096c:	ldrb	r3, [r3, #17]
   10970:	and	r3, r3, #4
   10974:	cmp	r3, #0
   10978:	beq	109a0 <rb_write+0x94>
   1097c:	ldr	r3, [fp, #-16]
   10980:	ldr	r0, [r3, #12]
   10984:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10988:	mov	r3, #16384	; 0x4000
   1098c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10990:	bl	4b14 <send@plt>
   10994:	str	r0, [fp, #-8]
   10998:	ldr	r3, [fp, #-8]
   1099c:	b	109bc <rb_write+0xb0>
   109a0:	ldr	r3, [fp, #-16]
   109a4:	ldr	r3, [r3, #12]
   109a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   109ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   109b0:	mov	r0, r3
   109b4:	bl	479c <write@plt>
   109b8:	mov	r3, r0
   109bc:	mov	r0, r3
   109c0:	sub	sp, fp, #4
   109c4:	pop	{fp, pc}

000109c8 <rb_fake_writev>:
   109c8:	push	{fp, lr}
   109cc:	add	fp, sp, #4
   109d0:	sub	sp, sp, #24
   109d4:	str	r0, [fp, #-16]
   109d8:	str	r1, [fp, #-20]	; 0xffffffec
   109dc:	str	r2, [fp, #-24]	; 0xffffffe8
   109e0:	mov	r3, #0
   109e4:	str	r3, [fp, #-8]
   109e8:	b	10a50 <rb_fake_writev+0x88>
   109ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   109f0:	ldr	r1, [r3]
   109f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   109f8:	ldr	r3, [r3, #4]
   109fc:	mov	r2, r3
   10a00:	ldr	r0, [fp, #-16]
   10a04:	bl	46c4 <rb_write@plt>
   10a08:	str	r0, [fp, #-12]
   10a0c:	ldr	r3, [fp, #-12]
   10a10:	cmp	r3, #0
   10a14:	bgt	10a34 <rb_fake_writev+0x6c>
   10a18:	ldr	r3, [fp, #-8]
   10a1c:	cmp	r3, #0
   10a20:	ble	10a2c <rb_fake_writev+0x64>
   10a24:	ldr	r3, [fp, #-8]
   10a28:	b	10a68 <rb_fake_writev+0xa0>
   10a2c:	ldr	r3, [fp, #-12]
   10a30:	b	10a68 <rb_fake_writev+0xa0>
   10a34:	ldr	r2, [fp, #-8]
   10a38:	ldr	r3, [fp, #-12]
   10a3c:	add	r3, r2, r3
   10a40:	str	r3, [fp, #-8]
   10a44:	ldr	r3, [fp, #-20]	; 0xffffffec
   10a48:	add	r3, r3, #8
   10a4c:	str	r3, [fp, #-20]	; 0xffffffec
   10a50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a54:	sub	r2, r3, #1
   10a58:	str	r2, [fp, #-24]	; 0xffffffe8
   10a5c:	cmp	r3, #0
   10a60:	bne	109ec <rb_fake_writev+0x24>
   10a64:	ldr	r3, [fp, #-8]
   10a68:	mov	r0, r3
   10a6c:	sub	sp, fp, #4
   10a70:	pop	{fp, pc}

00010a74 <rb_writev>:
   10a74:	push	{fp, lr}
   10a78:	add	fp, sp, #4
   10a7c:	sub	sp, sp, #48	; 0x30
   10a80:	str	r0, [fp, #-40]	; 0xffffffd8
   10a84:	str	r1, [fp, #-44]	; 0xffffffd4
   10a88:	str	r2, [fp, #-48]	; 0xffffffd0
   10a8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10a90:	cmp	r3, #0
   10a94:	bne	10ab0 <rb_writev+0x3c>
   10a98:	bl	4d78 <__errno_location@plt>
   10a9c:	mov	r2, r0
   10aa0:	mov	r3, #9
   10aa4:	str	r3, [r2]
   10aa8:	mvn	r3, #0
   10aac:	b	10b54 <rb_writev+0xe0>
   10ab0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10ab4:	ldrb	r3, [r3, #17]
   10ab8:	and	r3, r3, #32
   10abc:	cmp	r3, #0
   10ac0:	beq	10ae0 <rb_writev+0x6c>
   10ac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10ac8:	mov	r2, r3
   10acc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10ad0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10ad4:	bl	109c8 <rb_fake_writev>
   10ad8:	mov	r3, r0
   10adc:	b	10b54 <rb_writev+0xe0>
   10ae0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10ae4:	ldrb	r3, [r3, #17]
   10ae8:	and	r3, r3, #4
   10aec:	cmp	r3, #0
   10af0:	beq	10b38 <rb_writev+0xc4>
   10af4:	sub	r3, fp, #32
   10af8:	mov	r2, #28
   10afc:	mov	r1, #0
   10b00:	mov	r0, r3
   10b04:	bl	4694 <memset@plt>
   10b08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10b0c:	str	r3, [fp, #-24]	; 0xffffffe8
   10b10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10b14:	str	r3, [fp, #-20]	; 0xffffffec
   10b18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10b1c:	ldr	r3, [r3, #12]
   10b20:	sub	r1, fp, #32
   10b24:	mov	r2, #16384	; 0x4000
   10b28:	mov	r0, r3
   10b2c:	bl	4778 <sendmsg@plt>
   10b30:	mov	r3, r0
   10b34:	b	10b54 <rb_writev+0xe0>
   10b38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10b3c:	ldr	r3, [r3, #12]
   10b40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10b44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10b48:	mov	r0, r3
   10b4c:	bl	46f4 <writev@plt>
   10b50:	mov	r3, r0
   10b54:	mov	r0, r3
   10b58:	sub	sp, fp, #4
   10b5c:	pop	{fp, pc}

00010b60 <inetntoa>:
   10b60:	push	{fp}		; (str fp, [sp, #-4]!)
   10b64:	add	fp, sp, #0
   10b68:	sub	sp, sp, #28
   10b6c:	str	r0, [fp, #-24]	; 0xffffffe8
   10b70:	ldr	r3, [pc, #452]	; 10d3c <inetntoa+0x1dc>
   10b74:	add	r3, pc, r3
   10b78:	str	r3, [fp, #-8]
   10b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10b80:	str	r3, [fp, #-16]
   10b84:	ldr	r3, [fp, #-16]
   10b88:	add	r2, r3, #1
   10b8c:	str	r2, [fp, #-16]
   10b90:	ldrb	r3, [r3]
   10b94:	mov	r2, r3
   10b98:	ldr	r3, [pc, #416]	; 10d40 <inetntoa+0x1e0>
   10b9c:	add	r3, pc, r3
   10ba0:	ldr	r3, [r3, r2, lsl #2]
   10ba4:	str	r3, [fp, #-12]
   10ba8:	b	10bcc <inetntoa+0x6c>
   10bac:	ldr	r3, [fp, #-8]
   10bb0:	add	r2, r3, #1
   10bb4:	str	r2, [fp, #-8]
   10bb8:	ldr	r2, [fp, #-12]
   10bbc:	add	r1, r2, #1
   10bc0:	str	r1, [fp, #-12]
   10bc4:	ldrb	r2, [r2]
   10bc8:	strb	r2, [r3]
   10bcc:	ldr	r3, [fp, #-12]
   10bd0:	ldrb	r3, [r3]
   10bd4:	cmp	r3, #0
   10bd8:	bne	10bac <inetntoa+0x4c>
   10bdc:	ldr	r3, [fp, #-8]
   10be0:	add	r2, r3, #1
   10be4:	str	r2, [fp, #-8]
   10be8:	mov	r2, #46	; 0x2e
   10bec:	strb	r2, [r3]
   10bf0:	ldr	r3, [fp, #-16]
   10bf4:	add	r2, r3, #1
   10bf8:	str	r2, [fp, #-16]
   10bfc:	ldrb	r3, [r3]
   10c00:	mov	r2, r3
   10c04:	ldr	r3, [pc, #312]	; 10d44 <inetntoa+0x1e4>
   10c08:	add	r3, pc, r3
   10c0c:	ldr	r3, [r3, r2, lsl #2]
   10c10:	str	r3, [fp, #-12]
   10c14:	b	10c38 <inetntoa+0xd8>
   10c18:	ldr	r3, [fp, #-8]
   10c1c:	add	r2, r3, #1
   10c20:	str	r2, [fp, #-8]
   10c24:	ldr	r2, [fp, #-12]
   10c28:	add	r1, r2, #1
   10c2c:	str	r1, [fp, #-12]
   10c30:	ldrb	r2, [r2]
   10c34:	strb	r2, [r3]
   10c38:	ldr	r3, [fp, #-12]
   10c3c:	ldrb	r3, [r3]
   10c40:	cmp	r3, #0
   10c44:	bne	10c18 <inetntoa+0xb8>
   10c48:	ldr	r3, [fp, #-8]
   10c4c:	add	r2, r3, #1
   10c50:	str	r2, [fp, #-8]
   10c54:	mov	r2, #46	; 0x2e
   10c58:	strb	r2, [r3]
   10c5c:	ldr	r3, [fp, #-16]
   10c60:	add	r2, r3, #1
   10c64:	str	r2, [fp, #-16]
   10c68:	ldrb	r3, [r3]
   10c6c:	mov	r2, r3
   10c70:	ldr	r3, [pc, #208]	; 10d48 <inetntoa+0x1e8>
   10c74:	add	r3, pc, r3
   10c78:	ldr	r3, [r3, r2, lsl #2]
   10c7c:	str	r3, [fp, #-12]
   10c80:	b	10ca4 <inetntoa+0x144>
   10c84:	ldr	r3, [fp, #-8]
   10c88:	add	r2, r3, #1
   10c8c:	str	r2, [fp, #-8]
   10c90:	ldr	r2, [fp, #-12]
   10c94:	add	r1, r2, #1
   10c98:	str	r1, [fp, #-12]
   10c9c:	ldrb	r2, [r2]
   10ca0:	strb	r2, [r3]
   10ca4:	ldr	r3, [fp, #-12]
   10ca8:	ldrb	r3, [r3]
   10cac:	cmp	r3, #0
   10cb0:	bne	10c84 <inetntoa+0x124>
   10cb4:	ldr	r3, [fp, #-8]
   10cb8:	add	r2, r3, #1
   10cbc:	str	r2, [fp, #-8]
   10cc0:	mov	r2, #46	; 0x2e
   10cc4:	strb	r2, [r3]
   10cc8:	ldr	r3, [fp, #-16]
   10ccc:	ldrb	r3, [r3]
   10cd0:	mov	r2, r3
   10cd4:	ldr	r3, [pc, #112]	; 10d4c <inetntoa+0x1ec>
   10cd8:	add	r3, pc, r3
   10cdc:	ldr	r3, [r3, r2, lsl #2]
   10ce0:	str	r3, [fp, #-12]
   10ce4:	b	10d08 <inetntoa+0x1a8>
   10ce8:	ldr	r3, [fp, #-8]
   10cec:	add	r2, r3, #1
   10cf0:	str	r2, [fp, #-8]
   10cf4:	ldr	r2, [fp, #-12]
   10cf8:	add	r1, r2, #1
   10cfc:	str	r1, [fp, #-12]
   10d00:	ldrb	r2, [r2]
   10d04:	strb	r2, [r3]
   10d08:	ldr	r3, [fp, #-12]
   10d0c:	ldrb	r3, [r3]
   10d10:	cmp	r3, #0
   10d14:	bne	10ce8 <inetntoa+0x188>
   10d18:	ldr	r3, [fp, #-8]
   10d1c:	mov	r2, #0
   10d20:	strb	r2, [r3]
   10d24:	ldr	r3, [pc, #36]	; 10d50 <inetntoa+0x1f0>
   10d28:	add	r3, pc, r3
   10d2c:	mov	r0, r3
   10d30:	add	sp, fp, #0
   10d34:	pop	{fp}		; (ldr fp, [sp], #4)
   10d38:	bx	lr
   10d3c:	.word	0x00036374
   10d40:	.word	0x000238f4
   10d44:	.word	0x00023888
   10d48:	.word	0x0002381c
   10d4c:	.word	0x000237b8
   10d50:	.word	0x000361c0

00010d54 <inet_ntop4>:
   10d54:	push	{fp, lr}
   10d58:	add	fp, sp, #4
   10d5c:	sub	sp, sp, #16
   10d60:	str	r0, [fp, #-8]
   10d64:	str	r1, [fp, #-12]
   10d68:	str	r2, [fp, #-16]
   10d6c:	ldr	r3, [fp, #-16]
   10d70:	cmp	r3, #15
   10d74:	bhi	10d80 <inet_ntop4+0x2c>
   10d78:	mov	r3, #0
   10d7c:	b	10d9c <inet_ntop4+0x48>
   10d80:	ldr	r0, [fp, #-8]
   10d84:	bl	10b60 <inetntoa>
   10d88:	mov	r3, r0
   10d8c:	mov	r1, r3
   10d90:	ldr	r0, [fp, #-12]
   10d94:	bl	48f8 <strcpy@plt>
   10d98:	mov	r3, r0
   10d9c:	mov	r0, r3
   10da0:	sub	sp, fp, #4
   10da4:	pop	{fp, pc}

00010da8 <inet_ntop6>:
   10da8:	push	{fp, lr}
   10dac:	add	fp, sp, #4
   10db0:	sub	sp, sp, #120	; 0x78
   10db4:	str	r0, [fp, #-112]	; 0xffffff90
   10db8:	str	r1, [fp, #-116]	; 0xffffff8c
   10dbc:	str	r2, [fp, #-120]	; 0xffffff88
   10dc0:	sub	r3, fp, #108	; 0x6c
   10dc4:	mov	r2, #32
   10dc8:	mov	r1, #0
   10dcc:	mov	r0, r3
   10dd0:	bl	4694 <memset@plt>
   10dd4:	mov	r3, #0
   10dd8:	str	r3, [fp, #-12]
   10ddc:	b	10e40 <inet_ntop6+0x98>
   10de0:	ldr	r3, [fp, #-12]
   10de4:	lsr	r2, r3, #31
   10de8:	add	r3, r2, r3
   10dec:	asr	r3, r3, #1
   10df0:	mov	r0, r3
   10df4:	ldr	r3, [fp, #-12]
   10df8:	ldr	r2, [fp, #-112]	; 0xffffff90
   10dfc:	add	r3, r2, r3
   10e00:	ldrb	r3, [r3]
   10e04:	lsl	r3, r3, #8
   10e08:	ldr	r2, [fp, #-12]
   10e0c:	add	r2, r2, #1
   10e10:	ldr	r1, [fp, #-112]	; 0xffffff90
   10e14:	add	r2, r1, r2
   10e18:	ldrb	r2, [r2]
   10e1c:	orr	r3, r3, r2
   10e20:	mov	r2, r3
   10e24:	lsl	r3, r0, #2
   10e28:	sub	r1, fp, #4
   10e2c:	add	r3, r1, r3
   10e30:	str	r2, [r3, #-104]	; 0xffffff98
   10e34:	ldr	r3, [fp, #-12]
   10e38:	add	r3, r3, #2
   10e3c:	str	r3, [fp, #-12]
   10e40:	ldr	r3, [fp, #-12]
   10e44:	cmp	r3, #15
   10e48:	ble	10de0 <inet_ntop6+0x38>
   10e4c:	mvn	r3, #0
   10e50:	str	r3, [fp, #-68]	; 0xffffffbc
   10e54:	mov	r3, #0
   10e58:	str	r3, [fp, #-64]	; 0xffffffc0
   10e5c:	mvn	r3, #0
   10e60:	str	r3, [fp, #-76]	; 0xffffffb4
   10e64:	mov	r3, #0
   10e68:	str	r3, [fp, #-72]	; 0xffffffb8
   10e6c:	mov	r3, #0
   10e70:	str	r3, [fp, #-12]
   10e74:	b	10f10 <inet_ntop6+0x168>
   10e78:	ldr	r3, [fp, #-12]
   10e7c:	lsl	r3, r3, #2
   10e80:	sub	r2, fp, #4
   10e84:	add	r3, r2, r3
   10e88:	ldr	r3, [r3, #-104]	; 0xffffff98
   10e8c:	cmp	r3, #0
   10e90:	bne	10ec4 <inet_ntop6+0x11c>
   10e94:	ldr	r3, [fp, #-76]	; 0xffffffb4
   10e98:	cmn	r3, #1
   10e9c:	bne	10eb4 <inet_ntop6+0x10c>
   10ea0:	ldr	r3, [fp, #-12]
   10ea4:	str	r3, [fp, #-76]	; 0xffffffb4
   10ea8:	mov	r3, #1
   10eac:	str	r3, [fp, #-72]	; 0xffffffb8
   10eb0:	b	10f04 <inet_ntop6+0x15c>
   10eb4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   10eb8:	add	r3, r3, #1
   10ebc:	str	r3, [fp, #-72]	; 0xffffffb8
   10ec0:	b	10f04 <inet_ntop6+0x15c>
   10ec4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   10ec8:	cmn	r3, #1
   10ecc:	beq	10f04 <inet_ntop6+0x15c>
   10ed0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10ed4:	cmn	r3, #1
   10ed8:	beq	10eec <inet_ntop6+0x144>
   10edc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   10ee0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10ee4:	cmp	r2, r3
   10ee8:	ble	10efc <inet_ntop6+0x154>
   10eec:	sub	r3, fp, #68	; 0x44
   10ef0:	sub	r2, fp, #76	; 0x4c
   10ef4:	ldm	r2, {r0, r1}
   10ef8:	stm	r3, {r0, r1}
   10efc:	mvn	r3, #0
   10f00:	str	r3, [fp, #-76]	; 0xffffffb4
   10f04:	ldr	r3, [fp, #-12]
   10f08:	add	r3, r3, #1
   10f0c:	str	r3, [fp, #-12]
   10f10:	ldr	r3, [fp, #-12]
   10f14:	cmp	r3, #7
   10f18:	ble	10e78 <inet_ntop6+0xd0>
   10f1c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   10f20:	cmn	r3, #1
   10f24:	beq	10f54 <inet_ntop6+0x1ac>
   10f28:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10f2c:	cmn	r3, #1
   10f30:	beq	10f44 <inet_ntop6+0x19c>
   10f34:	ldr	r2, [fp, #-72]	; 0xffffffb8
   10f38:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10f3c:	cmp	r2, r3
   10f40:	ble	10f54 <inet_ntop6+0x1ac>
   10f44:	sub	r3, fp, #68	; 0x44
   10f48:	sub	r2, fp, #76	; 0x4c
   10f4c:	ldm	r2, {r0, r1}
   10f50:	stm	r3, {r0, r1}
   10f54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10f58:	cmn	r3, #1
   10f5c:	beq	10f74 <inet_ntop6+0x1cc>
   10f60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10f64:	cmp	r3, #1
   10f68:	bgt	10f74 <inet_ntop6+0x1cc>
   10f6c:	mvn	r3, #0
   10f70:	str	r3, [fp, #-68]	; 0xffffffbc
   10f74:	sub	r3, fp, #60	; 0x3c
   10f78:	str	r3, [fp, #-8]
   10f7c:	mov	r3, #0
   10f80:	str	r3, [fp, #-12]
   10f84:	b	1110c <inet_ntop6+0x364>
   10f88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10f8c:	cmn	r3, #1
   10f90:	beq	11004 <inet_ntop6+0x25c>
   10f94:	ldr	r2, [fp, #-68]	; 0xffffffbc
   10f98:	ldr	r3, [fp, #-12]
   10f9c:	cmp	r2, r3
   10fa0:	bgt	11004 <inet_ntop6+0x25c>
   10fa4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   10fa8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10fac:	add	r2, r2, r3
   10fb0:	ldr	r3, [fp, #-12]
   10fb4:	cmp	r2, r3
   10fb8:	ble	11004 <inet_ntop6+0x25c>
   10fbc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   10fc0:	ldr	r3, [fp, #-12]
   10fc4:	cmp	r2, r3
   10fc8:	bne	110fc <inet_ntop6+0x354>
   10fcc:	ldr	r3, [fp, #-12]
   10fd0:	cmp	r3, #0
   10fd4:	bne	10fec <inet_ntop6+0x244>
   10fd8:	ldr	r3, [fp, #-8]
   10fdc:	add	r2, r3, #1
   10fe0:	str	r2, [fp, #-8]
   10fe4:	mov	r2, #48	; 0x30
   10fe8:	strb	r2, [r3]
   10fec:	ldr	r3, [fp, #-8]
   10ff0:	add	r2, r3, #1
   10ff4:	str	r2, [fp, #-8]
   10ff8:	mov	r2, #58	; 0x3a
   10ffc:	strb	r2, [r3]
   11000:	b	110fc <inet_ntop6+0x354>
   11004:	ldr	r3, [fp, #-12]
   11008:	cmp	r3, #0
   1100c:	beq	11024 <inet_ntop6+0x27c>
   11010:	ldr	r3, [fp, #-8]
   11014:	add	r2, r3, #1
   11018:	str	r2, [fp, #-8]
   1101c:	mov	r2, #58	; 0x3a
   11020:	strb	r2, [r3]
   11024:	ldr	r3, [fp, #-12]
   11028:	cmp	r3, #6
   1102c:	bne	110b8 <inet_ntop6+0x310>
   11030:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11034:	cmp	r3, #0
   11038:	bne	110b8 <inet_ntop6+0x310>
   1103c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11040:	cmp	r3, #6
   11044:	beq	11064 <inet_ntop6+0x2bc>
   11048:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1104c:	cmp	r3, #5
   11050:	bne	110b8 <inet_ntop6+0x310>
   11054:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11058:	ldr	r2, [pc, #340]	; 111b4 <inet_ntop6+0x40c>
   1105c:	cmp	r3, r2
   11060:	bne	110b8 <inet_ntop6+0x310>
   11064:	ldr	r3, [fp, #-112]	; 0xffffff90
   11068:	add	r0, r3, #12
   1106c:	ldr	r2, [fp, #-8]
   11070:	sub	r3, fp, #60	; 0x3c
   11074:	sub	r3, r2, r3
   11078:	rsb	r3, r3, #46	; 0x2e
   1107c:	mov	r2, r3
   11080:	ldr	r1, [fp, #-8]
   11084:	bl	10d54 <inet_ntop4>
   11088:	mov	r3, r0
   1108c:	cmp	r3, #0
   11090:	bne	1109c <inet_ntop6+0x2f4>
   11094:	mov	r3, #0
   11098:	b	111a8 <inet_ntop6+0x400>
   1109c:	ldr	r0, [fp, #-8]
   110a0:	bl	485c <strlen@plt>
   110a4:	mov	r2, r0
   110a8:	ldr	r3, [fp, #-8]
   110ac:	add	r3, r3, r2
   110b0:	str	r3, [fp, #-8]
   110b4:	b	11118 <inet_ntop6+0x370>
   110b8:	ldr	r3, [fp, #-12]
   110bc:	lsl	r3, r3, #2
   110c0:	sub	r2, fp, #4
   110c4:	add	r3, r2, r3
   110c8:	ldr	r3, [r3, #-104]	; 0xffffff98
   110cc:	mov	r2, r3
   110d0:	ldr	r3, [pc, #224]	; 111b8 <inet_ntop6+0x410>
   110d4:	add	r3, pc, r3
   110d8:	mov	r1, r3
   110dc:	ldr	r0, [fp, #-8]
   110e0:	bl	4d90 <sprintf@plt>
   110e4:	mov	r3, r0
   110e8:	mov	r2, r3
   110ec:	ldr	r3, [fp, #-8]
   110f0:	add	r3, r3, r2
   110f4:	str	r3, [fp, #-8]
   110f8:	b	11100 <inet_ntop6+0x358>
   110fc:	nop			; (mov r0, r0)
   11100:	ldr	r3, [fp, #-12]
   11104:	add	r3, r3, #1
   11108:	str	r3, [fp, #-12]
   1110c:	ldr	r3, [fp, #-12]
   11110:	cmp	r3, #7
   11114:	ble	10f88 <inet_ntop6+0x1e0>
   11118:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1111c:	cmn	r3, #1
   11120:	beq	1114c <inet_ntop6+0x3a4>
   11124:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11128:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1112c:	add	r3, r2, r3
   11130:	cmp	r3, #8
   11134:	bne	1114c <inet_ntop6+0x3a4>
   11138:	ldr	r3, [fp, #-8]
   1113c:	add	r2, r3, #1
   11140:	str	r2, [fp, #-8]
   11144:	mov	r2, #58	; 0x3a
   11148:	strb	r2, [r3]
   1114c:	ldr	r3, [fp, #-8]
   11150:	add	r2, r3, #1
   11154:	str	r2, [fp, #-8]
   11158:	mov	r2, #0
   1115c:	strb	r2, [r3]
   11160:	ldr	r2, [fp, #-8]
   11164:	sub	r3, fp, #60	; 0x3c
   11168:	sub	r3, r2, r3
   1116c:	mov	r2, r3
   11170:	ldr	r3, [fp, #-120]	; 0xffffff88
   11174:	cmp	r2, r3
   11178:	bls	11184 <inet_ntop6+0x3dc>
   1117c:	mov	r3, #0
   11180:	b	111a8 <inet_ntop6+0x400>
   11184:	ldr	r2, [fp, #-8]
   11188:	sub	r3, fp, #60	; 0x3c
   1118c:	sub	r3, r2, r3
   11190:	mov	r2, r3
   11194:	sub	r3, fp, #60	; 0x3c
   11198:	mov	r1, r3
   1119c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   111a0:	bl	4880 <memcpy@plt>
   111a4:	mov	r3, r0
   111a8:	mov	r0, r3
   111ac:	sub	sp, fp, #4
   111b0:	pop	{fp, pc}
   111b4:	.word	0x0000ffff
   111b8:	.word	0x000118dc

000111bc <rb_inet_pton_sock>:
   111bc:	push	{fp, lr}
   111c0:	add	fp, sp, #4
   111c4:	sub	sp, sp, #8
   111c8:	str	r0, [fp, #-8]
   111cc:	str	r1, [fp, #-12]
   111d0:	mov	r2, #128	; 0x80
   111d4:	mov	r1, #0
   111d8:	ldr	r0, [fp, #-12]
   111dc:	bl	4694 <memset@plt>
   111e0:	ldr	r3, [fp, #-12]
   111e4:	add	r3, r3, #4
   111e8:	mov	r2, r3
   111ec:	ldr	r1, [fp, #-8]
   111f0:	mov	r0, #2
   111f4:	bl	46a0 <rb_inet_pton@plt>
   111f8:	mov	r3, r0
   111fc:	cmp	r3, #0
   11200:	beq	11254 <rb_inet_pton_sock+0x98>
   11204:	ldr	r3, [fp, #-12]
   11208:	mov	r2, #2
   1120c:	strh	r2, [r3]
   11210:	ldr	r3, [fp, #-12]
   11214:	ldrh	r3, [r3]
   11218:	cmp	r3, #2
   1121c:	bne	11230 <rb_inet_pton_sock+0x74>
   11220:	ldr	r3, [fp, #-12]
   11224:	mov	r2, #0
   11228:	strh	r2, [r3, #2]
   1122c:	b	1123c <rb_inet_pton_sock+0x80>
   11230:	ldr	r3, [fp, #-12]
   11234:	mov	r2, #0
   11238:	strh	r2, [r3, #2]
   1123c:	ldr	r3, [fp, #-12]
   11240:	ldrh	r2, [r3]
   11244:	ldr	r3, [fp, #-12]
   11248:	strh	r2, [r3]
   1124c:	mov	r3, #1
   11250:	b	112cc <rb_inet_pton_sock+0x110>
   11254:	ldr	r3, [fp, #-12]
   11258:	add	r3, r3, #8
   1125c:	mov	r2, r3
   11260:	ldr	r1, [fp, #-8]
   11264:	mov	r0, #10
   11268:	bl	46a0 <rb_inet_pton@plt>
   1126c:	mov	r3, r0
   11270:	cmp	r3, #0
   11274:	beq	112c8 <rb_inet_pton_sock+0x10c>
   11278:	ldr	r3, [fp, #-12]
   1127c:	mov	r2, #10
   11280:	strh	r2, [r3]
   11284:	ldr	r3, [fp, #-12]
   11288:	ldrh	r3, [r3]
   1128c:	cmp	r3, #2
   11290:	bne	112a4 <rb_inet_pton_sock+0xe8>
   11294:	ldr	r3, [fp, #-12]
   11298:	mov	r2, #0
   1129c:	strh	r2, [r3, #2]
   112a0:	b	112b0 <rb_inet_pton_sock+0xf4>
   112a4:	ldr	r3, [fp, #-12]
   112a8:	mov	r2, #0
   112ac:	strh	r2, [r3, #2]
   112b0:	ldr	r3, [fp, #-12]
   112b4:	ldrh	r2, [r3]
   112b8:	ldr	r3, [fp, #-12]
   112bc:	strh	r2, [r3]
   112c0:	mov	r3, #1
   112c4:	b	112cc <rb_inet_pton_sock+0x110>
   112c8:	mov	r3, #0
   112cc:	mov	r0, r3
   112d0:	sub	sp, fp, #4
   112d4:	pop	{fp, pc}

000112d8 <rb_inet_ntop_sock>:
   112d8:	push	{fp, lr}
   112dc:	add	fp, sp, #4
   112e0:	sub	sp, sp, #16
   112e4:	str	r0, [fp, #-8]
   112e8:	str	r1, [fp, #-12]
   112ec:	str	r2, [fp, #-16]
   112f0:	ldr	r3, [fp, #-8]
   112f4:	ldrh	r3, [r3]
   112f8:	cmp	r3, #2
   112fc:	beq	1130c <rb_inet_ntop_sock+0x34>
   11300:	cmp	r3, #10
   11304:	beq	1132c <rb_inet_ntop_sock+0x54>
   11308:	b	1134c <rb_inet_ntop_sock+0x74>
   1130c:	ldr	r3, [fp, #-8]
   11310:	add	r1, r3, #4
   11314:	ldr	r3, [fp, #-16]
   11318:	ldr	r2, [fp, #-12]
   1131c:	mov	r0, #2
   11320:	bl	49c4 <rb_inet_ntop@plt>
   11324:	mov	r3, r0
   11328:	b	11350 <rb_inet_ntop_sock+0x78>
   1132c:	ldr	r3, [fp, #-8]
   11330:	add	r1, r3, #8
   11334:	ldr	r3, [fp, #-16]
   11338:	ldr	r2, [fp, #-12]
   1133c:	mov	r0, #10
   11340:	bl	49c4 <rb_inet_ntop@plt>
   11344:	mov	r3, r0
   11348:	b	11350 <rb_inet_ntop_sock+0x78>
   1134c:	mov	r3, #0
   11350:	mov	r0, r3
   11354:	sub	sp, fp, #4
   11358:	pop	{fp, pc}

0001135c <rb_inet_ntop>:
   1135c:	push	{r4, fp, lr}
   11360:	add	fp, sp, #8
   11364:	sub	sp, sp, #28
   11368:	str	r0, [fp, #-24]	; 0xffffffe8
   1136c:	str	r1, [fp, #-28]	; 0xffffffe4
   11370:	str	r2, [fp, #-32]	; 0xffffffe0
   11374:	str	r3, [fp, #-36]	; 0xffffffdc
   11378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1137c:	cmp	r3, #2
   11380:	beq	11390 <rb_inet_ntop+0x34>
   11384:	cmp	r3, #10
   11388:	beq	113a8 <rb_inet_ntop+0x4c>
   1138c:	b	114a0 <rb_inet_ntop+0x144>
   11390:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11394:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11398:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1139c:	bl	10d54 <inet_ntop4>
   113a0:	mov	r3, r0
   113a4:	b	114a4 <rb_inet_ntop+0x148>
   113a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   113ac:	str	r3, [fp, #-16]
   113b0:	ldr	r3, [fp, #-16]
   113b4:	ldr	r3, [r3]
   113b8:	cmp	r3, #0
   113bc:	bne	113f4 <rb_inet_ntop+0x98>
   113c0:	ldr	r3, [fp, #-16]
   113c4:	ldr	r3, [r3, #4]
   113c8:	cmp	r3, #0
   113cc:	bne	113f4 <rb_inet_ntop+0x98>
   113d0:	ldr	r3, [fp, #-16]
   113d4:	ldr	r4, [r3, #8]
   113d8:	ldr	r0, [pc, #208]	; 114b0 <rb_inet_ntop+0x154>
   113dc:	bl	4b98 <htonl@plt>
   113e0:	mov	r3, r0
   113e4:	cmp	r4, r3
   113e8:	bne	113f4 <rb_inet_ntop+0x98>
   113ec:	mov	r3, #1
   113f0:	b	113f8 <rb_inet_ntop+0x9c>
   113f4:	mov	r3, #0
   113f8:	cmp	r3, #0
   113fc:	bne	11468 <rb_inet_ntop+0x10c>
   11400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11404:	str	r3, [fp, #-20]	; 0xffffffec
   11408:	ldr	r3, [fp, #-20]	; 0xffffffec
   1140c:	ldr	r3, [r3]
   11410:	cmp	r3, #0
   11414:	bne	1145c <rb_inet_ntop+0x100>
   11418:	ldr	r3, [fp, #-20]	; 0xffffffec
   1141c:	ldr	r3, [r3, #4]
   11420:	cmp	r3, #0
   11424:	bne	1145c <rb_inet_ntop+0x100>
   11428:	ldr	r3, [fp, #-20]	; 0xffffffec
   1142c:	ldr	r3, [r3, #8]
   11430:	cmp	r3, #0
   11434:	bne	1145c <rb_inet_ntop+0x100>
   11438:	ldr	r3, [fp, #-20]	; 0xffffffec
   1143c:	ldr	r3, [r3, #12]
   11440:	mov	r0, r3
   11444:	bl	4718 <ntohl@plt>
   11448:	mov	r3, r0
   1144c:	cmp	r3, #1
   11450:	bls	1145c <rb_inet_ntop+0x100>
   11454:	mov	r3, #1
   11458:	b	11460 <rb_inet_ntop+0x104>
   1145c:	mov	r3, #0
   11460:	cmp	r3, #0
   11464:	beq	11488 <rb_inet_ntop+0x12c>
   11468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1146c:	add	r3, r3, #12
   11470:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11474:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11478:	mov	r0, r3
   1147c:	bl	10d54 <inet_ntop4>
   11480:	mov	r3, r0
   11484:	b	114a4 <rb_inet_ntop+0x148>
   11488:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1148c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11490:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11494:	bl	10da8 <inet_ntop6>
   11498:	mov	r3, r0
   1149c:	b	114a4 <rb_inet_ntop+0x148>
   114a0:	mov	r3, #0
   114a4:	mov	r0, r3
   114a8:	sub	sp, fp, #8
   114ac:	pop	{r4, fp, pc}
   114b0:	.word	0x0000ffff

000114b4 <inet_pton4>:
   114b4:	push	{fp}		; (str fp, [sp, #-4]!)
   114b8:	add	fp, sp, #0
   114bc:	sub	sp, sp, #36	; 0x24
   114c0:	str	r0, [fp, #-32]	; 0xffffffe0
   114c4:	str	r1, [fp, #-36]	; 0xffffffdc
   114c8:	mov	r3, #0
   114cc:	str	r3, [fp, #-8]
   114d0:	mov	r3, #0
   114d4:	str	r3, [fp, #-12]
   114d8:	sub	r3, fp, #28
   114dc:	str	r3, [fp, #-16]
   114e0:	ldr	r3, [fp, #-16]
   114e4:	mov	r2, #0
   114e8:	strb	r2, [r3]
   114ec:	b	115ec <inet_pton4+0x138>
   114f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   114f4:	cmp	r3, #47	; 0x2f
   114f8:	ble	11594 <inet_pton4+0xe0>
   114fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   11500:	cmp	r3, #57	; 0x39
   11504:	bgt	11594 <inet_pton4+0xe0>
   11508:	ldr	r3, [fp, #-16]
   1150c:	ldrb	r3, [r3]
   11510:	mov	r2, r3
   11514:	mov	r3, r2
   11518:	lsl	r3, r3, #2
   1151c:	add	r3, r3, r2
   11520:	lsl	r3, r3, #1
   11524:	mov	r2, r3
   11528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1152c:	sub	r3, r3, #48	; 0x30
   11530:	add	r3, r2, r3
   11534:	str	r3, [fp, #-24]	; 0xffffffe8
   11538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1153c:	cmp	r3, #255	; 0xff
   11540:	bls	1154c <inet_pton4+0x98>
   11544:	mov	r3, #0
   11548:	b	11630 <inet_pton4+0x17c>
   1154c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11550:	uxtb	r2, r3
   11554:	ldr	r3, [fp, #-16]
   11558:	strb	r2, [r3]
   1155c:	ldr	r3, [fp, #-8]
   11560:	cmp	r3, #0
   11564:	bne	115ec <inet_pton4+0x138>
   11568:	ldr	r3, [fp, #-12]
   1156c:	add	r3, r3, #1
   11570:	str	r3, [fp, #-12]
   11574:	ldr	r3, [fp, #-12]
   11578:	cmp	r3, #4
   1157c:	ble	11588 <inet_pton4+0xd4>
   11580:	mov	r3, #0
   11584:	b	11630 <inet_pton4+0x17c>
   11588:	mov	r3, #1
   1158c:	str	r3, [fp, #-8]
   11590:	b	115ec <inet_pton4+0x138>
   11594:	ldr	r3, [fp, #-20]	; 0xffffffec
   11598:	cmp	r3, #46	; 0x2e
   1159c:	bne	115e4 <inet_pton4+0x130>
   115a0:	ldr	r3, [fp, #-8]
   115a4:	cmp	r3, #0
   115a8:	beq	115e4 <inet_pton4+0x130>
   115ac:	ldr	r3, [fp, #-12]
   115b0:	cmp	r3, #4
   115b4:	bne	115c0 <inet_pton4+0x10c>
   115b8:	mov	r3, #0
   115bc:	b	11630 <inet_pton4+0x17c>
   115c0:	ldr	r3, [fp, #-16]
   115c4:	add	r3, r3, #1
   115c8:	str	r3, [fp, #-16]
   115cc:	ldr	r3, [fp, #-16]
   115d0:	mov	r2, #0
   115d4:	strb	r2, [r3]
   115d8:	mov	r3, #0
   115dc:	str	r3, [fp, #-8]
   115e0:	b	115ec <inet_pton4+0x138>
   115e4:	mov	r3, #0
   115e8:	b	11630 <inet_pton4+0x17c>
   115ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   115f0:	add	r2, r3, #1
   115f4:	str	r2, [fp, #-32]	; 0xffffffe0
   115f8:	ldrb	r3, [r3]
   115fc:	str	r3, [fp, #-20]	; 0xffffffec
   11600:	ldr	r3, [fp, #-20]	; 0xffffffec
   11604:	cmp	r3, #0
   11608:	bne	114f0 <inet_pton4+0x3c>
   1160c:	ldr	r3, [fp, #-12]
   11610:	cmp	r3, #3
   11614:	bgt	11620 <inet_pton4+0x16c>
   11618:	mov	r3, #0
   1161c:	b	11630 <inet_pton4+0x17c>
   11620:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11624:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11628:	str	r2, [r3]
   1162c:	mov	r3, #1
   11630:	mov	r0, r3
   11634:	add	sp, fp, #0
   11638:	pop	{fp}		; (ldr fp, [sp], #4)
   1163c:	bx	lr

00011640 <inet_pton6>:
   11640:	push	{fp, lr}
   11644:	add	fp, sp, #4
   11648:	sub	sp, sp, #64	; 0x40
   1164c:	str	r0, [fp, #-64]	; 0xffffffc0
   11650:	str	r1, [fp, #-68]	; 0xffffffbc
   11654:	sub	r3, fp, #60	; 0x3c
   11658:	mov	r2, #16
   1165c:	mov	r1, #0
   11660:	mov	r0, r3
   11664:	bl	4694 <memset@plt>
   11668:	str	r0, [fp, #-8]
   1166c:	ldr	r3, [fp, #-8]
   11670:	add	r3, r3, #16
   11674:	str	r3, [fp, #-32]	; 0xffffffe0
   11678:	mov	r3, #0
   1167c:	str	r3, [fp, #-12]
   11680:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11684:	ldrb	r3, [r3]
   11688:	cmp	r3, #58	; 0x3a
   1168c:	bne	116b4 <inet_pton6+0x74>
   11690:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11694:	add	r3, r3, #1
   11698:	str	r3, [fp, #-64]	; 0xffffffc0
   1169c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   116a0:	ldrb	r3, [r3]
   116a4:	cmp	r3, #58	; 0x3a
   116a8:	beq	116b4 <inet_pton6+0x74>
   116ac:	mov	r3, #0
   116b0:	b	119e0 <inet_pton6+0x3a0>
   116b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   116b8:	str	r3, [fp, #-16]
   116bc:	mov	r3, #0
   116c0:	str	r3, [fp, #-20]	; 0xffffffec
   116c4:	mov	r3, #0
   116c8:	str	r3, [fp, #-24]	; 0xffffffe8
   116cc:	b	11868 <inet_pton6+0x228>
   116d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   116d4:	ldr	r3, [pc, #784]	; 119ec <inet_pton6+0x3ac>
   116d8:	add	r3, pc, r3
   116dc:	mov	r0, r3
   116e0:	bl	461c <strchr@plt>
   116e4:	str	r0, [fp, #-40]	; 0xffffffd8
   116e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   116ec:	cmp	r3, #0
   116f0:	beq	11740 <inet_pton6+0x100>
   116f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116f8:	lsl	r3, r3, #4
   116fc:	str	r3, [fp, #-24]	; 0xffffffe8
   11700:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11704:	ldr	r2, [pc, #740]	; 119f0 <inet_pton6+0x3b0>
   11708:	add	r2, pc, r2
   1170c:	sub	r3, r3, r2
   11710:	mov	r2, r3
   11714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11718:	orr	r3, r3, r2
   1171c:	str	r3, [fp, #-24]	; 0xffffffe8
   11720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11724:	cmp	r3, #65536	; 0x10000
   11728:	bcc	11734 <inet_pton6+0xf4>
   1172c:	mov	r3, #0
   11730:	b	119e0 <inet_pton6+0x3a0>
   11734:	mov	r3, #1
   11738:	str	r3, [fp, #-20]	; 0xffffffec
   1173c:	b	11868 <inet_pton6+0x228>
   11740:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11744:	cmp	r3, #58	; 0x3a
   11748:	bne	117fc <inet_pton6+0x1bc>
   1174c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11750:	str	r3, [fp, #-16]
   11754:	ldr	r3, [fp, #-20]	; 0xffffffec
   11758:	cmp	r3, #0
   1175c:	bne	11780 <inet_pton6+0x140>
   11760:	ldr	r3, [fp, #-12]
   11764:	cmp	r3, #0
   11768:	beq	11774 <inet_pton6+0x134>
   1176c:	mov	r3, #0
   11770:	b	119e0 <inet_pton6+0x3a0>
   11774:	ldr	r3, [fp, #-8]
   11778:	str	r3, [fp, #-12]
   1177c:	b	11868 <inet_pton6+0x228>
   11780:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11784:	ldrb	r3, [r3]
   11788:	cmp	r3, #0
   1178c:	bne	11798 <inet_pton6+0x158>
   11790:	mov	r3, #0
   11794:	b	119e0 <inet_pton6+0x3a0>
   11798:	ldr	r3, [fp, #-8]
   1179c:	add	r2, r3, #2
   117a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   117a4:	cmp	r2, r3
   117a8:	bls	117b4 <inet_pton6+0x174>
   117ac:	mov	r3, #0
   117b0:	b	119e0 <inet_pton6+0x3a0>
   117b4:	ldr	r3, [fp, #-8]
   117b8:	add	r2, r3, #1
   117bc:	str	r2, [fp, #-8]
   117c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   117c4:	lsr	r2, r2, #8
   117c8:	uxtb	r2, r2
   117cc:	strb	r2, [r3]
   117d0:	ldr	r3, [fp, #-8]
   117d4:	add	r2, r3, #1
   117d8:	str	r2, [fp, #-8]
   117dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   117e0:	uxtb	r2, r2
   117e4:	strb	r2, [r3]
   117e8:	mov	r3, #0
   117ec:	str	r3, [fp, #-20]	; 0xffffffec
   117f0:	mov	r3, #0
   117f4:	str	r3, [fp, #-24]	; 0xffffffe8
   117f8:	b	11868 <inet_pton6+0x228>
   117fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11800:	ldrb	r3, [r3]
   11804:	cmp	r3, #0
   11808:	beq	11868 <inet_pton6+0x228>
   1180c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11810:	cmp	r3, #46	; 0x2e
   11814:	bne	11868 <inet_pton6+0x228>
   11818:	ldr	r3, [fp, #-8]
   1181c:	add	r2, r3, #4
   11820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11824:	cmp	r2, r3
   11828:	bhi	1185c <inet_pton6+0x21c>
   1182c:	ldr	r1, [fp, #-8]
   11830:	ldr	r0, [fp, #-16]
   11834:	bl	114b4 <inet_pton4>
   11838:	mov	r3, r0
   1183c:	cmp	r3, #0
   11840:	ble	1185c <inet_pton6+0x21c>
   11844:	ldr	r3, [fp, #-8]
   11848:	add	r3, r3, #4
   1184c:	str	r3, [fp, #-8]
   11850:	mov	r3, #0
   11854:	str	r3, [fp, #-20]	; 0xffffffec
   11858:	b	11890 <inet_pton6+0x250>
   1185c:	nop			; (mov r0, r0)
   11860:	mov	r3, #0
   11864:	b	119e0 <inet_pton6+0x3a0>
   11868:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1186c:	add	r2, r3, #1
   11870:	str	r2, [fp, #-64]	; 0xffffffc0
   11874:	ldrb	r3, [r3]
   11878:	mov	r0, r3
   1187c:	bl	4d54 <tolower@plt>
   11880:	str	r0, [fp, #-36]	; 0xffffffdc
   11884:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11888:	cmp	r3, #0
   1188c:	bne	116d0 <inet_pton6+0x90>
   11890:	ldr	r3, [fp, #-20]	; 0xffffffec
   11894:	cmp	r3, #0
   11898:	beq	118ec <inet_pton6+0x2ac>
   1189c:	ldr	r3, [fp, #-8]
   118a0:	add	r2, r3, #2
   118a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   118a8:	cmp	r2, r3
   118ac:	bls	118b8 <inet_pton6+0x278>
   118b0:	mov	r3, #0
   118b4:	b	119e0 <inet_pton6+0x3a0>
   118b8:	ldr	r3, [fp, #-8]
   118bc:	add	r2, r3, #1
   118c0:	str	r2, [fp, #-8]
   118c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   118c8:	lsr	r2, r2, #8
   118cc:	uxtb	r2, r2
   118d0:	strb	r2, [r3]
   118d4:	ldr	r3, [fp, #-8]
   118d8:	add	r2, r3, #1
   118dc:	str	r2, [fp, #-8]
   118e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   118e4:	uxtb	r2, r2
   118e8:	strb	r2, [r3]
   118ec:	ldr	r3, [fp, #-12]
   118f0:	cmp	r3, #0
   118f4:	beq	119a4 <inet_pton6+0x364>
   118f8:	ldr	r2, [fp, #-8]
   118fc:	ldr	r3, [fp, #-12]
   11900:	sub	r3, r2, r3
   11904:	str	r3, [fp, #-44]	; 0xffffffd4
   11908:	ldr	r2, [fp, #-8]
   1190c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11910:	cmp	r2, r3
   11914:	bne	11920 <inet_pton6+0x2e0>
   11918:	mov	r3, #0
   1191c:	b	119e0 <inet_pton6+0x3a0>
   11920:	mov	r3, #1
   11924:	str	r3, [fp, #-28]	; 0xffffffe4
   11928:	b	1198c <inet_pton6+0x34c>
   1192c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11930:	rsb	r3, r3, #0
   11934:	mov	r2, r3
   11938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1193c:	add	r3, r3, r2
   11940:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11944:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11948:	sub	r2, r1, r2
   1194c:	mov	r1, r2
   11950:	ldr	r2, [fp, #-12]
   11954:	add	r2, r2, r1
   11958:	ldrb	r2, [r2]
   1195c:	strb	r2, [r3]
   11960:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11964:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11968:	sub	r3, r2, r3
   1196c:	mov	r2, r3
   11970:	ldr	r3, [fp, #-12]
   11974:	add	r3, r3, r2
   11978:	mov	r2, #0
   1197c:	strb	r2, [r3]
   11980:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11984:	add	r3, r3, #1
   11988:	str	r3, [fp, #-28]	; 0xffffffe4
   1198c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11990:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11994:	cmp	r2, r3
   11998:	ble	1192c <inet_pton6+0x2ec>
   1199c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   119a0:	str	r3, [fp, #-8]
   119a4:	ldr	r2, [fp, #-8]
   119a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   119ac:	cmp	r2, r3
   119b0:	beq	119bc <inet_pton6+0x37c>
   119b4:	mov	r3, #0
   119b8:	b	119e0 <inet_pton6+0x3a0>
   119bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   119c0:	mov	lr, r3
   119c4:	sub	ip, fp, #60	; 0x3c
   119c8:	ldm	ip!, {r0, r1, r2, r3}
   119cc:	str	r0, [lr]
   119d0:	str	r1, [lr, #4]
   119d4:	str	r2, [lr, #8]
   119d8:	str	r3, [lr, #12]
   119dc:	mov	r3, #1
   119e0:	mov	r0, r3
   119e4:	sub	sp, fp, #4
   119e8:	pop	{fp, pc}
   119ec:	.word	0x000113c0
   119f0:	.word	0x00011390

000119f4 <rb_inet_pton>:
   119f4:	push	{fp, lr}
   119f8:	add	fp, sp, #4
   119fc:	sub	sp, sp, #72	; 0x48
   11a00:	str	r0, [fp, #-64]	; 0xffffffc0
   11a04:	str	r1, [fp, #-68]	; 0xffffffbc
   11a08:	str	r2, [fp, #-72]	; 0xffffffb8
   11a0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11a10:	cmp	r3, #2
   11a14:	beq	11a24 <rb_inet_pton+0x30>
   11a18:	cmp	r3, #10
   11a1c:	beq	11a38 <rb_inet_pton+0x44>
   11a20:	b	11a94 <rb_inet_pton+0xa0>
   11a24:	ldr	r1, [fp, #-72]	; 0xffffffb8
   11a28:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11a2c:	bl	114b4 <inet_pton4>
   11a30:	mov	r3, r0
   11a34:	b	11a98 <rb_inet_pton+0xa4>
   11a38:	ldr	r1, [fp, #-72]	; 0xffffffb8
   11a3c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11a40:	bl	114b4 <inet_pton4>
   11a44:	mov	r3, r0
   11a48:	cmp	r3, #0
   11a4c:	beq	11a80 <rb_inet_pton+0x8c>
   11a50:	sub	r3, fp, #60	; 0x3c
   11a54:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11a58:	ldr	r1, [pc, #68]	; 11aa4 <rb_inet_pton+0xb0>
   11a5c:	add	r1, pc, r1
   11a60:	mov	r0, r3
   11a64:	bl	4d90 <sprintf@plt>
   11a68:	sub	r3, fp, #60	; 0x3c
   11a6c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   11a70:	mov	r0, r3
   11a74:	bl	11640 <inet_pton6>
   11a78:	mov	r3, r0
   11a7c:	b	11a98 <rb_inet_pton+0xa4>
   11a80:	ldr	r1, [fp, #-72]	; 0xffffffb8
   11a84:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11a88:	bl	11640 <inet_pton6>
   11a8c:	mov	r3, r0
   11a90:	b	11a98 <rb_inet_pton+0xa4>
   11a94:	mvn	r3, #0
   11a98:	mov	r0, r3
   11a9c:	sub	sp, fp, #4
   11aa0:	pop	{fp, pc}
   11aa4:	.word	0x00010f58

00011aa8 <rb_get_iotype>:
   11aa8:	push	{fp}		; (str fp, [sp, #-4]!)
   11aac:	add	fp, sp, #0
   11ab0:	ldr	r3, [pc, #16]	; 11ac8 <rb_get_iotype+0x20>
   11ab4:	add	r3, pc, r3
   11ab8:	mov	r0, r3
   11abc:	add	sp, fp, #0
   11ac0:	pop	{fp}		; (ldr fp, [sp], #4)
   11ac4:	bx	lr
   11ac8:	.word	0x00035414

00011acc <rb_unsupported_event>:
   11acc:	push	{fp}		; (str fp, [sp, #-4]!)
   11ad0:	add	fp, sp, #0
   11ad4:	mov	r3, #0
   11ad8:	mov	r0, r3
   11adc:	add	sp, fp, #0
   11ae0:	pop	{fp}		; (ldr fp, [sp], #4)
   11ae4:	bx	lr

00011ae8 <try_kqueue>:
   11ae8:	push	{r4, r5, fp, lr}
   11aec:	add	fp, sp, #12
   11af0:	ldr	r4, [pc, #208]	; 11bc8 <try_kqueue+0xe0>
   11af4:	add	r4, pc, r4
   11af8:	bl	1c1ac <rb_init_netio_kqueue>
   11afc:	mov	r3, r0
   11b00:	cmp	r3, #0
   11b04:	bne	11bbc <try_kqueue+0xd4>
   11b08:	ldr	r3, [pc, #188]	; 11bcc <try_kqueue+0xe4>
   11b0c:	add	r3, pc, r3
   11b10:	ldr	r2, [pc, #184]	; 11bd0 <try_kqueue+0xe8>
   11b14:	ldr	r2, [r4, r2]
   11b18:	str	r2, [r3]
   11b1c:	ldr	r3, [pc, #176]	; 11bd4 <try_kqueue+0xec>
   11b20:	add	r3, pc, r3
   11b24:	ldr	r2, [pc, #172]	; 11bd8 <try_kqueue+0xf0>
   11b28:	ldr	r2, [r4, r2]
   11b2c:	str	r2, [r3]
   11b30:	ldr	r3, [pc, #164]	; 11bdc <try_kqueue+0xf4>
   11b34:	add	r3, pc, r3
   11b38:	ldr	r2, [pc, #160]	; 11be0 <try_kqueue+0xf8>
   11b3c:	ldr	r2, [r4, r2]
   11b40:	str	r2, [r3]
   11b44:	ldr	r3, [pc, #152]	; 11be4 <try_kqueue+0xfc>
   11b48:	add	r3, pc, r3
   11b4c:	ldr	r2, [pc, #148]	; 11be8 <try_kqueue+0x100>
   11b50:	ldr	r2, [r4, r2]
   11b54:	str	r2, [r3]
   11b58:	ldr	r3, [pc, #140]	; 11bec <try_kqueue+0x104>
   11b5c:	add	r3, pc, r3
   11b60:	ldr	r2, [pc, #136]	; 11bf0 <try_kqueue+0x108>
   11b64:	ldr	r2, [r4, r2]
   11b68:	str	r2, [r3]
   11b6c:	ldr	r3, [pc, #128]	; 11bf4 <try_kqueue+0x10c>
   11b70:	add	r3, pc, r3
   11b74:	ldr	r2, [pc, #124]	; 11bf8 <try_kqueue+0x110>
   11b78:	ldr	r2, [r4, r2]
   11b7c:	str	r2, [r3]
   11b80:	ldr	r3, [pc, #116]	; 11bfc <try_kqueue+0x114>
   11b84:	add	r3, pc, r3
   11b88:	ldr	r2, [pc, #112]	; 11c00 <try_kqueue+0x118>
   11b8c:	ldr	r2, [r4, r2]
   11b90:	str	r2, [r3]
   11b94:	mov	r2, #25
   11b98:	ldr	r3, [pc, #100]	; 11c04 <try_kqueue+0x11c>
   11b9c:	add	r3, pc, r3
   11ba0:	mov	r1, r3
   11ba4:	ldr	r3, [pc, #92]	; 11c08 <try_kqueue+0x120>
   11ba8:	add	r3, pc, r3
   11bac:	mov	r0, r3
   11bb0:	bl	470c <rb_strlcpy@plt>
   11bb4:	mov	r3, #0
   11bb8:	b	11bc0 <try_kqueue+0xd8>
   11bbc:	mvn	r3, #0
   11bc0:	mov	r0, r3
   11bc4:	pop	{r4, r5, fp, pc}
   11bc8:	.word	0x00022504
   11bcc:	.word	0x000353a0
   11bd0:	.word	0x000003c8
   11bd4:	.word	0x00035390
   11bd8:	.word	0x00000384
   11bdc:	.word	0x00035380
   11be0:	.word	0x000003a4
   11be4:	.word	0x00035370
   11be8:	.word	0x0000039c
   11bec:	.word	0x00035360
   11bf0:	.word	0x000003e0
   11bf4:	.word	0x00035354
   11bf8:	.word	0x000003a0
   11bfc:	.word	0x0003533c
   11c00:	.word	0x000003f0
   11c04:	.word	0x00010e24
   11c08:	.word	0x00035320

00011c0c <try_epoll>:
   11c0c:	push	{r4, r5, fp, lr}
   11c10:	add	fp, sp, #12
   11c14:	ldr	r4, [pc, #208]	; 11cec <try_epoll+0xe0>
   11c18:	add	r4, pc, r4
   11c1c:	bl	18cf4 <rb_init_netio_epoll>
   11c20:	mov	r3, r0
   11c24:	cmp	r3, #0
   11c28:	bne	11ce0 <try_epoll+0xd4>
   11c2c:	ldr	r3, [pc, #188]	; 11cf0 <try_epoll+0xe4>
   11c30:	add	r3, pc, r3
   11c34:	ldr	r2, [pc, #184]	; 11cf4 <try_epoll+0xe8>
   11c38:	ldr	r2, [r4, r2]
   11c3c:	str	r2, [r3]
   11c40:	ldr	r3, [pc, #176]	; 11cf8 <try_epoll+0xec>
   11c44:	add	r3, pc, r3
   11c48:	ldr	r2, [pc, #172]	; 11cfc <try_epoll+0xf0>
   11c4c:	ldr	r2, [r4, r2]
   11c50:	str	r2, [r3]
   11c54:	ldr	r3, [pc, #164]	; 11d00 <try_epoll+0xf4>
   11c58:	add	r3, pc, r3
   11c5c:	ldr	r2, [pc, #160]	; 11d04 <try_epoll+0xf8>
   11c60:	ldr	r2, [r4, r2]
   11c64:	str	r2, [r3]
   11c68:	ldr	r3, [pc, #152]	; 11d08 <try_epoll+0xfc>
   11c6c:	add	r3, pc, r3
   11c70:	ldr	r2, [pc, #148]	; 11d0c <try_epoll+0x100>
   11c74:	ldr	r2, [r4, r2]
   11c78:	str	r2, [r3]
   11c7c:	ldr	r3, [pc, #140]	; 11d10 <try_epoll+0x104>
   11c80:	add	r3, pc, r3
   11c84:	ldr	r2, [pc, #136]	; 11d14 <try_epoll+0x108>
   11c88:	ldr	r2, [r4, r2]
   11c8c:	str	r2, [r3]
   11c90:	ldr	r3, [pc, #128]	; 11d18 <try_epoll+0x10c>
   11c94:	add	r3, pc, r3
   11c98:	ldr	r2, [pc, #124]	; 11d1c <try_epoll+0x110>
   11c9c:	ldr	r2, [r4, r2]
   11ca0:	str	r2, [r3]
   11ca4:	ldr	r3, [pc, #116]	; 11d20 <try_epoll+0x114>
   11ca8:	add	r3, pc, r3
   11cac:	ldr	r2, [pc, #112]	; 11d24 <try_epoll+0x118>
   11cb0:	ldr	r2, [r4, r2]
   11cb4:	str	r2, [r3]
   11cb8:	mov	r2, #25
   11cbc:	ldr	r3, [pc, #100]	; 11d28 <try_epoll+0x11c>
   11cc0:	add	r3, pc, r3
   11cc4:	mov	r1, r3
   11cc8:	ldr	r3, [pc, #92]	; 11d2c <try_epoll+0x120>
   11ccc:	add	r3, pc, r3
   11cd0:	mov	r0, r3
   11cd4:	bl	470c <rb_strlcpy@plt>
   11cd8:	mov	r3, #0
   11cdc:	b	11ce4 <try_epoll+0xd8>
   11ce0:	mvn	r3, #0
   11ce4:	mov	r0, r3
   11ce8:	pop	{r4, r5, fp, pc}
   11cec:	.word	0x000223e0
   11cf0:	.word	0x0003527c
   11cf4:	.word	0x00000374
   11cf8:	.word	0x0003526c
   11cfc:	.word	0x000003d4
   11d00:	.word	0x0003525c
   11d04:	.word	0x00000410
   11d08:	.word	0x0003524c
   11d0c:	.word	0x00000390
   11d10:	.word	0x0003523c
   11d14:	.word	0x000003d0
   11d18:	.word	0x0003522c
   11d1c:	.word	0x00000360
   11d20:	.word	0x0003521c
   11d24:	.word	0x00000424
   11d28:	.word	0x00010d08
   11d2c:	.word	0x000351fc

00011d30 <try_ports>:
   11d30:	push	{r4, r5, fp, lr}
   11d34:	add	fp, sp, #12
   11d38:	ldr	r4, [pc, #208]	; 11e10 <try_ports+0xe0>
   11d3c:	add	r4, pc, r4
   11d40:	bl	1a67c <rb_init_netio_ports>
   11d44:	mov	r3, r0
   11d48:	cmp	r3, #0
   11d4c:	bne	11e04 <try_ports+0xd4>
   11d50:	ldr	r3, [pc, #188]	; 11e14 <try_ports+0xe4>
   11d54:	add	r3, pc, r3
   11d58:	ldr	r2, [pc, #184]	; 11e18 <try_ports+0xe8>
   11d5c:	ldr	r2, [r4, r2]
   11d60:	str	r2, [r3]
   11d64:	ldr	r3, [pc, #176]	; 11e1c <try_ports+0xec>
   11d68:	add	r3, pc, r3
   11d6c:	ldr	r2, [pc, #172]	; 11e20 <try_ports+0xf0>
   11d70:	ldr	r2, [r4, r2]
   11d74:	str	r2, [r3]
   11d78:	ldr	r3, [pc, #164]	; 11e24 <try_ports+0xf4>
   11d7c:	add	r3, pc, r3
   11d80:	ldr	r2, [pc, #160]	; 11e28 <try_ports+0xf8>
   11d84:	ldr	r2, [r4, r2]
   11d88:	str	r2, [r3]
   11d8c:	ldr	r3, [pc, #152]	; 11e2c <try_ports+0xfc>
   11d90:	add	r3, pc, r3
   11d94:	ldr	r2, [pc, #148]	; 11e30 <try_ports+0x100>
   11d98:	ldr	r2, [r4, r2]
   11d9c:	str	r2, [r3]
   11da0:	ldr	r3, [pc, #140]	; 11e34 <try_ports+0x104>
   11da4:	add	r3, pc, r3
   11da8:	ldr	r2, [pc, #136]	; 11e38 <try_ports+0x108>
   11dac:	ldr	r2, [r4, r2]
   11db0:	str	r2, [r3]
   11db4:	ldr	r3, [pc, #128]	; 11e3c <try_ports+0x10c>
   11db8:	add	r3, pc, r3
   11dbc:	ldr	r2, [pc, #124]	; 11e40 <try_ports+0x110>
   11dc0:	ldr	r2, [r4, r2]
   11dc4:	str	r2, [r3]
   11dc8:	ldr	r3, [pc, #116]	; 11e44 <try_ports+0x114>
   11dcc:	add	r3, pc, r3
   11dd0:	ldr	r2, [pc, #112]	; 11e48 <try_ports+0x118>
   11dd4:	ldr	r2, [r4, r2]
   11dd8:	str	r2, [r3]
   11ddc:	mov	r2, #25
   11de0:	ldr	r3, [pc, #100]	; 11e4c <try_ports+0x11c>
   11de4:	add	r3, pc, r3
   11de8:	mov	r1, r3
   11dec:	ldr	r3, [pc, #92]	; 11e50 <try_ports+0x120>
   11df0:	add	r3, pc, r3
   11df4:	mov	r0, r3
   11df8:	bl	470c <rb_strlcpy@plt>
   11dfc:	mov	r3, #0
   11e00:	b	11e08 <try_ports+0xd8>
   11e04:	mvn	r3, #0
   11e08:	mov	r0, r3
   11e0c:	pop	{r4, r5, fp, pc}
   11e10:	.word	0x000222bc
   11e14:	.word	0x00035158
   11e18:	.word	0x000003f4
   11e1c:	.word	0x00035148
   11e20:	.word	0x00000394
   11e24:	.word	0x00035138
   11e28:	.word	0x0000041c
   11e2c:	.word	0x00035128
   11e30:	.word	0x0000035c
   11e34:	.word	0x00035118
   11e38:	.word	0x00000418
   11e3c:	.word	0x0003510c
   11e40:	.word	0x00000370
   11e44:	.word	0x000350f4
   11e48:	.word	0x000003ec
   11e4c:	.word	0x00010bec
   11e50:	.word	0x000350d8

00011e54 <try_devpoll>:
   11e54:	push	{r4, r5, fp, lr}
   11e58:	add	fp, sp, #12
   11e5c:	ldr	r4, [pc, #196]	; 11f28 <try_devpoll+0xd4>
   11e60:	add	r4, pc, r4
   11e64:	bl	18bac <rb_init_netio_devpoll>
   11e68:	mov	r3, r0
   11e6c:	cmp	r3, #0
   11e70:	bne	11f1c <try_devpoll+0xc8>
   11e74:	ldr	r3, [pc, #176]	; 11f2c <try_devpoll+0xd8>
   11e78:	add	r3, pc, r3
   11e7c:	ldr	r2, [pc, #172]	; 11f30 <try_devpoll+0xdc>
   11e80:	ldr	r2, [r4, r2]
   11e84:	str	r2, [r3]
   11e88:	ldr	r3, [pc, #164]	; 11f34 <try_devpoll+0xe0>
   11e8c:	add	r3, pc, r3
   11e90:	ldr	r2, [pc, #160]	; 11f38 <try_devpoll+0xe4>
   11e94:	ldr	r2, [r4, r2]
   11e98:	str	r2, [r3]
   11e9c:	ldr	r3, [pc, #152]	; 11f3c <try_devpoll+0xe8>
   11ea0:	add	r3, pc, r3
   11ea4:	ldr	r2, [pc, #148]	; 11f40 <try_devpoll+0xec>
   11ea8:	ldr	r2, [r4, r2]
   11eac:	str	r2, [r3]
   11eb0:	ldr	r3, [pc, #140]	; 11f44 <try_devpoll+0xf0>
   11eb4:	add	r3, pc, r3
   11eb8:	mov	r2, #0
   11ebc:	str	r2, [r3]
   11ec0:	ldr	r3, [pc, #128]	; 11f48 <try_devpoll+0xf4>
   11ec4:	add	r3, pc, r3
   11ec8:	mov	r2, #0
   11ecc:	str	r2, [r3]
   11ed0:	ldr	r3, [pc, #116]	; 11f4c <try_devpoll+0xf8>
   11ed4:	add	r3, pc, r3
   11ed8:	mov	r2, #0
   11edc:	str	r2, [r3]
   11ee0:	ldr	r3, [pc, #104]	; 11f50 <try_devpoll+0xfc>
   11ee4:	add	r3, pc, r3
   11ee8:	ldr	r2, [pc, #100]	; 11f54 <try_devpoll+0x100>
   11eec:	add	r2, pc, r2
   11ef0:	str	r2, [r3]
   11ef4:	mov	r2, #25
   11ef8:	ldr	r3, [pc, #88]	; 11f58 <try_devpoll+0x104>
   11efc:	add	r3, pc, r3
   11f00:	mov	r1, r3
   11f04:	ldr	r3, [pc, #80]	; 11f5c <try_devpoll+0x108>
   11f08:	add	r3, pc, r3
   11f0c:	mov	r0, r3
   11f10:	bl	470c <rb_strlcpy@plt>
   11f14:	mov	r3, #0
   11f18:	b	11f20 <try_devpoll+0xcc>
   11f1c:	mvn	r3, #0
   11f20:	mov	r0, r3
   11f24:	pop	{r4, r5, fp, pc}
   11f28:	.word	0x00022198
   11f2c:	.word	0x00035034
   11f30:	.word	0x000003bc
   11f34:	.word	0x00035024
   11f38:	.word	0x000003fc
   11f3c:	.word	0x00035014
   11f40:	.word	0x000003c0
   11f44:	.word	0x00035004
   11f48:	.word	0x00034ff8
   11f4c:	.word	0x00034ff0
   11f50:	.word	0x00034fdc
   11f54:	.word	0xfffffbd8
   11f58:	.word	0x00010adc
   11f5c:	.word	0x00034fc0

00011f60 <try_sigio>:
   11f60:	push	{r4, r5, fp, lr}
   11f64:	add	fp, sp, #12
   11f68:	ldr	r4, [pc, #208]	; 12040 <try_sigio+0xe0>
   11f6c:	add	r4, pc, r4
   11f70:	bl	1a918 <rb_init_netio_sigio>
   11f74:	mov	r3, r0
   11f78:	cmp	r3, #0
   11f7c:	bne	12034 <try_sigio+0xd4>
   11f80:	ldr	r3, [pc, #188]	; 12044 <try_sigio+0xe4>
   11f84:	add	r3, pc, r3
   11f88:	ldr	r2, [pc, #184]	; 12048 <try_sigio+0xe8>
   11f8c:	ldr	r2, [r4, r2]
   11f90:	str	r2, [r3]
   11f94:	ldr	r3, [pc, #176]	; 1204c <try_sigio+0xec>
   11f98:	add	r3, pc, r3
   11f9c:	ldr	r2, [pc, #172]	; 12050 <try_sigio+0xf0>
   11fa0:	ldr	r2, [r4, r2]
   11fa4:	str	r2, [r3]
   11fa8:	ldr	r3, [pc, #164]	; 12054 <try_sigio+0xf4>
   11fac:	add	r3, pc, r3
   11fb0:	ldr	r2, [pc, #160]	; 12058 <try_sigio+0xf8>
   11fb4:	ldr	r2, [r4, r2]
   11fb8:	str	r2, [r3]
   11fbc:	ldr	r3, [pc, #152]	; 1205c <try_sigio+0xfc>
   11fc0:	add	r3, pc, r3
   11fc4:	ldr	r2, [pc, #148]	; 12060 <try_sigio+0x100>
   11fc8:	ldr	r2, [r4, r2]
   11fcc:	str	r2, [r3]
   11fd0:	ldr	r3, [pc, #140]	; 12064 <try_sigio+0x104>
   11fd4:	add	r3, pc, r3
   11fd8:	ldr	r2, [pc, #136]	; 12068 <try_sigio+0x108>
   11fdc:	ldr	r2, [r4, r2]
   11fe0:	str	r2, [r3]
   11fe4:	ldr	r3, [pc, #128]	; 1206c <try_sigio+0x10c>
   11fe8:	add	r3, pc, r3
   11fec:	ldr	r2, [pc, #124]	; 12070 <try_sigio+0x110>
   11ff0:	ldr	r2, [r4, r2]
   11ff4:	str	r2, [r3]
   11ff8:	ldr	r3, [pc, #116]	; 12074 <try_sigio+0x114>
   11ffc:	add	r3, pc, r3
   12000:	ldr	r2, [pc, #112]	; 12078 <try_sigio+0x118>
   12004:	ldr	r2, [r4, r2]
   12008:	str	r2, [r3]
   1200c:	mov	r2, #25
   12010:	ldr	r3, [pc, #100]	; 1207c <try_sigio+0x11c>
   12014:	add	r3, pc, r3
   12018:	mov	r1, r3
   1201c:	ldr	r3, [pc, #92]	; 12080 <try_sigio+0x120>
   12020:	add	r3, pc, r3
   12024:	mov	r0, r3
   12028:	bl	470c <rb_strlcpy@plt>
   1202c:	mov	r3, #0
   12030:	b	12038 <try_sigio+0xd8>
   12034:	mvn	r3, #0
   12038:	mov	r0, r3
   1203c:	pop	{r4, r5, fp, pc}
   12040:	.word	0x0002208c
   12044:	.word	0x00034f28
   12048:	.word	0x000003d8
   1204c:	.word	0x00034f18
   12050:	.word	0x00000378
   12054:	.word	0x00034f08
   12058:	.word	0x000003e8
   1205c:	.word	0x00034ef8
   12060:	.word	0x00000380
   12064:	.word	0x00034ee8
   12068:	.word	0x00000364
   1206c:	.word	0x00034ed8
   12070:	.word	0x000003e4
   12074:	.word	0x00034ec8
   12078:	.word	0x00000404
   1207c:	.word	0x000109cc
   12080:	.word	0x00034ea8

00012084 <try_poll>:
   12084:	push	{r4, r5, fp, lr}
   12088:	add	fp, sp, #12
   1208c:	ldr	r4, [pc, #196]	; 12158 <try_poll+0xd4>
   12090:	add	r4, pc, r4
   12094:	bl	19edc <rb_init_netio_poll>
   12098:	mov	r3, r0
   1209c:	cmp	r3, #0
   120a0:	bne	1214c <try_poll+0xc8>
   120a4:	ldr	r3, [pc, #176]	; 1215c <try_poll+0xd8>
   120a8:	add	r3, pc, r3
   120ac:	ldr	r2, [pc, #172]	; 12160 <try_poll+0xdc>
   120b0:	ldr	r2, [r4, r2]
   120b4:	str	r2, [r3]
   120b8:	ldr	r3, [pc, #164]	; 12164 <try_poll+0xe0>
   120bc:	add	r3, pc, r3
   120c0:	ldr	r2, [pc, #160]	; 12168 <try_poll+0xe4>
   120c4:	ldr	r2, [r4, r2]
   120c8:	str	r2, [r3]
   120cc:	ldr	r3, [pc, #152]	; 1216c <try_poll+0xe8>
   120d0:	add	r3, pc, r3
   120d4:	ldr	r2, [pc, #148]	; 12170 <try_poll+0xec>
   120d8:	ldr	r2, [r4, r2]
   120dc:	str	r2, [r3]
   120e0:	ldr	r3, [pc, #140]	; 12174 <try_poll+0xf0>
   120e4:	add	r3, pc, r3
   120e8:	mov	r2, #0
   120ec:	str	r2, [r3]
   120f0:	ldr	r3, [pc, #128]	; 12178 <try_poll+0xf4>
   120f4:	add	r3, pc, r3
   120f8:	mov	r2, #0
   120fc:	str	r2, [r3]
   12100:	ldr	r3, [pc, #116]	; 1217c <try_poll+0xf8>
   12104:	add	r3, pc, r3
   12108:	mov	r2, #0
   1210c:	str	r2, [r3]
   12110:	ldr	r3, [pc, #104]	; 12180 <try_poll+0xfc>
   12114:	add	r3, pc, r3
   12118:	ldr	r2, [pc, #100]	; 12184 <try_poll+0x100>
   1211c:	add	r2, pc, r2
   12120:	str	r2, [r3]
   12124:	mov	r2, #25
   12128:	ldr	r3, [pc, #88]	; 12188 <try_poll+0x104>
   1212c:	add	r3, pc, r3
   12130:	mov	r1, r3
   12134:	ldr	r3, [pc, #80]	; 1218c <try_poll+0x108>
   12138:	add	r3, pc, r3
   1213c:	mov	r0, r3
   12140:	bl	470c <rb_strlcpy@plt>
   12144:	mov	r3, #0
   12148:	b	12150 <try_poll+0xcc>
   1214c:	mvn	r3, #0
   12150:	mov	r0, r3
   12154:	pop	{r4, r5, fp, pc}
   12158:	.word	0x00021f68
   1215c:	.word	0x00034e04
   12160:	.word	0x000003f8
   12164:	.word	0x00034df4
   12168:	.word	0x00000408
   1216c:	.word	0x00034de4
   12170:	.word	0x0000038c
   12174:	.word	0x00034dd4
   12178:	.word	0x00034dc8
   1217c:	.word	0x00034dc0
   12180:	.word	0x00034dac
   12184:	.word	0xfffff9a8
   12188:	.word	0x000108bc
   1218c:	.word	0x00034d90

00012190 <try_win32>:
   12190:	push	{r4, r5, fp, lr}
   12194:	add	fp, sp, #12
   12198:	ldr	r4, [pc, #196]	; 12264 <try_win32+0xd4>
   1219c:	add	r4, pc, r4
   121a0:	bl	51a0 <rb_init_netio_win32>
   121a4:	mov	r3, r0
   121a8:	cmp	r3, #0
   121ac:	bne	12258 <try_win32+0xc8>
   121b0:	ldr	r3, [pc, #176]	; 12268 <try_win32+0xd8>
   121b4:	add	r3, pc, r3
   121b8:	ldr	r2, [pc, #172]	; 1226c <try_win32+0xdc>
   121bc:	ldr	r2, [r4, r2]
   121c0:	str	r2, [r3]
   121c4:	ldr	r3, [pc, #164]	; 12270 <try_win32+0xe0>
   121c8:	add	r3, pc, r3
   121cc:	ldr	r2, [pc, #160]	; 12274 <try_win32+0xe4>
   121d0:	ldr	r2, [r4, r2]
   121d4:	str	r2, [r3]
   121d8:	ldr	r3, [pc, #152]	; 12278 <try_win32+0xe8>
   121dc:	add	r3, pc, r3
   121e0:	ldr	r2, [pc, #148]	; 1227c <try_win32+0xec>
   121e4:	ldr	r2, [r4, r2]
   121e8:	str	r2, [r3]
   121ec:	ldr	r3, [pc, #140]	; 12280 <try_win32+0xf0>
   121f0:	add	r3, pc, r3
   121f4:	mov	r2, #0
   121f8:	str	r2, [r3]
   121fc:	ldr	r3, [pc, #128]	; 12284 <try_win32+0xf4>
   12200:	add	r3, pc, r3
   12204:	mov	r2, #0
   12208:	str	r2, [r3]
   1220c:	ldr	r3, [pc, #116]	; 12288 <try_win32+0xf8>
   12210:	add	r3, pc, r3
   12214:	mov	r2, #0
   12218:	str	r2, [r3]
   1221c:	ldr	r3, [pc, #104]	; 1228c <try_win32+0xfc>
   12220:	add	r3, pc, r3
   12224:	ldr	r2, [pc, #100]	; 12290 <try_win32+0x100>
   12228:	add	r2, pc, r2
   1222c:	str	r2, [r3]
   12230:	mov	r2, #25
   12234:	ldr	r3, [pc, #88]	; 12294 <try_win32+0x104>
   12238:	add	r3, pc, r3
   1223c:	mov	r1, r3
   12240:	ldr	r3, [pc, #80]	; 12298 <try_win32+0x108>
   12244:	add	r3, pc, r3
   12248:	mov	r0, r3
   1224c:	bl	470c <rb_strlcpy@plt>
   12250:	mov	r3, #0
   12254:	b	1225c <try_win32+0xcc>
   12258:	mvn	r3, #0
   1225c:	mov	r0, r3
   12260:	pop	{r4, r5, fp, pc}
   12264:	.word	0x00021e5c
   12268:	.word	0x00034cf8
   1226c:	.word	0x000003a8
   12270:	.word	0x00034ce8
   12274:	.word	0x000003b4
   12278:	.word	0x00034cd8
   1227c:	.word	0x0000037c
   12280:	.word	0x00034cc8
   12284:	.word	0x00034cbc
   12288:	.word	0x00034cb4
   1228c:	.word	0x00034ca0
   12290:	.word	0xfffff89c
   12294:	.word	0x000107b8
   12298:	.word	0x00034c84

0001229c <try_select>:
   1229c:	push	{r4, r5, fp, lr}
   122a0:	add	fp, sp, #12
   122a4:	ldr	r4, [pc, #196]	; 12370 <try_select+0xd4>
   122a8:	add	r4, pc, r4
   122ac:	bl	1bd2c <rb_init_netio_select>
   122b0:	mov	r3, r0
   122b4:	cmp	r3, #0
   122b8:	bne	12364 <try_select+0xc8>
   122bc:	ldr	r3, [pc, #176]	; 12374 <try_select+0xd8>
   122c0:	add	r3, pc, r3
   122c4:	ldr	r2, [pc, #172]	; 12378 <try_select+0xdc>
   122c8:	ldr	r2, [r4, r2]
   122cc:	str	r2, [r3]
   122d0:	ldr	r3, [pc, #164]	; 1237c <try_select+0xe0>
   122d4:	add	r3, pc, r3
   122d8:	ldr	r2, [pc, #160]	; 12380 <try_select+0xe4>
   122dc:	ldr	r2, [r4, r2]
   122e0:	str	r2, [r3]
   122e4:	ldr	r3, [pc, #152]	; 12384 <try_select+0xe8>
   122e8:	add	r3, pc, r3
   122ec:	ldr	r2, [pc, #148]	; 12388 <try_select+0xec>
   122f0:	ldr	r2, [r4, r2]
   122f4:	str	r2, [r3]
   122f8:	ldr	r3, [pc, #140]	; 1238c <try_select+0xf0>
   122fc:	add	r3, pc, r3
   12300:	mov	r2, #0
   12304:	str	r2, [r3]
   12308:	ldr	r3, [pc, #128]	; 12390 <try_select+0xf4>
   1230c:	add	r3, pc, r3
   12310:	mov	r2, #0
   12314:	str	r2, [r3]
   12318:	ldr	r3, [pc, #116]	; 12394 <try_select+0xf8>
   1231c:	add	r3, pc, r3
   12320:	mov	r2, #0
   12324:	str	r2, [r3]
   12328:	ldr	r3, [pc, #104]	; 12398 <try_select+0xfc>
   1232c:	add	r3, pc, r3
   12330:	ldr	r2, [pc, #100]	; 1239c <try_select+0x100>
   12334:	add	r2, pc, r2
   12338:	str	r2, [r3]
   1233c:	mov	r2, #25
   12340:	ldr	r3, [pc, #88]	; 123a0 <try_select+0x104>
   12344:	add	r3, pc, r3
   12348:	mov	r1, r3
   1234c:	ldr	r3, [pc, #80]	; 123a4 <try_select+0x108>
   12350:	add	r3, pc, r3
   12354:	mov	r0, r3
   12358:	bl	470c <rb_strlcpy@plt>
   1235c:	mov	r3, #0
   12360:	b	12368 <try_select+0xcc>
   12364:	mvn	r3, #0
   12368:	mov	r0, r3
   1236c:	pop	{r4, r5, fp, pc}
   12370:	.word	0x00021d50
   12374:	.word	0x00034bec
   12378:	.word	0x0000042c
   1237c:	.word	0x00034bdc
   12380:	.word	0x000003c4
   12384:	.word	0x00034bcc
   12388:	.word	0x0000040c
   1238c:	.word	0x00034bbc
   12390:	.word	0x00034bb0
   12394:	.word	0x00034ba8
   12398:	.word	0x00034b94
   1239c:	.word	0xfffff790
   123a0:	.word	0x000106b4
   123a4:	.word	0x00034b78

000123a8 <rb_io_sched_event>:
   123a8:	push	{fp, lr}
   123ac:	add	fp, sp, #4
   123b0:	sub	sp, sp, #8
   123b4:	str	r0, [fp, #-8]
   123b8:	str	r1, [fp, #-12]
   123bc:	ldr	r3, [fp, #-8]
   123c0:	cmp	r3, #0
   123c4:	beq	1240c <rb_io_sched_event+0x64>
   123c8:	ldr	r3, [pc, #108]	; 1243c <rb_io_sched_event+0x94>
   123cc:	add	r3, pc, r3
   123d0:	ldr	r3, [r3]
   123d4:	cmp	r3, #0
   123d8:	beq	1240c <rb_io_sched_event+0x64>
   123dc:	ldr	r3, [pc, #92]	; 12440 <rb_io_sched_event+0x98>
   123e0:	add	r3, pc, r3
   123e4:	ldr	r3, [r3]
   123e8:	cmp	r3, #0
   123ec:	beq	1240c <rb_io_sched_event+0x64>
   123f0:	ldr	r3, [pc, #76]	; 12444 <rb_io_sched_event+0x9c>
   123f4:	add	r3, pc, r3
   123f8:	ldr	r3, [r3]
   123fc:	blx	r3
   12400:	mov	r3, r0
   12404:	cmp	r3, #0
   12408:	bne	12414 <rb_io_sched_event+0x6c>
   1240c:	mov	r3, #0
   12410:	b	12430 <rb_io_sched_event+0x88>
   12414:	ldr	r3, [pc, #44]	; 12448 <rb_io_sched_event+0xa0>
   12418:	add	r3, pc, r3
   1241c:	ldr	r3, [r3]
   12420:	ldr	r1, [fp, #-12]
   12424:	ldr	r0, [fp, #-8]
   12428:	blx	r3
   1242c:	mov	r3, r0
   12430:	mov	r0, r3
   12434:	sub	sp, fp, #4
   12438:	pop	{fp, pc}
   1243c:	.word	0x00034af4
   12440:	.word	0x00034ad8
   12444:	.word	0x00034acc
   12448:	.word	0x00034aa0

0001244c <rb_io_unsched_event>:
   1244c:	push	{fp, lr}
   12450:	add	fp, sp, #4
   12454:	sub	sp, sp, #8
   12458:	str	r0, [fp, #-8]
   1245c:	ldr	r3, [fp, #-8]
   12460:	cmp	r3, #0
   12464:	beq	124c4 <rb_io_unsched_event+0x78>
   12468:	ldr	r3, [pc, #96]	; 124d0 <rb_io_unsched_event+0x84>
   1246c:	add	r3, pc, r3
   12470:	ldr	r3, [r3]
   12474:	cmp	r3, #0
   12478:	beq	124c4 <rb_io_unsched_event+0x78>
   1247c:	ldr	r3, [pc, #80]	; 124d4 <rb_io_unsched_event+0x88>
   12480:	add	r3, pc, r3
   12484:	ldr	r3, [r3]
   12488:	cmp	r3, #0
   1248c:	beq	124c4 <rb_io_unsched_event+0x78>
   12490:	ldr	r3, [pc, #64]	; 124d8 <rb_io_unsched_event+0x8c>
   12494:	add	r3, pc, r3
   12498:	ldr	r3, [r3]
   1249c:	blx	r3
   124a0:	mov	r3, r0
   124a4:	cmp	r3, #0
   124a8:	beq	124c4 <rb_io_unsched_event+0x78>
   124ac:	ldr	r3, [pc, #40]	; 124dc <rb_io_unsched_event+0x90>
   124b0:	add	r3, pc, r3
   124b4:	ldr	r3, [r3]
   124b8:	ldr	r0, [fp, #-8]
   124bc:	blx	r3
   124c0:	b	124c8 <rb_io_unsched_event+0x7c>
   124c4:	nop			; (mov r0, r0)
   124c8:	sub	sp, fp, #4
   124cc:	pop	{fp, pc}
   124d0:	.word	0x00034a54
   124d4:	.word	0x00034a3c
   124d8:	.word	0x00034a2c
   124dc:	.word	0x00034a0c

000124e0 <rb_io_supports_event>:
   124e0:	push	{fp, lr}
   124e4:	add	fp, sp, #4
   124e8:	ldr	r3, [pc, #48]	; 12520 <rb_io_supports_event+0x40>
   124ec:	add	r3, pc, r3
   124f0:	ldr	r3, [r3]
   124f4:	cmp	r3, #0
   124f8:	bne	12504 <rb_io_supports_event+0x24>
   124fc:	mov	r3, #0
   12500:	b	12518 <rb_io_supports_event+0x38>
   12504:	ldr	r3, [pc, #24]	; 12524 <rb_io_supports_event+0x44>
   12508:	add	r3, pc, r3
   1250c:	ldr	r3, [r3]
   12510:	blx	r3
   12514:	mov	r3, r0
   12518:	mov	r0, r3
   1251c:	pop	{fp, pc}
   12520:	.word	0x000349d4
   12524:	.word	0x000349b8

00012528 <rb_io_init_event>:
   12528:	push	{fp, lr}
   1252c:	add	fp, sp, #4
   12530:	ldr	r3, [pc, #20]	; 1254c <rb_io_init_event+0x24>
   12534:	add	r3, pc, r3
   12538:	ldr	r3, [r3]
   1253c:	blx	r3
   12540:	bl	15260 <rb_event_io_register_all>
   12544:	nop			; (mov r0, r0)
   12548:	pop	{fp, pc}
   1254c:	.word	0x00034990

00012550 <rb_init_netio>:
   12550:	push	{r4, fp, lr}
   12554:	add	fp, sp, #8
   12558:	sub	sp, sp, #12
   1255c:	ldr	r4, [pc, #700]	; 12820 <rb_init_netio+0x2d0>
   12560:	add	r4, pc, r4
   12564:	ldr	r3, [pc, #696]	; 12824 <rb_init_netio+0x2d4>
   12568:	add	r3, pc, r3
   1256c:	mov	r0, r3
   12570:	bl	4604 <getenv@plt>
   12574:	str	r0, [fp, #-16]
   12578:	mov	r0, #49152	; 0xc000
   1257c:	bl	e7ec <rb_malloc>
   12580:	mov	r2, r0
   12584:	ldr	r3, [pc, #668]	; 12828 <rb_init_netio+0x2d8>
   12588:	ldr	r3, [r4, r3]
   1258c:	str	r2, [r3]
   12590:	bl	138dc <rb_init_ssl>
   12594:	ldr	r3, [fp, #-16]
   12598:	cmp	r3, #0
   1259c:	beq	12738 <rb_init_netio+0x1e8>
   125a0:	ldr	r1, [fp, #-16]
   125a4:	ldr	r3, [pc, #640]	; 1282c <rb_init_netio+0x2dc>
   125a8:	add	r3, pc, r3
   125ac:	mov	r0, r3
   125b0:	bl	4d6c <strcmp@plt>
   125b4:	mov	r3, r0
   125b8:	cmp	r3, #0
   125bc:	bne	125d4 <rb_init_netio+0x84>
   125c0:	bl	11c0c <try_epoll>
   125c4:	mov	r3, r0
   125c8:	cmp	r3, #0
   125cc:	bne	12708 <rb_init_netio+0x1b8>
   125d0:	b	12818 <rb_init_netio+0x2c8>
   125d4:	ldr	r1, [fp, #-16]
   125d8:	ldr	r3, [pc, #592]	; 12830 <rb_init_netio+0x2e0>
   125dc:	add	r3, pc, r3
   125e0:	mov	r0, r3
   125e4:	bl	4d6c <strcmp@plt>
   125e8:	mov	r3, r0
   125ec:	cmp	r3, #0
   125f0:	bne	12608 <rb_init_netio+0xb8>
   125f4:	bl	11ae8 <try_kqueue>
   125f8:	mov	r3, r0
   125fc:	cmp	r3, #0
   12600:	bne	12708 <rb_init_netio+0x1b8>
   12604:	b	12818 <rb_init_netio+0x2c8>
   12608:	ldr	r1, [fp, #-16]
   1260c:	ldr	r3, [pc, #544]	; 12834 <rb_init_netio+0x2e4>
   12610:	add	r3, pc, r3
   12614:	mov	r0, r3
   12618:	bl	4d6c <strcmp@plt>
   1261c:	mov	r3, r0
   12620:	cmp	r3, #0
   12624:	bne	1263c <rb_init_netio+0xec>
   12628:	bl	11d30 <try_ports>
   1262c:	mov	r3, r0
   12630:	cmp	r3, #0
   12634:	bne	12708 <rb_init_netio+0x1b8>
   12638:	b	12818 <rb_init_netio+0x2c8>
   1263c:	ldr	r1, [fp, #-16]
   12640:	ldr	r3, [pc, #496]	; 12838 <rb_init_netio+0x2e8>
   12644:	add	r3, pc, r3
   12648:	mov	r0, r3
   1264c:	bl	4d6c <strcmp@plt>
   12650:	mov	r3, r0
   12654:	cmp	r3, #0
   12658:	bne	12670 <rb_init_netio+0x120>
   1265c:	bl	12084 <try_poll>
   12660:	mov	r3, r0
   12664:	cmp	r3, #0
   12668:	bne	12708 <rb_init_netio+0x1b8>
   1266c:	b	12818 <rb_init_netio+0x2c8>
   12670:	ldr	r1, [fp, #-16]
   12674:	ldr	r3, [pc, #448]	; 1283c <rb_init_netio+0x2ec>
   12678:	add	r3, pc, r3
   1267c:	mov	r0, r3
   12680:	bl	4d6c <strcmp@plt>
   12684:	mov	r3, r0
   12688:	cmp	r3, #0
   1268c:	bne	126a4 <rb_init_netio+0x154>
   12690:	bl	11e54 <try_devpoll>
   12694:	mov	r3, r0
   12698:	cmp	r3, #0
   1269c:	bne	12708 <rb_init_netio+0x1b8>
   126a0:	b	12818 <rb_init_netio+0x2c8>
   126a4:	ldr	r1, [fp, #-16]
   126a8:	ldr	r3, [pc, #400]	; 12840 <rb_init_netio+0x2f0>
   126ac:	add	r3, pc, r3
   126b0:	mov	r0, r3
   126b4:	bl	4d6c <strcmp@plt>
   126b8:	mov	r3, r0
   126bc:	cmp	r3, #0
   126c0:	bne	126d8 <rb_init_netio+0x188>
   126c4:	bl	11f60 <try_sigio>
   126c8:	mov	r3, r0
   126cc:	cmp	r3, #0
   126d0:	bne	12708 <rb_init_netio+0x1b8>
   126d4:	b	12818 <rb_init_netio+0x2c8>
   126d8:	ldr	r1, [fp, #-16]
   126dc:	ldr	r3, [pc, #352]	; 12844 <rb_init_netio+0x2f4>
   126e0:	add	r3, pc, r3
   126e4:	mov	r0, r3
   126e8:	bl	4d6c <strcmp@plt>
   126ec:	mov	r3, r0
   126f0:	cmp	r3, #0
   126f4:	bne	12708 <rb_init_netio+0x1b8>
   126f8:	bl	1229c <try_select>
   126fc:	mov	r3, r0
   12700:	cmp	r3, #0
   12704:	beq	127cc <rb_init_netio+0x27c>
   12708:	ldr	r1, [fp, #-16]
   1270c:	ldr	r3, [pc, #308]	; 12848 <rb_init_netio+0x2f8>
   12710:	add	r3, pc, r3
   12714:	mov	r0, r3
   12718:	bl	4d6c <strcmp@plt>
   1271c:	mov	r3, r0
   12720:	cmp	r3, #0
   12724:	bne	12738 <rb_init_netio+0x1e8>
   12728:	bl	12190 <try_win32>
   1272c:	mov	r3, r0
   12730:	cmp	r3, #0
   12734:	beq	127d4 <rb_init_netio+0x284>
   12738:	bl	11ae8 <try_kqueue>
   1273c:	mov	r3, r0
   12740:	cmp	r3, #0
   12744:	beq	127dc <rb_init_netio+0x28c>
   12748:	bl	11c0c <try_epoll>
   1274c:	mov	r3, r0
   12750:	cmp	r3, #0
   12754:	beq	127e4 <rb_init_netio+0x294>
   12758:	bl	11d30 <try_ports>
   1275c:	mov	r3, r0
   12760:	cmp	r3, #0
   12764:	beq	127ec <rb_init_netio+0x29c>
   12768:	bl	11e54 <try_devpoll>
   1276c:	mov	r3, r0
   12770:	cmp	r3, #0
   12774:	beq	127f4 <rb_init_netio+0x2a4>
   12778:	bl	11f60 <try_sigio>
   1277c:	mov	r3, r0
   12780:	cmp	r3, #0
   12784:	beq	127fc <rb_init_netio+0x2ac>
   12788:	bl	12084 <try_poll>
   1278c:	mov	r3, r0
   12790:	cmp	r3, #0
   12794:	beq	12804 <rb_init_netio+0x2b4>
   12798:	bl	12190 <try_win32>
   1279c:	mov	r3, r0
   127a0:	cmp	r3, #0
   127a4:	beq	1280c <rb_init_netio+0x2bc>
   127a8:	bl	1229c <try_select>
   127ac:	mov	r3, r0
   127b0:	cmp	r3, #0
   127b4:	beq	12814 <rb_init_netio+0x2c4>
   127b8:	ldr	r3, [pc, #140]	; 1284c <rb_init_netio+0x2fc>
   127bc:	add	r3, pc, r3
   127c0:	mov	r0, r3
   127c4:	bl	4994 <rb_lib_log@plt>
   127c8:	bl	4430 <abort@plt>
   127cc:	nop			; (mov r0, r0)
   127d0:	b	12818 <rb_init_netio+0x2c8>
   127d4:	nop			; (mov r0, r0)
   127d8:	b	12818 <rb_init_netio+0x2c8>
   127dc:	nop			; (mov r0, r0)
   127e0:	b	12818 <rb_init_netio+0x2c8>
   127e4:	nop			; (mov r0, r0)
   127e8:	b	12818 <rb_init_netio+0x2c8>
   127ec:	nop			; (mov r0, r0)
   127f0:	b	12818 <rb_init_netio+0x2c8>
   127f4:	nop			; (mov r0, r0)
   127f8:	b	12818 <rb_init_netio+0x2c8>
   127fc:	nop			; (mov r0, r0)
   12800:	b	12818 <rb_init_netio+0x2c8>
   12804:	nop			; (mov r0, r0)
   12808:	b	12818 <rb_init_netio+0x2c8>
   1280c:	nop			; (mov r0, r0)
   12810:	b	12818 <rb_init_netio+0x2c8>
   12814:	nop			; (mov r0, r0)
   12818:	sub	sp, fp, #8
   1281c:	pop	{r4, fp, pc}
   12820:	.word	0x00021a98
   12824:	.word	0x00010498
   12828:	.word	0x000003cc
   1282c:	.word	0x00010420
   12830:	.word	0x000103e4
   12834:	.word	0x000103c0
   12838:	.word	0x000103a4
   1283c:	.word	0x00010360
   12840:	.word	0x00010334
   12844:	.word	0x00010318
   12848:	.word	0x000102e0
   1284c:	.word	0x00010258

00012850 <rb_setselect>:
   12850:	push	{r4, fp, lr}
   12854:	add	fp, sp, #8
   12858:	sub	sp, sp, #20
   1285c:	str	r0, [fp, #-16]
   12860:	str	r1, [fp, #-20]	; 0xffffffec
   12864:	str	r2, [fp, #-24]	; 0xffffffe8
   12868:	str	r3, [fp, #-28]	; 0xffffffe4
   1286c:	ldr	r3, [pc, #36]	; 12898 <rb_setselect+0x48>
   12870:	add	r3, pc, r3
   12874:	ldr	r4, [r3]
   12878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1287c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12880:	ldr	r1, [fp, #-20]	; 0xffffffec
   12884:	ldr	r0, [fp, #-16]
   12888:	blx	r4
   1288c:	nop			; (mov r0, r0)
   12890:	sub	sp, fp, #8
   12894:	pop	{r4, fp, pc}
   12898:	.word	0x0003463c

0001289c <rb_select>:
   1289c:	push	{fp, lr}
   128a0:	add	fp, sp, #4
   128a4:	sub	sp, sp, #16
   128a8:	str	r0, [fp, #-16]
   128ac:	ldr	r3, [pc, #40]	; 128dc <rb_select+0x40>
   128b0:	add	r3, pc, r3
   128b4:	ldr	r3, [r3]
   128b8:	ldr	r2, [fp, #-16]
   128bc:	mov	r0, r2
   128c0:	blx	r3
   128c4:	str	r0, [fp, #-8]
   128c8:	bl	eb6c <free_fds>
   128cc:	ldr	r3, [fp, #-8]
   128d0:	mov	r0, r3
   128d4:	sub	sp, fp, #4
   128d8:	pop	{fp, pc}
   128dc:	.word	0x00034600

000128e0 <rb_setup_fd>:
   128e0:	push	{fp, lr}
   128e4:	add	fp, sp, #4
   128e8:	sub	sp, sp, #8
   128ec:	str	r0, [fp, #-8]
   128f0:	ldr	r3, [pc, #28]	; 12914 <rb_setup_fd+0x34>
   128f4:	add	r3, pc, r3
   128f8:	ldr	r3, [r3]
   128fc:	ldr	r0, [fp, #-8]
   12900:	blx	r3
   12904:	mov	r3, r0
   12908:	mov	r0, r3
   1290c:	sub	sp, fp, #4
   12910:	pop	{fp, pc}
   12914:	.word	0x000345c0

00012918 <rb_ignore_errno>:
   12918:	push	{fp}		; (str fp, [sp, #-4]!)
   1291c:	add	fp, sp, #0
   12920:	sub	sp, sp, #12
   12924:	str	r0, [fp, #-8]
   12928:	ldr	r3, [fp, #-8]
   1292c:	cmp	r3, #85	; 0x55
   12930:	beq	12964 <rb_ignore_errno+0x4c>
   12934:	cmp	r3, #85	; 0x55
   12938:	bgt	12950 <rb_ignore_errno+0x38>
   1293c:	cmp	r3, #4
   12940:	beq	12964 <rb_ignore_errno+0x4c>
   12944:	cmp	r3, #11
   12948:	beq	12964 <rb_ignore_errno+0x4c>
   1294c:	b	1296c <rb_ignore_errno+0x54>
   12950:	cmp	r3, #105	; 0x69
   12954:	beq	12964 <rb_ignore_errno+0x4c>
   12958:	cmp	r3, #115	; 0x73
   1295c:	beq	12964 <rb_ignore_errno+0x4c>
   12960:	b	1296c <rb_ignore_errno+0x54>
   12964:	mov	r3, #1
   12968:	b	12970 <rb_ignore_errno+0x58>
   1296c:	mov	r3, #0
   12970:	mov	r0, r3
   12974:	add	sp, fp, #0
   12978:	pop	{fp}		; (ldr fp, [sp], #4)
   1297c:	bx	lr

00012980 <rb_recv_fd_buf>:
   12980:	push	{r4, fp, lr}
   12984:	add	fp, sp, #8
   12988:	sub	sp, sp, #180	; 0xb4
   1298c:	str	r0, [fp, #-176]	; 0xffffff50
   12990:	str	r1, [fp, #-180]	; 0xffffff4c
   12994:	str	r2, [fp, #-184]	; 0xffffff48
   12998:	str	r3, [fp, #-188]	; 0xffffff44
   1299c:	mov	r3, #64	; 0x40
   129a0:	strb	r3, [fp, #-13]
   129a4:	ldr	r3, [fp, #4]
   129a8:	add	r3, r3, #1
   129ac:	lsl	r3, r3, #2
   129b0:	sub	r3, r3, #1
   129b4:	bic	r3, r3, #3
   129b8:	add	r3, r3, #12
   129bc:	str	r3, [fp, #-28]	; 0xffffffe4
   129c0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   129c4:	str	r3, [fp, #-80]	; 0xffffffb0
   129c8:	ldr	r3, [fp, #-184]	; 0xffffff48
   129cc:	str	r3, [fp, #-76]	; 0xffffffb4
   129d0:	mov	r3, #0
   129d4:	str	r3, [fp, #-72]	; 0xffffffb8
   129d8:	mov	r3, #0
   129dc:	str	r3, [fp, #-68]	; 0xffffffbc
   129e0:	sub	r3, fp, #80	; 0x50
   129e4:	str	r3, [fp, #-64]	; 0xffffffc0
   129e8:	mov	r3, #1
   129ec:	str	r3, [fp, #-60]	; 0xffffffc4
   129f0:	mov	r3, #0
   129f4:	str	r3, [fp, #-48]	; 0xffffffd0
   129f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   129fc:	add	r3, r3, #7
   12a00:	add	r3, r3, #7
   12a04:	lsr	r3, r3, #3
   12a08:	lsl	r3, r3, #3
   12a0c:	sub	sp, sp, r3
   12a10:	mov	r3, sp
   12a14:	add	r3, r3, #7
   12a18:	lsr	r3, r3, #3
   12a1c:	lsl	r3, r3, #3
   12a20:	str	r3, [fp, #-32]	; 0xffffffe0
   12a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a28:	str	r3, [fp, #-56]	; 0xffffffc8
   12a2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a30:	str	r3, [fp, #-52]	; 0xffffffcc
   12a34:	ldr	r0, [fp, #-176]	; 0xffffff50
   12a38:	bl	4550 <rb_get_fd@plt>
   12a3c:	sub	r3, fp, #72	; 0x48
   12a40:	mov	r2, #0
   12a44:	mov	r1, r3
   12a48:	bl	4bbc <recvmsg@plt>
   12a4c:	str	r0, [fp, #-36]	; 0xffffffdc
   12a50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12a54:	cmp	r3, #0
   12a58:	bgt	12a64 <rb_recv_fd_buf+0xe4>
   12a5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12a60:	b	12c0c <rb_recv_fd_buf+0x28c>
   12a64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12a68:	cmp	r3, #0
   12a6c:	beq	12bf4 <rb_recv_fd_buf+0x274>
   12a70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12a74:	cmp	r3, #0
   12a78:	beq	12bf4 <rb_recv_fd_buf+0x274>
   12a7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12a80:	cmp	r3, #11
   12a84:	bls	12a90 <rb_recv_fd_buf+0x110>
   12a88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12a8c:	b	12a94 <rb_recv_fd_buf+0x114>
   12a90:	mov	r3, #0
   12a94:	str	r3, [fp, #-32]	; 0xffffffe0
   12a98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a9c:	cmp	r3, #0
   12aa0:	beq	12bf4 <rb_recv_fd_buf+0x274>
   12aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12aa8:	ldr	r3, [r3]
   12aac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12ab0:	add	r3, r2, r3
   12ab4:	mov	r2, r3
   12ab8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12abc:	add	r3, r3, #12
   12ac0:	sub	r3, r2, r3
   12ac4:	lsr	r3, r3, #2
   12ac8:	str	r3, [fp, #-40]	; 0xffffffd8
   12acc:	mov	r3, #0
   12ad0:	str	r3, [fp, #-24]	; 0xffffffe8
   12ad4:	b	12bd0 <rb_recv_fd_buf+0x250>
   12ad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12adc:	add	r2, r3, #12
   12ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ae4:	lsl	r3, r3, #2
   12ae8:	add	r3, r2, r3
   12aec:	ldr	r3, [r3]
   12af0:	str	r3, [fp, #-44]	; 0xffffffd4
   12af4:	mov	r3, #64	; 0x40
   12af8:	strb	r3, [fp, #-13]
   12afc:	ldr	r3, [pc, #276]	; 12c18 <rb_recv_fd_buf+0x298>
   12b00:	add	r3, pc, r3
   12b04:	str	r3, [fp, #-20]	; 0xffffffec
   12b08:	sub	r3, fp, #172	; 0xac
   12b0c:	mov	r1, r3
   12b10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b14:	bl	219dc <__fstat>
   12b18:	mov	r3, r0
   12b1c:	cmp	r3, #0
   12b20:	bne	12b98 <rb_recv_fd_buf+0x218>
   12b24:	ldr	r3, [fp, #-156]	; 0xffffff64
   12b28:	and	r3, r3, #61440	; 0xf000
   12b2c:	cmp	r3, #49152	; 0xc000
   12b30:	bne	12b4c <rb_recv_fd_buf+0x1cc>
   12b34:	mov	r3, #4
   12b38:	strb	r3, [fp, #-13]
   12b3c:	ldr	r3, [pc, #216]	; 12c1c <rb_recv_fd_buf+0x29c>
   12b40:	add	r3, pc, r3
   12b44:	str	r3, [fp, #-20]	; 0xffffffec
   12b48:	b	12b98 <rb_recv_fd_buf+0x218>
   12b4c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12b50:	and	r3, r3, #61440	; 0xf000
   12b54:	cmp	r3, #4096	; 0x1000
   12b58:	bne	12b74 <rb_recv_fd_buf+0x1f4>
   12b5c:	mov	r3, #8
   12b60:	strb	r3, [fp, #-13]
   12b64:	ldr	r3, [pc, #180]	; 12c20 <rb_recv_fd_buf+0x2a0>
   12b68:	add	r3, pc, r3
   12b6c:	str	r3, [fp, #-20]	; 0xffffffec
   12b70:	b	12b98 <rb_recv_fd_buf+0x218>
   12b74:	ldr	r3, [fp, #-156]	; 0xffffff64
   12b78:	and	r3, r3, #61440	; 0xf000
   12b7c:	cmp	r3, #32768	; 0x8000
   12b80:	bne	12b98 <rb_recv_fd_buf+0x218>
   12b84:	mov	r3, #2
   12b88:	strb	r3, [fp, #-13]
   12b8c:	ldr	r3, [pc, #144]	; 12c24 <rb_recv_fd_buf+0x2a4>
   12b90:	add	r3, pc, r3
   12b94:	str	r3, [fp, #-20]	; 0xffffffec
   12b98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b9c:	lsl	r3, r3, #2
   12ba0:	ldr	r2, [fp, #-188]	; 0xffffff44
   12ba4:	add	r4, r2, r3
   12ba8:	ldrb	r3, [fp, #-13]
   12bac:	ldr	r2, [fp, #-20]	; 0xffffffec
   12bb0:	mov	r1, r3
   12bb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bb8:	bl	4afc <rb_open@plt>
   12bbc:	mov	r3, r0
   12bc0:	str	r3, [r4]
   12bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bc8:	add	r3, r3, #1
   12bcc:	str	r3, [fp, #-24]	; 0xffffffe8
   12bd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12bd4:	ldr	r3, [fp, #4]
   12bd8:	cmp	r2, r3
   12bdc:	bge	12c04 <rb_recv_fd_buf+0x284>
   12be0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12be4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12be8:	cmp	r2, r3
   12bec:	blt	12ad8 <rb_recv_fd_buf+0x158>
   12bf0:	b	12c04 <rb_recv_fd_buf+0x284>
   12bf4:	ldr	r3, [fp, #-188]	; 0xffffff44
   12bf8:	mov	r2, #0
   12bfc:	str	r2, [r3]
   12c00:	b	12c08 <rb_recv_fd_buf+0x288>
   12c04:	nop			; (mov r0, r0)
   12c08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12c0c:	mov	r0, r3
   12c10:	sub	sp, fp, #8
   12c14:	pop	{r4, fp, pc}
   12c18:	.word	0x0000ff50
   12c1c:	.word	0x0000ff20
   12c20:	.word	0x0000ff08
   12c24:	.word	0x0000feec

00012c28 <rb_send_fd_buf>:
   12c28:	push	{r4, r5, r6, r7, r8, fp, lr}
   12c2c:	add	fp, sp, #24
   12c30:	sub	sp, sp, #84	; 0x54
   12c34:	str	r0, [fp, #-96]	; 0xffffffa0
   12c38:	str	r1, [fp, #-100]	; 0xffffff9c
   12c3c:	str	r2, [fp, #-104]	; 0xffffff98
   12c40:	str	r3, [fp, #-108]	; 0xffffff94
   12c44:	mov	r3, #48	; 0x30
   12c48:	strb	r3, [fp, #-89]	; 0xffffffa7
   12c4c:	sub	r3, fp, #80	; 0x50
   12c50:	mov	r2, #28
   12c54:	mov	r1, #0
   12c58:	mov	r0, r3
   12c5c:	bl	4694 <memset@plt>
   12c60:	ldr	r3, [fp, #4]
   12c64:	cmp	r3, #0
   12c68:	bne	12c80 <rb_send_fd_buf+0x58>
   12c6c:	sub	r3, fp, #89	; 0x59
   12c70:	str	r3, [fp, #-88]	; 0xffffffa8
   12c74:	mov	r3, #1
   12c78:	str	r3, [fp, #-84]	; 0xffffffac
   12c7c:	b	12c90 <rb_send_fd_buf+0x68>
   12c80:	ldr	r3, [fp, #-108]	; 0xffffff94
   12c84:	str	r3, [fp, #-88]	; 0xffffffa8
   12c88:	ldr	r3, [fp, #4]
   12c8c:	str	r3, [fp, #-84]	; 0xffffffac
   12c90:	sub	r3, fp, #88	; 0x58
   12c94:	str	r3, [fp, #-72]	; 0xffffffb8
   12c98:	mov	r3, #1
   12c9c:	str	r3, [fp, #-68]	; 0xffffffbc
   12ca0:	mov	r3, #0
   12ca4:	str	r3, [fp, #-80]	; 0xffffffb0
   12ca8:	mov	r3, #0
   12cac:	str	r3, [fp, #-76]	; 0xffffffb4
   12cb0:	mov	r3, #0
   12cb4:	str	r3, [fp, #-56]	; 0xffffffc8
   12cb8:	mov	r3, #0
   12cbc:	str	r3, [fp, #-64]	; 0xffffffc0
   12cc0:	mov	r3, #0
   12cc4:	str	r3, [fp, #-60]	; 0xffffffc4
   12cc8:	ldr	r3, [fp, #-104]	; 0xffffff98
   12ccc:	cmp	r3, #0
   12cd0:	ble	12e44 <rb_send_fd_buf+0x21c>
   12cd4:	mov	r3, sp
   12cd8:	mov	r8, r3
   12cdc:	ldr	r3, [fp, #-104]	; 0xffffff98
   12ce0:	str	r3, [fp, #-36]	; 0xffffffdc
   12ce4:	ldr	r3, [fp, #-104]	; 0xffffff98
   12ce8:	add	r3, r3, #1
   12cec:	lsl	r3, r3, #2
   12cf0:	sub	r3, r3, #1
   12cf4:	bic	r3, r3, #3
   12cf8:	add	r3, r3, #12
   12cfc:	str	r3, [fp, #-40]	; 0xffffffd8
   12d00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d04:	sub	r3, r1, #1
   12d08:	str	r3, [fp, #-44]	; 0xffffffd4
   12d0c:	mov	r3, r1
   12d10:	mov	r2, r3
   12d14:	mov	r3, #0
   12d18:	lsl	r7, r3, #3
   12d1c:	orr	r7, r7, r2, lsr #29
   12d20:	lsl	r6, r2, #3
   12d24:	mov	r3, r1
   12d28:	mov	r2, r3
   12d2c:	mov	r3, #0
   12d30:	lsl	r5, r3, #3
   12d34:	orr	r5, r5, r2, lsr #29
   12d38:	lsl	r4, r2, #3
   12d3c:	mov	r3, r1
   12d40:	add	r3, r3, #7
   12d44:	lsr	r3, r3, #3
   12d48:	lsl	r3, r3, #3
   12d4c:	sub	sp, sp, r3
   12d50:	mov	r3, sp
   12d54:	add	r3, r3, #0
   12d58:	str	r3, [fp, #-48]	; 0xffffffd0
   12d5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12d60:	str	r3, [fp, #-64]	; 0xffffffc0
   12d64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12d68:	str	r3, [fp, #-60]	; 0xffffffc4
   12d6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12d70:	cmp	r3, #11
   12d74:	bls	12d80 <rb_send_fd_buf+0x158>
   12d78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12d7c:	b	12d84 <rb_send_fd_buf+0x15c>
   12d80:	mov	r3, #0
   12d84:	str	r3, [fp, #-52]	; 0xffffffcc
   12d88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12d8c:	mov	r2, #1
   12d90:	str	r2, [r3, #4]
   12d94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12d98:	mov	r2, #1
   12d9c:	str	r2, [r3, #8]
   12da0:	ldr	r3, [fp, #-104]	; 0xffffff98
   12da4:	add	r3, r3, #3
   12da8:	lsl	r2, r3, #2
   12dac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12db0:	str	r2, [r3]
   12db4:	mov	r3, #0
   12db8:	str	r3, [fp, #-32]	; 0xffffffe0
   12dbc:	b	12e04 <rb_send_fd_buf+0x1dc>
   12dc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12dc4:	add	r2, r3, #12
   12dc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12dcc:	lsl	r3, r3, #2
   12dd0:	add	r4, r2, r3
   12dd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12dd8:	lsl	r3, r3, #2
   12ddc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12de0:	add	r3, r2, r3
   12de4:	ldr	r3, [r3]
   12de8:	mov	r0, r3
   12dec:	bl	4550 <rb_get_fd@plt>
   12df0:	mov	r3, r0
   12df4:	str	r3, [r4]
   12df8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12dfc:	add	r3, r3, #1
   12e00:	str	r3, [fp, #-32]	; 0xffffffe0
   12e04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12e08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12e0c:	cmp	r2, r3
   12e10:	bcc	12dc0 <rb_send_fd_buf+0x198>
   12e14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12e18:	ldr	r3, [r3]
   12e1c:	str	r3, [fp, #-60]	; 0xffffffc4
   12e20:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12e24:	bl	4550 <rb_get_fd@plt>
   12e28:	sub	r3, fp, #80	; 0x50
   12e2c:	mov	r2, #16384	; 0x4000
   12e30:	mov	r1, r3
   12e34:	bl	4778 <sendmsg@plt>
   12e38:	mov	r3, r0
   12e3c:	mov	sp, r8
   12e40:	b	12e60 <rb_send_fd_buf+0x238>
   12e44:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12e48:	bl	4550 <rb_get_fd@plt>
   12e4c:	sub	r3, fp, #80	; 0x50
   12e50:	mov	r2, #16384	; 0x4000
   12e54:	mov	r1, r3
   12e58:	bl	4778 <sendmsg@plt>
   12e5c:	mov	r3, r0
   12e60:	mov	r0, r3
   12e64:	sub	sp, fp, #24
   12e68:	pop	{r4, r5, r6, r7, r8, fp, pc}

00012e6c <rb_ipv4_from_ipv6>:
   12e6c:	push	{fp, lr}
   12e70:	add	fp, sp, #4
   12e74:	sub	sp, sp, #16
   12e78:	str	r0, [fp, #-16]
   12e7c:	str	r1, [fp, #-20]	; 0xffffffec
   12e80:	ldr	r3, [fp, #-16]
   12e84:	add	r3, r3, #8
   12e88:	mov	r2, #2
   12e8c:	ldr	r1, [pc, #244]	; 12f88 <rb_ipv4_from_ipv6+0x11c>
   12e90:	add	r1, pc, r1
   12e94:	mov	r0, r3
   12e98:	bl	44c0 <memcmp@plt>
   12e9c:	mov	r3, r0
   12ea0:	cmp	r3, #0
   12ea4:	bne	12ec8 <rb_ipv4_from_ipv6+0x5c>
   12ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   12eac:	add	r3, r3, #4
   12eb0:	ldr	r2, [fp, #-16]
   12eb4:	add	r2, r2, #8
   12eb8:	add	r2, r2, #2
   12ebc:	ldr	r2, [r2]
   12ec0:	str	r2, [r3]
   12ec4:	b	12f50 <rb_ipv4_from_ipv6+0xe4>
   12ec8:	ldr	r3, [fp, #-16]
   12ecc:	add	r3, r3, #8
   12ed0:	mov	r2, #4
   12ed4:	ldr	r1, [pc, #176]	; 12f8c <rb_ipv4_from_ipv6+0x120>
   12ed8:	add	r1, pc, r1
   12edc:	mov	r0, r3
   12ee0:	bl	44c0 <memcmp@plt>
   12ee4:	mov	r3, r0
   12ee8:	cmp	r3, #0
   12eec:	bne	12f48 <rb_ipv4_from_ipv6+0xdc>
   12ef0:	mov	r3, #0
   12ef4:	str	r3, [fp, #-8]
   12ef8:	b	12f38 <rb_ipv4_from_ipv6+0xcc>
   12efc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f00:	add	r2, r3, #4
   12f04:	ldr	r3, [fp, #-8]
   12f08:	add	r3, r2, r3
   12f0c:	ldr	r2, [fp, #-8]
   12f10:	add	r2, r2, #12
   12f14:	ldr	r1, [fp, #-16]
   12f18:	add	r2, r1, r2
   12f1c:	ldrb	r2, [r2, #8]
   12f20:	mvn	r2, r2
   12f24:	uxtb	r2, r2
   12f28:	strb	r2, [r3]
   12f2c:	ldr	r3, [fp, #-8]
   12f30:	add	r3, r3, #1
   12f34:	str	r3, [fp, #-8]
   12f38:	ldr	r3, [fp, #-8]
   12f3c:	cmp	r3, #3
   12f40:	ble	12efc <rb_ipv4_from_ipv6+0x90>
   12f44:	b	12f50 <rb_ipv4_from_ipv6+0xe4>
   12f48:	mov	r3, #0
   12f4c:	b	12f7c <rb_ipv4_from_ipv6+0x110>
   12f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f54:	ldrh	r2, [r3]
   12f58:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f5c:	strh	r2, [r3]
   12f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f64:	mov	r2, #2
   12f68:	strh	r2, [r3]
   12f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f70:	mov	r2, #0
   12f74:	strh	r2, [r3, #2]
   12f78:	mov	r3, #1
   12f7c:	mov	r0, r3
   12f80:	sub	sp, fp, #4
   12f84:	pop	{fp, pc}
   12f88:	.word	0x0000fbf8
   12f8c:	.word	0x0000fbb4

00012f90 <rb_malloc>:
   12f90:	push	{fp, lr}
   12f94:	add	fp, sp, #4
   12f98:	sub	sp, sp, #16
   12f9c:	str	r0, [fp, #-16]
   12fa0:	ldr	r1, [fp, #-16]
   12fa4:	mov	r0, #1
   12fa8:	bl	4658 <calloc@plt>
   12fac:	mov	r3, r0
   12fb0:	str	r3, [fp, #-8]
   12fb4:	ldr	r3, [fp, #-8]
   12fb8:	cmp	r3, #0
   12fbc:	moveq	r3, #1
   12fc0:	movne	r3, #0
   12fc4:	uxtb	r3, r3
   12fc8:	cmp	r3, #0
   12fcc:	beq	12fd4 <rb_malloc+0x44>
   12fd0:	bl	4a00 <rb_outofmemory@plt>
   12fd4:	ldr	r3, [fp, #-8]
   12fd8:	mov	r0, r3
   12fdc:	sub	sp, fp, #4
   12fe0:	pop	{fp, pc}

00012fe4 <rb_free>:
   12fe4:	push	{fp, lr}
   12fe8:	add	fp, sp, #4
   12fec:	sub	sp, sp, #8
   12ff0:	str	r0, [fp, #-8]
   12ff4:	ldr	r3, [fp, #-8]
   12ff8:	cmp	r3, #0
   12ffc:	movne	r3, #1
   13000:	moveq	r3, #0
   13004:	uxtb	r3, r3
   13008:	cmp	r3, #0
   1300c:	beq	13018 <rb_free+0x34>
   13010:	ldr	r0, [fp, #-8]
   13014:	bl	476c <free@plt>
   13018:	nop			; (mov r0, r0)
   1301c:	sub	sp, fp, #4
   13020:	pop	{fp, pc}

00013024 <rb_ssl_last_err>:
   13024:	push	{fp, lr}
   13028:	add	fp, sp, #4
   1302c:	sub	sp, sp, #8
   13030:	mov	r3, #0
   13034:	str	r3, [fp, #-8]
   13038:	b	13044 <rb_ssl_last_err+0x20>
   1303c:	ldr	r3, [fp, #-12]
   13040:	str	r3, [fp, #-8]
   13044:	bl	446c <ERR_get_error@plt>
   13048:	str	r0, [fp, #-12]
   1304c:	ldr	r3, [fp, #-12]
   13050:	cmp	r3, #0
   13054:	bne	1303c <rb_ssl_last_err+0x18>
   13058:	ldr	r3, [fp, #-8]
   1305c:	mov	r0, r3
   13060:	sub	sp, fp, #4
   13064:	pop	{fp, pc}

00013068 <rb_ssl_init_fd>:
   13068:	push	{r4, fp, lr}
   1306c:	add	fp, sp, #8
   13070:	sub	sp, sp, #12
   13074:	str	r0, [fp, #-16]
   13078:	str	r1, [fp, #-20]	; 0xffffffec
   1307c:	bl	13024 <rb_ssl_last_err>
   13080:	ldr	r3, [pc, #208]	; 13158 <rb_ssl_init_fd+0xf0>
   13084:	add	r3, pc, r3
   13088:	ldr	r3, [r3]
   1308c:	mov	r0, r3
   13090:	bl	47a8 <SSL_new@plt>
   13094:	mov	r2, r0
   13098:	ldr	r3, [fp, #-16]
   1309c:	str	r2, [r3, #56]	; 0x38
   130a0:	ldr	r3, [fp, #-16]
   130a4:	ldr	r3, [r3, #56]	; 0x38
   130a8:	cmp	r3, #0
   130ac:	bne	130f0 <rb_ssl_init_fd+0x88>
   130b0:	bl	13024 <rb_ssl_last_err>
   130b4:	mov	r3, r0
   130b8:	mov	r0, r3
   130bc:	bl	1344c <rb_ssl_strerror>
   130c0:	mov	r3, r0
   130c4:	mov	r2, r3
   130c8:	ldr	r3, [pc, #140]	; 1315c <rb_ssl_init_fd+0xf4>
   130cc:	add	r3, pc, r3
   130d0:	mov	r1, r3
   130d4:	ldr	r3, [pc, #132]	; 13160 <rb_ssl_init_fd+0xf8>
   130d8:	add	r3, pc, r3
   130dc:	mov	r0, r3
   130e0:	bl	4994 <rb_lib_log@plt>
   130e4:	ldr	r0, [fp, #-16]
   130e8:	bl	48d4 <rb_close@plt>
   130ec:	b	13150 <rb_ssl_init_fd+0xe8>
   130f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   130f4:	cmp	r3, #0
   130f8:	beq	13108 <rb_ssl_init_fd+0xa0>
   130fc:	cmp	r3, #1
   13100:	beq	1311c <rb_ssl_init_fd+0xb4>
   13104:	b	13130 <rb_ssl_init_fd+0xc8>
   13108:	ldr	r3, [fp, #-16]
   1310c:	ldr	r3, [r3, #56]	; 0x38
   13110:	mov	r0, r3
   13114:	bl	4a48 <SSL_set_accept_state@plt>
   13118:	b	13130 <rb_ssl_init_fd+0xc8>
   1311c:	ldr	r3, [fp, #-16]
   13120:	ldr	r3, [r3, #56]	; 0x38
   13124:	mov	r0, r3
   13128:	bl	4bec <SSL_set_connect_state@plt>
   1312c:	nop			; (mov r0, r0)
   13130:	ldr	r3, [fp, #-16]
   13134:	ldr	r4, [r3, #56]	; 0x38
   13138:	ldr	r0, [fp, #-16]
   1313c:	bl	4550 <rb_get_fd@plt>
   13140:	mov	r3, r0
   13144:	mov	r1, r3
   13148:	mov	r0, r4
   1314c:	bl	46d0 <SSL_set_fd@plt>
   13150:	sub	sp, fp, #8
   13154:	pop	{r4, fp, pc}
   13158:	.word	0x00033e74
   1315c:	.word	0x0000fdf0
   13160:	.word	0x0000fb64

00013164 <rb_ssl_accept_common>:
   13164:	push	{r4, fp, lr}
   13168:	add	fp, sp, #8
   1316c:	sub	sp, sp, #36	; 0x24
   13170:	str	r0, [fp, #-32]	; 0xffffffe0
   13174:	str	r1, [fp, #-36]	; 0xffffffdc
   13178:	bl	13024 <rb_ssl_last_err>
   1317c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13180:	ldr	r3, [r3, #56]	; 0x38
   13184:	mov	r0, r3
   13188:	bl	4838 <SSL_do_handshake@plt>
   1318c:	str	r0, [fp, #-16]
   13190:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13194:	ldr	r3, [r3, #56]	; 0x38
   13198:	ldr	r1, [fp, #-16]
   1319c:	mov	r0, r3
   131a0:	bl	4d30 <SSL_get_error@plt>
   131a4:	str	r0, [fp, #-20]	; 0xffffffec
   131a8:	ldr	r3, [fp, #-16]
   131ac:	cmp	r3, #1
   131b0:	bne	13244 <rb_ssl_accept_common+0xe0>
   131b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   131b8:	ldr	r3, [r3, #60]	; 0x3c
   131bc:	add	r2, r3, #1
   131c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   131c4:	str	r2, [r3, #60]	; 0x3c
   131c8:	mov	r3, #0
   131cc:	mov	r2, #0
   131d0:	mov	r1, #0
   131d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131d8:	bl	4454 <rb_settimeout@plt>
   131dc:	mov	r3, #0
   131e0:	mov	r2, #0
   131e4:	mov	r1, #3
   131e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131ec:	bl	4514 <rb_setselect@plt>
   131f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   131f4:	ldr	r3, [r3, #52]	; 0x34
   131f8:	str	r3, [fp, #-24]	; 0xffffffe8
   131fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13200:	mov	r2, #0
   13204:	str	r2, [r3, #52]	; 0x34
   13208:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1320c:	ldr	r4, [r3, #132]	; 0x84
   13210:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13218:	ldr	r1, [r3, #128]	; 0x80
   1321c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13220:	ldr	r3, [r3, #140]	; 0x8c
   13224:	str	r3, [sp]
   13228:	mov	r3, r1
   1322c:	mov	r1, #0
   13230:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13234:	blx	r4
   13238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1323c:	bl	12fe4 <rb_free>
   13240:	b	132f8 <rb_ssl_accept_common+0x194>
   13244:	ldr	r3, [fp, #-16]
   13248:	cmn	r3, #1
   1324c:	bne	13278 <rb_ssl_accept_common+0x114>
   13250:	ldr	r3, [fp, #-20]	; 0xffffffec
   13254:	cmp	r3, #2
   13258:	bne	13278 <rb_ssl_accept_common+0x114>
   1325c:	mov	r3, #0
   13260:	ldr	r2, [pc, #152]	; 13300 <rb_ssl_accept_common+0x19c>
   13264:	add	r2, pc, r2
   13268:	mov	r1, #1
   1326c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13270:	bl	4514 <rb_setselect@plt>
   13274:	b	132f8 <rb_ssl_accept_common+0x194>
   13278:	ldr	r3, [fp, #-16]
   1327c:	cmn	r3, #1
   13280:	bne	132ac <rb_ssl_accept_common+0x148>
   13284:	ldr	r3, [fp, #-20]	; 0xffffffec
   13288:	cmp	r3, #3
   1328c:	bne	132ac <rb_ssl_accept_common+0x148>
   13290:	mov	r3, #0
   13294:	ldr	r2, [pc, #104]	; 13304 <rb_ssl_accept_common+0x1a0>
   13298:	add	r2, pc, r2
   1329c:	mov	r1, #2
   132a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132a4:	bl	4514 <rb_setselect@plt>
   132a8:	b	132f8 <rb_ssl_accept_common+0x194>
   132ac:	bl	4d78 <__errno_location@plt>
   132b0:	mov	r2, r0
   132b4:	mov	r3, #5
   132b8:	str	r3, [r2]
   132bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   132c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   132c4:	str	r2, [r3, #64]	; 0x40
   132c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   132cc:	ldr	r3, [r3, #52]	; 0x34
   132d0:	ldr	r4, [r3, #132]	; 0x84
   132d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   132d8:	ldr	r3, [r3, #52]	; 0x34
   132dc:	ldr	r3, [r3, #140]	; 0x8c
   132e0:	str	r3, [sp]
   132e4:	mov	r3, #0
   132e8:	mov	r2, #0
   132ec:	mov	r1, #6
   132f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   132f4:	blx	r4
   132f8:	sub	sp, fp, #8
   132fc:	pop	{r4, fp, pc}
   13300:	.word	0xfffffef8
   13304:	.word	0xfffffec4

00013308 <rb_ssl_connect_common>:
   13308:	push	{fp, lr}
   1330c:	add	fp, sp, #4
   13310:	sub	sp, sp, #16
   13314:	str	r0, [fp, #-16]
   13318:	str	r1, [fp, #-20]	; 0xffffffec
   1331c:	bl	13024 <rb_ssl_last_err>
   13320:	ldr	r3, [fp, #-16]
   13324:	ldr	r3, [r3, #56]	; 0x38
   13328:	mov	r0, r3
   1332c:	bl	4838 <SSL_do_handshake@plt>
   13330:	str	r0, [fp, #-8]
   13334:	ldr	r3, [fp, #-16]
   13338:	ldr	r3, [r3, #56]	; 0x38
   1333c:	ldr	r1, [fp, #-8]
   13340:	mov	r0, r3
   13344:	bl	4d30 <SSL_get_error@plt>
   13348:	str	r0, [fp, #-12]
   1334c:	ldr	r3, [fp, #-8]
   13350:	cmp	r3, #1
   13354:	bne	133a8 <rb_ssl_connect_common+0xa0>
   13358:	ldr	r3, [fp, #-16]
   1335c:	ldr	r3, [r3, #60]	; 0x3c
   13360:	add	r2, r3, #1
   13364:	ldr	r3, [fp, #-16]
   13368:	str	r2, [r3, #60]	; 0x3c
   1336c:	mov	r3, #0
   13370:	mov	r2, #0
   13374:	mov	r1, #0
   13378:	ldr	r0, [fp, #-16]
   1337c:	bl	4454 <rb_settimeout@plt>
   13380:	mov	r3, #0
   13384:	mov	r2, #0
   13388:	mov	r1, #3
   1338c:	ldr	r0, [fp, #-16]
   13390:	bl	4514 <rb_setselect@plt>
   13394:	ldr	r2, [fp, #-20]	; 0xffffffec
   13398:	mov	r1, #0
   1339c:	ldr	r0, [fp, #-16]
   133a0:	bl	142b0 <rb_ssl_connect_realcb>
   133a4:	b	1343c <rb_ssl_connect_common+0x134>
   133a8:	ldr	r3, [fp, #-8]
   133ac:	cmn	r3, #1
   133b0:	bne	133dc <rb_ssl_connect_common+0xd4>
   133b4:	ldr	r3, [fp, #-12]
   133b8:	cmp	r3, #2
   133bc:	bne	133dc <rb_ssl_connect_common+0xd4>
   133c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   133c4:	ldr	r2, [pc, #120]	; 13444 <rb_ssl_connect_common+0x13c>
   133c8:	add	r2, pc, r2
   133cc:	mov	r1, #1
   133d0:	ldr	r0, [fp, #-16]
   133d4:	bl	4514 <rb_setselect@plt>
   133d8:	b	1343c <rb_ssl_connect_common+0x134>
   133dc:	ldr	r3, [fp, #-8]
   133e0:	cmn	r3, #1
   133e4:	bne	13410 <rb_ssl_connect_common+0x108>
   133e8:	ldr	r3, [fp, #-12]
   133ec:	cmp	r3, #3
   133f0:	bne	13410 <rb_ssl_connect_common+0x108>
   133f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   133f8:	ldr	r2, [pc, #72]	; 13448 <rb_ssl_connect_common+0x140>
   133fc:	add	r2, pc, r2
   13400:	mov	r1, #2
   13404:	ldr	r0, [fp, #-16]
   13408:	bl	4514 <rb_setselect@plt>
   1340c:	b	1343c <rb_ssl_connect_common+0x134>
   13410:	bl	4d78 <__errno_location@plt>
   13414:	mov	r2, r0
   13418:	mov	r3, #5
   1341c:	str	r3, [r2]
   13420:	ldr	r2, [fp, #-12]
   13424:	ldr	r3, [fp, #-16]
   13428:	str	r2, [r3, #64]	; 0x40
   1342c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13430:	mov	r1, #6
   13434:	ldr	r0, [fp, #-16]
   13438:	bl	142b0 <rb_ssl_connect_realcb>
   1343c:	sub	sp, fp, #4
   13440:	pop	{fp, pc}
   13444:	.word	0xffffff38
   13448:	.word	0xffffff04

0001344c <rb_ssl_strerror>:
   1344c:	push	{fp, lr}
   13450:	add	fp, sp, #4
   13454:	sub	sp, sp, #8
   13458:	str	r0, [fp, #-8]
   1345c:	mov	r2, #512	; 0x200
   13460:	ldr	r3, [pc, #32]	; 13488 <rb_ssl_strerror+0x3c>
   13464:	add	r3, pc, r3
   13468:	mov	r1, r3
   1346c:	ldr	r0, [fp, #-8]
   13470:	bl	4610 <ERR_error_string_n@plt>
   13474:	ldr	r3, [pc, #16]	; 1348c <rb_ssl_strerror+0x40>
   13478:	add	r3, pc, r3
   1347c:	mov	r0, r3
   13480:	sub	sp, fp, #4
   13484:	pop	{fp, pc}
   13488:	.word	0x00033a98
   1348c:	.word	0x00033a84

00013490 <verify_accept_all_cb>:
   13490:	push	{fp}		; (str fp, [sp, #-4]!)
   13494:	add	fp, sp, #0
   13498:	sub	sp, sp, #12
   1349c:	str	r0, [fp, #-8]
   134a0:	str	r1, [fp, #-12]
   134a4:	mov	r3, #1
   134a8:	mov	r0, r3
   134ac:	add	sp, fp, #0
   134b0:	pop	{fp}		; (ldr fp, [sp], #4)
   134b4:	bx	lr

000134b8 <rb_ssl_read_or_write>:
   134b8:	push	{fp, lr}
   134bc:	add	fp, sp, #4
   134c0:	sub	sp, sp, #24
   134c4:	str	r0, [fp, #-16]
   134c8:	str	r1, [fp, #-20]	; 0xffffffec
   134cc:	str	r2, [fp, #-24]	; 0xffffffe8
   134d0:	str	r3, [fp, #-28]	; 0xffffffe4
   134d4:	bl	13024 <rb_ssl_last_err>
   134d8:	ldr	r3, [fp, #-16]
   134dc:	cmp	r3, #0
   134e0:	bne	13504 <rb_ssl_read_or_write+0x4c>
   134e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   134e8:	ldr	r3, [r3, #56]	; 0x38
   134ec:	ldr	r2, [fp, #4]
   134f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134f4:	mov	r0, r3
   134f8:	bl	47f0 <SSL_read@plt>
   134fc:	str	r0, [fp, #-8]
   13500:	b	13520 <rb_ssl_read_or_write+0x68>
   13504:	ldr	r3, [fp, #-20]	; 0xffffffec
   13508:	ldr	r3, [r3, #56]	; 0x38
   1350c:	ldr	r2, [fp, #4]
   13510:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13514:	mov	r0, r3
   13518:	bl	4664 <SSL_write@plt>
   1351c:	str	r0, [fp, #-8]
   13520:	ldr	r3, [fp, #-8]
   13524:	cmp	r3, #0
   13528:	bge	13610 <rb_ssl_read_or_write+0x158>
   1352c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13530:	ldr	r3, [r3, #56]	; 0x38
   13534:	ldr	r1, [fp, #-8]
   13538:	mov	r0, r3
   1353c:	bl	4d30 <SSL_get_error@plt>
   13540:	mov	r3, r0
   13544:	sub	r3, r3, #2
   13548:	cmp	r3, #4
   1354c:	addls	pc, pc, r3, lsl #2
   13550:	b	135c8 <rb_ssl_read_or_write+0x110>
   13554:	b	13568 <rb_ssl_read_or_write+0xb0>
   13558:	b	13580 <rb_ssl_read_or_write+0xc8>
   1355c:	b	135c8 <rb_ssl_read_or_write+0x110>
   13560:	b	135a0 <rb_ssl_read_or_write+0xe8>
   13564:	b	13598 <rb_ssl_read_or_write+0xe0>
   13568:	bl	4d78 <__errno_location@plt>
   1356c:	mov	r2, r0
   13570:	mov	r3, #11
   13574:	str	r3, [r2]
   13578:	mvn	r3, #2
   1357c:	b	13614 <rb_ssl_read_or_write+0x15c>
   13580:	bl	4d78 <__errno_location@plt>
   13584:	mov	r2, r0
   13588:	mov	r3, #11
   1358c:	str	r3, [r2]
   13590:	mvn	r3, #3
   13594:	b	13614 <rb_ssl_read_or_write+0x15c>
   13598:	mov	r3, #0
   1359c:	b	13614 <rb_ssl_read_or_write+0x15c>
   135a0:	bl	13024 <rb_ssl_last_err>
   135a4:	str	r0, [fp, #-12]
   135a8:	ldr	r3, [fp, #-12]
   135ac:	cmp	r3, #0
   135b0:	bne	135d4 <rb_ssl_read_or_write+0x11c>
   135b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   135b8:	mov	r2, #0
   135bc:	str	r2, [r3, #64]	; 0x40
   135c0:	mvn	r3, #0
   135c4:	b	13614 <rb_ssl_read_or_write+0x15c>
   135c8:	bl	13024 <rb_ssl_last_err>
   135cc:	str	r0, [fp, #-12]
   135d0:	b	135d8 <rb_ssl_read_or_write+0x120>
   135d4:	nop			; (mov r0, r0)
   135d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   135dc:	ldr	r2, [fp, #-12]
   135e0:	str	r2, [r3, #64]	; 0x40
   135e4:	ldr	r3, [fp, #-12]
   135e8:	cmp	r3, #0
   135ec:	beq	13608 <rb_ssl_read_or_write+0x150>
   135f0:	bl	4d78 <__errno_location@plt>
   135f4:	mov	r2, r0
   135f8:	mov	r3, #5
   135fc:	str	r3, [r2]
   13600:	mvn	r3, #1
   13604:	b	13614 <rb_ssl_read_or_write+0x15c>
   13608:	mvn	r3, #0
   1360c:	b	13614 <rb_ssl_read_or_write+0x15c>
   13610:	ldr	r3, [fp, #-8]
   13614:	mov	r0, r3
   13618:	sub	sp, fp, #4
   1361c:	pop	{fp, pc}

00013620 <make_certfp>:
   13620:	push	{r4, fp, lr}
   13624:	add	fp, sp, #8
   13628:	sub	sp, sp, #44	; 0x2c
   1362c:	str	r0, [fp, #-32]	; 0xffffffe0
   13630:	str	r1, [fp, #-36]	; 0xffffffdc
   13634:	str	r2, [fp, #-40]	; 0xffffffd8
   13638:	ldr	r4, [pc, #432]	; 137f0 <make_certfp+0x1d0>
   1363c:	add	r4, pc, r4
   13640:	mov	r3, #0
   13644:	str	r3, [fp, #-28]	; 0xffffffe4
   13648:	mov	r3, #0
   1364c:	str	r3, [fp, #-16]
   13650:	mov	r3, #0
   13654:	str	r3, [fp, #-20]	; 0xffffffec
   13658:	mov	r3, #0
   1365c:	str	r3, [fp, #-24]	; 0xffffffe8
   13660:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13664:	cmp	r3, #2
   13668:	beq	136f4 <make_certfp+0xd4>
   1366c:	cmp	r3, #2
   13670:	bgt	13688 <make_certfp+0x68>
   13674:	cmp	r3, #0
   13678:	beq	136a4 <make_certfp+0x84>
   1367c:	cmp	r3, #1
   13680:	beq	136cc <make_certfp+0xac>
   13684:	b	13774 <make_certfp+0x154>
   13688:	ldr	r2, [pc, #356]	; 137f4 <make_certfp+0x1d4>
   1368c:	cmp	r3, r2
   13690:	beq	1371c <make_certfp+0xfc>
   13694:	ldr	r2, [pc, #348]	; 137f8 <make_certfp+0x1d8>
   13698:	cmp	r3, r2
   1369c:	beq	13748 <make_certfp+0x128>
   136a0:	b	13774 <make_certfp+0x154>
   136a4:	mov	r3, #20
   136a8:	str	r3, [fp, #-28]	; 0xffffffe4
   136ac:	bl	4964 <EVP_sha1@plt>
   136b0:	str	r0, [fp, #-16]
   136b4:	ldr	r3, [pc, #320]	; 137fc <make_certfp+0x1dc>
   136b8:	ldr	r3, [r4, r3]
   136bc:	str	r3, [fp, #-20]	; 0xffffffec
   136c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136c4:	str	r3, [fp, #-24]	; 0xffffffe8
   136c8:	b	1377c <make_certfp+0x15c>
   136cc:	mov	r3, #32
   136d0:	str	r3, [fp, #-28]	; 0xffffffe4
   136d4:	bl	4c58 <EVP_sha256@plt>
   136d8:	str	r0, [fp, #-16]
   136dc:	ldr	r3, [pc, #280]	; 137fc <make_certfp+0x1dc>
   136e0:	ldr	r3, [r4, r3]
   136e4:	str	r3, [fp, #-20]	; 0xffffffec
   136e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136ec:	str	r3, [fp, #-24]	; 0xffffffe8
   136f0:	b	1377c <make_certfp+0x15c>
   136f4:	mov	r3, #64	; 0x40
   136f8:	str	r3, [fp, #-28]	; 0xffffffe4
   136fc:	bl	4c28 <EVP_sha512@plt>
   13700:	str	r0, [fp, #-16]
   13704:	ldr	r3, [pc, #240]	; 137fc <make_certfp+0x1dc>
   13708:	ldr	r3, [r4, r3]
   1370c:	str	r3, [fp, #-20]	; 0xffffffec
   13710:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13714:	str	r3, [fp, #-24]	; 0xffffffe8
   13718:	b	1377c <make_certfp+0x15c>
   1371c:	mov	r3, #32
   13720:	str	r3, [fp, #-28]	; 0xffffffe4
   13724:	bl	4c58 <EVP_sha256@plt>
   13728:	str	r0, [fp, #-16]
   1372c:	ldr	r3, [pc, #204]	; 13800 <make_certfp+0x1e0>
   13730:	ldr	r3, [r4, r3]
   13734:	str	r3, [fp, #-20]	; 0xffffffec
   13738:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1373c:	bl	45a4 <X509_get_X509_PUBKEY@plt>
   13740:	str	r0, [fp, #-24]	; 0xffffffe8
   13744:	b	1377c <make_certfp+0x15c>
   13748:	mov	r3, #64	; 0x40
   1374c:	str	r3, [fp, #-28]	; 0xffffffe4
   13750:	bl	4c28 <EVP_sha512@plt>
   13754:	str	r0, [fp, #-16]
   13758:	ldr	r3, [pc, #160]	; 13800 <make_certfp+0x1e0>
   1375c:	ldr	r3, [r4, r3]
   13760:	str	r3, [fp, #-20]	; 0xffffffec
   13764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13768:	bl	45a4 <X509_get_X509_PUBKEY@plt>
   1376c:	str	r0, [fp, #-24]	; 0xffffffe8
   13770:	b	1377c <make_certfp+0x15c>
   13774:	mov	r3, #0
   13778:	b	137e4 <make_certfp+0x1c4>
   1377c:	sub	r3, fp, #28
   13780:	str	r3, [sp]
   13784:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13788:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1378c:	ldr	r1, [fp, #-16]
   13790:	ldr	r0, [fp, #-20]	; 0xffffffec
   13794:	bl	4a84 <ASN1_item_digest@plt>
   13798:	mov	r3, r0
   1379c:	cmp	r3, #1
   137a0:	beq	137e0 <make_certfp+0x1c0>
   137a4:	bl	13024 <rb_ssl_last_err>
   137a8:	mov	r3, r0
   137ac:	mov	r0, r3
   137b0:	bl	1344c <rb_ssl_strerror>
   137b4:	mov	r3, r0
   137b8:	mov	r2, r3
   137bc:	ldr	r3, [pc, #64]	; 13804 <make_certfp+0x1e4>
   137c0:	add	r3, pc, r3
   137c4:	mov	r1, r3
   137c8:	ldr	r3, [pc, #56]	; 13808 <make_certfp+0x1e8>
   137cc:	add	r3, pc, r3
   137d0:	mov	r0, r3
   137d4:	bl	4994 <rb_lib_log@plt>
   137d8:	mov	r3, #0
   137dc:	b	137e4 <make_certfp+0x1c4>
   137e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   137e4:	mov	r0, r3
   137e8:	sub	sp, fp, #8
   137ec:	pop	{r4, fp, pc}
   137f0:	.word	0x000209bc
   137f4:	.word	0x00001001
   137f8:	.word	0x00001002
   137fc:	.word	0x00000414
   13800:	.word	0x00000420
   13804:	.word	0x0000f70c
   13808:	.word	0x0000f480

0001380c <rb_ssl_shutdown>:
   1380c:	push	{fp, lr}
   13810:	add	fp, sp, #4
   13814:	sub	sp, sp, #24
   13818:	str	r0, [fp, #-24]	; 0xffffffe8
   1381c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13820:	cmp	r3, #0
   13824:	beq	138d0 <rb_ssl_shutdown+0xc4>
   13828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1382c:	ldr	r3, [r3, #56]	; 0x38
   13830:	cmp	r3, #0
   13834:	beq	138d0 <rb_ssl_shutdown+0xc4>
   13838:	bl	13024 <rb_ssl_last_err>
   1383c:	mov	r3, #0
   13840:	str	r3, [fp, #-8]
   13844:	b	138a4 <rb_ssl_shutdown+0x98>
   13848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1384c:	ldr	r3, [r3, #56]	; 0x38
   13850:	mov	r0, r3
   13854:	bl	4b20 <SSL_shutdown@plt>
   13858:	str	r0, [fp, #-12]
   1385c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13860:	ldr	r3, [r3, #56]	; 0x38
   13864:	ldr	r1, [fp, #-12]
   13868:	mov	r0, r3
   1386c:	bl	4d30 <SSL_get_error@plt>
   13870:	str	r0, [fp, #-16]
   13874:	ldr	r3, [fp, #-12]
   13878:	cmp	r3, #0
   1387c:	bge	138b0 <rb_ssl_shutdown+0xa4>
   13880:	ldr	r3, [fp, #-16]
   13884:	cmp	r3, #2
   13888:	beq	13898 <rb_ssl_shutdown+0x8c>
   1388c:	ldr	r3, [fp, #-16]
   13890:	cmp	r3, #3
   13894:	bne	138b0 <rb_ssl_shutdown+0xa4>
   13898:	ldr	r3, [fp, #-8]
   1389c:	add	r3, r3, #1
   138a0:	str	r3, [fp, #-8]
   138a4:	ldr	r3, [fp, #-8]
   138a8:	cmp	r3, #3
   138ac:	ble	13848 <rb_ssl_shutdown+0x3c>
   138b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   138b4:	ldr	r3, [r3, #56]	; 0x38
   138b8:	mov	r0, r3
   138bc:	bl	49dc <SSL_free@plt>
   138c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   138c4:	mov	r2, #0
   138c8:	str	r2, [r3, #56]	; 0x38
   138cc:	b	138d4 <rb_ssl_shutdown+0xc8>
   138d0:	nop			; (mov r0, r0)
   138d4:	sub	sp, fp, #4
   138d8:	pop	{fp, pc}

000138dc <rb_init_ssl>:
   138dc:	push	{fp, lr}
   138e0:	add	fp, sp, #4
   138e4:	ldr	r3, [pc, #32]	; 1390c <rb_init_ssl+0x30>
   138e8:	add	r3, pc, r3
   138ec:	mov	r1, r3
   138f0:	ldr	r3, [pc, #24]	; 13910 <rb_init_ssl+0x34>
   138f4:	add	r3, pc, r3
   138f8:	mov	r0, r3
   138fc:	bl	4994 <rb_lib_log@plt>
   13900:	mov	r3, #1
   13904:	mov	r0, r3
   13908:	pop	{fp, pc}
   1390c:	.word	0x0000f5f0
   13910:	.word	0x0000f374

00013914 <rb_setup_ssl_server>:
   13914:	push	{fp, lr}
   13918:	add	fp, sp, #4
   1391c:	sub	sp, sp, #32
   13920:	str	r0, [fp, #-24]	; 0xffffffe8
   13924:	str	r1, [fp, #-28]	; 0xffffffe4
   13928:	str	r2, [fp, #-32]	; 0xffffffe0
   1392c:	str	r3, [fp, #-36]	; 0xffffffdc
   13930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13934:	cmp	r3, #0
   13938:	bne	13960 <rb_setup_ssl_server+0x4c>
   1393c:	ldr	r3, [pc, #916]	; 13cd8 <rb_setup_ssl_server+0x3c4>
   13940:	add	r3, pc, r3
   13944:	mov	r1, r3
   13948:	ldr	r3, [pc, #908]	; 13cdc <rb_setup_ssl_server+0x3c8>
   1394c:	add	r3, pc, r3
   13950:	mov	r0, r3
   13954:	bl	4994 <rb_lib_log@plt>
   13958:	mov	r3, #0
   1395c:	b	13ccc <rb_setup_ssl_server+0x3b8>
   13960:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13964:	cmp	r3, #0
   13968:	bne	13974 <rb_setup_ssl_server+0x60>
   1396c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13970:	str	r3, [fp, #-28]	; 0xffffffe4
   13974:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13978:	cmp	r3, #0
   1397c:	bne	1398c <rb_setup_ssl_server+0x78>
   13980:	ldr	r3, [pc, #856]	; 13ce0 <rb_setup_ssl_server+0x3cc>
   13984:	add	r3, pc, r3
   13988:	str	r3, [fp, #-36]	; 0xffffffdc
   1398c:	bl	13024 <rb_ssl_last_err>
   13990:	bl	43dc <TLS_method@plt>
   13994:	mov	r3, r0
   13998:	mov	r0, r3
   1399c:	bl	4ba4 <SSL_CTX_new@plt>
   139a0:	str	r0, [fp, #-8]
   139a4:	ldr	r3, [fp, #-8]
   139a8:	cmp	r3, #0
   139ac:	bne	139ec <rb_setup_ssl_server+0xd8>
   139b0:	bl	13024 <rb_ssl_last_err>
   139b4:	mov	r3, r0
   139b8:	mov	r0, r3
   139bc:	bl	1344c <rb_ssl_strerror>
   139c0:	mov	r3, r0
   139c4:	mov	r2, r3
   139c8:	ldr	r3, [pc, #788]	; 13ce4 <rb_setup_ssl_server+0x3d0>
   139cc:	add	r3, pc, r3
   139d0:	mov	r1, r3
   139d4:	ldr	r3, [pc, #780]	; 13ce8 <rb_setup_ssl_server+0x3d4>
   139d8:	add	r3, pc, r3
   139dc:	mov	r0, r3
   139e0:	bl	4994 <rb_lib_log@plt>
   139e4:	mov	r3, #0
   139e8:	b	13ccc <rb_setup_ssl_server+0x3b8>
   139ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   139f0:	ldr	r0, [fp, #-8]
   139f4:	bl	48a4 <SSL_CTX_use_certificate_chain_file@plt>
   139f8:	mov	r3, r0
   139fc:	cmp	r3, #1
   13a00:	beq	13a40 <rb_setup_ssl_server+0x12c>
   13a04:	bl	13024 <rb_ssl_last_err>
   13a08:	mov	r3, r0
   13a0c:	mov	r0, r3
   13a10:	bl	1344c <rb_ssl_strerror>
   13a14:	mov	r3, r0
   13a18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13a1c:	ldr	r1, [pc, #712]	; 13cec <rb_setup_ssl_server+0x3d8>
   13a20:	add	r1, pc, r1
   13a24:	ldr	r0, [pc, #708]	; 13cf0 <rb_setup_ssl_server+0x3dc>
   13a28:	add	r0, pc, r0
   13a2c:	bl	4994 <rb_lib_log@plt>
   13a30:	ldr	r0, [fp, #-8]
   13a34:	bl	44cc <SSL_CTX_free@plt>
   13a38:	mov	r3, #0
   13a3c:	b	13ccc <rb_setup_ssl_server+0x3b8>
   13a40:	mov	r2, #1
   13a44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a48:	ldr	r0, [fp, #-8]
   13a4c:	bl	49a0 <SSL_CTX_use_PrivateKey_file@plt>
   13a50:	mov	r3, r0
   13a54:	cmp	r3, #1
   13a58:	beq	13a98 <rb_setup_ssl_server+0x184>
   13a5c:	bl	13024 <rb_ssl_last_err>
   13a60:	mov	r3, r0
   13a64:	mov	r0, r3
   13a68:	bl	1344c <rb_ssl_strerror>
   13a6c:	mov	r3, r0
   13a70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13a74:	ldr	r1, [pc, #632]	; 13cf4 <rb_setup_ssl_server+0x3e0>
   13a78:	add	r1, pc, r1
   13a7c:	ldr	r0, [pc, #628]	; 13cf8 <rb_setup_ssl_server+0x3e4>
   13a80:	add	r0, pc, r0
   13a84:	bl	4994 <rb_lib_log@plt>
   13a88:	ldr	r0, [fp, #-8]
   13a8c:	bl	44cc <SSL_CTX_free@plt>
   13a90:	mov	r3, #0
   13a94:	b	13ccc <rb_setup_ssl_server+0x3b8>
   13a98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13a9c:	cmp	r3, #0
   13aa0:	bne	13ac4 <rb_setup_ssl_server+0x1b0>
   13aa4:	ldr	r3, [pc, #592]	; 13cfc <rb_setup_ssl_server+0x3e8>
   13aa8:	add	r3, pc, r3
   13aac:	mov	r1, r3
   13ab0:	ldr	r3, [pc, #584]	; 13d00 <rb_setup_ssl_server+0x3ec>
   13ab4:	add	r3, pc, r3
   13ab8:	mov	r0, r3
   13abc:	bl	4994 <rb_lib_log@plt>
   13ac0:	b	13ba4 <rb_setup_ssl_server+0x290>
   13ac4:	ldr	r3, [pc, #568]	; 13d04 <rb_setup_ssl_server+0x3f0>
   13ac8:	add	r3, pc, r3
   13acc:	mov	r1, r3
   13ad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ad4:	bl	467c <fopen@plt>
   13ad8:	str	r0, [fp, #-12]
   13adc:	mov	r3, #0
   13ae0:	str	r3, [fp, #-16]
   13ae4:	ldr	r3, [fp, #-12]
   13ae8:	cmp	r3, #0
   13aec:	bne	13b24 <rb_setup_ssl_server+0x210>
   13af0:	bl	4d78 <__errno_location@plt>
   13af4:	mov	r3, r0
   13af8:	ldr	r3, [r3]
   13afc:	mov	r0, r3
   13b00:	bl	440c <strerror@plt>
   13b04:	mov	r3, r0
   13b08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13b0c:	ldr	r1, [pc, #500]	; 13d08 <rb_setup_ssl_server+0x3f4>
   13b10:	add	r1, pc, r1
   13b14:	ldr	r0, [pc, #496]	; 13d0c <rb_setup_ssl_server+0x3f8>
   13b18:	add	r0, pc, r0
   13b1c:	bl	4994 <rb_lib_log@plt>
   13b20:	b	13ba4 <rb_setup_ssl_server+0x290>
   13b24:	sub	r1, fp, #16
   13b28:	mov	r3, #0
   13b2c:	mov	r2, #0
   13b30:	ldr	r0, [fp, #-12]
   13b34:	bl	4a60 <PEM_read_DHparams@plt>
   13b38:	mov	r3, r0
   13b3c:	cmp	r3, #0
   13b40:	bne	13b7c <rb_setup_ssl_server+0x268>
   13b44:	bl	13024 <rb_ssl_last_err>
   13b48:	mov	r3, r0
   13b4c:	mov	r0, r3
   13b50:	bl	1344c <rb_ssl_strerror>
   13b54:	mov	r3, r0
   13b58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13b5c:	ldr	r1, [pc, #428]	; 13d10 <rb_setup_ssl_server+0x3fc>
   13b60:	add	r1, pc, r1
   13b64:	ldr	r0, [pc, #424]	; 13d14 <rb_setup_ssl_server+0x400>
   13b68:	add	r0, pc, r0
   13b6c:	bl	4994 <rb_lib_log@plt>
   13b70:	ldr	r0, [fp, #-12]
   13b74:	bl	45ec <fclose@plt>
   13b78:	b	13ba4 <rb_setup_ssl_server+0x290>
   13b7c:	ldr	r3, [fp, #-16]
   13b80:	mov	r2, #0
   13b84:	mov	r1, #3
   13b88:	ldr	r0, [fp, #-8]
   13b8c:	bl	46dc <SSL_CTX_ctrl@plt>
   13b90:	ldr	r3, [fp, #-16]
   13b94:	mov	r0, r3
   13b98:	bl	4ae4 <DH_free@plt>
   13b9c:	ldr	r0, [fp, #-12]
   13ba0:	bl	45ec <fclose@plt>
   13ba4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ba8:	ldr	r0, [fp, #-8]
   13bac:	bl	4460 <SSL_CTX_set_cipher_list@plt>
   13bb0:	mov	r3, r0
   13bb4:	cmp	r3, #1
   13bb8:	beq	13be8 <rb_setup_ssl_server+0x2d4>
   13bbc:	ldr	r3, [pc, #340]	; 13d18 <rb_setup_ssl_server+0x404>
   13bc0:	add	r3, pc, r3
   13bc4:	mov	r1, r3
   13bc8:	ldr	r3, [pc, #332]	; 13d1c <rb_setup_ssl_server+0x408>
   13bcc:	add	r3, pc, r3
   13bd0:	mov	r0, r3
   13bd4:	bl	4994 <rb_lib_log@plt>
   13bd8:	ldr	r0, [fp, #-8]
   13bdc:	bl	44cc <SSL_CTX_free@plt>
   13be0:	mov	r3, #0
   13be4:	b	13ccc <rb_setup_ssl_server+0x3b8>
   13be8:	mov	r3, #0
   13bec:	mov	r2, #0
   13bf0:	mov	r1, #44	; 0x2c
   13bf4:	ldr	r0, [fp, #-8]
   13bf8:	bl	46dc <SSL_CTX_ctrl@plt>
   13bfc:	ldr	r3, [pc, #284]	; 13d20 <rb_setup_ssl_server+0x40c>
   13c00:	add	r3, pc, r3
   13c04:	mov	r2, r3
   13c08:	mov	r1, #5
   13c0c:	ldr	r0, [fp, #-8]
   13c10:	bl	4da8 <SSL_CTX_set_verify@plt>
   13c14:	mov	r1, #2048	; 0x800
   13c18:	ldr	r0, [fp, #-8]
   13c1c:	bl	4580 <SSL_CTX_clear_options@plt>
   13c20:	mov	r1, #67108864	; 0x4000000
   13c24:	ldr	r0, [fp, #-8]
   13c28:	bl	48bc <SSL_CTX_set_options@plt>
   13c2c:	mov	r1, #16384	; 0x4000
   13c30:	ldr	r0, [fp, #-8]
   13c34:	bl	48bc <SSL_CTX_set_options@plt>
   13c38:	mov	r1, #4194304	; 0x400000
   13c3c:	ldr	r0, [fp, #-8]
   13c40:	bl	48bc <SSL_CTX_set_options@plt>
   13c44:	mov	r1, #0
   13c48:	ldr	r0, [fp, #-8]
   13c4c:	bl	48bc <SSL_CTX_set_options@plt>
   13c50:	mov	r1, #0
   13c54:	ldr	r0, [fp, #-8]
   13c58:	bl	48bc <SSL_CTX_set_options@plt>
   13c5c:	ldr	r3, [pc, #192]	; 13d24 <rb_setup_ssl_server+0x410>
   13c60:	add	r3, pc, r3
   13c64:	mov	r2, #0
   13c68:	mov	r1, #92	; 0x5c
   13c6c:	ldr	r0, [fp, #-8]
   13c70:	bl	46dc <SSL_CTX_ctrl@plt>
   13c74:	ldr	r3, [pc, #172]	; 13d28 <rb_setup_ssl_server+0x414>
   13c78:	add	r3, pc, r3
   13c7c:	ldr	r3, [r3]
   13c80:	cmp	r3, #0
   13c84:	beq	13c9c <rb_setup_ssl_server+0x388>
   13c88:	ldr	r3, [pc, #156]	; 13d2c <rb_setup_ssl_server+0x418>
   13c8c:	add	r3, pc, r3
   13c90:	ldr	r3, [r3]
   13c94:	mov	r0, r3
   13c98:	bl	44cc <SSL_CTX_free@plt>
   13c9c:	ldr	r3, [pc, #140]	; 13d30 <rb_setup_ssl_server+0x41c>
   13ca0:	add	r3, pc, r3
   13ca4:	ldr	r2, [fp, #-8]
   13ca8:	str	r2, [r3]
   13cac:	ldr	r3, [pc, #128]	; 13d34 <rb_setup_ssl_server+0x420>
   13cb0:	add	r3, pc, r3
   13cb4:	mov	r1, r3
   13cb8:	ldr	r3, [pc, #120]	; 13d38 <rb_setup_ssl_server+0x424>
   13cbc:	add	r3, pc, r3
   13cc0:	mov	r0, r3
   13cc4:	bl	4994 <rb_lib_log@plt>
   13cc8:	mov	r3, #1
   13ccc:	mov	r0, r3
   13cd0:	sub	sp, fp, #4
   13cd4:	pop	{fp, pc}
   13cd8:	.word	0x0000f5a4
   13cdc:	.word	0x0000f33c
   13ce0:	.word	0x0000f128
   13ce4:	.word	0x0000f518
   13ce8:	.word	0x0000f2d4
   13cec:	.word	0x0000f4c4
   13cf0:	.word	0x0000f298
   13cf4:	.word	0x0000f46c
   13cf8:	.word	0x0000f274
   13cfc:	.word	0x0000f43c
   13d00:	.word	0x0000f26c
   13d04:	.word	0x0000f27c
   13d08:	.word	0x0000f3d4
   13d0c:	.word	0x0000f230
   13d10:	.word	0x0000f384
   13d14:	.word	0x0000f1f8
   13d18:	.word	0x0000f324
   13d1c:	.word	0x0000f1b8
   13d20:	.word	0xfffff888
   13d24:	.word	0x00020c34
   13d28:	.word	0x00033280
   13d2c:	.word	0x0003326c
   13d30:	.word	0x00033258
   13d34:	.word	0x0000f234
   13d38:	.word	0x0000f108

00013d3c <rb_init_prng>:
   13d3c:	push	{fp, lr}
   13d40:	add	fp, sp, #4
   13d44:	sub	sp, sp, #8
   13d48:	str	r0, [fp, #-8]
   13d4c:	str	r1, [fp, #-12]
   13d50:	bl	13024 <rb_ssl_last_err>
   13d54:	ldr	r3, [fp, #-12]
   13d58:	cmp	r3, #0
   13d5c:	bne	13dac <rb_init_prng+0x70>
   13d60:	mvn	r1, #0
   13d64:	ldr	r0, [fp, #-8]
   13d68:	bl	449c <RAND_load_file@plt>
   13d6c:	mov	r3, r0
   13d70:	cmp	r3, #0
   13d74:	bge	13dac <rb_init_prng+0x70>
   13d78:	bl	13024 <rb_ssl_last_err>
   13d7c:	mov	r3, r0
   13d80:	mov	r0, r3
   13d84:	bl	1344c <rb_ssl_strerror>
   13d88:	mov	r3, r0
   13d8c:	mov	r2, r3
   13d90:	ldr	r3, [pc, #140]	; 13e24 <rb_init_prng+0xe8>
   13d94:	add	r3, pc, r3
   13d98:	mov	r1, r3
   13d9c:	ldr	r3, [pc, #132]	; 13e28 <rb_init_prng+0xec>
   13da0:	add	r3, pc, r3
   13da4:	mov	r0, r3
   13da8:	bl	4994 <rb_lib_log@plt>
   13dac:	bl	4c40 <RAND_status@plt>
   13db0:	mov	r3, r0
   13db4:	cmp	r3, #1
   13db8:	beq	13df8 <rb_init_prng+0xbc>
   13dbc:	bl	13024 <rb_ssl_last_err>
   13dc0:	mov	r3, r0
   13dc4:	mov	r0, r3
   13dc8:	bl	1344c <rb_ssl_strerror>
   13dcc:	mov	r3, r0
   13dd0:	mov	r2, r3
   13dd4:	ldr	r3, [pc, #80]	; 13e2c <rb_init_prng+0xf0>
   13dd8:	add	r3, pc, r3
   13ddc:	mov	r1, r3
   13de0:	ldr	r3, [pc, #72]	; 13e30 <rb_init_prng+0xf4>
   13de4:	add	r3, pc, r3
   13de8:	mov	r0, r3
   13dec:	bl	4994 <rb_lib_log@plt>
   13df0:	mov	r3, #0
   13df4:	b	13e18 <rb_init_prng+0xdc>
   13df8:	ldr	r3, [pc, #52]	; 13e34 <rb_init_prng+0xf8>
   13dfc:	add	r3, pc, r3
   13e00:	mov	r1, r3
   13e04:	ldr	r3, [pc, #44]	; 13e38 <rb_init_prng+0xfc>
   13e08:	add	r3, pc, r3
   13e0c:	mov	r0, r3
   13e10:	bl	4994 <rb_lib_log@plt>
   13e14:	mov	r3, #1
   13e18:	mov	r0, r3
   13e1c:	sub	sp, fp, #4
   13e20:	pop	{fp, pc}
   13e24:	.word	0x0000f164
   13e28:	.word	0x0000f048
   13e2c:	.word	0x0000f120
   13e30:	.word	0x0000f01c
   13e34:	.word	0x0000f0fc
   13e38:	.word	0x0000f00c

00013e3c <rb_get_random>:
   13e3c:	push	{fp, lr}
   13e40:	add	fp, sp, #4
   13e44:	sub	sp, sp, #8
   13e48:	str	r0, [fp, #-8]
   13e4c:	str	r1, [fp, #-12]
   13e50:	bl	13024 <rb_ssl_last_err>
   13e54:	ldr	r3, [fp, #-12]
   13e58:	mov	r1, r3
   13e5c:	ldr	r0, [fp, #-8]
   13e60:	bl	4b5c <RAND_bytes@plt>
   13e64:	mov	r3, r0
   13e68:	cmp	r3, #1
   13e6c:	beq	13eac <rb_get_random+0x70>
   13e70:	bl	13024 <rb_ssl_last_err>
   13e74:	mov	r3, r0
   13e78:	mov	r0, r3
   13e7c:	bl	1344c <rb_ssl_strerror>
   13e80:	mov	r3, r0
   13e84:	mov	r2, r3
   13e88:	ldr	r3, [pc, #44]	; 13ebc <rb_get_random+0x80>
   13e8c:	add	r3, pc, r3
   13e90:	mov	r1, r3
   13e94:	ldr	r3, [pc, #36]	; 13ec0 <rb_get_random+0x84>
   13e98:	add	r3, pc, r3
   13e9c:	mov	r0, r3
   13ea0:	bl	4994 <rb_lib_log@plt>
   13ea4:	mov	r3, #0
   13ea8:	b	13eb0 <rb_get_random+0x74>
   13eac:	mov	r3, #1
   13eb0:	mov	r0, r3
   13eb4:	sub	sp, fp, #4
   13eb8:	pop	{fp, pc}
   13ebc:	.word	0x0000f07c
   13ec0:	.word	0x0000ef94

00013ec4 <rb_get_ssl_strerror>:
   13ec4:	push	{fp, lr}
   13ec8:	add	fp, sp, #4
   13ecc:	sub	sp, sp, #8
   13ed0:	str	r0, [fp, #-8]
   13ed4:	ldr	r3, [fp, #-8]
   13ed8:	ldr	r3, [r3, #64]	; 0x40
   13edc:	mov	r0, r3
   13ee0:	bl	1344c <rb_ssl_strerror>
   13ee4:	mov	r3, r0
   13ee8:	mov	r0, r3
   13eec:	sub	sp, fp, #4
   13ef0:	pop	{fp, pc}

00013ef4 <rb_get_ssl_certfp>:
   13ef4:	push	{fp, lr}
   13ef8:	add	fp, sp, #4
   13efc:	sub	sp, sp, #24
   13f00:	str	r0, [fp, #-16]
   13f04:	str	r1, [fp, #-20]	; 0xffffffec
   13f08:	str	r2, [fp, #-24]	; 0xffffffe8
   13f0c:	ldr	r3, [fp, #-16]
   13f10:	cmp	r3, #0
   13f14:	beq	13f28 <rb_get_ssl_certfp+0x34>
   13f18:	ldr	r3, [fp, #-16]
   13f1c:	ldr	r3, [r3, #56]	; 0x38
   13f20:	cmp	r3, #0
   13f24:	bne	13f30 <rb_get_ssl_certfp+0x3c>
   13f28:	mov	r3, #0
   13f2c:	b	14010 <rb_get_ssl_certfp+0x11c>
   13f30:	ldr	r3, [fp, #-16]
   13f34:	ldr	r3, [r3, #56]	; 0x38
   13f38:	mov	r0, r3
   13f3c:	bl	4a9c <SSL_get_peer_certificate@plt>
   13f40:	str	r0, [fp, #-12]
   13f44:	ldr	r3, [fp, #-12]
   13f48:	cmp	r3, #0
   13f4c:	bne	13f58 <rb_get_ssl_certfp+0x64>
   13f50:	mov	r3, #0
   13f54:	b	14010 <rb_get_ssl_certfp+0x11c>
   13f58:	mov	r3, #0
   13f5c:	str	r3, [fp, #-8]
   13f60:	ldr	r3, [fp, #-16]
   13f64:	ldr	r3, [r3, #56]	; 0x38
   13f68:	mov	r0, r3
   13f6c:	bl	4ac0 <SSL_get_verify_result@plt>
   13f70:	mov	r3, r0
   13f74:	cmp	r3, #27
   13f78:	addls	pc, pc, r3, lsl #2
   13f7c:	b	14004 <rb_get_ssl_certfp+0x110>
   13f80:	b	13ff0 <rb_get_ssl_certfp+0xfc>
   13f84:	b	14004 <rb_get_ssl_certfp+0x110>
   13f88:	b	14004 <rb_get_ssl_certfp+0x110>
   13f8c:	b	14004 <rb_get_ssl_certfp+0x110>
   13f90:	b	14004 <rb_get_ssl_certfp+0x110>
   13f94:	b	14004 <rb_get_ssl_certfp+0x110>
   13f98:	b	14004 <rb_get_ssl_certfp+0x110>
   13f9c:	b	14004 <rb_get_ssl_certfp+0x110>
   13fa0:	b	14004 <rb_get_ssl_certfp+0x110>
   13fa4:	b	14004 <rb_get_ssl_certfp+0x110>
   13fa8:	b	14004 <rb_get_ssl_certfp+0x110>
   13fac:	b	14004 <rb_get_ssl_certfp+0x110>
   13fb0:	b	14004 <rb_get_ssl_certfp+0x110>
   13fb4:	b	14004 <rb_get_ssl_certfp+0x110>
   13fb8:	b	14004 <rb_get_ssl_certfp+0x110>
   13fbc:	b	14004 <rb_get_ssl_certfp+0x110>
   13fc0:	b	14004 <rb_get_ssl_certfp+0x110>
   13fc4:	b	14004 <rb_get_ssl_certfp+0x110>
   13fc8:	b	13ff0 <rb_get_ssl_certfp+0xfc>
   13fcc:	b	13ff0 <rb_get_ssl_certfp+0xfc>
   13fd0:	b	13ff0 <rb_get_ssl_certfp+0xfc>
   13fd4:	b	13ff0 <rb_get_ssl_certfp+0xfc>
   13fd8:	b	14004 <rb_get_ssl_certfp+0x110>
   13fdc:	b	14004 <rb_get_ssl_certfp+0x110>
   13fe0:	b	14004 <rb_get_ssl_certfp+0x110>
   13fe4:	b	14004 <rb_get_ssl_certfp+0x110>
   13fe8:	b	14004 <rb_get_ssl_certfp+0x110>
   13fec:	b	13ff0 <rb_get_ssl_certfp+0xfc>
   13ff0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ff8:	ldr	r0, [fp, #-12]
   13ffc:	bl	13620 <make_certfp>
   14000:	str	r0, [fp, #-8]
   14004:	ldr	r0, [fp, #-12]
   14008:	bl	4ce8 <X509_free@plt>
   1400c:	ldr	r3, [fp, #-8]
   14010:	mov	r0, r3
   14014:	sub	sp, fp, #4
   14018:	pop	{fp, pc}

0001401c <rb_get_ssl_certfp_file>:
   1401c:	push	{fp, lr}
   14020:	add	fp, sp, #4
   14024:	sub	sp, sp, #32
   14028:	str	r0, [fp, #-24]	; 0xffffffe8
   1402c:	str	r1, [fp, #-28]	; 0xffffffe4
   14030:	str	r2, [fp, #-32]	; 0xffffffe0
   14034:	ldr	r3, [pc, #140]	; 140c8 <rb_get_ssl_certfp_file+0xac>
   14038:	add	r3, pc, r3
   1403c:	mov	r1, r3
   14040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14044:	bl	467c <fopen@plt>
   14048:	str	r0, [fp, #-8]
   1404c:	ldr	r3, [fp, #-8]
   14050:	cmp	r3, #0
   14054:	bne	14060 <rb_get_ssl_certfp_file+0x44>
   14058:	mvn	r3, #0
   1405c:	b	140bc <rb_get_ssl_certfp_file+0xa0>
   14060:	mov	r3, #0
   14064:	mov	r2, #0
   14068:	mov	r1, #0
   1406c:	ldr	r0, [fp, #-8]
   14070:	bl	488c <PEM_read_X509@plt>
   14074:	str	r0, [fp, #-12]
   14078:	ldr	r3, [fp, #-12]
   1407c:	cmp	r3, #0
   14080:	bne	14094 <rb_get_ssl_certfp_file+0x78>
   14084:	ldr	r0, [fp, #-8]
   14088:	bl	45ec <fclose@plt>
   1408c:	mov	r3, #0
   14090:	b	140bc <rb_get_ssl_certfp_file+0xa0>
   14094:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14098:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1409c:	ldr	r0, [fp, #-12]
   140a0:	bl	13620 <make_certfp>
   140a4:	str	r0, [fp, #-16]
   140a8:	ldr	r0, [fp, #-12]
   140ac:	bl	4ce8 <X509_free@plt>
   140b0:	ldr	r0, [fp, #-8]
   140b4:	bl	45ec <fclose@plt>
   140b8:	ldr	r3, [fp, #-16]
   140bc:	mov	r0, r3
   140c0:	sub	sp, fp, #4
   140c4:	pop	{fp, pc}
   140c8:	.word	0x0000ed0c

000140cc <rb_get_ssl_info>:
   140cc:	push	{r4, fp, lr}
   140d0:	add	fp, sp, #8
   140d4:	sub	sp, sp, #28
   140d8:	str	r0, [fp, #-16]
   140dc:	str	r1, [fp, #-20]	; 0xffffffec
   140e0:	bl	4748 <OpenSSL_version_num@plt>
   140e4:	mov	r2, r0
   140e8:	ldr	r3, [pc, #120]	; 14168 <rb_get_ssl_info+0x9c>
   140ec:	cmp	r2, r3
   140f0:	bne	1411c <rb_get_ssl_info+0x50>
   140f4:	ldr	r3, [pc, #112]	; 1416c <rb_get_ssl_info+0xa0>
   140f8:	add	r3, pc, r3
   140fc:	str	r3, [sp]
   14100:	ldr	r3, [pc, #96]	; 14168 <rb_get_ssl_info+0x9c>
   14104:	ldr	r2, [pc, #100]	; 14170 <rb_get_ssl_info+0xa4>
   14108:	add	r2, pc, r2
   1410c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14110:	ldr	r0, [fp, #-16]
   14114:	bl	4c34 <snprintf@plt>
   14118:	b	1415c <rb_get_ssl_info+0x90>
   1411c:	bl	4748 <OpenSSL_version_num@plt>
   14120:	mov	r4, r0
   14124:	mov	r0, #0
   14128:	bl	4d18 <OpenSSL_version@plt>
   1412c:	mov	r3, r0
   14130:	str	r3, [sp, #8]
   14134:	str	r4, [sp, #4]
   14138:	ldr	r3, [pc, #52]	; 14174 <rb_get_ssl_info+0xa8>
   1413c:	add	r3, pc, r3
   14140:	str	r3, [sp]
   14144:	ldr	r3, [pc, #28]	; 14168 <rb_get_ssl_info+0x9c>
   14148:	ldr	r2, [pc, #40]	; 14178 <rb_get_ssl_info+0xac>
   1414c:	add	r2, pc, r2
   14150:	ldr	r1, [fp, #-20]	; 0xffffffec
   14154:	ldr	r0, [fp, #-16]
   14158:	bl	4c34 <snprintf@plt>
   1415c:	nop			; (mov r0, r0)
   14160:	sub	sp, fp, #8
   14164:	pop	{r4, fp, pc}
   14168:	.word	0x1010104f
   1416c:	.word	0x0000ed6c
   14170:	.word	0x0000ed38
   14174:	.word	0x0000ed28
   14178:	.word	0x0000ed34

0001417c <rb_ssl_get_cipher>:
   1417c:	push	{fp, lr}
   14180:	add	fp, sp, #4
   14184:	sub	sp, sp, #24
   14188:	str	r0, [fp, #-16]
   1418c:	ldr	r3, [fp, #-16]
   14190:	cmp	r3, #0
   14194:	beq	141a8 <rb_ssl_get_cipher+0x2c>
   14198:	ldr	r3, [fp, #-16]
   1419c:	ldr	r3, [r3, #56]	; 0x38
   141a0:	cmp	r3, #0
   141a4:	bne	141b0 <rb_ssl_get_cipher+0x34>
   141a8:	mov	r3, #0
   141ac:	b	14210 <rb_ssl_get_cipher+0x94>
   141b0:	ldr	r3, [fp, #-16]
   141b4:	ldr	r3, [r3, #56]	; 0x38
   141b8:	mov	r0, r3
   141bc:	bl	4d3c <SSL_get_version@plt>
   141c0:	str	r0, [fp, #-8]
   141c4:	ldr	r3, [fp, #-16]
   141c8:	ldr	r3, [r3, #56]	; 0x38
   141cc:	mov	r0, r3
   141d0:	bl	458c <SSL_get_current_cipher@plt>
   141d4:	mov	r3, r0
   141d8:	mov	r0, r3
   141dc:	bl	4730 <SSL_CIPHER_get_name@plt>
   141e0:	str	r0, [fp, #-12]
   141e4:	ldr	r3, [fp, #-12]
   141e8:	str	r3, [sp]
   141ec:	ldr	r3, [fp, #-8]
   141f0:	ldr	r2, [pc, #36]	; 1421c <rb_ssl_get_cipher+0xa0>
   141f4:	add	r2, pc, r2
   141f8:	mov	r1, #512	; 0x200
   141fc:	ldr	r0, [pc, #28]	; 14220 <rb_ssl_get_cipher+0xa4>
   14200:	add	r0, pc, r0
   14204:	bl	4c34 <snprintf@plt>
   14208:	ldr	r3, [pc, #20]	; 14224 <rb_ssl_get_cipher+0xa8>
   1420c:	add	r3, pc, r3
   14210:	mov	r0, r3
   14214:	sub	sp, fp, #4
   14218:	pop	{fp, pc}
   1421c:	.word	0x0000ecc0
   14220:	.word	0x00032efc
   14224:	.word	0x00032ef0

00014228 <rb_ssl_read>:
   14228:	push	{fp, lr}
   1422c:	add	fp, sp, #4
   14230:	sub	sp, sp, #24
   14234:	str	r0, [fp, #-8]
   14238:	str	r1, [fp, #-12]
   1423c:	str	r2, [fp, #-16]
   14240:	ldr	r3, [fp, #-16]
   14244:	str	r3, [sp]
   14248:	mov	r3, #0
   1424c:	ldr	r2, [fp, #-12]
   14250:	ldr	r1, [fp, #-8]
   14254:	mov	r0, #0
   14258:	bl	134b8 <rb_ssl_read_or_write>
   1425c:	mov	r3, r0
   14260:	mov	r0, r3
   14264:	sub	sp, fp, #4
   14268:	pop	{fp, pc}

0001426c <rb_ssl_write>:
   1426c:	push	{fp, lr}
   14270:	add	fp, sp, #4
   14274:	sub	sp, sp, #24
   14278:	str	r0, [fp, #-8]
   1427c:	str	r1, [fp, #-12]
   14280:	str	r2, [fp, #-16]
   14284:	ldr	r3, [fp, #-16]
   14288:	str	r3, [sp]
   1428c:	ldr	r3, [fp, #-12]
   14290:	mov	r2, #0
   14294:	ldr	r1, [fp, #-8]
   14298:	mov	r0, #1
   1429c:	bl	134b8 <rb_ssl_read_or_write>
   142a0:	mov	r3, r0
   142a4:	mov	r0, r3
   142a8:	sub	sp, fp, #4
   142ac:	pop	{fp, pc}

000142b0 <rb_ssl_connect_realcb>:
   142b0:	push	{fp, lr}
   142b4:	add	fp, sp, #4
   142b8:	sub	sp, sp, #16
   142bc:	str	r0, [fp, #-8]
   142c0:	str	r1, [fp, #-12]
   142c4:	str	r2, [fp, #-16]
   142c8:	ldr	r3, [fp, #-8]
   142cc:	ldr	r3, [r3, #48]	; 0x30
   142d0:	ldr	r2, [fp, #-16]
   142d4:	ldr	r2, [r2]
   142d8:	str	r2, [r3, #260]	; 0x104
   142dc:	ldr	r3, [fp, #-8]
   142e0:	ldr	r3, [r3, #48]	; 0x30
   142e4:	ldr	r2, [fp, #-16]
   142e8:	ldr	r2, [r2, #4]
   142ec:	str	r2, [r3, #264]	; 0x108
   142f0:	ldr	r1, [fp, #-12]
   142f4:	ldr	r0, [fp, #-8]
   142f8:	bl	f830 <rb_connect_callback>
   142fc:	ldr	r0, [fp, #-16]
   14300:	bl	12fe4 <rb_free>
   14304:	nop			; (mov r0, r0)
   14308:	sub	sp, fp, #4
   1430c:	pop	{fp, pc}

00014310 <rb_ssl_timeout_cb>:
   14310:	push	{r4, fp, lr}
   14314:	add	fp, sp, #8
   14318:	sub	sp, sp, #20
   1431c:	str	r0, [fp, #-16]
   14320:	str	r1, [fp, #-20]	; 0xffffffec
   14324:	ldr	r3, [fp, #-16]
   14328:	ldr	r3, [r3, #52]	; 0x34
   1432c:	ldr	r4, [r3, #132]	; 0x84
   14330:	ldr	r3, [fp, #-16]
   14334:	ldr	r3, [r3, #52]	; 0x34
   14338:	ldr	r3, [r3, #140]	; 0x8c
   1433c:	str	r3, [sp]
   14340:	mov	r3, #0
   14344:	mov	r2, #0
   14348:	mov	r1, #3
   1434c:	ldr	r0, [fp, #-16]
   14350:	blx	r4
   14354:	nop			; (mov r0, r0)
   14358:	sub	sp, fp, #8
   1435c:	pop	{r4, fp, pc}

00014360 <rb_ssl_tryconn_timeout_cb>:
   14360:	push	{fp, lr}
   14364:	add	fp, sp, #4
   14368:	sub	sp, sp, #8
   1436c:	str	r0, [fp, #-8]
   14370:	str	r1, [fp, #-12]
   14374:	ldr	r2, [fp, #-12]
   14378:	mov	r1, #3
   1437c:	ldr	r0, [fp, #-8]
   14380:	bl	142b0 <rb_ssl_connect_realcb>
   14384:	nop			; (mov r0, r0)
   14388:	sub	sp, fp, #4
   1438c:	pop	{fp, pc}

00014390 <rb_ssl_tryconn>:
   14390:	push	{fp, lr}
   14394:	add	fp, sp, #4
   14398:	sub	sp, sp, #24
   1439c:	str	r0, [fp, #-16]
   143a0:	str	r1, [fp, #-20]	; 0xffffffec
   143a4:	str	r2, [fp, #-24]	; 0xffffffe8
   143a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143ac:	str	r3, [fp, #-8]
   143b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   143b4:	cmp	r3, #0
   143b8:	beq	143d0 <rb_ssl_tryconn+0x40>
   143bc:	ldr	r2, [fp, #-8]
   143c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   143c4:	ldr	r0, [fp, #-16]
   143c8:	bl	142b0 <rb_ssl_connect_realcb>
   143cc:	b	1441c <rb_ssl_tryconn+0x8c>
   143d0:	ldr	r3, [fp, #-16]
   143d4:	ldrb	r3, [r3, #17]
   143d8:	orr	r3, r3, #32
   143dc:	uxtb	r2, r3
   143e0:	ldr	r3, [fp, #-16]
   143e4:	strb	r2, [r3, #17]
   143e8:	ldr	r3, [fp, #-8]
   143ec:	ldr	r1, [r3, #8]
   143f0:	ldr	r3, [fp, #-8]
   143f4:	ldr	r2, [pc, #40]	; 14424 <rb_ssl_tryconn+0x94>
   143f8:	add	r2, pc, r2
   143fc:	ldr	r0, [fp, #-16]
   14400:	bl	4454 <rb_settimeout@plt>
   14404:	mov	r1, #1
   14408:	ldr	r0, [fp, #-16]
   1440c:	bl	13068 <rb_ssl_init_fd>
   14410:	ldr	r1, [fp, #-8]
   14414:	ldr	r0, [fp, #-16]
   14418:	bl	13308 <rb_ssl_connect_common>
   1441c:	sub	sp, fp, #4
   14420:	pop	{fp, pc}
   14424:	.word	0xffffff60

00014428 <rb_supports_ssl>:
   14428:	push	{fp}		; (str fp, [sp, #-4]!)
   1442c:	add	fp, sp, #0
   14430:	mov	r3, #1
   14434:	mov	r0, r3
   14438:	add	sp, fp, #0
   1443c:	pop	{fp}		; (ldr fp, [sp], #4)
   14440:	bx	lr

00014444 <rb_ssl_handshake_count>:
   14444:	push	{fp}		; (str fp, [sp, #-4]!)
   14448:	add	fp, sp, #0
   1444c:	sub	sp, sp, #12
   14450:	str	r0, [fp, #-8]
   14454:	ldr	r3, [fp, #-8]
   14458:	ldr	r3, [r3, #60]	; 0x3c
   1445c:	mov	r0, r3
   14460:	add	sp, fp, #0
   14464:	pop	{fp}		; (ldr fp, [sp], #4)
   14468:	bx	lr

0001446c <rb_ssl_clear_handshake_count>:
   1446c:	push	{fp}		; (str fp, [sp, #-4]!)
   14470:	add	fp, sp, #0
   14474:	sub	sp, sp, #12
   14478:	str	r0, [fp, #-8]
   1447c:	ldr	r3, [fp, #-8]
   14480:	mov	r2, #0
   14484:	str	r2, [r3, #60]	; 0x3c
   14488:	nop			; (mov r0, r0)
   1448c:	add	sp, fp, #0
   14490:	pop	{fp}		; (ldr fp, [sp], #4)
   14494:	bx	lr

00014498 <rb_ssl_start_accepted>:
   14498:	push	{fp, lr}
   1449c:	add	fp, sp, #4
   144a0:	sub	sp, sp, #16
   144a4:	str	r0, [fp, #-8]
   144a8:	str	r1, [fp, #-12]
   144ac:	str	r2, [fp, #-16]
   144b0:	str	r3, [fp, #-20]	; 0xffffffec
   144b4:	ldr	r3, [fp, #-8]
   144b8:	ldrb	r3, [r3, #17]
   144bc:	orr	r3, r3, #32
   144c0:	uxtb	r2, r3
   144c4:	ldr	r3, [fp, #-8]
   144c8:	strb	r2, [r3, #17]
   144cc:	mov	r0, #144	; 0x90
   144d0:	bl	12f90 <rb_malloc>
   144d4:	mov	r2, r0
   144d8:	ldr	r3, [fp, #-8]
   144dc:	str	r2, [r3, #52]	; 0x34
   144e0:	ldr	r3, [fp, #-8]
   144e4:	ldr	r3, [r3, #52]	; 0x34
   144e8:	ldr	r2, [fp, #-12]
   144ec:	str	r2, [r3, #132]	; 0x84
   144f0:	ldr	r3, [fp, #-8]
   144f4:	ldr	r3, [r3, #52]	; 0x34
   144f8:	ldr	r2, [fp, #-16]
   144fc:	str	r2, [r3, #140]	; 0x8c
   14500:	ldr	r3, [fp, #-8]
   14504:	ldr	r3, [r3, #52]	; 0x34
   14508:	mov	r2, #0
   1450c:	str	r2, [r3, #128]	; 0x80
   14510:	ldr	r3, [fp, #-8]
   14514:	ldr	r3, [r3, #52]	; 0x34
   14518:	mov	r2, #128	; 0x80
   1451c:	mov	r1, #0
   14520:	mov	r0, r3
   14524:	bl	4694 <memset@plt>
   14528:	mov	r3, #0
   1452c:	ldr	r2, [pc, #48]	; 14564 <rb_ssl_start_accepted+0xcc>
   14530:	add	r2, pc, r2
   14534:	ldr	r1, [fp, #-20]	; 0xffffffec
   14538:	ldr	r0, [fp, #-8]
   1453c:	bl	4454 <rb_settimeout@plt>
   14540:	mov	r1, #0
   14544:	ldr	r0, [fp, #-8]
   14548:	bl	13068 <rb_ssl_init_fd>
   1454c:	mov	r1, #0
   14550:	ldr	r0, [fp, #-8]
   14554:	bl	13164 <rb_ssl_accept_common>
   14558:	nop			; (mov r0, r0)
   1455c:	sub	sp, fp, #4
   14560:	pop	{fp, pc}
   14564:	.word	0xfffffdd8

00014568 <rb_ssl_accept_setup>:
   14568:	push	{fp, lr}
   1456c:	add	fp, sp, #4
   14570:	sub	sp, sp, #16
   14574:	str	r0, [fp, #-8]
   14578:	str	r1, [fp, #-12]
   1457c:	str	r2, [fp, #-16]
   14580:	str	r3, [fp, #-20]	; 0xffffffec
   14584:	ldr	r3, [fp, #-12]
   14588:	ldrb	r3, [r3, #17]
   1458c:	orr	r3, r3, #32
   14590:	uxtb	r2, r3
   14594:	ldr	r3, [fp, #-12]
   14598:	strb	r2, [r3, #17]
   1459c:	mov	r0, #144	; 0x90
   145a0:	bl	12f90 <rb_malloc>
   145a4:	mov	r2, r0
   145a8:	ldr	r3, [fp, #-12]
   145ac:	str	r2, [r3, #52]	; 0x34
   145b0:	ldr	r3, [fp, #-12]
   145b4:	ldr	r3, [r3, #52]	; 0x34
   145b8:	ldr	r2, [fp, #-8]
   145bc:	ldr	r2, [r2, #52]	; 0x34
   145c0:	ldr	r2, [r2, #132]	; 0x84
   145c4:	str	r2, [r3, #132]	; 0x84
   145c8:	ldr	r3, [fp, #-12]
   145cc:	ldr	r3, [r3, #52]	; 0x34
   145d0:	ldr	r2, [fp, #-8]
   145d4:	ldr	r2, [r2, #52]	; 0x34
   145d8:	ldr	r2, [r2, #140]	; 0x8c
   145dc:	str	r2, [r3, #140]	; 0x8c
   145e0:	ldr	r3, [fp, #-12]
   145e4:	ldr	r3, [r3, #52]	; 0x34
   145e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   145ec:	str	r2, [r3, #128]	; 0x80
   145f0:	ldr	r3, [fp, #-12]
   145f4:	ldr	r3, [r3, #52]	; 0x34
   145f8:	mov	r2, #128	; 0x80
   145fc:	mov	r1, #0
   14600:	mov	r0, r3
   14604:	bl	4694 <memset@plt>
   14608:	ldr	r3, [fp, #-12]
   1460c:	ldr	r3, [r3, #52]	; 0x34
   14610:	mov	r0, r3
   14614:	ldr	r3, [fp, #-20]	; 0xffffffec
   14618:	mov	r2, r3
   1461c:	ldr	r1, [fp, #-16]
   14620:	bl	4880 <memcpy@plt>
   14624:	mov	r3, #0
   14628:	ldr	r2, [pc, #48]	; 14660 <rb_ssl_accept_setup+0xf8>
   1462c:	add	r2, pc, r2
   14630:	mov	r1, #10
   14634:	ldr	r0, [fp, #-12]
   14638:	bl	4454 <rb_settimeout@plt>
   1463c:	mov	r1, #0
   14640:	ldr	r0, [fp, #-12]
   14644:	bl	13068 <rb_ssl_init_fd>
   14648:	mov	r1, #0
   1464c:	ldr	r0, [fp, #-12]
   14650:	bl	13164 <rb_ssl_accept_common>
   14654:	nop			; (mov r0, r0)
   14658:	sub	sp, fp, #4
   1465c:	pop	{fp, pc}
   14660:	.word	0xfffffcdc

00014664 <rb_ssl_listen>:
   14664:	push	{fp, lr}
   14668:	add	fp, sp, #4
   1466c:	sub	sp, sp, #24
   14670:	str	r0, [fp, #-16]
   14674:	str	r1, [fp, #-20]	; 0xffffffec
   14678:	str	r2, [fp, #-24]	; 0xffffffe8
   1467c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14680:	ldr	r1, [fp, #-20]	; 0xffffffec
   14684:	ldr	r0, [fp, #-16]
   14688:	bl	4c7c <rb_listen@plt>
   1468c:	str	r0, [fp, #-8]
   14690:	ldr	r3, [fp, #-16]
   14694:	mov	r2, #52	; 0x34
   14698:	strb	r2, [r3, #17]
   1469c:	ldr	r3, [fp, #-8]
   146a0:	mov	r0, r3
   146a4:	sub	sp, fp, #4
   146a8:	pop	{fp, pc}

000146ac <rb_connect_tcp_ssl>:
   146ac:	push	{fp, lr}
   146b0:	add	fp, sp, #4
   146b4:	sub	sp, sp, #32
   146b8:	str	r0, [fp, #-16]
   146bc:	str	r1, [fp, #-20]	; 0xffffffec
   146c0:	str	r2, [fp, #-24]	; 0xffffffe8
   146c4:	str	r3, [fp, #-28]	; 0xffffffe4
   146c8:	ldr	r3, [fp, #-16]
   146cc:	cmp	r3, #0
   146d0:	beq	14730 <rb_connect_tcp_ssl+0x84>
   146d4:	mov	r0, #12
   146d8:	bl	12f90 <rb_malloc>
   146dc:	str	r0, [fp, #-8]
   146e0:	ldr	r3, [fp, #-8]
   146e4:	ldr	r2, [fp, #4]
   146e8:	str	r2, [r3, #4]
   146ec:	ldr	r3, [fp, #-8]
   146f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   146f4:	str	r2, [r3]
   146f8:	ldr	r3, [fp, #-8]
   146fc:	ldr	r2, [fp, #8]
   14700:	str	r2, [r3, #8]
   14704:	ldr	r3, [fp, #8]
   14708:	str	r3, [sp, #4]
   1470c:	ldr	r3, [fp, #-8]
   14710:	str	r3, [sp]
   14714:	ldr	r3, [pc, #32]	; 1473c <rb_connect_tcp_ssl+0x90>
   14718:	add	r3, pc, r3
   1471c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14720:	ldr	r1, [fp, #-20]	; 0xffffffec
   14724:	ldr	r0, [fp, #-16]
   14728:	bl	4490 <rb_connect_tcp@plt>
   1472c:	b	14734 <rb_connect_tcp_ssl+0x88>
   14730:	nop			; (mov r0, r0)
   14734:	sub	sp, fp, #4
   14738:	pop	{fp, pc}
   1473c:	.word	0xfffffc70

00014740 <rb_ssl_start_connected>:
   14740:	push	{fp, lr}
   14744:	add	fp, sp, #4
   14748:	sub	sp, sp, #24
   1474c:	str	r0, [fp, #-16]
   14750:	str	r1, [fp, #-20]	; 0xffffffec
   14754:	str	r2, [fp, #-24]	; 0xffffffe8
   14758:	str	r3, [fp, #-28]	; 0xffffffe4
   1475c:	ldr	r3, [fp, #-16]
   14760:	cmp	r3, #0
   14764:	beq	1481c <rb_ssl_start_connected+0xdc>
   14768:	mov	r0, #12
   1476c:	bl	12f90 <rb_malloc>
   14770:	str	r0, [fp, #-8]
   14774:	ldr	r3, [fp, #-8]
   14778:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1477c:	str	r2, [r3, #4]
   14780:	ldr	r3, [fp, #-8]
   14784:	ldr	r2, [fp, #-20]	; 0xffffffec
   14788:	str	r2, [r3]
   1478c:	ldr	r3, [fp, #-8]
   14790:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14794:	str	r2, [r3, #8]
   14798:	mov	r0, #268	; 0x10c
   1479c:	bl	12f90 <rb_malloc>
   147a0:	mov	r2, r0
   147a4:	ldr	r3, [fp, #-16]
   147a8:	str	r2, [r3, #48]	; 0x30
   147ac:	ldr	r3, [fp, #-16]
   147b0:	ldr	r3, [r3, #48]	; 0x30
   147b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   147b8:	str	r2, [r3, #260]	; 0x104
   147bc:	ldr	r3, [fp, #-16]
   147c0:	ldr	r3, [r3, #48]	; 0x30
   147c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   147c8:	str	r2, [r3, #264]	; 0x108
   147cc:	ldr	r3, [fp, #-16]
   147d0:	ldrb	r3, [r3, #17]
   147d4:	orr	r3, r3, #32
   147d8:	uxtb	r2, r3
   147dc:	ldr	r3, [fp, #-16]
   147e0:	strb	r2, [r3, #17]
   147e4:	ldr	r3, [fp, #-8]
   147e8:	ldr	r1, [r3, #8]
   147ec:	ldr	r3, [fp, #-8]
   147f0:	ldr	r2, [pc, #48]	; 14828 <rb_ssl_start_connected+0xe8>
   147f4:	add	r2, pc, r2
   147f8:	ldr	r0, [fp, #-16]
   147fc:	bl	4454 <rb_settimeout@plt>
   14800:	mov	r1, #1
   14804:	ldr	r0, [fp, #-16]
   14808:	bl	13068 <rb_ssl_init_fd>
   1480c:	ldr	r1, [fp, #-8]
   14810:	ldr	r0, [fp, #-16]
   14814:	bl	13308 <rb_ssl_connect_common>
   14818:	b	14820 <rb_ssl_start_connected+0xe0>
   1481c:	nop			; (mov r0, r0)
   14820:	sub	sp, fp, #4
   14824:	pop	{fp, pc}
   14828:	.word	0xfffffb64
   1482c:	.word	0x00000000

00014830 <rb_dlinkAdd>:
   14830:	push	{fp}		; (str fp, [sp, #-4]!)
   14834:	add	fp, sp, #0
   14838:	sub	sp, sp, #20
   1483c:	str	r0, [fp, #-8]
   14840:	str	r1, [fp, #-12]
   14844:	str	r2, [fp, #-16]
   14848:	ldr	r3, [fp, #-12]
   1484c:	ldr	r2, [fp, #-8]
   14850:	str	r2, [r3]
   14854:	ldr	r3, [fp, #-12]
   14858:	mov	r2, #0
   1485c:	str	r2, [r3, #4]
   14860:	ldr	r3, [fp, #-16]
   14864:	ldr	r2, [r3]
   14868:	ldr	r3, [fp, #-12]
   1486c:	str	r2, [r3, #8]
   14870:	ldr	r3, [fp, #-16]
   14874:	ldr	r3, [r3]
   14878:	cmp	r3, #0
   1487c:	beq	14894 <rb_dlinkAdd+0x64>
   14880:	ldr	r3, [fp, #-16]
   14884:	ldr	r3, [r3]
   14888:	ldr	r2, [fp, #-12]
   1488c:	str	r2, [r3, #4]
   14890:	b	148b0 <rb_dlinkAdd+0x80>
   14894:	ldr	r3, [fp, #-16]
   14898:	ldr	r3, [r3, #4]
   1489c:	cmp	r3, #0
   148a0:	bne	148b0 <rb_dlinkAdd+0x80>
   148a4:	ldr	r3, [fp, #-16]
   148a8:	ldr	r2, [fp, #-12]
   148ac:	str	r2, [r3, #4]
   148b0:	ldr	r3, [fp, #-16]
   148b4:	ldr	r2, [fp, #-12]
   148b8:	str	r2, [r3]
   148bc:	ldr	r3, [fp, #-16]
   148c0:	ldr	r3, [r3, #8]
   148c4:	add	r2, r3, #1
   148c8:	ldr	r3, [fp, #-16]
   148cc:	str	r2, [r3, #8]
   148d0:	nop			; (mov r0, r0)
   148d4:	add	sp, fp, #0
   148d8:	pop	{fp}		; (ldr fp, [sp], #4)
   148dc:	bx	lr

000148e0 <rb_dlinkDelete>:
   148e0:	push	{fp}		; (str fp, [sp, #-4]!)
   148e4:	add	fp, sp, #0
   148e8:	sub	sp, sp, #12
   148ec:	str	r0, [fp, #-8]
   148f0:	str	r1, [fp, #-12]
   148f4:	ldr	r3, [fp, #-8]
   148f8:	ldr	r3, [r3, #8]
   148fc:	cmp	r3, #0
   14900:	beq	1491c <rb_dlinkDelete+0x3c>
   14904:	ldr	r3, [fp, #-8]
   14908:	ldr	r3, [r3, #8]
   1490c:	ldr	r2, [fp, #-8]
   14910:	ldr	r2, [r2, #4]
   14914:	str	r2, [r3, #4]
   14918:	b	1492c <rb_dlinkDelete+0x4c>
   1491c:	ldr	r3, [fp, #-8]
   14920:	ldr	r2, [r3, #4]
   14924:	ldr	r3, [fp, #-12]
   14928:	str	r2, [r3, #4]
   1492c:	ldr	r3, [fp, #-8]
   14930:	ldr	r3, [r3, #4]
   14934:	cmp	r3, #0
   14938:	beq	14954 <rb_dlinkDelete+0x74>
   1493c:	ldr	r3, [fp, #-8]
   14940:	ldr	r3, [r3, #4]
   14944:	ldr	r2, [fp, #-8]
   14948:	ldr	r2, [r2, #8]
   1494c:	str	r2, [r3, #8]
   14950:	b	14964 <rb_dlinkDelete+0x84>
   14954:	ldr	r3, [fp, #-8]
   14958:	ldr	r2, [r3, #8]
   1495c:	ldr	r3, [fp, #-12]
   14960:	str	r2, [r3]
   14964:	ldr	r3, [fp, #-8]
   14968:	mov	r2, #0
   1496c:	str	r2, [r3, #4]
   14970:	ldr	r3, [fp, #-8]
   14974:	ldr	r2, [r3, #4]
   14978:	ldr	r3, [fp, #-8]
   1497c:	str	r2, [r3, #8]
   14980:	ldr	r3, [fp, #-12]
   14984:	ldr	r3, [r3, #8]
   14988:	sub	r2, r3, #1
   1498c:	ldr	r3, [fp, #-12]
   14990:	str	r2, [r3, #8]
   14994:	nop			; (mov r0, r0)
   14998:	add	sp, fp, #0
   1499c:	pop	{fp}		; (ldr fp, [sp], #4)
   149a0:	bx	lr

000149a4 <rb_malloc>:
   149a4:	push	{fp, lr}
   149a8:	add	fp, sp, #4
   149ac:	sub	sp, sp, #16
   149b0:	str	r0, [fp, #-16]
   149b4:	ldr	r1, [fp, #-16]
   149b8:	mov	r0, #1
   149bc:	bl	4658 <calloc@plt>
   149c0:	mov	r3, r0
   149c4:	str	r3, [fp, #-8]
   149c8:	ldr	r3, [fp, #-8]
   149cc:	cmp	r3, #0
   149d0:	moveq	r3, #1
   149d4:	movne	r3, #0
   149d8:	uxtb	r3, r3
   149dc:	cmp	r3, #0
   149e0:	beq	149e8 <rb_malloc+0x44>
   149e4:	bl	4a00 <rb_outofmemory@plt>
   149e8:	ldr	r3, [fp, #-8]
   149ec:	mov	r0, r3
   149f0:	sub	sp, fp, #4
   149f4:	pop	{fp, pc}

000149f8 <rb_strndup>:
   149f8:	push	{fp, lr}
   149fc:	add	fp, sp, #4
   14a00:	sub	sp, sp, #16
   14a04:	str	r0, [fp, #-16]
   14a08:	str	r1, [fp, #-20]	; 0xffffffec
   14a0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a10:	bl	4a24 <malloc@plt>
   14a14:	mov	r3, r0
   14a18:	str	r3, [fp, #-8]
   14a1c:	ldr	r3, [fp, #-8]
   14a20:	cmp	r3, #0
   14a24:	moveq	r3, #1
   14a28:	movne	r3, #0
   14a2c:	uxtb	r3, r3
   14a30:	cmp	r3, #0
   14a34:	beq	14a3c <rb_strndup+0x44>
   14a38:	bl	4a00 <rb_outofmemory@plt>
   14a3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a40:	ldr	r1, [fp, #-16]
   14a44:	ldr	r0, [fp, #-8]
   14a48:	bl	470c <rb_strlcpy@plt>
   14a4c:	ldr	r3, [fp, #-8]
   14a50:	mov	r0, r3
   14a54:	sub	sp, fp, #4
   14a58:	pop	{fp, pc}

00014a5c <rb_free>:
   14a5c:	push	{fp, lr}
   14a60:	add	fp, sp, #4
   14a64:	sub	sp, sp, #8
   14a68:	str	r0, [fp, #-8]
   14a6c:	ldr	r3, [fp, #-8]
   14a70:	cmp	r3, #0
   14a74:	movne	r3, #1
   14a78:	moveq	r3, #0
   14a7c:	uxtb	r3, r3
   14a80:	cmp	r3, #0
   14a84:	beq	14a90 <rb_free+0x34>
   14a88:	ldr	r0, [fp, #-8]
   14a8c:	bl	476c <free@plt>
   14a90:	nop			; (mov r0, r0)
   14a94:	sub	sp, fp, #4
   14a98:	pop	{fp, pc}

00014a9c <rb_event_find>:
   14a9c:	push	{fp}		; (str fp, [sp, #-4]!)
   14aa0:	add	fp, sp, #0
   14aa4:	sub	sp, sp, #20
   14aa8:	str	r0, [fp, #-16]
   14aac:	str	r1, [fp, #-20]	; 0xffffffec
   14ab0:	ldr	r3, [pc, #116]	; 14b2c <rb_event_find+0x90>
   14ab4:	add	r3, pc, r3
   14ab8:	ldr	r3, [r3]
   14abc:	str	r3, [fp, #-8]
   14ac0:	b	14b0c <rb_event_find+0x70>
   14ac4:	ldr	r3, [fp, #-8]
   14ac8:	ldr	r3, [r3]
   14acc:	str	r3, [fp, #-12]
   14ad0:	ldr	r3, [fp, #-12]
   14ad4:	ldr	r2, [r3, #12]
   14ad8:	ldr	r3, [fp, #-16]
   14adc:	cmp	r2, r3
   14ae0:	bne	14b00 <rb_event_find+0x64>
   14ae4:	ldr	r3, [fp, #-12]
   14ae8:	ldr	r2, [r3, #16]
   14aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   14af0:	cmp	r2, r3
   14af4:	bne	14b00 <rb_event_find+0x64>
   14af8:	ldr	r3, [fp, #-12]
   14afc:	b	14b1c <rb_event_find+0x80>
   14b00:	ldr	r3, [fp, #-8]
   14b04:	ldr	r3, [r3, #8]
   14b08:	str	r3, [fp, #-8]
   14b0c:	ldr	r3, [fp, #-8]
   14b10:	cmp	r3, #0
   14b14:	bne	14ac4 <rb_event_find+0x28>
   14b18:	mov	r3, #0
   14b1c:	mov	r0, r3
   14b20:	add	sp, fp, #0
   14b24:	pop	{fp}		; (ldr fp, [sp], #4)
   14b28:	bx	lr
   14b2c:	.word	0x0003286c

00014b30 <rb_event_add_common>:
   14b30:	push	{fp, lr}
   14b34:	add	fp, sp, #4
   14b38:	sub	sp, sp, #24
   14b3c:	str	r0, [fp, #-16]
   14b40:	str	r1, [fp, #-20]	; 0xffffffec
   14b44:	str	r2, [fp, #-24]	; 0xffffffe8
   14b48:	str	r3, [fp, #-28]	; 0xffffffe4
   14b4c:	mov	r0, #48	; 0x30
   14b50:	bl	149a4 <rb_malloc>
   14b54:	str	r0, [fp, #-8]
   14b58:	ldr	r3, [fp, #-8]
   14b5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14b60:	str	r2, [r3, #12]
   14b64:	mov	r1, #33	; 0x21
   14b68:	ldr	r0, [fp, #-16]
   14b6c:	bl	149f8 <rb_strndup>
   14b70:	mov	r2, r0
   14b74:	ldr	r3, [fp, #-8]
   14b78:	str	r2, [r3, #20]
   14b7c:	ldr	r3, [fp, #-8]
   14b80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b84:	str	r2, [r3, #16]
   14b88:	bl	4868 <rb_current_time@plt>
   14b8c:	mov	r2, r0
   14b90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b94:	add	r2, r2, r3
   14b98:	ldr	r3, [fp, #-8]
   14b9c:	str	r2, [r3, #28]
   14ba0:	ldr	r3, [fp, #-8]
   14ba4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14ba8:	str	r2, [r3, #32]
   14bac:	ldr	r3, [fp, #-8]
   14bb0:	ldr	r2, [fp, #4]
   14bb4:	str	r2, [r3, #24]
   14bb8:	ldr	r3, [fp, #-8]
   14bbc:	mov	r2, #0
   14bc0:	str	r2, [r3, #44]	; 0x2c
   14bc4:	ldr	r3, [fp, #-8]
   14bc8:	ldr	r2, [r3, #28]
   14bcc:	ldr	r3, [pc, #104]	; 14c3c <rb_event_add_common+0x10c>
   14bd0:	add	r3, pc, r3
   14bd4:	ldr	r3, [r3]
   14bd8:	cmp	r2, r3
   14bdc:	blt	14bf4 <rb_event_add_common+0xc4>
   14be0:	ldr	r3, [pc, #88]	; 14c40 <rb_event_add_common+0x110>
   14be4:	add	r3, pc, r3
   14be8:	ldr	r3, [r3]
   14bec:	cmn	r3, #1
   14bf0:	bne	14c08 <rb_event_add_common+0xd8>
   14bf4:	ldr	r3, [fp, #-8]
   14bf8:	ldr	r2, [r3, #28]
   14bfc:	ldr	r3, [pc, #64]	; 14c44 <rb_event_add_common+0x114>
   14c00:	add	r3, pc, r3
   14c04:	str	r2, [r3]
   14c08:	ldr	r3, [fp, #-8]
   14c0c:	ldr	r2, [pc, #52]	; 14c48 <rb_event_add_common+0x118>
   14c10:	add	r2, pc, r2
   14c14:	mov	r1, r3
   14c18:	ldr	r0, [fp, #-8]
   14c1c:	bl	14830 <rb_dlinkAdd>
   14c20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c24:	ldr	r0, [fp, #-8]
   14c28:	bl	123a8 <rb_io_sched_event>
   14c2c:	ldr	r3, [fp, #-8]
   14c30:	mov	r0, r3
   14c34:	sub	sp, fp, #4
   14c38:	pop	{fp, pc}
   14c3c:	.word	0x0001fce0
   14c40:	.word	0x0001fccc
   14c44:	.word	0x0001fcb0
   14c48:	.word	0x00032710

00014c4c <rb_event_add>:
   14c4c:	push	{fp, lr}
   14c50:	add	fp, sp, #4
   14c54:	sub	sp, sp, #24
   14c58:	str	r0, [fp, #-8]
   14c5c:	str	r1, [fp, #-12]
   14c60:	str	r2, [fp, #-16]
   14c64:	str	r3, [fp, #-20]	; 0xffffffec
   14c68:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c6c:	cmp	r3, #0
   14c70:	movle	r3, #1
   14c74:	movgt	r3, #0
   14c78:	uxtb	r3, r3
   14c7c:	cmp	r3, #0
   14c80:	beq	14ca4 <rb_event_add+0x58>
   14c84:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c88:	ldr	r1, [fp, #-8]
   14c8c:	ldr	r3, [pc, #60]	; 14cd0 <rb_event_add+0x84>
   14c90:	add	r3, pc, r3
   14c94:	mov	r0, r3
   14c98:	bl	4994 <rb_lib_log@plt>
   14c9c:	mov	r3, #1
   14ca0:	str	r3, [fp, #-20]	; 0xffffffec
   14ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ca8:	str	r3, [sp]
   14cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cb0:	ldr	r2, [fp, #-16]
   14cb4:	ldr	r1, [fp, #-12]
   14cb8:	ldr	r0, [fp, #-8]
   14cbc:	bl	14b30 <rb_event_add_common>
   14cc0:	mov	r3, r0
   14cc4:	mov	r0, r3
   14cc8:	sub	sp, fp, #4
   14ccc:	pop	{fp, pc}
   14cd0:	.word	0x0000e288

00014cd4 <rb_event_addonce>:
   14cd4:	push	{fp, lr}
   14cd8:	add	fp, sp, #4
   14cdc:	sub	sp, sp, #24
   14ce0:	str	r0, [fp, #-8]
   14ce4:	str	r1, [fp, #-12]
   14ce8:	str	r2, [fp, #-16]
   14cec:	str	r3, [fp, #-20]	; 0xffffffec
   14cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cf4:	cmp	r3, #0
   14cf8:	movle	r3, #1
   14cfc:	movgt	r3, #0
   14d00:	uxtb	r3, r3
   14d04:	cmp	r3, #0
   14d08:	beq	14d2c <rb_event_addonce+0x58>
   14d0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d10:	ldr	r1, [fp, #-8]
   14d14:	ldr	r3, [pc, #60]	; 14d58 <rb_event_addonce+0x84>
   14d18:	add	r3, pc, r3
   14d1c:	mov	r0, r3
   14d20:	bl	4994 <rb_lib_log@plt>
   14d24:	mov	r3, #1
   14d28:	str	r3, [fp, #-20]	; 0xffffffec
   14d2c:	mov	r3, #0
   14d30:	str	r3, [sp]
   14d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d38:	ldr	r2, [fp, #-16]
   14d3c:	ldr	r1, [fp, #-12]
   14d40:	ldr	r0, [fp, #-8]
   14d44:	bl	14b30 <rb_event_add_common>
   14d48:	mov	r3, r0
   14d4c:	mov	r0, r3
   14d50:	sub	sp, fp, #4
   14d54:	pop	{fp, pc}
   14d58:	.word	0x0000e244

00014d5c <rb_event_delete>:
   14d5c:	push	{fp, lr}
   14d60:	add	fp, sp, #4
   14d64:	sub	sp, sp, #8
   14d68:	str	r0, [fp, #-8]
   14d6c:	ldr	r3, [fp, #-8]
   14d70:	cmp	r3, #0
   14d74:	beq	14d90 <rb_event_delete+0x34>
   14d78:	ldr	r3, [fp, #-8]
   14d7c:	mov	r2, #1
   14d80:	str	r2, [r3, #44]	; 0x2c
   14d84:	ldr	r0, [fp, #-8]
   14d88:	bl	1244c <rb_io_unsched_event>
   14d8c:	b	14d94 <rb_event_delete+0x38>
   14d90:	nop			; (mov r0, r0)
   14d94:	sub	sp, fp, #4
   14d98:	pop	{fp, pc}

00014d9c <rb_event_find_delete>:
   14d9c:	push	{fp, lr}
   14da0:	add	fp, sp, #4
   14da4:	sub	sp, sp, #8
   14da8:	str	r0, [fp, #-8]
   14dac:	str	r1, [fp, #-12]
   14db0:	ldr	r1, [fp, #-12]
   14db4:	ldr	r0, [fp, #-8]
   14db8:	bl	14a9c <rb_event_find>
   14dbc:	mov	r3, r0
   14dc0:	mov	r0, r3
   14dc4:	bl	4508 <rb_event_delete@plt>
   14dc8:	nop			; (mov r0, r0)
   14dcc:	sub	sp, fp, #4
   14dd0:	pop	{fp, pc}

00014dd4 <rb_event_frequency>:
   14dd4:	push	{fp, lr}
   14dd8:	add	fp, sp, #4
   14ddc:	sub	sp, sp, #16
   14de0:	str	r0, [fp, #-16]
   14de4:	ldr	r3, [fp, #-16]
   14de8:	cmp	r3, #0
   14dec:	bge	14e64 <rb_event_frequency+0x90>
   14df0:	ldr	r3, [fp, #-16]
   14df4:	cmp	r3, #0
   14df8:	rsblt	r3, r3, #0
   14dfc:	lsl	r3, r3, #1
   14e00:	ldr	r2, [pc, #108]	; 14e74 <rb_event_frequency+0xa0>
   14e04:	smull	r1, r2, r2, r3
   14e08:	asr	r3, r3, #31
   14e0c:	sub	r3, r2, r3
   14e10:	str	r3, [fp, #-8]
   14e14:	bl	4bc8 <rand@plt>
   14e18:	mov	r2, r0
   14e1c:	ldr	r3, [pc, #84]	; 14e78 <rb_event_frequency+0xa4>
   14e20:	smull	r1, r3, r3, r2
   14e24:	asr	r1, r3, #6
   14e28:	asr	r3, r2, #31
   14e2c:	sub	r3, r1, r3
   14e30:	mov	r1, #1000	; 0x3e8
   14e34:	mul	r3, r1, r3
   14e38:	sub	r3, r2, r3
   14e3c:	ldr	r2, [fp, #-8]
   14e40:	mul	r3, r2, r3
   14e44:	ldr	r2, [pc, #44]	; 14e78 <rb_event_frequency+0xa4>
   14e48:	smull	r1, r2, r2, r3
   14e4c:	asr	r2, r2, #6
   14e50:	asr	r3, r3, #31
   14e54:	sub	r2, r2, r3
   14e58:	ldr	r3, [fp, #-8]
   14e5c:	add	r3, r2, r3
   14e60:	str	r3, [fp, #-16]
   14e64:	ldr	r3, [fp, #-16]
   14e68:	mov	r0, r3
   14e6c:	sub	sp, fp, #4
   14e70:	pop	{fp, pc}
   14e74:	.word	0x55555556
   14e78:	.word	0x10624dd3

00014e7c <rb_event_addish>:
   14e7c:	push	{fp, lr}
   14e80:	add	fp, sp, #4
   14e84:	sub	sp, sp, #24
   14e88:	str	r0, [fp, #-8]
   14e8c:	str	r1, [fp, #-12]
   14e90:	str	r2, [fp, #-16]
   14e94:	str	r3, [fp, #-20]	; 0xffffffec
   14e98:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e9c:	cmp	r3, #0
   14ea0:	rsblt	r3, r3, #0
   14ea4:	str	r3, [fp, #-20]	; 0xffffffec
   14ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14eac:	vmov	s15, r3
   14eb0:	vcvt.f64.s32	d7, s15
   14eb4:	vldr	d6, [pc, #76]	; 14f08 <rb_event_addish+0x8c>
   14eb8:	vcmpe.f64	d7, d6
   14ebc:	vmrs	APSR_nzcv, fpscr
   14ec0:	blt	14ed0 <rb_event_addish+0x54>
   14ec4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ec8:	rsb	r3, r3, #0
   14ecc:	str	r3, [fp, #-20]	; 0xffffffec
   14ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ed4:	bl	14dd4 <rb_event_frequency>
   14ed8:	mov	r2, r0
   14edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ee0:	str	r3, [sp]
   14ee4:	mov	r3, r2
   14ee8:	ldr	r2, [fp, #-16]
   14eec:	ldr	r1, [fp, #-12]
   14ef0:	ldr	r0, [fp, #-8]
   14ef4:	bl	14b30 <rb_event_add_common>
   14ef8:	mov	r3, r0
   14efc:	mov	r0, r3
   14f00:	sub	sp, fp, #4
   14f04:	pop	{fp, pc}
   14f08:	.word	0x00000000
   14f0c:	.word	0x40080000

00014f10 <rb_run_one_event>:
   14f10:	push	{r4, fp, lr}
   14f14:	add	fp, sp, #8
   14f18:	sub	sp, sp, #12
   14f1c:	str	r0, [fp, #-16]
   14f20:	ldr	r3, [fp, #-16]
   14f24:	ldr	r3, [r3, #20]
   14f28:	mov	r2, #33	; 0x21
   14f2c:	mov	r1, r3
   14f30:	ldr	r3, [pc, #176]	; 14fe8 <rb_run_one_event+0xd8>
   14f34:	add	r3, pc, r3
   14f38:	mov	r0, r3
   14f3c:	bl	470c <rb_strlcpy@plt>
   14f40:	ldr	r3, [fp, #-16]
   14f44:	ldr	r3, [r3, #12]
   14f48:	ldr	r2, [fp, #-16]
   14f4c:	ldr	r2, [r2, #16]
   14f50:	mov	r0, r2
   14f54:	blx	r3
   14f58:	ldr	r3, [fp, #-16]
   14f5c:	ldr	r3, [r3, #24]
   14f60:	cmp	r3, #0
   14f64:	bne	14f74 <rb_run_one_event+0x64>
   14f68:	ldr	r0, [fp, #-16]
   14f6c:	bl	4508 <rb_event_delete@plt>
   14f70:	b	14fe0 <rb_run_one_event+0xd0>
   14f74:	bl	4868 <rb_current_time@plt>
   14f78:	mov	r4, r0
   14f7c:	ldr	r3, [fp, #-16]
   14f80:	ldr	r3, [r3, #24]
   14f84:	mov	r0, r3
   14f88:	bl	14dd4 <rb_event_frequency>
   14f8c:	mov	r3, r0
   14f90:	add	r2, r4, r3
   14f94:	ldr	r3, [fp, #-16]
   14f98:	str	r2, [r3, #28]
   14f9c:	ldr	r3, [fp, #-16]
   14fa0:	ldr	r2, [r3, #28]
   14fa4:	ldr	r3, [pc, #64]	; 14fec <rb_run_one_event+0xdc>
   14fa8:	add	r3, pc, r3
   14fac:	ldr	r3, [r3]
   14fb0:	cmp	r2, r3
   14fb4:	blt	14fcc <rb_run_one_event+0xbc>
   14fb8:	ldr	r3, [pc, #48]	; 14ff0 <rb_run_one_event+0xe0>
   14fbc:	add	r3, pc, r3
   14fc0:	ldr	r3, [r3]
   14fc4:	cmn	r3, #1
   14fc8:	bne	14fe0 <rb_run_one_event+0xd0>
   14fcc:	ldr	r3, [fp, #-16]
   14fd0:	ldr	r2, [r3, #28]
   14fd4:	ldr	r3, [pc, #24]	; 14ff4 <rb_run_one_event+0xe4>
   14fd8:	add	r3, pc, r3
   14fdc:	str	r2, [r3]
   14fe0:	sub	sp, fp, #8
   14fe4:	pop	{r4, fp, pc}
   14fe8:	.word	0x000323c8
   14fec:	.word	0x0001f908
   14ff0:	.word	0x0001f8f4
   14ff4:	.word	0x0001f8d8

00014ff8 <rb_event_run>:
   14ff8:	push	{r4, fp, lr}
   14ffc:	add	fp, sp, #8
   15000:	sub	sp, sp, #20
   15004:	bl	124e0 <rb_io_supports_event>
   15008:	mov	r3, r0
   1500c:	cmp	r3, #0
   15010:	bne	15228 <rb_event_run+0x230>
   15014:	ldr	r3, [pc, #536]	; 15234 <rb_event_run+0x23c>
   15018:	add	r3, pc, r3
   1501c:	mvn	r2, #0
   15020:	str	r2, [r3]
   15024:	ldr	r3, [pc, #524]	; 15238 <rb_event_run+0x240>
   15028:	add	r3, pc, r3
   1502c:	ldr	r3, [r3]
   15030:	str	r3, [fp, #-16]
   15034:	ldr	r3, [fp, #-16]
   15038:	cmp	r3, #0
   1503c:	beq	1504c <rb_event_run+0x54>
   15040:	ldr	r3, [fp, #-16]
   15044:	ldr	r3, [r3, #8]
   15048:	b	15050 <rb_event_run+0x58>
   1504c:	mov	r3, #0
   15050:	str	r3, [fp, #-20]	; 0xffffffec
   15054:	b	15218 <rb_event_run+0x220>
   15058:	ldr	r3, [fp, #-16]
   1505c:	ldr	r3, [r3]
   15060:	str	r3, [fp, #-24]	; 0xffffffe8
   15064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15068:	ldr	r3, [r3, #44]	; 0x2c
   1506c:	cmp	r3, #0
   15070:	beq	150a8 <rb_event_run+0xb0>
   15074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15078:	ldr	r2, [pc, #444]	; 1523c <rb_event_run+0x244>
   1507c:	add	r2, pc, r2
   15080:	mov	r1, r2
   15084:	mov	r0, r3
   15088:	bl	148e0 <rb_dlinkDelete>
   1508c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15090:	ldr	r3, [r3, #20]
   15094:	mov	r0, r3
   15098:	bl	14a5c <rb_free>
   1509c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150a0:	bl	14a5c <rb_free>
   150a4:	b	151f0 <rb_event_run+0x1f8>
   150a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150ac:	ldr	r4, [r3, #28]
   150b0:	bl	4868 <rb_current_time@plt>
   150b4:	mov	r3, r0
   150b8:	cmp	r4, r3
   150bc:	bgt	151ac <rb_event_run+0x1b4>
   150c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150c4:	ldr	r3, [r3, #20]
   150c8:	mov	r2, #33	; 0x21
   150cc:	mov	r1, r3
   150d0:	ldr	r3, [pc, #360]	; 15240 <rb_event_run+0x248>
   150d4:	add	r3, pc, r3
   150d8:	mov	r0, r3
   150dc:	bl	470c <rb_strlcpy@plt>
   150e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150e4:	ldr	r3, [r3, #12]
   150e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   150ec:	ldr	r2, [r2, #16]
   150f0:	mov	r0, r2
   150f4:	blx	r3
   150f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150fc:	ldr	r3, [r3, #24]
   15100:	cmp	r3, #0
   15104:	beq	15178 <rb_event_run+0x180>
   15108:	bl	4868 <rb_current_time@plt>
   1510c:	mov	r4, r0
   15110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15114:	ldr	r3, [r3, #24]
   15118:	mov	r0, r3
   1511c:	bl	14dd4 <rb_event_frequency>
   15120:	mov	r3, r0
   15124:	add	r2, r4, r3
   15128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1512c:	str	r2, [r3, #28]
   15130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15134:	ldr	r2, [r3, #28]
   15138:	ldr	r3, [pc, #260]	; 15244 <rb_event_run+0x24c>
   1513c:	add	r3, pc, r3
   15140:	ldr	r3, [r3]
   15144:	cmp	r2, r3
   15148:	blt	15160 <rb_event_run+0x168>
   1514c:	ldr	r3, [pc, #244]	; 15248 <rb_event_run+0x250>
   15150:	add	r3, pc, r3
   15154:	ldr	r3, [r3]
   15158:	cmn	r3, #1
   1515c:	bne	151f0 <rb_event_run+0x1f8>
   15160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15164:	ldr	r2, [r3, #28]
   15168:	ldr	r3, [pc, #220]	; 1524c <rb_event_run+0x254>
   1516c:	add	r3, pc, r3
   15170:	str	r2, [r3]
   15174:	b	151f0 <rb_event_run+0x1f8>
   15178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1517c:	ldr	r2, [pc, #204]	; 15250 <rb_event_run+0x258>
   15180:	add	r2, pc, r2
   15184:	mov	r1, r2
   15188:	mov	r0, r3
   1518c:	bl	148e0 <rb_dlinkDelete>
   15190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15194:	ldr	r3, [r3, #20]
   15198:	mov	r0, r3
   1519c:	bl	14a5c <rb_free>
   151a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151a4:	bl	14a5c <rb_free>
   151a8:	b	151f0 <rb_event_run+0x1f8>
   151ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151b0:	ldr	r2, [r3, #28]
   151b4:	ldr	r3, [pc, #152]	; 15254 <rb_event_run+0x25c>
   151b8:	add	r3, pc, r3
   151bc:	ldr	r3, [r3]
   151c0:	cmp	r2, r3
   151c4:	blt	151dc <rb_event_run+0x1e4>
   151c8:	ldr	r3, [pc, #136]	; 15258 <rb_event_run+0x260>
   151cc:	add	r3, pc, r3
   151d0:	ldr	r3, [r3]
   151d4:	cmn	r3, #1
   151d8:	bne	151f0 <rb_event_run+0x1f8>
   151dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151e0:	ldr	r2, [r3, #28]
   151e4:	ldr	r3, [pc, #112]	; 1525c <rb_event_run+0x264>
   151e8:	add	r3, pc, r3
   151ec:	str	r2, [r3]
   151f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   151f4:	str	r3, [fp, #-16]
   151f8:	ldr	r3, [fp, #-16]
   151fc:	cmp	r3, #0
   15200:	beq	15210 <rb_event_run+0x218>
   15204:	ldr	r3, [fp, #-16]
   15208:	ldr	r3, [r3, #8]
   1520c:	b	15214 <rb_event_run+0x21c>
   15210:	mov	r3, #0
   15214:	str	r3, [fp, #-20]	; 0xffffffec
   15218:	ldr	r3, [fp, #-16]
   1521c:	cmp	r3, #0
   15220:	bne	15058 <rb_event_run+0x60>
   15224:	b	1522c <rb_event_run+0x234>
   15228:	nop			; (mov r0, r0)
   1522c:	sub	sp, fp, #8
   15230:	pop	{r4, fp, pc}
   15234:	.word	0x0001f898
   15238:	.word	0x000322f8
   1523c:	.word	0x000322a4
   15240:	.word	0x00032228
   15244:	.word	0x0001f774
   15248:	.word	0x0001f760
   1524c:	.word	0x0001f744
   15250:	.word	0x000321a0
   15254:	.word	0x0001f6f8
   15258:	.word	0x0001f6e4
   1525c:	.word	0x0001f6c8

00015260 <rb_event_io_register_all>:
   15260:	push	{fp, lr}
   15264:	add	fp, sp, #4
   15268:	sub	sp, sp, #8
   1526c:	bl	124e0 <rb_io_supports_event>
   15270:	mov	r3, r0
   15274:	cmp	r3, #0
   15278:	beq	152cc <rb_event_io_register_all+0x6c>
   1527c:	ldr	r3, [pc, #84]	; 152d8 <rb_event_io_register_all+0x78>
   15280:	add	r3, pc, r3
   15284:	ldr	r3, [r3]
   15288:	str	r3, [fp, #-8]
   1528c:	b	152bc <rb_event_io_register_all+0x5c>
   15290:	ldr	r3, [fp, #-8]
   15294:	ldr	r3, [r3]
   15298:	str	r3, [fp, #-12]
   1529c:	ldr	r3, [fp, #-12]
   152a0:	ldr	r3, [r3, #32]
   152a4:	mov	r1, r3
   152a8:	ldr	r0, [fp, #-12]
   152ac:	bl	123a8 <rb_io_sched_event>
   152b0:	ldr	r3, [fp, #-8]
   152b4:	ldr	r3, [r3, #8]
   152b8:	str	r3, [fp, #-8]
   152bc:	ldr	r3, [fp, #-8]
   152c0:	cmp	r3, #0
   152c4:	bne	15290 <rb_event_io_register_all+0x30>
   152c8:	b	152d0 <rb_event_io_register_all+0x70>
   152cc:	nop			; (mov r0, r0)
   152d0:	sub	sp, fp, #4
   152d4:	pop	{fp, pc}
   152d8:	.word	0x000320a0

000152dc <rb_event_init>:
   152dc:	push	{fp, lr}
   152e0:	add	fp, sp, #4
   152e4:	mov	r2, #33	; 0x21
   152e8:	ldr	r3, [pc, #28]	; 1530c <rb_event_init+0x30>
   152ec:	add	r3, pc, r3
   152f0:	mov	r1, r3
   152f4:	ldr	r3, [pc, #20]	; 15310 <rb_event_init+0x34>
   152f8:	add	r3, pc, r3
   152fc:	mov	r0, r3
   15300:	bl	470c <rb_strlcpy@plt>
   15304:	nop			; (mov r0, r0)
   15308:	pop	{fp, pc}
   1530c:	.word	0x0000dcb4
   15310:	.word	0x00032004

00015314 <rb_dump_events>:
   15314:	push	{r4, r5, r6, fp, lr}
   15318:	add	fp, sp, #16
   1531c:	sub	sp, sp, #548	; 0x224
   15320:	str	r0, [fp, #-552]	; 0xfffffdd8
   15324:	str	r1, [fp, #-556]	; 0xfffffdd4
   15328:	mov	r3, #512	; 0x200
   1532c:	str	r3, [fp, #-28]	; 0xffffffe4
   15330:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15334:	sub	r0, fp, #544	; 0x220
   15338:	ldr	r3, [pc, #236]	; 1542c <rb_dump_events+0x118>
   1533c:	add	r3, pc, r3
   15340:	ldr	r2, [pc, #232]	; 15430 <rb_dump_events+0x11c>
   15344:	add	r2, pc, r2
   15348:	bl	4c34 <snprintf@plt>
   1534c:	sub	r2, fp, #544	; 0x220
   15350:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   15354:	ldr	r1, [fp, #-556]	; 0xfffffdd4
   15358:	mov	r0, r2
   1535c:	blx	r3
   15360:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15364:	sub	r3, fp, #544	; 0x220
   15368:	ldr	r1, [pc, #196]	; 15434 <rb_dump_events+0x120>
   1536c:	add	r1, pc, r1
   15370:	mov	r0, r3
   15374:	bl	470c <rb_strlcpy@plt>
   15378:	sub	r2, fp, #544	; 0x220
   1537c:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   15380:	ldr	r1, [fp, #-556]	; 0xfffffdd4
   15384:	mov	r0, r2
   15388:	blx	r3
   1538c:	ldr	r3, [pc, #164]	; 15438 <rb_dump_events+0x124>
   15390:	add	r3, pc, r3
   15394:	ldr	r3, [r3]
   15398:	str	r3, [fp, #-24]	; 0xffffffe8
   1539c:	b	15414 <rb_dump_events+0x100>
   153a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153a4:	ldr	r3, [r3]
   153a8:	str	r3, [fp, #-32]	; 0xffffffe0
   153ac:	ldr	r5, [fp, #-28]	; 0xffffffe4
   153b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   153b4:	ldr	r6, [r3, #20]
   153b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   153bc:	ldr	r4, [r3, #28]
   153c0:	bl	4868 <rb_current_time@plt>
   153c4:	mov	r3, r0
   153c8:	sub	r3, r4, r3
   153cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   153d0:	ldr	r2, [r2, #24]
   153d4:	sub	r0, fp, #544	; 0x220
   153d8:	str	r2, [sp, #4]
   153dc:	str	r3, [sp]
   153e0:	mov	r3, r6
   153e4:	ldr	r2, [pc, #80]	; 1543c <rb_dump_events+0x128>
   153e8:	add	r2, pc, r2
   153ec:	mov	r1, r5
   153f0:	bl	4c34 <snprintf@plt>
   153f4:	sub	r2, fp, #544	; 0x220
   153f8:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   153fc:	ldr	r1, [fp, #-556]	; 0xfffffdd4
   15400:	mov	r0, r2
   15404:	blx	r3
   15408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1540c:	ldr	r3, [r3, #8]
   15410:	str	r3, [fp, #-24]	; 0xffffffe8
   15414:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15418:	cmp	r3, #0
   1541c:	bne	153a0 <rb_dump_events+0x8c>
   15420:	nop			; (mov r0, r0)
   15424:	sub	sp, fp, #16
   15428:	pop	{r4, r5, r6, fp, pc}
   1542c:	.word	0x00031fc0
   15430:	.word	0x0000dc64
   15434:	.word	0x0000dc54
   15438:	.word	0x00031f90
   1543c:	.word	0x0000dc04

00015440 <rb_set_back_events>:
   15440:	push	{fp}		; (str fp, [sp, #-4]!)
   15444:	add	fp, sp, #0
   15448:	sub	sp, sp, #20
   1544c:	str	r0, [fp, #-16]
   15450:	ldr	r3, [pc, #124]	; 154d4 <rb_set_back_events+0x94>
   15454:	add	r3, pc, r3
   15458:	ldr	r3, [r3]
   1545c:	str	r3, [fp, #-8]
   15460:	b	154b8 <rb_set_back_events+0x78>
   15464:	ldr	r3, [fp, #-8]
   15468:	ldr	r3, [r3]
   1546c:	str	r3, [fp, #-12]
   15470:	ldr	r3, [fp, #-12]
   15474:	ldr	r2, [r3, #28]
   15478:	ldr	r3, [fp, #-16]
   1547c:	cmp	r2, r3
   15480:	ble	154a0 <rb_set_back_events+0x60>
   15484:	ldr	r3, [fp, #-12]
   15488:	ldr	r2, [r3, #28]
   1548c:	ldr	r3, [fp, #-16]
   15490:	sub	r2, r2, r3
   15494:	ldr	r3, [fp, #-12]
   15498:	str	r2, [r3, #28]
   1549c:	b	154ac <rb_set_back_events+0x6c>
   154a0:	ldr	r3, [fp, #-12]
   154a4:	mov	r2, #0
   154a8:	str	r2, [r3, #28]
   154ac:	ldr	r3, [fp, #-8]
   154b0:	ldr	r3, [r3, #8]
   154b4:	str	r3, [fp, #-8]
   154b8:	ldr	r3, [fp, #-8]
   154bc:	cmp	r3, #0
   154c0:	bne	15464 <rb_set_back_events+0x24>
   154c4:	nop			; (mov r0, r0)
   154c8:	add	sp, fp, #0
   154cc:	pop	{fp}		; (ldr fp, [sp], #4)
   154d0:	bx	lr
   154d4:	.word	0x00031ecc

000154d8 <rb_event_update>:
   154d8:	push	{fp, lr}
   154dc:	add	fp, sp, #4
   154e0:	sub	sp, sp, #16
   154e4:	str	r0, [fp, #-16]
   154e8:	str	r1, [fp, #-20]	; 0xffffffec
   154ec:	ldr	r3, [fp, #-16]
   154f0:	cmp	r3, #0
   154f4:	beq	15550 <rb_event_update+0x78>
   154f8:	ldr	r3, [fp, #-16]
   154fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15500:	str	r2, [r3, #24]
   15504:	ldr	r0, [fp, #-20]	; 0xffffffec
   15508:	bl	14dd4 <rb_event_frequency>
   1550c:	str	r0, [fp, #-8]
   15510:	bl	4868 <rb_current_time@plt>
   15514:	mov	r2, r0
   15518:	ldr	r3, [fp, #-8]
   1551c:	add	r2, r2, r3
   15520:	ldr	r3, [fp, #-16]
   15524:	ldr	r3, [r3, #28]
   15528:	cmp	r2, r3
   1552c:	bge	15558 <rb_event_update+0x80>
   15530:	bl	4868 <rb_current_time@plt>
   15534:	mov	r2, r0
   15538:	ldr	r3, [fp, #-8]
   1553c:	add	r2, r2, r3
   15540:	ldr	r3, [fp, #-16]
   15544:	str	r2, [r3, #28]
   15548:	nop			; (mov r0, r0)
   1554c:	b	15558 <rb_event_update+0x80>
   15550:	nop			; (mov r0, r0)
   15554:	b	1555c <rb_event_update+0x84>
   15558:	nop			; (mov r0, r0)
   1555c:	sub	sp, fp, #4
   15560:	pop	{fp, pc}

00015564 <rb_event_next>:
   15564:	push	{fp}		; (str fp, [sp, #-4]!)
   15568:	add	fp, sp, #0
   1556c:	ldr	r3, [pc, #20]	; 15588 <rb_event_next+0x24>
   15570:	add	r3, pc, r3
   15574:	ldr	r3, [r3]
   15578:	mov	r0, r3
   1557c:	add	sp, fp, #0
   15580:	pop	{fp}		; (ldr fp, [sp], #4)
   15584:	bx	lr
   15588:	.word	0x0001f340

0001558c <rb_malloc>:
   1558c:	push	{fp, lr}
   15590:	add	fp, sp, #4
   15594:	sub	sp, sp, #16
   15598:	str	r0, [fp, #-16]
   1559c:	ldr	r1, [fp, #-16]
   155a0:	mov	r0, #1
   155a4:	bl	4658 <calloc@plt>
   155a8:	mov	r3, r0
   155ac:	str	r3, [fp, #-8]
   155b0:	ldr	r3, [fp, #-8]
   155b4:	cmp	r3, #0
   155b8:	moveq	r3, #1
   155bc:	movne	r3, #0
   155c0:	uxtb	r3, r3
   155c4:	cmp	r3, #0
   155c8:	beq	155d0 <rb_malloc+0x44>
   155cc:	bl	4a00 <rb_outofmemory@plt>
   155d0:	ldr	r3, [fp, #-8]
   155d4:	mov	r0, r3
   155d8:	sub	sp, fp, #4
   155dc:	pop	{fp, pc}

000155e0 <rb_ctime>:
   155e0:	push	{r4, fp, lr}
   155e4:	add	fp, sp, #8
   155e8:	sub	sp, sp, #100	; 0x64
   155ec:	str	r0, [fp, #-72]	; 0xffffffb8
   155f0:	str	r1, [fp, #-76]	; 0xffffffb4
   155f4:	str	r2, [fp, #-80]	; 0xffffffb0
   155f8:	sub	r2, fp, #68	; 0x44
   155fc:	sub	r3, fp, #72	; 0x48
   15600:	mov	r1, r2
   15604:	mov	r0, r3
   15608:	bl	4a6c <gmtime_r@plt>
   1560c:	str	r0, [fp, #-24]	; 0xffffffe8
   15610:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15614:	cmp	r3, #0
   15618:	bne	15634 <rb_ctime+0x54>
   1561c:	ldr	r3, [pc, #244]	; 15718 <rb_ctime+0x138>
   15620:	add	r3, pc, r3
   15624:	str	r3, [fp, #-16]
   15628:	mov	r3, #128	; 0x80
   1562c:	str	r3, [fp, #-20]	; 0xffffffec
   15630:	b	15644 <rb_ctime+0x64>
   15634:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15638:	str	r3, [fp, #-16]
   1563c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15640:	str	r3, [fp, #-20]	; 0xffffffec
   15644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15648:	cmp	r3, #0
   1564c:	moveq	r3, #1
   15650:	movne	r3, #0
   15654:	uxtb	r3, r3
   15658:	cmp	r3, #0
   1565c:	beq	15680 <rb_ctime+0xa0>
   15660:	ldr	r2, [fp, #-20]	; 0xffffffec
   15664:	ldr	r3, [pc, #176]	; 1571c <rb_ctime+0x13c>
   15668:	add	r3, pc, r3
   1566c:	mov	r1, r3
   15670:	ldr	r0, [fp, #-16]
   15674:	bl	470c <rb_strlcpy@plt>
   15678:	ldr	r3, [fp, #-16]
   1567c:	b	1570c <rb_ctime+0x12c>
   15680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15684:	ldr	r2, [r3, #24]
   15688:	ldr	r3, [pc, #144]	; 15720 <rb_ctime+0x140>
   1568c:	add	r3, pc, r3
   15690:	ldr	r4, [r3, r2, lsl #2]
   15694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15698:	ldr	r2, [r3, #16]
   1569c:	ldr	r3, [pc, #128]	; 15724 <rb_ctime+0x144>
   156a0:	add	r3, pc, r3
   156a4:	ldr	r2, [r3, r2, lsl #2]
   156a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156ac:	ldr	r1, [r3, #12]
   156b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156b4:	ldr	r0, [r3, #8]
   156b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156bc:	ldr	ip, [r3, #4]
   156c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156c4:	ldr	lr, [r3]
   156c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156cc:	ldr	r3, [r3, #20]
   156d0:	add	r3, r3, #1888	; 0x760
   156d4:	add	r3, r3, #12
   156d8:	str	r3, [sp, #20]
   156dc:	str	lr, [sp, #16]
   156e0:	str	ip, [sp, #12]
   156e4:	str	r0, [sp, #8]
   156e8:	str	r1, [sp, #4]
   156ec:	str	r2, [sp]
   156f0:	mov	r3, r4
   156f4:	ldr	r2, [pc, #44]	; 15728 <rb_ctime+0x148>
   156f8:	add	r2, pc, r2
   156fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15700:	ldr	r0, [fp, #-16]
   15704:	bl	4c34 <snprintf@plt>
   15708:	ldr	r3, [fp, #-16]
   1570c:	mov	r0, r3
   15710:	sub	sp, fp, #8
   15714:	pop	{r4, fp, pc}
   15718:	.word	0x00031f20
   1571c:	.word	0x0000daa0
   15720:	.word	0x0001f2a4
   15724:	.word	0x0001f260
   15728:	.word	0x0000da14

0001572c <rb_date>:
   1572c:	push	{r4, fp, lr}
   15730:	add	fp, sp, #8
   15734:	sub	sp, sp, #92	; 0x5c
   15738:	str	r0, [fp, #-64]	; 0xffffffc0
   1573c:	str	r1, [fp, #-68]	; 0xffffffbc
   15740:	str	r2, [fp, #-72]	; 0xffffffb8
   15744:	sub	r2, fp, #60	; 0x3c
   15748:	sub	r3, fp, #64	; 0x40
   1574c:	mov	r1, r2
   15750:	mov	r0, r3
   15754:	bl	4a6c <gmtime_r@plt>
   15758:	str	r0, [fp, #-16]
   1575c:	ldr	r3, [fp, #-16]
   15760:	cmp	r3, #0
   15764:	moveq	r3, #1
   15768:	movne	r3, #0
   1576c:	uxtb	r3, r3
   15770:	cmp	r3, #0
   15774:	beq	15798 <rb_date+0x6c>
   15778:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1577c:	ldr	r3, [pc, #172]	; 15830 <rb_date+0x104>
   15780:	add	r3, pc, r3
   15784:	mov	r1, r3
   15788:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1578c:	bl	470c <rb_strlcpy@plt>
   15790:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15794:	b	15824 <rb_date+0xf8>
   15798:	ldr	r3, [fp, #-16]
   1579c:	ldr	r2, [r3, #24]
   157a0:	ldr	r3, [pc, #140]	; 15834 <rb_date+0x108>
   157a4:	add	r3, pc, r3
   157a8:	ldr	r4, [r3, r2, lsl #2]
   157ac:	ldr	r3, [fp, #-16]
   157b0:	ldr	r2, [r3, #16]
   157b4:	ldr	r3, [pc, #124]	; 15838 <rb_date+0x10c>
   157b8:	add	r3, pc, r3
   157bc:	ldr	r2, [r3, r2, lsl #2]
   157c0:	ldr	r3, [fp, #-16]
   157c4:	ldr	r1, [r3, #12]
   157c8:	ldr	r3, [fp, #-16]
   157cc:	ldr	r3, [r3, #20]
   157d0:	add	r3, r3, #1888	; 0x760
   157d4:	add	r3, r3, #12
   157d8:	ldr	r0, [fp, #-16]
   157dc:	ldr	r0, [r0, #8]
   157e0:	ldr	ip, [fp, #-16]
   157e4:	ldr	ip, [ip, #4]
   157e8:	ldr	lr, [fp, #-16]
   157ec:	ldr	lr, [lr]
   157f0:	str	lr, [sp, #20]
   157f4:	str	ip, [sp, #16]
   157f8:	str	r0, [sp, #12]
   157fc:	str	r3, [sp, #8]
   15800:	str	r1, [sp, #4]
   15804:	str	r2, [sp]
   15808:	mov	r3, r4
   1580c:	ldr	r2, [pc, #40]	; 1583c <rb_date+0x110>
   15810:	add	r2, pc, r2
   15814:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15818:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1581c:	bl	4c34 <snprintf@plt>
   15820:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15824:	mov	r0, r3
   15828:	sub	sp, fp, #8
   1582c:	pop	{r4, fp, pc}
   15830:	.word	0x0000d988
   15834:	.word	0x0001f140
   15838:	.word	0x0001f0fc
   1583c:	.word	0x0000d918

00015840 <rb_current_time>:
   15840:	push	{fp}		; (str fp, [sp, #-4]!)
   15844:	add	fp, sp, #0
   15848:	ldr	r3, [pc, #20]	; 15864 <rb_current_time+0x24>
   1584c:	add	r3, pc, r3
   15850:	ldr	r3, [r3]
   15854:	mov	r0, r3
   15858:	add	sp, fp, #0
   1585c:	pop	{fp}		; (ldr fp, [sp], #4)
   15860:	bx	lr
   15864:	.word	0x00031aec

00015868 <rb_current_time_tv>:
   15868:	push	{fp}		; (str fp, [sp, #-4]!)
   1586c:	add	fp, sp, #0
   15870:	ldr	r3, [pc, #16]	; 15888 <rb_current_time_tv+0x20>
   15874:	add	r3, pc, r3
   15878:	mov	r0, r3
   1587c:	add	sp, fp, #0
   15880:	pop	{fp}		; (ldr fp, [sp], #4)
   15884:	bx	lr
   15888:	.word	0x00031ac4

0001588c <rb_lib_log>:
   1588c:	push	{r0, r1, r2, r3}
   15890:	push	{fp, lr}
   15894:	add	fp, sp, #4
   15898:	sub	sp, sp, #8
   1589c:	ldr	r3, [pc, #96]	; 15904 <rb_lib_log+0x78>
   158a0:	add	r3, pc, r3
   158a4:	ldr	r3, [r3]
   158a8:	cmp	r3, #0
   158ac:	beq	158f0 <rb_lib_log+0x64>
   158b0:	add	r3, fp, #8
   158b4:	str	r3, [fp, #-8]
   158b8:	ldr	r3, [fp, #-8]
   158bc:	ldr	r2, [fp, #4]
   158c0:	mov	r1, #512	; 0x200
   158c4:	ldr	r0, [pc, #60]	; 15908 <rb_lib_log+0x7c>
   158c8:	add	r0, pc, r0
   158cc:	bl	45c8 <vsnprintf@plt>
   158d0:	ldr	r3, [pc, #52]	; 1590c <rb_lib_log+0x80>
   158d4:	add	r3, pc, r3
   158d8:	ldr	r3, [r3]
   158dc:	ldr	r2, [pc, #44]	; 15910 <rb_lib_log+0x84>
   158e0:	add	r2, pc, r2
   158e4:	mov	r0, r2
   158e8:	blx	r3
   158ec:	b	158f4 <rb_lib_log+0x68>
   158f0:	nop			; (mov r0, r0)
   158f4:	sub	sp, fp, #4
   158f8:	pop	{fp, lr}
   158fc:	add	sp, sp, #16
   15900:	bx	lr
   15904:	.word	0x00031a8c
   15908:	.word	0x00031a78
   1590c:	.word	0x00031a58
   15910:	.word	0x00031a60

00015914 <rb_lib_die>:
   15914:	push	{r0, r1, r2, r3}
   15918:	push	{fp, lr}
   1591c:	add	fp, sp, #4
   15920:	sub	sp, sp, #8
   15924:	ldr	r3, [pc, #96]	; 1598c <rb_lib_die+0x78>
   15928:	add	r3, pc, r3
   1592c:	ldr	r3, [r3]
   15930:	cmp	r3, #0
   15934:	bne	1593c <rb_lib_die+0x28>
   15938:	bl	4430 <abort@plt>
   1593c:	add	r3, fp, #8
   15940:	str	r3, [fp, #-8]
   15944:	ldr	r3, [fp, #-8]
   15948:	ldr	r2, [fp, #4]
   1594c:	mov	r1, #512	; 0x200
   15950:	ldr	r0, [pc, #56]	; 15990 <rb_lib_die+0x7c>
   15954:	add	r0, pc, r0
   15958:	bl	45c8 <vsnprintf@plt>
   1595c:	ldr	r3, [pc, #48]	; 15994 <rb_lib_die+0x80>
   15960:	add	r3, pc, r3
   15964:	ldr	r3, [r3]
   15968:	ldr	r2, [pc, #40]	; 15998 <rb_lib_die+0x84>
   1596c:	add	r2, pc, r2
   15970:	mov	r0, r2
   15974:	blx	r3
   15978:	nop			; (mov r0, r0)
   1597c:	sub	sp, fp, #4
   15980:	pop	{fp, lr}
   15984:	add	sp, sp, #16
   15988:	bx	lr
   1598c:	.word	0x00031a0c
   15990:	.word	0x000319ec
   15994:	.word	0x000319d4
   15998:	.word	0x000319d4

0001599c <rb_lib_restart>:
   1599c:	push	{r0, r1, r2, r3}
   159a0:	push	{fp, lr}
   159a4:	add	fp, sp, #4
   159a8:	sub	sp, sp, #8
   159ac:	ldr	r3, [pc, #80]	; 15a04 <rb_lib_restart+0x68>
   159b0:	add	r3, pc, r3
   159b4:	ldr	r3, [r3]
   159b8:	cmp	r3, #0
   159bc:	bne	159c4 <rb_lib_restart+0x28>
   159c0:	bl	4430 <abort@plt>
   159c4:	add	r3, fp, #8
   159c8:	str	r3, [fp, #-8]
   159cc:	ldr	r3, [fp, #-8]
   159d0:	ldr	r2, [fp, #4]
   159d4:	mov	r1, #512	; 0x200
   159d8:	ldr	r0, [pc, #40]	; 15a08 <rb_lib_restart+0x6c>
   159dc:	add	r0, pc, r0
   159e0:	bl	45c8 <vsnprintf@plt>
   159e4:	ldr	r3, [pc, #32]	; 15a0c <rb_lib_restart+0x70>
   159e8:	add	r3, pc, r3
   159ec:	ldr	r3, [r3]
   159f0:	ldr	r2, [pc, #24]	; 15a10 <rb_lib_restart+0x74>
   159f4:	add	r2, pc, r2
   159f8:	mov	r0, r2
   159fc:	blx	r3
   15a00:	bl	4430 <abort@plt>
   15a04:	.word	0x00031980
   15a08:	.word	0x00031964
   15a0c:	.word	0x00031948
   15a10:	.word	0x0003194c

00015a14 <rb_set_time>:
   15a14:	push	{fp, lr}
   15a18:	add	fp, sp, #4
   15a1c:	sub	sp, sp, #8
   15a20:	sub	r3, fp, #12
   15a24:	mov	r1, #0
   15a28:	mov	r0, r3
   15a2c:	bl	4628 <rb_gettimeofday@plt>
   15a30:	mov	r3, r0
   15a34:	cmn	r3, #1
   15a38:	moveq	r3, #1
   15a3c:	movne	r3, #0
   15a40:	uxtb	r3, r3
   15a44:	cmp	r3, #0
   15a48:	beq	15a88 <rb_set_time+0x74>
   15a4c:	bl	4d78 <__errno_location@plt>
   15a50:	mov	r3, r0
   15a54:	ldr	r3, [r3]
   15a58:	mov	r0, r3
   15a5c:	bl	440c <strerror@plt>
   15a60:	mov	r3, r0
   15a64:	mov	r1, r3
   15a68:	ldr	r3, [pc, #112]	; 15ae0 <rb_set_time+0xcc>
   15a6c:	add	r3, pc, r3
   15a70:	mov	r0, r3
   15a74:	bl	4994 <rb_lib_log@plt>
   15a78:	ldr	r3, [pc, #100]	; 15ae4 <rb_set_time+0xd0>
   15a7c:	add	r3, pc, r3
   15a80:	mov	r0, r3
   15a84:	bl	4ad8 <rb_lib_restart@plt>
   15a88:	ldr	r2, [fp, #-12]
   15a8c:	ldr	r3, [pc, #84]	; 15ae8 <rb_set_time+0xd4>
   15a90:	add	r3, pc, r3
   15a94:	ldr	r3, [r3]
   15a98:	cmp	r2, r3
   15a9c:	bge	15abc <rb_set_time+0xa8>
   15aa0:	ldr	r3, [pc, #68]	; 15aec <rb_set_time+0xd8>
   15aa4:	add	r3, pc, r3
   15aa8:	ldr	r2, [r3]
   15aac:	ldr	r3, [fp, #-12]
   15ab0:	sub	r3, r2, r3
   15ab4:	mov	r0, r3
   15ab8:	bl	15440 <rb_set_back_events>
   15abc:	ldr	r3, [pc, #44]	; 15af0 <rb_set_time+0xdc>
   15ac0:	add	r3, pc, r3
   15ac4:	mov	r2, r3
   15ac8:	sub	r3, fp, #12
   15acc:	ldm	r3, {r0, r1}
   15ad0:	stm	r2, {r0, r1}
   15ad4:	nop			; (mov r0, r0)
   15ad8:	sub	sp, fp, #4
   15adc:	pop	{fp, pc}
   15ae0:	.word	0x0000d6e4
   15ae4:	.word	0x0000d6e8
   15ae8:	.word	0x000318a8
   15aec:	.word	0x00031894
   15af0:	.word	0x00031878

00015af4 <rb_lib_version>:
   15af4:	push	{r4, fp, lr}
   15af8:	add	fp, sp, #8
   15afc:	sub	sp, sp, #524	; 0x20c
   15b00:	ldr	r4, [pc, #84]	; 15b5c <rb_lib_version+0x68>
   15b04:	add	r4, pc, r4
   15b08:	sub	r3, fp, #524	; 0x20c
   15b0c:	mov	r1, #512	; 0x200
   15b10:	mov	r0, r3
   15b14:	bl	140cc <rb_get_ssl_info>
   15b18:	ldr	r3, [pc, #64]	; 15b60 <rb_lib_version+0x6c>
   15b1c:	ldr	r3, [r4, r3]
   15b20:	ldr	r2, [r3]
   15b24:	sub	r3, fp, #524	; 0x20c
   15b28:	str	r3, [sp]
   15b2c:	mov	r3, r2
   15b30:	ldr	r2, [pc, #44]	; 15b64 <rb_lib_version+0x70>
   15b34:	add	r2, pc, r2
   15b38:	mov	r1, #640	; 0x280
   15b3c:	ldr	r0, [pc, #36]	; 15b68 <rb_lib_version+0x74>
   15b40:	add	r0, pc, r0
   15b44:	bl	4c34 <snprintf@plt>
   15b48:	ldr	r3, [pc, #28]	; 15b6c <rb_lib_version+0x78>
   15b4c:	add	r3, pc, r3
   15b50:	mov	r0, r3
   15b54:	sub	sp, fp, #8
   15b58:	pop	{r4, fp, pc}
   15b5c:	.word	0x0001e4f4
   15b60:	.word	0x000003b8
   15b64:	.word	0x0000d640
   15b68:	.word	0x00031a80
   15b6c:	.word	0x00031a74

00015b70 <rb_lib_init>:
   15b70:	push	{fp, lr}
   15b74:	add	fp, sp, #4
   15b78:	sub	sp, sp, #16
   15b7c:	str	r0, [fp, #-8]
   15b80:	str	r1, [fp, #-12]
   15b84:	str	r2, [fp, #-16]
   15b88:	str	r3, [fp, #-20]	; 0xffffffec
   15b8c:	bl	4a0c <rb_set_time@plt>
   15b90:	ldr	r3, [pc, #108]	; 15c04 <rb_lib_init+0x94>
   15b94:	add	r3, pc, r3
   15b98:	ldr	r2, [fp, #-8]
   15b9c:	str	r2, [r3]
   15ba0:	ldr	r3, [pc, #96]	; 15c08 <rb_lib_init+0x98>
   15ba4:	add	r3, pc, r3
   15ba8:	ldr	r2, [fp, #-12]
   15bac:	str	r2, [r3]
   15bb0:	ldr	r3, [pc, #84]	; 15c0c <rb_lib_init+0x9c>
   15bb4:	add	r3, pc, r3
   15bb8:	ldr	r2, [fp, #-16]
   15bbc:	str	r2, [r3]
   15bc0:	bl	4670 <rb_event_init@plt>
   15bc4:	bl	4a54 <rb_init_bh@plt>
   15bc8:	ldr	r2, [fp, #12]
   15bcc:	ldr	r1, [fp, #4]
   15bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   15bd4:	bl	4b74 <rb_fdlist_init@plt>
   15bd8:	bl	43f4 <rb_init_netio@plt>
   15bdc:	ldr	r0, [fp, #8]
   15be0:	bl	494c <rb_init_rb_dlink_nodes@plt>
   15be4:	bl	124e0 <rb_io_supports_event>
   15be8:	mov	r3, r0
   15bec:	cmp	r3, #0
   15bf0:	beq	15bf8 <rb_lib_init+0x88>
   15bf4:	bl	12528 <rb_io_init_event>
   15bf8:	nop			; (mov r0, r0)
   15bfc:	sub	sp, fp, #4
   15c00:	pop	{fp, pc}
   15c04:	.word	0x00031798
   15c08:	.word	0x0003178c
   15c0c:	.word	0x00031780

00015c10 <rb_lib_loop>:
   15c10:	push	{fp, lr}
   15c14:	add	fp, sp, #4
   15c18:	sub	sp, sp, #16
   15c1c:	str	r0, [fp, #-16]
   15c20:	bl	4a0c <rb_set_time@plt>
   15c24:	bl	124e0 <rb_io_supports_event>
   15c28:	mov	r3, r0
   15c2c:	cmp	r3, #0
   15c30:	beq	15c40 <rb_lib_loop+0x30>
   15c34:	mvn	r0, #0
   15c38:	bl	45b0 <rb_select@plt>
   15c3c:	b	15c34 <rb_lib_loop+0x24>
   15c40:	ldr	r3, [fp, #-16]
   15c44:	cmp	r3, #0
   15c48:	bne	15cb8 <rb_lib_loop+0xa8>
   15c4c:	bl	4cb8 <rb_event_next@plt>
   15c50:	str	r0, [fp, #-8]
   15c54:	ldr	r3, [fp, #-8]
   15c58:	cmp	r3, #0
   15c5c:	ble	15ca0 <rb_lib_loop+0x90>
   15c60:	bl	4868 <rb_current_time@plt>
   15c64:	mov	r2, r0
   15c68:	ldr	r3, [fp, #-8]
   15c6c:	sub	r3, r3, r2
   15c70:	str	r3, [fp, #-8]
   15c74:	ldr	r3, [fp, #-8]
   15c78:	cmp	r3, #0
   15c7c:	bgt	15c8c <rb_lib_loop+0x7c>
   15c80:	mov	r3, #1000	; 0x3e8
   15c84:	str	r3, [fp, #-8]
   15c88:	b	15ca8 <rb_lib_loop+0x98>
   15c8c:	ldr	r3, [fp, #-8]
   15c90:	mov	r2, #1000	; 0x3e8
   15c94:	mul	r3, r2, r3
   15c98:	str	r3, [fp, #-8]
   15c9c:	b	15ca8 <rb_lib_loop+0x98>
   15ca0:	mvn	r3, #0
   15ca4:	str	r3, [fp, #-8]
   15ca8:	ldr	r3, [fp, #-8]
   15cac:	mov	r0, r3
   15cb0:	bl	45b0 <rb_select@plt>
   15cb4:	b	15cc4 <rb_lib_loop+0xb4>
   15cb8:	ldr	r3, [fp, #-16]
   15cbc:	mov	r0, r3
   15cc0:	bl	45b0 <rb_select@plt>
   15cc4:	bl	4a3c <rb_event_run@plt>
   15cc8:	b	15c40 <rb_lib_loop+0x30>

00015ccc <rb_strtok_r>:
   15ccc:	push	{fp, lr}
   15cd0:	add	fp, sp, #4
   15cd4:	sub	sp, sp, #16
   15cd8:	str	r0, [fp, #-8]
   15cdc:	str	r1, [fp, #-12]
   15ce0:	str	r2, [fp, #-16]
   15ce4:	ldr	r2, [fp, #-16]
   15ce8:	ldr	r1, [fp, #-12]
   15cec:	ldr	r0, [fp, #-8]
   15cf0:	bl	4acc <strtok_r@plt>
   15cf4:	mov	r3, r0
   15cf8:	mov	r0, r3
   15cfc:	sub	sp, fp, #4
   15d00:	pop	{fp, pc}

00015d04 <rb_base64_encode>:
   15d04:	push	{fp, lr}
   15d08:	add	fp, sp, #4
   15d0c:	sub	sp, sp, #24
   15d10:	str	r0, [fp, #-24]	; 0xffffffe8
   15d14:	str	r1, [fp, #-28]	; 0xffffffe4
   15d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d1c:	str	r3, [fp, #-8]
   15d20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15d24:	add	r3, r3, #2
   15d28:	cmp	r3, #0
   15d2c:	bge	15d38 <rb_base64_encode+0x34>
   15d30:	mov	r3, #0
   15d34:	b	15fb8 <rb_base64_encode+0x2b4>
   15d38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15d3c:	add	r3, r3, #2
   15d40:	ldr	r2, [pc, #636]	; 15fc4 <rb_base64_encode+0x2c0>
   15d44:	smull	r1, r2, r2, r3
   15d48:	asr	r3, r3, #31
   15d4c:	sub	r2, r2, r3
   15d50:	mov	r3, r2
   15d54:	lsl	r3, r3, #2
   15d58:	add	r3, r3, r2
   15d5c:	mov	r0, r3
   15d60:	bl	1558c <rb_malloc>
   15d64:	str	r0, [fp, #-16]
   15d68:	ldr	r3, [fp, #-16]
   15d6c:	str	r3, [fp, #-12]
   15d70:	b	15e74 <rb_base64_encode+0x170>
   15d74:	ldr	r3, [fp, #-12]
   15d78:	add	r2, r3, #1
   15d7c:	str	r2, [fp, #-12]
   15d80:	ldr	r2, [fp, #-8]
   15d84:	ldrb	r2, [r2]
   15d88:	lsr	r2, r2, #2
   15d8c:	uxtb	r2, r2
   15d90:	mov	r1, r2
   15d94:	ldr	r2, [pc, #556]	; 15fc8 <rb_base64_encode+0x2c4>
   15d98:	add	r2, pc, r2
   15d9c:	ldrb	r2, [r2, r1]
   15da0:	strb	r2, [r3]
   15da4:	ldr	r3, [fp, #-12]
   15da8:	add	r2, r3, #1
   15dac:	str	r2, [fp, #-12]
   15db0:	ldr	r2, [fp, #-8]
   15db4:	ldrb	r2, [r2]
   15db8:	lsl	r2, r2, #4
   15dbc:	and	r2, r2, #48	; 0x30
   15dc0:	ldr	r1, [fp, #-8]
   15dc4:	add	r1, r1, #1
   15dc8:	ldrb	r1, [r1]
   15dcc:	lsr	r1, r1, #4
   15dd0:	uxtb	r1, r1
   15dd4:	add	r2, r2, r1
   15dd8:	ldr	r1, [pc, #492]	; 15fcc <rb_base64_encode+0x2c8>
   15ddc:	add	r1, pc, r1
   15de0:	ldrb	r2, [r1, r2]
   15de4:	strb	r2, [r3]
   15de8:	ldr	r3, [fp, #-12]
   15dec:	add	r2, r3, #1
   15df0:	str	r2, [fp, #-12]
   15df4:	ldr	r2, [fp, #-8]
   15df8:	add	r2, r2, #1
   15dfc:	ldrb	r2, [r2]
   15e00:	lsl	r2, r2, #2
   15e04:	and	r2, r2, #60	; 0x3c
   15e08:	ldr	r1, [fp, #-8]
   15e0c:	add	r1, r1, #2
   15e10:	ldrb	r1, [r1]
   15e14:	lsr	r1, r1, #6
   15e18:	uxtb	r1, r1
   15e1c:	add	r2, r2, r1
   15e20:	ldr	r1, [pc, #424]	; 15fd0 <rb_base64_encode+0x2cc>
   15e24:	add	r1, pc, r1
   15e28:	ldrb	r2, [r1, r2]
   15e2c:	strb	r2, [r3]
   15e30:	ldr	r3, [fp, #-12]
   15e34:	add	r2, r3, #1
   15e38:	str	r2, [fp, #-12]
   15e3c:	ldr	r2, [fp, #-8]
   15e40:	add	r2, r2, #2
   15e44:	ldrb	r2, [r2]
   15e48:	and	r2, r2, #63	; 0x3f
   15e4c:	ldr	r1, [pc, #384]	; 15fd4 <rb_base64_encode+0x2d0>
   15e50:	add	r1, pc, r1
   15e54:	ldrb	r2, [r1, r2]
   15e58:	strb	r2, [r3]
   15e5c:	ldr	r3, [fp, #-8]
   15e60:	add	r3, r3, #3
   15e64:	str	r3, [fp, #-8]
   15e68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15e6c:	sub	r3, r3, #3
   15e70:	str	r3, [fp, #-28]	; 0xffffffe4
   15e74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15e78:	cmp	r3, #2
   15e7c:	bgt	15d74 <rb_base64_encode+0x70>
   15e80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15e84:	cmp	r3, #0
   15e88:	beq	15fa8 <rb_base64_encode+0x2a4>
   15e8c:	ldr	r3, [fp, #-12]
   15e90:	add	r2, r3, #1
   15e94:	str	r2, [fp, #-12]
   15e98:	ldr	r2, [fp, #-8]
   15e9c:	ldrb	r2, [r2]
   15ea0:	lsr	r2, r2, #2
   15ea4:	uxtb	r2, r2
   15ea8:	mov	r1, r2
   15eac:	ldr	r2, [pc, #292]	; 15fd8 <rb_base64_encode+0x2d4>
   15eb0:	add	r2, pc, r2
   15eb4:	ldrb	r2, [r2, r1]
   15eb8:	strb	r2, [r3]
   15ebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15ec0:	cmp	r3, #1
   15ec4:	ble	15f54 <rb_base64_encode+0x250>
   15ec8:	ldr	r3, [fp, #-12]
   15ecc:	add	r2, r3, #1
   15ed0:	str	r2, [fp, #-12]
   15ed4:	ldr	r2, [fp, #-8]
   15ed8:	ldrb	r2, [r2]
   15edc:	lsl	r2, r2, #4
   15ee0:	and	r2, r2, #48	; 0x30
   15ee4:	ldr	r1, [fp, #-8]
   15ee8:	add	r1, r1, #1
   15eec:	ldrb	r1, [r1]
   15ef0:	lsr	r1, r1, #4
   15ef4:	uxtb	r1, r1
   15ef8:	add	r2, r2, r1
   15efc:	ldr	r1, [pc, #216]	; 15fdc <rb_base64_encode+0x2d8>
   15f00:	add	r1, pc, r1
   15f04:	ldrb	r2, [r1, r2]
   15f08:	strb	r2, [r3]
   15f0c:	ldr	r3, [fp, #-12]
   15f10:	add	r2, r3, #1
   15f14:	str	r2, [fp, #-12]
   15f18:	ldr	r2, [fp, #-8]
   15f1c:	add	r2, r2, #1
   15f20:	ldrb	r2, [r2]
   15f24:	lsl	r2, r2, #2
   15f28:	and	r2, r2, #60	; 0x3c
   15f2c:	ldr	r1, [pc, #172]	; 15fe0 <rb_base64_encode+0x2dc>
   15f30:	add	r1, pc, r1
   15f34:	ldrb	r2, [r1, r2]
   15f38:	strb	r2, [r3]
   15f3c:	ldr	r3, [fp, #-12]
   15f40:	add	r2, r3, #1
   15f44:	str	r2, [fp, #-12]
   15f48:	mov	r2, #61	; 0x3d
   15f4c:	strb	r2, [r3]
   15f50:	b	15fa8 <rb_base64_encode+0x2a4>
   15f54:	ldr	r3, [fp, #-12]
   15f58:	add	r2, r3, #1
   15f5c:	str	r2, [fp, #-12]
   15f60:	ldr	r2, [fp, #-8]
   15f64:	ldrb	r2, [r2]
   15f68:	lsl	r2, r2, #4
   15f6c:	and	r2, r2, #48	; 0x30
   15f70:	ldr	r1, [pc, #108]	; 15fe4 <rb_base64_encode+0x2e0>
   15f74:	add	r1, pc, r1
   15f78:	ldrb	r2, [r1, r2]
   15f7c:	strb	r2, [r3]
   15f80:	ldr	r3, [fp, #-12]
   15f84:	add	r2, r3, #1
   15f88:	str	r2, [fp, #-12]
   15f8c:	mov	r2, #61	; 0x3d
   15f90:	strb	r2, [r3]
   15f94:	ldr	r3, [fp, #-12]
   15f98:	add	r2, r3, #1
   15f9c:	str	r2, [fp, #-12]
   15fa0:	mov	r2, #61	; 0x3d
   15fa4:	strb	r2, [r3]
   15fa8:	ldr	r3, [fp, #-12]
   15fac:	mov	r2, #0
   15fb0:	strb	r2, [r3]
   15fb4:	ldr	r3, [fp, #-16]
   15fb8:	mov	r0, r3
   15fbc:	sub	sp, fp, #4
   15fc0:	pop	{fp, pc}
   15fc4:	.word	0x55555556
   15fc8:	.word	0x0000d3f4
   15fcc:	.word	0x0000d3b0
   15fd0:	.word	0x0000d368
   15fd4:	.word	0x0000d33c
   15fd8:	.word	0x0000d2dc
   15fdc:	.word	0x0000d28c
   15fe0:	.word	0x0000d25c
   15fe4:	.word	0x0000d218

00015fe8 <rb_base64_decode>:
   15fe8:	push	{fp, lr}
   15fec:	add	fp, sp, #4
   15ff0:	sub	sp, sp, #40	; 0x28
   15ff4:	str	r0, [fp, #-32]	; 0xffffffe0
   15ff8:	str	r1, [fp, #-36]	; 0xffffffdc
   15ffc:	str	r2, [fp, #-40]	; 0xffffffd8
   16000:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16004:	str	r3, [fp, #-8]
   16008:	mov	r3, #0
   1600c:	str	r3, [fp, #-12]
   16010:	mov	r3, #0
   16014:	str	r3, [fp, #-16]
   16018:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1601c:	add	r3, r3, #1
   16020:	mov	r0, r3
   16024:	bl	1558c <rb_malloc>
   16028:	str	r0, [fp, #-24]	; 0xffffffe8
   1602c:	b	161ec <rb_base64_decode+0x204>
   16030:	mov	r3, #61	; 0x3d
   16034:	mov	r2, r3
   16038:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1603c:	cmp	r2, r3
   16040:	beq	16224 <rb_base64_decode+0x23c>
   16044:	ldr	r2, [pc, #660]	; 162e0 <rb_base64_decode+0x2f8>
   16048:	add	r2, pc, r2
   1604c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16050:	lsl	r3, r3, #1
   16054:	add	r3, r2, r3
   16058:	ldrsh	r3, [r3]
   1605c:	str	r3, [fp, #-28]	; 0xffffffe4
   16060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16064:	cmp	r3, #0
   16068:	bge	16070 <rb_base64_decode+0x88>
   1606c:	b	161ec <rb_base64_decode+0x204>
   16070:	ldr	r2, [fp, #-12]
   16074:	asr	r3, r2, #31
   16078:	lsr	r3, r3, #30
   1607c:	add	r2, r2, r3
   16080:	and	r2, r2, #3
   16084:	sub	r3, r2, r3
   16088:	cmp	r3, #3
   1608c:	addls	pc, pc, r3, lsl #2
   16090:	b	161e0 <rb_base64_decode+0x1f8>
   16094:	b	160a4 <rb_base64_decode+0xbc>
   16098:	b	160c8 <rb_base64_decode+0xe0>
   1609c:	b	16130 <rb_base64_decode+0x148>
   160a0:	b	16198 <rb_base64_decode+0x1b0>
   160a4:	ldr	r3, [fp, #-16]
   160a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160ac:	add	r3, r2, r3
   160b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   160b4:	uxtb	r2, r2
   160b8:	lsl	r2, r2, #2
   160bc:	uxtb	r2, r2
   160c0:	strb	r2, [r3]
   160c4:	b	161e0 <rb_base64_decode+0x1f8>
   160c8:	ldr	r3, [fp, #-16]
   160cc:	add	r2, r3, #1
   160d0:	str	r2, [fp, #-16]
   160d4:	mov	r1, r3
   160d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160dc:	add	r2, r2, r1
   160e0:	mov	r1, r3
   160e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   160e8:	add	r3, r3, r1
   160ec:	ldrb	r3, [r3]
   160f0:	sxtb	r1, r3
   160f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   160f8:	asr	r3, r3, #4
   160fc:	sxtb	r3, r3
   16100:	orr	r3, r1, r3
   16104:	sxtb	r3, r3
   16108:	uxtb	r3, r3
   1610c:	strb	r3, [r2]
   16110:	ldr	r3, [fp, #-16]
   16114:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16118:	add	r3, r2, r3
   1611c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16120:	lsl	r2, r2, #4
   16124:	uxtb	r2, r2
   16128:	strb	r2, [r3]
   1612c:	b	161e0 <rb_base64_decode+0x1f8>
   16130:	ldr	r3, [fp, #-16]
   16134:	add	r2, r3, #1
   16138:	str	r2, [fp, #-16]
   1613c:	mov	r1, r3
   16140:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16144:	add	r2, r2, r1
   16148:	mov	r1, r3
   1614c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16150:	add	r3, r3, r1
   16154:	ldrb	r3, [r3]
   16158:	sxtb	r1, r3
   1615c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16160:	asr	r3, r3, #2
   16164:	sxtb	r3, r3
   16168:	orr	r3, r1, r3
   1616c:	sxtb	r3, r3
   16170:	uxtb	r3, r3
   16174:	strb	r3, [r2]
   16178:	ldr	r3, [fp, #-16]
   1617c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16180:	add	r3, r2, r3
   16184:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16188:	lsl	r2, r2, #6
   1618c:	uxtb	r2, r2
   16190:	strb	r2, [r3]
   16194:	b	161e0 <rb_base64_decode+0x1f8>
   16198:	ldr	r3, [fp, #-16]
   1619c:	add	r2, r3, #1
   161a0:	str	r2, [fp, #-16]
   161a4:	mov	r1, r3
   161a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   161ac:	add	r2, r2, r1
   161b0:	mov	r1, r3
   161b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   161b8:	add	r3, r3, r1
   161bc:	ldrb	r3, [r3]
   161c0:	sxtb	r1, r3
   161c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   161c8:	sxtb	r3, r3
   161cc:	orr	r3, r1, r3
   161d0:	sxtb	r3, r3
   161d4:	uxtb	r3, r3
   161d8:	strb	r3, [r2]
   161dc:	nop			; (mov r0, r0)
   161e0:	ldr	r3, [fp, #-12]
   161e4:	add	r3, r3, #1
   161e8:	str	r3, [fp, #-12]
   161ec:	ldr	r3, [fp, #-8]
   161f0:	add	r2, r3, #1
   161f4:	str	r2, [fp, #-8]
   161f8:	ldrb	r3, [r3]
   161fc:	str	r3, [fp, #-28]	; 0xffffffe4
   16200:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16204:	cmp	r3, #0
   16208:	beq	16228 <rb_base64_decode+0x240>
   1620c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16210:	sub	r2, r3, #1
   16214:	str	r2, [fp, #-36]	; 0xffffffdc
   16218:	cmp	r3, #0
   1621c:	bgt	16030 <rb_base64_decode+0x48>
   16220:	b	16228 <rb_base64_decode+0x240>
   16224:	nop			; (mov r0, r0)
   16228:	ldr	r3, [fp, #-16]
   1622c:	str	r3, [fp, #-20]	; 0xffffffec
   16230:	mov	r3, #61	; 0x3d
   16234:	mov	r2, r3
   16238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1623c:	cmp	r2, r3
   16240:	bne	162b0 <rb_base64_decode+0x2c8>
   16244:	ldr	r2, [fp, #-12]
   16248:	asr	r3, r2, #31
   1624c:	lsr	r3, r3, #30
   16250:	add	r2, r2, r3
   16254:	and	r2, r2, #3
   16258:	sub	r3, r2, r3
   1625c:	cmp	r3, #2
   16260:	beq	16284 <rb_base64_decode+0x29c>
   16264:	cmp	r3, #3
   16268:	beq	16290 <rb_base64_decode+0x2a8>
   1626c:	cmp	r3, #1
   16270:	bne	162b0 <rb_base64_decode+0x2c8>
   16274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16278:	bl	476c <free@plt>
   1627c:	mov	r3, #0
   16280:	b	162d4 <rb_base64_decode+0x2ec>
   16284:	ldr	r3, [fp, #-20]	; 0xffffffec
   16288:	add	r3, r3, #1
   1628c:	str	r3, [fp, #-20]	; 0xffffffec
   16290:	ldr	r3, [fp, #-20]	; 0xffffffec
   16294:	add	r2, r3, #1
   16298:	str	r2, [fp, #-20]	; 0xffffffec
   1629c:	mov	r2, r3
   162a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   162a4:	add	r3, r3, r2
   162a8:	mov	r2, #0
   162ac:	strb	r2, [r3]
   162b0:	ldr	r3, [fp, #-16]
   162b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162b8:	add	r3, r2, r3
   162bc:	mov	r2, #0
   162c0:	strb	r2, [r3]
   162c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162c8:	ldr	r2, [fp, #-16]
   162cc:	str	r2, [r3]
   162d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   162d4:	mov	r0, r3
   162d8:	sub	sp, fp, #4
   162dc:	pop	{fp, pc}
   162e0:	.word	0x0000d188

000162e4 <rb_outofmemory>:
   162e4:	push	{fp, lr}
   162e8:	add	fp, sp, #4
   162ec:	ldr	r3, [pc, #64]	; 16334 <rb_outofmemory+0x50>
   162f0:	add	r3, pc, r3
   162f4:	ldr	r3, [r3]
   162f8:	cmp	r3, #0
   162fc:	beq	16304 <rb_outofmemory+0x20>
   16300:	bl	4430 <abort@plt>
   16304:	ldr	r3, [pc, #44]	; 16338 <rb_outofmemory+0x54>
   16308:	add	r3, pc, r3
   1630c:	mov	r2, #1
   16310:	str	r2, [r3]
   16314:	ldr	r3, [pc, #32]	; 1633c <rb_outofmemory+0x58>
   16318:	add	r3, pc, r3
   1631c:	mov	r0, r3
   16320:	bl	4994 <rb_lib_log@plt>
   16324:	ldr	r3, [pc, #20]	; 16340 <rb_outofmemory+0x5c>
   16328:	add	r3, pc, r3
   1632c:	mov	r0, r3
   16330:	bl	4ad8 <rb_lib_restart@plt>
   16334:	.word	0x00031550
   16338:	.word	0x00031538
   1633c:	.word	0x0000d0b8
   16340:	.word	0x0000d0cc

00016344 <rb_dlinkAddTail>:
   16344:	push	{fp}		; (str fp, [sp, #-4]!)
   16348:	add	fp, sp, #0
   1634c:	sub	sp, sp, #20
   16350:	str	r0, [fp, #-8]
   16354:	str	r1, [fp, #-12]
   16358:	str	r2, [fp, #-16]
   1635c:	ldr	r3, [fp, #-12]
   16360:	ldr	r2, [fp, #-8]
   16364:	str	r2, [r3]
   16368:	ldr	r3, [fp, #-12]
   1636c:	mov	r2, #0
   16370:	str	r2, [r3, #8]
   16374:	ldr	r3, [fp, #-16]
   16378:	ldr	r2, [r3, #4]
   1637c:	ldr	r3, [fp, #-12]
   16380:	str	r2, [r3, #4]
   16384:	ldr	r3, [fp, #-16]
   16388:	ldr	r3, [r3, #4]
   1638c:	cmp	r3, #0
   16390:	beq	163a8 <rb_dlinkAddTail+0x64>
   16394:	ldr	r3, [fp, #-16]
   16398:	ldr	r3, [r3, #4]
   1639c:	ldr	r2, [fp, #-12]
   163a0:	str	r2, [r3, #8]
   163a4:	b	163c4 <rb_dlinkAddTail+0x80>
   163a8:	ldr	r3, [fp, #-16]
   163ac:	ldr	r3, [r3]
   163b0:	cmp	r3, #0
   163b4:	bne	163c4 <rb_dlinkAddTail+0x80>
   163b8:	ldr	r3, [fp, #-16]
   163bc:	ldr	r2, [fp, #-12]
   163c0:	str	r2, [r3]
   163c4:	ldr	r3, [fp, #-16]
   163c8:	ldr	r2, [fp, #-12]
   163cc:	str	r2, [r3, #4]
   163d0:	ldr	r3, [fp, #-16]
   163d4:	ldr	r3, [r3, #8]
   163d8:	add	r2, r3, #1
   163dc:	ldr	r3, [fp, #-16]
   163e0:	str	r2, [r3, #8]
   163e4:	nop			; (mov r0, r0)
   163e8:	add	sp, fp, #0
   163ec:	pop	{fp}		; (ldr fp, [sp], #4)
   163f0:	bx	lr

000163f4 <rb_dlinkDelete>:
   163f4:	push	{fp}		; (str fp, [sp, #-4]!)
   163f8:	add	fp, sp, #0
   163fc:	sub	sp, sp, #12
   16400:	str	r0, [fp, #-8]
   16404:	str	r1, [fp, #-12]
   16408:	ldr	r3, [fp, #-8]
   1640c:	ldr	r3, [r3, #8]
   16410:	cmp	r3, #0
   16414:	beq	16430 <rb_dlinkDelete+0x3c>
   16418:	ldr	r3, [fp, #-8]
   1641c:	ldr	r3, [r3, #8]
   16420:	ldr	r2, [fp, #-8]
   16424:	ldr	r2, [r2, #4]
   16428:	str	r2, [r3, #4]
   1642c:	b	16440 <rb_dlinkDelete+0x4c>
   16430:	ldr	r3, [fp, #-8]
   16434:	ldr	r2, [r3, #4]
   16438:	ldr	r3, [fp, #-12]
   1643c:	str	r2, [r3, #4]
   16440:	ldr	r3, [fp, #-8]
   16444:	ldr	r3, [r3, #4]
   16448:	cmp	r3, #0
   1644c:	beq	16468 <rb_dlinkDelete+0x74>
   16450:	ldr	r3, [fp, #-8]
   16454:	ldr	r3, [r3, #4]
   16458:	ldr	r2, [fp, #-8]
   1645c:	ldr	r2, [r2, #8]
   16460:	str	r2, [r3, #8]
   16464:	b	16478 <rb_dlinkDelete+0x84>
   16468:	ldr	r3, [fp, #-8]
   1646c:	ldr	r2, [r3, #8]
   16470:	ldr	r3, [fp, #-12]
   16474:	str	r2, [r3]
   16478:	ldr	r3, [fp, #-8]
   1647c:	mov	r2, #0
   16480:	str	r2, [r3, #4]
   16484:	ldr	r3, [fp, #-8]
   16488:	ldr	r2, [r3, #4]
   1648c:	ldr	r3, [fp, #-8]
   16490:	str	r2, [r3, #8]
   16494:	ldr	r3, [fp, #-12]
   16498:	ldr	r3, [r3, #8]
   1649c:	sub	r2, r3, #1
   164a0:	ldr	r3, [fp, #-12]
   164a4:	str	r2, [r3, #8]
   164a8:	nop			; (mov r0, r0)
   164ac:	add	sp, fp, #0
   164b0:	pop	{fp}		; (ldr fp, [sp], #4)
   164b4:	bx	lr

000164b8 <rb_linebuf_init>:
   164b8:	push	{fp, lr}
   164bc:	add	fp, sp, #4
   164c0:	sub	sp, sp, #8
   164c4:	str	r0, [fp, #-8]
   164c8:	ldr	r3, [fp, #-8]
   164cc:	ldr	r2, [pc, #40]	; 164fc <rb_linebuf_init+0x44>
   164d0:	add	r2, pc, r2
   164d4:	mov	r1, r3
   164d8:	ldr	r0, [pc, #32]	; 16500 <rb_linebuf_init+0x48>
   164dc:	bl	4b2c <rb_bh_create@plt>
   164e0:	mov	r2, r0
   164e4:	ldr	r3, [pc, #24]	; 16504 <rb_linebuf_init+0x4c>
   164e8:	add	r3, pc, r3
   164ec:	str	r2, [r3]
   164f0:	nop			; (mov r0, r0)
   164f4:	sub	sp, fp, #4
   164f8:	pop	{fp, pc}
   164fc:	.word	0x0000cf34
   16500:	.word	0x0000040c
   16504:	.word	0x0003135c

00016508 <rb_linebuf_allocate>:
   16508:	push	{fp, lr}
   1650c:	add	fp, sp, #4
   16510:	sub	sp, sp, #8
   16514:	ldr	r3, [pc, #32]	; 1653c <rb_linebuf_allocate+0x34>
   16518:	add	r3, pc, r3
   1651c:	ldr	r3, [r3]
   16520:	mov	r0, r3
   16524:	bl	49d0 <rb_bh_alloc@plt>
   16528:	str	r0, [fp, #-8]
   1652c:	ldr	r3, [fp, #-8]
   16530:	mov	r0, r3
   16534:	sub	sp, fp, #4
   16538:	pop	{fp, pc}
   1653c:	.word	0x0003132c

00016540 <rb_linebuf_free>:
   16540:	push	{fp, lr}
   16544:	add	fp, sp, #4
   16548:	sub	sp, sp, #8
   1654c:	str	r0, [fp, #-8]
   16550:	ldr	r3, [pc, #28]	; 16574 <rb_linebuf_free+0x34>
   16554:	add	r3, pc, r3
   16558:	ldr	r3, [r3]
   1655c:	ldr	r1, [fp, #-8]
   16560:	mov	r0, r3
   16564:	bl	4940 <rb_bh_free@plt>
   16568:	nop			; (mov r0, r0)
   1656c:	sub	sp, fp, #4
   16570:	pop	{fp, pc}
   16574:	.word	0x000312f0

00016578 <rb_linebuf_new_line>:
   16578:	push	{fp, lr}
   1657c:	add	fp, sp, #4
   16580:	sub	sp, sp, #16
   16584:	str	r0, [fp, #-16]
   16588:	bl	16508 <rb_linebuf_allocate>
   1658c:	str	r0, [fp, #-8]
   16590:	ldr	r3, [fp, #-8]
   16594:	cmp	r3, #0
   16598:	bne	165a4 <rb_linebuf_new_line+0x2c>
   1659c:	mov	r3, #0
   165a0:	b	16618 <rb_linebuf_new_line+0xa0>
   165a4:	ldr	r3, [pc, #120]	; 16624 <rb_linebuf_new_line+0xac>
   165a8:	add	r3, pc, r3
   165ac:	ldr	r3, [r3]
   165b0:	add	r2, r3, #1
   165b4:	ldr	r3, [pc, #108]	; 16628 <rb_linebuf_new_line+0xb0>
   165b8:	add	r3, pc, r3
   165bc:	str	r2, [r3]
   165c0:	bl	4c04 <rb_make_rb_dlink_node@plt>
   165c4:	mov	r1, r0
   165c8:	ldr	r3, [fp, #-16]
   165cc:	mov	r2, r3
   165d0:	ldr	r0, [fp, #-8]
   165d4:	bl	16344 <rb_dlinkAddTail>
   165d8:	ldr	r3, [fp, #-8]
   165dc:	ldr	r3, [r3, #1032]	; 0x408
   165e0:	add	r2, r3, #1
   165e4:	ldr	r3, [fp, #-8]
   165e8:	str	r2, [r3, #1032]	; 0x408
   165ec:	ldr	r3, [fp, #-16]
   165f0:	ldr	r3, [r3, #16]
   165f4:	add	r2, r3, #1
   165f8:	ldr	r3, [fp, #-16]
   165fc:	str	r2, [r3, #16]
   16600:	ldr	r3, [fp, #-16]
   16604:	ldr	r3, [r3, #24]
   16608:	add	r2, r3, #1
   1660c:	ldr	r3, [fp, #-16]
   16610:	str	r2, [r3, #24]
   16614:	ldr	r3, [fp, #-8]
   16618:	mov	r0, r3
   1661c:	sub	sp, fp, #4
   16620:	pop	{fp, pc}
   16624:	.word	0x000312a0
   16628:	.word	0x00031290

0001662c <rb_linebuf_done_line>:
   1662c:	push	{fp, lr}
   16630:	add	fp, sp, #4
   16634:	sub	sp, sp, #16
   16638:	str	r0, [fp, #-8]
   1663c:	str	r1, [fp, #-12]
   16640:	str	r2, [fp, #-16]
   16644:	ldr	r3, [fp, #-8]
   16648:	mov	r1, r3
   1664c:	ldr	r0, [fp, #-16]
   16650:	bl	163f4 <rb_dlinkDelete>
   16654:	ldr	r0, [fp, #-16]
   16658:	bl	48b0 <rb_free_rb_dlink_node@plt>
   1665c:	ldr	r3, [fp, #-8]
   16660:	ldr	r3, [r3, #16]
   16664:	sub	r2, r3, #1
   16668:	ldr	r3, [fp, #-8]
   1666c:	str	r2, [r3, #16]
   16670:	ldr	r3, [fp, #-8]
   16674:	ldr	r2, [r3, #12]
   16678:	ldr	r3, [fp, #-12]
   1667c:	ldr	r3, [r3, #1028]	; 0x404
   16680:	sub	r2, r2, r3
   16684:	ldr	r3, [fp, #-8]
   16688:	str	r2, [r3, #12]
   1668c:	ldr	r3, [fp, #-8]
   16690:	ldr	r3, [r3, #24]
   16694:	sub	r2, r3, #1
   16698:	ldr	r3, [fp, #-8]
   1669c:	str	r2, [r3, #24]
   166a0:	ldr	r3, [fp, #-12]
   166a4:	ldr	r3, [r3, #1032]	; 0x408
   166a8:	sub	r2, r3, #1
   166ac:	ldr	r3, [fp, #-12]
   166b0:	str	r2, [r3, #1032]	; 0x408
   166b4:	ldr	r3, [fp, #-12]
   166b8:	ldr	r3, [r3, #1032]	; 0x408
   166bc:	cmp	r3, #0
   166c0:	bne	166e8 <rb_linebuf_done_line+0xbc>
   166c4:	ldr	r3, [pc, #40]	; 166f4 <rb_linebuf_done_line+0xc8>
   166c8:	add	r3, pc, r3
   166cc:	ldr	r3, [r3]
   166d0:	sub	r2, r3, #1
   166d4:	ldr	r3, [pc, #28]	; 166f8 <rb_linebuf_done_line+0xcc>
   166d8:	add	r3, pc, r3
   166dc:	str	r2, [r3]
   166e0:	ldr	r0, [fp, #-12]
   166e4:	bl	16540 <rb_linebuf_free>
   166e8:	nop			; (mov r0, r0)
   166ec:	sub	sp, fp, #4
   166f0:	pop	{fp, pc}
   166f4:	.word	0x00031180
   166f8:	.word	0x00031170

000166fc <rb_linebuf_skip_crlf>:
   166fc:	push	{fp}		; (str fp, [sp, #-4]!)
   16700:	add	fp, sp, #0
   16704:	sub	sp, sp, #20
   16708:	str	r0, [fp, #-16]
   1670c:	str	r1, [fp, #-20]	; 0xffffffec
   16710:	ldr	r3, [fp, #-20]	; 0xffffffec
   16714:	str	r3, [fp, #-8]
   16718:	b	16754 <rb_linebuf_skip_crlf+0x58>
   1671c:	ldr	r3, [fp, #-16]
   16720:	ldrb	r3, [r3]
   16724:	cmp	r3, #13
   16728:	beq	16764 <rb_linebuf_skip_crlf+0x68>
   1672c:	ldr	r3, [fp, #-16]
   16730:	ldrb	r3, [r3]
   16734:	cmp	r3, #10
   16738:	beq	1676c <rb_linebuf_skip_crlf+0x70>
   1673c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16740:	sub	r3, r3, #1
   16744:	str	r3, [fp, #-20]	; 0xffffffec
   16748:	ldr	r3, [fp, #-16]
   1674c:	add	r3, r3, #1
   16750:	str	r3, [fp, #-16]
   16754:	ldr	r3, [fp, #-20]	; 0xffffffec
   16758:	cmp	r3, #0
   1675c:	bne	1671c <rb_linebuf_skip_crlf+0x20>
   16760:	b	167ac <rb_linebuf_skip_crlf+0xb0>
   16764:	nop			; (mov r0, r0)
   16768:	b	167ac <rb_linebuf_skip_crlf+0xb0>
   1676c:	nop			; (mov r0, r0)
   16770:	b	167ac <rb_linebuf_skip_crlf+0xb0>
   16774:	ldr	r3, [fp, #-16]
   16778:	ldrb	r3, [r3]
   1677c:	cmp	r3, #13
   16780:	beq	16794 <rb_linebuf_skip_crlf+0x98>
   16784:	ldr	r3, [fp, #-16]
   16788:	ldrb	r3, [r3]
   1678c:	cmp	r3, #10
   16790:	bne	167bc <rb_linebuf_skip_crlf+0xc0>
   16794:	ldr	r3, [fp, #-20]	; 0xffffffec
   16798:	sub	r3, r3, #1
   1679c:	str	r3, [fp, #-20]	; 0xffffffec
   167a0:	ldr	r3, [fp, #-16]
   167a4:	add	r3, r3, #1
   167a8:	str	r3, [fp, #-16]
   167ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   167b0:	cmp	r3, #0
   167b4:	bne	16774 <rb_linebuf_skip_crlf+0x78>
   167b8:	b	167c0 <rb_linebuf_skip_crlf+0xc4>
   167bc:	nop			; (mov r0, r0)
   167c0:	ldr	r2, [fp, #-8]
   167c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   167c8:	sub	r3, r2, r3
   167cc:	mov	r0, r3
   167d0:	add	sp, fp, #0
   167d4:	pop	{fp}		; (ldr fp, [sp], #4)
   167d8:	bx	lr

000167dc <rb_linebuf_newbuf>:
   167dc:	push	{fp, lr}
   167e0:	add	fp, sp, #4
   167e4:	sub	sp, sp, #8
   167e8:	str	r0, [fp, #-8]
   167ec:	mov	r2, #28
   167f0:	mov	r1, #0
   167f4:	ldr	r0, [fp, #-8]
   167f8:	bl	4694 <memset@plt>
   167fc:	nop			; (mov r0, r0)
   16800:	sub	sp, fp, #4
   16804:	pop	{fp, pc}

00016808 <rb_linebuf_donebuf>:
   16808:	push	{fp, lr}
   1680c:	add	fp, sp, #4
   16810:	sub	sp, sp, #8
   16814:	str	r0, [fp, #-8]
   16818:	b	1683c <rb_linebuf_donebuf+0x34>
   1681c:	ldr	r3, [fp, #-8]
   16820:	ldr	r3, [r3]
   16824:	ldr	r1, [r3]
   16828:	ldr	r3, [fp, #-8]
   1682c:	ldr	r3, [r3]
   16830:	mov	r2, r3
   16834:	ldr	r0, [fp, #-8]
   16838:	bl	1662c <rb_linebuf_done_line>
   1683c:	ldr	r3, [fp, #-8]
   16840:	ldr	r3, [r3]
   16844:	cmp	r3, #0
   16848:	bne	1681c <rb_linebuf_donebuf+0x14>
   1684c:	nop			; (mov r0, r0)
   16850:	sub	sp, fp, #4
   16854:	pop	{fp, pc}

00016858 <rb_linebuf_copy_line>:
   16858:	push	{fp, lr}
   1685c:	add	fp, sp, #4
   16860:	sub	sp, sp, #32
   16864:	str	r0, [fp, #-24]	; 0xffffffe8
   16868:	str	r1, [fp, #-28]	; 0xffffffe4
   1686c:	str	r2, [fp, #-32]	; 0xffffffe0
   16870:	str	r3, [fp, #-36]	; 0xffffffdc
   16874:	mov	r3, #0
   16878:	str	r3, [fp, #-8]
   1687c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16880:	str	r3, [fp, #-16]
   16884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16888:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1688c:	ldr	r2, [r2, #1028]	; 0x404
   16890:	add	r3, r3, r2
   16894:	str	r3, [fp, #-12]
   16898:	mov	r3, #0
   1689c:	str	r3, [fp, #-20]	; 0xffffffec
   168a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   168a4:	mov	r2, #0
   168a8:	strb	r2, [r3, #1026]	; 0x402
   168ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   168b0:	ldrb	r3, [r3, #1025]	; 0x401
   168b4:	cmp	r3, #1
   168b8:	bne	168c4 <rb_linebuf_copy_line+0x6c>
   168bc:	mov	r3, #0
   168c0:	b	16b0c <rb_linebuf_copy_line+0x2b4>
   168c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   168c8:	ldr	r0, [fp, #-16]
   168cc:	bl	166fc <rb_linebuf_skip_crlf>
   168d0:	str	r0, [fp, #-8]
   168d4:	ldr	r3, [fp, #-8]
   168d8:	str	r3, [fp, #-20]	; 0xffffffec
   168dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   168e0:	cmn	r3, #1
   168e4:	bne	168f0 <rb_linebuf_copy_line+0x98>
   168e8:	mvn	r3, #0
   168ec:	b	16b0c <rb_linebuf_copy_line+0x2b4>
   168f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   168f4:	ldr	r3, [r3, #1028]	; 0x404
   168f8:	rsb	r3, r3, #1020	; 0x3fc
   168fc:	add	r3, r3, #2
   16900:	ldr	r2, [fp, #-8]
   16904:	cmp	r3, r2
   16908:	bge	169dc <rb_linebuf_copy_line+0x184>
   1690c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16910:	ldr	r3, [r3, #1028]	; 0x404
   16914:	rsb	r3, r3, #1020	; 0x3fc
   16918:	add	r3, r3, #2
   1691c:	str	r3, [fp, #-8]
   16920:	ldr	r3, [fp, #-8]
   16924:	mov	r2, r3
   16928:	ldr	r1, [fp, #-16]
   1692c:	ldr	r0, [fp, #-12]
   16930:	bl	4880 <memcpy@plt>
   16934:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16938:	mov	r2, #0
   1693c:	strb	r2, [r3, #1022]	; 0x3fe
   16940:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16944:	add	r3, r3, #1020	; 0x3fc
   16948:	add	r3, r3, #1
   1694c:	str	r3, [fp, #-12]
   16950:	b	16978 <rb_linebuf_copy_line+0x120>
   16954:	ldr	r3, [fp, #-12]
   16958:	mov	r2, #0
   1695c:	strb	r2, [r3]
   16960:	ldr	r3, [fp, #-8]
   16964:	sub	r3, r3, #1
   16968:	str	r3, [fp, #-8]
   1696c:	ldr	r3, [fp, #-12]
   16970:	sub	r3, r3, #1
   16974:	str	r3, [fp, #-12]
   16978:	ldr	r3, [fp, #-8]
   1697c:	cmp	r3, #0
   16980:	beq	169a4 <rb_linebuf_copy_line+0x14c>
   16984:	ldr	r3, [fp, #-12]
   16988:	ldrb	r3, [r3]
   1698c:	cmp	r3, #13
   16990:	beq	16954 <rb_linebuf_copy_line+0xfc>
   16994:	ldr	r3, [fp, #-12]
   16998:	ldrb	r3, [r3]
   1699c:	cmp	r3, #10
   169a0:	beq	16954 <rb_linebuf_copy_line+0xfc>
   169a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   169a8:	mov	r2, #1
   169ac:	strb	r2, [r3, #1025]	; 0x401
   169b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   169b4:	ldr	r2, [pc, #348]	; 16b18 <rb_linebuf_copy_line+0x2c0>
   169b8:	str	r2, [r3, #1028]	; 0x404
   169bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   169c0:	ldr	r3, [r3, #12]
   169c4:	add	r3, r3, #1020	; 0x3fc
   169c8:	add	r3, r3, #2
   169cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   169d0:	str	r3, [r2, #12]
   169d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   169d8:	b	16b0c <rb_linebuf_copy_line+0x2b4>
   169dc:	ldr	r3, [fp, #-8]
   169e0:	mov	r2, r3
   169e4:	ldr	r1, [fp, #-16]
   169e8:	ldr	r0, [fp, #-12]
   169ec:	bl	4880 <memcpy@plt>
   169f0:	ldr	r3, [fp, #-8]
   169f4:	ldr	r2, [fp, #-12]
   169f8:	add	r3, r2, r3
   169fc:	str	r3, [fp, #-12]
   16a00:	ldr	r3, [fp, #-12]
   16a04:	mov	r2, #0
   16a08:	strb	r2, [r3]
   16a0c:	ldr	r3, [fp, #-12]
   16a10:	sub	r3, r3, #1
   16a14:	str	r3, [fp, #-12]
   16a18:	ldr	r3, [fp, #-12]
   16a1c:	ldrb	r3, [r3]
   16a20:	cmp	r3, #13
   16a24:	beq	16aa0 <rb_linebuf_copy_line+0x248>
   16a28:	ldr	r3, [fp, #-12]
   16a2c:	ldrb	r3, [r3]
   16a30:	cmp	r3, #10
   16a34:	beq	16aa0 <rb_linebuf_copy_line+0x248>
   16a38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a3c:	ldr	r2, [r3, #12]
   16a40:	ldr	r3, [fp, #-8]
   16a44:	add	r2, r2, r3
   16a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a4c:	str	r2, [r3, #12]
   16a50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16a54:	ldr	r2, [r3, #1028]	; 0x404
   16a58:	ldr	r3, [fp, #-8]
   16a5c:	add	r2, r2, r3
   16a60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16a64:	str	r2, [r3, #1028]	; 0x404
   16a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16a6c:	mov	r2, #0
   16a70:	strb	r2, [r3, #1025]	; 0x401
   16a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a78:	b	16b0c <rb_linebuf_copy_line+0x2b4>
   16a7c:	ldr	r3, [fp, #-12]
   16a80:	mov	r2, #0
   16a84:	strb	r2, [r3]
   16a88:	ldr	r3, [fp, #-8]
   16a8c:	sub	r3, r3, #1
   16a90:	str	r3, [fp, #-8]
   16a94:	ldr	r3, [fp, #-12]
   16a98:	sub	r3, r3, #1
   16a9c:	str	r3, [fp, #-12]
   16aa0:	ldr	r3, [fp, #-8]
   16aa4:	cmp	r3, #0
   16aa8:	beq	16acc <rb_linebuf_copy_line+0x274>
   16aac:	ldr	r3, [fp, #-12]
   16ab0:	ldrb	r3, [r3]
   16ab4:	cmp	r3, #13
   16ab8:	beq	16a7c <rb_linebuf_copy_line+0x224>
   16abc:	ldr	r3, [fp, #-12]
   16ac0:	ldrb	r3, [r3]
   16ac4:	cmp	r3, #10
   16ac8:	beq	16a7c <rb_linebuf_copy_line+0x224>
   16acc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ad0:	mov	r2, #1
   16ad4:	strb	r2, [r3, #1025]	; 0x401
   16ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16adc:	ldr	r2, [r3, #12]
   16ae0:	ldr	r3, [fp, #-8]
   16ae4:	add	r2, r2, r3
   16ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16aec:	str	r2, [r3, #12]
   16af0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16af4:	ldr	r2, [r3, #1028]	; 0x404
   16af8:	ldr	r3, [fp, #-8]
   16afc:	add	r2, r2, r3
   16b00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b04:	str	r2, [r3, #1028]	; 0x404
   16b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b0c:	mov	r0, r3
   16b10:	sub	sp, fp, #4
   16b14:	pop	{fp, pc}
   16b18:	.word	0x000003fe

00016b1c <rb_linebuf_copy_raw>:
   16b1c:	push	{fp, lr}
   16b20:	add	fp, sp, #4
   16b24:	sub	sp, sp, #32
   16b28:	str	r0, [fp, #-24]	; 0xffffffe8
   16b2c:	str	r1, [fp, #-28]	; 0xffffffe4
   16b30:	str	r2, [fp, #-32]	; 0xffffffe0
   16b34:	str	r3, [fp, #-36]	; 0xffffffdc
   16b38:	mov	r3, #0
   16b3c:	str	r3, [fp, #-8]
   16b40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16b44:	str	r3, [fp, #-12]
   16b48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16b50:	ldr	r2, [r2, #1028]	; 0x404
   16b54:	add	r3, r3, r2
   16b58:	str	r3, [fp, #-16]
   16b5c:	mov	r3, #0
   16b60:	str	r3, [fp, #-20]	; 0xffffffec
   16b64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b68:	mov	r2, #1
   16b6c:	strb	r2, [r3, #1026]	; 0x402
   16b70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b74:	ldrb	r3, [r3, #1025]	; 0x401
   16b78:	cmp	r3, #1
   16b7c:	bne	16b88 <rb_linebuf_copy_raw+0x6c>
   16b80:	mov	r3, #0
   16b84:	b	16d1c <rb_linebuf_copy_raw+0x200>
   16b88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16b8c:	ldr	r0, [fp, #-12]
   16b90:	bl	166fc <rb_linebuf_skip_crlf>
   16b94:	str	r0, [fp, #-8]
   16b98:	ldr	r3, [fp, #-8]
   16b9c:	str	r3, [fp, #-20]	; 0xffffffec
   16ba0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ba4:	cmn	r3, #1
   16ba8:	bne	16bb4 <rb_linebuf_copy_raw+0x98>
   16bac:	mvn	r3, #0
   16bb0:	b	16d1c <rb_linebuf_copy_raw+0x200>
   16bb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16bb8:	ldr	r3, [r3, #1028]	; 0x404
   16bbc:	rsb	r3, r3, #1020	; 0x3fc
   16bc0:	add	r3, r3, #2
   16bc4:	ldr	r2, [fp, #-8]
   16bc8:	cmp	r3, r2
   16bcc:	bge	16c3c <rb_linebuf_copy_raw+0x120>
   16bd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16bd4:	ldr	r3, [r3, #1028]	; 0x404
   16bd8:	rsb	r3, r3, #1020	; 0x3fc
   16bdc:	add	r3, r3, #2
   16be0:	str	r3, [fp, #-20]	; 0xffffffec
   16be4:	ldr	r3, [fp, #-20]	; 0xffffffec
   16be8:	mov	r2, r3
   16bec:	ldr	r1, [fp, #-12]
   16bf0:	ldr	r0, [fp, #-16]
   16bf4:	bl	4880 <memcpy@plt>
   16bf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16bfc:	mov	r2, #0
   16c00:	strb	r2, [r3, #1022]	; 0x3fe
   16c04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c08:	mov	r2, #1
   16c0c:	strb	r2, [r3, #1025]	; 0x401
   16c10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c14:	ldr	r2, [pc, #268]	; 16d28 <rb_linebuf_copy_raw+0x20c>
   16c18:	str	r2, [r3, #1028]	; 0x404
   16c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c20:	ldr	r3, [r3, #12]
   16c24:	add	r3, r3, #1020	; 0x3fc
   16c28:	add	r3, r3, #2
   16c2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c30:	str	r3, [r2, #12]
   16c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c38:	b	16d1c <rb_linebuf_copy_raw+0x200>
   16c3c:	ldr	r3, [fp, #-8]
   16c40:	mov	r2, r3
   16c44:	ldr	r1, [fp, #-12]
   16c48:	ldr	r0, [fp, #-16]
   16c4c:	bl	4880 <memcpy@plt>
   16c50:	ldr	r3, [fp, #-8]
   16c54:	ldr	r2, [fp, #-16]
   16c58:	add	r3, r2, r3
   16c5c:	str	r3, [fp, #-16]
   16c60:	ldr	r3, [fp, #-16]
   16c64:	mov	r2, #0
   16c68:	strb	r2, [r3]
   16c6c:	ldr	r3, [fp, #-16]
   16c70:	sub	r3, r3, #1
   16c74:	str	r3, [fp, #-16]
   16c78:	ldr	r3, [fp, #-16]
   16c7c:	ldrb	r3, [r3]
   16c80:	cmp	r3, #13
   16c84:	beq	16cdc <rb_linebuf_copy_raw+0x1c0>
   16c88:	ldr	r3, [fp, #-16]
   16c8c:	ldrb	r3, [r3]
   16c90:	cmp	r3, #10
   16c94:	beq	16cdc <rb_linebuf_copy_raw+0x1c0>
   16c98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c9c:	ldr	r2, [r3, #12]
   16ca0:	ldr	r3, [fp, #-8]
   16ca4:	add	r2, r2, r3
   16ca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16cac:	str	r2, [r3, #12]
   16cb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16cb4:	ldr	r2, [r3, #1028]	; 0x404
   16cb8:	ldr	r3, [fp, #-8]
   16cbc:	add	r2, r2, r3
   16cc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16cc4:	str	r2, [r3, #1028]	; 0x404
   16cc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ccc:	mov	r2, #0
   16cd0:	strb	r2, [r3, #1025]	; 0x401
   16cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   16cd8:	b	16d1c <rb_linebuf_copy_raw+0x200>
   16cdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ce0:	mov	r2, #1
   16ce4:	strb	r2, [r3, #1025]	; 0x401
   16ce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16cec:	ldr	r2, [r3, #12]
   16cf0:	ldr	r3, [fp, #-8]
   16cf4:	add	r2, r2, r3
   16cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16cfc:	str	r2, [r3, #12]
   16d00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d04:	ldr	r2, [r3, #1028]	; 0x404
   16d08:	ldr	r3, [fp, #-8]
   16d0c:	add	r2, r2, r3
   16d10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d14:	str	r2, [r3, #1028]	; 0x404
   16d18:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d1c:	mov	r0, r3
   16d20:	sub	sp, fp, #4
   16d24:	pop	{fp, pc}
   16d28:	.word	0x000003fe

00016d2c <rb_linebuf_parse>:
   16d2c:	push	{fp, lr}
   16d30:	add	fp, sp, #4
   16d34:	sub	sp, sp, #32
   16d38:	str	r0, [fp, #-24]	; 0xffffffe8
   16d3c:	str	r1, [fp, #-28]	; 0xffffffe4
   16d40:	str	r2, [fp, #-32]	; 0xffffffe0
   16d44:	str	r3, [fp, #-36]	; 0xffffffdc
   16d48:	mov	r3, #0
   16d4c:	str	r3, [fp, #-12]
   16d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16d54:	ldr	r3, [r3, #4]
   16d58:	cmp	r3, #0
   16d5c:	beq	16e98 <rb_linebuf_parse+0x16c>
   16d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16d64:	ldr	r3, [r3, #4]
   16d68:	ldr	r3, [r3]
   16d6c:	str	r3, [fp, #-16]
   16d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16d74:	cmp	r3, #0
   16d78:	bne	16d98 <rb_linebuf_parse+0x6c>
   16d7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16d80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16d84:	ldr	r1, [fp, #-16]
   16d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d8c:	bl	16858 <rb_linebuf_copy_line>
   16d90:	str	r0, [fp, #-8]
   16d94:	b	16db0 <rb_linebuf_parse+0x84>
   16d98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16d9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16da0:	ldr	r1, [fp, #-16]
   16da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16da8:	bl	16b1c <rb_linebuf_copy_raw>
   16dac:	str	r0, [fp, #-8]
   16db0:	ldr	r3, [fp, #-8]
   16db4:	cmn	r3, #1
   16db8:	bne	16dc4 <rb_linebuf_parse+0x98>
   16dbc:	mvn	r3, #0
   16dc0:	b	16ea8 <rb_linebuf_parse+0x17c>
   16dc4:	ldr	r3, [fp, #-12]
   16dc8:	add	r3, r3, #1
   16dcc:	str	r3, [fp, #-12]
   16dd0:	ldr	r2, [fp, #-8]
   16dd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16dd8:	cmp	r2, r3
   16ddc:	bne	16de8 <rb_linebuf_parse+0xbc>
   16de0:	ldr	r3, [fp, #-12]
   16de4:	b	16ea8 <rb_linebuf_parse+0x17c>
   16de8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16dec:	ldr	r3, [fp, #-8]
   16df0:	sub	r3, r2, r3
   16df4:	str	r3, [fp, #-32]	; 0xffffffe0
   16df8:	ldr	r3, [fp, #-8]
   16dfc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16e00:	add	r3, r2, r3
   16e04:	str	r3, [fp, #-28]	; 0xffffffe4
   16e08:	b	16e98 <rb_linebuf_parse+0x16c>
   16e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e10:	bl	16578 <rb_linebuf_new_line>
   16e14:	str	r0, [fp, #-16]
   16e18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16e1c:	cmp	r3, #0
   16e20:	bne	16e40 <rb_linebuf_parse+0x114>
   16e24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16e2c:	ldr	r1, [fp, #-16]
   16e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e34:	bl	16858 <rb_linebuf_copy_line>
   16e38:	str	r0, [fp, #-8]
   16e3c:	b	16e58 <rb_linebuf_parse+0x12c>
   16e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e44:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16e48:	ldr	r1, [fp, #-16]
   16e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e50:	bl	16b1c <rb_linebuf_copy_raw>
   16e54:	str	r0, [fp, #-8]
   16e58:	ldr	r3, [fp, #-8]
   16e5c:	cmn	r3, #1
   16e60:	bne	16e6c <rb_linebuf_parse+0x140>
   16e64:	mvn	r3, #0
   16e68:	b	16ea8 <rb_linebuf_parse+0x17c>
   16e6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16e70:	ldr	r3, [fp, #-8]
   16e74:	sub	r3, r2, r3
   16e78:	str	r3, [fp, #-32]	; 0xffffffe0
   16e7c:	ldr	r3, [fp, #-8]
   16e80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16e84:	add	r3, r2, r3
   16e88:	str	r3, [fp, #-28]	; 0xffffffe4
   16e8c:	ldr	r3, [fp, #-12]
   16e90:	add	r3, r3, #1
   16e94:	str	r3, [fp, #-12]
   16e98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e9c:	cmp	r3, #0
   16ea0:	bgt	16e0c <rb_linebuf_parse+0xe0>
   16ea4:	ldr	r3, [fp, #-12]
   16ea8:	mov	r0, r3
   16eac:	sub	sp, fp, #4
   16eb0:	pop	{fp, pc}

00016eb4 <rb_linebuf_get>:
   16eb4:	push	{fp, lr}
   16eb8:	add	fp, sp, #4
   16ebc:	sub	sp, sp, #32
   16ec0:	str	r0, [fp, #-24]	; 0xffffffe8
   16ec4:	str	r1, [fp, #-28]	; 0xffffffe4
   16ec8:	str	r2, [fp, #-32]	; 0xffffffe0
   16ecc:	str	r3, [fp, #-36]	; 0xffffffdc
   16ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ed4:	ldr	r3, [r3]
   16ed8:	cmp	r3, #0
   16edc:	bne	16ee8 <rb_linebuf_get+0x34>
   16ee0:	mov	r3, #0
   16ee4:	b	17064 <rb_linebuf_get+0x1b0>
   16ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16eec:	ldr	r3, [r3]
   16ef0:	ldr	r3, [r3]
   16ef4:	str	r3, [fp, #-20]	; 0xffffffec
   16ef8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16efc:	cmp	r3, #0
   16f00:	bne	16f1c <rb_linebuf_get+0x68>
   16f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f08:	ldrb	r3, [r3, #1025]	; 0x401
   16f0c:	cmp	r3, #0
   16f10:	bne	16f1c <rb_linebuf_get+0x68>
   16f14:	mov	r3, #0
   16f18:	b	17064 <rb_linebuf_get+0x1b0>
   16f1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f20:	ldr	r2, [r3, #1028]	; 0x404
   16f24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16f28:	cmp	r2, r3
   16f2c:	ble	16f40 <rb_linebuf_get+0x8c>
   16f30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16f34:	sub	r3, r3, #1
   16f38:	str	r3, [fp, #-8]
   16f3c:	b	16f4c <rb_linebuf_get+0x98>
   16f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f44:	ldr	r3, [r3, #1028]	; 0x404
   16f48:	str	r3, [fp, #-8]
   16f4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f50:	str	r3, [fp, #-12]
   16f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f58:	ldrb	r3, [r3, #1026]	; 0x402
   16f5c:	cmp	r3, #0
   16f60:	beq	17014 <rb_linebuf_get+0x160>
   16f64:	ldr	r3, [fp, #4]
   16f68:	cmp	r3, #0
   16f6c:	bne	17014 <rb_linebuf_get+0x160>
   16f70:	b	16f8c <rb_linebuf_get+0xd8>
   16f74:	ldr	r3, [fp, #-12]
   16f78:	add	r3, r3, #1
   16f7c:	str	r3, [fp, #-12]
   16f80:	ldr	r3, [fp, #-8]
   16f84:	sub	r3, r3, #1
   16f88:	str	r3, [fp, #-8]
   16f8c:	ldr	r3, [fp, #-8]
   16f90:	cmp	r3, #0
   16f94:	beq	16fb8 <rb_linebuf_get+0x104>
   16f98:	ldr	r3, [fp, #-12]
   16f9c:	ldrb	r3, [r3]
   16fa0:	cmp	r3, #13
   16fa4:	beq	16f74 <rb_linebuf_get+0xc0>
   16fa8:	ldr	r3, [fp, #-12]
   16fac:	ldrb	r3, [r3]
   16fb0:	cmp	r3, #10
   16fb4:	beq	16f74 <rb_linebuf_get+0xc0>
   16fb8:	ldr	r3, [fp, #-8]
   16fbc:	sub	r3, r3, #1
   16fc0:	ldr	r2, [fp, #-12]
   16fc4:	add	r3, r2, r3
   16fc8:	str	r3, [fp, #-16]
   16fcc:	b	16fe8 <rb_linebuf_get+0x134>
   16fd0:	ldr	r3, [fp, #-16]
   16fd4:	sub	r3, r3, #1
   16fd8:	str	r3, [fp, #-16]
   16fdc:	ldr	r3, [fp, #-8]
   16fe0:	sub	r3, r3, #1
   16fe4:	str	r3, [fp, #-8]
   16fe8:	ldr	r3, [fp, #-8]
   16fec:	cmp	r3, #0
   16ff0:	beq	17014 <rb_linebuf_get+0x160>
   16ff4:	ldr	r3, [fp, #-16]
   16ff8:	ldrb	r3, [r3]
   16ffc:	cmp	r3, #13
   17000:	beq	16fd0 <rb_linebuf_get+0x11c>
   17004:	ldr	r3, [fp, #-16]
   17008:	ldrb	r3, [r3]
   1700c:	cmp	r3, #10
   17010:	beq	16fd0 <rb_linebuf_get+0x11c>
   17014:	ldr	r3, [fp, #-8]
   17018:	mov	r2, r3
   1701c:	ldr	r1, [fp, #-12]
   17020:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17024:	bl	4880 <memcpy@plt>
   17028:	ldr	r3, [fp, #4]
   1702c:	cmp	r3, #0
   17030:	bne	17048 <rb_linebuf_get+0x194>
   17034:	ldr	r3, [fp, #-8]
   17038:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1703c:	add	r3, r2, r3
   17040:	mov	r2, #0
   17044:	strb	r2, [r3]
   17048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1704c:	ldr	r3, [r3]
   17050:	mov	r2, r3
   17054:	ldr	r1, [fp, #-20]	; 0xffffffec
   17058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1705c:	bl	1662c <rb_linebuf_done_line>
   17060:	ldr	r3, [fp, #-8]
   17064:	mov	r0, r3
   17068:	sub	sp, fp, #4
   1706c:	pop	{fp, pc}

00017070 <rb_linebuf_attach>:
   17070:	push	{fp, lr}
   17074:	add	fp, sp, #4
   17078:	sub	sp, sp, #16
   1707c:	str	r0, [fp, #-16]
   17080:	str	r1, [fp, #-20]	; 0xffffffec
   17084:	ldr	r3, [fp, #-20]	; 0xffffffec
   17088:	ldr	r3, [r3]
   1708c:	str	r3, [fp, #-8]
   17090:	b	1711c <rb_linebuf_attach+0xac>
   17094:	ldr	r3, [fp, #-8]
   17098:	ldr	r3, [r3]
   1709c:	str	r3, [fp, #-12]
   170a0:	bl	4c04 <rb_make_rb_dlink_node@plt>
   170a4:	mov	r1, r0
   170a8:	ldr	r3, [fp, #-16]
   170ac:	mov	r2, r3
   170b0:	ldr	r0, [fp, #-12]
   170b4:	bl	16344 <rb_dlinkAddTail>
   170b8:	ldr	r3, [fp, #-16]
   170bc:	ldr	r3, [r3, #16]
   170c0:	add	r2, r3, #1
   170c4:	ldr	r3, [fp, #-16]
   170c8:	str	r2, [r3, #16]
   170cc:	ldr	r3, [fp, #-16]
   170d0:	ldr	r2, [r3, #12]
   170d4:	ldr	r3, [fp, #-12]
   170d8:	ldr	r3, [r3, #1028]	; 0x404
   170dc:	add	r2, r2, r3
   170e0:	ldr	r3, [fp, #-16]
   170e4:	str	r2, [r3, #12]
   170e8:	ldr	r3, [fp, #-16]
   170ec:	ldr	r3, [r3, #24]
   170f0:	add	r2, r3, #1
   170f4:	ldr	r3, [fp, #-16]
   170f8:	str	r2, [r3, #24]
   170fc:	ldr	r3, [fp, #-12]
   17100:	ldr	r3, [r3, #1032]	; 0x408
   17104:	add	r2, r3, #1
   17108:	ldr	r3, [fp, #-12]
   1710c:	str	r2, [r3, #1032]	; 0x408
   17110:	ldr	r3, [fp, #-8]
   17114:	ldr	r3, [r3, #8]
   17118:	str	r3, [fp, #-8]
   1711c:	ldr	r3, [fp, #-8]
   17120:	cmp	r3, #0
   17124:	bne	17094 <rb_linebuf_attach+0x24>
   17128:	nop			; (mov r0, r0)
   1712c:	sub	sp, fp, #4
   17130:	pop	{fp, pc}

00017134 <rb_linebuf_put>:
   17134:	push	{fp, lr}
   17138:	add	fp, sp, #4
   1713c:	sub	sp, sp, #24
   17140:	str	r0, [fp, #-24]	; 0xffffffe8
   17144:	str	r1, [fp, #-28]	; 0xffffffe4
   17148:	mov	r3, #0
   1714c:	str	r3, [fp, #-8]
   17150:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17154:	ldr	r3, [r3, #4]
   17158:	cmp	r3, #0
   1715c:	beq	17170 <rb_linebuf_put+0x3c>
   17160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17164:	ldr	r3, [r3, #4]
   17168:	ldr	r3, [r3]
   1716c:	str	r3, [fp, #-12]
   17170:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17174:	bl	16578 <rb_linebuf_new_line>
   17178:	str	r0, [fp, #-12]
   1717c:	ldr	r3, [fp, #-12]
   17180:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17184:	ldr	r1, [pc, #196]	; 17250 <rb_linebuf_put+0x11c>
   17188:	mov	r0, r3
   1718c:	bl	4700 <rb_fsnprint@plt>
   17190:	str	r0, [fp, #-16]
   17194:	ldr	r3, [fp, #-16]
   17198:	cmp	r3, #0
   1719c:	ble	171b0 <rb_linebuf_put+0x7c>
   171a0:	ldr	r3, [fp, #-16]
   171a4:	ldr	r2, [fp, #-8]
   171a8:	add	r3, r2, r3
   171ac:	str	r3, [fp, #-8]
   171b0:	ldr	r3, [fp, #-8]
   171b4:	ldr	r2, [pc, #152]	; 17254 <rb_linebuf_put+0x120>
   171b8:	cmp	r3, r2
   171bc:	bls	171c8 <rb_linebuf_put+0x94>
   171c0:	ldr	r3, [pc, #140]	; 17254 <rb_linebuf_put+0x120>
   171c4:	str	r3, [fp, #-8]
   171c8:	ldr	r3, [fp, #-8]
   171cc:	add	r2, r3, #1
   171d0:	str	r2, [fp, #-8]
   171d4:	ldr	r2, [fp, #-12]
   171d8:	mov	r1, #13
   171dc:	strb	r1, [r2, r3]
   171e0:	ldr	r3, [fp, #-8]
   171e4:	add	r2, r3, #1
   171e8:	str	r2, [fp, #-8]
   171ec:	ldr	r2, [fp, #-12]
   171f0:	mov	r1, #10
   171f4:	strb	r1, [r2, r3]
   171f8:	ldr	r2, [fp, #-12]
   171fc:	ldr	r3, [fp, #-8]
   17200:	add	r3, r2, r3
   17204:	mov	r2, #0
   17208:	strb	r2, [r3]
   1720c:	ldr	r3, [fp, #-12]
   17210:	mov	r2, #1
   17214:	strb	r2, [r3, #1025]	; 0x401
   17218:	ldr	r2, [fp, #-8]
   1721c:	ldr	r3, [fp, #-12]
   17220:	str	r2, [r3, #1028]	; 0x404
   17224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17228:	ldr	r3, [r3, #12]
   1722c:	mov	r2, r3
   17230:	ldr	r3, [fp, #-8]
   17234:	add	r3, r2, r3
   17238:	mov	r2, r3
   1723c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17240:	str	r2, [r3, #12]
   17244:	nop			; (mov r0, r0)
   17248:	sub	sp, fp, #4
   1724c:	pop	{fp, pc}
   17250:	.word	0x000003ff
   17254:	.word	0x000003fe

00017258 <rb_linebuf_flush>:
   17258:	push	{fp, lr}
   1725c:	add	fp, sp, #4
   17260:	sub	sp, sp, #32
   17264:	str	r0, [fp, #-32]	; 0xffffffe0
   17268:	str	r1, [fp, #-36]	; 0xffffffdc
   1726c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17270:	bl	4520 <rb_fd_ssl@plt>
   17274:	mov	r3, r0
   17278:	cmp	r3, #0
   1727c:	bne	17534 <rb_linebuf_flush+0x2dc>
   17280:	mov	r3, #0
   17284:	str	r3, [fp, #-12]
   17288:	mov	r2, #8192	; 0x2000
   1728c:	mov	r1, #0
   17290:	ldr	r3, [pc, #936]	; 17640 <rb_linebuf_flush+0x3e8>
   17294:	add	r3, pc, r3
   17298:	mov	r0, r3
   1729c:	bl	4694 <memset@plt>
   172a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   172a4:	ldr	r3, [r3]
   172a8:	cmp	r3, #0
   172ac:	bne	172c8 <rb_linebuf_flush+0x70>
   172b0:	bl	4d78 <__errno_location@plt>
   172b4:	mov	r2, r0
   172b8:	mov	r3, #11
   172bc:	str	r3, [r2]
   172c0:	mvn	r3, #0
   172c4:	b	17634 <rb_linebuf_flush+0x3dc>
   172c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   172cc:	ldr	r3, [r3]
   172d0:	str	r3, [fp, #-8]
   172d4:	ldr	r3, [fp, #-8]
   172d8:	ldr	r3, [r3]
   172dc:	str	r3, [fp, #-24]	; 0xffffffe8
   172e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   172e4:	ldrb	r3, [r3, #1025]	; 0x401
   172e8:	cmp	r3, #0
   172ec:	bne	17308 <rb_linebuf_flush+0xb0>
   172f0:	bl	4d78 <__errno_location@plt>
   172f4:	mov	r2, r0
   172f8:	mov	r3, #11
   172fc:	str	r3, [r2]
   17300:	mvn	r3, #0
   17304:	b	17634 <rb_linebuf_flush+0x3dc>
   17308:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1730c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17310:	ldr	r2, [r2, #20]
   17314:	add	r1, r3, r2
   17318:	ldr	r3, [pc, #804]	; 17644 <rb_linebuf_flush+0x3ec>
   1731c:	add	r3, pc, r3
   17320:	ldr	r2, [fp, #-12]
   17324:	str	r1, [r3, r2, lsl #3]
   17328:	ldr	r3, [fp, #-12]
   1732c:	add	r2, r3, #1
   17330:	str	r2, [fp, #-12]
   17334:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17338:	ldr	r1, [r2, #1028]	; 0x404
   1733c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17340:	ldr	r2, [r2, #20]
   17344:	sub	r2, r1, r2
   17348:	mov	r1, r2
   1734c:	ldr	r2, [pc, #756]	; 17648 <rb_linebuf_flush+0x3f0>
   17350:	add	r2, pc, r2
   17354:	lsl	r3, r3, #3
   17358:	add	r3, r2, r3
   1735c:	str	r1, [r3, #4]
   17360:	ldr	r3, [fp, #-8]
   17364:	ldr	r3, [r3, #8]
   17368:	str	r3, [fp, #-8]
   1736c:	ldr	r3, [fp, #-8]
   17370:	cmp	r3, #0
   17374:	beq	173f4 <rb_linebuf_flush+0x19c>
   17378:	ldr	r3, [fp, #-8]
   1737c:	ldr	r3, [r3]
   17380:	str	r3, [fp, #-24]	; 0xffffffe8
   17384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17388:	ldrb	r3, [r3, #1025]	; 0x401
   1738c:	cmp	r3, #0
   17390:	beq	173fc <rb_linebuf_flush+0x1a4>
   17394:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17398:	ldr	r3, [pc, #684]	; 1764c <rb_linebuf_flush+0x3f4>
   1739c:	add	r3, pc, r3
   173a0:	ldr	r2, [fp, #-12]
   173a4:	str	r1, [r3, r2, lsl #3]
   173a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   173ac:	ldr	r3, [r3, #1028]	; 0x404
   173b0:	mov	r1, r3
   173b4:	ldr	r2, [pc, #660]	; 17650 <rb_linebuf_flush+0x3f8>
   173b8:	add	r2, pc, r2
   173bc:	ldr	r3, [fp, #-12]
   173c0:	lsl	r3, r3, #3
   173c4:	add	r3, r2, r3
   173c8:	str	r1, [r3, #4]
   173cc:	ldr	r3, [fp, #-8]
   173d0:	ldr	r3, [r3, #8]
   173d4:	str	r3, [fp, #-8]
   173d8:	ldr	r3, [fp, #-12]
   173dc:	add	r3, r3, #1
   173e0:	str	r3, [fp, #-12]
   173e4:	ldr	r3, [fp, #-12]
   173e8:	cmp	r3, #1024	; 0x400
   173ec:	blt	1736c <rb_linebuf_flush+0x114>
   173f0:	b	17400 <rb_linebuf_flush+0x1a8>
   173f4:	nop			; (mov r0, r0)
   173f8:	b	17400 <rb_linebuf_flush+0x1a8>
   173fc:	nop			; (mov r0, r0)
   17400:	ldr	r3, [fp, #-12]
   17404:	cmp	r3, #0
   17408:	bne	17424 <rb_linebuf_flush+0x1cc>
   1740c:	bl	4d78 <__errno_location@plt>
   17410:	mov	r2, r0
   17414:	mov	r3, #11
   17418:	str	r3, [r2]
   1741c:	mvn	r3, #0
   17420:	b	17634 <rb_linebuf_flush+0x3dc>
   17424:	ldr	r2, [fp, #-12]
   17428:	ldr	r3, [pc, #548]	; 17654 <rb_linebuf_flush+0x3fc>
   1742c:	add	r3, pc, r3
   17430:	mov	r1, r3
   17434:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17438:	bl	4b50 <rb_writev@plt>
   1743c:	str	r0, [fp, #-28]	; 0xffffffe4
   17440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17444:	str	r3, [fp, #-20]	; 0xffffffec
   17448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1744c:	cmp	r3, #0
   17450:	bgt	1745c <rb_linebuf_flush+0x204>
   17454:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17458:	b	17634 <rb_linebuf_flush+0x3dc>
   1745c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17460:	ldr	r3, [r3]
   17464:	str	r3, [fp, #-8]
   17468:	mov	r3, #0
   1746c:	str	r3, [fp, #-16]
   17470:	b	1751c <rb_linebuf_flush+0x2c4>
   17474:	ldr	r3, [fp, #-8]
   17478:	ldr	r3, [r3]
   1747c:	str	r3, [fp, #-24]	; 0xffffffe8
   17480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17484:	ldr	r2, [r3, #1028]	; 0x404
   17488:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1748c:	ldr	r3, [r3, #20]
   17490:	sub	r2, r2, r3
   17494:	ldr	r3, [fp, #-20]	; 0xffffffec
   17498:	cmp	r2, r3
   1749c:	bgt	174f4 <rb_linebuf_flush+0x29c>
   174a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   174a4:	ldr	r2, [r3, #1028]	; 0x404
   174a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   174ac:	ldr	r3, [r3, #20]
   174b0:	sub	r3, r2, r3
   174b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   174b8:	sub	r3, r2, r3
   174bc:	str	r3, [fp, #-20]	; 0xffffffec
   174c0:	ldr	r3, [fp, #-8]
   174c4:	ldr	r3, [r3, #8]
   174c8:	str	r3, [fp, #-8]
   174cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   174d0:	ldr	r3, [r3]
   174d4:	mov	r2, r3
   174d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   174e0:	bl	1662c <rb_linebuf_done_line>
   174e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   174e8:	mov	r2, #0
   174ec:	str	r2, [r3, #20]
   174f0:	b	17510 <rb_linebuf_flush+0x2b8>
   174f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   174f8:	ldr	r2, [r3, #20]
   174fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17500:	add	r2, r2, r3
   17504:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17508:	str	r2, [r3, #20]
   1750c:	b	1752c <rb_linebuf_flush+0x2d4>
   17510:	ldr	r3, [fp, #-16]
   17514:	add	r3, r3, #1
   17518:	str	r3, [fp, #-16]
   1751c:	ldr	r2, [fp, #-16]
   17520:	ldr	r3, [fp, #-12]
   17524:	cmp	r2, r3
   17528:	blt	17474 <rb_linebuf_flush+0x21c>
   1752c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17530:	b	17634 <rb_linebuf_flush+0x3dc>
   17534:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17538:	ldr	r3, [r3]
   1753c:	cmp	r3, #0
   17540:	bne	1755c <rb_linebuf_flush+0x304>
   17544:	bl	4d78 <__errno_location@plt>
   17548:	mov	r2, r0
   1754c:	mov	r3, #11
   17550:	str	r3, [r2]
   17554:	mvn	r3, #0
   17558:	b	17634 <rb_linebuf_flush+0x3dc>
   1755c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17560:	ldr	r3, [r3]
   17564:	ldr	r3, [r3]
   17568:	str	r3, [fp, #-24]	; 0xffffffe8
   1756c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17570:	ldrb	r3, [r3, #1025]	; 0x401
   17574:	cmp	r3, #0
   17578:	bne	17594 <rb_linebuf_flush+0x33c>
   1757c:	bl	4d78 <__errno_location@plt>
   17580:	mov	r2, r0
   17584:	mov	r3, #11
   17588:	str	r3, [r2]
   1758c:	mvn	r3, #0
   17590:	b	17634 <rb_linebuf_flush+0x3dc>
   17594:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17598:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1759c:	ldr	r2, [r2, #20]
   175a0:	add	r1, r3, r2
   175a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   175a8:	ldr	r2, [r3, #1028]	; 0x404
   175ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175b0:	ldr	r3, [r3, #20]
   175b4:	sub	r3, r2, r3
   175b8:	mov	r2, r3
   175bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175c0:	bl	46c4 <rb_write@plt>
   175c4:	str	r0, [fp, #-28]	; 0xffffffe4
   175c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   175cc:	cmp	r3, #0
   175d0:	bgt	175dc <rb_linebuf_flush+0x384>
   175d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   175d8:	b	17634 <rb_linebuf_flush+0x3dc>
   175dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175e0:	ldr	r2, [r3, #20]
   175e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   175e8:	add	r2, r2, r3
   175ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175f0:	str	r2, [r3, #20]
   175f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175f8:	ldr	r2, [r3, #20]
   175fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17600:	ldr	r3, [r3, #1028]	; 0x404
   17604:	cmp	r2, r3
   17608:	bne	17630 <rb_linebuf_flush+0x3d8>
   1760c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17610:	mov	r2, #0
   17614:	str	r2, [r3, #20]
   17618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1761c:	ldr	r3, [r3]
   17620:	mov	r2, r3
   17624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17628:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1762c:	bl	1662c <rb_linebuf_done_line>
   17630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17634:	mov	r0, r3
   17638:	sub	sp, fp, #4
   1763c:	pop	{fp, pc}
   17640:	.word	0x000305b8
   17644:	.word	0x00030530
   17648:	.word	0x000304fc
   1764c:	.word	0x000304b0
   17650:	.word	0x00030494
   17654:	.word	0x00030420

00017658 <rb_count_rb_linebuf_memory>:
   17658:	push	{fp, lr}
   1765c:	add	fp, sp, #4
   17660:	sub	sp, sp, #16
   17664:	str	r0, [fp, #-8]
   17668:	str	r1, [fp, #-12]
   1766c:	ldr	r3, [pc, #40]	; 1769c <rb_count_rb_linebuf_memory+0x44>
   17670:	add	r3, pc, r3
   17674:	ldr	r0, [r3]
   17678:	mov	r3, #0
   1767c:	str	r3, [sp]
   17680:	ldr	r3, [fp, #-12]
   17684:	mov	r2, #0
   17688:	ldr	r1, [fp, #-8]
   1768c:	bl	4d9c <rb_bh_usage@plt>
   17690:	nop			; (mov r0, r0)
   17694:	sub	sp, fp, #4
   17698:	pop	{fp, pc}
   1769c:	.word	0x000301d4

000176a0 <rb_strndup>:
   176a0:	push	{fp, lr}
   176a4:	add	fp, sp, #4
   176a8:	sub	sp, sp, #16
   176ac:	str	r0, [fp, #-16]
   176b0:	str	r1, [fp, #-20]	; 0xffffffec
   176b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   176b8:	bl	4a24 <malloc@plt>
   176bc:	mov	r3, r0
   176c0:	str	r3, [fp, #-8]
   176c4:	ldr	r3, [fp, #-8]
   176c8:	cmp	r3, #0
   176cc:	moveq	r3, #1
   176d0:	movne	r3, #0
   176d4:	uxtb	r3, r3
   176d8:	cmp	r3, #0
   176dc:	beq	176e4 <rb_strndup+0x44>
   176e0:	bl	4a00 <rb_outofmemory@plt>
   176e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   176e8:	ldr	r1, [fp, #-16]
   176ec:	ldr	r0, [fp, #-8]
   176f0:	bl	470c <rb_strlcpy@plt>
   176f4:	ldr	r3, [fp, #-8]
   176f8:	mov	r0, r3
   176fc:	sub	sp, fp, #4
   17700:	pop	{fp, pc}

00017704 <rb_strdup>:
   17704:	push	{fp, lr}
   17708:	add	fp, sp, #4
   1770c:	sub	sp, sp, #16
   17710:	str	r0, [fp, #-16]
   17714:	ldr	r0, [fp, #-16]
   17718:	bl	485c <strlen@plt>
   1771c:	mov	r3, r0
   17720:	add	r3, r3, #1
   17724:	mov	r0, r3
   17728:	bl	4a24 <malloc@plt>
   1772c:	mov	r3, r0
   17730:	str	r3, [fp, #-8]
   17734:	ldr	r3, [fp, #-8]
   17738:	cmp	r3, #0
   1773c:	moveq	r3, #1
   17740:	movne	r3, #0
   17744:	uxtb	r3, r3
   17748:	cmp	r3, #0
   1774c:	beq	17754 <rb_strdup+0x50>
   17750:	bl	4a00 <rb_outofmemory@plt>
   17754:	ldr	r1, [fp, #-16]
   17758:	ldr	r0, [fp, #-8]
   1775c:	bl	48f8 <strcpy@plt>
   17760:	ldr	r3, [fp, #-8]
   17764:	mov	r0, r3
   17768:	sub	sp, fp, #4
   1776c:	pop	{fp, pc}

00017770 <rb_init_rb_dlink_nodes>:
   17770:	push	{fp, lr}
   17774:	add	fp, sp, #4
   17778:	sub	sp, sp, #8
   1777c:	str	r0, [fp, #-8]
   17780:	ldr	r3, [fp, #-8]
   17784:	ldr	r2, [pc, #64]	; 177cc <rb_init_rb_dlink_nodes+0x5c>
   17788:	add	r2, pc, r2
   1778c:	mov	r1, r3
   17790:	mov	r0, #12
   17794:	bl	4b2c <rb_bh_create@plt>
   17798:	mov	r2, r0
   1779c:	ldr	r3, [pc, #44]	; 177d0 <rb_init_rb_dlink_nodes+0x60>
   177a0:	add	r3, pc, r3
   177a4:	str	r2, [r3]
   177a8:	ldr	r3, [pc, #36]	; 177d4 <rb_init_rb_dlink_nodes+0x64>
   177ac:	add	r3, pc, r3
   177b0:	ldr	r3, [r3]
   177b4:	cmp	r3, #0
   177b8:	bne	177c0 <rb_init_rb_dlink_nodes+0x50>
   177bc:	bl	4a00 <rb_outofmemory@plt>
   177c0:	nop			; (mov r0, r0)
   177c4:	sub	sp, fp, #4
   177c8:	pop	{fp, pc}
   177cc:	.word	0x0000bc90
   177d0:	.word	0x000320ac
   177d4:	.word	0x000320a0

000177d8 <rb_make_rb_dlink_node>:
   177d8:	push	{fp, lr}
   177dc:	add	fp, sp, #4
   177e0:	ldr	r3, [pc, #24]	; 17800 <rb_make_rb_dlink_node+0x28>
   177e4:	add	r3, pc, r3
   177e8:	ldr	r3, [r3]
   177ec:	mov	r0, r3
   177f0:	bl	49d0 <rb_bh_alloc@plt>
   177f4:	mov	r3, r0
   177f8:	mov	r0, r3
   177fc:	pop	{fp, pc}
   17800:	.word	0x00032068

00017804 <rb_free_rb_dlink_node>:
   17804:	push	{fp, lr}
   17808:	add	fp, sp, #4
   1780c:	sub	sp, sp, #8
   17810:	str	r0, [fp, #-8]
   17814:	ldr	r3, [pc, #28]	; 17838 <rb_free_rb_dlink_node+0x34>
   17818:	add	r3, pc, r3
   1781c:	ldr	r3, [r3]
   17820:	ldr	r1, [fp, #-8]
   17824:	mov	r0, r3
   17828:	bl	4940 <rb_bh_free@plt>
   1782c:	nop			; (mov r0, r0)
   17830:	sub	sp, fp, #4
   17834:	pop	{fp, pc}
   17838:	.word	0x00032034

0001783c <rb_string_to_array>:
   1783c:	push	{fp, lr}
   17840:	add	fp, sp, #4
   17844:	sub	sp, sp, #32
   17848:	str	r0, [fp, #-24]	; 0xffffffe8
   1784c:	str	r1, [fp, #-28]	; 0xffffffe4
   17850:	str	r2, [fp, #-32]	; 0xffffffe0
   17854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17858:	str	r3, [fp, #-12]
   1785c:	mov	r3, #0
   17860:	str	r3, [fp, #-16]
   17864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17868:	cmp	r3, #0
   1786c:	beq	17880 <rb_string_to_array+0x44>
   17870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17874:	ldrb	r3, [r3]
   17878:	cmp	r3, #0
   1787c:	bne	17894 <rb_string_to_array+0x58>
   17880:	ldr	r3, [fp, #-16]
   17884:	b	179ec <rb_string_to_array+0x1b0>
   17888:	ldr	r3, [fp, #-12]
   1788c:	add	r3, r3, #1
   17890:	str	r3, [fp, #-12]
   17894:	ldr	r3, [fp, #-12]
   17898:	ldrb	r3, [r3]
   1789c:	cmp	r3, #32
   178a0:	beq	17888 <rb_string_to_array+0x4c>
   178a4:	ldr	r3, [fp, #-12]
   178a8:	ldrb	r3, [r3]
   178ac:	cmp	r3, #0
   178b0:	bne	178bc <rb_string_to_array+0x80>
   178b4:	ldr	r3, [fp, #-16]
   178b8:	b	179ec <rb_string_to_array+0x1b0>
   178bc:	ldr	r3, [fp, #-12]
   178c0:	ldrb	r3, [r3]
   178c4:	cmp	r3, #58	; 0x3a
   178c8:	bne	17900 <rb_string_to_array+0xc4>
   178cc:	ldr	r3, [fp, #-12]
   178d0:	add	r3, r3, #1
   178d4:	str	r3, [fp, #-12]
   178d8:	ldr	r3, [fp, #-16]
   178dc:	add	r2, r3, #1
   178e0:	str	r2, [fp, #-16]
   178e4:	lsl	r3, r3, #2
   178e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   178ec:	add	r3, r2, r3
   178f0:	ldr	r2, [fp, #-12]
   178f4:	str	r2, [r3]
   178f8:	ldr	r3, [fp, #-16]
   178fc:	b	179ec <rb_string_to_array+0x1b0>
   17900:	ldr	r3, [fp, #-16]
   17904:	add	r2, r3, #1
   17908:	str	r2, [fp, #-16]
   1790c:	lsl	r3, r3, #2
   17910:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17914:	add	r3, r2, r3
   17918:	ldr	r2, [fp, #-12]
   1791c:	str	r2, [r3]
   17920:	mov	r1, #32
   17924:	ldr	r0, [fp, #-12]
   17928:	bl	461c <strchr@plt>
   1792c:	str	r0, [fp, #-8]
   17930:	ldr	r3, [fp, #-8]
   17934:	cmp	r3, #0
   17938:	beq	1795c <rb_string_to_array+0x120>
   1793c:	ldr	r3, [fp, #-8]
   17940:	add	r2, r3, #1
   17944:	str	r2, [fp, #-8]
   17948:	mov	r2, #0
   1794c:	strb	r2, [r3]
   17950:	ldr	r3, [fp, #-8]
   17954:	str	r3, [fp, #-12]
   17958:	b	17970 <rb_string_to_array+0x134>
   1795c:	ldr	r3, [fp, #-16]
   17960:	b	179ec <rb_string_to_array+0x1b0>
   17964:	ldr	r3, [fp, #-12]
   17968:	add	r3, r3, #1
   1796c:	str	r3, [fp, #-12]
   17970:	ldr	r3, [fp, #-12]
   17974:	ldrb	r3, [r3]
   17978:	cmp	r3, #32
   1797c:	beq	17964 <rb_string_to_array+0x128>
   17980:	ldr	r3, [fp, #-12]
   17984:	ldrb	r3, [r3]
   17988:	cmp	r3, #0
   1798c:	bne	17998 <rb_string_to_array+0x15c>
   17990:	ldr	r3, [fp, #-16]
   17994:	b	179ec <rb_string_to_array+0x1b0>
   17998:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1799c:	sub	r2, r3, #1
   179a0:	ldr	r3, [fp, #-16]
   179a4:	cmp	r2, r3
   179a8:	bgt	178bc <rb_string_to_array+0x80>
   179ac:	ldr	r3, [fp, #-8]
   179b0:	ldrb	r3, [r3]
   179b4:	cmp	r3, #58	; 0x3a
   179b8:	bne	179c8 <rb_string_to_array+0x18c>
   179bc:	ldr	r3, [fp, #-8]
   179c0:	add	r3, r3, #1
   179c4:	str	r3, [fp, #-8]
   179c8:	ldr	r3, [fp, #-16]
   179cc:	add	r2, r3, #1
   179d0:	str	r2, [fp, #-16]
   179d4:	lsl	r3, r3, #2
   179d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   179dc:	add	r3, r2, r3
   179e0:	ldr	r2, [fp, #-8]
   179e4:	str	r2, [r3]
   179e8:	ldr	r3, [fp, #-16]
   179ec:	mov	r0, r3
   179f0:	sub	sp, fp, #4
   179f4:	pop	{fp, pc}

000179f8 <rb_strcasecmp>:
   179f8:	push	{fp, lr}
   179fc:	add	fp, sp, #4
   17a00:	sub	sp, sp, #8
   17a04:	str	r0, [fp, #-8]
   17a08:	str	r1, [fp, #-12]
   17a0c:	ldr	r1, [fp, #-12]
   17a10:	ldr	r0, [fp, #-8]
   17a14:	bl	4634 <strcasecmp@plt>
   17a18:	mov	r3, r0
   17a1c:	mov	r0, r3
   17a20:	sub	sp, fp, #4
   17a24:	pop	{fp, pc}

00017a28 <rb_strncasecmp>:
   17a28:	push	{fp, lr}
   17a2c:	add	fp, sp, #4
   17a30:	sub	sp, sp, #16
   17a34:	str	r0, [fp, #-8]
   17a38:	str	r1, [fp, #-12]
   17a3c:	str	r2, [fp, #-16]
   17a40:	ldr	r2, [fp, #-16]
   17a44:	ldr	r1, [fp, #-12]
   17a48:	ldr	r0, [fp, #-8]
   17a4c:	bl	49f4 <strncasecmp@plt>
   17a50:	mov	r3, r0
   17a54:	mov	r0, r3
   17a58:	sub	sp, fp, #4
   17a5c:	pop	{fp, pc}

00017a60 <rb_strcasestr>:
   17a60:	push	{fp, lr}
   17a64:	add	fp, sp, #4
   17a68:	sub	sp, sp, #8
   17a6c:	str	r0, [fp, #-8]
   17a70:	str	r1, [fp, #-12]
   17a74:	ldr	r1, [fp, #-12]
   17a78:	ldr	r0, [fp, #-8]
   17a7c:	bl	4484 <strcasestr@plt>
   17a80:	mov	r3, r0
   17a84:	mov	r0, r3
   17a88:	sub	sp, fp, #4
   17a8c:	pop	{fp, pc}

00017a90 <rb_strlcat>:
   17a90:	push	{fp, lr}
   17a94:	add	fp, sp, #4
   17a98:	sub	sp, sp, #32
   17a9c:	str	r0, [fp, #-24]	; 0xffffffe8
   17aa0:	str	r1, [fp, #-28]	; 0xffffffe4
   17aa4:	str	r2, [fp, #-32]	; 0xffffffe0
   17aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17aac:	bl	485c <strlen@plt>
   17ab0:	str	r0, [fp, #-12]
   17ab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17ab8:	bl	485c <strlen@plt>
   17abc:	str	r0, [fp, #-8]
   17ac0:	ldr	r2, [fp, #-12]
   17ac4:	ldr	r3, [fp, #-8]
   17ac8:	add	r3, r2, r3
   17acc:	str	r3, [fp, #-16]
   17ad0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ad4:	ldr	r3, [fp, #-12]
   17ad8:	add	r3, r2, r3
   17adc:	str	r3, [fp, #-24]	; 0xffffffe8
   17ae0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17ae4:	ldr	r3, [fp, #-12]
   17ae8:	sub	r3, r2, r3
   17aec:	str	r3, [fp, #-32]	; 0xffffffe0
   17af0:	ldr	r2, [fp, #-8]
   17af4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17af8:	cmp	r2, r3
   17afc:	bcc	17b0c <rb_strlcat+0x7c>
   17b00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17b04:	sub	r3, r3, #1
   17b08:	str	r3, [fp, #-8]
   17b0c:	ldr	r2, [fp, #-8]
   17b10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b18:	bl	4880 <memcpy@plt>
   17b1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b20:	ldr	r3, [fp, #-8]
   17b24:	add	r3, r2, r3
   17b28:	mov	r2, #0
   17b2c:	strb	r2, [r3]
   17b30:	ldr	r3, [fp, #-16]
   17b34:	mov	r0, r3
   17b38:	sub	sp, fp, #4
   17b3c:	pop	{fp, pc}

00017b40 <rb_strlcpy>:
   17b40:	push	{fp, lr}
   17b44:	add	fp, sp, #4
   17b48:	sub	sp, sp, #24
   17b4c:	str	r0, [fp, #-16]
   17b50:	str	r1, [fp, #-20]	; 0xffffffec
   17b54:	str	r2, [fp, #-24]	; 0xffffffe8
   17b58:	ldr	r0, [fp, #-20]	; 0xffffffec
   17b5c:	bl	485c <strlen@plt>
   17b60:	str	r0, [fp, #-8]
   17b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b68:	cmp	r3, #0
   17b6c:	beq	17bb8 <rb_strlcpy+0x78>
   17b70:	ldr	r2, [fp, #-8]
   17b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b78:	cmp	r2, r3
   17b7c:	bcc	17b8c <rb_strlcpy+0x4c>
   17b80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b84:	sub	r3, r3, #1
   17b88:	b	17b90 <rb_strlcpy+0x50>
   17b8c:	ldr	r3, [fp, #-8]
   17b90:	str	r3, [fp, #-12]
   17b94:	ldr	r2, [fp, #-12]
   17b98:	ldr	r1, [fp, #-20]	; 0xffffffec
   17b9c:	ldr	r0, [fp, #-16]
   17ba0:	bl	4880 <memcpy@plt>
   17ba4:	ldr	r2, [fp, #-16]
   17ba8:	ldr	r3, [fp, #-12]
   17bac:	add	r3, r2, r3
   17bb0:	mov	r2, #0
   17bb4:	strb	r2, [r3]
   17bb8:	ldr	r3, [fp, #-8]
   17bbc:	mov	r0, r3
   17bc0:	sub	sp, fp, #4
   17bc4:	pop	{fp, pc}

00017bc8 <rb_strnlen>:
   17bc8:	push	{fp, lr}
   17bcc:	add	fp, sp, #4
   17bd0:	sub	sp, sp, #8
   17bd4:	str	r0, [fp, #-8]
   17bd8:	str	r1, [fp, #-12]
   17bdc:	ldr	r1, [fp, #-12]
   17be0:	ldr	r0, [fp, #-8]
   17be4:	bl	4a90 <strnlen@plt>
   17be8:	mov	r3, r0
   17bec:	mov	r0, r3
   17bf0:	sub	sp, fp, #4
   17bf4:	pop	{fp, pc}

00017bf8 <rb_snprintf_append>:
   17bf8:	push	{r2, r3}
   17bfc:	push	{fp, lr}
   17c00:	add	fp, sp, #4
   17c04:	sub	sp, sp, #24
   17c08:	str	r0, [fp, #-24]	; 0xffffffe8
   17c0c:	str	r1, [fp, #-28]	; 0xffffffe4
   17c10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17c14:	cmp	r3, #0
   17c18:	bne	17c24 <rb_snprintf_append+0x2c>
   17c1c:	mvn	r3, #0
   17c20:	b	17cb8 <rb_snprintf_append+0xc0>
   17c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c28:	bl	485c <strlen@plt>
   17c2c:	mov	r3, r0
   17c30:	str	r3, [fp, #-8]
   17c34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17c38:	ldr	r3, [fp, #-8]
   17c3c:	cmp	r2, r3
   17c40:	bge	17c68 <rb_snprintf_append+0x70>
   17c44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17c48:	sub	r3, r3, #1
   17c4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17c50:	add	r3, r2, r3
   17c54:	mov	r2, #0
   17c58:	strb	r2, [r3]
   17c5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17c60:	sub	r3, r3, #1
   17c64:	b	17cb8 <rb_snprintf_append+0xc0>
   17c68:	add	r3, fp, #8
   17c6c:	str	r3, [fp, #-16]
   17c70:	ldr	r3, [fp, #-8]
   17c74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17c78:	add	r0, r2, r3
   17c7c:	ldr	r3, [fp, #-8]
   17c80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17c84:	sub	r1, r2, r3
   17c88:	ldr	r3, [fp, #-16]
   17c8c:	ldr	r2, [fp, #4]
   17c90:	bl	45c8 <vsnprintf@plt>
   17c94:	str	r0, [fp, #-12]
   17c98:	ldr	r3, [fp, #-12]
   17c9c:	cmp	r3, #0
   17ca0:	bge	17cac <rb_snprintf_append+0xb4>
   17ca4:	ldr	r3, [fp, #-12]
   17ca8:	b	17cb8 <rb_snprintf_append+0xc0>
   17cac:	ldr	r2, [fp, #-8]
   17cb0:	ldr	r3, [fp, #-12]
   17cb4:	add	r3, r2, r3
   17cb8:	mov	r0, r3
   17cbc:	sub	sp, fp, #4
   17cc0:	pop	{fp, lr}
   17cc4:	add	sp, sp, #8
   17cc8:	bx	lr

00017ccc <rb_snprintf_try_append>:
   17ccc:	push	{r2, r3}
   17cd0:	push	{fp, lr}
   17cd4:	add	fp, sp, #4
   17cd8:	sub	sp, sp, #24
   17cdc:	str	r0, [fp, #-24]	; 0xffffffe8
   17ce0:	str	r1, [fp, #-28]	; 0xffffffe4
   17ce4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ce8:	cmp	r3, #0
   17cec:	bne	17cf8 <rb_snprintf_try_append+0x2c>
   17cf0:	mvn	r3, #0
   17cf4:	b	17dc0 <rb_snprintf_try_append+0xf4>
   17cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cfc:	bl	485c <strlen@plt>
   17d00:	mov	r3, r0
   17d04:	str	r3, [fp, #-8]
   17d08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17d0c:	ldr	r3, [fp, #-8]
   17d10:	cmp	r2, r3
   17d14:	bge	17d38 <rb_snprintf_try_append+0x6c>
   17d18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17d1c:	sub	r3, r3, #1
   17d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d24:	add	r3, r2, r3
   17d28:	mov	r2, #0
   17d2c:	strb	r2, [r3]
   17d30:	mvn	r3, #0
   17d34:	b	17dc0 <rb_snprintf_try_append+0xf4>
   17d38:	add	r3, fp, #8
   17d3c:	str	r3, [fp, #-16]
   17d40:	ldr	r3, [fp, #-8]
   17d44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17d48:	add	r0, r2, r3
   17d4c:	ldr	r3, [fp, #-8]
   17d50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17d54:	sub	r1, r2, r3
   17d58:	ldr	r3, [fp, #-16]
   17d5c:	ldr	r2, [fp, #4]
   17d60:	bl	45c8 <vsnprintf@plt>
   17d64:	str	r0, [fp, #-12]
   17d68:	ldr	r3, [fp, #-12]
   17d6c:	cmp	r3, #0
   17d70:	bge	17d7c <rb_snprintf_try_append+0xb0>
   17d74:	ldr	r3, [fp, #-12]
   17d78:	b	17dc0 <rb_snprintf_try_append+0xf4>
   17d7c:	ldr	r2, [fp, #-8]
   17d80:	ldr	r3, [fp, #-12]
   17d84:	add	r3, r2, r3
   17d88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17d8c:	sub	r2, r2, #1
   17d90:	cmp	r3, r2
   17d94:	ble	17db4 <rb_snprintf_try_append+0xe8>
   17d98:	ldr	r3, [fp, #-8]
   17d9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17da0:	add	r3, r2, r3
   17da4:	mov	r2, #0
   17da8:	strb	r2, [r3]
   17dac:	mvn	r3, #0
   17db0:	b	17dc0 <rb_snprintf_try_append+0xf4>
   17db4:	ldr	r2, [fp, #-8]
   17db8:	ldr	r3, [fp, #-12]
   17dbc:	add	r3, r2, r3
   17dc0:	mov	r0, r3
   17dc4:	sub	sp, fp, #4
   17dc8:	pop	{fp, lr}
   17dcc:	add	sp, sp, #8
   17dd0:	bx	lr

00017dd4 <rb_basename>:
   17dd4:	push	{fp, lr}
   17dd8:	add	fp, sp, #4
   17ddc:	sub	sp, sp, #16
   17de0:	str	r0, [fp, #-16]
   17de4:	mov	r1, #47	; 0x2f
   17de8:	ldr	r0, [fp, #-16]
   17dec:	bl	46b8 <strrchr@plt>
   17df0:	str	r0, [fp, #-8]
   17df4:	ldr	r3, [fp, #-8]
   17df8:	cmp	r3, #0
   17dfc:	bne	17e0c <rb_basename+0x38>
   17e00:	ldr	r3, [fp, #-16]
   17e04:	str	r3, [fp, #-8]
   17e08:	b	17e18 <rb_basename+0x44>
   17e0c:	ldr	r3, [fp, #-8]
   17e10:	add	r3, r3, #1
   17e14:	str	r3, [fp, #-8]
   17e18:	ldr	r0, [fp, #-8]
   17e1c:	bl	17704 <rb_strdup>
   17e20:	mov	r3, r0
   17e24:	mov	r0, r3
   17e28:	sub	sp, fp, #4
   17e2c:	pop	{fp, pc}

00017e30 <rb_dirname>:
   17e30:	push	{fp, lr}
   17e34:	add	fp, sp, #4
   17e38:	sub	sp, sp, #16
   17e3c:	str	r0, [fp, #-16]
   17e40:	mov	r1, #47	; 0x2f
   17e44:	ldr	r0, [fp, #-16]
   17e48:	bl	46b8 <strrchr@plt>
   17e4c:	str	r0, [fp, #-8]
   17e50:	ldr	r3, [fp, #-8]
   17e54:	cmp	r3, #0
   17e58:	bne	17e80 <rb_dirname+0x50>
   17e5c:	ldr	r3, [pc, #104]	; 17ecc <rb_dirname+0x9c>
   17e60:	add	r3, pc, r3
   17e64:	mov	r0, r3
   17e68:	bl	17704 <rb_strdup>
   17e6c:	mov	r3, r0
   17e70:	b	17ec0 <rb_dirname+0x90>
   17e74:	ldr	r3, [fp, #-8]
   17e78:	sub	r3, r3, #1
   17e7c:	str	r3, [fp, #-8]
   17e80:	ldr	r2, [fp, #-8]
   17e84:	ldr	r3, [fp, #-16]
   17e88:	cmp	r2, r3
   17e8c:	bls	17ea0 <rb_dirname+0x70>
   17e90:	ldr	r3, [fp, #-8]
   17e94:	ldrb	r3, [r3]
   17e98:	cmp	r3, #47	; 0x2f
   17e9c:	beq	17e74 <rb_dirname+0x44>
   17ea0:	ldr	r2, [fp, #-8]
   17ea4:	ldr	r3, [fp, #-16]
   17ea8:	sub	r3, r2, r3
   17eac:	add	r3, r3, #2
   17eb0:	mov	r1, r3
   17eb4:	ldr	r0, [fp, #-16]
   17eb8:	bl	176a0 <rb_strndup>
   17ebc:	mov	r3, r0
   17ec0:	mov	r0, r3
   17ec4:	sub	sp, fp, #4
   17ec8:	pop	{fp, pc}
   17ecc:	.word	0x0000b5cc

00017ed0 <rb_fsnprint>:
   17ed0:	push	{fp, lr}
   17ed4:	add	fp, sp, #4
   17ed8:	sub	sp, sp, #32
   17edc:	str	r0, [fp, #-24]	; 0xffffffe8
   17ee0:	str	r1, [fp, #-28]	; 0xffffffe4
   17ee4:	str	r2, [fp, #-32]	; 0xffffffe0
   17ee8:	mov	r3, #0
   17eec:	str	r3, [fp, #-8]
   17ef0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ef4:	str	r3, [fp, #-12]
   17ef8:	b	18098 <rb_fsnprint+0x1c8>
   17efc:	mov	r3, #0
   17f00:	str	r3, [fp, #-16]
   17f04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f08:	ldr	r3, [r3]
   17f0c:	cmp	r3, #0
   17f10:	beq	17f48 <rb_fsnprint+0x78>
   17f14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f18:	ldr	r3, [r3]
   17f1c:	str	r3, [fp, #-12]
   17f20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17f24:	ldr	r3, [fp, #-8]
   17f28:	sub	r2, r2, r3
   17f2c:	ldr	r3, [fp, #-12]
   17f30:	cmp	r2, r3
   17f34:	bcs	17f48 <rb_fsnprint+0x78>
   17f38:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17f3c:	ldr	r3, [fp, #-8]
   17f40:	sub	r3, r2, r3
   17f44:	str	r3, [fp, #-12]
   17f48:	ldr	r3, [fp, #-12]
   17f4c:	cmp	r3, #0
   17f50:	beq	180a8 <rb_fsnprint+0x1d8>
   17f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f58:	ldr	r3, [r3, #4]
   17f5c:	cmp	r3, #0
   17f60:	beq	17fd0 <rb_fsnprint+0x100>
   17f64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f68:	ldr	r3, [r3, #12]
   17f6c:	cmp	r3, #0
   17f70:	beq	17fa4 <rb_fsnprint+0xd4>
   17f74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17f78:	ldr	r3, [fp, #-8]
   17f7c:	add	r0, r2, r3
   17f80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f84:	ldr	r2, [r3, #4]
   17f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f8c:	ldr	r3, [r3, #12]
   17f90:	ldr	r3, [r3]
   17f94:	ldr	r1, [fp, #-12]
   17f98:	bl	45c8 <vsnprintf@plt>
   17f9c:	str	r0, [fp, #-16]
   17fa0:	b	18008 <rb_fsnprint+0x138>
   17fa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17fa8:	ldr	r3, [fp, #-8]
   17fac:	add	r0, r2, r3
   17fb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fb4:	ldr	r3, [r3, #4]
   17fb8:	ldr	r2, [fp, #-12]
   17fbc:	mov	r1, r3
   17fc0:	bl	470c <rb_strlcpy@plt>
   17fc4:	mov	r3, r0
   17fc8:	str	r3, [fp, #-16]
   17fcc:	b	18008 <rb_fsnprint+0x138>
   17fd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fd4:	ldr	r3, [r3, #8]
   17fd8:	cmp	r3, #0
   17fdc:	beq	18008 <rb_fsnprint+0x138>
   17fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17fe4:	ldr	r3, [r3, #8]
   17fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fec:	ldr	r2, [fp, #-8]
   17ff0:	add	r0, r1, r2
   17ff4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17ff8:	ldr	r2, [r2, #12]
   17ffc:	ldr	r1, [fp, #-12]
   18000:	blx	r3
   18004:	str	r0, [fp, #-16]
   18008:	ldr	r3, [fp, #-16]
   1800c:	cmp	r3, #0
   18010:	bge	1801c <rb_fsnprint+0x14c>
   18014:	ldr	r3, [fp, #-16]
   18018:	b	180b0 <rb_fsnprint+0x1e0>
   1801c:	ldr	r3, [fp, #-12]
   18020:	sub	r2, r3, #1
   18024:	ldr	r3, [fp, #-16]
   18028:	cmp	r2, r3
   1802c:	bcs	18048 <rb_fsnprint+0x178>
   18030:	ldr	r2, [fp, #-12]
   18034:	ldr	r3, [fp, #-8]
   18038:	add	r3, r2, r3
   1803c:	sub	r3, r3, #1
   18040:	str	r3, [fp, #-8]
   18044:	b	18058 <rb_fsnprint+0x188>
   18048:	ldr	r3, [fp, #-16]
   1804c:	ldr	r2, [fp, #-8]
   18050:	add	r3, r2, r3
   18054:	str	r3, [fp, #-8]
   18058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1805c:	sub	r2, r3, #1
   18060:	ldr	r3, [fp, #-8]
   18064:	cmp	r2, r3
   18068:	bhi	1807c <rb_fsnprint+0x1ac>
   1806c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18070:	sub	r3, r3, #1
   18074:	str	r3, [fp, #-8]
   18078:	b	180ac <rb_fsnprint+0x1dc>
   1807c:	ldr	r3, [fp, #-16]
   18080:	ldr	r2, [fp, #-12]
   18084:	sub	r3, r2, r3
   18088:	str	r3, [fp, #-12]
   1808c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18090:	ldr	r3, [r3, #16]
   18094:	str	r3, [fp, #-32]	; 0xffffffe0
   18098:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1809c:	cmp	r3, #0
   180a0:	bne	17efc <rb_fsnprint+0x2c>
   180a4:	b	180ac <rb_fsnprint+0x1dc>
   180a8:	nop			; (mov r0, r0)
   180ac:	ldr	r3, [fp, #-8]
   180b0:	mov	r0, r3
   180b4:	sub	sp, fp, #4
   180b8:	pop	{fp, pc}

000180bc <rb_fsnprintf>:
   180bc:	push	{r3}		; (str r3, [sp, #-4]!)
   180c0:	push	{fp, lr}
   180c4:	add	fp, sp, #4
   180c8:	sub	sp, sp, #52	; 0x34
   180cc:	str	r0, [fp, #-44]	; 0xffffffd4
   180d0:	str	r1, [fp, #-48]	; 0xffffffd0
   180d4:	str	r2, [fp, #-52]	; 0xffffffcc
   180d8:	sub	r3, fp, #36	; 0x24
   180dc:	mov	r2, #0
   180e0:	str	r2, [r3]
   180e4:	str	r2, [r3, #4]
   180e8:	str	r2, [r3, #8]
   180ec:	str	r2, [r3, #12]
   180f0:	str	r2, [r3, #16]
   180f4:	ldr	r3, [fp, #4]
   180f8:	str	r3, [fp, #-32]	; 0xffffffe0
   180fc:	sub	r3, fp, #16
   18100:	str	r3, [fp, #-24]	; 0xffffffe8
   18104:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18108:	str	r3, [fp, #-20]	; 0xffffffec
   1810c:	add	r3, fp, #8
   18110:	str	r3, [fp, #-16]
   18114:	sub	r3, fp, #36	; 0x24
   18118:	mov	r2, r3
   1811c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18120:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18124:	bl	4700 <rb_fsnprint@plt>
   18128:	str	r0, [fp, #-12]
   1812c:	ldr	r3, [fp, #-12]
   18130:	mov	r0, r3
   18134:	sub	sp, fp, #4
   18138:	pop	{fp, lr}
   1813c:	add	sp, sp, #4
   18140:	bx	lr

00018144 <rb_malloc>:
   18144:	push	{fp, lr}
   18148:	add	fp, sp, #4
   1814c:	sub	sp, sp, #16
   18150:	str	r0, [fp, #-16]
   18154:	ldr	r1, [fp, #-16]
   18158:	mov	r0, #1
   1815c:	bl	4658 <calloc@plt>
   18160:	mov	r3, r0
   18164:	str	r3, [fp, #-8]
   18168:	ldr	r3, [fp, #-8]
   1816c:	cmp	r3, #0
   18170:	moveq	r3, #1
   18174:	movne	r3, #0
   18178:	uxtb	r3, r3
   1817c:	cmp	r3, #0
   18180:	beq	18188 <rb_malloc+0x44>
   18184:	bl	4a00 <rb_outofmemory@plt>
   18188:	ldr	r3, [fp, #-8]
   1818c:	mov	r0, r3
   18190:	sub	sp, fp, #4
   18194:	pop	{fp, pc}

00018198 <rb_free>:
   18198:	push	{fp, lr}
   1819c:	add	fp, sp, #4
   181a0:	sub	sp, sp, #8
   181a4:	str	r0, [fp, #-8]
   181a8:	ldr	r3, [fp, #-8]
   181ac:	cmp	r3, #0
   181b0:	movne	r3, #1
   181b4:	moveq	r3, #0
   181b8:	uxtb	r3, r3
   181bc:	cmp	r3, #0
   181c0:	beq	181cc <rb_free+0x34>
   181c4:	ldr	r0, [fp, #-8]
   181c8:	bl	476c <free@plt>
   181cc:	nop			; (mov r0, r0)
   181d0:	sub	sp, fp, #4
   181d4:	pop	{fp, pc}

000181d8 <rb_helper_child>:
   181d8:	push	{fp, lr}
   181dc:	add	fp, sp, #4
   181e0:	sub	sp, sp, #64	; 0x40
   181e4:	str	r0, [fp, #-40]	; 0xffffffd8
   181e8:	str	r1, [fp, #-44]	; 0xffffffd4
   181ec:	str	r2, [fp, #-48]	; 0xffffffd0
   181f0:	str	r3, [fp, #-52]	; 0xffffffcc
   181f4:	mov	r3, #0
   181f8:	str	r3, [fp, #-8]
   181fc:	ldr	r3, [pc, #628]	; 18478 <rb_helper_child+0x2a0>
   18200:	add	r3, pc, r3
   18204:	mov	r0, r3
   18208:	bl	4604 <getenv@plt>
   1820c:	str	r0, [fp, #-12]
   18210:	ldr	r3, [pc, #612]	; 1847c <rb_helper_child+0x2a4>
   18214:	add	r3, pc, r3
   18218:	mov	r0, r3
   1821c:	bl	4604 <getenv@plt>
   18220:	str	r0, [fp, #-16]
   18224:	ldr	r3, [pc, #596]	; 18480 <rb_helper_child+0x2a8>
   18228:	add	r3, pc, r3
   1822c:	mov	r0, r3
   18230:	bl	4604 <getenv@plt>
   18234:	str	r0, [fp, #-20]	; 0xffffffec
   18238:	ldr	r3, [fp, #-12]
   1823c:	cmp	r3, #0
   18240:	beq	1825c <rb_helper_child+0x84>
   18244:	ldr	r3, [fp, #-16]
   18248:	cmp	r3, #0
   1824c:	beq	1825c <rb_helper_child+0x84>
   18250:	ldr	r3, [fp, #-20]	; 0xffffffec
   18254:	cmp	r3, #0
   18258:	bne	18264 <rb_helper_child+0x8c>
   1825c:	mov	r3, #0
   18260:	b	1846c <rb_helper_child+0x294>
   18264:	mov	r0, #84	; 0x54
   18268:	bl	18144 <rb_malloc>
   1826c:	str	r0, [fp, #-24]	; 0xffffffe8
   18270:	mov	r2, #10
   18274:	mov	r1, #0
   18278:	ldr	r0, [fp, #-12]
   1827c:	bl	48e0 <strtol@plt>
   18280:	str	r0, [fp, #-28]	; 0xffffffe4
   18284:	mov	r2, #10
   18288:	mov	r1, #0
   1828c:	ldr	r0, [fp, #-16]
   18290:	bl	48e0 <strtol@plt>
   18294:	str	r0, [fp, #-32]	; 0xffffffe0
   18298:	mov	r2, #10
   1829c:	mov	r1, #0
   182a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   182a4:	bl	48e0 <strtol@plt>
   182a8:	str	r0, [fp, #-36]	; 0xffffffdc
   182ac:	mov	r3, #0
   182b0:	str	r3, [fp, #-8]
   182b4:	b	182ec <rb_helper_child+0x114>
   182b8:	ldr	r2, [fp, #-8]
   182bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   182c0:	cmp	r2, r3
   182c4:	beq	182e0 <rb_helper_child+0x108>
   182c8:	ldr	r2, [fp, #-8]
   182cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   182d0:	cmp	r2, r3
   182d4:	beq	182e0 <rb_helper_child+0x108>
   182d8:	ldr	r0, [fp, #-8]
   182dc:	bl	49b8 <close@plt>
   182e0:	ldr	r3, [fp, #-8]
   182e4:	add	r3, r3, #1
   182e8:	str	r3, [fp, #-8]
   182ec:	ldr	r2, [fp, #-8]
   182f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   182f4:	cmp	r2, r3
   182f8:	blt	182b8 <rb_helper_child+0xe0>
   182fc:	mov	r1, #2
   18300:	ldr	r3, [pc, #380]	; 18484 <rb_helper_child+0x2ac>
   18304:	add	r3, pc, r3
   18308:	mov	r0, r3
   1830c:	bl	43e8 <open@plt>
   18310:	str	r0, [fp, #-8]
   18314:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18318:	cmp	r3, #0
   1831c:	beq	18338 <rb_helper_child+0x160>
   18320:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18324:	cmp	r3, #0
   18328:	beq	18338 <rb_helper_child+0x160>
   1832c:	mov	r1, #0
   18330:	ldr	r0, [fp, #-8]
   18334:	bl	4b38 <dup2@plt>
   18338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1833c:	cmp	r3, #1
   18340:	beq	1835c <rb_helper_child+0x184>
   18344:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18348:	cmp	r3, #1
   1834c:	beq	1835c <rb_helper_child+0x184>
   18350:	mov	r1, #1
   18354:	ldr	r0, [fp, #-8]
   18358:	bl	4b38 <dup2@plt>
   1835c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18360:	cmp	r3, #2
   18364:	beq	18380 <rb_helper_child+0x1a8>
   18368:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1836c:	cmp	r3, #2
   18370:	beq	18380 <rb_helper_child+0x1a8>
   18374:	mov	r1, #2
   18378:	ldr	r0, [fp, #-8]
   1837c:	bl	4b38 <dup2@plt>
   18380:	ldr	r3, [fp, #-8]
   18384:	cmp	r3, #2
   18388:	ble	18394 <rb_helper_child+0x1bc>
   1838c:	ldr	r0, [fp, #-8]
   18390:	bl	49b8 <close@plt>
   18394:	ldr	r3, [fp, #16]
   18398:	str	r3, [sp, #8]
   1839c:	ldr	r3, [fp, #12]
   183a0:	str	r3, [sp, #4]
   183a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   183a8:	str	r3, [sp]
   183ac:	mov	r3, #0
   183b0:	ldr	r2, [fp, #4]
   183b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   183b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   183bc:	bl	4ab4 <rb_lib_init@plt>
   183c0:	ldr	r0, [fp, #8]
   183c4:	bl	4bd4 <rb_linebuf_init@plt>
   183c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   183cc:	add	r3, r3, #4
   183d0:	mov	r0, r3
   183d4:	bl	4b68 <rb_linebuf_newbuf@plt>
   183d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   183dc:	add	r3, r3, #32
   183e0:	mov	r0, r3
   183e4:	bl	4b68 <rb_linebuf_newbuf@plt>
   183e8:	ldr	r3, [pc, #152]	; 18488 <rb_helper_child+0x2b0>
   183ec:	add	r3, pc, r3
   183f0:	mov	r2, r3
   183f4:	mov	r1, #8
   183f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   183fc:	bl	4afc <rb_open@plt>
   18400:	mov	r2, r0
   18404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18408:	str	r2, [r3, #60]	; 0x3c
   1840c:	ldr	r3, [pc, #120]	; 1848c <rb_helper_child+0x2b4>
   18410:	add	r3, pc, r3
   18414:	mov	r2, r3
   18418:	mov	r1, #8
   1841c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18420:	bl	4afc <rb_open@plt>
   18424:	mov	r2, r0
   18428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1842c:	str	r2, [r3, #64]	; 0x40
   18430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18434:	ldr	r3, [r3, #60]	; 0x3c
   18438:	mov	r0, r3
   1843c:	bl	4688 <rb_set_nb@plt>
   18440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18444:	ldr	r3, [r3, #64]	; 0x40
   18448:	mov	r0, r3
   1844c:	bl	4688 <rb_set_nb@plt>
   18450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18454:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18458:	str	r2, [r3, #76]	; 0x4c
   1845c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18460:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18464:	str	r2, [r3, #80]	; 0x50
   18468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1846c:	mov	r0, r3
   18470:	sub	sp, fp, #4
   18474:	pop	{fp, pc}
   18478:	.word	0x0000b230
   1847c:	.word	0x0000b220
   18480:	.word	0x0000b210
   18484:	.word	0x0000b13c
   18488:	.word	0x0000b060
   1848c:	.word	0x0000b050

00018490 <rb_helper_start>:
   18490:	push	{fp, lr}
   18494:	add	fp, sp, #4
   18498:	sub	sp, sp, #208	; 0xd0
   1849c:	str	r0, [fp, #-200]	; 0xffffff38
   184a0:	str	r1, [fp, #-204]	; 0xffffff34
   184a4:	str	r2, [fp, #-208]	; 0xffffff30
   184a8:	str	r3, [fp, #-212]	; 0xffffff2c
   184ac:	mov	r1, #1
   184b0:	ldr	r0, [fp, #-204]	; 0xffffff34
   184b4:	bl	47b4 <access@plt>
   184b8:	mov	r3, r0
   184bc:	cmn	r3, #1
   184c0:	bne	184cc <rb_helper_start+0x3c>
   184c4:	mov	r3, #0
   184c8:	b	1874c <rb_helper_start+0x2bc>
   184cc:	mov	r0, #84	; 0x54
   184d0:	bl	18144 <rb_malloc>
   184d4:	str	r0, [fp, #-8]
   184d8:	sub	r0, fp, #148	; 0x94
   184dc:	ldr	r3, [fp, #-200]	; 0xffffff38
   184e0:	ldr	r2, [pc, #624]	; 18758 <rb_helper_start+0x2c8>
   184e4:	add	r2, pc, r2
   184e8:	mov	r1, #128	; 0x80
   184ec:	bl	4c34 <snprintf@plt>
   184f0:	sub	r2, fp, #148	; 0x94
   184f4:	sub	r3, fp, #188	; 0xbc
   184f8:	add	r1, r3, #4
   184fc:	sub	r3, fp, #188	; 0xbc
   18500:	mov	r0, r3
   18504:	bl	49e8 <rb_pipe@plt>
   18508:	mov	r3, r0
   1850c:	cmp	r3, #0
   18510:	bge	18524 <rb_helper_start+0x94>
   18514:	ldr	r0, [fp, #-8]
   18518:	bl	18198 <rb_free>
   1851c:	mov	r3, #0
   18520:	b	1874c <rb_helper_start+0x2bc>
   18524:	sub	r0, fp, #148	; 0x94
   18528:	ldr	r3, [fp, #-200]	; 0xffffff38
   1852c:	ldr	r2, [pc, #552]	; 1875c <rb_helper_start+0x2cc>
   18530:	add	r2, pc, r2
   18534:	mov	r1, #128	; 0x80
   18538:	bl	4c34 <snprintf@plt>
   1853c:	sub	r2, fp, #148	; 0x94
   18540:	sub	r3, fp, #196	; 0xc4
   18544:	add	r1, r3, #4
   18548:	sub	r3, fp, #196	; 0xc4
   1854c:	mov	r0, r3
   18550:	bl	49e8 <rb_pipe@plt>
   18554:	mov	r3, r0
   18558:	cmp	r3, #0
   1855c:	bge	18570 <rb_helper_start+0xe0>
   18560:	ldr	r0, [fp, #-8]
   18564:	bl	18198 <rb_free>
   18568:	mov	r3, #0
   1856c:	b	1874c <rb_helper_start+0x2bc>
   18570:	ldr	r3, [fp, #-184]	; 0xffffff48
   18574:	mov	r0, r3
   18578:	bl	4550 <rb_get_fd@plt>
   1857c:	mov	r3, r0
   18580:	sub	r0, fp, #164	; 0xa4
   18584:	ldr	r2, [pc, #468]	; 18760 <rb_helper_start+0x2d0>
   18588:	add	r2, pc, r2
   1858c:	mov	r1, #16
   18590:	bl	4c34 <snprintf@plt>
   18594:	ldr	r3, [fp, #-196]	; 0xffffff3c
   18598:	mov	r0, r3
   1859c:	bl	4550 <rb_get_fd@plt>
   185a0:	mov	r3, r0
   185a4:	sub	r0, fp, #180	; 0xb4
   185a8:	ldr	r2, [pc, #436]	; 18764 <rb_helper_start+0x2d4>
   185ac:	add	r2, pc, r2
   185b0:	mov	r1, #16
   185b4:	bl	4c34 <snprintf@plt>
   185b8:	ldr	r3, [fp, #-188]	; 0xffffff44
   185bc:	mov	r0, r3
   185c0:	bl	4688 <rb_set_nb@plt>
   185c4:	ldr	r3, [fp, #-184]	; 0xffffff48
   185c8:	mov	r0, r3
   185cc:	bl	4688 <rb_set_nb@plt>
   185d0:	ldr	r3, [fp, #-196]	; 0xffffff3c
   185d4:	mov	r0, r3
   185d8:	bl	4688 <rb_set_nb@plt>
   185dc:	ldr	r3, [fp, #-192]	; 0xffffff40
   185e0:	mov	r0, r3
   185e4:	bl	4688 <rb_set_nb@plt>
   185e8:	sub	r3, fp, #180	; 0xb4
   185ec:	mov	r2, #1
   185f0:	mov	r1, r3
   185f4:	ldr	r3, [pc, #364]	; 18768 <rb_helper_start+0x2d8>
   185f8:	add	r3, pc, r3
   185fc:	mov	r0, r3
   18600:	bl	4538 <rb_setenv@plt>
   18604:	sub	r3, fp, #164	; 0xa4
   18608:	mov	r2, #1
   1860c:	mov	r1, r3
   18610:	ldr	r3, [pc, #340]	; 1876c <rb_helper_start+0x2dc>
   18614:	add	r3, pc, r3
   18618:	mov	r0, r3
   1861c:	bl	4538 <rb_setenv@plt>
   18620:	mov	r2, #1
   18624:	ldr	r3, [pc, #324]	; 18770 <rb_helper_start+0x2e0>
   18628:	add	r3, pc, r3
   1862c:	mov	r1, r3
   18630:	ldr	r3, [pc, #316]	; 18774 <rb_helper_start+0x2e4>
   18634:	add	r3, pc, r3
   18638:	mov	r0, r3
   1863c:	bl	4538 <rb_setenv@plt>
   18640:	sub	r0, fp, #148	; 0x94
   18644:	ldr	r3, [fp, #-200]	; 0xffffff38
   18648:	ldr	r2, [pc, #296]	; 18778 <rb_helper_start+0x2e8>
   1864c:	add	r2, pc, r2
   18650:	mov	r1, #128	; 0x80
   18654:	bl	4c34 <snprintf@plt>
   18658:	sub	r3, fp, #148	; 0x94
   1865c:	str	r3, [fp, #-20]	; 0xffffffec
   18660:	mov	r3, #0
   18664:	str	r3, [fp, #-16]
   18668:	sub	r3, fp, #20
   1866c:	mov	r1, r3
   18670:	ldr	r0, [fp, #-204]	; 0xffffff34
   18674:	bl	4c1c <rb_spawn_process@plt>
   18678:	str	r0, [fp, #-12]
   1867c:	ldr	r3, [fp, #-12]
   18680:	cmn	r3, #1
   18684:	bne	186c8 <rb_helper_start+0x238>
   18688:	ldr	r3, [fp, #-188]	; 0xffffff44
   1868c:	mov	r0, r3
   18690:	bl	48d4 <rb_close@plt>
   18694:	ldr	r3, [fp, #-184]	; 0xffffff48
   18698:	mov	r0, r3
   1869c:	bl	48d4 <rb_close@plt>
   186a0:	ldr	r3, [fp, #-196]	; 0xffffff3c
   186a4:	mov	r0, r3
   186a8:	bl	48d4 <rb_close@plt>
   186ac:	ldr	r3, [fp, #-192]	; 0xffffff40
   186b0:	mov	r0, r3
   186b4:	bl	48d4 <rb_close@plt>
   186b8:	ldr	r0, [fp, #-8]
   186bc:	bl	18198 <rb_free>
   186c0:	mov	r3, #0
   186c4:	b	1874c <rb_helper_start+0x2bc>
   186c8:	ldr	r3, [fp, #-184]	; 0xffffff48
   186cc:	mov	r0, r3
   186d0:	bl	48d4 <rb_close@plt>
   186d4:	ldr	r3, [fp, #-196]	; 0xffffff3c
   186d8:	mov	r0, r3
   186dc:	bl	48d4 <rb_close@plt>
   186e0:	ldr	r3, [fp, #-8]
   186e4:	add	r3, r3, #4
   186e8:	mov	r0, r3
   186ec:	bl	4b68 <rb_linebuf_newbuf@plt>
   186f0:	ldr	r3, [fp, #-8]
   186f4:	add	r3, r3, #32
   186f8:	mov	r0, r3
   186fc:	bl	4b68 <rb_linebuf_newbuf@plt>
   18700:	ldr	r2, [fp, #-188]	; 0xffffff44
   18704:	ldr	r3, [fp, #-8]
   18708:	str	r2, [r3, #60]	; 0x3c
   1870c:	ldr	r2, [fp, #-192]	; 0xffffff40
   18710:	ldr	r3, [fp, #-8]
   18714:	str	r2, [r3, #64]	; 0x40
   18718:	ldr	r3, [fp, #-8]
   1871c:	ldr	r2, [fp, #-208]	; 0xffffff30
   18720:	str	r2, [r3, #76]	; 0x4c
   18724:	ldr	r3, [fp, #-8]
   18728:	ldr	r2, [fp, #-212]	; 0xffffff2c
   1872c:	str	r2, [r3, #80]	; 0x50
   18730:	ldr	r3, [fp, #-8]
   18734:	mov	r2, #0
   18738:	str	r2, [r3, #72]	; 0x48
   1873c:	ldr	r3, [fp, #-8]
   18740:	ldr	r2, [fp, #-12]
   18744:	str	r2, [r3, #68]	; 0x44
   18748:	ldr	r3, [fp, #-8]
   1874c:	mov	r0, r3
   18750:	sub	sp, fp, #4
   18754:	pop	{fp, pc}
   18758:	.word	0x0000af90
   1875c:	.word	0x0000af58
   18760:	.word	0x0000af14
   18764:	.word	0x0000aef0
   18768:	.word	0x0000ae38
   1876c:	.word	0x0000ae20
   18770:	.word	0x0000ae78
   18774:	.word	0x0000ae04
   18778:	.word	0x0000ae58

0001877c <rb_helper_restart>:
   1877c:	push	{fp, lr}
   18780:	add	fp, sp, #4
   18784:	sub	sp, sp, #8
   18788:	str	r0, [fp, #-8]
   1878c:	ldr	r3, [fp, #-8]
   18790:	ldr	r3, [r3, #80]	; 0x50
   18794:	ldr	r0, [fp, #-8]
   18798:	blx	r3
   1879c:	nop			; (mov r0, r0)
   187a0:	sub	sp, fp, #4
   187a4:	pop	{fp, pc}

000187a8 <rb_helper_write_sendq>:
   187a8:	push	{fp, lr}
   187ac:	add	fp, sp, #4
   187b0:	sub	sp, sp, #16
   187b4:	str	r0, [fp, #-16]
   187b8:	str	r1, [fp, #-20]	; 0xffffffec
   187bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   187c0:	str	r3, [fp, #-8]
   187c4:	ldr	r3, [fp, #-8]
   187c8:	ldr	r3, [r3, #16]
   187cc:	cmp	r3, #0
   187d0:	ble	18840 <rb_helper_write_sendq+0x98>
   187d4:	nop			; (mov r0, r0)
   187d8:	ldr	r3, [fp, #-8]
   187dc:	add	r3, r3, #4
   187e0:	mov	r1, r3
   187e4:	ldr	r0, [fp, #-16]
   187e8:	bl	4844 <rb_linebuf_flush@plt>
   187ec:	str	r0, [fp, #-12]
   187f0:	ldr	r3, [fp, #-12]
   187f4:	cmp	r3, #0
   187f8:	bgt	187d8 <rb_helper_write_sendq+0x30>
   187fc:	ldr	r3, [fp, #-12]
   18800:	cmp	r3, #0
   18804:	beq	18834 <rb_helper_write_sendq+0x8c>
   18808:	ldr	r3, [fp, #-12]
   1880c:	cmp	r3, #0
   18810:	bge	18840 <rb_helper_write_sendq+0x98>
   18814:	bl	4d78 <__errno_location@plt>
   18818:	mov	r3, r0
   1881c:	ldr	r3, [r3]
   18820:	mov	r0, r3
   18824:	bl	4448 <rb_ignore_errno@plt>
   18828:	mov	r3, r0
   1882c:	cmp	r3, #0
   18830:	bne	18840 <rb_helper_write_sendq+0x98>
   18834:	ldr	r0, [fp, #-8]
   18838:	bl	4640 <rb_helper_restart@plt>
   1883c:	b	1886c <rb_helper_write_sendq+0xc4>
   18840:	ldr	r3, [fp, #-8]
   18844:	ldr	r3, [r3, #16]
   18848:	cmp	r3, #0
   1884c:	ble	1886c <rb_helper_write_sendq+0xc4>
   18850:	ldr	r3, [fp, #-8]
   18854:	ldr	r0, [r3, #64]	; 0x40
   18858:	ldr	r3, [fp, #-8]
   1885c:	ldr	r2, [pc, #16]	; 18874 <rb_helper_write_sendq+0xcc>
   18860:	add	r2, pc, r2
   18864:	mov	r1, #2
   18868:	bl	4514 <rb_setselect@plt>
   1886c:	sub	sp, fp, #4
   18870:	pop	{fp, pc}
   18874:	.word	0xffffff40

00018878 <rb_helper_write_queue>:
   18878:	push	{r1, r2, r3}
   1887c:	push	{fp, lr}
   18880:	add	fp, sp, #4
   18884:	sub	sp, sp, #36	; 0x24
   18888:	str	r0, [fp, #-36]	; 0xffffffdc
   1888c:	sub	r3, fp, #32
   18890:	mov	r2, #0
   18894:	str	r2, [r3]
   18898:	str	r2, [r3, #4]
   1889c:	str	r2, [r3, #8]
   188a0:	str	r2, [r3, #12]
   188a4:	str	r2, [r3, #16]
   188a8:	ldr	r3, [fp, #4]
   188ac:	str	r3, [fp, #-28]	; 0xffffffe4
   188b0:	sub	r3, fp, #12
   188b4:	str	r3, [fp, #-20]	; 0xffffffec
   188b8:	add	r3, fp, #8
   188bc:	str	r3, [fp, #-12]
   188c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   188c4:	add	r3, r3, #4
   188c8:	sub	r2, fp, #32
   188cc:	mov	r1, r2
   188d0:	mov	r0, r3
   188d4:	bl	4c70 <rb_linebuf_put@plt>
   188d8:	nop			; (mov r0, r0)
   188dc:	sub	sp, fp, #4
   188e0:	pop	{fp, lr}
   188e4:	add	sp, sp, #12
   188e8:	bx	lr

000188ec <rb_helper_write_flush>:
   188ec:	push	{fp, lr}
   188f0:	add	fp, sp, #4
   188f4:	sub	sp, sp, #8
   188f8:	str	r0, [fp, #-8]
   188fc:	ldr	r3, [fp, #-8]
   18900:	ldr	r3, [r3, #64]	; 0x40
   18904:	ldr	r1, [fp, #-8]
   18908:	mov	r0, r3
   1890c:	bl	187a8 <rb_helper_write_sendq>
   18910:	nop			; (mov r0, r0)
   18914:	sub	sp, fp, #4
   18918:	pop	{fp, pc}

0001891c <rb_helper_write>:
   1891c:	push	{r1, r2, r3}
   18920:	push	{fp, lr}
   18924:	add	fp, sp, #4
   18928:	sub	sp, sp, #36	; 0x24
   1892c:	str	r0, [fp, #-36]	; 0xffffffdc
   18930:	sub	r3, fp, #32
   18934:	mov	r2, #0
   18938:	str	r2, [r3]
   1893c:	str	r2, [r3, #4]
   18940:	str	r2, [r3, #8]
   18944:	str	r2, [r3, #12]
   18948:	str	r2, [r3, #16]
   1894c:	ldr	r3, [fp, #4]
   18950:	str	r3, [fp, #-28]	; 0xffffffe4
   18954:	sub	r3, fp, #12
   18958:	str	r3, [fp, #-20]	; 0xffffffec
   1895c:	add	r3, fp, #8
   18960:	str	r3, [fp, #-12]
   18964:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18968:	add	r3, r3, #4
   1896c:	sub	r2, fp, #32
   18970:	mov	r1, r2
   18974:	mov	r0, r3
   18978:	bl	4c70 <rb_linebuf_put@plt>
   1897c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18980:	bl	188ec <rb_helper_write_flush>
   18984:	nop			; (mov r0, r0)
   18988:	sub	sp, fp, #4
   1898c:	pop	{fp, lr}
   18990:	add	sp, sp, #12
   18994:	bx	lr

00018998 <rb_helper_read_cb>:
   18998:	push	{fp, lr}
   1899c:	add	fp, sp, #4
   189a0:	sub	sp, sp, #16
   189a4:	str	r0, [fp, #-16]
   189a8:	str	r1, [fp, #-20]	; 0xffffffec
   189ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   189b0:	str	r3, [fp, #-8]
   189b4:	ldr	r3, [fp, #-8]
   189b8:	cmp	r3, #0
   189bc:	beq	18a80 <rb_helper_read_cb+0xe8>
   189c0:	b	189f0 <rb_helper_read_cb+0x58>
   189c4:	ldr	r3, [fp, #-8]
   189c8:	add	r0, r3, #32
   189cc:	mov	r3, #0
   189d0:	ldr	r2, [fp, #-12]
   189d4:	ldr	r1, [pc, #176]	; 18a8c <rb_helper_read_cb+0xf4>
   189d8:	add	r1, pc, r1
   189dc:	bl	46e8 <rb_linebuf_parse@plt>
   189e0:	ldr	r3, [fp, #-8]
   189e4:	ldr	r3, [r3, #76]	; 0x4c
   189e8:	ldr	r0, [fp, #-8]
   189ec:	blx	r3
   189f0:	ldr	r3, [fp, #-8]
   189f4:	ldr	r3, [r3, #60]	; 0x3c
   189f8:	mov	r2, #32768	; 0x8000
   189fc:	ldr	r1, [pc, #140]	; 18a90 <rb_helper_read_cb+0xf8>
   18a00:	add	r1, pc, r1
   18a04:	mov	r0, r3
   18a08:	bl	47fc <rb_read@plt>
   18a0c:	str	r0, [fp, #-12]
   18a10:	ldr	r3, [fp, #-12]
   18a14:	cmp	r3, #0
   18a18:	bgt	189c4 <rb_helper_read_cb+0x2c>
   18a1c:	ldr	r3, [fp, #-12]
   18a20:	cmp	r3, #0
   18a24:	beq	18a54 <rb_helper_read_cb+0xbc>
   18a28:	ldr	r3, [fp, #-12]
   18a2c:	cmp	r3, #0
   18a30:	bge	18a60 <rb_helper_read_cb+0xc8>
   18a34:	bl	4d78 <__errno_location@plt>
   18a38:	mov	r3, r0
   18a3c:	ldr	r3, [r3]
   18a40:	mov	r0, r3
   18a44:	bl	4448 <rb_ignore_errno@plt>
   18a48:	mov	r3, r0
   18a4c:	cmp	r3, #0
   18a50:	bne	18a60 <rb_helper_read_cb+0xc8>
   18a54:	ldr	r0, [fp, #-8]
   18a58:	bl	4640 <rb_helper_restart@plt>
   18a5c:	b	18a84 <rb_helper_read_cb+0xec>
   18a60:	ldr	r3, [fp, #-8]
   18a64:	ldr	r0, [r3, #60]	; 0x3c
   18a68:	ldr	r3, [fp, #-8]
   18a6c:	ldr	r2, [pc, #32]	; 18a94 <rb_helper_read_cb+0xfc>
   18a70:	add	r2, pc, r2
   18a74:	mov	r1, #1
   18a78:	bl	4514 <rb_setselect@plt>
   18a7c:	b	18a84 <rb_helper_read_cb+0xec>
   18a80:	nop			; (mov r0, r0)
   18a84:	sub	sp, fp, #4
   18a88:	pop	{fp, pc}
   18a8c:	.word	0x00030e78
   18a90:	.word	0x00030e50
   18a94:	.word	0xffffff20

00018a98 <rb_helper_run>:
   18a98:	push	{fp, lr}
   18a9c:	add	fp, sp, #4
   18aa0:	sub	sp, sp, #8
   18aa4:	str	r0, [fp, #-8]
   18aa8:	ldr	r3, [fp, #-8]
   18aac:	cmp	r3, #0
   18ab0:	beq	18acc <rb_helper_run+0x34>
   18ab4:	ldr	r3, [fp, #-8]
   18ab8:	ldr	r3, [r3, #60]	; 0x3c
   18abc:	ldr	r1, [fp, #-8]
   18ac0:	mov	r0, r3
   18ac4:	bl	18998 <rb_helper_read_cb>
   18ac8:	b	18ad0 <rb_helper_run+0x38>
   18acc:	nop			; (mov r0, r0)
   18ad0:	sub	sp, fp, #4
   18ad4:	pop	{fp, pc}

00018ad8 <rb_helper_close>:
   18ad8:	push	{fp, lr}
   18adc:	add	fp, sp, #4
   18ae0:	sub	sp, sp, #8
   18ae4:	str	r0, [fp, #-8]
   18ae8:	ldr	r3, [fp, #-8]
   18aec:	cmp	r3, #0
   18af0:	beq	18b34 <rb_helper_close+0x5c>
   18af4:	ldr	r3, [fp, #-8]
   18af8:	ldr	r3, [r3, #68]	; 0x44
   18afc:	mov	r1, #9
   18b00:	mov	r0, r3
   18b04:	bl	4760 <rb_kill@plt>
   18b08:	ldr	r3, [fp, #-8]
   18b0c:	ldr	r3, [r3, #60]	; 0x3c
   18b10:	mov	r0, r3
   18b14:	bl	48d4 <rb_close@plt>
   18b18:	ldr	r3, [fp, #-8]
   18b1c:	ldr	r3, [r3, #64]	; 0x40
   18b20:	mov	r0, r3
   18b24:	bl	48d4 <rb_close@plt>
   18b28:	ldr	r0, [fp, #-8]
   18b2c:	bl	18198 <rb_free>
   18b30:	b	18b38 <rb_helper_close+0x60>
   18b34:	nop			; (mov r0, r0)
   18b38:	sub	sp, fp, #4
   18b3c:	pop	{fp, pc}

00018b40 <rb_helper_read>:
   18b40:	push	{fp, lr}
   18b44:	add	fp, sp, #4
   18b48:	sub	sp, sp, #24
   18b4c:	str	r0, [fp, #-8]
   18b50:	str	r1, [fp, #-12]
   18b54:	str	r2, [fp, #-16]
   18b58:	ldr	r3, [fp, #-8]
   18b5c:	add	r0, r3, #32
   18b60:	ldr	r2, [fp, #-16]
   18b64:	mov	r3, #0
   18b68:	str	r3, [sp]
   18b6c:	mov	r3, #0
   18b70:	ldr	r1, [fp, #-12]
   18b74:	bl	4814 <rb_linebuf_get@plt>
   18b78:	mov	r3, r0
   18b7c:	mov	r0, r3
   18b80:	sub	sp, fp, #4
   18b84:	pop	{fp, pc}

00018b88 <rb_helper_loop>:
   18b88:	push	{fp, lr}
   18b8c:	add	fp, sp, #4
   18b90:	sub	sp, sp, #8
   18b94:	str	r0, [fp, #-8]
   18b98:	str	r1, [fp, #-12]
   18b9c:	ldr	r0, [fp, #-8]
   18ba0:	bl	43d0 <rb_helper_run@plt>
   18ba4:	ldr	r0, [fp, #-12]
   18ba8:	bl	47c0 <rb_lib_loop@plt>

00018bac <rb_init_netio_devpoll>:
   18bac:	push	{fp}		; (str fp, [sp, #-4]!)
   18bb0:	add	fp, sp, #0
   18bb4:	mov	r3, #38	; 0x26
   18bb8:	mov	r0, r3
   18bbc:	add	sp, fp, #0
   18bc0:	pop	{fp}		; (ldr fp, [sp], #4)
   18bc4:	bx	lr

00018bc8 <rb_setselect_devpoll>:
   18bc8:	push	{fp, lr}
   18bcc:	add	fp, sp, #4
   18bd0:	sub	sp, sp, #16
   18bd4:	str	r0, [fp, #-8]
   18bd8:	str	r1, [fp, #-12]
   18bdc:	str	r2, [fp, #-16]
   18be0:	str	r3, [fp, #-20]	; 0xffffffec
   18be4:	bl	4d78 <__errno_location@plt>
   18be8:	mov	r2, r0
   18bec:	mov	r3, #38	; 0x26
   18bf0:	str	r3, [r2]
   18bf4:	nop			; (mov r0, r0)
   18bf8:	sub	sp, fp, #4
   18bfc:	pop	{fp, pc}

00018c00 <rb_select_devpoll>:
   18c00:	push	{fp, lr}
   18c04:	add	fp, sp, #4
   18c08:	sub	sp, sp, #8
   18c0c:	str	r0, [fp, #-8]
   18c10:	bl	4d78 <__errno_location@plt>
   18c14:	mov	r2, r0
   18c18:	mov	r3, #38	; 0x26
   18c1c:	str	r3, [r2]
   18c20:	mvn	r3, #0
   18c24:	mov	r0, r3
   18c28:	sub	sp, fp, #4
   18c2c:	pop	{fp, pc}

00018c30 <rb_setup_fd_devpoll>:
   18c30:	push	{fp, lr}
   18c34:	add	fp, sp, #4
   18c38:	sub	sp, sp, #8
   18c3c:	str	r0, [fp, #-8]
   18c40:	bl	4d78 <__errno_location@plt>
   18c44:	mov	r2, r0
   18c48:	mov	r3, #38	; 0x26
   18c4c:	str	r3, [r2]
   18c50:	mvn	r3, #0
   18c54:	mov	r0, r3
   18c58:	sub	sp, fp, #4
   18c5c:	pop	{fp, pc}

00018c60 <rb_malloc>:
   18c60:	push	{fp, lr}
   18c64:	add	fp, sp, #4
   18c68:	sub	sp, sp, #16
   18c6c:	str	r0, [fp, #-16]
   18c70:	ldr	r1, [fp, #-16]
   18c74:	mov	r0, #1
   18c78:	bl	4658 <calloc@plt>
   18c7c:	mov	r3, r0
   18c80:	str	r3, [fp, #-8]
   18c84:	ldr	r3, [fp, #-8]
   18c88:	cmp	r3, #0
   18c8c:	moveq	r3, #1
   18c90:	movne	r3, #0
   18c94:	uxtb	r3, r3
   18c98:	cmp	r3, #0
   18c9c:	beq	18ca4 <rb_malloc+0x44>
   18ca0:	bl	4a00 <rb_outofmemory@plt>
   18ca4:	ldr	r3, [fp, #-8]
   18ca8:	mov	r0, r3
   18cac:	sub	sp, fp, #4
   18cb0:	pop	{fp, pc}

00018cb4 <rb_free>:
   18cb4:	push	{fp, lr}
   18cb8:	add	fp, sp, #4
   18cbc:	sub	sp, sp, #8
   18cc0:	str	r0, [fp, #-8]
   18cc4:	ldr	r3, [fp, #-8]
   18cc8:	cmp	r3, #0
   18ccc:	movne	r3, #1
   18cd0:	moveq	r3, #0
   18cd4:	uxtb	r3, r3
   18cd8:	cmp	r3, #0
   18cdc:	beq	18ce8 <rb_free+0x34>
   18ce0:	ldr	r0, [fp, #-8]
   18ce4:	bl	476c <free@plt>
   18ce8:	nop			; (mov r0, r0)
   18cec:	sub	sp, fp, #4
   18cf0:	pop	{fp, pc}

00018cf4 <rb_init_netio_epoll>:
   18cf4:	push	{r4, r5, fp, lr}
   18cf8:	add	fp, sp, #12
   18cfc:	ldr	r3, [pc, #244]	; 18df8 <rb_init_netio_epoll+0x104>
   18d00:	add	r3, pc, r3
   18d04:	mov	r2, #0
   18d08:	str	r2, [r3]
   18d0c:	ldr	r3, [pc, #232]	; 18dfc <rb_init_netio_epoll+0x108>
   18d10:	add	r3, pc, r3
   18d14:	mov	r2, #0
   18d18:	str	r2, [r3]
   18d1c:	mov	r0, #12
   18d20:	bl	18c60 <rb_malloc>
   18d24:	mov	r2, r0
   18d28:	ldr	r3, [pc, #208]	; 18e00 <rb_init_netio_epoll+0x10c>
   18d2c:	add	r3, pc, r3
   18d30:	str	r2, [r3]
   18d34:	ldr	r3, [pc, #200]	; 18e04 <rb_init_netio_epoll+0x110>
   18d38:	add	r3, pc, r3
   18d3c:	ldr	r4, [r3]
   18d40:	bl	4424 <getdtablesize@plt>
   18d44:	mov	r3, r0
   18d48:	str	r3, [r4, #8]
   18d4c:	ldr	r3, [pc, #180]	; 18e08 <rb_init_netio_epoll+0x114>
   18d50:	add	r3, pc, r3
   18d54:	ldr	r4, [r3]
   18d58:	ldr	r3, [pc, #172]	; 18e0c <rb_init_netio_epoll+0x118>
   18d5c:	add	r3, pc, r3
   18d60:	ldr	r3, [r3]
   18d64:	ldr	r3, [r3, #8]
   18d68:	mov	r0, r3
   18d6c:	bl	455c <epoll_create@plt>
   18d70:	mov	r3, r0
   18d74:	str	r3, [r4]
   18d78:	ldr	r3, [pc, #144]	; 18e10 <rb_init_netio_epoll+0x11c>
   18d7c:	add	r3, pc, r3
   18d80:	ldr	r3, [r3]
   18d84:	ldr	r3, [r3]
   18d88:	cmp	r3, #0
   18d8c:	bge	18d98 <rb_init_netio_epoll+0xa4>
   18d90:	mvn	r3, #0
   18d94:	b	18df0 <rb_init_netio_epoll+0xfc>
   18d98:	ldr	r3, [pc, #116]	; 18e14 <rb_init_netio_epoll+0x120>
   18d9c:	add	r3, pc, r3
   18da0:	ldr	r3, [r3]
   18da4:	ldr	r3, [r3]
   18da8:	ldr	r2, [pc, #104]	; 18e18 <rb_init_netio_epoll+0x124>
   18dac:	add	r2, pc, r2
   18db0:	mov	r1, #64	; 0x40
   18db4:	mov	r0, r3
   18db8:	bl	4afc <rb_open@plt>
   18dbc:	ldr	r3, [pc, #88]	; 18e1c <rb_init_netio_epoll+0x128>
   18dc0:	add	r3, pc, r3
   18dc4:	ldr	r4, [r3]
   18dc8:	ldr	r3, [pc, #80]	; 18e20 <rb_init_netio_epoll+0x12c>
   18dcc:	add	r3, pc, r3
   18dd0:	ldr	r3, [r3]
   18dd4:	ldr	r3, [r3, #8]
   18dd8:	lsl	r3, r3, #4
   18ddc:	mov	r0, r3
   18de0:	bl	18c60 <rb_malloc>
   18de4:	mov	r3, r0
   18de8:	str	r3, [r4, #4]
   18dec:	mov	r3, #0
   18df0:	mov	r0, r3
   18df4:	pop	{r4, r5, fp, pc}
   18df8:	.word	0x00038b54
   18dfc:	.word	0x00038b48
   18e00:	.word	0x00038b24
   18e04:	.word	0x00038b18
   18e08:	.word	0x00038b00
   18e0c:	.word	0x00038af4
   18e10:	.word	0x00038ad4
   18e14:	.word	0x00038ab4
   18e18:	.word	0x0000a708
   18e1c:	.word	0x00038a90
   18e20:	.word	0x00038a84

00018e24 <rb_setup_fd_epoll>:
   18e24:	push	{fp}		; (str fp, [sp, #-4]!)
   18e28:	add	fp, sp, #0
   18e2c:	sub	sp, sp, #12
   18e30:	str	r0, [fp, #-8]
   18e34:	mov	r3, #0
   18e38:	mov	r0, r3
   18e3c:	add	sp, fp, #0
   18e40:	pop	{fp}		; (ldr fp, [sp], #4)
   18e44:	bx	lr

00018e48 <rb_setselect_epoll>:
   18e48:	push	{fp, lr}
   18e4c:	add	fp, sp, #4
   18e50:	sub	sp, sp, #40	; 0x28
   18e54:	str	r0, [fp, #-32]	; 0xffffffe0
   18e58:	str	r1, [fp, #-36]	; 0xffffffdc
   18e5c:	str	r2, [fp, #-40]	; 0xffffffd8
   18e60:	str	r3, [fp, #-44]	; 0xffffffd4
   18e64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e68:	ldr	r3, [r3, #20]
   18e6c:	str	r3, [fp, #-12]
   18e70:	mvn	r3, #0
   18e74:	str	r3, [fp, #-8]
   18e78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18e7c:	and	r3, r3, #1
   18e80:	cmp	r3, #0
   18e84:	beq	18ed8 <rb_setselect_epoll+0x90>
   18e88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e8c:	cmp	r3, #0
   18e90:	beq	18eac <rb_setselect_epoll+0x64>
   18e94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e98:	ldr	r3, [r3, #20]
   18e9c:	orr	r2, r3, #1
   18ea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ea4:	str	r2, [r3, #20]
   18ea8:	b	18ec0 <rb_setselect_epoll+0x78>
   18eac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18eb0:	ldr	r3, [r3, #20]
   18eb4:	bic	r2, r3, #1
   18eb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ebc:	str	r2, [r3, #20]
   18ec0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ec4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18ec8:	str	r2, [r3, #28]
   18ecc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ed0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18ed4:	str	r2, [r3, #32]
   18ed8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18edc:	and	r3, r3, #2
   18ee0:	cmp	r3, #0
   18ee4:	beq	18f38 <rb_setselect_epoll+0xf0>
   18ee8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18eec:	cmp	r3, #0
   18ef0:	beq	18f0c <rb_setselect_epoll+0xc4>
   18ef4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ef8:	ldr	r3, [r3, #20]
   18efc:	orr	r2, r3, #4
   18f00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f04:	str	r2, [r3, #20]
   18f08:	b	18f20 <rb_setselect_epoll+0xd8>
   18f0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f10:	ldr	r3, [r3, #20]
   18f14:	bic	r2, r3, #4
   18f18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f1c:	str	r2, [r3, #20]
   18f20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18f28:	str	r2, [r3, #36]	; 0x24
   18f2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18f34:	str	r2, [r3, #40]	; 0x28
   18f38:	ldr	r3, [fp, #-12]
   18f3c:	cmp	r3, #0
   18f40:	bne	18f54 <rb_setselect_epoll+0x10c>
   18f44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f48:	ldr	r3, [r3, #20]
   18f4c:	cmp	r3, #0
   18f50:	beq	19058 <rb_setselect_epoll+0x210>
   18f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f58:	ldr	r3, [r3, #20]
   18f5c:	cmp	r3, #0
   18f60:	bgt	18f70 <rb_setselect_epoll+0x128>
   18f64:	mov	r3, #2
   18f68:	str	r3, [fp, #-8]
   18f6c:	b	18fb4 <rb_setselect_epoll+0x16c>
   18f70:	ldr	r3, [fp, #-12]
   18f74:	cmp	r3, #0
   18f78:	bne	18f98 <rb_setselect_epoll+0x150>
   18f7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f80:	ldr	r3, [r3, #20]
   18f84:	cmp	r3, #0
   18f88:	ble	18f98 <rb_setselect_epoll+0x150>
   18f8c:	mov	r3, #1
   18f90:	str	r3, [fp, #-8]
   18f94:	b	18fb4 <rb_setselect_epoll+0x16c>
   18f98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f9c:	ldr	r2, [r3, #20]
   18fa0:	ldr	r3, [fp, #-12]
   18fa4:	cmp	r2, r3
   18fa8:	beq	18fb4 <rb_setselect_epoll+0x16c>
   18fac:	mov	r3, #3
   18fb0:	str	r3, [fp, #-8]
   18fb4:	ldr	r3, [fp, #-8]
   18fb8:	cmn	r3, #1
   18fbc:	beq	19060 <rb_setselect_epoll+0x218>
   18fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18fc4:	ldr	r3, [r3, #20]
   18fc8:	str	r3, [fp, #-28]	; 0xffffffe4
   18fcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18fd0:	str	r3, [fp, #-20]	; 0xffffffec
   18fd4:	ldr	r3, [fp, #-8]
   18fd8:	cmp	r3, #1
   18fdc:	beq	18fec <rb_setselect_epoll+0x1a4>
   18fe0:	ldr	r3, [fp, #-8]
   18fe4:	cmp	r3, #3
   18fe8:	bne	18ff8 <rb_setselect_epoll+0x1b0>
   18fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ff0:	orr	r3, r3, #-2147483648	; 0x80000000
   18ff4:	str	r3, [fp, #-28]	; 0xffffffe4
   18ff8:	ldr	r3, [pc, #108]	; 1906c <rb_setselect_epoll+0x224>
   18ffc:	add	r3, pc, r3
   19000:	ldr	r3, [r3]
   19004:	ldr	r0, [r3]
   19008:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1900c:	ldr	r2, [r3, #12]
   19010:	sub	r3, fp, #28
   19014:	ldr	r1, [fp, #-8]
   19018:	bl	4cdc <epoll_ctl@plt>
   1901c:	mov	r3, r0
   19020:	cmp	r3, #0
   19024:	beq	19064 <rb_setselect_epoll+0x21c>
   19028:	bl	4d78 <__errno_location@plt>
   1902c:	mov	r3, r0
   19030:	ldr	r3, [r3]
   19034:	mov	r0, r3
   19038:	bl	440c <strerror@plt>
   1903c:	mov	r3, r0
   19040:	mov	r1, r3
   19044:	ldr	r3, [pc, #36]	; 19070 <rb_setselect_epoll+0x228>
   19048:	add	r3, pc, r3
   1904c:	mov	r0, r3
   19050:	bl	4994 <rb_lib_log@plt>
   19054:	bl	4430 <abort@plt>
   19058:	nop			; (mov r0, r0)
   1905c:	b	19064 <rb_setselect_epoll+0x21c>
   19060:	nop			; (mov r0, r0)
   19064:	sub	sp, fp, #4
   19068:	pop	{fp, pc}
   1906c:	.word	0x00038854
   19070:	.word	0x0000a484

00019074 <rb_select_epoll>:
   19074:	push	{fp, lr}
   19078:	add	fp, sp, #4
   1907c:	sub	sp, sp, #64	; 0x40
   19080:	str	r0, [fp, #-64]	; 0xffffffc0
   19084:	ldr	r3, [pc, #820]	; 193c0 <rb_select_epoll+0x34c>
   19088:	add	r3, pc, r3
   1908c:	ldr	r3, [r3]
   19090:	ldr	r0, [r3]
   19094:	ldr	r3, [pc, #808]	; 193c4 <rb_select_epoll+0x350>
   19098:	add	r3, pc, r3
   1909c:	ldr	r3, [r3]
   190a0:	ldr	r1, [r3, #4]
   190a4:	ldr	r3, [pc, #796]	; 193c8 <rb_select_epoll+0x354>
   190a8:	add	r3, pc, r3
   190ac:	ldr	r3, [r3]
   190b0:	ldr	r2, [r3, #8]
   190b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   190b8:	bl	482c <epoll_wait@plt>
   190bc:	str	r0, [fp, #-20]	; 0xffffffec
   190c0:	bl	4d78 <__errno_location@plt>
   190c4:	mov	r3, r0
   190c8:	ldr	r3, [r3]
   190cc:	str	r3, [fp, #-24]	; 0xffffffe8
   190d0:	bl	4a0c <rb_set_time@plt>
   190d4:	bl	4d78 <__errno_location@plt>
   190d8:	mov	r2, r0
   190dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   190e0:	str	r3, [r2]
   190e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   190e8:	cmp	r3, #0
   190ec:	bge	1910c <rb_select_epoll+0x98>
   190f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190f4:	bl	4448 <rb_ignore_errno@plt>
   190f8:	mov	r3, r0
   190fc:	cmp	r3, #0
   19100:	bne	1910c <rb_select_epoll+0x98>
   19104:	mov	r3, #5
   19108:	b	193b4 <rb_select_epoll+0x340>
   1910c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19110:	cmp	r3, #0
   19114:	bgt	19120 <rb_select_epoll+0xac>
   19118:	mov	r3, #0
   1911c:	b	193b4 <rb_select_epoll+0x340>
   19120:	mov	r3, #0
   19124:	str	r3, [fp, #-8]
   19128:	b	193a0 <rb_select_epoll+0x32c>
   1912c:	ldr	r3, [pc, #664]	; 193cc <rb_select_epoll+0x358>
   19130:	add	r3, pc, r3
   19134:	ldr	r3, [r3]
   19138:	ldr	r2, [r3, #4]
   1913c:	ldr	r3, [fp, #-8]
   19140:	lsl	r3, r3, #4
   19144:	add	r3, r2, r3
   19148:	ldr	r3, [r3, #8]
   1914c:	str	r3, [fp, #-28]	; 0xffffffe4
   19150:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19154:	ldr	r3, [r3, #20]
   19158:	str	r3, [fp, #-32]	; 0xffffffe0
   1915c:	ldr	r3, [pc, #620]	; 193d0 <rb_select_epoll+0x35c>
   19160:	add	r3, pc, r3
   19164:	ldr	r3, [r3]
   19168:	ldr	r2, [r3, #4]
   1916c:	ldr	r3, [fp, #-8]
   19170:	lsl	r3, r3, #4
   19174:	add	r3, r2, r3
   19178:	ldr	r3, [r3]
   1917c:	and	r3, r3, #25
   19180:	cmp	r3, #0
   19184:	beq	191d4 <rb_select_epoll+0x160>
   19188:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1918c:	ldr	r3, [r3, #28]
   19190:	str	r3, [fp, #-36]	; 0xffffffdc
   19194:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19198:	ldr	r3, [r3, #32]
   1919c:	str	r3, [fp, #-40]	; 0xffffffd8
   191a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   191a4:	mov	r2, #0
   191a8:	str	r2, [r3, #28]
   191ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   191b0:	mov	r2, #0
   191b4:	str	r2, [r3, #32]
   191b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   191bc:	cmp	r3, #0
   191c0:	beq	191d4 <rb_select_epoll+0x160>
   191c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   191c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   191cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   191d0:	blx	r3
   191d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   191d8:	ldrb	r3, [r3, #16]
   191dc:	and	r3, r3, #1
   191e0:	cmp	r3, #0
   191e4:	beq	19388 <rb_select_epoll+0x314>
   191e8:	ldr	r3, [pc, #484]	; 193d4 <rb_select_epoll+0x360>
   191ec:	add	r3, pc, r3
   191f0:	ldr	r3, [r3]
   191f4:	ldr	r2, [r3, #4]
   191f8:	ldr	r3, [fp, #-8]
   191fc:	lsl	r3, r3, #4
   19200:	add	r3, r2, r3
   19204:	ldr	r3, [r3]
   19208:	and	r3, r3, #28
   1920c:	cmp	r3, #0
   19210:	beq	19260 <rb_select_epoll+0x1ec>
   19214:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19218:	ldr	r3, [r3, #36]	; 0x24
   1921c:	str	r3, [fp, #-36]	; 0xffffffdc
   19220:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19224:	ldr	r3, [r3, #40]	; 0x28
   19228:	str	r3, [fp, #-40]	; 0xffffffd8
   1922c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19230:	mov	r2, #0
   19234:	str	r2, [r3, #36]	; 0x24
   19238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1923c:	mov	r2, #0
   19240:	str	r2, [r3, #40]	; 0x28
   19244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19248:	cmp	r3, #0
   1924c:	beq	19260 <rb_select_epoll+0x1ec>
   19250:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19254:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19258:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1925c:	blx	r3
   19260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19264:	ldrb	r3, [r3, #16]
   19268:	and	r3, r3, #1
   1926c:	cmp	r3, #0
   19270:	beq	19390 <rb_select_epoll+0x31c>
   19274:	mov	r3, #0
   19278:	str	r3, [fp, #-12]
   1927c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19280:	ldr	r3, [r3, #28]
   19284:	cmp	r3, #0
   19288:	beq	19298 <rb_select_epoll+0x224>
   1928c:	ldr	r3, [fp, #-12]
   19290:	orr	r3, r3, #1
   19294:	str	r3, [fp, #-12]
   19298:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1929c:	ldr	r3, [r3, #36]	; 0x24
   192a0:	cmp	r3, #0
   192a4:	beq	192b4 <rb_select_epoll+0x240>
   192a8:	ldr	r3, [fp, #-12]
   192ac:	orr	r3, r3, #4
   192b0:	str	r3, [fp, #-12]
   192b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   192b8:	ldr	r3, [fp, #-12]
   192bc:	cmp	r2, r3
   192c0:	beq	19394 <rb_select_epoll+0x320>
   192c4:	ldr	r3, [fp, #-12]
   192c8:	cmp	r3, #0
   192cc:	bne	192dc <rb_select_epoll+0x268>
   192d0:	mov	r3, #2
   192d4:	str	r3, [fp, #-16]
   192d8:	b	192e4 <rb_select_epoll+0x270>
   192dc:	mov	r3, #3
   192e0:	str	r3, [fp, #-16]
   192e4:	ldr	r3, [fp, #-12]
   192e8:	str	r3, [fp, #-60]	; 0xffffffc4
   192ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   192f0:	mov	r2, r3
   192f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   192f8:	str	r2, [r3, #20]
   192fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19300:	str	r3, [fp, #-52]	; 0xffffffcc
   19304:	ldr	r3, [fp, #-16]
   19308:	cmp	r3, #3
   1930c:	beq	1931c <rb_select_epoll+0x2a8>
   19310:	ldr	r3, [fp, #-16]
   19314:	cmp	r3, #1
   19318:	bne	19328 <rb_select_epoll+0x2b4>
   1931c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19320:	orr	r3, r3, #-2147483648	; 0x80000000
   19324:	str	r3, [fp, #-60]	; 0xffffffc4
   19328:	ldr	r3, [pc, #168]	; 193d8 <rb_select_epoll+0x364>
   1932c:	add	r3, pc, r3
   19330:	ldr	r3, [r3]
   19334:	ldr	r0, [r3]
   19338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1933c:	ldr	r2, [r3, #12]
   19340:	sub	r3, fp, #60	; 0x3c
   19344:	ldr	r1, [fp, #-16]
   19348:	bl	4cdc <epoll_ctl@plt>
   1934c:	mov	r3, r0
   19350:	cmp	r3, #0
   19354:	beq	19394 <rb_select_epoll+0x320>
   19358:	bl	4d78 <__errno_location@plt>
   1935c:	mov	r3, r0
   19360:	ldr	r3, [r3]
   19364:	mov	r0, r3
   19368:	bl	440c <strerror@plt>
   1936c:	mov	r3, r0
   19370:	mov	r1, r3
   19374:	ldr	r3, [pc, #96]	; 193dc <rb_select_epoll+0x368>
   19378:	add	r3, pc, r3
   1937c:	mov	r0, r3
   19380:	bl	4994 <rb_lib_log@plt>
   19384:	b	19394 <rb_select_epoll+0x320>
   19388:	nop			; (mov r0, r0)
   1938c:	b	19394 <rb_select_epoll+0x320>
   19390:	nop			; (mov r0, r0)
   19394:	ldr	r3, [fp, #-8]
   19398:	add	r3, r3, #1
   1939c:	str	r3, [fp, #-8]
   193a0:	ldr	r2, [fp, #-8]
   193a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   193a8:	cmp	r2, r3
   193ac:	blt	1912c <rb_select_epoll+0xb8>
   193b0:	mov	r3, #0
   193b4:	mov	r0, r3
   193b8:	sub	sp, fp, #4
   193bc:	pop	{fp, pc}
   193c0:	.word	0x000387c8
   193c4:	.word	0x000387b8
   193c8:	.word	0x000387a8
   193cc:	.word	0x00038720
   193d0:	.word	0x000386f0
   193d4:	.word	0x00038664
   193d8:	.word	0x00038524
   193dc:	.word	0x0000a180

000193e0 <rb_epoll_supports_event>:
   193e0:	push	{fp, lr}
   193e4:	add	fp, sp, #4
   193e8:	sub	sp, sp, #288	; 0x120
   193ec:	ldr	r3, [pc, #380]	; 19570 <rb_epoll_supports_event+0x190>
   193f0:	add	r3, pc, r3
   193f4:	ldr	r3, [r3]
   193f8:	cmp	r3, #1
   193fc:	bne	19408 <rb_epoll_supports_event+0x28>
   19400:	mov	r3, #1
   19404:	b	19564 <rb_epoll_supports_event+0x184>
   19408:	ldr	r3, [pc, #356]	; 19574 <rb_epoll_supports_event+0x194>
   1940c:	add	r3, pc, r3
   19410:	ldr	r3, [r3]
   19414:	cmn	r3, #1
   19418:	bne	19424 <rb_epoll_supports_event+0x44>
   1941c:	mov	r3, #0
   19420:	b	19564 <rb_epoll_supports_event+0x184>
   19424:	sub	r3, fp, #164	; 0xa4
   19428:	mov	r1, r3
   1942c:	ldr	r3, [pc, #324]	; 19578 <rb_epoll_supports_event+0x198>
   19430:	add	r3, pc, r3
   19434:	mov	r0, r3
   19438:	bl	219cc <__stat>
   1943c:	mov	r3, r0
   19440:	cmp	r3, #0
   19444:	bne	19460 <rb_epoll_supports_event+0x80>
   19448:	ldr	r3, [pc, #300]	; 1957c <rb_epoll_supports_event+0x19c>
   1944c:	add	r3, pc, r3
   19450:	mvn	r2, #0
   19454:	str	r2, [r3]
   19458:	mov	r3, #0
   1945c:	b	19564 <rb_epoll_supports_event+0x184>
   19460:	mov	r1, #0
   19464:	mov	r0, #0
   19468:	bl	4c4c <timerfd_create@plt>
   1946c:	str	r0, [fp, #-8]
   19470:	ldr	r3, [fp, #-8]
   19474:	cmp	r3, #0
   19478:	blt	194ac <rb_epoll_supports_event+0xcc>
   1947c:	ldr	r0, [fp, #-8]
   19480:	bl	49b8 <close@plt>
   19484:	ldr	r3, [pc, #244]	; 19580 <rb_epoll_supports_event+0x1a0>
   19488:	add	r3, pc, r3
   1948c:	mov	r2, #1
   19490:	str	r2, [r3]
   19494:	ldr	r3, [pc, #232]	; 19584 <rb_epoll_supports_event+0x1a4>
   19498:	add	r3, pc, r3
   1949c:	mov	r2, #1
   194a0:	str	r2, [r3]
   194a4:	mov	r3, #1
   194a8:	b	19564 <rb_epoll_supports_event+0x184>
   194ac:	mov	r3, #26
   194b0:	str	r3, [fp, #-72]	; 0xffffffb8
   194b4:	mov	r3, #0
   194b8:	str	r3, [fp, #-68]	; 0xffffffbc
   194bc:	sub	r2, fp, #12
   194c0:	sub	r3, fp, #76	; 0x4c
   194c4:	mov	r1, r3
   194c8:	mov	r0, #0
   194cc:	bl	4598 <timer_create@plt>
   194d0:	mov	r3, r0
   194d4:	cmp	r3, #0
   194d8:	beq	194f4 <rb_epoll_supports_event+0x114>
   194dc:	ldr	r3, [pc, #164]	; 19588 <rb_epoll_supports_event+0x1a8>
   194e0:	add	r3, pc, r3
   194e4:	mvn	r2, #0
   194e8:	str	r2, [r3]
   194ec:	mov	r3, #0
   194f0:	b	19564 <rb_epoll_supports_event+0x184>
   194f4:	ldr	r3, [fp, #-12]
   194f8:	mov	r0, r3
   194fc:	bl	4af0 <timer_delete@plt>
   19500:	sub	r3, fp, #292	; 0x124
   19504:	mov	r0, r3
   19508:	bl	4400 <sigemptyset@plt>
   1950c:	sub	r3, fp, #292	; 0x124
   19510:	mov	r2, #0
   19514:	mov	r1, r3
   19518:	mvn	r0, #0
   1951c:	bl	44a8 <signalfd@plt>
   19520:	str	r0, [fp, #-8]
   19524:	ldr	r3, [fp, #-8]
   19528:	cmp	r3, #0
   1952c:	bge	19548 <rb_epoll_supports_event+0x168>
   19530:	ldr	r3, [pc, #84]	; 1958c <rb_epoll_supports_event+0x1ac>
   19534:	add	r3, pc, r3
   19538:	mvn	r2, #0
   1953c:	str	r2, [r3]
   19540:	mov	r3, #0
   19544:	b	19564 <rb_epoll_supports_event+0x184>
   19548:	ldr	r0, [fp, #-8]
   1954c:	bl	49b8 <close@plt>
   19550:	ldr	r3, [pc, #56]	; 19590 <rb_epoll_supports_event+0x1b0>
   19554:	add	r3, pc, r3
   19558:	mov	r2, #1
   1955c:	str	r2, [r3]
   19560:	mov	r3, #1
   19564:	mov	r0, r3
   19568:	sub	sp, fp, #4
   1956c:	pop	{fp, pc}
   19570:	.word	0x00038464
   19574:	.word	0x00038448
   19578:	.word	0x0000a0f0
   1957c:	.word	0x00038408
   19580:	.word	0x000383cc
   19584:	.word	0x000383c0
   19588:	.word	0x00038374
   1958c:	.word	0x00038320
   19590:	.word	0x00038300

00019594 <signalfd_handler>:
   19594:	push	{fp, lr}
   19598:	add	fp, sp, #4
   1959c:	sub	sp, sp, #24
   195a0:	str	r0, [fp, #-24]	; 0xffffffe8
   195a4:	str	r1, [fp, #-28]	; 0xffffffe4
   195a8:	mov	r3, #0
   195ac:	str	r3, [fp, #-8]
   195b0:	b	19600 <signalfd_handler+0x6c>
   195b4:	ldr	r3, [fp, #-8]
   195b8:	lsl	r3, r3, #7
   195bc:	ldr	r2, [pc, #356]	; 19728 <signalfd_handler+0x194>
   195c0:	add	r2, pc, r2
   195c4:	add	r1, r3, r2
   195c8:	ldr	r3, [pc, #348]	; 1972c <signalfd_handler+0x198>
   195cc:	add	r3, pc, r3
   195d0:	ldr	r2, [fp, #-8]
   195d4:	str	r1, [r3, r2, lsl #3]
   195d8:	ldr	r2, [pc, #336]	; 19730 <signalfd_handler+0x19c>
   195dc:	add	r2, pc, r2
   195e0:	ldr	r3, [fp, #-8]
   195e4:	lsl	r3, r3, #3
   195e8:	add	r3, r2, r3
   195ec:	mov	r2, #128	; 0x80
   195f0:	str	r2, [r3, #4]
   195f4:	ldr	r3, [fp, #-8]
   195f8:	add	r3, r3, #1
   195fc:	str	r3, [fp, #-8]
   19600:	ldr	r3, [fp, #-8]
   19604:	cmp	r3, #15
   19608:	ble	195b4 <signalfd_handler+0x20>
   1960c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19610:	bl	4550 <rb_get_fd@plt>
   19614:	mov	r2, #16
   19618:	ldr	r3, [pc, #276]	; 19734 <signalfd_handler+0x1a0>
   1961c:	add	r3, pc, r3
   19620:	mov	r1, r3
   19624:	bl	4cf4 <readv@plt>
   19628:	str	r0, [fp, #-12]
   1962c:	ldr	r3, [fp, #-12]
   19630:	cmp	r3, #0
   19634:	beq	19664 <signalfd_handler+0xd0>
   19638:	ldr	r3, [fp, #-12]
   1963c:	cmp	r3, #0
   19640:	bge	19674 <signalfd_handler+0xe0>
   19644:	bl	4d78 <__errno_location@plt>
   19648:	mov	r3, r0
   1964c:	ldr	r3, [r3]
   19650:	mov	r0, r3
   19654:	bl	4448 <rb_ignore_errno@plt>
   19658:	mov	r3, r0
   1965c:	cmp	r3, #0
   19660:	bne	19674 <signalfd_handler+0xe0>
   19664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19668:	bl	48d4 <rb_close@plt>
   1966c:	bl	19740 <rb_epoll_init_event>
   19670:	b	19720 <signalfd_handler+0x18c>
   19674:	ldr	r3, [fp, #-12]
   19678:	cmp	r3, #0
   1967c:	bge	1969c <signalfd_handler+0x108>
   19680:	mov	r3, #0
   19684:	ldr	r2, [pc, #172]	; 19738 <signalfd_handler+0x1a4>
   19688:	add	r2, pc, r2
   1968c:	mov	r1, #1
   19690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19694:	bl	4514 <rb_setselect@plt>
   19698:	b	19720 <signalfd_handler+0x18c>
   1969c:	mov	r3, #0
   196a0:	str	r3, [fp, #-8]
   196a4:	b	196f4 <signalfd_handler+0x160>
   196a8:	ldr	r2, [pc, #140]	; 1973c <signalfd_handler+0x1a8>
   196ac:	add	r2, pc, r2
   196b0:	ldr	r3, [fp, #-8]
   196b4:	lsl	r3, r3, #7
   196b8:	add	r3, r2, r3
   196bc:	add	r3, r3, #48	; 0x30
   196c0:	ldrd	r2, [r3]
   196c4:	mov	r3, r2
   196c8:	str	r3, [fp, #-16]
   196cc:	ldr	r3, [fp, #-16]
   196d0:	cmp	r3, #0
   196d4:	beq	196e4 <signalfd_handler+0x150>
   196d8:	ldr	r0, [fp, #-16]
   196dc:	bl	4910 <rb_run_one_event@plt>
   196e0:	b	196e8 <signalfd_handler+0x154>
   196e4:	nop			; (mov r0, r0)
   196e8:	ldr	r3, [fp, #-8]
   196ec:	add	r3, r3, #1
   196f0:	str	r3, [fp, #-8]
   196f4:	ldr	r3, [fp, #-12]
   196f8:	add	r2, r3, #127	; 0x7f
   196fc:	cmp	r3, #0
   19700:	movlt	r3, r2
   19704:	movge	r3, r3
   19708:	asr	r3, r3, #7
   1970c:	mov	r2, r3
   19710:	ldr	r3, [fp, #-8]
   19714:	cmp	r2, r3
   19718:	bgt	196a8 <signalfd_handler+0x114>
   1971c:	b	1960c <signalfd_handler+0x78>
   19720:	sub	sp, fp, #4
   19724:	pop	{fp, pc}
   19728:	.word	0x000382a0
   1972c:	.word	0x00038a94
   19730:	.word	0x00038a84
   19734:	.word	0x00038a44
   19738:	.word	0xffffff04
   1973c:	.word	0x000381b4

00019740 <rb_epoll_init_event>:
   19740:	push	{fp, lr}
   19744:	add	fp, sp, #4
   19748:	sub	sp, sp, #136	; 0x88
   1974c:	bl	193e0 <rb_epoll_supports_event>
   19750:	ldr	r3, [pc, #216]	; 19830 <rb_epoll_init_event+0xf0>
   19754:	add	r3, pc, r3
   19758:	ldr	r3, [r3]
   1975c:	cmp	r3, #0
   19760:	bne	19828 <rb_epoll_init_event+0xe8>
   19764:	sub	r3, fp, #140	; 0x8c
   19768:	mov	r0, r3
   1976c:	bl	4400 <sigemptyset@plt>
   19770:	bl	44f0 <__libc_current_sigrtmin@plt>
   19774:	mov	r2, r0
   19778:	sub	r3, fp, #140	; 0x8c
   1977c:	mov	r1, r2
   19780:	mov	r0, r3
   19784:	bl	48ec <sigaddset@plt>
   19788:	sub	r3, fp, #140	; 0x8c
   1978c:	mov	r2, #0
   19790:	mov	r1, r3
   19794:	mov	r0, #0
   19798:	bl	4a30 <sigprocmask@plt>
   1979c:	sub	r3, fp, #140	; 0x8c
   197a0:	mov	r0, r3
   197a4:	bl	4400 <sigemptyset@plt>
   197a8:	bl	44f0 <__libc_current_sigrtmin@plt>
   197ac:	mov	r2, r0
   197b0:	sub	r3, fp, #140	; 0x8c
   197b4:	mov	r1, r2
   197b8:	mov	r0, r3
   197bc:	bl	48ec <sigaddset@plt>
   197c0:	sub	r3, fp, #140	; 0x8c
   197c4:	mov	r2, #0
   197c8:	mov	r1, r3
   197cc:	mvn	r0, #0
   197d0:	bl	44a8 <signalfd@plt>
   197d4:	str	r0, [fp, #-8]
   197d8:	ldr	r3, [fp, #-8]
   197dc:	cmn	r3, #1
   197e0:	bne	197f8 <rb_epoll_init_event+0xb8>
   197e4:	ldr	r3, [pc, #72]	; 19834 <rb_epoll_init_event+0xf4>
   197e8:	add	r3, pc, r3
   197ec:	mvn	r2, #0
   197f0:	str	r2, [r3]
   197f4:	b	19828 <rb_epoll_init_event+0xe8>
   197f8:	ldr	r3, [pc, #56]	; 19838 <rb_epoll_init_event+0xf8>
   197fc:	add	r3, pc, r3
   19800:	mov	r2, r3
   19804:	mov	r1, #64	; 0x40
   19808:	ldr	r0, [fp, #-8]
   1980c:	bl	4afc <rb_open@plt>
   19810:	str	r0, [fp, #-12]
   19814:	ldr	r0, [fp, #-12]
   19818:	bl	4688 <rb_set_nb@plt>
   1981c:	mov	r1, #0
   19820:	ldr	r0, [fp, #-12]
   19824:	bl	19594 <signalfd_handler>
   19828:	sub	sp, fp, #4
   1982c:	pop	{fp, pc}
   19830:	.word	0x00038104
   19834:	.word	0x0003806c
   19838:	.word	0x00009d3c

0001983c <rb_epoll_sched_event_signalfd>:
   1983c:	push	{fp, lr}
   19840:	add	fp, sp, #4
   19844:	sub	sp, sp, #96	; 0x60
   19848:	str	r0, [fp, #-96]	; 0xffffffa0
   1984c:	str	r1, [fp, #-100]	; 0xffffff9c
   19850:	sub	r3, fp, #72	; 0x48
   19854:	mov	r2, #64	; 0x40
   19858:	mov	r1, #0
   1985c:	mov	r0, r3
   19860:	bl	4694 <memset@plt>
   19864:	mov	r0, #4
   19868:	bl	18c60 <rb_malloc>
   1986c:	mov	r2, r0
   19870:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19874:	str	r2, [r3, #40]	; 0x28
   19878:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1987c:	ldr	r3, [r3, #40]	; 0x28
   19880:	str	r3, [fp, #-8]
   19884:	mov	r3, #0
   19888:	str	r3, [fp, #-64]	; 0xffffffc0
   1988c:	bl	44f0 <__libc_current_sigrtmin@plt>
   19890:	mov	r3, r0
   19894:	str	r3, [fp, #-68]	; 0xffffffbc
   19898:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1989c:	str	r3, [fp, #-72]	; 0xffffffb8
   198a0:	sub	r3, fp, #72	; 0x48
   198a4:	ldr	r2, [fp, #-8]
   198a8:	mov	r1, r3
   198ac:	mov	r0, #0
   198b0:	bl	4598 <timer_create@plt>
   198b4:	mov	r3, r0
   198b8:	cmp	r3, #0
   198bc:	bge	198f4 <rb_epoll_sched_event_signalfd+0xb8>
   198c0:	bl	4d78 <__errno_location@plt>
   198c4:	mov	r3, r0
   198c8:	ldr	r3, [r3]
   198cc:	mov	r0, r3
   198d0:	bl	440c <strerror@plt>
   198d4:	mov	r3, r0
   198d8:	mov	r1, r3
   198dc:	ldr	r3, [pc, #188]	; 199a0 <rb_epoll_sched_event_signalfd+0x164>
   198e0:	add	r3, pc, r3
   198e4:	mov	r0, r3
   198e8:	bl	4994 <rb_lib_log@plt>
   198ec:	mov	r3, #0
   198f0:	b	19994 <rb_epoll_sched_event_signalfd+0x158>
   198f4:	sub	r3, fp, #88	; 0x58
   198f8:	mov	r2, #16
   198fc:	mov	r1, #0
   19900:	mov	r0, r3
   19904:	bl	4694 <memset@plt>
   19908:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1990c:	str	r3, [fp, #-80]	; 0xffffffb0
   19910:	mov	r3, #0
   19914:	str	r3, [fp, #-76]	; 0xffffffb4
   19918:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1991c:	ldr	r3, [r3, #24]
   19920:	cmp	r3, #0
   19924:	beq	19938 <rb_epoll_sched_event_signalfd+0xfc>
   19928:	sub	r3, fp, #88	; 0x58
   1992c:	sub	r2, fp, #80	; 0x50
   19930:	ldm	r2, {r0, r1}
   19934:	stm	r3, {r0, r1}
   19938:	ldr	r3, [fp, #-8]
   1993c:	ldr	r0, [r3]
   19940:	sub	r2, fp, #88	; 0x58
   19944:	mov	r3, #0
   19948:	mov	r1, #0
   1994c:	bl	47cc <timer_settime@plt>
   19950:	mov	r3, r0
   19954:	cmp	r3, #0
   19958:	bge	19990 <rb_epoll_sched_event_signalfd+0x154>
   1995c:	bl	4d78 <__errno_location@plt>
   19960:	mov	r3, r0
   19964:	ldr	r3, [r3]
   19968:	mov	r0, r3
   1996c:	bl	440c <strerror@plt>
   19970:	mov	r3, r0
   19974:	mov	r1, r3
   19978:	ldr	r3, [pc, #36]	; 199a4 <rb_epoll_sched_event_signalfd+0x168>
   1997c:	add	r3, pc, r3
   19980:	mov	r0, r3
   19984:	bl	4994 <rb_lib_log@plt>
   19988:	mov	r3, #0
   1998c:	b	19994 <rb_epoll_sched_event_signalfd+0x158>
   19990:	mov	r3, #1
   19994:	mov	r0, r3
   19998:	sub	sp, fp, #4
   1999c:	pop	{fp, pc}
   199a0:	.word	0x00009c64
   199a4:	.word	0x00009bdc

000199a8 <rb_read_timerfd>:
   199a8:	push	{r4, fp, lr}
   199ac:	add	fp, sp, #8
   199b0:	sub	sp, sp, #28
   199b4:	str	r0, [fp, #-32]	; 0xffffffe0
   199b8:	str	r1, [fp, #-36]	; 0xffffffdc
   199bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   199c0:	str	r3, [fp, #-16]
   199c4:	ldr	r3, [fp, #-16]
   199c8:	cmp	r3, #0
   199cc:	bne	199dc <rb_read_timerfd+0x34>
   199d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   199d4:	bl	48d4 <rb_close@plt>
   199d8:	b	19a90 <rb_read_timerfd+0xe8>
   199dc:	sub	r3, fp, #28
   199e0:	mov	r2, #8
   199e4:	mov	r1, r3
   199e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   199ec:	bl	47fc <rb_read@plt>
   199f0:	str	r0, [fp, #-20]	; 0xffffffec
   199f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   199f8:	cmp	r3, #0
   199fc:	beq	19a2c <rb_read_timerfd+0x84>
   19a00:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a04:	cmp	r3, #0
   19a08:	bge	19a70 <rb_read_timerfd+0xc8>
   19a0c:	bl	4d78 <__errno_location@plt>
   19a10:	mov	r3, r0
   19a14:	ldr	r3, [r3]
   19a18:	mov	r0, r3
   19a1c:	bl	4448 <rb_ignore_errno@plt>
   19a20:	mov	r3, r0
   19a24:	cmp	r3, #0
   19a28:	bne	19a70 <rb_read_timerfd+0xc8>
   19a2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a30:	bl	48d4 <rb_close@plt>
   19a34:	ldr	r3, [fp, #-16]
   19a38:	ldr	r4, [r3, #20]
   19a3c:	bl	4d78 <__errno_location@plt>
   19a40:	mov	r3, r0
   19a44:	ldr	r3, [r3]
   19a48:	mov	r0, r3
   19a4c:	bl	440c <strerror@plt>
   19a50:	mov	r3, r0
   19a54:	mov	r2, r3
   19a58:	mov	r1, r4
   19a5c:	ldr	r3, [pc, #52]	; 19a98 <rb_read_timerfd+0xf0>
   19a60:	add	r3, pc, r3
   19a64:	mov	r0, r3
   19a68:	bl	4994 <rb_lib_log@plt>
   19a6c:	b	19a90 <rb_read_timerfd+0xe8>
   19a70:	ldr	r3, [fp, #-16]
   19a74:	ldr	r2, [pc, #32]	; 19a9c <rb_read_timerfd+0xf4>
   19a78:	add	r2, pc, r2
   19a7c:	mov	r1, #1
   19a80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a84:	bl	4514 <rb_setselect@plt>
   19a88:	ldr	r0, [fp, #-16]
   19a8c:	bl	4910 <rb_run_one_event@plt>
   19a90:	sub	sp, fp, #8
   19a94:	pop	{r4, fp, pc}
   19a98:	.word	0x00009b0c
   19a9c:	.word	0xffffff28

00019aa0 <rb_epoll_sched_event_timerfd>:
   19aa0:	push	{fp, lr}
   19aa4:	add	fp, sp, #4
   19aa8:	sub	sp, sp, #32
   19aac:	str	r0, [fp, #-32]	; 0xffffffe0
   19ab0:	str	r1, [fp, #-36]	; 0xffffffdc
   19ab4:	mov	r1, #0
   19ab8:	mov	r0, #0
   19abc:	bl	4c4c <timerfd_create@plt>
   19ac0:	str	r0, [fp, #-8]
   19ac4:	ldr	r3, [fp, #-8]
   19ac8:	cmp	r3, #0
   19acc:	bge	19b04 <rb_epoll_sched_event_timerfd+0x64>
   19ad0:	bl	4d78 <__errno_location@plt>
   19ad4:	mov	r3, r0
   19ad8:	ldr	r3, [r3]
   19adc:	mov	r0, r3
   19ae0:	bl	440c <strerror@plt>
   19ae4:	mov	r3, r0
   19ae8:	mov	r1, r3
   19aec:	ldr	r3, [pc, #296]	; 19c1c <rb_epoll_sched_event_timerfd+0x17c>
   19af0:	add	r3, pc, r3
   19af4:	mov	r0, r3
   19af8:	bl	4994 <rb_lib_log@plt>
   19afc:	mov	r3, #0
   19b00:	b	19c10 <rb_epoll_sched_event_timerfd+0x170>
   19b04:	sub	r3, fp, #28
   19b08:	mov	r2, #16
   19b0c:	mov	r1, #0
   19b10:	mov	r0, r3
   19b14:	bl	4694 <memset@plt>
   19b18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19b1c:	str	r3, [fp, #-20]	; 0xffffffec
   19b20:	mov	r3, #0
   19b24:	str	r3, [fp, #-16]
   19b28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19b2c:	ldr	r3, [r3, #24]
   19b30:	cmp	r3, #0
   19b34:	beq	19b48 <rb_epoll_sched_event_timerfd+0xa8>
   19b38:	sub	r3, fp, #28
   19b3c:	sub	r2, fp, #20
   19b40:	ldm	r2, {r0, r1}
   19b44:	stm	r3, {r0, r1}
   19b48:	sub	r2, fp, #28
   19b4c:	mov	r3, #0
   19b50:	mov	r1, #0
   19b54:	ldr	r0, [fp, #-8]
   19b58:	bl	4cd0 <timerfd_settime@plt>
   19b5c:	mov	r3, r0
   19b60:	cmp	r3, #0
   19b64:	bge	19ba4 <rb_epoll_sched_event_timerfd+0x104>
   19b68:	bl	4d78 <__errno_location@plt>
   19b6c:	mov	r3, r0
   19b70:	ldr	r3, [r3]
   19b74:	mov	r0, r3
   19b78:	bl	440c <strerror@plt>
   19b7c:	mov	r3, r0
   19b80:	mov	r1, r3
   19b84:	ldr	r3, [pc, #148]	; 19c20 <rb_epoll_sched_event_timerfd+0x180>
   19b88:	add	r3, pc, r3
   19b8c:	mov	r0, r3
   19b90:	bl	4994 <rb_lib_log@plt>
   19b94:	ldr	r0, [fp, #-8]
   19b98:	bl	49b8 <close@plt>
   19b9c:	mov	r3, #0
   19ba0:	b	19c10 <rb_epoll_sched_event_timerfd+0x170>
   19ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ba8:	ldr	r3, [r3, #20]
   19bac:	ldr	r2, [pc, #112]	; 19c24 <rb_epoll_sched_event_timerfd+0x184>
   19bb0:	add	r2, pc, r2
   19bb4:	mov	r1, #136	; 0x88
   19bb8:	ldr	r0, [pc, #104]	; 19c28 <rb_epoll_sched_event_timerfd+0x188>
   19bbc:	add	r0, pc, r0
   19bc0:	bl	4c34 <snprintf@plt>
   19bc4:	ldr	r3, [pc, #96]	; 19c2c <rb_epoll_sched_event_timerfd+0x18c>
   19bc8:	add	r3, pc, r3
   19bcc:	mov	r2, r3
   19bd0:	mov	r1, #64	; 0x40
   19bd4:	ldr	r0, [fp, #-8]
   19bd8:	bl	4afc <rb_open@plt>
   19bdc:	str	r0, [fp, #-12]
   19be0:	ldr	r0, [fp, #-12]
   19be4:	bl	4688 <rb_set_nb@plt>
   19be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19bec:	ldr	r2, [fp, #-12]
   19bf0:	str	r2, [r3, #40]	; 0x28
   19bf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19bf8:	ldr	r2, [pc, #48]	; 19c30 <rb_epoll_sched_event_timerfd+0x190>
   19bfc:	add	r2, pc, r2
   19c00:	mov	r1, #1
   19c04:	ldr	r0, [fp, #-12]
   19c08:	bl	4514 <rb_setselect@plt>
   19c0c:	mov	r3, #1
   19c10:	mov	r0, r3
   19c14:	sub	sp, fp, #4
   19c18:	pop	{fp, pc}
   19c1c:	.word	0x00009ab0
   19c20:	.word	0x00009a2c
   19c24:	.word	0x00009a1c
   19c28:	.word	0x00038524
   19c2c:	.word	0x00038518
   19c30:	.word	0xfffffda4

00019c34 <rb_epoll_sched_event>:
   19c34:	push	{fp, lr}
   19c38:	add	fp, sp, #4
   19c3c:	sub	sp, sp, #8
   19c40:	str	r0, [fp, #-8]
   19c44:	str	r1, [fp, #-12]
   19c48:	ldr	r3, [pc, #60]	; 19c8c <rb_epoll_sched_event+0x58>
   19c4c:	add	r3, pc, r3
   19c50:	ldr	r3, [r3]
   19c54:	cmp	r3, #0
   19c58:	beq	19c70 <rb_epoll_sched_event+0x3c>
   19c5c:	ldr	r1, [fp, #-12]
   19c60:	ldr	r0, [fp, #-8]
   19c64:	bl	19aa0 <rb_epoll_sched_event_timerfd>
   19c68:	mov	r3, r0
   19c6c:	b	19c80 <rb_epoll_sched_event+0x4c>
   19c70:	ldr	r1, [fp, #-12]
   19c74:	ldr	r0, [fp, #-8]
   19c78:	bl	1983c <rb_epoll_sched_event_signalfd>
   19c7c:	mov	r3, r0
   19c80:	mov	r0, r3
   19c84:	sub	sp, fp, #4
   19c88:	pop	{fp, pc}
   19c8c:	.word	0x00037c0c

00019c90 <rb_epoll_unsched_event>:
   19c90:	push	{fp, lr}
   19c94:	add	fp, sp, #4
   19c98:	sub	sp, sp, #8
   19c9c:	str	r0, [fp, #-8]
   19ca0:	ldr	r3, [pc, #100]	; 19d0c <rb_epoll_unsched_event+0x7c>
   19ca4:	add	r3, pc, r3
   19ca8:	ldr	r3, [r3]
   19cac:	cmp	r3, #0
   19cb0:	beq	19cd4 <rb_epoll_unsched_event+0x44>
   19cb4:	ldr	r3, [fp, #-8]
   19cb8:	ldr	r3, [r3, #40]	; 0x28
   19cbc:	mov	r0, r3
   19cc0:	bl	48d4 <rb_close@plt>
   19cc4:	ldr	r3, [fp, #-8]
   19cc8:	mov	r2, #0
   19ccc:	str	r2, [r3, #40]	; 0x28
   19cd0:	b	19d04 <rb_epoll_unsched_event+0x74>
   19cd4:	ldr	r3, [fp, #-8]
   19cd8:	ldr	r3, [r3, #40]	; 0x28
   19cdc:	ldr	r3, [r3]
   19ce0:	mov	r0, r3
   19ce4:	bl	4af0 <timer_delete@plt>
   19ce8:	ldr	r3, [fp, #-8]
   19cec:	ldr	r3, [r3, #40]	; 0x28
   19cf0:	mov	r0, r3
   19cf4:	bl	18cb4 <rb_free>
   19cf8:	ldr	r3, [fp, #-8]
   19cfc:	mov	r2, #0
   19d00:	str	r2, [r3, #40]	; 0x28
   19d04:	sub	sp, fp, #4
   19d08:	pop	{fp, pc}
   19d0c:	.word	0x00037bb4

00019d10 <rb_malloc>:
   19d10:	push	{fp, lr}
   19d14:	add	fp, sp, #4
   19d18:	sub	sp, sp, #16
   19d1c:	str	r0, [fp, #-16]
   19d20:	ldr	r1, [fp, #-16]
   19d24:	mov	r0, #1
   19d28:	bl	4658 <calloc@plt>
   19d2c:	mov	r3, r0
   19d30:	str	r3, [fp, #-8]
   19d34:	ldr	r3, [fp, #-8]
   19d38:	cmp	r3, #0
   19d3c:	moveq	r3, #1
   19d40:	movne	r3, #0
   19d44:	uxtb	r3, r3
   19d48:	cmp	r3, #0
   19d4c:	beq	19d54 <rb_malloc+0x44>
   19d50:	bl	4a00 <rb_outofmemory@plt>
   19d54:	ldr	r3, [fp, #-8]
   19d58:	mov	r0, r3
   19d5c:	sub	sp, fp, #4
   19d60:	pop	{fp, pc}

00019d64 <rb_realloc>:
   19d64:	push	{fp, lr}
   19d68:	add	fp, sp, #4
   19d6c:	sub	sp, sp, #16
   19d70:	str	r0, [fp, #-16]
   19d74:	str	r1, [fp, #-20]	; 0xffffffec
   19d78:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d7c:	ldr	r0, [fp, #-16]
   19d80:	bl	4cc4 <realloc@plt>
   19d84:	str	r0, [fp, #-8]
   19d88:	ldr	r3, [fp, #-8]
   19d8c:	cmp	r3, #0
   19d90:	moveq	r3, #1
   19d94:	movne	r3, #0
   19d98:	uxtb	r3, r3
   19d9c:	cmp	r3, #0
   19da0:	beq	19da8 <rb_realloc+0x44>
   19da4:	bl	4a00 <rb_outofmemory@plt>
   19da8:	ldr	r3, [fp, #-8]
   19dac:	mov	r0, r3
   19db0:	sub	sp, fp, #4
   19db4:	pop	{fp, pc}

00019db8 <rb_find_fd>:
   19db8:	push	{fp}		; (str fp, [sp, #-4]!)
   19dbc:	add	fp, sp, #0
   19dc0:	sub	sp, sp, #28
   19dc4:	str	r0, [fp, #-24]	; 0xffffffe8
   19dc8:	ldr	r2, [pc, #224]	; 19eb0 <rb_find_fd+0xf8>
   19dcc:	add	r2, pc, r2
   19dd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19dd4:	lsr	r3, r3, #31
   19dd8:	uxtb	r3, r3
   19ddc:	cmp	r3, #0
   19de0:	beq	19dec <rb_find_fd+0x34>
   19de4:	mov	r3, #0
   19de8:	b	19ea0 <rb_find_fd+0xe8>
   19dec:	ldr	r3, [pc, #192]	; 19eb4 <rb_find_fd+0xfc>
   19df0:	ldr	r3, [r2, r3]
   19df4:	ldr	r1, [r3]
   19df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19dfc:	asr	r2, r3, #12
   19e00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e04:	eor	r2, r2, r3
   19e08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e0c:	asr	r3, r3, #24
   19e10:	eor	r3, r3, r2
   19e14:	lsl	r2, r3, #20
   19e18:	lsr	r2, r2, #20
   19e1c:	mov	r3, r2
   19e20:	lsl	r3, r3, #1
   19e24:	add	r3, r3, r2
   19e28:	lsl	r3, r3, #2
   19e2c:	add	r3, r1, r3
   19e30:	str	r3, [fp, #-12]
   19e34:	ldr	r3, [fp, #-12]
   19e38:	ldr	r3, [r3]
   19e3c:	cmp	r3, #0
   19e40:	bne	19e4c <rb_find_fd+0x94>
   19e44:	mov	r3, #0
   19e48:	b	19ea0 <rb_find_fd+0xe8>
   19e4c:	ldr	r3, [fp, #-12]
   19e50:	ldr	r3, [r3]
   19e54:	str	r3, [fp, #-8]
   19e58:	b	19e90 <rb_find_fd+0xd8>
   19e5c:	ldr	r3, [fp, #-8]
   19e60:	ldr	r3, [r3]
   19e64:	str	r3, [fp, #-16]
   19e68:	ldr	r3, [fp, #-16]
   19e6c:	ldr	r2, [r3, #12]
   19e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e74:	cmp	r2, r3
   19e78:	bne	19e84 <rb_find_fd+0xcc>
   19e7c:	ldr	r3, [fp, #-16]
   19e80:	b	19ea0 <rb_find_fd+0xe8>
   19e84:	ldr	r3, [fp, #-8]
   19e88:	ldr	r3, [r3, #8]
   19e8c:	str	r3, [fp, #-8]
   19e90:	ldr	r3, [fp, #-8]
   19e94:	cmp	r3, #0
   19e98:	bne	19e5c <rb_find_fd+0xa4>
   19e9c:	mov	r3, #0
   19ea0:	mov	r0, r3
   19ea4:	add	sp, fp, #0
   19ea8:	pop	{fp}		; (ldr fp, [sp], #4)
   19eac:	bx	lr
   19eb0:	.word	0x0001a22c
   19eb4:	.word	0x000003cc

00019eb8 <rb_setup_fd_poll>:
   19eb8:	push	{fp}		; (str fp, [sp, #-4]!)
   19ebc:	add	fp, sp, #0
   19ec0:	sub	sp, sp, #12
   19ec4:	str	r0, [fp, #-8]
   19ec8:	mov	r3, #0
   19ecc:	mov	r0, r3
   19ed0:	add	sp, fp, #0
   19ed4:	pop	{fp}		; (ldr fp, [sp], #4)
   19ed8:	bx	lr

00019edc <rb_init_netio_poll>:
   19edc:	push	{fp, lr}
   19ee0:	add	fp, sp, #4
   19ee4:	sub	sp, sp, #8
   19ee8:	bl	44d8 <rb_getmaxconnect@plt>
   19eec:	mov	r3, r0
   19ef0:	lsl	r3, r3, #3
   19ef4:	mov	r0, r3
   19ef8:	bl	19d10 <rb_malloc>
   19efc:	mov	r2, r0
   19f00:	ldr	r3, [pc, #132]	; 19f8c <rb_init_netio_poll+0xb0>
   19f04:	add	r3, pc, r3
   19f08:	str	r2, [r3]
   19f0c:	bl	44d8 <rb_getmaxconnect@plt>
   19f10:	mov	r2, r0
   19f14:	ldr	r3, [pc, #116]	; 19f90 <rb_init_netio_poll+0xb4>
   19f18:	add	r3, pc, r3
   19f1c:	str	r2, [r3, #8]
   19f20:	mov	r3, #0
   19f24:	str	r3, [fp, #-8]
   19f28:	b	19f58 <rb_init_netio_poll+0x7c>
   19f2c:	ldr	r3, [pc, #96]	; 19f94 <rb_init_netio_poll+0xb8>
   19f30:	add	r3, pc, r3
   19f34:	ldr	r2, [r3]
   19f38:	ldr	r3, [fp, #-8]
   19f3c:	lsl	r3, r3, #3
   19f40:	add	r3, r2, r3
   19f44:	mvn	r2, #0
   19f48:	str	r2, [r3]
   19f4c:	ldr	r3, [fp, #-8]
   19f50:	add	r3, r3, #1
   19f54:	str	r3, [fp, #-8]
   19f58:	bl	44d8 <rb_getmaxconnect@plt>
   19f5c:	mov	r2, r0
   19f60:	ldr	r3, [fp, #-8]
   19f64:	cmp	r2, r3
   19f68:	bgt	19f2c <rb_init_netio_poll+0x50>
   19f6c:	ldr	r3, [pc, #36]	; 19f98 <rb_init_netio_poll+0xbc>
   19f70:	add	r3, pc, r3
   19f74:	mov	r2, #0
   19f78:	str	r2, [r3, #4]
   19f7c:	mov	r3, #0
   19f80:	mov	r0, r3
   19f84:	sub	sp, fp, #4
   19f88:	pop	{fp, pc}
   19f8c:	.word	0x00038264
   19f90:	.word	0x00038250
   19f94:	.word	0x00038238
   19f98:	.word	0x000381f8

00019f9c <resize_pollarray>:
   19f9c:	push	{fp, lr}
   19fa0:	add	fp, sp, #4
   19fa4:	sub	sp, sp, #16
   19fa8:	str	r0, [fp, #-16]
   19fac:	ldr	r3, [pc, #272]	; 1a0c4 <resize_pollarray+0x128>
   19fb0:	add	r3, pc, r3
   19fb4:	ldr	r2, [r3, #8]
   19fb8:	ldr	r3, [fp, #-16]
   19fbc:	cmp	r2, r3
   19fc0:	movle	r3, #1
   19fc4:	movgt	r3, #0
   19fc8:	uxtb	r3, r3
   19fcc:	cmp	r3, #0
   19fd0:	beq	1a0b8 <resize_pollarray+0x11c>
   19fd4:	ldr	r3, [pc, #236]	; 1a0c8 <resize_pollarray+0x12c>
   19fd8:	add	r3, pc, r3
   19fdc:	ldr	r3, [r3, #8]
   19fe0:	str	r3, [fp, #-12]
   19fe4:	ldr	r3, [pc, #224]	; 1a0cc <resize_pollarray+0x130>
   19fe8:	add	r3, pc, r3
   19fec:	ldr	r3, [r3, #8]
   19ff0:	add	r2, r3, #1024	; 0x400
   19ff4:	ldr	r3, [pc, #212]	; 1a0d0 <resize_pollarray+0x134>
   19ff8:	add	r3, pc, r3
   19ffc:	str	r2, [r3, #8]
   1a000:	ldr	r3, [pc, #204]	; 1a0d4 <resize_pollarray+0x138>
   1a004:	add	r3, pc, r3
   1a008:	ldr	r2, [r3]
   1a00c:	ldr	r3, [pc, #196]	; 1a0d8 <resize_pollarray+0x13c>
   1a010:	add	r3, pc, r3
   1a014:	ldr	r3, [r3, #8]
   1a018:	lsl	r3, r3, #3
   1a01c:	mov	r1, r3
   1a020:	mov	r0, r2
   1a024:	bl	19d64 <rb_realloc>
   1a028:	mov	r2, r0
   1a02c:	ldr	r3, [pc, #168]	; 1a0dc <resize_pollarray+0x140>
   1a030:	add	r3, pc, r3
   1a034:	str	r2, [r3]
   1a038:	ldr	r3, [pc, #160]	; 1a0e0 <resize_pollarray+0x144>
   1a03c:	add	r3, pc, r3
   1a040:	ldr	r2, [r3]
   1a044:	ldr	r3, [fp, #-12]
   1a048:	add	r3, r3, #1
   1a04c:	lsl	r3, r3, #3
   1a050:	add	r3, r2, r3
   1a054:	mov	r2, #8192	; 0x2000
   1a058:	mov	r1, #0
   1a05c:	mov	r0, r3
   1a060:	bl	4694 <memset@plt>
   1a064:	ldr	r3, [fp, #-12]
   1a068:	add	r3, r3, #1
   1a06c:	str	r3, [fp, #-8]
   1a070:	b	1a0a0 <resize_pollarray+0x104>
   1a074:	ldr	r3, [pc, #104]	; 1a0e4 <resize_pollarray+0x148>
   1a078:	add	r3, pc, r3
   1a07c:	ldr	r2, [r3]
   1a080:	ldr	r3, [fp, #-8]
   1a084:	lsl	r3, r3, #3
   1a088:	add	r3, r2, r3
   1a08c:	mvn	r2, #0
   1a090:	str	r2, [r3]
   1a094:	ldr	r3, [fp, #-8]
   1a098:	add	r3, r3, #1
   1a09c:	str	r3, [fp, #-8]
   1a0a0:	ldr	r3, [pc, #64]	; 1a0e8 <resize_pollarray+0x14c>
   1a0a4:	add	r3, pc, r3
   1a0a8:	ldr	r2, [r3, #8]
   1a0ac:	ldr	r3, [fp, #-8]
   1a0b0:	cmp	r2, r3
   1a0b4:	bgt	1a074 <resize_pollarray+0xd8>
   1a0b8:	nop			; (mov r0, r0)
   1a0bc:	sub	sp, fp, #4
   1a0c0:	pop	{fp, pc}
   1a0c4:	.word	0x000381b8
   1a0c8:	.word	0x00038190
   1a0cc:	.word	0x00038180
   1a0d0:	.word	0x00038170
   1a0d4:	.word	0x00038164
   1a0d8:	.word	0x00038158
   1a0dc:	.word	0x00038138
   1a0e0:	.word	0x0003812c
   1a0e4:	.word	0x000380f0
   1a0e8:	.word	0x000380c4

0001a0ec <rb_setselect_poll>:
   1a0ec:	push	{fp, lr}
   1a0f0:	add	fp, sp, #4
   1a0f4:	sub	sp, sp, #16
   1a0f8:	str	r0, [fp, #-8]
   1a0fc:	str	r1, [fp, #-12]
   1a100:	str	r2, [fp, #-16]
   1a104:	str	r3, [fp, #-20]	; 0xffffffec
   1a108:	ldr	r3, [fp, #-8]
   1a10c:	cmp	r3, #0
   1a110:	beq	1a344 <rb_setselect_poll+0x258>
   1a114:	ldr	r3, [fp, #-12]
   1a118:	and	r3, r3, #1
   1a11c:	cmp	r3, #0
   1a120:	beq	1a174 <rb_setselect_poll+0x88>
   1a124:	ldr	r3, [fp, #-8]
   1a128:	ldr	r2, [fp, #-16]
   1a12c:	str	r2, [r3, #28]
   1a130:	ldr	r3, [fp, #-8]
   1a134:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a138:	str	r2, [r3, #32]
   1a13c:	ldr	r3, [fp, #-16]
   1a140:	cmp	r3, #0
   1a144:	beq	1a160 <rb_setselect_poll+0x74>
   1a148:	ldr	r3, [fp, #-8]
   1a14c:	ldr	r3, [r3, #20]
   1a150:	orr	r2, r3, #64	; 0x40
   1a154:	ldr	r3, [fp, #-8]
   1a158:	str	r2, [r3, #20]
   1a15c:	b	1a174 <rb_setselect_poll+0x88>
   1a160:	ldr	r3, [fp, #-8]
   1a164:	ldr	r3, [r3, #20]
   1a168:	bic	r2, r3, #64	; 0x40
   1a16c:	ldr	r3, [fp, #-8]
   1a170:	str	r2, [r3, #20]
   1a174:	ldr	r3, [fp, #-12]
   1a178:	and	r3, r3, #2
   1a17c:	cmp	r3, #0
   1a180:	beq	1a1d4 <rb_setselect_poll+0xe8>
   1a184:	ldr	r3, [fp, #-8]
   1a188:	ldr	r2, [fp, #-16]
   1a18c:	str	r2, [r3, #36]	; 0x24
   1a190:	ldr	r3, [fp, #-8]
   1a194:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a198:	str	r2, [r3, #40]	; 0x28
   1a19c:	ldr	r3, [fp, #-16]
   1a1a0:	cmp	r3, #0
   1a1a4:	beq	1a1c0 <rb_setselect_poll+0xd4>
   1a1a8:	ldr	r3, [fp, #-8]
   1a1ac:	ldr	r3, [r3, #20]
   1a1b0:	orr	r2, r3, #256	; 0x100
   1a1b4:	ldr	r3, [fp, #-8]
   1a1b8:	str	r2, [r3, #20]
   1a1bc:	b	1a1d4 <rb_setselect_poll+0xe8>
   1a1c0:	ldr	r3, [fp, #-8]
   1a1c4:	ldr	r3, [r3, #20]
   1a1c8:	bic	r2, r3, #256	; 0x100
   1a1cc:	ldr	r3, [fp, #-8]
   1a1d0:	str	r2, [r3, #20]
   1a1d4:	ldr	r3, [fp, #-8]
   1a1d8:	ldr	r3, [r3, #12]
   1a1dc:	mov	r0, r3
   1a1e0:	bl	19f9c <resize_pollarray>
   1a1e4:	ldr	r3, [fp, #-8]
   1a1e8:	ldr	r3, [r3, #20]
   1a1ec:	cmp	r3, #0
   1a1f0:	bgt	1a2bc <rb_setselect_poll+0x1d0>
   1a1f4:	ldr	r3, [pc, #340]	; 1a350 <rb_setselect_poll+0x264>
   1a1f8:	add	r3, pc, r3
   1a1fc:	ldr	r2, [r3]
   1a200:	ldr	r3, [fp, #-8]
   1a204:	ldr	r3, [r3, #12]
   1a208:	lsl	r3, r3, #3
   1a20c:	add	r3, r2, r3
   1a210:	mov	r2, #0
   1a214:	strh	r2, [r3, #4]
   1a218:	ldr	r3, [pc, #308]	; 1a354 <rb_setselect_poll+0x268>
   1a21c:	add	r3, pc, r3
   1a220:	ldr	r2, [r3]
   1a224:	ldr	r3, [fp, #-8]
   1a228:	ldr	r3, [r3, #12]
   1a22c:	lsl	r3, r3, #3
   1a230:	add	r3, r2, r3
   1a234:	mvn	r2, #0
   1a238:	str	r2, [r3]
   1a23c:	ldr	r3, [fp, #-8]
   1a240:	ldr	r2, [r3, #12]
   1a244:	ldr	r3, [pc, #268]	; 1a358 <rb_setselect_poll+0x26c>
   1a248:	add	r3, pc, r3
   1a24c:	ldr	r3, [r3, #4]
   1a250:	cmp	r2, r3
   1a254:	bne	1a348 <rb_setselect_poll+0x25c>
   1a258:	b	1a278 <rb_setselect_poll+0x18c>
   1a25c:	ldr	r3, [pc, #248]	; 1a35c <rb_setselect_poll+0x270>
   1a260:	add	r3, pc, r3
   1a264:	ldr	r3, [r3, #4]
   1a268:	sub	r2, r3, #1
   1a26c:	ldr	r3, [pc, #236]	; 1a360 <rb_setselect_poll+0x274>
   1a270:	add	r3, pc, r3
   1a274:	str	r2, [r3, #4]
   1a278:	ldr	r3, [pc, #228]	; 1a364 <rb_setselect_poll+0x278>
   1a27c:	add	r3, pc, r3
   1a280:	ldr	r3, [r3, #4]
   1a284:	cmp	r3, #0
   1a288:	blt	1a348 <rb_setselect_poll+0x25c>
   1a28c:	ldr	r3, [pc, #212]	; 1a368 <rb_setselect_poll+0x27c>
   1a290:	add	r3, pc, r3
   1a294:	ldr	r2, [r3]
   1a298:	ldr	r3, [pc, #204]	; 1a36c <rb_setselect_poll+0x280>
   1a29c:	add	r3, pc, r3
   1a2a0:	ldr	r3, [r3, #4]
   1a2a4:	lsl	r3, r3, #3
   1a2a8:	add	r3, r2, r3
   1a2ac:	ldr	r3, [r3]
   1a2b0:	cmn	r3, #1
   1a2b4:	beq	1a25c <rb_setselect_poll+0x170>
   1a2b8:	b	1a348 <rb_setselect_poll+0x25c>
   1a2bc:	ldr	r3, [pc, #172]	; 1a370 <rb_setselect_poll+0x284>
   1a2c0:	add	r3, pc, r3
   1a2c4:	ldr	r2, [r3]
   1a2c8:	ldr	r3, [fp, #-8]
   1a2cc:	ldr	r3, [r3, #12]
   1a2d0:	lsl	r3, r3, #3
   1a2d4:	add	r3, r2, r3
   1a2d8:	ldr	r2, [fp, #-8]
   1a2dc:	ldr	r2, [r2, #20]
   1a2e0:	sxth	r2, r2
   1a2e4:	strh	r2, [r3, #4]
   1a2e8:	ldr	r3, [pc, #132]	; 1a374 <rb_setselect_poll+0x288>
   1a2ec:	add	r3, pc, r3
   1a2f0:	ldr	r2, [r3]
   1a2f4:	ldr	r3, [fp, #-8]
   1a2f8:	ldr	r3, [r3, #12]
   1a2fc:	lsl	r3, r3, #3
   1a300:	add	r3, r2, r3
   1a304:	ldr	r2, [fp, #-8]
   1a308:	ldr	r2, [r2, #12]
   1a30c:	str	r2, [r3]
   1a310:	ldr	r3, [fp, #-8]
   1a314:	ldr	r2, [r3, #12]
   1a318:	ldr	r3, [pc, #88]	; 1a378 <rb_setselect_poll+0x28c>
   1a31c:	add	r3, pc, r3
   1a320:	ldr	r3, [r3, #4]
   1a324:	cmp	r2, r3
   1a328:	ble	1a348 <rb_setselect_poll+0x25c>
   1a32c:	ldr	r3, [fp, #-8]
   1a330:	ldr	r2, [r3, #12]
   1a334:	ldr	r3, [pc, #64]	; 1a37c <rb_setselect_poll+0x290>
   1a338:	add	r3, pc, r3
   1a33c:	str	r2, [r3, #4]
   1a340:	b	1a348 <rb_setselect_poll+0x25c>
   1a344:	nop			; (mov r0, r0)
   1a348:	sub	sp, fp, #4
   1a34c:	pop	{fp, pc}
   1a350:	.word	0x00037f70
   1a354:	.word	0x00037f4c
   1a358:	.word	0x00037f20
   1a35c:	.word	0x00037f08
   1a360:	.word	0x00037ef8
   1a364:	.word	0x00037eec
   1a368:	.word	0x00037ed8
   1a36c:	.word	0x00037ecc
   1a370:	.word	0x00037ea8
   1a374:	.word	0x00037e7c
   1a378:	.word	0x00037e4c
   1a37c:	.word	0x00037e30

0001a380 <rb_select_poll>:
   1a380:	push	{fp, lr}
   1a384:	add	fp, sp, #4
   1a388:	sub	sp, sp, #40	; 0x28
   1a38c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a390:	ldr	r3, [pc, #580]	; 1a5dc <rb_select_poll+0x25c>
   1a394:	add	r3, pc, r3
   1a398:	ldr	r0, [r3]
   1a39c:	ldr	r3, [pc, #572]	; 1a5e0 <rb_select_poll+0x260>
   1a3a0:	add	r3, pc, r3
   1a3a4:	ldr	r3, [r3, #4]
   1a3a8:	add	r3, r3, #1
   1a3ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a3b0:	mov	r1, r3
   1a3b4:	bl	4a78 <poll@plt>
   1a3b8:	str	r0, [fp, #-12]
   1a3bc:	bl	4a0c <rb_set_time@plt>
   1a3c0:	ldr	r3, [fp, #-12]
   1a3c4:	cmp	r3, #0
   1a3c8:	bge	1a3fc <rb_select_poll+0x7c>
   1a3cc:	bl	4d78 <__errno_location@plt>
   1a3d0:	mov	r3, r0
   1a3d4:	ldr	r3, [r3]
   1a3d8:	mov	r0, r3
   1a3dc:	bl	4448 <rb_ignore_errno@plt>
   1a3e0:	mov	r3, r0
   1a3e4:	cmp	r3, #0
   1a3e8:	bne	1a3f4 <rb_select_poll+0x74>
   1a3ec:	mov	r3, #0
   1a3f0:	b	1a5d0 <rb_select_poll+0x250>
   1a3f4:	mov	r3, #5
   1a3f8:	b	1a5d0 <rb_select_poll+0x250>
   1a3fc:	ldr	r3, [fp, #-12]
   1a400:	cmp	r3, #0
   1a404:	bne	1a410 <rb_select_poll+0x90>
   1a408:	mov	r3, #0
   1a40c:	b	1a5d0 <rb_select_poll+0x250>
   1a410:	mov	r3, #0
   1a414:	str	r3, [fp, #-8]
   1a418:	b	1a5b0 <rb_select_poll+0x230>
   1a41c:	ldr	r3, [pc, #448]	; 1a5e4 <rb_select_poll+0x264>
   1a420:	add	r3, pc, r3
   1a424:	ldr	r2, [r3]
   1a428:	ldr	r3, [fp, #-8]
   1a42c:	lsl	r3, r3, #3
   1a430:	add	r3, r2, r3
   1a434:	str	r3, [fp, #-16]
   1a438:	ldr	r3, [fp, #-16]
   1a43c:	ldrsh	r3, [r3, #6]
   1a440:	str	r3, [fp, #-20]	; 0xffffffec
   1a444:	ldr	r3, [fp, #-16]
   1a448:	ldr	r3, [r3]
   1a44c:	str	r3, [fp, #-24]	; 0xffffffe8
   1a450:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a454:	cmp	r3, #0
   1a458:	beq	1a598 <rb_select_poll+0x218>
   1a45c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a460:	cmn	r3, #1
   1a464:	beq	1a598 <rb_select_poll+0x218>
   1a468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a46c:	bl	19db8 <rb_find_fd>
   1a470:	str	r0, [fp, #-28]	; 0xffffffe4
   1a474:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a478:	cmp	r3, #0
   1a47c:	beq	1a5a0 <rb_select_poll+0x220>
   1a480:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a484:	and	r3, r3, #89	; 0x59
   1a488:	cmp	r3, #0
   1a48c:	beq	1a4dc <rb_select_poll+0x15c>
   1a490:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a494:	ldr	r3, [r3, #28]
   1a498:	str	r3, [fp, #-32]	; 0xffffffe0
   1a49c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4a0:	ldr	r3, [r3, #32]
   1a4a4:	str	r3, [fp, #-36]	; 0xffffffdc
   1a4a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4ac:	mov	r2, #0
   1a4b0:	str	r2, [r3, #28]
   1a4b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4b8:	mov	r2, #0
   1a4bc:	str	r2, [r3, #32]
   1a4c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a4c4:	cmp	r3, #0
   1a4c8:	beq	1a4dc <rb_select_poll+0x15c>
   1a4cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a4d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a4d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a4d8:	blx	r3
   1a4dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4e0:	ldrb	r3, [r3, #16]
   1a4e4:	and	r3, r3, #1
   1a4e8:	cmp	r3, #0
   1a4ec:	beq	1a54c <rb_select_poll+0x1cc>
   1a4f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a4f4:	and	r3, r3, #284	; 0x11c
   1a4f8:	cmp	r3, #0
   1a4fc:	beq	1a54c <rb_select_poll+0x1cc>
   1a500:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a504:	ldr	r3, [r3, #36]	; 0x24
   1a508:	str	r3, [fp, #-32]	; 0xffffffe0
   1a50c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a510:	ldr	r3, [r3, #40]	; 0x28
   1a514:	str	r3, [fp, #-36]	; 0xffffffdc
   1a518:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a51c:	mov	r2, #0
   1a520:	str	r2, [r3, #36]	; 0x24
   1a524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a528:	mov	r2, #0
   1a52c:	str	r2, [r3, #40]	; 0x28
   1a530:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a534:	cmp	r3, #0
   1a538:	beq	1a54c <rb_select_poll+0x1cc>
   1a53c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a540:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a544:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a548:	blx	r3
   1a54c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a550:	ldr	r3, [r3, #28]
   1a554:	cmp	r3, #0
   1a558:	bne	1a570 <rb_select_poll+0x1f0>
   1a55c:	mov	r3, #0
   1a560:	mov	r2, #0
   1a564:	mov	r1, #1
   1a568:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a56c:	bl	1a0ec <rb_setselect_poll>
   1a570:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a574:	ldr	r3, [r3, #36]	; 0x24
   1a578:	cmp	r3, #0
   1a57c:	bne	1a5a4 <rb_select_poll+0x224>
   1a580:	mov	r3, #0
   1a584:	mov	r2, #0
   1a588:	mov	r1, #2
   1a58c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a590:	bl	1a0ec <rb_setselect_poll>
   1a594:	b	1a5a4 <rb_select_poll+0x224>
   1a598:	nop			; (mov r0, r0)
   1a59c:	b	1a5a4 <rb_select_poll+0x224>
   1a5a0:	nop			; (mov r0, r0)
   1a5a4:	ldr	r3, [fp, #-8]
   1a5a8:	add	r3, r3, #1
   1a5ac:	str	r3, [fp, #-8]
   1a5b0:	ldr	r3, [pc, #48]	; 1a5e8 <rb_select_poll+0x268>
   1a5b4:	add	r3, pc, r3
   1a5b8:	ldr	r3, [r3, #4]
   1a5bc:	add	r2, r3, #1
   1a5c0:	ldr	r3, [fp, #-8]
   1a5c4:	cmp	r2, r3
   1a5c8:	bgt	1a41c <rb_select_poll+0x9c>
   1a5cc:	mov	r3, #0
   1a5d0:	mov	r0, r3
   1a5d4:	sub	sp, fp, #4
   1a5d8:	pop	{fp, pc}
   1a5dc:	.word	0x00037dd4
   1a5e0:	.word	0x00037dc8
   1a5e4:	.word	0x00037d48
   1a5e8:	.word	0x00037bb4

0001a5ec <rb_ports_supports_event>:
   1a5ec:	push	{fp, lr}
   1a5f0:	add	fp, sp, #4
   1a5f4:	bl	4d78 <__errno_location@plt>
   1a5f8:	mov	r2, r0
   1a5fc:	mov	r3, #38	; 0x26
   1a600:	str	r3, [r2]
   1a604:	mov	r3, #0
   1a608:	mov	r0, r3
   1a60c:	pop	{fp, pc}

0001a610 <rb_ports_init_event>:
   1a610:	push	{fp}		; (str fp, [sp, #-4]!)
   1a614:	add	fp, sp, #0
   1a618:	nop			; (mov r0, r0)
   1a61c:	add	sp, fp, #0
   1a620:	pop	{fp}		; (ldr fp, [sp], #4)
   1a624:	bx	lr

0001a628 <rb_ports_sched_event>:
   1a628:	push	{fp, lr}
   1a62c:	add	fp, sp, #4
   1a630:	sub	sp, sp, #8
   1a634:	str	r0, [fp, #-8]
   1a638:	str	r1, [fp, #-12]
   1a63c:	bl	4d78 <__errno_location@plt>
   1a640:	mov	r2, r0
   1a644:	mov	r3, #38	; 0x26
   1a648:	str	r3, [r2]
   1a64c:	mvn	r3, #0
   1a650:	mov	r0, r3
   1a654:	sub	sp, fp, #4
   1a658:	pop	{fp, pc}

0001a65c <rb_ports_unsched_event>:
   1a65c:	push	{fp}		; (str fp, [sp, #-4]!)
   1a660:	add	fp, sp, #0
   1a664:	sub	sp, sp, #12
   1a668:	str	r0, [fp, #-8]
   1a66c:	nop			; (mov r0, r0)
   1a670:	add	sp, fp, #0
   1a674:	pop	{fp}		; (ldr fp, [sp], #4)
   1a678:	bx	lr

0001a67c <rb_init_netio_ports>:
   1a67c:	push	{fp}		; (str fp, [sp, #-4]!)
   1a680:	add	fp, sp, #0
   1a684:	mov	r3, #38	; 0x26
   1a688:	mov	r0, r3
   1a68c:	add	sp, fp, #0
   1a690:	pop	{fp}		; (ldr fp, [sp], #4)
   1a694:	bx	lr

0001a698 <rb_setselect_ports>:
   1a698:	push	{fp, lr}
   1a69c:	add	fp, sp, #4
   1a6a0:	sub	sp, sp, #16
   1a6a4:	str	r0, [fp, #-8]
   1a6a8:	str	r1, [fp, #-12]
   1a6ac:	str	r2, [fp, #-16]
   1a6b0:	str	r3, [fp, #-20]	; 0xffffffec
   1a6b4:	bl	4d78 <__errno_location@plt>
   1a6b8:	mov	r2, r0
   1a6bc:	mov	r3, #38	; 0x26
   1a6c0:	str	r3, [r2]
   1a6c4:	nop			; (mov r0, r0)
   1a6c8:	sub	sp, fp, #4
   1a6cc:	pop	{fp, pc}

0001a6d0 <rb_select_ports>:
   1a6d0:	push	{fp, lr}
   1a6d4:	add	fp, sp, #4
   1a6d8:	sub	sp, sp, #8
   1a6dc:	str	r0, [fp, #-8]
   1a6e0:	bl	4d78 <__errno_location@plt>
   1a6e4:	mov	r2, r0
   1a6e8:	mov	r3, #38	; 0x26
   1a6ec:	str	r3, [r2]
   1a6f0:	mvn	r3, #0
   1a6f4:	mov	r0, r3
   1a6f8:	sub	sp, fp, #4
   1a6fc:	pop	{fp, pc}

0001a700 <rb_setup_fd_ports>:
   1a700:	push	{fp, lr}
   1a704:	add	fp, sp, #4
   1a708:	sub	sp, sp, #8
   1a70c:	str	r0, [fp, #-8]
   1a710:	bl	4d78 <__errno_location@plt>
   1a714:	mov	r2, r0
   1a718:	mov	r3, #38	; 0x26
   1a71c:	str	r3, [r2]
   1a720:	mvn	r3, #0
   1a724:	mov	r0, r3
   1a728:	sub	sp, fp, #4
   1a72c:	pop	{fp, pc}

0001a730 <rb_malloc>:
   1a730:	push	{fp, lr}
   1a734:	add	fp, sp, #4
   1a738:	sub	sp, sp, #16
   1a73c:	str	r0, [fp, #-16]
   1a740:	ldr	r1, [fp, #-16]
   1a744:	mov	r0, #1
   1a748:	bl	4658 <calloc@plt>
   1a74c:	mov	r3, r0
   1a750:	str	r3, [fp, #-8]
   1a754:	ldr	r3, [fp, #-8]
   1a758:	cmp	r3, #0
   1a75c:	moveq	r3, #1
   1a760:	movne	r3, #0
   1a764:	uxtb	r3, r3
   1a768:	cmp	r3, #0
   1a76c:	beq	1a774 <rb_malloc+0x44>
   1a770:	bl	4a00 <rb_outofmemory@plt>
   1a774:	ldr	r3, [fp, #-8]
   1a778:	mov	r0, r3
   1a77c:	sub	sp, fp, #4
   1a780:	pop	{fp, pc}

0001a784 <rb_realloc>:
   1a784:	push	{fp, lr}
   1a788:	add	fp, sp, #4
   1a78c:	sub	sp, sp, #16
   1a790:	str	r0, [fp, #-16]
   1a794:	str	r1, [fp, #-20]	; 0xffffffec
   1a798:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a79c:	ldr	r0, [fp, #-16]
   1a7a0:	bl	4cc4 <realloc@plt>
   1a7a4:	str	r0, [fp, #-8]
   1a7a8:	ldr	r3, [fp, #-8]
   1a7ac:	cmp	r3, #0
   1a7b0:	moveq	r3, #1
   1a7b4:	movne	r3, #0
   1a7b8:	uxtb	r3, r3
   1a7bc:	cmp	r3, #0
   1a7c0:	beq	1a7c8 <rb_realloc+0x44>
   1a7c4:	bl	4a00 <rb_outofmemory@plt>
   1a7c8:	ldr	r3, [fp, #-8]
   1a7cc:	mov	r0, r3
   1a7d0:	sub	sp, fp, #4
   1a7d4:	pop	{fp, pc}

0001a7d8 <rb_free>:
   1a7d8:	push	{fp, lr}
   1a7dc:	add	fp, sp, #4
   1a7e0:	sub	sp, sp, #8
   1a7e4:	str	r0, [fp, #-8]
   1a7e8:	ldr	r3, [fp, #-8]
   1a7ec:	cmp	r3, #0
   1a7f0:	movne	r3, #1
   1a7f4:	moveq	r3, #0
   1a7f8:	uxtb	r3, r3
   1a7fc:	cmp	r3, #0
   1a800:	beq	1a80c <rb_free+0x34>
   1a804:	ldr	r0, [fp, #-8]
   1a808:	bl	476c <free@plt>
   1a80c:	nop			; (mov r0, r0)
   1a810:	sub	sp, fp, #4
   1a814:	pop	{fp, pc}

0001a818 <rb_find_fd>:
   1a818:	push	{fp}		; (str fp, [sp, #-4]!)
   1a81c:	add	fp, sp, #0
   1a820:	sub	sp, sp, #28
   1a824:	str	r0, [fp, #-24]	; 0xffffffe8
   1a828:	ldr	r2, [pc, #224]	; 1a910 <rb_find_fd+0xf8>
   1a82c:	add	r2, pc, r2
   1a830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a834:	lsr	r3, r3, #31
   1a838:	uxtb	r3, r3
   1a83c:	cmp	r3, #0
   1a840:	beq	1a84c <rb_find_fd+0x34>
   1a844:	mov	r3, #0
   1a848:	b	1a900 <rb_find_fd+0xe8>
   1a84c:	ldr	r3, [pc, #192]	; 1a914 <rb_find_fd+0xfc>
   1a850:	ldr	r3, [r2, r3]
   1a854:	ldr	r1, [r3]
   1a858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a85c:	asr	r2, r3, #12
   1a860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a864:	eor	r2, r2, r3
   1a868:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a86c:	asr	r3, r3, #24
   1a870:	eor	r3, r3, r2
   1a874:	lsl	r2, r3, #20
   1a878:	lsr	r2, r2, #20
   1a87c:	mov	r3, r2
   1a880:	lsl	r3, r3, #1
   1a884:	add	r3, r3, r2
   1a888:	lsl	r3, r3, #2
   1a88c:	add	r3, r1, r3
   1a890:	str	r3, [fp, #-12]
   1a894:	ldr	r3, [fp, #-12]
   1a898:	ldr	r3, [r3]
   1a89c:	cmp	r3, #0
   1a8a0:	bne	1a8ac <rb_find_fd+0x94>
   1a8a4:	mov	r3, #0
   1a8a8:	b	1a900 <rb_find_fd+0xe8>
   1a8ac:	ldr	r3, [fp, #-12]
   1a8b0:	ldr	r3, [r3]
   1a8b4:	str	r3, [fp, #-8]
   1a8b8:	b	1a8f0 <rb_find_fd+0xd8>
   1a8bc:	ldr	r3, [fp, #-8]
   1a8c0:	ldr	r3, [r3]
   1a8c4:	str	r3, [fp, #-16]
   1a8c8:	ldr	r3, [fp, #-16]
   1a8cc:	ldr	r2, [r3, #12]
   1a8d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a8d4:	cmp	r2, r3
   1a8d8:	bne	1a8e4 <rb_find_fd+0xcc>
   1a8dc:	ldr	r3, [fp, #-16]
   1a8e0:	b	1a900 <rb_find_fd+0xe8>
   1a8e4:	ldr	r3, [fp, #-8]
   1a8e8:	ldr	r3, [r3, #8]
   1a8ec:	str	r3, [fp, #-8]
   1a8f0:	ldr	r3, [fp, #-8]
   1a8f4:	cmp	r3, #0
   1a8f8:	bne	1a8bc <rb_find_fd+0xa4>
   1a8fc:	mov	r3, #0
   1a900:	mov	r0, r3
   1a904:	add	sp, fp, #0
   1a908:	pop	{fp}		; (ldr fp, [sp], #4)
   1a90c:	bx	lr
   1a910:	.word	0x000197cc
   1a914:	.word	0x000003cc

0001a918 <rb_init_netio_sigio>:
   1a918:	push	{r4, fp, lr}
   1a91c:	add	fp, sp, #8
   1a920:	sub	sp, sp, #12
   1a924:	ldr	r4, [pc, #300]	; 1aa58 <rb_init_netio_sigio+0x140>
   1a928:	add	r4, pc, r4
   1a92c:	bl	44d8 <rb_getmaxconnect@plt>
   1a930:	mov	r3, r0
   1a934:	lsl	r3, r3, #3
   1a938:	mov	r0, r3
   1a93c:	bl	1a730 <rb_malloc>
   1a940:	mov	r2, r0
   1a944:	ldr	r3, [pc, #272]	; 1aa5c <rb_init_netio_sigio+0x144>
   1a948:	ldr	r3, [r4, r3]
   1a94c:	str	r2, [r3]
   1a950:	bl	44d8 <rb_getmaxconnect@plt>
   1a954:	mov	r2, r0
   1a958:	ldr	r3, [pc, #252]	; 1aa5c <rb_init_netio_sigio+0x144>
   1a95c:	ldr	r3, [r4, r3]
   1a960:	str	r2, [r3, #8]
   1a964:	mov	r3, #0
   1a968:	str	r3, [fp, #-16]
   1a96c:	b	1a99c <rb_init_netio_sigio+0x84>
   1a970:	ldr	r3, [pc, #228]	; 1aa5c <rb_init_netio_sigio+0x144>
   1a974:	ldr	r3, [r4, r3]
   1a978:	ldr	r2, [r3]
   1a97c:	ldr	r3, [fp, #-16]
   1a980:	lsl	r3, r3, #3
   1a984:	add	r3, r2, r3
   1a988:	mvn	r2, #0
   1a98c:	str	r2, [r3]
   1a990:	ldr	r3, [fp, #-16]
   1a994:	add	r3, r3, #1
   1a998:	str	r3, [fp, #-16]
   1a99c:	bl	44d8 <rb_getmaxconnect@plt>
   1a9a0:	mov	r2, r0
   1a9a4:	ldr	r3, [fp, #-16]
   1a9a8:	cmp	r2, r3
   1a9ac:	bgt	1a970 <rb_init_netio_sigio+0x58>
   1a9b0:	ldr	r3, [pc, #164]	; 1aa5c <rb_init_netio_sigio+0x144>
   1a9b4:	ldr	r3, [r4, r3]
   1a9b8:	mov	r2, #0
   1a9bc:	str	r2, [r3, #4]
   1a9c0:	ldr	r3, [pc, #152]	; 1aa60 <rb_init_netio_sigio+0x148>
   1a9c4:	add	r3, pc, r3
   1a9c8:	mov	r2, #1
   1a9cc:	str	r2, [r3]
   1a9d0:	ldr	r3, [pc, #140]	; 1aa64 <rb_init_netio_sigio+0x14c>
   1a9d4:	add	r3, pc, r3
   1a9d8:	mov	r0, r3
   1a9dc:	bl	4400 <sigemptyset@plt>
   1a9e0:	bl	44f0 <__libc_current_sigrtmin@plt>
   1a9e4:	mov	r3, r0
   1a9e8:	mov	r1, r3
   1a9ec:	ldr	r3, [pc, #116]	; 1aa68 <rb_init_netio_sigio+0x150>
   1a9f0:	add	r3, pc, r3
   1a9f4:	mov	r0, r3
   1a9f8:	bl	48ec <sigaddset@plt>
   1a9fc:	mov	r1, #29
   1aa00:	ldr	r3, [pc, #100]	; 1aa6c <rb_init_netio_sigio+0x154>
   1aa04:	add	r3, pc, r3
   1aa08:	mov	r0, r3
   1aa0c:	bl	48ec <sigaddset@plt>
   1aa10:	bl	44f0 <__libc_current_sigrtmin@plt>
   1aa14:	mov	r3, r0
   1aa18:	add	r3, r3, #1
   1aa1c:	mov	r1, r3
   1aa20:	ldr	r3, [pc, #72]	; 1aa70 <rb_init_netio_sigio+0x158>
   1aa24:	add	r3, pc, r3
   1aa28:	mov	r0, r3
   1aa2c:	bl	48ec <sigaddset@plt>
   1aa30:	mov	r2, #0
   1aa34:	ldr	r3, [pc, #56]	; 1aa74 <rb_init_netio_sigio+0x15c>
   1aa38:	add	r3, pc, r3
   1aa3c:	mov	r1, r3
   1aa40:	mov	r0, #0
   1aa44:	bl	4a30 <sigprocmask@plt>
   1aa48:	mov	r3, #0
   1aa4c:	mov	r0, r3
   1aa50:	sub	sp, fp, #8
   1aa54:	pop	{r4, fp, pc}
   1aa58:	.word	0x000196d0
   1aa5c:	.word	0x000003dc
   1aa60:	.word	0x000377b4
   1aa64:	.word	0x000377a8
   1aa68:	.word	0x0003778c
   1aa6c:	.word	0x00037778
   1aa70:	.word	0x00037758
   1aa74:	.word	0x00037744

0001aa78 <resize_pollarray>:
   1aa78:	push	{r4, fp, lr}
   1aa7c:	add	fp, sp, #8
   1aa80:	sub	sp, sp, #20
   1aa84:	str	r0, [fp, #-24]	; 0xffffffe8
   1aa88:	ldr	r4, [pc, #280]	; 1aba8 <resize_pollarray+0x130>
   1aa8c:	add	r4, pc, r4
   1aa90:	ldr	r3, [pc, #276]	; 1abac <resize_pollarray+0x134>
   1aa94:	ldr	r3, [r4, r3]
   1aa98:	ldr	r2, [r3, #8]
   1aa9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aaa0:	cmp	r2, r3
   1aaa4:	movle	r3, #1
   1aaa8:	movgt	r3, #0
   1aaac:	uxtb	r3, r3
   1aab0:	cmp	r3, #0
   1aab4:	beq	1ab9c <resize_pollarray+0x124>
   1aab8:	ldr	r3, [pc, #236]	; 1abac <resize_pollarray+0x134>
   1aabc:	ldr	r3, [r4, r3]
   1aac0:	ldr	r3, [r3, #8]
   1aac4:	str	r3, [fp, #-20]	; 0xffffffec
   1aac8:	ldr	r3, [pc, #220]	; 1abac <resize_pollarray+0x134>
   1aacc:	ldr	r3, [r4, r3]
   1aad0:	ldr	r3, [r3, #8]
   1aad4:	add	r2, r3, #1024	; 0x400
   1aad8:	ldr	r3, [pc, #204]	; 1abac <resize_pollarray+0x134>
   1aadc:	ldr	r3, [r4, r3]
   1aae0:	str	r2, [r3, #8]
   1aae4:	ldr	r3, [pc, #192]	; 1abac <resize_pollarray+0x134>
   1aae8:	ldr	r3, [r4, r3]
   1aaec:	ldr	r2, [r3]
   1aaf0:	ldr	r3, [pc, #180]	; 1abac <resize_pollarray+0x134>
   1aaf4:	ldr	r3, [r4, r3]
   1aaf8:	ldr	r3, [r3, #8]
   1aafc:	lsl	r3, r3, #3
   1ab00:	mov	r1, r3
   1ab04:	mov	r0, r2
   1ab08:	bl	1a784 <rb_realloc>
   1ab0c:	mov	r2, r0
   1ab10:	ldr	r3, [pc, #148]	; 1abac <resize_pollarray+0x134>
   1ab14:	ldr	r3, [r4, r3]
   1ab18:	str	r2, [r3]
   1ab1c:	ldr	r3, [pc, #136]	; 1abac <resize_pollarray+0x134>
   1ab20:	ldr	r3, [r4, r3]
   1ab24:	ldr	r2, [r3]
   1ab28:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab2c:	add	r3, r3, #1
   1ab30:	lsl	r3, r3, #3
   1ab34:	add	r3, r2, r3
   1ab38:	mov	r2, #8192	; 0x2000
   1ab3c:	mov	r1, #0
   1ab40:	mov	r0, r3
   1ab44:	bl	4694 <memset@plt>
   1ab48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab4c:	add	r3, r3, #1
   1ab50:	str	r3, [fp, #-16]
   1ab54:	b	1ab84 <resize_pollarray+0x10c>
   1ab58:	ldr	r3, [pc, #76]	; 1abac <resize_pollarray+0x134>
   1ab5c:	ldr	r3, [r4, r3]
   1ab60:	ldr	r2, [r3]
   1ab64:	ldr	r3, [fp, #-16]
   1ab68:	lsl	r3, r3, #3
   1ab6c:	add	r3, r2, r3
   1ab70:	mvn	r2, #0
   1ab74:	str	r2, [r3]
   1ab78:	ldr	r3, [fp, #-16]
   1ab7c:	add	r3, r3, #1
   1ab80:	str	r3, [fp, #-16]
   1ab84:	ldr	r3, [pc, #32]	; 1abac <resize_pollarray+0x134>
   1ab88:	ldr	r3, [r4, r3]
   1ab8c:	ldr	r2, [r3, #8]
   1ab90:	ldr	r3, [fp, #-16]
   1ab94:	cmp	r2, r3
   1ab98:	bgt	1ab58 <resize_pollarray+0xe0>
   1ab9c:	nop			; (mov r0, r0)
   1aba0:	sub	sp, fp, #8
   1aba4:	pop	{r4, fp, pc}
   1aba8:	.word	0x0001956c
   1abac:	.word	0x000003dc

0001abb0 <rb_setup_fd_sigio>:
   1abb0:	push	{fp, lr}
   1abb4:	add	fp, sp, #4
   1abb8:	sub	sp, sp, #16
   1abbc:	str	r0, [fp, #-16]
   1abc0:	mov	r3, #0
   1abc4:	str	r3, [fp, #-8]
   1abc8:	ldr	r3, [fp, #-16]
   1abcc:	ldr	r3, [r3, #12]
   1abd0:	str	r3, [fp, #-12]
   1abd4:	mov	r2, #0
   1abd8:	mov	r1, #3
   1abdc:	ldr	r0, [fp, #-12]
   1abe0:	bl	4c88 <fcntl@plt>
   1abe4:	str	r0, [fp, #-8]
   1abe8:	ldr	r3, [fp, #-8]
   1abec:	cmn	r3, #1
   1abf0:	bne	1abfc <rb_setup_fd_sigio+0x4c>
   1abf4:	mov	r3, #0
   1abf8:	b	1acb4 <rb_setup_fd_sigio+0x104>
   1abfc:	ldr	r3, [fp, #-8]
   1ac00:	and	r3, r3, #8192	; 0x2000
   1ac04:	cmp	r3, #0
   1ac08:	beq	1ac28 <rb_setup_fd_sigio+0x78>
   1ac0c:	ldr	r3, [fp, #-8]
   1ac10:	bic	r3, r3, #8192	; 0x2000
   1ac14:	str	r3, [fp, #-8]
   1ac18:	ldr	r2, [fp, #-8]
   1ac1c:	mov	r1, #4
   1ac20:	ldr	r0, [fp, #-12]
   1ac24:	bl	4c88 <fcntl@plt>
   1ac28:	ldr	r3, [fp, #-8]
   1ac2c:	orr	r3, r3, #10240	; 0x2800
   1ac30:	str	r3, [fp, #-8]
   1ac34:	ldr	r2, [fp, #-8]
   1ac38:	mov	r1, #4
   1ac3c:	ldr	r0, [fp, #-12]
   1ac40:	bl	4c88 <fcntl@plt>
   1ac44:	mov	r3, r0
   1ac48:	cmn	r3, #1
   1ac4c:	bne	1ac58 <rb_setup_fd_sigio+0xa8>
   1ac50:	mov	r3, #0
   1ac54:	b	1acb4 <rb_setup_fd_sigio+0x104>
   1ac58:	bl	44f0 <__libc_current_sigrtmin@plt>
   1ac5c:	mov	r3, r0
   1ac60:	mov	r2, r3
   1ac64:	mov	r1, #10
   1ac68:	ldr	r0, [fp, #-12]
   1ac6c:	bl	4c88 <fcntl@plt>
   1ac70:	mov	r3, r0
   1ac74:	cmn	r3, #1
   1ac78:	bne	1ac84 <rb_setup_fd_sigio+0xd4>
   1ac7c:	mov	r3, #0
   1ac80:	b	1acb4 <rb_setup_fd_sigio+0x104>
   1ac84:	bl	4b44 <getpid@plt>
   1ac88:	mov	r3, r0
   1ac8c:	mov	r2, r3
   1ac90:	mov	r1, #8
   1ac94:	ldr	r0, [fp, #-12]
   1ac98:	bl	4c88 <fcntl@plt>
   1ac9c:	mov	r3, r0
   1aca0:	cmn	r3, #1
   1aca4:	bne	1acb0 <rb_setup_fd_sigio+0x100>
   1aca8:	mov	r3, #0
   1acac:	b	1acb4 <rb_setup_fd_sigio+0x104>
   1acb0:	mov	r3, #1
   1acb4:	mov	r0, r3
   1acb8:	sub	sp, fp, #4
   1acbc:	pop	{fp, pc}

0001acc0 <rb_setselect_sigio>:
   1acc0:	push	{r4, fp, lr}
   1acc4:	add	fp, sp, #8
   1acc8:	sub	sp, sp, #20
   1accc:	str	r0, [fp, #-16]
   1acd0:	str	r1, [fp, #-20]	; 0xffffffec
   1acd4:	str	r2, [fp, #-24]	; 0xffffffe8
   1acd8:	str	r3, [fp, #-28]	; 0xffffffe4
   1acdc:	ldr	r4, [pc, #584]	; 1af2c <rb_setselect_sigio+0x26c>
   1ace0:	add	r4, pc, r4
   1ace4:	ldr	r3, [fp, #-16]
   1ace8:	cmp	r3, #0
   1acec:	beq	1af20 <rb_setselect_sigio+0x260>
   1acf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1acf4:	and	r3, r3, #1
   1acf8:	cmp	r3, #0
   1acfc:	beq	1ad50 <rb_setselect_sigio+0x90>
   1ad00:	ldr	r3, [fp, #-16]
   1ad04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ad08:	str	r2, [r3, #28]
   1ad0c:	ldr	r3, [fp, #-16]
   1ad10:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ad14:	str	r2, [r3, #32]
   1ad18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad1c:	cmp	r3, #0
   1ad20:	beq	1ad3c <rb_setselect_sigio+0x7c>
   1ad24:	ldr	r3, [fp, #-16]
   1ad28:	ldr	r3, [r3, #20]
   1ad2c:	orr	r2, r3, #64	; 0x40
   1ad30:	ldr	r3, [fp, #-16]
   1ad34:	str	r2, [r3, #20]
   1ad38:	b	1ad50 <rb_setselect_sigio+0x90>
   1ad3c:	ldr	r3, [fp, #-16]
   1ad40:	ldr	r3, [r3, #20]
   1ad44:	bic	r2, r3, #64	; 0x40
   1ad48:	ldr	r3, [fp, #-16]
   1ad4c:	str	r2, [r3, #20]
   1ad50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad54:	and	r3, r3, #2
   1ad58:	cmp	r3, #0
   1ad5c:	beq	1adb0 <rb_setselect_sigio+0xf0>
   1ad60:	ldr	r3, [fp, #-16]
   1ad64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ad68:	str	r2, [r3, #36]	; 0x24
   1ad6c:	ldr	r3, [fp, #-16]
   1ad70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ad74:	str	r2, [r3, #40]	; 0x28
   1ad78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad7c:	cmp	r3, #0
   1ad80:	beq	1ad9c <rb_setselect_sigio+0xdc>
   1ad84:	ldr	r3, [fp, #-16]
   1ad88:	ldr	r3, [r3, #20]
   1ad8c:	orr	r2, r3, #256	; 0x100
   1ad90:	ldr	r3, [fp, #-16]
   1ad94:	str	r2, [r3, #20]
   1ad98:	b	1adb0 <rb_setselect_sigio+0xf0>
   1ad9c:	ldr	r3, [fp, #-16]
   1ada0:	ldr	r3, [r3, #20]
   1ada4:	bic	r2, r3, #256	; 0x100
   1ada8:	ldr	r3, [fp, #-16]
   1adac:	str	r2, [r3, #20]
   1adb0:	ldr	r3, [fp, #-16]
   1adb4:	ldr	r3, [r3, #12]
   1adb8:	mov	r0, r3
   1adbc:	bl	1aa78 <resize_pollarray>
   1adc0:	ldr	r3, [fp, #-16]
   1adc4:	ldr	r3, [r3, #20]
   1adc8:	cmp	r3, #0
   1adcc:	bgt	1ae98 <rb_setselect_sigio+0x1d8>
   1add0:	ldr	r3, [pc, #344]	; 1af30 <rb_setselect_sigio+0x270>
   1add4:	ldr	r3, [r4, r3]
   1add8:	ldr	r2, [r3]
   1addc:	ldr	r3, [fp, #-16]
   1ade0:	ldr	r3, [r3, #12]
   1ade4:	lsl	r3, r3, #3
   1ade8:	add	r3, r2, r3
   1adec:	mov	r2, #0
   1adf0:	strh	r2, [r3, #4]
   1adf4:	ldr	r3, [pc, #308]	; 1af30 <rb_setselect_sigio+0x270>
   1adf8:	ldr	r3, [r4, r3]
   1adfc:	ldr	r2, [r3]
   1ae00:	ldr	r3, [fp, #-16]
   1ae04:	ldr	r3, [r3, #12]
   1ae08:	lsl	r3, r3, #3
   1ae0c:	add	r3, r2, r3
   1ae10:	mvn	r2, #0
   1ae14:	str	r2, [r3]
   1ae18:	ldr	r3, [fp, #-16]
   1ae1c:	ldr	r2, [r3, #12]
   1ae20:	ldr	r3, [pc, #264]	; 1af30 <rb_setselect_sigio+0x270>
   1ae24:	ldr	r3, [r4, r3]
   1ae28:	ldr	r3, [r3, #4]
   1ae2c:	cmp	r2, r3
   1ae30:	bne	1af24 <rb_setselect_sigio+0x264>
   1ae34:	b	1ae54 <rb_setselect_sigio+0x194>
   1ae38:	ldr	r3, [pc, #240]	; 1af30 <rb_setselect_sigio+0x270>
   1ae3c:	ldr	r3, [r4, r3]
   1ae40:	ldr	r3, [r3, #4]
   1ae44:	sub	r2, r3, #1
   1ae48:	ldr	r3, [pc, #224]	; 1af30 <rb_setselect_sigio+0x270>
   1ae4c:	ldr	r3, [r4, r3]
   1ae50:	str	r2, [r3, #4]
   1ae54:	ldr	r3, [pc, #212]	; 1af30 <rb_setselect_sigio+0x270>
   1ae58:	ldr	r3, [r4, r3]
   1ae5c:	ldr	r3, [r3, #4]
   1ae60:	cmp	r3, #0
   1ae64:	blt	1af24 <rb_setselect_sigio+0x264>
   1ae68:	ldr	r3, [pc, #192]	; 1af30 <rb_setselect_sigio+0x270>
   1ae6c:	ldr	r3, [r4, r3]
   1ae70:	ldr	r2, [r3]
   1ae74:	ldr	r3, [pc, #180]	; 1af30 <rb_setselect_sigio+0x270>
   1ae78:	ldr	r3, [r4, r3]
   1ae7c:	ldr	r3, [r3, #4]
   1ae80:	lsl	r3, r3, #3
   1ae84:	add	r3, r2, r3
   1ae88:	ldr	r3, [r3]
   1ae8c:	cmn	r3, #1
   1ae90:	beq	1ae38 <rb_setselect_sigio+0x178>
   1ae94:	b	1af24 <rb_setselect_sigio+0x264>
   1ae98:	ldr	r3, [pc, #144]	; 1af30 <rb_setselect_sigio+0x270>
   1ae9c:	ldr	r3, [r4, r3]
   1aea0:	ldr	r2, [r3]
   1aea4:	ldr	r3, [fp, #-16]
   1aea8:	ldr	r3, [r3, #12]
   1aeac:	lsl	r3, r3, #3
   1aeb0:	add	r3, r2, r3
   1aeb4:	ldr	r2, [fp, #-16]
   1aeb8:	ldr	r2, [r2, #20]
   1aebc:	sxth	r2, r2
   1aec0:	strh	r2, [r3, #4]
   1aec4:	ldr	r3, [pc, #100]	; 1af30 <rb_setselect_sigio+0x270>
   1aec8:	ldr	r3, [r4, r3]
   1aecc:	ldr	r2, [r3]
   1aed0:	ldr	r3, [fp, #-16]
   1aed4:	ldr	r3, [r3, #12]
   1aed8:	lsl	r3, r3, #3
   1aedc:	add	r3, r2, r3
   1aee0:	ldr	r2, [fp, #-16]
   1aee4:	ldr	r2, [r2, #12]
   1aee8:	str	r2, [r3]
   1aeec:	ldr	r3, [fp, #-16]
   1aef0:	ldr	r2, [r3, #12]
   1aef4:	ldr	r3, [pc, #52]	; 1af30 <rb_setselect_sigio+0x270>
   1aef8:	ldr	r3, [r4, r3]
   1aefc:	ldr	r3, [r3, #4]
   1af00:	cmp	r2, r3
   1af04:	ble	1af24 <rb_setselect_sigio+0x264>
   1af08:	ldr	r3, [fp, #-16]
   1af0c:	ldr	r2, [r3, #12]
   1af10:	ldr	r3, [pc, #24]	; 1af30 <rb_setselect_sigio+0x270>
   1af14:	ldr	r3, [r4, r3]
   1af18:	str	r2, [r3, #4]
   1af1c:	b	1af24 <rb_setselect_sigio+0x264>
   1af20:	nop			; (mov r0, r0)
   1af24:	sub	sp, fp, #8
   1af28:	pop	{r4, fp, pc}
   1af2c:	.word	0x00019318
   1af30:	.word	0x000003dc

0001af34 <rb_select_sigio>:
   1af34:	push	{r4, fp, lr}
   1af38:	add	fp, sp, #8
   1af3c:	sub	sp, sp, #188	; 0xbc
   1af40:	str	r0, [fp, #-192]	; 0xffffff40
   1af44:	ldr	r4, [pc, #1448]	; 1b4f4 <rb_select_sigio+0x5c0>
   1af48:	add	r4, pc, r4
   1af4c:	mov	r3, #0
   1af50:	str	r3, [fp, #-16]
   1af54:	mov	r3, #0
   1af58:	str	r3, [fp, #-28]	; 0xffffffe4
   1af5c:	bl	1b53c <rb_sigio_supports_event>
   1af60:	mov	r3, r0
   1af64:	cmp	r3, #0
   1af68:	bne	1af78 <rb_select_sigio+0x44>
   1af6c:	ldr	r3, [fp, #-192]	; 0xffffff40
   1af70:	cmp	r3, #0
   1af74:	blt	1afc4 <rb_select_sigio+0x90>
   1af78:	ldr	r3, [fp, #-192]	; 0xffffff40
   1af7c:	ldr	r2, [pc, #1396]	; 1b4f8 <rb_select_sigio+0x5c4>
   1af80:	smull	r1, r2, r2, r3
   1af84:	asr	r2, r2, #6
   1af88:	asr	r3, r3, #31
   1af8c:	sub	r3, r2, r3
   1af90:	str	r3, [fp, #-184]	; 0xffffff48
   1af94:	ldr	r2, [fp, #-192]	; 0xffffff40
   1af98:	ldr	r3, [pc, #1368]	; 1b4f8 <rb_select_sigio+0x5c4>
   1af9c:	smull	r1, r3, r3, r2
   1afa0:	asr	r1, r3, #6
   1afa4:	asr	r3, r2, #31
   1afa8:	sub	r3, r1, r3
   1afac:	mov	r1, #1000	; 0x3e8
   1afb0:	mul	r3, r1, r3
   1afb4:	sub	r3, r2, r3
   1afb8:	ldr	r2, [pc, #1340]	; 1b4fc <rb_select_sigio+0x5c8>
   1afbc:	mul	r3, r2, r3
   1afc0:	str	r3, [fp, #-180]	; 0xffffff4c
   1afc4:	ldr	r3, [pc, #1332]	; 1b500 <rb_select_sigio+0x5cc>
   1afc8:	add	r3, pc, r3
   1afcc:	ldr	r3, [r3]
   1afd0:	cmp	r3, #0
   1afd4:	bne	1b220 <rb_select_sigio+0x2ec>
   1afd8:	ldr	r3, [pc, #1316]	; 1b504 <rb_select_sigio+0x5d0>
   1afdc:	add	r3, pc, r3
   1afe0:	ldr	r3, [r3]
   1afe4:	cmp	r3, #0
   1afe8:	bne	1aff8 <rb_select_sigio+0xc4>
   1afec:	ldr	r3, [fp, #-192]	; 0xffffff40
   1aff0:	cmp	r3, #0
   1aff4:	bge	1b018 <rb_select_sigio+0xe4>
   1aff8:	sub	r3, fp, #176	; 0xb0
   1affc:	mov	r1, r3
   1b000:	ldr	r3, [pc, #1280]	; 1b508 <rb_select_sigio+0x5d4>
   1b004:	add	r3, pc, r3
   1b008:	mov	r0, r3
   1b00c:	bl	44e4 <sigwaitinfo@plt>
   1b010:	str	r0, [fp, #-20]	; 0xffffffec
   1b014:	b	1b038 <rb_select_sigio+0x104>
   1b018:	sub	r2, fp, #184	; 0xb8
   1b01c:	sub	r3, fp, #176	; 0xb0
   1b020:	mov	r1, r3
   1b024:	ldr	r3, [pc, #1248]	; 1b50c <rb_select_sigio+0x5d8>
   1b028:	add	r3, pc, r3
   1b02c:	mov	r0, r3
   1b030:	bl	452c <sigtimedwait@plt>
   1b034:	str	r0, [fp, #-20]	; 0xffffffec
   1b038:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b03c:	cmp	r3, #0
   1b040:	ble	1b228 <rb_select_sigio+0x2f4>
   1b044:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b048:	cmp	r3, #29
   1b04c:	bne	1b074 <rb_select_sigio+0x140>
   1b050:	ldr	r3, [pc, #1208]	; 1b510 <rb_select_sigio+0x5dc>
   1b054:	add	r3, pc, r3
   1b058:	mov	r0, r3
   1b05c:	bl	4994 <rb_lib_log@plt>
   1b060:	ldr	r3, [pc, #1196]	; 1b514 <rb_select_sigio+0x5e0>
   1b064:	add	r3, pc, r3
   1b068:	mov	r2, #1
   1b06c:	str	r2, [r3]
   1b070:	b	1b22c <rb_select_sigio+0x2f8>
   1b074:	bl	44f0 <__libc_current_sigrtmin@plt>
   1b078:	mov	r3, r0
   1b07c:	add	r2, r3, #1
   1b080:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b084:	cmp	r2, r3
   1b088:	bne	1b0c0 <rb_select_sigio+0x18c>
   1b08c:	ldr	r3, [pc, #1156]	; 1b518 <rb_select_sigio+0x5e4>
   1b090:	add	r3, pc, r3
   1b094:	ldr	r3, [r3]
   1b098:	cmp	r3, #0
   1b09c:	beq	1b0c0 <rb_select_sigio+0x18c>
   1b0a0:	ldr	r3, [fp, #-156]	; 0xffffff64
   1b0a4:	str	r3, [fp, #-32]	; 0xffffffe0
   1b0a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b0ac:	cmp	r3, #0
   1b0b0:	beq	1b210 <rb_select_sigio+0x2dc>
   1b0b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b0b8:	bl	4910 <rb_run_one_event@plt>
   1b0bc:	b	1b21c <rb_select_sigio+0x2e8>
   1b0c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   1b0c4:	str	r3, [fp, #-36]	; 0xffffffdc
   1b0c8:	ldr	r3, [pc, #1100]	; 1b51c <rb_select_sigio+0x5e8>
   1b0cc:	ldr	r3, [r4, r3]
   1b0d0:	ldr	r2, [r3]
   1b0d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b0d8:	lsl	r3, r3, #3
   1b0dc:	add	r3, r2, r3
   1b0e0:	ldr	r2, [pc, #1076]	; 1b51c <rb_select_sigio+0x5e8>
   1b0e4:	ldr	r2, [r4, r2]
   1b0e8:	ldr	r1, [r2]
   1b0ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b0f0:	lsl	r2, r2, #3
   1b0f4:	add	r2, r1, r2
   1b0f8:	ldrsh	r1, [r2, #6]
   1b0fc:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1b100:	sxth	r2, r2
   1b104:	orr	r2, r1, r2
   1b108:	sxth	r2, r2
   1b10c:	strh	r2, [r3, #6]
   1b110:	ldr	r3, [pc, #1028]	; 1b51c <rb_select_sigio+0x5e8>
   1b114:	ldr	r3, [r4, r3]
   1b118:	ldr	r2, [r3]
   1b11c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b120:	lsl	r3, r3, #3
   1b124:	add	r3, r2, r3
   1b128:	ldrsh	r3, [r3, #6]
   1b12c:	str	r3, [fp, #-28]	; 0xffffffe4
   1b130:	ldr	r3, [fp, #-16]
   1b134:	add	r3, r3, #1
   1b138:	str	r3, [fp, #-16]
   1b13c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b140:	bl	1a818 <rb_find_fd>
   1b144:	str	r0, [fp, #-40]	; 0xffffffd8
   1b148:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b14c:	cmp	r3, #0
   1b150:	beq	1b218 <rb_select_sigio+0x2e4>
   1b154:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b158:	and	r3, r3, #89	; 0x59
   1b15c:	cmp	r3, #0
   1b160:	beq	1b1b0 <rb_select_sigio+0x27c>
   1b164:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b168:	ldr	r3, [r3, #28]
   1b16c:	str	r3, [fp, #-44]	; 0xffffffd4
   1b170:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b174:	ldr	r3, [r3, #32]
   1b178:	str	r3, [fp, #-48]	; 0xffffffd0
   1b17c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b180:	mov	r2, #0
   1b184:	str	r2, [r3, #28]
   1b188:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b18c:	mov	r2, #0
   1b190:	str	r2, [r3, #32]
   1b194:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b198:	cmp	r3, #0
   1b19c:	beq	1b1b0 <rb_select_sigio+0x27c>
   1b1a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b1a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b1a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b1ac:	blx	r3
   1b1b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b1b4:	and	r3, r3, #284	; 0x11c
   1b1b8:	cmp	r3, #0
   1b1bc:	beq	1afc4 <rb_select_sigio+0x90>
   1b1c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1c4:	ldr	r3, [r3, #36]	; 0x24
   1b1c8:	str	r3, [fp, #-44]	; 0xffffffd4
   1b1cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1d0:	ldr	r3, [r3, #40]	; 0x28
   1b1d4:	str	r3, [fp, #-48]	; 0xffffffd0
   1b1d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1dc:	mov	r2, #0
   1b1e0:	str	r2, [r3, #36]	; 0x24
   1b1e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b1e8:	mov	r2, #0
   1b1ec:	str	r2, [r3, #40]	; 0x28
   1b1f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b1f4:	cmp	r3, #0
   1b1f8:	beq	1afc4 <rb_select_sigio+0x90>
   1b1fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b200:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b204:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b208:	blx	r3
   1b20c:	b	1afc4 <rb_select_sigio+0x90>
   1b210:	nop			; (mov r0, r0)
   1b214:	b	1afc4 <rb_select_sigio+0x90>
   1b218:	nop			; (mov r0, r0)
   1b21c:	b	1afc4 <rb_select_sigio+0x90>
   1b220:	nop			; (mov r0, r0)
   1b224:	b	1b22c <rb_select_sigio+0x2f8>
   1b228:	nop			; (mov r0, r0)
   1b22c:	ldr	r3, [pc, #748]	; 1b520 <rb_select_sigio+0x5ec>
   1b230:	add	r3, pc, r3
   1b234:	ldr	r3, [r3]
   1b238:	cmp	r3, #0
   1b23c:	bne	1b24c <rb_select_sigio+0x318>
   1b240:	bl	4a0c <rb_set_time@plt>
   1b244:	mov	r3, #0
   1b248:	b	1b4e8 <rb_select_sigio+0x5b4>
   1b24c:	bl	44f0 <__libc_current_sigrtmin@plt>
   1b250:	mov	r3, r0
   1b254:	mov	r1, #1
   1b258:	mov	r0, r3
   1b25c:	bl	4544 <signal@plt>
   1b260:	bl	44f0 <__libc_current_sigrtmin@plt>
   1b264:	mov	r3, r0
   1b268:	mov	r1, #0
   1b26c:	mov	r0, r3
   1b270:	bl	4544 <signal@plt>
   1b274:	ldr	r3, [pc, #680]	; 1b524 <rb_select_sigio+0x5f0>
   1b278:	add	r3, pc, r3
   1b27c:	mov	r2, #0
   1b280:	str	r2, [r3]
   1b284:	ldr	r3, [pc, #656]	; 1b51c <rb_select_sigio+0x5e8>
   1b288:	ldr	r3, [r4, r3]
   1b28c:	ldr	r0, [r3]
   1b290:	ldr	r3, [pc, #644]	; 1b51c <rb_select_sigio+0x5e8>
   1b294:	ldr	r3, [r4, r3]
   1b298:	ldr	r3, [r3, #4]
   1b29c:	add	r3, r3, #1
   1b2a0:	ldr	r2, [fp, #-192]	; 0xffffff40
   1b2a4:	mov	r1, r3
   1b2a8:	bl	4a78 <poll@plt>
   1b2ac:	str	r0, [fp, #-16]
   1b2b0:	bl	4a0c <rb_set_time@plt>
   1b2b4:	ldr	r3, [fp, #-16]
   1b2b8:	cmp	r3, #0
   1b2bc:	bge	1b2f0 <rb_select_sigio+0x3bc>
   1b2c0:	bl	4d78 <__errno_location@plt>
   1b2c4:	mov	r3, r0
   1b2c8:	ldr	r3, [r3]
   1b2cc:	mov	r0, r3
   1b2d0:	bl	4448 <rb_ignore_errno@plt>
   1b2d4:	mov	r3, r0
   1b2d8:	cmp	r3, #0
   1b2dc:	bne	1b2e8 <rb_select_sigio+0x3b4>
   1b2e0:	mov	r3, #0
   1b2e4:	b	1b4e8 <rb_select_sigio+0x5b4>
   1b2e8:	mov	r3, #5
   1b2ec:	b	1b4e8 <rb_select_sigio+0x5b4>
   1b2f0:	ldr	r3, [fp, #-16]
   1b2f4:	cmp	r3, #0
   1b2f8:	bne	1b304 <rb_select_sigio+0x3d0>
   1b2fc:	mov	r3, #0
   1b300:	b	1b4e8 <rb_select_sigio+0x5b4>
   1b304:	mov	r3, #0
   1b308:	str	r3, [fp, #-24]	; 0xffffffe8
   1b30c:	b	1b4c8 <rb_select_sigio+0x594>
   1b310:	ldr	r3, [pc, #516]	; 1b51c <rb_select_sigio+0x5e8>
   1b314:	ldr	r3, [r4, r3]
   1b318:	ldr	r2, [r3]
   1b31c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b320:	lsl	r3, r3, #3
   1b324:	add	r3, r2, r3
   1b328:	ldrsh	r3, [r3, #6]
   1b32c:	str	r3, [fp, #-28]	; 0xffffffe4
   1b330:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b334:	cmp	r3, #0
   1b338:	beq	1b4b0 <rb_select_sigio+0x57c>
   1b33c:	ldr	r3, [pc, #472]	; 1b51c <rb_select_sigio+0x5e8>
   1b340:	ldr	r3, [r4, r3]
   1b344:	ldr	r2, [r3]
   1b348:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b34c:	lsl	r3, r3, #3
   1b350:	add	r3, r2, r3
   1b354:	ldr	r3, [r3]
   1b358:	cmn	r3, #1
   1b35c:	beq	1b4b0 <rb_select_sigio+0x57c>
   1b360:	ldr	r3, [pc, #436]	; 1b51c <rb_select_sigio+0x5e8>
   1b364:	ldr	r3, [r4, r3]
   1b368:	ldr	r2, [r3]
   1b36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b370:	lsl	r3, r3, #3
   1b374:	add	r3, r2, r3
   1b378:	ldr	r3, [r3]
   1b37c:	str	r3, [fp, #-36]	; 0xffffffdc
   1b380:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b384:	bl	1a818 <rb_find_fd>
   1b388:	str	r0, [fp, #-40]	; 0xffffffd8
   1b38c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b390:	cmp	r3, #0
   1b394:	beq	1b4b8 <rb_select_sigio+0x584>
   1b398:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b39c:	and	r3, r3, #89	; 0x59
   1b3a0:	cmp	r3, #0
   1b3a4:	beq	1b3f4 <rb_select_sigio+0x4c0>
   1b3a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b3ac:	ldr	r3, [r3, #28]
   1b3b0:	str	r3, [fp, #-44]	; 0xffffffd4
   1b3b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b3b8:	ldr	r3, [r3, #32]
   1b3bc:	str	r3, [fp, #-48]	; 0xffffffd0
   1b3c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b3c4:	mov	r2, #0
   1b3c8:	str	r2, [r3, #28]
   1b3cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b3d0:	mov	r2, #0
   1b3d4:	str	r2, [r3, #32]
   1b3d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b3dc:	cmp	r3, #0
   1b3e0:	beq	1b3f4 <rb_select_sigio+0x4c0>
   1b3e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b3e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b3ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3f0:	blx	r3
   1b3f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b3f8:	ldrb	r3, [r3, #16]
   1b3fc:	and	r3, r3, #1
   1b400:	cmp	r3, #0
   1b404:	beq	1b464 <rb_select_sigio+0x530>
   1b408:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b40c:	and	r3, r3, #284	; 0x11c
   1b410:	cmp	r3, #0
   1b414:	beq	1b464 <rb_select_sigio+0x530>
   1b418:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b41c:	ldr	r3, [r3, #36]	; 0x24
   1b420:	str	r3, [fp, #-44]	; 0xffffffd4
   1b424:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b428:	ldr	r3, [r3, #40]	; 0x28
   1b42c:	str	r3, [fp, #-48]	; 0xffffffd0
   1b430:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b434:	mov	r2, #0
   1b438:	str	r2, [r3, #36]	; 0x24
   1b43c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b440:	mov	r2, #0
   1b444:	str	r2, [r3, #40]	; 0x28
   1b448:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b44c:	cmp	r3, #0
   1b450:	beq	1b464 <rb_select_sigio+0x530>
   1b454:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b458:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b45c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b460:	blx	r3
   1b464:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b468:	ldr	r3, [r3, #28]
   1b46c:	cmp	r3, #0
   1b470:	bne	1b488 <rb_select_sigio+0x554>
   1b474:	mov	r3, #0
   1b478:	mov	r2, #0
   1b47c:	mov	r1, #1
   1b480:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b484:	bl	1acc0 <rb_setselect_sigio>
   1b488:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b48c:	ldr	r3, [r3, #36]	; 0x24
   1b490:	cmp	r3, #0
   1b494:	bne	1b4bc <rb_select_sigio+0x588>
   1b498:	mov	r3, #0
   1b49c:	mov	r2, #0
   1b4a0:	mov	r1, #2
   1b4a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b4a8:	bl	1acc0 <rb_setselect_sigio>
   1b4ac:	b	1b4bc <rb_select_sigio+0x588>
   1b4b0:	nop			; (mov r0, r0)
   1b4b4:	b	1b4bc <rb_select_sigio+0x588>
   1b4b8:	nop			; (mov r0, r0)
   1b4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b4c0:	add	r3, r3, #1
   1b4c4:	str	r3, [fp, #-24]	; 0xffffffe8
   1b4c8:	ldr	r3, [pc, #76]	; 1b51c <rb_select_sigio+0x5e8>
   1b4cc:	ldr	r3, [r4, r3]
   1b4d0:	ldr	r3, [r3, #4]
   1b4d4:	add	r2, r3, #1
   1b4d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b4dc:	cmp	r2, r3
   1b4e0:	bgt	1b310 <rb_select_sigio+0x3dc>
   1b4e4:	mov	r3, #0
   1b4e8:	mov	r0, r3
   1b4ec:	sub	sp, fp, #8
   1b4f0:	pop	{r4, fp, pc}
   1b4f4:	.word	0x000190b0
   1b4f8:	.word	0x10624dd3
   1b4fc:	.word	0x000f4240
   1b500:	.word	0x000371b0
   1b504:	.word	0x00037198
   1b508:	.word	0x00037178
   1b50c:	.word	0x00037154
   1b510:	.word	0x00008584
   1b514:	.word	0x00037114
   1b518:	.word	0x000370e4
   1b51c:	.word	0x000003dc
   1b520:	.word	0x00036f48
   1b524:	.word	0x00036f00

0001b528 <rb_sigio_init_event>:
   1b528:	push	{fp, lr}
   1b52c:	add	fp, sp, #4
   1b530:	bl	1b53c <rb_sigio_supports_event>
   1b534:	nop			; (mov r0, r0)
   1b538:	pop	{fp, pc}

0001b53c <rb_sigio_supports_event>:
   1b53c:	push	{fp, lr}
   1b540:	add	fp, sp, #4
   1b544:	sub	sp, sp, #72	; 0x48
   1b548:	ldr	r3, [pc, #164]	; 1b5f4 <rb_sigio_supports_event+0xb8>
   1b54c:	add	r3, pc, r3
   1b550:	ldr	r3, [r3]
   1b554:	cmp	r3, #1
   1b558:	bne	1b564 <rb_sigio_supports_event+0x28>
   1b55c:	mov	r3, #1
   1b560:	b	1b5e8 <rb_sigio_supports_event+0xac>
   1b564:	ldr	r3, [pc, #140]	; 1b5f8 <rb_sigio_supports_event+0xbc>
   1b568:	add	r3, pc, r3
   1b56c:	ldr	r3, [r3]
   1b570:	cmn	r3, #1
   1b574:	bne	1b580 <rb_sigio_supports_event+0x44>
   1b578:	mov	r3, #0
   1b57c:	b	1b5e8 <rb_sigio_supports_event+0xac>
   1b580:	mov	r3, #26
   1b584:	str	r3, [fp, #-68]	; 0xffffffbc
   1b588:	mov	r3, #0
   1b58c:	str	r3, [fp, #-64]	; 0xffffffc0
   1b590:	sub	r2, fp, #8
   1b594:	sub	r3, fp, #72	; 0x48
   1b598:	mov	r1, r3
   1b59c:	mov	r0, #0
   1b5a0:	bl	4598 <timer_create@plt>
   1b5a4:	mov	r3, r0
   1b5a8:	cmp	r3, #0
   1b5ac:	beq	1b5c8 <rb_sigio_supports_event+0x8c>
   1b5b0:	ldr	r3, [pc, #68]	; 1b5fc <rb_sigio_supports_event+0xc0>
   1b5b4:	add	r3, pc, r3
   1b5b8:	mvn	r2, #0
   1b5bc:	str	r2, [r3]
   1b5c0:	mov	r3, #0
   1b5c4:	b	1b5e8 <rb_sigio_supports_event+0xac>
   1b5c8:	ldr	r3, [fp, #-8]
   1b5cc:	mov	r0, r3
   1b5d0:	bl	4af0 <timer_delete@plt>
   1b5d4:	ldr	r3, [pc, #36]	; 1b600 <rb_sigio_supports_event+0xc4>
   1b5d8:	add	r3, pc, r3
   1b5dc:	mov	r2, #1
   1b5e0:	str	r2, [r3]
   1b5e4:	mov	r3, #1
   1b5e8:	mov	r0, r3
   1b5ec:	sub	sp, fp, #4
   1b5f0:	pop	{fp, pc}
   1b5f4:	.word	0x00036c28
   1b5f8:	.word	0x00036c0c
   1b5fc:	.word	0x00036bc0
   1b600:	.word	0x00036b9c

0001b604 <rb_sigio_sched_event>:
   1b604:	push	{fp, lr}
   1b608:	add	fp, sp, #4
   1b60c:	sub	sp, sp, #96	; 0x60
   1b610:	str	r0, [fp, #-96]	; 0xffffffa0
   1b614:	str	r1, [fp, #-100]	; 0xffffff9c
   1b618:	ldr	r3, [pc, #360]	; 1b788 <rb_sigio_sched_event+0x184>
   1b61c:	add	r3, pc, r3
   1b620:	ldr	r3, [r3]
   1b624:	cmp	r3, #0
   1b628:	bgt	1b634 <rb_sigio_sched_event+0x30>
   1b62c:	mov	r3, #0
   1b630:	b	1b77c <rb_sigio_sched_event+0x178>
   1b634:	sub	r3, fp, #72	; 0x48
   1b638:	mov	r2, #64	; 0x40
   1b63c:	mov	r1, #0
   1b640:	mov	r0, r3
   1b644:	bl	4694 <memset@plt>
   1b648:	mov	r0, #4
   1b64c:	bl	1a730 <rb_malloc>
   1b650:	mov	r2, r0
   1b654:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b658:	str	r2, [r3, #40]	; 0x28
   1b65c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b660:	ldr	r3, [r3, #40]	; 0x28
   1b664:	str	r3, [fp, #-8]
   1b668:	mov	r3, #0
   1b66c:	str	r3, [fp, #-64]	; 0xffffffc0
   1b670:	bl	44f0 <__libc_current_sigrtmin@plt>
   1b674:	mov	r3, r0
   1b678:	add	r3, r3, #1
   1b67c:	str	r3, [fp, #-68]	; 0xffffffbc
   1b680:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b684:	str	r3, [fp, #-72]	; 0xffffffb8
   1b688:	sub	r3, fp, #72	; 0x48
   1b68c:	ldr	r2, [fp, #-8]
   1b690:	mov	r1, r3
   1b694:	mov	r0, #0
   1b698:	bl	4598 <timer_create@plt>
   1b69c:	mov	r3, r0
   1b6a0:	cmp	r3, #0
   1b6a4:	bge	1b6dc <rb_sigio_sched_event+0xd8>
   1b6a8:	bl	4d78 <__errno_location@plt>
   1b6ac:	mov	r3, r0
   1b6b0:	ldr	r3, [r3]
   1b6b4:	mov	r0, r3
   1b6b8:	bl	440c <strerror@plt>
   1b6bc:	mov	r3, r0
   1b6c0:	mov	r1, r3
   1b6c4:	ldr	r3, [pc, #192]	; 1b78c <rb_sigio_sched_event+0x188>
   1b6c8:	add	r3, pc, r3
   1b6cc:	mov	r0, r3
   1b6d0:	bl	4994 <rb_lib_log@plt>
   1b6d4:	mov	r3, #0
   1b6d8:	b	1b77c <rb_sigio_sched_event+0x178>
   1b6dc:	sub	r3, fp, #88	; 0x58
   1b6e0:	mov	r2, #16
   1b6e4:	mov	r1, #0
   1b6e8:	mov	r0, r3
   1b6ec:	bl	4694 <memset@plt>
   1b6f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b6f4:	str	r3, [fp, #-80]	; 0xffffffb0
   1b6f8:	mov	r3, #0
   1b6fc:	str	r3, [fp, #-76]	; 0xffffffb4
   1b700:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1b704:	ldr	r3, [r3, #24]
   1b708:	cmp	r3, #0
   1b70c:	beq	1b720 <rb_sigio_sched_event+0x11c>
   1b710:	sub	r3, fp, #88	; 0x58
   1b714:	sub	r2, fp, #80	; 0x50
   1b718:	ldm	r2, {r0, r1}
   1b71c:	stm	r3, {r0, r1}
   1b720:	ldr	r3, [fp, #-8]
   1b724:	ldr	r0, [r3]
   1b728:	sub	r2, fp, #88	; 0x58
   1b72c:	mov	r3, #0
   1b730:	mov	r1, #0
   1b734:	bl	47cc <timer_settime@plt>
   1b738:	mov	r3, r0
   1b73c:	cmp	r3, #0
   1b740:	bge	1b778 <rb_sigio_sched_event+0x174>
   1b744:	bl	4d78 <__errno_location@plt>
   1b748:	mov	r3, r0
   1b74c:	ldr	r3, [r3]
   1b750:	mov	r0, r3
   1b754:	bl	440c <strerror@plt>
   1b758:	mov	r3, r0
   1b75c:	mov	r1, r3
   1b760:	ldr	r3, [pc, #40]	; 1b790 <rb_sigio_sched_event+0x18c>
   1b764:	add	r3, pc, r3
   1b768:	mov	r0, r3
   1b76c:	bl	4994 <rb_lib_log@plt>
   1b770:	mov	r3, #0
   1b774:	b	1b77c <rb_sigio_sched_event+0x178>
   1b778:	mov	r3, #1
   1b77c:	mov	r0, r3
   1b780:	sub	sp, fp, #4
   1b784:	pop	{fp, pc}
   1b788:	.word	0x00036b58
   1b78c:	.word	0x00007f84
   1b790:	.word	0x00007efc

0001b794 <rb_sigio_unsched_event>:
   1b794:	push	{fp, lr}
   1b798:	add	fp, sp, #4
   1b79c:	sub	sp, sp, #8
   1b7a0:	str	r0, [fp, #-8]
   1b7a4:	ldr	r3, [pc, #76]	; 1b7f8 <rb_sigio_unsched_event+0x64>
   1b7a8:	add	r3, pc, r3
   1b7ac:	ldr	r3, [r3]
   1b7b0:	cmp	r3, #0
   1b7b4:	ble	1b7ec <rb_sigio_unsched_event+0x58>
   1b7b8:	ldr	r3, [fp, #-8]
   1b7bc:	ldr	r3, [r3, #40]	; 0x28
   1b7c0:	ldr	r3, [r3]
   1b7c4:	mov	r0, r3
   1b7c8:	bl	4af0 <timer_delete@plt>
   1b7cc:	ldr	r3, [fp, #-8]
   1b7d0:	ldr	r3, [r3, #40]	; 0x28
   1b7d4:	mov	r0, r3
   1b7d8:	bl	1a7d8 <rb_free>
   1b7dc:	ldr	r3, [fp, #-8]
   1b7e0:	mov	r2, #0
   1b7e4:	str	r2, [r3, #40]	; 0x28
   1b7e8:	b	1b7f0 <rb_sigio_unsched_event+0x5c>
   1b7ec:	nop			; (mov r0, r0)
   1b7f0:	sub	sp, fp, #4
   1b7f4:	pop	{fp, pc}
   1b7f8:	.word	0x000369cc

0001b7fc <rb_find_fd>:
   1b7fc:	push	{fp}		; (str fp, [sp, #-4]!)
   1b800:	add	fp, sp, #0
   1b804:	sub	sp, sp, #28
   1b808:	str	r0, [fp, #-24]	; 0xffffffe8
   1b80c:	ldr	r2, [pc, #224]	; 1b8f4 <rb_find_fd+0xf8>
   1b810:	add	r2, pc, r2
   1b814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b818:	lsr	r3, r3, #31
   1b81c:	uxtb	r3, r3
   1b820:	cmp	r3, #0
   1b824:	beq	1b830 <rb_find_fd+0x34>
   1b828:	mov	r3, #0
   1b82c:	b	1b8e4 <rb_find_fd+0xe8>
   1b830:	ldr	r3, [pc, #192]	; 1b8f8 <rb_find_fd+0xfc>
   1b834:	ldr	r3, [r2, r3]
   1b838:	ldr	r1, [r3]
   1b83c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b840:	asr	r2, r3, #12
   1b844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b848:	eor	r2, r2, r3
   1b84c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b850:	asr	r3, r3, #24
   1b854:	eor	r3, r3, r2
   1b858:	lsl	r2, r3, #20
   1b85c:	lsr	r2, r2, #20
   1b860:	mov	r3, r2
   1b864:	lsl	r3, r3, #1
   1b868:	add	r3, r3, r2
   1b86c:	lsl	r3, r3, #2
   1b870:	add	r3, r1, r3
   1b874:	str	r3, [fp, #-12]
   1b878:	ldr	r3, [fp, #-12]
   1b87c:	ldr	r3, [r3]
   1b880:	cmp	r3, #0
   1b884:	bne	1b890 <rb_find_fd+0x94>
   1b888:	mov	r3, #0
   1b88c:	b	1b8e4 <rb_find_fd+0xe8>
   1b890:	ldr	r3, [fp, #-12]
   1b894:	ldr	r3, [r3]
   1b898:	str	r3, [fp, #-8]
   1b89c:	b	1b8d4 <rb_find_fd+0xd8>
   1b8a0:	ldr	r3, [fp, #-8]
   1b8a4:	ldr	r3, [r3]
   1b8a8:	str	r3, [fp, #-16]
   1b8ac:	ldr	r3, [fp, #-16]
   1b8b0:	ldr	r2, [r3, #12]
   1b8b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8b8:	cmp	r2, r3
   1b8bc:	bne	1b8c8 <rb_find_fd+0xcc>
   1b8c0:	ldr	r3, [fp, #-16]
   1b8c4:	b	1b8e4 <rb_find_fd+0xe8>
   1b8c8:	ldr	r3, [fp, #-8]
   1b8cc:	ldr	r3, [r3, #8]
   1b8d0:	str	r3, [fp, #-8]
   1b8d4:	ldr	r3, [fp, #-8]
   1b8d8:	cmp	r3, #0
   1b8dc:	bne	1b8a0 <rb_find_fd+0xa4>
   1b8e0:	mov	r3, #0
   1b8e4:	mov	r0, r3
   1b8e8:	add	sp, fp, #0
   1b8ec:	pop	{fp}		; (ldr fp, [sp], #4)
   1b8f0:	bx	lr
   1b8f4:	.word	0x000187e8
   1b8f8:	.word	0x000003cc

0001b8fc <select_update_selectfds>:
   1b8fc:	push	{fp}		; (str fp, [sp, #-4]!)
   1b900:	add	fp, sp, #0
   1b904:	sub	sp, sp, #20
   1b908:	str	r0, [fp, #-8]
   1b90c:	mov	r3, r1
   1b910:	str	r2, [fp, #-16]
   1b914:	strh	r3, [fp, #-10]
   1b918:	ldrh	r3, [fp, #-10]
   1b91c:	and	r3, r3, #1
   1b920:	cmp	r3, #0
   1b924:	beq	1ba2c <select_update_selectfds+0x130>
   1b928:	ldr	r3, [fp, #-16]
   1b92c:	cmp	r3, #0
   1b930:	beq	1b9b0 <select_update_selectfds+0xb4>
   1b934:	ldr	r3, [fp, #-8]
   1b938:	ldr	r3, [r3, #12]
   1b93c:	add	r2, r3, #31
   1b940:	cmp	r3, #0
   1b944:	movlt	r3, r2
   1b948:	movge	r3, r3
   1b94c:	asr	r3, r3, #5
   1b950:	mov	r1, r3
   1b954:	ldr	r3, [pc, #860]	; 1bcb8 <select_update_selectfds+0x3bc>
   1b958:	add	r3, pc, r3
   1b95c:	ldr	r0, [r3, r1, lsl #2]
   1b960:	ldr	r3, [fp, #-8]
   1b964:	ldr	r2, [r3, #12]
   1b968:	asr	r3, r2, #31
   1b96c:	lsr	r3, r3, #27
   1b970:	add	r2, r2, r3
   1b974:	and	r2, r2, #31
   1b978:	sub	r3, r2, r3
   1b97c:	mov	r2, r3
   1b980:	mov	r3, #1
   1b984:	lsl	r3, r3, r2
   1b988:	orr	r2, r0, r3
   1b98c:	ldr	r3, [pc, #808]	; 1bcbc <select_update_selectfds+0x3c0>
   1b990:	add	r3, pc, r3
   1b994:	str	r2, [r3, r1, lsl #2]
   1b998:	ldr	r3, [fp, #-8]
   1b99c:	ldr	r3, [r3, #20]
   1b9a0:	orr	r2, r3, #1
   1b9a4:	ldr	r3, [fp, #-8]
   1b9a8:	str	r2, [r3, #20]
   1b9ac:	b	1ba2c <select_update_selectfds+0x130>
   1b9b0:	ldr	r3, [fp, #-8]
   1b9b4:	ldr	r3, [r3, #12]
   1b9b8:	add	r2, r3, #31
   1b9bc:	cmp	r3, #0
   1b9c0:	movlt	r3, r2
   1b9c4:	movge	r3, r3
   1b9c8:	asr	r3, r3, #5
   1b9cc:	mov	r1, r3
   1b9d0:	ldr	r3, [pc, #744]	; 1bcc0 <select_update_selectfds+0x3c4>
   1b9d4:	add	r3, pc, r3
   1b9d8:	ldr	r0, [r3, r1, lsl #2]
   1b9dc:	ldr	r3, [fp, #-8]
   1b9e0:	ldr	r2, [r3, #12]
   1b9e4:	asr	r3, r2, #31
   1b9e8:	lsr	r3, r3, #27
   1b9ec:	add	r2, r2, r3
   1b9f0:	and	r2, r2, #31
   1b9f4:	sub	r3, r2, r3
   1b9f8:	mov	r2, r3
   1b9fc:	mov	r3, #1
   1ba00:	lsl	r3, r3, r2
   1ba04:	mvn	r3, r3
   1ba08:	and	r2, r0, r3
   1ba0c:	ldr	r3, [pc, #688]	; 1bcc4 <select_update_selectfds+0x3c8>
   1ba10:	add	r3, pc, r3
   1ba14:	str	r2, [r3, r1, lsl #2]
   1ba18:	ldr	r3, [fp, #-8]
   1ba1c:	ldr	r3, [r3, #20]
   1ba20:	bic	r2, r3, #1
   1ba24:	ldr	r3, [fp, #-8]
   1ba28:	str	r2, [r3, #20]
   1ba2c:	ldrh	r3, [fp, #-10]
   1ba30:	and	r3, r3, #2
   1ba34:	cmp	r3, #0
   1ba38:	beq	1bb40 <select_update_selectfds+0x244>
   1ba3c:	ldr	r3, [fp, #-16]
   1ba40:	cmp	r3, #0
   1ba44:	beq	1bac4 <select_update_selectfds+0x1c8>
   1ba48:	ldr	r3, [fp, #-8]
   1ba4c:	ldr	r3, [r3, #12]
   1ba50:	add	r2, r3, #31
   1ba54:	cmp	r3, #0
   1ba58:	movlt	r3, r2
   1ba5c:	movge	r3, r3
   1ba60:	asr	r3, r3, #5
   1ba64:	mov	r1, r3
   1ba68:	ldr	r3, [pc, #600]	; 1bcc8 <select_update_selectfds+0x3cc>
   1ba6c:	add	r3, pc, r3
   1ba70:	ldr	r0, [r3, r1, lsl #2]
   1ba74:	ldr	r3, [fp, #-8]
   1ba78:	ldr	r2, [r3, #12]
   1ba7c:	asr	r3, r2, #31
   1ba80:	lsr	r3, r3, #27
   1ba84:	add	r2, r2, r3
   1ba88:	and	r2, r2, #31
   1ba8c:	sub	r3, r2, r3
   1ba90:	mov	r2, r3
   1ba94:	mov	r3, #1
   1ba98:	lsl	r3, r3, r2
   1ba9c:	orr	r2, r0, r3
   1baa0:	ldr	r3, [pc, #548]	; 1bccc <select_update_selectfds+0x3d0>
   1baa4:	add	r3, pc, r3
   1baa8:	str	r2, [r3, r1, lsl #2]
   1baac:	ldr	r3, [fp, #-8]
   1bab0:	ldr	r3, [r3, #20]
   1bab4:	orr	r2, r3, #2
   1bab8:	ldr	r3, [fp, #-8]
   1babc:	str	r2, [r3, #20]
   1bac0:	b	1bb40 <select_update_selectfds+0x244>
   1bac4:	ldr	r3, [fp, #-8]
   1bac8:	ldr	r3, [r3, #12]
   1bacc:	add	r2, r3, #31
   1bad0:	cmp	r3, #0
   1bad4:	movlt	r3, r2
   1bad8:	movge	r3, r3
   1badc:	asr	r3, r3, #5
   1bae0:	mov	r1, r3
   1bae4:	ldr	r3, [pc, #484]	; 1bcd0 <select_update_selectfds+0x3d4>
   1bae8:	add	r3, pc, r3
   1baec:	ldr	r0, [r3, r1, lsl #2]
   1baf0:	ldr	r3, [fp, #-8]
   1baf4:	ldr	r2, [r3, #12]
   1baf8:	asr	r3, r2, #31
   1bafc:	lsr	r3, r3, #27
   1bb00:	add	r2, r2, r3
   1bb04:	and	r2, r2, #31
   1bb08:	sub	r3, r2, r3
   1bb0c:	mov	r2, r3
   1bb10:	mov	r3, #1
   1bb14:	lsl	r3, r3, r2
   1bb18:	mvn	r3, r3
   1bb1c:	and	r2, r0, r3
   1bb20:	ldr	r3, [pc, #428]	; 1bcd4 <select_update_selectfds+0x3d8>
   1bb24:	add	r3, pc, r3
   1bb28:	str	r2, [r3, r1, lsl #2]
   1bb2c:	ldr	r3, [fp, #-8]
   1bb30:	ldr	r3, [r3, #20]
   1bb34:	bic	r2, r3, #2
   1bb38:	ldr	r3, [fp, #-8]
   1bb3c:	str	r2, [r3, #20]
   1bb40:	ldr	r3, [fp, #-8]
   1bb44:	ldr	r3, [r3, #20]
   1bb48:	and	r3, r3, #3
   1bb4c:	cmp	r3, #0
   1bb50:	beq	1bb88 <select_update_selectfds+0x28c>
   1bb54:	ldr	r3, [fp, #-8]
   1bb58:	ldr	r2, [r3, #12]
   1bb5c:	ldr	r3, [pc, #372]	; 1bcd8 <select_update_selectfds+0x3dc>
   1bb60:	add	r3, pc, r3
   1bb64:	ldr	r3, [r3]
   1bb68:	cmp	r2, r3
   1bb6c:	ble	1bca8 <select_update_selectfds+0x3ac>
   1bb70:	ldr	r3, [fp, #-8]
   1bb74:	ldr	r2, [r3, #12]
   1bb78:	ldr	r3, [pc, #348]	; 1bcdc <select_update_selectfds+0x3e0>
   1bb7c:	add	r3, pc, r3
   1bb80:	str	r2, [r3]
   1bb84:	b	1bca8 <select_update_selectfds+0x3ac>
   1bb88:	ldr	r3, [fp, #-8]
   1bb8c:	ldr	r2, [r3, #12]
   1bb90:	ldr	r3, [pc, #328]	; 1bce0 <select_update_selectfds+0x3e4>
   1bb94:	add	r3, pc, r3
   1bb98:	ldr	r3, [r3]
   1bb9c:	cmp	r2, r3
   1bba0:	bgt	1bca8 <select_update_selectfds+0x3ac>
   1bba4:	b	1bbc4 <select_update_selectfds+0x2c8>
   1bba8:	ldr	r3, [pc, #308]	; 1bce4 <select_update_selectfds+0x3e8>
   1bbac:	add	r3, pc, r3
   1bbb0:	ldr	r3, [r3]
   1bbb4:	sub	r2, r3, #1
   1bbb8:	ldr	r3, [pc, #296]	; 1bce8 <select_update_selectfds+0x3ec>
   1bbbc:	add	r3, pc, r3
   1bbc0:	str	r2, [r3]
   1bbc4:	ldr	r3, [pc, #288]	; 1bcec <select_update_selectfds+0x3f0>
   1bbc8:	add	r3, pc, r3
   1bbcc:	ldr	r3, [r3]
   1bbd0:	cmp	r3, #0
   1bbd4:	blt	1bca8 <select_update_selectfds+0x3ac>
   1bbd8:	ldr	r3, [pc, #272]	; 1bcf0 <select_update_selectfds+0x3f4>
   1bbdc:	add	r3, pc, r3
   1bbe0:	ldr	r3, [r3]
   1bbe4:	add	r2, r3, #31
   1bbe8:	cmp	r3, #0
   1bbec:	movlt	r3, r2
   1bbf0:	movge	r3, r3
   1bbf4:	asr	r3, r3, #5
   1bbf8:	mov	r2, r3
   1bbfc:	ldr	r3, [pc, #240]	; 1bcf4 <select_update_selectfds+0x3f8>
   1bc00:	add	r3, pc, r3
   1bc04:	ldr	r1, [r3, r2, lsl #2]
   1bc08:	ldr	r3, [pc, #232]	; 1bcf8 <select_update_selectfds+0x3fc>
   1bc0c:	add	r3, pc, r3
   1bc10:	ldr	r2, [r3]
   1bc14:	asr	r3, r2, #31
   1bc18:	lsr	r3, r3, #27
   1bc1c:	add	r2, r2, r3
   1bc20:	and	r2, r2, #31
   1bc24:	sub	r3, r2, r3
   1bc28:	mov	r2, r3
   1bc2c:	mov	r3, #1
   1bc30:	lsl	r3, r3, r2
   1bc34:	and	r3, r3, r1
   1bc38:	cmp	r3, #0
   1bc3c:	bne	1bca8 <select_update_selectfds+0x3ac>
   1bc40:	ldr	r3, [pc, #180]	; 1bcfc <select_update_selectfds+0x400>
   1bc44:	add	r3, pc, r3
   1bc48:	ldr	r3, [r3]
   1bc4c:	add	r2, r3, #31
   1bc50:	cmp	r3, #0
   1bc54:	movlt	r3, r2
   1bc58:	movge	r3, r3
   1bc5c:	asr	r3, r3, #5
   1bc60:	mov	r2, r3
   1bc64:	ldr	r3, [pc, #148]	; 1bd00 <select_update_selectfds+0x404>
   1bc68:	add	r3, pc, r3
   1bc6c:	ldr	r1, [r3, r2, lsl #2]
   1bc70:	ldr	r3, [pc, #140]	; 1bd04 <select_update_selectfds+0x408>
   1bc74:	add	r3, pc, r3
   1bc78:	ldr	r2, [r3]
   1bc7c:	asr	r3, r2, #31
   1bc80:	lsr	r3, r3, #27
   1bc84:	add	r2, r2, r3
   1bc88:	and	r2, r2, #31
   1bc8c:	sub	r3, r2, r3
   1bc90:	mov	r2, r3
   1bc94:	mov	r3, #1
   1bc98:	lsl	r3, r3, r2
   1bc9c:	and	r3, r3, r1
   1bca0:	cmp	r3, #0
   1bca4:	beq	1bba8 <select_update_selectfds+0x2ac>
   1bca8:	nop			; (mov r0, r0)
   1bcac:	add	sp, fp, #0
   1bcb0:	pop	{fp}		; (ldr fp, [sp], #4)
   1bcb4:	bx	lr
   1bcb8:	.word	0x000368a4
   1bcbc:	.word	0x0003686c
   1bcc0:	.word	0x00036828
   1bcc4:	.word	0x000367ec
   1bcc8:	.word	0x00036810
   1bccc:	.word	0x000367d8
   1bcd0:	.word	0x00036794
   1bcd4:	.word	0x00036758
   1bcd8:	.word	0x00018dec
   1bcdc:	.word	0x00018dd0
   1bce0:	.word	0x00018db8
   1bce4:	.word	0x00018da0
   1bce8:	.word	0x00018d90
   1bcec:	.word	0x00018d84
   1bcf0:	.word	0x00018d70
   1bcf4:	.word	0x000365fc
   1bcf8:	.word	0x00018d40
   1bcfc:	.word	0x00018d08
   1bd00:	.word	0x00036614
   1bd04:	.word	0x00018cd8

0001bd08 <rb_setup_fd_select>:
   1bd08:	push	{fp}		; (str fp, [sp, #-4]!)
   1bd0c:	add	fp, sp, #0
   1bd10:	sub	sp, sp, #12
   1bd14:	str	r0, [fp, #-8]
   1bd18:	mov	r3, #0
   1bd1c:	mov	r0, r3
   1bd20:	add	sp, fp, #0
   1bd24:	pop	{fp}		; (ldr fp, [sp], #4)
   1bd28:	bx	lr

0001bd2c <rb_init_netio_select>:
   1bd2c:	push	{fp}		; (str fp, [sp, #-4]!)
   1bd30:	add	fp, sp, #0
   1bd34:	sub	sp, sp, #20
   1bd38:	ldr	r3, [pc, #184]	; 1bdf8 <rb_init_netio_select+0xcc>
   1bd3c:	add	r3, pc, r3
   1bd40:	ldr	r2, [pc, #180]	; 1bdfc <rb_init_netio_select+0xd0>
   1bd44:	ldr	r2, [r3, r2]
   1bd48:	ldr	r2, [r2]
   1bd4c:	cmp	r2, #1024	; 0x400
   1bd50:	ble	1bd64 <rb_init_netio_select+0x38>
   1bd54:	ldr	r2, [pc, #160]	; 1bdfc <rb_init_netio_select+0xd0>
   1bd58:	ldr	r3, [r3, r2]
   1bd5c:	mov	r2, #1024	; 0x400
   1bd60:	str	r2, [r3]
   1bd64:	ldr	r3, [pc, #148]	; 1be00 <rb_init_netio_select+0xd4>
   1bd68:	add	r3, pc, r3
   1bd6c:	str	r3, [fp, #-16]
   1bd70:	mov	r3, #0
   1bd74:	str	r3, [fp, #-8]
   1bd78:	b	1bd98 <rb_init_netio_select+0x6c>
   1bd7c:	ldr	r3, [fp, #-16]
   1bd80:	ldr	r2, [fp, #-8]
   1bd84:	mov	r1, #0
   1bd88:	str	r1, [r3, r2, lsl #2]
   1bd8c:	ldr	r3, [fp, #-8]
   1bd90:	add	r3, r3, #1
   1bd94:	str	r3, [fp, #-8]
   1bd98:	ldr	r3, [fp, #-8]
   1bd9c:	cmp	r3, #31
   1bda0:	bls	1bd7c <rb_init_netio_select+0x50>
   1bda4:	ldr	r3, [pc, #88]	; 1be04 <rb_init_netio_select+0xd8>
   1bda8:	add	r3, pc, r3
   1bdac:	str	r3, [fp, #-20]	; 0xffffffec
   1bdb0:	mov	r3, #0
   1bdb4:	str	r3, [fp, #-12]
   1bdb8:	b	1bdd8 <rb_init_netio_select+0xac>
   1bdbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bdc0:	ldr	r2, [fp, #-12]
   1bdc4:	mov	r1, #0
   1bdc8:	str	r1, [r3, r2, lsl #2]
   1bdcc:	ldr	r3, [fp, #-12]
   1bdd0:	add	r3, r3, #1
   1bdd4:	str	r3, [fp, #-12]
   1bdd8:	ldr	r3, [fp, #-12]
   1bddc:	cmp	r3, #31
   1bde0:	bls	1bdbc <rb_init_netio_select+0x90>
   1bde4:	mov	r3, #0
   1bde8:	mov	r0, r3
   1bdec:	add	sp, fp, #0
   1bdf0:	pop	{fp}		; (ldr fp, [sp], #4)
   1bdf4:	bx	lr
   1bdf8:	.word	0x000182bc
   1bdfc:	.word	0x000003ac
   1be00:	.word	0x00036494
   1be04:	.word	0x000364d4

0001be08 <rb_setselect_select>:
   1be08:	push	{fp, lr}
   1be0c:	add	fp, sp, #4
   1be10:	sub	sp, sp, #16
   1be14:	str	r0, [fp, #-8]
   1be18:	str	r1, [fp, #-12]
   1be1c:	str	r2, [fp, #-16]
   1be20:	str	r3, [fp, #-20]	; 0xffffffec
   1be24:	ldr	r3, [fp, #-12]
   1be28:	and	r3, r3, #1
   1be2c:	cmp	r3, #0
   1be30:	beq	1be5c <rb_setselect_select+0x54>
   1be34:	ldr	r3, [fp, #-8]
   1be38:	ldr	r2, [fp, #-16]
   1be3c:	str	r2, [r3, #28]
   1be40:	ldr	r3, [fp, #-8]
   1be44:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be48:	str	r2, [r3, #32]
   1be4c:	ldr	r2, [fp, #-16]
   1be50:	mov	r1, #1
   1be54:	ldr	r0, [fp, #-8]
   1be58:	bl	1b8fc <select_update_selectfds>
   1be5c:	ldr	r3, [fp, #-12]
   1be60:	and	r3, r3, #2
   1be64:	cmp	r3, #0
   1be68:	beq	1be94 <rb_setselect_select+0x8c>
   1be6c:	ldr	r3, [fp, #-8]
   1be70:	ldr	r2, [fp, #-16]
   1be74:	str	r2, [r3, #36]	; 0x24
   1be78:	ldr	r3, [fp, #-8]
   1be7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be80:	str	r2, [r3, #40]	; 0x28
   1be84:	ldr	r2, [fp, #-16]
   1be88:	mov	r1, #2
   1be8c:	ldr	r0, [fp, #-8]
   1be90:	bl	1b8fc <select_update_selectfds>
   1be94:	nop			; (mov r0, r0)
   1be98:	sub	sp, fp, #4
   1be9c:	pop	{fp, pc}

0001bea0 <rb_select_select>:
   1bea0:	push	{fp, lr}
   1bea4:	add	fp, sp, #4
   1bea8:	sub	sp, sp, #40	; 0x28
   1beac:	str	r0, [fp, #-32]	; 0xffffffe0
   1beb0:	ldr	r2, [pc, #716]	; 1c184 <rb_select_select+0x2e4>
   1beb4:	add	r2, pc, r2
   1beb8:	ldr	r3, [pc, #712]	; 1c188 <rb_select_select+0x2e8>
   1bebc:	add	r3, pc, r3
   1bec0:	mov	r0, r2
   1bec4:	mov	r1, r3
   1bec8:	mov	r3, #128	; 0x80
   1becc:	mov	r2, r3
   1bed0:	bl	4880 <memcpy@plt>
   1bed4:	ldr	r2, [pc, #688]	; 1c18c <rb_select_select+0x2ec>
   1bed8:	add	r2, pc, r2
   1bedc:	ldr	r3, [pc, #684]	; 1c190 <rb_select_select+0x2f0>
   1bee0:	add	r3, pc, r3
   1bee4:	mov	r0, r2
   1bee8:	mov	r1, r3
   1beec:	mov	r3, #128	; 0x80
   1bef0:	mov	r2, r3
   1bef4:	bl	4880 <memcpy@plt>
   1bef8:	mov	r3, #0
   1befc:	str	r3, [fp, #-28]	; 0xffffffe4
   1bf00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bf04:	mov	r2, #1000	; 0x3e8
   1bf08:	mul	r3, r2, r3
   1bf0c:	str	r3, [fp, #-24]	; 0xffffffe8
   1bf10:	ldr	r3, [pc, #636]	; 1c194 <rb_select_select+0x2f4>
   1bf14:	add	r3, pc, r3
   1bf18:	ldr	r3, [r3]
   1bf1c:	add	r0, r3, #1
   1bf20:	sub	r3, fp, #28
   1bf24:	str	r3, [sp]
   1bf28:	mov	r3, #0
   1bf2c:	ldr	r2, [pc, #612]	; 1c198 <rb_select_select+0x2f8>
   1bf30:	add	r2, pc, r2
   1bf34:	ldr	r1, [pc, #608]	; 1c19c <rb_select_select+0x2fc>
   1bf38:	add	r1, pc, r1
   1bf3c:	bl	49ac <select@plt>
   1bf40:	str	r0, [fp, #-12]
   1bf44:	ldr	r3, [fp, #-12]
   1bf48:	cmp	r3, #0
   1bf4c:	bge	1bf80 <rb_select_select+0xe0>
   1bf50:	bl	4d78 <__errno_location@plt>
   1bf54:	mov	r3, r0
   1bf58:	ldr	r3, [r3]
   1bf5c:	mov	r0, r3
   1bf60:	bl	4448 <rb_ignore_errno@plt>
   1bf64:	mov	r3, r0
   1bf68:	cmp	r3, #0
   1bf6c:	beq	1bf74 <rb_select_select+0xd4>
   1bf70:	b	1bef8 <rb_select_select+0x58>
   1bf74:	bl	4a0c <rb_set_time@plt>
   1bf78:	mvn	r3, #0
   1bf7c:	b	1c178 <rb_select_select+0x2d8>
   1bf80:	nop			; (mov r0, r0)
   1bf84:	bl	4a0c <rb_set_time@plt>
   1bf88:	ldr	r3, [fp, #-12]
   1bf8c:	cmp	r3, #0
   1bf90:	bne	1bf9c <rb_select_select+0xfc>
   1bf94:	mov	r3, #0
   1bf98:	b	1c178 <rb_select_select+0x2d8>
   1bf9c:	mov	r3, #0
   1bfa0:	str	r3, [fp, #-8]
   1bfa4:	b	1c158 <rb_select_select+0x2b8>
   1bfa8:	ldr	r0, [fp, #-8]
   1bfac:	bl	1b7fc <rb_find_fd>
   1bfb0:	str	r0, [fp, #-16]
   1bfb4:	ldr	r3, [fp, #-16]
   1bfb8:	cmp	r3, #0
   1bfbc:	beq	1c140 <rb_select_select+0x2a0>
   1bfc0:	ldr	r3, [fp, #-8]
   1bfc4:	add	r2, r3, #31
   1bfc8:	cmp	r3, #0
   1bfcc:	movlt	r3, r2
   1bfd0:	movge	r3, r3
   1bfd4:	asr	r3, r3, #5
   1bfd8:	mov	r2, r3
   1bfdc:	ldr	r3, [pc, #444]	; 1c1a0 <rb_select_select+0x300>
   1bfe0:	add	r3, pc, r3
   1bfe4:	ldr	r1, [r3, r2, lsl #2]
   1bfe8:	ldr	r2, [fp, #-8]
   1bfec:	asr	r3, r2, #31
   1bff0:	lsr	r3, r3, #27
   1bff4:	add	r2, r2, r3
   1bff8:	and	r2, r2, #31
   1bffc:	sub	r3, r2, r3
   1c000:	mov	r2, r3
   1c004:	mov	r3, #1
   1c008:	lsl	r3, r3, r2
   1c00c:	and	r3, r3, r1
   1c010:	cmp	r3, #0
   1c014:	beq	1c054 <rb_select_select+0x1b4>
   1c018:	ldr	r3, [fp, #-16]
   1c01c:	ldr	r3, [r3, #28]
   1c020:	str	r3, [fp, #-20]	; 0xffffffec
   1c024:	ldr	r3, [fp, #-16]
   1c028:	mov	r2, #0
   1c02c:	str	r2, [r3, #28]
   1c030:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c034:	cmp	r3, #0
   1c038:	beq	1c054 <rb_select_select+0x1b4>
   1c03c:	ldr	r3, [fp, #-16]
   1c040:	ldr	r2, [r3, #32]
   1c044:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c048:	mov	r1, r2
   1c04c:	ldr	r0, [fp, #-16]
   1c050:	blx	r3
   1c054:	ldr	r3, [fp, #-16]
   1c058:	ldrb	r3, [r3, #16]
   1c05c:	and	r3, r3, #1
   1c060:	cmp	r3, #0
   1c064:	beq	1c148 <rb_select_select+0x2a8>
   1c068:	ldr	r3, [fp, #-8]
   1c06c:	add	r2, r3, #31
   1c070:	cmp	r3, #0
   1c074:	movlt	r3, r2
   1c078:	movge	r3, r3
   1c07c:	asr	r3, r3, #5
   1c080:	mov	r2, r3
   1c084:	ldr	r3, [pc, #280]	; 1c1a4 <rb_select_select+0x304>
   1c088:	add	r3, pc, r3
   1c08c:	ldr	r1, [r3, r2, lsl #2]
   1c090:	ldr	r2, [fp, #-8]
   1c094:	asr	r3, r2, #31
   1c098:	lsr	r3, r3, #27
   1c09c:	add	r2, r2, r3
   1c0a0:	and	r2, r2, #31
   1c0a4:	sub	r3, r2, r3
   1c0a8:	mov	r2, r3
   1c0ac:	mov	r3, #1
   1c0b0:	lsl	r3, r3, r2
   1c0b4:	and	r3, r3, r1
   1c0b8:	cmp	r3, #0
   1c0bc:	beq	1c0fc <rb_select_select+0x25c>
   1c0c0:	ldr	r3, [fp, #-16]
   1c0c4:	ldr	r3, [r3, #36]	; 0x24
   1c0c8:	str	r3, [fp, #-20]	; 0xffffffec
   1c0cc:	ldr	r3, [fp, #-16]
   1c0d0:	mov	r2, #0
   1c0d4:	str	r2, [r3, #36]	; 0x24
   1c0d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0dc:	cmp	r3, #0
   1c0e0:	beq	1c0fc <rb_select_select+0x25c>
   1c0e4:	ldr	r3, [fp, #-16]
   1c0e8:	ldr	r2, [r3, #40]	; 0x28
   1c0ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0f0:	mov	r1, r2
   1c0f4:	ldr	r0, [fp, #-16]
   1c0f8:	blx	r3
   1c0fc:	ldr	r3, [fp, #-16]
   1c100:	ldr	r3, [r3, #28]
   1c104:	cmp	r3, #0
   1c108:	bne	1c11c <rb_select_select+0x27c>
   1c10c:	mov	r2, #0
   1c110:	mov	r1, #1
   1c114:	ldr	r0, [fp, #-16]
   1c118:	bl	1b8fc <select_update_selectfds>
   1c11c:	ldr	r3, [fp, #-16]
   1c120:	ldr	r3, [r3, #36]	; 0x24
   1c124:	cmp	r3, #0
   1c128:	bne	1c14c <rb_select_select+0x2ac>
   1c12c:	mov	r2, #0
   1c130:	mov	r1, #2
   1c134:	ldr	r0, [fp, #-16]
   1c138:	bl	1b8fc <select_update_selectfds>
   1c13c:	b	1c14c <rb_select_select+0x2ac>
   1c140:	nop			; (mov r0, r0)
   1c144:	b	1c14c <rb_select_select+0x2ac>
   1c148:	nop			; (mov r0, r0)
   1c14c:	ldr	r3, [fp, #-8]
   1c150:	add	r3, r3, #1
   1c154:	str	r3, [fp, #-8]
   1c158:	ldr	r3, [pc, #72]	; 1c1a8 <rb_select_select+0x308>
   1c15c:	add	r3, pc, r3
   1c160:	ldr	r3, [r3]
   1c164:	add	r2, r3, #1
   1c168:	ldr	r3, [fp, #-8]
   1c16c:	cmp	r2, r3
   1c170:	bgt	1bfa8 <rb_select_select+0x108>
   1c174:	mov	r3, #0
   1c178:	mov	r0, r3
   1c17c:	sub	sp, fp, #4
   1c180:	pop	{fp, pc}
   1c184:	.word	0x00036448
   1c188:	.word	0x00036340
   1c18c:	.word	0x000364a4
   1c190:	.word	0x0003639c
   1c194:	.word	0x00018a38
   1c198:	.word	0x0003644c
   1c19c:	.word	0x000363c4
   1c1a0:	.word	0x0003631c
   1c1a4:	.word	0x000362f4
   1c1a8:	.word	0x000187f0

0001c1ac <rb_init_netio_kqueue>:
   1c1ac:	push	{fp, lr}
   1c1b0:	add	fp, sp, #4
   1c1b4:	bl	4d78 <__errno_location@plt>
   1c1b8:	mov	r2, r0
   1c1bc:	mov	r3, #38	; 0x26
   1c1c0:	str	r3, [r2]
   1c1c4:	mvn	r3, #0
   1c1c8:	mov	r0, r3
   1c1cc:	pop	{fp, pc}

0001c1d0 <rb_setselect_kqueue>:
   1c1d0:	push	{fp, lr}
   1c1d4:	add	fp, sp, #4
   1c1d8:	sub	sp, sp, #16
   1c1dc:	str	r0, [fp, #-8]
   1c1e0:	str	r1, [fp, #-12]
   1c1e4:	str	r2, [fp, #-16]
   1c1e8:	str	r3, [fp, #-20]	; 0xffffffec
   1c1ec:	bl	4d78 <__errno_location@plt>
   1c1f0:	mov	r2, r0
   1c1f4:	mov	r3, #38	; 0x26
   1c1f8:	str	r3, [r2]
   1c1fc:	nop			; (mov r0, r0)
   1c200:	sub	sp, fp, #4
   1c204:	pop	{fp, pc}

0001c208 <rb_select_kqueue>:
   1c208:	push	{fp, lr}
   1c20c:	add	fp, sp, #4
   1c210:	sub	sp, sp, #8
   1c214:	str	r0, [fp, #-8]
   1c218:	bl	4d78 <__errno_location@plt>
   1c21c:	mov	r2, r0
   1c220:	mov	r3, #38	; 0x26
   1c224:	str	r3, [r2]
   1c228:	mvn	r3, #0
   1c22c:	mov	r0, r3
   1c230:	sub	sp, fp, #4
   1c234:	pop	{fp, pc}

0001c238 <rb_setup_fd_kqueue>:
   1c238:	push	{fp, lr}
   1c23c:	add	fp, sp, #4
   1c240:	sub	sp, sp, #8
   1c244:	str	r0, [fp, #-8]
   1c248:	bl	4d78 <__errno_location@plt>
   1c24c:	mov	r2, r0
   1c250:	mov	r3, #38	; 0x26
   1c254:	str	r3, [r2]
   1c258:	mvn	r3, #0
   1c25c:	mov	r0, r3
   1c260:	sub	sp, fp, #4
   1c264:	pop	{fp, pc}

0001c268 <rb_kqueue_init_event>:
   1c268:	push	{fp}		; (str fp, [sp, #-4]!)
   1c26c:	add	fp, sp, #0
   1c270:	nop			; (mov r0, r0)
   1c274:	add	sp, fp, #0
   1c278:	pop	{fp}		; (ldr fp, [sp], #4)
   1c27c:	bx	lr

0001c280 <rb_kqueue_sched_event>:
   1c280:	push	{fp, lr}
   1c284:	add	fp, sp, #4
   1c288:	sub	sp, sp, #8
   1c28c:	str	r0, [fp, #-8]
   1c290:	str	r1, [fp, #-12]
   1c294:	bl	4d78 <__errno_location@plt>
   1c298:	mov	r2, r0
   1c29c:	mov	r3, #38	; 0x26
   1c2a0:	str	r3, [r2]
   1c2a4:	mvn	r3, #0
   1c2a8:	mov	r0, r3
   1c2ac:	sub	sp, fp, #4
   1c2b0:	pop	{fp, pc}

0001c2b4 <rb_kqueue_unsched_event>:
   1c2b4:	push	{fp}		; (str fp, [sp, #-4]!)
   1c2b8:	add	fp, sp, #0
   1c2bc:	sub	sp, sp, #12
   1c2c0:	str	r0, [fp, #-8]
   1c2c4:	nop			; (mov r0, r0)
   1c2c8:	add	sp, fp, #0
   1c2cc:	pop	{fp}		; (ldr fp, [sp], #4)
   1c2d0:	bx	lr

0001c2d4 <rb_kqueue_supports_event>:
   1c2d4:	push	{fp, lr}
   1c2d8:	add	fp, sp, #4
   1c2dc:	bl	4d78 <__errno_location@plt>
   1c2e0:	mov	r2, r0
   1c2e4:	mov	r3, #38	; 0x26
   1c2e8:	str	r3, [r2]
   1c2ec:	mov	r3, #0
   1c2f0:	mov	r0, r3
   1c2f4:	pop	{fp, pc}

0001c2f8 <rb_dlinkAddTail>:
   1c2f8:	push	{fp}		; (str fp, [sp, #-4]!)
   1c2fc:	add	fp, sp, #0
   1c300:	sub	sp, sp, #20
   1c304:	str	r0, [fp, #-8]
   1c308:	str	r1, [fp, #-12]
   1c30c:	str	r2, [fp, #-16]
   1c310:	ldr	r3, [fp, #-12]
   1c314:	ldr	r2, [fp, #-8]
   1c318:	str	r2, [r3]
   1c31c:	ldr	r3, [fp, #-12]
   1c320:	mov	r2, #0
   1c324:	str	r2, [r3, #8]
   1c328:	ldr	r3, [fp, #-16]
   1c32c:	ldr	r2, [r3, #4]
   1c330:	ldr	r3, [fp, #-12]
   1c334:	str	r2, [r3, #4]
   1c338:	ldr	r3, [fp, #-16]
   1c33c:	ldr	r3, [r3, #4]
   1c340:	cmp	r3, #0
   1c344:	beq	1c35c <rb_dlinkAddTail+0x64>
   1c348:	ldr	r3, [fp, #-16]
   1c34c:	ldr	r3, [r3, #4]
   1c350:	ldr	r2, [fp, #-12]
   1c354:	str	r2, [r3, #8]
   1c358:	b	1c378 <rb_dlinkAddTail+0x80>
   1c35c:	ldr	r3, [fp, #-16]
   1c360:	ldr	r3, [r3]
   1c364:	cmp	r3, #0
   1c368:	bne	1c378 <rb_dlinkAddTail+0x80>
   1c36c:	ldr	r3, [fp, #-16]
   1c370:	ldr	r2, [fp, #-12]
   1c374:	str	r2, [r3]
   1c378:	ldr	r3, [fp, #-16]
   1c37c:	ldr	r2, [fp, #-12]
   1c380:	str	r2, [r3, #4]
   1c384:	ldr	r3, [fp, #-16]
   1c388:	ldr	r3, [r3, #8]
   1c38c:	add	r2, r3, #1
   1c390:	ldr	r3, [fp, #-16]
   1c394:	str	r2, [r3, #8]
   1c398:	nop			; (mov r0, r0)
   1c39c:	add	sp, fp, #0
   1c3a0:	pop	{fp}		; (ldr fp, [sp], #4)
   1c3a4:	bx	lr

0001c3a8 <rb_dlinkDelete>:
   1c3a8:	push	{fp}		; (str fp, [sp, #-4]!)
   1c3ac:	add	fp, sp, #0
   1c3b0:	sub	sp, sp, #12
   1c3b4:	str	r0, [fp, #-8]
   1c3b8:	str	r1, [fp, #-12]
   1c3bc:	ldr	r3, [fp, #-8]
   1c3c0:	ldr	r3, [r3, #8]
   1c3c4:	cmp	r3, #0
   1c3c8:	beq	1c3e4 <rb_dlinkDelete+0x3c>
   1c3cc:	ldr	r3, [fp, #-8]
   1c3d0:	ldr	r3, [r3, #8]
   1c3d4:	ldr	r2, [fp, #-8]
   1c3d8:	ldr	r2, [r2, #4]
   1c3dc:	str	r2, [r3, #4]
   1c3e0:	b	1c3f4 <rb_dlinkDelete+0x4c>
   1c3e4:	ldr	r3, [fp, #-8]
   1c3e8:	ldr	r2, [r3, #4]
   1c3ec:	ldr	r3, [fp, #-12]
   1c3f0:	str	r2, [r3, #4]
   1c3f4:	ldr	r3, [fp, #-8]
   1c3f8:	ldr	r3, [r3, #4]
   1c3fc:	cmp	r3, #0
   1c400:	beq	1c41c <rb_dlinkDelete+0x74>
   1c404:	ldr	r3, [fp, #-8]
   1c408:	ldr	r3, [r3, #4]
   1c40c:	ldr	r2, [fp, #-8]
   1c410:	ldr	r2, [r2, #8]
   1c414:	str	r2, [r3, #8]
   1c418:	b	1c42c <rb_dlinkDelete+0x84>
   1c41c:	ldr	r3, [fp, #-8]
   1c420:	ldr	r2, [r3, #8]
   1c424:	ldr	r3, [fp, #-12]
   1c428:	str	r2, [r3]
   1c42c:	ldr	r3, [fp, #-8]
   1c430:	mov	r2, #0
   1c434:	str	r2, [r3, #4]
   1c438:	ldr	r3, [fp, #-8]
   1c43c:	ldr	r2, [r3, #4]
   1c440:	ldr	r3, [fp, #-8]
   1c444:	str	r2, [r3, #8]
   1c448:	ldr	r3, [fp, #-12]
   1c44c:	ldr	r3, [r3, #8]
   1c450:	sub	r2, r3, #1
   1c454:	ldr	r3, [fp, #-12]
   1c458:	str	r2, [r3, #8]
   1c45c:	nop			; (mov r0, r0)
   1c460:	add	sp, fp, #0
   1c464:	pop	{fp}		; (ldr fp, [sp], #4)
   1c468:	bx	lr

0001c46c <rb_malloc>:
   1c46c:	push	{fp, lr}
   1c470:	add	fp, sp, #4
   1c474:	sub	sp, sp, #16
   1c478:	str	r0, [fp, #-16]
   1c47c:	ldr	r1, [fp, #-16]
   1c480:	mov	r0, #1
   1c484:	bl	4658 <calloc@plt>
   1c488:	mov	r3, r0
   1c48c:	str	r3, [fp, #-8]
   1c490:	ldr	r3, [fp, #-8]
   1c494:	cmp	r3, #0
   1c498:	moveq	r3, #1
   1c49c:	movne	r3, #0
   1c4a0:	uxtb	r3, r3
   1c4a4:	cmp	r3, #0
   1c4a8:	beq	1c4b0 <rb_malloc+0x44>
   1c4ac:	bl	4a00 <rb_outofmemory@plt>
   1c4b0:	ldr	r3, [fp, #-8]
   1c4b4:	mov	r0, r3
   1c4b8:	sub	sp, fp, #4
   1c4bc:	pop	{fp, pc}

0001c4c0 <rb_free>:
   1c4c0:	push	{fp, lr}
   1c4c4:	add	fp, sp, #4
   1c4c8:	sub	sp, sp, #8
   1c4cc:	str	r0, [fp, #-8]
   1c4d0:	ldr	r3, [fp, #-8]
   1c4d4:	cmp	r3, #0
   1c4d8:	movne	r3, #1
   1c4dc:	moveq	r3, #0
   1c4e0:	uxtb	r3, r3
   1c4e4:	cmp	r3, #0
   1c4e8:	beq	1c4f4 <rb_free+0x34>
   1c4ec:	ldr	r0, [fp, #-8]
   1c4f0:	bl	476c <free@plt>
   1c4f4:	nop			; (mov r0, r0)
   1c4f8:	sub	sp, fp, #4
   1c4fc:	pop	{fp, pc}

0001c500 <rb_rawbuf_alloc>:
   1c500:	push	{fp, lr}
   1c504:	add	fp, sp, #4
   1c508:	sub	sp, sp, #8
   1c50c:	ldr	r3, [pc, #32]	; 1c534 <rb_rawbuf_alloc+0x34>
   1c510:	add	r3, pc, r3
   1c514:	ldr	r3, [r3]
   1c518:	mov	r0, r3
   1c51c:	bl	49d0 <rb_bh_alloc@plt>
   1c520:	str	r0, [fp, #-8]
   1c524:	ldr	r3, [fp, #-8]
   1c528:	mov	r0, r3
   1c52c:	sub	sp, fp, #4
   1c530:	pop	{fp, pc}
   1c534:	.word	0x00035eec

0001c538 <rb_rawbuf_newbuf>:
   1c538:	push	{fp, lr}
   1c53c:	add	fp, sp, #4
   1c540:	sub	sp, sp, #16
   1c544:	str	r0, [fp, #-16]
   1c548:	bl	1c500 <rb_rawbuf_alloc>
   1c54c:	str	r0, [fp, #-8]
   1c550:	ldr	r3, [fp, #-8]
   1c554:	ldr	r2, [fp, #-16]
   1c558:	mov	r1, r3
   1c55c:	ldr	r0, [fp, #-8]
   1c560:	bl	1c2f8 <rb_dlinkAddTail>
   1c564:	ldr	r3, [fp, #-8]
   1c568:	mov	r0, r3
   1c56c:	sub	sp, fp, #4
   1c570:	pop	{fp, pc}

0001c574 <rb_rawbuf_done>:
   1c574:	push	{fp, lr}
   1c578:	add	fp, sp, #4
   1c57c:	sub	sp, sp, #16
   1c580:	str	r0, [fp, #-16]
   1c584:	str	r1, [fp, #-20]	; 0xffffffec
   1c588:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c58c:	str	r3, [fp, #-8]
   1c590:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c594:	ldr	r2, [fp, #-16]
   1c598:	mov	r1, r2
   1c59c:	mov	r0, r3
   1c5a0:	bl	1c3a8 <rb_dlinkDelete>
   1c5a4:	ldr	r3, [pc, #28]	; 1c5c8 <rb_rawbuf_done+0x54>
   1c5a8:	add	r3, pc, r3
   1c5ac:	ldr	r3, [r3]
   1c5b0:	ldr	r1, [fp, #-8]
   1c5b4:	mov	r0, r3
   1c5b8:	bl	4940 <rb_bh_free@plt>
   1c5bc:	nop			; (mov r0, r0)
   1c5c0:	sub	sp, fp, #4
   1c5c4:	pop	{fp, pc}
   1c5c8:	.word	0x00035e54

0001c5cc <rb_rawbuf_flush_writev>:
   1c5cc:	push	{fp, lr}
   1c5d0:	add	fp, sp, #4
   1c5d4:	sub	sp, sp, #8192	; 0x2000
   1c5d8:	sub	sp, sp, #40	; 0x28
   1c5dc:	sub	r3, fp, #8192	; 0x2000
   1c5e0:	sub	r3, r3, #4
   1c5e4:	str	r0, [r3, #-36]	; 0xffffffdc
   1c5e8:	sub	r3, fp, #8192	; 0x2000
   1c5ec:	sub	r3, r3, #4
   1c5f0:	str	r1, [r3, #-40]	; 0xffffffd8
   1c5f4:	mov	r3, #0
   1c5f8:	str	r3, [fp, #-16]
   1c5fc:	mov	r3, #0
   1c600:	str	r3, [fp, #-20]	; 0xffffffec
   1c604:	sub	r3, fp, #8192	; 0x2000
   1c608:	sub	r3, r3, #4
   1c60c:	sub	r3, r3, #28
   1c610:	mov	r2, #8192	; 0x2000
   1c614:	mov	r1, #0
   1c618:	mov	r0, r3
   1c61c:	bl	4694 <memset@plt>
   1c620:	sub	r3, fp, #8192	; 0x2000
   1c624:	sub	r3, r3, #4
   1c628:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c62c:	ldr	r3, [r3]
   1c630:	cmp	r3, #0
   1c634:	bne	1c650 <rb_rawbuf_flush_writev+0x84>
   1c638:	bl	4d78 <__errno_location@plt>
   1c63c:	mov	r2, r0
   1c640:	mov	r3, #11
   1c644:	str	r3, [r2]
   1c648:	mvn	r3, #0
   1c64c:	b	1c9ec <rb_rawbuf_flush_writev+0x420>
   1c650:	sub	r3, fp, #8192	; 0x2000
   1c654:	sub	r3, r3, #4
   1c658:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c65c:	ldr	r3, [r3]
   1c660:	str	r3, [fp, #-8]
   1c664:	b	1c760 <rb_rawbuf_flush_writev+0x194>
   1c668:	ldr	r3, [fp, #-16]
   1c66c:	cmp	r3, #1024	; 0x400
   1c670:	bge	1c770 <rb_rawbuf_flush_writev+0x1a4>
   1c674:	ldr	r3, [fp, #-8]
   1c678:	ldr	r3, [r3]
   1c67c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c680:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c684:	ldrb	r3, [r3, #1040]	; 0x410
   1c688:	cmp	r3, #0
   1c68c:	beq	1c708 <rb_rawbuf_flush_writev+0x13c>
   1c690:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c694:	add	r3, r3, #12
   1c698:	sub	r2, fp, #8192	; 0x2000
   1c69c:	sub	r2, r2, #4
   1c6a0:	ldr	r2, [r2, #-36]	; 0xffffffdc
   1c6a4:	ldr	r2, [r2, #16]
   1c6a8:	add	r2, r3, r2
   1c6ac:	sub	r3, fp, #8192	; 0x2000
   1c6b0:	sub	r3, r3, #4
   1c6b4:	mov	r1, r3
   1c6b8:	ldr	r3, [fp, #-16]
   1c6bc:	lsl	r3, r3, #3
   1c6c0:	add	r3, r1, r3
   1c6c4:	str	r2, [r3, #-28]	; 0xffffffe4
   1c6c8:	ldr	r3, [fp, #-16]
   1c6cc:	add	r2, r3, #1
   1c6d0:	str	r2, [fp, #-16]
   1c6d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c6d8:	ldr	r1, [r2, #1036]	; 0x40c
   1c6dc:	sub	r2, fp, #8192	; 0x2000
   1c6e0:	sub	r2, r2, #4
   1c6e4:	ldr	r2, [r2, #-36]	; 0xffffffdc
   1c6e8:	ldr	r2, [r2, #16]
   1c6ec:	sub	r2, r1, r2
   1c6f0:	sub	r1, fp, #8192	; 0x2000
   1c6f4:	sub	r1, r1, #4
   1c6f8:	lsl	r3, r3, #3
   1c6fc:	add	r3, r1, r3
   1c700:	str	r2, [r3, #-24]	; 0xffffffe8
   1c704:	b	1c754 <rb_rawbuf_flush_writev+0x188>
   1c708:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c70c:	add	r2, r3, #12
   1c710:	sub	r3, fp, #8192	; 0x2000
   1c714:	sub	r3, r3, #4
   1c718:	mov	r1, r3
   1c71c:	ldr	r3, [fp, #-16]
   1c720:	lsl	r3, r3, #3
   1c724:	add	r3, r1, r3
   1c728:	str	r2, [r3, #-28]	; 0xffffffe4
   1c72c:	ldr	r3, [fp, #-16]
   1c730:	add	r2, r3, #1
   1c734:	str	r2, [fp, #-16]
   1c738:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c73c:	ldr	r2, [r2, #1036]	; 0x40c
   1c740:	sub	r1, fp, #8192	; 0x2000
   1c744:	sub	r1, r1, #4
   1c748:	lsl	r3, r3, #3
   1c74c:	add	r3, r1, r3
   1c750:	str	r2, [r3, #-24]	; 0xffffffe8
   1c754:	ldr	r3, [fp, #-8]
   1c758:	ldr	r3, [r3, #8]
   1c75c:	str	r3, [fp, #-8]
   1c760:	ldr	r3, [fp, #-8]
   1c764:	cmp	r3, #0
   1c768:	bne	1c668 <rb_rawbuf_flush_writev+0x9c>
   1c76c:	b	1c774 <rb_rawbuf_flush_writev+0x1a8>
   1c770:	nop			; (mov r0, r0)
   1c774:	ldr	r3, [fp, #-16]
   1c778:	cmp	r3, #0
   1c77c:	bne	1c798 <rb_rawbuf_flush_writev+0x1cc>
   1c780:	bl	4d78 <__errno_location@plt>
   1c784:	mov	r2, r0
   1c788:	mov	r3, #11
   1c78c:	str	r3, [r2]
   1c790:	mvn	r3, #0
   1c794:	b	1c9ec <rb_rawbuf_flush_writev+0x420>
   1c798:	sub	r3, fp, #8192	; 0x2000
   1c79c:	sub	r3, r3, #4
   1c7a0:	sub	r3, r3, #28
   1c7a4:	sub	r2, fp, #8192	; 0x2000
   1c7a8:	sub	r2, r2, #4
   1c7ac:	mov	r0, r2
   1c7b0:	ldr	r2, [fp, #-16]
   1c7b4:	mov	r1, r3
   1c7b8:	ldr	r0, [r0, #-40]	; 0xffffffd8
   1c7bc:	bl	4b50 <rb_writev@plt>
   1c7c0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c7c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c7c8:	str	r3, [fp, #-24]	; 0xffffffe8
   1c7cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c7d0:	cmp	r3, #0
   1c7d4:	bgt	1c7e0 <rb_rawbuf_flush_writev+0x214>
   1c7d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c7dc:	b	1c9ec <rb_rawbuf_flush_writev+0x420>
   1c7e0:	sub	r3, fp, #8192	; 0x2000
   1c7e4:	sub	r3, r3, #4
   1c7e8:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c7ec:	ldr	r3, [r3]
   1c7f0:	str	r3, [fp, #-8]
   1c7f4:	ldr	r3, [fp, #-8]
   1c7f8:	cmp	r3, #0
   1c7fc:	beq	1c80c <rb_rawbuf_flush_writev+0x240>
   1c800:	ldr	r3, [fp, #-8]
   1c804:	ldr	r3, [r3, #8]
   1c808:	b	1c810 <rb_rawbuf_flush_writev+0x244>
   1c80c:	mov	r3, #0
   1c810:	str	r3, [fp, #-12]
   1c814:	b	1c9d4 <rb_rawbuf_flush_writev+0x408>
   1c818:	ldr	r3, [fp, #-8]
   1c81c:	ldr	r3, [r3]
   1c820:	str	r3, [fp, #-28]	; 0xffffffe4
   1c824:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c828:	add	r2, r3, #1
   1c82c:	str	r2, [fp, #-20]	; 0xffffffec
   1c830:	ldr	r2, [fp, #-16]
   1c834:	cmp	r3, r2
   1c838:	bge	1c9e4 <rb_rawbuf_flush_writev+0x418>
   1c83c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c840:	ldrb	r3, [r3, #1040]	; 0x410
   1c844:	cmp	r3, #0
   1c848:	beq	1c8f4 <rb_rawbuf_flush_writev+0x328>
   1c84c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c850:	ldr	r2, [r3, #1036]	; 0x40c
   1c854:	sub	r3, fp, #8192	; 0x2000
   1c858:	sub	r3, r3, #4
   1c85c:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c860:	ldr	r3, [r3, #16]
   1c864:	sub	r2, r2, r3
   1c868:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c86c:	cmp	r2, r3
   1c870:	bgt	1c8f4 <rb_rawbuf_flush_writev+0x328>
   1c874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c878:	ldr	r2, [r3, #1036]	; 0x40c
   1c87c:	sub	r3, fp, #8192	; 0x2000
   1c880:	sub	r3, r3, #4
   1c884:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c888:	ldr	r3, [r3, #16]
   1c88c:	sub	r3, r2, r3
   1c890:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c894:	sub	r3, r2, r3
   1c898:	str	r3, [fp, #-24]	; 0xffffffe8
   1c89c:	sub	r3, fp, #8192	; 0x2000
   1c8a0:	sub	r3, r3, #4
   1c8a4:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c8a8:	ldr	r2, [r3, #12]
   1c8ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c8b0:	ldr	r1, [r3, #1036]	; 0x40c
   1c8b4:	sub	r3, fp, #8192	; 0x2000
   1c8b8:	sub	r3, r3, #4
   1c8bc:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c8c0:	ldr	r3, [r3, #16]
   1c8c4:	sub	r3, r1, r3
   1c8c8:	sub	r2, r2, r3
   1c8cc:	sub	r3, fp, #8192	; 0x2000
   1c8d0:	sub	r3, r3, #4
   1c8d4:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c8d8:	str	r2, [r3, #12]
   1c8dc:	sub	r3, fp, #8192	; 0x2000
   1c8e0:	sub	r3, r3, #4
   1c8e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c8e8:	ldr	r0, [r3, #-36]	; 0xffffffdc
   1c8ec:	bl	1c574 <rb_rawbuf_done>
   1c8f0:	b	1c9ac <rb_rawbuf_flush_writev+0x3e0>
   1c8f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c8f8:	ldr	r2, [r3, #1036]	; 0x40c
   1c8fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c900:	cmp	r2, r3
   1c904:	bgt	1c960 <rb_rawbuf_flush_writev+0x394>
   1c908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c90c:	ldr	r3, [r3, #1036]	; 0x40c
   1c910:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c914:	sub	r3, r2, r3
   1c918:	str	r3, [fp, #-24]	; 0xffffffe8
   1c91c:	sub	r3, fp, #8192	; 0x2000
   1c920:	sub	r3, r3, #4
   1c924:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c928:	ldr	r2, [r3, #12]
   1c92c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c930:	ldr	r3, [r3, #1036]	; 0x40c
   1c934:	sub	r2, r2, r3
   1c938:	sub	r3, fp, #8192	; 0x2000
   1c93c:	sub	r3, r3, #4
   1c940:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c944:	str	r2, [r3, #12]
   1c948:	sub	r3, fp, #8192	; 0x2000
   1c94c:	sub	r3, r3, #4
   1c950:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c954:	ldr	r0, [r3, #-36]	; 0xffffffdc
   1c958:	bl	1c574 <rb_rawbuf_done>
   1c95c:	b	1c9ac <rb_rawbuf_flush_writev+0x3e0>
   1c960:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c964:	mov	r2, #1
   1c968:	strb	r2, [r3, #1040]	; 0x410
   1c96c:	sub	r3, fp, #8192	; 0x2000
   1c970:	sub	r3, r3, #4
   1c974:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c978:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c97c:	str	r2, [r3, #16]
   1c980:	sub	r3, fp, #8192	; 0x2000
   1c984:	sub	r3, r3, #4
   1c988:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c98c:	ldr	r2, [r3, #12]
   1c990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c994:	sub	r2, r2, r3
   1c998:	sub	r3, fp, #8192	; 0x2000
   1c99c:	sub	r3, r3, #4
   1c9a0:	ldr	r3, [r3, #-36]	; 0xffffffdc
   1c9a4:	str	r2, [r3, #12]
   1c9a8:	b	1c9e8 <rb_rawbuf_flush_writev+0x41c>
   1c9ac:	ldr	r3, [fp, #-12]
   1c9b0:	str	r3, [fp, #-8]
   1c9b4:	ldr	r3, [fp, #-8]
   1c9b8:	cmp	r3, #0
   1c9bc:	beq	1c9cc <rb_rawbuf_flush_writev+0x400>
   1c9c0:	ldr	r3, [fp, #-8]
   1c9c4:	ldr	r3, [r3, #8]
   1c9c8:	b	1c9d0 <rb_rawbuf_flush_writev+0x404>
   1c9cc:	mov	r3, #0
   1c9d0:	str	r3, [fp, #-12]
   1c9d4:	ldr	r3, [fp, #-8]
   1c9d8:	cmp	r3, #0
   1c9dc:	bne	1c818 <rb_rawbuf_flush_writev+0x24c>
   1c9e0:	b	1c9e8 <rb_rawbuf_flush_writev+0x41c>
   1c9e4:	nop			; (mov r0, r0)
   1c9e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c9ec:	mov	r0, r3
   1c9f0:	sub	sp, fp, #4
   1c9f4:	pop	{fp, pc}

0001c9f8 <rb_rawbuf_flush>:
   1c9f8:	push	{fp, lr}
   1c9fc:	add	fp, sp, #4
   1ca00:	sub	sp, sp, #16
   1ca04:	str	r0, [fp, #-16]
   1ca08:	str	r1, [fp, #-20]	; 0xffffffec
   1ca0c:	ldr	r3, [fp, #-16]
   1ca10:	ldr	r3, [r3]
   1ca14:	cmp	r3, #0
   1ca18:	bne	1ca34 <rb_rawbuf_flush+0x3c>
   1ca1c:	bl	4d78 <__errno_location@plt>
   1ca20:	mov	r2, r0
   1ca24:	mov	r3, #11
   1ca28:	str	r3, [r2]
   1ca2c:	mvn	r3, #0
   1ca30:	b	1cb64 <rb_rawbuf_flush+0x16c>
   1ca34:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ca38:	bl	4520 <rb_fd_ssl@plt>
   1ca3c:	mov	r3, r0
   1ca40:	cmp	r3, #0
   1ca44:	bne	1ca5c <rb_rawbuf_flush+0x64>
   1ca48:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ca4c:	ldr	r0, [fp, #-16]
   1ca50:	bl	1c5cc <rb_rawbuf_flush_writev>
   1ca54:	mov	r3, r0
   1ca58:	b	1cb64 <rb_rawbuf_flush+0x16c>
   1ca5c:	ldr	r3, [fp, #-16]
   1ca60:	ldr	r3, [r3]
   1ca64:	ldr	r3, [r3]
   1ca68:	str	r3, [fp, #-8]
   1ca6c:	ldr	r3, [fp, #-8]
   1ca70:	ldrb	r3, [r3, #1040]	; 0x410
   1ca74:	cmp	r3, #0
   1ca78:	bne	1ca94 <rb_rawbuf_flush+0x9c>
   1ca7c:	ldr	r3, [fp, #-8]
   1ca80:	mov	r2, #1
   1ca84:	strb	r2, [r3, #1040]	; 0x410
   1ca88:	ldr	r3, [fp, #-16]
   1ca8c:	mov	r2, #0
   1ca90:	str	r2, [r3, #16]
   1ca94:	ldr	r3, [fp, #-8]
   1ca98:	add	r3, r3, #12
   1ca9c:	ldr	r2, [fp, #-16]
   1caa0:	ldr	r2, [r2, #16]
   1caa4:	add	r1, r3, r2
   1caa8:	ldr	r3, [fp, #-8]
   1caac:	ldr	r2, [r3, #1036]	; 0x40c
   1cab0:	ldr	r3, [fp, #-16]
   1cab4:	ldr	r3, [r3, #16]
   1cab8:	sub	r3, r2, r3
   1cabc:	mov	r2, r3
   1cac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cac4:	bl	46c4 <rb_write@plt>
   1cac8:	str	r0, [fp, #-12]
   1cacc:	ldr	r3, [fp, #-12]
   1cad0:	cmp	r3, #0
   1cad4:	bgt	1cae0 <rb_rawbuf_flush+0xe8>
   1cad8:	ldr	r3, [fp, #-12]
   1cadc:	b	1cb64 <rb_rawbuf_flush+0x16c>
   1cae0:	ldr	r3, [fp, #-16]
   1cae4:	ldr	r2, [r3, #16]
   1cae8:	ldr	r3, [fp, #-12]
   1caec:	add	r2, r2, r3
   1caf0:	ldr	r3, [fp, #-16]
   1caf4:	str	r2, [r3, #16]
   1caf8:	ldr	r3, [fp, #-16]
   1cafc:	ldr	r2, [r3, #16]
   1cb00:	ldr	r3, [fp, #-8]
   1cb04:	ldr	r3, [r3, #1036]	; 0x40c
   1cb08:	cmp	r2, r3
   1cb0c:	bne	1cb48 <rb_rawbuf_flush+0x150>
   1cb10:	ldr	r3, [fp, #-16]
   1cb14:	mov	r2, #0
   1cb18:	str	r2, [r3, #16]
   1cb1c:	ldr	r3, [fp, #-8]
   1cb20:	ldr	r2, [fp, #-16]
   1cb24:	mov	r1, r2
   1cb28:	mov	r0, r3
   1cb2c:	bl	1c3a8 <rb_dlinkDelete>
   1cb30:	ldr	r3, [pc, #56]	; 1cb70 <rb_rawbuf_flush+0x178>
   1cb34:	add	r3, pc, r3
   1cb38:	ldr	r3, [r3]
   1cb3c:	ldr	r1, [fp, #-8]
   1cb40:	mov	r0, r3
   1cb44:	bl	4940 <rb_bh_free@plt>
   1cb48:	ldr	r3, [fp, #-16]
   1cb4c:	ldr	r2, [r3, #12]
   1cb50:	ldr	r3, [fp, #-12]
   1cb54:	sub	r2, r2, r3
   1cb58:	ldr	r3, [fp, #-16]
   1cb5c:	str	r2, [r3, #12]
   1cb60:	ldr	r3, [fp, #-12]
   1cb64:	mov	r0, r3
   1cb68:	sub	sp, fp, #4
   1cb6c:	pop	{fp, pc}
   1cb70:	.word	0x000358c8

0001cb74 <rb_rawbuf_append>:
   1cb74:	push	{fp, lr}
   1cb78:	add	fp, sp, #4
   1cb7c:	sub	sp, sp, #32
   1cb80:	str	r0, [fp, #-24]	; 0xffffffe8
   1cb84:	str	r1, [fp, #-28]	; 0xffffffe4
   1cb88:	str	r2, [fp, #-32]	; 0xffffffe0
   1cb8c:	mov	r3, #0
   1cb90:	str	r3, [fp, #-8]
   1cb94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb98:	ldr	r3, [r3, #4]
   1cb9c:	cmp	r3, #0
   1cba0:	beq	1cbb4 <rb_rawbuf_append+0x40>
   1cba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cba8:	ldr	r3, [r3, #4]
   1cbac:	ldr	r3, [r3]
   1cbb0:	str	r3, [fp, #-8]
   1cbb4:	ldr	r3, [fp, #-8]
   1cbb8:	cmp	r3, #0
   1cbbc:	beq	1cd38 <rb_rawbuf_append+0x1c4>
   1cbc0:	ldr	r3, [fp, #-8]
   1cbc4:	ldr	r3, [r3, #1036]	; 0x40c
   1cbc8:	cmp	r3, #1024	; 0x400
   1cbcc:	bge	1cd38 <rb_rawbuf_append+0x1c4>
   1cbd0:	ldr	r3, [fp, #-8]
   1cbd4:	ldrb	r3, [r3, #1040]	; 0x410
   1cbd8:	cmp	r3, #0
   1cbdc:	bne	1cd38 <rb_rawbuf_append+0x1c4>
   1cbe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cbe4:	ldr	r3, [r3, #4]
   1cbe8:	ldr	r3, [r3]
   1cbec:	str	r3, [fp, #-8]
   1cbf0:	ldr	r3, [fp, #-8]
   1cbf4:	ldr	r3, [r3, #1036]	; 0x40c
   1cbf8:	rsb	r3, r3, #1024	; 0x400
   1cbfc:	str	r3, [fp, #-12]
   1cc00:	ldr	r3, [fp, #-8]
   1cc04:	add	r3, r3, #12
   1cc08:	ldr	r2, [fp, #-8]
   1cc0c:	ldr	r2, [r2, #1036]	; 0x40c
   1cc10:	add	r3, r3, r2
   1cc14:	str	r3, [fp, #-16]
   1cc18:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cc1c:	ldr	r3, [fp, #-12]
   1cc20:	cmp	r2, r3
   1cc24:	bge	1cc30 <rb_rawbuf_append+0xbc>
   1cc28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc2c:	str	r3, [fp, #-12]
   1cc30:	ldr	r3, [fp, #-12]
   1cc34:	mov	r2, r3
   1cc38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc3c:	ldr	r0, [fp, #-16]
   1cc40:	bl	4880 <memcpy@plt>
   1cc44:	ldr	r3, [fp, #-8]
   1cc48:	ldr	r2, [r3, #1036]	; 0x40c
   1cc4c:	ldr	r3, [fp, #-12]
   1cc50:	add	r2, r2, r3
   1cc54:	ldr	r3, [fp, #-8]
   1cc58:	str	r2, [r3, #1036]	; 0x40c
   1cc5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc60:	ldr	r2, [r3, #12]
   1cc64:	ldr	r3, [fp, #-12]
   1cc68:	add	r2, r2, r3
   1cc6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc70:	str	r2, [r3, #12]
   1cc74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cc78:	ldr	r3, [fp, #-12]
   1cc7c:	sub	r3, r2, r3
   1cc80:	str	r3, [fp, #-32]	; 0xffffffe0
   1cc84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc88:	cmp	r3, #0
   1cc8c:	beq	1cd48 <rb_rawbuf_append+0x1d4>
   1cc90:	ldr	r3, [fp, #-12]
   1cc94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cc98:	add	r3, r2, r3
   1cc9c:	str	r3, [fp, #-28]	; 0xffffffe4
   1cca0:	b	1cd38 <rb_rawbuf_append+0x1c4>
   1cca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cca8:	bl	1c538 <rb_rawbuf_newbuf>
   1ccac:	str	r0, [fp, #-8]
   1ccb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ccb4:	cmp	r3, #1024	; 0x400
   1ccb8:	blt	1ccc8 <rb_rawbuf_append+0x154>
   1ccbc:	mov	r3, #1024	; 0x400
   1ccc0:	str	r3, [fp, #-12]
   1ccc4:	b	1ccd0 <rb_rawbuf_append+0x15c>
   1ccc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cccc:	str	r3, [fp, #-12]
   1ccd0:	ldr	r3, [fp, #-8]
   1ccd4:	add	r3, r3, #12
   1ccd8:	ldr	r2, [fp, #-12]
   1ccdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cce0:	mov	r0, r3
   1cce4:	bl	4880 <memcpy@plt>
   1cce8:	ldr	r3, [fp, #-8]
   1ccec:	ldr	r2, [r3, #1036]	; 0x40c
   1ccf0:	ldr	r3, [fp, #-12]
   1ccf4:	add	r2, r2, r3
   1ccf8:	ldr	r3, [fp, #-8]
   1ccfc:	str	r2, [r3, #1036]	; 0x40c
   1cd00:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cd04:	ldr	r3, [fp, #-12]
   1cd08:	sub	r3, r2, r3
   1cd0c:	str	r3, [fp, #-32]	; 0xffffffe0
   1cd10:	ldr	r3, [fp, #-12]
   1cd14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cd18:	add	r3, r2, r3
   1cd1c:	str	r3, [fp, #-28]	; 0xffffffe4
   1cd20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd24:	ldr	r2, [r3, #12]
   1cd28:	ldr	r3, [fp, #-12]
   1cd2c:	add	r2, r2, r3
   1cd30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd34:	str	r2, [r3, #12]
   1cd38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cd3c:	cmp	r3, #0
   1cd40:	bgt	1cca4 <rb_rawbuf_append+0x130>
   1cd44:	b	1cd4c <rb_rawbuf_append+0x1d8>
   1cd48:	nop			; (mov r0, r0)
   1cd4c:	sub	sp, fp, #4
   1cd50:	pop	{fp, pc}

0001cd54 <rb_rawbuf_get>:
   1cd54:	push	{fp, lr}
   1cd58:	add	fp, sp, #4
   1cd5c:	sub	sp, sp, #32
   1cd60:	str	r0, [fp, #-24]	; 0xffffffe8
   1cd64:	str	r1, [fp, #-28]	; 0xffffffe4
   1cd68:	str	r2, [fp, #-32]	; 0xffffffe0
   1cd6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd70:	ldr	r3, [r3]
   1cd74:	cmp	r3, #0
   1cd78:	bne	1cd84 <rb_rawbuf_get+0x30>
   1cd7c:	mov	r3, #0
   1cd80:	b	1ceb0 <rb_rawbuf_get+0x15c>
   1cd84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd88:	ldr	r3, [r3]
   1cd8c:	ldr	r3, [r3]
   1cd90:	str	r3, [fp, #-16]
   1cd94:	ldr	r3, [fp, #-16]
   1cd98:	ldrb	r3, [r3, #1040]	; 0x410
   1cd9c:	cmp	r3, #0
   1cda0:	beq	1cdc0 <rb_rawbuf_get+0x6c>
   1cda4:	ldr	r3, [fp, #-16]
   1cda8:	add	r3, r3, #12
   1cdac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cdb0:	ldr	r2, [r2, #16]
   1cdb4:	add	r3, r3, r2
   1cdb8:	str	r3, [fp, #-12]
   1cdbc:	b	1cdcc <rb_rawbuf_get+0x78>
   1cdc0:	ldr	r3, [fp, #-16]
   1cdc4:	add	r3, r3, #12
   1cdc8:	str	r3, [fp, #-12]
   1cdcc:	ldr	r3, [fp, #-16]
   1cdd0:	ldr	r2, [r3, #1036]	; 0x40c
   1cdd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cdd8:	cmp	r2, r3
   1cddc:	bge	1cdf0 <rb_rawbuf_get+0x9c>
   1cde0:	ldr	r3, [fp, #-16]
   1cde4:	ldr	r3, [r3, #1036]	; 0x40c
   1cde8:	str	r3, [fp, #-8]
   1cdec:	b	1cdf8 <rb_rawbuf_get+0xa4>
   1cdf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cdf4:	str	r3, [fp, #-8]
   1cdf8:	ldr	r3, [fp, #-8]
   1cdfc:	mov	r2, r3
   1ce00:	ldr	r1, [fp, #-12]
   1ce04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce08:	bl	4880 <memcpy@plt>
   1ce0c:	ldr	r3, [fp, #-16]
   1ce10:	ldr	r2, [r3, #1036]	; 0x40c
   1ce14:	ldr	r3, [fp, #-8]
   1ce18:	cmp	r2, r3
   1ce1c:	bne	1ce58 <rb_rawbuf_get+0x104>
   1ce20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce24:	mov	r2, #0
   1ce28:	str	r2, [r3, #16]
   1ce2c:	ldr	r1, [fp, #-16]
   1ce30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce34:	bl	1c574 <rb_rawbuf_done>
   1ce38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce3c:	ldr	r2, [r3, #12]
   1ce40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ce44:	sub	r2, r2, r3
   1ce48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce4c:	str	r2, [r3, #12]
   1ce50:	ldr	r3, [fp, #-8]
   1ce54:	b	1ceb0 <rb_rawbuf_get+0x15c>
   1ce58:	ldr	r3, [fp, #-16]
   1ce5c:	mov	r2, #1
   1ce60:	strb	r2, [r3, #1040]	; 0x410
   1ce64:	ldr	r3, [fp, #-16]
   1ce68:	ldr	r2, [r3, #1036]	; 0x40c
   1ce6c:	ldr	r3, [fp, #-8]
   1ce70:	sub	r2, r2, r3
   1ce74:	ldr	r3, [fp, #-16]
   1ce78:	str	r2, [r3, #1036]	; 0x40c
   1ce7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce80:	ldr	r2, [r3, #12]
   1ce84:	ldr	r3, [fp, #-8]
   1ce88:	sub	r2, r2, r3
   1ce8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce90:	str	r2, [r3, #12]
   1ce94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce98:	ldr	r2, [r3, #16]
   1ce9c:	ldr	r3, [fp, #-8]
   1cea0:	add	r2, r2, r3
   1cea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cea8:	str	r2, [r3, #16]
   1ceac:	ldr	r3, [fp, #-8]
   1ceb0:	mov	r0, r3
   1ceb4:	sub	sp, fp, #4
   1ceb8:	pop	{fp, pc}

0001cebc <rb_rawbuf_length>:
   1cebc:	push	{fp}		; (str fp, [sp, #-4]!)
   1cec0:	add	fp, sp, #0
   1cec4:	sub	sp, sp, #12
   1cec8:	str	r0, [fp, #-8]
   1cecc:	ldr	r3, [fp, #-8]
   1ced0:	ldr	r3, [r3, #12]
   1ced4:	mov	r0, r3
   1ced8:	add	sp, fp, #0
   1cedc:	pop	{fp}		; (ldr fp, [sp], #4)
   1cee0:	bx	lr

0001cee4 <rb_new_rawbuffer>:
   1cee4:	push	{fp, lr}
   1cee8:	add	fp, sp, #4
   1ceec:	mov	r0, #20
   1cef0:	bl	1c46c <rb_malloc>
   1cef4:	mov	r3, r0
   1cef8:	mov	r0, r3
   1cefc:	pop	{fp, pc}

0001cf00 <rb_free_rawbuffer>:
   1cf00:	push	{fp, lr}
   1cf04:	add	fp, sp, #4
   1cf08:	sub	sp, sp, #16
   1cf0c:	str	r0, [fp, #-16]
   1cf10:	ldr	r3, [fp, #-16]
   1cf14:	ldr	r3, [r3]
   1cf18:	str	r3, [fp, #-8]
   1cf1c:	ldr	r3, [fp, #-8]
   1cf20:	cmp	r3, #0
   1cf24:	beq	1cf34 <rb_free_rawbuffer+0x34>
   1cf28:	ldr	r3, [fp, #-8]
   1cf2c:	ldr	r3, [r3, #8]
   1cf30:	b	1cf38 <rb_free_rawbuffer+0x38>
   1cf34:	mov	r3, #0
   1cf38:	str	r3, [fp, #-12]
   1cf3c:	b	1cf7c <rb_free_rawbuffer+0x7c>
   1cf40:	ldr	r3, [fp, #-8]
   1cf44:	ldr	r3, [r3]
   1cf48:	mov	r1, r3
   1cf4c:	ldr	r0, [fp, #-16]
   1cf50:	bl	1c574 <rb_rawbuf_done>
   1cf54:	ldr	r3, [fp, #-12]
   1cf58:	str	r3, [fp, #-8]
   1cf5c:	ldr	r3, [fp, #-8]
   1cf60:	cmp	r3, #0
   1cf64:	beq	1cf74 <rb_free_rawbuffer+0x74>
   1cf68:	ldr	r3, [fp, #-8]
   1cf6c:	ldr	r3, [r3, #8]
   1cf70:	b	1cf78 <rb_free_rawbuffer+0x78>
   1cf74:	mov	r3, #0
   1cf78:	str	r3, [fp, #-12]
   1cf7c:	ldr	r3, [fp, #-8]
   1cf80:	cmp	r3, #0
   1cf84:	bne	1cf40 <rb_free_rawbuffer+0x40>
   1cf88:	ldr	r0, [fp, #-16]
   1cf8c:	bl	1c4c0 <rb_free>
   1cf90:	nop			; (mov r0, r0)
   1cf94:	sub	sp, fp, #4
   1cf98:	pop	{fp, pc}

0001cf9c <rb_init_rawbuffers>:
   1cf9c:	push	{fp, lr}
   1cfa0:	add	fp, sp, #4
   1cfa4:	sub	sp, sp, #8
   1cfa8:	str	r0, [fp, #-8]
   1cfac:	ldr	r3, [pc, #64]	; 1cff4 <rb_init_rawbuffers+0x58>
   1cfb0:	add	r3, pc, r3
   1cfb4:	ldr	r3, [r3]
   1cfb8:	cmp	r3, #0
   1cfbc:	bne	1cfe8 <rb_init_rawbuffers+0x4c>
   1cfc0:	ldr	r3, [pc, #48]	; 1cff8 <rb_init_rawbuffers+0x5c>
   1cfc4:	add	r3, pc, r3
   1cfc8:	mov	r2, r3
   1cfcc:	ldr	r1, [fp, #-8]
   1cfd0:	ldr	r0, [pc, #36]	; 1cffc <rb_init_rawbuffers+0x60>
   1cfd4:	bl	4b2c <rb_bh_create@plt>
   1cfd8:	mov	r2, r0
   1cfdc:	ldr	r3, [pc, #28]	; 1d000 <rb_init_rawbuffers+0x64>
   1cfe0:	add	r3, pc, r3
   1cfe4:	str	r2, [r3]
   1cfe8:	nop			; (mov r0, r0)
   1cfec:	sub	sp, fp, #4
   1cff0:	pop	{fp, pc}
   1cff4:	.word	0x0003544c
   1cff8:	.word	0x000066b0
   1cffc:	.word	0x00000414
   1d000:	.word	0x0003541c

0001d004 <rb_malloc>:
   1d004:	push	{fp, lr}
   1d008:	add	fp, sp, #4
   1d00c:	sub	sp, sp, #16
   1d010:	str	r0, [fp, #-16]
   1d014:	ldr	r1, [fp, #-16]
   1d018:	mov	r0, #1
   1d01c:	bl	4658 <calloc@plt>
   1d020:	mov	r3, r0
   1d024:	str	r3, [fp, #-8]
   1d028:	ldr	r3, [fp, #-8]
   1d02c:	cmp	r3, #0
   1d030:	moveq	r3, #1
   1d034:	movne	r3, #0
   1d038:	uxtb	r3, r3
   1d03c:	cmp	r3, #0
   1d040:	beq	1d048 <rb_malloc+0x44>
   1d044:	bl	4a00 <rb_outofmemory@plt>
   1d048:	ldr	r3, [fp, #-8]
   1d04c:	mov	r0, r3
   1d050:	sub	sp, fp, #4
   1d054:	pop	{fp, pc}

0001d058 <rb_free>:
   1d058:	push	{fp, lr}
   1d05c:	add	fp, sp, #4
   1d060:	sub	sp, sp, #8
   1d064:	str	r0, [fp, #-8]
   1d068:	ldr	r3, [fp, #-8]
   1d06c:	cmp	r3, #0
   1d070:	movne	r3, #1
   1d074:	moveq	r3, #0
   1d078:	uxtb	r3, r3
   1d07c:	cmp	r3, #0
   1d080:	beq	1d08c <rb_free+0x34>
   1d084:	ldr	r0, [fp, #-8]
   1d088:	bl	476c <free@plt>
   1d08c:	nop			; (mov r0, r0)
   1d090:	sub	sp, fp, #4
   1d094:	pop	{fp, pc}

0001d098 <rb_init_patricia>:
   1d098:	push	{fp}		; (str fp, [sp, #-4]!)
   1d09c:	add	fp, sp, #0
   1d0a0:	nop			; (mov r0, r0)
   1d0a4:	add	sp, fp, #0
   1d0a8:	pop	{fp}		; (ldr fp, [sp], #4)
   1d0ac:	bx	lr

0001d0b0 <prefix_tochar>:
   1d0b0:	push	{fp}		; (str fp, [sp, #-4]!)
   1d0b4:	add	fp, sp, #0
   1d0b8:	sub	sp, sp, #12
   1d0bc:	str	r0, [fp, #-8]
   1d0c0:	ldr	r3, [fp, #-8]
   1d0c4:	cmp	r3, #0
   1d0c8:	bne	1d0d4 <prefix_tochar+0x24>
   1d0cc:	mov	r3, #0
   1d0d0:	b	1d0dc <prefix_tochar+0x2c>
   1d0d4:	ldr	r3, [fp, #-8]
   1d0d8:	add	r3, r3, #8
   1d0dc:	mov	r0, r3
   1d0e0:	add	sp, fp, #0
   1d0e4:	pop	{fp}		; (ldr fp, [sp], #4)
   1d0e8:	bx	lr

0001d0ec <comp_with_mask>:
   1d0ec:	push	{fp, lr}
   1d0f0:	add	fp, sp, #4
   1d0f4:	sub	sp, sp, #24
   1d0f8:	str	r0, [fp, #-16]
   1d0fc:	str	r1, [fp, #-20]	; 0xffffffec
   1d100:	str	r2, [fp, #-24]	; 0xffffffe8
   1d104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d108:	lsr	r3, r3, #3
   1d10c:	mov	r2, r3
   1d110:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d114:	ldr	r0, [fp, #-16]
   1d118:	bl	44c0 <memcmp@plt>
   1d11c:	mov	r3, r0
   1d120:	cmp	r3, #0
   1d124:	bne	1d1a0 <comp_with_mask+0xb4>
   1d128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d12c:	lsr	r3, r3, #3
   1d130:	str	r3, [fp, #-8]
   1d134:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d138:	and	r3, r3, #7
   1d13c:	rsb	r3, r3, #8
   1d140:	mov	r2, #255	; 0xff
   1d144:	lsl	r3, r2, r3
   1d148:	strb	r3, [fp, #-9]
   1d14c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d150:	and	r3, r3, #7
   1d154:	cmp	r3, #0
   1d158:	beq	1d198 <comp_with_mask+0xac>
   1d15c:	ldr	r3, [fp, #-8]
   1d160:	ldr	r2, [fp, #-16]
   1d164:	add	r3, r2, r3
   1d168:	ldrb	r2, [r3]
   1d16c:	ldr	r3, [fp, #-8]
   1d170:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d174:	add	r3, r1, r3
   1d178:	ldrb	r3, [r3]
   1d17c:	eor	r3, r3, r2
   1d180:	uxtb	r2, r3
   1d184:	ldrb	r3, [fp, #-9]
   1d188:	and	r3, r3, r2
   1d18c:	uxtb	r3, r3
   1d190:	cmp	r3, #0
   1d194:	bne	1d1a0 <comp_with_mask+0xb4>
   1d198:	mov	r3, #1
   1d19c:	b	1d1a4 <comp_with_mask+0xb8>
   1d1a0:	mov	r3, #0
   1d1a4:	mov	r0, r3
   1d1a8:	sub	sp, fp, #4
   1d1ac:	pop	{fp, pc}

0001d1b0 <New_Prefix2>:
   1d1b0:	push	{fp, lr}
   1d1b4:	add	fp, sp, #4
   1d1b8:	sub	sp, sp, #24
   1d1bc:	str	r0, [fp, #-16]
   1d1c0:	str	r1, [fp, #-20]	; 0xffffffec
   1d1c4:	str	r2, [fp, #-24]	; 0xffffffe8
   1d1c8:	str	r3, [fp, #-28]	; 0xffffffe4
   1d1cc:	mov	r3, #0
   1d1d0:	str	r3, [fp, #-8]
   1d1d4:	mov	r3, #128	; 0x80
   1d1d8:	str	r3, [fp, #-12]
   1d1dc:	ldr	r3, [fp, #-16]
   1d1e0:	cmp	r3, #10
   1d1e4:	bne	1d230 <New_Prefix2+0x80>
   1d1e8:	mov	r3, #128	; 0x80
   1d1ec:	str	r3, [fp, #-12]
   1d1f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1f4:	cmp	r3, #0
   1d1f8:	bne	1d214 <New_Prefix2+0x64>
   1d1fc:	mov	r0, #24
   1d200:	bl	1d004 <rb_malloc>
   1d204:	str	r0, [fp, #-28]	; 0xffffffe4
   1d208:	ldr	r3, [fp, #-8]
   1d20c:	add	r3, r3, #1
   1d210:	str	r3, [fp, #-8]
   1d214:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d218:	add	r3, r3, #8
   1d21c:	mov	r2, #16
   1d220:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d224:	mov	r0, r3
   1d228:	bl	4880 <memcpy@plt>
   1d22c:	b	1d280 <New_Prefix2+0xd0>
   1d230:	ldr	r3, [fp, #-16]
   1d234:	cmp	r3, #2
   1d238:	bne	1d278 <New_Prefix2+0xc8>
   1d23c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d240:	cmp	r3, #0
   1d244:	bne	1d260 <New_Prefix2+0xb0>
   1d248:	mov	r0, #24
   1d24c:	bl	1d004 <rb_malloc>
   1d250:	str	r0, [fp, #-28]	; 0xffffffe4
   1d254:	ldr	r3, [fp, #-8]
   1d258:	add	r3, r3, #1
   1d25c:	str	r3, [fp, #-8]
   1d260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d264:	add	r3, r3, #8
   1d268:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d26c:	ldr	r2, [r2]
   1d270:	str	r2, [r3]
   1d274:	b	1d280 <New_Prefix2+0xd0>
   1d278:	mov	r3, #0
   1d27c:	b	1d2e8 <New_Prefix2+0x138>
   1d280:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d284:	cmp	r3, #0
   1d288:	blt	1d298 <New_Prefix2+0xe8>
   1d28c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d290:	uxth	r3, r3
   1d294:	b	1d2a0 <New_Prefix2+0xf0>
   1d298:	ldr	r3, [fp, #-12]
   1d29c:	uxth	r3, r3
   1d2a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d2a4:	strh	r3, [r2, #2]
   1d2a8:	ldr	r3, [fp, #-16]
   1d2ac:	uxth	r2, r3
   1d2b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2b4:	strh	r2, [r3]
   1d2b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2bc:	mov	r2, #0
   1d2c0:	str	r2, [r3, #4]
   1d2c4:	ldr	r3, [fp, #-8]
   1d2c8:	cmp	r3, #0
   1d2cc:	beq	1d2e4 <New_Prefix2+0x134>
   1d2d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2d4:	ldr	r3, [r3, #4]
   1d2d8:	add	r2, r3, #1
   1d2dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2e0:	str	r2, [r3, #4]
   1d2e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2e8:	mov	r0, r3
   1d2ec:	sub	sp, fp, #4
   1d2f0:	pop	{fp, pc}

0001d2f4 <New_Prefix>:
   1d2f4:	push	{fp, lr}
   1d2f8:	add	fp, sp, #4
   1d2fc:	sub	sp, sp, #16
   1d300:	str	r0, [fp, #-8]
   1d304:	str	r1, [fp, #-12]
   1d308:	str	r2, [fp, #-16]
   1d30c:	mov	r3, #0
   1d310:	ldr	r2, [fp, #-16]
   1d314:	ldr	r1, [fp, #-12]
   1d318:	ldr	r0, [fp, #-8]
   1d31c:	bl	1d1b0 <New_Prefix2>
   1d320:	mov	r3, r0
   1d324:	mov	r0, r3
   1d328:	sub	sp, fp, #4
   1d32c:	pop	{fp, pc}

0001d330 <ascii2prefix>:
   1d330:	push	{fp, lr}
   1d334:	add	fp, sp, #4
   1d338:	sub	sp, sp, #1072	; 0x430
   1d33c:	str	r0, [fp, #-1072]	; 0xfffffbd0
   1d340:	str	r1, [fp, #-1076]	; 0xfffffbcc
   1d344:	mov	r3, #0
   1d348:	str	r3, [fp, #-12]
   1d34c:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   1d350:	cmp	r3, #0
   1d354:	bne	1d360 <ascii2prefix+0x30>
   1d358:	mov	r3, #0
   1d35c:	b	1d520 <ascii2prefix+0x1f0>
   1d360:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1d364:	cmp	r3, #0
   1d368:	bne	1d394 <ascii2prefix+0x64>
   1d36c:	mov	r3, #2
   1d370:	str	r3, [fp, #-1072]	; 0xfffffbd0
   1d374:	mov	r1, #58	; 0x3a
   1d378:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
   1d37c:	bl	461c <strchr@plt>
   1d380:	mov	r3, r0
   1d384:	cmp	r3, #0
   1d388:	beq	1d394 <ascii2prefix+0x64>
   1d38c:	mov	r3, #10
   1d390:	str	r3, [fp, #-1072]	; 0xfffffbd0
   1d394:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1d398:	cmp	r3, #2
   1d39c:	bne	1d3ac <ascii2prefix+0x7c>
   1d3a0:	mov	r3, #32
   1d3a4:	str	r3, [fp, #-12]
   1d3a8:	b	1d3c0 <ascii2prefix+0x90>
   1d3ac:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1d3b0:	cmp	r3, #10
   1d3b4:	bne	1d3c0 <ascii2prefix+0x90>
   1d3b8:	mov	r3, #128	; 0x80
   1d3bc:	str	r3, [fp, #-12]
   1d3c0:	mov	r1, #47	; 0x2f
   1d3c4:	ldr	r0, [fp, #-1076]	; 0xfffffbcc
   1d3c8:	bl	461c <strchr@plt>
   1d3cc:	str	r0, [fp, #-16]
   1d3d0:	ldr	r3, [fp, #-16]
   1d3d4:	cmp	r3, #0
   1d3d8:	beq	1d46c <ascii2prefix+0x13c>
   1d3dc:	ldr	r3, [fp, #-16]
   1d3e0:	add	r3, r3, #1
   1d3e4:	mov	r0, r3
   1d3e8:	bl	4934 <atol@plt>
   1d3ec:	str	r0, [fp, #-8]
   1d3f0:	ldr	r2, [fp, #-16]
   1d3f4:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   1d3f8:	sub	r3, r2, r3
   1d3fc:	mov	r2, r3
   1d400:	sub	r3, fp, #1056	; 0x420
   1d404:	sub	r3, r3, #4
   1d408:	sub	r3, r3, #4
   1d40c:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   1d410:	mov	r0, r3
   1d414:	bl	4880 <memcpy@plt>
   1d418:	ldr	r2, [fp, #-16]
   1d41c:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   1d420:	sub	r3, r2, r3
   1d424:	sub	r2, fp, #4
   1d428:	add	r3, r2, r3
   1d42c:	mov	r2, #0
   1d430:	strb	r2, [r3, #-1060]	; 0xfffffbdc
   1d434:	sub	r3, fp, #1056	; 0x420
   1d438:	sub	r3, r3, #4
   1d43c:	sub	r3, r3, #4
   1d440:	str	r3, [fp, #-1076]	; 0xfffffbcc
   1d444:	ldr	r3, [fp, #-8]
   1d448:	cmp	r3, #0
   1d44c:	ble	1d460 <ascii2prefix+0x130>
   1d450:	ldr	r2, [fp, #-8]
   1d454:	ldr	r3, [fp, #-12]
   1d458:	cmp	r2, r3
   1d45c:	ble	1d474 <ascii2prefix+0x144>
   1d460:	ldr	r3, [fp, #-12]
   1d464:	str	r3, [fp, #-8]
   1d468:	b	1d474 <ascii2prefix+0x144>
   1d46c:	ldr	r3, [fp, #-12]
   1d470:	str	r3, [fp, #-8]
   1d474:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1d478:	cmp	r3, #2
   1d47c:	bne	1d4c8 <ascii2prefix+0x198>
   1d480:	sub	r3, fp, #24
   1d484:	mov	r2, r3
   1d488:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   1d48c:	mov	r0, #2
   1d490:	bl	46a0 <rb_inet_pton@plt>
   1d494:	str	r0, [fp, #-20]	; 0xffffffec
   1d498:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d49c:	cmp	r3, #0
   1d4a0:	bgt	1d4ac <ascii2prefix+0x17c>
   1d4a4:	mov	r3, #0
   1d4a8:	b	1d520 <ascii2prefix+0x1f0>
   1d4ac:	sub	r3, fp, #24
   1d4b0:	ldr	r2, [fp, #-8]
   1d4b4:	mov	r1, r3
   1d4b8:	mov	r0, #2
   1d4bc:	bl	1d2f4 <New_Prefix>
   1d4c0:	mov	r3, r0
   1d4c4:	b	1d520 <ascii2prefix+0x1f0>
   1d4c8:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   1d4cc:	cmp	r3, #10
   1d4d0:	bne	1d51c <ascii2prefix+0x1ec>
   1d4d4:	sub	r3, fp, #40	; 0x28
   1d4d8:	mov	r2, r3
   1d4dc:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   1d4e0:	mov	r0, #10
   1d4e4:	bl	46a0 <rb_inet_pton@plt>
   1d4e8:	str	r0, [fp, #-20]	; 0xffffffec
   1d4ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d4f0:	cmp	r3, #0
   1d4f4:	bgt	1d500 <ascii2prefix+0x1d0>
   1d4f8:	mov	r3, #0
   1d4fc:	b	1d520 <ascii2prefix+0x1f0>
   1d500:	sub	r3, fp, #40	; 0x28
   1d504:	ldr	r2, [fp, #-8]
   1d508:	mov	r1, r3
   1d50c:	mov	r0, #10
   1d510:	bl	1d2f4 <New_Prefix>
   1d514:	mov	r3, r0
   1d518:	b	1d520 <ascii2prefix+0x1f0>
   1d51c:	mov	r3, #0
   1d520:	mov	r0, r3
   1d524:	sub	sp, fp, #4
   1d528:	pop	{fp, pc}

0001d52c <Ref_Prefix>:
   1d52c:	push	{fp, lr}
   1d530:	add	fp, sp, #4
   1d534:	sub	sp, sp, #8
   1d538:	str	r0, [fp, #-8]
   1d53c:	ldr	r3, [fp, #-8]
   1d540:	cmp	r3, #0
   1d544:	bne	1d550 <Ref_Prefix+0x24>
   1d548:	mov	r3, #0
   1d54c:	b	1d5a8 <Ref_Prefix+0x7c>
   1d550:	ldr	r3, [fp, #-8]
   1d554:	ldr	r3, [r3, #4]
   1d558:	cmp	r3, #0
   1d55c:	bne	1d590 <Ref_Prefix+0x64>
   1d560:	ldr	r3, [fp, #-8]
   1d564:	ldrh	r3, [r3]
   1d568:	mov	r0, r3
   1d56c:	ldr	r3, [fp, #-8]
   1d570:	add	r1, r3, #8
   1d574:	ldr	r3, [fp, #-8]
   1d578:	ldrh	r3, [r3, #2]
   1d57c:	mov	r2, r3
   1d580:	mov	r3, #0
   1d584:	bl	1d1b0 <New_Prefix2>
   1d588:	mov	r3, r0
   1d58c:	b	1d5a8 <Ref_Prefix+0x7c>
   1d590:	ldr	r3, [fp, #-8]
   1d594:	ldr	r3, [r3, #4]
   1d598:	add	r2, r3, #1
   1d59c:	ldr	r3, [fp, #-8]
   1d5a0:	str	r2, [r3, #4]
   1d5a4:	ldr	r3, [fp, #-8]
   1d5a8:	mov	r0, r3
   1d5ac:	sub	sp, fp, #4
   1d5b0:	pop	{fp, pc}

0001d5b4 <Deref_Prefix>:
   1d5b4:	push	{fp, lr}
   1d5b8:	add	fp, sp, #4
   1d5bc:	sub	sp, sp, #8
   1d5c0:	str	r0, [fp, #-8]
   1d5c4:	ldr	r3, [fp, #-8]
   1d5c8:	cmp	r3, #0
   1d5cc:	beq	1d604 <Deref_Prefix+0x50>
   1d5d0:	ldr	r3, [fp, #-8]
   1d5d4:	ldr	r3, [r3, #4]
   1d5d8:	sub	r2, r3, #1
   1d5dc:	ldr	r3, [fp, #-8]
   1d5e0:	str	r2, [r3, #4]
   1d5e4:	ldr	r3, [fp, #-8]
   1d5e8:	ldr	r3, [r3, #4]
   1d5ec:	cmp	r3, #0
   1d5f0:	bgt	1d608 <Deref_Prefix+0x54>
   1d5f4:	ldr	r0, [fp, #-8]
   1d5f8:	bl	1d058 <rb_free>
   1d5fc:	nop			; (mov r0, r0)
   1d600:	b	1d608 <Deref_Prefix+0x54>
   1d604:	nop			; (mov r0, r0)
   1d608:	sub	sp, fp, #4
   1d60c:	pop	{fp, pc}

0001d610 <rb_new_patricia>:
   1d610:	push	{fp, lr}
   1d614:	add	fp, sp, #4
   1d618:	sub	sp, sp, #16
   1d61c:	str	r0, [fp, #-16]
   1d620:	mov	r0, #12
   1d624:	bl	1d004 <rb_malloc>
   1d628:	str	r0, [fp, #-8]
   1d62c:	ldr	r2, [fp, #-16]
   1d630:	ldr	r3, [fp, #-8]
   1d634:	str	r2, [r3, #4]
   1d638:	ldr	r3, [fp, #-8]
   1d63c:	mov	r2, #0
   1d640:	str	r2, [r3]
   1d644:	ldr	r3, [fp, #-8]
   1d648:	mov	r2, #0
   1d64c:	str	r2, [r3, #8]
   1d650:	ldr	r3, [pc, #36]	; 1d67c <rb_new_patricia+0x6c>
   1d654:	add	r3, pc, r3
   1d658:	ldr	r3, [r3]
   1d65c:	add	r2, r3, #1
   1d660:	ldr	r3, [pc, #24]	; 1d680 <rb_new_patricia+0x70>
   1d664:	add	r3, pc, r3
   1d668:	str	r2, [r3]
   1d66c:	ldr	r3, [fp, #-8]
   1d670:	mov	r0, r3
   1d674:	sub	sp, fp, #4
   1d678:	pop	{fp, pc}
   1d67c:	.word	0x00034dac
   1d680:	.word	0x00034d9c

0001d684 <rb_clear_patricia>:
   1d684:	push	{fp, lr}
   1d688:	add	fp, sp, #4
   1d68c:	sub	sp, sp, #544	; 0x220
   1d690:	str	r0, [fp, #-544]	; 0xfffffde0
   1d694:	str	r1, [fp, #-548]	; 0xfffffddc
   1d698:	ldr	r3, [fp, #-544]	; 0xfffffde0
   1d69c:	ldr	r3, [r3]
   1d6a0:	cmp	r3, #0
   1d6a4:	beq	1d7d4 <rb_clear_patricia+0x150>
   1d6a8:	sub	r3, fp, #536	; 0x218
   1d6ac:	str	r3, [fp, #-8]
   1d6b0:	ldr	r3, [fp, #-544]	; 0xfffffde0
   1d6b4:	ldr	r3, [r3]
   1d6b8:	str	r3, [fp, #-12]
   1d6bc:	b	1d7c8 <rb_clear_patricia+0x144>
   1d6c0:	ldr	r3, [fp, #-12]
   1d6c4:	ldr	r3, [r3, #8]
   1d6c8:	str	r3, [fp, #-16]
   1d6cc:	ldr	r3, [fp, #-12]
   1d6d0:	ldr	r3, [r3, #12]
   1d6d4:	str	r3, [fp, #-20]	; 0xffffffec
   1d6d8:	ldr	r3, [fp, #-12]
   1d6dc:	ldr	r3, [r3, #4]
   1d6e0:	cmp	r3, #0
   1d6e4:	beq	1d728 <rb_clear_patricia+0xa4>
   1d6e8:	ldr	r3, [fp, #-12]
   1d6ec:	ldr	r3, [r3, #4]
   1d6f0:	mov	r0, r3
   1d6f4:	bl	1d5b4 <Deref_Prefix>
   1d6f8:	ldr	r3, [fp, #-12]
   1d6fc:	ldr	r3, [r3, #20]
   1d700:	cmp	r3, #0
   1d704:	beq	1d728 <rb_clear_patricia+0xa4>
   1d708:	ldr	r3, [fp, #-548]	; 0xfffffddc
   1d70c:	cmp	r3, #0
   1d710:	beq	1d728 <rb_clear_patricia+0xa4>
   1d714:	ldr	r3, [fp, #-12]
   1d718:	ldr	r2, [r3, #20]
   1d71c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   1d720:	mov	r0, r2
   1d724:	blx	r3
   1d728:	ldr	r0, [fp, #-12]
   1d72c:	bl	1d058 <rb_free>
   1d730:	ldr	r3, [fp, #-544]	; 0xfffffde0
   1d734:	ldr	r3, [r3, #8]
   1d738:	sub	r2, r3, #1
   1d73c:	ldr	r3, [fp, #-544]	; 0xfffffde0
   1d740:	str	r2, [r3, #8]
   1d744:	ldr	r3, [fp, #-16]
   1d748:	cmp	r3, #0
   1d74c:	beq	1d77c <rb_clear_patricia+0xf8>
   1d750:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d754:	cmp	r3, #0
   1d758:	beq	1d770 <rb_clear_patricia+0xec>
   1d75c:	ldr	r3, [fp, #-8]
   1d760:	add	r2, r3, #4
   1d764:	str	r2, [fp, #-8]
   1d768:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d76c:	str	r2, [r3]
   1d770:	ldr	r3, [fp, #-16]
   1d774:	str	r3, [fp, #-12]
   1d778:	b	1d7c8 <rb_clear_patricia+0x144>
   1d77c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d780:	cmp	r3, #0
   1d784:	beq	1d794 <rb_clear_patricia+0x110>
   1d788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d78c:	str	r3, [fp, #-12]
   1d790:	b	1d7c8 <rb_clear_patricia+0x144>
   1d794:	sub	r3, fp, #536	; 0x218
   1d798:	ldr	r2, [fp, #-8]
   1d79c:	cmp	r2, r3
   1d7a0:	beq	1d7c0 <rb_clear_patricia+0x13c>
   1d7a4:	ldr	r3, [fp, #-8]
   1d7a8:	sub	r3, r3, #4
   1d7ac:	str	r3, [fp, #-8]
   1d7b0:	ldr	r3, [fp, #-8]
   1d7b4:	ldr	r3, [r3]
   1d7b8:	str	r3, [fp, #-12]
   1d7bc:	b	1d7c8 <rb_clear_patricia+0x144>
   1d7c0:	mov	r3, #0
   1d7c4:	str	r3, [fp, #-12]
   1d7c8:	ldr	r3, [fp, #-12]
   1d7cc:	cmp	r3, #0
   1d7d0:	bne	1d6c0 <rb_clear_patricia+0x3c>
   1d7d4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   1d7d8:	bl	1d058 <rb_free>
   1d7dc:	nop			; (mov r0, r0)
   1d7e0:	sub	sp, fp, #4
   1d7e4:	pop	{fp, pc}

0001d7e8 <rb_destroy_patricia>:
   1d7e8:	push	{fp, lr}
   1d7ec:	add	fp, sp, #4
   1d7f0:	sub	sp, sp, #8
   1d7f4:	str	r0, [fp, #-8]
   1d7f8:	str	r1, [fp, #-12]
   1d7fc:	ldr	r1, [fp, #-12]
   1d800:	ldr	r0, [fp, #-8]
   1d804:	bl	4568 <rb_clear_patricia@plt>
   1d808:	ldr	r3, [pc, #32]	; 1d830 <rb_destroy_patricia+0x48>
   1d80c:	add	r3, pc, r3
   1d810:	ldr	r3, [r3]
   1d814:	sub	r2, r3, #1
   1d818:	ldr	r3, [pc, #20]	; 1d834 <rb_destroy_patricia+0x4c>
   1d81c:	add	r3, pc, r3
   1d820:	str	r2, [r3]
   1d824:	nop			; (mov r0, r0)
   1d828:	sub	sp, fp, #4
   1d82c:	pop	{fp, pc}
   1d830:	.word	0x00034bf4
   1d834:	.word	0x00034be4

0001d838 <rb_patricia_process>:
   1d838:	push	{fp, lr}
   1d83c:	add	fp, sp, #4
   1d840:	sub	sp, sp, #536	; 0x218
   1d844:	str	r0, [fp, #-536]	; 0xfffffde8
   1d848:	str	r1, [fp, #-540]	; 0xfffffde4
   1d84c:	sub	r3, fp, #532	; 0x214
   1d850:	str	r3, [fp, #-8]
   1d854:	ldr	r3, [fp, #-536]	; 0xfffffde8
   1d858:	ldr	r3, [r3]
   1d85c:	str	r3, [fp, #-12]
   1d860:	b	1d92c <rb_patricia_process+0xf4>
   1d864:	ldr	r3, [fp, #-16]
   1d868:	ldr	r3, [r3, #4]
   1d86c:	cmp	r3, #0
   1d870:	beq	1d890 <rb_patricia_process+0x58>
   1d874:	ldr	r3, [fp, #-16]
   1d878:	ldr	r2, [r3, #4]
   1d87c:	ldr	r3, [fp, #-16]
   1d880:	ldr	r1, [r3, #20]
   1d884:	ldr	r3, [fp, #-540]	; 0xfffffde4
   1d888:	mov	r0, r2
   1d88c:	blx	r3
   1d890:	ldr	r3, [fp, #-12]
   1d894:	ldr	r3, [r3, #8]
   1d898:	cmp	r3, #0
   1d89c:	beq	1d8d8 <rb_patricia_process+0xa0>
   1d8a0:	ldr	r3, [fp, #-12]
   1d8a4:	ldr	r3, [r3, #12]
   1d8a8:	cmp	r3, #0
   1d8ac:	beq	1d8c8 <rb_patricia_process+0x90>
   1d8b0:	ldr	r3, [fp, #-8]
   1d8b4:	add	r2, r3, #4
   1d8b8:	str	r2, [fp, #-8]
   1d8bc:	ldr	r2, [fp, #-12]
   1d8c0:	ldr	r2, [r2, #12]
   1d8c4:	str	r2, [r3]
   1d8c8:	ldr	r3, [fp, #-12]
   1d8cc:	ldr	r3, [r3, #8]
   1d8d0:	str	r3, [fp, #-12]
   1d8d4:	b	1d92c <rb_patricia_process+0xf4>
   1d8d8:	ldr	r3, [fp, #-12]
   1d8dc:	ldr	r3, [r3, #12]
   1d8e0:	cmp	r3, #0
   1d8e4:	beq	1d8f8 <rb_patricia_process+0xc0>
   1d8e8:	ldr	r3, [fp, #-12]
   1d8ec:	ldr	r3, [r3, #12]
   1d8f0:	str	r3, [fp, #-12]
   1d8f4:	b	1d92c <rb_patricia_process+0xf4>
   1d8f8:	sub	r3, fp, #532	; 0x214
   1d8fc:	ldr	r2, [fp, #-8]
   1d900:	cmp	r2, r3
   1d904:	beq	1d924 <rb_patricia_process+0xec>
   1d908:	ldr	r3, [fp, #-8]
   1d90c:	sub	r3, r3, #4
   1d910:	str	r3, [fp, #-8]
   1d914:	ldr	r3, [fp, #-8]
   1d918:	ldr	r3, [r3]
   1d91c:	str	r3, [fp, #-12]
   1d920:	b	1d92c <rb_patricia_process+0xf4>
   1d924:	mov	r3, #0
   1d928:	str	r3, [fp, #-12]
   1d92c:	ldr	r3, [fp, #-12]
   1d930:	str	r3, [fp, #-16]
   1d934:	ldr	r3, [fp, #-16]
   1d938:	cmp	r3, #0
   1d93c:	bne	1d864 <rb_patricia_process+0x2c>
   1d940:	nop			; (mov r0, r0)
   1d944:	sub	sp, fp, #4
   1d948:	pop	{fp, pc}

0001d94c <rb_patricia_search_exact>:
   1d94c:	push	{r4, fp, lr}
   1d950:	add	fp, sp, #8
   1d954:	sub	sp, sp, #28
   1d958:	str	r0, [fp, #-32]	; 0xffffffe0
   1d95c:	str	r1, [fp, #-36]	; 0xffffffdc
   1d960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d964:	ldr	r3, [r3]
   1d968:	cmp	r3, #0
   1d96c:	bne	1d978 <rb_patricia_search_exact+0x2c>
   1d970:	mov	r3, #0
   1d974:	b	1da94 <rb_patricia_search_exact+0x148>
   1d978:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d97c:	ldr	r3, [r3]
   1d980:	str	r3, [fp, #-16]
   1d984:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d988:	add	r3, r3, #8
   1d98c:	str	r3, [fp, #-20]	; 0xffffffec
   1d990:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d994:	ldrh	r3, [r3, #2]
   1d998:	str	r3, [fp, #-24]	; 0xffffffe8
   1d99c:	b	1da0c <rb_patricia_search_exact+0xc0>
   1d9a0:	ldr	r3, [fp, #-16]
   1d9a4:	ldr	r3, [r3]
   1d9a8:	lsr	r3, r3, #3
   1d9ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d9b0:	add	r3, r2, r3
   1d9b4:	ldrb	r3, [r3]
   1d9b8:	mov	r1, r3
   1d9bc:	ldr	r3, [fp, #-16]
   1d9c0:	ldr	r3, [r3]
   1d9c4:	and	r3, r3, #7
   1d9c8:	mov	r2, #128	; 0x80
   1d9cc:	asr	r3, r2, r3
   1d9d0:	and	r3, r3, r1
   1d9d4:	cmp	r3, #0
   1d9d8:	beq	1d9ec <rb_patricia_search_exact+0xa0>
   1d9dc:	ldr	r3, [fp, #-16]
   1d9e0:	ldr	r3, [r3, #12]
   1d9e4:	str	r3, [fp, #-16]
   1d9e8:	b	1d9f8 <rb_patricia_search_exact+0xac>
   1d9ec:	ldr	r3, [fp, #-16]
   1d9f0:	ldr	r3, [r3, #8]
   1d9f4:	str	r3, [fp, #-16]
   1d9f8:	ldr	r3, [fp, #-16]
   1d9fc:	cmp	r3, #0
   1da00:	bne	1da0c <rb_patricia_search_exact+0xc0>
   1da04:	mov	r3, #0
   1da08:	b	1da94 <rb_patricia_search_exact+0x148>
   1da0c:	ldr	r3, [fp, #-16]
   1da10:	ldr	r2, [r3]
   1da14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da18:	cmp	r2, r3
   1da1c:	bcc	1d9a0 <rb_patricia_search_exact+0x54>
   1da20:	ldr	r3, [fp, #-16]
   1da24:	ldr	r2, [r3]
   1da28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da2c:	cmp	r2, r3
   1da30:	bhi	1da44 <rb_patricia_search_exact+0xf8>
   1da34:	ldr	r3, [fp, #-16]
   1da38:	ldr	r3, [r3, #4]
   1da3c:	cmp	r3, #0
   1da40:	bne	1da4c <rb_patricia_search_exact+0x100>
   1da44:	mov	r3, #0
   1da48:	b	1da94 <rb_patricia_search_exact+0x148>
   1da4c:	ldr	r3, [fp, #-16]
   1da50:	ldr	r3, [r3, #4]
   1da54:	mov	r0, r3
   1da58:	bl	1d0b0 <prefix_tochar>
   1da5c:	mov	r4, r0
   1da60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1da64:	bl	1d0b0 <prefix_tochar>
   1da68:	mov	r3, r0
   1da6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da70:	mov	r1, r3
   1da74:	mov	r0, r4
   1da78:	bl	1d0ec <comp_with_mask>
   1da7c:	mov	r3, r0
   1da80:	cmp	r3, #0
   1da84:	beq	1da90 <rb_patricia_search_exact+0x144>
   1da88:	ldr	r3, [fp, #-16]
   1da8c:	b	1da94 <rb_patricia_search_exact+0x148>
   1da90:	mov	r3, #0
   1da94:	mov	r0, r3
   1da98:	sub	sp, fp, #8
   1da9c:	pop	{r4, fp, pc}

0001daa0 <rb_patricia_search_best2>:
   1daa0:	push	{r4, fp, lr}
   1daa4:	add	fp, sp, #8
   1daa8:	sub	sp, sp, #556	; 0x22c
   1daac:	str	r0, [fp, #-552]	; 0xfffffdd8
   1dab0:	str	r1, [fp, #-556]	; 0xfffffdd4
   1dab4:	str	r2, [fp, #-560]	; 0xfffffdd0
   1dab8:	mov	r3, #0
   1dabc:	str	r3, [fp, #-20]	; 0xffffffec
   1dac0:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   1dac4:	ldr	r3, [r3]
   1dac8:	cmp	r3, #0
   1dacc:	bne	1dad8 <rb_patricia_search_best2+0x38>
   1dad0:	mov	r3, #0
   1dad4:	b	1dc8c <rb_patricia_search_best2+0x1ec>
   1dad8:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   1dadc:	ldr	r3, [r3]
   1dae0:	str	r3, [fp, #-16]
   1dae4:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   1dae8:	add	r3, r3, #8
   1daec:	str	r3, [fp, #-24]	; 0xffffffe8
   1daf0:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   1daf4:	ldrh	r3, [r3, #2]
   1daf8:	str	r3, [fp, #-28]	; 0xffffffe4
   1dafc:	b	1db94 <rb_patricia_search_best2+0xf4>
   1db00:	ldr	r3, [fp, #-16]
   1db04:	ldr	r3, [r3, #4]
   1db08:	cmp	r3, #0
   1db0c:	beq	1db30 <rb_patricia_search_best2+0x90>
   1db10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1db14:	add	r2, r3, #1
   1db18:	str	r2, [fp, #-20]	; 0xffffffec
   1db1c:	lsl	r3, r3, #2
   1db20:	sub	r2, fp, #12
   1db24:	add	r3, r2, r3
   1db28:	ldr	r2, [fp, #-16]
   1db2c:	str	r2, [r3, #-532]	; 0xfffffdec
   1db30:	ldr	r3, [fp, #-16]
   1db34:	ldr	r3, [r3]
   1db38:	lsr	r3, r3, #3
   1db3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db40:	add	r3, r2, r3
   1db44:	ldrb	r3, [r3]
   1db48:	mov	r1, r3
   1db4c:	ldr	r3, [fp, #-16]
   1db50:	ldr	r3, [r3]
   1db54:	and	r3, r3, #7
   1db58:	mov	r2, #128	; 0x80
   1db5c:	asr	r3, r2, r3
   1db60:	and	r3, r3, r1
   1db64:	cmp	r3, #0
   1db68:	beq	1db7c <rb_patricia_search_best2+0xdc>
   1db6c:	ldr	r3, [fp, #-16]
   1db70:	ldr	r3, [r3, #12]
   1db74:	str	r3, [fp, #-16]
   1db78:	b	1db88 <rb_patricia_search_best2+0xe8>
   1db7c:	ldr	r3, [fp, #-16]
   1db80:	ldr	r3, [r3, #8]
   1db84:	str	r3, [fp, #-16]
   1db88:	ldr	r3, [fp, #-16]
   1db8c:	cmp	r3, #0
   1db90:	beq	1dbac <rb_patricia_search_best2+0x10c>
   1db94:	ldr	r3, [fp, #-16]
   1db98:	ldr	r2, [r3]
   1db9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dba0:	cmp	r2, r3
   1dba4:	bcc	1db00 <rb_patricia_search_best2+0x60>
   1dba8:	b	1dbb0 <rb_patricia_search_best2+0x110>
   1dbac:	nop			; (mov r0, r0)
   1dbb0:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   1dbb4:	cmp	r3, #0
   1dbb8:	beq	1dbf8 <rb_patricia_search_best2+0x158>
   1dbbc:	ldr	r3, [fp, #-16]
   1dbc0:	cmp	r3, #0
   1dbc4:	beq	1dbf8 <rb_patricia_search_best2+0x158>
   1dbc8:	ldr	r3, [fp, #-16]
   1dbcc:	ldr	r3, [r3, #4]
   1dbd0:	cmp	r3, #0
   1dbd4:	beq	1dbf8 <rb_patricia_search_best2+0x158>
   1dbd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dbdc:	add	r2, r3, #1
   1dbe0:	str	r2, [fp, #-20]	; 0xffffffec
   1dbe4:	lsl	r3, r3, #2
   1dbe8:	sub	r2, fp, #12
   1dbec:	add	r3, r2, r3
   1dbf0:	ldr	r2, [fp, #-16]
   1dbf4:	str	r2, [r3, #-532]	; 0xfffffdec
   1dbf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dbfc:	cmp	r3, #0
   1dc00:	bgt	1dc70 <rb_patricia_search_best2+0x1d0>
   1dc04:	mov	r3, #0
   1dc08:	b	1dc8c <rb_patricia_search_best2+0x1ec>
   1dc0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc10:	lsl	r3, r3, #2
   1dc14:	sub	r2, fp, #12
   1dc18:	add	r3, r2, r3
   1dc1c:	ldr	r3, [r3, #-532]	; 0xfffffdec
   1dc20:	str	r3, [fp, #-16]
   1dc24:	ldr	r3, [fp, #-16]
   1dc28:	ldr	r3, [r3, #4]
   1dc2c:	mov	r0, r3
   1dc30:	bl	1d0b0 <prefix_tochar>
   1dc34:	mov	r4, r0
   1dc38:	ldr	r0, [fp, #-556]	; 0xfffffdd4
   1dc3c:	bl	1d0b0 <prefix_tochar>
   1dc40:	mov	r1, r0
   1dc44:	ldr	r3, [fp, #-16]
   1dc48:	ldr	r3, [r3, #4]
   1dc4c:	ldrh	r3, [r3, #2]
   1dc50:	mov	r2, r3
   1dc54:	mov	r0, r4
   1dc58:	bl	1d0ec <comp_with_mask>
   1dc5c:	mov	r3, r0
   1dc60:	cmp	r3, #0
   1dc64:	beq	1dc70 <rb_patricia_search_best2+0x1d0>
   1dc68:	ldr	r3, [fp, #-16]
   1dc6c:	b	1dc8c <rb_patricia_search_best2+0x1ec>
   1dc70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc74:	sub	r3, r3, #1
   1dc78:	str	r3, [fp, #-20]	; 0xffffffec
   1dc7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc80:	cmp	r3, #0
   1dc84:	bge	1dc0c <rb_patricia_search_best2+0x16c>
   1dc88:	mov	r3, #0
   1dc8c:	mov	r0, r3
   1dc90:	sub	sp, fp, #8
   1dc94:	pop	{r4, fp, pc}

0001dc98 <rb_patricia_search_best>:
   1dc98:	push	{fp, lr}
   1dc9c:	add	fp, sp, #4
   1dca0:	sub	sp, sp, #8
   1dca4:	str	r0, [fp, #-8]
   1dca8:	str	r1, [fp, #-12]
   1dcac:	mov	r2, #1
   1dcb0:	ldr	r1, [fp, #-12]
   1dcb4:	ldr	r0, [fp, #-8]
   1dcb8:	bl	4724 <rb_patricia_search_best2@plt>
   1dcbc:	mov	r3, r0
   1dcc0:	mov	r0, r3
   1dcc4:	sub	sp, fp, #4
   1dcc8:	pop	{fp, pc}

0001dccc <rb_patricia_lookup>:
   1dccc:	push	{fp, lr}
   1dcd0:	add	fp, sp, #4
   1dcd4:	sub	sp, sp, #56	; 0x38
   1dcd8:	str	r0, [fp, #-56]	; 0xffffffc8
   1dcdc:	str	r1, [fp, #-60]	; 0xffffffc4
   1dce0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dce4:	ldr	r3, [r3]
   1dce8:	cmp	r3, #0
   1dcec:	bne	1dd80 <rb_patricia_lookup+0xb4>
   1dcf0:	mov	r0, #24
   1dcf4:	bl	1d004 <rb_malloc>
   1dcf8:	str	r0, [fp, #-8]
   1dcfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1dd00:	ldrh	r3, [r3, #2]
   1dd04:	mov	r2, r3
   1dd08:	ldr	r3, [fp, #-8]
   1dd0c:	str	r2, [r3]
   1dd10:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1dd14:	bl	1d52c <Ref_Prefix>
   1dd18:	mov	r2, r0
   1dd1c:	ldr	r3, [fp, #-8]
   1dd20:	str	r2, [r3, #4]
   1dd24:	ldr	r3, [fp, #-8]
   1dd28:	mov	r2, #0
   1dd2c:	str	r2, [r3, #16]
   1dd30:	ldr	r3, [fp, #-8]
   1dd34:	mov	r2, #0
   1dd38:	str	r2, [r3, #12]
   1dd3c:	ldr	r3, [fp, #-8]
   1dd40:	ldr	r2, [r3, #12]
   1dd44:	ldr	r3, [fp, #-8]
   1dd48:	str	r2, [r3, #8]
   1dd4c:	ldr	r3, [fp, #-8]
   1dd50:	mov	r2, #0
   1dd54:	str	r2, [r3, #20]
   1dd58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dd5c:	ldr	r2, [fp, #-8]
   1dd60:	str	r2, [r3]
   1dd64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dd68:	ldr	r3, [r3, #8]
   1dd6c:	add	r2, r3, #1
   1dd70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dd74:	str	r2, [r3, #8]
   1dd78:	ldr	r3, [fp, #-8]
   1dd7c:	b	1e37c <rb_patricia_lookup+0x6b0>
   1dd80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1dd84:	add	r3, r3, #8
   1dd88:	str	r3, [fp, #-28]	; 0xffffffe4
   1dd8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1dd90:	ldrh	r3, [r3, #2]
   1dd94:	str	r3, [fp, #-32]	; 0xffffffe0
   1dd98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dd9c:	ldr	r3, [r3]
   1dda0:	str	r3, [fp, #-8]
   1dda4:	b	1de38 <rb_patricia_lookup+0x16c>
   1dda8:	ldr	r3, [fp, #-8]
   1ddac:	ldr	r2, [r3]
   1ddb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ddb4:	ldr	r3, [r3, #4]
   1ddb8:	cmp	r2, r3
   1ddbc:	bcs	1de1c <rb_patricia_lookup+0x150>
   1ddc0:	ldr	r3, [fp, #-8]
   1ddc4:	ldr	r3, [r3]
   1ddc8:	lsr	r3, r3, #3
   1ddcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ddd0:	add	r3, r2, r3
   1ddd4:	ldrb	r3, [r3]
   1ddd8:	mov	r1, r3
   1dddc:	ldr	r3, [fp, #-8]
   1dde0:	ldr	r3, [r3]
   1dde4:	and	r3, r3, #7
   1dde8:	mov	r2, #128	; 0x80
   1ddec:	asr	r3, r2, r3
   1ddf0:	and	r3, r3, r1
   1ddf4:	cmp	r3, #0
   1ddf8:	beq	1de1c <rb_patricia_lookup+0x150>
   1ddfc:	ldr	r3, [fp, #-8]
   1de00:	ldr	r3, [r3, #12]
   1de04:	cmp	r3, #0
   1de08:	beq	1de60 <rb_patricia_lookup+0x194>
   1de0c:	ldr	r3, [fp, #-8]
   1de10:	ldr	r3, [r3, #12]
   1de14:	str	r3, [fp, #-8]
   1de18:	b	1de38 <rb_patricia_lookup+0x16c>
   1de1c:	ldr	r3, [fp, #-8]
   1de20:	ldr	r3, [r3, #8]
   1de24:	cmp	r3, #0
   1de28:	beq	1de68 <rb_patricia_lookup+0x19c>
   1de2c:	ldr	r3, [fp, #-8]
   1de30:	ldr	r3, [r3, #8]
   1de34:	str	r3, [fp, #-8]
   1de38:	ldr	r3, [fp, #-8]
   1de3c:	ldr	r2, [r3]
   1de40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de44:	cmp	r2, r3
   1de48:	bcc	1dda8 <rb_patricia_lookup+0xdc>
   1de4c:	ldr	r3, [fp, #-8]
   1de50:	ldr	r3, [r3, #4]
   1de54:	cmp	r3, #0
   1de58:	beq	1dda8 <rb_patricia_lookup+0xdc>
   1de5c:	b	1de6c <rb_patricia_lookup+0x1a0>
   1de60:	nop			; (mov r0, r0)
   1de64:	b	1de6c <rb_patricia_lookup+0x1a0>
   1de68:	nop			; (mov r0, r0)
   1de6c:	ldr	r3, [fp, #-8]
   1de70:	ldr	r3, [r3, #4]
   1de74:	add	r3, r3, #8
   1de78:	str	r3, [fp, #-36]	; 0xffffffdc
   1de7c:	ldr	r3, [fp, #-8]
   1de80:	ldr	r2, [r3]
   1de84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de88:	cmp	r2, r3
   1de8c:	movcc	r3, r2
   1de90:	movcs	r3, r3
   1de94:	str	r3, [fp, #-40]	; 0xffffffd8
   1de98:	mov	r3, #0
   1de9c:	str	r3, [fp, #-16]
   1dea0:	mov	r3, #0
   1dea4:	str	r3, [fp, #-20]	; 0xffffffec
   1dea8:	b	1df68 <rb_patricia_lookup+0x29c>
   1deac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1deb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1deb4:	add	r3, r2, r3
   1deb8:	ldrb	r2, [r3]
   1debc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dec4:	add	r3, r1, r3
   1dec8:	ldrb	r3, [r3]
   1decc:	eor	r3, r3, r2
   1ded0:	uxtb	r3, r3
   1ded4:	str	r3, [fp, #-44]	; 0xffffffd4
   1ded8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dedc:	cmp	r3, #0
   1dee0:	bne	1df04 <rb_patricia_lookup+0x238>
   1dee4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dee8:	add	r3, r3, #1
   1deec:	lsl	r3, r3, #3
   1def0:	str	r3, [fp, #-16]
   1def4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1def8:	add	r3, r3, #1
   1defc:	str	r3, [fp, #-20]	; 0xffffffec
   1df00:	b	1df68 <rb_patricia_lookup+0x29c>
   1df04:	mov	r3, #0
   1df08:	str	r3, [fp, #-24]	; 0xffffffe8
   1df0c:	b	1df3c <rb_patricia_lookup+0x270>
   1df10:	mov	r2, #128	; 0x80
   1df14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df18:	asr	r3, r2, r3
   1df1c:	mov	r2, r3
   1df20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1df24:	and	r3, r3, r2
   1df28:	cmp	r3, #0
   1df2c:	bne	1df4c <rb_patricia_lookup+0x280>
   1df30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df34:	add	r3, r3, #1
   1df38:	str	r3, [fp, #-24]	; 0xffffffe8
   1df3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df40:	cmp	r3, #7
   1df44:	bls	1df10 <rb_patricia_lookup+0x244>
   1df48:	b	1df50 <rb_patricia_lookup+0x284>
   1df4c:	nop			; (mov r0, r0)
   1df50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df54:	lsl	r2, r3, #3
   1df58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1df5c:	add	r3, r2, r3
   1df60:	str	r3, [fp, #-16]
   1df64:	b	1df7c <rb_patricia_lookup+0x2b0>
   1df68:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df6c:	lsl	r2, r3, #3
   1df70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1df74:	cmp	r2, r3
   1df78:	bcc	1deac <rb_patricia_lookup+0x1e0>
   1df7c:	ldr	r2, [fp, #-16]
   1df80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1df84:	cmp	r2, r3
   1df88:	bls	1df94 <rb_patricia_lookup+0x2c8>
   1df8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1df90:	str	r3, [fp, #-16]
   1df94:	ldr	r3, [fp, #-8]
   1df98:	ldr	r3, [r3, #16]
   1df9c:	str	r3, [fp, #-12]
   1dfa0:	b	1dfb8 <rb_patricia_lookup+0x2ec>
   1dfa4:	ldr	r3, [fp, #-12]
   1dfa8:	str	r3, [fp, #-8]
   1dfac:	ldr	r3, [fp, #-8]
   1dfb0:	ldr	r3, [r3, #16]
   1dfb4:	str	r3, [fp, #-12]
   1dfb8:	ldr	r3, [fp, #-12]
   1dfbc:	cmp	r3, #0
   1dfc0:	beq	1dfd8 <rb_patricia_lookup+0x30c>
   1dfc4:	ldr	r3, [fp, #-12]
   1dfc8:	ldr	r2, [r3]
   1dfcc:	ldr	r3, [fp, #-16]
   1dfd0:	cmp	r2, r3
   1dfd4:	bcs	1dfa4 <rb_patricia_lookup+0x2d8>
   1dfd8:	ldr	r2, [fp, #-16]
   1dfdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dfe0:	cmp	r2, r3
   1dfe4:	bne	1e030 <rb_patricia_lookup+0x364>
   1dfe8:	ldr	r3, [fp, #-8]
   1dfec:	ldr	r2, [r3]
   1dff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dff4:	cmp	r2, r3
   1dff8:	bne	1e030 <rb_patricia_lookup+0x364>
   1dffc:	ldr	r3, [fp, #-8]
   1e000:	ldr	r3, [r3, #4]
   1e004:	cmp	r3, #0
   1e008:	beq	1e014 <rb_patricia_lookup+0x348>
   1e00c:	ldr	r3, [fp, #-8]
   1e010:	b	1e37c <rb_patricia_lookup+0x6b0>
   1e014:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1e018:	bl	1d52c <Ref_Prefix>
   1e01c:	mov	r2, r0
   1e020:	ldr	r3, [fp, #-8]
   1e024:	str	r2, [r3, #4]
   1e028:	ldr	r3, [fp, #-8]
   1e02c:	b	1e37c <rb_patricia_lookup+0x6b0>
   1e030:	mov	r0, #24
   1e034:	bl	1d004 <rb_malloc>
   1e038:	str	r0, [fp, #-48]	; 0xffffffd0
   1e03c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1e040:	ldrh	r3, [r3, #2]
   1e044:	mov	r2, r3
   1e048:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e04c:	str	r2, [r3]
   1e050:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1e054:	bl	1d52c <Ref_Prefix>
   1e058:	mov	r2, r0
   1e05c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e060:	str	r2, [r3, #4]
   1e064:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e068:	mov	r2, #0
   1e06c:	str	r2, [r3, #16]
   1e070:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e074:	mov	r2, #0
   1e078:	str	r2, [r3, #12]
   1e07c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e080:	ldr	r2, [r3, #12]
   1e084:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e088:	str	r2, [r3, #8]
   1e08c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e090:	mov	r2, #0
   1e094:	str	r2, [r3, #20]
   1e098:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e09c:	ldr	r3, [r3, #8]
   1e0a0:	add	r2, r3, #1
   1e0a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e0a8:	str	r2, [r3, #8]
   1e0ac:	ldr	r3, [fp, #-8]
   1e0b0:	ldr	r2, [r3]
   1e0b4:	ldr	r3, [fp, #-16]
   1e0b8:	cmp	r2, r3
   1e0bc:	bne	1e144 <rb_patricia_lookup+0x478>
   1e0c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e0c4:	ldr	r2, [fp, #-8]
   1e0c8:	str	r2, [r3, #16]
   1e0cc:	ldr	r3, [fp, #-8]
   1e0d0:	ldr	r2, [r3]
   1e0d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e0d8:	ldr	r3, [r3, #4]
   1e0dc:	cmp	r2, r3
   1e0e0:	bcs	1e130 <rb_patricia_lookup+0x464>
   1e0e4:	ldr	r3, [fp, #-8]
   1e0e8:	ldr	r3, [r3]
   1e0ec:	lsr	r3, r3, #3
   1e0f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e0f4:	add	r3, r2, r3
   1e0f8:	ldrb	r3, [r3]
   1e0fc:	mov	r1, r3
   1e100:	ldr	r3, [fp, #-8]
   1e104:	ldr	r3, [r3]
   1e108:	and	r3, r3, #7
   1e10c:	mov	r2, #128	; 0x80
   1e110:	asr	r3, r2, r3
   1e114:	and	r3, r3, r1
   1e118:	cmp	r3, #0
   1e11c:	beq	1e130 <rb_patricia_lookup+0x464>
   1e120:	ldr	r3, [fp, #-8]
   1e124:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e128:	str	r2, [r3, #12]
   1e12c:	b	1e13c <rb_patricia_lookup+0x470>
   1e130:	ldr	r3, [fp, #-8]
   1e134:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e138:	str	r2, [r3, #8]
   1e13c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e140:	b	1e37c <rb_patricia_lookup+0x6b0>
   1e144:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e148:	ldr	r3, [fp, #-16]
   1e14c:	cmp	r2, r3
   1e150:	bne	1e234 <rb_patricia_lookup+0x568>
   1e154:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e158:	ldr	r2, [r3, #4]
   1e15c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e160:	cmp	r2, r3
   1e164:	bls	1e1ac <rb_patricia_lookup+0x4e0>
   1e168:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e16c:	lsr	r3, r3, #3
   1e170:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1e174:	add	r3, r2, r3
   1e178:	ldrb	r3, [r3]
   1e17c:	mov	r1, r3
   1e180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e184:	and	r3, r3, #7
   1e188:	mov	r2, #128	; 0x80
   1e18c:	asr	r3, r2, r3
   1e190:	and	r3, r3, r1
   1e194:	cmp	r3, #0
   1e198:	beq	1e1ac <rb_patricia_lookup+0x4e0>
   1e19c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e1a0:	ldr	r2, [fp, #-8]
   1e1a4:	str	r2, [r3, #12]
   1e1a8:	b	1e1b8 <rb_patricia_lookup+0x4ec>
   1e1ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e1b0:	ldr	r2, [fp, #-8]
   1e1b4:	str	r2, [r3, #8]
   1e1b8:	ldr	r3, [fp, #-8]
   1e1bc:	ldr	r2, [r3, #16]
   1e1c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e1c4:	str	r2, [r3, #16]
   1e1c8:	ldr	r3, [fp, #-8]
   1e1cc:	ldr	r3, [r3, #16]
   1e1d0:	cmp	r3, #0
   1e1d4:	bne	1e1e8 <rb_patricia_lookup+0x51c>
   1e1d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e1dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e1e0:	str	r2, [r3]
   1e1e4:	b	1e224 <rb_patricia_lookup+0x558>
   1e1e8:	ldr	r3, [fp, #-8]
   1e1ec:	ldr	r3, [r3, #16]
   1e1f0:	ldr	r2, [r3, #12]
   1e1f4:	ldr	r3, [fp, #-8]
   1e1f8:	cmp	r2, r3
   1e1fc:	bne	1e214 <rb_patricia_lookup+0x548>
   1e200:	ldr	r3, [fp, #-8]
   1e204:	ldr	r3, [r3, #16]
   1e208:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e20c:	str	r2, [r3, #12]
   1e210:	b	1e224 <rb_patricia_lookup+0x558>
   1e214:	ldr	r3, [fp, #-8]
   1e218:	ldr	r3, [r3, #16]
   1e21c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e220:	str	r2, [r3, #8]
   1e224:	ldr	r3, [fp, #-8]
   1e228:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e22c:	str	r2, [r3, #16]
   1e230:	b	1e378 <rb_patricia_lookup+0x6ac>
   1e234:	mov	r0, #24
   1e238:	bl	1d004 <rb_malloc>
   1e23c:	str	r0, [fp, #-52]	; 0xffffffcc
   1e240:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e244:	ldr	r2, [fp, #-16]
   1e248:	str	r2, [r3]
   1e24c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e250:	mov	r2, #0
   1e254:	str	r2, [r3, #4]
   1e258:	ldr	r3, [fp, #-8]
   1e25c:	ldr	r2, [r3, #16]
   1e260:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e264:	str	r2, [r3, #16]
   1e268:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e26c:	mov	r2, #0
   1e270:	str	r2, [r3, #20]
   1e274:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e278:	ldr	r3, [r3, #8]
   1e27c:	add	r2, r3, #1
   1e280:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e284:	str	r2, [r3, #8]
   1e288:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e28c:	ldr	r2, [r3, #4]
   1e290:	ldr	r3, [fp, #-16]
   1e294:	cmp	r2, r3
   1e298:	bls	1e2ec <rb_patricia_lookup+0x620>
   1e29c:	ldr	r3, [fp, #-16]
   1e2a0:	lsr	r3, r3, #3
   1e2a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e2a8:	add	r3, r2, r3
   1e2ac:	ldrb	r3, [r3]
   1e2b0:	mov	r1, r3
   1e2b4:	ldr	r3, [fp, #-16]
   1e2b8:	and	r3, r3, #7
   1e2bc:	mov	r2, #128	; 0x80
   1e2c0:	asr	r3, r2, r3
   1e2c4:	and	r3, r3, r1
   1e2c8:	cmp	r3, #0
   1e2cc:	beq	1e2ec <rb_patricia_lookup+0x620>
   1e2d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e2d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e2d8:	str	r2, [r3, #12]
   1e2dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e2e0:	ldr	r2, [fp, #-8]
   1e2e4:	str	r2, [r3, #8]
   1e2e8:	b	1e304 <rb_patricia_lookup+0x638>
   1e2ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e2f0:	ldr	r2, [fp, #-8]
   1e2f4:	str	r2, [r3, #12]
   1e2f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e2fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e300:	str	r2, [r3, #8]
   1e304:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e308:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e30c:	str	r2, [r3, #16]
   1e310:	ldr	r3, [fp, #-8]
   1e314:	ldr	r3, [r3, #16]
   1e318:	cmp	r3, #0
   1e31c:	bne	1e330 <rb_patricia_lookup+0x664>
   1e320:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1e324:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e328:	str	r2, [r3]
   1e32c:	b	1e36c <rb_patricia_lookup+0x6a0>
   1e330:	ldr	r3, [fp, #-8]
   1e334:	ldr	r3, [r3, #16]
   1e338:	ldr	r2, [r3, #12]
   1e33c:	ldr	r3, [fp, #-8]
   1e340:	cmp	r2, r3
   1e344:	bne	1e35c <rb_patricia_lookup+0x690>
   1e348:	ldr	r3, [fp, #-8]
   1e34c:	ldr	r3, [r3, #16]
   1e350:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e354:	str	r2, [r3, #12]
   1e358:	b	1e36c <rb_patricia_lookup+0x6a0>
   1e35c:	ldr	r3, [fp, #-8]
   1e360:	ldr	r3, [r3, #16]
   1e364:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e368:	str	r2, [r3, #8]
   1e36c:	ldr	r3, [fp, #-8]
   1e370:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e374:	str	r2, [r3, #16]
   1e378:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e37c:	mov	r0, r3
   1e380:	sub	sp, fp, #4
   1e384:	pop	{fp, pc}

0001e388 <rb_patricia_remove>:
   1e388:	push	{fp, lr}
   1e38c:	add	fp, sp, #4
   1e390:	sub	sp, sp, #16
   1e394:	str	r0, [fp, #-16]
   1e398:	str	r1, [fp, #-20]	; 0xffffffec
   1e39c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e3a0:	ldr	r3, [r3, #12]
   1e3a4:	cmp	r3, #0
   1e3a8:	beq	1e3f8 <rb_patricia_remove+0x70>
   1e3ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e3b0:	ldr	r3, [r3, #8]
   1e3b4:	cmp	r3, #0
   1e3b8:	beq	1e3f8 <rb_patricia_remove+0x70>
   1e3bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e3c0:	ldr	r3, [r3, #4]
   1e3c4:	cmp	r3, #0
   1e3c8:	beq	1e3dc <rb_patricia_remove+0x54>
   1e3cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e3d0:	ldr	r3, [r3, #4]
   1e3d4:	mov	r0, r3
   1e3d8:	bl	1d5b4 <Deref_Prefix>
   1e3dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e3e0:	mov	r2, #0
   1e3e4:	str	r2, [r3, #4]
   1e3e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e3ec:	mov	r2, #0
   1e3f0:	str	r2, [r3, #20]
   1e3f4:	b	1e614 <rb_patricia_remove+0x28c>
   1e3f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e3fc:	ldr	r3, [r3, #12]
   1e400:	cmp	r3, #0
   1e404:	bne	1e550 <rb_patricia_remove+0x1c8>
   1e408:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e40c:	ldr	r3, [r3, #8]
   1e410:	cmp	r3, #0
   1e414:	bne	1e550 <rb_patricia_remove+0x1c8>
   1e418:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e41c:	ldr	r3, [r3, #16]
   1e420:	str	r3, [fp, #-12]
   1e424:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e428:	ldr	r3, [r3, #4]
   1e42c:	mov	r0, r3
   1e430:	bl	1d5b4 <Deref_Prefix>
   1e434:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e438:	bl	1d058 <rb_free>
   1e43c:	ldr	r3, [fp, #-16]
   1e440:	ldr	r3, [r3, #8]
   1e444:	sub	r2, r3, #1
   1e448:	ldr	r3, [fp, #-16]
   1e44c:	str	r2, [r3, #8]
   1e450:	ldr	r3, [fp, #-12]
   1e454:	cmp	r3, #0
   1e458:	bne	1e46c <rb_patricia_remove+0xe4>
   1e45c:	ldr	r3, [fp, #-16]
   1e460:	mov	r2, #0
   1e464:	str	r2, [r3]
   1e468:	b	1e614 <rb_patricia_remove+0x28c>
   1e46c:	ldr	r3, [fp, #-12]
   1e470:	ldr	r2, [r3, #12]
   1e474:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e478:	cmp	r2, r3
   1e47c:	bne	1e49c <rb_patricia_remove+0x114>
   1e480:	ldr	r3, [fp, #-12]
   1e484:	mov	r2, #0
   1e488:	str	r2, [r3, #12]
   1e48c:	ldr	r3, [fp, #-12]
   1e490:	ldr	r3, [r3, #8]
   1e494:	str	r3, [fp, #-8]
   1e498:	b	1e4b4 <rb_patricia_remove+0x12c>
   1e49c:	ldr	r3, [fp, #-12]
   1e4a0:	mov	r2, #0
   1e4a4:	str	r2, [r3, #8]
   1e4a8:	ldr	r3, [fp, #-12]
   1e4ac:	ldr	r3, [r3, #12]
   1e4b0:	str	r3, [fp, #-8]
   1e4b4:	ldr	r3, [fp, #-12]
   1e4b8:	ldr	r3, [r3, #4]
   1e4bc:	cmp	r3, #0
   1e4c0:	bne	1e610 <rb_patricia_remove+0x288>
   1e4c4:	ldr	r3, [fp, #-12]
   1e4c8:	ldr	r3, [r3, #16]
   1e4cc:	cmp	r3, #0
   1e4d0:	bne	1e4e4 <rb_patricia_remove+0x15c>
   1e4d4:	ldr	r3, [fp, #-16]
   1e4d8:	ldr	r2, [fp, #-8]
   1e4dc:	str	r2, [r3]
   1e4e0:	b	1e520 <rb_patricia_remove+0x198>
   1e4e4:	ldr	r3, [fp, #-12]
   1e4e8:	ldr	r3, [r3, #16]
   1e4ec:	ldr	r2, [r3, #12]
   1e4f0:	ldr	r3, [fp, #-12]
   1e4f4:	cmp	r2, r3
   1e4f8:	bne	1e510 <rb_patricia_remove+0x188>
   1e4fc:	ldr	r3, [fp, #-12]
   1e500:	ldr	r3, [r3, #16]
   1e504:	ldr	r2, [fp, #-8]
   1e508:	str	r2, [r3, #12]
   1e50c:	b	1e520 <rb_patricia_remove+0x198>
   1e510:	ldr	r3, [fp, #-12]
   1e514:	ldr	r3, [r3, #16]
   1e518:	ldr	r2, [fp, #-8]
   1e51c:	str	r2, [r3, #8]
   1e520:	ldr	r3, [fp, #-12]
   1e524:	ldr	r2, [r3, #16]
   1e528:	ldr	r3, [fp, #-8]
   1e52c:	str	r2, [r3, #16]
   1e530:	ldr	r0, [fp, #-12]
   1e534:	bl	1d058 <rb_free>
   1e538:	ldr	r3, [fp, #-16]
   1e53c:	ldr	r3, [r3, #8]
   1e540:	sub	r2, r3, #1
   1e544:	ldr	r3, [fp, #-16]
   1e548:	str	r2, [r3, #8]
   1e54c:	b	1e614 <rb_patricia_remove+0x28c>
   1e550:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e554:	ldr	r3, [r3, #12]
   1e558:	cmp	r3, #0
   1e55c:	beq	1e570 <rb_patricia_remove+0x1e8>
   1e560:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e564:	ldr	r3, [r3, #12]
   1e568:	str	r3, [fp, #-8]
   1e56c:	b	1e57c <rb_patricia_remove+0x1f4>
   1e570:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e574:	ldr	r3, [r3, #8]
   1e578:	str	r3, [fp, #-8]
   1e57c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e580:	ldr	r3, [r3, #16]
   1e584:	str	r3, [fp, #-12]
   1e588:	ldr	r3, [fp, #-8]
   1e58c:	ldr	r2, [fp, #-12]
   1e590:	str	r2, [r3, #16]
   1e594:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e598:	ldr	r3, [r3, #4]
   1e59c:	mov	r0, r3
   1e5a0:	bl	1d5b4 <Deref_Prefix>
   1e5a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e5a8:	bl	1d058 <rb_free>
   1e5ac:	ldr	r3, [fp, #-16]
   1e5b0:	ldr	r3, [r3, #8]
   1e5b4:	sub	r2, r3, #1
   1e5b8:	ldr	r3, [fp, #-16]
   1e5bc:	str	r2, [r3, #8]
   1e5c0:	ldr	r3, [fp, #-12]
   1e5c4:	cmp	r3, #0
   1e5c8:	bne	1e5dc <rb_patricia_remove+0x254>
   1e5cc:	ldr	r3, [fp, #-16]
   1e5d0:	ldr	r2, [fp, #-8]
   1e5d4:	str	r2, [r3]
   1e5d8:	b	1e614 <rb_patricia_remove+0x28c>
   1e5dc:	ldr	r3, [fp, #-12]
   1e5e0:	ldr	r2, [r3, #12]
   1e5e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e5e8:	cmp	r2, r3
   1e5ec:	bne	1e600 <rb_patricia_remove+0x278>
   1e5f0:	ldr	r3, [fp, #-12]
   1e5f4:	ldr	r2, [fp, #-8]
   1e5f8:	str	r2, [r3, #12]
   1e5fc:	b	1e614 <rb_patricia_remove+0x28c>
   1e600:	ldr	r3, [fp, #-12]
   1e604:	ldr	r2, [fp, #-8]
   1e608:	str	r2, [r3, #8]
   1e60c:	b	1e614 <rb_patricia_remove+0x28c>
   1e610:	nop			; (mov r0, r0)
   1e614:	sub	sp, fp, #4
   1e618:	pop	{fp, pc}

0001e61c <make_and_lookup_ip>:
   1e61c:	push	{fp, lr}
   1e620:	add	fp, sp, #4
   1e624:	sub	sp, sp, #32
   1e628:	str	r0, [fp, #-24]	; 0xffffffe8
   1e62c:	str	r1, [fp, #-28]	; 0xffffffe4
   1e630:	str	r2, [fp, #-32]	; 0xffffffe0
   1e634:	mov	r3, #0
   1e638:	str	r3, [fp, #-8]
   1e63c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e640:	ldrh	r3, [r3]
   1e644:	cmp	r3, #10
   1e648:	bne	1e65c <make_and_lookup_ip+0x40>
   1e64c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e650:	add	r3, r3, #8
   1e654:	str	r3, [fp, #-8]
   1e658:	b	1e668 <make_and_lookup_ip+0x4c>
   1e65c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e660:	add	r3, r3, #4
   1e664:	str	r3, [fp, #-8]
   1e668:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e66c:	ldrh	r3, [r3]
   1e670:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e674:	ldr	r1, [fp, #-8]
   1e678:	mov	r0, r3
   1e67c:	bl	1d2f4 <New_Prefix>
   1e680:	str	r0, [fp, #-12]
   1e684:	ldr	r3, [fp, #-12]
   1e688:	cmp	r3, #0
   1e68c:	bne	1e698 <make_and_lookup_ip+0x7c>
   1e690:	mov	r3, #0
   1e694:	b	1e6b4 <make_and_lookup_ip+0x98>
   1e698:	ldr	r1, [fp, #-12]
   1e69c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6a0:	bl	4970 <rb_patricia_lookup@plt>
   1e6a4:	str	r0, [fp, #-16]
   1e6a8:	ldr	r0, [fp, #-12]
   1e6ac:	bl	1d5b4 <Deref_Prefix>
   1e6b0:	ldr	r3, [fp, #-16]
   1e6b4:	mov	r0, r3
   1e6b8:	sub	sp, fp, #4
   1e6bc:	pop	{fp, pc}

0001e6c0 <make_and_lookup>:
   1e6c0:	push	{fp, lr}
   1e6c4:	add	fp, sp, #4
   1e6c8:	sub	sp, sp, #16
   1e6cc:	str	r0, [fp, #-16]
   1e6d0:	str	r1, [fp, #-20]	; 0xffffffec
   1e6d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e6d8:	mov	r0, #2
   1e6dc:	bl	1d330 <ascii2prefix>
   1e6e0:	str	r0, [fp, #-8]
   1e6e4:	ldr	r3, [fp, #-8]
   1e6e8:	cmp	r3, #0
   1e6ec:	beq	1e704 <make_and_lookup+0x44>
   1e6f0:	ldr	r1, [fp, #-8]
   1e6f4:	ldr	r0, [fp, #-16]
   1e6f8:	bl	4970 <rb_patricia_lookup@plt>
   1e6fc:	str	r0, [fp, #-12]
   1e700:	b	1e73c <make_and_lookup+0x7c>
   1e704:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e708:	mov	r0, #10
   1e70c:	bl	1d330 <ascii2prefix>
   1e710:	str	r0, [fp, #-8]
   1e714:	ldr	r3, [fp, #-8]
   1e718:	cmp	r3, #0
   1e71c:	beq	1e734 <make_and_lookup+0x74>
   1e720:	ldr	r1, [fp, #-8]
   1e724:	ldr	r0, [fp, #-16]
   1e728:	bl	4970 <rb_patricia_lookup@plt>
   1e72c:	str	r0, [fp, #-12]
   1e730:	b	1e73c <make_and_lookup+0x7c>
   1e734:	mov	r3, #0
   1e738:	b	1e748 <make_and_lookup+0x88>
   1e73c:	ldr	r0, [fp, #-8]
   1e740:	bl	1d5b4 <Deref_Prefix>
   1e744:	ldr	r3, [fp, #-12]
   1e748:	mov	r0, r3
   1e74c:	sub	sp, fp, #4
   1e750:	pop	{fp, pc}

0001e754 <rb_match_ip>:
   1e754:	push	{fp, lr}
   1e758:	add	fp, sp, #4
   1e75c:	sub	sp, sp, #32
   1e760:	str	r0, [fp, #-32]	; 0xffffffe0
   1e764:	str	r1, [fp, #-36]	; 0xffffffdc
   1e768:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e76c:	ldrh	r3, [r3]
   1e770:	cmp	r3, #10
   1e774:	bne	1e798 <rb_match_ip+0x44>
   1e778:	mov	r3, #128	; 0x80
   1e77c:	str	r3, [fp, #-12]
   1e780:	mov	r3, #10
   1e784:	str	r3, [fp, #-16]
   1e788:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e78c:	add	r3, r3, #8
   1e790:	str	r3, [fp, #-8]
   1e794:	b	1e7b4 <rb_match_ip+0x60>
   1e798:	mov	r3, #32
   1e79c:	str	r3, [fp, #-12]
   1e7a0:	mov	r3, #2
   1e7a4:	str	r3, [fp, #-16]
   1e7a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e7ac:	add	r3, r3, #4
   1e7b0:	str	r3, [fp, #-8]
   1e7b4:	ldr	r3, [fp, #-12]
   1e7b8:	mov	r2, r3
   1e7bc:	ldr	r1, [fp, #-8]
   1e7c0:	ldr	r0, [fp, #-16]
   1e7c4:	bl	1d2f4 <New_Prefix>
   1e7c8:	str	r0, [fp, #-20]	; 0xffffffec
   1e7cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e7d0:	cmp	r3, #0
   1e7d4:	beq	1e7f8 <rb_match_ip+0xa4>
   1e7d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e7dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e7e0:	bl	45bc <rb_patricia_search_best@plt>
   1e7e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1e7e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e7ec:	bl	1d5b4 <Deref_Prefix>
   1e7f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e7f4:	b	1e7fc <rb_match_ip+0xa8>
   1e7f8:	mov	r3, #0
   1e7fc:	mov	r0, r3
   1e800:	sub	sp, fp, #4
   1e804:	pop	{fp, pc}

0001e808 <rb_match_ip_exact>:
   1e808:	push	{fp, lr}
   1e80c:	add	fp, sp, #4
   1e810:	sub	sp, sp, #32
   1e814:	str	r0, [fp, #-24]	; 0xffffffe8
   1e818:	str	r1, [fp, #-28]	; 0xffffffe4
   1e81c:	str	r2, [fp, #-32]	; 0xffffffe0
   1e820:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e824:	ldrh	r3, [r3]
   1e828:	cmp	r3, #10
   1e82c:	bne	1e85c <rb_match_ip_exact+0x54>
   1e830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e834:	cmp	r3, #128	; 0x80
   1e838:	bls	1e844 <rb_match_ip_exact+0x3c>
   1e83c:	mov	r3, #128	; 0x80
   1e840:	str	r3, [fp, #-32]	; 0xffffffe0
   1e844:	mov	r3, #10
   1e848:	str	r3, [fp, #-12]
   1e84c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e850:	add	r3, r3, #8
   1e854:	str	r3, [fp, #-8]
   1e858:	b	1e884 <rb_match_ip_exact+0x7c>
   1e85c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e860:	cmp	r3, #32
   1e864:	bls	1e870 <rb_match_ip_exact+0x68>
   1e868:	mov	r3, #32
   1e86c:	str	r3, [fp, #-32]	; 0xffffffe0
   1e870:	mov	r3, #2
   1e874:	str	r3, [fp, #-12]
   1e878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e87c:	add	r3, r3, #4
   1e880:	str	r3, [fp, #-8]
   1e884:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e888:	mov	r2, r3
   1e88c:	ldr	r1, [fp, #-8]
   1e890:	ldr	r0, [fp, #-12]
   1e894:	bl	1d2f4 <New_Prefix>
   1e898:	str	r0, [fp, #-16]
   1e89c:	ldr	r3, [fp, #-16]
   1e8a0:	cmp	r3, #0
   1e8a4:	beq	1e8c8 <rb_match_ip_exact+0xc0>
   1e8a8:	ldr	r1, [fp, #-16]
   1e8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8b0:	bl	491c <rb_patricia_search_exact@plt>
   1e8b4:	str	r0, [fp, #-20]	; 0xffffffec
   1e8b8:	ldr	r0, [fp, #-16]
   1e8bc:	bl	1d5b4 <Deref_Prefix>
   1e8c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8c4:	b	1e8cc <rb_match_ip_exact+0xc4>
   1e8c8:	mov	r3, #0
   1e8cc:	mov	r0, r3
   1e8d0:	sub	sp, fp, #4
   1e8d4:	pop	{fp, pc}

0001e8d8 <rb_match_string>:
   1e8d8:	push	{fp, lr}
   1e8dc:	add	fp, sp, #4
   1e8e0:	sub	sp, sp, #16
   1e8e4:	str	r0, [fp, #-16]
   1e8e8:	str	r1, [fp, #-20]	; 0xffffffec
   1e8ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e8f0:	mov	r0, #2
   1e8f4:	bl	1d330 <ascii2prefix>
   1e8f8:	str	r0, [fp, #-12]
   1e8fc:	ldr	r3, [fp, #-12]
   1e900:	cmp	r3, #0
   1e904:	beq	1e924 <rb_match_string+0x4c>
   1e908:	ldr	r1, [fp, #-12]
   1e90c:	ldr	r0, [fp, #-16]
   1e910:	bl	45bc <rb_patricia_search_best@plt>
   1e914:	str	r0, [fp, #-8]
   1e918:	ldr	r0, [fp, #-12]
   1e91c:	bl	1d5b4 <Deref_Prefix>
   1e920:	b	1e964 <rb_match_string+0x8c>
   1e924:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e928:	mov	r0, #10
   1e92c:	bl	1d330 <ascii2prefix>
   1e930:	str	r0, [fp, #-12]
   1e934:	ldr	r3, [fp, #-12]
   1e938:	cmp	r3, #0
   1e93c:	beq	1e95c <rb_match_string+0x84>
   1e940:	ldr	r1, [fp, #-12]
   1e944:	ldr	r0, [fp, #-16]
   1e948:	bl	45bc <rb_patricia_search_best@plt>
   1e94c:	str	r0, [fp, #-8]
   1e950:	ldr	r0, [fp, #-12]
   1e954:	bl	1d5b4 <Deref_Prefix>
   1e958:	b	1e964 <rb_match_string+0x8c>
   1e95c:	mov	r3, #0
   1e960:	b	1e968 <rb_match_string+0x90>
   1e964:	ldr	r3, [fp, #-8]
   1e968:	mov	r0, r3
   1e96c:	sub	sp, fp, #4
   1e970:	pop	{fp, pc}

0001e974 <rb_match_exact_string>:
   1e974:	push	{fp, lr}
   1e978:	add	fp, sp, #4
   1e97c:	sub	sp, sp, #16
   1e980:	str	r0, [fp, #-16]
   1e984:	str	r1, [fp, #-20]	; 0xffffffec
   1e988:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e98c:	mov	r0, #2
   1e990:	bl	1d330 <ascii2prefix>
   1e994:	str	r0, [fp, #-12]
   1e998:	ldr	r3, [fp, #-12]
   1e99c:	cmp	r3, #0
   1e9a0:	beq	1e9c0 <rb_match_exact_string+0x4c>
   1e9a4:	ldr	r1, [fp, #-12]
   1e9a8:	ldr	r0, [fp, #-16]
   1e9ac:	bl	491c <rb_patricia_search_exact@plt>
   1e9b0:	str	r0, [fp, #-8]
   1e9b4:	ldr	r0, [fp, #-12]
   1e9b8:	bl	1d5b4 <Deref_Prefix>
   1e9bc:	b	1ea00 <rb_match_exact_string+0x8c>
   1e9c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e9c4:	mov	r0, #10
   1e9c8:	bl	1d330 <ascii2prefix>
   1e9cc:	str	r0, [fp, #-12]
   1e9d0:	ldr	r3, [fp, #-12]
   1e9d4:	cmp	r3, #0
   1e9d8:	beq	1e9f8 <rb_match_exact_string+0x84>
   1e9dc:	ldr	r1, [fp, #-12]
   1e9e0:	ldr	r0, [fp, #-16]
   1e9e4:	bl	491c <rb_patricia_search_exact@plt>
   1e9e8:	str	r0, [fp, #-8]
   1e9ec:	ldr	r0, [fp, #-12]
   1e9f0:	bl	1d5b4 <Deref_Prefix>
   1e9f4:	b	1ea00 <rb_match_exact_string+0x8c>
   1e9f8:	mov	r3, #0
   1e9fc:	b	1ea04 <rb_match_exact_string+0x90>
   1ea00:	ldr	r3, [fp, #-8]
   1ea04:	mov	r0, r3
   1ea08:	sub	sp, fp, #4
   1ea0c:	pop	{fp, pc}

0001ea10 <rb_dlinkAdd>:
   1ea10:	push	{fp}		; (str fp, [sp, #-4]!)
   1ea14:	add	fp, sp, #0
   1ea18:	sub	sp, sp, #20
   1ea1c:	str	r0, [fp, #-8]
   1ea20:	str	r1, [fp, #-12]
   1ea24:	str	r2, [fp, #-16]
   1ea28:	ldr	r3, [fp, #-12]
   1ea2c:	ldr	r2, [fp, #-8]
   1ea30:	str	r2, [r3]
   1ea34:	ldr	r3, [fp, #-12]
   1ea38:	mov	r2, #0
   1ea3c:	str	r2, [r3, #4]
   1ea40:	ldr	r3, [fp, #-16]
   1ea44:	ldr	r2, [r3]
   1ea48:	ldr	r3, [fp, #-12]
   1ea4c:	str	r2, [r3, #8]
   1ea50:	ldr	r3, [fp, #-16]
   1ea54:	ldr	r3, [r3]
   1ea58:	cmp	r3, #0
   1ea5c:	beq	1ea74 <rb_dlinkAdd+0x64>
   1ea60:	ldr	r3, [fp, #-16]
   1ea64:	ldr	r3, [r3]
   1ea68:	ldr	r2, [fp, #-12]
   1ea6c:	str	r2, [r3, #4]
   1ea70:	b	1ea90 <rb_dlinkAdd+0x80>
   1ea74:	ldr	r3, [fp, #-16]
   1ea78:	ldr	r3, [r3, #4]
   1ea7c:	cmp	r3, #0
   1ea80:	bne	1ea90 <rb_dlinkAdd+0x80>
   1ea84:	ldr	r3, [fp, #-16]
   1ea88:	ldr	r2, [fp, #-12]
   1ea8c:	str	r2, [r3, #4]
   1ea90:	ldr	r3, [fp, #-16]
   1ea94:	ldr	r2, [fp, #-12]
   1ea98:	str	r2, [r3]
   1ea9c:	ldr	r3, [fp, #-16]
   1eaa0:	ldr	r3, [r3, #8]
   1eaa4:	add	r2, r3, #1
   1eaa8:	ldr	r3, [fp, #-16]
   1eaac:	str	r2, [r3, #8]
   1eab0:	nop			; (mov r0, r0)
   1eab4:	add	sp, fp, #0
   1eab8:	pop	{fp}		; (ldr fp, [sp], #4)
   1eabc:	bx	lr

0001eac0 <rb_dlinkDelete>:
   1eac0:	push	{fp}		; (str fp, [sp, #-4]!)
   1eac4:	add	fp, sp, #0
   1eac8:	sub	sp, sp, #12
   1eacc:	str	r0, [fp, #-8]
   1ead0:	str	r1, [fp, #-12]
   1ead4:	ldr	r3, [fp, #-8]
   1ead8:	ldr	r3, [r3, #8]
   1eadc:	cmp	r3, #0
   1eae0:	beq	1eafc <rb_dlinkDelete+0x3c>
   1eae4:	ldr	r3, [fp, #-8]
   1eae8:	ldr	r3, [r3, #8]
   1eaec:	ldr	r2, [fp, #-8]
   1eaf0:	ldr	r2, [r2, #4]
   1eaf4:	str	r2, [r3, #4]
   1eaf8:	b	1eb0c <rb_dlinkDelete+0x4c>
   1eafc:	ldr	r3, [fp, #-8]
   1eb00:	ldr	r2, [r3, #4]
   1eb04:	ldr	r3, [fp, #-12]
   1eb08:	str	r2, [r3, #4]
   1eb0c:	ldr	r3, [fp, #-8]
   1eb10:	ldr	r3, [r3, #4]
   1eb14:	cmp	r3, #0
   1eb18:	beq	1eb34 <rb_dlinkDelete+0x74>
   1eb1c:	ldr	r3, [fp, #-8]
   1eb20:	ldr	r3, [r3, #4]
   1eb24:	ldr	r2, [fp, #-8]
   1eb28:	ldr	r2, [r2, #8]
   1eb2c:	str	r2, [r3, #8]
   1eb30:	b	1eb44 <rb_dlinkDelete+0x84>
   1eb34:	ldr	r3, [fp, #-8]
   1eb38:	ldr	r2, [r3, #8]
   1eb3c:	ldr	r3, [fp, #-12]
   1eb40:	str	r2, [r3]
   1eb44:	ldr	r3, [fp, #-8]
   1eb48:	mov	r2, #0
   1eb4c:	str	r2, [r3, #4]
   1eb50:	ldr	r3, [fp, #-8]
   1eb54:	ldr	r2, [r3, #4]
   1eb58:	ldr	r3, [fp, #-8]
   1eb5c:	str	r2, [r3, #8]
   1eb60:	ldr	r3, [fp, #-12]
   1eb64:	ldr	r3, [r3, #8]
   1eb68:	sub	r2, r3, #1
   1eb6c:	ldr	r3, [fp, #-12]
   1eb70:	str	r2, [r3, #8]
   1eb74:	nop			; (mov r0, r0)
   1eb78:	add	sp, fp, #0
   1eb7c:	pop	{fp}		; (ldr fp, [sp], #4)
   1eb80:	bx	lr

0001eb84 <rb_malloc>:
   1eb84:	push	{fp, lr}
   1eb88:	add	fp, sp, #4
   1eb8c:	sub	sp, sp, #16
   1eb90:	str	r0, [fp, #-16]
   1eb94:	ldr	r1, [fp, #-16]
   1eb98:	mov	r0, #1
   1eb9c:	bl	4658 <calloc@plt>
   1eba0:	mov	r3, r0
   1eba4:	str	r3, [fp, #-8]
   1eba8:	ldr	r3, [fp, #-8]
   1ebac:	cmp	r3, #0
   1ebb0:	moveq	r3, #1
   1ebb4:	movne	r3, #0
   1ebb8:	uxtb	r3, r3
   1ebbc:	cmp	r3, #0
   1ebc0:	beq	1ebc8 <rb_malloc+0x44>
   1ebc4:	bl	4a00 <rb_outofmemory@plt>
   1ebc8:	ldr	r3, [fp, #-8]
   1ebcc:	mov	r0, r3
   1ebd0:	sub	sp, fp, #4
   1ebd4:	pop	{fp, pc}

0001ebd8 <rb_strdup>:
   1ebd8:	push	{fp, lr}
   1ebdc:	add	fp, sp, #4
   1ebe0:	sub	sp, sp, #16
   1ebe4:	str	r0, [fp, #-16]
   1ebe8:	ldr	r0, [fp, #-16]
   1ebec:	bl	485c <strlen@plt>
   1ebf0:	mov	r3, r0
   1ebf4:	add	r3, r3, #1
   1ebf8:	mov	r0, r3
   1ebfc:	bl	4a24 <malloc@plt>
   1ec00:	mov	r3, r0
   1ec04:	str	r3, [fp, #-8]
   1ec08:	ldr	r3, [fp, #-8]
   1ec0c:	cmp	r3, #0
   1ec10:	moveq	r3, #1
   1ec14:	movne	r3, #0
   1ec18:	uxtb	r3, r3
   1ec1c:	cmp	r3, #0
   1ec20:	beq	1ec28 <rb_strdup+0x50>
   1ec24:	bl	4a00 <rb_outofmemory@plt>
   1ec28:	ldr	r1, [fp, #-16]
   1ec2c:	ldr	r0, [fp, #-8]
   1ec30:	bl	48f8 <strcpy@plt>
   1ec34:	ldr	r3, [fp, #-8]
   1ec38:	mov	r0, r3
   1ec3c:	sub	sp, fp, #4
   1ec40:	pop	{fp, pc}

0001ec44 <rb_free>:
   1ec44:	push	{fp, lr}
   1ec48:	add	fp, sp, #4
   1ec4c:	sub	sp, sp, #8
   1ec50:	str	r0, [fp, #-8]
   1ec54:	ldr	r3, [fp, #-8]
   1ec58:	cmp	r3, #0
   1ec5c:	movne	r3, #1
   1ec60:	moveq	r3, #0
   1ec64:	uxtb	r3, r3
   1ec68:	cmp	r3, #0
   1ec6c:	beq	1ec78 <rb_free+0x34>
   1ec70:	ldr	r0, [fp, #-8]
   1ec74:	bl	476c <free@plt>
   1ec78:	nop			; (mov r0, r0)
   1ec7c:	sub	sp, fp, #4
   1ec80:	pop	{fp, pc}

0001ec84 <rb_dictionary_create>:
   1ec84:	push	{fp, lr}
   1ec88:	add	fp, sp, #4
   1ec8c:	sub	sp, sp, #16
   1ec90:	str	r0, [fp, #-16]
   1ec94:	str	r1, [fp, #-20]	; 0xffffffec
   1ec98:	mov	r0, #40	; 0x28
   1ec9c:	bl	1eb84 <rb_malloc>
   1eca0:	str	r0, [fp, #-8]
   1eca4:	ldr	r3, [fp, #-8]
   1eca8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ecac:	str	r2, [r3]
   1ecb0:	ldr	r0, [fp, #-16]
   1ecb4:	bl	1ebd8 <rb_strdup>
   1ecb8:	mov	r2, r0
   1ecbc:	ldr	r3, [fp, #-8]
   1ecc0:	str	r2, [r3, #20]
   1ecc4:	ldr	r3, [fp, #-8]
   1ecc8:	add	r3, r3, #28
   1eccc:	ldr	r2, [pc, #28]	; 1ecf0 <rb_dictionary_create+0x6c>
   1ecd0:	add	r2, pc, r2
   1ecd4:	mov	r1, r3
   1ecd8:	ldr	r0, [fp, #-8]
   1ecdc:	bl	1ea10 <rb_dlinkAdd>
   1ece0:	ldr	r3, [fp, #-8]
   1ece4:	mov	r0, r3
   1ece8:	sub	sp, fp, #4
   1ecec:	pop	{fp, pc}
   1ecf0:	.word	0x00033734

0001ecf4 <rb_dictionary_set_comparator_func>:
   1ecf4:	push	{fp}		; (str fp, [sp, #-4]!)
   1ecf8:	add	fp, sp, #0
   1ecfc:	sub	sp, sp, #12
   1ed00:	str	r0, [fp, #-8]
   1ed04:	str	r1, [fp, #-12]
   1ed08:	ldr	r3, [fp, #-8]
   1ed0c:	ldr	r2, [fp, #-12]
   1ed10:	str	r2, [r3]
   1ed14:	nop			; (mov r0, r0)
   1ed18:	add	sp, fp, #0
   1ed1c:	pop	{fp}		; (ldr fp, [sp], #4)
   1ed20:	bx	lr

0001ed24 <rb_dictionary_get_comparator_func>:
   1ed24:	push	{fp}		; (str fp, [sp, #-4]!)
   1ed28:	add	fp, sp, #0
   1ed2c:	sub	sp, sp, #12
   1ed30:	str	r0, [fp, #-8]
   1ed34:	ldr	r3, [fp, #-8]
   1ed38:	ldr	r3, [r3]
   1ed3c:	mov	r0, r3
   1ed40:	add	sp, fp, #0
   1ed44:	pop	{fp}		; (ldr fp, [sp], #4)
   1ed48:	bx	lr

0001ed4c <rb_dictionary_get_linear_index>:
   1ed4c:	push	{fp, lr}
   1ed50:	add	fp, sp, #4
   1ed54:	sub	sp, sp, #24
   1ed58:	str	r0, [fp, #-24]	; 0xffffffe8
   1ed5c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ed60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ed64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed68:	bl	4aa8 <rb_dictionary_find@plt>
   1ed6c:	str	r0, [fp, #-16]
   1ed70:	ldr	r3, [fp, #-16]
   1ed74:	cmp	r3, #0
   1ed78:	bne	1ed84 <rb_dictionary_get_linear_index+0x38>
   1ed7c:	mvn	r3, #0
   1ed80:	b	1ee08 <rb_dictionary_get_linear_index+0xbc>
   1ed84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed88:	ldrb	r3, [r3, #24]
   1ed8c:	and	r3, r3, #1
   1ed90:	uxtb	r3, r3
   1ed94:	cmp	r3, #0
   1ed98:	bne	1eda8 <rb_dictionary_get_linear_index+0x5c>
   1ed9c:	ldr	r3, [fp, #-16]
   1eda0:	ldr	r3, [r3, #24]
   1eda4:	b	1ee08 <rb_dictionary_get_linear_index+0xbc>
   1eda8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1edac:	ldr	r3, [r3, #8]
   1edb0:	str	r3, [fp, #-8]
   1edb4:	mov	r3, #0
   1edb8:	str	r3, [fp, #-12]
   1edbc:	b	1ede4 <rb_dictionary_get_linear_index+0x98>
   1edc0:	ldr	r3, [fp, #-8]
   1edc4:	ldr	r2, [fp, #-12]
   1edc8:	str	r2, [r3, #24]
   1edcc:	ldr	r3, [fp, #-8]
   1edd0:	ldr	r3, [r3, #12]
   1edd4:	str	r3, [fp, #-8]
   1edd8:	ldr	r3, [fp, #-12]
   1eddc:	add	r3, r3, #1
   1ede0:	str	r3, [fp, #-12]
   1ede4:	ldr	r3, [fp, #-8]
   1ede8:	cmp	r3, #0
   1edec:	bne	1edc0 <rb_dictionary_get_linear_index+0x74>
   1edf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edf4:	ldrb	r3, [r2, #24]
   1edf8:	bic	r3, r3, #1
   1edfc:	strb	r3, [r2, #24]
   1ee00:	ldr	r3, [fp, #-16]
   1ee04:	ldr	r3, [r3, #24]
   1ee08:	mov	r0, r3
   1ee0c:	sub	sp, fp, #4
   1ee10:	pop	{fp, pc}

0001ee14 <rb_dictionary_retune>:
   1ee14:	push	{fp, lr}
   1ee18:	add	fp, sp, #4
   1ee1c:	sub	sp, sp, #56	; 0x38
   1ee20:	str	r0, [fp, #-56]	; 0xffffffc8
   1ee24:	str	r1, [fp, #-60]	; 0xffffffc4
   1ee28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ee2c:	ldr	r3, [r3, #4]
   1ee30:	cmp	r3, #0
   1ee34:	beq	1f050 <rb_dictionary_retune+0x23c>
   1ee38:	mov	r3, #0
   1ee3c:	str	r3, [fp, #-48]	; 0xffffffd0
   1ee40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ee44:	str	r3, [fp, #-52]	; 0xffffffcc
   1ee48:	sub	r3, fp, #52	; 0x34
   1ee4c:	str	r3, [fp, #-12]
   1ee50:	ldr	r3, [fp, #-12]
   1ee54:	str	r3, [fp, #-8]
   1ee58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ee5c:	ldr	r3, [r3, #4]
   1ee60:	str	r3, [fp, #-16]
   1ee64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ee68:	ldr	r3, [r3]
   1ee6c:	ldr	r2, [fp, #-16]
   1ee70:	ldr	r2, [r2, #20]
   1ee74:	mov	r1, r2
   1ee78:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ee7c:	blx	r3
   1ee80:	str	r0, [fp, #-20]	; 0xffffffec
   1ee84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ee88:	cmp	r3, #0
   1ee8c:	beq	1efe4 <rb_dictionary_retune+0x1d0>
   1ee90:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ee94:	cmp	r3, #0
   1ee98:	bge	1ef40 <rb_dictionary_retune+0x12c>
   1ee9c:	ldr	r3, [fp, #-16]
   1eea0:	ldr	r3, [r3]
   1eea4:	cmp	r3, #0
   1eea8:	beq	1efec <rb_dictionary_retune+0x1d8>
   1eeac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eeb0:	ldr	r3, [r3]
   1eeb4:	ldr	r2, [fp, #-16]
   1eeb8:	ldr	r2, [r2]
   1eebc:	ldr	r2, [r2, #20]
   1eec0:	mov	r1, r2
   1eec4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1eec8:	blx	r3
   1eecc:	str	r0, [fp, #-20]	; 0xffffffec
   1eed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eed4:	cmp	r3, #0
   1eed8:	bge	1ef1c <rb_dictionary_retune+0x108>
   1eedc:	ldr	r3, [fp, #-16]
   1eee0:	ldr	r3, [r3]
   1eee4:	str	r3, [fp, #-24]	; 0xffffffe8
   1eee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eeec:	ldr	r2, [r3, #4]
   1eef0:	ldr	r3, [fp, #-16]
   1eef4:	str	r2, [r3]
   1eef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eefc:	ldr	r2, [fp, #-16]
   1ef00:	str	r2, [r3, #4]
   1ef04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ef08:	str	r3, [fp, #-16]
   1ef0c:	ldr	r3, [fp, #-16]
   1ef10:	ldr	r3, [r3]
   1ef14:	cmp	r3, #0
   1ef18:	beq	1eff4 <rb_dictionary_retune+0x1e0>
   1ef1c:	ldr	r3, [fp, #-12]
   1ef20:	ldr	r2, [fp, #-16]
   1ef24:	str	r2, [r3]
   1ef28:	ldr	r3, [fp, #-16]
   1ef2c:	str	r3, [fp, #-12]
   1ef30:	ldr	r3, [fp, #-16]
   1ef34:	ldr	r3, [r3]
   1ef38:	str	r3, [fp, #-16]
   1ef3c:	b	1ee64 <rb_dictionary_retune+0x50>
   1ef40:	ldr	r3, [fp, #-16]
   1ef44:	ldr	r3, [r3, #4]
   1ef48:	cmp	r3, #0
   1ef4c:	beq	1effc <rb_dictionary_retune+0x1e8>
   1ef50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ef54:	ldr	r3, [r3]
   1ef58:	ldr	r2, [fp, #-16]
   1ef5c:	ldr	r2, [r2, #4]
   1ef60:	ldr	r2, [r2, #20]
   1ef64:	mov	r1, r2
   1ef68:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ef6c:	blx	r3
   1ef70:	str	r0, [fp, #-20]	; 0xffffffec
   1ef74:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef78:	cmp	r3, #0
   1ef7c:	ble	1efc0 <rb_dictionary_retune+0x1ac>
   1ef80:	ldr	r3, [fp, #-16]
   1ef84:	ldr	r3, [r3, #4]
   1ef88:	str	r3, [fp, #-24]	; 0xffffffe8
   1ef8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ef90:	ldr	r2, [r3]
   1ef94:	ldr	r3, [fp, #-16]
   1ef98:	str	r2, [r3, #4]
   1ef9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1efa0:	ldr	r2, [fp, #-16]
   1efa4:	str	r2, [r3]
   1efa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1efac:	str	r3, [fp, #-16]
   1efb0:	ldr	r3, [fp, #-16]
   1efb4:	ldr	r3, [r3, #4]
   1efb8:	cmp	r3, #0
   1efbc:	beq	1f004 <rb_dictionary_retune+0x1f0>
   1efc0:	ldr	r3, [fp, #-8]
   1efc4:	ldr	r2, [fp, #-16]
   1efc8:	str	r2, [r3, #4]
   1efcc:	ldr	r3, [fp, #-16]
   1efd0:	str	r3, [fp, #-8]
   1efd4:	ldr	r3, [fp, #-16]
   1efd8:	ldr	r3, [r3, #4]
   1efdc:	str	r3, [fp, #-16]
   1efe0:	b	1ee64 <rb_dictionary_retune+0x50>
   1efe4:	nop			; (mov r0, r0)
   1efe8:	b	1f008 <rb_dictionary_retune+0x1f4>
   1efec:	nop			; (mov r0, r0)
   1eff0:	b	1f008 <rb_dictionary_retune+0x1f4>
   1eff4:	nop			; (mov r0, r0)
   1eff8:	b	1f008 <rb_dictionary_retune+0x1f4>
   1effc:	nop			; (mov r0, r0)
   1f000:	b	1f008 <rb_dictionary_retune+0x1f4>
   1f004:	nop			; (mov r0, r0)
   1f008:	ldr	r3, [fp, #-16]
   1f00c:	ldr	r2, [r3]
   1f010:	ldr	r3, [fp, #-8]
   1f014:	str	r2, [r3, #4]
   1f018:	ldr	r3, [fp, #-16]
   1f01c:	ldr	r2, [r3, #4]
   1f020:	ldr	r3, [fp, #-12]
   1f024:	str	r2, [r3]
   1f028:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f02c:	ldr	r3, [fp, #-16]
   1f030:	str	r2, [r3]
   1f034:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f038:	ldr	r3, [fp, #-16]
   1f03c:	str	r2, [r3, #4]
   1f040:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f044:	ldr	r2, [fp, #-16]
   1f048:	str	r2, [r3, #4]
   1f04c:	b	1f054 <rb_dictionary_retune+0x240>
   1f050:	nop			; (mov r0, r0)
   1f054:	sub	sp, fp, #4
   1f058:	pop	{fp, pc}

0001f05c <rb_dictionary_link>:
   1f05c:	push	{fp, lr}
   1f060:	add	fp, sp, #4
   1f064:	sub	sp, sp, #16
   1f068:	str	r0, [fp, #-16]
   1f06c:	str	r1, [fp, #-20]	; 0xffffffec
   1f070:	ldr	r2, [fp, #-16]
   1f074:	ldrb	r3, [r2, #24]
   1f078:	orr	r3, r3, #1
   1f07c:	strb	r3, [r2, #24]
   1f080:	ldr	r3, [fp, #-16]
   1f084:	ldr	r3, [r3, #16]
   1f088:	add	r2, r3, #1
   1f08c:	ldr	r3, [fp, #-16]
   1f090:	str	r2, [r3, #16]
   1f094:	ldr	r3, [fp, #-16]
   1f098:	ldr	r3, [r3, #4]
   1f09c:	cmp	r3, #0
   1f0a0:	bne	1f10c <rb_dictionary_link+0xb0>
   1f0a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0a8:	mov	r2, #0
   1f0ac:	str	r2, [r3, #4]
   1f0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0b4:	ldr	r2, [r3, #4]
   1f0b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0bc:	str	r2, [r3]
   1f0c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0c4:	mov	r2, #0
   1f0c8:	str	r2, [r3, #8]
   1f0cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0d0:	ldr	r2, [r3, #8]
   1f0d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0d8:	str	r2, [r3, #12]
   1f0dc:	ldr	r3, [fp, #-16]
   1f0e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f0e4:	str	r2, [r3, #4]
   1f0e8:	ldr	r3, [fp, #-16]
   1f0ec:	ldr	r2, [r3, #4]
   1f0f0:	ldr	r3, [fp, #-16]
   1f0f4:	str	r2, [r3, #12]
   1f0f8:	ldr	r3, [fp, #-16]
   1f0fc:	ldr	r2, [r3, #12]
   1f100:	ldr	r3, [fp, #-16]
   1f104:	str	r2, [r3, #8]
   1f108:	b	1f310 <rb_dictionary_link+0x2b4>
   1f10c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f110:	ldr	r3, [r3, #20]
   1f114:	mov	r1, r3
   1f118:	ldr	r0, [fp, #-16]
   1f11c:	bl	1ee14 <rb_dictionary_retune>
   1f120:	ldr	r3, [fp, #-16]
   1f124:	ldr	r3, [r3]
   1f128:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f12c:	ldr	r0, [r2, #20]
   1f130:	ldr	r2, [fp, #-16]
   1f134:	ldr	r2, [r2, #4]
   1f138:	ldr	r2, [r2, #20]
   1f13c:	mov	r1, r2
   1f140:	blx	r3
   1f144:	str	r0, [fp, #-8]
   1f148:	ldr	r3, [fp, #-8]
   1f14c:	cmp	r3, #0
   1f150:	bge	1f204 <rb_dictionary_link+0x1a8>
   1f154:	ldr	r3, [fp, #-16]
   1f158:	ldr	r3, [r3, #4]
   1f15c:	ldr	r2, [r3]
   1f160:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f164:	str	r2, [r3]
   1f168:	ldr	r3, [fp, #-16]
   1f16c:	ldr	r2, [r3, #4]
   1f170:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f174:	str	r2, [r3, #4]
   1f178:	ldr	r3, [fp, #-16]
   1f17c:	ldr	r3, [r3, #4]
   1f180:	mov	r2, #0
   1f184:	str	r2, [r3]
   1f188:	ldr	r3, [fp, #-16]
   1f18c:	ldr	r3, [r3, #4]
   1f190:	ldr	r3, [r3, #8]
   1f194:	cmp	r3, #0
   1f198:	beq	1f1b4 <rb_dictionary_link+0x158>
   1f19c:	ldr	r3, [fp, #-16]
   1f1a0:	ldr	r3, [r3, #4]
   1f1a4:	ldr	r3, [r3, #8]
   1f1a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f1ac:	str	r2, [r3, #12]
   1f1b0:	b	1f1c0 <rb_dictionary_link+0x164>
   1f1b4:	ldr	r3, [fp, #-16]
   1f1b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f1bc:	str	r2, [r3, #8]
   1f1c0:	ldr	r3, [fp, #-16]
   1f1c4:	ldr	r3, [r3, #4]
   1f1c8:	ldr	r2, [r3, #8]
   1f1cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f1d0:	str	r2, [r3, #8]
   1f1d4:	ldr	r3, [fp, #-16]
   1f1d8:	ldr	r2, [r3, #4]
   1f1dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f1e0:	str	r2, [r3, #12]
   1f1e4:	ldr	r3, [fp, #-16]
   1f1e8:	ldr	r3, [r3, #4]
   1f1ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f1f0:	str	r2, [r3, #8]
   1f1f4:	ldr	r3, [fp, #-16]
   1f1f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f1fc:	str	r2, [r3, #4]
   1f200:	b	1f310 <rb_dictionary_link+0x2b4>
   1f204:	ldr	r3, [fp, #-8]
   1f208:	cmp	r3, #0
   1f20c:	ble	1f2c0 <rb_dictionary_link+0x264>
   1f210:	ldr	r3, [fp, #-16]
   1f214:	ldr	r3, [r3, #4]
   1f218:	ldr	r2, [r3, #4]
   1f21c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f220:	str	r2, [r3, #4]
   1f224:	ldr	r3, [fp, #-16]
   1f228:	ldr	r2, [r3, #4]
   1f22c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f230:	str	r2, [r3]
   1f234:	ldr	r3, [fp, #-16]
   1f238:	ldr	r3, [r3, #4]
   1f23c:	mov	r2, #0
   1f240:	str	r2, [r3, #4]
   1f244:	ldr	r3, [fp, #-16]
   1f248:	ldr	r3, [r3, #4]
   1f24c:	ldr	r3, [r3, #12]
   1f250:	cmp	r3, #0
   1f254:	beq	1f270 <rb_dictionary_link+0x214>
   1f258:	ldr	r3, [fp, #-16]
   1f25c:	ldr	r3, [r3, #4]
   1f260:	ldr	r3, [r3, #12]
   1f264:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f268:	str	r2, [r3, #8]
   1f26c:	b	1f27c <rb_dictionary_link+0x220>
   1f270:	ldr	r3, [fp, #-16]
   1f274:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f278:	str	r2, [r3, #12]
   1f27c:	ldr	r3, [fp, #-16]
   1f280:	ldr	r3, [r3, #4]
   1f284:	ldr	r2, [r3, #12]
   1f288:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f28c:	str	r2, [r3, #12]
   1f290:	ldr	r3, [fp, #-16]
   1f294:	ldr	r2, [r3, #4]
   1f298:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f29c:	str	r2, [r3, #8]
   1f2a0:	ldr	r3, [fp, #-16]
   1f2a4:	ldr	r3, [r3, #4]
   1f2a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f2ac:	str	r2, [r3, #12]
   1f2b0:	ldr	r3, [fp, #-16]
   1f2b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f2b8:	str	r2, [r3, #4]
   1f2bc:	b	1f310 <rb_dictionary_link+0x2b4>
   1f2c0:	ldr	r3, [fp, #-16]
   1f2c4:	ldr	r3, [r3, #4]
   1f2c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f2cc:	ldr	r2, [r2, #20]
   1f2d0:	str	r2, [r3, #20]
   1f2d4:	ldr	r3, [fp, #-16]
   1f2d8:	ldr	r3, [r3, #4]
   1f2dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f2e0:	ldr	r2, [r2, #16]
   1f2e4:	str	r2, [r3, #16]
   1f2e8:	ldr	r3, [fp, #-16]
   1f2ec:	ldr	r3, [r3, #16]
   1f2f0:	sub	r2, r3, #1
   1f2f4:	ldr	r3, [fp, #-16]
   1f2f8:	str	r2, [r3, #16]
   1f2fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f300:	bl	1ec44 <rb_free>
   1f304:	ldr	r3, [fp, #-16]
   1f308:	ldr	r3, [r3, #4]
   1f30c:	str	r3, [fp, #-20]	; 0xffffffec
   1f310:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f314:	mov	r0, r3
   1f318:	sub	sp, fp, #4
   1f31c:	pop	{fp, pc}

0001f320 <rb_dictionary_unlink_root>:
   1f320:	push	{fp}		; (str fp, [sp, #-4]!)
   1f324:	add	fp, sp, #0
   1f328:	sub	sp, sp, #28
   1f32c:	str	r0, [fp, #-24]	; 0xffffffe8
   1f330:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f334:	ldrb	r3, [r2, #24]
   1f338:	orr	r3, r3, #1
   1f33c:	strb	r3, [r2, #24]
   1f340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f344:	ldr	r3, [r3, #4]
   1f348:	str	r3, [fp, #-12]
   1f34c:	ldr	r3, [fp, #-12]
   1f350:	cmp	r3, #0
   1f354:	beq	1f520 <rb_dictionary_unlink_root+0x200>
   1f358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f35c:	ldr	r3, [r3, #4]
   1f360:	ldr	r3, [r3]
   1f364:	cmp	r3, #0
   1f368:	bne	1f384 <rb_dictionary_unlink_root+0x64>
   1f36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f370:	ldr	r3, [r3, #4]
   1f374:	ldr	r2, [r3, #4]
   1f378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f37c:	str	r2, [r3, #4]
   1f380:	b	1f478 <rb_dictionary_unlink_root+0x158>
   1f384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f388:	ldr	r3, [r3, #4]
   1f38c:	ldr	r3, [r3, #4]
   1f390:	cmp	r3, #0
   1f394:	bne	1f3b0 <rb_dictionary_unlink_root+0x90>
   1f398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f39c:	ldr	r3, [r3, #4]
   1f3a0:	ldr	r2, [r3]
   1f3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f3a8:	str	r2, [r3, #4]
   1f3ac:	b	1f478 <rb_dictionary_unlink_root+0x158>
   1f3b0:	ldr	r3, [fp, #-12]
   1f3b4:	ldr	r3, [r3, #12]
   1f3b8:	str	r3, [fp, #-16]
   1f3bc:	ldr	r3, [fp, #-12]
   1f3c0:	ldr	r2, [r3, #4]
   1f3c4:	ldr	r3, [fp, #-16]
   1f3c8:	cmp	r2, r3
   1f3cc:	bne	1f3f4 <rb_dictionary_unlink_root+0xd4>
   1f3d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f3d4:	ldr	r2, [fp, #-16]
   1f3d8:	str	r2, [r3, #4]
   1f3dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f3e0:	ldr	r3, [r3, #4]
   1f3e4:	ldr	r2, [fp, #-12]
   1f3e8:	ldr	r2, [r2]
   1f3ec:	str	r2, [r3]
   1f3f0:	b	1f478 <rb_dictionary_unlink_root+0x158>
   1f3f4:	ldr	r3, [fp, #-12]
   1f3f8:	ldr	r3, [r3, #4]
   1f3fc:	str	r3, [fp, #-8]
   1f400:	b	1f410 <rb_dictionary_unlink_root+0xf0>
   1f404:	ldr	r3, [fp, #-8]
   1f408:	ldr	r3, [r3]
   1f40c:	str	r3, [fp, #-8]
   1f410:	ldr	r3, [fp, #-8]
   1f414:	ldr	r3, [r3]
   1f418:	cmp	r3, #0
   1f41c:	beq	1f434 <rb_dictionary_unlink_root+0x114>
   1f420:	ldr	r3, [fp, #-8]
   1f424:	ldr	r2, [r3]
   1f428:	ldr	r3, [fp, #-16]
   1f42c:	cmp	r2, r3
   1f430:	bne	1f404 <rb_dictionary_unlink_root+0xe4>
   1f434:	ldr	r3, [fp, #-16]
   1f438:	ldr	r2, [r3, #4]
   1f43c:	ldr	r3, [fp, #-8]
   1f440:	str	r2, [r3]
   1f444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f448:	ldr	r2, [fp, #-16]
   1f44c:	str	r2, [r3, #4]
   1f450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f454:	ldr	r3, [r3, #4]
   1f458:	ldr	r2, [fp, #-12]
   1f45c:	ldr	r2, [r2]
   1f460:	str	r2, [r3]
   1f464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f468:	ldr	r3, [r3, #4]
   1f46c:	ldr	r2, [fp, #-12]
   1f470:	ldr	r2, [r2, #4]
   1f474:	str	r2, [r3, #4]
   1f478:	ldr	r3, [fp, #-12]
   1f47c:	ldr	r3, [r3, #8]
   1f480:	cmp	r3, #0
   1f484:	beq	1f49c <rb_dictionary_unlink_root+0x17c>
   1f488:	ldr	r3, [fp, #-12]
   1f48c:	ldr	r3, [r3, #8]
   1f490:	ldr	r2, [fp, #-12]
   1f494:	ldr	r2, [r2, #12]
   1f498:	str	r2, [r3, #12]
   1f49c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4a0:	ldr	r2, [r3, #8]
   1f4a4:	ldr	r3, [fp, #-12]
   1f4a8:	cmp	r2, r3
   1f4ac:	bne	1f4c0 <rb_dictionary_unlink_root+0x1a0>
   1f4b0:	ldr	r3, [fp, #-12]
   1f4b4:	ldr	r2, [r3, #12]
   1f4b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4bc:	str	r2, [r3, #8]
   1f4c0:	ldr	r3, [fp, #-12]
   1f4c4:	ldr	r3, [r3, #12]
   1f4c8:	cmp	r3, #0
   1f4cc:	beq	1f4e4 <rb_dictionary_unlink_root+0x1c4>
   1f4d0:	ldr	r3, [fp, #-12]
   1f4d4:	ldr	r3, [r3, #12]
   1f4d8:	ldr	r2, [fp, #-12]
   1f4dc:	ldr	r2, [r2, #8]
   1f4e0:	str	r2, [r3, #8]
   1f4e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f4e8:	ldr	r2, [r3, #12]
   1f4ec:	ldr	r3, [fp, #-12]
   1f4f0:	cmp	r2, r3
   1f4f4:	bne	1f508 <rb_dictionary_unlink_root+0x1e8>
   1f4f8:	ldr	r3, [fp, #-12]
   1f4fc:	ldr	r2, [r3, #8]
   1f500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f504:	str	r2, [r3, #12]
   1f508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f50c:	ldr	r3, [r3, #16]
   1f510:	sub	r2, r3, #1
   1f514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f518:	str	r2, [r3, #16]
   1f51c:	b	1f524 <rb_dictionary_unlink_root+0x204>
   1f520:	nop			; (mov r0, r0)
   1f524:	add	sp, fp, #0
   1f528:	pop	{fp}		; (ldr fp, [sp], #4)
   1f52c:	bx	lr

0001f530 <rb_dictionary_destroy>:
   1f530:	push	{fp, lr}
   1f534:	add	fp, sp, #4
   1f538:	sub	sp, sp, #24
   1f53c:	str	r0, [fp, #-16]
   1f540:	str	r1, [fp, #-20]	; 0xffffffec
   1f544:	str	r2, [fp, #-24]	; 0xffffffe8
   1f548:	ldr	r3, [fp, #-16]
   1f54c:	ldr	r3, [r3, #8]
   1f550:	str	r3, [fp, #-8]
   1f554:	ldr	r3, [fp, #-8]
   1f558:	cmp	r3, #0
   1f55c:	beq	1f56c <rb_dictionary_destroy+0x3c>
   1f560:	ldr	r3, [fp, #-8]
   1f564:	ldr	r3, [r3, #12]
   1f568:	b	1f570 <rb_dictionary_destroy+0x40>
   1f56c:	mov	r3, #0
   1f570:	str	r3, [fp, #-12]
   1f574:	b	1f5c4 <rb_dictionary_destroy+0x94>
   1f578:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f57c:	cmp	r3, #0
   1f580:	beq	1f594 <rb_dictionary_destroy+0x64>
   1f584:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f58c:	ldr	r0, [fp, #-8]
   1f590:	blx	r3
   1f594:	ldr	r0, [fp, #-8]
   1f598:	bl	1ec44 <rb_free>
   1f59c:	ldr	r3, [fp, #-12]
   1f5a0:	str	r3, [fp, #-8]
   1f5a4:	ldr	r3, [fp, #-8]
   1f5a8:	cmp	r3, #0
   1f5ac:	beq	1f5bc <rb_dictionary_destroy+0x8c>
   1f5b0:	ldr	r3, [fp, #-8]
   1f5b4:	ldr	r3, [r3, #12]
   1f5b8:	b	1f5c0 <rb_dictionary_destroy+0x90>
   1f5bc:	mov	r3, #0
   1f5c0:	str	r3, [fp, #-12]
   1f5c4:	ldr	r3, [fp, #-8]
   1f5c8:	cmp	r3, #0
   1f5cc:	bne	1f578 <rb_dictionary_destroy+0x48>
   1f5d0:	ldr	r3, [fp, #-16]
   1f5d4:	add	r3, r3, #28
   1f5d8:	ldr	r2, [pc, #48]	; 1f610 <rb_dictionary_destroy+0xe0>
   1f5dc:	add	r2, pc, r2
   1f5e0:	mov	r1, r2
   1f5e4:	mov	r0, r3
   1f5e8:	bl	1eac0 <rb_dlinkDelete>
   1f5ec:	ldr	r3, [fp, #-16]
   1f5f0:	ldr	r3, [r3, #20]
   1f5f4:	mov	r0, r3
   1f5f8:	bl	1ec44 <rb_free>
   1f5fc:	ldr	r0, [fp, #-16]
   1f600:	bl	1ec44 <rb_free>
   1f604:	nop			; (mov r0, r0)
   1f608:	sub	sp, fp, #4
   1f60c:	pop	{fp, pc}
   1f610:	.word	0x00032e28

0001f614 <rb_dictionary_foreach>:
   1f614:	push	{fp, lr}
   1f618:	add	fp, sp, #4
   1f61c:	sub	sp, sp, #32
   1f620:	str	r0, [fp, #-24]	; 0xffffffe8
   1f624:	str	r1, [fp, #-28]	; 0xffffffe4
   1f628:	str	r2, [fp, #-32]	; 0xffffffe0
   1f62c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f630:	ldr	r3, [r3, #8]
   1f634:	str	r3, [fp, #-8]
   1f638:	ldr	r3, [fp, #-8]
   1f63c:	cmp	r3, #0
   1f640:	beq	1f650 <rb_dictionary_foreach+0x3c>
   1f644:	ldr	r3, [fp, #-8]
   1f648:	ldr	r3, [r3, #12]
   1f64c:	b	1f654 <rb_dictionary_foreach+0x40>
   1f650:	mov	r3, #0
   1f654:	str	r3, [fp, #-12]
   1f658:	b	1f6a8 <rb_dictionary_foreach+0x94>
   1f65c:	ldr	r3, [fp, #-8]
   1f660:	str	r3, [fp, #-16]
   1f664:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f668:	cmp	r3, #0
   1f66c:	beq	1f680 <rb_dictionary_foreach+0x6c>
   1f670:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f674:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f678:	ldr	r0, [fp, #-16]
   1f67c:	blx	r3
   1f680:	ldr	r3, [fp, #-12]
   1f684:	str	r3, [fp, #-8]
   1f688:	ldr	r3, [fp, #-8]
   1f68c:	cmp	r3, #0
   1f690:	beq	1f6a0 <rb_dictionary_foreach+0x8c>
   1f694:	ldr	r3, [fp, #-8]
   1f698:	ldr	r3, [r3, #12]
   1f69c:	b	1f6a4 <rb_dictionary_foreach+0x90>
   1f6a0:	mov	r3, #0
   1f6a4:	str	r3, [fp, #-12]
   1f6a8:	ldr	r3, [fp, #-8]
   1f6ac:	cmp	r3, #0
   1f6b0:	bne	1f65c <rb_dictionary_foreach+0x48>
   1f6b4:	nop			; (mov r0, r0)
   1f6b8:	sub	sp, fp, #4
   1f6bc:	pop	{fp, pc}

0001f6c0 <rb_dictionary_search>:
   1f6c0:	push	{fp, lr}
   1f6c4:	add	fp, sp, #4
   1f6c8:	sub	sp, sp, #32
   1f6cc:	str	r0, [fp, #-24]	; 0xffffffe8
   1f6d0:	str	r1, [fp, #-28]	; 0xffffffe4
   1f6d4:	str	r2, [fp, #-32]	; 0xffffffe0
   1f6d8:	mov	r3, #0
   1f6dc:	str	r3, [fp, #-16]
   1f6e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f6e4:	ldr	r3, [r3, #8]
   1f6e8:	str	r3, [fp, #-8]
   1f6ec:	ldr	r3, [fp, #-8]
   1f6f0:	cmp	r3, #0
   1f6f4:	beq	1f704 <rb_dictionary_search+0x44>
   1f6f8:	ldr	r3, [fp, #-8]
   1f6fc:	ldr	r3, [r3, #12]
   1f700:	b	1f708 <rb_dictionary_search+0x48>
   1f704:	mov	r3, #0
   1f708:	str	r3, [fp, #-12]
   1f70c:	b	1f76c <rb_dictionary_search+0xac>
   1f710:	ldr	r3, [fp, #-8]
   1f714:	str	r3, [fp, #-20]	; 0xffffffec
   1f718:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f71c:	cmp	r3, #0
   1f720:	beq	1f738 <rb_dictionary_search+0x78>
   1f724:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f728:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f72c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f730:	blx	r3
   1f734:	str	r0, [fp, #-16]
   1f738:	ldr	r3, [fp, #-16]
   1f73c:	cmp	r3, #0
   1f740:	bne	1f77c <rb_dictionary_search+0xbc>
   1f744:	ldr	r3, [fp, #-12]
   1f748:	str	r3, [fp, #-8]
   1f74c:	ldr	r3, [fp, #-8]
   1f750:	cmp	r3, #0
   1f754:	beq	1f764 <rb_dictionary_search+0xa4>
   1f758:	ldr	r3, [fp, #-8]
   1f75c:	ldr	r3, [r3, #12]
   1f760:	b	1f768 <rb_dictionary_search+0xa8>
   1f764:	mov	r3, #0
   1f768:	str	r3, [fp, #-12]
   1f76c:	ldr	r3, [fp, #-8]
   1f770:	cmp	r3, #0
   1f774:	bne	1f710 <rb_dictionary_search+0x50>
   1f778:	b	1f780 <rb_dictionary_search+0xc0>
   1f77c:	nop			; (mov r0, r0)
   1f780:	ldr	r3, [fp, #-16]
   1f784:	mov	r0, r3
   1f788:	sub	sp, fp, #4
   1f78c:	pop	{fp, pc}

0001f790 <rb_dictionary_foreach_start>:
   1f790:	push	{fp, lr}
   1f794:	add	fp, sp, #4
   1f798:	sub	sp, sp, #8
   1f79c:	str	r0, [fp, #-8]
   1f7a0:	str	r1, [fp, #-12]
   1f7a4:	ldr	r3, [fp, #-12]
   1f7a8:	mov	r2, #0
   1f7ac:	str	r2, [r3]
   1f7b0:	ldr	r3, [fp, #-12]
   1f7b4:	mov	r2, #0
   1f7b8:	str	r2, [r3, #4]
   1f7bc:	ldr	r3, [fp, #-8]
   1f7c0:	ldr	r2, [r3, #8]
   1f7c4:	ldr	r3, [fp, #-12]
   1f7c8:	str	r2, [r3]
   1f7cc:	ldr	r3, [fp, #-12]
   1f7d0:	ldr	r3, [r3]
   1f7d4:	cmp	r3, #0
   1f7d8:	beq	1f7fc <rb_dictionary_foreach_start+0x6c>
   1f7dc:	ldr	r3, [fp, #-12]
   1f7e0:	ldr	r2, [r3]
   1f7e4:	ldr	r3, [fp, #-12]
   1f7e8:	str	r2, [r3, #4]
   1f7ec:	ldr	r1, [fp, #-12]
   1f7f0:	ldr	r0, [fp, #-8]
   1f7f4:	bl	4754 <rb_dictionary_foreach_next@plt>
   1f7f8:	b	1f800 <rb_dictionary_foreach_start+0x70>
   1f7fc:	nop			; (mov r0, r0)
   1f800:	sub	sp, fp, #4
   1f804:	pop	{fp, pc}

0001f808 <rb_dictionary_foreach_cur>:
   1f808:	push	{fp}		; (str fp, [sp, #-4]!)
   1f80c:	add	fp, sp, #0
   1f810:	sub	sp, sp, #12
   1f814:	str	r0, [fp, #-8]
   1f818:	str	r1, [fp, #-12]
   1f81c:	ldr	r3, [fp, #-12]
   1f820:	ldr	r3, [r3]
   1f824:	cmp	r3, #0
   1f828:	beq	1f83c <rb_dictionary_foreach_cur+0x34>
   1f82c:	ldr	r3, [fp, #-12]
   1f830:	ldr	r3, [r3]
   1f834:	ldr	r3, [r3, #16]
   1f838:	b	1f840 <rb_dictionary_foreach_cur+0x38>
   1f83c:	mov	r3, #0
   1f840:	mov	r0, r3
   1f844:	add	sp, fp, #0
   1f848:	pop	{fp}		; (ldr fp, [sp], #4)
   1f84c:	bx	lr

0001f850 <rb_dictionary_foreach_next>:
   1f850:	push	{fp, lr}
   1f854:	add	fp, sp, #4
   1f858:	sub	sp, sp, #8
   1f85c:	str	r0, [fp, #-8]
   1f860:	str	r1, [fp, #-12]
   1f864:	ldr	r3, [fp, #-12]
   1f868:	ldr	r3, [r3]
   1f86c:	cmp	r3, #0
   1f870:	bne	1f88c <rb_dictionary_foreach_next+0x3c>
   1f874:	ldr	r1, [fp, #-8]
   1f878:	ldr	r3, [pc, #80]	; 1f8d0 <rb_dictionary_foreach_next+0x80>
   1f87c:	add	r3, pc, r3
   1f880:	mov	r0, r3
   1f884:	bl	4994 <rb_lib_log@plt>
   1f888:	b	1f8c8 <rb_dictionary_foreach_next+0x78>
   1f88c:	ldr	r3, [fp, #-12]
   1f890:	ldr	r2, [r3, #4]
   1f894:	ldr	r3, [fp, #-12]
   1f898:	str	r2, [r3]
   1f89c:	ldr	r3, [fp, #-12]
   1f8a0:	ldr	r3, [r3, #4]
   1f8a4:	cmp	r3, #0
   1f8a8:	beq	1f8c4 <rb_dictionary_foreach_next+0x74>
   1f8ac:	ldr	r3, [fp, #-12]
   1f8b0:	ldr	r3, [r3, #4]
   1f8b4:	ldr	r2, [r3, #12]
   1f8b8:	ldr	r3, [fp, #-12]
   1f8bc:	str	r2, [r3, #4]
   1f8c0:	b	1f8c8 <rb_dictionary_foreach_next+0x78>
   1f8c4:	nop			; (mov r0, r0)
   1f8c8:	sub	sp, fp, #4
   1f8cc:	pop	{fp, pc}
   1f8d0:	.word	0x00003e0c

0001f8d4 <rb_dictionary_find>:
   1f8d4:	push	{fp, lr}
   1f8d8:	add	fp, sp, #4
   1f8dc:	sub	sp, sp, #8
   1f8e0:	str	r0, [fp, #-8]
   1f8e4:	str	r1, [fp, #-12]
   1f8e8:	ldr	r1, [fp, #-12]
   1f8ec:	ldr	r0, [fp, #-8]
   1f8f0:	bl	1ee14 <rb_dictionary_retune>
   1f8f4:	ldr	r3, [fp, #-8]
   1f8f8:	ldr	r3, [r3, #4]
   1f8fc:	cmp	r3, #0
   1f900:	beq	1f93c <rb_dictionary_find+0x68>
   1f904:	ldr	r3, [fp, #-8]
   1f908:	ldr	r3, [r3]
   1f90c:	ldr	r2, [fp, #-8]
   1f910:	ldr	r2, [r2, #4]
   1f914:	ldr	r2, [r2, #20]
   1f918:	mov	r1, r2
   1f91c:	ldr	r0, [fp, #-12]
   1f920:	blx	r3
   1f924:	mov	r3, r0
   1f928:	cmp	r3, #0
   1f92c:	bne	1f93c <rb_dictionary_find+0x68>
   1f930:	ldr	r3, [fp, #-8]
   1f934:	ldr	r3, [r3, #4]
   1f938:	b	1f940 <rb_dictionary_find+0x6c>
   1f93c:	mov	r3, #0
   1f940:	mov	r0, r3
   1f944:	sub	sp, fp, #4
   1f948:	pop	{fp, pc}

0001f94c <rb_dictionary_add>:
   1f94c:	push	{fp, lr}
   1f950:	add	fp, sp, #4
   1f954:	sub	sp, sp, #24
   1f958:	str	r0, [fp, #-16]
   1f95c:	str	r1, [fp, #-20]	; 0xffffffec
   1f960:	str	r2, [fp, #-24]	; 0xffffffe8
   1f964:	mov	r0, #28
   1f968:	bl	1eb84 <rb_malloc>
   1f96c:	str	r0, [fp, #-8]
   1f970:	ldr	r3, [fp, #-8]
   1f974:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f978:	str	r2, [r3, #20]
   1f97c:	ldr	r3, [fp, #-8]
   1f980:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f984:	str	r2, [r3, #16]
   1f988:	ldr	r1, [fp, #-8]
   1f98c:	ldr	r0, [fp, #-16]
   1f990:	bl	1f05c <rb_dictionary_link>
   1f994:	mov	r3, r0
   1f998:	mov	r0, r3
   1f99c:	sub	sp, fp, #4
   1f9a0:	pop	{fp, pc}

0001f9a4 <rb_dictionary_delete>:
   1f9a4:	push	{fp, lr}
   1f9a8:	add	fp, sp, #4
   1f9ac:	sub	sp, sp, #16
   1f9b0:	str	r0, [fp, #-16]
   1f9b4:	str	r1, [fp, #-20]	; 0xffffffec
   1f9b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f9bc:	ldr	r0, [fp, #-16]
   1f9c0:	bl	4aa8 <rb_dictionary_find@plt>
   1f9c4:	str	r0, [fp, #-8]
   1f9c8:	ldr	r3, [fp, #-8]
   1f9cc:	cmp	r3, #0
   1f9d0:	bne	1f9dc <rb_dictionary_delete+0x38>
   1f9d4:	mov	r3, #0
   1f9d8:	b	1f9fc <rb_dictionary_delete+0x58>
   1f9dc:	ldr	r3, [fp, #-8]
   1f9e0:	ldr	r3, [r3, #16]
   1f9e4:	str	r3, [fp, #-12]
   1f9e8:	ldr	r0, [fp, #-16]
   1f9ec:	bl	1f320 <rb_dictionary_unlink_root>
   1f9f0:	ldr	r0, [fp, #-8]
   1f9f4:	bl	1ec44 <rb_free>
   1f9f8:	ldr	r3, [fp, #-12]
   1f9fc:	mov	r0, r3
   1fa00:	sub	sp, fp, #4
   1fa04:	pop	{fp, pc}

0001fa08 <rb_dictionary_retrieve>:
   1fa08:	push	{fp, lr}
   1fa0c:	add	fp, sp, #4
   1fa10:	sub	sp, sp, #16
   1fa14:	str	r0, [fp, #-16]
   1fa18:	str	r1, [fp, #-20]	; 0xffffffec
   1fa1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fa20:	ldr	r0, [fp, #-16]
   1fa24:	bl	4aa8 <rb_dictionary_find@plt>
   1fa28:	str	r0, [fp, #-8]
   1fa2c:	ldr	r3, [fp, #-8]
   1fa30:	cmp	r3, #0
   1fa34:	beq	1fa44 <rb_dictionary_retrieve+0x3c>
   1fa38:	ldr	r3, [fp, #-8]
   1fa3c:	ldr	r3, [r3, #16]
   1fa40:	b	1fa48 <rb_dictionary_retrieve+0x40>
   1fa44:	mov	r3, #0
   1fa48:	mov	r0, r3
   1fa4c:	sub	sp, fp, #4
   1fa50:	pop	{fp, pc}

0001fa54 <rb_dictionary_size>:
   1fa54:	push	{fp}		; (str fp, [sp, #-4]!)
   1fa58:	add	fp, sp, #0
   1fa5c:	sub	sp, sp, #12
   1fa60:	str	r0, [fp, #-8]
   1fa64:	ldr	r3, [fp, #-8]
   1fa68:	ldr	r3, [r3, #16]
   1fa6c:	mov	r0, r3
   1fa70:	add	sp, fp, #0
   1fa74:	pop	{fp}		; (ldr fp, [sp], #4)
   1fa78:	bx	lr

0001fa7c <stats_recurse>:
   1fa7c:	push	{fp, lr}
   1fa80:	add	fp, sp, #4
   1fa84:	sub	sp, sp, #24
   1fa88:	str	r0, [fp, #-16]
   1fa8c:	str	r1, [fp, #-20]	; 0xffffffec
   1fa90:	str	r2, [fp, #-24]	; 0xffffffe8
   1fa94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fa98:	ldr	r2, [r3]
   1fa9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1faa0:	cmp	r2, r3
   1faa4:	bge	1fab4 <stats_recurse+0x38>
   1faa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1faac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fab0:	str	r2, [r3]
   1fab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fab8:	str	r3, [fp, #-8]
   1fabc:	ldr	r3, [fp, #-16]
   1fac0:	cmp	r3, #0
   1fac4:	beq	1fb04 <stats_recurse+0x88>
   1fac8:	ldr	r3, [fp, #-16]
   1facc:	ldr	r3, [r3]
   1fad0:	cmp	r3, #0
   1fad4:	beq	1fb04 <stats_recurse+0x88>
   1fad8:	ldr	r3, [fp, #-16]
   1fadc:	ldr	r0, [r3]
   1fae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fae4:	add	r3, r3, #1
   1fae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1faec:	mov	r1, r3
   1faf0:	bl	1fa7c <stats_recurse>
   1faf4:	mov	r2, r0
   1faf8:	ldr	r3, [fp, #-8]
   1fafc:	add	r3, r3, r2
   1fb00:	str	r3, [fp, #-8]
   1fb04:	ldr	r3, [fp, #-16]
   1fb08:	cmp	r3, #0
   1fb0c:	beq	1fb4c <stats_recurse+0xd0>
   1fb10:	ldr	r3, [fp, #-16]
   1fb14:	ldr	r3, [r3, #4]
   1fb18:	cmp	r3, #0
   1fb1c:	beq	1fb4c <stats_recurse+0xd0>
   1fb20:	ldr	r3, [fp, #-16]
   1fb24:	ldr	r0, [r3, #4]
   1fb28:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fb2c:	add	r3, r3, #1
   1fb30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fb34:	mov	r1, r3
   1fb38:	bl	1fa7c <stats_recurse>
   1fb3c:	mov	r2, r0
   1fb40:	ldr	r3, [fp, #-8]
   1fb44:	add	r3, r3, r2
   1fb48:	str	r3, [fp, #-8]
   1fb4c:	ldr	r3, [fp, #-8]
   1fb50:	mov	r0, r3
   1fb54:	sub	sp, fp, #4
   1fb58:	pop	{fp, pc}

0001fb5c <rb_dictionary_stats>:
   1fb5c:	push	{r4, r5, fp, lr}
   1fb60:	add	fp, sp, #12
   1fb64:	sub	sp, sp, #304	; 0x130
   1fb68:	str	r0, [fp, #-280]	; 0xfffffee8
   1fb6c:	str	r1, [fp, #-284]	; 0xfffffee4
   1fb70:	str	r2, [fp, #-288]	; 0xfffffee0
   1fb74:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1fb78:	ldr	r3, [r3, #16]
   1fb7c:	cmp	r3, #0
   1fb80:	beq	1fc18 <rb_dictionary_stats+0xbc>
   1fb84:	mov	r3, #0
   1fb88:	str	r3, [fp, #-276]	; 0xfffffeec
   1fb8c:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1fb90:	ldr	r3, [r3, #4]
   1fb94:	sub	r2, fp, #276	; 0x114
   1fb98:	mov	r1, #0
   1fb9c:	mov	r0, r3
   1fba0:	bl	1fa7c <stats_recurse>
   1fba4:	str	r0, [fp, #-16]
   1fba8:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1fbac:	ldr	r5, [r3, #20]
   1fbb0:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1fbb4:	ldr	r4, [r3, #16]
   1fbb8:	ldr	r2, [fp, #-16]
   1fbbc:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1fbc0:	ldr	r3, [r3, #16]
   1fbc4:	mov	r1, r3
   1fbc8:	mov	r0, r2
   1fbcc:	bl	217b0 <__udivsi3>
   1fbd0:	mov	r3, r0
   1fbd4:	mov	r2, r3
   1fbd8:	ldr	r3, [fp, #-276]	; 0xfffffeec
   1fbdc:	sub	r0, fp, #272	; 0x110
   1fbe0:	str	r3, [sp, #16]
   1fbe4:	str	r2, [sp, #12]
   1fbe8:	ldr	r3, [fp, #-16]
   1fbec:	str	r3, [sp, #8]
   1fbf0:	str	r4, [sp, #4]
   1fbf4:	ldr	r3, [pc, #148]	; 1fc90 <rb_dictionary_stats+0x134>
   1fbf8:	add	r3, pc, r3
   1fbfc:	str	r3, [sp]
   1fc00:	mov	r3, r5
   1fc04:	ldr	r2, [pc, #136]	; 1fc94 <rb_dictionary_stats+0x138>
   1fc08:	add	r2, pc, r2
   1fc0c:	mov	r1, #256	; 0x100
   1fc10:	bl	4c34 <snprintf@plt>
   1fc14:	b	1fc70 <rb_dictionary_stats+0x114>
   1fc18:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1fc1c:	ldr	r3, [r3, #20]
   1fc20:	sub	r0, fp, #272	; 0x110
   1fc24:	ldr	r2, [pc, #108]	; 1fc98 <rb_dictionary_stats+0x13c>
   1fc28:	add	r2, pc, r2
   1fc2c:	str	r2, [sp, #16]
   1fc30:	ldr	r2, [pc, #100]	; 1fc9c <rb_dictionary_stats+0x140>
   1fc34:	add	r2, pc, r2
   1fc38:	str	r2, [sp, #12]
   1fc3c:	ldr	r2, [pc, #92]	; 1fca0 <rb_dictionary_stats+0x144>
   1fc40:	add	r2, pc, r2
   1fc44:	str	r2, [sp, #8]
   1fc48:	ldr	r2, [pc, #84]	; 1fca4 <rb_dictionary_stats+0x148>
   1fc4c:	add	r2, pc, r2
   1fc50:	str	r2, [sp, #4]
   1fc54:	ldr	r2, [pc, #76]	; 1fca8 <rb_dictionary_stats+0x14c>
   1fc58:	add	r2, pc, r2
   1fc5c:	str	r2, [sp]
   1fc60:	ldr	r2, [pc, #68]	; 1fcac <rb_dictionary_stats+0x150>
   1fc64:	add	r2, pc, r2
   1fc68:	mov	r1, #256	; 0x100
   1fc6c:	bl	4c34 <snprintf@plt>
   1fc70:	sub	r2, fp, #272	; 0x110
   1fc74:	ldr	r3, [fp, #-284]	; 0xfffffee4
   1fc78:	ldr	r1, [fp, #-288]	; 0xfffffee0
   1fc7c:	mov	r0, r2
   1fc80:	blx	r3
   1fc84:	nop			; (mov r0, r0)
   1fc88:	sub	sp, fp, #12
   1fc8c:	pop	{r4, r5, fp, pc}
   1fc90:	.word	0x00003b08
   1fc94:	.word	0x00003ad4
   1fc98:	.word	0x00003b04
   1fc9c:	.word	0x00003af8
   1fca0:	.word	0x00003aec
   1fca4:	.word	0x00003ae0
   1fca8:	.word	0x00003aa8
   1fcac:	.word	0x00003aa4

0001fcb0 <rb_dictionary_stats_walk>:
   1fcb0:	push	{fp, lr}
   1fcb4:	add	fp, sp, #4
   1fcb8:	sub	sp, sp, #16
   1fcbc:	str	r0, [fp, #-16]
   1fcc0:	str	r1, [fp, #-20]	; 0xffffffec
   1fcc4:	ldr	r3, [pc, #72]	; 1fd14 <rb_dictionary_stats_walk+0x64>
   1fcc8:	add	r3, pc, r3
   1fccc:	ldr	r3, [r3]
   1fcd0:	str	r3, [fp, #-8]
   1fcd4:	b	1fcfc <rb_dictionary_stats_walk+0x4c>
   1fcd8:	ldr	r3, [fp, #-8]
   1fcdc:	ldr	r3, [r3]
   1fce0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fce4:	ldr	r1, [fp, #-16]
   1fce8:	mov	r0, r3
   1fcec:	bl	4a18 <rb_dictionary_stats@plt>
   1fcf0:	ldr	r3, [fp, #-8]
   1fcf4:	ldr	r3, [r3, #8]
   1fcf8:	str	r3, [fp, #-8]
   1fcfc:	ldr	r3, [fp, #-8]
   1fd00:	cmp	r3, #0
   1fd04:	bne	1fcd8 <rb_dictionary_stats_walk+0x28>
   1fd08:	nop			; (mov r0, r0)
   1fd0c:	sub	sp, fp, #4
   1fd10:	pop	{fp, pc}
   1fd14:	.word	0x0003273c

0001fd18 <rb_dlinkAdd>:
   1fd18:	push	{fp}		; (str fp, [sp, #-4]!)
   1fd1c:	add	fp, sp, #0
   1fd20:	sub	sp, sp, #20
   1fd24:	str	r0, [fp, #-8]
   1fd28:	str	r1, [fp, #-12]
   1fd2c:	str	r2, [fp, #-16]
   1fd30:	ldr	r3, [fp, #-12]
   1fd34:	ldr	r2, [fp, #-8]
   1fd38:	str	r2, [r3]
   1fd3c:	ldr	r3, [fp, #-12]
   1fd40:	mov	r2, #0
   1fd44:	str	r2, [r3, #4]
   1fd48:	ldr	r3, [fp, #-16]
   1fd4c:	ldr	r2, [r3]
   1fd50:	ldr	r3, [fp, #-12]
   1fd54:	str	r2, [r3, #8]
   1fd58:	ldr	r3, [fp, #-16]
   1fd5c:	ldr	r3, [r3]
   1fd60:	cmp	r3, #0
   1fd64:	beq	1fd7c <rb_dlinkAdd+0x64>
   1fd68:	ldr	r3, [fp, #-16]
   1fd6c:	ldr	r3, [r3]
   1fd70:	ldr	r2, [fp, #-12]
   1fd74:	str	r2, [r3, #4]
   1fd78:	b	1fd98 <rb_dlinkAdd+0x80>
   1fd7c:	ldr	r3, [fp, #-16]
   1fd80:	ldr	r3, [r3, #4]
   1fd84:	cmp	r3, #0
   1fd88:	bne	1fd98 <rb_dlinkAdd+0x80>
   1fd8c:	ldr	r3, [fp, #-16]
   1fd90:	ldr	r2, [fp, #-12]
   1fd94:	str	r2, [r3, #4]
   1fd98:	ldr	r3, [fp, #-16]
   1fd9c:	ldr	r2, [fp, #-12]
   1fda0:	str	r2, [r3]
   1fda4:	ldr	r3, [fp, #-16]
   1fda8:	ldr	r3, [r3, #8]
   1fdac:	add	r2, r3, #1
   1fdb0:	ldr	r3, [fp, #-16]
   1fdb4:	str	r2, [r3, #8]
   1fdb8:	nop			; (mov r0, r0)
   1fdbc:	add	sp, fp, #0
   1fdc0:	pop	{fp}		; (ldr fp, [sp], #4)
   1fdc4:	bx	lr

0001fdc8 <rb_dlinkDelete>:
   1fdc8:	push	{fp}		; (str fp, [sp, #-4]!)
   1fdcc:	add	fp, sp, #0
   1fdd0:	sub	sp, sp, #12
   1fdd4:	str	r0, [fp, #-8]
   1fdd8:	str	r1, [fp, #-12]
   1fddc:	ldr	r3, [fp, #-8]
   1fde0:	ldr	r3, [r3, #8]
   1fde4:	cmp	r3, #0
   1fde8:	beq	1fe04 <rb_dlinkDelete+0x3c>
   1fdec:	ldr	r3, [fp, #-8]
   1fdf0:	ldr	r3, [r3, #8]
   1fdf4:	ldr	r2, [fp, #-8]
   1fdf8:	ldr	r2, [r2, #4]
   1fdfc:	str	r2, [r3, #4]
   1fe00:	b	1fe14 <rb_dlinkDelete+0x4c>
   1fe04:	ldr	r3, [fp, #-8]
   1fe08:	ldr	r2, [r3, #4]
   1fe0c:	ldr	r3, [fp, #-12]
   1fe10:	str	r2, [r3, #4]
   1fe14:	ldr	r3, [fp, #-8]
   1fe18:	ldr	r3, [r3, #4]
   1fe1c:	cmp	r3, #0
   1fe20:	beq	1fe3c <rb_dlinkDelete+0x74>
   1fe24:	ldr	r3, [fp, #-8]
   1fe28:	ldr	r3, [r3, #4]
   1fe2c:	ldr	r2, [fp, #-8]
   1fe30:	ldr	r2, [r2, #8]
   1fe34:	str	r2, [r3, #8]
   1fe38:	b	1fe4c <rb_dlinkDelete+0x84>
   1fe3c:	ldr	r3, [fp, #-8]
   1fe40:	ldr	r2, [r3, #8]
   1fe44:	ldr	r3, [fp, #-12]
   1fe48:	str	r2, [r3]
   1fe4c:	ldr	r3, [fp, #-8]
   1fe50:	mov	r2, #0
   1fe54:	str	r2, [r3, #4]
   1fe58:	ldr	r3, [fp, #-8]
   1fe5c:	ldr	r2, [r3, #4]
   1fe60:	ldr	r3, [fp, #-8]
   1fe64:	str	r2, [r3, #8]
   1fe68:	ldr	r3, [fp, #-12]
   1fe6c:	ldr	r3, [r3, #8]
   1fe70:	sub	r2, r3, #1
   1fe74:	ldr	r3, [fp, #-12]
   1fe78:	str	r2, [r3, #8]
   1fe7c:	nop			; (mov r0, r0)
   1fe80:	add	sp, fp, #0
   1fe84:	pop	{fp}		; (ldr fp, [sp], #4)
   1fe88:	bx	lr

0001fe8c <rb_malloc>:
   1fe8c:	push	{fp, lr}
   1fe90:	add	fp, sp, #4
   1fe94:	sub	sp, sp, #16
   1fe98:	str	r0, [fp, #-16]
   1fe9c:	ldr	r1, [fp, #-16]
   1fea0:	mov	r0, #1
   1fea4:	bl	4658 <calloc@plt>
   1fea8:	mov	r3, r0
   1feac:	str	r3, [fp, #-8]
   1feb0:	ldr	r3, [fp, #-8]
   1feb4:	cmp	r3, #0
   1feb8:	moveq	r3, #1
   1febc:	movne	r3, #0
   1fec0:	uxtb	r3, r3
   1fec4:	cmp	r3, #0
   1fec8:	beq	1fed0 <rb_malloc+0x44>
   1fecc:	bl	4a00 <rb_outofmemory@plt>
   1fed0:	ldr	r3, [fp, #-8]
   1fed4:	mov	r0, r3
   1fed8:	sub	sp, fp, #4
   1fedc:	pop	{fp, pc}

0001fee0 <rb_strdup>:
   1fee0:	push	{fp, lr}
   1fee4:	add	fp, sp, #4
   1fee8:	sub	sp, sp, #16
   1feec:	str	r0, [fp, #-16]
   1fef0:	ldr	r0, [fp, #-16]
   1fef4:	bl	485c <strlen@plt>
   1fef8:	mov	r3, r0
   1fefc:	add	r3, r3, #1
   1ff00:	mov	r0, r3
   1ff04:	bl	4a24 <malloc@plt>
   1ff08:	mov	r3, r0
   1ff0c:	str	r3, [fp, #-8]
   1ff10:	ldr	r3, [fp, #-8]
   1ff14:	cmp	r3, #0
   1ff18:	moveq	r3, #1
   1ff1c:	movne	r3, #0
   1ff20:	uxtb	r3, r3
   1ff24:	cmp	r3, #0
   1ff28:	beq	1ff30 <rb_strdup+0x50>
   1ff2c:	bl	4a00 <rb_outofmemory@plt>
   1ff30:	ldr	r1, [fp, #-16]
   1ff34:	ldr	r0, [fp, #-8]
   1ff38:	bl	48f8 <strcpy@plt>
   1ff3c:	ldr	r3, [fp, #-8]
   1ff40:	mov	r0, r3
   1ff44:	sub	sp, fp, #4
   1ff48:	pop	{fp, pc}

0001ff4c <rb_free>:
   1ff4c:	push	{fp, lr}
   1ff50:	add	fp, sp, #4
   1ff54:	sub	sp, sp, #8
   1ff58:	str	r0, [fp, #-8]
   1ff5c:	ldr	r3, [fp, #-8]
   1ff60:	cmp	r3, #0
   1ff64:	movne	r3, #1
   1ff68:	moveq	r3, #0
   1ff6c:	uxtb	r3, r3
   1ff70:	cmp	r3, #0
   1ff74:	beq	1ff80 <rb_free+0x34>
   1ff78:	ldr	r0, [fp, #-8]
   1ff7c:	bl	476c <free@plt>
   1ff80:	nop			; (mov r0, r0)
   1ff84:	sub	sp, fp, #4
   1ff88:	pop	{fp, pc}

0001ff8c <first_leaf>:
   1ff8c:	push	{fp}		; (str fp, [sp, #-4]!)
   1ff90:	add	fp, sp, #0
   1ff94:	sub	sp, sp, #20
   1ff98:	str	r0, [fp, #-16]
   1ff9c:	b	1fffc <first_leaf+0x70>
   1ffa0:	mov	r3, #0
   1ffa4:	str	r3, [fp, #-8]
   1ffa8:	b	1fff0 <first_leaf+0x64>
   1ffac:	ldr	r2, [fp, #-16]
   1ffb0:	ldr	r3, [fp, #-8]
   1ffb4:	lsl	r3, r3, #2
   1ffb8:	add	r3, r2, r3
   1ffbc:	ldr	r3, [r3, #4]
   1ffc0:	cmp	r3, #0
   1ffc4:	beq	1ffe4 <first_leaf+0x58>
   1ffc8:	ldr	r2, [fp, #-16]
   1ffcc:	ldr	r3, [fp, #-8]
   1ffd0:	lsl	r3, r3, #2
   1ffd4:	add	r3, r2, r3
   1ffd8:	ldr	r3, [r3, #4]
   1ffdc:	str	r3, [fp, #-16]
   1ffe0:	b	1fffc <first_leaf+0x70>
   1ffe4:	ldr	r3, [fp, #-8]
   1ffe8:	add	r3, r3, #1
   1ffec:	str	r3, [fp, #-8]
   1fff0:	ldr	r3, [fp, #-8]
   1fff4:	cmp	r3, #15
   1fff8:	ble	1ffac <first_leaf+0x20>
   1fffc:	ldr	r3, [fp, #-16]
   20000:	ldr	r3, [r3]
   20004:	cmn	r3, #1
   20008:	bne	1ffa0 <first_leaf+0x14>
   2000c:	ldr	r3, [fp, #-16]
   20010:	mov	r0, r3
   20014:	add	sp, fp, #0
   20018:	pop	{fp}		; (ldr fp, [sp], #4)
   2001c:	bx	lr

00020020 <rb_radixtree_create>:
   20020:	push	{r4, fp, lr}
   20024:	add	fp, sp, #8
   20028:	sub	sp, sp, #20
   2002c:	str	r0, [fp, #-24]	; 0xffffffe8
   20030:	str	r1, [fp, #-28]	; 0xffffffe4
   20034:	ldr	r4, [pc, #100]	; 200a0 <rb_radixtree_create+0x80>
   20038:	add	r4, pc, r4
   2003c:	mov	r0, #28
   20040:	bl	1fe8c <rb_malloc>
   20044:	str	r0, [fp, #-16]
   20048:	ldr	r3, [fp, #-16]
   2004c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20050:	str	r2, [r3]
   20054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20058:	bl	1fee0 <rb_strdup>
   2005c:	mov	r2, r0
   20060:	ldr	r3, [fp, #-16]
   20064:	str	r2, [r3, #12]
   20068:	ldr	r3, [fp, #-16]
   2006c:	mov	r2, #0
   20070:	str	r2, [r3, #4]
   20074:	ldr	r3, [fp, #-16]
   20078:	add	r1, r3, #16
   2007c:	ldr	r3, [pc, #32]	; 200a4 <rb_radixtree_create+0x84>
   20080:	ldr	r3, [r4, r3]
   20084:	mov	r2, r3
   20088:	ldr	r0, [fp, #-16]
   2008c:	bl	1fd18 <rb_dlinkAdd>
   20090:	ldr	r3, [fp, #-16]
   20094:	mov	r0, r3
   20098:	sub	sp, fp, #8
   2009c:	pop	{r4, fp, pc}
   200a0:	.word	0x00013fc0
   200a4:	.word	0x00000400

000200a8 <rb_radixtree_destroy>:
   200a8:	push	{r4, fp, lr}
   200ac:	add	fp, sp, #8
   200b0:	sub	sp, sp, #68	; 0x44
   200b4:	str	r0, [fp, #-64]	; 0xffffffc0
   200b8:	str	r1, [fp, #-68]	; 0xffffffbc
   200bc:	str	r2, [fp, #-72]	; 0xffffffb8
   200c0:	ldr	r4, [pc, #200]	; 20190 <rb_radixtree_destroy+0xe8>
   200c4:	add	r4, pc, r4
   200c8:	sub	r3, fp, #60	; 0x3c
   200cc:	mov	r1, r3
   200d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   200d4:	bl	4478 <rb_radixtree_foreach_start@plt>
   200d8:	b	20130 <rb_radixtree_destroy+0x88>
   200dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   200e0:	str	r3, [fp, #-20]	; 0xffffffec
   200e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   200e8:	cmp	r3, #0
   200ec:	beq	2010c <rb_radixtree_destroy+0x64>
   200f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   200f4:	ldr	r0, [r3, #8]
   200f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   200fc:	ldr	r1, [r3, #4]
   20100:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20104:	ldr	r2, [fp, #-72]	; 0xffffffb8
   20108:	blx	r3
   2010c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20110:	ldr	r3, [r3, #8]
   20114:	mov	r1, r3
   20118:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2011c:	bl	4d48 <rb_radixtree_delete@plt>
   20120:	sub	r3, fp, #60	; 0x3c
   20124:	mov	r1, r3
   20128:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2012c:	bl	44b4 <rb_radixtree_foreach_next@plt>
   20130:	sub	r3, fp, #60	; 0x3c
   20134:	mov	r1, r3
   20138:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2013c:	bl	4820 <rb_radixtree_foreach_cur@plt>
   20140:	str	r0, [fp, #-16]
   20144:	ldr	r3, [fp, #-16]
   20148:	cmp	r3, #0
   2014c:	bne	200dc <rb_radixtree_destroy+0x34>
   20150:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20154:	add	r2, r3, #16
   20158:	ldr	r3, [pc, #52]	; 20194 <rb_radixtree_destroy+0xec>
   2015c:	ldr	r3, [r4, r3]
   20160:	mov	r1, r3
   20164:	mov	r0, r2
   20168:	bl	1fdc8 <rb_dlinkDelete>
   2016c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20170:	ldr	r3, [r3, #12]
   20174:	mov	r0, r3
   20178:	bl	1ff4c <rb_free>
   2017c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20180:	bl	1ff4c <rb_free>
   20184:	nop			; (mov r0, r0)
   20188:	sub	sp, fp, #8
   2018c:	pop	{r4, fp, pc}
   20190:	.word	0x00013f34
   20194:	.word	0x00000400

00020198 <rb_radixtree_foreach>:
   20198:	push	{fp, lr}
   2019c:	add	fp, sp, #4
   201a0:	sub	sp, sp, #32
   201a4:	str	r0, [fp, #-24]	; 0xffffffe8
   201a8:	str	r1, [fp, #-28]	; 0xffffffe4
   201ac:	str	r2, [fp, #-32]	; 0xffffffe0
   201b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   201b4:	ldr	r3, [r3, #4]
   201b8:	str	r3, [fp, #-8]
   201bc:	ldr	r3, [fp, #-8]
   201c0:	cmp	r3, #0
   201c4:	beq	202f4 <rb_radixtree_foreach+0x15c>
   201c8:	ldr	r3, [fp, #-8]
   201cc:	ldr	r3, [r3]
   201d0:	cmn	r3, #1
   201d4:	bne	20204 <rb_radixtree_foreach+0x6c>
   201d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   201dc:	cmp	r3, #0
   201e0:	beq	202fc <rb_radixtree_foreach+0x164>
   201e4:	ldr	r3, [fp, #-8]
   201e8:	ldr	r0, [r3, #8]
   201ec:	ldr	r3, [fp, #-8]
   201f0:	ldr	r1, [r3, #4]
   201f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   201f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   201fc:	blx	r3
   20200:	b	202fc <rb_radixtree_foreach+0x164>
   20204:	mov	r3, #0
   20208:	str	r3, [fp, #-12]
   2020c:	ldr	r3, [fp, #-12]
   20210:	add	r2, r3, #1
   20214:	str	r2, [fp, #-12]
   20218:	ldr	r2, [fp, #-8]
   2021c:	lsl	r3, r3, #2
   20220:	add	r3, r2, r3
   20224:	ldr	r3, [r3, #4]
   20228:	str	r3, [fp, #-16]
   2022c:	ldr	r3, [fp, #-16]
   20230:	cmp	r3, #0
   20234:	bne	20244 <rb_radixtree_foreach+0xac>
   20238:	ldr	r3, [fp, #-12]
   2023c:	cmp	r3, #15
   20240:	ble	2020c <rb_radixtree_foreach+0x74>
   20244:	ldr	r3, [fp, #-16]
   20248:	cmp	r3, #0
   2024c:	beq	202d0 <rb_radixtree_foreach+0x138>
   20250:	ldr	r3, [fp, #-16]
   20254:	ldr	r3, [r3]
   20258:	cmn	r3, #1
   2025c:	bne	2028c <rb_radixtree_foreach+0xf4>
   20260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20264:	cmp	r3, #0
   20268:	beq	202d0 <rb_radixtree_foreach+0x138>
   2026c:	ldr	r3, [fp, #-16]
   20270:	ldr	r0, [r3, #8]
   20274:	ldr	r3, [fp, #-16]
   20278:	ldr	r1, [r3, #4]
   2027c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20280:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20284:	blx	r3
   20288:	b	202d0 <rb_radixtree_foreach+0x138>
   2028c:	ldr	r3, [fp, #-16]
   20290:	str	r3, [fp, #-8]
   20294:	mov	r3, #0
   20298:	str	r3, [fp, #-12]
   2029c:	b	202d0 <rb_radixtree_foreach+0x138>
   202a0:	ldr	r3, [fp, #-8]
   202a4:	ldrb	r3, [r3, #72]	; 0x48
   202a8:	str	r3, [fp, #-12]
   202ac:	ldr	r3, [fp, #-8]
   202b0:	ldr	r3, [r3, #68]	; 0x44
   202b4:	str	r3, [fp, #-8]
   202b8:	ldr	r3, [fp, #-8]
   202bc:	cmp	r3, #0
   202c0:	beq	202e0 <rb_radixtree_foreach+0x148>
   202c4:	ldr	r3, [fp, #-12]
   202c8:	add	r3, r3, #1
   202cc:	str	r3, [fp, #-12]
   202d0:	ldr	r3, [fp, #-12]
   202d4:	cmp	r3, #15
   202d8:	bgt	202a0 <rb_radixtree_foreach+0x108>
   202dc:	b	202e4 <rb_radixtree_foreach+0x14c>
   202e0:	nop			; (mov r0, r0)
   202e4:	ldr	r3, [fp, #-8]
   202e8:	cmp	r3, #0
   202ec:	bne	2020c <rb_radixtree_foreach+0x74>
   202f0:	b	20300 <rb_radixtree_foreach+0x168>
   202f4:	nop			; (mov r0, r0)
   202f8:	b	20300 <rb_radixtree_foreach+0x168>
   202fc:	nop			; (mov r0, r0)
   20300:	sub	sp, fp, #4
   20304:	pop	{fp, pc}

00020308 <rb_radixtree_search>:
   20308:	push	{fp, lr}
   2030c:	add	fp, sp, #4
   20310:	sub	sp, sp, #32
   20314:	str	r0, [fp, #-24]	; 0xffffffe8
   20318:	str	r1, [fp, #-28]	; 0xffffffe4
   2031c:	str	r2, [fp, #-32]	; 0xffffffe0
   20320:	mov	r3, #0
   20324:	str	r3, [fp, #-16]
   20328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2032c:	ldr	r3, [r3, #4]
   20330:	str	r3, [fp, #-8]
   20334:	ldr	r3, [fp, #-8]
   20338:	cmp	r3, #0
   2033c:	bne	20348 <rb_radixtree_search+0x40>
   20340:	mov	r3, #0
   20344:	b	20488 <rb_radixtree_search+0x180>
   20348:	ldr	r3, [fp, #-8]
   2034c:	ldr	r3, [r3]
   20350:	cmn	r3, #1
   20354:	bne	20390 <rb_radixtree_search+0x88>
   20358:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2035c:	cmp	r3, #0
   20360:	beq	20388 <rb_radixtree_search+0x80>
   20364:	ldr	r3, [fp, #-8]
   20368:	ldr	r0, [r3, #8]
   2036c:	ldr	r3, [fp, #-8]
   20370:	ldr	r1, [r3, #4]
   20374:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20378:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2037c:	blx	r3
   20380:	mov	r3, r0
   20384:	b	20488 <rb_radixtree_search+0x180>
   20388:	mov	r3, #0
   2038c:	b	20488 <rb_radixtree_search+0x180>
   20390:	mov	r3, #0
   20394:	str	r3, [fp, #-12]
   20398:	ldr	r3, [fp, #-12]
   2039c:	add	r2, r3, #1
   203a0:	str	r2, [fp, #-12]
   203a4:	ldr	r2, [fp, #-8]
   203a8:	lsl	r3, r3, #2
   203ac:	add	r3, r2, r3
   203b0:	ldr	r3, [r3, #4]
   203b4:	str	r3, [fp, #-20]	; 0xffffffec
   203b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   203bc:	cmp	r3, #0
   203c0:	bne	203d0 <rb_radixtree_search+0xc8>
   203c4:	ldr	r3, [fp, #-12]
   203c8:	cmp	r3, #15
   203cc:	ble	20398 <rb_radixtree_search+0x90>
   203d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   203d4:	cmp	r3, #0
   203d8:	beq	2046c <rb_radixtree_search+0x164>
   203dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   203e0:	ldr	r3, [r3]
   203e4:	cmn	r3, #1
   203e8:	bne	20428 <rb_radixtree_search+0x120>
   203ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   203f0:	cmp	r3, #0
   203f4:	beq	20418 <rb_radixtree_search+0x110>
   203f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   203fc:	ldr	r0, [r3, #8]
   20400:	ldr	r3, [fp, #-20]	; 0xffffffec
   20404:	ldr	r1, [r3, #4]
   20408:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2040c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20410:	blx	r3
   20414:	str	r0, [fp, #-16]
   20418:	ldr	r3, [fp, #-16]
   2041c:	cmp	r3, #0
   20420:	beq	2046c <rb_radixtree_search+0x164>
   20424:	b	20484 <rb_radixtree_search+0x17c>
   20428:	ldr	r3, [fp, #-20]	; 0xffffffec
   2042c:	str	r3, [fp, #-8]
   20430:	mov	r3, #0
   20434:	str	r3, [fp, #-12]
   20438:	b	2046c <rb_radixtree_search+0x164>
   2043c:	ldr	r3, [fp, #-8]
   20440:	ldrb	r3, [r3, #72]	; 0x48
   20444:	str	r3, [fp, #-12]
   20448:	ldr	r3, [fp, #-8]
   2044c:	ldr	r3, [r3, #68]	; 0x44
   20450:	str	r3, [fp, #-8]
   20454:	ldr	r3, [fp, #-8]
   20458:	cmp	r3, #0
   2045c:	beq	2047c <rb_radixtree_search+0x174>
   20460:	ldr	r3, [fp, #-12]
   20464:	add	r3, r3, #1
   20468:	str	r3, [fp, #-12]
   2046c:	ldr	r3, [fp, #-12]
   20470:	cmp	r3, #15
   20474:	bgt	2043c <rb_radixtree_search+0x134>
   20478:	b	20398 <rb_radixtree_search+0x90>
   2047c:	nop			; (mov r0, r0)
   20480:	b	20398 <rb_radixtree_search+0x90>
   20484:	ldr	r3, [fp, #-16]
   20488:	mov	r0, r3
   2048c:	sub	sp, fp, #4
   20490:	pop	{fp, pc}

00020494 <rb_radixtree_foreach_start>:
   20494:	push	{fp, lr}
   20498:	add	fp, sp, #4
   2049c:	sub	sp, sp, #8
   204a0:	str	r0, [fp, #-8]
   204a4:	str	r1, [fp, #-12]
   204a8:	ldr	r3, [fp, #-8]
   204ac:	cmp	r3, #0
   204b0:	beq	20520 <rb_radixtree_foreach_start+0x8c>
   204b4:	ldr	r3, [fp, #-8]
   204b8:	ldr	r3, [r3, #4]
   204bc:	cmp	r3, #0
   204c0:	beq	204e4 <rb_radixtree_foreach_start+0x50>
   204c4:	ldr	r3, [fp, #-8]
   204c8:	ldr	r3, [r3, #4]
   204cc:	mov	r0, r3
   204d0:	bl	1ff8c <first_leaf>
   204d4:	mov	r2, r0
   204d8:	ldr	r3, [fp, #-12]
   204dc:	str	r2, [r3, #12]
   204e0:	b	204f0 <rb_radixtree_foreach_start+0x5c>
   204e4:	ldr	r3, [fp, #-12]
   204e8:	mov	r2, #0
   204ec:	str	r2, [r3, #12]
   204f0:	ldr	r3, [fp, #-12]
   204f4:	ldr	r2, [r3, #12]
   204f8:	ldr	r3, [fp, #-12]
   204fc:	str	r2, [r3, #8]
   20500:	ldr	r3, [fp, #-12]
   20504:	ldr	r3, [r3, #12]
   20508:	cmp	r3, #0
   2050c:	beq	20528 <rb_radixtree_foreach_start+0x94>
   20510:	ldr	r1, [fp, #-12]
   20514:	ldr	r0, [fp, #-8]
   20518:	bl	44b4 <rb_radixtree_foreach_next@plt>
   2051c:	b	2052c <rb_radixtree_foreach_start+0x98>
   20520:	nop			; (mov r0, r0)
   20524:	b	2052c <rb_radixtree_foreach_start+0x98>
   20528:	nop			; (mov r0, r0)
   2052c:	sub	sp, fp, #4
   20530:	pop	{fp, pc}

00020534 <rb_radixtree_foreach_cur>:
   20534:	push	{fp}		; (str fp, [sp, #-4]!)
   20538:	add	fp, sp, #0
   2053c:	sub	sp, sp, #12
   20540:	str	r0, [fp, #-8]
   20544:	str	r1, [fp, #-12]
   20548:	ldr	r3, [fp, #-8]
   2054c:	cmp	r3, #0
   20550:	bne	2055c <rb_radixtree_foreach_cur+0x28>
   20554:	mov	r3, #0
   20558:	b	20580 <rb_radixtree_foreach_cur+0x4c>
   2055c:	ldr	r3, [fp, #-12]
   20560:	ldr	r3, [r3, #8]
   20564:	cmp	r3, #0
   20568:	beq	2057c <rb_radixtree_foreach_cur+0x48>
   2056c:	ldr	r3, [fp, #-12]
   20570:	ldr	r3, [r3, #8]
   20574:	ldr	r3, [r3, #4]
   20578:	b	20580 <rb_radixtree_foreach_cur+0x4c>
   2057c:	mov	r3, #0
   20580:	mov	r0, r3
   20584:	add	sp, fp, #0
   20588:	pop	{fp}		; (ldr fp, [sp], #4)
   2058c:	bx	lr

00020590 <rb_radixtree_foreach_next>:
   20590:	push	{fp, lr}
   20594:	add	fp, sp, #4
   20598:	sub	sp, sp, #24
   2059c:	str	r0, [fp, #-24]	; 0xffffffe8
   205a0:	str	r1, [fp, #-28]	; 0xffffffe4
   205a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205a8:	cmp	r3, #0
   205ac:	beq	20724 <rb_radixtree_foreach_next+0x194>
   205b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   205b4:	ldr	r3, [r3, #8]
   205b8:	cmp	r3, #0
   205bc:	beq	2072c <rb_radixtree_foreach_next+0x19c>
   205c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   205c4:	ldr	r2, [r3, #12]
   205c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   205cc:	str	r2, [r3, #8]
   205d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   205d4:	ldr	r3, [r3, #12]
   205d8:	cmp	r3, #0
   205dc:	beq	20734 <rb_radixtree_foreach_next+0x1a4>
   205e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   205e4:	ldr	r3, [r3, #12]
   205e8:	str	r3, [fp, #-16]
   205ec:	ldr	r3, [fp, #-16]
   205f0:	ldr	r3, [r3, #12]
   205f4:	str	r3, [fp, #-8]
   205f8:	ldr	r3, [fp, #-16]
   205fc:	ldrb	r3, [r3, #16]
   20600:	str	r3, [fp, #-12]
   20604:	b	20708 <rb_radixtree_foreach_next+0x178>
   20608:	ldr	r3, [fp, #-12]
   2060c:	add	r2, r3, #1
   20610:	str	r2, [fp, #-12]
   20614:	ldr	r2, [fp, #-8]
   20618:	lsl	r3, r3, #2
   2061c:	add	r3, r2, r3
   20620:	ldr	r3, [r3, #4]
   20624:	str	r3, [fp, #-20]	; 0xffffffec
   20628:	ldr	r3, [fp, #-20]	; 0xffffffec
   2062c:	cmp	r3, #0
   20630:	bne	20640 <rb_radixtree_foreach_next+0xb0>
   20634:	ldr	r3, [fp, #-12]
   20638:	cmp	r3, #15
   2063c:	ble	20608 <rb_radixtree_foreach_next+0x78>
   20640:	ldr	r3, [fp, #-20]	; 0xffffffec
   20644:	cmp	r3, #0
   20648:	beq	206fc <rb_radixtree_foreach_next+0x16c>
   2064c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20650:	ldr	r3, [r3]
   20654:	cmn	r3, #1
   20658:	bne	206b4 <rb_radixtree_foreach_next+0x124>
   2065c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20660:	ldr	r3, [fp, #-16]
   20664:	cmp	r2, r3
   20668:	beq	206fc <rb_radixtree_foreach_next+0x16c>
   2066c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20670:	ldr	r2, [r3, #8]
   20674:	ldr	r3, [fp, #-16]
   20678:	ldr	r3, [r3, #8]
   2067c:	mov	r1, r3
   20680:	mov	r0, r2
   20684:	bl	4d6c <strcmp@plt>
   20688:	mov	r3, r0
   2068c:	cmp	r3, #0
   20690:	bge	206a4 <rb_radixtree_foreach_next+0x114>
   20694:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20698:	mov	r2, #0
   2069c:	str	r2, [r3, #12]
   206a0:	b	20738 <rb_radixtree_foreach_next+0x1a8>
   206a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   206a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   206ac:	str	r2, [r3, #12]
   206b0:	b	20738 <rb_radixtree_foreach_next+0x1a8>
   206b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   206b8:	str	r3, [fp, #-8]
   206bc:	mov	r3, #0
   206c0:	str	r3, [fp, #-12]
   206c4:	b	206fc <rb_radixtree_foreach_next+0x16c>
   206c8:	ldr	r3, [fp, #-8]
   206cc:	ldrb	r3, [r3, #72]	; 0x48
   206d0:	str	r3, [fp, #-12]
   206d4:	ldr	r3, [fp, #-8]
   206d8:	ldr	r3, [r3, #68]	; 0x44
   206dc:	str	r3, [fp, #-8]
   206e0:	ldr	r3, [fp, #-8]
   206e4:	cmp	r3, #0
   206e8:	bne	206f0 <rb_radixtree_foreach_next+0x160>
   206ec:	b	20708 <rb_radixtree_foreach_next+0x178>
   206f0:	ldr	r3, [fp, #-12]
   206f4:	add	r3, r3, #1
   206f8:	str	r3, [fp, #-12]
   206fc:	ldr	r3, [fp, #-12]
   20700:	cmp	r3, #15
   20704:	bgt	206c8 <rb_radixtree_foreach_next+0x138>
   20708:	ldr	r3, [fp, #-8]
   2070c:	cmp	r3, #0
   20710:	bne	20608 <rb_radixtree_foreach_next+0x78>
   20714:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20718:	mov	r2, #0
   2071c:	str	r2, [r3, #12]
   20720:	b	20738 <rb_radixtree_foreach_next+0x1a8>
   20724:	nop			; (mov r0, r0)
   20728:	b	20738 <rb_radixtree_foreach_next+0x1a8>
   2072c:	nop			; (mov r0, r0)
   20730:	b	20738 <rb_radixtree_foreach_next+0x1a8>
   20734:	nop			; (mov r0, r0)
   20738:	sub	sp, fp, #4
   2073c:	pop	{fp, pc}

00020740 <rb_radixtree_elem_find>:
   20740:	push	{fp, lr}
   20744:	add	fp, sp, #4
   20748:	sub	sp, sp, #296	; 0x128
   2074c:	str	r0, [fp, #-288]	; 0xfffffee0
   20750:	str	r1, [fp, #-292]	; 0xfffffedc
   20754:	str	r2, [fp, #-296]	; 0xfffffed8
   20758:	mov	r3, #0
   2075c:	str	r3, [fp, #-8]
   20760:	ldr	r0, [fp, #-292]	; 0xfffffedc
   20764:	bl	485c <strlen@plt>
   20768:	mov	r3, r0
   2076c:	str	r3, [fp, #-24]	; 0xffffffe8
   20770:	ldr	r3, [fp, #-288]	; 0xfffffee0
   20774:	ldr	r3, [r3]
   20778:	cmp	r3, #0
   2077c:	bne	2078c <rb_radixtree_elem_find+0x4c>
   20780:	ldr	r3, [fp, #-292]	; 0xfffffedc
   20784:	str	r3, [fp, #-12]
   20788:	b	207f0 <rb_radixtree_elem_find+0xb0>
   2078c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20790:	cmp	r3, #255	; 0xff
   20794:	ble	207c0 <rb_radixtree_elem_find+0x80>
   20798:	ldr	r0, [fp, #-292]	; 0xfffffedc
   2079c:	bl	1fee0 <rb_strdup>
   207a0:	str	r0, [fp, #-8]
   207a4:	ldr	r3, [fp, #-288]	; 0xfffffee0
   207a8:	ldr	r3, [r3]
   207ac:	ldr	r0, [fp, #-8]
   207b0:	blx	r3
   207b4:	ldr	r3, [fp, #-8]
   207b8:	str	r3, [fp, #-12]
   207bc:	b	207f0 <rb_radixtree_elem_find+0xb0>
   207c0:	sub	r3, fp, #280	; 0x118
   207c4:	mov	r2, #256	; 0x100
   207c8:	ldr	r1, [fp, #-292]	; 0xfffffedc
   207cc:	mov	r0, r3
   207d0:	bl	470c <rb_strlcpy@plt>
   207d4:	ldr	r3, [fp, #-288]	; 0xfffffee0
   207d8:	ldr	r3, [r3]
   207dc:	sub	r2, fp, #280	; 0x118
   207e0:	mov	r0, r2
   207e4:	blx	r3
   207e8:	sub	r3, fp, #280	; 0x118
   207ec:	str	r3, [fp, #-12]
   207f0:	ldr	r3, [fp, #-288]	; 0xfffffee0
   207f4:	ldr	r3, [r3, #4]
   207f8:	str	r3, [fp, #-16]
   207fc:	b	2089c <rb_radixtree_elem_find+0x15c>
   20800:	ldr	r3, [fp, #-16]
   20804:	ldr	r3, [r3]
   20808:	lsr	r2, r3, #31
   2080c:	add	r3, r2, r3
   20810:	asr	r3, r3, #1
   20814:	mov	r2, r3
   20818:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2081c:	cmp	r2, r3
   20820:	bge	2087c <rb_radixtree_elem_find+0x13c>
   20824:	ldr	r3, [fp, #-16]
   20828:	ldr	r3, [r3]
   2082c:	lsr	r2, r3, #31
   20830:	add	r3, r2, r3
   20834:	asr	r3, r3, #1
   20838:	mov	r2, r3
   2083c:	ldr	r3, [fp, #-12]
   20840:	add	r3, r3, r2
   20844:	ldrb	r3, [r3]
   20848:	mov	r2, r3
   2084c:	ldr	r3, [fp, #-16]
   20850:	ldr	r3, [r3]
   20854:	and	r3, r3, #1
   20858:	cmp	r3, #0
   2085c:	beq	20868 <rb_radixtree_elem_find+0x128>
   20860:	mov	r3, #0
   20864:	b	2086c <rb_radixtree_elem_find+0x12c>
   20868:	mov	r3, #4
   2086c:	asr	r3, r2, r3
   20870:	and	r3, r3, #15
   20874:	str	r3, [fp, #-20]	; 0xffffffec
   20878:	b	20884 <rb_radixtree_elem_find+0x144>
   2087c:	mov	r3, #0
   20880:	str	r3, [fp, #-20]	; 0xffffffec
   20884:	ldr	r2, [fp, #-16]
   20888:	ldr	r3, [fp, #-20]	; 0xffffffec
   2088c:	lsl	r3, r3, #2
   20890:	add	r3, r2, r3
   20894:	ldr	r3, [r3, #4]
   20898:	str	r3, [fp, #-16]
   2089c:	ldr	r3, [fp, #-16]
   208a0:	cmp	r3, #0
   208a4:	beq	208b8 <rb_radixtree_elem_find+0x178>
   208a8:	ldr	r3, [fp, #-16]
   208ac:	ldr	r3, [r3]
   208b0:	cmn	r3, #1
   208b4:	bne	20800 <rb_radixtree_elem_find+0xc0>
   208b8:	ldr	r3, [fp, #-16]
   208bc:	cmp	r3, #0
   208c0:	beq	208f8 <rb_radixtree_elem_find+0x1b8>
   208c4:	ldr	r3, [fp, #-296]	; 0xfffffed8
   208c8:	cmp	r3, #0
   208cc:	bne	208f8 <rb_radixtree_elem_find+0x1b8>
   208d0:	ldr	r3, [fp, #-16]
   208d4:	ldr	r3, [r3, #8]
   208d8:	ldr	r1, [fp, #-12]
   208dc:	mov	r0, r3
   208e0:	bl	4d6c <strcmp@plt>
   208e4:	mov	r3, r0
   208e8:	cmp	r3, #0
   208ec:	beq	208f8 <rb_radixtree_elem_find+0x1b8>
   208f0:	mov	r3, #0
   208f4:	str	r3, [fp, #-16]
   208f8:	ldr	r3, [fp, #-8]
   208fc:	cmp	r3, #0
   20900:	beq	2090c <rb_radixtree_elem_find+0x1cc>
   20904:	ldr	r0, [fp, #-8]
   20908:	bl	1ff4c <rb_free>
   2090c:	ldr	r3, [fp, #-16]
   20910:	mov	r0, r3
   20914:	sub	sp, fp, #4
   20918:	pop	{fp, pc}

0002091c <rb_radixtree_foreach_start_from>:
   2091c:	push	{fp, lr}
   20920:	add	fp, sp, #4
   20924:	sub	sp, sp, #16
   20928:	str	r0, [fp, #-8]
   2092c:	str	r1, [fp, #-12]
   20930:	str	r2, [fp, #-16]
   20934:	ldr	r3, [fp, #-16]
   20938:	cmp	r3, #0
   2093c:	beq	20978 <rb_radixtree_foreach_start_from+0x5c>
   20940:	ldr	r3, [fp, #-12]
   20944:	mov	r2, #0
   20948:	str	r2, [r3, #8]
   2094c:	mov	r2, #1
   20950:	ldr	r1, [fp, #-16]
   20954:	ldr	r0, [fp, #-8]
   20958:	bl	4bf8 <rb_radixtree_elem_find@plt>
   2095c:	mov	r2, r0
   20960:	ldr	r3, [fp, #-12]
   20964:	str	r2, [r3, #12]
   20968:	ldr	r1, [fp, #-12]
   2096c:	ldr	r0, [fp, #-8]
   20970:	bl	44b4 <rb_radixtree_foreach_next@plt>
   20974:	b	20984 <rb_radixtree_foreach_start_from+0x68>
   20978:	ldr	r1, [fp, #-12]
   2097c:	ldr	r0, [fp, #-8]
   20980:	bl	4478 <rb_radixtree_foreach_start@plt>
   20984:	nop			; (mov r0, r0)
   20988:	sub	sp, fp, #4
   2098c:	pop	{fp, pc}

00020990 <rb_radixtree_elem_add>:
   20990:	push	{fp, lr}
   20994:	add	fp, sp, #4
   20998:	sub	sp, sp, #56	; 0x38
   2099c:	str	r0, [fp, #-48]	; 0xffffffd0
   209a0:	str	r1, [fp, #-52]	; 0xffffffcc
   209a4:	str	r2, [fp, #-56]	; 0xffffffc8
   209a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   209ac:	bl	485c <strlen@plt>
   209b0:	mov	r3, r0
   209b4:	str	r3, [fp, #-32]	; 0xffffffe0
   209b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   209bc:	bl	1fee0 <rb_strdup>
   209c0:	str	r0, [fp, #-36]	; 0xffffffdc
   209c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   209c8:	cmp	r3, #0
   209cc:	bne	209d8 <rb_radixtree_elem_add+0x48>
   209d0:	mov	r3, #0
   209d4:	b	21164 <rb_radixtree_elem_add+0x7d4>
   209d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   209dc:	ldr	r3, [r3]
   209e0:	cmp	r3, #0
   209e4:	beq	209f8 <rb_radixtree_elem_add+0x68>
   209e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   209ec:	ldr	r3, [r3]
   209f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   209f4:	blx	r3
   209f8:	mov	r3, #0
   209fc:	str	r3, [fp, #-12]
   20a00:	mov	r3, #18
   20a04:	str	r3, [fp, #-20]	; 0xffffffec
   20a08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20a0c:	ldr	r3, [r3, #4]
   20a10:	str	r3, [fp, #-8]
   20a14:	b	20abc <rb_radixtree_elem_add+0x12c>
   20a18:	ldr	r3, [fp, #-8]
   20a1c:	str	r3, [fp, #-12]
   20a20:	ldr	r3, [fp, #-8]
   20a24:	ldr	r3, [r3]
   20a28:	lsr	r2, r3, #31
   20a2c:	add	r3, r2, r3
   20a30:	asr	r3, r3, #1
   20a34:	mov	r2, r3
   20a38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20a3c:	cmp	r2, r3
   20a40:	bge	20a9c <rb_radixtree_elem_add+0x10c>
   20a44:	ldr	r3, [fp, #-8]
   20a48:	ldr	r3, [r3]
   20a4c:	lsr	r2, r3, #31
   20a50:	add	r3, r2, r3
   20a54:	asr	r3, r3, #1
   20a58:	mov	r2, r3
   20a5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20a60:	add	r3, r3, r2
   20a64:	ldrb	r3, [r3]
   20a68:	mov	r2, r3
   20a6c:	ldr	r3, [fp, #-8]
   20a70:	ldr	r3, [r3]
   20a74:	and	r3, r3, #1
   20a78:	cmp	r3, #0
   20a7c:	beq	20a88 <rb_radixtree_elem_add+0xf8>
   20a80:	mov	r3, #0
   20a84:	b	20a8c <rb_radixtree_elem_add+0xfc>
   20a88:	mov	r3, #4
   20a8c:	asr	r3, r2, r3
   20a90:	and	r3, r3, #15
   20a94:	str	r3, [fp, #-20]	; 0xffffffec
   20a98:	b	20aa4 <rb_radixtree_elem_add+0x114>
   20a9c:	mov	r3, #0
   20aa0:	str	r3, [fp, #-20]	; 0xffffffec
   20aa4:	ldr	r2, [fp, #-8]
   20aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   20aac:	lsl	r3, r3, #2
   20ab0:	add	r3, r2, r3
   20ab4:	ldr	r3, [r3, #4]
   20ab8:	str	r3, [fp, #-8]
   20abc:	ldr	r3, [fp, #-8]
   20ac0:	cmp	r3, #0
   20ac4:	beq	20ad8 <rb_radixtree_elem_add+0x148>
   20ac8:	ldr	r3, [fp, #-8]
   20acc:	ldr	r3, [r3]
   20ad0:	cmn	r3, #1
   20ad4:	bne	20a18 <rb_radixtree_elem_add+0x88>
   20ad8:	ldr	r3, [fp, #-8]
   20adc:	cmp	r3, #0
   20ae0:	beq	20b14 <rb_radixtree_elem_add+0x184>
   20ae4:	ldr	r3, [fp, #-8]
   20ae8:	ldr	r3, [r3, #8]
   20aec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20af0:	mov	r0, r3
   20af4:	bl	4d6c <strcmp@plt>
   20af8:	mov	r3, r0
   20afc:	cmp	r3, #0
   20b00:	bne	20b14 <rb_radixtree_elem_add+0x184>
   20b04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20b08:	bl	1ff4c <rb_free>
   20b0c:	mov	r3, #0
   20b10:	b	21164 <rb_radixtree_elem_add+0x7d4>
   20b14:	ldr	r3, [fp, #-8]
   20b18:	cmp	r3, #0
   20b1c:	bne	20b38 <rb_radixtree_elem_add+0x1a8>
   20b20:	ldr	r3, [fp, #-12]
   20b24:	cmp	r3, #0
   20b28:	beq	20b38 <rb_radixtree_elem_add+0x1a8>
   20b2c:	ldr	r0, [fp, #-12]
   20b30:	bl	1ff8c <first_leaf>
   20b34:	str	r0, [fp, #-8]
   20b38:	ldr	r3, [fp, #-8]
   20b3c:	cmp	r3, #0
   20b40:	bne	20bd8 <rb_radixtree_elem_add+0x248>
   20b44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20b48:	add	r3, r3, #4
   20b4c:	str	r3, [fp, #-40]	; 0xffffffd8
   20b50:	mov	r0, #20
   20b54:	bl	1fe8c <rb_malloc>
   20b58:	mov	r2, r0
   20b5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b60:	str	r2, [r3]
   20b64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b68:	ldr	r3, [r3]
   20b6c:	mvn	r2, #0
   20b70:	str	r2, [r3]
   20b74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b78:	ldr	r3, [r3]
   20b7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20b80:	str	r2, [r3, #4]
   20b84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b88:	ldr	r3, [r3]
   20b8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20b90:	str	r2, [r3, #8]
   20b94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20b98:	ldr	r3, [r3]
   20b9c:	ldr	r2, [fp, #-12]
   20ba0:	str	r2, [r3, #12]
   20ba4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20ba8:	ldr	r3, [r3]
   20bac:	ldr	r2, [fp, #-20]	; 0xffffffec
   20bb0:	uxtb	r2, r2
   20bb4:	strb	r2, [r3, #16]
   20bb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20bbc:	ldr	r3, [r3, #8]
   20bc0:	add	r2, r3, #1
   20bc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20bc8:	str	r2, [r3, #8]
   20bcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20bd0:	ldr	r3, [r3]
   20bd4:	b	21164 <rb_radixtree_elem_add+0x7d4>
   20bd8:	mov	r3, #0
   20bdc:	str	r3, [fp, #-24]	; 0xffffffe8
   20be0:	b	20bf0 <rb_radixtree_elem_add+0x260>
   20be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20be8:	add	r3, r3, #1
   20bec:	str	r3, [fp, #-24]	; 0xffffffe8
   20bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20bf4:	lsr	r2, r3, #31
   20bf8:	add	r3, r2, r3
   20bfc:	asr	r3, r3, #1
   20c00:	mov	r2, r3
   20c04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20c08:	add	r3, r3, r2
   20c0c:	ldrb	r3, [r3]
   20c10:	mov	r2, r3
   20c14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20c18:	and	r3, r3, #1
   20c1c:	cmp	r3, #0
   20c20:	beq	20c2c <rb_radixtree_elem_add+0x29c>
   20c24:	mov	r3, #0
   20c28:	b	20c30 <rb_radixtree_elem_add+0x2a0>
   20c2c:	mov	r3, #4
   20c30:	asr	r2, r2, r3
   20c34:	ldr	r3, [fp, #-8]
   20c38:	ldr	r1, [r3, #8]
   20c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20c40:	lsr	r0, r3, #31
   20c44:	add	r3, r0, r3
   20c48:	asr	r3, r3, #1
   20c4c:	add	r3, r1, r3
   20c50:	ldrb	r3, [r3]
   20c54:	mov	r1, r3
   20c58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20c5c:	and	r3, r3, #1
   20c60:	cmp	r3, #0
   20c64:	beq	20c70 <rb_radixtree_elem_add+0x2e0>
   20c68:	mov	r3, #0
   20c6c:	b	20c74 <rb_radixtree_elem_add+0x2e4>
   20c70:	mov	r3, #4
   20c74:	asr	r3, r1, r3
   20c78:	eor	r3, r3, r2
   20c7c:	and	r3, r3, #15
   20c80:	cmp	r3, #0
   20c84:	beq	20be4 <rb_radixtree_elem_add+0x254>
   20c88:	b	20ca4 <rb_radixtree_elem_add+0x314>
   20c8c:	ldr	r3, [fp, #-12]
   20c90:	ldrb	r3, [r3, #72]	; 0x48
   20c94:	str	r3, [fp, #-20]	; 0xffffffec
   20c98:	ldr	r3, [fp, #-12]
   20c9c:	ldr	r3, [r3, #68]	; 0x44
   20ca0:	str	r3, [fp, #-12]
   20ca4:	ldr	r3, [fp, #-12]
   20ca8:	cmp	r3, #0
   20cac:	beq	20cc4 <rb_radixtree_elem_add+0x334>
   20cb0:	ldr	r3, [fp, #-12]
   20cb4:	ldr	r2, [r3]
   20cb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20cbc:	cmp	r2, r3
   20cc0:	bgt	20c8c <rb_radixtree_elem_add+0x2fc>
   20cc4:	ldr	r3, [fp, #-12]
   20cc8:	cmp	r3, #0
   20ccc:	beq	20ce4 <rb_radixtree_elem_add+0x354>
   20cd0:	ldr	r3, [fp, #-12]
   20cd4:	ldr	r2, [r3]
   20cd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20cdc:	cmp	r2, r3
   20ce0:	bge	21074 <rb_radixtree_elem_add+0x6e4>
   20ce4:	mov	r0, #76	; 0x4c
   20ce8:	bl	1fe8c <rb_malloc>
   20cec:	str	r0, [fp, #-16]
   20cf0:	ldr	r3, [fp, #-16]
   20cf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20cf8:	str	r2, [r3]
   20cfc:	ldr	r3, [fp, #-16]
   20d00:	ldr	r2, [fp, #-12]
   20d04:	str	r2, [r3, #68]	; 0x44
   20d08:	ldr	r3, [fp, #-20]	; 0xffffffec
   20d0c:	uxtb	r2, r3
   20d10:	ldr	r3, [fp, #-16]
   20d14:	strb	r2, [r3, #72]	; 0x48
   20d18:	mov	r3, #0
   20d1c:	str	r3, [fp, #-28]	; 0xffffffe4
   20d20:	b	20d48 <rb_radixtree_elem_add+0x3b8>
   20d24:	ldr	r2, [fp, #-16]
   20d28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20d2c:	lsl	r3, r3, #2
   20d30:	add	r3, r2, r3
   20d34:	mov	r2, #0
   20d38:	str	r2, [r3, #4]
   20d3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20d40:	add	r3, r3, #1
   20d44:	str	r3, [fp, #-28]	; 0xffffffe4
   20d48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20d4c:	cmp	r3, #15
   20d50:	ble	20d24 <rb_radixtree_elem_add+0x394>
   20d54:	ldr	r3, [fp, #-12]
   20d58:	cmp	r3, #0
   20d5c:	bne	20ec0 <rb_radixtree_elem_add+0x530>
   20d60:	ldr	r3, [fp, #-8]
   20d64:	ldr	r2, [r3, #8]
   20d68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20d6c:	lsr	r1, r3, #31
   20d70:	add	r3, r1, r3
   20d74:	asr	r3, r3, #1
   20d78:	add	r3, r2, r3
   20d7c:	ldrb	r3, [r3]
   20d80:	mov	r2, r3
   20d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20d88:	and	r3, r3, #1
   20d8c:	cmp	r3, #0
   20d90:	beq	20d9c <rb_radixtree_elem_add+0x40c>
   20d94:	mov	r3, #0
   20d98:	b	20da0 <rb_radixtree_elem_add+0x410>
   20d9c:	mov	r3, #4
   20da0:	asr	r3, r2, r3
   20da4:	and	r3, r3, #15
   20da8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   20dac:	ldr	r2, [r2, #4]
   20db0:	ldr	r1, [fp, #-16]
   20db4:	lsl	r3, r3, #2
   20db8:	add	r3, r1, r3
   20dbc:	str	r2, [r3, #4]
   20dc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20dc4:	ldr	r3, [r3, #4]
   20dc8:	ldr	r3, [r3]
   20dcc:	cmn	r3, #1
   20dd0:	bne	20e44 <rb_radixtree_elem_add+0x4b4>
   20dd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20dd8:	ldr	r3, [r3, #4]
   20ddc:	ldr	r2, [fp, #-16]
   20de0:	str	r2, [r3, #12]
   20de4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20de8:	ldr	r2, [r3, #4]
   20dec:	ldr	r3, [fp, #-8]
   20df0:	ldr	r1, [r3, #8]
   20df4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20df8:	lsr	r0, r3, #31
   20dfc:	add	r3, r0, r3
   20e00:	asr	r3, r3, #1
   20e04:	add	r3, r1, r3
   20e08:	ldrb	r3, [r3]
   20e0c:	mov	r1, r3
   20e10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20e14:	and	r3, r3, #1
   20e18:	cmp	r3, #0
   20e1c:	beq	20e28 <rb_radixtree_elem_add+0x498>
   20e20:	mov	r3, #0
   20e24:	b	20e2c <rb_radixtree_elem_add+0x49c>
   20e28:	mov	r3, #4
   20e2c:	asr	r3, r1, r3
   20e30:	uxtb	r3, r3
   20e34:	and	r3, r3, #15
   20e38:	uxtb	r3, r3
   20e3c:	strb	r3, [r2, #16]
   20e40:	b	20eb0 <rb_radixtree_elem_add+0x520>
   20e44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20e48:	ldr	r3, [r3, #4]
   20e4c:	ldr	r2, [fp, #-16]
   20e50:	str	r2, [r3, #68]	; 0x44
   20e54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20e58:	ldr	r2, [r3, #4]
   20e5c:	ldr	r3, [fp, #-8]
   20e60:	ldr	r1, [r3, #8]
   20e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20e68:	lsr	r0, r3, #31
   20e6c:	add	r3, r0, r3
   20e70:	asr	r3, r3, #1
   20e74:	add	r3, r1, r3
   20e78:	ldrb	r3, [r3]
   20e7c:	mov	r1, r3
   20e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20e84:	and	r3, r3, #1
   20e88:	cmp	r3, #0
   20e8c:	beq	20e98 <rb_radixtree_elem_add+0x508>
   20e90:	mov	r3, #0
   20e94:	b	20e9c <rb_radixtree_elem_add+0x50c>
   20e98:	mov	r3, #4
   20e9c:	asr	r3, r1, r3
   20ea0:	uxtb	r3, r3
   20ea4:	and	r3, r3, #15
   20ea8:	uxtb	r3, r3
   20eac:	strb	r3, [r2, #72]	; 0x48
   20eb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20eb4:	ldr	r2, [fp, #-16]
   20eb8:	str	r2, [r3, #4]
   20ebc:	b	2107c <rb_radixtree_elem_add+0x6ec>
   20ec0:	ldr	r3, [fp, #-8]
   20ec4:	ldr	r2, [r3, #8]
   20ec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ecc:	lsr	r1, r3, #31
   20ed0:	add	r3, r1, r3
   20ed4:	asr	r3, r3, #1
   20ed8:	add	r3, r2, r3
   20edc:	ldrb	r3, [r3]
   20ee0:	mov	r2, r3
   20ee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ee8:	and	r3, r3, #1
   20eec:	cmp	r3, #0
   20ef0:	beq	20efc <rb_radixtree_elem_add+0x56c>
   20ef4:	mov	r3, #0
   20ef8:	b	20f00 <rb_radixtree_elem_add+0x570>
   20efc:	mov	r3, #4
   20f00:	asr	r3, r2, r3
   20f04:	and	r0, r3, #15
   20f08:	ldr	r2, [fp, #-12]
   20f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f10:	lsl	r3, r3, #2
   20f14:	add	r3, r2, r3
   20f18:	ldr	r2, [r3, #4]
   20f1c:	ldr	r1, [fp, #-16]
   20f20:	lsl	r3, r0, #2
   20f24:	add	r3, r1, r3
   20f28:	str	r2, [r3, #4]
   20f2c:	ldr	r2, [fp, #-12]
   20f30:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f34:	lsl	r3, r3, #2
   20f38:	add	r3, r2, r3
   20f3c:	ldr	r3, [r3, #4]
   20f40:	ldr	r3, [r3]
   20f44:	cmn	r3, #1
   20f48:	bne	20fd4 <rb_radixtree_elem_add+0x644>
   20f4c:	ldr	r2, [fp, #-12]
   20f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f54:	lsl	r3, r3, #2
   20f58:	add	r3, r2, r3
   20f5c:	ldr	r3, [r3, #4]
   20f60:	ldr	r2, [fp, #-16]
   20f64:	str	r2, [r3, #12]
   20f68:	ldr	r2, [fp, #-12]
   20f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f70:	lsl	r3, r3, #2
   20f74:	add	r3, r2, r3
   20f78:	ldr	r2, [r3, #4]
   20f7c:	ldr	r3, [fp, #-8]
   20f80:	ldr	r1, [r3, #8]
   20f84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20f88:	lsr	r0, r3, #31
   20f8c:	add	r3, r0, r3
   20f90:	asr	r3, r3, #1
   20f94:	add	r3, r1, r3
   20f98:	ldrb	r3, [r3]
   20f9c:	mov	r1, r3
   20fa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20fa4:	and	r3, r3, #1
   20fa8:	cmp	r3, #0
   20fac:	beq	20fb8 <rb_radixtree_elem_add+0x628>
   20fb0:	mov	r3, #0
   20fb4:	b	20fbc <rb_radixtree_elem_add+0x62c>
   20fb8:	mov	r3, #4
   20fbc:	asr	r3, r1, r3
   20fc0:	uxtb	r3, r3
   20fc4:	and	r3, r3, #15
   20fc8:	uxtb	r3, r3
   20fcc:	strb	r3, [r2, #16]
   20fd0:	b	21058 <rb_radixtree_elem_add+0x6c8>
   20fd4:	ldr	r2, [fp, #-12]
   20fd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   20fdc:	lsl	r3, r3, #2
   20fe0:	add	r3, r2, r3
   20fe4:	ldr	r3, [r3, #4]
   20fe8:	ldr	r2, [fp, #-16]
   20fec:	str	r2, [r3, #68]	; 0x44
   20ff0:	ldr	r2, [fp, #-12]
   20ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   20ff8:	lsl	r3, r3, #2
   20ffc:	add	r3, r2, r3
   21000:	ldr	r2, [r3, #4]
   21004:	ldr	r3, [fp, #-8]
   21008:	ldr	r1, [r3, #8]
   2100c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21010:	lsr	r0, r3, #31
   21014:	add	r3, r0, r3
   21018:	asr	r3, r3, #1
   2101c:	add	r3, r1, r3
   21020:	ldrb	r3, [r3]
   21024:	mov	r1, r3
   21028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2102c:	and	r3, r3, #1
   21030:	cmp	r3, #0
   21034:	beq	21040 <rb_radixtree_elem_add+0x6b0>
   21038:	mov	r3, #0
   2103c:	b	21044 <rb_radixtree_elem_add+0x6b4>
   21040:	mov	r3, #4
   21044:	asr	r3, r1, r3
   21048:	uxtb	r3, r3
   2104c:	and	r3, r3, #15
   21050:	uxtb	r3, r3
   21054:	strb	r3, [r2, #72]	; 0x48
   21058:	ldr	r2, [fp, #-12]
   2105c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21060:	lsl	r3, r3, #2
   21064:	add	r3, r2, r3
   21068:	ldr	r2, [fp, #-16]
   2106c:	str	r2, [r3, #4]
   21070:	b	2107c <rb_radixtree_elem_add+0x6ec>
   21074:	ldr	r3, [fp, #-12]
   21078:	str	r3, [fp, #-16]
   2107c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21080:	lsr	r2, r3, #31
   21084:	add	r3, r2, r3
   21088:	asr	r3, r3, #1
   2108c:	mov	r2, r3
   21090:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21094:	add	r3, r3, r2
   21098:	ldrb	r3, [r3]
   2109c:	mov	r2, r3
   210a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   210a4:	and	r3, r3, #1
   210a8:	cmp	r3, #0
   210ac:	beq	210b8 <rb_radixtree_elem_add+0x728>
   210b0:	mov	r3, #0
   210b4:	b	210bc <rb_radixtree_elem_add+0x72c>
   210b8:	mov	r3, #4
   210bc:	asr	r3, r2, r3
   210c0:	and	r3, r3, #15
   210c4:	str	r3, [fp, #-20]	; 0xffffffec
   210c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   210cc:	lsl	r3, r3, #2
   210d0:	ldr	r2, [fp, #-16]
   210d4:	add	r3, r2, r3
   210d8:	add	r3, r3, #4
   210dc:	str	r3, [fp, #-40]	; 0xffffffd8
   210e0:	mov	r0, #20
   210e4:	bl	1fe8c <rb_malloc>
   210e8:	mov	r2, r0
   210ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   210f0:	str	r2, [r3]
   210f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   210f8:	ldr	r3, [r3]
   210fc:	mvn	r2, #0
   21100:	str	r2, [r3]
   21104:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21108:	ldr	r3, [r3]
   2110c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21110:	str	r2, [r3, #4]
   21114:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21118:	ldr	r3, [r3]
   2111c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   21120:	str	r2, [r3, #8]
   21124:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21128:	ldr	r3, [r3]
   2112c:	ldr	r2, [fp, #-16]
   21130:	str	r2, [r3, #12]
   21134:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21138:	ldr	r3, [r3]
   2113c:	ldr	r2, [fp, #-20]	; 0xffffffec
   21140:	uxtb	r2, r2
   21144:	strb	r2, [r3, #16]
   21148:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2114c:	ldr	r3, [r3, #8]
   21150:	add	r2, r3, #1
   21154:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21158:	str	r2, [r3, #8]
   2115c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21160:	ldr	r3, [r3]
   21164:	mov	r0, r3
   21168:	sub	sp, fp, #4
   2116c:	pop	{fp, pc}

00021170 <rb_radixtree_add>:
   21170:	push	{fp, lr}
   21174:	add	fp, sp, #4
   21178:	sub	sp, sp, #16
   2117c:	str	r0, [fp, #-8]
   21180:	str	r1, [fp, #-12]
   21184:	str	r2, [fp, #-16]
   21188:	ldr	r2, [fp, #-16]
   2118c:	ldr	r1, [fp, #-12]
   21190:	ldr	r0, [fp, #-8]
   21194:	bl	4790 <rb_radixtree_elem_add@plt>
   21198:	mov	r3, r0
   2119c:	cmp	r3, #0
   211a0:	movne	r3, #1
   211a4:	moveq	r3, #0
   211a8:	uxtb	r3, r3
   211ac:	mov	r0, r3
   211b0:	sub	sp, fp, #4
   211b4:	pop	{fp, pc}

000211b8 <rb_radixtree_delete>:
   211b8:	push	{fp, lr}
   211bc:	add	fp, sp, #4
   211c0:	sub	sp, sp, #16
   211c4:	str	r0, [fp, #-16]
   211c8:	str	r1, [fp, #-20]	; 0xffffffec
   211cc:	mov	r2, #0
   211d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   211d4:	ldr	r0, [fp, #-16]
   211d8:	bl	4bf8 <rb_radixtree_elem_find@plt>
   211dc:	str	r0, [fp, #-8]
   211e0:	ldr	r3, [fp, #-8]
   211e4:	cmp	r3, #0
   211e8:	bne	211f4 <rb_radixtree_delete+0x3c>
   211ec:	mov	r3, #0
   211f0:	b	21210 <rb_radixtree_delete+0x58>
   211f4:	ldr	r3, [fp, #-8]
   211f8:	ldr	r3, [r3, #4]
   211fc:	str	r3, [fp, #-12]
   21200:	ldr	r1, [fp, #-8]
   21204:	ldr	r0, [fp, #-16]
   21208:	bl	4418 <rb_radixtree_elem_delete@plt>
   2120c:	ldr	r3, [fp, #-12]
   21210:	mov	r0, r3
   21214:	sub	sp, fp, #4
   21218:	pop	{fp, pc}

0002121c <rb_radixtree_elem_delete>:
   2121c:	push	{fp, lr}
   21220:	add	fp, sp, #4
   21224:	sub	sp, sp, #32
   21228:	str	r0, [fp, #-32]	; 0xffffffe0
   2122c:	str	r1, [fp, #-36]	; 0xffffffdc
   21230:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21234:	str	r3, [fp, #-16]
   21238:	ldr	r3, [fp, #-16]
   2123c:	ldrb	r3, [r3, #16]
   21240:	str	r3, [fp, #-20]	; 0xffffffec
   21244:	ldr	r3, [fp, #-16]
   21248:	ldr	r3, [r3, #12]
   2124c:	str	r3, [fp, #-24]	; 0xffffffe8
   21250:	ldr	r3, [fp, #-16]
   21254:	ldr	r3, [r3, #8]
   21258:	mov	r0, r3
   2125c:	bl	1ff4c <rb_free>
   21260:	ldr	r0, [fp, #-16]
   21264:	bl	1ff4c <rb_free>
   21268:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2126c:	cmp	r3, #0
   21270:	beq	213c0 <rb_radixtree_elem_delete+0x1a4>
   21274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21278:	ldr	r3, [fp, #-20]	; 0xffffffec
   2127c:	lsl	r3, r3, #2
   21280:	add	r3, r2, r3
   21284:	mov	r2, #0
   21288:	str	r2, [r3, #4]
   2128c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21290:	str	r3, [fp, #-16]
   21294:	mvn	r3, #0
   21298:	str	r3, [fp, #-12]
   2129c:	mov	r3, #0
   212a0:	str	r3, [fp, #-8]
   212a4:	b	212ec <rb_radixtree_elem_delete+0xd0>
   212a8:	ldr	r2, [fp, #-16]
   212ac:	ldr	r3, [fp, #-8]
   212b0:	lsl	r3, r3, #2
   212b4:	add	r3, r2, r3
   212b8:	ldr	r3, [r3, #4]
   212bc:	cmp	r3, #0
   212c0:	beq	212e0 <rb_radixtree_elem_delete+0xc4>
   212c4:	ldr	r3, [fp, #-12]
   212c8:	cmn	r3, #1
   212cc:	bne	212d8 <rb_radixtree_elem_delete+0xbc>
   212d0:	ldr	r3, [fp, #-8]
   212d4:	b	212dc <rb_radixtree_elem_delete+0xc0>
   212d8:	mvn	r3, #1
   212dc:	str	r3, [fp, #-12]
   212e0:	ldr	r3, [fp, #-8]
   212e4:	add	r3, r3, #1
   212e8:	str	r3, [fp, #-8]
   212ec:	ldr	r3, [fp, #-8]
   212f0:	cmp	r3, #15
   212f4:	ble	212a8 <rb_radixtree_elem_delete+0x8c>
   212f8:	ldr	r3, [fp, #-12]
   212fc:	cmp	r3, #0
   21300:	blt	213cc <rb_radixtree_elem_delete+0x1b0>
   21304:	ldr	r2, [fp, #-16]
   21308:	ldr	r3, [fp, #-12]
   2130c:	lsl	r3, r3, #2
   21310:	add	r3, r2, r3
   21314:	ldr	r3, [r3, #4]
   21318:	str	r3, [fp, #-28]	; 0xffffffe4
   2131c:	ldr	r3, [fp, #-16]
   21320:	ldrb	r3, [r3, #72]	; 0x48
   21324:	str	r3, [fp, #-20]	; 0xffffffec
   21328:	ldr	r3, [fp, #-16]
   2132c:	ldr	r3, [r3, #68]	; 0x44
   21330:	str	r3, [fp, #-24]	; 0xffffffe8
   21334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21338:	cmp	r3, #0
   2133c:	beq	2135c <rb_radixtree_elem_delete+0x140>
   21340:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21344:	ldr	r3, [fp, #-20]	; 0xffffffec
   21348:	lsl	r3, r3, #2
   2134c:	add	r3, r2, r3
   21350:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21354:	str	r2, [r3, #4]
   21358:	b	21368 <rb_radixtree_elem_delete+0x14c>
   2135c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21360:	ldr	r2, [fp, #-28]	; 0xffffffe4
   21364:	str	r2, [r3, #4]
   21368:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2136c:	ldr	r3, [r3]
   21370:	cmn	r3, #1
   21374:	bne	21398 <rb_radixtree_elem_delete+0x17c>
   21378:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2137c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21380:	str	r2, [r3, #12]
   21384:	ldr	r3, [fp, #-20]	; 0xffffffec
   21388:	uxtb	r2, r3
   2138c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21390:	strb	r2, [r3, #16]
   21394:	b	213b4 <rb_radixtree_elem_delete+0x198>
   21398:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2139c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   213a0:	str	r2, [r3, #68]	; 0x44
   213a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   213a8:	uxtb	r2, r3
   213ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   213b0:	strb	r2, [r3, #72]	; 0x48
   213b4:	ldr	r0, [fp, #-16]
   213b8:	bl	1ff4c <rb_free>
   213bc:	b	213cc <rb_radixtree_elem_delete+0x1b0>
   213c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   213c4:	mov	r2, #0
   213c8:	str	r2, [r3, #4]
   213cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   213d0:	ldr	r3, [r3, #8]
   213d4:	sub	r2, r3, #1
   213d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   213dc:	str	r2, [r3, #8]
   213e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   213e4:	ldr	r3, [r3, #8]
   213e8:	cmp	r3, #0
   213ec:	bne	213fc <rb_radixtree_elem_delete+0x1e0>
   213f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   213f4:	mov	r2, #0
   213f8:	str	r2, [r3, #4]
   213fc:	nop			; (mov r0, r0)
   21400:	sub	sp, fp, #4
   21404:	pop	{fp, pc}

00021408 <rb_radixtree_retrieve>:
   21408:	push	{fp, lr}
   2140c:	add	fp, sp, #4
   21410:	sub	sp, sp, #16
   21414:	str	r0, [fp, #-16]
   21418:	str	r1, [fp, #-20]	; 0xffffffec
   2141c:	mov	r2, #0
   21420:	ldr	r1, [fp, #-20]	; 0xffffffec
   21424:	ldr	r0, [fp, #-16]
   21428:	bl	4bf8 <rb_radixtree_elem_find@plt>
   2142c:	str	r0, [fp, #-8]
   21430:	ldr	r3, [fp, #-8]
   21434:	cmp	r3, #0
   21438:	beq	21448 <rb_radixtree_retrieve+0x40>
   2143c:	ldr	r3, [fp, #-8]
   21440:	ldr	r3, [r3, #4]
   21444:	b	2144c <rb_radixtree_retrieve+0x44>
   21448:	mov	r3, #0
   2144c:	mov	r0, r3
   21450:	sub	sp, fp, #4
   21454:	pop	{fp, pc}

00021458 <rb_radixtree_elem_get_key>:
   21458:	push	{fp}		; (str fp, [sp, #-4]!)
   2145c:	add	fp, sp, #0
   21460:	sub	sp, sp, #12
   21464:	str	r0, [fp, #-8]
   21468:	ldr	r3, [fp, #-8]
   2146c:	ldr	r3, [r3, #8]
   21470:	mov	r0, r3
   21474:	add	sp, fp, #0
   21478:	pop	{fp}		; (ldr fp, [sp], #4)
   2147c:	bx	lr

00021480 <rb_radixtree_elem_set_data>:
   21480:	push	{fp}		; (str fp, [sp, #-4]!)
   21484:	add	fp, sp, #0
   21488:	sub	sp, sp, #12
   2148c:	str	r0, [fp, #-8]
   21490:	str	r1, [fp, #-12]
   21494:	ldr	r3, [fp, #-8]
   21498:	ldr	r2, [fp, #-12]
   2149c:	str	r2, [r3, #4]
   214a0:	nop			; (mov r0, r0)
   214a4:	add	sp, fp, #0
   214a8:	pop	{fp}		; (ldr fp, [sp], #4)
   214ac:	bx	lr

000214b0 <rb_radixtree_elem_get_data>:
   214b0:	push	{fp}		; (str fp, [sp, #-4]!)
   214b4:	add	fp, sp, #0
   214b8:	sub	sp, sp, #12
   214bc:	str	r0, [fp, #-8]
   214c0:	ldr	r3, [fp, #-8]
   214c4:	ldr	r3, [r3, #4]
   214c8:	mov	r0, r3
   214cc:	add	sp, fp, #0
   214d0:	pop	{fp}		; (ldr fp, [sp], #4)
   214d4:	bx	lr

000214d8 <rb_radixtree_size>:
   214d8:	push	{fp}		; (str fp, [sp, #-4]!)
   214dc:	add	fp, sp, #0
   214e0:	sub	sp, sp, #12
   214e4:	str	r0, [fp, #-8]
   214e8:	ldr	r3, [fp, #-8]
   214ec:	ldr	r3, [r3, #8]
   214f0:	mov	r0, r3
   214f4:	add	sp, fp, #0
   214f8:	pop	{fp}		; (ldr fp, [sp], #4)
   214fc:	bx	lr

00021500 <stats_recurse>:
   21500:	push	{fp, lr}
   21504:	add	fp, sp, #4
   21508:	sub	sp, sp, #32
   2150c:	str	r0, [fp, #-24]	; 0xffffffe8
   21510:	str	r1, [fp, #-28]	; 0xffffffe4
   21514:	str	r2, [fp, #-32]	; 0xffffffe0
   21518:	mov	r3, #0
   2151c:	str	r3, [fp, #-8]
   21520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21524:	ldr	r2, [r3]
   21528:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2152c:	cmp	r2, r3
   21530:	bge	21540 <stats_recurse+0x40>
   21534:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21538:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2153c:	str	r2, [r3]
   21540:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21544:	cmp	r3, #0
   21548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2154c:	ldr	r3, [r3]
   21550:	cmn	r3, #1
   21554:	bne	21560 <stats_recurse+0x60>
   21558:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2155c:	b	215dc <stats_recurse+0xdc>
   21560:	mov	r3, #0
   21564:	str	r3, [fp, #-12]
   21568:	b	215cc <stats_recurse+0xcc>
   2156c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21570:	ldr	r3, [fp, #-12]
   21574:	lsl	r3, r3, #2
   21578:	add	r3, r2, r3
   2157c:	ldr	r3, [r3, #4]
   21580:	str	r3, [fp, #-16]
   21584:	ldr	r3, [fp, #-16]
   21588:	cmp	r3, #0
   2158c:	beq	215bc <stats_recurse+0xbc>
   21590:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21594:	add	r3, r3, #1
   21598:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2159c:	mov	r1, r3
   215a0:	ldr	r0, [fp, #-16]
   215a4:	bl	21500 <stats_recurse>
   215a8:	mov	r2, r0
   215ac:	ldr	r3, [fp, #-8]
   215b0:	add	r3, r3, r2
   215b4:	str	r3, [fp, #-8]
   215b8:	b	215c0 <stats_recurse+0xc0>
   215bc:	nop			; (mov r0, r0)
   215c0:	ldr	r3, [fp, #-12]
   215c4:	add	r3, r3, #1
   215c8:	str	r3, [fp, #-12]
   215cc:	ldr	r3, [fp, #-12]
   215d0:	cmp	r3, #15
   215d4:	ble	2156c <stats_recurse+0x6c>
   215d8:	ldr	r3, [fp, #-8]
   215dc:	mov	r0, r3
   215e0:	sub	sp, fp, #4
   215e4:	pop	{fp, pc}

000215e8 <rb_radixtree_stats>:
   215e8:	push	{r4, r5, fp, lr}
   215ec:	add	fp, sp, #12
   215f0:	sub	sp, sp, #304	; 0x130
   215f4:	str	r0, [fp, #-280]	; 0xfffffee8
   215f8:	str	r1, [fp, #-284]	; 0xfffffee4
   215fc:	str	r2, [fp, #-288]	; 0xfffffee0
   21600:	mov	r3, #0
   21604:	str	r3, [fp, #-276]	; 0xfffffeec
   21608:	ldr	r3, [fp, #-280]	; 0xfffffee8
   2160c:	ldr	r3, [r3, #8]
   21610:	cmp	r3, #0
   21614:	beq	216a4 <rb_radixtree_stats+0xbc>
   21618:	ldr	r3, [fp, #-280]	; 0xfffffee8
   2161c:	ldr	r3, [r3, #4]
   21620:	sub	r2, fp, #276	; 0x114
   21624:	mov	r1, #0
   21628:	mov	r0, r3
   2162c:	bl	21500 <stats_recurse>
   21630:	str	r0, [fp, #-16]
   21634:	ldr	r3, [fp, #-280]	; 0xfffffee8
   21638:	ldr	r5, [r3, #12]
   2163c:	ldr	r3, [fp, #-280]	; 0xfffffee8
   21640:	ldr	r4, [r3, #8]
   21644:	ldr	r2, [fp, #-16]
   21648:	ldr	r3, [fp, #-280]	; 0xfffffee8
   2164c:	ldr	r3, [r3, #8]
   21650:	mov	r1, r3
   21654:	mov	r0, r2
   21658:	bl	217b0 <__udivsi3>
   2165c:	mov	r3, r0
   21660:	mov	r2, r3
   21664:	ldr	r3, [fp, #-276]	; 0xfffffeec
   21668:	sub	r0, fp, #272	; 0x110
   2166c:	str	r3, [sp, #16]
   21670:	str	r2, [sp, #12]
   21674:	ldr	r3, [fp, #-16]
   21678:	str	r3, [sp, #8]
   2167c:	str	r4, [sp, #4]
   21680:	ldr	r3, [pc, #148]	; 2171c <rb_radixtree_stats+0x134>
   21684:	add	r3, pc, r3
   21688:	str	r3, [sp]
   2168c:	mov	r3, r5
   21690:	ldr	r2, [pc, #136]	; 21720 <rb_radixtree_stats+0x138>
   21694:	add	r2, pc, r2
   21698:	mov	r1, #256	; 0x100
   2169c:	bl	4c34 <snprintf@plt>
   216a0:	b	216fc <rb_radixtree_stats+0x114>
   216a4:	ldr	r3, [fp, #-280]	; 0xfffffee8
   216a8:	ldr	r3, [r3, #12]
   216ac:	sub	r0, fp, #272	; 0x110
   216b0:	ldr	r2, [pc, #108]	; 21724 <rb_radixtree_stats+0x13c>
   216b4:	add	r2, pc, r2
   216b8:	str	r2, [sp, #16]
   216bc:	ldr	r2, [pc, #100]	; 21728 <rb_radixtree_stats+0x140>
   216c0:	add	r2, pc, r2
   216c4:	str	r2, [sp, #12]
   216c8:	ldr	r2, [pc, #92]	; 2172c <rb_radixtree_stats+0x144>
   216cc:	add	r2, pc, r2
   216d0:	str	r2, [sp, #8]
   216d4:	ldr	r2, [pc, #84]	; 21730 <rb_radixtree_stats+0x148>
   216d8:	add	r2, pc, r2
   216dc:	str	r2, [sp, #4]
   216e0:	ldr	r2, [pc, #76]	; 21734 <rb_radixtree_stats+0x14c>
   216e4:	add	r2, pc, r2
   216e8:	str	r2, [sp]
   216ec:	ldr	r2, [pc, #68]	; 21738 <rb_radixtree_stats+0x150>
   216f0:	add	r2, pc, r2
   216f4:	mov	r1, #256	; 0x100
   216f8:	bl	4c34 <snprintf@plt>
   216fc:	sub	r2, fp, #272	; 0x110
   21700:	ldr	r3, [fp, #-284]	; 0xfffffee4
   21704:	ldr	r1, [fp, #-288]	; 0xfffffee0
   21708:	mov	r0, r2
   2170c:	blx	r3
   21710:	nop			; (mov r0, r0)
   21714:	sub	sp, fp, #12
   21718:	pop	{r4, r5, fp, pc}
   2171c:	.word	0x000020d0
   21720:	.word	0x0000209c
   21724:	.word	0x000020cc
   21728:	.word	0x000020c0
   2172c:	.word	0x000020b4
   21730:	.word	0x000020a8
   21734:	.word	0x00002070
   21738:	.word	0x0000206c

0002173c <rb_radixtree_stats_walk>:
   2173c:	push	{fp, lr}
   21740:	add	fp, sp, #4
   21744:	sub	sp, sp, #16
   21748:	str	r0, [fp, #-16]
   2174c:	str	r1, [fp, #-20]	; 0xffffffec
   21750:	ldr	r2, [pc, #80]	; 217a8 <rb_radixtree_stats_walk+0x6c>
   21754:	add	r2, pc, r2
   21758:	ldr	r3, [pc, #76]	; 217ac <rb_radixtree_stats_walk+0x70>
   2175c:	ldr	r3, [r2, r3]
   21760:	ldr	r3, [r3]
   21764:	str	r3, [fp, #-8]
   21768:	b	21790 <rb_radixtree_stats_walk+0x54>
   2176c:	ldr	r3, [fp, #-8]
   21770:	ldr	r3, [r3]
   21774:	ldr	r2, [fp, #-20]	; 0xffffffec
   21778:	ldr	r1, [fp, #-16]
   2177c:	mov	r0, r3
   21780:	bl	46ac <rb_radixtree_stats@plt>
   21784:	ldr	r3, [fp, #-8]
   21788:	ldr	r3, [r3, #8]
   2178c:	str	r3, [fp, #-8]
   21790:	ldr	r3, [fp, #-8]
   21794:	cmp	r3, #0
   21798:	bne	2176c <rb_radixtree_stats_walk+0x30>
   2179c:	nop			; (mov r0, r0)
   217a0:	sub	sp, fp, #4
   217a4:	pop	{fp, pc}
   217a8:	.word	0x000128a4
   217ac:	.word	0x00000400

000217b0 <__udivsi3>:
   217b0:	subs	r2, r1, #1
   217b4:	bxeq	lr
   217b8:	bcc	21990 <__udivsi3+0x1e0>
   217bc:	cmp	r0, r1
   217c0:	bls	21974 <__udivsi3+0x1c4>
   217c4:	tst	r1, r2
   217c8:	beq	21980 <__udivsi3+0x1d0>
   217cc:	clz	r3, r0
   217d0:	clz	r2, r1
   217d4:	sub	r3, r2, r3
   217d8:	rsbs	r3, r3, #31
   217dc:	addne	r3, r3, r3, lsl #1
   217e0:	mov	r2, #0
   217e4:	addne	pc, pc, r3, lsl #2
   217e8:	nop			; (mov r0, r0)
   217ec:	cmp	r0, r1, lsl #31
   217f0:	adc	r2, r2, r2
   217f4:	subcs	r0, r0, r1, lsl #31
   217f8:	cmp	r0, r1, lsl #30
   217fc:	adc	r2, r2, r2
   21800:	subcs	r0, r0, r1, lsl #30
   21804:	cmp	r0, r1, lsl #29
   21808:	adc	r2, r2, r2
   2180c:	subcs	r0, r0, r1, lsl #29
   21810:	cmp	r0, r1, lsl #28
   21814:	adc	r2, r2, r2
   21818:	subcs	r0, r0, r1, lsl #28
   2181c:	cmp	r0, r1, lsl #27
   21820:	adc	r2, r2, r2
   21824:	subcs	r0, r0, r1, lsl #27
   21828:	cmp	r0, r1, lsl #26
   2182c:	adc	r2, r2, r2
   21830:	subcs	r0, r0, r1, lsl #26
   21834:	cmp	r0, r1, lsl #25
   21838:	adc	r2, r2, r2
   2183c:	subcs	r0, r0, r1, lsl #25
   21840:	cmp	r0, r1, lsl #24
   21844:	adc	r2, r2, r2
   21848:	subcs	r0, r0, r1, lsl #24
   2184c:	cmp	r0, r1, lsl #23
   21850:	adc	r2, r2, r2
   21854:	subcs	r0, r0, r1, lsl #23
   21858:	cmp	r0, r1, lsl #22
   2185c:	adc	r2, r2, r2
   21860:	subcs	r0, r0, r1, lsl #22
   21864:	cmp	r0, r1, lsl #21
   21868:	adc	r2, r2, r2
   2186c:	subcs	r0, r0, r1, lsl #21
   21870:	cmp	r0, r1, lsl #20
   21874:	adc	r2, r2, r2
   21878:	subcs	r0, r0, r1, lsl #20
   2187c:	cmp	r0, r1, lsl #19
   21880:	adc	r2, r2, r2
   21884:	subcs	r0, r0, r1, lsl #19
   21888:	cmp	r0, r1, lsl #18
   2188c:	adc	r2, r2, r2
   21890:	subcs	r0, r0, r1, lsl #18
   21894:	cmp	r0, r1, lsl #17
   21898:	adc	r2, r2, r2
   2189c:	subcs	r0, r0, r1, lsl #17
   218a0:	cmp	r0, r1, lsl #16
   218a4:	adc	r2, r2, r2
   218a8:	subcs	r0, r0, r1, lsl #16
   218ac:	cmp	r0, r1, lsl #15
   218b0:	adc	r2, r2, r2
   218b4:	subcs	r0, r0, r1, lsl #15
   218b8:	cmp	r0, r1, lsl #14
   218bc:	adc	r2, r2, r2
   218c0:	subcs	r0, r0, r1, lsl #14
   218c4:	cmp	r0, r1, lsl #13
   218c8:	adc	r2, r2, r2
   218cc:	subcs	r0, r0, r1, lsl #13
   218d0:	cmp	r0, r1, lsl #12
   218d4:	adc	r2, r2, r2
   218d8:	subcs	r0, r0, r1, lsl #12
   218dc:	cmp	r0, r1, lsl #11
   218e0:	adc	r2, r2, r2
   218e4:	subcs	r0, r0, r1, lsl #11
   218e8:	cmp	r0, r1, lsl #10
   218ec:	adc	r2, r2, r2
   218f0:	subcs	r0, r0, r1, lsl #10
   218f4:	cmp	r0, r1, lsl #9
   218f8:	adc	r2, r2, r2
   218fc:	subcs	r0, r0, r1, lsl #9
   21900:	cmp	r0, r1, lsl #8
   21904:	adc	r2, r2, r2
   21908:	subcs	r0, r0, r1, lsl #8
   2190c:	cmp	r0, r1, lsl #7
   21910:	adc	r2, r2, r2
   21914:	subcs	r0, r0, r1, lsl #7
   21918:	cmp	r0, r1, lsl #6
   2191c:	adc	r2, r2, r2
   21920:	subcs	r0, r0, r1, lsl #6
   21924:	cmp	r0, r1, lsl #5
   21928:	adc	r2, r2, r2
   2192c:	subcs	r0, r0, r1, lsl #5
   21930:	cmp	r0, r1, lsl #4
   21934:	adc	r2, r2, r2
   21938:	subcs	r0, r0, r1, lsl #4
   2193c:	cmp	r0, r1, lsl #3
   21940:	adc	r2, r2, r2
   21944:	subcs	r0, r0, r1, lsl #3
   21948:	cmp	r0, r1, lsl #2
   2194c:	adc	r2, r2, r2
   21950:	subcs	r0, r0, r1, lsl #2
   21954:	cmp	r0, r1, lsl #1
   21958:	adc	r2, r2, r2
   2195c:	subcs	r0, r0, r1, lsl #1
   21960:	cmp	r0, r1
   21964:	adc	r2, r2, r2
   21968:	subcs	r0, r0, r1
   2196c:	mov	r0, r2
   21970:	bx	lr
   21974:	moveq	r0, #1
   21978:	movne	r0, #0
   2197c:	bx	lr
   21980:	clz	r2, r1
   21984:	rsb	r2, r2, #31
   21988:	lsr	r0, r0, r2
   2198c:	bx	lr
   21990:	cmp	r0, #0
   21994:	mvnne	r0, #0
   21998:	b	219bc <__aeabi_idiv0>

0002199c <__aeabi_uidivmod>:
   2199c:	cmp	r1, #0
   219a0:	beq	21990 <__udivsi3+0x1e0>
   219a4:	push	{r0, r1, lr}
   219a8:	bl	217b0 <__udivsi3>
   219ac:	pop	{r1, r2, lr}
   219b0:	mul	r3, r2, r0
   219b4:	sub	r1, r1, r3
   219b8:	bx	lr

000219bc <__aeabi_idiv0>:
   219bc:	push	{r1, lr}
   219c0:	mov	r0, #8
   219c4:	bl	4958 <raise@plt>
   219c8:	pop	{r1, pc}

000219cc <__stat>:
   219cc:	mov	r2, r1
   219d0:	mov	r1, r0
   219d4:	mov	r0, #3
   219d8:	b	44fc <__xstat@plt>

000219dc <__fstat>:
   219dc:	mov	r2, r1
   219e0:	mov	r1, r0
   219e4:	mov	r0, #3
   219e8:	b	4be0 <__fxstat@plt>

Disassembly of section .fini:

000219ec <_fini>:
   219ec:	push	{r3, lr}
   219f0:	pop	{r3, pc}
