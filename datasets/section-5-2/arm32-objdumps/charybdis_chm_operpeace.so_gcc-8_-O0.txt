
../repos/charybdis/extensions/.libs/chm_operpeace.so:     file format elf32-littlearm


Disassembly of section .init:

00000438 <_init>:
 438:	push	{r3, lr}
 43c:	bl	4ac <call_weak_fn>
 440:	pop	{r3, pc}

Disassembly of section .plt:

00000444 <.plt>:
 444:	push	{lr}		; (str lr, [sp, #-4]!)
 448:	ldr	lr, [pc, #4]	; 454 <.plt+0x10>
 44c:	add	lr, pc, lr
 450:	ldr	pc, [lr, #8]!
 454:	.word	0x00010bac

00000458 <cflag_add@plt>:
 458:	add	ip, pc, #0, 12
 45c:	add	ip, ip, #16, 20	; 0x10000
 460:	ldr	pc, [ip, #2988]!	; 0xbac

00000464 <__cxa_finalize@plt>:
 464:	add	ip, pc, #0, 12
 468:	add	ip, ip, #16, 20	; 0x10000
 46c:	ldr	pc, [ip, #2980]!	; 0xba4

00000470 <sendto_realops_snomask@plt>:
 470:	add	ip, pc, #0, 12
 474:	add	ip, ip, #16, 20	; 0x10000
 478:	ldr	pc, [ip, #2972]!	; 0xb9c

0000047c <__gmon_start__@plt>:
 47c:	add	ip, pc, #0, 12
 480:	add	ip, ip, #16, 20	; 0x10000
 484:	ldr	pc, [ip, #2964]!	; 0xb94

00000488 <sendto_one_numeric@plt>:
 488:	add	ip, pc, #0, 12
 48c:	add	ip, ip, #16, 20	; 0x10000
 490:	ldr	pc, [ip, #2956]!	; 0xb8c

00000494 <privilegeset_in_set@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2948]!	; 0xb84

000004a0 <cflag_orphan@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2940]!	; 0xb7c

Disassembly of section .text:

000004ac <call_weak_fn>:
 4ac:	ldr	r3, [pc, #20]	; 4c8 <call_weak_fn+0x1c>
 4b0:	ldr	r2, [pc, #20]	; 4cc <call_weak_fn+0x20>
 4b4:	add	r3, pc, r3
 4b8:	ldr	r2, [r3, r2]
 4bc:	cmp	r2, #0
 4c0:	bxeq	lr
 4c4:	b	47c <__gmon_start__@plt>
 4c8:	.word	0x00010b44
 4cc:	.word	0x00000034

000004d0 <deregister_tm_clones>:
 4d0:	ldr	r0, [pc, #44]	; 504 <deregister_tm_clones+0x34>
 4d4:	ldr	r3, [pc, #44]	; 508 <deregister_tm_clones+0x38>
 4d8:	add	r0, pc, r0
 4dc:	add	r3, pc, r3
 4e0:	cmp	r3, r0
 4e4:	ldr	r3, [pc, #32]	; 50c <deregister_tm_clones+0x3c>
 4e8:	add	r3, pc, r3
 4ec:	bxeq	lr
 4f0:	ldr	r2, [pc, #24]	; 510 <deregister_tm_clones+0x40>
 4f4:	ldr	r3, [r3, r2]
 4f8:	cmp	r3, #0
 4fc:	bxeq	lr
 500:	bx	r3
 504:	.word	0x00010ba0
 508:	.word	0x00010b9c
 50c:	.word	0x00010b10
 510:	.word	0x0000002c

00000514 <register_tm_clones>:
 514:	ldr	r0, [pc, #56]	; 554 <register_tm_clones+0x40>
 518:	ldr	r3, [pc, #56]	; 558 <register_tm_clones+0x44>
 51c:	add	r0, pc, r0
 520:	add	r3, pc, r3
 524:	sub	r1, r3, r0
 528:	ldr	r3, [pc, #44]	; 55c <register_tm_clones+0x48>
 52c:	asr	r1, r1, #2
 530:	add	r3, pc, r3
 534:	add	r1, r1, r1, lsr #31
 538:	asrs	r1, r1, #1
 53c:	bxeq	lr
 540:	ldr	r2, [pc, #24]	; 560 <register_tm_clones+0x4c>
 544:	ldr	r3, [r3, r2]
 548:	cmp	r3, #0
 54c:	bxeq	lr
 550:	bx	r3
 554:	.word	0x00010b5c
 558:	.word	0x00010b58
 55c:	.word	0x00010ac8
 560:	.word	0x00000038

00000564 <__do_global_dtors_aux>:
 564:	ldr	r3, [pc, #76]	; 5b8 <__do_global_dtors_aux+0x54>
 568:	ldr	r2, [pc, #76]	; 5bc <__do_global_dtors_aux+0x58>
 56c:	add	r3, pc, r3
 570:	add	r2, pc, r2
 574:	ldrb	r3, [r3]
 578:	cmp	r3, #0
 57c:	bxne	lr
 580:	ldr	r3, [pc, #56]	; 5c0 <__do_global_dtors_aux+0x5c>
 584:	push	{r4, lr}
 588:	ldr	r3, [r2, r3]
 58c:	cmp	r3, #0
 590:	beq	5a0 <__do_global_dtors_aux+0x3c>
 594:	ldr	r3, [pc, #40]	; 5c4 <__do_global_dtors_aux+0x60>
 598:	ldr	r0, [pc, r3]
 59c:	bl	464 <__cxa_finalize@plt>
 5a0:	bl	4d0 <deregister_tm_clones>
 5a4:	ldr	r3, [pc, #28]	; 5c8 <__do_global_dtors_aux+0x64>
 5a8:	mov	r2, #1
 5ac:	add	r3, pc, r3
 5b0:	strb	r2, [r3]
 5b4:	pop	{r4, pc}
 5b8:	.word	0x00010b0c
 5bc:	.word	0x00010a88
 5c0:	.word	0x00000028
 5c4:	.word	0x00010a9c
 5c8:	.word	0x00010acc

000005cc <frame_dummy>:
 5cc:	b	514 <register_tm_clones>

000005d0 <_modinit>:
 5d0:	str	fp, [sp, #-8]!
 5d4:	str	lr, [sp, #4]
 5d8:	add	fp, sp, #4
 5dc:	ldr	r2, [pc, #88]	; 63c <_modinit+0x6c>
 5e0:	add	r2, pc, r2
 5e4:	ldr	r3, [pc, #84]	; 640 <_modinit+0x70>
 5e8:	ldr	r3, [r2, r3]
 5ec:	mov	r1, r3
 5f0:	mov	r0, #77	; 0x4d
 5f4:	bl	458 <cflag_add@plt>
 5f8:	mov	r2, r0
 5fc:	ldr	r3, [pc, #64]	; 644 <_modinit+0x74>
 600:	add	r3, pc, r3
 604:	str	r2, [r3]
 608:	ldr	r3, [pc, #56]	; 648 <_modinit+0x78>
 60c:	add	r3, pc, r3
 610:	ldr	r3, [r3]
 614:	cmp	r3, #0
 618:	bne	624 <_modinit+0x54>
 61c:	mvn	r3, #0
 620:	b	628 <_modinit+0x58>
 624:	mov	r3, #0
 628:	mov	r0, r3
 62c:	sub	sp, fp, #4
 630:	ldr	fp, [sp]
 634:	add	sp, sp, #4
 638:	pop	{pc}		; (ldr pc, [sp], #4)
 63c:	.word	0x00010a18
 640:	.word	0x00000030
 644:	.word	0x00010a7c
 648:	.word	0x00010a70

0000064c <_moddeinit>:
 64c:	str	fp, [sp, #-8]!
 650:	str	lr, [sp, #4]
 654:	add	fp, sp, #4
 658:	mov	r0, #77	; 0x4d
 65c:	bl	4a0 <cflag_orphan@plt>
 660:	nop	{0}
 664:	sub	sp, fp, #4
 668:	ldr	fp, [sp]
 66c:	add	sp, sp, #4
 670:	pop	{pc}		; (ldr pc, [sp], #4)

00000674 <hdl_can_kick>:
 674:	str	fp, [sp, #-8]!
 678:	str	lr, [sp, #4]
 67c:	add	fp, sp, #4
 680:	sub	sp, sp, #32
 684:	str	r0, [fp, #-24]	; 0xffffffe8
 688:	ldr	r3, [fp, #-24]	; 0xffffffe8
 68c:	ldr	r3, [r3]
 690:	str	r3, [fp, #-8]
 694:	ldr	r3, [fp, #-24]	; 0xffffffe8
 698:	ldr	r3, [r3, #12]
 69c:	str	r3, [fp, #-12]
 6a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6a4:	ldr	r3, [r3, #4]
 6a8:	str	r3, [fp, #-16]
 6ac:	ldr	r3, [fp, #-8]
 6b0:	ldr	r3, [r3, #56]	; 0x38
 6b4:	and	r3, r3, #4096	; 0x1000
 6b8:	cmp	r3, #0
 6bc:	bne	7a4 <hdl_can_kick+0x130>
 6c0:	ldr	r3, [fp, #-16]
 6c4:	ldr	r2, [r3, #12]
 6c8:	ldr	r3, [pc, #232]	; 7b8 <hdl_can_kick+0x144>
 6cc:	add	r3, pc, r3
 6d0:	ldr	r3, [r3]
 6d4:	and	r3, r3, r2
 6d8:	cmp	r3, #0
 6dc:	beq	7a8 <hdl_can_kick+0x134>
 6e0:	ldr	r3, [fp, #-12]
 6e4:	ldr	r3, [r3, #24]
 6e8:	cmp	r3, #0
 6ec:	beq	7a8 <hdl_can_kick+0x134>
 6f0:	ldr	r3, [fp, #-12]
 6f4:	ldr	r3, [r3, #24]
 6f8:	ldr	r3, [r3, #36]	; 0x24
 6fc:	cmp	r3, #0
 700:	beq	7a8 <hdl_can_kick+0x134>
 704:	ldr	r3, [fp, #-12]
 708:	ldr	r3, [r3, #24]
 70c:	ldr	r3, [r3, #36]	; 0x24
 710:	ldr	r2, [pc, #164]	; 7bc <hdl_can_kick+0x148>
 714:	add	r2, pc, r2
 718:	mov	r1, r2
 71c:	mov	r0, r3
 720:	bl	494 <privilegeset_in_set@plt>
 724:	mov	r3, r0
 728:	cmp	r3, #0
 72c:	beq	7a8 <hdl_can_kick+0x134>
 730:	ldr	r3, [fp, #-8]
 734:	add	r1, r3, #88	; 0x58
 738:	ldr	r3, [fp, #-12]
 73c:	add	r3, r3, #88	; 0x58
 740:	ldr	r2, [fp, #-16]
 744:	ldr	r2, [r2, #236]	; 0xec
 748:	str	r2, [sp, #4]
 74c:	str	r3, [sp]
 750:	mov	r3, r1
 754:	ldr	r2, [pc, #100]	; 7c0 <hdl_can_kick+0x14c>
 758:	add	r2, pc, r2
 75c:	mov	r1, #256	; 0x100
 760:	mov	r0, #256	; 0x100
 764:	bl	470 <sendto_realops_snomask@plt>
 768:	ldr	r3, [fp, #-12]
 76c:	add	r2, r3, #88	; 0x58
 770:	ldr	r3, [fp, #-16]
 774:	ldr	r3, [r3, #236]	; 0xec
 778:	str	r3, [sp]
 77c:	mov	r3, r2
 780:	ldr	r2, [pc, #60]	; 7c4 <hdl_can_kick+0x150>
 784:	add	r2, pc, r2
 788:	mov	r1, #484	; 0x1e4
 78c:	ldr	r0, [fp, #-8]
 790:	bl	488 <sendto_one_numeric@plt>
 794:	ldr	r3, [fp, #-24]	; 0xffffffe8
 798:	mov	r2, #0
 79c:	str	r2, [r3, #16]
 7a0:	b	7a8 <hdl_can_kick+0x134>
 7a4:	nop	{0}
 7a8:	sub	sp, fp, #4
 7ac:	ldr	fp, [sp]
 7b0:	add	sp, sp, #4
 7b4:	pop	{pc}		; (ldr pc, [sp], #4)
 7b8:	.word	0x000109b0
 7bc:	.word	0x00000104
 7c0:	.word	0x000000d8
 7c4:	.word	0x000000dc

Disassembly of section .fini:

000007c8 <_fini>:
 7c8:	push	{r3, lr}
 7cc:	pop	{r3, pc}
