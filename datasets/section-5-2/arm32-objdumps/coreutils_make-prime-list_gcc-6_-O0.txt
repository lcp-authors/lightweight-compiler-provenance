
../repos/coreutils/src/make-prime-list:     file format elf32-littlearm


Disassembly of section .init:

00010558 <.init>:
   10558:	push	{r3, lr}
   1055c:	bl	1068c <abort@plt+0x48>
   10560:	pop	{r3, pc}

Disassembly of section .plt:

00010564 <raise@plt-0x14>:
   10564:	push	{lr}		; (str lr, [sp, #-4]!)
   10568:	ldr	lr, [pc, #4]	; 10574 <raise@plt-0x4>
   1056c:	add	lr, pc, lr
   10570:	ldr	pc, [lr, #8]!
   10574:	andeq	r1, r1, ip, lsl #21

00010578 <raise@plt>:
   10578:	add	ip, pc, #0, 12
   1057c:	add	ip, ip, #69632	; 0x11000
   10580:	ldr	pc, [ip, #2700]!	; 0xa8c

00010584 <printf@plt>:
   10584:	add	ip, pc, #0, 12
   10588:	add	ip, ip, #69632	; 0x11000
   1058c:	ldr	pc, [ip, #2692]!	; 0xa84

00010590 <free@plt>:
   10590:	add	ip, pc, #0, 12
   10594:	add	ip, ip, #69632	; 0x11000
   10598:	ldr	pc, [ip, #2684]!	; 0xa7c

0001059c <ferror@plt>:
   1059c:	add	ip, pc, #0, 12
   105a0:	add	ip, ip, #69632	; 0x11000
   105a4:	ldr	pc, [ip, #2676]!	; 0xa74

000105a8 <fwrite@plt>:
   105a8:	add	ip, pc, #0, 12
   105ac:	add	ip, ip, #69632	; 0x11000
   105b0:	ldr	pc, [ip, #2668]!	; 0xa6c

000105b4 <puts@plt>:
   105b4:	add	ip, pc, #0, 12
   105b8:	add	ip, ip, #69632	; 0x11000
   105bc:	ldr	pc, [ip, #2660]!	; 0xa64

000105c0 <malloc@plt>:
   105c0:	add	ip, pc, #0, 12
   105c4:	add	ip, ip, #69632	; 0x11000
   105c8:	ldr	pc, [ip, #2652]!	; 0xa5c

000105cc <__libc_start_main@plt>:
   105cc:	add	ip, pc, #0, 12
   105d0:	add	ip, ip, #69632	; 0x11000
   105d4:	ldr	pc, [ip, #2644]!	; 0xa54

000105d8 <strerror@plt>:
   105d8:	add	ip, pc, #0, 12
   105dc:	add	ip, ip, #69632	; 0x11000
   105e0:	ldr	pc, [ip, #2636]!	; 0xa4c

000105e4 <__gmon_start__@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #69632	; 0x11000
   105ec:	ldr	pc, [ip, #2628]!	; 0xa44

000105f0 <exit@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #69632	; 0x11000
   105f8:	ldr	pc, [ip, #2620]!	; 0xa3c

000105fc <fprintf@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #69632	; 0x11000
   10604:	ldr	pc, [ip, #2612]!	; 0xa34

00010608 <__errno_location@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #69632	; 0x11000
   10610:	ldr	pc, [ip, #2604]!	; 0xa2c

00010614 <memset@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #69632	; 0x11000
   1061c:	ldr	pc, [ip, #2596]!	; 0xa24

00010620 <putchar@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #69632	; 0x11000
   10628:	ldr	pc, [ip, #2588]!	; 0xa1c

0001062c <fclose@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #69632	; 0x11000
   10634:	ldr	pc, [ip, #2580]!	; 0xa14

00010638 <atoi@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #69632	; 0x11000
   10640:	ldr	pc, [ip, #2572]!	; 0xa0c

00010644 <abort@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #69632	; 0x11000
   1064c:	ldr	pc, [ip, #2564]!	; 0xa04

Disassembly of section .text:

00010650 <.text>:
   10650:	mov	fp, #0
   10654:	mov	lr, #0
   10658:	pop	{r1}		; (ldr r1, [sp], #4)
   1065c:	mov	r2, sp
   10660:	push	{r2}		; (str r2, [sp, #-4]!)
   10664:	push	{r0}		; (str r0, [sp, #-4]!)
   10668:	ldr	ip, [pc, #16]	; 10680 <abort@plt+0x3c>
   1066c:	push	{ip}		; (str ip, [sp, #-4]!)
   10670:	ldr	r0, [pc, #12]	; 10684 <abort@plt+0x40>
   10674:	ldr	r3, [pc, #12]	; 10688 <abort@plt+0x44>
   10678:	bl	105cc <__libc_start_main@plt>
   1067c:	bl	10644 <abort@plt>
   10680:	muleq	r1, r4, r4
   10684:	andeq	r0, r1, r8, lsr lr
   10688:	andeq	r1, r1, r4, lsr r4
   1068c:	ldr	r3, [pc, #20]	; 106a8 <abort@plt+0x64>
   10690:	ldr	r2, [pc, #20]	; 106ac <abort@plt+0x68>
   10694:	add	r3, pc, r3
   10698:	ldr	r2, [r3, r2]
   1069c:	cmp	r2, #0
   106a0:	bxeq	lr
   106a4:	b	105e4 <__gmon_start__@plt>
   106a8:	andeq	r1, r1, r4, ror #18
   106ac:	andeq	r0, r0, r4, asr r0
   106b0:	ldr	r3, [pc, #28]	; 106d4 <abort@plt+0x90>
   106b4:	ldr	r0, [pc, #28]	; 106d8 <abort@plt+0x94>
   106b8:	sub	r3, r3, r0
   106bc:	cmp	r3, #6
   106c0:	bxls	lr
   106c4:	ldr	r3, [pc, #16]	; 106dc <abort@plt+0x98>
   106c8:	cmp	r3, #0
   106cc:	bxeq	lr
   106d0:	bx	r3
   106d4:	andeq	r2, r2, r3, rrx
   106d8:	andeq	r2, r2, r0, rrx
   106dc:	andeq	r0, r0, r0
   106e0:	ldr	r1, [pc, #36]	; 1070c <abort@plt+0xc8>
   106e4:	ldr	r0, [pc, #36]	; 10710 <abort@plt+0xcc>
   106e8:	sub	r1, r1, r0
   106ec:	asr	r1, r1, #2
   106f0:	add	r1, r1, r1, lsr #31
   106f4:	asrs	r1, r1, #1
   106f8:	bxeq	lr
   106fc:	ldr	r3, [pc, #16]	; 10714 <abort@plt+0xd0>
   10700:	cmp	r3, #0
   10704:	bxeq	lr
   10708:	bx	r3
   1070c:	andeq	r2, r2, r0, rrx
   10710:	andeq	r2, r2, r0, rrx
   10714:	andeq	r0, r0, r0
   10718:	push	{r4, lr}
   1071c:	ldr	r4, [pc, #24]	; 1073c <abort@plt+0xf8>
   10720:	ldrb	r3, [r4]
   10724:	cmp	r3, #0
   10728:	popne	{r4, pc}
   1072c:	bl	106b0 <abort@plt+0x6c>
   10730:	mov	r3, #1
   10734:	strb	r3, [r4]
   10738:	pop	{r4, pc}
   1073c:	andeq	r2, r2, r8, rrx
   10740:	ldr	r0, [pc, #40]	; 10770 <abort@plt+0x12c>
   10744:	ldr	r3, [r0]
   10748:	cmp	r3, #0
   1074c:	bne	10754 <abort@plt+0x110>
   10750:	b	106e0 <abort@plt+0x9c>
   10754:	ldr	r3, [pc, #24]	; 10774 <abort@plt+0x130>
   10758:	cmp	r3, #0
   1075c:	beq	10750 <abort@plt+0x10c>
   10760:	push	{r4, lr}
   10764:	blx	r3
   10768:	pop	{r4, lr}
   1076c:	b	106e0 <abort@plt+0x9c>
   10770:	andeq	r1, r2, r4, lsl pc
   10774:	andeq	r0, r0, r0
   10778:	push	{fp, lr}
   1077c:	add	fp, sp, #4
   10780:	sub	sp, sp, #24
   10784:	strd	r0, [fp, #-28]	; 0xffffffe4
   10788:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1078c:	lsrs	r3, r3, #1
   10790:	rrx	r2, r2
   10794:	mov	r3, r2
   10798:	and	r3, r3, #7
   1079c:	lsl	r3, r3, #2
   107a0:	ldr	r2, [pc, #184]	; 10860 <abort@plt+0x21c>
   107a4:	lsr	r3, r2, r3
   107a8:	mov	r2, r3
   107ac:	mov	r3, #0
   107b0:	strd	r2, [fp, #-12]
   107b4:	ldrd	r2, [fp, #-12]
   107b8:	adds	r2, r2, r2
   107bc:	adc	r3, r3, r3
   107c0:	mov	r0, r2
   107c4:	mov	r1, r3
   107c8:	ldr	r3, [fp, #-8]
   107cc:	ldr	r2, [fp, #-12]
   107d0:	mul	r2, r2, r3
   107d4:	ldr	r3, [fp, #-8]
   107d8:	ldr	ip, [fp, #-12]
   107dc:	mul	r3, ip, r3
   107e0:	add	ip, r2, r3
   107e4:	ldr	r2, [fp, #-12]
   107e8:	ldr	r3, [fp, #-12]
   107ec:	umull	r2, r3, r2, r3
   107f0:	add	ip, ip, r3
   107f4:	mov	r3, ip
   107f8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   107fc:	mul	lr, r3, ip
   10800:	ldr	ip, [fp, #-24]	; 0xffffffe8
   10804:	mul	ip, r2, ip
   10808:	add	ip, lr, ip
   1080c:	ldr	lr, [fp, #-28]	; 0xffffffe4
   10810:	umull	r2, r3, lr, r2
   10814:	add	ip, ip, r3
   10818:	mov	r3, ip
   1081c:	subs	r2, r0, r2
   10820:	sbc	r3, r1, r3
   10824:	strd	r2, [fp, #-20]	; 0xffffffec
   10828:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1082c:	ldrd	r2, [fp, #-12]
   10830:	cmp	r1, r3
   10834:	cmpeq	r0, r2
   10838:	bne	10844 <abort@plt+0x200>
   1083c:	ldrd	r2, [fp, #-12]
   10840:	b	10850 <abort@plt+0x20c>
   10844:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10848:	strd	r2, [fp, #-12]
   1084c:	b	107b4 <abort@plt+0x170>
   10850:	mov	r0, r2
   10854:	mov	r1, r3
   10858:	sub	sp, fp, #4
   1085c:	pop	{fp, pc}
   10860:			; <UNDEFINED> instruction: 0xf5397db1
   10864:	push	{fp, lr}
   10868:	add	fp, sp, #4
   1086c:	sub	sp, sp, #16
   10870:	str	r0, [fp, #-16]
   10874:	str	r1, [fp, #-20]	; 0xffffffec
   10878:	mvn	r2, #0
   1087c:	mvn	r3, #0
   10880:	strd	r2, [fp, #-12]
   10884:	ldr	r3, [fp, #-16]
   10888:	ldr	r2, [fp, #-20]	; 0xffffffec
   1088c:	str	r2, [r3]
   10890:	ldr	r3, [fp, #-20]	; 0xffffffec
   10894:	mov	r2, r3
   10898:	mov	r3, #0
   1089c:	mov	r0, r2
   108a0:	mov	r1, r3
   108a4:	bl	10778 <abort@plt+0x134>
   108a8:	mov	r2, r0
   108ac:	mov	r3, r1
   108b0:	ldr	r1, [fp, #-16]
   108b4:	strd	r2, [r1, #8]
   108b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   108bc:	mov	r2, r3
   108c0:	mov	r3, #0
   108c4:	ldrd	r0, [fp, #-12]
   108c8:	bl	112c0 <abort@plt+0xc7c>
   108cc:	mov	r2, r0
   108d0:	mov	r3, r1
   108d4:	ldr	r1, [fp, #-16]
   108d8:	strd	r2, [r1, #16]
   108dc:	nop			; (mov r0, r0)
   108e0:	sub	sp, fp, #4
   108e4:	pop	{fp, pc}
   108e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   108ec:	add	fp, sp, #28
   108f0:	sub	sp, sp, #32
   108f4:	strd	r0, [fp, #-52]	; 0xffffffcc
   108f8:	str	r2, [fp, #-56]	; 0xffffffc8
   108fc:	str	r3, [fp, #-60]	; 0xffffffc4
   10900:	mov	r3, #7
   10904:	str	r3, [fp, #-32]	; 0xffffffe0
   10908:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1090c:	lsl	r3, r3, #2
   10910:	str	r3, [fp, #-36]	; 0xffffffdc
   10914:	mov	r2, #1
   10918:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1091c:	lsl	r3, r2, r3
   10920:	sub	r3, r3, #1
   10924:	mov	r2, r3
   10928:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1092c:	and	r3, r3, r2
   10930:	str	r3, [fp, #-40]	; 0xffffffd8
   10934:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10938:	mov	r0, r3
   1093c:	mov	r1, #0
   10940:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   10944:	cmp	r1, r3
   10948:	cmpeq	r0, r2
   1094c:	beq	10a24 <abort@plt+0x3e0>
   10950:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   10954:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10958:	rsb	ip, r1, #32
   1095c:	sub	r0, r1, #32
   10960:	lsr	r4, r2, r1
   10964:	orr	r4, r4, r3, lsl ip
   10968:	orr	r4, r4, r3, lsr r0
   1096c:	lsr	r5, r3, r1
   10970:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10974:	rsb	r1, r3, #32
   10978:	sub	r2, r3, #32
   1097c:	lsr	r6, r4, r3
   10980:	orr	r6, r6, r5, lsl r1
   10984:	orr	r6, r6, r5, lsr r2
   10988:	lsr	r7, r5, r3
   1098c:	orr	r3, r6, r7
   10990:	cmp	r3, #0
   10994:	movne	r3, #1
   10998:	moveq	r3, #0
   1099c:	uxtb	r3, r3
   109a0:	str	r3, [fp, #-44]	; 0xffffffd4
   109a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   109a8:	cmp	r3, #0
   109ac:	beq	109b8 <abort@plt+0x374>
   109b0:	mov	r0, #40	; 0x28
   109b4:	bl	10620 <putchar@plt>
   109b8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   109bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   109c0:	rsb	ip, r1, #32
   109c4:	sub	r0, r1, #32
   109c8:	lsr	r8, r2, r1
   109cc:	orr	r8, r8, r3, lsl ip
   109d0:	orr	r8, r8, r3, lsr r0
   109d4:	lsr	r9, r3, r1
   109d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   109dc:	add	r2, r3, #1
   109e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   109e4:	mov	r0, r8
   109e8:	mov	r1, r9
   109ec:	bl	108e8 <abort@plt+0x2a4>
   109f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   109f4:	cmp	r3, #0
   109f8:	beq	10a14 <abort@plt+0x3d0>
   109fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10a00:	add	r3, r3, #3
   10a04:	ldr	r2, [pc, #112]	; 10a7c <abort@plt+0x438>
   10a08:	mov	r1, r3
   10a0c:	ldr	r0, [pc, #108]	; 10a80 <abort@plt+0x43c>
   10a10:	bl	10584 <printf@plt>
   10a14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10a18:	ldr	r0, [pc, #100]	; 10a84 <abort@plt+0x440>
   10a1c:	bl	10584 <printf@plt>
   10a20:	b	10a60 <abort@plt+0x41c>
   10a24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10a28:	cmp	r3, #0
   10a2c:	beq	10a60 <abort@plt+0x41c>
   10a30:	ldr	r0, [pc, #80]	; 10a88 <abort@plt+0x444>
   10a34:	bl	10584 <printf@plt>
   10a38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10a3c:	sub	r3, r3, #1
   10a40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10a44:	mov	r1, r2
   10a48:	mov	r0, r3
   10a4c:	bl	112a0 <abort@plt+0xc5c>
   10a50:	mov	r3, r1
   10a54:	and	r3, r3, #3
   10a58:	add	r3, r3, #1
   10a5c:	str	r3, [fp, #-32]	; 0xffffffe0
   10a60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10a64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10a68:	ldr	r0, [pc, #28]	; 10a8c <abort@plt+0x448>
   10a6c:	bl	10584 <printf@plt>
   10a70:	nop			; (mov r0, r0)
   10a74:	sub	sp, fp, #28
   10a78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10a7c:	andeq	r1, r1, r4, lsr #9
   10a80:	andeq	r1, r1, r8, lsr #9
   10a84:			; <UNDEFINED> instruction: 0x000114b0
   10a88:			; <UNDEFINED> instruction: 0x000114bc
   10a8c:	andeq	r1, r1, ip, asr #9
   10a90:	push	{fp, lr}
   10a94:	add	fp, sp, #4
   10a98:	sub	sp, sp, #40	; 0x28
   10a9c:	str	r0, [fp, #-40]	; 0xffffffd8
   10aa0:	str	r1, [fp, #-44]	; 0xffffffd4
   10aa4:	mov	r3, #0
   10aa8:	str	r3, [fp, #-20]	; 0xffffffec
   10aac:	mvn	r2, #0
   10ab0:	mvn	r3, #0
   10ab4:	strd	r2, [fp, #-28]	; 0xffffffe4
   10ab8:	mov	r3, #0
   10abc:	str	r3, [fp, #-20]	; 0xffffffec
   10ac0:	b	10ae0 <abort@plt+0x49c>
   10ac4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   10ac8:	lsrs	r3, r3, #1
   10acc:	rrx	r2, r2
   10ad0:	strd	r2, [fp, #-28]	; 0xffffffe4
   10ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ad8:	add	r3, r3, #1
   10adc:	str	r3, [fp, #-20]	; 0xffffffec
   10ae0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   10ae4:	orrs	r3, r2, r3
   10ae8:	bne	10ac4 <abort@plt+0x480>
   10aec:	ldr	r0, [pc, #708]	; 10db8 <abort@plt+0x774>
   10af0:	bl	105b4 <puts@plt>
   10af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   10af8:	ldr	r0, [pc, #700]	; 10dbc <abort@plt+0x778>
   10afc:	bl	10584 <printf@plt>
   10b00:	mov	r3, #0
   10b04:	str	r3, [fp, #-8]
   10b08:	mov	r3, #2
   10b0c:	str	r3, [fp, #-12]
   10b10:	b	10c60 <abort@plt+0x61c>
   10b14:	ldr	r3, [fp, #-8]
   10b18:	add	r2, r3, #8
   10b1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10b20:	cmp	r2, r3
   10b24:	bcs	10b78 <abort@plt+0x534>
   10b28:	ldr	r2, [fp, #-8]
   10b2c:	mov	r3, r2
   10b30:	lsl	r3, r3, #1
   10b34:	add	r3, r3, r2
   10b38:	lsl	r3, r3, #3
   10b3c:	add	r3, r3, #192	; 0xc0
   10b40:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10b44:	add	r3, r2, r3
   10b48:	ldr	r1, [r3]
   10b4c:	ldr	r2, [fp, #-8]
   10b50:	mov	r3, r2
   10b54:	lsl	r3, r3, #1
   10b58:	add	r3, r3, r2
   10b5c:	lsl	r3, r3, #3
   10b60:	mov	r2, r3
   10b64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10b68:	add	r3, r3, r2
   10b6c:	ldr	r3, [r3]
   10b70:	sub	r3, r1, r3
   10b74:	b	10b7c <abort@plt+0x538>
   10b78:	mov	r3, #255	; 0xff
   10b7c:	str	r3, [fp, #-32]	; 0xffffffe0
   10b80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10b84:	cmp	r3, #255	; 0xff
   10b88:	bls	10b90 <abort@plt+0x54c>
   10b8c:	bl	10644 <abort@plt>
   10b90:	ldr	r2, [fp, #-8]
   10b94:	mov	r3, r2
   10b98:	lsl	r3, r3, #1
   10b9c:	add	r3, r3, r2
   10ba0:	lsl	r3, r3, #3
   10ba4:	mov	r2, r3
   10ba8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10bac:	add	r3, r3, r2
   10bb0:	ldr	r2, [r3]
   10bb4:	ldr	r3, [fp, #-12]
   10bb8:	sub	r3, r2, r3
   10bbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10bc0:	mov	r1, r3
   10bc4:	ldr	r0, [pc, #500]	; 10dc0 <abort@plt+0x77c>
   10bc8:	bl	10584 <printf@plt>
   10bcc:	ldr	r2, [fp, #-8]
   10bd0:	mov	r3, r2
   10bd4:	lsl	r3, r3, #1
   10bd8:	add	r3, r3, r2
   10bdc:	lsl	r3, r3, #3
   10be0:	mov	r2, r3
   10be4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10be8:	add	r3, r3, r2
   10bec:	ldrd	r0, [r3, #8]
   10bf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   10bf4:	mov	r2, #0
   10bf8:	bl	108e8 <abort@plt+0x2a4>
   10bfc:	ldr	r2, [fp, #-8]
   10c00:	mov	r3, r2
   10c04:	lsl	r3, r3, #1
   10c08:	add	r3, r3, r2
   10c0c:	lsl	r3, r3, #3
   10c10:	mov	r2, r3
   10c14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10c18:	add	r3, r3, r2
   10c1c:	ldr	r3, [r3]
   10c20:	mov	r1, r3
   10c24:	ldr	r0, [pc, #408]	; 10dc4 <abort@plt+0x780>
   10c28:	bl	10584 <printf@plt>
   10c2c:	ldr	r2, [fp, #-8]
   10c30:	mov	r3, r2
   10c34:	lsl	r3, r3, #1
   10c38:	add	r3, r3, r2
   10c3c:	lsl	r3, r3, #3
   10c40:	mov	r2, r3
   10c44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10c48:	add	r3, r3, r2
   10c4c:	ldr	r3, [r3]
   10c50:	str	r3, [fp, #-12]
   10c54:	ldr	r3, [fp, #-8]
   10c58:	add	r3, r3, #1
   10c5c:	str	r3, [fp, #-8]
   10c60:	ldr	r2, [fp, #-8]
   10c64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10c68:	cmp	r2, r3
   10c6c:	bcc	10b14 <abort@plt+0x4d0>
   10c70:	ldr	r0, [pc, #336]	; 10dc8 <abort@plt+0x784>
   10c74:	bl	105b4 <puts@plt>
   10c78:	ldr	r3, [fp, #-12]
   10c7c:	add	r3, r3, #2
   10c80:	str	r3, [fp, #-12]
   10c84:	mov	r3, #0
   10c88:	str	r3, [fp, #-8]
   10c8c:	mov	r3, #1
   10c90:	str	r3, [fp, #-16]
   10c94:	b	10d80 <abort@plt+0x73c>
   10c98:	ldr	r2, [fp, #-8]
   10c9c:	mov	r3, r2
   10ca0:	lsl	r3, r3, #1
   10ca4:	add	r3, r3, r2
   10ca8:	lsl	r3, r3, #3
   10cac:	mov	r2, r3
   10cb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10cb4:	add	r3, r3, r2
   10cb8:	ldr	r1, [r3]
   10cbc:	ldr	r2, [fp, #-8]
   10cc0:	mov	r3, r2
   10cc4:	lsl	r3, r3, #1
   10cc8:	add	r3, r3, r2
   10ccc:	lsl	r3, r3, #3
   10cd0:	mov	r2, r3
   10cd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10cd8:	add	r3, r3, r2
   10cdc:	ldr	r3, [r3]
   10ce0:	mul	r2, r3, r1
   10ce4:	ldr	r3, [fp, #-12]
   10ce8:	cmp	r2, r3
   10cec:	bhi	10d90 <abort@plt+0x74c>
   10cf0:	ldr	r3, [fp, #-12]
   10cf4:	mov	r0, r3
   10cf8:	mov	r1, #0
   10cfc:	ldr	r2, [fp, #-8]
   10d00:	mov	r3, r2
   10d04:	lsl	r3, r3, #1
   10d08:	add	r3, r3, r2
   10d0c:	lsl	r3, r3, #3
   10d10:	mov	r2, r3
   10d14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10d18:	add	r3, r3, r2
   10d1c:	ldrd	r2, [r3, #8]
   10d20:	mul	lr, r2, r1
   10d24:	mul	ip, r0, r3
   10d28:	add	ip, lr, ip
   10d2c:	umull	r0, r1, r0, r2
   10d30:	add	r3, ip, r1
   10d34:	mov	r1, r3
   10d38:	ldr	r2, [fp, #-8]
   10d3c:	mov	r3, r2
   10d40:	lsl	r3, r3, #1
   10d44:	add	r3, r3, r2
   10d48:	lsl	r3, r3, #3
   10d4c:	mov	r2, r3
   10d50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10d54:	add	r3, r3, r2
   10d58:	ldrd	r2, [r3, #16]
   10d5c:	cmp	r1, r3
   10d60:	cmpeq	r0, r2
   10d64:	bhi	10d74 <abort@plt+0x730>
   10d68:	mov	r3, #0
   10d6c:	str	r3, [fp, #-16]
   10d70:	b	10d94 <abort@plt+0x750>
   10d74:	ldr	r3, [fp, #-8]
   10d78:	add	r3, r3, #1
   10d7c:	str	r3, [fp, #-8]
   10d80:	ldr	r3, [fp, #-16]
   10d84:	cmp	r3, #0
   10d88:	bne	10c98 <abort@plt+0x654>
   10d8c:	b	10d94 <abort@plt+0x750>
   10d90:	nop			; (mov r0, r0)
   10d94:	ldr	r3, [fp, #-16]
   10d98:	cmp	r3, #0
   10d9c:	beq	10c78 <abort@plt+0x634>
   10da0:	ldr	r1, [fp, #-12]
   10da4:	ldr	r0, [pc, #32]	; 10dcc <abort@plt+0x788>
   10da8:	bl	10584 <printf@plt>
   10dac:	nop			; (mov r0, r0)
   10db0:	sub	sp, fp, #4
   10db4:	pop	{fp, pc}
   10db8:	ldrdeq	r1, [r1], -r4
   10dbc:	strdeq	r1, [r1], -ip
   10dc0:	andeq	r1, r1, r8, lsl r5
   10dc4:	andeq	r1, r1, r8, lsr #10
   10dc8:	andeq	r1, r1, r4, asr #10
   10dcc:	andeq	r1, r1, r0, ror #10
   10dd0:	push	{fp, lr}
   10dd4:	add	fp, sp, #4
   10dd8:	sub	sp, sp, #16
   10ddc:	str	r0, [fp, #-16]
   10de0:	ldr	r0, [fp, #-16]
   10de4:	bl	105c0 <malloc@plt>
   10de8:	mov	r3, r0
   10dec:	str	r3, [fp, #-8]
   10df0:	ldr	r3, [fp, #-8]
   10df4:	cmp	r3, #0
   10df8:	beq	10e04 <abort@plt+0x7c0>
   10dfc:	ldr	r3, [fp, #-8]
   10e00:	b	10e24 <abort@plt+0x7e0>
   10e04:	ldr	r3, [pc, #36]	; 10e30 <abort@plt+0x7ec>
   10e08:	ldr	r3, [r3]
   10e0c:	mov	r2, #26
   10e10:	mov	r1, #1
   10e14:	ldr	r0, [pc, #24]	; 10e34 <abort@plt+0x7f0>
   10e18:	bl	105a8 <fwrite@plt>
   10e1c:	mov	r0, #1
   10e20:	bl	105f0 <exit@plt>
   10e24:	mov	r0, r3
   10e28:	sub	sp, fp, #4
   10e2c:	pop	{fp, pc}
   10e30:	andeq	r2, r2, r0, rrx
   10e34:	andeq	r1, r1, r0, lsl #11
   10e38:	push	{r4, fp, lr}
   10e3c:	add	fp, sp, #8
   10e40:	sub	sp, sp, #44	; 0x2c
   10e44:	str	r0, [fp, #-48]	; 0xffffffd0
   10e48:	str	r1, [fp, #-52]	; 0xffffffcc
   10e4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10e50:	cmp	r3, #2
   10e54:	beq	10e7c <abort@plt+0x838>
   10e58:	ldr	r3, [pc, #580]	; 110a4 <abort@plt+0xa60>
   10e5c:	ldr	r0, [r3]
   10e60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10e64:	ldr	r3, [r3]
   10e68:	mov	r2, r3
   10e6c:	ldr	r1, [pc, #564]	; 110a8 <abort@plt+0xa64>
   10e70:	bl	105fc <fprintf@plt>
   10e74:	mov	r3, #1
   10e78:	b	11098 <abort@plt+0xa54>
   10e7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10e80:	add	r3, r3, #4
   10e84:	ldr	r3, [r3]
   10e88:	mov	r0, r3
   10e8c:	bl	10638 <atoi@plt>
   10e90:	str	r0, [fp, #-16]
   10e94:	ldr	r3, [fp, #-16]
   10e98:	cmp	r3, #2
   10e9c:	bgt	10ea8 <abort@plt+0x864>
   10ea0:	mov	r3, #0
   10ea4:	b	11098 <abort@plt+0xa54>
   10ea8:	ldr	r3, [fp, #-16]
   10eac:	and	r3, r3, #1
   10eb0:	cmp	r3, #0
   10eb4:	bne	10ec4 <abort@plt+0x880>
   10eb8:	ldr	r3, [fp, #-16]
   10ebc:	sub	r3, r3, #1
   10ec0:	str	r3, [fp, #-16]
   10ec4:	ldr	r3, [fp, #-16]
   10ec8:	sub	r3, r3, #1
   10ecc:	lsr	r2, r3, #31
   10ed0:	add	r3, r2, r3
   10ed4:	asr	r3, r3, #1
   10ed8:	str	r3, [fp, #-32]	; 0xffffffe0
   10edc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ee0:	bl	10dd0 <abort@plt+0x78c>
   10ee4:	mov	r3, r0
   10ee8:	str	r3, [fp, #-36]	; 0xffffffdc
   10eec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10ef0:	mov	r1, #1
   10ef4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10ef8:	bl	10614 <memset@plt>
   10efc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10f00:	mov	r3, r2
   10f04:	lsl	r3, r3, #1
   10f08:	add	r3, r3, r2
   10f0c:	lsl	r3, r3, #3
   10f10:	mov	r0, r3
   10f14:	bl	10dd0 <abort@plt+0x78c>
   10f18:	mov	r3, r0
   10f1c:	str	r3, [fp, #-40]	; 0xffffffd8
   10f20:	mov	r3, #0
   10f24:	str	r3, [fp, #-24]	; 0xffffffe8
   10f28:	mov	r3, #0
   10f2c:	str	r3, [fp, #-20]	; 0xffffffec
   10f30:	b	10ffc <abort@plt+0x9b8>
   10f34:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f38:	lsl	r3, r3, #1
   10f3c:	add	r3, r3, #3
   10f40:	str	r3, [fp, #-44]	; 0xffffffd4
   10f44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10f48:	add	r3, r2, #1
   10f4c:	str	r3, [fp, #-24]	; 0xffffffe8
   10f50:	mov	r3, r2
   10f54:	lsl	r3, r3, #1
   10f58:	add	r3, r3, r2
   10f5c:	lsl	r3, r3, #3
   10f60:	mov	r2, r3
   10f64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10f68:	add	r3, r3, r2
   10f6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10f70:	mov	r0, r3
   10f74:	bl	10864 <abort@plt+0x220>
   10f78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10f7c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10f80:	mul	r3, r2, r3
   10f84:	sub	r3, r3, #3
   10f88:	lsr	r3, r3, #1
   10f8c:	str	r3, [fp, #-28]	; 0xffffffe4
   10f90:	b	10fb8 <abort@plt+0x974>
   10f94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10f98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f9c:	add	r3, r2, r3
   10fa0:	mov	r2, #0
   10fa4:	strb	r2, [r3]
   10fa8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10fb0:	add	r3, r2, r3
   10fb4:	str	r3, [fp, #-28]	; 0xffffffe4
   10fb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10fbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10fc0:	cmp	r2, r3
   10fc4:	bcc	10f94 <abort@plt+0x950>
   10fc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fcc:	add	r3, r3, #1
   10fd0:	str	r3, [fp, #-20]	; 0xffffffec
   10fd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   10fd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10fdc:	cmp	r2, r3
   10fe0:	bcs	10ffc <abort@plt+0x9b8>
   10fe4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10fe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fec:	add	r3, r2, r3
   10ff0:	ldrb	r3, [r3]
   10ff4:	cmp	r3, #0
   10ff8:	beq	10fc8 <abort@plt+0x984>
   10ffc:	ldr	r2, [fp, #-20]	; 0xffffffec
   11000:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11004:	cmp	r2, r3
   11008:	bcc	10f34 <abort@plt+0x8f0>
   1100c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11010:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11014:	bl	10a90 <abort@plt+0x44c>
   11018:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1101c:	bl	10590 <free@plt>
   11020:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11024:	bl	10590 <free@plt>
   11028:	ldr	r3, [pc, #124]	; 110ac <abort@plt+0xa68>
   1102c:	ldr	r3, [r3]
   11030:	mov	r0, r3
   11034:	bl	1059c <ferror@plt>
   11038:	mov	r4, r0
   1103c:	ldr	r3, [pc, #104]	; 110ac <abort@plt+0xa68>
   11040:	ldr	r3, [r3]
   11044:	mov	r0, r3
   11048:	bl	1062c <fclose@plt>
   1104c:	mov	r3, r0
   11050:	add	r3, r4, r3
   11054:	cmp	r3, #0
   11058:	beq	11094 <abort@plt+0xa50>
   1105c:	ldr	r3, [pc, #64]	; 110a4 <abort@plt+0xa60>
   11060:	ldr	r4, [r3]
   11064:	bl	10608 <__errno_location@plt>
   11068:	mov	r3, r0
   1106c:	ldr	r3, [r3]
   11070:	mov	r0, r3
   11074:	bl	105d8 <strerror@plt>
   11078:	mov	r3, r0
   1107c:	mov	r2, r3
   11080:	ldr	r1, [pc, #40]	; 110b0 <abort@plt+0xa6c>
   11084:	mov	r0, r4
   11088:	bl	105fc <fprintf@plt>
   1108c:	mov	r3, #1
   11090:	b	11098 <abort@plt+0xa54>
   11094:	mov	r3, #0
   11098:	mov	r0, r3
   1109c:	sub	sp, fp, #8
   110a0:	pop	{r4, fp, pc}
   110a4:	andeq	r2, r2, r0, rrx
   110a8:	muleq	r1, ip, r5
   110ac:	andeq	r2, r2, r4, rrx
   110b0:	ldrdeq	r1, [r1], -r4
   110b4:	subs	r2, r1, #1
   110b8:	bxeq	lr
   110bc:	bcc	11294 <abort@plt+0xc50>
   110c0:	cmp	r0, r1
   110c4:	bls	11278 <abort@plt+0xc34>
   110c8:	tst	r1, r2
   110cc:	beq	11284 <abort@plt+0xc40>
   110d0:	clz	r3, r0
   110d4:	clz	r2, r1
   110d8:	sub	r3, r2, r3
   110dc:	rsbs	r3, r3, #31
   110e0:	addne	r3, r3, r3, lsl #1
   110e4:	mov	r2, #0
   110e8:	addne	pc, pc, r3, lsl #2
   110ec:	nop			; (mov r0, r0)
   110f0:	cmp	r0, r1, lsl #31
   110f4:	adc	r2, r2, r2
   110f8:	subcs	r0, r0, r1, lsl #31
   110fc:	cmp	r0, r1, lsl #30
   11100:	adc	r2, r2, r2
   11104:	subcs	r0, r0, r1, lsl #30
   11108:	cmp	r0, r1, lsl #29
   1110c:	adc	r2, r2, r2
   11110:	subcs	r0, r0, r1, lsl #29
   11114:	cmp	r0, r1, lsl #28
   11118:	adc	r2, r2, r2
   1111c:	subcs	r0, r0, r1, lsl #28
   11120:	cmp	r0, r1, lsl #27
   11124:	adc	r2, r2, r2
   11128:	subcs	r0, r0, r1, lsl #27
   1112c:	cmp	r0, r1, lsl #26
   11130:	adc	r2, r2, r2
   11134:	subcs	r0, r0, r1, lsl #26
   11138:	cmp	r0, r1, lsl #25
   1113c:	adc	r2, r2, r2
   11140:	subcs	r0, r0, r1, lsl #25
   11144:	cmp	r0, r1, lsl #24
   11148:	adc	r2, r2, r2
   1114c:	subcs	r0, r0, r1, lsl #24
   11150:	cmp	r0, r1, lsl #23
   11154:	adc	r2, r2, r2
   11158:	subcs	r0, r0, r1, lsl #23
   1115c:	cmp	r0, r1, lsl #22
   11160:	adc	r2, r2, r2
   11164:	subcs	r0, r0, r1, lsl #22
   11168:	cmp	r0, r1, lsl #21
   1116c:	adc	r2, r2, r2
   11170:	subcs	r0, r0, r1, lsl #21
   11174:	cmp	r0, r1, lsl #20
   11178:	adc	r2, r2, r2
   1117c:	subcs	r0, r0, r1, lsl #20
   11180:	cmp	r0, r1, lsl #19
   11184:	adc	r2, r2, r2
   11188:	subcs	r0, r0, r1, lsl #19
   1118c:	cmp	r0, r1, lsl #18
   11190:	adc	r2, r2, r2
   11194:	subcs	r0, r0, r1, lsl #18
   11198:	cmp	r0, r1, lsl #17
   1119c:	adc	r2, r2, r2
   111a0:	subcs	r0, r0, r1, lsl #17
   111a4:	cmp	r0, r1, lsl #16
   111a8:	adc	r2, r2, r2
   111ac:	subcs	r0, r0, r1, lsl #16
   111b0:	cmp	r0, r1, lsl #15
   111b4:	adc	r2, r2, r2
   111b8:	subcs	r0, r0, r1, lsl #15
   111bc:	cmp	r0, r1, lsl #14
   111c0:	adc	r2, r2, r2
   111c4:	subcs	r0, r0, r1, lsl #14
   111c8:	cmp	r0, r1, lsl #13
   111cc:	adc	r2, r2, r2
   111d0:	subcs	r0, r0, r1, lsl #13
   111d4:	cmp	r0, r1, lsl #12
   111d8:	adc	r2, r2, r2
   111dc:	subcs	r0, r0, r1, lsl #12
   111e0:	cmp	r0, r1, lsl #11
   111e4:	adc	r2, r2, r2
   111e8:	subcs	r0, r0, r1, lsl #11
   111ec:	cmp	r0, r1, lsl #10
   111f0:	adc	r2, r2, r2
   111f4:	subcs	r0, r0, r1, lsl #10
   111f8:	cmp	r0, r1, lsl #9
   111fc:	adc	r2, r2, r2
   11200:	subcs	r0, r0, r1, lsl #9
   11204:	cmp	r0, r1, lsl #8
   11208:	adc	r2, r2, r2
   1120c:	subcs	r0, r0, r1, lsl #8
   11210:	cmp	r0, r1, lsl #7
   11214:	adc	r2, r2, r2
   11218:	subcs	r0, r0, r1, lsl #7
   1121c:	cmp	r0, r1, lsl #6
   11220:	adc	r2, r2, r2
   11224:	subcs	r0, r0, r1, lsl #6
   11228:	cmp	r0, r1, lsl #5
   1122c:	adc	r2, r2, r2
   11230:	subcs	r0, r0, r1, lsl #5
   11234:	cmp	r0, r1, lsl #4
   11238:	adc	r2, r2, r2
   1123c:	subcs	r0, r0, r1, lsl #4
   11240:	cmp	r0, r1, lsl #3
   11244:	adc	r2, r2, r2
   11248:	subcs	r0, r0, r1, lsl #3
   1124c:	cmp	r0, r1, lsl #2
   11250:	adc	r2, r2, r2
   11254:	subcs	r0, r0, r1, lsl #2
   11258:	cmp	r0, r1, lsl #1
   1125c:	adc	r2, r2, r2
   11260:	subcs	r0, r0, r1, lsl #1
   11264:	cmp	r0, r1
   11268:	adc	r2, r2, r2
   1126c:	subcs	r0, r0, r1
   11270:	mov	r0, r2
   11274:	bx	lr
   11278:	moveq	r0, #1
   1127c:	movne	r0, #0
   11280:	bx	lr
   11284:	clz	r2, r1
   11288:	rsb	r2, r2, #31
   1128c:	lsr	r0, r0, r2
   11290:	bx	lr
   11294:	cmp	r0, #0
   11298:	mvnne	r0, #0
   1129c:	b	112fc <abort@plt+0xcb8>
   112a0:	cmp	r1, #0
   112a4:	beq	11294 <abort@plt+0xc50>
   112a8:	push	{r0, r1, lr}
   112ac:	bl	110b4 <abort@plt+0xa70>
   112b0:	pop	{r1, r2, lr}
   112b4:	mul	r3, r2, r0
   112b8:	sub	r1, r1, r3
   112bc:	bx	lr
   112c0:	cmp	r3, #0
   112c4:	cmpeq	r2, #0
   112c8:	bne	112e0 <abort@plt+0xc9c>
   112cc:	cmp	r1, #0
   112d0:	cmpeq	r0, #0
   112d4:	mvnne	r1, #0
   112d8:	mvnne	r0, #0
   112dc:	b	112fc <abort@plt+0xcb8>
   112e0:	sub	sp, sp, #8
   112e4:	push	{sp, lr}
   112e8:	bl	1130c <abort@plt+0xcc8>
   112ec:	ldr	lr, [sp, #4]
   112f0:	add	sp, sp, #8
   112f4:	pop	{r2, r3}
   112f8:	bx	lr
   112fc:	push	{r1, lr}
   11300:	mov	r0, #8
   11304:	bl	10578 <raise@plt>
   11308:	pop	{r1, pc}
   1130c:	cmp	r1, r3
   11310:	push	{r4, r5, r6, r7, r8, r9, lr}
   11314:	cmpeq	r0, r2
   11318:	mov	r4, r0
   1131c:	mov	r5, r1
   11320:	ldr	r9, [sp, #28]
   11324:	movcc	r0, #0
   11328:	movcc	r1, #0
   1132c:	bcc	11424 <abort@plt+0xde0>
   11330:	cmp	r3, #0
   11334:	clzeq	ip, r2
   11338:	clzne	ip, r3
   1133c:	addeq	ip, ip, #32
   11340:	cmp	r5, #0
   11344:	clzeq	r1, r4
   11348:	addeq	r1, r1, #32
   1134c:	clzne	r1, r5
   11350:	sub	ip, ip, r1
   11354:	sub	lr, ip, #32
   11358:	lsl	r7, r3, ip
   1135c:	rsb	r8, ip, #32
   11360:	orr	r7, r7, r2, lsl lr
   11364:	orr	r7, r7, r2, lsr r8
   11368:	lsl	r6, r2, ip
   1136c:	cmp	r5, r7
   11370:	cmpeq	r4, r6
   11374:	movcc	r0, #0
   11378:	movcc	r1, #0
   1137c:	bcc	11398 <abort@plt+0xd54>
   11380:	mov	r3, #1
   11384:	subs	r4, r4, r6
   11388:	lsl	r1, r3, lr
   1138c:	lsl	r0, r3, ip
   11390:	orr	r1, r1, r3, lsr r8
   11394:	sbc	r5, r5, r7
   11398:	cmp	ip, #0
   1139c:	beq	11424 <abort@plt+0xde0>
   113a0:	lsrs	r3, r7, #1
   113a4:	rrx	r2, r6
   113a8:	mov	r6, ip
   113ac:	b	113d0 <abort@plt+0xd8c>
   113b0:	subs	r4, r4, r2
   113b4:	sbc	r5, r5, r3
   113b8:	adds	r4, r4, r4
   113bc:	adc	r5, r5, r5
   113c0:	adds	r4, r4, #1
   113c4:	adc	r5, r5, #0
   113c8:	subs	r6, r6, #1
   113cc:	beq	113ec <abort@plt+0xda8>
   113d0:	cmp	r5, r3
   113d4:	cmpeq	r4, r2
   113d8:	bcs	113b0 <abort@plt+0xd6c>
   113dc:	adds	r4, r4, r4
   113e0:	adc	r5, r5, r5
   113e4:	subs	r6, r6, #1
   113e8:	bne	113d0 <abort@plt+0xd8c>
   113ec:	lsr	r6, r4, ip
   113f0:	lsr	r7, r5, ip
   113f4:	orr	r6, r6, r5, lsl r8
   113f8:	adds	r2, r0, r4
   113fc:	orr	r6, r6, r5, lsr lr
   11400:	adc	r3, r1, r5
   11404:	lsl	r1, r7, ip
   11408:	orr	r1, r1, r6, lsl lr
   1140c:	lsl	r0, r6, ip
   11410:	orr	r1, r1, r6, lsr r8
   11414:	subs	r0, r2, r0
   11418:	mov	r4, r6
   1141c:	mov	r5, r7
   11420:	sbc	r1, r3, r1
   11424:	cmp	r9, #0
   11428:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1142c:	strd	r4, [r9]
   11430:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11434:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11438:	mov	r7, r0
   1143c:	ldr	r6, [pc, #72]	; 1148c <abort@plt+0xe48>
   11440:	ldr	r5, [pc, #72]	; 11490 <abort@plt+0xe4c>
   11444:	add	r6, pc, r6
   11448:	add	r5, pc, r5
   1144c:	sub	r6, r6, r5
   11450:	mov	r8, r1
   11454:	mov	r9, r2
   11458:	bl	10558 <raise@plt-0x20>
   1145c:	asrs	r6, r6, #2
   11460:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11464:	mov	r4, #0
   11468:	add	r4, r4, #1
   1146c:	ldr	r3, [r5], #4
   11470:	mov	r2, r9
   11474:	mov	r1, r8
   11478:	mov	r0, r7
   1147c:	blx	r3
   11480:	cmp	r6, r4
   11484:	bne	11468 <abort@plt+0xe24>
   11488:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1148c:	andeq	r0, r1, r4, asr #21
   11490:			; <UNDEFINED> instruction: 0x00010abc
   11494:	bx	lr

Disassembly of section .fini:

00011498 <.fini>:
   11498:	push	{r3, lr}
   1149c:	pop	{r3, pc}
