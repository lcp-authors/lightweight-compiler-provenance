
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010dac <.init>:
   10dac:	push	{r3, lr}
   10db0:	bl	10eec <_start@@Base+0x3c>
   10db4:	pop	{r3, pc}

Disassembly of section .plt:

00010db8 <calloc@plt-0x14>:
   10db8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dbc:	ldr	lr, [pc, #4]	; 10dc8 <calloc@plt-0x4>
   10dc0:	add	lr, pc, lr
   10dc4:	ldr	pc, [lr, #8]!
   10dc8:	andeq	r2, r1, r8, lsr r2

00010dcc <calloc@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #73728	; 0x12000
   10dd4:	ldr	pc, [ip, #568]!	; 0x238

00010dd8 <strcmp@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #73728	; 0x12000
   10de0:	ldr	pc, [ip, #560]!	; 0x230

00010de4 <printf@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #73728	; 0x12000
   10dec:	ldr	pc, [ip, #552]!	; 0x228

00010df0 <__isoc99_fscanf@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #73728	; 0x12000
   10df8:	ldr	pc, [ip, #544]!	; 0x220

00010dfc <fopen@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #73728	; 0x12000
   10e04:	ldr	pc, [ip, #536]!	; 0x218

00010e08 <free@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #73728	; 0x12000
   10e10:	ldr	pc, [ip, #528]!	; 0x210

00010e14 <realloc@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #73728	; 0x12000
   10e1c:	ldr	pc, [ip, #520]!	; 0x208

00010e20 <strcpy@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #73728	; 0x12000
   10e28:	ldr	pc, [ip, #512]!	; 0x200

00010e2c <puts@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #73728	; 0x12000
   10e34:	ldr	pc, [ip, #504]!	; 0x1f8

00010e38 <malloc@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #73728	; 0x12000
   10e40:	ldr	pc, [ip, #496]!	; 0x1f0

00010e44 <__libc_start_main@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #73728	; 0x12000
   10e4c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e50 <__gmon_start__@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #73728	; 0x12000
   10e58:	ldr	pc, [ip, #480]!	; 0x1e0

00010e5c <strlen@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #73728	; 0x12000
   10e64:	ldr	pc, [ip, #472]!	; 0x1d8

00010e68 <memset@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #73728	; 0x12000
   10e70:	ldr	pc, [ip, #464]!	; 0x1d0

00010e74 <putchar@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #73728	; 0x12000
   10e7c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e80 <fclose@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #73728	; 0x12000
   10e88:	ldr	pc, [ip, #448]!	; 0x1c0

00010e8c <sprintf@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #73728	; 0x12000
   10e94:	ldr	pc, [ip, #440]!	; 0x1b8

00010e98 <atoi@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #73728	; 0x12000
   10ea0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea4 <abort@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #73728	; 0x12000
   10eac:	ldr	pc, [ip, #424]!	; 0x1a8

Disassembly of section .text:

00010eb0 <_start@@Base>:
   10eb0:	mov	fp, #0
   10eb4:	mov	lr, #0
   10eb8:	pop	{r1}		; (ldr r1, [sp], #4)
   10ebc:	mov	r2, sp
   10ec0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ec4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ec8:	ldr	ip, [pc, #16]	; 10ee0 <_start@@Base+0x30>
   10ecc:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed0:	ldr	r0, [pc, #12]	; 10ee4 <_start@@Base+0x34>
   10ed4:	ldr	r3, [pc, #12]	; 10ee8 <_start@@Base+0x38>
   10ed8:	bl	10e44 <__libc_start_main@plt>
   10edc:	bl	10ea4 <abort@plt>
   10ee0:	muleq	r1, r4, r3
   10ee4:	andeq	r1, r1, ip, ror r1
   10ee8:	andeq	r2, r1, r4, lsr r3
   10eec:	ldr	r3, [pc, #20]	; 10f08 <_start@@Base+0x58>
   10ef0:	ldr	r2, [pc, #20]	; 10f0c <_start@@Base+0x5c>
   10ef4:	add	r3, pc, r3
   10ef8:	ldr	r2, [r3, r2]
   10efc:	cmp	r2, #0
   10f00:	bxeq	lr
   10f04:	b	10e50 <__gmon_start__@plt>
   10f08:	andeq	r2, r1, r4, lsl #2
   10f0c:	andeq	r0, r0, r8, asr r0
   10f10:	ldr	r0, [pc, #24]	; 10f30 <_start@@Base+0x80>
   10f14:	ldr	r3, [pc, #24]	; 10f34 <_start@@Base+0x84>
   10f18:	cmp	r3, r0
   10f1c:	bxeq	lr
   10f20:	ldr	r3, [pc, #16]	; 10f38 <_start@@Base+0x88>
   10f24:	cmp	r3, #0
   10f28:	bxeq	lr
   10f2c:	bx	r3
   10f30:	andeq	r3, r2, r4, rrx
   10f34:	andeq	r3, r2, r4, rrx
   10f38:	andeq	r0, r0, r0
   10f3c:	ldr	r0, [pc, #36]	; 10f68 <_start@@Base+0xb8>
   10f40:	ldr	r1, [pc, #36]	; 10f6c <_start@@Base+0xbc>
   10f44:	sub	r1, r1, r0
   10f48:	asr	r1, r1, #2
   10f4c:	add	r1, r1, r1, lsr #31
   10f50:	asrs	r1, r1, #1
   10f54:	bxeq	lr
   10f58:	ldr	r3, [pc, #16]	; 10f70 <_start@@Base+0xc0>
   10f5c:	cmp	r3, #0
   10f60:	bxeq	lr
   10f64:	bx	r3
   10f68:	andeq	r3, r2, r4, rrx
   10f6c:	andeq	r3, r2, r4, rrx
   10f70:	andeq	r0, r0, r0
   10f74:	push	{r4, lr}
   10f78:	ldr	r4, [pc, #24]	; 10f98 <_start@@Base+0xe8>
   10f7c:	ldrb	r3, [r4]
   10f80:	cmp	r3, #0
   10f84:	popne	{r4, pc}
   10f88:	bl	10f10 <_start@@Base+0x60>
   10f8c:	mov	r3, #1
   10f90:	strb	r3, [r4]
   10f94:	pop	{r4, pc}
   10f98:	andeq	r3, r2, r4, rrx
   10f9c:	b	10f3c <_start@@Base+0x8c>

00010fa0 <descobre_caminho@@Base>:
   10fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fa4:	add	fp, sp, #28
   10fa8:	sub	sp, sp, #12
   10fac:	mov	r6, r3
   10fb0:	str	r2, [sp]
   10fb4:	mov	r5, r1
   10fb8:	mov	sl, r0
   10fbc:	bl	11e34 <lista_nova@@Base>
   10fc0:	mov	r4, r0
   10fc4:	add	r3, sp, #8
   10fc8:	mov	r0, sl
   10fcc:	mov	r1, r5
   10fd0:	mov	r5, r6
   10fd4:	mov	r2, r6
   10fd8:	bl	11894 <grafo_bfs@@Base>
   10fdc:	mov	r9, r0
   10fe0:	ldr	r0, [sp, #8]
   10fe4:	cmp	r0, #1
   10fe8:	blt	1102c <descobre_caminho@@Base+0x8c>
   10fec:	mov	r8, #0
   10ff0:	add	r7, sp, #5
   10ff4:	movw	r6, #9319	; 0x2467
   10ff8:	movt	r6, #1
   10ffc:	ldr	r2, [r9, r8, lsl #2]
   11000:	mov	r0, r7
   11004:	mov	r1, r6
   11008:	bl	10e8c <sprintf@plt>
   1100c:	mov	r0, r4
   11010:	mov	r1, r7
   11014:	mvn	r2, #0
   11018:	bl	11f94 <lista_insere@@Base>
   1101c:	add	r8, r8, #1
   11020:	ldr	r0, [sp, #8]
   11024:	cmp	r8, r0
   11028:	blt	10ffc <descobre_caminho@@Base+0x5c>
   1102c:	add	r3, sp, #8
   11030:	mov	r0, sl
   11034:	mov	r1, r5
   11038:	ldr	r2, [sp]
   1103c:	bl	11894 <grafo_bfs@@Base>
   11040:	mov	r6, r0
   11044:	ldr	r0, [sp, #8]
   11048:	cmp	r0, #2
   1104c:	blt	11090 <descobre_caminho@@Base+0xf0>
   11050:	mov	r5, #1
   11054:	add	r7, sp, #5
   11058:	movw	r8, #9319	; 0x2467
   1105c:	movt	r8, #1
   11060:	ldr	r2, [r6, r5, lsl #2]
   11064:	mov	r0, r7
   11068:	mov	r1, r8
   1106c:	bl	10e8c <sprintf@plt>
   11070:	mov	r0, r4
   11074:	mov	r1, r7
   11078:	mvn	r2, #0
   1107c:	bl	11f94 <lista_insere@@Base>
   11080:	add	r5, r5, #1
   11084:	ldr	r0, [sp, #8]
   11088:	cmp	r5, r0
   1108c:	blt	11060 <descobre_caminho@@Base+0xc0>
   11090:	mov	r0, r6
   11094:	bl	10e08 <free@plt>
   11098:	mov	r0, r9
   1109c:	bl	10e08 <free@plt>
   110a0:	mov	r0, r4
   110a4:	sub	sp, fp, #28
   110a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000110ac <simula_acontecimentos@@Base>:
   110ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   110b0:	add	fp, sp, #24
   110b4:	sub	sp, sp, #24
   110b8:	mov	r9, r0
   110bc:	mov	r0, #0
   110c0:	cmp	r2, #20
   110c4:	bgt	11174 <simula_acontecimentos@@Base+0xc8>
   110c8:	mov	r4, r2
   110cc:	mov	r8, r1
   110d0:	mov	r0, r2
   110d4:	bl	11a08 <heap_nova@@Base>
   110d8:	mov	r5, r0
   110dc:	cmp	r4, #1
   110e0:	blt	11168 <simula_acontecimentos@@Base+0xbc>
   110e4:	mov	r6, #0
   110e8:	add	r7, sp, #4
   110ec:	mov	r0, r9
   110f0:	mov	r1, r6
   110f4:	bl	11eb4 <lista_elemento@@Base>
   110f8:	mov	r1, r0
   110fc:	mov	r0, r7
   11100:	bl	10e20 <strcpy@plt>
   11104:	mov	r0, r8
   11108:	mov	r1, r6
   1110c:	bl	11eb4 <lista_elemento@@Base>
   11110:	bl	10e98 <atoi@plt>
   11114:	mov	r2, r0
   11118:	mov	r0, r5
   1111c:	mov	r1, r7
   11120:	bl	11b44 <heap_insere@@Base>
   11124:	add	r6, r6, #1
   11128:	cmp	r4, r6
   1112c:	bne	110ec <simula_acontecimentos@@Base+0x40>
   11130:	cmp	r4, #1
   11134:	blt	11168 <simula_acontecimentos@@Base+0xbc>
   11138:	mov	r6, #0
   1113c:	movw	r7, #9124	; 0x23a4
   11140:	movt	r7, #1
   11144:	ldr	r0, [r5, #8]
   11148:	ldr	r0, [r0, r6, lsl #2]
   1114c:	ldr	r2, [r0, #4]
   11150:	add	r6, r6, #1
   11154:	mov	r0, r7
   11158:	mov	r1, r6
   1115c:	bl	10de4 <printf@plt>
   11160:	cmp	r4, r6
   11164:	bne	11144 <simula_acontecimentos@@Base+0x98>
   11168:	mov	r0, r5
   1116c:	bl	11a64 <heap_apaga@@Base>
   11170:	mov	r0, #1
   11174:	sub	sp, fp, #24
   11178:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001117c <main@@Base>:
   1117c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11180:	add	fp, sp, #24
   11184:	sub	sp, sp, #32
   11188:	movw	r0, #9216	; 0x2400
   1118c:	movt	r0, #1
   11190:	bl	10e2c <puts@plt>
   11194:	mov	r0, #8
   11198:	mov	r1, #1
   1119c:	bl	113fc <grafo_novo@@Base>
   111a0:	mov	r4, r0
   111a4:	mov	r1, #1
   111a8:	mov	r2, #3
   111ac:	bl	114d4 <grafo_adiciona@@Base>
   111b0:	mov	r0, r4
   111b4:	mov	r1, #2
   111b8:	mov	r2, #3
   111bc:	bl	114d4 <grafo_adiciona@@Base>
   111c0:	mov	r0, r4
   111c4:	mov	r1, #2
   111c8:	mov	r2, #4
   111cc:	bl	114d4 <grafo_adiciona@@Base>
   111d0:	mov	r0, r4
   111d4:	mov	r1, #2
   111d8:	mov	r2, #5
   111dc:	bl	114d4 <grafo_adiciona@@Base>
   111e0:	mov	r0, r4
   111e4:	mov	r1, #3
   111e8:	mov	r2, #2
   111ec:	bl	114d4 <grafo_adiciona@@Base>
   111f0:	mov	r0, r4
   111f4:	mov	r1, #3
   111f8:	mov	r2, #4
   111fc:	bl	114d4 <grafo_adiciona@@Base>
   11200:	mov	r0, r4
   11204:	mov	r1, #4
   11208:	mov	r2, #6
   1120c:	bl	114d4 <grafo_adiciona@@Base>
   11210:	mov	r0, r4
   11214:	mov	r1, #4
   11218:	mov	r2, #7
   1121c:	bl	114d4 <grafo_adiciona@@Base>
   11220:	mov	r0, r4
   11224:	mov	r1, #5
   11228:	mov	r2, #4
   1122c:	bl	114d4 <grafo_adiciona@@Base>
   11230:	mov	r0, r4
   11234:	mov	r1, #5
   11238:	mov	r2, #6
   1123c:	bl	114d4 <grafo_adiciona@@Base>
   11240:	mov	r0, r4
   11244:	mov	r1, #5
   11248:	mov	r2, #7
   1124c:	bl	114d4 <grafo_adiciona@@Base>
   11250:	mov	r0, r4
   11254:	mov	r1, #6
   11258:	mov	r2, #7
   1125c:	bl	114d4 <grafo_adiciona@@Base>
   11260:	mov	r0, r4
   11264:	mov	r1, #1
   11268:	mov	r2, #7
   1126c:	mov	r3, #5
   11270:	bl	10fa0 <descobre_caminho@@Base>
   11274:	mov	r5, r0
   11278:	movw	r0, #9132	; 0x23ac
   1127c:	movt	r0, #1
   11280:	bl	10de4 <printf@plt>
   11284:	mov	r0, r5
   11288:	bl	11ea4 <lista_tamanho@@Base>
   1128c:	cmp	r0, #1
   11290:	blt	112cc <main@@Base+0x150>
   11294:	mov	r6, #0
   11298:	movw	r7, #9208	; 0x23f8
   1129c:	movt	r7, #1
   112a0:	mov	r0, r5
   112a4:	mov	r1, r6
   112a8:	bl	11eb4 <lista_elemento@@Base>
   112ac:	mov	r1, r0
   112b0:	mov	r0, r7
   112b4:	bl	10de4 <printf@plt>
   112b8:	add	r6, r6, #1
   112bc:	mov	r0, r5
   112c0:	bl	11ea4 <lista_tamanho@@Base>
   112c4:	cmp	r6, r0
   112c8:	blt	112a0 <main@@Base+0x124>
   112cc:	movw	r0, #9335	; 0x2477
   112d0:	movt	r0, #1
   112d4:	bl	10e2c <puts@plt>
   112d8:	mov	r0, r4
   112dc:	bl	1145c <grafo_apaga@@Base>
   112e0:	mov	r0, r5
   112e4:	bl	11e5c <lista_apaga@@Base>
   112e8:	movw	r0, #9248	; 0x2420
   112ec:	movt	r0, #1
   112f0:	bl	10e2c <puts@plt>
   112f4:	movw	r0, #9193	; 0x23e9
   112f8:	movt	r0, #1
   112fc:	movw	r1, #9203	; 0x23f3
   11300:	movt	r1, #1
   11304:	bl	10dfc <fopen@plt>
   11308:	mov	r8, r0
   1130c:	bl	11e34 <lista_nova@@Base>
   11310:	mov	r5, r0
   11314:	bl	11e34 <lista_nova@@Base>
   11318:	mov	r6, r0
   1131c:	movw	r1, #9205	; 0x23f5
   11320:	movt	r1, #1
   11324:	add	r2, sp, #11
   11328:	add	r3, sp, #6
   1132c:	mov	r0, r8
   11330:	bl	10df0 <__isoc99_fscanf@plt>
   11334:	cmp	r0, #2
   11338:	bne	11388 <main@@Base+0x20c>
   1133c:	add	r7, sp, #11
   11340:	add	r4, sp, #6
   11344:	movw	r9, #9205	; 0x23f5
   11348:	movt	r9, #1
   1134c:	mov	r0, r5
   11350:	mov	r1, r7
   11354:	mvn	r2, #0
   11358:	bl	11f94 <lista_insere@@Base>
   1135c:	mov	r0, r6
   11360:	mov	r1, r4
   11364:	mvn	r2, #0
   11368:	bl	11f94 <lista_insere@@Base>
   1136c:	mov	r0, r8
   11370:	mov	r1, r9
   11374:	mov	r2, r7
   11378:	mov	r3, r4
   1137c:	bl	10df0 <__isoc99_fscanf@plt>
   11380:	cmp	r0, #2
   11384:	beq	1134c <main@@Base+0x1d0>
   11388:	mov	r0, r5
   1138c:	mov	r1, r6
   11390:	mov	r2, #4
   11394:	bl	110ac <simula_acontecimentos@@Base>
   11398:	cmp	r0, #0
   1139c:	bne	113ac <main@@Base+0x230>
   113a0:	movw	r0, #9280	; 0x2440
   113a4:	movt	r0, #1
   113a8:	bl	10e2c <puts@plt>
   113ac:	mov	r0, r5
   113b0:	bl	11e5c <lista_apaga@@Base>
   113b4:	mov	r0, r6
   113b8:	bl	11e5c <lista_apaga@@Base>
   113bc:	mov	r0, r8
   113c0:	bl	10e80 <fclose@plt>
   113c4:	mov	r0, #0
   113c8:	sub	sp, fp, #24
   113cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000113d0 <cria_no@@Base>:
   113d0:	push	{r4, sl, fp, lr}
   113d4:	add	fp, sp, #8
   113d8:	mov	r4, r0
   113dc:	mov	r0, #8
   113e0:	bl	10e38 <malloc@plt>
   113e4:	cmp	r0, #0
   113e8:	moveq	r0, #0
   113ec:	movne	r1, #0
   113f0:	strne	r4, [r0]
   113f4:	strne	r1, [r0, #4]
   113f8:	pop	{r4, sl, fp, pc}

000113fc <grafo_novo@@Base>:
   113fc:	push	{r4, r5, r6, sl, fp, lr}
   11400:	add	fp, sp, #16
   11404:	mov	r6, r1
   11408:	mov	r5, r0
   1140c:	mov	r0, #12
   11410:	bl	10e38 <malloc@plt>
   11414:	cmp	r0, #0
   11418:	beq	11450 <grafo_novo@@Base+0x54>
   1141c:	mov	r4, r0
   11420:	str	r6, [r0]
   11424:	str	r5, [r0, #4]
   11428:	mov	r0, r5
   1142c:	mov	r1, #8
   11430:	bl	10dcc <calloc@plt>
   11434:	str	r0, [r4, #8]
   11438:	cmp	r0, #0
   1143c:	beq	11448 <grafo_novo@@Base+0x4c>
   11440:	mov	r0, r4
   11444:	pop	{r4, r5, r6, sl, fp, pc}
   11448:	mov	r0, r4
   1144c:	bl	10e08 <free@plt>
   11450:	mov	r4, #0
   11454:	mov	r0, r4
   11458:	pop	{r4, r5, r6, sl, fp, pc}

0001145c <grafo_apaga@@Base>:
   1145c:	cmp	r0, #0
   11460:	bxeq	lr
   11464:	push	{r4, r5, fp, lr}
   11468:	add	fp, sp, #8
   1146c:	mov	r4, r0
   11470:	ldr	r0, [r0, #8]
   11474:	cmp	r0, #0
   11478:	beq	114c8 <grafo_apaga@@Base+0x6c>
   1147c:	ldr	r0, [r4, #4]
   11480:	cmp	r0, #1
   11484:	blt	114c0 <grafo_apaga@@Base+0x64>
   11488:	mov	r5, #0
   1148c:	b	1149c <grafo_apaga@@Base+0x40>
   11490:	ldr	r2, [r0, #4]
   11494:	str	r2, [r1]
   11498:	bl	10e08 <free@plt>
   1149c:	ldr	r0, [r4, #8]
   114a0:	add	r1, r0, r5, lsl #3
   114a4:	ldr	r0, [r1, #4]!
   114a8:	cmp	r0, #0
   114ac:	bne	11490 <grafo_apaga@@Base+0x34>
   114b0:	ldr	r0, [r4, #4]
   114b4:	add	r5, r5, #1
   114b8:	cmp	r5, r0
   114bc:	blt	1149c <grafo_apaga@@Base+0x40>
   114c0:	ldr	r0, [r4, #8]
   114c4:	bl	10e08 <free@plt>
   114c8:	mov	r0, r4
   114cc:	pop	{r4, r5, fp, lr}
   114d0:	b	10e08 <free@plt>

000114d4 <grafo_adiciona@@Base>:
   114d4:	push	{r4, r5, r6, sl, fp, lr}
   114d8:	add	fp, sp, #16
   114dc:	cmp	r0, #0
   114e0:	beq	114fc <grafo_adiciona@@Base+0x28>
   114e4:	mov	r4, r2
   114e8:	mov	r6, r1
   114ec:	mov	r5, r0
   114f0:	bl	11560 <grafo_existe@@Base>
   114f4:	cmp	r0, #0
   114f8:	beq	11500 <grafo_adiciona@@Base+0x2c>
   114fc:	pop	{r4, r5, r6, sl, fp, pc}
   11500:	mov	r0, r4
   11504:	bl	113d0 <cria_no@@Base>
   11508:	ldr	r1, [r5, #8]
   1150c:	add	r2, r1, r6, lsl #3
   11510:	ldr	r3, [r2, #4]
   11514:	str	r3, [r0, #4]
   11518:	ldr	r3, [r1, r6, lsl #3]
   1151c:	add	r3, r3, #1
   11520:	str	r3, [r1, r6, lsl #3]
   11524:	str	r0, [r2, #4]
   11528:	ldr	r0, [r5]
   1152c:	cmp	r0, #0
   11530:	popne	{r4, r5, r6, sl, fp, pc}
   11534:	mov	r0, r6
   11538:	bl	113d0 <cria_no@@Base>
   1153c:	ldr	r1, [r5, #8]
   11540:	add	r2, r1, r4, lsl #3
   11544:	ldr	r3, [r2, #4]
   11548:	str	r3, [r0, #4]
   1154c:	ldr	r3, [r1, r4, lsl #3]
   11550:	add	r3, r3, #1
   11554:	str	r3, [r1, r4, lsl #3]
   11558:	str	r0, [r2, #4]
   1155c:	pop	{r4, r5, r6, sl, fp, pc}

00011560 <grafo_existe@@Base>:
   11560:	mov	r3, r0
   11564:	mov	r0, #0
   11568:	cmp	r3, #0
   1156c:	beq	11594 <grafo_existe@@Base+0x34>
   11570:	ldr	r3, [r3, #8]
   11574:	add	r1, r3, r1, lsl #3
   11578:	ldr	r1, [r1, #4]
   1157c:	cmp	r1, #0
   11580:	bxeq	lr
   11584:	ldr	r3, [r1]
   11588:	cmp	r3, r2
   1158c:	bne	11578 <grafo_existe@@Base+0x18>
   11590:	mov	r0, #1
   11594:	bx	lr

00011598 <grafo_remove@@Base>:
   11598:	push	{r4, r5, r6, sl, fp, lr}
   1159c:	add	fp, sp, #16
   115a0:	cmp	r0, #0
   115a4:	beq	11614 <grafo_remove@@Base+0x7c>
   115a8:	mov	r4, r1
   115ac:	mov	r6, r0
   115b0:	ldr	r0, [r0, #8]
   115b4:	add	r1, r0, r1, lsl #3
   115b8:	ldr	r0, [r1, #4]!
   115bc:	cmp	r0, #0
   115c0:	beq	11614 <grafo_remove@@Base+0x7c>
   115c4:	mov	r5, r2
   115c8:	ldr	r2, [r0]
   115cc:	cmp	r2, r5
   115d0:	bne	115e0 <grafo_remove@@Base+0x48>
   115d4:	ldr	r2, [r0, #4]
   115d8:	str	r2, [r1]
   115dc:	b	11604 <grafo_remove@@Base+0x6c>
   115e0:	mov	r1, r0
   115e4:	ldr	r0, [r0, #4]
   115e8:	cmp	r0, #0
   115ec:	beq	11608 <grafo_remove@@Base+0x70>
   115f0:	ldr	r2, [r0]
   115f4:	cmp	r2, r5
   115f8:	bne	115e0 <grafo_remove@@Base+0x48>
   115fc:	ldr	r2, [r0, #4]
   11600:	str	r2, [r1, #4]
   11604:	bl	10e08 <free@plt>
   11608:	ldr	r0, [r6]
   1160c:	cmp	r0, #0
   11610:	beq	11618 <grafo_remove@@Base+0x80>
   11614:	pop	{r4, r5, r6, sl, fp, pc}
   11618:	ldr	r0, [r6, #8]
   1161c:	add	r1, r0, r5, lsl #3
   11620:	ldr	r0, [r1, #4]!
   11624:	ldr	r2, [r0]
   11628:	cmp	r2, r4
   1162c:	bne	11640 <grafo_remove@@Base+0xa8>
   11630:	ldr	r2, [r0, #4]
   11634:	str	r2, [r1]
   11638:	pop	{r4, r5, r6, sl, fp, lr}
   1163c:	b	10e08 <free@plt>
   11640:	mov	r1, r0
   11644:	ldr	r0, [r0, #4]
   11648:	cmp	r0, #0
   1164c:	popeq	{r4, r5, r6, sl, fp, pc}
   11650:	ldr	r2, [r0]
   11654:	cmp	r2, r4
   11658:	bne	11640 <grafo_remove@@Base+0xa8>
   1165c:	ldr	r2, [r0, #4]
   11660:	str	r2, [r1, #4]
   11664:	pop	{r4, r5, r6, sl, fp, lr}
   11668:	b	10e08 <free@plt>

0001166c <grafo_imprime@@Base>:
   1166c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11670:	add	fp, sp, #24
   11674:	mov	r4, r0
   11678:	ldr	r0, [r0, #4]
   1167c:	cmp	r0, #1
   11680:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   11684:	mov	r5, #0
   11688:	movw	r9, #9312	; 0x2460
   1168c:	movt	r9, #1
   11690:	movw	r8, #9319	; 0x2467
   11694:	movt	r8, #1
   11698:	movw	r7, #9317	; 0x2465
   1169c:	movt	r7, #1
   116a0:	ldr	r0, [r4, #8]
   116a4:	add	r0, r0, r5, lsl #3
   116a8:	ldr	r6, [r0, #4]
   116ac:	mov	r0, r9
   116b0:	mov	r1, r5
   116b4:	bl	10de4 <printf@plt>
   116b8:	cmp	r6, #0
   116bc:	beq	116e4 <grafo_imprime@@Base+0x78>
   116c0:	ldr	r1, [r6]
   116c4:	mov	r0, r8
   116c8:	b	116d4 <grafo_imprime@@Base+0x68>
   116cc:	ldr	r1, [r6]
   116d0:	mov	r0, r7
   116d4:	bl	10de4 <printf@plt>
   116d8:	ldr	r6, [r6, #4]
   116dc:	cmp	r6, #0
   116e0:	bne	116cc <grafo_imprime@@Base+0x60>
   116e4:	mov	r0, #10
   116e8:	bl	10e74 <putchar@plt>
   116ec:	add	r5, r5, #1
   116f0:	ldr	r0, [r4, #4]
   116f4:	cmp	r5, r0
   116f8:	blt	116a0 <grafo_imprime@@Base+0x34>
   116fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011700 <dfs_helper@@Base>:
   11700:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11704:	add	fp, sp, #24
   11708:	sub	sp, sp, #8
   1170c:	mov	r4, r1
   11710:	mov	r6, r0
   11714:	ldr	r9, [fp, #8]
   11718:	ldr	r1, [r9, r1, lsl #2]
   1171c:	mov	r0, #0
   11720:	cmp	r1, #0
   11724:	bne	117a4 <dfs_helper@@Base+0xa4>
   11728:	mov	r5, r2
   1172c:	str	r3, [r9, r4, lsl #2]
   11730:	cmp	r4, r2
   11734:	moveq	r0, r3
   11738:	subeq	sp, fp, #24
   1173c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   11740:	ldr	r0, [r6, #4]
   11744:	cmp	r0, #1
   11748:	blt	1179c <dfs_helper@@Base+0x9c>
   1174c:	add	r8, r3, #1
   11750:	mov	r7, #0
   11754:	mov	r0, r6
   11758:	mov	r1, r4
   1175c:	mov	r2, r7
   11760:	bl	11560 <grafo_existe@@Base>
   11764:	cmp	r0, #0
   11768:	beq	1178c <dfs_helper@@Base+0x8c>
   1176c:	str	r9, [sp]
   11770:	mov	r0, r6
   11774:	mov	r1, r7
   11778:	mov	r2, r5
   1177c:	mov	r3, r8
   11780:	bl	11700 <dfs_helper@@Base>
   11784:	cmp	r0, #0
   11788:	bne	117a4 <dfs_helper@@Base+0xa4>
   1178c:	ldr	r0, [r6, #4]
   11790:	add	r7, r7, #1
   11794:	cmp	r7, r0
   11798:	blt	11754 <dfs_helper@@Base+0x54>
   1179c:	mov	r0, #0
   117a0:	str	r0, [r9, r4, lsl #2]
   117a4:	sub	sp, fp, #24
   117a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000117ac <grafo_dfs@@Base>:
   117ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   117b0:	add	fp, sp, #24
   117b4:	sub	sp, sp, #8
   117b8:	cmp	r0, #0
   117bc:	beq	11870 <grafo_dfs@@Base+0xc4>
   117c0:	mov	r8, r3
   117c4:	mov	r4, r2
   117c8:	mov	r7, r1
   117cc:	mov	r5, r0
   117d0:	ldr	r0, [r0, #4]
   117d4:	mov	r1, #4
   117d8:	bl	10dcc <calloc@plt>
   117dc:	mov	r6, r0
   117e0:	str	r0, [sp]
   117e4:	mov	r0, r5
   117e8:	mov	r1, r7
   117ec:	mov	r2, r4
   117f0:	mov	r3, #1
   117f4:	bl	11700 <dfs_helper@@Base>
   117f8:	cmp	r0, #0
   117fc:	beq	11878 <grafo_dfs@@Base+0xcc>
   11800:	mov	r4, r0
   11804:	mov	r1, #4
   11808:	bl	10dcc <calloc@plt>
   1180c:	mov	r9, r0
   11810:	cmp	r4, #1
   11814:	blt	11860 <grafo_dfs@@Base+0xb4>
   11818:	ldr	r0, [r5, #4]
   1181c:	mov	r1, #0
   11820:	cmp	r0, #1
   11824:	blt	11854 <grafo_dfs@@Base+0xa8>
   11828:	add	r3, r1, #1
   1182c:	mov	r2, #0
   11830:	ldr	r7, [r6, r2, lsl #2]
   11834:	cmp	r7, r3
   11838:	beq	11850 <grafo_dfs@@Base+0xa4>
   1183c:	ldr	r7, [r5, #4]
   11840:	add	r2, r2, #1
   11844:	cmp	r2, r7
   11848:	blt	11830 <grafo_dfs@@Base+0x84>
   1184c:	b	11854 <grafo_dfs@@Base+0xa8>
   11850:	str	r2, [r9, r1, lsl #2]
   11854:	add	r1, r1, #1
   11858:	cmp	r1, r4
   1185c:	bne	11820 <grafo_dfs@@Base+0x74>
   11860:	str	r4, [r8]
   11864:	mov	r0, r6
   11868:	bl	10e08 <free@plt>
   1186c:	b	11888 <grafo_dfs@@Base+0xdc>
   11870:	mov	r9, #0
   11874:	b	11888 <grafo_dfs@@Base+0xdc>
   11878:	mov	r0, r6
   1187c:	bl	10e08 <free@plt>
   11880:	mov	r9, #0
   11884:	str	r9, [r8]
   11888:	mov	r0, r9
   1188c:	sub	sp, fp, #24
   11890:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011894 <grafo_bfs@@Base>:
   11894:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11898:	add	fp, sp, #28
   1189c:	sub	sp, sp, #12
   118a0:	cmp	r0, #0
   118a4:	beq	119d8 <grafo_bfs@@Base+0x144>
   118a8:	mov	r7, r1
   118ac:	mov	r4, r0
   118b0:	stm	sp, {r2, r3}
   118b4:	ldr	r6, [r0, #4]
   118b8:	mov	r0, r6
   118bc:	mov	r1, #4
   118c0:	bl	10dcc <calloc@plt>
   118c4:	mov	r5, r0
   118c8:	mov	r0, r6
   118cc:	mov	r1, #4
   118d0:	bl	10dcc <calloc@plt>
   118d4:	str	r0, [sp, #8]
   118d8:	cmp	r6, #1
   118dc:	blt	118f0 <grafo_bfs@@Base+0x5c>
   118e0:	lsl	r2, r6, #2
   118e4:	mov	r0, r5
   118e8:	mov	r1, #255	; 0xff
   118ec:	bl	10e68 <memset@plt>
   118f0:	str	r7, [r5, r7, lsl #2]
   118f4:	ldr	r0, [sp, #8]
   118f8:	str	r7, [r0]
   118fc:	mov	sl, #0
   11900:	mov	r9, #1
   11904:	mov	r0, sl
   11908:	add	r1, sl, #1
   1190c:	sdiv	r2, r1, r6
   11910:	mls	sl, r2, r6, r1
   11914:	cmp	r6, #1
   11918:	blt	11970 <grafo_bfs@@Base+0xdc>
   1191c:	ldr	r1, [sp, #8]
   11920:	ldr	r7, [r1, r0, lsl #2]
   11924:	mov	r8, #0
   11928:	mov	r0, r4
   1192c:	mov	r1, r7
   11930:	mov	r2, r8
   11934:	bl	11560 <grafo_existe@@Base>
   11938:	cmp	r0, #0
   1193c:	beq	11964 <grafo_bfs@@Base+0xd0>
   11940:	ldr	r0, [r5, r8, lsl #2]
   11944:	cmn	r0, #1
   11948:	bne	11964 <grafo_bfs@@Base+0xd0>
   1194c:	str	r7, [r5, r8, lsl #2]
   11950:	ldr	r0, [sp, #8]
   11954:	str	r8, [r0, r9, lsl #2]
   11958:	add	r0, r9, #1
   1195c:	sdiv	r1, r0, r6
   11960:	mls	r9, r1, r6, r0
   11964:	add	r8, r8, #1
   11968:	cmp	r6, r8
   1196c:	bne	11928 <grafo_bfs@@Base+0x94>
   11970:	cmp	sl, r9
   11974:	bne	11904 <grafo_bfs@@Base+0x70>
   11978:	ldr	r4, [sp]
   1197c:	ldr	r0, [r5, r4, lsl #2]
   11980:	cmp	r0, #0
   11984:	blt	119e0 <grafo_bfs@@Base+0x14c>
   11988:	mvn	r7, #3
   1198c:	mov	r6, #0
   11990:	mov	r0, r4
   11994:	ldr	r1, [r5, r0, lsl #2]
   11998:	add	r6, r6, #1
   1199c:	add	r7, r7, #4
   119a0:	cmp	r1, r0
   119a4:	mov	r0, r1
   119a8:	bne	11994 <grafo_bfs@@Base+0x100>
   119ac:	add	r0, r7, #4
   119b0:	bl	10e38 <malloc@plt>
   119b4:	mov	r8, r0
   119b8:	add	r0, r0, r7
   119bc:	mov	r1, #0
   119c0:	str	r4, [r0, -r1, lsl #2]
   119c4:	ldr	r4, [r5, r4, lsl #2]
   119c8:	add	r1, r1, #1
   119cc:	cmp	r6, r1
   119d0:	bne	119c0 <grafo_bfs@@Base+0x12c>
   119d4:	b	119e4 <grafo_bfs@@Base+0x150>
   119d8:	mov	r8, #0
   119dc:	b	119fc <grafo_bfs@@Base+0x168>
   119e0:	mov	r6, #0
   119e4:	ldr	r0, [sp, #8]
   119e8:	bl	10e08 <free@plt>
   119ec:	mov	r0, r5
   119f0:	bl	10e08 <free@plt>
   119f4:	ldr	r0, [sp, #4]
   119f8:	str	r6, [r0]
   119fc:	mov	r0, r8
   11a00:	sub	sp, fp, #28
   11a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011a08 <heap_nova@@Base>:
   11a08:	push	{r4, r5, fp, lr}
   11a0c:	add	fp, sp, #8
   11a10:	mov	r5, r0
   11a14:	mov	r0, #12
   11a18:	bl	10e38 <malloc@plt>
   11a1c:	cmp	r0, #0
   11a20:	beq	11a58 <heap_nova@@Base+0x50>
   11a24:	mov	r4, r0
   11a28:	mov	r0, #0
   11a2c:	stm	r4, {r0, r5}
   11a30:	mov	r0, r5
   11a34:	mov	r1, #4
   11a38:	bl	10dcc <calloc@plt>
   11a3c:	str	r0, [r4, #8]
   11a40:	cmp	r0, #0
   11a44:	beq	11a50 <heap_nova@@Base+0x48>
   11a48:	mov	r0, r4
   11a4c:	pop	{r4, r5, fp, pc}
   11a50:	mov	r0, r4
   11a54:	bl	10e08 <free@plt>
   11a58:	mov	r4, #0
   11a5c:	mov	r0, r4
   11a60:	pop	{r4, r5, fp, pc}

00011a64 <heap_apaga@@Base>:
   11a64:	cmp	r0, #0
   11a68:	bxeq	lr
   11a6c:	push	{r4, r5, r6, sl, fp, lr}
   11a70:	add	fp, sp, #16
   11a74:	mov	r4, r0
   11a78:	ldr	r1, [r0]
   11a7c:	ldr	r0, [r0, #8]
   11a80:	cmp	r1, #1
   11a84:	blt	11ac4 <heap_apaga@@Base+0x60>
   11a88:	mov	r5, #0
   11a8c:	mov	r6, #0
   11a90:	ldr	r0, [r0, r6, lsl #2]
   11a94:	ldr	r0, [r0, #4]
   11a98:	bl	10e08 <free@plt>
   11a9c:	ldr	r0, [r4, #8]
   11aa0:	ldr	r0, [r0, r6, lsl #2]
   11aa4:	bl	10e08 <free@plt>
   11aa8:	ldr	r0, [r4, #8]
   11aac:	str	r5, [r0, r6, lsl #2]
   11ab0:	add	r6, r6, #1
   11ab4:	ldr	r1, [r4]
   11ab8:	ldr	r0, [r4, #8]
   11abc:	cmp	r6, r1
   11ac0:	blt	11a90 <heap_apaga@@Base+0x2c>
   11ac4:	bl	10e08 <free@plt>
   11ac8:	mov	r0, r4
   11acc:	pop	{r4, r5, r6, sl, fp, lr}
   11ad0:	b	10e08 <free@plt>

00011ad4 <elemento_cria@@Base>:
   11ad4:	push	{r4, r5, r6, r7, fp, lr}
   11ad8:	add	fp, sp, #16
   11adc:	mov	r7, r1
   11ae0:	mov	r4, r0
   11ae4:	mov	r0, #8
   11ae8:	bl	10e38 <malloc@plt>
   11aec:	mov	r5, #0
   11af0:	cmp	r0, #0
   11af4:	beq	11b2c <elemento_cria@@Base+0x58>
   11af8:	mov	r6, r0
   11afc:	mov	r0, r7
   11b00:	bl	10e5c <strlen@plt>
   11b04:	add	r0, r0, #1
   11b08:	mov	r1, #1
   11b0c:	bl	10dcc <calloc@plt>
   11b10:	str	r0, [r6, #4]
   11b14:	cmp	r0, #0
   11b18:	beq	11b34 <elemento_cria@@Base+0x60>
   11b1c:	mov	r1, r7
   11b20:	bl	10e20 <strcpy@plt>
   11b24:	str	r4, [r6]
   11b28:	mov	r5, r6
   11b2c:	mov	r0, r5
   11b30:	pop	{r4, r5, r6, r7, fp, pc}
   11b34:	mov	r0, r6
   11b38:	bl	10e08 <free@plt>
   11b3c:	mov	r0, r5
   11b40:	pop	{r4, r5, r6, r7, fp, pc}

00011b44 <heap_insere@@Base>:
   11b44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11b48:	add	fp, sp, #24
   11b4c:	mov	r5, r0
   11b50:	ldr	r0, [r0]
   11b54:	ldr	r3, [r5, #4]
   11b58:	mov	r8, #0
   11b5c:	cmp	r0, r3
   11b60:	bge	11bd8 <heap_insere@@Base+0x94>
   11b64:	mov	r0, r2
   11b68:	bl	11ad4 <elemento_cria@@Base>
   11b6c:	cmp	r0, #0
   11b70:	beq	11bd8 <heap_insere@@Base+0x94>
   11b74:	ldr	r6, [r5]
   11b78:	ldr	r1, [r5, #8]
   11b7c:	str	r0, [r1, r6, lsl #2]
   11b80:	add	r0, r6, #1
   11b84:	str	r0, [r5]
   11b88:	mov	r8, #1
   11b8c:	cmp	r6, #0
   11b90:	beq	11bd8 <heap_insere@@Base+0x94>
   11b94:	ldr	r4, [r5, #8]
   11b98:	sub	r0, r6, #1
   11b9c:	add	r0, r0, r0, lsr #31
   11ba0:	asr	r7, r0, #1
   11ba4:	ldr	r1, [r4, r7, lsl #2]
   11ba8:	ldr	r0, [r4, r6, lsl #2]
   11bac:	bl	11be0 <menor_que@@Base>
   11bb0:	cmp	r0, #0
   11bb4:	beq	11bd8 <heap_insere@@Base+0x94>
   11bb8:	ldr	r0, [r4, r7, lsl #2]
   11bbc:	ldr	r1, [r4, r6, lsl #2]
   11bc0:	str	r1, [r4, r7, lsl #2]
   11bc4:	ldr	r1, [r5, #8]
   11bc8:	str	r0, [r1, r6, lsl #2]
   11bcc:	cmp	r6, #2
   11bd0:	mov	r6, r7
   11bd4:	bhi	11b94 <heap_insere@@Base+0x50>
   11bd8:	mov	r0, r8
   11bdc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011be0 <menor_que@@Base>:
   11be0:	mov	r2, r0
   11be4:	mov	r0, #0
   11be8:	cmp	r2, #0
   11bec:	cmpne	r1, #0
   11bf0:	bne	11bf8 <menor_que@@Base+0x18>
   11bf4:	bx	lr
   11bf8:	ldr	r1, [r1]
   11bfc:	ldr	r2, [r2]
   11c00:	mov	r0, #0
   11c04:	cmp	r2, r1
   11c08:	movwlt	r0, #1
   11c0c:	bx	lr

00011c10 <heap_remove@@Base>:
   11c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c14:	add	fp, sp, #28
   11c18:	sub	sp, sp, #4
   11c1c:	mov	r8, #0
   11c20:	cmp	r0, #0
   11c24:	beq	11cec <heap_remove@@Base+0xdc>
   11c28:	mov	r5, r0
   11c2c:	ldr	r0, [r0]
   11c30:	cmp	r0, #1
   11c34:	blt	11cec <heap_remove@@Base+0xdc>
   11c38:	ldr	r0, [r5, #8]
   11c3c:	ldr	r0, [r0]
   11c40:	ldr	r8, [r0, #4]
   11c44:	bl	10e08 <free@plt>
   11c48:	ldr	r1, [r5]
   11c4c:	ldr	r0, [r5, #8]
   11c50:	sub	sl, r1, #1
   11c54:	str	sl, [r5]
   11c58:	ldr	r2, [r0, sl, lsl #2]
   11c5c:	str	r2, [r0]
   11c60:	ldr	r2, [r5, #8]
   11c64:	mov	r0, #0
   11c68:	str	r0, [r2, sl, lsl #2]
   11c6c:	cmp	r1, #3
   11c70:	blt	11cec <heap_remove@@Base+0xdc>
   11c74:	mov	r9, #1
   11c78:	mov	r6, #1
   11c7c:	mov	r7, #0
   11c80:	add	r4, r0, #2
   11c84:	cmp	r4, sl
   11c88:	bge	11ca8 <heap_remove@@Base+0x98>
   11c8c:	ldr	r0, [r5, #8]
   11c90:	ldr	r1, [r0, r6, lsl #2]
   11c94:	ldr	r0, [r0, r4, lsl #2]
   11c98:	bl	11be0 <menor_que@@Base>
   11c9c:	cmp	r0, #0
   11ca0:	moveq	r4, r6
   11ca4:	b	11cac <heap_remove@@Base+0x9c>
   11ca8:	mov	r4, r6
   11cac:	ldr	r6, [r5, #8]
   11cb0:	ldr	r1, [r6, r7, lsl #2]
   11cb4:	ldr	r0, [r6, r4, lsl #2]
   11cb8:	bl	11be0 <menor_que@@Base>
   11cbc:	cmp	r0, #0
   11cc0:	beq	11cec <heap_remove@@Base+0xdc>
   11cc4:	ldr	r0, [r6, r4, lsl #2]
   11cc8:	ldr	r1, [r6, r7, lsl #2]
   11ccc:	str	r1, [r6, r4, lsl #2]
   11cd0:	ldr	r1, [r5, #8]
   11cd4:	str	r0, [r1, r7, lsl #2]
   11cd8:	orr	r6, r9, r4, lsl #1
   11cdc:	lsl	r0, r4, #1
   11ce0:	cmp	r6, sl
   11ce4:	mov	r7, r4
   11ce8:	blt	11c80 <heap_remove@@Base+0x70>
   11cec:	mov	r0, r8
   11cf0:	sub	sp, fp, #28
   11cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011cf8 <mostraHeap@@Base>:
   11cf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cfc:	add	fp, sp, #28
   11d00:	sub	sp, sp, #4
   11d04:	mov	r9, r0
   11d08:	ldr	r0, [r0]
   11d0c:	cmp	r0, r1
   11d10:	ble	11db8 <mostraHeap@@Base+0xc0>
   11d14:	mov	sl, r1
   11d18:	mov	r7, #0
   11d1c:	cmp	r1, #1
   11d20:	blt	11d44 <mostraHeap@@Base+0x4c>
   11d24:	mov	r0, sl
   11d28:	add	r7, r7, #1
   11d2c:	sub	r1, r0, #1
   11d30:	add	r1, r1, r1, lsr #31
   11d34:	asr	r1, r1, #1
   11d38:	cmp	r0, #2
   11d3c:	mov	r0, r1
   11d40:	bgt	11d28 <mostraHeap@@Base+0x30>
   11d44:	mov	r0, #1
   11d48:	orr	r1, r0, sl, lsl #1
   11d4c:	mov	r0, r9
   11d50:	bl	11cf8 <mostraHeap@@Base>
   11d54:	lsl	r8, sl, #1
   11d58:	cmp	r7, #0
   11d5c:	beq	11d84 <mostraHeap@@Base+0x8c>
   11d60:	add	r4, r7, r7, lsl #1
   11d64:	mov	r5, #0
   11d68:	movw	r6, #9322	; 0x246a
   11d6c:	movt	r6, #1
   11d70:	mov	r0, r6
   11d74:	bl	10de4 <printf@plt>
   11d78:	add	r5, r5, #1
   11d7c:	cmp	r5, r4
   11d80:	bcc	11d70 <mostraHeap@@Base+0x78>
   11d84:	ldr	r0, [r9, #8]
   11d88:	ldr	r0, [r0, sl, lsl #2]
   11d8c:	ldr	r2, [r0]
   11d90:	ldr	r1, [r0, #4]
   11d94:	movw	r0, #9328	; 0x2470
   11d98:	movt	r0, #1
   11d9c:	bl	10de4 <printf@plt>
   11da0:	add	r1, r8, #2
   11da4:	mov	r0, r9
   11da8:	bl	11cf8 <mostraHeap@@Base>
   11dac:	cmp	r7, #0
   11db0:	subne	sp, fp, #28
   11db4:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11db8:	mov	r0, #10
   11dbc:	sub	sp, fp, #28
   11dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dc4:	b	10e74 <putchar@plt>

00011dc8 <novo_str@@Base>:
   11dc8:	push	{r4, r5, r6, sl, fp, lr}
   11dcc:	add	fp, sp, #16
   11dd0:	mov	r6, r0
   11dd4:	mov	r0, #8
   11dd8:	bl	10e38 <malloc@plt>
   11ddc:	mov	r5, #0
   11de0:	cmp	r0, #0
   11de4:	beq	11e1c <novo_str@@Base+0x54>
   11de8:	mov	r4, r0
   11dec:	mov	r0, r6
   11df0:	bl	10e5c <strlen@plt>
   11df4:	add	r0, r0, #1
   11df8:	bl	10e38 <malloc@plt>
   11dfc:	str	r0, [r4]
   11e00:	cmp	r0, #0
   11e04:	beq	11e24 <novo_str@@Base+0x5c>
   11e08:	mov	r1, r6
   11e0c:	bl	10e20 <strcpy@plt>
   11e10:	mov	r0, #0
   11e14:	str	r0, [r4, #4]
   11e18:	mov	r5, r4
   11e1c:	mov	r0, r5
   11e20:	pop	{r4, r5, r6, sl, fp, pc}
   11e24:	mov	r0, r4
   11e28:	bl	10e08 <free@plt>
   11e2c:	mov	r0, r5
   11e30:	pop	{r4, r5, r6, sl, fp, pc}

00011e34 <lista_nova@@Base>:
   11e34:	push	{fp, lr}
   11e38:	mov	fp, sp
   11e3c:	mov	r0, #8
   11e40:	bl	10e38 <malloc@plt>
   11e44:	cmp	r0, #0
   11e48:	moveq	r0, #0
   11e4c:	movne	r1, #0
   11e50:	strne	r1, [r0]
   11e54:	strne	r1, [r0, #4]
   11e58:	pop	{fp, pc}

00011e5c <lista_apaga@@Base>:
   11e5c:	cmp	r0, #0
   11e60:	bxeq	lr
   11e64:	push	{r4, r5, fp, lr}
   11e68:	add	fp, sp, #8
   11e6c:	mov	r4, r0
   11e70:	b	11e8c <lista_apaga@@Base+0x30>
   11e74:	ldr	r0, [r5, #4]
   11e78:	str	r0, [r4]
   11e7c:	ldr	r0, [r5]
   11e80:	bl	10e08 <free@plt>
   11e84:	mov	r0, r5
   11e88:	bl	10e08 <free@plt>
   11e8c:	ldr	r5, [r4]
   11e90:	cmp	r5, #0
   11e94:	bne	11e74 <lista_apaga@@Base+0x18>
   11e98:	mov	r0, r4
   11e9c:	pop	{r4, r5, fp, lr}
   11ea0:	b	10e08 <free@plt>

00011ea4 <lista_tamanho@@Base>:
   11ea4:	cmp	r0, #0
   11ea8:	ldrne	r0, [r0, #4]
   11eac:	mvneq	r0, #0
   11eb0:	bx	lr

00011eb4 <lista_elemento@@Base>:
   11eb4:	mov	r2, r0
   11eb8:	mov	r0, #0
   11ebc:	cmp	r2, #0
   11ec0:	beq	11f04 <lista_elemento@@Base+0x50>
   11ec4:	cmp	r1, #0
   11ec8:	bxlt	lr
   11ecc:	ldr	r2, [r2]
   11ed0:	cmp	r1, #1
   11ed4:	blt	11efc <lista_elemento@@Base+0x48>
   11ed8:	cmp	r2, #0
   11edc:	beq	11efc <lista_elemento@@Base+0x48>
   11ee0:	mov	r3, #1
   11ee4:	ldr	r2, [r2, #4]
   11ee8:	cmp	r3, r1
   11eec:	bge	11efc <lista_elemento@@Base+0x48>
   11ef0:	add	r3, r3, #1
   11ef4:	cmp	r2, #0
   11ef8:	bne	11ee4 <lista_elemento@@Base+0x30>
   11efc:	cmp	r2, #0
   11f00:	ldrne	r0, [r2]
   11f04:	bx	lr

00011f08 <lista_atribui@@Base>:
   11f08:	push	{r4, r5, r6, r7, fp, lr}
   11f0c:	add	fp, sp, #16
   11f10:	mov	r4, r1
   11f14:	mov	r1, r0
   11f18:	mvn	r0, #0
   11f1c:	cmp	r1, #0
   11f20:	beq	11f90 <lista_atribui@@Base+0x88>
   11f24:	cmp	r4, #0
   11f28:	blt	11f90 <lista_atribui@@Base+0x88>
   11f2c:	mov	r5, r2
   11f30:	ldr	r7, [r1]
   11f34:	cmp	r4, #1
   11f38:	blt	11f60 <lista_atribui@@Base+0x58>
   11f3c:	cmp	r7, #0
   11f40:	beq	11f60 <lista_atribui@@Base+0x58>
   11f44:	mov	r1, #1
   11f48:	ldr	r7, [r7, #4]
   11f4c:	cmp	r1, r4
   11f50:	bge	11f60 <lista_atribui@@Base+0x58>
   11f54:	add	r1, r1, #1
   11f58:	cmp	r7, #0
   11f5c:	bne	11f48 <lista_atribui@@Base+0x40>
   11f60:	cmp	r7, #0
   11f64:	popeq	{r4, r5, r6, r7, fp, pc}
   11f68:	ldr	r6, [r7]
   11f6c:	mov	r0, r5
   11f70:	bl	10e5c <strlen@plt>
   11f74:	add	r1, r0, #1
   11f78:	mov	r0, r6
   11f7c:	bl	10e14 <realloc@plt>
   11f80:	str	r0, [r7]
   11f84:	mov	r1, r5
   11f88:	bl	10e20 <strcpy@plt>
   11f8c:	mov	r0, r4
   11f90:	pop	{r4, r5, r6, r7, fp, pc}

00011f94 <lista_insere@@Base>:
   11f94:	push	{r4, r5, r6, r7, fp, lr}
   11f98:	add	fp, sp, #16
   11f9c:	mvn	r4, #0
   11fa0:	cmp	r0, #0
   11fa4:	beq	12008 <lista_insere@@Base+0x74>
   11fa8:	mov	r5, r2
   11fac:	cmn	r2, #1
   11fb0:	blt	12008 <lista_insere@@Base+0x74>
   11fb4:	mov	r6, r0
   11fb8:	cmp	r5, #0
   11fbc:	beq	11fcc <lista_insere@@Base+0x38>
   11fc0:	ldr	r0, [r6, #4]
   11fc4:	cmp	r0, r5
   11fc8:	ble	12008 <lista_insere@@Base+0x74>
   11fcc:	ldr	r7, [r6]
   11fd0:	mov	r0, r1
   11fd4:	bl	11dc8 <novo_str@@Base>
   11fd8:	cmp	r0, #0
   11fdc:	beq	12008 <lista_insere@@Base+0x74>
   11fe0:	ldr	r4, [r6, #4]
   11fe4:	add	r1, r4, #1
   11fe8:	str	r1, [r6, #4]
   11fec:	cmn	r5, #1
   11ff0:	beq	12010 <lista_insere@@Base+0x7c>
   11ff4:	cmp	r5, #0
   11ff8:	bne	1203c <lista_insere@@Base+0xa8>
   11ffc:	str	r7, [r0, #4]
   12000:	str	r0, [r6]
   12004:	mov	r4, #0
   12008:	mov	r0, r4
   1200c:	pop	{r4, r5, r6, r7, fp, pc}
   12010:	cmp	r7, #0
   12014:	streq	r0, [r6]
   12018:	moveq	r0, r4
   1201c:	popeq	{r4, r5, r6, r7, fp, pc}
   12020:	mov	r1, r7
   12024:	ldr	r7, [r7, #4]
   12028:	cmp	r7, #0
   1202c:	bne	12020 <lista_insere@@Base+0x8c>
   12030:	str	r0, [r1, #4]
   12034:	mov	r0, r4
   12038:	pop	{r4, r5, r6, r7, fp, pc}
   1203c:	sub	r1, r5, #1
   12040:	mov	r2, #0
   12044:	mov	r3, r7
   12048:	ldr	r7, [r7, #4]
   1204c:	cmp	r2, r1
   12050:	bge	12060 <lista_insere@@Base+0xcc>
   12054:	add	r2, r2, #1
   12058:	cmp	r3, #0
   1205c:	bne	12044 <lista_insere@@Base+0xb0>
   12060:	str	r7, [r0, #4]
   12064:	str	r0, [r3, #4]
   12068:	mov	r0, r5
   1206c:	pop	{r4, r5, r6, r7, fp, pc}

00012070 <lista_remove@@Base>:
   12070:	push	{r4, r5, fp, lr}
   12074:	add	fp, sp, #8
   12078:	mov	r2, r0
   1207c:	mvn	r0, #0
   12080:	cmp	r2, #0
   12084:	popeq	{r4, r5, fp, pc}
   12088:	cmp	r1, #0
   1208c:	ldrge	r3, [r2, #4]
   12090:	cmpge	r3, r1
   12094:	bgt	1209c <lista_remove@@Base+0x2c>
   12098:	pop	{r4, r5, fp, pc}
   1209c:	sub	r0, r3, #1
   120a0:	str	r0, [r2, #4]
   120a4:	ldr	r5, [r2]
   120a8:	cmp	r1, #0
   120ac:	beq	120dc <lista_remove@@Base+0x6c>
   120b0:	mov	r2, #0
   120b4:	mov	r0, r5
   120b8:	add	r2, r2, #1
   120bc:	ldr	r5, [r5, #4]
   120c0:	cmp	r2, r1
   120c4:	bge	120e8 <lista_remove@@Base+0x78>
   120c8:	mov	r3, r5
   120cc:	ldr	r4, [r3, #4]!
   120d0:	cmp	r4, #0
   120d4:	bne	120b4 <lista_remove@@Base+0x44>
   120d8:	b	120ec <lista_remove@@Base+0x7c>
   120dc:	ldr	r0, [r5, #4]
   120e0:	str	r0, [r2]
   120e4:	b	120f4 <lista_remove@@Base+0x84>
   120e8:	add	r3, r5, #4
   120ec:	ldr	r1, [r3]
   120f0:	str	r1, [r0, #4]
   120f4:	ldr	r0, [r5]
   120f8:	bl	10e08 <free@plt>
   120fc:	mov	r0, r5
   12100:	bl	10e08 <free@plt>
   12104:	mov	r0, #0
   12108:	pop	{r4, r5, fp, pc}

0001210c <lista_pesquisa@@Base>:
   1210c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12110:	add	fp, sp, #24
   12114:	mvn	r8, #0
   12118:	cmp	r0, #0
   1211c:	ldrne	r7, [r0]
   12120:	cmpne	r7, #0
   12124:	beq	12178 <lista_pesquisa@@Base+0x6c>
   12128:	mov	r4, r2
   1212c:	mov	r6, r1
   12130:	mov	r5, #0
   12134:	mvn	r8, #0
   12138:	ldr	r0, [r7]
   1213c:	mov	r1, r6
   12140:	bl	10dd8 <strcmp@plt>
   12144:	cmp	r0, #0
   12148:	bne	12168 <lista_pesquisa@@Base+0x5c>
   1214c:	cmn	r4, #1
   12150:	beq	12164 <lista_pesquisa@@Base+0x58>
   12154:	cmp	r4, #0
   12158:	moveq	r0, r5
   1215c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12160:	b	12168 <lista_pesquisa@@Base+0x5c>
   12164:	mov	r8, r5
   12168:	add	r5, r5, #1
   1216c:	ldr	r7, [r7, #4]
   12170:	cmp	r7, #0
   12174:	bne	12138 <lista_pesquisa@@Base+0x2c>
   12178:	mov	r0, r8
   1217c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012180 <lista_ordena@@Base>:
   12180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12184:	add	fp, sp, #28
   12188:	sub	sp, sp, #4
   1218c:	cmp	r0, #0
   12190:	mvneq	r0, #0
   12194:	subeq	sp, fp, #28
   12198:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1219c:	mov	r9, r0
   121a0:	ldr	r4, [r0]
   121a4:	b	121ac <lista_ordena@@Base+0x2c>
   121a8:	mov	r4, r7
   121ac:	mov	r5, r4
   121b0:	ldr	r7, [r5, #4]!
   121b4:	cmp	r7, #0
   121b8:	beq	12248 <lista_ordena@@Base+0xc8>
   121bc:	ldr	r6, [r7]
   121c0:	ldr	r0, [r4]
   121c4:	mov	r1, r6
   121c8:	bl	10dd8 <strcmp@plt>
   121cc:	cmp	r0, #1
   121d0:	blt	121a8 <lista_ordena@@Base+0x28>
   121d4:	ldr	r0, [r7, #4]
   121d8:	str	r0, [r5]
   121dc:	ldr	r0, [r7, #4]
   121e0:	cmp	r0, r4
   121e4:	beq	121ac <lista_ordena@@Base+0x2c>
   121e8:	ldr	sl, [r9]
   121ec:	ldr	r0, [sl]
   121f0:	mov	r1, r6
   121f4:	bl	10dd8 <strcmp@plt>
   121f8:	cmp	r0, #0
   121fc:	mov	r0, sl
   12200:	mov	r5, sl
   12204:	bgt	12234 <lista_ordena@@Base+0xb4>
   12208:	ldr	r0, [r7, #4]
   1220c:	cmp	r0, r4
   12210:	beq	121ac <lista_ordena@@Base+0x2c>
   12214:	ldr	r8, [r5, #4]
   12218:	ldr	r0, [r8]
   1221c:	mov	r1, r6
   12220:	bl	10dd8 <strcmp@plt>
   12224:	cmp	r0, #1
   12228:	mov	r0, r5
   1222c:	mov	r5, r8
   12230:	blt	12208 <lista_ordena@@Base+0x88>
   12234:	str	r5, [r7, #4]
   12238:	cmp	r5, sl
   1223c:	strne	r7, [r0, #4]
   12240:	streq	r7, [r9]
   12244:	b	121ac <lista_ordena@@Base+0x2c>
   12248:	mov	r0, #0
   1224c:	sub	sp, fp, #28
   12250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012254 <lista_compara@@Base>:
   12254:	push	{r4, r5, r6, sl, fp, lr}
   12258:	add	fp, sp, #16
   1225c:	mvn	r4, #0
   12260:	cmp	r0, #0
   12264:	cmpne	r1, #0
   12268:	bne	12274 <lista_compara@@Base+0x20>
   1226c:	mov	r0, r4
   12270:	pop	{r4, r5, r6, sl, fp, pc}
   12274:	ldr	r2, [r1, #4]
   12278:	ldr	r3, [r0, #4]
   1227c:	mov	r4, #0
   12280:	cmp	r3, r2
   12284:	bne	1226c <lista_compara@@Base+0x18>
   12288:	ldr	r6, [r0]
   1228c:	ldr	r5, [r1]
   12290:	cmp	r6, #0
   12294:	bne	122ac <lista_compara@@Base+0x58>
   12298:	b	122c4 <lista_compara@@Base+0x70>
   1229c:	ldr	r6, [r6, #4]
   122a0:	ldr	r5, [r5, #4]
   122a4:	cmp	r6, #0
   122a8:	beq	122c4 <lista_compara@@Base+0x70>
   122ac:	ldr	r1, [r5]
   122b0:	ldr	r0, [r6]
   122b4:	bl	10dd8 <strcmp@plt>
   122b8:	cmp	r0, #0
   122bc:	beq	1229c <lista_compara@@Base+0x48>
   122c0:	b	1226c <lista_compara@@Base+0x18>
   122c4:	mvn	r4, #0
   122c8:	cmp	r5, #0
   122cc:	movweq	r4, #1
   122d0:	mov	r0, r4
   122d4:	pop	{r4, r5, r6, sl, fp, pc}

000122d8 <lista_inverte@@Base>:
   122d8:	push	{r4, r5, r6, sl, fp, lr}
   122dc:	add	fp, sp, #16
   122e0:	mov	r5, #0
   122e4:	cmp	r0, #0
   122e8:	beq	1232c <lista_inverte@@Base+0x54>
   122ec:	mov	r6, r0
   122f0:	bl	11e34 <lista_nova@@Base>
   122f4:	cmp	r0, #0
   122f8:	beq	1232c <lista_inverte@@Base+0x54>
   122fc:	mov	r4, r0
   12300:	ldr	r5, [r6]
   12304:	cmp	r5, #0
   12308:	beq	12328 <lista_inverte@@Base+0x50>
   1230c:	ldr	r1, [r5]
   12310:	mov	r0, r4
   12314:	mov	r2, #0
   12318:	bl	11f94 <lista_insere@@Base>
   1231c:	ldr	r5, [r5, #4]
   12320:	cmp	r5, #0
   12324:	bne	1230c <lista_inverte@@Base+0x34>
   12328:	mov	r5, r4
   1232c:	mov	r0, r5
   12330:	pop	{r4, r5, r6, sl, fp, pc}

00012334 <__libc_csu_init@@Base>:
   12334:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12338:	mov	r7, r0
   1233c:	ldr	r6, [pc, #72]	; 1238c <__libc_csu_init@@Base+0x58>
   12340:	ldr	r5, [pc, #72]	; 12390 <__libc_csu_init@@Base+0x5c>
   12344:	add	r6, pc, r6
   12348:	add	r5, pc, r5
   1234c:	sub	r6, r6, r5
   12350:	mov	r8, r1
   12354:	mov	r9, r2
   12358:	bl	10dac <calloc@plt-0x20>
   1235c:	asrs	r6, r6, #2
   12360:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12364:	mov	r4, #0
   12368:	add	r4, r4, #1
   1236c:	ldr	r3, [r5], #4
   12370:	mov	r2, r9
   12374:	mov	r1, r8
   12378:	mov	r0, r7
   1237c:	blx	r3
   12380:	cmp	r6, r4
   12384:	bne	12368 <__libc_csu_init@@Base+0x34>
   12388:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1238c:	andeq	r0, r1, r0, asr #23
   12390:			; <UNDEFINED> instruction: 0x00010bb8

00012394 <__libc_csu_fini@@Base>:
   12394:	bx	lr

Disassembly of section .fini:

00012398 <.fini>:
   12398:	push	{r3, lr}
   1239c:	pop	{r3, pc}
