
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf32-littlearm


Disassembly of section .init:

00014e0c <.init>:
   14e0c:	push	{r3, lr}
   14e10:	bl	14f8c <_start@@Base+0x3c>
   14e14:	pop	{r3, pc}

Disassembly of section .plt:

00014e18 <raise@plt-0x14>:
   14e18:	push	{lr}		; (str lr, [sp, #-4]!)
   14e1c:	ldr	lr, [pc, #4]	; 14e28 <raise@plt-0x4>
   14e20:	add	lr, pc, lr
   14e24:	ldr	pc, [lr, #8]!
   14e28:	ldrdeq	r6, [r4], -r8

00014e2c <raise@plt>:
   14e2c:	add	ip, pc, #0, 12
   14e30:	add	ip, ip, #286720	; 0x46000
   14e34:	ldr	pc, [ip, #472]!	; 0x1d8

00014e38 <strcmp@plt>:
   14e38:	add	ip, pc, #0, 12
   14e3c:	add	ip, ip, #286720	; 0x46000
   14e40:	ldr	pc, [ip, #464]!	; 0x1d0

00014e44 <memmove@plt>:
   14e44:	add	ip, pc, #0, 12
   14e48:	add	ip, ip, #286720	; 0x46000
   14e4c:	ldr	pc, [ip, #456]!	; 0x1c8

00014e50 <free@plt>:
   14e50:	add	ip, pc, #0, 12
   14e54:	add	ip, ip, #286720	; 0x46000
   14e58:	ldr	pc, [ip, #448]!	; 0x1c0

00014e5c <memcpy@plt>:
   14e5c:	add	ip, pc, #0, 12
   14e60:	add	ip, ip, #286720	; 0x46000
   14e64:	ldr	pc, [ip, #440]!	; 0x1b8

00014e68 <__isinff@plt>:
   14e68:	add	ip, pc, #0, 12
   14e6c:	add	ip, ip, #286720	; 0x46000
   14e70:	ldr	pc, [ip, #432]!	; 0x1b0

00014e74 <__isinf@plt>:
   14e74:	add	ip, pc, #0, 12
   14e78:	add	ip, ip, #286720	; 0x46000
   14e7c:	ldr	pc, [ip, #424]!	; 0x1a8

00014e80 <realloc@plt>:
   14e80:	add	ip, pc, #0, 12
   14e84:	add	ip, ip, #286720	; 0x46000
   14e88:	ldr	pc, [ip, #416]!	; 0x1a0

00014e8c <fwrite@plt>:
   14e8c:	add	ip, pc, #0, 12
   14e90:	add	ip, ip, #286720	; 0x46000
   14e94:	ldr	pc, [ip, #408]!	; 0x198

00014e98 <malloc@plt>:
   14e98:	add	ip, pc, #0, 12
   14e9c:	add	ip, ip, #286720	; 0x46000
   14ea0:	ldr	pc, [ip, #400]!	; 0x190

00014ea4 <__libc_start_main@plt>:
   14ea4:	add	ip, pc, #0, 12
   14ea8:	add	ip, ip, #286720	; 0x46000
   14eac:	ldr	pc, [ip, #392]!	; 0x188

00014eb0 <__gmon_start__@plt>:
   14eb0:	add	ip, pc, #0, 12
   14eb4:	add	ip, ip, #286720	; 0x46000
   14eb8:	ldr	pc, [ip, #384]!	; 0x180

00014ebc <bcmp@plt>:
   14ebc:	add	ip, pc, #0, 12
   14ec0:	add	ip, ip, #286720	; 0x46000
   14ec4:	ldr	pc, [ip, #376]!	; 0x178

00014ec8 <strlen@plt>:
   14ec8:	add	ip, pc, #0, 12
   14ecc:	add	ip, ip, #286720	; 0x46000
   14ed0:	ldr	pc, [ip, #368]!	; 0x170

00014ed4 <fprintf@plt>:
   14ed4:	add	ip, pc, #0, 12
   14ed8:	add	ip, ip, #286720	; 0x46000
   14edc:	ldr	pc, [ip, #360]!	; 0x168

00014ee0 <posix_memalign@plt>:
   14ee0:	add	ip, pc, #0, 12
   14ee4:	add	ip, ip, #286720	; 0x46000
   14ee8:	ldr	pc, [ip, #352]!	; 0x160

00014eec <memset@plt>:
   14eec:	add	ip, pc, #0, 12
   14ef0:	add	ip, ip, #286720	; 0x46000
   14ef4:	ldr	pc, [ip, #344]!	; 0x158

00014ef8 <strncpy@plt>:
   14ef8:	add	ip, pc, #0, 12
   14efc:	add	ip, ip, #286720	; 0x46000
   14f00:	ldr	pc, [ip, #336]!	; 0x150

00014f04 <strtod@plt>:
   14f04:	add	ip, pc, #0, 12
   14f08:	add	ip, ip, #286720	; 0x46000
   14f0c:	ldr	pc, [ip, #328]!	; 0x148

00014f10 <memchr@plt>:
   14f10:	add	ip, pc, #0, 12
   14f14:	add	ip, ip, #286720	; 0x46000
   14f18:	ldr	pc, [ip, #320]!	; 0x140

00014f1c <fputc@plt>:
   14f1c:	add	ip, pc, #0, 12
   14f20:	add	ip, ip, #286720	; 0x46000
   14f24:	ldr	pc, [ip, #312]!	; 0x138

00014f28 <sprintf@plt>:
   14f28:	add	ip, pc, #0, 12
   14f2c:	add	ip, ip, #286720	; 0x46000
   14f30:	ldr	pc, [ip, #304]!	; 0x130

00014f34 <abort@plt>:
   14f34:	add	ip, pc, #0, 12
   14f38:	add	ip, ip, #286720	; 0x46000
   14f3c:	ldr	pc, [ip, #296]!	; 0x128

00014f40 <__assert_fail@plt>:
   14f40:	add	ip, pc, #0, 12
   14f44:	add	ip, ip, #286720	; 0x46000
   14f48:	ldr	pc, [ip, #288]!	; 0x120

Disassembly of section .text:

00014f50 <_start@@Base>:
   14f50:	mov	fp, #0
   14f54:	mov	lr, #0
   14f58:	pop	{r1}		; (ldr r1, [sp], #4)
   14f5c:	mov	r2, sp
   14f60:	push	{r2}		; (str r2, [sp, #-4]!)
   14f64:	push	{r0}		; (str r0, [sp, #-4]!)
   14f68:	ldr	ip, [pc, #16]	; 14f80 <_start@@Base+0x30>
   14f6c:	push	{ip}		; (str ip, [sp, #-4]!)
   14f70:	ldr	r0, [pc, #12]	; 14f84 <_start@@Base+0x34>
   14f74:	ldr	r3, [pc, #12]	; 14f88 <_start@@Base+0x38>
   14f78:	bl	14ea4 <__libc_start_main@plt>
   14f7c:	bl	14f34 <abort@plt>
   14f80:	muleq	r4, r4, r1
   14f84:	andeq	r6, r1, r8, lsl #1
   14f88:	andeq	r3, r4, r4, lsr r1
   14f8c:	ldr	r3, [pc, #20]	; 14fa8 <_start@@Base+0x58>
   14f90:	ldr	r2, [pc, #20]	; 14fac <_start@@Base+0x5c>
   14f94:	add	r3, pc, r3
   14f98:	ldr	r2, [r3, r2]
   14f9c:	cmp	r2, #0
   14fa0:	bxeq	lr
   14fa4:	b	14eb0 <__gmon_start__@plt>
   14fa8:	andeq	r6, r4, r4, rrx
   14fac:	andeq	r0, r0, ip, rrx
   14fb0:	ldr	r0, [pc, #24]	; 14fd0 <_start@@Base+0x80>
   14fb4:	ldr	r3, [pc, #24]	; 14fd4 <_start@@Base+0x84>
   14fb8:	cmp	r3, r0
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0x88>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	fp, r5, r4, asr #6
   14fd4:	andeq	fp, r5, r4, asr #6
   14fd8:	andeq	r0, r0, r0
   14fdc:	ldr	r0, [pc, #36]	; 15008 <_start@@Base+0xb8>
   14fe0:	ldr	r1, [pc, #36]	; 1500c <_start@@Base+0xbc>
   14fe4:	sub	r1, r1, r0
   14fe8:	asr	r1, r1, #2
   14fec:	add	r1, r1, r1, lsr #31
   14ff0:	asrs	r1, r1, #1
   14ff4:	bxeq	lr
   14ff8:	ldr	r3, [pc, #16]	; 15010 <_start@@Base+0xc0>
   14ffc:	cmp	r3, #0
   15000:	bxeq	lr
   15004:	bx	r3
   15008:	andeq	fp, r5, r4, asr #6
   1500c:	andeq	fp, r5, r4, asr #6
   15010:	andeq	r0, r0, r0
   15014:	push	{r4, lr}
   15018:	ldr	r4, [pc, #24]	; 15038 <_start@@Base+0xe8>
   1501c:	ldrb	r3, [r4]
   15020:	cmp	r3, #0
   15024:	popne	{r4, pc}
   15028:	bl	14fb0 <_start@@Base+0x60>
   1502c:	mov	r3, #1
   15030:	strb	r3, [r4]
   15034:	pop	{r4, pc}
   15038:	andeq	fp, r5, r0, asr r3
   1503c:	b	14fdc <_start@@Base+0x8c>

00015040 <test_json@@Base>:
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	add	fp, sp, #28
   15048:	sub	sp, sp, #372	; 0x174
   1504c:	mov	r6, r0
   15050:	add	r0, sp, #108	; 0x6c
   15054:	mov	r7, r3
   15058:	mov	r9, r2
   1505c:	mov	r4, r1
   15060:	bl	2dbb0 <flatcc_builder_init@@Base>
   15064:	add	r0, sp, #16
   15068:	mov	r1, #0
   1506c:	bl	42288 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15070:	ldr	r0, [fp, #12]
   15074:	ldr	r5, [fp, #8]
   15078:	ldr	r8, [fp, #16]
   1507c:	uxtb	r1, r0
   15080:	tst	r0, #16
   15084:	ubfx	r2, r1, #3, #1
   15088:	strb	r2, [sp, #45]	; 0x2d
   1508c:	ubfx	r2, r1, #2, #1
   15090:	strb	r2, [sp, #44]	; 0x2c
   15094:	ubfx	r1, r1, #1, #1
   15098:	strb	r1, [sp, #43]	; 0x2b
   1509c:	and	r1, r0, #1
   150a0:	strb	r1, [sp, #42]	; 0x2a
   150a4:	movne	r1, #2
   150a8:	strbne	r1, [sp, #41]	; 0x29
   150ac:	tst	r0, #32
   150b0:	movne	r0, #0
   150b4:	strbne	r0, [sp, #43]	; 0x2b
   150b8:	movwne	r0, #258	; 0x102
   150bc:	strhne	r0, [sp, #41]	; 0x29
   150c0:	mov	r0, r4
   150c4:	bl	14ec8 <strlen@plt>
   150c8:	mov	r3, r0
   150cc:	ldm	r6, {r0, r1}
   150d0:	str	r5, [sp]
   150d4:	mov	r2, r4
   150d8:	stmib	sp, {r0, r1}
   150dc:	add	r0, sp, #108	; 0x6c
   150e0:	add	r1, sp, #64	; 0x40
   150e4:	bl	36b00 <flatcc_json_parser_table_as_root@@Base>
   150e8:	cmp	r0, r7
   150ec:	bne	1519c <test_json@@Base+0x15c>
   150f0:	mov	r5, #0
   150f4:	cmp	r7, #0
   150f8:	beq	15104 <test_json@@Base+0xc4>
   150fc:	mov	r4, #0
   15100:	b	15178 <test_json@@Base+0x138>
   15104:	add	r0, sp, #108	; 0x6c
   15108:	sub	r1, fp, #56	; 0x38
   1510c:	bl	315a0 <flatcc_builder_finalize_aligned_buffer@@Base>
   15110:	ldr	r2, [r6]
   15114:	ldr	r3, [r6, #12]
   15118:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1511c:	mov	r4, r0
   15120:	bl	32718 <flatcc_verify_table_as_root@@Base>
   15124:	cmp	r0, #0
   15128:	bne	15254 <test_json@@Base+0x214>
   1512c:	ldr	r0, [r6, #8]
   15130:	ldr	r3, [r6]
   15134:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15138:	add	r6, sp, #16
   1513c:	mov	r1, r4
   15140:	str	r0, [sp]
   15144:	mov	r0, r6
   15148:	bl	41b18 <flatcc_json_printer_table_as_root@@Base>
   1514c:	sub	r1, fp, #60	; 0x3c
   15150:	mov	r0, r6
   15154:	bl	423ac <flatcc_json_printer_get_buffer@@Base>
   15158:	mov	r6, r0
   1515c:	cmp	r0, #0
   15160:	beq	151d0 <test_json@@Base+0x190>
   15164:	mov	r0, r9
   15168:	mov	r1, r6
   1516c:	bl	14e38 <strcmp@plt>
   15170:	cmp	r0, #0
   15174:	bne	151d0 <test_json@@Base+0x190>
   15178:	mov	r0, r4
   1517c:	bl	316a0 <flatcc_builder_aligned_free@@Base>
   15180:	add	r0, sp, #108	; 0x6c
   15184:	bl	2dd50 <flatcc_builder_clear@@Base>
   15188:	add	r0, sp, #16
   1518c:	bl	42444 <flatcc_json_printer_clear@@Base>
   15190:	mov	r0, r5
   15194:	sub	sp, fp, #28
   15198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1519c:	movw	r6, #45896	; 0xb348
   151a0:	cmp	r7, #0
   151a4:	movt	r6, #5
   151a8:	beq	15230 <test_json@@Base+0x1f0>
   151ac:	ldr	r5, [r6]
   151b0:	cmp	r0, #0
   151b4:	bne	153ac <test_json@@Base+0x36c>
   151b8:	mov	r0, r7
   151bc:	bl	333dc <flatcc_json_parser_error_string@@Base>
   151c0:	movw	r1, #12746	; 0x31ca
   151c4:	mov	r3, r0
   151c8:	movt	r1, #4
   151cc:	b	15244 <test_json@@Base+0x204>
   151d0:	movw	r7, #45896	; 0xb348
   151d4:	movw	r1, #12960	; 0x32a0
   151d8:	mov	r2, r8
   151dc:	movt	r7, #5
   151e0:	movt	r1, #4
   151e4:	ldr	r0, [r7]
   151e8:	bl	14ed4 <fprintf@plt>
   151ec:	movw	r5, #27015	; 0x6987
   151f0:	ldr	r0, [r7]
   151f4:	mov	r2, r6
   151f8:	movt	r5, #4
   151fc:	mov	r1, r5
   15200:	bl	14ed4 <fprintf@plt>
   15204:	ldr	r3, [r7]
   15208:	movw	r0, #13013	; 0x32d5
   1520c:	mov	r1, #10
   15210:	mov	r2, #1
   15214:	movt	r0, #4
   15218:	bl	14e8c <fwrite@plt>
   1521c:	ldr	r0, [r7]
   15220:	mov	r1, r5
   15224:	mov	r2, r9
   15228:	bl	14ed4 <fprintf@plt>
   1522c:	b	15284 <test_json@@Base+0x244>
   15230:	ldr	r5, [r6]
   15234:	bl	333dc <flatcc_json_parser_error_string@@Base>
   15238:	movw	r1, #12810	; 0x320a
   1523c:	mov	r3, r0
   15240:	movt	r1, #4
   15244:	mov	r0, r5
   15248:	mov	r2, r8
   1524c:	bl	14ed4 <fprintf@plt>
   15250:	b	153e8 <test_json@@Base+0x3a8>
   15254:	movw	r1, #45896	; 0xb348
   15258:	movt	r1, #5
   1525c:	ldr	r5, [r1]
   15260:	bl	31c8c <flatcc_verify_error_string@@Base>
   15264:	movw	r1, #12846	; 0x322e
   15268:	movw	r2, #12885	; 0x3255
   1526c:	str	r0, [sp]
   15270:	mov	r0, r5
   15274:	mov	r3, r8
   15278:	movt	r1, #4
   1527c:	movt	r2, #4
   15280:	bl	14ed4 <fprintf@plt>
   15284:	mvn	r5, #0
   15288:	cmp	r4, #0
   1528c:	beq	150fc <test_json@@Base+0xbc>
   15290:	movw	r0, #45896	; 0xb348
   15294:	movw	r1, #27008	; 0x6980
   15298:	movw	r2, #13024	; 0x32e0
   1529c:	ldr	r9, [fp, #-56]	; 0xffffffc8
   152a0:	movt	r0, #5
   152a4:	movt	r1, #4
   152a8:	movt	r2, #4
   152ac:	ldr	r6, [r0]
   152b0:	mov	r0, r6
   152b4:	bl	14ed4 <fprintf@plt>
   152b8:	cmp	r9, #0
   152bc:	beq	15394 <test_json@@Base+0x354>
   152c0:	sub	r7, fp, #49	; 0x31
   152c4:	mov	r8, #0
   152c8:	ands	sl, r8, #15
   152cc:	bne	15304 <test_json@@Base+0x2c4>
   152d0:	cmp	r8, #0
   152d4:	beq	152ec <test_json@@Base+0x2ac>
   152d8:	movw	r1, #27013	; 0x6985
   152dc:	mov	r0, r6
   152e0:	mov	r2, r7
   152e4:	movt	r1, #4
   152e8:	bl	14ed4 <fprintf@plt>
   152ec:	movw	r1, #27019	; 0x698b
   152f0:	mov	r0, r6
   152f4:	mov	r2, r8
   152f8:	movt	r1, #4
   152fc:	bl	14ed4 <fprintf@plt>
   15300:	b	15318 <test_json@@Base+0x2d8>
   15304:	tst	r8, #7
   15308:	bne	15318 <test_json@@Base+0x2d8>
   1530c:	mov	r0, #32
   15310:	mov	r1, r6
   15314:	bl	14f1c <fputc@plt>
   15318:	ldrb	r2, [r4, r8]
   1531c:	movw	r1, #27027	; 0x6993
   15320:	mov	r0, r6
   15324:	movt	r1, #4
   15328:	bl	14ed4 <fprintf@plt>
   1532c:	ldrb	r0, [r4, r8]
   15330:	add	r8, r8, #1
   15334:	sub	r1, r0, #32
   15338:	uxtb	r1, r1
   1533c:	cmp	r1, #94	; 0x5e
   15340:	mov	r1, #0
   15344:	movwhi	r0, #46	; 0x2e
   15348:	cmp	r9, r8
   1534c:	strb	r0, [r7, sl]
   15350:	add	r0, r7, sl
   15354:	strb	r1, [r0, #1]
   15358:	bne	152c8 <test_json@@Base+0x288>
   1535c:	tst	r9, #15
   15360:	beq	15394 <test_json@@Base+0x354>
   15364:	movw	r8, #27033	; 0x6999
   15368:	add	r7, r9, #1
   1536c:	movt	r8, #4
   15370:	mov	r0, r8
   15374:	mov	r1, #3
   15378:	mov	r2, #1
   1537c:	mov	r3, r6
   15380:	bl	14e8c <fwrite@plt>
   15384:	add	r0, r7, #1
   15388:	tst	r7, #15
   1538c:	mov	r7, r0
   15390:	bne	15370 <test_json@@Base+0x330>
   15394:	movw	r1, #27013	; 0x6985
   15398:	sub	r2, fp, #49	; 0x31
   1539c:	mov	r0, r6
   153a0:	movt	r1, #4
   153a4:	bl	14ed4 <fprintf@plt>
   153a8:	b	15178 <test_json@@Base+0x138>
   153ac:	bl	333dc <flatcc_json_parser_error_string@@Base>
   153b0:	movw	r1, #12708	; 0x31a4
   153b4:	mov	r3, r0
   153b8:	mov	r0, r5
   153bc:	mov	r2, r8
   153c0:	movt	r1, #4
   153c4:	bl	14ed4 <fprintf@plt>
   153c8:	ldr	r5, [r6]
   153cc:	mov	r0, r7
   153d0:	bl	333dc <flatcc_json_parser_error_string@@Base>
   153d4:	movw	r1, #12779	; 0x31eb
   153d8:	mov	r2, r0
   153dc:	mov	r0, r5
   153e0:	movt	r1, #4
   153e4:	bl	14ed4 <fprintf@plt>
   153e8:	ldr	r0, [r6]
   153ec:	movw	r1, #27015	; 0x6987
   153f0:	mov	r2, r4
   153f4:	movt	r1, #4
   153f8:	bl	14ed4 <fprintf@plt>
   153fc:	ldr	r0, [sp, #84]	; 0x54
   15400:	ldr	r3, [r6]
   15404:	cmp	r0, #2
   15408:	blt	15434 <test_json@@Base+0x3f4>
   1540c:	mov	r4, #0
   15410:	mov	r0, #32
   15414:	mov	r1, r3
   15418:	bl	14f1c <fputc@plt>
   1541c:	ldr	r0, [sp, #84]	; 0x54
   15420:	ldr	r3, [r6]
   15424:	add	r4, r4, #1
   15428:	sub	r0, r0, #1
   1542c:	cmp	r4, r0
   15430:	blt	15410 <test_json@@Base+0x3d0>
   15434:	movw	r0, #12843	; 0x322b
   15438:	mov	r1, #2
   1543c:	mov	r2, #1
   15440:	movt	r0, #4
   15444:	bl	14e8c <fwrite@plt>
   15448:	mvn	r5, #0
   1544c:	b	150fc <test_json@@Base+0xbc>

00015450 <edge_case_tests@@Base>:
   15450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15454:	add	fp, sp, #28
   15458:	sub	sp, sp, #60	; 0x3c
   1545c:	movw	r4, #27964	; 0x6d3c
   15460:	movw	r1, #13038	; 0x32ee
   15464:	movw	r2, #13087	; 0x331f
   15468:	mov	r0, #155	; 0x9b
   1546c:	mov	sl, #0
   15470:	mov	r3, #0
   15474:	movt	r4, #4
   15478:	movt	r1, #4
   1547c:	movt	r2, #4
   15480:	str	r0, [sp, #8]
   15484:	str	sl, [sp]
   15488:	str	sl, [sp, #4]
   1548c:	mov	r0, r4
   15490:	bl	15040 <test_json@@Base>
   15494:	movw	r5, #13117	; 0x333d
   15498:	movw	r8, #13150	; 0x335e
   1549c:	str	r0, [fp, #-32]	; 0xffffffe0
   154a0:	mov	r9, #2
   154a4:	mov	r0, #168	; 0xa8
   154a8:	mov	r3, #0
   154ac:	movt	r5, #4
   154b0:	movt	r8, #4
   154b4:	stm	sp, {r9, sl}
   154b8:	str	r0, [sp, #8]
   154bc:	mov	r0, r4
   154c0:	mov	r1, r5
   154c4:	mov	r2, r8
   154c8:	bl	15040 <test_json@@Base>
   154cc:	movw	r1, #13184	; 0x3380
   154d0:	movw	r2, #13223	; 0x33a7
   154d4:	str	r0, [fp, #-36]	; 0xffffffdc
   154d8:	mov	r0, #172	; 0xac
   154dc:	mov	r3, #0
   154e0:	str	sl, [sp]
   154e4:	str	r9, [sp, #4]
   154e8:	movt	r1, #4
   154ec:	movt	r2, #4
   154f0:	str	r0, [sp, #8]
   154f4:	mov	r0, r4
   154f8:	bl	15040 <test_json@@Base>
   154fc:	movw	r2, #13252	; 0x33c4
   15500:	str	r0, [fp, #-40]	; 0xffffffd8
   15504:	mov	r0, #176	; 0xb0
   15508:	mov	r1, #4
   1550c:	mov	r3, #0
   15510:	str	r9, [sp]
   15514:	movt	r2, #4
   15518:	str	r1, [sp, #4]
   1551c:	str	r0, [sp, #8]
   15520:	mov	r0, r4
   15524:	mov	r1, r5
   15528:	bl	15040 <test_json@@Base>
   1552c:	mov	r1, #8
   15530:	movw	r2, #13305	; 0x33f9
   15534:	str	r0, [sp, #44]	; 0x2c
   15538:	mov	r0, #180	; 0xb4
   1553c:	mov	r3, #0
   15540:	str	sl, [sp]
   15544:	str	r1, [sp, #4]
   15548:	movw	r1, #13271	; 0x33d7
   1554c:	movt	r2, #4
   15550:	str	r0, [sp, #8]
   15554:	mov	r0, r4
   15558:	movt	r1, #4
   1555c:	bl	15040 <test_json@@Base>
   15560:	movw	r1, #13579	; 0x350b
   15564:	str	r0, [sp, #40]	; 0x28
   15568:	mov	r0, #195	; 0xc3
   1556c:	stm	sp, {r9, sl}
   15570:	mov	r2, r8
   15574:	mov	r3, #0
   15578:	movt	r1, #4
   1557c:	str	r0, [sp, #8]
   15580:	mov	r0, r4
   15584:	bl	15040 <test_json@@Base>
   15588:	movw	r5, #13617	; 0x3531
   1558c:	movw	r7, #13667	; 0x3563
   15590:	str	r0, [sp, #36]	; 0x24
   15594:	mov	r6, #1
   15598:	mov	r0, #199	; 0xc7
   1559c:	mov	r3, #0
   155a0:	movt	r5, #4
   155a4:	movt	r7, #4
   155a8:	stm	sp, {r6, sl}
   155ac:	str	r0, [sp, #8]
   155b0:	mov	r0, r4
   155b4:	mov	r1, r5
   155b8:	mov	r2, r7
   155bc:	bl	15040 <test_json@@Base>
   155c0:	movw	r2, #13694	; 0x357e
   155c4:	str	r0, [sp, #32]
   155c8:	mov	r0, #203	; 0xcb
   155cc:	mov	r1, r5
   155d0:	mov	r3, #0
   155d4:	str	r6, [sp]
   155d8:	str	r6, [sp, #4]
   155dc:	movt	r2, #4
   155e0:	str	r0, [sp, #8]
   155e4:	mov	r0, r4
   155e8:	bl	15040 <test_json@@Base>
   155ec:	movw	r1, #13717	; 0x3595
   155f0:	str	r0, [sp, #28]
   155f4:	mov	r0, #209	; 0xd1
   155f8:	stm	sp, {r6, sl}
   155fc:	mov	r2, r7
   15600:	mov	r3, #0
   15604:	movt	r1, #4
   15608:	str	r0, [sp, #8]
   1560c:	mov	r0, r4
   15610:	bl	15040 <test_json@@Base>
   15614:	movw	r5, #13830	; 0x3606
   15618:	str	r0, [sp, #24]
   1561c:	mov	r0, #217	; 0xd9
   15620:	stm	sp, {r9, sl}
   15624:	mov	r2, r8
   15628:	mov	r3, #0
   1562c:	movt	r5, #4
   15630:	str	r0, [sp, #8]
   15634:	mov	r0, r4
   15638:	mov	r1, r5
   1563c:	bl	15040 <test_json@@Base>
   15640:	movw	r1, #13859	; 0x3623
   15644:	movw	r2, #13223	; 0x33a7
   15648:	str	r0, [sp, #20]
   1564c:	mov	r0, #221	; 0xdd
   15650:	mov	r3, #0
   15654:	str	sl, [sp]
   15658:	str	r9, [sp, #4]
   1565c:	movt	r1, #4
   15660:	movt	r2, #4
   15664:	str	r0, [sp, #8]
   15668:	mov	r0, r4
   1566c:	bl	15040 <test_json@@Base>
   15670:	movw	r2, #13252	; 0x33c4
   15674:	str	r0, [sp, #16]
   15678:	mov	r0, #225	; 0xe1
   1567c:	mov	r1, #4
   15680:	mov	r3, #0
   15684:	str	r9, [sp]
   15688:	movt	r2, #4
   1568c:	str	r1, [sp, #4]
   15690:	str	r0, [sp, #8]
   15694:	mov	r0, r4
   15698:	mov	r1, r5
   1569c:	bl	15040 <test_json@@Base>
   156a0:	mov	r1, #8
   156a4:	movw	r2, #13911	; 0x3657
   156a8:	str	r0, [sp, #12]
   156ac:	mov	r0, #229	; 0xe5
   156b0:	mov	r3, #0
   156b4:	str	sl, [sp]
   156b8:	str	r1, [sp, #4]
   156bc:	movw	r1, #13892	; 0x3644
   156c0:	movt	r2, #4
   156c4:	str	r0, [sp, #8]
   156c8:	mov	r0, r4
   156cc:	movt	r1, #4
   156d0:	bl	15040 <test_json@@Base>
   156d4:	movw	r1, #14190	; 0x376e
   156d8:	mov	r5, r0
   156dc:	mov	r0, #233	; 0xe9
   156e0:	stm	sp, {r9, sl}
   156e4:	mov	r2, r8
   156e8:	mov	r3, #0
   156ec:	movt	r1, #4
   156f0:	str	r0, [sp, #8]
   156f4:	mov	r0, r4
   156f8:	bl	15040 <test_json@@Base>
   156fc:	movw	r9, #14222	; 0x378e
   15700:	movw	r2, #13667	; 0x3563
   15704:	mov	r8, r0
   15708:	mov	r0, #237	; 0xed
   1570c:	stm	sp, {r6, sl}
   15710:	mov	r3, #0
   15714:	movt	r9, #4
   15718:	movt	r2, #4
   1571c:	str	r0, [sp, #8]
   15720:	mov	r0, r4
   15724:	mov	r1, r9
   15728:	bl	15040 <test_json@@Base>
   1572c:	movw	r2, #13694	; 0x357e
   15730:	mov	r7, r0
   15734:	mov	r0, #241	; 0xf1
   15738:	mov	r1, r9
   1573c:	mov	r3, #0
   15740:	str	r6, [sp]
   15744:	str	r6, [sp, #4]
   15748:	movt	r2, #4
   1574c:	str	r0, [sp, #8]
   15750:	mov	r0, r4
   15754:	bl	15040 <test_json@@Base>
   15758:	mov	r1, #247	; 0xf7
   1575c:	stm	sp, {r6, sl}
   15760:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15764:	mov	r3, #0
   15768:	str	r1, [sp, #8]
   1576c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15770:	orr	r1, r2, r1
   15774:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15778:	orr	r1, r1, r2
   1577c:	ldr	r2, [sp, #44]	; 0x2c
   15780:	orr	r1, r1, r2
   15784:	ldr	r2, [sp, #40]	; 0x28
   15788:	orr	r1, r1, r2
   1578c:	ldr	r2, [sp, #36]	; 0x24
   15790:	orr	r1, r1, r2
   15794:	ldr	r2, [sp, #32]
   15798:	orr	r1, r1, r2
   1579c:	ldr	r2, [sp, #28]
   157a0:	orr	r1, r1, r2
   157a4:	ldr	r2, [sp, #24]
   157a8:	orr	r1, r1, r2
   157ac:	ldr	r2, [sp, #20]
   157b0:	orr	r1, r1, r2
   157b4:	ldr	r2, [sp, #16]
   157b8:	orr	r1, r1, r2
   157bc:	ldr	r2, [sp, #12]
   157c0:	orr	r1, r1, r2
   157c4:	movw	r2, #13667	; 0x3563
   157c8:	orr	r1, r1, r5
   157cc:	movt	r2, #4
   157d0:	orr	r1, r1, r8
   157d4:	orr	r1, r1, r7
   157d8:	orr	r5, r1, r0
   157dc:	movw	r1, #14264	; 0x37b8
   157e0:	mov	r0, r4
   157e4:	movt	r1, #4
   157e8:	bl	15040 <test_json@@Base>
   157ec:	orr	r0, r5, r0
   157f0:	sub	sp, fp, #28
   157f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000157f8 <error_case_tests@@Base>:
   157f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157fc:	add	fp, sp, #28
   15800:	sub	sp, sp, #60	; 0x3c
   15804:	movw	r4, #27964	; 0x6d3c
   15808:	movw	r1, #14359	; 0x3817
   1580c:	movw	r0, #285	; 0x11d
   15810:	mov	r6, #0
   15814:	mov	r2, #0
   15818:	mov	r3, #13
   1581c:	movt	r4, #4
   15820:	movt	r1, #4
   15824:	str	r0, [sp, #8]
   15828:	str	r6, [sp]
   1582c:	str	r6, [sp, #4]
   15830:	mov	r0, r4
   15834:	bl	15040 <test_json@@Base>
   15838:	movw	r1, #14385	; 0x3831
   1583c:	str	r0, [fp, #-32]	; 0xffffffe0
   15840:	movw	r0, #287	; 0x11f
   15844:	mov	r2, #0
   15848:	mov	r3, #13
   1584c:	str	r6, [sp]
   15850:	str	r6, [sp, #4]
   15854:	movt	r1, #4
   15858:	str	r0, [sp, #8]
   1585c:	mov	r0, r4
   15860:	bl	15040 <test_json@@Base>
   15864:	movw	r1, #14482	; 0x3892
   15868:	str	r0, [fp, #-36]	; 0xffffffdc
   1586c:	movw	r0, #289	; 0x121
   15870:	mov	r2, #0
   15874:	mov	r3, #13
   15878:	str	r6, [sp]
   1587c:	str	r6, [sp, #4]
   15880:	movt	r1, #4
   15884:	str	r0, [sp, #8]
   15888:	mov	r0, r4
   1588c:	bl	15040 <test_json@@Base>
   15890:	movw	r1, #14576	; 0x38f0
   15894:	str	r0, [fp, #-40]	; 0xffffffd8
   15898:	movw	r0, #291	; 0x123
   1589c:	mov	r2, #0
   158a0:	mov	r3, #13
   158a4:	str	r6, [sp]
   158a8:	str	r6, [sp, #4]
   158ac:	movt	r1, #4
   158b0:	str	r0, [sp, #8]
   158b4:	mov	r0, r4
   158b8:	bl	15040 <test_json@@Base>
   158bc:	movw	r1, #14664	; 0x3948
   158c0:	str	r0, [sp, #44]	; 0x2c
   158c4:	movw	r0, #293	; 0x125
   158c8:	mov	r2, #0
   158cc:	mov	r3, #13
   158d0:	str	r6, [sp]
   158d4:	str	r6, [sp, #4]
   158d8:	movt	r1, #4
   158dc:	str	r0, [sp, #8]
   158e0:	mov	r0, r4
   158e4:	bl	15040 <test_json@@Base>
   158e8:	movw	r1, #14749	; 0x399d
   158ec:	str	r0, [sp, #40]	; 0x28
   158f0:	mov	r0, #296	; 0x128
   158f4:	mov	r2, #0
   158f8:	mov	r3, #13
   158fc:	str	r6, [sp]
   15900:	str	r6, [sp, #4]
   15904:	movt	r1, #4
   15908:	str	r0, [sp, #8]
   1590c:	mov	r0, r4
   15910:	bl	15040 <test_json@@Base>
   15914:	movw	r1, #14907	; 0x3a3b
   15918:	str	r0, [sp, #36]	; 0x24
   1591c:	movw	r0, #299	; 0x12b
   15920:	mov	r2, #0
   15924:	mov	r3, #13
   15928:	str	r6, [sp]
   1592c:	str	r6, [sp, #4]
   15930:	movt	r1, #4
   15934:	str	r0, [sp, #8]
   15938:	mov	r0, r4
   1593c:	bl	15040 <test_json@@Base>
   15940:	movw	r1, #15062	; 0x3ad6
   15944:	str	r0, [sp, #32]
   15948:	movw	r0, #303	; 0x12f
   1594c:	mov	r2, #0
   15950:	mov	r3, #13
   15954:	str	r6, [sp]
   15958:	str	r6, [sp, #4]
   1595c:	movt	r1, #4
   15960:	str	r0, [sp, #8]
   15964:	mov	r0, r4
   15968:	bl	15040 <test_json@@Base>
   1596c:	movw	r1, #15261	; 0x3b9d
   15970:	str	r0, [sp, #28]
   15974:	movw	r0, #307	; 0x133
   15978:	mov	r2, #0
   1597c:	mov	r3, #13
   15980:	str	r6, [sp]
   15984:	str	r6, [sp, #4]
   15988:	movt	r1, #4
   1598c:	str	r0, [sp, #8]
   15990:	mov	r0, r4
   15994:	bl	15040 <test_json@@Base>
   15998:	movw	r1, #15460	; 0x3c64
   1599c:	str	r0, [sp, #24]
   159a0:	movw	r0, #322	; 0x142
   159a4:	mov	r2, #0
   159a8:	mov	r3, #13
   159ac:	str	r6, [sp]
   159b0:	str	r6, [sp, #4]
   159b4:	movt	r1, #4
   159b8:	str	r0, [sp, #8]
   159bc:	mov	r0, r4
   159c0:	bl	15040 <test_json@@Base>
   159c4:	movw	r1, #15484	; 0x3c7c
   159c8:	str	r0, [sp, #20]
   159cc:	mov	r0, #324	; 0x144
   159d0:	mov	r2, #0
   159d4:	mov	r3, #13
   159d8:	str	r6, [sp]
   159dc:	str	r6, [sp, #4]
   159e0:	movt	r1, #4
   159e4:	str	r0, [sp, #8]
   159e8:	mov	r0, r4
   159ec:	bl	15040 <test_json@@Base>
   159f0:	movw	r1, #15569	; 0x3cd1
   159f4:	str	r0, [sp, #16]
   159f8:	movw	r0, #326	; 0x146
   159fc:	mov	r2, #0
   15a00:	mov	r3, #13
   15a04:	str	r6, [sp]
   15a08:	str	r6, [sp, #4]
   15a0c:	movt	r1, #4
   15a10:	str	r0, [sp, #8]
   15a14:	mov	r0, r4
   15a18:	bl	15040 <test_json@@Base>
   15a1c:	movw	r1, #15651	; 0x3d23
   15a20:	mov	r7, r0
   15a24:	mov	r0, #328	; 0x148
   15a28:	mov	r2, #0
   15a2c:	mov	r3, #13
   15a30:	str	r6, [sp]
   15a34:	str	r6, [sp, #4]
   15a38:	movt	r1, #4
   15a3c:	str	r0, [sp, #8]
   15a40:	mov	r0, r4
   15a44:	bl	15040 <test_json@@Base>
   15a48:	movw	r1, #15731	; 0x3d73
   15a4c:	mov	r8, r0
   15a50:	movw	r0, #330	; 0x14a
   15a54:	mov	r2, #0
   15a58:	mov	r3, #13
   15a5c:	str	r6, [sp]
   15a60:	str	r6, [sp, #4]
   15a64:	movt	r1, #4
   15a68:	str	r0, [sp, #8]
   15a6c:	mov	r0, r4
   15a70:	bl	15040 <test_json@@Base>
   15a74:	movw	r1, #15808	; 0x3dc0
   15a78:	mov	r9, r0
   15a7c:	movw	r0, #333	; 0x14d
   15a80:	mov	r2, #0
   15a84:	mov	r3, #13
   15a88:	str	r6, [sp]
   15a8c:	str	r6, [sp, #4]
   15a90:	movt	r1, #4
   15a94:	str	r0, [sp, #8]
   15a98:	mov	r0, r4
   15a9c:	bl	15040 <test_json@@Base>
   15aa0:	movw	r1, #15948	; 0x3e4c
   15aa4:	mov	sl, r0
   15aa8:	mov	r0, #336	; 0x150
   15aac:	mov	r2, #0
   15ab0:	mov	r3, #13
   15ab4:	str	r6, [sp]
   15ab8:	str	r6, [sp, #4]
   15abc:	movt	r1, #4
   15ac0:	str	r0, [sp, #8]
   15ac4:	mov	r0, r4
   15ac8:	bl	15040 <test_json@@Base>
   15acc:	movw	r1, #16085	; 0x3ed5
   15ad0:	mov	r5, r0
   15ad4:	mov	r0, #340	; 0x154
   15ad8:	mov	r2, #0
   15adc:	mov	r3, #13
   15ae0:	str	r6, [sp]
   15ae4:	str	r6, [sp, #4]
   15ae8:	movt	r1, #4
   15aec:	str	r0, [sp, #8]
   15af0:	mov	r0, r4
   15af4:	bl	15040 <test_json@@Base>
   15af8:	mov	r1, #344	; 0x158
   15afc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15b00:	mov	r3, #13
   15b04:	str	r6, [sp]
   15b08:	str	r6, [sp, #4]
   15b0c:	str	r1, [sp, #8]
   15b10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b14:	orr	r1, r2, r1
   15b18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15b1c:	orr	r1, r1, r2
   15b20:	ldr	r2, [sp, #44]	; 0x2c
   15b24:	orr	r1, r1, r2
   15b28:	ldr	r2, [sp, #40]	; 0x28
   15b2c:	orr	r1, r1, r2
   15b30:	ldr	r2, [sp, #36]	; 0x24
   15b34:	orr	r1, r1, r2
   15b38:	ldr	r2, [sp, #32]
   15b3c:	orr	r1, r1, r2
   15b40:	ldr	r2, [sp, #28]
   15b44:	orr	r1, r1, r2
   15b48:	ldr	r2, [sp, #24]
   15b4c:	orr	r1, r1, r2
   15b50:	ldr	r2, [sp, #20]
   15b54:	orr	r1, r1, r2
   15b58:	ldr	r2, [sp, #16]
   15b5c:	orr	r1, r1, r2
   15b60:	mov	r2, #0
   15b64:	orr	r1, r1, r7
   15b68:	orr	r1, r1, r8
   15b6c:	orr	r1, r1, r9
   15b70:	orr	r1, r1, sl
   15b74:	orr	r1, r1, r5
   15b78:	orr	r5, r1, r0
   15b7c:	movw	r1, #16260	; 0x3f84
   15b80:	mov	r0, r4
   15b84:	movt	r1, #4
   15b88:	bl	15040 <test_json@@Base>
   15b8c:	orr	r0, r5, r0
   15b90:	sub	sp, fp, #28
   15b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015b98 <base64_tests@@Base>:
   15b98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b9c:	add	fp, sp, #28
   15ba0:	sub	sp, sp, #28
   15ba4:	movw	r4, #27964	; 0x6d3c
   15ba8:	movw	r1, #16435	; 0x4033
   15bac:	movw	r2, #13252	; 0x33c4
   15bb0:	movw	r0, #369	; 0x171
   15bb4:	mov	r5, #0
   15bb8:	mov	r3, #0
   15bbc:	movt	r4, #4
   15bc0:	movt	r1, #4
   15bc4:	movt	r2, #4
   15bc8:	str	r0, [sp, #8]
   15bcc:	str	r5, [sp]
   15bd0:	str	r5, [sp, #4]
   15bd4:	mov	r0, r4
   15bd8:	bl	15040 <test_json@@Base>
   15bdc:	movw	r1, #16457	; 0x4049
   15be0:	movw	r2, #16496	; 0x4070
   15be4:	str	r0, [sp, #24]
   15be8:	mov	r0, #372	; 0x174
   15bec:	mov	r3, #0
   15bf0:	str	r5, [sp]
   15bf4:	str	r5, [sp, #4]
   15bf8:	movt	r1, #4
   15bfc:	movt	r2, #4
   15c00:	str	r0, [sp, #8]
   15c04:	mov	r0, r4
   15c08:	bl	15040 <test_json@@Base>
   15c0c:	movw	r6, #16716	; 0x414c
   15c10:	movw	r1, #16531	; 0x4093
   15c14:	str	r0, [sp, #20]
   15c18:	mov	r0, #376	; 0x178
   15c1c:	mov	r3, #0
   15c20:	str	r5, [sp]
   15c24:	str	r5, [sp, #4]
   15c28:	movt	r6, #4
   15c2c:	movt	r1, #4
   15c30:	str	r0, [sp, #8]
   15c34:	mov	r0, r4
   15c38:	mov	r2, r6
   15c3c:	bl	15040 <test_json@@Base>
   15c40:	movw	r7, #17084	; 0x42bc
   15c44:	movw	r1, #16896	; 0x4200
   15c48:	str	r0, [sp, #16]
   15c4c:	movw	r0, #379	; 0x17b
   15c50:	mov	r3, #0
   15c54:	str	r5, [sp]
   15c58:	str	r5, [sp, #4]
   15c5c:	movt	r7, #4
   15c60:	movt	r1, #4
   15c64:	str	r0, [sp, #8]
   15c68:	mov	r0, r4
   15c6c:	mov	r2, r7
   15c70:	bl	15040 <test_json@@Base>
   15c74:	movw	r1, #17267	; 0x4373
   15c78:	str	r0, [sp, #12]
   15c7c:	movw	r0, #382	; 0x17e
   15c80:	mov	r2, r6
   15c84:	mov	r3, #0
   15c88:	str	r5, [sp]
   15c8c:	str	r5, [sp, #4]
   15c90:	movt	r1, #4
   15c94:	str	r0, [sp, #8]
   15c98:	mov	r0, r4
   15c9c:	bl	15040 <test_json@@Base>
   15ca0:	movw	r1, #17450	; 0x442a
   15ca4:	mov	r6, r0
   15ca8:	movw	r0, #385	; 0x181
   15cac:	mov	r2, r7
   15cb0:	mov	r3, #0
   15cb4:	str	r5, [sp]
   15cb8:	str	r5, [sp, #4]
   15cbc:	movt	r1, #4
   15cc0:	str	r0, [sp, #8]
   15cc4:	mov	r0, r4
   15cc8:	bl	15040 <test_json@@Base>
   15ccc:	movw	r1, #17636	; 0x44e4
   15cd0:	mov	r7, r0
   15cd4:	mov	r0, #388	; 0x184
   15cd8:	mov	r2, #0
   15cdc:	mov	r3, #31
   15ce0:	str	r5, [sp]
   15ce4:	str	r5, [sp, #4]
   15ce8:	movt	r1, #4
   15cec:	str	r0, [sp, #8]
   15cf0:	mov	r0, r4
   15cf4:	bl	15040 <test_json@@Base>
   15cf8:	movw	r1, #17821	; 0x459d
   15cfc:	mov	r8, r0
   15d00:	movw	r0, #391	; 0x187
   15d04:	mov	r2, #0
   15d08:	mov	r3, #32
   15d0c:	str	r5, [sp]
   15d10:	str	r5, [sp, #4]
   15d14:	movt	r1, #4
   15d18:	str	r0, [sp, #8]
   15d1c:	mov	r0, r4
   15d20:	bl	15040 <test_json@@Base>
   15d24:	movw	sl, #18217	; 0x4729
   15d28:	movw	r1, #18009	; 0x4659
   15d2c:	mov	r9, r0
   15d30:	movw	r0, #406	; 0x196
   15d34:	mov	r3, #0
   15d38:	str	r5, [sp]
   15d3c:	str	r5, [sp, #4]
   15d40:	movt	sl, #4
   15d44:	movt	r1, #4
   15d48:	str	r0, [sp, #8]
   15d4c:	mov	r0, r4
   15d50:	mov	r2, sl
   15d54:	bl	15040 <test_json@@Base>
   15d58:	movw	r1, #419	; 0x1a3
   15d5c:	ldr	r2, [sp, #20]
   15d60:	str	r5, [sp]
   15d64:	str	r5, [sp, #4]
   15d68:	mov	r3, #0
   15d6c:	str	r1, [sp, #8]
   15d70:	ldr	r1, [sp, #24]
   15d74:	orr	r1, r2, r1
   15d78:	ldr	r2, [sp, #16]
   15d7c:	orr	r1, r1, r2
   15d80:	ldr	r2, [sp, #12]
   15d84:	orr	r1, r1, r2
   15d88:	mov	r2, sl
   15d8c:	orr	r1, r1, r6
   15d90:	orr	r1, r1, r7
   15d94:	orr	r1, r1, r8
   15d98:	orr	r1, r1, r9
   15d9c:	orr	r5, r1, r0
   15da0:	movw	r1, #18430	; 0x47fe
   15da4:	mov	r0, r4
   15da8:	movt	r1, #4
   15dac:	bl	15040 <test_json@@Base>
   15db0:	orr	r0, r5, r0
   15db4:	sub	sp, fp, #28
   15db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015dbc <mixed_type_union_tests@@Base>:
   15dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dc0:	add	fp, sp, #28
   15dc4:	sub	sp, sp, #20
   15dc8:	movw	r4, #27980	; 0x6d4c
   15dcc:	movw	r1, #18634	; 0x48ca
   15dd0:	movw	r2, #18713	; 0x4919
   15dd4:	mov	r0, #432	; 0x1b0
   15dd8:	mov	r8, #0
   15ddc:	mov	r3, #0
   15de0:	movt	r4, #4
   15de4:	movt	r1, #4
   15de8:	movt	r2, #4
   15dec:	str	r0, [sp, #8]
   15df0:	str	r8, [sp]
   15df4:	str	r8, [sp, #4]
   15df8:	mov	r0, r4
   15dfc:	bl	15040 <test_json@@Base>
   15e00:	movw	r9, #18915	; 0x49e3
   15e04:	movw	r1, #18784	; 0x4960
   15e08:	str	r0, [sp, #16]
   15e0c:	movw	r0, #437	; 0x1b5
   15e10:	mov	r3, #0
   15e14:	str	r8, [sp]
   15e18:	str	r8, [sp, #4]
   15e1c:	movt	r9, #4
   15e20:	movt	r1, #4
   15e24:	str	r0, [sp, #8]
   15e28:	mov	r0, r4
   15e2c:	mov	r2, r9
   15e30:	bl	15040 <test_json@@Base>
   15e34:	movw	r1, #19034	; 0x4a5a
   15e38:	mov	sl, r0
   15e3c:	movw	r0, #442	; 0x1ba
   15e40:	mov	r2, r9
   15e44:	mov	r3, #0
   15e48:	str	r8, [sp]
   15e4c:	str	r8, [sp, #4]
   15e50:	movt	r1, #4
   15e54:	str	r0, [sp, #8]
   15e58:	mov	r0, r4
   15e5c:	bl	15040 <test_json@@Base>
   15e60:	movw	r1, #19184	; 0x4af0
   15e64:	movw	r2, #19405	; 0x4bcd
   15e68:	mov	r5, r0
   15e6c:	movw	r0, #449	; 0x1c1
   15e70:	mov	r3, #0
   15e74:	str	r8, [sp]
   15e78:	str	r8, [sp, #4]
   15e7c:	movt	r1, #4
   15e80:	movt	r2, #4
   15e84:	str	r0, [sp, #8]
   15e88:	mov	r0, r4
   15e8c:	bl	15040 <test_json@@Base>
   15e90:	movw	r1, #19590	; 0x4c86
   15e94:	movw	r2, #19852	; 0x4d8c
   15e98:	mov	r6, r0
   15e9c:	movw	r0, #458	; 0x1ca
   15ea0:	mov	r3, #0
   15ea4:	str	r8, [sp]
   15ea8:	str	r8, [sp, #4]
   15eac:	movt	r1, #4
   15eb0:	movt	r2, #4
   15eb4:	str	r0, [sp, #8]
   15eb8:	mov	r0, r4
   15ebc:	bl	15040 <test_json@@Base>
   15ec0:	movw	r1, #20074	; 0x4e6a
   15ec4:	movw	r2, #20459	; 0x4feb
   15ec8:	mov	r7, r0
   15ecc:	movw	r0, #469	; 0x1d5
   15ed0:	mov	r3, #0
   15ed4:	str	r8, [sp]
   15ed8:	str	r8, [sp, #4]
   15edc:	movt	r1, #4
   15ee0:	movt	r2, #4
   15ee4:	str	r0, [sp, #8]
   15ee8:	mov	r0, r4
   15eec:	bl	15040 <test_json@@Base>
   15ef0:	movw	r1, #474	; 0x1da
   15ef4:	mov	r2, r9
   15ef8:	mov	r3, #0
   15efc:	str	r8, [sp]
   15f00:	str	r8, [sp, #4]
   15f04:	str	r1, [sp, #8]
   15f08:	ldr	r1, [sp, #16]
   15f0c:	orr	r1, sl, r1
   15f10:	orr	r1, r1, r5
   15f14:	orr	r1, r1, r6
   15f18:	orr	r1, r1, r7
   15f1c:	orr	r5, r1, r0
   15f20:	movw	r1, #20785	; 0x5131
   15f24:	mov	r0, r4
   15f28:	movt	r1, #4
   15f2c:	bl	15040 <test_json@@Base>
   15f30:	orr	r0, r5, r0
   15f34:	sub	sp, fp, #28
   15f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015f3c <union_vector_tests@@Base>:
   15f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f40:	add	fp, sp, #28
   15f44:	sub	sp, sp, #12
   15f48:	movw	r4, #27996	; 0x6d5c
   15f4c:	movw	r8, #20990	; 0x51fe
   15f50:	movw	r1, #20926	; 0x51be
   15f54:	movw	r0, #485	; 0x1e5
   15f58:	mov	r7, #0
   15f5c:	mov	r3, #0
   15f60:	movt	r8, #4
   15f64:	movt	r4, #4
   15f68:	movt	r1, #4
   15f6c:	str	r0, [sp, #8]
   15f70:	str	r7, [sp]
   15f74:	str	r7, [sp, #4]
   15f78:	mov	r0, r4
   15f7c:	mov	r2, r8
   15f80:	bl	15040 <test_json@@Base>
   15f84:	movw	r1, #21046	; 0x5236
   15f88:	movw	r2, #21097	; 0x5269
   15f8c:	mov	r9, r0
   15f90:	mov	r0, #488	; 0x1e8
   15f94:	mov	r3, #0
   15f98:	str	r7, [sp]
   15f9c:	str	r7, [sp, #4]
   15fa0:	movt	r1, #4
   15fa4:	movt	r2, #4
   15fa8:	str	r0, [sp, #8]
   15fac:	mov	r0, r4
   15fb0:	bl	15040 <test_json@@Base>
   15fb4:	movw	r1, #21140	; 0x5294
   15fb8:	movw	r2, #21217	; 0x52e1
   15fbc:	mov	sl, r0
   15fc0:	movw	r0, #491	; 0x1eb
   15fc4:	mov	r3, #0
   15fc8:	str	r7, [sp]
   15fcc:	str	r7, [sp, #4]
   15fd0:	movt	r1, #4
   15fd4:	movt	r2, #4
   15fd8:	str	r0, [sp, #8]
   15fdc:	mov	r0, r4
   15fe0:	bl	15040 <test_json@@Base>
   15fe4:	movw	r1, #21285	; 0x5325
   15fe8:	movw	r2, #21410	; 0x53a2
   15fec:	mov	r6, r0
   15ff0:	movw	r0, #494	; 0x1ee
   15ff4:	mov	r3, #0
   15ff8:	str	r7, [sp]
   15ffc:	str	r7, [sp, #4]
   16000:	movt	r1, #4
   16004:	movt	r2, #4
   16008:	str	r0, [sp, #8]
   1600c:	mov	r0, r4
   16010:	bl	15040 <test_json@@Base>
   16014:	movw	r1, #21518	; 0x540e
   16018:	mov	r5, r0
   1601c:	movw	r0, #497	; 0x1f1
   16020:	mov	r2, r8
   16024:	mov	r3, #0
   16028:	str	r7, [sp]
   1602c:	str	r7, [sp, #4]
   16030:	movt	r1, #4
   16034:	str	r0, [sp, #8]
   16038:	mov	r0, r4
   1603c:	bl	15040 <test_json@@Base>
   16040:	mov	r1, #500	; 0x1f4
   16044:	movw	r2, #21683	; 0x54b3
   16048:	mov	r3, #0
   1604c:	str	r7, [sp]
   16050:	str	r7, [sp, #4]
   16054:	str	r1, [sp, #8]
   16058:	orr	r1, sl, r9
   1605c:	movt	r2, #4
   16060:	orr	r1, r1, r6
   16064:	orr	r1, r1, r5
   16068:	orr	r5, r1, r0
   1606c:	movw	r1, #21581	; 0x544d
   16070:	mov	r0, r4
   16074:	movt	r1, #4
   16078:	bl	15040 <test_json@@Base>
   1607c:	orr	r0, r5, r0
   16080:	sub	sp, fp, #28
   16084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016088 <main@@Base>:
   16088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1608c:	add	fp, sp, #28
   16090:	sub	sp, sp, #284	; 0x11c
   16094:	bl	15450 <edge_case_tests@@Base>
   16098:	str	r0, [fp, #-32]	; 0xffffffe0
   1609c:	bl	157f8 <error_case_tests@@Base>
   160a0:	str	r0, [fp, #-36]	; 0xffffffdc
   160a4:	bl	15f3c <union_vector_tests@@Base>
   160a8:	str	r0, [fp, #-40]	; 0xffffffd8
   160ac:	bl	15b98 <base64_tests@@Base>
   160b0:	str	r0, [fp, #-44]	; 0xffffffd4
   160b4:	bl	15dbc <mixed_type_union_tests@@Base>
   160b8:	movw	r4, #27964	; 0x6d3c
   160bc:	movw	sl, #13252	; 0x33c4
   160c0:	movw	r1, #21775	; 0x550f
   160c4:	str	r0, [fp, #-48]	; 0xffffffd0
   160c8:	movw	r0, #525	; 0x20d
   160cc:	mov	r8, #0
   160d0:	mov	r3, #0
   160d4:	movt	sl, #4
   160d8:	movt	r4, #4
   160dc:	movt	r1, #4
   160e0:	str	r0, [sp, #8]
   160e4:	str	r8, [sp]
   160e8:	str	r8, [sp, #4]
   160ec:	mov	r0, r4
   160f0:	mov	r2, sl
   160f4:	bl	15040 <test_json@@Base>
   160f8:	movw	r7, #21837	; 0x554d
   160fc:	movw	r1, #21798	; 0x5526
   16100:	str	r0, [fp, #-52]	; 0xffffffcc
   16104:	mov	r0, #528	; 0x210
   16108:	mov	r3, #0
   1610c:	str	r8, [sp]
   16110:	str	r8, [sp, #4]
   16114:	movt	r7, #4
   16118:	movt	r1, #4
   1611c:	str	r0, [sp, #8]
   16120:	mov	r0, r4
   16124:	mov	r2, r7
   16128:	bl	15040 <test_json@@Base>
   1612c:	movw	r6, #21910	; 0x5596
   16130:	movw	r1, #21870	; 0x556e
   16134:	str	r0, [fp, #-56]	; 0xffffffc8
   16138:	movw	r0, #531	; 0x213
   1613c:	mov	r3, #0
   16140:	str	r8, [sp]
   16144:	str	r8, [sp, #4]
   16148:	movt	r6, #4
   1614c:	movt	r1, #4
   16150:	str	r0, [sp, #8]
   16154:	mov	r0, r4
   16158:	mov	r2, r6
   1615c:	bl	15040 <test_json@@Base>
   16160:	movw	r9, #21994	; 0x55ea
   16164:	movw	r1, #21945	; 0x55b9
   16168:	str	r0, [fp, #-60]	; 0xffffffc4
   1616c:	movw	r0, #534	; 0x216
   16170:	mov	r3, #0
   16174:	str	r8, [sp]
   16178:	str	r8, [sp, #4]
   1617c:	movt	r9, #4
   16180:	movt	r1, #4
   16184:	str	r0, [sp, #8]
   16188:	mov	r0, r4
   1618c:	mov	r2, r9
   16190:	bl	15040 <test_json@@Base>
   16194:	movw	r1, #22038	; 0x5616
   16198:	str	r0, [fp, #-64]	; 0xffffffc0
   1619c:	movw	r0, #537	; 0x219
   161a0:	mov	r2, r9
   161a4:	mov	r3, #0
   161a8:	str	r8, [sp]
   161ac:	str	r8, [sp, #4]
   161b0:	movt	r1, #4
   161b4:	str	r0, [sp, #8]
   161b8:	mov	r0, r4
   161bc:	bl	15040 <test_json@@Base>
   161c0:	movw	r1, #22096	; 0x5650
   161c4:	str	r0, [fp, #-68]	; 0xffffffbc
   161c8:	mov	r0, #540	; 0x21c
   161cc:	mov	r2, r7
   161d0:	mov	r3, #0
   161d4:	str	r8, [sp]
   161d8:	str	r8, [sp, #4]
   161dc:	movt	r1, #4
   161e0:	str	r0, [sp, #8]
   161e4:	mov	r0, r4
   161e8:	bl	15040 <test_json@@Base>
   161ec:	movw	r1, #22134	; 0x5676
   161f0:	str	r0, [fp, #-72]	; 0xffffffb8
   161f4:	movw	r0, #543	; 0x21f
   161f8:	mov	r2, r6
   161fc:	mov	r3, #0
   16200:	str	r8, [sp]
   16204:	str	r8, [sp, #4]
   16208:	movt	r1, #4
   1620c:	str	r0, [sp, #8]
   16210:	mov	r0, r4
   16214:	bl	15040 <test_json@@Base>
   16218:	movw	r1, #22175	; 0x569f
   1621c:	str	r0, [fp, #-76]	; 0xffffffb4
   16220:	movw	r0, #547	; 0x223
   16224:	mov	r2, sl
   16228:	mov	r3, #0
   1622c:	str	r8, [sp]
   16230:	str	r8, [sp, #4]
   16234:	movt	r1, #4
   16238:	str	r0, [sp, #8]
   1623c:	mov	r0, r4
   16240:	bl	15040 <test_json@@Base>
   16244:	movw	r1, #13117	; 0x333d
   16248:	str	r0, [fp, #-80]	; 0xffffffb0
   1624c:	movw	r0, #551	; 0x227
   16250:	mov	r2, sl
   16254:	mov	r3, #0
   16258:	str	r8, [sp]
   1625c:	str	r8, [sp, #4]
   16260:	movt	r1, #4
   16264:	str	r0, [sp, #8]
   16268:	mov	r0, r4
   1626c:	bl	15040 <test_json@@Base>
   16270:	movw	r1, #22214	; 0x56c6
   16274:	str	r0, [fp, #-84]	; 0xffffffac
   16278:	movw	r0, #555	; 0x22b
   1627c:	mov	r2, sl
   16280:	mov	r3, #0
   16284:	str	r8, [sp]
   16288:	str	r8, [sp, #4]
   1628c:	movt	r1, #4
   16290:	str	r0, [sp, #8]
   16294:	mov	r0, r4
   16298:	bl	15040 <test_json@@Base>
   1629c:	movw	r1, #22235	; 0x56db
   162a0:	str	r0, [fp, #-88]	; 0xffffffa8
   162a4:	movw	r0, #558	; 0x22e
   162a8:	mov	r2, r7
   162ac:	mov	r3, #0
   162b0:	str	r8, [sp]
   162b4:	str	r8, [sp, #4]
   162b8:	movt	r1, #4
   162bc:	str	r0, [sp, #8]
   162c0:	mov	r0, r4
   162c4:	bl	15040 <test_json@@Base>
   162c8:	movw	r1, #22270	; 0x56fe
   162cc:	str	r0, [fp, #-92]	; 0xffffffa4
   162d0:	movw	r0, #561	; 0x231
   162d4:	mov	r2, r6
   162d8:	mov	r3, #0
   162dc:	str	r8, [sp]
   162e0:	str	r8, [sp, #4]
   162e4:	movt	r1, #4
   162e8:	str	r0, [sp, #8]
   162ec:	mov	r0, r4
   162f0:	bl	15040 <test_json@@Base>
   162f4:	movw	r1, #22306	; 0x5722
   162f8:	str	r0, [fp, #-96]	; 0xffffffa0
   162fc:	mov	r0, #564	; 0x234
   16300:	mov	r2, r9
   16304:	mov	r3, #0
   16308:	str	r8, [sp]
   1630c:	str	r8, [sp, #4]
   16310:	movt	r1, #4
   16314:	str	r0, [sp, #8]
   16318:	mov	r0, r4
   1631c:	bl	15040 <test_json@@Base>
   16320:	movw	r1, #22351	; 0x574f
   16324:	str	r0, [fp, #-100]	; 0xffffff9c
   16328:	movw	r0, #567	; 0x237
   1632c:	mov	r2, r9
   16330:	mov	r3, #0
   16334:	str	r8, [sp]
   16338:	str	r8, [sp, #4]
   1633c:	movt	r1, #4
   16340:	str	r0, [sp, #8]
   16344:	mov	r0, r4
   16348:	bl	15040 <test_json@@Base>
   1634c:	movw	r1, #22405	; 0x5785
   16350:	str	r0, [fp, #-104]	; 0xffffff98
   16354:	movw	r0, #570	; 0x23a
   16358:	mov	r2, r7
   1635c:	mov	r3, #0
   16360:	str	r8, [sp]
   16364:	str	r8, [sp, #4]
   16368:	movt	r1, #4
   1636c:	str	r0, [sp, #8]
   16370:	mov	r0, r4
   16374:	bl	15040 <test_json@@Base>
   16378:	movw	r1, #22437	; 0x57a5
   1637c:	str	r0, [fp, #-108]	; 0xffffff94
   16380:	movw	r0, #573	; 0x23d
   16384:	mov	r2, r6
   16388:	mov	r3, #0
   1638c:	str	r8, [sp]
   16390:	str	r8, [sp, #4]
   16394:	movt	r1, #4
   16398:	str	r0, [sp, #8]
   1639c:	mov	r0, r4
   163a0:	bl	15040 <test_json@@Base>
   163a4:	movw	r1, #22471	; 0x57c7
   163a8:	str	r0, [fp, #-112]	; 0xffffff90
   163ac:	movw	r0, #577	; 0x241
   163b0:	mov	r2, sl
   163b4:	mov	r3, #0
   163b8:	str	r8, [sp]
   163bc:	str	r8, [sp, #4]
   163c0:	movt	r1, #4
   163c4:	str	r0, [sp, #8]
   163c8:	mov	r0, r4
   163cc:	bl	15040 <test_json@@Base>
   163d0:	movw	r1, #13830	; 0x3606
   163d4:	str	r0, [fp, #-116]	; 0xffffff8c
   163d8:	movw	r0, #581	; 0x245
   163dc:	mov	r2, sl
   163e0:	mov	r3, #0
   163e4:	str	r8, [sp]
   163e8:	str	r8, [sp, #4]
   163ec:	movt	r1, #4
   163f0:	str	r0, [sp, #8]
   163f4:	mov	r0, r4
   163f8:	bl	15040 <test_json@@Base>
   163fc:	movw	r5, #22542	; 0x580e
   16400:	movw	r1, #22504	; 0x57e8
   16404:	str	r0, [fp, #-120]	; 0xffffff88
   16408:	movw	r0, #585	; 0x249
   1640c:	mov	r3, #0
   16410:	str	r8, [sp]
   16414:	str	r8, [sp, #4]
   16418:	movt	r5, #4
   1641c:	movt	r1, #4
   16420:	str	r0, [sp, #8]
   16424:	mov	r0, r4
   16428:	mov	r2, r5
   1642c:	bl	15040 <test_json@@Base>
   16430:	movw	r1, #22581	; 0x5835
   16434:	str	r0, [fp, #-124]	; 0xffffff84
   16438:	movw	r0, #591	; 0x24f
   1643c:	mov	r2, r5
   16440:	mov	r3, #0
   16444:	str	r8, [sp]
   16448:	str	r8, [sp, #4]
   1644c:	movt	r1, #4
   16450:	str	r0, [sp, #8]
   16454:	mov	r0, r4
   16458:	bl	15040 <test_json@@Base>
   1645c:	movw	r1, #22618	; 0x585a
   16460:	str	r0, [fp, #-128]	; 0xffffff80
   16464:	movw	r0, #594	; 0x252
   16468:	mov	r2, r5
   1646c:	mov	r3, #0
   16470:	str	r8, [sp]
   16474:	str	r8, [sp, #4]
   16478:	movt	r1, #4
   1647c:	str	r0, [sp, #8]
   16480:	mov	r0, r4
   16484:	bl	15040 <test_json@@Base>
   16488:	movw	r1, #22655	; 0x587f
   1648c:	str	r0, [fp, #-132]	; 0xffffff7c
   16490:	movw	r0, #597	; 0x255
   16494:	mov	r2, r9
   16498:	mov	r3, #0
   1649c:	str	r8, [sp]
   164a0:	str	r8, [sp, #4]
   164a4:	movt	r1, #4
   164a8:	str	r0, [sp, #8]
   164ac:	mov	r0, r4
   164b0:	bl	15040 <test_json@@Base>
   164b4:	movw	r1, #22701	; 0x58ad
   164b8:	str	r0, [fp, #-136]	; 0xffffff78
   164bc:	movw	r0, #601	; 0x259
   164c0:	mov	r2, r7
   164c4:	mov	r3, #0
   164c8:	str	r8, [sp]
   164cc:	str	r8, [sp, #4]
   164d0:	movt	r1, #4
   164d4:	str	r0, [sp, #8]
   164d8:	mov	r0, r4
   164dc:	bl	15040 <test_json@@Base>
   164e0:	movw	r1, #22734	; 0x58ce
   164e4:	str	r0, [fp, #-140]	; 0xffffff74
   164e8:	mov	r0, #604	; 0x25c
   164ec:	mov	r2, r6
   164f0:	mov	r3, #0
   164f4:	str	r8, [sp]
   164f8:	str	r8, [sp, #4]
   164fc:	movt	r1, #4
   16500:	str	r0, [sp, #8]
   16504:	mov	r0, r4
   16508:	bl	15040 <test_json@@Base>
   1650c:	movw	r1, #22767	; 0x58ef
   16510:	movw	r2, #22800	; 0x5910
   16514:	str	r0, [fp, #-144]	; 0xffffff70
   16518:	movw	r0, #607	; 0x25f
   1651c:	mov	r3, #0
   16520:	str	r8, [sp]
   16524:	str	r8, [sp, #4]
   16528:	movt	r1, #4
   1652c:	movt	r2, #4
   16530:	str	r0, [sp, #8]
   16534:	mov	r0, r4
   16538:	bl	15040 <test_json@@Base>
   1653c:	movw	r1, #22838	; 0x5936
   16540:	str	r0, [fp, #-148]	; 0xffffff6c
   16544:	movw	r0, #610	; 0x262
   16548:	mov	r2, r9
   1654c:	mov	r3, #0
   16550:	str	r8, [sp]
   16554:	str	r8, [sp, #4]
   16558:	movt	r1, #4
   1655c:	str	r0, [sp, #8]
   16560:	mov	r0, r4
   16564:	bl	15040 <test_json@@Base>
   16568:	movw	r1, #22872	; 0x5958
   1656c:	movw	r2, #22906	; 0x597a
   16570:	str	r0, [fp, #-152]	; 0xffffff68
   16574:	movw	r0, #613	; 0x265
   16578:	mov	r3, #0
   1657c:	str	r8, [sp]
   16580:	str	r8, [sp, #4]
   16584:	movt	r1, #4
   16588:	movt	r2, #4
   1658c:	str	r0, [sp, #8]
   16590:	mov	r0, r4
   16594:	bl	15040 <test_json@@Base>
   16598:	movw	r1, #22936	; 0x5998
   1659c:	movw	r2, #22970	; 0x59ba
   165a0:	str	r0, [sp, #156]	; 0x9c
   165a4:	mov	r0, #616	; 0x268
   165a8:	mov	r3, #0
   165ac:	str	r8, [sp]
   165b0:	str	r8, [sp, #4]
   165b4:	movt	r1, #4
   165b8:	movt	r2, #4
   165bc:	str	r0, [sp, #8]
   165c0:	mov	r0, r4
   165c4:	bl	15040 <test_json@@Base>
   165c8:	movw	r1, #23000	; 0x59d8
   165cc:	movw	r2, #23033	; 0x59f9
   165d0:	str	r0, [sp, #152]	; 0x98
   165d4:	movw	r0, #619	; 0x26b
   165d8:	mov	r3, #0
   165dc:	str	r8, [sp]
   165e0:	str	r8, [sp, #4]
   165e4:	movt	r1, #4
   165e8:	movt	r2, #4
   165ec:	str	r0, [sp, #8]
   165f0:	mov	r0, r4
   165f4:	bl	15040 <test_json@@Base>
   165f8:	movw	r1, #23062	; 0x5a16
   165fc:	str	r0, [sp, #148]	; 0x94
   16600:	movw	r0, #622	; 0x26e
   16604:	mov	r2, r7
   16608:	mov	r3, #0
   1660c:	str	r8, [sp]
   16610:	str	r8, [sp, #4]
   16614:	movt	r1, #4
   16618:	str	r0, [sp, #8]
   1661c:	mov	r0, r4
   16620:	bl	15040 <test_json@@Base>
   16624:	movw	r1, #23105	; 0x5a41
   16628:	str	r0, [sp, #144]	; 0x90
   1662c:	movw	r0, #625	; 0x271
   16630:	mov	r2, r7
   16634:	mov	r3, #0
   16638:	str	r8, [sp]
   1663c:	str	r8, [sp, #4]
   16640:	movt	r1, #4
   16644:	str	r0, [sp, #8]
   16648:	mov	r0, r4
   1664c:	bl	15040 <test_json@@Base>
   16650:	movw	r6, #23163	; 0x5a7b
   16654:	movw	r5, #23205	; 0x5aa5
   16658:	str	r0, [sp, #140]	; 0x8c
   1665c:	mov	r0, #628	; 0x274
   16660:	mov	r3, #0
   16664:	str	r8, [sp]
   16668:	str	r8, [sp, #4]
   1666c:	movt	r6, #4
   16670:	movt	r5, #4
   16674:	str	r0, [sp, #8]
   16678:	mov	r0, r4
   1667c:	mov	r1, r6
   16680:	mov	r2, r5
   16684:	bl	15040 <test_json@@Base>
   16688:	str	r0, [sp, #136]	; 0x88
   1668c:	movw	r0, #631	; 0x277
   16690:	mov	r1, r6
   16694:	mov	r2, r5
   16698:	mov	r3, #0
   1669c:	str	r8, [sp]
   166a0:	str	r8, [sp, #4]
   166a4:	str	r0, [sp, #8]
   166a8:	mov	r0, r4
   166ac:	bl	15040 <test_json@@Base>
   166b0:	movw	r1, #23231	; 0x5abf
   166b4:	movw	r2, #23312	; 0x5b10
   166b8:	str	r0, [sp, #132]	; 0x84
   166bc:	movw	r0, #634	; 0x27a
   166c0:	mov	r3, #0
   166c4:	str	r8, [sp]
   166c8:	str	r8, [sp, #4]
   166cc:	movt	r1, #4
   166d0:	movt	r2, #4
   166d4:	str	r0, [sp, #8]
   166d8:	mov	r0, r4
   166dc:	bl	15040 <test_json@@Base>
   166e0:	movw	r1, #23383	; 0x5b57
   166e4:	movw	r2, #23468	; 0x5bac
   166e8:	str	r0, [sp, #128]	; 0x80
   166ec:	movw	r0, #638	; 0x27e
   166f0:	mov	r3, #0
   166f4:	str	r8, [sp]
   166f8:	str	r8, [sp, #4]
   166fc:	movt	r1, #4
   16700:	movt	r2, #4
   16704:	str	r0, [sp, #8]
   16708:	mov	r0, r4
   1670c:	bl	15040 <test_json@@Base>
   16710:	movw	r1, #23542	; 0x5bf6
   16714:	movw	r2, #23653	; 0x5c65
   16718:	str	r0, [sp, #124]	; 0x7c
   1671c:	movw	r0, #642	; 0x282
   16720:	mov	r3, #0
   16724:	str	r8, [sp]
   16728:	str	r8, [sp, #4]
   1672c:	movt	r1, #4
   16730:	movt	r2, #4
   16734:	str	r0, [sp, #8]
   16738:	mov	r0, r4
   1673c:	bl	15040 <test_json@@Base>
   16740:	movw	r1, #23751	; 0x5cc7
   16744:	str	r0, [sp, #120]	; 0x78
   16748:	movw	r0, #646	; 0x286
   1674c:	mov	r2, sl
   16750:	mov	r3, #0
   16754:	str	r8, [sp]
   16758:	str	r8, [sp, #4]
   1675c:	movt	r1, #4
   16760:	str	r0, [sp, #8]
   16764:	mov	r0, r4
   16768:	bl	15040 <test_json@@Base>
   1676c:	movw	r1, #23794	; 0x5cf2
   16770:	str	r0, [sp, #116]	; 0x74
   16774:	movw	r0, #649	; 0x289
   16778:	mov	r2, sl
   1677c:	mov	r3, #0
   16780:	str	r8, [sp]
   16784:	str	r8, [sp, #4]
   16788:	movt	r1, #4
   1678c:	str	r0, [sp, #8]
   16790:	mov	r0, r4
   16794:	bl	15040 <test_json@@Base>
   16798:	movw	r1, #23832	; 0x5d18
   1679c:	str	r0, [sp, #112]	; 0x70
   167a0:	movw	r0, #653	; 0x28d
   167a4:	mov	r2, r7
   167a8:	mov	r3, #0
   167ac:	str	r8, [sp]
   167b0:	str	r8, [sp, #4]
   167b4:	movt	r1, #4
   167b8:	str	r0, [sp, #8]
   167bc:	mov	r0, r4
   167c0:	bl	15040 <test_json@@Base>
   167c4:	movw	r1, #23861	; 0x5d35
   167c8:	movw	r2, #21910	; 0x5596
   167cc:	str	r0, [sp, #108]	; 0x6c
   167d0:	mov	r0, #656	; 0x290
   167d4:	mov	r3, #0
   167d8:	str	r8, [sp]
   167dc:	str	r8, [sp, #4]
   167e0:	movt	r1, #4
   167e4:	movt	r2, #4
   167e8:	str	r0, [sp, #8]
   167ec:	mov	r0, r4
   167f0:	bl	15040 <test_json@@Base>
   167f4:	movw	r1, #23890	; 0x5d52
   167f8:	movw	r2, #22800	; 0x5910
   167fc:	str	r0, [sp, #104]	; 0x68
   16800:	movw	r0, #659	; 0x293
   16804:	mov	r3, #0
   16808:	str	r8, [sp]
   1680c:	str	r8, [sp, #4]
   16810:	movt	r1, #4
   16814:	movt	r2, #4
   16818:	str	r0, [sp, #8]
   1681c:	mov	r0, r4
   16820:	bl	15040 <test_json@@Base>
   16824:	movw	r1, #23919	; 0x5d6f
   16828:	str	r0, [sp, #100]	; 0x64
   1682c:	movw	r0, #662	; 0x296
   16830:	mov	r2, r9
   16834:	mov	r3, #0
   16838:	str	r8, [sp]
   1683c:	str	r8, [sp, #4]
   16840:	movt	r1, #4
   16844:	str	r0, [sp, #8]
   16848:	mov	r0, r4
   1684c:	bl	15040 <test_json@@Base>
   16850:	movw	r1, #23949	; 0x5d8d
   16854:	movw	r2, #22906	; 0x597a
   16858:	str	r0, [sp, #96]	; 0x60
   1685c:	movw	r0, #665	; 0x299
   16860:	mov	r3, #0
   16864:	str	r8, [sp]
   16868:	str	r8, [sp, #4]
   1686c:	movt	r1, #4
   16870:	movt	r2, #4
   16874:	str	r0, [sp, #8]
   16878:	mov	r0, r4
   1687c:	bl	15040 <test_json@@Base>
   16880:	movw	r1, #23979	; 0x5dab
   16884:	movw	r2, #22970	; 0x59ba
   16888:	str	r0, [sp, #92]	; 0x5c
   1688c:	mov	r0, #668	; 0x29c
   16890:	mov	r3, #0
   16894:	str	r8, [sp]
   16898:	str	r8, [sp, #4]
   1689c:	movt	r1, #4
   168a0:	movt	r2, #4
   168a4:	str	r0, [sp, #8]
   168a8:	mov	r0, r4
   168ac:	bl	15040 <test_json@@Base>
   168b0:	movw	r1, #24009	; 0x5dc9
   168b4:	movw	r2, #23033	; 0x59f9
   168b8:	str	r0, [sp, #88]	; 0x58
   168bc:	movw	r0, #671	; 0x29f
   168c0:	mov	r3, #0
   168c4:	str	r8, [sp]
   168c8:	str	r8, [sp, #4]
   168cc:	movt	r1, #4
   168d0:	movt	r2, #4
   168d4:	str	r0, [sp, #8]
   168d8:	mov	r0, r4
   168dc:	bl	15040 <test_json@@Base>
   168e0:	movw	r1, #24038	; 0x5de6
   168e4:	str	r0, [sp, #84]	; 0x54
   168e8:	movw	r0, #674	; 0x2a2
   168ec:	mov	r2, r7
   168f0:	mov	r3, #0
   168f4:	str	r8, [sp]
   168f8:	str	r8, [sp, #4]
   168fc:	movt	r1, #4
   16900:	str	r0, [sp, #8]
   16904:	mov	r0, r4
   16908:	bl	15040 <test_json@@Base>
   1690c:	movw	r1, #24075	; 0x5e0b
   16910:	str	r0, [sp, #80]	; 0x50
   16914:	movw	r0, #677	; 0x2a5
   16918:	mov	r2, r7
   1691c:	mov	r3, #0
   16920:	str	r8, [sp]
   16924:	str	r8, [sp, #4]
   16928:	movt	r1, #4
   1692c:	str	r0, [sp, #8]
   16930:	mov	r0, r4
   16934:	bl	15040 <test_json@@Base>
   16938:	movw	r6, #24127	; 0x5e3f
   1693c:	str	r0, [sp, #76]	; 0x4c
   16940:	mov	r0, #680	; 0x2a8
   16944:	mov	r2, r5
   16948:	mov	r3, #0
   1694c:	str	r8, [sp]
   16950:	str	r8, [sp, #4]
   16954:	movt	r6, #4
   16958:	str	r0, [sp, #8]
   1695c:	mov	r0, r4
   16960:	mov	r1, r6
   16964:	bl	15040 <test_json@@Base>
   16968:	str	r0, [sp, #72]	; 0x48
   1696c:	movw	r0, #683	; 0x2ab
   16970:	mov	r1, r6
   16974:	mov	r2, r5
   16978:	mov	r3, #0
   1697c:	str	r8, [sp]
   16980:	str	r8, [sp, #4]
   16984:	str	r0, [sp, #8]
   16988:	mov	r0, r4
   1698c:	bl	15040 <test_json@@Base>
   16990:	movw	r1, #24163	; 0x5e63
   16994:	movw	r2, #23312	; 0x5b10
   16998:	str	r0, [sp, #68]	; 0x44
   1699c:	movw	r0, #686	; 0x2ae
   169a0:	mov	r3, #0
   169a4:	str	r8, [sp]
   169a8:	str	r8, [sp, #4]
   169ac:	movt	r1, #4
   169b0:	movt	r2, #4
   169b4:	str	r0, [sp, #8]
   169b8:	mov	r0, r4
   169bc:	bl	15040 <test_json@@Base>
   169c0:	movw	r1, #24234	; 0x5eaa
   169c4:	movw	r2, #23468	; 0x5bac
   169c8:	str	r0, [sp, #64]	; 0x40
   169cc:	movw	r0, #690	; 0x2b2
   169d0:	mov	r3, #0
   169d4:	str	r8, [sp]
   169d8:	str	r8, [sp, #4]
   169dc:	movt	r1, #4
   169e0:	movt	r2, #4
   169e4:	str	r0, [sp, #8]
   169e8:	mov	r0, r4
   169ec:	bl	15040 <test_json@@Base>
   169f0:	movw	r1, #24309	; 0x5ef5
   169f4:	movw	r2, #23653	; 0x5c65
   169f8:	str	r0, [sp, #60]	; 0x3c
   169fc:	movw	r0, #694	; 0x2b6
   16a00:	mov	r3, #0
   16a04:	str	r8, [sp]
   16a08:	str	r8, [sp, #4]
   16a0c:	movt	r1, #4
   16a10:	movt	r2, #4
   16a14:	str	r0, [sp, #8]
   16a18:	mov	r0, r4
   16a1c:	bl	15040 <test_json@@Base>
   16a20:	movw	r1, #24404	; 0x5f54
   16a24:	str	r0, [sp, #56]	; 0x38
   16a28:	movw	r0, #698	; 0x2ba
   16a2c:	mov	r2, sl
   16a30:	mov	r3, #0
   16a34:	str	r8, [sp]
   16a38:	str	r8, [sp, #4]
   16a3c:	movt	r1, #4
   16a40:	str	r0, [sp, #8]
   16a44:	mov	r0, r4
   16a48:	bl	15040 <test_json@@Base>
   16a4c:	movw	r1, #24441	; 0x5f79
   16a50:	str	r0, [sp, #52]	; 0x34
   16a54:	movw	r0, #701	; 0x2bd
   16a58:	mov	r2, sl
   16a5c:	mov	r3, #0
   16a60:	str	r8, [sp]
   16a64:	str	r8, [sp, #4]
   16a68:	movt	r1, #4
   16a6c:	str	r0, [sp, #8]
   16a70:	mov	r0, r4
   16a74:	bl	15040 <test_json@@Base>
   16a78:	movw	r5, #24568	; 0x5ff8
   16a7c:	movw	r1, #24475	; 0x5f9b
   16a80:	str	r0, [sp, #48]	; 0x30
   16a84:	movw	r0, #711	; 0x2c7
   16a88:	mov	r3, #0
   16a8c:	str	r8, [sp]
   16a90:	str	r8, [sp, #4]
   16a94:	movt	r5, #4
   16a98:	movt	r1, #4
   16a9c:	str	r0, [sp, #8]
   16aa0:	mov	r0, r4
   16aa4:	mov	r2, r5
   16aa8:	bl	15040 <test_json@@Base>
   16aac:	movw	r1, #24662	; 0x6056
   16ab0:	str	r0, [sp, #44]	; 0x2c
   16ab4:	mov	r0, #716	; 0x2cc
   16ab8:	mov	r2, r5
   16abc:	mov	r3, #0
   16ac0:	str	r8, [sp]
   16ac4:	str	r8, [sp, #4]
   16ac8:	movt	r1, #4
   16acc:	str	r0, [sp, #8]
   16ad0:	mov	r0, r4
   16ad4:	bl	15040 <test_json@@Base>
   16ad8:	movw	r1, #24771	; 0x60c3
   16adc:	movw	r2, #24832	; 0x6100
   16ae0:	str	r0, [sp, #40]	; 0x28
   16ae4:	movw	r0, #731	; 0x2db
   16ae8:	mov	r3, #0
   16aec:	str	r8, [sp]
   16af0:	str	r8, [sp, #4]
   16af4:	movt	r1, #4
   16af8:	movt	r2, #4
   16afc:	str	r0, [sp, #8]
   16b00:	mov	r0, r4
   16b04:	bl	15040 <test_json@@Base>
   16b08:	movw	r1, #24880	; 0x6130
   16b0c:	movw	r2, #24906	; 0x614a
   16b10:	str	r0, [sp, #36]	; 0x24
   16b14:	movw	r0, #734	; 0x2de
   16b18:	mov	r3, #0
   16b1c:	str	r8, [sp]
   16b20:	str	r8, [sp, #4]
   16b24:	movt	r1, #4
   16b28:	movt	r2, #4
   16b2c:	str	r0, [sp, #8]
   16b30:	mov	r0, r4
   16b34:	bl	15040 <test_json@@Base>
   16b38:	movw	r5, #24996	; 0x61a4
   16b3c:	movw	r1, #24924	; 0x615c
   16b40:	str	r0, [sp, #32]
   16b44:	movw	r0, #738	; 0x2e2
   16b48:	mov	r3, #0
   16b4c:	str	r8, [sp]
   16b50:	str	r8, [sp, #4]
   16b54:	movt	r5, #4
   16b58:	movt	r1, #4
   16b5c:	str	r0, [sp, #8]
   16b60:	mov	r0, r4
   16b64:	mov	r2, r5
   16b68:	bl	15040 <test_json@@Base>
   16b6c:	movw	r1, #25061	; 0x61e5
   16b70:	str	r0, [sp, #28]
   16b74:	movw	r0, #750	; 0x2ee
   16b78:	mov	r2, r5
   16b7c:	mov	r3, #0
   16b80:	str	r8, [sp]
   16b84:	str	r8, [sp, #4]
   16b88:	movt	r1, #4
   16b8c:	str	r0, [sp, #8]
   16b90:	mov	r0, r4
   16b94:	bl	15040 <test_json@@Base>
   16b98:	movw	r1, #25218	; 0x6282
   16b9c:	movw	r2, #25257	; 0x62a9
   16ba0:	str	r0, [sp, #24]
   16ba4:	movw	r0, #766	; 0x2fe
   16ba8:	mov	r3, #0
   16bac:	str	r8, [sp]
   16bb0:	str	r8, [sp, #4]
   16bb4:	movt	r1, #4
   16bb8:	movt	r2, #4
   16bbc:	str	r0, [sp, #8]
   16bc0:	mov	r0, r4
   16bc4:	bl	15040 <test_json@@Base>
   16bc8:	movw	r1, #25291	; 0x62cb
   16bcc:	movw	r2, #25338	; 0x62fa
   16bd0:	str	r0, [sp, #20]
   16bd4:	movw	r0, #770	; 0x302
   16bd8:	mov	r3, #0
   16bdc:	str	r8, [sp]
   16be0:	str	r8, [sp, #4]
   16be4:	movt	r1, #4
   16be8:	movt	r2, #4
   16bec:	str	r0, [sp, #8]
   16bf0:	mov	r0, r4
   16bf4:	bl	15040 <test_json@@Base>
   16bf8:	movw	r1, #25380	; 0x6324
   16bfc:	movw	r2, #25503	; 0x639f
   16c00:	str	r0, [sp, #16]
   16c04:	mov	r0, #776	; 0x308
   16c08:	mov	r3, #0
   16c0c:	str	r8, [sp]
   16c10:	str	r8, [sp, #4]
   16c14:	movt	r1, #4
   16c18:	movt	r2, #4
   16c1c:	str	r0, [sp, #8]
   16c20:	mov	r0, r4
   16c24:	bl	15040 <test_json@@Base>
   16c28:	movw	r1, #25615	; 0x640f
   16c2c:	mov	r7, r0
   16c30:	movw	r0, #781	; 0x30d
   16c34:	mov	r2, sl
   16c38:	mov	r3, #0
   16c3c:	str	r8, [sp]
   16c40:	str	r8, [sp, #4]
   16c44:	movt	r1, #4
   16c48:	str	r0, [sp, #8]
   16c4c:	mov	r0, r4
   16c50:	bl	15040 <test_json@@Base>
   16c54:	movw	r1, #25735	; 0x6487
   16c58:	movw	r2, #25857	; 0x6501
   16c5c:	mov	r5, r0
   16c60:	movw	r0, #786	; 0x312
   16c64:	mov	r3, #0
   16c68:	str	r8, [sp]
   16c6c:	str	r8, [sp, #4]
   16c70:	movt	r1, #4
   16c74:	movt	r2, #4
   16c78:	str	r0, [sp, #8]
   16c7c:	mov	r0, r4
   16c80:	bl	15040 <test_json@@Base>
   16c84:	movw	r1, #25968	; 0x6570
   16c88:	movw	r2, #26107	; 0x65fb
   16c8c:	mov	r6, r0
   16c90:	movw	r0, #791	; 0x317
   16c94:	mov	r3, #0
   16c98:	str	r8, [sp]
   16c9c:	str	r8, [sp, #4]
   16ca0:	movt	r1, #4
   16ca4:	movt	r2, #4
   16ca8:	str	r0, [sp, #8]
   16cac:	mov	r0, r4
   16cb0:	bl	15040 <test_json@@Base>
   16cb4:	movw	r1, #26233	; 0x6679
   16cb8:	movw	r2, #26356	; 0x66f4
   16cbc:	mov	sl, r0
   16cc0:	mov	r0, #796	; 0x31c
   16cc4:	mov	r3, #0
   16cc8:	str	r8, [sp]
   16ccc:	str	r8, [sp, #4]
   16cd0:	movt	r1, #4
   16cd4:	movt	r2, #4
   16cd8:	str	r0, [sp, #8]
   16cdc:	mov	r0, r4
   16ce0:	bl	15040 <test_json@@Base>
   16ce4:	movw	r1, #26468	; 0x6764
   16ce8:	movw	r2, #26606	; 0x67ee
   16cec:	mov	r9, r0
   16cf0:	movw	r0, #801	; 0x321
   16cf4:	mov	r3, #0
   16cf8:	str	r8, [sp]
   16cfc:	str	r8, [sp, #4]
   16d00:	movt	r1, #4
   16d04:	movt	r2, #4
   16d08:	str	r0, [sp, #8]
   16d0c:	mov	r0, r4
   16d10:	bl	15040 <test_json@@Base>
   16d14:	movw	r1, #806	; 0x326
   16d18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16d1c:	mov	r3, #0
   16d20:	str	r8, [sp]
   16d24:	str	r8, [sp, #4]
   16d28:	str	r1, [sp, #8]
   16d2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16d30:	orr	r1, r2, r1
   16d34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d38:	orr	r1, r1, r2
   16d3c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16d40:	orr	r1, r1, r2
   16d44:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16d48:	orr	r1, r1, r2
   16d4c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16d50:	orr	r1, r1, r2
   16d54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16d58:	orr	r1, r1, r2
   16d5c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16d60:	orr	r1, r1, r2
   16d64:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16d68:	orr	r1, r1, r2
   16d6c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16d70:	orr	r1, r1, r2
   16d74:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16d78:	orr	r1, r1, r2
   16d7c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16d80:	orr	r1, r1, r2
   16d84:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16d88:	orr	r1, r1, r2
   16d8c:	ldr	r2, [fp, #-84]	; 0xffffffac
   16d90:	orr	r1, r1, r2
   16d94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16d98:	orr	r1, r1, r2
   16d9c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16da0:	orr	r1, r1, r2
   16da4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16da8:	orr	r1, r1, r2
   16dac:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16db0:	orr	r1, r1, r2
   16db4:	ldr	r2, [fp, #-104]	; 0xffffff98
   16db8:	orr	r1, r1, r2
   16dbc:	ldr	r2, [fp, #-108]	; 0xffffff94
   16dc0:	orr	r1, r1, r2
   16dc4:	ldr	r2, [fp, #-112]	; 0xffffff90
   16dc8:	orr	r1, r1, r2
   16dcc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16dd0:	orr	r1, r1, r2
   16dd4:	ldr	r2, [fp, #-120]	; 0xffffff88
   16dd8:	orr	r1, r1, r2
   16ddc:	ldr	r2, [fp, #-124]	; 0xffffff84
   16de0:	orr	r1, r1, r2
   16de4:	ldr	r2, [fp, #-128]	; 0xffffff80
   16de8:	orr	r1, r1, r2
   16dec:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16df0:	orr	r1, r1, r2
   16df4:	ldr	r2, [fp, #-136]	; 0xffffff78
   16df8:	orr	r1, r1, r2
   16dfc:	ldr	r2, [fp, #-140]	; 0xffffff74
   16e00:	orr	r1, r1, r2
   16e04:	ldr	r2, [fp, #-144]	; 0xffffff70
   16e08:	orr	r1, r1, r2
   16e0c:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16e10:	orr	r1, r1, r2
   16e14:	ldr	r2, [fp, #-152]	; 0xffffff68
   16e18:	orr	r1, r1, r2
   16e1c:	ldr	r2, [sp, #156]	; 0x9c
   16e20:	orr	r1, r1, r2
   16e24:	ldr	r2, [sp, #152]	; 0x98
   16e28:	orr	r1, r1, r2
   16e2c:	ldr	r2, [sp, #148]	; 0x94
   16e30:	orr	r1, r1, r2
   16e34:	ldr	r2, [sp, #144]	; 0x90
   16e38:	orr	r1, r1, r2
   16e3c:	ldr	r2, [sp, #140]	; 0x8c
   16e40:	orr	r1, r1, r2
   16e44:	ldr	r2, [sp, #136]	; 0x88
   16e48:	orr	r1, r1, r2
   16e4c:	ldr	r2, [sp, #132]	; 0x84
   16e50:	orr	r1, r1, r2
   16e54:	ldr	r2, [sp, #128]	; 0x80
   16e58:	orr	r1, r1, r2
   16e5c:	ldr	r2, [sp, #124]	; 0x7c
   16e60:	orr	r1, r1, r2
   16e64:	ldr	r2, [sp, #120]	; 0x78
   16e68:	orr	r1, r1, r2
   16e6c:	ldr	r2, [sp, #116]	; 0x74
   16e70:	orr	r1, r1, r2
   16e74:	ldr	r2, [sp, #112]	; 0x70
   16e78:	orr	r1, r1, r2
   16e7c:	ldr	r2, [sp, #108]	; 0x6c
   16e80:	orr	r1, r1, r2
   16e84:	ldr	r2, [sp, #104]	; 0x68
   16e88:	orr	r1, r1, r2
   16e8c:	ldr	r2, [sp, #100]	; 0x64
   16e90:	orr	r1, r1, r2
   16e94:	ldr	r2, [sp, #96]	; 0x60
   16e98:	orr	r1, r1, r2
   16e9c:	ldr	r2, [sp, #92]	; 0x5c
   16ea0:	orr	r1, r1, r2
   16ea4:	ldr	r2, [sp, #88]	; 0x58
   16ea8:	orr	r1, r1, r2
   16eac:	ldr	r2, [sp, #84]	; 0x54
   16eb0:	orr	r1, r1, r2
   16eb4:	ldr	r2, [sp, #80]	; 0x50
   16eb8:	orr	r1, r1, r2
   16ebc:	ldr	r2, [sp, #76]	; 0x4c
   16ec0:	orr	r1, r1, r2
   16ec4:	ldr	r2, [sp, #72]	; 0x48
   16ec8:	orr	r1, r1, r2
   16ecc:	ldr	r2, [sp, #68]	; 0x44
   16ed0:	orr	r1, r1, r2
   16ed4:	ldr	r2, [sp, #64]	; 0x40
   16ed8:	orr	r1, r1, r2
   16edc:	ldr	r2, [sp, #60]	; 0x3c
   16ee0:	orr	r1, r1, r2
   16ee4:	ldr	r2, [sp, #56]	; 0x38
   16ee8:	orr	r1, r1, r2
   16eec:	ldr	r2, [sp, #52]	; 0x34
   16ef0:	orr	r1, r1, r2
   16ef4:	ldr	r2, [sp, #48]	; 0x30
   16ef8:	orr	r1, r1, r2
   16efc:	ldr	r2, [sp, #44]	; 0x2c
   16f00:	orr	r1, r1, r2
   16f04:	ldr	r2, [sp, #40]	; 0x28
   16f08:	orr	r1, r1, r2
   16f0c:	ldr	r2, [sp, #36]	; 0x24
   16f10:	orr	r1, r1, r2
   16f14:	ldr	r2, [sp, #32]
   16f18:	orr	r1, r1, r2
   16f1c:	ldr	r2, [sp, #28]
   16f20:	orr	r1, r1, r2
   16f24:	ldr	r2, [sp, #24]
   16f28:	orr	r1, r1, r2
   16f2c:	ldr	r2, [sp, #20]
   16f30:	orr	r1, r1, r2
   16f34:	ldr	r2, [sp, #16]
   16f38:	orr	r1, r1, r2
   16f3c:	movw	r2, #26876	; 0x68fc
   16f40:	orr	r1, r1, r7
   16f44:	movt	r2, #4
   16f48:	orr	r1, r1, r5
   16f4c:	orr	r1, r1, r6
   16f50:	orr	r1, r1, sl
   16f54:	orr	r1, r1, r9
   16f58:	orr	r5, r1, r0
   16f5c:	movw	r1, #26733	; 0x686d
   16f60:	mov	r0, r4
   16f64:	movt	r1, #4
   16f68:	bl	15040 <test_json@@Base>
   16f6c:	orrs	r0, r5, r0
   16f70:	mvnne	r0, #0
   16f74:	sub	sp, fp, #28
   16f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f80:	add	fp, sp, #28
   16f84:	sub	sp, sp, #4
   16f88:	vpush	{d8-d9}
   16f8c:	sub	sp, sp, #80	; 0x50
   16f90:	mov	r8, r0
   16f94:	mov	r0, #0
   16f98:	mov	r4, r1
   16f9c:	mov	r1, #36	; 0x24
   16fa0:	mov	sl, r3
   16fa4:	mov	r5, r2
   16fa8:	str	r0, [r3]
   16fac:	ldr	r0, [r8]
   16fb0:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   16fb4:	cmp	r0, #0
   16fb8:	beq	16fe8 <main@@Base+0xf60>
   16fbc:	mov	r0, r8
   16fc0:	mov	r1, r4
   16fc4:	mov	r2, r5
   16fc8:	mov	r3, #33	; 0x21
   16fcc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   16fd0:	mov	r7, r0
   16fd4:	mov	r0, r7
   16fd8:	sub	sp, fp, #48	; 0x30
   16fdc:	vpop	{d8-d9}
   16fe0:	add	sp, sp, #4
   16fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fe8:	add	r0, sp, #48	; 0x30
   16fec:	mov	r1, r4
   16ff0:	mov	r2, r5
   16ff4:	mov	r3, #1
   16ff8:	str	r0, [sp]
   16ffc:	mov	r0, r8
   17000:	bl	359ec <flatcc_json_parser_prepare_unions@@Base>
   17004:	cmp	r0, r5
   17008:	beq	16fbc <main@@Base+0xf34>
   1700c:	cmp	r4, r5
   17010:	beq	17044 <main@@Base+0xfbc>
   17014:	ldrb	r0, [r4]
   17018:	cmp	r0, #123	; 0x7b
   1701c:	bne	17044 <main@@Base+0xfbc>
   17020:	add	r1, r4, #1
   17024:	sub	r0, r5, r1
   17028:	cmp	r0, #2
   1702c:	blt	170dc <main@@Base+0x1054>
   17030:	ldrb	r0, [r1]
   17034:	cmp	r0, #32
   17038:	bls	170cc <main@@Base+0x1044>
   1703c:	mov	r4, r1
   17040:	b	170ec <main@@Base+0x1064>
   17044:	mov	r0, r8
   17048:	mov	r1, r4
   1704c:	mov	r2, r5
   17050:	mov	r3, #21
   17054:	bl	333fc <flatcc_json_parser_set_error@@Base>
   17058:	mov	r4, r0
   1705c:	ldr	r0, [r8, #24]
   17060:	cmp	r0, #0
   17064:	bne	16fbc <main@@Base+0xf34>
   17068:	ldr	r0, [r8]
   1706c:	mov	r1, #3
   17070:	bl	2fdbc <flatcc_builder_check_required_field@@Base>
   17074:	cmp	r0, #0
   17078:	beq	170b0 <main@@Base+0x1028>
   1707c:	ldr	r3, [sp, #48]	; 0x30
   17080:	mov	r0, r8
   17084:	mov	r1, r4
   17088:	mov	r2, r5
   1708c:	bl	35a70 <flatcc_json_parser_finalize_unions@@Base>
   17090:	mov	r7, r0
   17094:	ldr	r0, [r8]
   17098:	bl	2ff38 <flatcc_builder_end_table@@Base>
   1709c:	cmp	r0, #0
   170a0:	mov	r4, r7
   170a4:	str	r0, [sl]
   170a8:	bne	16fd4 <main@@Base+0xf4c>
   170ac:	b	16fbc <main@@Base+0xf34>
   170b0:	mov	r0, r8
   170b4:	mov	r1, r4
   170b8:	mov	r2, r5
   170bc:	mov	r3, #29
   170c0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   170c4:	mov	r4, r0
   170c8:	b	16fbc <main@@Base+0xf34>
   170cc:	bne	170dc <main@@Base+0x1054>
   170d0:	ldrb	r0, [r4, #2]!
   170d4:	cmp	r0, #32
   170d8:	bhi	170ec <main@@Base+0x1064>
   170dc:	mov	r0, r8
   170e0:	mov	r2, r5
   170e4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   170e8:	mov	r4, r0
   170ec:	cmp	r4, r5
   170f0:	mov	r2, r5
   170f4:	beq	17130 <main@@Base+0x10a8>
   170f8:	ldrb	r0, [r4]
   170fc:	cmp	r0, #125	; 0x7d
   17100:	bne	1712c <main@@Base+0x10a4>
   17104:	add	r1, r4, #1
   17108:	sub	r0, r5, r1
   1710c:	cmp	r0, #2
   17110:	blt	20a24 <main@@Base+0xa99c>
   17114:	ldrb	r0, [r1]
   17118:	cmp	r0, #32
   1711c:	bhi	209e8 <main@@Base+0xa960>
   17120:	bne	20a24 <main@@Base+0xa99c>
   17124:	ldrb	r0, [r4, #2]!
   17128:	b	20a1c <main@@Base+0xa994>
   1712c:	mov	r2, r4
   17130:	add	r0, r8, #12
   17134:	vldr	s18, [pc, #888]	; 174b4 <main@@Base+0x142c>
   17138:	movw	lr, #29556	; 0x7374
   1713c:	vmov.f32	s16, #8	; 0x40400000  3.0
   17140:	str	r5, [sp, #44]	; 0x2c
   17144:	str	r8, [sp, #36]	; 0x24
   17148:	str	sl, [sp, #40]	; 0x28
   1714c:	str	r0, [sp, #32]
   17150:	movw	r0, #13407	; 0x345f
   17154:	movt	lr, #29797	; 0x7465
   17158:	movt	r0, #29494	; 0x7336
   1715c:	sub	r0, r0, #512	; 0x200
   17160:	sub	r0, r0, #196608	; 0x30000
   17164:	str	r0, [sp, #28]
   17168:	cmp	r2, r5
   1716c:	mov	r9, r5
   17170:	beq	171cc <main@@Base+0x1144>
   17174:	ldrb	r0, [r2]
   17178:	cmp	r0, #46	; 0x2e
   1717c:	beq	17198 <main@@Base+0x1110>
   17180:	cmp	r0, #34	; 0x22
   17184:	bne	171bc <main@@Base+0x1134>
   17188:	ldr	r0, [sp, #32]
   1718c:	mov	r1, #0
   17190:	add	r9, r2, #1
   17194:	b	171c8 <main@@Base+0x1140>
   17198:	mov	r1, r2
   1719c:	mov	r0, r8
   171a0:	mov	r2, r5
   171a4:	mov	r3, #5
   171a8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   171ac:	movw	lr, #29556	; 0x7374
   171b0:	mov	r9, r0
   171b4:	movt	lr, #29797	; 0x7465
   171b8:	b	171cc <main@@Base+0x1144>
   171bc:	ldr	r0, [sp, #32]
   171c0:	mov	r1, #1
   171c4:	mov	r9, r2
   171c8:	str	r1, [r0]
   171cc:	sub	sl, r5, r9
   171d0:	mov	r0, #8
   171d4:	cmp	sl, #8
   171d8:	movcc	r0, sl
   171dc:	sub	r2, r0, #1
   171e0:	cmp	r2, #7
   171e4:	bhi	1848c <main@@Base+0x2404>
   171e8:	add	r0, pc, #32
   171ec:	mov	r8, #0
   171f0:	mov	ip, #0
   171f4:	mov	r4, #0
   171f8:	mov	r1, #0
   171fc:	mov	r3, #0
   17200:	mov	r6, #0
   17204:	mov	r7, #0
   17208:	mov	r5, #0
   1720c:	ldr	pc, [r0, r2, lsl #2]
   17210:	andeq	r7, r1, r4, ror r2
   17214:	andeq	r7, r1, ip, ror #4
   17218:	andeq	r7, r1, r4, ror #4
   1721c:	andeq	r7, r1, ip, asr r2
   17220:	andeq	r7, r1, r0, asr r2
   17224:	andeq	r7, r1, r4, asr #4
   17228:	andeq	r7, r1, r4, lsr r2
   1722c:	andeq	r7, r1, r0, lsr r2
   17230:	ldrb	ip, [r9, #7]
   17234:	ldrb	r0, [r9, #6]
   17238:	mov	r4, r8
   1723c:	orr	r0, ip, r0, lsl #8
   17240:	mov	r8, r0
   17244:	ldrb	r0, [r9, #5]
   17248:	mov	r1, r4
   1724c:	orr	r8, r8, r0, lsl #16
   17250:	ldrb	r0, [r9, #4]
   17254:	mov	r3, r1
   17258:	orr	r8, r8, r0, lsl #24
   1725c:	ldrb	r0, [r9, #3]
   17260:	orr	r6, r0, r3
   17264:	ldrb	r0, [r9, #2]
   17268:	orr	r7, r6, r0, lsl #8
   1726c:	ldrb	r0, [r9, #1]
   17270:	orr	r5, r7, r0, lsl #16
   17274:	ldrb	r0, [r9]
   17278:	movw	r1, #29281	; 0x7261
   1727c:	movt	r1, #24946	; 0x6172
   17280:	subs	r1, r8, r1
   17284:	orr	r0, r5, r0, lsl #24
   17288:	sbcs	r1, r0, lr
   1728c:	bcs	17338 <main@@Base+0x12b0>
   17290:	movw	r1, #28004	; 0x6d64
   17294:	movt	r1, #28257	; 0x6e61
   17298:	cmp	r0, r1
   1729c:	bhi	174b8 <main@@Base+0x1430>
   172a0:	movw	r1, #25975	; 0x6577
   172a4:	ldr	r5, [sp, #44]	; 0x2c
   172a8:	movt	r1, #26220	; 0x666c
   172ac:	cmp	r0, r1
   172b0:	bhi	175c4 <main@@Base+0x153c>
   172b4:	movw	r1, #27759	; 0x6c6f
   172b8:	movt	r1, #25455	; 0x636f
   172bc:	eor	r2, r0, r1
   172c0:	and	r1, r8, #-16777216	; 0xff000000
   172c4:	eor	r3, r1, #1912602624	; 0x72000000
   172c8:	orrs	r2, r3, r2
   172cc:	beq	17e60 <main@@Base+0x1dd8>
   172d0:	movw	r2, #25965	; 0x656d
   172d4:	ldr	r8, [sp, #36]	; 0x24
   172d8:	eor	r1, r1, #2030043136	; 0x79000000
   172dc:	movt	r2, #25966	; 0x656e
   172e0:	eor	r0, r0, r2
   172e4:	orrs	r0, r1, r0
   172e8:	bne	1848c <main@@Base+0x2404>
   172ec:	cmp	sl, #6
   172f0:	ldr	sl, [sp, #40]	; 0x28
   172f4:	mov	r1, r9
   172f8:	blt	19368 <main@@Base+0x32e0>
   172fc:	ldr	r1, [sp, #32]
   17300:	mov	r2, r9
   17304:	ldrb	r0, [r2, #5]!
   17308:	ldr	r1, [r1]
   1730c:	cmp	r1, #0
   17310:	beq	185b0 <main@@Base+0x2528>
   17314:	cmp	r0, #33	; 0x21
   17318:	bcc	17328 <main@@Base+0x12a0>
   1731c:	cmp	r0, #58	; 0x3a
   17320:	mov	r1, r9
   17324:	bne	19368 <main@@Base+0x32e0>
   17328:	ldr	r0, [sp, #32]
   1732c:	mov	r1, #0
   17330:	str	r1, [r0]
   17334:	b	185c0 <main@@Base+0x2538>
   17338:	movw	r1, #0
   1733c:	movt	r1, #26163	; 0x6633
   17340:	subs	r1, r8, r1
   17344:	sbcs	r1, r0, lr
   17348:	bcs	17544 <main@@Base+0x14bc>
   1734c:	movw	r1, #29281	; 0x7261
   17350:	ldr	r5, [sp, #44]	; 0x2c
   17354:	movt	r1, #24946	; 0x6172
   17358:	eor	r2, r8, r1
   1735c:	eor	r1, r0, lr
   17360:	orrs	r2, r2, r1
   17364:	bne	17640 <main@@Base+0x15b8>
   17368:	add	sl, r9, #8
   1736c:	mov	r0, #8
   17370:	sub	ip, r5, sl
   17374:	cmp	ip, #8
   17378:	movcc	r0, ip
   1737c:	sub	r6, r0, #1
   17380:	cmp	r6, #7
   17384:	bhi	1a428 <main@@Base+0x43a0>
   17388:	add	r7, pc, #32
   1738c:	mov	r1, #0
   17390:	mov	lr, #0
   17394:	mov	r8, #0
   17398:	mov	r4, #0
   1739c:	mov	r3, #0
   173a0:	mov	r5, #0
   173a4:	mov	r0, #0
   173a8:	mov	r2, #0
   173ac:	ldr	pc, [r7, r6, lsl #2]
   173b0:	andeq	r7, r1, r4, lsl r4
   173b4:	andeq	r7, r1, ip, lsl #8
   173b8:	andeq	r7, r1, r4, lsl #8
   173bc:	strdeq	r7, [r1], -ip
   173c0:	strdeq	r7, [r1], -r0
   173c4:	andeq	r7, r1, r4, ror #7
   173c8:	ldrdeq	r7, [r1], -r4
   173cc:	ldrdeq	r7, [r1], -r0
   173d0:	ldrb	lr, [r9, #15]
   173d4:	ldrb	r0, [r9, #14]
   173d8:	mov	r8, r1
   173dc:	orr	r0, lr, r0, lsl #8
   173e0:	mov	r1, r0
   173e4:	ldrb	r0, [r9, #13]
   173e8:	mov	r4, r8
   173ec:	orr	r1, r1, r0, lsl #16
   173f0:	ldrb	r0, [r9, #12]
   173f4:	mov	r3, r4
   173f8:	orr	r1, r1, r0, lsl #24
   173fc:	ldrb	r0, [r9, #11]
   17400:	orr	r5, r0, r3
   17404:	ldrb	r0, [r9, #10]
   17408:	orr	r0, r5, r0, lsl #8
   1740c:	ldrb	r2, [r9, #9]
   17410:	orr	r2, r0, r2, lsl #16
   17414:	ldrb	r0, [sl]
   17418:	movw	r7, #26227	; 0x6673
   1741c:	movt	r7, #31087	; 0x796f
   17420:	orr	r2, r2, r0, lsl #24
   17424:	movw	r0, #26989	; 0x696d
   17428:	movt	r0, #29810	; 0x7472
   1742c:	subs	r0, r0, r1
   17430:	sbcs	r0, r7, r2
   17434:	bcc	17d94 <main@@Base+0x1d0c>
   17438:	movw	r0, #29797	; 0x7465
   1743c:	ldr	r5, [sp, #44]	; 0x2c
   17440:	eor	r3, r2, r7
   17444:	movt	r0, #28530	; 0x6f72
   17448:	eor	r0, r1, r0
   1744c:	orrs	r0, r0, r3
   17450:	beq	18240 <main@@Base+0x21b8>
   17454:	movw	r0, #27763	; 0x6c73
   17458:	movt	r0, #28527	; 0x6f6f
   1745c:	eor	r0, r1, r0
   17460:	movw	r1, #26210	; 0x6662
   17464:	movt	r1, #31087	; 0x796f
   17468:	eor	r1, r2, r1
   1746c:	orrs	r0, r0, r1
   17470:	bne	1a428 <main@@Base+0x43a0>
   17474:	cmp	ip, #9
   17478:	blt	1a428 <main@@Base+0x43a0>
   1747c:	ldr	r2, [sp, #32]
   17480:	mov	r1, r9
   17484:	ldrb	r0, [r1, #16]!
   17488:	ldr	r2, [r2]
   1748c:	cmp	r2, #0
   17490:	beq	18894 <main@@Base+0x280c>
   17494:	cmp	r0, #33	; 0x21
   17498:	bcc	174a4 <main@@Base+0x141c>
   1749c:	cmp	r0, #58	; 0x3a
   174a0:	bne	1a428 <main@@Base+0x43a0>
   174a4:	ldr	r0, [sp, #32]
   174a8:	mov	r2, #0
   174ac:	str	r2, [r0]
   174b0:	b	188a0 <main@@Base+0x2818>
   174b4:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   174b8:	movw	r1, #29555	; 0x7373
   174bc:	ldr	r5, [sp, #44]	; 0x2c
   174c0:	movt	r1, #29797	; 0x7465
   174c4:	cmp	r0, r1
   174c8:	bhi	1770c <main@@Base+0x1684>
   174cc:	movw	r3, #24430	; 0x5f6e
   174d0:	movw	r2, #29285	; 0x7265
   174d4:	movt	r3, #28276	; 0x6e74
   174d8:	movt	r2, #28769	; 0x7061
   174dc:	subs	r1, r8, r3
   174e0:	sbcs	r1, r0, r2
   174e4:	bcs	178a4 <main@@Base+0x181c>
   174e8:	movw	r1, #28005	; 0x6d65
   174ec:	movt	r1, #28257	; 0x6e61
   174f0:	teq	r0, r1
   174f4:	bne	18488 <main@@Base+0x2400>
   174f8:	ldr	r8, [sp, #36]	; 0x24
   174fc:	cmp	sl, #5
   17500:	mov	r1, r9
   17504:	blt	195d0 <main@@Base+0x3548>
   17508:	ldr	r1, [sp, #32]
   1750c:	mov	r2, r9
   17510:	ldrb	r0, [r2, #4]!
   17514:	ldr	r1, [r1]
   17518:	cmp	r1, #0
   1751c:	beq	18680 <main@@Base+0x25f8>
   17520:	cmp	r0, #33	; 0x21
   17524:	bcc	17534 <main@@Base+0x14ac>
   17528:	cmp	r0, #58	; 0x3a
   1752c:	mov	r1, r9
   17530:	bne	195d0 <main@@Base+0x3548>
   17534:	ldr	r0, [sp, #32]
   17538:	mov	r1, #0
   1753c:	str	r1, [r0]
   17540:	b	18690 <main@@Base+0x2608>
   17544:	movw	r2, #29544	; 0x7368
   17548:	ldr	r5, [sp, #44]	; 0x2c
   1754c:	movt	r2, #26721	; 0x6861
   17550:	subs	r1, r8, r2
   17554:	sbcs	r1, r0, lr
   17558:	bcs	17768 <main@@Base+0x16e0>
   1755c:	movw	r1, #0
   17560:	bfc	r8, #0, #16
   17564:	eor	r0, r0, lr
   17568:	movt	r1, #26163	; 0x6633
   1756c:	eor	r1, r8, r1
   17570:	orrs	r0, r1, r0
   17574:	bne	18488 <main@@Base+0x2400>
   17578:	ldr	r8, [sp, #36]	; 0x24
   1757c:	cmp	sl, #7
   17580:	mov	r7, r9
   17584:	blt	18d68 <main@@Base+0x2ce0>
   17588:	ldr	r2, [sp, #32]
   1758c:	mov	r1, r9
   17590:	ldrb	r0, [r1, #6]!
   17594:	ldr	r2, [r2]
   17598:	cmp	r2, #0
   1759c:	beq	18504 <main@@Base+0x247c>
   175a0:	cmp	r0, #33	; 0x21
   175a4:	bcc	175b4 <main@@Base+0x152c>
   175a8:	cmp	r0, #58	; 0x3a
   175ac:	mov	r7, r9
   175b0:	bne	18d68 <main@@Base+0x2ce0>
   175b4:	ldr	r0, [sp, #32]
   175b8:	mov	r2, #0
   175bc:	str	r2, [r0]
   175c0:	b	18514 <main@@Base+0x248c>
   175c4:	movw	r1, #65535	; 0xffff
   175c8:	movw	r2, #30309	; 0x7665
   175cc:	movw	r3, #28530	; 0x6f72
   175d0:	movt	r1, #26735	; 0x686f
   175d4:	movt	r2, #26990	; 0x696e
   175d8:	movt	r3, #28276	; 0x6e74
   175dc:	cmp	r0, r1
   175e0:	bhi	17a78 <main@@Base+0x19f0>
   175e4:	movw	r1, #25976	; 0x6578
   175e8:	movt	r1, #26220	; 0x666c
   175ec:	teq	r0, r1
   175f0:	bne	18488 <main@@Base+0x2400>
   175f4:	ldr	r8, [sp, #36]	; 0x24
   175f8:	cmp	sl, #5
   175fc:	mov	r4, r9
   17600:	blt	19628 <main@@Base+0x35a0>
   17604:	ldr	r2, [sp, #32]
   17608:	mov	r1, r9
   1760c:	ldrb	r0, [r1, #4]!
   17610:	ldr	r2, [r2]
   17614:	cmp	r2, #0
   17618:	beq	186b0 <main@@Base+0x2628>
   1761c:	cmp	r0, #33	; 0x21
   17620:	bcc	17630 <main@@Base+0x15a8>
   17624:	cmp	r0, #58	; 0x3a
   17628:	mov	r4, r9
   1762c:	bne	19628 <main@@Base+0x35a0>
   17630:	ldr	r0, [sp, #32]
   17634:	mov	r2, #0
   17638:	str	r2, [r0]
   1763c:	b	186c0 <main@@Base+0x2638>
   17640:	movw	r2, #28788	; 0x7074
   17644:	movt	r2, #25965	; 0x656d
   17648:	subs	r2, r8, r2
   1764c:	sbcs	r2, r0, lr
   17650:	bcs	17ae4 <main@@Base+0x1a5c>
   17654:	movw	r0, #28524	; 0x6f6c
   17658:	movt	r0, #25199	; 0x626f
   1765c:	eor	r0, r8, r0
   17660:	orrs	r0, r0, r1
   17664:	beq	181f0 <main@@Base+0x2168>
   17668:	movw	r0, #29541	; 0x7365
   1766c:	movt	r0, #25185	; 0x6261
   17670:	eor	r0, r8, r0
   17674:	orrs	r0, r0, r1
   17678:	bne	18488 <main@@Base+0x2400>
   1767c:	add	r7, r9, #8
   17680:	ldr	r8, [sp, #36]	; 0x24
   17684:	ldr	sl, [sp, #40]	; 0x28
   17688:	mov	r2, #8
   1768c:	sub	r0, r5, r7
   17690:	cmp	r0, #8
   17694:	movcc	r2, r0
   17698:	sub	r1, r2, #2
   1769c:	cmp	r1, #7
   176a0:	bcs	18710 <main@@Base+0x2688>
   176a4:	ldrb	r1, [r9, #9]
   176a8:	lsl	r2, r1, #16
   176ac:	mov	r1, #0
   176b0:	ldrb	r3, [r7]
   176b4:	orr	r2, r2, r3, lsl #24
   176b8:	movw	r3, #0
   176bc:	movt	r3, #13876	; 0x3634
   176c0:	eor	r2, r2, r3
   176c4:	orrs	r1, r1, r2
   176c8:	bne	1eddc <main@@Base+0x8d54>
   176cc:	cmp	r0, #3
   176d0:	blt	1eddc <main@@Base+0x8d54>
   176d4:	ldr	r2, [sp, #32]
   176d8:	mov	r1, r9
   176dc:	ldrb	r0, [r1, #10]!
   176e0:	ldr	r2, [r2]
   176e4:	cmp	r2, #0
   176e8:	beq	18bc4 <main@@Base+0x2b3c>
   176ec:	cmp	r0, #33	; 0x21
   176f0:	bcc	176fc <main@@Base+0x1674>
   176f4:	cmp	r0, #58	; 0x3a
   176f8:	bne	1eddc <main@@Base+0x8d54>
   176fc:	ldr	r0, [sp, #32]
   17700:	mov	r2, #0
   17704:	str	r2, [r0]
   17708:	b	18bd0 <main@@Base+0x2b48>
   1770c:	and	r6, r8, #-16777216	; 0xff000000
   17710:	eor	r4, r0, lr
   17714:	eor	r1, r6, #872415232	; 0x34000000
   17718:	orrs	r1, r1, r4
   1771c:	bne	17b7c <main@@Base+0x1af4>
   17720:	cmp	sl, #6
   17724:	mov	r7, r9
   17728:	blt	18e2c <main@@Base+0x2da4>
   1772c:	ldr	r2, [sp, #32]
   17730:	mov	r1, r9
   17734:	ldrb	r0, [r1, #5]!
   17738:	ldr	r2, [r2]
   1773c:	cmp	r2, #0
   17740:	beq	18534 <main@@Base+0x24ac>
   17744:	cmp	r0, #33	; 0x21
   17748:	bcc	17758 <main@@Base+0x16d0>
   1774c:	cmp	r0, #58	; 0x3a
   17750:	mov	r7, r9
   17754:	bne	18e2c <main@@Base+0x2da4>
   17758:	ldr	r0, [sp, #32]
   1775c:	mov	r2, #0
   17760:	str	r2, [r0]
   17764:	b	18544 <main@@Base+0x24bc>
   17768:	eor	r2, r8, r2
   1776c:	eor	r1, r0, lr
   17770:	orrs	r2, r2, r1
   17774:	bne	17bcc <main@@Base+0x1b44>
   17778:	add	sl, r9, #8
   1777c:	mov	r0, #8
   17780:	sub	ip, r5, sl
   17784:	cmp	ip, #8
   17788:	movcc	r0, ip
   1778c:	sub	r7, r0, #1
   17790:	cmp	r7, #7
   17794:	bhi	1a428 <main@@Base+0x43a0>
   17798:	add	r4, pc, #32
   1779c:	mov	r1, #0
   177a0:	mov	lr, #0
   177a4:	mov	r8, #0
   177a8:	mov	r6, #0
   177ac:	mov	r3, #0
   177b0:	mov	r5, #0
   177b4:	mov	r0, #0
   177b8:	mov	r2, #0
   177bc:	ldr	pc, [r4, r7, lsl #2]
   177c0:	andeq	r7, r1, r4, lsr #16
   177c4:	andeq	r7, r1, ip, lsl r8
   177c8:	andeq	r7, r1, r4, lsl r8
   177cc:	andeq	r7, r1, ip, lsl #16
   177d0:	andeq	r7, r1, r0, lsl #16
   177d4:	strdeq	r7, [r1], -r4
   177d8:	andeq	r7, r1, r4, ror #15
   177dc:	andeq	r7, r1, r0, ror #15
   177e0:	ldrb	lr, [r9, #15]
   177e4:	ldrb	r0, [r9, #14]
   177e8:	mov	r8, r1
   177ec:	orr	r0, lr, r0, lsl #8
   177f0:	mov	r1, r0
   177f4:	ldrb	r0, [r9, #13]
   177f8:	mov	r6, r8
   177fc:	orr	r1, r1, r0, lsl #16
   17800:	ldrb	r0, [r9, #12]
   17804:	mov	r3, r6
   17808:	orr	r1, r1, r0, lsl #24
   1780c:	ldrb	r0, [r9, #11]
   17810:	orr	r5, r0, r3
   17814:	ldrb	r0, [r9, #10]
   17818:	orr	r0, r5, r0, lsl #8
   1781c:	ldrb	r2, [r9, #9]
   17820:	orr	r2, r0, r2, lsl #16
   17824:	ldrb	r0, [sl]
   17828:	movw	r3, #30257	; 0x7631
   1782c:	movt	r3, #26222	; 0x666e
   17830:	orr	r2, r2, r0, lsl #24
   17834:	subs	r0, r1, r3
   17838:	movw	r0, #13407	; 0x345f
   1783c:	movt	r0, #29494	; 0x7336
   17840:	sbcs	r0, r2, r0
   17844:	bcs	18168 <main@@Base+0x20e0>
   17848:	eor	r0, r1, r3
   1784c:	ldr	r1, [sp, #28]
   17850:	ldr	r5, [sp, #44]	; 0x2c
   17854:	eor	r1, r2, r1
   17858:	orrs	r0, r0, r1
   1785c:	bne	1a428 <main@@Base+0x43a0>
   17860:	ldr	r8, [sp, #36]	; 0x24
   17864:	cmp	ip, #9
   17868:	blt	1b72c <main@@Base+0x56a4>
   1786c:	ldr	r2, [sp, #32]
   17870:	mov	r1, r9
   17874:	ldrb	r0, [r1, #16]!
   17878:	ldr	r2, [r2]
   1787c:	cmp	r2, #0
   17880:	beq	18954 <main@@Base+0x28cc>
   17884:	cmp	r0, #33	; 0x21
   17888:	bcc	17894 <main@@Base+0x180c>
   1788c:	cmp	r0, #58	; 0x3a
   17890:	bne	1b72c <main@@Base+0x56a4>
   17894:	ldr	r0, [sp, #32]
   17898:	mov	r2, #0
   1789c:	str	r2, [r0]
   178a0:	b	18960 <main@@Base+0x28d8>
   178a4:	eor	r1, r8, r3
   178a8:	eor	r2, r0, r2
   178ac:	orrs	r1, r1, r2
   178b0:	bne	17eb0 <main@@Base+0x1e28>
   178b4:	add	r1, r9, #8
   178b8:	mov	r2, #8
   178bc:	ldr	sl, [sp, #40]	; 0x28
   178c0:	sub	r0, r5, r1
   178c4:	cmp	r0, #8
   178c8:	movcs	r0, r2
   178cc:	sub	r7, r0, #1
   178d0:	cmp	r7, #7
   178d4:	bhi	181e4 <main@@Base+0x215c>
   178d8:	add	r0, pc, #32
   178dc:	mov	r8, #0
   178e0:	mov	ip, #0
   178e4:	mov	lr, #0
   178e8:	mov	r6, #0
   178ec:	mov	r3, #0
   178f0:	mov	r4, #0
   178f4:	mov	r2, #0
   178f8:	mov	r5, #0
   178fc:	ldr	pc, [r0, r7, lsl #2]
   17900:	andeq	r7, r1, r4, ror #18
   17904:	andeq	r7, r1, ip, asr r9
   17908:	andeq	r7, r1, r4, asr r9
   1790c:	andeq	r7, r1, ip, asr #18
   17910:	andeq	r7, r1, r0, asr #18
   17914:	andeq	r7, r1, r4, lsr r9
   17918:	andeq	r7, r1, r4, lsr #18
   1791c:	andeq	r7, r1, r0, lsr #18
   17920:	ldrb	ip, [r9, #15]
   17924:	ldrb	r0, [r9, #14]
   17928:	mov	lr, r8
   1792c:	orr	r0, ip, r0, lsl #8
   17930:	mov	r8, r0
   17934:	ldrb	r0, [r9, #13]
   17938:	mov	r6, lr
   1793c:	orr	r8, r8, r0, lsl #16
   17940:	ldrb	r0, [r9, #12]
   17944:	mov	r3, r6
   17948:	orr	r8, r8, r0, lsl #24
   1794c:	ldrb	r0, [r9, #11]
   17950:	orr	r4, r0, r3
   17954:	ldrb	r0, [r9, #10]
   17958:	orr	r2, r4, r0, lsl #8
   1795c:	ldrb	r0, [r9, #9]
   17960:	orr	r5, r2, r0, lsl #16
   17964:	ldrb	r2, [r1]
   17968:	movw	r0, #25445	; 0x6365
   1796c:	movw	r3, #25971	; 0x6573
   17970:	movt	r0, #28769	; 0x7061
   17974:	movt	r3, #24941	; 0x616d
   17978:	eor	r0, r8, r0
   1797c:	orr	r2, r5, r2, lsl #24
   17980:	ldr	r5, [sp, #44]	; 0x2c
   17984:	eor	r2, r2, r3
   17988:	orrs	r0, r0, r2
   1798c:	bne	181e4 <main@@Base+0x215c>
   17990:	add	r8, r9, #16
   17994:	mov	r1, #8
   17998:	sub	r0, r5, r8
   1799c:	cmp	r0, #8
   179a0:	movcc	r1, r0
   179a4:	sub	r3, r1, #1
   179a8:	cmp	r3, #7
   179ac:	bhi	1c584 <main@@Base+0x64fc>
   179b0:	add	r7, pc, #20
   179b4:	mov	r1, #0
   179b8:	mov	r2, #0
   179bc:	mov	r6, #0
   179c0:	mov	r5, #0
   179c4:	mov	r4, #0
   179c8:	ldr	pc, [r7, r3, lsl #2]
   179cc:	andeq	r7, r1, r0, lsl sl
   179d0:	andeq	r7, r1, r8, lsl #20
   179d4:	andeq	r7, r1, r0, lsl #20
   179d8:	strdeq	r7, [r1], -r4
   179dc:	andeq	r7, r1, ip, ror #19
   179e0:	andeq	r7, r1, ip, ror #19
   179e4:	andeq	r7, r1, ip, ror #19
   179e8:	andeq	r7, r1, ip, ror #19
   179ec:	ldrb	r2, [r9, #20]
   179f0:	lsl	r2, r2, #24
   179f4:	ldrb	r3, [r9, #19]
   179f8:	orr	r6, r3, r1
   179fc:	mov	r1, r2
   17a00:	ldrb	r2, [r9, #18]
   17a04:	orr	r5, r6, r2, lsl #8
   17a08:	ldrb	r2, [r9, #17]
   17a0c:	orr	r4, r5, r2, lsl #16
   17a10:	ldrb	r2, [r8]
   17a14:	movw	r3, #25971	; 0x6573
   17a18:	ldr	r5, [sp, #44]	; 0x2c
   17a1c:	and	r1, r1, #-16777216	; 0xff000000
   17a20:	movt	r3, #24436	; 0x5f74
   17a24:	eor	r1, r1, #1946157056	; 0x74000000
   17a28:	orr	r2, r4, r2, lsl #24
   17a2c:	eor	r2, r2, r3
   17a30:	orrs	r1, r1, r2
   17a34:	bne	1c584 <main@@Base+0x64fc>
   17a38:	cmp	r0, #6
   17a3c:	blt	1c584 <main@@Base+0x64fc>
   17a40:	ldr	r2, [sp, #32]
   17a44:	mov	r1, r9
   17a48:	ldrb	r0, [r1, #21]!
   17a4c:	ldr	r2, [r2]
   17a50:	cmp	r2, #0
   17a54:	beq	19050 <main@@Base+0x2fc8>
   17a58:	cmp	r0, #33	; 0x21
   17a5c:	bcc	17a68 <main@@Base+0x19e0>
   17a60:	cmp	r0, #58	; 0x3a
   17a64:	bne	1c584 <main@@Base+0x64fc>
   17a68:	ldr	r0, [sp, #32]
   17a6c:	mov	r2, #0
   17a70:	str	r2, [r0]
   17a74:	b	1905c <main@@Base+0x2fd4>
   17a78:	subs	r1, r8, r3
   17a7c:	sbcs	r1, r0, r2
   17a80:	bcs	17f10 <main@@Base+0x1e88>
   17a84:	movw	r1, #0
   17a88:	bfc	r0, #0, #16
   17a8c:	movt	r1, #26736	; 0x6870
   17a90:	teq	r0, r1
   17a94:	bne	18488 <main@@Base+0x2400>
   17a98:	ldr	r8, [sp, #36]	; 0x24
   17a9c:	cmp	sl, #3
   17aa0:	mov	r7, r9
   17aa4:	blt	1a4cc <main@@Base+0x4444>
   17aa8:	ldr	r2, [sp, #32]
   17aac:	mov	r1, r9
   17ab0:	ldrb	r0, [r1, #2]!
   17ab4:	ldr	r2, [r2]
   17ab8:	cmp	r2, #0
   17abc:	beq	188c4 <main@@Base+0x283c>
   17ac0:	cmp	r0, #33	; 0x21
   17ac4:	bcc	17ad4 <main@@Base+0x1a4c>
   17ac8:	cmp	r0, #58	; 0x3a
   17acc:	mov	r7, r9
   17ad0:	bne	1a4cc <main@@Base+0x4444>
   17ad4:	ldr	r0, [sp, #32]
   17ad8:	mov	r2, #0
   17adc:	str	r2, [r0]
   17ae0:	b	188d4 <main@@Base+0x284c>
   17ae4:	mvn	r2, #-1711276032	; 0x9a000000
   17ae8:	subs	r2, r2, r8
   17aec:	sbcs	r2, lr, r0
   17af0:	bcc	17f94 <main@@Base+0x1f0c>
   17af4:	movw	r0, #28788	; 0x7074
   17af8:	movt	r0, #25965	; 0x656d
   17afc:	eor	r0, r8, r0
   17b00:	orrs	r0, r0, r1
   17b04:	bne	18488 <main@@Base+0x2400>
   17b08:	add	r7, r9, #8
   17b0c:	ldr	r8, [sp, #36]	; 0x24
   17b10:	ldr	sl, [sp, #40]	; 0x28
   17b14:	mov	r1, #8
   17b18:	sub	r0, r5, r7
   17b1c:	cmp	r0, #8
   17b20:	movcc	r1, r0
   17b24:	sub	r1, r1, #1
   17b28:	cmp	r1, #7
   17b2c:	bhi	1eddc <main@@Base+0x8d54>
   17b30:	ldrb	r1, [r7]
   17b34:	cmp	r1, #121	; 0x79
   17b38:	bne	1eddc <main@@Base+0x8d54>
   17b3c:	cmp	r0, #2
   17b40:	blt	1eddc <main@@Base+0x8d54>
   17b44:	ldr	r2, [sp, #32]
   17b48:	mov	r1, r9
   17b4c:	ldrb	r0, [r1, #9]!
   17b50:	ldr	r2, [r2]
   17b54:	cmp	r2, #0
   17b58:	beq	19528 <main@@Base+0x34a0>
   17b5c:	cmp	r0, #33	; 0x21
   17b60:	bcc	17b6c <main@@Base+0x1ae4>
   17b64:	cmp	r0, #58	; 0x3a
   17b68:	bne	1eddc <main@@Base+0x8d54>
   17b6c:	ldr	r0, [sp, #32]
   17b70:	mov	r2, #0
   17b74:	str	r2, [r0]
   17b78:	b	19534 <main@@Base+0x34ac>
   17b7c:	teq	r0, lr
   17b80:	bne	199a8 <main@@Base+0x3920>
   17b84:	cmp	sl, #5
   17b88:	mov	r1, r9
   17b8c:	blt	1996c <main@@Base+0x38e4>
   17b90:	ldr	r1, [sp, #32]
   17b94:	mov	r2, r9
   17b98:	ldrb	r0, [r2, #4]!
   17b9c:	ldr	r1, [r1]
   17ba0:	cmp	r1, #0
   17ba4:	beq	186e0 <main@@Base+0x2658>
   17ba8:	cmp	r0, #33	; 0x21
   17bac:	bcc	17bbc <main@@Base+0x1b34>
   17bb0:	cmp	r0, #58	; 0x3a
   17bb4:	mov	r1, r9
   17bb8:	bne	1996c <main@@Base+0x38e4>
   17bbc:	ldr	r0, [sp, #32]
   17bc0:	mov	r1, #0
   17bc4:	str	r1, [r0]
   17bc8:	b	186f0 <main@@Base+0x2668>
   17bcc:	movw	r7, #24431	; 0x5f6f
   17bd0:	movw	r3, #25460	; 0x6374
   17bd4:	movt	r7, #28530	; 0x6f72
   17bd8:	movt	r3, #30309	; 0x7665
   17bdc:	subs	r2, r8, r7
   17be0:	sbcs	r2, r0, r3
   17be4:	bcs	1800c <main@@Base+0x1f84>
   17be8:	movw	r0, #29556	; 0x7374
   17bec:	ldr	sl, [sp, #40]	; 0x28
   17bf0:	movt	r0, #28261	; 0x6e65
   17bf4:	eor	r0, r8, r0
   17bf8:	orrs	r0, r0, r1
   17bfc:	bne	19eb4 <main@@Base+0x3e2c>
   17c00:	add	r1, r9, #8
   17c04:	mov	r2, #8
   17c08:	sub	r0, r5, r1
   17c0c:	cmp	r0, #8
   17c10:	movcs	r0, r2
   17c14:	sub	r7, r0, #1
   17c18:	cmp	r7, #7
   17c1c:	bhi	181e4 <main@@Base+0x215c>
   17c20:	add	r0, pc, #32
   17c24:	mov	r8, #0
   17c28:	mov	ip, #0
   17c2c:	mov	lr, #0
   17c30:	mov	r6, #0
   17c34:	mov	r3, #0
   17c38:	mov	r5, #0
   17c3c:	mov	r2, #0
   17c40:	mov	r4, #0
   17c44:	ldr	pc, [r0, r7, lsl #2]
   17c48:	andeq	r7, r1, ip, lsr #25
   17c4c:	andeq	r7, r1, r4, lsr #25
   17c50:	muleq	r1, ip, ip
   17c54:	muleq	r1, r4, ip
   17c58:	andeq	r7, r1, r8, lsl #25
   17c5c:	andeq	r7, r1, ip, ror ip
   17c60:	andeq	r7, r1, ip, ror #24
   17c64:	andeq	r7, r1, r8, ror #24
   17c68:	ldrb	ip, [r9, #15]
   17c6c:	ldrb	r0, [r9, #14]
   17c70:	mov	lr, r8
   17c74:	orr	r0, ip, r0, lsl #8
   17c78:	mov	r8, r0
   17c7c:	ldrb	r0, [r9, #13]
   17c80:	mov	r6, lr
   17c84:	orr	r8, r8, r0, lsl #16
   17c88:	ldrb	r0, [r9, #12]
   17c8c:	mov	r3, r6
   17c90:	orr	r8, r8, r0, lsl #24
   17c94:	ldrb	r0, [r9, #11]
   17c98:	orr	r5, r0, r3
   17c9c:	ldrb	r0, [r9, #10]
   17ca0:	orr	r2, r5, r0, lsl #8
   17ca4:	ldrb	r0, [r9, #9]
   17ca8:	orr	r4, r2, r0, lsl #16
   17cac:	ldrb	r2, [r1]
   17cb0:	movw	r0, #25205	; 0x6275
   17cb4:	movw	r3, #26220	; 0x666c
   17cb8:	ldr	r5, [sp, #44]	; 0x2c
   17cbc:	movt	r0, #24948	; 0x6174
   17cc0:	movt	r3, #25956	; 0x6564
   17cc4:	eor	r0, r8, r0
   17cc8:	orr	r2, r4, r2, lsl #24
   17ccc:	eor	r2, r2, r3
   17cd0:	orrs	r0, r0, r2
   17cd4:	bne	181e4 <main@@Base+0x215c>
   17cd8:	add	r7, r9, #16
   17cdc:	ldr	r8, [sp, #36]	; 0x24
   17ce0:	mov	r1, #8
   17ce4:	sub	r0, r5, r7
   17ce8:	cmp	r0, #8
   17cec:	movcc	r1, r0
   17cf0:	sub	r2, r1, #1
   17cf4:	cmp	r2, #7
   17cf8:	bhi	1eddc <main@@Base+0x8d54>
   17cfc:	add	r3, pc, #4
   17d00:	mov	r1, #0
   17d04:	ldr	pc, [r3, r2, lsl #2]
   17d08:	andeq	r7, r1, ip, lsr sp
   17d0c:	andeq	r7, r1, r4, lsr sp
   17d10:	andeq	r7, r1, ip, lsr #26
   17d14:	andeq	r7, r1, r8, lsr #26
   17d18:	andeq	r7, r1, r8, lsr #26
   17d1c:	andeq	r7, r1, r8, lsr #26
   17d20:	andeq	r7, r1, r8, lsr #26
   17d24:	andeq	r7, r1, r8, lsr #26
   17d28:	ldrb	r1, [r9, #19]
   17d2c:	ldrb	r2, [r9, #18]
   17d30:	orr	r1, r1, r2, lsl #8
   17d34:	ldrb	r2, [r9, #17]
   17d38:	orr	r1, r1, r2, lsl #16
   17d3c:	ldrb	r2, [r7]
   17d40:	orr	r1, r1, r2, lsl #24
   17d44:	movw	r2, #25970	; 0x6572
   17d48:	movt	r2, #26214	; 0x6666
   17d4c:	teq	r1, r2
   17d50:	bne	1eddc <main@@Base+0x8d54>
   17d54:	cmp	r0, #5
   17d58:	blt	1eddc <main@@Base+0x8d54>
   17d5c:	ldr	r2, [sp, #32]
   17d60:	mov	r1, r9
   17d64:	ldrb	r0, [r1, #20]!
   17d68:	ldr	r2, [r2]
   17d6c:	cmp	r2, #0
   17d70:	beq	19ac4 <main@@Base+0x3a3c>
   17d74:	cmp	r0, #33	; 0x21
   17d78:	bcc	17d84 <main@@Base+0x1cfc>
   17d7c:	cmp	r0, #58	; 0x3a
   17d80:	bne	1eddc <main@@Base+0x8d54>
   17d84:	ldr	r0, [sp, #32]
   17d88:	mov	r2, #0
   17d8c:	str	r2, [r0]
   17d90:	b	19ad0 <main@@Base+0x3a48>
   17d94:	movw	r0, #27749	; 0x6c65
   17d98:	movw	r3, #26228	; 0x6674
   17d9c:	ldr	r5, [sp, #44]	; 0x2c
   17da0:	ldr	r8, [sp, #36]	; 0x24
   17da4:	movt	r0, #24930	; 0x6162
   17da8:	movt	r3, #31087	; 0x796f
   17dac:	eor	r0, r1, r0
   17db0:	eor	r3, r2, r3
   17db4:	orrs	r0, r0, r3
   17db8:	beq	18354 <main@@Base+0x22cc>
   17dbc:	movw	r0, #26990	; 0x696e
   17dc0:	movt	r0, #29810	; 0x7472
   17dc4:	eor	r0, r1, r0
   17dc8:	eor	r1, r2, r7
   17dcc:	orrs	r0, r0, r1
   17dd0:	bne	1a42c <main@@Base+0x43a4>
   17dd4:	add	r7, r9, #16
   17dd8:	mov	r2, #8
   17ddc:	sub	r0, r5, r7
   17de0:	cmp	r0, #8
   17de4:	movcc	r2, r0
   17de8:	sub	r1, r2, #2
   17dec:	cmp	r1, #7
   17df0:	bcs	18764 <main@@Base+0x26dc>
   17df4:	ldrb	r1, [r9, #17]
   17df8:	ldr	sl, [sp, #40]	; 0x28
   17dfc:	lsl	r2, r1, #16
   17e00:	mov	r1, #0
   17e04:	ldrb	r3, [r7]
   17e08:	orr	r2, r2, r3, lsl #24
   17e0c:	movw	r3, #0
   17e10:	movt	r3, #26418	; 0x6732
   17e14:	eor	r3, r2, r3
   17e18:	orrs	r1, r1, r3
   17e1c:	bne	18564 <main@@Base+0x24dc>
   17e20:	cmp	r0, #3
   17e24:	blt	1eddc <main@@Base+0x8d54>
   17e28:	ldr	r2, [sp, #32]
   17e2c:	mov	r1, r9
   17e30:	ldrb	r0, [r1, #18]!
   17e34:	ldr	r2, [r2]
   17e38:	cmp	r2, #0
   17e3c:	beq	18bf0 <main@@Base+0x2b68>
   17e40:	cmp	r0, #33	; 0x21
   17e44:	bcc	17e50 <main@@Base+0x1dc8>
   17e48:	cmp	r0, #58	; 0x3a
   17e4c:	bne	1eddc <main@@Base+0x8d54>
   17e50:	ldr	r0, [sp, #32]
   17e54:	mov	r2, #0
   17e58:	str	r2, [r0]
   17e5c:	b	18bfc <main@@Base+0x2b74>
   17e60:	cmp	sl, #6
   17e64:	ldr	r8, [sp, #36]	; 0x24
   17e68:	ldr	sl, [sp, #40]	; 0x28
   17e6c:	mov	r7, r9
   17e70:	blt	193bc <main@@Base+0x3334>
   17e74:	ldr	r2, [sp, #32]
   17e78:	mov	r1, r9
   17e7c:	ldrb	r0, [r1, #5]!
   17e80:	ldr	r2, [r2]
   17e84:	cmp	r2, #0
   17e88:	beq	185e0 <main@@Base+0x2558>
   17e8c:	cmp	r0, #33	; 0x21
   17e90:	bcc	17ea0 <main@@Base+0x1e18>
   17e94:	cmp	r0, #58	; 0x3a
   17e98:	mov	r7, r9
   17e9c:	bne	193bc <main@@Base+0x3334>
   17ea0:	ldr	r0, [sp, #32]
   17ea4:	mov	r2, #0
   17ea8:	str	r2, [r0]
   17eac:	b	185f0 <main@@Base+0x2568>
   17eb0:	movw	r1, #29440	; 0x7300
   17eb4:	ldr	r8, [sp, #36]	; 0x24
   17eb8:	bic	r0, r0, #255	; 0xff
   17ebc:	movt	r1, #28783	; 0x706f
   17ec0:	teq	r0, r1
   17ec4:	bne	1848c <main@@Base+0x2404>
   17ec8:	cmp	sl, #4
   17ecc:	mov	r4, r9
   17ed0:	blt	1a630 <main@@Base+0x45a8>
   17ed4:	ldr	r2, [sp, #32]
   17ed8:	mov	r1, r9
   17edc:	ldrb	r0, [r1, #3]!
   17ee0:	ldr	r2, [r2]
   17ee4:	cmp	r2, #0
   17ee8:	beq	188f4 <main@@Base+0x286c>
   17eec:	cmp	r0, #33	; 0x21
   17ef0:	bcc	17f00 <main@@Base+0x1e78>
   17ef4:	cmp	r0, #58	; 0x3a
   17ef8:	mov	r4, r9
   17efc:	bne	1a630 <main@@Base+0x45a8>
   17f00:	ldr	r0, [sp, #32]
   17f04:	mov	r2, #0
   17f08:	str	r2, [r0]
   17f0c:	b	18904 <main@@Base+0x287c>
   17f10:	eor	r1, r8, r3
   17f14:	eor	r2, r0, r2
   17f18:	orrs	r1, r1, r2
   17f1c:	bne	183d0 <main@@Base+0x2348>
   17f20:	add	r7, r9, #8
   17f24:	ldr	r8, [sp, #36]	; 0x24
   17f28:	ldr	sl, [sp, #40]	; 0x28
   17f2c:	mov	r1, #8
   17f30:	sub	r0, r5, r7
   17f34:	cmp	r0, #8
   17f38:	movcc	r1, r0
   17f3c:	sub	r1, r1, #1
   17f40:	cmp	r1, #7
   17f44:	bhi	1eddc <main@@Base+0x8d54>
   17f48:	ldrb	r1, [r7]
   17f4c:	cmp	r1, #121	; 0x79
   17f50:	bne	1eddc <main@@Base+0x8d54>
   17f54:	cmp	r0, #2
   17f58:	blt	1eddc <main@@Base+0x8d54>
   17f5c:	ldr	r2, [sp, #32]
   17f60:	mov	r1, r9
   17f64:	ldrb	r0, [r1, #9]!
   17f68:	ldr	r2, [r2]
   17f6c:	cmp	r2, #0
   17f70:	beq	19554 <main@@Base+0x34cc>
   17f74:	cmp	r0, #33	; 0x21
   17f78:	bcc	17f84 <main@@Base+0x1efc>
   17f7c:	cmp	r0, #58	; 0x3a
   17f80:	bne	1eddc <main@@Base+0x8d54>
   17f84:	ldr	r0, [sp, #32]
   17f88:	mov	r2, #0
   17f8c:	str	r2, [r0]
   17f90:	b	19560 <main@@Base+0x34d8>
   17f94:	movw	r3, #0
   17f98:	mov	r2, r8
   17f9c:	movt	r3, #26163	; 0x6633
   17fa0:	bfc	r2, #0, #16
   17fa4:	subs	r3, r3, #65536	; 0x10000
   17fa8:	eor	r2, r2, r3
   17fac:	sbc	r3, lr, #0
   17fb0:	eor	r0, r0, r3
   17fb4:	orrs	r0, r2, r0
   17fb8:	bne	1842c <main@@Base+0x23a4>
   17fbc:	cmp	sl, #7
   17fc0:	ldr	r8, [sp, #36]	; 0x24
   17fc4:	ldr	sl, [sp, #40]	; 0x28
   17fc8:	mov	r7, r9
   17fcc:	blt	1b46c <main@@Base+0x53e4>
   17fd0:	ldr	r2, [sp, #32]
   17fd4:	mov	r1, r9
   17fd8:	ldrb	r0, [r1, #6]!
   17fdc:	ldr	r2, [r2]
   17fe0:	cmp	r2, #0
   17fe4:	beq	18924 <main@@Base+0x289c>
   17fe8:	cmp	r0, #33	; 0x21
   17fec:	bcc	17ffc <main@@Base+0x1f74>
   17ff0:	cmp	r0, #58	; 0x3a
   17ff4:	mov	r7, r9
   17ff8:	bne	1b46c <main@@Base+0x53e4>
   17ffc:	ldr	r0, [sp, #32]
   18000:	mov	r2, #0
   18004:	str	r2, [r0]
   18008:	b	18934 <main@@Base+0x28ac>
   1800c:	eor	r1, r8, r7
   18010:	eor	r0, r0, r3
   18014:	orrs	r0, r1, r0
   18018:	bne	18488 <main@@Base+0x2400>
   1801c:	add	sl, r9, #8
   18020:	mov	r0, #8
   18024:	sub	lr, r5, sl
   18028:	cmp	lr, #8
   1802c:	movcc	r0, lr
   18030:	sub	r6, r0, #1
   18034:	cmp	r6, #7
   18038:	bhi	1a428 <main@@Base+0x43a0>
   1803c:	add	r7, pc, #32
   18040:	mov	r1, #0
   18044:	mov	ip, #0
   18048:	mov	r8, #0
   1804c:	mov	r4, #0
   18050:	mov	r3, #0
   18054:	mov	r5, #0
   18058:	mov	r2, #0
   1805c:	mov	r0, #0
   18060:	ldr	pc, [r7, r6, lsl #2]
   18064:	andeq	r8, r1, r8, asr #1
   18068:	andeq	r8, r1, r0, asr #1
   1806c:	strheq	r8, [r1], -r8	; <UNPREDICTABLE>
   18070:	strheq	r8, [r1], -r0
   18074:	andeq	r8, r1, r4, lsr #1
   18078:	muleq	r1, r8, r0
   1807c:	andeq	r8, r1, r8, lsl #1
   18080:	andeq	r8, r1, r4, lsl #1
   18084:	ldrb	ip, [r9, #15]
   18088:	ldrb	r0, [r9, #14]
   1808c:	mov	r8, r1
   18090:	orr	r0, ip, r0, lsl #8
   18094:	mov	r1, r0
   18098:	ldrb	r0, [r9, #13]
   1809c:	mov	r4, r8
   180a0:	orr	r1, r1, r0, lsl #16
   180a4:	ldrb	r0, [r9, #12]
   180a8:	mov	r3, r4
   180ac:	orr	r1, r1, r0, lsl #24
   180b0:	ldrb	r0, [r9, #11]
   180b4:	orr	r5, r0, r3
   180b8:	ldrb	r0, [r9, #10]
   180bc:	orr	r2, r5, r0, lsl #8
   180c0:	ldrb	r0, [r9, #9]
   180c4:	orr	r0, r2, r0, lsl #16
   180c8:	ldrb	r3, [sl]
   180cc:	movw	r2, #27749	; 0x6c65
   180d0:	movt	r2, #30050	; 0x7562
   180d4:	eor	r2, r1, r2
   180d8:	orr	r0, r0, r3, lsl #24
   180dc:	movw	r3, #25711	; 0x646f
   180e0:	movt	r3, #26207	; 0x665f
   180e4:	eor	r3, r0, r3
   180e8:	orrs	r2, r2, r3
   180ec:	bne	18610 <main@@Base+0x2588>
   180f0:	ldr	r5, [sp, #44]	; 0x2c
   180f4:	add	r7, r9, #16
   180f8:	ldr	r8, [sp, #36]	; 0x24
   180fc:	mov	r1, #8
   18100:	sub	r0, r5, r7
   18104:	cmp	r0, #8
   18108:	movcc	r1, r0
   1810c:	sub	r1, r1, #1
   18110:	cmp	r1, #7
   18114:	bhi	183c4 <main@@Base+0x233c>
   18118:	ldrb	r1, [r7]
   1811c:	cmp	r1, #115	; 0x73
   18120:	bne	183c4 <main@@Base+0x233c>
   18124:	ldr	sl, [sp, #40]	; 0x28
   18128:	cmp	r0, #2
   1812c:	blt	1eddc <main@@Base+0x8d54>
   18130:	ldr	r2, [sp, #32]
   18134:	mov	r1, r9
   18138:	ldrb	r0, [r1, #17]!
   1813c:	ldr	r2, [r2]
   18140:	cmp	r2, #0
   18144:	beq	1a480 <main@@Base+0x43f8>
   18148:	cmp	r0, #33	; 0x21
   1814c:	bcc	18158 <main@@Base+0x20d0>
   18150:	cmp	r0, #58	; 0x3a
   18154:	bne	1eddc <main@@Base+0x8d54>
   18158:	ldr	r0, [sp, #32]
   1815c:	mov	r2, #0
   18160:	str	r2, [r0]
   18164:	b	1a48c <main@@Base+0x4404>
   18168:	movw	r0, #30256	; 0x7630
   1816c:	ldr	r5, [sp, #44]	; 0x2c
   18170:	movt	r0, #26222	; 0x666e
   18174:	subs	r0, r0, r1
   18178:	movw	r0, #12895	; 0x325f
   1817c:	movt	r0, #30003	; 0x7533
   18180:	sbcs	r0, r0, r2
   18184:	eor	r0, r1, r3
   18188:	bcc	18498 <main@@Base+0x2410>
   1818c:	movw	r1, #13407	; 0x345f
   18190:	ldr	r8, [sp, #36]	; 0x24
   18194:	movt	r1, #29494	; 0x7336
   18198:	eor	r1, r2, r1
   1819c:	orrs	r0, r0, r1
   181a0:	bne	1a42c <main@@Base+0x43a4>
   181a4:	cmp	ip, #9
   181a8:	blt	1c340 <main@@Base+0x62b8>
   181ac:	ldr	r2, [sp, #32]
   181b0:	mov	r1, r9
   181b4:	ldrb	r0, [r1, #16]!
   181b8:	ldr	r2, [r2]
   181bc:	cmp	r2, #0
   181c0:	beq	18ca8 <main@@Base+0x2c20>
   181c4:	cmp	r0, #33	; 0x21
   181c8:	bcc	181d4 <main@@Base+0x214c>
   181cc:	cmp	r0, #58	; 0x3a
   181d0:	bne	1c340 <main@@Base+0x62b8>
   181d4:	ldr	r0, [sp, #32]
   181d8:	mov	r2, #0
   181dc:	str	r2, [r0]
   181e0:	b	18cb4 <main@@Base+0x2c2c>
   181e4:	ldr	r8, [sp, #36]	; 0x24
   181e8:	mov	r0, r8
   181ec:	b	1f818 <main@@Base+0x9790>
   181f0:	cmp	sl, #9
   181f4:	ldr	r8, [sp, #36]	; 0x24
   181f8:	ldr	sl, [sp, #40]	; 0x28
   181fc:	mov	r7, r9
   18200:	blt	1a184 <main@@Base+0x40fc>
   18204:	ldr	r2, [sp, #32]
   18208:	mov	r1, r9
   1820c:	ldrb	r0, [r1, #8]!
   18210:	ldr	r2, [r2]
   18214:	cmp	r2, #0
   18218:	beq	1877c <main@@Base+0x26f4>
   1821c:	cmp	r0, #33	; 0x21
   18220:	bcc	18230 <main@@Base+0x21a8>
   18224:	cmp	r0, #58	; 0x3a
   18228:	mov	r7, r9
   1822c:	bne	1a184 <main@@Base+0x40fc>
   18230:	ldr	r0, [sp, #32]
   18234:	mov	r2, #0
   18238:	str	r2, [r0]
   1823c:	b	1878c <main@@Base+0x2704>
   18240:	add	sl, r9, #16
   18244:	ldr	r8, [sp, #36]	; 0x24
   18248:	mov	r1, #8
   1824c:	sub	lr, r5, sl
   18250:	cmp	lr, #8
   18254:	movcc	r1, lr
   18258:	sub	r7, r1, #1
   1825c:	cmp	r7, #7
   18260:	bhi	1a42c <main@@Base+0x43a4>
   18264:	add	r0, pc, #28
   18268:	mov	r1, #0
   1826c:	mov	ip, #0
   18270:	mov	r5, #0
   18274:	mov	r3, #0
   18278:	mov	r6, #0
   1827c:	mov	r4, #0
   18280:	mov	r2, #0
   18284:	ldr	pc, [r0, r7, lsl #2]
   18288:	andeq	r8, r1, r4, ror #5
   1828c:	ldrdeq	r8, [r1], -ip
   18290:	ldrdeq	r8, [r1], -r4
   18294:	andeq	r8, r1, ip, asr #5
   18298:	andeq	r8, r1, r0, asr #5
   1829c:			; <UNDEFINED> instruction: 0x000182b0
   182a0:	andeq	r8, r1, r8, lsr #5
   182a4:	andeq	r8, r1, r8, lsr #5
   182a8:	ldrb	r0, [r9, #22]
   182ac:	lsl	ip, r0, #8
   182b0:	ldrb	r0, [r9, #21]
   182b4:	mov	r5, r1
   182b8:	orr	r0, ip, r0, lsl #16
   182bc:	mov	r1, r0
   182c0:	ldrb	r0, [r9, #20]
   182c4:	mov	r3, r5
   182c8:	orr	r1, r1, r0, lsl #24
   182cc:	ldrb	r0, [r9, #19]
   182d0:	orr	r6, r0, r3
   182d4:	ldrb	r0, [r9, #18]
   182d8:	orr	r4, r6, r0, lsl #8
   182dc:	ldrb	r0, [r9, #17]
   182e0:	orr	r2, r4, r0, lsl #16
   182e4:	bic	r0, r1, #255	; 0xff
   182e8:	movw	r1, #29696	; 0x7400
   182ec:	ldr	r5, [sp, #44]	; 0x2c
   182f0:	movt	r1, #30051	; 0x7563
   182f4:	eor	r0, r0, r1
   182f8:	ldrb	r1, [sl]
   182fc:	orr	r1, r2, r1, lsl #24
   18300:	movw	r2, #29810	; 0x7472
   18304:	movt	r2, #25715	; 0x6473
   18308:	eor	r1, r1, r2
   1830c:	orrs	r0, r0, r1
   18310:	bne	1a42c <main@@Base+0x43a4>
   18314:	cmp	lr, #8
   18318:	blt	1a42c <main@@Base+0x43a4>
   1831c:	ldr	r2, [sp, #32]
   18320:	mov	r1, r9
   18324:	ldrb	r0, [r1, #23]!
   18328:	ldr	r2, [r2]
   1832c:	cmp	r2, #0
   18330:	beq	18c1c <main@@Base+0x2b94>
   18334:	cmp	r0, #33	; 0x21
   18338:	bcc	18344 <main@@Base+0x22bc>
   1833c:	cmp	r0, #58	; 0x3a
   18340:	bne	1a42c <main@@Base+0x43a4>
   18344:	ldr	r0, [sp, #32]
   18348:	mov	r2, #0
   1834c:	str	r2, [r0]
   18350:	b	18c28 <main@@Base+0x2ba0>
   18354:	add	r7, r9, #16
   18358:	mov	r1, #8
   1835c:	sub	r0, r5, r7
   18360:	cmp	r0, #8
   18364:	movcc	r1, r0
   18368:	sub	r1, r1, #1
   1836c:	cmp	r1, #7
   18370:	bhi	183c4 <main@@Base+0x233c>
   18374:	ldrb	r1, [r7]
   18378:	cmp	r1, #115	; 0x73
   1837c:	bne	183c4 <main@@Base+0x233c>
   18380:	ldr	sl, [sp, #40]	; 0x28
   18384:	cmp	r0, #2
   18388:	blt	1eddc <main@@Base+0x8d54>
   1838c:	ldr	r2, [sp, #32]
   18390:	mov	r1, r9
   18394:	ldrb	r0, [r1, #17]!
   18398:	ldr	r2, [r2]
   1839c:	cmp	r2, #0
   183a0:	beq	1924c <main@@Base+0x31c4>
   183a4:	cmp	r0, #33	; 0x21
   183a8:	bcc	183b4 <main@@Base+0x232c>
   183ac:	cmp	r0, #58	; 0x3a
   183b0:	bne	1eddc <main@@Base+0x8d54>
   183b4:	ldr	r0, [sp, #32]
   183b8:	mov	r2, #0
   183bc:	str	r2, [r0]
   183c0:	b	19258 <main@@Base+0x31d0>
   183c4:	mov	r0, r8
   183c8:	mov	r1, r7
   183cc:	b	1a434 <main@@Base+0x43ac>
   183d0:	movw	r1, #28257	; 0x6e61
   183d4:	ldr	r8, [sp, #36]	; 0x24
   183d8:	movt	r1, #28001	; 0x6d61
   183dc:	teq	r0, r1
   183e0:	bne	1848c <main@@Base+0x2404>
   183e4:	cmp	sl, #5
   183e8:	mov	r7, r9
   183ec:	blt	1c0ac <main@@Base+0x6024>
   183f0:	ldr	r2, [sp, #32]
   183f4:	mov	r1, r9
   183f8:	ldrb	r0, [r1, #4]!
   183fc:	ldr	r2, [r2]
   18400:	cmp	r2, #0
   18404:	beq	18c48 <main@@Base+0x2bc0>
   18408:	cmp	r0, #33	; 0x21
   1840c:	bcc	1841c <main@@Base+0x2394>
   18410:	cmp	r0, #58	; 0x3a
   18414:	mov	r7, r9
   18418:	bne	1c0ac <main@@Base+0x6024>
   1841c:	ldr	r0, [sp, #32]
   18420:	mov	r2, #0
   18424:	str	r2, [r0]
   18428:	b	18c58 <main@@Base+0x2bd0>
   1842c:	and	r0, r8, #-16777216	; 0xff000000
   18430:	eor	r0, r0, #1711276032	; 0x66000000
   18434:	orrs	r0, r0, r1
   18438:	bne	18488 <main@@Base+0x2400>
   1843c:	ldr	r8, [sp, #36]	; 0x24
   18440:	cmp	sl, #6
   18444:	mov	r7, r9
   18448:	blt	1c214 <main@@Base+0x618c>
   1844c:	ldr	r2, [sp, #32]
   18450:	mov	r1, r9
   18454:	ldrb	r0, [r1, #5]!
   18458:	ldr	r2, [r2]
   1845c:	cmp	r2, #0
   18460:	beq	18c78 <main@@Base+0x2bf0>
   18464:	cmp	r0, #33	; 0x21
   18468:	bcc	18478 <main@@Base+0x23f0>
   1846c:	cmp	r0, #58	; 0x3a
   18470:	mov	r7, r9
   18474:	bne	1c214 <main@@Base+0x618c>
   18478:	ldr	r0, [sp, #32]
   1847c:	mov	r2, #0
   18480:	str	r2, [r0]
   18484:	b	18c88 <main@@Base+0x2c00>
   18488:	ldr	r8, [sp, #36]	; 0x24
   1848c:	mov	r0, r8
   18490:	mov	r1, r9
   18494:	b	1a434 <main@@Base+0x43ac>
   18498:	movw	r1, #13407	; 0x345f
   1849c:	ldr	r8, [sp, #36]	; 0x24
   184a0:	movt	r1, #30006	; 0x7536
   184a4:	eor	r1, r2, r1
   184a8:	orrs	r1, r0, r1
   184ac:	beq	18724 <main@@Base+0x269c>
   184b0:	movw	r1, #12895	; 0x325f
   184b4:	movt	r1, #30003	; 0x7533
   184b8:	eor	r1, r2, r1
   184bc:	orrs	r0, r0, r1
   184c0:	bne	1a42c <main@@Base+0x43a4>
   184c4:	cmp	ip, #9
   184c8:	blt	1d304 <main@@Base+0x727c>
   184cc:	ldr	r2, [sp, #32]
   184d0:	mov	r1, r9
   184d4:	ldrb	r0, [r1, #16]!
   184d8:	ldr	r2, [r2]
   184dc:	cmp	r2, #0
   184e0:	beq	19278 <main@@Base+0x31f0>
   184e4:	cmp	r0, #33	; 0x21
   184e8:	bcc	184f4 <main@@Base+0x246c>
   184ec:	cmp	r0, #58	; 0x3a
   184f0:	bne	1d304 <main@@Base+0x727c>
   184f4:	ldr	r0, [sp, #32]
   184f8:	mov	r2, #0
   184fc:	str	r2, [r0]
   18500:	b	19284 <main@@Base+0x31fc>
   18504:	cmp	r0, #34	; 0x22
   18508:	mov	r7, r9
   1850c:	bne	18d68 <main@@Base+0x2ce0>
   18510:	add	r1, r9, #7
   18514:	sub	r0, r5, r1
   18518:	cmp	r0, #2
   1851c:	blt	187c0 <main@@Base+0x2738>
   18520:	ldrb	r0, [r1]
   18524:	cmp	r0, #32
   18528:	bls	187ac <main@@Base+0x2724>
   1852c:	mov	r7, r1
   18530:	b	187d0 <main@@Base+0x2748>
   18534:	cmp	r0, #34	; 0x22
   18538:	mov	r7, r9
   1853c:	bne	18e2c <main@@Base+0x2da4>
   18540:	add	r1, r9, #6
   18544:	sub	r0, r5, r1
   18548:	cmp	r0, #2
   1854c:	blt	18834 <main@@Base+0x27ac>
   18550:	ldrb	r0, [r1]
   18554:	cmp	r0, #32
   18558:	bls	18820 <main@@Base+0x2798>
   1855c:	mov	r7, r1
   18560:	b	18844 <main@@Base+0x27bc>
   18564:	and	r1, r2, #-16777216	; 0xff000000
   18568:	teq	r1, #1728053248	; 0x67000000
   1856c:	bne	1eddc <main@@Base+0x8d54>
   18570:	cmp	r0, #2
   18574:	blt	1eddc <main@@Base+0x8d54>
   18578:	ldr	r2, [sp, #32]
   1857c:	mov	r1, r9
   18580:	ldrb	r0, [r1, #17]!
   18584:	ldr	r2, [r2]
   18588:	cmp	r2, #0
   1858c:	beq	194fc <main@@Base+0x3474>
   18590:	cmp	r0, #33	; 0x21
   18594:	bcc	185a0 <main@@Base+0x2518>
   18598:	cmp	r0, #58	; 0x3a
   1859c:	bne	1eddc <main@@Base+0x8d54>
   185a0:	ldr	r0, [sp, #32]
   185a4:	mov	r2, #0
   185a8:	str	r2, [r0]
   185ac:	b	19508 <main@@Base+0x3480>
   185b0:	cmp	r0, #34	; 0x22
   185b4:	mov	r1, r9
   185b8:	bne	19368 <main@@Base+0x32e0>
   185bc:	add	r2, r9, #6
   185c0:	sub	r0, r5, r2
   185c4:	cmp	r0, #2
   185c8:	blt	18994 <main@@Base+0x290c>
   185cc:	ldrb	r0, [r2]
   185d0:	cmp	r0, #32
   185d4:	bls	18980 <main@@Base+0x28f8>
   185d8:	mov	r1, r2
   185dc:	b	189a8 <main@@Base+0x2920>
   185e0:	cmp	r0, #34	; 0x22
   185e4:	mov	r7, r9
   185e8:	bne	193bc <main@@Base+0x3334>
   185ec:	add	r1, r9, #6
   185f0:	sub	r0, r5, r1
   185f4:	cmp	r0, #2
   185f8:	blt	18a08 <main@@Base+0x2980>
   185fc:	ldrb	r0, [r1]
   18600:	cmp	r0, #32
   18604:	bls	189f4 <main@@Base+0x296c>
   18608:	mov	r7, r1
   1860c:	b	18a18 <main@@Base+0x2990>
   18610:	movw	r2, #24428	; 0x5f6c
   18614:	lsr	r1, r1, #8
   18618:	ldr	r5, [sp, #44]	; 0x2c
   1861c:	movt	r2, #102	; 0x66
   18620:	eor	r2, r2, r0, lsr #8
   18624:	orr	r0, r1, r0, lsl #24
   18628:	movw	r1, #26483	; 0x6773
   1862c:	movt	r1, #28526	; 0x6f6e
   18630:	eor	r0, r0, r1
   18634:	orrs	r0, r0, r2
   18638:	bne	1a428 <main@@Base+0x43a0>
   1863c:	ldr	r8, [sp, #36]	; 0x24
   18640:	cmp	lr, #8
   18644:	blt	1a42c <main@@Base+0x43a4>
   18648:	ldr	r2, [sp, #32]
   1864c:	mov	r1, r9
   18650:	ldrb	r0, [r1, #15]!
   18654:	ldr	r2, [r2]
   18658:	cmp	r2, #0
   1865c:	beq	19580 <main@@Base+0x34f8>
   18660:	cmp	r0, #33	; 0x21
   18664:	bcc	18670 <main@@Base+0x25e8>
   18668:	cmp	r0, #58	; 0x3a
   1866c:	bne	1a42c <main@@Base+0x43a4>
   18670:	ldr	r0, [sp, #32]
   18674:	mov	r2, #0
   18678:	str	r2, [r0]
   1867c:	b	1958c <main@@Base+0x3504>
   18680:	cmp	r0, #34	; 0x22
   18684:	mov	r1, r9
   18688:	bne	195d0 <main@@Base+0x3548>
   1868c:	add	r2, r9, #5
   18690:	sub	r0, r5, r2
   18694:	cmp	r0, #2
   18698:	blt	18a7c <main@@Base+0x29f4>
   1869c:	ldrb	r0, [r2]
   186a0:	cmp	r0, #32
   186a4:	bls	18a68 <main@@Base+0x29e0>
   186a8:	mov	r1, r2
   186ac:	b	18a90 <main@@Base+0x2a08>
   186b0:	cmp	r0, #34	; 0x22
   186b4:	mov	r4, r9
   186b8:	bne	19628 <main@@Base+0x35a0>
   186bc:	add	r1, r9, #5
   186c0:	sub	r0, r5, r1
   186c4:	cmp	r0, #2
   186c8:	blt	18af0 <main@@Base+0x2a68>
   186cc:	ldrb	r0, [r1]
   186d0:	cmp	r0, #32
   186d4:	bls	18adc <main@@Base+0x2a54>
   186d8:	mov	r4, r1
   186dc:	b	18b00 <main@@Base+0x2a78>
   186e0:	cmp	r0, #34	; 0x22
   186e4:	mov	r1, r9
   186e8:	bne	1996c <main@@Base+0x38e4>
   186ec:	add	r2, r9, #5
   186f0:	sub	r0, r5, r2
   186f4:	cmp	r0, #2
   186f8:	blt	18b64 <main@@Base+0x2adc>
   186fc:	ldrb	r0, [r2]
   18700:	cmp	r0, #32
   18704:	bls	18b50 <main@@Base+0x2ac8>
   18708:	mov	r1, r2
   1870c:	b	18b78 <main@@Base+0x2af0>
   18710:	cmp	r2, #1
   18714:	mov	r1, #0
   18718:	mov	r2, #0
   1871c:	beq	176b0 <main@@Base+0x1628>
   18720:	b	1eddc <main@@Base+0x8d54>
   18724:	cmp	ip, #9
   18728:	blt	1d4e8 <main@@Base+0x7460>
   1872c:	ldr	r2, [sp, #32]
   18730:	mov	r1, r9
   18734:	ldrb	r0, [r1, #16]!
   18738:	ldr	r2, [r2]
   1873c:	cmp	r2, #0
   18740:	beq	192a4 <main@@Base+0x321c>
   18744:	cmp	r0, #33	; 0x21
   18748:	bcc	18754 <main@@Base+0x26cc>
   1874c:	cmp	r0, #58	; 0x3a
   18750:	bne	1d4e8 <main@@Base+0x7460>
   18754:	ldr	r0, [sp, #32]
   18758:	mov	r2, #0
   1875c:	str	r2, [r0]
   18760:	b	192b0 <main@@Base+0x3228>
   18764:	ldr	sl, [sp, #40]	; 0x28
   18768:	cmp	r2, #1
   1876c:	mov	r1, #0
   18770:	mov	r2, #0
   18774:	beq	17e04 <main@@Base+0x1d7c>
   18778:	b	1eddc <main@@Base+0x8d54>
   1877c:	cmp	r0, #34	; 0x22
   18780:	mov	r7, r9
   18784:	bne	1a184 <main@@Base+0x40fc>
   18788:	add	r1, r9, #9
   1878c:	sub	r0, r5, r1
   18790:	cmp	r0, #2
   18794:	blt	18ce8 <main@@Base+0x2c60>
   18798:	ldrb	r0, [r1]
   1879c:	cmp	r0, #32
   187a0:	bls	18cd4 <main@@Base+0x2c4c>
   187a4:	mov	r7, r1
   187a8:	b	18cf8 <main@@Base+0x2c70>
   187ac:	bne	187c0 <main@@Base+0x2738>
   187b0:	mov	r7, r1
   187b4:	ldrb	r0, [r7, #1]!
   187b8:	cmp	r0, #32
   187bc:	bhi	187d0 <main@@Base+0x2748>
   187c0:	mov	r0, r8
   187c4:	mov	r2, r5
   187c8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   187cc:	mov	r7, r0
   187d0:	cmp	r7, r5
   187d4:	beq	18808 <main@@Base+0x2780>
   187d8:	ldrb	r0, [r7]
   187dc:	cmp	r0, #58	; 0x3a
   187e0:	bne	18808 <main@@Base+0x2780>
   187e4:	add	r1, r7, #1
   187e8:	sub	r0, r5, r1
   187ec:	cmp	r0, #2
   187f0:	blt	18d58 <main@@Base+0x2cd0>
   187f4:	ldrb	r0, [r1]
   187f8:	cmp	r0, #32
   187fc:	bls	18d48 <main@@Base+0x2cc0>
   18800:	mov	r7, r1
   18804:	b	18d68 <main@@Base+0x2ce0>
   18808:	mov	r0, r8
   1880c:	mov	r1, r7
   18810:	mov	r2, r5
   18814:	mov	r3, #4
   18818:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1881c:	b	18d64 <main@@Base+0x2cdc>
   18820:	bne	18834 <main@@Base+0x27ac>
   18824:	mov	r7, r1
   18828:	ldrb	r0, [r7, #1]!
   1882c:	cmp	r0, #32
   18830:	bhi	18844 <main@@Base+0x27bc>
   18834:	ldr	r0, [sp, #36]	; 0x24
   18838:	mov	r2, r5
   1883c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18840:	mov	r7, r0
   18844:	cmp	r7, r5
   18848:	beq	1887c <main@@Base+0x27f4>
   1884c:	ldrb	r0, [r7]
   18850:	cmp	r0, #58	; 0x3a
   18854:	bne	1887c <main@@Base+0x27f4>
   18858:	add	r1, r7, #1
   1885c:	sub	r0, r5, r1
   18860:	cmp	r0, #2
   18864:	blt	18e1c <main@@Base+0x2d94>
   18868:	ldrb	r0, [r1]
   1886c:	cmp	r0, #32
   18870:	bls	18e0c <main@@Base+0x2d84>
   18874:	mov	r7, r1
   18878:	b	18e2c <main@@Base+0x2da4>
   1887c:	ldr	r0, [sp, #36]	; 0x24
   18880:	mov	r1, r7
   18884:	mov	r2, r5
   18888:	mov	r3, #4
   1888c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   18890:	b	18e28 <main@@Base+0x2da0>
   18894:	cmp	r0, #34	; 0x22
   18898:	bne	1a428 <main@@Base+0x43a0>
   1889c:	add	r1, r9, #17
   188a0:	ldr	r6, [sp, #36]	; 0x24
   188a4:	sub	r0, r5, r1
   188a8:	cmp	r0, #2
   188ac:	blt	19090 <main@@Base+0x3008>
   188b0:	ldrb	r0, [r1]
   188b4:	cmp	r0, #32
   188b8:	bls	1907c <main@@Base+0x2ff4>
   188bc:	mov	r4, r1
   188c0:	b	190a0 <main@@Base+0x3018>
   188c4:	cmp	r0, #34	; 0x22
   188c8:	mov	r7, r9
   188cc:	bne	1a4cc <main@@Base+0x4444>
   188d0:	add	r1, r9, #3
   188d4:	sub	r0, r5, r1
   188d8:	cmp	r0, #2
   188dc:	blt	19104 <main@@Base+0x307c>
   188e0:	ldrb	r0, [r1]
   188e4:	cmp	r0, #32
   188e8:	bls	190f0 <main@@Base+0x3068>
   188ec:	mov	r7, r1
   188f0:	b	19114 <main@@Base+0x308c>
   188f4:	cmp	r0, #34	; 0x22
   188f8:	mov	r4, r9
   188fc:	bne	1a630 <main@@Base+0x45a8>
   18900:	add	r1, r9, #4
   18904:	sub	r0, r5, r1
   18908:	cmp	r0, #2
   1890c:	blt	19178 <main@@Base+0x30f0>
   18910:	ldrb	r0, [r1]
   18914:	cmp	r0, #32
   18918:	bls	19164 <main@@Base+0x30dc>
   1891c:	mov	r4, r1
   18920:	b	19188 <main@@Base+0x3100>
   18924:	cmp	r0, #34	; 0x22
   18928:	mov	r7, r9
   1892c:	bne	1b46c <main@@Base+0x53e4>
   18930:	add	r1, r9, #7
   18934:	sub	r0, r5, r1
   18938:	cmp	r0, #2
   1893c:	blt	191ec <main@@Base+0x3164>
   18940:	ldrb	r0, [r1]
   18944:	cmp	r0, #32
   18948:	bls	191d8 <main@@Base+0x3150>
   1894c:	mov	r7, r1
   18950:	b	191fc <main@@Base+0x3174>
   18954:	cmp	r0, #34	; 0x22
   18958:	bne	1b72c <main@@Base+0x56a4>
   1895c:	add	r1, r9, #17
   18960:	sub	r0, r5, r1
   18964:	cmp	r0, #2
   18968:	blt	192e4 <main@@Base+0x325c>
   1896c:	ldrb	r0, [r1]
   18970:	cmp	r0, #32
   18974:	bls	192d0 <main@@Base+0x3248>
   18978:	mov	r7, r1
   1897c:	b	192f4 <main@@Base+0x326c>
   18980:	bne	18994 <main@@Base+0x290c>
   18984:	mov	r1, r2
   18988:	ldrb	r0, [r1, #1]!
   1898c:	cmp	r0, #32
   18990:	bhi	189a8 <main@@Base+0x2920>
   18994:	mov	r1, r2
   18998:	mov	r0, r8
   1899c:	mov	r2, r5
   189a0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   189a4:	mov	r1, r0
   189a8:	cmp	r1, r5
   189ac:	beq	189e0 <main@@Base+0x2958>
   189b0:	ldrb	r0, [r1]
   189b4:	cmp	r0, #58	; 0x3a
   189b8:	bne	189e0 <main@@Base+0x2958>
   189bc:	add	r2, r1, #1
   189c0:	sub	r0, r5, r2
   189c4:	cmp	r0, #2
   189c8:	blt	19354 <main@@Base+0x32cc>
   189cc:	ldrb	r0, [r2]
   189d0:	cmp	r0, #32
   189d4:	bls	19344 <main@@Base+0x32bc>
   189d8:	mov	r1, r2
   189dc:	b	19368 <main@@Base+0x32e0>
   189e0:	mov	r0, r8
   189e4:	mov	r2, r5
   189e8:	mov	r3, #4
   189ec:	bl	333fc <flatcc_json_parser_set_error@@Base>
   189f0:	b	19364 <main@@Base+0x32dc>
   189f4:	bne	18a08 <main@@Base+0x2980>
   189f8:	mov	r7, r1
   189fc:	ldrb	r0, [r7, #1]!
   18a00:	cmp	r0, #32
   18a04:	bhi	18a18 <main@@Base+0x2990>
   18a08:	mov	r0, r8
   18a0c:	mov	r2, r5
   18a10:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18a14:	mov	r7, r0
   18a18:	cmp	r7, r5
   18a1c:	beq	18a50 <main@@Base+0x29c8>
   18a20:	ldrb	r0, [r7]
   18a24:	cmp	r0, #58	; 0x3a
   18a28:	bne	18a50 <main@@Base+0x29c8>
   18a2c:	add	r1, r7, #1
   18a30:	sub	r0, r5, r1
   18a34:	cmp	r0, #2
   18a38:	blt	193ac <main@@Base+0x3324>
   18a3c:	ldrb	r0, [r1]
   18a40:	cmp	r0, #32
   18a44:	bls	1939c <main@@Base+0x3314>
   18a48:	mov	r7, r1
   18a4c:	b	193bc <main@@Base+0x3334>
   18a50:	mov	r0, r8
   18a54:	mov	r1, r7
   18a58:	mov	r2, r5
   18a5c:	mov	r3, #4
   18a60:	bl	333fc <flatcc_json_parser_set_error@@Base>
   18a64:	b	193b8 <main@@Base+0x3330>
   18a68:	bne	18a7c <main@@Base+0x29f4>
   18a6c:	mov	r1, r2
   18a70:	ldrb	r0, [r1, #1]!
   18a74:	cmp	r0, #32
   18a78:	bhi	18a90 <main@@Base+0x2a08>
   18a7c:	mov	r1, r2
   18a80:	mov	r0, r8
   18a84:	mov	r2, r5
   18a88:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18a8c:	mov	r1, r0
   18a90:	cmp	r1, r5
   18a94:	beq	18ac8 <main@@Base+0x2a40>
   18a98:	ldrb	r0, [r1]
   18a9c:	cmp	r0, #58	; 0x3a
   18aa0:	bne	18ac8 <main@@Base+0x2a40>
   18aa4:	add	r2, r1, #1
   18aa8:	sub	r0, r5, r2
   18aac:	cmp	r0, #2
   18ab0:	blt	195bc <main@@Base+0x3534>
   18ab4:	ldrb	r0, [r2]
   18ab8:	cmp	r0, #32
   18abc:	bls	195ac <main@@Base+0x3524>
   18ac0:	mov	r1, r2
   18ac4:	b	195d0 <main@@Base+0x3548>
   18ac8:	mov	r0, r8
   18acc:	mov	r2, r5
   18ad0:	mov	r3, #4
   18ad4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   18ad8:	b	195cc <main@@Base+0x3544>
   18adc:	bne	18af0 <main@@Base+0x2a68>
   18ae0:	mov	r4, r1
   18ae4:	ldrb	r0, [r4, #1]!
   18ae8:	cmp	r0, #32
   18aec:	bhi	18b00 <main@@Base+0x2a78>
   18af0:	mov	r0, r8
   18af4:	mov	r2, r5
   18af8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18afc:	mov	r4, r0
   18b00:	cmp	r4, r5
   18b04:	beq	18b38 <main@@Base+0x2ab0>
   18b08:	ldrb	r0, [r4]
   18b0c:	cmp	r0, #58	; 0x3a
   18b10:	bne	18b38 <main@@Base+0x2ab0>
   18b14:	add	r1, r4, #1
   18b18:	sub	r0, r5, r1
   18b1c:	cmp	r0, #2
   18b20:	blt	19618 <main@@Base+0x3590>
   18b24:	ldrb	r0, [r1]
   18b28:	cmp	r0, #32
   18b2c:	bls	19608 <main@@Base+0x3580>
   18b30:	mov	r4, r1
   18b34:	b	19628 <main@@Base+0x35a0>
   18b38:	mov	r0, r8
   18b3c:	mov	r1, r4
   18b40:	mov	r2, r5
   18b44:	mov	r3, #4
   18b48:	bl	333fc <flatcc_json_parser_set_error@@Base>
   18b4c:	b	19624 <main@@Base+0x359c>
   18b50:	bne	18b64 <main@@Base+0x2adc>
   18b54:	mov	r1, r2
   18b58:	ldrb	r0, [r1, #1]!
   18b5c:	cmp	r0, #32
   18b60:	bhi	18b78 <main@@Base+0x2af0>
   18b64:	ldr	r0, [sp, #36]	; 0x24
   18b68:	mov	r1, r2
   18b6c:	mov	r2, r5
   18b70:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18b74:	mov	r1, r0
   18b78:	cmp	r1, r5
   18b7c:	beq	18bb0 <main@@Base+0x2b28>
   18b80:	ldrb	r0, [r1]
   18b84:	cmp	r0, #58	; 0x3a
   18b88:	bne	18bb0 <main@@Base+0x2b28>
   18b8c:	add	r2, r1, #1
   18b90:	sub	r0, r5, r2
   18b94:	cmp	r0, #2
   18b98:	blt	19958 <main@@Base+0x38d0>
   18b9c:	ldrb	r0, [r2]
   18ba0:	cmp	r0, #32
   18ba4:	bls	19948 <main@@Base+0x38c0>
   18ba8:	mov	r1, r2
   18bac:	b	1996c <main@@Base+0x38e4>
   18bb0:	ldr	r0, [sp, #36]	; 0x24
   18bb4:	mov	r2, r5
   18bb8:	mov	r3, #4
   18bbc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   18bc0:	b	19968 <main@@Base+0x38e0>
   18bc4:	cmp	r0, #34	; 0x22
   18bc8:	bne	1eddc <main@@Base+0x8d54>
   18bcc:	add	r1, r9, #11
   18bd0:	sub	r0, r5, r1
   18bd4:	cmp	r0, #2
   18bd8:	blt	19b04 <main@@Base+0x3a7c>
   18bdc:	ldrb	r0, [r1]
   18be0:	cmp	r0, #32
   18be4:	bls	19af0 <main@@Base+0x3a68>
   18be8:	mov	r4, r1
   18bec:	b	19b14 <main@@Base+0x3a8c>
   18bf0:	cmp	r0, #34	; 0x22
   18bf4:	bne	1eddc <main@@Base+0x8d54>
   18bf8:	add	r1, r9, #19
   18bfc:	sub	r0, r5, r1
   18c00:	cmp	r0, #2
   18c04:	blt	19b78 <main@@Base+0x3af0>
   18c08:	ldrb	r0, [r1]
   18c0c:	cmp	r0, #32
   18c10:	bls	19b64 <main@@Base+0x3adc>
   18c14:	mov	r4, r1
   18c18:	b	19b88 <main@@Base+0x3b00>
   18c1c:	cmp	r0, #34	; 0x22
   18c20:	bne	1a42c <main@@Base+0x43a4>
   18c24:	add	r1, r9, #24
   18c28:	sub	r0, r5, r1
   18c2c:	cmp	r0, #2
   18c30:	blt	19bec <main@@Base+0x3b64>
   18c34:	ldrb	r0, [r1]
   18c38:	cmp	r0, #32
   18c3c:	bls	19bd8 <main@@Base+0x3b50>
   18c40:	mov	r7, r1
   18c44:	b	19bfc <main@@Base+0x3b74>
   18c48:	cmp	r0, #34	; 0x22
   18c4c:	mov	r7, r9
   18c50:	bne	1c0ac <main@@Base+0x6024>
   18c54:	add	r1, r9, #5
   18c58:	sub	r0, r5, r1
   18c5c:	cmp	r0, #2
   18c60:	blt	19c60 <main@@Base+0x3bd8>
   18c64:	ldrb	r0, [r1]
   18c68:	cmp	r0, #32
   18c6c:	bls	19c4c <main@@Base+0x3bc4>
   18c70:	mov	r7, r1
   18c74:	b	19c70 <main@@Base+0x3be8>
   18c78:	cmp	r0, #34	; 0x22
   18c7c:	mov	r7, r9
   18c80:	bne	1c214 <main@@Base+0x618c>
   18c84:	add	r1, r9, #6
   18c88:	sub	r0, r5, r1
   18c8c:	cmp	r0, #2
   18c90:	blt	19cd4 <main@@Base+0x3c4c>
   18c94:	ldrb	r0, [r1]
   18c98:	cmp	r0, #32
   18c9c:	bls	19cc0 <main@@Base+0x3c38>
   18ca0:	mov	r7, r1
   18ca4:	b	19ce4 <main@@Base+0x3c5c>
   18ca8:	cmp	r0, #34	; 0x22
   18cac:	bne	1c340 <main@@Base+0x62b8>
   18cb0:	add	r1, r9, #17
   18cb4:	sub	r0, r5, r1
   18cb8:	cmp	r0, #2
   18cbc:	blt	19d48 <main@@Base+0x3cc0>
   18cc0:	ldrb	r0, [r1]
   18cc4:	cmp	r0, #32
   18cc8:	bls	19d34 <main@@Base+0x3cac>
   18ccc:	mov	r7, r1
   18cd0:	b	19d58 <main@@Base+0x3cd0>
   18cd4:	bne	18ce8 <main@@Base+0x2c60>
   18cd8:	mov	r7, r1
   18cdc:	ldrb	r0, [r7, #1]!
   18ce0:	cmp	r0, #32
   18ce4:	bhi	18cf8 <main@@Base+0x2c70>
   18ce8:	mov	r0, r8
   18cec:	mov	r2, r5
   18cf0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18cf4:	mov	r7, r0
   18cf8:	cmp	r7, r5
   18cfc:	beq	18d30 <main@@Base+0x2ca8>
   18d00:	ldrb	r0, [r7]
   18d04:	cmp	r0, #58	; 0x3a
   18d08:	bne	18d30 <main@@Base+0x2ca8>
   18d0c:	add	r1, r7, #1
   18d10:	sub	r0, r5, r1
   18d14:	cmp	r0, #2
   18d18:	blt	1a174 <main@@Base+0x40ec>
   18d1c:	ldrb	r0, [r1]
   18d20:	cmp	r0, #32
   18d24:	bls	1a164 <main@@Base+0x40dc>
   18d28:	mov	r7, r1
   18d2c:	b	1a184 <main@@Base+0x40fc>
   18d30:	mov	r0, r8
   18d34:	mov	r1, r7
   18d38:	mov	r2, r5
   18d3c:	mov	r3, #4
   18d40:	bl	333fc <flatcc_json_parser_set_error@@Base>
   18d44:	b	1a180 <main@@Base+0x40f8>
   18d48:	bne	18d58 <main@@Base+0x2cd0>
   18d4c:	ldrb	r0, [r7, #2]!
   18d50:	cmp	r0, #32
   18d54:	bhi	18d68 <main@@Base+0x2ce0>
   18d58:	mov	r0, r8
   18d5c:	mov	r2, r5
   18d60:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18d64:	mov	r7, r0
   18d68:	ldr	sl, [sp, #40]	; 0x28
   18d6c:	cmp	r9, r7
   18d70:	beq	19eb8 <main@@Base+0x3e30>
   18d74:	mov	r0, #0
   18d78:	mov	r1, r7
   18d7c:	mov	r2, r5
   18d80:	sub	r3, fp, #56	; 0x38
   18d84:	str	r0, [fp, #-56]	; 0xffffffc8
   18d88:	mov	r0, r8
   18d8c:	bl	351a8 <flatcc_json_parser_float@@Base>
   18d90:	mov	r4, r0
   18d94:	cmp	r7, r0
   18d98:	bne	18dcc <main@@Base+0x2d44>
   18d9c:	movw	r3, #45304	; 0xb0f8
   18da0:	sub	r0, fp, #56	; 0x38
   18da4:	mov	r1, r7
   18da8:	mov	r2, r5
   18dac:	movt	r3, #5
   18db0:	str	r0, [sp]
   18db4:	mov	r0, r8
   18db8:	bl	24a28 <main@@Base+0xe9a0>
   18dbc:	mov	r4, r0
   18dc0:	cmp	r0, r7
   18dc4:	cmpne	r4, r5
   18dc8:	beq	16fbc <main@@Base+0xf34>
   18dcc:	vldr	s0, [fp, #-56]	; 0xffffffc8
   18dd0:	vcmp.f32	s0, #0.0
   18dd4:	vmrs	APSR_nzcv, fpscr
   18dd8:	bne	18de8 <main@@Base+0x2d60>
   18ddc:	ldrb	r0, [r8, #8]
   18de0:	tst	r0, #2
   18de4:	beq	1f824 <main@@Base+0x979c>
   18de8:	ldr	r0, [r8]
   18dec:	mov	r1, #27
   18df0:	mov	r2, #4
   18df4:	mov	r3, #4
   18df8:	bl	30824 <flatcc_builder_table_add@@Base>
   18dfc:	cmp	r0, #0
   18e00:	beq	16fbc <main@@Base+0xf34>
   18e04:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18e08:	b	19f10 <main@@Base+0x3e88>
   18e0c:	bne	18e1c <main@@Base+0x2d94>
   18e10:	ldrb	r0, [r7, #2]!
   18e14:	cmp	r0, #32
   18e18:	bhi	18e2c <main@@Base+0x2da4>
   18e1c:	ldr	r0, [sp, #36]	; 0x24
   18e20:	mov	r2, r5
   18e24:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18e28:	mov	r7, r0
   18e2c:	cmp	r9, r7
   18e30:	beq	19e2c <main@@Base+0x3da4>
   18e34:	ldr	r8, [sp, #36]	; 0x24
   18e38:	mov	r1, #4
   18e3c:	mov	r2, #2
   18e40:	mvn	r3, #-1073741824	; 0xc0000000
   18e44:	ldr	r0, [r8]
   18e48:	bl	2f20c <flatcc_builder_start_vector@@Base>
   18e4c:	cmp	r0, #0
   18e50:	bne	20a6c <main@@Base+0xa9e4>
   18e54:	cmp	r7, r5
   18e58:	beq	18e90 <main@@Base+0x2e08>
   18e5c:	ldrb	r0, [r7]
   18e60:	cmp	r0, #91	; 0x5b
   18e64:	bne	18e90 <main@@Base+0x2e08>
   18e68:	ldr	sl, [sp, #40]	; 0x28
   18e6c:	add	r1, r7, #1
   18e70:	sub	r0, r5, r1
   18e74:	cmp	r0, #2
   18e78:	blt	18edc <main@@Base+0x2e54>
   18e7c:	ldrb	r0, [r1]
   18e80:	cmp	r0, #32
   18e84:	bls	18ecc <main@@Base+0x2e44>
   18e88:	mov	r7, r1
   18e8c:	b	18eec <main@@Base+0x2e64>
   18e90:	mov	r0, r8
   18e94:	mov	r1, r7
   18e98:	mov	r2, r5
   18e9c:	mov	r3, #22
   18ea0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   18ea4:	ldr	sl, [sp, #40]	; 0x28
   18ea8:	mov	r7, r0
   18eac:	ldr	r0, [r8]
   18eb0:	bl	30238 <flatcc_builder_end_vector@@Base>
   18eb4:	cmp	r0, #0
   18eb8:	str	r0, [sp, #52]	; 0x34
   18ebc:	beq	20a6c <main@@Base+0xa9e4>
   18ec0:	ldr	r0, [r8]
   18ec4:	mov	r1, #9
   18ec8:	b	19efc <main@@Base+0x3e74>
   18ecc:	bne	18edc <main@@Base+0x2e54>
   18ed0:	ldrb	r0, [r7, #2]!
   18ed4:	cmp	r0, #32
   18ed8:	bhi	18eec <main@@Base+0x2e64>
   18edc:	mov	r0, r8
   18ee0:	mov	r2, r5
   18ee4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18ee8:	mov	r7, r0
   18eec:	cmp	r7, r5
   18ef0:	mov	r4, r5
   18ef4:	beq	18f30 <main@@Base+0x2ea8>
   18ef8:	ldrb	r0, [r7]
   18efc:	cmp	r0, #93	; 0x5d
   18f00:	bne	18f2c <main@@Base+0x2ea4>
   18f04:	add	r1, r7, #1
   18f08:	sub	r0, r5, r1
   18f0c:	cmp	r0, #2
   18f10:	blt	19ab4 <main@@Base+0x3a2c>
   18f14:	ldrb	r0, [r1]
   18f18:	cmp	r0, #32
   18f1c:	bhi	1903c <main@@Base+0x2fb4>
   18f20:	bne	19ab4 <main@@Base+0x3a2c>
   18f24:	ldrb	r0, [r7, #2]!
   18f28:	b	19aac <main@@Base+0x3a24>
   18f2c:	mov	r4, r7
   18f30:	ldr	r0, [r8]
   18f34:	mov	r1, #1
   18f38:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   18f3c:	mov	r3, r0
   18f40:	cmp	r0, #0
   18f44:	beq	16fbc <main@@Base+0xf34>
   18f48:	mov	r0, r8
   18f4c:	mov	r1, r4
   18f50:	mov	r2, r5
   18f54:	bl	22d84 <main@@Base+0xccfc>
   18f58:	mov	r1, r0
   18f5c:	sub	r0, r5, r0
   18f60:	cmp	r0, #2
   18f64:	blt	18f90 <main@@Base+0x2f08>
   18f68:	ldrb	r0, [r1]
   18f6c:	cmp	r0, #32
   18f70:	bls	18f7c <main@@Base+0x2ef4>
   18f74:	mov	r4, r1
   18f78:	b	18fa0 <main@@Base+0x2f18>
   18f7c:	bne	18f90 <main@@Base+0x2f08>
   18f80:	mov	r4, r1
   18f84:	ldrb	r0, [r4, #1]!
   18f88:	cmp	r0, #32
   18f8c:	bhi	18fa0 <main@@Base+0x2f18>
   18f90:	mov	r0, r8
   18f94:	mov	r2, r5
   18f98:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18f9c:	mov	r4, r0
   18fa0:	cmp	r4, r5
   18fa4:	beq	19010 <main@@Base+0x2f88>
   18fa8:	ldrb	r0, [r4]
   18fac:	cmp	r0, #44	; 0x2c
   18fb0:	bne	19018 <main@@Base+0x2f90>
   18fb4:	add	r1, r4, #1
   18fb8:	sub	r0, r5, r1
   18fbc:	cmp	r0, #2
   18fc0:	blt	18fe8 <main@@Base+0x2f60>
   18fc4:	ldrb	r0, [r1]
   18fc8:	cmp	r0, #32
   18fcc:	bls	18fd8 <main@@Base+0x2f50>
   18fd0:	mov	r4, r1
   18fd4:	b	18ff8 <main@@Base+0x2f70>
   18fd8:	bne	18fe8 <main@@Base+0x2f60>
   18fdc:	ldrb	r0, [r4, #2]!
   18fe0:	cmp	r0, #32
   18fe4:	bhi	18ff8 <main@@Base+0x2f70>
   18fe8:	mov	r0, r8
   18fec:	mov	r2, r5
   18ff0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   18ff4:	mov	r4, r0
   18ff8:	cmp	r4, r5
   18ffc:	beq	19044 <main@@Base+0x2fbc>
   19000:	ldrb	r0, [r4]
   19004:	cmp	r0, #93	; 0x5d
   19008:	bne	18f30 <main@@Base+0x2ea8>
   1900c:	b	19020 <main@@Base+0x2f98>
   19010:	mov	r7, r5
   19014:	b	18eac <main@@Base+0x2e24>
   19018:	cmp	r0, #93	; 0x5d
   1901c:	bne	194e4 <main@@Base+0x345c>
   19020:	add	r1, r4, #1
   19024:	sub	r0, r5, r1
   19028:	cmp	r0, #2
   1902c:	blt	19ab4 <main@@Base+0x3a2c>
   19030:	ldrb	r0, [r1]
   19034:	cmp	r0, #32
   19038:	bls	19aa0 <main@@Base+0x3a18>
   1903c:	mov	r7, r1
   19040:	b	18eac <main@@Base+0x2e24>
   19044:	mov	r0, r8
   19048:	mov	r1, r5
   1904c:	b	194ec <main@@Base+0x3464>
   19050:	cmp	r0, #34	; 0x22
   19054:	bne	1c584 <main@@Base+0x64fc>
   19058:	add	r1, r9, #22
   1905c:	sub	r0, r5, r1
   19060:	cmp	r0, #2
   19064:	blt	1a330 <main@@Base+0x42a8>
   19068:	ldrb	r0, [r1]
   1906c:	cmp	r0, #32
   19070:	bls	1a31c <main@@Base+0x4294>
   19074:	mov	r4, r1
   19078:	b	1a340 <main@@Base+0x42b8>
   1907c:	bne	19090 <main@@Base+0x3008>
   19080:	mov	r4, r1
   19084:	ldrb	r0, [r4, #1]!
   19088:	cmp	r0, #32
   1908c:	bhi	190a0 <main@@Base+0x3018>
   19090:	mov	r0, r6
   19094:	mov	r2, r5
   19098:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1909c:	mov	r4, r0
   190a0:	cmp	r4, r5
   190a4:	beq	190d8 <main@@Base+0x3050>
   190a8:	ldrb	r0, [r4]
   190ac:	cmp	r0, #58	; 0x3a
   190b0:	bne	190d8 <main@@Base+0x3050>
   190b4:	add	r1, r4, #1
   190b8:	sub	r0, r5, r1
   190bc:	cmp	r0, #2
   190c0:	blt	1a3b4 <main@@Base+0x432c>
   190c4:	ldrb	r0, [r1]
   190c8:	cmp	r0, #32
   190cc:	bls	1a3a4 <main@@Base+0x431c>
   190d0:	mov	r4, r1
   190d4:	b	1a3c4 <main@@Base+0x433c>
   190d8:	mov	r0, r6
   190dc:	mov	r1, r4
   190e0:	mov	r2, r5
   190e4:	mov	r3, #4
   190e8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   190ec:	b	1a3c0 <main@@Base+0x4338>
   190f0:	bne	19104 <main@@Base+0x307c>
   190f4:	mov	r7, r1
   190f8:	ldrb	r0, [r7, #1]!
   190fc:	cmp	r0, #32
   19100:	bhi	19114 <main@@Base+0x308c>
   19104:	mov	r0, r8
   19108:	mov	r2, r5
   1910c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19110:	mov	r7, r0
   19114:	cmp	r7, r5
   19118:	beq	1914c <main@@Base+0x30c4>
   1911c:	ldrb	r0, [r7]
   19120:	cmp	r0, #58	; 0x3a
   19124:	bne	1914c <main@@Base+0x30c4>
   19128:	add	r1, r7, #1
   1912c:	sub	r0, r5, r1
   19130:	cmp	r0, #2
   19134:	blt	1a4bc <main@@Base+0x4434>
   19138:	ldrb	r0, [r1]
   1913c:	cmp	r0, #32
   19140:	bls	1a4ac <main@@Base+0x4424>
   19144:	mov	r7, r1
   19148:	b	1a4cc <main@@Base+0x4444>
   1914c:	mov	r0, r8
   19150:	mov	r1, r7
   19154:	mov	r2, r5
   19158:	mov	r3, #4
   1915c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19160:	b	1a4c8 <main@@Base+0x4440>
   19164:	bne	19178 <main@@Base+0x30f0>
   19168:	mov	r4, r1
   1916c:	ldrb	r0, [r4, #1]!
   19170:	cmp	r0, #32
   19174:	bhi	19188 <main@@Base+0x3100>
   19178:	mov	r0, r8
   1917c:	mov	r2, r5
   19180:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19184:	mov	r4, r0
   19188:	cmp	r4, r5
   1918c:	beq	191c0 <main@@Base+0x3138>
   19190:	ldrb	r0, [r4]
   19194:	cmp	r0, #58	; 0x3a
   19198:	bne	191c0 <main@@Base+0x3138>
   1919c:	add	r1, r4, #1
   191a0:	sub	r0, r5, r1
   191a4:	cmp	r0, #2
   191a8:	blt	1a620 <main@@Base+0x4598>
   191ac:	ldrb	r0, [r1]
   191b0:	cmp	r0, #32
   191b4:	bls	1a610 <main@@Base+0x4588>
   191b8:	mov	r4, r1
   191bc:	b	1a630 <main@@Base+0x45a8>
   191c0:	mov	r0, r8
   191c4:	mov	r1, r4
   191c8:	mov	r2, r5
   191cc:	mov	r3, #4
   191d0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   191d4:	b	1a62c <main@@Base+0x45a4>
   191d8:	bne	191ec <main@@Base+0x3164>
   191dc:	mov	r7, r1
   191e0:	ldrb	r0, [r7, #1]!
   191e4:	cmp	r0, #32
   191e8:	bhi	191fc <main@@Base+0x3174>
   191ec:	mov	r0, r8
   191f0:	mov	r2, r5
   191f4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   191f8:	mov	r7, r0
   191fc:	cmp	r7, r5
   19200:	beq	19234 <main@@Base+0x31ac>
   19204:	ldrb	r0, [r7]
   19208:	cmp	r0, #58	; 0x3a
   1920c:	bne	19234 <main@@Base+0x31ac>
   19210:	add	r1, r7, #1
   19214:	sub	r0, r5, r1
   19218:	cmp	r0, #2
   1921c:	blt	1b45c <main@@Base+0x53d4>
   19220:	ldrb	r0, [r1]
   19224:	cmp	r0, #32
   19228:	bls	1b44c <main@@Base+0x53c4>
   1922c:	mov	r7, r1
   19230:	b	1b46c <main@@Base+0x53e4>
   19234:	mov	r0, r8
   19238:	mov	r1, r7
   1923c:	mov	r2, r5
   19240:	mov	r3, #4
   19244:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19248:	b	1b468 <main@@Base+0x53e0>
   1924c:	cmp	r0, #34	; 0x22
   19250:	bne	1eddc <main@@Base+0x8d54>
   19254:	add	r1, r9, #18
   19258:	sub	r0, r5, r1
   1925c:	cmp	r0, #2
   19260:	blt	1b508 <main@@Base+0x5480>
   19264:	ldrb	r0, [r1]
   19268:	cmp	r0, #32
   1926c:	bls	1b4f4 <main@@Base+0x546c>
   19270:	mov	r4, r1
   19274:	b	1b518 <main@@Base+0x5490>
   19278:	cmp	r0, #34	; 0x22
   1927c:	bne	1d304 <main@@Base+0x727c>
   19280:	add	r1, r9, #17
   19284:	sub	r0, r5, r1
   19288:	cmp	r0, #2
   1928c:	blt	1b588 <main@@Base+0x5500>
   19290:	ldrb	r0, [r1]
   19294:	cmp	r0, #32
   19298:	bls	1b574 <main@@Base+0x54ec>
   1929c:	mov	r7, r1
   192a0:	b	1b598 <main@@Base+0x5510>
   192a4:	cmp	r0, #34	; 0x22
   192a8:	bne	1d4e8 <main@@Base+0x7460>
   192ac:	add	r1, r9, #17
   192b0:	sub	r0, r5, r1
   192b4:	cmp	r0, #2
   192b8:	blt	1b604 <main@@Base+0x557c>
   192bc:	ldrb	r0, [r1]
   192c0:	cmp	r0, #32
   192c4:	bls	1b5f0 <main@@Base+0x5568>
   192c8:	mov	r7, r1
   192cc:	b	1b614 <main@@Base+0x558c>
   192d0:	bne	192e4 <main@@Base+0x325c>
   192d4:	mov	r7, r1
   192d8:	ldrb	r0, [r7, #1]!
   192dc:	cmp	r0, #32
   192e0:	bhi	192f4 <main@@Base+0x326c>
   192e4:	mov	r0, r8
   192e8:	mov	r2, r5
   192ec:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   192f0:	mov	r7, r0
   192f4:	cmp	r7, r5
   192f8:	beq	1932c <main@@Base+0x32a4>
   192fc:	ldrb	r0, [r7]
   19300:	cmp	r0, #58	; 0x3a
   19304:	bne	1932c <main@@Base+0x32a4>
   19308:	add	r1, r7, #1
   1930c:	sub	r0, r5, r1
   19310:	cmp	r0, #2
   19314:	blt	1b694 <main@@Base+0x560c>
   19318:	ldrb	r0, [r1]
   1931c:	cmp	r0, #32
   19320:	bls	1b684 <main@@Base+0x55fc>
   19324:	mov	r7, r1
   19328:	b	1b6a4 <main@@Base+0x561c>
   1932c:	mov	r0, r8
   19330:	mov	r1, r7
   19334:	mov	r2, r5
   19338:	mov	r3, #4
   1933c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19340:	b	1b6a0 <main@@Base+0x5618>
   19344:	bne	19354 <main@@Base+0x32cc>
   19348:	ldrb	r0, [r1, #2]!
   1934c:	cmp	r0, #32
   19350:	bhi	19368 <main@@Base+0x32e0>
   19354:	mov	r1, r2
   19358:	mov	r0, r8
   1935c:	mov	r2, r5
   19360:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19364:	mov	r1, r0
   19368:	cmp	r9, r1
   1936c:	beq	19eb8 <main@@Base+0x3e30>
   19370:	mov	r0, r8
   19374:	mov	r2, r5
   19378:	add	r3, sp, #52	; 0x34
   1937c:	bl	16f7c <main@@Base+0xef4>
   19380:	mov	r4, r0
   19384:	ldr	r0, [sp, #52]	; 0x34
   19388:	cmp	r0, #0
   1938c:	beq	16fbc <main@@Base+0xf34>
   19390:	ldr	r0, [r8]
   19394:	mov	r1, #12
   19398:	b	196bc <main@@Base+0x3634>
   1939c:	bne	193ac <main@@Base+0x3324>
   193a0:	ldrb	r0, [r7, #2]!
   193a4:	cmp	r0, #32
   193a8:	bhi	193bc <main@@Base+0x3334>
   193ac:	mov	r0, r8
   193b0:	mov	r2, r5
   193b4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   193b8:	mov	r7, r0
   193bc:	cmp	r9, r7
   193c0:	beq	19eb8 <main@@Base+0x3e30>
   193c4:	mov	r6, #0
   193c8:	cmp	r7, r5
   193cc:	str	r6, [fp, #-52]	; 0xffffffcc
   193d0:	str	r6, [fp, #-56]	; 0xffffffc8
   193d4:	strb	r6, [fp, #-60]	; 0xffffffc4
   193d8:	str	r6, [sp, #56]	; 0x38
   193dc:	beq	1943c <main@@Base+0x33b4>
   193e0:	sub	r0, fp, #56	; 0x38
   193e4:	mov	r1, r7
   193e8:	mov	r2, r5
   193ec:	add	r3, sp, #56	; 0x38
   193f0:	str	r0, [sp]
   193f4:	mov	r0, r8
   193f8:	bl	352ec <flatcc_json_parser_integer@@Base>
   193fc:	cmp	r0, r7
   19400:	beq	19444 <main@@Base+0x33bc>
   19404:	ldr	r2, [sp, #56]	; 0x38
   19408:	mov	r4, r0
   1940c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19410:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19414:	cmp	r2, #0
   19418:	beq	1944c <main@@Base+0x33c4>
   1941c:	subs	r2, r0, #129	; 0x81
   19420:	sbcs	r1, r1, #0
   19424:	bcc	19474 <main@@Base+0x33ec>
   19428:	mov	r0, r8
   1942c:	mov	r1, r4
   19430:	mov	r2, r5
   19434:	mov	r3, #8
   19438:	b	19468 <main@@Base+0x33e0>
   1943c:	mov	r4, r5
   19440:	b	19484 <main@@Base+0x33fc>
   19444:	mov	r4, r7
   19448:	b	19484 <main@@Base+0x33fc>
   1944c:	subs	r2, r0, #128	; 0x80
   19450:	sbcs	r1, r1, #0
   19454:	bcc	1947c <main@@Base+0x33f4>
   19458:	mov	r0, r8
   1945c:	mov	r1, r4
   19460:	mov	r2, r5
   19464:	mov	r3, #7
   19468:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1946c:	mov	r4, r0
   19470:	b	19484 <main@@Base+0x33fc>
   19474:	rsb	r6, r0, #0
   19478:	b	19480 <main@@Base+0x33f8>
   1947c:	mov	r6, r0
   19480:	strb	r6, [fp, #-60]	; 0xffffffc4
   19484:	cmp	r7, r4
   19488:	bne	194c0 <main@@Base+0x3438>
   1948c:	movw	r3, #45176	; 0xb078
   19490:	sub	r0, fp, #60	; 0x3c
   19494:	mov	r1, r7
   19498:	mov	r2, r5
   1949c:	movt	r3, #5
   194a0:	str	r0, [sp]
   194a4:	mov	r0, r8
   194a8:	bl	22790 <main@@Base+0xc708>
   194ac:	mov	r4, r0
   194b0:	cmp	r0, r7
   194b4:	cmpne	r4, r5
   194b8:	beq	16fbc <main@@Base+0xf34>
   194bc:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   194c0:	uxtb	r0, r6
   194c4:	cmp	r0, #8
   194c8:	bne	194d8 <main@@Base+0x3450>
   194cc:	ldrb	r0, [r8, #8]
   194d0:	tst	r0, #2
   194d4:	beq	1f824 <main@@Base+0x979c>
   194d8:	ldr	r0, [r8]
   194dc:	mov	r1, #6
   194e0:	b	1a2e8 <main@@Base+0x4260>
   194e4:	mov	r0, r8
   194e8:	mov	r1, r4
   194ec:	mov	r2, r5
   194f0:	mov	r3, #9
   194f4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   194f8:	b	18ea8 <main@@Base+0x2e20>
   194fc:	cmp	r0, #34	; 0x22
   19500:	bne	1eddc <main@@Base+0x8d54>
   19504:	add	r1, r9, #18
   19508:	sub	r0, r5, r1
   1950c:	cmp	r0, #2
   19510:	blt	1b828 <main@@Base+0x57a0>
   19514:	ldrb	r0, [r1]
   19518:	cmp	r0, #32
   1951c:	bls	1b814 <main@@Base+0x578c>
   19520:	mov	r4, r1
   19524:	b	1b838 <main@@Base+0x57b0>
   19528:	cmp	r0, #34	; 0x22
   1952c:	bne	1eddc <main@@Base+0x8d54>
   19530:	add	r1, r9, #10
   19534:	sub	r0, r5, r1
   19538:	cmp	r0, #2
   1953c:	blt	1b8a8 <main@@Base+0x5820>
   19540:	ldrb	r0, [r1]
   19544:	cmp	r0, #32
   19548:	bls	1b894 <main@@Base+0x580c>
   1954c:	mov	r4, r1
   19550:	b	1b8b8 <main@@Base+0x5830>
   19554:	cmp	r0, #34	; 0x22
   19558:	bne	1eddc <main@@Base+0x8d54>
   1955c:	add	r1, r9, #10
   19560:	sub	r0, r5, r1
   19564:	cmp	r0, #2
   19568:	blt	1b928 <main@@Base+0x58a0>
   1956c:	ldrb	r0, [r1]
   19570:	cmp	r0, #32
   19574:	bls	1b914 <main@@Base+0x588c>
   19578:	mov	r4, r1
   1957c:	b	1b938 <main@@Base+0x58b0>
   19580:	cmp	r0, #34	; 0x22
   19584:	bne	1a42c <main@@Base+0x43a4>
   19588:	add	r1, r9, #16
   1958c:	sub	r0, r5, r1
   19590:	cmp	r0, #2
   19594:	blt	1bc5c <main@@Base+0x5bd4>
   19598:	ldrb	r0, [r1]
   1959c:	cmp	r0, #32
   195a0:	bls	1bc48 <main@@Base+0x5bc0>
   195a4:	mov	r4, r1
   195a8:	b	1bc6c <main@@Base+0x5be4>
   195ac:	bne	195bc <main@@Base+0x3534>
   195b0:	ldrb	r0, [r1, #2]!
   195b4:	cmp	r0, #32
   195b8:	bhi	195d0 <main@@Base+0x3548>
   195bc:	mov	r1, r2
   195c0:	mov	r0, r8
   195c4:	mov	r2, r5
   195c8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   195cc:	mov	r1, r0
   195d0:	ldr	sl, [sp, #40]	; 0x28
   195d4:	cmp	r9, r1
   195d8:	beq	19eb8 <main@@Base+0x3e30>
   195dc:	mov	r0, r8
   195e0:	mov	r2, r5
   195e4:	add	r3, sp, #52	; 0x34
   195e8:	bl	35818 <flatcc_json_parser_build_string@@Base>
   195ec:	mov	r4, r0
   195f0:	ldr	r0, [sp, #52]	; 0x34
   195f4:	cmp	r0, #0
   195f8:	beq	16fbc <main@@Base+0xf34>
   195fc:	ldr	r0, [r8]
   19600:	mov	r1, #3
   19604:	b	196bc <main@@Base+0x3634>
   19608:	bne	19618 <main@@Base+0x3590>
   1960c:	ldrb	r0, [r4, #2]!
   19610:	cmp	r0, #32
   19614:	bhi	19628 <main@@Base+0x35a0>
   19618:	mov	r0, r8
   1961c:	mov	r2, r5
   19620:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19624:	mov	r4, r0
   19628:	ldr	sl, [sp, #40]	; 0x28
   1962c:	cmp	r9, r4
   19630:	beq	19eb8 <main@@Base+0x3e30>
   19634:	ldr	r0, [r8]
   19638:	mov	r1, #1
   1963c:	mov	r2, #1
   19640:	mvn	r3, #0
   19644:	bl	2f20c <flatcc_builder_start_vector@@Base>
   19648:	cmp	r0, #0
   1964c:	bne	16fbc <main@@Base+0xf34>
   19650:	cmp	r4, r5
   19654:	beq	19688 <main@@Base+0x3600>
   19658:	ldrb	r0, [r4]
   1965c:	cmp	r0, #91	; 0x5b
   19660:	bne	19688 <main@@Base+0x3600>
   19664:	add	r1, r4, #1
   19668:	sub	r0, r5, r1
   1966c:	cmp	r0, #2
   19670:	blt	196e0 <main@@Base+0x3658>
   19674:	ldrb	r0, [r1]
   19678:	cmp	r0, #32
   1967c:	bls	196d0 <main@@Base+0x3648>
   19680:	mov	r4, r1
   19684:	b	196f0 <main@@Base+0x3668>
   19688:	mov	r0, r8
   1968c:	mov	r1, r4
   19690:	mov	r2, r5
   19694:	mov	r3, #22
   19698:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1969c:	mov	r4, r0
   196a0:	ldr	r0, [r8]
   196a4:	bl	30238 <flatcc_builder_end_vector@@Base>
   196a8:	cmp	r0, #0
   196ac:	str	r0, [sp, #52]	; 0x34
   196b0:	beq	16fbc <main@@Base+0xf34>
   196b4:	ldr	r0, [r8]
   196b8:	mov	r1, #30
   196bc:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   196c0:	cmp	r0, #0
   196c4:	beq	16fbc <main@@Base+0xf34>
   196c8:	ldr	r1, [sp, #52]	; 0x34
   196cc:	b	19f10 <main@@Base+0x3e88>
   196d0:	bne	196e0 <main@@Base+0x3658>
   196d4:	ldrb	r0, [r4, #2]!
   196d8:	cmp	r0, #32
   196dc:	bhi	196f0 <main@@Base+0x3668>
   196e0:	mov	r0, r8
   196e4:	mov	r2, r5
   196e8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   196ec:	mov	r4, r0
   196f0:	cmp	r4, r5
   196f4:	mov	r6, r5
   196f8:	beq	1970c <main@@Base+0x3684>
   196fc:	ldrb	r0, [r4]
   19700:	cmp	r0, #93	; 0x5d
   19704:	beq	198f8 <main@@Base+0x3870>
   19708:	mov	r6, r4
   1970c:	mov	r0, #0
   19710:	mov	r1, #1
   19714:	strb	r0, [fp, #-60]	; 0xffffffc4
   19718:	ldr	r0, [r8]
   1971c:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   19720:	cmp	r0, #0
   19724:	beq	20a34 <main@@Base+0xa9ac>
   19728:	mov	r7, r0
   1972c:	mov	r4, r6
   19730:	mov	r6, #0
   19734:	cmp	r4, r5
   19738:	str	r6, [fp, #-52]	; 0xffffffcc
   1973c:	str	r6, [fp, #-56]	; 0xffffffc8
   19740:	strb	r6, [fp, #-60]	; 0xffffffc4
   19744:	str	r6, [sp, #56]	; 0x38
   19748:	beq	19790 <main@@Base+0x3708>
   1974c:	sub	r0, fp, #56	; 0x38
   19750:	mov	r1, r4
   19754:	mov	r2, r5
   19758:	add	r3, sp, #56	; 0x38
   1975c:	str	r0, [sp]
   19760:	mov	r0, r8
   19764:	bl	352ec <flatcc_json_parser_integer@@Base>
   19768:	cmp	r0, r4
   1976c:	beq	19798 <main@@Base+0x3710>
   19770:	mov	r1, r0
   19774:	ldr	r0, [sp, #56]	; 0x38
   19778:	cmp	r0, #0
   1977c:	beq	197a0 <main@@Base+0x3718>
   19780:	mov	r0, r8
   19784:	mov	r2, r5
   19788:	mov	r3, #8
   1978c:	b	197c0 <main@@Base+0x3738>
   19790:	mov	r1, r5
   19794:	b	197c8 <main@@Base+0x3740>
   19798:	mov	r1, r4
   1979c:	b	197c8 <main@@Base+0x3740>
   197a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   197a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   197a8:	subs	r3, r0, #256	; 0x100
   197ac:	sbcs	r2, r2, #0
   197b0:	bcc	198dc <main@@Base+0x3854>
   197b4:	mov	r0, r8
   197b8:	mov	r2, r5
   197bc:	mov	r3, #7
   197c0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   197c4:	mov	r1, r0
   197c8:	cmp	r4, r1
   197cc:	bne	19804 <main@@Base+0x377c>
   197d0:	movw	r3, #45192	; 0xb088
   197d4:	sub	r0, fp, #60	; 0x3c
   197d8:	mov	r1, r4
   197dc:	mov	r2, r5
   197e0:	movt	r3, #5
   197e4:	str	r0, [sp]
   197e8:	mov	r0, r8
   197ec:	bl	22990 <main@@Base+0xc908>
   197f0:	mov	r1, r0
   197f4:	cmp	r0, r4
   197f8:	cmpne	r1, r5
   197fc:	beq	20a40 <main@@Base+0xa9b8>
   19800:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   19804:	sub	r0, r5, r1
   19808:	strb	r6, [r7]
   1980c:	cmp	r0, #2
   19810:	blt	1983c <main@@Base+0x37b4>
   19814:	ldrb	r0, [r1]
   19818:	cmp	r0, #32
   1981c:	bls	19828 <main@@Base+0x37a0>
   19820:	mov	r4, r1
   19824:	b	1984c <main@@Base+0x37c4>
   19828:	bne	1983c <main@@Base+0x37b4>
   1982c:	mov	r4, r1
   19830:	ldrb	r0, [r4, #1]!
   19834:	cmp	r0, #32
   19838:	bhi	1984c <main@@Base+0x37c4>
   1983c:	mov	r0, r8
   19840:	mov	r2, r5
   19844:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19848:	mov	r4, r0
   1984c:	cmp	r4, r5
   19850:	beq	198e8 <main@@Base+0x3860>
   19854:	ldrb	r0, [r4]
   19858:	cmp	r0, #44	; 0x2c
   1985c:	bne	198f0 <main@@Base+0x3868>
   19860:	add	r1, r4, #1
   19864:	sub	r0, r5, r1
   19868:	cmp	r0, #2
   1986c:	blt	19894 <main@@Base+0x380c>
   19870:	ldrb	r0, [r1]
   19874:	cmp	r0, #32
   19878:	bls	19884 <main@@Base+0x37fc>
   1987c:	mov	r4, r1
   19880:	b	198a4 <main@@Base+0x381c>
   19884:	bne	19894 <main@@Base+0x380c>
   19888:	ldrb	r0, [r4, #2]!
   1988c:	cmp	r0, #32
   19890:	bhi	198a4 <main@@Base+0x381c>
   19894:	mov	r0, r8
   19898:	mov	r2, r5
   1989c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   198a0:	mov	r4, r0
   198a4:	cmp	r4, r5
   198a8:	beq	1993c <main@@Base+0x38b4>
   198ac:	ldrb	r0, [r4]
   198b0:	cmp	r0, #93	; 0x5d
   198b4:	beq	198f8 <main@@Base+0x3870>
   198b8:	mov	r0, #0
   198bc:	mov	r1, #1
   198c0:	strb	r0, [fp, #-60]	; 0xffffffc4
   198c4:	ldr	r0, [r8]
   198c8:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   198cc:	mov	r7, r0
   198d0:	cmp	r0, #0
   198d4:	bne	19730 <main@@Base+0x36a8>
   198d8:	b	16fbc <main@@Base+0xf34>
   198dc:	mov	r6, r0
   198e0:	strb	r0, [fp, #-60]	; 0xffffffc4
   198e4:	b	197c8 <main@@Base+0x3740>
   198e8:	mov	r4, r5
   198ec:	b	196a0 <main@@Base+0x3618>
   198f0:	cmp	r0, #93	; 0x5d
   198f4:	bne	1a390 <main@@Base+0x4308>
   198f8:	add	r1, r4, #1
   198fc:	sub	r0, r5, r1
   19900:	cmp	r0, #2
   19904:	blt	1992c <main@@Base+0x38a4>
   19908:	ldrb	r0, [r1]
   1990c:	cmp	r0, #32
   19910:	bls	1991c <main@@Base+0x3894>
   19914:	mov	r4, r1
   19918:	b	196a0 <main@@Base+0x3618>
   1991c:	bne	1992c <main@@Base+0x38a4>
   19920:	ldrb	r0, [r4, #2]!
   19924:	cmp	r0, #32
   19928:	bhi	196a0 <main@@Base+0x3618>
   1992c:	mov	r0, r8
   19930:	mov	r2, r5
   19934:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19938:	b	1969c <main@@Base+0x3614>
   1993c:	mov	r0, r8
   19940:	mov	r1, r5
   19944:	b	1a398 <main@@Base+0x4310>
   19948:	bne	19958 <main@@Base+0x38d0>
   1994c:	ldrb	r0, [r1, #2]!
   19950:	cmp	r0, #32
   19954:	bhi	1996c <main@@Base+0x38e4>
   19958:	ldr	r0, [sp, #36]	; 0x24
   1995c:	mov	r1, r2
   19960:	mov	r2, r5
   19964:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19968:	mov	r1, r0
   1996c:	cmp	r9, r1
   19970:	beq	199a8 <main@@Base+0x3920>
   19974:	ldr	r0, [sp, #48]	; 0x30
   19978:	ldr	r8, [sp, #36]	; 0x24
   1997c:	mov	r2, #8
   19980:	mov	r3, #0
   19984:	str	r2, [sp]
   19988:	mov	r2, r5
   1998c:	str	r0, [sp, #4]
   19990:	movw	r0, #13436	; 0x347c
   19994:	movt	r0, #2
   19998:	str	r0, [sp, #8]
   1999c:	mov	r0, r8
   199a0:	bl	35ae4 <flatcc_json_parser_union@@Base>
   199a4:	b	1a43c <main@@Base+0x43b4>
   199a8:	eor	r0, r6, #889192448	; 0x35000000
   199ac:	orrs	r0, r0, r4
   199b0:	bne	19e2c <main@@Base+0x3da4>
   199b4:	cmp	sl, #6
   199b8:	mov	r7, r9
   199bc:	blt	19dc8 <main@@Base+0x3d40>
   199c0:	ldr	r2, [sp, #32]
   199c4:	mov	r1, r9
   199c8:	ldrb	r0, [r1, #5]!
   199cc:	ldr	r2, [r2]
   199d0:	cmp	r2, #0
   199d4:	beq	199fc <main@@Base+0x3974>
   199d8:	cmp	r0, #33	; 0x21
   199dc:	bcc	199ec <main@@Base+0x3964>
   199e0:	cmp	r0, #58	; 0x3a
   199e4:	mov	r7, r9
   199e8:	bne	19dc8 <main@@Base+0x3d40>
   199ec:	ldr	r0, [sp, #32]
   199f0:	mov	r2, #0
   199f4:	str	r2, [r0]
   199f8:	b	19a0c <main@@Base+0x3984>
   199fc:	cmp	r0, #34	; 0x22
   19a00:	mov	r7, r9
   19a04:	bne	19dc8 <main@@Base+0x3d40>
   19a08:	add	r1, r9, #6
   19a0c:	sub	r0, r5, r1
   19a10:	cmp	r0, #2
   19a14:	blt	19a40 <main@@Base+0x39b8>
   19a18:	ldrb	r0, [r1]
   19a1c:	cmp	r0, #32
   19a20:	bls	19a2c <main@@Base+0x39a4>
   19a24:	mov	r7, r1
   19a28:	b	19a50 <main@@Base+0x39c8>
   19a2c:	bne	19a40 <main@@Base+0x39b8>
   19a30:	mov	r7, r1
   19a34:	ldrb	r0, [r7, #1]!
   19a38:	cmp	r0, #32
   19a3c:	bhi	19a50 <main@@Base+0x39c8>
   19a40:	ldr	r0, [sp, #36]	; 0x24
   19a44:	mov	r2, r5
   19a48:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19a4c:	mov	r7, r0
   19a50:	cmp	r7, r5
   19a54:	beq	19a88 <main@@Base+0x3a00>
   19a58:	ldrb	r0, [r7]
   19a5c:	cmp	r0, #58	; 0x3a
   19a60:	bne	19a88 <main@@Base+0x3a00>
   19a64:	add	r1, r7, #1
   19a68:	sub	r0, r5, r1
   19a6c:	cmp	r0, #2
   19a70:	blt	19db8 <main@@Base+0x3d30>
   19a74:	ldrb	r0, [r1]
   19a78:	cmp	r0, #32
   19a7c:	bls	19da8 <main@@Base+0x3d20>
   19a80:	mov	r7, r1
   19a84:	b	19dc8 <main@@Base+0x3d40>
   19a88:	ldr	r0, [sp, #36]	; 0x24
   19a8c:	mov	r1, r7
   19a90:	mov	r2, r5
   19a94:	mov	r3, #4
   19a98:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19a9c:	b	19dc4 <main@@Base+0x3d3c>
   19aa0:	bne	19ab4 <main@@Base+0x3a2c>
   19aa4:	ldrb	r0, [r4, #2]!
   19aa8:	mov	r7, r4
   19aac:	cmp	r0, #32
   19ab0:	bhi	18eac <main@@Base+0x2e24>
   19ab4:	mov	r0, r8
   19ab8:	mov	r2, r5
   19abc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19ac0:	b	18ea8 <main@@Base+0x2e20>
   19ac4:	cmp	r0, #34	; 0x22
   19ac8:	bne	1eddc <main@@Base+0x8d54>
   19acc:	add	r1, r9, #21
   19ad0:	sub	r0, r5, r1
   19ad4:	cmp	r0, #2
   19ad8:	blt	1bcd8 <main@@Base+0x5c50>
   19adc:	ldrb	r0, [r1]
   19ae0:	cmp	r0, #32
   19ae4:	bls	1bcc4 <main@@Base+0x5c3c>
   19ae8:	mov	r4, r1
   19aec:	b	1bce8 <main@@Base+0x5c60>
   19af0:	bne	19b04 <main@@Base+0x3a7c>
   19af4:	mov	r4, r1
   19af8:	ldrb	r0, [r4, #1]!
   19afc:	cmp	r0, #32
   19b00:	bhi	19b14 <main@@Base+0x3a8c>
   19b04:	mov	r0, r8
   19b08:	mov	r2, r5
   19b0c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19b10:	mov	r4, r0
   19b14:	cmp	r4, r5
   19b18:	beq	19b4c <main@@Base+0x3ac4>
   19b1c:	ldrb	r0, [r4]
   19b20:	cmp	r0, #58	; 0x3a
   19b24:	bne	19b4c <main@@Base+0x3ac4>
   19b28:	add	r1, r4, #1
   19b2c:	sub	r0, r5, r1
   19b30:	cmp	r0, #2
   19b34:	blt	1bdd4 <main@@Base+0x5d4c>
   19b38:	ldrb	r0, [r1]
   19b3c:	cmp	r0, #32
   19b40:	bls	1bdc4 <main@@Base+0x5d3c>
   19b44:	mov	r4, r1
   19b48:	b	1bde4 <main@@Base+0x5d5c>
   19b4c:	mov	r0, r8
   19b50:	mov	r1, r4
   19b54:	mov	r2, r5
   19b58:	mov	r3, #4
   19b5c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19b60:	b	1bde0 <main@@Base+0x5d58>
   19b64:	bne	19b78 <main@@Base+0x3af0>
   19b68:	mov	r4, r1
   19b6c:	ldrb	r0, [r4, #1]!
   19b70:	cmp	r0, #32
   19b74:	bhi	19b88 <main@@Base+0x3b00>
   19b78:	mov	r0, r8
   19b7c:	mov	r2, r5
   19b80:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19b84:	mov	r4, r0
   19b88:	cmp	r4, r5
   19b8c:	beq	19bc0 <main@@Base+0x3b38>
   19b90:	ldrb	r0, [r4]
   19b94:	cmp	r0, #58	; 0x3a
   19b98:	bne	19bc0 <main@@Base+0x3b38>
   19b9c:	add	r1, r4, #1
   19ba0:	sub	r0, r5, r1
   19ba4:	cmp	r0, #2
   19ba8:	blt	1bed4 <main@@Base+0x5e4c>
   19bac:	ldrb	r0, [r1]
   19bb0:	cmp	r0, #32
   19bb4:	bls	1bec4 <main@@Base+0x5e3c>
   19bb8:	mov	r4, r1
   19bbc:	b	1bee4 <main@@Base+0x5e5c>
   19bc0:	mov	r0, r8
   19bc4:	mov	r1, r4
   19bc8:	mov	r2, r5
   19bcc:	mov	r3, #4
   19bd0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19bd4:	b	1bee0 <main@@Base+0x5e58>
   19bd8:	bne	19bec <main@@Base+0x3b64>
   19bdc:	mov	r7, r1
   19be0:	ldrb	r0, [r7, #1]!
   19be4:	cmp	r0, #32
   19be8:	bhi	19bfc <main@@Base+0x3b74>
   19bec:	mov	r0, r8
   19bf0:	mov	r2, r5
   19bf4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19bf8:	mov	r7, r0
   19bfc:	cmp	r7, r5
   19c00:	beq	19c34 <main@@Base+0x3bac>
   19c04:	ldrb	r0, [r7]
   19c08:	cmp	r0, #58	; 0x3a
   19c0c:	bne	19c34 <main@@Base+0x3bac>
   19c10:	add	r1, r7, #1
   19c14:	sub	r0, r5, r1
   19c18:	cmp	r0, #2
   19c1c:	blt	1bf7c <main@@Base+0x5ef4>
   19c20:	ldrb	r0, [r1]
   19c24:	cmp	r0, #32
   19c28:	bls	1bf6c <main@@Base+0x5ee4>
   19c2c:	mov	r7, r1
   19c30:	b	1bf8c <main@@Base+0x5f04>
   19c34:	mov	r0, r8
   19c38:	mov	r1, r7
   19c3c:	mov	r2, r5
   19c40:	mov	r3, #4
   19c44:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19c48:	b	1bf88 <main@@Base+0x5f00>
   19c4c:	bne	19c60 <main@@Base+0x3bd8>
   19c50:	mov	r7, r1
   19c54:	ldrb	r0, [r7, #1]!
   19c58:	cmp	r0, #32
   19c5c:	bhi	19c70 <main@@Base+0x3be8>
   19c60:	mov	r0, r8
   19c64:	mov	r2, r5
   19c68:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19c6c:	mov	r7, r0
   19c70:	cmp	r7, r5
   19c74:	beq	19ca8 <main@@Base+0x3c20>
   19c78:	ldrb	r0, [r7]
   19c7c:	cmp	r0, #58	; 0x3a
   19c80:	bne	19ca8 <main@@Base+0x3c20>
   19c84:	add	r1, r7, #1
   19c88:	sub	r0, r5, r1
   19c8c:	cmp	r0, #2
   19c90:	blt	1c09c <main@@Base+0x6014>
   19c94:	ldrb	r0, [r1]
   19c98:	cmp	r0, #32
   19c9c:	bls	1c08c <main@@Base+0x6004>
   19ca0:	mov	r7, r1
   19ca4:	b	1c0ac <main@@Base+0x6024>
   19ca8:	mov	r0, r8
   19cac:	mov	r1, r7
   19cb0:	mov	r2, r5
   19cb4:	mov	r3, #4
   19cb8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19cbc:	b	1c0a8 <main@@Base+0x6020>
   19cc0:	bne	19cd4 <main@@Base+0x3c4c>
   19cc4:	mov	r7, r1
   19cc8:	ldrb	r0, [r7, #1]!
   19ccc:	cmp	r0, #32
   19cd0:	bhi	19ce4 <main@@Base+0x3c5c>
   19cd4:	mov	r0, r8
   19cd8:	mov	r2, r5
   19cdc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19ce0:	mov	r7, r0
   19ce4:	cmp	r7, r5
   19ce8:	beq	19d1c <main@@Base+0x3c94>
   19cec:	ldrb	r0, [r7]
   19cf0:	cmp	r0, #58	; 0x3a
   19cf4:	bne	19d1c <main@@Base+0x3c94>
   19cf8:	add	r1, r7, #1
   19cfc:	sub	r0, r5, r1
   19d00:	cmp	r0, #2
   19d04:	blt	1c204 <main@@Base+0x617c>
   19d08:	ldrb	r0, [r1]
   19d0c:	cmp	r0, #32
   19d10:	bls	1c1f4 <main@@Base+0x616c>
   19d14:	mov	r7, r1
   19d18:	b	1c214 <main@@Base+0x618c>
   19d1c:	mov	r0, r8
   19d20:	mov	r1, r7
   19d24:	mov	r2, r5
   19d28:	mov	r3, #4
   19d2c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19d30:	b	1c210 <main@@Base+0x6188>
   19d34:	bne	19d48 <main@@Base+0x3cc0>
   19d38:	mov	r7, r1
   19d3c:	ldrb	r0, [r7, #1]!
   19d40:	cmp	r0, #32
   19d44:	bhi	19d58 <main@@Base+0x3cd0>
   19d48:	mov	r0, r8
   19d4c:	mov	r2, r5
   19d50:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19d54:	mov	r7, r0
   19d58:	cmp	r7, r5
   19d5c:	beq	19d90 <main@@Base+0x3d08>
   19d60:	ldrb	r0, [r7]
   19d64:	cmp	r0, #58	; 0x3a
   19d68:	bne	19d90 <main@@Base+0x3d08>
   19d6c:	add	r1, r7, #1
   19d70:	sub	r0, r5, r1
   19d74:	cmp	r0, #2
   19d78:	blt	1c2b0 <main@@Base+0x6228>
   19d7c:	ldrb	r0, [r1]
   19d80:	cmp	r0, #32
   19d84:	bls	1c2a0 <main@@Base+0x6218>
   19d88:	mov	r7, r1
   19d8c:	b	1c2c0 <main@@Base+0x6238>
   19d90:	mov	r0, r8
   19d94:	mov	r1, r7
   19d98:	mov	r2, r5
   19d9c:	mov	r3, #4
   19da0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19da4:	b	1c2bc <main@@Base+0x6234>
   19da8:	bne	19db8 <main@@Base+0x3d30>
   19dac:	ldrb	r0, [r7, #2]!
   19db0:	cmp	r0, #32
   19db4:	bhi	19dc8 <main@@Base+0x3d40>
   19db8:	ldr	r0, [sp, #36]	; 0x24
   19dbc:	mov	r2, r5
   19dc0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19dc4:	mov	r7, r0
   19dc8:	cmp	r9, r7
   19dcc:	beq	19e2c <main@@Base+0x3da4>
   19dd0:	ldr	r8, [sp, #36]	; 0x24
   19dd4:	mov	r1, #4
   19dd8:	mov	r2, #2
   19ddc:	mvn	r3, #-1073741824	; 0xc0000000
   19de0:	ldr	r0, [r8]
   19de4:	bl	2f20c <flatcc_builder_start_vector@@Base>
   19de8:	cmp	r0, #0
   19dec:	bne	20a6c <main@@Base+0xa9e4>
   19df0:	cmp	r7, r5
   19df4:	beq	19ec4 <main@@Base+0x3e3c>
   19df8:	ldrb	r0, [r7]
   19dfc:	cmp	r0, #91	; 0x5b
   19e00:	bne	19ec4 <main@@Base+0x3e3c>
   19e04:	ldr	sl, [sp, #40]	; 0x28
   19e08:	add	r1, r7, #1
   19e0c:	sub	r0, r5, r1
   19e10:	cmp	r0, #2
   19e14:	blt	19f54 <main@@Base+0x3ecc>
   19e18:	ldrb	r0, [r1]
   19e1c:	cmp	r0, #32
   19e20:	bls	19f44 <main@@Base+0x3ebc>
   19e24:	mov	r7, r1
   19e28:	b	19f64 <main@@Base+0x3edc>
   19e2c:	movw	r0, #31088	; 0x7970
   19e30:	ldr	sl, [sp, #40]	; 0x28
   19e34:	movt	r0, #24436	; 0x5f74
   19e38:	eor	r0, r8, r0
   19e3c:	orrs	r0, r0, r4
   19e40:	bne	19eb4 <main@@Base+0x3e2c>
   19e44:	add	r4, r9, #8
   19e48:	ldr	r8, [sp, #36]	; 0x24
   19e4c:	mov	r1, #8
   19e50:	sub	r0, r5, r4
   19e54:	cmp	r0, #8
   19e58:	movcc	r1, r0
   19e5c:	sub	r1, r1, #1
   19e60:	cmp	r1, #7
   19e64:	bhi	1f810 <main@@Base+0x9788>
   19e68:	ldrb	r1, [r4]
   19e6c:	cmp	r1, #101	; 0x65
   19e70:	bne	1f810 <main@@Base+0x9788>
   19e74:	cmp	r0, #2
   19e78:	blt	1f810 <main@@Base+0x9788>
   19e7c:	ldr	r2, [sp, #32]
   19e80:	mov	r1, r9
   19e84:	ldrb	r0, [r1, #9]!
   19e88:	ldr	r2, [r2]
   19e8c:	cmp	r2, #0
   19e90:	beq	19f18 <main@@Base+0x3e90>
   19e94:	cmp	r0, #33	; 0x21
   19e98:	bcc	19ea4 <main@@Base+0x3e1c>
   19e9c:	cmp	r0, #58	; 0x3a
   19ea0:	bne	1f810 <main@@Base+0x9788>
   19ea4:	ldr	r0, [sp, #32]
   19ea8:	mov	r2, #0
   19eac:	str	r2, [r0]
   19eb0:	b	19f24 <main@@Base+0x3e9c>
   19eb4:	ldr	r8, [sp, #36]	; 0x24
   19eb8:	mov	r0, r8
   19ebc:	mov	r1, r9
   19ec0:	b	1f818 <main@@Base+0x9790>
   19ec4:	mov	r0, r8
   19ec8:	mov	r1, r7
   19ecc:	mov	r2, r5
   19ed0:	mov	r3, #22
   19ed4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   19ed8:	ldr	sl, [sp, #40]	; 0x28
   19edc:	mov	r7, r0
   19ee0:	ldr	r0, [r8]
   19ee4:	bl	30238 <flatcc_builder_end_vector@@Base>
   19ee8:	cmp	r0, #0
   19eec:	str	r0, [sp, #52]	; 0x34
   19ef0:	beq	20a6c <main@@Base+0xa9e4>
   19ef4:	ldr	r0, [r8]
   19ef8:	mov	r1, #31
   19efc:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   19f00:	cmp	r0, #0
   19f04:	beq	20a6c <main@@Base+0xa9e4>
   19f08:	ldr	r1, [sp, #52]	; 0x34
   19f0c:	mov	r4, r7
   19f10:	str	r1, [r0]
   19f14:	b	1f824 <main@@Base+0x979c>
   19f18:	cmp	r0, #34	; 0x22
   19f1c:	bne	1f810 <main@@Base+0x9788>
   19f20:	add	r1, r9, #10
   19f24:	sub	r0, r5, r1
   19f28:	cmp	r0, #2
   19f2c:	blt	1a104 <main@@Base+0x407c>
   19f30:	ldrb	r0, [r1]
   19f34:	cmp	r0, #32
   19f38:	bls	1a0f0 <main@@Base+0x4068>
   19f3c:	mov	r2, r1
   19f40:	b	1a114 <main@@Base+0x408c>
   19f44:	bne	19f54 <main@@Base+0x3ecc>
   19f48:	ldrb	r0, [r7, #2]!
   19f4c:	cmp	r0, #32
   19f50:	bhi	19f64 <main@@Base+0x3edc>
   19f54:	mov	r0, r8
   19f58:	mov	r2, r5
   19f5c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   19f60:	mov	r7, r0
   19f64:	cmp	r7, r5
   19f68:	mov	r4, r5
   19f6c:	beq	19fa8 <main@@Base+0x3f20>
   19f70:	ldrb	r0, [r7]
   19f74:	cmp	r0, #93	; 0x5d
   19f78:	bne	19fa4 <main@@Base+0x3f1c>
   19f7c:	add	r1, r7, #1
   19f80:	sub	r0, r5, r1
   19f84:	cmp	r0, #2
   19f88:	blt	1d8e8 <main@@Base+0x7860>
   19f8c:	ldrb	r0, [r1]
   19f90:	cmp	r0, #32
   19f94:	bhi	1a0dc <main@@Base+0x4054>
   19f98:	bne	1d8e8 <main@@Base+0x7860>
   19f9c:	ldrb	r0, [r7, #2]!
   19fa0:	b	1d8e0 <main@@Base+0x7858>
   19fa4:	mov	r4, r7
   19fa8:	ldr	r0, [r8]
   19fac:	mov	r1, #1
   19fb0:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   19fb4:	mov	r3, r0
   19fb8:	cmp	r0, #0
   19fbc:	beq	16fbc <main@@Base+0xf34>
   19fc0:	mov	r0, r8
   19fc4:	mov	r1, r4
   19fc8:	mov	r2, r5
   19fcc:	bl	22d84 <main@@Base+0xccfc>
   19fd0:	mov	r1, r0
   19fd4:	sub	r0, r5, r0
   19fd8:	cmp	r0, #2
   19fdc:	blt	1a008 <main@@Base+0x3f80>
   19fe0:	ldrb	r0, [r1]
   19fe4:	cmp	r0, #32
   19fe8:	bls	19ff4 <main@@Base+0x3f6c>
   19fec:	mov	r4, r1
   19ff0:	b	1a018 <main@@Base+0x3f90>
   19ff4:	bne	1a008 <main@@Base+0x3f80>
   19ff8:	mov	r4, r1
   19ffc:	ldrb	r0, [r4, #1]!
   1a000:	cmp	r0, #32
   1a004:	bhi	1a018 <main@@Base+0x3f90>
   1a008:	mov	r0, r8
   1a00c:	mov	r2, r5
   1a010:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1a014:	mov	r4, r0
   1a018:	cmp	r4, r5
   1a01c:	beq	1a0a4 <main@@Base+0x401c>
   1a020:	ldrb	r0, [r4]
   1a024:	cmp	r0, #44	; 0x2c
   1a028:	bne	1a0ac <main@@Base+0x4024>
   1a02c:	add	r1, r4, #1
   1a030:	sub	r0, r5, r1
   1a034:	cmp	r0, #2
   1a038:	blt	1a060 <main@@Base+0x3fd8>
   1a03c:	ldrb	r0, [r1]
   1a040:	cmp	r0, #32
   1a044:	bls	1a050 <main@@Base+0x3fc8>
   1a048:	mov	r4, r1
   1a04c:	b	1a070 <main@@Base+0x3fe8>
   1a050:	bne	1a060 <main@@Base+0x3fd8>
   1a054:	ldrb	r0, [r4, #2]!
   1a058:	cmp	r0, #32
   1a05c:	bhi	1a070 <main@@Base+0x3fe8>
   1a060:	mov	r0, r8
   1a064:	mov	r2, r5
   1a068:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1a06c:	mov	r4, r0
   1a070:	cmp	r4, r5
   1a074:	beq	1a0e4 <main@@Base+0x405c>
   1a078:	ldrb	r0, [r4]
   1a07c:	cmp	r0, #93	; 0x5d
   1a080:	bne	19fa8 <main@@Base+0x3f20>
   1a084:	add	r1, r4, #1
   1a088:	sub	r0, r5, r1
   1a08c:	cmp	r0, #2
   1a090:	blt	1d8e8 <main@@Base+0x7860>
   1a094:	ldrb	r0, [r1]
   1a098:	cmp	r0, #32
   1a09c:	bls	1d8d4 <main@@Base+0x784c>
   1a0a0:	b	1a0dc <main@@Base+0x4054>
   1a0a4:	mov	r7, r5
   1a0a8:	b	19ee0 <main@@Base+0x3e58>
   1a0ac:	cmp	r0, #93	; 0x5d
   1a0b0:	bne	1b66c <main@@Base+0x55e4>
   1a0b4:	add	r1, r4, #1
   1a0b8:	sub	r0, r5, r1
   1a0bc:	cmp	r0, #2
   1a0c0:	blt	1d8e8 <main@@Base+0x7860>
   1a0c4:	ldrb	r0, [r1]
   1a0c8:	cmp	r0, #32
   1a0cc:	bls	1d8c8 <main@@Base+0x7840>
   1a0d0:	ldr	r5, [sp, #44]	; 0x2c
   1a0d4:	ldr	r8, [sp, #36]	; 0x24
   1a0d8:	ldr	sl, [sp, #40]	; 0x28
   1a0dc:	mov	r7, r1
   1a0e0:	b	19ee0 <main@@Base+0x3e58>
   1a0e4:	mov	r0, r8
   1a0e8:	mov	r1, r5
   1a0ec:	b	1b674 <main@@Base+0x55ec>
   1a0f0:	bne	1a104 <main@@Base+0x407c>
   1a0f4:	mov	r2, r1
   1a0f8:	ldrb	r0, [r2, #1]!
   1a0fc:	cmp	r0, #32
   1a100:	bhi	1a114 <main@@Base+0x408c>
   1a104:	mov	r0, r8
   1a108:	mov	r2, r5
   1a10c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1a110:	mov	r2, r0
   1a114:	cmp	r2, r5
   1a118:	beq	1a14c <main@@Base+0x40c4>
   1a11c:	ldrb	r0, [r2]
   1a120:	cmp	r0, #58	; 0x3a
   1a124:	bne	1a14c <main@@Base+0x40c4>
   1a128:	add	r1, r2, #1
   1a12c:	sub	r0, r5, r1
   1a130:	cmp	r0, #2
   1a134:	blt	1c4a8 <main@@Base+0x6420>
   1a138:	ldrb	r0, [r1]
   1a13c:	cmp	r0, #32
   1a140:	bls	1c498 <main@@Base+0x6410>
   1a144:	mov	r2, r1
   1a148:	b	1c4b8 <main@@Base+0x6430>
   1a14c:	mov	r1, r2
   1a150:	mov	r0, r8
   1a154:	mov	r2, r5
   1a158:	mov	r3, #4
   1a15c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1a160:	b	1c4b4 <main@@Base+0x642c>
   1a164:	bne	1a174 <main@@Base+0x40ec>
   1a168:	ldrb	r0, [r7, #2]!
   1a16c:	cmp	r0, #32
   1a170:	bhi	1a184 <main@@Base+0x40fc>
   1a174:	mov	r0, r8
   1a178:	mov	r2, r5
   1a17c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1a180:	mov	r7, r0
   1a184:	cmp	r9, r7
   1a188:	beq	19eb8 <main@@Base+0x3e30>
   1a18c:	sub	r4, r5, r7
   1a190:	mov	r0, #0
   1a194:	cmp	r4, #4
   1a198:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a19c:	blt	1a1e0 <main@@Base+0x4158>
   1a1a0:	movw	r1, #27042	; 0x69a2
   1a1a4:	mov	r0, r7
   1a1a8:	mov	r2, #4
   1a1ac:	movt	r1, #4
   1a1b0:	bl	14ebc <bcmp@plt>
   1a1b4:	cmp	r0, #0
   1a1b8:	beq	1a244 <main@@Base+0x41bc>
   1a1bc:	cmp	r4, #5
   1a1c0:	blt	1a1e0 <main@@Base+0x4158>
   1a1c4:	movw	r1, #27047	; 0x69a7
   1a1c8:	mov	r0, r7
   1a1cc:	mov	r2, #5
   1a1d0:	movt	r1, #4
   1a1d4:	bl	14ebc <bcmp@plt>
   1a1d8:	cmp	r0, #0
   1a1dc:	beq	1a304 <main@@Base+0x427c>
   1a1e0:	mov	r6, #0
   1a1e4:	cmp	r7, r5
   1a1e8:	str	r6, [fp, #-52]	; 0xffffffcc
   1a1ec:	str	r6, [fp, #-56]	; 0xffffffc8
   1a1f0:	str	r6, [sp, #56]	; 0x38
   1a1f4:	beq	1a23c <main@@Base+0x41b4>
   1a1f8:	sub	r0, fp, #56	; 0x38
   1a1fc:	mov	r1, r7
   1a200:	mov	r2, r5
   1a204:	add	r3, sp, #56	; 0x38
   1a208:	str	r0, [sp]
   1a20c:	mov	r0, r8
   1a210:	bl	352ec <flatcc_json_parser_integer@@Base>
   1a214:	cmp	r0, r7
   1a218:	beq	1a250 <main@@Base+0x41c8>
   1a21c:	mov	r1, r0
   1a220:	ldr	r0, [sp, #56]	; 0x38
   1a224:	cmp	r0, #0
   1a228:	beq	1a258 <main@@Base+0x41d0>
   1a22c:	mov	r0, r8
   1a230:	mov	r2, r5
   1a234:	mov	r3, #8
   1a238:	b	1a278 <main@@Base+0x41f0>
   1a23c:	mov	r4, r5
   1a240:	b	1a280 <main@@Base+0x41f8>
   1a244:	mov	r6, #1
   1a248:	add	r4, r7, #4
   1a24c:	b	1a28c <main@@Base+0x4204>
   1a250:	mov	r4, r7
   1a254:	b	1a280 <main@@Base+0x41f8>
   1a258:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a25c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a260:	subs	r3, r0, #256	; 0x100
   1a264:	sbcs	r2, r2, #0
   1a268:	bcc	1a310 <main@@Base+0x4288>
   1a26c:	mov	r0, r8
   1a270:	mov	r2, r5
   1a274:	mov	r3, #7
   1a278:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1a27c:	mov	r4, r0
   1a280:	uxtb	r6, r6
   1a284:	cmp	r6, #0
   1a288:	movwne	r6, #1
   1a28c:	strb	r6, [fp, #-60]	; 0xffffffc4
   1a290:	cmp	r7, r4
   1a294:	bne	1a2cc <main@@Base+0x4244>
   1a298:	movw	r3, #45268	; 0xb0d4
   1a29c:	sub	r0, fp, #60	; 0x3c
   1a2a0:	mov	r1, r7
   1a2a4:	mov	r2, r5
   1a2a8:	movt	r3, #5
   1a2ac:	str	r0, [sp]
   1a2b0:	mov	r0, r8
   1a2b4:	bl	24858 <main@@Base+0xe7d0>
   1a2b8:	mov	r4, r0
   1a2bc:	cmp	r0, r7
   1a2c0:	cmpne	r4, r5
   1a2c4:	beq	16fbc <main@@Base+0xf34>
   1a2c8:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1a2cc:	cmp	r6, #1
   1a2d0:	bne	1a2e0 <main@@Base+0x4258>
   1a2d4:	ldrb	r0, [r8, #8]
   1a2d8:	tst	r0, #2
   1a2dc:	beq	1f824 <main@@Base+0x979c>
   1a2e0:	ldr	r0, [r8]
   1a2e4:	mov	r1, #15
   1a2e8:	mov	r2, #1
   1a2ec:	mov	r3, #1
   1a2f0:	bl	30824 <flatcc_builder_table_add@@Base>
   1a2f4:	cmp	r0, #0
   1a2f8:	beq	16fbc <main@@Base+0xf34>
   1a2fc:	strb	r6, [r0]
   1a300:	b	1f824 <main@@Base+0x979c>
   1a304:	mov	r6, #0
   1a308:	add	r4, r7, #5
   1a30c:	b	1a28c <main@@Base+0x4204>
   1a310:	mov	r6, r0
   1a314:	mov	r4, r1
   1a318:	b	1a280 <main@@Base+0x41f8>
   1a31c:	bne	1a330 <main@@Base+0x42a8>
   1a320:	mov	r4, r1
   1a324:	ldrb	r0, [r4, #1]!
   1a328:	cmp	r0, #32
   1a32c:	bhi	1a340 <main@@Base+0x42b8>
   1a330:	ldr	r0, [sp, #36]	; 0x24
   1a334:	mov	r2, r5
   1a338:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1a33c:	mov	r4, r0
   1a340:	cmp	r4, r5
   1a344:	beq	1a378 <main@@Base+0x42f0>
   1a348:	ldrb	r0, [r4]
   1a34c:	cmp	r0, #58	; 0x3a
   1a350:	bne	1a378 <main@@Base+0x42f0>
   1a354:	add	r1, r4, #1
   1a358:	sub	r0, r5, r1
   1a35c:	cmp	r0, #2
   1a360:	blt	1c510 <main@@Base+0x6488>
   1a364:	ldrb	r0, [r1]
   1a368:	cmp	r0, #32
   1a36c:	bls	1c500 <main@@Base+0x6478>
   1a370:	mov	r4, r1
   1a374:	b	1c520 <main@@Base+0x6498>
   1a378:	ldr	r0, [sp, #36]	; 0x24
   1a37c:	mov	r1, r4
   1a380:	mov	r2, r5
   1a384:	mov	r3, #4
   1a388:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1a38c:	b	1c51c <main@@Base+0x6494>
   1a390:	mov	r0, r8
   1a394:	mov	r1, r4
   1a398:	mov	r2, r5
   1a39c:	mov	r3, #9
   1a3a0:	b	19698 <main@@Base+0x3610>
   1a3a4:	bne	1a3b4 <main@@Base+0x432c>
   1a3a8:	ldrb	r0, [r4, #2]!
   1a3ac:	cmp	r0, #32
   1a3b0:	bhi	1a3c4 <main@@Base+0x433c>
   1a3b4:	mov	r0, r6
   1a3b8:	mov	r2, r5
   1a3bc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1a3c0:	mov	r4, r0
   1a3c4:	cmp	sl, r4
   1a3c8:	beq	1a428 <main@@Base+0x43a0>
   1a3cc:	ldr	r8, [sp, #36]	; 0x24
   1a3d0:	mov	r1, #1
   1a3d4:	mov	r2, #1
   1a3d8:	mvn	r3, #0
   1a3dc:	ldr	r0, [r8]
   1a3e0:	bl	2f20c <flatcc_builder_start_vector@@Base>
   1a3e4:	cmp	r0, #0
   1a3e8:	bne	16fbc <main@@Base+0xf34>
   1a3ec:	ldr	sl, [sp, #40]	; 0x28
   1a3f0:	cmp	r4, r5
   1a3f4:	beq	1a448 <main@@Base+0x43c0>
   1a3f8:	ldrb	r0, [r4]
   1a3fc:	cmp	r0, #91	; 0x5b
   1a400:	bne	1a448 <main@@Base+0x43c0>
   1a404:	add	r1, r4, #1
   1a408:	sub	r0, r5, r1
   1a40c:	cmp	r0, #2
   1a410:	blt	1b9a4 <main@@Base+0x591c>
   1a414:	ldrb	r0, [r1]
   1a418:	cmp	r0, #32
   1a41c:	bls	1b994 <main@@Base+0x590c>
   1a420:	mov	r4, r1
   1a424:	b	1b9b4 <main@@Base+0x592c>
   1a428:	ldr	r8, [sp, #36]	; 0x24
   1a42c:	mov	r0, r8
   1a430:	mov	r1, sl
   1a434:	mov	r2, r5
   1a438:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   1a43c:	mov	r4, r0
   1a440:	ldr	sl, [sp, #40]	; 0x28
   1a444:	b	1f824 <main@@Base+0x979c>
   1a448:	mov	r0, r8
   1a44c:	mov	r1, r4
   1a450:	mov	r2, r5
   1a454:	mov	r3, #22
   1a458:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1a45c:	mov	r4, r0
   1a460:	ldr	r0, [r8]
   1a464:	bl	30238 <flatcc_builder_end_vector@@Base>
   1a468:	cmp	r0, #0
   1a46c:	str	r0, [sp, #52]	; 0x34
   1a470:	beq	16fbc <main@@Base+0xf34>
   1a474:	ldr	r0, [r8]
   1a478:	mov	r1, #24
   1a47c:	b	196bc <main@@Base+0x3634>
   1a480:	cmp	r0, #34	; 0x22
   1a484:	bne	1eddc <main@@Base+0x8d54>
   1a488:	add	r1, r9, #18
   1a48c:	sub	r0, r5, r1
   1a490:	cmp	r0, #2
   1a494:	blt	1c61c <main@@Base+0x6594>
   1a498:	ldrb	r0, [r1]
   1a49c:	cmp	r0, #32
   1a4a0:	bls	1c608 <main@@Base+0x6580>
   1a4a4:	mov	r9, r1
   1a4a8:	b	1c62c <main@@Base+0x65a4>
   1a4ac:	bne	1a4bc <main@@Base+0x4434>
   1a4b0:	ldrb	r0, [r7, #2]!
   1a4b4:	cmp	r0, #32
   1a4b8:	bhi	1a4cc <main@@Base+0x4444>
   1a4bc:	mov	r0, r8
   1a4c0:	mov	r2, r5
   1a4c4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1a4c8:	mov	r7, r0
   1a4cc:	ldr	sl, [sp, #40]	; 0x28
   1a4d0:	cmp	r9, r7
   1a4d4:	beq	19eb8 <main@@Base+0x3e30>
   1a4d8:	mov	r6, #0
   1a4dc:	cmp	r7, r5
   1a4e0:	str	r6, [fp, #-52]	; 0xffffffcc
   1a4e4:	str	r6, [fp, #-56]	; 0xffffffc8
   1a4e8:	strh	r6, [fp, #-60]	; 0xffffffc4
   1a4ec:	str	r6, [sp, #56]	; 0x38
   1a4f0:	beq	1a554 <main@@Base+0x44cc>
   1a4f4:	sub	r0, fp, #56	; 0x38
   1a4f8:	mov	r1, r7
   1a4fc:	mov	r2, r5
   1a500:	add	r3, sp, #56	; 0x38
   1a504:	str	r0, [sp]
   1a508:	mov	r0, r8
   1a50c:	bl	352ec <flatcc_json_parser_integer@@Base>
   1a510:	cmp	r0, r7
   1a514:	beq	1a55c <main@@Base+0x44d4>
   1a518:	ldr	r2, [sp, #56]	; 0x38
   1a51c:	mov	r4, r0
   1a520:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a524:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a528:	cmp	r2, #0
   1a52c:	beq	1a564 <main@@Base+0x44dc>
   1a530:	movw	r2, #32769	; 0x8001
   1a534:	subs	r2, r0, r2
   1a538:	sbcs	r1, r1, #0
   1a53c:	bcc	1a58c <main@@Base+0x4504>
   1a540:	mov	r0, r8
   1a544:	mov	r1, r4
   1a548:	mov	r2, r5
   1a54c:	mov	r3, #8
   1a550:	b	1a580 <main@@Base+0x44f8>
   1a554:	mov	r4, r5
   1a558:	b	1a59c <main@@Base+0x4514>
   1a55c:	mov	r4, r7
   1a560:	b	1a59c <main@@Base+0x4514>
   1a564:	subs	r2, r0, #32768	; 0x8000
   1a568:	sbcs	r1, r1, #0
   1a56c:	bcc	1a594 <main@@Base+0x450c>
   1a570:	mov	r0, r8
   1a574:	mov	r1, r4
   1a578:	mov	r2, r5
   1a57c:	mov	r3, #7
   1a580:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1a584:	mov	r4, r0
   1a588:	b	1a59c <main@@Base+0x4514>
   1a58c:	rsb	r6, r0, #0
   1a590:	b	1a598 <main@@Base+0x4510>
   1a594:	mov	r6, r0
   1a598:	strh	r6, [fp, #-60]	; 0xffffffc4
   1a59c:	cmp	r7, r4
   1a5a0:	bne	1a5d8 <main@@Base+0x4550>
   1a5a4:	movw	r3, #45204	; 0xb094
   1a5a8:	sub	r0, fp, #60	; 0x3c
   1a5ac:	mov	r1, r7
   1a5b0:	mov	r2, r5
   1a5b4:	movt	r3, #5
   1a5b8:	str	r0, [sp]
   1a5bc:	mov	r0, r8
   1a5c0:	bl	22b80 <main@@Base+0xcaf8>
   1a5c4:	mov	r4, r0
   1a5c8:	cmp	r0, r7
   1a5cc:	cmpne	r4, r5
   1a5d0:	beq	16fbc <main@@Base+0xf34>
   1a5d4:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1a5d8:	uxth	r0, r6
   1a5dc:	cmp	r0, #100	; 0x64
   1a5e0:	bne	1a5f0 <main@@Base+0x4568>
   1a5e4:	ldrb	r0, [r8, #8]
   1a5e8:	tst	r0, #2
   1a5ec:	beq	1f824 <main@@Base+0x979c>
   1a5f0:	ldr	r0, [r8]
   1a5f4:	mov	r1, #2
   1a5f8:	mov	r2, #2
   1a5fc:	mov	r3, #2
   1a600:	bl	30824 <flatcc_builder_table_add@@Base>
   1a604:	cmp	r0, #0
   1a608:	bne	1c1ec <main@@Base+0x6164>
   1a60c:	b	16fbc <main@@Base+0xf34>
   1a610:	bne	1a620 <main@@Base+0x4598>
   1a614:	ldrb	r0, [r4, #2]!
   1a618:	cmp	r0, #32
   1a61c:	bhi	1a630 <main@@Base+0x45a8>
   1a620:	mov	r0, r8
   1a624:	mov	r2, r5
   1a628:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1a62c:	mov	r4, r0
   1a630:	ldr	sl, [sp, #40]	; 0x28
   1a634:	cmp	r9, r4
   1a638:	beq	19eb8 <main@@Base+0x3e30>
   1a63c:	ldr	r0, [r8]
   1a640:	mov	r1, #0
   1a644:	mov	r2, #32
   1a648:	mov	r3, #16
   1a64c:	bl	30824 <flatcc_builder_table_add@@Base>
   1a650:	cmp	r0, #0
   1a654:	str	r0, [sp, #24]
   1a658:	beq	16fbc <main@@Base+0xf34>
   1a65c:	cmp	r4, r5
   1a660:	beq	1a694 <main@@Base+0x460c>
   1a664:	ldrb	r0, [r4]
   1a668:	cmp	r0, #123	; 0x7b
   1a66c:	bne	1a694 <main@@Base+0x460c>
   1a670:	add	r1, r4, #1
   1a674:	sub	r0, r5, r1
   1a678:	cmp	r0, #2
   1a67c:	blt	1a6bc <main@@Base+0x4634>
   1a680:	ldrb	r0, [r1]
   1a684:	cmp	r0, #32
   1a688:	bls	1a6ac <main@@Base+0x4624>
   1a68c:	mov	r4, r1
   1a690:	b	1a6cc <main@@Base+0x4644>
   1a694:	mov	r0, r8
   1a698:	mov	r1, r4
   1a69c:	mov	r2, r5
   1a6a0:	mov	r3, #21
   1a6a4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1a6a8:	b	1f820 <main@@Base+0x9798>
   1a6ac:	bne	1a6bc <main@@Base+0x4634>
   1a6b0:	ldrb	r0, [r4, #2]!
   1a6b4:	cmp	r0, #32
   1a6b8:	bhi	1a6cc <main@@Base+0x4644>
   1a6bc:	mov	r0, r8
   1a6c0:	mov	r2, r5
   1a6c4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1a6c8:	mov	r4, r0
   1a6cc:	cmp	r4, r5
   1a6d0:	mov	r2, r5
   1a6d4:	beq	1a710 <main@@Base+0x4688>
   1a6d8:	ldrb	r0, [r4]
   1a6dc:	cmp	r0, #125	; 0x7d
   1a6e0:	bne	1a70c <main@@Base+0x4684>
   1a6e4:	add	r1, r4, #1
   1a6e8:	sub	r0, r5, r1
   1a6ec:	cmp	r0, #2
   1a6f0:	blt	1e330 <main@@Base+0x82a8>
   1a6f4:	ldrb	r0, [r1]
   1a6f8:	cmp	r0, #32
   1a6fc:	bhi	1b3e0 <main@@Base+0x5358>
   1a700:	bne	1e330 <main@@Base+0x82a8>
   1a704:	ldrb	r0, [r4, #2]!
   1a708:	b	1e328 <main@@Base+0x82a0>
   1a70c:	mov	r2, r4
   1a710:	ldr	r0, [sp, #24]
   1a714:	add	r0, r0, #26
   1a718:	str	r0, [sp, #20]
   1a71c:	cmp	r2, r5
   1a720:	mov	r9, r5
   1a724:	beq	1a778 <main@@Base+0x46f0>
   1a728:	ldrb	r0, [r2]
   1a72c:	cmp	r0, #46	; 0x2e
   1a730:	beq	1a74c <main@@Base+0x46c4>
   1a734:	cmp	r0, #34	; 0x22
   1a738:	bne	1a768 <main@@Base+0x46e0>
   1a73c:	ldr	r0, [sp, #32]
   1a740:	mov	r1, #0
   1a744:	add	r9, r2, #1
   1a748:	b	1a774 <main@@Base+0x46ec>
   1a74c:	mov	r1, r2
   1a750:	mov	r0, r8
   1a754:	mov	r2, r5
   1a758:	mov	r3, #5
   1a75c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1a760:	mov	r9, r0
   1a764:	b	1a778 <main@@Base+0x46f0>
   1a768:	ldr	r0, [sp, #32]
   1a76c:	mov	r1, #1
   1a770:	mov	r9, r2
   1a774:	str	r1, [r0]
   1a778:	sub	ip, r5, r9
   1a77c:	mov	r0, #8
   1a780:	cmp	ip, #8
   1a784:	movcc	r0, ip
   1a788:	sub	r7, r0, #1
   1a78c:	cmp	r7, #7
   1a790:	bhi	1b300 <main@@Base+0x5278>
   1a794:	add	r5, pc, #32
   1a798:	mov	r1, #0
   1a79c:	mov	lr, #0
   1a7a0:	mov	r8, #0
   1a7a4:	mov	r6, #0
   1a7a8:	mov	r3, #0
   1a7ac:	mov	r4, #0
   1a7b0:	mov	r0, #0
   1a7b4:	mov	r2, #0
   1a7b8:	ldr	pc, [r5, r7, lsl #2]
   1a7bc:	andeq	sl, r1, r0, lsr #16
   1a7c0:	andeq	sl, r1, r8, lsl r8
   1a7c4:	andeq	sl, r1, r0, lsl r8
   1a7c8:	andeq	sl, r1, r8, lsl #16
   1a7cc:	strdeq	sl, [r1], -ip
   1a7d0:	strdeq	sl, [r1], -r0
   1a7d4:	andeq	sl, r1, r0, ror #15
   1a7d8:	ldrdeq	sl, [r1], -ip
   1a7dc:	ldrb	lr, [r9, #7]
   1a7e0:	ldrb	r0, [r9, #6]
   1a7e4:	mov	r8, r1
   1a7e8:	orr	r0, lr, r0, lsl #8
   1a7ec:	mov	r1, r0
   1a7f0:	ldrb	r0, [r9, #5]
   1a7f4:	mov	r6, r8
   1a7f8:	orr	r1, r1, r0, lsl #16
   1a7fc:	ldrb	r0, [r9, #4]
   1a800:	mov	r3, r6
   1a804:	orr	r1, r1, r0, lsl #24
   1a808:	ldrb	r0, [r9, #3]
   1a80c:	orr	r4, r0, r3
   1a810:	ldrb	r0, [r9, #2]
   1a814:	orr	r0, r4, r0, lsl #8
   1a818:	ldrb	r2, [r9, #1]
   1a81c:	orr	r2, r0, r2, lsl #16
   1a820:	ldrb	r0, [r9]
   1a824:	movw	r3, #29556	; 0x7374
   1a828:	movt	r3, #29797	; 0x7465
   1a82c:	orr	r2, r2, r0, lsl #24
   1a830:	mvn	r0, #-855638016	; 0xcd000000
   1a834:	subs	r0, r0, r1
   1a838:	sbcs	r0, r3, r2
   1a83c:	bcc	1a8b0 <main@@Base+0x4828>
   1a840:	ldr	r5, [sp, #44]	; 0x2c
   1a844:	ldr	r8, [sp, #36]	; 0x24
   1a848:	and	r1, r1, #-16777216	; 0xff000000
   1a84c:	eor	r0, r2, r3
   1a850:	eor	r2, r1, #822083584	; 0x31000000
   1a854:	orrs	r2, r2, r0
   1a858:	beq	1a97c <main@@Base+0x48f4>
   1a85c:	eor	r1, r1, #838860800	; 0x32000000
   1a860:	orrs	r0, r1, r0
   1a864:	bne	1b300 <main@@Base+0x5278>
   1a868:	cmp	ip, #6
   1a86c:	mov	r5, r9
   1a870:	blt	1ade0 <main@@Base+0x4d58>
   1a874:	ldr	r2, [sp, #32]
   1a878:	mov	r1, r9
   1a87c:	ldrb	r0, [r1, #5]!
   1a880:	ldr	r2, [r2]
   1a884:	cmp	r2, #0
   1a888:	beq	1aa64 <main@@Base+0x49dc>
   1a88c:	cmp	r0, #33	; 0x21
   1a890:	bcc	1a8a0 <main@@Base+0x4818>
   1a894:	cmp	r0, #58	; 0x3a
   1a898:	mov	r5, r9
   1a89c:	bne	1ade0 <main@@Base+0x4d58>
   1a8a0:	ldr	r0, [sp, #32]
   1a8a4:	mov	r2, #0
   1a8a8:	str	r2, [r0]
   1a8ac:	b	1aa74 <main@@Base+0x49ec>
   1a8b0:	ldr	r5, [sp, #44]	; 0x2c
   1a8b4:	ldr	r8, [sp, #36]	; 0x24
   1a8b8:	cmn	r2, #-2013265919	; 0x88000001
   1a8bc:	bhi	1a91c <main@@Base+0x4894>
   1a8c0:	and	r1, r1, #-16777216	; 0xff000000
   1a8c4:	eor	r0, r2, r3
   1a8c8:	eor	r1, r1, #855638016	; 0x33000000
   1a8cc:	orrs	r0, r1, r0
   1a8d0:	bne	1b300 <main@@Base+0x5278>
   1a8d4:	cmp	ip, #6
   1a8d8:	mov	r1, r9
   1a8dc:	blt	1b100 <main@@Base+0x5078>
   1a8e0:	ldr	r1, [sp, #32]
   1a8e4:	mov	r2, r9
   1a8e8:	ldrb	r0, [r2, #5]!
   1a8ec:	ldr	r1, [r1]
   1a8f0:	cmp	r1, #0
   1a8f4:	beq	1aacc <main@@Base+0x4a44>
   1a8f8:	cmp	r0, #33	; 0x21
   1a8fc:	bcc	1a90c <main@@Base+0x4884>
   1a900:	cmp	r0, #58	; 0x3a
   1a904:	mov	r1, r9
   1a908:	bne	1b100 <main@@Base+0x5078>
   1a90c:	ldr	r0, [sp, #32]
   1a910:	mov	r1, #0
   1a914:	str	r1, [r0]
   1a918:	b	1aadc <main@@Base+0x4a54>
   1a91c:	lsr	r1, r2, #24
   1a920:	and	r0, r2, #-16777216	; 0xff000000
   1a924:	cmp	r1, #120	; 0x78
   1a928:	bhi	1a9c4 <main@@Base+0x493c>
   1a92c:	teq	r0, #2013265920	; 0x78000000
   1a930:	bne	1b300 <main@@Base+0x5278>
   1a934:	cmp	ip, #2
   1a938:	mov	r7, r9
   1a93c:	blt	1b148 <main@@Base+0x50c0>
   1a940:	ldr	r2, [sp, #32]
   1a944:	mov	r1, r9
   1a948:	ldrb	r0, [r1, #1]!
   1a94c:	ldr	r2, [r2]
   1a950:	cmp	r2, #0
   1a954:	beq	1aafc <main@@Base+0x4a74>
   1a958:	cmp	r0, #33	; 0x21
   1a95c:	bcc	1a96c <main@@Base+0x48e4>
   1a960:	cmp	r0, #58	; 0x3a
   1a964:	mov	r7, r9
   1a968:	bne	1b148 <main@@Base+0x50c0>
   1a96c:	ldr	r0, [sp, #32]
   1a970:	mov	r2, #0
   1a974:	str	r2, [r0]
   1a978:	b	1ab0c <main@@Base+0x4a84>
   1a97c:	cmp	ip, #6
   1a980:	mov	r7, r9
   1a984:	blt	1af24 <main@@Base+0x4e9c>
   1a988:	ldr	r2, [sp, #32]
   1a98c:	mov	r1, r9
   1a990:	ldrb	r0, [r1, #5]!
   1a994:	ldr	r2, [r2]
   1a998:	cmp	r2, #0
   1a99c:	beq	1aa9c <main@@Base+0x4a14>
   1a9a0:	cmp	r0, #33	; 0x21
   1a9a4:	bcc	1a9b4 <main@@Base+0x492c>
   1a9a8:	cmp	r0, #58	; 0x3a
   1a9ac:	mov	r7, r9
   1a9b0:	bne	1af24 <main@@Base+0x4e9c>
   1a9b4:	ldr	r0, [sp, #32]
   1a9b8:	mov	r2, #0
   1a9bc:	str	r2, [r0]
   1a9c0:	b	1aaac <main@@Base+0x4a24>
   1a9c4:	teq	r0, #2030043136	; 0x79000000
   1a9c8:	beq	1aa1c <main@@Base+0x4994>
   1a9cc:	teq	r0, #2046820352	; 0x7a000000
   1a9d0:	bne	1b300 <main@@Base+0x5278>
   1a9d4:	cmp	ip, #2
   1a9d8:	mov	r7, r9
   1a9dc:	blt	1b1e4 <main@@Base+0x515c>
   1a9e0:	ldr	r2, [sp, #32]
   1a9e4:	mov	r1, r9
   1a9e8:	ldrb	r0, [r1, #1]!
   1a9ec:	ldr	r2, [r2]
   1a9f0:	cmp	r2, #0
   1a9f4:	beq	1ac34 <main@@Base+0x4bac>
   1a9f8:	cmp	r0, #33	; 0x21
   1a9fc:	bcc	1aa0c <main@@Base+0x4984>
   1aa00:	cmp	r0, #58	; 0x3a
   1aa04:	mov	r7, r9
   1aa08:	bne	1b1e4 <main@@Base+0x515c>
   1aa0c:	ldr	r0, [sp, #32]
   1aa10:	mov	r2, #0
   1aa14:	str	r2, [r0]
   1aa18:	b	1ac44 <main@@Base+0x4bbc>
   1aa1c:	cmp	ip, #2
   1aa20:	mov	r7, r9
   1aa24:	blt	1b288 <main@@Base+0x5200>
   1aa28:	ldr	r2, [sp, #32]
   1aa2c:	mov	r1, r9
   1aa30:	ldrb	r0, [r1, #1]!
   1aa34:	ldr	r2, [r2]
   1aa38:	cmp	r2, #0
   1aa3c:	beq	1ac6c <main@@Base+0x4be4>
   1aa40:	cmp	r0, #33	; 0x21
   1aa44:	bcc	1aa54 <main@@Base+0x49cc>
   1aa48:	cmp	r0, #58	; 0x3a
   1aa4c:	mov	r7, r9
   1aa50:	bne	1b288 <main@@Base+0x5200>
   1aa54:	ldr	r0, [sp, #32]
   1aa58:	mov	r2, #0
   1aa5c:	str	r2, [r0]
   1aa60:	b	1ac7c <main@@Base+0x4bf4>
   1aa64:	cmp	r0, #34	; 0x22
   1aa68:	mov	r5, r9
   1aa6c:	bne	1ade0 <main@@Base+0x4d58>
   1aa70:	add	r1, r9, #6
   1aa74:	ldr	r4, [sp, #44]	; 0x2c
   1aa78:	sub	r0, r4, r1
   1aa7c:	cmp	r0, #2
   1aa80:	blt	1ab48 <main@@Base+0x4ac0>
   1aa84:	ldrb	r0, [r1]
   1aa88:	cmp	r0, #32
   1aa8c:	bls	1ab30 <main@@Base+0x4aa8>
   1aa90:	ldr	r4, [sp, #44]	; 0x2c
   1aa94:	mov	r5, r1
   1aa98:	b	1ab58 <main@@Base+0x4ad0>
   1aa9c:	cmp	r0, #34	; 0x22
   1aaa0:	mov	r7, r9
   1aaa4:	bne	1af24 <main@@Base+0x4e9c>
   1aaa8:	add	r1, r9, #6
   1aaac:	sub	r0, r5, r1
   1aab0:	cmp	r0, #2
   1aab4:	blt	1abc8 <main@@Base+0x4b40>
   1aab8:	ldrb	r0, [r1]
   1aabc:	cmp	r0, #32
   1aac0:	bls	1abb4 <main@@Base+0x4b2c>
   1aac4:	mov	r7, r1
   1aac8:	b	1abd8 <main@@Base+0x4b50>
   1aacc:	cmp	r0, #34	; 0x22
   1aad0:	mov	r1, r9
   1aad4:	bne	1b100 <main@@Base+0x5078>
   1aad8:	add	r2, r9, #6
   1aadc:	sub	r0, r5, r2
   1aae0:	cmp	r0, #2
   1aae4:	blt	1acb8 <main@@Base+0x4c30>
   1aae8:	ldrb	r0, [r2]
   1aaec:	cmp	r0, #32
   1aaf0:	bls	1aca4 <main@@Base+0x4c1c>
   1aaf4:	mov	r1, r2
   1aaf8:	b	1accc <main@@Base+0x4c44>
   1aafc:	cmp	r0, #34	; 0x22
   1ab00:	mov	r7, r9
   1ab04:	bne	1b148 <main@@Base+0x50c0>
   1ab08:	add	r1, r9, #2
   1ab0c:	sub	r0, r5, r1
   1ab10:	cmp	r0, #2
   1ab14:	blt	1ad3c <main@@Base+0x4cb4>
   1ab18:	ldrb	r0, [r1]
   1ab1c:	cmp	r0, #32
   1ab20:	bls	1ad24 <main@@Base+0x4c9c>
   1ab24:	ldr	r5, [sp, #44]	; 0x2c
   1ab28:	mov	r7, r1
   1ab2c:	b	1ad4c <main@@Base+0x4cc4>
   1ab30:	ldr	r4, [sp, #44]	; 0x2c
   1ab34:	bne	1ab48 <main@@Base+0x4ac0>
   1ab38:	mov	r5, r1
   1ab3c:	ldrb	r0, [r5, #1]!
   1ab40:	cmp	r0, #32
   1ab44:	bhi	1ab58 <main@@Base+0x4ad0>
   1ab48:	mov	r0, r8
   1ab4c:	mov	r2, r4
   1ab50:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ab54:	mov	r5, r0
   1ab58:	cmp	r5, r4
   1ab5c:	beq	1ab9c <main@@Base+0x4b14>
   1ab60:	ldrb	r0, [r5]
   1ab64:	cmp	r0, #58	; 0x3a
   1ab68:	bne	1ab9c <main@@Base+0x4b14>
   1ab6c:	ldr	r0, [sp, #44]	; 0x2c
   1ab70:	add	r1, r5, #1
   1ab74:	sub	r0, r0, r1
   1ab78:	cmp	r0, #2
   1ab7c:	blt	1add0 <main@@Base+0x4d48>
   1ab80:	ldrb	r0, [r1]
   1ab84:	cmp	r0, #32
   1ab88:	bls	1adb8 <main@@Base+0x4d30>
   1ab8c:	ldr	r8, [sp, #36]	; 0x24
   1ab90:	ldr	sl, [sp, #40]	; 0x28
   1ab94:	mov	r5, r1
   1ab98:	b	1ade0 <main@@Base+0x4d58>
   1ab9c:	ldr	r2, [sp, #44]	; 0x2c
   1aba0:	mov	r0, r8
   1aba4:	mov	r1, r5
   1aba8:	mov	r3, #4
   1abac:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1abb0:	b	1addc <main@@Base+0x4d54>
   1abb4:	bne	1abc8 <main@@Base+0x4b40>
   1abb8:	mov	r7, r1
   1abbc:	ldrb	r0, [r7, #1]!
   1abc0:	cmp	r0, #32
   1abc4:	bhi	1abd8 <main@@Base+0x4b50>
   1abc8:	mov	r0, r8
   1abcc:	mov	r2, r5
   1abd0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1abd4:	mov	r7, r0
   1abd8:	cmp	r7, r5
   1abdc:	beq	1ac1c <main@@Base+0x4b94>
   1abe0:	ldrb	r0, [r7]
   1abe4:	cmp	r0, #58	; 0x3a
   1abe8:	bne	1ac1c <main@@Base+0x4b94>
   1abec:	add	r1, r7, #1
   1abf0:	sub	r0, r5, r1
   1abf4:	cmp	r0, #2
   1abf8:	blt	1af14 <main@@Base+0x4e8c>
   1abfc:	ldrb	r0, [r1]
   1ac00:	cmp	r0, #32
   1ac04:	bls	1aef8 <main@@Base+0x4e70>
   1ac08:	ldr	r5, [sp, #44]	; 0x2c
   1ac0c:	ldr	r8, [sp, #36]	; 0x24
   1ac10:	ldr	sl, [sp, #40]	; 0x28
   1ac14:	mov	r7, r1
   1ac18:	b	1af24 <main@@Base+0x4e9c>
   1ac1c:	mov	r0, r8
   1ac20:	mov	r1, r7
   1ac24:	mov	r2, r5
   1ac28:	mov	r3, #4
   1ac2c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1ac30:	b	1af20 <main@@Base+0x4e98>
   1ac34:	cmp	r0, #34	; 0x22
   1ac38:	mov	r7, r9
   1ac3c:	bne	1b1e4 <main@@Base+0x515c>
   1ac40:	add	r1, r9, #2
   1ac44:	ldr	r4, [sp, #44]	; 0x2c
   1ac48:	sub	r0, r4, r1
   1ac4c:	cmp	r0, #2
   1ac50:	blt	1afb0 <main@@Base+0x4f28>
   1ac54:	ldrb	r0, [r1]
   1ac58:	cmp	r0, #32
   1ac5c:	bls	1af98 <main@@Base+0x4f10>
   1ac60:	ldr	r4, [sp, #44]	; 0x2c
   1ac64:	mov	r7, r1
   1ac68:	b	1afc0 <main@@Base+0x4f38>
   1ac6c:	cmp	r0, #34	; 0x22
   1ac70:	mov	r7, r9
   1ac74:	bne	1b288 <main@@Base+0x5200>
   1ac78:	add	r1, r9, #2
   1ac7c:	ldr	r4, [sp, #44]	; 0x2c
   1ac80:	sub	r0, r4, r1
   1ac84:	cmp	r0, #2
   1ac88:	blt	1b04c <main@@Base+0x4fc4>
   1ac8c:	ldrb	r0, [r1]
   1ac90:	cmp	r0, #32
   1ac94:	bls	1b034 <main@@Base+0x4fac>
   1ac98:	ldr	r4, [sp, #44]	; 0x2c
   1ac9c:	mov	r7, r1
   1aca0:	b	1b05c <main@@Base+0x4fd4>
   1aca4:	bne	1acb8 <main@@Base+0x4c30>
   1aca8:	mov	r1, r2
   1acac:	ldrb	r0, [r1, #1]!
   1acb0:	cmp	r0, #32
   1acb4:	bhi	1accc <main@@Base+0x4c44>
   1acb8:	mov	r1, r2
   1acbc:	mov	r0, r8
   1acc0:	mov	r2, r5
   1acc4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1acc8:	mov	r1, r0
   1accc:	cmp	r1, r5
   1acd0:	beq	1ad10 <main@@Base+0x4c88>
   1acd4:	ldrb	r0, [r1]
   1acd8:	cmp	r0, #58	; 0x3a
   1acdc:	bne	1ad10 <main@@Base+0x4c88>
   1ace0:	add	r2, r1, #1
   1ace4:	sub	r0, r5, r2
   1ace8:	cmp	r0, #2
   1acec:	blt	1b0ec <main@@Base+0x5064>
   1acf0:	ldrb	r0, [r2]
   1acf4:	cmp	r0, #32
   1acf8:	bls	1b0d0 <main@@Base+0x5048>
   1acfc:	ldr	r5, [sp, #44]	; 0x2c
   1ad00:	ldr	r8, [sp, #36]	; 0x24
   1ad04:	ldr	sl, [sp, #40]	; 0x28
   1ad08:	mov	r1, r2
   1ad0c:	b	1b100 <main@@Base+0x5078>
   1ad10:	mov	r0, r8
   1ad14:	mov	r2, r5
   1ad18:	mov	r3, #4
   1ad1c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1ad20:	b	1b0fc <main@@Base+0x5074>
   1ad24:	ldr	r5, [sp, #44]	; 0x2c
   1ad28:	bne	1ad3c <main@@Base+0x4cb4>
   1ad2c:	mov	r7, r1
   1ad30:	ldrb	r0, [r7, #1]!
   1ad34:	cmp	r0, #32
   1ad38:	bhi	1ad4c <main@@Base+0x4cc4>
   1ad3c:	ldr	r0, [sp, #36]	; 0x24
   1ad40:	mov	r2, r5
   1ad44:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ad48:	mov	r7, r0
   1ad4c:	cmp	r7, r5
   1ad50:	beq	1ad94 <main@@Base+0x4d0c>
   1ad54:	ldrb	r0, [r7]
   1ad58:	cmp	r0, #58	; 0x3a
   1ad5c:	bne	1ad94 <main@@Base+0x4d0c>
   1ad60:	ldr	r8, [sp, #36]	; 0x24
   1ad64:	ldr	sl, [sp, #40]	; 0x28
   1ad68:	add	r1, r7, #1
   1ad6c:	sub	r0, r5, r1
   1ad70:	cmp	r0, #2
   1ad74:	blt	1b138 <main@@Base+0x50b0>
   1ad78:	ldrb	r0, [r1]
   1ad7c:	cmp	r0, #32
   1ad80:	bls	1b11c <main@@Base+0x5094>
   1ad84:	ldr	r5, [sp, #44]	; 0x2c
   1ad88:	ldr	r8, [sp, #36]	; 0x24
   1ad8c:	mov	r7, r1
   1ad90:	b	1adb0 <main@@Base+0x4d28>
   1ad94:	ldr	r8, [sp, #36]	; 0x24
   1ad98:	mov	r1, r7
   1ad9c:	mov	r2, r5
   1ada0:	mov	r3, #4
   1ada4:	mov	r0, r8
   1ada8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1adac:	mov	r7, r0
   1adb0:	ldr	sl, [sp, #40]	; 0x28
   1adb4:	b	1b148 <main@@Base+0x50c0>
   1adb8:	ldr	r8, [sp, #36]	; 0x24
   1adbc:	ldr	sl, [sp, #40]	; 0x28
   1adc0:	bne	1add0 <main@@Base+0x4d48>
   1adc4:	ldrb	r0, [r5, #2]!
   1adc8:	cmp	r0, #32
   1adcc:	bhi	1ade0 <main@@Base+0x4d58>
   1add0:	ldr	r2, [sp, #44]	; 0x2c
   1add4:	mov	r0, r8
   1add8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1addc:	mov	r5, r0
   1ade0:	cmp	r9, r5
   1ade4:	beq	1ae5c <main@@Base+0x4dd4>
   1ade8:	ldr	r2, [sp, #44]	; 0x2c
   1adec:	mov	r4, #0
   1adf0:	str	r4, [fp, #-52]	; 0xffffffcc
   1adf4:	str	r4, [fp, #-56]	; 0xffffffc8
   1adf8:	strb	r4, [fp, #-60]	; 0xffffffc4
   1adfc:	str	r4, [sp, #56]	; 0x38
   1ae00:	cmp	r5, r2
   1ae04:	beq	1ae64 <main@@Base+0x4ddc>
   1ae08:	sub	r0, fp, #56	; 0x38
   1ae0c:	mov	r1, r5
   1ae10:	add	r3, sp, #56	; 0x38
   1ae14:	str	r0, [sp]
   1ae18:	mov	r0, r8
   1ae1c:	bl	352ec <flatcc_json_parser_integer@@Base>
   1ae20:	cmp	r0, r5
   1ae24:	beq	1ae6c <main@@Base+0x4de4>
   1ae28:	ldr	r3, [sp, #56]	; 0x38
   1ae2c:	mov	r1, r0
   1ae30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ae34:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ae38:	cmp	r3, #0
   1ae3c:	beq	1ae74 <main@@Base+0x4dec>
   1ae40:	subs	r3, r0, #129	; 0x81
   1ae44:	sbcs	r2, r2, #0
   1ae48:	bcc	1ae98 <main@@Base+0x4e10>
   1ae4c:	ldr	r2, [sp, #44]	; 0x2c
   1ae50:	mov	r0, r8
   1ae54:	mov	r3, #8
   1ae58:	b	1ae8c <main@@Base+0x4e04>
   1ae5c:	ldr	r5, [sp, #44]	; 0x2c
   1ae60:	b	1b300 <main@@Base+0x5278>
   1ae64:	mov	r1, r2
   1ae68:	b	1aea8 <main@@Base+0x4e20>
   1ae6c:	mov	r1, r5
   1ae70:	b	1aea8 <main@@Base+0x4e20>
   1ae74:	subs	r3, r0, #128	; 0x80
   1ae78:	sbcs	r2, r2, #0
   1ae7c:	bcc	1aea0 <main@@Base+0x4e18>
   1ae80:	ldr	r2, [sp, #44]	; 0x2c
   1ae84:	mov	r0, r8
   1ae88:	mov	r3, #7
   1ae8c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1ae90:	mov	r1, r0
   1ae94:	b	1aea8 <main@@Base+0x4e20>
   1ae98:	rsb	r4, r0, #0
   1ae9c:	b	1aea4 <main@@Base+0x4e1c>
   1aea0:	mov	r4, r0
   1aea4:	strb	r4, [fp, #-60]	; 0xffffffc4
   1aea8:	cmp	r5, r1
   1aeac:	bne	1aee8 <main@@Base+0x4e60>
   1aeb0:	ldr	r4, [sp, #44]	; 0x2c
   1aeb4:	movw	r3, #45448	; 0xb188
   1aeb8:	sub	r0, fp, #60	; 0x3c
   1aebc:	mov	r1, r5
   1aec0:	movt	r3, #5
   1aec4:	str	r0, [sp]
   1aec8:	mov	r0, r8
   1aecc:	mov	r2, r4
   1aed0:	bl	22790 <main@@Base+0xc708>
   1aed4:	mov	r1, r0
   1aed8:	cmp	r0, r5
   1aedc:	cmpne	r1, r4
   1aee0:	beq	1b3e8 <main@@Base+0x5360>
   1aee4:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   1aee8:	ldr	r0, [sp, #24]
   1aeec:	ldr	r5, [sp, #44]	; 0x2c
   1aef0:	strb	r4, [r0, #24]
   1aef4:	b	1b314 <main@@Base+0x528c>
   1aef8:	ldr	r5, [sp, #44]	; 0x2c
   1aefc:	ldr	r8, [sp, #36]	; 0x24
   1af00:	ldr	sl, [sp, #40]	; 0x28
   1af04:	bne	1af14 <main@@Base+0x4e8c>
   1af08:	ldrb	r0, [r7, #2]!
   1af0c:	cmp	r0, #32
   1af10:	bhi	1af24 <main@@Base+0x4e9c>
   1af14:	mov	r0, r8
   1af18:	mov	r2, r5
   1af1c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1af20:	mov	r7, r0
   1af24:	cmp	r9, r7
   1af28:	beq	1b300 <main@@Base+0x5278>
   1af2c:	mov	r0, #0
   1af30:	mov	r1, r7
   1af34:	mov	r2, r5
   1af38:	sub	r3, fp, #56	; 0x38
   1af3c:	str	r0, [fp, #-52]	; 0xffffffcc
   1af40:	str	r0, [fp, #-56]	; 0xffffffc8
   1af44:	mov	r0, r8
   1af48:	bl	3484c <flatcc_json_parser_double@@Base>
   1af4c:	mov	r1, r0
   1af50:	cmp	r7, r0
   1af54:	bne	1af88 <main@@Base+0x4f00>
   1af58:	movw	r3, #45464	; 0xb198
   1af5c:	sub	r0, fp, #56	; 0x38
   1af60:	mov	r1, r7
   1af64:	mov	r2, r5
   1af68:	movt	r3, #5
   1af6c:	str	r0, [sp]
   1af70:	mov	r0, r8
   1af74:	bl	2539c <main@@Base+0xf314>
   1af78:	mov	r1, r0
   1af7c:	cmp	r0, r7
   1af80:	cmpne	r1, r5
   1af84:	beq	1b3e8 <main@@Base+0x5360>
   1af88:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1af8c:	ldr	r0, [sp, #24]
   1af90:	vstr	d16, [r0, #16]
   1af94:	b	1b314 <main@@Base+0x528c>
   1af98:	ldr	r4, [sp, #44]	; 0x2c
   1af9c:	bne	1afb0 <main@@Base+0x4f28>
   1afa0:	mov	r7, r1
   1afa4:	ldrb	r0, [r7, #1]!
   1afa8:	cmp	r0, #32
   1afac:	bhi	1afc0 <main@@Base+0x4f38>
   1afb0:	ldr	r0, [sp, #36]	; 0x24
   1afb4:	mov	r2, r4
   1afb8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1afbc:	mov	r7, r0
   1afc0:	cmp	r7, r4
   1afc4:	beq	1b00c <main@@Base+0x4f84>
   1afc8:	ldrb	r0, [r7]
   1afcc:	cmp	r0, #58	; 0x3a
   1afd0:	bne	1b00c <main@@Base+0x4f84>
   1afd4:	ldr	r5, [sp, #44]	; 0x2c
   1afd8:	ldr	r8, [sp, #36]	; 0x24
   1afdc:	ldr	sl, [sp, #40]	; 0x28
   1afe0:	add	r1, r7, #1
   1afe4:	sub	r0, r5, r1
   1afe8:	cmp	r0, #2
   1afec:	blt	1b1d4 <main@@Base+0x514c>
   1aff0:	ldrb	r0, [r1]
   1aff4:	cmp	r0, #32
   1aff8:	bls	1b1b8 <main@@Base+0x5130>
   1affc:	ldr	r5, [sp, #44]	; 0x2c
   1b000:	ldr	r8, [sp, #36]	; 0x24
   1b004:	mov	r7, r1
   1b008:	b	1b02c <main@@Base+0x4fa4>
   1b00c:	ldr	r8, [sp, #36]	; 0x24
   1b010:	ldr	r5, [sp, #44]	; 0x2c
   1b014:	mov	r1, r7
   1b018:	mov	r3, #4
   1b01c:	mov	r0, r8
   1b020:	mov	r2, r5
   1b024:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b028:	mov	r7, r0
   1b02c:	ldr	sl, [sp, #40]	; 0x28
   1b030:	b	1b1e4 <main@@Base+0x515c>
   1b034:	ldr	r4, [sp, #44]	; 0x2c
   1b038:	bne	1b04c <main@@Base+0x4fc4>
   1b03c:	mov	r7, r1
   1b040:	ldrb	r0, [r7, #1]!
   1b044:	cmp	r0, #32
   1b048:	bhi	1b05c <main@@Base+0x4fd4>
   1b04c:	ldr	r0, [sp, #36]	; 0x24
   1b050:	mov	r2, r4
   1b054:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b058:	mov	r7, r0
   1b05c:	cmp	r7, r4
   1b060:	beq	1b0a8 <main@@Base+0x5020>
   1b064:	ldrb	r0, [r7]
   1b068:	cmp	r0, #58	; 0x3a
   1b06c:	bne	1b0a8 <main@@Base+0x5020>
   1b070:	ldr	r5, [sp, #44]	; 0x2c
   1b074:	ldr	r8, [sp, #36]	; 0x24
   1b078:	ldr	sl, [sp, #40]	; 0x28
   1b07c:	add	r1, r7, #1
   1b080:	sub	r0, r5, r1
   1b084:	cmp	r0, #2
   1b088:	blt	1b278 <main@@Base+0x51f0>
   1b08c:	ldrb	r0, [r1]
   1b090:	cmp	r0, #32
   1b094:	bls	1b25c <main@@Base+0x51d4>
   1b098:	ldr	r5, [sp, #44]	; 0x2c
   1b09c:	ldr	r8, [sp, #36]	; 0x24
   1b0a0:	mov	r7, r1
   1b0a4:	b	1b0c8 <main@@Base+0x5040>
   1b0a8:	ldr	r8, [sp, #36]	; 0x24
   1b0ac:	ldr	r5, [sp, #44]	; 0x2c
   1b0b0:	mov	r1, r7
   1b0b4:	mov	r3, #4
   1b0b8:	mov	r0, r8
   1b0bc:	mov	r2, r5
   1b0c0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b0c4:	mov	r7, r0
   1b0c8:	ldr	sl, [sp, #40]	; 0x28
   1b0cc:	b	1b288 <main@@Base+0x5200>
   1b0d0:	ldr	r5, [sp, #44]	; 0x2c
   1b0d4:	ldr	r8, [sp, #36]	; 0x24
   1b0d8:	ldr	sl, [sp, #40]	; 0x28
   1b0dc:	bne	1b0ec <main@@Base+0x5064>
   1b0e0:	ldrb	r0, [r1, #2]!
   1b0e4:	cmp	r0, #32
   1b0e8:	bhi	1b100 <main@@Base+0x5078>
   1b0ec:	mov	r1, r2
   1b0f0:	mov	r0, r8
   1b0f4:	mov	r2, r5
   1b0f8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b0fc:	mov	r1, r0
   1b100:	cmp	r9, r1
   1b104:	beq	1b300 <main@@Base+0x5278>
   1b108:	ldr	r3, [sp, #20]
   1b10c:	mov	r0, r8
   1b110:	mov	r2, r5
   1b114:	bl	22d84 <main@@Base+0xccfc>
   1b118:	b	1b310 <main@@Base+0x5288>
   1b11c:	ldr	r5, [sp, #44]	; 0x2c
   1b120:	ldr	r8, [sp, #36]	; 0x24
   1b124:	ldr	sl, [sp, #40]	; 0x28
   1b128:	bne	1b138 <main@@Base+0x50b0>
   1b12c:	ldrb	r0, [r7, #2]!
   1b130:	cmp	r0, #32
   1b134:	bhi	1b148 <main@@Base+0x50c0>
   1b138:	mov	r0, r8
   1b13c:	mov	r2, r5
   1b140:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b144:	mov	r7, r0
   1b148:	cmp	r9, r7
   1b14c:	beq	1b300 <main@@Base+0x5278>
   1b150:	mov	r0, #0
   1b154:	mov	r1, r7
   1b158:	mov	r2, r5
   1b15c:	sub	r3, fp, #56	; 0x38
   1b160:	str	r0, [fp, #-56]	; 0xffffffc8
   1b164:	mov	r0, r8
   1b168:	bl	351a8 <flatcc_json_parser_float@@Base>
   1b16c:	mov	r1, r0
   1b170:	cmp	r7, r0
   1b174:	bne	1b1a8 <main@@Base+0x5120>
   1b178:	movw	r3, #45476	; 0xb1a4
   1b17c:	sub	r0, fp, #56	; 0x38
   1b180:	mov	r1, r7
   1b184:	mov	r2, r5
   1b188:	movt	r3, #5
   1b18c:	str	r0, [sp]
   1b190:	mov	r0, r8
   1b194:	bl	24a28 <main@@Base+0xe9a0>
   1b198:	mov	r1, r0
   1b19c:	cmp	r0, r7
   1b1a0:	cmpne	r1, r5
   1b1a4:	beq	1b3e8 <main@@Base+0x5360>
   1b1a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b1ac:	ldr	r2, [sp, #24]
   1b1b0:	str	r0, [r2]
   1b1b4:	b	1b314 <main@@Base+0x528c>
   1b1b8:	ldr	r5, [sp, #44]	; 0x2c
   1b1bc:	ldr	r8, [sp, #36]	; 0x24
   1b1c0:	ldr	sl, [sp, #40]	; 0x28
   1b1c4:	bne	1b1d4 <main@@Base+0x514c>
   1b1c8:	ldrb	r0, [r7, #2]!
   1b1cc:	cmp	r0, #32
   1b1d0:	bhi	1b1e4 <main@@Base+0x515c>
   1b1d4:	mov	r0, r8
   1b1d8:	mov	r2, r5
   1b1dc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b1e0:	mov	r7, r0
   1b1e4:	cmp	r9, r7
   1b1e8:	beq	1b300 <main@@Base+0x5278>
   1b1ec:	mov	r0, #0
   1b1f0:	mov	r1, r7
   1b1f4:	mov	r2, r5
   1b1f8:	sub	r3, fp, #56	; 0x38
   1b1fc:	str	r0, [fp, #-56]	; 0xffffffc8
   1b200:	mov	r0, r8
   1b204:	bl	351a8 <flatcc_json_parser_float@@Base>
   1b208:	mov	r1, r0
   1b20c:	cmp	r7, r0
   1b210:	bne	1b24c <main@@Base+0x51c4>
   1b214:	movw	r3, #45488	; 0xb1b0
   1b218:	sub	r0, fp, #56	; 0x38
   1b21c:	mov	r1, r7
   1b220:	mov	r2, r5
   1b224:	movt	r3, #5
   1b228:	str	r0, [sp]
   1b22c:	mov	r0, r8
   1b230:	bl	24a28 <main@@Base+0xe9a0>
   1b234:	mov	r1, r0
   1b238:	cmp	r0, r7
   1b23c:	cmpne	r1, r5
   1b240:	beq	1b3e8 <main@@Base+0x5360>
   1b244:	ldr	r8, [sp, #36]	; 0x24
   1b248:	ldr	sl, [sp, #40]	; 0x28
   1b24c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b250:	ldr	r2, [sp, #24]
   1b254:	str	r0, [r2, #8]
   1b258:	b	1b314 <main@@Base+0x528c>
   1b25c:	ldr	r5, [sp, #44]	; 0x2c
   1b260:	ldr	r8, [sp, #36]	; 0x24
   1b264:	ldr	sl, [sp, #40]	; 0x28
   1b268:	bne	1b278 <main@@Base+0x51f0>
   1b26c:	ldrb	r0, [r7, #2]!
   1b270:	cmp	r0, #32
   1b274:	bhi	1b288 <main@@Base+0x5200>
   1b278:	mov	r0, r8
   1b27c:	mov	r2, r5
   1b280:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b284:	mov	r7, r0
   1b288:	cmp	r9, r7
   1b28c:	beq	1b300 <main@@Base+0x5278>
   1b290:	mov	r0, #0
   1b294:	mov	r1, r7
   1b298:	mov	r2, r5
   1b29c:	sub	r3, fp, #56	; 0x38
   1b2a0:	str	r0, [fp, #-56]	; 0xffffffc8
   1b2a4:	mov	r0, r8
   1b2a8:	bl	351a8 <flatcc_json_parser_float@@Base>
   1b2ac:	mov	r1, r0
   1b2b0:	cmp	r7, r0
   1b2b4:	bne	1b2f0 <main@@Base+0x5268>
   1b2b8:	movw	r3, #45500	; 0xb1bc
   1b2bc:	sub	r0, fp, #56	; 0x38
   1b2c0:	mov	r1, r7
   1b2c4:	mov	r2, r5
   1b2c8:	movt	r3, #5
   1b2cc:	str	r0, [sp]
   1b2d0:	mov	r0, r8
   1b2d4:	bl	24a28 <main@@Base+0xe9a0>
   1b2d8:	mov	r1, r0
   1b2dc:	cmp	r0, r7
   1b2e0:	cmpne	r1, r5
   1b2e4:	beq	1b3e8 <main@@Base+0x5360>
   1b2e8:	ldr	r8, [sp, #36]	; 0x24
   1b2ec:	ldr	sl, [sp, #40]	; 0x28
   1b2f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b2f4:	ldr	r2, [sp, #24]
   1b2f8:	str	r0, [r2, #4]
   1b2fc:	b	1b314 <main@@Base+0x528c>
   1b300:	mov	r0, r8
   1b304:	mov	r1, r9
   1b308:	mov	r2, r5
   1b30c:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   1b310:	mov	r1, r0
   1b314:	sub	r0, r5, r1
   1b318:	cmp	r0, #2
   1b31c:	blt	1b348 <main@@Base+0x52c0>
   1b320:	ldrb	r0, [r1]
   1b324:	cmp	r0, #32
   1b328:	bls	1b334 <main@@Base+0x52ac>
   1b32c:	mov	r2, r1
   1b330:	b	1b358 <main@@Base+0x52d0>
   1b334:	bne	1b348 <main@@Base+0x52c0>
   1b338:	mov	r2, r1
   1b33c:	ldrb	r0, [r2, #1]!
   1b340:	cmp	r0, #32
   1b344:	bhi	1b358 <main@@Base+0x52d0>
   1b348:	mov	r0, r8
   1b34c:	mov	r2, r5
   1b350:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b354:	mov	r2, r0
   1b358:	cmp	r2, r5
   1b35c:	beq	1b404 <main@@Base+0x537c>
   1b360:	ldrb	r0, [r2]
   1b364:	cmp	r0, #44	; 0x2c
   1b368:	bne	1b40c <main@@Base+0x5384>
   1b36c:	add	r1, r2, #1
   1b370:	sub	r0, r5, r1
   1b374:	cmp	r0, #2
   1b378:	blt	1b3a0 <main@@Base+0x5318>
   1b37c:	ldrb	r0, [r1]
   1b380:	cmp	r0, #32
   1b384:	bls	1b390 <main@@Base+0x5308>
   1b388:	mov	r2, r1
   1b38c:	b	1b3b0 <main@@Base+0x5328>
   1b390:	bne	1b3a0 <main@@Base+0x5318>
   1b394:	ldrb	r0, [r2, #2]!
   1b398:	cmp	r0, #32
   1b39c:	bhi	1b3b0 <main@@Base+0x5328>
   1b3a0:	mov	r0, r8
   1b3a4:	mov	r2, r5
   1b3a8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b3ac:	mov	r2, r0
   1b3b0:	cmp	r2, r5
   1b3b4:	beq	1b440 <main@@Base+0x53b8>
   1b3b8:	ldrb	r0, [r2]
   1b3bc:	cmp	r0, #125	; 0x7d
   1b3c0:	bne	1a71c <main@@Base+0x4694>
   1b3c4:	add	r1, r2, #1
   1b3c8:	sub	r0, r5, r1
   1b3cc:	cmp	r0, #2
   1b3d0:	blt	1e330 <main@@Base+0x82a8>
   1b3d4:	ldrb	r0, [r1]
   1b3d8:	cmp	r0, #32
   1b3dc:	bls	1e31c <main@@Base+0x8294>
   1b3e0:	mov	r4, r1
   1b3e4:	b	1f824 <main@@Base+0x979c>
   1b3e8:	ldr	r8, [sp, #36]	; 0x24
   1b3ec:	ldr	r5, [sp, #44]	; 0x2c
   1b3f0:	mov	r3, #33	; 0x21
   1b3f4:	mov	r0, r8
   1b3f8:	mov	r2, r5
   1b3fc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b400:	b	1a43c <main@@Base+0x43b4>
   1b404:	mov	r4, r5
   1b408:	b	1f824 <main@@Base+0x979c>
   1b40c:	cmp	r0, #125	; 0x7d
   1b410:	bne	1beb0 <main@@Base+0x5e28>
   1b414:	add	r1, r2, #1
   1b418:	sub	r0, r5, r1
   1b41c:	cmp	r0, #2
   1b420:	blt	1e330 <main@@Base+0x82a8>
   1b424:	ldrb	r0, [r1]
   1b428:	cmp	r0, #32
   1b42c:	bls	1e310 <main@@Base+0x8288>
   1b430:	ldr	r5, [sp, #44]	; 0x2c
   1b434:	ldr	r8, [sp, #36]	; 0x24
   1b438:	mov	r4, r1
   1b43c:	b	1a440 <main@@Base+0x43b8>
   1b440:	mov	r0, r8
   1b444:	mov	r1, r5
   1b448:	b	1beb8 <main@@Base+0x5e30>
   1b44c:	bne	1b45c <main@@Base+0x53d4>
   1b450:	ldrb	r0, [r7, #2]!
   1b454:	cmp	r0, #32
   1b458:	bhi	1b46c <main@@Base+0x53e4>
   1b45c:	mov	r0, r8
   1b460:	mov	r2, r5
   1b464:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b468:	mov	r7, r0
   1b46c:	cmp	r9, r7
   1b470:	beq	19eb8 <main@@Base+0x3e30>
   1b474:	mov	r0, #0
   1b478:	mov	r1, r7
   1b47c:	mov	r2, r5
   1b480:	sub	r3, fp, #56	; 0x38
   1b484:	str	r0, [fp, #-56]	; 0xffffffc8
   1b488:	mov	r0, r8
   1b48c:	bl	351a8 <flatcc_json_parser_float@@Base>
   1b490:	mov	r4, r0
   1b494:	cmp	r7, r0
   1b498:	bne	1b4cc <main@@Base+0x5444>
   1b49c:	movw	r3, #45280	; 0xb0e0
   1b4a0:	sub	r0, fp, #56	; 0x38
   1b4a4:	mov	r1, r7
   1b4a8:	mov	r2, r5
   1b4ac:	movt	r3, #5
   1b4b0:	str	r0, [sp]
   1b4b4:	mov	r0, r8
   1b4b8:	bl	24a28 <main@@Base+0xe9a0>
   1b4bc:	mov	r4, r0
   1b4c0:	cmp	r0, r7
   1b4c4:	cmpne	r4, r5
   1b4c8:	beq	16fbc <main@@Base+0xf34>
   1b4cc:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1b4d0:	vcmp.f32	s0, s16
   1b4d4:	vmrs	APSR_nzcv, fpscr
   1b4d8:	bne	1b4e8 <main@@Base+0x5460>
   1b4dc:	ldrb	r0, [r8, #8]
   1b4e0:	tst	r0, #2
   1b4e4:	beq	1f824 <main@@Base+0x979c>
   1b4e8:	ldr	r0, [r8]
   1b4ec:	mov	r1, #26
   1b4f0:	b	18df0 <main@@Base+0x2d68>
   1b4f4:	bne	1b508 <main@@Base+0x5480>
   1b4f8:	mov	r4, r1
   1b4fc:	ldrb	r0, [r4, #1]!
   1b500:	cmp	r0, #32
   1b504:	bhi	1b518 <main@@Base+0x5490>
   1b508:	mov	r0, r8
   1b50c:	mov	r2, r5
   1b510:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b514:	mov	r4, r0
   1b518:	cmp	r4, r5
   1b51c:	beq	1b55c <main@@Base+0x54d4>
   1b520:	ldrb	r0, [r4]
   1b524:	cmp	r0, #58	; 0x3a
   1b528:	bne	1b55c <main@@Base+0x54d4>
   1b52c:	add	r1, r4, #1
   1b530:	sub	r0, r5, r1
   1b534:	cmp	r0, #2
   1b538:	blt	1d1d4 <main@@Base+0x714c>
   1b53c:	ldrb	r0, [r1]
   1b540:	cmp	r0, #32
   1b544:	bls	1d1b8 <main@@Base+0x7130>
   1b548:	ldr	r5, [sp, #44]	; 0x2c
   1b54c:	ldr	r8, [sp, #36]	; 0x24
   1b550:	ldr	sl, [sp, #40]	; 0x28
   1b554:	mov	r4, r1
   1b558:	b	1d1e4 <main@@Base+0x715c>
   1b55c:	mov	r0, r8
   1b560:	mov	r1, r4
   1b564:	mov	r2, r5
   1b568:	mov	r3, #4
   1b56c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b570:	b	1d1e0 <main@@Base+0x7158>
   1b574:	bne	1b588 <main@@Base+0x5500>
   1b578:	mov	r7, r1
   1b57c:	ldrb	r0, [r7, #1]!
   1b580:	cmp	r0, #32
   1b584:	bhi	1b598 <main@@Base+0x5510>
   1b588:	mov	r0, r8
   1b58c:	mov	r2, r5
   1b590:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b594:	mov	r7, r0
   1b598:	cmp	r7, r5
   1b59c:	beq	1b5d8 <main@@Base+0x5550>
   1b5a0:	ldrb	r0, [r7]
   1b5a4:	cmp	r0, #58	; 0x3a
   1b5a8:	bne	1b5d8 <main@@Base+0x5550>
   1b5ac:	add	r1, r7, #1
   1b5b0:	sub	r0, r5, r1
   1b5b4:	cmp	r0, #2
   1b5b8:	blt	1d28c <main@@Base+0x7204>
   1b5bc:	ldrb	r0, [r1]
   1b5c0:	cmp	r0, #32
   1b5c4:	bls	1d274 <main@@Base+0x71ec>
   1b5c8:	ldr	r5, [sp, #44]	; 0x2c
   1b5cc:	ldr	r8, [sp, #36]	; 0x24
   1b5d0:	mov	r7, r1
   1b5d4:	b	1d29c <main@@Base+0x7214>
   1b5d8:	mov	r0, r8
   1b5dc:	mov	r1, r7
   1b5e0:	mov	r2, r5
   1b5e4:	mov	r3, #4
   1b5e8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b5ec:	b	1d298 <main@@Base+0x7210>
   1b5f0:	bne	1b604 <main@@Base+0x557c>
   1b5f4:	mov	r7, r1
   1b5f8:	ldrb	r0, [r7, #1]!
   1b5fc:	cmp	r0, #32
   1b600:	bhi	1b614 <main@@Base+0x558c>
   1b604:	mov	r0, r8
   1b608:	mov	r2, r5
   1b60c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b610:	mov	r7, r0
   1b614:	cmp	r7, r5
   1b618:	beq	1b654 <main@@Base+0x55cc>
   1b61c:	ldrb	r0, [r7]
   1b620:	cmp	r0, #58	; 0x3a
   1b624:	bne	1b654 <main@@Base+0x55cc>
   1b628:	add	r1, r7, #1
   1b62c:	sub	r0, r5, r1
   1b630:	cmp	r0, #2
   1b634:	blt	1d45c <main@@Base+0x73d4>
   1b638:	ldrb	r0, [r1]
   1b63c:	cmp	r0, #32
   1b640:	bls	1d444 <main@@Base+0x73bc>
   1b644:	ldr	r5, [sp, #44]	; 0x2c
   1b648:	ldr	r8, [sp, #36]	; 0x24
   1b64c:	mov	r7, r1
   1b650:	b	1d46c <main@@Base+0x73e4>
   1b654:	mov	r0, r8
   1b658:	mov	r1, r7
   1b65c:	mov	r2, r5
   1b660:	mov	r3, #4
   1b664:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b668:	b	1d468 <main@@Base+0x73e0>
   1b66c:	mov	r0, r8
   1b670:	mov	r1, r4
   1b674:	mov	r2, r5
   1b678:	mov	r3, #9
   1b67c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b680:	b	19edc <main@@Base+0x3e54>
   1b684:	bne	1b694 <main@@Base+0x560c>
   1b688:	ldrb	r0, [r7, #2]!
   1b68c:	cmp	r0, #32
   1b690:	bhi	1b6a4 <main@@Base+0x561c>
   1b694:	mov	r0, r8
   1b698:	mov	r2, r5
   1b69c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b6a0:	mov	r7, r0
   1b6a4:	cmp	sl, r7
   1b6a8:	beq	1b72c <main@@Base+0x56a4>
   1b6ac:	mov	r6, #0
   1b6b0:	cmp	r7, r5
   1b6b4:	str	r6, [fp, #-52]	; 0xffffffcc
   1b6b8:	str	r6, [fp, #-56]	; 0xffffffc8
   1b6bc:	str	r6, [fp, #-60]	; 0xffffffc4
   1b6c0:	str	r6, [sp, #56]	; 0x38
   1b6c4:	beq	1b79c <main@@Base+0x5714>
   1b6c8:	sub	r0, fp, #56	; 0x38
   1b6cc:	mov	r1, r7
   1b6d0:	mov	r2, r5
   1b6d4:	add	r3, sp, #56	; 0x38
   1b6d8:	str	r0, [sp]
   1b6dc:	mov	r0, r8
   1b6e0:	bl	352ec <flatcc_json_parser_integer@@Base>
   1b6e4:	cmp	r0, r7
   1b6e8:	beq	1b7d4 <main@@Base+0x574c>
   1b6ec:	ldr	r2, [sp, #56]	; 0x38
   1b6f0:	mov	r4, r0
   1b6f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b6f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1b6fc:	cmp	r2, #0
   1b700:	beq	1b7e0 <main@@Base+0x5758>
   1b704:	ldr	sl, [sp, #40]	; 0x28
   1b708:	subs	r2, r0, #-2147483647	; 0x80000001
   1b70c:	sbcs	r1, r1, #0
   1b710:	bcc	1b80c <main@@Base+0x5784>
   1b714:	mov	r0, r8
   1b718:	mov	r1, r4
   1b71c:	mov	r2, r5
   1b720:	mov	r3, #8
   1b724:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b728:	b	1b804 <main@@Base+0x577c>
   1b72c:	add	r4, r9, #16
   1b730:	mov	r1, #8
   1b734:	sub	r0, r5, r4
   1b738:	cmp	r0, #8
   1b73c:	movcc	r1, r0
   1b740:	sub	r1, r1, #1
   1b744:	cmp	r1, #7
   1b748:	bhi	1d558 <main@@Base+0x74d0>
   1b74c:	ldrb	r1, [r4]
   1b750:	cmp	r1, #97	; 0x61
   1b754:	bne	1d558 <main@@Base+0x74d0>
   1b758:	ldr	sl, [sp, #40]	; 0x28
   1b75c:	cmp	r0, #2
   1b760:	blt	1f810 <main@@Base+0x9788>
   1b764:	ldr	r2, [sp, #32]
   1b768:	mov	r1, r9
   1b76c:	ldrb	r0, [r1, #17]!
   1b770:	ldr	r2, [r2]
   1b774:	cmp	r2, #0
   1b778:	beq	1b7a8 <main@@Base+0x5720>
   1b77c:	cmp	r0, #33	; 0x21
   1b780:	bcc	1b78c <main@@Base+0x5704>
   1b784:	cmp	r0, #58	; 0x3a
   1b788:	bne	1f810 <main@@Base+0x9788>
   1b78c:	ldr	r0, [sp, #32]
   1b790:	mov	r2, #0
   1b794:	str	r2, [r0]
   1b798:	b	1b7b4 <main@@Base+0x572c>
   1b79c:	ldr	sl, [sp, #40]	; 0x28
   1b7a0:	mov	r4, r5
   1b7a4:	b	1c030 <main@@Base+0x5fa8>
   1b7a8:	cmp	r0, #34	; 0x22
   1b7ac:	bne	1f810 <main@@Base+0x9788>
   1b7b0:	add	r1, r9, #18
   1b7b4:	sub	r0, r5, r1
   1b7b8:	cmp	r0, #2
   1b7bc:	blt	1bd58 <main@@Base+0x5cd0>
   1b7c0:	ldrb	r0, [r1]
   1b7c4:	cmp	r0, #32
   1b7c8:	bls	1bd44 <main@@Base+0x5cbc>
   1b7cc:	mov	r7, r1
   1b7d0:	b	1bd68 <main@@Base+0x5ce0>
   1b7d4:	ldr	sl, [sp, #40]	; 0x28
   1b7d8:	mov	r4, r7
   1b7dc:	b	1c030 <main@@Base+0x5fa8>
   1b7e0:	subs	r2, r0, #-2147483648	; 0x80000000
   1b7e4:	sbcs	r1, r1, #0
   1b7e8:	bcc	1c024 <main@@Base+0x5f9c>
   1b7ec:	mov	r0, r8
   1b7f0:	mov	r1, r4
   1b7f4:	mov	r2, r5
   1b7f8:	mov	r3, #7
   1b7fc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b800:	ldr	sl, [sp, #40]	; 0x28
   1b804:	mov	r4, r0
   1b808:	b	1c030 <main@@Base+0x5fa8>
   1b80c:	rsb	r6, r0, #0
   1b810:	b	1c02c <main@@Base+0x5fa4>
   1b814:	bne	1b828 <main@@Base+0x57a0>
   1b818:	mov	r4, r1
   1b81c:	ldrb	r0, [r4, #1]!
   1b820:	cmp	r0, #32
   1b824:	bhi	1b838 <main@@Base+0x57b0>
   1b828:	mov	r0, r8
   1b82c:	mov	r2, r5
   1b830:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b834:	mov	r4, r0
   1b838:	cmp	r4, r5
   1b83c:	beq	1b87c <main@@Base+0x57f4>
   1b840:	ldrb	r0, [r4]
   1b844:	cmp	r0, #58	; 0x3a
   1b848:	bne	1b87c <main@@Base+0x57f4>
   1b84c:	add	r1, r4, #1
   1b850:	sub	r0, r5, r1
   1b854:	cmp	r0, #2
   1b858:	blt	1d690 <main@@Base+0x7608>
   1b85c:	ldrb	r0, [r1]
   1b860:	cmp	r0, #32
   1b864:	bls	1d674 <main@@Base+0x75ec>
   1b868:	ldr	r5, [sp, #44]	; 0x2c
   1b86c:	ldr	r8, [sp, #36]	; 0x24
   1b870:	ldr	sl, [sp, #40]	; 0x28
   1b874:	mov	r4, r1
   1b878:	b	1d6a0 <main@@Base+0x7618>
   1b87c:	mov	r0, r8
   1b880:	mov	r1, r4
   1b884:	mov	r2, r5
   1b888:	mov	r3, #4
   1b88c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b890:	b	1d69c <main@@Base+0x7614>
   1b894:	bne	1b8a8 <main@@Base+0x5820>
   1b898:	mov	r4, r1
   1b89c:	ldrb	r0, [r4, #1]!
   1b8a0:	cmp	r0, #32
   1b8a4:	bhi	1b8b8 <main@@Base+0x5830>
   1b8a8:	mov	r0, r8
   1b8ac:	mov	r2, r5
   1b8b0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b8b4:	mov	r4, r0
   1b8b8:	cmp	r4, r5
   1b8bc:	beq	1b8fc <main@@Base+0x5874>
   1b8c0:	ldrb	r0, [r4]
   1b8c4:	cmp	r0, #58	; 0x3a
   1b8c8:	bne	1b8fc <main@@Base+0x5874>
   1b8cc:	add	r1, r4, #1
   1b8d0:	sub	r0, r5, r1
   1b8d4:	cmp	r0, #2
   1b8d8:	blt	1d748 <main@@Base+0x76c0>
   1b8dc:	ldrb	r0, [r1]
   1b8e0:	cmp	r0, #32
   1b8e4:	bls	1d72c <main@@Base+0x76a4>
   1b8e8:	ldr	r5, [sp, #44]	; 0x2c
   1b8ec:	ldr	r8, [sp, #36]	; 0x24
   1b8f0:	ldr	sl, [sp, #40]	; 0x28
   1b8f4:	mov	r4, r1
   1b8f8:	b	1d758 <main@@Base+0x76d0>
   1b8fc:	mov	r0, r8
   1b900:	mov	r1, r4
   1b904:	mov	r2, r5
   1b908:	mov	r3, #4
   1b90c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b910:	b	1d754 <main@@Base+0x76cc>
   1b914:	bne	1b928 <main@@Base+0x58a0>
   1b918:	mov	r4, r1
   1b91c:	ldrb	r0, [r4, #1]!
   1b920:	cmp	r0, #32
   1b924:	bhi	1b938 <main@@Base+0x58b0>
   1b928:	mov	r0, r8
   1b92c:	mov	r2, r5
   1b930:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b934:	mov	r4, r0
   1b938:	cmp	r4, r5
   1b93c:	beq	1b97c <main@@Base+0x58f4>
   1b940:	ldrb	r0, [r4]
   1b944:	cmp	r0, #58	; 0x3a
   1b948:	bne	1b97c <main@@Base+0x58f4>
   1b94c:	add	r1, r4, #1
   1b950:	sub	r0, r5, r1
   1b954:	cmp	r0, #2
   1b958:	blt	1d820 <main@@Base+0x7798>
   1b95c:	ldrb	r0, [r1]
   1b960:	cmp	r0, #32
   1b964:	bls	1d804 <main@@Base+0x777c>
   1b968:	ldr	r5, [sp, #44]	; 0x2c
   1b96c:	ldr	r8, [sp, #36]	; 0x24
   1b970:	ldr	sl, [sp, #40]	; 0x28
   1b974:	mov	r4, r1
   1b978:	b	1d830 <main@@Base+0x77a8>
   1b97c:	mov	r0, r8
   1b980:	mov	r1, r4
   1b984:	mov	r2, r5
   1b988:	mov	r3, #4
   1b98c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1b990:	b	1d82c <main@@Base+0x77a4>
   1b994:	bne	1b9a4 <main@@Base+0x591c>
   1b998:	ldrb	r0, [r4, #2]!
   1b99c:	cmp	r0, #32
   1b9a0:	bhi	1b9b4 <main@@Base+0x592c>
   1b9a4:	mov	r0, r8
   1b9a8:	mov	r2, r5
   1b9ac:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1b9b0:	mov	r4, r0
   1b9b4:	cmp	r4, r5
   1b9b8:	mov	r6, r5
   1b9bc:	beq	1ba00 <main@@Base+0x5978>
   1b9c0:	ldrb	r0, [r4]
   1b9c4:	cmp	r0, #93	; 0x5d
   1b9c8:	bne	1b9fc <main@@Base+0x5974>
   1b9cc:	add	r1, r4, #1
   1b9d0:	sub	r0, r5, r1
   1b9d4:	cmp	r0, #2
   1b9d8:	blt	1d664 <main@@Base+0x75dc>
   1b9dc:	ldrb	r0, [r1]
   1b9e0:	cmp	r0, #32
   1b9e4:	bls	1d648 <main@@Base+0x75c0>
   1b9e8:	ldr	r5, [sp, #44]	; 0x2c
   1b9ec:	ldr	r8, [sp, #36]	; 0x24
   1b9f0:	ldr	sl, [sp, #40]	; 0x28
   1b9f4:	mov	r4, r1
   1b9f8:	b	1a460 <main@@Base+0x43d8>
   1b9fc:	mov	r6, r4
   1ba00:	mov	r0, #0
   1ba04:	mov	r1, #1
   1ba08:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ba0c:	ldr	r0, [r8]
   1ba10:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1ba14:	cmp	r0, #0
   1ba18:	beq	20a34 <main@@Base+0xa9ac>
   1ba1c:	mov	r7, r0
   1ba20:	mov	r4, r6
   1ba24:	sub	r6, r5, r4
   1ba28:	cmp	r6, #4
   1ba2c:	blt	1ba70 <main@@Base+0x59e8>
   1ba30:	movw	r1, #27042	; 0x69a2
   1ba34:	mov	r0, r4
   1ba38:	mov	r2, #4
   1ba3c:	movt	r1, #4
   1ba40:	bl	14ebc <bcmp@plt>
   1ba44:	cmp	r0, #0
   1ba48:	beq	1bad4 <main@@Base+0x5a4c>
   1ba4c:	cmp	r6, #5
   1ba50:	blt	1ba70 <main@@Base+0x59e8>
   1ba54:	movw	r1, #27047	; 0x69a7
   1ba58:	mov	r0, r4
   1ba5c:	mov	r2, #5
   1ba60:	movt	r1, #4
   1ba64:	bl	14ebc <bcmp@plt>
   1ba68:	cmp	r0, #0
   1ba6c:	beq	1bc34 <main@@Base+0x5bac>
   1ba70:	mov	r6, #0
   1ba74:	cmp	r4, r5
   1ba78:	str	r6, [fp, #-52]	; 0xffffffcc
   1ba7c:	str	r6, [fp, #-56]	; 0xffffffc8
   1ba80:	str	r6, [sp, #56]	; 0x38
   1ba84:	beq	1bacc <main@@Base+0x5a44>
   1ba88:	sub	r0, fp, #56	; 0x38
   1ba8c:	mov	r1, r4
   1ba90:	mov	r2, r5
   1ba94:	add	r3, sp, #56	; 0x38
   1ba98:	str	r0, [sp]
   1ba9c:	mov	r0, r8
   1baa0:	bl	352ec <flatcc_json_parser_integer@@Base>
   1baa4:	cmp	r0, r4
   1baa8:	beq	1bae0 <main@@Base+0x5a58>
   1baac:	mov	r1, r0
   1bab0:	ldr	r0, [sp, #56]	; 0x38
   1bab4:	cmp	r0, #0
   1bab8:	beq	1bae8 <main@@Base+0x5a60>
   1babc:	mov	r0, r8
   1bac0:	mov	r2, r5
   1bac4:	mov	r3, #8
   1bac8:	b	1bb08 <main@@Base+0x5a80>
   1bacc:	mov	r1, r5
   1bad0:	b	1bb10 <main@@Base+0x5a88>
   1bad4:	mov	r0, #1
   1bad8:	add	r1, r4, #4
   1badc:	b	1bb1c <main@@Base+0x5a94>
   1bae0:	mov	r1, r4
   1bae4:	b	1bb10 <main@@Base+0x5a88>
   1bae8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1baec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1baf0:	subs	r3, r0, #256	; 0x100
   1baf4:	sbcs	r2, r2, #0
   1baf8:	bcc	1bc40 <main@@Base+0x5bb8>
   1bafc:	mov	r0, r8
   1bb00:	mov	r2, r5
   1bb04:	mov	r3, #7
   1bb08:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1bb0c:	mov	r1, r0
   1bb10:	uxtb	r0, r6
   1bb14:	cmp	r0, #0
   1bb18:	movwne	r0, #1
   1bb1c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1bb20:	cmp	r4, r1
   1bb24:	bne	1bb5c <main@@Base+0x5ad4>
   1bb28:	movw	r3, #45256	; 0xb0c8
   1bb2c:	sub	r0, fp, #60	; 0x3c
   1bb30:	mov	r1, r4
   1bb34:	mov	r2, r5
   1bb38:	movt	r3, #5
   1bb3c:	str	r0, [sp]
   1bb40:	mov	r0, r8
   1bb44:	bl	24858 <main@@Base+0xe7d0>
   1bb48:	mov	r1, r0
   1bb4c:	cmp	r0, r4
   1bb50:	cmpne	r1, r5
   1bb54:	beq	20a40 <main@@Base+0xa9b8>
   1bb58:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1bb5c:	strb	r0, [r7]
   1bb60:	sub	r0, r5, r1
   1bb64:	cmp	r0, #2
   1bb68:	blt	1bb94 <main@@Base+0x5b0c>
   1bb6c:	ldrb	r0, [r1]
   1bb70:	cmp	r0, #32
   1bb74:	bls	1bb80 <main@@Base+0x5af8>
   1bb78:	mov	r4, r1
   1bb7c:	b	1bba4 <main@@Base+0x5b1c>
   1bb80:	bne	1bb94 <main@@Base+0x5b0c>
   1bb84:	mov	r4, r1
   1bb88:	ldrb	r0, [r4, #1]!
   1bb8c:	cmp	r0, #32
   1bb90:	bhi	1bba4 <main@@Base+0x5b1c>
   1bb94:	mov	r0, r8
   1bb98:	mov	r2, r5
   1bb9c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1bba0:	mov	r4, r0
   1bba4:	cmp	r4, r5
   1bba8:	beq	1e040 <main@@Base+0x7fb8>
   1bbac:	ldrb	r0, [r4]
   1bbb0:	cmp	r0, #44	; 0x2c
   1bbb4:	bne	1e048 <main@@Base+0x7fc0>
   1bbb8:	add	r1, r4, #1
   1bbbc:	sub	r0, r5, r1
   1bbc0:	cmp	r0, #2
   1bbc4:	blt	1bbec <main@@Base+0x5b64>
   1bbc8:	ldrb	r0, [r1]
   1bbcc:	cmp	r0, #32
   1bbd0:	bls	1bbdc <main@@Base+0x5b54>
   1bbd4:	mov	r4, r1
   1bbd8:	b	1bbfc <main@@Base+0x5b74>
   1bbdc:	bne	1bbec <main@@Base+0x5b64>
   1bbe0:	ldrb	r0, [r4, #2]!
   1bbe4:	cmp	r0, #32
   1bbe8:	bhi	1bbfc <main@@Base+0x5b74>
   1bbec:	mov	r0, r8
   1bbf0:	mov	r2, r5
   1bbf4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1bbf8:	mov	r4, r0
   1bbfc:	cmp	r4, r5
   1bc00:	beq	1e2fc <main@@Base+0x8274>
   1bc04:	ldrb	r0, [r4]
   1bc08:	cmp	r0, #93	; 0x5d
   1bc0c:	beq	1b9cc <main@@Base+0x5944>
   1bc10:	mov	r0, #0
   1bc14:	mov	r1, #1
   1bc18:	strb	r0, [fp, #-60]	; 0xffffffc4
   1bc1c:	ldr	r0, [r8]
   1bc20:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1bc24:	mov	r7, r0
   1bc28:	cmp	r0, #0
   1bc2c:	bne	1ba24 <main@@Base+0x599c>
   1bc30:	b	16fbc <main@@Base+0xf34>
   1bc34:	mov	r0, #0
   1bc38:	add	r1, r4, #5
   1bc3c:	b	1bb1c <main@@Base+0x5a94>
   1bc40:	mov	r6, r0
   1bc44:	b	1bb10 <main@@Base+0x5a88>
   1bc48:	bne	1bc5c <main@@Base+0x5bd4>
   1bc4c:	mov	r4, r1
   1bc50:	ldrb	r0, [r4, #1]!
   1bc54:	cmp	r0, #32
   1bc58:	bhi	1bc6c <main@@Base+0x5be4>
   1bc5c:	mov	r0, r8
   1bc60:	mov	r2, r5
   1bc64:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1bc68:	mov	r4, r0
   1bc6c:	cmp	r4, r5
   1bc70:	beq	1bcac <main@@Base+0x5c24>
   1bc74:	ldrb	r0, [r4]
   1bc78:	cmp	r0, #58	; 0x3a
   1bc7c:	bne	1bcac <main@@Base+0x5c24>
   1bc80:	add	r1, r4, #1
   1bc84:	sub	r0, r5, r1
   1bc88:	cmp	r0, #2
   1bc8c:	blt	1d910 <main@@Base+0x7888>
   1bc90:	ldrb	r0, [r1]
   1bc94:	cmp	r0, #32
   1bc98:	bls	1d8f8 <main@@Base+0x7870>
   1bc9c:	ldr	r5, [sp, #44]	; 0x2c
   1bca0:	ldr	r8, [sp, #36]	; 0x24
   1bca4:	mov	r4, r1
   1bca8:	b	1d920 <main@@Base+0x7898>
   1bcac:	mov	r0, r8
   1bcb0:	mov	r1, r4
   1bcb4:	mov	r2, r5
   1bcb8:	mov	r3, #4
   1bcbc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1bcc0:	b	1d91c <main@@Base+0x7894>
   1bcc4:	bne	1bcd8 <main@@Base+0x5c50>
   1bcc8:	mov	r4, r1
   1bccc:	ldrb	r0, [r4, #1]!
   1bcd0:	cmp	r0, #32
   1bcd4:	bhi	1bce8 <main@@Base+0x5c60>
   1bcd8:	mov	r0, r8
   1bcdc:	mov	r2, r5
   1bce0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1bce4:	mov	r4, r0
   1bce8:	cmp	r4, r5
   1bcec:	beq	1bd2c <main@@Base+0x5ca4>
   1bcf0:	ldrb	r0, [r4]
   1bcf4:	cmp	r0, #58	; 0x3a
   1bcf8:	bne	1bd2c <main@@Base+0x5ca4>
   1bcfc:	add	r1, r4, #1
   1bd00:	sub	r0, r5, r1
   1bd04:	cmp	r0, #2
   1bd08:	blt	1dae8 <main@@Base+0x7a60>
   1bd0c:	ldrb	r0, [r1]
   1bd10:	cmp	r0, #32
   1bd14:	bls	1dacc <main@@Base+0x7a44>
   1bd18:	ldr	r5, [sp, #44]	; 0x2c
   1bd1c:	ldr	r8, [sp, #36]	; 0x24
   1bd20:	ldr	sl, [sp, #40]	; 0x28
   1bd24:	mov	r4, r1
   1bd28:	b	1daf8 <main@@Base+0x7a70>
   1bd2c:	mov	r0, r8
   1bd30:	mov	r1, r4
   1bd34:	mov	r2, r5
   1bd38:	mov	r3, #4
   1bd3c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1bd40:	b	1daf4 <main@@Base+0x7a6c>
   1bd44:	bne	1bd58 <main@@Base+0x5cd0>
   1bd48:	mov	r7, r1
   1bd4c:	ldrb	r0, [r7, #1]!
   1bd50:	cmp	r0, #32
   1bd54:	bhi	1bd68 <main@@Base+0x5ce0>
   1bd58:	mov	r0, r8
   1bd5c:	mov	r2, r5
   1bd60:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1bd64:	mov	r7, r0
   1bd68:	cmp	r7, r5
   1bd6c:	beq	1bdac <main@@Base+0x5d24>
   1bd70:	ldrb	r0, [r7]
   1bd74:	cmp	r0, #58	; 0x3a
   1bd78:	bne	1bdac <main@@Base+0x5d24>
   1bd7c:	add	r1, r7, #1
   1bd80:	sub	r0, r5, r1
   1bd84:	cmp	r0, #2
   1bd88:	blt	1dbe4 <main@@Base+0x7b5c>
   1bd8c:	ldrb	r0, [r1]
   1bd90:	cmp	r0, #32
   1bd94:	bls	1dbc8 <main@@Base+0x7b40>
   1bd98:	ldr	r5, [sp, #44]	; 0x2c
   1bd9c:	ldr	r8, [sp, #36]	; 0x24
   1bda0:	ldr	sl, [sp, #40]	; 0x28
   1bda4:	mov	r7, r1
   1bda8:	b	1dbf4 <main@@Base+0x7b6c>
   1bdac:	mov	r0, r8
   1bdb0:	mov	r1, r7
   1bdb4:	mov	r2, r5
   1bdb8:	mov	r3, #4
   1bdbc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1bdc0:	b	1dbf0 <main@@Base+0x7b68>
   1bdc4:	bne	1bdd4 <main@@Base+0x5d4c>
   1bdc8:	ldrb	r0, [r4, #2]!
   1bdcc:	cmp	r0, #32
   1bdd0:	bhi	1bde4 <main@@Base+0x5d5c>
   1bdd4:	mov	r0, r8
   1bdd8:	mov	r2, r5
   1bddc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1bde0:	mov	r4, r0
   1bde4:	cmp	r7, r4
   1bde8:	beq	1eddc <main@@Base+0x8d54>
   1bdec:	mov	r0, #0
   1bdf0:	mov	r1, #3
   1bdf4:	str	r0, [sp, #52]	; 0x34
   1bdf8:	ldr	r0, [r8]
   1bdfc:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   1be00:	cmp	r0, #0
   1be04:	bne	1be68 <main@@Base+0x5de0>
   1be08:	cmp	r4, r5
   1be0c:	beq	1be44 <main@@Base+0x5dbc>
   1be10:	ldrb	r0, [r4]
   1be14:	cmp	r0, #123	; 0x7b
   1be18:	bne	1be44 <main@@Base+0x5dbc>
   1be1c:	add	r1, r4, #1
   1be20:	sub	r0, r5, r1
   1be24:	cmp	r0, #2
   1be28:	blt	1e3a8 <main@@Base+0x8320>
   1be2c:	ldrb	r0, [r1]
   1be30:	cmp	r0, #32
   1be34:	bls	1e390 <main@@Base+0x8308>
   1be38:	ldr	r5, [sp, #44]	; 0x2c
   1be3c:	mov	r4, r1
   1be40:	b	1e3b8 <main@@Base+0x8330>
   1be44:	mov	r0, r8
   1be48:	mov	r1, r4
   1be4c:	mov	r2, r5
   1be50:	mov	r3, #21
   1be54:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1be58:	mov	r4, r0
   1be5c:	ldr	r0, [r8, #24]
   1be60:	cmp	r0, #0
   1be64:	beq	1be98 <main@@Base+0x5e10>
   1be68:	mov	r0, r8
   1be6c:	mov	r1, r4
   1be70:	mov	r2, r5
   1be74:	mov	r3, #33	; 0x21
   1be78:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1be7c:	mov	r4, r0
   1be80:	ldr	r0, [sp, #52]	; 0x34
   1be84:	cmp	r0, #0
   1be88:	beq	16fbc <main@@Base+0xf34>
   1be8c:	ldr	r0, [r8]
   1be90:	mov	r1, #35	; 0x23
   1be94:	b	196bc <main@@Base+0x3634>
   1be98:	ldr	r0, [r8]
   1be9c:	bl	2ff38 <flatcc_builder_end_table@@Base>
   1bea0:	cmp	r0, #0
   1bea4:	str	r0, [sp, #52]	; 0x34
   1bea8:	bne	1be8c <main@@Base+0x5e04>
   1beac:	b	1be68 <main@@Base+0x5de0>
   1beb0:	mov	r0, r8
   1beb4:	mov	r1, r2
   1beb8:	mov	r2, r5
   1bebc:	mov	r3, #10
   1bec0:	b	1a6a4 <main@@Base+0x461c>
   1bec4:	bne	1bed4 <main@@Base+0x5e4c>
   1bec8:	ldrb	r0, [r4, #2]!
   1becc:	cmp	r0, #32
   1bed0:	bhi	1bee4 <main@@Base+0x5e5c>
   1bed4:	mov	r0, r8
   1bed8:	mov	r2, r5
   1bedc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1bee0:	mov	r4, r0
   1bee4:	cmp	r7, r4
   1bee8:	beq	1eddc <main@@Base+0x8d54>
   1beec:	ldr	r0, [r8]
   1bef0:	bl	2f298 <flatcc_builder_start_offset_vector@@Base>
   1bef4:	cmp	r0, #0
   1bef8:	bne	16fbc <main@@Base+0xf34>
   1befc:	cmp	r4, r5
   1bf00:	beq	1bf34 <main@@Base+0x5eac>
   1bf04:	ldrb	r0, [r4]
   1bf08:	cmp	r0, #91	; 0x5b
   1bf0c:	bne	1bf34 <main@@Base+0x5eac>
   1bf10:	add	r1, r4, #1
   1bf14:	sub	r0, r5, r1
   1bf18:	cmp	r0, #2
   1bf1c:	blt	1c698 <main@@Base+0x6610>
   1bf20:	ldrb	r0, [r1]
   1bf24:	cmp	r0, #32
   1bf28:	bls	1c688 <main@@Base+0x6600>
   1bf2c:	mov	r4, r1
   1bf30:	b	1c6a8 <main@@Base+0x6620>
   1bf34:	mov	r0, r8
   1bf38:	mov	r1, r4
   1bf3c:	mov	r2, r5
   1bf40:	mov	r3, #22
   1bf44:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1bf48:	mov	r4, r0
   1bf4c:	ldr	r0, [r8]
   1bf50:	bl	2f364 <flatcc_builder_end_offset_vector@@Base>
   1bf54:	cmp	r0, #0
   1bf58:	str	r0, [sp, #52]	; 0x34
   1bf5c:	beq	16fbc <main@@Base+0xf34>
   1bf60:	ldr	r0, [r8]
   1bf64:	mov	r1, #28
   1bf68:	b	196bc <main@@Base+0x3634>
   1bf6c:	bne	1bf7c <main@@Base+0x5ef4>
   1bf70:	ldrb	r0, [r7, #2]!
   1bf74:	cmp	r0, #32
   1bf78:	bhi	1bf8c <main@@Base+0x5f04>
   1bf7c:	mov	r0, r8
   1bf80:	mov	r2, r5
   1bf84:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1bf88:	mov	r7, r0
   1bf8c:	cmp	sl, r7
   1bf90:	beq	1a42c <main@@Base+0x43a4>
   1bf94:	ldr	r0, [r8]
   1bf98:	mov	r1, #8
   1bf9c:	mov	r2, #4
   1bfa0:	mvn	r3, #-536870912	; 0xe0000000
   1bfa4:	bl	2f20c <flatcc_builder_start_vector@@Base>
   1bfa8:	cmp	r0, #0
   1bfac:	bne	20a6c <main@@Base+0xa9e4>
   1bfb0:	ldr	sl, [sp, #40]	; 0x28
   1bfb4:	cmp	r7, r5
   1bfb8:	beq	1bfec <main@@Base+0x5f64>
   1bfbc:	ldrb	r0, [r7]
   1bfc0:	cmp	r0, #91	; 0x5b
   1bfc4:	bne	1bfec <main@@Base+0x5f64>
   1bfc8:	add	r1, r7, #1
   1bfcc:	sub	r0, r5, r1
   1bfd0:	cmp	r0, #2
   1bfd4:	blt	1c800 <main@@Base+0x6778>
   1bfd8:	ldrb	r0, [r1]
   1bfdc:	cmp	r0, #32
   1bfe0:	bls	1c7f0 <main@@Base+0x6768>
   1bfe4:	mov	r7, r1
   1bfe8:	b	1c810 <main@@Base+0x6788>
   1bfec:	mov	r0, r8
   1bff0:	mov	r1, r7
   1bff4:	mov	r2, r5
   1bff8:	mov	r3, #22
   1bffc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1c000:	mov	r7, r0
   1c004:	ldr	r0, [r8]
   1c008:	bl	30238 <flatcc_builder_end_vector@@Base>
   1c00c:	cmp	r0, #0
   1c010:	str	r0, [sp, #52]	; 0x34
   1c014:	beq	20a6c <main@@Base+0xa9e4>
   1c018:	ldr	r0, [r8]
   1c01c:	mov	r1, #29
   1c020:	b	19efc <main@@Base+0x3e74>
   1c024:	ldr	sl, [sp, #40]	; 0x28
   1c028:	mov	r6, r0
   1c02c:	str	r6, [fp, #-60]	; 0xffffffc4
   1c030:	cmp	r7, r4
   1c034:	bne	1c06c <main@@Base+0x5fe4>
   1c038:	movw	r3, #45316	; 0xb104
   1c03c:	sub	r0, fp, #60	; 0x3c
   1c040:	mov	r1, r7
   1c044:	mov	r2, r5
   1c048:	movt	r3, #5
   1c04c:	str	r0, [sp]
   1c050:	mov	r0, r8
   1c054:	bl	24bc4 <main@@Base+0xeb3c>
   1c058:	mov	r4, r0
   1c05c:	cmp	r0, r7
   1c060:	cmpne	r4, r5
   1c064:	beq	20a80 <main@@Base+0xa9f8>
   1c068:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1c06c:	cmp	r6, #0
   1c070:	bne	1c080 <main@@Base+0x5ff8>
   1c074:	ldrb	r0, [r8, #8]
   1c078:	tst	r0, #2
   1c07c:	beq	1f824 <main@@Base+0x979c>
   1c080:	ldr	r0, [r8]
   1c084:	mov	r1, #16
   1c088:	b	1eeb8 <main@@Base+0x8e30>
   1c08c:	bne	1c09c <main@@Base+0x6014>
   1c090:	ldrb	r0, [r7, #2]!
   1c094:	cmp	r0, #32
   1c098:	bhi	1c0ac <main@@Base+0x6024>
   1c09c:	mov	r0, r8
   1c0a0:	mov	r2, r5
   1c0a4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c0a8:	mov	r7, r0
   1c0ac:	ldr	sl, [sp, #40]	; 0x28
   1c0b0:	cmp	r9, r7
   1c0b4:	beq	19eb8 <main@@Base+0x3e30>
   1c0b8:	mov	r6, #0
   1c0bc:	cmp	r7, r5
   1c0c0:	str	r6, [fp, #-52]	; 0xffffffcc
   1c0c4:	str	r6, [fp, #-56]	; 0xffffffc8
   1c0c8:	strh	r6, [fp, #-60]	; 0xffffffc4
   1c0cc:	str	r6, [sp, #56]	; 0x38
   1c0d0:	beq	1c134 <main@@Base+0x60ac>
   1c0d4:	sub	r0, fp, #56	; 0x38
   1c0d8:	mov	r1, r7
   1c0dc:	mov	r2, r5
   1c0e0:	add	r3, sp, #56	; 0x38
   1c0e4:	str	r0, [sp]
   1c0e8:	mov	r0, r8
   1c0ec:	bl	352ec <flatcc_json_parser_integer@@Base>
   1c0f0:	cmp	r0, r7
   1c0f4:	beq	1c13c <main@@Base+0x60b4>
   1c0f8:	ldr	r2, [sp, #56]	; 0x38
   1c0fc:	mov	r4, r0
   1c100:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c104:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c108:	cmp	r2, #0
   1c10c:	beq	1c144 <main@@Base+0x60bc>
   1c110:	movw	r2, #32769	; 0x8001
   1c114:	subs	r2, r0, r2
   1c118:	sbcs	r1, r1, #0
   1c11c:	bcc	1c16c <main@@Base+0x60e4>
   1c120:	mov	r0, r8
   1c124:	mov	r1, r4
   1c128:	mov	r2, r5
   1c12c:	mov	r3, #8
   1c130:	b	1c160 <main@@Base+0x60d8>
   1c134:	mov	r4, r5
   1c138:	b	1c17c <main@@Base+0x60f4>
   1c13c:	mov	r4, r7
   1c140:	b	1c17c <main@@Base+0x60f4>
   1c144:	subs	r2, r0, #32768	; 0x8000
   1c148:	sbcs	r1, r1, #0
   1c14c:	bcc	1c174 <main@@Base+0x60ec>
   1c150:	mov	r0, r8
   1c154:	mov	r1, r4
   1c158:	mov	r2, r5
   1c15c:	mov	r3, #7
   1c160:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1c164:	mov	r4, r0
   1c168:	b	1c17c <main@@Base+0x60f4>
   1c16c:	rsb	r6, r0, #0
   1c170:	b	1c178 <main@@Base+0x60f0>
   1c174:	mov	r6, r0
   1c178:	strh	r6, [fp, #-60]	; 0xffffffc4
   1c17c:	cmp	r7, r4
   1c180:	bne	1c1b8 <main@@Base+0x6130>
   1c184:	movw	r3, #45228	; 0xb0ac
   1c188:	sub	r0, fp, #60	; 0x3c
   1c18c:	mov	r1, r7
   1c190:	mov	r2, r5
   1c194:	movt	r3, #5
   1c198:	str	r0, [sp]
   1c19c:	mov	r0, r8
   1c1a0:	bl	22b80 <main@@Base+0xcaf8>
   1c1a4:	mov	r4, r0
   1c1a8:	cmp	r0, r7
   1c1ac:	cmpne	r4, r5
   1c1b0:	beq	20a80 <main@@Base+0xa9f8>
   1c1b4:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1c1b8:	uxth	r0, r6
   1c1bc:	cmp	r0, #150	; 0x96
   1c1c0:	bne	1c1d0 <main@@Base+0x6148>
   1c1c4:	ldrb	r0, [r8, #8]
   1c1c8:	tst	r0, #2
   1c1cc:	beq	1f824 <main@@Base+0x979c>
   1c1d0:	ldr	r0, [r8]
   1c1d4:	mov	r1, #1
   1c1d8:	mov	r2, #2
   1c1dc:	mov	r3, #2
   1c1e0:	bl	30824 <flatcc_builder_table_add@@Base>
   1c1e4:	cmp	r0, #0
   1c1e8:	beq	20a80 <main@@Base+0xa9f8>
   1c1ec:	strh	r6, [r0]
   1c1f0:	b	1f824 <main@@Base+0x979c>
   1c1f4:	bne	1c204 <main@@Base+0x617c>
   1c1f8:	ldrb	r0, [r7, #2]!
   1c1fc:	cmp	r0, #32
   1c200:	bhi	1c214 <main@@Base+0x618c>
   1c204:	mov	r0, r8
   1c208:	mov	r2, r5
   1c20c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c210:	mov	r7, r0
   1c214:	ldr	sl, [sp, #40]	; 0x28
   1c218:	cmp	r9, r7
   1c21c:	beq	19eb8 <main@@Base+0x3e30>
   1c220:	mov	r0, #0
   1c224:	mov	r1, r7
   1c228:	mov	r2, r5
   1c22c:	sub	r3, fp, #56	; 0x38
   1c230:	str	r0, [fp, #-56]	; 0xffffffc8
   1c234:	mov	r0, r8
   1c238:	bl	351a8 <flatcc_json_parser_float@@Base>
   1c23c:	mov	r4, r0
   1c240:	cmp	r7, r0
   1c244:	bne	1c278 <main@@Base+0x61f0>
   1c248:	movw	r3, #45292	; 0xb0ec
   1c24c:	sub	r0, fp, #56	; 0x38
   1c250:	mov	r1, r7
   1c254:	mov	r2, r5
   1c258:	movt	r3, #5
   1c25c:	str	r0, [sp]
   1c260:	mov	r0, r8
   1c264:	bl	24a28 <main@@Base+0xe9a0>
   1c268:	mov	r4, r0
   1c26c:	cmp	r0, r7
   1c270:	cmpne	r4, r5
   1c274:	beq	16fbc <main@@Base+0xf34>
   1c278:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1c27c:	vcmp.f32	s0, s18
   1c280:	vmrs	APSR_nzcv, fpscr
   1c284:	bne	1c294 <main@@Base+0x620c>
   1c288:	ldrb	r0, [r8, #8]
   1c28c:	tst	r0, #2
   1c290:	beq	1f824 <main@@Base+0x979c>
   1c294:	ldr	r0, [r8]
   1c298:	mov	r1, #25
   1c29c:	b	18df0 <main@@Base+0x2d68>
   1c2a0:	bne	1c2b0 <main@@Base+0x6228>
   1c2a4:	ldrb	r0, [r7, #2]!
   1c2a8:	cmp	r0, #32
   1c2ac:	bhi	1c2c0 <main@@Base+0x6238>
   1c2b0:	mov	r0, r8
   1c2b4:	mov	r2, r5
   1c2b8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c2bc:	mov	r7, r0
   1c2c0:	cmp	sl, r7
   1c2c4:	beq	1c340 <main@@Base+0x62b8>
   1c2c8:	mov	r6, #0
   1c2cc:	cmp	r7, r5
   1c2d0:	str	r6, [fp, #-52]	; 0xffffffcc
   1c2d4:	str	r6, [fp, #-56]	; 0xffffffc8
   1c2d8:	str	r6, [sp, #60]	; 0x3c
   1c2dc:	str	r6, [sp, #56]	; 0x38
   1c2e0:	str	r6, [fp, #-60]	; 0xffffffc4
   1c2e4:	beq	1c3b0 <main@@Base+0x6328>
   1c2e8:	sub	r0, fp, #56	; 0x38
   1c2ec:	mov	r1, r7
   1c2f0:	mov	r2, r5
   1c2f4:	sub	r3, fp, #60	; 0x3c
   1c2f8:	str	r0, [sp]
   1c2fc:	mov	r0, r8
   1c300:	bl	352ec <flatcc_json_parser_integer@@Base>
   1c304:	cmp	r0, r7
   1c308:	beq	1c3e8 <main@@Base+0x6360>
   1c30c:	sub	r9, fp, #60	; 0x3c
   1c310:	mov	r4, r0
   1c314:	ldm	r9, {r0, r6, r9}
   1c318:	cmp	r0, #0
   1c31c:	beq	1c3f8 <main@@Base+0x6370>
   1c320:	subs	r0, r6, #1
   1c324:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1c328:	bcc	1c424 <main@@Base+0x639c>
   1c32c:	mov	r0, r8
   1c330:	mov	r1, r4
   1c334:	mov	r2, r5
   1c338:	mov	r3, #8
   1c33c:	b	1c410 <main@@Base+0x6388>
   1c340:	add	r4, r9, #16
   1c344:	mov	r1, #8
   1c348:	sub	r0, r5, r4
   1c34c:	cmp	r0, #8
   1c350:	movcc	r1, r0
   1c354:	sub	r1, r1, #1
   1c358:	cmp	r1, #7
   1c35c:	bhi	1d558 <main@@Base+0x74d0>
   1c360:	ldrb	r1, [r4]
   1c364:	cmp	r1, #97	; 0x61
   1c368:	bne	1d558 <main@@Base+0x74d0>
   1c36c:	ldr	sl, [sp, #40]	; 0x28
   1c370:	cmp	r0, #2
   1c374:	blt	1f810 <main@@Base+0x9788>
   1c378:	ldr	r2, [sp, #32]
   1c37c:	mov	r1, r9
   1c380:	ldrb	r0, [r1, #17]!
   1c384:	ldr	r2, [r2]
   1c388:	cmp	r2, #0
   1c38c:	beq	1c3bc <main@@Base+0x6334>
   1c390:	cmp	r0, #33	; 0x21
   1c394:	bcc	1c3a0 <main@@Base+0x6318>
   1c398:	cmp	r0, #58	; 0x3a
   1c39c:	bne	1f810 <main@@Base+0x9788>
   1c3a0:	ldr	r0, [sp, #32]
   1c3a4:	mov	r2, #0
   1c3a8:	str	r2, [r0]
   1c3ac:	b	1c3c8 <main@@Base+0x6340>
   1c3b0:	mov	r9, #0
   1c3b4:	mov	r4, r5
   1c3b8:	b	1c434 <main@@Base+0x63ac>
   1c3bc:	cmp	r0, #34	; 0x22
   1c3c0:	bne	1f810 <main@@Base+0x9788>
   1c3c4:	add	r1, r9, #18
   1c3c8:	sub	r0, r5, r1
   1c3cc:	cmp	r0, #2
   1c3d0:	blt	1d14c <main@@Base+0x70c4>
   1c3d4:	ldrb	r0, [r1]
   1c3d8:	cmp	r0, #32
   1c3dc:	bls	1d138 <main@@Base+0x70b0>
   1c3e0:	mov	r7, r1
   1c3e4:	b	1d15c <main@@Base+0x70d4>
   1c3e8:	mov	r6, #0
   1c3ec:	mov	r9, #0
   1c3f0:	mov	r4, r7
   1c3f4:	b	1c434 <main@@Base+0x63ac>
   1c3f8:	cmn	r9, #1
   1c3fc:	bgt	1c42c <main@@Base+0x63a4>
   1c400:	mov	r0, r8
   1c404:	mov	r1, r4
   1c408:	mov	r2, r5
   1c40c:	mov	r3, #7
   1c410:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1c414:	mov	r4, r0
   1c418:	mov	r6, #0
   1c41c:	mov	r9, #0
   1c420:	b	1c434 <main@@Base+0x63ac>
   1c424:	rsbs	r6, r6, #0
   1c428:	rsc	r9, r9, #0
   1c42c:	str	r6, [sp, #56]	; 0x38
   1c430:	str	r9, [sp, #60]	; 0x3c
   1c434:	ldr	sl, [sp, #40]	; 0x28
   1c438:	cmp	r7, r4
   1c43c:	bne	1c478 <main@@Base+0x63f0>
   1c440:	movw	r3, #45340	; 0xb11c
   1c444:	add	r0, sp, #56	; 0x38
   1c448:	mov	r1, r7
   1c44c:	mov	r2, r5
   1c450:	movt	r3, #5
   1c454:	str	r0, [sp]
   1c458:	mov	r0, r8
   1c45c:	bl	24dc4 <main@@Base+0xed3c>
   1c460:	mov	r4, r0
   1c464:	cmp	r0, r7
   1c468:	cmpne	r4, r5
   1c46c:	beq	20a80 <main@@Base+0xa9f8>
   1c470:	ldr	r6, [sp, #56]	; 0x38
   1c474:	ldr	r9, [sp, #60]	; 0x3c
   1c478:	orrs	r0, r6, r9
   1c47c:	bne	1c48c <main@@Base+0x6404>
   1c480:	ldrb	r0, [r8, #8]
   1c484:	tst	r0, #2
   1c488:	beq	1f824 <main@@Base+0x979c>
   1c48c:	ldr	r0, [r8]
   1c490:	mov	r1, #18
   1c494:	b	1d62c <main@@Base+0x75a4>
   1c498:	bne	1c4a8 <main@@Base+0x6420>
   1c49c:	ldrb	r0, [r2, #2]!
   1c4a0:	cmp	r0, #32
   1c4a4:	bhi	1c4b8 <main@@Base+0x6430>
   1c4a8:	mov	r0, r8
   1c4ac:	mov	r2, r5
   1c4b0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c4b4:	mov	r2, r0
   1c4b8:	cmp	r4, r2
   1c4bc:	beq	1f810 <main@@Base+0x9788>
   1c4c0:	ldr	r0, [sp, #48]	; 0x30
   1c4c4:	mov	r1, #8
   1c4c8:	mov	r3, #0
   1c4cc:	str	r1, [sp]
   1c4d0:	mov	r1, r2
   1c4d4:	mov	r2, r5
   1c4d8:	str	r0, [sp, #4]
   1c4dc:	movw	r0, #45240	; 0xb0b8
   1c4e0:	movt	r0, #5
   1c4e4:	str	r0, [sp, #8]
   1c4e8:	movw	r0, #13436	; 0x347c
   1c4ec:	movt	r0, #2
   1c4f0:	str	r0, [sp, #12]
   1c4f4:	mov	r0, r8
   1c4f8:	bl	35c24 <flatcc_json_parser_union_type@@Base>
   1c4fc:	b	1f820 <main@@Base+0x9798>
   1c500:	bne	1c510 <main@@Base+0x6488>
   1c504:	ldrb	r0, [r4, #2]!
   1c508:	cmp	r0, #32
   1c50c:	bhi	1c520 <main@@Base+0x6498>
   1c510:	ldr	r0, [sp, #36]	; 0x24
   1c514:	mov	r2, r5
   1c518:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c51c:	mov	r4, r0
   1c520:	cmp	r8, r4
   1c524:	beq	1c584 <main@@Base+0x64fc>
   1c528:	ldr	r8, [sp, #36]	; 0x24
   1c52c:	mov	r0, #0
   1c530:	mov	r1, #0
   1c534:	str	r0, [sp, #52]	; 0x34
   1c538:	ldr	r0, [r8]
   1c53c:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   1c540:	cmp	r0, #0
   1c544:	bne	1c5bc <main@@Base+0x6534>
   1c548:	cmp	r4, r5
   1c54c:	beq	1c594 <main@@Base+0x650c>
   1c550:	ldrb	r0, [r4]
   1c554:	cmp	r0, #123	; 0x7b
   1c558:	bne	1c594 <main@@Base+0x650c>
   1c55c:	add	r1, r4, #1
   1c560:	sub	r0, r5, r1
   1c564:	cmp	r0, #2
   1c568:	blt	1efdc <main@@Base+0x8f54>
   1c56c:	ldrb	r0, [r1]
   1c570:	cmp	r0, #32
   1c574:	bls	1efc8 <main@@Base+0x8f40>
   1c578:	ldr	r5, [sp, #44]	; 0x2c
   1c57c:	mov	r4, r1
   1c580:	b	1efec <main@@Base+0x8f64>
   1c584:	ldr	r0, [sp, #36]	; 0x24
   1c588:	mov	r1, r8
   1c58c:	mov	r8, r0
   1c590:	b	1f818 <main@@Base+0x9790>
   1c594:	mov	r0, r8
   1c598:	mov	r1, r4
   1c59c:	mov	r2, r5
   1c5a0:	mov	r3, #21
   1c5a4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1c5a8:	mov	r4, r0
   1c5ac:	ldr	r0, [r8, #24]
   1c5b0:	cmp	r0, #0
   1c5b4:	beq	1c5ec <main@@Base+0x6564>
   1c5b8:	ldr	sl, [sp, #40]	; 0x28
   1c5bc:	mov	r0, r8
   1c5c0:	mov	r1, r4
   1c5c4:	mov	r2, r5
   1c5c8:	mov	r3, #33	; 0x21
   1c5cc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1c5d0:	mov	r4, r0
   1c5d4:	ldr	r0, [sp, #52]	; 0x34
   1c5d8:	cmp	r0, #0
   1c5dc:	beq	16fbc <main@@Base+0xf34>
   1c5e0:	ldr	r0, [r8]
   1c5e4:	mov	r1, #34	; 0x22
   1c5e8:	b	196bc <main@@Base+0x3634>
   1c5ec:	ldr	r0, [r8]
   1c5f0:	bl	2ff38 <flatcc_builder_end_table@@Base>
   1c5f4:	ldr	sl, [sp, #40]	; 0x28
   1c5f8:	cmp	r0, #0
   1c5fc:	str	r0, [sp, #52]	; 0x34
   1c600:	bne	1c5e0 <main@@Base+0x6558>
   1c604:	b	1c5bc <main@@Base+0x6534>
   1c608:	bne	1c61c <main@@Base+0x6594>
   1c60c:	mov	r9, r1
   1c610:	ldrb	r0, [r9, #1]!
   1c614:	cmp	r0, #32
   1c618:	bhi	1c62c <main@@Base+0x65a4>
   1c61c:	mov	r0, r8
   1c620:	mov	r2, r5
   1c624:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c628:	mov	r9, r0
   1c62c:	cmp	r9, r5
   1c630:	beq	1c670 <main@@Base+0x65e8>
   1c634:	ldrb	r0, [r9]
   1c638:	cmp	r0, #58	; 0x3a
   1c63c:	bne	1c670 <main@@Base+0x65e8>
   1c640:	add	r1, r9, #1
   1c644:	sub	r0, r5, r1
   1c648:	cmp	r0, #2
   1c64c:	blt	1ed70 <main@@Base+0x8ce8>
   1c650:	ldrb	r0, [r1]
   1c654:	cmp	r0, #32
   1c658:	bls	1ed54 <main@@Base+0x8ccc>
   1c65c:	ldr	r5, [sp, #44]	; 0x2c
   1c660:	ldr	r8, [sp, #36]	; 0x24
   1c664:	ldr	sl, [sp, #40]	; 0x28
   1c668:	mov	r9, r1
   1c66c:	b	1ed80 <main@@Base+0x8cf8>
   1c670:	mov	r0, r8
   1c674:	mov	r1, r9
   1c678:	mov	r2, r5
   1c67c:	mov	r3, #4
   1c680:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1c684:	b	1ed7c <main@@Base+0x8cf4>
   1c688:	bne	1c698 <main@@Base+0x6610>
   1c68c:	ldrb	r0, [r4, #2]!
   1c690:	cmp	r0, #32
   1c694:	bhi	1c6a8 <main@@Base+0x6620>
   1c698:	mov	r0, r8
   1c69c:	mov	r2, r5
   1c6a0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c6a4:	mov	r4, r0
   1c6a8:	cmp	r4, r5
   1c6ac:	mov	r2, r5
   1c6b0:	beq	1c6f8 <main@@Base+0x6670>
   1c6b4:	ldrb	r0, [r4]
   1c6b8:	cmp	r0, #93	; 0x5d
   1c6bc:	bne	1c6f4 <main@@Base+0x666c>
   1c6c0:	add	r1, r4, #1
   1c6c4:	sub	r0, r5, r1
   1c6c8:	cmp	r0, #2
   1c6cc:	blt	20560 <main@@Base+0xa4d8>
   1c6d0:	ldrb	r0, [r1]
   1c6d4:	cmp	r0, #32
   1c6d8:	bhi	1e370 <main@@Base+0x82e8>
   1c6dc:	ldr	r5, [sp, #44]	; 0x2c
   1c6e0:	ldr	r8, [sp, #36]	; 0x24
   1c6e4:	ldr	sl, [sp, #40]	; 0x28
   1c6e8:	bne	20560 <main@@Base+0xa4d8>
   1c6ec:	ldrb	r0, [r4, #2]!
   1c6f0:	b	20558 <main@@Base+0xa4d0>
   1c6f4:	mov	r2, r4
   1c6f8:	mov	r1, r2
   1c6fc:	mov	r0, r8
   1c700:	mov	r2, r5
   1c704:	add	r3, sp, #52	; 0x34
   1c708:	bl	35818 <flatcc_json_parser_build_string@@Base>
   1c70c:	mov	r4, r0
   1c710:	ldr	r0, [sp, #52]	; 0x34
   1c714:	cmp	r0, #0
   1c718:	beq	16fbc <main@@Base+0xf34>
   1c71c:	ldr	r0, [r8]
   1c720:	mov	r1, #1
   1c724:	bl	2ec6c <flatcc_builder_extend_offset_vector@@Base>
   1c728:	cmp	r0, #0
   1c72c:	beq	16fbc <main@@Base+0xf34>
   1c730:	ldr	r1, [sp, #52]	; 0x34
   1c734:	str	r1, [r0]
   1c738:	sub	r0, r5, r4
   1c73c:	cmp	r0, #2
   1c740:	blt	1c76c <main@@Base+0x66e4>
   1c744:	ldrb	r0, [r4]
   1c748:	cmp	r0, #32
   1c74c:	bls	1c758 <main@@Base+0x66d0>
   1c750:	mov	r2, r4
   1c754:	b	1c780 <main@@Base+0x66f8>
   1c758:	bne	1c76c <main@@Base+0x66e4>
   1c75c:	mov	r2, r4
   1c760:	ldrb	r0, [r2, #1]!
   1c764:	cmp	r0, #32
   1c768:	bhi	1c780 <main@@Base+0x66f8>
   1c76c:	mov	r0, r8
   1c770:	mov	r1, r4
   1c774:	mov	r2, r5
   1c778:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c77c:	mov	r2, r0
   1c780:	cmp	r2, r5
   1c784:	beq	1e2f0 <main@@Base+0x8268>
   1c788:	ldrb	r0, [r2]
   1c78c:	cmp	r0, #44	; 0x2c
   1c790:	bne	1e340 <main@@Base+0x82b8>
   1c794:	add	r1, r2, #1
   1c798:	sub	r0, r5, r1
   1c79c:	cmp	r0, #2
   1c7a0:	blt	1c7c8 <main@@Base+0x6740>
   1c7a4:	ldrb	r0, [r1]
   1c7a8:	cmp	r0, #32
   1c7ac:	bls	1c7b8 <main@@Base+0x6730>
   1c7b0:	mov	r2, r1
   1c7b4:	b	1c7d8 <main@@Base+0x6750>
   1c7b8:	bne	1c7c8 <main@@Base+0x6740>
   1c7bc:	ldrb	r0, [r2, #2]!
   1c7c0:	cmp	r0, #32
   1c7c4:	bhi	1c7d8 <main@@Base+0x6750>
   1c7c8:	mov	r0, r8
   1c7cc:	mov	r2, r5
   1c7d0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c7d4:	mov	r2, r0
   1c7d8:	cmp	r2, r5
   1c7dc:	beq	1e384 <main@@Base+0x82fc>
   1c7e0:	ldrb	r0, [r2]
   1c7e4:	cmp	r0, #93	; 0x5d
   1c7e8:	bne	1c6f8 <main@@Base+0x6670>
   1c7ec:	b	1e350 <main@@Base+0x82c8>
   1c7f0:	bne	1c800 <main@@Base+0x6778>
   1c7f4:	ldrb	r0, [r7, #2]!
   1c7f8:	cmp	r0, #32
   1c7fc:	bhi	1c810 <main@@Base+0x6788>
   1c800:	mov	r0, r8
   1c804:	mov	r2, r5
   1c808:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c80c:	mov	r7, r0
   1c810:	cmp	r7, r5
   1c814:	mov	r4, r5
   1c818:	beq	1c860 <main@@Base+0x67d8>
   1c81c:	ldrb	r0, [r7]
   1c820:	cmp	r0, #93	; 0x5d
   1c824:	bne	1c85c <main@@Base+0x67d4>
   1c828:	add	r1, r7, #1
   1c82c:	sub	r0, r5, r1
   1c830:	cmp	r0, #2
   1c834:	blt	205c0 <main@@Base+0xa538>
   1c838:	ldrb	r0, [r1]
   1c83c:	cmp	r0, #32
   1c840:	bhi	1dea8 <main@@Base+0x7e20>
   1c844:	ldr	r5, [sp, #44]	; 0x2c
   1c848:	ldr	r8, [sp, #36]	; 0x24
   1c84c:	ldr	sl, [sp, #40]	; 0x28
   1c850:	bne	205c0 <main@@Base+0xa538>
   1c854:	ldrb	r0, [r7, #2]!
   1c858:	b	205b8 <main@@Base+0xa530>
   1c85c:	mov	r4, r7
   1c860:	ldr	r0, [r8]
   1c864:	mov	r1, #1
   1c868:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1c86c:	mov	r9, r0
   1c870:	cmp	r0, #0
   1c874:	beq	16fbc <main@@Base+0xf34>
   1c878:	cmp	r4, r5
   1c87c:	beq	1c8b0 <main@@Base+0x6828>
   1c880:	ldrb	r0, [r4]
   1c884:	cmp	r0, #123	; 0x7b
   1c888:	bne	1c8b0 <main@@Base+0x6828>
   1c88c:	add	r1, r4, #1
   1c890:	sub	r0, r5, r1
   1c894:	cmp	r0, #2
   1c898:	blt	1c8dc <main@@Base+0x6854>
   1c89c:	ldrb	r0, [r1]
   1c8a0:	cmp	r0, #32
   1c8a4:	bls	1c8cc <main@@Base+0x6844>
   1c8a8:	mov	r4, r1
   1c8ac:	b	1c8ec <main@@Base+0x6864>
   1c8b0:	mov	r0, r8
   1c8b4:	mov	r1, r4
   1c8b8:	mov	r2, r5
   1c8bc:	mov	r3, #21
   1c8c0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1c8c4:	mov	r4, r0
   1c8c8:	b	1d04c <main@@Base+0x6fc4>
   1c8cc:	bne	1c8dc <main@@Base+0x6854>
   1c8d0:	ldrb	r0, [r4, #2]!
   1c8d4:	cmp	r0, #32
   1c8d8:	bhi	1c8ec <main@@Base+0x6864>
   1c8dc:	mov	r0, r8
   1c8e0:	mov	r2, r5
   1c8e4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1c8e8:	mov	r4, r0
   1c8ec:	cmp	r4, r5
   1c8f0:	mov	r2, r5
   1c8f4:	beq	1c93c <main@@Base+0x68b4>
   1c8f8:	ldrb	r0, [r4]
   1c8fc:	cmp	r0, #125	; 0x7d
   1c900:	bne	1c938 <main@@Base+0x68b0>
   1c904:	add	r1, r4, #1
   1c908:	sub	r0, r5, r1
   1c90c:	cmp	r0, #2
   1c910:	blt	1d128 <main@@Base+0x70a0>
   1c914:	ldrb	r0, [r1]
   1c918:	cmp	r0, #32
   1c91c:	bhi	1d00c <main@@Base+0x6f84>
   1c920:	ldr	r5, [sp, #44]	; 0x2c
   1c924:	ldr	r8, [sp, #36]	; 0x24
   1c928:	ldr	sl, [sp, #40]	; 0x28
   1c92c:	bne	1d128 <main@@Base+0x70a0>
   1c930:	ldrb	r0, [r4, #2]!
   1c934:	b	1d120 <main@@Base+0x7098>
   1c938:	mov	r2, r4
   1c93c:	cmp	r2, r5
   1c940:	mov	sl, r5
   1c944:	beq	1c998 <main@@Base+0x6910>
   1c948:	ldrb	r0, [r2]
   1c94c:	cmp	r0, #46	; 0x2e
   1c950:	beq	1c96c <main@@Base+0x68e4>
   1c954:	cmp	r0, #34	; 0x22
   1c958:	bne	1c988 <main@@Base+0x6900>
   1c95c:	ldr	r0, [sp, #32]
   1c960:	mov	r1, #0
   1c964:	add	sl, r2, #1
   1c968:	b	1c994 <main@@Base+0x690c>
   1c96c:	mov	r1, r2
   1c970:	mov	r0, r8
   1c974:	mov	r2, r5
   1c978:	mov	r3, #5
   1c97c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1c980:	mov	sl, r0
   1c984:	b	1c998 <main@@Base+0x6910>
   1c988:	ldr	r0, [sp, #32]
   1c98c:	mov	r1, #1
   1c990:	mov	sl, r2
   1c994:	str	r1, [r0]
   1c998:	sub	lr, r5, sl
   1c99c:	mov	r0, #8
   1c9a0:	cmp	lr, #8
   1c9a4:	movcc	r0, lr
   1c9a8:	sub	r7, r0, #1
   1c9ac:	cmp	r7, #7
   1c9b0:	bhi	1ce58 <main@@Base+0x6dd0>
   1c9b4:	add	r4, pc, #32
   1c9b8:	mov	r1, #0
   1c9bc:	mov	ip, #0
   1c9c0:	mov	r8, #0
   1c9c4:	mov	r6, #0
   1c9c8:	mov	r3, #0
   1c9cc:	mov	r5, #0
   1c9d0:	mov	r2, #0
   1c9d4:	mov	r0, #0
   1c9d8:	ldr	pc, [r4, r7, lsl #2]
   1c9dc:	andeq	ip, r1, r0, asr #20
   1c9e0:	andeq	ip, r1, r8, lsr sl
   1c9e4:	andeq	ip, r1, r0, lsr sl
   1c9e8:	andeq	ip, r1, r8, lsr #20
   1c9ec:	andeq	ip, r1, ip, lsl sl
   1c9f0:	andeq	ip, r1, r0, lsl sl
   1c9f4:	andeq	ip, r1, r0, lsl #20
   1c9f8:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c9fc:	ldrb	ip, [sl, #7]
   1ca00:	ldrb	r0, [sl, #6]
   1ca04:	mov	r8, r1
   1ca08:	orr	r0, ip, r0, lsl #8
   1ca0c:	mov	r1, r0
   1ca10:	ldrb	r0, [sl, #5]
   1ca14:	mov	r6, r8
   1ca18:	orr	r1, r1, r0, lsl #16
   1ca1c:	ldrb	r0, [sl, #4]
   1ca20:	mov	r3, r6
   1ca24:	orr	r1, r1, r0, lsl #24
   1ca28:	ldrb	r0, [sl, #3]
   1ca2c:	orr	r5, r0, r3
   1ca30:	ldrb	r0, [sl, #2]
   1ca34:	orr	r2, r5, r0, lsl #8
   1ca38:	ldrb	r0, [sl, #1]
   1ca3c:	orr	r0, r2, r0, lsl #16
   1ca40:	ldrb	r2, [sl]
   1ca44:	movw	r3, #0
   1ca48:	movt	r3, #26980	; 0x6964
   1ca4c:	orr	r0, r0, r2, lsl #24
   1ca50:	mov	r2, r0
   1ca54:	bfc	r2, #0, #16
   1ca58:	teq	r2, r3
   1ca5c:	bne	1cab0 <main@@Base+0x6a28>
   1ca60:	ldr	r5, [sp, #44]	; 0x2c
   1ca64:	ldr	r8, [sp, #36]	; 0x24
   1ca68:	cmp	lr, #3
   1ca6c:	mov	r7, sl
   1ca70:	blt	1cccc <main@@Base+0x6c44>
   1ca74:	ldr	r2, [sp, #32]
   1ca78:	mov	r1, sl
   1ca7c:	ldrb	r0, [r1, #2]!
   1ca80:	ldr	r2, [r2]
   1ca84:	cmp	r2, #0
   1ca88:	beq	1cb20 <main@@Base+0x6a98>
   1ca8c:	cmp	r0, #33	; 0x21
   1ca90:	bcc	1caa0 <main@@Base+0x6a18>
   1ca94:	cmp	r0, #58	; 0x3a
   1ca98:	mov	r7, sl
   1ca9c:	bne	1cccc <main@@Base+0x6c44>
   1caa0:	ldr	r0, [sp, #32]
   1caa4:	mov	r2, #0
   1caa8:	str	r2, [r0]
   1caac:	b	1cb30 <main@@Base+0x6aa8>
   1cab0:	movw	r2, #25445	; 0x6365
   1cab4:	ldr	r5, [sp, #44]	; 0x2c
   1cab8:	ldr	r8, [sp, #36]	; 0x24
   1cabc:	movt	r2, #24942	; 0x616e
   1cac0:	eor	r1, r1, r2
   1cac4:	movw	r2, #29556	; 0x7374
   1cac8:	movt	r2, #25705	; 0x6469
   1cacc:	eor	r0, r0, r2
   1cad0:	orrs	r0, r1, r0
   1cad4:	bne	1ce58 <main@@Base+0x6dd0>
   1cad8:	cmp	lr, #9
   1cadc:	mov	r7, sl
   1cae0:	blt	1cdf0 <main@@Base+0x6d68>
   1cae4:	ldr	r2, [sp, #32]
   1cae8:	mov	r1, sl
   1caec:	ldrb	r0, [r1, #8]!
   1caf0:	ldr	r2, [r2]
   1caf4:	cmp	r2, #0
   1caf8:	beq	1cb58 <main@@Base+0x6ad0>
   1cafc:	cmp	r0, #33	; 0x21
   1cb00:	bcc	1cb10 <main@@Base+0x6a88>
   1cb04:	cmp	r0, #58	; 0x3a
   1cb08:	mov	r7, sl
   1cb0c:	bne	1cdf0 <main@@Base+0x6d68>
   1cb10:	ldr	r0, [sp, #32]
   1cb14:	mov	r2, #0
   1cb18:	str	r2, [r0]
   1cb1c:	b	1cb68 <main@@Base+0x6ae0>
   1cb20:	cmp	r0, #34	; 0x22
   1cb24:	mov	r7, sl
   1cb28:	bne	1cccc <main@@Base+0x6c44>
   1cb2c:	add	r1, sl, #3
   1cb30:	sub	r0, r5, r1
   1cb34:	cmp	r0, #2
   1cb38:	blt	1cbac <main@@Base+0x6b24>
   1cb3c:	ldrb	r0, [r1]
   1cb40:	cmp	r0, #32
   1cb44:	bls	1cb90 <main@@Base+0x6b08>
   1cb48:	ldr	r5, [sp, #44]	; 0x2c
   1cb4c:	ldr	r8, [sp, #36]	; 0x24
   1cb50:	mov	r7, r1
   1cb54:	b	1cbbc <main@@Base+0x6b34>
   1cb58:	cmp	r0, #34	; 0x22
   1cb5c:	mov	r7, sl
   1cb60:	bne	1cdf0 <main@@Base+0x6d68>
   1cb64:	add	r1, sl, #9
   1cb68:	ldr	r4, [sp, #44]	; 0x2c
   1cb6c:	sub	r0, r4, r1
   1cb70:	cmp	r0, #2
   1cb74:	blt	1cc2c <main@@Base+0x6ba4>
   1cb78:	ldrb	r0, [r1]
   1cb7c:	cmp	r0, #32
   1cb80:	bls	1cc14 <main@@Base+0x6b8c>
   1cb84:	ldr	r4, [sp, #44]	; 0x2c
   1cb88:	mov	r7, r1
   1cb8c:	b	1cc3c <main@@Base+0x6bb4>
   1cb90:	ldr	r5, [sp, #44]	; 0x2c
   1cb94:	ldr	r8, [sp, #36]	; 0x24
   1cb98:	bne	1cbac <main@@Base+0x6b24>
   1cb9c:	mov	r7, r1
   1cba0:	ldrb	r0, [r7, #1]!
   1cba4:	cmp	r0, #32
   1cba8:	bhi	1cbbc <main@@Base+0x6b34>
   1cbac:	mov	r0, r8
   1cbb0:	mov	r2, r5
   1cbb4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1cbb8:	mov	r7, r0
   1cbbc:	cmp	r7, r5
   1cbc0:	beq	1cbfc <main@@Base+0x6b74>
   1cbc4:	ldrb	r0, [r7]
   1cbc8:	cmp	r0, #58	; 0x3a
   1cbcc:	bne	1cbfc <main@@Base+0x6b74>
   1cbd0:	add	r1, r7, #1
   1cbd4:	sub	r0, r5, r1
   1cbd8:	cmp	r0, #2
   1cbdc:	blt	1ccbc <main@@Base+0x6c34>
   1cbe0:	ldrb	r0, [r1]
   1cbe4:	cmp	r0, #32
   1cbe8:	bls	1cca4 <main@@Base+0x6c1c>
   1cbec:	ldr	r5, [sp, #44]	; 0x2c
   1cbf0:	ldr	r8, [sp, #36]	; 0x24
   1cbf4:	mov	r7, r1
   1cbf8:	b	1cccc <main@@Base+0x6c44>
   1cbfc:	mov	r0, r8
   1cc00:	mov	r1, r7
   1cc04:	mov	r2, r5
   1cc08:	mov	r3, #4
   1cc0c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1cc10:	b	1ccc8 <main@@Base+0x6c40>
   1cc14:	ldr	r4, [sp, #44]	; 0x2c
   1cc18:	bne	1cc2c <main@@Base+0x6ba4>
   1cc1c:	mov	r7, r1
   1cc20:	ldrb	r0, [r7, #1]!
   1cc24:	cmp	r0, #32
   1cc28:	bhi	1cc3c <main@@Base+0x6bb4>
   1cc2c:	ldr	r0, [sp, #36]	; 0x24
   1cc30:	mov	r2, r4
   1cc34:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1cc38:	mov	r7, r0
   1cc3c:	cmp	r7, r4
   1cc40:	beq	1cc84 <main@@Base+0x6bfc>
   1cc44:	ldrb	r0, [r7]
   1cc48:	cmp	r0, #58	; 0x3a
   1cc4c:	bne	1cc84 <main@@Base+0x6bfc>
   1cc50:	ldr	r5, [sp, #44]	; 0x2c
   1cc54:	ldr	r8, [sp, #36]	; 0x24
   1cc58:	add	r1, r7, #1
   1cc5c:	sub	r0, r5, r1
   1cc60:	cmp	r0, #2
   1cc64:	blt	1cde0 <main@@Base+0x6d58>
   1cc68:	ldrb	r0, [r1]
   1cc6c:	cmp	r0, #32
   1cc70:	bls	1cdc8 <main@@Base+0x6d40>
   1cc74:	ldr	r5, [sp, #44]	; 0x2c
   1cc78:	ldr	r8, [sp, #36]	; 0x24
   1cc7c:	mov	r7, r1
   1cc80:	b	1cdf0 <main@@Base+0x6d68>
   1cc84:	ldr	r8, [sp, #36]	; 0x24
   1cc88:	ldr	r5, [sp, #44]	; 0x2c
   1cc8c:	mov	r1, r7
   1cc90:	mov	r3, #4
   1cc94:	mov	r0, r8
   1cc98:	mov	r2, r5
   1cc9c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1cca0:	b	1cdec <main@@Base+0x6d64>
   1cca4:	ldr	r5, [sp, #44]	; 0x2c
   1cca8:	ldr	r8, [sp, #36]	; 0x24
   1ccac:	bne	1ccbc <main@@Base+0x6c34>
   1ccb0:	ldrb	r0, [r7, #2]!
   1ccb4:	cmp	r0, #32
   1ccb8:	bhi	1cccc <main@@Base+0x6c44>
   1ccbc:	mov	r0, r8
   1ccc0:	mov	r2, r5
   1ccc4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ccc8:	mov	r7, r0
   1cccc:	cmp	sl, r7
   1ccd0:	beq	1ce58 <main@@Base+0x6dd0>
   1ccd4:	mov	r4, #0
   1ccd8:	cmp	r7, r5
   1ccdc:	str	r4, [fp, #-52]	; 0xffffffcc
   1cce0:	str	r4, [fp, #-56]	; 0xffffffc8
   1cce4:	str	r4, [fp, #-60]	; 0xffffffc4
   1cce8:	str	r4, [sp, #56]	; 0x38
   1ccec:	beq	1cd34 <main@@Base+0x6cac>
   1ccf0:	sub	r0, fp, #56	; 0x38
   1ccf4:	mov	r1, r7
   1ccf8:	mov	r2, r5
   1ccfc:	add	r3, sp, #56	; 0x38
   1cd00:	str	r0, [sp]
   1cd04:	mov	r0, r8
   1cd08:	bl	352ec <flatcc_json_parser_integer@@Base>
   1cd0c:	cmp	r0, r7
   1cd10:	beq	1cd3c <main@@Base+0x6cb4>
   1cd14:	mov	r1, r0
   1cd18:	ldr	r0, [sp, #56]	; 0x38
   1cd1c:	cmp	r0, #0
   1cd20:	beq	1cd44 <main@@Base+0x6cbc>
   1cd24:	mov	r0, r8
   1cd28:	mov	r2, r5
   1cd2c:	mov	r3, #8
   1cd30:	b	1cd64 <main@@Base+0x6cdc>
   1cd34:	mov	r1, r5
   1cd38:	b	1cd6c <main@@Base+0x6ce4>
   1cd3c:	mov	r1, r7
   1cd40:	b	1cd6c <main@@Base+0x6ce4>
   1cd44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1cd48:	cmp	r0, #0
   1cd4c:	beq	1cdb4 <main@@Base+0x6d2c>
   1cd50:	ldr	r8, [sp, #36]	; 0x24
   1cd54:	ldr	r5, [sp, #44]	; 0x2c
   1cd58:	mov	r3, #7
   1cd5c:	mov	r0, r8
   1cd60:	mov	r2, r5
   1cd64:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1cd68:	mov	r1, r0
   1cd6c:	cmp	r7, r1
   1cd70:	bne	1cdac <main@@Base+0x6d24>
   1cd74:	movw	r3, #45844	; 0xb314
   1cd78:	sub	r0, fp, #60	; 0x3c
   1cd7c:	mov	r1, r7
   1cd80:	mov	r2, r5
   1cd84:	movt	r3, #5
   1cd88:	str	r0, [sp]
   1cd8c:	mov	r0, r8
   1cd90:	bl	24fd0 <main@@Base+0xef48>
   1cd94:	mov	r1, r0
   1cd98:	cmp	r0, r7
   1cd9c:	cmpne	r1, r5
   1cda0:	beq	1cfbc <main@@Base+0x6f34>
   1cda4:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1cda8:	ldr	r8, [sp, #36]	; 0x24
   1cdac:	str	r4, [r9]
   1cdb0:	b	1ce6c <main@@Base+0x6de4>
   1cdb4:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1cdb8:	ldr	r5, [sp, #44]	; 0x2c
   1cdbc:	ldr	r8, [sp, #36]	; 0x24
   1cdc0:	str	r4, [fp, #-60]	; 0xffffffc4
   1cdc4:	b	1cd6c <main@@Base+0x6ce4>
   1cdc8:	ldr	r5, [sp, #44]	; 0x2c
   1cdcc:	ldr	r8, [sp, #36]	; 0x24
   1cdd0:	bne	1cde0 <main@@Base+0x6d58>
   1cdd4:	ldrb	r0, [r7, #2]!
   1cdd8:	cmp	r0, #32
   1cddc:	bhi	1cdf0 <main@@Base+0x6d68>
   1cde0:	mov	r0, r8
   1cde4:	mov	r2, r5
   1cde8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1cdec:	mov	r7, r0
   1cdf0:	cmp	sl, r7
   1cdf4:	beq	1ce58 <main@@Base+0x6dd0>
   1cdf8:	mov	r4, #0
   1cdfc:	cmp	r7, r5
   1ce00:	str	r4, [fp, #-52]	; 0xffffffcc
   1ce04:	str	r4, [fp, #-56]	; 0xffffffc8
   1ce08:	str	r4, [fp, #-60]	; 0xffffffc4
   1ce0c:	str	r4, [sp, #56]	; 0x38
   1ce10:	beq	1cf20 <main@@Base+0x6e98>
   1ce14:	sub	r0, fp, #56	; 0x38
   1ce18:	mov	r1, r7
   1ce1c:	mov	r2, r5
   1ce20:	add	r3, sp, #56	; 0x38
   1ce24:	str	r0, [sp]
   1ce28:	mov	r0, r8
   1ce2c:	bl	352ec <flatcc_json_parser_integer@@Base>
   1ce30:	cmp	r0, r7
   1ce34:	beq	1cf28 <main@@Base+0x6ea0>
   1ce38:	mov	r1, r0
   1ce3c:	ldr	r0, [sp, #56]	; 0x38
   1ce40:	cmp	r0, #0
   1ce44:	beq	1cf30 <main@@Base+0x6ea8>
   1ce48:	ldr	r8, [sp, #36]	; 0x24
   1ce4c:	ldr	r5, [sp, #44]	; 0x2c
   1ce50:	mov	r3, #8
   1ce54:	b	1cf48 <main@@Base+0x6ec0>
   1ce58:	mov	r0, r8
   1ce5c:	mov	r1, sl
   1ce60:	mov	r2, r5
   1ce64:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   1ce68:	mov	r1, r0
   1ce6c:	sub	r0, r5, r1
   1ce70:	cmp	r0, #2
   1ce74:	blt	1cea0 <main@@Base+0x6e18>
   1ce78:	ldrb	r0, [r1]
   1ce7c:	cmp	r0, #32
   1ce80:	bls	1ce8c <main@@Base+0x6e04>
   1ce84:	mov	r2, r1
   1ce88:	b	1ceb0 <main@@Base+0x6e28>
   1ce8c:	bne	1cea0 <main@@Base+0x6e18>
   1ce90:	mov	r2, r1
   1ce94:	ldrb	r0, [r2, #1]!
   1ce98:	cmp	r0, #32
   1ce9c:	bhi	1ceb0 <main@@Base+0x6e28>
   1cea0:	mov	r0, r8
   1cea4:	mov	r2, r5
   1cea8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ceac:	mov	r2, r0
   1ceb0:	cmp	r2, r5
   1ceb4:	beq	1cfd4 <main@@Base+0x6f4c>
   1ceb8:	ldrb	r0, [r2]
   1cebc:	cmp	r0, #44	; 0x2c
   1cec0:	bne	1cfdc <main@@Base+0x6f54>
   1cec4:	add	r1, r2, #1
   1cec8:	sub	r0, r5, r1
   1cecc:	cmp	r0, #2
   1ced0:	blt	1cef8 <main@@Base+0x6e70>
   1ced4:	ldrb	r0, [r1]
   1ced8:	cmp	r0, #32
   1cedc:	bls	1cee8 <main@@Base+0x6e60>
   1cee0:	mov	r2, r1
   1cee4:	b	1cf08 <main@@Base+0x6e80>
   1cee8:	bne	1cef8 <main@@Base+0x6e70>
   1ceec:	ldrb	r0, [r2, #2]!
   1cef0:	cmp	r0, #32
   1cef4:	bhi	1cf08 <main@@Base+0x6e80>
   1cef8:	mov	r0, r8
   1cefc:	mov	r2, r5
   1cf00:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1cf04:	mov	r2, r0
   1cf08:	cmp	r2, r5
   1cf0c:	beq	1d01c <main@@Base+0x6f94>
   1cf10:	ldrb	r0, [r2]
   1cf14:	cmp	r0, #125	; 0x7d
   1cf18:	bne	1c93c <main@@Base+0x68b4>
   1cf1c:	b	1cfec <main@@Base+0x6f64>
   1cf20:	mov	r1, r5
   1cf24:	b	1cf58 <main@@Base+0x6ed0>
   1cf28:	mov	r1, r7
   1cf2c:	b	1cf58 <main@@Base+0x6ed0>
   1cf30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1cf34:	cmp	r0, #0
   1cf38:	beq	1cfa8 <main@@Base+0x6f20>
   1cf3c:	ldr	r8, [sp, #36]	; 0x24
   1cf40:	ldr	r5, [sp, #44]	; 0x2c
   1cf44:	mov	r3, #7
   1cf48:	mov	r0, r8
   1cf4c:	mov	r2, r5
   1cf50:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1cf54:	mov	r1, r0
   1cf58:	cmp	r7, r1
   1cf5c:	bne	1cfa0 <main@@Base+0x6f18>
   1cf60:	movw	r3, #45856	; 0xb320
   1cf64:	sub	r0, fp, #60	; 0x3c
   1cf68:	mov	r1, r7
   1cf6c:	mov	r2, r5
   1cf70:	movt	r3, #5
   1cf74:	str	r0, [sp]
   1cf78:	mov	r0, r8
   1cf7c:	bl	24fd0 <main@@Base+0xef48>
   1cf80:	cmp	r0, r7
   1cf84:	mov	r1, r0
   1cf88:	ldrne	r0, [sp, #44]	; 0x2c
   1cf8c:	cmpne	r1, r0
   1cf90:	beq	1cfbc <main@@Base+0x6f34>
   1cf94:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1cf98:	ldr	r5, [sp, #44]	; 0x2c
   1cf9c:	ldr	r8, [sp, #36]	; 0x24
   1cfa0:	str	r4, [r9, #4]
   1cfa4:	b	1ce6c <main@@Base+0x6de4>
   1cfa8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1cfac:	ldr	r5, [sp, #44]	; 0x2c
   1cfb0:	ldr	r8, [sp, #36]	; 0x24
   1cfb4:	str	r4, [fp, #-60]	; 0xffffffc4
   1cfb8:	b	1cf58 <main@@Base+0x6ed0>
   1cfbc:	ldr	r8, [sp, #36]	; 0x24
   1cfc0:	ldr	r5, [sp, #44]	; 0x2c
   1cfc4:	mov	r3, #33	; 0x21
   1cfc8:	mov	r0, r8
   1cfcc:	mov	r2, r5
   1cfd0:	b	1d040 <main@@Base+0x6fb8>
   1cfd4:	mov	r4, r5
   1cfd8:	b	1d048 <main@@Base+0x6fc0>
   1cfdc:	cmp	r0, #125	; 0x7d
   1cfe0:	bne	1d028 <main@@Base+0x6fa0>
   1cfe4:	ldr	r5, [sp, #44]	; 0x2c
   1cfe8:	ldr	r8, [sp, #36]	; 0x24
   1cfec:	add	r1, r2, #1
   1cff0:	sub	r0, r5, r1
   1cff4:	cmp	r0, #2
   1cff8:	ldr	sl, [sp, #40]	; 0x28
   1cffc:	blt	1d128 <main@@Base+0x70a0>
   1d000:	ldrb	r0, [r1]
   1d004:	cmp	r0, #32
   1d008:	bls	1d108 <main@@Base+0x7080>
   1d00c:	ldr	r5, [sp, #44]	; 0x2c
   1d010:	ldr	r8, [sp, #36]	; 0x24
   1d014:	mov	r4, r1
   1d018:	b	1d048 <main@@Base+0x6fc0>
   1d01c:	mov	r0, r8
   1d020:	mov	r1, r5
   1d024:	b	1d038 <main@@Base+0x6fb0>
   1d028:	ldr	r8, [sp, #36]	; 0x24
   1d02c:	ldr	r5, [sp, #44]	; 0x2c
   1d030:	mov	r1, r2
   1d034:	mov	r0, r8
   1d038:	mov	r2, r5
   1d03c:	mov	r3, #10
   1d040:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1d044:	mov	r4, r0
   1d048:	ldr	sl, [sp, #40]	; 0x28
   1d04c:	sub	r0, r5, r4
   1d050:	cmp	r0, #2
   1d054:	blt	1d080 <main@@Base+0x6ff8>
   1d058:	ldrb	r0, [r4]
   1d05c:	cmp	r0, #32
   1d060:	bls	1d06c <main@@Base+0x6fe4>
   1d064:	mov	r7, r4
   1d068:	b	1d094 <main@@Base+0x700c>
   1d06c:	bne	1d080 <main@@Base+0x6ff8>
   1d070:	mov	r7, r4
   1d074:	ldrb	r0, [r7, #1]!
   1d078:	cmp	r0, #32
   1d07c:	bhi	1d094 <main@@Base+0x700c>
   1d080:	mov	r0, r8
   1d084:	mov	r1, r4
   1d088:	mov	r2, r5
   1d08c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d090:	mov	r7, r0
   1d094:	cmp	r7, r5
   1d098:	beq	1dcbc <main@@Base+0x7c34>
   1d09c:	ldrb	r0, [r7]
   1d0a0:	cmp	r0, #44	; 0x2c
   1d0a4:	bne	1de48 <main@@Base+0x7dc0>
   1d0a8:	add	r1, r7, #1
   1d0ac:	sub	r0, r5, r1
   1d0b0:	cmp	r0, #2
   1d0b4:	blt	1d0e0 <main@@Base+0x7058>
   1d0b8:	ldrb	r0, [r1]
   1d0bc:	cmp	r0, #32
   1d0c0:	bls	1d0cc <main@@Base+0x7044>
   1d0c4:	mov	r4, r1
   1d0c8:	b	1d0f0 <main@@Base+0x7068>
   1d0cc:	bne	1d0e0 <main@@Base+0x7058>
   1d0d0:	ldrb	r0, [r7, #2]!
   1d0d4:	mov	r4, r7
   1d0d8:	cmp	r0, #32
   1d0dc:	bhi	1d0f0 <main@@Base+0x7068>
   1d0e0:	mov	r0, r8
   1d0e4:	mov	r2, r5
   1d0e8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d0ec:	mov	r4, r0
   1d0f0:	cmp	r4, r5
   1d0f4:	beq	1de78 <main@@Base+0x7df0>
   1d0f8:	ldrb	r0, [r4]
   1d0fc:	cmp	r0, #93	; 0x5d
   1d100:	bne	1c860 <main@@Base+0x67d8>
   1d104:	b	1de8c <main@@Base+0x7e04>
   1d108:	ldr	r5, [sp, #44]	; 0x2c
   1d10c:	ldr	r8, [sp, #36]	; 0x24
   1d110:	ldr	sl, [sp, #40]	; 0x28
   1d114:	bne	1d128 <main@@Base+0x70a0>
   1d118:	ldrb	r0, [r2, #2]!
   1d11c:	mov	r4, r2
   1d120:	cmp	r0, #32
   1d124:	bhi	1d04c <main@@Base+0x6fc4>
   1d128:	mov	r0, r8
   1d12c:	mov	r2, r5
   1d130:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d134:	b	1c8c4 <main@@Base+0x683c>
   1d138:	bne	1d14c <main@@Base+0x70c4>
   1d13c:	mov	r7, r1
   1d140:	ldrb	r0, [r7, #1]!
   1d144:	cmp	r0, #32
   1d148:	bhi	1d15c <main@@Base+0x70d4>
   1d14c:	mov	r0, r8
   1d150:	mov	r2, r5
   1d154:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d158:	mov	r7, r0
   1d15c:	cmp	r7, r5
   1d160:	beq	1d1a0 <main@@Base+0x7118>
   1d164:	ldrb	r0, [r7]
   1d168:	cmp	r0, #58	; 0x3a
   1d16c:	bne	1d1a0 <main@@Base+0x7118>
   1d170:	add	r1, r7, #1
   1d174:	sub	r0, r5, r1
   1d178:	cmp	r0, #2
   1d17c:	blt	1eef0 <main@@Base+0x8e68>
   1d180:	ldrb	r0, [r1]
   1d184:	cmp	r0, #32
   1d188:	bls	1eed4 <main@@Base+0x8e4c>
   1d18c:	ldr	r5, [sp, #44]	; 0x2c
   1d190:	ldr	r8, [sp, #36]	; 0x24
   1d194:	ldr	sl, [sp, #40]	; 0x28
   1d198:	mov	r7, r1
   1d19c:	b	1ef00 <main@@Base+0x8e78>
   1d1a0:	mov	r0, r8
   1d1a4:	mov	r1, r7
   1d1a8:	mov	r2, r5
   1d1ac:	mov	r3, #4
   1d1b0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1d1b4:	b	1eefc <main@@Base+0x8e74>
   1d1b8:	ldr	r5, [sp, #44]	; 0x2c
   1d1bc:	ldr	r8, [sp, #36]	; 0x24
   1d1c0:	ldr	sl, [sp, #40]	; 0x28
   1d1c4:	bne	1d1d4 <main@@Base+0x714c>
   1d1c8:	ldrb	r0, [r4, #2]!
   1d1cc:	cmp	r0, #32
   1d1d0:	bhi	1d1e4 <main@@Base+0x715c>
   1d1d4:	mov	r0, r8
   1d1d8:	mov	r2, r5
   1d1dc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d1e0:	mov	r4, r0
   1d1e4:	cmp	r7, r4
   1d1e8:	beq	1eddc <main@@Base+0x8d54>
   1d1ec:	ldr	r0, [r8]
   1d1f0:	bl	2f298 <flatcc_builder_start_offset_vector@@Base>
   1d1f4:	cmp	r0, #0
   1d1f8:	bne	16fbc <main@@Base+0xf34>
   1d1fc:	cmp	r4, r5
   1d200:	beq	1d23c <main@@Base+0x71b4>
   1d204:	ldrb	r0, [r4]
   1d208:	cmp	r0, #91	; 0x5b
   1d20c:	bne	1d23c <main@@Base+0x71b4>
   1d210:	add	r1, r4, #1
   1d214:	sub	r0, r5, r1
   1d218:	cmp	r0, #2
   1d21c:	blt	1dcdc <main@@Base+0x7c54>
   1d220:	ldrb	r0, [r1]
   1d224:	cmp	r0, #32
   1d228:	bls	1dcc4 <main@@Base+0x7c3c>
   1d22c:	ldr	r5, [sp, #44]	; 0x2c
   1d230:	ldr	r8, [sp, #36]	; 0x24
   1d234:	mov	r4, r1
   1d238:	b	1dcec <main@@Base+0x7c64>
   1d23c:	mov	r0, r8
   1d240:	mov	r1, r4
   1d244:	mov	r2, r5
   1d248:	mov	r3, #22
   1d24c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1d250:	mov	r4, r0
   1d254:	ldr	r0, [r8]
   1d258:	bl	2f364 <flatcc_builder_end_offset_vector@@Base>
   1d25c:	cmp	r0, #0
   1d260:	str	r0, [sp, #52]	; 0x34
   1d264:	beq	16fbc <main@@Base+0xf34>
   1d268:	ldr	r0, [r8]
   1d26c:	mov	r1, #11
   1d270:	b	196bc <main@@Base+0x3634>
   1d274:	ldr	r5, [sp, #44]	; 0x2c
   1d278:	ldr	r8, [sp, #36]	; 0x24
   1d27c:	bne	1d28c <main@@Base+0x7204>
   1d280:	ldrb	r0, [r7, #2]!
   1d284:	cmp	r0, #32
   1d288:	bhi	1d29c <main@@Base+0x7214>
   1d28c:	mov	r0, r8
   1d290:	mov	r2, r5
   1d294:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d298:	mov	r7, r0
   1d29c:	cmp	sl, r7
   1d2a0:	beq	1d304 <main@@Base+0x727c>
   1d2a4:	mov	r6, #0
   1d2a8:	cmp	r7, r5
   1d2ac:	str	r6, [fp, #-52]	; 0xffffffcc
   1d2b0:	str	r6, [fp, #-56]	; 0xffffffc8
   1d2b4:	str	r6, [fp, #-60]	; 0xffffffc4
   1d2b8:	str	r6, [sp, #56]	; 0x38
   1d2bc:	beq	1d374 <main@@Base+0x72ec>
   1d2c0:	sub	r0, fp, #56	; 0x38
   1d2c4:	mov	r1, r7
   1d2c8:	mov	r2, r5
   1d2cc:	add	r3, sp, #56	; 0x38
   1d2d0:	str	r0, [sp]
   1d2d4:	mov	r0, r8
   1d2d8:	bl	352ec <flatcc_json_parser_integer@@Base>
   1d2dc:	cmp	r0, r7
   1d2e0:	beq	1d3ac <main@@Base+0x7324>
   1d2e4:	mov	r1, r0
   1d2e8:	ldr	r0, [sp, #56]	; 0x38
   1d2ec:	cmp	r0, #0
   1d2f0:	beq	1d3b4 <main@@Base+0x732c>
   1d2f4:	mov	r0, r8
   1d2f8:	mov	r2, r5
   1d2fc:	mov	r3, #8
   1d300:	b	1d3d4 <main@@Base+0x734c>
   1d304:	add	r4, r9, #16
   1d308:	mov	r1, #8
   1d30c:	sub	r0, r5, r4
   1d310:	cmp	r0, #8
   1d314:	movcc	r1, r0
   1d318:	sub	r1, r1, #1
   1d31c:	cmp	r1, #7
   1d320:	bhi	1d558 <main@@Base+0x74d0>
   1d324:	ldrb	r1, [r4]
   1d328:	cmp	r1, #97	; 0x61
   1d32c:	bne	1d558 <main@@Base+0x74d0>
   1d330:	ldr	sl, [sp, #40]	; 0x28
   1d334:	cmp	r0, #2
   1d338:	blt	1f810 <main@@Base+0x9788>
   1d33c:	ldr	r2, [sp, #32]
   1d340:	mov	r1, r9
   1d344:	ldrb	r0, [r1, #17]!
   1d348:	ldr	r2, [r2]
   1d34c:	cmp	r2, #0
   1d350:	beq	1d37c <main@@Base+0x72f4>
   1d354:	cmp	r0, #33	; 0x21
   1d358:	bcc	1d364 <main@@Base+0x72dc>
   1d35c:	cmp	r0, #58	; 0x3a
   1d360:	bne	1f810 <main@@Base+0x9788>
   1d364:	ldr	r0, [sp, #32]
   1d368:	mov	r2, #0
   1d36c:	str	r2, [r0]
   1d370:	b	1d388 <main@@Base+0x7300>
   1d374:	mov	r4, r5
   1d378:	b	1d3dc <main@@Base+0x7354>
   1d37c:	cmp	r0, #34	; 0x22
   1d380:	bne	1f810 <main@@Base+0x9788>
   1d384:	add	r1, r9, #18
   1d388:	sub	r0, r5, r1
   1d38c:	cmp	r0, #2
   1d390:	blt	1d9d4 <main@@Base+0x794c>
   1d394:	ldrb	r0, [r1]
   1d398:	cmp	r0, #32
   1d39c:	bls	1d9bc <main@@Base+0x7934>
   1d3a0:	ldr	r5, [sp, #44]	; 0x2c
   1d3a4:	mov	r7, r1
   1d3a8:	b	1d9e4 <main@@Base+0x795c>
   1d3ac:	mov	r4, r7
   1d3b0:	b	1d3dc <main@@Base+0x7354>
   1d3b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d3b8:	cmp	r0, #0
   1d3bc:	beq	1de60 <main@@Base+0x7dd8>
   1d3c0:	ldr	r8, [sp, #36]	; 0x24
   1d3c4:	ldr	r5, [sp, #44]	; 0x2c
   1d3c8:	mov	r3, #7
   1d3cc:	mov	r0, r8
   1d3d0:	mov	r2, r5
   1d3d4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1d3d8:	mov	r4, r0
   1d3dc:	ldr	sl, [sp, #40]	; 0x28
   1d3e0:	cmp	r7, r4
   1d3e4:	bne	1d424 <main@@Base+0x739c>
   1d3e8:	movw	r3, #45364	; 0xb134
   1d3ec:	sub	r0, fp, #60	; 0x3c
   1d3f0:	mov	r1, r7
   1d3f4:	mov	r2, r5
   1d3f8:	movt	r3, #5
   1d3fc:	str	r0, [sp]
   1d400:	mov	r0, r8
   1d404:	bl	24fd0 <main@@Base+0xef48>
   1d408:	mov	r4, r0
   1d40c:	cmp	r0, r7
   1d410:	cmpne	r4, r5
   1d414:	beq	20a80 <main@@Base+0xa9f8>
   1d418:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1d41c:	ldr	r8, [sp, #36]	; 0x24
   1d420:	ldr	sl, [sp, #40]	; 0x28
   1d424:	cmp	r6, #0
   1d428:	bne	1d438 <main@@Base+0x73b0>
   1d42c:	ldrb	r0, [r8, #8]
   1d430:	tst	r0, #2
   1d434:	beq	1f824 <main@@Base+0x979c>
   1d438:	ldr	r0, [r8]
   1d43c:	mov	r1, #17
   1d440:	b	1eeb8 <main@@Base+0x8e30>
   1d444:	ldr	r5, [sp, #44]	; 0x2c
   1d448:	ldr	r8, [sp, #36]	; 0x24
   1d44c:	bne	1d45c <main@@Base+0x73d4>
   1d450:	ldrb	r0, [r7, #2]!
   1d454:	cmp	r0, #32
   1d458:	bhi	1d46c <main@@Base+0x73e4>
   1d45c:	mov	r0, r8
   1d460:	mov	r2, r5
   1d464:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d468:	mov	r7, r0
   1d46c:	cmp	sl, r7
   1d470:	beq	1d4e8 <main@@Base+0x7460>
   1d474:	mov	r6, #0
   1d478:	cmp	r7, r5
   1d47c:	str	r6, [fp, #-52]	; 0xffffffcc
   1d480:	str	r6, [fp, #-56]	; 0xffffffc8
   1d484:	str	r6, [sp, #60]	; 0x3c
   1d488:	str	r6, [sp, #56]	; 0x38
   1d48c:	str	r6, [fp, #-60]	; 0xffffffc4
   1d490:	beq	1d564 <main@@Base+0x74dc>
   1d494:	sub	r0, fp, #56	; 0x38
   1d498:	mov	r1, r7
   1d49c:	mov	r2, r5
   1d4a0:	sub	r3, fp, #60	; 0x3c
   1d4a4:	str	r0, [sp]
   1d4a8:	mov	r0, r8
   1d4ac:	bl	352ec <flatcc_json_parser_integer@@Base>
   1d4b0:	cmp	r0, r7
   1d4b4:	beq	1d5a0 <main@@Base+0x7518>
   1d4b8:	mov	r1, r0
   1d4bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d4c0:	cmp	r0, #0
   1d4c4:	beq	1d5b0 <main@@Base+0x7528>
   1d4c8:	mov	r0, r8
   1d4cc:	mov	r2, r5
   1d4d0:	mov	r3, #8
   1d4d4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1d4d8:	mov	r4, r0
   1d4dc:	mov	r6, #0
   1d4e0:	mov	r9, #0
   1d4e4:	b	1d5c4 <main@@Base+0x753c>
   1d4e8:	add	r4, r9, #16
   1d4ec:	mov	r1, #8
   1d4f0:	sub	r0, r5, r4
   1d4f4:	cmp	r0, #8
   1d4f8:	movcc	r1, r0
   1d4fc:	sub	r1, r1, #1
   1d500:	cmp	r1, #7
   1d504:	bhi	1d558 <main@@Base+0x74d0>
   1d508:	ldrb	r1, [r4]
   1d50c:	cmp	r1, #97	; 0x61
   1d510:	bne	1d558 <main@@Base+0x74d0>
   1d514:	ldr	sl, [sp, #40]	; 0x28
   1d518:	cmp	r0, #2
   1d51c:	blt	1f810 <main@@Base+0x9788>
   1d520:	ldr	r2, [sp, #32]
   1d524:	mov	r1, r9
   1d528:	ldrb	r0, [r1, #17]!
   1d52c:	ldr	r2, [r2]
   1d530:	cmp	r2, #0
   1d534:	beq	1d570 <main@@Base+0x74e8>
   1d538:	cmp	r0, #33	; 0x21
   1d53c:	bcc	1d548 <main@@Base+0x74c0>
   1d540:	cmp	r0, #58	; 0x3a
   1d544:	bne	1f810 <main@@Base+0x9788>
   1d548:	ldr	r0, [sp, #32]
   1d54c:	mov	r2, #0
   1d550:	str	r2, [r0]
   1d554:	b	1d57c <main@@Base+0x74f4>
   1d558:	mov	r0, r8
   1d55c:	mov	r1, r4
   1d560:	b	1a434 <main@@Base+0x43ac>
   1d564:	mov	r9, #0
   1d568:	mov	r4, r5
   1d56c:	b	1d5c4 <main@@Base+0x753c>
   1d570:	cmp	r0, #34	; 0x22
   1d574:	bne	1f810 <main@@Base+0x9788>
   1d578:	add	r1, r9, #18
   1d57c:	sub	r0, r5, r1
   1d580:	cmp	r0, #2
   1d584:	blt	1da5c <main@@Base+0x79d4>
   1d588:	ldrb	r0, [r1]
   1d58c:	cmp	r0, #32
   1d590:	bls	1da44 <main@@Base+0x79bc>
   1d594:	ldr	r5, [sp, #44]	; 0x2c
   1d598:	mov	r7, r1
   1d59c:	b	1da6c <main@@Base+0x79e4>
   1d5a0:	mov	r6, #0
   1d5a4:	mov	r9, #0
   1d5a8:	mov	r4, r7
   1d5ac:	b	1d5c4 <main@@Base+0x753c>
   1d5b0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d5b4:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1d5b8:	mov	r4, r1
   1d5bc:	str	r9, [sp, #60]	; 0x3c
   1d5c0:	str	r6, [sp, #56]	; 0x38
   1d5c4:	ldr	sl, [sp, #40]	; 0x28
   1d5c8:	cmp	r7, r4
   1d5cc:	bne	1d610 <main@@Base+0x7588>
   1d5d0:	movw	r3, #45388	; 0xb14c
   1d5d4:	add	r0, sp, #56	; 0x38
   1d5d8:	mov	r1, r7
   1d5dc:	mov	r2, r5
   1d5e0:	movt	r3, #5
   1d5e4:	str	r0, [sp]
   1d5e8:	mov	r0, r8
   1d5ec:	bl	251bc <main@@Base+0xf134>
   1d5f0:	mov	r4, r0
   1d5f4:	cmp	r0, r7
   1d5f8:	cmpne	r4, r5
   1d5fc:	beq	20a80 <main@@Base+0xa9f8>
   1d600:	ldr	r6, [sp, #56]	; 0x38
   1d604:	ldr	r9, [sp, #60]	; 0x3c
   1d608:	ldr	r8, [sp, #36]	; 0x24
   1d60c:	ldr	sl, [sp, #40]	; 0x28
   1d610:	orrs	r0, r6, r9
   1d614:	bne	1d624 <main@@Base+0x759c>
   1d618:	ldrb	r0, [r8, #8]
   1d61c:	tst	r0, #2
   1d620:	beq	1f824 <main@@Base+0x979c>
   1d624:	ldr	r0, [r8]
   1d628:	mov	r1, #19
   1d62c:	mov	r2, #8
   1d630:	mov	r3, #8
   1d634:	bl	30824 <flatcc_builder_table_add@@Base>
   1d638:	cmp	r0, #0
   1d63c:	beq	20a80 <main@@Base+0xa9f8>
   1d640:	stm	r0, {r6, r9}
   1d644:	b	1f824 <main@@Base+0x979c>
   1d648:	ldr	r5, [sp, #44]	; 0x2c
   1d64c:	ldr	r8, [sp, #36]	; 0x24
   1d650:	ldr	sl, [sp, #40]	; 0x28
   1d654:	bne	1d664 <main@@Base+0x75dc>
   1d658:	ldrb	r0, [r4, #2]!
   1d65c:	cmp	r0, #32
   1d660:	bhi	1a460 <main@@Base+0x43d8>
   1d664:	mov	r0, r8
   1d668:	mov	r2, r5
   1d66c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d670:	b	1a45c <main@@Base+0x43d4>
   1d674:	ldr	r5, [sp, #44]	; 0x2c
   1d678:	ldr	r8, [sp, #36]	; 0x24
   1d67c:	ldr	sl, [sp, #40]	; 0x28
   1d680:	bne	1d690 <main@@Base+0x7608>
   1d684:	ldrb	r0, [r4, #2]!
   1d688:	cmp	r0, #32
   1d68c:	bhi	1d6a0 <main@@Base+0x7618>
   1d690:	mov	r0, r8
   1d694:	mov	r2, r5
   1d698:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d69c:	mov	r4, r0
   1d6a0:	cmp	r7, r4
   1d6a4:	beq	1eddc <main@@Base+0x8d54>
   1d6a8:	ldr	r0, [r8]
   1d6ac:	bl	2f298 <flatcc_builder_start_offset_vector@@Base>
   1d6b0:	cmp	r0, #0
   1d6b4:	bne	16fbc <main@@Base+0xf34>
   1d6b8:	cmp	r4, r5
   1d6bc:	beq	1d6f4 <main@@Base+0x766c>
   1d6c0:	ldrb	r0, [r4]
   1d6c4:	cmp	r0, #91	; 0x5b
   1d6c8:	bne	1d6f4 <main@@Base+0x766c>
   1d6cc:	add	r1, r4, #1
   1d6d0:	sub	r0, r5, r1
   1d6d4:	cmp	r0, #2
   1d6d8:	blt	1ded4 <main@@Base+0x7e4c>
   1d6dc:	ldrb	r0, [r1]
   1d6e0:	cmp	r0, #32
   1d6e4:	bls	1debc <main@@Base+0x7e34>
   1d6e8:	ldr	r5, [sp, #44]	; 0x2c
   1d6ec:	mov	r4, r1
   1d6f0:	b	1dee4 <main@@Base+0x7e5c>
   1d6f4:	mov	r0, r8
   1d6f8:	mov	r1, r4
   1d6fc:	mov	r2, r5
   1d700:	mov	r3, #22
   1d704:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1d708:	mov	r4, r0
   1d70c:	ldr	r0, [r8]
   1d710:	bl	2f364 <flatcc_builder_end_offset_vector@@Base>
   1d714:	cmp	r0, #0
   1d718:	str	r0, [sp, #52]	; 0x34
   1d71c:	beq	16fbc <main@@Base+0xf34>
   1d720:	ldr	r0, [r8]
   1d724:	mov	r1, #10
   1d728:	b	196bc <main@@Base+0x3634>
   1d72c:	ldr	r5, [sp, #44]	; 0x2c
   1d730:	ldr	r8, [sp, #36]	; 0x24
   1d734:	ldr	sl, [sp, #40]	; 0x28
   1d738:	bne	1d748 <main@@Base+0x76c0>
   1d73c:	ldrb	r0, [r4, #2]!
   1d740:	cmp	r0, #32
   1d744:	bhi	1d758 <main@@Base+0x76d0>
   1d748:	mov	r0, r8
   1d74c:	mov	r2, r5
   1d750:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d754:	mov	r4, r0
   1d758:	cmp	r7, r4
   1d75c:	beq	1eddc <main@@Base+0x8d54>
   1d760:	mov	r0, #0
   1d764:	mov	r1, #3
   1d768:	str	r0, [sp, #52]	; 0x34
   1d76c:	ldr	r0, [r8]
   1d770:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   1d774:	cmp	r0, #0
   1d778:	bne	20510 <main@@Base+0xa488>
   1d77c:	cmp	r4, r5
   1d780:	beq	1d7b4 <main@@Base+0x772c>
   1d784:	ldrb	r0, [r4]
   1d788:	cmp	r0, #123	; 0x7b
   1d78c:	bne	1d7b4 <main@@Base+0x772c>
   1d790:	add	r1, r4, #1
   1d794:	sub	r0, r5, r1
   1d798:	cmp	r0, #2
   1d79c:	blt	1fc18 <main@@Base+0x9b90>
   1d7a0:	ldrb	r0, [r1]
   1d7a4:	cmp	r0, #32
   1d7a8:	bls	1fc08 <main@@Base+0x9b80>
   1d7ac:	mov	r4, r1
   1d7b0:	b	1fc28 <main@@Base+0x9ba0>
   1d7b4:	mov	r0, r8
   1d7b8:	mov	r1, r4
   1d7bc:	mov	r2, r5
   1d7c0:	mov	r3, #21
   1d7c4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1d7c8:	mov	r4, r0
   1d7cc:	ldr	r0, [r8, #24]
   1d7d0:	cmp	r0, #0
   1d7d4:	beq	1d7e0 <main@@Base+0x7758>
   1d7d8:	ldr	r5, [sp, #44]	; 0x2c
   1d7dc:	b	2050c <main@@Base+0xa484>
   1d7e0:	ldr	r0, [r8]
   1d7e4:	bl	2ff38 <flatcc_builder_end_table@@Base>
   1d7e8:	cmp	r0, #0
   1d7ec:	str	r0, [sp, #52]	; 0x34
   1d7f0:	beq	20504 <main@@Base+0xa47c>
   1d7f4:	ldr	r5, [sp, #44]	; 0x2c
   1d7f8:	ldr	r8, [sp, #36]	; 0x24
   1d7fc:	ldr	sl, [sp, #40]	; 0x28
   1d800:	b	20534 <main@@Base+0xa4ac>
   1d804:	ldr	r5, [sp, #44]	; 0x2c
   1d808:	ldr	r8, [sp, #36]	; 0x24
   1d80c:	ldr	sl, [sp, #40]	; 0x28
   1d810:	bne	1d820 <main@@Base+0x7798>
   1d814:	ldrb	r0, [r4, #2]!
   1d818:	cmp	r0, #32
   1d81c:	bhi	1d830 <main@@Base+0x77a8>
   1d820:	mov	r0, r8
   1d824:	mov	r2, r5
   1d828:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d82c:	mov	r4, r0
   1d830:	cmp	r7, r4
   1d834:	beq	1eddc <main@@Base+0x8d54>
   1d838:	ldr	r0, [r8]
   1d83c:	mov	r1, #1
   1d840:	mov	r2, #1
   1d844:	mvn	r3, #0
   1d848:	bl	2f20c <flatcc_builder_start_vector@@Base>
   1d84c:	cmp	r0, #0
   1d850:	bne	16fbc <main@@Base+0xf34>
   1d854:	cmp	r4, r5
   1d858:	beq	1d890 <main@@Base+0x7808>
   1d85c:	ldrb	r0, [r4]
   1d860:	cmp	r0, #91	; 0x5b
   1d864:	bne	1d890 <main@@Base+0x7808>
   1d868:	add	r1, r4, #1
   1d86c:	sub	r0, r5, r1
   1d870:	cmp	r0, #2
   1d874:	blt	1e078 <main@@Base+0x7ff0>
   1d878:	ldrb	r0, [r1]
   1d87c:	cmp	r0, #32
   1d880:	bls	1e060 <main@@Base+0x7fd8>
   1d884:	ldr	r5, [sp, #44]	; 0x2c
   1d888:	mov	r4, r1
   1d88c:	b	1e088 <main@@Base+0x8000>
   1d890:	mov	r0, r8
   1d894:	mov	r1, r4
   1d898:	mov	r2, r5
   1d89c:	mov	r3, #22
   1d8a0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1d8a4:	mov	r4, r0
   1d8a8:	ldr	r0, [r8]
   1d8ac:	bl	30238 <flatcc_builder_end_vector@@Base>
   1d8b0:	cmp	r0, #0
   1d8b4:	str	r0, [sp, #52]	; 0x34
   1d8b8:	beq	16fbc <main@@Base+0xf34>
   1d8bc:	ldr	r0, [r8]
   1d8c0:	mov	r1, #5
   1d8c4:	b	196bc <main@@Base+0x3634>
   1d8c8:	ldr	r5, [sp, #44]	; 0x2c
   1d8cc:	ldr	r8, [sp, #36]	; 0x24
   1d8d0:	ldr	sl, [sp, #40]	; 0x28
   1d8d4:	bne	1d8e8 <main@@Base+0x7860>
   1d8d8:	ldrb	r0, [r4, #2]!
   1d8dc:	mov	r7, r4
   1d8e0:	cmp	r0, #32
   1d8e4:	bhi	19ee0 <main@@Base+0x3e58>
   1d8e8:	mov	r0, r8
   1d8ec:	mov	r2, r5
   1d8f0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d8f4:	b	19edc <main@@Base+0x3e54>
   1d8f8:	ldr	r5, [sp, #44]	; 0x2c
   1d8fc:	ldr	r8, [sp, #36]	; 0x24
   1d900:	bne	1d910 <main@@Base+0x7888>
   1d904:	ldrb	r0, [r4, #2]!
   1d908:	cmp	r0, #32
   1d90c:	bhi	1d920 <main@@Base+0x7898>
   1d910:	mov	r0, r8
   1d914:	mov	r2, r5
   1d918:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d91c:	mov	r4, r0
   1d920:	cmp	sl, r4
   1d924:	beq	1a42c <main@@Base+0x43a4>
   1d928:	ldr	r0, [r8]
   1d92c:	mov	r1, #8
   1d930:	mov	r2, #8
   1d934:	mvn	r3, #-536870912	; 0xe0000000
   1d938:	bl	2f20c <flatcc_builder_start_vector@@Base>
   1d93c:	cmp	r0, #0
   1d940:	bne	16fbc <main@@Base+0xf34>
   1d944:	cmp	r4, r5
   1d948:	beq	1d980 <main@@Base+0x78f8>
   1d94c:	ldrb	r0, [r4]
   1d950:	cmp	r0, #91	; 0x5b
   1d954:	bne	1d980 <main@@Base+0x78f8>
   1d958:	add	r1, r4, #1
   1d95c:	sub	r0, r5, r1
   1d960:	cmp	r0, #2
   1d964:	blt	1eac8 <main@@Base+0x8a40>
   1d968:	ldrb	r0, [r1]
   1d96c:	cmp	r0, #32
   1d970:	bls	1eab0 <main@@Base+0x8a28>
   1d974:	ldr	r5, [sp, #44]	; 0x2c
   1d978:	mov	r4, r1
   1d97c:	b	1ead8 <main@@Base+0x8a50>
   1d980:	mov	r0, r8
   1d984:	mov	r1, r4
   1d988:	mov	r2, r5
   1d98c:	mov	r3, #22
   1d990:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1d994:	mov	r4, r0
   1d998:	ldr	sl, [sp, #40]	; 0x28
   1d99c:	ldr	r0, [r8]
   1d9a0:	bl	30238 <flatcc_builder_end_vector@@Base>
   1d9a4:	cmp	r0, #0
   1d9a8:	str	r0, [sp, #52]	; 0x34
   1d9ac:	beq	16fbc <main@@Base+0xf34>
   1d9b0:	ldr	r0, [r8]
   1d9b4:	mov	r1, #32
   1d9b8:	b	196bc <main@@Base+0x3634>
   1d9bc:	ldr	r5, [sp, #44]	; 0x2c
   1d9c0:	bne	1d9d4 <main@@Base+0x794c>
   1d9c4:	mov	r7, r1
   1d9c8:	ldrb	r0, [r7, #1]!
   1d9cc:	cmp	r0, #32
   1d9d0:	bhi	1d9e4 <main@@Base+0x795c>
   1d9d4:	ldr	r0, [sp, #36]	; 0x24
   1d9d8:	mov	r2, r5
   1d9dc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1d9e0:	mov	r7, r0
   1d9e4:	cmp	r7, r5
   1d9e8:	beq	1da28 <main@@Base+0x79a0>
   1d9ec:	ldrb	r0, [r7]
   1d9f0:	cmp	r0, #58	; 0x3a
   1d9f4:	bne	1da28 <main@@Base+0x79a0>
   1d9f8:	ldr	r8, [sp, #36]	; 0x24
   1d9fc:	add	r1, r7, #1
   1da00:	sub	r0, r5, r1
   1da04:	cmp	r0, #2
   1da08:	blt	1f644 <main@@Base+0x95bc>
   1da0c:	ldrb	r0, [r1]
   1da10:	cmp	r0, #32
   1da14:	bls	1f62c <main@@Base+0x95a4>
   1da18:	ldr	r5, [sp, #44]	; 0x2c
   1da1c:	ldr	r8, [sp, #36]	; 0x24
   1da20:	mov	r7, r1
   1da24:	b	1f654 <main@@Base+0x95cc>
   1da28:	ldr	r8, [sp, #36]	; 0x24
   1da2c:	mov	r1, r7
   1da30:	mov	r2, r5
   1da34:	mov	r3, #4
   1da38:	mov	r0, r8
   1da3c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1da40:	b	1f650 <main@@Base+0x95c8>
   1da44:	ldr	r5, [sp, #44]	; 0x2c
   1da48:	bne	1da5c <main@@Base+0x79d4>
   1da4c:	mov	r7, r1
   1da50:	ldrb	r0, [r7, #1]!
   1da54:	cmp	r0, #32
   1da58:	bhi	1da6c <main@@Base+0x79e4>
   1da5c:	ldr	r0, [sp, #36]	; 0x24
   1da60:	mov	r2, r5
   1da64:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1da68:	mov	r7, r0
   1da6c:	cmp	r7, r5
   1da70:	beq	1dab0 <main@@Base+0x7a28>
   1da74:	ldrb	r0, [r7]
   1da78:	cmp	r0, #58	; 0x3a
   1da7c:	bne	1dab0 <main@@Base+0x7a28>
   1da80:	ldr	r8, [sp, #36]	; 0x24
   1da84:	add	r1, r7, #1
   1da88:	sub	r0, r5, r1
   1da8c:	cmp	r0, #2
   1da90:	blt	1f784 <main@@Base+0x96fc>
   1da94:	ldrb	r0, [r1]
   1da98:	cmp	r0, #32
   1da9c:	bls	1f76c <main@@Base+0x96e4>
   1daa0:	ldr	r5, [sp, #44]	; 0x2c
   1daa4:	ldr	r8, [sp, #36]	; 0x24
   1daa8:	mov	r7, r1
   1daac:	b	1f794 <main@@Base+0x970c>
   1dab0:	ldr	r8, [sp, #36]	; 0x24
   1dab4:	mov	r1, r7
   1dab8:	mov	r2, r5
   1dabc:	mov	r3, #4
   1dac0:	mov	r0, r8
   1dac4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1dac8:	b	1f790 <main@@Base+0x9708>
   1dacc:	ldr	r5, [sp, #44]	; 0x2c
   1dad0:	ldr	r8, [sp, #36]	; 0x24
   1dad4:	ldr	sl, [sp, #40]	; 0x28
   1dad8:	bne	1dae8 <main@@Base+0x7a60>
   1dadc:	ldrb	r0, [r4, #2]!
   1dae0:	cmp	r0, #32
   1dae4:	bhi	1daf8 <main@@Base+0x7a70>
   1dae8:	mov	r0, r8
   1daec:	mov	r2, r5
   1daf0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1daf4:	mov	r4, r0
   1daf8:	cmp	r7, r4
   1dafc:	beq	1eddc <main@@Base+0x8d54>
   1db00:	cmp	r4, r5
   1db04:	beq	1db64 <main@@Base+0x7adc>
   1db08:	ldrb	r0, [r4]
   1db0c:	cmp	r0, #91	; 0x5b
   1db10:	bne	1db64 <main@@Base+0x7adc>
   1db14:	ldr	r0, [r8]
   1db18:	mov	r1, #1
   1db1c:	mov	r2, #1
   1db20:	mvn	r3, #0
   1db24:	bl	2f20c <flatcc_builder_start_vector@@Base>
   1db28:	cmp	r0, #0
   1db2c:	bne	20a80 <main@@Base+0xa9f8>
   1db30:	ldrb	r0, [r4]
   1db34:	cmp	r0, #91	; 0x5b
   1db38:	bne	1dbb0 <main@@Base+0x7b28>
   1db3c:	ldr	r0, [sp, #44]	; 0x2c
   1db40:	add	r1, r4, #1
   1db44:	sub	r0, r0, r1
   1db48:	cmp	r0, #2
   1db4c:	blt	1f9ac <main@@Base+0x9924>
   1db50:	ldrb	r0, [r1]
   1db54:	cmp	r0, #32
   1db58:	bls	1f99c <main@@Base+0x9914>
   1db5c:	mov	r4, r1
   1db60:	b	1f9bc <main@@Base+0x9934>
   1db64:	ldr	r0, [r8]
   1db68:	mov	r1, #0
   1db6c:	mov	r2, #0
   1db70:	mov	r3, #0
   1db74:	bl	2e57c <flatcc_builder_start_buffer@@Base>
   1db78:	cmp	r0, #0
   1db7c:	bne	16fbc <main@@Base+0xf34>
   1db80:	mov	r0, r8
   1db84:	mov	r1, r4
   1db88:	mov	r2, r5
   1db8c:	add	r3, sp, #52	; 0x34
   1db90:	bl	16f7c <main@@Base+0xef4>
   1db94:	ldr	r1, [sp, #52]	; 0x34
   1db98:	mov	r4, r0
   1db9c:	cmp	r1, #0
   1dba0:	beq	16fbc <main@@Base+0xf34>
   1dba4:	ldr	r0, [r8]
   1dba8:	bl	2e76c <flatcc_builder_end_buffer@@Base>
   1dbac:	b	20730 <main@@Base+0xa6a8>
   1dbb0:	ldr	r0, [sp, #36]	; 0x24
   1dbb4:	ldr	r2, [sp, #44]	; 0x2c
   1dbb8:	mov	r1, r4
   1dbbc:	mov	r3, #22
   1dbc0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1dbc4:	b	2071c <main@@Base+0xa694>
   1dbc8:	ldr	r5, [sp, #44]	; 0x2c
   1dbcc:	ldr	r8, [sp, #36]	; 0x24
   1dbd0:	ldr	sl, [sp, #40]	; 0x28
   1dbd4:	bne	1dbe4 <main@@Base+0x7b5c>
   1dbd8:	ldrb	r0, [r7, #2]!
   1dbdc:	cmp	r0, #32
   1dbe0:	bhi	1dbf4 <main@@Base+0x7b6c>
   1dbe4:	mov	r0, r8
   1dbe8:	mov	r2, r5
   1dbec:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1dbf0:	mov	r7, r0
   1dbf4:	cmp	r4, r7
   1dbf8:	beq	1f810 <main@@Base+0x9788>
   1dbfc:	mov	r6, #0
   1dc00:	cmp	r7, r5
   1dc04:	str	r6, [fp, #-52]	; 0xffffffcc
   1dc08:	str	r6, [fp, #-56]	; 0xffffffc8
   1dc0c:	str	r6, [fp, #-60]	; 0xffffffc4
   1dc10:	str	r6, [sp, #56]	; 0x38
   1dc14:	beq	1dc74 <main@@Base+0x7bec>
   1dc18:	sub	r0, fp, #56	; 0x38
   1dc1c:	mov	r1, r7
   1dc20:	mov	r2, r5
   1dc24:	add	r3, sp, #56	; 0x38
   1dc28:	str	r0, [sp]
   1dc2c:	mov	r0, r8
   1dc30:	bl	352ec <flatcc_json_parser_integer@@Base>
   1dc34:	cmp	r0, r7
   1dc38:	beq	1dc7c <main@@Base+0x7bf4>
   1dc3c:	ldr	r2, [sp, #56]	; 0x38
   1dc40:	mov	r4, r0
   1dc44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dc48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1dc4c:	cmp	r2, #0
   1dc50:	beq	1dc84 <main@@Base+0x7bfc>
   1dc54:	subs	r2, r0, #-2147483647	; 0x80000001
   1dc58:	sbcs	r1, r1, #0
   1dc5c:	bcc	1dcb4 <main@@Base+0x7c2c>
   1dc60:	ldr	r8, [sp, #36]	; 0x24
   1dc64:	ldr	r5, [sp, #44]	; 0x2c
   1dc68:	mov	r1, r4
   1dc6c:	mov	r3, #8
   1dc70:	b	1dca0 <main@@Base+0x7c18>
   1dc74:	mov	r4, r5
   1dc78:	b	1ee50 <main@@Base+0x8dc8>
   1dc7c:	mov	r4, r7
   1dc80:	b	1ee50 <main@@Base+0x8dc8>
   1dc84:	subs	r2, r0, #-2147483648	; 0x80000000
   1dc88:	sbcs	r1, r1, #0
   1dc8c:	bcc	1ee3c <main@@Base+0x8db4>
   1dc90:	ldr	r8, [sp, #36]	; 0x24
   1dc94:	ldr	r5, [sp, #44]	; 0x2c
   1dc98:	mov	r1, r4
   1dc9c:	mov	r3, #7
   1dca0:	mov	r0, r8
   1dca4:	mov	r2, r5
   1dca8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1dcac:	mov	r4, r0
   1dcb0:	b	1ee4c <main@@Base+0x8dc4>
   1dcb4:	rsb	r6, r0, #0
   1dcb8:	b	1ee40 <main@@Base+0x8db8>
   1dcbc:	mov	r7, r5
   1dcc0:	b	1c004 <main@@Base+0x5f7c>
   1dcc4:	ldr	r5, [sp, #44]	; 0x2c
   1dcc8:	ldr	r8, [sp, #36]	; 0x24
   1dccc:	bne	1dcdc <main@@Base+0x7c54>
   1dcd0:	ldrb	r0, [r4, #2]!
   1dcd4:	cmp	r0, #32
   1dcd8:	bhi	1dcec <main@@Base+0x7c64>
   1dcdc:	mov	r0, r8
   1dce0:	mov	r2, r5
   1dce4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1dce8:	mov	r4, r0
   1dcec:	cmp	r4, r5
   1dcf0:	mov	r2, r5
   1dcf4:	beq	1dd50 <main@@Base+0x7cc8>
   1dcf8:	ldrb	r0, [r4]
   1dcfc:	cmp	r0, #93	; 0x5d
   1dd00:	bne	1dd44 <main@@Base+0x7cbc>
   1dd04:	ldr	r5, [sp, #44]	; 0x2c
   1dd08:	ldr	r8, [sp, #36]	; 0x24
   1dd0c:	ldr	sl, [sp, #40]	; 0x28
   1dd10:	add	r1, r4, #1
   1dd14:	sub	r0, r5, r1
   1dd18:	cmp	r0, #2
   1dd1c:	blt	207b4 <main@@Base+0xa72c>
   1dd20:	ldrb	r0, [r1]
   1dd24:	cmp	r0, #32
   1dd28:	bhi	1f298 <main@@Base+0x9210>
   1dd2c:	ldr	r5, [sp, #44]	; 0x2c
   1dd30:	ldr	r8, [sp, #36]	; 0x24
   1dd34:	ldr	sl, [sp, #40]	; 0x28
   1dd38:	bne	207b4 <main@@Base+0xa72c>
   1dd3c:	ldrb	r0, [r4, #2]!
   1dd40:	b	207ac <main@@Base+0xa724>
   1dd44:	ldr	r5, [sp, #44]	; 0x2c
   1dd48:	ldr	r8, [sp, #36]	; 0x24
   1dd4c:	mov	r2, r4
   1dd50:	mov	r1, r2
   1dd54:	mov	r0, r8
   1dd58:	mov	r2, r5
   1dd5c:	add	r3, sp, #52	; 0x34
   1dd60:	bl	16f7c <main@@Base+0xef4>
   1dd64:	mov	r4, r0
   1dd68:	ldr	r0, [sp, #52]	; 0x34
   1dd6c:	cmp	r0, #0
   1dd70:	beq	16fbc <main@@Base+0xf34>
   1dd74:	ldr	r0, [r8]
   1dd78:	mov	r1, #1
   1dd7c:	bl	2ec6c <flatcc_builder_extend_offset_vector@@Base>
   1dd80:	cmp	r0, #0
   1dd84:	beq	16fbc <main@@Base+0xf34>
   1dd88:	ldr	r1, [sp, #52]	; 0x34
   1dd8c:	str	r1, [r0]
   1dd90:	sub	r0, r5, r4
   1dd94:	cmp	r0, #2
   1dd98:	blt	1ddc4 <main@@Base+0x7d3c>
   1dd9c:	ldrb	r0, [r4]
   1dda0:	cmp	r0, #32
   1dda4:	bls	1ddb0 <main@@Base+0x7d28>
   1dda8:	mov	r2, r4
   1ddac:	b	1ddd8 <main@@Base+0x7d50>
   1ddb0:	bne	1ddc4 <main@@Base+0x7d3c>
   1ddb4:	mov	r2, r4
   1ddb8:	ldrb	r0, [r2, #1]!
   1ddbc:	cmp	r0, #32
   1ddc0:	bhi	1ddd8 <main@@Base+0x7d50>
   1ddc4:	mov	r0, r8
   1ddc8:	mov	r1, r4
   1ddcc:	mov	r2, r5
   1ddd0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ddd4:	mov	r2, r0
   1ddd8:	cmp	r2, r5
   1dddc:	beq	1f218 <main@@Base+0x9190>
   1dde0:	ldrb	r0, [r2]
   1dde4:	cmp	r0, #44	; 0x2c
   1dde8:	bne	1f268 <main@@Base+0x91e0>
   1ddec:	add	r1, r2, #1
   1ddf0:	sub	r0, r5, r1
   1ddf4:	cmp	r0, #2
   1ddf8:	blt	1de20 <main@@Base+0x7d98>
   1ddfc:	ldrb	r0, [r1]
   1de00:	cmp	r0, #32
   1de04:	bls	1de10 <main@@Base+0x7d88>
   1de08:	mov	r2, r1
   1de0c:	b	1de30 <main@@Base+0x7da8>
   1de10:	bne	1de20 <main@@Base+0x7d98>
   1de14:	ldrb	r0, [r2, #2]!
   1de18:	cmp	r0, #32
   1de1c:	bhi	1de30 <main@@Base+0x7da8>
   1de20:	mov	r0, r8
   1de24:	mov	r2, r5
   1de28:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1de2c:	mov	r2, r0
   1de30:	cmp	r2, r5
   1de34:	beq	1f2c0 <main@@Base+0x9238>
   1de38:	ldrb	r0, [r2]
   1de3c:	cmp	r0, #93	; 0x5d
   1de40:	bne	1dd50 <main@@Base+0x7cc8>
   1de44:	b	1f278 <main@@Base+0x91f0>
   1de48:	cmp	r0, #93	; 0x5d
   1de4c:	bne	1f1e8 <main@@Base+0x9160>
   1de50:	ldr	r5, [sp, #44]	; 0x2c
   1de54:	ldr	r8, [sp, #36]	; 0x24
   1de58:	ldr	sl, [sp, #40]	; 0x28
   1de5c:	b	1c828 <main@@Base+0x67a0>
   1de60:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1de64:	ldr	r5, [sp, #44]	; 0x2c
   1de68:	ldr	r8, [sp, #36]	; 0x24
   1de6c:	mov	r4, r1
   1de70:	str	r6, [fp, #-60]	; 0xffffffc4
   1de74:	b	1d3dc <main@@Base+0x7354>
   1de78:	mov	r0, r8
   1de7c:	mov	r1, r5
   1de80:	mov	r2, r5
   1de84:	mov	r3, #9
   1de88:	b	1bffc <main@@Base+0x5f74>
   1de8c:	add	r1, r4, #1
   1de90:	sub	r0, r5, r1
   1de94:	cmp	r0, #2
   1de98:	blt	205c0 <main@@Base+0xa538>
   1de9c:	ldrb	r0, [r1]
   1dea0:	cmp	r0, #32
   1dea4:	bls	205a0 <main@@Base+0xa518>
   1dea8:	ldr	r5, [sp, #44]	; 0x2c
   1deac:	ldr	r8, [sp, #36]	; 0x24
   1deb0:	ldr	sl, [sp, #40]	; 0x28
   1deb4:	mov	r7, r1
   1deb8:	b	1c004 <main@@Base+0x5f7c>
   1debc:	ldr	r5, [sp, #44]	; 0x2c
   1dec0:	ldr	r8, [sp, #36]	; 0x24
   1dec4:	bne	1ded4 <main@@Base+0x7e4c>
   1dec8:	ldrb	r0, [r4, #2]!
   1decc:	cmp	r0, #32
   1ded0:	bhi	1dee4 <main@@Base+0x7e5c>
   1ded4:	mov	r0, r8
   1ded8:	mov	r2, r5
   1dedc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1dee0:	mov	r4, r0
   1dee4:	cmp	r4, r5
   1dee8:	mov	r2, r5
   1deec:	beq	1df40 <main@@Base+0x7eb8>
   1def0:	ldrb	r0, [r4]
   1def4:	cmp	r0, #93	; 0x5d
   1def8:	bne	1df3c <main@@Base+0x7eb4>
   1defc:	ldr	r5, [sp, #44]	; 0x2c
   1df00:	ldr	r8, [sp, #36]	; 0x24
   1df04:	ldr	sl, [sp, #40]	; 0x28
   1df08:	add	r1, r4, #1
   1df0c:	sub	r0, r5, r1
   1df10:	cmp	r0, #2
   1df14:	blt	208b8 <main@@Base+0xa830>
   1df18:	ldrb	r0, [r1]
   1df1c:	cmp	r0, #32
   1df20:	bhi	1f378 <main@@Base+0x92f0>
   1df24:	ldr	r5, [sp, #44]	; 0x2c
   1df28:	ldr	r8, [sp, #36]	; 0x24
   1df2c:	ldr	sl, [sp, #40]	; 0x28
   1df30:	bne	208b8 <main@@Base+0xa830>
   1df34:	ldrb	r0, [r4, #2]!
   1df38:	b	208b0 <main@@Base+0xa828>
   1df3c:	mov	r2, r4
   1df40:	ldr	r5, [sp, #44]	; 0x2c
   1df44:	ldr	r8, [sp, #36]	; 0x24
   1df48:	mov	r1, r2
   1df4c:	mov	r0, r8
   1df50:	mov	r2, r5
   1df54:	add	r3, sp, #52	; 0x34
   1df58:	bl	35818 <flatcc_json_parser_build_string@@Base>
   1df5c:	mov	r4, r0
   1df60:	ldr	r0, [sp, #52]	; 0x34
   1df64:	cmp	r0, #0
   1df68:	beq	16fbc <main@@Base+0xf34>
   1df6c:	ldr	r0, [r8]
   1df70:	mov	r1, #1
   1df74:	bl	2ec6c <flatcc_builder_extend_offset_vector@@Base>
   1df78:	cmp	r0, #0
   1df7c:	beq	16fbc <main@@Base+0xf34>
   1df80:	ldr	r1, [sp, #52]	; 0x34
   1df84:	str	r1, [r0]
   1df88:	sub	r0, r5, r4
   1df8c:	cmp	r0, #2
   1df90:	blt	1dfbc <main@@Base+0x7f34>
   1df94:	ldrb	r0, [r4]
   1df98:	cmp	r0, #32
   1df9c:	bls	1dfa8 <main@@Base+0x7f20>
   1dfa0:	mov	r2, r4
   1dfa4:	b	1dfd0 <main@@Base+0x7f48>
   1dfa8:	bne	1dfbc <main@@Base+0x7f34>
   1dfac:	mov	r2, r4
   1dfb0:	ldrb	r0, [r2, #1]!
   1dfb4:	cmp	r0, #32
   1dfb8:	bhi	1dfd0 <main@@Base+0x7f48>
   1dfbc:	mov	r0, r8
   1dfc0:	mov	r1, r4
   1dfc4:	mov	r2, r5
   1dfc8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1dfcc:	mov	r2, r0
   1dfd0:	cmp	r2, r5
   1dfd4:	beq	1f318 <main@@Base+0x9290>
   1dfd8:	ldrb	r0, [r2]
   1dfdc:	cmp	r0, #44	; 0x2c
   1dfe0:	bne	1f348 <main@@Base+0x92c0>
   1dfe4:	add	r1, r2, #1
   1dfe8:	sub	r0, r5, r1
   1dfec:	cmp	r0, #2
   1dff0:	blt	1e018 <main@@Base+0x7f90>
   1dff4:	ldrb	r0, [r1]
   1dff8:	cmp	r0, #32
   1dffc:	bls	1e008 <main@@Base+0x7f80>
   1e000:	mov	r2, r1
   1e004:	b	1e028 <main@@Base+0x7fa0>
   1e008:	bne	1e018 <main@@Base+0x7f90>
   1e00c:	ldrb	r0, [r2, #2]!
   1e010:	cmp	r0, #32
   1e014:	bhi	1e028 <main@@Base+0x7fa0>
   1e018:	mov	r0, r8
   1e01c:	mov	r2, r5
   1e020:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e024:	mov	r2, r0
   1e028:	cmp	r2, r5
   1e02c:	beq	1f3b0 <main@@Base+0x9328>
   1e030:	ldrb	r0, [r2]
   1e034:	cmp	r0, #93	; 0x5d
   1e038:	bne	1df48 <main@@Base+0x7ec0>
   1e03c:	b	1f358 <main@@Base+0x92d0>
   1e040:	mov	r4, r5
   1e044:	b	1a460 <main@@Base+0x43d8>
   1e048:	cmp	r0, #93	; 0x5d
   1e04c:	bne	1f2e4 <main@@Base+0x925c>
   1e050:	ldr	r5, [sp, #44]	; 0x2c
   1e054:	ldr	r8, [sp, #36]	; 0x24
   1e058:	ldr	sl, [sp, #40]	; 0x28
   1e05c:	b	1b9cc <main@@Base+0x5944>
   1e060:	ldr	r5, [sp, #44]	; 0x2c
   1e064:	ldr	r8, [sp, #36]	; 0x24
   1e068:	bne	1e078 <main@@Base+0x7ff0>
   1e06c:	ldrb	r0, [r4, #2]!
   1e070:	cmp	r0, #32
   1e074:	bhi	1e088 <main@@Base+0x8000>
   1e078:	mov	r0, r8
   1e07c:	mov	r2, r5
   1e080:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e084:	mov	r4, r0
   1e088:	cmp	r4, r5
   1e08c:	beq	1e0f4 <main@@Base+0x806c>
   1e090:	ldrb	r0, [r4]
   1e094:	cmp	r0, #93	; 0x5d
   1e098:	bne	1e0f0 <main@@Base+0x8068>
   1e09c:	ldr	r5, [sp, #44]	; 0x2c
   1e0a0:	ldr	r8, [sp, #36]	; 0x24
   1e0a4:	ldr	sl, [sp, #40]	; 0x28
   1e0a8:	add	r1, r4, #1
   1e0ac:	sub	r0, r5, r1
   1e0b0:	cmp	r0, #2
   1e0b4:	blt	1e0e0 <main@@Base+0x8058>
   1e0b8:	ldrb	r0, [r1]
   1e0bc:	cmp	r0, #32
   1e0c0:	bhi	1f340 <main@@Base+0x92b8>
   1e0c4:	ldr	r5, [sp, #44]	; 0x2c
   1e0c8:	ldr	r8, [sp, #36]	; 0x24
   1e0cc:	ldr	sl, [sp, #40]	; 0x28
   1e0d0:	bne	1e0e0 <main@@Base+0x8058>
   1e0d4:	ldrb	r0, [r4, #2]!
   1e0d8:	cmp	r0, #32
   1e0dc:	bhi	1d8a8 <main@@Base+0x7820>
   1e0e0:	mov	r0, r8
   1e0e4:	mov	r2, r5
   1e0e8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e0ec:	b	1d8a4 <main@@Base+0x781c>
   1e0f0:	mov	r5, r4
   1e0f4:	mov	r0, #0
   1e0f8:	mov	r1, #1
   1e0fc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1e100:	ldr	r0, [sp, #36]	; 0x24
   1e104:	ldr	r0, [r0]
   1e108:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1e10c:	cmp	r0, #0
   1e110:	beq	20a5c <main@@Base+0xa9d4>
   1e114:	mov	r4, r5
   1e118:	ldr	r5, [sp, #44]	; 0x2c
   1e11c:	ldr	r8, [sp, #36]	; 0x24
   1e120:	mov	r7, r0
   1e124:	mov	r6, #0
   1e128:	cmp	r4, r5
   1e12c:	str	r6, [fp, #-52]	; 0xffffffcc
   1e130:	str	r6, [fp, #-56]	; 0xffffffc8
   1e134:	strb	r6, [fp, #-60]	; 0xffffffc4
   1e138:	str	r6, [sp, #56]	; 0x38
   1e13c:	beq	1e184 <main@@Base+0x80fc>
   1e140:	sub	r0, fp, #56	; 0x38
   1e144:	mov	r1, r4
   1e148:	mov	r2, r5
   1e14c:	add	r3, sp, #56	; 0x38
   1e150:	str	r0, [sp]
   1e154:	mov	r0, r8
   1e158:	bl	352ec <flatcc_json_parser_integer@@Base>
   1e15c:	cmp	r0, r4
   1e160:	beq	1e18c <main@@Base+0x8104>
   1e164:	mov	r1, r0
   1e168:	ldr	r0, [sp, #56]	; 0x38
   1e16c:	cmp	r0, #0
   1e170:	beq	1e194 <main@@Base+0x810c>
   1e174:	mov	r0, r8
   1e178:	mov	r2, r5
   1e17c:	mov	r3, #8
   1e180:	b	1e1bc <main@@Base+0x8134>
   1e184:	mov	r1, r5
   1e188:	b	1e1c4 <main@@Base+0x813c>
   1e18c:	mov	r1, r4
   1e190:	b	1e1c4 <main@@Base+0x813c>
   1e194:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e198:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e19c:	subs	r3, r0, #256	; 0x100
   1e1a0:	sbcs	r2, r2, #0
   1e1a4:	bcc	1e2dc <main@@Base+0x8254>
   1e1a8:	ldr	r8, [sp, #36]	; 0x24
   1e1ac:	ldr	r5, [sp, #44]	; 0x2c
   1e1b0:	mov	r3, #7
   1e1b4:	mov	r0, r8
   1e1b8:	mov	r2, r5
   1e1bc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1e1c0:	mov	r1, r0
   1e1c4:	cmp	r4, r1
   1e1c8:	bne	1e204 <main@@Base+0x817c>
   1e1cc:	movw	r3, #45216	; 0xb0a0
   1e1d0:	sub	r0, fp, #60	; 0x3c
   1e1d4:	mov	r1, r4
   1e1d8:	mov	r2, r5
   1e1dc:	movt	r3, #5
   1e1e0:	str	r0, [sp]
   1e1e4:	mov	r0, r8
   1e1e8:	bl	22990 <main@@Base+0xc908>
   1e1ec:	mov	r1, r0
   1e1f0:	cmp	r0, r4
   1e1f4:	cmpne	r1, r5
   1e1f8:	beq	20a3c <main@@Base+0xa9b4>
   1e1fc:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1e200:	ldr	r8, [sp, #36]	; 0x24
   1e204:	sub	r0, r5, r1
   1e208:	strb	r6, [r7]
   1e20c:	cmp	r0, #2
   1e210:	blt	1e23c <main@@Base+0x81b4>
   1e214:	ldrb	r0, [r1]
   1e218:	cmp	r0, #32
   1e21c:	bls	1e228 <main@@Base+0x81a0>
   1e220:	mov	r4, r1
   1e224:	b	1e24c <main@@Base+0x81c4>
   1e228:	bne	1e23c <main@@Base+0x81b4>
   1e22c:	mov	r4, r1
   1e230:	ldrb	r0, [r4, #1]!
   1e234:	cmp	r0, #32
   1e238:	bhi	1e24c <main@@Base+0x81c4>
   1e23c:	mov	r0, r8
   1e240:	mov	r2, r5
   1e244:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e248:	mov	r4, r0
   1e24c:	cmp	r4, r5
   1e250:	beq	1f2ac <main@@Base+0x9224>
   1e254:	ldrb	r0, [r4]
   1e258:	cmp	r0, #44	; 0x2c
   1e25c:	bne	1f2cc <main@@Base+0x9244>
   1e260:	add	r1, r4, #1
   1e264:	sub	r0, r5, r1
   1e268:	cmp	r0, #2
   1e26c:	blt	1e294 <main@@Base+0x820c>
   1e270:	ldrb	r0, [r1]
   1e274:	cmp	r0, #32
   1e278:	bls	1e284 <main@@Base+0x81fc>
   1e27c:	mov	r4, r1
   1e280:	b	1e2a4 <main@@Base+0x821c>
   1e284:	bne	1e294 <main@@Base+0x820c>
   1e288:	ldrb	r0, [r4, #2]!
   1e28c:	cmp	r0, #32
   1e290:	bhi	1e2a4 <main@@Base+0x821c>
   1e294:	mov	r0, r8
   1e298:	mov	r2, r5
   1e29c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e2a0:	mov	r4, r0
   1e2a4:	cmp	r4, r5
   1e2a8:	beq	1f308 <main@@Base+0x9280>
   1e2ac:	ldrb	r0, [r4]
   1e2b0:	cmp	r0, #93	; 0x5d
   1e2b4:	beq	1f324 <main@@Base+0x929c>
   1e2b8:	mov	r0, #0
   1e2bc:	mov	r1, #1
   1e2c0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1e2c4:	ldr	r0, [r8]
   1e2c8:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1e2cc:	mov	r7, r0
   1e2d0:	cmp	r0, #0
   1e2d4:	bne	1e124 <main@@Base+0x809c>
   1e2d8:	b	16fbc <main@@Base+0xf34>
   1e2dc:	ldr	r5, [sp, #44]	; 0x2c
   1e2e0:	ldr	r8, [sp, #36]	; 0x24
   1e2e4:	mov	r6, r0
   1e2e8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1e2ec:	b	1e1c4 <main@@Base+0x813c>
   1e2f0:	ldr	sl, [sp, #40]	; 0x28
   1e2f4:	mov	r4, r5
   1e2f8:	b	1bf4c <main@@Base+0x5ec4>
   1e2fc:	mov	r0, r8
   1e300:	mov	r1, r5
   1e304:	mov	r2, r5
   1e308:	mov	r3, #9
   1e30c:	b	1a458 <main@@Base+0x43d0>
   1e310:	ldr	r5, [sp, #44]	; 0x2c
   1e314:	ldr	r8, [sp, #36]	; 0x24
   1e318:	ldr	sl, [sp, #40]	; 0x28
   1e31c:	bne	1e330 <main@@Base+0x82a8>
   1e320:	ldrb	r0, [r2, #2]!
   1e324:	mov	r4, r2
   1e328:	cmp	r0, #32
   1e32c:	bhi	1f824 <main@@Base+0x979c>
   1e330:	mov	r0, r8
   1e334:	mov	r2, r5
   1e338:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e33c:	b	1f820 <main@@Base+0x9798>
   1e340:	cmp	r0, #93	; 0x5d
   1e344:	bne	1f38c <main@@Base+0x9304>
   1e348:	ldr	r5, [sp, #44]	; 0x2c
   1e34c:	ldr	r8, [sp, #36]	; 0x24
   1e350:	add	r1, r2, #1
   1e354:	sub	r0, r5, r1
   1e358:	cmp	r0, #2
   1e35c:	ldr	sl, [sp, #40]	; 0x28
   1e360:	blt	20560 <main@@Base+0xa4d8>
   1e364:	ldrb	r0, [r1]
   1e368:	cmp	r0, #32
   1e36c:	bls	20540 <main@@Base+0xa4b8>
   1e370:	ldr	r5, [sp, #44]	; 0x2c
   1e374:	ldr	r8, [sp, #36]	; 0x24
   1e378:	ldr	sl, [sp, #40]	; 0x28
   1e37c:	mov	r4, r1
   1e380:	b	1bf4c <main@@Base+0x5ec4>
   1e384:	mov	r0, r8
   1e388:	mov	r1, r5
   1e38c:	b	1f39c <main@@Base+0x9314>
   1e390:	ldr	r5, [sp, #44]	; 0x2c
   1e394:	ldr	r8, [sp, #36]	; 0x24
   1e398:	bne	1e3a8 <main@@Base+0x8320>
   1e39c:	ldrb	r0, [r4, #2]!
   1e3a0:	cmp	r0, #32
   1e3a4:	bhi	1e3b8 <main@@Base+0x8330>
   1e3a8:	mov	r0, r8
   1e3ac:	mov	r2, r5
   1e3b0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e3b4:	mov	r4, r0
   1e3b8:	cmp	r4, r5
   1e3bc:	mov	r2, r5
   1e3c0:	beq	1e414 <main@@Base+0x838c>
   1e3c4:	ldrb	r0, [r4]
   1e3c8:	cmp	r0, #125	; 0x7d
   1e3cc:	bne	1e410 <main@@Base+0x8388>
   1e3d0:	ldr	r5, [sp, #44]	; 0x2c
   1e3d4:	ldr	r8, [sp, #36]	; 0x24
   1e3d8:	ldr	sl, [sp, #40]	; 0x28
   1e3dc:	add	r1, r4, #1
   1e3e0:	sub	r0, r5, r1
   1e3e4:	cmp	r0, #2
   1e3e8:	blt	2076c <main@@Base+0xa6e4>
   1e3ec:	ldrb	r0, [r1]
   1e3f0:	cmp	r0, #32
   1e3f4:	bhi	1f254 <main@@Base+0x91cc>
   1e3f8:	ldr	r5, [sp, #44]	; 0x2c
   1e3fc:	ldr	r8, [sp, #36]	; 0x24
   1e400:	ldr	sl, [sp, #40]	; 0x28
   1e404:	bne	2076c <main@@Base+0xa6e4>
   1e408:	ldrb	r0, [r4, #2]!
   1e40c:	b	20764 <main@@Base+0xa6dc>
   1e410:	mov	r2, r4
   1e414:	ldr	r5, [sp, #44]	; 0x2c
   1e418:	ldr	r8, [sp, #36]	; 0x24
   1e41c:	cmp	r2, r5
   1e420:	mov	r9, r5
   1e424:	beq	1e478 <main@@Base+0x83f0>
   1e428:	ldrb	r0, [r2]
   1e42c:	cmp	r0, #46	; 0x2e
   1e430:	beq	1e44c <main@@Base+0x83c4>
   1e434:	cmp	r0, #34	; 0x22
   1e438:	bne	1e468 <main@@Base+0x83e0>
   1e43c:	ldr	r0, [sp, #32]
   1e440:	mov	r1, #0
   1e444:	add	r9, r2, #1
   1e448:	b	1e474 <main@@Base+0x83ec>
   1e44c:	mov	r1, r2
   1e450:	mov	r0, r8
   1e454:	mov	r2, r5
   1e458:	mov	r3, #5
   1e45c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1e460:	mov	r9, r0
   1e464:	b	1e478 <main@@Base+0x83f0>
   1e468:	ldr	r0, [sp, #32]
   1e46c:	mov	r1, #1
   1e470:	mov	r9, r2
   1e474:	str	r1, [r0]
   1e478:	sub	lr, r5, r9
   1e47c:	mov	r0, #8
   1e480:	cmp	lr, #8
   1e484:	movcc	r0, lr
   1e488:	sub	r7, r0, #1
   1e48c:	cmp	r7, #7
   1e490:	bhi	1e614 <main@@Base+0x858c>
   1e494:	add	r4, pc, #32
   1e498:	mov	r1, #0
   1e49c:	mov	ip, #0
   1e4a0:	mov	r8, #0
   1e4a4:	mov	r6, #0
   1e4a8:	mov	r3, #0
   1e4ac:	mov	r5, #0
   1e4b0:	mov	r2, #0
   1e4b4:	mov	r0, #0
   1e4b8:	ldr	pc, [r4, r7, lsl #2]
   1e4bc:	andeq	lr, r1, r0, lsr #10
   1e4c0:	andeq	lr, r1, r8, lsl r5
   1e4c4:	andeq	lr, r1, r0, lsl r5
   1e4c8:	andeq	lr, r1, r8, lsl #10
   1e4cc:	strdeq	lr, [r1], -ip
   1e4d0:	strdeq	lr, [r1], -r0
   1e4d4:	andeq	lr, r1, r0, ror #9
   1e4d8:	ldrdeq	lr, [r1], -ip
   1e4dc:	ldrb	ip, [r9, #7]
   1e4e0:	ldrb	r0, [r9, #6]
   1e4e4:	mov	r8, r1
   1e4e8:	orr	r0, ip, r0, lsl #8
   1e4ec:	mov	r1, r0
   1e4f0:	ldrb	r0, [r9, #5]
   1e4f4:	mov	r6, r8
   1e4f8:	orr	r1, r1, r0, lsl #16
   1e4fc:	ldrb	r0, [r9, #4]
   1e500:	mov	r3, r6
   1e504:	orr	r1, r1, r0, lsl #24
   1e508:	ldrb	r0, [r9, #3]
   1e50c:	orr	r5, r0, r3
   1e510:	ldrb	r0, [r9, #2]
   1e514:	orr	r2, r5, r0, lsl #8
   1e518:	ldrb	r0, [r9, #1]
   1e51c:	orr	r0, r2, r0, lsl #16
   1e520:	ldrb	r2, [r9]
   1e524:	orr	r2, r0, r2, lsl #24
   1e528:	movw	r0, #0
   1e52c:	movt	r0, #25956	; 0x6564
   1e530:	subs	r0, r1, r0
   1e534:	movw	r0, #29556	; 0x7374
   1e538:	movt	r0, #28261	; 0x6e65
   1e53c:	sbcs	r0, r2, r0
   1e540:	bcs	1e5a4 <main@@Base+0x851c>
   1e544:	movw	r0, #29793	; 0x7461
   1e548:	ldr	r5, [sp, #44]	; 0x2c
   1e54c:	ldr	r8, [sp, #36]	; 0x24
   1e550:	movt	r0, #25697	; 0x6461
   1e554:	teq	r2, r0
   1e558:	bne	1e614 <main@@Base+0x858c>
   1e55c:	cmp	lr, #5
   1e560:	mov	r1, r9
   1e564:	blt	1e8c0 <main@@Base+0x8838>
   1e568:	ldr	r1, [sp, #32]
   1e56c:	mov	r2, r9
   1e570:	ldrb	r0, [r2, #4]!
   1e574:	ldr	r1, [r1]
   1e578:	cmp	r1, #0
   1e57c:	beq	1e68c <main@@Base+0x8604>
   1e580:	cmp	r0, #33	; 0x21
   1e584:	bcc	1e594 <main@@Base+0x850c>
   1e588:	cmp	r0, #58	; 0x3a
   1e58c:	mov	r1, r9
   1e590:	bne	1e8c0 <main@@Base+0x8838>
   1e594:	ldr	r0, [sp, #32]
   1e598:	mov	r1, #0
   1e59c:	str	r1, [r0]
   1e5a0:	b	1e69c <main@@Base+0x8614>
   1e5a4:	movw	r0, #29292	; 0x726c
   1e5a8:	lsr	r3, r1, #8
   1e5ac:	movw	r7, #29793	; 0x7461
   1e5b0:	movt	r0, #117	; 0x75
   1e5b4:	orr	r3, r3, r2, lsl #24
   1e5b8:	movt	r7, #25697	; 0x6461
   1e5bc:	eor	r0, r0, r2, lsr #8
   1e5c0:	eor	r3, r3, r7
   1e5c4:	orrs	r0, r3, r0
   1e5c8:	bne	1e620 <main@@Base+0x8598>
   1e5cc:	cmp	lr, #8
   1e5d0:	mov	r1, r9
   1e5d4:	blt	1e920 <main@@Base+0x8898>
   1e5d8:	ldr	r1, [sp, #32]
   1e5dc:	mov	r2, r9
   1e5e0:	ldrb	r0, [r2, #7]!
   1e5e4:	ldr	r1, [r1]
   1e5e8:	cmp	r1, #0
   1e5ec:	beq	1e6c0 <main@@Base+0x8638>
   1e5f0:	cmp	r0, #33	; 0x21
   1e5f4:	bcc	1e604 <main@@Base+0x857c>
   1e5f8:	cmp	r0, #58	; 0x3a
   1e5fc:	mov	r1, r9
   1e600:	bne	1e920 <main@@Base+0x8898>
   1e604:	ldr	r0, [sp, #32]
   1e608:	mov	r1, #0
   1e60c:	str	r1, [r0]
   1e610:	b	1e6d0 <main@@Base+0x8648>
   1e614:	mov	r0, r8
   1e618:	mov	r1, r9
   1e61c:	b	1e9ec <main@@Base+0x8964>
   1e620:	movw	r0, #29556	; 0x7374
   1e624:	bfc	r1, #0, #16
   1e628:	movt	r0, #28261	; 0x6e65
   1e62c:	eor	r0, r2, r0
   1e630:	movw	r2, #0
   1e634:	movt	r2, #25956	; 0x6564
   1e638:	eor	r1, r1, r2
   1e63c:	orrs	r0, r1, r0
   1e640:	bne	1e9dc <main@@Base+0x8954>
   1e644:	cmp	lr, #7
   1e648:	mov	r1, r9
   1e64c:	blt	1e980 <main@@Base+0x88f8>
   1e650:	ldr	r1, [sp, #32]
   1e654:	mov	r2, r9
   1e658:	ldrb	r0, [r2, #6]!
   1e65c:	ldr	r1, [r1]
   1e660:	cmp	r1, #0
   1e664:	beq	1e6f4 <main@@Base+0x866c>
   1e668:	cmp	r0, #33	; 0x21
   1e66c:	bcc	1e67c <main@@Base+0x85f4>
   1e670:	cmp	r0, #58	; 0x3a
   1e674:	mov	r1, r9
   1e678:	bne	1e980 <main@@Base+0x88f8>
   1e67c:	ldr	r0, [sp, #32]
   1e680:	mov	r1, #0
   1e684:	str	r1, [r0]
   1e688:	b	1e704 <main@@Base+0x867c>
   1e68c:	cmp	r0, #34	; 0x22
   1e690:	mov	r1, r9
   1e694:	bne	1e8c0 <main@@Base+0x8838>
   1e698:	add	r2, r9, #5
   1e69c:	ldr	r0, [sp, #44]	; 0x2c
   1e6a0:	sub	r0, r0, r2
   1e6a4:	cmp	r0, #2
   1e6a8:	blt	1e73c <main@@Base+0x86b4>
   1e6ac:	ldrb	r0, [r2]
   1e6b0:	cmp	r0, #32
   1e6b4:	bls	1e728 <main@@Base+0x86a0>
   1e6b8:	mov	r1, r2
   1e6bc:	b	1e750 <main@@Base+0x86c8>
   1e6c0:	cmp	r0, #34	; 0x22
   1e6c4:	mov	r1, r9
   1e6c8:	bne	1e920 <main@@Base+0x8898>
   1e6cc:	add	r2, r9, #8
   1e6d0:	ldr	r0, [sp, #44]	; 0x2c
   1e6d4:	sub	r0, r0, r2
   1e6d8:	cmp	r0, #2
   1e6dc:	blt	1e7b8 <main@@Base+0x8730>
   1e6e0:	ldrb	r0, [r2]
   1e6e4:	cmp	r0, #32
   1e6e8:	bls	1e7a4 <main@@Base+0x871c>
   1e6ec:	mov	r1, r2
   1e6f0:	b	1e7cc <main@@Base+0x8744>
   1e6f4:	cmp	r0, #34	; 0x22
   1e6f8:	mov	r1, r9
   1e6fc:	bne	1e980 <main@@Base+0x88f8>
   1e700:	add	r2, r9, #7
   1e704:	ldr	r0, [sp, #44]	; 0x2c
   1e708:	sub	r0, r0, r2
   1e70c:	cmp	r0, #2
   1e710:	blt	1e834 <main@@Base+0x87ac>
   1e714:	ldrb	r0, [r2]
   1e718:	cmp	r0, #32
   1e71c:	bls	1e820 <main@@Base+0x8798>
   1e720:	mov	r1, r2
   1e724:	b	1e848 <main@@Base+0x87c0>
   1e728:	bne	1e73c <main@@Base+0x86b4>
   1e72c:	mov	r1, r2
   1e730:	ldrb	r0, [r1, #1]!
   1e734:	cmp	r0, #32
   1e738:	bhi	1e750 <main@@Base+0x86c8>
   1e73c:	mov	r1, r2
   1e740:	ldr	r0, [sp, #36]	; 0x24
   1e744:	ldr	r2, [sp, #44]	; 0x2c
   1e748:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e74c:	mov	r1, r0
   1e750:	ldr	r0, [sp, #44]	; 0x2c
   1e754:	cmp	r1, r0
   1e758:	beq	1e790 <main@@Base+0x8708>
   1e75c:	ldrb	r0, [r1]
   1e760:	cmp	r0, #58	; 0x3a
   1e764:	bne	1e790 <main@@Base+0x8708>
   1e768:	ldr	r0, [sp, #44]	; 0x2c
   1e76c:	add	r2, r1, #1
   1e770:	sub	r0, r0, r2
   1e774:	cmp	r0, #2
   1e778:	blt	1e8ac <main@@Base+0x8824>
   1e77c:	ldrb	r0, [r2]
   1e780:	cmp	r0, #32
   1e784:	bls	1e89c <main@@Base+0x8814>
   1e788:	mov	r1, r2
   1e78c:	b	1e8c0 <main@@Base+0x8838>
   1e790:	ldr	r0, [sp, #36]	; 0x24
   1e794:	ldr	r2, [sp, #44]	; 0x2c
   1e798:	mov	r3, #4
   1e79c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1e7a0:	b	1e8bc <main@@Base+0x8834>
   1e7a4:	bne	1e7b8 <main@@Base+0x8730>
   1e7a8:	mov	r1, r2
   1e7ac:	ldrb	r0, [r1, #1]!
   1e7b0:	cmp	r0, #32
   1e7b4:	bhi	1e7cc <main@@Base+0x8744>
   1e7b8:	mov	r1, r2
   1e7bc:	ldr	r0, [sp, #36]	; 0x24
   1e7c0:	ldr	r2, [sp, #44]	; 0x2c
   1e7c4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e7c8:	mov	r1, r0
   1e7cc:	ldr	r0, [sp, #44]	; 0x2c
   1e7d0:	cmp	r1, r0
   1e7d4:	beq	1e80c <main@@Base+0x8784>
   1e7d8:	ldrb	r0, [r1]
   1e7dc:	cmp	r0, #58	; 0x3a
   1e7e0:	bne	1e80c <main@@Base+0x8784>
   1e7e4:	ldr	r0, [sp, #44]	; 0x2c
   1e7e8:	add	r2, r1, #1
   1e7ec:	sub	r0, r0, r2
   1e7f0:	cmp	r0, #2
   1e7f4:	blt	1e90c <main@@Base+0x8884>
   1e7f8:	ldrb	r0, [r2]
   1e7fc:	cmp	r0, #32
   1e800:	bls	1e8fc <main@@Base+0x8874>
   1e804:	mov	r1, r2
   1e808:	b	1e920 <main@@Base+0x8898>
   1e80c:	ldr	r0, [sp, #36]	; 0x24
   1e810:	ldr	r2, [sp, #44]	; 0x2c
   1e814:	mov	r3, #4
   1e818:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1e81c:	b	1e91c <main@@Base+0x8894>
   1e820:	bne	1e834 <main@@Base+0x87ac>
   1e824:	mov	r1, r2
   1e828:	ldrb	r0, [r1, #1]!
   1e82c:	cmp	r0, #32
   1e830:	bhi	1e848 <main@@Base+0x87c0>
   1e834:	mov	r1, r2
   1e838:	ldr	r0, [sp, #36]	; 0x24
   1e83c:	ldr	r2, [sp, #44]	; 0x2c
   1e840:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e844:	mov	r1, r0
   1e848:	ldr	r0, [sp, #44]	; 0x2c
   1e84c:	cmp	r1, r0
   1e850:	beq	1e888 <main@@Base+0x8800>
   1e854:	ldrb	r0, [r1]
   1e858:	cmp	r0, #58	; 0x3a
   1e85c:	bne	1e888 <main@@Base+0x8800>
   1e860:	ldr	r0, [sp, #44]	; 0x2c
   1e864:	add	r2, r1, #1
   1e868:	sub	r0, r0, r2
   1e86c:	cmp	r0, #2
   1e870:	blt	1e96c <main@@Base+0x88e4>
   1e874:	ldrb	r0, [r2]
   1e878:	cmp	r0, #32
   1e87c:	bls	1e95c <main@@Base+0x88d4>
   1e880:	mov	r1, r2
   1e884:	b	1e980 <main@@Base+0x88f8>
   1e888:	ldr	r0, [sp, #36]	; 0x24
   1e88c:	ldr	r2, [sp, #44]	; 0x2c
   1e890:	mov	r3, #4
   1e894:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1e898:	b	1e97c <main@@Base+0x88f4>
   1e89c:	bne	1e8ac <main@@Base+0x8824>
   1e8a0:	ldrb	r0, [r1, #2]!
   1e8a4:	cmp	r0, #32
   1e8a8:	bhi	1e8c0 <main@@Base+0x8838>
   1e8ac:	mov	r1, r2
   1e8b0:	ldr	r0, [sp, #36]	; 0x24
   1e8b4:	ldr	r2, [sp, #44]	; 0x2c
   1e8b8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e8bc:	mov	r1, r0
   1e8c0:	cmp	r9, r1
   1e8c4:	beq	1e9dc <main@@Base+0x8954>
   1e8c8:	mov	r0, #0
   1e8cc:	ldr	r2, [sp, #44]	; 0x2c
   1e8d0:	sub	r3, fp, #56	; 0x38
   1e8d4:	str	r0, [sp]
   1e8d8:	ldr	r0, [sp, #36]	; 0x24
   1e8dc:	bl	3543c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e8e0:	mov	r4, r0
   1e8e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e8e8:	cmp	r0, #0
   1e8ec:	beq	1fbf8 <main@@Base+0x9b70>
   1e8f0:	ldr	r0, [sp, #36]	; 0x24
   1e8f4:	mov	r1, #0
   1e8f8:	b	1e9b8 <main@@Base+0x8930>
   1e8fc:	bne	1e90c <main@@Base+0x8884>
   1e900:	ldrb	r0, [r1, #2]!
   1e904:	cmp	r0, #32
   1e908:	bhi	1e920 <main@@Base+0x8898>
   1e90c:	mov	r1, r2
   1e910:	ldr	r0, [sp, #36]	; 0x24
   1e914:	ldr	r2, [sp, #44]	; 0x2c
   1e918:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e91c:	mov	r1, r0
   1e920:	cmp	r9, r1
   1e924:	beq	1e9dc <main@@Base+0x8954>
   1e928:	mov	r0, #1
   1e92c:	ldr	r2, [sp, #44]	; 0x2c
   1e930:	sub	r3, fp, #56	; 0x38
   1e934:	str	r0, [sp]
   1e938:	ldr	r0, [sp, #36]	; 0x24
   1e93c:	bl	3543c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e940:	mov	r4, r0
   1e944:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e948:	cmp	r0, #0
   1e94c:	beq	1fbf8 <main@@Base+0x9b70>
   1e950:	ldr	r0, [sp, #36]	; 0x24
   1e954:	mov	r1, #1
   1e958:	b	1e9b8 <main@@Base+0x8930>
   1e95c:	bne	1e96c <main@@Base+0x88e4>
   1e960:	ldrb	r0, [r1, #2]!
   1e964:	cmp	r0, #32
   1e968:	bhi	1e980 <main@@Base+0x88f8>
   1e96c:	mov	r1, r2
   1e970:	ldr	r0, [sp, #36]	; 0x24
   1e974:	ldr	r2, [sp, #44]	; 0x2c
   1e978:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1e97c:	mov	r1, r0
   1e980:	cmp	r9, r1
   1e984:	beq	1e9dc <main@@Base+0x8954>
   1e988:	mov	r0, #0
   1e98c:	ldr	r2, [sp, #44]	; 0x2c
   1e990:	sub	r3, fp, #56	; 0x38
   1e994:	str	r0, [sp]
   1e998:	ldr	r0, [sp, #36]	; 0x24
   1e99c:	bl	3543c <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e9a0:	mov	r4, r0
   1e9a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e9a8:	cmp	r0, #0
   1e9ac:	beq	1fbf8 <main@@Base+0x9b70>
   1e9b0:	ldr	r0, [sp, #36]	; 0x24
   1e9b4:	mov	r1, #2
   1e9b8:	ldr	r0, [r0]
   1e9bc:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   1e9c0:	cmp	r0, #0
   1e9c4:	beq	1fbf8 <main@@Base+0x9b70>
   1e9c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1e9cc:	str	r1, [r0]
   1e9d0:	ldr	r5, [sp, #44]	; 0x2c
   1e9d4:	ldr	r8, [sp, #36]	; 0x24
   1e9d8:	b	1e9f8 <main@@Base+0x8970>
   1e9dc:	ldr	r8, [sp, #36]	; 0x24
   1e9e0:	ldr	r5, [sp, #44]	; 0x2c
   1e9e4:	mov	r1, r9
   1e9e8:	mov	r0, r8
   1e9ec:	mov	r2, r5
   1e9f0:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   1e9f4:	mov	r4, r0
   1e9f8:	sub	r0, r5, r4
   1e9fc:	cmp	r0, #2
   1ea00:	blt	1ea2c <main@@Base+0x89a4>
   1ea04:	ldrb	r0, [r4]
   1ea08:	cmp	r0, #32
   1ea0c:	bls	1ea18 <main@@Base+0x8990>
   1ea10:	mov	r2, r4
   1ea14:	b	1ea40 <main@@Base+0x89b8>
   1ea18:	bne	1ea2c <main@@Base+0x89a4>
   1ea1c:	mov	r2, r4
   1ea20:	ldrb	r0, [r2, #1]!
   1ea24:	cmp	r0, #32
   1ea28:	bhi	1ea40 <main@@Base+0x89b8>
   1ea2c:	mov	r0, r8
   1ea30:	mov	r1, r4
   1ea34:	mov	r2, r5
   1ea38:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ea3c:	mov	r2, r0
   1ea40:	cmp	r2, r5
   1ea44:	beq	1f20c <main@@Base+0x9184>
   1ea48:	ldrb	r0, [r2]
   1ea4c:	cmp	r0, #44	; 0x2c
   1ea50:	bne	1f224 <main@@Base+0x919c>
   1ea54:	add	r1, r2, #1
   1ea58:	sub	r0, r5, r1
   1ea5c:	cmp	r0, #2
   1ea60:	blt	1ea88 <main@@Base+0x8a00>
   1ea64:	ldrb	r0, [r1]
   1ea68:	cmp	r0, #32
   1ea6c:	bls	1ea78 <main@@Base+0x89f0>
   1ea70:	mov	r2, r1
   1ea74:	b	1ea98 <main@@Base+0x8a10>
   1ea78:	bne	1ea88 <main@@Base+0x8a00>
   1ea7c:	ldrb	r0, [r2, #2]!
   1ea80:	cmp	r0, #32
   1ea84:	bhi	1ea98 <main@@Base+0x8a10>
   1ea88:	mov	r0, r8
   1ea8c:	mov	r2, r5
   1ea90:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ea94:	mov	r2, r0
   1ea98:	cmp	r2, r5
   1ea9c:	beq	1f2b4 <main@@Base+0x922c>
   1eaa0:	ldrb	r0, [r2]
   1eaa4:	cmp	r0, #125	; 0x7d
   1eaa8:	bne	1e41c <main@@Base+0x8394>
   1eaac:	b	1f234 <main@@Base+0x91ac>
   1eab0:	ldr	r5, [sp, #44]	; 0x2c
   1eab4:	ldr	r8, [sp, #36]	; 0x24
   1eab8:	bne	1eac8 <main@@Base+0x8a40>
   1eabc:	ldrb	r0, [r4, #2]!
   1eac0:	cmp	r0, #32
   1eac4:	bhi	1ead8 <main@@Base+0x8a50>
   1eac8:	mov	r0, r8
   1eacc:	mov	r2, r5
   1ead0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ead4:	mov	r4, r0
   1ead8:	cmp	r4, r5
   1eadc:	beq	1eb20 <main@@Base+0x8a98>
   1eae0:	ldrb	r0, [r4]
   1eae4:	cmp	r0, #93	; 0x5d
   1eae8:	bne	1eb1c <main@@Base+0x8a94>
   1eaec:	ldr	r5, [sp, #44]	; 0x2c
   1eaf0:	ldr	r8, [sp, #36]	; 0x24
   1eaf4:	ldr	sl, [sp, #40]	; 0x28
   1eaf8:	add	r1, r4, #1
   1eafc:	sub	r0, r5, r1
   1eb00:	cmp	r0, #2
   1eb04:	blt	2058c <main@@Base+0xa504>
   1eb08:	ldrb	r0, [r1]
   1eb0c:	cmp	r0, #32
   1eb10:	bls	20570 <main@@Base+0xa4e8>
   1eb14:	mov	r4, r1
   1eb18:	b	20948 <main@@Base+0xa8c0>
   1eb1c:	mov	r5, r4
   1eb20:	mov	r0, #0
   1eb24:	mov	r1, #1
   1eb28:	str	r0, [sp, #60]	; 0x3c
   1eb2c:	str	r0, [sp, #56]	; 0x38
   1eb30:	ldr	r0, [sp, #36]	; 0x24
   1eb34:	ldr	r0, [r0]
   1eb38:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1eb3c:	cmp	r0, #0
   1eb40:	beq	20a5c <main@@Base+0xa9d4>
   1eb44:	mov	r4, r5
   1eb48:	ldr	r5, [sp, #44]	; 0x2c
   1eb4c:	ldr	r8, [sp, #36]	; 0x24
   1eb50:	mov	r7, r0
   1eb54:	mov	r0, #0
   1eb58:	cmp	r4, r5
   1eb5c:	str	r0, [fp, #-52]	; 0xffffffcc
   1eb60:	str	r0, [fp, #-56]	; 0xffffffc8
   1eb64:	str	r0, [sp, #60]	; 0x3c
   1eb68:	str	r0, [sp, #56]	; 0x38
   1eb6c:	str	r0, [fp, #-60]	; 0xffffffc4
   1eb70:	beq	1ebd0 <main@@Base+0x8b48>
   1eb74:	sub	r0, fp, #56	; 0x38
   1eb78:	mov	r1, r4
   1eb7c:	mov	r2, r5
   1eb80:	sub	r3, fp, #60	; 0x3c
   1eb84:	str	r0, [sp]
   1eb88:	mov	r0, r8
   1eb8c:	bl	352ec <flatcc_json_parser_integer@@Base>
   1eb90:	cmp	r0, r4
   1eb94:	beq	1ebdc <main@@Base+0x8b54>
   1eb98:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1eb9c:	mov	r1, r0
   1eba0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1eba4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1eba8:	cmp	r2, #0
   1ebac:	beq	1ebec <main@@Base+0x8b64>
   1ebb0:	rsbs	r2, r0, #0
   1ebb4:	mov	r2, #-2147483648	; 0x80000000
   1ebb8:	sbcs	r2, r2, r3
   1ebbc:	bcs	1ec1c <main@@Base+0x8b94>
   1ebc0:	ldr	r8, [sp, #36]	; 0x24
   1ebc4:	ldr	r5, [sp, #44]	; 0x2c
   1ebc8:	mov	r3, #8
   1ebcc:	b	1ec00 <main@@Base+0x8b78>
   1ebd0:	mov	r3, #0
   1ebd4:	mov	r1, r5
   1ebd8:	b	1ec34 <main@@Base+0x8bac>
   1ebdc:	mov	r0, #0
   1ebe0:	mov	r3, #0
   1ebe4:	mov	r1, r4
   1ebe8:	b	1ec34 <main@@Base+0x8bac>
   1ebec:	cmn	r3, #1
   1ebf0:	bgt	1ec24 <main@@Base+0x8b9c>
   1ebf4:	ldr	r8, [sp, #36]	; 0x24
   1ebf8:	ldr	r5, [sp, #44]	; 0x2c
   1ebfc:	mov	r3, #7
   1ec00:	mov	r0, r8
   1ec04:	mov	r2, r5
   1ec08:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1ec0c:	mov	r1, r0
   1ec10:	mov	r0, #0
   1ec14:	mov	r3, #0
   1ec18:	b	1ec34 <main@@Base+0x8bac>
   1ec1c:	rsbs	r0, r0, #0
   1ec20:	rsc	r3, r3, #0
   1ec24:	ldr	r5, [sp, #44]	; 0x2c
   1ec28:	ldr	r8, [sp, #36]	; 0x24
   1ec2c:	str	r0, [sp, #56]	; 0x38
   1ec30:	str	r3, [sp, #60]	; 0x3c
   1ec34:	cmp	r4, r1
   1ec38:	bne	1ec78 <main@@Base+0x8bf0>
   1ec3c:	movw	r3, #45436	; 0xb17c
   1ec40:	add	r0, sp, #56	; 0x38
   1ec44:	mov	r1, r4
   1ec48:	mov	r2, r5
   1ec4c:	movt	r3, #5
   1ec50:	str	r0, [sp]
   1ec54:	mov	r0, r8
   1ec58:	bl	24dc4 <main@@Base+0xed3c>
   1ec5c:	mov	r1, r0
   1ec60:	cmp	r0, r4
   1ec64:	cmpne	r1, r5
   1ec68:	beq	20a3c <main@@Base+0xa9b4>
   1ec6c:	ldr	r0, [sp, #56]	; 0x38
   1ec70:	ldr	r3, [sp, #60]	; 0x3c
   1ec74:	ldr	r8, [sp, #36]	; 0x24
   1ec78:	stm	r7, {r0, r3}
   1ec7c:	sub	r0, r5, r1
   1ec80:	cmp	r0, #2
   1ec84:	blt	1ecb0 <main@@Base+0x8c28>
   1ec88:	ldrb	r0, [r1]
   1ec8c:	cmp	r0, #32
   1ec90:	bls	1ec9c <main@@Base+0x8c14>
   1ec94:	mov	r4, r1
   1ec98:	b	1ecc0 <main@@Base+0x8c38>
   1ec9c:	bne	1ecb0 <main@@Base+0x8c28>
   1eca0:	mov	r4, r1
   1eca4:	ldrb	r0, [r4, #1]!
   1eca8:	cmp	r0, #32
   1ecac:	bhi	1ecc0 <main@@Base+0x8c38>
   1ecb0:	mov	r0, r8
   1ecb4:	mov	r2, r5
   1ecb8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ecbc:	mov	r4, r0
   1ecc0:	cmp	r4, r5
   1ecc4:	beq	2078c <main@@Base+0xa704>
   1ecc8:	ldrb	r0, [r4]
   1eccc:	cmp	r0, #44	; 0x2c
   1ecd0:	bne	207c4 <main@@Base+0xa73c>
   1ecd4:	add	r1, r4, #1
   1ecd8:	sub	r0, r5, r1
   1ecdc:	cmp	r0, #2
   1ece0:	blt	1ed08 <main@@Base+0x8c80>
   1ece4:	ldrb	r0, [r1]
   1ece8:	cmp	r0, #32
   1ecec:	bls	1ecf8 <main@@Base+0x8c70>
   1ecf0:	mov	r4, r1
   1ecf4:	b	1ed18 <main@@Base+0x8c90>
   1ecf8:	bne	1ed08 <main@@Base+0x8c80>
   1ecfc:	ldrb	r0, [r4, #2]!
   1ed00:	cmp	r0, #32
   1ed04:	bhi	1ed18 <main@@Base+0x8c90>
   1ed08:	mov	r0, r8
   1ed0c:	mov	r2, r5
   1ed10:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ed14:	mov	r4, r0
   1ed18:	cmp	r4, r5
   1ed1c:	beq	2080c <main@@Base+0xa784>
   1ed20:	ldrb	r0, [r4]
   1ed24:	cmp	r0, #93	; 0x5d
   1ed28:	beq	20824 <main@@Base+0xa79c>
   1ed2c:	mov	r0, #0
   1ed30:	mov	r1, #1
   1ed34:	str	r0, [sp, #60]	; 0x3c
   1ed38:	str	r0, [sp, #56]	; 0x38
   1ed3c:	ldr	r0, [r8]
   1ed40:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1ed44:	mov	r7, r0
   1ed48:	cmp	r0, #0
   1ed4c:	bne	1eb54 <main@@Base+0x8acc>
   1ed50:	b	16fbc <main@@Base+0xf34>
   1ed54:	ldr	r5, [sp, #44]	; 0x2c
   1ed58:	ldr	r8, [sp, #36]	; 0x24
   1ed5c:	ldr	sl, [sp, #40]	; 0x28
   1ed60:	bne	1ed70 <main@@Base+0x8ce8>
   1ed64:	ldrb	r0, [r9, #2]!
   1ed68:	cmp	r0, #32
   1ed6c:	bhi	1ed80 <main@@Base+0x8cf8>
   1ed70:	mov	r0, r8
   1ed74:	mov	r2, r5
   1ed78:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ed7c:	mov	r9, r0
   1ed80:	cmp	r7, r9
   1ed84:	beq	1eddc <main@@Base+0x8d54>
   1ed88:	ldr	r0, [r8]
   1ed8c:	mov	r1, #8
   1ed90:	mov	r2, #8
   1ed94:	mvn	r3, #-536870912	; 0xe0000000
   1ed98:	bl	2f20c <flatcc_builder_start_vector@@Base>
   1ed9c:	cmp	r0, #0
   1eda0:	bne	20a50 <main@@Base+0xa9c8>
   1eda4:	cmp	r9, r5
   1eda8:	beq	1ede8 <main@@Base+0x8d60>
   1edac:	ldrb	r0, [r9]
   1edb0:	cmp	r0, #91	; 0x5b
   1edb4:	bne	1ede8 <main@@Base+0x8d60>
   1edb8:	add	r1, r9, #1
   1edbc:	sub	r0, r5, r1
   1edc0:	cmp	r0, #2
   1edc4:	blt	1f3cc <main@@Base+0x9344>
   1edc8:	ldrb	r0, [r1]
   1edcc:	cmp	r0, #32
   1edd0:	bls	1f3bc <main@@Base+0x9334>
   1edd4:	mov	r9, r1
   1edd8:	b	1f3dc <main@@Base+0x9354>
   1eddc:	mov	r0, r8
   1ede0:	mov	r1, r7
   1ede4:	b	1f818 <main@@Base+0x9790>
   1ede8:	ldr	r8, [sp, #36]	; 0x24
   1edec:	mov	r1, r9
   1edf0:	mov	r2, r5
   1edf4:	mov	r3, #22
   1edf8:	mov	r0, r8
   1edfc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1ee00:	mov	r9, r0
   1ee04:	ldr	r0, [r8]
   1ee08:	bl	30238 <flatcc_builder_end_vector@@Base>
   1ee0c:	cmp	r0, #0
   1ee10:	str	r0, [sp, #52]	; 0x34
   1ee14:	beq	20a48 <main@@Base+0xa9c0>
   1ee18:	ldr	r0, [r8]
   1ee1c:	mov	r1, #33	; 0x21
   1ee20:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   1ee24:	cmp	r0, #0
   1ee28:	beq	20a48 <main@@Base+0xa9c0>
   1ee2c:	ldr	r1, [sp, #52]	; 0x34
   1ee30:	mov	r4, r9
   1ee34:	str	r1, [r0]
   1ee38:	b	1f994 <main@@Base+0x990c>
   1ee3c:	mov	r6, r0
   1ee40:	ldr	r5, [sp, #44]	; 0x2c
   1ee44:	ldr	r8, [sp, #36]	; 0x24
   1ee48:	str	r6, [fp, #-60]	; 0xffffffc4
   1ee4c:	ldr	sl, [sp, #40]	; 0x28
   1ee50:	cmp	r7, r4
   1ee54:	bne	1ee9c <main@@Base+0x8e14>
   1ee58:	movw	r3, #45328	; 0xb110
   1ee5c:	sub	r0, fp, #60	; 0x3c
   1ee60:	mov	r1, r7
   1ee64:	mov	r2, r5
   1ee68:	movt	r3, #5
   1ee6c:	str	r0, [sp]
   1ee70:	mov	r0, r8
   1ee74:	bl	24bc4 <main@@Base+0xeb3c>
   1ee78:	cmp	r0, r7
   1ee7c:	mov	r4, r0
   1ee80:	ldrne	r1, [sp, #44]	; 0x2c
   1ee84:	cmpne	r4, r1
   1ee88:	beq	20a80 <main@@Base+0xa9f8>
   1ee8c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1ee90:	ldr	r5, [sp, #44]	; 0x2c
   1ee94:	ldr	r8, [sp, #36]	; 0x24
   1ee98:	ldr	sl, [sp, #40]	; 0x28
   1ee9c:	cmp	r6, #0
   1eea0:	bne	1eeb0 <main@@Base+0x8e28>
   1eea4:	ldrb	r0, [r8, #8]
   1eea8:	tst	r0, #2
   1eeac:	beq	1f824 <main@@Base+0x979c>
   1eeb0:	ldr	r0, [r8]
   1eeb4:	mov	r1, #20
   1eeb8:	mov	r2, #4
   1eebc:	mov	r3, #4
   1eec0:	bl	30824 <flatcc_builder_table_add@@Base>
   1eec4:	cmp	r0, #0
   1eec8:	beq	20a80 <main@@Base+0xa9f8>
   1eecc:	str	r6, [r0]
   1eed0:	b	1f824 <main@@Base+0x979c>
   1eed4:	ldr	r5, [sp, #44]	; 0x2c
   1eed8:	ldr	r8, [sp, #36]	; 0x24
   1eedc:	ldr	sl, [sp, #40]	; 0x28
   1eee0:	bne	1eef0 <main@@Base+0x8e68>
   1eee4:	ldrb	r0, [r7, #2]!
   1eee8:	cmp	r0, #32
   1eeec:	bhi	1ef00 <main@@Base+0x8e78>
   1eef0:	mov	r0, r8
   1eef4:	mov	r2, r5
   1eef8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1eefc:	mov	r7, r0
   1ef00:	cmp	r4, r7
   1ef04:	beq	1f810 <main@@Base+0x9788>
   1ef08:	mov	r6, #0
   1ef0c:	cmp	r7, r5
   1ef10:	str	r6, [fp, #-52]	; 0xffffffcc
   1ef14:	str	r6, [fp, #-56]	; 0xffffffc8
   1ef18:	str	r6, [sp, #60]	; 0x3c
   1ef1c:	str	r6, [sp, #56]	; 0x38
   1ef20:	str	r6, [fp, #-60]	; 0xffffffc4
   1ef24:	beq	1ef80 <main@@Base+0x8ef8>
   1ef28:	sub	r0, fp, #56	; 0x38
   1ef2c:	mov	r1, r7
   1ef30:	mov	r2, r5
   1ef34:	sub	r3, fp, #60	; 0x3c
   1ef38:	str	r0, [sp]
   1ef3c:	mov	r0, r8
   1ef40:	bl	352ec <flatcc_json_parser_integer@@Base>
   1ef44:	cmp	r0, r7
   1ef48:	beq	1ef8c <main@@Base+0x8f04>
   1ef4c:	sub	r9, fp, #60	; 0x3c
   1ef50:	mov	r4, r0
   1ef54:	ldm	r9, {r0, r6, r9}
   1ef58:	cmp	r0, #0
   1ef5c:	beq	1ef9c <main@@Base+0x8f14>
   1ef60:	subs	r0, r6, #1
   1ef64:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1ef68:	bcc	1f170 <main@@Base+0x90e8>
   1ef6c:	ldr	r0, [sp, #36]	; 0x24
   1ef70:	ldr	r2, [sp, #44]	; 0x2c
   1ef74:	mov	r1, r4
   1ef78:	mov	r3, #8
   1ef7c:	b	1efb4 <main@@Base+0x8f2c>
   1ef80:	mov	r9, #0
   1ef84:	mov	r4, r5
   1ef88:	b	1f180 <main@@Base+0x90f8>
   1ef8c:	mov	r6, #0
   1ef90:	mov	r9, #0
   1ef94:	mov	r4, r7
   1ef98:	b	1f180 <main@@Base+0x90f8>
   1ef9c:	cmn	r9, #1
   1efa0:	bgt	1f178 <main@@Base+0x90f0>
   1efa4:	ldr	r0, [sp, #36]	; 0x24
   1efa8:	ldr	r2, [sp, #44]	; 0x2c
   1efac:	mov	r1, r4
   1efb0:	mov	r3, #7
   1efb4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1efb8:	mov	r4, r0
   1efbc:	mov	r6, #0
   1efc0:	mov	r9, #0
   1efc4:	b	1f180 <main@@Base+0x90f8>
   1efc8:	ldr	r5, [sp, #44]	; 0x2c
   1efcc:	bne	1efdc <main@@Base+0x8f54>
   1efd0:	ldrb	r0, [r4, #2]!
   1efd4:	cmp	r0, #32
   1efd8:	bhi	1efec <main@@Base+0x8f64>
   1efdc:	ldr	r0, [sp, #36]	; 0x24
   1efe0:	mov	r2, r5
   1efe4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1efe8:	mov	r4, r0
   1efec:	cmp	r4, r5
   1eff0:	mov	r3, r5
   1eff4:	beq	1f040 <main@@Base+0x8fb8>
   1eff8:	ldrb	r0, [r4]
   1effc:	cmp	r0, #125	; 0x7d
   1f000:	bne	1f03c <main@@Base+0x8fb4>
   1f004:	ldr	r5, [sp, #44]	; 0x2c
   1f008:	ldr	r8, [sp, #36]	; 0x24
   1f00c:	add	r1, r4, #1
   1f010:	sub	r0, r5, r1
   1f014:	cmp	r0, #2
   1f018:	blt	208f4 <main@@Base+0xa86c>
   1f01c:	ldrb	r0, [r1]
   1f020:	cmp	r0, #32
   1f024:	bhi	1f610 <main@@Base+0x9588>
   1f028:	ldr	r5, [sp, #44]	; 0x2c
   1f02c:	ldr	r8, [sp, #36]	; 0x24
   1f030:	bne	208f4 <main@@Base+0xa86c>
   1f034:	ldrb	r0, [r4, #2]!
   1f038:	b	208ec <main@@Base+0xa864>
   1f03c:	mov	r3, r4
   1f040:	ldr	r5, [sp, #44]	; 0x2c
   1f044:	ldr	r8, [sp, #36]	; 0x24
   1f048:	cmp	r3, r5
   1f04c:	mov	r1, r5
   1f050:	beq	1f0a8 <main@@Base+0x9020>
   1f054:	ldrb	r0, [r3]
   1f058:	cmp	r0, #46	; 0x2e
   1f05c:	beq	1f07c <main@@Base+0x8ff4>
   1f060:	cmp	r0, #34	; 0x22
   1f064:	bne	1f098 <main@@Base+0x9010>
   1f068:	ldr	r0, [sp, #32]
   1f06c:	mov	r1, #0
   1f070:	str	r1, [r0]
   1f074:	add	r1, r3, #1
   1f078:	b	1f0a8 <main@@Base+0x9020>
   1f07c:	mov	r1, r3
   1f080:	mov	r0, r8
   1f084:	mov	r2, r5
   1f088:	mov	r3, #5
   1f08c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1f090:	mov	r1, r0
   1f094:	b	1f0a8 <main@@Base+0x9020>
   1f098:	ldr	r0, [sp, #32]
   1f09c:	mov	r1, #1
   1f0a0:	str	r1, [r0]
   1f0a4:	mov	r1, r3
   1f0a8:	mov	r0, r8
   1f0ac:	mov	r2, r5
   1f0b0:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f0b4:	mov	r2, r0
   1f0b8:	sub	r0, r5, r0
   1f0bc:	cmp	r0, #2
   1f0c0:	blt	1f0ec <main@@Base+0x9064>
   1f0c4:	ldrb	r0, [r2]
   1f0c8:	cmp	r0, #32
   1f0cc:	bls	1f0d8 <main@@Base+0x9050>
   1f0d0:	mov	r3, r2
   1f0d4:	b	1f100 <main@@Base+0x9078>
   1f0d8:	bne	1f0ec <main@@Base+0x9064>
   1f0dc:	mov	r3, r2
   1f0e0:	ldrb	r0, [r3, #1]!
   1f0e4:	cmp	r0, #32
   1f0e8:	bhi	1f100 <main@@Base+0x9078>
   1f0ec:	mov	r1, r2
   1f0f0:	mov	r0, r8
   1f0f4:	mov	r2, r5
   1f0f8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f0fc:	mov	r3, r0
   1f100:	cmp	r3, r5
   1f104:	beq	1f5dc <main@@Base+0x9554>
   1f108:	ldrb	r0, [r3]
   1f10c:	cmp	r0, #44	; 0x2c
   1f110:	bne	1f5e4 <main@@Base+0x955c>
   1f114:	add	r1, r3, #1
   1f118:	sub	r0, r5, r1
   1f11c:	cmp	r0, #2
   1f120:	blt	1f148 <main@@Base+0x90c0>
   1f124:	ldrb	r0, [r1]
   1f128:	cmp	r0, #32
   1f12c:	bls	1f138 <main@@Base+0x90b0>
   1f130:	mov	r3, r1
   1f134:	b	1f158 <main@@Base+0x90d0>
   1f138:	bne	1f148 <main@@Base+0x90c0>
   1f13c:	ldrb	r0, [r3, #2]!
   1f140:	cmp	r0, #32
   1f144:	bhi	1f158 <main@@Base+0x90d0>
   1f148:	mov	r0, r8
   1f14c:	mov	r2, r5
   1f150:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f154:	mov	r3, r0
   1f158:	cmp	r3, r5
   1f15c:	beq	1f620 <main@@Base+0x9598>
   1f160:	ldrb	r0, [r3]
   1f164:	cmp	r0, #125	; 0x7d
   1f168:	bne	1f048 <main@@Base+0x8fc0>
   1f16c:	b	1f5f4 <main@@Base+0x956c>
   1f170:	rsbs	r6, r6, #0
   1f174:	rsc	r9, r9, #0
   1f178:	str	r6, [sp, #56]	; 0x38
   1f17c:	str	r9, [sp, #60]	; 0x3c
   1f180:	cmp	r7, r4
   1f184:	bne	1f1c4 <main@@Base+0x913c>
   1f188:	add	r0, sp, #56	; 0x38
   1f18c:	ldr	r2, [sp, #44]	; 0x2c
   1f190:	movw	r3, #45352	; 0xb128
   1f194:	mov	r1, r7
   1f198:	str	r0, [sp]
   1f19c:	ldr	r0, [sp, #36]	; 0x24
   1f1a0:	movt	r3, #5
   1f1a4:	bl	24dc4 <main@@Base+0xed3c>
   1f1a8:	cmp	r0, r7
   1f1ac:	mov	r4, r0
   1f1b0:	ldrne	r1, [sp, #44]	; 0x2c
   1f1b4:	cmpne	r4, r1
   1f1b8:	beq	20a80 <main@@Base+0xa9f8>
   1f1bc:	ldr	r6, [sp, #56]	; 0x38
   1f1c0:	ldr	r9, [sp, #60]	; 0x3c
   1f1c4:	ldr	r8, [sp, #36]	; 0x24
   1f1c8:	orrs	r0, r6, r9
   1f1cc:	bne	1f1dc <main@@Base+0x9154>
   1f1d0:	ldrb	r0, [r8, #8]
   1f1d4:	tst	r0, #2
   1f1d8:	beq	1f994 <main@@Base+0x990c>
   1f1dc:	ldr	r0, [r8]
   1f1e0:	mov	r1, #22
   1f1e4:	b	1f978 <main@@Base+0x98f0>
   1f1e8:	ldr	r8, [sp, #36]	; 0x24
   1f1ec:	ldr	r5, [sp, #44]	; 0x2c
   1f1f0:	mov	r1, r7
   1f1f4:	mov	r3, #9
   1f1f8:	mov	r0, r8
   1f1fc:	mov	r2, r5
   1f200:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1f204:	ldr	sl, [sp, #40]	; 0x28
   1f208:	b	1c000 <main@@Base+0x5f78>
   1f20c:	ldr	sl, [sp, #40]	; 0x28
   1f210:	mov	r4, r5
   1f214:	b	1be5c <main@@Base+0x5dd4>
   1f218:	ldr	sl, [sp, #40]	; 0x28
   1f21c:	mov	r4, r5
   1f220:	b	1d254 <main@@Base+0x71cc>
   1f224:	cmp	r0, #125	; 0x7d
   1f228:	bne	205d0 <main@@Base+0xa548>
   1f22c:	ldr	r5, [sp, #44]	; 0x2c
   1f230:	ldr	r8, [sp, #36]	; 0x24
   1f234:	add	r1, r2, #1
   1f238:	sub	r0, r5, r1
   1f23c:	cmp	r0, #2
   1f240:	ldr	sl, [sp, #40]	; 0x28
   1f244:	blt	2076c <main@@Base+0xa6e4>
   1f248:	ldrb	r0, [r1]
   1f24c:	cmp	r0, #32
   1f250:	bls	2074c <main@@Base+0xa6c4>
   1f254:	ldr	r5, [sp, #44]	; 0x2c
   1f258:	ldr	r8, [sp, #36]	; 0x24
   1f25c:	ldr	sl, [sp, #40]	; 0x28
   1f260:	mov	r4, r1
   1f264:	b	1be5c <main@@Base+0x5dd4>
   1f268:	cmp	r0, #93	; 0x5d
   1f26c:	bne	205f4 <main@@Base+0xa56c>
   1f270:	ldr	r5, [sp, #44]	; 0x2c
   1f274:	ldr	r8, [sp, #36]	; 0x24
   1f278:	add	r1, r2, #1
   1f27c:	sub	r0, r5, r1
   1f280:	cmp	r0, #2
   1f284:	ldr	sl, [sp, #40]	; 0x28
   1f288:	blt	207b4 <main@@Base+0xa72c>
   1f28c:	ldrb	r0, [r1]
   1f290:	cmp	r0, #32
   1f294:	bls	20794 <main@@Base+0xa70c>
   1f298:	ldr	r5, [sp, #44]	; 0x2c
   1f29c:	ldr	r8, [sp, #36]	; 0x24
   1f2a0:	ldr	sl, [sp, #40]	; 0x28
   1f2a4:	mov	r4, r1
   1f2a8:	b	1d254 <main@@Base+0x71cc>
   1f2ac:	mov	r4, r5
   1f2b0:	b	207fc <main@@Base+0xa774>
   1f2b4:	mov	r0, r8
   1f2b8:	mov	r1, r5
   1f2bc:	b	205e0 <main@@Base+0xa558>
   1f2c0:	mov	r0, r8
   1f2c4:	mov	r1, r5
   1f2c8:	b	20604 <main@@Base+0xa57c>
   1f2cc:	cmp	r0, #93	; 0x5d
   1f2d0:	bne	20618 <main@@Base+0xa590>
   1f2d4:	ldr	r0, [sp, #44]	; 0x2c
   1f2d8:	add	r1, r4, #1
   1f2dc:	sub	r0, r0, r1
   1f2e0:	b	1f32c <main@@Base+0x92a4>
   1f2e4:	ldr	r8, [sp, #36]	; 0x24
   1f2e8:	ldr	r5, [sp, #44]	; 0x2c
   1f2ec:	mov	r1, r4
   1f2f0:	mov	r3, #9
   1f2f4:	mov	r0, r8
   1f2f8:	mov	r2, r5
   1f2fc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1f300:	ldr	sl, [sp, #40]	; 0x28
   1f304:	b	1a45c <main@@Base+0x43d4>
   1f308:	mov	r0, r8
   1f30c:	mov	r1, r5
   1f310:	mov	r2, r5
   1f314:	b	20624 <main@@Base+0xa59c>
   1f318:	ldr	sl, [sp, #40]	; 0x28
   1f31c:	mov	r4, r5
   1f320:	b	1d70c <main@@Base+0x7684>
   1f324:	add	r1, r4, #1
   1f328:	sub	r0, r5, r1
   1f32c:	cmp	r0, #2
   1f330:	blt	207ec <main@@Base+0xa764>
   1f334:	ldrb	r0, [r1]
   1f338:	cmp	r0, #32
   1f33c:	bls	207dc <main@@Base+0xa754>
   1f340:	mov	r4, r1
   1f344:	b	207fc <main@@Base+0xa774>
   1f348:	cmp	r0, #93	; 0x5d
   1f34c:	bne	20640 <main@@Base+0xa5b8>
   1f350:	ldr	r5, [sp, #44]	; 0x2c
   1f354:	ldr	r8, [sp, #36]	; 0x24
   1f358:	add	r1, r2, #1
   1f35c:	sub	r0, r5, r1
   1f360:	cmp	r0, #2
   1f364:	ldr	sl, [sp, #40]	; 0x28
   1f368:	blt	208b8 <main@@Base+0xa830>
   1f36c:	ldrb	r0, [r1]
   1f370:	cmp	r0, #32
   1f374:	bls	20898 <main@@Base+0xa810>
   1f378:	ldr	r5, [sp, #44]	; 0x2c
   1f37c:	ldr	r8, [sp, #36]	; 0x24
   1f380:	ldr	sl, [sp, #40]	; 0x28
   1f384:	mov	r4, r1
   1f388:	b	1d70c <main@@Base+0x7684>
   1f38c:	ldr	r8, [sp, #36]	; 0x24
   1f390:	ldr	r5, [sp, #44]	; 0x2c
   1f394:	mov	r1, r2
   1f398:	mov	r0, r8
   1f39c:	mov	r2, r5
   1f3a0:	mov	r3, #9
   1f3a4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1f3a8:	ldr	sl, [sp, #40]	; 0x28
   1f3ac:	b	1bf48 <main@@Base+0x5ec0>
   1f3b0:	mov	r0, r8
   1f3b4:	mov	r1, r5
   1f3b8:	b	20650 <main@@Base+0xa5c8>
   1f3bc:	bne	1f3cc <main@@Base+0x9344>
   1f3c0:	ldrb	r0, [r9, #2]!
   1f3c4:	cmp	r0, #32
   1f3c8:	bhi	1f3dc <main@@Base+0x9354>
   1f3cc:	ldr	r0, [sp, #36]	; 0x24
   1f3d0:	ldr	r2, [sp, #44]	; 0x2c
   1f3d4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f3d8:	mov	r9, r0
   1f3dc:	ldr	r7, [sp, #44]	; 0x2c
   1f3e0:	cmp	r9, r7
   1f3e4:	beq	1f440 <main@@Base+0x93b8>
   1f3e8:	ldrb	r0, [r9]
   1f3ec:	cmp	r0, #93	; 0x5d
   1f3f0:	bne	1f43c <main@@Base+0x93b4>
   1f3f4:	ldr	r0, [sp, #44]	; 0x2c
   1f3f8:	ldr	r8, [sp, #36]	; 0x24
   1f3fc:	add	r1, r9, #1
   1f400:	sub	r0, r0, r1
   1f404:	cmp	r0, #2
   1f408:	blt	1f42c <main@@Base+0x93a4>
   1f40c:	ldrb	r0, [r1]
   1f410:	cmp	r0, #32
   1f414:	bhi	20694 <main@@Base+0xa60c>
   1f418:	ldr	r8, [sp, #36]	; 0x24
   1f41c:	bne	1f42c <main@@Base+0x93a4>
   1f420:	ldrb	r0, [r9, #2]!
   1f424:	cmp	r0, #32
   1f428:	bhi	1ee04 <main@@Base+0x8d7c>
   1f42c:	ldr	r2, [sp, #44]	; 0x2c
   1f430:	mov	r0, r8
   1f434:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f438:	b	1ee00 <main@@Base+0x8d78>
   1f43c:	mov	r7, r9
   1f440:	mov	r0, #0
   1f444:	mov	r1, #1
   1f448:	str	r0, [fp, #-52]	; 0xffffffcc
   1f44c:	str	r0, [fp, #-56]	; 0xffffffc8
   1f450:	ldr	r0, [sp, #36]	; 0x24
   1f454:	ldr	r0, [r0]
   1f458:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1f45c:	cmp	r0, #0
   1f460:	beq	20a64 <main@@Base+0xa9dc>
   1f464:	ldr	r5, [sp, #44]	; 0x2c
   1f468:	ldr	r8, [sp, #36]	; 0x24
   1f46c:	mov	r4, r0
   1f470:	mov	r9, r7
   1f474:	mov	r0, r8
   1f478:	mov	r1, r9
   1f47c:	mov	r2, r5
   1f480:	sub	r3, fp, #56	; 0x38
   1f484:	bl	3484c <flatcc_json_parser_double@@Base>
   1f488:	mov	r7, r0
   1f48c:	cmp	r9, r0
   1f490:	bne	1f4d0 <main@@Base+0x9448>
   1f494:	movw	r3, #45424	; 0xb170
   1f498:	sub	r0, fp, #56	; 0x38
   1f49c:	mov	r1, r9
   1f4a0:	mov	r2, r5
   1f4a4:	movt	r3, #5
   1f4a8:	str	r0, [sp]
   1f4ac:	mov	r0, r8
   1f4b0:	bl	2539c <main@@Base+0xf314>
   1f4b4:	mov	r7, r0
   1f4b8:	cmp	r0, r9
   1f4bc:	beq	20a64 <main@@Base+0xa9dc>
   1f4c0:	ldr	r5, [sp, #44]	; 0x2c
   1f4c4:	ldr	r8, [sp, #36]	; 0x24
   1f4c8:	cmp	r7, r5
   1f4cc:	beq	20a6c <main@@Base+0xa9e4>
   1f4d0:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1f4d4:	sub	r0, r5, r7
   1f4d8:	cmp	r0, #2
   1f4dc:	vstr	d16, [r4]
   1f4e0:	blt	1f518 <main@@Base+0x9490>
   1f4e4:	ldrb	r0, [r7]
   1f4e8:	cmp	r0, #32
   1f4ec:	bls	1f4fc <main@@Base+0x9474>
   1f4f0:	ldr	r5, [sp, #44]	; 0x2c
   1f4f4:	mov	r9, r7
   1f4f8:	b	1f52c <main@@Base+0x94a4>
   1f4fc:	ldr	r5, [sp, #44]	; 0x2c
   1f500:	ldr	r8, [sp, #36]	; 0x24
   1f504:	bne	1f518 <main@@Base+0x9490>
   1f508:	mov	r9, r7
   1f50c:	ldrb	r0, [r9, #1]!
   1f510:	cmp	r0, #32
   1f514:	bhi	1f52c <main@@Base+0x94a4>
   1f518:	mov	r0, r8
   1f51c:	mov	r1, r7
   1f520:	mov	r2, r5
   1f524:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f528:	mov	r9, r0
   1f52c:	cmp	r9, r5
   1f530:	beq	20664 <main@@Base+0xa5dc>
   1f534:	ldrb	r0, [r9]
   1f538:	cmp	r0, #44	; 0x2c
   1f53c:	bne	2066c <main@@Base+0xa5e4>
   1f540:	ldr	r4, [sp, #44]	; 0x2c
   1f544:	add	r1, r9, #1
   1f548:	sub	r0, r4, r1
   1f54c:	cmp	r0, #2
   1f550:	ldr	r0, [sp, #36]	; 0x24
   1f554:	blt	1f588 <main@@Base+0x9500>
   1f558:	ldrb	r0, [r1]
   1f55c:	cmp	r0, #32
   1f560:	bls	1f570 <main@@Base+0x94e8>
   1f564:	ldr	r4, [sp, #44]	; 0x2c
   1f568:	mov	r9, r1
   1f56c:	b	1f594 <main@@Base+0x950c>
   1f570:	ldr	r4, [sp, #44]	; 0x2c
   1f574:	ldr	r0, [sp, #36]	; 0x24
   1f578:	bne	1f588 <main@@Base+0x9500>
   1f57c:	ldrb	r2, [r9, #2]!
   1f580:	cmp	r2, #32
   1f584:	bhi	1f594 <main@@Base+0x950c>
   1f588:	mov	r2, r4
   1f58c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f590:	mov	r9, r0
   1f594:	cmp	r9, r4
   1f598:	beq	2069c <main@@Base+0xa614>
   1f59c:	ldrb	r0, [r9]
   1f5a0:	cmp	r0, #93	; 0x5d
   1f5a4:	beq	20674 <main@@Base+0xa5ec>
   1f5a8:	ldr	r8, [sp, #36]	; 0x24
   1f5ac:	mov	r0, #0
   1f5b0:	mov	r1, #1
   1f5b4:	str	r0, [fp, #-52]	; 0xffffffcc
   1f5b8:	str	r0, [fp, #-56]	; 0xffffffc8
   1f5bc:	ldr	r0, [r8]
   1f5c0:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1f5c4:	ldr	r5, [sp, #44]	; 0x2c
   1f5c8:	mov	r4, r0
   1f5cc:	cmp	r0, #0
   1f5d0:	mov	r7, r9
   1f5d4:	bne	1f474 <main@@Base+0x93ec>
   1f5d8:	b	20a6c <main@@Base+0xa9e4>
   1f5dc:	mov	r4, r5
   1f5e0:	b	1c5ac <main@@Base+0x6524>
   1f5e4:	cmp	r0, #125	; 0x7d
   1f5e8:	bne	206ac <main@@Base+0xa624>
   1f5ec:	ldr	r5, [sp, #44]	; 0x2c
   1f5f0:	ldr	r8, [sp, #36]	; 0x24
   1f5f4:	add	r1, r3, #1
   1f5f8:	sub	r0, r5, r1
   1f5fc:	cmp	r0, #2
   1f600:	blt	208f4 <main@@Base+0xa86c>
   1f604:	ldrb	r0, [r1]
   1f608:	cmp	r0, #32
   1f60c:	bls	208d8 <main@@Base+0xa850>
   1f610:	ldr	r5, [sp, #44]	; 0x2c
   1f614:	ldr	r8, [sp, #36]	; 0x24
   1f618:	mov	r4, r1
   1f61c:	b	1c5ac <main@@Base+0x6524>
   1f620:	mov	r0, r8
   1f624:	mov	r1, r5
   1f628:	b	206bc <main@@Base+0xa634>
   1f62c:	ldr	r5, [sp, #44]	; 0x2c
   1f630:	ldr	r8, [sp, #36]	; 0x24
   1f634:	bne	1f644 <main@@Base+0x95bc>
   1f638:	ldrb	r0, [r7, #2]!
   1f63c:	cmp	r0, #32
   1f640:	bhi	1f654 <main@@Base+0x95cc>
   1f644:	mov	r0, r8
   1f648:	mov	r2, r5
   1f64c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f650:	mov	r7, r0
   1f654:	ldr	sl, [sp, #40]	; 0x28
   1f658:	cmp	r4, r7
   1f65c:	beq	1f810 <main@@Base+0x9788>
   1f660:	mov	r6, #0
   1f664:	cmp	r7, r5
   1f668:	str	r6, [fp, #-52]	; 0xffffffcc
   1f66c:	str	r6, [fp, #-56]	; 0xffffffc8
   1f670:	str	r6, [fp, #-60]	; 0xffffffc4
   1f674:	str	r6, [sp, #56]	; 0x38
   1f678:	beq	1f6c0 <main@@Base+0x9638>
   1f67c:	sub	r0, fp, #56	; 0x38
   1f680:	ldr	r2, [sp, #44]	; 0x2c
   1f684:	mov	r1, r7
   1f688:	add	r3, sp, #56	; 0x38
   1f68c:	str	r0, [sp]
   1f690:	ldr	r0, [sp, #36]	; 0x24
   1f694:	bl	352ec <flatcc_json_parser_integer@@Base>
   1f698:	cmp	r0, r7
   1f69c:	beq	1f6c8 <main@@Base+0x9640>
   1f6a0:	mov	r1, r0
   1f6a4:	ldr	r0, [sp, #56]	; 0x38
   1f6a8:	cmp	r0, #0
   1f6ac:	beq	1f6d0 <main@@Base+0x9648>
   1f6b0:	ldr	r0, [sp, #36]	; 0x24
   1f6b4:	ldr	r2, [sp, #44]	; 0x2c
   1f6b8:	mov	r3, #8
   1f6bc:	b	1f6e8 <main@@Base+0x9660>
   1f6c0:	ldr	r4, [sp, #44]	; 0x2c
   1f6c4:	b	1f6f0 <main@@Base+0x9668>
   1f6c8:	mov	r4, r7
   1f6cc:	b	1f6f0 <main@@Base+0x9668>
   1f6d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1f6d4:	cmp	r0, #0
   1f6d8:	beq	20630 <main@@Base+0xa5a8>
   1f6dc:	ldr	r0, [sp, #36]	; 0x24
   1f6e0:	ldr	r2, [sp, #44]	; 0x2c
   1f6e4:	mov	r3, #7
   1f6e8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1f6ec:	mov	r4, r0
   1f6f0:	cmp	r7, r4
   1f6f4:	bne	1f730 <main@@Base+0x96a8>
   1f6f8:	sub	r0, fp, #60	; 0x3c
   1f6fc:	ldr	r2, [sp, #44]	; 0x2c
   1f700:	movw	r3, #45376	; 0xb140
   1f704:	mov	r1, r7
   1f708:	str	r0, [sp]
   1f70c:	ldr	r0, [sp, #36]	; 0x24
   1f710:	movt	r3, #5
   1f714:	bl	24fd0 <main@@Base+0xef48>
   1f718:	cmp	r0, r7
   1f71c:	mov	r4, r0
   1f720:	ldrne	r1, [sp, #44]	; 0x2c
   1f724:	cmpne	r4, r1
   1f728:	beq	20a80 <main@@Base+0xa9f8>
   1f72c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1f730:	ldr	r8, [sp, #36]	; 0x24
   1f734:	cmp	r6, #0
   1f738:	bne	1f748 <main@@Base+0x96c0>
   1f73c:	ldrb	r0, [r8, #8]
   1f740:	tst	r0, #2
   1f744:	beq	1f994 <main@@Base+0x990c>
   1f748:	ldr	r0, [r8]
   1f74c:	mov	r1, #21
   1f750:	mov	r2, #4
   1f754:	mov	r3, #4
   1f758:	bl	30824 <flatcc_builder_table_add@@Base>
   1f75c:	cmp	r0, #0
   1f760:	beq	20a80 <main@@Base+0xa9f8>
   1f764:	str	r6, [r0]
   1f768:	b	1f990 <main@@Base+0x9908>
   1f76c:	ldr	r5, [sp, #44]	; 0x2c
   1f770:	ldr	r8, [sp, #36]	; 0x24
   1f774:	bne	1f784 <main@@Base+0x96fc>
   1f778:	ldrb	r0, [r7, #2]!
   1f77c:	cmp	r0, #32
   1f780:	bhi	1f794 <main@@Base+0x970c>
   1f784:	mov	r0, r8
   1f788:	mov	r2, r5
   1f78c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f790:	mov	r7, r0
   1f794:	ldr	sl, [sp, #40]	; 0x28
   1f798:	cmp	r4, r7
   1f79c:	beq	1f810 <main@@Base+0x9788>
   1f7a0:	mov	r6, #0
   1f7a4:	cmp	r7, r5
   1f7a8:	str	r6, [fp, #-52]	; 0xffffffcc
   1f7ac:	str	r6, [fp, #-56]	; 0xffffffc8
   1f7b0:	str	r6, [sp, #60]	; 0x3c
   1f7b4:	str	r6, [sp, #56]	; 0x38
   1f7b8:	str	r6, [fp, #-60]	; 0xffffffc4
   1f7bc:	beq	1f8e4 <main@@Base+0x985c>
   1f7c0:	sub	r0, fp, #56	; 0x38
   1f7c4:	ldr	r2, [sp, #44]	; 0x2c
   1f7c8:	mov	r1, r7
   1f7cc:	sub	r3, fp, #60	; 0x3c
   1f7d0:	str	r0, [sp]
   1f7d4:	ldr	r0, [sp, #36]	; 0x24
   1f7d8:	bl	352ec <flatcc_json_parser_integer@@Base>
   1f7dc:	cmp	r0, r7
   1f7e0:	beq	1f8f0 <main@@Base+0x9868>
   1f7e4:	mov	r1, r0
   1f7e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f7ec:	cmp	r0, #0
   1f7f0:	beq	1f900 <main@@Base+0x9878>
   1f7f4:	ldr	r0, [sp, #36]	; 0x24
   1f7f8:	ldr	r2, [sp, #44]	; 0x2c
   1f7fc:	mov	r3, #8
   1f800:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1f804:	mov	r4, r0
   1f808:	mov	r6, #0
   1f80c:	b	1f8e8 <main@@Base+0x9860>
   1f810:	mov	r0, r8
   1f814:	mov	r1, r4
   1f818:	mov	r2, r5
   1f81c:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   1f820:	mov	r4, r0
   1f824:	sub	r0, r5, r4
   1f828:	cmp	r0, #2
   1f82c:	blt	1f858 <main@@Base+0x97d0>
   1f830:	ldrb	r0, [r4]
   1f834:	cmp	r0, #32
   1f838:	bls	1f844 <main@@Base+0x97bc>
   1f83c:	mov	r2, r4
   1f840:	b	1f86c <main@@Base+0x97e4>
   1f844:	bne	1f858 <main@@Base+0x97d0>
   1f848:	mov	r2, r4
   1f84c:	ldrb	r0, [r2, #1]!
   1f850:	cmp	r0, #32
   1f854:	bhi	1f86c <main@@Base+0x97e4>
   1f858:	mov	r0, r8
   1f85c:	mov	r1, r4
   1f860:	mov	r2, r5
   1f864:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f868:	mov	r2, r0
   1f86c:	cmp	r2, r5
   1f870:	beq	209bc <main@@Base+0xa934>
   1f874:	ldrb	r0, [r2]
   1f878:	cmp	r0, #44	; 0x2c
   1f87c:	bne	209c4 <main@@Base+0xa93c>
   1f880:	add	r1, r2, #1
   1f884:	sub	r0, r5, r1
   1f888:	cmp	r0, #2
   1f88c:	blt	1f8b4 <main@@Base+0x982c>
   1f890:	ldrb	r0, [r1]
   1f894:	cmp	r0, #32
   1f898:	bls	1f8a4 <main@@Base+0x981c>
   1f89c:	mov	r2, r1
   1f8a0:	b	1f8c4 <main@@Base+0x983c>
   1f8a4:	bne	1f8b4 <main@@Base+0x982c>
   1f8a8:	ldrb	r0, [r2, #2]!
   1f8ac:	cmp	r0, #32
   1f8b0:	bhi	1f8c4 <main@@Base+0x983c>
   1f8b4:	mov	r0, r8
   1f8b8:	mov	r2, r5
   1f8bc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f8c0:	mov	r2, r0
   1f8c4:	cmp	r2, r5
   1f8c8:	beq	209f0 <main@@Base+0xa968>
   1f8cc:	ldrb	r0, [r2]
   1f8d0:	movw	lr, #29556	; 0x7374
   1f8d4:	movt	lr, #29797	; 0x7465
   1f8d8:	cmp	r0, #125	; 0x7d
   1f8dc:	bne	17168 <main@@Base+0x10e0>
   1f8e0:	b	209cc <main@@Base+0xa944>
   1f8e4:	ldr	r4, [sp, #44]	; 0x2c
   1f8e8:	mov	r9, #0
   1f8ec:	b	1f914 <main@@Base+0x988c>
   1f8f0:	mov	r6, #0
   1f8f4:	mov	r9, #0
   1f8f8:	mov	r4, r7
   1f8fc:	b	1f914 <main@@Base+0x988c>
   1f900:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1f904:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1f908:	mov	r4, r1
   1f90c:	str	r9, [sp, #60]	; 0x3c
   1f910:	str	r6, [sp, #56]	; 0x38
   1f914:	cmp	r7, r4
   1f918:	bne	1f958 <main@@Base+0x98d0>
   1f91c:	add	r0, sp, #56	; 0x38
   1f920:	ldr	r2, [sp, #44]	; 0x2c
   1f924:	movw	r3, #45400	; 0xb158
   1f928:	mov	r1, r7
   1f92c:	str	r0, [sp]
   1f930:	ldr	r0, [sp, #36]	; 0x24
   1f934:	movt	r3, #5
   1f938:	bl	251bc <main@@Base+0xf134>
   1f93c:	cmp	r0, r7
   1f940:	mov	r4, r0
   1f944:	ldrne	r1, [sp, #44]	; 0x2c
   1f948:	cmpne	r4, r1
   1f94c:	beq	20a80 <main@@Base+0xa9f8>
   1f950:	ldr	r6, [sp, #56]	; 0x38
   1f954:	ldr	r9, [sp, #60]	; 0x3c
   1f958:	ldr	r8, [sp, #36]	; 0x24
   1f95c:	orrs	r0, r6, r9
   1f960:	bne	1f970 <main@@Base+0x98e8>
   1f964:	ldrb	r0, [r8, #8]
   1f968:	tst	r0, #2
   1f96c:	beq	1f994 <main@@Base+0x990c>
   1f970:	ldr	r0, [r8]
   1f974:	mov	r1, #23
   1f978:	mov	r2, #8
   1f97c:	mov	r3, #8
   1f980:	bl	30824 <flatcc_builder_table_add@@Base>
   1f984:	cmp	r0, #0
   1f988:	beq	20a80 <main@@Base+0xa9f8>
   1f98c:	stm	r0, {r6, r9}
   1f990:	ldr	r8, [sp, #36]	; 0x24
   1f994:	ldr	r5, [sp, #44]	; 0x2c
   1f998:	b	1a440 <main@@Base+0x43b8>
   1f99c:	bne	1f9ac <main@@Base+0x9924>
   1f9a0:	ldrb	r0, [r4, #2]!
   1f9a4:	cmp	r0, #32
   1f9a8:	bhi	1f9bc <main@@Base+0x9934>
   1f9ac:	ldr	r0, [sp, #36]	; 0x24
   1f9b0:	ldr	r2, [sp, #44]	; 0x2c
   1f9b4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1f9b8:	mov	r4, r0
   1f9bc:	ldr	r6, [sp, #44]	; 0x2c
   1f9c0:	cmp	r4, r6
   1f9c4:	beq	1f9d8 <main@@Base+0x9950>
   1f9c8:	ldrb	r0, [r4]
   1f9cc:	cmp	r0, #93	; 0x5d
   1f9d0:	beq	206d8 <main@@Base+0xa650>
   1f9d4:	mov	r6, r4
   1f9d8:	mov	r0, #0
   1f9dc:	mov	r1, #1
   1f9e0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1f9e4:	ldr	r0, [sp, #36]	; 0x24
   1f9e8:	ldr	r0, [r0]
   1f9ec:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1f9f0:	cmp	r0, #0
   1f9f4:	beq	20a7c <main@@Base+0xa9f4>
   1f9f8:	mov	r8, r0
   1f9fc:	mov	r4, r6
   1fa00:	ldr	r5, [sp, #44]	; 0x2c
   1fa04:	mov	r6, #0
   1fa08:	str	r6, [fp, #-52]	; 0xffffffcc
   1fa0c:	str	r6, [fp, #-56]	; 0xffffffc8
   1fa10:	strb	r6, [fp, #-60]	; 0xffffffc4
   1fa14:	str	r6, [sp, #56]	; 0x38
   1fa18:	cmp	r4, r5
   1fa1c:	beq	1fa64 <main@@Base+0x99dc>
   1fa20:	sub	r0, fp, #56	; 0x38
   1fa24:	mov	r1, r4
   1fa28:	mov	r2, r5
   1fa2c:	add	r3, sp, #56	; 0x38
   1fa30:	str	r0, [sp]
   1fa34:	ldr	r0, [sp, #36]	; 0x24
   1fa38:	bl	352ec <flatcc_json_parser_integer@@Base>
   1fa3c:	cmp	r0, r4
   1fa40:	beq	1fa6c <main@@Base+0x99e4>
   1fa44:	mov	r1, r0
   1fa48:	ldr	r0, [sp, #56]	; 0x38
   1fa4c:	cmp	r0, #0
   1fa50:	beq	1fa74 <main@@Base+0x99ec>
   1fa54:	ldr	r7, [sp, #36]	; 0x24
   1fa58:	ldr	r5, [sp, #44]	; 0x2c
   1fa5c:	mov	r3, #8
   1fa60:	b	1fa94 <main@@Base+0x9a0c>
   1fa64:	mov	r1, r5
   1fa68:	b	1fab4 <main@@Base+0x9a2c>
   1fa6c:	mov	r1, r4
   1fa70:	b	1fab0 <main@@Base+0x9a28>
   1fa74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fa78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1fa7c:	subs	r3, r0, #256	; 0x100
   1fa80:	sbcs	r2, r2, #0
   1fa84:	bcc	1faa8 <main@@Base+0x9a20>
   1fa88:	ldr	r7, [sp, #36]	; 0x24
   1fa8c:	ldr	r5, [sp, #44]	; 0x2c
   1fa90:	mov	r3, #7
   1fa94:	mov	r0, r7
   1fa98:	mov	r2, r5
   1fa9c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1faa0:	mov	r1, r0
   1faa4:	b	1fab8 <main@@Base+0x9a30>
   1faa8:	mov	r6, r0
   1faac:	strb	r0, [fp, #-60]	; 0xffffffc4
   1fab0:	ldr	r5, [sp, #44]	; 0x2c
   1fab4:	ldr	r7, [sp, #36]	; 0x24
   1fab8:	cmp	r4, r1
   1fabc:	bne	1fb00 <main@@Base+0x9a78>
   1fac0:	movw	r3, #45412	; 0xb164
   1fac4:	sub	r0, fp, #60	; 0x3c
   1fac8:	mov	r1, r4
   1facc:	mov	r2, r5
   1fad0:	movt	r3, #5
   1fad4:	str	r0, [sp]
   1fad8:	mov	r0, r7
   1fadc:	bl	22990 <main@@Base+0xc908>
   1fae0:	cmp	r0, r4
   1fae4:	mov	r1, r0
   1fae8:	ldrne	r0, [sp, #44]	; 0x2c
   1faec:	cmpne	r1, r0
   1faf0:	beq	20a74 <main@@Base+0xa9ec>
   1faf4:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1faf8:	ldr	r5, [sp, #44]	; 0x2c
   1fafc:	ldr	r7, [sp, #36]	; 0x24
   1fb00:	sub	r0, r5, r1
   1fb04:	strb	r6, [r8]
   1fb08:	cmp	r0, #2
   1fb0c:	blt	1fb44 <main@@Base+0x9abc>
   1fb10:	ldrb	r0, [r1]
   1fb14:	cmp	r0, #32
   1fb18:	bls	1fb28 <main@@Base+0x9aa0>
   1fb1c:	ldr	r5, [sp, #44]	; 0x2c
   1fb20:	mov	r4, r1
   1fb24:	b	1fb54 <main@@Base+0x9acc>
   1fb28:	ldr	r5, [sp, #44]	; 0x2c
   1fb2c:	ldr	r7, [sp, #36]	; 0x24
   1fb30:	bne	1fb44 <main@@Base+0x9abc>
   1fb34:	mov	r4, r1
   1fb38:	ldrb	r0, [r4, #1]!
   1fb3c:	cmp	r0, #32
   1fb40:	bhi	1fb54 <main@@Base+0x9acc>
   1fb44:	mov	r0, r7
   1fb48:	mov	r2, r5
   1fb4c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1fb50:	mov	r4, r0
   1fb54:	cmp	r4, r5
   1fb58:	beq	206c8 <main@@Base+0xa640>
   1fb5c:	ldrb	r0, [r4]
   1fb60:	cmp	r0, #44	; 0x2c
   1fb64:	bne	206d0 <main@@Base+0xa648>
   1fb68:	ldr	r5, [sp, #44]	; 0x2c
   1fb6c:	add	r1, r4, #1
   1fb70:	sub	r0, r5, r1
   1fb74:	cmp	r0, #2
   1fb78:	ldr	r0, [sp, #36]	; 0x24
   1fb7c:	blt	1fbb0 <main@@Base+0x9b28>
   1fb80:	ldrb	r0, [r1]
   1fb84:	cmp	r0, #32
   1fb88:	bls	1fb98 <main@@Base+0x9b10>
   1fb8c:	ldr	r5, [sp, #44]	; 0x2c
   1fb90:	mov	r4, r1
   1fb94:	b	1fbbc <main@@Base+0x9b34>
   1fb98:	ldr	r5, [sp, #44]	; 0x2c
   1fb9c:	ldr	r0, [sp, #36]	; 0x24
   1fba0:	bne	1fbb0 <main@@Base+0x9b28>
   1fba4:	ldrb	r2, [r4, #2]!
   1fba8:	cmp	r2, #32
   1fbac:	bhi	1fbbc <main@@Base+0x9b34>
   1fbb0:	mov	r2, r5
   1fbb4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1fbb8:	mov	r4, r0
   1fbbc:	cmp	r4, r5
   1fbc0:	beq	2077c <main@@Base+0xa6f4>
   1fbc4:	ldrb	r0, [r4]
   1fbc8:	cmp	r0, #93	; 0x5d
   1fbcc:	beq	206d8 <main@@Base+0xa650>
   1fbd0:	mov	r0, #0
   1fbd4:	mov	r1, #1
   1fbd8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1fbdc:	ldr	r0, [sp, #36]	; 0x24
   1fbe0:	ldr	r0, [r0]
   1fbe4:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   1fbe8:	mov	r8, r0
   1fbec:	cmp	r0, #0
   1fbf0:	bne	1fa00 <main@@Base+0x9978>
   1fbf4:	b	20a80 <main@@Base+0xa9f8>
   1fbf8:	ldr	r5, [sp, #44]	; 0x2c
   1fbfc:	ldr	r8, [sp, #36]	; 0x24
   1fc00:	ldr	sl, [sp, #40]	; 0x28
   1fc04:	b	1be68 <main@@Base+0x5de0>
   1fc08:	bne	1fc18 <main@@Base+0x9b90>
   1fc0c:	ldrb	r0, [r4, #2]!
   1fc10:	cmp	r0, #32
   1fc14:	bhi	1fc28 <main@@Base+0x9ba0>
   1fc18:	ldr	r0, [sp, #36]	; 0x24
   1fc1c:	ldr	r2, [sp, #44]	; 0x2c
   1fc20:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1fc24:	mov	r4, r0
   1fc28:	ldr	r2, [sp, #44]	; 0x2c
   1fc2c:	cmp	r4, r2
   1fc30:	beq	1fc78 <main@@Base+0x9bf0>
   1fc34:	ldrb	r0, [r4]
   1fc38:	cmp	r0, #125	; 0x7d
   1fc3c:	bne	1fc74 <main@@Base+0x9bec>
   1fc40:	ldr	r0, [sp, #44]	; 0x2c
   1fc44:	ldr	r8, [sp, #36]	; 0x24
   1fc48:	add	r1, r4, #1
   1fc4c:	sub	r0, r0, r1
   1fc50:	cmp	r0, #2
   1fc54:	blt	209ac <main@@Base+0xa924>
   1fc58:	ldrb	r0, [r1]
   1fc5c:	cmp	r0, #32
   1fc60:	bhi	2088c <main@@Base+0xa804>
   1fc64:	ldr	r8, [sp, #36]	; 0x24
   1fc68:	bne	209ac <main@@Base+0xa924>
   1fc6c:	ldrb	r0, [r4, #2]!
   1fc70:	b	209a4 <main@@Base+0xa91c>
   1fc74:	mov	r2, r4
   1fc78:	ldr	r5, [sp, #44]	; 0x2c
   1fc7c:	cmp	r2, r5
   1fc80:	mov	r9, r5
   1fc84:	beq	1fce0 <main@@Base+0x9c58>
   1fc88:	ldrb	r0, [r2]
   1fc8c:	cmp	r0, #46	; 0x2e
   1fc90:	beq	1fcac <main@@Base+0x9c24>
   1fc94:	cmp	r0, #34	; 0x22
   1fc98:	bne	1fccc <main@@Base+0x9c44>
   1fc9c:	ldr	r0, [sp, #32]
   1fca0:	mov	r1, #0
   1fca4:	add	r9, r2, #1
   1fca8:	b	1fcd8 <main@@Base+0x9c50>
   1fcac:	ldr	r5, [sp, #44]	; 0x2c
   1fcb0:	ldr	r0, [sp, #36]	; 0x24
   1fcb4:	mov	r1, r2
   1fcb8:	mov	r3, #5
   1fcbc:	mov	r2, r5
   1fcc0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1fcc4:	mov	r9, r0
   1fcc8:	b	1fce0 <main@@Base+0x9c58>
   1fccc:	ldr	r0, [sp, #32]
   1fcd0:	mov	r1, #1
   1fcd4:	mov	r9, r2
   1fcd8:	str	r1, [r0]
   1fcdc:	ldr	r5, [sp, #44]	; 0x2c
   1fce0:	sub	lr, r5, r9
   1fce4:	mov	r0, #8
   1fce8:	cmp	lr, #8
   1fcec:	movcc	r0, lr
   1fcf0:	sub	r7, r0, #1
   1fcf4:	cmp	r7, #7
   1fcf8:	bhi	2041c <main@@Base+0xa394>
   1fcfc:	add	r4, pc, #32
   1fd00:	mov	r1, #0
   1fd04:	mov	ip, #0
   1fd08:	mov	r8, #0
   1fd0c:	mov	r6, #0
   1fd10:	mov	r3, #0
   1fd14:	mov	r5, #0
   1fd18:	mov	r2, #0
   1fd1c:	mov	r0, #0
   1fd20:	ldr	pc, [r4, r7, lsl #2]
   1fd24:	andeq	pc, r1, r8, lsl #27
   1fd28:	andeq	pc, r1, r0, lsl #27
   1fd2c:	andeq	pc, r1, r8, ror sp	; <UNPREDICTABLE>
   1fd30:	andeq	pc, r1, r0, ror sp	; <UNPREDICTABLE>
   1fd34:	andeq	pc, r1, r4, ror #26
   1fd38:	andeq	pc, r1, r8, asr sp	; <UNPREDICTABLE>
   1fd3c:	andeq	pc, r1, r8, asr #26
   1fd40:	andeq	pc, r1, r4, asr #26
   1fd44:	ldrb	ip, [r9, #7]
   1fd48:	ldrb	r0, [r9, #6]
   1fd4c:	mov	r8, r1
   1fd50:	orr	r0, ip, r0, lsl #8
   1fd54:	mov	r1, r0
   1fd58:	ldrb	r0, [r9, #5]
   1fd5c:	mov	r6, r8
   1fd60:	orr	r1, r1, r0, lsl #16
   1fd64:	ldrb	r0, [r9, #4]
   1fd68:	mov	r3, r6
   1fd6c:	orr	r1, r1, r0, lsl #24
   1fd70:	ldrb	r0, [r9, #3]
   1fd74:	orr	r5, r0, r3
   1fd78:	ldrb	r0, [r9, #2]
   1fd7c:	orr	r2, r5, r0, lsl #8
   1fd80:	ldrb	r0, [r9, #1]
   1fd84:	orr	r0, r2, r0, lsl #16
   1fd88:	ldrb	r2, [r9]
   1fd8c:	orr	r2, r0, r2, lsl #24
   1fd90:	movw	r0, #65535	; 0xffff
   1fd94:	movt	r0, #26979	; 0x6963
   1fd98:	cmp	r2, r0
   1fd9c:	bhi	1fe04 <main@@Base+0x9d7c>
   1fda0:	movw	r0, #30062	; 0x756e
   1fda4:	and	r1, r1, #-16777216	; 0xff000000
   1fda8:	movt	r0, #25455	; 0x636f
   1fdac:	eor	r1, r1, #1946157056	; 0x74000000
   1fdb0:	eor	r0, r2, r0
   1fdb4:	orrs	r0, r1, r0
   1fdb8:	bne	2041c <main@@Base+0xa394>
   1fdbc:	cmp	lr, #6
   1fdc0:	mov	r7, r9
   1fdc4:	blt	200ec <main@@Base+0xa064>
   1fdc8:	ldr	r2, [sp, #32]
   1fdcc:	mov	r1, r9
   1fdd0:	ldrb	r0, [r1, #5]!
   1fdd4:	ldr	r2, [r2]
   1fdd8:	cmp	r2, #0
   1fddc:	beq	1febc <main@@Base+0x9e34>
   1fde0:	cmp	r0, #33	; 0x21
   1fde4:	bcc	1fdf4 <main@@Base+0x9d6c>
   1fde8:	cmp	r0, #58	; 0x3a
   1fdec:	mov	r7, r9
   1fdf0:	bne	200ec <main@@Base+0xa064>
   1fdf4:	ldr	r0, [sp, #32]
   1fdf8:	mov	r2, #0
   1fdfc:	str	r2, [r0]
   1fe00:	b	1fecc <main@@Base+0x9e44>
   1fe04:	movw	r1, #27648	; 0x6c00
   1fe08:	bic	r0, r2, #255	; 0xff
   1fe0c:	movt	r1, #30305	; 0x7661
   1fe10:	teq	r0, r1
   1fe14:	bne	1fe60 <main@@Base+0x9dd8>
   1fe18:	cmp	lr, #4
   1fe1c:	mov	r7, r9
   1fe20:	blt	20248 <main@@Base+0xa1c0>
   1fe24:	ldr	r2, [sp, #32]
   1fe28:	mov	r1, r9
   1fe2c:	ldrb	r0, [r1, #3]!
   1fe30:	ldr	r2, [r2]
   1fe34:	cmp	r2, #0
   1fe38:	beq	1fef0 <main@@Base+0x9e68>
   1fe3c:	cmp	r0, #33	; 0x21
   1fe40:	bcc	1fe50 <main@@Base+0x9dc8>
   1fe44:	cmp	r0, #58	; 0x3a
   1fe48:	mov	r7, r9
   1fe4c:	bne	20248 <main@@Base+0xa1c0>
   1fe50:	ldr	r0, [sp, #32]
   1fe54:	mov	r2, #0
   1fe58:	str	r2, [r0]
   1fe5c:	b	1ff00 <main@@Base+0x9e78>
   1fe60:	movw	r0, #0
   1fe64:	bfc	r2, #0, #16
   1fe68:	movt	r0, #26980	; 0x6964
   1fe6c:	teq	r2, r0
   1fe70:	bne	2041c <main@@Base+0xa394>
   1fe74:	cmp	lr, #3
   1fe78:	mov	r1, r9
   1fe7c:	blt	203c8 <main@@Base+0xa340>
   1fe80:	ldr	r1, [sp, #32]
   1fe84:	mov	r2, r9
   1fe88:	ldrb	r0, [r2, #2]!
   1fe8c:	ldr	r1, [r1]
   1fe90:	cmp	r1, #0
   1fe94:	beq	1ff24 <main@@Base+0x9e9c>
   1fe98:	cmp	r0, #33	; 0x21
   1fe9c:	bcc	1feac <main@@Base+0x9e24>
   1fea0:	cmp	r0, #58	; 0x3a
   1fea4:	mov	r1, r9
   1fea8:	bne	203c8 <main@@Base+0xa340>
   1feac:	ldr	r0, [sp, #32]
   1feb0:	mov	r1, #0
   1feb4:	str	r1, [r0]
   1feb8:	b	1ff34 <main@@Base+0x9eac>
   1febc:	cmp	r0, #34	; 0x22
   1fec0:	mov	r7, r9
   1fec4:	bne	200ec <main@@Base+0xa064>
   1fec8:	add	r1, r9, #6
   1fecc:	ldr	r0, [sp, #44]	; 0x2c
   1fed0:	sub	r0, r0, r1
   1fed4:	cmp	r0, #2
   1fed8:	blt	1ff6c <main@@Base+0x9ee4>
   1fedc:	ldrb	r0, [r1]
   1fee0:	cmp	r0, #32
   1fee4:	bls	1ff58 <main@@Base+0x9ed0>
   1fee8:	mov	r7, r1
   1feec:	b	1ff7c <main@@Base+0x9ef4>
   1fef0:	cmp	r0, #34	; 0x22
   1fef4:	mov	r7, r9
   1fef8:	bne	20248 <main@@Base+0xa1c0>
   1fefc:	add	r1, r9, #4
   1ff00:	ldr	r0, [sp, #44]	; 0x2c
   1ff04:	sub	r0, r0, r1
   1ff08:	cmp	r0, #2
   1ff0c:	blt	1ffe8 <main@@Base+0x9f60>
   1ff10:	ldrb	r0, [r1]
   1ff14:	cmp	r0, #32
   1ff18:	bls	1ffd4 <main@@Base+0x9f4c>
   1ff1c:	mov	r7, r1
   1ff20:	b	1fff8 <main@@Base+0x9f70>
   1ff24:	cmp	r0, #34	; 0x22
   1ff28:	mov	r1, r9
   1ff2c:	bne	203c8 <main@@Base+0xa340>
   1ff30:	add	r2, r9, #3
   1ff34:	ldr	r0, [sp, #44]	; 0x2c
   1ff38:	sub	r0, r0, r2
   1ff3c:	cmp	r0, #2
   1ff40:	blt	20064 <main@@Base+0x9fdc>
   1ff44:	ldrb	r0, [r2]
   1ff48:	cmp	r0, #32
   1ff4c:	bls	20050 <main@@Base+0x9fc8>
   1ff50:	mov	r1, r2
   1ff54:	b	20078 <main@@Base+0x9ff0>
   1ff58:	bne	1ff6c <main@@Base+0x9ee4>
   1ff5c:	mov	r7, r1
   1ff60:	ldrb	r0, [r7, #1]!
   1ff64:	cmp	r0, #32
   1ff68:	bhi	1ff7c <main@@Base+0x9ef4>
   1ff6c:	ldr	r0, [sp, #36]	; 0x24
   1ff70:	ldr	r2, [sp, #44]	; 0x2c
   1ff74:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1ff78:	mov	r7, r0
   1ff7c:	ldr	r0, [sp, #44]	; 0x2c
   1ff80:	cmp	r7, r0
   1ff84:	beq	1ffbc <main@@Base+0x9f34>
   1ff88:	ldrb	r0, [r7]
   1ff8c:	cmp	r0, #58	; 0x3a
   1ff90:	bne	1ffbc <main@@Base+0x9f34>
   1ff94:	ldr	r0, [sp, #44]	; 0x2c
   1ff98:	add	r1, r7, #1
   1ff9c:	sub	r0, r0, r1
   1ffa0:	cmp	r0, #2
   1ffa4:	blt	200dc <main@@Base+0xa054>
   1ffa8:	ldrb	r0, [r1]
   1ffac:	cmp	r0, #32
   1ffb0:	bls	200cc <main@@Base+0xa044>
   1ffb4:	mov	r7, r1
   1ffb8:	b	200ec <main@@Base+0xa064>
   1ffbc:	ldr	r0, [sp, #36]	; 0x24
   1ffc0:	ldr	r2, [sp, #44]	; 0x2c
   1ffc4:	mov	r1, r7
   1ffc8:	mov	r3, #4
   1ffcc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   1ffd0:	b	200e8 <main@@Base+0xa060>
   1ffd4:	bne	1ffe8 <main@@Base+0x9f60>
   1ffd8:	mov	r7, r1
   1ffdc:	ldrb	r0, [r7, #1]!
   1ffe0:	cmp	r0, #32
   1ffe4:	bhi	1fff8 <main@@Base+0x9f70>
   1ffe8:	ldr	r0, [sp, #36]	; 0x24
   1ffec:	ldr	r2, [sp, #44]	; 0x2c
   1fff0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   1fff4:	mov	r7, r0
   1fff8:	ldr	r0, [sp, #44]	; 0x2c
   1fffc:	cmp	r7, r0
   20000:	beq	20038 <main@@Base+0x9fb0>
   20004:	ldrb	r0, [r7]
   20008:	cmp	r0, #58	; 0x3a
   2000c:	bne	20038 <main@@Base+0x9fb0>
   20010:	ldr	r0, [sp, #44]	; 0x2c
   20014:	add	r1, r7, #1
   20018:	sub	r0, r0, r1
   2001c:	cmp	r0, #2
   20020:	blt	20238 <main@@Base+0xa1b0>
   20024:	ldrb	r0, [r1]
   20028:	cmp	r0, #32
   2002c:	bls	20228 <main@@Base+0xa1a0>
   20030:	mov	r7, r1
   20034:	b	20248 <main@@Base+0xa1c0>
   20038:	ldr	r0, [sp, #36]	; 0x24
   2003c:	ldr	r2, [sp, #44]	; 0x2c
   20040:	mov	r1, r7
   20044:	mov	r3, #4
   20048:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2004c:	b	20244 <main@@Base+0xa1bc>
   20050:	bne	20064 <main@@Base+0x9fdc>
   20054:	mov	r1, r2
   20058:	ldrb	r0, [r1, #1]!
   2005c:	cmp	r0, #32
   20060:	bhi	20078 <main@@Base+0x9ff0>
   20064:	mov	r1, r2
   20068:	ldr	r0, [sp, #36]	; 0x24
   2006c:	ldr	r2, [sp, #44]	; 0x2c
   20070:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   20074:	mov	r1, r0
   20078:	ldr	r0, [sp, #44]	; 0x2c
   2007c:	cmp	r1, r0
   20080:	beq	200b8 <main@@Base+0xa030>
   20084:	ldrb	r0, [r1]
   20088:	cmp	r0, #58	; 0x3a
   2008c:	bne	200b8 <main@@Base+0xa030>
   20090:	ldr	r0, [sp, #44]	; 0x2c
   20094:	add	r2, r1, #1
   20098:	sub	r0, r0, r2
   2009c:	cmp	r0, #2
   200a0:	blt	203b4 <main@@Base+0xa32c>
   200a4:	ldrb	r0, [r2]
   200a8:	cmp	r0, #32
   200ac:	bls	203a4 <main@@Base+0xa31c>
   200b0:	mov	r1, r2
   200b4:	b	203c8 <main@@Base+0xa340>
   200b8:	ldr	r0, [sp, #36]	; 0x24
   200bc:	ldr	r2, [sp, #44]	; 0x2c
   200c0:	mov	r3, #4
   200c4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   200c8:	b	203c4 <main@@Base+0xa33c>
   200cc:	bne	200dc <main@@Base+0xa054>
   200d0:	ldrb	r0, [r7, #2]!
   200d4:	cmp	r0, #32
   200d8:	bhi	200ec <main@@Base+0xa064>
   200dc:	ldr	r0, [sp, #36]	; 0x24
   200e0:	ldr	r2, [sp, #44]	; 0x2c
   200e4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   200e8:	mov	r7, r0
   200ec:	cmp	r9, r7
   200f0:	beq	2041c <main@@Base+0xa394>
   200f4:	ldr	r0, [sp, #44]	; 0x2c
   200f8:	mov	r6, #0
   200fc:	str	r6, [fp, #-52]	; 0xffffffcc
   20100:	str	r6, [fp, #-56]	; 0xffffffc8
   20104:	strh	r6, [fp, #-60]	; 0xffffffc4
   20108:	str	r6, [sp, #56]	; 0x38
   2010c:	cmp	r7, r0
   20110:	beq	2015c <main@@Base+0xa0d4>
   20114:	sub	r0, fp, #56	; 0x38
   20118:	ldr	r2, [sp, #44]	; 0x2c
   2011c:	mov	r1, r7
   20120:	add	r3, sp, #56	; 0x38
   20124:	str	r0, [sp]
   20128:	ldr	r0, [sp, #36]	; 0x24
   2012c:	bl	352ec <flatcc_json_parser_integer@@Base>
   20130:	cmp	r0, r7
   20134:	beq	20164 <main@@Base+0xa0dc>
   20138:	mov	r4, r0
   2013c:	ldr	r0, [sp, #56]	; 0x38
   20140:	cmp	r0, #0
   20144:	beq	2016c <main@@Base+0xa0e4>
   20148:	ldr	r0, [sp, #36]	; 0x24
   2014c:	ldr	r2, [sp, #44]	; 0x2c
   20150:	mov	r1, r4
   20154:	mov	r3, #8
   20158:	b	20190 <main@@Base+0xa108>
   2015c:	ldr	r4, [sp, #44]	; 0x2c
   20160:	b	20198 <main@@Base+0xa110>
   20164:	mov	r4, r7
   20168:	b	20198 <main@@Base+0xa110>
   2016c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20170:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20174:	subs	r2, r0, #65536	; 0x10000
   20178:	sbcs	r1, r1, #0
   2017c:	bcc	2021c <main@@Base+0xa194>
   20180:	ldr	r0, [sp, #36]	; 0x24
   20184:	ldr	r2, [sp, #44]	; 0x2c
   20188:	mov	r1, r4
   2018c:	mov	r3, #7
   20190:	bl	333fc <flatcc_json_parser_set_error@@Base>
   20194:	mov	r4, r0
   20198:	cmp	r7, r4
   2019c:	bne	201d8 <main@@Base+0xa150>
   201a0:	sub	r0, fp, #60	; 0x3c
   201a4:	ldr	r2, [sp, #44]	; 0x2c
   201a8:	movw	r3, #45868	; 0xb32c
   201ac:	mov	r1, r7
   201b0:	str	r0, [sp]
   201b4:	ldr	r0, [sp, #36]	; 0x24
   201b8:	movt	r3, #5
   201bc:	bl	2c824 <main@@Base+0x1679c>
   201c0:	cmp	r0, r7
   201c4:	mov	r4, r0
   201c8:	ldrne	r0, [sp, #44]	; 0x2c
   201cc:	cmpne	r4, r0
   201d0:	beq	20504 <main@@Base+0xa47c>
   201d4:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   201d8:	movw	r0, #65535	; 0xffff
   201dc:	tst	r6, r0
   201e0:	bne	201f4 <main@@Base+0xa16c>
   201e4:	ldr	r0, [sp, #36]	; 0x24
   201e8:	ldrb	r0, [r0, #8]
   201ec:	tst	r0, #2
   201f0:	beq	20410 <main@@Base+0xa388>
   201f4:	ldr	r0, [sp, #36]	; 0x24
   201f8:	mov	r1, #2
   201fc:	mov	r2, #2
   20200:	mov	r3, #2
   20204:	ldr	r0, [r0]
   20208:	bl	30824 <flatcc_builder_table_add@@Base>
   2020c:	cmp	r0, #0
   20210:	beq	20504 <main@@Base+0xa47c>
   20214:	strh	r6, [r0]
   20218:	b	20410 <main@@Base+0xa388>
   2021c:	mov	r6, r0
   20220:	strh	r0, [fp, #-60]	; 0xffffffc4
   20224:	b	20198 <main@@Base+0xa110>
   20228:	bne	20238 <main@@Base+0xa1b0>
   2022c:	ldrb	r0, [r7, #2]!
   20230:	cmp	r0, #32
   20234:	bhi	20248 <main@@Base+0xa1c0>
   20238:	ldr	r0, [sp, #36]	; 0x24
   2023c:	ldr	r2, [sp, #44]	; 0x2c
   20240:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   20244:	mov	r7, r0
   20248:	cmp	r9, r7
   2024c:	beq	2041c <main@@Base+0xa394>
   20250:	ldr	r0, [sp, #44]	; 0x2c
   20254:	mov	r6, #0
   20258:	str	r6, [fp, #-52]	; 0xffffffcc
   2025c:	str	r6, [fp, #-56]	; 0xffffffc8
   20260:	str	r6, [sp, #60]	; 0x3c
   20264:	str	r6, [sp, #56]	; 0x38
   20268:	str	r6, [fp, #-60]	; 0xffffffc4
   2026c:	cmp	r7, r0
   20270:	beq	202cc <main@@Base+0xa244>
   20274:	sub	r0, fp, #56	; 0x38
   20278:	ldr	r2, [sp, #44]	; 0x2c
   2027c:	mov	r1, r7
   20280:	sub	r3, fp, #60	; 0x3c
   20284:	str	r0, [sp]
   20288:	ldr	r0, [sp, #36]	; 0x24
   2028c:	bl	352ec <flatcc_json_parser_integer@@Base>
   20290:	cmp	r0, r7
   20294:	beq	202d4 <main@@Base+0xa24c>
   20298:	sub	r9, fp, #60	; 0x3c
   2029c:	mov	r4, r0
   202a0:	ldm	r9, {r0, r6, r9}
   202a4:	cmp	r0, #0
   202a8:	beq	202e4 <main@@Base+0xa25c>
   202ac:	subs	r0, r6, #1
   202b0:	sbcs	r0, r9, #-2147483648	; 0x80000000
   202b4:	bcc	20310 <main@@Base+0xa288>
   202b8:	ldr	r0, [sp, #36]	; 0x24
   202bc:	ldr	r2, [sp, #44]	; 0x2c
   202c0:	mov	r1, r4
   202c4:	mov	r3, #8
   202c8:	b	202fc <main@@Base+0xa274>
   202cc:	ldr	r4, [sp, #44]	; 0x2c
   202d0:	b	20308 <main@@Base+0xa280>
   202d4:	mov	r6, #0
   202d8:	mov	r9, #0
   202dc:	mov	r4, r7
   202e0:	b	20320 <main@@Base+0xa298>
   202e4:	cmn	r9, #1
   202e8:	bgt	20318 <main@@Base+0xa290>
   202ec:	ldr	r0, [sp, #36]	; 0x24
   202f0:	ldr	r2, [sp, #44]	; 0x2c
   202f4:	mov	r1, r4
   202f8:	mov	r3, #7
   202fc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   20300:	mov	r4, r0
   20304:	mov	r6, #0
   20308:	mov	r9, #0
   2030c:	b	20320 <main@@Base+0xa298>
   20310:	rsbs	r6, r6, #0
   20314:	rsc	r9, r9, #0
   20318:	str	r6, [sp, #56]	; 0x38
   2031c:	str	r9, [sp, #60]	; 0x3c
   20320:	cmp	r7, r4
   20324:	bne	20364 <main@@Base+0xa2dc>
   20328:	add	r0, sp, #56	; 0x38
   2032c:	ldr	r2, [sp, #44]	; 0x2c
   20330:	movw	r3, #45880	; 0xb338
   20334:	mov	r1, r7
   20338:	str	r0, [sp]
   2033c:	ldr	r0, [sp, #36]	; 0x24
   20340:	movt	r3, #5
   20344:	bl	24dc4 <main@@Base+0xed3c>
   20348:	cmp	r0, r7
   2034c:	mov	r4, r0
   20350:	ldrne	r0, [sp, #44]	; 0x2c
   20354:	cmpne	r4, r0
   20358:	beq	20504 <main@@Base+0xa47c>
   2035c:	ldr	r6, [sp, #56]	; 0x38
   20360:	ldr	r9, [sp, #60]	; 0x3c
   20364:	orrs	r0, r6, r9
   20368:	bne	2037c <main@@Base+0xa2f4>
   2036c:	ldr	r0, [sp, #36]	; 0x24
   20370:	ldrb	r0, [r0, #8]
   20374:	tst	r0, #2
   20378:	beq	20410 <main@@Base+0xa388>
   2037c:	ldr	r0, [sp, #36]	; 0x24
   20380:	mov	r1, #1
   20384:	mov	r2, #8
   20388:	mov	r3, #8
   2038c:	ldr	r0, [r0]
   20390:	bl	30824 <flatcc_builder_table_add@@Base>
   20394:	cmp	r0, #0
   20398:	beq	20504 <main@@Base+0xa47c>
   2039c:	stm	r0, {r6, r9}
   203a0:	b	20410 <main@@Base+0xa388>
   203a4:	bne	203b4 <main@@Base+0xa32c>
   203a8:	ldrb	r0, [r1, #2]!
   203ac:	cmp	r0, #32
   203b0:	bhi	203c8 <main@@Base+0xa340>
   203b4:	mov	r1, r2
   203b8:	ldr	r0, [sp, #36]	; 0x24
   203bc:	ldr	r2, [sp, #44]	; 0x2c
   203c0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   203c4:	mov	r1, r0
   203c8:	cmp	r9, r1
   203cc:	beq	2041c <main@@Base+0xa394>
   203d0:	ldr	r0, [sp, #36]	; 0x24
   203d4:	ldr	r2, [sp, #44]	; 0x2c
   203d8:	add	r3, sp, #64	; 0x40
   203dc:	bl	35818 <flatcc_json_parser_build_string@@Base>
   203e0:	mov	r4, r0
   203e4:	ldr	r0, [sp, #64]	; 0x40
   203e8:	cmp	r0, #0
   203ec:	beq	20504 <main@@Base+0xa47c>
   203f0:	ldr	r0, [sp, #36]	; 0x24
   203f4:	mov	r1, #0
   203f8:	ldr	r0, [r0]
   203fc:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   20400:	cmp	r0, #0
   20404:	beq	20504 <main@@Base+0xa47c>
   20408:	ldr	r1, [sp, #64]	; 0x40
   2040c:	str	r1, [r0]
   20410:	ldr	r5, [sp, #44]	; 0x2c
   20414:	ldr	r8, [sp, #36]	; 0x24
   20418:	b	20438 <main@@Base+0xa3b0>
   2041c:	ldr	r8, [sp, #36]	; 0x24
   20420:	ldr	r5, [sp, #44]	; 0x2c
   20424:	mov	r1, r9
   20428:	mov	r0, r8
   2042c:	mov	r2, r5
   20430:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   20434:	mov	r4, r0
   20438:	sub	r0, r5, r4
   2043c:	cmp	r0, #2
   20440:	blt	2046c <main@@Base+0xa3e4>
   20444:	ldrb	r0, [r4]
   20448:	cmp	r0, #32
   2044c:	bls	20458 <main@@Base+0xa3d0>
   20450:	mov	r2, r4
   20454:	b	20480 <main@@Base+0xa3f8>
   20458:	bne	2046c <main@@Base+0xa3e4>
   2045c:	mov	r2, r4
   20460:	ldrb	r0, [r2, #1]!
   20464:	cmp	r0, #32
   20468:	bhi	20480 <main@@Base+0xa3f8>
   2046c:	mov	r0, r8
   20470:	mov	r1, r4
   20474:	mov	r2, r5
   20478:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2047c:	mov	r2, r0
   20480:	cmp	r2, r5
   20484:	beq	2081c <main@@Base+0xa794>
   20488:	ldrb	r0, [r2]
   2048c:	cmp	r0, #44	; 0x2c
   20490:	bne	20860 <main@@Base+0xa7d8>
   20494:	add	r1, r2, #1
   20498:	sub	r0, r5, r1
   2049c:	cmp	r0, #2
   204a0:	blt	204d4 <main@@Base+0xa44c>
   204a4:	ldrb	r0, [r1]
   204a8:	cmp	r0, #32
   204ac:	bls	204bc <main@@Base+0xa434>
   204b0:	ldr	r5, [sp, #44]	; 0x2c
   204b4:	mov	r2, r1
   204b8:	b	204e4 <main@@Base+0xa45c>
   204bc:	ldr	r5, [sp, #44]	; 0x2c
   204c0:	ldr	r8, [sp, #36]	; 0x24
   204c4:	bne	204d4 <main@@Base+0xa44c>
   204c8:	ldrb	r0, [r2, #2]!
   204cc:	cmp	r0, #32
   204d0:	bhi	204e4 <main@@Base+0xa45c>
   204d4:	mov	r0, r8
   204d8:	mov	r2, r5
   204dc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   204e0:	mov	r2, r0
   204e4:	cmp	r2, r5
   204e8:	beq	208c8 <main@@Base+0xa840>
   204ec:	ldrb	r0, [r2]
   204f0:	cmp	r0, #125	; 0x7d
   204f4:	bne	1fc7c <main@@Base+0x9bf4>
   204f8:	add	r1, r2, #1
   204fc:	sub	r0, r5, r1
   20500:	b	20874 <main@@Base+0xa7ec>
   20504:	ldr	r5, [sp, #44]	; 0x2c
   20508:	ldr	r8, [sp, #36]	; 0x24
   2050c:	ldr	sl, [sp, #40]	; 0x28
   20510:	mov	r0, r8
   20514:	mov	r1, r4
   20518:	mov	r2, r5
   2051c:	mov	r3, #33	; 0x21
   20520:	bl	333fc <flatcc_json_parser_set_error@@Base>
   20524:	mov	r4, r0
   20528:	ldr	r0, [sp, #52]	; 0x34
   2052c:	cmp	r0, #0
   20530:	beq	16fbc <main@@Base+0xf34>
   20534:	ldr	r0, [r8]
   20538:	mov	r1, #14
   2053c:	b	196bc <main@@Base+0x3634>
   20540:	ldr	r5, [sp, #44]	; 0x2c
   20544:	ldr	r8, [sp, #36]	; 0x24
   20548:	ldr	sl, [sp, #40]	; 0x28
   2054c:	bne	20560 <main@@Base+0xa4d8>
   20550:	ldrb	r0, [r2, #2]!
   20554:	mov	r4, r2
   20558:	cmp	r0, #32
   2055c:	bhi	1bf4c <main@@Base+0x5ec4>
   20560:	mov	r0, r8
   20564:	mov	r2, r5
   20568:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2056c:	b	1bf48 <main@@Base+0x5ec0>
   20570:	ldr	r5, [sp, #44]	; 0x2c
   20574:	ldr	r8, [sp, #36]	; 0x24
   20578:	ldr	sl, [sp, #40]	; 0x28
   2057c:	bne	2058c <main@@Base+0xa504>
   20580:	ldrb	r0, [r4, #2]!
   20584:	cmp	r0, #32
   20588:	bhi	1d99c <main@@Base+0x7914>
   2058c:	mov	r0, r8
   20590:	mov	r2, r5
   20594:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   20598:	mov	r4, r0
   2059c:	b	1d99c <main@@Base+0x7914>
   205a0:	ldr	r5, [sp, #44]	; 0x2c
   205a4:	ldr	r8, [sp, #36]	; 0x24
   205a8:	ldr	sl, [sp, #40]	; 0x28
   205ac:	bne	205c0 <main@@Base+0xa538>
   205b0:	ldrb	r0, [r4, #2]!
   205b4:	mov	r7, r4
   205b8:	cmp	r0, #32
   205bc:	bhi	1c004 <main@@Base+0x5f7c>
   205c0:	mov	r0, r8
   205c4:	mov	r2, r5
   205c8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   205cc:	b	1c000 <main@@Base+0x5f78>
   205d0:	ldr	r8, [sp, #36]	; 0x24
   205d4:	ldr	r5, [sp, #44]	; 0x2c
   205d8:	mov	r1, r2
   205dc:	mov	r0, r8
   205e0:	mov	r2, r5
   205e4:	mov	r3, #10
   205e8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   205ec:	ldr	sl, [sp, #40]	; 0x28
   205f0:	b	1be58 <main@@Base+0x5dd0>
   205f4:	ldr	r8, [sp, #36]	; 0x24
   205f8:	ldr	r5, [sp, #44]	; 0x2c
   205fc:	mov	r1, r2
   20600:	mov	r0, r8
   20604:	mov	r2, r5
   20608:	mov	r3, #9
   2060c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   20610:	ldr	sl, [sp, #40]	; 0x28
   20614:	b	1d250 <main@@Base+0x71c8>
   20618:	ldr	r0, [sp, #36]	; 0x24
   2061c:	ldr	r2, [sp, #44]	; 0x2c
   20620:	mov	r1, r4
   20624:	mov	r3, #9
   20628:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2062c:	b	207f8 <main@@Base+0xa770>
   20630:	ldr	r6, [fp, #-56]	; 0xffffffc8
   20634:	mov	r4, r1
   20638:	str	r6, [fp, #-60]	; 0xffffffc4
   2063c:	b	1f6f0 <main@@Base+0x9668>
   20640:	ldr	r8, [sp, #36]	; 0x24
   20644:	ldr	r5, [sp, #44]	; 0x2c
   20648:	mov	r1, r2
   2064c:	mov	r0, r8
   20650:	mov	r2, r5
   20654:	mov	r3, #9
   20658:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2065c:	ldr	sl, [sp, #40]	; 0x28
   20660:	b	1d708 <main@@Base+0x7680>
   20664:	ldr	r9, [sp, #44]	; 0x2c
   20668:	b	2098c <main@@Base+0xa904>
   2066c:	cmp	r0, #93	; 0x5d
   20670:	bne	20904 <main@@Base+0xa87c>
   20674:	ldr	r0, [sp, #44]	; 0x2c
   20678:	add	r1, r9, #1
   2067c:	sub	r0, r0, r1
   20680:	cmp	r0, #2
   20684:	blt	2097c <main@@Base+0xa8f4>
   20688:	ldrb	r0, [r1]
   2068c:	cmp	r0, #32
   20690:	bls	2096c <main@@Base+0xa8e4>
   20694:	mov	r9, r1
   20698:	b	2098c <main@@Base+0xa904>
   2069c:	ldr	r1, [sp, #44]	; 0x2c
   206a0:	ldr	r0, [sp, #36]	; 0x24
   206a4:	mov	r2, r1
   206a8:	b	20910 <main@@Base+0xa888>
   206ac:	ldr	r8, [sp, #36]	; 0x24
   206b0:	ldr	r5, [sp, #44]	; 0x2c
   206b4:	mov	r1, r3
   206b8:	mov	r0, r8
   206bc:	mov	r2, r5
   206c0:	mov	r3, #10
   206c4:	b	1c5a4 <main@@Base+0x651c>
   206c8:	ldr	r4, [sp, #44]	; 0x2c
   206cc:	b	20720 <main@@Base+0xa698>
   206d0:	cmp	r0, #93	; 0x5d
   206d4:	bne	2091c <main@@Base+0xa894>
   206d8:	ldr	r0, [sp, #44]	; 0x2c
   206dc:	add	r1, r4, #1
   206e0:	sub	r0, r0, r1
   206e4:	cmp	r0, #2
   206e8:	blt	20710 <main@@Base+0xa688>
   206ec:	ldrb	r0, [r1]
   206f0:	cmp	r0, #32
   206f4:	bls	20700 <main@@Base+0xa678>
   206f8:	mov	r4, r1
   206fc:	b	20720 <main@@Base+0xa698>
   20700:	bne	20710 <main@@Base+0xa688>
   20704:	ldrb	r0, [r4, #2]!
   20708:	cmp	r0, #32
   2070c:	bhi	20720 <main@@Base+0xa698>
   20710:	ldr	r0, [sp, #36]	; 0x24
   20714:	ldr	r2, [sp, #44]	; 0x2c
   20718:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2071c:	mov	r4, r0
   20720:	ldr	r8, [sp, #36]	; 0x24
   20724:	ldr	r0, [r8]
   20728:	bl	30238 <flatcc_builder_end_vector@@Base>
   2072c:	ldr	r5, [sp, #44]	; 0x2c
   20730:	ldr	sl, [sp, #40]	; 0x28
   20734:	cmp	r0, #0
   20738:	str	r0, [sp, #52]	; 0x34
   2073c:	beq	16fbc <main@@Base+0xf34>
   20740:	ldr	r0, [r8]
   20744:	mov	r1, #13
   20748:	b	196bc <main@@Base+0x3634>
   2074c:	ldr	r5, [sp, #44]	; 0x2c
   20750:	ldr	r8, [sp, #36]	; 0x24
   20754:	ldr	sl, [sp, #40]	; 0x28
   20758:	bne	2076c <main@@Base+0xa6e4>
   2075c:	ldrb	r0, [r2, #2]!
   20760:	mov	r4, r2
   20764:	cmp	r0, #32
   20768:	bhi	1be5c <main@@Base+0x5dd4>
   2076c:	mov	r0, r8
   20770:	mov	r2, r5
   20774:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   20778:	b	1be58 <main@@Base+0x5dd0>
   2077c:	ldr	r1, [sp, #44]	; 0x2c
   20780:	ldr	r0, [sp, #36]	; 0x24
   20784:	mov	r2, r1
   20788:	b	20928 <main@@Base+0xa8a0>
   2078c:	mov	r4, r5
   20790:	b	20948 <main@@Base+0xa8c0>
   20794:	ldr	r5, [sp, #44]	; 0x2c
   20798:	ldr	r8, [sp, #36]	; 0x24
   2079c:	ldr	sl, [sp, #40]	; 0x28
   207a0:	bne	207b4 <main@@Base+0xa72c>
   207a4:	ldrb	r0, [r2, #2]!
   207a8:	mov	r4, r2
   207ac:	cmp	r0, #32
   207b0:	bhi	1d254 <main@@Base+0x71cc>
   207b4:	mov	r0, r8
   207b8:	mov	r2, r5
   207bc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   207c0:	b	1d250 <main@@Base+0x71c8>
   207c4:	cmp	r0, #93	; 0x5d
   207c8:	bne	20930 <main@@Base+0xa8a8>
   207cc:	ldr	r0, [sp, #44]	; 0x2c
   207d0:	add	r1, r4, #1
   207d4:	sub	r0, r0, r1
   207d8:	b	2082c <main@@Base+0xa7a4>
   207dc:	bne	207ec <main@@Base+0xa764>
   207e0:	ldrb	r0, [r4, #2]!
   207e4:	cmp	r0, #32
   207e8:	bhi	207fc <main@@Base+0xa774>
   207ec:	ldr	r0, [sp, #36]	; 0x24
   207f0:	ldr	r2, [sp, #44]	; 0x2c
   207f4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   207f8:	mov	r4, r0
   207fc:	ldr	r5, [sp, #44]	; 0x2c
   20800:	ldr	r8, [sp, #36]	; 0x24
   20804:	ldr	sl, [sp, #40]	; 0x28
   20808:	b	1d8a8 <main@@Base+0x7820>
   2080c:	mov	r0, r8
   20810:	mov	r1, r5
   20814:	mov	r2, r5
   20818:	b	2093c <main@@Base+0xa8b4>
   2081c:	mov	r4, r5
   20820:	b	1d7cc <main@@Base+0x7744>
   20824:	add	r1, r4, #1
   20828:	sub	r0, r5, r1
   2082c:	cmp	r0, #2
   20830:	blt	20850 <main@@Base+0xa7c8>
   20834:	ldrb	r0, [r1]
   20838:	cmp	r0, #32
   2083c:	bhi	1eb14 <main@@Base+0x8a8c>
   20840:	bne	20850 <main@@Base+0xa7c8>
   20844:	ldrb	r0, [r4, #2]!
   20848:	cmp	r0, #32
   2084c:	bhi	20948 <main@@Base+0xa8c0>
   20850:	ldr	r0, [sp, #36]	; 0x24
   20854:	ldr	r2, [sp, #44]	; 0x2c
   20858:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2085c:	b	20944 <main@@Base+0xa8bc>
   20860:	cmp	r0, #125	; 0x7d
   20864:	bne	20954 <main@@Base+0xa8cc>
   20868:	ldr	r0, [sp, #44]	; 0x2c
   2086c:	add	r1, r2, #1
   20870:	sub	r0, r0, r1
   20874:	ldr	r8, [sp, #36]	; 0x24
   20878:	cmp	r0, #2
   2087c:	blt	209ac <main@@Base+0xa924>
   20880:	ldrb	r0, [r1]
   20884:	cmp	r0, #32
   20888:	bls	20994 <main@@Base+0xa90c>
   2088c:	ldr	r8, [sp, #36]	; 0x24
   20890:	mov	r4, r1
   20894:	b	1d7cc <main@@Base+0x7744>
   20898:	ldr	r5, [sp, #44]	; 0x2c
   2089c:	ldr	r8, [sp, #36]	; 0x24
   208a0:	ldr	sl, [sp, #40]	; 0x28
   208a4:	bne	208b8 <main@@Base+0xa830>
   208a8:	ldrb	r0, [r2, #2]!
   208ac:	mov	r4, r2
   208b0:	cmp	r0, #32
   208b4:	bhi	1d70c <main@@Base+0x7684>
   208b8:	mov	r0, r8
   208bc:	mov	r2, r5
   208c0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   208c4:	b	1d708 <main@@Base+0x7680>
   208c8:	ldr	r8, [sp, #36]	; 0x24
   208cc:	mov	r1, r5
   208d0:	mov	r2, r5
   208d4:	b	20960 <main@@Base+0xa8d8>
   208d8:	ldr	r5, [sp, #44]	; 0x2c
   208dc:	ldr	r8, [sp, #36]	; 0x24
   208e0:	bne	208f4 <main@@Base+0xa86c>
   208e4:	ldrb	r0, [r3, #2]!
   208e8:	mov	r4, r3
   208ec:	cmp	r0, #32
   208f0:	bhi	1c5ac <main@@Base+0x6524>
   208f4:	mov	r0, r8
   208f8:	mov	r2, r5
   208fc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   20900:	b	1c5a8 <main@@Base+0x6520>
   20904:	ldr	r0, [sp, #36]	; 0x24
   20908:	ldr	r2, [sp, #44]	; 0x2c
   2090c:	mov	r1, r9
   20910:	mov	r3, #9
   20914:	bl	333fc <flatcc_json_parser_set_error@@Base>
   20918:	b	20988 <main@@Base+0xa900>
   2091c:	ldr	r0, [sp, #36]	; 0x24
   20920:	ldr	r2, [sp, #44]	; 0x2c
   20924:	mov	r1, r4
   20928:	mov	r3, #9
   2092c:	b	1dbc0 <main@@Base+0x7b38>
   20930:	ldr	r0, [sp, #36]	; 0x24
   20934:	ldr	r2, [sp, #44]	; 0x2c
   20938:	mov	r1, r4
   2093c:	mov	r3, #9
   20940:	bl	333fc <flatcc_json_parser_set_error@@Base>
   20944:	mov	r4, r0
   20948:	ldr	r5, [sp, #44]	; 0x2c
   2094c:	ldr	r8, [sp, #36]	; 0x24
   20950:	b	1d998 <main@@Base+0x7910>
   20954:	ldr	r8, [sp, #36]	; 0x24
   20958:	mov	r1, r2
   2095c:	ldr	r2, [sp, #44]	; 0x2c
   20960:	mov	r0, r8
   20964:	mov	r3, #10
   20968:	b	1d7c4 <main@@Base+0x773c>
   2096c:	bne	2097c <main@@Base+0xa8f4>
   20970:	ldrb	r0, [r9, #2]!
   20974:	cmp	r0, #32
   20978:	bhi	2098c <main@@Base+0xa904>
   2097c:	ldr	r0, [sp, #36]	; 0x24
   20980:	ldr	r2, [sp, #44]	; 0x2c
   20984:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   20988:	mov	r9, r0
   2098c:	ldr	r8, [sp, #36]	; 0x24
   20990:	b	1ee04 <main@@Base+0x8d7c>
   20994:	ldr	r8, [sp, #36]	; 0x24
   20998:	bne	209ac <main@@Base+0xa924>
   2099c:	ldrb	r0, [r2, #2]!
   209a0:	mov	r4, r2
   209a4:	cmp	r0, #32
   209a8:	bhi	1d7cc <main@@Base+0x7744>
   209ac:	ldr	r2, [sp, #44]	; 0x2c
   209b0:	mov	r0, r8
   209b4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   209b8:	b	1d7c8 <main@@Base+0x7740>
   209bc:	mov	r4, r5
   209c0:	b	1705c <main@@Base+0xfd4>
   209c4:	cmp	r0, #125	; 0x7d
   209c8:	bne	209fc <main@@Base+0xa974>
   209cc:	add	r1, r2, #1
   209d0:	sub	r0, r5, r1
   209d4:	cmp	r0, #2
   209d8:	blt	20a24 <main@@Base+0xa99c>
   209dc:	ldrb	r0, [r1]
   209e0:	cmp	r0, #32
   209e4:	bls	20a10 <main@@Base+0xa988>
   209e8:	mov	r4, r1
   209ec:	b	1705c <main@@Base+0xfd4>
   209f0:	mov	r0, r8
   209f4:	mov	r1, r5
   209f8:	b	20a04 <main@@Base+0xa97c>
   209fc:	mov	r0, r8
   20a00:	mov	r1, r2
   20a04:	mov	r2, r5
   20a08:	mov	r3, #10
   20a0c:	b	17054 <main@@Base+0xfcc>
   20a10:	bne	20a24 <main@@Base+0xa99c>
   20a14:	ldrb	r0, [r2, #2]!
   20a18:	mov	r4, r2
   20a1c:	cmp	r0, #32
   20a20:	bhi	1705c <main@@Base+0xfd4>
   20a24:	mov	r0, r8
   20a28:	mov	r2, r5
   20a2c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   20a30:	b	17058 <main@@Base+0xfd0>
   20a34:	mov	r4, r6
   20a38:	b	16fbc <main@@Base+0xf34>
   20a3c:	ldr	r8, [sp, #36]	; 0x24
   20a40:	mov	r4, r1
   20a44:	b	16fbc <main@@Base+0xf34>
   20a48:	ldr	r5, [sp, #44]	; 0x2c
   20a4c:	b	20a54 <main@@Base+0xa9cc>
   20a50:	ldr	r8, [sp, #36]	; 0x24
   20a54:	mov	r4, r9
   20a58:	b	16fbc <main@@Base+0xf34>
   20a5c:	mov	r4, r5
   20a60:	b	20a80 <main@@Base+0xa9f8>
   20a64:	ldr	r5, [sp, #44]	; 0x2c
   20a68:	ldr	r8, [sp, #36]	; 0x24
   20a6c:	mov	r4, r7
   20a70:	b	16fbc <main@@Base+0xf34>
   20a74:	mov	r4, r1
   20a78:	b	20a80 <main@@Base+0xa9f8>
   20a7c:	mov	r4, r6
   20a80:	ldr	r5, [sp, #44]	; 0x2c
   20a84:	ldr	r8, [sp, #36]	; 0x24
   20a88:	b	16fbc <main@@Base+0xf34>
   20a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a90:	add	fp, sp, #28
   20a94:	sub	sp, sp, #20
   20a98:	mov	r5, r0
   20a9c:	movw	r0, #51732	; 0xca14
   20aa0:	movw	r3, #27053	; 0x69ad
   20aa4:	mov	r4, r1
   20aa8:	mov	r1, #3
   20aac:	mov	r2, #0
   20ab0:	mov	r8, #0
   20ab4:	movt	r0, #2
   20ab8:	movt	r3, #4
   20abc:	str	r1, [sp]
   20ac0:	mov	r1, r4
   20ac4:	str	r0, [sp, #4]
   20ac8:	mov	r0, r5
   20acc:	bl	41748 <flatcc_json_printer_struct_field@@Base>
   20ad0:	movw	r3, #27057	; 0x69b1
   20ad4:	mov	r0, #150	; 0x96
   20ad8:	mov	r1, #4
   20adc:	mov	r2, #1
   20ae0:	mov	r6, #4
   20ae4:	movt	r3, #4
   20ae8:	str	r1, [sp]
   20aec:	str	r0, [sp, #4]
   20af0:	mov	r0, r5
   20af4:	mov	r1, r4
   20af8:	bl	39034 <flatcc_json_printer_int16_field@@Base>
   20afc:	movw	r3, #27062	; 0x69b6
   20b00:	mov	r0, #100	; 0x64
   20b04:	mov	r1, #2
   20b08:	mov	r2, #2
   20b0c:	movt	r3, #4
   20b10:	str	r1, [sp]
   20b14:	str	r0, [sp, #4]
   20b18:	mov	r0, r5
   20b1c:	mov	r1, r4
   20b20:	bl	39034 <flatcc_json_printer_int16_field@@Base>
   20b24:	movw	r3, #27065	; 0x69b9
   20b28:	mov	r0, r5
   20b2c:	mov	r1, r4
   20b30:	mov	r2, #3
   20b34:	str	r6, [sp]
   20b38:	movt	r3, #4
   20b3c:	bl	387ac <flatcc_json_printer_string_field@@Base>
   20b40:	movw	r3, #27070	; 0x69be
   20b44:	mov	r0, #9
   20b48:	mov	r1, r4
   20b4c:	mov	r2, #5
   20b50:	mov	r7, #5
   20b54:	movt	r3, #4
   20b58:	str	r0, [sp]
   20b5c:	mov	r0, r5
   20b60:	bl	3ac5c <flatcc_json_printer_uint8_vector_field@@Base>
   20b64:	movw	r0, #51984	; 0xcb10
   20b68:	movw	r3, #27080	; 0x69c8
   20b6c:	mov	r1, #8
   20b70:	mov	r2, #6
   20b74:	str	r7, [sp]
   20b78:	mov	r7, #5
   20b7c:	movt	r0, #2
   20b80:	movt	r3, #4
   20b84:	str	r1, [sp, #4]
   20b88:	mov	r1, r4
   20b8c:	str	r0, [sp, #8]
   20b90:	mov	r0, r5
   20b94:	bl	39954 <flatcc_json_printer_int8_enum_field@@Base>
   20b98:	movw	r0, #52296	; 0xcc48
   20b9c:	movw	r1, #52180	; 0xcbd4
   20ba0:	movw	r3, #27456	; 0x6b40
   20ba4:	mov	r2, #8
   20ba8:	str	r6, [sp]
   20bac:	movt	r0, #2
   20bb0:	movt	r1, #2
   20bb4:	movt	r3, #4
   20bb8:	str	r1, [sp, #4]
   20bbc:	str	r0, [sp, #8]
   20bc0:	mov	r0, r5
   20bc4:	mov	r1, r4
   20bc8:	bl	40f04 <flatcc_json_printer_union_field@@Base>
   20bcc:	movw	r0, #52336	; 0xcc70
   20bd0:	movw	r3, #27086	; 0x69ce
   20bd4:	mov	r1, r4
   20bd8:	mov	r2, #9
   20bdc:	str	r7, [sp]
   20be0:	mov	sl, #5
   20be4:	str	r6, [sp, #4]
   20be8:	movt	r0, #2
   20bec:	movt	r3, #4
   20bf0:	str	r0, [sp, #8]
   20bf4:	mov	r0, r5
   20bf8:	bl	3fba4 <flatcc_json_printer_struct_vector_field@@Base>
   20bfc:	movw	r3, #27092	; 0x69d4
   20c00:	mov	r7, #17
   20c04:	mov	r0, r5
   20c08:	mov	r1, r4
   20c0c:	mov	r2, #10
   20c10:	movt	r3, #4
   20c14:	str	r7, [sp]
   20c18:	bl	4013c <flatcc_json_printer_string_vector_field@@Base>
   20c1c:	movw	r3, #27110	; 0x69e6
   20c20:	movw	r9, #2700	; 0xa8c
   20c24:	mov	r0, r5
   20c28:	mov	r1, r4
   20c2c:	mov	r2, #11
   20c30:	movt	r3, #4
   20c34:	movt	r9, #2
   20c38:	stm	sp, {r7, r9}
   20c3c:	bl	404f0 <flatcc_json_printer_table_vector_field@@Base>
   20c40:	movw	r3, #27128	; 0x69f8
   20c44:	mov	r0, r5
   20c48:	mov	r1, r4
   20c4c:	mov	r2, #12
   20c50:	str	sl, [sp]
   20c54:	mov	sl, #5
   20c58:	str	r9, [sp, #4]
   20c5c:	movt	r3, #4
   20c60:	bl	40d24 <flatcc_json_printer_table_field@@Base>
   20c64:	movw	r3, #27134	; 0x69fe
   20c68:	mov	r0, #20
   20c6c:	mov	r1, r4
   20c70:	mov	r2, #13
   20c74:	movt	r3, #4
   20c78:	stm	sp, {r0, r8, r9}
   20c7c:	mov	r0, r5
   20c80:	bl	41e84 <flatcc_json_printer_table_as_nested_root@@Base>
   20c84:	movw	r0, #52432	; 0xccd0
   20c88:	movw	r3, #27155	; 0x6a13
   20c8c:	mov	r1, #9
   20c90:	mov	r2, #14
   20c94:	movt	r0, #2
   20c98:	movt	r3, #4
   20c9c:	str	r1, [sp]
   20ca0:	mov	r1, r4
   20ca4:	str	r0, [sp, #4]
   20ca8:	mov	r0, r5
   20cac:	bl	40d24 <flatcc_json_printer_table_field@@Base>
   20cb0:	movw	r3, #27165	; 0x6a1d
   20cb4:	mov	r0, #1
   20cb8:	mov	r9, #8
   20cbc:	mov	r1, r4
   20cc0:	mov	r2, #15
   20cc4:	movt	r3, #4
   20cc8:	str	r0, [sp, #4]
   20ccc:	mov	r0, r5
   20cd0:	str	r9, [sp]
   20cd4:	bl	392f4 <flatcc_json_printer_bool_field@@Base>
   20cd8:	movw	r3, #27174	; 0x6a26
   20cdc:	mov	r6, #16
   20ce0:	mov	r0, r5
   20ce4:	mov	r1, r4
   20ce8:	mov	r2, #16
   20cec:	movt	r3, #4
   20cf0:	stm	sp, {r6, r8}
   20cf4:	bl	3911c <flatcc_json_printer_int32_field@@Base>
   20cf8:	movw	r3, #27191	; 0x6a37
   20cfc:	mov	r0, r5
   20d00:	mov	r1, r4
   20d04:	mov	r2, #17
   20d08:	stm	sp, {r6, r8}
   20d0c:	movt	r3, #4
   20d10:	bl	38da8 <flatcc_json_printer_uint32_field@@Base>
   20d14:	movw	r3, #27208	; 0x6a48
   20d18:	mov	r0, r5
   20d1c:	mov	r1, r4
   20d20:	mov	r2, #18
   20d24:	str	r8, [sp, #8]
   20d28:	str	r8, [sp, #12]
   20d2c:	str	r6, [sp]
   20d30:	movt	r3, #4
   20d34:	bl	391f8 <flatcc_json_printer_int64_field@@Base>
   20d38:	movw	r3, #27225	; 0x6a59
   20d3c:	mov	r0, r5
   20d40:	mov	r1, r4
   20d44:	mov	r2, #19
   20d48:	str	r8, [sp, #8]
   20d4c:	str	r8, [sp, #12]
   20d50:	str	r6, [sp]
   20d54:	movt	r3, #4
   20d58:	bl	38e6c <flatcc_json_printer_uint64_field@@Base>
   20d5c:	movw	r3, #27242	; 0x6a6a
   20d60:	mov	r0, r5
   20d64:	mov	r1, r4
   20d68:	mov	r2, #20
   20d6c:	stm	sp, {r7, r8}
   20d70:	movt	r3, #4
   20d74:	bl	3911c <flatcc_json_printer_int32_field@@Base>
   20d78:	movw	r3, #27260	; 0x6a7c
   20d7c:	mov	r0, r5
   20d80:	mov	r1, r4
   20d84:	mov	r2, #21
   20d88:	stm	sp, {r7, r8}
   20d8c:	movt	r3, #4
   20d90:	bl	38da8 <flatcc_json_printer_uint32_field@@Base>
   20d94:	movw	r3, #27278	; 0x6a8e
   20d98:	mov	r0, r5
   20d9c:	mov	r1, r4
   20da0:	mov	r2, #22
   20da4:	str	r8, [sp, #8]
   20da8:	str	r8, [sp, #12]
   20dac:	str	r7, [sp]
   20db0:	movt	r3, #4
   20db4:	bl	391f8 <flatcc_json_printer_int64_field@@Base>
   20db8:	movw	r3, #27296	; 0x6aa0
   20dbc:	mov	r0, r5
   20dc0:	mov	r1, r4
   20dc4:	mov	r2, #23
   20dc8:	str	r8, [sp, #8]
   20dcc:	str	r8, [sp, #12]
   20dd0:	str	r7, [sp]
   20dd4:	mov	r8, #23
   20dd8:	movt	r3, #4
   20ddc:	bl	38e6c <flatcc_json_printer_uint64_field@@Base>
   20de0:	movw	r3, #27314	; 0x6ab2
   20de4:	mov	r0, r5
   20de8:	mov	r1, r4
   20dec:	mov	r2, #24
   20df0:	str	r6, [sp]
   20df4:	movt	r3, #4
   20df8:	bl	3cae0 <flatcc_json_printer_bool_vector_field@@Base>
   20dfc:	vldr	s0, [pc, #396]	; 20f90 <main@@Base+0xaf08>
   20e00:	movw	r3, #27331	; 0x6ac3
   20e04:	mov	r0, r5
   20e08:	mov	r1, r4
   20e0c:	mov	r2, #25
   20e10:	str	sl, [sp]
   20e14:	movt	r3, #4
   20e18:	bl	393ec <flatcc_json_printer_float_field@@Base>
   20e1c:	movw	r3, #27337	; 0x6ac9
   20e20:	vmov.f32	s0, #8	; 0x40400000  3.0
   20e24:	mov	r6, #6
   20e28:	mov	r0, r5
   20e2c:	mov	r1, r4
   20e30:	mov	r2, #26
   20e34:	movt	r3, #4
   20e38:	str	r6, [sp]
   20e3c:	bl	393ec <flatcc_json_printer_float_field@@Base>
   20e40:	vldr	s0, [pc, #332]	; 20f94 <main@@Base+0xaf0c>
   20e44:	movw	r3, #27344	; 0x6ad0
   20e48:	mov	r0, r5
   20e4c:	mov	r1, r4
   20e50:	mov	r2, #27
   20e54:	str	r6, [sp]
   20e58:	movt	r3, #4
   20e5c:	bl	393ec <flatcc_json_printer_float_field@@Base>
   20e60:	movw	r3, #27351	; 0x6ad7
   20e64:	mov	r0, #18
   20e68:	mov	r1, r4
   20e6c:	mov	r2, #28
   20e70:	movt	r3, #4
   20e74:	str	r0, [sp]
   20e78:	mov	r0, r5
   20e7c:	bl	4013c <flatcc_json_printer_string_vector_field@@Base>
   20e80:	movw	r0, #52564	; 0xcd54
   20e84:	movw	r3, #27370	; 0x6aea
   20e88:	stm	sp, {r8, r9}
   20e8c:	mov	r1, r4
   20e90:	mov	r2, #29
   20e94:	movt	r0, #2
   20e98:	movt	r3, #4
   20e9c:	str	r0, [sp, #8]
   20ea0:	mov	r0, r5
   20ea4:	bl	3fba4 <flatcc_json_printer_struct_vector_field@@Base>
   20ea8:	movw	r3, #27394	; 0x6b02
   20eac:	mov	r6, #4
   20eb0:	mov	r0, r5
   20eb4:	mov	r1, r4
   20eb8:	mov	r2, #30
   20ebc:	movt	r3, #4
   20ec0:	str	r6, [sp]
   20ec4:	bl	3ac5c <flatcc_json_printer_uint8_vector_field@@Base>
   20ec8:	movw	r0, #52336	; 0xcc70
   20ecc:	movw	r3, #27399	; 0x6b07
   20ed0:	mov	r1, r4
   20ed4:	mov	r2, #31
   20ed8:	str	sl, [sp]
   20edc:	str	r6, [sp, #4]
   20ee0:	movt	r0, #2
   20ee4:	movt	r3, #4
   20ee8:	str	r0, [sp, #8]
   20eec:	mov	r0, r5
   20ef0:	bl	3fba4 <flatcc_json_printer_struct_vector_field@@Base>
   20ef4:	movw	r3, #27405	; 0x6b0d
   20ef8:	mov	r0, #15
   20efc:	mov	r1, r4
   20f00:	mov	r2, #32
   20f04:	movt	r3, #4
   20f08:	str	r0, [sp]
   20f0c:	mov	r0, r5
   20f10:	bl	3c6ec <flatcc_json_printer_int64_vector_field@@Base>
   20f14:	movw	r3, #27421	; 0x6b1d
   20f18:	mov	r0, r5
   20f1c:	mov	r1, r4
   20f20:	mov	r2, #33	; 0x21
   20f24:	str	r7, [sp]
   20f28:	movt	r3, #4
   20f2c:	bl	3d2b8 <flatcc_json_printer_double_vector_field@@Base>
   20f30:	movw	r0, #52672	; 0xcdc0
   20f34:	movw	r3, #27439	; 0x6b2f
   20f38:	mov	r1, #21
   20f3c:	mov	r2, #34	; 0x22
   20f40:	movt	r0, #2
   20f44:	movt	r3, #4
   20f48:	str	r1, [sp]
   20f4c:	mov	r1, r4
   20f50:	str	r0, [sp, #4]
   20f54:	mov	r0, r5
   20f58:	bl	40d24 <flatcc_json_printer_table_field@@Base>
   20f5c:	movw	r0, #52676	; 0xcdc4
   20f60:	movw	r3, #27461	; 0x6b45
   20f64:	mov	r1, #10
   20f68:	mov	r2, #35	; 0x23
   20f6c:	movt	r0, #2
   20f70:	movt	r3, #4
   20f74:	str	r1, [sp]
   20f78:	mov	r1, r4
   20f7c:	str	r0, [sp, #4]
   20f80:	mov	r0, r5
   20f84:	bl	40d24 <flatcc_json_printer_table_field@@Base>
   20f88:	sub	sp, fp, #28
   20f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f90:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   20f94:	andeq	r0, r0, r0
   20f98:	push	{r4, r5, r6, r7, fp, lr}
   20f9c:	add	fp, sp, #16
   20fa0:	sub	sp, sp, #8
   20fa4:	mov	r1, #0
   20fa8:	mov	r2, #32
   20fac:	mov	r3, #16
   20fb0:	mov	r4, r0
   20fb4:	bl	31cac <flatcc_verify_field@@Base>
   20fb8:	cmp	r0, #0
   20fbc:	bne	213c4 <main@@Base+0xb33c>
   20fc0:	mov	r0, r4
   20fc4:	mov	r1, #2
   20fc8:	mov	r2, #2
   20fcc:	mov	r3, #2
   20fd0:	bl	31cac <flatcc_verify_field@@Base>
   20fd4:	cmp	r0, #0
   20fd8:	bne	213c4 <main@@Base+0xb33c>
   20fdc:	mov	r0, r4
   20fe0:	mov	r1, #1
   20fe4:	mov	r2, #2
   20fe8:	mov	r3, #2
   20fec:	bl	31cac <flatcc_verify_field@@Base>
   20ff0:	cmp	r0, #0
   20ff4:	bne	213c4 <main@@Base+0xb33c>
   20ff8:	mov	r0, r4
   20ffc:	mov	r1, #3
   21000:	mov	r2, #1
   21004:	bl	31d24 <flatcc_verify_string_field@@Base>
   21008:	cmp	r0, #0
   2100c:	bne	213c4 <main@@Base+0xb33c>
   21010:	mov	r0, r4
   21014:	mov	r1, #6
   21018:	mov	r2, #1
   2101c:	mov	r3, #1
   21020:	mov	r5, #1
   21024:	bl	31cac <flatcc_verify_field@@Base>
   21028:	cmp	r0, #0
   2102c:	bne	213c4 <main@@Base+0xb33c>
   21030:	mvn	r0, #0
   21034:	mov	r1, #5
   21038:	mov	r2, #0
   2103c:	mov	r3, #1
   21040:	str	r5, [sp]
   21044:	str	r0, [sp, #4]
   21048:	mov	r0, r4
   2104c:	bl	31e30 <flatcc_verify_vector_field@@Base>
   21050:	cmp	r0, #0
   21054:	bne	213c4 <main@@Base+0xb33c>
   21058:	movw	r3, #3992	; 0xf98
   2105c:	mov	r0, r4
   21060:	mov	r1, #11
   21064:	mov	r2, #0
   21068:	movt	r3, #2
   2106c:	bl	3210c <flatcc_verify_table_vector_field@@Base>
   21070:	cmp	r0, #0
   21074:	bne	213c4 <main@@Base+0xb33c>
   21078:	mov	r0, r4
   2107c:	mov	r1, #10
   21080:	mov	r2, #0
   21084:	bl	31ed8 <flatcc_verify_string_vector_field@@Base>
   21088:	cmp	r0, #0
   2108c:	bne	213c4 <main@@Base+0xb33c>
   21090:	mov	r0, r4
   21094:	mov	r1, #28
   21098:	mov	r2, #0
   2109c:	bl	31ed8 <flatcc_verify_string_vector_field@@Base>
   210a0:	cmp	r0, #0
   210a4:	bne	213c4 <main@@Base+0xb33c>
   210a8:	mvn	r0, #0
   210ac:	mov	r1, #1
   210b0:	mov	r2, #0
   210b4:	mov	r3, #1
   210b8:	str	r1, [sp]
   210bc:	str	r0, [sp, #4]
   210c0:	mov	r0, r4
   210c4:	mov	r1, #24
   210c8:	bl	31e30 <flatcc_verify_vector_field@@Base>
   210cc:	cmp	r0, #0
   210d0:	bne	213c4 <main@@Base+0xb33c>
   210d4:	mvn	r0, #-536870912	; 0xe0000000
   210d8:	mov	r1, #4
   210dc:	mov	r2, #0
   210e0:	mov	r3, #8
   210e4:	str	r1, [sp]
   210e8:	str	r0, [sp, #4]
   210ec:	mov	r0, r4
   210f0:	mov	r1, #29
   210f4:	bl	31e30 <flatcc_verify_vector_field@@Base>
   210f8:	cmp	r0, #0
   210fc:	bne	213c4 <main@@Base+0xb33c>
   21100:	movw	r5, #3992	; 0xf98
   21104:	mov	r0, r4
   21108:	mov	r1, #12
   2110c:	mov	r2, #0
   21110:	movt	r5, #2
   21114:	mov	r3, r5
   21118:	bl	3200c <flatcc_verify_table_field@@Base>
   2111c:	cmp	r0, #0
   21120:	bne	213c4 <main@@Base+0xb33c>
   21124:	movw	r3, #54516	; 0xd4f4
   21128:	mov	r0, r4
   2112c:	mov	r1, #8
   21130:	mov	r2, #0
   21134:	movt	r3, #2
   21138:	bl	32b90 <flatcc_verify_union_field@@Base>
   2113c:	cmp	r0, #0
   21140:	bne	213c4 <main@@Base+0xb33c>
   21144:	mvn	r6, #-1073741824	; 0xc0000000
   21148:	mov	r7, #2
   2114c:	mov	r0, r4
   21150:	mov	r1, #9
   21154:	mov	r2, #0
   21158:	mov	r3, #4
   2115c:	str	r7, [sp]
   21160:	str	r6, [sp, #4]
   21164:	bl	31e30 <flatcc_verify_vector_field@@Base>
   21168:	cmp	r0, #0
   2116c:	bne	213c4 <main@@Base+0xb33c>
   21170:	mov	r0, r4
   21174:	mov	r1, #31
   21178:	mov	r2, #0
   2117c:	mov	r3, #4
   21180:	str	r7, [sp]
   21184:	str	r6, [sp, #4]
   21188:	bl	31e30 <flatcc_verify_vector_field@@Base>
   2118c:	cmp	r0, #0
   21190:	bne	213c4 <main@@Base+0xb33c>
   21194:	mov	r0, #1
   21198:	mov	r1, #13
   2119c:	mov	r2, #0
   211a0:	mov	r3, #0
   211a4:	stm	sp, {r0, r5}
   211a8:	mov	r0, r4
   211ac:	bl	329e0 <flatcc_verify_table_as_nested_root@@Base>
   211b0:	cmp	r0, #0
   211b4:	bne	213c4 <main@@Base+0xb33c>
   211b8:	movw	r3, #54560	; 0xd520
   211bc:	mov	r0, r4
   211c0:	mov	r1, #14
   211c4:	mov	r2, #0
   211c8:	movt	r3, #2
   211cc:	bl	3200c <flatcc_verify_table_field@@Base>
   211d0:	cmp	r0, #0
   211d4:	bne	213c4 <main@@Base+0xb33c>
   211d8:	mov	r0, r4
   211dc:	mov	r1, #15
   211e0:	mov	r2, #1
   211e4:	mov	r3, #1
   211e8:	bl	31cac <flatcc_verify_field@@Base>
   211ec:	cmp	r0, #0
   211f0:	bne	213c4 <main@@Base+0xb33c>
   211f4:	mov	r0, r4
   211f8:	mov	r1, #16
   211fc:	mov	r2, #4
   21200:	mov	r3, #4
   21204:	bl	31cac <flatcc_verify_field@@Base>
   21208:	cmp	r0, #0
   2120c:	bne	213c4 <main@@Base+0xb33c>
   21210:	mov	r0, r4
   21214:	mov	r1, #17
   21218:	mov	r2, #4
   2121c:	mov	r3, #4
   21220:	bl	31cac <flatcc_verify_field@@Base>
   21224:	cmp	r0, #0
   21228:	bne	213c4 <main@@Base+0xb33c>
   2122c:	mov	r0, r4
   21230:	mov	r1, #18
   21234:	mov	r2, #8
   21238:	mov	r3, #8
   2123c:	bl	31cac <flatcc_verify_field@@Base>
   21240:	cmp	r0, #0
   21244:	bne	213c4 <main@@Base+0xb33c>
   21248:	mov	r0, r4
   2124c:	mov	r1, #19
   21250:	mov	r2, #8
   21254:	mov	r3, #8
   21258:	bl	31cac <flatcc_verify_field@@Base>
   2125c:	cmp	r0, #0
   21260:	bne	213c4 <main@@Base+0xb33c>
   21264:	mov	r0, r4
   21268:	mov	r1, #20
   2126c:	mov	r2, #4
   21270:	mov	r3, #4
   21274:	bl	31cac <flatcc_verify_field@@Base>
   21278:	cmp	r0, #0
   2127c:	bne	213c4 <main@@Base+0xb33c>
   21280:	mov	r0, r4
   21284:	mov	r1, #21
   21288:	mov	r2, #4
   2128c:	mov	r3, #4
   21290:	bl	31cac <flatcc_verify_field@@Base>
   21294:	cmp	r0, #0
   21298:	bne	213c4 <main@@Base+0xb33c>
   2129c:	mov	r0, r4
   212a0:	mov	r1, #22
   212a4:	mov	r2, #8
   212a8:	mov	r3, #8
   212ac:	bl	31cac <flatcc_verify_field@@Base>
   212b0:	cmp	r0, #0
   212b4:	bne	213c4 <main@@Base+0xb33c>
   212b8:	mov	r0, r4
   212bc:	mov	r1, #23
   212c0:	mov	r2, #8
   212c4:	mov	r3, #8
   212c8:	bl	31cac <flatcc_verify_field@@Base>
   212cc:	cmp	r0, #0
   212d0:	bne	213c4 <main@@Base+0xb33c>
   212d4:	mov	r0, r4
   212d8:	mov	r1, #25
   212dc:	mov	r2, #4
   212e0:	mov	r3, #4
   212e4:	bl	31cac <flatcc_verify_field@@Base>
   212e8:	cmp	r0, #0
   212ec:	bne	213c4 <main@@Base+0xb33c>
   212f0:	mov	r0, r4
   212f4:	mov	r1, #26
   212f8:	mov	r2, #4
   212fc:	mov	r3, #4
   21300:	bl	31cac <flatcc_verify_field@@Base>
   21304:	cmp	r0, #0
   21308:	bne	213c4 <main@@Base+0xb33c>
   2130c:	mov	r0, r4
   21310:	mov	r1, #27
   21314:	mov	r2, #4
   21318:	mov	r3, #4
   2131c:	bl	31cac <flatcc_verify_field@@Base>
   21320:	cmp	r0, #0
   21324:	bne	213c4 <main@@Base+0xb33c>
   21328:	mvn	r0, #0
   2132c:	mov	r1, #1
   21330:	mov	r2, #0
   21334:	mov	r3, #1
   21338:	str	r1, [sp]
   2133c:	str	r0, [sp, #4]
   21340:	mov	r0, r4
   21344:	mov	r1, #30
   21348:	bl	31e30 <flatcc_verify_vector_field@@Base>
   2134c:	cmp	r0, #0
   21350:	bne	213c4 <main@@Base+0xb33c>
   21354:	mvn	r5, #-536870912	; 0xe0000000
   21358:	mov	r6, #8
   2135c:	mov	r0, r4
   21360:	mov	r1, #32
   21364:	mov	r2, #0
   21368:	mov	r3, #8
   2136c:	str	r6, [sp]
   21370:	str	r5, [sp, #4]
   21374:	bl	31e30 <flatcc_verify_vector_field@@Base>
   21378:	cmp	r0, #0
   2137c:	bne	213c4 <main@@Base+0xb33c>
   21380:	mov	r0, r4
   21384:	mov	r1, #33	; 0x21
   21388:	mov	r2, #0
   2138c:	mov	r3, #8
   21390:	str	r6, [sp]
   21394:	str	r5, [sp, #4]
   21398:	bl	31e30 <flatcc_verify_vector_field@@Base>
   2139c:	cmp	r0, #0
   213a0:	bne	213c4 <main@@Base+0xb33c>
   213a4:	movw	r3, #54648	; 0xd578
   213a8:	mov	r0, r4
   213ac:	mov	r1, #34	; 0x22
   213b0:	mov	r2, #0
   213b4:	movt	r3, #2
   213b8:	bl	3200c <flatcc_verify_table_field@@Base>
   213bc:	cmp	r0, #0
   213c0:	beq	213cc <main@@Base+0xb344>
   213c4:	sub	sp, fp, #16
   213c8:	pop	{r4, r5, r6, r7, fp, pc}
   213cc:	movw	r3, #54656	; 0xd580
   213d0:	mov	r0, r4
   213d4:	mov	r1, #35	; 0x23
   213d8:	mov	r2, #0
   213dc:	movt	r3, #2
   213e0:	sub	sp, fp, #16
   213e4:	pop	{r4, r5, r6, r7, fp, lr}
   213e8:	b	3200c <flatcc_verify_table_field@@Base>
   213ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   213f0:	add	fp, sp, #28
   213f4:	sub	sp, sp, #12
   213f8:	mov	r5, r1
   213fc:	sub	r1, r2, r1
   21400:	cmp	r1, #8
   21404:	movcs	r1, #8
   21408:	sub	r4, r1, #1
   2140c:	cmp	r4, #7
   21410:	bhi	21580 <main@@Base+0xb4f8>
   21414:	str	r3, [sp, #8]
   21418:	add	r8, pc, #32
   2141c:	mov	r9, #0
   21420:	mov	ip, #0
   21424:	mov	lr, #0
   21428:	mov	sl, #0
   2142c:	mov	r6, #0
   21430:	mov	r3, #0
   21434:	mov	r1, #0
   21438:	mov	r7, #0
   2143c:	ldr	pc, [r8, r4, lsl #2]
   21440:	andeq	r1, r2, r4, lsr #9
   21444:	muleq	r2, ip, r4
   21448:	muleq	r2, r4, r4
   2144c:	andeq	r1, r2, ip, lsl #9
   21450:	andeq	r1, r2, r0, lsl #9
   21454:	andeq	r1, r2, r4, ror r4
   21458:	andeq	r1, r2, r4, ror #8
   2145c:	andeq	r1, r2, r0, ror #8
   21460:	ldrb	ip, [r5, #7]
   21464:	ldrb	r1, [r5, #6]
   21468:	mov	lr, r9
   2146c:	orr	r1, ip, r1, lsl #8
   21470:	mov	r9, r1
   21474:	ldrb	r1, [r5, #5]
   21478:	mov	sl, lr
   2147c:	orr	r9, r9, r1, lsl #16
   21480:	ldrb	r1, [r5, #4]
   21484:	mov	r6, sl
   21488:	orr	r9, r9, r1, lsl #24
   2148c:	ldrb	r1, [r5, #3]
   21490:	orr	r3, r1, r6
   21494:	ldrb	r1, [r5, #2]
   21498:	orr	r1, r3, r1, lsl #8
   2149c:	ldrb	r3, [r5, #1]
   214a0:	orr	r7, r1, r3, lsl #16
   214a4:	ldrb	r1, [r5]
   214a8:	movw	r4, #25957	; 0x6565
   214ac:	ldr	r3, [fp, #12]
   214b0:	ldr	r8, [fp, #8]
   214b4:	movt	r4, #18290	; 0x4772
   214b8:	orr	r7, r7, r1, lsl #24
   214bc:	mvn	r1, #-1845493760	; 0x92000000
   214c0:	subs	r1, r1, r9
   214c4:	sbcs	r1, r4, r7
   214c8:	bcc	21500 <main@@Base+0xb478>
   214cc:	movw	r1, #30053	; 0x7565
   214d0:	movt	r1, #17004	; 0x426c
   214d4:	teq	r7, r1
   214d8:	bne	21580 <main@@Base+0xb4f8>
   214dc:	str	r3, [sp]
   214e0:	mov	r1, r5
   214e4:	mov	r3, #4
   214e8:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   214ec:	cmp	r0, r5
   214f0:	beq	21580 <main@@Base+0xb4f8>
   214f4:	mov	r1, #0
   214f8:	mov	r2, #8
   214fc:	b	2156c <main@@Base+0xb4e4>
   21500:	movw	r6, #25600	; 0x6400
   21504:	bic	r1, r7, #255	; 0xff
   21508:	movt	r6, #21093	; 0x5265
   2150c:	teq	r1, r6
   21510:	bne	21538 <main@@Base+0xb4b0>
   21514:	str	r3, [sp]
   21518:	mov	r1, r5
   2151c:	mov	r3, #3
   21520:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   21524:	cmp	r0, r5
   21528:	beq	21580 <main@@Base+0xb4f8>
   2152c:	mov	r1, #0
   21530:	mov	r2, #1
   21534:	b	2156c <main@@Base+0xb4e4>
   21538:	eor	r1, r7, r4
   2153c:	and	r7, r9, #-16777216	; 0xff000000
   21540:	eor	r7, r7, #1845493760	; 0x6e000000
   21544:	orrs	r1, r7, r1
   21548:	bne	21580 <main@@Base+0xb4f8>
   2154c:	str	r3, [sp]
   21550:	mov	r1, r5
   21554:	mov	r3, #5
   21558:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   2155c:	cmp	r0, r5
   21560:	beq	21580 <main@@Base+0xb4f8>
   21564:	mov	r1, #0
   21568:	mov	r2, #2
   2156c:	str	r2, [r8]
   21570:	str	r1, [r8, #4]
   21574:	mov	r5, r0
   21578:	ldr	r2, [sp, #8]
   2157c:	str	r1, [r2]
   21580:	mov	r0, r5
   21584:	sub	sp, fp, #28
   21588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2158c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21590:	add	fp, sp, #28
   21594:	push	{r0, r3}
   21598:	sub	r0, r2, r1
   2159c:	cmp	r0, #8
   215a0:	mov	r3, r0
   215a4:	movcs	r3, #8
   215a8:	sub	r6, r3, #1
   215ac:	cmp	r6, #7
   215b0:	bhi	21940 <main@@Base+0xb8b8>
   215b4:	add	r3, pc, #32
   215b8:	mov	lr, #0
   215bc:	mov	r8, #0
   215c0:	mov	r9, #0
   215c4:	mov	sl, #0
   215c8:	mov	r7, #0
   215cc:	mov	r4, #0
   215d0:	mov	r5, #0
   215d4:	mov	ip, #0
   215d8:	ldr	pc, [r3, r6, lsl #2]
   215dc:	andeq	r1, r2, r0, asr #12
   215e0:	andeq	r1, r2, r8, lsr r6
   215e4:	andeq	r1, r2, r0, lsr r6
   215e8:	andeq	r1, r2, r8, lsr #12
   215ec:	andeq	r1, r2, ip, lsl r6
   215f0:	andeq	r1, r2, r0, lsl r6
   215f4:	andeq	r1, r2, r0, lsl #12
   215f8:	strdeq	r1, [r2], -ip
   215fc:	ldrb	r8, [r1, #7]
   21600:	ldrb	r3, [r1, #6]
   21604:	mov	r9, lr
   21608:	orr	r3, r8, r3, lsl #8
   2160c:	mov	lr, r3
   21610:	ldrb	r3, [r1, #5]
   21614:	mov	sl, r9
   21618:	orr	lr, lr, r3, lsl #16
   2161c:	ldrb	r3, [r1, #4]
   21620:	mov	r7, sl
   21624:	orr	lr, lr, r3, lsl #24
   21628:	ldrb	r3, [r1, #3]
   2162c:	orr	r4, r3, r7
   21630:	ldrb	r3, [r1, #2]
   21634:	orr	r5, r4, r3, lsl #8
   21638:	ldrb	r3, [r1, #1]
   2163c:	orr	ip, r5, r3, lsl #16
   21640:	ldrb	r3, [r1]
   21644:	movw	r4, #30061	; 0x756d
   21648:	movw	r6, #30815	; 0x785f
   2164c:	movt	r4, #25966	; 0x656e
   21650:	movt	r6, #26725	; 0x6865
   21654:	orr	r5, ip, r3, lsl #24
   21658:	subs	r3, lr, r4
   2165c:	sbcs	r3, r5, r6
   21660:	bcs	216c8 <main@@Base+0xb640>
   21664:	movw	r4, #27759	; 0x6c6f
   21668:	mvn	r3, #-1912602624	; 0x8e000000
   2166c:	bic	r6, r5, #255	; 0xff
   21670:	movt	r4, #17263	; 0x436f
   21674:	subs	r3, r3, lr
   21678:	sbcs	r3, r4, r5
   2167c:	bcc	21724 <main@@Base+0xb69c>
   21680:	cmp	r0, #4
   21684:	blt	21940 <main@@Base+0xb8b8>
   21688:	movw	r0, #30976	; 0x7900
   2168c:	movt	r0, #16750	; 0x416e
   21690:	teq	r6, r0
   21694:	bne	21940 <main@@Base+0xb8b8>
   21698:	ldrb	r0, [r1, #3]
   2169c:	mov	ip, r1
   216a0:	cmp	r0, #46	; 0x2e
   216a4:	addeq	ip, ip, #4
   216a8:	cmp	ip, r1
   216ac:	beq	21940 <main@@Base+0xb8b8>
   216b0:	ldr	r0, [sp]
   216b4:	ldr	r3, [sp, #4]
   216b8:	mov	r1, ip
   216bc:	sub	sp, fp, #28
   216c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   216c4:	b	24428 <main@@Base+0xe3a0>
   216c8:	add	r3, r6, #64512	; 0xfc00
   216cc:	add	r7, r3, #17301504	; 0x1080000
   216d0:	subs	r3, lr, r4
   216d4:	sbcs	r3, r5, r7
   216d8:	bcs	2176c <main@@Base+0xb6e4>
   216dc:	cmp	r0, #9
   216e0:	blt	21940 <main@@Base+0xb8b8>
   216e4:	eor	r0, lr, r4
   216e8:	eor	r3, r5, r6
   216ec:	orrs	r0, r0, r3
   216f0:	bne	21940 <main@@Base+0xb8b8>
   216f4:	ldrb	r0, [r1, #8]
   216f8:	mov	ip, r1
   216fc:	cmp	r0, #46	; 0x2e
   21700:	addeq	ip, ip, #9
   21704:	cmp	ip, r1
   21708:	beq	21940 <main@@Base+0xb8b8>
   2170c:	ldr	r0, [sp]
   21710:	ldr	r3, [sp, #4]
   21714:	mov	r1, ip
   21718:	sub	sp, fp, #28
   2171c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21720:	b	257a4 <main@@Base+0xf71c>
   21724:	movw	r3, #28416	; 0x6f00
   21728:	movt	r3, #18031	; 0x466f
   2172c:	teq	r6, r3
   21730:	bne	217c8 <main@@Base+0xb740>
   21734:	cmp	r0, #4
   21738:	blt	21940 <main@@Base+0xb8b8>
   2173c:	ldrb	r0, [r1, #3]
   21740:	mov	ip, r1
   21744:	cmp	r0, #46	; 0x2e
   21748:	addeq	ip, ip, #4
   2174c:	cmp	ip, r1
   21750:	beq	21940 <main@@Base+0xb8b8>
   21754:	ldr	r0, [sp]
   21758:	ldr	r3, [sp, #4]
   2175c:	mov	r1, ip
   21760:	sub	sp, fp, #28
   21764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21768:	b	25544 <main@@Base+0xf4bc>
   2176c:	sub	r3, r6, #4352	; 0x1100
   21770:	subs	r6, lr, r4
   21774:	sub	r3, r3, #-100663296	; 0xfa000000
   21778:	sbcs	r3, r5, r3
   2177c:	bcs	21814 <main@@Base+0xb78c>
   21780:	cmp	r0, #9
   21784:	blt	21940 <main@@Base+0xb8b8>
   21788:	eor	r0, lr, r4
   2178c:	eor	r3, r5, r7
   21790:	orrs	r0, r0, r3
   21794:	bne	21940 <main@@Base+0xb8b8>
   21798:	ldrb	r0, [r1, #8]
   2179c:	mov	ip, r1
   217a0:	cmp	r0, #46	; 0x2e
   217a4:	addeq	ip, ip, #9
   217a8:	cmp	ip, r1
   217ac:	beq	21940 <main@@Base+0xb8b8>
   217b0:	ldr	r0, [sp]
   217b4:	ldr	r3, [sp, #4]
   217b8:	mov	r1, ip
   217bc:	sub	sp, fp, #28
   217c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   217c4:	b	25950 <main@@Base+0xf8c8>
   217c8:	cmp	r0, #6
   217cc:	blt	21940 <main@@Base+0xb8b8>
   217d0:	and	r0, lr, #-16777216	; 0xff000000
   217d4:	eor	r3, r5, r4
   217d8:	eor	r0, r0, #1912602624	; 0x72000000
   217dc:	orrs	r0, r0, r3
   217e0:	bne	21940 <main@@Base+0xb8b8>
   217e4:	ldrb	r0, [r1, #5]
   217e8:	mov	ip, r1
   217ec:	cmp	r0, #46	; 0x2e
   217f0:	addeq	ip, ip, #6
   217f4:	cmp	ip, r1
   217f8:	beq	21940 <main@@Base+0xb8b8>
   217fc:	ldr	r0, [sp]
   21800:	ldr	r3, [sp, #4]
   21804:	mov	r1, ip
   21808:	sub	sp, fp, #28
   2180c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21810:	b	213ec <main@@Base+0xb364>
   21814:	movw	r3, #29817	; 0x7479
   21818:	movw	r7, #29797	; 0x7465
   2181c:	movt	r3, #28016	; 0x6d70
   21820:	movt	r7, #28271	; 0x6e6f
   21824:	eor	r3, lr, r3
   21828:	eor	r7, r5, r7
   2182c:	orrs	r3, r3, r7
   21830:	beq	21884 <main@@Base+0xb7fc>
   21834:	movw	r7, #26463	; 0x675f
   21838:	eor	r3, lr, r4
   2183c:	movt	r7, #28261	; 0x6e65
   21840:	eor	r7, r5, r7
   21844:	orrs	r3, r3, r7
   21848:	bne	21940 <main@@Base+0xb8b8>
   2184c:	cmp	r0, #9
   21850:	blt	21940 <main@@Base+0xb8b8>
   21854:	ldrb	r0, [r1, #8]
   21858:	mov	ip, r1
   2185c:	cmp	r0, #46	; 0x2e
   21860:	addeq	ip, ip, #9
   21864:	cmp	ip, r1
   21868:	beq	21940 <main@@Base+0xb8b8>
   2186c:	ldr	r0, [sp]
   21870:	ldr	r3, [sp, #4]
   21874:	mov	r1, ip
   21878:	sub	sp, fp, #28
   2187c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21880:	b	25b40 <main@@Base+0xfab8>
   21884:	add	lr, r1, #8
   21888:	sub	r9, r2, lr
   2188c:	cmp	r9, #8
   21890:	mov	r0, r9
   21894:	movcs	r0, #8
   21898:	sub	r6, r0, #1
   2189c:	cmp	r6, #7
   218a0:	bhi	21940 <main@@Base+0xb8b8>
   218a4:	add	r0, pc, #16
   218a8:	mov	ip, #0
   218ac:	mov	r8, #0
   218b0:	mov	r5, #0
   218b4:	mov	r7, #0
   218b8:	ldr	pc, [r0, r6, lsl #2]
   218bc:	strdeq	r1, [r2], -r4
   218c0:	andeq	r1, r2, ip, ror #17
   218c4:	andeq	r1, r2, r4, ror #17
   218c8:	ldrdeq	r1, [r2], -ip
   218cc:	ldrdeq	r1, [r2], -ip
   218d0:	ldrdeq	r1, [r2], -ip
   218d4:	ldrdeq	r1, [r2], -ip
   218d8:	ldrdeq	r1, [r2], -ip
   218dc:	ldrb	r8, [r1, #11]
   218e0:	mov	ip, #0
   218e4:	ldrb	r0, [r1, #10]
   218e8:	orr	r5, r8, r0, lsl #8
   218ec:	ldrb	r0, [r1, #9]
   218f0:	orr	r7, r5, r0, lsl #16
   218f4:	cmp	r9, #5
   218f8:	blt	21940 <main@@Base+0xb8b8>
   218fc:	ldrb	r0, [lr]
   21900:	orr	r0, r7, r0, lsl #24
   21904:	eor	r0, r0, r4
   21908:	orrs	r0, ip, r0
   2190c:	bne	21940 <main@@Base+0xb8b8>
   21910:	ldrb	r0, [r1, #12]
   21914:	mov	ip, lr
   21918:	cmp	r0, #46	; 0x2e
   2191c:	addeq	ip, r1, #13
   21920:	cmp	ip, lr
   21924:	beq	21940 <main@@Base+0xb8b8>
   21928:	ldr	r0, [sp]
   2192c:	ldr	r3, [sp, #4]
   21930:	mov	r1, ip
   21934:	sub	sp, fp, #28
   21938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2193c:	b	25c88 <main@@Base+0xfc00>
   21940:	mov	r0, r1
   21944:	sub	sp, fp, #28
   21948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2194c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21950:	add	fp, sp, #28
   21954:	sub	sp, sp, #20
   21958:	mov	r8, r2
   2195c:	sub	r2, r2, r1
   21960:	cmp	r2, #8
   21964:	movcs	r2, #8
   21968:	sub	r2, r2, #1
   2196c:	cmp	r2, #7
   21970:	bhi	22784 <main@@Base+0xc6fc>
   21974:	str	r0, [sp, #16]
   21978:	mov	sl, #0
   2197c:	mov	ip, #0
   21980:	mov	lr, #0
   21984:	mov	r9, #0
   21988:	mov	r6, #0
   2198c:	mov	r4, #0
   21990:	mov	r5, #0
   21994:	ldr	r0, [fp, #12]
   21998:	str	r0, [sp, #12]
   2199c:	ldr	r0, [fp, #8]
   219a0:	str	r0, [sp, #8]
   219a4:	add	r7, pc, #4
   219a8:	mov	r0, #0
   219ac:	ldr	pc, [r7, r2, lsl #2]
   219b0:	andeq	r1, r2, r4, lsl sl
   219b4:	andeq	r1, r2, ip, lsl #20
   219b8:	andeq	r1, r2, r4, lsl #20
   219bc:	strdeq	r1, [r2], -ip
   219c0:	strdeq	r1, [r2], -r0
   219c4:	andeq	r1, r2, r4, ror #19
   219c8:	ldrdeq	r1, [r2], -r4
   219cc:	ldrdeq	r1, [r2], -r0
   219d0:	ldrb	ip, [r1, #7]
   219d4:	ldrb	r2, [r1, #6]
   219d8:	mov	lr, sl
   219dc:	orr	r2, ip, r2, lsl #8
   219e0:	mov	sl, r2
   219e4:	ldrb	r2, [r1, #5]
   219e8:	mov	r9, lr
   219ec:	orr	sl, sl, r2, lsl #16
   219f0:	ldrb	r2, [r1, #4]
   219f4:	mov	r6, r9
   219f8:	orr	sl, sl, r2, lsl #24
   219fc:	ldrb	r2, [r1, #3]
   21a00:	orr	r4, r2, r6
   21a04:	ldrb	r2, [r1, #2]
   21a08:	orr	r0, r4, r2, lsl #8
   21a0c:	ldrb	r2, [r1, #1]
   21a10:	orr	r5, r0, r2, lsl #16
   21a14:	ldrb	r2, [r1]
   21a18:	movw	r7, #11844	; 0x2e44
   21a1c:	movw	r0, #18273	; 0x4761
   21a20:	movt	r7, #28005	; 0x6d65
   21a24:	movt	r0, #19833	; 0x4d79
   21a28:	subs	r7, r7, sl
   21a2c:	orr	r2, r5, r2, lsl #24
   21a30:	sbcs	r7, r0, r2
   21a34:	bcc	21b94 <main@@Base+0xbb0c>
   21a38:	movw	r0, #31022	; 0x792e
   21a3c:	movw	r7, #28276	; 0x6e74
   21a40:	movt	r0, #24947	; 0x6173
   21a44:	movt	r7, #18017	; 0x4661
   21a48:	eor	r0, sl, r0
   21a4c:	eor	r2, r2, r7
   21a50:	orrs	r0, r0, r2
   21a54:	bne	22784 <main@@Base+0xc6fc>
   21a58:	add	lr, r1, #8
   21a5c:	sub	r0, r8, lr
   21a60:	cmp	r0, #8
   21a64:	movcs	r0, #8
   21a68:	sub	r6, r0, #1
   21a6c:	cmp	r6, #7
   21a70:	bhi	22784 <main@@Base+0xc6fc>
   21a74:	str	r3, [sp, #4]
   21a78:	add	r2, pc, #32
   21a7c:	mov	sl, #0
   21a80:	mov	ip, #0
   21a84:	mov	r9, #0
   21a88:	mov	r4, #0
   21a8c:	mov	r7, #0
   21a90:	mov	r5, #0
   21a94:	mov	r0, #0
   21a98:	mov	r3, #0
   21a9c:	ldr	pc, [r2, r6, lsl #2]
   21aa0:	andeq	r1, r2, r4, lsl #22
   21aa4:	strdeq	r1, [r2], -ip
   21aa8:	strdeq	r1, [r2], -r4
   21aac:	andeq	r1, r2, ip, ror #21
   21ab0:	andeq	r1, r2, r0, ror #21
   21ab4:	ldrdeq	r1, [r2], -r4
   21ab8:	andeq	r1, r2, r4, asr #21
   21abc:	andeq	r1, r2, r0, asr #21
   21ac0:	ldrb	ip, [r1, #15]
   21ac4:	ldrb	r0, [r1, #14]
   21ac8:	mov	r9, sl
   21acc:	orr	r0, ip, r0, lsl #8
   21ad0:	mov	sl, r0
   21ad4:	ldrb	r0, [r1, #13]
   21ad8:	mov	r4, r9
   21adc:	orr	sl, sl, r0, lsl #16
   21ae0:	ldrb	r0, [r1, #12]
   21ae4:	mov	r7, r4
   21ae8:	orr	sl, sl, r0, lsl #24
   21aec:	ldrb	r0, [r1, #11]
   21af0:	orr	r5, r0, r7
   21af4:	ldrb	r0, [r1, #10]
   21af8:	orr	r0, r5, r0, lsl #8
   21afc:	ldrb	r2, [r1, #9]
   21b00:	orr	r3, r0, r2, lsl #16
   21b04:	ldrb	r2, [lr]
   21b08:	movw	r0, #29797	; 0x7465
   21b0c:	movt	r0, #24931	; 0x6163
   21b10:	eor	r0, sl, r0
   21b14:	orr	r2, r3, r2, lsl #24
   21b18:	movw	r3, #24946	; 0x6172
   21b1c:	movt	r3, #17256	; 0x4368
   21b20:	eor	r2, r2, r3
   21b24:	orrs	r0, r0, r2
   21b28:	bne	22784 <main@@Base+0xc6fc>
   21b2c:	add	r0, r1, #16
   21b30:	sub	r2, r8, r0
   21b34:	cmp	r2, #8
   21b38:	mov	r3, r2
   21b3c:	movcs	r3, #8
   21b40:	sub	r3, r3, #1
   21b44:	cmp	r3, #7
   21b48:	bhi	22784 <main@@Base+0xc6fc>
   21b4c:	cmp	r2, #2
   21b50:	blt	22784 <main@@Base+0xc6fc>
   21b54:	ldrb	r2, [r0]
   21b58:	cmp	r2, #114	; 0x72
   21b5c:	bne	22784 <main@@Base+0xc6fc>
   21b60:	ldrb	r2, [r1, #17]
   21b64:	ldr	r3, [sp, #4]
   21b68:	cmp	r2, #46	; 0x2e
   21b6c:	mov	r2, r0
   21b70:	addeq	r2, r1, #18
   21b74:	cmp	r2, r0
   21b78:	beq	22784 <main@@Base+0xc6fc>
   21b7c:	ldr	r0, [sp, #16]
   21b80:	mov	r1, r2
   21b84:	mov	r2, r8
   21b88:	sub	sp, fp, #28
   21b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21b90:	b	25d00 <main@@Base+0xfc78>
   21b94:	movw	r7, #11855	; 0x2e4f
   21b98:	eor	r2, r2, r0
   21b9c:	movt	r7, #28005	; 0x6d65
   21ba0:	eor	r7, sl, r7
   21ba4:	orrs	r0, r7, r2
   21ba8:	beq	21d38 <main@@Base+0xbcb0>
   21bac:	movw	r0, #11845	; 0x2e45
   21bb0:	movt	r0, #28005	; 0x6d65
   21bb4:	eor	r0, sl, r0
   21bb8:	orrs	r0, r0, r2
   21bbc:	bne	22784 <main@@Base+0xc6fc>
   21bc0:	add	lr, r1, #8
   21bc4:	sub	r0, r8, lr
   21bc8:	cmp	r0, #8
   21bcc:	movcs	r0, #8
   21bd0:	sub	r6, r0, #1
   21bd4:	cmp	r6, #7
   21bd8:	bhi	22784 <main@@Base+0xc6fc>
   21bdc:	str	r3, [sp, #4]
   21be0:	add	r4, pc, #32
   21be4:	mov	r0, #0
   21be8:	mov	ip, #0
   21bec:	mov	r9, #0
   21bf0:	mov	sl, #0
   21bf4:	mov	r7, #0
   21bf8:	mov	r5, #0
   21bfc:	mov	r2, #0
   21c00:	mov	r3, #0
   21c04:	ldr	pc, [r4, r6, lsl #2]
   21c08:	andeq	r1, r2, ip, ror #24
   21c0c:	andeq	r1, r2, r4, ror #24
   21c10:	andeq	r1, r2, ip, asr ip
   21c14:	andeq	r1, r2, r4, asr ip
   21c18:	andeq	r1, r2, r8, asr #24
   21c1c:	andeq	r1, r2, ip, lsr ip
   21c20:	andeq	r1, r2, ip, lsr #24
   21c24:	andeq	r1, r2, r8, lsr #24
   21c28:	ldrb	ip, [r1, #15]
   21c2c:	ldrb	r2, [r1, #14]
   21c30:	mov	r9, r0
   21c34:	orr	r2, ip, r2, lsl #8
   21c38:	mov	r0, r2
   21c3c:	ldrb	r2, [r1, #13]
   21c40:	mov	sl, r9
   21c44:	orr	r0, r0, r2, lsl #16
   21c48:	ldrb	r2, [r1, #12]
   21c4c:	mov	r7, sl
   21c50:	orr	r0, r0, r2, lsl #24
   21c54:	ldrb	r2, [r1, #11]
   21c58:	orr	r5, r2, r7
   21c5c:	ldrb	r2, [r1, #10]
   21c60:	orr	r2, r5, r2, lsl #8
   21c64:	ldrb	r3, [r1, #9]
   21c68:	orr	r3, r2, r3, lsl #16
   21c6c:	ldrb	r2, [lr]
   21c70:	movw	r7, #28016	; 0x6d70
   21c74:	movt	r7, #30817	; 0x7861
   21c78:	orr	r2, r3, r2, lsl #24
   21c7c:	movw	r3, #11841	; 0x2e41
   21c80:	movt	r3, #27749	; 0x6c65
   21c84:	add	r5, r3, #39	; 0x27
   21c88:	subs	r6, r0, r5
   21c8c:	sbcs	r6, r2, r7
   21c90:	bcs	220f0 <main@@Base+0xc068>
   21c94:	ldr	lr, [sp, #4]
   21c98:	add	r6, r3, #2
   21c9c:	subs	r6, r0, r6
   21ca0:	sbcs	r6, r2, r7
   21ca4:	bcs	22208 <main@@Base+0xc180>
   21ca8:	eor	r0, r0, r3
   21cac:	eor	r2, r2, r7
   21cb0:	orrs	r0, r0, r2
   21cb4:	bne	22784 <main@@Base+0xc6fc>
   21cb8:	add	r0, r1, #16
   21cbc:	sub	r6, r8, r0
   21cc0:	cmp	r6, #8
   21cc4:	mov	r2, r6
   21cc8:	movcs	r2, #8
   21ccc:	sub	r3, r2, #2
   21cd0:	cmp	r3, #7
   21cd4:	bcs	22678 <main@@Base+0xc5f0>
   21cd8:	ldrb	r2, [r1, #17]
   21cdc:	mov	r3, #0
   21ce0:	lsl	r7, r2, #16
   21ce4:	cmp	r6, #3
   21ce8:	blt	22784 <main@@Base+0xc6fc>
   21cec:	ldrb	r2, [r0]
   21cf0:	orr	r2, r7, r2, lsl #24
   21cf4:	eor	r2, r2, #7929856	; 0x790000
   21cf8:	eor	r2, r2, #1845493760	; 0x6e000000
   21cfc:	orrs	r2, r3, r2
   21d00:	bne	22784 <main@@Base+0xc6fc>
   21d04:	ldrb	r2, [r1, #18]
   21d08:	cmp	r2, #46	; 0x2e
   21d0c:	mov	r2, r0
   21d10:	addeq	r2, r1, #19
   21d14:	cmp	r2, r0
   21d18:	beq	22784 <main@@Base+0xc6fc>
   21d1c:	ldr	r0, [sp, #16]
   21d20:	mov	r1, r2
   21d24:	mov	r2, r8
   21d28:	mov	r3, lr
   21d2c:	sub	sp, fp, #28
   21d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d34:	b	24428 <main@@Base+0xe3a0>
   21d38:	add	lr, r1, #8
   21d3c:	sub	r0, r8, lr
   21d40:	cmp	r0, #8
   21d44:	movcs	r0, #8
   21d48:	sub	r7, r0, #1
   21d4c:	cmp	r7, #7
   21d50:	bhi	22784 <main@@Base+0xc6fc>
   21d54:	str	r3, [sp, #4]
   21d58:	add	sl, pc, #32
   21d5c:	mov	r2, #0
   21d60:	mov	ip, #0
   21d64:	mov	r3, #0
   21d68:	mov	r4, #0
   21d6c:	mov	r6, #0
   21d70:	mov	r5, #0
   21d74:	mov	r0, #0
   21d78:	mov	r9, #0
   21d7c:	ldr	pc, [sl, r7, lsl #2]
   21d80:	andeq	r1, r2, r4, ror #27
   21d84:	ldrdeq	r1, [r2], -ip
   21d88:	ldrdeq	r1, [r2], -r4
   21d8c:	andeq	r1, r2, ip, asr #27
   21d90:	andeq	r1, r2, r0, asr #27
   21d94:			; <UNDEFINED> instruction: 0x00021db4
   21d98:	andeq	r1, r2, r4, lsr #27
   21d9c:	andeq	r1, r2, r0, lsr #27
   21da0:	ldrb	ip, [r1, #15]
   21da4:	ldrb	r0, [r1, #14]
   21da8:	mov	r3, r2
   21dac:	orr	r0, ip, r0, lsl #8
   21db0:	mov	r2, r0
   21db4:	ldrb	r0, [r1, #13]
   21db8:	mov	r4, r3
   21dbc:	orr	r2, r2, r0, lsl #16
   21dc0:	ldrb	r0, [r1, #12]
   21dc4:	mov	r6, r4
   21dc8:	orr	r2, r2, r0, lsl #24
   21dcc:	ldrb	r0, [r1, #11]
   21dd0:	orr	r5, r0, r6
   21dd4:	ldrb	r0, [r1, #10]
   21dd8:	orr	r0, r5, r0, lsl #8
   21ddc:	ldrb	r3, [r1, #9]
   21de0:	orr	r9, r0, r3, lsl #16
   21de4:	movw	r0, #28005	; 0x6d65
   21de8:	movw	r3, #25970	; 0x6572
   21dec:	movt	r0, #20065	; 0x4e61
   21df0:	movt	r3, #29800	; 0x7468
   21df4:	eor	r0, r2, r0
   21df8:	ldrb	r2, [lr]
   21dfc:	orr	r2, r9, r2, lsl #24
   21e00:	eor	r2, r2, r3
   21e04:	orrs	r0, r0, r2
   21e08:	bne	22784 <main@@Base+0xc6fc>
   21e0c:	add	lr, r1, #16
   21e10:	sub	r0, r8, lr
   21e14:	cmp	r0, #8
   21e18:	movcs	r0, #8
   21e1c:	sub	r7, r0, #1
   21e20:	cmp	r7, #7
   21e24:	bhi	22784 <main@@Base+0xc6fc>
   21e28:	add	r2, pc, #32
   21e2c:	mov	sl, #0
   21e30:	mov	ip, #0
   21e34:	mov	r9, #0
   21e38:	mov	r4, #0
   21e3c:	mov	r6, #0
   21e40:	mov	r5, #0
   21e44:	mov	r0, #0
   21e48:	mov	r3, #0
   21e4c:	ldr	pc, [r2, r7, lsl #2]
   21e50:			; <UNDEFINED> instruction: 0x00021eb4
   21e54:	andeq	r1, r2, ip, lsr #29
   21e58:	andeq	r1, r2, r4, lsr #29
   21e5c:	muleq	r2, ip, lr
   21e60:	muleq	r2, r0, lr
   21e64:	andeq	r1, r2, r4, lsl #29
   21e68:	andeq	r1, r2, r4, ror lr
   21e6c:	andeq	r1, r2, r0, ror lr
   21e70:	ldrb	ip, [r1, #23]
   21e74:	ldrb	r0, [r1, #22]
   21e78:	mov	r9, sl
   21e7c:	orr	r0, ip, r0, lsl #8
   21e80:	mov	sl, r0
   21e84:	ldrb	r0, [r1, #21]
   21e88:	mov	r4, r9
   21e8c:	orr	sl, sl, r0, lsl #16
   21e90:	ldrb	r0, [r1, #20]
   21e94:	mov	r6, r4
   21e98:	orr	sl, sl, r0, lsl #24
   21e9c:	ldrb	r0, [r1, #19]
   21ea0:	orr	r5, r0, r6
   21ea4:	ldrb	r0, [r1, #18]
   21ea8:	orr	r0, r5, r0, lsl #8
   21eac:	ldrb	r2, [r1, #17]
   21eb0:	orr	r3, r0, r2, lsl #16
   21eb4:	ldrb	r2, [lr]
   21eb8:	movw	r0, #18034	; 0x4672
   21ebc:	movt	r0, #25902	; 0x652e
   21ec0:	eor	r0, sl, r0
   21ec4:	orr	r2, r3, r2, lsl #24
   21ec8:	movw	r3, #24931	; 0x6163
   21ecc:	movt	r3, #21360	; 0x5370
   21ed0:	eor	r2, r2, r3
   21ed4:	orrs	r0, r0, r2
   21ed8:	bne	22784 <main@@Base+0xc6fc>
   21edc:	add	lr, r1, #24
   21ee0:	sub	r0, r8, lr
   21ee4:	cmp	r0, #8
   21ee8:	movcs	r0, #8
   21eec:	sub	r7, r0, #1
   21ef0:	cmp	r7, #7
   21ef4:	bhi	22784 <main@@Base+0xc6fc>
   21ef8:	add	r2, pc, #32
   21efc:	mov	sl, #0
   21f00:	mov	ip, #0
   21f04:	mov	r9, #0
   21f08:	mov	r4, #0
   21f0c:	mov	r6, #0
   21f10:	mov	r5, #0
   21f14:	mov	r0, #0
   21f18:	mov	r3, #0
   21f1c:	ldr	pc, [r2, r7, lsl #2]
   21f20:	andeq	r1, r2, r4, lsl #31
   21f24:	andeq	r1, r2, ip, ror pc
   21f28:	andeq	r1, r2, r4, ror pc
   21f2c:	andeq	r1, r2, ip, ror #30
   21f30:	andeq	r1, r2, r0, ror #30
   21f34:	andeq	r1, r2, r4, asr pc
   21f38:	andeq	r1, r2, r4, asr #30
   21f3c:	andeq	r1, r2, r0, asr #30
   21f40:	ldrb	ip, [r1, #31]
   21f44:	ldrb	r0, [r1, #30]
   21f48:	mov	r9, sl
   21f4c:	orr	r0, ip, r0, lsl #8
   21f50:	mov	sl, r0
   21f54:	ldrb	r0, [r1, #29]
   21f58:	mov	r4, r9
   21f5c:	orr	sl, sl, r0, lsl #16
   21f60:	ldrb	r0, [r1, #28]
   21f64:	mov	r6, r4
   21f68:	orr	sl, sl, r0, lsl #24
   21f6c:	ldrb	r0, [r1, #27]
   21f70:	orr	r5, r0, r6
   21f74:	ldrb	r0, [r1, #26]
   21f78:	orr	r0, r5, r0, lsl #8
   21f7c:	ldrb	r2, [r1, #25]
   21f80:	orr	r3, r0, r2, lsl #16
   21f84:	ldrb	r2, [lr]
   21f88:	movw	r0, #30052	; 0x7564
   21f8c:	movt	r0, #25452	; 0x636c
   21f90:	eor	r0, sl, r0
   21f94:	orr	r2, r3, r2, lsl #24
   21f98:	movw	r3, #18798	; 0x496e
   21f9c:	movt	r3, #28525	; 0x6f6d
   21fa0:	eor	r2, r2, r3
   21fa4:	orrs	r0, r0, r2
   21fa8:	bne	22784 <main@@Base+0xc6fc>
   21fac:	add	r0, r1, #32
   21fb0:	sub	r2, r8, r0
   21fb4:	cmp	r2, #8
   21fb8:	mov	r3, r2
   21fbc:	movcs	r3, #8
   21fc0:	sub	r3, r3, #1
   21fc4:	cmp	r3, #7
   21fc8:	bhi	22784 <main@@Base+0xc6fc>
   21fcc:	cmp	r2, #2
   21fd0:	blt	22784 <main@@Base+0xc6fc>
   21fd4:	ldrb	r2, [r0]
   21fd8:	cmp	r2, #101	; 0x65
   21fdc:	bne	22784 <main@@Base+0xc6fc>
   21fe0:	ldrb	r2, [r1, #33]	; 0x21
   21fe4:	ldr	r9, [sp, #4]
   21fe8:	mov	r7, r0
   21fec:	cmp	r2, #46	; 0x2e
   21ff0:	addeq	r7, r1, #34	; 0x22
   21ff4:	cmp	r7, r0
   21ff8:	beq	22784 <main@@Base+0xc6fc>
   21ffc:	sub	r0, r8, r7
   22000:	cmp	r0, #8
   22004:	movcs	r0, #8
   22008:	sub	r2, r0, #1
   2200c:	cmp	r2, #7
   22010:	bhi	22780 <main@@Base+0xc6f8>
   22014:	add	r5, pc, #32
   22018:	mov	sl, #0
   2201c:	mov	ip, #0
   22020:	mov	lr, #0
   22024:	mov	r1, #0
   22028:	mov	r3, #0
   2202c:	mov	r6, #0
   22030:	mov	r4, #0
   22034:	mov	r0, #0
   22038:	ldr	pc, [r5, r2, lsl #2]
   2203c:	andeq	r2, r2, r0, lsr #1
   22040:	muleq	r2, r8, r0
   22044:	muleq	r2, r0, r0
   22048:	andeq	r2, r2, r8, lsl #1
   2204c:	andeq	r2, r2, ip, ror r0
   22050:	andeq	r2, r2, r0, ror r0
   22054:	andeq	r2, r2, r0, rrx
   22058:	andeq	r2, r2, ip, asr r0
   2205c:	ldrb	ip, [r7, #7]
   22060:	ldrb	r0, [r7, #6]
   22064:	mov	lr, sl
   22068:	orr	r0, ip, r0, lsl #8
   2206c:	mov	sl, r0
   22070:	ldrb	r0, [r7, #5]
   22074:	mov	r1, lr
   22078:	orr	sl, sl, r0, lsl #16
   2207c:	ldrb	r0, [r7, #4]
   22080:	mov	r3, r1
   22084:	orr	sl, sl, r0, lsl #24
   22088:	ldrb	r0, [r7, #3]
   2208c:	orr	r6, r0, r3
   22090:	ldrb	r0, [r7, #2]
   22094:	orr	r4, r6, r0, lsl #8
   22098:	ldrb	r0, [r7, #1]
   2209c:	orr	r0, r4, r0, lsl #16
   220a0:	ldrb	r1, [r7]
   220a4:	orr	r6, r0, r1, lsl #24
   220a8:	movw	r1, #28416	; 0x6f00
   220ac:	movt	r1, #18031	; 0x466f
   220b0:	bic	r0, r6, #255	; 0xff
   220b4:	teq	r0, r1
   220b8:	bne	226a0 <main@@Base+0xc618>
   220bc:	ldr	r0, [sp, #12]
   220c0:	mov	r1, r7
   220c4:	mov	r2, r8
   220c8:	mov	r3, #3
   220cc:	str	r0, [sp]
   220d0:	ldr	r0, [sp, #16]
   220d4:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   220d8:	cmp	r0, r7
   220dc:	beq	226a0 <main@@Base+0xc618>
   220e0:	mov	r1, r0
   220e4:	mov	r3, #0
   220e8:	mov	r2, #17
   220ec:	b	22734 <main@@Base+0xc6ac>
   220f0:	eor	r6, r2, r7
   220f4:	eor	r5, r0, r5
   220f8:	orrs	r5, r5, r6
   220fc:	bne	222fc <main@@Base+0xc274>
   22100:	add	ip, r1, #16
   22104:	sub	r2, r8, ip
   22108:	cmp	r2, #8
   2210c:	mov	r0, r2
   22110:	movcs	r0, #8
   22114:	sub	r4, r0, #1
   22118:	cmp	r4, #7
   2211c:	bhi	22784 <main@@Base+0xc6fc>
   22120:	add	r6, pc, #28
   22124:	mov	r9, #0
   22128:	mov	lr, #0
   2212c:	mov	sl, #0
   22130:	mov	r3, #0
   22134:	mov	r5, #0
   22138:	mov	r0, #0
   2213c:	mov	r7, #0
   22140:	ldr	pc, [r6, r4, lsl #2]
   22144:	andeq	r2, r2, r0, lsr #3
   22148:	muleq	r2, r8, r1
   2214c:	muleq	r2, r0, r1
   22150:	andeq	r2, r2, r8, lsl #3
   22154:	andeq	r2, r2, ip, ror r1
   22158:	andeq	r2, r2, ip, ror #2
   2215c:	andeq	r2, r2, r4, ror #2
   22160:	andeq	r2, r2, r4, ror #2
   22164:	ldrb	r0, [r1, #22]
   22168:	lsl	lr, r0, #8
   2216c:	ldrb	r0, [r1, #21]
   22170:	mov	sl, r9
   22174:	orr	r0, lr, r0, lsl #16
   22178:	mov	r9, r0
   2217c:	ldrb	r0, [r1, #20]
   22180:	mov	r3, sl
   22184:	orr	r9, r9, r0, lsl #24
   22188:	ldrb	r0, [r1, #19]
   2218c:	orr	r5, r0, r3
   22190:	ldrb	r0, [r1, #18]
   22194:	orr	r0, r5, r0, lsl #8
   22198:	ldrb	r3, [r1, #17]
   2219c:	orr	r7, r0, r3, lsl #16
   221a0:	cmp	r2, #8
   221a4:	blt	22784 <main@@Base+0xc6fc>
   221a8:	ldrb	r0, [ip]
   221ac:	movw	r2, #24421	; 0x5f65
   221b0:	movw	r3, #27904	; 0x6d00
   221b4:	movt	r2, #25959	; 0x6567
   221b8:	movt	r3, #28277	; 0x6e75
   221bc:	add	r2, r2, #1114112	; 0x110000
   221c0:	eor	r3, r9, r3
   221c4:	orr	r0, r7, r0, lsl #24
   221c8:	eor	r0, r0, r2
   221cc:	orrs	r0, r3, r0
   221d0:	bne	22784 <main@@Base+0xc6fc>
   221d4:	ldrb	r0, [r1, #23]
   221d8:	ldr	r3, [sp, #4]
   221dc:	mov	r2, ip
   221e0:	cmp	r0, #46	; 0x2e
   221e4:	addeq	r2, r1, #24
   221e8:	cmp	r2, ip
   221ec:	beq	22784 <main@@Base+0xc6fc>
   221f0:	ldr	r0, [sp, #16]
   221f4:	mov	r1, r2
   221f8:	mov	r2, r8
   221fc:	sub	sp, fp, #28
   22200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22204:	b	257a4 <main@@Base+0xf71c>
   22208:	movw	r3, #11846	; 0x2e46
   2220c:	eor	r2, r2, r7
   22210:	movt	r3, #27749	; 0x6c65
   22214:	eor	r3, r0, r3
   22218:	orrs	r3, r3, r2
   2221c:	beq	22554 <main@@Base+0xc4cc>
   22220:	movw	r3, #11843	; 0x2e43
   22224:	movt	r3, #27749	; 0x6c65
   22228:	eor	r0, r0, r3
   2222c:	orrs	r0, r0, r2
   22230:	bne	22784 <main@@Base+0xc6fc>
   22234:	add	r0, r1, #16
   22238:	sub	r2, r8, r0
   2223c:	cmp	r2, #8
   22240:	mov	r3, r2
   22244:	movcs	r3, #8
   22248:	sub	r6, r3, #1
   2224c:	cmp	r6, #7
   22250:	bhi	22784 <main@@Base+0xc6fc>
   22254:	add	r3, pc, #16
   22258:	mov	ip, #0
   2225c:	mov	r7, #0
   22260:	mov	r4, #0
   22264:	mov	r5, #0
   22268:	ldr	pc, [r3, r6, lsl #2]
   2226c:	andeq	r2, r2, r4, lsr #5
   22270:	muleq	r2, ip, r2
   22274:	muleq	r2, r4, r2
   22278:	andeq	r2, r2, ip, lsl #5
   2227c:	andeq	r2, r2, ip, lsl #5
   22280:	andeq	r2, r2, ip, lsl #5
   22284:	andeq	r2, r2, ip, lsl #5
   22288:	andeq	r2, r2, ip, lsl #5
   2228c:	ldrb	r7, [r1, #19]
   22290:	mov	ip, #0
   22294:	ldrb	r3, [r1, #18]
   22298:	orr	r4, r7, r3, lsl #8
   2229c:	ldrb	r3, [r1, #17]
   222a0:	orr	r5, r4, r3, lsl #16
   222a4:	cmp	r2, #5
   222a8:	blt	22784 <main@@Base+0xc6fc>
   222ac:	ldrb	r2, [r0]
   222b0:	movw	r3, #28530	; 0x6f72
   222b4:	movt	r3, #28524	; 0x6f6c
   222b8:	orr	r2, r5, r2, lsl #24
   222bc:	eor	r2, r2, r3
   222c0:	orrs	r2, ip, r2
   222c4:	bne	22784 <main@@Base+0xc6fc>
   222c8:	ldrb	r2, [r1, #20]
   222cc:	cmp	r2, #46	; 0x2e
   222d0:	mov	r2, r0
   222d4:	addeq	r2, r1, #21
   222d8:	cmp	r2, r0
   222dc:	beq	22784 <main@@Base+0xc6fc>
   222e0:	ldr	r0, [sp, #16]
   222e4:	mov	r1, r2
   222e8:	mov	r2, r8
   222ec:	mov	r3, lr
   222f0:	sub	sp, fp, #28
   222f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222f8:	b	213ec <main@@Base+0xb364>
   222fc:	add	r5, r3, #45	; 0x2d
   22300:	subs	r4, r0, r5
   22304:	sbcs	r2, r2, r7
   22308:	bcs	22428 <main@@Base+0xc3a0>
   2230c:	add	r2, r3, #40	; 0x28
   22310:	eor	r0, r0, r2
   22314:	orrs	r0, r0, r6
   22318:	bne	22784 <main@@Base+0xc6fc>
   2231c:	add	ip, r1, #16
   22320:	sub	r2, r8, ip
   22324:	cmp	r2, #8
   22328:	mov	r0, r2
   2232c:	movcs	r0, #8
   22330:	sub	r4, r0, #1
   22334:	cmp	r4, #7
   22338:	bhi	22784 <main@@Base+0xc6fc>
   2233c:	add	r6, pc, #28
   22340:	mov	r9, #0
   22344:	mov	lr, #0
   22348:	mov	sl, #0
   2234c:	mov	r3, #0
   22350:	mov	r5, #0
   22354:	mov	r7, #0
   22358:	mov	r0, #0
   2235c:	ldr	pc, [r6, r4, lsl #2]
   22360:			; <UNDEFINED> instruction: 0x000223bc
   22364:			; <UNDEFINED> instruction: 0x000223b4
   22368:	andeq	r2, r2, ip, lsr #7
   2236c:	andeq	r2, r2, r4, lsr #7
   22370:	muleq	r2, r8, r3
   22374:	andeq	r2, r2, r8, lsl #7
   22378:	andeq	r2, r2, r0, lsl #7
   2237c:	andeq	r2, r2, r0, lsl #7
   22380:	ldrb	r0, [r1, #22]
   22384:	lsl	lr, r0, #8
   22388:	ldrb	r0, [r1, #21]
   2238c:	mov	sl, r9
   22390:	orr	r0, lr, r0, lsl #16
   22394:	mov	r9, r0
   22398:	ldrb	r0, [r1, #20]
   2239c:	mov	r3, sl
   223a0:	orr	r9, r9, r0, lsl #24
   223a4:	ldrb	r0, [r1, #19]
   223a8:	orr	r5, r0, r3
   223ac:	ldrb	r0, [r1, #18]
   223b0:	orr	r7, r5, r0, lsl #8
   223b4:	ldrb	r0, [r1, #17]
   223b8:	orr	r0, r7, r0, lsl #16
   223bc:	cmp	r2, #8
   223c0:	blt	22784 <main@@Base+0xc6fc>
   223c4:	ldrb	r3, [ip]
   223c8:	movw	r2, #24421	; 0x5f65
   223cc:	movt	r2, #25959	; 0x6567
   223d0:	add	r2, r2, #851968	; 0xd0000
   223d4:	orr	r0, r0, r3, lsl #24
   223d8:	movw	r3, #27904	; 0x6d00
   223dc:	add	r2, r2, #150994944	; 0x9000000
   223e0:	movt	r3, #28277	; 0x6e75
   223e4:	eor	r0, r0, r2
   223e8:	eor	r3, r9, r3
   223ec:	orrs	r0, r3, r0
   223f0:	bne	22784 <main@@Base+0xc6fc>
   223f4:	ldrb	r0, [r1, #23]
   223f8:	ldr	r3, [sp, #4]
   223fc:	mov	r2, ip
   22400:	cmp	r0, #46	; 0x2e
   22404:	addeq	r2, r1, #24
   22408:	cmp	r2, ip
   2240c:	beq	22784 <main@@Base+0xc6fc>
   22410:	ldr	r0, [sp, #16]
   22414:	mov	r1, r2
   22418:	mov	r2, r8
   2241c:	sub	sp, fp, #28
   22420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22424:	b	25950 <main@@Base+0xf8c8>
   22428:	eor	r0, r0, r5
   2242c:	orrs	r0, r0, r6
   22430:	bne	22784 <main@@Base+0xc6fc>
   22434:	add	lr, r1, #16
   22438:	sub	r2, r8, lr
   2243c:	cmp	r2, #8
   22440:	mov	r0, r2
   22444:	movcs	r0, #8
   22448:	sub	r4, r0, #1
   2244c:	cmp	r4, #7
   22450:	bhi	22784 <main@@Base+0xc6fc>
   22454:	add	ip, pc, #36	; 0x24
   22458:	mov	r0, #0
   2245c:	mov	sl, #0
   22460:	mov	r9, #0
   22464:	mov	r7, #0
   22468:	mov	r6, #0
   2246c:	mov	r5, #0
   22470:	mov	r3, #0
   22474:	str	r0, [sp, #12]
   22478:	mov	r0, #0
   2247c:	ldr	pc, [ip, r4, lsl #2]
   22480:	andeq	r2, r2, ip, ror #9
   22484:	andeq	r2, r2, r4, ror #9
   22488:	ldrdeq	r2, [r2], -ip
   2248c:	ldrdeq	r2, [r2], -r4
   22490:	andeq	r2, r2, r8, asr #9
   22494:			; <UNDEFINED> instruction: 0x000224bc
   22498:	andeq	r2, r2, r8, lsr #9
   2249c:	andeq	r2, r2, r0, lsr #9
   224a0:	ldrb	r0, [r1, #23]
   224a4:	str	r0, [sp, #12]
   224a8:	ldrb	r0, [r1, #22]
   224ac:	ldr	r3, [sp, #12]
   224b0:	mov	r9, sl
   224b4:	orr	r0, r3, r0, lsl #8
   224b8:	mov	sl, r0
   224bc:	ldrb	r0, [r1, #21]
   224c0:	mov	r7, r9
   224c4:	orr	sl, sl, r0, lsl #16
   224c8:	ldrb	r0, [r1, #20]
   224cc:	mov	r6, r7
   224d0:	orr	sl, sl, r0, lsl #24
   224d4:	ldrb	r0, [r1, #19]
   224d8:	orr	r5, r0, r6
   224dc:	ldrb	r0, [r1, #18]
   224e0:	orr	r0, r5, r0, lsl #8
   224e4:	ldrb	r3, [r1, #17]
   224e8:	orr	r3, r0, r3, lsl #16
   224ec:	ldrb	r0, [lr]
   224f0:	movw	r7, #27904	; 0x6d00
   224f4:	cmp	r2, #8
   224f8:	movt	r7, #28277	; 0x6e75
   224fc:	orr	r4, r3, r0, lsl #24
   22500:	blt	225d4 <main@@Base+0xc54c>
   22504:	movw	r2, #24421	; 0x5f65
   22508:	bic	r0, sl, #255	; 0xff
   2250c:	movt	r2, #25959	; 0x6567
   22510:	eor	r0, r0, r7
   22514:	eor	r2, r4, r2
   22518:	orrs	r0, r0, r2
   2251c:	bne	225d4 <main@@Base+0xc54c>
   22520:	ldrb	r0, [r1, #23]
   22524:	mov	r2, lr
   22528:	cmp	r0, #46	; 0x2e
   2252c:	addeq	r2, r1, #24
   22530:	cmp	r2, lr
   22534:	beq	225d4 <main@@Base+0xc54c>
   22538:	ldr	r0, [sp, #16]
   2253c:	ldr	r3, [sp, #4]
   22540:	mov	r1, r2
   22544:	mov	r2, r8
   22548:	sub	sp, fp, #28
   2254c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22550:	b	25b40 <main@@Base+0xfab8>
   22554:	add	r0, r1, #16
   22558:	sub	r6, r8, r0
   2255c:	cmp	r6, #8
   22560:	mov	r2, r6
   22564:	movcs	r2, #8
   22568:	sub	r3, r2, #2
   2256c:	cmp	r3, #7
   22570:	bcs	2268c <main@@Base+0xc604>
   22574:	ldrb	r2, [r1, #17]
   22578:	mov	r3, #0
   2257c:	lsl	r7, r2, #16
   22580:	cmp	r6, #3
   22584:	blt	22784 <main@@Base+0xc6fc>
   22588:	ldrb	r2, [r0]
   2258c:	orr	r2, r7, r2, lsl #24
   22590:	eor	r2, r2, #7274496	; 0x6f0000
   22594:	eor	r2, r2, #1862270976	; 0x6f000000
   22598:	orrs	r2, r3, r2
   2259c:	bne	22784 <main@@Base+0xc6fc>
   225a0:	ldrb	r2, [r1, #18]
   225a4:	cmp	r2, #46	; 0x2e
   225a8:	mov	r2, r0
   225ac:	addeq	r2, r1, #19
   225b0:	cmp	r2, r0
   225b4:	beq	22784 <main@@Base+0xc6fc>
   225b8:	ldr	r0, [sp, #16]
   225bc:	mov	r1, r2
   225c0:	mov	r2, r8
   225c4:	mov	r3, lr
   225c8:	sub	sp, fp, #28
   225cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   225d0:	b	25544 <main@@Base+0xf4bc>
   225d4:	movw	r0, #31077	; 0x7965
   225d8:	movw	r2, #25965	; 0x656d
   225dc:	movt	r0, #28788	; 0x7074
   225e0:	movt	r2, #28532	; 0x6f74
   225e4:	eor	r0, sl, r0
   225e8:	eor	r2, r4, r2
   225ec:	orrs	r0, r0, r2
   225f0:	bne	22784 <main@@Base+0xc6fc>
   225f4:	add	r0, r1, #24
   225f8:	sub	r5, r8, r0
   225fc:	cmp	r5, #8
   22600:	mov	r2, r5
   22604:	movcs	r2, #8
   22608:	sub	r3, r2, #3
   2260c:	cmp	r3, #6
   22610:	bcs	22748 <main@@Base+0xc6c0>
   22614:	ldrb	r2, [r1, #26]
   22618:	ldr	r3, [sp, #4]
   2261c:	mov	r4, #0
   22620:	lsl	r2, r2, #8
   22624:	ldrb	r6, [r1, #25]
   22628:	orr	r6, r2, r6, lsl #16
   2262c:	cmp	r5, #4
   22630:	blt	22784 <main@@Base+0xc6fc>
   22634:	ldrb	r2, [r0]
   22638:	orr	r2, r6, r2, lsl #24
   2263c:	eor	r2, r2, r7
   22640:	orrs	r2, r4, r2
   22644:	bne	22784 <main@@Base+0xc6fc>
   22648:	ldrb	r2, [r1, #27]
   2264c:	cmp	r2, #46	; 0x2e
   22650:	mov	r2, r0
   22654:	addeq	r2, r1, #28
   22658:	cmp	r2, r0
   2265c:	beq	22784 <main@@Base+0xc6fc>
   22660:	ldr	r0, [sp, #16]
   22664:	mov	r1, r2
   22668:	mov	r2, r8
   2266c:	sub	sp, fp, #28
   22670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22674:	b	25c88 <main@@Base+0xfc00>
   22678:	mov	r3, #0
   2267c:	cmp	r2, #1
   22680:	mov	r7, #0
   22684:	beq	21ce4 <main@@Base+0xbc5c>
   22688:	b	22784 <main@@Base+0xc6fc>
   2268c:	mov	r3, #0
   22690:	cmp	r2, #1
   22694:	mov	r7, #0
   22698:	beq	22580 <main@@Base+0xc4f8>
   2269c:	b	22784 <main@@Base+0xc6fc>
   226a0:	movw	r0, #25942	; 0x6556
   226a4:	movw	r1, #25452	; 0x636c
   226a8:	movt	r0, #30052	; 0x7564
   226ac:	movt	r1, #18798	; 0x496e
   226b0:	eor	r0, sl, r0
   226b4:	eor	r1, r6, r1
   226b8:	orrs	r0, r0, r1
   226bc:	bne	22780 <main@@Base+0xc6f8>
   226c0:	add	r6, r7, #8
   226c4:	sub	r1, r8, r6
   226c8:	cmp	r1, #8
   226cc:	movcs	r1, #8
   226d0:	sub	r0, r1, #2
   226d4:	cmp	r0, #7
   226d8:	bcs	22770 <main@@Base+0xc6e8>
   226dc:	ldrb	r0, [r7, #9]
   226e0:	lsl	r1, r0, #16
   226e4:	mov	r0, #0
   226e8:	ldrb	r2, [r6]
   226ec:	orr	r1, r1, r2, lsl #24
   226f0:	eor	r1, r1, #23855104	; 0x16c0000
   226f4:	eor	r1, r1, #1610612736	; 0x60000000
   226f8:	orrs	r0, r0, r1
   226fc:	bne	22780 <main@@Base+0xc6f8>
   22700:	ldr	r0, [sp, #12]
   22704:	mov	r1, r6
   22708:	mov	r2, r8
   2270c:	mov	r3, #2
   22710:	str	r0, [sp]
   22714:	ldr	r0, [sp, #16]
   22718:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   2271c:	cmp	r0, r6
   22720:	mov	r1, r7
   22724:	beq	22784 <main@@Base+0xc6fc>
   22728:	mov	r2, #0
   2272c:	mov	r3, #0
   22730:	mov	r1, r0
   22734:	ldr	r0, [sp, #8]
   22738:	strd	r2, [r0]
   2273c:	mov	r0, #0
   22740:	str	r0, [r9]
   22744:	b	22784 <main@@Base+0xc6fc>
   22748:	ldr	r3, [sp, #4]
   2274c:	mov	r4, #0
   22750:	cmp	r2, #1
   22754:	beq	22768 <main@@Base+0xc6e0>
   22758:	cmp	r2, #2
   2275c:	mov	r2, #0
   22760:	beq	22624 <main@@Base+0xc59c>
   22764:	b	22784 <main@@Base+0xc6fc>
   22768:	mov	r6, #0
   2276c:	b	2262c <main@@Base+0xc5a4>
   22770:	cmp	r1, #1
   22774:	mov	r0, #0
   22778:	mov	r1, #0
   2277c:	beq	226e8 <main@@Base+0xc660>
   22780:	mov	r1, r7
   22784:	mov	r0, r1
   22788:	sub	sp, fp, #28
   2278c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22794:	add	fp, sp, #28
   22798:	sub	sp, sp, #44	; 0x2c
   2279c:	mov	r6, r2
   227a0:	ldr	r2, [fp, #8]
   227a4:	mov	r5, r0
   227a8:	mov	r0, #0
   227ac:	mov	sl, r3
   227b0:	cmp	r1, r6
   227b4:	strb	r0, [r2]
   227b8:	beq	227fc <main@@Base+0xc774>
   227bc:	ldrb	r0, [r1]
   227c0:	cmp	r0, #46	; 0x2e
   227c4:	beq	227dc <main@@Base+0xc754>
   227c8:	cmp	r0, #34	; 0x22
   227cc:	bne	227f4 <main@@Base+0xc76c>
   227d0:	mov	r0, #0
   227d4:	add	r1, r1, #1
   227d8:	b	227f8 <main@@Base+0xc770>
   227dc:	mov	r0, r5
   227e0:	mov	r2, r6
   227e4:	mov	r3, #5
   227e8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   227ec:	mov	r1, r0
   227f0:	b	227fc <main@@Base+0xc774>
   227f4:	mov	r0, #1
   227f8:	str	r0, [r5, #12]
   227fc:	ldr	r0, [r5, #12]
   22800:	cmp	r0, #0
   22804:	beq	22810 <main@@Base+0xc788>
   22808:	mov	r7, r1
   2280c:	b	2284c <main@@Base+0xc7c4>
   22810:	sub	r0, r6, r1
   22814:	cmp	r0, #2
   22818:	blt	2283c <main@@Base+0xc7b4>
   2281c:	ldrb	r0, [r1]
   22820:	cmp	r0, #32
   22824:	bhi	22808 <main@@Base+0xc780>
   22828:	bne	2283c <main@@Base+0xc7b4>
   2282c:	mov	r7, r1
   22830:	ldrb	r0, [r7, #1]!
   22834:	cmp	r0, #32
   22838:	bhi	2284c <main@@Base+0xc7c4>
   2283c:	mov	r0, r5
   22840:	mov	r2, r6
   22844:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   22848:	mov	r7, r0
   2284c:	cmp	r7, r6
   22850:	beq	22964 <main@@Base+0xc8dc>
   22854:	add	r0, sl, #4
   22858:	mov	r2, #0
   2285c:	add	r8, sp, #32
   22860:	add	r9, sp, #28
   22864:	str	sl, [sp, #16]
   22868:	str	r0, [sp, #12]
   2286c:	ldr	r4, [sl]
   22870:	mov	sl, r0
   22874:	str	r2, [sp, #20]
   22878:	add	r0, sp, #24
   2287c:	mov	r1, r7
   22880:	mov	r2, r6
   22884:	mov	r3, r9
   22888:	str	r8, [sp]
   2288c:	str	r0, [sp, #4]
   22890:	mov	r0, r5
   22894:	blx	r4
   22898:	cmp	r0, r6
   2289c:	beq	22964 <main@@Base+0xc8dc>
   228a0:	mov	r4, r0
   228a4:	cmp	r0, r7
   228a8:	bne	228bc <main@@Base+0xc834>
   228ac:	ldr	r4, [sl], #4
   228b0:	cmp	r4, #0
   228b4:	bne	22878 <main@@Base+0xc7f0>
   228b8:	b	2296c <main@@Base+0xc8e4>
   228bc:	ldr	r2, [sp, #28]
   228c0:	ldr	r0, [sp, #32]
   228c4:	ldr	r1, [sp, #36]	; 0x24
   228c8:	cmp	r2, #0
   228cc:	beq	228f4 <main@@Base+0xc86c>
   228d0:	ldr	sl, [sp, #16]
   228d4:	subs	r2, r0, #129	; 0x81
   228d8:	sbcs	r1, r1, #0
   228dc:	bcc	22920 <main@@Base+0xc898>
   228e0:	mov	r0, r5
   228e4:	mov	r1, r4
   228e8:	mov	r2, r6
   228ec:	mov	r3, #8
   228f0:	b	22914 <main@@Base+0xc88c>
   228f4:	ldr	sl, [sp, #16]
   228f8:	subs	r2, r0, #128	; 0x80
   228fc:	sbcs	r1, r1, #0
   22900:	bcc	22928 <main@@Base+0xc8a0>
   22904:	mov	r0, r5
   22908:	mov	r1, r4
   2290c:	mov	r2, r6
   22910:	mov	r3, #7
   22914:	bl	333fc <flatcc_json_parser_set_error@@Base>
   22918:	ldr	r2, [sp, #20]
   2291c:	b	22930 <main@@Base+0xc8a8>
   22920:	rsb	r2, r0, #0
   22924:	b	2292c <main@@Base+0xc8a4>
   22928:	mov	r2, r0
   2292c:	mov	r0, r4
   22930:	cmp	r0, r6
   22934:	beq	22964 <main@@Base+0xc8dc>
   22938:	ldr	r0, [fp, #8]
   2293c:	mov	r7, r4
   22940:	mov	r1, r0
   22944:	ldrb	r0, [r0]
   22948:	add	r0, r0, r2
   2294c:	strb	r0, [r1]
   22950:	ldr	r0, [sp, #24]
   22954:	cmp	r0, #0
   22958:	ldr	r0, [sp, #12]
   2295c:	bne	2286c <main@@Base+0xc7e4>
   22960:	b	22984 <main@@Base+0xc8fc>
   22964:	mov	r4, r6
   22968:	b	22984 <main@@Base+0xc8fc>
   2296c:	mov	r0, r5
   22970:	mov	r1, r7
   22974:	mov	r2, r6
   22978:	mov	r3, #23
   2297c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   22980:	mov	r4, r0
   22984:	mov	r0, r4
   22988:	sub	sp, fp, #28
   2298c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22994:	add	fp, sp, #28
   22998:	sub	sp, sp, #44	; 0x2c
   2299c:	mov	r6, r2
   229a0:	ldr	r2, [fp, #8]
   229a4:	mov	r5, r0
   229a8:	mov	r0, #0
   229ac:	mov	r8, r3
   229b0:	cmp	r1, r6
   229b4:	strb	r0, [r2]
   229b8:	beq	229fc <main@@Base+0xc974>
   229bc:	ldrb	r0, [r1]
   229c0:	cmp	r0, #46	; 0x2e
   229c4:	beq	229dc <main@@Base+0xc954>
   229c8:	cmp	r0, #34	; 0x22
   229cc:	bne	229f4 <main@@Base+0xc96c>
   229d0:	mov	r0, #0
   229d4:	add	r1, r1, #1
   229d8:	b	229f8 <main@@Base+0xc970>
   229dc:	mov	r0, r5
   229e0:	mov	r2, r6
   229e4:	mov	r3, #5
   229e8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   229ec:	mov	r1, r0
   229f0:	b	229fc <main@@Base+0xc974>
   229f4:	mov	r0, #1
   229f8:	str	r0, [r5, #12]
   229fc:	ldr	r0, [r5, #12]
   22a00:	cmp	r0, #0
   22a04:	beq	22a10 <main@@Base+0xc988>
   22a08:	mov	r7, r1
   22a0c:	b	22a4c <main@@Base+0xc9c4>
   22a10:	sub	r0, r6, r1
   22a14:	cmp	r0, #2
   22a18:	blt	22a3c <main@@Base+0xc9b4>
   22a1c:	ldrb	r0, [r1]
   22a20:	cmp	r0, #32
   22a24:	bhi	22a08 <main@@Base+0xc980>
   22a28:	bne	22a3c <main@@Base+0xc9b4>
   22a2c:	mov	r7, r1
   22a30:	ldrb	r0, [r7, #1]!
   22a34:	cmp	r0, #32
   22a38:	bhi	22a4c <main@@Base+0xc9c4>
   22a3c:	mov	r0, r5
   22a40:	mov	r2, r6
   22a44:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   22a48:	mov	r7, r0
   22a4c:	cmp	r7, r6
   22a50:	beq	22b54 <main@@Base+0xcacc>
   22a54:	add	r0, r8, #4
   22a58:	mov	r1, #0
   22a5c:	add	sl, sp, #32
   22a60:	add	r9, sp, #28
   22a64:	str	r8, [sp, #16]
   22a68:	str	r1, [sp, #20]
   22a6c:	str	r0, [sp, #12]
   22a70:	ldr	r4, [r8]
   22a74:	mov	r8, r0
   22a78:	add	r0, sp, #24
   22a7c:	mov	r1, r7
   22a80:	mov	r2, r6
   22a84:	mov	r3, r9
   22a88:	str	sl, [sp]
   22a8c:	str	r0, [sp, #4]
   22a90:	mov	r0, r5
   22a94:	blx	r4
   22a98:	cmp	r0, r6
   22a9c:	beq	22b54 <main@@Base+0xcacc>
   22aa0:	mov	r4, r0
   22aa4:	cmp	r0, r7
   22aa8:	bne	22abc <main@@Base+0xca34>
   22aac:	ldr	r4, [r8], #4
   22ab0:	cmp	r4, #0
   22ab4:	bne	22a78 <main@@Base+0xc9f0>
   22ab8:	b	22b5c <main@@Base+0xcad4>
   22abc:	ldr	r0, [sp, #28]
   22ac0:	cmp	r0, #0
   22ac4:	beq	22ae4 <main@@Base+0xca5c>
   22ac8:	mov	r0, r5
   22acc:	mov	r1, r4
   22ad0:	mov	r2, r6
   22ad4:	mov	r3, #8
   22ad8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   22adc:	ldr	r8, [sp, #16]
   22ae0:	b	22b1c <main@@Base+0xca94>
   22ae4:	ldr	r0, [sp, #32]
   22ae8:	ldr	r1, [sp, #36]	; 0x24
   22aec:	ldr	r8, [sp, #16]
   22af0:	subs	r2, r0, #256	; 0x100
   22af4:	sbcs	r1, r1, #0
   22af8:	bcc	22b14 <main@@Base+0xca8c>
   22afc:	mov	r0, r5
   22b00:	mov	r1, r4
   22b04:	mov	r2, r6
   22b08:	mov	r3, #7
   22b0c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   22b10:	b	22b1c <main@@Base+0xca94>
   22b14:	str	r0, [sp, #20]
   22b18:	mov	r0, r4
   22b1c:	cmp	r0, r6
   22b20:	beq	22b54 <main@@Base+0xcacc>
   22b24:	ldr	r0, [fp, #8]
   22b28:	ldr	r2, [sp, #20]
   22b2c:	mov	r7, r4
   22b30:	mov	r1, r0
   22b34:	ldrb	r0, [r0]
   22b38:	add	r0, r0, r2
   22b3c:	strb	r0, [r1]
   22b40:	ldr	r0, [sp, #24]
   22b44:	cmp	r0, #0
   22b48:	ldr	r0, [sp, #12]
   22b4c:	bne	22a70 <main@@Base+0xc9e8>
   22b50:	b	22b74 <main@@Base+0xcaec>
   22b54:	mov	r4, r6
   22b58:	b	22b74 <main@@Base+0xcaec>
   22b5c:	mov	r0, r5
   22b60:	mov	r1, r7
   22b64:	mov	r2, r6
   22b68:	mov	r3, #23
   22b6c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   22b70:	mov	r4, r0
   22b74:	mov	r0, r4
   22b78:	sub	sp, fp, #28
   22b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b84:	add	fp, sp, #28
   22b88:	sub	sp, sp, #44	; 0x2c
   22b8c:	mov	r6, r2
   22b90:	ldr	r2, [fp, #8]
   22b94:	mov	r5, r0
   22b98:	mov	r0, #0
   22b9c:	mov	sl, r3
   22ba0:	cmp	r1, r6
   22ba4:	strh	r0, [r2]
   22ba8:	beq	22bec <main@@Base+0xcb64>
   22bac:	ldrb	r0, [r1]
   22bb0:	cmp	r0, #46	; 0x2e
   22bb4:	beq	22bcc <main@@Base+0xcb44>
   22bb8:	cmp	r0, #34	; 0x22
   22bbc:	bne	22be4 <main@@Base+0xcb5c>
   22bc0:	mov	r0, #0
   22bc4:	add	r1, r1, #1
   22bc8:	b	22be8 <main@@Base+0xcb60>
   22bcc:	mov	r0, r5
   22bd0:	mov	r2, r6
   22bd4:	mov	r3, #5
   22bd8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   22bdc:	mov	r1, r0
   22be0:	b	22bec <main@@Base+0xcb64>
   22be4:	mov	r0, #1
   22be8:	str	r0, [r5, #12]
   22bec:	ldr	r0, [r5, #12]
   22bf0:	cmp	r0, #0
   22bf4:	beq	22c00 <main@@Base+0xcb78>
   22bf8:	mov	r7, r1
   22bfc:	b	22c3c <main@@Base+0xcbb4>
   22c00:	sub	r0, r6, r1
   22c04:	cmp	r0, #2
   22c08:	blt	22c2c <main@@Base+0xcba4>
   22c0c:	ldrb	r0, [r1]
   22c10:	cmp	r0, #32
   22c14:	bhi	22bf8 <main@@Base+0xcb70>
   22c18:	bne	22c2c <main@@Base+0xcba4>
   22c1c:	mov	r7, r1
   22c20:	ldrb	r0, [r7, #1]!
   22c24:	cmp	r0, #32
   22c28:	bhi	22c3c <main@@Base+0xcbb4>
   22c2c:	mov	r0, r5
   22c30:	mov	r2, r6
   22c34:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   22c38:	mov	r7, r0
   22c3c:	cmp	r7, r6
   22c40:	beq	22d58 <main@@Base+0xccd0>
   22c44:	add	r0, sl, #4
   22c48:	mov	r2, #0
   22c4c:	add	r8, sp, #32
   22c50:	add	r9, sp, #28
   22c54:	str	sl, [sp, #16]
   22c58:	str	r0, [sp, #12]
   22c5c:	ldr	r4, [sl]
   22c60:	mov	sl, r0
   22c64:	str	r2, [sp, #20]
   22c68:	add	r0, sp, #24
   22c6c:	mov	r1, r7
   22c70:	mov	r2, r6
   22c74:	mov	r3, r9
   22c78:	str	r8, [sp]
   22c7c:	str	r0, [sp, #4]
   22c80:	mov	r0, r5
   22c84:	blx	r4
   22c88:	cmp	r0, r6
   22c8c:	beq	22d58 <main@@Base+0xccd0>
   22c90:	mov	r4, r0
   22c94:	cmp	r0, r7
   22c98:	bne	22cac <main@@Base+0xcc24>
   22c9c:	ldr	r4, [sl], #4
   22ca0:	cmp	r4, #0
   22ca4:	bne	22c68 <main@@Base+0xcbe0>
   22ca8:	b	22d60 <main@@Base+0xccd8>
   22cac:	ldr	r2, [sp, #28]
   22cb0:	ldr	r0, [sp, #32]
   22cb4:	ldr	r1, [sp, #36]	; 0x24
   22cb8:	cmp	r2, #0
   22cbc:	beq	22ce8 <main@@Base+0xcc60>
   22cc0:	ldr	sl, [sp, #16]
   22cc4:	movw	r2, #32769	; 0x8001
   22cc8:	subs	r2, r0, r2
   22ccc:	sbcs	r1, r1, #0
   22cd0:	bcc	22d14 <main@@Base+0xcc8c>
   22cd4:	mov	r0, r5
   22cd8:	mov	r1, r4
   22cdc:	mov	r2, r6
   22ce0:	mov	r3, #8
   22ce4:	b	22d08 <main@@Base+0xcc80>
   22ce8:	ldr	sl, [sp, #16]
   22cec:	subs	r2, r0, #32768	; 0x8000
   22cf0:	sbcs	r1, r1, #0
   22cf4:	bcc	22d1c <main@@Base+0xcc94>
   22cf8:	mov	r0, r5
   22cfc:	mov	r1, r4
   22d00:	mov	r2, r6
   22d04:	mov	r3, #7
   22d08:	bl	333fc <flatcc_json_parser_set_error@@Base>
   22d0c:	ldr	r2, [sp, #20]
   22d10:	b	22d24 <main@@Base+0xcc9c>
   22d14:	rsb	r2, r0, #0
   22d18:	b	22d20 <main@@Base+0xcc98>
   22d1c:	mov	r2, r0
   22d20:	mov	r0, r4
   22d24:	cmp	r0, r6
   22d28:	beq	22d58 <main@@Base+0xccd0>
   22d2c:	ldr	r0, [fp, #8]
   22d30:	mov	r7, r4
   22d34:	mov	r1, r0
   22d38:	ldrh	r0, [r0]
   22d3c:	add	r0, r0, r2
   22d40:	strh	r0, [r1]
   22d44:	ldr	r0, [sp, #24]
   22d48:	cmp	r0, #0
   22d4c:	ldr	r0, [sp, #12]
   22d50:	bne	22c5c <main@@Base+0xcbd4>
   22d54:	b	22d78 <main@@Base+0xccf0>
   22d58:	mov	r4, r6
   22d5c:	b	22d78 <main@@Base+0xccf0>
   22d60:	mov	r0, r5
   22d64:	mov	r1, r7
   22d68:	mov	r2, r6
   22d6c:	mov	r3, #23
   22d70:	bl	333fc <flatcc_json_parser_set_error@@Base>
   22d74:	mov	r4, r0
   22d78:	mov	r0, r4
   22d7c:	sub	sp, fp, #28
   22d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22d88:	add	fp, sp, #28
   22d8c:	sub	sp, sp, #28
   22d90:	mov	r7, r2
   22d94:	mov	r5, r0
   22d98:	cmp	r1, r2
   22d9c:	beq	22dd4 <main@@Base+0xcd4c>
   22da0:	ldrb	r0, [r1]
   22da4:	cmp	r0, #123	; 0x7b
   22da8:	bne	22dd4 <main@@Base+0xcd4c>
   22dac:	add	r2, r1, #1
   22db0:	mov	r9, r3
   22db4:	sub	r0, r7, r2
   22db8:	cmp	r0, #2
   22dbc:	blt	22dfc <main@@Base+0xcd74>
   22dc0:	ldrb	r0, [r2]
   22dc4:	cmp	r0, #32
   22dc8:	bls	22dec <main@@Base+0xcd64>
   22dcc:	mov	r1, r2
   22dd0:	b	22e10 <main@@Base+0xcd88>
   22dd4:	mov	r0, r5
   22dd8:	mov	r2, r7
   22ddc:	mov	r3, #21
   22de0:	sub	sp, fp, #28
   22de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22de8:	b	333fc <flatcc_json_parser_set_error@@Base>
   22dec:	bne	22dfc <main@@Base+0xcd74>
   22df0:	ldrb	r0, [r1, #2]!
   22df4:	cmp	r0, #32
   22df8:	bhi	22e10 <main@@Base+0xcd88>
   22dfc:	mov	r1, r2
   22e00:	mov	r0, r5
   22e04:	mov	r2, r7
   22e08:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   22e0c:	mov	r1, r0
   22e10:	cmp	r1, r7
   22e14:	mov	r2, r7
   22e18:	beq	22e50 <main@@Base+0xcdc8>
   22e1c:	ldrb	r0, [r1]
   22e20:	cmp	r0, #125	; 0x7d
   22e24:	bne	22e4c <main@@Base+0xcdc4>
   22e28:	add	r2, r1, #1
   22e2c:	sub	r0, r7, r2
   22e30:	cmp	r0, #2
   22e34:	blt	23418 <main@@Base+0xd390>
   22e38:	ldrb	r0, [r2]
   22e3c:	cmp	r0, #32
   22e40:	bls	23408 <main@@Base+0xd380>
   22e44:	mov	r1, r2
   22e48:	b	23470 <main@@Base+0xd3e8>
   22e4c:	mov	r2, r1
   22e50:	mov	sl, #1627389952	; 0x61000000
   22e54:	cmp	r2, r7
   22e58:	mov	r4, r7
   22e5c:	beq	22ea8 <main@@Base+0xce20>
   22e60:	ldrb	r0, [r2]
   22e64:	cmp	r0, #46	; 0x2e
   22e68:	beq	22e80 <main@@Base+0xcdf8>
   22e6c:	cmp	r0, #34	; 0x22
   22e70:	bne	22e9c <main@@Base+0xce14>
   22e74:	mov	r0, #0
   22e78:	add	r4, r2, #1
   22e7c:	b	22ea4 <main@@Base+0xce1c>
   22e80:	mov	r1, r2
   22e84:	mov	r0, r5
   22e88:	mov	r2, r7
   22e8c:	mov	r3, #5
   22e90:	bl	333fc <flatcc_json_parser_set_error@@Base>
   22e94:	mov	r4, r0
   22e98:	b	22ea8 <main@@Base+0xce20>
   22e9c:	mov	r0, #1
   22ea0:	mov	r4, r2
   22ea4:	str	r0, [r5, #12]
   22ea8:	sub	r0, r7, r4
   22eac:	mov	r1, #8
   22eb0:	cmp	r0, #8
   22eb4:	movcc	r1, r0
   22eb8:	sub	r1, r1, #1
   22ebc:	cmp	r1, #7
   22ec0:	bhi	23268 <main@@Base+0xd1e0>
   22ec4:	ldrb	r1, [r4]
   22ec8:	teq	sl, r1, lsl #24
   22ecc:	beq	22f1c <main@@Base+0xce94>
   22ed0:	lsl	r1, r1, #24
   22ed4:	teq	r1, #1644167168	; 0x62000000
   22ed8:	bne	23268 <main@@Base+0xd1e0>
   22edc:	cmp	r0, #2
   22ee0:	mov	r8, r4
   22ee4:	blt	230c4 <main@@Base+0xd03c>
   22ee8:	mov	r1, r4
   22eec:	ldr	r2, [r5, #12]
   22ef0:	ldrb	r0, [r1, #1]!
   22ef4:	cmp	r2, #0
   22ef8:	beq	22f5c <main@@Base+0xced4>
   22efc:	cmp	r0, #33	; 0x21
   22f00:	bcc	22f10 <main@@Base+0xce88>
   22f04:	cmp	r0, #58	; 0x3a
   22f08:	mov	r8, r4
   22f0c:	bne	230c4 <main@@Base+0xd03c>
   22f10:	mov	r0, #0
   22f14:	str	r0, [r5, #12]
   22f18:	b	22f6c <main@@Base+0xcee4>
   22f1c:	cmp	r0, #2
   22f20:	mov	r6, r4
   22f24:	blt	231e8 <main@@Base+0xd160>
   22f28:	mov	r1, r4
   22f2c:	ldr	r2, [r5, #12]
   22f30:	ldrb	r0, [r1, #1]!
   22f34:	cmp	r2, #0
   22f38:	beq	22f8c <main@@Base+0xcf04>
   22f3c:	cmp	r0, #33	; 0x21
   22f40:	bcc	22f50 <main@@Base+0xcec8>
   22f44:	cmp	r0, #58	; 0x3a
   22f48:	mov	r6, r4
   22f4c:	bne	231e8 <main@@Base+0xd160>
   22f50:	mov	r0, #0
   22f54:	str	r0, [r5, #12]
   22f58:	b	22f9c <main@@Base+0xcf14>
   22f5c:	cmp	r0, #34	; 0x22
   22f60:	mov	r8, r4
   22f64:	bne	230c4 <main@@Base+0xd03c>
   22f68:	add	r1, r4, #2
   22f6c:	sub	r0, r7, r1
   22f70:	cmp	r0, #2
   22f74:	blt	22fd0 <main@@Base+0xcf48>
   22f78:	ldrb	r0, [r1]
   22f7c:	cmp	r0, #32
   22f80:	bls	22fbc <main@@Base+0xcf34>
   22f84:	mov	r8, r1
   22f88:	b	22fe0 <main@@Base+0xcf58>
   22f8c:	cmp	r0, #34	; 0x22
   22f90:	mov	r6, r4
   22f94:	bne	231e8 <main@@Base+0xd160>
   22f98:	add	r1, r4, #2
   22f9c:	sub	r0, r7, r1
   22fa0:	cmp	r0, #2
   22fa4:	blt	23044 <main@@Base+0xcfbc>
   22fa8:	ldrb	r0, [r1]
   22fac:	cmp	r0, #32
   22fb0:	bls	23030 <main@@Base+0xcfa8>
   22fb4:	mov	r6, r1
   22fb8:	b	23054 <main@@Base+0xcfcc>
   22fbc:	bne	22fd0 <main@@Base+0xcf48>
   22fc0:	mov	r8, r1
   22fc4:	ldrb	r0, [r8, #1]!
   22fc8:	cmp	r0, #32
   22fcc:	bhi	22fe0 <main@@Base+0xcf58>
   22fd0:	mov	r0, r5
   22fd4:	mov	r2, r7
   22fd8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   22fdc:	mov	r8, r0
   22fe0:	cmp	r8, r7
   22fe4:	beq	23018 <main@@Base+0xcf90>
   22fe8:	ldrb	r0, [r8]
   22fec:	cmp	r0, #58	; 0x3a
   22ff0:	bne	23018 <main@@Base+0xcf90>
   22ff4:	add	r1, r8, #1
   22ff8:	sub	r0, r7, r1
   22ffc:	cmp	r0, #2
   23000:	blt	230b4 <main@@Base+0xd02c>
   23004:	ldrb	r0, [r1]
   23008:	cmp	r0, #32
   2300c:	bls	230a4 <main@@Base+0xd01c>
   23010:	mov	r8, r1
   23014:	b	230c4 <main@@Base+0xd03c>
   23018:	mov	r0, r5
   2301c:	mov	r1, r8
   23020:	mov	r2, r7
   23024:	mov	r3, #4
   23028:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2302c:	b	230c0 <main@@Base+0xd038>
   23030:	bne	23044 <main@@Base+0xcfbc>
   23034:	mov	r6, r1
   23038:	ldrb	r0, [r6, #1]!
   2303c:	cmp	r0, #32
   23040:	bhi	23054 <main@@Base+0xcfcc>
   23044:	mov	r0, r5
   23048:	mov	r2, r7
   2304c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   23050:	mov	r6, r0
   23054:	cmp	r6, r7
   23058:	beq	2308c <main@@Base+0xd004>
   2305c:	ldrb	r0, [r6]
   23060:	cmp	r0, #58	; 0x3a
   23064:	bne	2308c <main@@Base+0xd004>
   23068:	add	r1, r6, #1
   2306c:	sub	r0, r7, r1
   23070:	cmp	r0, #2
   23074:	blt	231d8 <main@@Base+0xd150>
   23078:	ldrb	r0, [r1]
   2307c:	cmp	r0, #32
   23080:	bls	231c8 <main@@Base+0xd140>
   23084:	mov	r6, r1
   23088:	b	231e8 <main@@Base+0xd160>
   2308c:	mov	r0, r5
   23090:	mov	r1, r6
   23094:	mov	r2, r7
   23098:	mov	r3, #4
   2309c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   230a0:	b	231e4 <main@@Base+0xd15c>
   230a4:	bne	230b4 <main@@Base+0xd02c>
   230a8:	ldrb	r0, [r8, #2]!
   230ac:	cmp	r0, #32
   230b0:	bhi	230c4 <main@@Base+0xd03c>
   230b4:	mov	r0, r5
   230b8:	mov	r2, r7
   230bc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   230c0:	mov	r8, r0
   230c4:	cmp	r4, r8
   230c8:	beq	23268 <main@@Base+0xd1e0>
   230cc:	mov	r4, #0
   230d0:	cmp	r8, r7
   230d4:	str	r4, [sp, #20]
   230d8:	str	r4, [sp, #16]
   230dc:	strb	r4, [sp, #10]
   230e0:	str	r4, [sp, #12]
   230e4:	beq	23140 <main@@Base+0xd0b8>
   230e8:	add	r0, sp, #16
   230ec:	mov	r1, r8
   230f0:	mov	r2, r7
   230f4:	add	r3, sp, #12
   230f8:	str	r0, [sp]
   230fc:	mov	r0, r5
   23100:	bl	352ec <flatcc_json_parser_integer@@Base>
   23104:	cmp	r0, r8
   23108:	beq	23148 <main@@Base+0xd0c0>
   2310c:	ldr	r3, [sp, #12]
   23110:	mov	r1, r0
   23114:	ldr	r0, [sp, #16]
   23118:	ldr	r2, [sp, #20]
   2311c:	cmp	r3, #0
   23120:	beq	23150 <main@@Base+0xd0c8>
   23124:	subs	r3, r0, #129	; 0x81
   23128:	sbcs	r2, r2, #0
   2312c:	bcc	23174 <main@@Base+0xd0ec>
   23130:	mov	r0, r5
   23134:	mov	r2, r7
   23138:	mov	r3, #8
   2313c:	b	23168 <main@@Base+0xd0e0>
   23140:	mov	r1, r7
   23144:	b	23184 <main@@Base+0xd0fc>
   23148:	mov	r1, r8
   2314c:	b	23184 <main@@Base+0xd0fc>
   23150:	subs	r3, r0, #128	; 0x80
   23154:	sbcs	r2, r2, #0
   23158:	bcc	2317c <main@@Base+0xd0f4>
   2315c:	mov	r0, r5
   23160:	mov	r2, r7
   23164:	mov	r3, #7
   23168:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2316c:	mov	r1, r0
   23170:	b	23184 <main@@Base+0xd0fc>
   23174:	rsb	r4, r0, #0
   23178:	b	23180 <main@@Base+0xd0f8>
   2317c:	mov	r4, r0
   23180:	strb	r4, [sp, #10]
   23184:	cmp	r8, r1
   23188:	bne	231c0 <main@@Base+0xd138>
   2318c:	movw	r3, #45512	; 0xb1c8
   23190:	add	r0, sp, #10
   23194:	mov	r1, r8
   23198:	mov	r2, r7
   2319c:	movt	r3, #5
   231a0:	str	r0, [sp]
   231a4:	mov	r0, r5
   231a8:	bl	22790 <main@@Base+0xc708>
   231ac:	mov	r1, r0
   231b0:	cmp	r0, r8
   231b4:	cmpne	r1, r7
   231b8:	beq	233b8 <main@@Base+0xd330>
   231bc:	ldrb	r4, [sp, #10]
   231c0:	strb	r4, [r9, #2]
   231c4:	b	2327c <main@@Base+0xd1f4>
   231c8:	bne	231d8 <main@@Base+0xd150>
   231cc:	ldrb	r0, [r6, #2]!
   231d0:	cmp	r0, #32
   231d4:	bhi	231e8 <main@@Base+0xd160>
   231d8:	mov	r0, r5
   231dc:	mov	r2, r7
   231e0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   231e4:	mov	r6, r0
   231e8:	cmp	r4, r6
   231ec:	beq	23268 <main@@Base+0xd1e0>
   231f0:	mov	r4, #0
   231f4:	cmp	r6, r7
   231f8:	str	r4, [sp, #20]
   231fc:	str	r4, [sp, #16]
   23200:	strh	r4, [sp, #10]
   23204:	str	r4, [sp, #12]
   23208:	beq	23330 <main@@Base+0xd2a8>
   2320c:	add	r0, sp, #16
   23210:	mov	r1, r6
   23214:	mov	r2, r7
   23218:	add	r3, sp, #12
   2321c:	str	r0, [sp]
   23220:	mov	r0, r5
   23224:	bl	352ec <flatcc_json_parser_integer@@Base>
   23228:	cmp	r0, r6
   2322c:	beq	23338 <main@@Base+0xd2b0>
   23230:	ldr	r3, [sp, #12]
   23234:	mov	r1, r0
   23238:	ldr	r0, [sp, #16]
   2323c:	ldr	r2, [sp, #20]
   23240:	cmp	r3, #0
   23244:	beq	23340 <main@@Base+0xd2b8>
   23248:	movw	r3, #32769	; 0x8001
   2324c:	subs	r3, r0, r3
   23250:	sbcs	r2, r2, #0
   23254:	bcc	23364 <main@@Base+0xd2dc>
   23258:	mov	r0, r5
   2325c:	mov	r2, r7
   23260:	mov	r3, #8
   23264:	b	23358 <main@@Base+0xd2d0>
   23268:	mov	r0, r5
   2326c:	mov	r1, r4
   23270:	mov	r2, r7
   23274:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   23278:	mov	r1, r0
   2327c:	sub	r0, r7, r1
   23280:	cmp	r0, #2
   23284:	blt	232b0 <main@@Base+0xd228>
   23288:	ldrb	r0, [r1]
   2328c:	cmp	r0, #32
   23290:	bls	2329c <main@@Base+0xd214>
   23294:	mov	r2, r1
   23298:	b	232c0 <main@@Base+0xd238>
   2329c:	bne	232b0 <main@@Base+0xd228>
   232a0:	mov	r2, r1
   232a4:	ldrb	r0, [r2, #1]!
   232a8:	cmp	r0, #32
   232ac:	bhi	232c0 <main@@Base+0xd238>
   232b0:	mov	r0, r5
   232b4:	mov	r2, r7
   232b8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   232bc:	mov	r2, r0
   232c0:	cmp	r2, r7
   232c4:	beq	233c8 <main@@Base+0xd340>
   232c8:	ldrb	r0, [r2]
   232cc:	cmp	r0, #44	; 0x2c
   232d0:	bne	233d0 <main@@Base+0xd348>
   232d4:	add	r1, r2, #1
   232d8:	sub	r0, r7, r1
   232dc:	cmp	r0, #2
   232e0:	blt	23308 <main@@Base+0xd280>
   232e4:	ldrb	r0, [r1]
   232e8:	cmp	r0, #32
   232ec:	bls	232f8 <main@@Base+0xd270>
   232f0:	mov	r2, r1
   232f4:	b	23318 <main@@Base+0xd290>
   232f8:	bne	23308 <main@@Base+0xd280>
   232fc:	ldrb	r0, [r2, #2]!
   23300:	cmp	r0, #32
   23304:	bhi	23318 <main@@Base+0xd290>
   23308:	mov	r0, r5
   2330c:	mov	r2, r7
   23310:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   23314:	mov	r2, r0
   23318:	cmp	r2, r7
   2331c:	beq	233fc <main@@Base+0xd374>
   23320:	ldrb	r0, [r2]
   23324:	cmp	r0, #125	; 0x7d
   23328:	bne	22e54 <main@@Base+0xcdcc>
   2332c:	b	233d8 <main@@Base+0xd350>
   23330:	mov	r1, r7
   23334:	b	23374 <main@@Base+0xd2ec>
   23338:	mov	r1, r6
   2333c:	b	23374 <main@@Base+0xd2ec>
   23340:	subs	r3, r0, #32768	; 0x8000
   23344:	sbcs	r2, r2, #0
   23348:	bcc	2336c <main@@Base+0xd2e4>
   2334c:	mov	r0, r5
   23350:	mov	r2, r7
   23354:	mov	r3, #7
   23358:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2335c:	mov	r1, r0
   23360:	b	23374 <main@@Base+0xd2ec>
   23364:	rsb	r4, r0, #0
   23368:	b	23370 <main@@Base+0xd2e8>
   2336c:	mov	r4, r0
   23370:	strh	r4, [sp, #10]
   23374:	cmp	r6, r1
   23378:	bne	233b0 <main@@Base+0xd328>
   2337c:	movw	r3, #45524	; 0xb1d4
   23380:	add	r0, sp, #10
   23384:	mov	r1, r6
   23388:	mov	r2, r7
   2338c:	movt	r3, #5
   23390:	str	r0, [sp]
   23394:	mov	r0, r5
   23398:	bl	22b80 <main@@Base+0xcaf8>
   2339c:	mov	r1, r0
   233a0:	cmp	r0, r6
   233a4:	cmpne	r1, r7
   233a8:	beq	233b8 <main@@Base+0xd330>
   233ac:	ldrh	r4, [sp, #10]
   233b0:	strh	r4, [r9]
   233b4:	b	2327c <main@@Base+0xd1f4>
   233b8:	mov	r0, r5
   233bc:	mov	r2, r7
   233c0:	mov	r3, #33	; 0x21
   233c4:	b	23440 <main@@Base+0xd3b8>
   233c8:	mov	r1, r7
   233cc:	b	23470 <main@@Base+0xd3e8>
   233d0:	cmp	r0, #125	; 0x7d
   233d4:	bne	23430 <main@@Base+0xd3a8>
   233d8:	add	r3, r2, #1
   233dc:	sub	r0, r7, r3
   233e0:	cmp	r0, #2
   233e4:	blt	2345c <main@@Base+0xd3d4>
   233e8:	ldrb	r0, [r3]
   233ec:	cmp	r0, #32
   233f0:	bls	23448 <main@@Base+0xd3c0>
   233f4:	mov	r1, r3
   233f8:	b	23470 <main@@Base+0xd3e8>
   233fc:	mov	r0, r5
   23400:	mov	r1, r7
   23404:	b	23438 <main@@Base+0xd3b0>
   23408:	bne	23418 <main@@Base+0xd390>
   2340c:	ldrb	r0, [r1, #2]!
   23410:	cmp	r0, #32
   23414:	bhi	23470 <main@@Base+0xd3e8>
   23418:	mov	r1, r2
   2341c:	mov	r0, r5
   23420:	mov	r2, r7
   23424:	sub	sp, fp, #28
   23428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2342c:	b	334a4 <flatcc_json_parser_space_ext@@Base>
   23430:	mov	r0, r5
   23434:	mov	r1, r2
   23438:	mov	r2, r7
   2343c:	mov	r3, #10
   23440:	bl	333fc <flatcc_json_parser_set_error@@Base>
   23444:	b	2346c <main@@Base+0xd3e4>
   23448:	bne	2345c <main@@Base+0xd3d4>
   2344c:	ldrb	r0, [r2, #2]!
   23450:	mov	r1, r2
   23454:	cmp	r0, #32
   23458:	bhi	23470 <main@@Base+0xd3e8>
   2345c:	mov	r0, r5
   23460:	mov	r1, r3
   23464:	mov	r2, r7
   23468:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2346c:	mov	r1, r0
   23470:	mov	r0, r1
   23474:	sub	sp, fp, #28
   23478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2347c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23480:	add	fp, sp, #28
   23484:	sub	sp, sp, #28
   23488:	ldr	r5, [fp, #8]
   2348c:	mov	r8, r0
   23490:	mov	r0, #0
   23494:	mov	sl, r2
   23498:	mov	r4, r1
   2349c:	cmp	r3, #4
   234a0:	str	r0, [r5]
   234a4:	bhi	23500 <main@@Base+0xd478>
   234a8:	add	r0, pc, #0
   234ac:	ldr	pc, [r0, r3, lsl #2]
   234b0:	andeq	r3, r2, r4, asr #9
   234b4:	andeq	r3, r2, r8, lsr #10
   234b8:	andeq	r3, r2, r0, asr #10
   234bc:	muleq	r2, r4, r5
   234c0:	andeq	r3, r2, r8, ror #11
   234c4:	sub	r0, sl, r4
   234c8:	cmp	r0, #4
   234cc:	blt	234ec <main@@Base+0xd464>
   234d0:	movw	r1, #37302	; 0x91b6
   234d4:	mov	r0, r4
   234d8:	mov	r2, #4
   234dc:	movt	r1, #4
   234e0:	bl	14ebc <bcmp@plt>
   234e4:	cmp	r0, #0
   234e8:	beq	236a0 <main@@Base+0xd618>
   234ec:	mov	r0, r8
   234f0:	mov	r1, r4
   234f4:	mov	r2, sl
   234f8:	mov	r3, #26
   234fc:	b	2351c <main@@Base+0xd494>
   23500:	ldrb	r0, [r8, #8]
   23504:	tst	r0, #1
   23508:	bne	23670 <main@@Base+0xd5e8>
   2350c:	mov	r0, r8
   23510:	mov	r1, r4
   23514:	mov	r2, sl
   23518:	mov	r3, #15
   2351c:	sub	sp, fp, #28
   23520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23524:	b	333fc <flatcc_json_parser_set_error@@Base>
   23528:	mov	r0, r8
   2352c:	mov	r1, r4
   23530:	mov	r2, sl
   23534:	mov	r3, r5
   23538:	bl	16f7c <main@@Base+0xef4>
   2353c:	b	23638 <main@@Base+0xd5b0>
   23540:	mov	r0, #0
   23544:	mov	r1, #4
   23548:	str	r0, [r5]
   2354c:	ldr	r0, [r8]
   23550:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   23554:	cmp	r0, #0
   23558:	bne	23624 <main@@Base+0xd59c>
   2355c:	cmp	r4, sl
   23560:	beq	23600 <main@@Base+0xd578>
   23564:	ldrb	r0, [r4]
   23568:	cmp	r0, #123	; 0x7b
   2356c:	bne	23600 <main@@Base+0xd578>
   23570:	add	r1, r4, #1
   23574:	sub	r0, sl, r1
   23578:	cmp	r0, #2
   2357c:	blt	236c0 <main@@Base+0xd638>
   23580:	ldrb	r0, [r1]
   23584:	cmp	r0, #32
   23588:	bls	236b0 <main@@Base+0xd628>
   2358c:	mov	r4, r1
   23590:	b	236d0 <main@@Base+0xd648>
   23594:	mov	r0, #0
   23598:	mov	r1, #0
   2359c:	str	r0, [r5]
   235a0:	ldr	r0, [r8]
   235a4:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   235a8:	cmp	r0, #0
   235ac:	bne	23624 <main@@Base+0xd59c>
   235b0:	cmp	r4, sl
   235b4:	beq	23600 <main@@Base+0xd578>
   235b8:	ldrb	r0, [r4]
   235bc:	cmp	r0, #123	; 0x7b
   235c0:	bne	23600 <main@@Base+0xd578>
   235c4:	add	r1, r4, #1
   235c8:	sub	r0, sl, r1
   235cc:	cmp	r0, #2
   235d0:	blt	24204 <main@@Base+0xe17c>
   235d4:	ldrb	r0, [r1]
   235d8:	cmp	r0, #32
   235dc:	bls	241f4 <main@@Base+0xe16c>
   235e0:	mov	r4, r1
   235e4:	b	24214 <main@@Base+0xe18c>
   235e8:	mov	r0, r8
   235ec:	mov	r1, r4
   235f0:	mov	r2, sl
   235f4:	mov	r3, r5
   235f8:	bl	25fec <main@@Base+0xff64>
   235fc:	b	23638 <main@@Base+0xd5b0>
   23600:	mov	r0, r8
   23604:	mov	r1, r4
   23608:	mov	r2, sl
   2360c:	mov	r3, #21
   23610:	bl	333fc <flatcc_json_parser_set_error@@Base>
   23614:	mov	r4, r0
   23618:	ldr	r0, [r8, #24]
   2361c:	cmp	r0, #0
   23620:	beq	23688 <main@@Base+0xd600>
   23624:	mov	r0, r8
   23628:	mov	r1, r4
   2362c:	mov	r2, sl
   23630:	mov	r3, #33	; 0x21
   23634:	bl	333fc <flatcc_json_parser_set_error@@Base>
   23638:	mov	r4, r0
   2363c:	ldr	r0, [r8, #24]
   23640:	cmp	r0, #0
   23644:	bne	236a4 <main@@Base+0xd61c>
   23648:	ldr	r0, [r5]
   2364c:	cmp	r0, #0
   23650:	bne	236a4 <main@@Base+0xd61c>
   23654:	mov	r0, r8
   23658:	mov	r1, r4
   2365c:	mov	r2, sl
   23660:	mov	r3, #33	; 0x21
   23664:	bl	333fc <flatcc_json_parser_set_error@@Base>
   23668:	mov	r4, r0
   2366c:	b	236a4 <main@@Base+0xd61c>
   23670:	mov	r0, r8
   23674:	mov	r1, r4
   23678:	mov	r2, sl
   2367c:	sub	sp, fp, #28
   23680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23684:	b	33d68 <flatcc_json_parser_generic_json@@Base>
   23688:	ldr	r0, [r8]
   2368c:	bl	2ff38 <flatcc_builder_end_table@@Base>
   23690:	cmp	r0, #0
   23694:	str	r0, [r5]
   23698:	bne	2363c <main@@Base+0xd5b4>
   2369c:	b	23624 <main@@Base+0xd59c>
   236a0:	add	r4, r4, #4
   236a4:	mov	r0, r4
   236a8:	sub	sp, fp, #28
   236ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236b0:	bne	236c0 <main@@Base+0xd638>
   236b4:	ldrb	r0, [r4, #2]!
   236b8:	cmp	r0, #32
   236bc:	bhi	236d0 <main@@Base+0xd648>
   236c0:	mov	r0, r8
   236c4:	mov	r2, sl
   236c8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   236cc:	mov	r4, r0
   236d0:	cmp	r4, sl
   236d4:	mov	r2, sl
   236d8:	beq	236ec <main@@Base+0xd664>
   236dc:	ldrb	r0, [r4]
   236e0:	cmp	r0, #125	; 0x7d
   236e4:	beq	2422c <main@@Base+0xe1a4>
   236e8:	mov	r2, r4
   236ec:	cmp	r2, sl
   236f0:	mov	r9, sl
   236f4:	beq	23740 <main@@Base+0xd6b8>
   236f8:	ldrb	r0, [r2]
   236fc:	cmp	r0, #46	; 0x2e
   23700:	beq	23718 <main@@Base+0xd690>
   23704:	cmp	r0, #34	; 0x22
   23708:	bne	23734 <main@@Base+0xd6ac>
   2370c:	mov	r0, #0
   23710:	add	r9, r2, #1
   23714:	b	2373c <main@@Base+0xd6b4>
   23718:	mov	r1, r2
   2371c:	mov	r0, r8
   23720:	mov	r2, sl
   23724:	mov	r3, #5
   23728:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2372c:	mov	r9, r0
   23730:	b	23740 <main@@Base+0xd6b8>
   23734:	mov	r0, #1
   23738:	mov	r9, r2
   2373c:	str	r0, [r8, #12]
   23740:	sub	lr, sl, r9
   23744:	mov	r0, #8
   23748:	cmp	lr, #8
   2374c:	movcc	r0, lr
   23750:	sub	r2, r0, #1
   23754:	cmp	r2, #7
   23758:	bhi	24068 <main@@Base+0xdfe0>
   2375c:	mov	ip, r5
   23760:	add	r5, pc, #24
   23764:	mov	r0, #0
   23768:	mov	r1, #0
   2376c:	mov	r3, #0
   23770:	mov	r7, #0
   23774:	mov	r6, #0
   23778:	mov	r4, #0
   2377c:	ldr	pc, [r5, r2, lsl #2]
   23780:	ldrdeq	r3, [r2], -r0
   23784:	andeq	r3, r2, r8, asr #15
   23788:	andeq	r3, r2, r0, asr #15
   2378c:			; <UNDEFINED> instruction: 0x000237b8
   23790:	andeq	r3, r2, r8, lsr #15
   23794:	andeq	r3, r2, r0, lsr #15
   23798:	andeq	r3, r2, r0, lsr #15
   2379c:	andeq	r3, r2, r0, lsr #15
   237a0:	ldrb	r1, [r9, #5]
   237a4:	lsl	r1, r1, #16
   237a8:	ldrb	r2, [r9, #4]
   237ac:	mov	r3, r0
   237b0:	orr	r1, r1, r2, lsl #24
   237b4:	mov	r0, r1
   237b8:	ldrb	r1, [r9, #3]
   237bc:	orr	r7, r1, r3
   237c0:	ldrb	r1, [r9, #2]
   237c4:	orr	r6, r7, r1, lsl #8
   237c8:	ldrb	r1, [r9, #1]
   237cc:	orr	r4, r6, r1, lsl #16
   237d0:	ldrb	r1, [r9]
   237d4:	movw	r3, #29234	; 0x7232
   237d8:	lsr	r2, r0, #16
   237dc:	movt	r3, #27759	; 0x6c6f
   237e0:	orr	r7, r4, r1, lsl #24
   237e4:	movw	r1, #25455	; 0x636f
   237e8:	orr	r2, r2, r7, lsl #16
   237ec:	eor	r1, r1, r7, lsr #16
   237f0:	eor	r2, r2, r3
   237f4:	orrs	r1, r2, r1
   237f8:	bne	23840 <main@@Base+0xd7b8>
   237fc:	cmp	lr, #7
   23800:	mov	r6, r9
   23804:	mov	r5, ip
   23808:	blt	23a28 <main@@Base+0xd9a0>
   2380c:	mov	r1, r9
   23810:	ldr	r2, [r8, #12]
   23814:	ldrb	r0, [r1, #6]!
   23818:	cmp	r2, #0
   2381c:	beq	238a0 <main@@Base+0xd818>
   23820:	cmp	r0, #33	; 0x21
   23824:	bcc	23834 <main@@Base+0xd7ac>
   23828:	cmp	r0, #58	; 0x3a
   2382c:	mov	r6, r9
   23830:	bne	23a28 <main@@Base+0xd9a0>
   23834:	mov	r0, #0
   23838:	str	r0, [r8, #12]
   2383c:	b	238b0 <main@@Base+0xd828>
   23840:	movw	r1, #27759	; 0x6c6f
   23844:	and	r0, r0, #-16777216	; 0xff000000
   23848:	mov	r5, ip
   2384c:	movt	r1, #25455	; 0x636f
   23850:	eor	r0, r0, #1912602624	; 0x72000000
   23854:	eor	r1, r7, r1
   23858:	orrs	r0, r0, r1
   2385c:	bne	23bf8 <main@@Base+0xdb70>
   23860:	cmp	lr, #6
   23864:	mov	r6, r9
   23868:	blt	23b78 <main@@Base+0xdaf0>
   2386c:	mov	r1, r9
   23870:	ldr	r2, [r8, #12]
   23874:	ldrb	r0, [r1, #5]!
   23878:	cmp	r2, #0
   2387c:	beq	238d0 <main@@Base+0xd848>
   23880:	cmp	r0, #33	; 0x21
   23884:	bcc	23894 <main@@Base+0xd80c>
   23888:	cmp	r0, #58	; 0x3a
   2388c:	mov	r6, r9
   23890:	bne	23b78 <main@@Base+0xdaf0>
   23894:	mov	r0, #0
   23898:	str	r0, [r8, #12]
   2389c:	b	238e0 <main@@Base+0xd858>
   238a0:	cmp	r0, #34	; 0x22
   238a4:	mov	r6, r9
   238a8:	bne	23a28 <main@@Base+0xd9a0>
   238ac:	add	r1, r9, #7
   238b0:	sub	r0, sl, r1
   238b4:	cmp	r0, #2
   238b8:	blt	23914 <main@@Base+0xd88c>
   238bc:	ldrb	r0, [r1]
   238c0:	cmp	r0, #32
   238c4:	bls	23900 <main@@Base+0xd878>
   238c8:	mov	r6, r1
   238cc:	b	2392c <main@@Base+0xd8a4>
   238d0:	cmp	r0, #34	; 0x22
   238d4:	mov	r6, r9
   238d8:	bne	23b78 <main@@Base+0xdaf0>
   238dc:	add	r1, r9, #6
   238e0:	sub	r0, sl, r1
   238e4:	cmp	r0, #2
   238e8:	blt	23994 <main@@Base+0xd90c>
   238ec:	ldrb	r0, [r1]
   238f0:	cmp	r0, #32
   238f4:	bls	23980 <main@@Base+0xd8f8>
   238f8:	mov	r6, r1
   238fc:	b	239ac <main@@Base+0xd924>
   23900:	bne	23914 <main@@Base+0xd88c>
   23904:	mov	r6, r1
   23908:	ldrb	r0, [r6, #1]!
   2390c:	cmp	r0, #32
   23910:	bhi	2392c <main@@Base+0xd8a4>
   23914:	mov	r0, r8
   23918:	mov	r2, sl
   2391c:	mov	r4, lr
   23920:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   23924:	mov	lr, r4
   23928:	mov	r6, r0
   2392c:	cmp	r6, sl
   23930:	beq	23964 <main@@Base+0xd8dc>
   23934:	ldrb	r0, [r6]
   23938:	cmp	r0, #58	; 0x3a
   2393c:	bne	23964 <main@@Base+0xd8dc>
   23940:	add	r1, r6, #1
   23944:	sub	r0, sl, r1
   23948:	cmp	r0, #2
   2394c:	blt	23a10 <main@@Base+0xd988>
   23950:	ldrb	r0, [r1]
   23954:	cmp	r0, #32
   23958:	bls	23a00 <main@@Base+0xd978>
   2395c:	mov	r6, r1
   23960:	b	23a28 <main@@Base+0xd9a0>
   23964:	mov	r0, r8
   23968:	mov	r1, r6
   2396c:	mov	r2, sl
   23970:	mov	r3, #4
   23974:	mov	r4, lr
   23978:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2397c:	b	23a20 <main@@Base+0xd998>
   23980:	bne	23994 <main@@Base+0xd90c>
   23984:	mov	r6, r1
   23988:	ldrb	r0, [r6, #1]!
   2398c:	cmp	r0, #32
   23990:	bhi	239ac <main@@Base+0xd924>
   23994:	mov	r0, r8
   23998:	mov	r2, sl
   2399c:	mov	r4, lr
   239a0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   239a4:	mov	lr, r4
   239a8:	mov	r6, r0
   239ac:	cmp	r6, sl
   239b0:	beq	239e4 <main@@Base+0xd95c>
   239b4:	ldrb	r0, [r6]
   239b8:	cmp	r0, #58	; 0x3a
   239bc:	bne	239e4 <main@@Base+0xd95c>
   239c0:	add	r1, r6, #1
   239c4:	sub	r0, sl, r1
   239c8:	cmp	r0, #2
   239cc:	blt	23b60 <main@@Base+0xdad8>
   239d0:	ldrb	r0, [r1]
   239d4:	cmp	r0, #32
   239d8:	bls	23b50 <main@@Base+0xdac8>
   239dc:	mov	r6, r1
   239e0:	b	23b78 <main@@Base+0xdaf0>
   239e4:	mov	r0, r8
   239e8:	mov	r1, r6
   239ec:	mov	r2, sl
   239f0:	mov	r3, #4
   239f4:	mov	r4, lr
   239f8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   239fc:	b	23b70 <main@@Base+0xdae8>
   23a00:	bne	23a10 <main@@Base+0xd988>
   23a04:	ldrb	r0, [r6, #2]!
   23a08:	cmp	r0, #32
   23a0c:	bhi	23a28 <main@@Base+0xd9a0>
   23a10:	mov	r0, r8
   23a14:	mov	r2, sl
   23a18:	mov	r4, lr
   23a1c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   23a20:	mov	lr, r4
   23a24:	mov	r6, r0
   23a28:	cmp	r9, r6
   23a2c:	beq	23bf8 <main@@Base+0xdb70>
   23a30:	mov	r7, #0
   23a34:	cmp	r6, sl
   23a38:	str	r7, [sp, #20]
   23a3c:	str	r7, [sp, #16]
   23a40:	strb	r7, [sp, #11]
   23a44:	str	r7, [sp, #12]
   23a48:	beq	23aa8 <main@@Base+0xda20>
   23a4c:	add	r0, sp, #16
   23a50:	mov	r1, r6
   23a54:	mov	r2, sl
   23a58:	add	r3, sp, #12
   23a5c:	str	r0, [sp]
   23a60:	mov	r0, r8
   23a64:	bl	352ec <flatcc_json_parser_integer@@Base>
   23a68:	cmp	r0, r6
   23a6c:	beq	23ab0 <main@@Base+0xda28>
   23a70:	ldr	r2, [sp, #12]
   23a74:	mov	r4, r0
   23a78:	ldr	r0, [sp, #16]
   23a7c:	ldr	r1, [sp, #20]
   23a80:	cmp	r2, #0
   23a84:	beq	23ab8 <main@@Base+0xda30>
   23a88:	subs	r2, r0, #129	; 0x81
   23a8c:	sbcs	r1, r1, #0
   23a90:	bcc	23ae0 <main@@Base+0xda58>
   23a94:	mov	r0, r8
   23a98:	mov	r1, r4
   23a9c:	mov	r2, sl
   23aa0:	mov	r3, #8
   23aa4:	b	23ad4 <main@@Base+0xda4c>
   23aa8:	mov	r4, sl
   23aac:	b	23af0 <main@@Base+0xda68>
   23ab0:	mov	r4, r6
   23ab4:	b	23af0 <main@@Base+0xda68>
   23ab8:	subs	r2, r0, #128	; 0x80
   23abc:	sbcs	r1, r1, #0
   23ac0:	bcc	23ae8 <main@@Base+0xda60>
   23ac4:	mov	r0, r8
   23ac8:	mov	r1, r4
   23acc:	mov	r2, sl
   23ad0:	mov	r3, #7
   23ad4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   23ad8:	mov	r4, r0
   23adc:	b	23af0 <main@@Base+0xda68>
   23ae0:	rsb	r7, r0, #0
   23ae4:	b	23aec <main@@Base+0xda64>
   23ae8:	mov	r7, r0
   23aec:	strb	r7, [sp, #11]
   23af0:	cmp	r6, r4
   23af4:	bne	23b2c <main@@Base+0xdaa4>
   23af8:	movw	r3, #45536	; 0xb1e0
   23afc:	add	r0, sp, #11
   23b00:	mov	r1, r6
   23b04:	mov	r2, sl
   23b08:	movt	r3, #5
   23b0c:	str	r0, [sp]
   23b10:	mov	r0, r8
   23b14:	bl	22790 <main@@Base+0xc708>
   23b18:	mov	r4, r0
   23b1c:	cmp	r0, r6
   23b20:	cmpne	r4, sl
   23b24:	beq	23624 <main@@Base+0xd59c>
   23b28:	ldrb	r7, [sp, #11]
   23b2c:	uxtb	r0, r7
   23b30:	cmp	r0, #2
   23b34:	bne	23b44 <main@@Base+0xdabc>
   23b38:	ldrb	r0, [r8, #8]
   23b3c:	tst	r0, #2
   23b40:	beq	24130 <main@@Base+0xe0a8>
   23b44:	ldr	r0, [r8]
   23b48:	mov	r1, #1
   23b4c:	b	23e18 <main@@Base+0xdd90>
   23b50:	bne	23b60 <main@@Base+0xdad8>
   23b54:	ldrb	r0, [r6, #2]!
   23b58:	cmp	r0, #32
   23b5c:	bhi	23b78 <main@@Base+0xdaf0>
   23b60:	mov	r0, r8
   23b64:	mov	r2, sl
   23b68:	mov	r4, lr
   23b6c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   23b70:	mov	lr, r4
   23b74:	mov	r6, r0
   23b78:	cmp	r9, r6
   23b7c:	beq	23bf8 <main@@Base+0xdb70>
   23b80:	mov	r7, #0
   23b84:	cmp	r6, sl
   23b88:	str	r7, [sp, #20]
   23b8c:	str	r7, [sp, #16]
   23b90:	strb	r7, [sp, #11]
   23b94:	str	r7, [sp, #12]
   23b98:	beq	23ca0 <main@@Base+0xdc18>
   23b9c:	add	r0, sp, #16
   23ba0:	mov	r1, r6
   23ba4:	mov	r2, sl
   23ba8:	add	r3, sp, #12
   23bac:	str	r0, [sp]
   23bb0:	mov	r0, r8
   23bb4:	bl	352ec <flatcc_json_parser_integer@@Base>
   23bb8:	cmp	r0, r6
   23bbc:	beq	23cd8 <main@@Base+0xdc50>
   23bc0:	ldr	r2, [sp, #12]
   23bc4:	mov	r4, r0
   23bc8:	ldr	r0, [sp, #16]
   23bcc:	ldr	r1, [sp, #20]
   23bd0:	cmp	r2, #0
   23bd4:	beq	23d10 <main@@Base+0xdc88>
   23bd8:	subs	r2, r0, #129	; 0x81
   23bdc:	sbcs	r1, r1, #0
   23be0:	bcc	23d38 <main@@Base+0xdcb0>
   23be4:	mov	r0, r8
   23be8:	mov	r1, r4
   23bec:	mov	r2, sl
   23bf0:	mov	r3, #8
   23bf4:	b	23d2c <main@@Base+0xdca4>
   23bf8:	movw	r1, #12800	; 0x3200
   23bfc:	bic	r0, r7, #255	; 0xff
   23c00:	movt	r1, #30051	; 0x7563
   23c04:	teq	r0, r1
   23c08:	bne	23c4c <main@@Base+0xdbc4>
   23c0c:	cmp	lr, #4
   23c10:	mov	r7, r9
   23c14:	blt	23ec8 <main@@Base+0xde40>
   23c18:	mov	r1, r9
   23c1c:	ldr	r2, [r8, #12]
   23c20:	ldrb	r0, [r1, #3]!
   23c24:	cmp	r2, #0
   23c28:	beq	23ca8 <main@@Base+0xdc20>
   23c2c:	cmp	r0, #33	; 0x21
   23c30:	bcc	23c40 <main@@Base+0xdbb8>
   23c34:	cmp	r0, #58	; 0x3a
   23c38:	mov	r7, r9
   23c3c:	bne	23ec8 <main@@Base+0xde40>
   23c40:	mov	r0, #0
   23c44:	str	r0, [r8, #12]
   23c48:	b	23cb8 <main@@Base+0xdc30>
   23c4c:	movw	r0, #0
   23c50:	bfc	r7, #0, #16
   23c54:	movt	r0, #30051	; 0x7563
   23c58:	teq	r7, r0
   23c5c:	bne	24068 <main@@Base+0xdfe0>
   23c60:	cmp	lr, #3
   23c64:	mov	r7, r9
   23c68:	blt	23ffc <main@@Base+0xdf74>
   23c6c:	mov	r1, r9
   23c70:	ldr	r2, [r8, #12]
   23c74:	ldrb	r0, [r1, #2]!
   23c78:	cmp	r2, #0
   23c7c:	beq	23ce0 <main@@Base+0xdc58>
   23c80:	cmp	r0, #33	; 0x21
   23c84:	bcc	23c94 <main@@Base+0xdc0c>
   23c88:	cmp	r0, #58	; 0x3a
   23c8c:	mov	r7, r9
   23c90:	bne	23ffc <main@@Base+0xdf74>
   23c94:	mov	r0, #0
   23c98:	str	r0, [r8, #12]
   23c9c:	b	23cf0 <main@@Base+0xdc68>
   23ca0:	mov	r4, sl
   23ca4:	b	23dbc <main@@Base+0xdd34>
   23ca8:	cmp	r0, #34	; 0x22
   23cac:	mov	r7, r9
   23cb0:	bne	23ec8 <main@@Base+0xde40>
   23cb4:	add	r1, r9, #4
   23cb8:	sub	r0, sl, r1
   23cbc:	cmp	r0, #2
   23cc0:	blt	23d54 <main@@Base+0xdccc>
   23cc4:	ldrb	r0, [r1]
   23cc8:	cmp	r0, #32
   23ccc:	bls	23d40 <main@@Base+0xdcb8>
   23cd0:	mov	r7, r1
   23cd4:	b	23d64 <main@@Base+0xdcdc>
   23cd8:	mov	r4, r6
   23cdc:	b	23dbc <main@@Base+0xdd34>
   23ce0:	cmp	r0, #34	; 0x22
   23ce4:	mov	r7, r9
   23ce8:	bne	23ffc <main@@Base+0xdf74>
   23cec:	add	r1, r9, #3
   23cf0:	sub	r0, sl, r1
   23cf4:	cmp	r0, #2
   23cf8:	blt	23e48 <main@@Base+0xddc0>
   23cfc:	ldrb	r0, [r1]
   23d00:	cmp	r0, #32
   23d04:	bls	23e34 <main@@Base+0xddac>
   23d08:	mov	r7, r1
   23d0c:	b	23e58 <main@@Base+0xddd0>
   23d10:	subs	r2, r0, #128	; 0x80
   23d14:	sbcs	r1, r1, #0
   23d18:	bcc	23db4 <main@@Base+0xdd2c>
   23d1c:	mov	r0, r8
   23d20:	mov	r1, r4
   23d24:	mov	r2, sl
   23d28:	mov	r3, #7
   23d2c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   23d30:	mov	r4, r0
   23d34:	b	23dbc <main@@Base+0xdd34>
   23d38:	rsb	r7, r0, #0
   23d3c:	b	23db8 <main@@Base+0xdd30>
   23d40:	bne	23d54 <main@@Base+0xdccc>
   23d44:	mov	r7, r1
   23d48:	ldrb	r0, [r7, #1]!
   23d4c:	cmp	r0, #32
   23d50:	bhi	23d64 <main@@Base+0xdcdc>
   23d54:	mov	r0, r8
   23d58:	mov	r2, sl
   23d5c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   23d60:	mov	r7, r0
   23d64:	cmp	r7, sl
   23d68:	beq	23d9c <main@@Base+0xdd14>
   23d6c:	ldrb	r0, [r7]
   23d70:	cmp	r0, #58	; 0x3a
   23d74:	bne	23d9c <main@@Base+0xdd14>
   23d78:	add	r1, r7, #1
   23d7c:	sub	r0, sl, r1
   23d80:	cmp	r0, #2
   23d84:	blt	23eb8 <main@@Base+0xde30>
   23d88:	ldrb	r0, [r1]
   23d8c:	cmp	r0, #32
   23d90:	bls	23ea8 <main@@Base+0xde20>
   23d94:	mov	r7, r1
   23d98:	b	23ec8 <main@@Base+0xde40>
   23d9c:	mov	r0, r8
   23da0:	mov	r1, r7
   23da4:	mov	r2, sl
   23da8:	mov	r3, #4
   23dac:	bl	333fc <flatcc_json_parser_set_error@@Base>
   23db0:	b	23ec4 <main@@Base+0xde3c>
   23db4:	mov	r7, r0
   23db8:	strb	r7, [sp, #11]
   23dbc:	cmp	r6, r4
   23dc0:	bne	23df8 <main@@Base+0xdd70>
   23dc4:	movw	r3, #45552	; 0xb1f0
   23dc8:	add	r0, sp, #11
   23dcc:	mov	r1, r6
   23dd0:	mov	r2, sl
   23dd4:	movt	r3, #5
   23dd8:	str	r0, [sp]
   23ddc:	mov	r0, r8
   23de0:	bl	22790 <main@@Base+0xc708>
   23de4:	mov	r4, r0
   23de8:	cmp	r0, r6
   23dec:	cmpne	r4, sl
   23df0:	beq	23624 <main@@Base+0xd59c>
   23df4:	ldrb	r7, [sp, #11]
   23df8:	uxtb	r0, r7
   23dfc:	cmp	r0, #2
   23e00:	bne	23e10 <main@@Base+0xdd88>
   23e04:	ldrb	r0, [r8, #8]
   23e08:	tst	r0, #2
   23e0c:	beq	24130 <main@@Base+0xe0a8>
   23e10:	ldr	r0, [r8]
   23e14:	mov	r1, #0
   23e18:	mov	r2, #1
   23e1c:	mov	r3, #1
   23e20:	bl	30824 <flatcc_builder_table_add@@Base>
   23e24:	cmp	r0, #0
   23e28:	beq	23624 <main@@Base+0xd59c>
   23e2c:	strb	r7, [r0]
   23e30:	b	24130 <main@@Base+0xe0a8>
   23e34:	bne	23e48 <main@@Base+0xddc0>
   23e38:	mov	r7, r1
   23e3c:	ldrb	r0, [r7, #1]!
   23e40:	cmp	r0, #32
   23e44:	bhi	23e58 <main@@Base+0xddd0>
   23e48:	mov	r0, r8
   23e4c:	mov	r2, sl
   23e50:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   23e54:	mov	r7, r0
   23e58:	cmp	r7, sl
   23e5c:	beq	23e90 <main@@Base+0xde08>
   23e60:	ldrb	r0, [r7]
   23e64:	cmp	r0, #58	; 0x3a
   23e68:	bne	23e90 <main@@Base+0xde08>
   23e6c:	add	r1, r7, #1
   23e70:	sub	r0, sl, r1
   23e74:	cmp	r0, #2
   23e78:	blt	23fec <main@@Base+0xdf64>
   23e7c:	ldrb	r0, [r1]
   23e80:	cmp	r0, #32
   23e84:	bls	23fdc <main@@Base+0xdf54>
   23e88:	mov	r7, r1
   23e8c:	b	23ffc <main@@Base+0xdf74>
   23e90:	mov	r0, r8
   23e94:	mov	r1, r7
   23e98:	mov	r2, sl
   23e9c:	mov	r3, #4
   23ea0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   23ea4:	b	23ff8 <main@@Base+0xdf70>
   23ea8:	bne	23eb8 <main@@Base+0xde30>
   23eac:	ldrb	r0, [r7, #2]!
   23eb0:	cmp	r0, #32
   23eb4:	bhi	23ec8 <main@@Base+0xde40>
   23eb8:	mov	r0, r8
   23ebc:	mov	r2, sl
   23ec0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   23ec4:	mov	r7, r0
   23ec8:	cmp	r9, r7
   23ecc:	beq	24068 <main@@Base+0xdfe0>
   23ed0:	mov	r6, #0
   23ed4:	cmp	r7, sl
   23ed8:	str	r6, [sp, #20]
   23edc:	str	r6, [sp, #16]
   23ee0:	strb	r6, [sp, #11]
   23ee4:	str	r6, [sp, #12]
   23ee8:	beq	23f34 <main@@Base+0xdeac>
   23eec:	add	r0, sp, #16
   23ef0:	mov	r1, r7
   23ef4:	mov	r2, sl
   23ef8:	add	r3, sp, #12
   23efc:	str	r0, [sp]
   23f00:	mov	r0, r8
   23f04:	bl	352ec <flatcc_json_parser_integer@@Base>
   23f08:	cmp	r0, r7
   23f0c:	beq	23f3c <main@@Base+0xdeb4>
   23f10:	mov	r4, r0
   23f14:	ldr	r0, [sp, #12]
   23f18:	cmp	r0, #0
   23f1c:	beq	23f44 <main@@Base+0xdebc>
   23f20:	mov	r0, r8
   23f24:	mov	r1, r4
   23f28:	mov	r2, sl
   23f2c:	mov	r3, #8
   23f30:	b	23f68 <main@@Base+0xdee0>
   23f34:	mov	r4, sl
   23f38:	b	23f70 <main@@Base+0xdee8>
   23f3c:	mov	r4, r7
   23f40:	b	23f70 <main@@Base+0xdee8>
   23f44:	ldr	r0, [sp, #16]
   23f48:	ldr	r1, [sp, #20]
   23f4c:	subs	r2, r0, #256	; 0x100
   23f50:	sbcs	r1, r1, #0
   23f54:	bcc	23fd0 <main@@Base+0xdf48>
   23f58:	mov	r0, r8
   23f5c:	mov	r1, r4
   23f60:	mov	r2, sl
   23f64:	mov	r3, #7
   23f68:	bl	333fc <flatcc_json_parser_set_error@@Base>
   23f6c:	mov	r4, r0
   23f70:	cmp	r7, r4
   23f74:	bne	23fac <main@@Base+0xdf24>
   23f78:	movw	r3, #45568	; 0xb200
   23f7c:	add	r0, sp, #11
   23f80:	mov	r1, r7
   23f84:	mov	r2, sl
   23f88:	movt	r3, #5
   23f8c:	str	r0, [sp]
   23f90:	mov	r0, r8
   23f94:	bl	22990 <main@@Base+0xc908>
   23f98:	mov	r4, r0
   23f9c:	cmp	r0, r7
   23fa0:	cmpne	r4, sl
   23fa4:	beq	23624 <main@@Base+0xd59c>
   23fa8:	ldrb	r6, [sp, #11]
   23fac:	uxtb	r0, r6
   23fb0:	cmp	r0, #2
   23fb4:	bne	23fc4 <main@@Base+0xdf3c>
   23fb8:	ldrb	r0, [r8, #8]
   23fbc:	tst	r0, #2
   23fc0:	beq	24130 <main@@Base+0xe0a8>
   23fc4:	ldr	r0, [r8]
   23fc8:	mov	r1, #3
   23fcc:	b	24118 <main@@Base+0xe090>
   23fd0:	mov	r6, r0
   23fd4:	strb	r0, [sp, #11]
   23fd8:	b	23f70 <main@@Base+0xdee8>
   23fdc:	bne	23fec <main@@Base+0xdf64>
   23fe0:	ldrb	r0, [r7, #2]!
   23fe4:	cmp	r0, #32
   23fe8:	bhi	23ffc <main@@Base+0xdf74>
   23fec:	mov	r0, r8
   23ff0:	mov	r2, sl
   23ff4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   23ff8:	mov	r7, r0
   23ffc:	cmp	r9, r7
   24000:	beq	24068 <main@@Base+0xdfe0>
   24004:	mov	r6, #0
   24008:	cmp	r7, sl
   2400c:	str	r6, [sp, #20]
   24010:	str	r6, [sp, #16]
   24014:	strb	r6, [sp, #11]
   24018:	str	r6, [sp, #12]
   2401c:	beq	24080 <main@@Base+0xdff8>
   24020:	add	r0, sp, #16
   24024:	mov	r1, r7
   24028:	mov	r2, sl
   2402c:	add	r3, sp, #12
   24030:	str	r0, [sp]
   24034:	mov	r0, r8
   24038:	bl	352ec <flatcc_json_parser_integer@@Base>
   2403c:	cmp	r0, r7
   24040:	beq	24088 <main@@Base+0xe000>
   24044:	mov	r4, r0
   24048:	ldr	r0, [sp, #12]
   2404c:	cmp	r0, #0
   24050:	beq	24090 <main@@Base+0xe008>
   24054:	mov	r0, r8
   24058:	mov	r1, r4
   2405c:	mov	r2, sl
   24060:	mov	r3, #8
   24064:	b	240b4 <main@@Base+0xe02c>
   24068:	mov	r0, r8
   2406c:	mov	r1, r9
   24070:	mov	r2, sl
   24074:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   24078:	mov	r4, r0
   2407c:	b	24130 <main@@Base+0xe0a8>
   24080:	mov	r4, sl
   24084:	b	240bc <main@@Base+0xe034>
   24088:	mov	r4, r7
   2408c:	b	240bc <main@@Base+0xe034>
   24090:	ldr	r0, [sp, #16]
   24094:	ldr	r1, [sp, #20]
   24098:	subs	r2, r0, #256	; 0x100
   2409c:	sbcs	r1, r1, #0
   240a0:	bcc	241e8 <main@@Base+0xe160>
   240a4:	mov	r0, r8
   240a8:	mov	r1, r4
   240ac:	mov	r2, sl
   240b0:	mov	r3, #7
   240b4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   240b8:	mov	r4, r0
   240bc:	cmp	r7, r4
   240c0:	bne	240f8 <main@@Base+0xe070>
   240c4:	movw	r3, #45580	; 0xb20c
   240c8:	add	r0, sp, #11
   240cc:	mov	r1, r7
   240d0:	mov	r2, sl
   240d4:	movt	r3, #5
   240d8:	str	r0, [sp]
   240dc:	mov	r0, r8
   240e0:	bl	22990 <main@@Base+0xc908>
   240e4:	mov	r4, r0
   240e8:	cmp	r0, r7
   240ec:	cmpne	r4, sl
   240f0:	beq	23624 <main@@Base+0xd59c>
   240f4:	ldrb	r6, [sp, #11]
   240f8:	uxtb	r0, r6
   240fc:	cmp	r0, #2
   24100:	bne	24110 <main@@Base+0xe088>
   24104:	ldrb	r0, [r8, #8]
   24108:	tst	r0, #2
   2410c:	beq	24130 <main@@Base+0xe0a8>
   24110:	ldr	r0, [r8]
   24114:	mov	r1, #2
   24118:	mov	r2, #1
   2411c:	mov	r3, #1
   24120:	bl	30824 <flatcc_builder_table_add@@Base>
   24124:	cmp	r0, #0
   24128:	beq	23624 <main@@Base+0xd59c>
   2412c:	strb	r6, [r0]
   24130:	sub	r0, sl, r4
   24134:	cmp	r0, #2
   24138:	blt	24164 <main@@Base+0xe0dc>
   2413c:	ldrb	r0, [r4]
   24140:	cmp	r0, #32
   24144:	bls	24150 <main@@Base+0xe0c8>
   24148:	mov	r2, r4
   2414c:	b	24178 <main@@Base+0xe0f0>
   24150:	bne	24164 <main@@Base+0xe0dc>
   24154:	mov	r2, r4
   24158:	ldrb	r0, [r2, #1]!
   2415c:	cmp	r0, #32
   24160:	bhi	24178 <main@@Base+0xe0f0>
   24164:	mov	r0, r8
   24168:	mov	r1, r4
   2416c:	mov	r2, sl
   24170:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   24174:	mov	r2, r0
   24178:	cmp	r2, sl
   2417c:	beq	24370 <main@@Base+0xe2e8>
   24180:	ldrb	r0, [r2]
   24184:	cmp	r0, #44	; 0x2c
   24188:	bne	243c4 <main@@Base+0xe33c>
   2418c:	add	r1, r2, #1
   24190:	sub	r0, sl, r1
   24194:	cmp	r0, #2
   24198:	blt	241c0 <main@@Base+0xe138>
   2419c:	ldrb	r0, [r1]
   241a0:	cmp	r0, #32
   241a4:	bls	241b0 <main@@Base+0xe128>
   241a8:	mov	r2, r1
   241ac:	b	241d0 <main@@Base+0xe148>
   241b0:	bne	241c0 <main@@Base+0xe138>
   241b4:	ldrb	r0, [r2, #2]!
   241b8:	cmp	r0, #32
   241bc:	bhi	241d0 <main@@Base+0xe148>
   241c0:	mov	r0, r8
   241c4:	mov	r2, sl
   241c8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   241cc:	mov	r2, r0
   241d0:	cmp	r2, sl
   241d4:	beq	24378 <main@@Base+0xe2f0>
   241d8:	ldrb	r0, [r2]
   241dc:	cmp	r0, #125	; 0x7d
   241e0:	bne	236ec <main@@Base+0xd664>
   241e4:	b	243cc <main@@Base+0xe344>
   241e8:	mov	r6, r0
   241ec:	strb	r0, [sp, #11]
   241f0:	b	240bc <main@@Base+0xe034>
   241f4:	bne	24204 <main@@Base+0xe17c>
   241f8:	ldrb	r0, [r4, #2]!
   241fc:	cmp	r0, #32
   24200:	bhi	24214 <main@@Base+0xe18c>
   24204:	mov	r0, r8
   24208:	mov	r2, sl
   2420c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   24210:	mov	r4, r0
   24214:	cmp	r4, sl
   24218:	mov	r3, sl
   2421c:	beq	24258 <main@@Base+0xe1d0>
   24220:	ldrb	r0, [r4]
   24224:	cmp	r0, #125	; 0x7d
   24228:	bne	24254 <main@@Base+0xe1cc>
   2422c:	add	r1, r4, #1
   24230:	sub	r0, sl, r1
   24234:	cmp	r0, #2
   24238:	blt	24418 <main@@Base+0xe390>
   2423c:	ldrb	r0, [r1]
   24240:	cmp	r0, #32
   24244:	bhi	243e8 <main@@Base+0xe360>
   24248:	bne	24418 <main@@Base+0xe390>
   2424c:	ldrb	r0, [r4, #2]!
   24250:	b	24410 <main@@Base+0xe388>
   24254:	mov	r3, r4
   24258:	mov	r4, #0
   2425c:	mov	r7, #1
   24260:	cmp	r3, sl
   24264:	mov	r1, sl
   24268:	beq	242a8 <main@@Base+0xe220>
   2426c:	ldrb	r0, [r3]
   24270:	cmp	r0, #46	; 0x2e
   24274:	beq	24290 <main@@Base+0xe208>
   24278:	cmp	r0, #34	; 0x22
   2427c:	movne	r1, r3
   24280:	strne	r7, [r8, #12]
   24284:	streq	r4, [r8, #12]
   24288:	addeq	r1, r3, #1
   2428c:	b	242a8 <main@@Base+0xe220>
   24290:	mov	r1, r3
   24294:	mov	r0, r8
   24298:	mov	r2, sl
   2429c:	mov	r3, #5
   242a0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   242a4:	mov	r1, r0
   242a8:	mov	r0, r8
   242ac:	mov	r2, sl
   242b0:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   242b4:	mov	r2, r0
   242b8:	sub	r0, sl, r0
   242bc:	cmp	r0, #2
   242c0:	blt	242ec <main@@Base+0xe264>
   242c4:	ldrb	r0, [r2]
   242c8:	cmp	r0, #32
   242cc:	bls	242d8 <main@@Base+0xe250>
   242d0:	mov	r3, r2
   242d4:	b	24300 <main@@Base+0xe278>
   242d8:	bne	242ec <main@@Base+0xe264>
   242dc:	mov	r3, r2
   242e0:	ldrb	r0, [r3, #1]!
   242e4:	cmp	r0, #32
   242e8:	bhi	24300 <main@@Base+0xe278>
   242ec:	mov	r1, r2
   242f0:	mov	r0, r8
   242f4:	mov	r2, sl
   242f8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   242fc:	mov	r3, r0
   24300:	cmp	r3, sl
   24304:	beq	24370 <main@@Base+0xe2e8>
   24308:	ldrb	r0, [r3]
   2430c:	cmp	r0, #44	; 0x2c
   24310:	bne	24384 <main@@Base+0xe2fc>
   24314:	add	r1, r3, #1
   24318:	sub	r0, sl, r1
   2431c:	cmp	r0, #2
   24320:	blt	24348 <main@@Base+0xe2c0>
   24324:	ldrb	r0, [r1]
   24328:	cmp	r0, #32
   2432c:	bls	24338 <main@@Base+0xe2b0>
   24330:	mov	r3, r1
   24334:	b	24358 <main@@Base+0xe2d0>
   24338:	bne	24348 <main@@Base+0xe2c0>
   2433c:	ldrb	r0, [r3, #2]!
   24340:	cmp	r0, #32
   24344:	bhi	24358 <main@@Base+0xe2d0>
   24348:	mov	r0, r8
   2434c:	mov	r2, sl
   24350:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   24354:	mov	r3, r0
   24358:	cmp	r3, sl
   2435c:	beq	24378 <main@@Base+0xe2f0>
   24360:	ldrb	r0, [r3]
   24364:	cmp	r0, #125	; 0x7d
   24368:	bne	24260 <main@@Base+0xe1d8>
   2436c:	b	2438c <main@@Base+0xe304>
   24370:	mov	r4, sl
   24374:	b	23618 <main@@Base+0xd590>
   24378:	mov	r0, r8
   2437c:	mov	r1, sl
   24380:	b	243f8 <main@@Base+0xe370>
   24384:	cmp	r0, #125	; 0x7d
   24388:	bne	243b8 <main@@Base+0xe330>
   2438c:	add	r1, r3, #1
   24390:	sub	r0, sl, r1
   24394:	cmp	r0, #2
   24398:	blt	24418 <main@@Base+0xe390>
   2439c:	ldrb	r0, [r1]
   243a0:	cmp	r0, #32
   243a4:	bhi	243e8 <main@@Base+0xe360>
   243a8:	bne	24418 <main@@Base+0xe390>
   243ac:	ldrb	r0, [r3, #2]!
   243b0:	mov	r4, r3
   243b4:	b	24410 <main@@Base+0xe388>
   243b8:	mov	r0, r8
   243bc:	mov	r1, r3
   243c0:	b	243f8 <main@@Base+0xe370>
   243c4:	cmp	r0, #125	; 0x7d
   243c8:	bne	243f0 <main@@Base+0xe368>
   243cc:	add	r1, r2, #1
   243d0:	sub	r0, sl, r1
   243d4:	cmp	r0, #2
   243d8:	blt	24418 <main@@Base+0xe390>
   243dc:	ldrb	r0, [r1]
   243e0:	cmp	r0, #32
   243e4:	bls	24404 <main@@Base+0xe37c>
   243e8:	mov	r4, r1
   243ec:	b	23618 <main@@Base+0xd590>
   243f0:	mov	r0, r8
   243f4:	mov	r1, r2
   243f8:	mov	r2, sl
   243fc:	mov	r3, #10
   24400:	b	23610 <main@@Base+0xd588>
   24404:	bne	24418 <main@@Base+0xe390>
   24408:	ldrb	r0, [r2, #2]!
   2440c:	mov	r4, r2
   24410:	cmp	r0, #32
   24414:	bhi	23618 <main@@Base+0xd590>
   24418:	mov	r0, r8
   2441c:	mov	r2, sl
   24420:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   24424:	b	23614 <main@@Base+0xd58c>
   24428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2442c:	add	fp, sp, #28
   24430:	sub	sp, sp, #20
   24434:	mov	sl, r1
   24438:	sub	r1, r2, r1
   2443c:	cmp	r1, #8
   24440:	movcs	r1, #8
   24444:	sub	r5, r1, #1
   24448:	cmp	r5, #7
   2444c:	bhi	24650 <main@@Base+0xe5c8>
   24450:	str	r2, [sp, #16]
   24454:	str	r0, [sp, #12]
   24458:	add	r0, pc, #36	; 0x24
   2445c:	mov	lr, r3
   24460:	mov	r8, #0
   24464:	mov	ip, #0
   24468:	mov	r2, #0
   2446c:	mov	r1, #0
   24470:	mov	r3, #0
   24474:	mov	r7, #0
   24478:	mov	r6, #0
   2447c:	mov	r4, #0
   24480:	ldr	pc, [r0, r5, lsl #2]
   24484:	andeq	r4, r2, r8, ror #9
   24488:	andeq	r4, r2, r0, ror #9
   2448c:	ldrdeq	r4, [r2], -r8
   24490:	ldrdeq	r4, [r2], -r0
   24494:	andeq	r4, r2, r4, asr #9
   24498:			; <UNDEFINED> instruction: 0x000244b8
   2449c:	andeq	r4, r2, r8, lsr #9
   244a0:	andeq	r4, r2, r4, lsr #9
   244a4:	ldrb	ip, [sl, #7]
   244a8:	ldrb	r0, [sl, #6]
   244ac:	mov	r2, r8
   244b0:	orr	r0, ip, r0, lsl #8
   244b4:	mov	r8, r0
   244b8:	ldrb	r0, [sl, #5]
   244bc:	mov	r1, r2
   244c0:	orr	r8, r8, r0, lsl #16
   244c4:	ldrb	r0, [sl, #4]
   244c8:	mov	r3, r1
   244cc:	orr	r8, r8, r0, lsl #24
   244d0:	ldrb	r0, [sl, #3]
   244d4:	orr	r7, r0, r3
   244d8:	ldrb	r0, [sl, #2]
   244dc:	orr	r6, r7, r0, lsl #8
   244e0:	ldrb	r0, [sl, #1]
   244e4:	orr	r4, r6, r0, lsl #16
   244e8:	ldrb	r0, [sl]
   244ec:	movw	r1, #28275	; 0x6e73
   244f0:	ldr	r7, [fp, #12]
   244f4:	ldr	r5, [fp, #8]
   244f8:	movt	r1, #19823	; 0x4d6f
   244fc:	orr	r9, r4, r0, lsl #24
   24500:	movw	r0, #29184	; 0x7200
   24504:	movt	r0, #29797	; 0x7465
   24508:	subs	r2, r8, r0
   2450c:	sbcs	r2, r9, r1
   24510:	bcs	24558 <main@@Base+0xe4d0>
   24514:	movw	r1, #29696	; 0x7400
   24518:	bic	r0, r9, #255	; 0xff
   2451c:	movt	r1, #16748	; 0x416c
   24520:	teq	r0, r1
   24524:	bne	24650 <main@@Base+0xe5c8>
   24528:	ldr	r0, [sp, #12]
   2452c:	ldr	r2, [sp, #16]
   24530:	mov	r1, sl
   24534:	mov	r3, #3
   24538:	mov	r4, lr
   2453c:	str	r7, [sp]
   24540:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   24544:	cmp	r0, sl
   24548:	beq	24650 <main@@Base+0xe5c8>
   2454c:	mov	r1, #0
   24550:	mov	r2, #4
   24554:	b	24598 <main@@Base+0xe510>
   24558:	add	r2, r0, #50	; 0x32
   2455c:	eor	r1, r9, r1
   24560:	eor	r2, r8, r2
   24564:	orrs	r2, r2, r1
   24568:	bne	245a8 <main@@Base+0xe520>
   2456c:	ldr	r0, [sp, #12]
   24570:	ldr	r2, [sp, #16]
   24574:	mov	r1, sl
   24578:	mov	r3, #8
   2457c:	mov	r4, lr
   24580:	str	r7, [sp]
   24584:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   24588:	cmp	r0, sl
   2458c:	beq	24650 <main@@Base+0xe5c8>
   24590:	mov	r1, #0
   24594:	mov	r2, #3
   24598:	str	r2, [r5]
   2459c:	str	r1, [r5, #4]
   245a0:	str	r1, [r4]
   245a4:	b	2464c <main@@Base+0xe5c4>
   245a8:	ldr	r5, [sp, #16]
   245ac:	ldr	r6, [sp, #12]
   245b0:	bic	r2, r8, #255	; 0xff
   245b4:	eor	r0, r2, r0
   245b8:	orrs	r0, r0, r1
   245bc:	bne	24600 <main@@Base+0xe578>
   245c0:	mov	r0, r6
   245c4:	mov	r1, sl
   245c8:	mov	r2, r5
   245cc:	mov	r3, #7
   245d0:	str	r7, [sp]
   245d4:	mov	r4, lr
   245d8:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   245dc:	mov	lr, r4
   245e0:	cmp	r0, sl
   245e4:	beq	24600 <main@@Base+0xe578>
   245e8:	ldr	r3, [fp, #8]
   245ec:	mov	r1, #0
   245f0:	mov	r2, #1
   245f4:	str	r2, [r3]
   245f8:	str	r1, [r3, #4]
   245fc:	b	24648 <main@@Base+0xe5c0>
   24600:	movw	r0, #20037	; 0x4e45
   24604:	movt	r0, #20047	; 0x4e4f
   24608:	teq	r9, r0
   2460c:	bne	2465c <main@@Base+0xe5d4>
   24610:	mov	r0, r6
   24614:	mov	r1, sl
   24618:	mov	r2, r5
   2461c:	mov	r3, #4
   24620:	str	r7, [sp]
   24624:	mov	r4, lr
   24628:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   2462c:	mov	lr, r4
   24630:	cmp	r0, sl
   24634:	beq	2465c <main@@Base+0xe5d4>
   24638:	ldr	r2, [fp, #8]
   2463c:	mov	r1, #0
   24640:	str	r1, [r2]
   24644:	str	r1, [r2, #4]
   24648:	str	r1, [lr]
   2464c:	mov	sl, r0
   24650:	mov	r0, sl
   24654:	sub	sp, fp, #28
   24658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2465c:	movw	r0, #28016	; 0x6d70
   24660:	movw	r1, #29556	; 0x7374
   24664:	movt	r0, #21353	; 0x5369
   24668:	movt	r1, #21605	; 0x5465
   2466c:	eor	r0, r8, r0
   24670:	eor	r1, r9, r1
   24674:	orrs	r0, r0, r1
   24678:	bne	24650 <main@@Base+0xe5c8>
   2467c:	str	lr, [sp, #8]
   24680:	add	lr, sl, #8
   24684:	sub	r0, r5, lr
   24688:	cmp	r0, #8
   2468c:	movcs	r0, #8
   24690:	sub	r5, r0, #1
   24694:	cmp	r5, #7
   24698:	bhi	24650 <main@@Base+0xe5c8>
   2469c:	add	r1, pc, #32
   246a0:	mov	r9, #0
   246a4:	mov	ip, #0
   246a8:	mov	r8, #0
   246ac:	mov	r2, #0
   246b0:	mov	r3, #0
   246b4:	mov	r0, #0
   246b8:	mov	r4, #0
   246bc:	mov	r6, #0
   246c0:	ldr	pc, [r1, r5, lsl #2]
   246c4:	andeq	r4, r2, r8, lsr #14
   246c8:	andeq	r4, r2, r0, lsr #14
   246cc:	andeq	r4, r2, r8, lsl r7
   246d0:	andeq	r4, r2, r0, lsl r7
   246d4:	andeq	r4, r2, r4, lsl #14
   246d8:	strdeq	r4, [r2], -r8
   246dc:	andeq	r4, r2, r8, ror #13
   246e0:	andeq	r4, r2, r4, ror #13
   246e4:	ldrb	ip, [sl, #15]
   246e8:	ldrb	r0, [sl, #14]
   246ec:	mov	r8, r9
   246f0:	orr	r0, ip, r0, lsl #8
   246f4:	mov	r9, r0
   246f8:	ldrb	r0, [sl, #13]
   246fc:	mov	r2, r8
   24700:	orr	r9, r9, r0, lsl #16
   24704:	ldrb	r0, [sl, #12]
   24708:	mov	r3, r2
   2470c:	orr	r9, r9, r0, lsl #24
   24710:	ldrb	r0, [sl, #11]
   24714:	orr	r0, r0, r3
   24718:	ldrb	r1, [sl, #10]
   2471c:	orr	r4, r0, r1, lsl #8
   24720:	ldrb	r0, [sl, #9]
   24724:	orr	r6, r4, r0, lsl #16
   24728:	ldrb	r1, [lr]
   2472c:	movw	r0, #25943	; 0x6557
   24730:	movw	r2, #21601	; 0x5461
   24734:	movt	r0, #25196	; 0x626c
   24738:	movt	r2, #27749	; 0x6c65
   2473c:	eor	r0, r9, r0
   24740:	orr	r1, r6, r1, lsl #24
   24744:	eor	r1, r1, r2
   24748:	orrs	r0, r0, r1
   2474c:	bne	24650 <main@@Base+0xe5c8>
   24750:	ldr	r0, [sp, #16]
   24754:	add	r8, sl, #16
   24758:	sub	r0, r0, r8
   2475c:	cmp	r0, #8
   24760:	movcs	r0, #8
   24764:	sub	r3, r0, #1
   24768:	cmp	r3, #7
   2476c:	bhi	24650 <main@@Base+0xe5c8>
   24770:	add	r5, pc, #28
   24774:	mov	r0, #0
   24778:	mov	ip, #0
   2477c:	mov	lr, #0
   24780:	mov	r2, #0
   24784:	mov	r1, #0
   24788:	mov	r6, #0
   2478c:	mov	r4, #0
   24790:	ldr	pc, [r5, r3, lsl #2]
   24794:	strdeq	r4, [r2], -r0
   24798:	andeq	r4, r2, r8, ror #15
   2479c:	andeq	r4, r2, r0, ror #15
   247a0:	ldrdeq	r4, [r2], -r8
   247a4:	andeq	r4, r2, ip, asr #15
   247a8:			; <UNDEFINED> instruction: 0x000247bc
   247ac:			; <UNDEFINED> instruction: 0x000247b4
   247b0:			; <UNDEFINED> instruction: 0x000247b4
   247b4:	ldrb	r1, [sl, #22]
   247b8:	lsl	ip, r1, #8
   247bc:	ldrb	r1, [sl, #21]
   247c0:	mov	lr, r0
   247c4:	orr	r1, ip, r1, lsl #16
   247c8:	mov	r0, r1
   247cc:	ldrb	r1, [sl, #20]
   247d0:	mov	r2, lr
   247d4:	orr	r0, r0, r1, lsl #24
   247d8:	ldrb	r1, [sl, #19]
   247dc:	orr	r1, r1, r2
   247e0:	ldrb	r2, [sl, #18]
   247e4:	orr	r6, r1, r2, lsl #8
   247e8:	ldrb	r1, [sl, #17]
   247ec:	orr	r4, r6, r1, lsl #16
   247f0:	movw	r1, #27904	; 0x6d00
   247f4:	movw	r2, #26693	; 0x6845
   247f8:	movt	r1, #28277	; 0x6e75
   247fc:	movt	r2, #26996	; 0x6974
   24800:	eor	r0, r0, r1
   24804:	ldrb	r1, [r8]
   24808:	orr	r1, r4, r1, lsl #24
   2480c:	eor	r1, r1, r2
   24810:	orrs	r0, r0, r1
   24814:	bne	24650 <main@@Base+0xe5c8>
   24818:	ldr	r0, [sp, #12]
   2481c:	ldr	r2, [sp, #16]
   24820:	mov	r1, r8
   24824:	mov	r3, #7
   24828:	str	r7, [sp]
   2482c:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   24830:	ldr	r3, [fp, #8]
   24834:	cmp	r0, r8
   24838:	beq	24650 <main@@Base+0xe5c8>
   2483c:	mov	r2, #2
   24840:	mov	r1, #0
   24844:	str	r2, [r3]
   24848:	str	r1, [r3, #4]
   2484c:	ldr	r2, [sp, #8]
   24850:	str	r1, [r2]
   24854:	b	2464c <main@@Base+0xe5c4>
   24858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2485c:	add	fp, sp, #28
   24860:	sub	sp, sp, #44	; 0x2c
   24864:	mov	r7, r2
   24868:	ldr	r2, [fp, #8]
   2486c:	mov	r5, r0
   24870:	mov	r0, #0
   24874:	mov	r8, r3
   24878:	cmp	r1, r7
   2487c:	strb	r0, [r2]
   24880:	beq	248c4 <main@@Base+0xe83c>
   24884:	ldrb	r0, [r1]
   24888:	cmp	r0, #46	; 0x2e
   2488c:	beq	248a4 <main@@Base+0xe81c>
   24890:	cmp	r0, #34	; 0x22
   24894:	bne	248bc <main@@Base+0xe834>
   24898:	mov	r0, #0
   2489c:	add	r1, r1, #1
   248a0:	b	248c0 <main@@Base+0xe838>
   248a4:	mov	r0, r5
   248a8:	mov	r2, r7
   248ac:	mov	r3, #5
   248b0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   248b4:	mov	r1, r0
   248b8:	b	248c4 <main@@Base+0xe83c>
   248bc:	mov	r0, #1
   248c0:	str	r0, [r5, #12]
   248c4:	ldr	r0, [r5, #12]
   248c8:	cmp	r0, #0
   248cc:	beq	248d8 <main@@Base+0xe850>
   248d0:	mov	r6, r1
   248d4:	b	24914 <main@@Base+0xe88c>
   248d8:	sub	r0, r7, r1
   248dc:	cmp	r0, #2
   248e0:	blt	24904 <main@@Base+0xe87c>
   248e4:	ldrb	r0, [r1]
   248e8:	cmp	r0, #32
   248ec:	bhi	248d0 <main@@Base+0xe848>
   248f0:	bne	24904 <main@@Base+0xe87c>
   248f4:	mov	r6, r1
   248f8:	ldrb	r0, [r6, #1]!
   248fc:	cmp	r0, #32
   24900:	bhi	24914 <main@@Base+0xe88c>
   24904:	mov	r0, r5
   24908:	mov	r2, r7
   2490c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   24910:	mov	r6, r0
   24914:	cmp	r6, r7
   24918:	beq	249fc <main@@Base+0xe974>
   2491c:	add	r0, r8, #4
   24920:	mov	r1, #0
   24924:	add	sl, sp, #32
   24928:	add	r9, sp, #28
   2492c:	str	r8, [sp, #16]
   24930:	str	r1, [sp, #20]
   24934:	str	r0, [sp, #12]
   24938:	ldr	r4, [r8]
   2493c:	mov	r8, r0
   24940:	add	r0, sp, #24
   24944:	mov	r1, r6
   24948:	mov	r2, r7
   2494c:	mov	r3, r9
   24950:	str	sl, [sp]
   24954:	str	r0, [sp, #4]
   24958:	mov	r0, r5
   2495c:	blx	r4
   24960:	cmp	r0, r7
   24964:	beq	249fc <main@@Base+0xe974>
   24968:	mov	r4, r0
   2496c:	cmp	r0, r6
   24970:	bne	24984 <main@@Base+0xe8fc>
   24974:	ldr	r4, [r8], #4
   24978:	cmp	r4, #0
   2497c:	bne	24940 <main@@Base+0xe8b8>
   24980:	b	24a04 <main@@Base+0xe97c>
   24984:	ldr	r0, [sp, #28]
   24988:	cmp	r0, #0
   2498c:	beq	249a8 <main@@Base+0xe920>
   24990:	mov	r0, r5
   24994:	mov	r1, r4
   24998:	mov	r2, r7
   2499c:	mov	r3, #8
   249a0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   249a4:	b	249c0 <main@@Base+0xe938>
   249a8:	ldr	r0, [sp, #32]
   249ac:	ldr	r1, [sp, #36]	; 0x24
   249b0:	orrs	r0, r0, r1
   249b4:	movwne	r0, #1
   249b8:	str	r0, [sp, #20]
   249bc:	mov	r0, r4
   249c0:	ldr	r8, [sp, #16]
   249c4:	cmp	r0, r7
   249c8:	beq	249fc <main@@Base+0xe974>
   249cc:	ldr	r0, [fp, #8]
   249d0:	ldr	r2, [sp, #20]
   249d4:	mov	r6, r4
   249d8:	mov	r1, r0
   249dc:	ldrb	r0, [r0]
   249e0:	add	r0, r0, r2
   249e4:	strb	r0, [r1]
   249e8:	ldr	r0, [sp, #24]
   249ec:	cmp	r0, #0
   249f0:	ldr	r0, [sp, #12]
   249f4:	bne	24938 <main@@Base+0xe8b0>
   249f8:	b	24a1c <main@@Base+0xe994>
   249fc:	mov	r4, r7
   24a00:	b	24a1c <main@@Base+0xe994>
   24a04:	mov	r0, r5
   24a08:	mov	r1, r6
   24a0c:	mov	r2, r7
   24a10:	mov	r3, #23
   24a14:	bl	333fc <flatcc_json_parser_set_error@@Base>
   24a18:	mov	r4, r0
   24a1c:	mov	r0, r4
   24a20:	sub	sp, fp, #28
   24a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24a2c:	add	fp, sp, #28
   24a30:	sub	sp, sp, #36	; 0x24
   24a34:	mov	r6, r2
   24a38:	ldr	r2, [fp, #8]
   24a3c:	mov	r5, r0
   24a40:	mov	r0, #0
   24a44:	mov	r8, r3
   24a48:	cmp	r1, r6
   24a4c:	str	r0, [r2]
   24a50:	beq	24a94 <main@@Base+0xea0c>
   24a54:	ldrb	r0, [r1]
   24a58:	cmp	r0, #46	; 0x2e
   24a5c:	beq	24a74 <main@@Base+0xe9ec>
   24a60:	cmp	r0, #34	; 0x22
   24a64:	bne	24a8c <main@@Base+0xea04>
   24a68:	mov	r0, #0
   24a6c:	add	r1, r1, #1
   24a70:	b	24a90 <main@@Base+0xea08>
   24a74:	mov	r0, r5
   24a78:	mov	r2, r6
   24a7c:	mov	r3, #5
   24a80:	bl	333fc <flatcc_json_parser_set_error@@Base>
   24a84:	mov	r1, r0
   24a88:	b	24a94 <main@@Base+0xea0c>
   24a8c:	mov	r0, #1
   24a90:	str	r0, [r5, #12]
   24a94:	ldr	r0, [r5, #12]
   24a98:	cmp	r0, #0
   24a9c:	beq	24aa8 <main@@Base+0xea20>
   24aa0:	mov	r7, r1
   24aa4:	b	24ae4 <main@@Base+0xea5c>
   24aa8:	sub	r0, r6, r1
   24aac:	cmp	r0, #2
   24ab0:	blt	24ad4 <main@@Base+0xea4c>
   24ab4:	ldrb	r0, [r1]
   24ab8:	cmp	r0, #32
   24abc:	bhi	24aa0 <main@@Base+0xea18>
   24ac0:	bne	24ad4 <main@@Base+0xea4c>
   24ac4:	mov	r7, r1
   24ac8:	ldrb	r0, [r7, #1]!
   24acc:	cmp	r0, #32
   24ad0:	bhi	24ae4 <main@@Base+0xea5c>
   24ad4:	mov	r0, r5
   24ad8:	mov	r2, r6
   24adc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   24ae0:	mov	r7, r0
   24ae4:	cmp	r7, r6
   24ae8:	beq	24b98 <main@@Base+0xeb10>
   24aec:	add	r0, r8, #4
   24af0:	add	sl, sp, #24
   24af4:	add	r9, sp, #20
   24af8:	str	r8, [sp, #12]
   24afc:	str	r0, [sp, #8]
   24b00:	ldr	r4, [r8]
   24b04:	mov	r8, r0
   24b08:	add	r0, sp, #16
   24b0c:	mov	r1, r7
   24b10:	mov	r2, r6
   24b14:	mov	r3, r9
   24b18:	str	sl, [sp]
   24b1c:	str	r0, [sp, #4]
   24b20:	mov	r0, r5
   24b24:	blx	r4
   24b28:	cmp	r0, r6
   24b2c:	beq	24b98 <main@@Base+0xeb10>
   24b30:	mov	r4, r0
   24b34:	cmp	r0, r7
   24b38:	bne	24b4c <main@@Base+0xeac4>
   24b3c:	ldr	r4, [r8], #4
   24b40:	cmp	r4, #0
   24b44:	bne	24b08 <main@@Base+0xea80>
   24b48:	b	24ba0 <main@@Base+0xeb18>
   24b4c:	ldr	r0, [sp, #24]
   24b50:	ldr	r1, [sp, #28]
   24b54:	bl	42f34 <flatcc_json_printer_clear@@Base+0xaf0>
   24b58:	vmov	s2, r0
   24b5c:	ldr	r2, [fp, #8]
   24b60:	ldr	r1, [sp, #20]
   24b64:	ldr	r8, [sp, #12]
   24b68:	mov	r7, r4
   24b6c:	vldr	s0, [r2]
   24b70:	cmp	r1, #0
   24b74:	vneg.f32	s4, s2
   24b78:	vseleq.f32	s2, s2, s4
   24b7c:	vadd.f32	s0, s0, s2
   24b80:	vstr	s0, [r2]
   24b84:	ldr	r0, [sp, #16]
   24b88:	cmp	r0, #0
   24b8c:	ldr	r0, [sp, #8]
   24b90:	bne	24b00 <main@@Base+0xea78>
   24b94:	b	24bb8 <main@@Base+0xeb30>
   24b98:	mov	r4, r6
   24b9c:	b	24bb8 <main@@Base+0xeb30>
   24ba0:	mov	r0, r5
   24ba4:	mov	r1, r7
   24ba8:	mov	r2, r6
   24bac:	mov	r3, #23
   24bb0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   24bb4:	mov	r4, r0
   24bb8:	mov	r0, r4
   24bbc:	sub	sp, fp, #28
   24bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24bc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24bc8:	add	fp, sp, #28
   24bcc:	sub	sp, sp, #44	; 0x2c
   24bd0:	mov	r6, r2
   24bd4:	ldr	r2, [fp, #8]
   24bd8:	mov	r5, r0
   24bdc:	mov	r0, #0
   24be0:	mov	sl, r3
   24be4:	cmp	r1, r6
   24be8:	str	r0, [r2]
   24bec:	beq	24c30 <main@@Base+0xeba8>
   24bf0:	ldrb	r0, [r1]
   24bf4:	cmp	r0, #46	; 0x2e
   24bf8:	beq	24c10 <main@@Base+0xeb88>
   24bfc:	cmp	r0, #34	; 0x22
   24c00:	bne	24c28 <main@@Base+0xeba0>
   24c04:	mov	r0, #0
   24c08:	add	r1, r1, #1
   24c0c:	b	24c2c <main@@Base+0xeba4>
   24c10:	mov	r0, r5
   24c14:	mov	r2, r6
   24c18:	mov	r3, #5
   24c1c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   24c20:	mov	r1, r0
   24c24:	b	24c30 <main@@Base+0xeba8>
   24c28:	mov	r0, #1
   24c2c:	str	r0, [r5, #12]
   24c30:	ldr	r0, [r5, #12]
   24c34:	cmp	r0, #0
   24c38:	beq	24c44 <main@@Base+0xebbc>
   24c3c:	mov	r7, r1
   24c40:	b	24c80 <main@@Base+0xebf8>
   24c44:	sub	r0, r6, r1
   24c48:	cmp	r0, #2
   24c4c:	blt	24c70 <main@@Base+0xebe8>
   24c50:	ldrb	r0, [r1]
   24c54:	cmp	r0, #32
   24c58:	bhi	24c3c <main@@Base+0xebb4>
   24c5c:	bne	24c70 <main@@Base+0xebe8>
   24c60:	mov	r7, r1
   24c64:	ldrb	r0, [r7, #1]!
   24c68:	cmp	r0, #32
   24c6c:	bhi	24c80 <main@@Base+0xebf8>
   24c70:	mov	r0, r5
   24c74:	mov	r2, r6
   24c78:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   24c7c:	mov	r7, r0
   24c80:	cmp	r7, r6
   24c84:	beq	24d98 <main@@Base+0xed10>
   24c88:	add	r0, sl, #4
   24c8c:	mov	r2, #0
   24c90:	add	r8, sp, #32
   24c94:	add	r9, sp, #28
   24c98:	str	sl, [sp, #16]
   24c9c:	str	r0, [sp, #12]
   24ca0:	ldr	r4, [sl]
   24ca4:	mov	sl, r0
   24ca8:	str	r2, [sp, #20]
   24cac:	add	r0, sp, #24
   24cb0:	mov	r1, r7
   24cb4:	mov	r2, r6
   24cb8:	mov	r3, r9
   24cbc:	str	r8, [sp]
   24cc0:	str	r0, [sp, #4]
   24cc4:	mov	r0, r5
   24cc8:	blx	r4
   24ccc:	cmp	r0, r6
   24cd0:	beq	24d98 <main@@Base+0xed10>
   24cd4:	mov	r4, r0
   24cd8:	cmp	r0, r7
   24cdc:	bne	24cf0 <main@@Base+0xec68>
   24ce0:	ldr	r4, [sl], #4
   24ce4:	cmp	r4, #0
   24ce8:	bne	24cac <main@@Base+0xec24>
   24cec:	b	24da0 <main@@Base+0xed18>
   24cf0:	ldr	r2, [sp, #28]
   24cf4:	ldr	r0, [sp, #32]
   24cf8:	ldr	r1, [sp, #36]	; 0x24
   24cfc:	cmp	r2, #0
   24d00:	beq	24d28 <main@@Base+0xeca0>
   24d04:	ldr	sl, [sp, #16]
   24d08:	subs	r2, r0, #-2147483647	; 0x80000001
   24d0c:	sbcs	r1, r1, #0
   24d10:	bcc	24d54 <main@@Base+0xeccc>
   24d14:	mov	r0, r5
   24d18:	mov	r1, r4
   24d1c:	mov	r2, r6
   24d20:	mov	r3, #8
   24d24:	b	24d48 <main@@Base+0xecc0>
   24d28:	ldr	sl, [sp, #16]
   24d2c:	subs	r2, r0, #-2147483648	; 0x80000000
   24d30:	sbcs	r1, r1, #0
   24d34:	bcc	24d5c <main@@Base+0xecd4>
   24d38:	mov	r0, r5
   24d3c:	mov	r1, r4
   24d40:	mov	r2, r6
   24d44:	mov	r3, #7
   24d48:	bl	333fc <flatcc_json_parser_set_error@@Base>
   24d4c:	ldr	r2, [sp, #20]
   24d50:	b	24d64 <main@@Base+0xecdc>
   24d54:	rsb	r2, r0, #0
   24d58:	b	24d60 <main@@Base+0xecd8>
   24d5c:	mov	r2, r0
   24d60:	mov	r0, r4
   24d64:	cmp	r0, r6
   24d68:	beq	24d98 <main@@Base+0xed10>
   24d6c:	ldr	r0, [fp, #8]
   24d70:	mov	r7, r4
   24d74:	mov	r1, r0
   24d78:	ldr	r0, [r0]
   24d7c:	add	r0, r0, r2
   24d80:	str	r0, [r1]
   24d84:	ldr	r0, [sp, #24]
   24d88:	cmp	r0, #0
   24d8c:	ldr	r0, [sp, #12]
   24d90:	bne	24ca0 <main@@Base+0xec18>
   24d94:	b	24db8 <main@@Base+0xed30>
   24d98:	mov	r4, r6
   24d9c:	b	24db8 <main@@Base+0xed30>
   24da0:	mov	r0, r5
   24da4:	mov	r1, r7
   24da8:	mov	r2, r6
   24dac:	mov	r3, #23
   24db0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   24db4:	mov	r4, r0
   24db8:	mov	r0, r4
   24dbc:	sub	sp, fp, #28
   24dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24dc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24dc8:	add	fp, sp, #28
   24dcc:	sub	sp, sp, #44	; 0x2c
   24dd0:	mov	r6, r2
   24dd4:	ldr	r2, [fp, #8]
   24dd8:	mov	r5, r0
   24ddc:	mov	r0, #0
   24de0:	mov	sl, r3
   24de4:	cmp	r1, r6
   24de8:	str	r0, [r2]
   24dec:	str	r0, [r2, #4]
   24df0:	beq	24e34 <main@@Base+0xedac>
   24df4:	ldrb	r0, [r1]
   24df8:	cmp	r0, #46	; 0x2e
   24dfc:	beq	24e14 <main@@Base+0xed8c>
   24e00:	cmp	r0, #34	; 0x22
   24e04:	bne	24e2c <main@@Base+0xeda4>
   24e08:	mov	r0, #0
   24e0c:	add	r1, r1, #1
   24e10:	b	24e30 <main@@Base+0xeda8>
   24e14:	mov	r0, r5
   24e18:	mov	r2, r6
   24e1c:	mov	r3, #5
   24e20:	bl	333fc <flatcc_json_parser_set_error@@Base>
   24e24:	mov	r1, r0
   24e28:	b	24e34 <main@@Base+0xedac>
   24e2c:	mov	r0, #1
   24e30:	str	r0, [r5, #12]
   24e34:	ldr	r0, [r5, #12]
   24e38:	cmp	r0, #0
   24e3c:	beq	24e48 <main@@Base+0xedc0>
   24e40:	mov	r7, r1
   24e44:	b	24e84 <main@@Base+0xedfc>
   24e48:	sub	r0, r6, r1
   24e4c:	cmp	r0, #2
   24e50:	blt	24e74 <main@@Base+0xedec>
   24e54:	ldrb	r0, [r1]
   24e58:	cmp	r0, #32
   24e5c:	bhi	24e40 <main@@Base+0xedb8>
   24e60:	bne	24e74 <main@@Base+0xedec>
   24e64:	mov	r7, r1
   24e68:	ldrb	r0, [r7, #1]!
   24e6c:	cmp	r0, #32
   24e70:	bhi	24e84 <main@@Base+0xedfc>
   24e74:	mov	r0, r5
   24e78:	mov	r2, r6
   24e7c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   24e80:	mov	r7, r0
   24e84:	cmp	r7, r6
   24e88:	beq	24fa4 <main@@Base+0xef1c>
   24e8c:	add	r0, sl, #4
   24e90:	mov	r1, #0
   24e94:	add	r8, sp, #32
   24e98:	add	r9, sp, #28
   24e9c:	mov	r2, #0
   24ea0:	str	sl, [sp, #12]
   24ea4:	str	r0, [sp, #8]
   24ea8:	ldr	r4, [sl]
   24eac:	mov	sl, r0
   24eb0:	str	r2, [sp, #16]
   24eb4:	str	r1, [sp, #20]
   24eb8:	add	r0, sp, #24
   24ebc:	mov	r1, r7
   24ec0:	mov	r2, r6
   24ec4:	mov	r3, r9
   24ec8:	str	r8, [sp]
   24ecc:	str	r0, [sp, #4]
   24ed0:	mov	r0, r5
   24ed4:	blx	r4
   24ed8:	cmp	r0, r6
   24edc:	beq	24fa4 <main@@Base+0xef1c>
   24ee0:	mov	r4, r0
   24ee4:	cmp	r0, r7
   24ee8:	bne	24efc <main@@Base+0xee74>
   24eec:	ldr	r4, [sl], #4
   24ef0:	cmp	r4, #0
   24ef4:	bne	24eb8 <main@@Base+0xee30>
   24ef8:	b	24fac <main@@Base+0xef24>
   24efc:	add	r2, sp, #28
   24f00:	ldm	r2, {r0, r1, r2}
   24f04:	cmp	r0, #0
   24f08:	beq	24f30 <main@@Base+0xeea8>
   24f0c:	ldr	sl, [sp, #12]
   24f10:	subs	r0, r1, #1
   24f14:	sbcs	r0, r2, #-2147483648	; 0x80000000
   24f18:	bcc	24f60 <main@@Base+0xeed8>
   24f1c:	mov	r0, r5
   24f20:	mov	r1, r4
   24f24:	mov	r2, r6
   24f28:	mov	r3, #8
   24f2c:	b	24f50 <main@@Base+0xeec8>
   24f30:	ldr	sl, [sp, #12]
   24f34:	cmn	r2, #1
   24f38:	mov	r0, r4
   24f3c:	bgt	24f6c <main@@Base+0xeee4>
   24f40:	mov	r0, r5
   24f44:	mov	r1, r4
   24f48:	mov	r2, r6
   24f4c:	mov	r3, #7
   24f50:	bl	333fc <flatcc_json_parser_set_error@@Base>
   24f54:	ldr	r1, [sp, #20]
   24f58:	ldr	r2, [sp, #16]
   24f5c:	b	24f6c <main@@Base+0xeee4>
   24f60:	rsbs	r1, r1, #0
   24f64:	mov	r0, r4
   24f68:	rsc	r2, r2, #0
   24f6c:	cmp	r0, r6
   24f70:	beq	24fa4 <main@@Base+0xef1c>
   24f74:	ldr	r0, [fp, #8]
   24f78:	mov	r7, r0
   24f7c:	ldm	r0, {r0, r3}
   24f80:	adds	r0, r0, r1
   24f84:	adc	r3, r3, r2
   24f88:	stm	r7, {r0, r3}
   24f8c:	mov	r7, r4
   24f90:	ldr	r0, [sp, #24]
   24f94:	cmp	r0, #0
   24f98:	ldr	r0, [sp, #8]
   24f9c:	bne	24ea8 <main@@Base+0xee20>
   24fa0:	b	24fc4 <main@@Base+0xef3c>
   24fa4:	mov	r4, r6
   24fa8:	b	24fc4 <main@@Base+0xef3c>
   24fac:	mov	r0, r5
   24fb0:	mov	r1, r7
   24fb4:	mov	r2, r6
   24fb8:	mov	r3, #23
   24fbc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   24fc0:	mov	r4, r0
   24fc4:	mov	r0, r4
   24fc8:	sub	sp, fp, #28
   24fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24fd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fd4:	add	fp, sp, #28
   24fd8:	sub	sp, sp, #44	; 0x2c
   24fdc:	mov	r6, r2
   24fe0:	ldr	r2, [fp, #8]
   24fe4:	mov	r5, r0
   24fe8:	mov	r0, #0
   24fec:	mov	r8, r3
   24ff0:	cmp	r1, r6
   24ff4:	str	r0, [r2]
   24ff8:	beq	2503c <main@@Base+0xefb4>
   24ffc:	ldrb	r0, [r1]
   25000:	cmp	r0, #46	; 0x2e
   25004:	beq	2501c <main@@Base+0xef94>
   25008:	cmp	r0, #34	; 0x22
   2500c:	bne	25034 <main@@Base+0xefac>
   25010:	mov	r0, #0
   25014:	add	r1, r1, #1
   25018:	b	25038 <main@@Base+0xefb0>
   2501c:	mov	r0, r5
   25020:	mov	r2, r6
   25024:	mov	r3, #5
   25028:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2502c:	mov	r1, r0
   25030:	b	2503c <main@@Base+0xefb4>
   25034:	mov	r0, #1
   25038:	str	r0, [r5, #12]
   2503c:	ldr	r0, [r5, #12]
   25040:	cmp	r0, #0
   25044:	beq	25050 <main@@Base+0xefc8>
   25048:	mov	r7, r1
   2504c:	b	2508c <main@@Base+0xf004>
   25050:	sub	r0, r6, r1
   25054:	cmp	r0, #2
   25058:	blt	2507c <main@@Base+0xeff4>
   2505c:	ldrb	r0, [r1]
   25060:	cmp	r0, #32
   25064:	bhi	25048 <main@@Base+0xefc0>
   25068:	bne	2507c <main@@Base+0xeff4>
   2506c:	mov	r7, r1
   25070:	ldrb	r0, [r7, #1]!
   25074:	cmp	r0, #32
   25078:	bhi	2508c <main@@Base+0xf004>
   2507c:	mov	r0, r5
   25080:	mov	r2, r6
   25084:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   25088:	mov	r7, r0
   2508c:	cmp	r7, r6
   25090:	beq	25190 <main@@Base+0xf108>
   25094:	add	r0, r8, #4
   25098:	mov	r1, #0
   2509c:	add	sl, sp, #32
   250a0:	add	r9, sp, #28
   250a4:	str	r8, [sp, #16]
   250a8:	str	r1, [sp, #20]
   250ac:	str	r0, [sp, #12]
   250b0:	ldr	r4, [r8]
   250b4:	mov	r8, r0
   250b8:	add	r0, sp, #24
   250bc:	mov	r1, r7
   250c0:	mov	r2, r6
   250c4:	mov	r3, r9
   250c8:	str	sl, [sp]
   250cc:	str	r0, [sp, #4]
   250d0:	mov	r0, r5
   250d4:	blx	r4
   250d8:	cmp	r0, r6
   250dc:	beq	25190 <main@@Base+0xf108>
   250e0:	mov	r4, r0
   250e4:	cmp	r0, r7
   250e8:	bne	250fc <main@@Base+0xf074>
   250ec:	ldr	r4, [r8], #4
   250f0:	cmp	r4, #0
   250f4:	bne	250b8 <main@@Base+0xf030>
   250f8:	b	25198 <main@@Base+0xf110>
   250fc:	ldr	r0, [sp, #28]
   25100:	cmp	r0, #0
   25104:	beq	25124 <main@@Base+0xf09c>
   25108:	mov	r0, r5
   2510c:	mov	r1, r4
   25110:	mov	r2, r6
   25114:	mov	r3, #8
   25118:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2511c:	ldr	r8, [sp, #16]
   25120:	b	25158 <main@@Base+0xf0d0>
   25124:	ldr	r0, [sp, #36]	; 0x24
   25128:	ldr	r8, [sp, #16]
   2512c:	cmp	r0, #0
   25130:	beq	2514c <main@@Base+0xf0c4>
   25134:	mov	r0, r5
   25138:	mov	r1, r4
   2513c:	mov	r2, r6
   25140:	mov	r3, #7
   25144:	bl	333fc <flatcc_json_parser_set_error@@Base>
   25148:	b	25158 <main@@Base+0xf0d0>
   2514c:	ldr	r0, [sp, #32]
   25150:	str	r0, [sp, #20]
   25154:	mov	r0, r4
   25158:	cmp	r0, r6
   2515c:	beq	25190 <main@@Base+0xf108>
   25160:	ldr	r0, [fp, #8]
   25164:	ldr	r2, [sp, #20]
   25168:	mov	r7, r4
   2516c:	mov	r1, r0
   25170:	ldr	r0, [r0]
   25174:	add	r0, r0, r2
   25178:	str	r0, [r1]
   2517c:	ldr	r0, [sp, #24]
   25180:	cmp	r0, #0
   25184:	ldr	r0, [sp, #12]
   25188:	bne	250b0 <main@@Base+0xf028>
   2518c:	b	251b0 <main@@Base+0xf128>
   25190:	mov	r4, r6
   25194:	b	251b0 <main@@Base+0xf128>
   25198:	mov	r0, r5
   2519c:	mov	r1, r7
   251a0:	mov	r2, r6
   251a4:	mov	r3, #23
   251a8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   251ac:	mov	r4, r0
   251b0:	mov	r0, r4
   251b4:	sub	sp, fp, #28
   251b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   251bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   251c0:	add	fp, sp, #28
   251c4:	sub	sp, sp, #44	; 0x2c
   251c8:	mov	r7, r2
   251cc:	ldr	r2, [fp, #8]
   251d0:	mov	r5, r0
   251d4:	mov	r0, #0
   251d8:	mov	r8, r3
   251dc:	cmp	r1, r7
   251e0:	str	r0, [r2]
   251e4:	str	r0, [r2, #4]
   251e8:	beq	2522c <main@@Base+0xf1a4>
   251ec:	ldrb	r0, [r1]
   251f0:	cmp	r0, #46	; 0x2e
   251f4:	beq	2520c <main@@Base+0xf184>
   251f8:	cmp	r0, #34	; 0x22
   251fc:	bne	25224 <main@@Base+0xf19c>
   25200:	mov	r0, #0
   25204:	add	r1, r1, #1
   25208:	b	25228 <main@@Base+0xf1a0>
   2520c:	mov	r0, r5
   25210:	mov	r2, r7
   25214:	mov	r3, #5
   25218:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2521c:	mov	r1, r0
   25220:	b	2522c <main@@Base+0xf1a4>
   25224:	mov	r0, #1
   25228:	str	r0, [r5, #12]
   2522c:	ldr	r0, [r5, #12]
   25230:	cmp	r0, #0
   25234:	beq	25240 <main@@Base+0xf1b8>
   25238:	mov	r6, r1
   2523c:	b	2527c <main@@Base+0xf1f4>
   25240:	sub	r0, r7, r1
   25244:	cmp	r0, #2
   25248:	blt	2526c <main@@Base+0xf1e4>
   2524c:	ldrb	r0, [r1]
   25250:	cmp	r0, #32
   25254:	bhi	25238 <main@@Base+0xf1b0>
   25258:	bne	2526c <main@@Base+0xf1e4>
   2525c:	mov	r6, r1
   25260:	ldrb	r0, [r6, #1]!
   25264:	cmp	r0, #32
   25268:	bhi	2527c <main@@Base+0xf1f4>
   2526c:	mov	r0, r5
   25270:	mov	r2, r7
   25274:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   25278:	mov	r6, r0
   2527c:	cmp	r6, r7
   25280:	beq	25370 <main@@Base+0xf2e8>
   25284:	mov	r1, #0
   25288:	add	r0, r8, #4
   2528c:	add	sl, sp, #32
   25290:	add	r9, sp, #28
   25294:	str	r8, [sp, #12]
   25298:	str	r1, [sp, #20]
   2529c:	mov	r1, #0
   252a0:	str	r0, [sp, #8]
   252a4:	str	r1, [sp, #16]
   252a8:	ldr	r4, [r8]
   252ac:	mov	r8, r0
   252b0:	add	r0, sp, #24
   252b4:	mov	r1, r6
   252b8:	mov	r2, r7
   252bc:	mov	r3, r9
   252c0:	str	sl, [sp]
   252c4:	str	r0, [sp, #4]
   252c8:	mov	r0, r5
   252cc:	blx	r4
   252d0:	cmp	r0, r7
   252d4:	beq	25370 <main@@Base+0xf2e8>
   252d8:	mov	r4, r0
   252dc:	cmp	r0, r6
   252e0:	bne	252f4 <main@@Base+0xf26c>
   252e4:	ldr	r4, [r8], #4
   252e8:	cmp	r4, #0
   252ec:	bne	252b0 <main@@Base+0xf228>
   252f0:	b	25378 <main@@Base+0xf2f0>
   252f4:	ldr	r0, [sp, #28]
   252f8:	cmp	r0, #0
   252fc:	beq	25318 <main@@Base+0xf290>
   25300:	mov	r0, r5
   25304:	mov	r1, r4
   25308:	mov	r2, r7
   2530c:	mov	r3, #8
   25310:	bl	333fc <flatcc_json_parser_set_error@@Base>
   25314:	b	2532c <main@@Base+0xf2a4>
   25318:	ldr	r0, [sp, #32]
   2531c:	str	r0, [sp, #20]
   25320:	ldr	r0, [sp, #36]	; 0x24
   25324:	str	r0, [sp, #16]
   25328:	mov	r0, r4
   2532c:	ldr	r8, [sp, #12]
   25330:	cmp	r0, r7
   25334:	beq	25370 <main@@Base+0xf2e8>
   25338:	ldr	r0, [fp, #8]
   2533c:	ldr	r3, [sp, #20]
   25340:	mov	r6, r4
   25344:	mov	r2, r0
   25348:	ldrd	r0, [r0]
   2534c:	adds	r0, r0, r3
   25350:	ldr	r3, [sp, #16]
   25354:	adc	r1, r1, r3
   25358:	strd	r0, [r2]
   2535c:	ldr	r0, [sp, #24]
   25360:	cmp	r0, #0
   25364:	ldr	r0, [sp, #8]
   25368:	bne	252a8 <main@@Base+0xf220>
   2536c:	b	25390 <main@@Base+0xf308>
   25370:	mov	r4, r7
   25374:	b	25390 <main@@Base+0xf308>
   25378:	mov	r0, r5
   2537c:	mov	r1, r6
   25380:	mov	r2, r7
   25384:	mov	r3, #23
   25388:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2538c:	mov	r4, r0
   25390:	mov	r0, r4
   25394:	sub	sp, fp, #28
   25398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2539c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   253a0:	add	fp, sp, #28
   253a4:	sub	sp, sp, #36	; 0x24
   253a8:	mov	r6, r2
   253ac:	ldr	r2, [fp, #8]
   253b0:	mov	r5, r0
   253b4:	mov	r0, #0
   253b8:	mov	r8, r3
   253bc:	cmp	r1, r6
   253c0:	str	r0, [r2]
   253c4:	str	r0, [r2, #4]
   253c8:	beq	2540c <main@@Base+0xf384>
   253cc:	ldrb	r0, [r1]
   253d0:	cmp	r0, #46	; 0x2e
   253d4:	beq	253ec <main@@Base+0xf364>
   253d8:	cmp	r0, #34	; 0x22
   253dc:	bne	25404 <main@@Base+0xf37c>
   253e0:	mov	r0, #0
   253e4:	add	r1, r1, #1
   253e8:	b	25408 <main@@Base+0xf380>
   253ec:	mov	r0, r5
   253f0:	mov	r2, r6
   253f4:	mov	r3, #5
   253f8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   253fc:	mov	r1, r0
   25400:	b	2540c <main@@Base+0xf384>
   25404:	mov	r0, #1
   25408:	str	r0, [r5, #12]
   2540c:	ldr	r0, [r5, #12]
   25410:	cmp	r0, #0
   25414:	beq	25420 <main@@Base+0xf398>
   25418:	mov	r7, r1
   2541c:	b	2545c <main@@Base+0xf3d4>
   25420:	sub	r0, r6, r1
   25424:	cmp	r0, #2
   25428:	blt	2544c <main@@Base+0xf3c4>
   2542c:	ldrb	r0, [r1]
   25430:	cmp	r0, #32
   25434:	bhi	25418 <main@@Base+0xf390>
   25438:	bne	2544c <main@@Base+0xf3c4>
   2543c:	mov	r7, r1
   25440:	ldrb	r0, [r7, #1]!
   25444:	cmp	r0, #32
   25448:	bhi	2545c <main@@Base+0xf3d4>
   2544c:	mov	r0, r5
   25450:	mov	r2, r6
   25454:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   25458:	mov	r7, r0
   2545c:	cmp	r7, r6
   25460:	beq	25518 <main@@Base+0xf490>
   25464:	add	r0, r8, #4
   25468:	add	sl, sp, #24
   2546c:	add	r9, sp, #20
   25470:	str	r8, [sp, #12]
   25474:	str	r0, [sp, #8]
   25478:	ldr	r4, [r8]
   2547c:	mov	r8, r0
   25480:	add	r0, sp, #16
   25484:	mov	r1, r7
   25488:	mov	r2, r6
   2548c:	mov	r3, r9
   25490:	str	sl, [sp]
   25494:	str	r0, [sp, #4]
   25498:	mov	r0, r5
   2549c:	blx	r4
   254a0:	cmp	r0, r6
   254a4:	beq	25518 <main@@Base+0xf490>
   254a8:	mov	r4, r0
   254ac:	cmp	r0, r7
   254b0:	bne	254c4 <main@@Base+0xf43c>
   254b4:	ldr	r4, [r8], #4
   254b8:	cmp	r4, #0
   254bc:	bne	25480 <main@@Base+0xf3f8>
   254c0:	b	25520 <main@@Base+0xf498>
   254c4:	ldr	r0, [sp, #24]
   254c8:	ldr	r1, [sp, #28]
   254cc:	bl	42cfc <flatcc_json_printer_clear@@Base+0x8b8>
   254d0:	ldr	r2, [fp, #8]
   254d4:	vmov	d17, r0, r1
   254d8:	ldr	r3, [sp, #20]
   254dc:	ldr	r8, [sp, #12]
   254e0:	mov	r7, r2
   254e4:	vldr	d16, [r2]
   254e8:	eor	r2, r1, #-2147483648	; 0x80000000
   254ec:	cmp	r3, #0
   254f0:	vmov	d18, r0, r2
   254f4:	vseleq.f64	d17, d17, d18
   254f8:	vadd.f64	d16, d16, d17
   254fc:	vstr	d16, [r7]
   25500:	mov	r7, r4
   25504:	ldr	r0, [sp, #16]
   25508:	cmp	r0, #0
   2550c:	ldr	r0, [sp, #8]
   25510:	bne	25478 <main@@Base+0xf3f0>
   25514:	b	25538 <main@@Base+0xf4b0>
   25518:	mov	r4, r6
   2551c:	b	25538 <main@@Base+0xf4b0>
   25520:	mov	r0, r5
   25524:	mov	r1, r7
   25528:	mov	r2, r6
   2552c:	mov	r3, #23
   25530:	bl	333fc <flatcc_json_parser_set_error@@Base>
   25534:	mov	r4, r0
   25538:	mov	r0, r4
   2553c:	sub	sp, fp, #28
   25540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25548:	add	fp, sp, #28
   2554c:	sub	sp, sp, #12
   25550:	mov	sl, r1
   25554:	sub	r1, r2, r1
   25558:	cmp	r1, #8
   2555c:	movcs	r1, #8
   25560:	sub	r5, r1, #1
   25564:	cmp	r5, #7
   25568:	bhi	25798 <main@@Base+0xf710>
   2556c:	str	r3, [sp, #8]
   25570:	add	r7, pc, #32
   25574:	mov	r8, #0
   25578:	mov	ip, #0
   2557c:	mov	lr, #0
   25580:	mov	r9, #0
   25584:	mov	r6, #0
   25588:	mov	r1, #0
   2558c:	mov	r3, #0
   25590:	mov	r4, #0
   25594:	ldr	pc, [r7, r5, lsl #2]
   25598:	strdeq	r5, [r2], -ip
   2559c:	strdeq	r5, [r2], -r4
   255a0:	andeq	r5, r2, ip, ror #11
   255a4:	andeq	r5, r2, r4, ror #11
   255a8:	ldrdeq	r5, [r2], -r8
   255ac:	andeq	r5, r2, ip, asr #11
   255b0:			; <UNDEFINED> instruction: 0x000255bc
   255b4:			; <UNDEFINED> instruction: 0x000255b8
   255b8:	ldrb	ip, [sl, #7]
   255bc:	ldrb	r1, [sl, #6]
   255c0:	mov	lr, r8
   255c4:	orr	r1, ip, r1, lsl #8
   255c8:	mov	r8, r1
   255cc:	ldrb	r1, [sl, #5]
   255d0:	mov	r9, lr
   255d4:	orr	r8, r8, r1, lsl #16
   255d8:	ldrb	r1, [sl, #4]
   255dc:	mov	r6, r9
   255e0:	orr	r8, r8, r1, lsl #24
   255e4:	ldrb	r1, [sl, #3]
   255e8:	orr	r1, r1, r6
   255ec:	ldrb	r3, [sl, #2]
   255f0:	orr	r3, r1, r3, lsl #8
   255f4:	ldrb	r1, [sl, #1]
   255f8:	orr	r4, r3, r1, lsl #16
   255fc:	movw	r1, #28276	; 0x6e74
   25600:	movw	r7, #20577	; 0x5061
   25604:	ldr	r6, [fp, #12]
   25608:	movt	r1, #29285	; 0x7265
   2560c:	movt	r7, #18798	; 0x496e
   25610:	eor	r3, r8, r1
   25614:	ldrb	r1, [sl]
   25618:	orr	r1, r4, r1, lsl #24
   2561c:	eor	r7, r1, r7
   25620:	orrs	r3, r3, r7
   25624:	bne	2574c <main@@Base+0xf6c4>
   25628:	add	r8, sl, #8
   2562c:	sub	r1, r2, r8
   25630:	cmp	r1, #8
   25634:	movcs	r1, #8
   25638:	sub	r7, r1, #1
   2563c:	cmp	r7, #7
   25640:	bhi	25798 <main@@Base+0xf710>
   25644:	str	r0, [sp, #4]
   25648:	add	lr, pc, #32
   2564c:	mov	r6, #0
   25650:	mov	r0, #0
   25654:	mov	r1, #0
   25658:	mov	r5, #0
   2565c:	mov	r4, #0
   25660:	mov	r3, #0
   25664:	mov	ip, #0
   25668:	mov	r9, #0
   2566c:	ldr	pc, [lr, r7, lsl #2]
   25670:	ldrdeq	r5, [r2], -r4
   25674:	andeq	r5, r2, ip, asr #13
   25678:	andeq	r5, r2, r4, asr #13
   2567c:			; <UNDEFINED> instruction: 0x000256bc
   25680:			; <UNDEFINED> instruction: 0x000256b0
   25684:	andeq	r5, r2, r4, lsr #13
   25688:	muleq	r2, r4, r6
   2568c:	muleq	r2, r0, r6
   25690:	ldrb	r0, [sl, #15]
   25694:	ldrb	r1, [sl, #14]
   25698:	orr	r0, r0, r1, lsl #8
   2569c:	mov	r1, r6
   256a0:	mov	r6, r0
   256a4:	ldrb	r0, [sl, #13]
   256a8:	mov	r5, r1
   256ac:	orr	r6, r6, r0, lsl #16
   256b0:	ldrb	r0, [sl, #12]
   256b4:	mov	r4, r5
   256b8:	orr	r6, r6, r0, lsl #24
   256bc:	ldrb	r0, [sl, #11]
   256c0:	orr	r3, r0, r4
   256c4:	ldrb	r0, [sl, #10]
   256c8:	orr	ip, r3, r0, lsl #8
   256cc:	ldrb	r0, [sl, #9]
   256d0:	orr	r9, ip, r0, lsl #16
   256d4:	ldrb	r1, [r8]
   256d8:	movw	r0, #24931	; 0x6163
   256dc:	movw	r3, #28005	; 0x6d65
   256e0:	movt	r0, #29552	; 0x7370
   256e4:	movt	r3, #20065	; 0x4e61
   256e8:	eor	r0, r6, r0
   256ec:	orr	r1, r9, r1, lsl #24
   256f0:	eor	r1, r1, r3
   256f4:	orrs	r0, r0, r1
   256f8:	bne	25798 <main@@Base+0xf710>
   256fc:	add	r6, sl, #16
   25700:	sub	r0, r2, r6
   25704:	cmp	r0, #8
   25708:	movcs	r0, #8
   2570c:	sub	r0, r0, #1
   25710:	cmp	r0, #7
   25714:	bhi	25798 <main@@Base+0xf710>
   25718:	ldrb	r0, [r6]
   2571c:	cmp	r0, #101	; 0x65
   25720:	bne	25798 <main@@Base+0xf710>
   25724:	ldr	r0, [fp, #12]
   25728:	mov	r1, r6
   2572c:	mov	r3, #1
   25730:	mov	r8, #1
   25734:	str	r0, [sp]
   25738:	ldr	r0, [sp, #4]
   2573c:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25740:	cmp	r0, r6
   25744:	bne	25778 <main@@Base+0xf6f0>
   25748:	b	25798 <main@@Base+0xf710>
   2574c:	movw	r3, #20037	; 0x4e45
   25750:	movt	r3, #20047	; 0x4e4f
   25754:	teq	r1, r3
   25758:	bne	25798 <main@@Base+0xf710>
   2575c:	mov	r1, sl
   25760:	mov	r3, #4
   25764:	str	r6, [sp]
   25768:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   2576c:	cmp	r0, sl
   25770:	beq	25798 <main@@Base+0xf710>
   25774:	mov	r8, #0
   25778:	mov	sl, r0
   2577c:	ldr	r0, [fp, #8]
   25780:	mov	r1, #0
   25784:	str	r8, [r0]
   25788:	str	r1, [r0, #4]
   2578c:	mov	r0, #0
   25790:	ldr	r1, [sp, #8]
   25794:	str	r0, [r1]
   25798:	mov	r0, sl
   2579c:	sub	sp, fp, #28
   257a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   257a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   257a8:	add	fp, sp, #28
   257ac:	sub	sp, sp, #12
   257b0:	mov	r5, r1
   257b4:	sub	r1, r2, r1
   257b8:	cmp	r1, #8
   257bc:	movcs	r1, #8
   257c0:	sub	r7, r1, #1
   257c4:	cmp	r7, #7
   257c8:	bhi	25944 <main@@Base+0xf8bc>
   257cc:	str	r3, [sp, #8]
   257d0:	add	r8, pc, #32
   257d4:	mov	lr, #0
   257d8:	mov	ip, #0
   257dc:	mov	r9, #0
   257e0:	mov	sl, #0
   257e4:	mov	r1, #0
   257e8:	mov	r3, #0
   257ec:	mov	r4, #0
   257f0:	mov	r6, #0
   257f4:	ldr	pc, [r8, r7, lsl #2]
   257f8:	andeq	r5, r2, ip, asr r8
   257fc:	andeq	r5, r2, r4, asr r8
   25800:	andeq	r5, r2, ip, asr #16
   25804:	andeq	r5, r2, r4, asr #16
   25808:	andeq	r5, r2, r8, lsr r8
   2580c:	andeq	r5, r2, ip, lsr #16
   25810:	andeq	r5, r2, ip, lsl r8
   25814:	andeq	r5, r2, r8, lsl r8
   25818:	ldrb	ip, [r5, #7]
   2581c:	ldrb	r1, [r5, #6]
   25820:	mov	r9, lr
   25824:	orr	r1, ip, r1, lsl #8
   25828:	mov	lr, r1
   2582c:	ldrb	r1, [r5, #5]
   25830:	mov	sl, r9
   25834:	orr	lr, lr, r1, lsl #16
   25838:	ldrb	r1, [r5, #4]
   2583c:	orr	lr, lr, r1, lsl #24
   25840:	mov	r1, sl
   25844:	ldrb	r3, [r5, #3]
   25848:	orr	r3, r3, r1
   2584c:	ldrb	r1, [r5, #2]
   25850:	orr	r4, r3, r1, lsl #8
   25854:	ldrb	r1, [r5, #1]
   25858:	orr	r6, r4, r1, lsl #16
   2585c:	ldrb	r1, [r5]
   25860:	ldr	r3, [fp, #12]
   25864:	ldr	r8, [fp, #8]
   25868:	orr	r1, r6, r1, lsl #24
   2586c:	movw	r6, #30769	; 0x7831
   25870:	movt	r6, #26725	; 0x6865
   25874:	cmp	r1, r6
   25878:	bhi	258a8 <main@@Base+0xf820>
   2587c:	teq	r1, r6
   25880:	bne	25944 <main@@Base+0xf8bc>
   25884:	str	r3, [sp]
   25888:	mov	r1, r5
   2588c:	mov	r3, #4
   25890:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25894:	cmp	r0, r5
   25898:	beq	25944 <main@@Base+0xf8bc>
   2589c:	mov	r1, #0
   258a0:	mov	r2, #3
   258a4:	b	25930 <main@@Base+0xf8a8>
   258a8:	lsr	r4, lr, #16
   258ac:	movw	r7, #25959	; 0x6567
   258b0:	movw	r6, #26725	; 0x6865
   258b4:	orr	r4, r4, r1, lsl #16
   258b8:	movt	r7, #30830	; 0x786e
   258bc:	eor	r6, r6, r1, lsr #16
   258c0:	eor	r7, r4, r7
   258c4:	orrs	r7, r7, r6
   258c8:	bne	258fc <main@@Base+0xf874>
   258cc:	str	r3, [sp]
   258d0:	mov	r1, r5
   258d4:	mov	r3, #6
   258d8:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   258dc:	cmp	r0, r5
   258e0:	beq	25944 <main@@Base+0xf8bc>
   258e4:	mvn	r2, #1
   258e8:	mvn	r1, #0
   258ec:	str	r2, [r8]
   258f0:	str	r1, [r8, #4]
   258f4:	mov	r1, #1
   258f8:	b	25938 <main@@Base+0xf8b0>
   258fc:	movw	r7, #30770	; 0x7832
   25900:	movt	r7, #26725	; 0x6865
   25904:	teq	r1, r7
   25908:	bne	25944 <main@@Base+0xf8bc>
   2590c:	str	r3, [sp]
   25910:	mov	r1, r5
   25914:	mov	r3, #4
   25918:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   2591c:	cmp	r0, r5
   25920:	beq	25944 <main@@Base+0xf8bc>
   25924:	movw	r2, #48815	; 0xbeaf
   25928:	mov	r1, #0
   2592c:	movt	r2, #32431	; 0x7eaf
   25930:	str	r2, [r8]
   25934:	str	r1, [r8, #4]
   25938:	ldr	r2, [sp, #8]
   2593c:	mov	r5, r0
   25940:	str	r1, [r2]
   25944:	mov	r0, r5
   25948:	sub	sp, fp, #28
   2594c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25954:	add	fp, sp, #28
   25958:	sub	sp, sp, #12
   2595c:	mov	sl, r1
   25960:	sub	r1, r2, r1
   25964:	cmp	r1, #8
   25968:	movcs	r1, #8
   2596c:	sub	r4, r1, #1
   25970:	cmp	r4, #7
   25974:	bhi	25b34 <main@@Base+0xfaac>
   25978:	str	r3, [sp, #8]
   2597c:	add	r8, pc, #32
   25980:	mov	r9, #0
   25984:	mov	ip, #0
   25988:	mov	lr, #0
   2598c:	mov	r7, #0
   25990:	mov	r6, #0
   25994:	mov	r3, #0
   25998:	mov	r1, #0
   2599c:	mov	r5, #0
   259a0:	ldr	pc, [r8, r4, lsl #2]
   259a4:	andeq	r5, r2, r8, lsl #20
   259a8:	andeq	r5, r2, r0, lsl #20
   259ac:	strdeq	r5, [r2], -r8
   259b0:	strdeq	r5, [r2], -r0
   259b4:	andeq	r5, r2, r4, ror #19
   259b8:	ldrdeq	r5, [r2], -r8
   259bc:	andeq	r5, r2, r8, asr #19
   259c0:	andeq	r5, r2, r4, asr #19
   259c4:	ldrb	ip, [sl, #7]
   259c8:	ldrb	r1, [sl, #6]
   259cc:	mov	lr, r9
   259d0:	orr	r1, ip, r1, lsl #8
   259d4:	mov	r9, r1
   259d8:	ldrb	r1, [sl, #5]
   259dc:	mov	r7, lr
   259e0:	orr	r9, r9, r1, lsl #16
   259e4:	ldrb	r1, [sl, #4]
   259e8:	mov	r6, r7
   259ec:	orr	r9, r9, r1, lsl #24
   259f0:	ldrb	r1, [sl, #3]
   259f4:	orr	r3, r1, r6
   259f8:	ldrb	r1, [sl, #2]
   259fc:	orr	r1, r3, r1, lsl #8
   25a00:	ldrb	r3, [sl, #1]
   25a04:	orr	r5, r1, r3, lsl #16
   25a08:	ldrb	r1, [sl]
   25a0c:	ldr	r3, [fp, #12]
   25a10:	ldr	r6, [fp, #8]
   25a14:	orr	r7, r5, r1, lsl #24
   25a18:	movw	r1, #29745	; 0x7431
   25a1c:	movt	r1, #26990	; 0x696e
   25a20:	cmp	r7, r1
   25a24:	bhi	25a54 <main@@Base+0xf9cc>
   25a28:	teq	r7, r1
   25a2c:	bne	25b34 <main@@Base+0xfaac>
   25a30:	str	r3, [sp]
   25a34:	mov	r1, sl
   25a38:	mov	r3, #4
   25a3c:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25a40:	cmp	r0, sl
   25a44:	beq	25b34 <main@@Base+0xfaac>
   25a48:	mov	r1, #0
   25a4c:	mov	r2, #2
   25a50:	b	25aa0 <main@@Base+0xfa18>
   25a54:	movw	r4, #0
   25a58:	movw	r1, #29806	; 0x746e
   25a5c:	movt	r4, #25959	; 0x6567
   25a60:	movt	r1, #26990	; 0x696e
   25a64:	subs	r5, r9, r4
   25a68:	sbcs	r5, r7, r1
   25a6c:	bcs	25aac <main@@Base+0xfa24>
   25a70:	movw	r1, #29746	; 0x7432
   25a74:	movt	r1, #26990	; 0x696e
   25a78:	teq	r7, r1
   25a7c:	bne	25b34 <main@@Base+0xfaac>
   25a80:	str	r3, [sp]
   25a84:	mov	r1, sl
   25a88:	mov	r3, #4
   25a8c:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25a90:	cmp	r0, sl
   25a94:	beq	25b34 <main@@Base+0xfaac>
   25a98:	mov	r1, #0
   25a9c:	mov	r2, #42	; 0x2a
   25aa0:	str	r2, [r6]
   25aa4:	str	r1, [r6, #4]
   25aa8:	b	25b28 <main@@Base+0xfaa0>
   25aac:	eor	r1, r7, r1
   25ab0:	add	r7, r4, #12800	; 0x3200
   25ab4:	bic	r5, r9, #255	; 0xff
   25ab8:	eor	r7, r5, r7
   25abc:	orrs	r7, r7, r1
   25ac0:	bne	25aec <main@@Base+0xfa64>
   25ac4:	str	r3, [sp]
   25ac8:	mov	r1, sl
   25acc:	mov	r3, #7
   25ad0:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25ad4:	cmp	r0, sl
   25ad8:	beq	25b34 <main@@Base+0xfaac>
   25adc:	mvn	r2, #1
   25ae0:	mvn	r1, #0
   25ae4:	orr	r2, r2, #1
   25ae8:	b	25b1c <main@@Base+0xfa94>
   25aec:	bfc	r9, #0, #16
   25af0:	eor	r7, r9, r4
   25af4:	orrs	r1, r7, r1
   25af8:	bne	25b34 <main@@Base+0xfaac>
   25afc:	str	r3, [sp]
   25b00:	mov	r1, sl
   25b04:	mov	r3, #6
   25b08:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25b0c:	cmp	r0, sl
   25b10:	beq	25b34 <main@@Base+0xfaac>
   25b14:	mvn	r1, #0
   25b18:	mvn	r2, #1
   25b1c:	str	r2, [r6]
   25b20:	str	r1, [r6, #4]
   25b24:	mov	r1, #1
   25b28:	ldr	r2, [sp, #8]
   25b2c:	mov	sl, r0
   25b30:	str	r1, [r2]
   25b34:	mov	r0, sl
   25b38:	sub	sp, fp, #28
   25b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25b40:	push	{r4, r5, r6, r7, fp, lr}
   25b44:	add	fp, sp, #16
   25b48:	sub	sp, sp, #8
   25b4c:	mov	r5, r1
   25b50:	sub	r1, r2, r1
   25b54:	mov	r4, r3
   25b58:	cmp	r1, #8
   25b5c:	movcs	r1, #8
   25b60:	sub	r3, r1, #1
   25b64:	cmp	r3, #7
   25b68:	bhi	25c7c <main@@Base+0xfbf4>
   25b6c:	add	r7, pc, #4
   25b70:	mov	r1, #0
   25b74:	ldr	pc, [r7, r3, lsl #2]
   25b78:			; <UNDEFINED> instruction: 0x00025bb0
   25b7c:	andeq	r5, r2, r8, lsr #23
   25b80:	andeq	r5, r2, r0, lsr #23
   25b84:	muleq	r2, r8, fp
   25b88:	muleq	r2, r8, fp
   25b8c:	muleq	r2, r8, fp
   25b90:	muleq	r2, r8, fp
   25b94:	muleq	r2, r8, fp
   25b98:	ldrb	r3, [r5, #3]
   25b9c:	orr	r1, r3, r1
   25ba0:	ldrb	r3, [r5, #2]
   25ba4:	orr	r1, r1, r3, lsl #8
   25ba8:	ldrb	r3, [r5, #1]
   25bac:	orr	r1, r1, r3, lsl #16
   25bb0:	ldrb	r6, [r5]
   25bb4:	ldr	r3, [fp, #12]
   25bb8:	ldr	r7, [fp, #8]
   25bbc:	orr	r1, r1, r6, lsl #24
   25bc0:	movw	r6, #26417	; 0x6731
   25bc4:	movt	r6, #28261	; 0x6e65
   25bc8:	cmp	r1, r6
   25bcc:	bhi	25bfc <main@@Base+0xfb74>
   25bd0:	teq	r1, r6
   25bd4:	bne	25c7c <main@@Base+0xfbf4>
   25bd8:	str	r3, [sp]
   25bdc:	mov	r1, r5
   25be0:	mov	r3, #4
   25be4:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25be8:	cmp	r0, r5
   25bec:	beq	25c7c <main@@Base+0xfbf4>
   25bf0:	mvn	r1, #0
   25bf4:	mvn	r2, #11
   25bf8:	b	25c68 <main@@Base+0xfbe0>
   25bfc:	movw	r6, #26418	; 0x6732
   25c00:	movt	r6, #28261	; 0x6e65
   25c04:	teq	r1, r6
   25c08:	beq	25c44 <main@@Base+0xfbbc>
   25c0c:	movw	r6, #26419	; 0x6733
   25c10:	movt	r6, #28261	; 0x6e65
   25c14:	teq	r1, r6
   25c18:	bne	25c7c <main@@Base+0xfbf4>
   25c1c:	str	r3, [sp]
   25c20:	mov	r1, r5
   25c24:	mov	r3, #4
   25c28:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25c2c:	cmp	r0, r5
   25c30:	beq	25c7c <main@@Base+0xfbf4>
   25c34:	mvn	r2, #11
   25c38:	mvn	r1, #0
   25c3c:	orr	r2, r2, #2
   25c40:	b	25c68 <main@@Base+0xfbe0>
   25c44:	str	r3, [sp]
   25c48:	mov	r1, r5
   25c4c:	mov	r3, #4
   25c50:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25c54:	cmp	r0, r5
   25c58:	beq	25c7c <main@@Base+0xfbf4>
   25c5c:	mvn	r2, #11
   25c60:	mvn	r1, #0
   25c64:	orr	r2, r2, #1
   25c68:	str	r2, [r7]
   25c6c:	str	r1, [r7, #4]
   25c70:	mov	r1, #1
   25c74:	mov	r5, r0
   25c78:	str	r1, [r4]
   25c7c:	mov	r0, r5
   25c80:	sub	sp, fp, #16
   25c84:	pop	{r4, r5, r6, r7, fp, pc}
   25c88:	push	{r4, r5, fp, lr}
   25c8c:	add	fp, sp, #8
   25c90:	sub	sp, sp, #8
   25c94:	mov	r4, r1
   25c98:	sub	r1, r2, r1
   25c9c:	cmp	r1, #8
   25ca0:	movcs	r1, #8
   25ca4:	sub	r1, r1, #1
   25ca8:	cmp	r1, #7
   25cac:	bhi	25cf4 <main@@Base+0xfc6c>
   25cb0:	ldrb	r1, [r4]
   25cb4:	cmp	r1, #120	; 0x78
   25cb8:	bne	25cf4 <main@@Base+0xfc6c>
   25cbc:	ldr	r1, [fp, #12]
   25cc0:	mov	r5, r3
   25cc4:	mov	r3, #1
   25cc8:	str	r1, [sp]
   25ccc:	mov	r1, r4
   25cd0:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25cd4:	cmp	r0, r4
   25cd8:	beq	25cf4 <main@@Base+0xfc6c>
   25cdc:	ldr	r1, [fp, #8]
   25ce0:	mov	r2, #0
   25ce4:	mov	r4, r0
   25ce8:	str	r2, [r1]
   25cec:	str	r2, [r1, #4]
   25cf0:	str	r2, [r5]
   25cf4:	mov	r0, r4
   25cf8:	sub	sp, fp, #8
   25cfc:	pop	{r4, r5, fp, pc}
   25d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d04:	add	fp, sp, #28
   25d08:	sub	sp, sp, #12
   25d0c:	mov	sl, r1
   25d10:	sub	r1, r2, r1
   25d14:	cmp	r1, #8
   25d18:	movcs	r1, #8
   25d1c:	sub	r6, r1, #1
   25d20:	cmp	r6, #7
   25d24:	bhi	25fa0 <main@@Base+0xff18>
   25d28:	str	r3, [sp, #8]
   25d2c:	add	r9, pc, #32
   25d30:	mov	r1, #0
   25d34:	mov	ip, #0
   25d38:	mov	lr, #0
   25d3c:	mov	r4, #0
   25d40:	mov	r7, #0
   25d44:	mov	r3, #0
   25d48:	mov	r5, #0
   25d4c:	mov	r8, #0
   25d50:	ldr	pc, [r9, r6, lsl #2]
   25d54:			; <UNDEFINED> instruction: 0x00025db8
   25d58:			; <UNDEFINED> instruction: 0x00025db0
   25d5c:	andeq	r5, r2, r8, lsr #27
   25d60:	andeq	r5, r2, r0, lsr #27
   25d64:	muleq	r2, r4, sp
   25d68:	andeq	r5, r2, r8, lsl #27
   25d6c:	andeq	r5, r2, r8, ror sp
   25d70:	andeq	r5, r2, r4, ror sp
   25d74:	ldrb	ip, [sl, #7]
   25d78:	ldrb	r3, [sl, #6]
   25d7c:	mov	lr, r1
   25d80:	orr	r3, ip, r3, lsl #8
   25d84:	mov	r1, r3
   25d88:	ldrb	r3, [sl, #5]
   25d8c:	mov	r4, lr
   25d90:	orr	r1, r1, r3, lsl #16
   25d94:	ldrb	r3, [sl, #4]
   25d98:	mov	r7, r4
   25d9c:	orr	r1, r1, r3, lsl #24
   25da0:	ldrb	r3, [sl, #3]
   25da4:	orr	r3, r3, r7
   25da8:	ldrb	r7, [sl, #2]
   25dac:	orr	r5, r3, r7, lsl #8
   25db0:	ldrb	r3, [sl, #1]
   25db4:	orr	r8, r5, r3, lsl #16
   25db8:	ldrb	r3, [sl]
   25dbc:	ldr	lr, [fp, #12]
   25dc0:	ldr	r9, [fp, #8]
   25dc4:	orr	r6, r8, r3, lsl #24
   25dc8:	movw	r3, #20036	; 0x4e44
   25dcc:	movt	r3, #20047	; 0x4e4f
   25dd0:	cmp	r6, r3
   25dd4:	bhi	25e34 <main@@Base+0xfdac>
   25dd8:	movw	r7, #28160	; 0x6e00
   25ddc:	movw	r4, #28523	; 0x6f6b
   25de0:	and	r3, r1, #-16777216	; 0xff000000
   25de4:	movt	r7, #18017	; 0x4661
   25de8:	movt	r4, #17007	; 0x426f
   25dec:	subs	r5, r1, r7
   25df0:	sbcs	r5, r6, r4
   25df4:	bcs	25e80 <main@@Base+0xfdf8>
   25df8:	movw	r1, #27756	; 0x6c6c
   25dfc:	eor	r3, r3, #1694498816	; 0x65000000
   25e00:	movt	r1, #16997	; 0x4265
   25e04:	eor	r1, r6, r1
   25e08:	orrs	r1, r3, r1
   25e0c:	bne	25fa0 <main@@Base+0xff18>
   25e10:	mov	r1, sl
   25e14:	mov	r3, #5
   25e18:	str	lr, [sp]
   25e1c:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25e20:	cmp	r0, sl
   25e24:	beq	25fa0 <main@@Base+0xff18>
   25e28:	mov	r1, #0
   25e2c:	mov	r2, #9
   25e30:	b	25f8c <main@@Base+0xff04>
   25e34:	movw	r7, #26725	; 0x6865
   25e38:	mvn	r3, #-1912602624	; 0x8e000000
   25e3c:	movt	r7, #20340	; 0x4f74
   25e40:	subs	r3, r3, r1
   25e44:	sbcs	r3, r7, r6
   25e48:	bcc	25ebc <main@@Base+0xfe34>
   25e4c:	movw	r1, #20037	; 0x4e45
   25e50:	movt	r1, #20047	; 0x4e4f
   25e54:	teq	r6, r1
   25e58:	bne	25fa0 <main@@Base+0xff18>
   25e5c:	mov	r1, sl
   25e60:	mov	r3, #4
   25e64:	str	lr, [sp]
   25e68:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25e6c:	cmp	r0, sl
   25e70:	beq	25fa0 <main@@Base+0xff18>
   25e74:	mov	r1, #0
   25e78:	str	r1, [r9]
   25e7c:	b	25f90 <main@@Base+0xff08>
   25e80:	movw	r5, #19553	; 0x4c61
   25e84:	eor	r3, r3, #1845493760	; 0x6e000000
   25e88:	movt	r5, #19829	; 0x4d75
   25e8c:	eor	r5, r6, r5
   25e90:	orrs	r3, r3, r5
   25e94:	bne	25f10 <main@@Base+0xfe88>
   25e98:	mov	r1, sl
   25e9c:	mov	r3, #5
   25ea0:	str	lr, [sp]
   25ea4:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25ea8:	cmp	r0, sl
   25eac:	beq	25fa0 <main@@Base+0xff18>
   25eb0:	mov	r1, #0
   25eb4:	mov	r2, #2
   25eb8:	b	25f8c <main@@Base+0xff04>
   25ebc:	movw	r4, #25964	; 0x656c
   25ec0:	movw	ip, #28789	; 0x7075
   25ec4:	movt	r4, #28282	; 0x6e7a
   25ec8:	movt	ip, #21089	; 0x5261
   25ecc:	subs	r3, r1, r4
   25ed0:	sbcs	r3, r6, ip
   25ed4:	bcs	25f48 <main@@Base+0xfec0>
   25ed8:	and	r1, r1, #-16777216	; 0xff000000
   25edc:	eor	r3, r6, r7
   25ee0:	eor	r1, r1, #1912602624	; 0x72000000
   25ee4:	orrs	r1, r1, r3
   25ee8:	bne	25fa0 <main@@Base+0xff18>
   25eec:	mov	r1, sl
   25ef0:	mov	r3, #5
   25ef4:	str	lr, [sp]
   25ef8:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25efc:	cmp	r0, sl
   25f00:	beq	25fa0 <main@@Base+0xff18>
   25f04:	mov	r1, #0
   25f08:	mov	r2, #11
   25f0c:	b	25f8c <main@@Base+0xff04>
   25f10:	bic	r1, r1, #255	; 0xff
   25f14:	eor	r3, r6, r4
   25f18:	eor	r1, r1, r7
   25f1c:	orrs	r1, r1, r3
   25f20:	bne	25fa0 <main@@Base+0xff18>
   25f24:	mov	r1, sl
   25f28:	mov	r3, #7
   25f2c:	str	lr, [sp]
   25f30:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25f34:	cmp	r0, sl
   25f38:	beq	25fa0 <main@@Base+0xff18>
   25f3c:	mov	r1, #0
   25f40:	mov	r2, #10
   25f44:	b	25f8c <main@@Base+0xff04>
   25f48:	lsr	r5, r1, #16
   25f4c:	movw	r7, #25956	; 0x6564
   25f50:	movw	r3, #21870	; 0x556e
   25f54:	orr	r5, r5, r6, lsl #16
   25f58:	movt	r7, #30067	; 0x7573
   25f5c:	eor	r3, r3, r6, lsr #16
   25f60:	eor	r5, r5, r7
   25f64:	orrs	r3, r5, r3
   25f68:	bne	25fac <main@@Base+0xff24>
   25f6c:	mov	r1, sl
   25f70:	mov	r3, #6
   25f74:	str	lr, [sp]
   25f78:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25f7c:	cmp	r0, sl
   25f80:	beq	25fa0 <main@@Base+0xff18>
   25f84:	mov	r1, #0
   25f88:	mov	r2, #255	; 0xff
   25f8c:	str	r2, [r9]
   25f90:	str	r1, [r9, #4]
   25f94:	ldr	r2, [sp, #8]
   25f98:	str	r1, [r2]
   25f9c:	mov	sl, r0
   25fa0:	mov	r0, sl
   25fa4:	sub	sp, fp, #28
   25fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25fac:	eor	r1, r1, r4
   25fb0:	eor	r3, r6, ip
   25fb4:	orrs	r1, r1, r3
   25fb8:	bne	25fa0 <main@@Base+0xff18>
   25fbc:	mov	r1, sl
   25fc0:	mov	r3, #8
   25fc4:	str	lr, [sp]
   25fc8:	mov	r4, #8
   25fcc:	bl	33958 <flatcc_json_parser_match_constant@@Base>
   25fd0:	cmp	r0, sl
   25fd4:	beq	25fa0 <main@@Base+0xff18>
   25fd8:	mov	r5, #0
   25fdc:	strd	r4, [r9]
   25fe0:	ldr	r1, [sp, #8]
   25fe4:	str	r5, [r1]
   25fe8:	b	25f9c <main@@Base+0xff14>
   25fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25ff0:	add	fp, sp, #28
   25ff4:	sub	sp, sp, #36	; 0x24
   25ff8:	mov	r5, r0
   25ffc:	mov	r0, #0
   26000:	mov	r4, r1
   26004:	mov	r1, #4
   26008:	mov	r7, r3
   2600c:	mov	r8, r2
   26010:	str	r0, [r3]
   26014:	ldr	r0, [r5]
   26018:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   2601c:	cmp	r0, #0
   26020:	beq	26048 <main@@Base+0xffc0>
   26024:	mov	r0, r5
   26028:	mov	r1, r4
   2602c:	mov	r2, r8
   26030:	mov	r3, #33	; 0x21
   26034:	bl	333fc <flatcc_json_parser_set_error@@Base>
   26038:	mov	r4, r0
   2603c:	mov	r0, r4
   26040:	sub	sp, fp, #28
   26044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26048:	add	r0, sp, #28
   2604c:	mov	r1, r4
   26050:	mov	r2, r8
   26054:	mov	r3, #1
   26058:	str	r0, [sp]
   2605c:	mov	r0, r5
   26060:	bl	359ec <flatcc_json_parser_prepare_unions@@Base>
   26064:	cmp	r0, r8
   26068:	beq	26024 <main@@Base+0xff9c>
   2606c:	cmp	r4, r8
   26070:	beq	260a4 <main@@Base+0x1001c>
   26074:	ldrb	r0, [r4]
   26078:	cmp	r0, #123	; 0x7b
   2607c:	bne	260a4 <main@@Base+0x1001c>
   26080:	add	r1, r4, #1
   26084:	sub	r0, r8, r1
   26088:	cmp	r0, #2
   2608c:	blt	26108 <main@@Base+0x10080>
   26090:	ldrb	r0, [r1]
   26094:	cmp	r0, #32
   26098:	bls	260f8 <main@@Base+0x10070>
   2609c:	mov	r4, r1
   260a0:	b	26118 <main@@Base+0x10090>
   260a4:	mov	r0, r5
   260a8:	mov	r1, r4
   260ac:	mov	r2, r8
   260b0:	mov	r3, #21
   260b4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   260b8:	mov	r4, r0
   260bc:	ldr	r0, [r5, #24]
   260c0:	cmp	r0, #0
   260c4:	bne	26024 <main@@Base+0xff9c>
   260c8:	ldr	r3, [sp, #28]
   260cc:	mov	r0, r5
   260d0:	mov	r1, r4
   260d4:	mov	r2, r8
   260d8:	bl	35a70 <flatcc_json_parser_finalize_unions@@Base>
   260dc:	mov	r4, r0
   260e0:	ldr	r0, [r5]
   260e4:	bl	2ff38 <flatcc_builder_end_table@@Base>
   260e8:	cmp	r0, #0
   260ec:	str	r0, [r7]
   260f0:	bne	2603c <main@@Base+0xffb4>
   260f4:	b	26024 <main@@Base+0xff9c>
   260f8:	bne	26108 <main@@Base+0x10080>
   260fc:	ldrb	r0, [r4, #2]!
   26100:	cmp	r0, #32
   26104:	bhi	26118 <main@@Base+0x10090>
   26108:	mov	r0, r5
   2610c:	mov	r2, r8
   26110:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26114:	mov	r4, r0
   26118:	cmp	r4, r8
   2611c:	mov	r2, r8
   26120:	beq	2615c <main@@Base+0x100d4>
   26124:	ldrb	r0, [r4]
   26128:	cmp	r0, #125	; 0x7d
   2612c:	bne	26158 <main@@Base+0x100d0>
   26130:	add	r1, r4, #1
   26134:	sub	r0, r8, r1
   26138:	cmp	r0, #2
   2613c:	blt	269c8 <main@@Base+0x10940>
   26140:	ldrb	r0, [r1]
   26144:	cmp	r0, #32
   26148:	bhi	2698c <main@@Base+0x10904>
   2614c:	bne	269c8 <main@@Base+0x10940>
   26150:	ldrb	r0, [r4, #2]!
   26154:	b	269c0 <main@@Base+0x10938>
   26158:	mov	r2, r4
   2615c:	str	r7, [sp, #20]
   26160:	cmp	r2, r8
   26164:	mov	r9, r8
   26168:	beq	261b4 <main@@Base+0x1012c>
   2616c:	ldrb	r0, [r2]
   26170:	cmp	r0, #46	; 0x2e
   26174:	beq	2618c <main@@Base+0x10104>
   26178:	cmp	r0, #34	; 0x22
   2617c:	bne	261a8 <main@@Base+0x10120>
   26180:	mov	r0, #0
   26184:	add	r9, r2, #1
   26188:	b	261b0 <main@@Base+0x10128>
   2618c:	mov	r1, r2
   26190:	mov	r0, r5
   26194:	mov	r2, r8
   26198:	mov	r3, #5
   2619c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   261a0:	mov	r9, r0
   261a4:	b	261b4 <main@@Base+0x1012c>
   261a8:	mov	r0, #1
   261ac:	mov	r9, r2
   261b0:	str	r0, [r5, #12]
   261b4:	sub	r1, r8, r9
   261b8:	mov	r0, #8
   261bc:	cmp	r1, #8
   261c0:	movcc	r0, r1
   261c4:	sub	r2, r0, #1
   261c8:	cmp	r2, #7
   261cc:	bhi	26894 <main@@Base+0x1080c>
   261d0:	str	r1, [sp, #24]
   261d4:	add	r0, pc, #36	; 0x24
   261d8:	mov	lr, r5
   261dc:	mov	sl, #0
   261e0:	mov	ip, #0
   261e4:	mov	r6, #0
   261e8:	mov	r1, #0
   261ec:	mov	r3, #0
   261f0:	mov	r5, #0
   261f4:	mov	r7, #0
   261f8:	mov	r4, #0
   261fc:	ldr	pc, [r0, r2, lsl #2]
   26200:	andeq	r6, r2, r4, ror #4
   26204:	andeq	r6, r2, ip, asr r2
   26208:	andeq	r6, r2, r4, asr r2
   2620c:	andeq	r6, r2, ip, asr #4
   26210:	andeq	r6, r2, r0, asr #4
   26214:	andeq	r6, r2, r4, lsr r2
   26218:	andeq	r6, r2, r4, lsr #4
   2621c:	andeq	r6, r2, r0, lsr #4
   26220:	ldrb	ip, [r9, #7]
   26224:	ldrb	r0, [r9, #6]
   26228:	mov	r6, sl
   2622c:	orr	r0, ip, r0, lsl #8
   26230:	mov	sl, r0
   26234:	ldrb	r0, [r9, #5]
   26238:	mov	r1, r6
   2623c:	orr	sl, sl, r0, lsl #16
   26240:	ldrb	r0, [r9, #4]
   26244:	mov	r3, r1
   26248:	orr	sl, sl, r0, lsl #24
   2624c:	ldrb	r0, [r9, #3]
   26250:	orr	r5, r0, r3
   26254:	ldrb	r0, [r9, #2]
   26258:	orr	r7, r5, r0, lsl #8
   2625c:	ldrb	r0, [r9, #1]
   26260:	orr	r4, r7, r0, lsl #16
   26264:	movw	r2, #30976	; 0x7900
   26268:	movt	r2, #24942	; 0x616e
   2626c:	add	r0, r2, #95	; 0x5f
   26270:	eor	r1, sl, r0
   26274:	ldrb	r0, [r9]
   26278:	orr	r4, r4, r0, lsl #24
   2627c:	movw	r0, #28281	; 0x6e79
   26280:	movt	r0, #28001	; 0x6d61
   26284:	eor	r0, r4, r0
   26288:	orrs	r1, r1, r0
   2628c:	bne	26348 <main@@Base+0x102c0>
   26290:	add	r6, r9, #8
   26294:	ldr	r7, [sp, #20]
   26298:	mov	r1, #8
   2629c:	mov	r5, lr
   262a0:	sub	r0, r8, r6
   262a4:	cmp	r0, #8
   262a8:	movcc	r1, r0
   262ac:	sub	r2, r1, #1
   262b0:	cmp	r2, #7
   262b4:	bhi	267c8 <main@@Base+0x10740>
   262b8:	add	r3, pc, #4
   262bc:	mov	r1, #0
   262c0:	ldr	pc, [r3, r2, lsl #2]
   262c4:	strdeq	r6, [r2], -r8
   262c8:	strdeq	r6, [r2], -r0
   262cc:	andeq	r6, r2, r8, ror #5
   262d0:	andeq	r6, r2, r4, ror #5
   262d4:	andeq	r6, r2, r4, ror #5
   262d8:	andeq	r6, r2, r4, ror #5
   262dc:	andeq	r6, r2, r4, ror #5
   262e0:	andeq	r6, r2, r4, ror #5
   262e4:	ldrb	r1, [r9, #11]
   262e8:	ldrb	r2, [r9, #10]
   262ec:	orr	r1, r1, r2, lsl #8
   262f0:	ldrb	r2, [r9, #9]
   262f4:	orr	r1, r1, r2, lsl #16
   262f8:	ldrb	r2, [r6]
   262fc:	orr	r1, r1, r2, lsl #24
   26300:	movw	r2, #28773	; 0x7065
   26304:	movt	r2, #29817	; 0x7479
   26308:	teq	r1, r2
   2630c:	bne	267c8 <main@@Base+0x10740>
   26310:	cmp	r0, #5
   26314:	blt	267c8 <main@@Base+0x10740>
   26318:	mov	r1, r9
   2631c:	ldr	r2, [r5, #12]
   26320:	ldrb	r0, [r1, #12]!
   26324:	cmp	r2, #0
   26328:	beq	263d0 <main@@Base+0x10348>
   2632c:	cmp	r0, #33	; 0x21
   26330:	bcc	2633c <main@@Base+0x102b4>
   26334:	cmp	r0, #58	; 0x3a
   26338:	bne	267c8 <main@@Base+0x10740>
   2633c:	mov	r0, #0
   26340:	str	r0, [r5, #12]
   26344:	b	263dc <main@@Base+0x10354>
   26348:	ldr	r6, [sp, #24]
   2634c:	bic	r1, sl, #255	; 0xff
   26350:	mov	r5, lr
   26354:	eor	r1, r1, r2
   26358:	orrs	r0, r1, r0
   2635c:	bne	26544 <main@@Base+0x104bc>
   26360:	cmp	r6, #8
   26364:	mov	r1, r9
   26368:	blt	26508 <main@@Base+0x10480>
   2636c:	mov	r2, r9
   26370:	ldr	r1, [r5, #12]
   26374:	ldrb	r0, [r2, #7]!
   26378:	cmp	r1, #0
   2637c:	beq	263a0 <main@@Base+0x10318>
   26380:	cmp	r0, #33	; 0x21
   26384:	bcc	26394 <main@@Base+0x1030c>
   26388:	cmp	r0, #58	; 0x3a
   2638c:	mov	r1, r9
   26390:	bne	26508 <main@@Base+0x10480>
   26394:	mov	r0, #0
   26398:	str	r0, [r5, #12]
   2639c:	b	263b0 <main@@Base+0x10328>
   263a0:	cmp	r0, #34	; 0x22
   263a4:	mov	r1, r9
   263a8:	bne	26508 <main@@Base+0x10480>
   263ac:	add	r2, r9, #8
   263b0:	sub	r0, r8, r2
   263b4:	cmp	r0, #2
   263b8:	blt	26410 <main@@Base+0x10388>
   263bc:	ldrb	r0, [r2]
   263c0:	cmp	r0, #32
   263c4:	bls	263fc <main@@Base+0x10374>
   263c8:	mov	r1, r2
   263cc:	b	26424 <main@@Base+0x1039c>
   263d0:	cmp	r0, #34	; 0x22
   263d4:	bne	267c8 <main@@Base+0x10740>
   263d8:	add	r1, r9, #13
   263dc:	sub	r0, r8, r1
   263e0:	cmp	r0, #2
   263e4:	blt	26484 <main@@Base+0x103fc>
   263e8:	ldrb	r0, [r1]
   263ec:	cmp	r0, #32
   263f0:	bls	26470 <main@@Base+0x103e8>
   263f4:	mov	r2, r1
   263f8:	b	26494 <main@@Base+0x1040c>
   263fc:	bne	26410 <main@@Base+0x10388>
   26400:	mov	r1, r2
   26404:	ldrb	r0, [r1, #1]!
   26408:	cmp	r0, #32
   2640c:	bhi	26424 <main@@Base+0x1039c>
   26410:	mov	r1, r2
   26414:	mov	r0, r5
   26418:	mov	r2, r8
   2641c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26420:	mov	r1, r0
   26424:	cmp	r1, r8
   26428:	beq	2645c <main@@Base+0x103d4>
   2642c:	ldrb	r0, [r1]
   26430:	cmp	r0, #58	; 0x3a
   26434:	bne	2645c <main@@Base+0x103d4>
   26438:	add	r2, r1, #1
   2643c:	sub	r0, r8, r2
   26440:	cmp	r0, #2
   26444:	blt	264f4 <main@@Base+0x1046c>
   26448:	ldrb	r0, [r2]
   2644c:	cmp	r0, #32
   26450:	bls	264e4 <main@@Base+0x1045c>
   26454:	mov	r1, r2
   26458:	b	26508 <main@@Base+0x10480>
   2645c:	mov	r0, r5
   26460:	mov	r2, r8
   26464:	mov	r3, #4
   26468:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2646c:	b	26504 <main@@Base+0x1047c>
   26470:	bne	26484 <main@@Base+0x103fc>
   26474:	mov	r2, r1
   26478:	ldrb	r0, [r2, #1]!
   2647c:	cmp	r0, #32
   26480:	bhi	26494 <main@@Base+0x1040c>
   26484:	mov	r0, r5
   26488:	mov	r2, r8
   2648c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26490:	mov	r2, r0
   26494:	cmp	r2, r8
   26498:	beq	264cc <main@@Base+0x10444>
   2649c:	ldrb	r0, [r2]
   264a0:	cmp	r0, #58	; 0x3a
   264a4:	bne	264cc <main@@Base+0x10444>
   264a8:	add	r1, r2, #1
   264ac:	sub	r0, r8, r1
   264b0:	cmp	r0, #2
   264b4:	blt	26764 <main@@Base+0x106dc>
   264b8:	ldrb	r0, [r1]
   264bc:	cmp	r0, #32
   264c0:	bls	26754 <main@@Base+0x106cc>
   264c4:	mov	r2, r1
   264c8:	b	26774 <main@@Base+0x106ec>
   264cc:	mov	r1, r2
   264d0:	mov	r0, r5
   264d4:	mov	r2, r8
   264d8:	mov	r3, #4
   264dc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   264e0:	b	26770 <main@@Base+0x106e8>
   264e4:	bne	264f4 <main@@Base+0x1046c>
   264e8:	ldrb	r0, [r1, #2]!
   264ec:	cmp	r0, #32
   264f0:	bhi	26508 <main@@Base+0x10480>
   264f4:	mov	r1, r2
   264f8:	mov	r0, r5
   264fc:	mov	r2, r8
   26500:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26504:	mov	r1, r0
   26508:	cmp	r9, r1
   2650c:	beq	26544 <main@@Base+0x104bc>
   26510:	ldr	r0, [sp, #28]
   26514:	mov	r2, #3
   26518:	mov	r3, #0
   2651c:	str	r2, [sp]
   26520:	mov	r2, r8
   26524:	str	r0, [sp, #4]
   26528:	movw	r0, #13436	; 0x347c
   2652c:	movt	r0, #2
   26530:	str	r0, [sp, #8]
   26534:	mov	r0, r5
   26538:	bl	3608c <flatcc_json_parser_union_vector@@Base>
   2653c:	ldr	r7, [sp, #20]
   26540:	b	268a4 <main@@Base+0x1081c>
   26544:	lsr	r1, sl, #16
   26548:	movw	r2, #27000	; 0x6978
   2654c:	movw	r0, #28786	; 0x7072
   26550:	orr	r1, r1, r4, lsl #16
   26554:	movt	r2, #25958	; 0x6566
   26558:	eor	r0, r0, r4, lsr #16
   2655c:	eor	r1, r1, r2
   26560:	orrs	r0, r1, r0
   26564:	bne	265ac <main@@Base+0x10524>
   26568:	ldr	r7, [sp, #20]
   2656c:	cmp	r6, #7
   26570:	mov	r1, r9
   26574:	blt	267f8 <main@@Base+0x10770>
   26578:	mov	r2, r9
   2657c:	ldr	r1, [r5, #12]
   26580:	ldrb	r0, [r2, #6]!
   26584:	cmp	r1, #0
   26588:	beq	2660c <main@@Base+0x10584>
   2658c:	cmp	r0, #33	; 0x21
   26590:	bcc	265a0 <main@@Base+0x10518>
   26594:	cmp	r0, #58	; 0x3a
   26598:	mov	r1, r9
   2659c:	bne	267f8 <main@@Base+0x10770>
   265a0:	mov	r0, #0
   265a4:	str	r0, [r5, #12]
   265a8:	b	2661c <main@@Base+0x10594>
   265ac:	movw	r0, #30313	; 0x7669
   265b0:	ldr	r7, [sp, #20]
   265b4:	and	r1, sl, #-16777216	; 0xff000000
   265b8:	movt	r0, #28015	; 0x6d6f
   265bc:	eor	r1, r1, #1694498816	; 0x65000000
   265c0:	eor	r0, r4, r0
   265c4:	orrs	r0, r1, r0
   265c8:	bne	26894 <main@@Base+0x1080c>
   265cc:	cmp	r6, #6
   265d0:	mov	r1, r9
   265d4:	blt	26850 <main@@Base+0x107c8>
   265d8:	mov	r2, r9
   265dc:	ldr	r1, [r5, #12]
   265e0:	ldrb	r0, [r2, #5]!
   265e4:	cmp	r1, #0
   265e8:	beq	2663c <main@@Base+0x105b4>
   265ec:	cmp	r0, #33	; 0x21
   265f0:	bcc	26600 <main@@Base+0x10578>
   265f4:	cmp	r0, #58	; 0x3a
   265f8:	mov	r1, r9
   265fc:	bne	26850 <main@@Base+0x107c8>
   26600:	mov	r0, #0
   26604:	str	r0, [r5, #12]
   26608:	b	2664c <main@@Base+0x105c4>
   2660c:	cmp	r0, #34	; 0x22
   26610:	mov	r1, r9
   26614:	bne	267f8 <main@@Base+0x10770>
   26618:	add	r2, r9, #7
   2661c:	sub	r0, r8, r2
   26620:	cmp	r0, #2
   26624:	blt	26680 <main@@Base+0x105f8>
   26628:	ldrb	r0, [r2]
   2662c:	cmp	r0, #32
   26630:	bls	2666c <main@@Base+0x105e4>
   26634:	mov	r1, r2
   26638:	b	26694 <main@@Base+0x1060c>
   2663c:	cmp	r0, #34	; 0x22
   26640:	mov	r1, r9
   26644:	bne	26850 <main@@Base+0x107c8>
   26648:	add	r2, r9, #6
   2664c:	sub	r0, r8, r2
   26650:	cmp	r0, #2
   26654:	blt	266f4 <main@@Base+0x1066c>
   26658:	ldrb	r0, [r2]
   2665c:	cmp	r0, #32
   26660:	bls	266e0 <main@@Base+0x10658>
   26664:	mov	r1, r2
   26668:	b	26708 <main@@Base+0x10680>
   2666c:	bne	26680 <main@@Base+0x105f8>
   26670:	mov	r1, r2
   26674:	ldrb	r0, [r1, #1]!
   26678:	cmp	r0, #32
   2667c:	bhi	26694 <main@@Base+0x1060c>
   26680:	mov	r1, r2
   26684:	mov	r0, r5
   26688:	mov	r2, r8
   2668c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26690:	mov	r1, r0
   26694:	cmp	r1, r8
   26698:	beq	266cc <main@@Base+0x10644>
   2669c:	ldrb	r0, [r1]
   266a0:	cmp	r0, #58	; 0x3a
   266a4:	bne	266cc <main@@Base+0x10644>
   266a8:	add	r2, r1, #1
   266ac:	sub	r0, r8, r2
   266b0:	cmp	r0, #2
   266b4:	blt	267e4 <main@@Base+0x1075c>
   266b8:	ldrb	r0, [r2]
   266bc:	cmp	r0, #32
   266c0:	bls	267d4 <main@@Base+0x1074c>
   266c4:	mov	r1, r2
   266c8:	b	267f8 <main@@Base+0x10770>
   266cc:	mov	r0, r5
   266d0:	mov	r2, r8
   266d4:	mov	r3, #4
   266d8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   266dc:	b	267f4 <main@@Base+0x1076c>
   266e0:	bne	266f4 <main@@Base+0x1066c>
   266e4:	mov	r1, r2
   266e8:	ldrb	r0, [r1, #1]!
   266ec:	cmp	r0, #32
   266f0:	bhi	26708 <main@@Base+0x10680>
   266f4:	mov	r1, r2
   266f8:	mov	r0, r5
   266fc:	mov	r2, r8
   26700:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26704:	mov	r1, r0
   26708:	cmp	r1, r8
   2670c:	beq	26740 <main@@Base+0x106b8>
   26710:	ldrb	r0, [r1]
   26714:	cmp	r0, #58	; 0x3a
   26718:	bne	26740 <main@@Base+0x106b8>
   2671c:	add	r2, r1, #1
   26720:	sub	r0, r8, r2
   26724:	cmp	r0, #2
   26728:	blt	2683c <main@@Base+0x107b4>
   2672c:	ldrb	r0, [r2]
   26730:	cmp	r0, #32
   26734:	bls	2682c <main@@Base+0x107a4>
   26738:	mov	r1, r2
   2673c:	b	26850 <main@@Base+0x107c8>
   26740:	mov	r0, r5
   26744:	mov	r2, r8
   26748:	mov	r3, #4
   2674c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   26750:	b	2684c <main@@Base+0x107c4>
   26754:	bne	26764 <main@@Base+0x106dc>
   26758:	ldrb	r0, [r2, #2]!
   2675c:	cmp	r0, #32
   26760:	bhi	26774 <main@@Base+0x106ec>
   26764:	mov	r0, r5
   26768:	mov	r2, r8
   2676c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26770:	mov	r2, r0
   26774:	cmp	r6, r2
   26778:	beq	267c8 <main@@Base+0x10740>
   2677c:	ldr	r0, [sp, #28]
   26780:	mov	r1, #3
   26784:	mov	r3, #0
   26788:	str	r1, [sp]
   2678c:	mov	r1, r2
   26790:	mov	r2, r8
   26794:	str	r0, [sp, #4]
   26798:	movw	r0, #45592	; 0xb218
   2679c:	movt	r0, #5
   267a0:	str	r0, [sp, #8]
   267a4:	movw	r0, #13436	; 0x347c
   267a8:	movt	r0, #2
   267ac:	str	r0, [sp, #12]
   267b0:	movw	r0, #27096	; 0x69d8
   267b4:	movt	r0, #2
   267b8:	str	r0, [sp, #16]
   267bc:	mov	r0, r5
   267c0:	bl	36558 <flatcc_json_parser_union_type_vector@@Base>
   267c4:	b	268a4 <main@@Base+0x1081c>
   267c8:	mov	r0, r5
   267cc:	mov	r1, r6
   267d0:	b	2689c <main@@Base+0x10814>
   267d4:	bne	267e4 <main@@Base+0x1075c>
   267d8:	ldrb	r0, [r1, #2]!
   267dc:	cmp	r0, #32
   267e0:	bhi	267f8 <main@@Base+0x10770>
   267e4:	mov	r1, r2
   267e8:	mov	r0, r5
   267ec:	mov	r2, r8
   267f0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   267f4:	mov	r1, r0
   267f8:	cmp	r9, r1
   267fc:	beq	26894 <main@@Base+0x1080c>
   26800:	mov	r0, r5
   26804:	mov	r2, r8
   26808:	add	r3, sp, #32
   2680c:	bl	269ec <main@@Base+0x10964>
   26810:	ldr	r6, [sp, #32]
   26814:	mov	r4, r0
   26818:	cmp	r6, #0
   2681c:	beq	26024 <main@@Base+0xff9c>
   26820:	ldr	r0, [r5]
   26824:	mov	r1, #0
   26828:	b	26880 <main@@Base+0x107f8>
   2682c:	bne	2683c <main@@Base+0x107b4>
   26830:	ldrb	r0, [r1, #2]!
   26834:	cmp	r0, #32
   26838:	bhi	26850 <main@@Base+0x107c8>
   2683c:	mov	r1, r2
   26840:	mov	r0, r5
   26844:	mov	r2, r8
   26848:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2684c:	mov	r1, r0
   26850:	cmp	r9, r1
   26854:	beq	26894 <main@@Base+0x1080c>
   26858:	mov	r0, r5
   2685c:	mov	r2, r8
   26860:	add	r3, sp, #32
   26864:	bl	29c90 <main@@Base+0x13c08>
   26868:	ldr	r6, [sp, #32]
   2686c:	mov	r4, r0
   26870:	cmp	r6, #0
   26874:	beq	26024 <main@@Base+0xff9c>
   26878:	ldr	r0, [r5]
   2687c:	mov	r1, #1
   26880:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   26884:	cmp	r0, #0
   26888:	beq	26024 <main@@Base+0xff9c>
   2688c:	str	r6, [r0]
   26890:	b	268a8 <main@@Base+0x10820>
   26894:	mov	r0, r5
   26898:	mov	r1, r9
   2689c:	mov	r2, r8
   268a0:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   268a4:	mov	r4, r0
   268a8:	sub	r0, r8, r4
   268ac:	cmp	r0, #2
   268b0:	blt	268dc <main@@Base+0x10854>
   268b4:	ldrb	r0, [r4]
   268b8:	cmp	r0, #32
   268bc:	bls	268c8 <main@@Base+0x10840>
   268c0:	mov	r2, r4
   268c4:	b	268f0 <main@@Base+0x10868>
   268c8:	bne	268dc <main@@Base+0x10854>
   268cc:	mov	r2, r4
   268d0:	ldrb	r0, [r2, #1]!
   268d4:	cmp	r0, #32
   268d8:	bhi	268f0 <main@@Base+0x10868>
   268dc:	mov	r0, r5
   268e0:	mov	r1, r4
   268e4:	mov	r2, r8
   268e8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   268ec:	mov	r2, r0
   268f0:	cmp	r2, r8
   268f4:	beq	26960 <main@@Base+0x108d8>
   268f8:	ldrb	r0, [r2]
   268fc:	cmp	r0, #44	; 0x2c
   26900:	bne	26968 <main@@Base+0x108e0>
   26904:	add	r1, r2, #1
   26908:	sub	r0, r8, r1
   2690c:	cmp	r0, #2
   26910:	blt	26938 <main@@Base+0x108b0>
   26914:	ldrb	r0, [r1]
   26918:	cmp	r0, #32
   2691c:	bls	26928 <main@@Base+0x108a0>
   26920:	mov	r2, r1
   26924:	b	26948 <main@@Base+0x108c0>
   26928:	bne	26938 <main@@Base+0x108b0>
   2692c:	ldrb	r0, [r2, #2]!
   26930:	cmp	r0, #32
   26934:	bhi	26948 <main@@Base+0x108c0>
   26938:	mov	r0, r5
   2693c:	mov	r2, r8
   26940:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26944:	mov	r2, r0
   26948:	cmp	r2, r8
   2694c:	beq	26994 <main@@Base+0x1090c>
   26950:	ldrb	r0, [r2]
   26954:	cmp	r0, #125	; 0x7d
   26958:	bne	26160 <main@@Base+0x100d8>
   2695c:	b	26970 <main@@Base+0x108e8>
   26960:	mov	r4, r8
   26964:	b	260bc <main@@Base+0x10034>
   26968:	cmp	r0, #125	; 0x7d
   2696c:	bne	269a0 <main@@Base+0x10918>
   26970:	add	r1, r2, #1
   26974:	sub	r0, r8, r1
   26978:	cmp	r0, #2
   2697c:	blt	269c8 <main@@Base+0x10940>
   26980:	ldrb	r0, [r1]
   26984:	cmp	r0, #32
   26988:	bls	269b4 <main@@Base+0x1092c>
   2698c:	mov	r4, r1
   26990:	b	260bc <main@@Base+0x10034>
   26994:	mov	r0, r5
   26998:	mov	r1, r8
   2699c:	b	269a8 <main@@Base+0x10920>
   269a0:	mov	r0, r5
   269a4:	mov	r1, r2
   269a8:	mov	r2, r8
   269ac:	mov	r3, #10
   269b0:	b	260b4 <main@@Base+0x1002c>
   269b4:	bne	269c8 <main@@Base+0x10940>
   269b8:	ldrb	r0, [r2, #2]!
   269bc:	mov	r4, r2
   269c0:	cmp	r0, #32
   269c4:	bhi	260bc <main@@Base+0x10034>
   269c8:	mov	r0, r5
   269cc:	mov	r2, r8
   269d0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   269d4:	b	260b8 <main@@Base+0x10030>
   269d8:	cmp	r0, #5
   269dc:	mov	r1, #0
   269e0:	movwcc	r1, #1
   269e4:	mov	r0, r1
   269e8:	bx	lr
   269ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   269f0:	add	fp, sp, #28
   269f4:	sub	sp, sp, #60	; 0x3c
   269f8:	mov	r9, r0
   269fc:	mov	r0, #0
   26a00:	mov	r4, r1
   26a04:	mov	r1, #3
   26a08:	mov	r6, r3
   26a0c:	mov	r8, r2
   26a10:	str	r0, [r3]
   26a14:	ldr	r0, [r9]
   26a18:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   26a1c:	cmp	r0, #0
   26a20:	bne	26a80 <main@@Base+0x109f8>
   26a24:	cmp	r4, r8
   26a28:	beq	26a5c <main@@Base+0x109d4>
   26a2c:	ldrb	r0, [r4]
   26a30:	cmp	r0, #123	; 0x7b
   26a34:	bne	26a5c <main@@Base+0x109d4>
   26a38:	add	r1, r4, #1
   26a3c:	sub	r0, r8, r1
   26a40:	cmp	r0, #2
   26a44:	blt	26acc <main@@Base+0x10a44>
   26a48:	ldrb	r0, [r1]
   26a4c:	cmp	r0, #32
   26a50:	bls	26abc <main@@Base+0x10a34>
   26a54:	mov	r4, r1
   26a58:	b	26adc <main@@Base+0x10a54>
   26a5c:	mov	r0, r9
   26a60:	mov	r1, r4
   26a64:	mov	r2, r8
   26a68:	mov	r3, #21
   26a6c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   26a70:	mov	r4, r0
   26a74:	ldr	r0, [r9, #24]
   26a78:	cmp	r0, #0
   26a7c:	beq	26aa4 <main@@Base+0x10a1c>
   26a80:	mov	r0, r9
   26a84:	mov	r1, r4
   26a88:	mov	r2, r8
   26a8c:	mov	r3, #33	; 0x21
   26a90:	bl	333fc <flatcc_json_parser_set_error@@Base>
   26a94:	mov	r4, r0
   26a98:	mov	r0, r4
   26a9c:	sub	sp, fp, #28
   26aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26aa4:	ldr	r0, [r9]
   26aa8:	bl	2ff38 <flatcc_builder_end_table@@Base>
   26aac:	cmp	r0, #0
   26ab0:	str	r0, [r6]
   26ab4:	bne	26a98 <main@@Base+0x10a10>
   26ab8:	b	26a80 <main@@Base+0x109f8>
   26abc:	bne	26acc <main@@Base+0x10a44>
   26ac0:	ldrb	r0, [r4, #2]!
   26ac4:	cmp	r0, #32
   26ac8:	bhi	26adc <main@@Base+0x10a54>
   26acc:	mov	r0, r9
   26ad0:	mov	r2, r8
   26ad4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26ad8:	mov	r4, r0
   26adc:	cmp	r4, r8
   26ae0:	mov	r2, r8
   26ae4:	beq	26b20 <main@@Base+0x10a98>
   26ae8:	ldrb	r0, [r4]
   26aec:	cmp	r0, #125	; 0x7d
   26af0:	bne	26b1c <main@@Base+0x10a94>
   26af4:	add	r1, r4, #1
   26af8:	sub	r0, r8, r1
   26afc:	cmp	r0, #2
   26b00:	blt	29c60 <main@@Base+0x13bd8>
   26b04:	ldrb	r0, [r1]
   26b08:	cmp	r0, #32
   26b0c:	bhi	29c24 <main@@Base+0x13b9c>
   26b10:	bne	29c60 <main@@Base+0x13bd8>
   26b14:	ldrb	r0, [r4, #2]!
   26b18:	b	29c58 <main@@Base+0x13bd0>
   26b1c:	mov	r2, r4
   26b20:	add	r0, r9, #12
   26b24:	movw	r1, #25186	; 0x6262
   26b28:	str	r9, [sp, #16]
   26b2c:	str	r6, [sp, #24]
   26b30:	str	r0, [sp, #20]
   26b34:	movw	r0, #257	; 0x101
   26b38:	movt	r1, #25186	; 0x6262
   26b3c:	movt	r0, #257	; 0x101
   26b40:	add	r0, r1, r0
   26b44:	str	r0, [sp, #12]
   26b48:	movw	r0, #514	; 0x202
   26b4c:	movt	r0, #514	; 0x202
   26b50:	add	r0, r1, r0
   26b54:	str	r0, [sp, #8]
   26b58:	cmp	r2, r8
   26b5c:	mov	sl, r8
   26b60:	beq	26bb4 <main@@Base+0x10b2c>
   26b64:	ldrb	r0, [r2]
   26b68:	cmp	r0, #46	; 0x2e
   26b6c:	beq	26b88 <main@@Base+0x10b00>
   26b70:	cmp	r0, #34	; 0x22
   26b74:	bne	26ba4 <main@@Base+0x10b1c>
   26b78:	ldr	r0, [sp, #20]
   26b7c:	mov	r1, #0
   26b80:	add	sl, r2, #1
   26b84:	b	26bb0 <main@@Base+0x10b28>
   26b88:	mov	r1, r2
   26b8c:	mov	r0, r9
   26b90:	mov	r2, r8
   26b94:	mov	r3, #5
   26b98:	bl	333fc <flatcc_json_parser_set_error@@Base>
   26b9c:	mov	sl, r0
   26ba0:	b	26bb4 <main@@Base+0x10b2c>
   26ba4:	ldr	r0, [sp, #20]
   26ba8:	mov	r1, #1
   26bac:	mov	sl, r2
   26bb0:	str	r1, [r0]
   26bb4:	sub	r0, r8, sl
   26bb8:	mov	r1, #8
   26bbc:	cmp	r0, #8
   26bc0:	movcs	r0, r1
   26bc4:	sub	r3, r0, #1
   26bc8:	cmp	r3, #7
   26bcc:	bhi	26e58 <main@@Base+0x10dd0>
   26bd0:	add	r5, pc, #32
   26bd4:	mov	r0, #0
   26bd8:	mov	ip, #0
   26bdc:	mov	lr, #0
   26be0:	mov	r7, #0
   26be4:	mov	r2, #0
   26be8:	mov	r6, #0
   26bec:	mov	r4, #0
   26bf0:	mov	r1, #0
   26bf4:	ldr	pc, [r5, r3, lsl #2]
   26bf8:	andeq	r6, r2, ip, asr ip
   26bfc:	andeq	r6, r2, r4, asr ip
   26c00:	andeq	r6, r2, ip, asr #24
   26c04:	andeq	r6, r2, r4, asr #24
   26c08:	andeq	r6, r2, r8, lsr ip
   26c0c:	andeq	r6, r2, ip, lsr #24
   26c10:	andeq	r6, r2, ip, lsl ip
   26c14:	andeq	r6, r2, r8, lsl ip
   26c18:	ldrb	ip, [sl, #7]
   26c1c:	ldrb	r1, [sl, #6]
   26c20:	mov	lr, r0
   26c24:	orr	r1, ip, r1, lsl #8
   26c28:	mov	r0, r1
   26c2c:	ldrb	r1, [sl, #5]
   26c30:	mov	r7, lr
   26c34:	orr	r0, r0, r1, lsl #16
   26c38:	ldrb	r1, [sl, #4]
   26c3c:	mov	r2, r7
   26c40:	orr	r0, r0, r1, lsl #24
   26c44:	ldrb	r1, [sl, #3]
   26c48:	orr	r6, r1, r2
   26c4c:	ldrb	r1, [sl, #2]
   26c50:	orr	r4, r6, r1, lsl #8
   26c54:	ldrb	r1, [sl, #1]
   26c58:	orr	r1, r4, r1, lsl #16
   26c5c:	movw	r2, #28526	; 0x6f6e
   26c60:	movt	r2, #27251	; 0x6a73
   26c64:	eor	r0, r0, r2
   26c68:	ldrb	r2, [sl]
   26c6c:	orr	r1, r1, r2, lsl #24
   26c70:	movw	r2, #29556	; 0x7374
   26c74:	movt	r2, #29797	; 0x7465
   26c78:	eor	r1, r1, r2
   26c7c:	orrs	r0, r0, r1
   26c80:	bne	26e58 <main@@Base+0x10dd0>
   26c84:	add	r1, sl, #8
   26c88:	mov	r2, #8
   26c8c:	sub	r0, r8, r1
   26c90:	cmp	r0, #8
   26c94:	movcs	r0, r2
   26c98:	sub	r7, r0, #1
   26c9c:	cmp	r7, #7
   26ca0:	bhi	26e64 <main@@Base+0x10ddc>
   26ca4:	add	r0, pc, #32
   26ca8:	mov	r9, #0
   26cac:	mov	ip, #0
   26cb0:	mov	lr, #0
   26cb4:	mov	r6, #0
   26cb8:	mov	r3, #0
   26cbc:	mov	r5, #0
   26cc0:	mov	r2, #0
   26cc4:	mov	r4, #0
   26cc8:	ldr	pc, [r0, r7, lsl #2]
   26ccc:	andeq	r6, r2, r0, lsr sp
   26cd0:	andeq	r6, r2, r8, lsr #26
   26cd4:	andeq	r6, r2, r0, lsr #26
   26cd8:	andeq	r6, r2, r8, lsl sp
   26cdc:	andeq	r6, r2, ip, lsl #26
   26ce0:	andeq	r6, r2, r0, lsl #26
   26ce4:	strdeq	r6, [r2], -r0
   26ce8:	andeq	r6, r2, ip, ror #25
   26cec:	ldrb	ip, [sl, #15]
   26cf0:	ldrb	r0, [sl, #14]
   26cf4:	mov	lr, r9
   26cf8:	orr	r0, ip, r0, lsl #8
   26cfc:	mov	r9, r0
   26d00:	ldrb	r0, [sl, #13]
   26d04:	mov	r6, lr
   26d08:	orr	r9, r9, r0, lsl #16
   26d0c:	ldrb	r0, [sl, #12]
   26d10:	mov	r3, r6
   26d14:	orr	r9, r9, r0, lsl #24
   26d18:	ldrb	r0, [sl, #11]
   26d1c:	orr	r5, r0, r3
   26d20:	ldrb	r0, [sl, #10]
   26d24:	orr	r2, r5, r0, lsl #8
   26d28:	ldrb	r0, [sl, #9]
   26d2c:	orr	r4, r2, r0, lsl #16
   26d30:	ldrb	r2, [r1]
   26d34:	movw	r0, #28769	; 0x7061
   26d38:	movw	r3, #25958	; 0x6566
   26d3c:	movt	r0, #27000	; 0x6978
   26d40:	movt	r3, #28786	; 0x7072
   26d44:	eor	r0, r9, r0
   26d48:	orr	r2, r4, r2, lsl #24
   26d4c:	eor	r2, r2, r3
   26d50:	orrs	r0, r0, r2
   26d54:	bne	26e64 <main@@Base+0x10ddc>
   26d58:	add	ip, sl, #16
   26d5c:	mov	r0, #8
   26d60:	sub	r9, r8, ip
   26d64:	cmp	r9, #8
   26d68:	movcc	r0, r9
   26d6c:	sub	r2, r0, #1
   26d70:	cmp	r2, #7
   26d74:	bhi	271cc <main@@Base+0x11144>
   26d78:	add	r7, pc, #24
   26d7c:	mov	r0, #0
   26d80:	mov	r1, #0
   26d84:	mov	r3, #0
   26d88:	mov	r6, #0
   26d8c:	mov	r4, #0
   26d90:	mov	r5, #0
   26d94:	ldr	pc, [r7, r2, lsl #2]
   26d98:	andeq	r6, r2, r8, ror #27
   26d9c:	andeq	r6, r2, r0, ror #27
   26da0:	ldrdeq	r6, [r2], -r8
   26da4:	ldrdeq	r6, [r2], -r0
   26da8:	andeq	r6, r2, r0, asr #27
   26dac:			; <UNDEFINED> instruction: 0x00026db8
   26db0:			; <UNDEFINED> instruction: 0x00026db8
   26db4:			; <UNDEFINED> instruction: 0x00026db8
   26db8:	ldrb	r1, [sl, #21]
   26dbc:	lsl	r1, r1, #16
   26dc0:	ldrb	r2, [sl, #20]
   26dc4:	mov	r3, r0
   26dc8:	orr	r1, r1, r2, lsl #24
   26dcc:	mov	r0, r1
   26dd0:	ldrb	r1, [sl, #19]
   26dd4:	orr	r6, r1, r3
   26dd8:	ldrb	r1, [sl, #18]
   26ddc:	orr	r4, r6, r1, lsl #8
   26de0:	ldrb	r1, [sl, #17]
   26de4:	orr	r5, r4, r1, lsl #16
   26de8:	mov	r6, r0
   26dec:	movw	r1, #0
   26df0:	movw	r3, #26990	; 0x696e
   26df4:	bfc	r6, #0, #16
   26df8:	movt	r1, #26418	; 0x6732
   26dfc:	movt	r3, #29299	; 0x7273
   26e00:	eor	r2, r6, r1
   26e04:	ldrb	r1, [ip]
   26e08:	orr	r1, r5, r1, lsl #24
   26e0c:	eor	r5, r1, r3
   26e10:	orrs	r2, r2, r5
   26e14:	bne	26e70 <main@@Base+0x10de8>
   26e18:	cmp	r9, #7
   26e1c:	blt	271cc <main@@Base+0x11144>
   26e20:	ldr	r2, [sp, #20]
   26e24:	mov	r1, sl
   26e28:	ldrb	r0, [r1, #22]!
   26e2c:	ldr	r2, [r2]
   26e30:	cmp	r2, #0
   26e34:	beq	26ecc <main@@Base+0x10e44>
   26e38:	cmp	r0, #33	; 0x21
   26e3c:	bcc	26e48 <main@@Base+0x10dc0>
   26e40:	cmp	r0, #58	; 0x3a
   26e44:	bne	271cc <main@@Base+0x11144>
   26e48:	ldr	r0, [sp, #20]
   26e4c:	mov	r2, #0
   26e50:	str	r2, [r0]
   26e54:	b	26ed8 <main@@Base+0x10e50>
   26e58:	mov	r0, r9
   26e5c:	mov	r1, sl
   26e60:	b	271d8 <main@@Base+0x11150>
   26e64:	ldr	r9, [sp, #16]
   26e68:	mov	r0, r9
   26e6c:	b	271d8 <main@@Base+0x11150>
   26e70:	cmp	r9, #6
   26e74:	blt	27170 <main@@Base+0x110e8>
   26e78:	movw	r2, #26990	; 0x696e
   26e7c:	and	r0, r0, #-16777216	; 0xff000000
   26e80:	movt	r2, #29299	; 0x7273
   26e84:	eor	r0, r0, #1728053248	; 0x67000000
   26e88:	eor	r1, r1, r2
   26e8c:	orrs	r0, r0, r1
   26e90:	bne	27170 <main@@Base+0x110e8>
   26e94:	ldr	r2, [sp, #20]
   26e98:	mov	r1, sl
   26e9c:	ldrb	r0, [r1, #21]!
   26ea0:	ldr	r2, [r2]
   26ea4:	cmp	r2, #0
   26ea8:	beq	26efc <main@@Base+0x10e74>
   26eac:	cmp	r0, #33	; 0x21
   26eb0:	bcc	26ebc <main@@Base+0x10e34>
   26eb4:	cmp	r0, #58	; 0x3a
   26eb8:	bne	27170 <main@@Base+0x110e8>
   26ebc:	ldr	r0, [sp, #20]
   26ec0:	mov	r2, #0
   26ec4:	str	r2, [r0]
   26ec8:	b	26f08 <main@@Base+0x10e80>
   26ecc:	cmp	r0, #34	; 0x22
   26ed0:	bne	271cc <main@@Base+0x11144>
   26ed4:	add	r1, sl, #23
   26ed8:	ldr	r5, [sp, #16]
   26edc:	sub	r0, r8, r1
   26ee0:	cmp	r0, #2
   26ee4:	blt	26f3c <main@@Base+0x10eb4>
   26ee8:	ldrb	r0, [r1]
   26eec:	cmp	r0, #32
   26ef0:	bls	26f28 <main@@Base+0x10ea0>
   26ef4:	mov	r4, r1
   26ef8:	b	26f54 <main@@Base+0x10ecc>
   26efc:	cmp	r0, #34	; 0x22
   26f00:	bne	27170 <main@@Base+0x110e8>
   26f04:	add	r1, sl, #22
   26f08:	sub	r0, r8, r1
   26f0c:	cmp	r0, #2
   26f10:	blt	26fbc <main@@Base+0x10f34>
   26f14:	ldrb	r0, [r1]
   26f18:	cmp	r0, #32
   26f1c:	bls	26fa8 <main@@Base+0x10f20>
   26f20:	mov	r4, r1
   26f24:	b	26fd4 <main@@Base+0x10f4c>
   26f28:	bne	26f3c <main@@Base+0x10eb4>
   26f2c:	mov	r4, r1
   26f30:	ldrb	r0, [r4, #1]!
   26f34:	cmp	r0, #32
   26f38:	bhi	26f54 <main@@Base+0x10ecc>
   26f3c:	mov	r0, r5
   26f40:	mov	r2, r8
   26f44:	mov	r4, ip
   26f48:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26f4c:	mov	ip, r4
   26f50:	mov	r4, r0
   26f54:	mov	r6, ip
   26f58:	cmp	r4, r8
   26f5c:	beq	26f90 <main@@Base+0x10f08>
   26f60:	ldrb	r0, [r4]
   26f64:	cmp	r0, #58	; 0x3a
   26f68:	bne	26f90 <main@@Base+0x10f08>
   26f6c:	add	r1, r4, #1
   26f70:	sub	r0, r8, r1
   26f74:	cmp	r0, #2
   26f78:	blt	27038 <main@@Base+0x10fb0>
   26f7c:	ldrb	r0, [r1]
   26f80:	cmp	r0, #32
   26f84:	bls	27028 <main@@Base+0x10fa0>
   26f88:	mov	r4, r1
   26f8c:	b	27048 <main@@Base+0x10fc0>
   26f90:	mov	r0, r5
   26f94:	mov	r1, r4
   26f98:	mov	r2, r8
   26f9c:	mov	r3, #4
   26fa0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   26fa4:	b	27044 <main@@Base+0x10fbc>
   26fa8:	bne	26fbc <main@@Base+0x10f34>
   26fac:	mov	r4, r1
   26fb0:	ldrb	r0, [r4, #1]!
   26fb4:	cmp	r0, #32
   26fb8:	bhi	26fd4 <main@@Base+0x10f4c>
   26fbc:	ldr	r0, [sp, #16]
   26fc0:	mov	r2, r8
   26fc4:	mov	r4, ip
   26fc8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   26fcc:	mov	ip, r4
   26fd0:	mov	r4, r0
   26fd4:	mov	r7, ip
   26fd8:	cmp	r4, r8
   26fdc:	beq	27010 <main@@Base+0x10f88>
   26fe0:	ldrb	r0, [r4]
   26fe4:	cmp	r0, #58	; 0x3a
   26fe8:	bne	27010 <main@@Base+0x10f88>
   26fec:	add	r1, r4, #1
   26ff0:	sub	r0, r8, r1
   26ff4:	cmp	r0, #2
   26ff8:	blt	27100 <main@@Base+0x11078>
   26ffc:	ldrb	r0, [r1]
   27000:	cmp	r0, #32
   27004:	bls	270f0 <main@@Base+0x11068>
   27008:	mov	r4, r1
   2700c:	b	27110 <main@@Base+0x11088>
   27010:	ldr	r0, [sp, #16]
   27014:	mov	r1, r4
   27018:	mov	r2, r8
   2701c:	mov	r3, #4
   27020:	bl	333fc <flatcc_json_parser_set_error@@Base>
   27024:	b	2710c <main@@Base+0x11084>
   27028:	bne	27038 <main@@Base+0x10fb0>
   2702c:	ldrb	r0, [r4, #2]!
   27030:	cmp	r0, #32
   27034:	bhi	27048 <main@@Base+0x10fc0>
   27038:	mov	r0, r5
   2703c:	mov	r2, r8
   27040:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   27044:	mov	r4, r0
   27048:	mov	ip, r6
   2704c:	cmp	r6, r4
   27050:	beq	271cc <main@@Base+0x11144>
   27054:	ldr	r9, [sp, #16]
   27058:	mov	r1, #2
   2705c:	ldr	r0, [r9]
   27060:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   27064:	cmp	r0, #0
   27068:	bne	29c74 <main@@Base+0x13bec>
   2706c:	cmp	r4, r8
   27070:	beq	270a8 <main@@Base+0x11020>
   27074:	ldrb	r0, [r4]
   27078:	cmp	r0, #123	; 0x7b
   2707c:	bne	270a8 <main@@Base+0x11020>
   27080:	ldr	r6, [sp, #24]
   27084:	add	r1, r4, #1
   27088:	sub	r0, r8, r1
   2708c:	cmp	r0, #2
   27090:	blt	273a4 <main@@Base+0x1131c>
   27094:	ldrb	r0, [r1]
   27098:	cmp	r0, #32
   2709c:	bls	27394 <main@@Base+0x1130c>
   270a0:	mov	r4, r1
   270a4:	b	273b4 <main@@Base+0x1132c>
   270a8:	mov	r0, r9
   270ac:	mov	r1, r4
   270b0:	mov	r2, r8
   270b4:	mov	r3, #21
   270b8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   270bc:	ldr	r6, [sp, #24]
   270c0:	mov	r4, r0
   270c4:	ldr	r0, [r9, #24]
   270c8:	cmp	r0, #0
   270cc:	bne	29c74 <main@@Base+0x13bec>
   270d0:	ldr	r0, [r9]
   270d4:	bl	2ff38 <flatcc_builder_end_table@@Base>
   270d8:	cmp	r0, #0
   270dc:	beq	29c74 <main@@Base+0x13bec>
   270e0:	mov	r7, r0
   270e4:	ldr	r0, [r9]
   270e8:	mov	r1, #1
   270ec:	b	29168 <main@@Base+0x130e0>
   270f0:	bne	27100 <main@@Base+0x11078>
   270f4:	ldrb	r0, [r4, #2]!
   270f8:	cmp	r0, #32
   270fc:	bhi	27110 <main@@Base+0x11088>
   27100:	ldr	r0, [sp, #16]
   27104:	mov	r2, r8
   27108:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2710c:	mov	r4, r0
   27110:	mov	ip, r7
   27114:	cmp	r7, r4
   27118:	beq	27170 <main@@Base+0x110e8>
   2711c:	ldr	r9, [sp, #16]
   27120:	mov	r1, #9
   27124:	ldr	r0, [r9]
   27128:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   2712c:	cmp	r0, #0
   27130:	bne	29c74 <main@@Base+0x13bec>
   27134:	cmp	r4, r8
   27138:	beq	272a0 <main@@Base+0x11218>
   2713c:	ldrb	r0, [r4]
   27140:	cmp	r0, #123	; 0x7b
   27144:	bne	272a0 <main@@Base+0x11218>
   27148:	ldr	r6, [sp, #24]
   2714c:	add	r1, r4, #1
   27150:	sub	r0, r8, r1
   27154:	cmp	r0, #2
   27158:	blt	27bc4 <main@@Base+0x11b3c>
   2715c:	ldrb	r0, [r1]
   27160:	cmp	r0, #32
   27164:	bls	27bb4 <main@@Base+0x11b2c>
   27168:	mov	r4, r1
   2716c:	b	27bd4 <main@@Base+0x11b4c>
   27170:	movw	r0, #0
   27174:	movt	r0, #26418	; 0x6732
   27178:	add	r0, r0, #65536	; 0x10000
   2717c:	eor	r0, r6, r0
   27180:	orrs	r0, r0, r5
   27184:	bne	271cc <main@@Base+0x11144>
   27188:	cmp	r9, #7
   2718c:	ldr	r9, [sp, #16]
   27190:	blt	271d0 <main@@Base+0x11148>
   27194:	ldr	r2, [sp, #20]
   27198:	mov	r1, sl
   2719c:	ldrb	r0, [r1, #22]!
   271a0:	ldr	r2, [r2]
   271a4:	cmp	r2, #0
   271a8:	beq	272e8 <main@@Base+0x11260>
   271ac:	cmp	r0, #33	; 0x21
   271b0:	bcc	271bc <main@@Base+0x11134>
   271b4:	cmp	r0, #58	; 0x3a
   271b8:	bne	271d0 <main@@Base+0x11148>
   271bc:	ldr	r0, [sp, #20]
   271c0:	mov	r2, #0
   271c4:	str	r2, [r0]
   271c8:	b	272f4 <main@@Base+0x1126c>
   271cc:	ldr	r9, [sp, #16]
   271d0:	mov	r0, r9
   271d4:	mov	r1, ip
   271d8:	mov	r2, r8
   271dc:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   271e0:	ldr	r6, [sp, #24]
   271e4:	mov	r4, r0
   271e8:	sub	r0, r8, r4
   271ec:	cmp	r0, #2
   271f0:	blt	2721c <main@@Base+0x11194>
   271f4:	ldrb	r0, [r4]
   271f8:	cmp	r0, #32
   271fc:	bls	27208 <main@@Base+0x11180>
   27200:	mov	r2, r4
   27204:	b	27230 <main@@Base+0x111a8>
   27208:	bne	2721c <main@@Base+0x11194>
   2720c:	mov	r2, r4
   27210:	ldrb	r0, [r2, #1]!
   27214:	cmp	r0, #32
   27218:	bhi	27230 <main@@Base+0x111a8>
   2721c:	mov	r0, r9
   27220:	mov	r1, r4
   27224:	mov	r2, r8
   27228:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2722c:	mov	r2, r0
   27230:	cmp	r2, r8
   27234:	beq	29bf8 <main@@Base+0x13b70>
   27238:	ldrb	r0, [r2]
   2723c:	cmp	r0, #44	; 0x2c
   27240:	bne	29c00 <main@@Base+0x13b78>
   27244:	add	r1, r2, #1
   27248:	sub	r0, r8, r1
   2724c:	cmp	r0, #2
   27250:	blt	27278 <main@@Base+0x111f0>
   27254:	ldrb	r0, [r1]
   27258:	cmp	r0, #32
   2725c:	bls	27268 <main@@Base+0x111e0>
   27260:	mov	r2, r1
   27264:	b	27288 <main@@Base+0x11200>
   27268:	bne	27278 <main@@Base+0x111f0>
   2726c:	ldrb	r0, [r2, #2]!
   27270:	cmp	r0, #32
   27274:	bhi	27288 <main@@Base+0x11200>
   27278:	mov	r0, r9
   2727c:	mov	r2, r8
   27280:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   27284:	mov	r2, r0
   27288:	cmp	r2, r8
   2728c:	beq	29c2c <main@@Base+0x13ba4>
   27290:	ldrb	r0, [r2]
   27294:	cmp	r0, #125	; 0x7d
   27298:	bne	26b58 <main@@Base+0x10ad0>
   2729c:	b	29c08 <main@@Base+0x13b80>
   272a0:	mov	r0, r9
   272a4:	mov	r1, r4
   272a8:	mov	r2, r8
   272ac:	mov	r3, #21
   272b0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   272b4:	ldr	r6, [sp, #24]
   272b8:	mov	r4, r0
   272bc:	ldr	r0, [r9, #24]
   272c0:	cmp	r0, #0
   272c4:	bne	29c74 <main@@Base+0x13bec>
   272c8:	ldr	r0, [r9]
   272cc:	bl	2ff38 <flatcc_builder_end_table@@Base>
   272d0:	cmp	r0, #0
   272d4:	beq	29c74 <main@@Base+0x13bec>
   272d8:	mov	r7, r0
   272dc:	ldr	r0, [r9]
   272e0:	mov	r1, #0
   272e4:	b	29168 <main@@Base+0x130e0>
   272e8:	cmp	r0, #34	; 0x22
   272ec:	bne	271d0 <main@@Base+0x11148>
   272f0:	add	r1, sl, #23
   272f4:	sub	r0, r8, r1
   272f8:	cmp	r0, #2
   272fc:	blt	27328 <main@@Base+0x112a0>
   27300:	ldrb	r0, [r1]
   27304:	cmp	r0, #32
   27308:	bls	27314 <main@@Base+0x1128c>
   2730c:	mov	r4, r1
   27310:	b	27340 <main@@Base+0x112b8>
   27314:	bne	27328 <main@@Base+0x112a0>
   27318:	mov	r4, r1
   2731c:	ldrb	r0, [r4, #1]!
   27320:	cmp	r0, #32
   27324:	bhi	27340 <main@@Base+0x112b8>
   27328:	mov	r0, r9
   2732c:	mov	r2, r8
   27330:	mov	r4, ip
   27334:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   27338:	mov	ip, r4
   2733c:	mov	r4, r0
   27340:	mov	r5, ip
   27344:	cmp	r4, r8
   27348:	beq	2737c <main@@Base+0x112f4>
   2734c:	ldrb	r0, [r4]
   27350:	cmp	r0, #58	; 0x3a
   27354:	bne	2737c <main@@Base+0x112f4>
   27358:	add	r1, r4, #1
   2735c:	sub	r0, r8, r1
   27360:	cmp	r0, #2
   27364:	blt	290b8 <main@@Base+0x13030>
   27368:	ldrb	r0, [r1]
   2736c:	cmp	r0, #32
   27370:	bls	290a8 <main@@Base+0x13020>
   27374:	mov	r4, r1
   27378:	b	290c8 <main@@Base+0x13040>
   2737c:	mov	r0, r9
   27380:	mov	r1, r4
   27384:	mov	r2, r8
   27388:	mov	r3, #4
   2738c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   27390:	b	290c4 <main@@Base+0x1303c>
   27394:	bne	273a4 <main@@Base+0x1131c>
   27398:	ldrb	r0, [r4, #2]!
   2739c:	cmp	r0, #32
   273a0:	bhi	273b4 <main@@Base+0x1132c>
   273a4:	mov	r0, r9
   273a8:	mov	r2, r8
   273ac:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   273b0:	mov	r4, r0
   273b4:	cmp	r4, r8
   273b8:	mov	r2, r8
   273bc:	beq	273f8 <main@@Base+0x11370>
   273c0:	ldrb	r0, [r4]
   273c4:	cmp	r0, #125	; 0x7d
   273c8:	bne	273f4 <main@@Base+0x1136c>
   273cc:	add	r1, r4, #1
   273d0:	sub	r0, r8, r1
   273d4:	cmp	r0, #2
   273d8:	blt	29b68 <main@@Base+0x13ae0>
   273dc:	ldrb	r0, [r1]
   273e0:	cmp	r0, #32
   273e4:	bhi	291a8 <main@@Base+0x13120>
   273e8:	bne	29b68 <main@@Base+0x13ae0>
   273ec:	ldrb	r0, [r4, #2]!
   273f0:	b	29b60 <main@@Base+0x13ad8>
   273f4:	mov	r2, r4
   273f8:	cmp	r2, r8
   273fc:	mov	r1, r8
   27400:	beq	27458 <main@@Base+0x113d0>
   27404:	ldrb	r0, [r2]
   27408:	cmp	r0, #46	; 0x2e
   2740c:	beq	2742c <main@@Base+0x113a4>
   27410:	cmp	r0, #34	; 0x22
   27414:	bne	27448 <main@@Base+0x113c0>
   27418:	ldr	r0, [sp, #20]
   2741c:	mov	r1, #0
   27420:	str	r1, [r0]
   27424:	add	r1, r2, #1
   27428:	b	27458 <main@@Base+0x113d0>
   2742c:	mov	r1, r2
   27430:	mov	r0, r9
   27434:	mov	r2, r8
   27438:	mov	r3, #5
   2743c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   27440:	mov	r1, r0
   27444:	b	27458 <main@@Base+0x113d0>
   27448:	ldr	r0, [sp, #20]
   2744c:	mov	r1, #1
   27450:	str	r1, [r0]
   27454:	mov	r1, r2
   27458:	sub	r0, r8, r1
   2745c:	mov	r2, #8
   27460:	cmp	r0, #8
   27464:	movcs	r0, r2
   27468:	sub	r7, r0, #1
   2746c:	cmp	r7, #7
   27470:	bhi	27654 <main@@Base+0x115cc>
   27474:	add	r0, pc, #32
   27478:	mov	r9, #0
   2747c:	mov	ip, #0
   27480:	mov	lr, #0
   27484:	mov	sl, #0
   27488:	mov	r3, #0
   2748c:	mov	r5, #0
   27490:	mov	r2, #0
   27494:	mov	r4, #0
   27498:	ldr	pc, [r0, r7, lsl #2]
   2749c:	andeq	r7, r2, r0, lsl #10
   274a0:	strdeq	r7, [r2], -r8
   274a4:	strdeq	r7, [r2], -r0
   274a8:	andeq	r7, r2, r8, ror #9
   274ac:	ldrdeq	r7, [r2], -ip
   274b0:	ldrdeq	r7, [r2], -r0
   274b4:	andeq	r7, r2, r0, asr #9
   274b8:			; <UNDEFINED> instruction: 0x000274bc
   274bc:	ldrb	ip, [r1, #7]
   274c0:	ldrb	r0, [r1, #6]
   274c4:	mov	lr, r9
   274c8:	orr	r0, ip, r0, lsl #8
   274cc:	mov	r9, r0
   274d0:	ldrb	r0, [r1, #5]
   274d4:	mov	sl, lr
   274d8:	orr	r9, r9, r0, lsl #16
   274dc:	ldrb	r0, [r1, #4]
   274e0:	mov	r3, sl
   274e4:	orr	r9, r9, r0, lsl #24
   274e8:	ldrb	r0, [r1, #3]
   274ec:	orr	r5, r0, r3
   274f0:	ldrb	r0, [r1, #2]
   274f4:	orr	r2, r5, r0, lsl #8
   274f8:	ldrb	r0, [r1, #1]
   274fc:	orr	r4, r2, r0, lsl #16
   27500:	ldrb	r2, [r1]
   27504:	movw	r0, #25186	; 0x6262
   27508:	movw	r3, #24929	; 0x6161
   2750c:	movt	r0, #24418	; 0x5f62
   27510:	movt	r3, #24929	; 0x6161
   27514:	eor	r0, r9, r0
   27518:	ldr	r9, [sp, #16]
   2751c:	orr	r2, r4, r2, lsl #24
   27520:	eor	r2, r2, r3
   27524:	orrs	r0, r0, r2
   27528:	bne	27654 <main@@Base+0x115cc>
   2752c:	add	r4, r1, #8
   27530:	mov	r0, #8
   27534:	sub	lr, r8, r4
   27538:	cmp	lr, #8
   2753c:	movcc	r0, lr
   27540:	sub	ip, r0, #1
   27544:	cmp	ip, #7
   27548:	bhi	27a20 <main@@Base+0x11998>
   2754c:	str	r4, [sp, #4]
   27550:	add	r9, pc, #32
   27554:	mov	r2, #0
   27558:	mov	r6, #0
   2755c:	mov	sl, #0
   27560:	mov	r5, #0
   27564:	mov	r7, #0
   27568:	mov	r4, #0
   2756c:	mov	r0, #0
   27570:	mov	r3, #0
   27574:	ldr	pc, [r9, ip, lsl #2]
   27578:	ldrdeq	r7, [r2], -ip
   2757c:	ldrdeq	r7, [r2], -r4
   27580:	andeq	r7, r2, ip, asr #11
   27584:	andeq	r7, r2, r4, asr #11
   27588:			; <UNDEFINED> instruction: 0x000275b8
   2758c:	andeq	r7, r2, ip, lsr #11
   27590:	muleq	r2, ip, r5
   27594:	muleq	r2, r8, r5
   27598:	ldrb	r6, [r1, #15]
   2759c:	ldrb	r0, [r1, #14]
   275a0:	mov	sl, r2
   275a4:	orr	r0, r6, r0, lsl #8
   275a8:	mov	r2, r0
   275ac:	ldrb	r0, [r1, #13]
   275b0:	mov	r5, sl
   275b4:	orr	r2, r2, r0, lsl #16
   275b8:	ldrb	r0, [r1, #12]
   275bc:	mov	r7, r5
   275c0:	orr	r2, r2, r0, lsl #24
   275c4:	ldrb	r0, [r1, #11]
   275c8:	orr	r4, r0, r7
   275cc:	ldrb	r0, [r1, #10]
   275d0:	orr	r0, r4, r0, lsl #8
   275d4:	ldrb	r3, [r1, #9]
   275d8:	orr	r3, r0, r3, lsl #16
   275dc:	ldr	r4, [sp, #4]
   275e0:	movw	r7, #29440	; 0x7300
   275e4:	bic	r0, r2, #255	; 0xff
   275e8:	movt	r7, #25968	; 0x6570
   275ec:	eor	r7, r0, r7
   275f0:	ldrb	r0, [r4]
   275f4:	orr	r0, r3, r0, lsl #24
   275f8:	movw	r3, #29556	; 0x7374
   275fc:	movt	r3, #25183	; 0x625f
   27600:	eor	r0, r0, r3
   27604:	orrs	r3, r7, r0
   27608:	bne	2765c <main@@Base+0x115d4>
   2760c:	ldr	r9, [sp, #16]
   27610:	ldr	r6, [sp, #24]
   27614:	cmp	lr, #8
   27618:	blt	27a20 <main@@Base+0x11998>
   2761c:	ldr	r3, [sp, #20]
   27620:	mov	r2, r1
   27624:	ldrb	r0, [r2, #15]!
   27628:	ldr	r3, [r3]
   2762c:	cmp	r3, #0
   27630:	beq	276b8 <main@@Base+0x11630>
   27634:	cmp	r0, #33	; 0x21
   27638:	bcc	27644 <main@@Base+0x115bc>
   2763c:	cmp	r0, #58	; 0x3a
   27640:	bne	27a20 <main@@Base+0x11998>
   27644:	ldr	r0, [sp, #20]
   27648:	mov	r1, #0
   2764c:	str	r1, [r0]
   27650:	b	276c4 <main@@Base+0x1163c>
   27654:	mov	r0, r9
   27658:	b	27a28 <main@@Base+0x119a0>
   2765c:	movw	r3, #29791	; 0x745f
   27660:	ldr	r9, [sp, #16]
   27664:	ldr	r6, [sp, #24]
   27668:	movt	r3, #24946	; 0x6172
   2766c:	eor	r2, r2, r3
   27670:	orrs	r0, r2, r0
   27674:	bne	27a20 <main@@Base+0x11998>
   27678:	cmp	lr, #9
   2767c:	blt	27a20 <main@@Base+0x11998>
   27680:	ldr	r3, [sp, #20]
   27684:	mov	r2, r1
   27688:	ldrb	r0, [r2, #16]!
   2768c:	ldr	r3, [r3]
   27690:	cmp	r3, #0
   27694:	beq	276e4 <main@@Base+0x1165c>
   27698:	cmp	r0, #33	; 0x21
   2769c:	bcc	276a8 <main@@Base+0x11620>
   276a0:	cmp	r0, #58	; 0x3a
   276a4:	bne	27a20 <main@@Base+0x11998>
   276a8:	ldr	r0, [sp, #20]
   276ac:	mov	r1, #0
   276b0:	str	r1, [r0]
   276b4:	b	276f0 <main@@Base+0x11668>
   276b8:	cmp	r0, #34	; 0x22
   276bc:	bne	27a20 <main@@Base+0x11998>
   276c0:	add	r2, r1, #16
   276c4:	sub	r0, r8, r2
   276c8:	cmp	r0, #2
   276cc:	blt	27724 <main@@Base+0x1169c>
   276d0:	ldrb	r0, [r2]
   276d4:	cmp	r0, #32
   276d8:	bls	27710 <main@@Base+0x11688>
   276dc:	mov	r7, r2
   276e0:	b	27738 <main@@Base+0x116b0>
   276e4:	cmp	r0, #34	; 0x22
   276e8:	bne	27a20 <main@@Base+0x11998>
   276ec:	add	r2, r1, #17
   276f0:	sub	r0, r8, r2
   276f4:	cmp	r0, #2
   276f8:	blt	2779c <main@@Base+0x11714>
   276fc:	ldrb	r0, [r2]
   27700:	cmp	r0, #32
   27704:	bls	27788 <main@@Base+0x11700>
   27708:	mov	r7, r2
   2770c:	b	277b0 <main@@Base+0x11728>
   27710:	bne	27724 <main@@Base+0x1169c>
   27714:	mov	r7, r2
   27718:	ldrb	r0, [r7, #1]!
   2771c:	cmp	r0, #32
   27720:	bhi	27738 <main@@Base+0x116b0>
   27724:	mov	r1, r2
   27728:	mov	r0, r9
   2772c:	mov	r2, r8
   27730:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   27734:	mov	r7, r0
   27738:	cmp	r7, r8
   2773c:	beq	27770 <main@@Base+0x116e8>
   27740:	ldrb	r0, [r7]
   27744:	cmp	r0, #58	; 0x3a
   27748:	bne	27770 <main@@Base+0x116e8>
   2774c:	add	r1, r7, #1
   27750:	sub	r0, r8, r1
   27754:	cmp	r0, #2
   27758:	blt	2781c <main@@Base+0x11794>
   2775c:	ldrb	r0, [r1]
   27760:	cmp	r0, #32
   27764:	bls	2780c <main@@Base+0x11784>
   27768:	mov	r7, r1
   2776c:	b	2782c <main@@Base+0x117a4>
   27770:	mov	r0, r9
   27774:	mov	r1, r7
   27778:	mov	r2, r8
   2777c:	mov	r3, #4
   27780:	bl	333fc <flatcc_json_parser_set_error@@Base>
   27784:	b	27828 <main@@Base+0x117a0>
   27788:	bne	2779c <main@@Base+0x11714>
   2778c:	mov	r7, r2
   27790:	ldrb	r0, [r7, #1]!
   27794:	cmp	r0, #32
   27798:	bhi	277b0 <main@@Base+0x11728>
   2779c:	mov	r1, r2
   277a0:	mov	r0, r9
   277a4:	mov	r2, r8
   277a8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   277ac:	mov	r7, r0
   277b0:	cmp	r7, r8
   277b4:	beq	277f4 <main@@Base+0x1176c>
   277b8:	ldrb	r0, [r7]
   277bc:	cmp	r0, #58	; 0x3a
   277c0:	bne	277f4 <main@@Base+0x1176c>
   277c4:	add	r1, r7, #1
   277c8:	sub	r0, r8, r1
   277cc:	cmp	r0, #2
   277d0:	blt	2799c <main@@Base+0x11914>
   277d4:	ldrb	r0, [r1]
   277d8:	cmp	r0, #32
   277dc:	bls	27980 <main@@Base+0x118f8>
   277e0:	ldr	r9, [sp, #16]
   277e4:	ldr	r6, [sp, #24]
   277e8:	ldr	r4, [sp, #4]
   277ec:	mov	r7, r1
   277f0:	b	279ac <main@@Base+0x11924>
   277f4:	mov	r0, r9
   277f8:	mov	r1, r7
   277fc:	mov	r2, r8
   27800:	mov	r3, #4
   27804:	bl	333fc <flatcc_json_parser_set_error@@Base>
   27808:	b	279a8 <main@@Base+0x11920>
   2780c:	bne	2781c <main@@Base+0x11794>
   27810:	ldrb	r0, [r7, #2]!
   27814:	cmp	r0, #32
   27818:	bhi	2782c <main@@Base+0x117a4>
   2781c:	mov	r0, r9
   27820:	mov	r2, r8
   27824:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   27828:	mov	r7, r0
   2782c:	cmp	r4, r7
   27830:	beq	27a20 <main@@Base+0x11998>
   27834:	mov	r5, #0
   27838:	cmp	r7, r8
   2783c:	str	r5, [fp, #-36]	; 0xffffffdc
   27840:	str	r5, [fp, #-40]	; 0xffffffd8
   27844:	str	r5, [sp, #36]	; 0x24
   27848:	str	r5, [sp, #32]
   2784c:	str	r5, [sp, #44]	; 0x2c
   27850:	beq	278b0 <main@@Base+0x11828>
   27854:	sub	r0, fp, #40	; 0x28
   27858:	mov	r1, r7
   2785c:	mov	r2, r8
   27860:	add	r3, sp, #44	; 0x2c
   27864:	str	r0, [sp]
   27868:	mov	r0, r9
   2786c:	bl	352ec <flatcc_json_parser_integer@@Base>
   27870:	cmp	r0, r7
   27874:	beq	278bc <main@@Base+0x11834>
   27878:	mov	r4, r0
   2787c:	ldr	r0, [sp, #44]	; 0x2c
   27880:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27884:	ldr	sl, [fp, #-36]	; 0xffffffdc
   27888:	cmp	r0, #0
   2788c:	beq	278cc <main@@Base+0x11844>
   27890:	subs	r0, r5, #1
   27894:	sbcs	r0, sl, #-2147483648	; 0x80000000
   27898:	bcc	278f8 <main@@Base+0x11870>
   2789c:	mov	r0, r9
   278a0:	mov	r1, r4
   278a4:	mov	r2, r8
   278a8:	mov	r3, #8
   278ac:	b	278e4 <main@@Base+0x1185c>
   278b0:	mov	sl, #0
   278b4:	mov	r4, r8
   278b8:	b	27908 <main@@Base+0x11880>
   278bc:	mov	r5, #0
   278c0:	mov	sl, #0
   278c4:	mov	r4, r7
   278c8:	b	27908 <main@@Base+0x11880>
   278cc:	cmn	sl, #1
   278d0:	bgt	27900 <main@@Base+0x11878>
   278d4:	mov	r0, r9
   278d8:	mov	r1, r4
   278dc:	mov	r2, r8
   278e0:	mov	r3, #7
   278e4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   278e8:	mov	r4, r0
   278ec:	mov	r5, #0
   278f0:	mov	sl, #0
   278f4:	b	27908 <main@@Base+0x11880>
   278f8:	rsbs	r5, r5, #0
   278fc:	rsc	sl, sl, #0
   27900:	str	r5, [sp, #32]
   27904:	str	sl, [sp, #36]	; 0x24
   27908:	cmp	r7, r4
   2790c:	bne	27948 <main@@Base+0x118c0>
   27910:	movw	r3, #45608	; 0xb228
   27914:	add	r0, sp, #32
   27918:	mov	r1, r7
   2791c:	mov	r2, r8
   27920:	movt	r3, #5
   27924:	str	r0, [sp]
   27928:	mov	r0, r9
   2792c:	bl	24dc4 <main@@Base+0xed3c>
   27930:	mov	r4, r0
   27934:	cmp	r0, r7
   27938:	cmpne	r4, r8
   2793c:	beq	29c70 <main@@Base+0x13be8>
   27940:	ldr	r5, [sp, #32]
   27944:	ldr	sl, [sp, #36]	; 0x24
   27948:	orrs	r0, r5, sl
   2794c:	bne	2795c <main@@Base+0x118d4>
   27950:	ldrb	r0, [r9, #8]
   27954:	tst	r0, #2
   27958:	beq	27a34 <main@@Base+0x119ac>
   2795c:	ldr	r0, [r9]
   27960:	mov	r1, #0
   27964:	mov	r2, #8
   27968:	mov	r3, #8
   2796c:	bl	30824 <flatcc_builder_table_add@@Base>
   27970:	cmp	r0, #0
   27974:	beq	29c70 <main@@Base+0x13be8>
   27978:	stm	r0, {r5, sl}
   2797c:	b	27a34 <main@@Base+0x119ac>
   27980:	ldr	r9, [sp, #16]
   27984:	ldr	r6, [sp, #24]
   27988:	ldr	r4, [sp, #4]
   2798c:	bne	2799c <main@@Base+0x11914>
   27990:	ldrb	r0, [r7, #2]!
   27994:	cmp	r0, #32
   27998:	bhi	279ac <main@@Base+0x11924>
   2799c:	mov	r0, r9
   279a0:	mov	r2, r8
   279a4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   279a8:	mov	r7, r0
   279ac:	cmp	r4, r7
   279b0:	beq	27a20 <main@@Base+0x11998>
   279b4:	mov	r5, #0
   279b8:	cmp	r7, r8
   279bc:	str	r5, [fp, #-36]	; 0xffffffdc
   279c0:	str	r5, [fp, #-40]	; 0xffffffd8
   279c4:	str	r5, [sp, #44]	; 0x2c
   279c8:	str	r5, [sp, #32]
   279cc:	beq	27aec <main@@Base+0x11a64>
   279d0:	sub	r0, fp, #40	; 0x28
   279d4:	mov	r1, r7
   279d8:	mov	r2, r8
   279dc:	add	r3, sp, #32
   279e0:	str	r0, [sp]
   279e4:	mov	r0, r9
   279e8:	bl	352ec <flatcc_json_parser_integer@@Base>
   279ec:	cmp	r0, r7
   279f0:	beq	27af4 <main@@Base+0x11a6c>
   279f4:	mov	r4, r0
   279f8:	ldr	r0, [sp, #32]
   279fc:	cmp	r0, #0
   27a00:	beq	27afc <main@@Base+0x11a74>
   27a04:	mov	r0, r9
   27a08:	mov	r1, r4
   27a0c:	mov	r2, r8
   27a10:	mov	r3, #8
   27a14:	bl	333fc <flatcc_json_parser_set_error@@Base>
   27a18:	mov	r4, r0
   27a1c:	b	27b38 <main@@Base+0x11ab0>
   27a20:	mov	r0, r9
   27a24:	mov	r1, r4
   27a28:	mov	r2, r8
   27a2c:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   27a30:	mov	r4, r0
   27a34:	sub	r0, r8, r4
   27a38:	cmp	r0, #2
   27a3c:	blt	27a68 <main@@Base+0x119e0>
   27a40:	ldrb	r0, [r4]
   27a44:	cmp	r0, #32
   27a48:	bls	27a54 <main@@Base+0x119cc>
   27a4c:	mov	r2, r4
   27a50:	b	27a7c <main@@Base+0x119f4>
   27a54:	bne	27a68 <main@@Base+0x119e0>
   27a58:	mov	r2, r4
   27a5c:	ldrb	r0, [r2, #1]!
   27a60:	cmp	r0, #32
   27a64:	bhi	27a7c <main@@Base+0x119f4>
   27a68:	mov	r0, r9
   27a6c:	mov	r1, r4
   27a70:	mov	r2, r8
   27a74:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   27a78:	mov	r2, r0
   27a7c:	cmp	r2, r8
   27a80:	beq	2917c <main@@Base+0x130f4>
   27a84:	ldrb	r0, [r2]
   27a88:	cmp	r0, #44	; 0x2c
   27a8c:	bne	29184 <main@@Base+0x130fc>
   27a90:	add	r1, r2, #1
   27a94:	sub	r0, r8, r1
   27a98:	cmp	r0, #2
   27a9c:	blt	27ac4 <main@@Base+0x11a3c>
   27aa0:	ldrb	r0, [r1]
   27aa4:	cmp	r0, #32
   27aa8:	bls	27ab4 <main@@Base+0x11a2c>
   27aac:	mov	r2, r1
   27ab0:	b	27ad4 <main@@Base+0x11a4c>
   27ab4:	bne	27ac4 <main@@Base+0x11a3c>
   27ab8:	ldrb	r0, [r2, #2]!
   27abc:	cmp	r0, #32
   27ac0:	bhi	27ad4 <main@@Base+0x11a4c>
   27ac4:	mov	r0, r9
   27ac8:	mov	r2, r8
   27acc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   27ad0:	mov	r2, r0
   27ad4:	cmp	r2, r8
   27ad8:	beq	291b0 <main@@Base+0x13128>
   27adc:	ldrb	r0, [r2]
   27ae0:	cmp	r0, #125	; 0x7d
   27ae4:	bne	273f8 <main@@Base+0x11370>
   27ae8:	b	2918c <main@@Base+0x13104>
   27aec:	mov	r4, r8
   27af0:	b	27b38 <main@@Base+0x11ab0>
   27af4:	mov	r4, r7
   27af8:	b	27b38 <main@@Base+0x11ab0>
   27afc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27b00:	cmp	r0, #0
   27b04:	beq	27b28 <main@@Base+0x11aa0>
   27b08:	ldr	r9, [sp, #16]
   27b0c:	mov	r1, r4
   27b10:	mov	r2, r8
   27b14:	mov	r3, #7
   27b18:	mov	r0, r9
   27b1c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   27b20:	mov	r4, r0
   27b24:	b	27b34 <main@@Base+0x11aac>
   27b28:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27b2c:	ldr	r9, [sp, #16]
   27b30:	str	r5, [sp, #44]	; 0x2c
   27b34:	ldr	r6, [sp, #24]
   27b38:	cmp	r7, r4
   27b3c:	bne	27b7c <main@@Base+0x11af4>
   27b40:	movw	r3, #45620	; 0xb234
   27b44:	add	r0, sp, #44	; 0x2c
   27b48:	mov	r1, r7
   27b4c:	mov	r2, r8
   27b50:	movt	r3, #5
   27b54:	str	r0, [sp]
   27b58:	mov	r0, r9
   27b5c:	bl	24fd0 <main@@Base+0xef48>
   27b60:	mov	r4, r0
   27b64:	cmp	r0, r7
   27b68:	cmpne	r4, r8
   27b6c:	beq	29c70 <main@@Base+0x13be8>
   27b70:	ldr	r5, [sp, #44]	; 0x2c
   27b74:	ldr	r9, [sp, #16]
   27b78:	ldr	r6, [sp, #24]
   27b7c:	cmp	r5, #0
   27b80:	bne	27b90 <main@@Base+0x11b08>
   27b84:	ldrb	r0, [r9, #8]
   27b88:	tst	r0, #2
   27b8c:	beq	27a34 <main@@Base+0x119ac>
   27b90:	ldr	r0, [r9]
   27b94:	mov	r1, #1
   27b98:	mov	r2, #4
   27b9c:	mov	r3, #4
   27ba0:	bl	30824 <flatcc_builder_table_add@@Base>
   27ba4:	cmp	r0, #0
   27ba8:	beq	29c70 <main@@Base+0x13be8>
   27bac:	str	r5, [r0]
   27bb0:	b	27a34 <main@@Base+0x119ac>
   27bb4:	bne	27bc4 <main@@Base+0x11b3c>
   27bb8:	ldrb	r0, [r4, #2]!
   27bbc:	cmp	r0, #32
   27bc0:	bhi	27bd4 <main@@Base+0x11b4c>
   27bc4:	mov	r0, r9
   27bc8:	mov	r2, r8
   27bcc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   27bd0:	mov	r4, r0
   27bd4:	cmp	r4, r8
   27bd8:	mov	r2, r8
   27bdc:	beq	27c18 <main@@Base+0x11b90>
   27be0:	ldrb	r0, [r4]
   27be4:	cmp	r0, #125	; 0x7d
   27be8:	bne	27c14 <main@@Base+0x11b8c>
   27bec:	add	r1, r4, #1
   27bf0:	sub	r0, r8, r1
   27bf4:	cmp	r0, #2
   27bf8:	blt	29ba4 <main@@Base+0x13b1c>
   27bfc:	ldrb	r0, [r1]
   27c00:	cmp	r0, #32
   27c04:	bhi	291e8 <main@@Base+0x13160>
   27c08:	bne	29ba4 <main@@Base+0x13b1c>
   27c0c:	ldrb	r0, [r4, #2]!
   27c10:	b	29b9c <main@@Base+0x13b14>
   27c14:	mov	r2, r4
   27c18:	cmp	r2, r8
   27c1c:	mov	sl, r8
   27c20:	beq	27c74 <main@@Base+0x11bec>
   27c24:	ldrb	r0, [r2]
   27c28:	cmp	r0, #46	; 0x2e
   27c2c:	beq	27c48 <main@@Base+0x11bc0>
   27c30:	cmp	r0, #34	; 0x22
   27c34:	bne	27c64 <main@@Base+0x11bdc>
   27c38:	ldr	r0, [sp, #20]
   27c3c:	mov	r1, #0
   27c40:	add	sl, r2, #1
   27c44:	b	27c70 <main@@Base+0x11be8>
   27c48:	mov	r1, r2
   27c4c:	mov	r0, r9
   27c50:	mov	r2, r8
   27c54:	mov	r3, #5
   27c58:	bl	333fc <flatcc_json_parser_set_error@@Base>
   27c5c:	mov	sl, r0
   27c60:	b	27c74 <main@@Base+0x11bec>
   27c64:	ldr	r0, [sp, #20]
   27c68:	mov	r1, #1
   27c6c:	mov	sl, r2
   27c70:	str	r1, [r0]
   27c74:	sub	r9, r8, sl
   27c78:	mov	r0, #8
   27c7c:	cmp	r9, #8
   27c80:	movcc	r0, r9
   27c84:	sub	r3, r0, #1
   27c88:	cmp	r3, #7
   27c8c:	bhi	28684 <main@@Base+0x125fc>
   27c90:	add	r5, pc, #32
   27c94:	mov	r0, #0
   27c98:	mov	ip, #0
   27c9c:	mov	lr, #0
   27ca0:	mov	r7, #0
   27ca4:	mov	r2, #0
   27ca8:	mov	r6, #0
   27cac:	mov	r4, #0
   27cb0:	mov	r1, #0
   27cb4:	ldr	pc, [r5, r3, lsl #2]
   27cb8:	andeq	r7, r2, ip, lsl sp
   27cbc:	andeq	r7, r2, r4, lsl sp
   27cc0:	andeq	r7, r2, ip, lsl #26
   27cc4:	andeq	r7, r2, r4, lsl #26
   27cc8:	strdeq	r7, [r2], -r8
   27ccc:	andeq	r7, r2, ip, ror #25
   27cd0:	ldrdeq	r7, [r2], -ip
   27cd4:	ldrdeq	r7, [r2], -r8
   27cd8:	ldrb	ip, [sl, #7]
   27cdc:	ldrb	r1, [sl, #6]
   27ce0:	mov	lr, r0
   27ce4:	orr	r1, ip, r1, lsl #8
   27ce8:	mov	r0, r1
   27cec:	ldrb	r1, [sl, #5]
   27cf0:	mov	r7, lr
   27cf4:	orr	r0, r0, r1, lsl #16
   27cf8:	ldrb	r1, [sl, #4]
   27cfc:	mov	r2, r7
   27d00:	orr	r0, r0, r1, lsl #24
   27d04:	ldrb	r1, [sl, #3]
   27d08:	orr	r6, r1, r2
   27d0c:	ldrb	r1, [sl, #2]
   27d10:	orr	r4, r6, r1, lsl #8
   27d14:	ldrb	r1, [sl, #1]
   27d18:	orr	r1, r4, r1, lsl #16
   27d1c:	ldrb	r2, [sl]
   27d20:	orr	r7, r1, r2, lsl #24
   27d24:	movw	r1, #25442	; 0x6362
   27d28:	movt	r1, #25443	; 0x6363
   27d2c:	cmp	r7, r1
   27d30:	bhi	27dc0 <main@@Base+0x11d38>
   27d34:	movw	r1, #13108	; 0x3334
   27d38:	movt	r1, #12594	; 0x3132
   27d3c:	eor	r5, r0, r1
   27d40:	movw	r1, #24929	; 0x6161
   27d44:	movt	r1, #24929	; 0x6161
   27d48:	eor	r0, r7, r1
   27d4c:	orrs	r0, r5, r0
   27d50:	bne	27e28 <main@@Base+0x11da0>
   27d54:	add	r7, sl, #8
   27d58:	mov	r1, #8
   27d5c:	sub	r0, r8, r7
   27d60:	cmp	r0, #8
   27d64:	movcc	r1, r0
   27d68:	sub	r1, r1, #1
   27d6c:	cmp	r1, #7
   27d70:	bhi	28f14 <main@@Base+0x12e8c>
   27d74:	ldrb	r1, [r7]
   27d78:	cmp	r1, #53	; 0x35
   27d7c:	bne	28f14 <main@@Base+0x12e8c>
   27d80:	cmp	r0, #2
   27d84:	blt	28f14 <main@@Base+0x12e8c>
   27d88:	ldr	r2, [sp, #20]
   27d8c:	mov	r1, sl
   27d90:	ldrb	r0, [r1, #9]!
   27d94:	ldr	r2, [r2]
   27d98:	cmp	r2, #0
   27d9c:	beq	27fd4 <main@@Base+0x11f4c>
   27da0:	cmp	r0, #33	; 0x21
   27da4:	bcc	27db0 <main@@Base+0x11d28>
   27da8:	cmp	r0, #58	; 0x3a
   27dac:	bne	28f14 <main@@Base+0x12e8c>
   27db0:	ldr	r0, [sp, #20]
   27db4:	mov	r2, #0
   27db8:	str	r2, [r0]
   27dbc:	b	27fe0 <main@@Base+0x11f58>
   27dc0:	movw	r1, #13108	; 0x3334
   27dc4:	movt	r1, #12594	; 0x3132
   27dc8:	eor	r5, r0, r1
   27dcc:	ldr	r0, [sp, #12]
   27dd0:	eor	r0, r7, r0
   27dd4:	orrs	r0, r5, r0
   27dd8:	bne	27e78 <main@@Base+0x11df0>
   27ddc:	cmp	r9, #9
   27de0:	ldr	r9, [sp, #16]
   27de4:	mov	r7, sl
   27de8:	blt	28108 <main@@Base+0x12080>
   27dec:	ldr	r2, [sp, #20]
   27df0:	mov	r1, sl
   27df4:	ldrb	r0, [r1, #8]!
   27df8:	ldr	r2, [r2]
   27dfc:	cmp	r2, #0
   27e00:	beq	27ed0 <main@@Base+0x11e48>
   27e04:	cmp	r0, #33	; 0x21
   27e08:	bcc	27e18 <main@@Base+0x11d90>
   27e0c:	cmp	r0, #58	; 0x3a
   27e10:	mov	r7, sl
   27e14:	bne	28108 <main@@Base+0x12080>
   27e18:	ldr	r0, [sp, #20]
   27e1c:	mov	r2, #0
   27e20:	str	r2, [r0]
   27e24:	b	27ee0 <main@@Base+0x11e58>
   27e28:	teq	r7, r1
   27e2c:	bne	283c8 <main@@Base+0x12340>
   27e30:	cmp	r9, #5
   27e34:	mov	r1, sl
   27e38:	blt	28390 <main@@Base+0x12308>
   27e3c:	ldr	r1, [sp, #20]
   27e40:	mov	r2, sl
   27e44:	ldrb	r0, [r2, #4]!
   27e48:	ldr	r1, [r1]
   27e4c:	cmp	r1, #0
   27e50:	beq	27f00 <main@@Base+0x11e78>
   27e54:	cmp	r0, #33	; 0x21
   27e58:	bcc	27e68 <main@@Base+0x11de0>
   27e5c:	cmp	r0, #58	; 0x3a
   27e60:	mov	r1, sl
   27e64:	bne	28390 <main@@Base+0x12308>
   27e68:	ldr	r0, [sp, #20]
   27e6c:	mov	r1, #0
   27e70:	str	r1, [r0]
   27e74:	b	27f10 <main@@Base+0x11e88>
   27e78:	movw	r0, #25443	; 0x6363
   27e7c:	movt	r0, #25443	; 0x6363
   27e80:	teq	r7, r0
   27e84:	bne	28628 <main@@Base+0x125a0>
   27e88:	cmp	r9, #5
   27e8c:	mov	r1, sl
   27e90:	blt	285f0 <main@@Base+0x12568>
   27e94:	ldr	r1, [sp, #20]
   27e98:	mov	r2, sl
   27e9c:	ldrb	r0, [r2, #4]!
   27ea0:	ldr	r1, [r1]
   27ea4:	cmp	r1, #0
   27ea8:	beq	27f30 <main@@Base+0x11ea8>
   27eac:	cmp	r0, #33	; 0x21
   27eb0:	bcc	27ec0 <main@@Base+0x11e38>
   27eb4:	cmp	r0, #58	; 0x3a
   27eb8:	mov	r1, sl
   27ebc:	bne	285f0 <main@@Base+0x12568>
   27ec0:	ldr	r0, [sp, #20]
   27ec4:	mov	r1, #0
   27ec8:	str	r1, [r0]
   27ecc:	b	27f40 <main@@Base+0x11eb8>
   27ed0:	cmp	r0, #34	; 0x22
   27ed4:	mov	r7, sl
   27ed8:	bne	28108 <main@@Base+0x12080>
   27edc:	add	r1, sl, #9
   27ee0:	sub	r0, r8, r1
   27ee4:	cmp	r0, #2
   27ee8:	blt	27f74 <main@@Base+0x11eec>
   27eec:	ldrb	r0, [r1]
   27ef0:	cmp	r0, #32
   27ef4:	bls	27f60 <main@@Base+0x11ed8>
   27ef8:	mov	r7, r1
   27efc:	b	27f84 <main@@Base+0x11efc>
   27f00:	cmp	r0, #34	; 0x22
   27f04:	mov	r1, sl
   27f08:	bne	28390 <main@@Base+0x12308>
   27f0c:	add	r2, sl, #5
   27f10:	sub	r0, r8, r2
   27f14:	cmp	r0, #2
   27f18:	blt	28014 <main@@Base+0x11f8c>
   27f1c:	ldrb	r0, [r2]
   27f20:	cmp	r0, #32
   27f24:	bls	28000 <main@@Base+0x11f78>
   27f28:	mov	r1, r2
   27f2c:	b	28028 <main@@Base+0x11fa0>
   27f30:	cmp	r0, #34	; 0x22
   27f34:	mov	r1, sl
   27f38:	bne	285f0 <main@@Base+0x12568>
   27f3c:	add	r2, sl, #5
   27f40:	sub	r0, r8, r2
   27f44:	cmp	r0, #2
   27f48:	blt	28088 <main@@Base+0x12000>
   27f4c:	ldrb	r0, [r2]
   27f50:	cmp	r0, #32
   27f54:	bls	28074 <main@@Base+0x11fec>
   27f58:	mov	r1, r2
   27f5c:	b	2809c <main@@Base+0x12014>
   27f60:	bne	27f74 <main@@Base+0x11eec>
   27f64:	mov	r7, r1
   27f68:	ldrb	r0, [r7, #1]!
   27f6c:	cmp	r0, #32
   27f70:	bhi	27f84 <main@@Base+0x11efc>
   27f74:	mov	r0, r9
   27f78:	mov	r2, r8
   27f7c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   27f80:	mov	r7, r0
   27f84:	cmp	r7, r8
   27f88:	beq	27fbc <main@@Base+0x11f34>
   27f8c:	ldrb	r0, [r7]
   27f90:	cmp	r0, #58	; 0x3a
   27f94:	bne	27fbc <main@@Base+0x11f34>
   27f98:	add	r1, r7, #1
   27f9c:	sub	r0, r8, r1
   27fa0:	cmp	r0, #2
   27fa4:	blt	280f8 <main@@Base+0x12070>
   27fa8:	ldrb	r0, [r1]
   27fac:	cmp	r0, #32
   27fb0:	bls	280e8 <main@@Base+0x12060>
   27fb4:	mov	r7, r1
   27fb8:	b	28108 <main@@Base+0x12080>
   27fbc:	mov	r0, r9
   27fc0:	mov	r1, r7
   27fc4:	mov	r2, r8
   27fc8:	mov	r3, #4
   27fcc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   27fd0:	b	28104 <main@@Base+0x1207c>
   27fd4:	cmp	r0, #34	; 0x22
   27fd8:	bne	28f14 <main@@Base+0x12e8c>
   27fdc:	add	r1, sl, #10
   27fe0:	sub	r0, r8, r1
   27fe4:	cmp	r0, #2
   27fe8:	blt	2830c <main@@Base+0x12284>
   27fec:	ldrb	r0, [r1]
   27ff0:	cmp	r0, #32
   27ff4:	bls	282f8 <main@@Base+0x12270>
   27ff8:	mov	r9, r1
   27ffc:	b	2831c <main@@Base+0x12294>
   28000:	bne	28014 <main@@Base+0x11f8c>
   28004:	mov	r1, r2
   28008:	ldrb	r0, [r1, #1]!
   2800c:	cmp	r0, #32
   28010:	bhi	28028 <main@@Base+0x11fa0>
   28014:	ldr	r0, [sp, #16]
   28018:	mov	r1, r2
   2801c:	mov	r2, r8
   28020:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28024:	mov	r1, r0
   28028:	cmp	r1, r8
   2802c:	beq	28060 <main@@Base+0x11fd8>
   28030:	ldrb	r0, [r1]
   28034:	cmp	r0, #58	; 0x3a
   28038:	bne	28060 <main@@Base+0x11fd8>
   2803c:	add	r2, r1, #1
   28040:	sub	r0, r8, r2
   28044:	cmp	r0, #2
   28048:	blt	2837c <main@@Base+0x122f4>
   2804c:	ldrb	r0, [r2]
   28050:	cmp	r0, #32
   28054:	bls	2836c <main@@Base+0x122e4>
   28058:	mov	r1, r2
   2805c:	b	28390 <main@@Base+0x12308>
   28060:	ldr	r0, [sp, #16]
   28064:	mov	r2, r8
   28068:	mov	r3, #4
   2806c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28070:	b	2838c <main@@Base+0x12304>
   28074:	bne	28088 <main@@Base+0x12000>
   28078:	mov	r1, r2
   2807c:	ldrb	r0, [r1, #1]!
   28080:	cmp	r0, #32
   28084:	bhi	2809c <main@@Base+0x12014>
   28088:	ldr	r0, [sp, #16]
   2808c:	mov	r1, r2
   28090:	mov	r2, r8
   28094:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28098:	mov	r1, r0
   2809c:	cmp	r1, r8
   280a0:	beq	280d4 <main@@Base+0x1204c>
   280a4:	ldrb	r0, [r1]
   280a8:	cmp	r0, #58	; 0x3a
   280ac:	bne	280d4 <main@@Base+0x1204c>
   280b0:	add	r2, r1, #1
   280b4:	sub	r0, r8, r2
   280b8:	cmp	r0, #2
   280bc:	blt	285dc <main@@Base+0x12554>
   280c0:	ldrb	r0, [r2]
   280c4:	cmp	r0, #32
   280c8:	bls	285cc <main@@Base+0x12544>
   280cc:	mov	r1, r2
   280d0:	b	285f0 <main@@Base+0x12568>
   280d4:	ldr	r0, [sp, #16]
   280d8:	mov	r2, r8
   280dc:	mov	r3, #4
   280e0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   280e4:	b	285ec <main@@Base+0x12564>
   280e8:	bne	280f8 <main@@Base+0x12070>
   280ec:	ldrb	r0, [r7, #2]!
   280f0:	cmp	r0, #32
   280f4:	bhi	28108 <main@@Base+0x12080>
   280f8:	mov	r0, r9
   280fc:	mov	r2, r8
   28100:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28104:	mov	r7, r0
   28108:	cmp	sl, r7
   2810c:	beq	28190 <main@@Base+0x12108>
   28110:	mov	r5, #0
   28114:	cmp	r7, r8
   28118:	str	r5, [fp, #-36]	; 0xffffffdc
   2811c:	str	r5, [fp, #-40]	; 0xffffffd8
   28120:	str	r5, [sp, #36]	; 0x24
   28124:	str	r5, [sp, #32]
   28128:	str	r5, [sp, #44]	; 0x2c
   2812c:	beq	281fc <main@@Base+0x12174>
   28130:	sub	r0, fp, #40	; 0x28
   28134:	mov	r1, r7
   28138:	mov	r2, r8
   2813c:	add	r3, sp, #44	; 0x2c
   28140:	str	r0, [sp]
   28144:	mov	r0, r9
   28148:	bl	352ec <flatcc_json_parser_integer@@Base>
   2814c:	ldr	r6, [sp, #24]
   28150:	cmp	r0, r7
   28154:	beq	2820c <main@@Base+0x12184>
   28158:	mov	r4, r0
   2815c:	ldr	r0, [sp, #44]	; 0x2c
   28160:	ldr	r5, [fp, #-40]	; 0xffffffd8
   28164:	ldr	sl, [fp, #-36]	; 0xffffffdc
   28168:	cmp	r0, #0
   2816c:	beq	2821c <main@@Base+0x12194>
   28170:	subs	r0, r5, #1
   28174:	sbcs	r0, sl, #-2147483648	; 0x80000000
   28178:	bcc	28248 <main@@Base+0x121c0>
   2817c:	mov	r0, r9
   28180:	mov	r1, r4
   28184:	mov	r2, r8
   28188:	mov	r3, #8
   2818c:	b	28234 <main@@Base+0x121ac>
   28190:	add	r7, sl, #8
   28194:	mov	r1, #8
   28198:	sub	r0, r8, r7
   2819c:	cmp	r0, #8
   281a0:	movcc	r1, r0
   281a4:	sub	r1, r1, #1
   281a8:	cmp	r1, #7
   281ac:	bhi	28f18 <main@@Base+0x12e90>
   281b0:	ldrb	r1, [r7]
   281b4:	cmp	r1, #53	; 0x35
   281b8:	bne	28f18 <main@@Base+0x12e90>
   281bc:	cmp	r0, #2
   281c0:	blt	28f14 <main@@Base+0x12e8c>
   281c4:	ldr	r2, [sp, #20]
   281c8:	mov	r1, sl
   281cc:	ldrb	r0, [r1, #9]!
   281d0:	ldr	r2, [r2]
   281d4:	cmp	r2, #0
   281d8:	beq	282cc <main@@Base+0x12244>
   281dc:	cmp	r0, #33	; 0x21
   281e0:	bcc	281ec <main@@Base+0x12164>
   281e4:	cmp	r0, #58	; 0x3a
   281e8:	bne	28f14 <main@@Base+0x12e8c>
   281ec:	ldr	r0, [sp, #20]
   281f0:	mov	r2, #0
   281f4:	str	r2, [r0]
   281f8:	b	282d8 <main@@Base+0x12250>
   281fc:	ldr	r6, [sp, #24]
   28200:	mov	sl, #0
   28204:	mov	r4, r8
   28208:	b	28258 <main@@Base+0x121d0>
   2820c:	mov	r5, #0
   28210:	mov	sl, #0
   28214:	mov	r4, r7
   28218:	b	28258 <main@@Base+0x121d0>
   2821c:	cmn	sl, #1
   28220:	bgt	28250 <main@@Base+0x121c8>
   28224:	mov	r0, r9
   28228:	mov	r1, r4
   2822c:	mov	r2, r8
   28230:	mov	r3, #7
   28234:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28238:	mov	r4, r0
   2823c:	mov	r5, #0
   28240:	mov	sl, #0
   28244:	b	28258 <main@@Base+0x121d0>
   28248:	rsbs	r5, r5, #0
   2824c:	rsc	sl, sl, #0
   28250:	str	r5, [sp, #32]
   28254:	str	sl, [sp, #36]	; 0x24
   28258:	cmp	r7, r4
   2825c:	bne	28298 <main@@Base+0x12210>
   28260:	movw	r3, #45656	; 0xb258
   28264:	add	r0, sp, #32
   28268:	mov	r1, r7
   2826c:	mov	r2, r8
   28270:	movt	r3, #5
   28274:	str	r0, [sp]
   28278:	mov	r0, r9
   2827c:	bl	24dc4 <main@@Base+0xed3c>
   28280:	mov	r4, r0
   28284:	cmp	r0, r7
   28288:	cmpne	r4, r8
   2828c:	beq	29c74 <main@@Base+0x13bec>
   28290:	ldr	r5, [sp, #32]
   28294:	ldr	sl, [sp, #36]	; 0x24
   28298:	orrs	r0, r5, sl
   2829c:	bne	282ac <main@@Base+0x12224>
   282a0:	ldrb	r0, [r9, #8]
   282a4:	tst	r0, #2
   282a8:	beq	28f30 <main@@Base+0x12ea8>
   282ac:	ldr	r0, [r9]
   282b0:	mov	r1, #5
   282b4:	mov	r2, #8
   282b8:	mov	r3, #8
   282bc:	bl	30824 <flatcc_builder_table_add@@Base>
   282c0:	cmp	r0, #0
   282c4:	bne	28a88 <main@@Base+0x12a00>
   282c8:	b	29c74 <main@@Base+0x13bec>
   282cc:	cmp	r0, #34	; 0x22
   282d0:	bne	28f14 <main@@Base+0x12e8c>
   282d4:	add	r1, sl, #10
   282d8:	sub	r0, r8, r1
   282dc:	cmp	r0, #2
   282e0:	blt	28ad0 <main@@Base+0x12a48>
   282e4:	ldrb	r0, [r1]
   282e8:	cmp	r0, #32
   282ec:	bls	28abc <main@@Base+0x12a34>
   282f0:	mov	r9, r1
   282f4:	b	28ae0 <main@@Base+0x12a58>
   282f8:	bne	2830c <main@@Base+0x12284>
   282fc:	mov	r9, r1
   28300:	ldrb	r0, [r9, #1]!
   28304:	cmp	r0, #32
   28308:	bhi	2831c <main@@Base+0x12294>
   2830c:	ldr	r0, [sp, #16]
   28310:	mov	r2, r8
   28314:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28318:	mov	r9, r0
   2831c:	cmp	r9, r8
   28320:	beq	28354 <main@@Base+0x122cc>
   28324:	ldrb	r0, [r9]
   28328:	cmp	r0, #58	; 0x3a
   2832c:	bne	28354 <main@@Base+0x122cc>
   28330:	add	r1, r9, #1
   28334:	sub	r0, r8, r1
   28338:	cmp	r0, #2
   2833c:	blt	28b40 <main@@Base+0x12ab8>
   28340:	ldrb	r0, [r1]
   28344:	cmp	r0, #32
   28348:	bls	28b30 <main@@Base+0x12aa8>
   2834c:	mov	r9, r1
   28350:	b	28b50 <main@@Base+0x12ac8>
   28354:	ldr	r0, [sp, #16]
   28358:	mov	r1, r9
   2835c:	mov	r2, r8
   28360:	mov	r3, #4
   28364:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28368:	b	28b4c <main@@Base+0x12ac4>
   2836c:	bne	2837c <main@@Base+0x122f4>
   28370:	ldrb	r0, [r1, #2]!
   28374:	cmp	r0, #32
   28378:	bhi	28390 <main@@Base+0x12308>
   2837c:	ldr	r0, [sp, #16]
   28380:	mov	r1, r2
   28384:	mov	r2, r8
   28388:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2838c:	mov	r1, r0
   28390:	cmp	sl, r1
   28394:	beq	283c8 <main@@Base+0x12340>
   28398:	ldr	r9, [sp, #16]
   2839c:	mov	r2, r8
   283a0:	add	r3, sp, #28
   283a4:	mov	r0, r9
   283a8:	bl	35818 <flatcc_json_parser_build_string@@Base>
   283ac:	mov	r4, r0
   283b0:	ldr	r0, [sp, #28]
   283b4:	cmp	r0, #0
   283b8:	beq	29c74 <main@@Base+0x13bec>
   283bc:	ldr	r0, [r9]
   283c0:	mov	r1, #0
   283c4:	b	28cc0 <main@@Base+0x12c38>
   283c8:	movw	r1, #25186	; 0x6262
   283cc:	movt	r1, #25186	; 0x6262
   283d0:	eor	r0, r7, r1
   283d4:	orrs	r0, r5, r0
   283d8:	bne	28428 <main@@Base+0x123a0>
   283dc:	cmp	r9, #9
   283e0:	ldr	r9, [sp, #16]
   283e4:	mov	r7, sl
   283e8:	blt	28760 <main@@Base+0x126d8>
   283ec:	ldr	r2, [sp, #20]
   283f0:	mov	r1, sl
   283f4:	ldrb	r0, [r1, #8]!
   283f8:	ldr	r2, [r2]
   283fc:	cmp	r2, #0
   28400:	beq	2847c <main@@Base+0x123f4>
   28404:	cmp	r0, #33	; 0x21
   28408:	bcc	28418 <main@@Base+0x12390>
   2840c:	cmp	r0, #58	; 0x3a
   28410:	mov	r7, sl
   28414:	bne	28760 <main@@Base+0x126d8>
   28418:	ldr	r0, [sp, #20]
   2841c:	mov	r2, #0
   28420:	str	r2, [r0]
   28424:	b	2848c <main@@Base+0x12404>
   28428:	teq	r7, r1
   2842c:	bne	28684 <main@@Base+0x125fc>
   28430:	cmp	r9, #5
   28434:	ldr	r9, [sp, #16]
   28438:	mov	r1, sl
   2843c:	blt	28c90 <main@@Base+0x12c08>
   28440:	ldr	r1, [sp, #20]
   28444:	mov	r2, sl
   28448:	ldrb	r0, [r2, #4]!
   2844c:	ldr	r1, [r1]
   28450:	cmp	r1, #0
   28454:	beq	284ac <main@@Base+0x12424>
   28458:	cmp	r0, #33	; 0x21
   2845c:	bcc	2846c <main@@Base+0x123e4>
   28460:	cmp	r0, #58	; 0x3a
   28464:	mov	r1, sl
   28468:	bne	28c90 <main@@Base+0x12c08>
   2846c:	ldr	r0, [sp, #20]
   28470:	mov	r1, #0
   28474:	str	r1, [r0]
   28478:	b	284bc <main@@Base+0x12434>
   2847c:	cmp	r0, #34	; 0x22
   28480:	mov	r7, sl
   28484:	bne	28760 <main@@Base+0x126d8>
   28488:	add	r1, sl, #9
   2848c:	sub	r0, r8, r1
   28490:	cmp	r0, #2
   28494:	blt	284f0 <main@@Base+0x12468>
   28498:	ldrb	r0, [r1]
   2849c:	cmp	r0, #32
   284a0:	bls	284dc <main@@Base+0x12454>
   284a4:	mov	r7, r1
   284a8:	b	28500 <main@@Base+0x12478>
   284ac:	cmp	r0, #34	; 0x22
   284b0:	mov	r1, sl
   284b4:	bne	28c90 <main@@Base+0x12c08>
   284b8:	add	r2, sl, #5
   284bc:	sub	r0, r8, r2
   284c0:	cmp	r0, #2
   284c4:	blt	28568 <main@@Base+0x124e0>
   284c8:	ldrb	r0, [r2]
   284cc:	cmp	r0, #32
   284d0:	bls	28554 <main@@Base+0x124cc>
   284d4:	mov	r1, r2
   284d8:	b	2857c <main@@Base+0x124f4>
   284dc:	bne	284f0 <main@@Base+0x12468>
   284e0:	mov	r7, r1
   284e4:	ldrb	r0, [r7, #1]!
   284e8:	cmp	r0, #32
   284ec:	bhi	28500 <main@@Base+0x12478>
   284f0:	mov	r0, r9
   284f4:	mov	r2, r8
   284f8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   284fc:	mov	r7, r0
   28500:	cmp	r7, r8
   28504:	beq	2853c <main@@Base+0x124b4>
   28508:	ldrb	r0, [r7]
   2850c:	cmp	r0, #58	; 0x3a
   28510:	bne	2853c <main@@Base+0x124b4>
   28514:	add	r1, r7, #1
   28518:	sub	r0, r8, r1
   2851c:	cmp	r0, #2
   28520:	blt	28750 <main@@Base+0x126c8>
   28524:	ldrb	r0, [r1]
   28528:	cmp	r0, #32
   2852c:	bls	2873c <main@@Base+0x126b4>
   28530:	ldr	r9, [sp, #16]
   28534:	mov	r7, r1
   28538:	b	28760 <main@@Base+0x126d8>
   2853c:	mov	r0, r9
   28540:	mov	r1, r7
   28544:	mov	r2, r8
   28548:	mov	r3, #4
   2854c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28550:	b	2875c <main@@Base+0x126d4>
   28554:	bne	28568 <main@@Base+0x124e0>
   28558:	mov	r1, r2
   2855c:	ldrb	r0, [r1, #1]!
   28560:	cmp	r0, #32
   28564:	bhi	2857c <main@@Base+0x124f4>
   28568:	mov	r1, r2
   2856c:	mov	r0, r9
   28570:	mov	r2, r8
   28574:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28578:	mov	r1, r0
   2857c:	cmp	r1, r8
   28580:	beq	285b8 <main@@Base+0x12530>
   28584:	ldrb	r0, [r1]
   28588:	cmp	r0, #58	; 0x3a
   2858c:	bne	285b8 <main@@Base+0x12530>
   28590:	add	r2, r1, #1
   28594:	sub	r0, r8, r2
   28598:	cmp	r0, #2
   2859c:	blt	28c7c <main@@Base+0x12bf4>
   285a0:	ldrb	r0, [r2]
   285a4:	cmp	r0, #32
   285a8:	bls	28c68 <main@@Base+0x12be0>
   285ac:	ldr	r9, [sp, #16]
   285b0:	mov	r1, r2
   285b4:	b	28c90 <main@@Base+0x12c08>
   285b8:	mov	r0, r9
   285bc:	mov	r2, r8
   285c0:	mov	r3, #4
   285c4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   285c8:	b	28c8c <main@@Base+0x12c04>
   285cc:	bne	285dc <main@@Base+0x12554>
   285d0:	ldrb	r0, [r1, #2]!
   285d4:	cmp	r0, #32
   285d8:	bhi	285f0 <main@@Base+0x12568>
   285dc:	ldr	r0, [sp, #16]
   285e0:	mov	r1, r2
   285e4:	mov	r2, r8
   285e8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   285ec:	mov	r1, r0
   285f0:	cmp	sl, r1
   285f4:	beq	28628 <main@@Base+0x125a0>
   285f8:	ldr	r9, [sp, #16]
   285fc:	mov	r2, r8
   28600:	add	r3, sp, #28
   28604:	mov	r0, r9
   28608:	bl	35818 <flatcc_json_parser_build_string@@Base>
   2860c:	mov	r4, r0
   28610:	ldr	r0, [sp, #28]
   28614:	cmp	r0, #0
   28618:	beq	29c74 <main@@Base+0x13bec>
   2861c:	ldr	r0, [r9]
   28620:	mov	r1, #4
   28624:	b	28cc0 <main@@Base+0x12c38>
   28628:	ldr	r0, [sp, #8]
   2862c:	eor	r0, r7, r0
   28630:	orrs	r0, r5, r0
   28634:	bne	28684 <main@@Base+0x125fc>
   28638:	cmp	r9, #9
   2863c:	ldr	r9, [sp, #16]
   28640:	mov	r7, sl
   28644:	blt	288c8 <main@@Base+0x12840>
   28648:	ldr	r2, [sp, #20]
   2864c:	mov	r1, sl
   28650:	ldrb	r0, [r1, #8]!
   28654:	ldr	r2, [r2]
   28658:	cmp	r2, #0
   2865c:	beq	28694 <main@@Base+0x1260c>
   28660:	cmp	r0, #33	; 0x21
   28664:	bcc	28674 <main@@Base+0x125ec>
   28668:	cmp	r0, #58	; 0x3a
   2866c:	mov	r7, sl
   28670:	bne	288c8 <main@@Base+0x12840>
   28674:	ldr	r0, [sp, #20]
   28678:	mov	r2, #0
   2867c:	str	r2, [r0]
   28680:	b	286a4 <main@@Base+0x1261c>
   28684:	ldr	r9, [sp, #16]
   28688:	mov	r0, r9
   2868c:	mov	r1, sl
   28690:	b	28f20 <main@@Base+0x12e98>
   28694:	cmp	r0, #34	; 0x22
   28698:	mov	r7, sl
   2869c:	bne	288c8 <main@@Base+0x12840>
   286a0:	add	r1, sl, #9
   286a4:	sub	r0, r8, r1
   286a8:	cmp	r0, #2
   286ac:	blt	286d8 <main@@Base+0x12650>
   286b0:	ldrb	r0, [r1]
   286b4:	cmp	r0, #32
   286b8:	bls	286c4 <main@@Base+0x1263c>
   286bc:	mov	r7, r1
   286c0:	b	286e8 <main@@Base+0x12660>
   286c4:	bne	286d8 <main@@Base+0x12650>
   286c8:	mov	r7, r1
   286cc:	ldrb	r0, [r7, #1]!
   286d0:	cmp	r0, #32
   286d4:	bhi	286e8 <main@@Base+0x12660>
   286d8:	mov	r0, r9
   286dc:	mov	r2, r8
   286e0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   286e4:	mov	r7, r0
   286e8:	cmp	r7, r8
   286ec:	beq	28724 <main@@Base+0x1269c>
   286f0:	ldrb	r0, [r7]
   286f4:	cmp	r0, #58	; 0x3a
   286f8:	bne	28724 <main@@Base+0x1269c>
   286fc:	add	r1, r7, #1
   28700:	sub	r0, r8, r1
   28704:	cmp	r0, #2
   28708:	blt	288b8 <main@@Base+0x12830>
   2870c:	ldrb	r0, [r1]
   28710:	cmp	r0, #32
   28714:	bls	288a4 <main@@Base+0x1281c>
   28718:	ldr	r9, [sp, #16]
   2871c:	mov	r7, r1
   28720:	b	288c8 <main@@Base+0x12840>
   28724:	mov	r0, r9
   28728:	mov	r1, r7
   2872c:	mov	r2, r8
   28730:	mov	r3, #4
   28734:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28738:	b	288c4 <main@@Base+0x1283c>
   2873c:	ldr	r9, [sp, #16]
   28740:	bne	28750 <main@@Base+0x126c8>
   28744:	ldrb	r0, [r7, #2]!
   28748:	cmp	r0, #32
   2874c:	bhi	28760 <main@@Base+0x126d8>
   28750:	mov	r0, r9
   28754:	mov	r2, r8
   28758:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2875c:	mov	r7, r0
   28760:	cmp	sl, r7
   28764:	beq	28688 <main@@Base+0x12600>
   28768:	mov	r5, #0
   2876c:	cmp	r7, r8
   28770:	str	r5, [fp, #-36]	; 0xffffffdc
   28774:	str	r5, [fp, #-40]	; 0xffffffd8
   28778:	str	r5, [sp, #36]	; 0x24
   2877c:	str	r5, [sp, #32]
   28780:	str	r5, [sp, #44]	; 0x2c
   28784:	beq	287e8 <main@@Base+0x12760>
   28788:	sub	r0, fp, #40	; 0x28
   2878c:	mov	r1, r7
   28790:	mov	r2, r8
   28794:	add	r3, sp, #44	; 0x2c
   28798:	str	r0, [sp]
   2879c:	mov	r0, r9
   287a0:	bl	352ec <flatcc_json_parser_integer@@Base>
   287a4:	ldr	r6, [sp, #24]
   287a8:	cmp	r0, r7
   287ac:	beq	287f8 <main@@Base+0x12770>
   287b0:	mov	r4, r0
   287b4:	ldr	r0, [sp, #44]	; 0x2c
   287b8:	ldr	r5, [fp, #-40]	; 0xffffffd8
   287bc:	ldr	sl, [fp, #-36]	; 0xffffffdc
   287c0:	cmp	r0, #0
   287c4:	beq	28808 <main@@Base+0x12780>
   287c8:	subs	r0, r5, #1
   287cc:	sbcs	r0, sl, #-2147483648	; 0x80000000
   287d0:	bcc	28834 <main@@Base+0x127ac>
   287d4:	mov	r0, r9
   287d8:	mov	r1, r4
   287dc:	mov	r2, r8
   287e0:	mov	r3, #8
   287e4:	b	28820 <main@@Base+0x12798>
   287e8:	ldr	r6, [sp, #24]
   287ec:	mov	sl, #0
   287f0:	mov	r4, r8
   287f4:	b	28844 <main@@Base+0x127bc>
   287f8:	mov	r5, #0
   287fc:	mov	sl, #0
   28800:	mov	r4, r7
   28804:	b	28844 <main@@Base+0x127bc>
   28808:	cmn	sl, #1
   2880c:	bgt	2883c <main@@Base+0x127b4>
   28810:	mov	r0, r9
   28814:	mov	r1, r4
   28818:	mov	r2, r8
   2881c:	mov	r3, #7
   28820:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28824:	mov	r4, r0
   28828:	mov	r5, #0
   2882c:	mov	sl, #0
   28830:	b	28844 <main@@Base+0x127bc>
   28834:	rsbs	r5, r5, #0
   28838:	rsc	sl, sl, #0
   2883c:	str	r5, [sp, #32]
   28840:	str	sl, [sp, #36]	; 0x24
   28844:	cmp	r7, r4
   28848:	bne	28884 <main@@Base+0x127fc>
   2884c:	movw	r3, #45644	; 0xb24c
   28850:	add	r0, sp, #32
   28854:	mov	r1, r7
   28858:	mov	r2, r8
   2885c:	movt	r3, #5
   28860:	str	r0, [sp]
   28864:	mov	r0, r9
   28868:	bl	24dc4 <main@@Base+0xed3c>
   2886c:	mov	r4, r0
   28870:	cmp	r0, r7
   28874:	cmpne	r4, r8
   28878:	beq	29c70 <main@@Base+0x13be8>
   2887c:	ldr	r5, [sp, #32]
   28880:	ldr	sl, [sp, #36]	; 0x24
   28884:	orrs	r0, r5, sl
   28888:	bne	28898 <main@@Base+0x12810>
   2888c:	ldrb	r0, [r9, #8]
   28890:	tst	r0, #2
   28894:	beq	28f30 <main@@Base+0x12ea8>
   28898:	ldr	r0, [r9]
   2889c:	mov	r1, #3
   288a0:	b	28a74 <main@@Base+0x129ec>
   288a4:	ldr	r9, [sp, #16]
   288a8:	bne	288b8 <main@@Base+0x12830>
   288ac:	ldrb	r0, [r7, #2]!
   288b0:	cmp	r0, #32
   288b4:	bhi	288c8 <main@@Base+0x12840>
   288b8:	mov	r0, r9
   288bc:	mov	r2, r8
   288c0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   288c4:	mov	r7, r0
   288c8:	cmp	sl, r7
   288cc:	beq	28950 <main@@Base+0x128c8>
   288d0:	mov	r5, #0
   288d4:	cmp	r7, r8
   288d8:	str	r5, [fp, #-36]	; 0xffffffdc
   288dc:	str	r5, [fp, #-40]	; 0xffffffd8
   288e0:	str	r5, [sp, #36]	; 0x24
   288e4:	str	r5, [sp, #32]
   288e8:	str	r5, [sp, #44]	; 0x2c
   288ec:	beq	289bc <main@@Base+0x12934>
   288f0:	sub	r0, fp, #40	; 0x28
   288f4:	mov	r1, r7
   288f8:	mov	r2, r8
   288fc:	add	r3, sp, #44	; 0x2c
   28900:	str	r0, [sp]
   28904:	mov	r0, r9
   28908:	bl	352ec <flatcc_json_parser_integer@@Base>
   2890c:	ldr	r6, [sp, #24]
   28910:	cmp	r0, r7
   28914:	beq	289cc <main@@Base+0x12944>
   28918:	mov	r4, r0
   2891c:	ldr	r0, [sp, #44]	; 0x2c
   28920:	ldr	r5, [fp, #-40]	; 0xffffffd8
   28924:	ldr	sl, [fp, #-36]	; 0xffffffdc
   28928:	cmp	r0, #0
   2892c:	beq	289dc <main@@Base+0x12954>
   28930:	subs	r0, r5, #1
   28934:	sbcs	r0, sl, #-2147483648	; 0x80000000
   28938:	bcc	28a08 <main@@Base+0x12980>
   2893c:	mov	r0, r9
   28940:	mov	r1, r4
   28944:	mov	r2, r8
   28948:	mov	r3, #8
   2894c:	b	289f4 <main@@Base+0x1296c>
   28950:	add	r7, sl, #8
   28954:	mov	r1, #8
   28958:	sub	r0, r8, r7
   2895c:	cmp	r0, #8
   28960:	movcc	r1, r0
   28964:	sub	r1, r1, #1
   28968:	cmp	r1, #7
   2896c:	bhi	28f18 <main@@Base+0x12e90>
   28970:	ldrb	r1, [r7]
   28974:	cmp	r1, #53	; 0x35
   28978:	bne	28f18 <main@@Base+0x12e90>
   2897c:	cmp	r0, #2
   28980:	blt	28f14 <main@@Base+0x12e8c>
   28984:	ldr	r2, [sp, #20]
   28988:	mov	r1, sl
   2898c:	ldrb	r0, [r1, #9]!
   28990:	ldr	r2, [r2]
   28994:	cmp	r2, #0
   28998:	beq	28a90 <main@@Base+0x12a08>
   2899c:	cmp	r0, #33	; 0x21
   289a0:	bcc	289ac <main@@Base+0x12924>
   289a4:	cmp	r0, #58	; 0x3a
   289a8:	bne	28f14 <main@@Base+0x12e8c>
   289ac:	ldr	r0, [sp, #20]
   289b0:	mov	r2, #0
   289b4:	str	r2, [r0]
   289b8:	b	28a9c <main@@Base+0x12a14>
   289bc:	ldr	r6, [sp, #24]
   289c0:	mov	sl, #0
   289c4:	mov	r4, r8
   289c8:	b	28a18 <main@@Base+0x12990>
   289cc:	mov	r5, #0
   289d0:	mov	sl, #0
   289d4:	mov	r4, r7
   289d8:	b	28a18 <main@@Base+0x12990>
   289dc:	cmn	sl, #1
   289e0:	bgt	28a10 <main@@Base+0x12988>
   289e4:	mov	r0, r9
   289e8:	mov	r1, r4
   289ec:	mov	r2, r8
   289f0:	mov	r3, #7
   289f4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   289f8:	mov	r4, r0
   289fc:	mov	r5, #0
   28a00:	mov	sl, #0
   28a04:	b	28a18 <main@@Base+0x12990>
   28a08:	rsbs	r5, r5, #0
   28a0c:	rsc	sl, sl, #0
   28a10:	str	r5, [sp, #32]
   28a14:	str	sl, [sp, #36]	; 0x24
   28a18:	cmp	r7, r4
   28a1c:	bne	28a58 <main@@Base+0x129d0>
   28a20:	movw	r3, #45680	; 0xb270
   28a24:	add	r0, sp, #32
   28a28:	mov	r1, r7
   28a2c:	mov	r2, r8
   28a30:	movt	r3, #5
   28a34:	str	r0, [sp]
   28a38:	mov	r0, r9
   28a3c:	bl	24dc4 <main@@Base+0xed3c>
   28a40:	mov	r4, r0
   28a44:	cmp	r0, r7
   28a48:	cmpne	r4, r8
   28a4c:	beq	29c70 <main@@Base+0x13be8>
   28a50:	ldr	r5, [sp, #32]
   28a54:	ldr	sl, [sp, #36]	; 0x24
   28a58:	orrs	r0, r5, sl
   28a5c:	bne	28a6c <main@@Base+0x129e4>
   28a60:	ldrb	r0, [r9, #8]
   28a64:	tst	r0, #2
   28a68:	beq	28f30 <main@@Base+0x12ea8>
   28a6c:	ldr	r0, [r9]
   28a70:	mov	r1, #7
   28a74:	mov	r2, #8
   28a78:	mov	r3, #8
   28a7c:	bl	30824 <flatcc_builder_table_add@@Base>
   28a80:	cmp	r0, #0
   28a84:	beq	29c70 <main@@Base+0x13be8>
   28a88:	stm	r0, {r5, sl}
   28a8c:	b	28f30 <main@@Base+0x12ea8>
   28a90:	cmp	r0, #34	; 0x22
   28a94:	bne	28f14 <main@@Base+0x12e8c>
   28a98:	add	r1, sl, #10
   28a9c:	sub	r0, r8, r1
   28aa0:	cmp	r0, #2
   28aa4:	blt	28cfc <main@@Base+0x12c74>
   28aa8:	ldrb	r0, [r1]
   28aac:	cmp	r0, #32
   28ab0:	bls	28ce8 <main@@Base+0x12c60>
   28ab4:	mov	r9, r1
   28ab8:	b	28d0c <main@@Base+0x12c84>
   28abc:	bne	28ad0 <main@@Base+0x12a48>
   28ac0:	mov	r9, r1
   28ac4:	ldrb	r0, [r9, #1]!
   28ac8:	cmp	r0, #32
   28acc:	bhi	28ae0 <main@@Base+0x12a58>
   28ad0:	ldr	r0, [sp, #16]
   28ad4:	mov	r2, r8
   28ad8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28adc:	mov	r9, r0
   28ae0:	cmp	r9, r8
   28ae4:	beq	28b18 <main@@Base+0x12a90>
   28ae8:	ldrb	r0, [r9]
   28aec:	cmp	r0, #58	; 0x3a
   28af0:	bne	28b18 <main@@Base+0x12a90>
   28af4:	add	r1, r9, #1
   28af8:	sub	r0, r8, r1
   28afc:	cmp	r0, #2
   28b00:	blt	28d6c <main@@Base+0x12ce4>
   28b04:	ldrb	r0, [r1]
   28b08:	cmp	r0, #32
   28b0c:	bls	28d5c <main@@Base+0x12cd4>
   28b10:	mov	r9, r1
   28b14:	b	28d7c <main@@Base+0x12cf4>
   28b18:	ldr	r0, [sp, #16]
   28b1c:	mov	r1, r9
   28b20:	mov	r2, r8
   28b24:	mov	r3, #4
   28b28:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28b2c:	b	28d78 <main@@Base+0x12cf0>
   28b30:	bne	28b40 <main@@Base+0x12ab8>
   28b34:	ldrb	r0, [r9, #2]!
   28b38:	cmp	r0, #32
   28b3c:	bhi	28b50 <main@@Base+0x12ac8>
   28b40:	ldr	r0, [sp, #16]
   28b44:	mov	r2, r8
   28b48:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28b4c:	mov	r9, r0
   28b50:	cmp	r7, r9
   28b54:	beq	28f14 <main@@Base+0x12e8c>
   28b58:	mov	r5, #0
   28b5c:	cmp	r9, r8
   28b60:	str	r5, [fp, #-36]	; 0xffffffdc
   28b64:	str	r5, [fp, #-40]	; 0xffffffd8
   28b68:	str	r5, [sp, #44]	; 0x2c
   28b6c:	str	r5, [sp, #32]
   28b70:	beq	28bbc <main@@Base+0x12b34>
   28b74:	sub	r0, fp, #40	; 0x28
   28b78:	mov	r1, r9
   28b7c:	mov	r2, r8
   28b80:	add	r3, sp, #32
   28b84:	str	r0, [sp]
   28b88:	ldr	r0, [sp, #16]
   28b8c:	bl	352ec <flatcc_json_parser_integer@@Base>
   28b90:	cmp	r0, r9
   28b94:	beq	28bc4 <main@@Base+0x12b3c>
   28b98:	mov	r4, r0
   28b9c:	ldr	r0, [sp, #32]
   28ba0:	cmp	r0, #0
   28ba4:	beq	28bcc <main@@Base+0x12b44>
   28ba8:	ldr	r0, [sp, #16]
   28bac:	mov	r1, r4
   28bb0:	mov	r2, r8
   28bb4:	mov	r3, #8
   28bb8:	b	28be8 <main@@Base+0x12b60>
   28bbc:	mov	r4, r8
   28bc0:	b	28bf0 <main@@Base+0x12b68>
   28bc4:	mov	r4, r9
   28bc8:	b	28bf0 <main@@Base+0x12b68>
   28bcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28bd0:	cmp	r0, #0
   28bd4:	beq	28cdc <main@@Base+0x12c54>
   28bd8:	ldr	r0, [sp, #16]
   28bdc:	mov	r1, r4
   28be0:	mov	r2, r8
   28be4:	mov	r3, #7
   28be8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28bec:	mov	r4, r0
   28bf0:	cmp	r9, r4
   28bf4:	bne	28c2c <main@@Base+0x12ba4>
   28bf8:	add	r0, sp, #44	; 0x2c
   28bfc:	movw	r3, #45632	; 0xb240
   28c00:	mov	r1, r9
   28c04:	mov	r2, r8
   28c08:	str	r0, [sp]
   28c0c:	ldr	r0, [sp, #16]
   28c10:	movt	r3, #5
   28c14:	bl	24fd0 <main@@Base+0xef48>
   28c18:	mov	r4, r0
   28c1c:	cmp	r0, r9
   28c20:	cmpne	r4, r8
   28c24:	beq	29c70 <main@@Base+0x13be8>
   28c28:	ldr	r5, [sp, #44]	; 0x2c
   28c2c:	ldr	r9, [sp, #16]
   28c30:	cmp	r5, #0
   28c34:	bne	28c44 <main@@Base+0x12bbc>
   28c38:	ldrb	r0, [r9, #8]
   28c3c:	tst	r0, #2
   28c40:	beq	28f2c <main@@Base+0x12ea4>
   28c44:	ldr	r0, [r9]
   28c48:	mov	r1, #1
   28c4c:	mov	r2, #4
   28c50:	mov	r3, #4
   28c54:	bl	30824 <flatcc_builder_table_add@@Base>
   28c58:	cmp	r0, #0
   28c5c:	beq	29c70 <main@@Base+0x13be8>
   28c60:	str	r5, [r0]
   28c64:	b	28f2c <main@@Base+0x12ea4>
   28c68:	ldr	r9, [sp, #16]
   28c6c:	bne	28c7c <main@@Base+0x12bf4>
   28c70:	ldrb	r0, [r1, #2]!
   28c74:	cmp	r0, #32
   28c78:	bhi	28c90 <main@@Base+0x12c08>
   28c7c:	mov	r1, r2
   28c80:	mov	r0, r9
   28c84:	mov	r2, r8
   28c88:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28c8c:	mov	r1, r0
   28c90:	cmp	sl, r1
   28c94:	beq	28688 <main@@Base+0x12600>
   28c98:	mov	r0, r9
   28c9c:	mov	r2, r8
   28ca0:	add	r3, sp, #28
   28ca4:	bl	35818 <flatcc_json_parser_build_string@@Base>
   28ca8:	mov	r4, r0
   28cac:	ldr	r0, [sp, #28]
   28cb0:	cmp	r0, #0
   28cb4:	beq	29c74 <main@@Base+0x13bec>
   28cb8:	ldr	r0, [r9]
   28cbc:	mov	r1, #2
   28cc0:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   28cc4:	ldr	r6, [sp, #24]
   28cc8:	cmp	r0, #0
   28ccc:	beq	29c74 <main@@Base+0x13bec>
   28cd0:	ldr	r1, [sp, #28]
   28cd4:	str	r1, [r0]
   28cd8:	b	28f30 <main@@Base+0x12ea8>
   28cdc:	ldr	r5, [fp, #-40]	; 0xffffffd8
   28ce0:	str	r5, [sp, #44]	; 0x2c
   28ce4:	b	28bf0 <main@@Base+0x12b68>
   28ce8:	bne	28cfc <main@@Base+0x12c74>
   28cec:	mov	r9, r1
   28cf0:	ldrb	r0, [r9, #1]!
   28cf4:	cmp	r0, #32
   28cf8:	bhi	28d0c <main@@Base+0x12c84>
   28cfc:	ldr	r0, [sp, #16]
   28d00:	mov	r2, r8
   28d04:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28d08:	mov	r9, r0
   28d0c:	cmp	r9, r8
   28d10:	beq	28d44 <main@@Base+0x12cbc>
   28d14:	ldrb	r0, [r9]
   28d18:	cmp	r0, #58	; 0x3a
   28d1c:	bne	28d44 <main@@Base+0x12cbc>
   28d20:	add	r1, r9, #1
   28d24:	sub	r0, r8, r1
   28d28:	cmp	r0, #2
   28d2c:	blt	28e98 <main@@Base+0x12e10>
   28d30:	ldrb	r0, [r1]
   28d34:	cmp	r0, #32
   28d38:	bls	28e88 <main@@Base+0x12e00>
   28d3c:	mov	r9, r1
   28d40:	b	28ea8 <main@@Base+0x12e20>
   28d44:	ldr	r0, [sp, #16]
   28d48:	mov	r1, r9
   28d4c:	mov	r2, r8
   28d50:	mov	r3, #4
   28d54:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28d58:	b	28ea4 <main@@Base+0x12e1c>
   28d5c:	bne	28d6c <main@@Base+0x12ce4>
   28d60:	ldrb	r0, [r9, #2]!
   28d64:	cmp	r0, #32
   28d68:	bhi	28d7c <main@@Base+0x12cf4>
   28d6c:	ldr	r0, [sp, #16]
   28d70:	mov	r2, r8
   28d74:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28d78:	mov	r9, r0
   28d7c:	cmp	r7, r9
   28d80:	beq	28f14 <main@@Base+0x12e8c>
   28d84:	mov	r5, #0
   28d88:	cmp	r9, r8
   28d8c:	str	r5, [fp, #-36]	; 0xffffffdc
   28d90:	str	r5, [fp, #-40]	; 0xffffffd8
   28d94:	str	r5, [sp, #44]	; 0x2c
   28d98:	str	r5, [sp, #32]
   28d9c:	beq	28de8 <main@@Base+0x12d60>
   28da0:	sub	r0, fp, #40	; 0x28
   28da4:	mov	r1, r9
   28da8:	mov	r2, r8
   28dac:	add	r3, sp, #32
   28db0:	str	r0, [sp]
   28db4:	ldr	r0, [sp, #16]
   28db8:	bl	352ec <flatcc_json_parser_integer@@Base>
   28dbc:	cmp	r0, r9
   28dc0:	beq	28df0 <main@@Base+0x12d68>
   28dc4:	mov	r4, r0
   28dc8:	ldr	r0, [sp, #32]
   28dcc:	cmp	r0, #0
   28dd0:	beq	28df8 <main@@Base+0x12d70>
   28dd4:	ldr	r0, [sp, #16]
   28dd8:	mov	r1, r4
   28ddc:	mov	r2, r8
   28de0:	mov	r3, #8
   28de4:	b	28e14 <main@@Base+0x12d8c>
   28de8:	mov	r4, r8
   28dec:	b	28e1c <main@@Base+0x12d94>
   28df0:	mov	r4, r9
   28df4:	b	28e1c <main@@Base+0x12d94>
   28df8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28dfc:	cmp	r0, #0
   28e00:	beq	28e7c <main@@Base+0x12df4>
   28e04:	ldr	r0, [sp, #16]
   28e08:	mov	r1, r4
   28e0c:	mov	r2, r8
   28e10:	mov	r3, #7
   28e14:	bl	333fc <flatcc_json_parser_set_error@@Base>
   28e18:	mov	r4, r0
   28e1c:	cmp	r9, r4
   28e20:	bne	28e58 <main@@Base+0x12dd0>
   28e24:	add	r0, sp, #44	; 0x2c
   28e28:	movw	r3, #45668	; 0xb264
   28e2c:	mov	r1, r9
   28e30:	mov	r2, r8
   28e34:	str	r0, [sp]
   28e38:	ldr	r0, [sp, #16]
   28e3c:	movt	r3, #5
   28e40:	bl	24fd0 <main@@Base+0xef48>
   28e44:	mov	r4, r0
   28e48:	cmp	r0, r9
   28e4c:	cmpne	r4, r8
   28e50:	beq	29c70 <main@@Base+0x13be8>
   28e54:	ldr	r5, [sp, #44]	; 0x2c
   28e58:	cmp	r5, #0
   28e5c:	bne	28e70 <main@@Base+0x12de8>
   28e60:	ldr	r0, [sp, #16]
   28e64:	ldrb	r0, [r0, #8]
   28e68:	tst	r0, #2
   28e6c:	beq	29094 <main@@Base+0x1300c>
   28e70:	ldr	r0, [sp, #16]
   28e74:	mov	r1, #6
   28e78:	b	29078 <main@@Base+0x12ff0>
   28e7c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   28e80:	str	r5, [sp, #44]	; 0x2c
   28e84:	b	28e1c <main@@Base+0x12d94>
   28e88:	bne	28e98 <main@@Base+0x12e10>
   28e8c:	ldrb	r0, [r9, #2]!
   28e90:	cmp	r0, #32
   28e94:	bhi	28ea8 <main@@Base+0x12e20>
   28e98:	ldr	r0, [sp, #16]
   28e9c:	mov	r2, r8
   28ea0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28ea4:	mov	r9, r0
   28ea8:	cmp	r7, r9
   28eac:	beq	28f14 <main@@Base+0x12e8c>
   28eb0:	mov	r5, #0
   28eb4:	cmp	r9, r8
   28eb8:	str	r5, [fp, #-36]	; 0xffffffdc
   28ebc:	str	r5, [fp, #-40]	; 0xffffffd8
   28ec0:	str	r5, [sp, #44]	; 0x2c
   28ec4:	str	r5, [sp, #32]
   28ec8:	beq	28fe8 <main@@Base+0x12f60>
   28ecc:	sub	r0, fp, #40	; 0x28
   28ed0:	mov	r1, r9
   28ed4:	mov	r2, r8
   28ed8:	add	r3, sp, #32
   28edc:	str	r0, [sp]
   28ee0:	ldr	r0, [sp, #16]
   28ee4:	bl	352ec <flatcc_json_parser_integer@@Base>
   28ee8:	cmp	r0, r9
   28eec:	beq	28ff0 <main@@Base+0x12f68>
   28ef0:	mov	r4, r0
   28ef4:	ldr	r0, [sp, #32]
   28ef8:	cmp	r0, #0
   28efc:	beq	28ff8 <main@@Base+0x12f70>
   28f00:	ldr	r0, [sp, #16]
   28f04:	mov	r1, r4
   28f08:	mov	r2, r8
   28f0c:	mov	r3, #8
   28f10:	b	29014 <main@@Base+0x12f8c>
   28f14:	ldr	r9, [sp, #16]
   28f18:	mov	r0, r9
   28f1c:	mov	r1, r7
   28f20:	mov	r2, r8
   28f24:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   28f28:	mov	r4, r0
   28f2c:	ldr	r6, [sp, #24]
   28f30:	sub	r0, r8, r4
   28f34:	cmp	r0, #2
   28f38:	blt	28f64 <main@@Base+0x12edc>
   28f3c:	ldrb	r0, [r4]
   28f40:	cmp	r0, #32
   28f44:	bls	28f50 <main@@Base+0x12ec8>
   28f48:	mov	r2, r4
   28f4c:	b	28f78 <main@@Base+0x12ef0>
   28f50:	bne	28f64 <main@@Base+0x12edc>
   28f54:	mov	r2, r4
   28f58:	ldrb	r0, [r2, #1]!
   28f5c:	cmp	r0, #32
   28f60:	bhi	28f78 <main@@Base+0x12ef0>
   28f64:	mov	r0, r9
   28f68:	mov	r1, r4
   28f6c:	mov	r2, r8
   28f70:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28f74:	mov	r2, r0
   28f78:	cmp	r2, r8
   28f7c:	beq	291bc <main@@Base+0x13134>
   28f80:	ldrb	r0, [r2]
   28f84:	cmp	r0, #44	; 0x2c
   28f88:	bne	291c4 <main@@Base+0x1313c>
   28f8c:	add	r1, r2, #1
   28f90:	sub	r0, r8, r1
   28f94:	cmp	r0, #2
   28f98:	blt	28fc0 <main@@Base+0x12f38>
   28f9c:	ldrb	r0, [r1]
   28fa0:	cmp	r0, #32
   28fa4:	bls	28fb0 <main@@Base+0x12f28>
   28fa8:	mov	r2, r1
   28fac:	b	28fd0 <main@@Base+0x12f48>
   28fb0:	bne	28fc0 <main@@Base+0x12f38>
   28fb4:	ldrb	r0, [r2, #2]!
   28fb8:	cmp	r0, #32
   28fbc:	bhi	28fd0 <main@@Base+0x12f48>
   28fc0:	mov	r0, r9
   28fc4:	mov	r2, r8
   28fc8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   28fcc:	mov	r2, r0
   28fd0:	cmp	r2, r8
   28fd4:	beq	291f0 <main@@Base+0x13168>
   28fd8:	ldrb	r0, [r2]
   28fdc:	cmp	r0, #125	; 0x7d
   28fe0:	bne	27c18 <main@@Base+0x11b90>
   28fe4:	b	291cc <main@@Base+0x13144>
   28fe8:	mov	r4, r8
   28fec:	b	2901c <main@@Base+0x12f94>
   28ff0:	mov	r4, r9
   28ff4:	b	2901c <main@@Base+0x12f94>
   28ff8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28ffc:	cmp	r0, #0
   29000:	beq	2909c <main@@Base+0x13014>
   29004:	ldr	r0, [sp, #16]
   29008:	mov	r1, r4
   2900c:	mov	r2, r8
   29010:	mov	r3, #7
   29014:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29018:	mov	r4, r0
   2901c:	cmp	r9, r4
   29020:	bne	29058 <main@@Base+0x12fd0>
   29024:	add	r0, sp, #44	; 0x2c
   29028:	movw	r3, #45692	; 0xb27c
   2902c:	mov	r1, r9
   29030:	mov	r2, r8
   29034:	str	r0, [sp]
   29038:	ldr	r0, [sp, #16]
   2903c:	movt	r3, #5
   29040:	bl	24fd0 <main@@Base+0xef48>
   29044:	mov	r4, r0
   29048:	cmp	r0, r9
   2904c:	cmpne	r4, r8
   29050:	beq	29c70 <main@@Base+0x13be8>
   29054:	ldr	r5, [sp, #44]	; 0x2c
   29058:	cmp	r5, #0
   2905c:	bne	29070 <main@@Base+0x12fe8>
   29060:	ldr	r0, [sp, #16]
   29064:	ldrb	r0, [r0, #8]
   29068:	tst	r0, #2
   2906c:	beq	29094 <main@@Base+0x1300c>
   29070:	ldr	r0, [sp, #16]
   29074:	mov	r1, #8
   29078:	ldr	r0, [r0]
   2907c:	mov	r2, #4
   29080:	mov	r3, #4
   29084:	bl	30824 <flatcc_builder_table_add@@Base>
   29088:	cmp	r0, #0
   2908c:	beq	29c70 <main@@Base+0x13be8>
   29090:	str	r5, [r0]
   29094:	ldr	r9, [sp, #16]
   29098:	b	28f2c <main@@Base+0x12ea4>
   2909c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   290a0:	str	r5, [sp, #44]	; 0x2c
   290a4:	b	2901c <main@@Base+0x12f94>
   290a8:	bne	290b8 <main@@Base+0x13030>
   290ac:	ldrb	r0, [r4, #2]!
   290b0:	cmp	r0, #32
   290b4:	bhi	290c8 <main@@Base+0x13040>
   290b8:	mov	r0, r9
   290bc:	mov	r2, r8
   290c0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   290c4:	mov	r4, r0
   290c8:	mov	ip, r5
   290cc:	cmp	r5, r4
   290d0:	beq	271d0 <main@@Base+0x11148>
   290d4:	ldr	r0, [r9]
   290d8:	mov	r1, #2
   290dc:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   290e0:	cmp	r0, #0
   290e4:	bne	29c74 <main@@Base+0x13bec>
   290e8:	cmp	r4, r8
   290ec:	beq	29124 <main@@Base+0x1309c>
   290f0:	ldrb	r0, [r4]
   290f4:	cmp	r0, #123	; 0x7b
   290f8:	bne	29124 <main@@Base+0x1309c>
   290fc:	ldr	r6, [sp, #24]
   29100:	add	r1, r4, #1
   29104:	sub	r0, r8, r1
   29108:	cmp	r0, #2
   2910c:	blt	2920c <main@@Base+0x13184>
   29110:	ldrb	r0, [r1]
   29114:	cmp	r0, #32
   29118:	bls	291fc <main@@Base+0x13174>
   2911c:	mov	r4, r1
   29120:	b	2921c <main@@Base+0x13194>
   29124:	mov	r0, r9
   29128:	mov	r1, r4
   2912c:	mov	r2, r8
   29130:	mov	r3, #21
   29134:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29138:	ldr	r6, [sp, #24]
   2913c:	mov	r4, r0
   29140:	ldr	r0, [r9, #24]
   29144:	cmp	r0, #0
   29148:	bne	29c74 <main@@Base+0x13bec>
   2914c:	ldr	r0, [r9]
   29150:	bl	2ff38 <flatcc_builder_end_table@@Base>
   29154:	cmp	r0, #0
   29158:	beq	29c74 <main@@Base+0x13bec>
   2915c:	mov	r7, r0
   29160:	ldr	r0, [r9]
   29164:	mov	r1, #2
   29168:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   2916c:	cmp	r0, #0
   29170:	beq	26a80 <main@@Base+0x109f8>
   29174:	str	r7, [r0]
   29178:	b	271e8 <main@@Base+0x11160>
   2917c:	mov	r4, r8
   29180:	b	270c4 <main@@Base+0x1103c>
   29184:	cmp	r0, #125	; 0x7d
   29188:	bne	29ad4 <main@@Base+0x13a4c>
   2918c:	add	r1, r2, #1
   29190:	sub	r0, r8, r1
   29194:	cmp	r0, #2
   29198:	blt	29b68 <main@@Base+0x13ae0>
   2919c:	ldrb	r0, [r1]
   291a0:	cmp	r0, #32
   291a4:	bls	29b54 <main@@Base+0x13acc>
   291a8:	mov	r4, r1
   291ac:	b	270c4 <main@@Base+0x1103c>
   291b0:	mov	r0, r9
   291b4:	mov	r1, r8
   291b8:	b	29adc <main@@Base+0x13a54>
   291bc:	mov	r4, r8
   291c0:	b	272bc <main@@Base+0x11234>
   291c4:	cmp	r0, #125	; 0x7d
   291c8:	bne	29b78 <main@@Base+0x13af0>
   291cc:	add	r1, r2, #1
   291d0:	sub	r0, r8, r1
   291d4:	cmp	r0, #2
   291d8:	blt	29ba4 <main@@Base+0x13b1c>
   291dc:	ldrb	r0, [r1]
   291e0:	cmp	r0, #32
   291e4:	bls	29b90 <main@@Base+0x13b08>
   291e8:	mov	r4, r1
   291ec:	b	272bc <main@@Base+0x11234>
   291f0:	mov	r0, r9
   291f4:	mov	r1, r8
   291f8:	b	29b80 <main@@Base+0x13af8>
   291fc:	bne	2920c <main@@Base+0x13184>
   29200:	ldrb	r0, [r4, #2]!
   29204:	cmp	r0, #32
   29208:	bhi	2921c <main@@Base+0x13194>
   2920c:	mov	r0, r9
   29210:	mov	r2, r8
   29214:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   29218:	mov	r4, r0
   2921c:	cmp	r4, r8
   29220:	mov	r2, r8
   29224:	beq	29260 <main@@Base+0x131d8>
   29228:	ldrb	r0, [r4]
   2922c:	cmp	r0, #125	; 0x7d
   29230:	bne	2925c <main@@Base+0x131d4>
   29234:	add	r1, r4, #1
   29238:	sub	r0, r8, r1
   2923c:	cmp	r0, #2
   29240:	blt	29be8 <main@@Base+0x13b60>
   29244:	ldrb	r0, [r1]
   29248:	cmp	r0, #32
   2924c:	bhi	29b4c <main@@Base+0x13ac4>
   29250:	bne	29be8 <main@@Base+0x13b60>
   29254:	ldrb	r0, [r4, #2]!
   29258:	b	29be0 <main@@Base+0x13b58>
   2925c:	mov	r2, r4
   29260:	cmp	r2, r8
   29264:	mov	r1, r8
   29268:	beq	292c0 <main@@Base+0x13238>
   2926c:	ldrb	r0, [r2]
   29270:	cmp	r0, #46	; 0x2e
   29274:	beq	29294 <main@@Base+0x1320c>
   29278:	cmp	r0, #34	; 0x22
   2927c:	bne	292b0 <main@@Base+0x13228>
   29280:	ldr	r0, [sp, #20]
   29284:	mov	r1, #0
   29288:	str	r1, [r0]
   2928c:	add	r1, r2, #1
   29290:	b	292c0 <main@@Base+0x13238>
   29294:	mov	r1, r2
   29298:	mov	r0, r9
   2929c:	mov	r2, r8
   292a0:	mov	r3, #5
   292a4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   292a8:	mov	r1, r0
   292ac:	b	292c0 <main@@Base+0x13238>
   292b0:	ldr	r0, [sp, #20]
   292b4:	mov	r1, #1
   292b8:	str	r1, [r0]
   292bc:	mov	r1, r2
   292c0:	sub	r0, r8, r1
   292c4:	mov	r2, #8
   292c8:	cmp	r0, #8
   292cc:	movcs	r0, r2
   292d0:	sub	r7, r0, #1
   292d4:	cmp	r7, #7
   292d8:	bhi	29558 <main@@Base+0x134d0>
   292dc:	add	r0, pc, #32
   292e0:	mov	r9, #0
   292e4:	mov	ip, #0
   292e8:	mov	lr, #0
   292ec:	mov	sl, #0
   292f0:	mov	r3, #0
   292f4:	mov	r5, #0
   292f8:	mov	r2, #0
   292fc:	mov	r4, #0
   29300:	ldr	pc, [r0, r7, lsl #2]
   29304:	andeq	r9, r2, r8, ror #6
   29308:	andeq	r9, r2, r0, ror #6
   2930c:	andeq	r9, r2, r8, asr r3
   29310:	andeq	r9, r2, r0, asr r3
   29314:	andeq	r9, r2, r4, asr #6
   29318:	andeq	r9, r2, r8, lsr r3
   2931c:	andeq	r9, r2, r8, lsr #6
   29320:	andeq	r9, r2, r4, lsr #6
   29324:	ldrb	ip, [r1, #7]
   29328:	ldrb	r0, [r1, #6]
   2932c:	mov	lr, r9
   29330:	orr	r0, ip, r0, lsl #8
   29334:	mov	r9, r0
   29338:	ldrb	r0, [r1, #5]
   2933c:	mov	sl, lr
   29340:	orr	r9, r9, r0, lsl #16
   29344:	ldrb	r0, [r1, #4]
   29348:	mov	r3, sl
   2934c:	orr	r9, r9, r0, lsl #24
   29350:	ldrb	r0, [r1, #3]
   29354:	orr	r5, r0, r3
   29358:	ldrb	r0, [r1, #2]
   2935c:	orr	r2, r5, r0, lsl #8
   29360:	ldrb	r0, [r1, #1]
   29364:	orr	r4, r2, r0, lsl #16
   29368:	ldrb	r2, [r1]
   2936c:	movw	r0, #25186	; 0x6262
   29370:	movw	r3, #24929	; 0x6161
   29374:	movt	r0, #24418	; 0x5f62
   29378:	movt	r3, #24929	; 0x6161
   2937c:	eor	r0, r9, r0
   29380:	ldr	r9, [sp, #16]
   29384:	orr	r2, r4, r2, lsl #24
   29388:	eor	r2, r2, r3
   2938c:	orrs	r0, r0, r2
   29390:	bne	29558 <main@@Base+0x134d0>
   29394:	add	r4, r1, #8
   29398:	mov	r0, #8
   2939c:	sub	lr, r8, r4
   293a0:	cmp	lr, #8
   293a4:	movcc	r0, lr
   293a8:	sub	ip, r0, #1
   293ac:	cmp	ip, #7
   293b0:	bhi	297c8 <main@@Base+0x13740>
   293b4:	str	r4, [sp, #4]
   293b8:	add	r9, pc, #32
   293bc:	mov	r2, #0
   293c0:	mov	r6, #0
   293c4:	mov	sl, #0
   293c8:	mov	r5, #0
   293cc:	mov	r7, #0
   293d0:	mov	r4, #0
   293d4:	mov	r0, #0
   293d8:	mov	r3, #0
   293dc:	ldr	pc, [r9, ip, lsl #2]
   293e0:	andeq	r9, r2, r4, asr #8
   293e4:	andeq	r9, r2, ip, lsr r4
   293e8:	andeq	r9, r2, r4, lsr r4
   293ec:	andeq	r9, r2, ip, lsr #8
   293f0:	andeq	r9, r2, r0, lsr #8
   293f4:	andeq	r9, r2, r4, lsl r4
   293f8:	andeq	r9, r2, r4, lsl #8
   293fc:	andeq	r9, r2, r0, lsl #8
   29400:	ldrb	r6, [r1, #15]
   29404:	ldrb	r0, [r1, #14]
   29408:	mov	sl, r2
   2940c:	orr	r0, r6, r0, lsl #8
   29410:	mov	r2, r0
   29414:	ldrb	r0, [r1, #13]
   29418:	mov	r5, sl
   2941c:	orr	r2, r2, r0, lsl #16
   29420:	ldrb	r0, [r1, #12]
   29424:	mov	r7, r5
   29428:	orr	r2, r2, r0, lsl #24
   2942c:	ldrb	r0, [r1, #11]
   29430:	orr	r4, r0, r7
   29434:	ldrb	r0, [r1, #10]
   29438:	orr	r0, r4, r0, lsl #8
   2943c:	ldrb	r3, [r1, #9]
   29440:	orr	r3, r0, r3, lsl #16
   29444:	ldr	r4, [sp, #4]
   29448:	movw	r0, #29791	; 0x745f
   2944c:	movt	r0, #24946	; 0x6172
   29450:	eor	r7, r2, r0
   29454:	ldrb	r0, [r4]
   29458:	orr	r0, r3, r0, lsl #24
   2945c:	movw	r3, #29556	; 0x7374
   29460:	movt	r3, #25183	; 0x625f
   29464:	eor	r0, r0, r3
   29468:	orrs	r3, r7, r0
   2946c:	bne	29560 <main@@Base+0x134d8>
   29470:	add	r9, r1, #16
   29474:	ldr	r6, [sp, #24]
   29478:	mov	r2, #8
   2947c:	sub	ip, r8, r9
   29480:	cmp	ip, #8
   29484:	movcc	r2, ip
   29488:	sub	r7, r2, #1
   2948c:	cmp	r7, #7
   29490:	bhi	29944 <main@@Base+0x138bc>
   29494:	add	r0, pc, #20
   29498:	mov	lr, #0
   2949c:	mov	r3, #0
   294a0:	mov	r2, #0
   294a4:	mov	r5, #0
   294a8:	mov	r4, #0
   294ac:	ldr	pc, [r0, r7, lsl #2]
   294b0:	strdeq	r9, [r2], -r4
   294b4:	andeq	r9, r2, ip, ror #9
   294b8:	andeq	r9, r2, r4, ror #9
   294bc:	ldrdeq	r9, [r2], -r8
   294c0:	ldrdeq	r9, [r2], -r0
   294c4:	ldrdeq	r9, [r2], -r0
   294c8:	ldrdeq	r9, [r2], -r0
   294cc:	ldrdeq	r9, [r2], -r0
   294d0:	ldrb	r0, [r1, #20]
   294d4:	lsl	r3, r0, #24
   294d8:	ldrb	r0, [r1, #19]
   294dc:	orr	r2, r0, lr
   294e0:	mov	lr, r3
   294e4:	ldrb	r0, [r1, #18]
   294e8:	orr	r5, r2, r0, lsl #8
   294ec:	ldrb	r0, [r1, #17]
   294f0:	orr	r4, r5, r0, lsl #16
   294f4:	ldrb	r0, [r9]
   294f8:	movw	r2, #25968	; 0x6570
   294fc:	movt	r2, #29556	; 0x7374
   29500:	orr	r0, r4, r0, lsl #24
   29504:	eor	r0, r0, r2
   29508:	and	r2, lr, #-16777216	; 0xff000000
   2950c:	eor	r2, r2, #1929379840	; 0x73000000
   29510:	orrs	r0, r2, r0
   29514:	bne	29944 <main@@Base+0x138bc>
   29518:	cmp	ip, #6
   2951c:	blt	29944 <main@@Base+0x138bc>
   29520:	ldr	r3, [sp, #20]
   29524:	mov	r2, r1
   29528:	ldrb	r0, [r2, #21]!
   2952c:	ldr	r3, [r3]
   29530:	cmp	r3, #0
   29534:	beq	295ec <main@@Base+0x13564>
   29538:	cmp	r0, #33	; 0x21
   2953c:	bcc	29548 <main@@Base+0x134c0>
   29540:	cmp	r0, #58	; 0x3a
   29544:	bne	29944 <main@@Base+0x138bc>
   29548:	ldr	r0, [sp, #20]
   2954c:	mov	r1, #0
   29550:	str	r1, [r0]
   29554:	b	295f8 <main@@Base+0x13570>
   29558:	mov	r0, r9
   2955c:	b	29950 <main@@Base+0x138c8>
   29560:	movw	r3, #29440	; 0x7300
   29564:	ldr	r9, [sp, #16]
   29568:	ldr	r6, [sp, #24]
   2956c:	bic	r2, r2, #255	; 0xff
   29570:	movt	r3, #25968	; 0x6570
   29574:	eor	r2, r2, r3
   29578:	orrs	r0, r2, r0
   2957c:	bne	297c8 <main@@Base+0x13740>
   29580:	cmp	lr, #8
   29584:	blt	297c8 <main@@Base+0x13740>
   29588:	ldr	r3, [sp, #20]
   2958c:	mov	r2, r1
   29590:	ldrb	r0, [r2, #15]!
   29594:	ldr	r3, [r3]
   29598:	cmp	r3, #0
   2959c:	beq	295c0 <main@@Base+0x13538>
   295a0:	cmp	r0, #33	; 0x21
   295a4:	bcc	295b0 <main@@Base+0x13528>
   295a8:	cmp	r0, #58	; 0x3a
   295ac:	bne	297c8 <main@@Base+0x13740>
   295b0:	ldr	r0, [sp, #20]
   295b4:	mov	r1, #0
   295b8:	str	r1, [r0]
   295bc:	b	295cc <main@@Base+0x13544>
   295c0:	cmp	r0, #34	; 0x22
   295c4:	bne	297c8 <main@@Base+0x13740>
   295c8:	add	r2, r1, #16
   295cc:	sub	r0, r8, r2
   295d0:	cmp	r0, #2
   295d4:	blt	2962c <main@@Base+0x135a4>
   295d8:	ldrb	r0, [r2]
   295dc:	cmp	r0, #32
   295e0:	bls	29618 <main@@Base+0x13590>
   295e4:	mov	r7, r2
   295e8:	b	29640 <main@@Base+0x135b8>
   295ec:	cmp	r0, #34	; 0x22
   295f0:	bne	29944 <main@@Base+0x138bc>
   295f4:	add	r2, r1, #22
   295f8:	sub	r0, r8, r2
   295fc:	cmp	r0, #2
   29600:	blt	296b0 <main@@Base+0x13628>
   29604:	ldrb	r0, [r2]
   29608:	cmp	r0, #32
   2960c:	bls	2969c <main@@Base+0x13614>
   29610:	mov	r7, r2
   29614:	b	296c4 <main@@Base+0x1363c>
   29618:	bne	2962c <main@@Base+0x135a4>
   2961c:	mov	r7, r2
   29620:	ldrb	r0, [r7, #1]!
   29624:	cmp	r0, #32
   29628:	bhi	29640 <main@@Base+0x135b8>
   2962c:	mov	r1, r2
   29630:	mov	r0, r9
   29634:	mov	r2, r8
   29638:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2963c:	mov	r7, r0
   29640:	cmp	r7, r8
   29644:	beq	29684 <main@@Base+0x135fc>
   29648:	ldrb	r0, [r7]
   2964c:	cmp	r0, #58	; 0x3a
   29650:	bne	29684 <main@@Base+0x135fc>
   29654:	add	r1, r7, #1
   29658:	sub	r0, r8, r1
   2965c:	cmp	r0, #2
   29660:	blt	29734 <main@@Base+0x136ac>
   29664:	ldrb	r0, [r1]
   29668:	cmp	r0, #32
   2966c:	bls	29718 <main@@Base+0x13690>
   29670:	ldr	r9, [sp, #16]
   29674:	ldr	r6, [sp, #24]
   29678:	ldr	r4, [sp, #4]
   2967c:	mov	r7, r1
   29680:	b	29744 <main@@Base+0x136bc>
   29684:	mov	r0, r9
   29688:	mov	r1, r7
   2968c:	mov	r2, r8
   29690:	mov	r3, #4
   29694:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29698:	b	29740 <main@@Base+0x136b8>
   2969c:	bne	296b0 <main@@Base+0x13628>
   296a0:	mov	r7, r2
   296a4:	ldrb	r0, [r7, #1]!
   296a8:	cmp	r0, #32
   296ac:	bhi	296c4 <main@@Base+0x1363c>
   296b0:	ldr	r0, [sp, #16]
   296b4:	mov	r1, r2
   296b8:	mov	r2, r8
   296bc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   296c0:	mov	r7, r0
   296c4:	cmp	r7, r8
   296c8:	beq	29700 <main@@Base+0x13678>
   296cc:	ldrb	r0, [r7]
   296d0:	cmp	r0, #58	; 0x3a
   296d4:	bne	29700 <main@@Base+0x13678>
   296d8:	add	r1, r7, #1
   296dc:	sub	r0, r8, r1
   296e0:	cmp	r0, #2
   296e4:	blt	298c8 <main@@Base+0x13840>
   296e8:	ldrb	r0, [r1]
   296ec:	cmp	r0, #32
   296f0:	bls	298b4 <main@@Base+0x1382c>
   296f4:	ldr	r6, [sp, #24]
   296f8:	mov	r7, r1
   296fc:	b	298d8 <main@@Base+0x13850>
   29700:	ldr	r0, [sp, #16]
   29704:	mov	r1, r7
   29708:	mov	r2, r8
   2970c:	mov	r3, #4
   29710:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29714:	b	298d4 <main@@Base+0x1384c>
   29718:	ldr	r9, [sp, #16]
   2971c:	ldr	r6, [sp, #24]
   29720:	ldr	r4, [sp, #4]
   29724:	bne	29734 <main@@Base+0x136ac>
   29728:	ldrb	r0, [r7, #2]!
   2972c:	cmp	r0, #32
   29730:	bhi	29744 <main@@Base+0x136bc>
   29734:	mov	r0, r9
   29738:	mov	r2, r8
   2973c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   29740:	mov	r7, r0
   29744:	cmp	r4, r7
   29748:	beq	297c8 <main@@Base+0x13740>
   2974c:	mov	r6, #0
   29750:	cmp	r7, r8
   29754:	str	r6, [fp, #-36]	; 0xffffffdc
   29758:	str	r6, [fp, #-40]	; 0xffffffd8
   2975c:	str	r6, [sp, #36]	; 0x24
   29760:	str	r6, [sp, #32]
   29764:	str	r6, [sp, #44]	; 0x2c
   29768:	beq	297d4 <main@@Base+0x1374c>
   2976c:	sub	r0, fp, #40	; 0x28
   29770:	mov	r1, r7
   29774:	mov	r2, r8
   29778:	add	r3, sp, #44	; 0x2c
   2977c:	str	r0, [sp]
   29780:	mov	r0, r9
   29784:	bl	352ec <flatcc_json_parser_integer@@Base>
   29788:	cmp	r0, r7
   2978c:	beq	297e0 <main@@Base+0x13758>
   29790:	mov	r4, r0
   29794:	ldr	r0, [sp, #44]	; 0x2c
   29798:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2979c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   297a0:	cmp	r0, #0
   297a4:	beq	297f0 <main@@Base+0x13768>
   297a8:	subs	r0, r6, #1
   297ac:	sbcs	r0, r5, #-2147483648	; 0x80000000
   297b0:	bcc	29820 <main@@Base+0x13798>
   297b4:	ldr	r9, [sp, #16]
   297b8:	mov	r1, r4
   297bc:	mov	r2, r8
   297c0:	mov	r3, #8
   297c4:	b	29808 <main@@Base+0x13780>
   297c8:	mov	r0, r9
   297cc:	mov	r1, r4
   297d0:	b	29950 <main@@Base+0x138c8>
   297d4:	mov	r5, #0
   297d8:	mov	r4, r8
   297dc:	b	29834 <main@@Base+0x137ac>
   297e0:	mov	r6, #0
   297e4:	mov	r5, #0
   297e8:	mov	r4, r7
   297ec:	b	29830 <main@@Base+0x137a8>
   297f0:	cmn	r5, #1
   297f4:	bgt	29828 <main@@Base+0x137a0>
   297f8:	ldr	r9, [sp, #16]
   297fc:	mov	r1, r4
   29800:	mov	r2, r8
   29804:	mov	r3, #7
   29808:	mov	r0, r9
   2980c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29810:	mov	r4, r0
   29814:	mov	r6, #0
   29818:	mov	r5, #0
   2981c:	b	29834 <main@@Base+0x137ac>
   29820:	rsbs	r6, r6, #0
   29824:	rsc	r5, r5, #0
   29828:	str	r6, [sp, #32]
   2982c:	str	r5, [sp, #36]	; 0x24
   29830:	ldr	r9, [sp, #16]
   29834:	cmp	r7, r4
   29838:	bne	29878 <main@@Base+0x137f0>
   2983c:	movw	r3, #45716	; 0xb294
   29840:	add	r0, sp, #32
   29844:	mov	r1, r7
   29848:	mov	r2, r8
   2984c:	movt	r3, #5
   29850:	str	r0, [sp]
   29854:	mov	r0, r9
   29858:	bl	24dc4 <main@@Base+0xed3c>
   2985c:	mov	r4, r0
   29860:	cmp	r0, r7
   29864:	cmpne	r4, r8
   29868:	beq	29c70 <main@@Base+0x13be8>
   2986c:	ldr	r6, [sp, #32]
   29870:	ldr	r5, [sp, #36]	; 0x24
   29874:	ldr	r9, [sp, #16]
   29878:	orrs	r0, r6, r5
   2987c:	bne	2988c <main@@Base+0x13804>
   29880:	ldrb	r0, [r9, #8]
   29884:	tst	r0, #2
   29888:	beq	29ac0 <main@@Base+0x13a38>
   2988c:	ldr	r0, [r9]
   29890:	mov	r1, #0
   29894:	mov	r2, #8
   29898:	mov	r3, #8
   2989c:	bl	30824 <flatcc_builder_table_add@@Base>
   298a0:	cmp	r0, #0
   298a4:	beq	29c70 <main@@Base+0x13be8>
   298a8:	str	r6, [r0]
   298ac:	str	r5, [r0, #4]
   298b0:	b	29ac0 <main@@Base+0x13a38>
   298b4:	ldr	r6, [sp, #24]
   298b8:	bne	298c8 <main@@Base+0x13840>
   298bc:	ldrb	r0, [r7, #2]!
   298c0:	cmp	r0, #32
   298c4:	bhi	298d8 <main@@Base+0x13850>
   298c8:	ldr	r0, [sp, #16]
   298cc:	mov	r2, r8
   298d0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   298d4:	mov	r7, r0
   298d8:	cmp	r9, r7
   298dc:	beq	29944 <main@@Base+0x138bc>
   298e0:	mov	r5, #0
   298e4:	cmp	r7, r8
   298e8:	str	r5, [fp, #-36]	; 0xffffffdc
   298ec:	str	r5, [fp, #-40]	; 0xffffffd8
   298f0:	str	r5, [sp, #44]	; 0x2c
   298f4:	str	r5, [sp, #32]
   298f8:	beq	29a14 <main@@Base+0x1398c>
   298fc:	sub	r0, fp, #40	; 0x28
   29900:	mov	r1, r7
   29904:	mov	r2, r8
   29908:	add	r3, sp, #32
   2990c:	str	r0, [sp]
   29910:	ldr	r0, [sp, #16]
   29914:	bl	352ec <flatcc_json_parser_integer@@Base>
   29918:	cmp	r0, r7
   2991c:	beq	29a1c <main@@Base+0x13994>
   29920:	mov	r4, r0
   29924:	ldr	r0, [sp, #32]
   29928:	cmp	r0, #0
   2992c:	beq	29a24 <main@@Base+0x1399c>
   29930:	ldr	r0, [sp, #16]
   29934:	mov	r1, r4
   29938:	mov	r2, r8
   2993c:	mov	r3, #8
   29940:	b	29a40 <main@@Base+0x139b8>
   29944:	ldr	r0, [sp, #16]
   29948:	mov	r1, r9
   2994c:	mov	r9, r0
   29950:	mov	r2, r8
   29954:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   29958:	mov	r4, r0
   2995c:	sub	r0, r8, r4
   29960:	cmp	r0, #2
   29964:	blt	29990 <main@@Base+0x13908>
   29968:	ldrb	r0, [r4]
   2996c:	cmp	r0, #32
   29970:	bls	2997c <main@@Base+0x138f4>
   29974:	mov	r2, r4
   29978:	b	299a4 <main@@Base+0x1391c>
   2997c:	bne	29990 <main@@Base+0x13908>
   29980:	mov	r2, r4
   29984:	ldrb	r0, [r2, #1]!
   29988:	cmp	r0, #32
   2998c:	bhi	299a4 <main@@Base+0x1391c>
   29990:	mov	r0, r9
   29994:	mov	r1, r4
   29998:	mov	r2, r8
   2999c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   299a0:	mov	r2, r0
   299a4:	cmp	r2, r8
   299a8:	beq	29aec <main@@Base+0x13a64>
   299ac:	ldrb	r0, [r2]
   299b0:	cmp	r0, #44	; 0x2c
   299b4:	bne	29af4 <main@@Base+0x13a6c>
   299b8:	add	r1, r2, #1
   299bc:	sub	r0, r8, r1
   299c0:	cmp	r0, #2
   299c4:	blt	299ec <main@@Base+0x13964>
   299c8:	ldrb	r0, [r1]
   299cc:	cmp	r0, #32
   299d0:	bls	299dc <main@@Base+0x13954>
   299d4:	mov	r2, r1
   299d8:	b	299fc <main@@Base+0x13974>
   299dc:	bne	299ec <main@@Base+0x13964>
   299e0:	ldrb	r0, [r2, #2]!
   299e4:	cmp	r0, #32
   299e8:	bhi	299fc <main@@Base+0x13974>
   299ec:	mov	r0, r9
   299f0:	mov	r2, r8
   299f4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   299f8:	mov	r2, r0
   299fc:	cmp	r2, r8
   29a00:	beq	29b24 <main@@Base+0x13a9c>
   29a04:	ldrb	r0, [r2]
   29a08:	cmp	r0, #125	; 0x7d
   29a0c:	bne	29260 <main@@Base+0x131d8>
   29a10:	b	29b30 <main@@Base+0x13aa8>
   29a14:	mov	r4, r8
   29a18:	b	29a48 <main@@Base+0x139c0>
   29a1c:	mov	r4, r7
   29a20:	b	29a48 <main@@Base+0x139c0>
   29a24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29a28:	cmp	r0, #0
   29a2c:	beq	29ac8 <main@@Base+0x13a40>
   29a30:	ldr	r0, [sp, #16]
   29a34:	mov	r1, r4
   29a38:	mov	r2, r8
   29a3c:	mov	r3, #7
   29a40:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29a44:	mov	r4, r0
   29a48:	ldr	r9, [sp, #16]
   29a4c:	cmp	r7, r4
   29a50:	bne	29a8c <main@@Base+0x13a04>
   29a54:	movw	r3, #45704	; 0xb288
   29a58:	add	r0, sp, #44	; 0x2c
   29a5c:	mov	r1, r7
   29a60:	mov	r2, r8
   29a64:	movt	r3, #5
   29a68:	str	r0, [sp]
   29a6c:	mov	r0, r9
   29a70:	bl	24fd0 <main@@Base+0xef48>
   29a74:	mov	r4, r0
   29a78:	cmp	r0, r7
   29a7c:	cmpne	r4, r8
   29a80:	beq	29c70 <main@@Base+0x13be8>
   29a84:	ldr	r5, [sp, #44]	; 0x2c
   29a88:	ldr	r9, [sp, #16]
   29a8c:	cmp	r5, #0
   29a90:	bne	29aa0 <main@@Base+0x13a18>
   29a94:	ldrb	r0, [r9, #8]
   29a98:	tst	r0, #2
   29a9c:	beq	29ac0 <main@@Base+0x13a38>
   29aa0:	ldr	r0, [r9]
   29aa4:	mov	r1, #1
   29aa8:	mov	r2, #4
   29aac:	mov	r3, #4
   29ab0:	bl	30824 <flatcc_builder_table_add@@Base>
   29ab4:	cmp	r0, #0
   29ab8:	beq	29c70 <main@@Base+0x13be8>
   29abc:	str	r5, [r0]
   29ac0:	ldr	r6, [sp, #24]
   29ac4:	b	2995c <main@@Base+0x138d4>
   29ac8:	ldr	r5, [fp, #-40]	; 0xffffffd8
   29acc:	str	r5, [sp, #44]	; 0x2c
   29ad0:	b	29a48 <main@@Base+0x139c0>
   29ad4:	mov	r0, r9
   29ad8:	mov	r1, r2
   29adc:	mov	r2, r8
   29ae0:	mov	r3, #10
   29ae4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29ae8:	b	270c0 <main@@Base+0x11038>
   29aec:	mov	r4, r8
   29af0:	b	29140 <main@@Base+0x130b8>
   29af4:	cmp	r0, #125	; 0x7d
   29af8:	bne	29bb4 <main@@Base+0x13b2c>
   29afc:	add	r1, r2, #1
   29b00:	sub	r0, r8, r1
   29b04:	cmp	r0, #2
   29b08:	blt	29be8 <main@@Base+0x13b60>
   29b0c:	ldrb	r0, [r1]
   29b10:	cmp	r0, #32
   29b14:	bls	29bcc <main@@Base+0x13b44>
   29b18:	ldr	r9, [sp, #16]
   29b1c:	ldr	r6, [sp, #24]
   29b20:	b	29b4c <main@@Base+0x13ac4>
   29b24:	mov	r0, r9
   29b28:	mov	r1, r8
   29b2c:	b	29bbc <main@@Base+0x13b34>
   29b30:	add	r1, r2, #1
   29b34:	sub	r0, r8, r1
   29b38:	cmp	r0, #2
   29b3c:	blt	29be8 <main@@Base+0x13b60>
   29b40:	ldrb	r0, [r1]
   29b44:	cmp	r0, #32
   29b48:	bls	29bd4 <main@@Base+0x13b4c>
   29b4c:	mov	r4, r1
   29b50:	b	29140 <main@@Base+0x130b8>
   29b54:	bne	29b68 <main@@Base+0x13ae0>
   29b58:	ldrb	r0, [r2, #2]!
   29b5c:	mov	r4, r2
   29b60:	cmp	r0, #32
   29b64:	bhi	270c4 <main@@Base+0x1103c>
   29b68:	mov	r0, r9
   29b6c:	mov	r2, r8
   29b70:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   29b74:	b	270c0 <main@@Base+0x11038>
   29b78:	mov	r0, r9
   29b7c:	mov	r1, r2
   29b80:	mov	r2, r8
   29b84:	mov	r3, #10
   29b88:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29b8c:	b	272b8 <main@@Base+0x11230>
   29b90:	bne	29ba4 <main@@Base+0x13b1c>
   29b94:	ldrb	r0, [r2, #2]!
   29b98:	mov	r4, r2
   29b9c:	cmp	r0, #32
   29ba0:	bhi	272bc <main@@Base+0x11234>
   29ba4:	mov	r0, r9
   29ba8:	mov	r2, r8
   29bac:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   29bb0:	b	272b8 <main@@Base+0x11230>
   29bb4:	mov	r0, r9
   29bb8:	mov	r1, r2
   29bbc:	mov	r2, r8
   29bc0:	mov	r3, #10
   29bc4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29bc8:	b	2913c <main@@Base+0x130b4>
   29bcc:	ldr	r9, [sp, #16]
   29bd0:	ldr	r6, [sp, #24]
   29bd4:	bne	29be8 <main@@Base+0x13b60>
   29bd8:	ldrb	r0, [r2, #2]!
   29bdc:	mov	r4, r2
   29be0:	cmp	r0, #32
   29be4:	bhi	29140 <main@@Base+0x130b8>
   29be8:	mov	r0, r9
   29bec:	mov	r2, r8
   29bf0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   29bf4:	b	2913c <main@@Base+0x130b4>
   29bf8:	mov	r4, r8
   29bfc:	b	26a74 <main@@Base+0x109ec>
   29c00:	cmp	r0, #125	; 0x7d
   29c04:	bne	29c38 <main@@Base+0x13bb0>
   29c08:	add	r1, r2, #1
   29c0c:	sub	r0, r8, r1
   29c10:	cmp	r0, #2
   29c14:	blt	29c60 <main@@Base+0x13bd8>
   29c18:	ldrb	r0, [r1]
   29c1c:	cmp	r0, #32
   29c20:	bls	29c4c <main@@Base+0x13bc4>
   29c24:	mov	r4, r1
   29c28:	b	26a74 <main@@Base+0x109ec>
   29c2c:	mov	r0, r9
   29c30:	mov	r1, r8
   29c34:	b	29c40 <main@@Base+0x13bb8>
   29c38:	mov	r0, r9
   29c3c:	mov	r1, r2
   29c40:	mov	r2, r8
   29c44:	mov	r3, #10
   29c48:	b	26a6c <main@@Base+0x109e4>
   29c4c:	bne	29c60 <main@@Base+0x13bd8>
   29c50:	ldrb	r0, [r2, #2]!
   29c54:	mov	r4, r2
   29c58:	cmp	r0, #32
   29c5c:	bhi	26a74 <main@@Base+0x109ec>
   29c60:	mov	r0, r9
   29c64:	mov	r2, r8
   29c68:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   29c6c:	b	26a70 <main@@Base+0x109e8>
   29c70:	ldr	r9, [sp, #16]
   29c74:	mov	r0, r9
   29c78:	mov	r1, r4
   29c7c:	mov	r2, r8
   29c80:	mov	r3, #33	; 0x21
   29c84:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29c88:	mov	r4, r0
   29c8c:	b	26a80 <main@@Base+0x109f8>
   29c90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29c94:	add	fp, sp, #28
   29c98:	sub	sp, sp, #44	; 0x2c
   29c9c:	mov	sl, r0
   29ca0:	mov	r0, #0
   29ca4:	mov	r7, r1
   29ca8:	mov	r1, #10
   29cac:	mov	r4, r3
   29cb0:	mov	r5, r2
   29cb4:	str	r0, [r3]
   29cb8:	ldr	r0, [sl]
   29cbc:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   29cc0:	cmp	r0, #0
   29cc4:	beq	29cec <main@@Base+0x13c64>
   29cc8:	mov	r0, sl
   29ccc:	mov	r1, r7
   29cd0:	mov	r2, r5
   29cd4:	mov	r3, #33	; 0x21
   29cd8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29cdc:	mov	r7, r0
   29ce0:	mov	r0, r7
   29ce4:	sub	sp, fp, #28
   29ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29cec:	sub	r0, fp, #32
   29cf0:	mov	r1, r7
   29cf4:	mov	r2, r5
   29cf8:	mov	r3, #5
   29cfc:	str	r0, [sp]
   29d00:	mov	r0, sl
   29d04:	bl	359ec <flatcc_json_parser_prepare_unions@@Base>
   29d08:	cmp	r0, r5
   29d0c:	beq	29cc8 <main@@Base+0x13c40>
   29d10:	cmp	r7, r5
   29d14:	beq	29d48 <main@@Base+0x13cc0>
   29d18:	ldrb	r0, [r7]
   29d1c:	cmp	r0, #123	; 0x7b
   29d20:	bne	29d48 <main@@Base+0x13cc0>
   29d24:	add	r1, r7, #1
   29d28:	sub	r0, r5, r1
   29d2c:	cmp	r0, #2
   29d30:	blt	29dac <main@@Base+0x13d24>
   29d34:	ldrb	r0, [r1]
   29d38:	cmp	r0, #32
   29d3c:	bls	29d9c <main@@Base+0x13d14>
   29d40:	mov	r7, r1
   29d44:	b	29dbc <main@@Base+0x13d34>
   29d48:	mov	r0, sl
   29d4c:	mov	r1, r7
   29d50:	mov	r2, r5
   29d54:	mov	r3, #21
   29d58:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29d5c:	mov	r7, r0
   29d60:	ldr	r0, [sl, #24]
   29d64:	cmp	r0, #0
   29d68:	bne	29cc8 <main@@Base+0x13c40>
   29d6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29d70:	mov	r0, sl
   29d74:	mov	r1, r7
   29d78:	mov	r2, r5
   29d7c:	bl	35a70 <flatcc_json_parser_finalize_unions@@Base>
   29d80:	mov	r7, r0
   29d84:	ldr	r0, [sl]
   29d88:	bl	2ff38 <flatcc_builder_end_table@@Base>
   29d8c:	cmp	r0, #0
   29d90:	str	r0, [r4]
   29d94:	bne	29ce0 <main@@Base+0x13c58>
   29d98:	b	29cc8 <main@@Base+0x13c40>
   29d9c:	bne	29dac <main@@Base+0x13d24>
   29da0:	ldrb	r0, [r7, #2]!
   29da4:	cmp	r0, #32
   29da8:	bhi	29dbc <main@@Base+0x13d34>
   29dac:	mov	r0, sl
   29db0:	mov	r2, r5
   29db4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   29db8:	mov	r7, r0
   29dbc:	cmp	r7, r5
   29dc0:	mov	r3, r5
   29dc4:	beq	29e00 <main@@Base+0x13d78>
   29dc8:	ldrb	r0, [r7]
   29dcc:	cmp	r0, #125	; 0x7d
   29dd0:	bne	29dfc <main@@Base+0x13d74>
   29dd4:	add	r1, r7, #1
   29dd8:	sub	r0, r5, r1
   29ddc:	cmp	r0, #2
   29de0:	blt	2b21c <main@@Base+0x15194>
   29de4:	ldrb	r0, [r1]
   29de8:	cmp	r0, #32
   29dec:	bhi	2b1e0 <main@@Base+0x15158>
   29df0:	bne	2b21c <main@@Base+0x15194>
   29df4:	ldrb	r0, [r7, #2]!
   29df8:	b	2b214 <main@@Base+0x1518c>
   29dfc:	mov	r3, r7
   29e00:	add	r0, sl, #12
   29e04:	str	r5, [sp, #32]
   29e08:	str	r4, [sp, #36]	; 0x24
   29e0c:	str	r0, [sp, #28]
   29e10:	movw	r0, #24436	; 0x5f74
   29e14:	movt	r0, #29299	; 0x7273
   29e18:	add	r0, r0, #65536	; 0x10000
   29e1c:	add	r0, r0, #16777216	; 0x1000000
   29e20:	str	r0, [sp, #20]
   29e24:	cmp	r3, r5
   29e28:	mov	r8, r5
   29e2c:	beq	29e80 <main@@Base+0x13df8>
   29e30:	ldrb	r0, [r3]
   29e34:	cmp	r0, #46	; 0x2e
   29e38:	beq	29e54 <main@@Base+0x13dcc>
   29e3c:	cmp	r0, #34	; 0x22
   29e40:	bne	29e70 <main@@Base+0x13de8>
   29e44:	ldr	r0, [sp, #28]
   29e48:	mov	r1, #0
   29e4c:	add	r8, r3, #1
   29e50:	b	29e7c <main@@Base+0x13df4>
   29e54:	mov	r1, r3
   29e58:	mov	r0, sl
   29e5c:	mov	r2, r5
   29e60:	mov	r3, #5
   29e64:	bl	333fc <flatcc_json_parser_set_error@@Base>
   29e68:	mov	r8, r0
   29e6c:	b	29e80 <main@@Base+0x13df8>
   29e70:	ldr	r0, [sp, #28]
   29e74:	mov	r1, #1
   29e78:	mov	r8, r3
   29e7c:	str	r1, [r0]
   29e80:	sub	ip, r5, r8
   29e84:	mov	r0, #8
   29e88:	cmp	ip, #8
   29e8c:	movcc	r0, ip
   29e90:	sub	r6, r0, #1
   29e94:	cmp	r6, #7
   29e98:	bhi	2ac8c <main@@Base+0x14c04>
   29e9c:	mov	r9, sl
   29ea0:	add	sl, pc, #32
   29ea4:	mov	r1, #0
   29ea8:	mov	lr, #0
   29eac:	mov	r7, #0
   29eb0:	mov	r5, #0
   29eb4:	mov	r3, #0
   29eb8:	mov	r4, #0
   29ebc:	mov	r0, #0
   29ec0:	mov	r2, #0
   29ec4:	ldr	pc, [sl, r6, lsl #2]
   29ec8:	andeq	r9, r2, ip, lsr #30
   29ecc:	andeq	r9, r2, r4, lsr #30
   29ed0:	andeq	r9, r2, ip, lsl pc
   29ed4:	andeq	r9, r2, r4, lsl pc
   29ed8:	andeq	r9, r2, r8, lsl #30
   29edc:	strdeq	r9, [r2], -ip
   29ee0:	andeq	r9, r2, ip, ror #29
   29ee4:	andeq	r9, r2, r8, ror #29
   29ee8:	ldrb	lr, [r8, #7]
   29eec:	ldrb	r0, [r8, #6]
   29ef0:	mov	r7, r1
   29ef4:	orr	r0, lr, r0, lsl #8
   29ef8:	mov	r1, r0
   29efc:	ldrb	r0, [r8, #5]
   29f00:	mov	r5, r7
   29f04:	orr	r1, r1, r0, lsl #16
   29f08:	ldrb	r0, [r8, #4]
   29f0c:	mov	r3, r5
   29f10:	orr	r1, r1, r0, lsl #24
   29f14:	ldrb	r0, [r8, #3]
   29f18:	orr	r4, r0, r3
   29f1c:	ldrb	r0, [r8, #2]
   29f20:	orr	r0, r4, r0, lsl #8
   29f24:	ldrb	r2, [r8, #1]
   29f28:	orr	r2, r0, r2, lsl #16
   29f2c:	ldrb	r0, [r8]
   29f30:	orr	r2, r2, r0, lsl #24
   29f34:	movw	r0, #29797	; 0x7465
   29f38:	movt	r0, #24931	; 0x6163
   29f3c:	subs	r0, r1, r0
   29f40:	movw	r0, #24946	; 0x6172
   29f44:	movt	r0, #25448	; 0x6368
   29f48:	sbcs	r0, r2, r0
   29f4c:	bcs	2a0a8 <main@@Base+0x14020>
   29f50:	movw	r0, #29817	; 0x7479
   29f54:	movw	r3, #28005	; 0x6d65
   29f58:	mov	sl, r9
   29f5c:	movt	r0, #28511	; 0x6f5f
   29f60:	movt	r3, #25441	; 0x6361
   29f64:	eor	r0, r1, r0
   29f68:	eor	r3, r2, r3
   29f6c:	orrs	r0, r0, r3
   29f70:	beq	2a3c8 <main@@Base+0x14340>
   29f74:	movw	r0, #28265	; 0x6e69
   29f78:	movw	r7, #29793	; 0x7461
   29f7c:	ldr	r5, [sp, #32]
   29f80:	movt	r0, #26479	; 0x676f
   29f84:	movt	r7, #24942	; 0x616e
   29f88:	eor	r0, r1, r0
   29f8c:	eor	r2, r2, r7
   29f90:	orrs	r0, r0, r2
   29f94:	bne	2a454 <main@@Base+0x143cc>
   29f98:	add	r4, r8, #8
   29f9c:	mov	r1, #8
   29fa0:	sub	lr, r5, r4
   29fa4:	cmp	lr, #8
   29fa8:	movcc	r1, lr
   29fac:	sub	r6, r1, #1
   29fb0:	cmp	r6, #7
   29fb4:	bhi	2b0e4 <main@@Base+0x1505c>
   29fb8:	str	r4, [sp, #24]
   29fbc:	add	r0, pc, #28
   29fc0:	mov	r9, #0
   29fc4:	mov	ip, #0
   29fc8:	mov	r1, #0
   29fcc:	mov	r3, #0
   29fd0:	mov	r7, #0
   29fd4:	mov	r4, #0
   29fd8:	mov	r2, #0
   29fdc:	ldr	pc, [r0, r6, lsl #2]
   29fe0:	andeq	sl, r2, ip, lsr r0
   29fe4:	andeq	sl, r2, r4, lsr r0
   29fe8:	andeq	sl, r2, ip, lsr #32
   29fec:	andeq	sl, r2, r4, lsr #32
   29ff0:	andeq	sl, r2, r8, lsl r0
   29ff4:	andeq	sl, r2, r8
   29ff8:	andeq	sl, r2, r0
   29ffc:	andeq	sl, r2, r0
   2a000:	ldrb	r0, [r8, #14]
   2a004:	lsl	ip, r0, #8
   2a008:	ldrb	r0, [r8, #13]
   2a00c:	mov	r1, r9
   2a010:	orr	r0, ip, r0, lsl #16
   2a014:	mov	r9, r0
   2a018:	ldrb	r0, [r8, #12]
   2a01c:	mov	r3, r1
   2a020:	orr	r9, r9, r0, lsl #24
   2a024:	ldrb	r0, [r8, #11]
   2a028:	orr	r7, r0, r3
   2a02c:	ldrb	r0, [r8, #10]
   2a030:	orr	r4, r7, r0, lsl #8
   2a034:	ldrb	r0, [r8, #9]
   2a038:	orr	r2, r4, r0, lsl #16
   2a03c:	ldr	r4, [sp, #24]
   2a040:	movw	r3, #25856	; 0x6500
   2a044:	movt	r3, #31088	; 0x7970
   2a048:	ldrb	r0, [r4]
   2a04c:	orr	r1, r2, r0, lsl #24
   2a050:	ldr	r0, [sp, #20]
   2a054:	bic	r2, r9, #255	; 0xff
   2a058:	eor	r2, r2, r3
   2a05c:	eor	r0, r1, r0
   2a060:	orrs	r0, r2, r0
   2a064:	bne	2a5ac <main@@Base+0x14524>
   2a068:	cmp	lr, #8
   2a06c:	blt	2b0e4 <main@@Base+0x1505c>
   2a070:	ldr	r2, [sp, #28]
   2a074:	mov	r1, r8
   2a078:	ldrb	r0, [r1, #15]!
   2a07c:	ldr	r2, [r2]
   2a080:	cmp	r2, #0
   2a084:	beq	2a75c <main@@Base+0x146d4>
   2a088:	cmp	r0, #33	; 0x21
   2a08c:	bcc	2a098 <main@@Base+0x14010>
   2a090:	cmp	r0, #58	; 0x3a
   2a094:	bne	2b0e4 <main@@Base+0x1505c>
   2a098:	ldr	r0, [sp, #28]
   2a09c:	mov	r2, #0
   2a0a0:	str	r2, [r0]
   2a0a4:	b	2a768 <main@@Base+0x146e0>
   2a0a8:	movw	r0, #26720	; 0x6860
   2a0ac:	mov	sl, r9
   2a0b0:	movt	r0, #24419	; 0x5f63
   2a0b4:	subs	r0, r0, r1
   2a0b8:	movw	r0, #26990	; 0x696e
   2a0bc:	movt	r0, #28001	; 0x6d61
   2a0c0:	sbcs	r0, r0, r2
   2a0c4:	bcc	2a200 <main@@Base+0x14178>
   2a0c8:	movw	r0, #29797	; 0x7465
   2a0cc:	movt	r0, #24931	; 0x6163
   2a0d0:	eor	r0, r1, r0
   2a0d4:	movw	r1, #24946	; 0x6172
   2a0d8:	movt	r1, #25448	; 0x6368
   2a0dc:	eor	r1, r2, r1
   2a0e0:	orrs	r0, r0, r1
   2a0e4:	bne	2a3b8 <main@@Base+0x14330>
   2a0e8:	ldr	r5, [sp, #32]
   2a0ec:	add	r4, r8, #8
   2a0f0:	mov	r1, #8
   2a0f4:	sub	lr, r5, r4
   2a0f8:	cmp	lr, #8
   2a0fc:	movcc	r1, lr
   2a100:	sub	r6, r1, #1
   2a104:	cmp	r6, #7
   2a108:	bhi	2b0e4 <main@@Base+0x1505c>
   2a10c:	str	r4, [sp, #24]
   2a110:	add	r0, pc, #28
   2a114:	mov	r1, #0
   2a118:	mov	ip, #0
   2a11c:	mov	r9, #0
   2a120:	mov	r3, #0
   2a124:	mov	r7, #0
   2a128:	mov	r4, #0
   2a12c:	mov	r2, #0
   2a130:	ldr	pc, [r0, r6, lsl #2]
   2a134:	muleq	r2, r0, r1
   2a138:	andeq	sl, r2, r8, lsl #3
   2a13c:	andeq	sl, r2, r0, lsl #3
   2a140:	andeq	sl, r2, r8, ror r1
   2a144:	andeq	sl, r2, ip, ror #2
   2a148:	andeq	sl, r2, ip, asr r1
   2a14c:	andeq	sl, r2, r4, asr r1
   2a150:	andeq	sl, r2, r4, asr r1
   2a154:	ldrb	r0, [r8, #14]
   2a158:	lsl	ip, r0, #8
   2a15c:	ldrb	r0, [r8, #13]
   2a160:	mov	r9, r1
   2a164:	orr	r0, ip, r0, lsl #16
   2a168:	mov	r1, r0
   2a16c:	ldrb	r0, [r8, #12]
   2a170:	mov	r3, r9
   2a174:	orr	r1, r1, r0, lsl #24
   2a178:	ldrb	r0, [r8, #11]
   2a17c:	orr	r7, r0, r3
   2a180:	ldrb	r0, [r8, #10]
   2a184:	orr	r4, r7, r0, lsl #8
   2a188:	ldrb	r0, [r8, #9]
   2a18c:	orr	r2, r4, r0, lsl #16
   2a190:	ldr	r4, [sp, #24]
   2a194:	bic	r0, r1, #255	; 0xff
   2a198:	movw	r1, #25856	; 0x6500
   2a19c:	movt	r1, #31088	; 0x7970
   2a1a0:	eor	r0, r0, r1
   2a1a4:	ldrb	r1, [r4]
   2a1a8:	orr	r1, r2, r1, lsl #24
   2a1ac:	movw	r2, #24436	; 0x5f74
   2a1b0:	movt	r2, #29299	; 0x7273
   2a1b4:	eor	r2, r1, r2
   2a1b8:	orrs	r0, r0, r2
   2a1bc:	bne	2a600 <main@@Base+0x14578>
   2a1c0:	cmp	lr, #8
   2a1c4:	blt	2b0e4 <main@@Base+0x1505c>
   2a1c8:	ldr	r2, [sp, #28]
   2a1cc:	mov	r1, r8
   2a1d0:	ldrb	r0, [r1, #15]!
   2a1d4:	ldr	r2, [r2]
   2a1d8:	cmp	r2, #0
   2a1dc:	beq	2a7d0 <main@@Base+0x14748>
   2a1e0:	cmp	r0, #33	; 0x21
   2a1e4:	bcc	2a1f0 <main@@Base+0x14168>
   2a1e8:	cmp	r0, #58	; 0x3a
   2a1ec:	bne	2b0e4 <main@@Base+0x1505c>
   2a1f0:	ldr	r0, [sp, #28]
   2a1f4:	mov	r2, #0
   2a1f8:	str	r2, [r0]
   2a1fc:	b	2a7dc <main@@Base+0x14754>
   2a200:	movw	r0, #26979	; 0x6963
   2a204:	movw	r3, #25701	; 0x6465
   2a208:	movt	r0, #24427	; 0x5f6b
   2a20c:	movt	r3, #29545	; 0x7369
   2a210:	eor	r0, r1, r0
   2a214:	eor	r3, r2, r3
   2a218:	orrs	r0, r0, r3
   2a21c:	beq	2a4ac <main@@Base+0x14424>
   2a220:	movw	r0, #26721	; 0x6861
   2a224:	movt	r0, #24419	; 0x5f63
   2a228:	eor	r0, r1, r0
   2a22c:	movw	r1, #26990	; 0x696e
   2a230:	movt	r1, #28001	; 0x6d61
   2a234:	eor	r1, r2, r1
   2a238:	orrs	r0, r0, r1
   2a23c:	bne	2a3b8 <main@@Base+0x14330>
   2a240:	ldr	r0, [sp, #32]
   2a244:	add	r4, r8, #8
   2a248:	sub	lr, r0, r4
   2a24c:	mov	r0, #8
   2a250:	cmp	lr, #8
   2a254:	movcc	r0, lr
   2a258:	sub	r6, r0, #1
   2a25c:	cmp	r6, #7
   2a260:	bhi	2a720 <main@@Base+0x14698>
   2a264:	str	r4, [sp, #24]
   2a268:	add	r7, pc, #32
   2a26c:	mov	r1, #0
   2a270:	mov	ip, #0
   2a274:	mov	sl, #0
   2a278:	mov	r5, #0
   2a27c:	mov	r3, #0
   2a280:	mov	r4, #0
   2a284:	mov	r2, #0
   2a288:	mov	r0, #0
   2a28c:	ldr	pc, [r7, r6, lsl #2]
   2a290:	strdeq	sl, [r2], -r4
   2a294:	andeq	sl, r2, ip, ror #5
   2a298:	andeq	sl, r2, r4, ror #5
   2a29c:	ldrdeq	sl, [r2], -ip
   2a2a0:	ldrdeq	sl, [r2], -r0
   2a2a4:	andeq	sl, r2, r4, asr #5
   2a2a8:			; <UNDEFINED> instruction: 0x0002a2b4
   2a2ac:			; <UNDEFINED> instruction: 0x0002a2b0
   2a2b0:	ldrb	ip, [r8, #15]
   2a2b4:	ldrb	r0, [r8, #14]
   2a2b8:	mov	sl, r1
   2a2bc:	orr	r0, ip, r0, lsl #8
   2a2c0:	mov	r1, r0
   2a2c4:	ldrb	r0, [r8, #13]
   2a2c8:	mov	r5, sl
   2a2cc:	orr	r1, r1, r0, lsl #16
   2a2d0:	ldrb	r0, [r8, #12]
   2a2d4:	mov	r3, r5
   2a2d8:	orr	r1, r1, r0, lsl #24
   2a2dc:	ldrb	r0, [r8, #11]
   2a2e0:	orr	r4, r0, r3
   2a2e4:	ldrb	r0, [r8, #10]
   2a2e8:	orr	r2, r4, r0, lsl #8
   2a2ec:	ldrb	r0, [r8, #9]
   2a2f0:	orr	r0, r2, r0, lsl #16
   2a2f4:	ldr	r4, [sp, #24]
   2a2f8:	movw	r2, #24436	; 0x5f74
   2a2fc:	movt	r2, #25970	; 0x6572
   2a300:	eor	r2, r1, r2
   2a304:	ldrb	r3, [r4]
   2a308:	orr	r0, r0, r3, lsl #24
   2a30c:	movw	r3, #25460	; 0x6374
   2a310:	movt	r3, #29281	; 0x7261
   2a314:	eor	r3, r0, r3
   2a318:	orrs	r2, r2, r3
   2a31c:	bne	2a654 <main@@Base+0x145cc>
   2a320:	ldr	r0, [sp, #32]
   2a324:	add	r4, r8, #16
   2a328:	mov	r2, #8
   2a32c:	mov	sl, r9
   2a330:	sub	r0, r0, r4
   2a334:	cmp	r0, #8
   2a338:	movcc	r2, r0
   2a33c:	sub	r1, r2, #3
   2a340:	cmp	r1, #6
   2a344:	bcs	2a7b4 <main@@Base+0x1472c>
   2a348:	ldrb	r1, [r8, #18]
   2a34c:	ldr	r5, [sp, #32]
   2a350:	lsl	r1, r1, #8
   2a354:	ldrb	r2, [r8, #17]
   2a358:	orr	r1, r1, r2, lsl #16
   2a35c:	ldrb	r2, [r4]
   2a360:	bic	r1, r1, #255	; 0xff
   2a364:	orr	r1, r1, r2, lsl #24
   2a368:	movw	r2, #25856	; 0x6500
   2a36c:	movt	r2, #31088	; 0x7970
   2a370:	teq	r1, r2
   2a374:	bne	2b0e4 <main@@Base+0x1505c>
   2a378:	cmp	r0, #4
   2a37c:	blt	2b0e4 <main@@Base+0x1505c>
   2a380:	ldr	r2, [sp, #28]
   2a384:	mov	r1, r8
   2a388:	ldrb	r0, [r1, #19]!
   2a38c:	ldr	r2, [r2]
   2a390:	cmp	r2, #0
   2a394:	beq	2aaa8 <main@@Base+0x14a20>
   2a398:	cmp	r0, #33	; 0x21
   2a39c:	bcc	2a3a8 <main@@Base+0x14320>
   2a3a0:	cmp	r0, #58	; 0x3a
   2a3a4:	bne	2b0e4 <main@@Base+0x1505c>
   2a3a8:	ldr	r0, [sp, #28]
   2a3ac:	mov	r2, #0
   2a3b0:	str	r2, [r0]
   2a3b4:	b	2aab4 <main@@Base+0x14a2c>
   2a3b8:	mov	r0, sl
   2a3bc:	mov	r1, r8
   2a3c0:	ldr	r5, [sp, #32]
   2a3c4:	b	2b0ec <main@@Base+0x15064>
   2a3c8:	ldr	r5, [sp, #32]
   2a3cc:	add	r6, r8, #8
   2a3d0:	mov	r2, #8
   2a3d4:	sub	r0, r5, r6
   2a3d8:	cmp	r0, #8
   2a3dc:	movcc	r2, r0
   2a3e0:	sub	r1, r2, #2
   2a3e4:	cmp	r1, #7
   2a3e8:	bcs	2a6c0 <main@@Base+0x14638>
   2a3ec:	ldrb	r1, [r8, #9]
   2a3f0:	lsl	r2, r1, #16
   2a3f4:	mov	r1, #0
   2a3f8:	ldrb	r3, [r6]
   2a3fc:	orr	r2, r2, r3, lsl #24
   2a400:	movw	r3, #0
   2a404:	movt	r3, #28773	; 0x7065
   2a408:	eor	r2, r2, r3
   2a40c:	orrs	r1, r1, r2
   2a410:	bne	2ad38 <main@@Base+0x14cb0>
   2a414:	cmp	r0, #3
   2a418:	blt	2ad38 <main@@Base+0x14cb0>
   2a41c:	ldr	r2, [sp, #28]
   2a420:	mov	r1, r8
   2a424:	ldrb	r0, [r1, #10]!
   2a428:	ldr	r2, [r2]
   2a42c:	cmp	r2, #0
   2a430:	beq	2a788 <main@@Base+0x14700>
   2a434:	cmp	r0, #33	; 0x21
   2a438:	bcc	2a444 <main@@Base+0x143bc>
   2a43c:	cmp	r0, #58	; 0x3a
   2a440:	bne	2ad38 <main@@Base+0x14cb0>
   2a444:	ldr	r0, [sp, #28]
   2a448:	mov	r2, #0
   2a44c:	str	r2, [r0]
   2a450:	b	2a794 <main@@Base+0x1470c>
   2a454:	and	r0, r1, #-16777216	; 0xff000000
   2a458:	eor	r0, r0, #1862270976	; 0x6f000000
   2a45c:	orrs	r0, r0, r3
   2a460:	bne	2ac8c <main@@Base+0x14c04>
   2a464:	cmp	ip, #6
   2a468:	mov	r1, r8
   2a46c:	blt	2ac54 <main@@Base+0x14bcc>
   2a470:	ldr	r1, [sp, #28]
   2a474:	mov	r2, r8
   2a478:	ldrb	r0, [r2, #5]!
   2a47c:	ldr	r1, [r1]
   2a480:	cmp	r1, #0
   2a484:	beq	2a72c <main@@Base+0x146a4>
   2a488:	cmp	r0, #33	; 0x21
   2a48c:	bcc	2a49c <main@@Base+0x14414>
   2a490:	cmp	r0, #58	; 0x3a
   2a494:	mov	r1, r8
   2a498:	bne	2ac54 <main@@Base+0x14bcc>
   2a49c:	ldr	r0, [sp, #28]
   2a4a0:	mov	r1, #0
   2a4a4:	str	r1, [r0]
   2a4a8:	b	2a73c <main@@Base+0x146b4>
   2a4ac:	ldr	r5, [sp, #32]
   2a4b0:	add	r9, r8, #8
   2a4b4:	mov	r1, #8
   2a4b8:	sub	lr, r5, r9
   2a4bc:	cmp	lr, #8
   2a4c0:	movcc	r1, lr
   2a4c4:	sub	r3, r1, #1
   2a4c8:	cmp	r3, #7
   2a4cc:	bhi	2b070 <main@@Base+0x14fe8>
   2a4d0:	add	r6, pc, #24
   2a4d4:	mov	ip, #0
   2a4d8:	mov	r2, #0
   2a4dc:	mov	r1, #0
   2a4e0:	mov	r0, #0
   2a4e4:	mov	r7, #0
   2a4e8:	mov	r4, #0
   2a4ec:	ldr	pc, [r6, r3, lsl #2]
   2a4f0:	andeq	sl, r2, r0, asr #10
   2a4f4:	andeq	sl, r2, r8, lsr r5
   2a4f8:	andeq	sl, r2, r0, lsr r5
   2a4fc:	andeq	sl, r2, r8, lsr #10
   2a500:	andeq	sl, r2, r8, lsl r5
   2a504:	andeq	sl, r2, r0, lsl r5
   2a508:	andeq	sl, r2, r0, lsl r5
   2a50c:	andeq	sl, r2, r0, lsl r5
   2a510:	ldrb	r1, [r8, #13]
   2a514:	lsl	r2, r1, #16
   2a518:	ldrb	r1, [r8, #12]
   2a51c:	orr	r2, r2, r1, lsl #24
   2a520:	mov	r1, ip
   2a524:	mov	ip, r2
   2a528:	ldrb	r2, [r8, #11]
   2a52c:	orr	r0, r2, r1
   2a530:	ldrb	r1, [r8, #10]
   2a534:	orr	r7, r0, r1, lsl #8
   2a538:	ldrb	r1, [r8, #9]
   2a53c:	orr	r4, r7, r1, lsl #16
   2a540:	ldrb	r1, [r9]
   2a544:	movw	r0, #27487	; 0x6b5f
   2a548:	lsr	r3, ip, #16
   2a54c:	orr	r1, r4, r1, lsl #24
   2a550:	eor	r2, r0, r1, lsr #16
   2a554:	movw	r0, #28773	; 0x7065
   2a558:	orr	r3, r3, r1, lsl #16
   2a55c:	movt	r0, #29817	; 0x7479
   2a560:	eor	r3, r3, r0
   2a564:	orrs	r2, r3, r2
   2a568:	bne	2a6d4 <main@@Base+0x1464c>
   2a56c:	cmp	lr, #7
   2a570:	blt	2b070 <main@@Base+0x14fe8>
   2a574:	ldr	r2, [sp, #28]
   2a578:	mov	r1, r8
   2a57c:	ldrb	r0, [r1, #14]!
   2a580:	ldr	r2, [r2]
   2a584:	cmp	r2, #0
   2a588:	beq	2a7fc <main@@Base+0x14774>
   2a58c:	cmp	r0, #33	; 0x21
   2a590:	bcc	2a59c <main@@Base+0x14514>
   2a594:	cmp	r0, #58	; 0x3a
   2a598:	bne	2b070 <main@@Base+0x14fe8>
   2a59c:	ldr	r0, [sp, #28]
   2a5a0:	mov	r2, #0
   2a5a4:	str	r2, [r0]
   2a5a8:	b	2a808 <main@@Base+0x14780>
   2a5ac:	movw	r0, #0
   2a5b0:	bfc	r1, #0, #16
   2a5b4:	movt	r0, #29556	; 0x7374
   2a5b8:	teq	r1, r0
   2a5bc:	bne	2b0e4 <main@@Base+0x1505c>
   2a5c0:	cmp	lr, #3
   2a5c4:	blt	2b0e4 <main@@Base+0x1505c>
   2a5c8:	ldr	r2, [sp, #28]
   2a5cc:	mov	r1, r8
   2a5d0:	ldrb	r0, [r1, #10]!
   2a5d4:	ldr	r2, [r2]
   2a5d8:	cmp	r2, #0
   2a5dc:	beq	2a828 <main@@Base+0x147a0>
   2a5e0:	cmp	r0, #33	; 0x21
   2a5e4:	bcc	2a5f0 <main@@Base+0x14568>
   2a5e8:	cmp	r0, #58	; 0x3a
   2a5ec:	bne	2b0e4 <main@@Base+0x1505c>
   2a5f0:	ldr	r0, [sp, #28]
   2a5f4:	mov	r2, #0
   2a5f8:	str	r2, [r0]
   2a5fc:	b	2a834 <main@@Base+0x147ac>
   2a600:	movw	r0, #0
   2a604:	bfc	r1, #0, #16
   2a608:	movt	r0, #29299	; 0x7273
   2a60c:	teq	r1, r0
   2a610:	bne	2b0e4 <main@@Base+0x1505c>
   2a614:	cmp	lr, #3
   2a618:	blt	2b0e4 <main@@Base+0x1505c>
   2a61c:	ldr	r2, [sp, #28]
   2a620:	mov	r1, r8
   2a624:	ldrb	r0, [r1, #10]!
   2a628:	ldr	r2, [r2]
   2a62c:	cmp	r2, #0
   2a630:	beq	2a854 <main@@Base+0x147cc>
   2a634:	cmp	r0, #33	; 0x21
   2a638:	bcc	2a644 <main@@Base+0x145bc>
   2a63c:	cmp	r0, #58	; 0x3a
   2a640:	bne	2b0e4 <main@@Base+0x1505c>
   2a644:	ldr	r0, [sp, #28]
   2a648:	mov	r2, #0
   2a64c:	str	r2, [r0]
   2a650:	b	2a860 <main@@Base+0x147d8>
   2a654:	movw	r2, #29281	; 0x7261
   2a658:	lsr	r1, r1, #16
   2a65c:	mov	sl, r9
   2a660:	eor	r2, r2, r0, lsr #16
   2a664:	orr	r0, r1, r0, lsl #16
   2a668:	movw	r1, #25970	; 0x6572
   2a66c:	movt	r1, #25460	; 0x6374
   2a670:	eor	r0, r0, r1
   2a674:	orrs	r0, r0, r2
   2a678:	bne	2a720 <main@@Base+0x14698>
   2a67c:	ldr	r5, [sp, #32]
   2a680:	cmp	lr, #7
   2a684:	blt	2b0e4 <main@@Base+0x1505c>
   2a688:	ldr	r2, [sp, #28]
   2a68c:	mov	r1, r8
   2a690:	ldrb	r0, [r1, #14]!
   2a694:	ldr	r2, [r2]
   2a698:	cmp	r2, #0
   2a69c:	beq	2a9dc <main@@Base+0x14954>
   2a6a0:	cmp	r0, #33	; 0x21
   2a6a4:	bcc	2a6b0 <main@@Base+0x14628>
   2a6a8:	cmp	r0, #58	; 0x3a
   2a6ac:	bne	2b0e4 <main@@Base+0x1505c>
   2a6b0:	ldr	r0, [sp, #28]
   2a6b4:	mov	r2, #0
   2a6b8:	str	r2, [r0]
   2a6bc:	b	2a9e8 <main@@Base+0x14960>
   2a6c0:	cmp	r2, #1
   2a6c4:	mov	r1, #0
   2a6c8:	mov	r2, #0
   2a6cc:	beq	2a3f8 <main@@Base+0x14370>
   2a6d0:	b	2ad38 <main@@Base+0x14cb0>
   2a6d4:	and	r1, r1, #-16777216	; 0xff000000
   2a6d8:	teq	r1, #1795162112	; 0x6b000000
   2a6dc:	bne	2b070 <main@@Base+0x14fe8>
   2a6e0:	cmp	lr, #2
   2a6e4:	blt	2b070 <main@@Base+0x14fe8>
   2a6e8:	ldr	r2, [sp, #28]
   2a6ec:	mov	r1, r8
   2a6f0:	ldrb	r0, [r1, #9]!
   2a6f4:	ldr	r2, [r2]
   2a6f8:	cmp	r2, #0
   2a6fc:	beq	2aa08 <main@@Base+0x14980>
   2a700:	cmp	r0, #33	; 0x21
   2a704:	bcc	2a710 <main@@Base+0x14688>
   2a708:	cmp	r0, #58	; 0x3a
   2a70c:	bne	2b070 <main@@Base+0x14fe8>
   2a710:	ldr	r0, [sp, #28]
   2a714:	mov	r2, #0
   2a718:	str	r2, [r0]
   2a71c:	b	2aa14 <main@@Base+0x1498c>
   2a720:	mov	r0, sl
   2a724:	mov	r1, r4
   2a728:	b	2a3c0 <main@@Base+0x14338>
   2a72c:	cmp	r0, #34	; 0x22
   2a730:	mov	r1, r8
   2a734:	bne	2ac54 <main@@Base+0x14bcc>
   2a738:	add	r2, r8, #6
   2a73c:	sub	r0, r5, r2
   2a740:	cmp	r0, #2
   2a744:	blt	2a894 <main@@Base+0x1480c>
   2a748:	ldrb	r0, [r2]
   2a74c:	cmp	r0, #32
   2a750:	bls	2a880 <main@@Base+0x147f8>
   2a754:	mov	r1, r2
   2a758:	b	2a8a8 <main@@Base+0x14820>
   2a75c:	cmp	r0, #34	; 0x22
   2a760:	bne	2b0e4 <main@@Base+0x1505c>
   2a764:	add	r1, r8, #16
   2a768:	sub	r0, r5, r1
   2a76c:	cmp	r0, #2
   2a770:	blt	2a908 <main@@Base+0x14880>
   2a774:	ldrb	r0, [r1]
   2a778:	cmp	r0, #32
   2a77c:	bls	2a8f4 <main@@Base+0x1486c>
   2a780:	mov	r2, r1
   2a784:	b	2a918 <main@@Base+0x14890>
   2a788:	cmp	r0, #34	; 0x22
   2a78c:	bne	2ad38 <main@@Base+0x14cb0>
   2a790:	add	r1, r8, #11
   2a794:	sub	r0, r5, r1
   2a798:	cmp	r0, #2
   2a79c:	blt	2a97c <main@@Base+0x148f4>
   2a7a0:	ldrb	r0, [r1]
   2a7a4:	cmp	r0, #32
   2a7a8:	bls	2a968 <main@@Base+0x148e0>
   2a7ac:	mov	r2, r1
   2a7b0:	b	2a98c <main@@Base+0x14904>
   2a7b4:	ldr	r5, [sp, #32]
   2a7b8:	mov	r1, #0
   2a7bc:	cmp	r2, #1
   2a7c0:	beq	2a35c <main@@Base+0x142d4>
   2a7c4:	cmp	r2, #2
   2a7c8:	beq	2a354 <main@@Base+0x142cc>
   2a7cc:	b	2b0e4 <main@@Base+0x1505c>
   2a7d0:	cmp	r0, #34	; 0x22
   2a7d4:	bne	2b0e4 <main@@Base+0x1505c>
   2a7d8:	add	r1, r8, #16
   2a7dc:	sub	r0, r5, r1
   2a7e0:	cmp	r0, #2
   2a7e4:	blt	2aa48 <main@@Base+0x149c0>
   2a7e8:	ldrb	r0, [r1]
   2a7ec:	cmp	r0, #32
   2a7f0:	bls	2aa34 <main@@Base+0x149ac>
   2a7f4:	mov	r2, r1
   2a7f8:	b	2aa58 <main@@Base+0x149d0>
   2a7fc:	cmp	r0, #34	; 0x22
   2a800:	bne	2b070 <main@@Base+0x14fe8>
   2a804:	add	r1, r8, #15
   2a808:	sub	r0, r5, r1
   2a80c:	cmp	r0, #2
   2a810:	blt	2aae8 <main@@Base+0x14a60>
   2a814:	ldrb	r0, [r1]
   2a818:	cmp	r0, #32
   2a81c:	bls	2aad4 <main@@Base+0x14a4c>
   2a820:	mov	r2, r1
   2a824:	b	2aaf8 <main@@Base+0x14a70>
   2a828:	cmp	r0, #34	; 0x22
   2a82c:	bne	2b0e4 <main@@Base+0x1505c>
   2a830:	add	r1, r8, #11
   2a834:	sub	r0, r5, r1
   2a838:	cmp	r0, #2
   2a83c:	blt	2ab5c <main@@Base+0x14ad4>
   2a840:	ldrb	r0, [r1]
   2a844:	cmp	r0, #32
   2a848:	bls	2ab48 <main@@Base+0x14ac0>
   2a84c:	mov	r2, r1
   2a850:	b	2ab6c <main@@Base+0x14ae4>
   2a854:	cmp	r0, #34	; 0x22
   2a858:	bne	2b0e4 <main@@Base+0x1505c>
   2a85c:	add	r1, r8, #11
   2a860:	sub	r0, r5, r1
   2a864:	cmp	r0, #2
   2a868:	blt	2abd0 <main@@Base+0x14b48>
   2a86c:	ldrb	r0, [r1]
   2a870:	cmp	r0, #32
   2a874:	bls	2abbc <main@@Base+0x14b34>
   2a878:	mov	r2, r1
   2a87c:	b	2abe0 <main@@Base+0x14b58>
   2a880:	bne	2a894 <main@@Base+0x1480c>
   2a884:	mov	r1, r2
   2a888:	ldrb	r0, [r1, #1]!
   2a88c:	cmp	r0, #32
   2a890:	bhi	2a8a8 <main@@Base+0x14820>
   2a894:	mov	r1, r2
   2a898:	mov	r0, sl
   2a89c:	mov	r2, r5
   2a8a0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2a8a4:	mov	r1, r0
   2a8a8:	cmp	r1, r5
   2a8ac:	beq	2a8e0 <main@@Base+0x14858>
   2a8b0:	ldrb	r0, [r1]
   2a8b4:	cmp	r0, #58	; 0x3a
   2a8b8:	bne	2a8e0 <main@@Base+0x14858>
   2a8bc:	add	r2, r1, #1
   2a8c0:	sub	r0, r5, r2
   2a8c4:	cmp	r0, #2
   2a8c8:	blt	2ac40 <main@@Base+0x14bb8>
   2a8cc:	ldrb	r0, [r2]
   2a8d0:	cmp	r0, #32
   2a8d4:	bls	2ac30 <main@@Base+0x14ba8>
   2a8d8:	mov	r1, r2
   2a8dc:	b	2ac54 <main@@Base+0x14bcc>
   2a8e0:	mov	r0, sl
   2a8e4:	mov	r2, r5
   2a8e8:	mov	r3, #4
   2a8ec:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2a8f0:	b	2ac50 <main@@Base+0x14bc8>
   2a8f4:	bne	2a908 <main@@Base+0x14880>
   2a8f8:	mov	r2, r1
   2a8fc:	ldrb	r0, [r2, #1]!
   2a900:	cmp	r0, #32
   2a904:	bhi	2a918 <main@@Base+0x14890>
   2a908:	mov	r0, sl
   2a90c:	mov	r2, r5
   2a910:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2a914:	mov	r2, r0
   2a918:	cmp	r2, r5
   2a91c:	beq	2a950 <main@@Base+0x148c8>
   2a920:	ldrb	r0, [r2]
   2a924:	cmp	r0, #58	; 0x3a
   2a928:	bne	2a950 <main@@Base+0x148c8>
   2a92c:	add	r1, r2, #1
   2a930:	sub	r0, r5, r1
   2a934:	cmp	r0, #2
   2a938:	blt	2aca8 <main@@Base+0x14c20>
   2a93c:	ldrb	r0, [r1]
   2a940:	cmp	r0, #32
   2a944:	bls	2ac98 <main@@Base+0x14c10>
   2a948:	mov	r2, r1
   2a94c:	b	2acb8 <main@@Base+0x14c30>
   2a950:	mov	r1, r2
   2a954:	mov	r0, sl
   2a958:	mov	r2, r5
   2a95c:	mov	r3, #4
   2a960:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2a964:	b	2acb4 <main@@Base+0x14c2c>
   2a968:	bne	2a97c <main@@Base+0x148f4>
   2a96c:	mov	r2, r1
   2a970:	ldrb	r0, [r2, #1]!
   2a974:	cmp	r0, #32
   2a978:	bhi	2a98c <main@@Base+0x14904>
   2a97c:	mov	r0, sl
   2a980:	mov	r2, r5
   2a984:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2a988:	mov	r2, r0
   2a98c:	cmp	r2, r5
   2a990:	beq	2a9c4 <main@@Base+0x1493c>
   2a994:	ldrb	r0, [r2]
   2a998:	cmp	r0, #58	; 0x3a
   2a99c:	bne	2a9c4 <main@@Base+0x1493c>
   2a9a0:	add	r1, r2, #1
   2a9a4:	sub	r0, r5, r1
   2a9a8:	cmp	r0, #2
   2a9ac:	blt	2acf8 <main@@Base+0x14c70>
   2a9b0:	ldrb	r0, [r1]
   2a9b4:	cmp	r0, #32
   2a9b8:	bls	2ace8 <main@@Base+0x14c60>
   2a9bc:	mov	r2, r1
   2a9c0:	b	2ad08 <main@@Base+0x14c80>
   2a9c4:	mov	r1, r2
   2a9c8:	mov	r0, sl
   2a9cc:	mov	r2, r5
   2a9d0:	mov	r3, #4
   2a9d4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2a9d8:	b	2ad04 <main@@Base+0x14c7c>
   2a9dc:	cmp	r0, #34	; 0x22
   2a9e0:	bne	2b0e4 <main@@Base+0x1505c>
   2a9e4:	add	r1, r8, #15
   2a9e8:	sub	r0, r5, r1
   2a9ec:	cmp	r0, #2
   2a9f0:	blt	2ad58 <main@@Base+0x14cd0>
   2a9f4:	ldrb	r0, [r1]
   2a9f8:	cmp	r0, #32
   2a9fc:	bls	2ad44 <main@@Base+0x14cbc>
   2aa00:	mov	r2, r1
   2aa04:	b	2ad68 <main@@Base+0x14ce0>
   2aa08:	cmp	r0, #34	; 0x22
   2aa0c:	bne	2b070 <main@@Base+0x14fe8>
   2aa10:	add	r1, r8, #10
   2aa14:	sub	r0, r5, r1
   2aa18:	cmp	r0, #2
   2aa1c:	blt	2adcc <main@@Base+0x14d44>
   2aa20:	ldrb	r0, [r1]
   2aa24:	cmp	r0, #32
   2aa28:	bls	2adb8 <main@@Base+0x14d30>
   2aa2c:	mov	r2, r1
   2aa30:	b	2addc <main@@Base+0x14d54>
   2aa34:	bne	2aa48 <main@@Base+0x149c0>
   2aa38:	mov	r2, r1
   2aa3c:	ldrb	r0, [r2, #1]!
   2aa40:	cmp	r0, #32
   2aa44:	bhi	2aa58 <main@@Base+0x149d0>
   2aa48:	mov	r0, sl
   2aa4c:	mov	r2, r5
   2aa50:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2aa54:	mov	r2, r0
   2aa58:	cmp	r2, r5
   2aa5c:	beq	2aa90 <main@@Base+0x14a08>
   2aa60:	ldrb	r0, [r2]
   2aa64:	cmp	r0, #58	; 0x3a
   2aa68:	bne	2aa90 <main@@Base+0x14a08>
   2aa6c:	add	r1, r2, #1
   2aa70:	sub	r0, r5, r1
   2aa74:	cmp	r0, #2
   2aa78:	blt	2ae3c <main@@Base+0x14db4>
   2aa7c:	ldrb	r0, [r1]
   2aa80:	cmp	r0, #32
   2aa84:	bls	2ae2c <main@@Base+0x14da4>
   2aa88:	mov	r2, r1
   2aa8c:	b	2ae4c <main@@Base+0x14dc4>
   2aa90:	mov	r1, r2
   2aa94:	mov	r0, sl
   2aa98:	mov	r2, r5
   2aa9c:	mov	r3, #4
   2aaa0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2aaa4:	b	2ae48 <main@@Base+0x14dc0>
   2aaa8:	cmp	r0, #34	; 0x22
   2aaac:	bne	2b0e4 <main@@Base+0x1505c>
   2aab0:	add	r1, r8, #20
   2aab4:	sub	r0, r5, r1
   2aab8:	cmp	r0, #2
   2aabc:	blt	2aeb4 <main@@Base+0x14e2c>
   2aac0:	ldrb	r0, [r1]
   2aac4:	cmp	r0, #32
   2aac8:	bls	2aea0 <main@@Base+0x14e18>
   2aacc:	mov	r2, r1
   2aad0:	b	2aec4 <main@@Base+0x14e3c>
   2aad4:	bne	2aae8 <main@@Base+0x14a60>
   2aad8:	mov	r2, r1
   2aadc:	ldrb	r0, [r2, #1]!
   2aae0:	cmp	r0, #32
   2aae4:	bhi	2aaf8 <main@@Base+0x14a70>
   2aae8:	mov	r0, sl
   2aaec:	mov	r2, r5
   2aaf0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2aaf4:	mov	r2, r0
   2aaf8:	cmp	r2, r5
   2aafc:	beq	2ab30 <main@@Base+0x14aa8>
   2ab00:	ldrb	r0, [r2]
   2ab04:	cmp	r0, #58	; 0x3a
   2ab08:	bne	2ab30 <main@@Base+0x14aa8>
   2ab0c:	add	r1, r2, #1
   2ab10:	sub	r0, r5, r1
   2ab14:	cmp	r0, #2
   2ab18:	blt	2af5c <main@@Base+0x14ed4>
   2ab1c:	ldrb	r0, [r1]
   2ab20:	cmp	r0, #32
   2ab24:	bls	2af4c <main@@Base+0x14ec4>
   2ab28:	mov	r2, r1
   2ab2c:	b	2af6c <main@@Base+0x14ee4>
   2ab30:	mov	r1, r2
   2ab34:	mov	r0, sl
   2ab38:	mov	r2, r5
   2ab3c:	mov	r3, #4
   2ab40:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2ab44:	b	2af68 <main@@Base+0x14ee0>
   2ab48:	bne	2ab5c <main@@Base+0x14ad4>
   2ab4c:	mov	r2, r1
   2ab50:	ldrb	r0, [r2, #1]!
   2ab54:	cmp	r0, #32
   2ab58:	bhi	2ab6c <main@@Base+0x14ae4>
   2ab5c:	mov	r0, sl
   2ab60:	mov	r2, r5
   2ab64:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2ab68:	mov	r2, r0
   2ab6c:	cmp	r2, r5
   2ab70:	beq	2aba4 <main@@Base+0x14b1c>
   2ab74:	ldrb	r0, [r2]
   2ab78:	cmp	r0, #58	; 0x3a
   2ab7c:	bne	2aba4 <main@@Base+0x14b1c>
   2ab80:	add	r1, r2, #1
   2ab84:	sub	r0, r5, r1
   2ab88:	cmp	r0, #2
   2ab8c:	blt	2af24 <main@@Base+0x14e9c>
   2ab90:	ldrb	r0, [r1]
   2ab94:	cmp	r0, #32
   2ab98:	bls	2af14 <main@@Base+0x14e8c>
   2ab9c:	mov	r2, r1
   2aba0:	b	2af34 <main@@Base+0x14eac>
   2aba4:	mov	r1, r2
   2aba8:	mov	r0, sl
   2abac:	mov	r2, r5
   2abb0:	mov	r3, #4
   2abb4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2abb8:	b	2af30 <main@@Base+0x14ea8>
   2abbc:	bne	2abd0 <main@@Base+0x14b48>
   2abc0:	mov	r2, r1
   2abc4:	ldrb	r0, [r2, #1]!
   2abc8:	cmp	r0, #32
   2abcc:	bhi	2abe0 <main@@Base+0x14b58>
   2abd0:	mov	r0, sl
   2abd4:	mov	r2, r5
   2abd8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2abdc:	mov	r2, r0
   2abe0:	cmp	r2, r5
   2abe4:	beq	2ac18 <main@@Base+0x14b90>
   2abe8:	ldrb	r0, [r2]
   2abec:	cmp	r0, #58	; 0x3a
   2abf0:	bne	2ac18 <main@@Base+0x14b90>
   2abf4:	add	r1, r2, #1
   2abf8:	sub	r0, r5, r1
   2abfc:	cmp	r0, #2
   2ac00:	blt	2afac <main@@Base+0x14f24>
   2ac04:	ldrb	r0, [r1]
   2ac08:	cmp	r0, #32
   2ac0c:	bls	2af9c <main@@Base+0x14f14>
   2ac10:	mov	r2, r1
   2ac14:	b	2afbc <main@@Base+0x14f34>
   2ac18:	mov	r1, r2
   2ac1c:	mov	r0, sl
   2ac20:	mov	r2, r5
   2ac24:	mov	r3, #4
   2ac28:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2ac2c:	b	2afb8 <main@@Base+0x14f30>
   2ac30:	bne	2ac40 <main@@Base+0x14bb8>
   2ac34:	ldrb	r0, [r1, #2]!
   2ac38:	cmp	r0, #32
   2ac3c:	bhi	2ac54 <main@@Base+0x14bcc>
   2ac40:	mov	r1, r2
   2ac44:	mov	r0, sl
   2ac48:	mov	r2, r5
   2ac4c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2ac50:	mov	r1, r0
   2ac54:	cmp	r8, r1
   2ac58:	beq	2ac8c <main@@Base+0x14c04>
   2ac5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ac60:	mov	r2, #7
   2ac64:	mov	r3, #3
   2ac68:	str	r2, [sp]
   2ac6c:	mov	r2, r5
   2ac70:	str	r0, [sp, #4]
   2ac74:	movw	r0, #45936	; 0xb370
   2ac78:	movt	r0, #2
   2ac7c:	str	r0, [sp, #8]
   2ac80:	mov	r0, sl
   2ac84:	bl	35ae4 <flatcc_json_parser_union@@Base>
   2ac88:	b	2b0f4 <main@@Base+0x1506c>
   2ac8c:	mov	r0, sl
   2ac90:	mov	r1, r8
   2ac94:	b	2b0ec <main@@Base+0x15064>
   2ac98:	bne	2aca8 <main@@Base+0x14c20>
   2ac9c:	ldrb	r0, [r2, #2]!
   2aca0:	cmp	r0, #32
   2aca4:	bhi	2acb8 <main@@Base+0x14c30>
   2aca8:	mov	r0, sl
   2acac:	mov	r2, r5
   2acb0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2acb4:	mov	r2, r0
   2acb8:	cmp	r4, r2
   2acbc:	beq	2b0e4 <main@@Base+0x1505c>
   2acc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2acc4:	mov	r1, #3
   2acc8:	mov	r3, #1
   2accc:	str	r1, [sp]
   2acd0:	mov	r1, r2
   2acd4:	mov	r2, r5
   2acd8:	str	r0, [sp, #4]
   2acdc:	movw	r0, #45728	; 0xb2a0
   2ace0:	movt	r0, #5
   2ace4:	b	2b0c8 <main@@Base+0x15040>
   2ace8:	bne	2acf8 <main@@Base+0x14c70>
   2acec:	ldrb	r0, [r2, #2]!
   2acf0:	cmp	r0, #32
   2acf4:	bhi	2ad08 <main@@Base+0x14c80>
   2acf8:	mov	r0, sl
   2acfc:	mov	r2, r5
   2ad00:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2ad04:	mov	r2, r0
   2ad08:	cmp	r6, r2
   2ad0c:	beq	2ad38 <main@@Base+0x14cb0>
   2ad10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ad14:	mov	r1, #7
   2ad18:	mov	r3, #3
   2ad1c:	str	r1, [sp]
   2ad20:	mov	r1, r2
   2ad24:	mov	r2, r5
   2ad28:	str	r0, [sp, #4]
   2ad2c:	movw	r0, #45744	; 0xb2b0
   2ad30:	movt	r0, #5
   2ad34:	b	2b0c8 <main@@Base+0x15040>
   2ad38:	mov	r0, sl
   2ad3c:	mov	r1, r6
   2ad40:	b	2b0ec <main@@Base+0x15064>
   2ad44:	bne	2ad58 <main@@Base+0x14cd0>
   2ad48:	mov	r2, r1
   2ad4c:	ldrb	r0, [r2, #1]!
   2ad50:	cmp	r0, #32
   2ad54:	bhi	2ad68 <main@@Base+0x14ce0>
   2ad58:	mov	r0, sl
   2ad5c:	mov	r2, r5
   2ad60:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2ad64:	mov	r2, r0
   2ad68:	cmp	r2, r5
   2ad6c:	beq	2ada0 <main@@Base+0x14d18>
   2ad70:	ldrb	r0, [r2]
   2ad74:	cmp	r0, #58	; 0x3a
   2ad78:	bne	2ada0 <main@@Base+0x14d18>
   2ad7c:	add	r1, r2, #1
   2ad80:	sub	r0, r5, r1
   2ad84:	cmp	r0, #2
   2ad88:	blt	2b008 <main@@Base+0x14f80>
   2ad8c:	ldrb	r0, [r1]
   2ad90:	cmp	r0, #32
   2ad94:	bls	2aff8 <main@@Base+0x14f70>
   2ad98:	mov	r2, r1
   2ad9c:	b	2b018 <main@@Base+0x14f90>
   2ada0:	mov	r1, r2
   2ada4:	mov	r0, sl
   2ada8:	mov	r2, r5
   2adac:	mov	r3, #4
   2adb0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2adb4:	b	2b014 <main@@Base+0x14f8c>
   2adb8:	bne	2adcc <main@@Base+0x14d44>
   2adbc:	mov	r2, r1
   2adc0:	ldrb	r0, [r2, #1]!
   2adc4:	cmp	r0, #32
   2adc8:	bhi	2addc <main@@Base+0x14d54>
   2adcc:	mov	r0, sl
   2add0:	mov	r2, r5
   2add4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2add8:	mov	r2, r0
   2addc:	cmp	r2, r5
   2ade0:	beq	2ae14 <main@@Base+0x14d8c>
   2ade4:	ldrb	r0, [r2]
   2ade8:	cmp	r0, #58	; 0x3a
   2adec:	bne	2ae14 <main@@Base+0x14d8c>
   2adf0:	add	r1, r2, #1
   2adf4:	sub	r0, r5, r1
   2adf8:	cmp	r0, #2
   2adfc:	blt	2b040 <main@@Base+0x14fb8>
   2ae00:	ldrb	r0, [r1]
   2ae04:	cmp	r0, #32
   2ae08:	bls	2b030 <main@@Base+0x14fa8>
   2ae0c:	mov	r2, r1
   2ae10:	b	2b050 <main@@Base+0x14fc8>
   2ae14:	mov	r1, r2
   2ae18:	mov	r0, sl
   2ae1c:	mov	r2, r5
   2ae20:	mov	r3, #4
   2ae24:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2ae28:	b	2b04c <main@@Base+0x14fc4>
   2ae2c:	bne	2ae3c <main@@Base+0x14db4>
   2ae30:	ldrb	r0, [r2, #2]!
   2ae34:	cmp	r0, #32
   2ae38:	bhi	2ae4c <main@@Base+0x14dc4>
   2ae3c:	mov	r0, sl
   2ae40:	mov	r2, r5
   2ae44:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2ae48:	mov	r2, r0
   2ae4c:	cmp	r4, r2
   2ae50:	beq	2b0e4 <main@@Base+0x1505c>
   2ae54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ae58:	mov	r1, #9
   2ae5c:	mov	r3, #4
   2ae60:	str	r1, [sp]
   2ae64:	mov	r1, r2
   2ae68:	mov	r2, r5
   2ae6c:	str	r0, [sp, #4]
   2ae70:	movw	r0, #45760	; 0xb2c0
   2ae74:	movt	r0, #5
   2ae78:	str	r0, [sp, #8]
   2ae7c:	movw	r0, #45936	; 0xb370
   2ae80:	movt	r0, #2
   2ae84:	str	r0, [sp, #12]
   2ae88:	movw	r0, #49628	; 0xc1dc
   2ae8c:	movt	r0, #2
   2ae90:	str	r0, [sp, #16]
   2ae94:	mov	r0, sl
   2ae98:	bl	36558 <flatcc_json_parser_union_type_vector@@Base>
   2ae9c:	b	2b0f4 <main@@Base+0x1506c>
   2aea0:	bne	2aeb4 <main@@Base+0x14e2c>
   2aea4:	mov	r2, r1
   2aea8:	ldrb	r0, [r2, #1]!
   2aeac:	cmp	r0, #32
   2aeb0:	bhi	2aec4 <main@@Base+0x14e3c>
   2aeb4:	mov	r0, sl
   2aeb8:	mov	r2, r5
   2aebc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2aec0:	mov	r2, r0
   2aec4:	cmp	r2, r5
   2aec8:	beq	2aefc <main@@Base+0x14e74>
   2aecc:	ldrb	r0, [r2]
   2aed0:	cmp	r0, #58	; 0x3a
   2aed4:	bne	2aefc <main@@Base+0x14e74>
   2aed8:	add	r1, r2, #1
   2aedc:	sub	r0, r5, r1
   2aee0:	cmp	r0, #2
   2aee4:	blt	2b08c <main@@Base+0x15004>
   2aee8:	ldrb	r0, [r1]
   2aeec:	cmp	r0, #32
   2aef0:	bls	2b07c <main@@Base+0x14ff4>
   2aef4:	mov	r2, r1
   2aef8:	b	2b09c <main@@Base+0x15014>
   2aefc:	mov	r1, r2
   2af00:	mov	r0, sl
   2af04:	mov	r2, r5
   2af08:	mov	r3, #4
   2af0c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2af10:	b	2b098 <main@@Base+0x15010>
   2af14:	bne	2af24 <main@@Base+0x14e9c>
   2af18:	ldrb	r0, [r2, #2]!
   2af1c:	cmp	r0, #32
   2af20:	bhi	2af34 <main@@Base+0x14eac>
   2af24:	mov	r0, sl
   2af28:	mov	r2, r5
   2af2c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2af30:	mov	r2, r0
   2af34:	cmp	r4, r2
   2af38:	beq	2b0e4 <main@@Base+0x1505c>
   2af3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2af40:	mov	r1, #3
   2af44:	mov	r3, #1
   2af48:	b	2b064 <main@@Base+0x14fdc>
   2af4c:	bne	2af5c <main@@Base+0x14ed4>
   2af50:	ldrb	r0, [r2, #2]!
   2af54:	cmp	r0, #32
   2af58:	bhi	2af6c <main@@Base+0x14ee4>
   2af5c:	mov	r0, sl
   2af60:	mov	r2, r5
   2af64:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2af68:	mov	r2, r0
   2af6c:	cmp	r9, r2
   2af70:	beq	2b070 <main@@Base+0x14fe8>
   2af74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2af78:	mov	r1, #5
   2af7c:	mov	r3, #2
   2af80:	str	r1, [sp]
   2af84:	mov	r1, r2
   2af88:	mov	r2, r5
   2af8c:	str	r0, [sp, #4]
   2af90:	movw	r0, #45792	; 0xb2e0
   2af94:	movt	r0, #5
   2af98:	b	2b0c8 <main@@Base+0x15040>
   2af9c:	bne	2afac <main@@Base+0x14f24>
   2afa0:	ldrb	r0, [r2, #2]!
   2afa4:	cmp	r0, #32
   2afa8:	bhi	2afbc <main@@Base+0x14f34>
   2afac:	mov	r0, sl
   2afb0:	mov	r2, r5
   2afb4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2afb8:	mov	r2, r0
   2afbc:	cmp	r4, r2
   2afc0:	beq	2b0e4 <main@@Base+0x1505c>
   2afc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2afc8:	mov	r1, #9
   2afcc:	mov	r3, #4
   2afd0:	str	r1, [sp]
   2afd4:	mov	r1, r2
   2afd8:	mov	r2, r5
   2afdc:	str	r0, [sp, #4]
   2afe0:	movw	r0, #45936	; 0xb370
   2afe4:	movt	r0, #2
   2afe8:	str	r0, [sp, #8]
   2afec:	mov	r0, sl
   2aff0:	bl	3608c <flatcc_json_parser_union_vector@@Base>
   2aff4:	b	2b0f4 <main@@Base+0x1506c>
   2aff8:	bne	2b008 <main@@Base+0x14f80>
   2affc:	ldrb	r0, [r2, #2]!
   2b000:	cmp	r0, #32
   2b004:	bhi	2b018 <main@@Base+0x14f90>
   2b008:	mov	r0, sl
   2b00c:	mov	r2, r5
   2b010:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b014:	mov	r2, r0
   2b018:	cmp	r4, r2
   2b01c:	beq	2b0e4 <main@@Base+0x1505c>
   2b020:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b024:	mov	r1, #1
   2b028:	mov	r3, #0
   2b02c:	b	2b064 <main@@Base+0x14fdc>
   2b030:	bne	2b040 <main@@Base+0x14fb8>
   2b034:	ldrb	r0, [r2, #2]!
   2b038:	cmp	r0, #32
   2b03c:	bhi	2b050 <main@@Base+0x14fc8>
   2b040:	mov	r0, sl
   2b044:	mov	r2, r5
   2b048:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b04c:	mov	r2, r0
   2b050:	cmp	r9, r2
   2b054:	beq	2b070 <main@@Base+0x14fe8>
   2b058:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b05c:	mov	r1, #5
   2b060:	mov	r3, #2
   2b064:	str	r1, [sp]
   2b068:	mov	r1, r2
   2b06c:	b	2ac6c <main@@Base+0x14be4>
   2b070:	mov	r0, sl
   2b074:	mov	r1, r9
   2b078:	b	2b0ec <main@@Base+0x15064>
   2b07c:	bne	2b08c <main@@Base+0x15004>
   2b080:	ldrb	r0, [r2, #2]!
   2b084:	cmp	r0, #32
   2b088:	bhi	2b09c <main@@Base+0x15014>
   2b08c:	mov	r0, sl
   2b090:	mov	r2, r5
   2b094:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b098:	mov	r2, r0
   2b09c:	cmp	r4, r2
   2b0a0:	beq	2b0e4 <main@@Base+0x1505c>
   2b0a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b0a8:	mov	r1, #1
   2b0ac:	mov	r3, #0
   2b0b0:	str	r1, [sp]
   2b0b4:	mov	r1, r2
   2b0b8:	mov	r2, r5
   2b0bc:	str	r0, [sp, #4]
   2b0c0:	movw	r0, #45776	; 0xb2d0
   2b0c4:	movt	r0, #5
   2b0c8:	str	r0, [sp, #8]
   2b0cc:	movw	r0, #45936	; 0xb370
   2b0d0:	movt	r0, #2
   2b0d4:	str	r0, [sp, #12]
   2b0d8:	mov	r0, sl
   2b0dc:	bl	35c24 <flatcc_json_parser_union_type@@Base>
   2b0e0:	b	2b0f4 <main@@Base+0x1506c>
   2b0e4:	mov	r0, sl
   2b0e8:	mov	r1, r4
   2b0ec:	mov	r2, r5
   2b0f0:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   2b0f4:	ldr	r4, [sp, #36]	; 0x24
   2b0f8:	mov	r2, r0
   2b0fc:	sub	r0, r5, r0
   2b100:	cmp	r0, #2
   2b104:	blt	2b130 <main@@Base+0x150a8>
   2b108:	ldrb	r0, [r2]
   2b10c:	cmp	r0, #32
   2b110:	bls	2b11c <main@@Base+0x15094>
   2b114:	mov	r3, r2
   2b118:	b	2b144 <main@@Base+0x150bc>
   2b11c:	bne	2b130 <main@@Base+0x150a8>
   2b120:	mov	r3, r2
   2b124:	ldrb	r0, [r3, #1]!
   2b128:	cmp	r0, #32
   2b12c:	bhi	2b144 <main@@Base+0x150bc>
   2b130:	mov	r1, r2
   2b134:	mov	r0, sl
   2b138:	mov	r2, r5
   2b13c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b140:	mov	r3, r0
   2b144:	cmp	r3, r5
   2b148:	beq	2b1b4 <main@@Base+0x1512c>
   2b14c:	ldrb	r0, [r3]
   2b150:	cmp	r0, #44	; 0x2c
   2b154:	bne	2b1bc <main@@Base+0x15134>
   2b158:	add	r1, r3, #1
   2b15c:	sub	r0, r5, r1
   2b160:	cmp	r0, #2
   2b164:	blt	2b18c <main@@Base+0x15104>
   2b168:	ldrb	r0, [r1]
   2b16c:	cmp	r0, #32
   2b170:	bls	2b17c <main@@Base+0x150f4>
   2b174:	mov	r3, r1
   2b178:	b	2b19c <main@@Base+0x15114>
   2b17c:	bne	2b18c <main@@Base+0x15104>
   2b180:	ldrb	r0, [r3, #2]!
   2b184:	cmp	r0, #32
   2b188:	bhi	2b19c <main@@Base+0x15114>
   2b18c:	mov	r0, sl
   2b190:	mov	r2, r5
   2b194:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b198:	mov	r3, r0
   2b19c:	cmp	r3, r5
   2b1a0:	beq	2b1e8 <main@@Base+0x15160>
   2b1a4:	ldrb	r0, [r3]
   2b1a8:	cmp	r0, #125	; 0x7d
   2b1ac:	bne	29e24 <main@@Base+0x13d9c>
   2b1b0:	b	2b1c4 <main@@Base+0x1513c>
   2b1b4:	mov	r7, r5
   2b1b8:	b	29d60 <main@@Base+0x13cd8>
   2b1bc:	cmp	r0, #125	; 0x7d
   2b1c0:	bne	2b1f4 <main@@Base+0x1516c>
   2b1c4:	add	r1, r3, #1
   2b1c8:	sub	r0, r5, r1
   2b1cc:	cmp	r0, #2
   2b1d0:	blt	2b21c <main@@Base+0x15194>
   2b1d4:	ldrb	r0, [r1]
   2b1d8:	cmp	r0, #32
   2b1dc:	bls	2b208 <main@@Base+0x15180>
   2b1e0:	mov	r7, r1
   2b1e4:	b	29d60 <main@@Base+0x13cd8>
   2b1e8:	mov	r0, sl
   2b1ec:	mov	r1, r5
   2b1f0:	b	2b1fc <main@@Base+0x15174>
   2b1f4:	mov	r0, sl
   2b1f8:	mov	r1, r3
   2b1fc:	mov	r2, r5
   2b200:	mov	r3, #10
   2b204:	b	29d58 <main@@Base+0x13cd0>
   2b208:	bne	2b21c <main@@Base+0x15194>
   2b20c:	ldrb	r0, [r3, #2]!
   2b210:	mov	r7, r3
   2b214:	cmp	r0, #32
   2b218:	bhi	29d60 <main@@Base+0x13cd8>
   2b21c:	mov	r0, sl
   2b220:	mov	r2, r5
   2b224:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b228:	b	29d5c <main@@Base+0x13cd4>
   2b22c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b230:	add	fp, sp, #28
   2b234:	push	{r3}		; (str r3, [sp, #-4]!)
   2b238:	sub	r7, r2, r1
   2b23c:	cmp	r7, #8
   2b240:	movcs	r7, #8
   2b244:	sub	r5, r7, #1
   2b248:	cmp	r5, #7
   2b24c:	bhi	2b364 <main@@Base+0x152dc>
   2b250:	add	lr, pc, #32
   2b254:	mov	ip, #0
   2b258:	mov	r3, #0
   2b25c:	mov	r8, #0
   2b260:	mov	r9, #0
   2b264:	mov	sl, #0
   2b268:	mov	r7, #0
   2b26c:	mov	r4, #0
   2b270:	mov	r6, #0
   2b274:	ldr	pc, [lr, r5, lsl #2]
   2b278:	ldrdeq	fp, [r2], -ip
   2b27c:	ldrdeq	fp, [r2], -r4
   2b280:	andeq	fp, r2, ip, asr #5
   2b284:	andeq	fp, r2, r4, asr #5
   2b288:			; <UNDEFINED> instruction: 0x0002b2b8
   2b28c:	andeq	fp, r2, ip, lsr #5
   2b290:	muleq	r2, ip, r2
   2b294:	muleq	r2, r8, r2
   2b298:	ldrb	r3, [r1, #7]
   2b29c:	ldrb	r7, [r1, #6]
   2b2a0:	mov	r8, ip
   2b2a4:	orr	r3, r3, r7, lsl #8
   2b2a8:	mov	ip, r3
   2b2ac:	ldrb	r3, [r1, #5]
   2b2b0:	mov	r9, r8
   2b2b4:	orr	ip, ip, r3, lsl #16
   2b2b8:	ldrb	r3, [r1, #4]
   2b2bc:	mov	sl, r9
   2b2c0:	orr	ip, ip, r3, lsl #24
   2b2c4:	ldrb	r3, [r1, #3]
   2b2c8:	orr	r7, r3, sl
   2b2cc:	ldrb	r3, [r1, #2]
   2b2d0:	orr	r4, r7, r3, lsl #8
   2b2d4:	ldrb	r3, [r1, #1]
   2b2d8:	orr	r6, r4, r3, lsl #16
   2b2dc:	ldrb	r7, [r1]
   2b2e0:	movw	r3, #29797	; 0x7465
   2b2e4:	movt	r3, #24931	; 0x6163
   2b2e8:	eor	r3, ip, r3
   2b2ec:	orr	r7, r6, r7, lsl #24
   2b2f0:	movw	r6, #24946	; 0x6172
   2b2f4:	movt	r6, #17256	; 0x4368
   2b2f8:	eor	r7, r7, r6
   2b2fc:	orrs	r3, r3, r7
   2b300:	bne	2b364 <main@@Base+0x152dc>
   2b304:	add	lr, r1, #8
   2b308:	sub	r7, r2, lr
   2b30c:	cmp	r7, #8
   2b310:	mov	r3, r7
   2b314:	movcs	r3, #8
   2b318:	sub	r3, r3, #1
   2b31c:	cmp	r3, #7
   2b320:	bhi	2b364 <main@@Base+0x152dc>
   2b324:	cmp	r7, #2
   2b328:	blt	2b364 <main@@Base+0x152dc>
   2b32c:	ldrb	r3, [lr]
   2b330:	cmp	r3, #114	; 0x72
   2b334:	bne	2b364 <main@@Base+0x152dc>
   2b338:	ldrb	r3, [r1, #9]
   2b33c:	mov	ip, lr
   2b340:	cmp	r3, #46	; 0x2e
   2b344:	addeq	ip, r1, #10
   2b348:	cmp	ip, lr
   2b34c:	beq	2b364 <main@@Base+0x152dc>
   2b350:	ldr	r3, [sp]
   2b354:	mov	r1, ip
   2b358:	sub	sp, fp, #28
   2b35c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b360:	b	25d00 <main@@Base+0xfc78>
   2b364:	mov	r0, r1
   2b368:	sub	sp, fp, #28
   2b36c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b374:	add	fp, sp, #28
   2b378:	sub	sp, sp, #36	; 0x24
   2b37c:	ldr	r7, [fp, #8]
   2b380:	mov	r9, r0
   2b384:	mov	r0, #0
   2b388:	mov	r8, r2
   2b38c:	mov	r4, r1
   2b390:	cmp	r3, #11
   2b394:	str	r0, [r7]
   2b398:	bhi	2b3ec <main@@Base+0x15364>
   2b39c:	add	r0, pc, #0
   2b3a0:	ldr	pc, [r0, r3, lsl #2]
   2b3a4:	andeq	fp, r2, ip, lsr #8
   2b3a8:	andeq	fp, r2, ip, lsl #8
   2b3ac:	andeq	fp, r2, r0, ror r4
   2b3b0:	andeq	fp, r2, ip, lsl #8
   2b3b4:	andeq	fp, r2, ip, lsl #8
   2b3b8:	andeq	fp, r2, ip, lsl #8
   2b3bc:	andeq	fp, r2, ip, lsl #8
   2b3c0:	andeq	fp, r2, ip, lsl #8
   2b3c4:	andeq	fp, r2, r4, asr #9
   2b3c8:	ldrdeq	fp, [r2], -r4
   2b3cc:	ldrdeq	fp, [r2], -r4
   2b3d0:	strdeq	fp, [r2], -r4
   2b3d4:	mov	r0, r9
   2b3d8:	mov	r1, r4
   2b3dc:	mov	r2, r8
   2b3e0:	mov	r3, r7
   2b3e4:	bl	2c204 <main@@Base+0x1617c>
   2b3e8:	b	2b5bc <main@@Base+0x15534>
   2b3ec:	cmp	r3, #255	; 0xff
   2b3f0:	bne	2b40c <main@@Base+0x15384>
   2b3f4:	mov	r0, r9
   2b3f8:	mov	r1, r4
   2b3fc:	mov	r2, r8
   2b400:	mov	r3, r7
   2b404:	bl	35818 <flatcc_json_parser_build_string@@Base>
   2b408:	b	2b5bc <main@@Base+0x15534>
   2b40c:	ldrb	r0, [r9, #8]
   2b410:	tst	r0, #1
   2b414:	bne	2b520 <main@@Base+0x15498>
   2b418:	mov	r0, r9
   2b41c:	mov	r1, r4
   2b420:	mov	r2, r8
   2b424:	mov	r3, #15
   2b428:	b	2b464 <main@@Base+0x153dc>
   2b42c:	sub	r0, r8, r4
   2b430:	cmp	r0, #4
   2b434:	blt	2b454 <main@@Base+0x153cc>
   2b438:	movw	r1, #37302	; 0x91b6
   2b43c:	mov	r0, r4
   2b440:	mov	r2, #4
   2b444:	movt	r1, #4
   2b448:	bl	14ebc <bcmp@plt>
   2b44c:	cmp	r0, #0
   2b450:	beq	2b5fc <main@@Base+0x15574>
   2b454:	mov	r0, r9
   2b458:	mov	r1, r4
   2b45c:	mov	r2, r8
   2b460:	mov	r3, #26
   2b464:	sub	sp, fp, #28
   2b468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b46c:	b	333fc <flatcc_json_parser_set_error@@Base>
   2b470:	mov	r0, #0
   2b474:	mov	r1, #1
   2b478:	str	r0, [r7]
   2b47c:	ldr	r0, [r9]
   2b480:	bl	2f5d8 <flatcc_builder_start_table@@Base>
   2b484:	cmp	r0, #0
   2b488:	bne	2b5a8 <main@@Base+0x15520>
   2b48c:	cmp	r4, r8
   2b490:	beq	2b584 <main@@Base+0x154fc>
   2b494:	ldrb	r0, [r4]
   2b498:	cmp	r0, #123	; 0x7b
   2b49c:	bne	2b584 <main@@Base+0x154fc>
   2b4a0:	add	r1, r4, #1
   2b4a4:	sub	r0, r8, r1
   2b4a8:	cmp	r0, #2
   2b4ac:	blt	2bb28 <main@@Base+0x15aa0>
   2b4b0:	ldrb	r0, [r1]
   2b4b4:	cmp	r0, #32
   2b4b8:	bls	2bb18 <main@@Base+0x15a90>
   2b4bc:	mov	r4, r1
   2b4c0:	b	2bb38 <main@@Base+0x15ab0>
   2b4c4:	mov	r0, #0
   2b4c8:	mov	r1, #2
   2b4cc:	mov	r2, #2
   2b4d0:	str	r0, [r7]
   2b4d4:	ldr	r0, [r9]
   2b4d8:	bl	2e89c <flatcc_builder_start_struct@@Base>
   2b4dc:	cmp	r0, #0
   2b4e0:	beq	2b578 <main@@Base+0x154f0>
   2b4e4:	cmp	r4, r8
   2b4e8:	beq	2b538 <main@@Base+0x154b0>
   2b4ec:	ldrb	r1, [r4]
   2b4f0:	cmp	r1, #123	; 0x7b
   2b4f4:	bne	2b538 <main@@Base+0x154b0>
   2b4f8:	add	r1, r4, #1
   2b4fc:	str	r0, [sp, #4]
   2b500:	sub	r0, r8, r1
   2b504:	cmp	r0, #2
   2b508:	blt	2b62c <main@@Base+0x155a4>
   2b50c:	ldrb	r0, [r1]
   2b510:	cmp	r0, #32
   2b514:	bls	2b61c <main@@Base+0x15594>
   2b518:	mov	r4, r1
   2b51c:	b	2b63c <main@@Base+0x155b4>
   2b520:	mov	r0, r9
   2b524:	mov	r1, r4
   2b528:	mov	r2, r8
   2b52c:	sub	sp, fp, #28
   2b530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b534:	b	33d68 <flatcc_json_parser_generic_json@@Base>
   2b538:	mov	r0, r9
   2b53c:	mov	r1, r4
   2b540:	mov	r2, r8
   2b544:	mov	r3, #21
   2b548:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2b54c:	mov	r4, r0
   2b550:	cmp	r4, r8
   2b554:	mov	r1, r8
   2b558:	beq	2b57c <main@@Base+0x154f4>
   2b55c:	ldr	r0, [r9]
   2b560:	bl	2e93c <flatcc_builder_end_struct@@Base>
   2b564:	cmp	r0, #0
   2b568:	mov	r1, r4
   2b56c:	str	r0, [r7]
   2b570:	bne	2b5c0 <main@@Base+0x15538>
   2b574:	b	2b57c <main@@Base+0x154f4>
   2b578:	mov	r1, r4
   2b57c:	mov	r0, r9
   2b580:	b	2b5b0 <main@@Base+0x15528>
   2b584:	mov	r0, r9
   2b588:	mov	r1, r4
   2b58c:	mov	r2, r8
   2b590:	mov	r3, #21
   2b594:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2b598:	mov	r4, r0
   2b59c:	ldr	r0, [r9, #24]
   2b5a0:	cmp	r0, #0
   2b5a4:	beq	2b604 <main@@Base+0x1557c>
   2b5a8:	mov	r0, r9
   2b5ac:	mov	r1, r4
   2b5b0:	mov	r2, r8
   2b5b4:	mov	r3, #33	; 0x21
   2b5b8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2b5bc:	mov	r4, r0
   2b5c0:	ldr	r0, [r9, #24]
   2b5c4:	cmp	r0, #0
   2b5c8:	bne	2b5f0 <main@@Base+0x15568>
   2b5cc:	ldr	r0, [r7]
   2b5d0:	cmp	r0, #0
   2b5d4:	bne	2b5f0 <main@@Base+0x15568>
   2b5d8:	mov	r0, r9
   2b5dc:	mov	r1, r4
   2b5e0:	mov	r2, r8
   2b5e4:	mov	r3, #33	; 0x21
   2b5e8:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2b5ec:	mov	r4, r0
   2b5f0:	mov	r0, r4
   2b5f4:	sub	sp, fp, #28
   2b5f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b5fc:	add	r4, r4, #4
   2b600:	b	2b5f0 <main@@Base+0x15568>
   2b604:	ldr	r0, [r9]
   2b608:	bl	2ff38 <flatcc_builder_end_table@@Base>
   2b60c:	cmp	r0, #0
   2b610:	str	r0, [r7]
   2b614:	bne	2b5c0 <main@@Base+0x15538>
   2b618:	b	2b5a8 <main@@Base+0x15520>
   2b61c:	bne	2b62c <main@@Base+0x155a4>
   2b620:	ldrb	r0, [r4, #2]!
   2b624:	cmp	r0, #32
   2b628:	bhi	2b63c <main@@Base+0x155b4>
   2b62c:	mov	r0, r9
   2b630:	mov	r2, r8
   2b634:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b638:	mov	r4, r0
   2b63c:	cmp	r4, r8
   2b640:	mov	r2, r8
   2b644:	beq	2b680 <main@@Base+0x155f8>
   2b648:	ldrb	r0, [r4]
   2b64c:	cmp	r0, #125	; 0x7d
   2b650:	bne	2b67c <main@@Base+0x155f4>
   2b654:	add	r1, r4, #1
   2b658:	sub	r0, r8, r1
   2b65c:	cmp	r0, #2
   2b660:	blt	2c17c <main@@Base+0x160f4>
   2b664:	ldrb	r0, [r1]
   2b668:	cmp	r0, #32
   2b66c:	bhi	2bb04 <main@@Base+0x15a7c>
   2b670:	bne	2c17c <main@@Base+0x160f4>
   2b674:	ldrb	r0, [r4, #2]!
   2b678:	b	2c174 <main@@Base+0x160ec>
   2b67c:	mov	r2, r4
   2b680:	str	r9, [sp, #12]
   2b684:	cmp	r2, r8
   2b688:	mov	r1, r8
   2b68c:	beq	2b6d8 <main@@Base+0x15650>
   2b690:	ldrb	r0, [r2]
   2b694:	cmp	r0, #46	; 0x2e
   2b698:	beq	2b6b0 <main@@Base+0x15628>
   2b69c:	cmp	r0, #34	; 0x22
   2b6a0:	bne	2b6cc <main@@Base+0x15644>
   2b6a4:	mov	r0, #0
   2b6a8:	add	r1, r2, #1
   2b6ac:	b	2b6d4 <main@@Base+0x1564c>
   2b6b0:	mov	r1, r2
   2b6b4:	mov	r0, r9
   2b6b8:	mov	r2, r8
   2b6bc:	mov	r3, #5
   2b6c0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2b6c4:	mov	r1, r0
   2b6c8:	b	2b6d8 <main@@Base+0x15650>
   2b6cc:	mov	r0, #1
   2b6d0:	mov	r1, r2
   2b6d4:	str	r0, [r9, #12]
   2b6d8:	sub	r0, r8, r1
   2b6dc:	mov	r2, #8
   2b6e0:	cmp	r0, #8
   2b6e4:	movcs	r0, r2
   2b6e8:	sub	r4, r0, #1
   2b6ec:	cmp	r4, #7
   2b6f0:	bhi	2b838 <main@@Base+0x157b0>
   2b6f4:	add	r0, pc, #36	; 0x24
   2b6f8:	mov	r9, r7
   2b6fc:	mov	sl, #0
   2b700:	mov	ip, #0
   2b704:	mov	lr, #0
   2b708:	mov	r6, #0
   2b70c:	mov	r3, #0
   2b710:	mov	r5, #0
   2b714:	mov	r2, #0
   2b718:	mov	r7, #0
   2b71c:	ldr	pc, [r0, r4, lsl #2]
   2b720:	andeq	fp, r2, r4, lsl #15
   2b724:	andeq	fp, r2, ip, ror r7
   2b728:	andeq	fp, r2, r4, ror r7
   2b72c:	andeq	fp, r2, ip, ror #14
   2b730:	andeq	fp, r2, r0, ror #14
   2b734:	andeq	fp, r2, r4, asr r7
   2b738:	andeq	fp, r2, r4, asr #14
   2b73c:	andeq	fp, r2, r0, asr #14
   2b740:	ldrb	ip, [r1, #7]
   2b744:	ldrb	r0, [r1, #6]
   2b748:	mov	lr, sl
   2b74c:	orr	r0, ip, r0, lsl #8
   2b750:	mov	sl, r0
   2b754:	ldrb	r0, [r1, #5]
   2b758:	mov	r6, lr
   2b75c:	orr	sl, sl, r0, lsl #16
   2b760:	ldrb	r0, [r1, #4]
   2b764:	mov	r3, r6
   2b768:	orr	sl, sl, r0, lsl #24
   2b76c:	ldrb	r0, [r1, #3]
   2b770:	orr	r5, r0, r3
   2b774:	ldrb	r0, [r1, #2]
   2b778:	orr	r2, r5, r0, lsl #8
   2b77c:	ldrb	r0, [r1, #1]
   2b780:	orr	r7, r2, r0, lsl #16
   2b784:	ldrb	r2, [r1]
   2b788:	movw	r0, #25966	; 0x656e
   2b78c:	movw	r3, #26994	; 0x6972
   2b790:	movt	r0, #24428	; 0x5f6c
   2b794:	movt	r3, #26721	; 0x6861
   2b798:	eor	r0, sl, r0
   2b79c:	orr	r2, r7, r2, lsl #24
   2b7a0:	mov	r7, r9
   2b7a4:	ldr	r9, [sp, #12]
   2b7a8:	eor	r2, r2, r3
   2b7ac:	orrs	r0, r0, r2
   2b7b0:	bne	2b838 <main@@Base+0x157b0>
   2b7b4:	add	r4, r1, #8
   2b7b8:	mov	r3, #8
   2b7bc:	sub	r0, r8, r4
   2b7c0:	cmp	r0, #8
   2b7c4:	movcc	r3, r0
   2b7c8:	sub	r2, r3, #3
   2b7cc:	cmp	r2, #6
   2b7d0:	bcs	2b840 <main@@Base+0x157b8>
   2b7d4:	ldrb	r2, [r1, #10]
   2b7d8:	lsl	r2, r2, #8
   2b7dc:	ldrb	r3, [r1, #9]
   2b7e0:	orr	r2, r2, r3, lsl #16
   2b7e4:	ldrb	r3, [r4]
   2b7e8:	bic	r2, r2, #255	; 0xff
   2b7ec:	orr	r2, r2, r3, lsl #24
   2b7f0:	movw	r3, #26624	; 0x6800
   2b7f4:	movt	r3, #26484	; 0x6774
   2b7f8:	teq	r2, r3
   2b7fc:	bne	2b984 <main@@Base+0x158fc>
   2b800:	cmp	r0, #4
   2b804:	blt	2b984 <main@@Base+0x158fc>
   2b808:	mov	r2, r1
   2b80c:	ldr	r3, [r9, #12]
   2b810:	ldrb	r0, [r2, #11]!
   2b814:	cmp	r3, #0
   2b818:	beq	2b858 <main@@Base+0x157d0>
   2b81c:	cmp	r0, #33	; 0x21
   2b820:	bcc	2b82c <main@@Base+0x157a4>
   2b824:	cmp	r0, #58	; 0x3a
   2b828:	bne	2b984 <main@@Base+0x158fc>
   2b82c:	mov	r0, #0
   2b830:	str	r0, [r9, #12]
   2b834:	b	2b864 <main@@Base+0x157dc>
   2b838:	mov	r0, r9
   2b83c:	b	2b98c <main@@Base+0x15904>
   2b840:	mov	r2, #0
   2b844:	cmp	r3, #1
   2b848:	beq	2b7e4 <main@@Base+0x1575c>
   2b84c:	cmp	r3, #2
   2b850:	beq	2b7dc <main@@Base+0x15754>
   2b854:	b	2b984 <main@@Base+0x158fc>
   2b858:	cmp	r0, #34	; 0x22
   2b85c:	bne	2b984 <main@@Base+0x158fc>
   2b860:	add	r2, r1, #12
   2b864:	sub	r0, r8, r2
   2b868:	cmp	r0, #2
   2b86c:	blt	2b898 <main@@Base+0x15810>
   2b870:	ldrb	r0, [r2]
   2b874:	cmp	r0, #32
   2b878:	bls	2b884 <main@@Base+0x157fc>
   2b87c:	mov	r5, r2
   2b880:	b	2b8ac <main@@Base+0x15824>
   2b884:	bne	2b898 <main@@Base+0x15810>
   2b888:	mov	r5, r2
   2b88c:	ldrb	r0, [r5, #1]!
   2b890:	cmp	r0, #32
   2b894:	bhi	2b8ac <main@@Base+0x15824>
   2b898:	mov	r1, r2
   2b89c:	mov	r0, r9
   2b8a0:	mov	r2, r8
   2b8a4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b8a8:	mov	r5, r0
   2b8ac:	cmp	r5, r8
   2b8b0:	beq	2b8e4 <main@@Base+0x1585c>
   2b8b4:	ldrb	r0, [r5]
   2b8b8:	cmp	r0, #58	; 0x3a
   2b8bc:	bne	2b8e4 <main@@Base+0x1585c>
   2b8c0:	add	r1, r5, #1
   2b8c4:	sub	r0, r8, r1
   2b8c8:	cmp	r0, #2
   2b8cc:	blt	2b90c <main@@Base+0x15884>
   2b8d0:	ldrb	r0, [r1]
   2b8d4:	cmp	r0, #32
   2b8d8:	bls	2b8fc <main@@Base+0x15874>
   2b8dc:	mov	r5, r1
   2b8e0:	b	2b91c <main@@Base+0x15894>
   2b8e4:	mov	r0, r9
   2b8e8:	mov	r1, r5
   2b8ec:	mov	r2, r8
   2b8f0:	mov	r3, #4
   2b8f4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2b8f8:	b	2b918 <main@@Base+0x15890>
   2b8fc:	bne	2b90c <main@@Base+0x15884>
   2b900:	ldrb	r0, [r5, #2]!
   2b904:	cmp	r0, #32
   2b908:	bhi	2b91c <main@@Base+0x15894>
   2b90c:	mov	r0, r9
   2b910:	mov	r2, r8
   2b914:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b918:	mov	r5, r0
   2b91c:	cmp	r4, r5
   2b920:	beq	2b984 <main@@Base+0x158fc>
   2b924:	mov	r4, #0
   2b928:	cmp	r5, r8
   2b92c:	str	r4, [sp, #28]
   2b930:	str	r4, [sp, #24]
   2b934:	strh	r4, [sp, #16]
   2b938:	str	r4, [sp, #20]
   2b93c:	beq	2ba4c <main@@Base+0x159c4>
   2b940:	add	r0, sp, #24
   2b944:	mov	r1, r5
   2b948:	mov	r2, r8
   2b94c:	add	r3, sp, #20
   2b950:	str	r0, [sp]
   2b954:	mov	r0, r9
   2b958:	bl	352ec <flatcc_json_parser_integer@@Base>
   2b95c:	cmp	r0, r5
   2b960:	beq	2ba54 <main@@Base+0x159cc>
   2b964:	mov	r1, r0
   2b968:	ldr	r0, [sp, #20]
   2b96c:	cmp	r0, #0
   2b970:	beq	2ba5c <main@@Base+0x159d4>
   2b974:	mov	r0, r9
   2b978:	mov	r2, r8
   2b97c:	mov	r3, #8
   2b980:	b	2ba7c <main@@Base+0x159f4>
   2b984:	mov	r0, r9
   2b988:	mov	r1, r4
   2b98c:	mov	r2, r8
   2b990:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   2b994:	mov	r1, r0
   2b998:	sub	r0, r8, r1
   2b99c:	cmp	r0, #2
   2b9a0:	blt	2b9cc <main@@Base+0x15944>
   2b9a4:	ldrb	r0, [r1]
   2b9a8:	cmp	r0, #32
   2b9ac:	bls	2b9b8 <main@@Base+0x15930>
   2b9b0:	mov	r2, r1
   2b9b4:	b	2b9dc <main@@Base+0x15954>
   2b9b8:	bne	2b9cc <main@@Base+0x15944>
   2b9bc:	mov	r2, r1
   2b9c0:	ldrb	r0, [r2, #1]!
   2b9c4:	cmp	r0, #32
   2b9c8:	bhi	2b9dc <main@@Base+0x15954>
   2b9cc:	mov	r0, r9
   2b9d0:	mov	r2, r8
   2b9d4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2b9d8:	mov	r2, r0
   2b9dc:	cmp	r2, r8
   2b9e0:	beq	2bad8 <main@@Base+0x15a50>
   2b9e4:	ldrb	r0, [r2]
   2b9e8:	cmp	r0, #44	; 0x2c
   2b9ec:	bne	2bae0 <main@@Base+0x15a58>
   2b9f0:	add	r1, r2, #1
   2b9f4:	sub	r0, r8, r1
   2b9f8:	cmp	r0, #2
   2b9fc:	blt	2ba24 <main@@Base+0x1599c>
   2ba00:	ldrb	r0, [r1]
   2ba04:	cmp	r0, #32
   2ba08:	bls	2ba14 <main@@Base+0x1598c>
   2ba0c:	mov	r2, r1
   2ba10:	b	2ba34 <main@@Base+0x159ac>
   2ba14:	bne	2ba24 <main@@Base+0x1599c>
   2ba18:	ldrb	r0, [r2, #2]!
   2ba1c:	cmp	r0, #32
   2ba20:	bhi	2ba34 <main@@Base+0x159ac>
   2ba24:	mov	r0, r9
   2ba28:	mov	r2, r8
   2ba2c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2ba30:	mov	r2, r0
   2ba34:	cmp	r2, r8
   2ba38:	beq	2bb0c <main@@Base+0x15a84>
   2ba3c:	ldrb	r0, [r2]
   2ba40:	cmp	r0, #125	; 0x7d
   2ba44:	bne	2b684 <main@@Base+0x155fc>
   2ba48:	b	2bae8 <main@@Base+0x15a60>
   2ba4c:	mov	r1, r8
   2ba50:	b	2ba84 <main@@Base+0x159fc>
   2ba54:	mov	r1, r5
   2ba58:	b	2ba84 <main@@Base+0x159fc>
   2ba5c:	ldr	r0, [sp, #24]
   2ba60:	ldr	r2, [sp, #28]
   2ba64:	subs	r3, r0, #65536	; 0x10000
   2ba68:	sbcs	r2, r2, #0
   2ba6c:	bcc	2bacc <main@@Base+0x15a44>
   2ba70:	mov	r0, r9
   2ba74:	mov	r2, r8
   2ba78:	mov	r3, #7
   2ba7c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2ba80:	mov	r1, r0
   2ba84:	cmp	r5, r1
   2ba88:	bne	2bac0 <main@@Base+0x15a38>
   2ba8c:	movw	r3, #45820	; 0xb2fc
   2ba90:	add	r0, sp, #16
   2ba94:	mov	r1, r5
   2ba98:	mov	r2, r8
   2ba9c:	movt	r3, #5
   2baa0:	str	r0, [sp]
   2baa4:	mov	r0, r9
   2baa8:	bl	2c824 <main@@Base+0x1679c>
   2baac:	mov	r1, r0
   2bab0:	cmp	r0, r5
   2bab4:	cmpne	r1, r8
   2bab8:	beq	2c1c4 <main@@Base+0x1613c>
   2babc:	ldrh	r4, [sp, #16]
   2bac0:	ldr	r0, [sp, #4]
   2bac4:	strh	r4, [r0]
   2bac8:	b	2b998 <main@@Base+0x15910>
   2bacc:	mov	r4, r0
   2bad0:	strh	r0, [sp, #16]
   2bad4:	b	2ba84 <main@@Base+0x159fc>
   2bad8:	mov	r1, r8
   2badc:	b	2b57c <main@@Base+0x154f4>
   2bae0:	cmp	r0, #125	; 0x7d
   2bae4:	bne	2c154 <main@@Base+0x160cc>
   2bae8:	add	r1, r2, #1
   2baec:	sub	r0, r8, r1
   2baf0:	cmp	r0, #2
   2baf4:	blt	2c17c <main@@Base+0x160f4>
   2baf8:	ldrb	r0, [r1]
   2bafc:	cmp	r0, #32
   2bb00:	bls	2c168 <main@@Base+0x160e0>
   2bb04:	mov	r4, r1
   2bb08:	b	2b550 <main@@Base+0x154c8>
   2bb0c:	mov	r0, r9
   2bb10:	mov	r1, r8
   2bb14:	b	2c15c <main@@Base+0x160d4>
   2bb18:	bne	2bb28 <main@@Base+0x15aa0>
   2bb1c:	ldrb	r0, [r4, #2]!
   2bb20:	cmp	r0, #32
   2bb24:	bhi	2bb38 <main@@Base+0x15ab0>
   2bb28:	mov	r0, r9
   2bb2c:	mov	r2, r8
   2bb30:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2bb34:	mov	r4, r0
   2bb38:	cmp	r4, r8
   2bb3c:	mov	r2, r8
   2bb40:	beq	2bb7c <main@@Base+0x15af4>
   2bb44:	ldrb	r0, [r4]
   2bb48:	cmp	r0, #125	; 0x7d
   2bb4c:	bne	2bb78 <main@@Base+0x15af0>
   2bb50:	add	r1, r4, #1
   2bb54:	sub	r0, r8, r1
   2bb58:	cmp	r0, #2
   2bb5c:	blt	2c1b4 <main@@Base+0x1612c>
   2bb60:	ldrb	r0, [r1]
   2bb64:	cmp	r0, #32
   2bb68:	bhi	2c140 <main@@Base+0x160b8>
   2bb6c:	bne	2c1b4 <main@@Base+0x1612c>
   2bb70:	ldrb	r0, [r4, #2]!
   2bb74:	b	2c1ac <main@@Base+0x16124>
   2bb78:	mov	r2, r4
   2bb7c:	str	r7, [sp, #8]
   2bb80:	cmp	r2, r8
   2bb84:	mov	r1, r8
   2bb88:	beq	2bbd4 <main@@Base+0x15b4c>
   2bb8c:	ldrb	r0, [r2]
   2bb90:	cmp	r0, #46	; 0x2e
   2bb94:	beq	2bbac <main@@Base+0x15b24>
   2bb98:	cmp	r0, #34	; 0x22
   2bb9c:	bne	2bbc8 <main@@Base+0x15b40>
   2bba0:	mov	r0, #0
   2bba4:	add	r1, r2, #1
   2bba8:	b	2bbd0 <main@@Base+0x15b48>
   2bbac:	mov	r1, r2
   2bbb0:	mov	r0, r9
   2bbb4:	mov	r2, r8
   2bbb8:	mov	r3, #5
   2bbbc:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2bbc0:	mov	r1, r0
   2bbc4:	b	2bbd4 <main@@Base+0x15b4c>
   2bbc8:	mov	r0, #1
   2bbcc:	mov	r1, r2
   2bbd0:	str	r0, [r9, #12]
   2bbd4:	sub	r0, r8, r1
   2bbd8:	mov	r2, #8
   2bbdc:	cmp	r0, #8
   2bbe0:	movcs	r0, r2
   2bbe4:	sub	r4, r0, #1
   2bbe8:	cmp	r4, #7
   2bbec:	bhi	2be0c <main@@Base+0x15d84>
   2bbf0:	add	sl, pc, #32
   2bbf4:	mov	r0, #0
   2bbf8:	mov	ip, #0
   2bbfc:	mov	lr, #0
   2bc00:	mov	r6, #0
   2bc04:	mov	r3, #0
   2bc08:	mov	r2, #0
   2bc0c:	mov	r7, #0
   2bc10:	mov	r5, #0
   2bc14:	ldr	pc, [sl, r4, lsl #2]
   2bc18:	andeq	fp, r2, ip, ror ip
   2bc1c:	andeq	fp, r2, r4, ror ip
   2bc20:	andeq	fp, r2, ip, ror #24
   2bc24:	andeq	fp, r2, r4, ror #24
   2bc28:	andeq	fp, r2, r8, asr ip
   2bc2c:	andeq	fp, r2, ip, asr #24
   2bc30:	andeq	fp, r2, ip, lsr ip
   2bc34:	andeq	fp, r2, r8, lsr ip
   2bc38:	ldrb	ip, [r1, #7]
   2bc3c:	ldrb	r2, [r1, #6]
   2bc40:	mov	lr, r0
   2bc44:	orr	r2, ip, r2, lsl #8
   2bc48:	mov	r0, r2
   2bc4c:	ldrb	r2, [r1, #5]
   2bc50:	mov	r6, lr
   2bc54:	orr	r0, r0, r2, lsl #16
   2bc58:	ldrb	r2, [r1, #4]
   2bc5c:	mov	r3, r6
   2bc60:	orr	r0, r0, r2, lsl #24
   2bc64:	ldrb	r2, [r1, #3]
   2bc68:	orr	r2, r2, r3
   2bc6c:	ldrb	r3, [r1, #2]
   2bc70:	orr	r7, r2, r3, lsl #8
   2bc74:	ldrb	r2, [r1, #1]
   2bc78:	orr	r5, r7, r2, lsl #16
   2bc7c:	movw	r2, #24948	; 0x6174
   2bc80:	movw	r3, #28530	; 0x6f72
   2bc84:	movt	r2, #25695	; 0x645f
   2bc88:	movt	r3, #29559	; 0x7377
   2bc8c:	eor	r0, r0, r2
   2bc90:	ldrb	r2, [r1]
   2bc94:	orr	r2, r5, r2, lsl #24
   2bc98:	eor	r2, r2, r3
   2bc9c:	orrs	r0, r0, r2
   2bca0:	bne	2be0c <main@@Base+0x15d84>
   2bca4:	add	lr, r1, #8
   2bca8:	mov	r2, #8
   2bcac:	sub	r0, r8, lr
   2bcb0:	cmp	r0, #8
   2bcb4:	movcs	r0, r2
   2bcb8:	sub	r3, r0, #1
   2bcbc:	cmp	r3, #7
   2bcc0:	bhi	2be14 <main@@Base+0x15d8c>
   2bcc4:	add	r6, pc, #36	; 0x24
   2bcc8:	mov	r2, #0
   2bccc:	mov	r0, #0
   2bcd0:	mov	sl, #0
   2bcd4:	mov	r4, #0
   2bcd8:	mov	r5, #0
   2bcdc:	mov	r7, #0
   2bce0:	mov	ip, #0
   2bce4:	str	r2, [sp, #4]
   2bce8:	mov	r2, #0
   2bcec:	ldr	pc, [r6, r3, lsl #2]
   2bcf0:	andeq	fp, r2, ip, asr sp
   2bcf4:	andeq	fp, r2, r4, asr sp
   2bcf8:	andeq	fp, r2, ip, asr #26
   2bcfc:	andeq	fp, r2, r4, asr #26
   2bd00:	andeq	fp, r2, r8, lsr sp
   2bd04:	andeq	fp, r2, ip, lsr #26
   2bd08:	andeq	fp, r2, r8, lsl sp
   2bd0c:	andeq	fp, r2, r0, lsl sp
   2bd10:	ldrb	r2, [r1, #15]
   2bd14:	str	r2, [sp, #4]
   2bd18:	ldrb	r2, [r1, #14]
   2bd1c:	ldr	r3, [sp, #4]
   2bd20:	mov	sl, r0
   2bd24:	orr	r2, r3, r2, lsl #8
   2bd28:	mov	r0, r2
   2bd2c:	ldrb	r2, [r1, #13]
   2bd30:	mov	r4, sl
   2bd34:	orr	r0, r0, r2, lsl #16
   2bd38:	ldrb	r2, [r1, #12]
   2bd3c:	mov	r5, r4
   2bd40:	orr	r0, r0, r2, lsl #24
   2bd44:	ldrb	r2, [r1, #11]
   2bd48:	orr	r2, r2, r5
   2bd4c:	ldrb	r3, [r1, #10]
   2bd50:	orr	r7, r2, r3, lsl #8
   2bd54:	ldrb	r2, [r1, #9]
   2bd58:	orr	ip, r7, r2, lsl #16
   2bd5c:	movw	r2, #24941	; 0x616d
   2bd60:	movw	r3, #25451	; 0x636b
   2bd64:	movt	r2, #24420	; 0x5f64
   2bd68:	movt	r3, #29793	; 0x7461
   2bd6c:	eor	r0, r0, r2
   2bd70:	ldrb	r2, [lr]
   2bd74:	orr	r2, ip, r2, lsl #24
   2bd78:	eor	r2, r2, r3
   2bd7c:	orrs	r0, r0, r2
   2bd80:	bne	2be14 <main@@Base+0x15d8c>
   2bd84:	add	r4, r1, #16
   2bd88:	mov	r3, #8
   2bd8c:	sub	r0, r8, r4
   2bd90:	cmp	r0, #8
   2bd94:	movcc	r3, r0
   2bd98:	sub	r2, r3, #3
   2bd9c:	cmp	r2, #6
   2bda0:	bcs	2bee4 <main@@Base+0x15e5c>
   2bda4:	ldrb	r2, [r1, #18]
   2bda8:	ldr	r7, [sp, #8]
   2bdac:	lsl	r2, r2, #8
   2bdb0:	ldrb	r3, [r1, #17]
   2bdb4:	orr	r2, r2, r3, lsl #16
   2bdb8:	ldrb	r3, [r4]
   2bdbc:	bic	r2, r2, #255	; 0xff
   2bdc0:	orr	r2, r2, r3, lsl #24
   2bdc4:	movw	r3, #25856	; 0x6500
   2bdc8:	movt	r3, #24935	; 0x6167
   2bdcc:	teq	r2, r3
   2bdd0:	bne	2c044 <main@@Base+0x15fbc>
   2bdd4:	cmp	r0, #4
   2bdd8:	blt	2c044 <main@@Base+0x15fbc>
   2bddc:	mov	r2, r1
   2bde0:	ldr	r3, [r9, #12]
   2bde4:	ldrb	r0, [r2, #19]!
   2bde8:	cmp	r3, #0
   2bdec:	beq	2bf00 <main@@Base+0x15e78>
   2bdf0:	cmp	r0, #33	; 0x21
   2bdf4:	bcc	2be00 <main@@Base+0x15d78>
   2bdf8:	cmp	r0, #58	; 0x3a
   2bdfc:	bne	2c044 <main@@Base+0x15fbc>
   2be00:	mov	r0, #0
   2be04:	str	r0, [r9, #12]
   2be08:	b	2bf0c <main@@Base+0x15e84>
   2be0c:	mov	r0, r9
   2be10:	b	2be1c <main@@Base+0x15d94>
   2be14:	mov	r0, r9
   2be18:	mov	r1, lr
   2be1c:	mov	r2, r8
   2be20:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   2be24:	ldr	r7, [sp, #8]
   2be28:	mov	r4, r0
   2be2c:	sub	r0, r8, r4
   2be30:	cmp	r0, #2
   2be34:	blt	2be60 <main@@Base+0x15dd8>
   2be38:	ldrb	r0, [r4]
   2be3c:	cmp	r0, #32
   2be40:	bls	2be4c <main@@Base+0x15dc4>
   2be44:	mov	r2, r4
   2be48:	b	2be74 <main@@Base+0x15dec>
   2be4c:	bne	2be60 <main@@Base+0x15dd8>
   2be50:	mov	r2, r4
   2be54:	ldrb	r0, [r2, #1]!
   2be58:	cmp	r0, #32
   2be5c:	bhi	2be74 <main@@Base+0x15dec>
   2be60:	mov	r0, r9
   2be64:	mov	r1, r4
   2be68:	mov	r2, r8
   2be6c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2be70:	mov	r2, r0
   2be74:	cmp	r2, r8
   2be78:	beq	2c114 <main@@Base+0x1608c>
   2be7c:	ldrb	r0, [r2]
   2be80:	cmp	r0, #44	; 0x2c
   2be84:	bne	2c11c <main@@Base+0x16094>
   2be88:	add	r1, r2, #1
   2be8c:	sub	r0, r8, r1
   2be90:	cmp	r0, #2
   2be94:	blt	2bebc <main@@Base+0x15e34>
   2be98:	ldrb	r0, [r1]
   2be9c:	cmp	r0, #32
   2bea0:	bls	2beac <main@@Base+0x15e24>
   2bea4:	mov	r2, r1
   2bea8:	b	2becc <main@@Base+0x15e44>
   2beac:	bne	2bebc <main@@Base+0x15e34>
   2beb0:	ldrb	r0, [r2, #2]!
   2beb4:	cmp	r0, #32
   2beb8:	bhi	2becc <main@@Base+0x15e44>
   2bebc:	mov	r0, r9
   2bec0:	mov	r2, r8
   2bec4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2bec8:	mov	r2, r0
   2becc:	cmp	r2, r8
   2bed0:	beq	2c148 <main@@Base+0x160c0>
   2bed4:	ldrb	r0, [r2]
   2bed8:	cmp	r0, #125	; 0x7d
   2bedc:	bne	2bb80 <main@@Base+0x15af8>
   2bee0:	b	2c124 <main@@Base+0x1609c>
   2bee4:	ldr	r7, [sp, #8]
   2bee8:	mov	r2, #0
   2beec:	cmp	r3, #1
   2bef0:	beq	2bdb8 <main@@Base+0x15d30>
   2bef4:	cmp	r3, #2
   2bef8:	beq	2bdb0 <main@@Base+0x15d28>
   2befc:	b	2c044 <main@@Base+0x15fbc>
   2bf00:	cmp	r0, #34	; 0x22
   2bf04:	bne	2c044 <main@@Base+0x15fbc>
   2bf08:	add	r2, r1, #20
   2bf0c:	sub	r0, r8, r2
   2bf10:	cmp	r0, #2
   2bf14:	blt	2bf40 <main@@Base+0x15eb8>
   2bf18:	ldrb	r0, [r2]
   2bf1c:	cmp	r0, #32
   2bf20:	bls	2bf2c <main@@Base+0x15ea4>
   2bf24:	mov	r6, r2
   2bf28:	b	2bf54 <main@@Base+0x15ecc>
   2bf2c:	bne	2bf40 <main@@Base+0x15eb8>
   2bf30:	mov	r6, r2
   2bf34:	ldrb	r0, [r6, #1]!
   2bf38:	cmp	r0, #32
   2bf3c:	bhi	2bf54 <main@@Base+0x15ecc>
   2bf40:	mov	r1, r2
   2bf44:	mov	r0, r9
   2bf48:	mov	r2, r8
   2bf4c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2bf50:	mov	r6, r0
   2bf54:	cmp	r6, r8
   2bf58:	beq	2bf8c <main@@Base+0x15f04>
   2bf5c:	ldrb	r0, [r6]
   2bf60:	cmp	r0, #58	; 0x3a
   2bf64:	bne	2bf8c <main@@Base+0x15f04>
   2bf68:	add	r1, r6, #1
   2bf6c:	sub	r0, r8, r1
   2bf70:	cmp	r0, #2
   2bf74:	blt	2bfb4 <main@@Base+0x15f2c>
   2bf78:	ldrb	r0, [r1]
   2bf7c:	cmp	r0, #32
   2bf80:	bls	2bfa4 <main@@Base+0x15f1c>
   2bf84:	mov	r6, r1
   2bf88:	b	2bfc4 <main@@Base+0x15f3c>
   2bf8c:	mov	r0, r9
   2bf90:	mov	r1, r6
   2bf94:	mov	r2, r8
   2bf98:	mov	r3, #4
   2bf9c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2bfa0:	b	2bfc0 <main@@Base+0x15f38>
   2bfa4:	bne	2bfb4 <main@@Base+0x15f2c>
   2bfa8:	ldrb	r0, [r6, #2]!
   2bfac:	cmp	r0, #32
   2bfb0:	bhi	2bfc4 <main@@Base+0x15f3c>
   2bfb4:	mov	r0, r9
   2bfb8:	mov	r2, r8
   2bfbc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2bfc0:	mov	r6, r0
   2bfc4:	cmp	r4, r6
   2bfc8:	beq	2c044 <main@@Base+0x15fbc>
   2bfcc:	mov	r5, #0
   2bfd0:	cmp	r6, r8
   2bfd4:	str	r5, [sp, #28]
   2bfd8:	str	r5, [sp, #24]
   2bfdc:	str	r5, [sp, #16]
   2bfe0:	str	r5, [sp, #20]
   2bfe4:	beq	2c058 <main@@Base+0x15fd0>
   2bfe8:	add	r0, sp, #24
   2bfec:	mov	r1, r6
   2bff0:	mov	r2, r8
   2bff4:	add	r3, sp, #20
   2bff8:	str	r0, [sp]
   2bffc:	mov	r0, r9
   2c000:	bl	352ec <flatcc_json_parser_integer@@Base>
   2c004:	cmp	r0, r6
   2c008:	beq	2c060 <main@@Base+0x15fd8>
   2c00c:	ldr	r2, [sp, #20]
   2c010:	mov	r4, r0
   2c014:	ldr	r0, [sp, #24]
   2c018:	ldr	r1, [sp, #28]
   2c01c:	cmp	r2, #0
   2c020:	beq	2c068 <main@@Base+0x15fe0>
   2c024:	subs	r2, r0, #-2147483647	; 0x80000001
   2c028:	sbcs	r1, r1, #0
   2c02c:	bcc	2c090 <main@@Base+0x16008>
   2c030:	mov	r0, r9
   2c034:	mov	r1, r4
   2c038:	mov	r2, r8
   2c03c:	mov	r3, #8
   2c040:	b	2c084 <main@@Base+0x15ffc>
   2c044:	mov	r0, r9
   2c048:	mov	r1, r4
   2c04c:	mov	r2, r8
   2c050:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   2c054:	b	2be28 <main@@Base+0x15da0>
   2c058:	mov	r4, r8
   2c05c:	b	2c0a0 <main@@Base+0x16018>
   2c060:	mov	r4, r6
   2c064:	b	2c0a0 <main@@Base+0x16018>
   2c068:	subs	r2, r0, #-2147483648	; 0x80000000
   2c06c:	sbcs	r1, r1, #0
   2c070:	bcc	2c098 <main@@Base+0x16010>
   2c074:	mov	r0, r9
   2c078:	mov	r1, r4
   2c07c:	mov	r2, r8
   2c080:	mov	r3, #7
   2c084:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2c088:	mov	r4, r0
   2c08c:	b	2c0a0 <main@@Base+0x16018>
   2c090:	rsb	r5, r0, #0
   2c094:	b	2c09c <main@@Base+0x16014>
   2c098:	mov	r5, r0
   2c09c:	str	r5, [sp, #16]
   2c0a0:	cmp	r6, r4
   2c0a4:	bne	2c0dc <main@@Base+0x16054>
   2c0a8:	movw	r3, #45808	; 0xb2f0
   2c0ac:	add	r0, sp, #16
   2c0b0:	mov	r1, r6
   2c0b4:	mov	r2, r8
   2c0b8:	movt	r3, #5
   2c0bc:	str	r0, [sp]
   2c0c0:	mov	r0, r9
   2c0c4:	bl	24bc4 <main@@Base+0xeb3c>
   2c0c8:	mov	r4, r0
   2c0cc:	cmp	r0, r6
   2c0d0:	cmpne	r4, r8
   2c0d4:	beq	2c1d4 <main@@Base+0x1614c>
   2c0d8:	ldr	r5, [sp, #16]
   2c0dc:	cmp	r5, #0
   2c0e0:	bne	2c0f0 <main@@Base+0x16068>
   2c0e4:	ldrb	r0, [r9, #8]
   2c0e8:	tst	r0, #2
   2c0ec:	beq	2be2c <main@@Base+0x15da4>
   2c0f0:	ldr	r0, [r9]
   2c0f4:	mov	r1, #0
   2c0f8:	mov	r2, #4
   2c0fc:	mov	r3, #4
   2c100:	bl	30824 <flatcc_builder_table_add@@Base>
   2c104:	cmp	r0, #0
   2c108:	beq	2c1d4 <main@@Base+0x1614c>
   2c10c:	str	r5, [r0]
   2c110:	b	2be2c <main@@Base+0x15da4>
   2c114:	mov	r4, r8
   2c118:	b	2b59c <main@@Base+0x15514>
   2c11c:	cmp	r0, #125	; 0x7d
   2c120:	bne	2c18c <main@@Base+0x16104>
   2c124:	add	r1, r2, #1
   2c128:	sub	r0, r8, r1
   2c12c:	cmp	r0, #2
   2c130:	blt	2c1b4 <main@@Base+0x1612c>
   2c134:	ldrb	r0, [r1]
   2c138:	cmp	r0, #32
   2c13c:	bls	2c1a0 <main@@Base+0x16118>
   2c140:	mov	r4, r1
   2c144:	b	2b59c <main@@Base+0x15514>
   2c148:	mov	r0, r9
   2c14c:	mov	r1, r8
   2c150:	b	2c194 <main@@Base+0x1610c>
   2c154:	mov	r0, r9
   2c158:	mov	r1, r2
   2c15c:	mov	r2, r8
   2c160:	mov	r3, #10
   2c164:	b	2b548 <main@@Base+0x154c0>
   2c168:	bne	2c17c <main@@Base+0x160f4>
   2c16c:	ldrb	r0, [r2, #2]!
   2c170:	mov	r4, r2
   2c174:	cmp	r0, #32
   2c178:	bhi	2b550 <main@@Base+0x154c8>
   2c17c:	mov	r0, r9
   2c180:	mov	r2, r8
   2c184:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2c188:	b	2b54c <main@@Base+0x154c4>
   2c18c:	mov	r0, r9
   2c190:	mov	r1, r2
   2c194:	mov	r2, r8
   2c198:	mov	r3, #10
   2c19c:	b	2b594 <main@@Base+0x1550c>
   2c1a0:	bne	2c1b4 <main@@Base+0x1612c>
   2c1a4:	ldrb	r0, [r2, #2]!
   2c1a8:	mov	r4, r2
   2c1ac:	cmp	r0, #32
   2c1b0:	bhi	2b59c <main@@Base+0x15514>
   2c1b4:	mov	r0, r9
   2c1b8:	mov	r2, r8
   2c1bc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2c1c0:	b	2b598 <main@@Base+0x15510>
   2c1c4:	mov	r0, r9
   2c1c8:	mov	r2, r8
   2c1cc:	mov	r3, #33	; 0x21
   2c1d0:	b	2b548 <main@@Base+0x154c0>
   2c1d4:	ldr	r7, [sp, #8]
   2c1d8:	b	2b5a8 <main@@Base+0x15520>
   2c1dc:	add	r0, r0, #1
   2c1e0:	uxtb	r1, r0
   2c1e4:	cmp	r1, #12
   2c1e8:	movhi	r0, #0
   2c1ec:	bxhi	lr
   2c1f0:	movw	r1, #28012	; 0x6d6c
   2c1f4:	sxtb	r0, r0
   2c1f8:	movt	r1, #4
   2c1fc:	ldr	r0, [r1, r0, lsl #2]
   2c200:	bx	lr
   2c204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c208:	add	fp, sp, #28
   2c20c:	sub	sp, sp, #36	; 0x24
   2c210:	mov	r9, r0
   2c214:	mov	r0, #0
   2c218:	mov	sl, r2
   2c21c:	mov	r6, r1
   2c220:	mov	r1, #4
   2c224:	mov	r2, #4
   2c228:	str	r3, [sp, #12]
   2c22c:	str	r0, [r3]
   2c230:	ldr	r0, [r9]
   2c234:	bl	2e89c <flatcc_builder_start_struct@@Base>
   2c238:	cmp	r0, #0
   2c23c:	beq	2c2c0 <main@@Base+0x16238>
   2c240:	cmp	r6, sl
   2c244:	beq	2c27c <main@@Base+0x161f4>
   2c248:	ldrb	r1, [r6]
   2c24c:	cmp	r1, #123	; 0x7b
   2c250:	bne	2c27c <main@@Base+0x161f4>
   2c254:	add	r1, r6, #1
   2c258:	str	r0, [sp, #8]
   2c25c:	sub	r0, sl, r1
   2c260:	cmp	r0, #2
   2c264:	blt	2c2f4 <main@@Base+0x1626c>
   2c268:	ldrb	r0, [r1]
   2c26c:	cmp	r0, #32
   2c270:	bls	2c2e4 <main@@Base+0x1625c>
   2c274:	mov	r6, r1
   2c278:	b	2c304 <main@@Base+0x1627c>
   2c27c:	mov	r0, r9
   2c280:	mov	r1, r6
   2c284:	mov	r2, sl
   2c288:	mov	r3, #21
   2c28c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2c290:	mov	r6, r0
   2c294:	cmp	r6, sl
   2c298:	mov	r1, sl
   2c29c:	beq	2c2c4 <main@@Base+0x1623c>
   2c2a0:	ldr	r0, [r9]
   2c2a4:	bl	2e93c <flatcc_builder_end_struct@@Base>
   2c2a8:	ldr	r1, [sp, #12]
   2c2ac:	cmp	r0, #0
   2c2b0:	str	r0, [r1]
   2c2b4:	mov	r1, r6
   2c2b8:	bne	2c2d8 <main@@Base+0x16250>
   2c2bc:	b	2c2c4 <main@@Base+0x1623c>
   2c2c0:	mov	r1, r6
   2c2c4:	mov	r0, r9
   2c2c8:	mov	r2, sl
   2c2cc:	mov	r3, #33	; 0x21
   2c2d0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2c2d4:	mov	r6, r0
   2c2d8:	mov	r0, r6
   2c2dc:	sub	sp, fp, #28
   2c2e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c2e4:	bne	2c2f4 <main@@Base+0x1626c>
   2c2e8:	ldrb	r0, [r6, #2]!
   2c2ec:	cmp	r0, #32
   2c2f0:	bhi	2c304 <main@@Base+0x1627c>
   2c2f4:	mov	r0, r9
   2c2f8:	mov	r2, sl
   2c2fc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2c300:	mov	r6, r0
   2c304:	cmp	r6, sl
   2c308:	mov	r2, sl
   2c30c:	beq	2c348 <main@@Base+0x162c0>
   2c310:	ldrb	r0, [r6]
   2c314:	cmp	r0, #125	; 0x7d
   2c318:	bne	2c344 <main@@Base+0x162bc>
   2c31c:	add	r1, r6, #1
   2c320:	sub	r0, sl, r1
   2c324:	cmp	r0, #2
   2c328:	blt	2c804 <main@@Base+0x1677c>
   2c32c:	ldrb	r0, [r1]
   2c330:	cmp	r0, #32
   2c334:	bhi	2c7c8 <main@@Base+0x16740>
   2c338:	bne	2c804 <main@@Base+0x1677c>
   2c33c:	ldrb	r0, [r6, #2]!
   2c340:	b	2c7fc <main@@Base+0x16774>
   2c344:	mov	r2, r6
   2c348:	cmp	r2, sl
   2c34c:	mov	r1, sl
   2c350:	beq	2c39c <main@@Base+0x16314>
   2c354:	ldrb	r0, [r2]
   2c358:	cmp	r0, #46	; 0x2e
   2c35c:	beq	2c374 <main@@Base+0x162ec>
   2c360:	cmp	r0, #34	; 0x22
   2c364:	bne	2c390 <main@@Base+0x16308>
   2c368:	mov	r0, #0
   2c36c:	add	r1, r2, #1
   2c370:	b	2c398 <main@@Base+0x16310>
   2c374:	mov	r1, r2
   2c378:	mov	r0, r9
   2c37c:	mov	r2, sl
   2c380:	mov	r3, #5
   2c384:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2c388:	mov	r1, r0
   2c38c:	b	2c39c <main@@Base+0x16314>
   2c390:	mov	r0, #1
   2c394:	mov	r1, r2
   2c398:	str	r0, [r9, #12]
   2c39c:	sub	r0, sl, r1
   2c3a0:	mov	r2, #8
   2c3a4:	cmp	r0, #8
   2c3a8:	movcs	r0, r2
   2c3ac:	sub	r6, r0, #1
   2c3b0:	cmp	r6, #7
   2c3b4:	bhi	2c4ec <main@@Base+0x16464>
   2c3b8:	add	r0, pc, #32
   2c3bc:	mov	r8, #0
   2c3c0:	mov	ip, #0
   2c3c4:	mov	lr, #0
   2c3c8:	mov	r7, #0
   2c3cc:	mov	r3, #0
   2c3d0:	mov	r5, #0
   2c3d4:	mov	r2, #0
   2c3d8:	mov	r4, #0
   2c3dc:	ldr	pc, [r0, r6, lsl #2]
   2c3e0:	andeq	ip, r2, r4, asr #8
   2c3e4:	andeq	ip, r2, ip, lsr r4
   2c3e8:	andeq	ip, r2, r4, lsr r4
   2c3ec:	andeq	ip, r2, ip, lsr #8
   2c3f0:	andeq	ip, r2, r0, lsr #8
   2c3f4:	andeq	ip, r2, r4, lsl r4
   2c3f8:	andeq	ip, r2, r4, lsl #8
   2c3fc:	andeq	ip, r2, r0, lsl #8
   2c400:	ldrb	ip, [r1, #7]
   2c404:	ldrb	r0, [r1, #6]
   2c408:	mov	lr, r8
   2c40c:	orr	r0, ip, r0, lsl #8
   2c410:	mov	r8, r0
   2c414:	ldrb	r0, [r1, #5]
   2c418:	mov	r7, lr
   2c41c:	orr	r8, r8, r0, lsl #16
   2c420:	ldrb	r0, [r1, #4]
   2c424:	mov	r3, r7
   2c428:	orr	r8, r8, r0, lsl #24
   2c42c:	ldrb	r0, [r1, #3]
   2c430:	orr	r5, r0, r3
   2c434:	ldrb	r0, [r1, #2]
   2c438:	orr	r2, r5, r0, lsl #8
   2c43c:	ldrb	r0, [r1, #1]
   2c440:	orr	r4, r2, r0, lsl #16
   2c444:	ldrb	r2, [r1]
   2c448:	movw	r0, #29285	; 0x7265
   2c44c:	movw	r3, #28523	; 0x6f6b
   2c450:	movt	r0, #29535	; 0x735f
   2c454:	movt	r3, #25199	; 0x626f
   2c458:	eor	r0, r8, r0
   2c45c:	orr	r2, r4, r2, lsl #24
   2c460:	eor	r2, r2, r3
   2c464:	orrs	r0, r0, r2
   2c468:	bne	2c4ec <main@@Base+0x16464>
   2c46c:	add	r8, r1, #8
   2c470:	mov	r3, #8
   2c474:	sub	r0, sl, r8
   2c478:	cmp	r0, #8
   2c47c:	movcc	r3, r0
   2c480:	sub	r2, r3, #2
   2c484:	cmp	r2, #7
   2c488:	bcs	2c4f4 <main@@Base+0x1646c>
   2c48c:	ldrb	r2, [r1, #9]
   2c490:	lsl	r3, r2, #16
   2c494:	mov	r2, #0
   2c498:	ldrb	r7, [r8]
   2c49c:	orr	r3, r3, r7, lsl #24
   2c4a0:	movw	r7, #0
   2c4a4:	movt	r7, #24932	; 0x6164
   2c4a8:	eor	r3, r3, r7
   2c4ac:	orrs	r2, r2, r3
   2c4b0:	bne	2c648 <main@@Base+0x165c0>
   2c4b4:	cmp	r0, #3
   2c4b8:	blt	2c648 <main@@Base+0x165c0>
   2c4bc:	mov	r2, r1
   2c4c0:	ldr	r3, [r9, #12]
   2c4c4:	ldrb	r0, [r2, #10]!
   2c4c8:	cmp	r3, #0
   2c4cc:	beq	2c508 <main@@Base+0x16480>
   2c4d0:	cmp	r0, #33	; 0x21
   2c4d4:	bcc	2c4e0 <main@@Base+0x16458>
   2c4d8:	cmp	r0, #58	; 0x3a
   2c4dc:	bne	2c648 <main@@Base+0x165c0>
   2c4e0:	mov	r0, #0
   2c4e4:	str	r0, [r9, #12]
   2c4e8:	b	2c514 <main@@Base+0x1648c>
   2c4ec:	mov	r0, r9
   2c4f0:	b	2c650 <main@@Base+0x165c8>
   2c4f4:	cmp	r3, #1
   2c4f8:	mov	r2, #0
   2c4fc:	mov	r3, #0
   2c500:	beq	2c498 <main@@Base+0x16410>
   2c504:	b	2c648 <main@@Base+0x165c0>
   2c508:	cmp	r0, #34	; 0x22
   2c50c:	bne	2c648 <main@@Base+0x165c0>
   2c510:	add	r2, r1, #11
   2c514:	sub	r0, sl, r2
   2c518:	cmp	r0, #2
   2c51c:	blt	2c548 <main@@Base+0x164c0>
   2c520:	ldrb	r0, [r2]
   2c524:	cmp	r0, #32
   2c528:	bls	2c534 <main@@Base+0x164ac>
   2c52c:	mov	r7, r2
   2c530:	b	2c55c <main@@Base+0x164d4>
   2c534:	bne	2c548 <main@@Base+0x164c0>
   2c538:	mov	r7, r2
   2c53c:	ldrb	r0, [r7, #1]!
   2c540:	cmp	r0, #32
   2c544:	bhi	2c55c <main@@Base+0x164d4>
   2c548:	mov	r1, r2
   2c54c:	mov	r0, r9
   2c550:	mov	r2, sl
   2c554:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2c558:	mov	r7, r0
   2c55c:	cmp	r7, sl
   2c560:	beq	2c594 <main@@Base+0x1650c>
   2c564:	ldrb	r0, [r7]
   2c568:	cmp	r0, #58	; 0x3a
   2c56c:	bne	2c594 <main@@Base+0x1650c>
   2c570:	add	r1, r7, #1
   2c574:	sub	r0, sl, r1
   2c578:	cmp	r0, #2
   2c57c:	blt	2c5bc <main@@Base+0x16534>
   2c580:	ldrb	r0, [r1]
   2c584:	cmp	r0, #32
   2c588:	bls	2c5ac <main@@Base+0x16524>
   2c58c:	mov	r7, r1
   2c590:	b	2c5cc <main@@Base+0x16544>
   2c594:	mov	r0, r9
   2c598:	mov	r1, r7
   2c59c:	mov	r2, sl
   2c5a0:	mov	r3, #4
   2c5a4:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2c5a8:	b	2c5c8 <main@@Base+0x16540>
   2c5ac:	bne	2c5bc <main@@Base+0x16534>
   2c5b0:	ldrb	r0, [r7, #2]!
   2c5b4:	cmp	r0, #32
   2c5b8:	bhi	2c5cc <main@@Base+0x16544>
   2c5bc:	mov	r0, r9
   2c5c0:	mov	r2, sl
   2c5c4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2c5c8:	mov	r7, r0
   2c5cc:	cmp	r8, r7
   2c5d0:	beq	2c648 <main@@Base+0x165c0>
   2c5d4:	mov	r6, #0
   2c5d8:	cmp	r7, sl
   2c5dc:	str	r6, [sp, #28]
   2c5e0:	str	r6, [sp, #24]
   2c5e4:	str	r6, [sp, #16]
   2c5e8:	str	r6, [sp, #20]
   2c5ec:	beq	2c710 <main@@Base+0x16688>
   2c5f0:	add	r0, sp, #24
   2c5f4:	mov	r1, r7
   2c5f8:	mov	r2, sl
   2c5fc:	add	r3, sp, #20
   2c600:	str	r0, [sp]
   2c604:	mov	r0, r9
   2c608:	bl	352ec <flatcc_json_parser_integer@@Base>
   2c60c:	cmp	r0, r7
   2c610:	beq	2c718 <main@@Base+0x16690>
   2c614:	ldr	r3, [sp, #20]
   2c618:	mov	r1, r0
   2c61c:	ldr	r0, [sp, #24]
   2c620:	ldr	r2, [sp, #28]
   2c624:	cmp	r3, #0
   2c628:	beq	2c720 <main@@Base+0x16698>
   2c62c:	subs	r3, r0, #-2147483647	; 0x80000001
   2c630:	sbcs	r2, r2, #0
   2c634:	bcc	2c744 <main@@Base+0x166bc>
   2c638:	mov	r0, r9
   2c63c:	mov	r2, sl
   2c640:	mov	r3, #8
   2c644:	b	2c738 <main@@Base+0x166b0>
   2c648:	mov	r0, r9
   2c64c:	mov	r1, r8
   2c650:	mov	r2, sl
   2c654:	bl	33b20 <flatcc_json_parser_unmatched_symbol@@Base>
   2c658:	mov	r1, r0
   2c65c:	sub	r0, sl, r1
   2c660:	cmp	r0, #2
   2c664:	blt	2c690 <main@@Base+0x16608>
   2c668:	ldrb	r0, [r1]
   2c66c:	cmp	r0, #32
   2c670:	bls	2c67c <main@@Base+0x165f4>
   2c674:	mov	r2, r1
   2c678:	b	2c6a0 <main@@Base+0x16618>
   2c67c:	bne	2c690 <main@@Base+0x16608>
   2c680:	mov	r2, r1
   2c684:	ldrb	r0, [r2, #1]!
   2c688:	cmp	r0, #32
   2c68c:	bhi	2c6a0 <main@@Base+0x16618>
   2c690:	mov	r0, r9
   2c694:	mov	r2, sl
   2c698:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2c69c:	mov	r2, r0
   2c6a0:	cmp	r2, sl
   2c6a4:	beq	2c79c <main@@Base+0x16714>
   2c6a8:	ldrb	r0, [r2]
   2c6ac:	cmp	r0, #44	; 0x2c
   2c6b0:	bne	2c7a4 <main@@Base+0x1671c>
   2c6b4:	add	r1, r2, #1
   2c6b8:	sub	r0, sl, r1
   2c6bc:	cmp	r0, #2
   2c6c0:	blt	2c6e8 <main@@Base+0x16660>
   2c6c4:	ldrb	r0, [r1]
   2c6c8:	cmp	r0, #32
   2c6cc:	bls	2c6d8 <main@@Base+0x16650>
   2c6d0:	mov	r2, r1
   2c6d4:	b	2c6f8 <main@@Base+0x16670>
   2c6d8:	bne	2c6e8 <main@@Base+0x16660>
   2c6dc:	ldrb	r0, [r2, #2]!
   2c6e0:	cmp	r0, #32
   2c6e4:	bhi	2c6f8 <main@@Base+0x16670>
   2c6e8:	mov	r0, r9
   2c6ec:	mov	r2, sl
   2c6f0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2c6f4:	mov	r2, r0
   2c6f8:	cmp	r2, sl
   2c6fc:	beq	2c7d0 <main@@Base+0x16748>
   2c700:	ldrb	r0, [r2]
   2c704:	cmp	r0, #125	; 0x7d
   2c708:	bne	2c348 <main@@Base+0x162c0>
   2c70c:	b	2c7ac <main@@Base+0x16724>
   2c710:	mov	r1, sl
   2c714:	b	2c754 <main@@Base+0x166cc>
   2c718:	mov	r1, r7
   2c71c:	b	2c754 <main@@Base+0x166cc>
   2c720:	subs	r3, r0, #-2147483648	; 0x80000000
   2c724:	sbcs	r2, r2, #0
   2c728:	bcc	2c74c <main@@Base+0x166c4>
   2c72c:	mov	r0, r9
   2c730:	mov	r2, sl
   2c734:	mov	r3, #7
   2c738:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2c73c:	mov	r1, r0
   2c740:	b	2c754 <main@@Base+0x166cc>
   2c744:	rsb	r6, r0, #0
   2c748:	b	2c750 <main@@Base+0x166c8>
   2c74c:	mov	r6, r0
   2c750:	str	r6, [sp, #16]
   2c754:	cmp	r7, r1
   2c758:	bne	2c790 <main@@Base+0x16708>
   2c75c:	movw	r3, #45832	; 0xb308
   2c760:	add	r0, sp, #16
   2c764:	mov	r1, r7
   2c768:	mov	r2, sl
   2c76c:	movt	r3, #5
   2c770:	str	r0, [sp]
   2c774:	mov	r0, r9
   2c778:	bl	24bc4 <main@@Base+0xeb3c>
   2c77c:	mov	r1, r0
   2c780:	cmp	r0, r7
   2c784:	cmpne	r1, sl
   2c788:	beq	2c814 <main@@Base+0x1678c>
   2c78c:	ldr	r6, [sp, #16]
   2c790:	ldr	r0, [sp, #8]
   2c794:	str	r6, [r0]
   2c798:	b	2c65c <main@@Base+0x165d4>
   2c79c:	mov	r1, sl
   2c7a0:	b	2c2c4 <main@@Base+0x1623c>
   2c7a4:	cmp	r0, #125	; 0x7d
   2c7a8:	bne	2c7dc <main@@Base+0x16754>
   2c7ac:	add	r1, r2, #1
   2c7b0:	sub	r0, sl, r1
   2c7b4:	cmp	r0, #2
   2c7b8:	blt	2c804 <main@@Base+0x1677c>
   2c7bc:	ldrb	r0, [r1]
   2c7c0:	cmp	r0, #32
   2c7c4:	bls	2c7f0 <main@@Base+0x16768>
   2c7c8:	mov	r6, r1
   2c7cc:	b	2c294 <main@@Base+0x1620c>
   2c7d0:	mov	r0, r9
   2c7d4:	mov	r1, sl
   2c7d8:	b	2c7e4 <main@@Base+0x1675c>
   2c7dc:	mov	r0, r9
   2c7e0:	mov	r1, r2
   2c7e4:	mov	r2, sl
   2c7e8:	mov	r3, #10
   2c7ec:	b	2c28c <main@@Base+0x16204>
   2c7f0:	bne	2c804 <main@@Base+0x1677c>
   2c7f4:	ldrb	r0, [r2, #2]!
   2c7f8:	mov	r6, r2
   2c7fc:	cmp	r0, #32
   2c800:	bhi	2c294 <main@@Base+0x1620c>
   2c804:	mov	r0, r9
   2c808:	mov	r2, sl
   2c80c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2c810:	b	2c290 <main@@Base+0x16208>
   2c814:	mov	r0, r9
   2c818:	mov	r2, sl
   2c81c:	mov	r3, #33	; 0x21
   2c820:	b	2c28c <main@@Base+0x16204>
   2c824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c828:	add	fp, sp, #28
   2c82c:	sub	sp, sp, #44	; 0x2c
   2c830:	mov	r6, r2
   2c834:	ldr	r2, [fp, #8]
   2c838:	mov	r5, r0
   2c83c:	mov	r0, #0
   2c840:	mov	r8, r3
   2c844:	cmp	r1, r6
   2c848:	strh	r0, [r2]
   2c84c:	beq	2c890 <main@@Base+0x16808>
   2c850:	ldrb	r0, [r1]
   2c854:	cmp	r0, #46	; 0x2e
   2c858:	beq	2c870 <main@@Base+0x167e8>
   2c85c:	cmp	r0, #34	; 0x22
   2c860:	bne	2c888 <main@@Base+0x16800>
   2c864:	mov	r0, #0
   2c868:	add	r1, r1, #1
   2c86c:	b	2c88c <main@@Base+0x16804>
   2c870:	mov	r0, r5
   2c874:	mov	r2, r6
   2c878:	mov	r3, #5
   2c87c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2c880:	mov	r1, r0
   2c884:	b	2c890 <main@@Base+0x16808>
   2c888:	mov	r0, #1
   2c88c:	str	r0, [r5, #12]
   2c890:	ldr	r0, [r5, #12]
   2c894:	cmp	r0, #0
   2c898:	beq	2c8a4 <main@@Base+0x1681c>
   2c89c:	mov	r7, r1
   2c8a0:	b	2c8e0 <main@@Base+0x16858>
   2c8a4:	sub	r0, r6, r1
   2c8a8:	cmp	r0, #2
   2c8ac:	blt	2c8d0 <main@@Base+0x16848>
   2c8b0:	ldrb	r0, [r1]
   2c8b4:	cmp	r0, #32
   2c8b8:	bhi	2c89c <main@@Base+0x16814>
   2c8bc:	bne	2c8d0 <main@@Base+0x16848>
   2c8c0:	mov	r7, r1
   2c8c4:	ldrb	r0, [r7, #1]!
   2c8c8:	cmp	r0, #32
   2c8cc:	bhi	2c8e0 <main@@Base+0x16858>
   2c8d0:	mov	r0, r5
   2c8d4:	mov	r2, r6
   2c8d8:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   2c8dc:	mov	r7, r0
   2c8e0:	cmp	r7, r6
   2c8e4:	beq	2c9e8 <main@@Base+0x16960>
   2c8e8:	add	r0, r8, #4
   2c8ec:	mov	r1, #0
   2c8f0:	add	sl, sp, #32
   2c8f4:	add	r9, sp, #28
   2c8f8:	str	r8, [sp, #16]
   2c8fc:	str	r1, [sp, #20]
   2c900:	str	r0, [sp, #12]
   2c904:	ldr	r4, [r8]
   2c908:	mov	r8, r0
   2c90c:	add	r0, sp, #24
   2c910:	mov	r1, r7
   2c914:	mov	r2, r6
   2c918:	mov	r3, r9
   2c91c:	str	sl, [sp]
   2c920:	str	r0, [sp, #4]
   2c924:	mov	r0, r5
   2c928:	blx	r4
   2c92c:	cmp	r0, r6
   2c930:	beq	2c9e8 <main@@Base+0x16960>
   2c934:	mov	r4, r0
   2c938:	cmp	r0, r7
   2c93c:	bne	2c950 <main@@Base+0x168c8>
   2c940:	ldr	r4, [r8], #4
   2c944:	cmp	r4, #0
   2c948:	bne	2c90c <main@@Base+0x16884>
   2c94c:	b	2c9f0 <main@@Base+0x16968>
   2c950:	ldr	r0, [sp, #28]
   2c954:	cmp	r0, #0
   2c958:	beq	2c978 <main@@Base+0x168f0>
   2c95c:	mov	r0, r5
   2c960:	mov	r1, r4
   2c964:	mov	r2, r6
   2c968:	mov	r3, #8
   2c96c:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2c970:	ldr	r8, [sp, #16]
   2c974:	b	2c9b0 <main@@Base+0x16928>
   2c978:	ldr	r0, [sp, #32]
   2c97c:	ldr	r1, [sp, #36]	; 0x24
   2c980:	ldr	r8, [sp, #16]
   2c984:	subs	r2, r0, #65536	; 0x10000
   2c988:	sbcs	r1, r1, #0
   2c98c:	bcc	2c9a8 <main@@Base+0x16920>
   2c990:	mov	r0, r5
   2c994:	mov	r1, r4
   2c998:	mov	r2, r6
   2c99c:	mov	r3, #7
   2c9a0:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2c9a4:	b	2c9b0 <main@@Base+0x16928>
   2c9a8:	str	r0, [sp, #20]
   2c9ac:	mov	r0, r4
   2c9b0:	cmp	r0, r6
   2c9b4:	beq	2c9e8 <main@@Base+0x16960>
   2c9b8:	ldr	r0, [fp, #8]
   2c9bc:	ldr	r2, [sp, #20]
   2c9c0:	mov	r7, r4
   2c9c4:	mov	r1, r0
   2c9c8:	ldrh	r0, [r0]
   2c9cc:	add	r0, r0, r2
   2c9d0:	strh	r0, [r1]
   2c9d4:	ldr	r0, [sp, #24]
   2c9d8:	cmp	r0, #0
   2c9dc:	ldr	r0, [sp, #12]
   2c9e0:	bne	2c904 <main@@Base+0x1687c>
   2c9e4:	b	2ca08 <main@@Base+0x16980>
   2c9e8:	mov	r4, r6
   2c9ec:	b	2ca08 <main@@Base+0x16980>
   2c9f0:	mov	r0, r5
   2c9f4:	mov	r1, r7
   2c9f8:	mov	r2, r6
   2c9fc:	mov	r3, #23
   2ca00:	bl	333fc <flatcc_json_parser_set_error@@Base>
   2ca04:	mov	r4, r0
   2ca08:	mov	r0, r4
   2ca0c:	sub	sp, fp, #28
   2ca10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ca14:	push	{r4, r5, r6, sl, fp, lr}
   2ca18:	add	fp, sp, #16
   2ca1c:	sub	sp, sp, #16
   2ca20:	mov	r5, r0
   2ca24:	movw	r0, #27031	; 0x6997
   2ca28:	mov	r4, r1
   2ca2c:	mov	r6, #1
   2ca30:	mov	r1, #0
   2ca34:	mov	r3, #0
   2ca38:	movt	r0, #4
   2ca3c:	mov	r2, r4
   2ca40:	stm	sp, {r0, r6}
   2ca44:	mov	r0, r5
   2ca48:	bl	3a2b8 <flatcc_json_printer_float_struct_field@@Base>
   2ca4c:	movw	r0, #36967	; 0x9067
   2ca50:	mov	r1, #1
   2ca54:	mov	r2, r4
   2ca58:	mov	r3, #4
   2ca5c:	movt	r0, #4
   2ca60:	stm	sp, {r0, r6}
   2ca64:	mov	r0, r5
   2ca68:	bl	3a2b8 <flatcc_json_printer_float_struct_field@@Base>
   2ca6c:	movw	r0, #27472	; 0x6b50
   2ca70:	mov	r1, #2
   2ca74:	mov	r2, r4
   2ca78:	mov	r3, #8
   2ca7c:	movt	r0, #4
   2ca80:	stm	sp, {r0, r6}
   2ca84:	mov	r0, r5
   2ca88:	bl	3a2b8 <flatcc_json_printer_float_struct_field@@Base>
   2ca8c:	movw	r0, #27474	; 0x6b52
   2ca90:	mov	r6, #5
   2ca94:	mov	r1, #3
   2ca98:	mov	r2, r4
   2ca9c:	mov	r3, #16
   2caa0:	movt	r0, #4
   2caa4:	stm	sp, {r0, r6}
   2caa8:	mov	r0, r5
   2caac:	bl	3a320 <flatcc_json_printer_double_struct_field@@Base>
   2cab0:	movw	r0, #51984	; 0xcb10
   2cab4:	movw	r1, #27480	; 0x6b58
   2cab8:	mov	r2, r4
   2cabc:	mov	r3, #24
   2cac0:	movt	r1, #4
   2cac4:	movt	r0, #2
   2cac8:	stm	sp, {r1, r6}
   2cacc:	str	r0, [sp, #8]
   2cad0:	mov	r0, r5
   2cad4:	mov	r1, #4
   2cad8:	bl	3a588 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2cadc:	movw	r0, #52336	; 0xcc70
   2cae0:	movw	r1, #27486	; 0x6b5e
   2cae4:	mov	r2, r4
   2cae8:	mov	r3, #26
   2caec:	movt	r1, #4
   2caf0:	movt	r0, #2
   2caf4:	stm	sp, {r1, r6}
   2caf8:	str	r0, [sp, #8]
   2cafc:	mov	r0, r5
   2cb00:	mov	r1, #5
   2cb04:	bl	415f8 <flatcc_json_printer_embedded_struct_field@@Base>
   2cb08:	sub	sp, fp, #16
   2cb0c:	pop	{r4, r5, r6, sl, fp, pc}
   2cb10:	push	{r4, r5, r6, r7, fp, lr}
   2cb14:	add	fp, sp, #16
   2cb18:	mov	r4, r0
   2cb1c:	mvn	r0, #0
   2cb20:	uxtb	r7, r1
   2cb24:	uxtab	r0, r0, r1
   2cb28:	ands	r5, r0, r7
   2cb2c:	movwne	r5, #1
   2cb30:	cmp	r1, #0
   2cb34:	beq	2cbc8 <main@@Base+0x16b40>
   2cb38:	ands	r0, r1, #244	; 0xf4
   2cb3c:	bne	2cbc8 <main@@Base+0x16b40>
   2cb40:	mov	r0, r4
   2cb44:	mov	r1, r5
   2cb48:	bl	386ac <flatcc_json_printer_delimit_enum_flags@@Base>
   2cb4c:	mov	r6, #0
   2cb50:	tst	r7, #1
   2cb54:	beq	2cb74 <main@@Base+0x16aec>
   2cb58:	movw	r2, #27492	; 0x6b64
   2cb5c:	mov	r0, r4
   2cb60:	mov	r1, #0
   2cb64:	mov	r3, #3
   2cb68:	movt	r2, #4
   2cb6c:	bl	386e0 <flatcc_json_printer_enum_flag@@Base>
   2cb70:	mov	r6, #1
   2cb74:	tst	r7, #2
   2cb78:	beq	2cb98 <main@@Base+0x16b10>
   2cb7c:	movw	r2, #27496	; 0x6b68
   2cb80:	mov	r0, r4
   2cb84:	mov	r1, r6
   2cb88:	mov	r3, #5
   2cb8c:	movt	r2, #4
   2cb90:	bl	386e0 <flatcc_json_printer_enum_flag@@Base>
   2cb94:	add	r6, r6, #1
   2cb98:	tst	r7, #8
   2cb9c:	beq	2cbb8 <main@@Base+0x16b30>
   2cba0:	movw	r2, #27502	; 0x6b6e
   2cba4:	mov	r0, r4
   2cba8:	mov	r1, r6
   2cbac:	mov	r3, #4
   2cbb0:	movt	r2, #4
   2cbb4:	bl	386e0 <flatcc_json_printer_enum_flag@@Base>
   2cbb8:	mov	r0, r4
   2cbbc:	mov	r1, r5
   2cbc0:	pop	{r4, r5, r6, r7, fp, lr}
   2cbc4:	b	386ac <flatcc_json_printer_delimit_enum_flags@@Base>
   2cbc8:	mov	r0, r4
   2cbcc:	pop	{r4, r5, r6, r7, fp, lr}
   2cbd0:	b	38450 <flatcc_json_printer_int8@@Base>
   2cbd4:	sub	r1, r1, #1
   2cbd8:	cmp	r1, #3
   2cbdc:	bhi	2cc08 <main@@Base+0x16b80>
   2cbe0:	add	r2, pc, #0
   2cbe4:	ldr	pc, [r2, r1, lsl #2]
   2cbe8:	strdeq	ip, [r2], -r8
   2cbec:	andeq	ip, r2, r8, lsl ip
   2cbf0:	andeq	ip, r2, r8, lsr #24
   2cbf4:	andeq	ip, r2, r8, lsr ip
   2cbf8:	movw	r1, #27507	; 0x6b73
   2cbfc:	mov	r2, #7
   2cc00:	movt	r1, #4
   2cc04:	b	385c0 <flatcc_json_printer_enum@@Base>
   2cc08:	movw	r1, #33968	; 0x84b0
   2cc0c:	mov	r2, #4
   2cc10:	movt	r1, #4
   2cc14:	b	385c0 <flatcc_json_printer_enum@@Base>
   2cc18:	movw	r1, #27515	; 0x6b7b
   2cc1c:	mov	r2, #23
   2cc20:	movt	r1, #4
   2cc24:	b	385c0 <flatcc_json_printer_enum@@Base>
   2cc28:	movw	r1, #27539	; 0x6b93
   2cc2c:	mov	r2, #8
   2cc30:	movt	r1, #4
   2cc34:	b	385c0 <flatcc_json_printer_enum@@Base>
   2cc38:	movw	r1, #27548	; 0x6b9c
   2cc3c:	mov	r2, #3
   2cc40:	movt	r1, #4
   2cc44:	b	385c0 <flatcc_json_printer_enum@@Base>
   2cc48:	ldrb	r2, [r1, #8]
   2cc4c:	sub	r2, r2, #1
   2cc50:	uxtb	r3, r2
   2cc54:	cmp	r3, #3
   2cc58:	bxhi	lr
   2cc5c:	movw	r3, #28064	; 0x6da0
   2cc60:	sxtb	r2, r2
   2cc64:	movt	r3, #4
   2cc68:	ldr	r2, [r3, r2, lsl #2]
   2cc6c:	b	41354 <flatcc_json_printer_union_table@@Base>
   2cc70:	push	{r4, r5, r6, sl, fp, lr}
   2cc74:	add	fp, sp, #16
   2cc78:	sub	sp, sp, #8
   2cc7c:	mov	r5, r0
   2cc80:	movw	r0, #27258	; 0x6a7a
   2cc84:	mov	r4, r1
   2cc88:	mov	r6, #1
   2cc8c:	mov	r1, #0
   2cc90:	mov	r3, #0
   2cc94:	movt	r0, #4
   2cc98:	mov	r2, r4
   2cc9c:	stm	sp, {r0, r6}
   2cca0:	mov	r0, r5
   2cca4:	bl	3a0b4 <flatcc_json_printer_int16_struct_field@@Base>
   2cca8:	movw	r0, #27673	; 0x6c19
   2ccac:	mov	r1, #1
   2ccb0:	mov	r2, r4
   2ccb4:	mov	r3, #2
   2ccb8:	movt	r0, #4
   2ccbc:	stm	sp, {r0, r6}
   2ccc0:	mov	r0, r5
   2ccc4:	bl	3a038 <flatcc_json_printer_int8_struct_field@@Base>
   2ccc8:	sub	sp, fp, #16
   2cccc:	pop	{r4, r5, r6, sl, fp, pc}
   2ccd0:	push	{r4, r5, r6, sl, fp, lr}
   2ccd4:	add	fp, sp, #16
   2ccd8:	sub	sp, sp, #16
   2ccdc:	movw	r3, #27920	; 0x6d10
   2cce0:	mov	r5, r0
   2cce4:	mov	r0, #2
   2cce8:	mov	r2, #0
   2ccec:	mov	r4, r1
   2ccf0:	mov	r6, #0
   2ccf4:	movt	r3, #4
   2ccf8:	str	r0, [sp]
   2ccfc:	mov	r0, r5
   2cd00:	bl	387ac <flatcc_json_printer_string_field@@Base>
   2cd04:	movw	r3, #27923	; 0x6d13
   2cd08:	mov	r0, #3
   2cd0c:	mov	r1, r4
   2cd10:	mov	r2, #1
   2cd14:	str	r6, [sp, #8]
   2cd18:	str	r6, [sp, #12]
   2cd1c:	movt	r3, #4
   2cd20:	str	r0, [sp]
   2cd24:	mov	r0, r5
   2cd28:	bl	391f8 <flatcc_json_printer_int64_field@@Base>
   2cd2c:	movw	r3, #30220	; 0x760c
   2cd30:	mov	r0, #5
   2cd34:	mov	r1, r4
   2cd38:	mov	r2, #2
   2cd3c:	movt	r3, #4
   2cd40:	stm	sp, {r0, r6}
   2cd44:	mov	r0, r5
   2cd48:	bl	38ce4 <flatcc_json_printer_uint16_field@@Base>
   2cd4c:	sub	sp, fp, #16
   2cd50:	pop	{r4, r5, r6, sl, fp, pc}
   2cd54:	push	{r4, r5, fp, lr}
   2cd58:	add	fp, sp, #8
   2cd5c:	sub	sp, sp, #8
   2cd60:	mov	r4, r1
   2cd64:	movw	r1, #27920	; 0x6d10
   2cd68:	mov	r5, r0
   2cd6c:	mov	r0, #2
   2cd70:	mov	r3, #0
   2cd74:	movt	r1, #4
   2cd78:	str	r0, [sp, #4]
   2cd7c:	mov	r0, r5
   2cd80:	mov	r2, r4
   2cd84:	str	r1, [sp]
   2cd88:	mov	r1, #0
   2cd8c:	bl	39f78 <flatcc_json_printer_uint32_struct_field@@Base>
   2cd90:	movw	r1, #27927	; 0x6d17
   2cd94:	mov	r0, #8
   2cd98:	mov	r2, r4
   2cd9c:	mov	r3, #4
   2cda0:	movt	r1, #4
   2cda4:	str	r0, [sp, #4]
   2cda8:	mov	r0, r5
   2cdac:	str	r1, [sp]
   2cdb0:	mov	r1, #1
   2cdb4:	bl	39f78 <flatcc_json_printer_uint32_struct_field@@Base>
   2cdb8:	sub	sp, fp, #8
   2cdbc:	pop	{r4, r5, fp, pc}
   2cdc0:	bx	lr
   2cdc4:	push	{r4, r5, r6, sl, fp, lr}
   2cdc8:	add	fp, sp, #16
   2cdcc:	sub	sp, sp, #8
   2cdd0:	movw	r3, #27939	; 0x6d23
   2cdd4:	mov	r5, r0
   2cdd8:	mov	r0, #4
   2cddc:	mov	r6, #0
   2cde0:	mov	r2, #0
   2cde4:	mov	r4, r1
   2cde8:	movt	r3, #4
   2cdec:	stm	sp, {r0, r6}
   2cdf0:	mov	r0, r5
   2cdf4:	bl	38a38 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2cdf8:	movw	r3, #27936	; 0x6d20
   2cdfc:	mov	r0, #1
   2ce00:	mov	r1, #7
   2ce04:	mov	r2, #1
   2ce08:	movt	r3, #4
   2ce0c:	str	r1, [sp]
   2ce10:	str	r0, [sp, #4]
   2ce14:	mov	r0, r5
   2ce18:	mov	r1, r4
   2ce1c:	bl	38a38 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ce20:	movw	r3, #27944	; 0x6d28
   2ce24:	mov	r0, #6
   2ce28:	mov	r1, r4
   2ce2c:	mov	r2, #2
   2ce30:	movt	r3, #4
   2ce34:	stm	sp, {r0, r6}
   2ce38:	mov	r0, r5
   2ce3c:	bl	38a38 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ce40:	sub	sp, fp, #16
   2ce44:	pop	{r4, r5, r6, sl, fp, pc}
   2ce48:	push	{r4, r5, r6, r7, fp, lr}
   2ce4c:	add	fp, sp, #16
   2ce50:	sub	sp, sp, #16
   2ce54:	movw	r3, #27080	; 0x69c8
   2ce58:	movw	r7, #51984	; 0xcb10
   2ce5c:	mov	r5, r0
   2ce60:	mov	r0, #5
   2ce64:	mov	r6, #2
   2ce68:	mov	r2, #0
   2ce6c:	mov	r4, r1
   2ce70:	movt	r3, #4
   2ce74:	movt	r7, #2
   2ce78:	stm	sp, {r0, r6, r7}
   2ce7c:	mov	r0, r5
   2ce80:	bl	39954 <flatcc_json_printer_int8_enum_field@@Base>
   2ce84:	movw	r3, #27552	; 0x6ba0
   2ce88:	mov	r0, #6
   2ce8c:	mov	r1, r4
   2ce90:	mov	r2, #1
   2ce94:	movt	r3, #4
   2ce98:	stm	sp, {r0, r6, r7}
   2ce9c:	mov	r0, r5
   2cea0:	bl	39954 <flatcc_json_printer_int8_enum_field@@Base>
   2cea4:	movw	r3, #27559	; 0x6ba7
   2cea8:	mov	r0, r5
   2ceac:	mov	r1, r4
   2ceb0:	mov	r2, #2
   2ceb4:	str	r6, [sp]
   2ceb8:	str	r6, [sp, #4]
   2cebc:	movt	r3, #4
   2cec0:	bl	38c20 <flatcc_json_printer_uint8_field@@Base>
   2cec4:	movw	r3, #27562	; 0x6baa
   2cec8:	mov	r0, #3
   2cecc:	mov	r1, r4
   2ced0:	mov	r2, #3
   2ced4:	movt	r3, #4
   2ced8:	stm	sp, {r0, r6}
   2cedc:	mov	r0, r5
   2cee0:	bl	38c20 <flatcc_json_printer_uint8_field@@Base>
   2cee4:	sub	sp, fp, #16
   2cee8:	pop	{r4, r5, r6, r7, fp, pc}
   2ceec:	bx	lr
   2cef0:	push	{r4, r5, fp, lr}
   2cef4:	add	fp, sp, #8
   2cef8:	sub	sp, sp, #16
   2cefc:	mov	r5, r0
   2cf00:	movw	r0, #53148	; 0xcf9c
   2cf04:	movw	r3, #27566	; 0x6bae
   2cf08:	mov	r4, r1
   2cf0c:	mov	r1, #6
   2cf10:	mov	r2, #0
   2cf14:	movt	r0, #2
   2cf18:	movt	r3, #4
   2cf1c:	str	r1, [sp]
   2cf20:	mov	r1, r4
   2cf24:	str	r0, [sp, #4]
   2cf28:	mov	r0, r5
   2cf2c:	bl	40d24 <flatcc_json_printer_table_field@@Base>
   2cf30:	movw	r0, #53304	; 0xd038
   2cf34:	movw	r3, #27573	; 0x6bb5
   2cf38:	mov	r1, #5
   2cf3c:	mov	r2, #1
   2cf40:	movt	r0, #2
   2cf44:	movt	r3, #4
   2cf48:	str	r1, [sp]
   2cf4c:	mov	r1, r4
   2cf50:	str	r0, [sp, #4]
   2cf54:	mov	r0, r5
   2cf58:	bl	40d24 <flatcc_json_printer_table_field@@Base>
   2cf5c:	movw	r0, #52296	; 0xcc48
   2cf60:	movw	r1, #52180	; 0xcbd4
   2cf64:	movw	r3, #27579	; 0x6bbb
   2cf68:	mov	r2, #7
   2cf6c:	movt	r0, #2
   2cf70:	movt	r1, #2
   2cf74:	movt	r3, #4
   2cf78:	str	r2, [sp]
   2cf7c:	mov	r2, #3
   2cf80:	str	r1, [sp, #4]
   2cf84:	str	r0, [sp, #8]
   2cf88:	mov	r0, r5
   2cf8c:	mov	r1, r4
   2cf90:	bl	40974 <flatcc_json_printer_union_vector_field@@Base>
   2cf94:	sub	sp, fp, #8
   2cf98:	pop	{r4, r5, fp, pc}
   2cf9c:	push	{r4, r5, r6, sl, fp, lr}
   2cfa0:	add	fp, sp, #16
   2cfa4:	sub	sp, sp, #8
   2cfa8:	mov	r5, r0
   2cfac:	movw	r0, #53532	; 0xd11c
   2cfb0:	movw	r3, #27587	; 0x6bc3
   2cfb4:	mov	r4, r1
   2cfb8:	mov	r1, #21
   2cfbc:	mov	r2, #0
   2cfc0:	movt	r0, #2
   2cfc4:	movt	r3, #4
   2cfc8:	str	r1, [sp]
   2cfcc:	mov	r1, r4
   2cfd0:	str	r0, [sp, #4]
   2cfd4:	mov	r0, r5
   2cfd8:	bl	40d24 <flatcc_json_printer_table_field@@Base>
   2cfdc:	movw	r0, #53856	; 0xd260
   2cfe0:	movw	r3, #27609	; 0x6bd9
   2cfe4:	mov	r6, #22
   2cfe8:	mov	r1, r4
   2cfec:	mov	r2, #1
   2cff0:	movt	r0, #2
   2cff4:	movt	r3, #4
   2cff8:	str	r6, [sp]
   2cffc:	str	r0, [sp, #4]
   2d000:	mov	r0, r5
   2d004:	bl	40d24 <flatcc_json_printer_table_field@@Base>
   2d008:	movw	r0, #53956	; 0xd2c4
   2d00c:	movw	r3, #27632	; 0x6bf0
   2d010:	mov	r1, r4
   2d014:	mov	r2, #2
   2d018:	str	r6, [sp]
   2d01c:	movt	r0, #2
   2d020:	movt	r3, #4
   2d024:	str	r0, [sp, #4]
   2d028:	mov	r0, r5
   2d02c:	bl	40d24 <flatcc_json_printer_table_field@@Base>
   2d030:	sub	sp, fp, #16
   2d034:	pop	{r4, r5, r6, sl, fp, pc}
   2d038:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d03c:	add	fp, sp, #24
   2d040:	sub	sp, sp, #16
   2d044:	movw	r6, #54236	; 0xd3dc
   2d048:	movw	r3, #27782	; 0x6c86
   2d04c:	movw	r7, #54056	; 0xd328
   2d050:	mov	r5, r0
   2d054:	mov	r0, #14
   2d058:	mov	r2, #1
   2d05c:	mov	r4, r1
   2d060:	movt	r6, #2
   2d064:	movt	r3, #4
   2d068:	movt	r7, #2
   2d06c:	stm	sp, {r0, r7}
   2d070:	mov	r0, r5
   2d074:	str	r6, [sp, #8]
   2d078:	bl	40f04 <flatcc_json_printer_union_field@@Base>
   2d07c:	movw	r3, #27797	; 0x6c95
   2d080:	mov	r8, #10
   2d084:	mov	r0, r5
   2d088:	mov	r1, r4
   2d08c:	mov	r2, #3
   2d090:	str	r7, [sp, #4]
   2d094:	str	r6, [sp, #8]
   2d098:	movt	r3, #4
   2d09c:	str	r8, [sp]
   2d0a0:	bl	40f04 <flatcc_json_printer_union_field@@Base>
   2d0a4:	movw	r3, #27808	; 0x6ca0
   2d0a8:	mov	r0, #9
   2d0ac:	mov	r1, r4
   2d0b0:	mov	r2, #5
   2d0b4:	mov	r9, #5
   2d0b8:	movt	r3, #4
   2d0bc:	stm	sp, {r0, r7}
   2d0c0:	mov	r0, r5
   2d0c4:	str	r6, [sp, #8]
   2d0c8:	bl	40f04 <flatcc_json_printer_union_field@@Base>
   2d0cc:	movw	r3, #27818	; 0x6caa
   2d0d0:	mov	r0, r5
   2d0d4:	mov	r1, r4
   2d0d8:	mov	r2, #7
   2d0dc:	str	r9, [sp]
   2d0e0:	str	r7, [sp, #4]
   2d0e4:	str	r6, [sp, #8]
   2d0e8:	movt	r3, #4
   2d0ec:	bl	40f04 <flatcc_json_printer_union_field@@Base>
   2d0f0:	movw	r3, #27824	; 0x6cb0
   2d0f4:	mov	r0, r5
   2d0f8:	mov	r1, r4
   2d0fc:	mov	r2, #9
   2d100:	str	r8, [sp]
   2d104:	str	r7, [sp, #4]
   2d108:	str	r6, [sp, #8]
   2d10c:	movt	r3, #4
   2d110:	bl	40974 <flatcc_json_printer_union_vector_field@@Base>
   2d114:	sub	sp, fp, #24
   2d118:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2d11c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d120:	add	fp, sp, #24
   2d124:	sub	sp, sp, #16
   2d128:	movw	r3, #27655	; 0x6c07
   2d12c:	mov	r9, #4
   2d130:	mov	r2, #0
   2d134:	mov	r4, r1
   2d138:	mov	r5, r0
   2d13c:	mov	r6, #0
   2d140:	movt	r3, #4
   2d144:	str	r9, [sp]
   2d148:	bl	387ac <flatcc_json_printer_string_field@@Base>
   2d14c:	movw	r3, #27660	; 0x6c0c
   2d150:	mov	r8, #9
   2d154:	mov	r0, r5
   2d158:	mov	r1, r4
   2d15c:	mov	r2, #1
   2d160:	str	r6, [sp, #4]
   2d164:	movt	r3, #4
   2d168:	str	r8, [sp]
   2d16c:	bl	38da8 <flatcc_json_printer_uint32_field@@Base>
   2d170:	movw	r3, #27670	; 0x6c16
   2d174:	mov	r0, r5
   2d178:	mov	r1, r4
   2d17c:	mov	r2, #2
   2d180:	str	r9, [sp]
   2d184:	movt	r3, #4
   2d188:	bl	387ac <flatcc_json_printer_string_field@@Base>
   2d18c:	movw	r3, #27675	; 0x6c1b
   2d190:	mov	r7, #8
   2d194:	mov	r0, r5
   2d198:	mov	r1, r4
   2d19c:	mov	r2, #3
   2d1a0:	str	r6, [sp, #8]
   2d1a4:	str	r6, [sp, #12]
   2d1a8:	movt	r3, #4
   2d1ac:	str	r7, [sp]
   2d1b0:	bl	391f8 <flatcc_json_printer_int64_field@@Base>
   2d1b4:	movw	r3, #27684	; 0x6c24
   2d1b8:	mov	r0, r5
   2d1bc:	mov	r1, r4
   2d1c0:	mov	r2, #4
   2d1c4:	str	r9, [sp]
   2d1c8:	movt	r3, #4
   2d1cc:	bl	387ac <flatcc_json_printer_string_field@@Base>
   2d1d0:	movw	r3, #27689	; 0x6c29
   2d1d4:	mov	r0, r5
   2d1d8:	mov	r1, r4
   2d1dc:	mov	r2, #5
   2d1e0:	str	r6, [sp, #8]
   2d1e4:	str	r6, [sp, #12]
   2d1e8:	str	r7, [sp]
   2d1ec:	movt	r3, #4
   2d1f0:	bl	391f8 <flatcc_json_printer_int64_field@@Base>
   2d1f4:	movw	r3, #27698	; 0x6c32
   2d1f8:	mov	r0, r5
   2d1fc:	mov	r1, r4
   2d200:	mov	r2, #6
   2d204:	str	r8, [sp]
   2d208:	str	r6, [sp, #4]
   2d20c:	movt	r3, #4
   2d210:	bl	38da8 <flatcc_json_printer_uint32_field@@Base>
   2d214:	movw	r3, #27708	; 0x6c3c
   2d218:	mov	r0, r5
   2d21c:	mov	r1, r4
   2d220:	mov	r2, #7
   2d224:	str	r6, [sp, #8]
   2d228:	str	r6, [sp, #12]
   2d22c:	str	r7, [sp]
   2d230:	movt	r3, #4
   2d234:	bl	391f8 <flatcc_json_printer_int64_field@@Base>
   2d238:	movw	r3, #27717	; 0x6c45
   2d23c:	mov	r0, r5
   2d240:	mov	r1, r4
   2d244:	mov	r2, #8
   2d248:	str	r8, [sp]
   2d24c:	str	r6, [sp, #4]
   2d250:	movt	r3, #4
   2d254:	bl	38da8 <flatcc_json_printer_uint32_field@@Base>
   2d258:	sub	sp, fp, #24
   2d25c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2d260:	push	{r4, r5, r6, sl, fp, lr}
   2d264:	add	fp, sp, #16
   2d268:	sub	sp, sp, #16
   2d26c:	movw	r3, #27727	; 0x6c4f
   2d270:	mov	r5, r0
   2d274:	mov	r0, #15
   2d278:	mov	r6, #0
   2d27c:	mov	r2, #0
   2d280:	mov	r4, r1
   2d284:	movt	r3, #4
   2d288:	str	r0, [sp]
   2d28c:	mov	r0, r5
   2d290:	str	r6, [sp, #8]
   2d294:	str	r6, [sp, #12]
   2d298:	bl	391f8 <flatcc_json_printer_int64_field@@Base>
   2d29c:	movw	r3, #27743	; 0x6c5f
   2d2a0:	mov	r0, #16
   2d2a4:	mov	r1, r4
   2d2a8:	mov	r2, #1
   2d2ac:	movt	r3, #4
   2d2b0:	stm	sp, {r0, r6}
   2d2b4:	mov	r0, r5
   2d2b8:	bl	38da8 <flatcc_json_printer_uint32_field@@Base>
   2d2bc:	sub	sp, fp, #16
   2d2c0:	pop	{r4, r5, r6, sl, fp, pc}
   2d2c4:	push	{r4, r5, r6, sl, fp, lr}
   2d2c8:	add	fp, sp, #16
   2d2cc:	sub	sp, sp, #16
   2d2d0:	movw	r3, #27727	; 0x6c4f
   2d2d4:	mov	r5, r0
   2d2d8:	mov	r0, #15
   2d2dc:	mov	r6, #0
   2d2e0:	mov	r2, #0
   2d2e4:	mov	r4, r1
   2d2e8:	movt	r3, #4
   2d2ec:	str	r0, [sp]
   2d2f0:	mov	r0, r5
   2d2f4:	str	r6, [sp, #8]
   2d2f8:	str	r6, [sp, #12]
   2d2fc:	bl	391f8 <flatcc_json_printer_int64_field@@Base>
   2d300:	movw	r3, #27760	; 0x6c70
   2d304:	mov	r0, #21
   2d308:	mov	r1, r4
   2d30c:	mov	r2, #1
   2d310:	movt	r3, #4
   2d314:	stm	sp, {r0, r6}
   2d318:	mov	r0, r5
   2d31c:	bl	38da8 <flatcc_json_printer_uint32_field@@Base>
   2d320:	sub	sp, fp, #16
   2d324:	pop	{r4, r5, r6, sl, fp, pc}
   2d328:	sub	r2, r1, #2
   2d32c:	cmp	r2, #9
   2d330:	bhi	2d374 <main@@Base+0x172ec>
   2d334:	add	r1, pc, #0
   2d338:	ldr	pc, [r1, r2, lsl #2]
   2d33c:	andeq	sp, r2, r4, ror #6
   2d340:	andeq	sp, r2, ip, lsl #7
   2d344:	andeq	sp, r2, ip, lsl #7
   2d348:	andeq	sp, r2, ip, lsl #7
   2d34c:	andeq	sp, r2, ip, lsl #7
   2d350:	andeq	sp, r2, ip, lsl #7
   2d354:	muleq	r2, ip, r3
   2d358:	andeq	sp, r2, ip, lsr #7
   2d35c:			; <UNDEFINED> instruction: 0x0002d3bc
   2d360:	andeq	sp, r2, ip, asr #7
   2d364:	movw	r1, #27835	; 0x6cbb
   2d368:	mov	r2, #5
   2d36c:	movt	r1, #4
   2d370:	b	385c0 <flatcc_json_printer_enum@@Base>
   2d374:	cmp	r1, #255	; 0xff
   2d378:	bne	2d38c <main@@Base+0x17304>
   2d37c:	movw	r1, #27870	; 0x6cde
   2d380:	mov	r2, #6
   2d384:	movt	r1, #4
   2d388:	b	385c0 <flatcc_json_printer_enum@@Base>
   2d38c:	movw	r1, #33968	; 0x84b0
   2d390:	mov	r2, #4
   2d394:	movt	r1, #4
   2d398:	b	385c0 <flatcc_json_printer_enum@@Base>
   2d39c:	movw	r1, #27841	; 0x6cc1
   2d3a0:	mov	r2, #8
   2d3a4:	movt	r1, #4
   2d3a8:	b	385c0 <flatcc_json_printer_enum@@Base>
   2d3ac:	movw	r1, #27850	; 0x6cca
   2d3b0:	mov	r2, #5
   2d3b4:	movt	r1, #4
   2d3b8:	b	385c0 <flatcc_json_printer_enum@@Base>
   2d3bc:	movw	r1, #27856	; 0x6cd0
   2d3c0:	mov	r2, #7
   2d3c4:	movt	r1, #4
   2d3c8:	b	385c0 <flatcc_json_printer_enum@@Base>
   2d3cc:	movw	r1, #27864	; 0x6cd8
   2d3d0:	mov	r2, #5
   2d3d4:	movt	r1, #4
   2d3d8:	b	385c0 <flatcc_json_printer_enum@@Base>
   2d3dc:	ldrb	r3, [r1, #8]
   2d3e0:	sub	r2, r3, #2
   2d3e4:	cmp	r2, #9
   2d3e8:	bhi	2d428 <main@@Base+0x173a0>
   2d3ec:	add	r3, pc, #0
   2d3f0:	ldr	pc, [r3, r2, lsl #2]
   2d3f4:	andeq	sp, r2, r4, lsr r4
   2d3f8:	andeq	sp, r2, ip, asr #8
   2d3fc:	andeq	sp, r2, ip, asr #8
   2d400:	andeq	sp, r2, ip, asr #8
   2d404:	andeq	sp, r2, ip, asr #8
   2d408:	andeq	sp, r2, ip, asr #8
   2d40c:	andeq	sp, r2, r0, asr #8
   2d410:	andeq	sp, r2, ip, lsl r4
   2d414:	andeq	sp, r2, ip, lsl r4
   2d418:	andeq	sp, r2, r0, lsr r4
   2d41c:	movw	r2, #54460	; 0xd4bc
   2d420:	movt	r2, #2
   2d424:	b	414c4 <flatcc_json_printer_union_struct@@Base>
   2d428:	cmp	r3, #255	; 0xff
   2d42c:	bxne	lr
   2d430:	b	415e4 <flatcc_json_printer_union_string@@Base>
   2d434:	movw	r2, #54352	; 0xd450
   2d438:	movt	r2, #2
   2d43c:	b	41354 <flatcc_json_printer_union_table@@Base>
   2d440:	movw	r2, #54404	; 0xd484
   2d444:	movt	r2, #2
   2d448:	b	414c4 <flatcc_json_printer_union_struct@@Base>
   2d44c:	bx	lr
   2d450:	push	{fp, lr}
   2d454:	mov	fp, sp
   2d458:	sub	sp, sp, #8
   2d45c:	mov	r3, #19
   2d460:	mov	r2, #0
   2d464:	str	r3, [sp]
   2d468:	movw	r3, #27877	; 0x6ce5
   2d46c:	str	r2, [sp, #4]
   2d470:	mov	r2, #0
   2d474:	movt	r3, #4
   2d478:	bl	3911c <flatcc_json_printer_int32_field@@Base>
   2d47c:	mov	sp, fp
   2d480:	pop	{fp, pc}
   2d484:	push	{fp, lr}
   2d488:	mov	fp, sp
   2d48c:	sub	sp, sp, #8
   2d490:	movw	r3, #27897	; 0x6cf9
   2d494:	mov	r2, r1
   2d498:	mov	r1, #11
   2d49c:	movt	r3, #4
   2d4a0:	str	r1, [sp, #4]
   2d4a4:	mov	r1, #0
   2d4a8:	str	r3, [sp]
   2d4ac:	mov	r3, #0
   2d4b0:	bl	39f18 <flatcc_json_printer_uint16_struct_field@@Base>
   2d4b4:	mov	sp, fp
   2d4b8:	pop	{fp, pc}
   2d4bc:	push	{fp, lr}
   2d4c0:	mov	fp, sp
   2d4c4:	sub	sp, sp, #8
   2d4c8:	movw	r3, #27909	; 0x6d05
   2d4cc:	mov	r2, r1
   2d4d0:	mov	r1, #10
   2d4d4:	movt	r3, #4
   2d4d8:	str	r1, [sp, #4]
   2d4dc:	mov	r1, #0
   2d4e0:	str	r3, [sp]
   2d4e4:	mov	r3, #0
   2d4e8:	bl	3a130 <flatcc_json_printer_int32_struct_field@@Base>
   2d4ec:	mov	sp, fp
   2d4f0:	pop	{fp, pc}
   2d4f4:	ldrb	r1, [r0, #12]
   2d4f8:	sub	r1, r1, #1
   2d4fc:	uxtb	r2, r1
   2d500:	cmp	r2, #3
   2d504:	movhi	r0, #0
   2d508:	bxhi	lr
   2d50c:	movw	r2, #28080	; 0x6db0
   2d510:	sxtb	r1, r1
   2d514:	movt	r2, #4
   2d518:	ldr	r1, [r2, r1, lsl #2]
   2d51c:	b	323a4 <flatcc_verify_union_table@@Base>
   2d520:	push	{r4, sl, fp, lr}
   2d524:	add	fp, sp, #8
   2d528:	mov	r1, #0
   2d52c:	mov	r2, #0
   2d530:	mov	r4, r0
   2d534:	bl	31d24 <flatcc_verify_string_field@@Base>
   2d538:	cmp	r0, #0
   2d53c:	popne	{r4, sl, fp, pc}
   2d540:	mov	r0, r4
   2d544:	mov	r1, #1
   2d548:	mov	r2, #8
   2d54c:	mov	r3, #8
   2d550:	bl	31cac <flatcc_verify_field@@Base>
   2d554:	cmp	r0, #0
   2d558:	beq	2d560 <main@@Base+0x174d8>
   2d55c:	pop	{r4, sl, fp, pc}
   2d560:	mov	r0, r4
   2d564:	mov	r1, #2
   2d568:	mov	r2, #2
   2d56c:	mov	r3, #2
   2d570:	pop	{r4, sl, fp, lr}
   2d574:	b	31cac <flatcc_verify_field@@Base>
   2d578:	mov	r0, #0
   2d57c:	bx	lr
   2d580:	push	{r4, r5, r6, sl, fp, lr}
   2d584:	add	fp, sp, #16
   2d588:	sub	sp, sp, #8
   2d58c:	mvn	r5, #0
   2d590:	mov	r6, #1
   2d594:	mov	r1, #0
   2d598:	mov	r2, #0
   2d59c:	mov	r3, #1
   2d5a0:	mov	r4, r0
   2d5a4:	str	r6, [sp]
   2d5a8:	str	r5, [sp, #4]
   2d5ac:	bl	31e30 <flatcc_verify_vector_field@@Base>
   2d5b0:	cmp	r0, #0
   2d5b4:	bne	2d604 <main@@Base+0x1757c>
   2d5b8:	mov	r0, r4
   2d5bc:	mov	r1, #1
   2d5c0:	mov	r2, #0
   2d5c4:	mov	r3, #1
   2d5c8:	str	r6, [sp]
   2d5cc:	str	r5, [sp, #4]
   2d5d0:	bl	31e30 <flatcc_verify_vector_field@@Base>
   2d5d4:	cmp	r0, #0
   2d5d8:	bne	2d604 <main@@Base+0x1757c>
   2d5dc:	movw	r0, #3992	; 0xf98
   2d5e0:	mov	r1, #1
   2d5e4:	mov	r2, #0
   2d5e8:	mov	r3, #0
   2d5ec:	movt	r0, #2
   2d5f0:	str	r1, [sp]
   2d5f4:	mov	r1, #2
   2d5f8:	str	r0, [sp, #4]
   2d5fc:	mov	r0, r4
   2d600:	bl	329e0 <flatcc_verify_table_as_nested_root@@Base>
   2d604:	sub	sp, fp, #16
   2d608:	pop	{r4, r5, r6, sl, fp, pc}
   2d60c:	push	{r4, sl, fp, lr}
   2d610:	add	fp, sp, #8
   2d614:	mov	r1, #0
   2d618:	mov	r2, #1
   2d61c:	mov	r3, #1
   2d620:	mov	r4, r0
   2d624:	bl	31cac <flatcc_verify_field@@Base>
   2d628:	cmp	r0, #0
   2d62c:	bne	2d668 <main@@Base+0x175e0>
   2d630:	mov	r0, r4
   2d634:	mov	r1, #1
   2d638:	mov	r2, #1
   2d63c:	mov	r3, #1
   2d640:	bl	31cac <flatcc_verify_field@@Base>
   2d644:	cmp	r0, #0
   2d648:	popne	{r4, sl, fp, pc}
   2d64c:	mov	r0, r4
   2d650:	mov	r1, #2
   2d654:	mov	r2, #1
   2d658:	mov	r3, #1
   2d65c:	bl	31cac <flatcc_verify_field@@Base>
   2d660:	cmp	r0, #0
   2d664:	beq	2d66c <main@@Base+0x175e4>
   2d668:	pop	{r4, sl, fp, pc}
   2d66c:	mov	r0, r4
   2d670:	mov	r1, #3
   2d674:	mov	r2, #1
   2d678:	mov	r3, #1
   2d67c:	pop	{r4, sl, fp, lr}
   2d680:	b	31cac <flatcc_verify_field@@Base>
   2d684:	mov	r0, #0
   2d688:	bx	lr
   2d68c:	push	{r4, sl, fp, lr}
   2d690:	add	fp, sp, #8
   2d694:	movw	r3, #55028	; 0xd6f4
   2d698:	mov	r1, #0
   2d69c:	mov	r2, #0
   2d6a0:	mov	r4, r0
   2d6a4:	movt	r3, #2
   2d6a8:	bl	3200c <flatcc_verify_table_field@@Base>
   2d6ac:	cmp	r0, #0
   2d6b0:	popne	{r4, sl, fp, pc}
   2d6b4:	movw	r3, #55132	; 0xd75c
   2d6b8:	mov	r0, r4
   2d6bc:	mov	r1, #1
   2d6c0:	mov	r2, #0
   2d6c4:	movt	r3, #2
   2d6c8:	bl	3200c <flatcc_verify_table_field@@Base>
   2d6cc:	cmp	r0, #0
   2d6d0:	beq	2d6d8 <main@@Base+0x17650>
   2d6d4:	pop	{r4, sl, fp, pc}
   2d6d8:	movw	r3, #54516	; 0xd4f4
   2d6dc:	mov	r0, r4
   2d6e0:	mov	r1, #3
   2d6e4:	mov	r2, #0
   2d6e8:	movt	r3, #2
   2d6ec:	pop	{r4, sl, fp, lr}
   2d6f0:	b	32cbc <flatcc_verify_union_vector_field@@Base>
   2d6f4:	push	{r4, sl, fp, lr}
   2d6f8:	add	fp, sp, #8
   2d6fc:	movw	r3, #55300	; 0xd804
   2d700:	mov	r1, #0
   2d704:	mov	r2, #0
   2d708:	mov	r4, r0
   2d70c:	movt	r3, #2
   2d710:	bl	3200c <flatcc_verify_table_field@@Base>
   2d714:	cmp	r0, #0
   2d718:	popne	{r4, sl, fp, pc}
   2d71c:	movw	r3, #55548	; 0xd8fc
   2d720:	mov	r0, r4
   2d724:	mov	r1, #1
   2d728:	mov	r2, #0
   2d72c:	movt	r3, #2
   2d730:	bl	3200c <flatcc_verify_table_field@@Base>
   2d734:	cmp	r0, #0
   2d738:	beq	2d740 <main@@Base+0x176b8>
   2d73c:	pop	{r4, sl, fp, pc}
   2d740:	movw	r3, #55608	; 0xd938
   2d744:	mov	r0, r4
   2d748:	mov	r1, #2
   2d74c:	mov	r2, #0
   2d750:	movt	r3, #2
   2d754:	pop	{r4, sl, fp, lr}
   2d758:	b	3200c <flatcc_verify_table_field@@Base>
   2d75c:	push	{r4, sl, fp, lr}
   2d760:	add	fp, sp, #8
   2d764:	movw	r3, #55668	; 0xd974
   2d768:	mov	r1, #1
   2d76c:	mov	r2, #0
   2d770:	mov	r4, r0
   2d774:	movt	r3, #2
   2d778:	bl	32b90 <flatcc_verify_union_field@@Base>
   2d77c:	cmp	r0, #0
   2d780:	bne	2d7e4 <main@@Base+0x1775c>
   2d784:	movw	r3, #55668	; 0xd974
   2d788:	mov	r0, r4
   2d78c:	mov	r1, #3
   2d790:	mov	r2, #0
   2d794:	movt	r3, #2
   2d798:	bl	32b90 <flatcc_verify_union_field@@Base>
   2d79c:	cmp	r0, #0
   2d7a0:	bne	2d7e4 <main@@Base+0x1775c>
   2d7a4:	movw	r3, #55668	; 0xd974
   2d7a8:	mov	r0, r4
   2d7ac:	mov	r1, #5
   2d7b0:	mov	r2, #0
   2d7b4:	movt	r3, #2
   2d7b8:	bl	32b90 <flatcc_verify_union_field@@Base>
   2d7bc:	cmp	r0, #0
   2d7c0:	popne	{r4, sl, fp, pc}
   2d7c4:	movw	r3, #55668	; 0xd974
   2d7c8:	mov	r0, r4
   2d7cc:	mov	r1, #7
   2d7d0:	mov	r2, #0
   2d7d4:	movt	r3, #2
   2d7d8:	bl	32b90 <flatcc_verify_union_field@@Base>
   2d7dc:	cmp	r0, #0
   2d7e0:	beq	2d7e8 <main@@Base+0x17760>
   2d7e4:	pop	{r4, sl, fp, pc}
   2d7e8:	movw	r3, #55668	; 0xd974
   2d7ec:	mov	r0, r4
   2d7f0:	mov	r1, #9
   2d7f4:	mov	r2, #0
   2d7f8:	movt	r3, #2
   2d7fc:	pop	{r4, sl, fp, lr}
   2d800:	b	32cbc <flatcc_verify_union_vector_field@@Base>
   2d804:	push	{r4, sl, fp, lr}
   2d808:	add	fp, sp, #8
   2d80c:	mov	r1, #0
   2d810:	mov	r2, #0
   2d814:	mov	r4, r0
   2d818:	bl	31d24 <flatcc_verify_string_field@@Base>
   2d81c:	cmp	r0, #0
   2d820:	bne	2d8e0 <main@@Base+0x17858>
   2d824:	mov	r0, r4
   2d828:	mov	r1, #1
   2d82c:	mov	r2, #4
   2d830:	mov	r3, #4
   2d834:	bl	31cac <flatcc_verify_field@@Base>
   2d838:	cmp	r0, #0
   2d83c:	bne	2d8e0 <main@@Base+0x17858>
   2d840:	mov	r0, r4
   2d844:	mov	r1, #2
   2d848:	mov	r2, #0
   2d84c:	bl	31d24 <flatcc_verify_string_field@@Base>
   2d850:	cmp	r0, #0
   2d854:	bne	2d8e0 <main@@Base+0x17858>
   2d858:	mov	r0, r4
   2d85c:	mov	r1, #3
   2d860:	mov	r2, #8
   2d864:	mov	r3, #8
   2d868:	bl	31cac <flatcc_verify_field@@Base>
   2d86c:	cmp	r0, #0
   2d870:	bne	2d8e0 <main@@Base+0x17858>
   2d874:	mov	r0, r4
   2d878:	mov	r1, #4
   2d87c:	mov	r2, #0
   2d880:	bl	31d24 <flatcc_verify_string_field@@Base>
   2d884:	cmp	r0, #0
   2d888:	bne	2d8e0 <main@@Base+0x17858>
   2d88c:	mov	r0, r4
   2d890:	mov	r1, #5
   2d894:	mov	r2, #8
   2d898:	mov	r3, #8
   2d89c:	bl	31cac <flatcc_verify_field@@Base>
   2d8a0:	cmp	r0, #0
   2d8a4:	bne	2d8e0 <main@@Base+0x17858>
   2d8a8:	mov	r0, r4
   2d8ac:	mov	r1, #6
   2d8b0:	mov	r2, #4
   2d8b4:	mov	r3, #4
   2d8b8:	bl	31cac <flatcc_verify_field@@Base>
   2d8bc:	cmp	r0, #0
   2d8c0:	popne	{r4, sl, fp, pc}
   2d8c4:	mov	r0, r4
   2d8c8:	mov	r1, #7
   2d8cc:	mov	r2, #8
   2d8d0:	mov	r3, #8
   2d8d4:	bl	31cac <flatcc_verify_field@@Base>
   2d8d8:	cmp	r0, #0
   2d8dc:	beq	2d8e4 <main@@Base+0x1785c>
   2d8e0:	pop	{r4, sl, fp, pc}
   2d8e4:	mov	r0, r4
   2d8e8:	mov	r1, #8
   2d8ec:	mov	r2, #4
   2d8f0:	mov	r3, #4
   2d8f4:	pop	{r4, sl, fp, lr}
   2d8f8:	b	31cac <flatcc_verify_field@@Base>
   2d8fc:	push	{r4, sl, fp, lr}
   2d900:	add	fp, sp, #8
   2d904:	mov	r1, #0
   2d908:	mov	r2, #8
   2d90c:	mov	r3, #8
   2d910:	mov	r4, r0
   2d914:	bl	31cac <flatcc_verify_field@@Base>
   2d918:	cmp	r0, #0
   2d91c:	popne	{r4, sl, fp, pc}
   2d920:	mov	r0, r4
   2d924:	mov	r1, #1
   2d928:	mov	r2, #4
   2d92c:	mov	r3, #4
   2d930:	pop	{r4, sl, fp, lr}
   2d934:	b	31cac <flatcc_verify_field@@Base>
   2d938:	push	{r4, sl, fp, lr}
   2d93c:	add	fp, sp, #8
   2d940:	mov	r1, #0
   2d944:	mov	r2, #8
   2d948:	mov	r3, #8
   2d94c:	mov	r4, r0
   2d950:	bl	31cac <flatcc_verify_field@@Base>
   2d954:	cmp	r0, #0
   2d958:	popne	{r4, sl, fp, pc}
   2d95c:	mov	r0, r4
   2d960:	mov	r1, #1
   2d964:	mov	r2, #4
   2d968:	mov	r3, #4
   2d96c:	pop	{r4, sl, fp, lr}
   2d970:	b	31cac <flatcc_verify_field@@Base>
   2d974:	ldrb	r2, [r0, #12]
   2d978:	sub	r1, r2, #2
   2d97c:	cmp	r1, #9
   2d980:	bhi	2d9c0 <main@@Base+0x17938>
   2d984:	add	r2, pc, #0
   2d988:	ldr	pc, [r2, r1, lsl #2]
   2d98c:	ldrdeq	sp, [r2], -r4
   2d990:	andeq	sp, r2, ip, asr #19
   2d994:	andeq	sp, r2, ip, asr #19
   2d998:	andeq	sp, r2, ip, asr #19
   2d99c:	andeq	sp, r2, ip, asr #19
   2d9a0:	andeq	sp, r2, ip, asr #19
   2d9a4:	andeq	sp, r2, r0, ror #19
   2d9a8:			; <UNDEFINED> instruction: 0x0002d9b4
   2d9ac:			; <UNDEFINED> instruction: 0x0002d9b4
   2d9b0:	andeq	sp, r2, r8, asr #19
   2d9b4:	mov	r1, #4
   2d9b8:	mov	r2, #4
   2d9bc:	b	3248c <flatcc_verify_union_struct@@Base>
   2d9c0:	cmp	r2, #255	; 0xff
   2d9c4:	bne	2d9cc <main@@Base+0x17944>
   2d9c8:	b	324e4 <flatcc_verify_union_string@@Base>
   2d9cc:	mov	r0, #0
   2d9d0:	bx	lr
   2d9d4:	movw	r1, #55788	; 0xd9ec
   2d9d8:	movt	r1, #2
   2d9dc:	b	323a4 <flatcc_verify_union_table@@Base>
   2d9e0:	mov	r1, #2
   2d9e4:	mov	r2, #2
   2d9e8:	b	3248c <flatcc_verify_union_struct@@Base>
   2d9ec:	mov	r1, #0
   2d9f0:	mov	r2, #4
   2d9f4:	mov	r3, #4
   2d9f8:	b	31cac <flatcc_verify_field@@Base>

0002d9fc <flatcc_builder_default_alloc@@Base>:
   2d9fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2da00:	add	fp, sp, #24
   2da04:	mov	r4, r1
   2da08:	cmp	r2, #0
   2da0c:	beq	2da54 <flatcc_builder_default_alloc@@Base+0x58>
   2da10:	ldr	r0, [fp, #8]
   2da14:	mov	r8, r3
   2da18:	sub	r1, r0, #1
   2da1c:	cmp	r1, #6
   2da20:	bhi	2da7c <flatcc_builder_default_alloc@@Base+0x80>
   2da24:	add	r3, pc, #4
   2da28:	mov	r0, #256	; 0x100
   2da2c:	ldr	pc, [r3, r1, lsl #2]
   2da30:	muleq	r2, r0, sl
   2da34:	andeq	sp, r2, ip, ror sl
   2da38:	andeq	sp, r2, ip, ror sl
   2da3c:	andeq	sp, r2, ip, asr #20
   2da40:	andeq	sp, r2, r4, lsl #21
   2da44:	andeq	sp, r2, ip, ror sl
   2da48:	andeq	sp, r2, ip, lsl #21
   2da4c:	mov	r0, #288	; 0x120
   2da50:	b	2da90 <flatcc_builder_default_alloc@@Base+0x94>
   2da54:	ldr	r0, [r4]
   2da58:	cmp	r0, #0
   2da5c:	beq	2da74 <flatcc_builder_default_alloc@@Base+0x78>
   2da60:	bl	14e50 <free@plt>
   2da64:	mov	r6, #0
   2da68:	str	r6, [r4]
   2da6c:	str	r6, [r4, #4]
   2da70:	b	2db00 <flatcc_builder_default_alloc@@Base+0x104>
   2da74:	mov	r6, #0
   2da78:	b	2db00 <flatcc_builder_default_alloc@@Base+0x104>
   2da7c:	mov	r0, #32
   2da80:	b	2da90 <flatcc_builder_default_alloc@@Base+0x94>
   2da84:	mov	r0, r2
   2da88:	b	2da90 <flatcc_builder_default_alloc@@Base+0x94>
   2da8c:	mov	r0, #64	; 0x40
   2da90:	mov	r7, r0
   2da94:	lsl	r0, r0, #1
   2da98:	cmp	r7, r2
   2da9c:	bcc	2da90 <flatcc_builder_default_alloc@@Base+0x94>
   2daa0:	ldr	r0, [r4, #4]
   2daa4:	mov	r6, #0
   2daa8:	cmp	r0, r2
   2daac:	lsrcs	r0, r0, #1
   2dab0:	cmpcs	r0, r7
   2dab4:	bcs	2db00 <flatcc_builder_default_alloc@@Base+0x104>
   2dab8:	ldr	r0, [r4]
   2dabc:	mov	r1, r7
   2dac0:	bl	14e80 <realloc@plt>
   2dac4:	cmp	r0, #0
   2dac8:	beq	2dafc <flatcc_builder_default_alloc@@Base+0x100>
   2dacc:	mov	r5, r0
   2dad0:	cmp	r8, #0
   2dad4:	beq	2daf4 <flatcc_builder_default_alloc@@Base+0xf8>
   2dad8:	ldr	r1, [r4, #4]
   2dadc:	cmp	r7, r1
   2dae0:	bls	2daf4 <flatcc_builder_default_alloc@@Base+0xf8>
   2dae4:	add	r0, r5, r1
   2dae8:	sub	r2, r7, r1
   2daec:	mov	r1, #0
   2daf0:	bl	14eec <memset@plt>
   2daf4:	stm	r4, {r5, r7}
   2daf8:	b	2db00 <flatcc_builder_default_alloc@@Base+0x104>
   2dafc:	mvn	r6, #0
   2db00:	mov	r0, r6
   2db04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002db08 <flatcc_builder_flush_vtable_cache@@Base>:
   2db08:	push	{r4, r5, fp, lr}
   2db0c:	add	fp, sp, #8
   2db10:	mov	r4, r0
   2db14:	ldr	r0, [r0, #116]	; 0x74
   2db18:	cmp	r0, #0
   2db1c:	popeq	{r4, r5, fp, pc}
   2db20:	ldr	r0, [r4, #92]	; 0x5c
   2db24:	ldr	r2, [r4, #96]	; 0x60
   2db28:	mov	r1, #0
   2db2c:	mov	r5, #0
   2db30:	bl	14eec <memset@plt>
   2db34:	mov	r0, #16
   2db38:	str	r5, [r4, #120]	; 0x78
   2db3c:	str	r0, [r4, #124]	; 0x7c
   2db40:	pop	{r4, r5, fp, pc}

0002db44 <flatcc_builder_custom_init@@Base>:
   2db44:	push	{r4, r5, r6, r7, fp, lr}
   2db48:	add	fp, sp, #16
   2db4c:	mov	r6, r2
   2db50:	mov	r7, r1
   2db54:	mov	r1, #0
   2db58:	mov	r2, #232	; 0xe8
   2db5c:	mov	r5, r3
   2db60:	mov	r4, r0
   2db64:	bl	14eec <memset@plt>
   2db68:	ldr	r0, [fp, #8]
   2db6c:	cmp	r7, #0
   2db70:	bne	2db88 <flatcc_builder_custom_init@@Base+0x44>
   2db74:	movw	r7, #6320	; 0x18b0
   2db78:	mov	r1, #1
   2db7c:	add	r6, r4, #188	; 0xbc
   2db80:	movt	r7, #3
   2db84:	str	r1, [r4, #184]	; 0xb8
   2db88:	movw	r1, #55804	; 0xd9fc
   2db8c:	cmp	r5, #0
   2db90:	str	r6, [r4, #36]	; 0x24
   2db94:	str	r0, [r4, #40]	; 0x28
   2db98:	mov	r0, #0
   2db9c:	str	r7, [r4, #44]	; 0x2c
   2dba0:	movt	r1, #2
   2dba4:	movne	r1, r5
   2dba8:	str	r1, [r4, #48]	; 0x30
   2dbac:	pop	{r4, r5, r6, r7, fp, pc}

0002dbb0 <flatcc_builder_init@@Base>:
   2dbb0:	push	{r4, r5, fp, lr}
   2dbb4:	add	fp, sp, #8
   2dbb8:	mov	r1, #0
   2dbbc:	mov	r2, #232	; 0xe8
   2dbc0:	mov	r4, r0
   2dbc4:	mov	r5, #0
   2dbc8:	bl	14eec <memset@plt>
   2dbcc:	mov	r0, #1
   2dbd0:	movw	r1, #6320	; 0x18b0
   2dbd4:	add	r2, r4, #188	; 0xbc
   2dbd8:	str	r0, [r4, #184]	; 0xb8
   2dbdc:	movw	r0, #55804	; 0xd9fc
   2dbe0:	movt	r1, #3
   2dbe4:	str	r2, [r4, #36]	; 0x24
   2dbe8:	str	r5, [r4, #40]	; 0x28
   2dbec:	movt	r0, #2
   2dbf0:	str	r1, [r4, #44]	; 0x2c
   2dbf4:	str	r0, [r4, #48]	; 0x30
   2dbf8:	mov	r0, #0
   2dbfc:	pop	{r4, r5, fp, pc}

0002dc00 <flatcc_builder_custom_reset@@Base>:
   2dc00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dc04:	add	fp, sp, #28
   2dc08:	sub	sp, sp, #4
   2dc0c:	mov	r9, r2
   2dc10:	mov	r8, r1
   2dc14:	mov	sl, r0
   2dc18:	add	r7, r0, #52	; 0x34
   2dc1c:	mov	r5, #0
   2dc20:	add	r6, sl, r5, lsl #3
   2dc24:	ldr	r0, [r6, #52]	; 0x34
   2dc28:	cmp	r0, #0
   2dc2c:	beq	2dc74 <flatcc_builder_custom_reset@@Base+0x74>
   2dc30:	cmp	r9, #0
   2dc34:	cmpne	r5, #5
   2dc38:	beq	2dc64 <flatcc_builder_custom_reset@@Base+0x64>
   2dc3c:	ldr	r0, [sl, #40]	; 0x28
   2dc40:	ldr	r4, [sl, #48]	; 0x30
   2dc44:	mov	r1, r7
   2dc48:	mov	r2, #1
   2dc4c:	mov	r3, #1
   2dc50:	str	r5, [sp]
   2dc54:	blx	r4
   2dc58:	cmp	r0, #0
   2dc5c:	bne	2dd14 <flatcc_builder_custom_reset@@Base+0x114>
   2dc60:	ldr	r0, [r6, #52]	; 0x34
   2dc64:	ldr	r2, [r6, #56]	; 0x38
   2dc68:	mov	r1, #0
   2dc6c:	bl	14eec <memset@plt>
   2dc70:	b	2dc80 <flatcc_builder_custom_reset@@Base+0x80>
   2dc74:	ldr	r0, [r6, #56]	; 0x38
   2dc78:	cmp	r0, #0
   2dc7c:	bne	2dd24 <flatcc_builder_custom_reset@@Base+0x124>
   2dc80:	add	r5, r5, #1
   2dc84:	add	r7, r7, #8
   2dc88:	cmp	r5, #8
   2dc8c:	bne	2dc20 <flatcc_builder_custom_reset@@Base+0x20>
   2dc90:	mov	r0, #0
   2dc94:	vmov.i32	q8, #0	; 0x00000000
   2dc98:	mov	r5, #0
   2dc9c:	str	r0, [sl, #120]	; 0x78
   2dca0:	ldr	r1, [sl, #124]	; 0x7c
   2dca4:	cmp	r1, #0
   2dca8:	movne	r1, #16
   2dcac:	strne	r1, [sl, #124]	; 0x7c
   2dcb0:	add	r1, sl, #148	; 0x94
   2dcb4:	str	r0, [sl, #136]	; 0x88
   2dcb8:	str	r0, [sl, #140]	; 0x8c
   2dcbc:	strh	r0, [sl, #128]	; 0x80
   2dcc0:	str	r0, [sl, #32]
   2dcc4:	cmp	r8, #0
   2dcc8:	vst1.32	{d16-d17}, [r1]
   2dccc:	ldr	r2, [sl, #60]	; 0x3c
   2dcd0:	ldr	r1, [sl, #52]	; 0x34
   2dcd4:	ldr	r3, [sl, #76]	; 0x4c
   2dcd8:	str	r2, [sl, #16]
   2dcdc:	str	r0, [sl, #20]
   2dce0:	str	r0, [sl, #24]
   2dce4:	movne	r0, #0
   2dce8:	str	r3, [sl]
   2dcec:	str	r1, [sl, #4]
   2dcf0:	strne	r0, [sl, #172]	; 0xac
   2dcf4:	strne	r0, [sl, #176]	; 0xb0
   2dcf8:	strne	r0, [sl, #180]	; 0xb4
   2dcfc:	ldr	r0, [sl, #184]	; 0xb8
   2dd00:	cmp	r0, #0
   2dd04:	beq	2dd18 <flatcc_builder_custom_reset@@Base+0x118>
   2dd08:	add	r0, sl, #188	; 0xbc
   2dd0c:	bl	31780 <flatcc_emitter_reset@@Base>
   2dd10:	b	2dd18 <flatcc_builder_custom_reset@@Base+0x118>
   2dd14:	mvn	r5, #0
   2dd18:	mov	r0, r5
   2dd1c:	sub	sp, fp, #28
   2dd20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dd24:	movw	r0, #28608	; 0x6fc0
   2dd28:	movw	r1, #28626	; 0x6fd2
   2dd2c:	movw	r3, #28696	; 0x7018
   2dd30:	movw	r2, #434	; 0x1b2
   2dd34:	movt	r0, #4
   2dd38:	movt	r1, #4
   2dd3c:	movt	r3, #4
   2dd40:	bl	14f40 <__assert_fail@plt>

0002dd44 <flatcc_builder_reset@@Base>:
   2dd44:	mov	r1, #0
   2dd48:	mov	r2, #0
   2dd4c:	b	2dc00 <flatcc_builder_custom_reset@@Base>

0002dd50 <flatcc_builder_clear@@Base>:
   2dd50:	push	{r4, r5, r6, r7, fp, lr}
   2dd54:	add	fp, sp, #16
   2dd58:	sub	sp, sp, #8
   2dd5c:	mov	r7, r0
   2dd60:	add	r5, r0, #52	; 0x34
   2dd64:	mov	r6, #0
   2dd68:	ldr	r0, [r7, #40]	; 0x28
   2dd6c:	ldr	r4, [r7, #48]	; 0x30
   2dd70:	mov	r1, r5
   2dd74:	mov	r2, #0
   2dd78:	mov	r3, #0
   2dd7c:	str	r6, [sp]
   2dd80:	blx	r4
   2dd84:	add	r6, r6, #1
   2dd88:	add	r5, r5, #8
   2dd8c:	cmp	r6, #8
   2dd90:	bne	2dd68 <flatcc_builder_clear@@Base+0x18>
   2dd94:	ldr	r0, [r7, #184]	; 0xb8
   2dd98:	cmp	r0, #0
   2dd9c:	beq	2dda8 <flatcc_builder_clear@@Base+0x58>
   2dda0:	add	r0, r7, #188	; 0xbc
   2dda4:	bl	3184c <flatcc_emitter_clear@@Base>
   2dda8:	mov	r0, r7
   2ddac:	mov	r1, #0
   2ddb0:	mov	r2, #232	; 0xe8
   2ddb4:	sub	sp, fp, #16
   2ddb8:	pop	{r4, r5, r6, r7, fp, lr}
   2ddbc:	b	14eec <memset@plt>

0002ddc0 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2ddc0:	push	{r4, r5, r6, r7, fp, lr}
   2ddc4:	add	fp, sp, #16
   2ddc8:	sub	sp, sp, #8
   2ddcc:	mov	r4, r0
   2ddd0:	ldr	r0, [r0, #112]	; 0x70
   2ddd4:	add	r1, r1, #7
   2ddd8:	ldr	r7, [r4, #228]	; 0xe4
   2dddc:	bic	r5, r1, #3
   2dde0:	add	r6, r4, #108	; 0x6c
   2dde4:	add	r2, r7, r5
   2dde8:	cmp	r2, r0
   2ddec:	bls	2de14 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2ddf0:	ldr	r0, [r4, #40]	; 0x28
   2ddf4:	ldr	ip, [r4, #48]	; 0x30
   2ddf8:	mov	r1, #7
   2ddfc:	mov	r3, #0
   2de00:	str	r1, [sp]
   2de04:	mov	r1, r6
   2de08:	blx	ip
   2de0c:	cmp	r0, #0
   2de10:	bne	2de60 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   2de14:	ldr	r0, [r6]
   2de18:	adds	r6, r0, r7
   2de1c:	beq	2de50 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   2de20:	mov	r0, r6
   2de24:	mov	r1, #0
   2de28:	mov	r2, r5
   2de2c:	bl	14eec <memset@plt>
   2de30:	ldr	r0, [r4, #224]	; 0xe0
   2de34:	str	r0, [r6], #4
   2de38:	ldr	r0, [r4, #228]	; 0xe4
   2de3c:	add	r1, r0, #4
   2de40:	add	r0, r0, r5
   2de44:	str	r1, [r4, #224]	; 0xe0
   2de48:	str	r0, [r4, #228]	; 0xe4
   2de4c:	b	2de54 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   2de50:	mov	r6, #0
   2de54:	mov	r0, r6
   2de58:	sub	sp, fp, #16
   2de5c:	pop	{r4, r5, r6, r7, fp, pc}
   2de60:	movw	r0, #33144	; 0x8178
   2de64:	movw	r1, #28626	; 0x6fd2
   2de68:	movw	r3, #32690	; 0x7fb2
   2de6c:	mov	r2, #308	; 0x134
   2de70:	movt	r0, #4
   2de74:	movt	r1, #4
   2de78:	movt	r3, #4
   2de7c:	bl	14f40 <__assert_fail@plt>

0002de80 <flatcc_builder_enter_user_frame@@Base>:
   2de80:	push	{r4, r5, r6, r7, fp, lr}
   2de84:	add	fp, sp, #16
   2de88:	sub	sp, sp, #8
   2de8c:	mov	r4, r0
   2de90:	ldr	r0, [r0, #112]	; 0x70
   2de94:	add	r1, r1, #7
   2de98:	ldr	r7, [r4, #228]	; 0xe4
   2de9c:	bic	r5, r1, #3
   2dea0:	add	r6, r4, #108	; 0x6c
   2dea4:	add	r2, r7, r5
   2dea8:	cmp	r2, r0
   2deac:	bls	2ded4 <flatcc_builder_enter_user_frame@@Base+0x54>
   2deb0:	ldr	r0, [r4, #40]	; 0x28
   2deb4:	ldr	ip, [r4, #48]	; 0x30
   2deb8:	mov	r1, #7
   2debc:	mov	r3, #0
   2dec0:	str	r1, [sp]
   2dec4:	mov	r1, r6
   2dec8:	blx	ip
   2decc:	cmp	r0, #0
   2ded0:	bne	2df1c <flatcc_builder_enter_user_frame@@Base+0x9c>
   2ded4:	ldr	r0, [r6]
   2ded8:	adds	r6, r0, r7
   2dedc:	beq	2df10 <flatcc_builder_enter_user_frame@@Base+0x90>
   2dee0:	mov	r0, r6
   2dee4:	mov	r1, #0
   2dee8:	mov	r2, r5
   2deec:	bl	14eec <memset@plt>
   2def0:	ldr	r0, [r4, #224]	; 0xe0
   2def4:	str	r0, [r6]
   2def8:	ldr	r1, [r4, #228]	; 0xe4
   2defc:	add	r0, r1, #4
   2df00:	add	r1, r1, r5
   2df04:	str	r0, [r4, #224]	; 0xe0
   2df08:	str	r1, [r4, #228]	; 0xe4
   2df0c:	b	2df14 <flatcc_builder_enter_user_frame@@Base+0x94>
   2df10:	mov	r0, #0
   2df14:	sub	sp, fp, #16
   2df18:	pop	{r4, r5, r6, r7, fp, pc}
   2df1c:	movw	r0, #33144	; 0x8178
   2df20:	movw	r1, #28626	; 0x6fd2
   2df24:	movw	r3, #32690	; 0x7fb2
   2df28:	mov	r2, #308	; 0x134
   2df2c:	movt	r0, #4
   2df30:	movt	r1, #4
   2df34:	movt	r3, #4
   2df38:	bl	14f40 <__assert_fail@plt>

0002df3c <flatcc_builder_exit_user_frame@@Base>:
   2df3c:	push	{fp, lr}
   2df40:	mov	fp, sp
   2df44:	ldr	r1, [r0, #224]	; 0xe0
   2df48:	cmp	r1, #0
   2df4c:	subne	r2, r1, #4
   2df50:	strne	r2, [r0, #228]	; 0xe4
   2df54:	ldrne	r2, [r0, #108]	; 0x6c
   2df58:	addne	r1, r2, r1
   2df5c:	ldrne	r1, [r1, #-4]
   2df60:	strne	r1, [r0, #224]	; 0xe0
   2df64:	movne	r0, r1
   2df68:	popne	{fp, pc}
   2df6c:	movw	r0, #28758	; 0x7056
   2df70:	movw	r1, #28626	; 0x6fd2
   2df74:	movw	r3, #28783	; 0x706f
   2df78:	movw	r2, #542	; 0x21e
   2df7c:	movt	r0, #4
   2df80:	movt	r1, #4
   2df84:	movt	r3, #4
   2df88:	bl	14f40 <__assert_fail@plt>

0002df8c <flatcc_builder_exit_user_frame_at@@Base>:
   2df8c:	push	{fp, lr}
   2df90:	mov	fp, sp
   2df94:	ldr	r2, [r0, #224]	; 0xe0
   2df98:	cmp	r2, r1
   2df9c:	bcc	2dfac <flatcc_builder_exit_user_frame_at@@Base+0x20>
   2dfa0:	str	r1, [r0, #224]	; 0xe0
   2dfa4:	pop	{fp, lr}
   2dfa8:	b	2df3c <flatcc_builder_exit_user_frame@@Base>
   2dfac:	movw	r0, #28841	; 0x70a9
   2dfb0:	movw	r1, #28626	; 0x6fd2
   2dfb4:	movw	r3, #28872	; 0x70c8
   2dfb8:	movw	r2, #551	; 0x227
   2dfbc:	movt	r0, #4
   2dfc0:	movt	r1, #4
   2dfc4:	movt	r3, #4
   2dfc8:	bl	14f40 <__assert_fail@plt>

0002dfcc <flatcc_builder_get_current_user_frame@@Base>:
   2dfcc:	ldr	r0, [r0, #224]	; 0xe0
   2dfd0:	bx	lr

0002dfd4 <flatcc_builder_get_user_frame_ptr@@Base>:
   2dfd4:	ldr	r0, [r0, #108]	; 0x6c
   2dfd8:	add	r0, r0, r1
   2dfdc:	bx	lr

0002dfe0 <flatcc_builder_embed_buffer@@Base>:
   2dfe0:	push	{r4, r5, r6, r7, fp, lr}
   2dfe4:	add	fp, sp, #16
   2dfe8:	sub	sp, sp, #88	; 0x58
   2dfec:	mov	r4, r0
   2dff0:	ldr	r0, [fp, #8]
   2dff4:	mov	r5, r3
   2dff8:	mov	r7, r2
   2dffc:	mov	r2, r1
   2e000:	sub	r1, fp, #18
   2e004:	strh	r0, [fp, #-18]	; 0xffffffee
   2e008:	mov	r0, r4
   2e00c:	ldr	r3, [r4, #152]	; 0x98
   2e010:	cmp	r3, #0
   2e014:	movwne	r3, #1
   2e018:	bl	2e144 <flatcc_builder_embed_buffer@@Base+0x164>
   2e01c:	ldr	r1, [fp, #12]
   2e020:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2e024:	ldr	r0, [r4, #136]	; 0x88
   2e028:	mov	r2, #0
   2e02c:	str	r2, [sp, #12]
   2e030:	str	r2, [sp, #8]
   2e034:	and	r1, r1, #2
   2e038:	sub	r3, r3, #1
   2e03c:	add	r1, r5, r1, lsl #1
   2e040:	sub	r1, r0, r1
   2e044:	and	r3, r1, r3
   2e048:	add	r1, r3, r5
   2e04c:	str	r1, [fp, #-24]	; 0xffffffe8
   2e050:	ldr	r1, [r4, #152]	; 0x98
   2e054:	cmp	r1, #0
   2e058:	mov	r1, #0
   2e05c:	beq	2e07c <flatcc_builder_embed_buffer@@Base+0x9c>
   2e060:	mov	r1, #4
   2e064:	sub	r2, fp, #24
   2e068:	str	r1, [sp, #20]
   2e06c:	str	r2, [sp, #16]
   2e070:	mov	r2, #1
   2e074:	str	r1, [sp, #8]
   2e078:	str	r2, [sp, #12]
   2e07c:	cmp	r5, #0
   2e080:	beq	2e0a4 <flatcc_builder_embed_buffer@@Base+0xc4>
   2e084:	add	r6, sp, #8
   2e088:	add	r1, r1, r5
   2e08c:	add	r6, r6, r2, lsl #3
   2e090:	add	r2, r2, #1
   2e094:	str	r1, [sp, #8]
   2e098:	str	r7, [r6, #8]
   2e09c:	str	r5, [r6, #12]
   2e0a0:	str	r2, [sp, #12]
   2e0a4:	cmp	r3, #0
   2e0a8:	beq	2e0d4 <flatcc_builder_embed_buffer@@Base+0xf4>
   2e0ac:	add	r7, sp, #8
   2e0b0:	movw	r6, #28096	; 0x6dc0
   2e0b4:	add	r1, r1, r3
   2e0b8:	add	r7, r7, r2, lsl #3
   2e0bc:	movt	r6, #4
   2e0c0:	add	r2, r2, #1
   2e0c4:	str	r1, [sp, #8]
   2e0c8:	str	r6, [r7, #8]
   2e0cc:	str	r3, [r7, #12]
   2e0d0:	str	r2, [sp, #12]
   2e0d4:	cmp	r1, #0
   2e0d8:	ble	2e130 <flatcc_builder_embed_buffer@@Base+0x150>
   2e0dc:	sub	r5, r0, r1
   2e0e0:	ldr	r0, [r4, #36]	; 0x24
   2e0e4:	ldr	r7, [r4, #44]	; 0x2c
   2e0e8:	str	r1, [sp]
   2e0ec:	add	r1, sp, #8
   2e0f0:	add	r1, r1, #8
   2e0f4:	mov	r3, r5
   2e0f8:	blx	r7
   2e0fc:	cmp	r0, #0
   2e100:	streq	r5, [r4, #136]	; 0x88
   2e104:	moveq	r0, r5
   2e108:	subeq	sp, fp, #16
   2e10c:	popeq	{r4, r5, r6, r7, fp, pc}
   2e110:	movw	r0, #33144	; 0x8178
   2e114:	movw	r1, #28626	; 0x6fd2
   2e118:	movw	r3, #32823	; 0x8037
   2e11c:	movw	r2, #651	; 0x28b
   2e120:	movt	r0, #4
   2e124:	movt	r1, #4
   2e128:	movt	r3, #4
   2e12c:	bl	14f40 <__assert_fail@plt>
   2e130:	movw	r0, #33144	; 0x8178
   2e134:	movw	r1, #28626	; 0x6fd2
   2e138:	movw	r3, #32823	; 0x8037
   2e13c:	movw	r2, #647	; 0x287
   2e140:	b	2e120 <flatcc_builder_embed_buffer@@Base+0x140>
   2e144:	push	{r4, sl, fp, lr}
   2e148:	add	fp, sp, #8
   2e14c:	sub	sp, sp, #80	; 0x50
   2e150:	cmp	r2, #0
   2e154:	bne	2e164 <flatcc_builder_embed_buffer@@Base+0x184>
   2e158:	ldrh	r2, [r0, #132]	; 0x84
   2e15c:	cmp	r2, #0
   2e160:	movweq	r2, #1
   2e164:	ldrh	r4, [r1]
   2e168:	cmp	r4, #4
   2e16c:	movwcc	r4, #4
   2e170:	cmpcs	r4, r2
   2e174:	bcs	2e184 <flatcc_builder_embed_buffer@@Base+0x1a4>
   2e178:	cmp	r4, r2
   2e17c:	movcc	r4, r2
   2e180:	strh	r4, [r1]
   2e184:	cmp	r3, #0
   2e188:	bne	2e1fc <flatcc_builder_embed_buffer@@Base+0x21c>
   2e18c:	ldr	r4, [r0, #140]	; 0x8c
   2e190:	sub	r1, r2, #1
   2e194:	ands	r1, r4, r1
   2e198:	beq	2e1fc <flatcc_builder_embed_buffer@@Base+0x21c>
   2e19c:	movw	r2, #28096	; 0x6dc0
   2e1a0:	str	r1, [sp, #20]
   2e1a4:	cmn	r1, #1
   2e1a8:	movt	r2, #4
   2e1ac:	str	r2, [sp, #16]
   2e1b0:	mov	r2, #1
   2e1b4:	str	r1, [sp, #8]
   2e1b8:	str	r2, [sp, #12]
   2e1bc:	add	r2, r1, r4
   2e1c0:	str	r2, [r0, #140]	; 0x8c
   2e1c4:	ble	2e204 <flatcc_builder_embed_buffer@@Base+0x224>
   2e1c8:	ldr	r2, [r0, #36]	; 0x24
   2e1cc:	ldr	ip, [r0, #44]	; 0x2c
   2e1d0:	add	r0, sp, #8
   2e1d4:	str	r1, [sp]
   2e1d8:	mov	r3, r4
   2e1dc:	add	r1, r0, #8
   2e1e0:	mov	r0, r2
   2e1e4:	mov	r2, #1
   2e1e8:	blx	ip
   2e1ec:	cmp	r0, #0
   2e1f0:	bne	2e218 <flatcc_builder_embed_buffer@@Base+0x238>
   2e1f4:	cmn	r4, #1
   2e1f8:	beq	2e238 <flatcc_builder_embed_buffer@@Base+0x258>
   2e1fc:	sub	sp, fp, #8
   2e200:	pop	{r4, sl, fp, pc}
   2e204:	movw	r0, #33144	; 0x8178
   2e208:	movw	r1, #28626	; 0x6fd2
   2e20c:	movw	r3, #33011	; 0x80f3
   2e210:	movw	r2, #673	; 0x2a1
   2e214:	b	2e228 <flatcc_builder_embed_buffer@@Base+0x248>
   2e218:	movw	r0, #33144	; 0x8178
   2e21c:	movw	r1, #28626	; 0x6fd2
   2e220:	movw	r3, #33011	; 0x80f3
   2e224:	movw	r2, #677	; 0x2a5
   2e228:	movt	r0, #4
   2e22c:	movt	r1, #4
   2e230:	movt	r3, #4
   2e234:	bl	14f40 <__assert_fail@plt>
   2e238:	movw	r0, #33144	; 0x8178
   2e23c:	movw	r1, #28626	; 0x6fd2
   2e240:	movw	r3, #32757	; 0x7ff5
   2e244:	movw	r2, #702	; 0x2be
   2e248:	movt	r0, #4
   2e24c:	movt	r1, #4
   2e250:	movt	r3, #4
   2e254:	bl	14f40 <__assert_fail@plt>

0002e258 <flatcc_builder_create_buffer@@Base>:
   2e258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e25c:	add	fp, sp, #28
   2e260:	sub	sp, sp, #100	; 0x64
   2e264:	ldr	sl, [fp, #12]
   2e268:	mov	r4, r0
   2e26c:	ldr	r0, [fp, #8]
   2e270:	mov	r7, r1
   2e274:	mov	r5, #0
   2e278:	mov	r6, r3
   2e27c:	sub	r1, fp, #30
   2e280:	str	r5, [sp, #12]
   2e284:	and	r9, sl, #1
   2e288:	strh	r0, [fp, #-30]	; 0xffffffe2
   2e28c:	mov	r0, r4
   2e290:	mov	r3, r9
   2e294:	bl	2e144 <flatcc_builder_embed_buffer@@Base+0x164>
   2e298:	ldrh	r0, [r4, #128]	; 0x80
   2e29c:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2e2a0:	str	r6, [sp, #8]
   2e2a4:	cmp	r0, r1
   2e2a8:	strhcc	r1, [r4, #128]	; 0x80
   2e2ac:	cmp	r7, #0
   2e2b0:	beq	2e2cc <flatcc_builder_create_buffer@@Base+0x74>
   2e2b4:	ldr	r5, [r7]
   2e2b8:	cmp	r5, #0
   2e2bc:	str	r5, [sp, #12]
   2e2c0:	movwne	r5, #1
   2e2c4:	lsl	r7, r5, #2
   2e2c8:	b	2e2d0 <flatcc_builder_create_buffer@@Base+0x78>
   2e2cc:	mov	r7, #0
   2e2d0:	ldr	r0, [r4, #136]	; 0x88
   2e2d4:	and	r2, sl, #2
   2e2d8:	mov	r3, #0
   2e2dc:	sub	r6, r1, #1
   2e2e0:	ands	ip, sl, #3
   2e2e4:	mov	sl, #4
   2e2e8:	mov	r1, #4
   2e2ec:	str	r3, [sp, #20]
   2e2f0:	str	r3, [sp, #16]
   2e2f4:	sub	r2, r0, r2, lsl #1
   2e2f8:	sub	r2, r2, r7
   2e2fc:	sub	r2, r2, #4
   2e300:	beq	2e324 <flatcc_builder_create_buffer@@Base+0xcc>
   2e304:	mov	r1, #4
   2e308:	sub	r3, fp, #40	; 0x28
   2e30c:	str	r1, [sp, #28]
   2e310:	str	r3, [sp, #24]
   2e314:	str	r1, [sp, #16]
   2e318:	mov	r3, #1
   2e31c:	mov	r1, #8
   2e320:	str	r3, [sp, #20]
   2e324:	add	lr, sp, #16
   2e328:	and	r6, r2, r6
   2e32c:	sub	r8, fp, #36	; 0x24
   2e330:	str	r1, [sp, #16]
   2e334:	cmp	r5, #0
   2e338:	add	r2, lr, r3, lsl #3
   2e33c:	str	r8, [r2, #8]
   2e340:	str	sl, [r2, #12]
   2e344:	add	r2, r3, #1
   2e348:	str	r2, [sp, #20]
   2e34c:	beq	2e370 <flatcc_builder_create_buffer@@Base+0x118>
   2e350:	add	r2, lr, r2, lsl #3
   2e354:	add	r1, r1, r7
   2e358:	add	r5, sp, #12
   2e35c:	str	r1, [sp, #16]
   2e360:	str	r5, [r2, #8]
   2e364:	str	r7, [r2, #12]
   2e368:	orr	r2, r3, #2
   2e36c:	str	r2, [sp, #20]
   2e370:	cmp	r6, #0
   2e374:	beq	2e39c <flatcc_builder_create_buffer@@Base+0x144>
   2e378:	movw	r5, #28096	; 0x6dc0
   2e37c:	add	r3, lr, r2, lsl #3
   2e380:	add	r1, r1, r6
   2e384:	add	r2, r2, #1
   2e388:	movt	r5, #4
   2e38c:	str	r1, [sp, #16]
   2e390:	str	r5, [r3, #8]
   2e394:	str	r6, [r3, #12]
   2e398:	str	r2, [sp, #20]
   2e39c:	sub	r7, r0, r1
   2e3a0:	cmp	ip, #0
   2e3a4:	mov	r6, #144	; 0x90
   2e3a8:	ldr	r3, [sp, #8]
   2e3ac:	mov	r0, r7
   2e3b0:	addne	r0, r0, #4
   2e3b4:	cmp	r9, #0
   2e3b8:	movweq	r6, #140	; 0x8c
   2e3bc:	cmp	r1, #0
   2e3c0:	ldr	r6, [r4, r6]
   2e3c4:	sub	r3, r3, r0
   2e3c8:	str	r3, [fp, #-36]	; 0xffffffdc
   2e3cc:	sub	r0, r6, r0
   2e3d0:	str	r0, [fp, #-40]	; 0xffffffd8
   2e3d4:	ble	2e42c <flatcc_builder_create_buffer@@Base+0x1d4>
   2e3d8:	ldr	r0, [r4, #36]	; 0x24
   2e3dc:	ldr	r6, [r4, #44]	; 0x2c
   2e3e0:	str	r1, [sp]
   2e3e4:	add	r1, lr, #8
   2e3e8:	mov	r3, r7
   2e3ec:	blx	r6
   2e3f0:	cmp	r0, #0
   2e3f4:	bne	2e440 <flatcc_builder_create_buffer@@Base+0x1e8>
   2e3f8:	cmp	r7, #0
   2e3fc:	str	r7, [r4, #136]	; 0x88
   2e400:	movne	r0, r7
   2e404:	subne	sp, fp, #28
   2e408:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e40c:	movw	r0, #33144	; 0x8178
   2e410:	movw	r1, #28626	; 0x6fd2
   2e414:	movw	r3, #28941	; 0x710d
   2e418:	mov	r2, #772	; 0x304
   2e41c:	movt	r0, #4
   2e420:	movt	r1, #4
   2e424:	movt	r3, #4
   2e428:	bl	14f40 <__assert_fail@plt>
   2e42c:	movw	r0, #33144	; 0x8178
   2e430:	movw	r1, #28626	; 0x6fd2
   2e434:	movw	r3, #32823	; 0x8037
   2e438:	movw	r2, #647	; 0x287
   2e43c:	b	2e450 <flatcc_builder_create_buffer@@Base+0x1f8>
   2e440:	movw	r0, #33144	; 0x8178
   2e444:	movw	r1, #28626	; 0x6fd2
   2e448:	movw	r3, #32823	; 0x8037
   2e44c:	movw	r2, #651	; 0x28b
   2e450:	movt	r0, #4
   2e454:	movt	r1, #4
   2e458:	movt	r3, #4
   2e45c:	bl	14f40 <__assert_fail@plt>

0002e460 <flatcc_builder_create_struct@@Base>:
   2e460:	push	{r4, r5, r6, sl, fp, lr}
   2e464:	add	fp, sp, #16
   2e468:	sub	sp, sp, #80	; 0x50
   2e46c:	cmp	r3, #0
   2e470:	beq	2e548 <flatcc_builder_create_struct@@Base+0xe8>
   2e474:	mov	r5, r0
   2e478:	ldrh	r0, [r0, #128]	; 0x80
   2e47c:	mov	r4, #0
   2e480:	cmp	r0, r3
   2e484:	strhcc	r3, [r5, #128]	; 0x80
   2e488:	sub	r3, r3, #1
   2e48c:	cmp	r2, #0
   2e490:	ldr	r0, [r5, #136]	; 0x88
   2e494:	str	r4, [sp, #12]
   2e498:	str	r4, [sp, #8]
   2e49c:	movne	r4, #1
   2e4a0:	strne	r2, [sp, #20]
   2e4a4:	strne	r1, [sp, #16]
   2e4a8:	strne	r2, [sp, #8]
   2e4ac:	strne	r4, [sp, #12]
   2e4b0:	sub	r6, r0, r2
   2e4b4:	and	r3, r6, r3
   2e4b8:	cmp	r3, #0
   2e4bc:	beq	2e4e8 <flatcc_builder_create_struct@@Base+0x88>
   2e4c0:	add	r1, sp, #8
   2e4c4:	movw	r6, #28096	; 0x6dc0
   2e4c8:	add	r2, r3, r2
   2e4cc:	add	r1, r1, r4, lsl #3
   2e4d0:	movt	r6, #4
   2e4d4:	add	r4, r4, #1
   2e4d8:	str	r2, [sp, #8]
   2e4dc:	str	r6, [r1, #8]
   2e4e0:	str	r3, [r1, #12]
   2e4e4:	str	r4, [sp, #12]
   2e4e8:	cmp	r2, #0
   2e4ec:	ble	2e568 <flatcc_builder_create_struct@@Base+0x108>
   2e4f0:	sub	r6, r0, r2
   2e4f4:	ldr	r0, [r5, #36]	; 0x24
   2e4f8:	ldr	ip, [r5, #44]	; 0x2c
   2e4fc:	add	r1, sp, #8
   2e500:	str	r2, [sp]
   2e504:	mov	r2, r4
   2e508:	add	r1, r1, #8
   2e50c:	mov	r3, r6
   2e510:	blx	ip
   2e514:	cmp	r0, #0
   2e518:	streq	r6, [r5, #136]	; 0x88
   2e51c:	moveq	r0, r6
   2e520:	subeq	sp, fp, #16
   2e524:	popeq	{r4, r5, r6, sl, fp, pc}
   2e528:	movw	r0, #33144	; 0x8178
   2e52c:	movw	r1, #28626	; 0x6fd2
   2e530:	movw	r3, #32823	; 0x8037
   2e534:	movw	r2, #651	; 0x28b
   2e538:	movt	r0, #4
   2e53c:	movt	r1, #4
   2e540:	movt	r3, #4
   2e544:	bl	14f40 <__assert_fail@plt>
   2e548:	movw	r0, #29072	; 0x7190
   2e54c:	movw	r1, #28626	; 0x6fd2
   2e550:	movw	r3, #29083	; 0x719b
   2e554:	movw	r2, #783	; 0x30f
   2e558:	movt	r0, #4
   2e55c:	movt	r1, #4
   2e560:	movt	r3, #4
   2e564:	bl	14f40 <__assert_fail@plt>
   2e568:	movw	r0, #33144	; 0x8178
   2e56c:	movw	r1, #28626	; 0x6fd2
   2e570:	movw	r3, #32823	; 0x8037
   2e574:	movw	r2, #647	; 0x287
   2e578:	b	2e538 <flatcc_builder_create_struct@@Base+0xd8>

0002e57c <flatcc_builder_start_buffer@@Base>:
   2e57c:	push	{r4, r5, r6, r7, fp, lr}
   2e580:	add	fp, sp, #16
   2e584:	mov	r5, r1
   2e588:	ldrh	r1, [r0, #128]	; 0x80
   2e58c:	mov	r6, r3
   2e590:	mov	r7, r2
   2e594:	mov	r4, r0
   2e598:	bl	2e638 <flatcc_builder_start_buffer@@Base+0xbc>
   2e59c:	mov	r1, r0
   2e5a0:	mvn	r0, #0
   2e5a4:	cmp	r1, #0
   2e5a8:	popne	{r4, r5, r6, r7, fp, pc}
   2e5ac:	mov	r0, #1
   2e5b0:	cmp	r5, #0
   2e5b4:	strh	r0, [r4, #128]	; 0x80
   2e5b8:	ldrh	r1, [r4, #132]	; 0x84
   2e5bc:	ldr	r2, [r4, #32]
   2e5c0:	strh	r1, [r2, #34]	; 0x22
   2e5c4:	strh	r7, [r4, #132]	; 0x84
   2e5c8:	ldrh	r1, [r4, #164]	; 0xa4
   2e5cc:	ldr	r2, [r4, #32]
   2e5d0:	strh	r1, [r2, #32]
   2e5d4:	strh	r6, [r4, #164]	; 0xa4
   2e5d8:	ldr	r1, [r4, #32]
   2e5dc:	ldr	r2, [r4, #144]	; 0x90
   2e5e0:	str	r2, [r1, #20]
   2e5e4:	ldr	r1, [r4, #32]
   2e5e8:	ldr	r2, [r4, #152]	; 0x98
   2e5ec:	str	r2, [r1, #28]
   2e5f0:	ldr	r3, [r4, #148]	; 0x94
   2e5f4:	ldr	r1, [r4, #32]
   2e5f8:	ldr	r2, [r4, #136]	; 0x88
   2e5fc:	ldr	r7, [r4, #168]	; 0xa8
   2e600:	add	r6, r3, #1
   2e604:	str	r2, [r4, #144]	; 0x90
   2e608:	str	r6, [r4, #148]	; 0x94
   2e60c:	str	r3, [r4, #152]	; 0x98
   2e610:	str	r7, [r1, #16]
   2e614:	movw	r1, #28096	; 0x6dc0
   2e618:	movt	r1, #4
   2e61c:	movne	r1, r5
   2e620:	ldr	r1, [r1]
   2e624:	str	r1, [r4, #168]	; 0xa8
   2e628:	ldr	r1, [r4, #32]
   2e62c:	strh	r0, [r1, #14]
   2e630:	mov	r0, #0
   2e634:	pop	{r4, r5, r6, r7, fp, pc}
   2e638:	push	{r4, r5, r6, r7, fp, lr}
   2e63c:	add	fp, sp, #16
   2e640:	sub	sp, sp, #8
   2e644:	mov	r5, r1
   2e648:	ldr	r1, [r0, #156]	; 0x9c
   2e64c:	ldr	r2, [r0, #160]	; 0xa0
   2e650:	mov	r4, r0
   2e654:	add	r0, r1, #1
   2e658:	cmp	r1, r2
   2e65c:	str	r0, [r4, #156]	; 0x9c
   2e660:	bge	2e674 <flatcc_builder_start_buffer@@Base+0xf8>
   2e664:	ldr	r0, [r4, #32]
   2e668:	add	r0, r0, #36	; 0x24
   2e66c:	str	r0, [r4, #32]
   2e670:	b	2e708 <flatcc_builder_start_buffer@@Base+0x18c>
   2e674:	ldr	r2, [r4, #176]	; 0xb0
   2e678:	mvn	r6, #0
   2e67c:	cmp	r2, #1
   2e680:	cmpge	r1, r2
   2e684:	bge	2e740 <flatcc_builder_start_buffer@@Base+0x1c4>
   2e688:	add	r7, r0, r0, lsl #3
   2e68c:	ldr	r0, [r4, #88]	; 0x58
   2e690:	lsl	r2, r7, #2
   2e694:	cmp	r2, r0
   2e698:	bls	2e6c0 <flatcc_builder_start_buffer@@Base+0x144>
   2e69c:	ldr	r0, [r4, #40]	; 0x28
   2e6a0:	ldr	ip, [r4, #48]	; 0x30
   2e6a4:	mov	r3, #4
   2e6a8:	add	r1, r4, #84	; 0x54
   2e6ac:	str	r3, [sp]
   2e6b0:	mov	r3, #0
   2e6b4:	blx	ip
   2e6b8:	cmp	r0, #0
   2e6bc:	bne	2e74c <flatcc_builder_start_buffer@@Base+0x1d0>
   2e6c0:	ldr	r1, [r4, #84]	; 0x54
   2e6c4:	mvn	r0, #35	; 0x23
   2e6c8:	add	r0, r0, r7, lsl #2
   2e6cc:	adds	r0, r0, r1
   2e6d0:	str	r0, [r4, #32]
   2e6d4:	beq	2e740 <flatcc_builder_start_buffer@@Base+0x1c4>
   2e6d8:	ldr	r1, [r4, #88]	; 0x58
   2e6dc:	movw	r3, #36409	; 0x8e39
   2e6e0:	ldr	r2, [r4, #176]	; 0xb0
   2e6e4:	movt	r3, #14563	; 0x38e3
   2e6e8:	umull	r1, r3, r1, r3
   2e6ec:	cmp	r2, r3, lsr #3
   2e6f0:	lsr	r1, r3, #3
   2e6f4:	mov	r3, r1
   2e6f8:	movlt	r3, r2
   2e6fc:	cmp	r2, #0
   2e700:	movle	r3, r1
   2e704:	str	r3, [r4, #160]	; 0xa0
   2e708:	ldr	r1, [r4, #20]
   2e70c:	mvn	r3, #3
   2e710:	mov	r6, #0
   2e714:	str	r1, [r0, #8]
   2e718:	ldrh	r2, [r4, #130]	; 0x82
   2e71c:	strh	r2, [r0, #12]
   2e720:	strh	r5, [r4, #130]	; 0x82
   2e724:	ldr	r2, [r4, #28]
   2e728:	stm	r0, {r2, r3}
   2e72c:	add	r0, r1, r2
   2e730:	str	r6, [r4, #20]
   2e734:	add	r0, r0, #7
   2e738:	bic	r0, r0, #7
   2e73c:	str	r0, [r4, #28]
   2e740:	mov	r0, r6
   2e744:	sub	sp, fp, #16
   2e748:	pop	{r4, r5, r6, r7, fp, pc}
   2e74c:	movw	r0, #33144	; 0x8178
   2e750:	movw	r1, #28626	; 0x6fd2
   2e754:	movw	r3, #32690	; 0x7fb2
   2e758:	mov	r2, #308	; 0x134
   2e75c:	movt	r0, #4
   2e760:	movt	r1, #4
   2e764:	movt	r3, #4
   2e768:	bl	14f40 <__assert_fail@plt>

0002e76c <flatcc_builder_end_buffer@@Base>:
   2e76c:	push	{r4, r5, r6, sl, fp, lr}
   2e770:	add	fp, sp, #16
   2e774:	sub	sp, sp, #8
   2e778:	mov	r4, r0
   2e77c:	ldr	r0, [r0, #32]
   2e780:	ldrh	r0, [r0, #14]
   2e784:	cmp	r0, #1
   2e788:	bne	2e87c <flatcc_builder_end_buffer@@Base+0x110>
   2e78c:	mov	r3, r1
   2e790:	ldr	r1, [r4, #152]	; 0x98
   2e794:	ldrh	r0, [r4, #164]	; 0xa4
   2e798:	ldrh	r2, [r4, #132]	; 0x84
   2e79c:	cmp	r1, #0
   2e7a0:	ldrh	r1, [r4, #128]	; 0x80
   2e7a4:	and	r0, r0, #2
   2e7a8:	orrne	r0, r0, #1
   2e7ac:	cmp	r1, r2
   2e7b0:	movcc	r1, r2
   2e7b4:	strhcc	r2, [r4, #128]	; 0x80
   2e7b8:	str	r0, [sp, #4]
   2e7bc:	mov	r0, r4
   2e7c0:	str	r1, [sp]
   2e7c4:	add	r1, r4, #168	; 0xa8
   2e7c8:	bl	2e258 <flatcc_builder_create_buffer@@Base>
   2e7cc:	mov	r6, r0
   2e7d0:	cmp	r0, #0
   2e7d4:	beq	2e870 <flatcc_builder_end_buffer@@Base+0x104>
   2e7d8:	ldr	r1, [r4, #32]
   2e7dc:	ldr	r0, [r4, #16]
   2e7e0:	ldr	r2, [r4, #20]
   2e7e4:	ldr	r3, [r1, #20]
   2e7e8:	str	r3, [r4, #144]	; 0x90
   2e7ec:	ldr	r3, [r1, #28]
   2e7f0:	str	r3, [r4, #152]	; 0x98
   2e7f4:	ldr	r3, [r1, #16]
   2e7f8:	str	r3, [r4, #168]	; 0xa8
   2e7fc:	ldrh	r1, [r1, #32]
   2e800:	strh	r1, [r4, #164]	; 0xa4
   2e804:	mov	r1, #0
   2e808:	bl	14eec <memset@plt>
   2e80c:	ldr	r0, [r4, #32]
   2e810:	ldr	r1, [r4, #60]	; 0x3c
   2e814:	ldr	r2, [r4, #64]	; 0x40
   2e818:	ldr	r3, [r0, #8]
   2e81c:	str	r3, [r4, #20]
   2e820:	ldr	r3, [r0]
   2e824:	str	r3, [r4, #28]
   2e828:	add	r1, r1, r3
   2e82c:	ldr	r5, [r0, #4]
   2e830:	str	r1, [r4, #16]
   2e834:	sub	r1, r2, r3
   2e838:	cmp	r1, r5
   2e83c:	movhi	r1, r5
   2e840:	str	r1, [r4, #24]
   2e844:	ldrh	r1, [r4, #130]	; 0x82
   2e848:	ldrh	r2, [r4, #128]	; 0x80
   2e84c:	cmp	r2, r1
   2e850:	strhcc	r1, [r4, #128]	; 0x80
   2e854:	ldrh	r1, [r0, #12]
   2e858:	sub	r0, r0, #36	; 0x24
   2e85c:	str	r0, [r4, #32]
   2e860:	strh	r1, [r4, #130]	; 0x82
   2e864:	ldr	r0, [r4, #156]	; 0x9c
   2e868:	sub	r0, r0, #1
   2e86c:	str	r0, [r4, #156]	; 0x9c
   2e870:	mov	r0, r6
   2e874:	sub	sp, fp, #16
   2e878:	pop	{r4, r5, r6, sl, fp, pc}
   2e87c:	movw	r0, #29185	; 0x7201
   2e880:	movw	r1, #28626	; 0x6fd2
   2e884:	movw	r3, #29229	; 0x722d
   2e888:	movw	r2, #838	; 0x346
   2e88c:	movt	r0, #4
   2e890:	movt	r1, #4
   2e894:	movt	r3, #4
   2e898:	bl	14f40 <__assert_fail@plt>

0002e89c <flatcc_builder_start_struct@@Base>:
   2e89c:	push	{r4, r5, r6, r7, fp, lr}
   2e8a0:	add	fp, sp, #16
   2e8a4:	mov	r6, r1
   2e8a8:	mov	r1, r2
   2e8ac:	mov	r4, r0
   2e8b0:	bl	2e638 <flatcc_builder_start_buffer@@Base+0xbc>
   2e8b4:	mov	r5, #0
   2e8b8:	cmp	r0, #0
   2e8bc:	bne	2e92c <flatcc_builder_start_struct@@Base+0x90>
   2e8c0:	ldr	r1, [r4, #32]
   2e8c4:	mov	r0, #2
   2e8c8:	strh	r0, [r1, #14]
   2e8cc:	ldr	r2, [r4, #28]
   2e8d0:	ldr	r0, [r4, #60]	; 0x3c
   2e8d4:	ldr	r3, [r4, #64]	; 0x40
   2e8d8:	add	r0, r0, r2
   2e8dc:	sub	r2, r3, r2
   2e8e0:	mvn	r3, #3
   2e8e4:	cmn	r2, #4
   2e8e8:	str	r0, [r4, #16]
   2e8ec:	movcs	r2, r3
   2e8f0:	str	r2, [r4, #24]
   2e8f4:	str	r3, [r1, #4]
   2e8f8:	ldr	r7, [r4, #20]
   2e8fc:	add	r1, r7, r6
   2e900:	cmp	r1, r2
   2e904:	str	r1, [r4, #20]
   2e908:	bcc	2e928 <flatcc_builder_start_struct@@Base+0x8c>
   2e90c:	add	r1, r1, #1
   2e910:	mov	r0, r4
   2e914:	mvn	r2, #3
   2e918:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   2e91c:	cmp	r0, #0
   2e920:	bne	2e92c <flatcc_builder_start_struct@@Base+0x90>
   2e924:	ldr	r0, [r4, #16]
   2e928:	add	r5, r0, r7
   2e92c:	mov	r0, r5
   2e930:	pop	{r4, r5, r6, r7, fp, pc}

0002e934 <flatcc_builder_struct_edit@@Base>:
   2e934:	ldr	r0, [r0, #16]
   2e938:	bx	lr

0002e93c <flatcc_builder_end_struct@@Base>:
   2e93c:	push	{r4, r5, fp, lr}
   2e940:	add	fp, sp, #8
   2e944:	mov	r4, r0
   2e948:	ldr	r0, [r0, #32]
   2e94c:	ldrh	r0, [r0, #14]
   2e950:	cmp	r0, #2
   2e954:	bne	2e9f4 <flatcc_builder_end_struct@@Base+0xb8>
   2e958:	ldrh	r3, [r4, #130]	; 0x82
   2e95c:	ldr	r1, [r4, #16]
   2e960:	ldr	r2, [r4, #20]
   2e964:	mov	r0, r4
   2e968:	bl	2e460 <flatcc_builder_create_struct@@Base>
   2e96c:	mov	r5, r0
   2e970:	cmp	r0, #0
   2e974:	beq	2e9ec <flatcc_builder_end_struct@@Base+0xb0>
   2e978:	ldr	r0, [r4, #16]
   2e97c:	ldr	r2, [r4, #20]
   2e980:	mov	r1, #0
   2e984:	bl	14eec <memset@plt>
   2e988:	ldr	r0, [r4, #32]
   2e98c:	ldr	r1, [r4, #60]	; 0x3c
   2e990:	ldr	ip, [r4, #64]	; 0x40
   2e994:	ldr	r3, [r0, #8]
   2e998:	str	r3, [r4, #20]
   2e99c:	ldr	r3, [r0]
   2e9a0:	str	r3, [r4, #28]
   2e9a4:	add	r1, r1, r3
   2e9a8:	ldr	r2, [r0, #4]
   2e9ac:	str	r1, [r4, #16]
   2e9b0:	sub	r1, ip, r3
   2e9b4:	cmp	r1, r2
   2e9b8:	movhi	r1, r2
   2e9bc:	str	r1, [r4, #24]
   2e9c0:	ldrh	r1, [r4, #130]	; 0x82
   2e9c4:	ldrh	r2, [r4, #128]	; 0x80
   2e9c8:	cmp	r2, r1
   2e9cc:	strhcc	r1, [r4, #128]	; 0x80
   2e9d0:	ldrh	r1, [r0, #12]
   2e9d4:	sub	r0, r0, #36	; 0x24
   2e9d8:	str	r0, [r4, #32]
   2e9dc:	strh	r1, [r4, #130]	; 0x82
   2e9e0:	ldr	r0, [r4, #156]	; 0x9c
   2e9e4:	sub	r0, r0, #1
   2e9e8:	str	r0, [r4, #156]	; 0x9c
   2e9ec:	mov	r0, r5
   2e9f0:	pop	{r4, r5, fp, pc}
   2e9f4:	movw	r0, #29318	; 0x7286
   2e9f8:	movw	r1, #28626	; 0x6fd2
   2e9fc:	movw	r3, #29362	; 0x72b2
   2ea00:	mov	r2, #872	; 0x368
   2ea04:	movt	r0, #4
   2ea08:	movt	r1, #4
   2ea0c:	movt	r3, #4
   2ea10:	bl	14f40 <__assert_fail@plt>

0002ea14 <flatcc_builder_extend_vector@@Base>:
   2ea14:	push	{r4, r5, fp, lr}
   2ea18:	add	fp, sp, #8
   2ea1c:	mov	r4, r0
   2ea20:	ldr	r0, [r0, #32]
   2ea24:	ldr	r2, [r0, #20]
   2ea28:	adds	r2, r2, r1
   2ea2c:	bcs	2ea8c <flatcc_builder_extend_vector@@Base+0x78>
   2ea30:	ldr	r3, [r0, #24]
   2ea34:	cmp	r2, r3
   2ea38:	bhi	2ea8c <flatcc_builder_extend_vector@@Base+0x78>
   2ea3c:	str	r2, [r0, #20]
   2ea40:	ldr	r0, [r4, #32]
   2ea44:	ldr	r5, [r4, #20]
   2ea48:	ldr	r2, [r4, #24]
   2ea4c:	ldr	r0, [r0, #16]
   2ea50:	mla	r0, r0, r1, r5
   2ea54:	cmp	r0, r2
   2ea58:	str	r0, [r4, #20]
   2ea5c:	bcc	2ea80 <flatcc_builder_extend_vector@@Base+0x6c>
   2ea60:	add	r1, r0, #1
   2ea64:	mov	r0, r4
   2ea68:	mvn	r2, #3
   2ea6c:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   2ea70:	mov	r1, r0
   2ea74:	mov	r0, #0
   2ea78:	cmp	r1, #0
   2ea7c:	popne	{r4, r5, fp, pc}
   2ea80:	ldr	r0, [r4, #16]
   2ea84:	add	r0, r0, r5
   2ea88:	pop	{r4, r5, fp, pc}
   2ea8c:	movw	r0, #32897	; 0x8081
   2ea90:	movw	r1, #28626	; 0x6fd2
   2ea94:	movw	r3, #32924	; 0x809c
   2ea98:	mov	r2, #892	; 0x37c
   2ea9c:	movt	r0, #4
   2eaa0:	movt	r1, #4
   2eaa4:	movt	r3, #4
   2eaa8:	bl	14f40 <__assert_fail@plt>

0002eaac <flatcc_builder_vector_push@@Base>:
   2eaac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2eab0:	add	fp, sp, #24
   2eab4:	mov	r5, r0
   2eab8:	ldr	r0, [r0, #32]
   2eabc:	mov	r8, r1
   2eac0:	ldrh	r1, [r0, #14]
   2eac4:	cmp	r1, #4
   2eac8:	bne	2eb4c <flatcc_builder_vector_push@@Base+0xa0>
   2eacc:	ldr	r1, [r0, #20]
   2ead0:	ldr	r2, [r0, #24]
   2ead4:	cmp	r1, r2
   2ead8:	bhi	2eb64 <flatcc_builder_vector_push@@Base+0xb8>
   2eadc:	add	r1, r1, #1
   2eae0:	str	r1, [r0, #20]
   2eae4:	ldr	r0, [r5, #32]
   2eae8:	ldr	r4, [r5, #20]
   2eaec:	ldr	r1, [r5, #24]
   2eaf0:	ldr	r6, [r0, #16]
   2eaf4:	add	r0, r4, r6
   2eaf8:	cmp	r0, r1
   2eafc:	str	r0, [r5, #20]
   2eb00:	bcc	2eb20 <flatcc_builder_vector_push@@Base+0x74>
   2eb04:	add	r1, r0, #1
   2eb08:	mov	r0, r5
   2eb0c:	mvn	r2, #3
   2eb10:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   2eb14:	mov	r7, #0
   2eb18:	cmp	r0, #0
   2eb1c:	bne	2eb44 <flatcc_builder_vector_push@@Base+0x98>
   2eb20:	ldr	r0, [r5, #16]
   2eb24:	adds	r7, r0, r4
   2eb28:	beq	2eb40 <flatcc_builder_vector_push@@Base+0x94>
   2eb2c:	mov	r0, r7
   2eb30:	mov	r1, r8
   2eb34:	mov	r2, r6
   2eb38:	bl	14e5c <memcpy@plt>
   2eb3c:	b	2eb44 <flatcc_builder_vector_push@@Base+0x98>
   2eb40:	mov	r7, #0
   2eb44:	mov	r0, r7
   2eb48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eb4c:	movw	r0, #29429	; 0x72f5
   2eb50:	movw	r1, #28626	; 0x6fd2
   2eb54:	movw	r3, #29473	; 0x7321
   2eb58:	movw	r2, #907	; 0x38b
   2eb5c:	movt	r0, #4
   2eb60:	b	2eb78 <flatcc_builder_vector_push@@Base+0xcc>
   2eb64:	movw	r0, #29540	; 0x7364
   2eb68:	movw	r1, #28626	; 0x6fd2
   2eb6c:	movw	r3, #29473	; 0x7321
   2eb70:	mov	r2, #908	; 0x38c
   2eb74:	movt	r0, #4
   2eb78:	movt	r1, #4
   2eb7c:	movt	r3, #4
   2eb80:	bl	14f40 <__assert_fail@plt>

0002eb84 <flatcc_builder_append_vector@@Base>:
   2eb84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2eb88:	add	fp, sp, #24
   2eb8c:	mov	r6, r0
   2eb90:	ldr	r0, [r0, #32]
   2eb94:	mov	r8, r1
   2eb98:	ldrh	r1, [r0, #14]
   2eb9c:	cmp	r1, #4
   2eba0:	bne	2ec4c <flatcc_builder_append_vector@@Base+0xc8>
   2eba4:	ldr	r1, [r0, #20]
   2eba8:	mov	r9, r2
   2ebac:	adds	r1, r1, r2
   2ebb0:	bcs	2ec2c <flatcc_builder_append_vector@@Base+0xa8>
   2ebb4:	ldr	r2, [r0, #24]
   2ebb8:	cmp	r1, r2
   2ebbc:	bhi	2ec2c <flatcc_builder_append_vector@@Base+0xa8>
   2ebc0:	str	r1, [r0, #20]
   2ebc4:	ldr	r0, [r6, #32]
   2ebc8:	ldr	r4, [r6, #20]
   2ebcc:	ldr	r1, [r6, #24]
   2ebd0:	ldr	r5, [r0, #16]
   2ebd4:	mla	r0, r5, r9, r4
   2ebd8:	cmp	r0, r1
   2ebdc:	str	r0, [r6, #20]
   2ebe0:	bcc	2ec00 <flatcc_builder_append_vector@@Base+0x7c>
   2ebe4:	add	r1, r0, #1
   2ebe8:	mov	r0, r6
   2ebec:	mvn	r2, #3
   2ebf0:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   2ebf4:	mov	r7, #0
   2ebf8:	cmp	r0, #0
   2ebfc:	bne	2ec24 <flatcc_builder_append_vector@@Base+0xa0>
   2ec00:	ldr	r0, [r6, #16]
   2ec04:	adds	r7, r0, r4
   2ec08:	beq	2ec20 <flatcc_builder_append_vector@@Base+0x9c>
   2ec0c:	mul	r2, r5, r9
   2ec10:	mov	r0, r7
   2ec14:	mov	r1, r8
   2ec18:	bl	14e5c <memcpy@plt>
   2ec1c:	b	2ec24 <flatcc_builder_append_vector@@Base+0xa0>
   2ec20:	mov	r7, #0
   2ec24:	mov	r0, r7
   2ec28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ec2c:	movw	r0, #32897	; 0x8081
   2ec30:	movw	r1, #28626	; 0x6fd2
   2ec34:	movw	r3, #32924	; 0x809c
   2ec38:	mov	r2, #892	; 0x37c
   2ec3c:	movt	r0, #4
   2ec40:	movt	r1, #4
   2ec44:	movt	r3, #4
   2ec48:	bl	14f40 <__assert_fail@plt>
   2ec4c:	movw	r0, #29429	; 0x72f5
   2ec50:	movw	r1, #28626	; 0x6fd2
   2ec54:	movw	r3, #29601	; 0x73a1
   2ec58:	movw	r2, #915	; 0x393
   2ec5c:	movt	r0, #4
   2ec60:	movt	r1, #4
   2ec64:	movt	r3, #4
   2ec68:	bl	14f40 <__assert_fail@plt>

0002ec6c <flatcc_builder_extend_offset_vector@@Base>:
   2ec6c:	push	{r4, r5, fp, lr}
   2ec70:	add	fp, sp, #8
   2ec74:	mov	r4, r0
   2ec78:	ldr	r0, [r0, #32]
   2ec7c:	ldr	r2, [r0, #20]
   2ec80:	adds	r2, r2, r1
   2ec84:	cmpcc	r2, #1073741824	; 0x40000000
   2ec88:	bcc	2ecac <flatcc_builder_extend_offset_vector@@Base+0x40>
   2ec8c:	movw	r0, #32897	; 0x8081
   2ec90:	movw	r1, #28626	; 0x6fd2
   2ec94:	movw	r3, #32924	; 0x809c
   2ec98:	mov	r2, #892	; 0x37c
   2ec9c:	movt	r0, #4
   2eca0:	movt	r1, #4
   2eca4:	movt	r3, #4
   2eca8:	bl	14f40 <__assert_fail@plt>
   2ecac:	str	r2, [r0, #20]
   2ecb0:	ldr	r5, [r4, #20]
   2ecb4:	ldr	r2, [r4, #24]
   2ecb8:	add	r0, r5, r1, lsl #2
   2ecbc:	cmp	r0, r2
   2ecc0:	str	r0, [r4, #20]
   2ecc4:	bcc	2ece8 <flatcc_builder_extend_offset_vector@@Base+0x7c>
   2ecc8:	add	r1, r0, #1
   2eccc:	mov	r0, r4
   2ecd0:	mvn	r2, #3
   2ecd4:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   2ecd8:	mov	r1, r0
   2ecdc:	mov	r0, #0
   2ece0:	cmp	r1, #0
   2ece4:	popne	{r4, r5, fp, pc}
   2ece8:	ldr	r0, [r4, #16]
   2ecec:	add	r0, r0, r5
   2ecf0:	pop	{r4, r5, fp, pc}

0002ecf4 <flatcc_builder_offset_vector_push@@Base>:
   2ecf4:	push	{r4, r5, r6, r7, fp, lr}
   2ecf8:	add	fp, sp, #16
   2ecfc:	mov	r6, r0
   2ed00:	ldr	r0, [r0, #32]
   2ed04:	mov	r4, r1
   2ed08:	ldrh	r1, [r0, #14]
   2ed0c:	cmp	r1, #5
   2ed10:	bne	2ed74 <flatcc_builder_offset_vector_push@@Base+0x80>
   2ed14:	ldr	r1, [r0, #20]
   2ed18:	mov	r5, #0
   2ed1c:	cmn	r1, #-1073741823	; 0xc0000001
   2ed20:	beq	2ed6c <flatcc_builder_offset_vector_push@@Base+0x78>
   2ed24:	add	r1, r1, #1
   2ed28:	str	r1, [r0, #20]
   2ed2c:	ldr	r7, [r6, #20]
   2ed30:	ldr	r0, [r6, #24]
   2ed34:	add	r1, r7, #4
   2ed38:	cmp	r1, r0
   2ed3c:	str	r1, [r6, #20]
   2ed40:	bcc	2ed5c <flatcc_builder_offset_vector_push@@Base+0x68>
   2ed44:	add	r1, r7, #5
   2ed48:	mov	r0, r6
   2ed4c:	mvn	r2, #3
   2ed50:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   2ed54:	cmp	r0, #0
   2ed58:	bne	2ed6c <flatcc_builder_offset_vector_push@@Base+0x78>
   2ed5c:	ldr	r0, [r6, #16]
   2ed60:	adds	r0, r0, r7
   2ed64:	movne	r5, r0
   2ed68:	strne	r4, [r0]
   2ed6c:	mov	r0, r5
   2ed70:	pop	{r4, r5, r6, r7, fp, pc}
   2ed74:	movw	r0, #29678	; 0x73ee
   2ed78:	movw	r1, #28626	; 0x6fd2
   2ed7c:	movw	r3, #29729	; 0x7421
   2ed80:	movw	r2, #934	; 0x3a6
   2ed84:	movt	r0, #4
   2ed88:	movt	r1, #4
   2ed8c:	movt	r3, #4
   2ed90:	bl	14f40 <__assert_fail@plt>

0002ed94 <flatcc_builder_append_offset_vector@@Base>:
   2ed94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ed98:	add	fp, sp, #24
   2ed9c:	mov	r6, r0
   2eda0:	ldr	r0, [r0, #32]
   2eda4:	mov	r8, r1
   2eda8:	ldrh	r1, [r0, #14]
   2edac:	cmp	r1, #5
   2edb0:	bne	2ee4c <flatcc_builder_append_offset_vector@@Base+0xb8>
   2edb4:	ldr	r1, [r0, #20]
   2edb8:	mov	r5, r2
   2edbc:	adds	r1, r1, r2
   2edc0:	cmpcc	r1, #1073741824	; 0x40000000
   2edc4:	bcc	2ede8 <flatcc_builder_append_offset_vector@@Base+0x54>
   2edc8:	movw	r0, #32897	; 0x8081
   2edcc:	movw	r1, #28626	; 0x6fd2
   2edd0:	movw	r3, #32924	; 0x809c
   2edd4:	mov	r2, #892	; 0x37c
   2edd8:	movt	r0, #4
   2eddc:	movt	r1, #4
   2ede0:	movt	r3, #4
   2ede4:	bl	14f40 <__assert_fail@plt>
   2ede8:	str	r1, [r0, #20]
   2edec:	ldr	r4, [r6, #20]
   2edf0:	ldr	r1, [r6, #24]
   2edf4:	add	r0, r4, r5, lsl #2
   2edf8:	cmp	r0, r1
   2edfc:	str	r0, [r6, #20]
   2ee00:	bcc	2ee20 <flatcc_builder_append_offset_vector@@Base+0x8c>
   2ee04:	add	r1, r0, #1
   2ee08:	mov	r0, r6
   2ee0c:	mvn	r2, #3
   2ee10:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   2ee14:	mov	r7, #0
   2ee18:	cmp	r0, #0
   2ee1c:	bne	2ee44 <flatcc_builder_append_offset_vector@@Base+0xb0>
   2ee20:	ldr	r0, [r6, #16]
   2ee24:	adds	r7, r0, r4
   2ee28:	beq	2ee40 <flatcc_builder_append_offset_vector@@Base+0xac>
   2ee2c:	lsl	r2, r5, #2
   2ee30:	mov	r0, r7
   2ee34:	mov	r1, r8
   2ee38:	bl	14e5c <memcpy@plt>
   2ee3c:	b	2ee44 <flatcc_builder_append_offset_vector@@Base+0xb0>
   2ee40:	mov	r7, #0
   2ee44:	mov	r0, r7
   2ee48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ee4c:	movw	r0, #29678	; 0x73ee
   2ee50:	movw	r1, #28626	; 0x6fd2
   2ee54:	movw	r3, #29827	; 0x7483
   2ee58:	mov	r2, #948	; 0x3b4
   2ee5c:	movt	r0, #4
   2ee60:	movt	r1, #4
   2ee64:	movt	r3, #4
   2ee68:	bl	14f40 <__assert_fail@plt>

0002ee6c <flatcc_builder_extend_string@@Base>:
   2ee6c:	push	{r4, r5, fp, lr}
   2ee70:	add	fp, sp, #8
   2ee74:	mov	r4, r0
   2ee78:	ldr	r0, [r0, #32]
   2ee7c:	ldrh	r2, [r0, #14]
   2ee80:	cmp	r2, #6
   2ee84:	bne	2eedc <flatcc_builder_extend_string@@Base+0x70>
   2ee88:	ldr	r2, [r0, #20]
   2ee8c:	adds	r2, r2, r1
   2ee90:	bcs	2eefc <flatcc_builder_extend_string@@Base+0x90>
   2ee94:	str	r2, [r0, #20]
   2ee98:	ldr	r5, [r4, #20]
   2ee9c:	ldr	r2, [r4, #24]
   2eea0:	add	r0, r5, r1
   2eea4:	cmp	r0, r2
   2eea8:	str	r0, [r4, #20]
   2eeac:	bcc	2eed0 <flatcc_builder_extend_string@@Base+0x64>
   2eeb0:	add	r1, r0, #1
   2eeb4:	mov	r0, r4
   2eeb8:	mvn	r2, #3
   2eebc:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   2eec0:	mov	r1, r0
   2eec4:	mov	r0, #0
   2eec8:	cmp	r1, #0
   2eecc:	popne	{r4, r5, fp, pc}
   2eed0:	ldr	r0, [r4, #16]
   2eed4:	add	r0, r0, r5
   2eed8:	pop	{r4, r5, fp, pc}
   2eedc:	movw	r0, #29943	; 0x74f7
   2eee0:	movw	r1, #28626	; 0x6fd2
   2eee4:	movw	r3, #29987	; 0x7523
   2eee8:	movw	r2, #957	; 0x3bd
   2eeec:	movt	r0, #4
   2eef0:	movt	r1, #4
   2eef4:	movt	r3, #4
   2eef8:	bl	14f40 <__assert_fail@plt>
   2eefc:	movw	r0, #32897	; 0x8081
   2ef00:	movw	r1, #28626	; 0x6fd2
   2ef04:	movw	r3, #32924	; 0x809c
   2ef08:	mov	r2, #892	; 0x37c
   2ef0c:	movt	r0, #4
   2ef10:	movt	r1, #4
   2ef14:	movt	r3, #4
   2ef18:	bl	14f40 <__assert_fail@plt>

0002ef1c <flatcc_builder_append_string@@Base>:
   2ef1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ef20:	add	fp, sp, #24
   2ef24:	mov	r6, r0
   2ef28:	ldr	r0, [r0, #32]
   2ef2c:	mov	r8, r1
   2ef30:	ldrh	r1, [r0, #14]
   2ef34:	cmp	r1, #6
   2ef38:	bne	2efb0 <flatcc_builder_append_string@@Base+0x94>
   2ef3c:	ldr	r1, [r0, #20]
   2ef40:	mov	r4, r2
   2ef44:	adds	r1, r1, r2
   2ef48:	bcs	2efd0 <flatcc_builder_append_string@@Base+0xb4>
   2ef4c:	str	r1, [r0, #20]
   2ef50:	ldr	r5, [r6, #20]
   2ef54:	ldr	r1, [r6, #24]
   2ef58:	add	r0, r5, r4
   2ef5c:	cmp	r0, r1
   2ef60:	str	r0, [r6, #20]
   2ef64:	bcc	2ef84 <flatcc_builder_append_string@@Base+0x68>
   2ef68:	add	r1, r0, #1
   2ef6c:	mov	r0, r6
   2ef70:	mvn	r2, #3
   2ef74:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   2ef78:	mov	r7, #0
   2ef7c:	cmp	r0, #0
   2ef80:	bne	2efa8 <flatcc_builder_append_string@@Base+0x8c>
   2ef84:	ldr	r0, [r6, #16]
   2ef88:	adds	r7, r0, r5
   2ef8c:	beq	2efa4 <flatcc_builder_append_string@@Base+0x88>
   2ef90:	mov	r0, r7
   2ef94:	mov	r1, r8
   2ef98:	mov	r2, r4
   2ef9c:	bl	14e5c <memcpy@plt>
   2efa0:	b	2efa8 <flatcc_builder_append_string@@Base+0x8c>
   2efa4:	mov	r7, #0
   2efa8:	mov	r0, r7
   2efac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2efb0:	movw	r0, #29943	; 0x74f7
   2efb4:	movw	r1, #28626	; 0x6fd2
   2efb8:	movw	r3, #30050	; 0x7562
   2efbc:	movw	r2, #966	; 0x3c6
   2efc0:	movt	r0, #4
   2efc4:	movt	r1, #4
   2efc8:	movt	r3, #4
   2efcc:	bl	14f40 <__assert_fail@plt>
   2efd0:	movw	r0, #32897	; 0x8081
   2efd4:	movw	r1, #28626	; 0x6fd2
   2efd8:	movw	r3, #32924	; 0x809c
   2efdc:	mov	r2, #892	; 0x37c
   2efe0:	movt	r0, #4
   2efe4:	movt	r1, #4
   2efe8:	movt	r3, #4
   2efec:	bl	14f40 <__assert_fail@plt>

0002eff0 <flatcc_builder_append_string_str@@Base>:
   2eff0:	push	{r4, r5, fp, lr}
   2eff4:	add	fp, sp, #8
   2eff8:	mov	r5, r0
   2effc:	mov	r0, r1
   2f000:	mov	r4, r1
   2f004:	bl	14ec8 <strlen@plt>
   2f008:	mov	r2, r0
   2f00c:	mov	r0, r5
   2f010:	mov	r1, r4
   2f014:	pop	{r4, r5, fp, lr}
   2f018:	b	2ef1c <flatcc_builder_append_string@@Base>

0002f01c <flatcc_builder_append_string_strn@@Base>:
   2f01c:	push	{r4, r5, r6, sl, fp, lr}
   2f020:	add	fp, sp, #16
   2f024:	mov	r6, r0
   2f028:	mov	r5, r1
   2f02c:	mov	r0, r1
   2f030:	mov	r1, #0
   2f034:	mov	r4, r2
   2f038:	bl	14f10 <memchr@plt>
   2f03c:	cmp	r0, #0
   2f040:	mov	r1, r5
   2f044:	subne	r4, r0, r5
   2f048:	mov	r0, r6
   2f04c:	mov	r2, r4
   2f050:	pop	{r4, r5, r6, sl, fp, lr}
   2f054:	b	2ef1c <flatcc_builder_append_string@@Base>

0002f058 <flatcc_builder_truncate_vector@@Base>:
   2f058:	push	{fp, lr}
   2f05c:	mov	fp, sp
   2f060:	ldr	r2, [r0, #32]
   2f064:	ldrh	r3, [r2, #14]
   2f068:	cmp	r3, #4
   2f06c:	bne	2f0b4 <flatcc_builder_truncate_vector@@Base+0x5c>
   2f070:	ldr	r3, [r2, #20]
   2f074:	cmp	r3, r1
   2f078:	bcc	2f0cc <flatcc_builder_truncate_vector@@Base+0x74>
   2f07c:	sub	r3, r3, r1
   2f080:	str	r3, [r2, #20]
   2f084:	ldr	r2, [r0, #32]
   2f088:	ldr	r3, [r0, #20]
   2f08c:	ldr	ip, [r0, #16]
   2f090:	ldr	r2, [r2, #16]
   2f094:	mls	r3, r2, r1, r3
   2f098:	mul	r2, r2, r1
   2f09c:	mov	r1, #0
   2f0a0:	str	r3, [r0, #20]
   2f0a4:	add	r0, ip, r3
   2f0a8:	bl	14eec <memset@plt>
   2f0ac:	mov	r0, #0
   2f0b0:	pop	{fp, pc}
   2f0b4:	movw	r0, #29429	; 0x72f5
   2f0b8:	movw	r1, #28626	; 0x6fd2
   2f0bc:	movw	r3, #30127	; 0x75af
   2f0c0:	movw	r2, #985	; 0x3d9
   2f0c4:	movt	r0, #4
   2f0c8:	b	2f0e0 <flatcc_builder_truncate_vector@@Base+0x88>
   2f0cc:	movw	r0, #30190	; 0x75ee
   2f0d0:	movw	r1, #28626	; 0x6fd2
   2f0d4:	movw	r3, #30127	; 0x75af
   2f0d8:	movw	r2, #986	; 0x3da
   2f0dc:	movt	r0, #4
   2f0e0:	movt	r1, #4
   2f0e4:	movt	r3, #4
   2f0e8:	bl	14f40 <__assert_fail@plt>

0002f0ec <flatcc_builder_truncate_offset_vector@@Base>:
   2f0ec:	push	{fp, lr}
   2f0f0:	mov	fp, sp
   2f0f4:	ldr	r2, [r0, #32]
   2f0f8:	ldrh	r3, [r2, #14]
   2f0fc:	cmp	r3, #5
   2f100:	bne	2f148 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2f104:	ldr	r3, [r2, #20]
   2f108:	cmp	r3, r1
   2f10c:	bcc	2f160 <flatcc_builder_truncate_offset_vector@@Base+0x74>
   2f110:	sub	r3, r3, r1
   2f114:	str	r3, [r2, #20]
   2f118:	ldr	r2, [r0, #32]
   2f11c:	ldr	r3, [r0, #20]
   2f120:	ldr	ip, [r0, #16]
   2f124:	ldr	r2, [r2, #16]
   2f128:	mls	r3, r2, r1, r3
   2f12c:	mul	r2, r2, r1
   2f130:	mov	r1, #0
   2f134:	str	r3, [r0, #20]
   2f138:	add	r0, ip, r3
   2f13c:	bl	14eec <memset@plt>
   2f140:	mov	r0, #0
   2f144:	pop	{fp, pc}
   2f148:	movw	r0, #29678	; 0x73ee
   2f14c:	movw	r1, #28626	; 0x6fd2
   2f150:	movw	r3, #30226	; 0x7612
   2f154:	movw	r2, #994	; 0x3e2
   2f158:	movt	r0, #4
   2f15c:	b	2f174 <flatcc_builder_truncate_offset_vector@@Base+0x88>
   2f160:	movw	r0, #30296	; 0x7658
   2f164:	movw	r1, #28626	; 0x6fd2
   2f168:	movw	r3, #30226	; 0x7612
   2f16c:	movw	r2, #995	; 0x3e3
   2f170:	movt	r0, #4
   2f174:	movt	r1, #4
   2f178:	movt	r3, #4
   2f17c:	bl	14f40 <__assert_fail@plt>

0002f180 <flatcc_builder_truncate_string@@Base>:
   2f180:	push	{fp, lr}
   2f184:	mov	fp, sp
   2f188:	mov	r2, r1
   2f18c:	ldr	r1, [r0, #32]
   2f190:	ldrh	r3, [r1, #14]
   2f194:	cmp	r3, #6
   2f198:	bne	2f1d4 <flatcc_builder_truncate_string@@Base+0x54>
   2f19c:	ldr	r3, [r1, #20]
   2f1a0:	cmp	r3, r2
   2f1a4:	bcc	2f1ec <flatcc_builder_truncate_string@@Base+0x6c>
   2f1a8:	sub	r3, r3, r2
   2f1ac:	str	r3, [r1, #20]
   2f1b0:	ldr	r3, [r0, #20]
   2f1b4:	ldr	r1, [r0, #16]
   2f1b8:	sub	r3, r3, r2
   2f1bc:	str	r3, [r0, #20]
   2f1c0:	add	r0, r1, r3
   2f1c4:	mov	r1, #0
   2f1c8:	bl	14eec <memset@plt>
   2f1cc:	mov	r0, #0
   2f1d0:	pop	{fp, pc}
   2f1d4:	movw	r0, #29943	; 0x74f7
   2f1d8:	movw	r1, #28626	; 0x6fd2
   2f1dc:	movw	r3, #30355	; 0x7693
   2f1e0:	movw	r2, #1003	; 0x3eb
   2f1e4:	movt	r0, #4
   2f1e8:	b	2f200 <flatcc_builder_truncate_string@@Base+0x80>
   2f1ec:	movw	r0, #30418	; 0x76d2
   2f1f0:	movw	r1, #28626	; 0x6fd2
   2f1f4:	movw	r3, #30355	; 0x7693
   2f1f8:	mov	r2, #1004	; 0x3ec
   2f1fc:	movt	r0, #4
   2f200:	movt	r1, #4
   2f204:	movt	r3, #4
   2f208:	bl	14f40 <__assert_fail@plt>

0002f20c <flatcc_builder_start_vector@@Base>:
   2f20c:	push	{r4, r5, r6, r7, fp, lr}
   2f210:	add	fp, sp, #16
   2f214:	mov	r7, #4
   2f218:	cmp	r2, #4
   2f21c:	mov	r6, r1
   2f220:	mov	r5, r3
   2f224:	mov	r4, r0
   2f228:	movls	r2, r7
   2f22c:	mov	r1, r2
   2f230:	bl	2e638 <flatcc_builder_start_buffer@@Base+0xbc>
   2f234:	mov	r1, r0
   2f238:	mvn	r0, #0
   2f23c:	cmp	r1, #0
   2f240:	popne	{r4, r5, r6, r7, fp, pc}
   2f244:	ldr	r0, [r4, #32]
   2f248:	str	r6, [r0, #16]
   2f24c:	mov	r0, #0
   2f250:	ldr	r1, [r4, #32]
   2f254:	str	r0, [r1, #20]
   2f258:	ldr	r1, [r4, #32]
   2f25c:	str	r5, [r1, #24]
   2f260:	ldr	r1, [r4, #32]
   2f264:	strh	r7, [r1, #14]
   2f268:	ldr	r2, [r4, #28]
   2f26c:	ldr	r3, [r4, #60]	; 0x3c
   2f270:	ldr	r7, [r4, #64]	; 0x40
   2f274:	add	r3, r3, r2
   2f278:	sub	r2, r7, r2
   2f27c:	str	r3, [r4, #16]
   2f280:	mvn	r3, #3
   2f284:	cmn	r2, #4
   2f288:	movcs	r2, r3
   2f28c:	str	r2, [r4, #24]
   2f290:	str	r3, [r1, #4]
   2f294:	pop	{r4, r5, r6, r7, fp, pc}

0002f298 <flatcc_builder_start_offset_vector@@Base>:
   2f298:	push	{r4, r5, fp, lr}
   2f29c:	add	fp, sp, #8
   2f2a0:	mov	r1, #4
   2f2a4:	mov	r4, r0
   2f2a8:	mov	r5, #4
   2f2ac:	bl	2e638 <flatcc_builder_start_buffer@@Base+0xbc>
   2f2b0:	mov	r1, r0
   2f2b4:	mvn	r0, #0
   2f2b8:	cmp	r1, #0
   2f2bc:	popne	{r4, r5, fp, pc}
   2f2c0:	ldr	r0, [r4, #32]
   2f2c4:	mov	r2, #5
   2f2c8:	str	r5, [r0, #16]
   2f2cc:	mov	r0, #0
   2f2d0:	ldr	r1, [r4, #32]
   2f2d4:	str	r0, [r1, #20]
   2f2d8:	ldr	r1, [r4, #32]
   2f2dc:	strh	r2, [r1, #14]
   2f2e0:	ldr	r2, [r4, #28]
   2f2e4:	ldr	r3, [r4, #60]	; 0x3c
   2f2e8:	ldr	r5, [r4, #64]	; 0x40
   2f2ec:	add	r3, r3, r2
   2f2f0:	sub	r2, r5, r2
   2f2f4:	str	r3, [r4, #16]
   2f2f8:	mvn	r3, #3
   2f2fc:	cmn	r2, #4
   2f300:	movcs	r2, r3
   2f304:	str	r2, [r4, #24]
   2f308:	str	r3, [r1, #4]
   2f30c:	pop	{r4, r5, fp, pc}

0002f310 <flatcc_builder_create_offset_vector@@Base>:
   2f310:	push	{r4, r5, r6, sl, fp, lr}
   2f314:	add	fp, sp, #16
   2f318:	mov	r6, r2
   2f31c:	mov	r5, r1
   2f320:	mov	r4, r0
   2f324:	bl	2f298 <flatcc_builder_start_offset_vector@@Base>
   2f328:	cmp	r0, #0
   2f32c:	beq	2f338 <flatcc_builder_create_offset_vector@@Base+0x28>
   2f330:	mov	r0, #0
   2f334:	pop	{r4, r5, r6, sl, fp, pc}
   2f338:	mov	r0, r4
   2f33c:	mov	r1, r6
   2f340:	bl	2ec6c <flatcc_builder_extend_offset_vector@@Base>
   2f344:	cmp	r0, #0
   2f348:	beq	2f330 <flatcc_builder_create_offset_vector@@Base+0x20>
   2f34c:	lsl	r2, r6, #2
   2f350:	mov	r1, r5
   2f354:	bl	14e5c <memcpy@plt>
   2f358:	mov	r0, r4
   2f35c:	pop	{r4, r5, r6, sl, fp, lr}
   2f360:	b	2f364 <flatcc_builder_end_offset_vector@@Base>

0002f364 <flatcc_builder_end_offset_vector@@Base>:
   2f364:	push	{r4, r5, fp, lr}
   2f368:	add	fp, sp, #8
   2f36c:	mov	r4, r0
   2f370:	ldr	r0, [r0, #32]
   2f374:	ldrh	r1, [r0, #14]
   2f378:	cmp	r1, #5
   2f37c:	bne	2f41c <flatcc_builder_end_offset_vector@@Base+0xb8>
   2f380:	ldr	r2, [r0, #20]
   2f384:	ldr	r1, [r4, #16]
   2f388:	mov	r0, r4
   2f38c:	mov	r3, #0
   2f390:	bl	30344 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2f394:	mov	r5, r0
   2f398:	cmp	r0, #0
   2f39c:	beq	2f414 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2f3a0:	ldr	r0, [r4, #16]
   2f3a4:	ldr	r2, [r4, #20]
   2f3a8:	mov	r1, #0
   2f3ac:	bl	14eec <memset@plt>
   2f3b0:	ldr	r0, [r4, #32]
   2f3b4:	ldr	r1, [r4, #60]	; 0x3c
   2f3b8:	ldr	ip, [r4, #64]	; 0x40
   2f3bc:	ldr	r3, [r0, #8]
   2f3c0:	str	r3, [r4, #20]
   2f3c4:	ldr	r3, [r0]
   2f3c8:	str	r3, [r4, #28]
   2f3cc:	add	r1, r1, r3
   2f3d0:	ldr	r2, [r0, #4]
   2f3d4:	str	r1, [r4, #16]
   2f3d8:	sub	r1, ip, r3
   2f3dc:	cmp	r1, r2
   2f3e0:	movhi	r1, r2
   2f3e4:	str	r1, [r4, #24]
   2f3e8:	ldrh	r1, [r4, #130]	; 0x82
   2f3ec:	ldrh	r2, [r4, #128]	; 0x80
   2f3f0:	cmp	r2, r1
   2f3f4:	strhcc	r1, [r4, #128]	; 0x80
   2f3f8:	ldrh	r1, [r0, #12]
   2f3fc:	sub	r0, r0, #36	; 0x24
   2f400:	str	r0, [r4, #32]
   2f404:	strh	r1, [r4, #130]	; 0x82
   2f408:	ldr	r0, [r4, #156]	; 0x9c
   2f40c:	sub	r0, r0, #1
   2f410:	str	r0, [r4, #156]	; 0x9c
   2f414:	mov	r0, r5
   2f418:	pop	{r4, r5, fp, pc}
   2f41c:	movw	r0, #29678	; 0x73ee
   2f420:	movw	r1, #28626	; 0x6fd2
   2f424:	movw	r3, #31261	; 0x7a1d
   2f428:	movw	r2, #1480	; 0x5c8
   2f42c:	movt	r0, #4
   2f430:	movt	r1, #4
   2f434:	movt	r3, #4
   2f438:	bl	14f40 <__assert_fail@plt>

0002f43c <flatcc_builder_start_string@@Base>:
   2f43c:	push	{r4, r5, fp, lr}
   2f440:	add	fp, sp, #8
   2f444:	mov	r1, #1
   2f448:	mov	r4, r0
   2f44c:	mov	r5, #1
   2f450:	bl	2e638 <flatcc_builder_start_buffer@@Base+0xbc>
   2f454:	mov	r1, r0
   2f458:	mvn	r0, #0
   2f45c:	cmp	r1, #0
   2f460:	popne	{r4, r5, fp, pc}
   2f464:	ldr	r0, [r4, #32]
   2f468:	mov	r2, #6
   2f46c:	str	r5, [r0, #16]
   2f470:	mov	r0, #0
   2f474:	ldr	r1, [r4, #32]
   2f478:	str	r0, [r1, #20]
   2f47c:	ldr	r1, [r4, #32]
   2f480:	strh	r2, [r1, #14]
   2f484:	ldr	r2, [r4, #28]
   2f488:	ldr	r3, [r4, #60]	; 0x3c
   2f48c:	ldr	r5, [r4, #64]	; 0x40
   2f490:	add	r3, r3, r2
   2f494:	sub	r2, r5, r2
   2f498:	str	r3, [r4, #16]
   2f49c:	mvn	r3, #3
   2f4a0:	cmn	r2, #4
   2f4a4:	movcs	r2, r3
   2f4a8:	str	r2, [r4, #24]
   2f4ac:	str	r3, [r1, #4]
   2f4b0:	pop	{r4, r5, fp, pc}

0002f4b4 <flatcc_builder_reserve_table@@Base>:
   2f4b4:	push	{r4, r5, r6, sl, fp, lr}
   2f4b8:	add	fp, sp, #16
   2f4bc:	sub	sp, sp, #8
   2f4c0:	cmn	r1, #1
   2f4c4:	ble	2f598 <flatcc_builder_reserve_table@@Base+0xe4>
   2f4c8:	mov	r4, r0
   2f4cc:	ldr	r0, [r0, #32]
   2f4d0:	mov	r5, r1
   2f4d4:	ldr	r1, [r4, #56]	; 0x38
   2f4d8:	ldrh	r2, [r0, #28]
   2f4dc:	ldr	r0, [r0, #16]
   2f4e0:	add	r6, r0, r2, lsl #1
   2f4e4:	add	r0, r6, r5, lsl #1
   2f4e8:	add	r2, r0, #4
   2f4ec:	cmp	r2, r1
   2f4f0:	bls	2f518 <flatcc_builder_reserve_table@@Base+0x64>
   2f4f4:	ldr	r0, [r4, #40]	; 0x28
   2f4f8:	ldr	ip, [r4, #48]	; 0x30
   2f4fc:	mov	r3, #0
   2f500:	add	r1, r4, #52	; 0x34
   2f504:	str	r3, [sp]
   2f508:	mov	r3, #1
   2f50c:	blx	ip
   2f510:	cmp	r0, #0
   2f514:	bne	2f5b8 <flatcc_builder_reserve_table@@Base+0x104>
   2f518:	ldr	r0, [r4, #52]	; 0x34
   2f51c:	adds	r0, r0, r6
   2f520:	str	r0, [r4, #4]
   2f524:	beq	2f58c <flatcc_builder_reserve_table@@Base+0xd8>
   2f528:	add	r0, r0, #4
   2f52c:	lsl	r1, r5, #1
   2f530:	str	r0, [r4, #4]
   2f534:	ldr	r0, [r4, #32]
   2f538:	ldr	r3, [r4, #80]	; 0x50
   2f53c:	ldr	r5, [r0, #20]
   2f540:	orr	r0, r1, #1
   2f544:	add	r2, r5, r0
   2f548:	cmp	r2, r3
   2f54c:	bls	2f574 <flatcc_builder_reserve_table@@Base+0xc0>
   2f550:	ldr	r0, [r4, #40]	; 0x28
   2f554:	ldr	r6, [r4, #48]	; 0x30
   2f558:	mov	r3, #3
   2f55c:	add	r1, r4, #76	; 0x4c
   2f560:	str	r3, [sp]
   2f564:	mov	r3, #0
   2f568:	blx	r6
   2f56c:	cmp	r0, #0
   2f570:	bne	2f5b8 <flatcc_builder_reserve_table@@Base+0x104>
   2f574:	ldr	r0, [r4, #76]	; 0x4c
   2f578:	adds	r0, r0, r5
   2f57c:	str	r0, [r4]
   2f580:	mov	r0, #0
   2f584:	mvneq	r0, #0
   2f588:	b	2f590 <flatcc_builder_reserve_table@@Base+0xdc>
   2f58c:	mvn	r0, #0
   2f590:	sub	sp, fp, #16
   2f594:	pop	{r4, r5, r6, sl, fp, pc}
   2f598:	movw	r0, #30517	; 0x7735
   2f59c:	movw	r1, #28626	; 0x6fd2
   2f5a0:	movw	r3, #30452	; 0x76f4
   2f5a4:	movw	r2, #1065	; 0x429
   2f5a8:	movt	r0, #4
   2f5ac:	movt	r1, #4
   2f5b0:	movt	r3, #4
   2f5b4:	bl	14f40 <__assert_fail@plt>
   2f5b8:	movw	r0, #33144	; 0x8178
   2f5bc:	movw	r1, #28626	; 0x6fd2
   2f5c0:	movw	r3, #32690	; 0x7fb2
   2f5c4:	mov	r2, #308	; 0x134
   2f5c8:	movt	r0, #4
   2f5cc:	movt	r1, #4
   2f5d0:	movt	r3, #4
   2f5d4:	bl	14f40 <__assert_fail@plt>

0002f5d8 <flatcc_builder_start_table@@Base>:
   2f5d8:	push	{r4, r5, r6, r7, fp, lr}
   2f5dc:	add	fp, sp, #16
   2f5e0:	sub	sp, sp, #8
   2f5e4:	mov	r6, r1
   2f5e8:	mov	r1, #4
   2f5ec:	mov	r4, r0
   2f5f0:	bl	2e638 <flatcc_builder_start_buffer@@Base+0xbc>
   2f5f4:	mvn	r5, #0
   2f5f8:	cmp	r0, #0
   2f5fc:	beq	2f60c <flatcc_builder_start_table@@Base+0x34>
   2f600:	mov	r0, r5
   2f604:	sub	sp, fp, #16
   2f608:	pop	{r4, r5, r6, r7, fp, pc}
   2f60c:	mov	r1, r4
   2f610:	ldr	r2, [r4, #4]
   2f614:	ldr	r3, [r4, #32]
   2f618:	ldr	r0, [r1, #52]!	; 0x34
   2f61c:	sub	r0, r2, r0
   2f620:	str	r0, [r3, #16]
   2f624:	ldr	r0, [r4]
   2f628:	ldr	r3, [r4, #76]	; 0x4c
   2f62c:	ldr	r2, [r4, #32]
   2f630:	sub	r0, r0, r3
   2f634:	mov	r3, #0
   2f638:	str	r0, [r2, #20]
   2f63c:	ldr	r0, [r4, #12]
   2f640:	ldr	r2, [r4, #32]
   2f644:	str	r0, [r2, #24]
   2f648:	ldr	r0, [r4, #32]
   2f64c:	ldrh	r2, [r4, #8]
   2f650:	strh	r2, [r0, #28]
   2f654:	movw	r0, #15186	; 0x3b52
   2f658:	strh	r3, [r4, #8]
   2f65c:	mov	r2, #3
   2f660:	movt	r0, #12137	; 0x2f69
   2f664:	str	r0, [r4, #12]
   2f668:	ldr	r0, [r4, #32]
   2f66c:	strh	r2, [r0, #14]
   2f670:	ldrh	r2, [r0, #28]
   2f674:	ldr	r0, [r0, #16]
   2f678:	add	r7, r0, r2, lsl #1
   2f67c:	add	r0, r7, r6, lsl #1
   2f680:	add	r2, r0, #4
   2f684:	ldr	r0, [r4, #56]	; 0x38
   2f688:	cmp	r2, r0
   2f68c:	bls	2f6ac <flatcc_builder_start_table@@Base+0xd4>
   2f690:	ldr	r0, [r4, #40]	; 0x28
   2f694:	ldr	ip, [r4, #48]	; 0x30
   2f698:	str	r3, [sp]
   2f69c:	mov	r3, #1
   2f6a0:	blx	ip
   2f6a4:	cmp	r0, #0
   2f6a8:	bne	2f750 <flatcc_builder_start_table@@Base+0x178>
   2f6ac:	ldr	r0, [r4, #52]	; 0x34
   2f6b0:	adds	r0, r0, r7
   2f6b4:	str	r0, [r4, #4]
   2f6b8:	beq	2f600 <flatcc_builder_start_table@@Base+0x28>
   2f6bc:	add	r0, r0, #4
   2f6c0:	lsl	r1, r6, #1
   2f6c4:	str	r0, [r4, #4]
   2f6c8:	ldr	r0, [r4, #32]
   2f6cc:	ldr	r3, [r4, #80]	; 0x50
   2f6d0:	ldr	r6, [r0, #20]
   2f6d4:	orr	r0, r1, #1
   2f6d8:	add	r2, r6, r0
   2f6dc:	cmp	r2, r3
   2f6e0:	bls	2f708 <flatcc_builder_start_table@@Base+0x130>
   2f6e4:	ldr	r0, [r4, #40]	; 0x28
   2f6e8:	ldr	r7, [r4, #48]	; 0x30
   2f6ec:	mov	r3, #3
   2f6f0:	add	r1, r4, #76	; 0x4c
   2f6f4:	str	r3, [sp]
   2f6f8:	mov	r3, #0
   2f6fc:	blx	r7
   2f700:	cmp	r0, #0
   2f704:	bne	2f750 <flatcc_builder_start_table@@Base+0x178>
   2f708:	ldr	r0, [r4, #76]	; 0x4c
   2f70c:	adds	r0, r0, r6
   2f710:	str	r0, [r4]
   2f714:	beq	2f600 <flatcc_builder_start_table@@Base+0x28>
   2f718:	ldr	r0, [r4, #28]
   2f71c:	ldr	r2, [r4, #60]	; 0x3c
   2f720:	ldr	r3, [r4, #64]	; 0x40
   2f724:	ldr	r1, [r4, #32]
   2f728:	mov	r5, #0
   2f72c:	add	r2, r2, r0
   2f730:	sub	r0, r3, r0
   2f734:	str	r2, [r4, #16]
   2f738:	movw	r2, #65532	; 0xfffc
   2f73c:	cmp	r0, r2
   2f740:	movcs	r0, r2
   2f744:	str	r0, [r4, #24]
   2f748:	str	r2, [r1, #4]
   2f74c:	b	2f600 <flatcc_builder_start_table@@Base+0x28>
   2f750:	movw	r0, #33144	; 0x8178
   2f754:	movw	r1, #28626	; 0x6fd2
   2f758:	movw	r3, #32690	; 0x7fb2
   2f75c:	mov	r2, #308	; 0x134
   2f760:	movt	r0, #4
   2f764:	movt	r1, #4
   2f768:	movt	r3, #4
   2f76c:	bl	14f40 <__assert_fail@plt>

0002f770 <flatcc_builder_create_vtable@@Base>:
   2f770:	push	{r4, r5, fp, lr}
   2f774:	add	fp, sp, #8
   2f778:	sub	sp, sp, #80	; 0x50
   2f77c:	mov	r3, r2
   2f780:	mov	r2, #0
   2f784:	mov	r4, r0
   2f788:	cmp	r3, #0
   2f78c:	str	r2, [sp, #12]
   2f790:	str	r2, [sp, #8]
   2f794:	movne	r2, #1
   2f798:	strne	r3, [sp, #20]
   2f79c:	strne	r1, [sp, #16]
   2f7a0:	strne	r3, [sp, #8]
   2f7a4:	strne	r2, [sp, #12]
   2f7a8:	ldr	r0, [r4, #152]	; 0x98
   2f7ac:	cmp	r0, #0
   2f7b0:	bne	2f7c0 <flatcc_builder_create_vtable@@Base+0x50>
   2f7b4:	ldr	r0, [r4, #180]	; 0xb4
   2f7b8:	cmp	r0, #0
   2f7bc:	beq	2f814 <flatcc_builder_create_vtable@@Base+0xa4>
   2f7c0:	cmp	r3, #0
   2f7c4:	beq	2f858 <flatcc_builder_create_vtable@@Base+0xe8>
   2f7c8:	ldr	r0, [r4, #136]	; 0x88
   2f7cc:	ldr	ip, [r4, #44]	; 0x2c
   2f7d0:	add	r1, sp, #8
   2f7d4:	add	r1, r1, #8
   2f7d8:	sub	r5, r0, r3
   2f7dc:	ldr	r0, [r4, #36]	; 0x24
   2f7e0:	str	r3, [sp]
   2f7e4:	mov	r3, r5
   2f7e8:	blx	ip
   2f7ec:	cmp	r0, #0
   2f7f0:	bne	2f86c <flatcc_builder_create_vtable@@Base+0xfc>
   2f7f4:	cmp	r5, #0
   2f7f8:	str	r5, [r4, #136]	; 0x88
   2f7fc:	beq	2f80c <flatcc_builder_create_vtable@@Base+0x9c>
   2f800:	add	r1, r5, #1
   2f804:	mov	r0, r1
   2f808:	b	2f850 <flatcc_builder_create_vtable@@Base+0xe0>
   2f80c:	mov	r0, #0
   2f810:	b	2f850 <flatcc_builder_create_vtable@@Base+0xe0>
   2f814:	ldr	r5, [r4, #140]	; 0x8c
   2f818:	ldr	r0, [r4, #36]	; 0x24
   2f81c:	ldr	ip, [r4, #44]	; 0x2c
   2f820:	add	r1, r5, r3
   2f824:	str	r1, [r4, #140]	; 0x8c
   2f828:	add	r1, sp, #8
   2f82c:	str	r3, [sp]
   2f830:	mov	r3, r5
   2f834:	add	r1, r1, #8
   2f838:	blx	ip
   2f83c:	cmp	r0, #0
   2f840:	bne	2f88c <flatcc_builder_create_vtable@@Base+0x11c>
   2f844:	adds	r1, r5, #1
   2f848:	mov	r0, #0
   2f84c:	movcc	r0, r1
   2f850:	sub	sp, fp, #8
   2f854:	pop	{r4, r5, fp, pc}
   2f858:	movw	r0, #33144	; 0x8178
   2f85c:	movw	r1, #28626	; 0x6fd2
   2f860:	movw	r3, #32823	; 0x8037
   2f864:	movw	r2, #647	; 0x287
   2f868:	b	2f87c <flatcc_builder_create_vtable@@Base+0x10c>
   2f86c:	movw	r0, #33144	; 0x8178
   2f870:	movw	r1, #28626	; 0x6fd2
   2f874:	movw	r3, #32823	; 0x8037
   2f878:	movw	r2, #651	; 0x28b
   2f87c:	movt	r0, #4
   2f880:	movt	r1, #4
   2f884:	movt	r3, #4
   2f888:	bl	14f40 <__assert_fail@plt>
   2f88c:	movw	r0, #33144	; 0x8178
   2f890:	movw	r1, #28626	; 0x6fd2
   2f894:	movw	r3, #33011	; 0x80f3
   2f898:	movw	r2, #677	; 0x2a5
   2f89c:	movt	r0, #4
   2f8a0:	movt	r1, #4
   2f8a4:	movt	r3, #4
   2f8a8:	bl	14f40 <__assert_fail@plt>

0002f8ac <flatcc_builder_create_cached_vtable@@Base>:
   2f8ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f8b0:	add	fp, sp, #28
   2f8b4:	sub	sp, sp, #20
   2f8b8:	mov	sl, r0
   2f8bc:	ldr	r0, [r0, #116]	; 0x74
   2f8c0:	mov	r8, r3
   2f8c4:	mov	r5, r2
   2f8c8:	str	r1, [sp, #16]
   2f8cc:	cmp	r0, #0
   2f8d0:	beq	2f974 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2f8d4:	ldr	r1, [sl, #92]	; 0x5c
   2f8d8:	rsb	r0, r0, #32
   2f8dc:	lsr	r0, r8, r0
   2f8e0:	add	r6, r1, r0, lsl #2
   2f8e4:	cmp	r6, #0
   2f8e8:	beq	2fa38 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2f8ec:	ldr	r7, [r6]
   2f8f0:	str	r6, [sp, #12]
   2f8f4:	cmp	r7, #0
   2f8f8:	beq	2fa40 <flatcc_builder_create_cached_vtable@@Base+0x194>
   2f8fc:	ldr	r4, [sl, #68]	; 0x44
   2f900:	ldr	r8, [sl, #100]	; 0x64
   2f904:	mov	r0, #0
   2f908:	str	r0, [sp, #8]
   2f90c:	add	r9, r8, r7
   2f910:	mov	r1, r4
   2f914:	ldr	r0, [r9, #8]
   2f918:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2f91c:	cmp	r0, r5
   2f920:	bne	2f938 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   2f924:	ldr	r0, [sp, #16]
   2f928:	mov	r2, r5
   2f92c:	bl	14ebc <bcmp@plt>
   2f930:	cmp	r0, #0
   2f934:	beq	2f94c <flatcc_builder_create_cached_vtable@@Base+0xa0>
   2f938:	ldr	r7, [r9, #12]!
   2f93c:	mov	r6, r9
   2f940:	cmp	r7, #0
   2f944:	bne	2f90c <flatcc_builder_create_cached_vtable@@Base+0x60>
   2f948:	b	2fa30 <flatcc_builder_create_cached_vtable@@Base+0x184>
   2f94c:	ldr	r0, [sl, #152]	; 0x98
   2f950:	ldr	r1, [r9, #4]
   2f954:	cmp	r1, r0
   2f958:	beq	2fba4 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2f95c:	mov	r6, r9
   2f960:	mov	r0, r9
   2f964:	ldr	r7, [r6, #12]!
   2f968:	cmp	r7, #0
   2f96c:	bne	2f908 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2f970:	b	2fa44 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2f974:	ldr	r0, [sl, #124]	; 0x7c
   2f978:	cmp	r0, #0
   2f97c:	bne	2fbf0 <flatcc_builder_create_cached_vtable@@Base+0x344>
   2f980:	ldr	r0, [sl, #104]	; 0x68
   2f984:	add	r7, sl, #100	; 0x64
   2f988:	cmp	r0, #15
   2f98c:	bhi	2f9b8 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2f990:	ldr	r0, [sl, #40]	; 0x28
   2f994:	ldr	r6, [sl, #48]	; 0x30
   2f998:	mov	r1, #6
   2f99c:	mov	r2, #16
   2f9a0:	mov	r3, #0
   2f9a4:	str	r1, [sp]
   2f9a8:	mov	r1, r7
   2f9ac:	blx	r6
   2f9b0:	cmp	r0, #0
   2f9b4:	bne	2fbd0 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2f9b8:	ldr	r0, [r7]
   2f9bc:	mov	r7, #0
   2f9c0:	cmp	r0, #0
   2f9c4:	beq	2fae4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f9c8:	mov	r0, #16
   2f9cc:	mov	r2, #5
   2f9d0:	add	r1, sl, #92	; 0x5c
   2f9d4:	mov	r3, #1
   2f9d8:	mov	r4, #256	; 0x100
   2f9dc:	str	r0, [sl, #124]	; 0x7c
   2f9e0:	ldr	r0, [sl, #40]	; 0x28
   2f9e4:	ldr	r6, [sl, #48]	; 0x30
   2f9e8:	str	r2, [sp]
   2f9ec:	mov	r2, #256	; 0x100
   2f9f0:	blx	r6
   2f9f4:	cmp	r0, #0
   2f9f8:	bne	2fae4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f9fc:	ldr	r0, [sl, #96]	; 0x60
   2fa00:	mov	r1, r4
   2fa04:	lsl	r4, r4, #1
   2fa08:	cmp	r0, r1, lsl #1
   2fa0c:	bcs	2fa00 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2fa10:	lsr	r1, r1, #2
   2fa14:	mvn	r0, #0
   2fa18:	mov	r2, #1
   2fa1c:	add	r0, r0, #1
   2fa20:	cmp	r1, r2, lsl r0
   2fa24:	bhi	2fa1c <flatcc_builder_create_cached_vtable@@Base+0x170>
   2fa28:	str	r0, [sl, #116]	; 0x74
   2fa2c:	b	2f8d4 <flatcc_builder_create_cached_vtable@@Base+0x28>
   2fa30:	ldr	r9, [sp, #8]
   2fa34:	b	2fa44 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2fa38:	mov	r7, #0
   2fa3c:	b	2fae4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fa40:	mov	r9, #0
   2fa44:	ldr	r4, [sl, #124]	; 0x7c
   2fa48:	ldr	r0, [sl, #104]	; 0x68
   2fa4c:	add	r7, sl, #100	; 0x64
   2fa50:	add	r2, r4, #16
   2fa54:	cmp	r2, r0
   2fa58:	bls	2fa80 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2fa5c:	ldr	r0, [sl, #40]	; 0x28
   2fa60:	ldr	r6, [sl, #48]	; 0x30
   2fa64:	mov	r1, #6
   2fa68:	mov	r3, #0
   2fa6c:	str	r1, [sp]
   2fa70:	mov	r1, r7
   2fa74:	blx	r6
   2fa78:	cmp	r0, #0
   2fa7c:	bne	2fbd0 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2fa80:	ldr	r0, [r7]
   2fa84:	mov	r7, #0
   2fa88:	adds	r4, r0, r4
   2fa8c:	beq	2fae4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fa90:	ldr	r0, [sl, #124]	; 0x7c
   2fa94:	ldr	r1, [sl, #152]	; 0x98
   2fa98:	add	r2, r0, #16
   2fa9c:	str	r2, [sl, #124]	; 0x7c
   2faa0:	ldr	r2, [sp, #12]
   2faa4:	str	r1, [r4, #4]
   2faa8:	ldr	r1, [r2]
   2faac:	str	r1, [r4, #12]
   2fab0:	ldr	r1, [sp, #16]
   2fab4:	str	r0, [r2]
   2fab8:	mov	r0, sl
   2fabc:	mov	r2, r5
   2fac0:	bl	2f770 <flatcc_builder_create_vtable@@Base>
   2fac4:	cmp	r0, #0
   2fac8:	str	r0, [r4]
   2facc:	beq	2fae4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fad0:	cmp	r9, #0
   2fad4:	beq	2faf0 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2fad8:	ldr	r0, [r9, #8]
   2fadc:	str	r0, [r4, #8]
   2fae0:	ldr	r7, [r4]
   2fae4:	mov	r0, r7
   2fae8:	sub	sp, fp, #28
   2faec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2faf0:	ldr	r6, [sl, #120]	; 0x78
   2faf4:	ldr	r0, [sl, #172]	; 0xac
   2faf8:	add	r2, r6, r5
   2fafc:	cmp	r0, #0
   2fb00:	beq	2fb3c <flatcc_builder_create_cached_vtable@@Base+0x290>
   2fb04:	cmp	r0, r2
   2fb08:	bcs	2fb3c <flatcc_builder_create_cached_vtable@@Base+0x290>
   2fb0c:	ldr	r0, [sl, #116]	; 0x74
   2fb10:	cmp	r0, #0
   2fb14:	beq	2fae0 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2fb18:	ldr	r0, [sl, #92]	; 0x5c
   2fb1c:	ldr	r2, [sl, #96]	; 0x60
   2fb20:	mov	r1, #0
   2fb24:	mov	r5, #0
   2fb28:	bl	14eec <memset@plt>
   2fb2c:	mov	r0, #16
   2fb30:	str	r5, [sl, #120]	; 0x78
   2fb34:	str	r0, [sl, #124]	; 0x7c
   2fb38:	b	2fae0 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2fb3c:	ldr	r0, [sl, #72]	; 0x48
   2fb40:	add	r7, sl, #68	; 0x44
   2fb44:	cmp	r2, r0
   2fb48:	bls	2fb70 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2fb4c:	ldr	r0, [sl, #40]	; 0x28
   2fb50:	ldr	ip, [sl, #48]	; 0x30
   2fb54:	mov	r1, #2
   2fb58:	mov	r3, #0
   2fb5c:	str	r1, [sp]
   2fb60:	mov	r1, r7
   2fb64:	blx	ip
   2fb68:	cmp	r0, #0
   2fb6c:	bne	2fbd0 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2fb70:	ldr	r0, [r7]
   2fb74:	adds	r0, r0, r6
   2fb78:	beq	2fb9c <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2fb7c:	ldr	r1, [sl, #120]	; 0x78
   2fb80:	mov	r2, r5
   2fb84:	str	r1, [r4, #8]
   2fb88:	add	r1, r1, r5
   2fb8c:	str	r1, [sl, #120]	; 0x78
   2fb90:	ldr	r1, [sp, #16]
   2fb94:	bl	14e5c <memcpy@plt>
   2fb98:	b	2fae0 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2fb9c:	mvn	r7, #0
   2fba0:	b	2fae4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fba4:	ldr	r0, [sp, #12]
   2fba8:	cmp	r6, r0
   2fbac:	beq	2fbc8 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2fbb0:	mov	r1, r0
   2fbb4:	ldr	r0, [r9, #12]
   2fbb8:	str	r0, [r6]
   2fbbc:	ldr	r0, [r1]
   2fbc0:	str	r0, [r9, #12]
   2fbc4:	str	r7, [r1]
   2fbc8:	ldr	r7, [r9]
   2fbcc:	b	2fae4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2fbd0:	movw	r0, #33144	; 0x8178
   2fbd4:	movw	r1, #28626	; 0x6fd2
   2fbd8:	movw	r3, #32690	; 0x7fb2
   2fbdc:	mov	r2, #308	; 0x134
   2fbe0:	movt	r0, #4
   2fbe4:	movt	r1, #4
   2fbe8:	movt	r3, #4
   2fbec:	bl	14f40 <__assert_fail@plt>
   2fbf0:	movw	r0, #33084	; 0x813c
   2fbf4:	movw	r1, #28626	; 0x6fd2
   2fbf8:	movw	r3, #33099	; 0x814b
   2fbfc:	movw	r2, #342	; 0x156
   2fc00:	movt	r0, #4
   2fc04:	movt	r1, #4
   2fc08:	movt	r3, #4
   2fc0c:	bl	14f40 <__assert_fail@plt>

0002fc10 <flatcc_builder_create_table@@Base>:
   2fc10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2fc14:	add	fp, sp, #24
   2fc18:	sub	sp, sp, #80	; 0x50
   2fc1c:	ldr	r5, [fp, #12]
   2fc20:	cmn	r5, #1
   2fc24:	ble	2fd70 <flatcc_builder_create_table@@Base+0x160>
   2fc28:	ldr	ip, [fp, #16]
   2fc2c:	tst	ip, #1
   2fc30:	beq	2fd88 <flatcc_builder_create_table@@Base+0x178>
   2fc34:	mov	r8, r0
   2fc38:	ldrh	r0, [r0, #128]	; 0x80
   2fc3c:	cmp	r3, #4
   2fc40:	movls	r3, #4
   2fc44:	cmp	r0, r3
   2fc48:	strhcc	r3, [r8, #128]	; 0x80
   2fc4c:	cmp	r5, #1
   2fc50:	ldr	r0, [r8, #136]	; 0x88
   2fc54:	sub	r4, r0, r2
   2fc58:	sub	r0, r3, #1
   2fc5c:	and	r0, r4, r0
   2fc60:	sub	r4, r4, #4
   2fc64:	add	r3, ip, r0
   2fc68:	sub	r3, r4, r3
   2fc6c:	add	r3, r3, #1
   2fc70:	str	r3, [fp, #-28]	; 0xffffffe4
   2fc74:	blt	2fca4 <flatcc_builder_create_table@@Base+0x94>
   2fc78:	ldr	r3, [fp, #8]
   2fc7c:	sub	ip, r4, r0
   2fc80:	mvn	r4, #3
   2fc84:	sub	r4, r4, ip
   2fc88:	ldrh	r6, [r3], #2
   2fc8c:	subs	r5, r5, #1
   2fc90:	ldr	r7, [r6, r1]
   2fc94:	add	r7, r4, r7
   2fc98:	sub	r7, r7, r6
   2fc9c:	str	r7, [r6, r1]
   2fca0:	bne	2fc88 <flatcc_builder_create_table@@Base+0x78>
   2fca4:	mov	r4, #4
   2fca8:	sub	r3, fp, #28
   2fcac:	cmp	r2, #0
   2fcb0:	str	r4, [sp, #16]
   2fcb4:	str	r3, [sp, #12]
   2fcb8:	mov	r3, #1
   2fcbc:	str	r4, [sp, #4]
   2fcc0:	addne	r4, r2, #4
   2fcc4:	str	r3, [sp, #8]
   2fcc8:	movne	r3, #2
   2fccc:	strne	r2, [sp, #24]
   2fcd0:	strne	r1, [sp, #20]
   2fcd4:	strne	r3, [sp, #8]
   2fcd8:	strne	r4, [sp, #4]
   2fcdc:	cmp	r0, #0
   2fce0:	beq	2fd0c <flatcc_builder_create_table@@Base+0xfc>
   2fce4:	add	r1, sp, #4
   2fce8:	movw	r2, #28096	; 0x6dc0
   2fcec:	add	r4, r4, r0
   2fcf0:	add	r1, r1, r3, lsl #3
   2fcf4:	movt	r2, #4
   2fcf8:	add	r3, r3, #1
   2fcfc:	str	r4, [sp, #4]
   2fd00:	str	r2, [r1, #8]
   2fd04:	str	r0, [r1, #12]
   2fd08:	str	r3, [sp, #8]
   2fd0c:	cmp	r4, #0
   2fd10:	ble	2fda8 <flatcc_builder_create_table@@Base+0x198>
   2fd14:	ldr	r0, [r8, #136]	; 0x88
   2fd18:	ldr	r7, [r8, #44]	; 0x2c
   2fd1c:	add	r1, sp, #4
   2fd20:	mov	r2, r3
   2fd24:	add	r1, r1, #8
   2fd28:	sub	r5, r0, r4
   2fd2c:	ldr	r0, [r8, #36]	; 0x24
   2fd30:	str	r4, [sp]
   2fd34:	mov	r3, r5
   2fd38:	blx	r7
   2fd3c:	cmp	r0, #0
   2fd40:	streq	r5, [r8, #136]	; 0x88
   2fd44:	moveq	r0, r5
   2fd48:	subeq	sp, fp, #24
   2fd4c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fd50:	movw	r0, #33144	; 0x8178
   2fd54:	movw	r1, #28626	; 0x6fd2
   2fd58:	movw	r3, #32823	; 0x8037
   2fd5c:	movw	r2, #651	; 0x28b
   2fd60:	movt	r0, #4
   2fd64:	movt	r1, #4
   2fd68:	movt	r3, #4
   2fd6c:	bl	14f40 <__assert_fail@plt>
   2fd70:	movw	r0, #30510	; 0x772e
   2fd74:	movw	r1, #28626	; 0x6fd2
   2fd78:	movw	r3, #30528	; 0x7740
   2fd7c:	movw	r2, #1237	; 0x4d5
   2fd80:	movt	r0, #4
   2fd84:	b	2fd9c <flatcc_builder_create_table@@Base+0x18c>
   2fd88:	movw	r0, #30684	; 0x77dc
   2fd8c:	movw	r1, #28626	; 0x6fd2
   2fd90:	movw	r3, #30528	; 0x7740
   2fd94:	movw	r2, #1243	; 0x4db
   2fd98:	movt	r0, #4
   2fd9c:	movt	r1, #4
   2fda0:	movt	r3, #4
   2fda4:	bl	14f40 <__assert_fail@plt>
   2fda8:	movw	r0, #33144	; 0x8178
   2fdac:	movw	r1, #28626	; 0x6fd2
   2fdb0:	movw	r3, #32823	; 0x8037
   2fdb4:	movw	r2, #647	; 0x287
   2fdb8:	b	2fd60 <flatcc_builder_create_table@@Base+0x150>

0002fdbc <flatcc_builder_check_required_field@@Base>:
   2fdbc:	push	{fp, lr}
   2fdc0:	mov	fp, sp
   2fdc4:	ldr	r2, [r0, #32]
   2fdc8:	ldrh	r2, [r2, #14]
   2fdcc:	cmp	r2, #3
   2fdd0:	bne	2fe00 <flatcc_builder_check_required_field@@Base+0x44>
   2fdd4:	ldrh	r3, [r0, #8]
   2fdd8:	mov	r2, #0
   2fddc:	cmp	r3, r1
   2fde0:	bls	2fdf8 <flatcc_builder_check_required_field@@Base+0x3c>
   2fde4:	ldr	r0, [r0, #4]
   2fde8:	add	r0, r0, r1, lsl #1
   2fdec:	ldrh	r2, [r0]
   2fdf0:	cmp	r2, #0
   2fdf4:	movwne	r2, #1
   2fdf8:	mov	r0, r2
   2fdfc:	pop	{fp, pc}
   2fe00:	movw	r0, #30695	; 0x77e7
   2fe04:	movw	r1, #28626	; 0x6fd2
   2fe08:	movw	r3, #30738	; 0x7812
   2fe0c:	movw	r2, #1272	; 0x4f8
   2fe10:	movt	r0, #4
   2fe14:	movt	r1, #4
   2fe18:	movt	r3, #4
   2fe1c:	bl	14f40 <__assert_fail@plt>

0002fe20 <flatcc_builder_check_union_field@@Base>:
   2fe20:	push	{fp, lr}
   2fe24:	mov	fp, sp
   2fe28:	mov	r2, r0
   2fe2c:	ldr	r0, [r0, #32]
   2fe30:	ldrh	r0, [r0, #14]
   2fe34:	cmp	r0, #3
   2fe38:	bne	2fe98 <flatcc_builder_check_union_field@@Base+0x78>
   2fe3c:	mov	r0, #0
   2fe40:	cmp	r1, #0
   2fe44:	beq	2fe84 <flatcc_builder_check_union_field@@Base+0x64>
   2fe48:	ldrh	r3, [r2, #8]
   2fe4c:	cmp	r3, r1
   2fe50:	popls	{fp, pc}
   2fe54:	ldr	r0, [r2, #4]
   2fe58:	add	r0, r0, r1, lsl #1
   2fe5c:	ldrh	r1, [r0, #-2]
   2fe60:	cmp	r1, #0
   2fe64:	beq	2fe88 <flatcc_builder_check_union_field@@Base+0x68>
   2fe68:	ldr	r2, [r2, #16]
   2fe6c:	ldrh	r0, [r0]
   2fe70:	ldrb	r1, [r2, r1]
   2fe74:	cmp	r1, #0
   2fe78:	beq	2fe8c <flatcc_builder_check_union_field@@Base+0x6c>
   2fe7c:	cmp	r0, #0
   2fe80:	movwne	r0, #1
   2fe84:	pop	{fp, pc}
   2fe88:	ldrh	r0, [r0]
   2fe8c:	clz	r0, r0
   2fe90:	lsr	r0, r0, #5
   2fe94:	pop	{fp, pc}
   2fe98:	movw	r0, #30695	; 0x77e7
   2fe9c:	movw	r1, #28626	; 0x6fd2
   2fea0:	movw	r3, #30821	; 0x7865
   2fea4:	movw	r2, #1279	; 0x4ff
   2fea8:	movt	r0, #4
   2feac:	movt	r1, #4
   2feb0:	movt	r3, #4
   2feb4:	bl	14f40 <__assert_fail@plt>

0002feb8 <flatcc_builder_check_required@@Base>:
   2feb8:	push	{fp, lr}
   2febc:	mov	fp, sp
   2fec0:	mov	r3, r0
   2fec4:	ldr	r0, [r0, #32]
   2fec8:	ldrh	r0, [r0, #14]
   2fecc:	cmp	r0, #3
   2fed0:	bne	2ff18 <flatcc_builder_check_required@@Base+0x60>
   2fed4:	ldrh	ip, [r3, #8]
   2fed8:	mov	r0, #0
   2fedc:	cmp	ip, r2
   2fee0:	poplt	{fp, pc}
   2fee4:	cmp	r2, #1
   2fee8:	blt	2ff10 <flatcc_builder_check_required@@Base+0x58>
   2feec:	ldr	ip, [r3, #4]
   2fef0:	ldrh	r3, [r1]
   2fef4:	add	r3, ip, r3, lsl #1
   2fef8:	ldrh	r3, [r3]
   2fefc:	cmp	r3, #0
   2ff00:	beq	2ff14 <flatcc_builder_check_required@@Base+0x5c>
   2ff04:	add	r1, r1, #2
   2ff08:	subs	r2, r2, #1
   2ff0c:	bne	2fef0 <flatcc_builder_check_required@@Base+0x38>
   2ff10:	mov	r0, #1
   2ff14:	pop	{fp, pc}
   2ff18:	movw	r0, #30695	; 0x77e7
   2ff1c:	movw	r1, #28626	; 0x6fd2
   2ff20:	movw	r3, #30901	; 0x78b5
   2ff24:	movw	r2, #1297	; 0x511
   2ff28:	movt	r0, #4
   2ff2c:	movt	r1, #4
   2ff30:	movt	r3, #4
   2ff34:	bl	14f40 <__assert_fail@plt>

0002ff38 <flatcc_builder_end_table@@Base>:
   2ff38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ff3c:	add	fp, sp, #24
   2ff40:	sub	sp, sp, #16
   2ff44:	mov	r4, r0
   2ff48:	ldr	r0, [r0, #32]
   2ff4c:	ldrh	r0, [r0, #14]
   2ff50:	cmp	r0, #3
   2ff54:	bne	300d0 <flatcc_builder_end_table@@Base+0x198>
   2ff58:	ldrh	r0, [r4, #8]
   2ff5c:	ldr	r5, [r4, #4]
   2ff60:	mov	r1, #4
   2ff64:	movw	r2, #31153	; 0x79b1
   2ff68:	movt	r2, #40503	; 0x9e37
   2ff6c:	add	r0, r1, r0, lsl #1
   2ff70:	strh	r0, [r5, #-4]!
   2ff74:	ldrh	r1, [r4, #20]
   2ff78:	uxth	r6, r0
   2ff7c:	add	r1, r1, #4
   2ff80:	strh	r1, [r5, #2]
   2ff84:	uxth	r1, r1
   2ff88:	ldr	r0, [r4, #12]
   2ff8c:	eor	r0, r0, r6
   2ff90:	mul	r0, r0, r2
   2ff94:	eor	r0, r0, r1
   2ff98:	mov	r1, r5
   2ff9c:	mul	r3, r0, r2
   2ffa0:	mov	r0, r4
   2ffa4:	mov	r2, r6
   2ffa8:	str	r3, [r4, #12]
   2ffac:	bl	2f8ac <flatcc_builder_create_cached_vtable@@Base>
   2ffb0:	cmp	r0, #0
   2ffb4:	beq	300c0 <flatcc_builder_end_table@@Base+0x188>
   2ffb8:	mov	r7, r0
   2ffbc:	mov	r0, r5
   2ffc0:	mov	r1, #0
   2ffc4:	mov	r2, r6
   2ffc8:	mov	r8, #0
   2ffcc:	bl	14eec <memset@plt>
   2ffd0:	ldr	r5, [r4, #32]
   2ffd4:	ldr	r0, [r4, #76]	; 0x4c
   2ffd8:	ldr	r6, [r4]
   2ffdc:	ldrh	r3, [r4, #130]	; 0x82
   2ffe0:	ldr	r1, [r4, #16]
   2ffe4:	ldr	r2, [r4, #20]
   2ffe8:	ldr	r5, [r5, #20]
   2ffec:	add	r0, r0, r5
   2fff0:	sub	r6, r6, r0
   2fff4:	asr	r6, r6, #1
   2fff8:	stm	sp, {r0, r6, r7}
   2fffc:	mov	r0, r4
   30000:	bl	2fc10 <flatcc_builder_create_table@@Base>
   30004:	cmp	r0, #0
   30008:	beq	300c4 <flatcc_builder_end_table@@Base+0x18c>
   3000c:	ldr	r1, [r4, #32]
   30010:	mov	r5, r0
   30014:	ldr	r0, [r4, #16]
   30018:	ldr	r2, [r4, #20]
   3001c:	ldr	r3, [r4, #52]	; 0x34
   30020:	ldr	r7, [r1, #24]
   30024:	str	r7, [r4, #12]
   30028:	ldrh	r7, [r1, #28]
   3002c:	strh	r7, [r4, #8]
   30030:	ldr	r7, [r1, #16]
   30034:	add	r3, r3, r7
   30038:	str	r3, [r4, #4]
   3003c:	ldr	r3, [r4, #76]	; 0x4c
   30040:	ldr	r1, [r1, #20]
   30044:	add	r1, r3, r1
   30048:	str	r1, [r4]
   3004c:	mov	r1, #0
   30050:	bl	14eec <memset@plt>
   30054:	ldr	r0, [r4, #32]
   30058:	ldr	r1, [r4, #60]	; 0x3c
   3005c:	ldr	r2, [r4, #64]	; 0x40
   30060:	mov	r8, r5
   30064:	ldr	r3, [r0, #8]
   30068:	str	r3, [r4, #20]
   3006c:	ldr	r3, [r0]
   30070:	str	r3, [r4, #28]
   30074:	add	r1, r1, r3
   30078:	ldr	r7, [r0, #4]
   3007c:	str	r1, [r4, #16]
   30080:	sub	r1, r2, r3
   30084:	cmp	r1, r7
   30088:	movhi	r1, r7
   3008c:	str	r1, [r4, #24]
   30090:	ldrh	r1, [r4, #130]	; 0x82
   30094:	ldrh	r2, [r4, #128]	; 0x80
   30098:	cmp	r2, r1
   3009c:	strhcc	r1, [r4, #128]	; 0x80
   300a0:	ldrh	r1, [r0, #12]
   300a4:	sub	r0, r0, #36	; 0x24
   300a8:	str	r0, [r4, #32]
   300ac:	strh	r1, [r4, #130]	; 0x82
   300b0:	ldr	r0, [r4, #156]	; 0x9c
   300b4:	sub	r0, r0, #1
   300b8:	str	r0, [r4, #156]	; 0x9c
   300bc:	b	300c4 <flatcc_builder_end_table@@Base+0x18c>
   300c0:	mov	r8, #0
   300c4:	mov	r0, r8
   300c8:	sub	sp, fp, #24
   300cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   300d0:	movw	r0, #30695	; 0x77e7
   300d4:	movw	r1, #28626	; 0x6fd2
   300d8:	movw	r3, #30991	; 0x790f
   300dc:	movw	r2, #1317	; 0x525
   300e0:	movt	r0, #4
   300e4:	movt	r1, #4
   300e8:	movt	r3, #4
   300ec:	bl	14f40 <__assert_fail@plt>

000300f0 <flatcc_builder_create_vector@@Base>:
   300f0:	push	{r4, r5, r6, r7, fp, lr}
   300f4:	add	fp, sp, #16
   300f8:	sub	sp, sp, #80	; 0x50
   300fc:	mov	r7, r0
   30100:	ldr	r0, [fp, #12]
   30104:	cmp	r2, r0
   30108:	bhi	30204 <flatcc_builder_create_vector@@Base+0x114>
   3010c:	ldr	r0, [fp, #8]
   30110:	mov	r4, r2
   30114:	ldrh	r2, [r7, #128]	; 0x80
   30118:	mov	r5, #4
   3011c:	cmp	r0, #4
   30120:	movls	r0, r5
   30124:	cmp	r2, r0
   30128:	sub	r2, fp, #20
   3012c:	strhcc	r0, [r7, #128]	; 0x80
   30130:	str	r4, [fp, #-20]	; 0xffffffec
   30134:	sub	r0, r0, #1
   30138:	ldr	ip, [r7, #136]	; 0x88
   3013c:	str	r5, [sp, #16]
   30140:	str	r2, [sp, #12]
   30144:	mov	r2, #1
   30148:	str	r5, [sp, #4]
   3014c:	str	r2, [sp, #8]
   30150:	mls	r6, r3, r4, ip
   30154:	mul	r3, r3, r4
   30158:	cmp	r3, #0
   3015c:	and	r0, r6, r0
   30160:	movne	r2, #2
   30164:	addne	r5, r3, #4
   30168:	strne	r3, [sp, #24]
   3016c:	strne	r1, [sp, #20]
   30170:	strne	r2, [sp, #8]
   30174:	strne	r5, [sp, #4]
   30178:	cmp	r0, #0
   3017c:	beq	301a8 <flatcc_builder_create_vector@@Base+0xb8>
   30180:	add	r1, sp, #4
   30184:	movw	r3, #28096	; 0x6dc0
   30188:	add	r5, r5, r0
   3018c:	add	r1, r1, r2, lsl #3
   30190:	movt	r3, #4
   30194:	add	r2, r2, #1
   30198:	str	r5, [sp, #4]
   3019c:	str	r3, [r1, #8]
   301a0:	str	r0, [r1, #12]
   301a4:	str	r2, [sp, #8]
   301a8:	cmp	r5, #0
   301ac:	ble	30224 <flatcc_builder_create_vector@@Base+0x134>
   301b0:	ldr	r0, [r7, #36]	; 0x24
   301b4:	ldr	r6, [r7, #44]	; 0x2c
   301b8:	add	r1, sp, #4
   301bc:	sub	r4, ip, r5
   301c0:	str	r5, [sp]
   301c4:	add	r1, r1, #8
   301c8:	mov	r3, r4
   301cc:	blx	r6
   301d0:	cmp	r0, #0
   301d4:	streq	r4, [r7, #136]	; 0x88
   301d8:	moveq	r0, r4
   301dc:	subeq	sp, fp, #16
   301e0:	popeq	{r4, r5, r6, r7, fp, pc}
   301e4:	movw	r0, #33144	; 0x8178
   301e8:	movw	r1, #28626	; 0x6fd2
   301ec:	movw	r3, #32823	; 0x8037
   301f0:	movw	r2, #651	; 0x28b
   301f4:	movt	r0, #4
   301f8:	movt	r1, #4
   301fc:	movt	r3, #4
   30200:	bl	14f40 <__assert_fail@plt>
   30204:	movw	r0, #31057	; 0x7951
   30208:	movw	r1, #28626	; 0x6fd2
   3020c:	movw	r3, #31076	; 0x7964
   30210:	movw	r2, #1365	; 0x555
   30214:	movt	r0, #4
   30218:	movt	r1, #4
   3021c:	movt	r3, #4
   30220:	bl	14f40 <__assert_fail@plt>
   30224:	movw	r0, #33144	; 0x8178
   30228:	movw	r1, #28626	; 0x6fd2
   3022c:	movw	r3, #32823	; 0x8037
   30230:	movw	r2, #647	; 0x287
   30234:	b	301f4 <flatcc_builder_create_vector@@Base+0x104>

00030238 <flatcc_builder_end_vector@@Base>:
   30238:	push	{r4, r5, fp, lr}
   3023c:	add	fp, sp, #8
   30240:	sub	sp, sp, #8
   30244:	mov	r4, r0
   30248:	ldr	r0, [r0, #32]
   3024c:	ldrh	r1, [r0, #14]
   30250:	cmp	r1, #4
   30254:	bne	30308 <flatcc_builder_end_vector@@Base+0xd0>
   30258:	ldr	r3, [r0, #16]
   3025c:	ldr	r2, [r0, #20]
   30260:	ldr	r0, [r0, #24]
   30264:	ldr	r1, [r4, #16]
   30268:	ldrh	r5, [r4, #130]	; 0x82
   3026c:	str	r0, [sp, #4]
   30270:	mov	r0, r4
   30274:	str	r5, [sp]
   30278:	bl	300f0 <flatcc_builder_create_vector@@Base>
   3027c:	mov	r5, r0
   30280:	cmp	r0, #0
   30284:	beq	302fc <flatcc_builder_end_vector@@Base+0xc4>
   30288:	ldr	r0, [r4, #16]
   3028c:	ldr	r2, [r4, #20]
   30290:	mov	r1, #0
   30294:	bl	14eec <memset@plt>
   30298:	ldr	r0, [r4, #32]
   3029c:	ldr	r1, [r4, #60]	; 0x3c
   302a0:	ldr	ip, [r4, #64]	; 0x40
   302a4:	ldr	r3, [r0, #8]
   302a8:	str	r3, [r4, #20]
   302ac:	ldr	r3, [r0]
   302b0:	str	r3, [r4, #28]
   302b4:	add	r1, r1, r3
   302b8:	ldr	r2, [r0, #4]
   302bc:	str	r1, [r4, #16]
   302c0:	sub	r1, ip, r3
   302c4:	cmp	r1, r2
   302c8:	movhi	r1, r2
   302cc:	str	r1, [r4, #24]
   302d0:	ldrh	r1, [r4, #130]	; 0x82
   302d4:	ldrh	r2, [r4, #128]	; 0x80
   302d8:	cmp	r2, r1
   302dc:	strhcc	r1, [r4, #128]	; 0x80
   302e0:	ldrh	r1, [r0, #12]
   302e4:	sub	r0, r0, #36	; 0x24
   302e8:	str	r0, [r4, #32]
   302ec:	strh	r1, [r4, #130]	; 0x82
   302f0:	ldr	r0, [r4, #156]	; 0x9c
   302f4:	sub	r0, r0, #1
   302f8:	str	r0, [r4, #156]	; 0x9c
   302fc:	mov	r0, r5
   30300:	sub	sp, fp, #8
   30304:	pop	{r4, r5, fp, pc}
   30308:	movw	r0, #29429	; 0x72f5
   3030c:	movw	r1, #28626	; 0x6fd2
   30310:	movw	r3, #31194	; 0x79da
   30314:	movw	r2, #1400	; 0x578
   30318:	movt	r0, #4
   3031c:	movt	r1, #4
   30320:	movt	r3, #4
   30324:	bl	14f40 <__assert_fail@plt>

00030328 <flatcc_builder_vector_count@@Base>:
   30328:	ldr	r0, [r0, #32]
   3032c:	ldr	r0, [r0, #20]
   30330:	bx	lr

00030334 <flatcc_builder_vector_edit@@Base>:
   30334:	ldr	r0, [r0, #16]
   30338:	bx	lr

0003033c <flatcc_builder_create_offset_vector_direct@@Base>:
   3033c:	mov	r3, #0
   30340:	b	30344 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30344:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30348:	add	fp, sp, #24
   3034c:	sub	sp, sp, #80	; 0x50
   30350:	mov	r6, #0
   30354:	cmn	r2, #-1073741823	; 0xc0000001
   30358:	bhi	30494 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   3035c:	mov	r8, r0
   30360:	ldrh	r0, [r0, #128]	; 0x80
   30364:	mov	r5, #4
   30368:	sub	r7, fp, #28
   3036c:	mov	r4, #1
   30370:	cmp	r0, #3
   30374:	movls	r0, #4
   30378:	strhls	r0, [r8, #128]	; 0x80
   3037c:	str	r2, [fp, #-28]	; 0xffffffe4
   30380:	ldr	ip, [r8, #136]	; 0x88
   30384:	str	r5, [sp, #16]
   30388:	str	r7, [sp, #12]
   3038c:	mov	r7, #0
   30390:	str	r5, [sp, #4]
   30394:	str	r4, [sp, #8]
   30398:	cmp	r7, r2, lsl #2
   3039c:	and	r6, ip, #3
   303a0:	beq	303c0 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   303a4:	lsl	r7, r2, #2
   303a8:	mov	r4, #2
   303ac:	add	r5, r7, #4
   303b0:	str	r7, [sp, #24]
   303b4:	str	r1, [sp, #20]
   303b8:	str	r4, [sp, #8]
   303bc:	str	r5, [sp, #4]
   303c0:	cmp	r6, #0
   303c4:	beq	303f0 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   303c8:	add	r7, sp, #4
   303cc:	movw	r0, #28096	; 0x6dc0
   303d0:	add	r5, r5, r6
   303d4:	add	r7, r7, r4, lsl #3
   303d8:	movt	r0, #4
   303dc:	add	r4, r4, #1
   303e0:	str	r5, [sp, #4]
   303e4:	str	r0, [r7, #8]
   303e8:	str	r6, [r7, #12]
   303ec:	str	r4, [sp, #8]
   303f0:	cmp	r2, #0
   303f4:	beq	3045c <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   303f8:	sub	r0, r5, ip
   303fc:	mov	r6, r3
   30400:	sub	r0, r0, #4
   30404:	ldr	r7, [r1]
   30408:	cmp	r7, #0
   3040c:	beq	30430 <flatcc_builder_create_offset_vector_direct@@Base+0xf4>
   30410:	add	r7, r0, r7
   30414:	cmp	r3, #0
   30418:	str	r7, [r1]
   3041c:	beq	30444 <flatcc_builder_create_offset_vector_direct@@Base+0x108>
   30420:	ldrb	r7, [r6]
   30424:	cmp	r7, #0
   30428:	bne	30444 <flatcc_builder_create_offset_vector_direct@@Base+0x108>
   3042c:	b	304a0 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   30430:	cmp	r3, #0
   30434:	beq	304d0 <flatcc_builder_create_offset_vector_direct@@Base+0x194>
   30438:	ldrb	r7, [r6]
   3043c:	cmp	r7, #0
   30440:	bne	304b8 <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   30444:	sub	r0, r0, #4
   30448:	add	r1, r1, #4
   3044c:	add	r6, r6, #1
   30450:	subs	r2, r2, #1
   30454:	bne	30404 <flatcc_builder_create_offset_vector_direct@@Base+0xc8>
   30458:	ldr	ip, [r8, #136]	; 0x88
   3045c:	cmp	r5, #0
   30460:	ble	304f0 <flatcc_builder_create_offset_vector_direct@@Base+0x1b4>
   30464:	ldr	r0, [r8, #36]	; 0x24
   30468:	ldr	r7, [r8, #44]	; 0x2c
   3046c:	add	r1, sp, #4
   30470:	sub	r6, ip, r5
   30474:	mov	r2, r4
   30478:	str	r5, [sp]
   3047c:	add	r1, r1, #8
   30480:	mov	r3, r6
   30484:	blx	r7
   30488:	cmp	r0, #0
   3048c:	bne	30504 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   30490:	str	r6, [r8, #136]	; 0x88
   30494:	mov	r0, r6
   30498:	sub	sp, fp, #24
   3049c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   304a0:	movw	r0, #33132	; 0x816c
   304a4:	movw	r1, #28626	; 0x6fd2
   304a8:	movw	r3, #33146	; 0x817a
   304ac:	movw	r2, #1457	; 0x5b1
   304b0:	movt	r0, #4
   304b4:	b	304e4 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   304b8:	movw	r0, #33277	; 0x81fd
   304bc:	movw	r1, #28626	; 0x6fd2
   304c0:	movw	r3, #33146	; 0x817a
   304c4:	movw	r2, #1461	; 0x5b5
   304c8:	movt	r0, #4
   304cc:	b	304e4 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   304d0:	movw	r0, #33144	; 0x8178
   304d4:	movw	r1, #28626	; 0x6fd2
   304d8:	movw	r3, #33146	; 0x817a
   304dc:	movw	r2, #1463	; 0x5b7
   304e0:	movt	r0, #4
   304e4:	movt	r1, #4
   304e8:	movt	r3, #4
   304ec:	bl	14f40 <__assert_fail@plt>
   304f0:	movw	r0, #33144	; 0x8178
   304f4:	movw	r1, #28626	; 0x6fd2
   304f8:	movw	r3, #32823	; 0x8037
   304fc:	movw	r2, #647	; 0x287
   30500:	b	30514 <flatcc_builder_create_offset_vector_direct@@Base+0x1d8>
   30504:	movw	r0, #33144	; 0x8178
   30508:	movw	r1, #28626	; 0x6fd2
   3050c:	movw	r3, #32823	; 0x8037
   30510:	movw	r2, #651	; 0x28b
   30514:	movt	r0, #4
   30518:	movt	r1, #4
   3051c:	movt	r3, #4
   30520:	bl	14f40 <__assert_fail@plt>

00030524 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   30524:	push	{r4, r5, fp, lr}
   30528:	add	fp, sp, #8
   3052c:	mov	r4, r0
   30530:	ldr	r0, [r0, #32]
   30534:	mov	r3, r1
   30538:	ldrh	r1, [r0, #14]
   3053c:	cmp	r1, #5
   30540:	bne	305dc <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   30544:	ldr	r2, [r0, #20]
   30548:	ldr	r1, [r4, #16]
   3054c:	mov	r0, r4
   30550:	bl	30344 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30554:	mov	r5, r0
   30558:	cmp	r0, #0
   3055c:	beq	305d4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   30560:	ldr	r0, [r4, #16]
   30564:	ldr	r2, [r4, #20]
   30568:	mov	r1, #0
   3056c:	bl	14eec <memset@plt>
   30570:	ldr	r0, [r4, #32]
   30574:	ldr	r1, [r4, #60]	; 0x3c
   30578:	ldr	ip, [r4, #64]	; 0x40
   3057c:	ldr	r3, [r0, #8]
   30580:	str	r3, [r4, #20]
   30584:	ldr	r3, [r0]
   30588:	str	r3, [r4, #28]
   3058c:	add	r1, r1, r3
   30590:	ldr	r2, [r0, #4]
   30594:	str	r1, [r4, #16]
   30598:	sub	r1, ip, r3
   3059c:	cmp	r1, r2
   305a0:	movhi	r1, r2
   305a4:	str	r1, [r4, #24]
   305a8:	ldrh	r1, [r4, #130]	; 0x82
   305ac:	ldrh	r2, [r4, #128]	; 0x80
   305b0:	cmp	r2, r1
   305b4:	strhcc	r1, [r4, #128]	; 0x80
   305b8:	ldrh	r1, [r0, #12]
   305bc:	sub	r0, r0, #36	; 0x24
   305c0:	str	r0, [r4, #32]
   305c4:	strh	r1, [r4, #130]	; 0x82
   305c8:	ldr	r0, [r4, #156]	; 0x9c
   305cc:	sub	r0, r0, #1
   305d0:	str	r0, [r4, #156]	; 0x9c
   305d4:	mov	r0, r5
   305d8:	pop	{r4, r5, fp, pc}
   305dc:	movw	r0, #29678	; 0x73ee
   305e0:	movw	r1, #28626	; 0x6fd2
   305e4:	movw	r3, #31335	; 0x7a67
   305e8:	movw	r2, #1493	; 0x5d5
   305ec:	movt	r0, #4
   305f0:	movt	r1, #4
   305f4:	movt	r3, #4
   305f8:	bl	14f40 <__assert_fail@plt>

000305fc <flatcc_builder_offset_vector_edit@@Base>:
   305fc:	ldr	r0, [r0, #16]
   30600:	bx	lr

00030604 <flatcc_builder_offset_vector_count@@Base>:
   30604:	ldr	r0, [r0, #32]
   30608:	ldr	r0, [r0, #20]
   3060c:	bx	lr

00030610 <flatcc_builder_table_add_union@@Base>:
   30610:	push	{r4, r5, r6, r7, fp, lr}
   30614:	add	fp, sp, #16
   30618:	mov	r5, r0
   3061c:	ldr	r0, [r0, #32]
   30620:	ldrh	r0, [r0, #14]
   30624:	cmp	r0, #3
   30628:	bne	306b0 <flatcc_builder_table_add_union@@Base+0xa0>
   3062c:	mov	r7, r3
   30630:	mov	r4, r2
   30634:	mov	r6, r1
   30638:	cmp	r3, #0
   3063c:	beq	3064c <flatcc_builder_table_add_union@@Base+0x3c>
   30640:	uxtb	r0, r4
   30644:	cmp	r0, #0
   30648:	beq	306c8 <flatcc_builder_table_add_union@@Base+0xb8>
   3064c:	cmp	r7, #0
   30650:	beq	3066c <flatcc_builder_table_add_union@@Base+0x5c>
   30654:	mov	r0, r5
   30658:	mov	r1, r6
   3065c:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   30660:	cmp	r0, #0
   30664:	beq	306e0 <flatcc_builder_table_add_union@@Base+0xd0>
   30668:	str	r7, [r0]
   3066c:	sub	r1, r6, #1
   30670:	mov	r0, r5
   30674:	mov	r2, #1
   30678:	mov	r3, #1
   3067c:	bl	30824 <flatcc_builder_table_add@@Base>
   30680:	cmp	r0, #0
   30684:	strbne	r4, [r0]
   30688:	movne	r0, #0
   3068c:	popne	{r4, r5, r6, r7, fp, pc}
   30690:	movw	r0, #31581	; 0x7b5d
   30694:	movw	r1, #28626	; 0x6fd2
   30698:	movw	r3, #31449	; 0x7ad9
   3069c:	movw	r2, #1526	; 0x5f6
   306a0:	movt	r0, #4
   306a4:	movt	r1, #4
   306a8:	movt	r3, #4
   306ac:	bl	14f40 <__assert_fail@plt>
   306b0:	movw	r0, #30695	; 0x77e7
   306b4:	movw	r1, #28626	; 0x6fd2
   306b8:	movw	r3, #31449	; 0x7ad9
   306bc:	movw	r2, #1518	; 0x5ee
   306c0:	movt	r0, #4
   306c4:	b	306a4 <flatcc_builder_table_add_union@@Base+0x94>
   306c8:	movw	r0, #31537	; 0x7b31
   306cc:	movw	r1, #28626	; 0x6fd2
   306d0:	movw	r3, #31449	; 0x7ad9
   306d4:	movw	r2, #1519	; 0x5ef
   306d8:	movt	r0, #4
   306dc:	b	306a4 <flatcc_builder_table_add_union@@Base+0x94>
   306e0:	movw	r0, #31571	; 0x7b53
   306e4:	movw	r1, #28626	; 0x6fd2
   306e8:	movw	r3, #31449	; 0x7ad9
   306ec:	movw	r2, #1522	; 0x5f2
   306f0:	movt	r0, #4
   306f4:	b	306a4 <flatcc_builder_table_add_union@@Base+0x94>

000306f8 <flatcc_builder_table_add_offset@@Base>:
   306f8:	push	{r4, r5, r6, r7, fp, lr}
   306fc:	add	fp, sp, #16
   30700:	mov	r4, r0
   30704:	ldr	r0, [r0, #32]
   30708:	ldrh	r0, [r0, #14]
   3070c:	cmp	r0, #3
   30710:	bne	307d4 <flatcc_builder_table_add_offset@@Base+0xdc>
   30714:	movw	r0, #32765	; 0x7ffd
   30718:	mov	r5, r1
   3071c:	cmp	r1, r0
   30720:	bcs	307ec <flatcc_builder_table_add_offset@@Base+0xf4>
   30724:	ldr	r0, [r4, #4]
   30728:	add	r1, r0, r5, lsl #1
   3072c:	ldrh	r1, [r1]
   30730:	cmp	r1, #0
   30734:	bne	30804 <flatcc_builder_table_add_offset@@Base+0x10c>
   30738:	ldr	r2, [r4, #20]
   3073c:	ldr	r1, [r4, #12]
   30740:	ldr	r3, [r4, #24]
   30744:	add	r2, r2, #3
   30748:	eor	r1, r1, r5
   3074c:	bic	r7, r2, #3
   30750:	movw	r2, #31153	; 0x79b1
   30754:	movt	r2, #40503	; 0x9e37
   30758:	add	r6, r7, #4
   3075c:	cmp	r6, r3
   30760:	str	r6, [r4, #20]
   30764:	mul	r1, r1, r2
   30768:	eor	r1, r1, #4
   3076c:	mul	r1, r1, r2
   30770:	str	r1, [r4, #12]
   30774:	bls	3079c <flatcc_builder_table_add_offset@@Base+0xa4>
   30778:	mov	r0, r4
   3077c:	mov	r1, r6
   30780:	movw	r2, #65532	; 0xfffc
   30784:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   30788:	mov	r1, r0
   3078c:	mov	r0, #0
   30790:	cmp	r1, #0
   30794:	popne	{r4, r5, r6, r7, fp, pc}
   30798:	ldr	r0, [r4, #4]
   3079c:	uxth	r1, r5
   307a0:	add	r0, r0, r1, lsl #1
   307a4:	strh	r6, [r0]
   307a8:	ldrh	r0, [r4, #8]
   307ac:	cmp	r0, r1
   307b0:	addls	r0, r5, #1
   307b4:	strhls	r0, [r4, #8]
   307b8:	ldr	r0, [r4]
   307bc:	add	r1, r0, #2
   307c0:	str	r1, [r4]
   307c4:	strh	r7, [r0]
   307c8:	ldr	r0, [r4, #16]
   307cc:	add	r0, r0, r7
   307d0:	pop	{r4, r5, r6, r7, fp, pc}
   307d4:	movw	r0, #30695	; 0x77e7
   307d8:	movw	r1, #28626	; 0x6fd2
   307dc:	movw	r3, #32475	; 0x7edb
   307e0:	movw	r2, #1811	; 0x713
   307e4:	movt	r0, #4
   307e8:	b	30818 <flatcc_builder_table_add_offset@@Base+0x120>
   307ec:	movw	r0, #32347	; 0x7e5b
   307f0:	movw	r1, #28626	; 0x6fd2
   307f4:	movw	r3, #32475	; 0x7edb
   307f8:	movw	r2, #1812	; 0x714
   307fc:	movt	r0, #4
   30800:	b	30818 <flatcc_builder_table_add_offset@@Base+0x120>
   30804:	movw	r0, #33144	; 0x8178
   30808:	movw	r1, #28626	; 0x6fd2
   3080c:	movw	r3, #32475	; 0x7edb
   30810:	movw	r2, #1819	; 0x71b
   30814:	movt	r0, #4
   30818:	movt	r1, #4
   3081c:	movt	r3, #4
   30820:	bl	14f40 <__assert_fail@plt>

00030824 <flatcc_builder_table_add@@Base>:
   30824:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30828:	add	fp, sp, #24
   3082c:	mov	r4, r0
   30830:	ldr	r0, [r0, #32]
   30834:	ldrh	r0, [r0, #14]
   30838:	cmp	r0, #3
   3083c:	bne	3090c <flatcc_builder_table_add@@Base+0xe8>
   30840:	movw	r0, #32765	; 0x7ffd
   30844:	mov	r8, r1
   30848:	cmp	r1, r0
   3084c:	bcs	30924 <flatcc_builder_table_add@@Base+0x100>
   30850:	ldrh	r0, [r4, #130]	; 0x82
   30854:	cmp	r0, r3
   30858:	strhcc	r3, [r4, #130]	; 0x82
   3085c:	ldr	r0, [r4, #4]
   30860:	add	r1, r0, r8, lsl #1
   30864:	ldrh	r1, [r1]
   30868:	cmp	r1, #0
   3086c:	bne	3093c <flatcc_builder_table_add@@Base+0x118>
   30870:	ldr	r1, [r4, #12]
   30874:	movw	r7, #31153	; 0x79b1
   30878:	ldr	r6, [r4, #20]
   3087c:	ldr	r5, [r4, #24]
   30880:	movt	r7, #40503	; 0x9e37
   30884:	eor	r1, r1, r8
   30888:	mul	r1, r1, r7
   3088c:	eor	r1, r1, r2
   30890:	mul	r1, r1, r7
   30894:	str	r1, [r4, #12]
   30898:	add	r1, r3, r6
   3089c:	rsb	r3, r3, #0
   308a0:	sub	r1, r1, #1
   308a4:	and	r6, r1, r3
   308a8:	add	r1, r6, r2
   308ac:	cmp	r1, r5
   308b0:	str	r1, [r4, #20]
   308b4:	bcc	308e0 <flatcc_builder_table_add@@Base+0xbc>
   308b8:	add	r1, r1, #1
   308bc:	mov	r0, r4
   308c0:	movw	r2, #65532	; 0xfffc
   308c4:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   308c8:	mov	r1, r0
   308cc:	mov	r0, #0
   308d0:	cmp	r1, #0
   308d4:	beq	308dc <flatcc_builder_table_add@@Base+0xb8>
   308d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   308dc:	ldr	r0, [r4, #4]
   308e0:	uxth	r1, r8
   308e4:	add	r2, r6, #4
   308e8:	add	r0, r0, r1, lsl #1
   308ec:	strh	r2, [r0]
   308f0:	ldrh	r0, [r4, #8]
   308f4:	cmp	r0, r1
   308f8:	addls	r0, r8, #1
   308fc:	strhls	r0, [r4, #8]
   30900:	ldr	r0, [r4, #16]
   30904:	add	r0, r0, r6
   30908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3090c:	movw	r0, #30695	; 0x77e7
   30910:	movw	r1, #28626	; 0x6fd2
   30914:	movw	r3, #32273	; 0x7e11
   30918:	movw	r2, #1773	; 0x6ed
   3091c:	movt	r0, #4
   30920:	b	30950 <flatcc_builder_table_add@@Base+0x12c>
   30924:	movw	r0, #32347	; 0x7e5b
   30928:	movw	r1, #28626	; 0x6fd2
   3092c:	movw	r3, #32273	; 0x7e11
   30930:	movw	r2, #1774	; 0x6ee
   30934:	movt	r0, #4
   30938:	b	30950 <flatcc_builder_table_add@@Base+0x12c>
   3093c:	movw	r0, #33144	; 0x8178
   30940:	movw	r1, #28626	; 0x6fd2
   30944:	movw	r3, #32273	; 0x7e11
   30948:	movw	r2, #1784	; 0x6f8
   3094c:	movt	r0, #4
   30950:	movt	r1, #4
   30954:	movt	r3, #4
   30958:	bl	14f40 <__assert_fail@plt>

0003095c <flatcc_builder_table_add_union_vector@@Base>:
   3095c:	push	{r4, r5, r6, r7, fp, lr}
   30960:	add	fp, sp, #16
   30964:	mov	r6, r0
   30968:	ldr	r0, [r0, #32]
   3096c:	ldrh	r0, [r0, #14]
   30970:	cmp	r0, #3
   30974:	bne	309e0 <flatcc_builder_table_add_union_vector@@Base+0x84>
   30978:	mov	r5, r1
   3097c:	clz	r1, r3
   30980:	cmp	r2, #0
   30984:	mov	r0, r2
   30988:	mov	r4, r3
   3098c:	mov	r7, r2
   30990:	movwne	r0, #1
   30994:	lsr	r1, r1, #5
   30998:	teq	r1, r0
   3099c:	beq	309f8 <flatcc_builder_table_add_union_vector@@Base+0x9c>
   309a0:	cmp	r7, #0
   309a4:	beq	309d8 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   309a8:	sub	r1, r5, #1
   309ac:	mov	r0, r6
   309b0:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   309b4:	cmp	r0, #0
   309b8:	beq	30a10 <flatcc_builder_table_add_union_vector@@Base+0xb4>
   309bc:	str	r7, [r0]
   309c0:	mov	r0, r6
   309c4:	mov	r1, r5
   309c8:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   309cc:	cmp	r0, #0
   309d0:	beq	30a24 <flatcc_builder_table_add_union_vector@@Base+0xc8>
   309d4:	str	r4, [r0]
   309d8:	mov	r0, #0
   309dc:	pop	{r4, r5, r6, r7, fp, pc}
   309e0:	movw	r0, #30695	; 0x77e7
   309e4:	movw	r1, #28626	; 0x6fd2
   309e8:	movw	r3, #31593	; 0x7b69
   309ec:	mov	r2, #1536	; 0x600
   309f0:	movt	r0, #4
   309f4:	b	30a38 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   309f8:	movw	r0, #31692	; 0x7bcc
   309fc:	movw	r1, #28626	; 0x6fd2
   30a00:	movw	r3, #31593	; 0x7b69
   30a04:	movw	r2, #1537	; 0x601
   30a08:	movt	r0, #4
   30a0c:	b	30a38 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   30a10:	movw	r0, #31571	; 0x7b53
   30a14:	movw	r1, #28626	; 0x6fd2
   30a18:	movw	r3, #31593	; 0x7b69
   30a1c:	movw	r2, #1540	; 0x604
   30a20:	b	30a34 <flatcc_builder_table_add_union_vector@@Base+0xd8>
   30a24:	movw	r0, #31571	; 0x7b53
   30a28:	movw	r1, #28626	; 0x6fd2
   30a2c:	movw	r3, #31593	; 0x7b69
   30a30:	movw	r2, #1544	; 0x608
   30a34:	movt	r0, #4
   30a38:	movt	r1, #4
   30a3c:	movt	r3, #4
   30a40:	bl	14f40 <__assert_fail@plt>

00030a44 <flatcc_builder_create_union_vector@@Base>:
   30a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30a48:	add	fp, sp, #28
   30a4c:	sub	sp, sp, #20
   30a50:	mov	sl, r0
   30a54:	mov	r0, #0
   30a58:	mov	r9, r3
   30a5c:	mov	r7, r2
   30a60:	mov	r4, r1
   30a64:	str	r0, [sl]
   30a68:	str	r0, [sl, #4]
   30a6c:	mov	r0, r1
   30a70:	bl	2f298 <flatcc_builder_start_offset_vector@@Base>
   30a74:	cmp	r0, #0
   30a78:	beq	30a84 <flatcc_builder_create_union_vector@@Base+0x40>
   30a7c:	sub	sp, fp, #28
   30a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30a84:	mov	r0, r4
   30a88:	mov	r1, r9
   30a8c:	bl	2ec6c <flatcc_builder_extend_offset_vector@@Base>
   30a90:	cmp	r0, #0
   30a94:	beq	30a7c <flatcc_builder_create_union_vector@@Base+0x38>
   30a98:	ldr	r8, [r4, #20]
   30a9c:	ldr	r1, [r4, #24]
   30aa0:	add	r0, r8, r9
   30aa4:	cmp	r0, r1
   30aa8:	str	r0, [r4, #20]
   30aac:	bcc	30ac8 <flatcc_builder_create_union_vector@@Base+0x84>
   30ab0:	add	r1, r0, #1
   30ab4:	mov	r0, r4
   30ab8:	mvn	r2, #3
   30abc:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   30ac0:	cmp	r0, #0
   30ac4:	bne	30a7c <flatcc_builder_create_union_vector@@Base+0x38>
   30ac8:	ldr	r3, [r4, #16]
   30acc:	adds	r2, r3, r8
   30ad0:	beq	30a7c <flatcc_builder_create_union_vector@@Base+0x38>
   30ad4:	cmp	r9, #0
   30ad8:	beq	30b08 <flatcc_builder_create_union_vector@@Base+0xc4>
   30adc:	add	r0, r7, #4
   30ae0:	mov	r1, r2
   30ae4:	mov	r7, r3
   30ae8:	mov	r6, r9
   30aec:	ldrb	r5, [r0, #-4]
   30af0:	subs	r6, r6, #1
   30af4:	strb	r5, [r1], #1
   30af8:	ldr	r5, [r0]
   30afc:	add	r0, r0, #8
   30b00:	str	r5, [r7], #4
   30b04:	bne	30aec <flatcc_builder_create_union_vector@@Base+0xa8>
   30b08:	add	r0, sp, #8
   30b0c:	mov	r1, r4
   30b10:	str	r9, [sp]
   30b14:	bl	30b9c <flatcc_builder_create_union_vector_direct@@Base>
   30b18:	ldr	r0, [sp, #8]
   30b1c:	ldr	r1, [sp, #12]
   30b20:	stm	sl, {r0, r1}
   30b24:	mov	r1, #0
   30b28:	ldr	r0, [r4, #16]
   30b2c:	ldr	r2, [r4, #20]
   30b30:	bl	14eec <memset@plt>
   30b34:	ldr	r0, [r4, #32]
   30b38:	ldr	r1, [r4, #60]	; 0x3c
   30b3c:	ldr	r2, [r4, #64]	; 0x40
   30b40:	ldr	r3, [r0, #8]
   30b44:	str	r3, [r4, #20]
   30b48:	ldr	r3, [r0]
   30b4c:	str	r3, [r4, #28]
   30b50:	add	r1, r1, r3
   30b54:	ldr	r7, [r0, #4]
   30b58:	str	r1, [r4, #16]
   30b5c:	sub	r1, r2, r3
   30b60:	cmp	r1, r7
   30b64:	movhi	r1, r7
   30b68:	str	r1, [r4, #24]
   30b6c:	ldrh	r1, [r4, #130]	; 0x82
   30b70:	ldrh	r2, [r4, #128]	; 0x80
   30b74:	cmp	r2, r1
   30b78:	strhcc	r1, [r4, #128]	; 0x80
   30b7c:	ldrh	r1, [r0, #12]
   30b80:	sub	r0, r0, #36	; 0x24
   30b84:	str	r0, [r4, #32]
   30b88:	strh	r1, [r4, #130]	; 0x82
   30b8c:	ldr	r0, [r4, #156]	; 0x9c
   30b90:	sub	r0, r0, #1
   30b94:	str	r0, [r4, #156]	; 0x9c
   30b98:	b	30a7c <flatcc_builder_create_union_vector@@Base+0x38>

00030b9c <flatcc_builder_create_union_vector_direct@@Base>:
   30b9c:	push	{r4, r5, r6, r7, fp, lr}
   30ba0:	add	fp, sp, #16
   30ba4:	sub	sp, sp, #8
   30ba8:	ldr	r7, [fp, #8]
   30bac:	mov	r5, r2
   30bb0:	mov	r4, r0
   30bb4:	mov	r0, #0
   30bb8:	mov	r6, r1
   30bbc:	str	r0, [r4]
   30bc0:	str	r0, [r4, #4]
   30bc4:	mov	r0, r1
   30bc8:	mov	r1, r3
   30bcc:	mov	r3, r5
   30bd0:	mov	r2, r7
   30bd4:	bl	30344 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30bd8:	cmp	r0, #0
   30bdc:	str	r0, [r4, #4]
   30be0:	beq	30c0c <flatcc_builder_create_union_vector_direct@@Base+0x70>
   30be4:	mvn	r0, #0
   30be8:	mov	r1, #1
   30bec:	mov	r2, r7
   30bf0:	mov	r3, #1
   30bf4:	str	r1, [sp]
   30bf8:	str	r0, [sp, #4]
   30bfc:	mov	r0, r6
   30c00:	mov	r1, r5
   30c04:	bl	300f0 <flatcc_builder_create_vector@@Base>
   30c08:	str	r0, [r4]
   30c0c:	sub	sp, fp, #16
   30c10:	pop	{r4, r5, r6, r7, fp, pc}

00030c14 <flatcc_builder_start_union_vector@@Base>:
   30c14:	push	{r4, sl, fp, lr}
   30c18:	add	fp, sp, #8
   30c1c:	mov	r1, #4
   30c20:	mov	r4, r0
   30c24:	bl	2e638 <flatcc_builder_start_buffer@@Base+0xbc>
   30c28:	mov	r1, r0
   30c2c:	mvn	r0, #0
   30c30:	cmp	r1, #0
   30c34:	popne	{r4, sl, fp, pc}
   30c38:	ldr	r0, [r4, #32]
   30c3c:	mov	r1, #8
   30c40:	mov	r2, #7
   30c44:	str	r1, [r0, #16]
   30c48:	mov	r0, #0
   30c4c:	ldr	r1, [r4, #32]
   30c50:	str	r0, [r1, #20]
   30c54:	ldr	r1, [r4, #32]
   30c58:	strh	r2, [r1, #14]
   30c5c:	ldr	r2, [r4, #28]
   30c60:	ldr	r3, [r4, #60]	; 0x3c
   30c64:	ldr	ip, [r4, #64]	; 0x40
   30c68:	add	r3, r3, r2
   30c6c:	sub	r2, ip, r2
   30c70:	str	r3, [r4, #16]
   30c74:	mvn	r3, #3
   30c78:	cmn	r2, #4
   30c7c:	movcs	r2, r3
   30c80:	str	r2, [r4, #24]
   30c84:	str	r3, [r1, #4]
   30c88:	pop	{r4, sl, fp, pc}

00030c8c <flatcc_builder_end_union_vector@@Base>:
   30c8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30c90:	add	fp, sp, #24
   30c94:	sub	sp, sp, #16
   30c98:	mov	r8, r0
   30c9c:	mov	r0, #0
   30ca0:	mov	r4, r1
   30ca4:	str	r0, [r8]
   30ca8:	str	r0, [r8, #4]
   30cac:	ldr	r0, [r1, #32]
   30cb0:	ldrh	r1, [r0, #14]
   30cb4:	cmp	r1, #7
   30cb8:	bne	30dd0 <flatcc_builder_end_union_vector@@Base+0x144>
   30cbc:	ldr	r9, [r0, #20]
   30cc0:	ldr	r7, [r4, #20]
   30cc4:	ldr	r1, [r4, #24]
   30cc8:	add	r0, r9, r9, lsl #2
   30ccc:	add	r0, r7, r0
   30cd0:	cmp	r0, r1
   30cd4:	str	r0, [r4, #20]
   30cd8:	bcc	30cf4 <flatcc_builder_end_union_vector@@Base+0x68>
   30cdc:	add	r1, r0, #1
   30ce0:	mov	r0, r4
   30ce4:	mvn	r2, #3
   30ce8:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   30cec:	cmp	r0, #0
   30cf0:	bne	30dc8 <flatcc_builder_end_union_vector@@Base+0x13c>
   30cf4:	ldr	r0, [r4, #16]
   30cf8:	adds	r3, r0, r7
   30cfc:	beq	30dc8 <flatcc_builder_end_union_vector@@Base+0x13c>
   30d00:	add	r2, r3, r9, lsl #2
   30d04:	cmp	r9, #0
   30d08:	beq	30d38 <flatcc_builder_end_union_vector@@Base+0xac>
   30d0c:	add	r0, r0, #4
   30d10:	mov	r1, r2
   30d14:	mov	r7, r3
   30d18:	mov	r6, r9
   30d1c:	ldrb	r5, [r0, #-4]
   30d20:	subs	r6, r6, #1
   30d24:	strb	r5, [r1], #1
   30d28:	ldr	r5, [r0]
   30d2c:	add	r0, r0, #8
   30d30:	str	r5, [r7], #4
   30d34:	bne	30d1c <flatcc_builder_end_union_vector@@Base+0x90>
   30d38:	add	r0, sp, #8
   30d3c:	mov	r1, r4
   30d40:	str	r9, [sp]
   30d44:	bl	30b9c <flatcc_builder_create_union_vector_direct@@Base>
   30d48:	ldr	r0, [sp, #8]
   30d4c:	ldr	r1, [sp, #12]
   30d50:	stm	r8, {r0, r1}
   30d54:	mov	r1, #0
   30d58:	ldr	r0, [r4, #16]
   30d5c:	ldr	r2, [r4, #20]
   30d60:	bl	14eec <memset@plt>
   30d64:	ldr	r0, [r4, #32]
   30d68:	ldr	r1, [r4, #60]	; 0x3c
   30d6c:	ldr	r2, [r4, #64]	; 0x40
   30d70:	ldr	r3, [r0, #8]
   30d74:	str	r3, [r4, #20]
   30d78:	ldr	r3, [r0]
   30d7c:	str	r3, [r4, #28]
   30d80:	add	r1, r1, r3
   30d84:	ldr	r7, [r0, #4]
   30d88:	str	r1, [r4, #16]
   30d8c:	sub	r1, r2, r3
   30d90:	cmp	r1, r7
   30d94:	movhi	r1, r7
   30d98:	str	r1, [r4, #24]
   30d9c:	ldrh	r1, [r4, #130]	; 0x82
   30da0:	ldrh	r2, [r4, #128]	; 0x80
   30da4:	cmp	r2, r1
   30da8:	strhcc	r1, [r4, #128]	; 0x80
   30dac:	ldrh	r1, [r0, #12]
   30db0:	sub	r0, r0, #36	; 0x24
   30db4:	str	r0, [r4, #32]
   30db8:	strh	r1, [r4, #130]	; 0x82
   30dbc:	ldr	r0, [r4, #156]	; 0x9c
   30dc0:	sub	r0, r0, #1
   30dc4:	str	r0, [r4, #156]	; 0x9c
   30dc8:	sub	sp, fp, #24
   30dcc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30dd0:	movw	r0, #31732	; 0x7bf4
   30dd4:	movw	r1, #28626	; 0x6fd2
   30dd8:	movw	r3, #31782	; 0x7c26
   30ddc:	movw	r2, #1617	; 0x651
   30de0:	movt	r0, #4
   30de4:	movt	r1, #4
   30de8:	movt	r3, #4
   30dec:	bl	14f40 <__assert_fail@plt>

00030df0 <flatcc_builder_union_vector_count@@Base>:
   30df0:	ldr	r0, [r0, #32]
   30df4:	ldr	r0, [r0, #20]
   30df8:	bx	lr

00030dfc <flatcc_builder_union_vector_edit@@Base>:
   30dfc:	ldr	r0, [r0, #16]
   30e00:	bx	lr

00030e04 <flatcc_builder_extend_union_vector@@Base>:
   30e04:	push	{r4, r5, fp, lr}
   30e08:	add	fp, sp, #8
   30e0c:	mov	r4, r0
   30e10:	ldr	r0, [r0, #32]
   30e14:	ldr	r2, [r0, #20]
   30e18:	adds	r2, r2, r1
   30e1c:	cmpcc	r2, #536870912	; 0x20000000
   30e20:	bcc	30e44 <flatcc_builder_extend_union_vector@@Base+0x40>
   30e24:	movw	r0, #32897	; 0x8081
   30e28:	movw	r1, #28626	; 0x6fd2
   30e2c:	movw	r3, #32924	; 0x809c
   30e30:	mov	r2, #892	; 0x37c
   30e34:	movt	r0, #4
   30e38:	movt	r1, #4
   30e3c:	movt	r3, #4
   30e40:	bl	14f40 <__assert_fail@plt>
   30e44:	str	r2, [r0, #20]
   30e48:	ldr	r5, [r4, #20]
   30e4c:	ldr	r2, [r4, #24]
   30e50:	add	r0, r5, r1, lsl #3
   30e54:	cmp	r0, r2
   30e58:	str	r0, [r4, #20]
   30e5c:	bcc	30e80 <flatcc_builder_extend_union_vector@@Base+0x7c>
   30e60:	add	r1, r0, #1
   30e64:	mov	r0, r4
   30e68:	mvn	r2, #3
   30e6c:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   30e70:	mov	r1, r0
   30e74:	mov	r0, #0
   30e78:	cmp	r1, #0
   30e7c:	popne	{r4, r5, fp, pc}
   30e80:	ldr	r0, [r4, #16]
   30e84:	add	r0, r0, r5
   30e88:	pop	{r4, r5, fp, pc}

00030e8c <flatcc_builder_truncate_union_vector@@Base>:
   30e8c:	push	{fp, lr}
   30e90:	mov	fp, sp
   30e94:	ldr	r2, [r0, #32]
   30e98:	ldrh	r3, [r2, #14]
   30e9c:	cmp	r3, #7
   30ea0:	bne	30ee8 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   30ea4:	ldr	r3, [r2, #20]
   30ea8:	cmp	r3, r1
   30eac:	bcc	30f00 <flatcc_builder_truncate_union_vector@@Base+0x74>
   30eb0:	sub	r3, r3, r1
   30eb4:	str	r3, [r2, #20]
   30eb8:	ldr	r2, [r0, #32]
   30ebc:	ldr	r3, [r0, #20]
   30ec0:	ldr	ip, [r0, #16]
   30ec4:	ldr	r2, [r2, #16]
   30ec8:	mls	r3, r2, r1, r3
   30ecc:	mul	r2, r2, r1
   30ed0:	mov	r1, #0
   30ed4:	str	r3, [r0, #20]
   30ed8:	add	r0, ip, r3
   30edc:	bl	14eec <memset@plt>
   30ee0:	mov	r0, #0
   30ee4:	pop	{fp, pc}
   30ee8:	movw	r0, #31732	; 0x7bf4
   30eec:	movw	r1, #28626	; 0x6fd2
   30ef0:	movw	r3, #31865	; 0x7c79
   30ef4:	movw	r2, #1665	; 0x681
   30ef8:	movt	r0, #4
   30efc:	b	30f14 <flatcc_builder_truncate_union_vector@@Base+0x88>
   30f00:	movw	r0, #30296	; 0x7658
   30f04:	movw	r1, #28626	; 0x6fd2
   30f08:	movw	r3, #31865	; 0x7c79
   30f0c:	movw	r2, #1666	; 0x682
   30f10:	movt	r0, #4
   30f14:	movt	r1, #4
   30f18:	movt	r3, #4
   30f1c:	bl	14f40 <__assert_fail@plt>

00030f20 <flatcc_builder_union_vector_push@@Base>:
   30f20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30f24:	add	fp, sp, #24
   30f28:	mov	r7, r0
   30f2c:	ldr	r0, [r0, #32]
   30f30:	mov	r5, r1
   30f34:	ldrh	r1, [r0, #14]
   30f38:	cmp	r1, #7
   30f3c:	bne	30fa4 <flatcc_builder_union_vector_push@@Base+0x84>
   30f40:	ldr	r1, [r0, #20]
   30f44:	mov	r6, #0
   30f48:	cmn	r1, #-536870911	; 0xe0000001
   30f4c:	beq	30f9c <flatcc_builder_union_vector_push@@Base+0x7c>
   30f50:	add	r1, r1, #1
   30f54:	mov	r8, r2
   30f58:	str	r1, [r0, #20]
   30f5c:	ldr	r4, [r7, #20]
   30f60:	ldr	r0, [r7, #24]
   30f64:	add	r1, r4, #8
   30f68:	cmp	r1, r0
   30f6c:	str	r1, [r7, #20]
   30f70:	bcc	30f8c <flatcc_builder_union_vector_push@@Base+0x6c>
   30f74:	add	r1, r4, #9
   30f78:	mov	r0, r7
   30f7c:	mvn	r2, #3
   30f80:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   30f84:	cmp	r0, #0
   30f88:	bne	30f9c <flatcc_builder_union_vector_push@@Base+0x7c>
   30f8c:	ldr	r0, [r7, #16]
   30f90:	adds	r0, r0, r4
   30f94:	movne	r6, r0
   30f98:	stmne	r0, {r5, r8}
   30f9c:	mov	r0, r6
   30fa0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30fa4:	movw	r0, #31732	; 0x7bf4
   30fa8:	movw	r1, #28626	; 0x6fd2
   30fac:	movw	r3, #31934	; 0x7cbe
   30fb0:	movw	r2, #1677	; 0x68d
   30fb4:	movt	r0, #4
   30fb8:	movt	r1, #4
   30fbc:	movt	r3, #4
   30fc0:	bl	14f40 <__assert_fail@plt>

00030fc4 <flatcc_builder_append_union_vector@@Base>:
   30fc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30fc8:	add	fp, sp, #24
   30fcc:	mov	r6, r0
   30fd0:	ldr	r0, [r0, #32]
   30fd4:	mov	r8, r1
   30fd8:	ldrh	r1, [r0, #14]
   30fdc:	cmp	r1, #7
   30fe0:	bne	3107c <flatcc_builder_append_union_vector@@Base+0xb8>
   30fe4:	ldr	r1, [r0, #20]
   30fe8:	mov	r5, r2
   30fec:	adds	r1, r1, r2
   30ff0:	cmpcc	r1, #536870912	; 0x20000000
   30ff4:	bcc	31018 <flatcc_builder_append_union_vector@@Base+0x54>
   30ff8:	movw	r0, #32897	; 0x8081
   30ffc:	movw	r1, #28626	; 0x6fd2
   31000:	movw	r3, #32924	; 0x809c
   31004:	mov	r2, #892	; 0x37c
   31008:	movt	r0, #4
   3100c:	movt	r1, #4
   31010:	movt	r3, #4
   31014:	bl	14f40 <__assert_fail@plt>
   31018:	str	r1, [r0, #20]
   3101c:	ldr	r4, [r6, #20]
   31020:	ldr	r1, [r6, #24]
   31024:	add	r0, r4, r5, lsl #3
   31028:	cmp	r0, r1
   3102c:	str	r0, [r6, #20]
   31030:	bcc	31050 <flatcc_builder_append_union_vector@@Base+0x8c>
   31034:	add	r1, r0, #1
   31038:	mov	r0, r6
   3103c:	mvn	r2, #3
   31040:	bl	316ac <flatcc_builder_get_emit_context@@Base+0x8>
   31044:	mov	r7, #0
   31048:	cmp	r0, #0
   3104c:	bne	31074 <flatcc_builder_append_union_vector@@Base+0xb0>
   31050:	ldr	r0, [r6, #16]
   31054:	adds	r7, r0, r4
   31058:	beq	31070 <flatcc_builder_append_union_vector@@Base+0xac>
   3105c:	lsl	r2, r5, #3
   31060:	mov	r0, r7
   31064:	mov	r1, r8
   31068:	bl	14e5c <memcpy@plt>
   3106c:	b	31074 <flatcc_builder_append_union_vector@@Base+0xb0>
   31070:	mov	r7, #0
   31074:	mov	r0, r7
   31078:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3107c:	movw	r0, #31732	; 0x7bf4
   31080:	movw	r1, #28626	; 0x6fd2
   31084:	movw	r3, #32043	; 0x7d2b
   31088:	movw	r2, #1692	; 0x69c
   3108c:	movt	r0, #4
   31090:	movt	r1, #4
   31094:	movt	r3, #4
   31098:	bl	14f40 <__assert_fail@plt>

0003109c <flatcc_builder_create_string@@Base>:
   3109c:	push	{r4, r5, r6, sl, fp, lr}
   310a0:	add	fp, sp, #16
   310a4:	sub	sp, sp, #80	; 0x50
   310a8:	str	r2, [fp, #-20]	; 0xffffffec
   310ac:	mvn	r5, r2
   310b0:	mov	r6, r0
   310b4:	sub	r3, fp, #20
   310b8:	cmp	r2, #0
   310bc:	add	lr, sp, #4
   310c0:	ldr	ip, [r0, #136]	; 0x88
   310c4:	mov	r0, #4
   310c8:	str	r0, [sp, #16]
   310cc:	str	r3, [sp, #12]
   310d0:	mov	r3, #1
   310d4:	str	r0, [sp, #4]
   310d8:	addne	r0, r2, #4
   310dc:	str	r3, [sp, #8]
   310e0:	strne	r2, [sp, #24]
   310e4:	movw	r2, #28096	; 0x6dc0
   310e8:	movne	r3, #2
   310ec:	strne	r1, [sp, #20]
   310f0:	strne	r3, [sp, #8]
   310f4:	strne	r0, [sp, #4]
   310f8:	movt	r2, #4
   310fc:	add	r5, ip, r5
   31100:	and	r5, r5, #3
   31104:	add	r5, r5, #1
   31108:	add	r1, r0, r5
   3110c:	add	r0, lr, r3, lsl #3
   31110:	str	r1, [sp, #4]
   31114:	cmp	r1, #0
   31118:	str	r2, [r0, #8]
   3111c:	add	r2, r3, #1
   31120:	str	r5, [r0, #12]
   31124:	str	r2, [sp, #8]
   31128:	ble	3117c <flatcc_builder_create_string@@Base+0xe0>
   3112c:	ldr	r0, [r6, #36]	; 0x24
   31130:	ldr	r4, [r6, #44]	; 0x2c
   31134:	sub	r5, ip, r1
   31138:	str	r1, [sp]
   3113c:	add	r1, lr, #8
   31140:	mov	r3, r5
   31144:	blx	r4
   31148:	cmp	r0, #0
   3114c:	streq	r5, [r6, #136]	; 0x88
   31150:	moveq	r0, r5
   31154:	subeq	sp, fp, #16
   31158:	popeq	{r4, r5, r6, sl, fp, pc}
   3115c:	movw	r0, #33144	; 0x8178
   31160:	movw	r1, #28626	; 0x6fd2
   31164:	movw	r3, #32823	; 0x8037
   31168:	movw	r2, #651	; 0x28b
   3116c:	movt	r0, #4
   31170:	movt	r1, #4
   31174:	movt	r3, #4
   31178:	bl	14f40 <__assert_fail@plt>
   3117c:	movw	r0, #33144	; 0x8178
   31180:	movw	r1, #28626	; 0x6fd2
   31184:	movw	r3, #32823	; 0x8037
   31188:	movw	r2, #647	; 0x287
   3118c:	movt	r0, #4
   31190:	movt	r1, #4
   31194:	movt	r3, #4
   31198:	bl	14f40 <__assert_fail@plt>

0003119c <flatcc_builder_create_string_str@@Base>:
   3119c:	push	{r4, r5, fp, lr}
   311a0:	add	fp, sp, #8
   311a4:	mov	r5, r0
   311a8:	mov	r0, r1
   311ac:	mov	r4, r1
   311b0:	bl	14ec8 <strlen@plt>
   311b4:	mov	r2, r0
   311b8:	mov	r0, r5
   311bc:	mov	r1, r4
   311c0:	pop	{r4, r5, fp, lr}
   311c4:	b	3109c <flatcc_builder_create_string@@Base>

000311c8 <flatcc_builder_create_string_strn@@Base>:
   311c8:	push	{r4, r5, r6, sl, fp, lr}
   311cc:	add	fp, sp, #16
   311d0:	mov	r6, r0
   311d4:	mov	r5, r1
   311d8:	mov	r0, r1
   311dc:	mov	r1, #0
   311e0:	mov	r4, r2
   311e4:	bl	14f10 <memchr@plt>
   311e8:	cmp	r0, #0
   311ec:	mov	r1, r5
   311f0:	subne	r4, r0, r5
   311f4:	mov	r0, r6
   311f8:	mov	r2, r4
   311fc:	pop	{r4, r5, r6, sl, fp, lr}
   31200:	b	3109c <flatcc_builder_create_string@@Base>

00031204 <flatcc_builder_end_string@@Base>:
   31204:	push	{r4, r5, fp, lr}
   31208:	add	fp, sp, #8
   3120c:	mov	r4, r0
   31210:	ldr	r0, [r0, #32]
   31214:	ldrh	r1, [r0, #14]
   31218:	cmp	r1, #6
   3121c:	bne	312c4 <flatcc_builder_end_string@@Base+0xc0>
   31220:	ldr	r2, [r0, #20]
   31224:	ldr	r0, [r4, #20]
   31228:	cmp	r2, r0
   3122c:	bne	312dc <flatcc_builder_end_string@@Base+0xd8>
   31230:	ldr	r1, [r4, #16]
   31234:	mov	r0, r4
   31238:	bl	3109c <flatcc_builder_create_string@@Base>
   3123c:	mov	r5, r0
   31240:	cmp	r0, #0
   31244:	beq	312bc <flatcc_builder_end_string@@Base+0xb8>
   31248:	ldr	r0, [r4, #16]
   3124c:	ldr	r2, [r4, #20]
   31250:	mov	r1, #0
   31254:	bl	14eec <memset@plt>
   31258:	ldr	r0, [r4, #32]
   3125c:	ldr	r1, [r4, #60]	; 0x3c
   31260:	ldr	ip, [r4, #64]	; 0x40
   31264:	ldr	r3, [r0, #8]
   31268:	str	r3, [r4, #20]
   3126c:	ldr	r3, [r0]
   31270:	str	r3, [r4, #28]
   31274:	add	r1, r1, r3
   31278:	ldr	r2, [r0, #4]
   3127c:	str	r1, [r4, #16]
   31280:	sub	r1, ip, r3
   31284:	cmp	r1, r2
   31288:	movhi	r1, r2
   3128c:	str	r1, [r4, #24]
   31290:	ldrh	r1, [r4, #130]	; 0x82
   31294:	ldrh	r2, [r4, #128]	; 0x80
   31298:	cmp	r2, r1
   3129c:	strhcc	r1, [r4, #128]	; 0x80
   312a0:	ldrh	r1, [r0, #12]
   312a4:	sub	r0, r0, #36	; 0x24
   312a8:	str	r0, [r4, #32]
   312ac:	strh	r1, [r4, #130]	; 0x82
   312b0:	ldr	r0, [r4, #156]	; 0x9c
   312b4:	sub	r0, r0, #1
   312b8:	str	r0, [r4, #156]	; 0x9c
   312bc:	mov	r0, r5
   312c0:	pop	{r4, r5, fp, pc}
   312c4:	movw	r0, #29943	; 0x74f7
   312c8:	movw	r1, #28626	; 0x6fd2
   312cc:	movw	r3, #32170	; 0x7daa
   312d0:	movw	r2, #1732	; 0x6c4
   312d4:	movt	r0, #4
   312d8:	b	312f0 <flatcc_builder_end_string@@Base+0xec>
   312dc:	movw	r0, #32237	; 0x7ded
   312e0:	movw	r1, #28626	; 0x6fd2
   312e4:	movw	r3, #32170	; 0x7daa
   312e8:	movw	r2, #1733	; 0x6c5
   312ec:	movt	r0, #4
   312f0:	movt	r1, #4
   312f4:	movt	r3, #4
   312f8:	bl	14f40 <__assert_fail@plt>

000312fc <flatcc_builder_string_edit@@Base>:
   312fc:	ldr	r0, [r0, #16]
   31300:	bx	lr

00031304 <flatcc_builder_string_len@@Base>:
   31304:	ldr	r0, [r0, #32]
   31308:	ldr	r0, [r0, #20]
   3130c:	bx	lr

00031310 <flatcc_builder_table_edit@@Base>:
   31310:	push	{fp, lr}
   31314:	mov	fp, sp
   31318:	ldr	r2, [r0, #32]
   3131c:	ldrh	r2, [r2, #14]
   31320:	cmp	r2, #3
   31324:	ldreq	r2, [r0, #16]
   31328:	ldreq	r0, [r0, #20]
   3132c:	addeq	r0, r2, r0
   31330:	subeq	r0, r0, r1
   31334:	popeq	{fp, pc}
   31338:	movw	r0, #30695	; 0x77e7
   3133c:	movw	r1, #28626	; 0x6fd2
   31340:	movw	r3, #32415	; 0x7e9f
   31344:	movw	r2, #1794	; 0x702
   31348:	movt	r0, #4
   3134c:	movt	r1, #4
   31350:	movt	r3, #4
   31354:	bl	14f40 <__assert_fail@plt>

00031358 <flatcc_builder_table_add_copy@@Base>:
   31358:	push	{r4, r5, r6, sl, fp, lr}
   3135c:	add	fp, sp, #16
   31360:	mov	r4, r3
   31364:	ldr	r3, [fp, #8]
   31368:	mov	r5, r2
   3136c:	mov	r2, r4
   31370:	bl	30824 <flatcc_builder_table_add@@Base>
   31374:	mov	r6, r0
   31378:	cmp	r0, #0
   3137c:	beq	31390 <flatcc_builder_table_add_copy@@Base+0x38>
   31380:	mov	r0, r6
   31384:	mov	r1, r5
   31388:	mov	r2, r4
   3138c:	bl	14e5c <memcpy@plt>
   31390:	mov	r0, r6
   31394:	pop	{r4, r5, r6, sl, fp, pc}

00031398 <flatcc_builder_push_buffer_alignment@@Base>:
   31398:	ldrh	r1, [r0, #128]	; 0x80
   3139c:	mov	r2, #4
   313a0:	strh	r2, [r0, #128]	; 0x80
   313a4:	mov	r0, r1
   313a8:	bx	lr

000313ac <flatcc_builder_pop_buffer_alignment@@Base>:
   313ac:	ldrh	r2, [r0, #128]	; 0x80
   313b0:	cmp	r2, r1
   313b4:	strhcc	r1, [r0, #128]	; 0x80
   313b8:	bx	lr

000313bc <flatcc_builder_get_buffer_alignment@@Base>:
   313bc:	ldrh	r0, [r0, #128]	; 0x80
   313c0:	bx	lr

000313c4 <flatcc_builder_set_vtable_clustering@@Base>:
   313c4:	clz	r1, r1
   313c8:	lsr	r1, r1, #5
   313cc:	str	r1, [r0, #180]	; 0xb4
   313d0:	bx	lr

000313d4 <flatcc_builder_set_block_align@@Base>:
   313d4:	strh	r1, [r0, #132]	; 0x84
   313d8:	bx	lr

000313dc <flatcc_builder_get_level@@Base>:
   313dc:	ldr	r0, [r0, #156]	; 0x9c
   313e0:	bx	lr

000313e4 <flatcc_builder_set_max_level@@Base>:
   313e4:	str	r1, [r0, #176]	; 0xb0
   313e8:	ldr	r2, [r0, #160]	; 0xa0
   313ec:	cmp	r2, r1
   313f0:	strlt	r1, [r0, #160]	; 0xa0
   313f4:	bx	lr

000313f8 <flatcc_builder_get_buffer_size@@Base>:
   313f8:	ldr	r1, [r0, #136]	; 0x88
   313fc:	ldr	r0, [r0, #140]	; 0x8c
   31400:	sub	r0, r0, r1
   31404:	bx	lr

00031408 <flatcc_builder_get_buffer_start@@Base>:
   31408:	ldr	r0, [r0, #136]	; 0x88
   3140c:	bx	lr

00031410 <flatcc_builder_get_buffer_end@@Base>:
   31410:	ldr	r0, [r0, #140]	; 0x8c
   31414:	bx	lr

00031418 <flatcc_builder_set_vtable_cache_limit@@Base>:
   31418:	str	r1, [r0, #172]	; 0xac
   3141c:	bx	lr

00031420 <flatcc_builder_set_identifier@@Base>:
   31420:	movw	r2, #28096	; 0x6dc0
   31424:	cmp	r1, #0
   31428:	movt	r2, #4
   3142c:	movne	r2, r1
   31430:	ldr	r1, [r2]
   31434:	str	r1, [r0, #168]	; 0xa8
   31438:	bx	lr

0003143c <flatcc_builder_get_type@@Base>:
   3143c:	ldr	r0, [r0, #32]
   31440:	cmp	r0, #0
   31444:	ldrhne	r0, [r0, #14]
   31448:	moveq	r0, #0
   3144c:	bx	lr

00031450 <flatcc_builder_get_type_at@@Base>:
   31450:	mov	r2, r0
   31454:	mov	r0, #0
   31458:	cmp	r1, #1
   3145c:	blt	31480 <flatcc_builder_get_type_at@@Base+0x30>
   31460:	ldr	r3, [r2, #156]	; 0x9c
   31464:	cmp	r3, r1
   31468:	bxlt	lr
   3146c:	sub	r0, r1, r3
   31470:	ldr	r1, [r2, #32]
   31474:	add	r0, r0, r0, lsl #3
   31478:	add	r0, r1, r0, lsl #2
   3147c:	ldrh	r0, [r0, #14]
   31480:	bx	lr

00031484 <flatcc_builder_get_direct_buffer@@Base>:
   31484:	ldr	r2, [r0, #184]	; 0xb8
   31488:	cmp	r2, #0
   3148c:	beq	314a0 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   31490:	ldr	r2, [r0, #188]	; 0xbc
   31494:	ldr	r3, [r0, #192]	; 0xc0
   31498:	cmp	r2, r3
   3149c:	beq	314b0 <flatcc_builder_get_direct_buffer@@Base+0x2c>
   314a0:	mov	r0, #0
   314a4:	cmp	r1, #0
   314a8:	strne	r0, [r1]
   314ac:	bx	lr
   314b0:	cmp	r1, #0
   314b4:	ldrne	r2, [r0, #212]	; 0xd4
   314b8:	strne	r2, [r1]
   314bc:	ldr	r0, [r0, #196]	; 0xc4
   314c0:	bx	lr

000314c4 <flatcc_builder_copy_buffer@@Base>:
   314c4:	push	{fp, lr}
   314c8:	mov	fp, sp
   314cc:	ldr	r3, [r0, #184]	; 0xb8
   314d0:	cmp	r3, #0
   314d4:	beq	31508 <flatcc_builder_copy_buffer@@Base+0x44>
   314d8:	add	r0, r0, #188	; 0xbc
   314dc:	bl	31bd0 <flatcc_emitter_copy_buffer@@Base>
   314e0:	cmp	r0, #0
   314e4:	popne	{fp, pc}
   314e8:	movw	r0, #13031	; 0x32e7
   314ec:	movw	r1, #28626	; 0x6fd2
   314f0:	movw	r3, #32554	; 0x7f2a
   314f4:	movw	r2, #1926	; 0x786
   314f8:	movt	r0, #4
   314fc:	movt	r1, #4
   31500:	movt	r3, #4
   31504:	bl	14f40 <__assert_fail@plt>
   31508:	mov	r0, #0
   3150c:	pop	{fp, pc}

00031510 <flatcc_builder_finalize_buffer@@Base>:
   31510:	push	{r4, r5, r6, sl, fp, lr}
   31514:	add	fp, sp, #16
   31518:	mov	r4, r0
   3151c:	ldr	r0, [r0, #136]	; 0x88
   31520:	cmp	r1, #0
   31524:	ldr	r2, [r4, #140]	; 0x8c
   31528:	sub	r5, r2, r0
   3152c:	mov	r0, r5
   31530:	strne	r5, [r1]
   31534:	bl	14e98 <malloc@plt>
   31538:	cmp	r0, #0
   3153c:	beq	31580 <flatcc_builder_finalize_buffer@@Base+0x70>
   31540:	mov	r6, r0
   31544:	mov	r0, r4
   31548:	mov	r2, r5
   3154c:	mov	r1, r6
   31550:	bl	314c4 <flatcc_builder_copy_buffer@@Base>
   31554:	cmp	r0, #0
   31558:	movne	r0, r6
   3155c:	popne	{r4, r5, r6, sl, fp, pc}
   31560:	movw	r0, #33144	; 0x8178
   31564:	movw	r1, #28626	; 0x6fd2
   31568:	movw	r3, #32623	; 0x7f6f
   3156c:	movw	r2, #1948	; 0x79c
   31570:	movt	r0, #4
   31574:	movt	r1, #4
   31578:	movt	r3, #4
   3157c:	bl	14f40 <__assert_fail@plt>
   31580:	movw	r0, #33144	; 0x8178
   31584:	movw	r1, #28626	; 0x6fd2
   31588:	movw	r3, #32623	; 0x7f6f
   3158c:	movw	r2, #1944	; 0x798
   31590:	movt	r0, #4
   31594:	movt	r1, #4
   31598:	movt	r3, #4
   3159c:	bl	14f40 <__assert_fail@plt>

000315a0 <flatcc_builder_finalize_aligned_buffer@@Base>:
   315a0:	push	{r4, r5, r6, r7, fp, lr}
   315a4:	add	fp, sp, #16
   315a8:	sub	sp, sp, #8
   315ac:	mov	r5, r0
   315b0:	mov	r4, r1
   315b4:	ldr	r0, [r0, #136]	; 0x88
   315b8:	ldr	r1, [r5, #140]	; 0x8c
   315bc:	cmp	r4, #0
   315c0:	sub	r0, r1, r0
   315c4:	mov	r1, #0
   315c8:	strne	r0, [r4]
   315cc:	ldrh	r2, [r5, #128]	; 0x80
   315d0:	str	r1, [sp, #4]
   315d4:	add	r0, r0, r2
   315d8:	cmp	r2, #4
   315dc:	mov	r1, r2
   315e0:	rsb	r2, r2, #0
   315e4:	sub	r0, r0, #1
   315e8:	movls	r1, #4
   315ec:	and	r7, r0, r2
   315f0:	add	r0, sp, #4
   315f4:	mov	r2, r7
   315f8:	bl	14ee0 <posix_memalign@plt>
   315fc:	ldr	r6, [sp, #4]
   31600:	cmp	r0, #0
   31604:	cmpne	r6, #0
   31608:	bne	3162c <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
   3160c:	cmp	r6, #0
   31610:	beq	31634 <flatcc_builder_finalize_aligned_buffer@@Base+0x94>
   31614:	mov	r0, r5
   31618:	mov	r1, r6
   3161c:	mov	r2, r7
   31620:	bl	314c4 <flatcc_builder_copy_buffer@@Base>
   31624:	cmp	r0, #0
   31628:	bne	31640 <flatcc_builder_finalize_aligned_buffer@@Base+0xa0>
   3162c:	mov	r0, r6
   31630:	bl	14e50 <free@plt>
   31634:	mov	r6, #0
   31638:	cmp	r4, #0
   3163c:	strne	r6, [r4]
   31640:	mov	r0, r6
   31644:	sub	sp, fp, #16
   31648:	pop	{r4, r5, r6, r7, fp, pc}

0003164c <flatcc_builder_aligned_alloc@@Base>:
   3164c:	push	{fp, lr}
   31650:	mov	fp, sp
   31654:	sub	sp, sp, #8
   31658:	mov	r2, r1
   3165c:	mov	r1, r0
   31660:	mov	r0, #0
   31664:	cmp	r1, #4
   31668:	str	r0, [sp, #4]
   3166c:	add	r0, sp, #4
   31670:	movls	r1, #4
   31674:	bl	14ee0 <posix_memalign@plt>
   31678:	mov	r1, r0
   3167c:	ldr	r0, [sp, #4]
   31680:	cmp	r1, #0
   31684:	cmpne	r0, #0
   31688:	beq	31698 <flatcc_builder_aligned_alloc@@Base+0x4c>
   3168c:	bl	14e50 <free@plt>
   31690:	mov	r0, #0
   31694:	str	r0, [sp, #4]
   31698:	mov	sp, fp
   3169c:	pop	{fp, pc}

000316a0 <flatcc_builder_aligned_free@@Base>:
   316a0:	b	14e50 <free@plt>

000316a4 <flatcc_builder_get_emit_context@@Base>:
   316a4:	ldr	r0, [r0, #36]	; 0x24
   316a8:	bx	lr
   316ac:	push	{r4, r5, r6, sl, fp, lr}
   316b0:	add	fp, sp, #16
   316b4:	sub	sp, sp, #8
   316b8:	mov	r6, r2
   316bc:	ldr	r2, [r0, #28]
   316c0:	mov	r5, r0
   316c4:	ldr	r0, [r0, #40]	; 0x28
   316c8:	mov	r3, #1
   316cc:	ldr	r4, [r5, #48]	; 0x30
   316d0:	str	r3, [sp]
   316d4:	mov	r3, #1
   316d8:	add	r2, r2, r1
   316dc:	add	r1, r5, #60	; 0x3c
   316e0:	blx	r4
   316e4:	mov	r1, r0
   316e8:	mvn	r0, #0
   316ec:	cmp	r1, #0
   316f0:	bne	31724 <flatcc_builder_get_emit_context@@Base+0x80>
   316f4:	ldr	r0, [r5, #28]
   316f8:	ldr	r2, [r5, #60]	; 0x3c
   316fc:	ldr	r3, [r5, #64]	; 0x40
   31700:	ldr	r1, [r5, #32]
   31704:	add	r2, r2, r0
   31708:	sub	r0, r3, r0
   3170c:	cmp	r0, r6
   31710:	str	r2, [r5, #16]
   31714:	movhi	r0, r6
   31718:	str	r0, [r5, #24]
   3171c:	mov	r0, #0
   31720:	str	r6, [r1, #4]
   31724:	sub	sp, fp, #16
   31728:	pop	{r4, r5, r6, sl, fp, pc}

0003172c <flatcc_emitter_recycle_page@@Base>:
   3172c:	ldr	r3, [r0]
   31730:	mov	r2, r0
   31734:	mvn	r0, #0
   31738:	cmp	r3, r1
   3173c:	beq	3177c <flatcc_emitter_recycle_page@@Base+0x50>
   31740:	ldr	r2, [r2, #4]
   31744:	cmp	r2, r1
   31748:	bxeq	lr
   3174c:	ldr	r0, [r1, #2944]	; 0xb80
   31750:	ldr	r2, [r1, #2948]	; 0xb84
   31754:	str	r2, [r0, #2948]	; 0xb84
   31758:	ldr	r2, [r1, #2948]	; 0xb84
   3175c:	str	r0, [r2, #2944]	; 0xb80
   31760:	ldr	r0, [r3, #2948]	; 0xb84
   31764:	str	r3, [r1, #2944]	; 0xb80
   31768:	str	r0, [r1, #2948]	; 0xb84
   3176c:	str	r1, [r0, #2944]	; 0xb80
   31770:	ldr	r0, [r1, #2944]	; 0xb80
   31774:	str	r1, [r0, #2948]	; 0xb84
   31778:	mov	r0, #0
   3177c:	bx	lr

00031780 <flatcc_emitter_reset@@Base>:
   31780:	push	{r4, sl, fp, lr}
   31784:	add	fp, sp, #8
   31788:	ldr	r1, [r0]
   3178c:	cmp	r1, #0
   31790:	beq	31848 <flatcc_emitter_reset@@Base+0xc8>
   31794:	mov	r4, r0
   31798:	add	r2, r1, #1472	; 0x5c0
   3179c:	mov	r0, #1472	; 0x5c0
   317a0:	mov	r3, #0
   317a4:	stmib	r4, {r1, r2}
   317a8:	str	r0, [r4, #12]
   317ac:	str	r2, [r4, #16]
   317b0:	str	r0, [r4, #20]
   317b4:	movw	r0, #64064	; 0xfa40
   317b8:	movt	r0, #65535	; 0xffff
   317bc:	str	r0, [r1, #2952]	; 0xb88
   317c0:	ldr	r2, [r4, #32]
   317c4:	ldr	r0, [r4, #24]
   317c8:	cmp	r2, #0
   317cc:	moveq	r2, r0
   317d0:	streq	r0, [r4, #32]
   317d4:	str	r3, [r4, #24]
   317d8:	add	r2, r2, r2, lsl #1
   317dc:	lsr	r2, r2, #2
   317e0:	add	r0, r2, r0, lsr #2
   317e4:	str	r0, [r4, #32]
   317e8:	ldr	r2, [r4, #28]
   317ec:	cmp	r2, r0, lsl #1
   317f0:	bls	31848 <flatcc_emitter_reset@@Base+0xc8>
   317f4:	mov	r2, r1
   317f8:	ldr	r0, [r2, #2944]!	; 0xb80
   317fc:	cmp	r0, r1
   31800:	popeq	{r4, sl, fp, pc}
   31804:	ldr	r3, [r0, #2944]	; 0xb80
   31808:	str	r3, [r2]
   3180c:	ldr	r2, [r0, #2944]	; 0xb80
   31810:	str	r1, [r2, #2948]	; 0xb84
   31814:	bl	14e50 <free@plt>
   31818:	ldr	r0, [r4, #28]
   3181c:	ldr	r1, [r4, #32]
   31820:	sub	r0, r0, #2944	; 0xb80
   31824:	cmp	r0, r1, lsl #1
   31828:	str	r0, [r4, #28]
   3182c:	bls	31848 <flatcc_emitter_reset@@Base+0xc8>
   31830:	ldr	r1, [r4, #4]
   31834:	ldr	r3, [r4]
   31838:	mov	r2, r1
   3183c:	ldr	r0, [r2, #2944]!	; 0xb80
   31840:	cmp	r0, r3
   31844:	bne	31804 <flatcc_emitter_reset@@Base+0x84>
   31848:	pop	{r4, sl, fp, pc}

0003184c <flatcc_emitter_clear@@Base>:
   3184c:	push	{r4, r5, r6, sl, fp, lr}
   31850:	add	fp, sp, #16
   31854:	ldr	r5, [r0]
   31858:	cmp	r5, #0
   3185c:	beq	318ac <flatcc_emitter_clear@@Base+0x60>
   31860:	mov	r4, r0
   31864:	ldr	r0, [r5, #2948]	; 0xb84
   31868:	mov	r6, #0
   3186c:	str	r6, [r0, #2944]	; 0xb80
   31870:	ldr	r0, [r5, #2944]	; 0xb80
   31874:	cmp	r0, #0
   31878:	beq	3188c <flatcc_emitter_clear@@Base+0x40>
   3187c:	mov	r5, r0
   31880:	ldr	r0, [r0, #2948]	; 0xb84
   31884:	bl	14e50 <free@plt>
   31888:	b	31870 <flatcc_emitter_clear@@Base+0x24>
   3188c:	mov	r0, r5
   31890:	bl	14e50 <free@plt>
   31894:	vmov.i32	q8, #0	; 0x00000000
   31898:	add	r0, r4, #16
   3189c:	vst1.32	{d16-d17}, [r0]
   318a0:	mov	r0, #32
   318a4:	vst1.32	{d16-d17}, [r4], r0
   318a8:	str	r6, [r4]
   318ac:	pop	{r4, r5, r6, sl, fp, pc}

000318b0 <flatcc_emitter@@Base>:
   318b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   318b4:	add	fp, sp, #28
   318b8:	sub	sp, sp, #4
   318bc:	mov	r6, r0
   318c0:	mov	r7, r1
   318c4:	ldr	r0, [r0, #24]
   318c8:	ldr	r1, [fp, #8]
   318cc:	mov	r4, r2
   318d0:	cmn	r3, #1
   318d4:	mov	r9, r6
   318d8:	add	r0, r0, r1
   318dc:	str	r0, [r6, #24]
   318e0:	ble	31a1c <flatcc_emitter@@Base+0x16c>
   318e4:	ldr	r0, [r9, #20]!
   318e8:	cmp	r0, r1
   318ec:	bcs	31b6c <flatcc_emitter@@Base+0x2bc>
   318f0:	mov	r8, #0
   318f4:	cmp	r4, #0
   318f8:	beq	31bc4 <flatcc_emitter@@Base+0x314>
   318fc:	movw	sl, #64064	; 0xfa40
   31900:	movt	sl, #65535	; 0xffff
   31904:	ldr	r8, [r7, #4]
   31908:	cmp	r8, #0
   3190c:	beq	31a08 <flatcc_emitter@@Base+0x158>
   31910:	ldr	r9, [r7]
   31914:	cmp	r8, r0
   31918:	mov	r5, r8
   3191c:	bls	319d4 <flatcc_emitter@@Base+0x124>
   31920:	mov	r5, r0
   31924:	cmp	r5, #0
   31928:	bne	319d4 <flatcc_emitter@@Base+0x124>
   3192c:	ldr	r5, [r6, #4]
   31930:	cmp	r5, #0
   31934:	beq	31948 <flatcc_emitter@@Base+0x98>
   31938:	ldr	r0, [r5, #2944]	; 0xb80
   3193c:	ldr	r1, [r6]
   31940:	cmp	r0, r1
   31944:	bne	31980 <flatcc_emitter@@Base+0xd0>
   31948:	movw	r0, #2956	; 0xb8c
   3194c:	bl	14e98 <malloc@plt>
   31950:	cmp	r0, #0
   31954:	beq	31b7c <flatcc_emitter@@Base+0x2cc>
   31958:	ldr	r1, [r6, #28]
   3195c:	cmp	r5, #0
   31960:	add	r1, r1, #2944	; 0xb80
   31964:	str	r1, [r6, #28]
   31968:	beq	319a4 <flatcc_emitter@@Base+0xf4>
   3196c:	ldr	r1, [r6]
   31970:	str	r1, [r0, #2944]	; 0xb80
   31974:	str	r5, [r0, #2948]	; 0xb84
   31978:	str	r0, [r1, #2948]	; 0xb84
   3197c:	str	r0, [r5, #2944]	; 0xb80
   31980:	mov	r5, #2944	; 0xb80
   31984:	str	r0, [r6, #4]
   31988:	str	r0, [r6, #16]
   3198c:	str	r5, [r6, #20]
   31990:	ldr	r1, [r0, #2948]	; 0xb84
   31994:	ldr	r1, [r1, #2952]	; 0xb88
   31998:	add	r1, r1, #2944	; 0xb80
   3199c:	str	r1, [r0, #2952]	; 0xb88
   319a0:	b	319c8 <flatcc_emitter@@Base+0x118>
   319a4:	mov	r5, #1472	; 0x5c0
   319a8:	add	r1, r0, #1472	; 0x5c0
   319ac:	str	r0, [r6]
   319b0:	stmib	r6, {r0, r1, r5}
   319b4:	str	r1, [r6, #16]
   319b8:	str	r5, [r6, #20]
   319bc:	str	r0, [r0, #2944]	; 0xb80
   319c0:	str	r0, [r0, #2948]	; 0xb84
   319c4:	str	sl, [r0, #2952]	; 0xb88
   319c8:	cmp	r8, r5
   319cc:	bhi	31924 <flatcc_emitter@@Base+0x74>
   319d0:	mov	r5, r8
   319d4:	ldr	r0, [r6, #16]
   319d8:	mov	r1, r9
   319dc:	mov	r2, r5
   319e0:	bl	14e5c <memcpy@plt>
   319e4:	ldr	r0, [r6, #16]
   319e8:	ldr	r1, [r6, #20]
   319ec:	add	r9, r9, r5
   319f0:	subs	r8, r8, r5
   319f4:	add	r2, r0, r5
   319f8:	sub	r0, r1, r5
   319fc:	str	r2, [r6, #16]
   31a00:	str	r0, [r6, #20]
   31a04:	bne	31914 <flatcc_emitter@@Base+0x64>
   31a08:	subs	r4, r4, #1
   31a0c:	add	r7, r7, #8
   31a10:	bne	31904 <flatcc_emitter@@Base+0x54>
   31a14:	mov	r8, #0
   31a18:	b	31bc4 <flatcc_emitter@@Base+0x314>
   31a1c:	ldr	r0, [r9, #12]!
   31a20:	cmp	r0, r1
   31a24:	bcs	31b84 <flatcc_emitter@@Base+0x2d4>
   31a28:	mov	r8, #0
   31a2c:	cmp	r4, #0
   31a30:	beq	31bc4 <flatcc_emitter@@Base+0x314>
   31a34:	add	r0, r7, r4, lsl #3
   31a38:	ldr	sl, [r0, #-4]
   31a3c:	sub	r1, r0, #8
   31a40:	str	r1, [sp]
   31a44:	cmp	sl, #0
   31a48:	beq	31b5c <flatcc_emitter@@Base+0x2ac>
   31a4c:	ldr	r0, [sp]
   31a50:	ldr	r0, [r0]
   31a54:	add	r7, r0, sl
   31a58:	ldr	r1, [r9]
   31a5c:	cmp	sl, r1
   31a60:	bls	31b2c <flatcc_emitter@@Base+0x27c>
   31a64:	cmp	r1, #0
   31a68:	mov	r5, r1
   31a6c:	bne	31b30 <flatcc_emitter@@Base+0x280>
   31a70:	ldr	r5, [r6]
   31a74:	cmp	r5, #0
   31a78:	beq	31a9c <flatcc_emitter@@Base+0x1ec>
   31a7c:	ldr	r0, [r5, #2948]	; 0xb84
   31a80:	ldr	r1, [r6, #4]
   31a84:	cmp	r0, r1
   31a88:	beq	31a9c <flatcc_emitter@@Base+0x1ec>
   31a8c:	ldr	r1, [r5, #2952]	; 0xb88
   31a90:	sub	r1, r1, #2944	; 0xb80
   31a94:	str	r1, [r0, #2952]	; 0xb88
   31a98:	b	31ad4 <flatcc_emitter@@Base+0x224>
   31a9c:	movw	r0, #2956	; 0xb8c
   31aa0:	bl	14e98 <malloc@plt>
   31aa4:	cmp	r0, #0
   31aa8:	beq	31b7c <flatcc_emitter@@Base+0x2cc>
   31aac:	ldr	r1, [r6, #28]
   31ab0:	cmp	r5, #0
   31ab4:	add	r1, r1, #2944	; 0xb80
   31ab8:	str	r1, [r6, #28]
   31abc:	beq	31af8 <flatcc_emitter@@Base+0x248>
   31ac0:	ldr	r1, [r6, #4]
   31ac4:	str	r5, [r0, #2944]	; 0xb80
   31ac8:	str	r1, [r0, #2948]	; 0xb84
   31acc:	str	r0, [r5, #2948]	; 0xb84
   31ad0:	str	r0, [r1, #2944]	; 0xb80
   31ad4:	mov	r1, #2944	; 0xb80
   31ad8:	add	r2, r0, #2944	; 0xb80
   31adc:	str	r0, [r6]
   31ae0:	str	r2, [r6, #8]
   31ae4:	str	r1, [r6, #12]
   31ae8:	ldr	r2, [r0, #2944]	; 0xb80
   31aec:	ldr	r2, [r2, #2952]	; 0xb88
   31af0:	sub	r2, r2, #2944	; 0xb80
   31af4:	b	31b24 <flatcc_emitter@@Base+0x274>
   31af8:	add	r2, r0, #1472	; 0x5c0
   31afc:	mov	r1, #1472	; 0x5c0
   31b00:	str	r0, [r6]
   31b04:	stmib	r6, {r0, r2}
   31b08:	str	r1, [r6, #12]
   31b0c:	str	r2, [r6, #16]
   31b10:	movw	r2, #64064	; 0xfa40
   31b14:	str	r1, [r6, #20]
   31b18:	str	r0, [r0, #2944]	; 0xb80
   31b1c:	str	r0, [r0, #2948]	; 0xb84
   31b20:	movt	r2, #65535	; 0xffff
   31b24:	str	r2, [r0, #2952]	; 0xb88
   31b28:	b	31a5c <flatcc_emitter@@Base+0x1ac>
   31b2c:	mov	r5, sl
   31b30:	sub	r0, r1, r5
   31b34:	sub	r7, r7, r5
   31b38:	mov	r2, r5
   31b3c:	str	r0, [r6, #12]
   31b40:	mov	r1, r7
   31b44:	ldr	r0, [r6, #8]
   31b48:	sub	r0, r0, r5
   31b4c:	str	r0, [r6, #8]
   31b50:	bl	14e5c <memcpy@plt>
   31b54:	subs	sl, sl, r5
   31b58:	bne	31a58 <flatcc_emitter@@Base+0x1a8>
   31b5c:	ldr	r0, [sp]
   31b60:	subs	r4, r4, #1
   31b64:	bne	31a38 <flatcc_emitter@@Base+0x188>
   31b68:	b	31bc4 <flatcc_emitter@@Base+0x314>
   31b6c:	ldr	r5, [r6, #16]
   31b70:	add	r2, r5, r1
   31b74:	str	r2, [r6, #16]
   31b78:	b	31b90 <flatcc_emitter@@Base+0x2e0>
   31b7c:	mvn	r8, #0
   31b80:	b	31bc4 <flatcc_emitter@@Base+0x314>
   31b84:	ldr	r2, [r6, #8]
   31b88:	sub	r5, r2, r1
   31b8c:	str	r5, [r6, #8]
   31b90:	sub	r0, r0, r1
   31b94:	mov	r8, #0
   31b98:	cmp	r4, #0
   31b9c:	str	r0, [r9]
   31ba0:	beq	31bc4 <flatcc_emitter@@Base+0x314>
   31ba4:	ldm	r7, {r1, r2}
   31ba8:	mov	r0, r5
   31bac:	bl	14e5c <memcpy@plt>
   31bb0:	ldr	r0, [r7, #4]
   31bb4:	add	r7, r7, #8
   31bb8:	subs	r4, r4, #1
   31bbc:	add	r5, r5, r0
   31bc0:	bne	31ba4 <flatcc_emitter@@Base+0x2f4>
   31bc4:	mov	r0, r8
   31bc8:	sub	sp, fp, #28
   31bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00031bd0 <flatcc_emitter_copy_buffer@@Base>:
   31bd0:	push	{r4, r5, r6, sl, fp, lr}
   31bd4:	add	fp, sp, #16
   31bd8:	mov	r3, r2
   31bdc:	ldr	r2, [r0, #24]
   31be0:	mov	r5, #0
   31be4:	cmp	r2, r3
   31be8:	bhi	31c84 <flatcc_emitter_copy_buffer@@Base+0xb4>
   31bec:	mov	r4, r0
   31bf0:	ldr	r0, [r0]
   31bf4:	cmp	r0, #0
   31bf8:	beq	31c84 <flatcc_emitter_copy_buffer@@Base+0xb4>
   31bfc:	mov	r6, r1
   31c00:	ldr	r1, [r4, #4]
   31c04:	cmp	r0, r1
   31c08:	beq	31c74 <flatcc_emitter_copy_buffer@@Base+0xa4>
   31c0c:	ldr	r0, [r4, #12]
   31c10:	ldr	r1, [r4, #8]
   31c14:	rsb	r5, r0, #2944	; 0xb80
   31c18:	mov	r0, r6
   31c1c:	mov	r2, r5
   31c20:	bl	14e5c <memcpy@plt>
   31c24:	ldm	r4, {r0, r1}
   31c28:	add	r5, r6, r5
   31c2c:	ldr	r6, [r0, #2944]	; 0xb80
   31c30:	cmp	r6, r1
   31c34:	beq	31c5c <flatcc_emitter_copy_buffer@@Base+0x8c>
   31c38:	mov	r0, r5
   31c3c:	mov	r1, r6
   31c40:	mov	r2, #2944	; 0xb80
   31c44:	bl	14e5c <memcpy@plt>
   31c48:	ldr	r6, [r6, #2944]	; 0xb80
   31c4c:	ldr	r0, [r4, #4]
   31c50:	add	r5, r5, #2944	; 0xb80
   31c54:	cmp	r6, r0
   31c58:	bne	31c38 <flatcc_emitter_copy_buffer@@Base+0x68>
   31c5c:	ldr	r0, [r4, #20]
   31c60:	mov	r1, r6
   31c64:	rsb	r2, r0, #2944	; 0xb80
   31c68:	mov	r0, r5
   31c6c:	bl	14e5c <memcpy@plt>
   31c70:	b	31c84 <flatcc_emitter_copy_buffer@@Base+0xb4>
   31c74:	ldr	r1, [r4, #8]
   31c78:	mov	r0, r6
   31c7c:	bl	14e5c <memcpy@plt>
   31c80:	mov	r5, r6
   31c84:	mov	r0, r5
   31c88:	pop	{r4, r5, r6, sl, fp, pc}

00031c8c <flatcc_verify_error_string@@Base>:
   31c8c:	cmp	r0, #36	; 0x24
   31c90:	movwhi	r0, #34358	; 0x8636
   31c94:	movthi	r0, #4
   31c98:	bxhi	lr
   31c9c:	movw	r1, #34368	; 0x8640
   31ca0:	movt	r1, #4
   31ca4:	ldr	r0, [r1, r0, lsl #2]
   31ca8:	bx	lr

00031cac <flatcc_verify_field@@Base>:
   31cac:	b	31cb0 <flatcc_verify_field@@Base+0x4>
   31cb0:	push	{r4, sl, fp, lr}
   31cb4:	add	fp, sp, #8
   31cb8:	mov	ip, #4
   31cbc:	ldrh	r4, [r0, #22]
   31cc0:	mov	lr, #0
   31cc4:	add	r1, ip, r1, lsl #1
   31cc8:	uxth	ip, r1
   31ccc:	cmp	ip, r4
   31cd0:	bcs	31cfc <flatcc_verify_field@@Base+0x50>
   31cd4:	ldr	r4, [r0, #12]
   31cd8:	uxtah	r1, r4, r1
   31cdc:	ldrh	ip, [r1]
   31ce0:	cmp	ip, #0
   31ce4:	beq	31cfc <flatcc_verify_field@@Base+0x50>
   31ce8:	add	r1, ip, r2
   31cec:	ldrh	r2, [r0, #20]
   31cf0:	mov	lr, #13
   31cf4:	cmp	r1, r2
   31cf8:	bls	31d04 <flatcc_verify_field@@Base+0x58>
   31cfc:	mov	r0, lr
   31d00:	pop	{r4, sl, fp, pc}
   31d04:	ldr	r1, [r0]
   31d08:	ldr	r0, [r0, #16]
   31d0c:	add	r1, r1, ip
   31d10:	add	r0, r1, r0
   31d14:	sub	r1, r3, #1
   31d18:	ands	r0, r0, r1
   31d1c:	movwne	r0, #12
   31d20:	pop	{r4, sl, fp, pc}

00031d24 <flatcc_verify_string_field@@Base>:
   31d24:	push	{r4, sl, fp, lr}
   31d28:	add	fp, sp, #8
   31d2c:	sub	sp, sp, #8
   31d30:	add	r3, sp, #4
   31d34:	mov	r4, r0
   31d38:	bl	31db0 <flatcc_verify_string_field@@Base+0x8c>
   31d3c:	cmp	r0, #0
   31d40:	bne	31da8 <flatcc_verify_string_field@@Base+0x84>
   31d44:	ldr	r3, [sp, #4]
   31d48:	cmp	r3, #0
   31d4c:	beq	31da8 <flatcc_verify_string_field@@Base+0x84>
   31d50:	ldr	r1, [r4]
   31d54:	ldr	r0, [r1, r3]
   31d58:	add	r2, r0, r3
   31d5c:	mov	r0, #17
   31d60:	tst	r2, #3
   31d64:	bne	31da8 <flatcc_verify_string_field@@Base+0x84>
   31d68:	cmp	r2, r3
   31d6c:	bls	31da8 <flatcc_verify_string_field@@Base+0x84>
   31d70:	ldr	r4, [r4, #4]
   31d74:	add	r3, r2, #4
   31d78:	cmp	r4, r3
   31d7c:	bcc	31da8 <flatcc_verify_string_field@@Base+0x84>
   31d80:	ldr	r2, [r1, r2]
   31d84:	sub	ip, r4, r3
   31d88:	mov	r0, #8
   31d8c:	add	r4, r2, #1
   31d90:	cmp	ip, r4
   31d94:	bcc	31da8 <flatcc_verify_string_field@@Base+0x84>
   31d98:	add	r0, r1, r3
   31d9c:	ldrb	r0, [r0, r2]
   31da0:	cmp	r0, #0
   31da4:	movwne	r0, #7
   31da8:	sub	sp, fp, #8
   31dac:	pop	{r4, sl, fp, pc}
   31db0:	push	{fp, lr}
   31db4:	mov	fp, sp
   31db8:	mov	ip, #4
   31dbc:	add	lr, ip, r1, lsl #1
   31dc0:	ldrh	r1, [r0, #22]
   31dc4:	uxth	ip, lr
   31dc8:	cmp	ip, r1
   31dcc:	bcs	31e14 <flatcc_verify_string_field@@Base+0xf0>
   31dd0:	ldr	r1, [r0, #12]
   31dd4:	uxtah	r1, r1, lr
   31dd8:	ldrh	ip, [r1]
   31ddc:	cmp	ip, #0
   31de0:	beq	31e14 <flatcc_verify_string_field@@Base+0xf0>
   31de4:	ldrh	lr, [r0, #20]
   31de8:	add	r2, ip, #4
   31dec:	mov	r1, #13
   31df0:	cmp	r2, lr
   31df4:	bhi	31e28 <flatcc_verify_string_field@@Base+0x104>
   31df8:	ldr	r0, [r0, #16]
   31dfc:	mov	r1, #12
   31e00:	add	r0, r0, ip
   31e04:	tst	r0, #3
   31e08:	moveq	r1, #0
   31e0c:	streq	r0, [r3]
   31e10:	b	31e28 <flatcc_verify_string_field@@Base+0x104>
   31e14:	cmp	r2, #0
   31e18:	mov	r0, #0
   31e1c:	movwne	r2, #1
   31e20:	str	r0, [r3]
   31e24:	lsl	r1, r2, #2
   31e28:	mov	r0, r1
   31e2c:	pop	{fp, pc}

00031e30 <flatcc_verify_vector_field@@Base>:
   31e30:	push	{r4, r5, r6, sl, fp, lr}
   31e34:	add	fp, sp, #16
   31e38:	sub	sp, sp, #8
   31e3c:	mov	r6, r3
   31e40:	add	r3, sp, #4
   31e44:	mov	r5, r0
   31e48:	bl	31db0 <flatcc_verify_string_field@@Base+0x8c>
   31e4c:	cmp	r0, #0
   31e50:	bne	31ed0 <flatcc_verify_vector_field@@Base+0xa0>
   31e54:	ldr	r4, [sp, #4]
   31e58:	cmp	r4, #0
   31e5c:	beq	31ed0 <flatcc_verify_vector_field@@Base+0xa0>
   31e60:	ldr	r3, [r5]
   31e64:	ldr	r2, [fp, #8]
   31e68:	ldr	r0, [r3, r4]
   31e6c:	cmp	r2, #4
   31e70:	movls	r2, #4
   31e74:	add	r1, r0, r4
   31e78:	mov	r0, #16
   31e7c:	cmp	r1, r4
   31e80:	bls	31ed0 <flatcc_verify_vector_field@@Base+0xa0>
   31e84:	ldr	r5, [r5, #4]
   31e88:	add	r4, r1, #4
   31e8c:	cmp	r4, r5
   31e90:	bhi	31ed0 <flatcc_verify_vector_field@@Base+0xa0>
   31e94:	sub	r2, r2, #1
   31e98:	orr	r2, r2, #3
   31e9c:	tst	r4, r2
   31ea0:	bne	31ed0 <flatcc_verify_vector_field@@Base+0xa0>
   31ea4:	ldr	r4, [fp, #12]
   31ea8:	ldr	r2, [r3, r1]
   31eac:	mov	r0, #25
   31eb0:	cmp	r2, r4
   31eb4:	bhi	31ed0 <flatcc_verify_vector_field@@Base+0xa0>
   31eb8:	mul	r2, r2, r6
   31ebc:	sub	r0, r5, r1
   31ec0:	sub	r1, r0, #4
   31ec4:	mov	r0, #0
   31ec8:	cmp	r1, r2
   31ecc:	movwcc	r0, #26
   31ed0:	sub	sp, fp, #16
   31ed4:	pop	{r4, r5, r6, sl, fp, pc}

00031ed8 <flatcc_verify_string_vector_field@@Base>:
   31ed8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31edc:	add	fp, sp, #24
   31ee0:	sub	sp, sp, #8
   31ee4:	add	r3, sp, #4
   31ee8:	mov	r4, r0
   31eec:	bl	31db0 <flatcc_verify_string_field@@Base+0x8c>
   31ef0:	cmp	r0, #0
   31ef4:	bne	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31ef8:	ldr	r1, [sp, #4]
   31efc:	cmp	r1, #0
   31f00:	beq	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31f04:	ldr	r3, [r4]
   31f08:	mov	r0, #16
   31f0c:	ldr	r2, [r3, r1]
   31f10:	add	r5, r2, r1
   31f14:	cmp	r5, r1
   31f18:	bls	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31f1c:	ldr	ip, [r4, #4]
   31f20:	add	r7, r5, #4
   31f24:	cmp	r7, ip
   31f28:	bhi	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31f2c:	ands	r7, r7, #3
   31f30:	bne	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31f34:	ldr	lr, [r3, r5]
   31f38:	mov	r0, #25
   31f3c:	cmn	lr, #-1073741823	; 0xc0000001
   31f40:	bhi	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31f44:	sub	r0, ip, r5
   31f48:	sub	r4, r0, #4
   31f4c:	mov	r0, #26
   31f50:	cmp	r4, lr, lsl #2
   31f54:	bcc	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31f58:	cmp	lr, #0
   31f5c:	beq	31ff0 <flatcc_verify_string_vector_field@@Base+0x118>
   31f60:	sub	r0, ip, r2
   31f64:	add	r3, r3, r2
   31f68:	sub	r0, r0, r1
   31f6c:	sub	r8, r0, #8
   31f70:	add	r0, r3, r1
   31f74:	add	r7, r1, r2
   31f78:	ldr	r5, [r0, #4]
   31f7c:	mov	r0, #17
   31f80:	add	r6, r7, r5
   31f84:	add	r4, r6, #4
   31f88:	tst	r4, #3
   31f8c:	bne	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31f90:	add	r7, r7, #4
   31f94:	cmp	r4, r7
   31f98:	bls	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31f9c:	add	r4, r6, #8
   31fa0:	cmp	ip, r4
   31fa4:	bcc	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31fa8:	add	r0, r1, r5
   31fac:	sub	r4, r8, r5
   31fb0:	add	r0, r3, r0
   31fb4:	ldr	r0, [r0, #4]
   31fb8:	add	r6, r0, #1
   31fbc:	cmp	r4, r6
   31fc0:	bcc	31ff8 <flatcc_verify_string_vector_field@@Base+0x120>
   31fc4:	add	r0, r5, r0
   31fc8:	add	r0, r1, r0
   31fcc:	add	r0, r3, r0
   31fd0:	ldrb	r0, [r0, #8]
   31fd4:	cmp	r0, #0
   31fd8:	bne	32000 <flatcc_verify_string_vector_field@@Base+0x128>
   31fdc:	subs	lr, lr, #1
   31fe0:	sub	r8, r8, #4
   31fe4:	add	r2, r2, #4
   31fe8:	add	r3, r3, #4
   31fec:	bne	31f70 <flatcc_verify_string_vector_field@@Base+0x98>
   31ff0:	mov	r0, #0
   31ff4:	b	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   31ff8:	mov	r0, #8
   31ffc:	b	32004 <flatcc_verify_string_vector_field@@Base+0x12c>
   32000:	mov	r0, #7
   32004:	sub	sp, fp, #24
   32008:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003200c <flatcc_verify_table_field@@Base>:
   3200c:	push	{r4, r5, r6, sl, fp, lr}
   32010:	add	fp, sp, #16
   32014:	sub	sp, sp, #32
   32018:	mov	r6, r3
   3201c:	add	r3, sp, #4
   32020:	mov	r5, r0
   32024:	bl	31db0 <flatcc_verify_string_field@@Base+0x8c>
   32028:	cmp	r0, #0
   3202c:	bne	32104 <flatcc_verify_table_field@@Base+0xf8>
   32030:	ldr	r4, [sp, #4]
   32034:	cmp	r4, #0
   32038:	beq	32104 <flatcc_verify_table_field@@Base+0xf8>
   3203c:	ldm	r5, {r1, r2, r3}
   32040:	subs	r3, r3, #1
   32044:	ldr	r0, [r1, r4]
   32048:	str	r3, [sp, #16]
   3204c:	beq	32100 <flatcc_verify_table_field@@Base+0xf4>
   32050:	add	r3, r0, r4
   32054:	mov	r0, #15
   32058:	tst	r3, #3
   3205c:	bne	32104 <flatcc_verify_table_field@@Base+0xf8>
   32060:	cmp	r3, r4
   32064:	bls	32104 <flatcc_verify_table_field@@Base+0xf8>
   32068:	add	r5, r3, #4
   3206c:	cmp	r5, r2
   32070:	bhi	32104 <flatcc_verify_table_field@@Base+0xf8>
   32074:	str	r3, [sp, #24]
   32078:	ldr	r0, [r1, r3]
   3207c:	sub	r5, r3, r0
   32080:	mov	r0, #29
   32084:	tst	r5, #-2147483647	; 0x80000001
   32088:	bne	32104 <flatcc_verify_table_field@@Base+0xf8>
   3208c:	add	lr, r5, #2
   32090:	mov	r0, #27
   32094:	cmp	lr, r2
   32098:	bhi	32104 <flatcc_verify_table_field@@Base+0xf8>
   3209c:	mov	ip, r1
   320a0:	mov	r0, #30
   320a4:	ldrh	r4, [ip, r5]!
   320a8:	tst	r4, #1
   320ac:	strh	r4, [sp, #30]
   320b0:	bne	32104 <flatcc_verify_table_field@@Base+0xf8>
   320b4:	add	r5, r5, r4
   320b8:	cmp	r5, r2
   320bc:	bhi	32104 <flatcc_verify_table_field@@Base+0xf8>
   320c0:	mov	r0, #28
   320c4:	cmp	r4, #4
   320c8:	bcc	32104 <flatcc_verify_table_field@@Base+0xf8>
   320cc:	add	r0, r1, lr
   320d0:	sub	r3, r2, r3
   320d4:	ldrh	r5, [r0]
   320d8:	mov	r0, #20
   320dc:	cmp	r3, r5
   320e0:	strh	r5, [sp, #28]
   320e4:	bcc	32104 <flatcc_verify_table_field@@Base+0xf8>
   320e8:	add	r0, sp, #8
   320ec:	str	r2, [sp, #12]
   320f0:	str	r1, [sp, #8]
   320f4:	str	ip, [sp, #20]
   320f8:	blx	r6
   320fc:	b	32104 <flatcc_verify_table_field@@Base+0xf8>
   32100:	mov	r0, #3
   32104:	sub	sp, fp, #16
   32108:	pop	{r4, r5, r6, sl, fp, pc}

0003210c <flatcc_verify_table_vector_field@@Base>:
   3210c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32110:	add	fp, sp, #28
   32114:	sub	sp, sp, #44	; 0x2c
   32118:	mov	r9, r3
   3211c:	add	r3, sp, #16
   32120:	mov	r6, r0
   32124:	bl	31db0 <flatcc_verify_string_field@@Base+0x8c>
   32128:	mov	r5, r0
   3212c:	cmp	r0, #0
   32130:	bne	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32134:	ldr	r0, [sp, #16]
   32138:	cmp	r0, #0
   3213c:	beq	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32140:	ldr	r1, [r6, #8]
   32144:	cmp	r1, #1
   32148:	blt	3237c <flatcc_verify_table_vector_field@@Base+0x270>
   3214c:	ldr	r8, [r6]
   32150:	mov	r5, #16
   32154:	ldr	r2, [r8, r0]
   32158:	add	r3, r2, r0
   3215c:	cmp	r3, r0
   32160:	bls	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32164:	ldr	r4, [r6, #4]
   32168:	add	r6, r3, #4
   3216c:	cmp	r6, r4
   32170:	bhi	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32174:	str	r4, [sp, #12]
   32178:	ands	r4, r6, #3
   3217c:	bne	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32180:	ldr	sl, [r8, r3]
   32184:	mov	r5, #25
   32188:	cmn	sl, #-1073741823	; 0xc0000001
   3218c:	bhi	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32190:	ldr	r5, [sp, #12]
   32194:	sub	r3, r5, r3
   32198:	mov	r5, #26
   3219c:	sub	r3, r3, #4
   321a0:	cmp	r3, sl, lsl #2
   321a4:	bcc	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   321a8:	mov	r5, #0
   321ac:	cmp	sl, #0
   321b0:	beq	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   321b4:	ldr	r4, [sp, #12]
   321b8:	sub	r2, r4, r2
   321bc:	sub	r0, r2, r0
   321c0:	sub	r0, r0, #4
   321c4:	str	r0, [sp, #8]
   321c8:	sub	r0, r1, #2
   321cc:	str	r0, [sp, #4]
   321d0:	ldr	r0, [sp, #4]
   321d4:	ldr	r2, [r8, r6]
   321d8:	cmp	r0, #0
   321dc:	str	r0, [sp, #28]
   321e0:	beq	32374 <flatcc_verify_table_vector_field@@Base+0x268>
   321e4:	add	lr, r6, r2
   321e8:	add	r7, lr, #4
   321ec:	tst	lr, #3
   321f0:	bne	322c0 <flatcc_verify_table_vector_field@@Base+0x1b4>
   321f4:	cmp	lr, r6
   321f8:	bls	322c0 <flatcc_verify_table_vector_field@@Base+0x1b4>
   321fc:	cmp	r7, r4
   32200:	bhi	322c0 <flatcc_verify_table_vector_field@@Base+0x1b4>
   32204:	str	lr, [sp, #36]	; 0x24
   32208:	add	r0, r8, r2
   3220c:	ldr	r1, [r0, r6]
   32210:	sub	r0, r2, r1
   32214:	add	r3, r6, r0
   32218:	tst	r3, #-2147483647	; 0x80000001
   3221c:	bne	322c0 <flatcc_verify_table_vector_field@@Base+0x1b4>
   32220:	ldr	ip, [sp, #12]
   32224:	add	r4, r3, #2
   32228:	cmp	r4, ip
   3222c:	ldr	r4, [sp, #12]
   32230:	bhi	322c0 <flatcc_verify_table_vector_field@@Base+0x1b4>
   32234:	add	r0, r8, r0
   32238:	add	r0, r0, r6
   3223c:	ldrh	r0, [r0]
   32240:	cmp	r0, #4
   32244:	strh	r0, [sp, #42]	; 0x2a
   32248:	bcc	322c0 <flatcc_verify_table_vector_field@@Base+0x1b4>
   3224c:	ands	r4, r0, #1
   32250:	ldr	r4, [sp, #12]
   32254:	bne	322c0 <flatcc_verify_table_vector_field@@Base+0x1b4>
   32258:	add	r0, r2, r0
   3225c:	sub	r0, r0, r1
   32260:	add	r0, r6, r0
   32264:	cmp	r0, r4
   32268:	bhi	322c0 <flatcc_verify_table_vector_field@@Base+0x1b4>
   3226c:	add	r0, r8, r3
   32270:	ldr	r3, [sp, #8]
   32274:	ldrh	r1, [r0, #2]
   32278:	sub	r2, r3, r2
   3227c:	cmp	r2, r1
   32280:	strh	r1, [sp, #40]	; 0x28
   32284:	bcc	322c0 <flatcc_verify_table_vector_field@@Base+0x1b4>
   32288:	str	r4, [sp, #24]
   3228c:	str	r8, [sp, #20]
   32290:	str	r0, [sp, #32]
   32294:	add	r0, sp, #20
   32298:	blx	r9
   3229c:	cmp	r0, #0
   322a0:	bne	3238c <flatcc_verify_table_vector_field@@Base+0x280>
   322a4:	ldr	r0, [sp, #8]
   322a8:	subs	sl, sl, #1
   322ac:	add	r6, r6, #4
   322b0:	sub	r0, r0, #4
   322b4:	str	r0, [sp, #8]
   322b8:	bne	321d0 <flatcc_verify_table_vector_field@@Base+0xc4>
   322bc:	b	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   322c0:	ldr	r0, [sp, #4]
   322c4:	str	r0, [sp, #28]
   322c8:	mov	r5, #15
   322cc:	tst	lr, #3
   322d0:	bne	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   322d4:	cmp	lr, r6
   322d8:	bls	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   322dc:	cmp	r7, r4
   322e0:	bhi	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   322e4:	str	lr, [sp, #36]	; 0x24
   322e8:	mov	r5, #29
   322ec:	ldr	r0, [r8, lr]
   322f0:	sub	r3, lr, r0
   322f4:	tst	r3, #-2147483647	; 0x80000001
   322f8:	bne	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   322fc:	add	r2, r3, #2
   32300:	mov	r5, #27
   32304:	cmp	r2, r4
   32308:	bhi	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   3230c:	mov	r1, r8
   32310:	mov	r5, #30
   32314:	ldrh	r6, [r1, r3]!
   32318:	tst	r6, #1
   3231c:	strh	r6, [sp, #42]	; 0x2a
   32320:	bne	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32324:	add	r0, r3, r6
   32328:	cmp	r0, r4
   3232c:	bhi	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32330:	mov	r5, #28
   32334:	cmp	r6, #4
   32338:	bcc	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   3233c:	add	r0, r8, r2
   32340:	sub	r2, r4, lr
   32344:	mov	r5, #20
   32348:	ldrh	r0, [r0]
   3234c:	cmp	r2, r0
   32350:	strh	r0, [sp, #40]	; 0x28
   32354:	bcc	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32358:	add	r0, sp, #20
   3235c:	str	r4, [sp, #24]
   32360:	str	r8, [sp, #20]
   32364:	str	r1, [sp, #32]
   32368:	blx	r9
   3236c:	mov	r5, r0
   32370:	b	32380 <flatcc_verify_table_vector_field@@Base+0x274>
   32374:	mov	r0, #0
   32378:	str	r0, [sp, #28]
   3237c:	mov	r5, #3
   32380:	mov	r0, r5
   32384:	sub	sp, fp, #28
   32388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3238c:	ldr	r0, [r8, r6]
   32390:	ldr	r1, [sp, #4]
   32394:	add	lr, r0, r6
   32398:	str	r1, [sp, #28]
   3239c:	add	r7, lr, #4
   323a0:	b	322c8 <flatcc_verify_table_vector_field@@Base+0x1bc>

000323a4 <flatcc_verify_union_table@@Base>:
   323a4:	push	{r4, r5, r6, sl, fp, lr}
   323a8:	add	fp, sp, #16
   323ac:	sub	sp, sp, #24
   323b0:	ldr	r5, [r0, #16]
   323b4:	ldr	r2, [r0, #20]
   323b8:	ldr	ip, [r0]
   323bc:	ldr	r3, [r0, #4]
   323c0:	ldr	r0, [r0, #8]
   323c4:	subs	r0, r0, #1
   323c8:	str	r0, [sp, #8]
   323cc:	beq	32480 <flatcc_verify_union_table@@Base+0xdc>
   323d0:	add	r2, r2, r5
   323d4:	mov	r0, #15
   323d8:	tst	r2, #3
   323dc:	bne	32484 <flatcc_verify_union_table@@Base+0xe0>
   323e0:	cmp	r2, r5
   323e4:	bls	32484 <flatcc_verify_union_table@@Base+0xe0>
   323e8:	add	r6, r2, #4
   323ec:	cmp	r6, r3
   323f0:	bhi	32484 <flatcc_verify_union_table@@Base+0xe0>
   323f4:	str	r2, [sp, #16]
   323f8:	ldr	r0, [ip, r2]
   323fc:	sub	r5, r2, r0
   32400:	mov	r0, #29
   32404:	tst	r5, #-2147483647	; 0x80000001
   32408:	bne	32484 <flatcc_verify_union_table@@Base+0xe0>
   3240c:	add	r4, r5, #2
   32410:	mov	r0, #27
   32414:	cmp	r4, r3
   32418:	bhi	32484 <flatcc_verify_union_table@@Base+0xe0>
   3241c:	mov	lr, ip
   32420:	mov	r0, #30
   32424:	ldrh	r6, [lr, r5]!
   32428:	tst	r6, #1
   3242c:	strh	r6, [sp, #22]
   32430:	bne	32484 <flatcc_verify_union_table@@Base+0xe0>
   32434:	add	r5, r5, r6
   32438:	cmp	r5, r3
   3243c:	bhi	32484 <flatcc_verify_union_table@@Base+0xe0>
   32440:	mov	r0, #28
   32444:	cmp	r6, #4
   32448:	bcc	32484 <flatcc_verify_union_table@@Base+0xe0>
   3244c:	add	r0, ip, r4
   32450:	sub	r2, r3, r2
   32454:	ldrh	r4, [r0]
   32458:	mov	r0, #20
   3245c:	cmp	r2, r4
   32460:	strh	r4, [sp, #20]
   32464:	bcc	32484 <flatcc_verify_union_table@@Base+0xe0>
   32468:	mov	r0, sp
   3246c:	str	r3, [sp, #4]
   32470:	str	ip, [sp]
   32474:	str	lr, [sp, #12]
   32478:	blx	r1
   3247c:	b	32484 <flatcc_verify_union_table@@Base+0xe0>
   32480:	mov	r0, #3
   32484:	sub	sp, fp, #16
   32488:	pop	{r4, r5, r6, sl, fp, pc}

0003248c <flatcc_verify_union_struct@@Base>:
   3248c:	push	{fp, lr}
   32490:	mov	fp, sp
   32494:	ldr	lr, [r0, #20]
   32498:	mov	r3, r0
   3249c:	mov	r0, #18
   324a0:	cmp	lr, #0
   324a4:	beq	324e0 <flatcc_verify_union_struct@@Base+0x54>
   324a8:	ldr	ip, [r3, #4]
   324ac:	ldr	r3, [r3, #16]
   324b0:	add	r3, r3, lr
   324b4:	cmp	r3, ip
   324b8:	bhi	324e0 <flatcc_verify_union_struct@@Base+0x54>
   324bc:	adds	r1, r3, r1
   324c0:	mov	r0, #10
   324c4:	bcs	324e0 <flatcc_verify_union_struct@@Base+0x54>
   324c8:	mov	r0, #9
   324cc:	cmp	r1, ip
   324d0:	pophi	{fp, pc}
   324d4:	sub	r0, r2, #1
   324d8:	ands	r0, r3, r0
   324dc:	movwne	r0, #11
   324e0:	pop	{fp, pc}

000324e4 <flatcc_verify_union_string@@Base>:
   324e4:	push	{fp, lr}
   324e8:	mov	fp, sp
   324ec:	mov	r1, r0
   324f0:	ldr	r3, [r0, #16]
   324f4:	ldr	r0, [r0, #20]
   324f8:	add	r2, r0, r3
   324fc:	mov	r0, #17
   32500:	tst	r2, #3
   32504:	bne	3254c <flatcc_verify_union_string@@Base+0x68>
   32508:	cmp	r2, r3
   3250c:	bls	3254c <flatcc_verify_union_string@@Base+0x68>
   32510:	ldr	r3, [r1, #4]
   32514:	add	ip, r2, #4
   32518:	cmp	r3, ip
   3251c:	bcc	3254c <flatcc_verify_union_string@@Base+0x68>
   32520:	ldr	r1, [r1]
   32524:	sub	lr, r3, ip
   32528:	mov	r0, #8
   3252c:	ldr	r2, [r1, r2]
   32530:	add	r3, r2, #1
   32534:	cmp	lr, r3
   32538:	popcc	{fp, pc}
   3253c:	add	r0, r1, ip
   32540:	ldrb	r0, [r0, r2]
   32544:	cmp	r0, #0
   32548:	movwne	r0, #7
   3254c:	pop	{fp, pc}

00032550 <flatcc_verify_buffer_header@@Base>:
   32550:	push	{r4, sl, fp, lr}
   32554:	add	fp, sp, #8
   32558:	sub	sp, sp, #8
   3255c:	mov	r4, r0
   32560:	mov	r0, #5
   32564:	tst	r4, #3
   32568:	bne	325c4 <flatcc_verify_buffer_header@@Base+0x74>
   3256c:	mov	r0, #6
   32570:	cmn	r1, #9
   32574:	bhi	325c4 <flatcc_verify_buffer_header@@Base+0x74>
   32578:	mov	r0, #1
   3257c:	cmp	r1, #8
   32580:	bcc	325c4 <flatcc_verify_buffer_header@@Base+0x74>
   32584:	cmp	r2, #0
   32588:	beq	325c0 <flatcc_verify_buffer_header@@Base+0x70>
   3258c:	mov	r0, #0
   32590:	mov	r1, r2
   32594:	mov	r2, #4
   32598:	str	r0, [sp, #4]
   3259c:	add	r0, sp, #4
   325a0:	bl	14ef8 <strncpy@plt>
   325a4:	ldr	r1, [sp, #4]
   325a8:	cmp	r1, #0
   325ac:	ldrne	r2, [r4, #4]
   325b0:	movne	r0, #2
   325b4:	cmpne	r2, r1
   325b8:	moveq	r0, #0
   325bc:	b	325c4 <flatcc_verify_buffer_header@@Base+0x74>
   325c0:	mov	r0, #0
   325c4:	sub	sp, fp, #8
   325c8:	pop	{r4, sl, fp, pc}

000325cc <flatcc_verify_typed_buffer_header@@Base>:
   325cc:	mov	r3, r0
   325d0:	mov	r0, #5
   325d4:	tst	r3, #3
   325d8:	bne	3260c <flatcc_verify_typed_buffer_header@@Base+0x40>
   325dc:	mov	r0, #6
   325e0:	cmn	r1, #9
   325e4:	bhi	3260c <flatcc_verify_typed_buffer_header@@Base+0x40>
   325e8:	mov	r0, #1
   325ec:	cmp	r1, #8
   325f0:	bxcc	lr
   325f4:	cmp	r2, #0
   325f8:	beq	32610 <flatcc_verify_typed_buffer_header@@Base+0x44>
   325fc:	ldr	r1, [r3, #4]
   32600:	mov	r0, #2
   32604:	cmp	r1, r2
   32608:	moveq	r0, #0
   3260c:	bx	lr
   32610:	mov	r0, #0
   32614:	bx	lr

00032618 <flatcc_verify_struct_as_root@@Base>:
   32618:	push	{r4, r5, r6, r7, fp, lr}
   3261c:	add	fp, sp, #16
   32620:	mov	r5, r3
   32624:	mov	r6, r2
   32628:	mov	r4, r1
   3262c:	mov	r7, r0
   32630:	bl	32550 <flatcc_verify_buffer_header@@Base>
   32634:	cmp	r0, #0
   32638:	beq	32650 <flatcc_verify_struct_as_root@@Base+0x38>
   3263c:	mov	r0, r7
   32640:	mov	r1, r4
   32644:	mov	r2, r6
   32648:	pop	{r4, r5, r6, r7, fp, lr}
   3264c:	b	32550 <flatcc_verify_buffer_header@@Base>
   32650:	ldr	r1, [r7]
   32654:	mov	r0, #18
   32658:	sub	r2, r1, #1
   3265c:	cmp	r2, r4
   32660:	bcs	3268c <flatcc_verify_struct_as_root@@Base+0x74>
   32664:	adds	r2, r1, r5
   32668:	mov	r0, #10
   3266c:	bcs	3268c <flatcc_verify_struct_as_root@@Base+0x74>
   32670:	mov	r0, #9
   32674:	cmp	r2, r4
   32678:	bhi	3268c <flatcc_verify_struct_as_root@@Base+0x74>
   3267c:	ldr	r0, [fp, #8]
   32680:	sub	r0, r0, #1
   32684:	ands	r0, r1, r0
   32688:	movwne	r0, #11
   3268c:	pop	{r4, r5, r6, r7, fp, pc}

00032690 <flatcc_verify_struct_as_typed_root@@Base>:
   32690:	push	{fp, lr}
   32694:	mov	fp, sp
   32698:	mov	ip, r0
   3269c:	mov	r0, #5
   326a0:	tst	ip, #3
   326a4:	bne	32714 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   326a8:	mov	r0, #6
   326ac:	cmn	r1, #9
   326b0:	bhi	32714 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   326b4:	mov	r0, #1
   326b8:	cmp	r1, #8
   326bc:	bcc	32714 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   326c0:	cmp	r2, #0
   326c4:	beq	326d8 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   326c8:	ldr	lr, [ip, #4]
   326cc:	mov	r0, #2
   326d0:	cmp	lr, r2
   326d4:	bne	32714 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   326d8:	ldr	ip, [ip]
   326dc:	mov	r0, #18
   326e0:	sub	r2, ip, #1
   326e4:	cmp	r2, r1
   326e8:	bcs	32714 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   326ec:	adds	r3, ip, r3
   326f0:	mov	r0, #10
   326f4:	bcs	32714 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   326f8:	mov	r0, #9
   326fc:	cmp	r3, r1
   32700:	pophi	{fp, pc}
   32704:	ldr	r0, [fp, #8]
   32708:	sub	r0, r0, #1
   3270c:	ands	r0, ip, r0
   32710:	movwne	r0, #11
   32714:	pop	{fp, pc}

00032718 <flatcc_verify_table_as_root@@Base>:
   32718:	push	{r4, r5, r6, r7, fp, lr}
   3271c:	add	fp, sp, #16
   32720:	sub	sp, sp, #24
   32724:	mov	r4, r3
   32728:	mov	r7, r2
   3272c:	mov	r5, r1
   32730:	mov	r6, r0
   32734:	bl	32550 <flatcc_verify_buffer_header@@Base>
   32738:	cmp	r0, #0
   3273c:	beq	32758 <flatcc_verify_table_as_root@@Base+0x40>
   32740:	mov	r0, r6
   32744:	mov	r1, r5
   32748:	mov	r2, r7
   3274c:	sub	sp, fp, #16
   32750:	pop	{r4, r5, r6, r7, fp, lr}
   32754:	b	32550 <flatcc_verify_buffer_header@@Base>
   32758:	ldr	r1, [r6]
   3275c:	mov	r0, #99	; 0x63
   32760:	str	r0, [sp, #8]
   32764:	mov	r0, #15
   32768:	tst	r1, #3
   3276c:	bne	3280c <flatcc_verify_table_as_root@@Base+0xf4>
   32770:	cmp	r1, #0
   32774:	beq	3280c <flatcc_verify_table_as_root@@Base+0xf4>
   32778:	add	r2, r1, #4
   3277c:	cmp	r2, r5
   32780:	bhi	3280c <flatcc_verify_table_as_root@@Base+0xf4>
   32784:	str	r1, [sp, #16]
   32788:	ldr	r0, [r6, r1]
   3278c:	sub	r7, r1, r0
   32790:	mov	r0, #29
   32794:	tst	r7, #-2147483647	; 0x80000001
   32798:	bne	3280c <flatcc_verify_table_as_root@@Base+0xf4>
   3279c:	add	r3, r7, #2
   327a0:	mov	r0, #27
   327a4:	cmp	r3, r5
   327a8:	bhi	3280c <flatcc_verify_table_as_root@@Base+0xf4>
   327ac:	mov	ip, r6
   327b0:	mov	r0, #30
   327b4:	ldrh	r2, [ip, r7]!
   327b8:	tst	r2, #1
   327bc:	strh	r2, [sp, #22]
   327c0:	bne	3280c <flatcc_verify_table_as_root@@Base+0xf4>
   327c4:	add	r7, r7, r2
   327c8:	cmp	r7, r5
   327cc:	bhi	3280c <flatcc_verify_table_as_root@@Base+0xf4>
   327d0:	mov	r0, #28
   327d4:	cmp	r2, #4
   327d8:	bcc	3280c <flatcc_verify_table_as_root@@Base+0xf4>
   327dc:	add	r0, r6, r3
   327e0:	sub	r1, r5, r1
   327e4:	ldrh	r2, [r0]
   327e8:	mov	r0, #20
   327ec:	cmp	r1, r2
   327f0:	strh	r2, [sp, #20]
   327f4:	bcc	3280c <flatcc_verify_table_as_root@@Base+0xf4>
   327f8:	mov	r0, sp
   327fc:	str	r5, [sp, #4]
   32800:	str	r6, [sp]
   32804:	str	ip, [sp, #12]
   32808:	blx	r4
   3280c:	sub	sp, fp, #16
   32810:	pop	{r4, r5, r6, r7, fp, pc}

00032814 <flatcc_verify_table_as_typed_root@@Base>:
   32814:	push	{r4, r5, r6, sl, fp, lr}
   32818:	add	fp, sp, #16
   3281c:	sub	sp, sp, #24
   32820:	mov	ip, #5
   32824:	tst	r0, #3
   32828:	bne	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3282c:	mov	ip, #6
   32830:	cmn	r1, #9
   32834:	bhi	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32838:	mov	ip, #1
   3283c:	cmp	r1, #8
   32840:	bcc	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32844:	cmp	r2, #0
   32848:	beq	3285c <flatcc_verify_table_as_typed_root@@Base+0x48>
   3284c:	ldr	r6, [r0, #4]
   32850:	mov	ip, #2
   32854:	cmp	r6, r2
   32858:	bne	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3285c:	ldr	r2, [r0]
   32860:	mov	r6, #99	; 0x63
   32864:	mov	ip, #15
   32868:	str	r6, [sp, #8]
   3286c:	tst	r2, #3
   32870:	bne	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32874:	cmp	r2, #0
   32878:	beq	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   3287c:	add	r6, r2, #4
   32880:	cmp	r6, r1
   32884:	bhi	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32888:	str	r2, [sp, #16]
   3288c:	mov	ip, #29
   32890:	ldr	r6, [r0, r2]
   32894:	sub	r5, r2, r6
   32898:	tst	r5, #-2147483647	; 0x80000001
   3289c:	bne	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   328a0:	add	r4, r5, #2
   328a4:	mov	ip, #27
   328a8:	cmp	r4, r1
   328ac:	bhi	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   328b0:	mov	lr, r0
   328b4:	mov	ip, #30
   328b8:	ldrh	r6, [lr, r5]!
   328bc:	tst	r6, #1
   328c0:	strh	r6, [sp, #22]
   328c4:	bne	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   328c8:	add	r5, r5, r6
   328cc:	cmp	r5, r1
   328d0:	bhi	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   328d4:	mov	ip, #28
   328d8:	cmp	r6, #4
   328dc:	bcc	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   328e0:	add	r6, r0, r4
   328e4:	sub	r2, r1, r2
   328e8:	mov	ip, #20
   328ec:	ldrh	r4, [r6]
   328f0:	cmp	r2, r4
   328f4:	strh	r4, [sp, #20]
   328f8:	bcc	32910 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   328fc:	stm	sp, {r0, r1}
   32900:	mov	r0, sp
   32904:	str	lr, [sp, #12]
   32908:	blx	r3
   3290c:	mov	ip, r0
   32910:	mov	r0, ip
   32914:	sub	sp, fp, #16
   32918:	pop	{r4, r5, r6, sl, fp, pc}

0003291c <flatcc_verify_struct_as_nested_root@@Base>:
   3291c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32920:	add	fp, sp, #28
   32924:	sub	sp, sp, #12
   32928:	ldr	r9, [fp, #12]
   3292c:	mov	r8, r3
   32930:	mov	r5, #1
   32934:	mvn	sl, #0
   32938:	mov	r4, r2
   3293c:	mov	r7, r1
   32940:	mov	r6, r0
   32944:	stm	sp, {r5, sl}
   32948:	mov	r3, r9
   3294c:	bl	31e30 <flatcc_verify_vector_field@@Base>
   32950:	cmp	r0, #0
   32954:	beq	32974 <flatcc_verify_struct_as_nested_root@@Base+0x58>
   32958:	mov	r0, r6
   3295c:	mov	r1, r7
   32960:	mov	r2, r4
   32964:	mov	r3, r9
   32968:	stm	sp, {r5, sl}
   3296c:	bl	31e30 <flatcc_verify_vector_field@@Base>
   32970:	b	329d8 <flatcc_verify_struct_as_nested_root@@Base+0xbc>
   32974:	mov	r0, #4
   32978:	ldrh	r2, [r6, #22]
   3297c:	add	r0, r0, r7, lsl #1
   32980:	uxth	r1, r0
   32984:	cmp	r1, r2
   32988:	bcs	329d4 <flatcc_verify_struct_as_nested_root@@Base+0xb8>
   3298c:	ldr	r1, [r6, #12]
   32990:	uxtah	r0, r1, r0
   32994:	ldrh	r0, [r0]
   32998:	cmp	r0, #0
   3299c:	beq	329d4 <flatcc_verify_struct_as_nested_root@@Base+0xb8>
   329a0:	ldr	r1, [r6]
   329a4:	ldr	r2, [r6, #16]
   329a8:	add	r1, r1, r2
   329ac:	adds	r0, r1, r0
   329b0:	beq	329d4 <flatcc_verify_struct_as_nested_root@@Base+0xb8>
   329b4:	ldr	r2, [r0]
   329b8:	ldr	r3, [fp, #8]
   329bc:	ldr	r1, [r2, r0]!
   329c0:	str	r9, [sp]
   329c4:	add	r0, r2, #4
   329c8:	mov	r2, r8
   329cc:	bl	32618 <flatcc_verify_struct_as_root@@Base>
   329d0:	b	329d8 <flatcc_verify_struct_as_nested_root@@Base+0xbc>
   329d4:	mov	r0, #0
   329d8:	sub	sp, fp, #28
   329dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000329e0 <flatcc_verify_table_as_nested_root@@Base>:
   329e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   329e4:	add	fp, sp, #28
   329e8:	sub	sp, sp, #36	; 0x24
   329ec:	mvn	r9, #0
   329f0:	mov	sl, #1
   329f4:	mov	r8, r3
   329f8:	mov	r5, r2
   329fc:	mov	r4, r1
   32a00:	mov	r6, r0
   32a04:	str	sl, [sp]
   32a08:	str	r9, [sp, #4]
   32a0c:	ldr	r7, [fp, #8]
   32a10:	mov	r3, r7
   32a14:	bl	31e30 <flatcc_verify_vector_field@@Base>
   32a18:	cmp	r0, #0
   32a1c:	beq	32a40 <flatcc_verify_table_as_nested_root@@Base+0x60>
   32a20:	mov	r0, r6
   32a24:	mov	r1, r4
   32a28:	mov	r2, r5
   32a2c:	mov	r3, r7
   32a30:	str	sl, [sp]
   32a34:	str	r9, [sp, #4]
   32a38:	bl	31e30 <flatcc_verify_vector_field@@Base>
   32a3c:	b	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32a40:	mov	r0, #4
   32a44:	ldrh	r3, [r6, #22]
   32a48:	add	r1, r0, r4, lsl #1
   32a4c:	mov	r0, #0
   32a50:	uxth	r2, r1
   32a54:	cmp	r2, r3
   32a58:	bcs	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32a5c:	ldr	r2, [r6, #12]
   32a60:	uxtah	r1, r2, r1
   32a64:	ldrh	r1, [r1]
   32a68:	cmp	r1, #0
   32a6c:	beq	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32a70:	ldr	r2, [r6]
   32a74:	ldr	r3, [r6, #16]
   32a78:	add	r2, r2, r3
   32a7c:	adds	r1, r2, r1
   32a80:	beq	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32a84:	ldr	r0, [r1]
   32a88:	ldr	r7, [fp, #12]
   32a8c:	mov	r2, r8
   32a90:	ldr	r4, [r0, r1]!
   32a94:	add	r5, r0, #4
   32a98:	mov	r0, r5
   32a9c:	mov	r1, r4
   32aa0:	bl	32550 <flatcc_verify_buffer_header@@Base>
   32aa4:	cmp	r0, #0
   32aa8:	beq	32ac4 <flatcc_verify_table_as_nested_root@@Base+0xe4>
   32aac:	mov	r0, r5
   32ab0:	mov	r1, r4
   32ab4:	mov	r2, r8
   32ab8:	sub	sp, fp, #28
   32abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32ac0:	b	32550 <flatcc_verify_buffer_header@@Base>
   32ac4:	ldr	r0, [r6, #8]
   32ac8:	ldr	r1, [r5]
   32acc:	subs	r0, r0, #1
   32ad0:	str	r0, [sp, #20]
   32ad4:	beq	32b84 <flatcc_verify_table_as_nested_root@@Base+0x1a4>
   32ad8:	mov	r0, #15
   32adc:	tst	r1, #3
   32ae0:	bne	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32ae4:	cmp	r1, #0
   32ae8:	beq	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32aec:	add	r2, r1, #4
   32af0:	cmp	r2, r4
   32af4:	bhi	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32af8:	str	r1, [sp, #28]
   32afc:	ldr	r0, [r5, r1]
   32b00:	sub	r6, r1, r0
   32b04:	mov	r0, #29
   32b08:	tst	r6, #-2147483647	; 0x80000001
   32b0c:	bne	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32b10:	add	r3, r6, #2
   32b14:	mov	r0, #27
   32b18:	cmp	r3, r4
   32b1c:	bhi	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32b20:	mov	ip, r5
   32b24:	mov	r0, #30
   32b28:	ldrh	r2, [ip, r6]!
   32b2c:	tst	r2, #1
   32b30:	strh	r2, [sp, #34]	; 0x22
   32b34:	bne	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32b38:	add	r6, r6, r2
   32b3c:	cmp	r6, r4
   32b40:	bhi	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32b44:	mov	r0, #28
   32b48:	cmp	r2, #4
   32b4c:	bcc	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32b50:	add	r0, r5, r3
   32b54:	sub	r1, r4, r1
   32b58:	ldrh	r2, [r0]
   32b5c:	mov	r0, #20
   32b60:	cmp	r1, r2
   32b64:	strh	r2, [sp, #32]
   32b68:	bcc	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32b6c:	add	r0, sp, #12
   32b70:	str	r4, [sp, #16]
   32b74:	str	r5, [sp, #12]
   32b78:	str	ip, [sp, #24]
   32b7c:	blx	r7
   32b80:	b	32b88 <flatcc_verify_table_as_nested_root@@Base+0x1a8>
   32b84:	mov	r0, #3
   32b88:	sub	sp, fp, #28
   32b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00032b90 <flatcc_verify_union_field@@Base>:
   32b90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   32b94:	add	fp, sp, #24
   32b98:	sub	sp, sp, #32
   32b9c:	mov	r5, r0
   32ba0:	mov	r0, #2
   32ba4:	mov	r8, r3
   32ba8:	lsl	r4, r1, #1
   32bac:	add	r0, r0, r1, lsl #1
   32bb0:	ldrh	r3, [r5, #22]
   32bb4:	uxth	r7, r0
   32bb8:	cmp	r7, r3
   32bbc:	bcs	32c78 <flatcc_verify_union_field@@Base+0xe8>
   32bc0:	ldr	r7, [r5, #12]
   32bc4:	uxtah	r0, r7, r0
   32bc8:	ldrh	r9, [r0]
   32bcc:	cmp	r9, #0
   32bd0:	beq	32c78 <flatcc_verify_union_field@@Base+0xe8>
   32bd4:	ldrh	r6, [r5, #20]
   32bd8:	mov	r0, #13
   32bdc:	cmp	r9, r6
   32be0:	bcs	32cac <flatcc_verify_union_field@@Base+0x11c>
   32be4:	add	r4, r4, #4
   32be8:	mov	r0, #1
   32bec:	uxth	r6, r4
   32bf0:	cmp	r6, r3
   32bf4:	bcs	32c08 <flatcc_verify_union_field@@Base+0x78>
   32bf8:	uxtah	r0, r7, r4
   32bfc:	ldrh	r0, [r0]
   32c00:	clz	r0, r0
   32c04:	lsr	r0, r0, #5
   32c08:	ldr	r3, [r5]
   32c0c:	ldr	r7, [r5, #16]
   32c10:	cmp	r0, #0
   32c14:	moveq	r0, #24
   32c18:	add	r7, r3, r7
   32c1c:	ldrb	r3, [r7, r9]
   32c20:	cmpeq	r3, #0
   32c24:	beq	32cac <flatcc_verify_union_field@@Base+0x11c>
   32c28:	cmp	r3, #0
   32c2c:	beq	32cb4 <flatcc_verify_union_field@@Base+0x124>
   32c30:	add	r3, sp, #28
   32c34:	mov	r0, r5
   32c38:	bl	31db0 <flatcc_verify_string_field@@Base+0x8c>
   32c3c:	cmp	r0, #0
   32c40:	bne	32cac <flatcc_verify_union_field@@Base+0x11c>
   32c44:	ldr	r1, [sp, #28]
   32c48:	cmp	r1, #0
   32c4c:	beq	32cac <flatcc_verify_union_field@@Base+0x11c>
   32c50:	ldm	r5, {r0, r2, r3}
   32c54:	str	r1, [sp, #20]
   32c58:	stmib	sp, {r0, r2, r3}
   32c5c:	ldr	r0, [r0, r1]
   32c60:	str	r0, [sp, #24]
   32c64:	ldrb	r0, [r7, r9]
   32c68:	strb	r0, [sp, #16]
   32c6c:	add	r0, sp, #4
   32c70:	blx	r8
   32c74:	b	32cac <flatcc_verify_union_field@@Base+0x11c>
   32c78:	add	r0, r4, #4
   32c7c:	uxth	r1, r0
   32c80:	cmp	r1, r3
   32c84:	bcs	32ca0 <flatcc_verify_union_field@@Base+0x110>
   32c88:	ldr	r1, [r5, #12]
   32c8c:	uxtah	r0, r1, r0
   32c90:	ldrh	r1, [r0]
   32c94:	mov	r0, #23
   32c98:	cmp	r1, #0
   32c9c:	bne	32cac <flatcc_verify_union_field@@Base+0x11c>
   32ca0:	cmp	r2, #0
   32ca4:	movwne	r2, #21
   32ca8:	mov	r0, r2
   32cac:	sub	sp, fp, #24
   32cb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32cb4:	mov	r0, #0
   32cb8:	b	32cac <flatcc_verify_union_field@@Base+0x11c>

00032cbc <flatcc_verify_union_vector_field@@Base>:
   32cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32cc0:	add	fp, sp, #28
   32cc4:	sub	sp, sp, #44	; 0x2c
   32cc8:	mov	r6, r0
   32ccc:	mov	sl, r1
   32cd0:	sub	r0, r1, #1
   32cd4:	mov	r1, #4
   32cd8:	mov	r9, r2
   32cdc:	add	r7, r1, r0, lsl #1
   32ce0:	ldrh	r2, [r6, #22]
   32ce4:	uxth	r4, r7
   32ce8:	cmp	r4, r2
   32cec:	bcs	32d04 <flatcc_verify_union_vector_field@@Base+0x48>
   32cf0:	ldr	r5, [r6, #12]
   32cf4:	uxtah	r5, r5, r7
   32cf8:	ldrh	r5, [r5]
   32cfc:	cmp	r5, #0
   32d00:	bne	32d44 <flatcc_verify_union_vector_field@@Base+0x88>
   32d04:	add	r1, r1, sl, lsl #1
   32d08:	uxth	r5, r1
   32d0c:	cmp	r5, r2
   32d10:	bcs	32d38 <flatcc_verify_union_vector_field@@Base+0x7c>
   32d14:	cmp	r9, #0
   32d18:	beq	32d44 <flatcc_verify_union_vector_field@@Base+0x88>
   32d1c:	ldr	r2, [r6, #12]
   32d20:	mov	r5, #22
   32d24:	uxtah	r1, r2, r1
   32d28:	ldrh	r1, [r1]
   32d2c:	cmp	r1, #0
   32d30:	beq	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32d34:	b	32d44 <flatcc_verify_union_vector_field@@Base+0x88>
   32d38:	mov	r5, #22
   32d3c:	cmp	r9, #0
   32d40:	bne	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32d44:	uxth	r5, r0
   32d48:	mvn	r1, #0
   32d4c:	str	r3, [sp, #12]
   32d50:	mov	r8, #1
   32d54:	mov	r0, r6
   32d58:	mov	r2, r9
   32d5c:	mov	r3, #1
   32d60:	str	r1, [sp, #4]
   32d64:	str	r8, [sp]
   32d68:	mov	r1, r5
   32d6c:	bl	31e30 <flatcc_verify_vector_field@@Base>
   32d70:	cmp	r0, #0
   32d74:	beq	32da0 <flatcc_verify_union_vector_field@@Base+0xe4>
   32d78:	mvn	r0, #0
   32d7c:	mov	r1, r5
   32d80:	mov	r2, r9
   32d84:	mov	r3, #1
   32d88:	str	r8, [sp]
   32d8c:	str	r0, [sp, #4]
   32d90:	mov	r0, r6
   32d94:	bl	31e30 <flatcc_verify_vector_field@@Base>
   32d98:	mov	r5, r0
   32d9c:	b	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32da0:	ldrh	r0, [r6, #22]
   32da4:	mov	r5, #0
   32da8:	cmp	r4, r0
   32dac:	bcs	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32db0:	ldr	r0, [r6, #12]
   32db4:	uxtah	r0, r0, r7
   32db8:	ldrh	r0, [r0]
   32dbc:	cmp	r0, #0
   32dc0:	beq	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32dc4:	ldr	r1, [r6]
   32dc8:	ldr	r2, [r6, #16]
   32dcc:	ldr	r7, [sp, #12]
   32dd0:	add	r1, r1, r2
   32dd4:	adds	r0, r1, r0
   32dd8:	beq	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32ddc:	ldr	r4, [r0]
   32de0:	add	r3, sp, #16
   32de4:	mov	r1, sl
   32de8:	mov	r2, r9
   32dec:	ldr	r8, [r4, r0]!
   32df0:	mov	r0, r6
   32df4:	bl	31db0 <flatcc_verify_string_field@@Base+0x8c>
   32df8:	mov	r5, r0
   32dfc:	cmp	r0, #0
   32e00:	bne	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32e04:	ldr	r1, [sp, #16]
   32e08:	cmp	r1, #0
   32e0c:	beq	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32e10:	ldr	r0, [r6, #8]
   32e14:	cmp	r0, #1
   32e18:	blt	32ef4 <flatcc_verify_union_vector_field@@Base+0x238>
   32e1c:	ldr	sl, [r6]
   32e20:	mov	r5, #16
   32e24:	ldr	r2, [sl, r1]
   32e28:	add	r2, r2, r1
   32e2c:	cmp	r2, r1
   32e30:	bls	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32e34:	ldr	r1, [r6, #4]
   32e38:	add	r6, r2, #4
   32e3c:	cmp	r6, r1
   32e40:	bhi	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32e44:	ands	r3, r6, #3
   32e48:	bne	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32e4c:	ldr	r3, [sl, r2]
   32e50:	mov	r5, #25
   32e54:	cmn	r3, #-1073741823	; 0xc0000001
   32e58:	bhi	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32e5c:	sub	r2, r1, r2
   32e60:	mov	r5, #26
   32e64:	sub	r2, r2, #4
   32e68:	cmp	r2, r3, lsl #2
   32e6c:	bcc	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32e70:	mov	r5, #34	; 0x22
   32e74:	cmp	r3, r8
   32e78:	bne	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32e7c:	sub	r0, r0, #1
   32e80:	mov	r5, #0
   32e84:	cmp	r8, #0
   32e88:	str	r0, [sp, #28]
   32e8c:	str	r1, [sp, #24]
   32e90:	str	sl, [sp, #20]
   32e94:	beq	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32e98:	add	r4, r4, #4
   32e9c:	add	r9, sp, #20
   32ea0:	ldr	r1, [sl, r6]
   32ea4:	ldrb	r0, [r4]
   32ea8:	cmp	r1, #0
   32eac:	beq	32ed8 <flatcc_verify_union_vector_field@@Base+0x21c>
   32eb0:	cmp	r0, #0
   32eb4:	beq	32f04 <flatcc_verify_union_vector_field@@Base+0x248>
   32eb8:	str	r1, [sp, #40]	; 0x28
   32ebc:	str	r6, [sp, #36]	; 0x24
   32ec0:	strb	r0, [sp, #32]
   32ec4:	mov	r0, r9
   32ec8:	blx	r7
   32ecc:	cmp	r0, #0
   32ed0:	beq	32ee0 <flatcc_verify_union_vector_field@@Base+0x224>
   32ed4:	b	32f0c <flatcc_verify_union_vector_field@@Base+0x250>
   32ed8:	cmp	r0, #0
   32edc:	bne	32f18 <flatcc_verify_union_vector_field@@Base+0x25c>
   32ee0:	add	r4, r4, #1
   32ee4:	subs	r8, r8, #1
   32ee8:	add	r6, r6, #4
   32eec:	bne	32ea0 <flatcc_verify_union_vector_field@@Base+0x1e4>
   32ef0:	b	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32ef4:	mov	r5, #3
   32ef8:	mov	r0, r5
   32efc:	sub	sp, fp, #28
   32f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f04:	mov	r5, #33	; 0x21
   32f08:	b	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>
   32f0c:	add	r0, sp, #20
   32f10:	blx	r7
   32f14:	b	32d98 <flatcc_verify_union_vector_field@@Base+0xdc>
   32f18:	mov	r5, #32
   32f1c:	b	32ef8 <flatcc_verify_union_vector_field@@Base+0x23c>

00032f20 <grisu3_diy_fp_encode_double@@Base>:
   32f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32f24:	add	fp, sp, #28
   32f28:	sub	sp, sp, #44	; 0x2c
   32f2c:	mov	r5, r2
   32f30:	mov	r2, r0
   32f34:	mov	r0, #0
   32f38:	mov	r9, r3
   32f3c:	mov	r3, r1
   32f40:	str	r0, [sp]
   32f44:	str	r0, [sp, #4]
   32f48:	add	r0, sp, #24
   32f4c:	bl	332d8 <grisu3_diy_fp_encode_double@@Base+0x3b8>
   32f50:	ldr	r1, [fp, #8]
   32f54:	sub	r0, r5, r9
   32f58:	cmp	r1, #0
   32f5c:	movwne	r1, #1
   32f60:	cmn	r0, #348	; 0x15c
   32f64:	blt	33250 <grisu3_diy_fp_encode_double@@Base+0x330>
   32f68:	cmp	r0, #348	; 0x15c
   32f6c:	bge	33268 <grisu3_diy_fp_encode_double@@Base+0x348>
   32f70:	add	r2, r0, #348	; 0x15c
   32f74:	movw	r6, #34632	; 0x8748
   32f78:	asr	r3, r2, #31
   32f7c:	movt	r6, #4
   32f80:	add	r2, r2, r3, lsr #29
   32f84:	mvn	r3, #14
   32f88:	and	r2, r3, r2, lsl #1
   32f8c:	ldr	r8, [r6, r2]!
   32f90:	ldrsh	r4, [r6, #10]
   32f94:	cmp	r0, r4
   32f98:	blt	33280 <grisu3_diy_fp_encode_double@@Base+0x360>
   32f9c:	add	r2, r4, #8
   32fa0:	cmp	r2, r0
   32fa4:	ble	33298 <grisu3_diy_fp_encode_double@@Base+0x378>
   32fa8:	lsl	r5, r1, #2
   32fac:	ldr	r1, [sp, #32]
   32fb0:	ldr	r2, [sp, #24]
   32fb4:	ldr	r3, [sp, #28]
   32fb8:	ldr	ip, [sp, #36]	; 0x24
   32fbc:	cmp	r0, r4
   32fc0:	rsb	r7, r1, #0
   32fc4:	lsl	sl, r5, r7
   32fc8:	beq	3302c <grisu3_diy_fp_encode_double@@Base+0x10c>
   32fcc:	mvn	r7, r4
   32fd0:	add	r4, r0, r7
   32fd4:	cmp	r4, #7
   32fd8:	bcs	332b8 <grisu3_diy_fp_encode_double@@Base+0x398>
   32fdc:	movw	r0, #34520	; 0x86d8
   32fe0:	stm	sp, {r1, ip}
   32fe4:	movt	r0, #4
   32fe8:	ldr	r1, [r0, r4, lsl #4]!
   32fec:	str	r1, [sp, #8]
   32ff0:	ldmib	r0, {r1, r7}
   32ff4:	ldr	r0, [r0, #12]
   32ff8:	str	r7, [sp, #16]
   32ffc:	str	r1, [sp, #12]
   33000:	str	r0, [sp, #20]
   33004:	add	r0, sp, #24
   33008:	bl	3337c <grisu3_diy_fp_encode_double@@Base+0x45c>
   3300c:	add	r0, r9, r4
   33010:	ldr	r2, [sp, #24]
   33014:	ldr	r3, [sp, #28]
   33018:	ldr	r1, [sp, #32]
   3301c:	ldr	ip, [sp, #36]	; 0x24
   33020:	add	r0, r0, #1
   33024:	cmp	r0, #19
   33028:	addgt	sl, sl, #4
   3302c:	ldr	r0, [r6, #4]
   33030:	ldrsh	r7, [r6, #8]
   33034:	stm	sp, {r1, ip}
   33038:	mov	r6, #0
   3303c:	str	r8, [sp, #8]
   33040:	str	r6, [sp, #20]
   33044:	str	r0, [sp, #12]
   33048:	add	r0, sp, #24
   3304c:	str	r7, [sp, #16]
   33050:	bl	3337c <grisu3_diy_fp_encode_double@@Base+0x45c>
   33054:	add	r5, sp, #24
   33058:	ldr	r0, [sp, #36]	; 0x24
   3305c:	ldm	r5, {r2, r3, r5}
   33060:	str	r5, [sp]
   33064:	str	r0, [sp, #4]
   33068:	add	r0, sp, #24
   3306c:	bl	332d8 <grisu3_diy_fp_encode_double@@Base+0x3b8>
   33070:	ldr	r7, [sp, #32]
   33074:	cmp	sl, #0
   33078:	mov	r0, #9
   3307c:	ldr	r4, [sp, #24]
   33080:	ldr	r3, [sp, #28]
   33084:	movweq	r0, #8
   33088:	add	r0, r0, sl
   3308c:	sub	r1, r5, r7
   33090:	lsl	lr, r0, r1
   33094:	movw	r1, #64462	; 0xfbce
   33098:	add	r0, r7, #64	; 0x40
   3309c:	movt	r1, #65535	; 0xffff
   330a0:	add	r2, r1, #63	; 0x3f
   330a4:	cmp	r0, r2
   330a8:	bgt	330f8 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   330ac:	mvn	r2, #1072	; 0x430
   330b0:	mov	r6, #64	; 0x40
   330b4:	cmp	r0, r2
   330b8:	blt	330c8 <grisu3_diy_fp_encode_double@@Base+0x1a8>
   330bc:	sub	r6, r1, r7
   330c0:	cmp	r6, #61	; 0x3d
   330c4:	blt	330f8 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   330c8:	sub	r0, r6, #62	; 0x3e
   330cc:	mov	r2, #9
   330d0:	rsb	r5, r6, #94	; 0x5e
   330d4:	add	lr, r2, lr, asr r0
   330d8:	lsr	r2, r4, r0
   330dc:	add	r7, r0, r7
   330e0:	orr	r4, r2, r3, lsl r5
   330e4:	subs	r2, r6, #94	; 0x5e
   330e8:	mov	r6, #62	; 0x3e
   330ec:	lsrpl	r4, r3, r2
   330f0:	lsr	r3, r3, r0
   330f4:	movwpl	r3, #0
   330f8:	lsr	r0, r4, r6
   330fc:	rsb	r2, r6, #32
   33100:	add	r5, r7, r6
   33104:	mov	r7, #1
   33108:	orr	r2, r0, r3, lsl r2
   3310c:	subs	r0, r6, #32
   33110:	lsrpl	r2, r3, r0
   33114:	sub	r0, r6, #1
   33118:	lsr	r3, r3, r6
   3311c:	movwpl	r3, #0
   33120:	lsl	r7, r7, r0
   33124:	subs	r0, r6, #33	; 0x21
   33128:	movwpl	r7, #0
   3312c:	add	r8, lr, r7, lsl #3
   33130:	cmp	r6, r8
   33134:	blt	33154 <grisu3_diy_fp_encode_double@@Base+0x234>
   33138:	adds	r2, r2, #1
   3313c:	adc	r3, r3, #0
   33140:	tst	r3, #2097152	; 0x200000
   33144:	beq	33154 <grisu3_diy_fp_encode_double@@Base+0x234>
   33148:	lsrs	r3, r3, #1
   3314c:	rrx	r2, r2
   33150:	add	r5, r5, #1
   33154:	and	r6, r7, r4
   33158:	cmp	r3, #2097152	; 0x200000
   3315c:	bcc	33180 <grisu3_diy_fp_encode_double@@Base+0x260>
   33160:	mov	r4, #0
   33164:	lsrs	r0, r3, #1
   33168:	rrx	r2, r2
   3316c:	cmp	r4, r3, lsr #22
   33170:	add	r5, r5, #1
   33174:	mov	r3, r0
   33178:	bne	33164 <grisu3_diy_fp_encode_double@@Base+0x244>
   3317c:	b	33184 <grisu3_diy_fp_encode_double@@Base+0x264>
   33180:	mov	r0, r3
   33184:	ldr	ip, [fp, #12]
   33188:	vmov.i32	d16, #0	; 0x00000000
   3318c:	lsl	r9, r7, #3
   33190:	lsl	r6, r6, #3
   33194:	cmp	r5, r1
   33198:	blt	33224 <grisu3_diy_fp_encode_double@@Base+0x304>
   3319c:	and	r3, r0, #1048576	; 0x100000
   331a0:	mov	r4, #1
   331a4:	cmp	r5, r1
   331a8:	eor	r7, r4, r3, lsr #20
   331ac:	beq	331e8 <grisu3_diy_fp_encode_double@@Base+0x2c8>
   331b0:	cmp	r3, #0
   331b4:	bne	331e8 <grisu3_diy_fp_encode_double@@Base+0x2c8>
   331b8:	mov	r4, #1
   331bc:	lsl	r3, r0, #1
   331c0:	ands	r0, r0, #524288	; 0x80000
   331c4:	sub	r5, r5, #1
   331c8:	orr	r3, r3, r2, lsr #31
   331cc:	eor	r7, r4, r0, lsr #19
   331d0:	lsl	r2, r2, #1
   331d4:	bne	331ec <grisu3_diy_fp_encode_double@@Base+0x2cc>
   331d8:	cmp	r5, r1
   331dc:	mov	r0, r3
   331e0:	bgt	331bc <grisu3_diy_fp_encode_double@@Base+0x29c>
   331e4:	b	331ec <grisu3_diy_fp_encode_double@@Base+0x2cc>
   331e8:	mov	r3, r0
   331ec:	cmp	r5, r1
   331f0:	bne	33204 <grisu3_diy_fp_encode_double@@Base+0x2e4>
   331f4:	mov	r0, #0
   331f8:	cmp	r7, #0
   331fc:	mov	r1, #0
   33200:	bne	33214 <grisu3_diy_fp_encode_double@@Base+0x2f4>
   33204:	movw	r0, #1075	; 0x433
   33208:	add	r0, r5, r0
   3320c:	lsl	r1, r0, #20
   33210:	mov	r0, #0
   33214:	bfc	r3, #20, #12
   33218:	orr	r0, r0, r2
   3321c:	orr	r1, r1, r3
   33220:	vmov	d16, r0, r1
   33224:	cmp	r6, r8
   33228:	sub	r2, r9, lr
   3322c:	mov	r1, #0
   33230:	mov	r0, #0
   33234:	vstr	d16, [ip]
   33238:	movwge	r1, #1
   3323c:	cmp	r2, r6
   33240:	movwge	r0, #1
   33244:	orr	r0, r1, r0
   33248:	sub	sp, fp, #28
   3324c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33250:	movw	r0, #38146	; 0x9502
   33254:	movw	r1, #36704	; 0x8f60
   33258:	movw	r3, #38177	; 0x9521
   3325c:	mov	r2, #80	; 0x50
   33260:	movt	r0, #4
   33264:	b	332ac <grisu3_diy_fp_encode_double@@Base+0x38c>
   33268:	movw	r0, #38234	; 0x955a
   3326c:	movw	r1, #36704	; 0x8f60
   33270:	movw	r3, #38177	; 0x9521
   33274:	mov	r2, #81	; 0x51
   33278:	movt	r0, #4
   3327c:	b	332ac <grisu3_diy_fp_encode_double@@Base+0x38c>
   33280:	movw	r0, #38277	; 0x9585
   33284:	movw	r1, #36704	; 0x8f60
   33288:	movw	r3, #38177	; 0x9521
   3328c:	mov	r2, #88	; 0x58
   33290:	movt	r0, #4
   33294:	b	332ac <grisu3_diy_fp_encode_double@@Base+0x38c>
   33298:	movw	r0, #38292	; 0x9594
   3329c:	movw	r1, #36704	; 0x8f60
   332a0:	movw	r3, #38177	; 0x9521
   332a4:	mov	r2, #89	; 0x59
   332a8:	movt	r0, #4
   332ac:	movt	r1, #4
   332b0:	movt	r3, #4
   332b4:	bl	14f40 <__assert_fail@plt>
   332b8:	movw	r0, #36676	; 0x8f44
   332bc:	movw	r1, #36704	; 0x8f60
   332c0:	movw	r3, #36791	; 0x8fb7
   332c4:	mov	r2, #185	; 0xb9
   332c8:	movt	r0, #4
   332cc:	movt	r1, #4
   332d0:	movt	r3, #4
   332d4:	bl	14f40 <__assert_fail@plt>
   332d8:	push	{r4, sl, fp, lr}
   332dc:	add	fp, sp, #8
   332e0:	orrs	r1, r2, r3
   332e4:	beq	3335c <grisu3_diy_fp_encode_double@@Base+0x43c>
   332e8:	ldr	r1, [fp, #8]
   332ec:	mov	r4, #0
   332f0:	cmp	r4, r3, lsr #22
   332f4:	bne	33310 <grisu3_diy_fp_encode_double@@Base+0x3f0>
   332f8:	lsl	r3, r3, #10
   332fc:	sub	r1, r1, #10
   33300:	orr	r3, r3, r2, lsr #22
   33304:	lsl	r2, r2, #10
   33308:	cmp	r3, #4194304	; 0x400000
   3330c:	bcc	332f8 <grisu3_diy_fp_encode_double@@Base+0x3d8>
   33310:	ldr	ip, [fp, #12]
   33314:	cmp	r3, #0
   33318:	bmi	33344 <grisu3_diy_fp_encode_double@@Base+0x424>
   3331c:	mvn	lr, #0
   33320:	lsl	r3, r3, #1
   33324:	lsl	r4, r2, #1
   33328:	sub	r1, r1, #1
   3332c:	orr	r3, r3, r2, lsr #31
   33330:	subs	r2, lr, r2, lsl #1
   33334:	sbcs	r2, lr, r3
   33338:	mov	r2, r4
   3333c:	blt	33320 <grisu3_diy_fp_encode_double@@Base+0x400>
   33340:	b	33348 <grisu3_diy_fp_encode_double@@Base+0x428>
   33344:	mov	r4, r2
   33348:	str	r4, [r0]
   3334c:	str	r3, [r0, #4]
   33350:	str	r1, [r0, #8]
   33354:	str	ip, [r0, #12]
   33358:	pop	{r4, sl, fp, pc}
   3335c:	movw	r0, #37994	; 0x946a
   33360:	movw	r1, #38003	; 0x9473
   33364:	movw	r3, #38089	; 0x94c9
   33368:	mov	r2, #260	; 0x104
   3336c:	movt	r0, #4
   33370:	movt	r1, #4
   33374:	movt	r3, #4
   33378:	bl	14f40 <__assert_fail@plt>
   3337c:	push	{r4, r5, fp, lr}
   33380:	add	fp, sp, #8
   33384:	ldr	ip, [fp, #24]
   33388:	ldr	r1, [fp, #8]
   3338c:	mov	r5, #0
   33390:	add	r1, r1, ip
   33394:	ldr	ip, [fp, #16]
   33398:	add	r1, r1, #64	; 0x40
   3339c:	str	r1, [r0, #8]
   333a0:	umull	r1, lr, ip, r2
   333a4:	umull	ip, r1, ip, r3
   333a8:	adds	lr, ip, lr
   333ac:	ldr	ip, [fp, #20]
   333b0:	adc	r5, r5, #0
   333b4:	umull	r2, r4, ip, r2
   333b8:	umaal	r1, r4, ip, r3
   333bc:	adds	r2, lr, r2
   333c0:	adc	r5, r5, #0
   333c4:	adds	r2, r2, #-2147483648	; 0x80000000
   333c8:	adcs	r1, r1, r5
   333cc:	str	r1, [r0]
   333d0:	adc	r1, r4, #0
   333d4:	str	r1, [r0, #4]
   333d8:	pop	{r4, r5, fp, pc}

000333dc <flatcc_json_parser_error_string@@Base>:
   333dc:	cmp	r0, #34	; 0x22
   333e0:	movwhi	r0, #34358	; 0x8636
   333e4:	movthi	r0, #4
   333e8:	bxhi	lr
   333ec:	movw	r1, #36536	; 0x8eb8
   333f0:	movt	r1, #4
   333f4:	ldr	r0, [r1, r0, lsl #2]
   333f8:	bx	lr

000333fc <flatcc_json_parser_set_error@@Base>:
   333fc:	mov	ip, r2
   33400:	ldr	r2, [r0, #24]
   33404:	cmp	r2, #0
   33408:	bne	33424 <flatcc_json_parser_set_error@@Base+0x28>
   3340c:	str	r1, [r0, #36]	; 0x24
   33410:	ldr	r2, [r0, #4]
   33414:	sub	r1, r1, r2
   33418:	add	r1, r1, #1
   3341c:	str	r1, [r0, #20]
   33420:	str	r3, [r0, #24]
   33424:	mov	r0, ip
   33428:	bx	lr

0003342c <flatcc_json_parser_string_part@@Base>:
   3342c:	cmp	r1, r2
   33430:	beq	3345c <flatcc_json_parser_string_part@@Base+0x30>
   33434:	ldrb	r3, [r1]
   33438:	cmp	r3, #32
   3343c:	bcc	33490 <flatcc_json_parser_string_part@@Base+0x64>
   33440:	cmp	r3, #34	; 0x22
   33444:	cmpne	r3, #92	; 0x5c
   33448:	beq	33488 <flatcc_json_parser_string_part@@Base+0x5c>
   3344c:	add	r1, r1, #1
   33450:	cmp	r2, r1
   33454:	bne	33434 <flatcc_json_parser_string_part@@Base+0x8>
   33458:	mov	r1, r2
   3345c:	ldr	r3, [r0, #24]
   33460:	cmp	r3, #0
   33464:	bne	33484 <flatcc_json_parser_string_part@@Base+0x58>
   33468:	mov	ip, #20
   3346c:	str	r1, [r0, #36]	; 0x24
   33470:	ldr	r3, [r0, #4]
   33474:	sub	r1, r1, r3
   33478:	add	r1, r1, #1
   3347c:	str	r1, [r0, #20]
   33480:	str	ip, [r0, #24]
   33484:	mov	r1, r2
   33488:	mov	r0, r1
   3348c:	bx	lr
   33490:	ldr	r3, [r0, #24]
   33494:	cmp	r3, #0
   33498:	bne	33484 <flatcc_json_parser_string_part@@Base+0x58>
   3349c:	mov	ip, #17
   334a0:	b	3346c <flatcc_json_parser_string_part@@Base+0x40>

000334a4 <flatcc_json_parser_space_ext@@Base>:
   334a4:	mov	ip, r2
   334a8:	cmp	r1, r2
   334ac:	beq	33580 <flatcc_json_parser_space_ext@@Base+0xdc>
   334b0:	ldrb	r3, [r1]
   334b4:	cmp	r3, #32
   334b8:	bne	334cc <flatcc_json_parser_space_ext@@Base+0x28>
   334bc:	add	r1, r1, #1
   334c0:	cmp	r1, ip
   334c4:	bne	334b0 <flatcc_json_parser_space_ext@@Base+0xc>
   334c8:	b	33580 <flatcc_json_parser_space_ext@@Base+0xdc>
   334cc:	cmp	r1, ip
   334d0:	beq	33580 <flatcc_json_parser_space_ext@@Base+0xdc>
   334d4:	ldrb	r3, [r1]
   334d8:	cmp	r3, #32
   334dc:	bhi	3357c <flatcc_json_parser_space_ext@@Base+0xd8>
   334e0:	cmp	r3, #12
   334e4:	bgt	334fc <flatcc_json_parser_space_ext@@Base+0x58>
   334e8:	cmp	r3, #9
   334ec:	beq	33540 <flatcc_json_parser_space_ext@@Base+0x9c>
   334f0:	cmp	r3, #10
   334f4:	beq	33528 <flatcc_json_parser_space_ext@@Base+0x84>
   334f8:	b	33550 <flatcc_json_parser_space_ext@@Base+0xac>
   334fc:	cmp	r3, #13
   33500:	bne	33548 <flatcc_json_parser_space_ext@@Base+0xa4>
   33504:	sub	r2, ip, r1
   33508:	mov	r3, #0
   3350c:	cmp	r2, #2
   33510:	blt	33524 <flatcc_json_parser_space_ext@@Base+0x80>
   33514:	ldrb	r2, [r1, #1]
   33518:	sub	r2, r2, #10
   3351c:	clz	r2, r2
   33520:	lsr	r3, r2, #5
   33524:	add	r1, r1, r3
   33528:	add	r1, r1, #1
   3352c:	str	r1, [r0, #4]
   33530:	ldr	r2, [r0, #16]
   33534:	add	r2, r2, #1
   33538:	str	r2, [r0, #16]
   3353c:	b	334cc <flatcc_json_parser_space_ext@@Base+0x28>
   33540:	add	r1, r1, #1
   33544:	b	334cc <flatcc_json_parser_space_ext@@Base+0x28>
   33548:	cmp	r3, #32
   3354c:	beq	334c0 <flatcc_json_parser_space_ext@@Base+0x1c>
   33550:	ldr	r2, [r0, #24]
   33554:	cmp	r2, #0
   33558:	bne	33580 <flatcc_json_parser_space_ext@@Base+0xdc>
   3355c:	str	r1, [r0, #36]	; 0x24
   33560:	mov	r2, #5
   33564:	ldr	r3, [r0, #4]
   33568:	sub	r1, r1, r3
   3356c:	add	r1, r1, #1
   33570:	str	r1, [r0, #20]
   33574:	str	r2, [r0, #24]
   33578:	b	33580 <flatcc_json_parser_space_ext@@Base+0xdc>
   3357c:	mov	ip, r1
   33580:	mov	r0, ip
   33584:	bx	lr

00033588 <flatcc_json_parser_string_escape@@Base>:
   33588:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3358c:	add	fp, sp, #24
   33590:	sub	r7, r2, r1
   33594:	cmp	r7, #2
   33598:	blt	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   3359c:	ldrb	r6, [r1]
   335a0:	cmp	r6, #92	; 0x5c
   335a4:	bne	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   335a8:	ldrb	r6, [r1, #1]
   335ac:	cmp	r6, #97	; 0x61
   335b0:	bgt	335d4 <flatcc_json_parser_string_escape@@Base+0x4c>
   335b4:	cmp	r6, #34	; 0x22
   335b8:	beq	33634 <flatcc_json_parser_string_escape@@Base+0xac>
   335bc:	cmp	r6, #47	; 0x2f
   335c0:	beq	3363c <flatcc_json_parser_string_escape@@Base+0xb4>
   335c4:	cmp	r6, #92	; 0x5c
   335c8:	bne	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   335cc:	movw	r0, #23553	; 0x5c01
   335d0:	b	336c0 <flatcc_json_parser_string_escape@@Base+0x138>
   335d4:	sub	r5, r6, #110	; 0x6e
   335d8:	cmp	r5, #10
   335dc:	bhi	3361c <flatcc_json_parser_string_escape@@Base+0x94>
   335e0:	add	r6, pc, #0
   335e4:	ldr	pc, [r6, r5, lsl #2]
   335e8:	andeq	r3, r3, r4, lsl r6
   335ec:	andeq	r3, r3, r8, lsl #13
   335f0:	andeq	r3, r3, r8, lsl #13
   335f4:	andeq	r3, r3, r8, lsl #13
   335f8:	andeq	r3, r3, r4, asr #12
   335fc:	andeq	r3, r3, r8, lsl #13
   33600:	andeq	r3, r3, ip, asr #12
   33604:	andeq	r3, r3, r4, asr r6
   33608:	andeq	r3, r3, r8, lsl #13
   3360c:	andeq	r3, r3, r8, lsl #13
   33610:	andeq	r3, r3, r8, ror r6
   33614:	movw	r0, #2561	; 0xa01
   33618:	b	336c0 <flatcc_json_parser_string_escape@@Base+0x138>
   3361c:	cmp	r6, #98	; 0x62
   33620:	beq	336bc <flatcc_json_parser_string_escape@@Base+0x134>
   33624:	cmp	r6, #102	; 0x66
   33628:	bne	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   3362c:	movw	r0, #3073	; 0xc01
   33630:	b	336c0 <flatcc_json_parser_string_escape@@Base+0x138>
   33634:	movw	r0, #8705	; 0x2201
   33638:	b	336c0 <flatcc_json_parser_string_escape@@Base+0x138>
   3363c:	movw	r0, #12033	; 0x2f01
   33640:	b	336c0 <flatcc_json_parser_string_escape@@Base+0x138>
   33644:	movw	r0, #3329	; 0xd01
   33648:	b	336c0 <flatcc_json_parser_string_escape@@Base+0x138>
   3364c:	movw	r0, #2305	; 0x901
   33650:	b	336c0 <flatcc_json_parser_string_escape@@Base+0x138>
   33654:	cmp	r7, #5
   33658:	ble	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   3365c:	ldrb	r7, [r1, #2]
   33660:	sub	r6, r7, #48	; 0x30
   33664:	uxtb	r6, r6
   33668:	cmp	r6, #9
   3366c:	bhi	336ec <flatcc_json_parser_string_escape@@Base+0x164>
   33670:	lsl	ip, r7, #12
   33674:	b	3370c <flatcc_json_parser_string_escape@@Base+0x184>
   33678:	mov	r6, #1
   3367c:	cmp	r7, #3
   33680:	strb	r6, [r3]
   33684:	bgt	336d0 <flatcc_json_parser_string_escape@@Base+0x148>
   33688:	mov	r7, #0
   3368c:	strb	r7, [r3]
   33690:	ldr	r3, [r0, #24]
   33694:	cmp	r3, #0
   33698:	bne	336c8 <flatcc_json_parser_string_escape@@Base+0x140>
   3369c:	str	r1, [r0, #36]	; 0x24
   336a0:	mov	r3, #18
   336a4:	ldr	r7, [r0, #4]
   336a8:	sub	r1, r1, r7
   336ac:	add	r1, r1, #1
   336b0:	str	r1, [r0, #20]
   336b4:	str	r3, [r0, #24]
   336b8:	b	336c8 <flatcc_json_parser_string_escape@@Base+0x140>
   336bc:	movw	r0, #2049	; 0x801
   336c0:	strh	r0, [r3]
   336c4:	add	r2, r1, #2
   336c8:	mov	r0, r2
   336cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   336d0:	ldrb	r7, [r1, #2]
   336d4:	sub	r6, r7, #48	; 0x30
   336d8:	uxtb	r6, r6
   336dc:	cmp	r6, #9
   336e0:	bhi	33728 <flatcc_json_parser_string_escape@@Base+0x1a0>
   336e4:	lsl	r7, r7, #4
   336e8:	b	33744 <flatcc_json_parser_string_escape@@Base+0x1bc>
   336ec:	orr	r6, r7, #32
   336f0:	sub	r6, r6, #97	; 0x61
   336f4:	uxtb	r6, r6
   336f8:	cmp	r6, #5
   336fc:	bhi	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   33700:	movw	r6, #36864	; 0x9000
   33704:	movt	r6, #65535	; 0xffff
   33708:	add	ip, r6, r7, lsl #12
   3370c:	ldrb	lr, [r1, #3]
   33710:	sub	r4, lr, #48	; 0x30
   33714:	uxtb	r4, r4
   33718:	cmp	r4, #10
   3371c:	bcs	33780 <flatcc_json_parser_string_escape@@Base+0x1f8>
   33720:	mov	r8, #53248	; 0xd000
   33724:	b	33798 <flatcc_json_parser_string_escape@@Base+0x210>
   33728:	orr	r6, r7, #32
   3372c:	sub	r6, r6, #97	; 0x61
   33730:	uxtb	r6, r6
   33734:	cmp	r6, #5
   33738:	bhi	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   3373c:	mvn	r6, #111	; 0x6f
   33740:	add	r7, r6, r7, lsl #4
   33744:	ldrb	r5, [r1, #3]
   33748:	sub	r6, r5, #48	; 0x30
   3374c:	uxtb	r4, r6
   33750:	cmp	r4, #10
   33754:	bcc	33770 <flatcc_json_parser_string_escape@@Base+0x1e8>
   33758:	orr	r6, r5, #32
   3375c:	sub	r5, r6, #97	; 0x61
   33760:	uxtb	r5, r5
   33764:	cmp	r5, #5
   33768:	bhi	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   3376c:	sub	r6, r6, #87	; 0x57
   33770:	orr	r0, r6, r7
   33774:	add	r2, r1, #4
   33778:	strb	r0, [r3, #1]
   3377c:	b	336c8 <flatcc_json_parser_string_escape@@Base+0x140>
   33780:	orr	lr, lr, #32
   33784:	mov	r8, #43264	; 0xa900
   33788:	sub	r4, lr, #97	; 0x61
   3378c:	uxtb	r4, r4
   33790:	cmp	r4, #6
   33794:	bcs	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   33798:	ldrb	r5, [r1, #4]
   3379c:	sub	r4, r5, #48	; 0x30
   337a0:	uxtb	r4, r4
   337a4:	cmp	r4, #10
   337a8:	bcs	337b4 <flatcc_json_parser_string_escape@@Base+0x22c>
   337ac:	mov	r9, #64768	; 0xfd00
   337b0:	b	337cc <flatcc_json_parser_string_escape@@Base+0x244>
   337b4:	orr	r5, r5, #32
   337b8:	movw	r9, #64144	; 0xfa90
   337bc:	sub	r4, r5, #97	; 0x61
   337c0:	uxtb	r4, r4
   337c4:	cmp	r4, #6
   337c8:	bcs	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   337cc:	ldrb	r7, [r1, #5]
   337d0:	sub	r4, r7, #48	; 0x30
   337d4:	uxtb	r4, r4
   337d8:	cmp	r4, #10
   337dc:	bcs	337ec <flatcc_json_parser_string_escape@@Base+0x264>
   337e0:	mvn	r0, #86	; 0x56
   337e4:	add	r4, r0, #39	; 0x27
   337e8:	b	33804 <flatcc_json_parser_string_escape@@Base+0x27c>
   337ec:	orr	r7, r7, #32
   337f0:	movw	r4, #65449	; 0xffa9
   337f4:	sub	r6, r7, #97	; 0x61
   337f8:	uxtb	r6, r6
   337fc:	cmp	r6, #6
   33800:	bcs	33688 <flatcc_json_parser_string_escape@@Base+0x100>
   33804:	add	r0, r8, lr, lsl #8
   33808:	add	r2, r9, r5, lsl #4
   3380c:	orr	r0, r0, ip
   33810:	orr	r0, r0, r2
   33814:	add	r2, r4, r7
   33818:	orr	r0, r0, r2
   3381c:	uxth	r7, r0
   33820:	cmp	r7, #127	; 0x7f
   33824:	bhi	33834 <flatcc_json_parser_string_escape@@Base+0x2ac>
   33828:	mov	r2, #1
   3382c:	strb	r2, [r3]
   33830:	b	33884 <flatcc_json_parser_string_escape@@Base+0x2fc>
   33834:	mov	r2, #0
   33838:	cmp	r2, r7, lsr #11
   3383c:	bne	33858 <flatcc_json_parser_string_escape@@Base+0x2d0>
   33840:	mov	r7, #192	; 0xc0
   33844:	mov	r2, #2
   33848:	orr	r7, r7, r0, lsr #6
   3384c:	strb	r2, [r3]
   33850:	strb	r7, [r3, #1]
   33854:	b	3387c <flatcc_json_parser_string_escape@@Base+0x2f4>
   33858:	mov	r6, #224	; 0xe0
   3385c:	mov	r2, #3
   33860:	orr	r6, r6, r7, lsr #12
   33864:	strb	r2, [r3]
   33868:	lsr	r7, r7, #6
   3386c:	strb	r6, [r3, #1]
   33870:	mov	r6, #2
   33874:	bfi	r7, r6, #6, #26
   33878:	strb	r7, [r3, #2]
   3387c:	mvn	r7, #-67108863	; 0xfc000001
   33880:	bfi	r0, r7, #6, #26
   33884:	strb	r0, [r3, r2]
   33888:	add	r2, r1, #6
   3388c:	b	336c8 <flatcc_json_parser_string_escape@@Base+0x140>

00033890 <flatcc_json_parser_skip_constant@@Base>:
   33890:	push	{r4, r5, r6, sl, fp, lr}
   33894:	add	fp, sp, #16
   33898:	cmp	r1, r2
   3389c:	beq	3394c <flatcc_json_parser_skip_constant@@Base+0xbc>
   338a0:	mov	r4, r2
   338a4:	mov	r5, r0
   338a8:	ldrsb	r0, [r1]
   338ac:	mov	r6, r1
   338b0:	cmp	r0, #0
   338b4:	bmi	338c8 <flatcc_json_parser_skip_constant@@Base+0x38>
   338b8:	uxtb	r0, r0
   338bc:	cmp	r0, #95	; 0x5f
   338c0:	cmpne	r0, #46	; 0x2e
   338c4:	bne	338d8 <flatcc_json_parser_skip_constant@@Base+0x48>
   338c8:	add	r1, r6, #1
   338cc:	cmp	r1, r4
   338d0:	bne	338a8 <flatcc_json_parser_skip_constant@@Base+0x18>
   338d4:	b	33944 <flatcc_json_parser_skip_constant@@Base+0xb4>
   338d8:	sub	r1, r0, #48	; 0x30
   338dc:	uxtb	r1, r1
   338e0:	cmp	r1, #9
   338e4:	bls	338c8 <flatcc_json_parser_skip_constant@@Base+0x38>
   338e8:	orr	r1, r0, #32
   338ec:	sub	r1, r1, #97	; 0x61
   338f0:	uxtb	r1, r1
   338f4:	cmp	r1, #25
   338f8:	bls	338c8 <flatcc_json_parser_skip_constant@@Base+0x38>
   338fc:	sub	r1, r4, r6
   33900:	cmp	r1, #2
   33904:	blt	33924 <flatcc_json_parser_skip_constant@@Base+0x94>
   33908:	cmp	r0, #32
   3390c:	bhi	33950 <flatcc_json_parser_skip_constant@@Base+0xc0>
   33910:	bne	33924 <flatcc_json_parser_skip_constant@@Base+0x94>
   33914:	mov	r1, r6
   33918:	ldrb	r0, [r1, #1]!
   3391c:	cmp	r0, #32
   33920:	bhi	338cc <flatcc_json_parser_skip_constant@@Base+0x3c>
   33924:	mov	r0, r5
   33928:	mov	r1, r6
   3392c:	mov	r2, r4
   33930:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   33934:	mov	r1, r0
   33938:	cmp	r0, r6
   3393c:	bne	338cc <flatcc_json_parser_skip_constant@@Base+0x3c>
   33940:	b	33950 <flatcc_json_parser_skip_constant@@Base+0xc0>
   33944:	mov	r6, r4
   33948:	b	33950 <flatcc_json_parser_skip_constant@@Base+0xc0>
   3394c:	mov	r6, r1
   33950:	mov	r0, r6
   33954:	pop	{r4, r5, r6, sl, fp, pc}

00033958 <flatcc_json_parser_match_constant@@Base>:
   33958:	push	{r4, r5, r6, r7, fp, lr}
   3395c:	add	fp, sp, #16
   33960:	ldr	r7, [fp, #8]
   33964:	mov	r4, r1
   33968:	sub	r1, r2, r1
   3396c:	cmp	r1, r3
   33970:	ble	33a70 <flatcc_json_parser_match_constant@@Base+0x118>
   33974:	ldr	r1, [r0, #12]
   33978:	mov	r5, r2
   3397c:	add	r6, r4, r3
   33980:	cmp	r1, #0
   33984:	beq	33a08 <flatcc_json_parser_match_constant@@Base+0xb0>
   33988:	sub	r1, r5, r6
   3398c:	cmp	r1, #2
   33990:	blt	339b8 <flatcc_json_parser_match_constant@@Base+0x60>
   33994:	ldrb	r1, [r6]
   33998:	mov	r2, r6
   3399c:	cmp	r1, #32
   339a0:	bhi	339c8 <flatcc_json_parser_match_constant@@Base+0x70>
   339a4:	bne	339b8 <flatcc_json_parser_match_constant@@Base+0x60>
   339a8:	mov	r2, r6
   339ac:	ldrb	r1, [r2, #1]!
   339b0:	cmp	r1, #32
   339b4:	bhi	339c8 <flatcc_json_parser_match_constant@@Base+0x70>
   339b8:	mov	r1, r6
   339bc:	mov	r2, r5
   339c0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   339c4:	mov	r2, r0
   339c8:	cmp	r2, r5
   339cc:	beq	33a80 <flatcc_json_parser_match_constant@@Base+0x128>
   339d0:	cmp	r2, r6
   339d4:	beq	33a90 <flatcc_json_parser_match_constant@@Base+0x138>
   339d8:	ldrsb	r0, [r2]
   339dc:	cmp	r0, #95	; 0x5f
   339e0:	beq	33a00 <flatcc_json_parser_match_constant@@Base+0xa8>
   339e4:	cmn	r0, #1
   339e8:	ble	33a00 <flatcc_json_parser_match_constant@@Base+0xa8>
   339ec:	orr	r0, r0, #32
   339f0:	sub	r0, r0, #97	; 0x61
   339f4:	uxtb	r0, r0
   339f8:	cmp	r0, #25
   339fc:	bhi	33a90 <flatcc_json_parser_match_constant@@Base+0x138>
   33a00:	mov	r0, #1
   33a04:	b	33a78 <flatcc_json_parser_match_constant@@Base+0x120>
   33a08:	ldrb	r1, [r6]
   33a0c:	cmp	r1, #92	; 0x5c
   33a10:	beq	33ab8 <flatcc_json_parser_match_constant@@Base+0x160>
   33a14:	cmp	r1, #34	; 0x22
   33a18:	beq	33a4c <flatcc_json_parser_match_constant@@Base+0xf4>
   33a1c:	cmp	r1, #32
   33a20:	bne	33a70 <flatcc_json_parser_match_constant@@Base+0x118>
   33a24:	add	r1, r4, r3
   33a28:	add	r1, r1, #1
   33a2c:	cmp	r5, r1
   33a30:	beq	33a80 <flatcc_json_parser_match_constant@@Base+0x128>
   33a34:	ldrb	r2, [r1], #1
   33a38:	cmp	r2, #32
   33a3c:	beq	33a2c <flatcc_json_parser_match_constant@@Base+0xd4>
   33a40:	cmp	r2, #34	; 0x22
   33a44:	bne	33b14 <flatcc_json_parser_match_constant@@Base+0x1bc>
   33a48:	sub	r6, r1, #1
   33a4c:	mvn	r2, r6
   33a50:	add	r1, r6, #1
   33a54:	cmp	r2, #2
   33a58:	blt	33b00 <flatcc_json_parser_match_constant@@Base+0x1a8>
   33a5c:	ldrb	r2, [r1]
   33a60:	cmp	r2, #32
   33a64:	bls	33aec <flatcc_json_parser_match_constant@@Base+0x194>
   33a68:	mov	r2, r1
   33a6c:	b	33b0c <flatcc_json_parser_match_constant@@Base+0x1b4>
   33a70:	mov	r0, #0
   33a74:	mov	r2, r4
   33a78:	str	r0, [r7]
   33a7c:	b	33ab0 <flatcc_json_parser_match_constant@@Base+0x158>
   33a80:	mov	r0, #0
   33a84:	str	r0, [r7]
   33a88:	mov	r2, r5
   33a8c:	b	33ab0 <flatcc_json_parser_match_constant@@Base+0x158>
   33a90:	mov	r0, #0
   33a94:	str	r0, [r7]
   33a98:	ldrb	r0, [r2]
   33a9c:	cmp	r0, #44	; 0x2c
   33aa0:	cmpne	r0, #93	; 0x5d
   33aa4:	beq	33ab0 <flatcc_json_parser_match_constant@@Base+0x158>
   33aa8:	cmp	r0, #125	; 0x7d
   33aac:	movne	r2, r4
   33ab0:	mov	r0, r2
   33ab4:	pop	{r4, r5, r6, r7, fp, pc}
   33ab8:	mov	r1, #0
   33abc:	str	r1, [r7]
   33ac0:	ldr	r1, [r0, #24]
   33ac4:	cmp	r1, #0
   33ac8:	bne	33a88 <flatcc_json_parser_match_constant@@Base+0x130>
   33acc:	str	r6, [r0, #36]	; 0x24
   33ad0:	mov	r1, #18
   33ad4:	ldr	r2, [r0, #4]
   33ad8:	sub	r2, r6, r2
   33adc:	add	r2, r2, #1
   33ae0:	str	r2, [r0, #20]
   33ae4:	str	r1, [r0, #24]
   33ae8:	b	33a88 <flatcc_json_parser_match_constant@@Base+0x130>
   33aec:	bne	33b00 <flatcc_json_parser_match_constant@@Base+0x1a8>
   33af0:	ldrb	r2, [r6, #2]!
   33af4:	cmp	r2, #32
   33af8:	mov	r2, r6
   33afc:	bhi	33b0c <flatcc_json_parser_match_constant@@Base+0x1b4>
   33b00:	mov	r2, #0
   33b04:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   33b08:	mov	r2, r0
   33b0c:	mov	r0, #0
   33b10:	b	33a78 <flatcc_json_parser_match_constant@@Base+0x120>
   33b14:	mov	r0, #1
   33b18:	sub	r2, r1, #1
   33b1c:	b	33a78 <flatcc_json_parser_match_constant@@Base+0x120>

00033b20 <flatcc_json_parser_unmatched_symbol@@Base>:
   33b20:	push	{r4, r5, fp, lr}
   33b24:	add	fp, sp, #8
   33b28:	mov	r5, r0
   33b2c:	ldrb	r0, [r0, #8]
   33b30:	mov	r4, r2
   33b34:	tst	r0, #1
   33b38:	bne	33b5c <flatcc_json_parser_unmatched_symbol@@Base+0x3c>
   33b3c:	ldr	r0, [r5, #24]
   33b40:	cmp	r0, #0
   33b44:	bne	33d2c <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   33b48:	str	r1, [r5, #36]	; 0x24
   33b4c:	mov	r0, #13
   33b50:	ldr	r2, [r5, #4]
   33b54:	sub	r1, r1, r2
   33b58:	b	33d20 <flatcc_json_parser_unmatched_symbol@@Base+0x200>
   33b5c:	ldr	r0, [r5, #12]
   33b60:	cmp	r0, #0
   33b64:	beq	33be0 <flatcc_json_parser_unmatched_symbol@@Base+0xc0>
   33b68:	cmp	r1, r4
   33b6c:	beq	33c80 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
   33b70:	ldrb	r2, [r1]
   33b74:	cmp	r2, #33	; 0x21
   33b78:	bcc	33c80 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
   33b7c:	add	r1, r1, #1
   33b80:	uxtb	r0, r2
   33b84:	cmp	r0, #46	; 0x2e
   33b88:	cmpne	r0, #95	; 0x5f
   33b8c:	bne	33ba8 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   33b90:	cmp	r4, r1
   33b94:	beq	33c40 <flatcc_json_parser_unmatched_symbol@@Base+0x120>
   33b98:	ldrb	r2, [r1], #1
   33b9c:	cmp	r2, #33	; 0x21
   33ba0:	bcs	33b80 <flatcc_json_parser_unmatched_symbol@@Base+0x60>
   33ba4:	b	33bd8 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   33ba8:	sxtb	r3, r2
   33bac:	cmp	r3, #0
   33bb0:	bmi	33b90 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   33bb4:	sub	r3, r2, #48	; 0x30
   33bb8:	uxtb	r3, r3
   33bbc:	cmp	r3, #9
   33bc0:	bls	33b90 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   33bc4:	orr	r2, r2, #32
   33bc8:	sub	r2, r2, #97	; 0x61
   33bcc:	uxtb	r2, r2
   33bd0:	cmp	r2, #26
   33bd4:	bcc	33b90 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   33bd8:	sub	r1, r1, #1
   33bdc:	b	33c44 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   33be0:	cmp	r1, r4
   33be4:	beq	33c20 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   33be8:	ldrb	r0, [r1]
   33bec:	cmp	r0, #92	; 0x5c
   33bf0:	beq	33c00 <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   33bf4:	cmp	r0, #34	; 0x22
   33bf8:	bne	33c10 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   33bfc:	b	33c38 <flatcc_json_parser_unmatched_symbol@@Base+0x118>
   33c00:	sub	r0, r4, r1
   33c04:	cmp	r0, #2
   33c08:	blt	33c20 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   33c0c:	add	r1, r1, #1
   33c10:	add	r1, r1, #1
   33c14:	cmp	r1, r4
   33c18:	bne	33be8 <flatcc_json_parser_unmatched_symbol@@Base+0xc8>
   33c1c:	mov	r1, r4
   33c20:	ldr	r0, [r5, #24]
   33c24:	mov	r2, r4
   33c28:	cmp	r0, #0
   33c2c:	bne	33c84 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   33c30:	mov	r0, #20
   33c34:	b	33c60 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   33c38:	add	r2, r1, #1
   33c3c:	b	33c84 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   33c40:	mov	r1, r4
   33c44:	cmp	r0, #46	; 0x2e
   33c48:	bne	33c80 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
   33c4c:	ldr	r0, [r5, #24]
   33c50:	mov	r2, r4
   33c54:	cmp	r0, #0
   33c58:	bne	33c84 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   33c5c:	mov	r0, #5
   33c60:	str	r1, [r5, #36]	; 0x24
   33c64:	ldr	r2, [r5, #4]
   33c68:	sub	r1, r1, r2
   33c6c:	mov	r2, r4
   33c70:	add	r1, r1, #1
   33c74:	str	r1, [r5, #20]
   33c78:	str	r0, [r5, #24]
   33c7c:	b	33c84 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   33c80:	mov	r2, r1
   33c84:	sub	r0, r4, r2
   33c88:	cmp	r0, #2
   33c8c:	blt	33cb8 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   33c90:	ldrb	r0, [r2]
   33c94:	cmp	r0, #32
   33c98:	bls	33ca4 <flatcc_json_parser_unmatched_symbol@@Base+0x184>
   33c9c:	mov	r3, r2
   33ca0:	b	33ccc <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   33ca4:	bne	33cb8 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   33ca8:	mov	r3, r2
   33cac:	ldrb	r0, [r3, #1]!
   33cb0:	cmp	r0, #32
   33cb4:	bhi	33ccc <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   33cb8:	mov	r1, r2
   33cbc:	mov	r0, r5
   33cc0:	mov	r2, r4
   33cc4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   33cc8:	mov	r3, r0
   33ccc:	cmp	r3, r4
   33cd0:	beq	33d04 <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
   33cd4:	ldrb	r0, [r3]
   33cd8:	cmp	r0, #58	; 0x3a
   33cdc:	bne	33d04 <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
   33ce0:	add	r1, r3, #1
   33ce4:	sub	r0, r4, r1
   33ce8:	cmp	r0, #2
   33cec:	blt	33d44 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   33cf0:	ldrb	r0, [r1]
   33cf4:	cmp	r0, #32
   33cf8:	bls	33d34 <flatcc_json_parser_unmatched_symbol@@Base+0x214>
   33cfc:	mov	r3, r1
   33d00:	b	33d54 <flatcc_json_parser_unmatched_symbol@@Base+0x234>
   33d04:	ldr	r0, [r5, #24]
   33d08:	cmp	r0, #0
   33d0c:	bne	33d2c <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   33d10:	str	r3, [r5, #36]	; 0x24
   33d14:	mov	r0, #4
   33d18:	ldr	r1, [r5, #4]
   33d1c:	sub	r1, r3, r1
   33d20:	add	r1, r1, #1
   33d24:	str	r1, [r5, #20]
   33d28:	str	r0, [r5, #24]
   33d2c:	mov	r0, r4
   33d30:	pop	{r4, r5, fp, pc}
   33d34:	bne	33d44 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   33d38:	ldrb	r0, [r3, #2]!
   33d3c:	cmp	r0, #32
   33d40:	bhi	33d54 <flatcc_json_parser_unmatched_symbol@@Base+0x234>
   33d44:	mov	r0, r5
   33d48:	mov	r2, r4
   33d4c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   33d50:	mov	r3, r0
   33d54:	mov	r0, r5
   33d58:	mov	r1, r3
   33d5c:	mov	r2, r4
   33d60:	pop	{r4, r5, fp, lr}
   33d64:	b	33d68 <flatcc_json_parser_generic_json@@Base>

00033d68 <flatcc_json_parser_generic_json@@Base>:
   33d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33d6c:	add	fp, sp, #28
   33d70:	sub	sp, sp, #532	; 0x214
   33d74:	mov	r7, r1
   33d78:	cmp	r1, r2
   33d7c:	beq	34768 <flatcc_json_parser_generic_json@@Base+0xa00>
   33d80:	mov	r5, r0
   33d84:	add	r0, r2, #1
   33d88:	add	r1, sp, #16
   33d8c:	mov	r4, r2
   33d90:	mov	sl, #0
   33d94:	str	r0, [sp]
   33d98:	add	r0, r5, #36	; 0x24
   33d9c:	sub	r9, r1, #1
   33da0:	add	r6, r5, #4
   33da4:	add	r8, r5, #24
   33da8:	str	r0, [sp, #8]
   33dac:	add	r0, r5, #20
   33db0:	str	r0, [sp, #4]
   33db4:	mov	r0, r1
   33db8:	cmp	sl, #0
   33dbc:	beq	34014 <flatcc_json_parser_generic_json@@Base+0x2ac>
   33dc0:	ldrb	r0, [r0, #-1]
   33dc4:	cmp	r0, #125	; 0x7d
   33dc8:	bne	34014 <flatcc_json_parser_generic_json@@Base+0x2ac>
   33dcc:	ldrb	r0, [r7]
   33dd0:	cmp	r0, #46	; 0x2e
   33dd4:	beq	33e34 <flatcc_json_parser_generic_json@@Base+0xcc>
   33dd8:	cmp	r0, #34	; 0x22
   33ddc:	bne	33e7c <flatcc_json_parser_generic_json@@Base+0x114>
   33de0:	mov	r0, #0
   33de4:	mov	r2, r4
   33de8:	str	r0, [r5, #12]
   33dec:	add	r0, r7, #1
   33df0:	cmp	r0, r4
   33df4:	beq	33f40 <flatcc_json_parser_generic_json@@Base+0x1d8>
   33df8:	ldrb	r1, [r0]
   33dfc:	cmp	r1, #92	; 0x5c
   33e00:	beq	33e10 <flatcc_json_parser_generic_json@@Base+0xa8>
   33e04:	cmp	r1, #34	; 0x22
   33e08:	bne	33e20 <flatcc_json_parser_generic_json@@Base+0xb8>
   33e0c:	b	33f08 <flatcc_json_parser_generic_json@@Base+0x1a0>
   33e10:	sub	r1, r4, r0
   33e14:	cmp	r1, #2
   33e18:	blt	33f3c <flatcc_json_parser_generic_json@@Base+0x1d4>
   33e1c:	add	r0, r0, #1
   33e20:	add	r0, r0, #1
   33e24:	cmp	r0, r4
   33e28:	bne	33df8 <flatcc_json_parser_generic_json@@Base+0x90>
   33e2c:	mov	r2, r4
   33e30:	b	33f40 <flatcc_json_parser_generic_json@@Base+0x1d8>
   33e34:	ldr	r0, [r8]
   33e38:	cmp	r0, #0
   33e3c:	bne	33e64 <flatcc_json_parser_generic_json@@Base+0xfc>
   33e40:	mov	r0, #5
   33e44:	ldr	r1, [sp, #4]
   33e48:	str	r0, [r8]
   33e4c:	ldr	r0, [r6]
   33e50:	sub	r0, r7, r0
   33e54:	add	r0, r0, #1
   33e58:	str	r0, [r1]
   33e5c:	ldr	r0, [sp, #8]
   33e60:	str	r7, [r0]
   33e64:	ldr	r0, [r5, #12]
   33e68:	mov	r2, r4
   33e6c:	mov	r1, r4
   33e70:	cmp	r0, #0
   33e74:	bne	33f78 <flatcc_json_parser_generic_json@@Base+0x210>
   33e78:	b	33f40 <flatcc_json_parser_generic_json@@Base+0x1d8>
   33e7c:	mov	r0, #1
   33e80:	cmp	r7, r4
   33e84:	mov	r1, r4
   33e88:	str	r0, [r5, #12]
   33e8c:	beq	33f78 <flatcc_json_parser_generic_json@@Base+0x210>
   33e90:	ldrb	r2, [r7]
   33e94:	cmp	r2, #33	; 0x21
   33e98:	bcc	33f00 <flatcc_json_parser_generic_json@@Base+0x198>
   33e9c:	add	r1, r7, #1
   33ea0:	uxtb	r0, r2
   33ea4:	cmp	r0, #46	; 0x2e
   33ea8:	cmpne	r0, #95	; 0x5f
   33eac:	bne	33ec8 <flatcc_json_parser_generic_json@@Base+0x160>
   33eb0:	cmp	r4, r1
   33eb4:	beq	33f10 <flatcc_json_parser_generic_json@@Base+0x1a8>
   33eb8:	ldrb	r2, [r1], #1
   33ebc:	cmp	r2, #33	; 0x21
   33ec0:	bcs	33ea0 <flatcc_json_parser_generic_json@@Base+0x138>
   33ec4:	b	33ef8 <flatcc_json_parser_generic_json@@Base+0x190>
   33ec8:	sxtb	r3, r2
   33ecc:	cmp	r3, #0
   33ed0:	bmi	33eb0 <flatcc_json_parser_generic_json@@Base+0x148>
   33ed4:	sub	r3, r2, #48	; 0x30
   33ed8:	uxtb	r3, r3
   33edc:	cmp	r3, #9
   33ee0:	bls	33eb0 <flatcc_json_parser_generic_json@@Base+0x148>
   33ee4:	orr	r2, r2, #32
   33ee8:	sub	r2, r2, #97	; 0x61
   33eec:	uxtb	r2, r2
   33ef0:	cmp	r2, #26
   33ef4:	bcc	33eb0 <flatcc_json_parser_generic_json@@Base+0x148>
   33ef8:	sub	r2, r1, #1
   33efc:	b	33f14 <flatcc_json_parser_generic_json@@Base+0x1ac>
   33f00:	mov	r1, r7
   33f04:	b	33f78 <flatcc_json_parser_generic_json@@Base+0x210>
   33f08:	add	r1, r0, #1
   33f0c:	b	33f78 <flatcc_json_parser_generic_json@@Base+0x210>
   33f10:	mov	r2, r4
   33f14:	cmp	r0, #46	; 0x2e
   33f18:	bne	33f34 <flatcc_json_parser_generic_json@@Base+0x1cc>
   33f1c:	ldr	r0, [r8]
   33f20:	mov	r1, r4
   33f24:	cmp	r0, #0
   33f28:	bne	33f78 <flatcc_json_parser_generic_json@@Base+0x210>
   33f2c:	mov	r0, #5
   33f30:	b	33f54 <flatcc_json_parser_generic_json@@Base+0x1ec>
   33f34:	mov	r1, r2
   33f38:	b	33f78 <flatcc_json_parser_generic_json@@Base+0x210>
   33f3c:	mov	r2, r0
   33f40:	ldr	r0, [r8]
   33f44:	mov	r1, r4
   33f48:	cmp	r0, #0
   33f4c:	bne	33f78 <flatcc_json_parser_generic_json@@Base+0x210>
   33f50:	mov	r0, #20
   33f54:	str	r0, [r8]
   33f58:	ldr	r1, [sp, #4]
   33f5c:	ldr	r0, [r6]
   33f60:	sub	r0, r2, r0
   33f64:	add	r0, r0, #1
   33f68:	str	r0, [r1]
   33f6c:	ldr	r0, [sp, #8]
   33f70:	mov	r1, r4
   33f74:	str	r2, [r0]
   33f78:	sub	r0, r4, r1
   33f7c:	cmp	r0, #2
   33f80:	blt	33fac <flatcc_json_parser_generic_json@@Base+0x244>
   33f84:	ldrb	r0, [r1]
   33f88:	cmp	r0, #32
   33f8c:	bls	33f98 <flatcc_json_parser_generic_json@@Base+0x230>
   33f90:	mov	r7, r1
   33f94:	b	33fbc <flatcc_json_parser_generic_json@@Base+0x254>
   33f98:	bne	33fac <flatcc_json_parser_generic_json@@Base+0x244>
   33f9c:	mov	r7, r1
   33fa0:	ldrb	r0, [r7, #1]!
   33fa4:	cmp	r0, #32
   33fa8:	bhi	33fbc <flatcc_json_parser_generic_json@@Base+0x254>
   33fac:	mov	r0, r5
   33fb0:	mov	r2, r4
   33fb4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   33fb8:	mov	r7, r0
   33fbc:	cmp	r7, r4
   33fc0:	beq	347d8 <flatcc_json_parser_generic_json@@Base+0xa70>
   33fc4:	ldrb	r0, [r7]
   33fc8:	cmp	r0, #58	; 0x3a
   33fcc:	bne	347f0 <flatcc_json_parser_generic_json@@Base+0xa88>
   33fd0:	add	r1, r7, #1
   33fd4:	sub	r0, r4, r1
   33fd8:	cmp	r0, #2
   33fdc:	blt	34004 <flatcc_json_parser_generic_json@@Base+0x29c>
   33fe0:	ldrb	r0, [r1]
   33fe4:	cmp	r0, #32
   33fe8:	bls	33ff4 <flatcc_json_parser_generic_json@@Base+0x28c>
   33fec:	mov	r7, r1
   33ff0:	b	34018 <flatcc_json_parser_generic_json@@Base+0x2b0>
   33ff4:	bne	34004 <flatcc_json_parser_generic_json@@Base+0x29c>
   33ff8:	ldrb	r0, [r7, #2]!
   33ffc:	cmp	r0, #32
   34000:	bhi	34018 <flatcc_json_parser_generic_json@@Base+0x2b0>
   34004:	mov	r0, r5
   34008:	mov	r2, r4
   3400c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   34010:	mov	r7, r0
   34014:	ldrb	r0, [r7]
   34018:	sub	r1, r0, #48	; 0x30
   3401c:	cmp	r1, #10
   34020:	bcs	34094 <flatcc_json_parser_generic_json@@Base+0x32c>
   34024:	cmp	r7, r4
   34028:	beq	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   3402c:	cmp	r0, #45	; 0x2d
   34030:	bne	34044 <flatcc_json_parser_generic_json@@Base+0x2dc>
   34034:	add	r7, r7, #1
   34038:	cmp	r7, r4
   3403c:	beq	34310 <flatcc_json_parser_generic_json@@Base+0x5a8>
   34040:	ldrb	r0, [r7]
   34044:	cmp	r0, #48	; 0x30
   34048:	bne	340b0 <flatcc_json_parser_generic_json@@Base+0x348>
   3404c:	add	r1, r7, #1
   34050:	cmp	r1, r4
   34054:	mov	r2, r4
   34058:	beq	34328 <flatcc_json_parser_generic_json@@Base+0x5c0>
   3405c:	ldrb	r0, [r1]
   34060:	cmp	r0, #46	; 0x2e
   34064:	bne	34260 <flatcc_json_parser_generic_json@@Base+0x4f8>
   34068:	mov	r0, r1
   3406c:	ldrb	r2, [r0, #1]!
   34070:	sub	r2, r2, #48	; 0x30
   34074:	uxtb	r2, r2
   34078:	cmp	r2, #10
   3407c:	bcc	3422c <flatcc_json_parser_generic_json@@Base+0x4c4>
   34080:	ldr	r1, [r8]
   34084:	cmp	r1, #0
   34088:	bne	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   3408c:	mov	r1, #6
   34090:	b	34438 <flatcc_json_parser_generic_json@@Base+0x6d0>
   34094:	cmp	r0, #90	; 0x5a
   34098:	bgt	340f4 <flatcc_json_parser_generic_json@@Base+0x38c>
   3409c:	cmp	r0, #34	; 0x22
   340a0:	beq	34164 <flatcc_json_parser_generic_json@@Base+0x3fc>
   340a4:	cmp	r0, #45	; 0x2d
   340a8:	beq	34024 <flatcc_json_parser_generic_json@@Base+0x2bc>
   340ac:	b	3420c <flatcc_json_parser_generic_json@@Base+0x4a4>
   340b0:	sub	r0, r0, #49	; 0x31
   340b4:	uxtb	r0, r0
   340b8:	cmp	r0, #8
   340bc:	bls	3413c <flatcc_json_parser_generic_json@@Base+0x3d4>
   340c0:	ldr	r0, [r8]
   340c4:	cmp	r0, #0
   340c8:	bne	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   340cc:	mov	r0, #6
   340d0:	ldr	r1, [sp, #4]
   340d4:	str	r0, [r8]
   340d8:	ldr	r0, [r6]
   340dc:	sub	r0, r7, r0
   340e0:	add	r0, r0, #1
   340e4:	str	r0, [r1]
   340e8:	ldr	r0, [sp, #8]
   340ec:	str	r7, [r0]
   340f0:	b	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   340f4:	cmp	r0, #91	; 0x5b
   340f8:	beq	341d4 <flatcc_json_parser_generic_json@@Base+0x46c>
   340fc:	cmp	r0, #123	; 0x7b
   34100:	bne	3420c <flatcc_json_parser_generic_json@@Base+0x4a4>
   34104:	cmp	sl, #512	; 0x200
   34108:	beq	34804 <flatcc_json_parser_generic_json@@Base+0xa9c>
   3410c:	add	r0, sp, #16
   34110:	mov	r1, #125	; 0x7d
   34114:	strb	r1, [r0, sl]
   34118:	add	r1, r7, #1
   3411c:	sub	r0, r4, r1
   34120:	cmp	r0, #2
   34124:	blt	343bc <flatcc_json_parser_generic_json@@Base+0x654>
   34128:	ldrb	r0, [r1]
   3412c:	cmp	r0, #32
   34130:	bls	343ac <flatcc_json_parser_generic_json@@Base+0x644>
   34134:	mov	r7, r1
   34138:	b	343cc <flatcc_json_parser_generic_json@@Base+0x664>
   3413c:	add	r0, r7, #1
   34140:	cmp	r4, r0
   34144:	beq	34324 <flatcc_json_parser_generic_json@@Base+0x5bc>
   34148:	ldrb	r1, [r0], #1
   3414c:	sub	r1, r1, #48	; 0x30
   34150:	uxtb	r1, r1
   34154:	cmp	r1, #10
   34158:	bcc	34140 <flatcc_json_parser_generic_json@@Base+0x3d8>
   3415c:	sub	r1, r0, #1
   34160:	b	34050 <flatcc_json_parser_generic_json@@Base+0x2e8>
   34164:	cmp	r7, r4
   34168:	beq	3435c <flatcc_json_parser_generic_json@@Base+0x5f4>
   3416c:	add	r1, r7, #1
   34170:	mov	r0, r4
   34174:	add	r7, sp, #12
   34178:	cmp	r1, r4
   3417c:	beq	34428 <flatcc_json_parser_generic_json@@Base+0x6c0>
   34180:	ldrb	r0, [r1]
   34184:	cmp	r0, #34	; 0x22
   34188:	beq	34390 <flatcc_json_parser_generic_json@@Base+0x628>
   3418c:	mov	r0, r5
   34190:	mov	r2, r4
   34194:	bl	3342c <flatcc_json_parser_string_part@@Base>
   34198:	mov	r1, r0
   3419c:	cmp	r0, r4
   341a0:	beq	341b0 <flatcc_json_parser_generic_json@@Base+0x448>
   341a4:	ldrb	r0, [r1]
   341a8:	cmp	r0, #34	; 0x22
   341ac:	beq	34390 <flatcc_json_parser_generic_json@@Base+0x628>
   341b0:	mov	r0, r5
   341b4:	mov	r2, r4
   341b8:	mov	r3, r7
   341bc:	bl	33588 <flatcc_json_parser_string_escape@@Base>
   341c0:	mov	r1, r0
   341c4:	cmp	r0, r4
   341c8:	bne	34180 <flatcc_json_parser_generic_json@@Base+0x418>
   341cc:	mov	r0, r4
   341d0:	b	34428 <flatcc_json_parser_generic_json@@Base+0x6c0>
   341d4:	cmp	sl, #512	; 0x200
   341d8:	beq	34804 <flatcc_json_parser_generic_json@@Base+0xa9c>
   341dc:	add	r0, sp, #16
   341e0:	mov	r1, #93	; 0x5d
   341e4:	strb	r1, [r0, sl]
   341e8:	add	r1, r7, #1
   341ec:	sub	r0, r4, r1
   341f0:	cmp	r0, #2
   341f4:	blt	343f4 <flatcc_json_parser_generic_json@@Base+0x68c>
   341f8:	ldrb	r0, [r1]
   341fc:	cmp	r0, #32
   34200:	bls	343e4 <flatcc_json_parser_generic_json@@Base+0x67c>
   34204:	mov	r7, r1
   34208:	b	34404 <flatcc_json_parser_generic_json@@Base+0x69c>
   3420c:	mov	r0, r5
   34210:	mov	r1, r7
   34214:	mov	r2, r4
   34218:	bl	33890 <flatcc_json_parser_skip_constant@@Base>
   3421c:	mov	r1, r0
   34220:	cmp	r7, r0
   34224:	bne	3445c <flatcc_json_parser_generic_json@@Base+0x6f4>
   34228:	b	34818 <flatcc_json_parser_generic_json@@Base+0xab0>
   3422c:	add	r1, r1, #2
   34230:	mov	r2, r4
   34234:	cmp	r1, r4
   34238:	beq	34328 <flatcc_json_parser_generic_json@@Base+0x5c0>
   3423c:	ldrb	r0, [r1]
   34240:	sub	r2, r0, #48	; 0x30
   34244:	uxtb	r2, r2
   34248:	cmp	r2, #9
   3424c:	bhi	34260 <flatcc_json_parser_generic_json@@Base+0x4f8>
   34250:	add	r1, r1, #1
   34254:	cmp	r4, r1
   34258:	bne	3423c <flatcc_json_parser_generic_json@@Base+0x4d4>
   3425c:	b	34324 <flatcc_json_parser_generic_json@@Base+0x5bc>
   34260:	cmp	r1, r4
   34264:	mov	r2, r4
   34268:	beq	34328 <flatcc_json_parser_generic_json@@Base+0x5c0>
   3426c:	orr	r2, r0, #32
   34270:	cmp	r2, #101	; 0x65
   34274:	bne	342d4 <flatcc_json_parser_generic_json@@Base+0x56c>
   34278:	add	r0, r1, #1
   3427c:	cmp	r0, r4
   34280:	beq	34310 <flatcc_json_parser_generic_json@@Base+0x5a8>
   34284:	ldrb	r2, [r0]
   34288:	cmp	r2, #45	; 0x2d
   3428c:	cmpne	r2, #43	; 0x2b
   34290:	addeq	r0, r1, #2
   34294:	cmp	r0, r4
   34298:	beq	34080 <flatcc_json_parser_generic_json@@Base+0x318>
   3429c:	ldrb	r1, [r0]
   342a0:	sub	r1, r1, #48	; 0x30
   342a4:	uxtb	r1, r1
   342a8:	cmp	r1, #9
   342ac:	bhi	34080 <flatcc_json_parser_generic_json@@Base+0x318>
   342b0:	add	r1, r0, #1
   342b4:	cmp	r4, r1
   342b8:	beq	34324 <flatcc_json_parser_generic_json@@Base+0x5bc>
   342bc:	ldrb	r0, [r1], #1
   342c0:	sub	r2, r0, #48	; 0x30
   342c4:	uxtb	r2, r2
   342c8:	cmp	r2, #10
   342cc:	bcc	342b4 <flatcc_json_parser_generic_json@@Base+0x54c>
   342d0:	sub	r1, r1, #1
   342d4:	cmp	r1, r4
   342d8:	mov	r2, r4
   342dc:	beq	34328 <flatcc_json_parser_generic_json@@Base+0x5c0>
   342e0:	cmp	r0, #43	; 0x2b
   342e4:	bgt	34730 <flatcc_json_parser_generic_json@@Base+0x9c8>
   342e8:	sub	r0, r0, #9
   342ec:	cmp	r0, #23
   342f0:	bhi	34760 <flatcc_json_parser_generic_json@@Base+0x9f8>
   342f4:	movw	r3, #23
   342f8:	mov	r2, #1
   342fc:	movt	r3, #128	; 0x80
   34300:	tst	r3, r2, lsl r0
   34304:	mov	r2, r1
   34308:	bne	3445c <flatcc_json_parser_generic_json@@Base+0x6f4>
   3430c:	b	34328 <flatcc_json_parser_generic_json@@Base+0x5c0>
   34310:	ldr	r0, [r8]
   34314:	cmp	r0, #0
   34318:	bne	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   3431c:	mov	r0, #6
   34320:	b	3436c <flatcc_json_parser_generic_json@@Base+0x604>
   34324:	mov	r2, r4
   34328:	ldr	r0, [r8]
   3432c:	cmp	r0, #0
   34330:	bne	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   34334:	mov	r0, #6
   34338:	ldr	r1, [sp, #4]
   3433c:	str	r0, [r8]
   34340:	ldr	r0, [r6]
   34344:	sub	r0, r2, r0
   34348:	add	r0, r0, #1
   3434c:	str	r0, [r1]
   34350:	ldr	r0, [sp, #8]
   34354:	str	r2, [r0]
   34358:	b	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   3435c:	ldr	r0, [r8]
   34360:	cmp	r0, #0
   34364:	bne	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   34368:	mov	r0, #16
   3436c:	str	r0, [r8]
   34370:	ldr	r1, [sp]
   34374:	ldr	r0, [r6]
   34378:	sub	r0, r1, r0
   3437c:	ldr	r1, [sp, #4]
   34380:	str	r0, [r1]
   34384:	ldr	r0, [sp, #8]
   34388:	str	r4, [r0]
   3438c:	b	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   34390:	cmp	r1, r4
   34394:	beq	34424 <flatcc_json_parser_generic_json@@Base+0x6bc>
   34398:	ldrb	r0, [r1]
   3439c:	cmp	r0, #34	; 0x22
   343a0:	bne	34424 <flatcc_json_parser_generic_json@@Base+0x6bc>
   343a4:	add	r1, r1, #1
   343a8:	b	3445c <flatcc_json_parser_generic_json@@Base+0x6f4>
   343ac:	bne	343bc <flatcc_json_parser_generic_json@@Base+0x654>
   343b0:	ldrb	r0, [r7, #2]!
   343b4:	cmp	r0, #32
   343b8:	bhi	343cc <flatcc_json_parser_generic_json@@Base+0x664>
   343bc:	mov	r0, r5
   343c0:	mov	r2, r4
   343c4:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   343c8:	mov	r7, r0
   343cc:	cmp	r7, r4
   343d0:	beq	347c8 <flatcc_json_parser_generic_json@@Base+0xa60>
   343d4:	ldrb	r0, [r7]
   343d8:	add	sl, sl, #1
   343dc:	cmp	r0, #125	; 0x7d
   343e0:	b	34418 <flatcc_json_parser_generic_json@@Base+0x6b0>
   343e4:	bne	343f4 <flatcc_json_parser_generic_json@@Base+0x68c>
   343e8:	ldrb	r0, [r7, #2]!
   343ec:	cmp	r0, #32
   343f0:	bhi	34404 <flatcc_json_parser_generic_json@@Base+0x69c>
   343f4:	mov	r0, r5
   343f8:	mov	r2, r4
   343fc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   34400:	mov	r7, r0
   34404:	cmp	r7, r4
   34408:	beq	347c8 <flatcc_json_parser_generic_json@@Base+0xa60>
   3440c:	ldrb	r0, [r7]
   34410:	add	sl, sl, #1
   34414:	cmp	r0, #93	; 0x5d
   34418:	mov	r1, r7
   3441c:	beq	3445c <flatcc_json_parser_generic_json@@Base+0x6f4>
   34420:	b	3471c <flatcc_json_parser_generic_json@@Base+0x9b4>
   34424:	mov	r0, r1
   34428:	ldr	r1, [r8]
   3442c:	cmp	r1, #0
   34430:	bne	34458 <flatcc_json_parser_generic_json@@Base+0x6f0>
   34434:	mov	r1, #20
   34438:	str	r1, [r8]
   3443c:	ldr	r2, [sp, #4]
   34440:	ldr	r1, [r6]
   34444:	sub	r1, r0, r1
   34448:	add	r1, r1, #1
   3444c:	str	r1, [r2]
   34450:	ldr	r1, [sp, #8]
   34454:	str	r0, [r1]
   34458:	mov	r1, r4
   3445c:	subs	r2, r1, r4
   34460:	mov	r3, sl
   34464:	movwne	r2, #1
   34468:	cmp	sl, #0
   3446c:	movwne	r3, #1
   34470:	cmpne	r1, r4
   34474:	beq	34770 <flatcc_json_parser_generic_json@@Base+0xa08>
   34478:	ldrb	r2, [r9, sl]
   3447c:	sub	r0, r4, r1
   34480:	cmp	r2, #93	; 0x5d
   34484:	bne	344a4 <flatcc_json_parser_generic_json@@Base+0x73c>
   34488:	cmp	r0, #2
   3448c:	blt	344d4 <flatcc_json_parser_generic_json@@Base+0x76c>
   34490:	ldrb	r0, [r1]
   34494:	cmp	r0, #32
   34498:	bls	344c0 <flatcc_json_parser_generic_json@@Base+0x758>
   3449c:	mov	r7, r1
   344a0:	b	344e4 <flatcc_json_parser_generic_json@@Base+0x77c>
   344a4:	cmp	r0, #2
   344a8:	blt	34530 <flatcc_json_parser_generic_json@@Base+0x7c8>
   344ac:	ldrb	r0, [r1]
   344b0:	cmp	r0, #32
   344b4:	bls	3451c <flatcc_json_parser_generic_json@@Base+0x7b4>
   344b8:	mov	r7, r1
   344bc:	b	34540 <flatcc_json_parser_generic_json@@Base+0x7d8>
   344c0:	bne	344d4 <flatcc_json_parser_generic_json@@Base+0x76c>
   344c4:	mov	r7, r1
   344c8:	ldrb	r0, [r7, #1]!
   344cc:	cmp	r0, #32
   344d0:	bhi	344e4 <flatcc_json_parser_generic_json@@Base+0x77c>
   344d4:	mov	r0, r5
   344d8:	mov	r2, r4
   344dc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   344e0:	mov	r7, r0
   344e4:	cmp	r7, r4
   344e8:	mov	r1, r4
   344ec:	beq	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   344f0:	ldrb	r0, [r7]
   344f4:	cmp	r0, #44	; 0x2c
   344f8:	beq	3459c <flatcc_json_parser_generic_json@@Base+0x834>
   344fc:	cmp	r0, #93	; 0x5d
   34500:	beq	34668 <flatcc_json_parser_generic_json@@Base+0x900>
   34504:	ldr	r0, [r8]
   34508:	mov	r1, r4
   3450c:	cmp	r0, #0
   34510:	bne	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   34514:	mov	r0, #9
   34518:	b	34574 <flatcc_json_parser_generic_json@@Base+0x80c>
   3451c:	bne	34530 <flatcc_json_parser_generic_json@@Base+0x7c8>
   34520:	mov	r7, r1
   34524:	ldrb	r0, [r7, #1]!
   34528:	cmp	r0, #32
   3452c:	bhi	34540 <flatcc_json_parser_generic_json@@Base+0x7d8>
   34530:	mov	r0, r5
   34534:	mov	r2, r4
   34538:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   3453c:	mov	r7, r0
   34540:	cmp	r7, r4
   34544:	mov	r1, r4
   34548:	beq	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   3454c:	ldrb	r0, [r7]
   34550:	cmp	r0, #44	; 0x2c
   34554:	beq	345c0 <flatcc_json_parser_generic_json@@Base+0x858>
   34558:	cmp	r0, #125	; 0x7d
   3455c:	beq	34668 <flatcc_json_parser_generic_json@@Base+0x900>
   34560:	ldr	r0, [r8]
   34564:	mov	r1, r4
   34568:	cmp	r0, #0
   3456c:	bne	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   34570:	mov	r0, #10
   34574:	str	r0, [r8]
   34578:	ldr	r1, [sp, #4]
   3457c:	ldr	r0, [r6]
   34580:	sub	r0, r7, r0
   34584:	add	r0, r0, #1
   34588:	str	r0, [r1]
   3458c:	ldr	r0, [sp, #8]
   34590:	mov	r1, r4
   34594:	str	r7, [r0]
   34598:	b	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   3459c:	add	r1, r7, #1
   345a0:	sub	r0, r4, r1
   345a4:	cmp	r0, #2
   345a8:	blt	345f4 <flatcc_json_parser_generic_json@@Base+0x88c>
   345ac:	ldrb	r0, [r1]
   345b0:	cmp	r0, #32
   345b4:	bls	345e4 <flatcc_json_parser_generic_json@@Base+0x87c>
   345b8:	mov	r7, r1
   345bc:	b	34604 <flatcc_json_parser_generic_json@@Base+0x89c>
   345c0:	add	r1, r7, #1
   345c4:	sub	r0, r4, r1
   345c8:	cmp	r0, #2
   345cc:	blt	34644 <flatcc_json_parser_generic_json@@Base+0x8dc>
   345d0:	ldrb	r0, [r1]
   345d4:	cmp	r0, #32
   345d8:	bls	34634 <flatcc_json_parser_generic_json@@Base+0x8cc>
   345dc:	mov	r7, r1
   345e0:	b	34654 <flatcc_json_parser_generic_json@@Base+0x8ec>
   345e4:	bne	345f4 <flatcc_json_parser_generic_json@@Base+0x88c>
   345e8:	ldrb	r0, [r7, #2]!
   345ec:	cmp	r0, #32
   345f0:	bhi	34604 <flatcc_json_parser_generic_json@@Base+0x89c>
   345f4:	mov	r0, r5
   345f8:	mov	r2, r4
   345fc:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   34600:	mov	r7, r0
   34604:	cmp	r7, r4
   34608:	beq	3461c <flatcc_json_parser_generic_json@@Base+0x8b4>
   3460c:	ldrb	r0, [r7]
   34610:	cmp	r0, #93	; 0x5d
   34614:	beq	34668 <flatcc_json_parser_generic_json@@Base+0x900>
   34618:	b	3471c <flatcc_json_parser_generic_json@@Base+0x9b4>
   3461c:	ldr	r0, [r8]
   34620:	mov	r1, r4
   34624:	cmp	r0, #0
   34628:	bne	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   3462c:	mov	r0, #9
   34630:	b	346f4 <flatcc_json_parser_generic_json@@Base+0x98c>
   34634:	bne	34644 <flatcc_json_parser_generic_json@@Base+0x8dc>
   34638:	ldrb	r0, [r7, #2]!
   3463c:	cmp	r0, #32
   34640:	bhi	34654 <flatcc_json_parser_generic_json@@Base+0x8ec>
   34644:	mov	r0, r5
   34648:	mov	r2, r4
   3464c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   34650:	mov	r7, r0
   34654:	cmp	r7, r4
   34658:	beq	346e0 <flatcc_json_parser_generic_json@@Base+0x978>
   3465c:	ldrb	r0, [r7]
   34660:	cmp	r0, #125	; 0x7d
   34664:	bne	3471c <flatcc_json_parser_generic_json@@Base+0x9b4>
   34668:	add	r2, r7, #1
   3466c:	sub	r0, r4, r2
   34670:	cmp	r0, #2
   34674:	blt	346a0 <flatcc_json_parser_generic_json@@Base+0x938>
   34678:	ldrb	r0, [r2]
   3467c:	cmp	r0, #32
   34680:	bls	3468c <flatcc_json_parser_generic_json@@Base+0x924>
   34684:	mov	r1, r2
   34688:	b	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   3468c:	bne	346a0 <flatcc_json_parser_generic_json@@Base+0x938>
   34690:	ldrb	r0, [r7, #2]!
   34694:	mov	r1, r7
   34698:	cmp	r0, #32
   3469c:	bhi	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   346a0:	mov	r1, r2
   346a4:	mov	r0, r5
   346a8:	mov	r2, r4
   346ac:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   346b0:	mov	r1, r0
   346b4:	subs	r2, r1, r4
   346b8:	sub	r0, sl, #1
   346bc:	movwne	r2, #1
   346c0:	subs	r3, sl, #1
   346c4:	movwne	r3, #1
   346c8:	cmp	sl, #1
   346cc:	beq	34774 <flatcc_json_parser_generic_json@@Base+0xa0c>
   346d0:	cmp	r1, r4
   346d4:	mov	sl, r0
   346d8:	bne	34478 <flatcc_json_parser_generic_json@@Base+0x710>
   346dc:	b	34774 <flatcc_json_parser_generic_json@@Base+0xa0c>
   346e0:	ldr	r0, [r8]
   346e4:	mov	r1, r4
   346e8:	cmp	r0, #0
   346ec:	bne	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   346f0:	mov	r0, #10
   346f4:	str	r0, [r8]
   346f8:	ldr	r1, [sp]
   346fc:	ldr	r0, [r6]
   34700:	sub	r0, r1, r0
   34704:	ldr	r1, [sp, #4]
   34708:	str	r0, [r1]
   3470c:	ldr	r0, [sp, #8]
   34710:	mov	r1, r4
   34714:	str	r4, [r0]
   34718:	b	346b4 <flatcc_json_parser_generic_json@@Base+0x94c>
   3471c:	add	r0, sp, #16
   34720:	cmp	r7, r4
   34724:	add	r0, r0, sl
   34728:	bne	33db8 <flatcc_json_parser_generic_json@@Base+0x50>
   3472c:	b	347c8 <flatcc_json_parser_generic_json@@Base+0xa60>
   34730:	cmp	r0, #92	; 0x5c
   34734:	bgt	34748 <flatcc_json_parser_generic_json@@Base+0x9e0>
   34738:	cmp	r0, #44	; 0x2c
   3473c:	beq	3445c <flatcc_json_parser_generic_json@@Base+0x6f4>
   34740:	cmp	r0, #58	; 0x3a
   34744:	b	34754 <flatcc_json_parser_generic_json@@Base+0x9ec>
   34748:	cmp	r0, #93	; 0x5d
   3474c:	beq	3445c <flatcc_json_parser_generic_json@@Base+0x6f4>
   34750:	cmp	r0, #125	; 0x7d
   34754:	mov	r2, r1
   34758:	beq	3445c <flatcc_json_parser_generic_json@@Base+0x6f4>
   3475c:	b	34328 <flatcc_json_parser_generic_json@@Base+0x5c0>
   34760:	mov	r2, r1
   34764:	b	34328 <flatcc_json_parser_generic_json@@Base+0x5c0>
   34768:	mov	r1, r7
   3476c:	b	347cc <flatcc_json_parser_generic_json@@Base+0xa64>
   34770:	mov	r0, sl
   34774:	cmp	r2, #0
   34778:	bne	347cc <flatcc_json_parser_generic_json@@Base+0xa64>
   3477c:	cmp	r3, #0
   34780:	beq	347cc <flatcc_json_parser_generic_json@@Base+0xa64>
   34784:	ldr	r1, [r8]
   34788:	cmp	r1, #0
   3478c:	bne	347c8 <flatcc_json_parser_generic_json@@Base+0xa60>
   34790:	add	r1, sp, #16
   34794:	add	r0, r1, r0
   34798:	mov	r1, #10
   3479c:	ldrb	r0, [r0, #-1]
   347a0:	cmp	r0, #93	; 0x5d
   347a4:	movweq	r1, #9
   347a8:	str	r1, [r8]
   347ac:	ldr	r0, [r6]
   347b0:	ldr	r1, [sp]
   347b4:	sub	r0, r1, r0
   347b8:	ldr	r1, [sp, #4]
   347bc:	str	r0, [r1]
   347c0:	ldr	r0, [sp, #8]
   347c4:	str	r4, [r0]
   347c8:	mov	r1, r4
   347cc:	mov	r0, r1
   347d0:	sub	sp, fp, #28
   347d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   347d8:	ldr	r0, [r8]
   347dc:	cmp	r0, #0
   347e0:	bne	347c8 <flatcc_json_parser_generic_json@@Base+0xa60>
   347e4:	mov	r0, #10
   347e8:	str	r0, [r8]
   347ec:	b	347ac <flatcc_json_parser_generic_json@@Base+0xa44>
   347f0:	ldr	r0, [r8]
   347f4:	cmp	r0, #0
   347f8:	bne	347c8 <flatcc_json_parser_generic_json@@Base+0xa60>
   347fc:	mov	r0, #4
   34800:	b	34828 <flatcc_json_parser_generic_json@@Base+0xac0>
   34804:	ldr	r0, [r8]
   34808:	cmp	r0, #0
   3480c:	bne	347c8 <flatcc_json_parser_generic_json@@Base+0xa60>
   34810:	mov	r0, #2
   34814:	b	34828 <flatcc_json_parser_generic_json@@Base+0xac0>
   34818:	ldr	r0, [r8]
   3481c:	cmp	r0, #0
   34820:	bne	347c8 <flatcc_json_parser_generic_json@@Base+0xa60>
   34824:	mov	r0, #5
   34828:	str	r0, [r8]
   3482c:	ldr	r1, [sp, #4]
   34830:	ldr	r0, [r6]
   34834:	sub	r0, r7, r0
   34838:	add	r0, r0, #1
   3483c:	str	r0, [r1]
   34840:	ldr	r0, [sp, #8]
   34844:	str	r7, [r0]
   34848:	b	347c8 <flatcc_json_parser_generic_json@@Base+0xa60>

0003484c <flatcc_json_parser_double@@Base>:
   3484c:	push	{r4, r5, r6, r7, fp, lr}
   34850:	add	fp, sp, #16
   34854:	mov	r5, r0
   34858:	mov	r0, #0
   3485c:	mov	r6, r1
   34860:	cmp	r1, r2
   34864:	str	r0, [r3]
   34868:	str	r0, [r3, #4]
   3486c:	beq	34910 <flatcc_json_parser_double@@Base+0xc4>
   34870:	mov	r0, r6
   34874:	mov	r4, r2
   34878:	mov	r7, r3
   3487c:	ldrb	r1, [r0], #1
   34880:	cmp	r1, #45	; 0x2d
   34884:	movne	r0, r6
   34888:	sub	r2, r2, r0
   3488c:	cmp	r2, #2
   34890:	blt	348d0 <flatcc_json_parser_double@@Base+0x84>
   34894:	sub	r1, r1, #45	; 0x2d
   34898:	clz	r1, r1
   3489c:	lsr	r1, r1, #5
   348a0:	ldrb	r1, [r6, r1]
   348a4:	cmp	r1, #46	; 0x2e
   348a8:	beq	348c0 <flatcc_json_parser_double@@Base+0x74>
   348ac:	cmp	r1, #48	; 0x30
   348b0:	bne	348d0 <flatcc_json_parser_double@@Base+0x84>
   348b4:	ldrb	r0, [r0, #1]
   348b8:	cmp	r0, #48	; 0x30
   348bc:	bne	348d0 <flatcc_json_parser_double@@Base+0x84>
   348c0:	ldr	r0, [r5, #24]
   348c4:	cmp	r0, #0
   348c8:	bne	3493c <flatcc_json_parser_double@@Base+0xf0>
   348cc:	b	34920 <flatcc_json_parser_double@@Base+0xd4>
   348d0:	sub	r1, r4, r6
   348d4:	mov	r0, r6
   348d8:	mov	r2, r7
   348dc:	bl	34948 <flatcc_json_parser_double@@Base+0xfc>
   348e0:	cmp	r0, #0
   348e4:	cmpne	r0, r6
   348e8:	bne	34940 <flatcc_json_parser_double@@Base+0xf4>
   348ec:	vldr	d0, [r7]
   348f0:	bl	14e74 <__isinf@plt>
   348f4:	ldr	r1, [r5, #24]
   348f8:	cmp	r0, #0
   348fc:	beq	34918 <flatcc_json_parser_double@@Base+0xcc>
   34900:	cmp	r1, #0
   34904:	bne	3493c <flatcc_json_parser_double@@Base+0xf0>
   34908:	mov	r0, #7
   3490c:	b	34924 <flatcc_json_parser_double@@Base+0xd8>
   34910:	mov	r0, r6
   34914:	pop	{r4, r5, r6, r7, fp, pc}
   34918:	cmp	r1, #0
   3491c:	bne	3493c <flatcc_json_parser_double@@Base+0xf0>
   34920:	mov	r0, #6
   34924:	str	r6, [r5, #36]	; 0x24
   34928:	ldr	r1, [r5, #4]
   3492c:	sub	r1, r6, r1
   34930:	add	r1, r1, #1
   34934:	str	r1, [r5, #20]
   34938:	str	r0, [r5, #24]
   3493c:	mov	r0, r4
   34940:	pop	{r4, r5, r6, r7, fp, pc}
   34944:	nop	{0}
   34948:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3494c:	add	fp, sp, #28
   34950:	sub	sp, sp, #36	; 0x24
   34954:	cmp	r1, #1000	; 0x3e8
   34958:	mov	r3, r1
   3495c:	mov	r5, #0
   34960:	mov	r9, r0
   34964:	movge	r3, #1000	; 0x3e8
   34968:	str	r5, [r2]
   3496c:	str	r5, [r2, #4]
   34970:	add	ip, r0, r3
   34974:	add	lr, ip, #1
   34978:	cmp	lr, r0
   3497c:	beq	349f0 <flatcc_json_parser_double@@Base+0x1a4>
   34980:	ldrb	r0, [r9]
   34984:	mov	r4, r9
   34988:	cmp	r0, #45	; 0x2d
   3498c:	bne	349a4 <flatcc_json_parser_double@@Base+0x158>
   34990:	cmp	r3, #0
   34994:	beq	34d30 <flatcc_json_parser_double@@Base+0x4e4>
   34998:	add	r4, r9, #1
   3499c:	mov	r5, #1
   349a0:	ldrb	r0, [r4]
   349a4:	cmp	r0, #48	; 0x30
   349a8:	bne	349d8 <flatcc_json_parser_double@@Base+0x18c>
   349ac:	add	r6, r4, #1
   349b0:	cmp	r4, ip
   349b4:	beq	34a3c <flatcc_json_parser_double@@Base+0x1f0>
   349b8:	ldrb	r1, [r6]
   349bc:	orr	r0, r1, #32
   349c0:	cmp	r0, #120	; 0x78
   349c4:	bne	34a08 <flatcc_json_parser_double@@Base+0x1bc>
   349c8:	mov	r0, #0
   349cc:	str	r0, [r2]
   349d0:	str	r0, [r2, #4]
   349d4:	b	349f0 <flatcc_json_parser_double@@Base+0x1a4>
   349d8:	sub	r1, r0, #49	; 0x31
   349dc:	uxtb	r1, r1
   349e0:	cmp	r1, #9
   349e4:	bcc	349f8 <flatcc_json_parser_double@@Base+0x1ac>
   349e8:	cmp	r5, #0
   349ec:	movne	r9, #0
   349f0:	mov	r2, r9
   349f4:	b	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   349f8:	sub	r0, r0, #48	; 0x30
   349fc:	add	r6, r4, #1
   34a00:	asr	r1, r0, #31
   34a04:	b	34a44 <flatcc_json_parser_double@@Base+0x1f8>
   34a08:	cmp	r1, #48	; 0x30
   34a0c:	mov	r0, #0
   34a10:	mov	r1, #0
   34a14:	bne	34a44 <flatcc_json_parser_double@@Base+0x1f8>
   34a18:	sub	r0, ip, #1
   34a1c:	mov	r1, r4
   34a20:	cmp	r0, r4
   34a24:	beq	34a38 <flatcc_json_parser_double@@Base+0x1ec>
   34a28:	ldrb	r7, [r1, #2]
   34a2c:	add	r4, r1, #1
   34a30:	cmp	r7, #48	; 0x30
   34a34:	beq	34a1c <flatcc_json_parser_double@@Base+0x1d0>
   34a38:	add	r6, r1, #2
   34a3c:	mov	r0, #0
   34a40:	mov	r1, #0
   34a44:	cmp	r6, lr
   34a48:	beq	34d30 <flatcc_json_parser_double@@Base+0x4e4>
   34a4c:	mov	sl, #10
   34a50:	mov	r7, r6
   34a54:	str	r2, [sp, #20]
   34a58:	ldrb	r8, [r7]
   34a5c:	sub	r2, r8, #48	; 0x30
   34a60:	uxtb	r4, r2
   34a64:	mov	r2, #0
   34a68:	cmp	r4, #9
   34a6c:	bhi	34aac <flatcc_json_parser_double@@Base+0x260>
   34a70:	movw	r4, #39320	; 0x9998
   34a74:	movt	r4, #39321	; 0x9999
   34a78:	subs	r4, r4, r0
   34a7c:	movw	r4, #39321	; 0x9999
   34a80:	movt	r4, #6553	; 0x1999
   34a84:	sbcs	r4, r4, r1
   34a88:	bcc	34abc <flatcc_json_parser_double@@Base+0x270>
   34a8c:	add	r1, r1, r1, lsl #2
   34a90:	add	r7, r7, #1
   34a94:	lsl	r1, r1, #1
   34a98:	umlal	r8, r1, r0, sl
   34a9c:	subs	r0, r8, #48	; 0x30
   34aa0:	sbc	r1, r1, #0
   34aa4:	cmp	lr, r7
   34aa8:	bne	34a58 <flatcc_json_parser_double@@Base+0x20c>
   34aac:	mov	r8, r0
   34ab0:	mov	sl, r1
   34ab4:	mov	r0, #0
   34ab8:	b	34ad8 <flatcc_json_parser_double@@Base+0x28c>
   34abc:	adds	r4, r0, #1
   34ac0:	adc	sl, r1, #0
   34ac4:	cmp	r8, #52	; 0x34
   34ac8:	mov	r8, r4
   34acc:	movls	r8, r0
   34ad0:	movls	sl, r1
   34ad4:	mov	r0, #1
   34ad8:	cmp	r7, lr
   34adc:	str	r0, [sp, #24]
   34ae0:	beq	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   34ae4:	sub	r0, r7, r6
   34ae8:	mov	r6, #0
   34aec:	str	r0, [sp, #16]
   34af0:	sub	r0, r3, r7
   34af4:	add	r0, r9, r0
   34af8:	ldrb	r1, [r7]
   34afc:	cmp	r1, #48	; 0x30
   34b00:	bne	34b24 <flatcc_json_parser_double@@Base+0x2d8>
   34b04:	add	r1, r7, #1
   34b08:	cmp	r7, ip
   34b0c:	sub	r0, r0, #1
   34b10:	add	r6, r6, #1
   34b14:	mov	r7, r1
   34b18:	bne	34af8 <flatcc_json_parser_double@@Base+0x2ac>
   34b1c:	mov	r7, r1
   34b20:	b	34b70 <flatcc_json_parser_double@@Base+0x324>
   34b24:	sub	r1, r1, #49	; 0x31
   34b28:	uxtb	r1, r1
   34b2c:	cmp	r1, #8
   34b30:	bhi	34b70 <flatcc_json_parser_double@@Base+0x324>
   34b34:	mvn	r2, #0
   34b38:	mov	r1, r2
   34b3c:	cmp	r0, #0
   34b40:	beq	34b60 <flatcc_json_parser_double@@Base+0x314>
   34b44:	ldrb	r2, [r7, -r1]
   34b48:	sub	r0, r0, #1
   34b4c:	sub	r2, r2, #48	; 0x30
   34b50:	uxtb	r4, r2
   34b54:	sub	r2, r1, #1
   34b58:	cmp	r4, #10
   34b5c:	bcc	34b38 <flatcc_json_parser_double@@Base+0x2ec>
   34b60:	mov	r0, #1
   34b64:	sub	r6, r6, r1
   34b68:	sub	r7, r7, r1
   34b6c:	str	r0, [sp, #24]
   34b70:	mov	r2, #0
   34b74:	cmp	r7, lr
   34b78:	beq	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   34b7c:	ldrb	r0, [r7]
   34b80:	cmp	r0, #46	; 0x2e
   34b84:	bne	34d08 <flatcc_json_parser_double@@Base+0x4bc>
   34b88:	mov	r4, r7
   34b8c:	ldrb	r0, [r4, #1]!
   34b90:	sub	r1, r0, #48	; 0x30
   34b94:	uxtb	r1, r1
   34b98:	cmp	r1, #9
   34b9c:	bhi	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   34ba0:	cmp	r7, ip
   34ba4:	beq	34c4c <flatcc_json_parser_double@@Base+0x400>
   34ba8:	sub	r1, r3, r7
   34bac:	str	r4, [sp, #8]
   34bb0:	add	r1, r1, r9
   34bb4:	sub	r1, r1, #1
   34bb8:	str	r1, [sp, #12]
   34bbc:	mov	r1, #0
   34bc0:	mov	r3, r1
   34bc4:	movw	r1, #39320	; 0x9998
   34bc8:	movt	r1, #39321	; 0x9999
   34bcc:	subs	r1, r1, r8
   34bd0:	movw	r1, #39321	; 0x9999
   34bd4:	movt	r1, #6553	; 0x1999
   34bd8:	sbcs	r1, r1, sl
   34bdc:	bcc	34c54 <flatcc_json_parser_double@@Base+0x408>
   34be0:	add	r1, sl, sl, lsl #2
   34be4:	uxtb	r0, r0
   34be8:	mov	r4, #10
   34bec:	lsl	r1, r1, #1
   34bf0:	umlal	r0, r1, r8, r4
   34bf4:	add	r4, r7, r3
   34bf8:	subs	r8, r0, #48	; 0x30
   34bfc:	ldr	r0, [sp, #12]
   34c00:	sbc	sl, r1, #0
   34c04:	cmp	r0, r3
   34c08:	beq	34c3c <flatcc_json_parser_double@@Base+0x3f0>
   34c0c:	ldrb	r0, [r4, #2]
   34c10:	str	sl, [sp, #28]
   34c14:	mov	sl, r8
   34c18:	mov	r8, r5
   34c1c:	add	r1, r3, #1
   34c20:	sub	r5, r0, #48	; 0x30
   34c24:	uxtb	r5, r5
   34c28:	cmp	r5, #10
   34c2c:	mov	r5, r8
   34c30:	mov	r8, sl
   34c34:	ldr	sl, [sp, #28]
   34c38:	bcc	34bc0 <flatcc_json_parser_double@@Base+0x374>
   34c3c:	mvn	r0, r3
   34c40:	add	r7, r4, #2
   34c44:	add	r6, r0, r6
   34c48:	b	34c8c <flatcc_json_parser_double@@Base+0x440>
   34c4c:	mov	r7, r4
   34c50:	b	34c90 <flatcc_json_parser_double@@Base+0x444>
   34c54:	add	r1, r7, r3
   34c58:	sub	r6, r6, r3
   34c5c:	add	r7, r1, #1
   34c60:	ldr	r1, [sp, #24]
   34c64:	cmp	r1, #0
   34c68:	bne	34c8c <flatcc_json_parser_double@@Base+0x440>
   34c6c:	uxtb	r0, r0
   34c70:	adds	r1, r8, #1
   34c74:	adc	r3, sl, #0
   34c78:	cmp	r0, #52	; 0x34
   34c7c:	mov	r0, #1
   34c80:	movhi	r8, r1
   34c84:	movhi	sl, r3
   34c88:	str	r0, [sp, #24]
   34c8c:	ldr	r4, [sp, #8]
   34c90:	cmp	r7, lr
   34c94:	beq	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   34c98:	ldr	r1, [sp, #16]
   34c9c:	sub	r0, r7, r4
   34ca0:	add	r1, r0, r1
   34ca4:	str	r1, [sp, #16]
   34ca8:	ldrb	r0, [r7]
   34cac:	cmp	r0, #48	; 0x30
   34cb0:	bne	34cc8 <flatcc_json_parser_double@@Base+0x47c>
   34cb4:	add	r7, r7, #1
   34cb8:	add	r6, r6, #1
   34cbc:	cmp	lr, r7
   34cc0:	bne	34ca8 <flatcc_json_parser_double@@Base+0x45c>
   34cc4:	b	34d08 <flatcc_json_parser_double@@Base+0x4bc>
   34cc8:	sub	r0, r0, #49	; 0x31
   34ccc:	uxtb	r0, r0
   34cd0:	cmp	r0, #8
   34cd4:	bhi	34d08 <flatcc_json_parser_double@@Base+0x4bc>
   34cd8:	mov	r0, r7
   34cdc:	cmp	ip, r7
   34ce0:	beq	34cfc <flatcc_json_parser_double@@Base+0x4b0>
   34ce4:	ldrb	r1, [r0, #1]
   34ce8:	add	r7, r0, #1
   34cec:	sub	r1, r1, #48	; 0x30
   34cf0:	uxtb	r1, r1
   34cf4:	cmp	r1, #10
   34cf8:	bcc	34cd8 <flatcc_json_parser_double@@Base+0x48c>
   34cfc:	add	r7, r0, #1
   34d00:	mov	r0, #1
   34d04:	str	r0, [sp, #24]
   34d08:	cmp	r7, lr
   34d0c:	beq	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   34d10:	ldrb	r0, [r7]
   34d14:	mov	r4, #0
   34d18:	orr	r0, r0, #32
   34d1c:	cmp	r0, #101	; 0x65
   34d20:	bne	34d40 <flatcc_json_parser_double@@Base+0x4f4>
   34d24:	sub	r0, lr, r7
   34d28:	cmp	r0, #2
   34d2c:	bge	34dac <flatcc_json_parser_double@@Base+0x560>
   34d30:	mov	r2, #0
   34d34:	mov	r0, r2
   34d38:	sub	sp, fp, #28
   34d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34d40:	mov	r0, #0
   34d44:	cmp	r7, lr
   34d48:	mov	r2, #0
   34d4c:	beq	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   34d50:	vmov.i32	d16, #0	; 0x00000000
   34d54:	cmp	r4, #0
   34d58:	rsbne	r0, r0, #0
   34d5c:	orrs	r1, r8, sl
   34d60:	beq	34d88 <flatcc_json_parser_double@@Base+0x53c>
   34d64:	ldr	r2, [sp, #16]
   34d68:	add	r1, r2, r6
   34d6c:	add	r4, r1, r0
   34d70:	cmn	r4, #324	; 0x144
   34d74:	blt	34d88 <flatcc_json_parser_double@@Base+0x53c>
   34d78:	movw	r0, #310	; 0x136
   34d7c:	cmp	r4, r0
   34d80:	ble	34de0 <flatcc_json_parser_double@@Base+0x594>
   34d84:	vldr	d16, [pc, #876]	; 350f8 <flatcc_json_parser_double@@Base+0x8ac>
   34d88:	ldr	r4, [sp, #20]
   34d8c:	vstr	d16, [r4]
   34d90:	cmp	r5, #0
   34d94:	beq	34da4 <flatcc_json_parser_double@@Base+0x558>
   34d98:	vldr	d16, [r4]
   34d9c:	vneg.f64	d16, d16
   34da0:	vstr	d16, [r4]
   34da4:	mov	r2, r7
   34da8:	b	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   34dac:	mov	r3, r7
   34db0:	ldrb	r0, [r3, #1]!
   34db4:	cmp	r0, #45	; 0x2d
   34db8:	beq	34edc <flatcc_json_parser_double@@Base+0x690>
   34dbc:	mov	r4, #0
   34dc0:	cmp	r0, #43	; 0x2b
   34dc4:	bne	34eec <flatcc_json_parser_double@@Base+0x6a0>
   34dc8:	add	r3, r7, #2
   34dcc:	mov	r2, #0
   34dd0:	cmp	r3, lr
   34dd4:	beq	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   34dd8:	mov	r4, #0
   34ddc:	b	34eec <flatcc_json_parser_double@@Base+0x6a0>
   34de0:	mov	r0, #0
   34de4:	mov	r6, r2
   34de8:	cmp	r0, sl, lsr #21
   34dec:	bne	34f44 <flatcc_json_parser_double@@Base+0x6f8>
   34df0:	cmp	r4, #22
   34df4:	bhi	34f44 <flatcc_json_parser_double@@Base+0x6f8>
   34df8:	mov	r0, r8
   34dfc:	mov	r1, sl
   34e00:	bl	42cfc <flatcc_json_printer_clear@@Base+0x8b8>
   34e04:	vmov	d16, r0, r1
   34e08:	sub	r2, r4, r6
   34e0c:	add	r0, r2, #22
   34e10:	cmp	r0, #44	; 0x2c
   34e14:	bhi	34d88 <flatcc_json_parser_double@@Base+0x53c>
   34e18:	add	r1, pc, #0
   34e1c:	ldr	pc, [r1, r0, lsl #2]
   34e20:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   34e24:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   34e28:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   34e2c:	andeq	r4, r3, r4, lsr #31
   34e30:	andeq	r4, r3, ip, lsr #31
   34e34:			; <UNDEFINED> instruction: 0x00034fb4
   34e38:			; <UNDEFINED> instruction: 0x00034fbc
   34e3c:	andeq	r4, r3, r4, asr #31
   34e40:	andeq	r4, r3, ip, asr #31
   34e44:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   34e48:	ldrdeq	r4, [r3], -ip
   34e4c:	andeq	r4, r3, r4, ror #31
   34e50:	andeq	r4, r3, ip, ror #31
   34e54:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   34e58:	strdeq	r4, [r3], -ip
   34e5c:	andeq	r5, r3, r4
   34e60:	andeq	r5, r3, ip
   34e64:	andeq	r5, r3, r4, lsl r0
   34e68:	andeq	r5, r3, ip, lsl r0
   34e6c:	andeq	r5, r3, r4, lsr #32
   34e70:	andeq	r5, r3, ip, lsr #32
   34e74:	andeq	r5, r3, r4, lsr r0
   34e78:	andeq	r4, r3, r8, lsl #27
   34e7c:	andeq	r5, r3, r0, asr #32
   34e80:	andeq	r5, r3, r8, asr #32
   34e84:	andeq	r5, r3, r0, asr r0
   34e88:	andeq	r5, r3, r8, asr r0
   34e8c:	andeq	r5, r3, r0, rrx
   34e90:	andeq	r5, r3, r8, rrx
   34e94:	andeq	r5, r3, r0, ror r0
   34e98:	andeq	r5, r3, r8, ror r0
   34e9c:	andeq	r5, r3, r0, lsl #1
   34ea0:	andeq	r5, r3, r8, lsl #1
   34ea4:	muleq	r3, r0, r0
   34ea8:	muleq	r3, r8, r0
   34eac:	andeq	r5, r3, r0, lsr #1
   34eb0:	andeq	r5, r3, r8, lsr #1
   34eb4:	strheq	r5, [r3], -r0
   34eb8:	strheq	r5, [r3], -r8
   34ebc:	andeq	r5, r3, r0, asr #1
   34ec0:	andeq	r5, r3, r8, asr #1
   34ec4:	ldrdeq	r5, [r3], -r0
   34ec8:	ldrdeq	r5, [r3], -r8
   34ecc:	andeq	r5, r3, r0, ror #1
   34ed0:	andeq	r5, r3, r8, ror #1
   34ed4:	vldr	d17, [pc, #708]	; 351a0 <flatcc_json_parser_double@@Base+0x954>
   34ed8:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34edc:	add	r3, r7, #2
   34ee0:	mov	r4, #1
   34ee4:	cmp	r3, lr
   34ee8:	beq	34d30 <flatcc_json_parser_double@@Base+0x4e4>
   34eec:	ldrb	r0, [r3]
   34ef0:	mov	r2, #0
   34ef4:	sub	r0, r0, #48	; 0x30
   34ef8:	uxtb	r1, r0
   34efc:	cmp	r1, #9
   34f00:	bhi	34d34 <flatcc_json_parser_double@@Base+0x4e8>
   34f04:	cmp	r3, ip
   34f08:	beq	34f3c <flatcc_json_parser_double@@Base+0x6f0>
   34f0c:	ldrb	r1, [r3, #1]
   34f10:	sub	r2, r1, #48	; 0x30
   34f14:	uxtb	r2, r2
   34f18:	cmp	r2, #9
   34f1c:	bhi	34f3c <flatcc_json_parser_double@@Base+0x6f0>
   34f20:	cmp	r0, #32768	; 0x8000
   34f24:	add	r3, r3, #1
   34f28:	addlt	r0, r0, r0, lsl #2
   34f2c:	addlt	r0, r1, r0, lsl #1
   34f30:	sublt	r0, r0, #48	; 0x30
   34f34:	cmp	ip, r3
   34f38:	bne	34f0c <flatcc_json_parser_double@@Base+0x6c0>
   34f3c:	add	r7, r3, #1
   34f40:	b	34d44 <flatcc_json_parser_double@@Base+0x4f8>
   34f44:	ldr	r0, [sp, #24]
   34f48:	ldr	r3, [sp, #20]
   34f4c:	mov	r2, r4
   34f50:	mov	r1, sl
   34f54:	str	r0, [sp]
   34f58:	str	r3, [sp, #4]
   34f5c:	mov	r4, r3
   34f60:	mov	r0, r8
   34f64:	mov	r3, r6
   34f68:	bl	32f20 <grisu3_diy_fp_encode_double@@Base>
   34f6c:	cmp	r0, #0
   34f70:	bne	34d90 <flatcc_json_parser_double@@Base+0x544>
   34f74:	add	r1, sp, #32
   34f78:	mov	r0, r9
   34f7c:	bl	14f04 <strtod@plt>
   34f80:	vstr	d0, [r4]
   34f84:	ldr	r0, [sp, #32]
   34f88:	cmp	r0, r7
   34f8c:	movcc	r7, r0
   34f90:	b	34da4 <flatcc_json_parser_double@@Base+0x558>
   34f94:	vldr	d17, [pc, #356]	; 35100 <flatcc_json_parser_double@@Base+0x8b4>
   34f98:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34f9c:	vldr	d17, [pc, #356]	; 35108 <flatcc_json_parser_double@@Base+0x8bc>
   34fa0:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fa4:	vldr	d17, [pc, #356]	; 35110 <flatcc_json_parser_double@@Base+0x8c4>
   34fa8:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fac:	vldr	d17, [pc, #356]	; 35118 <flatcc_json_parser_double@@Base+0x8cc>
   34fb0:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fb4:	vldr	d17, [pc, #356]	; 35120 <flatcc_json_parser_double@@Base+0x8d4>
   34fb8:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fbc:	vldr	d17, [pc, #356]	; 35128 <flatcc_json_parser_double@@Base+0x8dc>
   34fc0:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fc4:	vldr	d17, [pc, #356]	; 35130 <flatcc_json_parser_double@@Base+0x8e4>
   34fc8:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fcc:	vldr	d17, [pc, #356]	; 35138 <flatcc_json_parser_double@@Base+0x8ec>
   34fd0:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fd4:	vldr	d17, [pc, #356]	; 35140 <flatcc_json_parser_double@@Base+0x8f4>
   34fd8:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fdc:	vldr	d17, [pc, #356]	; 35148 <flatcc_json_parser_double@@Base+0x8fc>
   34fe0:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fe4:	vldr	d17, [pc, #356]	; 35150 <flatcc_json_parser_double@@Base+0x904>
   34fe8:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34fec:	vldr	d17, [pc, #356]	; 35158 <flatcc_json_parser_double@@Base+0x90c>
   34ff0:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34ff4:	vldr	d17, [pc, #356]	; 35160 <flatcc_json_parser_double@@Base+0x914>
   34ff8:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   34ffc:	vldr	d17, [pc, #356]	; 35168 <flatcc_json_parser_double@@Base+0x91c>
   35000:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   35004:	vldr	d17, [pc, #356]	; 35170 <flatcc_json_parser_double@@Base+0x924>
   35008:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   3500c:	vldr	d17, [pc, #356]	; 35178 <flatcc_json_parser_double@@Base+0x92c>
   35010:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   35014:	vldr	d17, [pc, #356]	; 35180 <flatcc_json_parser_double@@Base+0x934>
   35018:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   3501c:	vldr	d17, [pc, #356]	; 35188 <flatcc_json_parser_double@@Base+0x93c>
   35020:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   35024:	vldr	d17, [pc, #356]	; 35190 <flatcc_json_parser_double@@Base+0x944>
   35028:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   3502c:	vldr	d17, [pc, #356]	; 35198 <flatcc_json_parser_double@@Base+0x94c>
   35030:	b	35038 <flatcc_json_parser_double@@Base+0x7ec>
   35034:	vmov.f64	d17, #36	; 0x41200000  10.0
   35038:	vdiv.f64	d16, d16, d17
   3503c:	b	34d88 <flatcc_json_parser_double@@Base+0x53c>
   35040:	vmov.f64	d17, #36	; 0x41200000  10.0
   35044:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35048:	vldr	d17, [pc, #328]	; 35198 <flatcc_json_parser_double@@Base+0x94c>
   3504c:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35050:	vldr	d17, [pc, #312]	; 35190 <flatcc_json_parser_double@@Base+0x944>
   35054:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35058:	vldr	d17, [pc, #296]	; 35188 <flatcc_json_parser_double@@Base+0x93c>
   3505c:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35060:	vldr	d17, [pc, #280]	; 35180 <flatcc_json_parser_double@@Base+0x934>
   35064:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35068:	vldr	d17, [pc, #264]	; 35178 <flatcc_json_parser_double@@Base+0x92c>
   3506c:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35070:	vldr	d17, [pc, #248]	; 35170 <flatcc_json_parser_double@@Base+0x924>
   35074:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35078:	vldr	d17, [pc, #232]	; 35168 <flatcc_json_parser_double@@Base+0x91c>
   3507c:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35080:	vldr	d17, [pc, #216]	; 35160 <flatcc_json_parser_double@@Base+0x914>
   35084:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35088:	vldr	d17, [pc, #200]	; 35158 <flatcc_json_parser_double@@Base+0x90c>
   3508c:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35090:	vldr	d17, [pc, #184]	; 35150 <flatcc_json_parser_double@@Base+0x904>
   35094:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   35098:	vldr	d17, [pc, #168]	; 35148 <flatcc_json_parser_double@@Base+0x8fc>
   3509c:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350a0:	vldr	d17, [pc, #152]	; 35140 <flatcc_json_parser_double@@Base+0x8f4>
   350a4:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350a8:	vldr	d17, [pc, #136]	; 35138 <flatcc_json_parser_double@@Base+0x8ec>
   350ac:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350b0:	vldr	d17, [pc, #120]	; 35130 <flatcc_json_parser_double@@Base+0x8e4>
   350b4:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350b8:	vldr	d17, [pc, #104]	; 35128 <flatcc_json_parser_double@@Base+0x8dc>
   350bc:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350c0:	vldr	d17, [pc, #88]	; 35120 <flatcc_json_parser_double@@Base+0x8d4>
   350c4:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350c8:	vldr	d17, [pc, #72]	; 35118 <flatcc_json_parser_double@@Base+0x8cc>
   350cc:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350d0:	vldr	d17, [pc, #56]	; 35110 <flatcc_json_parser_double@@Base+0x8c4>
   350d4:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350d8:	vldr	d17, [pc, #40]	; 35108 <flatcc_json_parser_double@@Base+0x8bc>
   350dc:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350e0:	vldr	d17, [pc, #24]	; 35100 <flatcc_json_parser_double@@Base+0x8b4>
   350e4:	b	350ec <flatcc_json_parser_double@@Base+0x8a0>
   350e8:	vldr	d17, [pc, #176]	; 351a0 <flatcc_json_parser_double@@Base+0x954>
   350ec:	vmul.f64	d16, d16, d17
   350f0:	b	34d88 <flatcc_json_parser_double@@Base+0x53c>
   350f4:	nop	{0}
   350f8:	andeq	r0, r0, r0
   350fc:	svcvc	0x00f00000	; IMB
   35100:	usatle	lr, #2, r0, asr #30
   35104:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   35108:	ldmvc	r5!, {r6, sl, fp, pc}
   3510c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   35110:	addsvs	r3, r1, r0, lsl #26
   35114:	mvnmi	r5, #228, 16	; 0xe40000
   35118:	strbvs	ip, [lr, -r0, lsl #16]
   3511c:			; <UNDEFINED> instruction: 0x43abc16d
   35120:	ldrbhi	sl, [r8]
   35124:	cmnmi	r6, #1459617792	; 0x57000000
   35128:	strbcc	r8, [r0, r0]!
   3512c:	movtmi	ip, #4985	; 0x1379
   35130:	ldrtcs	r0, [r4], -r0
   35134:	movwmi	r6, #52213	; 0xcbf5
   35138:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3513c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   35140:	strb	r0, [r0, #-0]
   35144:	adcmi	r3, r2, #156	; 0x9c
   35148:	andge	r0, r0, #0
   3514c:	rsbmi	r1, sp, #148, 20	; 0x94000
   35150:	stmda	r0, {}	; <UNPREDICTABLE>
   35154:	eorsmi	r4, r7, #7733248	; 0x760000
   35158:	andcs	r0, r0, r0
   3515c:	andmi	sl, r2, #95	; 0x5f
   35160:	andeq	r0, r0, r0
   35164:	bicmi	ip, sp, r5, ror #26
   35168:	andeq	r0, r0, r0
   3516c:	orrsmi	sp, r7, r4, lsl #15
   35170:	andeq	r0, r0, r0
   35174:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   35178:	andeq	r0, r0, r0
   3517c:	smlawbmi	lr, r0, r4, r8
   35180:	andeq	r0, r0, r0
   35184:	rscsmi	r6, r8, r0, lsl #20
   35188:	andeq	r0, r0, r0
   3518c:	sbcmi	r8, r3, r0, lsl #16
   35190:	andeq	r0, r0, r0
   35194:	addmi	r4, pc, r0
   35198:	andeq	r0, r0, r0
   3519c:	subsmi	r0, r9, r0
   351a0:			; <UNDEFINED> instruction: 0x064dd592
   351a4:	strmi	pc, [r0], #207	; 0xcf

000351a8 <flatcc_json_parser_float@@Base>:
   351a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   351ac:	add	fp, sp, #24
   351b0:	vpush	{d8-d9}
   351b4:	sub	sp, sp, #8
   351b8:	mov	r8, r0
   351bc:	mov	r0, #0
   351c0:	mov	r6, r1
   351c4:	cmp	r1, r2
   351c8:	str	r0, [r3]
   351cc:	beq	352a4 <flatcc_json_parser_float@@Base+0xfc>
   351d0:	mov	r0, r6
   351d4:	mov	r5, r2
   351d8:	mov	r7, r3
   351dc:	ldrb	r1, [r0], #1
   351e0:	cmp	r1, #45	; 0x2d
   351e4:	movne	r0, r6
   351e8:	sub	r2, r2, r0
   351ec:	cmp	r2, #2
   351f0:	blt	35230 <flatcc_json_parser_float@@Base+0x88>
   351f4:	sub	r1, r1, #45	; 0x2d
   351f8:	clz	r1, r1
   351fc:	lsr	r1, r1, #5
   35200:	ldrb	r1, [r6, r1]
   35204:	cmp	r1, #46	; 0x2e
   35208:	beq	35220 <flatcc_json_parser_float@@Base+0x78>
   3520c:	cmp	r1, #48	; 0x30
   35210:	bne	35230 <flatcc_json_parser_float@@Base+0x88>
   35214:	ldrb	r0, [r0, #1]
   35218:	cmp	r0, #48	; 0x30
   3521c:	bne	35230 <flatcc_json_parser_float@@Base+0x88>
   35220:	ldr	r0, [r8, #24]
   35224:	cmp	r0, #0
   35228:	bne	352d0 <flatcc_json_parser_float@@Base+0x128>
   3522c:	b	352b4 <flatcc_json_parser_float@@Base+0x10c>
   35230:	sub	r1, r5, r6
   35234:	mov	r2, sp
   35238:	mov	r0, r6
   3523c:	bl	34948 <flatcc_json_parser_double@@Base+0xfc>
   35240:	vldr	d16, [sp]
   35244:	mov	r4, r0
   35248:	add	r0, pc, #148	; 0x94
   3524c:	vcmpe.f64	d16, #0.0
   35250:	vcvt.f32.f64	s16, d16
   35254:	vmrs	APSR_nzcv, fpscr
   35258:	addmi	r0, r0, #4
   3525c:	vldr	s18, [r0]
   35260:	vmov.f32	s0, s16
   35264:	bl	14e68 <__isinff@plt>
   35268:	cmp	r0, #0
   3526c:	vseleq.f32	s0, s16, s18
   35270:	movne	r4, r6
   35274:	cmp	r4, #0
   35278:	cmpne	r4, r6
   3527c:	vstr	s0, [r7]
   35280:	bne	352d4 <flatcc_json_parser_float@@Base+0x12c>
   35284:	bl	14e68 <__isinff@plt>
   35288:	ldr	r1, [r8, #24]
   3528c:	cmp	r0, #0
   35290:	beq	352ac <flatcc_json_parser_float@@Base+0x104>
   35294:	cmp	r1, #0
   35298:	bne	352d0 <flatcc_json_parser_float@@Base+0x128>
   3529c:	mov	r0, #7
   352a0:	b	352b8 <flatcc_json_parser_float@@Base+0x110>
   352a4:	mov	r4, r6
   352a8:	b	352d4 <flatcc_json_parser_float@@Base+0x12c>
   352ac:	cmp	r1, #0
   352b0:	bne	352d0 <flatcc_json_parser_float@@Base+0x128>
   352b4:	mov	r0, #6
   352b8:	str	r6, [r8, #36]	; 0x24
   352bc:	ldr	r1, [r8, #4]
   352c0:	sub	r1, r6, r1
   352c4:	add	r1, r1, #1
   352c8:	str	r1, [r8, #20]
   352cc:	str	r0, [r8, #24]
   352d0:	mov	r4, r5
   352d4:	mov	r0, r4
   352d8:	sub	sp, fp, #40	; 0x28
   352dc:	vpop	{d8-d9}
   352e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   352e4:	svcvc	0x00800000
   352e8:			; <UNDEFINED> instruction: 0xff800000

000352ec <flatcc_json_parser_integer@@Base>:
   352ec:	push	{r4, r5, r6, r7, fp, lr}
   352f0:	add	fp, sp, #16
   352f4:	mov	ip, r1
   352f8:	cmp	r1, r2
   352fc:	beq	35434 <flatcc_json_parser_integer@@Base+0x148>
   35300:	ldrb	r1, [ip]
   35304:	mov	r4, #0
   35308:	sub	r1, r1, #45	; 0x2d
   3530c:	clz	r1, r1
   35310:	lsr	r1, r1, #5
   35314:	str	r1, [r3]
   35318:	add	r1, ip, r1
   3531c:	cmp	r1, r2
   35320:	beq	35388 <flatcc_json_parser_integer@@Base+0x9c>
   35324:	mov	lr, #10
   35328:	mov	r5, #0
   3532c:	ldrb	r6, [r1]
   35330:	sub	r7, r6, #48	; 0x30
   35334:	uxtb	r7, r7
   35338:	cmp	r7, #9
   3533c:	bhi	35398 <flatcc_json_parser_integer@@Base+0xac>
   35340:	add	r7, r5, r5, lsl #2
   35344:	lsl	r7, r7, #1
   35348:	umlal	r6, r7, r4, lr
   3534c:	subs	r6, r6, #48	; 0x30
   35350:	sbc	r7, r7, #0
   35354:	subs	r4, r6, r4
   35358:	sbcs	r4, r7, r5
   3535c:	bcc	353e8 <flatcc_json_parser_integer@@Base+0xfc>
   35360:	add	r1, r1, #1
   35364:	mov	r4, r6
   35368:	mov	r5, r7
   3536c:	cmp	r2, r1
   35370:	bne	3532c <flatcc_json_parser_integer@@Base+0x40>
   35374:	mov	r3, #0
   35378:	mov	r1, r2
   3537c:	mov	r4, r6
   35380:	mov	r5, r7
   35384:	b	3539c <flatcc_json_parser_integer@@Base+0xb0>
   35388:	mov	r1, r2
   3538c:	mov	r5, #0
   35390:	mov	r3, #0
   35394:	b	3539c <flatcc_json_parser_integer@@Base+0xb0>
   35398:	mov	r3, #1
   3539c:	cmp	r1, ip
   353a0:	beq	35434 <flatcc_json_parser_integer@@Base+0x148>
   353a4:	cmp	r3, #0
   353a8:	beq	35428 <flatcc_json_parser_integer@@Base+0x13c>
   353ac:	ldrb	r3, [r1]
   353b0:	cmp	r3, #46	; 0x2e
   353b4:	cmpne	r3, #101	; 0x65
   353b8:	bne	35420 <flatcc_json_parser_integer@@Base+0x134>
   353bc:	ldr	r3, [r0, #24]
   353c0:	cmp	r3, #0
   353c4:	bne	35418 <flatcc_json_parser_integer@@Base+0x12c>
   353c8:	str	r1, [r0, #36]	; 0x24
   353cc:	mov	r3, #12
   353d0:	ldr	r7, [r0, #4]
   353d4:	sub	r1, r1, r7
   353d8:	add	r1, r1, #1
   353dc:	str	r1, [r0, #20]
   353e0:	str	r3, [r0, #24]
   353e4:	b	35418 <flatcc_json_parser_integer@@Base+0x12c>
   353e8:	ldr	r7, [r0, #24]
   353ec:	cmp	r7, #0
   353f0:	bne	35418 <flatcc_json_parser_integer@@Base+0x12c>
   353f4:	str	r1, [r0, #36]	; 0x24
   353f8:	cmp	r3, #0
   353fc:	mov	r7, #8
   35400:	ldr	r3, [r0, #4]
   35404:	movweq	r7, #7
   35408:	sub	r1, r1, r3
   3540c:	add	r1, r1, #1
   35410:	str	r1, [r0, #20]
   35414:	str	r7, [r0, #24]
   35418:	mov	ip, r2
   3541c:	b	35434 <flatcc_json_parser_integer@@Base+0x148>
   35420:	cmp	r3, #69	; 0x45
   35424:	beq	353bc <flatcc_json_parser_integer@@Base+0xd0>
   35428:	ldr	r0, [fp, #8]
   3542c:	mov	ip, r1
   35430:	strd	r4, [r0]
   35434:	mov	r0, ip
   35438:	pop	{r4, r5, r6, r7, fp, pc}

0003543c <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   3543c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35440:	add	fp, sp, #28
   35444:	sub	sp, sp, #36	; 0x24
   35448:	mov	r7, r3
   3544c:	mov	r4, r2
   35450:	mov	r5, r0
   35454:	cmp	r1, r2
   35458:	beq	35470 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   3545c:	ldrb	r0, [r1]
   35460:	cmp	r0, #34	; 0x22
   35464:	bne	35470 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   35468:	add	r9, r1, #1
   3546c:	b	354a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   35470:	ldr	r0, [r5, #24]
   35474:	mov	r9, r4
   35478:	cmp	r0, #0
   3547c:	bne	354a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   35480:	str	r1, [r5, #36]	; 0x24
   35484:	mov	r0, #16
   35488:	mov	r9, r4
   3548c:	ldr	r2, [r5, #4]
   35490:	sub	r1, r1, r2
   35494:	add	r1, r1, #1
   35498:	str	r1, [r5, #20]
   3549c:	str	r0, [r5, #24]
   354a0:	ldr	r6, [fp, #8]
   354a4:	mov	r0, r5
   354a8:	mov	r1, r9
   354ac:	mov	r2, r4
   354b0:	bl	3342c <flatcc_json_parser_string_part@@Base>
   354b4:	mov	sl, r0
   354b8:	cmp	r0, r4
   354bc:	mov	r0, r4
   354c0:	beq	354fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   354c4:	ldrb	r0, [sl]
   354c8:	cmp	r0, #34	; 0x22
   354cc:	bne	354f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xbc>
   354d0:	sub	r1, sl, r9
   354d4:	and	r0, r1, #3
   354d8:	str	r1, [sp, #28]
   354dc:	lsr	r1, r1, #2
   354e0:	add	r8, r1, r1, lsl #1
   354e4:	cmp	r0, #2
   354e8:	beq	35538 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xfc>
   354ec:	cmp	r0, #3
   354f0:	addeq	r8, r8, #2
   354f4:	b	3553c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x100>
   354f8:	mov	r0, sl
   354fc:	mov	r1, #0
   35500:	str	r1, [r7]
   35504:	ldr	r1, [r5, #24]
   35508:	cmp	r1, #0
   3550c:	bne	35588 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   35510:	str	r0, [r5, #36]	; 0x24
   35514:	cmp	r6, #0
   35518:	mov	r1, #31
   3551c:	ldr	r2, [r5, #4]
   35520:	movwne	r1, #32
   35524:	sub	r0, r0, r2
   35528:	add	r0, r0, #1
   3552c:	str	r0, [r5, #20]
   35530:	str	r1, [r5, #24]
   35534:	b	35588 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   35538:	add	r8, r8, #1
   3553c:	ldr	r0, [r5]
   35540:	mov	r1, #1
   35544:	mov	r2, #1
   35548:	mvn	r3, #0
   3554c:	bl	2f20c <flatcc_builder_start_vector@@Base>
   35550:	cmp	r0, #0
   35554:	beq	35594 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x158>
   35558:	mov	r0, #0
   3555c:	str	r0, [r7]
   35560:	ldr	r0, [r5, #24]
   35564:	cmp	r0, #0
   35568:	bne	35588 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   3556c:	mov	r0, #33	; 0x21
   35570:	str	sl, [r5, #36]	; 0x24
   35574:	ldr	r1, [r5, #4]
   35578:	sub	r1, sl, r1
   3557c:	add	r1, r1, #1
   35580:	str	r1, [r5, #20]
   35584:	str	r0, [r5, #24]
   35588:	mov	r0, r4
   3558c:	sub	sp, fp, #28
   35590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35594:	ldr	r0, [r5]
   35598:	mov	r1, r8
   3559c:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   355a0:	cmp	r0, #0
   355a4:	beq	35558 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   355a8:	movw	r1, #36280	; 0x8db8
   355ac:	ldr	ip, [sp, #28]
   355b0:	movw	r2, #36024	; 0x8cb8
   355b4:	cmp	r6, #0
   355b8:	str	r7, [sp, #8]
   355bc:	add	r7, sp, #32
   355c0:	mov	r6, r9
   355c4:	str	r0, [sp, #4]
   355c8:	str	r0, [sp, #16]
   355cc:	str	r8, [sp, #24]
   355d0:	movt	r1, #4
   355d4:	movt	r2, #4
   355d8:	movne	r2, r1
   355dc:	cmp	r8, #0
   355e0:	mov	r1, r8
   355e4:	mvneq	r1, #0
   355e8:	str	r1, [sp, #20]
   355ec:	mov	r1, #0
   355f0:	str	ip, [sp, #12]
   355f4:	cmp	ip, r1
   355f8:	beq	356a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x264>
   355fc:	ldrb	r3, [r6, r1]
   35600:	ldrb	lr, [r2, r3]
   35604:	cmp	lr, #64	; 0x40
   35608:	strb	lr, [r7, r1]
   3560c:	bcc	35624 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e8>
   35610:	cmp	lr, #65	; 0x41
   35614:	bne	356ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b0>
   35618:	sub	r1, r1, #1
   3561c:	sub	ip, ip, #1
   35620:	add	r6, r6, #1
   35624:	add	r1, r1, #1
   35628:	cmp	r1, #4
   3562c:	bcc	355f4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   35630:	ldr	r0, [sp, #20]
   35634:	cmp	r0, #3
   35638:	bcc	3578c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   3563c:	ldrb	r3, [sp, #33]	; 0x21
   35640:	ldrb	r1, [sp, #32]
   35644:	mov	r0, r7
   35648:	ldr	r8, [sp, #24]
   3564c:	sub	ip, ip, #4
   35650:	add	r6, r6, #4
   35654:	lsr	r7, r3, #4
   35658:	orr	r1, r7, r1, lsl #2
   3565c:	mov	r7, r0
   35660:	ldr	r0, [sp, #16]
   35664:	strb	r1, [r0]
   35668:	ldrb	r1, [sp, #34]	; 0x22
   3566c:	lsr	r1, r1, #2
   35670:	orr	r1, r1, r3, lsl #4
   35674:	strb	r1, [r0, #1]
   35678:	ldrb	r1, [sp, #34]	; 0x22
   3567c:	ldrb	r3, [sp, #35]	; 0x23
   35680:	orr	r1, r3, r1, lsl #6
   35684:	strb	r1, [r0, #2]
   35688:	ldr	r1, [sp, #20]
   3568c:	add	r0, r0, #3
   35690:	str	r0, [sp, #16]
   35694:	subs	r1, r1, #3
   35698:	bne	355e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ac>
   3569c:	b	35778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x33c>
   356a0:	mov	r1, ip
   356a4:	mov	r0, ip
   356a8:	sub	ip, ip, r0
   356ac:	cmp	r1, #0
   356b0:	beq	35778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x33c>
   356b4:	cmp	r1, #3
   356b8:	beq	35730 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   356bc:	cmp	r1, #2
   356c0:	bne	3578c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   356c4:	ldrb	r1, [sp, #33]	; 0x21
   356c8:	tst	r1, #15
   356cc:	bne	3578c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   356d0:	ldrb	r2, [sp, #32]
   356d4:	lsl	r2, r2, #2
   356d8:	orr	r1, r2, r1, lsr #4
   356dc:	ldr	r2, [sp, #16]
   356e0:	strb	r1, [r2], #1
   356e4:	str	r2, [sp, #16]
   356e8:	b	35778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x33c>
   356ec:	cmp	lr, #66	; 0x42
   356f0:	bne	357fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c0>
   356f4:	add	r3, r1, #1
   356f8:	mov	r0, r3
   356fc:	cmp	r3, ip
   35700:	bcs	356a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   35704:	cmp	r0, #7
   35708:	bhi	356a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   3570c:	ldrb	r3, [r6, r0]
   35710:	ldr	r8, [sp, #24]
   35714:	ldrb	r3, [r2, r3]
   35718:	sub	r3, r3, #65	; 0x41
   3571c:	uxtb	r7, r3
   35720:	add	r3, r0, #1
   35724:	cmp	r7, #2
   35728:	bcc	356f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2bc>
   3572c:	b	356a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   35730:	ldr	r1, [sp, #20]
   35734:	cmp	r1, #2
   35738:	bcc	3578c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   3573c:	ldrb	r1, [sp, #34]	; 0x22
   35740:	ands	r2, r1, #3
   35744:	bne	3578c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   35748:	ldrb	r3, [sp, #33]	; 0x21
   3574c:	ldrb	r2, [sp, #32]
   35750:	ldr	r8, [sp, #24]
   35754:	lsl	r7, r3, #4
   35758:	orr	r1, r7, r1, lsr #2
   3575c:	ldr	r7, [sp, #16]
   35760:	strb	r1, [r7, #1]
   35764:	lsr	r1, r3, #4
   35768:	orr	r1, r1, r2, lsl #2
   3576c:	strb	r1, [r7]
   35770:	add	r7, r7, #2
   35774:	str	r7, [sp, #16]
   35778:	cmp	ip, #0
   3577c:	beq	357a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x36c>
   35780:	ldr	r0, [sp, #28]
   35784:	sub	r0, r0, ip
   35788:	b	35798 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35c>
   3578c:	ldr	r0, [sp, #28]
   35790:	ldr	r1, [sp, #12]
   35794:	sub	r0, r0, r1
   35798:	ldr	r6, [fp, #8]
   3579c:	ldr	r7, [sp, #8]
   357a0:	add	r0, r9, r0
   357a4:	b	354fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   357a8:	ldr	r0, [sp, #4]
   357ac:	ldr	r1, [sp, #16]
   357b0:	ldr	r7, [sp, #8]
   357b4:	sub	r0, r1, r0
   357b8:	cmp	r8, r0
   357bc:	bls	357d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   357c0:	sub	r1, r8, r0
   357c4:	ldr	r0, [r5]
   357c8:	bl	2f058 <flatcc_builder_truncate_vector@@Base>
   357cc:	cmp	r0, #0
   357d0:	bne	35558 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   357d4:	ldr	r0, [r5]
   357d8:	bl	30238 <flatcc_builder_end_vector@@Base>
   357dc:	cmp	r0, #0
   357e0:	str	r0, [r7]
   357e4:	beq	35558 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   357e8:	ldrb	r0, [sl]
   357ec:	cmp	r0, #34	; 0x22
   357f0:	bne	35804 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c8>
   357f4:	add	r4, sl, #1
   357f8:	b	35588 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   357fc:	mov	r0, r1
   35800:	b	356a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   35804:	ldr	r0, [r5, #24]
   35808:	cmp	r0, #0
   3580c:	bne	35588 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   35810:	mov	r0, #20
   35814:	b	35570 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x134>

00035818 <flatcc_json_parser_build_string@@Base>:
   35818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3581c:	add	fp, sp, #28
   35820:	sub	sp, sp, #4
   35824:	mov	r9, r3
   35828:	mov	sl, r2
   3582c:	mov	r5, r0
   35830:	cmp	r1, r2
   35834:	beq	3584c <flatcc_json_parser_build_string@@Base+0x34>
   35838:	ldrb	r0, [r1]
   3583c:	cmp	r0, #34	; 0x22
   35840:	bne	3584c <flatcc_json_parser_build_string@@Base+0x34>
   35844:	add	r6, r1, #1
   35848:	b	3587c <flatcc_json_parser_build_string@@Base+0x64>
   3584c:	ldr	r0, [r5, #24]
   35850:	mov	r6, sl
   35854:	cmp	r0, #0
   35858:	bne	3587c <flatcc_json_parser_build_string@@Base+0x64>
   3585c:	str	r1, [r5, #36]	; 0x24
   35860:	mov	r0, #16
   35864:	mov	r6, sl
   35868:	ldr	r2, [r5, #4]
   3586c:	sub	r1, r1, r2
   35870:	add	r1, r1, #1
   35874:	str	r1, [r5, #20]
   35878:	str	r0, [r5, #24]
   3587c:	mov	r0, r5
   35880:	mov	r1, r6
   35884:	mov	r2, sl
   35888:	bl	3342c <flatcc_json_parser_string_part@@Base>
   3588c:	mov	r4, r0
   35890:	cmp	r0, sl
   35894:	beq	358bc <flatcc_json_parser_build_string@@Base+0xa4>
   35898:	ldrb	r0, [r4]
   3589c:	cmp	r0, #34	; 0x22
   358a0:	bne	358bc <flatcc_json_parser_build_string@@Base+0xa4>
   358a4:	ldr	r0, [r5]
   358a8:	sub	r2, r4, r6
   358ac:	mov	r1, r6
   358b0:	bl	3109c <flatcc_builder_create_string@@Base>
   358b4:	mov	r6, r4
   358b8:	b	35994 <flatcc_json_parser_build_string@@Base+0x17c>
   358bc:	ldr	r0, [r5]
   358c0:	bl	2f43c <flatcc_builder_start_string@@Base>
   358c4:	cmp	r0, #0
   358c8:	beq	358d8 <flatcc_json_parser_build_string@@Base+0xc0>
   358cc:	mov	r0, #0
   358d0:	str	r0, [r9]
   358d4:	b	359e0 <flatcc_json_parser_build_string@@Base+0x1c8>
   358d8:	ldr	r0, [r5]
   358dc:	sub	r2, r4, r6
   358e0:	mov	r1, r6
   358e4:	bl	2ef1c <flatcc_builder_append_string@@Base>
   358e8:	cmp	r0, #0
   358ec:	beq	358cc <flatcc_json_parser_build_string@@Base+0xb4>
   358f0:	cmp	r4, sl
   358f4:	mov	r6, sl
   358f8:	beq	3598c <flatcc_json_parser_build_string@@Base+0x174>
   358fc:	mov	r8, sp
   35900:	add	r6, r8, #1
   35904:	ldrb	r0, [r4]
   35908:	cmp	r0, #34	; 0x22
   3590c:	beq	35978 <flatcc_json_parser_build_string@@Base+0x160>
   35910:	mov	r0, r5
   35914:	mov	r1, r4
   35918:	mov	r2, sl
   3591c:	mov	r3, r8
   35920:	bl	33588 <flatcc_json_parser_string_escape@@Base>
   35924:	mov	r7, r0
   35928:	ldr	r0, [r5]
   3592c:	ldrb	r2, [sp]
   35930:	mov	r1, r6
   35934:	bl	2ef1c <flatcc_builder_append_string@@Base>
   35938:	cmp	r0, #0
   3593c:	beq	35980 <flatcc_json_parser_build_string@@Base+0x168>
   35940:	mov	r0, r5
   35944:	mov	r1, r7
   35948:	mov	r2, sl
   3594c:	bl	3342c <flatcc_json_parser_string_part@@Base>
   35950:	cmp	r0, sl
   35954:	beq	35988 <flatcc_json_parser_build_string@@Base+0x170>
   35958:	mov	r4, r0
   3595c:	sub	r2, r0, r7
   35960:	ldr	r0, [r5]
   35964:	mov	r1, r7
   35968:	bl	2ef1c <flatcc_builder_append_string@@Base>
   3596c:	cmp	r0, #0
   35970:	bne	35904 <flatcc_json_parser_build_string@@Base+0xec>
   35974:	b	358cc <flatcc_json_parser_build_string@@Base+0xb4>
   35978:	mov	r6, r4
   3597c:	b	3598c <flatcc_json_parser_build_string@@Base+0x174>
   35980:	mov	r4, r7
   35984:	b	358cc <flatcc_json_parser_build_string@@Base+0xb4>
   35988:	mov	r6, sl
   3598c:	ldr	r0, [r5]
   35990:	bl	31204 <flatcc_builder_end_string@@Base>
   35994:	cmp	r6, sl
   35998:	str	r0, [r9]
   3599c:	beq	359b4 <flatcc_json_parser_build_string@@Base+0x19c>
   359a0:	ldrb	r0, [r6]
   359a4:	cmp	r0, #34	; 0x22
   359a8:	bne	359b4 <flatcc_json_parser_build_string@@Base+0x19c>
   359ac:	add	r4, r6, #1
   359b0:	b	359e0 <flatcc_json_parser_build_string@@Base+0x1c8>
   359b4:	ldr	r0, [r5, #24]
   359b8:	cmp	r0, #0
   359bc:	bne	359dc <flatcc_json_parser_build_string@@Base+0x1c4>
   359c0:	str	r6, [r5, #36]	; 0x24
   359c4:	mov	r0, #20
   359c8:	ldr	r1, [r5, #4]
   359cc:	sub	r1, r6, r1
   359d0:	add	r1, r1, #1
   359d4:	str	r1, [r5, #20]
   359d8:	str	r0, [r5, #24]
   359dc:	mov	r4, sl
   359e0:	mov	r0, r4
   359e4:	sub	sp, fp, #28
   359e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000359ec <flatcc_json_parser_prepare_unions@@Base>:
   359ec:	push	{r4, r5, r6, r7, fp, lr}
   359f0:	add	fp, sp, #16
   359f4:	mov	r6, r0
   359f8:	add	r0, r3, r3, lsl #1
   359fc:	mov	r5, r1
   35a00:	mov	r1, #8
   35a04:	mov	r7, r3
   35a08:	mov	r4, r2
   35a0c:	add	r1, r1, r0, lsl #3
   35a10:	ldr	r0, [r6]
   35a14:	bl	2de80 <flatcc_builder_enter_user_frame@@Base>
   35a18:	mov	r1, r0
   35a1c:	ldr	r0, [fp, #8]
   35a20:	cmp	r1, #0
   35a24:	str	r1, [r0]
   35a28:	beq	35a40 <flatcc_json_parser_prepare_unions@@Base+0x54>
   35a2c:	ldr	r0, [r6]
   35a30:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   35a34:	mov	r4, r5
   35a38:	str	r7, [r0]
   35a3c:	b	35a68 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   35a40:	ldr	r0, [r6, #24]
   35a44:	cmp	r0, #0
   35a48:	bne	35a68 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   35a4c:	str	r5, [r6, #36]	; 0x24
   35a50:	mov	r0, #33	; 0x21
   35a54:	ldr	r1, [r6, #4]
   35a58:	sub	r1, r5, r1
   35a5c:	add	r1, r1, #1
   35a60:	str	r1, [r6, #20]
   35a64:	str	r0, [r6, #24]
   35a68:	mov	r0, r4
   35a6c:	pop	{r4, r5, r6, r7, fp, pc}

00035a70 <flatcc_json_parser_finalize_unions@@Base>:
   35a70:	push	{r4, r5, r6, r7, fp, lr}
   35a74:	add	fp, sp, #16
   35a78:	mov	r6, r0
   35a7c:	ldr	r0, [r0]
   35a80:	mov	r7, r1
   35a84:	mov	r1, r3
   35a88:	mov	r5, r3
   35a8c:	mov	r4, r2
   35a90:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   35a94:	ldr	r0, [r0, #4]
   35a98:	cmp	r0, #0
   35a9c:	beq	35acc <flatcc_json_parser_finalize_unions@@Base+0x5c>
   35aa0:	ldr	r0, [r6, #24]
   35aa4:	cmp	r0, #0
   35aa8:	bne	35ad0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   35aac:	str	r7, [r6, #36]	; 0x24
   35ab0:	mov	r0, #27
   35ab4:	ldr	r1, [r6, #4]
   35ab8:	sub	r1, r7, r1
   35abc:	add	r1, r1, #1
   35ac0:	str	r1, [r6, #20]
   35ac4:	str	r0, [r6, #24]
   35ac8:	b	35ad0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   35acc:	mov	r4, r7
   35ad0:	ldr	r0, [r6]
   35ad4:	mov	r1, r5
   35ad8:	bl	2df8c <flatcc_builder_exit_user_frame_at@@Base>
   35adc:	mov	r0, r4
   35ae0:	pop	{r4, r5, r6, r7, fp, pc}

00035ae4 <flatcc_json_parser_union@@Base>:
   35ae4:	push	{r4, r5, r6, r7, fp, lr}
   35ae8:	add	fp, sp, #16
   35aec:	sub	sp, sp, #16
   35af0:	mov	r6, r1
   35af4:	mov	r5, r0
   35af8:	ldr	r0, [r0]
   35afc:	ldr	r1, [fp, #12]
   35b00:	mov	r7, r3
   35b04:	mov	r4, r2
   35b08:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   35b0c:	add	r2, r0, #8
   35b10:	add	r3, r7, r7, lsl #1
   35b14:	mov	r1, r2
   35b18:	ldr	r7, [r1, r3, lsl #3]!
   35b1c:	cmp	r7, #0
   35b20:	beq	35b50 <flatcc_json_parser_union@@Base+0x6c>
   35b24:	ldr	r0, [r5, #24]
   35b28:	cmp	r0, #0
   35b2c:	bne	35c10 <flatcc_json_parser_union@@Base+0x12c>
   35b30:	mov	r0, #28
   35b34:	str	r6, [r5, #36]	; 0x24
   35b38:	ldr	r1, [r5, #4]
   35b3c:	sub	r1, r6, r1
   35b40:	add	r1, r1, #1
   35b44:	str	r1, [r5, #20]
   35b48:	str	r0, [r5, #24]
   35b4c:	b	35c10 <flatcc_json_parser_union@@Base+0x12c>
   35b50:	add	r2, r2, r3, lsl #3
   35b54:	ldrb	r3, [r2, #12]
   35b58:	cmp	r3, #0
   35b5c:	beq	35bcc <flatcc_json_parser_union@@Base+0xe8>
   35b60:	ldrb	r3, [r2, #13]
   35b64:	cmp	r3, #0
   35b68:	strb	r3, [sp, #8]
   35b6c:	beq	35c04 <flatcc_json_parser_union@@Base+0x120>
   35b70:	ldr	r1, [r0, #4]
   35b74:	ldr	r7, [fp, #16]
   35b78:	mov	r2, r4
   35b7c:	sub	r1, r1, #1
   35b80:	str	r1, [r0, #4]
   35b84:	add	r0, sp, #8
   35b88:	mov	r1, r6
   35b8c:	add	r0, r0, #4
   35b90:	str	r0, [sp]
   35b94:	mov	r0, r5
   35b98:	blx	r7
   35b9c:	cmp	r0, r4
   35ba0:	beq	35c10 <flatcc_json_parser_union@@Base+0x12c>
   35ba4:	mov	r6, r0
   35ba8:	ldr	r1, [fp, #8]
   35bac:	ldr	r0, [r5]
   35bb0:	ldr	r2, [sp, #8]
   35bb4:	ldr	r3, [sp, #12]
   35bb8:	bl	30610 <flatcc_builder_table_add_union@@Base>
   35bbc:	cmp	r0, #0
   35bc0:	bne	35b24 <flatcc_json_parser_union@@Base+0x40>
   35bc4:	mov	r4, r6
   35bc8:	b	35c10 <flatcc_json_parser_union@@Base+0x12c>
   35bcc:	ldr	r3, [r0, #4]
   35bd0:	add	r3, r3, #1
   35bd4:	str	r3, [r0, #4]
   35bd8:	ldr	r0, [r5, #16]
   35bdc:	str	r0, [r2, #8]
   35be0:	ldr	r0, [r5, #4]
   35be4:	str	r0, [r2, #4]
   35be8:	str	r6, [r1]
   35bec:	mov	r0, r5
   35bf0:	mov	r1, r6
   35bf4:	mov	r2, r4
   35bf8:	bl	33d68 <flatcc_json_parser_generic_json@@Base>
   35bfc:	mov	r4, r0
   35c00:	b	35c10 <flatcc_json_parser_union@@Base+0x12c>
   35c04:	ldr	r0, [r5, #24]
   35c08:	cmp	r0, #0
   35c0c:	beq	35c1c <flatcc_json_parser_union@@Base+0x138>
   35c10:	mov	r0, r4
   35c14:	sub	sp, fp, #16
   35c18:	pop	{r4, r5, r6, r7, fp, pc}
   35c1c:	mov	r0, #25
   35c20:	b	35b34 <flatcc_json_parser_union@@Base+0x50>

00035c24 <flatcc_json_parser_union_type@@Base>:
   35c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35c28:	add	fp, sp, #28
   35c2c:	sub	sp, sp, #28
   35c30:	mov	r7, r1
   35c34:	mov	r5, r0
   35c38:	ldr	r0, [r0]
   35c3c:	ldr	r1, [fp, #12]
   35c40:	mov	r4, r3
   35c44:	mov	r8, r2
   35c48:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   35c4c:	add	sl, r4, r4, lsl #1
   35c50:	add	r2, r0, #8
   35c54:	mov	r6, r0
   35c58:	str	r8, [sp, #8]
   35c5c:	add	r9, r2, sl, lsl #3
   35c60:	mov	r0, r9
   35c64:	ldrb	r1, [r0, #12]!
   35c68:	cmp	r1, #0
   35c6c:	beq	35ca8 <flatcc_json_parser_union_type@@Base+0x84>
   35c70:	ldr	r0, [r5, #24]
   35c74:	cmp	r0, #0
   35c78:	bne	35c98 <flatcc_json_parser_union_type@@Base+0x74>
   35c7c:	str	r7, [r5, #36]	; 0x24
   35c80:	mov	r0, #28
   35c84:	ldr	r1, [r5, #4]
   35c88:	sub	r1, r7, r1
   35c8c:	add	r1, r1, #1
   35c90:	str	r1, [r5, #20]
   35c94:	str	r0, [r5, #24]
   35c98:	ldr	r3, [sp, #8]
   35c9c:	mov	r0, r3
   35ca0:	sub	sp, fp, #28
   35ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35ca8:	mov	r1, #1
   35cac:	mov	r4, r9
   35cb0:	str	r2, [sp, #4]
   35cb4:	cmp	r7, r8
   35cb8:	mov	r2, r8
   35cbc:	strb	r1, [r0]
   35cc0:	mov	r0, #0
   35cc4:	str	r0, [sp, #20]
   35cc8:	str	r0, [sp, #16]
   35ccc:	str	r0, [sp, #12]
   35cd0:	strb	r0, [r4, #13]!
   35cd4:	beq	35d78 <flatcc_json_parser_union_type@@Base+0x154>
   35cd8:	add	r0, sp, #16
   35cdc:	add	r3, sp, #12
   35ce0:	mov	r1, r7
   35ce4:	str	r0, [sp]
   35ce8:	mov	r0, r5
   35cec:	bl	352ec <flatcc_json_parser_integer@@Base>
   35cf0:	ldr	r2, [sp, #8]
   35cf4:	cmp	r0, r7
   35cf8:	beq	35d78 <flatcc_json_parser_union_type@@Base+0x154>
   35cfc:	ldr	r1, [sp, #12]
   35d00:	cmp	r1, #0
   35d04:	beq	35d20 <flatcc_json_parser_union_type@@Base+0xfc>
   35d08:	ldr	r1, [r5, #24]
   35d0c:	mov	r3, r2
   35d10:	cmp	r1, #0
   35d14:	bne	35d70 <flatcc_json_parser_union_type@@Base+0x14c>
   35d18:	mov	r1, #8
   35d1c:	b	35d48 <flatcc_json_parser_union_type@@Base+0x124>
   35d20:	ldr	r1, [sp, #16]
   35d24:	ldr	ip, [sp, #20]
   35d28:	subs	r3, r1, #256	; 0x100
   35d2c:	sbcs	r3, ip, #0
   35d30:	bcc	35d68 <flatcc_json_parser_union_type@@Base+0x144>
   35d34:	ldr	r1, [r5, #24]
   35d38:	mov	r3, r2
   35d3c:	cmp	r1, #0
   35d40:	bne	35d70 <flatcc_json_parser_union_type@@Base+0x14c>
   35d44:	mov	r1, #7
   35d48:	str	r0, [r5, #36]	; 0x24
   35d4c:	ldr	r3, [r5, #4]
   35d50:	sub	r0, r0, r3
   35d54:	mov	r3, r2
   35d58:	add	r0, r0, #1
   35d5c:	str	r0, [r5, #20]
   35d60:	str	r1, [r5, #24]
   35d64:	b	35d70 <flatcc_json_parser_union_type@@Base+0x14c>
   35d68:	mov	r3, r0
   35d6c:	strb	r1, [r4]
   35d70:	cmp	r3, r7
   35d74:	bne	35d94 <flatcc_json_parser_union_type@@Base+0x170>
   35d78:	ldr	r3, [fp, #16]
   35d7c:	mov	r0, r5
   35d80:	mov	r1, r7
   35d84:	str	r4, [sp]
   35d88:	bl	35e84 <flatcc_json_parser_union_type@@Base+0x260>
   35d8c:	ldr	r2, [sp, #8]
   35d90:	mov	r3, r0
   35d94:	ldr	r0, [sp, #4]
   35d98:	ldr	r1, [r0, sl, lsl #3]
   35d9c:	cmp	r1, #0
   35da0:	beq	35e3c <flatcc_json_parser_union_type@@Base+0x218>
   35da4:	ldr	r0, [r6, #4]
   35da8:	cmp	r0, #0
   35dac:	beq	35e64 <flatcc_json_parser_union_type@@Base+0x240>
   35db0:	sub	r0, r0, #1
   35db4:	mov	sl, r3
   35db8:	ldr	r7, [fp, #20]
   35dbc:	str	r0, [r6, #4]
   35dc0:	ldr	r0, [r9, #8]
   35dc4:	ldr	r8, [r5, #4]
   35dc8:	ldr	r6, [r5, #16]
   35dcc:	str	r0, [r5, #16]
   35dd0:	ldr	r0, [r9, #4]
   35dd4:	str	r0, [r5, #4]
   35dd8:	add	r0, sp, #16
   35ddc:	ldrb	r3, [r4]
   35de0:	add	r0, r0, #4
   35de4:	str	r0, [sp]
   35de8:	mov	r0, r5
   35dec:	strb	r3, [sp, #16]
   35df0:	blx	r7
   35df4:	ldr	r3, [sp, #8]
   35df8:	cmp	r0, r3
   35dfc:	beq	35c9c <flatcc_json_parser_union_type@@Base+0x78>
   35e00:	ldr	r1, [fp, #8]
   35e04:	ldr	r0, [r5]
   35e08:	ldr	r2, [sp, #16]
   35e0c:	ldr	r3, [sp, #20]
   35e10:	bl	30610 <flatcc_builder_table_add_union@@Base>
   35e14:	cmp	r0, #0
   35e18:	beq	35e54 <flatcc_json_parser_union_type@@Base+0x230>
   35e1c:	ldr	r0, [r5, #24]
   35e20:	cmp	r0, #0
   35e24:	bne	35c98 <flatcc_json_parser_union_type@@Base+0x74>
   35e28:	str	sl, [r5, #36]	; 0x24
   35e2c:	mov	r0, #28
   35e30:	ldr	r1, [r5, #4]
   35e34:	sub	r1, sl, r1
   35e38:	b	35c8c <flatcc_json_parser_union_type@@Base+0x68>
   35e3c:	ldrb	r0, [r4]
   35e40:	ldr	r1, [r6, #4]
   35e44:	cmp	r0, #0
   35e48:	addne	r1, r1, #1
   35e4c:	str	r1, [r6, #4]
   35e50:	b	35c9c <flatcc_json_parser_union_type@@Base+0x78>
   35e54:	mov	r3, sl
   35e58:	str	r8, [r5, #4]
   35e5c:	str	r6, [r5, #16]
   35e60:	b	35c9c <flatcc_json_parser_union_type@@Base+0x78>
   35e64:	movw	r0, #37452	; 0x924c
   35e68:	movw	r1, #37467	; 0x925b
   35e6c:	movw	r3, #37541	; 0x92a5
   35e70:	movw	r2, #965	; 0x3c5
   35e74:	movt	r0, #4
   35e78:	movt	r1, #4
   35e7c:	movt	r3, #4
   35e80:	bl	14f40 <__assert_fail@plt>
   35e84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35e88:	add	fp, sp, #28
   35e8c:	sub	sp, sp, #36	; 0x24
   35e90:	mov	r4, r2
   35e94:	mov	r2, r1
   35e98:	ldr	r1, [fp, #8]
   35e9c:	mov	r5, r0
   35ea0:	mov	r0, #0
   35ea4:	mov	r6, r3
   35ea8:	cmp	r2, r4
   35eac:	strb	r0, [r1]
   35eb0:	beq	35f14 <flatcc_json_parser_union_type@@Base+0x2f0>
   35eb4:	ldrb	r0, [r2]
   35eb8:	cmp	r0, #46	; 0x2e
   35ebc:	beq	35ed8 <flatcc_json_parser_union_type@@Base+0x2b4>
   35ec0:	cmp	r0, #34	; 0x22
   35ec4:	bne	35f0c <flatcc_json_parser_union_type@@Base+0x2e8>
   35ec8:	mov	r0, #0
   35ecc:	add	r1, r2, #1
   35ed0:	str	r0, [r5, #12]
   35ed4:	b	35f18 <flatcc_json_parser_union_type@@Base+0x2f4>
   35ed8:	ldr	r0, [r5, #24]
   35edc:	mov	r1, r4
   35ee0:	cmp	r0, #0
   35ee4:	bne	35f18 <flatcc_json_parser_union_type@@Base+0x2f4>
   35ee8:	str	r2, [r5, #36]	; 0x24
   35eec:	mov	r0, #5
   35ef0:	ldr	r1, [r5, #4]
   35ef4:	sub	r1, r2, r1
   35ef8:	add	r1, r1, #1
   35efc:	str	r1, [r5, #20]
   35f00:	str	r0, [r5, #24]
   35f04:	mov	r1, r4
   35f08:	b	35f18 <flatcc_json_parser_union_type@@Base+0x2f4>
   35f0c:	mov	r0, #1
   35f10:	str	r0, [r5, #12]
   35f14:	mov	r1, r2
   35f18:	ldr	r0, [r5, #12]
   35f1c:	cmp	r0, #0
   35f20:	beq	35f2c <flatcc_json_parser_union_type@@Base+0x308>
   35f24:	mov	r7, r1
   35f28:	b	35f68 <flatcc_json_parser_union_type@@Base+0x344>
   35f2c:	sub	r0, r4, r1
   35f30:	cmp	r0, #2
   35f34:	blt	35f58 <flatcc_json_parser_union_type@@Base+0x334>
   35f38:	ldrb	r0, [r1]
   35f3c:	cmp	r0, #32
   35f40:	bhi	35f24 <flatcc_json_parser_union_type@@Base+0x300>
   35f44:	bne	35f58 <flatcc_json_parser_union_type@@Base+0x334>
   35f48:	mov	r7, r1
   35f4c:	ldrb	r0, [r7, #1]!
   35f50:	cmp	r0, #32
   35f54:	bhi	35f68 <flatcc_json_parser_union_type@@Base+0x344>
   35f58:	mov	r0, r5
   35f5c:	mov	r2, r4
   35f60:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   35f64:	mov	r7, r0
   35f68:	cmp	r7, r4
   35f6c:	beq	36040 <flatcc_json_parser_union_type@@Base+0x41c>
   35f70:	add	sl, r6, #4
   35f74:	add	r8, sp, #24
   35f78:	add	r9, sp, #20
   35f7c:	str	r6, [sp, #12]
   35f80:	str	sl, [sp, #8]
   35f84:	ldr	r6, [r6]
   35f88:	add	r0, sp, #16
   35f8c:	mov	r1, r7
   35f90:	mov	r2, r4
   35f94:	mov	r3, r9
   35f98:	str	r8, [sp]
   35f9c:	str	r0, [sp, #4]
   35fa0:	mov	r0, r5
   35fa4:	blx	r6
   35fa8:	cmp	r0, r4
   35fac:	beq	36040 <flatcc_json_parser_union_type@@Base+0x41c>
   35fb0:	cmp	r0, r7
   35fb4:	bne	35fc8 <flatcc_json_parser_union_type@@Base+0x3a4>
   35fb8:	ldr	r6, [sl], #4
   35fbc:	cmp	r6, #0
   35fc0:	bne	35f88 <flatcc_json_parser_union_type@@Base+0x364>
   35fc4:	b	36018 <flatcc_json_parser_union_type@@Base+0x3f4>
   35fc8:	ldr	r1, [sp, #20]
   35fcc:	cmp	r1, #0
   35fd0:	bne	3604c <flatcc_json_parser_union_type@@Base+0x428>
   35fd4:	ldr	r1, [sp, #24]
   35fd8:	ldr	r2, [sp, #28]
   35fdc:	subs	r3, r1, #256	; 0x100
   35fe0:	sbcs	r2, r2, #0
   35fe4:	bcs	36060 <flatcc_json_parser_union_type@@Base+0x43c>
   35fe8:	ldr	r2, [fp, #8]
   35fec:	ldr	r6, [sp, #12]
   35ff0:	ldr	sl, [sp, #8]
   35ff4:	mov	r7, r0
   35ff8:	mov	r3, r2
   35ffc:	ldrb	r2, [r2]
   36000:	add	r1, r2, r1
   36004:	strb	r1, [r3]
   36008:	ldr	r1, [sp, #16]
   3600c:	cmp	r1, #0
   36010:	bne	35f84 <flatcc_json_parser_union_type@@Base+0x360>
   36014:	b	36044 <flatcc_json_parser_union_type@@Base+0x420>
   36018:	ldr	r0, [r5, #24]
   3601c:	cmp	r0, #0
   36020:	bne	36040 <flatcc_json_parser_union_type@@Base+0x41c>
   36024:	str	r7, [r5, #36]	; 0x24
   36028:	mov	r0, #23
   3602c:	ldr	r1, [r5, #4]
   36030:	sub	r1, r7, r1
   36034:	add	r1, r1, #1
   36038:	str	r1, [r5, #20]
   3603c:	str	r0, [r5, #24]
   36040:	mov	r0, r4
   36044:	sub	sp, fp, #28
   36048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3604c:	ldr	r1, [r5, #24]
   36050:	cmp	r1, #0
   36054:	bne	36040 <flatcc_json_parser_union_type@@Base+0x41c>
   36058:	mov	r1, #8
   3605c:	b	36070 <flatcc_json_parser_union_type@@Base+0x44c>
   36060:	ldr	r1, [r5, #24]
   36064:	cmp	r1, #0
   36068:	bne	36040 <flatcc_json_parser_union_type@@Base+0x41c>
   3606c:	mov	r1, #7
   36070:	str	r0, [r5, #36]	; 0x24
   36074:	ldr	r2, [r5, #4]
   36078:	sub	r0, r0, r2
   3607c:	add	r0, r0, #1
   36080:	str	r0, [r5, #20]
   36084:	str	r1, [r5, #24]
   36088:	b	36040 <flatcc_json_parser_union_type@@Base+0x41c>

0003608c <flatcc_json_parser_union_vector@@Base>:
   3608c:	push	{r4, r5, r6, r7, fp, lr}
   36090:	add	fp, sp, #16
   36094:	sub	sp, sp, #16
   36098:	mov	r6, r1
   3609c:	mov	r5, r0
   360a0:	ldr	r0, [r0]
   360a4:	ldr	r1, [fp, #12]
   360a8:	mov	r7, r3
   360ac:	mov	r4, r2
   360b0:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   360b4:	add	r2, r0, #8
   360b8:	add	r3, r7, r7, lsl #1
   360bc:	mov	r1, r2
   360c0:	ldr	r7, [r1, r3, lsl #3]!
   360c4:	cmp	r7, #0
   360c8:	beq	360fc <flatcc_json_parser_union_vector@@Base+0x70>
   360cc:	ldr	r0, [r5, #24]
   360d0:	cmp	r0, #0
   360d4:	bne	360f4 <flatcc_json_parser_union_vector@@Base+0x68>
   360d8:	str	r6, [r5, #36]	; 0x24
   360dc:	mov	r0, #28
   360e0:	ldr	r1, [r5, #4]
   360e4:	sub	r1, r6, r1
   360e8:	add	r1, r1, #1
   360ec:	str	r1, [r5, #20]
   360f0:	str	r0, [r5, #24]
   360f4:	mov	r0, r4
   360f8:	b	36140 <flatcc_json_parser_union_vector@@Base+0xb4>
   360fc:	add	r2, r2, r3, lsl #3
   36100:	ldr	r3, [r0, #4]
   36104:	ldrb	r7, [r2, #12]
   36108:	cmp	r7, #0
   3610c:	beq	36148 <flatcc_json_parser_union_vector@@Base+0xbc>
   36110:	sub	r3, r3, #1
   36114:	ldr	r1, [fp, #16]
   36118:	ldr	r7, [fp, #8]
   3611c:	str	r3, [r0, #4]
   36120:	ldr	r0, [r2, #16]
   36124:	ldr	r3, [r2, #20]
   36128:	mov	r2, r4
   3612c:	stm	sp, {r0, r7}
   36130:	str	r1, [sp, #8]
   36134:	mov	r0, r5
   36138:	mov	r1, r6
   3613c:	bl	3617c <flatcc_json_parser_union_vector@@Base+0xf0>
   36140:	sub	sp, fp, #16
   36144:	pop	{r4, r5, r6, r7, fp, pc}
   36148:	add	r3, r3, #1
   3614c:	str	r3, [r0, #4]
   36150:	ldr	r0, [r5, #16]
   36154:	str	r0, [r2, #8]
   36158:	ldr	r0, [r5, #4]
   3615c:	str	r0, [r2, #4]
   36160:	str	r6, [r1]
   36164:	mov	r0, r5
   36168:	mov	r1, r6
   3616c:	mov	r2, r4
   36170:	sub	sp, fp, #16
   36174:	pop	{r4, r5, r6, r7, fp, lr}
   36178:	b	33d68 <flatcc_json_parser_generic_json@@Base>
   3617c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36180:	add	fp, sp, #28
   36184:	sub	sp, sp, #12
   36188:	mov	r5, r0
   3618c:	mov	r0, #0
   36190:	mov	r8, r3
   36194:	mov	r6, r2
   36198:	mov	r7, r1
   3619c:	str	r0, [sp, #8]
   361a0:	ldr	r0, [r5]
   361a4:	bl	2f298 <flatcc_builder_start_offset_vector@@Base>
   361a8:	cmp	r0, #0
   361ac:	beq	361d0 <flatcc_json_parser_union_vector@@Base+0x144>
   361b0:	ldr	r0, [r5, #24]
   361b4:	cmp	r0, #0
   361b8:	bne	36440 <flatcc_json_parser_union_vector@@Base+0x3b4>
   361bc:	str	r7, [r5, #36]	; 0x24
   361c0:	mov	r0, #33	; 0x21
   361c4:	ldr	r1, [r5, #4]
   361c8:	sub	r1, r7, r1
   361cc:	b	36434 <flatcc_json_parser_union_vector@@Base+0x3a8>
   361d0:	ldr	sl, [fp, #8]
   361d4:	cmp	r7, r6
   361d8:	beq	3620c <flatcc_json_parser_union_vector@@Base+0x180>
   361dc:	ldrb	r0, [r7]
   361e0:	cmp	r0, #91	; 0x5b
   361e4:	bne	3620c <flatcc_json_parser_union_vector@@Base+0x180>
   361e8:	add	r1, r7, #1
   361ec:	sub	r0, r6, r1
   361f0:	cmp	r0, #2
   361f4:	blt	36250 <flatcc_json_parser_union_vector@@Base+0x1c4>
   361f8:	ldrb	r0, [r1]
   361fc:	cmp	r0, #32
   36200:	bls	36240 <flatcc_json_parser_union_vector@@Base+0x1b4>
   36204:	mov	r7, r1
   36208:	b	36260 <flatcc_json_parser_union_vector@@Base+0x1d4>
   3620c:	ldr	r0, [r5, #24]
   36210:	mov	r9, r6
   36214:	cmp	r0, #0
   36218:	bne	36410 <flatcc_json_parser_union_vector@@Base+0x384>
   3621c:	str	r7, [r5, #36]	; 0x24
   36220:	mov	r0, #22
   36224:	mov	r9, r6
   36228:	ldr	r1, [r5, #4]
   3622c:	sub	r1, r7, r1
   36230:	add	r1, r1, #1
   36234:	str	r1, [r5, #20]
   36238:	str	r0, [r5, #24]
   3623c:	b	36410 <flatcc_json_parser_union_vector@@Base+0x384>
   36240:	bne	36250 <flatcc_json_parser_union_vector@@Base+0x1c4>
   36244:	ldrb	r0, [r7, #2]!
   36248:	cmp	r0, #32
   3624c:	bhi	36260 <flatcc_json_parser_union_vector@@Base+0x1d4>
   36250:	mov	r0, r5
   36254:	mov	r2, r6
   36258:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   3625c:	mov	r7, r0
   36260:	cmp	r7, r6
   36264:	mov	r4, r6
   36268:	beq	362a0 <flatcc_json_parser_union_vector@@Base+0x214>
   3626c:	ldrb	r0, [r7]
   36270:	cmp	r0, #93	; 0x5d
   36274:	bne	3629c <flatcc_json_parser_union_vector@@Base+0x210>
   36278:	add	r1, r7, #1
   3627c:	sub	r0, r6, r1
   36280:	cmp	r0, #2
   36284:	blt	36400 <flatcc_json_parser_union_vector@@Base+0x374>
   36288:	ldrb	r0, [r1]
   3628c:	cmp	r0, #32
   36290:	bls	363ec <flatcc_json_parser_union_vector@@Base+0x360>
   36294:	mov	r9, r1
   36298:	b	36410 <flatcc_json_parser_union_vector@@Base+0x384>
   3629c:	mov	r4, r7
   362a0:	cmp	sl, #0
   362a4:	beq	363cc <flatcc_json_parser_union_vector@@Base+0x340>
   362a8:	add	r0, r6, #1
   362ac:	mov	sl, #0
   362b0:	add	r9, sp, #8
   362b4:	str	r0, [sp, #4]
   362b8:	ldr	r0, [r5]
   362bc:	mov	r1, r8
   362c0:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   362c4:	ldrb	r3, [r0, -sl]
   362c8:	ldr	r7, [fp, #16]
   362cc:	mov	r0, r5
   362d0:	mov	r1, r4
   362d4:	mov	r2, r6
   362d8:	str	r9, [sp]
   362dc:	blx	r7
   362e0:	cmp	r0, r6
   362e4:	beq	36440 <flatcc_json_parser_union_vector@@Base+0x3b4>
   362e8:	mov	r7, r0
   362ec:	ldr	r0, [r5]
   362f0:	mov	r1, #1
   362f4:	bl	2ec6c <flatcc_builder_extend_offset_vector@@Base>
   362f8:	cmp	r0, #0
   362fc:	beq	361b0 <flatcc_json_parser_union_vector@@Base+0x124>
   36300:	ldr	r1, [sp, #8]
   36304:	str	r1, [r0]
   36308:	sub	r0, r6, r7
   3630c:	cmp	r0, #2
   36310:	blt	3633c <flatcc_json_parser_union_vector@@Base+0x2b0>
   36314:	ldrb	r0, [r7]
   36318:	cmp	r0, #32
   3631c:	bls	36328 <flatcc_json_parser_union_vector@@Base+0x29c>
   36320:	mov	r4, r7
   36324:	b	36350 <flatcc_json_parser_union_vector@@Base+0x2c4>
   36328:	bne	3633c <flatcc_json_parser_union_vector@@Base+0x2b0>
   3632c:	mov	r4, r7
   36330:	ldrb	r0, [r4, #1]!
   36334:	cmp	r0, #32
   36338:	bhi	36350 <flatcc_json_parser_union_vector@@Base+0x2c4>
   3633c:	mov	r0, r5
   36340:	mov	r1, r7
   36344:	mov	r2, r6
   36348:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   3634c:	mov	r4, r0
   36350:	cmp	r4, r6
   36354:	beq	364cc <flatcc_json_parser_union_vector@@Base+0x440>
   36358:	ldrb	r0, [r4]
   3635c:	cmp	r0, #44	; 0x2c
   36360:	bne	3644c <flatcc_json_parser_union_vector@@Base+0x3c0>
   36364:	add	r1, r4, #1
   36368:	sub	r0, r6, r1
   3636c:	cmp	r0, #2
   36370:	blt	36398 <flatcc_json_parser_union_vector@@Base+0x30c>
   36374:	ldrb	r0, [r1]
   36378:	cmp	r0, #32
   3637c:	bls	36388 <flatcc_json_parser_union_vector@@Base+0x2fc>
   36380:	mov	r4, r1
   36384:	b	363a8 <flatcc_json_parser_union_vector@@Base+0x31c>
   36388:	bne	36398 <flatcc_json_parser_union_vector@@Base+0x30c>
   3638c:	ldrb	r0, [r4, #2]!
   36390:	cmp	r0, #32
   36394:	bhi	363a8 <flatcc_json_parser_union_vector@@Base+0x31c>
   36398:	mov	r0, r5
   3639c:	mov	r2, r6
   363a0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   363a4:	mov	r4, r0
   363a8:	cmp	r4, r6
   363ac:	beq	36478 <flatcc_json_parser_union_vector@@Base+0x3ec>
   363b0:	ldrb	r0, [r4]
   363b4:	cmp	r0, #93	; 0x5d
   363b8:	beq	36454 <flatcc_json_parser_union_vector@@Base+0x3c8>
   363bc:	ldr	r0, [fp, #8]
   363c0:	sub	sl, sl, #1
   363c4:	adds	r0, r0, sl
   363c8:	bne	362b8 <flatcc_json_parser_union_vector@@Base+0x22c>
   363cc:	ldr	r0, [r5, #24]
   363d0:	cmp	r0, #0
   363d4:	bne	36440 <flatcc_json_parser_union_vector@@Base+0x3b4>
   363d8:	str	r4, [r5, #36]	; 0x24
   363dc:	mov	r0, #30
   363e0:	ldr	r1, [r5, #4]
   363e4:	sub	r1, r4, r1
   363e8:	b	36434 <flatcc_json_parser_union_vector@@Base+0x3a8>
   363ec:	bne	36400 <flatcc_json_parser_union_vector@@Base+0x374>
   363f0:	ldrb	r0, [r7, #2]!
   363f4:	mov	r9, r7
   363f8:	cmp	r0, #32
   363fc:	bhi	36410 <flatcc_json_parser_union_vector@@Base+0x384>
   36400:	mov	r0, r5
   36404:	mov	r2, r6
   36408:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   3640c:	mov	r9, r0
   36410:	cmp	sl, #0
   36414:	beq	36508 <flatcc_json_parser_union_vector@@Base+0x47c>
   36418:	ldr	r0, [r5, #24]
   3641c:	cmp	r0, #0
   36420:	bne	36440 <flatcc_json_parser_union_vector@@Base+0x3b4>
   36424:	str	r9, [r5, #36]	; 0x24
   36428:	mov	r0, #30
   3642c:	ldr	r1, [r5, #4]
   36430:	sub	r1, r9, r1
   36434:	add	r1, r1, #1
   36438:	str	r1, [r5, #20]
   3643c:	str	r0, [r5, #24]
   36440:	mov	r0, r6
   36444:	sub	sp, fp, #28
   36448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3644c:	cmp	r0, #93	; 0x5d
   36450:	bne	364a0 <flatcc_json_parser_union_vector@@Base+0x414>
   36454:	add	r1, r4, #1
   36458:	sub	r0, r6, r1
   3645c:	cmp	r0, #2
   36460:	blt	364e8 <flatcc_json_parser_union_vector@@Base+0x45c>
   36464:	ldrb	r0, [r1]
   36468:	cmp	r0, #32
   3646c:	bls	364d4 <flatcc_json_parser_union_vector@@Base+0x448>
   36470:	mov	r9, r1
   36474:	b	364f8 <flatcc_json_parser_union_vector@@Base+0x46c>
   36478:	ldr	r0, [r5, #24]
   3647c:	mov	r9, r6
   36480:	cmp	r0, #0
   36484:	bne	364f8 <flatcc_json_parser_union_vector@@Base+0x46c>
   36488:	str	r6, [r5, #36]	; 0x24
   3648c:	ldr	r2, [sp, #4]
   36490:	mov	r0, #9
   36494:	ldr	r1, [r5, #4]
   36498:	sub	r1, r2, r1
   3649c:	b	364c4 <flatcc_json_parser_union_vector@@Base+0x438>
   364a0:	ldr	r0, [r5, #24]
   364a4:	mov	r9, r6
   364a8:	cmp	r0, #0
   364ac:	bne	364f8 <flatcc_json_parser_union_vector@@Base+0x46c>
   364b0:	str	r4, [r5, #36]	; 0x24
   364b4:	mov	r0, #9
   364b8:	ldr	r1, [r5, #4]
   364bc:	sub	r1, r4, r1
   364c0:	add	r1, r1, #1
   364c4:	str	r1, [r5, #20]
   364c8:	str	r0, [r5, #24]
   364cc:	mov	r9, r6
   364d0:	b	364f8 <flatcc_json_parser_union_vector@@Base+0x46c>
   364d4:	bne	364e8 <flatcc_json_parser_union_vector@@Base+0x45c>
   364d8:	ldrb	r0, [r4, #2]!
   364dc:	mov	r9, r4
   364e0:	cmp	r0, #32
   364e4:	bhi	364f8 <flatcc_json_parser_union_vector@@Base+0x46c>
   364e8:	mov	r0, r5
   364ec:	mov	r2, r6
   364f0:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   364f4:	mov	r9, r0
   364f8:	ldr	r0, [fp, #8]
   364fc:	add	r0, r0, sl
   36500:	cmp	r0, #1
   36504:	bne	36418 <flatcc_json_parser_union_vector@@Base+0x38c>
   36508:	ldr	r0, [r5]
   3650c:	mov	r1, r8
   36510:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   36514:	mov	r1, r0
   36518:	ldr	r0, [r5]
   3651c:	bl	30524 <flatcc_builder_end_offset_vector_for_unions@@Base>
   36520:	cmp	r0, #0
   36524:	str	r0, [sp, #8]
   36528:	beq	36550 <flatcc_json_parser_union_vector@@Base+0x4c4>
   3652c:	ldr	r1, [fp, #12]
   36530:	ldr	r0, [r5]
   36534:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   36538:	cmp	r0, #0
   3653c:	beq	36550 <flatcc_json_parser_union_vector@@Base+0x4c4>
   36540:	ldr	r1, [sp, #8]
   36544:	mov	r6, r9
   36548:	str	r1, [r0]
   3654c:	b	36440 <flatcc_json_parser_union_vector@@Base+0x3b4>
   36550:	mov	r7, r9
   36554:	b	361b0 <flatcc_json_parser_union_vector@@Base+0x124>

00036558 <flatcc_json_parser_union_type_vector@@Base>:
   36558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3655c:	add	fp, sp, #28
   36560:	sub	sp, sp, #44	; 0x2c
   36564:	mov	r7, r1
   36568:	mov	r5, r0
   3656c:	ldr	r0, [r0]
   36570:	ldr	r1, [fp, #12]
   36574:	mov	r4, r3
   36578:	mov	r6, r2
   3657c:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   36580:	add	sl, r4, r4, lsl #1
   36584:	add	r0, r0, #8
   36588:	add	r9, r0, sl, lsl #3
   3658c:	mov	r0, r9
   36590:	ldrb	r1, [r0, #12]!
   36594:	cmp	r1, #0
   36598:	beq	365bc <flatcc_json_parser_union_type_vector@@Base+0x64>
   3659c:	ldr	r0, [r5, #24]
   365a0:	cmp	r0, #0
   365a4:	bne	36a64 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   365a8:	mov	r0, #28
   365ac:	str	r7, [r5, #36]	; 0x24
   365b0:	ldr	r1, [r5, #4]
   365b4:	sub	r1, r7, r1
   365b8:	b	36a58 <flatcc_json_parser_union_type_vector@@Base+0x500>
   365bc:	mov	r1, #1
   365c0:	mov	r2, #1
   365c4:	mvn	r3, #0
   365c8:	strb	r1, [r0]
   365cc:	mov	r1, #1
   365d0:	ldr	r0, [r5]
   365d4:	bl	2f20c <flatcc_builder_start_vector@@Base>
   365d8:	cmp	r0, #0
   365dc:	beq	365e8 <flatcc_json_parser_union_type_vector@@Base+0x90>
   365e0:	mov	r4, r7
   365e4:	b	36a3c <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   365e8:	cmp	r7, r6
   365ec:	beq	36620 <flatcc_json_parser_union_type_vector@@Base+0xc8>
   365f0:	ldrb	r0, [r7]
   365f4:	cmp	r0, #91	; 0x5b
   365f8:	bne	36620 <flatcc_json_parser_union_type_vector@@Base+0xc8>
   365fc:	add	r1, r7, #1
   36600:	sub	r0, r6, r1
   36604:	cmp	r0, #2
   36608:	blt	36664 <flatcc_json_parser_union_type_vector@@Base+0x10c>
   3660c:	ldrb	r0, [r1]
   36610:	cmp	r0, #32
   36614:	bls	36654 <flatcc_json_parser_union_type_vector@@Base+0xfc>
   36618:	mov	r7, r1
   3661c:	b	36674 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   36620:	ldr	r0, [r5, #24]
   36624:	mov	r8, r6
   36628:	cmp	r0, #0
   3662c:	bne	36938 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36630:	str	r7, [r5, #36]	; 0x24
   36634:	mov	r0, #22
   36638:	ldr	r1, [r5, #4]
   3663c:	sub	r1, r7, r1
   36640:	add	r1, r1, #1
   36644:	str	r1, [r5, #20]
   36648:	str	r0, [r5, #24]
   3664c:	mov	r8, r6
   36650:	b	36938 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36654:	bne	36664 <flatcc_json_parser_union_type_vector@@Base+0x10c>
   36658:	ldrb	r0, [r7, #2]!
   3665c:	cmp	r0, #32
   36660:	bhi	36674 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   36664:	mov	r0, r5
   36668:	mov	r2, r6
   3666c:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   36670:	mov	r7, r0
   36674:	cmp	r7, r6
   36678:	mov	r4, r6
   3667c:	beq	366b4 <flatcc_json_parser_union_type_vector@@Base+0x15c>
   36680:	ldrb	r0, [r7]
   36684:	cmp	r0, #93	; 0x5d
   36688:	bne	366b0 <flatcc_json_parser_union_type_vector@@Base+0x158>
   3668c:	add	r1, r7, #1
   36690:	sub	r0, r6, r1
   36694:	cmp	r0, #2
   36698:	blt	36928 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   3669c:	ldrb	r0, [r1]
   366a0:	cmp	r0, #32
   366a4:	bls	368dc <flatcc_json_parser_union_type_vector@@Base+0x384>
   366a8:	mov	r8, r1
   366ac:	b	36938 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   366b0:	mov	r4, r7
   366b4:	ldr	r0, [r5]
   366b8:	mov	r1, #1
   366bc:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   366c0:	cmp	r0, #0
   366c4:	beq	36a3c <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   366c8:	mov	r1, r0
   366cc:	add	r0, r6, #1
   366d0:	str	r0, [sp, #16]
   366d4:	mov	r8, #0
   366d8:	cmp	r4, r6
   366dc:	str	r1, [sp, #20]
   366e0:	str	r8, [sp, #36]	; 0x24
   366e4:	str	r8, [sp, #32]
   366e8:	strb	r8, [sp, #27]
   366ec:	str	r8, [sp, #28]
   366f0:	beq	36794 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   366f4:	add	r0, sp, #32
   366f8:	mov	r1, r4
   366fc:	mov	r2, r6
   36700:	add	r3, sp, #28
   36704:	str	r0, [sp]
   36708:	mov	r0, r5
   3670c:	bl	352ec <flatcc_json_parser_integer@@Base>
   36710:	cmp	r0, r4
   36714:	beq	36750 <flatcc_json_parser_union_type_vector@@Base+0x1f8>
   36718:	mov	r7, r0
   3671c:	ldr	r0, [sp, #28]
   36720:	cmp	r0, #0
   36724:	beq	36758 <flatcc_json_parser_union_type_vector@@Base+0x200>
   36728:	ldr	r0, [r5, #24]
   3672c:	cmp	r0, #0
   36730:	bne	36794 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   36734:	str	r7, [r5, #36]	; 0x24
   36738:	ldr	r0, [r5, #4]
   3673c:	sub	r0, r7, r0
   36740:	add	r0, r0, #1
   36744:	str	r0, [r5, #20]
   36748:	mov	r0, #8
   3674c:	b	36790 <flatcc_json_parser_union_type_vector@@Base+0x238>
   36750:	mov	r7, r4
   36754:	b	36798 <flatcc_json_parser_union_type_vector@@Base+0x240>
   36758:	ldr	r0, [sp, #32]
   3675c:	ldr	r1, [sp, #36]	; 0x24
   36760:	subs	r2, r0, #256	; 0x100
   36764:	sbcs	r1, r1, #0
   36768:	bcc	368d0 <flatcc_json_parser_union_type_vector@@Base+0x378>
   3676c:	ldr	r0, [r5, #24]
   36770:	cmp	r0, #0
   36774:	bne	36794 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   36778:	str	r7, [r5, #36]	; 0x24
   3677c:	ldr	r0, [r5, #4]
   36780:	sub	r0, r7, r0
   36784:	add	r0, r0, #1
   36788:	str	r0, [r5, #20]
   3678c:	mov	r0, #7
   36790:	str	r0, [r5, #24]
   36794:	mov	r7, r6
   36798:	cmp	r4, r7
   3679c:	bne	367d0 <flatcc_json_parser_union_type_vector@@Base+0x278>
   367a0:	ldr	r3, [fp, #16]
   367a4:	add	r0, sp, #27
   367a8:	mov	r1, r4
   367ac:	mov	r2, r6
   367b0:	str	r0, [sp]
   367b4:	mov	r0, r5
   367b8:	bl	35e84 <flatcc_json_parser_union_type@@Base+0x260>
   367bc:	mov	r7, r0
   367c0:	cmp	r0, r4
   367c4:	cmpne	r7, r6
   367c8:	beq	365e0 <flatcc_json_parser_union_type_vector@@Base+0x88>
   367cc:	ldrb	r8, [sp, #27]
   367d0:	ldr	r1, [fp, #24]
   367d4:	uxtb	r0, r8
   367d8:	blx	r1
   367dc:	cmp	r0, #0
   367e0:	bne	367f8 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   367e4:	ldrb	r0, [r5, #8]
   367e8:	tst	r0, #1
   367ec:	beq	36acc <flatcc_json_parser_union_type_vector@@Base+0x574>
   367f0:	mov	r8, #0
   367f4:	strb	r8, [sp, #27]
   367f8:	ldr	r0, [sp, #20]
   367fc:	strb	r8, [r0]
   36800:	sub	r0, r6, r7
   36804:	cmp	r0, #2
   36808:	blt	36834 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   3680c:	ldrb	r0, [r7]
   36810:	cmp	r0, #32
   36814:	bls	36820 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
   36818:	mov	r4, r7
   3681c:	b	36848 <flatcc_json_parser_union_type_vector@@Base+0x2f0>
   36820:	bne	36834 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   36824:	mov	r4, r7
   36828:	ldrb	r0, [r4, #1]!
   3682c:	cmp	r0, #32
   36830:	bhi	36848 <flatcc_json_parser_union_type_vector@@Base+0x2f0>
   36834:	mov	r0, r5
   36838:	mov	r1, r7
   3683c:	mov	r2, r6
   36840:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   36844:	mov	r4, r0
   36848:	cmp	r4, r6
   3684c:	beq	3664c <flatcc_json_parser_union_type_vector@@Base+0xf4>
   36850:	ldrb	r0, [r4]
   36854:	cmp	r0, #44	; 0x2c
   36858:	bne	368f4 <flatcc_json_parser_union_type_vector@@Base+0x39c>
   3685c:	add	r1, r4, #1
   36860:	sub	r0, r6, r1
   36864:	cmp	r0, #2
   36868:	blt	36890 <flatcc_json_parser_union_type_vector@@Base+0x338>
   3686c:	ldrb	r0, [r1]
   36870:	cmp	r0, #32
   36874:	bls	36880 <flatcc_json_parser_union_type_vector@@Base+0x328>
   36878:	mov	r4, r1
   3687c:	b	368a0 <flatcc_json_parser_union_type_vector@@Base+0x348>
   36880:	bne	36890 <flatcc_json_parser_union_type_vector@@Base+0x338>
   36884:	ldrb	r0, [r4, #2]!
   36888:	cmp	r0, #32
   3688c:	bhi	368a0 <flatcc_json_parser_union_type_vector@@Base+0x348>
   36890:	mov	r0, r5
   36894:	mov	r2, r6
   36898:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   3689c:	mov	r4, r0
   368a0:	cmp	r4, r6
   368a4:	beq	36a80 <flatcc_json_parser_union_type_vector@@Base+0x528>
   368a8:	ldrb	r0, [r4]
   368ac:	cmp	r0, #93	; 0x5d
   368b0:	beq	368fc <flatcc_json_parser_union_type_vector@@Base+0x3a4>
   368b4:	ldr	r0, [r5]
   368b8:	mov	r1, #1
   368bc:	bl	2ea14 <flatcc_builder_extend_vector@@Base>
   368c0:	mov	r1, r0
   368c4:	cmp	r0, #0
   368c8:	bne	366d4 <flatcc_json_parser_union_type_vector@@Base+0x17c>
   368cc:	b	36a3c <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   368d0:	mov	r8, r0
   368d4:	strb	r0, [sp, #27]
   368d8:	b	36798 <flatcc_json_parser_union_type_vector@@Base+0x240>
   368dc:	bne	36928 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   368e0:	ldrb	r0, [r7, #2]!
   368e4:	mov	r8, r7
   368e8:	cmp	r0, #32
   368ec:	bhi	36938 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   368f0:	b	36928 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   368f4:	cmp	r0, #93	; 0x5d
   368f8:	bne	36aa8 <flatcc_json_parser_union_type_vector@@Base+0x550>
   368fc:	add	r1, r4, #1
   36900:	sub	r0, r6, r1
   36904:	cmp	r0, #2
   36908:	blt	36928 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   3690c:	ldrb	r0, [r1]
   36910:	cmp	r0, #32
   36914:	bhi	366a8 <flatcc_json_parser_union_type_vector@@Base+0x150>
   36918:	bne	36928 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   3691c:	ldrb	r0, [r4, #2]!
   36920:	mov	r8, r4
   36924:	b	368e8 <flatcc_json_parser_union_type_vector@@Base+0x390>
   36928:	mov	r0, r5
   3692c:	mov	r2, r6
   36930:	bl	334a4 <flatcc_json_parser_space_ext@@Base>
   36934:	mov	r8, r0
   36938:	ldr	r0, [r5]
   3693c:	bl	30328 <flatcc_builder_vector_count@@Base>
   36940:	str	r0, [r9, #16]
   36944:	mov	r4, r0
   36948:	ldr	r0, [r5]
   3694c:	mov	r1, r4
   36950:	bl	2de80 <flatcc_builder_enter_user_frame@@Base>
   36954:	mov	r9, r0
   36958:	ldr	r0, [r5]
   3695c:	mov	r1, r9
   36960:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   36964:	mov	r7, r0
   36968:	ldr	r0, [r5]
   3696c:	bl	30334 <flatcc_builder_vector_edit@@Base>
   36970:	mov	r1, r0
   36974:	mov	r0, r7
   36978:	mov	r2, r4
   3697c:	bl	14e5c <memcpy@plt>
   36980:	ldr	r0, [r5]
   36984:	bl	30238 <flatcc_builder_end_vector@@Base>
   36988:	cmp	r0, #0
   3698c:	beq	36a38 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   36990:	ldr	r1, [fp, #8]
   36994:	mov	r7, r0
   36998:	ldr	r0, [r5]
   3699c:	sub	r1, r1, #1
   369a0:	bl	306f8 <flatcc_builder_table_add_offset@@Base>
   369a4:	cmp	r0, #0
   369a8:	beq	36a38 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   369ac:	str	r7, [r0]
   369b0:	ldr	r1, [fp, #12]
   369b4:	ldr	r0, [r5]
   369b8:	bl	2dfd4 <flatcc_builder_get_user_frame_ptr@@Base>
   369bc:	add	r2, r0, #8
   369c0:	mov	r3, r2
   369c4:	ldr	r1, [r3, sl, lsl #3]!
   369c8:	str	r9, [r3, #20]
   369cc:	ldr	r3, [r0, #4]
   369d0:	cmp	r1, #0
   369d4:	beq	36a70 <flatcc_json_parser_union_type_vector@@Base+0x518>
   369d8:	cmp	r3, #0
   369dc:	beq	36ae0 <flatcc_json_parser_union_type_vector@@Base+0x588>
   369e0:	sub	r3, r3, #1
   369e4:	ldr	ip, [fp, #20]
   369e8:	str	r3, [r0, #4]
   369ec:	add	r0, r2, sl, lsl #3
   369f0:	mov	r3, r9
   369f4:	ldr	sl, [r5, #4]
   369f8:	ldr	r7, [r5, #16]
   369fc:	ldr	r2, [r0, #8]
   36a00:	str	r2, [r5, #16]
   36a04:	mov	r2, r6
   36a08:	ldr	r0, [r0, #4]
   36a0c:	str	r0, [r5, #4]
   36a10:	ldr	r0, [fp, #8]
   36a14:	str	r4, [sp]
   36a18:	stmib	sp, {r0, ip}
   36a1c:	mov	r0, r5
   36a20:	bl	3617c <flatcc_json_parser_union_vector@@Base+0xf0>
   36a24:	cmp	r0, r6
   36a28:	beq	36a64 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   36a2c:	str	sl, [r5, #4]
   36a30:	str	r7, [r5, #16]
   36a34:	b	36a78 <flatcc_json_parser_union_type_vector@@Base+0x520>
   36a38:	mov	r4, r8
   36a3c:	ldr	r0, [r5, #24]
   36a40:	cmp	r0, #0
   36a44:	bne	36a64 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   36a48:	str	r4, [r5, #36]	; 0x24
   36a4c:	mov	r0, #33	; 0x21
   36a50:	ldr	r1, [r5, #4]
   36a54:	sub	r1, r4, r1
   36a58:	add	r1, r1, #1
   36a5c:	str	r1, [r5, #20]
   36a60:	str	r0, [r5, #24]
   36a64:	mov	r0, r6
   36a68:	sub	sp, fp, #28
   36a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36a70:	add	r1, r3, #1
   36a74:	str	r1, [r0, #4]
   36a78:	mov	r6, r8
   36a7c:	b	36a64 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   36a80:	ldr	r0, [r5, #24]
   36a84:	mov	r8, r6
   36a88:	cmp	r0, #0
   36a8c:	bne	36938 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36a90:	str	r6, [r5, #36]	; 0x24
   36a94:	ldr	r2, [sp, #16]
   36a98:	mov	r0, #9
   36a9c:	ldr	r1, [r5, #4]
   36aa0:	sub	r1, r2, r1
   36aa4:	b	36644 <flatcc_json_parser_union_type_vector@@Base+0xec>
   36aa8:	ldr	r0, [r5, #24]
   36aac:	mov	r8, r6
   36ab0:	cmp	r0, #0
   36ab4:	bne	36938 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   36ab8:	str	r4, [r5, #36]	; 0x24
   36abc:	mov	r0, #9
   36ac0:	ldr	r1, [r5, #4]
   36ac4:	sub	r1, r4, r1
   36ac8:	b	36640 <flatcc_json_parser_union_type_vector@@Base+0xe8>
   36acc:	ldr	r0, [r5, #24]
   36ad0:	cmp	r0, #0
   36ad4:	bne	36a64 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   36ad8:	mov	r0, #15
   36adc:	b	365ac <flatcc_json_parser_union_type_vector@@Base+0x54>
   36ae0:	movw	r0, #37452	; 0x924c
   36ae4:	movw	r1, #37467	; 0x925b
   36ae8:	movw	r3, #37745	; 0x9371
   36aec:	movw	r2, #1122	; 0x462
   36af0:	movt	r0, #4
   36af4:	movt	r1, #4
   36af8:	movt	r3, #4
   36afc:	bl	14f40 <__assert_fail@plt>

00036b00 <flatcc_json_parser_table_as_root@@Base>:
   36b00:	push	{r4, r5, r6, r7, fp, lr}
   36b04:	add	fp, sp, #16
   36b08:	sub	sp, sp, #48	; 0x30
   36b0c:	cmp	r1, #0
   36b10:	vmov.i32	q8, #0	; 0x00000000
   36b14:	add	r5, sp, #4
   36b18:	mov	r6, r0
   36b1c:	add	r7, r2, r3
   36b20:	mov	r4, r2
   36b24:	movne	r5, r1
   36b28:	mov	r1, #1
   36b2c:	add	r0, r5, #12
   36b30:	vst1.32	{d16-d17}, [r0]
   36b34:	add	r0, r5, #28
   36b38:	vst1.32	{d16-d17}, [r0]
   36b3c:	ldr	r0, [fp, #8]
   36b40:	str	r2, [r5, #4]
   36b44:	str	r6, [r5]
   36b48:	str	r0, [r5, #8]
   36b4c:	str	r1, [r5, #16]
   36b50:	mov	r1, #2
   36b54:	str	r2, [r5, #28]
   36b58:	str	r7, [r5, #32]
   36b5c:	str	r2, [r5, #36]	; 0x24
   36b60:	mov	r2, #0
   36b64:	and	r3, r1, r0, lsr #1
   36b68:	ldr	r1, [fp, #12]
   36b6c:	mov	r0, r6
   36b70:	bl	2e57c <flatcc_builder_start_buffer@@Base>
   36b74:	mov	r1, r0
   36b78:	mvn	r0, #0
   36b7c:	cmp	r1, #0
   36b80:	bne	36bc4 <flatcc_json_parser_table_as_root@@Base+0xc4>
   36b84:	ldr	ip, [fp, #16]
   36b88:	mov	r3, sp
   36b8c:	mov	r0, r5
   36b90:	mov	r1, r4
   36b94:	mov	r2, r7
   36b98:	blx	ip
   36b9c:	ldr	r0, [r5, #24]
   36ba0:	cmp	r0, #0
   36ba4:	bne	36bc4 <flatcc_json_parser_table_as_root@@Base+0xc4>
   36ba8:	ldr	r1, [sp]
   36bac:	mov	r0, r6
   36bb0:	bl	2e76c <flatcc_builder_end_buffer@@Base>
   36bb4:	cmp	r0, #0
   36bb8:	mvn	r0, #0
   36bbc:	movne	r0, #0
   36bc0:	strne	r4, [r5, #40]	; 0x28
   36bc4:	sub	sp, fp, #16
   36bc8:	pop	{r4, r5, r6, r7, fp, pc}

00036bcc <flatcc_json_parser_struct_as_root@@Base>:
   36bcc:	push	{r4, r5, r6, r7, fp, lr}
   36bd0:	add	fp, sp, #16
   36bd4:	sub	sp, sp, #48	; 0x30
   36bd8:	cmp	r1, #0
   36bdc:	vmov.i32	q8, #0	; 0x00000000
   36be0:	add	r5, sp, #4
   36be4:	mov	r6, r0
   36be8:	add	r7, r2, r3
   36bec:	mov	r4, r2
   36bf0:	movne	r5, r1
   36bf4:	mov	r1, #1
   36bf8:	add	r0, r5, #12
   36bfc:	vst1.32	{d16-d17}, [r0]
   36c00:	add	r0, r5, #28
   36c04:	vst1.32	{d16-d17}, [r0]
   36c08:	ldr	r0, [fp, #8]
   36c0c:	str	r2, [r5, #4]
   36c10:	str	r6, [r5]
   36c14:	str	r0, [r5, #8]
   36c18:	str	r1, [r5, #16]
   36c1c:	mov	r1, #2
   36c20:	str	r2, [r5, #28]
   36c24:	str	r7, [r5, #32]
   36c28:	str	r2, [r5, #36]	; 0x24
   36c2c:	mov	r2, #0
   36c30:	and	r3, r1, r0, lsr #1
   36c34:	ldr	r1, [fp, #12]
   36c38:	mov	r0, r6
   36c3c:	bl	2e57c <flatcc_builder_start_buffer@@Base>
   36c40:	mov	r1, r0
   36c44:	mvn	r0, #0
   36c48:	cmp	r1, #0
   36c4c:	bne	36c90 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   36c50:	ldr	ip, [fp, #16]
   36c54:	mov	r3, sp
   36c58:	mov	r0, r5
   36c5c:	mov	r1, r4
   36c60:	mov	r2, r7
   36c64:	blx	ip
   36c68:	ldr	r0, [r5, #24]
   36c6c:	cmp	r0, #0
   36c70:	bne	36c90 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   36c74:	ldr	r1, [sp]
   36c78:	mov	r0, r6
   36c7c:	bl	2e76c <flatcc_builder_end_buffer@@Base>
   36c80:	cmp	r0, #0
   36c84:	mvn	r0, #0
   36c88:	movne	r0, #0
   36c8c:	strne	r4, [r5, #40]	; 0x28
   36c90:	sub	sp, fp, #16
   36c94:	pop	{r4, r5, r6, r7, fp, pc}

00036c98 <flatcc_json_printer_error_string@@Base>:
   36c98:	cmp	r0, #3
   36c9c:	movwhi	r0, #34358	; 0x8636
   36ca0:	movthi	r0, #4
   36ca4:	bxhi	lr
   36ca8:	movw	r1, #41108	; 0xa094
   36cac:	movt	r1, #4
   36cb0:	ldr	r0, [r1, r0, lsl #2]
   36cb4:	bx	lr

00036cb8 <flatcc_json_printer_fmt_float@@Base>:
   36cb8:	vcvt.f64.f32	d0, s0
   36cbc:	b	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   36cc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36cc4:	add	fp, sp, #28
   36cc8:	sub	sp, sp, #4
   36ccc:	vpush	{d8}
   36cd0:	sub	sp, sp, #176	; 0xb0
   36cd4:	cmp	r0, #0
   36cd8:	beq	374cc <flatcc_json_printer_fmt_float@@Base+0x814>
   36cdc:	vmov	r3, r2, d0
   36ce0:	mov	r5, #-2147483648	; 0x80000000
   36ce4:	mov	r6, #0
   36ce8:	vorr	d8, d0, d0
   36cec:	orr	r1, r5, #266338304	; 0xfe00000
   36cf0:	orr	r1, r1, #1879048192	; 0x70000000
   36cf4:	lsl	r7, r2, #1
   36cf8:	subs	r6, r6, r3, lsl #1
   36cfc:	orr	r7, r7, r3, lsr #31
   36d00:	sbcs	r1, r1, r7
   36d04:	bcs	36d24 <flatcc_json_printer_fmt_float@@Base+0x6c>
   36d08:	movw	r1, #38903	; 0x97f7
   36d0c:	movt	r1, #4
   36d10:	sub	sp, fp, #40	; 0x28
   36d14:	vpop	{d8}
   36d18:	add	sp, sp, #4
   36d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36d20:	b	14f28 <sprintf@plt>
   36d24:	cmn	r2, #1
   36d28:	ble	36d34 <flatcc_json_printer_fmt_float@@Base+0x7c>
   36d2c:	mov	r4, r0
   36d30:	b	36d48 <flatcc_json_printer_fmt_float@@Base+0x90>
   36d34:	vneg.f64	d8, d8
   36d38:	mov	r1, #45	; 0x2d
   36d3c:	mov	r4, r0
   36d40:	eor	r2, r2, r5
   36d44:	strb	r1, [r4], #1
   36d48:	movw	r7, #0
   36d4c:	movt	r7, #32752	; 0x7ff0
   36d50:	eor	r1, r2, r7
   36d54:	orrs	r1, r3, r1
   36d58:	beq	36d74 <flatcc_json_printer_fmt_float@@Base+0xbc>
   36d5c:	orrs	r1, r3, r2
   36d60:	bne	36d88 <flatcc_json_printer_fmt_float@@Base+0xd0>
   36d64:	mov	r1, #48	; 0x30
   36d68:	strh	r1, [r4], -r0
   36d6c:	add	r0, r4, #1
   36d70:	b	374b4 <flatcc_json_printer_fmt_float@@Base+0x7fc>
   36d74:	movw	r1, #28265	; 0x6e69
   36d78:	movt	r1, #102	; 0x66
   36d7c:	str	r1, [r4], -r0
   36d80:	add	r0, r4, #3
   36d84:	b	374b4 <flatcc_json_printer_fmt_float@@Base+0x7fc>
   36d88:	str	r0, [sp, #88]	; 0x58
   36d8c:	vmov	r5, r0, d8
   36d90:	str	r4, [sp, #108]	; 0x6c
   36d94:	mov	r6, r0
   36d98:	ands	r9, r0, r7
   36d9c:	str	r0, [sp, #36]	; 0x24
   36da0:	bfc	r6, #20, #12
   36da4:	beq	36dbc <flatcc_json_printer_fmt_float@@Base+0x104>
   36da8:	movw	r0, #64461	; 0xfbcd
   36dac:	orr	r4, r6, #1048576	; 0x100000
   36db0:	movt	r0, #65535	; 0xffff
   36db4:	add	r8, r0, r9, lsr #20
   36db8:	b	36dc8 <flatcc_json_printer_fmt_float@@Base+0x110>
   36dbc:	movw	r8, #64462	; 0xfbce
   36dc0:	mov	r4, r6
   36dc4:	movt	r8, #65535	; 0xffff
   36dc8:	mov	r7, #0
   36dcc:	sub	r0, fp, #88	; 0x58
   36dd0:	mov	r2, r5
   36dd4:	mov	r3, r4
   36dd8:	str	r8, [sp]
   36ddc:	str	r7, [sp, #4]
   36de0:	bl	42528 <flatcc_json_printer_clear@@Base+0xe4>
   36de4:	mov	r0, #1
   36de8:	str	r7, [sp, #4]
   36dec:	sub	sl, r8, #1
   36df0:	orr	r2, r0, r5, lsl #1
   36df4:	lsl	r0, r4, #1
   36df8:	str	sl, [sp]
   36dfc:	orr	r7, r0, r5, lsr #31
   36e00:	sub	r0, fp, #104	; 0x68
   36e04:	mov	r3, r7
   36e08:	bl	42528 <flatcc_json_printer_clear@@Base+0xe4>
   36e0c:	vcmpe.f64	d8, #0.0
   36e10:	vmrs	APSR_nzcv, fpscr
   36e14:	ble	374ec <flatcc_json_printer_fmt_float@@Base+0x834>
   36e18:	vldr	d16, [pc, #944]	; 371d0 <flatcc_json_printer_fmt_float@@Base+0x518>
   36e1c:	vcmpe.f64	d8, d16
   36e20:	vmrs	APSR_nzcv, fpscr
   36e24:	bhi	374ec <flatcc_json_printer_fmt_float@@Base+0x834>
   36e28:	orrs	r1, r5, r6
   36e2c:	clz	r2, r9
   36e30:	mvn	r3, #60	; 0x3c
   36e34:	str	r5, [sp, #84]	; 0x54
   36e38:	vldr	d16, [pc, #920]	; 371d8 <flatcc_json_printer_fmt_float@@Base+0x520>
   36e3c:	lsl	r0, r4, #2
   36e40:	movwne	r1, #1
   36e44:	lsr	r2, r2, #5
   36e48:	orrs	r1, r1, r2
   36e4c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   36e50:	orreq	r7, r0, r5, lsr #30
   36e54:	lsl	r0, r5, #2
   36e58:	lslne	r0, r5, #1
   36e5c:	subs	r0, r0, #1
   36e60:	sub	r2, r3, r2
   36e64:	vmov	s0, r2
   36e68:	sbc	r2, r7, #0
   36e6c:	cmp	r1, #0
   36e70:	subeq	sl, r8, #2
   36e74:	vcvt.f64.s32	d17, s0
   36e78:	ldr	r8, [fp, #-96]	; 0xffffffa0
   36e7c:	sub	r1, sl, r8
   36e80:	vmul.f64	d16, d17, d16
   36e84:	rsb	r3, r1, #32
   36e88:	lsl	r6, r0, r1
   36e8c:	lsr	r3, r0, r3
   36e90:	orr	r7, r3, r2, lsl r1
   36e94:	subs	r2, r1, #32
   36e98:	sub	r1, fp, #88	; 0x58
   36e9c:	lslpl	r7, r0, r2
   36ea0:	add	r2, r1, #8
   36ea4:	sub	r1, fp, #104	; 0x68
   36ea8:	movwpl	r6, #0
   36eac:	add	r1, r1, #8
   36eb0:	vcvt.s32.f64	s0, d16
   36eb4:	vcmpe.f64	d16, #0.0
   36eb8:	str	r1, [sp, #104]	; 0x68
   36ebc:	vmrs	APSR_nzcv, fpscr
   36ec0:	vmov	r0, s0
   36ec4:	bmi	36edc <flatcc_json_printer_fmt_float@@Base+0x224>
   36ec8:	vcvt.f64.s32	d17, s0
   36ecc:	vsub.f64	d16, d16, d17
   36ed0:	vcmp.f64	d16, #0.0
   36ed4:	vmrs	APSR_nzcv, fpscr
   36ed8:	addne	r0, r0, #1
   36edc:	movw	r1, #347	; 0x15b
   36ee0:	ldrd	r4, [r2]
   36ee4:	mov	sl, #0
   36ee8:	str	r2, [sp, #100]	; 0x64
   36eec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   36ef0:	ldr	r3, [fp, #-84]	; 0xffffffac
   36ef4:	add	r0, r0, r1
   36ef8:	str	sl, [sp, #20]
   36efc:	asr	r1, r0, #31
   36f00:	add	r0, r0, r1, lsr #29
   36f04:	mvn	r1, #14
   36f08:	stm	sp, {r4, r5}
   36f0c:	and	r0, r1, r0, lsl #1
   36f10:	movw	r1, #39656	; 0x9ae8
   36f14:	movt	r1, #4
   36f18:	add	r0, r0, r1
   36f1c:	ldrsh	r9, [r0, #24]
   36f20:	ldrd	r4, [r0, #16]
   36f24:	str	r9, [sp, #16]
   36f28:	str	r0, [sp, #40]	; 0x28
   36f2c:	sub	r0, fp, #88	; 0x58
   36f30:	str	r5, [sp, #12]
   36f34:	str	r4, [sp, #8]
   36f38:	bl	425cc <flatcc_json_printer_clear@@Base+0x188>
   36f3c:	add	r0, sp, #8
   36f40:	stm	sp, {r8, sl}
   36f44:	mov	r2, r6
   36f48:	mov	r3, r7
   36f4c:	stm	r0, {r4, r5, r9, sl}
   36f50:	sub	r0, fp, #56	; 0x38
   36f54:	bl	425cc <flatcc_json_printer_clear@@Base+0x188>
   36f58:	ldr	r6, [sp, #104]	; 0x68
   36f5c:	ldr	r2, [fp, #-104]	; 0xffffff98
   36f60:	ldr	r3, [fp, #-100]	; 0xffffff9c
   36f64:	ldr	sl, [fp, #-56]	; 0xffffffc8
   36f68:	ldr	r7, [fp, #-52]	; 0xffffffcc
   36f6c:	ldr	r8, [fp, #-48]	; 0xffffffd0
   36f70:	ldrd	r0, [r6]
   36f74:	stm	sp, {r0, r1, r4}
   36f78:	mov	r4, #0
   36f7c:	sub	r0, fp, #104	; 0x68
   36f80:	str	r5, [sp, #12]
   36f84:	str	r9, [sp, #16]
   36f88:	str	r4, [sp, #20]
   36f8c:	bl	425cc <flatcc_json_printer_clear@@Base+0x188>
   36f90:	ldr	r0, [sp, #100]	; 0x64
   36f94:	ldr	r6, [r6]
   36f98:	ldr	r1, [fp, #-100]	; 0xffffff9c
   36f9c:	subs	r2, sl, #1
   36fa0:	add	ip, sp, #8
   36fa4:	sbc	r3, r7, #0
   36fa8:	ldr	r5, [r0]
   36fac:	ldr	r0, [r0, #4]
   36fb0:	str	r0, [sp, #80]	; 0x50
   36fb4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   36fb8:	str	r0, [sp, #68]	; 0x44
   36fbc:	ldr	r0, [fp, #-84]	; 0xffffffac
   36fc0:	str	r0, [sp, #72]	; 0x48
   36fc4:	ldr	r0, [fp, #-104]	; 0xffffff98
   36fc8:	str	r6, [sp, #56]	; 0x38
   36fcc:	str	r6, [sp]
   36fd0:	str	r4, [sp, #4]
   36fd4:	stm	ip, {r2, r3, r8}
   36fd8:	str	r4, [sp, #20]
   36fdc:	adds	r8, r0, #1
   36fe0:	sub	r0, fp, #56	; 0x38
   36fe4:	adc	r9, r1, #0
   36fe8:	mov	r2, r8
   36fec:	mov	r3, r9
   36ff0:	bl	4262c <flatcc_json_printer_clear@@Base+0x1e8>
   36ff4:	rsb	ip, r5, #0
   36ff8:	add	r1, r5, #32
   36ffc:	movw	r7, #1233	; 0x4d1
   37000:	movw	sl, #41048	; 0xa058
   37004:	mov	r4, #1
   37008:	str	r5, [sp, #76]	; 0x4c
   3700c:	str	r8, [sp, #60]	; 0x3c
   37010:	ldr	lr, [fp, #-52]	; 0xffffffcc
   37014:	lsr	r0, r8, ip
   37018:	movt	sl, #4
   3701c:	orr	r2, r0, r9, lsl r1
   37020:	mvn	r0, #31
   37024:	subs	r3, r0, r5
   37028:	movw	r0, #14609	; 0x3911
   3702c:	movt	r0, #1
   37030:	lsrpl	r2, r9, r3
   37034:	mla	r7, r5, r7, r0
   37038:	add	r5, r4, r7, asr #12
   3703c:	ldr	r6, [sl, r5, lsl #2]
   37040:	cmp	r6, r2
   37044:	lsr	r6, r4, r1
   37048:	asrhi	r5, r7, #12
   3704c:	cmp	r3, #0
   37050:	lslpl	r6, r4, r3
   37054:	lsl	r3, r4, ip
   37058:	movwpl	r3, #0
   3705c:	subs	r0, r3, #1
   37060:	sbc	r1, r6, #0
   37064:	and	r4, r0, r8
   37068:	cmp	r5, #0
   3706c:	add	r8, sp, #44	; 0x2c
   37070:	and	r7, r1, r9
   37074:	str	r7, [sp, #92]	; 0x5c
   37078:	ldr	r7, [fp, #-56]	; 0xffffffc8
   3707c:	str	r9, [sp, #64]	; 0x40
   37080:	stm	r8, {r0, r3, r6}
   37084:	str	r1, [sp, #104]	; 0x68
   37088:	ble	37118 <flatcc_json_printer_fmt_float@@Base+0x460>
   3708c:	str	r4, [sp, #96]	; 0x60
   37090:	ldr	r4, [sl, r5, lsl #2]
   37094:	sub	r0, r5, #1
   37098:	mov	r1, #0
   3709c:	str	r0, [sp, #100]	; 0x64
   370a0:	udiv	r3, r2, r4
   370a4:	ldr	r0, [sp, #108]	; 0x6c
   370a8:	mov	r5, r4
   370ac:	subs	sl, ip, #32
   370b0:	mov	r8, r1
   370b4:	mls	r2, r3, r4, r2
   370b8:	ldr	r4, [sp, #96]	; 0x60
   370bc:	add	r6, r3, #48	; 0x30
   370c0:	strb	r6, [r0, r1]
   370c4:	rsb	r6, ip, #32
   370c8:	lsl	r0, r2, ip
   370cc:	movwpl	r0, #0
   370d0:	lsr	r3, r2, r6
   370d4:	lslpl	r3, r2, sl
   370d8:	adds	r9, r0, r4
   370dc:	ldr	r0, [sp, #92]	; 0x5c
   370e0:	adc	r3, r3, r0
   370e4:	subs	r0, r9, r7
   370e8:	sbcs	r0, r3, lr
   370ec:	bcc	37124 <flatcc_json_printer_fmt_float@@Base+0x46c>
   370f0:	ldr	r0, [sp, #100]	; 0x64
   370f4:	mov	r1, r8
   370f8:	cmp	r0, r8
   370fc:	beq	371e0 <flatcc_json_printer_fmt_float@@Base+0x528>
   37100:	movw	r0, #52429	; 0xcccd
   37104:	add	r1, r1, #1
   37108:	movt	r0, #52428	; 0xcccc
   3710c:	umull	r0, r3, r5, r0
   37110:	lsr	r4, r3, #3
   37114:	b	370a0 <flatcc_json_printer_fmt_float@@Base+0x3e8>
   37118:	mov	sl, lr
   3711c:	mov	r6, #0
   37120:	b	371f0 <flatcc_json_printer_fmt_float@@Base+0x538>
   37124:	ldr	r0, [sp, #56]	; 0x38
   37128:	mov	r2, #0
   3712c:	mov	r4, ip
   37130:	stm	sp, {r0, r2}
   37134:	ldr	r0, [sp, #68]	; 0x44
   37138:	str	r0, [sp, #8]
   3713c:	ldr	r0, [sp, #72]	; 0x48
   37140:	str	r0, [sp, #12]
   37144:	ldr	r0, [sp, #76]	; 0x4c
   37148:	str	r0, [sp, #16]
   3714c:	ldr	r0, [sp, #80]	; 0x50
   37150:	str	r0, [sp, #20]
   37154:	sub	r0, fp, #72	; 0x48
   37158:	ldr	r2, [sp, #60]	; 0x3c
   3715c:	str	r3, [sp, #104]	; 0x68
   37160:	ldr	r3, [sp, #64]	; 0x40
   37164:	str	lr, [sp, #96]	; 0x60
   37168:	bl	4262c <flatcc_json_printer_clear@@Base+0x1e8>
   3716c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   37170:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37174:	str	r7, [sp]
   37178:	cmp	sl, #0
   3717c:	lsr	r1, r5, r6
   37180:	mov	r0, #1
   37184:	lsl	r6, r5, r4
   37188:	ldr	r7, [sp, #96]	; 0x60
   3718c:	lslpl	r1, r5, sl
   37190:	movwpl	r6, #0
   37194:	stmib	sp, {r7, r9}
   37198:	ldr	r7, [sp, #104]	; 0x68
   3719c:	str	r0, [sp, #24]
   371a0:	mov	r0, #0
   371a4:	str	r6, [sp, #16]
   371a8:	str	r1, [sp, #20]
   371ac:	add	r6, r8, #1
   371b0:	str	r0, [sp, #28]
   371b4:	mov	r1, r6
   371b8:	str	r7, [sp, #12]
   371bc:	ldr	r0, [sp, #108]	; 0x6c
   371c0:	bl	42684 <flatcc_json_printer_clear@@Base+0x240>
   371c4:	ldr	r1, [sp, #100]	; 0x64
   371c8:	sub	r5, r1, r8
   371cc:	b	3730c <flatcc_json_printer_fmt_float@@Base+0x654>
   371d0:			; <UNDEFINED> instruction: 0xffffffff
   371d4:	svcvc	0x00efffff
   371d8:			; <UNDEFINED> instruction: 0x509f79fe
   371dc:	svccc	0x00d34413
   371e0:	ldr	r0, [sp, #100]	; 0x64
   371e4:	mov	sl, lr
   371e8:	add	r6, r1, #1
   371ec:	sub	r5, r0, r1
   371f0:	rsb	r0, ip, #32
   371f4:	mov	lr, #10
   371f8:	mov	r9, #0
   371fc:	mov	r8, #1
   37200:	str	r0, [sp, #96]	; 0x60
   37204:	str	ip, [sp, #100]	; 0x64
   37208:	sub	r0, ip, #32
   3720c:	ldr	r2, [sp, #92]	; 0x5c
   37210:	ldr	ip, [sp, #44]	; 0x2c
   37214:	umull	r4, r1, r4, lr
   37218:	add	r2, r2, r2, lsl #2
   3721c:	ldr	r3, [sp, #100]	; 0x64
   37220:	cmp	r0, #0
   37224:	sub	r5, r5, #1
   37228:	add	r1, r1, r2, lsl #1
   3722c:	ldr	r2, [sp, #96]	; 0x60
   37230:	lsr	r3, r4, r3
   37234:	and	r4, r4, ip
   37238:	orr	r2, r3, r1, lsl r2
   3723c:	ldr	r3, [sp, #108]	; 0x6c
   37240:	lsrpl	r2, r1, r0
   37244:	add	r2, r2, #48	; 0x30
   37248:	strb	r2, [r3, r6]
   3724c:	umull	r8, r2, r8, lr
   37250:	add	r3, r9, r9, lsl #2
   37254:	add	r6, r6, #1
   37258:	add	r9, r2, r3, lsl #1
   3725c:	umull	r7, r2, r7, lr
   37260:	add	r3, sl, sl, lsl #2
   37264:	add	sl, r2, r3, lsl #1
   37268:	ldr	r2, [sp, #104]	; 0x68
   3726c:	and	r2, r1, r2
   37270:	subs	r1, r4, r7
   37274:	sbcs	r1, r2, sl
   37278:	bcs	37214 <flatcc_json_printer_fmt_float@@Base+0x55c>
   3727c:	ldr	r1, [sp, #56]	; 0x38
   37280:	mov	r0, #0
   37284:	str	r7, [fp, #-56]	; 0xffffffc8
   37288:	str	sl, [fp, #-52]	; 0xffffffcc
   3728c:	str	r0, [sp, #4]
   37290:	str	r1, [sp]
   37294:	ldr	r0, [sp, #68]	; 0x44
   37298:	str	r0, [sp, #8]
   3729c:	ldr	r0, [sp, #72]	; 0x48
   372a0:	str	r0, [sp, #12]
   372a4:	ldr	r0, [sp, #76]	; 0x4c
   372a8:	str	r0, [sp, #16]
   372ac:	ldr	r0, [sp, #80]	; 0x50
   372b0:	str	r0, [sp, #20]
   372b4:	str	r2, [sp, #92]	; 0x5c
   372b8:	sub	r0, fp, #72	; 0x48
   372bc:	ldr	r2, [sp, #60]	; 0x3c
   372c0:	ldr	r3, [sp, #64]	; 0x40
   372c4:	bl	4262c <flatcc_json_printer_clear@@Base+0x1e8>
   372c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   372cc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   372d0:	stm	sp, {r7, sl}
   372d4:	str	r4, [sp, #8]
   372d8:	add	r3, sp, #20
   372dc:	ldr	r2, [sp, #92]	; 0x5c
   372e0:	str	r2, [sp, #12]
   372e4:	ldr	r2, [sp, #48]	; 0x30
   372e8:	str	r2, [sp, #16]
   372ec:	ldr	r2, [sp, #52]	; 0x34
   372f0:	stm	r3, {r2, r8, r9}
   372f4:	umull	r2, r3, r0, r8
   372f8:	mla	r0, r0, r9, r3
   372fc:	mla	r3, r1, r8, r0
   37300:	ldr	r0, [sp, #108]	; 0x6c
   37304:	mov	r1, r6
   37308:	bl	42684 <flatcc_json_printer_clear@@Base+0x240>
   3730c:	ldr	r2, [sp, #84]	; 0x54
   37310:	cmp	r0, #0
   37314:	beq	37384 <flatcc_json_printer_fmt_float@@Base+0x6cc>
   37318:	ldr	r0, [sp, #40]	; 0x28
   3731c:	cmp	r6, #3
   37320:	ldr	r1, [sp, #108]	; 0x6c
   37324:	ldrsh	r4, [r0, #26]
   37328:	sub	r0, r6, #1
   3732c:	movwlt	r0, #1
   37330:	sub	r7, r5, r4
   37334:	rsb	r2, r7, #0
   37338:	cmp	r0, r2
   3733c:	movge	r0, r2
   37340:	cmn	r7, #1
   37344:	ble	373ac <flatcc_json_printer_fmt_float@@Base+0x6f4>
   37348:	cmp	r7, #3
   3734c:	bcs	37484 <flatcc_json_printer_fmt_float@@Base+0x7cc>
   37350:	cmp	r7, #0
   37354:	beq	374a4 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   37358:	add	r0, r1, r6
   3735c:	mov	r1, #48	; 0x30
   37360:	mov	r2, r7
   37364:	bl	14eec <memset@plt>
   37368:	ldr	r1, [sp, #108]	; 0x6c
   3736c:	ldr	r2, [sp, #88]	; 0x58
   37370:	sub	r7, r7, #1
   37374:	add	r6, r6, #1
   37378:	cmp	r7, #0
   3737c:	bgt	37370 <flatcc_json_printer_fmt_float@@Base+0x6b8>
   37380:	b	374a8 <flatcc_json_printer_fmt_float@@Base+0x7f0>
   37384:	ldr	r4, [sp, #108]	; 0x6c
   37388:	ldr	r3, [sp, #36]	; 0x24
   3738c:	movw	r1, #38917	; 0x9805
   37390:	movt	r1, #4
   37394:	mov	r0, r4
   37398:	bl	14f28 <sprintf@plt>
   3739c:	ldr	r1, [sp, #88]	; 0x58
   373a0:	sub	r1, r4, r1
   373a4:	add	r0, r1, r0
   373a8:	b	374b4 <flatcc_json_printer_fmt_float@@Base+0x7fc>
   373ac:	cmp	r6, r2
   373b0:	bgt	37428 <flatcc_json_printer_fmt_float@@Base+0x770>
   373b4:	add	r8, r7, r6
   373b8:	cmn	r8, #2
   373bc:	blt	37428 <flatcc_json_printer_fmt_float@@Base+0x770>
   373c0:	add	r7, r1, #2
   373c4:	rsb	r0, r6, #0
   373c8:	add	r2, r7, r2
   373cc:	add	r0, r2, r0
   373d0:	mov	r2, r6
   373d4:	bl	14e44 <memmove@plt>
   373d8:	ldr	r1, [sp, #108]	; 0x6c
   373dc:	movw	r0, #11824	; 0x2e30
   373e0:	rsb	r8, r8, #2
   373e4:	cmp	r8, #3
   373e8:	strh	r0, [r1]
   373ec:	mov	r0, #2
   373f0:	blt	37420 <flatcc_json_printer_fmt_float@@Base+0x768>
   373f4:	sub	r0, r4, r5
   373f8:	mov	r1, #48	; 0x30
   373fc:	sub	r2, r0, r6
   37400:	mov	r0, r7
   37404:	bl	14eec <memset@plt>
   37408:	add	r0, r5, r6
   3740c:	sub	r0, r0, r4
   37410:	adds	r0, r0, #1
   37414:	bcc	37410 <flatcc_json_printer_fmt_float@@Base+0x758>
   37418:	ldr	r1, [sp, #108]	; 0x6c
   3741c:	mov	r0, r8
   37420:	add	r6, r0, r6
   37424:	b	374a4 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   37428:	cmp	r6, #2
   3742c:	blt	37484 <flatcc_json_printer_fmt_float@@Base+0x7cc>
   37430:	cmp	r0, #1
   37434:	blt	37458 <flatcc_json_printer_fmt_float@@Base+0x7a0>
   37438:	add	r4, r1, r6
   3743c:	mov	r3, #0
   37440:	sub	r2, r4, #1
   37444:	ldrb	r5, [r2, -r3]
   37448:	strb	r5, [r4, -r3]
   3744c:	add	r3, r3, #1
   37450:	cmp	r3, r0
   37454:	blt	37444 <flatcc_json_printer_fmt_float@@Base+0x78c>
   37458:	sub	r3, r6, r0
   3745c:	mov	r2, #46	; 0x2e
   37460:	adds	r0, r0, r7
   37464:	strb	r2, [r1, r3]
   37468:	add	r3, r6, #1
   3746c:	beq	374c4 <flatcc_json_printer_fmt_float@@Base+0x80c>
   37470:	mov	r2, #101	; 0x65
   37474:	add	r4, r6, #2
   37478:	strb	r2, [r1, r3]
   3747c:	add	r1, r1, r4
   37480:	b	37498 <flatcc_json_printer_fmt_float@@Base+0x7e0>
   37484:	mov	r0, #101	; 0x65
   37488:	add	r4, r6, #1
   3748c:	strb	r0, [r1, r6]
   37490:	add	r1, r1, r4
   37494:	mov	r0, r7
   37498:	bl	42488 <flatcc_json_printer_clear@@Base+0x44>
   3749c:	ldr	r1, [sp, #108]	; 0x6c
   374a0:	add	r6, r0, r4
   374a4:	ldr	r2, [sp, #88]	; 0x58
   374a8:	mov	r0, #0
   374ac:	strb	r0, [r1, r6]!
   374b0:	sub	r0, r1, r2
   374b4:	sub	sp, fp, #40	; 0x28
   374b8:	vpop	{d8}
   374bc:	add	sp, sp, #4
   374c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   374c4:	mov	r6, r3
   374c8:	b	374a4 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   374cc:	movw	r0, #38772	; 0x9774
   374d0:	movw	r1, #38776	; 0x9778
   374d4:	movw	r3, #38863	; 0x97cf
   374d8:	mov	r2, #189	; 0xbd
   374dc:	movt	r0, #4
   374e0:	movt	r1, #4
   374e4:	movt	r3, #4
   374e8:	bl	14f40 <__assert_fail@plt>
   374ec:	movw	r0, #38923	; 0x980b
   374f0:	movw	r1, #38776	; 0x9778
   374f4:	movw	r3, #38960	; 0x9830
   374f8:	mov	r2, #138	; 0x8a
   374fc:	movt	r0, #4
   37500:	movt	r1, #4
   37504:	movt	r3, #4
   37508:	bl	14f40 <__assert_fail@plt>

0003750c <flatcc_json_printer_fmt_double@@Base>:
   3750c:	b	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>

00037510 <flatcc_json_printer_fmt_bool@@Base>:
   37510:	cmp	r1, #0
   37514:	movwne	r1, #29300	; 0x7274
   37518:	movtne	r1, #25973	; 0x6575
   3751c:	strne	r1, [r0]
   37520:	movne	r0, #4
   37524:	bxne	lr
   37528:	mov	r1, #101	; 0x65
   3752c:	strb	r1, [r0, #4]
   37530:	movw	r1, #24934	; 0x6166
   37534:	movt	r1, #29548	; 0x736c
   37538:	str	r1, [r0]
   3753c:	mov	r0, #5
   37540:	bx	lr

00037544 <flatcc_json_printer_string@@Base>:
   37544:	b	37548 <flatcc_json_printer_string@@Base+0x4>
   37548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3754c:	add	fp, sp, #28
   37550:	sub	sp, sp, #12
   37554:	mov	r5, r0
   37558:	mov	r4, r0
   3755c:	mov	r6, r1
   37560:	mov	r3, r2
   37564:	ldr	r0, [r5, #20]!
   37568:	str	r5, [sp, #4]
   3756c:	add	r1, r0, #1
   37570:	str	r1, [r5]
   37574:	mov	r1, #34	; 0x22
   37578:	strb	r1, [r0]
   3757c:	ldrb	sl, [r6]
   37580:	mov	r8, r6
   37584:	cmp	sl, #32
   37588:	bcc	375a8 <flatcc_json_printer_string@@Base+0x64>
   3758c:	uxtb	r0, sl
   37590:	cmp	r0, #34	; 0x22
   37594:	cmpne	r0, #92	; 0x5c
   37598:	beq	375a8 <flatcc_json_printer_string@@Base+0x64>
   3759c:	ldrb	sl, [r8, #1]!
   375a0:	cmp	sl, #31
   375a4:	bhi	3758c <flatcc_json_printer_string@@Base+0x48>
   375a8:	ldr	r0, [r4, #20]
   375ac:	ldr	r1, [r4, #16]
   375b0:	sub	r9, r8, r6
   375b4:	add	r2, r0, r9
   375b8:	cmp	r2, r1
   375bc:	bcs	375dc <flatcc_json_printer_string@@Base+0x98>
   375c0:	mov	r1, r6
   375c4:	mov	r2, r9
   375c8:	mov	r6, r3
   375cc:	bl	14e5c <memcpy@plt>
   375d0:	mov	r2, r6
   375d4:	mov	r7, r9
   375d8:	b	37668 <flatcc_json_printer_string@@Base+0x124>
   375dc:	cmp	r0, r1
   375e0:	str	r3, [sp, #8]
   375e4:	bcc	37600 <flatcc_json_printer_string@@Base+0xbc>
   375e8:	ldr	r2, [r4, #44]	; 0x2c
   375ec:	mov	r0, r4
   375f0:	mov	r1, #0
   375f4:	blx	r2
   375f8:	ldr	r1, [r4, #16]
   375fc:	ldr	r0, [r4, #20]
   37600:	sub	r5, r1, r0
   37604:	mov	r7, r9
   37608:	cmp	r5, r9
   3760c:	bcs	37654 <flatcc_json_printer_string@@Base+0x110>
   37610:	mov	r1, r6
   37614:	mov	r2, r5
   37618:	bl	14e5c <memcpy@plt>
   3761c:	ldr	r0, [r4, #20]
   37620:	ldr	r2, [r4, #44]	; 0x2c
   37624:	mov	r1, #0
   37628:	add	r0, r0, r5
   3762c:	str	r0, [r4, #20]
   37630:	mov	r0, r4
   37634:	blx	r2
   37638:	ldr	r1, [r4, #16]
   3763c:	ldr	r0, [r4, #20]
   37640:	sub	r7, r7, r5
   37644:	add	r6, r6, r5
   37648:	sub	r5, r1, r0
   3764c:	cmp	r7, r5
   37650:	bhi	37610 <flatcc_json_printer_string@@Base+0xcc>
   37654:	ldr	r5, [sp, #4]
   37658:	mov	r1, r6
   3765c:	mov	r2, r7
   37660:	bl	14e5c <memcpy@plt>
   37664:	ldr	r2, [sp, #8]
   37668:	ldr	r0, [r5]
   3766c:	add	r1, r0, r7
   37670:	add	r0, r1, #1
   37674:	str	r0, [r5]
   37678:	subs	r0, r2, r9
   3767c:	beq	377e0 <flatcc_json_printer_string@@Base+0x29c>
   37680:	mov	r2, #92	; 0x5c
   37684:	strb	r2, [r1]
   37688:	mvn	r1, #7
   3768c:	uxtab	r2, r1, sl
   37690:	uxtb	r1, sl
   37694:	cmp	r2, #5
   37698:	bhi	376d0 <flatcc_json_printer_string@@Base+0x18c>
   3769c:	add	r3, pc, #0
   376a0:	ldr	pc, [r3, r2, lsl #2]
   376a4:			; <UNDEFINED> instruction: 0x000376bc
   376a8:	andeq	r7, r3, r0, ror r7
   376ac:	andeq	r7, r3, r4, lsl #15
   376b0:	strdeq	r7, [r3], -r4
   376b4:	muleq	r3, r8, r7
   376b8:	andeq	r7, r3, ip, lsr #15
   376bc:	ldr	r1, [r5]
   376c0:	add	r2, r1, #1
   376c4:	str	r2, [r5]
   376c8:	mov	r2, #98	; 0x62
   376cc:	b	377d0 <flatcc_json_printer_string@@Base+0x28c>
   376d0:	cmp	r1, #92	; 0x5c
   376d4:	beq	377c0 <flatcc_json_printer_string@@Base+0x27c>
   376d8:	cmp	r1, #34	; 0x22
   376dc:	bne	376f4 <flatcc_json_printer_string@@Base+0x1b0>
   376e0:	ldr	r1, [r5]
   376e4:	add	r2, r1, #1
   376e8:	str	r2, [r5]
   376ec:	mov	r2, #34	; 0x22
   376f0:	b	377d0 <flatcc_json_printer_string@@Base+0x28c>
   376f4:	ldr	r2, [r5]
   376f8:	mov	r7, #48	; 0x30
   376fc:	cmp	r1, #160	; 0xa0
   37700:	add	r3, r2, #1
   37704:	str	r3, [r5]
   37708:	mov	r3, #117	; 0x75
   3770c:	strb	r3, [r2]
   37710:	ldr	r2, [r5]
   37714:	add	r3, r2, #1
   37718:	str	r3, [r5]
   3771c:	strb	r7, [r2]
   37720:	ldr	r2, [r5]
   37724:	add	r3, r2, #1
   37728:	str	r3, [r5]
   3772c:	strb	r7, [r2]
   37730:	ldr	r2, [r5]
   37734:	add	r3, r2, #1
   37738:	str	r3, [r5]
   3773c:	mov	r3, #87	; 0x57
   37740:	movwcc	r3, #48	; 0x30
   37744:	add	r1, r3, r1, lsr #4
   37748:	mov	r3, #87	; 0x57
   3774c:	strb	r1, [r2]
   37750:	ldr	r1, [r5]
   37754:	add	r2, r1, #1
   37758:	str	r2, [r5]
   3775c:	and	r2, sl, #15
   37760:	cmp	r2, #10
   37764:	movwcc	r3, #48	; 0x30
   37768:	add	r2, r3, r2
   3776c:	b	377d0 <flatcc_json_printer_string@@Base+0x28c>
   37770:	ldr	r1, [r5]
   37774:	add	r2, r1, #1
   37778:	str	r2, [r5]
   3777c:	mov	r2, #116	; 0x74
   37780:	b	377d0 <flatcc_json_printer_string@@Base+0x28c>
   37784:	ldr	r1, [r5]
   37788:	add	r2, r1, #1
   3778c:	str	r2, [r5]
   37790:	mov	r2, #110	; 0x6e
   37794:	b	377d0 <flatcc_json_printer_string@@Base+0x28c>
   37798:	ldr	r1, [r5]
   3779c:	add	r2, r1, #1
   377a0:	str	r2, [r5]
   377a4:	mov	r2, #102	; 0x66
   377a8:	b	377d0 <flatcc_json_printer_string@@Base+0x28c>
   377ac:	ldr	r1, [r5]
   377b0:	add	r2, r1, #1
   377b4:	str	r2, [r5]
   377b8:	mov	r2, #114	; 0x72
   377bc:	b	377d0 <flatcc_json_printer_string@@Base+0x28c>
   377c0:	ldr	r1, [r5]
   377c4:	add	r2, r1, #1
   377c8:	str	r2, [r5]
   377cc:	mov	r2, #92	; 0x5c
   377d0:	strb	r2, [r1]
   377d4:	sub	r3, r0, #1
   377d8:	add	r6, r8, #1
   377dc:	b	3757c <flatcc_json_printer_string@@Base+0x38>
   377e0:	mov	r0, #34	; 0x22
   377e4:	strb	r0, [r1]
   377e8:	sub	sp, fp, #28
   377ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000377f0 <flatcc_json_printer_write@@Base>:
   377f0:	push	{r4, r5, r6, r7, fp, lr}
   377f4:	add	fp, sp, #16
   377f8:	mov	r6, r1
   377fc:	mov	r5, r0
   37800:	ldr	r1, [r0, #16]
   37804:	ldr	r0, [r0, #20]
   37808:	mov	r4, r2
   3780c:	add	r2, r0, r2
   37810:	cmp	r2, r1
   37814:	bcc	37888 <flatcc_json_printer_write@@Base+0x98>
   37818:	cmp	r0, r1
   3781c:	bcc	37838 <flatcc_json_printer_write@@Base+0x48>
   37820:	ldr	r2, [r5, #44]	; 0x2c
   37824:	mov	r0, r5
   37828:	mov	r1, #0
   3782c:	blx	r2
   37830:	ldr	r1, [r5, #16]
   37834:	ldr	r0, [r5, #20]
   37838:	sub	r7, r1, r0
   3783c:	cmp	r7, r4
   37840:	bcs	37888 <flatcc_json_printer_write@@Base+0x98>
   37844:	mov	r1, r6
   37848:	mov	r2, r7
   3784c:	bl	14e5c <memcpy@plt>
   37850:	ldr	r0, [r5, #20]
   37854:	ldr	r2, [r5, #44]	; 0x2c
   37858:	mov	r1, #0
   3785c:	add	r0, r0, r7
   37860:	str	r0, [r5, #20]
   37864:	mov	r0, r5
   37868:	blx	r2
   3786c:	ldr	r1, [r5, #16]
   37870:	ldr	r0, [r5, #20]
   37874:	sub	r4, r4, r7
   37878:	add	r6, r6, r7
   3787c:	sub	r7, r1, r0
   37880:	cmp	r4, r7
   37884:	bhi	37844 <flatcc_json_printer_write@@Base+0x54>
   37888:	mov	r1, r6
   3788c:	mov	r2, r4
   37890:	bl	14e5c <memcpy@plt>
   37894:	ldr	r0, [r5, #20]
   37898:	add	r0, r0, r4
   3789c:	str	r0, [r5, #20]
   378a0:	pop	{r4, r5, r6, r7, fp, pc}

000378a4 <flatcc_json_printer_nl@@Base>:
   378a4:	ldr	r1, [r0, #20]
   378a8:	add	r2, r1, #1
   378ac:	str	r2, [r0, #20]
   378b0:	mov	r2, #10
   378b4:	strb	r2, [r1]
   378b8:	ldr	r1, [r0, #16]
   378bc:	ldr	r2, [r0, #20]
   378c0:	cmp	r2, r1
   378c4:	bxcc	lr
   378c8:	ldr	r2, [r0, #44]	; 0x2c
   378cc:	mov	r1, #0
   378d0:	bx	r2

000378d4 <flatcc_json_printer_char@@Base>:
   378d4:	ldr	r2, [r0, #20]
   378d8:	add	r3, r2, #1
   378dc:	str	r3, [r0, #20]
   378e0:	strb	r1, [r2]
   378e4:	bx	lr

000378e8 <flatcc_json_printer_indent@@Base>:
   378e8:	push	{r4, r5, r6, sl, fp, lr}
   378ec:	add	fp, sp, #16
   378f0:	mov	r4, r0
   378f4:	ldr	r1, [r0, #16]
   378f8:	ldr	r0, [r0, #20]
   378fc:	ldrb	r2, [r4, #25]
   37900:	ldr	r3, [r4, #32]
   37904:	mla	r6, r3, r2, r0
   37908:	mul	r5, r3, r2
   3790c:	cmp	r6, r1
   37910:	bls	37980 <flatcc_json_printer_indent@@Base+0x98>
   37914:	cmp	r0, r1
   37918:	bcc	37934 <flatcc_json_printer_indent@@Base+0x4c>
   3791c:	ldr	r2, [r4, #44]	; 0x2c
   37920:	mov	r0, r4
   37924:	mov	r1, #0
   37928:	blx	r2
   3792c:	ldr	r1, [r4, #16]
   37930:	ldr	r0, [r4, #20]
   37934:	sub	r6, r1, r0
   37938:	cmp	r6, r5
   3793c:	bcs	37980 <flatcc_json_printer_indent@@Base+0x98>
   37940:	mov	r1, #32
   37944:	mov	r2, r6
   37948:	bl	14eec <memset@plt>
   3794c:	ldr	r0, [r4, #20]
   37950:	ldr	r2, [r4, #44]	; 0x2c
   37954:	mov	r1, #0
   37958:	add	r0, r0, r6
   3795c:	str	r0, [r4, #20]
   37960:	mov	r0, r4
   37964:	blx	r2
   37968:	ldr	r1, [r4, #16]
   3796c:	ldr	r0, [r4, #20]
   37970:	sub	r5, r5, r6
   37974:	sub	r6, r1, r0
   37978:	cmp	r5, r6
   3797c:	bhi	37940 <flatcc_json_printer_indent@@Base+0x58>
   37980:	mov	r1, #32
   37984:	mov	r2, r5
   37988:	bl	14eec <memset@plt>
   3798c:	ldr	r0, [r4, #20]
   37990:	add	r0, r0, r5
   37994:	str	r0, [r4, #20]
   37998:	pop	{r4, r5, r6, sl, fp, pc}

0003799c <flatcc_json_printer_add_level@@Base>:
   3799c:	ldr	r2, [r0, #32]
   379a0:	add	r1, r2, r1
   379a4:	str	r1, [r0, #32]
   379a8:	bx	lr

000379ac <flatcc_json_printer_get_level@@Base>:
   379ac:	ldr	r0, [r0, #32]
   379b0:	bx	lr

000379b4 <flatcc_json_printer_uint8@@Base>:
   379b4:	push	{r4, sl, fp, lr}
   379b8:	add	fp, sp, #8
   379bc:	mov	r2, r1
   379c0:	ldr	r1, [r0, #20]
   379c4:	mov	r4, r0
   379c8:	mov	r0, r2
   379cc:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   379d0:	ldr	r1, [r4, #20]
   379d4:	add	r0, r1, r0
   379d8:	str	r0, [r4, #20]
   379dc:	pop	{r4, sl, fp, pc}
   379e0:	mov	r2, #0
   379e4:	cmp	r0, #100	; 0x64
   379e8:	bcc	37a34 <flatcc_json_printer_uint8@@Base+0x80>
   379ec:	strb	r2, [r1, #3]
   379f0:	movw	r2, #34079	; 0x851f
   379f4:	movt	r2, #20971	; 0x51eb
   379f8:	umull	r2, r3, r0, r2
   379fc:	mov	r2, #48	; 0x30
   37a00:	orr	r2, r2, r3, lsr #5
   37a04:	strb	r2, [r1]
   37a08:	lsr	r2, r3, #5
   37a0c:	mov	r3, #100	; 0x64
   37a10:	mls	r0, r2, r3, r0
   37a14:	movw	r2, #39096	; 0x98b8
   37a18:	movt	r2, #4
   37a1c:	uxtb	r0, r0
   37a20:	add	r0, r2, r0, lsl #1
   37a24:	ldrh	r0, [r0]
   37a28:	strh	r0, [r1, #1]
   37a2c:	mov	r0, #3
   37a30:	bx	lr
   37a34:	cmp	r0, #10
   37a38:	addcc	r0, r0, #48	; 0x30
   37a3c:	strbcc	r2, [r1, #1]
   37a40:	strbcc	r0, [r1]
   37a44:	movcc	r0, #1
   37a48:	bxcc	lr
   37a4c:	strb	r2, [r1, #2]
   37a50:	movw	r2, #34079	; 0x851f
   37a54:	movt	r2, #20971	; 0x51eb
   37a58:	umull	r2, r3, r0, r2
   37a5c:	lsr	r2, r3, #5
   37a60:	mov	r3, #100	; 0x64
   37a64:	mls	r0, r2, r3, r0
   37a68:	movw	r2, #39096	; 0x98b8
   37a6c:	movt	r2, #4
   37a70:	add	r0, r2, r0, lsl #1
   37a74:	ldrh	r0, [r0]
   37a78:	strh	r0, [r1]
   37a7c:	mov	r0, #2
   37a80:	bx	lr

00037a84 <flatcc_json_printer_uint16@@Base>:
   37a84:	push	{r4, sl, fp, lr}
   37a88:	add	fp, sp, #8
   37a8c:	mov	r2, r1
   37a90:	ldr	r1, [r0, #20]
   37a94:	mov	r4, r0
   37a98:	mov	r0, r2
   37a9c:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   37aa0:	ldr	r1, [r4, #20]
   37aa4:	add	r0, r1, r0
   37aa8:	str	r0, [r4, #20]
   37aac:	pop	{r4, sl, fp, pc}
   37ab0:	push	{fp, lr}
   37ab4:	mov	fp, sp
   37ab8:	mov	lr, r0
   37abc:	cmp	r0, #1000	; 0x3e8
   37ac0:	bcc	37ad8 <flatcc_json_printer_uint16@@Base+0x54>
   37ac4:	movw	r3, #9999	; 0x270f
   37ac8:	mov	r0, #4
   37acc:	cmp	lr, r3
   37ad0:	movwhi	r0, #5
   37ad4:	b	37afc <flatcc_json_printer_uint16@@Base+0x78>
   37ad8:	cmp	lr, #100	; 0x64
   37adc:	bcc	37af0 <flatcc_json_printer_uint16@@Base+0x6c>
   37ae0:	mov	r0, #0
   37ae4:	strb	r0, [r1, #3]!
   37ae8:	mov	r0, #3
   37aec:	b	37ba0 <flatcc_json_printer_uint16@@Base+0x11c>
   37af0:	cmp	lr, #9
   37af4:	mov	r0, #1
   37af8:	movwhi	r0, #2
   37afc:	mov	r3, #0
   37b00:	tst	r0, #1
   37b04:	strb	r3, [r1, r0]!
   37b08:	bne	37b50 <flatcc_json_printer_uint16@@Base+0xcc>
   37b0c:	cmp	r0, #2
   37b10:	beq	37be0 <flatcc_json_printer_uint16@@Base+0x15c>
   37b14:	cmp	r0, #4
   37b18:	popne	{fp, pc}
   37b1c:	movw	r2, #34079	; 0x851f
   37b20:	movt	r2, #20971	; 0x51eb
   37b24:	umull	r2, r3, lr, r2
   37b28:	mov	r2, #100	; 0x64
   37b2c:	lsr	r3, r3, #5
   37b30:	mls	r2, r3, r2, lr
   37b34:	uxth	ip, r2
   37b38:	movw	r2, #39096	; 0x98b8
   37b3c:	movt	r2, #4
   37b40:	add	r2, r2, ip, lsl #1
   37b44:	ldrh	r2, [r2]
   37b48:	strh	r2, [r1, #-2]!
   37b4c:	b	37be4 <flatcc_json_printer_uint16@@Base+0x160>
   37b50:	cmp	r0, #1
   37b54:	beq	37c18 <flatcc_json_printer_uint16@@Base+0x194>
   37b58:	cmp	r0, #3
   37b5c:	beq	37ba0 <flatcc_json_printer_uint16@@Base+0x11c>
   37b60:	cmp	r0, #5
   37b64:	bne	37c14 <flatcc_json_printer_uint16@@Base+0x190>
   37b68:	movw	r0, #34079	; 0x851f
   37b6c:	movw	r2, #39096	; 0x98b8
   37b70:	movt	r0, #20971	; 0x51eb
   37b74:	movt	r2, #4
   37b78:	umull	r0, r3, lr, r0
   37b7c:	mov	r0, #100	; 0x64
   37b80:	lsr	r3, r3, #5
   37b84:	mls	r0, r3, r0, lr
   37b88:	mov	lr, r3
   37b8c:	uxth	r0, r0
   37b90:	add	r0, r2, r0, lsl #1
   37b94:	ldrh	r0, [r0]
   37b98:	strh	r0, [r1, #-2]!
   37b9c:	mov	r0, #5
   37ba0:	movw	r3, #34079	; 0x851f
   37ba4:	uxth	ip, lr
   37ba8:	movt	r3, #20971	; 0x51eb
   37bac:	umull	r3, r2, ip, r3
   37bb0:	lsr	r3, r2, #5
   37bb4:	mov	r2, #100	; 0x64
   37bb8:	mls	r2, r3, r2, lr
   37bbc:	uxth	ip, r2
   37bc0:	movw	r2, #39096	; 0x98b8
   37bc4:	movt	r2, #4
   37bc8:	add	r2, r2, ip, lsl #1
   37bcc:	ldrh	r2, [r2]
   37bd0:	strh	r2, [r1, #-2]!
   37bd4:	add	r2, r3, #48	; 0x30
   37bd8:	strb	r2, [r1, #-1]
   37bdc:	pop	{fp, pc}
   37be0:	mov	r3, lr
   37be4:	uxth	ip, r3
   37be8:	movw	r3, #34079	; 0x851f
   37bec:	movt	r3, #20971	; 0x51eb
   37bf0:	umull	r3, r2, ip, r3
   37bf4:	mov	r3, #100	; 0x64
   37bf8:	lsr	r2, r2, #5
   37bfc:	mls	r2, r2, r3, ip
   37c00:	movw	r3, #39096	; 0x98b8
   37c04:	movt	r3, #4
   37c08:	add	r2, r3, r2, lsl #1
   37c0c:	ldrh	r2, [r2]
   37c10:	strh	r2, [r1, #-2]
   37c14:	pop	{fp, pc}
   37c18:	mov	r3, lr
   37c1c:	b	37bd4 <flatcc_json_printer_uint16@@Base+0x150>

00037c20 <flatcc_json_printer_uint32@@Base>:
   37c20:	push	{r4, sl, fp, lr}
   37c24:	add	fp, sp, #8
   37c28:	mov	r2, r1
   37c2c:	ldr	r1, [r0, #20]
   37c30:	mov	r4, r0
   37c34:	mov	r0, r2
   37c38:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   37c3c:	ldr	r1, [r4, #20]
   37c40:	add	r0, r1, r0
   37c44:	str	r0, [r4, #20]
   37c48:	pop	{r4, sl, fp, pc}
   37c4c:	push	{fp, lr}
   37c50:	mov	fp, sp
   37c54:	mov	lr, r0
   37c58:	movw	r0, #10000	; 0x2710
   37c5c:	cmp	lr, r0
   37c60:	bcc	37cc4 <flatcc_json_printer_uint32@@Base+0xa4>
   37c64:	movw	r0, #38528	; 0x9680
   37c68:	movt	r0, #152	; 0x98
   37c6c:	cmp	lr, r0
   37c70:	bcc	37ce0 <flatcc_json_printer_uint32@@Base+0xc0>
   37c74:	movw	r0, #51712	; 0xca00
   37c78:	movt	r0, #15258	; 0x3b9a
   37c7c:	cmp	lr, r0
   37c80:	bcc	37d10 <flatcc_json_printer_uint32@@Base+0xf0>
   37c84:	movw	r0, #34079	; 0x851f
   37c88:	movw	r2, #39096	; 0x98b8
   37c8c:	movt	r0, #20971	; 0x51eb
   37c90:	movt	r2, #4
   37c94:	umull	r0, r3, lr, r0
   37c98:	mov	r0, #100	; 0x64
   37c9c:	lsr	r3, r3, #5
   37ca0:	mls	r0, r3, r0, lr
   37ca4:	mov	lr, r3
   37ca8:	add	r0, r2, r0, lsl #1
   37cac:	ldrh	r0, [r0]
   37cb0:	strh	r0, [r1, #8]!
   37cb4:	mov	r0, #0
   37cb8:	strb	r0, [r1, #2]
   37cbc:	mov	r0, #10
   37cc0:	b	37d7c <flatcc_json_printer_uint32@@Base+0x15c>
   37cc4:	cmp	lr, #100	; 0x64
   37cc8:	bcc	37d00 <flatcc_json_printer_uint32@@Base+0xe0>
   37ccc:	lsr	r3, lr, #3
   37cd0:	mov	r0, #3
   37cd4:	cmp	r3, #124	; 0x7c
   37cd8:	movwhi	r0, #4
   37cdc:	b	37d3c <flatcc_json_printer_uint32@@Base+0x11c>
   37ce0:	movw	r0, #16960	; 0x4240
   37ce4:	movt	r0, #15
   37ce8:	cmp	lr, r0
   37cec:	bcc	37d28 <flatcc_json_printer_uint32@@Base+0x108>
   37cf0:	mov	r0, #0
   37cf4:	strb	r0, [r1, #7]!
   37cf8:	mov	r0, #7
   37cfc:	b	37ea8 <flatcc_json_printer_uint32@@Base+0x288>
   37d00:	cmp	lr, #9
   37d04:	mov	r0, #1
   37d08:	movwhi	r0, #2
   37d0c:	b	37d3c <flatcc_json_printer_uint32@@Base+0x11c>
   37d10:	movw	r3, #57599	; 0xe0ff
   37d14:	mov	r0, #8
   37d18:	movt	r3, #1525	; 0x5f5
   37d1c:	cmp	lr, r3
   37d20:	movwhi	r0, #9
   37d24:	b	37d3c <flatcc_json_printer_uint32@@Base+0x11c>
   37d28:	movw	r3, #34463	; 0x869f
   37d2c:	mov	r0, #5
   37d30:	movt	r3, #1
   37d34:	cmp	lr, r3
   37d38:	movwhi	r0, #6
   37d3c:	mov	r3, #0
   37d40:	tst	r0, #1
   37d44:	strb	r3, [r1, r0]!
   37d48:	bne	37e3c <flatcc_json_printer_uint32@@Base+0x21c>
   37d4c:	sub	r3, r0, #2
   37d50:	cmp	r3, #6
   37d54:	bhi	37f40 <flatcc_json_printer_uint32@@Base+0x320>
   37d58:	add	r2, pc, #0
   37d5c:	ldr	pc, [r2, r3, lsl #2]
   37d60:	andeq	r7, r3, ip, lsl #28
   37d64:	andeq	r7, r3, r0, asr #30
   37d68:	ldrdeq	r7, [r3], -ip
   37d6c:	andeq	r7, r3, r0, asr #30
   37d70:	andeq	r7, r3, ip, lsr #27
   37d74:	andeq	r7, r3, r0, asr #30
   37d78:	andeq	r7, r3, ip, ror sp
   37d7c:	movw	r2, #34079	; 0x851f
   37d80:	movt	r2, #20971	; 0x51eb
   37d84:	umull	r2, r3, lr, r2
   37d88:	lsr	r2, r3, #5
   37d8c:	mov	r3, #100	; 0x64
   37d90:	mls	ip, r2, r3, lr
   37d94:	movw	r3, #39096	; 0x98b8
   37d98:	mov	lr, r2
   37d9c:	movt	r3, #4
   37da0:	add	r3, r3, ip, lsl #1
   37da4:	ldrh	r3, [r3]
   37da8:	strh	r3, [r1, #-2]!
   37dac:	movw	r2, #34079	; 0x851f
   37db0:	movt	r2, #20971	; 0x51eb
   37db4:	umull	r2, r3, lr, r2
   37db8:	lsr	r2, r3, #5
   37dbc:	mov	r3, #100	; 0x64
   37dc0:	mls	ip, r2, r3, lr
   37dc4:	movw	r3, #39096	; 0x98b8
   37dc8:	mov	lr, r2
   37dcc:	movt	r3, #4
   37dd0:	add	r3, r3, ip, lsl #1
   37dd4:	ldrh	r3, [r3]
   37dd8:	strh	r3, [r1, #-2]!
   37ddc:	movw	r2, #34079	; 0x851f
   37de0:	movt	r2, #20971	; 0x51eb
   37de4:	umull	r2, r3, lr, r2
   37de8:	lsr	r2, r3, #5
   37dec:	mov	r3, #100	; 0x64
   37df0:	mls	ip, r2, r3, lr
   37df4:	movw	r3, #39096	; 0x98b8
   37df8:	mov	lr, r2
   37dfc:	movt	r3, #4
   37e00:	add	r3, r3, ip, lsl #1
   37e04:	ldrh	r3, [r3]
   37e08:	strh	r3, [r1, #-2]!
   37e0c:	movw	r2, #34079	; 0x851f
   37e10:	movt	r2, #20971	; 0x51eb
   37e14:	umull	r2, r3, lr, r2
   37e18:	lsr	r2, r3, #5
   37e1c:	mov	r3, #100	; 0x64
   37e20:	mls	r2, r2, r3, lr
   37e24:	movw	r3, #39096	; 0x98b8
   37e28:	movt	r3, #4
   37e2c:	add	r2, r3, r2, lsl #1
   37e30:	ldrh	r2, [r2]
   37e34:	strh	r2, [r1, #-2]
   37e38:	pop	{fp, pc}
   37e3c:	sub	ip, r0, #1
   37e40:	cmp	ip, #8
   37e44:	bhi	37f40 <flatcc_json_printer_uint32@@Base+0x320>
   37e48:	add	r3, pc, #0
   37e4c:	ldr	pc, [r3, ip, lsl #2]
   37e50:	andeq	r7, r3, r8, lsr pc
   37e54:	andeq	r7, r3, r0, asr #30
   37e58:	andeq	r7, r3, r8, lsl #30
   37e5c:	andeq	r7, r3, r0, asr #30
   37e60:	ldrdeq	r7, [r3], -r8
   37e64:	andeq	r7, r3, r0, asr #30
   37e68:	andeq	r7, r3, r8, lsr #29
   37e6c:	andeq	r7, r3, r0, asr #30
   37e70:	andeq	r7, r3, r4, ror lr
   37e74:	movw	r0, #34079	; 0x851f
   37e78:	movw	r2, #39096	; 0x98b8
   37e7c:	movt	r0, #20971	; 0x51eb
   37e80:	movt	r2, #4
   37e84:	umull	r0, r3, lr, r0
   37e88:	mov	r0, #100	; 0x64
   37e8c:	lsr	r3, r3, #5
   37e90:	mls	r0, r3, r0, lr
   37e94:	mov	lr, r3
   37e98:	add	r0, r2, r0, lsl #1
   37e9c:	ldrh	r0, [r0]
   37ea0:	strh	r0, [r1, #-2]!
   37ea4:	mov	r0, #9
   37ea8:	movw	r3, #34079	; 0x851f
   37eac:	movt	r3, #20971	; 0x51eb
   37eb0:	umull	r3, r2, lr, r3
   37eb4:	mov	r3, #100	; 0x64
   37eb8:	lsr	r2, r2, #5
   37ebc:	mls	ip, r2, r3, lr
   37ec0:	movw	r3, #39096	; 0x98b8
   37ec4:	mov	lr, r2
   37ec8:	movt	r3, #4
   37ecc:	add	r3, r3, ip, lsl #1
   37ed0:	ldrh	r3, [r3]
   37ed4:	strh	r3, [r1, #-2]!
   37ed8:	movw	r2, #34079	; 0x851f
   37edc:	movt	r2, #20971	; 0x51eb
   37ee0:	umull	r2, r3, lr, r2
   37ee4:	lsr	r2, r3, #5
   37ee8:	mov	r3, #100	; 0x64
   37eec:	mls	ip, r2, r3, lr
   37ef0:	movw	r3, #39096	; 0x98b8
   37ef4:	mov	lr, r2
   37ef8:	movt	r3, #4
   37efc:	add	r3, r3, ip, lsl #1
   37f00:	ldrh	r3, [r3]
   37f04:	strh	r3, [r1, #-2]!
   37f08:	movw	r2, #34079	; 0x851f
   37f0c:	movt	r2, #20971	; 0x51eb
   37f10:	umull	r2, r3, lr, r2
   37f14:	lsr	r2, r3, #5
   37f18:	mov	r3, #100	; 0x64
   37f1c:	mls	ip, r2, r3, lr
   37f20:	movw	r3, #39096	; 0x98b8
   37f24:	mov	lr, r2
   37f28:	movt	r3, #4
   37f2c:	add	r3, r3, ip, lsl #1
   37f30:	ldrh	r3, [r3]
   37f34:	strh	r3, [r1, #-2]!
   37f38:	add	r2, lr, #48	; 0x30
   37f3c:	strb	r2, [r1, #-1]
   37f40:	pop	{fp, pc}

00037f44 <flatcc_json_printer_uint64@@Base>:
   37f44:	push	{r4, sl, fp, lr}
   37f48:	add	fp, sp, #8
   37f4c:	mov	r1, r3
   37f50:	mov	r3, r2
   37f54:	ldr	r2, [r0, #20]
   37f58:	mov	r4, r0
   37f5c:	mov	r0, r3
   37f60:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   37f64:	ldr	r1, [r4, #20]
   37f68:	add	r0, r1, r0
   37f6c:	str	r0, [r4, #20]
   37f70:	pop	{r4, sl, fp, pc}
   37f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37f78:	add	fp, sp, #28
   37f7c:	sub	sp, sp, #4
   37f80:	mov	r7, r0
   37f84:	movw	r0, #51711	; 0xc9ff
   37f88:	mov	r4, r2
   37f8c:	movt	r0, #15258	; 0x3b9a
   37f90:	subs	r0, r0, r7
   37f94:	rscs	r0, r1, #0
   37f98:	bcc	37fb0 <flatcc_json_printer_uint64@@Base+0x6c>
   37f9c:	mov	r0, r7
   37fa0:	mov	r1, r4
   37fa4:	sub	sp, fp, #28
   37fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37fac:	b	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   37fb0:	mov	r6, r1
   37fb4:	movw	r1, #40960	; 0xa000
   37fb8:	movw	r9, #39096	; 0x98b8
   37fbc:	movw	r0, #2328	; 0x918
   37fc0:	movt	r1, #20082	; 0x4e72
   37fc4:	movt	r9, #4
   37fc8:	subs	r1, r7, r1
   37fcc:	sbcs	r0, r6, r0
   37fd0:	bcc	38030 <flatcc_json_printer_uint64@@Base+0xec>
   37fd4:	movw	r1, #0
   37fd8:	movw	r0, #34546	; 0x86f2
   37fdc:	movt	r1, #28609	; 0x6fc1
   37fe0:	movt	r0, #35	; 0x23
   37fe4:	subs	r1, r7, r1
   37fe8:	sbcs	r0, r6, r0
   37fec:	bcc	38060 <flatcc_json_printer_uint64@@Base+0x11c>
   37ff0:	movw	r1, #0
   37ff4:	movw	r0, #46771	; 0xb6b3
   37ff8:	movt	r1, #42852	; 0xa764
   37ffc:	movt	r0, #3552	; 0xde0
   38000:	subs	r1, r7, r1
   38004:	sbcs	r0, r6, r0
   38008:	bcc	380a8 <flatcc_json_printer_uint64@@Base+0x164>
   3800c:	movw	r1, #65535	; 0xffff
   38010:	movw	r0, #8964	; 0x2304
   38014:	mov	r8, #19
   38018:	movt	r1, #35303	; 0x89e7
   3801c:	movt	r0, #35527	; 0x8ac7
   38020:	subs	r1, r1, r7
   38024:	sbcs	r0, r0, r6
   38028:	movwcc	r8, #20
   3802c:	b	380e8 <flatcc_json_printer_uint64@@Base+0x1a4>
   38030:	movw	r0, #59392	; 0xe800
   38034:	movt	r0, #18550	; 0x4876
   38038:	subs	r0, r7, r0
   3803c:	sbcs	r0, r6, #23
   38040:	bcc	3808c <flatcc_json_printer_uint64@@Base+0x148>
   38044:	movw	r0, #4095	; 0xfff
   38048:	mov	r8, #12
   3804c:	movt	r0, #54437	; 0xd4a5
   38050:	subs	r0, r0, r7
   38054:	rscs	r0, r6, #232	; 0xe8
   38058:	movwcc	r8, #13
   3805c:	b	380e8 <flatcc_json_printer_uint64@@Base+0x1a4>
   38060:	movw	r1, #32768	; 0x8000
   38064:	movw	r0, #36222	; 0x8d7e
   38068:	movt	r1, #42182	; 0xa4c6
   3806c:	movt	r0, #3
   38070:	subs	r1, r7, r1
   38074:	sbcs	r0, r6, r0
   38078:	bcc	380cc <flatcc_json_printer_uint64@@Base+0x188>
   3807c:	mov	r0, #0
   38080:	mov	r8, #16
   38084:	strb	r0, [r4, #16]!
   38088:	b	38198 <flatcc_json_printer_uint64@@Base+0x254>
   3808c:	movw	r0, #58367	; 0xe3ff
   38090:	mov	r8, #10
   38094:	movt	r0, #21515	; 0x540b
   38098:	subs	r0, r0, r7
   3809c:	rscs	r0, r6, #2
   380a0:	movwcc	r8, #11
   380a4:	b	380e8 <flatcc_json_printer_uint64@@Base+0x1a4>
   380a8:	movw	r1, #65535	; 0xffff
   380ac:	movw	r0, #17784	; 0x4578
   380b0:	mov	r8, #17
   380b4:	movt	r1, #23945	; 0x5d89
   380b8:	movt	r0, #355	; 0x163
   380bc:	subs	r1, r1, r7
   380c0:	sbcs	r0, r0, r6
   380c4:	movwcc	r8, #18
   380c8:	b	380e8 <flatcc_json_printer_uint64@@Base+0x1a4>
   380cc:	movw	r1, #16383	; 0x3fff
   380d0:	movw	r0, #23283	; 0x5af3
   380d4:	mov	r8, #14
   380d8:	movt	r1, #4218	; 0x107a
   380dc:	subs	r1, r1, r7
   380e0:	sbcs	r0, r0, r6
   380e4:	movwcc	r8, #15
   380e8:	mov	r0, #0
   380ec:	tst	r8, #1
   380f0:	strb	r0, [r4, r8]!
   380f4:	bne	3825c <flatcc_json_printer_uint64@@Base+0x318>
   380f8:	sub	r0, r8, #10
   380fc:	cmp	r0, #10
   38100:	bhi	383a8 <flatcc_json_printer_uint64@@Base+0x464>
   38104:	add	r1, pc, #0
   38108:	ldr	pc, [r1, r0, lsl #2]
   3810c:	andeq	r8, r3, r8, lsr #4
   38110:	andeq	r8, r3, r8, lsr #7
   38114:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   38118:	andeq	r8, r3, r8, lsr #7
   3811c:	andeq	r8, r3, r8, asr #3
   38120:	andeq	r8, r3, r8, lsr #7
   38124:	muleq	r3, r8, r1
   38128:	andeq	r8, r3, r8, lsr #7
   3812c:	andeq	r8, r3, r8, ror #2
   38130:	andeq	r8, r3, r8, lsr #7
   38134:	andeq	r8, r3, r8, lsr r1
   38138:	mov	r0, r7
   3813c:	mov	r1, r6
   38140:	mov	r2, #100	; 0x64
   38144:	mov	r3, #0
   38148:	mov	r5, #100	; 0x64
   3814c:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38150:	mov	r6, r1
   38154:	mls	r1, r0, r5, r7
   38158:	mov	r7, r0
   3815c:	add	r1, r9, r1, lsl #1
   38160:	ldrh	r1, [r1]
   38164:	strh	r1, [r4, #-2]!
   38168:	mov	r0, r7
   3816c:	mov	r1, r6
   38170:	mov	r2, #100	; 0x64
   38174:	mov	r3, #0
   38178:	mov	r5, #100	; 0x64
   3817c:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38180:	mov	r6, r1
   38184:	mls	r1, r0, r5, r7
   38188:	mov	r7, r0
   3818c:	add	r1, r9, r1, lsl #1
   38190:	ldrh	r1, [r1]
   38194:	strh	r1, [r4, #-2]!
   38198:	mov	r0, r7
   3819c:	mov	r1, r6
   381a0:	mov	r2, #100	; 0x64
   381a4:	mov	r3, #0
   381a8:	mov	r5, #100	; 0x64
   381ac:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   381b0:	mov	r6, r1
   381b4:	mls	r1, r0, r5, r7
   381b8:	mov	r7, r0
   381bc:	add	r1, r9, r1, lsl #1
   381c0:	ldrh	r1, [r1]
   381c4:	strh	r1, [r4, #-2]!
   381c8:	mov	r0, r7
   381cc:	mov	r1, r6
   381d0:	mov	r2, #100	; 0x64
   381d4:	mov	r3, #0
   381d8:	mov	r5, #100	; 0x64
   381dc:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   381e0:	mov	r6, r1
   381e4:	mls	r1, r0, r5, r7
   381e8:	mov	r7, r0
   381ec:	add	r1, r9, r1, lsl #1
   381f0:	ldrh	r1, [r1]
   381f4:	strh	r1, [r4, #-2]!
   381f8:	mov	r0, r7
   381fc:	mov	r1, r6
   38200:	mov	r2, #100	; 0x64
   38204:	mov	r3, #0
   38208:	mov	r5, #100	; 0x64
   3820c:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38210:	mov	r6, r1
   38214:	mls	r1, r0, r5, r7
   38218:	mov	r7, r0
   3821c:	add	r1, r9, r1, lsl #1
   38220:	ldrh	r1, [r1]
   38224:	strh	r1, [r4, #-2]!
   38228:	mov	r0, r7
   3822c:	mov	r1, r6
   38230:	mov	r2, #100	; 0x64
   38234:	mov	r3, #0
   38238:	mov	r5, #100	; 0x64
   3823c:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38240:	mov	r6, r1
   38244:	mls	r1, r0, r5, r7
   38248:	mov	r7, r0
   3824c:	add	r1, r9, r1, lsl #1
   38250:	ldrh	r1, [r1]
   38254:	strh	r1, [r4, #-2]!
   38258:	b	383a8 <flatcc_json_printer_uint64@@Base+0x464>
   3825c:	sub	r0, r8, #11
   38260:	cmp	r0, #8
   38264:	bhi	383a8 <flatcc_json_printer_uint64@@Base+0x464>
   38268:	add	r1, pc, #0
   3826c:	ldr	pc, [r1, r0, lsl #2]
   38270:	andeq	r8, r3, ip, asr #6
   38274:	andeq	r8, r3, r8, lsr #7
   38278:	andeq	r8, r3, ip, lsl r3
   3827c:	andeq	r8, r3, r8, lsr #7
   38280:	andeq	r8, r3, ip, ror #5
   38284:	andeq	r8, r3, r8, lsr #7
   38288:			; <UNDEFINED> instruction: 0x000382bc
   3828c:	andeq	r8, r3, r8, lsr #7
   38290:	muleq	r3, r4, r2
   38294:	mov	r0, r7
   38298:	mov	r1, r6
   3829c:	mov	r2, #100	; 0x64
   382a0:	mov	r3, #0
   382a4:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   382a8:	mov	r7, r0
   382ac:	add	r0, r9, r2, lsl #1
   382b0:	mov	r6, r1
   382b4:	ldrh	r0, [r0]
   382b8:	strh	r0, [r4, #-2]!
   382bc:	mov	r0, r7
   382c0:	mov	r1, r6
   382c4:	mov	r2, #100	; 0x64
   382c8:	mov	r3, #0
   382cc:	mov	r5, #100	; 0x64
   382d0:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   382d4:	mov	r6, r1
   382d8:	mls	r1, r0, r5, r7
   382dc:	mov	r7, r0
   382e0:	add	r1, r9, r1, lsl #1
   382e4:	ldrh	r1, [r1]
   382e8:	strh	r1, [r4, #-2]!
   382ec:	mov	r0, r7
   382f0:	mov	r1, r6
   382f4:	mov	r2, #100	; 0x64
   382f8:	mov	r3, #0
   382fc:	mov	r5, #100	; 0x64
   38300:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38304:	mov	r6, r1
   38308:	mls	r1, r0, r5, r7
   3830c:	mov	r7, r0
   38310:	add	r1, r9, r1, lsl #1
   38314:	ldrh	r1, [r1]
   38318:	strh	r1, [r4, #-2]!
   3831c:	mov	r0, r7
   38320:	mov	r1, r6
   38324:	mov	r2, #100	; 0x64
   38328:	mov	r3, #0
   3832c:	mov	r5, #100	; 0x64
   38330:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38334:	mov	r6, r1
   38338:	mls	r1, r0, r5, r7
   3833c:	mov	r7, r0
   38340:	add	r1, r9, r1, lsl #1
   38344:	ldrh	r1, [r1]
   38348:	strh	r1, [r4, #-2]!
   3834c:	mov	r0, r7
   38350:	mov	r1, r6
   38354:	mov	r2, #100	; 0x64
   38358:	mov	r3, #0
   3835c:	mov	sl, #100	; 0x64
   38360:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38364:	mov	r2, #10
   38368:	mov	r3, #0
   3836c:	mov	r5, r0
   38370:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38374:	orr	r0, r2, #48	; 0x30
   38378:	mov	r1, r6
   3837c:	mov	r2, #1000	; 0x3e8
   38380:	mov	r3, #0
   38384:	strb	r0, [r4, #-3]!
   38388:	mls	r0, r5, sl, r7
   3838c:	add	r0, r9, r0, lsl #1
   38390:	ldrh	r0, [r0]
   38394:	strh	r0, [r4, #1]
   38398:	mov	r0, r7
   3839c:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   383a0:	mov	r7, r0
   383a4:	mov	r6, r1
   383a8:	mov	r0, r7
   383ac:	mov	r1, r6
   383b0:	mov	r2, #100	; 0x64
   383b4:	mov	r3, #0
   383b8:	mov	r5, #100	; 0x64
   383bc:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   383c0:	mls	r2, r0, r5, r7
   383c4:	mov	r3, #0
   383c8:	add	r2, r9, r2, lsl #1
   383cc:	ldrh	r2, [r2]
   383d0:	strh	r2, [r4, #-2]
   383d4:	mov	r2, #100	; 0x64
   383d8:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   383dc:	add	r0, r9, r2, lsl #1
   383e0:	mov	r1, r6
   383e4:	movw	r2, #10000	; 0x2710
   383e8:	mov	r3, #0
   383ec:	ldrh	r0, [r0]
   383f0:	strh	r0, [r4, #-4]
   383f4:	mov	r0, r7
   383f8:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   383fc:	mov	r2, #100	; 0x64
   38400:	mov	r3, #0
   38404:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38408:	add	r0, r9, r2, lsl #1
   3840c:	movw	r2, #16960	; 0x4240
   38410:	mov	r1, r6
   38414:	mov	r3, #0
   38418:	movt	r2, #15
   3841c:	ldrh	r0, [r0]
   38420:	strh	r0, [r4, #-6]
   38424:	mov	r0, r7
   38428:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   3842c:	mov	r2, #100	; 0x64
   38430:	mov	r3, #0
   38434:	bl	42fc0 <flatcc_json_printer_clear@@Base+0xb7c>
   38438:	add	r0, r9, r2, lsl #1
   3843c:	ldrh	r0, [r0]
   38440:	strh	r0, [r4, #-8]
   38444:	mov	r0, r8
   38448:	sub	sp, fp, #28
   3844c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00038450 <flatcc_json_printer_int8@@Base>:
   38450:	push	{r4, r5, fp, lr}
   38454:	add	fp, sp, #8
   38458:	mov	r2, r1
   3845c:	ldr	r1, [r0, #20]
   38460:	mov	r4, r0
   38464:	uxtb	r0, r2
   38468:	cmn	r2, #1
   3846c:	rsble	r2, r2, #0
   38470:	lsr	r5, r0, #7
   38474:	movle	r0, #45	; 0x2d
   38478:	strble	r0, [r1], #1
   3847c:	uxtb	r0, r2
   38480:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   38484:	ldr	r1, [r4, #20]
   38488:	add	r0, r0, r5
   3848c:	add	r0, r1, r0
   38490:	str	r0, [r4, #20]
   38494:	pop	{r4, r5, fp, pc}

00038498 <flatcc_json_printer_int16@@Base>:
   38498:	push	{r4, r5, fp, lr}
   3849c:	add	fp, sp, #8
   384a0:	mov	r2, r1
   384a4:	ldr	r1, [r0, #20]
   384a8:	mov	r4, r0
   384ac:	uxth	r0, r2
   384b0:	cmn	r2, #1
   384b4:	rsble	r2, r2, #0
   384b8:	lsr	r5, r0, #15
   384bc:	movle	r0, #45	; 0x2d
   384c0:	strble	r0, [r1], #1
   384c4:	uxth	r0, r2
   384c8:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   384cc:	ldr	r1, [r4, #20]
   384d0:	add	r0, r0, r5
   384d4:	add	r0, r1, r0
   384d8:	str	r0, [r4, #20]
   384dc:	pop	{r4, r5, fp, pc}

000384e0 <flatcc_json_printer_int32@@Base>:
   384e0:	push	{r4, r5, fp, lr}
   384e4:	add	fp, sp, #8
   384e8:	mov	r2, r1
   384ec:	lsr	r5, r1, #31
   384f0:	ldr	r1, [r0, #20]
   384f4:	mov	r4, r0
   384f8:	cmn	r2, #1
   384fc:	movle	r0, #45	; 0x2d
   38500:	rsble	r2, r2, #0
   38504:	strble	r0, [r1], #1
   38508:	mov	r0, r2
   3850c:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   38510:	ldr	r1, [r4, #20]
   38514:	add	r0, r0, r5
   38518:	add	r0, r1, r0
   3851c:	str	r0, [r4, #20]
   38520:	pop	{r4, r5, fp, pc}

00038524 <flatcc_json_printer_int64@@Base>:
   38524:	push	{r4, r5, fp, lr}
   38528:	add	fp, sp, #8
   3852c:	mov	r1, r3
   38530:	mov	r3, r2
   38534:	ldr	r2, [r0, #20]
   38538:	mov	r4, r0
   3853c:	lsr	r5, r1, #31
   38540:	cmn	r1, #1
   38544:	bgt	38558 <flatcc_json_printer_int64@@Base+0x34>
   38548:	mov	r0, #45	; 0x2d
   3854c:	rsbs	r3, r3, #0
   38550:	strb	r0, [r2], #1
   38554:	rsc	r1, r1, #0
   38558:	mov	r0, r3
   3855c:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   38560:	ldr	r1, [r4, #20]
   38564:	add	r0, r0, r5
   38568:	add	r0, r1, r0
   3856c:	str	r0, [r4, #20]
   38570:	pop	{r4, r5, fp, pc}

00038574 <flatcc_json_printer_float@@Base>:
   38574:	push	{r4, sl, fp, lr}
   38578:	add	fp, sp, #8
   3857c:	vcvt.f64.f32	d0, s0
   38580:	mov	r4, r0
   38584:	ldr	r0, [r0, #20]
   38588:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   3858c:	ldr	r1, [r4, #20]
   38590:	add	r0, r1, r0
   38594:	str	r0, [r4, #20]
   38598:	pop	{r4, sl, fp, pc}

0003859c <flatcc_json_printer_double@@Base>:
   3859c:	push	{r4, sl, fp, lr}
   385a0:	add	fp, sp, #8
   385a4:	mov	r4, r0
   385a8:	ldr	r0, [r0, #20]
   385ac:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   385b0:	ldr	r1, [r4, #20]
   385b4:	add	r0, r1, r0
   385b8:	str	r0, [r4, #20]
   385bc:	pop	{r4, sl, fp, pc}

000385c0 <flatcc_json_printer_enum@@Base>:
   385c0:	push	{r4, r5, r6, r7, fp, lr}
   385c4:	add	fp, sp, #16
   385c8:	mov	r4, r0
   385cc:	ldr	r0, [r0, #20]
   385d0:	mov	r6, r1
   385d4:	mov	r1, #34	; 0x22
   385d8:	mov	r5, r2
   385dc:	strb	r1, [r0]
   385e0:	ldrb	r2, [r4, #26]
   385e4:	ldr	r0, [r4, #20]
   385e8:	ldr	r1, [r4, #16]
   385ec:	cmp	r2, #0
   385f0:	addeq	r0, r0, #1
   385f4:	add	r2, r0, r5
   385f8:	str	r0, [r4, #20]
   385fc:	cmp	r2, r1
   38600:	bcc	38674 <flatcc_json_printer_enum@@Base+0xb4>
   38604:	cmp	r0, r1
   38608:	bcc	38624 <flatcc_json_printer_enum@@Base+0x64>
   3860c:	ldr	r2, [r4, #44]	; 0x2c
   38610:	mov	r0, r4
   38614:	mov	r1, #0
   38618:	blx	r2
   3861c:	ldr	r1, [r4, #16]
   38620:	ldr	r0, [r4, #20]
   38624:	sub	r7, r1, r0
   38628:	cmp	r7, r5
   3862c:	bcs	38674 <flatcc_json_printer_enum@@Base+0xb4>
   38630:	mov	r1, r6
   38634:	mov	r2, r7
   38638:	bl	14e5c <memcpy@plt>
   3863c:	ldr	r0, [r4, #20]
   38640:	ldr	r2, [r4, #44]	; 0x2c
   38644:	mov	r1, #0
   38648:	add	r0, r0, r7
   3864c:	str	r0, [r4, #20]
   38650:	mov	r0, r4
   38654:	blx	r2
   38658:	ldr	r1, [r4, #16]
   3865c:	ldr	r0, [r4, #20]
   38660:	sub	r5, r5, r7
   38664:	add	r6, r6, r7
   38668:	sub	r7, r1, r0
   3866c:	cmp	r5, r7
   38670:	bhi	38630 <flatcc_json_printer_enum@@Base+0x70>
   38674:	mov	r1, r6
   38678:	mov	r2, r5
   3867c:	bl	14e5c <memcpy@plt>
   38680:	ldr	r0, [r4, #20]
   38684:	add	r1, r0, r5
   38688:	str	r1, [r4, #20]
   3868c:	mov	r1, #34	; 0x22
   38690:	strb	r1, [r0, r5]
   38694:	ldrb	r0, [r4, #26]
   38698:	ldr	r1, [r4, #20]
   3869c:	cmp	r0, #0
   386a0:	addeq	r1, r1, #1
   386a4:	str	r1, [r4, #20]
   386a8:	pop	{r4, r5, r6, r7, fp, pc}

000386ac <flatcc_json_printer_delimit_enum_flags@@Base>:
   386ac:	ldrb	ip, [r0, #26]
   386b0:	ldr	r3, [r0, #20]
   386b4:	mov	r2, #34	; 0x22
   386b8:	cmp	r1, #0
   386bc:	movwne	r1, #1
   386c0:	strb	r2, [r3]
   386c4:	clz	r2, ip
   386c8:	lsr	r2, r2, #5
   386cc:	orr	r1, r1, r2
   386d0:	ldr	r2, [r0, #20]
   386d4:	add	r1, r2, r1
   386d8:	str	r1, [r0, #20]
   386dc:	bx	lr

000386e0 <flatcc_json_printer_enum_flag@@Base>:
   386e0:	push	{r4, r5, r6, r7, fp, lr}
   386e4:	add	fp, sp, #16
   386e8:	mov	r5, r0
   386ec:	ldr	r0, [r0, #20]
   386f0:	mov	r6, r2
   386f4:	mov	r2, #32
   386f8:	cmp	r1, #0
   386fc:	mov	r4, r3
   38700:	strb	r2, [r0]
   38704:	ldr	r0, [r5, #20]
   38708:	ldr	r2, [r5, #16]
   3870c:	addgt	r0, r0, #1
   38710:	add	r1, r0, r3
   38714:	str	r0, [r5, #20]
   38718:	cmp	r1, r2
   3871c:	bcc	38790 <flatcc_json_printer_enum_flag@@Base+0xb0>
   38720:	cmp	r0, r2
   38724:	bcc	38740 <flatcc_json_printer_enum_flag@@Base+0x60>
   38728:	ldr	r2, [r5, #44]	; 0x2c
   3872c:	mov	r0, r5
   38730:	mov	r1, #0
   38734:	blx	r2
   38738:	ldr	r2, [r5, #16]
   3873c:	ldr	r0, [r5, #20]
   38740:	sub	r7, r2, r0
   38744:	cmp	r7, r4
   38748:	bcs	38790 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3874c:	mov	r1, r6
   38750:	mov	r2, r7
   38754:	bl	14e5c <memcpy@plt>
   38758:	ldr	r0, [r5, #20]
   3875c:	ldr	r2, [r5, #44]	; 0x2c
   38760:	mov	r1, #0
   38764:	add	r0, r0, r7
   38768:	str	r0, [r5, #20]
   3876c:	mov	r0, r5
   38770:	blx	r2
   38774:	ldr	r1, [r5, #16]
   38778:	ldr	r0, [r5, #20]
   3877c:	sub	r4, r4, r7
   38780:	add	r6, r6, r7
   38784:	sub	r7, r1, r0
   38788:	cmp	r4, r7
   3878c:	bhi	3874c <flatcc_json_printer_enum_flag@@Base+0x6c>
   38790:	mov	r1, r6
   38794:	mov	r2, r4
   38798:	bl	14e5c <memcpy@plt>
   3879c:	ldr	r0, [r5, #20]
   387a0:	add	r0, r0, r4
   387a4:	str	r0, [r5, #20]
   387a8:	pop	{r4, r5, r6, r7, fp, pc}

000387ac <flatcc_json_printer_string_field@@Base>:
   387ac:	push	{r4, r5, fp, lr}
   387b0:	add	fp, sp, #8
   387b4:	mov	r4, r0
   387b8:	mov	r0, #4
   387bc:	add	r0, r0, r2, lsl #1
   387c0:	ldr	r2, [r1, #8]
   387c4:	cmp	r0, r2
   387c8:	popge	{r4, r5, fp, pc}
   387cc:	ldr	r2, [r1, #4]
   387d0:	add	r0, r2, r0
   387d4:	ldrh	r0, [r0]
   387d8:	cmp	r0, #0
   387dc:	ldrne	r2, [r1]
   387e0:	addsne	r5, r2, r0
   387e4:	bne	387ec <flatcc_json_printer_string_field@@Base+0x40>
   387e8:	pop	{r4, r5, fp, pc}
   387ec:	ldr	ip, [r1, #16]
   387f0:	ldr	r2, [fp, #8]
   387f4:	add	r0, ip, #1
   387f8:	cmp	ip, #0
   387fc:	str	r0, [r1, #16]
   38800:	beq	38818 <flatcc_json_printer_string_field@@Base+0x6c>
   38804:	ldr	r0, [r4, #20]
   38808:	add	r1, r0, #1
   3880c:	str	r1, [r4, #20]
   38810:	mov	r1, #44	; 0x2c
   38814:	strb	r1, [r0]
   38818:	mov	r0, r4
   3881c:	mov	r1, r3
   38820:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   38824:	ldr	r0, [r5]
   38828:	ldr	r2, [r5, r0]!
   3882c:	mov	r0, r4
   38830:	add	r1, r5, #4
   38834:	pop	{r4, r5, fp, lr}
   38838:	b	37548 <flatcc_json_printer_string@@Base+0x4>
   3883c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   38840:	add	fp, sp, #24
   38844:	mov	r4, r0
   38848:	mov	r6, r1
   3884c:	ldr	r0, [r0, #20]
   38850:	mov	r8, r2
   38854:	ldrb	r1, [r4, #25]
   38858:	cmp	r1, #0
   3885c:	beq	38918 <flatcc_json_printer_string_field@@Base+0x16c>
   38860:	add	r1, r0, #1
   38864:	str	r1, [r4, #20]
   38868:	mov	r1, #10
   3886c:	strb	r1, [r0]
   38870:	ldr	r0, [r4, #20]
   38874:	ldrb	r2, [r4, #25]
   38878:	ldr	r3, [r4, #32]
   3887c:	ldr	r1, [r4, #16]
   38880:	mla	r5, r3, r2, r0
   38884:	mul	r7, r3, r2
   38888:	cmp	r5, r1
   3888c:	bls	388fc <flatcc_json_printer_string_field@@Base+0x150>
   38890:	cmp	r0, r1
   38894:	bcc	388b0 <flatcc_json_printer_string_field@@Base+0x104>
   38898:	ldr	r2, [r4, #44]	; 0x2c
   3889c:	mov	r0, r4
   388a0:	mov	r1, #0
   388a4:	blx	r2
   388a8:	ldr	r1, [r4, #16]
   388ac:	ldr	r0, [r4, #20]
   388b0:	sub	r5, r1, r0
   388b4:	cmp	r5, r7
   388b8:	bcs	388fc <flatcc_json_printer_string_field@@Base+0x150>
   388bc:	mov	r1, #32
   388c0:	mov	r2, r5
   388c4:	bl	14eec <memset@plt>
   388c8:	ldr	r0, [r4, #20]
   388cc:	ldr	r2, [r4, #44]	; 0x2c
   388d0:	mov	r1, #0
   388d4:	add	r0, r0, r5
   388d8:	str	r0, [r4, #20]
   388dc:	mov	r0, r4
   388e0:	blx	r2
   388e4:	ldr	r1, [r4, #16]
   388e8:	ldr	r0, [r4, #20]
   388ec:	sub	r7, r7, r5
   388f0:	sub	r5, r1, r0
   388f4:	cmp	r7, r5
   388f8:	bhi	388bc <flatcc_json_printer_string_field@@Base+0x110>
   388fc:	mov	r1, #32
   38900:	mov	r2, r7
   38904:	bl	14eec <memset@plt>
   38908:	ldr	r0, [r4, #20]
   3890c:	add	r0, r0, r7
   38910:	str	r0, [r4, #20]
   38914:	b	38938 <flatcc_json_printer_string_field@@Base+0x18c>
   38918:	ldr	r1, [r4, #16]
   3891c:	cmp	r0, r1
   38920:	bcc	38938 <flatcc_json_printer_string_field@@Base+0x18c>
   38924:	ldr	r2, [r4, #44]	; 0x2c
   38928:	mov	r0, r4
   3892c:	mov	r1, #0
   38930:	blx	r2
   38934:	ldr	r0, [r4, #20]
   38938:	mov	r1, #34	; 0x22
   3893c:	strb	r1, [r0]
   38940:	ldrb	r2, [r4, #26]
   38944:	ldr	r0, [r4, #20]
   38948:	ldr	r1, [r4, #16]
   3894c:	cmp	r2, #0
   38950:	addeq	r0, r0, #1
   38954:	add	r2, r0, r8
   38958:	str	r0, [r4, #20]
   3895c:	cmp	r2, r1
   38960:	bcc	389d4 <flatcc_json_printer_string_field@@Base+0x228>
   38964:	cmp	r0, r1
   38968:	bcc	38984 <flatcc_json_printer_string_field@@Base+0x1d8>
   3896c:	ldr	r2, [r4, #44]	; 0x2c
   38970:	mov	r0, r4
   38974:	mov	r1, #0
   38978:	blx	r2
   3897c:	ldr	r1, [r4, #16]
   38980:	ldr	r0, [r4, #20]
   38984:	sub	r7, r1, r0
   38988:	cmp	r7, r8
   3898c:	bcs	389d4 <flatcc_json_printer_string_field@@Base+0x228>
   38990:	mov	r1, r6
   38994:	mov	r2, r7
   38998:	bl	14e5c <memcpy@plt>
   3899c:	ldr	r0, [r4, #20]
   389a0:	ldr	r2, [r4, #44]	; 0x2c
   389a4:	mov	r1, #0
   389a8:	add	r0, r0, r7
   389ac:	str	r0, [r4, #20]
   389b0:	mov	r0, r4
   389b4:	blx	r2
   389b8:	ldr	r1, [r4, #16]
   389bc:	ldr	r0, [r4, #20]
   389c0:	sub	r8, r8, r7
   389c4:	add	r6, r6, r7
   389c8:	sub	r7, r1, r0
   389cc:	cmp	r8, r7
   389d0:	bhi	38990 <flatcc_json_printer_string_field@@Base+0x1e4>
   389d4:	mov	r1, r6
   389d8:	mov	r2, r8
   389dc:	bl	14e5c <memcpy@plt>
   389e0:	ldr	r0, [r4, #20]
   389e4:	add	r1, r0, r8
   389e8:	str	r1, [r4, #20]
   389ec:	mov	r1, #34	; 0x22
   389f0:	strb	r1, [r0, r8]
   389f4:	ldrb	r0, [r4, #26]
   389f8:	ldr	r1, [r4, #20]
   389fc:	cmp	r0, #0
   38a00:	addeq	r1, r1, #1
   38a04:	add	r0, r1, #1
   38a08:	str	r0, [r4, #20]
   38a0c:	mov	r0, #58	; 0x3a
   38a10:	strb	r0, [r1]
   38a14:	mov	r1, #32
   38a18:	ldr	r0, [r4, #20]
   38a1c:	strb	r1, [r0]
   38a20:	ldrb	r0, [r4, #25]
   38a24:	ldr	r1, [r4, #20]
   38a28:	cmp	r0, #0
   38a2c:	addne	r1, r1, #1
   38a30:	str	r1, [r4, #20]
   38a34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00038a38 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   38a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38a3c:	add	fp, sp, #28
   38a40:	sub	sp, sp, #12
   38a44:	mov	r4, r0
   38a48:	mov	r0, #4
   38a4c:	add	r0, r0, r2, lsl #1
   38a50:	ldr	r2, [r1, #8]
   38a54:	cmp	r0, r2
   38a58:	bge	38bf8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   38a5c:	ldr	r2, [r1, #4]
   38a60:	add	r0, r2, r0
   38a64:	ldrh	r0, [r0]
   38a68:	cmp	r0, #0
   38a6c:	beq	38bf8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   38a70:	ldr	r5, [fp, #12]
   38a74:	ldr	r2, [r1]
   38a78:	cmp	r5, #0
   38a7c:	add	r6, r2, r0
   38a80:	movwne	r5, #1
   38a84:	cmp	r6, #0
   38a88:	beq	38bf8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   38a8c:	ldr	r0, [r1, #16]
   38a90:	ldr	r2, [fp, #8]
   38a94:	add	r7, r0, #1
   38a98:	cmp	r0, #0
   38a9c:	str	r7, [r1, #16]
   38aa0:	beq	38ab8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x80>
   38aa4:	ldr	r0, [r4, #20]
   38aa8:	add	r1, r0, #1
   38aac:	str	r1, [r4, #20]
   38ab0:	mov	r1, #44	; 0x2c
   38ab4:	strb	r1, [r0]
   38ab8:	mov	r0, r4
   38abc:	mov	r1, r3
   38ac0:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   38ac4:	ldr	r0, [r6]
   38ac8:	ldr	r0, [r6, r0]!
   38acc:	str	r0, [sp, #8]
   38ad0:	ldr	r0, [r4, #20]
   38ad4:	add	r1, r0, #1
   38ad8:	str	r1, [r4, #20]
   38adc:	mov	r1, #34	; 0x22
   38ae0:	strb	r1, [r0]
   38ae4:	movw	r1, #43691	; 0xaaab
   38ae8:	ldr	r0, [sp, #8]
   38aec:	movt	r1, #43690	; 0xaaaa
   38af0:	lsl	r0, r0, #2
   38af4:	umull	r0, r1, r0, r1
   38af8:	mov	r0, #3
   38afc:	add	r0, r0, r1, lsr #1
   38b00:	ldr	r1, [r4, #16]
   38b04:	bic	r7, r0, #3
   38b08:	ldr	r0, [r4, #20]
   38b0c:	add	r2, r0, r7
   38b10:	cmp	r2, r1
   38b14:	bcc	38b30 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   38b18:	ldr	r2, [r4, #44]	; 0x2c
   38b1c:	mov	r0, r4
   38b20:	mov	r1, #0
   38b24:	blx	r2
   38b28:	ldr	r1, [r4, #16]
   38b2c:	ldr	r0, [r4, #20]
   38b30:	add	r2, r0, r7
   38b34:	add	r6, r6, #4
   38b38:	cmp	r2, r1
   38b3c:	bls	38bd0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   38b40:	add	r9, sp, #4
   38b44:	mov	sl, #3
   38b48:	sub	r1, r1, r0
   38b4c:	bic	r7, r1, #3
   38b50:	add	r1, r7, r7, lsl #1
   38b54:	cmp	r1, #0
   38b58:	beq	38c00 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c8>
   38b5c:	lsr	r8, r1, #2
   38b60:	mov	r1, r6
   38b64:	mov	r2, r9
   38b68:	mov	r3, r5
   38b6c:	str	r8, [sp, #4]
   38b70:	bl	4286c <flatcc_json_printer_clear@@Base+0x428>
   38b74:	ldr	r0, [r4, #20]
   38b78:	mov	r1, #0
   38b7c:	add	r0, r0, r7
   38b80:	str	r0, [r4, #20]
   38b84:	ldr	r0, [sp, #8]
   38b88:	sub	r0, r0, r8
   38b8c:	str	r0, [sp, #8]
   38b90:	mov	r0, r4
   38b94:	ldr	r2, [r4, #44]	; 0x2c
   38b98:	blx	r2
   38b9c:	ldr	r0, [sp, #8]
   38ba0:	movw	r1, #43691	; 0xaaab
   38ba4:	add	r6, r6, r8
   38ba8:	movt	r1, #43690	; 0xaaaa
   38bac:	lsl	r0, r0, #2
   38bb0:	umull	r0, r1, r0, r1
   38bb4:	add	r0, sl, r1, lsr #1
   38bb8:	ldr	r1, [r4, #16]
   38bbc:	bic	r7, r0, #3
   38bc0:	ldr	r0, [r4, #20]
   38bc4:	add	r2, r0, r7
   38bc8:	cmp	r2, r1
   38bcc:	bhi	38b48 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x110>
   38bd0:	orr	r3, r5, #128	; 0x80
   38bd4:	add	r2, sp, #8
   38bd8:	mov	r1, r6
   38bdc:	bl	4286c <flatcc_json_printer_clear@@Base+0x428>
   38be0:	ldr	r0, [r4, #20]
   38be4:	add	r1, r0, r7
   38be8:	add	r1, r1, #1
   38bec:	str	r1, [r4, #20]
   38bf0:	mov	r1, #34	; 0x22
   38bf4:	strb	r1, [r0, r7]
   38bf8:	sub	sp, fp, #28
   38bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38c00:	movw	r0, #39297	; 0x9981
   38c04:	movw	r1, #38371	; 0x95e3
   38c08:	movw	r3, #39303	; 0x9987
   38c0c:	movw	r2, #277	; 0x115
   38c10:	movt	r0, #4
   38c14:	movt	r1, #4
   38c18:	movt	r3, #4
   38c1c:	bl	14f40 <__assert_fail@plt>

00038c20 <flatcc_json_printer_uint8_field@@Base>:
   38c20:	push	{r4, r5, r6, sl, fp, lr}
   38c24:	add	fp, sp, #16
   38c28:	mov	r4, r0
   38c2c:	mov	r0, #4
   38c30:	ldr	r5, [r1, #8]
   38c34:	add	r2, r0, r2, lsl #1
   38c38:	ldr	r0, [fp, #12]
   38c3c:	cmp	r2, r5
   38c40:	bge	38c60 <flatcc_json_printer_uint8_field@@Base+0x40>
   38c44:	ldr	r5, [r1, #4]
   38c48:	add	r2, r5, r2
   38c4c:	ldrh	r2, [r2]
   38c50:	cmp	r2, #0
   38c54:	ldrne	r5, [r1]
   38c58:	addsne	r2, r5, r2
   38c5c:	bne	38cc4 <flatcc_json_printer_uint8_field@@Base+0xa4>
   38c60:	ldrb	r2, [r4, #29]
   38c64:	mov	r6, r0
   38c68:	cmp	r2, #0
   38c6c:	beq	38cc0 <flatcc_json_printer_uint8_field@@Base+0xa0>
   38c70:	ldr	r0, [r1, #16]
   38c74:	ldr	r2, [fp, #8]
   38c78:	add	r5, r0, #1
   38c7c:	cmp	r0, #0
   38c80:	str	r5, [r1, #16]
   38c84:	beq	38c9c <flatcc_json_printer_uint8_field@@Base+0x7c>
   38c88:	ldr	r0, [r4, #20]
   38c8c:	add	r1, r0, #1
   38c90:	str	r1, [r4, #20]
   38c94:	mov	r1, #44	; 0x2c
   38c98:	strb	r1, [r0]
   38c9c:	mov	r0, r4
   38ca0:	mov	r1, r3
   38ca4:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   38ca8:	ldr	r1, [r4, #20]
   38cac:	mov	r0, r6
   38cb0:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   38cb4:	ldr	r1, [r4, #20]
   38cb8:	add	r0, r1, r0
   38cbc:	str	r0, [r4, #20]
   38cc0:	pop	{r4, r5, r6, sl, fp, pc}
   38cc4:	ldrb	r6, [r2]
   38cc8:	cmp	r6, r0
   38ccc:	bne	38c70 <flatcc_json_printer_uint8_field@@Base+0x50>
   38cd0:	ldrb	r2, [r4, #28]
   38cd4:	mov	r6, r0
   38cd8:	cmp	r2, #0
   38cdc:	popne	{r4, r5, r6, sl, fp, pc}
   38ce0:	b	38c70 <flatcc_json_printer_uint8_field@@Base+0x50>

00038ce4 <flatcc_json_printer_uint16_field@@Base>:
   38ce4:	push	{r4, r5, r6, sl, fp, lr}
   38ce8:	add	fp, sp, #16
   38cec:	mov	r4, r0
   38cf0:	mov	r0, #4
   38cf4:	ldr	r5, [r1, #8]
   38cf8:	add	r2, r0, r2, lsl #1
   38cfc:	ldr	r0, [fp, #12]
   38d00:	cmp	r2, r5
   38d04:	bge	38d24 <flatcc_json_printer_uint16_field@@Base+0x40>
   38d08:	ldr	r5, [r1, #4]
   38d0c:	add	r2, r5, r2
   38d10:	ldrh	r2, [r2]
   38d14:	cmp	r2, #0
   38d18:	ldrne	r5, [r1]
   38d1c:	addsne	r2, r5, r2
   38d20:	bne	38d88 <flatcc_json_printer_uint16_field@@Base+0xa4>
   38d24:	ldrb	r2, [r4, #29]
   38d28:	mov	r6, r0
   38d2c:	cmp	r2, #0
   38d30:	beq	38d84 <flatcc_json_printer_uint16_field@@Base+0xa0>
   38d34:	ldr	r0, [r1, #16]
   38d38:	ldr	r2, [fp, #8]
   38d3c:	add	r5, r0, #1
   38d40:	cmp	r0, #0
   38d44:	str	r5, [r1, #16]
   38d48:	beq	38d60 <flatcc_json_printer_uint16_field@@Base+0x7c>
   38d4c:	ldr	r0, [r4, #20]
   38d50:	add	r1, r0, #1
   38d54:	str	r1, [r4, #20]
   38d58:	mov	r1, #44	; 0x2c
   38d5c:	strb	r1, [r0]
   38d60:	mov	r0, r4
   38d64:	mov	r1, r3
   38d68:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   38d6c:	ldr	r1, [r4, #20]
   38d70:	mov	r0, r6
   38d74:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   38d78:	ldr	r1, [r4, #20]
   38d7c:	add	r0, r1, r0
   38d80:	str	r0, [r4, #20]
   38d84:	pop	{r4, r5, r6, sl, fp, pc}
   38d88:	ldrh	r6, [r2]
   38d8c:	cmp	r6, r0
   38d90:	bne	38d34 <flatcc_json_printer_uint16_field@@Base+0x50>
   38d94:	ldrb	r2, [r4, #28]
   38d98:	mov	r6, r0
   38d9c:	cmp	r2, #0
   38da0:	popne	{r4, r5, r6, sl, fp, pc}
   38da4:	b	38d34 <flatcc_json_printer_uint16_field@@Base+0x50>

00038da8 <flatcc_json_printer_uint32_field@@Base>:
   38da8:	push	{r4, r5, r6, sl, fp, lr}
   38dac:	add	fp, sp, #16
   38db0:	mov	r4, r0
   38db4:	mov	r0, #4
   38db8:	ldr	r5, [r1, #8]
   38dbc:	add	r2, r0, r2, lsl #1
   38dc0:	ldr	r0, [fp, #12]
   38dc4:	cmp	r2, r5
   38dc8:	bge	38de8 <flatcc_json_printer_uint32_field@@Base+0x40>
   38dcc:	ldr	r5, [r1, #4]
   38dd0:	add	r2, r5, r2
   38dd4:	ldrh	r2, [r2]
   38dd8:	cmp	r2, #0
   38ddc:	ldrne	r5, [r1]
   38de0:	addsne	r2, r5, r2
   38de4:	bne	38e4c <flatcc_json_printer_uint32_field@@Base+0xa4>
   38de8:	ldrb	r2, [r4, #29]
   38dec:	mov	r6, r0
   38df0:	cmp	r2, #0
   38df4:	beq	38e48 <flatcc_json_printer_uint32_field@@Base+0xa0>
   38df8:	ldr	r0, [r1, #16]
   38dfc:	ldr	r2, [fp, #8]
   38e00:	add	r5, r0, #1
   38e04:	cmp	r0, #0
   38e08:	str	r5, [r1, #16]
   38e0c:	beq	38e24 <flatcc_json_printer_uint32_field@@Base+0x7c>
   38e10:	ldr	r0, [r4, #20]
   38e14:	add	r1, r0, #1
   38e18:	str	r1, [r4, #20]
   38e1c:	mov	r1, #44	; 0x2c
   38e20:	strb	r1, [r0]
   38e24:	mov	r0, r4
   38e28:	mov	r1, r3
   38e2c:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   38e30:	ldr	r1, [r4, #20]
   38e34:	mov	r0, r6
   38e38:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   38e3c:	ldr	r1, [r4, #20]
   38e40:	add	r0, r1, r0
   38e44:	str	r0, [r4, #20]
   38e48:	pop	{r4, r5, r6, sl, fp, pc}
   38e4c:	ldr	r6, [r2]
   38e50:	cmp	r6, r0
   38e54:	bne	38df8 <flatcc_json_printer_uint32_field@@Base+0x50>
   38e58:	ldrb	r2, [r4, #28]
   38e5c:	mov	r6, r0
   38e60:	cmp	r2, #0
   38e64:	popne	{r4, r5, r6, sl, fp, pc}
   38e68:	b	38df8 <flatcc_json_printer_uint32_field@@Base+0x50>

00038e6c <flatcc_json_printer_uint64_field@@Base>:
   38e6c:	push	{r4, r6, r7, r8, fp, lr}
   38e70:	add	fp, sp, #16
   38e74:	mov	r4, r0
   38e78:	mov	r0, #4
   38e7c:	ldr	r6, [r1, #8]
   38e80:	ldr	lr, [fp, #20]
   38e84:	add	r7, r0, r2, lsl #1
   38e88:	ldr	r2, [fp, #16]
   38e8c:	cmp	r7, r6
   38e90:	bge	38eb0 <flatcc_json_printer_uint64_field@@Base+0x44>
   38e94:	ldr	r6, [r1, #4]
   38e98:	add	r7, r6, r7
   38e9c:	ldrh	r7, [r7]
   38ea0:	cmp	r7, #0
   38ea4:	ldrne	r6, [r1]
   38ea8:	addsne	r7, r6, r7
   38eac:	bne	38f1c <flatcc_json_printer_uint64_field@@Base+0xb0>
   38eb0:	ldrb	r0, [r4, #29]
   38eb4:	mov	r8, r2
   38eb8:	mov	r7, lr
   38ebc:	cmp	r0, #0
   38ec0:	beq	38f18 <flatcc_json_printer_uint64_field@@Base+0xac>
   38ec4:	ldr	r0, [r1, #16]
   38ec8:	ldr	r2, [fp, #8]
   38ecc:	add	r6, r0, #1
   38ed0:	cmp	r0, #0
   38ed4:	str	r6, [r1, #16]
   38ed8:	beq	38ef0 <flatcc_json_printer_uint64_field@@Base+0x84>
   38edc:	ldr	r0, [r4, #20]
   38ee0:	add	r1, r0, #1
   38ee4:	str	r1, [r4, #20]
   38ee8:	mov	r1, #44	; 0x2c
   38eec:	strb	r1, [r0]
   38ef0:	mov	r0, r4
   38ef4:	mov	r1, r3
   38ef8:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   38efc:	ldr	r2, [r4, #20]
   38f00:	mov	r0, r8
   38f04:	mov	r1, r7
   38f08:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   38f0c:	ldr	r1, [r4, #20]
   38f10:	add	r0, r1, r0
   38f14:	str	r0, [r4, #20]
   38f18:	pop	{r4, r6, r7, r8, fp, pc}
   38f1c:	ldr	r8, [r7]
   38f20:	ldr	r7, [r7, #4]
   38f24:	eor	ip, r7, lr
   38f28:	eor	r0, r8, r2
   38f2c:	orrs	r0, r0, ip
   38f30:	bne	38ec4 <flatcc_json_printer_uint64_field@@Base+0x58>
   38f34:	ldrb	r0, [r4, #28]
   38f38:	mov	r8, r2
   38f3c:	mov	r7, lr
   38f40:	cmp	r0, #0
   38f44:	popne	{r4, r6, r7, r8, fp, pc}
   38f48:	b	38ec4 <flatcc_json_printer_uint64_field@@Base+0x58>

00038f4c <flatcc_json_printer_int8_field@@Base>:
   38f4c:	push	{r4, r5, r6, sl, fp, lr}
   38f50:	add	fp, sp, #16
   38f54:	mov	r4, r0
   38f58:	mov	r0, #4
   38f5c:	ldr	r6, [r1, #8]
   38f60:	add	r2, r0, r2, lsl #1
   38f64:	ldr	r0, [fp, #12]
   38f68:	cmp	r2, r6
   38f6c:	bge	38f8c <flatcc_json_printer_int8_field@@Base+0x40>
   38f70:	ldr	r6, [r1, #4]
   38f74:	add	r2, r6, r2
   38f78:	ldrh	r2, [r2]
   38f7c:	cmp	r2, #0
   38f80:	ldrne	r6, [r1]
   38f84:	addsne	r2, r6, r2
   38f88:	bne	39010 <flatcc_json_printer_int8_field@@Base+0xc4>
   38f8c:	ldrb	r2, [r4, #29]
   38f90:	mov	r5, r0
   38f94:	cmp	r2, #0
   38f98:	beq	3900c <flatcc_json_printer_int8_field@@Base+0xc0>
   38f9c:	ldr	r0, [r1, #16]
   38fa0:	ldr	r2, [fp, #8]
   38fa4:	add	r6, r0, #1
   38fa8:	cmp	r0, #0
   38fac:	str	r6, [r1, #16]
   38fb0:	beq	38fc8 <flatcc_json_printer_int8_field@@Base+0x7c>
   38fb4:	ldr	r0, [r4, #20]
   38fb8:	add	r1, r0, #1
   38fbc:	str	r1, [r4, #20]
   38fc0:	mov	r1, #44	; 0x2c
   38fc4:	strb	r1, [r0]
   38fc8:	mov	r0, r4
   38fcc:	mov	r1, r3
   38fd0:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   38fd4:	uxtb	r0, r5
   38fd8:	ldr	r1, [r4, #20]
   38fdc:	lsr	r6, r0, #7
   38fe0:	sxtb	r0, r5
   38fe4:	cmn	r0, #1
   38fe8:	movle	r0, #45	; 0x2d
   38fec:	rsble	r5, r5, #0
   38ff0:	strble	r0, [r1], #1
   38ff4:	uxtb	r0, r5
   38ff8:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   38ffc:	ldr	r1, [r4, #20]
   39000:	add	r0, r0, r6
   39004:	add	r0, r1, r0
   39008:	str	r0, [r4, #20]
   3900c:	pop	{r4, r5, r6, sl, fp, pc}
   39010:	ldrb	r5, [r2]
   39014:	uxtb	r2, r0
   39018:	cmp	r5, r2
   3901c:	bne	38f9c <flatcc_json_printer_int8_field@@Base+0x50>
   39020:	ldrb	r2, [r4, #28]
   39024:	mov	r5, r0
   39028:	cmp	r2, #0
   3902c:	popne	{r4, r5, r6, sl, fp, pc}
   39030:	b	38f9c <flatcc_json_printer_int8_field@@Base+0x50>

00039034 <flatcc_json_printer_int16_field@@Base>:
   39034:	push	{r4, r5, r6, sl, fp, lr}
   39038:	add	fp, sp, #16
   3903c:	mov	r4, r0
   39040:	mov	r0, #4
   39044:	ldr	r6, [r1, #8]
   39048:	add	r2, r0, r2, lsl #1
   3904c:	ldr	r0, [fp, #12]
   39050:	cmp	r2, r6
   39054:	bge	39074 <flatcc_json_printer_int16_field@@Base+0x40>
   39058:	ldr	r6, [r1, #4]
   3905c:	add	r2, r6, r2
   39060:	ldrh	r2, [r2]
   39064:	cmp	r2, #0
   39068:	ldrne	r6, [r1]
   3906c:	addsne	r2, r6, r2
   39070:	bne	390f8 <flatcc_json_printer_int16_field@@Base+0xc4>
   39074:	ldrb	r2, [r4, #29]
   39078:	mov	r5, r0
   3907c:	cmp	r2, #0
   39080:	beq	390f4 <flatcc_json_printer_int16_field@@Base+0xc0>
   39084:	ldr	r0, [r1, #16]
   39088:	ldr	r2, [fp, #8]
   3908c:	add	r6, r0, #1
   39090:	cmp	r0, #0
   39094:	str	r6, [r1, #16]
   39098:	beq	390b0 <flatcc_json_printer_int16_field@@Base+0x7c>
   3909c:	ldr	r0, [r4, #20]
   390a0:	add	r1, r0, #1
   390a4:	str	r1, [r4, #20]
   390a8:	mov	r1, #44	; 0x2c
   390ac:	strb	r1, [r0]
   390b0:	mov	r0, r4
   390b4:	mov	r1, r3
   390b8:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   390bc:	uxth	r0, r5
   390c0:	ldr	r1, [r4, #20]
   390c4:	lsr	r6, r0, #15
   390c8:	sxth	r0, r5
   390cc:	cmn	r0, #1
   390d0:	movle	r0, #45	; 0x2d
   390d4:	rsble	r5, r5, #0
   390d8:	strble	r0, [r1], #1
   390dc:	uxth	r0, r5
   390e0:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   390e4:	ldr	r1, [r4, #20]
   390e8:	add	r0, r0, r6
   390ec:	add	r0, r1, r0
   390f0:	str	r0, [r4, #20]
   390f4:	pop	{r4, r5, r6, sl, fp, pc}
   390f8:	ldrh	r5, [r2]
   390fc:	uxth	r2, r0
   39100:	cmp	r5, r2
   39104:	bne	39084 <flatcc_json_printer_int16_field@@Base+0x50>
   39108:	ldrb	r2, [r4, #28]
   3910c:	mov	r5, r0
   39110:	cmp	r2, #0
   39114:	popne	{r4, r5, r6, sl, fp, pc}
   39118:	b	39084 <flatcc_json_printer_int16_field@@Base+0x50>

0003911c <flatcc_json_printer_int32_field@@Base>:
   3911c:	push	{r4, r5, r6, sl, fp, lr}
   39120:	add	fp, sp, #16
   39124:	mov	r4, r0
   39128:	mov	r0, #4
   3912c:	ldr	r6, [r1, #8]
   39130:	add	r2, r0, r2, lsl #1
   39134:	ldr	r0, [fp, #12]
   39138:	cmp	r2, r6
   3913c:	bge	3915c <flatcc_json_printer_int32_field@@Base+0x40>
   39140:	ldr	r6, [r1, #4]
   39144:	add	r2, r6, r2
   39148:	ldrh	r2, [r2]
   3914c:	cmp	r2, #0
   39150:	ldrne	r6, [r1]
   39154:	addsne	r2, r6, r2
   39158:	bne	391d8 <flatcc_json_printer_int32_field@@Base+0xbc>
   3915c:	ldrb	r2, [r4, #29]
   39160:	mov	r5, r0
   39164:	cmp	r2, #0
   39168:	beq	391d4 <flatcc_json_printer_int32_field@@Base+0xb8>
   3916c:	ldr	r0, [r1, #16]
   39170:	ldr	r2, [fp, #8]
   39174:	add	r6, r0, #1
   39178:	cmp	r0, #0
   3917c:	str	r6, [r1, #16]
   39180:	beq	39198 <flatcc_json_printer_int32_field@@Base+0x7c>
   39184:	ldr	r0, [r4, #20]
   39188:	add	r1, r0, #1
   3918c:	str	r1, [r4, #20]
   39190:	mov	r1, #44	; 0x2c
   39194:	strb	r1, [r0]
   39198:	mov	r0, r4
   3919c:	mov	r1, r3
   391a0:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   391a4:	ldr	r1, [r4, #20]
   391a8:	cmn	r5, #1
   391ac:	lsr	r6, r5, #31
   391b0:	movle	r0, #45	; 0x2d
   391b4:	rsble	r5, r5, #0
   391b8:	strble	r0, [r1], #1
   391bc:	mov	r0, r5
   391c0:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   391c4:	ldr	r1, [r4, #20]
   391c8:	add	r0, r0, r6
   391cc:	add	r0, r1, r0
   391d0:	str	r0, [r4, #20]
   391d4:	pop	{r4, r5, r6, sl, fp, pc}
   391d8:	ldr	r5, [r2]
   391dc:	cmp	r5, r0
   391e0:	bne	3916c <flatcc_json_printer_int32_field@@Base+0x50>
   391e4:	ldrb	r2, [r4, #28]
   391e8:	mov	r5, r0
   391ec:	cmp	r2, #0
   391f0:	popne	{r4, r5, r6, sl, fp, pc}
   391f4:	b	3916c <flatcc_json_printer_int32_field@@Base+0x50>

000391f8 <flatcc_json_printer_int64_field@@Base>:
   391f8:	push	{r4, r5, r6, r7, fp, lr}
   391fc:	add	fp, sp, #16
   39200:	mov	r4, r0
   39204:	mov	r0, #4
   39208:	ldr	r6, [r1, #8]
   3920c:	add	r7, r0, r2, lsl #1
   39210:	ldr	r0, [fp, #20]
   39214:	ldr	r2, [fp, #16]
   39218:	cmp	r7, r6
   3921c:	bge	3923c <flatcc_json_printer_int64_field@@Base+0x44>
   39220:	ldr	r6, [r1, #4]
   39224:	add	r7, r6, r7
   39228:	ldrh	r7, [r7]
   3922c:	cmp	r7, #0
   39230:	ldrne	r6, [r1]
   39234:	addsne	r7, r6, r7
   39238:	bne	392c8 <flatcc_json_printer_int64_field@@Base+0xd0>
   3923c:	ldrb	r7, [r4, #29]
   39240:	mov	r6, r2
   39244:	cmp	r7, #0
   39248:	mov	r7, r0
   3924c:	beq	392c4 <flatcc_json_printer_int64_field@@Base+0xcc>
   39250:	ldr	r0, [r1, #16]
   39254:	ldr	r2, [fp, #8]
   39258:	add	r5, r0, #1
   3925c:	cmp	r0, #0
   39260:	str	r5, [r1, #16]
   39264:	beq	3927c <flatcc_json_printer_int64_field@@Base+0x84>
   39268:	ldr	r0, [r4, #20]
   3926c:	add	r1, r0, #1
   39270:	str	r1, [r4, #20]
   39274:	mov	r1, #44	; 0x2c
   39278:	strb	r1, [r0]
   3927c:	mov	r0, r4
   39280:	mov	r1, r3
   39284:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39288:	ldr	r2, [r4, #20]
   3928c:	lsr	r5, r7, #31
   39290:	cmn	r7, #1
   39294:	bgt	392a8 <flatcc_json_printer_int64_field@@Base+0xb0>
   39298:	mov	r0, #45	; 0x2d
   3929c:	rsbs	r6, r6, #0
   392a0:	strb	r0, [r2], #1
   392a4:	rsc	r7, r7, #0
   392a8:	mov	r0, r6
   392ac:	mov	r1, r7
   392b0:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   392b4:	ldr	r1, [r4, #20]
   392b8:	add	r0, r0, r5
   392bc:	add	r0, r1, r0
   392c0:	str	r0, [r4, #20]
   392c4:	pop	{r4, r5, r6, r7, fp, pc}
   392c8:	ldrd	r6, [r7]
   392cc:	eor	ip, r7, r0
   392d0:	eor	r5, r6, r2
   392d4:	orrs	r5, r5, ip
   392d8:	bne	39250 <flatcc_json_printer_int64_field@@Base+0x58>
   392dc:	ldrb	r7, [r4, #28]
   392e0:	mov	r6, r2
   392e4:	cmp	r7, #0
   392e8:	mov	r7, r0
   392ec:	popne	{r4, r5, r6, r7, fp, pc}
   392f0:	b	39250 <flatcc_json_printer_int64_field@@Base+0x58>

000392f4 <flatcc_json_printer_bool_field@@Base>:
   392f4:	push	{r4, r5, r6, sl, fp, lr}
   392f8:	add	fp, sp, #16
   392fc:	mov	r4, r0
   39300:	mov	r0, #4
   39304:	ldr	r5, [r1, #8]
   39308:	add	r2, r0, r2, lsl #1
   3930c:	ldr	r0, [fp, #12]
   39310:	cmp	r2, r5
   39314:	bge	39334 <flatcc_json_printer_bool_field@@Base+0x40>
   39318:	ldr	r5, [r1, #4]
   3931c:	add	r2, r5, r2
   39320:	ldrh	r2, [r2]
   39324:	cmp	r2, #0
   39328:	ldrne	r5, [r1]
   3932c:	addsne	r2, r5, r2
   39330:	bne	393cc <flatcc_json_printer_bool_field@@Base+0xd8>
   39334:	ldrb	r2, [r4, #29]
   39338:	mov	r6, r0
   3933c:	cmp	r2, #0
   39340:	beq	393c8 <flatcc_json_printer_bool_field@@Base+0xd4>
   39344:	ldr	r0, [r1, #16]
   39348:	ldr	r2, [fp, #8]
   3934c:	add	r5, r0, #1
   39350:	cmp	r0, #0
   39354:	str	r5, [r1, #16]
   39358:	beq	39370 <flatcc_json_printer_bool_field@@Base+0x7c>
   3935c:	ldr	r0, [r4, #20]
   39360:	add	r1, r0, #1
   39364:	str	r1, [r4, #20]
   39368:	mov	r1, #44	; 0x2c
   3936c:	strb	r1, [r0]
   39370:	mov	r0, r4
   39374:	mov	r1, r3
   39378:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3937c:	ldr	r0, [r4, #20]
   39380:	cmp	r6, #0
   39384:	beq	393a4 <flatcc_json_printer_bool_field@@Base+0xb0>
   39388:	mov	r1, #0
   3938c:	strb	r1, [r0, #4]
   39390:	movw	r1, #29300	; 0x7274
   39394:	movt	r1, #25973	; 0x6575
   39398:	str	r1, [r0]
   3939c:	mov	r0, #4
   393a0:	b	393bc <flatcc_json_printer_bool_field@@Base+0xc8>
   393a4:	mov	r1, #101	; 0x65
   393a8:	strh	r1, [r0, #4]
   393ac:	movw	r1, #24934	; 0x6166
   393b0:	movt	r1, #29548	; 0x736c
   393b4:	str	r1, [r0]
   393b8:	mov	r0, #5
   393bc:	ldr	r1, [r4, #20]
   393c0:	add	r0, r1, r0
   393c4:	str	r0, [r4, #20]
   393c8:	pop	{r4, r5, r6, sl, fp, pc}
   393cc:	ldrb	r6, [r2]
   393d0:	cmp	r6, r0
   393d4:	bne	39344 <flatcc_json_printer_bool_field@@Base+0x50>
   393d8:	ldrb	r2, [r4, #28]
   393dc:	mov	r6, r0
   393e0:	cmp	r2, #0
   393e4:	popne	{r4, r5, r6, sl, fp, pc}
   393e8:	b	39344 <flatcc_json_printer_bool_field@@Base+0x50>

000393ec <flatcc_json_printer_float_field@@Base>:
   393ec:	push	{r4, r5, fp, lr}
   393f0:	add	fp, sp, #8
   393f4:	vpush	{d8}
   393f8:	mov	r5, r0
   393fc:	mov	r0, #4
   39400:	vmov.f32	s16, s0
   39404:	add	r0, r0, r2, lsl #1
   39408:	ldr	r2, [r1, #8]
   3940c:	cmp	r0, r2
   39410:	bge	39430 <flatcc_json_printer_float_field@@Base+0x44>
   39414:	ldr	r2, [r1, #4]
   39418:	add	r0, r2, r0
   3941c:	ldrh	r0, [r0]
   39420:	cmp	r0, #0
   39424:	ldrne	r2, [r1]
   39428:	addsne	r0, r2, r0
   3942c:	bne	39494 <flatcc_json_printer_float_field@@Base+0xa8>
   39430:	ldrb	r0, [r5, #29]
   39434:	cmp	r0, #0
   39438:	beq	3948c <flatcc_json_printer_float_field@@Base+0xa0>
   3943c:	ldr	r0, [r1, #16]
   39440:	ldr	r2, [fp, #8]
   39444:	add	r4, r0, #1
   39448:	cmp	r0, #0
   3944c:	str	r4, [r1, #16]
   39450:	beq	39468 <flatcc_json_printer_float_field@@Base+0x7c>
   39454:	ldr	r0, [r5, #20]
   39458:	add	r1, r0, #1
   3945c:	str	r1, [r5, #20]
   39460:	mov	r1, #44	; 0x2c
   39464:	strb	r1, [r0]
   39468:	mov	r0, r5
   3946c:	mov	r1, r3
   39470:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39474:	vcvt.f64.f32	d0, s16
   39478:	ldr	r0, [r5, #20]
   3947c:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   39480:	ldr	r1, [r5, #20]
   39484:	add	r0, r1, r0
   39488:	str	r0, [r5, #20]
   3948c:	vpop	{d8}
   39490:	pop	{r4, r5, fp, pc}
   39494:	vldr	s0, [r0]
   39498:	vcmp.f32	s0, s16
   3949c:	vmrs	APSR_nzcv, fpscr
   394a0:	bne	394b8 <flatcc_json_printer_float_field@@Base+0xcc>
   394a4:	ldrb	r0, [r5, #28]
   394a8:	vmov.f32	s16, s0
   394ac:	cmp	r0, #0
   394b0:	bne	3948c <flatcc_json_printer_float_field@@Base+0xa0>
   394b4:	b	3943c <flatcc_json_printer_float_field@@Base+0x50>
   394b8:	vmov.f32	s16, s0
   394bc:	b	3943c <flatcc_json_printer_float_field@@Base+0x50>

000394c0 <flatcc_json_printer_double_field@@Base>:
   394c0:	push	{r4, r5, fp, lr}
   394c4:	add	fp, sp, #8
   394c8:	vpush	{d8}
   394cc:	mov	r5, r0
   394d0:	mov	r0, #4
   394d4:	vmov.f64	d8, d0
   394d8:	add	r0, r0, r2, lsl #1
   394dc:	ldr	r2, [r1, #8]
   394e0:	cmp	r0, r2
   394e4:	bge	39504 <flatcc_json_printer_double_field@@Base+0x44>
   394e8:	ldr	r2, [r1, #4]
   394ec:	add	r0, r2, r0
   394f0:	ldrh	r0, [r0]
   394f4:	cmp	r0, #0
   394f8:	ldrne	r2, [r1]
   394fc:	addsne	r0, r2, r0
   39500:	bne	39568 <flatcc_json_printer_double_field@@Base+0xa8>
   39504:	ldrb	r0, [r5, #29]
   39508:	cmp	r0, #0
   3950c:	beq	39560 <flatcc_json_printer_double_field@@Base+0xa0>
   39510:	ldr	r0, [r1, #16]
   39514:	ldr	r2, [fp, #8]
   39518:	add	r4, r0, #1
   3951c:	cmp	r0, #0
   39520:	str	r4, [r1, #16]
   39524:	beq	3953c <flatcc_json_printer_double_field@@Base+0x7c>
   39528:	ldr	r0, [r5, #20]
   3952c:	add	r1, r0, #1
   39530:	str	r1, [r5, #20]
   39534:	mov	r1, #44	; 0x2c
   39538:	strb	r1, [r0]
   3953c:	mov	r0, r5
   39540:	mov	r1, r3
   39544:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39548:	ldr	r0, [r5, #20]
   3954c:	vmov.f64	d0, d8
   39550:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   39554:	ldr	r1, [r5, #20]
   39558:	add	r0, r1, r0
   3955c:	str	r0, [r5, #20]
   39560:	vpop	{d8}
   39564:	pop	{r4, r5, fp, pc}
   39568:	vldr	d16, [r0]
   3956c:	vcmp.f64	d16, d8
   39570:	vmrs	APSR_nzcv, fpscr
   39574:	bne	3958c <flatcc_json_printer_double_field@@Base+0xcc>
   39578:	ldrb	r0, [r5, #28]
   3957c:	vmov.f64	d8, d16
   39580:	cmp	r0, #0
   39584:	bne	39560 <flatcc_json_printer_double_field@@Base+0xa0>
   39588:	b	39510 <flatcc_json_printer_double_field@@Base+0x50>
   3958c:	vmov.f64	d8, d16
   39590:	b	39510 <flatcc_json_printer_double_field@@Base+0x50>

00039594 <flatcc_json_printer_uint8_enum_field@@Base>:
   39594:	push	{r4, r5, r6, r7, fp, lr}
   39598:	add	fp, sp, #16
   3959c:	mov	r4, r0
   395a0:	mov	r0, #4
   395a4:	ldr	r7, [fp, #16]
   395a8:	ldr	ip, [fp, #12]
   395ac:	add	r5, r0, r2, lsl #1
   395b0:	ldr	r0, [r1, #8]
   395b4:	ldr	r2, [fp, #8]
   395b8:	cmp	r5, r0
   395bc:	bge	395dc <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   395c0:	ldr	r0, [r1, #4]
   395c4:	add	r0, r0, r5
   395c8:	ldrh	r5, [r0]
   395cc:	cmp	r5, #0
   395d0:	ldrne	r0, [r1]
   395d4:	addsne	r5, r0, r5
   395d8:	bne	3965c <flatcc_json_printer_uint8_enum_field@@Base+0xc8>
   395dc:	ldrb	r0, [r4, #29]
   395e0:	mov	r6, ip
   395e4:	cmp	r0, #0
   395e8:	beq	39644 <flatcc_json_printer_uint8_enum_field@@Base+0xb0>
   395ec:	ldr	r0, [r1, #16]
   395f0:	add	r5, r0, #1
   395f4:	cmp	r0, #0
   395f8:	str	r5, [r1, #16]
   395fc:	beq	39614 <flatcc_json_printer_uint8_enum_field@@Base+0x80>
   39600:	ldr	r0, [r4, #20]
   39604:	add	r1, r0, #1
   39608:	str	r1, [r4, #20]
   3960c:	mov	r1, #44	; 0x2c
   39610:	strb	r1, [r0]
   39614:	mov	r0, r4
   39618:	mov	r1, r3
   3961c:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39620:	ldrb	r0, [r4, #27]
   39624:	cmp	r0, #0
   39628:	beq	39648 <flatcc_json_printer_uint8_enum_field@@Base+0xb4>
   3962c:	ldr	r1, [r4, #20]
   39630:	mov	r0, r6
   39634:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   39638:	ldr	r1, [r4, #20]
   3963c:	add	r0, r1, r0
   39640:	str	r0, [r4, #20]
   39644:	pop	{r4, r5, r6, r7, fp, pc}
   39648:	mov	r0, r4
   3964c:	mov	r1, r6
   39650:	mov	r2, r7
   39654:	pop	{r4, r5, r6, r7, fp, lr}
   39658:	bx	r2
   3965c:	ldrb	r6, [r5]
   39660:	cmp	r6, ip
   39664:	bne	395ec <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   39668:	ldrb	r0, [r4, #28]
   3966c:	mov	r6, ip
   39670:	cmp	r0, #0
   39674:	popne	{r4, r5, r6, r7, fp, pc}
   39678:	b	395ec <flatcc_json_printer_uint8_enum_field@@Base+0x58>

0003967c <flatcc_json_printer_uint16_enum_field@@Base>:
   3967c:	push	{r4, r5, r6, r7, fp, lr}
   39680:	add	fp, sp, #16
   39684:	mov	r4, r0
   39688:	mov	r0, #4
   3968c:	ldr	r7, [fp, #16]
   39690:	ldr	ip, [fp, #12]
   39694:	add	r5, r0, r2, lsl #1
   39698:	ldr	r0, [r1, #8]
   3969c:	ldr	r2, [fp, #8]
   396a0:	cmp	r5, r0
   396a4:	bge	396c4 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   396a8:	ldr	r0, [r1, #4]
   396ac:	add	r0, r0, r5
   396b0:	ldrh	r5, [r0]
   396b4:	cmp	r5, #0
   396b8:	ldrne	r0, [r1]
   396bc:	addsne	r5, r0, r5
   396c0:	bne	39744 <flatcc_json_printer_uint16_enum_field@@Base+0xc8>
   396c4:	ldrb	r0, [r4, #29]
   396c8:	mov	r6, ip
   396cc:	cmp	r0, #0
   396d0:	beq	3972c <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   396d4:	ldr	r0, [r1, #16]
   396d8:	add	r5, r0, #1
   396dc:	cmp	r0, #0
   396e0:	str	r5, [r1, #16]
   396e4:	beq	396fc <flatcc_json_printer_uint16_enum_field@@Base+0x80>
   396e8:	ldr	r0, [r4, #20]
   396ec:	add	r1, r0, #1
   396f0:	str	r1, [r4, #20]
   396f4:	mov	r1, #44	; 0x2c
   396f8:	strb	r1, [r0]
   396fc:	mov	r0, r4
   39700:	mov	r1, r3
   39704:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39708:	ldrb	r0, [r4, #27]
   3970c:	cmp	r0, #0
   39710:	beq	39730 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   39714:	ldr	r1, [r4, #20]
   39718:	mov	r0, r6
   3971c:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   39720:	ldr	r1, [r4, #20]
   39724:	add	r0, r1, r0
   39728:	str	r0, [r4, #20]
   3972c:	pop	{r4, r5, r6, r7, fp, pc}
   39730:	mov	r0, r4
   39734:	mov	r1, r6
   39738:	mov	r2, r7
   3973c:	pop	{r4, r5, r6, r7, fp, lr}
   39740:	bx	r2
   39744:	ldrh	r6, [r5]
   39748:	cmp	r6, ip
   3974c:	bne	396d4 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   39750:	ldrb	r0, [r4, #28]
   39754:	mov	r6, ip
   39758:	cmp	r0, #0
   3975c:	popne	{r4, r5, r6, r7, fp, pc}
   39760:	b	396d4 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

00039764 <flatcc_json_printer_uint32_enum_field@@Base>:
   39764:	push	{r4, r5, r6, r7, fp, lr}
   39768:	add	fp, sp, #16
   3976c:	mov	r4, r0
   39770:	mov	r0, #4
   39774:	ldr	r7, [fp, #16]
   39778:	ldr	ip, [fp, #12]
   3977c:	add	r5, r0, r2, lsl #1
   39780:	ldr	r0, [r1, #8]
   39784:	ldr	r2, [fp, #8]
   39788:	cmp	r5, r0
   3978c:	bge	397ac <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   39790:	ldr	r0, [r1, #4]
   39794:	add	r0, r0, r5
   39798:	ldrh	r5, [r0]
   3979c:	cmp	r5, #0
   397a0:	ldrne	r0, [r1]
   397a4:	addsne	r5, r0, r5
   397a8:	bne	3982c <flatcc_json_printer_uint32_enum_field@@Base+0xc8>
   397ac:	ldrb	r0, [r4, #29]
   397b0:	mov	r6, ip
   397b4:	cmp	r0, #0
   397b8:	beq	39814 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   397bc:	ldr	r0, [r1, #16]
   397c0:	add	r5, r0, #1
   397c4:	cmp	r0, #0
   397c8:	str	r5, [r1, #16]
   397cc:	beq	397e4 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   397d0:	ldr	r0, [r4, #20]
   397d4:	add	r1, r0, #1
   397d8:	str	r1, [r4, #20]
   397dc:	mov	r1, #44	; 0x2c
   397e0:	strb	r1, [r0]
   397e4:	mov	r0, r4
   397e8:	mov	r1, r3
   397ec:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   397f0:	ldrb	r0, [r4, #27]
   397f4:	cmp	r0, #0
   397f8:	beq	39818 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   397fc:	ldr	r1, [r4, #20]
   39800:	mov	r0, r6
   39804:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   39808:	ldr	r1, [r4, #20]
   3980c:	add	r0, r1, r0
   39810:	str	r0, [r4, #20]
   39814:	pop	{r4, r5, r6, r7, fp, pc}
   39818:	mov	r0, r4
   3981c:	mov	r1, r6
   39820:	mov	r2, r7
   39824:	pop	{r4, r5, r6, r7, fp, lr}
   39828:	bx	r2
   3982c:	ldr	r6, [r5]
   39830:	cmp	r6, ip
   39834:	bne	397bc <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   39838:	ldrb	r0, [r4, #28]
   3983c:	mov	r6, ip
   39840:	cmp	r0, #0
   39844:	popne	{r4, r5, r6, r7, fp, pc}
   39848:	b	397bc <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003984c <flatcc_json_printer_uint64_enum_field@@Base>:
   3984c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   39850:	add	fp, sp, #24
   39854:	mov	r4, r0
   39858:	mov	r0, #4
   3985c:	ldr	ip, [fp, #20]
   39860:	ldr	r6, [fp, #16]
   39864:	ldr	r5, [fp, #24]
   39868:	add	r7, r0, r2, lsl #1
   3986c:	ldr	r0, [r1, #8]
   39870:	ldr	r2, [fp, #8]
   39874:	cmp	r7, r0
   39878:	bge	39898 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   3987c:	ldr	r0, [r1, #4]
   39880:	add	r0, r0, r7
   39884:	ldrh	r7, [r0]
   39888:	cmp	r7, #0
   3988c:	ldrne	r0, [r1]
   39890:	addsne	r7, r0, r7
   39894:	bne	39924 <flatcc_json_printer_uint64_enum_field@@Base+0xd8>
   39898:	ldrb	r0, [r4, #29]
   3989c:	mov	r8, r6
   398a0:	mov	r7, ip
   398a4:	cmp	r0, #0
   398a8:	beq	39908 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   398ac:	ldr	r0, [r1, #16]
   398b0:	add	r6, r0, #1
   398b4:	cmp	r0, #0
   398b8:	str	r6, [r1, #16]
   398bc:	beq	398d4 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   398c0:	ldr	r0, [r4, #20]
   398c4:	add	r1, r0, #1
   398c8:	str	r1, [r4, #20]
   398cc:	mov	r1, #44	; 0x2c
   398d0:	strb	r1, [r0]
   398d4:	mov	r0, r4
   398d8:	mov	r1, r3
   398dc:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   398e0:	ldrb	r0, [r4, #27]
   398e4:	cmp	r0, #0
   398e8:	beq	3990c <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   398ec:	ldr	r2, [r4, #20]
   398f0:	mov	r0, r8
   398f4:	mov	r1, r7
   398f8:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   398fc:	ldr	r1, [r4, #20]
   39900:	add	r0, r1, r0
   39904:	str	r0, [r4, #20]
   39908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3990c:	mov	r0, r4
   39910:	mov	r2, r8
   39914:	mov	r3, r7
   39918:	mov	r1, r5
   3991c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   39920:	bx	r1
   39924:	ldr	r8, [r7]
   39928:	ldr	r7, [r7, #4]
   3992c:	eor	lr, r7, ip
   39930:	eor	r0, r8, r6
   39934:	orrs	r0, r0, lr
   39938:	bne	398ac <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3993c:	ldrb	r0, [r4, #28]
   39940:	mov	r8, r6
   39944:	mov	r7, ip
   39948:	cmp	r0, #0
   3994c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   39950:	b	398ac <flatcc_json_printer_uint64_enum_field@@Base+0x60>

00039954 <flatcc_json_printer_int8_enum_field@@Base>:
   39954:	push	{r4, r5, r6, r7, fp, lr}
   39958:	add	fp, sp, #16
   3995c:	mov	r4, r0
   39960:	mov	r0, #4
   39964:	ldr	r5, [r1, #8]
   39968:	ldr	ip, [fp, #16]
   3996c:	add	r6, r0, r2, lsl #1
   39970:	ldr	r0, [fp, #12]
   39974:	ldr	r2, [fp, #8]
   39978:	cmp	r6, r5
   3997c:	bge	3999c <flatcc_json_printer_int8_enum_field@@Base+0x48>
   39980:	ldr	r5, [r1, #4]
   39984:	add	r6, r5, r6
   39988:	ldrh	r6, [r6]
   3998c:	cmp	r6, #0
   39990:	ldrne	r5, [r1]
   39994:	addsne	r6, r5, r6
   39998:	bne	39a40 <flatcc_json_printer_int8_enum_field@@Base+0xec>
   3999c:	ldrb	r6, [r4, #29]
   399a0:	mov	r5, r0
   399a4:	cmp	r6, #0
   399a8:	beq	39a28 <flatcc_json_printer_int8_enum_field@@Base+0xd4>
   399ac:	ldr	r0, [r1, #16]
   399b0:	mov	r7, ip
   399b4:	add	r6, r0, #1
   399b8:	cmp	r0, #0
   399bc:	str	r6, [r1, #16]
   399c0:	beq	399d8 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   399c4:	ldr	r0, [r4, #20]
   399c8:	add	r1, r0, #1
   399cc:	str	r1, [r4, #20]
   399d0:	mov	r1, #44	; 0x2c
   399d4:	strb	r1, [r0]
   399d8:	mov	r0, r4
   399dc:	mov	r1, r3
   399e0:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   399e4:	ldrb	r0, [r4, #27]
   399e8:	cmp	r0, #0
   399ec:	beq	39a2c <flatcc_json_printer_int8_enum_field@@Base+0xd8>
   399f0:	uxtb	r0, r5
   399f4:	ldr	r1, [r4, #20]
   399f8:	lsr	r6, r0, #7
   399fc:	sxtb	r0, r5
   39a00:	cmn	r0, #1
   39a04:	movle	r0, #45	; 0x2d
   39a08:	rsble	r5, r5, #0
   39a0c:	strble	r0, [r1], #1
   39a10:	uxtb	r0, r5
   39a14:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   39a18:	ldr	r1, [r4, #20]
   39a1c:	add	r0, r0, r6
   39a20:	add	r0, r1, r0
   39a24:	str	r0, [r4, #20]
   39a28:	pop	{r4, r5, r6, r7, fp, pc}
   39a2c:	sxtb	r1, r5
   39a30:	mov	r0, r4
   39a34:	mov	r2, r7
   39a38:	pop	{r4, r5, r6, r7, fp, lr}
   39a3c:	bx	r2
   39a40:	ldrb	r5, [r6]
   39a44:	uxtb	r6, r0
   39a48:	cmp	r5, r6
   39a4c:	bne	399ac <flatcc_json_printer_int8_enum_field@@Base+0x58>
   39a50:	ldrb	r6, [r4, #28]
   39a54:	mov	r5, r0
   39a58:	cmp	r6, #0
   39a5c:	popne	{r4, r5, r6, r7, fp, pc}
   39a60:	b	399ac <flatcc_json_printer_int8_enum_field@@Base+0x58>

00039a64 <flatcc_json_printer_int16_enum_field@@Base>:
   39a64:	push	{r4, r5, r6, r7, fp, lr}
   39a68:	add	fp, sp, #16
   39a6c:	mov	r4, r0
   39a70:	mov	r0, #4
   39a74:	ldr	r5, [r1, #8]
   39a78:	ldr	ip, [fp, #16]
   39a7c:	add	r6, r0, r2, lsl #1
   39a80:	ldr	r0, [fp, #12]
   39a84:	ldr	r2, [fp, #8]
   39a88:	cmp	r6, r5
   39a8c:	bge	39aac <flatcc_json_printer_int16_enum_field@@Base+0x48>
   39a90:	ldr	r5, [r1, #4]
   39a94:	add	r6, r5, r6
   39a98:	ldrh	r6, [r6]
   39a9c:	cmp	r6, #0
   39aa0:	ldrne	r5, [r1]
   39aa4:	addsne	r6, r5, r6
   39aa8:	bne	39b50 <flatcc_json_printer_int16_enum_field@@Base+0xec>
   39aac:	ldrb	r6, [r4, #29]
   39ab0:	mov	r5, r0
   39ab4:	cmp	r6, #0
   39ab8:	beq	39b38 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   39abc:	ldr	r0, [r1, #16]
   39ac0:	mov	r7, ip
   39ac4:	add	r6, r0, #1
   39ac8:	cmp	r0, #0
   39acc:	str	r6, [r1, #16]
   39ad0:	beq	39ae8 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   39ad4:	ldr	r0, [r4, #20]
   39ad8:	add	r1, r0, #1
   39adc:	str	r1, [r4, #20]
   39ae0:	mov	r1, #44	; 0x2c
   39ae4:	strb	r1, [r0]
   39ae8:	mov	r0, r4
   39aec:	mov	r1, r3
   39af0:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39af4:	ldrb	r0, [r4, #27]
   39af8:	cmp	r0, #0
   39afc:	beq	39b3c <flatcc_json_printer_int16_enum_field@@Base+0xd8>
   39b00:	uxth	r0, r5
   39b04:	ldr	r1, [r4, #20]
   39b08:	lsr	r6, r0, #15
   39b0c:	sxth	r0, r5
   39b10:	cmn	r0, #1
   39b14:	movle	r0, #45	; 0x2d
   39b18:	rsble	r5, r5, #0
   39b1c:	strble	r0, [r1], #1
   39b20:	uxth	r0, r5
   39b24:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   39b28:	ldr	r1, [r4, #20]
   39b2c:	add	r0, r0, r6
   39b30:	add	r0, r1, r0
   39b34:	str	r0, [r4, #20]
   39b38:	pop	{r4, r5, r6, r7, fp, pc}
   39b3c:	sxth	r1, r5
   39b40:	mov	r0, r4
   39b44:	mov	r2, r7
   39b48:	pop	{r4, r5, r6, r7, fp, lr}
   39b4c:	bx	r2
   39b50:	ldrh	r5, [r6]
   39b54:	uxth	r6, r0
   39b58:	cmp	r5, r6
   39b5c:	bne	39abc <flatcc_json_printer_int16_enum_field@@Base+0x58>
   39b60:	ldrb	r6, [r4, #28]
   39b64:	mov	r5, r0
   39b68:	cmp	r6, #0
   39b6c:	popne	{r4, r5, r6, r7, fp, pc}
   39b70:	b	39abc <flatcc_json_printer_int16_enum_field@@Base+0x58>

00039b74 <flatcc_json_printer_int32_enum_field@@Base>:
   39b74:	push	{r4, r5, r6, r7, fp, lr}
   39b78:	add	fp, sp, #16
   39b7c:	mov	r4, r0
   39b80:	mov	r0, #4
   39b84:	ldr	r5, [r1, #8]
   39b88:	ldr	ip, [fp, #16]
   39b8c:	add	r6, r0, r2, lsl #1
   39b90:	ldr	r0, [fp, #12]
   39b94:	ldr	r2, [fp, #8]
   39b98:	cmp	r6, r5
   39b9c:	bge	39bbc <flatcc_json_printer_int32_enum_field@@Base+0x48>
   39ba0:	ldr	r5, [r1, #4]
   39ba4:	add	r6, r5, r6
   39ba8:	ldrh	r6, [r6]
   39bac:	cmp	r6, #0
   39bb0:	ldrne	r5, [r1]
   39bb4:	addsne	r6, r5, r6
   39bb8:	bne	39c58 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   39bbc:	ldrb	r6, [r4, #29]
   39bc0:	mov	r5, r0
   39bc4:	cmp	r6, #0
   39bc8:	beq	39c40 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   39bcc:	ldr	r0, [r1, #16]
   39bd0:	mov	r7, ip
   39bd4:	add	r6, r0, #1
   39bd8:	cmp	r0, #0
   39bdc:	str	r6, [r1, #16]
   39be0:	beq	39bf8 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   39be4:	ldr	r0, [r4, #20]
   39be8:	add	r1, r0, #1
   39bec:	str	r1, [r4, #20]
   39bf0:	mov	r1, #44	; 0x2c
   39bf4:	strb	r1, [r0]
   39bf8:	mov	r0, r4
   39bfc:	mov	r1, r3
   39c00:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39c04:	ldrb	r0, [r4, #27]
   39c08:	cmp	r0, #0
   39c0c:	beq	39c44 <flatcc_json_printer_int32_enum_field@@Base+0xd0>
   39c10:	ldr	r1, [r4, #20]
   39c14:	cmn	r5, #1
   39c18:	lsr	r6, r5, #31
   39c1c:	movle	r0, #45	; 0x2d
   39c20:	rsble	r5, r5, #0
   39c24:	strble	r0, [r1], #1
   39c28:	mov	r0, r5
   39c2c:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   39c30:	ldr	r1, [r4, #20]
   39c34:	add	r0, r0, r6
   39c38:	add	r0, r1, r0
   39c3c:	str	r0, [r4, #20]
   39c40:	pop	{r4, r5, r6, r7, fp, pc}
   39c44:	mov	r0, r4
   39c48:	mov	r1, r5
   39c4c:	mov	r2, r7
   39c50:	pop	{r4, r5, r6, r7, fp, lr}
   39c54:	bx	r2
   39c58:	ldr	r5, [r6]
   39c5c:	cmp	r5, r0
   39c60:	bne	39bcc <flatcc_json_printer_int32_enum_field@@Base+0x58>
   39c64:	ldrb	r6, [r4, #28]
   39c68:	mov	r5, r0
   39c6c:	cmp	r6, #0
   39c70:	popne	{r4, r5, r6, r7, fp, pc}
   39c74:	b	39bcc <flatcc_json_printer_int32_enum_field@@Base+0x58>

00039c78 <flatcc_json_printer_int64_enum_field@@Base>:
   39c78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   39c7c:	add	fp, sp, #24
   39c80:	mov	r4, r0
   39c84:	mov	r0, #4
   39c88:	ldr	r5, [r1, #8]
   39c8c:	ldr	r6, [fp, #16]
   39c90:	ldr	r9, [fp, #24]
   39c94:	add	r7, r0, r2, lsl #1
   39c98:	ldr	r0, [fp, #20]
   39c9c:	ldr	r2, [fp, #8]
   39ca0:	cmp	r7, r5
   39ca4:	bge	39cc4 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   39ca8:	ldr	r5, [r1, #4]
   39cac:	add	r7, r5, r7
   39cb0:	ldrh	r7, [r7]
   39cb4:	cmp	r7, #0
   39cb8:	ldrne	r5, [r1]
   39cbc:	addsne	r7, r5, r7
   39cc0:	bne	39d70 <flatcc_json_printer_int64_enum_field@@Base+0xf8>
   39cc4:	ldrb	r7, [r4, #29]
   39cc8:	mov	r8, r6
   39ccc:	cmp	r7, #0
   39cd0:	mov	r7, r0
   39cd4:	beq	39d54 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   39cd8:	ldr	r0, [r1, #16]
   39cdc:	add	r6, r0, #1
   39ce0:	cmp	r0, #0
   39ce4:	str	r6, [r1, #16]
   39ce8:	beq	39d00 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   39cec:	ldr	r0, [r4, #20]
   39cf0:	add	r1, r0, #1
   39cf4:	str	r1, [r4, #20]
   39cf8:	mov	r1, #44	; 0x2c
   39cfc:	strb	r1, [r0]
   39d00:	mov	r0, r4
   39d04:	mov	r1, r3
   39d08:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39d0c:	ldrb	r0, [r4, #27]
   39d10:	cmp	r0, #0
   39d14:	beq	39d58 <flatcc_json_printer_int64_enum_field@@Base+0xe0>
   39d18:	ldr	r2, [r4, #20]
   39d1c:	lsr	r5, r7, #31
   39d20:	cmn	r7, #1
   39d24:	bgt	39d38 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   39d28:	mov	r0, #45	; 0x2d
   39d2c:	rsbs	r8, r8, #0
   39d30:	strb	r0, [r2], #1
   39d34:	rsc	r7, r7, #0
   39d38:	mov	r0, r8
   39d3c:	mov	r1, r7
   39d40:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   39d44:	ldr	r1, [r4, #20]
   39d48:	add	r0, r0, r5
   39d4c:	add	r0, r1, r0
   39d50:	str	r0, [r4, #20]
   39d54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   39d58:	mov	r0, r4
   39d5c:	mov	r2, r8
   39d60:	mov	r3, r7
   39d64:	mov	r1, r9
   39d68:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   39d6c:	bx	r1
   39d70:	ldr	r8, [r7]
   39d74:	ldr	r7, [r7, #4]
   39d78:	eor	ip, r7, r0
   39d7c:	eor	r5, r8, r6
   39d80:	orrs	r5, r5, ip
   39d84:	bne	39cd8 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   39d88:	ldrb	r7, [r4, #28]
   39d8c:	mov	r8, r6
   39d90:	cmp	r7, #0
   39d94:	mov	r7, r0
   39d98:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   39d9c:	b	39cd8 <flatcc_json_printer_int64_enum_field@@Base+0x60>

00039da0 <flatcc_json_printer_bool_enum_field@@Base>:
   39da0:	push	{r4, r5, r6, r7, fp, lr}
   39da4:	add	fp, sp, #16
   39da8:	mov	r4, r0
   39dac:	mov	r0, #4
   39db0:	ldr	r7, [fp, #16]
   39db4:	ldr	ip, [fp, #12]
   39db8:	add	r5, r0, r2, lsl #1
   39dbc:	ldr	r0, [r1, #8]
   39dc0:	ldr	r2, [fp, #8]
   39dc4:	cmp	r5, r0
   39dc8:	bge	39de8 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   39dcc:	ldr	r0, [r1, #4]
   39dd0:	add	r0, r0, r5
   39dd4:	ldrh	r5, [r0]
   39dd8:	cmp	r5, #0
   39ddc:	ldrne	r0, [r1]
   39de0:	addsne	r5, r0, r5
   39de4:	bne	39e9c <flatcc_json_printer_bool_enum_field@@Base+0xfc>
   39de8:	ldrb	r0, [r4, #29]
   39dec:	mov	r6, ip
   39df0:	cmp	r0, #0
   39df4:	beq	39e98 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   39df8:	ldr	r0, [r1, #16]
   39dfc:	add	r5, r0, #1
   39e00:	cmp	r0, #0
   39e04:	str	r5, [r1, #16]
   39e08:	beq	39e20 <flatcc_json_printer_bool_enum_field@@Base+0x80>
   39e0c:	ldr	r0, [r4, #20]
   39e10:	add	r1, r0, #1
   39e14:	str	r1, [r4, #20]
   39e18:	mov	r1, #44	; 0x2c
   39e1c:	strb	r1, [r0]
   39e20:	mov	r0, r4
   39e24:	mov	r1, r3
   39e28:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39e2c:	ldrb	r0, [r4, #27]
   39e30:	cmp	r0, #0
   39e34:	beq	39e60 <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   39e38:	ldr	r0, [r4, #20]
   39e3c:	cmp	r6, #0
   39e40:	beq	39e74 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   39e44:	mov	r1, #0
   39e48:	strb	r1, [r0, #4]
   39e4c:	movw	r1, #29300	; 0x7274
   39e50:	movt	r1, #25973	; 0x6575
   39e54:	str	r1, [r0]
   39e58:	mov	r0, #4
   39e5c:	b	39e8c <flatcc_json_printer_bool_enum_field@@Base+0xec>
   39e60:	mov	r0, r4
   39e64:	mov	r1, r6
   39e68:	mov	r2, r7
   39e6c:	pop	{r4, r5, r6, r7, fp, lr}
   39e70:	bx	r2
   39e74:	mov	r1, #101	; 0x65
   39e78:	strh	r1, [r0, #4]
   39e7c:	movw	r1, #24934	; 0x6166
   39e80:	movt	r1, #29548	; 0x736c
   39e84:	str	r1, [r0]
   39e88:	mov	r0, #5
   39e8c:	ldr	r1, [r4, #20]
   39e90:	add	r0, r1, r0
   39e94:	str	r0, [r4, #20]
   39e98:	pop	{r4, r5, r6, r7, fp, pc}
   39e9c:	ldrb	r6, [r5]
   39ea0:	cmp	r6, ip
   39ea4:	bne	39df8 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   39ea8:	ldrb	r0, [r4, #28]
   39eac:	mov	r6, ip
   39eb0:	cmp	r0, #0
   39eb4:	popne	{r4, r5, r6, r7, fp, pc}
   39eb8:	b	39df8 <flatcc_json_printer_bool_enum_field@@Base+0x58>

00039ebc <flatcc_json_printer_uint8_struct_field@@Base>:
   39ebc:	push	{r4, r5, r6, sl, fp, lr}
   39ec0:	add	fp, sp, #16
   39ec4:	mov	r5, r1
   39ec8:	ldrb	r6, [r2, r3]
   39ecc:	ldr	r2, [fp, #12]
   39ed0:	ldr	r1, [fp, #8]
   39ed4:	mov	r4, r0
   39ed8:	cmp	r5, #0
   39edc:	beq	39ef4 <flatcc_json_printer_uint8_struct_field@@Base+0x38>
   39ee0:	ldr	r0, [r4, #20]
   39ee4:	add	r3, r0, #1
   39ee8:	str	r3, [r4, #20]
   39eec:	mov	r3, #44	; 0x2c
   39ef0:	strb	r3, [r0]
   39ef4:	mov	r0, r4
   39ef8:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39efc:	ldr	r1, [r4, #20]
   39f00:	mov	r0, r6
   39f04:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   39f08:	ldr	r1, [r4, #20]
   39f0c:	add	r0, r1, r0
   39f10:	str	r0, [r4, #20]
   39f14:	pop	{r4, r5, r6, sl, fp, pc}

00039f18 <flatcc_json_printer_uint16_struct_field@@Base>:
   39f18:	push	{r4, r5, r6, sl, fp, lr}
   39f1c:	add	fp, sp, #16
   39f20:	mov	r4, r0
   39f24:	add	r0, r2, r3
   39f28:	mov	r5, r1
   39f2c:	ldr	r2, [fp, #12]
   39f30:	ldr	r1, [fp, #8]
   39f34:	ldrh	r6, [r0]
   39f38:	cmp	r5, #0
   39f3c:	beq	39f54 <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   39f40:	ldr	r0, [r4, #20]
   39f44:	add	r3, r0, #1
   39f48:	str	r3, [r4, #20]
   39f4c:	mov	r3, #44	; 0x2c
   39f50:	strb	r3, [r0]
   39f54:	mov	r0, r4
   39f58:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39f5c:	ldr	r1, [r4, #20]
   39f60:	mov	r0, r6
   39f64:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   39f68:	ldr	r1, [r4, #20]
   39f6c:	add	r0, r1, r0
   39f70:	str	r0, [r4, #20]
   39f74:	pop	{r4, r5, r6, sl, fp, pc}

00039f78 <flatcc_json_printer_uint32_struct_field@@Base>:
   39f78:	push	{r4, r5, r6, sl, fp, lr}
   39f7c:	add	fp, sp, #16
   39f80:	mov	r5, r1
   39f84:	ldr	r6, [r2, r3]
   39f88:	ldr	r2, [fp, #12]
   39f8c:	ldr	r1, [fp, #8]
   39f90:	mov	r4, r0
   39f94:	cmp	r5, #0
   39f98:	beq	39fb0 <flatcc_json_printer_uint32_struct_field@@Base+0x38>
   39f9c:	ldr	r0, [r4, #20]
   39fa0:	add	r3, r0, #1
   39fa4:	str	r3, [r4, #20]
   39fa8:	mov	r3, #44	; 0x2c
   39fac:	strb	r3, [r0]
   39fb0:	mov	r0, r4
   39fb4:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   39fb8:	ldr	r1, [r4, #20]
   39fbc:	mov	r0, r6
   39fc0:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   39fc4:	ldr	r1, [r4, #20]
   39fc8:	add	r0, r1, r0
   39fcc:	str	r0, [r4, #20]
   39fd0:	pop	{r4, r5, r6, sl, fp, pc}

00039fd4 <flatcc_json_printer_uint64_struct_field@@Base>:
   39fd4:	push	{r4, r5, r6, r7, fp, lr}
   39fd8:	add	fp, sp, #16
   39fdc:	ldr	r7, [r2, r3]!
   39fe0:	mov	r5, r1
   39fe4:	ldr	r1, [fp, #8]
   39fe8:	mov	r4, r0
   39fec:	cmp	r5, #0
   39ff0:	ldr	r6, [r2, #4]
   39ff4:	ldr	r2, [fp, #12]
   39ff8:	beq	3a010 <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   39ffc:	ldr	r0, [r4, #20]
   3a000:	add	r3, r0, #1
   3a004:	str	r3, [r4, #20]
   3a008:	mov	r3, #44	; 0x2c
   3a00c:	strb	r3, [r0]
   3a010:	mov	r0, r4
   3a014:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a018:	ldr	r2, [r4, #20]
   3a01c:	mov	r0, r7
   3a020:	mov	r1, r6
   3a024:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   3a028:	ldr	r1, [r4, #20]
   3a02c:	add	r0, r1, r0
   3a030:	str	r0, [r4, #20]
   3a034:	pop	{r4, r5, r6, r7, fp, pc}

0003a038 <flatcc_json_printer_int8_struct_field@@Base>:
   3a038:	push	{r4, r5, r6, sl, fp, lr}
   3a03c:	add	fp, sp, #16
   3a040:	mov	r4, r0
   3a044:	add	r0, r2, r3
   3a048:	mov	ip, r1
   3a04c:	ldr	r2, [fp, #12]
   3a050:	ldr	r1, [fp, #8]
   3a054:	ldrsb	r5, [r0]
   3a058:	cmp	ip, #0
   3a05c:	beq	3a074 <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   3a060:	ldr	r0, [r4, #20]
   3a064:	add	r3, r0, #1
   3a068:	str	r3, [r4, #20]
   3a06c:	mov	r3, #44	; 0x2c
   3a070:	strb	r3, [r0]
   3a074:	mov	r0, r4
   3a078:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a07c:	ldr	r1, [r4, #20]
   3a080:	uxtb	r0, r5
   3a084:	cmn	r5, #1
   3a088:	rsble	r5, r5, #0
   3a08c:	lsr	r6, r0, #7
   3a090:	movle	r0, #45	; 0x2d
   3a094:	strble	r0, [r1], #1
   3a098:	uxtb	r0, r5
   3a09c:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   3a0a0:	ldr	r1, [r4, #20]
   3a0a4:	add	r0, r0, r6
   3a0a8:	add	r0, r1, r0
   3a0ac:	str	r0, [r4, #20]
   3a0b0:	pop	{r4, r5, r6, sl, fp, pc}

0003a0b4 <flatcc_json_printer_int16_struct_field@@Base>:
   3a0b4:	push	{r4, r5, r6, sl, fp, lr}
   3a0b8:	add	fp, sp, #16
   3a0bc:	mov	r4, r0
   3a0c0:	add	r0, r2, r3
   3a0c4:	mov	ip, r1
   3a0c8:	ldr	r2, [fp, #12]
   3a0cc:	ldr	r1, [fp, #8]
   3a0d0:	ldrsh	r5, [r0]
   3a0d4:	cmp	ip, #0
   3a0d8:	beq	3a0f0 <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   3a0dc:	ldr	r0, [r4, #20]
   3a0e0:	add	r3, r0, #1
   3a0e4:	str	r3, [r4, #20]
   3a0e8:	mov	r3, #44	; 0x2c
   3a0ec:	strb	r3, [r0]
   3a0f0:	mov	r0, r4
   3a0f4:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a0f8:	ldr	r1, [r4, #20]
   3a0fc:	uxth	r0, r5
   3a100:	cmn	r5, #1
   3a104:	rsble	r5, r5, #0
   3a108:	lsr	r6, r0, #15
   3a10c:	movle	r0, #45	; 0x2d
   3a110:	strble	r0, [r1], #1
   3a114:	uxth	r0, r5
   3a118:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   3a11c:	ldr	r1, [r4, #20]
   3a120:	add	r0, r0, r6
   3a124:	add	r0, r1, r0
   3a128:	str	r0, [r4, #20]
   3a12c:	pop	{r4, r5, r6, sl, fp, pc}

0003a130 <flatcc_json_printer_int32_struct_field@@Base>:
   3a130:	push	{r4, r5, r6, sl, fp, lr}
   3a134:	add	fp, sp, #16
   3a138:	mov	ip, r1
   3a13c:	ldr	r5, [r2, r3]
   3a140:	ldr	r2, [fp, #12]
   3a144:	ldr	r1, [fp, #8]
   3a148:	mov	r4, r0
   3a14c:	cmp	ip, #0
   3a150:	beq	3a168 <flatcc_json_printer_int32_struct_field@@Base+0x38>
   3a154:	ldr	r0, [r4, #20]
   3a158:	add	r3, r0, #1
   3a15c:	str	r3, [r4, #20]
   3a160:	mov	r3, #44	; 0x2c
   3a164:	strb	r3, [r0]
   3a168:	mov	r0, r4
   3a16c:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a170:	ldr	r1, [r4, #20]
   3a174:	cmn	r5, #1
   3a178:	lsr	r6, r5, #31
   3a17c:	movle	r0, #45	; 0x2d
   3a180:	rsble	r5, r5, #0
   3a184:	strble	r0, [r1], #1
   3a188:	mov	r0, r5
   3a18c:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   3a190:	ldr	r1, [r4, #20]
   3a194:	add	r0, r0, r6
   3a198:	add	r0, r1, r0
   3a19c:	str	r0, [r4, #20]
   3a1a0:	pop	{r4, r5, r6, sl, fp, pc}

0003a1a4 <flatcc_json_printer_int64_struct_field@@Base>:
   3a1a4:	push	{r4, r5, r6, r7, fp, lr}
   3a1a8:	add	fp, sp, #16
   3a1ac:	ldr	r7, [r2, r3]!
   3a1b0:	mov	r5, r1
   3a1b4:	ldr	r1, [fp, #8]
   3a1b8:	mov	r4, r0
   3a1bc:	cmp	r5, #0
   3a1c0:	ldr	r6, [r2, #4]
   3a1c4:	ldr	r2, [fp, #12]
   3a1c8:	beq	3a1e0 <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   3a1cc:	ldr	r0, [r4, #20]
   3a1d0:	add	r3, r0, #1
   3a1d4:	str	r3, [r4, #20]
   3a1d8:	mov	r3, #44	; 0x2c
   3a1dc:	strb	r3, [r0]
   3a1e0:	mov	r0, r4
   3a1e4:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a1e8:	ldr	r2, [r4, #20]
   3a1ec:	lsr	r5, r6, #31
   3a1f0:	cmn	r6, #1
   3a1f4:	bgt	3a208 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   3a1f8:	mov	r0, #45	; 0x2d
   3a1fc:	rsbs	r7, r7, #0
   3a200:	strb	r0, [r2], #1
   3a204:	rsc	r6, r6, #0
   3a208:	mov	r0, r7
   3a20c:	mov	r1, r6
   3a210:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   3a214:	ldr	r1, [r4, #20]
   3a218:	add	r0, r0, r5
   3a21c:	add	r0, r1, r0
   3a220:	str	r0, [r4, #20]
   3a224:	pop	{r4, r5, r6, r7, fp, pc}

0003a228 <flatcc_json_printer_bool_struct_field@@Base>:
   3a228:	push	{r4, r5, fp, lr}
   3a22c:	add	fp, sp, #8
   3a230:	mov	ip, r1
   3a234:	ldrb	r5, [r2, r3]
   3a238:	ldr	r2, [fp, #12]
   3a23c:	ldr	r1, [fp, #8]
   3a240:	mov	r4, r0
   3a244:	cmp	ip, #0
   3a248:	beq	3a260 <flatcc_json_printer_bool_struct_field@@Base+0x38>
   3a24c:	ldr	r0, [r4, #20]
   3a250:	add	r3, r0, #1
   3a254:	str	r3, [r4, #20]
   3a258:	mov	r3, #44	; 0x2c
   3a25c:	strb	r3, [r0]
   3a260:	mov	r0, r4
   3a264:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a268:	ldr	r0, [r4, #20]
   3a26c:	cmp	r5, #0
   3a270:	beq	3a290 <flatcc_json_printer_bool_struct_field@@Base+0x68>
   3a274:	mov	r1, #0
   3a278:	strb	r1, [r0, #4]
   3a27c:	movw	r1, #29300	; 0x7274
   3a280:	movt	r1, #25973	; 0x6575
   3a284:	str	r1, [r0]
   3a288:	mov	r0, #4
   3a28c:	b	3a2a8 <flatcc_json_printer_bool_struct_field@@Base+0x80>
   3a290:	mov	r1, #101	; 0x65
   3a294:	strh	r1, [r0, #4]
   3a298:	movw	r1, #24934	; 0x6166
   3a29c:	movt	r1, #29548	; 0x736c
   3a2a0:	str	r1, [r0]
   3a2a4:	mov	r0, #5
   3a2a8:	ldr	r1, [r4, #20]
   3a2ac:	add	r0, r1, r0
   3a2b0:	str	r0, [r4, #20]
   3a2b4:	pop	{r4, r5, fp, pc}

0003a2b8 <flatcc_json_printer_float_struct_field@@Base>:
   3a2b8:	push	{r4, sl, fp, lr}
   3a2bc:	add	fp, sp, #8
   3a2c0:	vpush	{d8}
   3a2c4:	mov	r4, r0
   3a2c8:	add	r0, r2, r3
   3a2cc:	mov	ip, r1
   3a2d0:	ldr	r2, [fp, #12]
   3a2d4:	ldr	r1, [fp, #8]
   3a2d8:	vldr	s16, [r0]
   3a2dc:	cmp	ip, #0
   3a2e0:	beq	3a2f8 <flatcc_json_printer_float_struct_field@@Base+0x40>
   3a2e4:	ldr	r0, [r4, #20]
   3a2e8:	add	r3, r0, #1
   3a2ec:	str	r3, [r4, #20]
   3a2f0:	mov	r3, #44	; 0x2c
   3a2f4:	strb	r3, [r0]
   3a2f8:	mov	r0, r4
   3a2fc:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a300:	vcvt.f64.f32	d0, s16
   3a304:	ldr	r0, [r4, #20]
   3a308:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   3a30c:	ldr	r1, [r4, #20]
   3a310:	add	r0, r1, r0
   3a314:	str	r0, [r4, #20]
   3a318:	vpop	{d8}
   3a31c:	pop	{r4, sl, fp, pc}

0003a320 <flatcc_json_printer_double_struct_field@@Base>:
   3a320:	push	{r4, sl, fp, lr}
   3a324:	add	fp, sp, #8
   3a328:	vpush	{d8}
   3a32c:	mov	r4, r0
   3a330:	add	r0, r2, r3
   3a334:	mov	ip, r1
   3a338:	ldr	r2, [fp, #12]
   3a33c:	ldr	r1, [fp, #8]
   3a340:	vldr	d8, [r0]
   3a344:	cmp	ip, #0
   3a348:	beq	3a360 <flatcc_json_printer_double_struct_field@@Base+0x40>
   3a34c:	ldr	r0, [r4, #20]
   3a350:	add	r3, r0, #1
   3a354:	str	r3, [r4, #20]
   3a358:	mov	r3, #44	; 0x2c
   3a35c:	strb	r3, [r0]
   3a360:	mov	r0, r4
   3a364:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a368:	ldr	r0, [r4, #20]
   3a36c:	vorr	d0, d8, d8
   3a370:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   3a374:	ldr	r1, [r4, #20]
   3a378:	add	r0, r1, r0
   3a37c:	str	r0, [r4, #20]
   3a380:	vpop	{d8}
   3a384:	pop	{r4, sl, fp, pc}

0003a388 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3a388:	push	{r4, r5, r6, r7, fp, lr}
   3a38c:	add	fp, sp, #16
   3a390:	add	r7, fp, #8
   3a394:	mov	r5, r1
   3a398:	ldrb	r6, [r2, r3]
   3a39c:	mov	r4, r0
   3a3a0:	ldm	r7, {r1, r2, r7}
   3a3a4:	cmp	r5, #0
   3a3a8:	beq	3a3c0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x38>
   3a3ac:	ldr	r0, [r4, #20]
   3a3b0:	add	r3, r0, #1
   3a3b4:	str	r3, [r4, #20]
   3a3b8:	mov	r3, #44	; 0x2c
   3a3bc:	strb	r3, [r0]
   3a3c0:	mov	r0, r4
   3a3c4:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a3c8:	ldrb	r0, [r4, #27]
   3a3cc:	cmp	r0, #0
   3a3d0:	beq	3a3f0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x68>
   3a3d4:	ldr	r1, [r4, #20]
   3a3d8:	mov	r0, r6
   3a3dc:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   3a3e0:	ldr	r1, [r4, #20]
   3a3e4:	add	r0, r1, r0
   3a3e8:	str	r0, [r4, #20]
   3a3ec:	pop	{r4, r5, r6, r7, fp, pc}
   3a3f0:	mov	r0, r4
   3a3f4:	mov	r1, r6
   3a3f8:	mov	r2, r7
   3a3fc:	pop	{r4, r5, r6, r7, fp, lr}
   3a400:	bx	r2

0003a404 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3a404:	push	{r4, r5, r6, r7, fp, lr}
   3a408:	add	fp, sp, #16
   3a40c:	mov	r4, r0
   3a410:	add	r0, r2, r3
   3a414:	add	r7, fp, #8
   3a418:	mov	r5, r1
   3a41c:	ldrh	r6, [r0]
   3a420:	ldm	r7, {r1, r2, r7}
   3a424:	cmp	r5, #0
   3a428:	beq	3a440 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x3c>
   3a42c:	ldr	r0, [r4, #20]
   3a430:	add	r3, r0, #1
   3a434:	str	r3, [r4, #20]
   3a438:	mov	r3, #44	; 0x2c
   3a43c:	strb	r3, [r0]
   3a440:	mov	r0, r4
   3a444:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a448:	ldrb	r0, [r4, #27]
   3a44c:	cmp	r0, #0
   3a450:	beq	3a470 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   3a454:	ldr	r1, [r4, #20]
   3a458:	mov	r0, r6
   3a45c:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   3a460:	ldr	r1, [r4, #20]
   3a464:	add	r0, r1, r0
   3a468:	str	r0, [r4, #20]
   3a46c:	pop	{r4, r5, r6, r7, fp, pc}
   3a470:	mov	r0, r4
   3a474:	mov	r1, r6
   3a478:	mov	r2, r7
   3a47c:	pop	{r4, r5, r6, r7, fp, lr}
   3a480:	bx	r2

0003a484 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3a484:	push	{r4, r5, r6, r7, fp, lr}
   3a488:	add	fp, sp, #16
   3a48c:	add	r7, fp, #8
   3a490:	mov	r5, r1
   3a494:	ldr	r6, [r2, r3]
   3a498:	mov	r4, r0
   3a49c:	ldm	r7, {r1, r2, r7}
   3a4a0:	cmp	r5, #0
   3a4a4:	beq	3a4bc <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
   3a4a8:	ldr	r0, [r4, #20]
   3a4ac:	add	r3, r0, #1
   3a4b0:	str	r3, [r4, #20]
   3a4b4:	mov	r3, #44	; 0x2c
   3a4b8:	strb	r3, [r0]
   3a4bc:	mov	r0, r4
   3a4c0:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a4c4:	ldrb	r0, [r4, #27]
   3a4c8:	cmp	r0, #0
   3a4cc:	beq	3a4ec <flatcc_json_printer_uint32_enum_struct_field@@Base+0x68>
   3a4d0:	ldr	r1, [r4, #20]
   3a4d4:	mov	r0, r6
   3a4d8:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   3a4dc:	ldr	r1, [r4, #20]
   3a4e0:	add	r0, r1, r0
   3a4e4:	str	r0, [r4, #20]
   3a4e8:	pop	{r4, r5, r6, r7, fp, pc}
   3a4ec:	mov	r0, r4
   3a4f0:	mov	r1, r6
   3a4f4:	mov	r2, r7
   3a4f8:	pop	{r4, r5, r6, r7, fp, lr}
   3a4fc:	bx	r2

0003a500 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3a500:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a504:	add	fp, sp, #24
   3a508:	ldr	r6, [r2, r3]!
   3a50c:	add	r8, fp, #8
   3a510:	mov	r5, r1
   3a514:	mov	r4, r0
   3a518:	cmp	r5, #0
   3a51c:	ldr	r7, [r2, #4]
   3a520:	ldm	r8, {r1, r2, r8}
   3a524:	beq	3a53c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x3c>
   3a528:	ldr	r0, [r4, #20]
   3a52c:	add	r3, r0, #1
   3a530:	str	r3, [r4, #20]
   3a534:	mov	r3, #44	; 0x2c
   3a538:	strb	r3, [r0]
   3a53c:	mov	r0, r4
   3a540:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a544:	ldrb	r0, [r4, #27]
   3a548:	cmp	r0, #0
   3a54c:	beq	3a570 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   3a550:	ldr	r2, [r4, #20]
   3a554:	mov	r0, r6
   3a558:	mov	r1, r7
   3a55c:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   3a560:	ldr	r1, [r4, #20]
   3a564:	add	r0, r1, r0
   3a568:	str	r0, [r4, #20]
   3a56c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3a570:	mov	r0, r4
   3a574:	mov	r2, r6
   3a578:	mov	r3, r7
   3a57c:	mov	r1, r8
   3a580:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a584:	bx	r1

0003a588 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3a588:	push	{r4, r5, r6, r7, fp, lr}
   3a58c:	add	fp, sp, #16
   3a590:	mov	r4, r0
   3a594:	add	r0, r2, r3
   3a598:	add	r7, fp, #8
   3a59c:	mov	r5, r1
   3a5a0:	ldrsb	r6, [r0]
   3a5a4:	ldm	r7, {r1, r2, r7}
   3a5a8:	cmp	r5, #0
   3a5ac:	beq	3a5c4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x3c>
   3a5b0:	ldr	r0, [r4, #20]
   3a5b4:	add	r3, r0, #1
   3a5b8:	str	r3, [r4, #20]
   3a5bc:	mov	r3, #44	; 0x2c
   3a5c0:	strb	r3, [r0]
   3a5c4:	mov	r0, r4
   3a5c8:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a5cc:	ldrb	r0, [r4, #27]
   3a5d0:	cmp	r0, #0
   3a5d4:	beq	3a610 <flatcc_json_printer_int8_enum_struct_field@@Base+0x88>
   3a5d8:	ldr	r1, [r4, #20]
   3a5dc:	uxtb	r0, r6
   3a5e0:	cmn	r6, #1
   3a5e4:	rsble	r6, r6, #0
   3a5e8:	lsr	r5, r0, #7
   3a5ec:	movle	r0, #45	; 0x2d
   3a5f0:	strble	r0, [r1], #1
   3a5f4:	uxtb	r0, r6
   3a5f8:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   3a5fc:	ldr	r1, [r4, #20]
   3a600:	add	r0, r0, r5
   3a604:	add	r0, r1, r0
   3a608:	str	r0, [r4, #20]
   3a60c:	pop	{r4, r5, r6, r7, fp, pc}
   3a610:	mov	r0, r4
   3a614:	mov	r1, r6
   3a618:	mov	r2, r7
   3a61c:	pop	{r4, r5, r6, r7, fp, lr}
   3a620:	bx	r2

0003a624 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3a624:	push	{r4, r5, r6, r7, fp, lr}
   3a628:	add	fp, sp, #16
   3a62c:	mov	r4, r0
   3a630:	add	r0, r2, r3
   3a634:	add	r7, fp, #8
   3a638:	mov	r5, r1
   3a63c:	ldrsh	r6, [r0]
   3a640:	ldm	r7, {r1, r2, r7}
   3a644:	cmp	r5, #0
   3a648:	beq	3a660 <flatcc_json_printer_int16_enum_struct_field@@Base+0x3c>
   3a64c:	ldr	r0, [r4, #20]
   3a650:	add	r3, r0, #1
   3a654:	str	r3, [r4, #20]
   3a658:	mov	r3, #44	; 0x2c
   3a65c:	strb	r3, [r0]
   3a660:	mov	r0, r4
   3a664:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a668:	ldrb	r0, [r4, #27]
   3a66c:	cmp	r0, #0
   3a670:	beq	3a6ac <flatcc_json_printer_int16_enum_struct_field@@Base+0x88>
   3a674:	ldr	r1, [r4, #20]
   3a678:	uxth	r0, r6
   3a67c:	cmn	r6, #1
   3a680:	rsble	r6, r6, #0
   3a684:	lsr	r5, r0, #15
   3a688:	movle	r0, #45	; 0x2d
   3a68c:	strble	r0, [r1], #1
   3a690:	uxth	r0, r6
   3a694:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   3a698:	ldr	r1, [r4, #20]
   3a69c:	add	r0, r0, r5
   3a6a0:	add	r0, r1, r0
   3a6a4:	str	r0, [r4, #20]
   3a6a8:	pop	{r4, r5, r6, r7, fp, pc}
   3a6ac:	mov	r0, r4
   3a6b0:	mov	r1, r6
   3a6b4:	mov	r2, r7
   3a6b8:	pop	{r4, r5, r6, r7, fp, lr}
   3a6bc:	bx	r2

0003a6c0 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3a6c0:	push	{r4, r5, r6, r7, fp, lr}
   3a6c4:	add	fp, sp, #16
   3a6c8:	add	r7, fp, #8
   3a6cc:	mov	r5, r1
   3a6d0:	ldr	r6, [r2, r3]
   3a6d4:	mov	r4, r0
   3a6d8:	ldm	r7, {r1, r2, r7}
   3a6dc:	cmp	r5, #0
   3a6e0:	beq	3a6f8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
   3a6e4:	ldr	r0, [r4, #20]
   3a6e8:	add	r3, r0, #1
   3a6ec:	str	r3, [r4, #20]
   3a6f0:	mov	r3, #44	; 0x2c
   3a6f4:	strb	r3, [r0]
   3a6f8:	mov	r0, r4
   3a6fc:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a700:	ldrb	r0, [r4, #27]
   3a704:	cmp	r0, #0
   3a708:	beq	3a740 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
   3a70c:	ldr	r1, [r4, #20]
   3a710:	cmn	r6, #1
   3a714:	lsr	r5, r6, #31
   3a718:	movle	r0, #45	; 0x2d
   3a71c:	rsble	r6, r6, #0
   3a720:	strble	r0, [r1], #1
   3a724:	mov	r0, r6
   3a728:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   3a72c:	ldr	r1, [r4, #20]
   3a730:	add	r0, r0, r5
   3a734:	add	r0, r1, r0
   3a738:	str	r0, [r4, #20]
   3a73c:	pop	{r4, r5, r6, r7, fp, pc}
   3a740:	mov	r0, r4
   3a744:	mov	r1, r6
   3a748:	mov	r2, r7
   3a74c:	pop	{r4, r5, r6, r7, fp, lr}
   3a750:	bx	r2

0003a754 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3a754:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a758:	add	fp, sp, #24
   3a75c:	ldr	r7, [r2, r3]!
   3a760:	add	r8, fp, #8
   3a764:	mov	r6, r1
   3a768:	mov	r4, r0
   3a76c:	cmp	r6, #0
   3a770:	ldr	r5, [r2, #4]
   3a774:	ldm	r8, {r1, r2, r8}
   3a778:	beq	3a790 <flatcc_json_printer_int64_enum_struct_field@@Base+0x3c>
   3a77c:	ldr	r0, [r4, #20]
   3a780:	add	r3, r0, #1
   3a784:	str	r3, [r4, #20]
   3a788:	mov	r3, #44	; 0x2c
   3a78c:	strb	r3, [r0]
   3a790:	mov	r0, r4
   3a794:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a798:	ldrb	r0, [r4, #27]
   3a79c:	cmp	r0, #0
   3a7a0:	beq	3a7e4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x90>
   3a7a4:	ldr	r2, [r4, #20]
   3a7a8:	lsr	r6, r5, #31
   3a7ac:	cmn	r5, #1
   3a7b0:	bgt	3a7c4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   3a7b4:	mov	r0, #45	; 0x2d
   3a7b8:	rsbs	r7, r7, #0
   3a7bc:	strb	r0, [r2], #1
   3a7c0:	rsc	r5, r5, #0
   3a7c4:	mov	r0, r7
   3a7c8:	mov	r1, r5
   3a7cc:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   3a7d0:	ldr	r1, [r4, #20]
   3a7d4:	add	r0, r0, r6
   3a7d8:	add	r0, r1, r0
   3a7dc:	str	r0, [r4, #20]
   3a7e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3a7e4:	mov	r0, r4
   3a7e8:	mov	r2, r7
   3a7ec:	mov	r3, r5
   3a7f0:	mov	r1, r8
   3a7f4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a7f8:	bx	r1

0003a7fc <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3a7fc:	push	{r4, r5, r6, r7, fp, lr}
   3a800:	add	fp, sp, #16
   3a804:	add	r7, fp, #8
   3a808:	mov	r5, r1
   3a80c:	ldrb	r6, [r2, r3]
   3a810:	mov	r4, r0
   3a814:	ldm	r7, {r1, r2, r7}
   3a818:	cmp	r5, #0
   3a81c:	beq	3a834 <flatcc_json_printer_bool_enum_struct_field@@Base+0x38>
   3a820:	ldr	r0, [r4, #20]
   3a824:	add	r3, r0, #1
   3a828:	str	r3, [r4, #20]
   3a82c:	mov	r3, #44	; 0x2c
   3a830:	strb	r3, [r0]
   3a834:	mov	r0, r4
   3a838:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a83c:	ldrb	r0, [r4, #27]
   3a840:	cmp	r0, #0
   3a844:	beq	3a870 <flatcc_json_printer_bool_enum_struct_field@@Base+0x74>
   3a848:	ldr	r0, [r4, #20]
   3a84c:	cmp	r6, #0
   3a850:	beq	3a884 <flatcc_json_printer_bool_enum_struct_field@@Base+0x88>
   3a854:	mov	r1, #0
   3a858:	strb	r1, [r0, #4]
   3a85c:	movw	r1, #29300	; 0x7274
   3a860:	movt	r1, #25973	; 0x6575
   3a864:	str	r1, [r0]
   3a868:	mov	r0, #4
   3a86c:	b	3a89c <flatcc_json_printer_bool_enum_struct_field@@Base+0xa0>
   3a870:	mov	r0, r4
   3a874:	mov	r1, r6
   3a878:	mov	r2, r7
   3a87c:	pop	{r4, r5, r6, r7, fp, lr}
   3a880:	bx	r2
   3a884:	mov	r1, #101	; 0x65
   3a888:	strh	r1, [r0, #4]
   3a88c:	movw	r1, #24934	; 0x6166
   3a890:	movt	r1, #29548	; 0x736c
   3a894:	str	r1, [r0]
   3a898:	mov	r0, #5
   3a89c:	ldr	r1, [r4, #20]
   3a8a0:	add	r0, r1, r0
   3a8a4:	str	r0, [r4, #20]
   3a8a8:	pop	{r4, r5, r6, r7, fp, pc}

0003a8ac <flatcc_json_printer_utype_vector_field@@Base>:
   3a8ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a8b0:	add	fp, sp, #28
   3a8b4:	sub	sp, sp, #4
   3a8b8:	mov	r4, r0
   3a8bc:	mov	r0, #4
   3a8c0:	add	r0, r0, r2, lsl #1
   3a8c4:	ldr	r2, [r1, #8]
   3a8c8:	cmp	r0, r2
   3a8cc:	bge	3ac54 <flatcc_json_printer_utype_vector_field@@Base+0x3a8>
   3a8d0:	ldr	r2, [r1, #4]
   3a8d4:	add	r0, r2, r0
   3a8d8:	ldrh	r0, [r0]
   3a8dc:	cmp	r0, #0
   3a8e0:	ldrne	r2, [r1]
   3a8e4:	addsne	r8, r2, r0
   3a8e8:	beq	3ac54 <flatcc_json_printer_utype_vector_field@@Base+0x3a8>
   3a8ec:	ldr	r0, [r1, #16]
   3a8f0:	ldr	r2, [fp, #8]
   3a8f4:	add	r7, r0, #1
   3a8f8:	cmp	r0, #0
   3a8fc:	str	r7, [r1, #16]
   3a900:	beq	3a918 <flatcc_json_printer_utype_vector_field@@Base+0x6c>
   3a904:	ldr	r0, [r4, #20]
   3a908:	add	r1, r0, #1
   3a90c:	str	r1, [r4, #20]
   3a910:	mov	r1, #44	; 0x2c
   3a914:	strb	r1, [r0]
   3a918:	ldr	r0, [r8]
   3a91c:	mov	r1, r3
   3a920:	ldr	r7, [r8, r0]!
   3a924:	mov	r0, r4
   3a928:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3a92c:	ldr	r1, [r4, #32]
   3a930:	ldr	r0, [r4, #20]
   3a934:	cmp	r7, #0
   3a938:	add	r1, r1, #1
   3a93c:	str	r1, [r4, #32]
   3a940:	add	r1, r0, #1
   3a944:	str	r1, [r4, #20]
   3a948:	mov	r1, #91	; 0x5b
   3a94c:	strb	r1, [r0]
   3a950:	beq	3ab78 <flatcc_json_printer_utype_vector_field@@Base+0x2cc>
   3a954:	ldrb	r0, [r4, #25]
   3a958:	ldr	r1, [r4, #20]
   3a95c:	cmp	r0, #0
   3a960:	beq	3aa1c <flatcc_json_printer_utype_vector_field@@Base+0x170>
   3a964:	add	r0, r1, #1
   3a968:	str	r0, [r4, #20]
   3a96c:	mov	r0, #10
   3a970:	strb	r0, [r1]
   3a974:	ldr	r0, [r4, #20]
   3a978:	ldrb	r2, [r4, #25]
   3a97c:	ldr	r3, [r4, #32]
   3a980:	ldr	r1, [r4, #16]
   3a984:	mla	r6, r3, r2, r0
   3a988:	mul	r5, r3, r2
   3a98c:	cmp	r6, r1
   3a990:	bls	3aa00 <flatcc_json_printer_utype_vector_field@@Base+0x154>
   3a994:	cmp	r0, r1
   3a998:	bcc	3a9b4 <flatcc_json_printer_utype_vector_field@@Base+0x108>
   3a99c:	ldr	r2, [r4, #44]	; 0x2c
   3a9a0:	mov	r0, r4
   3a9a4:	mov	r1, #0
   3a9a8:	blx	r2
   3a9ac:	ldr	r1, [r4, #16]
   3a9b0:	ldr	r0, [r4, #20]
   3a9b4:	sub	r6, r1, r0
   3a9b8:	cmp	r6, r5
   3a9bc:	bcs	3aa00 <flatcc_json_printer_utype_vector_field@@Base+0x154>
   3a9c0:	mov	r1, #32
   3a9c4:	mov	r2, r6
   3a9c8:	bl	14eec <memset@plt>
   3a9cc:	ldr	r0, [r4, #20]
   3a9d0:	ldr	r2, [r4, #44]	; 0x2c
   3a9d4:	mov	r1, #0
   3a9d8:	add	r0, r0, r6
   3a9dc:	str	r0, [r4, #20]
   3a9e0:	mov	r0, r4
   3a9e4:	blx	r2
   3a9e8:	ldr	r1, [r4, #16]
   3a9ec:	ldr	r0, [r4, #20]
   3a9f0:	sub	r5, r5, r6
   3a9f4:	sub	r6, r1, r0
   3a9f8:	cmp	r5, r6
   3a9fc:	bhi	3a9c0 <flatcc_json_printer_utype_vector_field@@Base+0x114>
   3aa00:	mov	r1, #32
   3aa04:	mov	r2, r5
   3aa08:	bl	14eec <memset@plt>
   3aa0c:	ldr	r0, [r4, #20]
   3aa10:	add	r1, r0, r5
   3aa14:	str	r1, [r4, #20]
   3aa18:	b	3aa3c <flatcc_json_printer_utype_vector_field@@Base+0x190>
   3aa1c:	ldr	r0, [r4, #16]
   3aa20:	cmp	r1, r0
   3aa24:	bcc	3aa3c <flatcc_json_printer_utype_vector_field@@Base+0x190>
   3aa28:	ldr	r2, [r4, #44]	; 0x2c
   3aa2c:	mov	r0, r4
   3aa30:	mov	r1, #0
   3aa34:	blx	r2
   3aa38:	ldr	r1, [r4, #20]
   3aa3c:	ldrb	r0, [r8, #4]
   3aa40:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   3aa44:	ldr	r1, [r4, #20]
   3aa48:	subs	r9, r7, #1
   3aa4c:	add	r0, r1, r0
   3aa50:	str	r0, [r4, #20]
   3aa54:	beq	3ab78 <flatcc_json_printer_utype_vector_field@@Base+0x2cc>
   3aa58:	ldr	r0, [r4, #20]
   3aa5c:	add	r7, r8, #5
   3aa60:	mov	r8, #44	; 0x2c
   3aa64:	mov	sl, #10
   3aa68:	add	r1, r0, #1
   3aa6c:	sub	r9, r9, #1
   3aa70:	str	r1, [r4, #20]
   3aa74:	strb	r8, [r0]
   3aa78:	ldrb	r0, [r4, #25]
   3aa7c:	ldr	r1, [r4, #20]
   3aa80:	cmp	r0, #0
   3aa84:	beq	3ab3c <flatcc_json_printer_utype_vector_field@@Base+0x290>
   3aa88:	add	r0, r1, #1
   3aa8c:	str	r0, [r4, #20]
   3aa90:	strb	sl, [r1]
   3aa94:	ldr	r0, [r4, #20]
   3aa98:	ldrb	r2, [r4, #25]
   3aa9c:	ldr	r3, [r4, #32]
   3aaa0:	ldr	r1, [r4, #16]
   3aaa4:	mla	r6, r3, r2, r0
   3aaa8:	mul	r5, r3, r2
   3aaac:	cmp	r6, r1
   3aab0:	bls	3ab20 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   3aab4:	cmp	r0, r1
   3aab8:	bcc	3aad4 <flatcc_json_printer_utype_vector_field@@Base+0x228>
   3aabc:	ldr	r2, [r4, #44]	; 0x2c
   3aac0:	mov	r0, r4
   3aac4:	mov	r1, #0
   3aac8:	blx	r2
   3aacc:	ldr	r1, [r4, #16]
   3aad0:	ldr	r0, [r4, #20]
   3aad4:	sub	r6, r1, r0
   3aad8:	cmp	r6, r5
   3aadc:	bcs	3ab20 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   3aae0:	mov	r1, #32
   3aae4:	mov	r2, r6
   3aae8:	bl	14eec <memset@plt>
   3aaec:	ldr	r0, [r4, #20]
   3aaf0:	ldr	r2, [r4, #44]	; 0x2c
   3aaf4:	mov	r1, #0
   3aaf8:	add	r0, r0, r6
   3aafc:	str	r0, [r4, #20]
   3ab00:	mov	r0, r4
   3ab04:	blx	r2
   3ab08:	ldr	r1, [r4, #16]
   3ab0c:	ldr	r0, [r4, #20]
   3ab10:	sub	r5, r5, r6
   3ab14:	sub	r6, r1, r0
   3ab18:	cmp	r5, r6
   3ab1c:	bhi	3aae0 <flatcc_json_printer_utype_vector_field@@Base+0x234>
   3ab20:	mov	r1, #32
   3ab24:	mov	r2, r5
   3ab28:	bl	14eec <memset@plt>
   3ab2c:	ldr	r0, [r4, #20]
   3ab30:	add	r1, r0, r5
   3ab34:	str	r1, [r4, #20]
   3ab38:	b	3ab5c <flatcc_json_printer_utype_vector_field@@Base+0x2b0>
   3ab3c:	ldr	r0, [r4, #16]
   3ab40:	cmp	r1, r0
   3ab44:	bcc	3ab5c <flatcc_json_printer_utype_vector_field@@Base+0x2b0>
   3ab48:	ldr	r2, [r4, #44]	; 0x2c
   3ab4c:	mov	r0, r4
   3ab50:	mov	r1, #0
   3ab54:	blx	r2
   3ab58:	ldr	r1, [r4, #20]
   3ab5c:	ldrb	r0, [r7], #1
   3ab60:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   3ab64:	ldr	r1, [r4, #20]
   3ab68:	cmp	r9, #0
   3ab6c:	add	r0, r1, r0
   3ab70:	str	r0, [r4, #20]
   3ab74:	bne	3aa68 <flatcc_json_printer_utype_vector_field@@Base+0x1bc>
   3ab78:	ldrb	r1, [r4, #25]
   3ab7c:	ldr	r0, [r4, #20]
   3ab80:	cmp	r1, #0
   3ab84:	beq	3ac44 <flatcc_json_printer_utype_vector_field@@Base+0x398>
   3ab88:	add	r1, r0, #1
   3ab8c:	str	r1, [r4, #20]
   3ab90:	mov	r1, #10
   3ab94:	strb	r1, [r0]
   3ab98:	ldr	r0, [r4, #32]
   3ab9c:	sub	r2, r0, #1
   3aba0:	str	r2, [r4, #32]
   3aba4:	ldrb	r3, [r4, #25]
   3aba8:	ldr	r0, [r4, #20]
   3abac:	ldr	r1, [r4, #16]
   3abb0:	mla	r7, r2, r3, r0
   3abb4:	mul	r5, r2, r3
   3abb8:	cmp	r7, r1
   3abbc:	bls	3ac2c <flatcc_json_printer_utype_vector_field@@Base+0x380>
   3abc0:	cmp	r0, r1
   3abc4:	bcc	3abe0 <flatcc_json_printer_utype_vector_field@@Base+0x334>
   3abc8:	ldr	r2, [r4, #44]	; 0x2c
   3abcc:	mov	r0, r4
   3abd0:	mov	r1, #0
   3abd4:	blx	r2
   3abd8:	ldr	r1, [r4, #16]
   3abdc:	ldr	r0, [r4, #20]
   3abe0:	sub	r6, r1, r0
   3abe4:	cmp	r6, r5
   3abe8:	bcs	3ac2c <flatcc_json_printer_utype_vector_field@@Base+0x380>
   3abec:	mov	r1, #32
   3abf0:	mov	r2, r6
   3abf4:	bl	14eec <memset@plt>
   3abf8:	ldr	r0, [r4, #20]
   3abfc:	ldr	r2, [r4, #44]	; 0x2c
   3ac00:	mov	r1, #0
   3ac04:	add	r0, r0, r6
   3ac08:	str	r0, [r4, #20]
   3ac0c:	mov	r0, r4
   3ac10:	blx	r2
   3ac14:	ldr	r1, [r4, #16]
   3ac18:	ldr	r0, [r4, #20]
   3ac1c:	sub	r5, r5, r6
   3ac20:	sub	r6, r1, r0
   3ac24:	cmp	r5, r6
   3ac28:	bhi	3abec <flatcc_json_printer_utype_vector_field@@Base+0x340>
   3ac2c:	mov	r1, #32
   3ac30:	mov	r2, r5
   3ac34:	bl	14eec <memset@plt>
   3ac38:	ldr	r0, [r4, #20]
   3ac3c:	add	r0, r0, r5
   3ac40:	str	r0, [r4, #20]
   3ac44:	add	r1, r0, #1
   3ac48:	str	r1, [r4, #20]
   3ac4c:	mov	r1, #93	; 0x5d
   3ac50:	strb	r1, [r0]
   3ac54:	sub	sp, fp, #28
   3ac58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ac5c <flatcc_json_printer_uint8_vector_field@@Base>:
   3ac5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ac60:	add	fp, sp, #28
   3ac64:	sub	sp, sp, #4
   3ac68:	mov	r4, r0
   3ac6c:	mov	r0, #4
   3ac70:	add	r0, r0, r2, lsl #1
   3ac74:	ldr	r2, [r1, #8]
   3ac78:	cmp	r0, r2
   3ac7c:	bge	3b004 <flatcc_json_printer_uint8_vector_field@@Base+0x3a8>
   3ac80:	ldr	r2, [r1, #4]
   3ac84:	add	r0, r2, r0
   3ac88:	ldrh	r0, [r0]
   3ac8c:	cmp	r0, #0
   3ac90:	ldrne	r2, [r1]
   3ac94:	addsne	r8, r2, r0
   3ac98:	beq	3b004 <flatcc_json_printer_uint8_vector_field@@Base+0x3a8>
   3ac9c:	ldr	r0, [r1, #16]
   3aca0:	ldr	r2, [fp, #8]
   3aca4:	add	r7, r0, #1
   3aca8:	cmp	r0, #0
   3acac:	str	r7, [r1, #16]
   3acb0:	beq	3acc8 <flatcc_json_printer_uint8_vector_field@@Base+0x6c>
   3acb4:	ldr	r0, [r4, #20]
   3acb8:	add	r1, r0, #1
   3acbc:	str	r1, [r4, #20]
   3acc0:	mov	r1, #44	; 0x2c
   3acc4:	strb	r1, [r0]
   3acc8:	ldr	r0, [r8]
   3accc:	mov	r1, r3
   3acd0:	ldr	r7, [r8, r0]!
   3acd4:	mov	r0, r4
   3acd8:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3acdc:	ldr	r1, [r4, #32]
   3ace0:	ldr	r0, [r4, #20]
   3ace4:	cmp	r7, #0
   3ace8:	add	r1, r1, #1
   3acec:	str	r1, [r4, #32]
   3acf0:	add	r1, r0, #1
   3acf4:	str	r1, [r4, #20]
   3acf8:	mov	r1, #91	; 0x5b
   3acfc:	strb	r1, [r0]
   3ad00:	beq	3af28 <flatcc_json_printer_uint8_vector_field@@Base+0x2cc>
   3ad04:	ldrb	r0, [r4, #25]
   3ad08:	ldr	r1, [r4, #20]
   3ad0c:	cmp	r0, #0
   3ad10:	beq	3adcc <flatcc_json_printer_uint8_vector_field@@Base+0x170>
   3ad14:	add	r0, r1, #1
   3ad18:	str	r0, [r4, #20]
   3ad1c:	mov	r0, #10
   3ad20:	strb	r0, [r1]
   3ad24:	ldr	r0, [r4, #20]
   3ad28:	ldrb	r2, [r4, #25]
   3ad2c:	ldr	r3, [r4, #32]
   3ad30:	ldr	r1, [r4, #16]
   3ad34:	mla	r6, r3, r2, r0
   3ad38:	mul	r5, r3, r2
   3ad3c:	cmp	r6, r1
   3ad40:	bls	3adb0 <flatcc_json_printer_uint8_vector_field@@Base+0x154>
   3ad44:	cmp	r0, r1
   3ad48:	bcc	3ad64 <flatcc_json_printer_uint8_vector_field@@Base+0x108>
   3ad4c:	ldr	r2, [r4, #44]	; 0x2c
   3ad50:	mov	r0, r4
   3ad54:	mov	r1, #0
   3ad58:	blx	r2
   3ad5c:	ldr	r1, [r4, #16]
   3ad60:	ldr	r0, [r4, #20]
   3ad64:	sub	r6, r1, r0
   3ad68:	cmp	r6, r5
   3ad6c:	bcs	3adb0 <flatcc_json_printer_uint8_vector_field@@Base+0x154>
   3ad70:	mov	r1, #32
   3ad74:	mov	r2, r6
   3ad78:	bl	14eec <memset@plt>
   3ad7c:	ldr	r0, [r4, #20]
   3ad80:	ldr	r2, [r4, #44]	; 0x2c
   3ad84:	mov	r1, #0
   3ad88:	add	r0, r0, r6
   3ad8c:	str	r0, [r4, #20]
   3ad90:	mov	r0, r4
   3ad94:	blx	r2
   3ad98:	ldr	r1, [r4, #16]
   3ad9c:	ldr	r0, [r4, #20]
   3ada0:	sub	r5, r5, r6
   3ada4:	sub	r6, r1, r0
   3ada8:	cmp	r5, r6
   3adac:	bhi	3ad70 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
   3adb0:	mov	r1, #32
   3adb4:	mov	r2, r5
   3adb8:	bl	14eec <memset@plt>
   3adbc:	ldr	r0, [r4, #20]
   3adc0:	add	r1, r0, r5
   3adc4:	str	r1, [r4, #20]
   3adc8:	b	3adec <flatcc_json_printer_uint8_vector_field@@Base+0x190>
   3adcc:	ldr	r0, [r4, #16]
   3add0:	cmp	r1, r0
   3add4:	bcc	3adec <flatcc_json_printer_uint8_vector_field@@Base+0x190>
   3add8:	ldr	r2, [r4, #44]	; 0x2c
   3addc:	mov	r0, r4
   3ade0:	mov	r1, #0
   3ade4:	blx	r2
   3ade8:	ldr	r1, [r4, #20]
   3adec:	ldrb	r0, [r8, #4]
   3adf0:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   3adf4:	ldr	r1, [r4, #20]
   3adf8:	subs	r9, r7, #1
   3adfc:	add	r0, r1, r0
   3ae00:	str	r0, [r4, #20]
   3ae04:	beq	3af28 <flatcc_json_printer_uint8_vector_field@@Base+0x2cc>
   3ae08:	ldr	r0, [r4, #20]
   3ae0c:	add	r7, r8, #5
   3ae10:	mov	r8, #44	; 0x2c
   3ae14:	mov	sl, #10
   3ae18:	add	r1, r0, #1
   3ae1c:	sub	r9, r9, #1
   3ae20:	str	r1, [r4, #20]
   3ae24:	strb	r8, [r0]
   3ae28:	ldrb	r0, [r4, #25]
   3ae2c:	ldr	r1, [r4, #20]
   3ae30:	cmp	r0, #0
   3ae34:	beq	3aeec <flatcc_json_printer_uint8_vector_field@@Base+0x290>
   3ae38:	add	r0, r1, #1
   3ae3c:	str	r0, [r4, #20]
   3ae40:	strb	sl, [r1]
   3ae44:	ldr	r0, [r4, #20]
   3ae48:	ldrb	r2, [r4, #25]
   3ae4c:	ldr	r3, [r4, #32]
   3ae50:	ldr	r1, [r4, #16]
   3ae54:	mla	r6, r3, r2, r0
   3ae58:	mul	r5, r3, r2
   3ae5c:	cmp	r6, r1
   3ae60:	bls	3aed0 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   3ae64:	cmp	r0, r1
   3ae68:	bcc	3ae84 <flatcc_json_printer_uint8_vector_field@@Base+0x228>
   3ae6c:	ldr	r2, [r4, #44]	; 0x2c
   3ae70:	mov	r0, r4
   3ae74:	mov	r1, #0
   3ae78:	blx	r2
   3ae7c:	ldr	r1, [r4, #16]
   3ae80:	ldr	r0, [r4, #20]
   3ae84:	sub	r6, r1, r0
   3ae88:	cmp	r6, r5
   3ae8c:	bcs	3aed0 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   3ae90:	mov	r1, #32
   3ae94:	mov	r2, r6
   3ae98:	bl	14eec <memset@plt>
   3ae9c:	ldr	r0, [r4, #20]
   3aea0:	ldr	r2, [r4, #44]	; 0x2c
   3aea4:	mov	r1, #0
   3aea8:	add	r0, r0, r6
   3aeac:	str	r0, [r4, #20]
   3aeb0:	mov	r0, r4
   3aeb4:	blx	r2
   3aeb8:	ldr	r1, [r4, #16]
   3aebc:	ldr	r0, [r4, #20]
   3aec0:	sub	r5, r5, r6
   3aec4:	sub	r6, r1, r0
   3aec8:	cmp	r5, r6
   3aecc:	bhi	3ae90 <flatcc_json_printer_uint8_vector_field@@Base+0x234>
   3aed0:	mov	r1, #32
   3aed4:	mov	r2, r5
   3aed8:	bl	14eec <memset@plt>
   3aedc:	ldr	r0, [r4, #20]
   3aee0:	add	r1, r0, r5
   3aee4:	str	r1, [r4, #20]
   3aee8:	b	3af0c <flatcc_json_printer_uint8_vector_field@@Base+0x2b0>
   3aeec:	ldr	r0, [r4, #16]
   3aef0:	cmp	r1, r0
   3aef4:	bcc	3af0c <flatcc_json_printer_uint8_vector_field@@Base+0x2b0>
   3aef8:	ldr	r2, [r4, #44]	; 0x2c
   3aefc:	mov	r0, r4
   3af00:	mov	r1, #0
   3af04:	blx	r2
   3af08:	ldr	r1, [r4, #20]
   3af0c:	ldrb	r0, [r7], #1
   3af10:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   3af14:	ldr	r1, [r4, #20]
   3af18:	cmp	r9, #0
   3af1c:	add	r0, r1, r0
   3af20:	str	r0, [r4, #20]
   3af24:	bne	3ae18 <flatcc_json_printer_uint8_vector_field@@Base+0x1bc>
   3af28:	ldrb	r1, [r4, #25]
   3af2c:	ldr	r0, [r4, #20]
   3af30:	cmp	r1, #0
   3af34:	beq	3aff4 <flatcc_json_printer_uint8_vector_field@@Base+0x398>
   3af38:	add	r1, r0, #1
   3af3c:	str	r1, [r4, #20]
   3af40:	mov	r1, #10
   3af44:	strb	r1, [r0]
   3af48:	ldr	r0, [r4, #32]
   3af4c:	sub	r2, r0, #1
   3af50:	str	r2, [r4, #32]
   3af54:	ldrb	r3, [r4, #25]
   3af58:	ldr	r0, [r4, #20]
   3af5c:	ldr	r1, [r4, #16]
   3af60:	mla	r7, r2, r3, r0
   3af64:	mul	r5, r2, r3
   3af68:	cmp	r7, r1
   3af6c:	bls	3afdc <flatcc_json_printer_uint8_vector_field@@Base+0x380>
   3af70:	cmp	r0, r1
   3af74:	bcc	3af90 <flatcc_json_printer_uint8_vector_field@@Base+0x334>
   3af78:	ldr	r2, [r4, #44]	; 0x2c
   3af7c:	mov	r0, r4
   3af80:	mov	r1, #0
   3af84:	blx	r2
   3af88:	ldr	r1, [r4, #16]
   3af8c:	ldr	r0, [r4, #20]
   3af90:	sub	r6, r1, r0
   3af94:	cmp	r6, r5
   3af98:	bcs	3afdc <flatcc_json_printer_uint8_vector_field@@Base+0x380>
   3af9c:	mov	r1, #32
   3afa0:	mov	r2, r6
   3afa4:	bl	14eec <memset@plt>
   3afa8:	ldr	r0, [r4, #20]
   3afac:	ldr	r2, [r4, #44]	; 0x2c
   3afb0:	mov	r1, #0
   3afb4:	add	r0, r0, r6
   3afb8:	str	r0, [r4, #20]
   3afbc:	mov	r0, r4
   3afc0:	blx	r2
   3afc4:	ldr	r1, [r4, #16]
   3afc8:	ldr	r0, [r4, #20]
   3afcc:	sub	r5, r5, r6
   3afd0:	sub	r6, r1, r0
   3afd4:	cmp	r5, r6
   3afd8:	bhi	3af9c <flatcc_json_printer_uint8_vector_field@@Base+0x340>
   3afdc:	mov	r1, #32
   3afe0:	mov	r2, r5
   3afe4:	bl	14eec <memset@plt>
   3afe8:	ldr	r0, [r4, #20]
   3afec:	add	r0, r0, r5
   3aff0:	str	r0, [r4, #20]
   3aff4:	add	r1, r0, #1
   3aff8:	str	r1, [r4, #20]
   3affc:	mov	r1, #93	; 0x5d
   3b000:	strb	r1, [r0]
   3b004:	sub	sp, fp, #28
   3b008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b00c <flatcc_json_printer_uint16_vector_field@@Base>:
   3b00c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b010:	add	fp, sp, #28
   3b014:	sub	sp, sp, #4
   3b018:	mov	r4, r0
   3b01c:	mov	r0, #4
   3b020:	add	r0, r0, r2, lsl #1
   3b024:	ldr	r2, [r1, #8]
   3b028:	cmp	r0, r2
   3b02c:	bge	3b3b4 <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   3b030:	ldr	r2, [r1, #4]
   3b034:	add	r0, r2, r0
   3b038:	ldrh	r0, [r0]
   3b03c:	cmp	r0, #0
   3b040:	ldrne	r2, [r1]
   3b044:	addsne	r8, r2, r0
   3b048:	beq	3b3b4 <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   3b04c:	ldr	r0, [r1, #16]
   3b050:	ldr	r2, [fp, #8]
   3b054:	add	r7, r0, #1
   3b058:	cmp	r0, #0
   3b05c:	str	r7, [r1, #16]
   3b060:	beq	3b078 <flatcc_json_printer_uint16_vector_field@@Base+0x6c>
   3b064:	ldr	r0, [r4, #20]
   3b068:	add	r1, r0, #1
   3b06c:	str	r1, [r4, #20]
   3b070:	mov	r1, #44	; 0x2c
   3b074:	strb	r1, [r0]
   3b078:	ldr	r0, [r8]
   3b07c:	mov	r1, r3
   3b080:	ldr	r7, [r8, r0]!
   3b084:	mov	r0, r4
   3b088:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3b08c:	ldr	r1, [r4, #32]
   3b090:	ldr	r0, [r4, #20]
   3b094:	cmp	r7, #0
   3b098:	add	r1, r1, #1
   3b09c:	str	r1, [r4, #32]
   3b0a0:	add	r1, r0, #1
   3b0a4:	str	r1, [r4, #20]
   3b0a8:	mov	r1, #91	; 0x5b
   3b0ac:	strb	r1, [r0]
   3b0b0:	beq	3b2d8 <flatcc_json_printer_uint16_vector_field@@Base+0x2cc>
   3b0b4:	ldrb	r0, [r4, #25]
   3b0b8:	ldr	r1, [r4, #20]
   3b0bc:	cmp	r0, #0
   3b0c0:	beq	3b17c <flatcc_json_printer_uint16_vector_field@@Base+0x170>
   3b0c4:	add	r0, r1, #1
   3b0c8:	str	r0, [r4, #20]
   3b0cc:	mov	r0, #10
   3b0d0:	strb	r0, [r1]
   3b0d4:	ldr	r0, [r4, #20]
   3b0d8:	ldrb	r2, [r4, #25]
   3b0dc:	ldr	r3, [r4, #32]
   3b0e0:	ldr	r1, [r4, #16]
   3b0e4:	mla	r6, r3, r2, r0
   3b0e8:	mul	r5, r3, r2
   3b0ec:	cmp	r6, r1
   3b0f0:	bls	3b160 <flatcc_json_printer_uint16_vector_field@@Base+0x154>
   3b0f4:	cmp	r0, r1
   3b0f8:	bcc	3b114 <flatcc_json_printer_uint16_vector_field@@Base+0x108>
   3b0fc:	ldr	r2, [r4, #44]	; 0x2c
   3b100:	mov	r0, r4
   3b104:	mov	r1, #0
   3b108:	blx	r2
   3b10c:	ldr	r1, [r4, #16]
   3b110:	ldr	r0, [r4, #20]
   3b114:	sub	r6, r1, r0
   3b118:	cmp	r6, r5
   3b11c:	bcs	3b160 <flatcc_json_printer_uint16_vector_field@@Base+0x154>
   3b120:	mov	r1, #32
   3b124:	mov	r2, r6
   3b128:	bl	14eec <memset@plt>
   3b12c:	ldr	r0, [r4, #20]
   3b130:	ldr	r2, [r4, #44]	; 0x2c
   3b134:	mov	r1, #0
   3b138:	add	r0, r0, r6
   3b13c:	str	r0, [r4, #20]
   3b140:	mov	r0, r4
   3b144:	blx	r2
   3b148:	ldr	r1, [r4, #16]
   3b14c:	ldr	r0, [r4, #20]
   3b150:	sub	r5, r5, r6
   3b154:	sub	r6, r1, r0
   3b158:	cmp	r5, r6
   3b15c:	bhi	3b120 <flatcc_json_printer_uint16_vector_field@@Base+0x114>
   3b160:	mov	r1, #32
   3b164:	mov	r2, r5
   3b168:	bl	14eec <memset@plt>
   3b16c:	ldr	r0, [r4, #20]
   3b170:	add	r1, r0, r5
   3b174:	str	r1, [r4, #20]
   3b178:	b	3b19c <flatcc_json_printer_uint16_vector_field@@Base+0x190>
   3b17c:	ldr	r0, [r4, #16]
   3b180:	cmp	r1, r0
   3b184:	bcc	3b19c <flatcc_json_printer_uint16_vector_field@@Base+0x190>
   3b188:	ldr	r2, [r4, #44]	; 0x2c
   3b18c:	mov	r0, r4
   3b190:	mov	r1, #0
   3b194:	blx	r2
   3b198:	ldr	r1, [r4, #20]
   3b19c:	ldrh	r0, [r8, #4]
   3b1a0:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   3b1a4:	ldr	r1, [r4, #20]
   3b1a8:	subs	r9, r7, #1
   3b1ac:	add	r0, r1, r0
   3b1b0:	str	r0, [r4, #20]
   3b1b4:	beq	3b2d8 <flatcc_json_printer_uint16_vector_field@@Base+0x2cc>
   3b1b8:	ldr	r0, [r4, #20]
   3b1bc:	add	r7, r8, #6
   3b1c0:	mov	r8, #44	; 0x2c
   3b1c4:	mov	sl, #10
   3b1c8:	add	r1, r0, #1
   3b1cc:	sub	r9, r9, #1
   3b1d0:	str	r1, [r4, #20]
   3b1d4:	strb	r8, [r0]
   3b1d8:	ldrb	r0, [r4, #25]
   3b1dc:	ldr	r1, [r4, #20]
   3b1e0:	cmp	r0, #0
   3b1e4:	beq	3b29c <flatcc_json_printer_uint16_vector_field@@Base+0x290>
   3b1e8:	add	r0, r1, #1
   3b1ec:	str	r0, [r4, #20]
   3b1f0:	strb	sl, [r1]
   3b1f4:	ldr	r0, [r4, #20]
   3b1f8:	ldrb	r2, [r4, #25]
   3b1fc:	ldr	r3, [r4, #32]
   3b200:	ldr	r1, [r4, #16]
   3b204:	mla	r6, r3, r2, r0
   3b208:	mul	r5, r3, r2
   3b20c:	cmp	r6, r1
   3b210:	bls	3b280 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3b214:	cmp	r0, r1
   3b218:	bcc	3b234 <flatcc_json_printer_uint16_vector_field@@Base+0x228>
   3b21c:	ldr	r2, [r4, #44]	; 0x2c
   3b220:	mov	r0, r4
   3b224:	mov	r1, #0
   3b228:	blx	r2
   3b22c:	ldr	r1, [r4, #16]
   3b230:	ldr	r0, [r4, #20]
   3b234:	sub	r6, r1, r0
   3b238:	cmp	r6, r5
   3b23c:	bcs	3b280 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3b240:	mov	r1, #32
   3b244:	mov	r2, r6
   3b248:	bl	14eec <memset@plt>
   3b24c:	ldr	r0, [r4, #20]
   3b250:	ldr	r2, [r4, #44]	; 0x2c
   3b254:	mov	r1, #0
   3b258:	add	r0, r0, r6
   3b25c:	str	r0, [r4, #20]
   3b260:	mov	r0, r4
   3b264:	blx	r2
   3b268:	ldr	r1, [r4, #16]
   3b26c:	ldr	r0, [r4, #20]
   3b270:	sub	r5, r5, r6
   3b274:	sub	r6, r1, r0
   3b278:	cmp	r5, r6
   3b27c:	bhi	3b240 <flatcc_json_printer_uint16_vector_field@@Base+0x234>
   3b280:	mov	r1, #32
   3b284:	mov	r2, r5
   3b288:	bl	14eec <memset@plt>
   3b28c:	ldr	r0, [r4, #20]
   3b290:	add	r1, r0, r5
   3b294:	str	r1, [r4, #20]
   3b298:	b	3b2bc <flatcc_json_printer_uint16_vector_field@@Base+0x2b0>
   3b29c:	ldr	r0, [r4, #16]
   3b2a0:	cmp	r1, r0
   3b2a4:	bcc	3b2bc <flatcc_json_printer_uint16_vector_field@@Base+0x2b0>
   3b2a8:	ldr	r2, [r4, #44]	; 0x2c
   3b2ac:	mov	r0, r4
   3b2b0:	mov	r1, #0
   3b2b4:	blx	r2
   3b2b8:	ldr	r1, [r4, #20]
   3b2bc:	ldrh	r0, [r7], #2
   3b2c0:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   3b2c4:	ldr	r1, [r4, #20]
   3b2c8:	cmp	r9, #0
   3b2cc:	add	r0, r1, r0
   3b2d0:	str	r0, [r4, #20]
   3b2d4:	bne	3b1c8 <flatcc_json_printer_uint16_vector_field@@Base+0x1bc>
   3b2d8:	ldrb	r1, [r4, #25]
   3b2dc:	ldr	r0, [r4, #20]
   3b2e0:	cmp	r1, #0
   3b2e4:	beq	3b3a4 <flatcc_json_printer_uint16_vector_field@@Base+0x398>
   3b2e8:	add	r1, r0, #1
   3b2ec:	str	r1, [r4, #20]
   3b2f0:	mov	r1, #10
   3b2f4:	strb	r1, [r0]
   3b2f8:	ldr	r0, [r4, #32]
   3b2fc:	sub	r2, r0, #1
   3b300:	str	r2, [r4, #32]
   3b304:	ldrb	r3, [r4, #25]
   3b308:	ldr	r0, [r4, #20]
   3b30c:	ldr	r1, [r4, #16]
   3b310:	mla	r7, r2, r3, r0
   3b314:	mul	r5, r2, r3
   3b318:	cmp	r7, r1
   3b31c:	bls	3b38c <flatcc_json_printer_uint16_vector_field@@Base+0x380>
   3b320:	cmp	r0, r1
   3b324:	bcc	3b340 <flatcc_json_printer_uint16_vector_field@@Base+0x334>
   3b328:	ldr	r2, [r4, #44]	; 0x2c
   3b32c:	mov	r0, r4
   3b330:	mov	r1, #0
   3b334:	blx	r2
   3b338:	ldr	r1, [r4, #16]
   3b33c:	ldr	r0, [r4, #20]
   3b340:	sub	r6, r1, r0
   3b344:	cmp	r6, r5
   3b348:	bcs	3b38c <flatcc_json_printer_uint16_vector_field@@Base+0x380>
   3b34c:	mov	r1, #32
   3b350:	mov	r2, r6
   3b354:	bl	14eec <memset@plt>
   3b358:	ldr	r0, [r4, #20]
   3b35c:	ldr	r2, [r4, #44]	; 0x2c
   3b360:	mov	r1, #0
   3b364:	add	r0, r0, r6
   3b368:	str	r0, [r4, #20]
   3b36c:	mov	r0, r4
   3b370:	blx	r2
   3b374:	ldr	r1, [r4, #16]
   3b378:	ldr	r0, [r4, #20]
   3b37c:	sub	r5, r5, r6
   3b380:	sub	r6, r1, r0
   3b384:	cmp	r5, r6
   3b388:	bhi	3b34c <flatcc_json_printer_uint16_vector_field@@Base+0x340>
   3b38c:	mov	r1, #32
   3b390:	mov	r2, r5
   3b394:	bl	14eec <memset@plt>
   3b398:	ldr	r0, [r4, #20]
   3b39c:	add	r0, r0, r5
   3b3a0:	str	r0, [r4, #20]
   3b3a4:	add	r1, r0, #1
   3b3a8:	str	r1, [r4, #20]
   3b3ac:	mov	r1, #93	; 0x5d
   3b3b0:	strb	r1, [r0]
   3b3b4:	sub	sp, fp, #28
   3b3b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b3bc <flatcc_json_printer_uint32_vector_field@@Base>:
   3b3bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b3c0:	add	fp, sp, #28
   3b3c4:	sub	sp, sp, #4
   3b3c8:	mov	r4, r0
   3b3cc:	mov	r0, #4
   3b3d0:	add	r0, r0, r2, lsl #1
   3b3d4:	ldr	r2, [r1, #8]
   3b3d8:	cmp	r0, r2
   3b3dc:	bge	3b764 <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   3b3e0:	ldr	r2, [r1, #4]
   3b3e4:	add	r0, r2, r0
   3b3e8:	ldrh	r0, [r0]
   3b3ec:	cmp	r0, #0
   3b3f0:	ldrne	r2, [r1]
   3b3f4:	addsne	r8, r2, r0
   3b3f8:	beq	3b764 <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   3b3fc:	ldr	r0, [r1, #16]
   3b400:	ldr	r2, [fp, #8]
   3b404:	add	r7, r0, #1
   3b408:	cmp	r0, #0
   3b40c:	str	r7, [r1, #16]
   3b410:	beq	3b428 <flatcc_json_printer_uint32_vector_field@@Base+0x6c>
   3b414:	ldr	r0, [r4, #20]
   3b418:	add	r1, r0, #1
   3b41c:	str	r1, [r4, #20]
   3b420:	mov	r1, #44	; 0x2c
   3b424:	strb	r1, [r0]
   3b428:	ldr	r0, [r8]
   3b42c:	mov	r1, r3
   3b430:	ldr	r7, [r8, r0]!
   3b434:	mov	r0, r4
   3b438:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3b43c:	ldr	r1, [r4, #32]
   3b440:	ldr	r0, [r4, #20]
   3b444:	cmp	r7, #0
   3b448:	add	r1, r1, #1
   3b44c:	str	r1, [r4, #32]
   3b450:	add	r1, r0, #1
   3b454:	str	r1, [r4, #20]
   3b458:	mov	r1, #91	; 0x5b
   3b45c:	strb	r1, [r0]
   3b460:	beq	3b688 <flatcc_json_printer_uint32_vector_field@@Base+0x2cc>
   3b464:	ldrb	r0, [r4, #25]
   3b468:	ldr	r1, [r4, #20]
   3b46c:	cmp	r0, #0
   3b470:	beq	3b52c <flatcc_json_printer_uint32_vector_field@@Base+0x170>
   3b474:	add	r0, r1, #1
   3b478:	str	r0, [r4, #20]
   3b47c:	mov	r0, #10
   3b480:	strb	r0, [r1]
   3b484:	ldr	r0, [r4, #20]
   3b488:	ldrb	r2, [r4, #25]
   3b48c:	ldr	r3, [r4, #32]
   3b490:	ldr	r1, [r4, #16]
   3b494:	mla	r6, r3, r2, r0
   3b498:	mul	r5, r3, r2
   3b49c:	cmp	r6, r1
   3b4a0:	bls	3b510 <flatcc_json_printer_uint32_vector_field@@Base+0x154>
   3b4a4:	cmp	r0, r1
   3b4a8:	bcc	3b4c4 <flatcc_json_printer_uint32_vector_field@@Base+0x108>
   3b4ac:	ldr	r2, [r4, #44]	; 0x2c
   3b4b0:	mov	r0, r4
   3b4b4:	mov	r1, #0
   3b4b8:	blx	r2
   3b4bc:	ldr	r1, [r4, #16]
   3b4c0:	ldr	r0, [r4, #20]
   3b4c4:	sub	r6, r1, r0
   3b4c8:	cmp	r6, r5
   3b4cc:	bcs	3b510 <flatcc_json_printer_uint32_vector_field@@Base+0x154>
   3b4d0:	mov	r1, #32
   3b4d4:	mov	r2, r6
   3b4d8:	bl	14eec <memset@plt>
   3b4dc:	ldr	r0, [r4, #20]
   3b4e0:	ldr	r2, [r4, #44]	; 0x2c
   3b4e4:	mov	r1, #0
   3b4e8:	add	r0, r0, r6
   3b4ec:	str	r0, [r4, #20]
   3b4f0:	mov	r0, r4
   3b4f4:	blx	r2
   3b4f8:	ldr	r1, [r4, #16]
   3b4fc:	ldr	r0, [r4, #20]
   3b500:	sub	r5, r5, r6
   3b504:	sub	r6, r1, r0
   3b508:	cmp	r5, r6
   3b50c:	bhi	3b4d0 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
   3b510:	mov	r1, #32
   3b514:	mov	r2, r5
   3b518:	bl	14eec <memset@plt>
   3b51c:	ldr	r0, [r4, #20]
   3b520:	add	r1, r0, r5
   3b524:	str	r1, [r4, #20]
   3b528:	b	3b54c <flatcc_json_printer_uint32_vector_field@@Base+0x190>
   3b52c:	ldr	r0, [r4, #16]
   3b530:	cmp	r1, r0
   3b534:	bcc	3b54c <flatcc_json_printer_uint32_vector_field@@Base+0x190>
   3b538:	ldr	r2, [r4, #44]	; 0x2c
   3b53c:	mov	r0, r4
   3b540:	mov	r1, #0
   3b544:	blx	r2
   3b548:	ldr	r1, [r4, #20]
   3b54c:	ldr	r0, [r8, #4]
   3b550:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   3b554:	ldr	r1, [r4, #20]
   3b558:	subs	r9, r7, #1
   3b55c:	add	r0, r1, r0
   3b560:	str	r0, [r4, #20]
   3b564:	beq	3b688 <flatcc_json_printer_uint32_vector_field@@Base+0x2cc>
   3b568:	ldr	r0, [r4, #20]
   3b56c:	add	r7, r8, #8
   3b570:	mov	r8, #44	; 0x2c
   3b574:	mov	sl, #10
   3b578:	add	r1, r0, #1
   3b57c:	sub	r9, r9, #1
   3b580:	str	r1, [r4, #20]
   3b584:	strb	r8, [r0]
   3b588:	ldrb	r0, [r4, #25]
   3b58c:	ldr	r1, [r4, #20]
   3b590:	cmp	r0, #0
   3b594:	beq	3b64c <flatcc_json_printer_uint32_vector_field@@Base+0x290>
   3b598:	add	r0, r1, #1
   3b59c:	str	r0, [r4, #20]
   3b5a0:	strb	sl, [r1]
   3b5a4:	ldr	r0, [r4, #20]
   3b5a8:	ldrb	r2, [r4, #25]
   3b5ac:	ldr	r3, [r4, #32]
   3b5b0:	ldr	r1, [r4, #16]
   3b5b4:	mla	r6, r3, r2, r0
   3b5b8:	mul	r5, r3, r2
   3b5bc:	cmp	r6, r1
   3b5c0:	bls	3b630 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   3b5c4:	cmp	r0, r1
   3b5c8:	bcc	3b5e4 <flatcc_json_printer_uint32_vector_field@@Base+0x228>
   3b5cc:	ldr	r2, [r4, #44]	; 0x2c
   3b5d0:	mov	r0, r4
   3b5d4:	mov	r1, #0
   3b5d8:	blx	r2
   3b5dc:	ldr	r1, [r4, #16]
   3b5e0:	ldr	r0, [r4, #20]
   3b5e4:	sub	r6, r1, r0
   3b5e8:	cmp	r6, r5
   3b5ec:	bcs	3b630 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   3b5f0:	mov	r1, #32
   3b5f4:	mov	r2, r6
   3b5f8:	bl	14eec <memset@plt>
   3b5fc:	ldr	r0, [r4, #20]
   3b600:	ldr	r2, [r4, #44]	; 0x2c
   3b604:	mov	r1, #0
   3b608:	add	r0, r0, r6
   3b60c:	str	r0, [r4, #20]
   3b610:	mov	r0, r4
   3b614:	blx	r2
   3b618:	ldr	r1, [r4, #16]
   3b61c:	ldr	r0, [r4, #20]
   3b620:	sub	r5, r5, r6
   3b624:	sub	r6, r1, r0
   3b628:	cmp	r5, r6
   3b62c:	bhi	3b5f0 <flatcc_json_printer_uint32_vector_field@@Base+0x234>
   3b630:	mov	r1, #32
   3b634:	mov	r2, r5
   3b638:	bl	14eec <memset@plt>
   3b63c:	ldr	r0, [r4, #20]
   3b640:	add	r1, r0, r5
   3b644:	str	r1, [r4, #20]
   3b648:	b	3b66c <flatcc_json_printer_uint32_vector_field@@Base+0x2b0>
   3b64c:	ldr	r0, [r4, #16]
   3b650:	cmp	r1, r0
   3b654:	bcc	3b66c <flatcc_json_printer_uint32_vector_field@@Base+0x2b0>
   3b658:	ldr	r2, [r4, #44]	; 0x2c
   3b65c:	mov	r0, r4
   3b660:	mov	r1, #0
   3b664:	blx	r2
   3b668:	ldr	r1, [r4, #20]
   3b66c:	ldr	r0, [r7], #4
   3b670:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   3b674:	ldr	r1, [r4, #20]
   3b678:	cmp	r9, #0
   3b67c:	add	r0, r1, r0
   3b680:	str	r0, [r4, #20]
   3b684:	bne	3b578 <flatcc_json_printer_uint32_vector_field@@Base+0x1bc>
   3b688:	ldrb	r1, [r4, #25]
   3b68c:	ldr	r0, [r4, #20]
   3b690:	cmp	r1, #0
   3b694:	beq	3b754 <flatcc_json_printer_uint32_vector_field@@Base+0x398>
   3b698:	add	r1, r0, #1
   3b69c:	str	r1, [r4, #20]
   3b6a0:	mov	r1, #10
   3b6a4:	strb	r1, [r0]
   3b6a8:	ldr	r0, [r4, #32]
   3b6ac:	sub	r2, r0, #1
   3b6b0:	str	r2, [r4, #32]
   3b6b4:	ldrb	r3, [r4, #25]
   3b6b8:	ldr	r0, [r4, #20]
   3b6bc:	ldr	r1, [r4, #16]
   3b6c0:	mla	r7, r2, r3, r0
   3b6c4:	mul	r5, r2, r3
   3b6c8:	cmp	r7, r1
   3b6cc:	bls	3b73c <flatcc_json_printer_uint32_vector_field@@Base+0x380>
   3b6d0:	cmp	r0, r1
   3b6d4:	bcc	3b6f0 <flatcc_json_printer_uint32_vector_field@@Base+0x334>
   3b6d8:	ldr	r2, [r4, #44]	; 0x2c
   3b6dc:	mov	r0, r4
   3b6e0:	mov	r1, #0
   3b6e4:	blx	r2
   3b6e8:	ldr	r1, [r4, #16]
   3b6ec:	ldr	r0, [r4, #20]
   3b6f0:	sub	r6, r1, r0
   3b6f4:	cmp	r6, r5
   3b6f8:	bcs	3b73c <flatcc_json_printer_uint32_vector_field@@Base+0x380>
   3b6fc:	mov	r1, #32
   3b700:	mov	r2, r6
   3b704:	bl	14eec <memset@plt>
   3b708:	ldr	r0, [r4, #20]
   3b70c:	ldr	r2, [r4, #44]	; 0x2c
   3b710:	mov	r1, #0
   3b714:	add	r0, r0, r6
   3b718:	str	r0, [r4, #20]
   3b71c:	mov	r0, r4
   3b720:	blx	r2
   3b724:	ldr	r1, [r4, #16]
   3b728:	ldr	r0, [r4, #20]
   3b72c:	sub	r5, r5, r6
   3b730:	sub	r6, r1, r0
   3b734:	cmp	r5, r6
   3b738:	bhi	3b6fc <flatcc_json_printer_uint32_vector_field@@Base+0x340>
   3b73c:	mov	r1, #32
   3b740:	mov	r2, r5
   3b744:	bl	14eec <memset@plt>
   3b748:	ldr	r0, [r4, #20]
   3b74c:	add	r0, r0, r5
   3b750:	str	r0, [r4, #20]
   3b754:	add	r1, r0, #1
   3b758:	str	r1, [r4, #20]
   3b75c:	mov	r1, #93	; 0x5d
   3b760:	strb	r1, [r0]
   3b764:	sub	sp, fp, #28
   3b768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003b76c <flatcc_json_printer_uint64_vector_field@@Base>:
   3b76c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b770:	add	fp, sp, #28
   3b774:	sub	sp, sp, #4
   3b778:	mov	r4, r0
   3b77c:	mov	r0, #4
   3b780:	add	r0, r0, r2, lsl #1
   3b784:	ldr	r2, [r1, #8]
   3b788:	cmp	r0, r2
   3b78c:	bge	3bb18 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   3b790:	ldr	r2, [r1, #4]
   3b794:	add	r0, r2, r0
   3b798:	ldrh	r0, [r0]
   3b79c:	cmp	r0, #0
   3b7a0:	ldrne	r2, [r1]
   3b7a4:	addsne	r8, r2, r0
   3b7a8:	beq	3bb18 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   3b7ac:	ldr	r0, [r1, #16]
   3b7b0:	ldr	r2, [fp, #8]
   3b7b4:	add	r7, r0, #1
   3b7b8:	cmp	r0, #0
   3b7bc:	str	r7, [r1, #16]
   3b7c0:	beq	3b7d8 <flatcc_json_printer_uint64_vector_field@@Base+0x6c>
   3b7c4:	ldr	r0, [r4, #20]
   3b7c8:	add	r1, r0, #1
   3b7cc:	str	r1, [r4, #20]
   3b7d0:	mov	r1, #44	; 0x2c
   3b7d4:	strb	r1, [r0]
   3b7d8:	ldr	r0, [r8]
   3b7dc:	mov	r1, r3
   3b7e0:	ldr	r7, [r8, r0]!
   3b7e4:	mov	r0, r4
   3b7e8:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3b7ec:	ldr	r1, [r4, #32]
   3b7f0:	ldr	r0, [r4, #20]
   3b7f4:	cmp	r7, #0
   3b7f8:	add	r1, r1, #1
   3b7fc:	str	r1, [r4, #32]
   3b800:	add	r1, r0, #1
   3b804:	str	r1, [r4, #20]
   3b808:	mov	r1, #91	; 0x5b
   3b80c:	strb	r1, [r0]
   3b810:	beq	3ba3c <flatcc_json_printer_uint64_vector_field@@Base+0x2d0>
   3b814:	ldrb	r0, [r4, #25]
   3b818:	ldr	r2, [r4, #20]
   3b81c:	cmp	r0, #0
   3b820:	beq	3b8dc <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   3b824:	add	r0, r2, #1
   3b828:	str	r0, [r4, #20]
   3b82c:	mov	r0, #10
   3b830:	strb	r0, [r2]
   3b834:	ldr	r0, [r4, #20]
   3b838:	ldrb	r2, [r4, #25]
   3b83c:	ldr	r3, [r4, #32]
   3b840:	ldr	r1, [r4, #16]
   3b844:	mla	r6, r3, r2, r0
   3b848:	mul	r5, r3, r2
   3b84c:	cmp	r6, r1
   3b850:	bls	3b8c0 <flatcc_json_printer_uint64_vector_field@@Base+0x154>
   3b854:	cmp	r0, r1
   3b858:	bcc	3b874 <flatcc_json_printer_uint64_vector_field@@Base+0x108>
   3b85c:	ldr	r2, [r4, #44]	; 0x2c
   3b860:	mov	r0, r4
   3b864:	mov	r1, #0
   3b868:	blx	r2
   3b86c:	ldr	r1, [r4, #16]
   3b870:	ldr	r0, [r4, #20]
   3b874:	sub	r6, r1, r0
   3b878:	cmp	r6, r5
   3b87c:	bcs	3b8c0 <flatcc_json_printer_uint64_vector_field@@Base+0x154>
   3b880:	mov	r1, #32
   3b884:	mov	r2, r6
   3b888:	bl	14eec <memset@plt>
   3b88c:	ldr	r0, [r4, #20]
   3b890:	ldr	r2, [r4, #44]	; 0x2c
   3b894:	mov	r1, #0
   3b898:	add	r0, r0, r6
   3b89c:	str	r0, [r4, #20]
   3b8a0:	mov	r0, r4
   3b8a4:	blx	r2
   3b8a8:	ldr	r1, [r4, #16]
   3b8ac:	ldr	r0, [r4, #20]
   3b8b0:	sub	r5, r5, r6
   3b8b4:	sub	r6, r1, r0
   3b8b8:	cmp	r5, r6
   3b8bc:	bhi	3b880 <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   3b8c0:	mov	r1, #32
   3b8c4:	mov	r2, r5
   3b8c8:	bl	14eec <memset@plt>
   3b8cc:	ldr	r0, [r4, #20]
   3b8d0:	add	r2, r0, r5
   3b8d4:	str	r2, [r4, #20]
   3b8d8:	b	3b8fc <flatcc_json_printer_uint64_vector_field@@Base+0x190>
   3b8dc:	ldr	r0, [r4, #16]
   3b8e0:	cmp	r2, r0
   3b8e4:	bcc	3b8fc <flatcc_json_printer_uint64_vector_field@@Base+0x190>
   3b8e8:	ldr	r2, [r4, #44]	; 0x2c
   3b8ec:	mov	r0, r4
   3b8f0:	mov	r1, #0
   3b8f4:	blx	r2
   3b8f8:	ldr	r2, [r4, #20]
   3b8fc:	ldrd	r0, [r8, #4]
   3b900:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   3b904:	ldr	r1, [r4, #20]
   3b908:	subs	r9, r7, #1
   3b90c:	add	r0, r1, r0
   3b910:	str	r0, [r4, #20]
   3b914:	beq	3ba3c <flatcc_json_printer_uint64_vector_field@@Base+0x2d0>
   3b918:	ldr	r0, [r4, #20]
   3b91c:	add	r7, r8, #12
   3b920:	mov	r8, #44	; 0x2c
   3b924:	mov	sl, #10
   3b928:	add	r1, r0, #1
   3b92c:	sub	r9, r9, #1
   3b930:	str	r1, [r4, #20]
   3b934:	strb	r8, [r0]
   3b938:	ldrb	r0, [r4, #25]
   3b93c:	ldr	r2, [r4, #20]
   3b940:	cmp	r0, #0
   3b944:	beq	3b9fc <flatcc_json_printer_uint64_vector_field@@Base+0x290>
   3b948:	add	r0, r2, #1
   3b94c:	str	r0, [r4, #20]
   3b950:	strb	sl, [r2]
   3b954:	ldr	r0, [r4, #20]
   3b958:	ldrb	r2, [r4, #25]
   3b95c:	ldr	r3, [r4, #32]
   3b960:	ldr	r1, [r4, #16]
   3b964:	mla	r6, r3, r2, r0
   3b968:	mul	r5, r3, r2
   3b96c:	cmp	r6, r1
   3b970:	bls	3b9e0 <flatcc_json_printer_uint64_vector_field@@Base+0x274>
   3b974:	cmp	r0, r1
   3b978:	bcc	3b994 <flatcc_json_printer_uint64_vector_field@@Base+0x228>
   3b97c:	ldr	r2, [r4, #44]	; 0x2c
   3b980:	mov	r0, r4
   3b984:	mov	r1, #0
   3b988:	blx	r2
   3b98c:	ldr	r1, [r4, #16]
   3b990:	ldr	r0, [r4, #20]
   3b994:	sub	r6, r1, r0
   3b998:	cmp	r6, r5
   3b99c:	bcs	3b9e0 <flatcc_json_printer_uint64_vector_field@@Base+0x274>
   3b9a0:	mov	r1, #32
   3b9a4:	mov	r2, r6
   3b9a8:	bl	14eec <memset@plt>
   3b9ac:	ldr	r0, [r4, #20]
   3b9b0:	ldr	r2, [r4, #44]	; 0x2c
   3b9b4:	mov	r1, #0
   3b9b8:	add	r0, r0, r6
   3b9bc:	str	r0, [r4, #20]
   3b9c0:	mov	r0, r4
   3b9c4:	blx	r2
   3b9c8:	ldr	r1, [r4, #16]
   3b9cc:	ldr	r0, [r4, #20]
   3b9d0:	sub	r5, r5, r6
   3b9d4:	sub	r6, r1, r0
   3b9d8:	cmp	r5, r6
   3b9dc:	bhi	3b9a0 <flatcc_json_printer_uint64_vector_field@@Base+0x234>
   3b9e0:	mov	r1, #32
   3b9e4:	mov	r2, r5
   3b9e8:	bl	14eec <memset@plt>
   3b9ec:	ldr	r0, [r4, #20]
   3b9f0:	add	r2, r0, r5
   3b9f4:	str	r2, [r4, #20]
   3b9f8:	b	3ba1c <flatcc_json_printer_uint64_vector_field@@Base+0x2b0>
   3b9fc:	ldr	r0, [r4, #16]
   3ba00:	cmp	r2, r0
   3ba04:	bcc	3ba1c <flatcc_json_printer_uint64_vector_field@@Base+0x2b0>
   3ba08:	ldr	r2, [r4, #44]	; 0x2c
   3ba0c:	mov	r0, r4
   3ba10:	mov	r1, #0
   3ba14:	blx	r2
   3ba18:	ldr	r2, [r4, #20]
   3ba1c:	ldrd	r0, [r7]
   3ba20:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   3ba24:	ldr	r1, [r4, #20]
   3ba28:	add	r7, r7, #8
   3ba2c:	cmp	r9, #0
   3ba30:	add	r0, r1, r0
   3ba34:	str	r0, [r4, #20]
   3ba38:	bne	3b928 <flatcc_json_printer_uint64_vector_field@@Base+0x1bc>
   3ba3c:	ldrb	r1, [r4, #25]
   3ba40:	ldr	r0, [r4, #20]
   3ba44:	cmp	r1, #0
   3ba48:	beq	3bb08 <flatcc_json_printer_uint64_vector_field@@Base+0x39c>
   3ba4c:	add	r1, r0, #1
   3ba50:	str	r1, [r4, #20]
   3ba54:	mov	r1, #10
   3ba58:	strb	r1, [r0]
   3ba5c:	ldr	r0, [r4, #32]
   3ba60:	sub	r2, r0, #1
   3ba64:	str	r2, [r4, #32]
   3ba68:	ldrb	r3, [r4, #25]
   3ba6c:	ldr	r0, [r4, #20]
   3ba70:	ldr	r1, [r4, #16]
   3ba74:	mla	r7, r2, r3, r0
   3ba78:	mul	r5, r2, r3
   3ba7c:	cmp	r7, r1
   3ba80:	bls	3baf0 <flatcc_json_printer_uint64_vector_field@@Base+0x384>
   3ba84:	cmp	r0, r1
   3ba88:	bcc	3baa4 <flatcc_json_printer_uint64_vector_field@@Base+0x338>
   3ba8c:	ldr	r2, [r4, #44]	; 0x2c
   3ba90:	mov	r0, r4
   3ba94:	mov	r1, #0
   3ba98:	blx	r2
   3ba9c:	ldr	r1, [r4, #16]
   3baa0:	ldr	r0, [r4, #20]
   3baa4:	sub	r6, r1, r0
   3baa8:	cmp	r6, r5
   3baac:	bcs	3baf0 <flatcc_json_printer_uint64_vector_field@@Base+0x384>
   3bab0:	mov	r1, #32
   3bab4:	mov	r2, r6
   3bab8:	bl	14eec <memset@plt>
   3babc:	ldr	r0, [r4, #20]
   3bac0:	ldr	r2, [r4, #44]	; 0x2c
   3bac4:	mov	r1, #0
   3bac8:	add	r0, r0, r6
   3bacc:	str	r0, [r4, #20]
   3bad0:	mov	r0, r4
   3bad4:	blx	r2
   3bad8:	ldr	r1, [r4, #16]
   3badc:	ldr	r0, [r4, #20]
   3bae0:	sub	r5, r5, r6
   3bae4:	sub	r6, r1, r0
   3bae8:	cmp	r5, r6
   3baec:	bhi	3bab0 <flatcc_json_printer_uint64_vector_field@@Base+0x344>
   3baf0:	mov	r1, #32
   3baf4:	mov	r2, r5
   3baf8:	bl	14eec <memset@plt>
   3bafc:	ldr	r0, [r4, #20]
   3bb00:	add	r0, r0, r5
   3bb04:	str	r0, [r4, #20]
   3bb08:	add	r1, r0, #1
   3bb0c:	str	r1, [r4, #20]
   3bb10:	mov	r1, #93	; 0x5d
   3bb14:	strb	r1, [r0]
   3bb18:	sub	sp, fp, #28
   3bb1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003bb20 <flatcc_json_printer_int8_vector_field@@Base>:
   3bb20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bb24:	add	fp, sp, #28
   3bb28:	sub	sp, sp, #4
   3bb2c:	mov	r4, r0
   3bb30:	mov	r0, #4
   3bb34:	add	r0, r0, r2, lsl #1
   3bb38:	ldr	r2, [r1, #8]
   3bb3c:	cmp	r0, r2
   3bb40:	bge	3bf0c <flatcc_json_printer_int8_vector_field@@Base+0x3ec>
   3bb44:	ldr	r2, [r1, #4]
   3bb48:	add	r0, r2, r0
   3bb4c:	ldrh	r0, [r0]
   3bb50:	cmp	r0, #0
   3bb54:	ldrne	r2, [r1]
   3bb58:	addsne	r8, r2, r0
   3bb5c:	beq	3bf0c <flatcc_json_printer_int8_vector_field@@Base+0x3ec>
   3bb60:	ldr	r0, [r1, #16]
   3bb64:	ldr	r2, [fp, #8]
   3bb68:	add	r7, r0, #1
   3bb6c:	cmp	r0, #0
   3bb70:	str	r7, [r1, #16]
   3bb74:	beq	3bb8c <flatcc_json_printer_int8_vector_field@@Base+0x6c>
   3bb78:	ldr	r0, [r4, #20]
   3bb7c:	add	r1, r0, #1
   3bb80:	str	r1, [r4, #20]
   3bb84:	mov	r1, #44	; 0x2c
   3bb88:	strb	r1, [r0]
   3bb8c:	ldr	r0, [r8]
   3bb90:	mov	r1, r3
   3bb94:	ldr	r7, [r8, r0]!
   3bb98:	mov	r0, r4
   3bb9c:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3bba0:	ldr	r1, [r4, #32]
   3bba4:	ldr	r0, [r4, #20]
   3bba8:	cmp	r7, #0
   3bbac:	add	r1, r1, #1
   3bbb0:	str	r1, [r4, #32]
   3bbb4:	add	r1, r0, #1
   3bbb8:	str	r1, [r4, #20]
   3bbbc:	mov	r1, #91	; 0x5b
   3bbc0:	strb	r1, [r0]
   3bbc4:	beq	3be30 <flatcc_json_printer_int8_vector_field@@Base+0x310>
   3bbc8:	ldrb	r0, [r4, #25]
   3bbcc:	ldr	r1, [r4, #20]
   3bbd0:	cmp	r0, #0
   3bbd4:	beq	3bc90 <flatcc_json_printer_int8_vector_field@@Base+0x170>
   3bbd8:	add	r0, r1, #1
   3bbdc:	str	r0, [r4, #20]
   3bbe0:	mov	r0, #10
   3bbe4:	strb	r0, [r1]
   3bbe8:	ldr	r0, [r4, #20]
   3bbec:	ldrb	r2, [r4, #25]
   3bbf0:	ldr	r3, [r4, #32]
   3bbf4:	ldr	r1, [r4, #16]
   3bbf8:	mla	r6, r3, r2, r0
   3bbfc:	mul	r5, r3, r2
   3bc00:	cmp	r6, r1
   3bc04:	bls	3bc74 <flatcc_json_printer_int8_vector_field@@Base+0x154>
   3bc08:	cmp	r0, r1
   3bc0c:	bcc	3bc28 <flatcc_json_printer_int8_vector_field@@Base+0x108>
   3bc10:	ldr	r2, [r4, #44]	; 0x2c
   3bc14:	mov	r0, r4
   3bc18:	mov	r1, #0
   3bc1c:	blx	r2
   3bc20:	ldr	r1, [r4, #16]
   3bc24:	ldr	r0, [r4, #20]
   3bc28:	sub	r6, r1, r0
   3bc2c:	cmp	r6, r5
   3bc30:	bcs	3bc74 <flatcc_json_printer_int8_vector_field@@Base+0x154>
   3bc34:	mov	r1, #32
   3bc38:	mov	r2, r6
   3bc3c:	bl	14eec <memset@plt>
   3bc40:	ldr	r0, [r4, #20]
   3bc44:	ldr	r2, [r4, #44]	; 0x2c
   3bc48:	mov	r1, #0
   3bc4c:	add	r0, r0, r6
   3bc50:	str	r0, [r4, #20]
   3bc54:	mov	r0, r4
   3bc58:	blx	r2
   3bc5c:	ldr	r1, [r4, #16]
   3bc60:	ldr	r0, [r4, #20]
   3bc64:	sub	r5, r5, r6
   3bc68:	sub	r6, r1, r0
   3bc6c:	cmp	r5, r6
   3bc70:	bhi	3bc34 <flatcc_json_printer_int8_vector_field@@Base+0x114>
   3bc74:	mov	r1, #32
   3bc78:	mov	r2, r5
   3bc7c:	bl	14eec <memset@plt>
   3bc80:	ldr	r0, [r4, #20]
   3bc84:	add	r1, r0, r5
   3bc88:	str	r1, [r4, #20]
   3bc8c:	b	3bcb0 <flatcc_json_printer_int8_vector_field@@Base+0x190>
   3bc90:	ldr	r0, [r4, #16]
   3bc94:	cmp	r1, r0
   3bc98:	bcc	3bcb0 <flatcc_json_printer_int8_vector_field@@Base+0x190>
   3bc9c:	ldr	r2, [r4, #44]	; 0x2c
   3bca0:	mov	r0, r4
   3bca4:	mov	r1, #0
   3bca8:	blx	r2
   3bcac:	ldr	r1, [r4, #20]
   3bcb0:	ldrb	r0, [r8, #4]
   3bcb4:	lsr	r5, r0, #7
   3bcb8:	sxtb	r0, r0
   3bcbc:	cmn	r0, #1
   3bcc0:	rsble	r0, r0, #0
   3bcc4:	movle	r2, #45	; 0x2d
   3bcc8:	uxtb	r0, r0
   3bccc:	strble	r2, [r1], #1
   3bcd0:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   3bcd4:	ldr	r1, [r4, #20]
   3bcd8:	add	r0, r0, r5
   3bcdc:	subs	r9, r7, #1
   3bce0:	add	r0, r1, r0
   3bce4:	str	r0, [r4, #20]
   3bce8:	beq	3be30 <flatcc_json_printer_int8_vector_field@@Base+0x310>
   3bcec:	ldr	r0, [r4, #20]
   3bcf0:	add	r7, r8, #5
   3bcf4:	mov	r8, #44	; 0x2c
   3bcf8:	mov	sl, #10
   3bcfc:	add	r1, r0, #1
   3bd00:	str	r1, [r4, #20]
   3bd04:	strb	r8, [r0]
   3bd08:	ldrb	r0, [r4, #25]
   3bd0c:	ldr	r1, [r4, #20]
   3bd10:	cmp	r0, #0
   3bd14:	beq	3bdcc <flatcc_json_printer_int8_vector_field@@Base+0x2ac>
   3bd18:	add	r0, r1, #1
   3bd1c:	str	r0, [r4, #20]
   3bd20:	strb	sl, [r1]
   3bd24:	ldr	r0, [r4, #20]
   3bd28:	ldrb	r2, [r4, #25]
   3bd2c:	ldr	r3, [r4, #32]
   3bd30:	ldr	r1, [r4, #16]
   3bd34:	mla	r6, r3, r2, r0
   3bd38:	mul	r5, r3, r2
   3bd3c:	cmp	r6, r1
   3bd40:	bls	3bdb0 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   3bd44:	cmp	r0, r1
   3bd48:	bcc	3bd64 <flatcc_json_printer_int8_vector_field@@Base+0x244>
   3bd4c:	ldr	r2, [r4, #44]	; 0x2c
   3bd50:	mov	r0, r4
   3bd54:	mov	r1, #0
   3bd58:	blx	r2
   3bd5c:	ldr	r1, [r4, #16]
   3bd60:	ldr	r0, [r4, #20]
   3bd64:	sub	r6, r1, r0
   3bd68:	cmp	r6, r5
   3bd6c:	bcs	3bdb0 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   3bd70:	mov	r1, #32
   3bd74:	mov	r2, r6
   3bd78:	bl	14eec <memset@plt>
   3bd7c:	ldr	r0, [r4, #20]
   3bd80:	ldr	r2, [r4, #44]	; 0x2c
   3bd84:	mov	r1, #0
   3bd88:	add	r0, r0, r6
   3bd8c:	str	r0, [r4, #20]
   3bd90:	mov	r0, r4
   3bd94:	blx	r2
   3bd98:	ldr	r1, [r4, #16]
   3bd9c:	ldr	r0, [r4, #20]
   3bda0:	sub	r5, r5, r6
   3bda4:	sub	r6, r1, r0
   3bda8:	cmp	r5, r6
   3bdac:	bhi	3bd70 <flatcc_json_printer_int8_vector_field@@Base+0x250>
   3bdb0:	mov	r1, #32
   3bdb4:	mov	r2, r5
   3bdb8:	bl	14eec <memset@plt>
   3bdbc:	ldr	r0, [r4, #20]
   3bdc0:	add	r1, r0, r5
   3bdc4:	str	r1, [r4, #20]
   3bdc8:	b	3bdec <flatcc_json_printer_int8_vector_field@@Base+0x2cc>
   3bdcc:	ldr	r0, [r4, #16]
   3bdd0:	cmp	r1, r0
   3bdd4:	bcc	3bdec <flatcc_json_printer_int8_vector_field@@Base+0x2cc>
   3bdd8:	ldr	r2, [r4, #44]	; 0x2c
   3bddc:	mov	r0, r4
   3bde0:	mov	r1, #0
   3bde4:	blx	r2
   3bde8:	ldr	r1, [r4, #20]
   3bdec:	ldrb	r0, [r7]
   3bdf0:	sub	r9, r9, #1
   3bdf4:	lsr	r5, r0, #7
   3bdf8:	sxtb	r0, r0
   3bdfc:	cmn	r0, #1
   3be00:	rsble	r0, r0, #0
   3be04:	movle	r2, #45	; 0x2d
   3be08:	uxtb	r0, r0
   3be0c:	strble	r2, [r1], #1
   3be10:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   3be14:	ldr	r1, [r4, #20]
   3be18:	add	r0, r0, r5
   3be1c:	add	r7, r7, #1
   3be20:	cmp	r9, #0
   3be24:	add	r0, r1, r0
   3be28:	str	r0, [r4, #20]
   3be2c:	bne	3bcfc <flatcc_json_printer_int8_vector_field@@Base+0x1dc>
   3be30:	ldrb	r1, [r4, #25]
   3be34:	ldr	r0, [r4, #20]
   3be38:	cmp	r1, #0
   3be3c:	beq	3befc <flatcc_json_printer_int8_vector_field@@Base+0x3dc>
   3be40:	add	r1, r0, #1
   3be44:	str	r1, [r4, #20]
   3be48:	mov	r1, #10
   3be4c:	strb	r1, [r0]
   3be50:	ldr	r0, [r4, #32]
   3be54:	sub	r2, r0, #1
   3be58:	str	r2, [r4, #32]
   3be5c:	ldrb	r3, [r4, #25]
   3be60:	ldr	r0, [r4, #20]
   3be64:	ldr	r1, [r4, #16]
   3be68:	mla	r7, r2, r3, r0
   3be6c:	mul	r5, r2, r3
   3be70:	cmp	r7, r1
   3be74:	bls	3bee4 <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   3be78:	cmp	r0, r1
   3be7c:	bcc	3be98 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   3be80:	ldr	r2, [r4, #44]	; 0x2c
   3be84:	mov	r0, r4
   3be88:	mov	r1, #0
   3be8c:	blx	r2
   3be90:	ldr	r1, [r4, #16]
   3be94:	ldr	r0, [r4, #20]
   3be98:	sub	r6, r1, r0
   3be9c:	cmp	r6, r5
   3bea0:	bcs	3bee4 <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   3bea4:	mov	r1, #32
   3bea8:	mov	r2, r6
   3beac:	bl	14eec <memset@plt>
   3beb0:	ldr	r0, [r4, #20]
   3beb4:	ldr	r2, [r4, #44]	; 0x2c
   3beb8:	mov	r1, #0
   3bebc:	add	r0, r0, r6
   3bec0:	str	r0, [r4, #20]
   3bec4:	mov	r0, r4
   3bec8:	blx	r2
   3becc:	ldr	r1, [r4, #16]
   3bed0:	ldr	r0, [r4, #20]
   3bed4:	sub	r5, r5, r6
   3bed8:	sub	r6, r1, r0
   3bedc:	cmp	r5, r6
   3bee0:	bhi	3bea4 <flatcc_json_printer_int8_vector_field@@Base+0x384>
   3bee4:	mov	r1, #32
   3bee8:	mov	r2, r5
   3beec:	bl	14eec <memset@plt>
   3bef0:	ldr	r0, [r4, #20]
   3bef4:	add	r0, r0, r5
   3bef8:	str	r0, [r4, #20]
   3befc:	add	r1, r0, #1
   3bf00:	str	r1, [r4, #20]
   3bf04:	mov	r1, #93	; 0x5d
   3bf08:	strb	r1, [r0]
   3bf0c:	sub	sp, fp, #28
   3bf10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003bf14 <flatcc_json_printer_int16_vector_field@@Base>:
   3bf14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bf18:	add	fp, sp, #28
   3bf1c:	sub	sp, sp, #4
   3bf20:	mov	r4, r0
   3bf24:	mov	r0, #4
   3bf28:	add	r0, r0, r2, lsl #1
   3bf2c:	ldr	r2, [r1, #8]
   3bf30:	cmp	r0, r2
   3bf34:	bge	3c300 <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   3bf38:	ldr	r2, [r1, #4]
   3bf3c:	add	r0, r2, r0
   3bf40:	ldrh	r0, [r0]
   3bf44:	cmp	r0, #0
   3bf48:	ldrne	r2, [r1]
   3bf4c:	addsne	r8, r2, r0
   3bf50:	beq	3c300 <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   3bf54:	ldr	r0, [r1, #16]
   3bf58:	ldr	r2, [fp, #8]
   3bf5c:	add	r7, r0, #1
   3bf60:	cmp	r0, #0
   3bf64:	str	r7, [r1, #16]
   3bf68:	beq	3bf80 <flatcc_json_printer_int16_vector_field@@Base+0x6c>
   3bf6c:	ldr	r0, [r4, #20]
   3bf70:	add	r1, r0, #1
   3bf74:	str	r1, [r4, #20]
   3bf78:	mov	r1, #44	; 0x2c
   3bf7c:	strb	r1, [r0]
   3bf80:	ldr	r0, [r8]
   3bf84:	mov	r1, r3
   3bf88:	ldr	r7, [r8, r0]!
   3bf8c:	mov	r0, r4
   3bf90:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3bf94:	ldr	r1, [r4, #32]
   3bf98:	ldr	r0, [r4, #20]
   3bf9c:	cmp	r7, #0
   3bfa0:	add	r1, r1, #1
   3bfa4:	str	r1, [r4, #32]
   3bfa8:	add	r1, r0, #1
   3bfac:	str	r1, [r4, #20]
   3bfb0:	mov	r1, #91	; 0x5b
   3bfb4:	strb	r1, [r0]
   3bfb8:	beq	3c224 <flatcc_json_printer_int16_vector_field@@Base+0x310>
   3bfbc:	ldrb	r0, [r4, #25]
   3bfc0:	ldr	r1, [r4, #20]
   3bfc4:	cmp	r0, #0
   3bfc8:	beq	3c084 <flatcc_json_printer_int16_vector_field@@Base+0x170>
   3bfcc:	add	r0, r1, #1
   3bfd0:	str	r0, [r4, #20]
   3bfd4:	mov	r0, #10
   3bfd8:	strb	r0, [r1]
   3bfdc:	ldr	r0, [r4, #20]
   3bfe0:	ldrb	r2, [r4, #25]
   3bfe4:	ldr	r3, [r4, #32]
   3bfe8:	ldr	r1, [r4, #16]
   3bfec:	mla	r6, r3, r2, r0
   3bff0:	mul	r5, r3, r2
   3bff4:	cmp	r6, r1
   3bff8:	bls	3c068 <flatcc_json_printer_int16_vector_field@@Base+0x154>
   3bffc:	cmp	r0, r1
   3c000:	bcc	3c01c <flatcc_json_printer_int16_vector_field@@Base+0x108>
   3c004:	ldr	r2, [r4, #44]	; 0x2c
   3c008:	mov	r0, r4
   3c00c:	mov	r1, #0
   3c010:	blx	r2
   3c014:	ldr	r1, [r4, #16]
   3c018:	ldr	r0, [r4, #20]
   3c01c:	sub	r6, r1, r0
   3c020:	cmp	r6, r5
   3c024:	bcs	3c068 <flatcc_json_printer_int16_vector_field@@Base+0x154>
   3c028:	mov	r1, #32
   3c02c:	mov	r2, r6
   3c030:	bl	14eec <memset@plt>
   3c034:	ldr	r0, [r4, #20]
   3c038:	ldr	r2, [r4, #44]	; 0x2c
   3c03c:	mov	r1, #0
   3c040:	add	r0, r0, r6
   3c044:	str	r0, [r4, #20]
   3c048:	mov	r0, r4
   3c04c:	blx	r2
   3c050:	ldr	r1, [r4, #16]
   3c054:	ldr	r0, [r4, #20]
   3c058:	sub	r5, r5, r6
   3c05c:	sub	r6, r1, r0
   3c060:	cmp	r5, r6
   3c064:	bhi	3c028 <flatcc_json_printer_int16_vector_field@@Base+0x114>
   3c068:	mov	r1, #32
   3c06c:	mov	r2, r5
   3c070:	bl	14eec <memset@plt>
   3c074:	ldr	r0, [r4, #20]
   3c078:	add	r1, r0, r5
   3c07c:	str	r1, [r4, #20]
   3c080:	b	3c0a4 <flatcc_json_printer_int16_vector_field@@Base+0x190>
   3c084:	ldr	r0, [r4, #16]
   3c088:	cmp	r1, r0
   3c08c:	bcc	3c0a4 <flatcc_json_printer_int16_vector_field@@Base+0x190>
   3c090:	ldr	r2, [r4, #44]	; 0x2c
   3c094:	mov	r0, r4
   3c098:	mov	r1, #0
   3c09c:	blx	r2
   3c0a0:	ldr	r1, [r4, #20]
   3c0a4:	ldrh	r0, [r8, #4]
   3c0a8:	lsr	r5, r0, #15
   3c0ac:	sxth	r0, r0
   3c0b0:	cmn	r0, #1
   3c0b4:	rsble	r0, r0, #0
   3c0b8:	movle	r2, #45	; 0x2d
   3c0bc:	uxth	r0, r0
   3c0c0:	strble	r2, [r1], #1
   3c0c4:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   3c0c8:	ldr	r1, [r4, #20]
   3c0cc:	add	r0, r0, r5
   3c0d0:	subs	r9, r7, #1
   3c0d4:	add	r0, r1, r0
   3c0d8:	str	r0, [r4, #20]
   3c0dc:	beq	3c224 <flatcc_json_printer_int16_vector_field@@Base+0x310>
   3c0e0:	ldr	r0, [r4, #20]
   3c0e4:	add	r7, r8, #6
   3c0e8:	mov	r8, #44	; 0x2c
   3c0ec:	mov	sl, #10
   3c0f0:	add	r1, r0, #1
   3c0f4:	str	r1, [r4, #20]
   3c0f8:	strb	r8, [r0]
   3c0fc:	ldrb	r0, [r4, #25]
   3c100:	ldr	r1, [r4, #20]
   3c104:	cmp	r0, #0
   3c108:	beq	3c1c0 <flatcc_json_printer_int16_vector_field@@Base+0x2ac>
   3c10c:	add	r0, r1, #1
   3c110:	str	r0, [r4, #20]
   3c114:	strb	sl, [r1]
   3c118:	ldr	r0, [r4, #20]
   3c11c:	ldrb	r2, [r4, #25]
   3c120:	ldr	r3, [r4, #32]
   3c124:	ldr	r1, [r4, #16]
   3c128:	mla	r6, r3, r2, r0
   3c12c:	mul	r5, r3, r2
   3c130:	cmp	r6, r1
   3c134:	bls	3c1a4 <flatcc_json_printer_int16_vector_field@@Base+0x290>
   3c138:	cmp	r0, r1
   3c13c:	bcc	3c158 <flatcc_json_printer_int16_vector_field@@Base+0x244>
   3c140:	ldr	r2, [r4, #44]	; 0x2c
   3c144:	mov	r0, r4
   3c148:	mov	r1, #0
   3c14c:	blx	r2
   3c150:	ldr	r1, [r4, #16]
   3c154:	ldr	r0, [r4, #20]
   3c158:	sub	r6, r1, r0
   3c15c:	cmp	r6, r5
   3c160:	bcs	3c1a4 <flatcc_json_printer_int16_vector_field@@Base+0x290>
   3c164:	mov	r1, #32
   3c168:	mov	r2, r6
   3c16c:	bl	14eec <memset@plt>
   3c170:	ldr	r0, [r4, #20]
   3c174:	ldr	r2, [r4, #44]	; 0x2c
   3c178:	mov	r1, #0
   3c17c:	add	r0, r0, r6
   3c180:	str	r0, [r4, #20]
   3c184:	mov	r0, r4
   3c188:	blx	r2
   3c18c:	ldr	r1, [r4, #16]
   3c190:	ldr	r0, [r4, #20]
   3c194:	sub	r5, r5, r6
   3c198:	sub	r6, r1, r0
   3c19c:	cmp	r5, r6
   3c1a0:	bhi	3c164 <flatcc_json_printer_int16_vector_field@@Base+0x250>
   3c1a4:	mov	r1, #32
   3c1a8:	mov	r2, r5
   3c1ac:	bl	14eec <memset@plt>
   3c1b0:	ldr	r0, [r4, #20]
   3c1b4:	add	r1, r0, r5
   3c1b8:	str	r1, [r4, #20]
   3c1bc:	b	3c1e0 <flatcc_json_printer_int16_vector_field@@Base+0x2cc>
   3c1c0:	ldr	r0, [r4, #16]
   3c1c4:	cmp	r1, r0
   3c1c8:	bcc	3c1e0 <flatcc_json_printer_int16_vector_field@@Base+0x2cc>
   3c1cc:	ldr	r2, [r4, #44]	; 0x2c
   3c1d0:	mov	r0, r4
   3c1d4:	mov	r1, #0
   3c1d8:	blx	r2
   3c1dc:	ldr	r1, [r4, #20]
   3c1e0:	ldrh	r0, [r7]
   3c1e4:	sub	r9, r9, #1
   3c1e8:	lsr	r5, r0, #15
   3c1ec:	sxth	r0, r0
   3c1f0:	cmn	r0, #1
   3c1f4:	rsble	r0, r0, #0
   3c1f8:	movle	r2, #45	; 0x2d
   3c1fc:	uxth	r0, r0
   3c200:	strble	r2, [r1], #1
   3c204:	bl	37ab0 <flatcc_json_printer_uint16@@Base+0x2c>
   3c208:	ldr	r1, [r4, #20]
   3c20c:	add	r0, r0, r5
   3c210:	add	r7, r7, #2
   3c214:	cmp	r9, #0
   3c218:	add	r0, r1, r0
   3c21c:	str	r0, [r4, #20]
   3c220:	bne	3c0f0 <flatcc_json_printer_int16_vector_field@@Base+0x1dc>
   3c224:	ldrb	r1, [r4, #25]
   3c228:	ldr	r0, [r4, #20]
   3c22c:	cmp	r1, #0
   3c230:	beq	3c2f0 <flatcc_json_printer_int16_vector_field@@Base+0x3dc>
   3c234:	add	r1, r0, #1
   3c238:	str	r1, [r4, #20]
   3c23c:	mov	r1, #10
   3c240:	strb	r1, [r0]
   3c244:	ldr	r0, [r4, #32]
   3c248:	sub	r2, r0, #1
   3c24c:	str	r2, [r4, #32]
   3c250:	ldrb	r3, [r4, #25]
   3c254:	ldr	r0, [r4, #20]
   3c258:	ldr	r1, [r4, #16]
   3c25c:	mla	r7, r2, r3, r0
   3c260:	mul	r5, r2, r3
   3c264:	cmp	r7, r1
   3c268:	bls	3c2d8 <flatcc_json_printer_int16_vector_field@@Base+0x3c4>
   3c26c:	cmp	r0, r1
   3c270:	bcc	3c28c <flatcc_json_printer_int16_vector_field@@Base+0x378>
   3c274:	ldr	r2, [r4, #44]	; 0x2c
   3c278:	mov	r0, r4
   3c27c:	mov	r1, #0
   3c280:	blx	r2
   3c284:	ldr	r1, [r4, #16]
   3c288:	ldr	r0, [r4, #20]
   3c28c:	sub	r6, r1, r0
   3c290:	cmp	r6, r5
   3c294:	bcs	3c2d8 <flatcc_json_printer_int16_vector_field@@Base+0x3c4>
   3c298:	mov	r1, #32
   3c29c:	mov	r2, r6
   3c2a0:	bl	14eec <memset@plt>
   3c2a4:	ldr	r0, [r4, #20]
   3c2a8:	ldr	r2, [r4, #44]	; 0x2c
   3c2ac:	mov	r1, #0
   3c2b0:	add	r0, r0, r6
   3c2b4:	str	r0, [r4, #20]
   3c2b8:	mov	r0, r4
   3c2bc:	blx	r2
   3c2c0:	ldr	r1, [r4, #16]
   3c2c4:	ldr	r0, [r4, #20]
   3c2c8:	sub	r5, r5, r6
   3c2cc:	sub	r6, r1, r0
   3c2d0:	cmp	r5, r6
   3c2d4:	bhi	3c298 <flatcc_json_printer_int16_vector_field@@Base+0x384>
   3c2d8:	mov	r1, #32
   3c2dc:	mov	r2, r5
   3c2e0:	bl	14eec <memset@plt>
   3c2e4:	ldr	r0, [r4, #20]
   3c2e8:	add	r0, r0, r5
   3c2ec:	str	r0, [r4, #20]
   3c2f0:	add	r1, r0, #1
   3c2f4:	str	r1, [r4, #20]
   3c2f8:	mov	r1, #93	; 0x5d
   3c2fc:	strb	r1, [r0]
   3c300:	sub	sp, fp, #28
   3c304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c308 <flatcc_json_printer_int32_vector_field@@Base>:
   3c308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c30c:	add	fp, sp, #28
   3c310:	sub	sp, sp, #4
   3c314:	mov	r4, r0
   3c318:	mov	r0, #4
   3c31c:	add	r0, r0, r2, lsl #1
   3c320:	ldr	r2, [r1, #8]
   3c324:	cmp	r0, r2
   3c328:	bge	3c6e4 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   3c32c:	ldr	r2, [r1, #4]
   3c330:	add	r0, r2, r0
   3c334:	ldrh	r0, [r0]
   3c338:	cmp	r0, #0
   3c33c:	ldrne	r2, [r1]
   3c340:	addsne	r8, r2, r0
   3c344:	beq	3c6e4 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   3c348:	ldr	r0, [r1, #16]
   3c34c:	ldr	r2, [fp, #8]
   3c350:	add	r7, r0, #1
   3c354:	cmp	r0, #0
   3c358:	str	r7, [r1, #16]
   3c35c:	beq	3c374 <flatcc_json_printer_int32_vector_field@@Base+0x6c>
   3c360:	ldr	r0, [r4, #20]
   3c364:	add	r1, r0, #1
   3c368:	str	r1, [r4, #20]
   3c36c:	mov	r1, #44	; 0x2c
   3c370:	strb	r1, [r0]
   3c374:	ldr	r0, [r8]
   3c378:	mov	r1, r3
   3c37c:	ldr	r7, [r8, r0]!
   3c380:	mov	r0, r4
   3c384:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3c388:	ldr	r1, [r4, #32]
   3c38c:	ldr	r0, [r4, #20]
   3c390:	cmp	r7, #0
   3c394:	add	r1, r1, #1
   3c398:	str	r1, [r4, #32]
   3c39c:	add	r1, r0, #1
   3c3a0:	str	r1, [r4, #20]
   3c3a4:	mov	r1, #91	; 0x5b
   3c3a8:	strb	r1, [r0]
   3c3ac:	beq	3c608 <flatcc_json_printer_int32_vector_field@@Base+0x300>
   3c3b0:	ldrb	r0, [r4, #25]
   3c3b4:	ldr	r1, [r4, #20]
   3c3b8:	cmp	r0, #0
   3c3bc:	beq	3c478 <flatcc_json_printer_int32_vector_field@@Base+0x170>
   3c3c0:	add	r0, r1, #1
   3c3c4:	str	r0, [r4, #20]
   3c3c8:	mov	r0, #10
   3c3cc:	strb	r0, [r1]
   3c3d0:	ldr	r0, [r4, #20]
   3c3d4:	ldrb	r2, [r4, #25]
   3c3d8:	ldr	r3, [r4, #32]
   3c3dc:	ldr	r1, [r4, #16]
   3c3e0:	mla	r6, r3, r2, r0
   3c3e4:	mul	r5, r3, r2
   3c3e8:	cmp	r6, r1
   3c3ec:	bls	3c45c <flatcc_json_printer_int32_vector_field@@Base+0x154>
   3c3f0:	cmp	r0, r1
   3c3f4:	bcc	3c410 <flatcc_json_printer_int32_vector_field@@Base+0x108>
   3c3f8:	ldr	r2, [r4, #44]	; 0x2c
   3c3fc:	mov	r0, r4
   3c400:	mov	r1, #0
   3c404:	blx	r2
   3c408:	ldr	r1, [r4, #16]
   3c40c:	ldr	r0, [r4, #20]
   3c410:	sub	r6, r1, r0
   3c414:	cmp	r6, r5
   3c418:	bcs	3c45c <flatcc_json_printer_int32_vector_field@@Base+0x154>
   3c41c:	mov	r1, #32
   3c420:	mov	r2, r6
   3c424:	bl	14eec <memset@plt>
   3c428:	ldr	r0, [r4, #20]
   3c42c:	ldr	r2, [r4, #44]	; 0x2c
   3c430:	mov	r1, #0
   3c434:	add	r0, r0, r6
   3c438:	str	r0, [r4, #20]
   3c43c:	mov	r0, r4
   3c440:	blx	r2
   3c444:	ldr	r1, [r4, #16]
   3c448:	ldr	r0, [r4, #20]
   3c44c:	sub	r5, r5, r6
   3c450:	sub	r6, r1, r0
   3c454:	cmp	r5, r6
   3c458:	bhi	3c41c <flatcc_json_printer_int32_vector_field@@Base+0x114>
   3c45c:	mov	r1, #32
   3c460:	mov	r2, r5
   3c464:	bl	14eec <memset@plt>
   3c468:	ldr	r0, [r4, #20]
   3c46c:	add	r1, r0, r5
   3c470:	str	r1, [r4, #20]
   3c474:	b	3c498 <flatcc_json_printer_int32_vector_field@@Base+0x190>
   3c478:	ldr	r0, [r4, #16]
   3c47c:	cmp	r1, r0
   3c480:	bcc	3c498 <flatcc_json_printer_int32_vector_field@@Base+0x190>
   3c484:	ldr	r2, [r4, #44]	; 0x2c
   3c488:	mov	r0, r4
   3c48c:	mov	r1, #0
   3c490:	blx	r2
   3c494:	ldr	r1, [r4, #20]
   3c498:	ldr	r0, [r8, #4]
   3c49c:	cmn	r0, #1
   3c4a0:	lsr	r5, r0, #31
   3c4a4:	movle	r2, #45	; 0x2d
   3c4a8:	rsble	r0, r0, #0
   3c4ac:	strble	r2, [r1], #1
   3c4b0:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   3c4b4:	ldr	r1, [r4, #20]
   3c4b8:	add	r0, r0, r5
   3c4bc:	subs	r9, r7, #1
   3c4c0:	add	r0, r1, r0
   3c4c4:	str	r0, [r4, #20]
   3c4c8:	beq	3c608 <flatcc_json_printer_int32_vector_field@@Base+0x300>
   3c4cc:	ldr	r0, [r4, #20]
   3c4d0:	add	r7, r8, #8
   3c4d4:	mov	r8, #44	; 0x2c
   3c4d8:	mov	sl, #10
   3c4dc:	add	r1, r0, #1
   3c4e0:	str	r1, [r4, #20]
   3c4e4:	strb	r8, [r0]
   3c4e8:	ldrb	r0, [r4, #25]
   3c4ec:	ldr	r1, [r4, #20]
   3c4f0:	cmp	r0, #0
   3c4f4:	beq	3c5ac <flatcc_json_printer_int32_vector_field@@Base+0x2a4>
   3c4f8:	add	r0, r1, #1
   3c4fc:	str	r0, [r4, #20]
   3c500:	strb	sl, [r1]
   3c504:	ldr	r0, [r4, #20]
   3c508:	ldrb	r2, [r4, #25]
   3c50c:	ldr	r3, [r4, #32]
   3c510:	ldr	r1, [r4, #16]
   3c514:	mla	r6, r3, r2, r0
   3c518:	mul	r5, r3, r2
   3c51c:	cmp	r6, r1
   3c520:	bls	3c590 <flatcc_json_printer_int32_vector_field@@Base+0x288>
   3c524:	cmp	r0, r1
   3c528:	bcc	3c544 <flatcc_json_printer_int32_vector_field@@Base+0x23c>
   3c52c:	ldr	r2, [r4, #44]	; 0x2c
   3c530:	mov	r0, r4
   3c534:	mov	r1, #0
   3c538:	blx	r2
   3c53c:	ldr	r1, [r4, #16]
   3c540:	ldr	r0, [r4, #20]
   3c544:	sub	r6, r1, r0
   3c548:	cmp	r6, r5
   3c54c:	bcs	3c590 <flatcc_json_printer_int32_vector_field@@Base+0x288>
   3c550:	mov	r1, #32
   3c554:	mov	r2, r6
   3c558:	bl	14eec <memset@plt>
   3c55c:	ldr	r0, [r4, #20]
   3c560:	ldr	r2, [r4, #44]	; 0x2c
   3c564:	mov	r1, #0
   3c568:	add	r0, r0, r6
   3c56c:	str	r0, [r4, #20]
   3c570:	mov	r0, r4
   3c574:	blx	r2
   3c578:	ldr	r1, [r4, #16]
   3c57c:	ldr	r0, [r4, #20]
   3c580:	sub	r5, r5, r6
   3c584:	sub	r6, r1, r0
   3c588:	cmp	r5, r6
   3c58c:	bhi	3c550 <flatcc_json_printer_int32_vector_field@@Base+0x248>
   3c590:	mov	r1, #32
   3c594:	mov	r2, r5
   3c598:	bl	14eec <memset@plt>
   3c59c:	ldr	r0, [r4, #20]
   3c5a0:	add	r1, r0, r5
   3c5a4:	str	r1, [r4, #20]
   3c5a8:	b	3c5cc <flatcc_json_printer_int32_vector_field@@Base+0x2c4>
   3c5ac:	ldr	r0, [r4, #16]
   3c5b0:	cmp	r1, r0
   3c5b4:	bcc	3c5cc <flatcc_json_printer_int32_vector_field@@Base+0x2c4>
   3c5b8:	ldr	r2, [r4, #44]	; 0x2c
   3c5bc:	mov	r0, r4
   3c5c0:	mov	r1, #0
   3c5c4:	blx	r2
   3c5c8:	ldr	r1, [r4, #20]
   3c5cc:	ldr	r0, [r7]
   3c5d0:	sub	r9, r9, #1
   3c5d4:	cmn	r0, #1
   3c5d8:	lsr	r5, r0, #31
   3c5dc:	movle	r2, #45	; 0x2d
   3c5e0:	rsble	r0, r0, #0
   3c5e4:	strble	r2, [r1], #1
   3c5e8:	bl	37c4c <flatcc_json_printer_uint32@@Base+0x2c>
   3c5ec:	ldr	r1, [r4, #20]
   3c5f0:	add	r0, r0, r5
   3c5f4:	add	r7, r7, #4
   3c5f8:	cmp	r9, #0
   3c5fc:	add	r0, r1, r0
   3c600:	str	r0, [r4, #20]
   3c604:	bne	3c4dc <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   3c608:	ldrb	r1, [r4, #25]
   3c60c:	ldr	r0, [r4, #20]
   3c610:	cmp	r1, #0
   3c614:	beq	3c6d4 <flatcc_json_printer_int32_vector_field@@Base+0x3cc>
   3c618:	add	r1, r0, #1
   3c61c:	str	r1, [r4, #20]
   3c620:	mov	r1, #10
   3c624:	strb	r1, [r0]
   3c628:	ldr	r0, [r4, #32]
   3c62c:	sub	r2, r0, #1
   3c630:	str	r2, [r4, #32]
   3c634:	ldrb	r3, [r4, #25]
   3c638:	ldr	r0, [r4, #20]
   3c63c:	ldr	r1, [r4, #16]
   3c640:	mla	r7, r2, r3, r0
   3c644:	mul	r5, r2, r3
   3c648:	cmp	r7, r1
   3c64c:	bls	3c6bc <flatcc_json_printer_int32_vector_field@@Base+0x3b4>
   3c650:	cmp	r0, r1
   3c654:	bcc	3c670 <flatcc_json_printer_int32_vector_field@@Base+0x368>
   3c658:	ldr	r2, [r4, #44]	; 0x2c
   3c65c:	mov	r0, r4
   3c660:	mov	r1, #0
   3c664:	blx	r2
   3c668:	ldr	r1, [r4, #16]
   3c66c:	ldr	r0, [r4, #20]
   3c670:	sub	r6, r1, r0
   3c674:	cmp	r6, r5
   3c678:	bcs	3c6bc <flatcc_json_printer_int32_vector_field@@Base+0x3b4>
   3c67c:	mov	r1, #32
   3c680:	mov	r2, r6
   3c684:	bl	14eec <memset@plt>
   3c688:	ldr	r0, [r4, #20]
   3c68c:	ldr	r2, [r4, #44]	; 0x2c
   3c690:	mov	r1, #0
   3c694:	add	r0, r0, r6
   3c698:	str	r0, [r4, #20]
   3c69c:	mov	r0, r4
   3c6a0:	blx	r2
   3c6a4:	ldr	r1, [r4, #16]
   3c6a8:	ldr	r0, [r4, #20]
   3c6ac:	sub	r5, r5, r6
   3c6b0:	sub	r6, r1, r0
   3c6b4:	cmp	r5, r6
   3c6b8:	bhi	3c67c <flatcc_json_printer_int32_vector_field@@Base+0x374>
   3c6bc:	mov	r1, #32
   3c6c0:	mov	r2, r5
   3c6c4:	bl	14eec <memset@plt>
   3c6c8:	ldr	r0, [r4, #20]
   3c6cc:	add	r0, r0, r5
   3c6d0:	str	r0, [r4, #20]
   3c6d4:	add	r1, r0, #1
   3c6d8:	str	r1, [r4, #20]
   3c6dc:	mov	r1, #93	; 0x5d
   3c6e0:	strb	r1, [r0]
   3c6e4:	sub	sp, fp, #28
   3c6e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c6ec <flatcc_json_printer_int64_vector_field@@Base>:
   3c6ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c6f0:	add	fp, sp, #28
   3c6f4:	sub	sp, sp, #4
   3c6f8:	mov	r4, r0
   3c6fc:	mov	r0, #4
   3c700:	add	r0, r0, r2, lsl #1
   3c704:	ldr	r2, [r1, #8]
   3c708:	cmp	r0, r2
   3c70c:	bge	3cad8 <flatcc_json_printer_int64_vector_field@@Base+0x3ec>
   3c710:	ldr	r2, [r1, #4]
   3c714:	add	r0, r2, r0
   3c718:	ldrh	r0, [r0]
   3c71c:	cmp	r0, #0
   3c720:	ldrne	r2, [r1]
   3c724:	addsne	r8, r2, r0
   3c728:	beq	3cad8 <flatcc_json_printer_int64_vector_field@@Base+0x3ec>
   3c72c:	ldr	r0, [r1, #16]
   3c730:	ldr	r2, [fp, #8]
   3c734:	add	r7, r0, #1
   3c738:	cmp	r0, #0
   3c73c:	str	r7, [r1, #16]
   3c740:	beq	3c758 <flatcc_json_printer_int64_vector_field@@Base+0x6c>
   3c744:	ldr	r0, [r4, #20]
   3c748:	add	r1, r0, #1
   3c74c:	str	r1, [r4, #20]
   3c750:	mov	r1, #44	; 0x2c
   3c754:	strb	r1, [r0]
   3c758:	ldr	r0, [r8]
   3c75c:	mov	r1, r3
   3c760:	ldr	r7, [r8, r0]!
   3c764:	mov	r0, r4
   3c768:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3c76c:	ldr	r1, [r4, #32]
   3c770:	ldr	r0, [r4, #20]
   3c774:	cmp	r7, #0
   3c778:	add	r1, r1, #1
   3c77c:	str	r1, [r4, #32]
   3c780:	add	r1, r0, #1
   3c784:	str	r1, [r4, #20]
   3c788:	mov	r1, #91	; 0x5b
   3c78c:	strb	r1, [r0]
   3c790:	beq	3c9fc <flatcc_json_printer_int64_vector_field@@Base+0x310>
   3c794:	ldrb	r0, [r4, #25]
   3c798:	ldr	r2, [r4, #20]
   3c79c:	cmp	r0, #0
   3c7a0:	beq	3c85c <flatcc_json_printer_int64_vector_field@@Base+0x170>
   3c7a4:	add	r0, r2, #1
   3c7a8:	str	r0, [r4, #20]
   3c7ac:	mov	r0, #10
   3c7b0:	strb	r0, [r2]
   3c7b4:	ldr	r0, [r4, #20]
   3c7b8:	ldrb	r2, [r4, #25]
   3c7bc:	ldr	r3, [r4, #32]
   3c7c0:	ldr	r1, [r4, #16]
   3c7c4:	mla	r6, r3, r2, r0
   3c7c8:	mul	r5, r3, r2
   3c7cc:	cmp	r6, r1
   3c7d0:	bls	3c840 <flatcc_json_printer_int64_vector_field@@Base+0x154>
   3c7d4:	cmp	r0, r1
   3c7d8:	bcc	3c7f4 <flatcc_json_printer_int64_vector_field@@Base+0x108>
   3c7dc:	ldr	r2, [r4, #44]	; 0x2c
   3c7e0:	mov	r0, r4
   3c7e4:	mov	r1, #0
   3c7e8:	blx	r2
   3c7ec:	ldr	r1, [r4, #16]
   3c7f0:	ldr	r0, [r4, #20]
   3c7f4:	sub	r6, r1, r0
   3c7f8:	cmp	r6, r5
   3c7fc:	bcs	3c840 <flatcc_json_printer_int64_vector_field@@Base+0x154>
   3c800:	mov	r1, #32
   3c804:	mov	r2, r6
   3c808:	bl	14eec <memset@plt>
   3c80c:	ldr	r0, [r4, #20]
   3c810:	ldr	r2, [r4, #44]	; 0x2c
   3c814:	mov	r1, #0
   3c818:	add	r0, r0, r6
   3c81c:	str	r0, [r4, #20]
   3c820:	mov	r0, r4
   3c824:	blx	r2
   3c828:	ldr	r1, [r4, #16]
   3c82c:	ldr	r0, [r4, #20]
   3c830:	sub	r5, r5, r6
   3c834:	sub	r6, r1, r0
   3c838:	cmp	r5, r6
   3c83c:	bhi	3c800 <flatcc_json_printer_int64_vector_field@@Base+0x114>
   3c840:	mov	r1, #32
   3c844:	mov	r2, r5
   3c848:	bl	14eec <memset@plt>
   3c84c:	ldr	r0, [r4, #20]
   3c850:	add	r2, r0, r5
   3c854:	str	r2, [r4, #20]
   3c858:	b	3c87c <flatcc_json_printer_int64_vector_field@@Base+0x190>
   3c85c:	ldr	r0, [r4, #16]
   3c860:	cmp	r2, r0
   3c864:	bcc	3c87c <flatcc_json_printer_int64_vector_field@@Base+0x190>
   3c868:	ldr	r2, [r4, #44]	; 0x2c
   3c86c:	mov	r0, r4
   3c870:	mov	r1, #0
   3c874:	blx	r2
   3c878:	ldr	r2, [r4, #20]
   3c87c:	ldrd	r0, [r8, #4]
   3c880:	lsr	r5, r1, #31
   3c884:	cmn	r1, #1
   3c888:	bgt	3c89c <flatcc_json_printer_int64_vector_field@@Base+0x1b0>
   3c88c:	mov	r3, #45	; 0x2d
   3c890:	rsbs	r0, r0, #0
   3c894:	strb	r3, [r2], #1
   3c898:	rsc	r1, r1, #0
   3c89c:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   3c8a0:	ldr	r1, [r4, #20]
   3c8a4:	add	r0, r0, r5
   3c8a8:	subs	r9, r7, #1
   3c8ac:	add	r0, r1, r0
   3c8b0:	str	r0, [r4, #20]
   3c8b4:	beq	3c9fc <flatcc_json_printer_int64_vector_field@@Base+0x310>
   3c8b8:	ldr	r0, [r4, #20]
   3c8bc:	add	r7, r8, #12
   3c8c0:	mov	r8, #44	; 0x2c
   3c8c4:	mov	sl, #10
   3c8c8:	add	r1, r0, #1
   3c8cc:	str	r1, [r4, #20]
   3c8d0:	strb	r8, [r0]
   3c8d4:	ldrb	r0, [r4, #25]
   3c8d8:	ldr	r2, [r4, #20]
   3c8dc:	cmp	r0, #0
   3c8e0:	beq	3c998 <flatcc_json_printer_int64_vector_field@@Base+0x2ac>
   3c8e4:	add	r0, r2, #1
   3c8e8:	str	r0, [r4, #20]
   3c8ec:	strb	sl, [r2]
   3c8f0:	ldr	r0, [r4, #20]
   3c8f4:	ldrb	r2, [r4, #25]
   3c8f8:	ldr	r3, [r4, #32]
   3c8fc:	ldr	r1, [r4, #16]
   3c900:	mla	r6, r3, r2, r0
   3c904:	mul	r5, r3, r2
   3c908:	cmp	r6, r1
   3c90c:	bls	3c97c <flatcc_json_printer_int64_vector_field@@Base+0x290>
   3c910:	cmp	r0, r1
   3c914:	bcc	3c930 <flatcc_json_printer_int64_vector_field@@Base+0x244>
   3c918:	ldr	r2, [r4, #44]	; 0x2c
   3c91c:	mov	r0, r4
   3c920:	mov	r1, #0
   3c924:	blx	r2
   3c928:	ldr	r1, [r4, #16]
   3c92c:	ldr	r0, [r4, #20]
   3c930:	sub	r6, r1, r0
   3c934:	cmp	r6, r5
   3c938:	bcs	3c97c <flatcc_json_printer_int64_vector_field@@Base+0x290>
   3c93c:	mov	r1, #32
   3c940:	mov	r2, r6
   3c944:	bl	14eec <memset@plt>
   3c948:	ldr	r0, [r4, #20]
   3c94c:	ldr	r2, [r4, #44]	; 0x2c
   3c950:	mov	r1, #0
   3c954:	add	r0, r0, r6
   3c958:	str	r0, [r4, #20]
   3c95c:	mov	r0, r4
   3c960:	blx	r2
   3c964:	ldr	r1, [r4, #16]
   3c968:	ldr	r0, [r4, #20]
   3c96c:	sub	r5, r5, r6
   3c970:	sub	r6, r1, r0
   3c974:	cmp	r5, r6
   3c978:	bhi	3c93c <flatcc_json_printer_int64_vector_field@@Base+0x250>
   3c97c:	mov	r1, #32
   3c980:	mov	r2, r5
   3c984:	bl	14eec <memset@plt>
   3c988:	ldr	r0, [r4, #20]
   3c98c:	add	r2, r0, r5
   3c990:	str	r2, [r4, #20]
   3c994:	b	3c9b8 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   3c998:	ldr	r0, [r4, #16]
   3c99c:	cmp	r2, r0
   3c9a0:	bcc	3c9b8 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   3c9a4:	ldr	r2, [r4, #44]	; 0x2c
   3c9a8:	mov	r0, r4
   3c9ac:	mov	r1, #0
   3c9b0:	blx	r2
   3c9b4:	ldr	r2, [r4, #20]
   3c9b8:	ldrd	r0, [r7]
   3c9bc:	sub	r9, r9, #1
   3c9c0:	lsr	r5, r1, #31
   3c9c4:	cmn	r1, #1
   3c9c8:	bgt	3c9dc <flatcc_json_printer_int64_vector_field@@Base+0x2f0>
   3c9cc:	mov	r3, #45	; 0x2d
   3c9d0:	rsbs	r0, r0, #0
   3c9d4:	strb	r3, [r2], #1
   3c9d8:	rsc	r1, r1, #0
   3c9dc:	bl	37f74 <flatcc_json_printer_uint64@@Base+0x30>
   3c9e0:	ldr	r1, [r4, #20]
   3c9e4:	add	r0, r0, r5
   3c9e8:	add	r7, r7, #8
   3c9ec:	cmp	r9, #0
   3c9f0:	add	r0, r1, r0
   3c9f4:	str	r0, [r4, #20]
   3c9f8:	bne	3c8c8 <flatcc_json_printer_int64_vector_field@@Base+0x1dc>
   3c9fc:	ldrb	r1, [r4, #25]
   3ca00:	ldr	r0, [r4, #20]
   3ca04:	cmp	r1, #0
   3ca08:	beq	3cac8 <flatcc_json_printer_int64_vector_field@@Base+0x3dc>
   3ca0c:	add	r1, r0, #1
   3ca10:	str	r1, [r4, #20]
   3ca14:	mov	r1, #10
   3ca18:	strb	r1, [r0]
   3ca1c:	ldr	r0, [r4, #32]
   3ca20:	sub	r2, r0, #1
   3ca24:	str	r2, [r4, #32]
   3ca28:	ldrb	r3, [r4, #25]
   3ca2c:	ldr	r0, [r4, #20]
   3ca30:	ldr	r1, [r4, #16]
   3ca34:	mla	r7, r2, r3, r0
   3ca38:	mul	r5, r2, r3
   3ca3c:	cmp	r7, r1
   3ca40:	bls	3cab0 <flatcc_json_printer_int64_vector_field@@Base+0x3c4>
   3ca44:	cmp	r0, r1
   3ca48:	bcc	3ca64 <flatcc_json_printer_int64_vector_field@@Base+0x378>
   3ca4c:	ldr	r2, [r4, #44]	; 0x2c
   3ca50:	mov	r0, r4
   3ca54:	mov	r1, #0
   3ca58:	blx	r2
   3ca5c:	ldr	r1, [r4, #16]
   3ca60:	ldr	r0, [r4, #20]
   3ca64:	sub	r6, r1, r0
   3ca68:	cmp	r6, r5
   3ca6c:	bcs	3cab0 <flatcc_json_printer_int64_vector_field@@Base+0x3c4>
   3ca70:	mov	r1, #32
   3ca74:	mov	r2, r6
   3ca78:	bl	14eec <memset@plt>
   3ca7c:	ldr	r0, [r4, #20]
   3ca80:	ldr	r2, [r4, #44]	; 0x2c
   3ca84:	mov	r1, #0
   3ca88:	add	r0, r0, r6
   3ca8c:	str	r0, [r4, #20]
   3ca90:	mov	r0, r4
   3ca94:	blx	r2
   3ca98:	ldr	r1, [r4, #16]
   3ca9c:	ldr	r0, [r4, #20]
   3caa0:	sub	r5, r5, r6
   3caa4:	sub	r6, r1, r0
   3caa8:	cmp	r5, r6
   3caac:	bhi	3ca70 <flatcc_json_printer_int64_vector_field@@Base+0x384>
   3cab0:	mov	r1, #32
   3cab4:	mov	r2, r5
   3cab8:	bl	14eec <memset@plt>
   3cabc:	ldr	r0, [r4, #20]
   3cac0:	add	r0, r0, r5
   3cac4:	str	r0, [r4, #20]
   3cac8:	add	r1, r0, #1
   3cacc:	str	r1, [r4, #20]
   3cad0:	mov	r1, #93	; 0x5d
   3cad4:	strb	r1, [r0]
   3cad8:	sub	sp, fp, #28
   3cadc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003cae0 <flatcc_json_printer_bool_vector_field@@Base>:
   3cae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cae4:	add	fp, sp, #28
   3cae8:	sub	sp, sp, #4
   3caec:	mov	r4, r0
   3caf0:	mov	r0, #4
   3caf4:	add	r0, r0, r2, lsl #1
   3caf8:	ldr	r2, [r1, #8]
   3cafc:	cmp	r0, r2
   3cb00:	bge	3cef4 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   3cb04:	ldr	r2, [r1, #4]
   3cb08:	add	r0, r2, r0
   3cb0c:	ldrh	r0, [r0]
   3cb10:	cmp	r0, #0
   3cb14:	ldrne	r2, [r1]
   3cb18:	addsne	sl, r2, r0
   3cb1c:	beq	3cef4 <flatcc_json_printer_bool_vector_field@@Base+0x414>
   3cb20:	ldr	r0, [r1, #16]
   3cb24:	ldr	r2, [fp, #8]
   3cb28:	add	r7, r0, #1
   3cb2c:	cmp	r0, #0
   3cb30:	str	r7, [r1, #16]
   3cb34:	beq	3cb4c <flatcc_json_printer_bool_vector_field@@Base+0x6c>
   3cb38:	ldr	r0, [r4, #20]
   3cb3c:	add	r1, r0, #1
   3cb40:	str	r1, [r4, #20]
   3cb44:	mov	r1, #44	; 0x2c
   3cb48:	strb	r1, [r0]
   3cb4c:	ldr	r0, [sl]
   3cb50:	mov	r1, r3
   3cb54:	ldr	r9, [sl, r0]!
   3cb58:	mov	r0, r4
   3cb5c:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3cb60:	ldr	r1, [r4, #32]
   3cb64:	ldr	r0, [r4, #20]
   3cb68:	cmp	r9, #0
   3cb6c:	add	r1, r1, #1
   3cb70:	str	r1, [r4, #32]
   3cb74:	add	r1, r0, #1
   3cb78:	str	r1, [r4, #20]
   3cb7c:	mov	r1, #91	; 0x5b
   3cb80:	strb	r1, [r0]
   3cb84:	beq	3ce18 <flatcc_json_printer_bool_vector_field@@Base+0x338>
   3cb88:	ldrb	r1, [r4, #25]
   3cb8c:	ldr	r0, [r4, #20]
   3cb90:	cmp	r1, #0
   3cb94:	beq	3cc50 <flatcc_json_printer_bool_vector_field@@Base+0x170>
   3cb98:	add	r1, r0, #1
   3cb9c:	str	r1, [r4, #20]
   3cba0:	mov	r1, #10
   3cba4:	strb	r1, [r0]
   3cba8:	ldr	r0, [r4, #20]
   3cbac:	ldrb	r2, [r4, #25]
   3cbb0:	ldr	r3, [r4, #32]
   3cbb4:	ldr	r1, [r4, #16]
   3cbb8:	mla	r7, r3, r2, r0
   3cbbc:	mul	r5, r3, r2
   3cbc0:	cmp	r7, r1
   3cbc4:	bls	3cc34 <flatcc_json_printer_bool_vector_field@@Base+0x154>
   3cbc8:	cmp	r0, r1
   3cbcc:	bcc	3cbe8 <flatcc_json_printer_bool_vector_field@@Base+0x108>
   3cbd0:	ldr	r2, [r4, #44]	; 0x2c
   3cbd4:	mov	r0, r4
   3cbd8:	mov	r1, #0
   3cbdc:	blx	r2
   3cbe0:	ldr	r1, [r4, #16]
   3cbe4:	ldr	r0, [r4, #20]
   3cbe8:	sub	r6, r1, r0
   3cbec:	cmp	r6, r5
   3cbf0:	bcs	3cc34 <flatcc_json_printer_bool_vector_field@@Base+0x154>
   3cbf4:	mov	r1, #32
   3cbf8:	mov	r2, r6
   3cbfc:	bl	14eec <memset@plt>
   3cc00:	ldr	r0, [r4, #20]
   3cc04:	ldr	r2, [r4, #44]	; 0x2c
   3cc08:	mov	r1, #0
   3cc0c:	add	r0, r0, r6
   3cc10:	str	r0, [r4, #20]
   3cc14:	mov	r0, r4
   3cc18:	blx	r2
   3cc1c:	ldr	r1, [r4, #16]
   3cc20:	ldr	r0, [r4, #20]
   3cc24:	sub	r5, r5, r6
   3cc28:	sub	r6, r1, r0
   3cc2c:	cmp	r5, r6
   3cc30:	bhi	3cbf4 <flatcc_json_printer_bool_vector_field@@Base+0x114>
   3cc34:	mov	r1, #32
   3cc38:	mov	r2, r5
   3cc3c:	bl	14eec <memset@plt>
   3cc40:	ldr	r0, [r4, #20]
   3cc44:	add	r0, r0, r5
   3cc48:	str	r0, [r4, #20]
   3cc4c:	b	3cc70 <flatcc_json_printer_bool_vector_field@@Base+0x190>
   3cc50:	ldr	r1, [r4, #16]
   3cc54:	cmp	r0, r1
   3cc58:	bcc	3cc70 <flatcc_json_printer_bool_vector_field@@Base+0x190>
   3cc5c:	ldr	r2, [r4, #44]	; 0x2c
   3cc60:	mov	r0, r4
   3cc64:	mov	r1, #0
   3cc68:	blx	r2
   3cc6c:	ldr	r0, [r4, #20]
   3cc70:	ldrb	r1, [sl, #4]
   3cc74:	movw	r8, #29300	; 0x7274
   3cc78:	movt	r8, #25973	; 0x6575
   3cc7c:	cmp	r1, #0
   3cc80:	beq	3cc98 <flatcc_json_printer_bool_vector_field@@Base+0x1b8>
   3cc84:	mov	r1, #0
   3cc88:	str	r8, [r0]
   3cc8c:	strb	r1, [r0, #4]
   3cc90:	mov	r0, #4
   3cc94:	b	3ccb0 <flatcc_json_printer_bool_vector_field@@Base+0x1d0>
   3cc98:	mov	r1, #101	; 0x65
   3cc9c:	strh	r1, [r0, #4]
   3cca0:	movw	r1, #24934	; 0x6166
   3cca4:	movt	r1, #29548	; 0x736c
   3cca8:	str	r1, [r0]
   3ccac:	mov	r0, #5
   3ccb0:	ldr	r1, [r4, #20]
   3ccb4:	subs	r9, r9, #1
   3ccb8:	add	r0, r1, r0
   3ccbc:	str	r0, [r4, #20]
   3ccc0:	beq	3ce18 <flatcc_json_printer_bool_vector_field@@Base+0x338>
   3ccc4:	ldr	r0, [r4, #20]
   3ccc8:	add	r7, sl, #5
   3cccc:	mov	sl, #44	; 0x2c
   3ccd0:	add	r1, r0, #1
   3ccd4:	str	r1, [r4, #20]
   3ccd8:	strb	sl, [r0]
   3ccdc:	ldrb	r1, [r4, #25]
   3cce0:	ldr	r0, [r4, #20]
   3cce4:	cmp	r1, #0
   3cce8:	beq	3cda4 <flatcc_json_printer_bool_vector_field@@Base+0x2c4>
   3ccec:	add	r1, r0, #1
   3ccf0:	str	r1, [r4, #20]
   3ccf4:	mov	r1, #10
   3ccf8:	strb	r1, [r0]
   3ccfc:	ldr	r0, [r4, #20]
   3cd00:	ldrb	r2, [r4, #25]
   3cd04:	ldr	r3, [r4, #32]
   3cd08:	ldr	r1, [r4, #16]
   3cd0c:	mla	r6, r3, r2, r0
   3cd10:	mul	r5, r3, r2
   3cd14:	cmp	r6, r1
   3cd18:	bls	3cd88 <flatcc_json_printer_bool_vector_field@@Base+0x2a8>
   3cd1c:	cmp	r0, r1
   3cd20:	bcc	3cd3c <flatcc_json_printer_bool_vector_field@@Base+0x25c>
   3cd24:	ldr	r2, [r4, #44]	; 0x2c
   3cd28:	mov	r0, r4
   3cd2c:	mov	r1, #0
   3cd30:	blx	r2
   3cd34:	ldr	r1, [r4, #16]
   3cd38:	ldr	r0, [r4, #20]
   3cd3c:	sub	r6, r1, r0
   3cd40:	cmp	r6, r5
   3cd44:	bcs	3cd88 <flatcc_json_printer_bool_vector_field@@Base+0x2a8>
   3cd48:	mov	r1, #32
   3cd4c:	mov	r2, r6
   3cd50:	bl	14eec <memset@plt>
   3cd54:	ldr	r0, [r4, #20]
   3cd58:	ldr	r2, [r4, #44]	; 0x2c
   3cd5c:	mov	r1, #0
   3cd60:	add	r0, r0, r6
   3cd64:	str	r0, [r4, #20]
   3cd68:	mov	r0, r4
   3cd6c:	blx	r2
   3cd70:	ldr	r1, [r4, #16]
   3cd74:	ldr	r0, [r4, #20]
   3cd78:	sub	r5, r5, r6
   3cd7c:	sub	r6, r1, r0
   3cd80:	cmp	r5, r6
   3cd84:	bhi	3cd48 <flatcc_json_printer_bool_vector_field@@Base+0x268>
   3cd88:	mov	r1, #32
   3cd8c:	mov	r2, r5
   3cd90:	bl	14eec <memset@plt>
   3cd94:	ldr	r0, [r4, #20]
   3cd98:	add	r0, r0, r5
   3cd9c:	str	r0, [r4, #20]
   3cda0:	b	3cdc4 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   3cda4:	ldr	r1, [r4, #16]
   3cda8:	cmp	r0, r1
   3cdac:	bcc	3cdc4 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   3cdb0:	ldr	r2, [r4, #44]	; 0x2c
   3cdb4:	mov	r0, r4
   3cdb8:	mov	r1, #0
   3cdbc:	blx	r2
   3cdc0:	ldr	r0, [r4, #20]
   3cdc4:	ldrb	r1, [r7]
   3cdc8:	sub	r9, r9, #1
   3cdcc:	cmp	r1, #0
   3cdd0:	beq	3cde8 <flatcc_json_printer_bool_vector_field@@Base+0x308>
   3cdd4:	mov	r1, #0
   3cdd8:	str	r8, [r0]
   3cddc:	strb	r1, [r0, #4]
   3cde0:	mov	r0, #4
   3cde4:	b	3ce00 <flatcc_json_printer_bool_vector_field@@Base+0x320>
   3cde8:	mov	r1, #101	; 0x65
   3cdec:	strh	r1, [r0, #4]
   3cdf0:	movw	r1, #24934	; 0x6166
   3cdf4:	movt	r1, #29548	; 0x736c
   3cdf8:	str	r1, [r0]
   3cdfc:	mov	r0, #5
   3ce00:	ldr	r1, [r4, #20]
   3ce04:	add	r7, r7, #1
   3ce08:	cmp	r9, #0
   3ce0c:	add	r0, r1, r0
   3ce10:	str	r0, [r4, #20]
   3ce14:	bne	3ccd0 <flatcc_json_printer_bool_vector_field@@Base+0x1f0>
   3ce18:	ldrb	r1, [r4, #25]
   3ce1c:	ldr	r0, [r4, #20]
   3ce20:	cmp	r1, #0
   3ce24:	beq	3cee4 <flatcc_json_printer_bool_vector_field@@Base+0x404>
   3ce28:	add	r1, r0, #1
   3ce2c:	str	r1, [r4, #20]
   3ce30:	mov	r1, #10
   3ce34:	strb	r1, [r0]
   3ce38:	ldr	r0, [r4, #32]
   3ce3c:	sub	r2, r0, #1
   3ce40:	str	r2, [r4, #32]
   3ce44:	ldrb	r3, [r4, #25]
   3ce48:	ldr	r0, [r4, #20]
   3ce4c:	ldr	r1, [r4, #16]
   3ce50:	mla	r7, r2, r3, r0
   3ce54:	mul	r5, r2, r3
   3ce58:	cmp	r7, r1
   3ce5c:	bls	3cecc <flatcc_json_printer_bool_vector_field@@Base+0x3ec>
   3ce60:	cmp	r0, r1
   3ce64:	bcc	3ce80 <flatcc_json_printer_bool_vector_field@@Base+0x3a0>
   3ce68:	ldr	r2, [r4, #44]	; 0x2c
   3ce6c:	mov	r0, r4
   3ce70:	mov	r1, #0
   3ce74:	blx	r2
   3ce78:	ldr	r1, [r4, #16]
   3ce7c:	ldr	r0, [r4, #20]
   3ce80:	sub	r6, r1, r0
   3ce84:	cmp	r6, r5
   3ce88:	bcs	3cecc <flatcc_json_printer_bool_vector_field@@Base+0x3ec>
   3ce8c:	mov	r1, #32
   3ce90:	mov	r2, r6
   3ce94:	bl	14eec <memset@plt>
   3ce98:	ldr	r0, [r4, #20]
   3ce9c:	ldr	r2, [r4, #44]	; 0x2c
   3cea0:	mov	r1, #0
   3cea4:	add	r0, r0, r6
   3cea8:	str	r0, [r4, #20]
   3ceac:	mov	r0, r4
   3ceb0:	blx	r2
   3ceb4:	ldr	r1, [r4, #16]
   3ceb8:	ldr	r0, [r4, #20]
   3cebc:	sub	r5, r5, r6
   3cec0:	sub	r6, r1, r0
   3cec4:	cmp	r5, r6
   3cec8:	bhi	3ce8c <flatcc_json_printer_bool_vector_field@@Base+0x3ac>
   3cecc:	mov	r1, #32
   3ced0:	mov	r2, r5
   3ced4:	bl	14eec <memset@plt>
   3ced8:	ldr	r0, [r4, #20]
   3cedc:	add	r0, r0, r5
   3cee0:	str	r0, [r4, #20]
   3cee4:	add	r1, r0, #1
   3cee8:	str	r1, [r4, #20]
   3ceec:	mov	r1, #93	; 0x5d
   3cef0:	strb	r1, [r0]
   3cef4:	sub	sp, fp, #28
   3cef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003cefc <flatcc_json_printer_float_vector_field@@Base>:
   3cefc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cf00:	add	fp, sp, #28
   3cf04:	sub	sp, sp, #4
   3cf08:	mov	r4, r0
   3cf0c:	mov	r0, #4
   3cf10:	add	r0, r0, r2, lsl #1
   3cf14:	ldr	r2, [r1, #8]
   3cf18:	cmp	r0, r2
   3cf1c:	bge	3d2b0 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   3cf20:	ldr	r2, [r1, #4]
   3cf24:	add	r0, r2, r0
   3cf28:	ldrh	r0, [r0]
   3cf2c:	cmp	r0, #0
   3cf30:	ldrne	r2, [r1]
   3cf34:	addsne	r8, r2, r0
   3cf38:	beq	3d2b0 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   3cf3c:	ldr	r0, [r1, #16]
   3cf40:	ldr	r2, [fp, #8]
   3cf44:	add	r7, r0, #1
   3cf48:	cmp	r0, #0
   3cf4c:	str	r7, [r1, #16]
   3cf50:	beq	3cf68 <flatcc_json_printer_float_vector_field@@Base+0x6c>
   3cf54:	ldr	r0, [r4, #20]
   3cf58:	add	r1, r0, #1
   3cf5c:	str	r1, [r4, #20]
   3cf60:	mov	r1, #44	; 0x2c
   3cf64:	strb	r1, [r0]
   3cf68:	ldr	r0, [r8]
   3cf6c:	mov	r1, r3
   3cf70:	ldr	r7, [r8, r0]!
   3cf74:	mov	r0, r4
   3cf78:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3cf7c:	ldr	r1, [r4, #32]
   3cf80:	ldr	r0, [r4, #20]
   3cf84:	cmp	r7, #0
   3cf88:	add	r1, r1, #1
   3cf8c:	str	r1, [r4, #32]
   3cf90:	add	r1, r0, #1
   3cf94:	str	r1, [r4, #20]
   3cf98:	mov	r1, #91	; 0x5b
   3cf9c:	strb	r1, [r0]
   3cfa0:	beq	3d1d4 <flatcc_json_printer_float_vector_field@@Base+0x2d8>
   3cfa4:	ldrb	r1, [r4, #25]
   3cfa8:	ldr	r0, [r4, #20]
   3cfac:	cmp	r1, #0
   3cfb0:	beq	3d06c <flatcc_json_printer_float_vector_field@@Base+0x170>
   3cfb4:	add	r1, r0, #1
   3cfb8:	str	r1, [r4, #20]
   3cfbc:	mov	r1, #10
   3cfc0:	strb	r1, [r0]
   3cfc4:	ldr	r0, [r4, #20]
   3cfc8:	ldrb	r2, [r4, #25]
   3cfcc:	ldr	r3, [r4, #32]
   3cfd0:	ldr	r1, [r4, #16]
   3cfd4:	mla	r6, r3, r2, r0
   3cfd8:	mul	r5, r3, r2
   3cfdc:	cmp	r6, r1
   3cfe0:	bls	3d050 <flatcc_json_printer_float_vector_field@@Base+0x154>
   3cfe4:	cmp	r0, r1
   3cfe8:	bcc	3d004 <flatcc_json_printer_float_vector_field@@Base+0x108>
   3cfec:	ldr	r2, [r4, #44]	; 0x2c
   3cff0:	mov	r0, r4
   3cff4:	mov	r1, #0
   3cff8:	blx	r2
   3cffc:	ldr	r1, [r4, #16]
   3d000:	ldr	r0, [r4, #20]
   3d004:	sub	r6, r1, r0
   3d008:	cmp	r6, r5
   3d00c:	bcs	3d050 <flatcc_json_printer_float_vector_field@@Base+0x154>
   3d010:	mov	r1, #32
   3d014:	mov	r2, r6
   3d018:	bl	14eec <memset@plt>
   3d01c:	ldr	r0, [r4, #20]
   3d020:	ldr	r2, [r4, #44]	; 0x2c
   3d024:	mov	r1, #0
   3d028:	add	r0, r0, r6
   3d02c:	str	r0, [r4, #20]
   3d030:	mov	r0, r4
   3d034:	blx	r2
   3d038:	ldr	r1, [r4, #16]
   3d03c:	ldr	r0, [r4, #20]
   3d040:	sub	r5, r5, r6
   3d044:	sub	r6, r1, r0
   3d048:	cmp	r5, r6
   3d04c:	bhi	3d010 <flatcc_json_printer_float_vector_field@@Base+0x114>
   3d050:	mov	r1, #32
   3d054:	mov	r2, r5
   3d058:	bl	14eec <memset@plt>
   3d05c:	ldr	r0, [r4, #20]
   3d060:	add	r0, r0, r5
   3d064:	str	r0, [r4, #20]
   3d068:	b	3d08c <flatcc_json_printer_float_vector_field@@Base+0x190>
   3d06c:	ldr	r1, [r4, #16]
   3d070:	cmp	r0, r1
   3d074:	bcc	3d08c <flatcc_json_printer_float_vector_field@@Base+0x190>
   3d078:	ldr	r2, [r4, #44]	; 0x2c
   3d07c:	mov	r0, r4
   3d080:	mov	r1, #0
   3d084:	blx	r2
   3d088:	ldr	r0, [r4, #20]
   3d08c:	vldr	s0, [r8, #4]
   3d090:	vcvt.f64.f32	d0, s0
   3d094:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d098:	ldr	r1, [r4, #20]
   3d09c:	subs	r9, r7, #1
   3d0a0:	add	r0, r1, r0
   3d0a4:	str	r0, [r4, #20]
   3d0a8:	beq	3d1d4 <flatcc_json_printer_float_vector_field@@Base+0x2d8>
   3d0ac:	ldr	r0, [r4, #20]
   3d0b0:	add	r7, r8, #8
   3d0b4:	mov	r8, #44	; 0x2c
   3d0b8:	mov	sl, #10
   3d0bc:	add	r1, r0, #1
   3d0c0:	sub	r9, r9, #1
   3d0c4:	str	r1, [r4, #20]
   3d0c8:	strb	r8, [r0]
   3d0cc:	ldrb	r1, [r4, #25]
   3d0d0:	ldr	r0, [r4, #20]
   3d0d4:	cmp	r1, #0
   3d0d8:	beq	3d190 <flatcc_json_printer_float_vector_field@@Base+0x294>
   3d0dc:	add	r1, r0, #1
   3d0e0:	str	r1, [r4, #20]
   3d0e4:	strb	sl, [r0]
   3d0e8:	ldr	r0, [r4, #20]
   3d0ec:	ldrb	r2, [r4, #25]
   3d0f0:	ldr	r3, [r4, #32]
   3d0f4:	ldr	r1, [r4, #16]
   3d0f8:	mla	r6, r3, r2, r0
   3d0fc:	mul	r5, r3, r2
   3d100:	cmp	r6, r1
   3d104:	bls	3d174 <flatcc_json_printer_float_vector_field@@Base+0x278>
   3d108:	cmp	r0, r1
   3d10c:	bcc	3d128 <flatcc_json_printer_float_vector_field@@Base+0x22c>
   3d110:	ldr	r2, [r4, #44]	; 0x2c
   3d114:	mov	r0, r4
   3d118:	mov	r1, #0
   3d11c:	blx	r2
   3d120:	ldr	r1, [r4, #16]
   3d124:	ldr	r0, [r4, #20]
   3d128:	sub	r6, r1, r0
   3d12c:	cmp	r6, r5
   3d130:	bcs	3d174 <flatcc_json_printer_float_vector_field@@Base+0x278>
   3d134:	mov	r1, #32
   3d138:	mov	r2, r6
   3d13c:	bl	14eec <memset@plt>
   3d140:	ldr	r0, [r4, #20]
   3d144:	ldr	r2, [r4, #44]	; 0x2c
   3d148:	mov	r1, #0
   3d14c:	add	r0, r0, r6
   3d150:	str	r0, [r4, #20]
   3d154:	mov	r0, r4
   3d158:	blx	r2
   3d15c:	ldr	r1, [r4, #16]
   3d160:	ldr	r0, [r4, #20]
   3d164:	sub	r5, r5, r6
   3d168:	sub	r6, r1, r0
   3d16c:	cmp	r5, r6
   3d170:	bhi	3d134 <flatcc_json_printer_float_vector_field@@Base+0x238>
   3d174:	mov	r1, #32
   3d178:	mov	r2, r5
   3d17c:	bl	14eec <memset@plt>
   3d180:	ldr	r0, [r4, #20]
   3d184:	add	r0, r0, r5
   3d188:	str	r0, [r4, #20]
   3d18c:	b	3d1b0 <flatcc_json_printer_float_vector_field@@Base+0x2b4>
   3d190:	ldr	r1, [r4, #16]
   3d194:	cmp	r0, r1
   3d198:	bcc	3d1b0 <flatcc_json_printer_float_vector_field@@Base+0x2b4>
   3d19c:	ldr	r2, [r4, #44]	; 0x2c
   3d1a0:	mov	r0, r4
   3d1a4:	mov	r1, #0
   3d1a8:	blx	r2
   3d1ac:	ldr	r0, [r4, #20]
   3d1b0:	vldr	s0, [r7]
   3d1b4:	vcvt.f64.f32	d0, s0
   3d1b8:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d1bc:	ldr	r1, [r4, #20]
   3d1c0:	add	r7, r7, #4
   3d1c4:	cmp	r9, #0
   3d1c8:	add	r0, r1, r0
   3d1cc:	str	r0, [r4, #20]
   3d1d0:	bne	3d0bc <flatcc_json_printer_float_vector_field@@Base+0x1c0>
   3d1d4:	ldrb	r1, [r4, #25]
   3d1d8:	ldr	r0, [r4, #20]
   3d1dc:	cmp	r1, #0
   3d1e0:	beq	3d2a0 <flatcc_json_printer_float_vector_field@@Base+0x3a4>
   3d1e4:	add	r1, r0, #1
   3d1e8:	str	r1, [r4, #20]
   3d1ec:	mov	r1, #10
   3d1f0:	strb	r1, [r0]
   3d1f4:	ldr	r0, [r4, #32]
   3d1f8:	sub	r2, r0, #1
   3d1fc:	str	r2, [r4, #32]
   3d200:	ldrb	r3, [r4, #25]
   3d204:	ldr	r0, [r4, #20]
   3d208:	ldr	r1, [r4, #16]
   3d20c:	mla	r7, r2, r3, r0
   3d210:	mul	r5, r2, r3
   3d214:	cmp	r7, r1
   3d218:	bls	3d288 <flatcc_json_printer_float_vector_field@@Base+0x38c>
   3d21c:	cmp	r0, r1
   3d220:	bcc	3d23c <flatcc_json_printer_float_vector_field@@Base+0x340>
   3d224:	ldr	r2, [r4, #44]	; 0x2c
   3d228:	mov	r0, r4
   3d22c:	mov	r1, #0
   3d230:	blx	r2
   3d234:	ldr	r1, [r4, #16]
   3d238:	ldr	r0, [r4, #20]
   3d23c:	sub	r6, r1, r0
   3d240:	cmp	r6, r5
   3d244:	bcs	3d288 <flatcc_json_printer_float_vector_field@@Base+0x38c>
   3d248:	mov	r1, #32
   3d24c:	mov	r2, r6
   3d250:	bl	14eec <memset@plt>
   3d254:	ldr	r0, [r4, #20]
   3d258:	ldr	r2, [r4, #44]	; 0x2c
   3d25c:	mov	r1, #0
   3d260:	add	r0, r0, r6
   3d264:	str	r0, [r4, #20]
   3d268:	mov	r0, r4
   3d26c:	blx	r2
   3d270:	ldr	r1, [r4, #16]
   3d274:	ldr	r0, [r4, #20]
   3d278:	sub	r5, r5, r6
   3d27c:	sub	r6, r1, r0
   3d280:	cmp	r5, r6
   3d284:	bhi	3d248 <flatcc_json_printer_float_vector_field@@Base+0x34c>
   3d288:	mov	r1, #32
   3d28c:	mov	r2, r5
   3d290:	bl	14eec <memset@plt>
   3d294:	ldr	r0, [r4, #20]
   3d298:	add	r0, r0, r5
   3d29c:	str	r0, [r4, #20]
   3d2a0:	add	r1, r0, #1
   3d2a4:	str	r1, [r4, #20]
   3d2a8:	mov	r1, #93	; 0x5d
   3d2ac:	strb	r1, [r0]
   3d2b0:	sub	sp, fp, #28
   3d2b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d2b8 <flatcc_json_printer_double_vector_field@@Base>:
   3d2b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d2bc:	add	fp, sp, #28
   3d2c0:	sub	sp, sp, #4
   3d2c4:	mov	r4, r0
   3d2c8:	mov	r0, #4
   3d2cc:	add	r0, r0, r2, lsl #1
   3d2d0:	ldr	r2, [r1, #8]
   3d2d4:	cmp	r0, r2
   3d2d8:	bge	3d664 <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   3d2dc:	ldr	r2, [r1, #4]
   3d2e0:	add	r0, r2, r0
   3d2e4:	ldrh	r0, [r0]
   3d2e8:	cmp	r0, #0
   3d2ec:	ldrne	r2, [r1]
   3d2f0:	addsne	r8, r2, r0
   3d2f4:	beq	3d664 <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   3d2f8:	ldr	r0, [r1, #16]
   3d2fc:	ldr	r2, [fp, #8]
   3d300:	add	r7, r0, #1
   3d304:	cmp	r0, #0
   3d308:	str	r7, [r1, #16]
   3d30c:	beq	3d324 <flatcc_json_printer_double_vector_field@@Base+0x6c>
   3d310:	ldr	r0, [r4, #20]
   3d314:	add	r1, r0, #1
   3d318:	str	r1, [r4, #20]
   3d31c:	mov	r1, #44	; 0x2c
   3d320:	strb	r1, [r0]
   3d324:	ldr	r0, [r8]
   3d328:	mov	r1, r3
   3d32c:	ldr	r7, [r8, r0]!
   3d330:	mov	r0, r4
   3d334:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3d338:	ldr	r1, [r4, #32]
   3d33c:	ldr	r0, [r4, #20]
   3d340:	cmp	r7, #0
   3d344:	add	r1, r1, #1
   3d348:	str	r1, [r4, #32]
   3d34c:	add	r1, r0, #1
   3d350:	str	r1, [r4, #20]
   3d354:	mov	r1, #91	; 0x5b
   3d358:	strb	r1, [r0]
   3d35c:	beq	3d588 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
   3d360:	ldrb	r1, [r4, #25]
   3d364:	ldr	r0, [r4, #20]
   3d368:	cmp	r1, #0
   3d36c:	beq	3d428 <flatcc_json_printer_double_vector_field@@Base+0x170>
   3d370:	add	r1, r0, #1
   3d374:	str	r1, [r4, #20]
   3d378:	mov	r1, #10
   3d37c:	strb	r1, [r0]
   3d380:	ldr	r0, [r4, #20]
   3d384:	ldrb	r2, [r4, #25]
   3d388:	ldr	r3, [r4, #32]
   3d38c:	ldr	r1, [r4, #16]
   3d390:	mla	r6, r3, r2, r0
   3d394:	mul	r5, r3, r2
   3d398:	cmp	r6, r1
   3d39c:	bls	3d40c <flatcc_json_printer_double_vector_field@@Base+0x154>
   3d3a0:	cmp	r0, r1
   3d3a4:	bcc	3d3c0 <flatcc_json_printer_double_vector_field@@Base+0x108>
   3d3a8:	ldr	r2, [r4, #44]	; 0x2c
   3d3ac:	mov	r0, r4
   3d3b0:	mov	r1, #0
   3d3b4:	blx	r2
   3d3b8:	ldr	r1, [r4, #16]
   3d3bc:	ldr	r0, [r4, #20]
   3d3c0:	sub	r6, r1, r0
   3d3c4:	cmp	r6, r5
   3d3c8:	bcs	3d40c <flatcc_json_printer_double_vector_field@@Base+0x154>
   3d3cc:	mov	r1, #32
   3d3d0:	mov	r2, r6
   3d3d4:	bl	14eec <memset@plt>
   3d3d8:	ldr	r0, [r4, #20]
   3d3dc:	ldr	r2, [r4, #44]	; 0x2c
   3d3e0:	mov	r1, #0
   3d3e4:	add	r0, r0, r6
   3d3e8:	str	r0, [r4, #20]
   3d3ec:	mov	r0, r4
   3d3f0:	blx	r2
   3d3f4:	ldr	r1, [r4, #16]
   3d3f8:	ldr	r0, [r4, #20]
   3d3fc:	sub	r5, r5, r6
   3d400:	sub	r6, r1, r0
   3d404:	cmp	r5, r6
   3d408:	bhi	3d3cc <flatcc_json_printer_double_vector_field@@Base+0x114>
   3d40c:	mov	r1, #32
   3d410:	mov	r2, r5
   3d414:	bl	14eec <memset@plt>
   3d418:	ldr	r0, [r4, #20]
   3d41c:	add	r0, r0, r5
   3d420:	str	r0, [r4, #20]
   3d424:	b	3d448 <flatcc_json_printer_double_vector_field@@Base+0x190>
   3d428:	ldr	r1, [r4, #16]
   3d42c:	cmp	r0, r1
   3d430:	bcc	3d448 <flatcc_json_printer_double_vector_field@@Base+0x190>
   3d434:	ldr	r2, [r4, #44]	; 0x2c
   3d438:	mov	r0, r4
   3d43c:	mov	r1, #0
   3d440:	blx	r2
   3d444:	ldr	r0, [r4, #20]
   3d448:	vldr	d0, [r8, #4]
   3d44c:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d450:	ldr	r1, [r4, #20]
   3d454:	subs	r9, r7, #1
   3d458:	add	r0, r1, r0
   3d45c:	str	r0, [r4, #20]
   3d460:	beq	3d588 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
   3d464:	ldr	r0, [r4, #20]
   3d468:	add	r7, r8, #12
   3d46c:	mov	r8, #44	; 0x2c
   3d470:	mov	sl, #10
   3d474:	add	r1, r0, #1
   3d478:	sub	r9, r9, #1
   3d47c:	str	r1, [r4, #20]
   3d480:	strb	r8, [r0]
   3d484:	ldrb	r1, [r4, #25]
   3d488:	ldr	r0, [r4, #20]
   3d48c:	cmp	r1, #0
   3d490:	beq	3d548 <flatcc_json_printer_double_vector_field@@Base+0x290>
   3d494:	add	r1, r0, #1
   3d498:	str	r1, [r4, #20]
   3d49c:	strb	sl, [r0]
   3d4a0:	ldr	r0, [r4, #20]
   3d4a4:	ldrb	r2, [r4, #25]
   3d4a8:	ldr	r3, [r4, #32]
   3d4ac:	ldr	r1, [r4, #16]
   3d4b0:	mla	r6, r3, r2, r0
   3d4b4:	mul	r5, r3, r2
   3d4b8:	cmp	r6, r1
   3d4bc:	bls	3d52c <flatcc_json_printer_double_vector_field@@Base+0x274>
   3d4c0:	cmp	r0, r1
   3d4c4:	bcc	3d4e0 <flatcc_json_printer_double_vector_field@@Base+0x228>
   3d4c8:	ldr	r2, [r4, #44]	; 0x2c
   3d4cc:	mov	r0, r4
   3d4d0:	mov	r1, #0
   3d4d4:	blx	r2
   3d4d8:	ldr	r1, [r4, #16]
   3d4dc:	ldr	r0, [r4, #20]
   3d4e0:	sub	r6, r1, r0
   3d4e4:	cmp	r6, r5
   3d4e8:	bcs	3d52c <flatcc_json_printer_double_vector_field@@Base+0x274>
   3d4ec:	mov	r1, #32
   3d4f0:	mov	r2, r6
   3d4f4:	bl	14eec <memset@plt>
   3d4f8:	ldr	r0, [r4, #20]
   3d4fc:	ldr	r2, [r4, #44]	; 0x2c
   3d500:	mov	r1, #0
   3d504:	add	r0, r0, r6
   3d508:	str	r0, [r4, #20]
   3d50c:	mov	r0, r4
   3d510:	blx	r2
   3d514:	ldr	r1, [r4, #16]
   3d518:	ldr	r0, [r4, #20]
   3d51c:	sub	r5, r5, r6
   3d520:	sub	r6, r1, r0
   3d524:	cmp	r5, r6
   3d528:	bhi	3d4ec <flatcc_json_printer_double_vector_field@@Base+0x234>
   3d52c:	mov	r1, #32
   3d530:	mov	r2, r5
   3d534:	bl	14eec <memset@plt>
   3d538:	ldr	r0, [r4, #20]
   3d53c:	add	r0, r0, r5
   3d540:	str	r0, [r4, #20]
   3d544:	b	3d568 <flatcc_json_printer_double_vector_field@@Base+0x2b0>
   3d548:	ldr	r1, [r4, #16]
   3d54c:	cmp	r0, r1
   3d550:	bcc	3d568 <flatcc_json_printer_double_vector_field@@Base+0x2b0>
   3d554:	ldr	r2, [r4, #44]	; 0x2c
   3d558:	mov	r0, r4
   3d55c:	mov	r1, #0
   3d560:	blx	r2
   3d564:	ldr	r0, [r4, #20]
   3d568:	vldr	d0, [r7]
   3d56c:	bl	36cc0 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d570:	ldr	r1, [r4, #20]
   3d574:	add	r7, r7, #8
   3d578:	cmp	r9, #0
   3d57c:	add	r0, r1, r0
   3d580:	str	r0, [r4, #20]
   3d584:	bne	3d474 <flatcc_json_printer_double_vector_field@@Base+0x1bc>
   3d588:	ldrb	r1, [r4, #25]
   3d58c:	ldr	r0, [r4, #20]
   3d590:	cmp	r1, #0
   3d594:	beq	3d654 <flatcc_json_printer_double_vector_field@@Base+0x39c>
   3d598:	add	r1, r0, #1
   3d59c:	str	r1, [r4, #20]
   3d5a0:	mov	r1, #10
   3d5a4:	strb	r1, [r0]
   3d5a8:	ldr	r0, [r4, #32]
   3d5ac:	sub	r2, r0, #1
   3d5b0:	str	r2, [r4, #32]
   3d5b4:	ldrb	r3, [r4, #25]
   3d5b8:	ldr	r0, [r4, #20]
   3d5bc:	ldr	r1, [r4, #16]
   3d5c0:	mla	r7, r2, r3, r0
   3d5c4:	mul	r5, r2, r3
   3d5c8:	cmp	r7, r1
   3d5cc:	bls	3d63c <flatcc_json_printer_double_vector_field@@Base+0x384>
   3d5d0:	cmp	r0, r1
   3d5d4:	bcc	3d5f0 <flatcc_json_printer_double_vector_field@@Base+0x338>
   3d5d8:	ldr	r2, [r4, #44]	; 0x2c
   3d5dc:	mov	r0, r4
   3d5e0:	mov	r1, #0
   3d5e4:	blx	r2
   3d5e8:	ldr	r1, [r4, #16]
   3d5ec:	ldr	r0, [r4, #20]
   3d5f0:	sub	r6, r1, r0
   3d5f4:	cmp	r6, r5
   3d5f8:	bcs	3d63c <flatcc_json_printer_double_vector_field@@Base+0x384>
   3d5fc:	mov	r1, #32
   3d600:	mov	r2, r6
   3d604:	bl	14eec <memset@plt>
   3d608:	ldr	r0, [r4, #20]
   3d60c:	ldr	r2, [r4, #44]	; 0x2c
   3d610:	mov	r1, #0
   3d614:	add	r0, r0, r6
   3d618:	str	r0, [r4, #20]
   3d61c:	mov	r0, r4
   3d620:	blx	r2
   3d624:	ldr	r1, [r4, #16]
   3d628:	ldr	r0, [r4, #20]
   3d62c:	sub	r5, r5, r6
   3d630:	sub	r6, r1, r0
   3d634:	cmp	r5, r6
   3d638:	bhi	3d5fc <flatcc_json_printer_double_vector_field@@Base+0x344>
   3d63c:	mov	r1, #32
   3d640:	mov	r2, r5
   3d644:	bl	14eec <memset@plt>
   3d648:	ldr	r0, [r4, #20]
   3d64c:	add	r0, r0, r5
   3d650:	str	r0, [r4, #20]
   3d654:	add	r1, r0, #1
   3d658:	str	r1, [r4, #20]
   3d65c:	mov	r1, #93	; 0x5d
   3d660:	strb	r1, [r0]
   3d664:	sub	sp, fp, #28
   3d668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d66c <flatcc_json_printer_utype_enum_vector_field@@Base>:
   3d66c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d670:	add	fp, sp, #28
   3d674:	sub	sp, sp, #4
   3d678:	mov	r4, r0
   3d67c:	ldrb	r0, [r0, #27]
   3d680:	cmp	r0, #0
   3d684:	beq	3d698 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   3d688:	mov	r0, r4
   3d68c:	sub	sp, fp, #28
   3d690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d694:	b	3a8ac <flatcc_json_printer_utype_vector_field@@Base>
   3d698:	mov	r0, #4
   3d69c:	add	r0, r0, r2, lsl #1
   3d6a0:	ldr	r2, [r1, #8]
   3d6a4:	cmp	r0, r2
   3d6a8:	bge	3da1c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   3d6ac:	ldr	r2, [r1, #4]
   3d6b0:	add	r0, r2, r0
   3d6b4:	ldrh	r0, [r0]
   3d6b8:	cmp	r0, #0
   3d6bc:	ldrne	r2, [r1]
   3d6c0:	addsne	r8, r2, r0
   3d6c4:	beq	3da1c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   3d6c8:	ldr	r0, [r1, #16]
   3d6cc:	ldr	sl, [fp, #12]
   3d6d0:	ldr	r2, [fp, #8]
   3d6d4:	add	r7, r0, #1
   3d6d8:	cmp	r0, #0
   3d6dc:	str	r7, [r1, #16]
   3d6e0:	beq	3d6f8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x8c>
   3d6e4:	ldr	r0, [r4, #20]
   3d6e8:	add	r1, r0, #1
   3d6ec:	str	r1, [r4, #20]
   3d6f0:	mov	r1, #44	; 0x2c
   3d6f4:	strb	r1, [r0]
   3d6f8:	ldr	r0, [r8]
   3d6fc:	mov	r1, r3
   3d700:	ldr	r9, [r8, r0]!
   3d704:	mov	r0, r4
   3d708:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3d70c:	ldr	r1, [r4, #32]
   3d710:	ldr	r0, [r4, #20]
   3d714:	cmp	r9, #0
   3d718:	add	r1, r1, #1
   3d71c:	str	r1, [r4, #32]
   3d720:	add	r1, r0, #1
   3d724:	str	r1, [r4, #20]
   3d728:	mov	r1, #91	; 0x5b
   3d72c:	strb	r1, [r0]
   3d730:	beq	3d940 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d4>
   3d734:	ldrb	r1, [r4, #25]
   3d738:	ldr	r0, [r4, #20]
   3d73c:	cmp	r1, #0
   3d740:	beq	3d7fc <flatcc_json_printer_utype_enum_vector_field@@Base+0x190>
   3d744:	add	r1, r0, #1
   3d748:	str	r1, [r4, #20]
   3d74c:	mov	r1, #10
   3d750:	strb	r1, [r0]
   3d754:	ldr	r0, [r4, #20]
   3d758:	ldrb	r2, [r4, #25]
   3d75c:	ldr	r3, [r4, #32]
   3d760:	ldr	r1, [r4, #16]
   3d764:	mla	r7, r3, r2, r0
   3d768:	mul	r5, r3, r2
   3d76c:	cmp	r7, r1
   3d770:	bls	3d7e0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x174>
   3d774:	cmp	r0, r1
   3d778:	bcc	3d794 <flatcc_json_printer_utype_enum_vector_field@@Base+0x128>
   3d77c:	ldr	r2, [r4, #44]	; 0x2c
   3d780:	mov	r0, r4
   3d784:	mov	r1, #0
   3d788:	blx	r2
   3d78c:	ldr	r1, [r4, #16]
   3d790:	ldr	r0, [r4, #20]
   3d794:	sub	r6, r1, r0
   3d798:	cmp	r6, r5
   3d79c:	bcs	3d7e0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x174>
   3d7a0:	mov	r1, #32
   3d7a4:	mov	r2, r6
   3d7a8:	bl	14eec <memset@plt>
   3d7ac:	ldr	r0, [r4, #20]
   3d7b0:	ldr	r2, [r4, #44]	; 0x2c
   3d7b4:	mov	r1, #0
   3d7b8:	add	r0, r0, r6
   3d7bc:	str	r0, [r4, #20]
   3d7c0:	mov	r0, r4
   3d7c4:	blx	r2
   3d7c8:	ldr	r1, [r4, #16]
   3d7cc:	ldr	r0, [r4, #20]
   3d7d0:	sub	r5, r5, r6
   3d7d4:	sub	r6, r1, r0
   3d7d8:	cmp	r5, r6
   3d7dc:	bhi	3d7a0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x134>
   3d7e0:	mov	r1, #32
   3d7e4:	mov	r2, r5
   3d7e8:	bl	14eec <memset@plt>
   3d7ec:	ldr	r0, [r4, #20]
   3d7f0:	add	r0, r0, r5
   3d7f4:	str	r0, [r4, #20]
   3d7f8:	b	3d818 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ac>
   3d7fc:	ldr	r1, [r4, #16]
   3d800:	cmp	r0, r1
   3d804:	bcc	3d818 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ac>
   3d808:	ldr	r2, [r4, #44]	; 0x2c
   3d80c:	mov	r0, r4
   3d810:	mov	r1, #0
   3d814:	blx	r2
   3d818:	ldrb	r1, [r8, #4]
   3d81c:	mov	r0, r4
   3d820:	blx	sl
   3d824:	subs	r9, r9, #1
   3d828:	beq	3d940 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d4>
   3d82c:	add	r7, r8, #5
   3d830:	mov	r8, #44	; 0x2c
   3d834:	ldr	r0, [r4, #20]
   3d838:	sub	r9, r9, #1
   3d83c:	add	r1, r0, #1
   3d840:	str	r1, [r4, #20]
   3d844:	strb	r8, [r0]
   3d848:	ldrb	r1, [r4, #25]
   3d84c:	ldr	r0, [r4, #20]
   3d850:	cmp	r1, #0
   3d854:	beq	3d910 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a4>
   3d858:	add	r1, r0, #1
   3d85c:	str	r1, [r4, #20]
   3d860:	mov	r1, #10
   3d864:	strb	r1, [r0]
   3d868:	ldr	r0, [r4, #20]
   3d86c:	ldrb	r2, [r4, #25]
   3d870:	ldr	r3, [r4, #32]
   3d874:	ldr	r1, [r4, #16]
   3d878:	mla	r6, r3, r2, r0
   3d87c:	mul	r5, r3, r2
   3d880:	cmp	r6, r1
   3d884:	bls	3d8f4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x288>
   3d888:	cmp	r0, r1
   3d88c:	bcc	3d8a8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x23c>
   3d890:	ldr	r2, [r4, #44]	; 0x2c
   3d894:	mov	r0, r4
   3d898:	mov	r1, #0
   3d89c:	blx	r2
   3d8a0:	ldr	r1, [r4, #16]
   3d8a4:	ldr	r0, [r4, #20]
   3d8a8:	sub	r6, r1, r0
   3d8ac:	cmp	r6, r5
   3d8b0:	bcs	3d8f4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x288>
   3d8b4:	mov	r1, #32
   3d8b8:	mov	r2, r6
   3d8bc:	bl	14eec <memset@plt>
   3d8c0:	ldr	r0, [r4, #20]
   3d8c4:	ldr	r2, [r4, #44]	; 0x2c
   3d8c8:	mov	r1, #0
   3d8cc:	add	r0, r0, r6
   3d8d0:	str	r0, [r4, #20]
   3d8d4:	mov	r0, r4
   3d8d8:	blx	r2
   3d8dc:	ldr	r1, [r4, #16]
   3d8e0:	ldr	r0, [r4, #20]
   3d8e4:	sub	r5, r5, r6
   3d8e8:	sub	r6, r1, r0
   3d8ec:	cmp	r5, r6
   3d8f0:	bhi	3d8b4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x248>
   3d8f4:	mov	r1, #32
   3d8f8:	mov	r2, r5
   3d8fc:	bl	14eec <memset@plt>
   3d900:	ldr	r0, [r4, #20]
   3d904:	add	r0, r0, r5
   3d908:	str	r0, [r4, #20]
   3d90c:	b	3d92c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c0>
   3d910:	ldr	r1, [r4, #16]
   3d914:	cmp	r0, r1
   3d918:	bcc	3d92c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c0>
   3d91c:	ldr	r2, [r4, #44]	; 0x2c
   3d920:	mov	r0, r4
   3d924:	mov	r1, #0
   3d928:	blx	r2
   3d92c:	ldrb	r1, [r7], #1
   3d930:	mov	r0, r4
   3d934:	blx	sl
   3d938:	cmp	r9, #0
   3d93c:	bne	3d834 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c8>
   3d940:	ldrb	r1, [r4, #25]
   3d944:	ldr	r0, [r4, #20]
   3d948:	cmp	r1, #0
   3d94c:	beq	3da0c <flatcc_json_printer_utype_enum_vector_field@@Base+0x3a0>
   3d950:	add	r1, r0, #1
   3d954:	str	r1, [r4, #20]
   3d958:	mov	r1, #10
   3d95c:	strb	r1, [r0]
   3d960:	ldr	r0, [r4, #32]
   3d964:	sub	r2, r0, #1
   3d968:	str	r2, [r4, #32]
   3d96c:	ldrb	r3, [r4, #25]
   3d970:	ldr	r0, [r4, #20]
   3d974:	ldr	r1, [r4, #16]
   3d978:	mla	r7, r2, r3, r0
   3d97c:	mul	r5, r2, r3
   3d980:	cmp	r7, r1
   3d984:	bls	3d9f4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x388>
   3d988:	cmp	r0, r1
   3d98c:	bcc	3d9a8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x33c>
   3d990:	ldr	r2, [r4, #44]	; 0x2c
   3d994:	mov	r0, r4
   3d998:	mov	r1, #0
   3d99c:	blx	r2
   3d9a0:	ldr	r1, [r4, #16]
   3d9a4:	ldr	r0, [r4, #20]
   3d9a8:	sub	r6, r1, r0
   3d9ac:	cmp	r6, r5
   3d9b0:	bcs	3d9f4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x388>
   3d9b4:	mov	r1, #32
   3d9b8:	mov	r2, r6
   3d9bc:	bl	14eec <memset@plt>
   3d9c0:	ldr	r0, [r4, #20]
   3d9c4:	ldr	r2, [r4, #44]	; 0x2c
   3d9c8:	mov	r1, #0
   3d9cc:	add	r0, r0, r6
   3d9d0:	str	r0, [r4, #20]
   3d9d4:	mov	r0, r4
   3d9d8:	blx	r2
   3d9dc:	ldr	r1, [r4, #16]
   3d9e0:	ldr	r0, [r4, #20]
   3d9e4:	sub	r5, r5, r6
   3d9e8:	sub	r6, r1, r0
   3d9ec:	cmp	r5, r6
   3d9f0:	bhi	3d9b4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x348>
   3d9f4:	mov	r1, #32
   3d9f8:	mov	r2, r5
   3d9fc:	bl	14eec <memset@plt>
   3da00:	ldr	r0, [r4, #20]
   3da04:	add	r0, r0, r5
   3da08:	str	r0, [r4, #20]
   3da0c:	add	r1, r0, #1
   3da10:	str	r1, [r4, #20]
   3da14:	mov	r1, #93	; 0x5d
   3da18:	strb	r1, [r0]
   3da1c:	sub	sp, fp, #28
   3da20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003da24 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   3da24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3da28:	add	fp, sp, #28
   3da2c:	sub	sp, sp, #4
   3da30:	mov	r4, r0
   3da34:	ldrb	r0, [r0, #27]
   3da38:	cmp	r0, #0
   3da3c:	beq	3da50 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   3da40:	mov	r0, r4
   3da44:	sub	sp, fp, #28
   3da48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3da4c:	b	3ac5c <flatcc_json_printer_uint8_vector_field@@Base>
   3da50:	mov	r0, #4
   3da54:	add	r0, r0, r2, lsl #1
   3da58:	ldr	r2, [r1, #8]
   3da5c:	cmp	r0, r2
   3da60:	bge	3ddd4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   3da64:	ldr	r2, [r1, #4]
   3da68:	add	r0, r2, r0
   3da6c:	ldrh	r0, [r0]
   3da70:	cmp	r0, #0
   3da74:	ldrne	r2, [r1]
   3da78:	addsne	r8, r2, r0
   3da7c:	beq	3ddd4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   3da80:	ldr	r0, [r1, #16]
   3da84:	ldr	sl, [fp, #12]
   3da88:	ldr	r2, [fp, #8]
   3da8c:	add	r7, r0, #1
   3da90:	cmp	r0, #0
   3da94:	str	r7, [r1, #16]
   3da98:	beq	3dab0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x8c>
   3da9c:	ldr	r0, [r4, #20]
   3daa0:	add	r1, r0, #1
   3daa4:	str	r1, [r4, #20]
   3daa8:	mov	r1, #44	; 0x2c
   3daac:	strb	r1, [r0]
   3dab0:	ldr	r0, [r8]
   3dab4:	mov	r1, r3
   3dab8:	ldr	r9, [r8, r0]!
   3dabc:	mov	r0, r4
   3dac0:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3dac4:	ldr	r1, [r4, #32]
   3dac8:	ldr	r0, [r4, #20]
   3dacc:	cmp	r9, #0
   3dad0:	add	r1, r1, #1
   3dad4:	str	r1, [r4, #32]
   3dad8:	add	r1, r0, #1
   3dadc:	str	r1, [r4, #20]
   3dae0:	mov	r1, #91	; 0x5b
   3dae4:	strb	r1, [r0]
   3dae8:	beq	3dcf8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d4>
   3daec:	ldrb	r1, [r4, #25]
   3daf0:	ldr	r0, [r4, #20]
   3daf4:	cmp	r1, #0
   3daf8:	beq	3dbb4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x190>
   3dafc:	add	r1, r0, #1
   3db00:	str	r1, [r4, #20]
   3db04:	mov	r1, #10
   3db08:	strb	r1, [r0]
   3db0c:	ldr	r0, [r4, #20]
   3db10:	ldrb	r2, [r4, #25]
   3db14:	ldr	r3, [r4, #32]
   3db18:	ldr	r1, [r4, #16]
   3db1c:	mla	r7, r3, r2, r0
   3db20:	mul	r5, r3, r2
   3db24:	cmp	r7, r1
   3db28:	bls	3db98 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x174>
   3db2c:	cmp	r0, r1
   3db30:	bcc	3db4c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x128>
   3db34:	ldr	r2, [r4, #44]	; 0x2c
   3db38:	mov	r0, r4
   3db3c:	mov	r1, #0
   3db40:	blx	r2
   3db44:	ldr	r1, [r4, #16]
   3db48:	ldr	r0, [r4, #20]
   3db4c:	sub	r6, r1, r0
   3db50:	cmp	r6, r5
   3db54:	bcs	3db98 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x174>
   3db58:	mov	r1, #32
   3db5c:	mov	r2, r6
   3db60:	bl	14eec <memset@plt>
   3db64:	ldr	r0, [r4, #20]
   3db68:	ldr	r2, [r4, #44]	; 0x2c
   3db6c:	mov	r1, #0
   3db70:	add	r0, r0, r6
   3db74:	str	r0, [r4, #20]
   3db78:	mov	r0, r4
   3db7c:	blx	r2
   3db80:	ldr	r1, [r4, #16]
   3db84:	ldr	r0, [r4, #20]
   3db88:	sub	r5, r5, r6
   3db8c:	sub	r6, r1, r0
   3db90:	cmp	r5, r6
   3db94:	bhi	3db58 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x134>
   3db98:	mov	r1, #32
   3db9c:	mov	r2, r5
   3dba0:	bl	14eec <memset@plt>
   3dba4:	ldr	r0, [r4, #20]
   3dba8:	add	r0, r0, r5
   3dbac:	str	r0, [r4, #20]
   3dbb0:	b	3dbd0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   3dbb4:	ldr	r1, [r4, #16]
   3dbb8:	cmp	r0, r1
   3dbbc:	bcc	3dbd0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   3dbc0:	ldr	r2, [r4, #44]	; 0x2c
   3dbc4:	mov	r0, r4
   3dbc8:	mov	r1, #0
   3dbcc:	blx	r2
   3dbd0:	ldrb	r1, [r8, #4]
   3dbd4:	mov	r0, r4
   3dbd8:	blx	sl
   3dbdc:	subs	r9, r9, #1
   3dbe0:	beq	3dcf8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d4>
   3dbe4:	add	r7, r8, #5
   3dbe8:	mov	r8, #44	; 0x2c
   3dbec:	ldr	r0, [r4, #20]
   3dbf0:	sub	r9, r9, #1
   3dbf4:	add	r1, r0, #1
   3dbf8:	str	r1, [r4, #20]
   3dbfc:	strb	r8, [r0]
   3dc00:	ldrb	r1, [r4, #25]
   3dc04:	ldr	r0, [r4, #20]
   3dc08:	cmp	r1, #0
   3dc0c:	beq	3dcc8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a4>
   3dc10:	add	r1, r0, #1
   3dc14:	str	r1, [r4, #20]
   3dc18:	mov	r1, #10
   3dc1c:	strb	r1, [r0]
   3dc20:	ldr	r0, [r4, #20]
   3dc24:	ldrb	r2, [r4, #25]
   3dc28:	ldr	r3, [r4, #32]
   3dc2c:	ldr	r1, [r4, #16]
   3dc30:	mla	r6, r3, r2, r0
   3dc34:	mul	r5, r3, r2
   3dc38:	cmp	r6, r1
   3dc3c:	bls	3dcac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x288>
   3dc40:	cmp	r0, r1
   3dc44:	bcc	3dc60 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x23c>
   3dc48:	ldr	r2, [r4, #44]	; 0x2c
   3dc4c:	mov	r0, r4
   3dc50:	mov	r1, #0
   3dc54:	blx	r2
   3dc58:	ldr	r1, [r4, #16]
   3dc5c:	ldr	r0, [r4, #20]
   3dc60:	sub	r6, r1, r0
   3dc64:	cmp	r6, r5
   3dc68:	bcs	3dcac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x288>
   3dc6c:	mov	r1, #32
   3dc70:	mov	r2, r6
   3dc74:	bl	14eec <memset@plt>
   3dc78:	ldr	r0, [r4, #20]
   3dc7c:	ldr	r2, [r4, #44]	; 0x2c
   3dc80:	mov	r1, #0
   3dc84:	add	r0, r0, r6
   3dc88:	str	r0, [r4, #20]
   3dc8c:	mov	r0, r4
   3dc90:	blx	r2
   3dc94:	ldr	r1, [r4, #16]
   3dc98:	ldr	r0, [r4, #20]
   3dc9c:	sub	r5, r5, r6
   3dca0:	sub	r6, r1, r0
   3dca4:	cmp	r5, r6
   3dca8:	bhi	3dc6c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x248>
   3dcac:	mov	r1, #32
   3dcb0:	mov	r2, r5
   3dcb4:	bl	14eec <memset@plt>
   3dcb8:	ldr	r0, [r4, #20]
   3dcbc:	add	r0, r0, r5
   3dcc0:	str	r0, [r4, #20]
   3dcc4:	b	3dce4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c0>
   3dcc8:	ldr	r1, [r4, #16]
   3dccc:	cmp	r0, r1
   3dcd0:	bcc	3dce4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c0>
   3dcd4:	ldr	r2, [r4, #44]	; 0x2c
   3dcd8:	mov	r0, r4
   3dcdc:	mov	r1, #0
   3dce0:	blx	r2
   3dce4:	ldrb	r1, [r7], #1
   3dce8:	mov	r0, r4
   3dcec:	blx	sl
   3dcf0:	cmp	r9, #0
   3dcf4:	bne	3dbec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c8>
   3dcf8:	ldrb	r1, [r4, #25]
   3dcfc:	ldr	r0, [r4, #20]
   3dd00:	cmp	r1, #0
   3dd04:	beq	3ddc4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3a0>
   3dd08:	add	r1, r0, #1
   3dd0c:	str	r1, [r4, #20]
   3dd10:	mov	r1, #10
   3dd14:	strb	r1, [r0]
   3dd18:	ldr	r0, [r4, #32]
   3dd1c:	sub	r2, r0, #1
   3dd20:	str	r2, [r4, #32]
   3dd24:	ldrb	r3, [r4, #25]
   3dd28:	ldr	r0, [r4, #20]
   3dd2c:	ldr	r1, [r4, #16]
   3dd30:	mla	r7, r2, r3, r0
   3dd34:	mul	r5, r2, r3
   3dd38:	cmp	r7, r1
   3dd3c:	bls	3ddac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x388>
   3dd40:	cmp	r0, r1
   3dd44:	bcc	3dd60 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x33c>
   3dd48:	ldr	r2, [r4, #44]	; 0x2c
   3dd4c:	mov	r0, r4
   3dd50:	mov	r1, #0
   3dd54:	blx	r2
   3dd58:	ldr	r1, [r4, #16]
   3dd5c:	ldr	r0, [r4, #20]
   3dd60:	sub	r6, r1, r0
   3dd64:	cmp	r6, r5
   3dd68:	bcs	3ddac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x388>
   3dd6c:	mov	r1, #32
   3dd70:	mov	r2, r6
   3dd74:	bl	14eec <memset@plt>
   3dd78:	ldr	r0, [r4, #20]
   3dd7c:	ldr	r2, [r4, #44]	; 0x2c
   3dd80:	mov	r1, #0
   3dd84:	add	r0, r0, r6
   3dd88:	str	r0, [r4, #20]
   3dd8c:	mov	r0, r4
   3dd90:	blx	r2
   3dd94:	ldr	r1, [r4, #16]
   3dd98:	ldr	r0, [r4, #20]
   3dd9c:	sub	r5, r5, r6
   3dda0:	sub	r6, r1, r0
   3dda4:	cmp	r5, r6
   3dda8:	bhi	3dd6c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x348>
   3ddac:	mov	r1, #32
   3ddb0:	mov	r2, r5
   3ddb4:	bl	14eec <memset@plt>
   3ddb8:	ldr	r0, [r4, #20]
   3ddbc:	add	r0, r0, r5
   3ddc0:	str	r0, [r4, #20]
   3ddc4:	add	r1, r0, #1
   3ddc8:	str	r1, [r4, #20]
   3ddcc:	mov	r1, #93	; 0x5d
   3ddd0:	strb	r1, [r0]
   3ddd4:	sub	sp, fp, #28
   3ddd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003dddc <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   3dddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dde0:	add	fp, sp, #28
   3dde4:	sub	sp, sp, #4
   3dde8:	mov	r4, r0
   3ddec:	ldrb	r0, [r0, #27]
   3ddf0:	cmp	r0, #0
   3ddf4:	beq	3de08 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   3ddf8:	mov	r0, r4
   3ddfc:	sub	sp, fp, #28
   3de00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3de04:	b	3b00c <flatcc_json_printer_uint16_vector_field@@Base>
   3de08:	mov	r0, #4
   3de0c:	add	r0, r0, r2, lsl #1
   3de10:	ldr	r2, [r1, #8]
   3de14:	cmp	r0, r2
   3de18:	bge	3e18c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   3de1c:	ldr	r2, [r1, #4]
   3de20:	add	r0, r2, r0
   3de24:	ldrh	r0, [r0]
   3de28:	cmp	r0, #0
   3de2c:	ldrne	r2, [r1]
   3de30:	addsne	r8, r2, r0
   3de34:	beq	3e18c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   3de38:	ldr	r0, [r1, #16]
   3de3c:	ldr	sl, [fp, #12]
   3de40:	ldr	r2, [fp, #8]
   3de44:	add	r7, r0, #1
   3de48:	cmp	r0, #0
   3de4c:	str	r7, [r1, #16]
   3de50:	beq	3de68 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x8c>
   3de54:	ldr	r0, [r4, #20]
   3de58:	add	r1, r0, #1
   3de5c:	str	r1, [r4, #20]
   3de60:	mov	r1, #44	; 0x2c
   3de64:	strb	r1, [r0]
   3de68:	ldr	r0, [r8]
   3de6c:	mov	r1, r3
   3de70:	ldr	r9, [r8, r0]!
   3de74:	mov	r0, r4
   3de78:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3de7c:	ldr	r1, [r4, #32]
   3de80:	ldr	r0, [r4, #20]
   3de84:	cmp	r9, #0
   3de88:	add	r1, r1, #1
   3de8c:	str	r1, [r4, #32]
   3de90:	add	r1, r0, #1
   3de94:	str	r1, [r4, #20]
   3de98:	mov	r1, #91	; 0x5b
   3de9c:	strb	r1, [r0]
   3dea0:	beq	3e0b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d4>
   3dea4:	ldrb	r1, [r4, #25]
   3dea8:	ldr	r0, [r4, #20]
   3deac:	cmp	r1, #0
   3deb0:	beq	3df6c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x190>
   3deb4:	add	r1, r0, #1
   3deb8:	str	r1, [r4, #20]
   3debc:	mov	r1, #10
   3dec0:	strb	r1, [r0]
   3dec4:	ldr	r0, [r4, #20]
   3dec8:	ldrb	r2, [r4, #25]
   3decc:	ldr	r3, [r4, #32]
   3ded0:	ldr	r1, [r4, #16]
   3ded4:	mla	r7, r3, r2, r0
   3ded8:	mul	r5, r3, r2
   3dedc:	cmp	r7, r1
   3dee0:	bls	3df50 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x174>
   3dee4:	cmp	r0, r1
   3dee8:	bcc	3df04 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x128>
   3deec:	ldr	r2, [r4, #44]	; 0x2c
   3def0:	mov	r0, r4
   3def4:	mov	r1, #0
   3def8:	blx	r2
   3defc:	ldr	r1, [r4, #16]
   3df00:	ldr	r0, [r4, #20]
   3df04:	sub	r6, r1, r0
   3df08:	cmp	r6, r5
   3df0c:	bcs	3df50 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x174>
   3df10:	mov	r1, #32
   3df14:	mov	r2, r6
   3df18:	bl	14eec <memset@plt>
   3df1c:	ldr	r0, [r4, #20]
   3df20:	ldr	r2, [r4, #44]	; 0x2c
   3df24:	mov	r1, #0
   3df28:	add	r0, r0, r6
   3df2c:	str	r0, [r4, #20]
   3df30:	mov	r0, r4
   3df34:	blx	r2
   3df38:	ldr	r1, [r4, #16]
   3df3c:	ldr	r0, [r4, #20]
   3df40:	sub	r5, r5, r6
   3df44:	sub	r6, r1, r0
   3df48:	cmp	r5, r6
   3df4c:	bhi	3df10 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x134>
   3df50:	mov	r1, #32
   3df54:	mov	r2, r5
   3df58:	bl	14eec <memset@plt>
   3df5c:	ldr	r0, [r4, #20]
   3df60:	add	r0, r0, r5
   3df64:	str	r0, [r4, #20]
   3df68:	b	3df88 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ac>
   3df6c:	ldr	r1, [r4, #16]
   3df70:	cmp	r0, r1
   3df74:	bcc	3df88 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ac>
   3df78:	ldr	r2, [r4, #44]	; 0x2c
   3df7c:	mov	r0, r4
   3df80:	mov	r1, #0
   3df84:	blx	r2
   3df88:	ldrh	r1, [r8, #4]
   3df8c:	mov	r0, r4
   3df90:	blx	sl
   3df94:	subs	r9, r9, #1
   3df98:	beq	3e0b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d4>
   3df9c:	add	r7, r8, #6
   3dfa0:	mov	r8, #44	; 0x2c
   3dfa4:	ldr	r0, [r4, #20]
   3dfa8:	sub	r9, r9, #1
   3dfac:	add	r1, r0, #1
   3dfb0:	str	r1, [r4, #20]
   3dfb4:	strb	r8, [r0]
   3dfb8:	ldrb	r1, [r4, #25]
   3dfbc:	ldr	r0, [r4, #20]
   3dfc0:	cmp	r1, #0
   3dfc4:	beq	3e080 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a4>
   3dfc8:	add	r1, r0, #1
   3dfcc:	str	r1, [r4, #20]
   3dfd0:	mov	r1, #10
   3dfd4:	strb	r1, [r0]
   3dfd8:	ldr	r0, [r4, #20]
   3dfdc:	ldrb	r2, [r4, #25]
   3dfe0:	ldr	r3, [r4, #32]
   3dfe4:	ldr	r1, [r4, #16]
   3dfe8:	mla	r6, r3, r2, r0
   3dfec:	mul	r5, r3, r2
   3dff0:	cmp	r6, r1
   3dff4:	bls	3e064 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x288>
   3dff8:	cmp	r0, r1
   3dffc:	bcc	3e018 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x23c>
   3e000:	ldr	r2, [r4, #44]	; 0x2c
   3e004:	mov	r0, r4
   3e008:	mov	r1, #0
   3e00c:	blx	r2
   3e010:	ldr	r1, [r4, #16]
   3e014:	ldr	r0, [r4, #20]
   3e018:	sub	r6, r1, r0
   3e01c:	cmp	r6, r5
   3e020:	bcs	3e064 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x288>
   3e024:	mov	r1, #32
   3e028:	mov	r2, r6
   3e02c:	bl	14eec <memset@plt>
   3e030:	ldr	r0, [r4, #20]
   3e034:	ldr	r2, [r4, #44]	; 0x2c
   3e038:	mov	r1, #0
   3e03c:	add	r0, r0, r6
   3e040:	str	r0, [r4, #20]
   3e044:	mov	r0, r4
   3e048:	blx	r2
   3e04c:	ldr	r1, [r4, #16]
   3e050:	ldr	r0, [r4, #20]
   3e054:	sub	r5, r5, r6
   3e058:	sub	r6, r1, r0
   3e05c:	cmp	r5, r6
   3e060:	bhi	3e024 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x248>
   3e064:	mov	r1, #32
   3e068:	mov	r2, r5
   3e06c:	bl	14eec <memset@plt>
   3e070:	ldr	r0, [r4, #20]
   3e074:	add	r0, r0, r5
   3e078:	str	r0, [r4, #20]
   3e07c:	b	3e09c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c0>
   3e080:	ldr	r1, [r4, #16]
   3e084:	cmp	r0, r1
   3e088:	bcc	3e09c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c0>
   3e08c:	ldr	r2, [r4, #44]	; 0x2c
   3e090:	mov	r0, r4
   3e094:	mov	r1, #0
   3e098:	blx	r2
   3e09c:	ldrh	r1, [r7], #2
   3e0a0:	mov	r0, r4
   3e0a4:	blx	sl
   3e0a8:	cmp	r9, #0
   3e0ac:	bne	3dfa4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c8>
   3e0b0:	ldrb	r1, [r4, #25]
   3e0b4:	ldr	r0, [r4, #20]
   3e0b8:	cmp	r1, #0
   3e0bc:	beq	3e17c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3a0>
   3e0c0:	add	r1, r0, #1
   3e0c4:	str	r1, [r4, #20]
   3e0c8:	mov	r1, #10
   3e0cc:	strb	r1, [r0]
   3e0d0:	ldr	r0, [r4, #32]
   3e0d4:	sub	r2, r0, #1
   3e0d8:	str	r2, [r4, #32]
   3e0dc:	ldrb	r3, [r4, #25]
   3e0e0:	ldr	r0, [r4, #20]
   3e0e4:	ldr	r1, [r4, #16]
   3e0e8:	mla	r7, r2, r3, r0
   3e0ec:	mul	r5, r2, r3
   3e0f0:	cmp	r7, r1
   3e0f4:	bls	3e164 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x388>
   3e0f8:	cmp	r0, r1
   3e0fc:	bcc	3e118 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x33c>
   3e100:	ldr	r2, [r4, #44]	; 0x2c
   3e104:	mov	r0, r4
   3e108:	mov	r1, #0
   3e10c:	blx	r2
   3e110:	ldr	r1, [r4, #16]
   3e114:	ldr	r0, [r4, #20]
   3e118:	sub	r6, r1, r0
   3e11c:	cmp	r6, r5
   3e120:	bcs	3e164 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x388>
   3e124:	mov	r1, #32
   3e128:	mov	r2, r6
   3e12c:	bl	14eec <memset@plt>
   3e130:	ldr	r0, [r4, #20]
   3e134:	ldr	r2, [r4, #44]	; 0x2c
   3e138:	mov	r1, #0
   3e13c:	add	r0, r0, r6
   3e140:	str	r0, [r4, #20]
   3e144:	mov	r0, r4
   3e148:	blx	r2
   3e14c:	ldr	r1, [r4, #16]
   3e150:	ldr	r0, [r4, #20]
   3e154:	sub	r5, r5, r6
   3e158:	sub	r6, r1, r0
   3e15c:	cmp	r5, r6
   3e160:	bhi	3e124 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x348>
   3e164:	mov	r1, #32
   3e168:	mov	r2, r5
   3e16c:	bl	14eec <memset@plt>
   3e170:	ldr	r0, [r4, #20]
   3e174:	add	r0, r0, r5
   3e178:	str	r0, [r4, #20]
   3e17c:	add	r1, r0, #1
   3e180:	str	r1, [r4, #20]
   3e184:	mov	r1, #93	; 0x5d
   3e188:	strb	r1, [r0]
   3e18c:	sub	sp, fp, #28
   3e190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e194 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   3e194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e198:	add	fp, sp, #28
   3e19c:	sub	sp, sp, #4
   3e1a0:	mov	r4, r0
   3e1a4:	ldrb	r0, [r0, #27]
   3e1a8:	cmp	r0, #0
   3e1ac:	beq	3e1c0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   3e1b0:	mov	r0, r4
   3e1b4:	sub	sp, fp, #28
   3e1b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e1bc:	b	3b3bc <flatcc_json_printer_uint32_vector_field@@Base>
   3e1c0:	mov	r0, #4
   3e1c4:	add	r0, r0, r2, lsl #1
   3e1c8:	ldr	r2, [r1, #8]
   3e1cc:	cmp	r0, r2
   3e1d0:	bge	3e544 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   3e1d4:	ldr	r2, [r1, #4]
   3e1d8:	add	r0, r2, r0
   3e1dc:	ldrh	r0, [r0]
   3e1e0:	cmp	r0, #0
   3e1e4:	ldrne	r2, [r1]
   3e1e8:	addsne	r8, r2, r0
   3e1ec:	beq	3e544 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   3e1f0:	ldr	r0, [r1, #16]
   3e1f4:	ldr	sl, [fp, #12]
   3e1f8:	ldr	r2, [fp, #8]
   3e1fc:	add	r7, r0, #1
   3e200:	cmp	r0, #0
   3e204:	str	r7, [r1, #16]
   3e208:	beq	3e220 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x8c>
   3e20c:	ldr	r0, [r4, #20]
   3e210:	add	r1, r0, #1
   3e214:	str	r1, [r4, #20]
   3e218:	mov	r1, #44	; 0x2c
   3e21c:	strb	r1, [r0]
   3e220:	ldr	r0, [r8]
   3e224:	mov	r1, r3
   3e228:	ldr	r9, [r8, r0]!
   3e22c:	mov	r0, r4
   3e230:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3e234:	ldr	r1, [r4, #32]
   3e238:	ldr	r0, [r4, #20]
   3e23c:	cmp	r9, #0
   3e240:	add	r1, r1, #1
   3e244:	str	r1, [r4, #32]
   3e248:	add	r1, r0, #1
   3e24c:	str	r1, [r4, #20]
   3e250:	mov	r1, #91	; 0x5b
   3e254:	strb	r1, [r0]
   3e258:	beq	3e468 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d4>
   3e25c:	ldrb	r1, [r4, #25]
   3e260:	ldr	r0, [r4, #20]
   3e264:	cmp	r1, #0
   3e268:	beq	3e324 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x190>
   3e26c:	add	r1, r0, #1
   3e270:	str	r1, [r4, #20]
   3e274:	mov	r1, #10
   3e278:	strb	r1, [r0]
   3e27c:	ldr	r0, [r4, #20]
   3e280:	ldrb	r2, [r4, #25]
   3e284:	ldr	r3, [r4, #32]
   3e288:	ldr	r1, [r4, #16]
   3e28c:	mla	r7, r3, r2, r0
   3e290:	mul	r5, r3, r2
   3e294:	cmp	r7, r1
   3e298:	bls	3e308 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x174>
   3e29c:	cmp	r0, r1
   3e2a0:	bcc	3e2bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x128>
   3e2a4:	ldr	r2, [r4, #44]	; 0x2c
   3e2a8:	mov	r0, r4
   3e2ac:	mov	r1, #0
   3e2b0:	blx	r2
   3e2b4:	ldr	r1, [r4, #16]
   3e2b8:	ldr	r0, [r4, #20]
   3e2bc:	sub	r6, r1, r0
   3e2c0:	cmp	r6, r5
   3e2c4:	bcs	3e308 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x174>
   3e2c8:	mov	r1, #32
   3e2cc:	mov	r2, r6
   3e2d0:	bl	14eec <memset@plt>
   3e2d4:	ldr	r0, [r4, #20]
   3e2d8:	ldr	r2, [r4, #44]	; 0x2c
   3e2dc:	mov	r1, #0
   3e2e0:	add	r0, r0, r6
   3e2e4:	str	r0, [r4, #20]
   3e2e8:	mov	r0, r4
   3e2ec:	blx	r2
   3e2f0:	ldr	r1, [r4, #16]
   3e2f4:	ldr	r0, [r4, #20]
   3e2f8:	sub	r5, r5, r6
   3e2fc:	sub	r6, r1, r0
   3e300:	cmp	r5, r6
   3e304:	bhi	3e2c8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x134>
   3e308:	mov	r1, #32
   3e30c:	mov	r2, r5
   3e310:	bl	14eec <memset@plt>
   3e314:	ldr	r0, [r4, #20]
   3e318:	add	r0, r0, r5
   3e31c:	str	r0, [r4, #20]
   3e320:	b	3e340 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   3e324:	ldr	r1, [r4, #16]
   3e328:	cmp	r0, r1
   3e32c:	bcc	3e340 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   3e330:	ldr	r2, [r4, #44]	; 0x2c
   3e334:	mov	r0, r4
   3e338:	mov	r1, #0
   3e33c:	blx	r2
   3e340:	ldr	r1, [r8, #4]
   3e344:	mov	r0, r4
   3e348:	blx	sl
   3e34c:	subs	r9, r9, #1
   3e350:	beq	3e468 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d4>
   3e354:	add	r7, r8, #8
   3e358:	mov	r8, #44	; 0x2c
   3e35c:	ldr	r0, [r4, #20]
   3e360:	sub	r9, r9, #1
   3e364:	add	r1, r0, #1
   3e368:	str	r1, [r4, #20]
   3e36c:	strb	r8, [r0]
   3e370:	ldrb	r1, [r4, #25]
   3e374:	ldr	r0, [r4, #20]
   3e378:	cmp	r1, #0
   3e37c:	beq	3e438 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a4>
   3e380:	add	r1, r0, #1
   3e384:	str	r1, [r4, #20]
   3e388:	mov	r1, #10
   3e38c:	strb	r1, [r0]
   3e390:	ldr	r0, [r4, #20]
   3e394:	ldrb	r2, [r4, #25]
   3e398:	ldr	r3, [r4, #32]
   3e39c:	ldr	r1, [r4, #16]
   3e3a0:	mla	r6, r3, r2, r0
   3e3a4:	mul	r5, r3, r2
   3e3a8:	cmp	r6, r1
   3e3ac:	bls	3e41c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   3e3b0:	cmp	r0, r1
   3e3b4:	bcc	3e3d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x23c>
   3e3b8:	ldr	r2, [r4, #44]	; 0x2c
   3e3bc:	mov	r0, r4
   3e3c0:	mov	r1, #0
   3e3c4:	blx	r2
   3e3c8:	ldr	r1, [r4, #16]
   3e3cc:	ldr	r0, [r4, #20]
   3e3d0:	sub	r6, r1, r0
   3e3d4:	cmp	r6, r5
   3e3d8:	bcs	3e41c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   3e3dc:	mov	r1, #32
   3e3e0:	mov	r2, r6
   3e3e4:	bl	14eec <memset@plt>
   3e3e8:	ldr	r0, [r4, #20]
   3e3ec:	ldr	r2, [r4, #44]	; 0x2c
   3e3f0:	mov	r1, #0
   3e3f4:	add	r0, r0, r6
   3e3f8:	str	r0, [r4, #20]
   3e3fc:	mov	r0, r4
   3e400:	blx	r2
   3e404:	ldr	r1, [r4, #16]
   3e408:	ldr	r0, [r4, #20]
   3e40c:	sub	r5, r5, r6
   3e410:	sub	r6, r1, r0
   3e414:	cmp	r5, r6
   3e418:	bhi	3e3dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x248>
   3e41c:	mov	r1, #32
   3e420:	mov	r2, r5
   3e424:	bl	14eec <memset@plt>
   3e428:	ldr	r0, [r4, #20]
   3e42c:	add	r0, r0, r5
   3e430:	str	r0, [r4, #20]
   3e434:	b	3e454 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c0>
   3e438:	ldr	r1, [r4, #16]
   3e43c:	cmp	r0, r1
   3e440:	bcc	3e454 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c0>
   3e444:	ldr	r2, [r4, #44]	; 0x2c
   3e448:	mov	r0, r4
   3e44c:	mov	r1, #0
   3e450:	blx	r2
   3e454:	ldr	r1, [r7], #4
   3e458:	mov	r0, r4
   3e45c:	blx	sl
   3e460:	cmp	r9, #0
   3e464:	bne	3e35c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c8>
   3e468:	ldrb	r1, [r4, #25]
   3e46c:	ldr	r0, [r4, #20]
   3e470:	cmp	r1, #0
   3e474:	beq	3e534 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3a0>
   3e478:	add	r1, r0, #1
   3e47c:	str	r1, [r4, #20]
   3e480:	mov	r1, #10
   3e484:	strb	r1, [r0]
   3e488:	ldr	r0, [r4, #32]
   3e48c:	sub	r2, r0, #1
   3e490:	str	r2, [r4, #32]
   3e494:	ldrb	r3, [r4, #25]
   3e498:	ldr	r0, [r4, #20]
   3e49c:	ldr	r1, [r4, #16]
   3e4a0:	mla	r7, r2, r3, r0
   3e4a4:	mul	r5, r2, r3
   3e4a8:	cmp	r7, r1
   3e4ac:	bls	3e51c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x388>
   3e4b0:	cmp	r0, r1
   3e4b4:	bcc	3e4d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x33c>
   3e4b8:	ldr	r2, [r4, #44]	; 0x2c
   3e4bc:	mov	r0, r4
   3e4c0:	mov	r1, #0
   3e4c4:	blx	r2
   3e4c8:	ldr	r1, [r4, #16]
   3e4cc:	ldr	r0, [r4, #20]
   3e4d0:	sub	r6, r1, r0
   3e4d4:	cmp	r6, r5
   3e4d8:	bcs	3e51c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x388>
   3e4dc:	mov	r1, #32
   3e4e0:	mov	r2, r6
   3e4e4:	bl	14eec <memset@plt>
   3e4e8:	ldr	r0, [r4, #20]
   3e4ec:	ldr	r2, [r4, #44]	; 0x2c
   3e4f0:	mov	r1, #0
   3e4f4:	add	r0, r0, r6
   3e4f8:	str	r0, [r4, #20]
   3e4fc:	mov	r0, r4
   3e500:	blx	r2
   3e504:	ldr	r1, [r4, #16]
   3e508:	ldr	r0, [r4, #20]
   3e50c:	sub	r5, r5, r6
   3e510:	sub	r6, r1, r0
   3e514:	cmp	r5, r6
   3e518:	bhi	3e4dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x348>
   3e51c:	mov	r1, #32
   3e520:	mov	r2, r5
   3e524:	bl	14eec <memset@plt>
   3e528:	ldr	r0, [r4, #20]
   3e52c:	add	r0, r0, r5
   3e530:	str	r0, [r4, #20]
   3e534:	add	r1, r0, #1
   3e538:	str	r1, [r4, #20]
   3e53c:	mov	r1, #93	; 0x5d
   3e540:	strb	r1, [r0]
   3e544:	sub	sp, fp, #28
   3e548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e54c <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   3e54c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e550:	add	fp, sp, #28
   3e554:	sub	sp, sp, #4
   3e558:	mov	r4, r0
   3e55c:	ldrb	r0, [r0, #27]
   3e560:	cmp	r0, #0
   3e564:	beq	3e578 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   3e568:	mov	r0, r4
   3e56c:	sub	sp, fp, #28
   3e570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e574:	b	3b76c <flatcc_json_printer_uint64_vector_field@@Base>
   3e578:	mov	r0, #4
   3e57c:	add	r0, r0, r2, lsl #1
   3e580:	ldr	r2, [r1, #8]
   3e584:	cmp	r0, r2
   3e588:	bge	3e900 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   3e58c:	ldr	r2, [r1, #4]
   3e590:	add	r0, r2, r0
   3e594:	ldrh	r0, [r0]
   3e598:	cmp	r0, #0
   3e59c:	ldrne	r2, [r1]
   3e5a0:	addsne	r8, r2, r0
   3e5a4:	beq	3e900 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   3e5a8:	ldr	r0, [r1, #16]
   3e5ac:	ldr	sl, [fp, #12]
   3e5b0:	ldr	r2, [fp, #8]
   3e5b4:	add	r7, r0, #1
   3e5b8:	cmp	r0, #0
   3e5bc:	str	r7, [r1, #16]
   3e5c0:	beq	3e5d8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x8c>
   3e5c4:	ldr	r0, [r4, #20]
   3e5c8:	add	r1, r0, #1
   3e5cc:	str	r1, [r4, #20]
   3e5d0:	mov	r1, #44	; 0x2c
   3e5d4:	strb	r1, [r0]
   3e5d8:	ldr	r0, [r8]
   3e5dc:	mov	r1, r3
   3e5e0:	ldr	r9, [r8, r0]!
   3e5e4:	mov	r0, r4
   3e5e8:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3e5ec:	ldr	r1, [r4, #32]
   3e5f0:	ldr	r0, [r4, #20]
   3e5f4:	cmp	r9, #0
   3e5f8:	add	r1, r1, #1
   3e5fc:	str	r1, [r4, #32]
   3e600:	add	r1, r0, #1
   3e604:	str	r1, [r4, #20]
   3e608:	mov	r1, #91	; 0x5b
   3e60c:	strb	r1, [r0]
   3e610:	beq	3e824 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d8>
   3e614:	ldrb	r1, [r4, #25]
   3e618:	ldr	r0, [r4, #20]
   3e61c:	cmp	r1, #0
   3e620:	beq	3e6dc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   3e624:	add	r1, r0, #1
   3e628:	str	r1, [r4, #20]
   3e62c:	mov	r1, #10
   3e630:	strb	r1, [r0]
   3e634:	ldr	r0, [r4, #20]
   3e638:	ldrb	r2, [r4, #25]
   3e63c:	ldr	r3, [r4, #32]
   3e640:	ldr	r1, [r4, #16]
   3e644:	mla	r7, r3, r2, r0
   3e648:	mul	r5, r3, r2
   3e64c:	cmp	r7, r1
   3e650:	bls	3e6c0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x174>
   3e654:	cmp	r0, r1
   3e658:	bcc	3e674 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x128>
   3e65c:	ldr	r2, [r4, #44]	; 0x2c
   3e660:	mov	r0, r4
   3e664:	mov	r1, #0
   3e668:	blx	r2
   3e66c:	ldr	r1, [r4, #16]
   3e670:	ldr	r0, [r4, #20]
   3e674:	sub	r6, r1, r0
   3e678:	cmp	r6, r5
   3e67c:	bcs	3e6c0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x174>
   3e680:	mov	r1, #32
   3e684:	mov	r2, r6
   3e688:	bl	14eec <memset@plt>
   3e68c:	ldr	r0, [r4, #20]
   3e690:	ldr	r2, [r4, #44]	; 0x2c
   3e694:	mov	r1, #0
   3e698:	add	r0, r0, r6
   3e69c:	str	r0, [r4, #20]
   3e6a0:	mov	r0, r4
   3e6a4:	blx	r2
   3e6a8:	ldr	r1, [r4, #16]
   3e6ac:	ldr	r0, [r4, #20]
   3e6b0:	sub	r5, r5, r6
   3e6b4:	sub	r6, r1, r0
   3e6b8:	cmp	r5, r6
   3e6bc:	bhi	3e680 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x134>
   3e6c0:	mov	r1, #32
   3e6c4:	mov	r2, r5
   3e6c8:	bl	14eec <memset@plt>
   3e6cc:	ldr	r0, [r4, #20]
   3e6d0:	add	r0, r0, r5
   3e6d4:	str	r0, [r4, #20]
   3e6d8:	b	3e6f8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ac>
   3e6dc:	ldr	r1, [r4, #16]
   3e6e0:	cmp	r0, r1
   3e6e4:	bcc	3e6f8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ac>
   3e6e8:	ldr	r2, [r4, #44]	; 0x2c
   3e6ec:	mov	r0, r4
   3e6f0:	mov	r1, #0
   3e6f4:	blx	r2
   3e6f8:	ldrd	r2, [r8, #4]
   3e6fc:	mov	r0, r4
   3e700:	blx	sl
   3e704:	subs	r9, r9, #1
   3e708:	beq	3e824 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2d8>
   3e70c:	add	r7, r8, #12
   3e710:	mov	r8, #44	; 0x2c
   3e714:	ldr	r0, [r4, #20]
   3e718:	sub	r9, r9, #1
   3e71c:	add	r1, r0, #1
   3e720:	str	r1, [r4, #20]
   3e724:	strb	r8, [r0]
   3e728:	ldrb	r1, [r4, #25]
   3e72c:	ldr	r0, [r4, #20]
   3e730:	cmp	r1, #0
   3e734:	beq	3e7f0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a4>
   3e738:	add	r1, r0, #1
   3e73c:	str	r1, [r4, #20]
   3e740:	mov	r1, #10
   3e744:	strb	r1, [r0]
   3e748:	ldr	r0, [r4, #20]
   3e74c:	ldrb	r2, [r4, #25]
   3e750:	ldr	r3, [r4, #32]
   3e754:	ldr	r1, [r4, #16]
   3e758:	mla	r6, r3, r2, r0
   3e75c:	mul	r5, r3, r2
   3e760:	cmp	r6, r1
   3e764:	bls	3e7d4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   3e768:	cmp	r0, r1
   3e76c:	bcc	3e788 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x23c>
   3e770:	ldr	r2, [r4, #44]	; 0x2c
   3e774:	mov	r0, r4
   3e778:	mov	r1, #0
   3e77c:	blx	r2
   3e780:	ldr	r1, [r4, #16]
   3e784:	ldr	r0, [r4, #20]
   3e788:	sub	r6, r1, r0
   3e78c:	cmp	r6, r5
   3e790:	bcs	3e7d4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   3e794:	mov	r1, #32
   3e798:	mov	r2, r6
   3e79c:	bl	14eec <memset@plt>
   3e7a0:	ldr	r0, [r4, #20]
   3e7a4:	ldr	r2, [r4, #44]	; 0x2c
   3e7a8:	mov	r1, #0
   3e7ac:	add	r0, r0, r6
   3e7b0:	str	r0, [r4, #20]
   3e7b4:	mov	r0, r4
   3e7b8:	blx	r2
   3e7bc:	ldr	r1, [r4, #16]
   3e7c0:	ldr	r0, [r4, #20]
   3e7c4:	sub	r5, r5, r6
   3e7c8:	sub	r6, r1, r0
   3e7cc:	cmp	r5, r6
   3e7d0:	bhi	3e794 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x248>
   3e7d4:	mov	r1, #32
   3e7d8:	mov	r2, r5
   3e7dc:	bl	14eec <memset@plt>
   3e7e0:	ldr	r0, [r4, #20]
   3e7e4:	add	r0, r0, r5
   3e7e8:	str	r0, [r4, #20]
   3e7ec:	b	3e80c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c0>
   3e7f0:	ldr	r1, [r4, #16]
   3e7f4:	cmp	r0, r1
   3e7f8:	bcc	3e80c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c0>
   3e7fc:	ldr	r2, [r4, #44]	; 0x2c
   3e800:	mov	r0, r4
   3e804:	mov	r1, #0
   3e808:	blx	r2
   3e80c:	ldrd	r2, [r7]
   3e810:	mov	r0, r4
   3e814:	blx	sl
   3e818:	add	r7, r7, #8
   3e81c:	cmp	r9, #0
   3e820:	bne	3e714 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c8>
   3e824:	ldrb	r1, [r4, #25]
   3e828:	ldr	r0, [r4, #20]
   3e82c:	cmp	r1, #0
   3e830:	beq	3e8f0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a4>
   3e834:	add	r1, r0, #1
   3e838:	str	r1, [r4, #20]
   3e83c:	mov	r1, #10
   3e840:	strb	r1, [r0]
   3e844:	ldr	r0, [r4, #32]
   3e848:	sub	r2, r0, #1
   3e84c:	str	r2, [r4, #32]
   3e850:	ldrb	r3, [r4, #25]
   3e854:	ldr	r0, [r4, #20]
   3e858:	ldr	r1, [r4, #16]
   3e85c:	mla	r7, r2, r3, r0
   3e860:	mul	r5, r2, r3
   3e864:	cmp	r7, r1
   3e868:	bls	3e8d8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38c>
   3e86c:	cmp	r0, r1
   3e870:	bcc	3e88c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x340>
   3e874:	ldr	r2, [r4, #44]	; 0x2c
   3e878:	mov	r0, r4
   3e87c:	mov	r1, #0
   3e880:	blx	r2
   3e884:	ldr	r1, [r4, #16]
   3e888:	ldr	r0, [r4, #20]
   3e88c:	sub	r6, r1, r0
   3e890:	cmp	r6, r5
   3e894:	bcs	3e8d8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38c>
   3e898:	mov	r1, #32
   3e89c:	mov	r2, r6
   3e8a0:	bl	14eec <memset@plt>
   3e8a4:	ldr	r0, [r4, #20]
   3e8a8:	ldr	r2, [r4, #44]	; 0x2c
   3e8ac:	mov	r1, #0
   3e8b0:	add	r0, r0, r6
   3e8b4:	str	r0, [r4, #20]
   3e8b8:	mov	r0, r4
   3e8bc:	blx	r2
   3e8c0:	ldr	r1, [r4, #16]
   3e8c4:	ldr	r0, [r4, #20]
   3e8c8:	sub	r5, r5, r6
   3e8cc:	sub	r6, r1, r0
   3e8d0:	cmp	r5, r6
   3e8d4:	bhi	3e898 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x34c>
   3e8d8:	mov	r1, #32
   3e8dc:	mov	r2, r5
   3e8e0:	bl	14eec <memset@plt>
   3e8e4:	ldr	r0, [r4, #20]
   3e8e8:	add	r0, r0, r5
   3e8ec:	str	r0, [r4, #20]
   3e8f0:	add	r1, r0, #1
   3e8f4:	str	r1, [r4, #20]
   3e8f8:	mov	r1, #93	; 0x5d
   3e8fc:	strb	r1, [r0]
   3e900:	sub	sp, fp, #28
   3e904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e908 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   3e908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e90c:	add	fp, sp, #28
   3e910:	sub	sp, sp, #4
   3e914:	mov	r4, r0
   3e918:	ldrb	r0, [r0, #27]
   3e91c:	cmp	r0, #0
   3e920:	beq	3e934 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   3e924:	mov	r0, r4
   3e928:	sub	sp, fp, #28
   3e92c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e930:	b	3bb20 <flatcc_json_printer_int8_vector_field@@Base>
   3e934:	mov	r0, #4
   3e938:	add	r0, r0, r2, lsl #1
   3e93c:	ldr	r2, [r1, #8]
   3e940:	cmp	r0, r2
   3e944:	bge	3ecb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   3e948:	ldr	r2, [r1, #4]
   3e94c:	add	r0, r2, r0
   3e950:	ldrh	r0, [r0]
   3e954:	cmp	r0, #0
   3e958:	ldrne	r2, [r1]
   3e95c:	addsne	r8, r2, r0
   3e960:	beq	3ecb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   3e964:	ldr	r0, [r1, #16]
   3e968:	ldr	sl, [fp, #12]
   3e96c:	ldr	r2, [fp, #8]
   3e970:	add	r7, r0, #1
   3e974:	cmp	r0, #0
   3e978:	str	r7, [r1, #16]
   3e97c:	beq	3e994 <flatcc_json_printer_int8_enum_vector_field@@Base+0x8c>
   3e980:	ldr	r0, [r4, #20]
   3e984:	add	r1, r0, #1
   3e988:	str	r1, [r4, #20]
   3e98c:	mov	r1, #44	; 0x2c
   3e990:	strb	r1, [r0]
   3e994:	ldr	r0, [r8]
   3e998:	mov	r1, r3
   3e99c:	ldr	r9, [r8, r0]!
   3e9a0:	mov	r0, r4
   3e9a4:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3e9a8:	ldr	r1, [r4, #32]
   3e9ac:	ldr	r0, [r4, #20]
   3e9b0:	cmp	r9, #0
   3e9b4:	add	r1, r1, #1
   3e9b8:	str	r1, [r4, #32]
   3e9bc:	add	r1, r0, #1
   3e9c0:	str	r1, [r4, #20]
   3e9c4:	mov	r1, #91	; 0x5b
   3e9c8:	strb	r1, [r0]
   3e9cc:	beq	3ebdc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d4>
   3e9d0:	ldrb	r1, [r4, #25]
   3e9d4:	ldr	r0, [r4, #20]
   3e9d8:	cmp	r1, #0
   3e9dc:	beq	3ea98 <flatcc_json_printer_int8_enum_vector_field@@Base+0x190>
   3e9e0:	add	r1, r0, #1
   3e9e4:	str	r1, [r4, #20]
   3e9e8:	mov	r1, #10
   3e9ec:	strb	r1, [r0]
   3e9f0:	ldr	r0, [r4, #20]
   3e9f4:	ldrb	r2, [r4, #25]
   3e9f8:	ldr	r3, [r4, #32]
   3e9fc:	ldr	r1, [r4, #16]
   3ea00:	mla	r7, r3, r2, r0
   3ea04:	mul	r5, r3, r2
   3ea08:	cmp	r7, r1
   3ea0c:	bls	3ea7c <flatcc_json_printer_int8_enum_vector_field@@Base+0x174>
   3ea10:	cmp	r0, r1
   3ea14:	bcc	3ea30 <flatcc_json_printer_int8_enum_vector_field@@Base+0x128>
   3ea18:	ldr	r2, [r4, #44]	; 0x2c
   3ea1c:	mov	r0, r4
   3ea20:	mov	r1, #0
   3ea24:	blx	r2
   3ea28:	ldr	r1, [r4, #16]
   3ea2c:	ldr	r0, [r4, #20]
   3ea30:	sub	r6, r1, r0
   3ea34:	cmp	r6, r5
   3ea38:	bcs	3ea7c <flatcc_json_printer_int8_enum_vector_field@@Base+0x174>
   3ea3c:	mov	r1, #32
   3ea40:	mov	r2, r6
   3ea44:	bl	14eec <memset@plt>
   3ea48:	ldr	r0, [r4, #20]
   3ea4c:	ldr	r2, [r4, #44]	; 0x2c
   3ea50:	mov	r1, #0
   3ea54:	add	r0, r0, r6
   3ea58:	str	r0, [r4, #20]
   3ea5c:	mov	r0, r4
   3ea60:	blx	r2
   3ea64:	ldr	r1, [r4, #16]
   3ea68:	ldr	r0, [r4, #20]
   3ea6c:	sub	r5, r5, r6
   3ea70:	sub	r6, r1, r0
   3ea74:	cmp	r5, r6
   3ea78:	bhi	3ea3c <flatcc_json_printer_int8_enum_vector_field@@Base+0x134>
   3ea7c:	mov	r1, #32
   3ea80:	mov	r2, r5
   3ea84:	bl	14eec <memset@plt>
   3ea88:	ldr	r0, [r4, #20]
   3ea8c:	add	r0, r0, r5
   3ea90:	str	r0, [r4, #20]
   3ea94:	b	3eab4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   3ea98:	ldr	r1, [r4, #16]
   3ea9c:	cmp	r0, r1
   3eaa0:	bcc	3eab4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   3eaa4:	ldr	r2, [r4, #44]	; 0x2c
   3eaa8:	mov	r0, r4
   3eaac:	mov	r1, #0
   3eab0:	blx	r2
   3eab4:	ldrsb	r1, [r8, #4]
   3eab8:	mov	r0, r4
   3eabc:	blx	sl
   3eac0:	subs	r9, r9, #1
   3eac4:	beq	3ebdc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d4>
   3eac8:	add	r7, r8, #5
   3eacc:	mov	r8, #44	; 0x2c
   3ead0:	ldr	r0, [r4, #20]
   3ead4:	sub	r9, r9, #1
   3ead8:	add	r1, r0, #1
   3eadc:	str	r1, [r4, #20]
   3eae0:	strb	r8, [r0]
   3eae4:	ldrb	r1, [r4, #25]
   3eae8:	ldr	r0, [r4, #20]
   3eaec:	cmp	r1, #0
   3eaf0:	beq	3ebac <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a4>
   3eaf4:	add	r1, r0, #1
   3eaf8:	str	r1, [r4, #20]
   3eafc:	mov	r1, #10
   3eb00:	strb	r1, [r0]
   3eb04:	ldr	r0, [r4, #20]
   3eb08:	ldrb	r2, [r4, #25]
   3eb0c:	ldr	r3, [r4, #32]
   3eb10:	ldr	r1, [r4, #16]
   3eb14:	mla	r6, r3, r2, r0
   3eb18:	mul	r5, r3, r2
   3eb1c:	cmp	r6, r1
   3eb20:	bls	3eb90 <flatcc_json_printer_int8_enum_vector_field@@Base+0x288>
   3eb24:	cmp	r0, r1
   3eb28:	bcc	3eb44 <flatcc_json_printer_int8_enum_vector_field@@Base+0x23c>
   3eb2c:	ldr	r2, [r4, #44]	; 0x2c
   3eb30:	mov	r0, r4
   3eb34:	mov	r1, #0
   3eb38:	blx	r2
   3eb3c:	ldr	r1, [r4, #16]
   3eb40:	ldr	r0, [r4, #20]
   3eb44:	sub	r6, r1, r0
   3eb48:	cmp	r6, r5
   3eb4c:	bcs	3eb90 <flatcc_json_printer_int8_enum_vector_field@@Base+0x288>
   3eb50:	mov	r1, #32
   3eb54:	mov	r2, r6
   3eb58:	bl	14eec <memset@plt>
   3eb5c:	ldr	r0, [r4, #20]
   3eb60:	ldr	r2, [r4, #44]	; 0x2c
   3eb64:	mov	r1, #0
   3eb68:	add	r0, r0, r6
   3eb6c:	str	r0, [r4, #20]
   3eb70:	mov	r0, r4
   3eb74:	blx	r2
   3eb78:	ldr	r1, [r4, #16]
   3eb7c:	ldr	r0, [r4, #20]
   3eb80:	sub	r5, r5, r6
   3eb84:	sub	r6, r1, r0
   3eb88:	cmp	r5, r6
   3eb8c:	bhi	3eb50 <flatcc_json_printer_int8_enum_vector_field@@Base+0x248>
   3eb90:	mov	r1, #32
   3eb94:	mov	r2, r5
   3eb98:	bl	14eec <memset@plt>
   3eb9c:	ldr	r0, [r4, #20]
   3eba0:	add	r0, r0, r5
   3eba4:	str	r0, [r4, #20]
   3eba8:	b	3ebc8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c0>
   3ebac:	ldr	r1, [r4, #16]
   3ebb0:	cmp	r0, r1
   3ebb4:	bcc	3ebc8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c0>
   3ebb8:	ldr	r2, [r4, #44]	; 0x2c
   3ebbc:	mov	r0, r4
   3ebc0:	mov	r1, #0
   3ebc4:	blx	r2
   3ebc8:	ldrsb	r1, [r7], #1
   3ebcc:	mov	r0, r4
   3ebd0:	blx	sl
   3ebd4:	cmp	r9, #0
   3ebd8:	bne	3ead0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c8>
   3ebdc:	ldrb	r1, [r4, #25]
   3ebe0:	ldr	r0, [r4, #20]
   3ebe4:	cmp	r1, #0
   3ebe8:	beq	3eca8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3a0>
   3ebec:	add	r1, r0, #1
   3ebf0:	str	r1, [r4, #20]
   3ebf4:	mov	r1, #10
   3ebf8:	strb	r1, [r0]
   3ebfc:	ldr	r0, [r4, #32]
   3ec00:	sub	r2, r0, #1
   3ec04:	str	r2, [r4, #32]
   3ec08:	ldrb	r3, [r4, #25]
   3ec0c:	ldr	r0, [r4, #20]
   3ec10:	ldr	r1, [r4, #16]
   3ec14:	mla	r7, r2, r3, r0
   3ec18:	mul	r5, r2, r3
   3ec1c:	cmp	r7, r1
   3ec20:	bls	3ec90 <flatcc_json_printer_int8_enum_vector_field@@Base+0x388>
   3ec24:	cmp	r0, r1
   3ec28:	bcc	3ec44 <flatcc_json_printer_int8_enum_vector_field@@Base+0x33c>
   3ec2c:	ldr	r2, [r4, #44]	; 0x2c
   3ec30:	mov	r0, r4
   3ec34:	mov	r1, #0
   3ec38:	blx	r2
   3ec3c:	ldr	r1, [r4, #16]
   3ec40:	ldr	r0, [r4, #20]
   3ec44:	sub	r6, r1, r0
   3ec48:	cmp	r6, r5
   3ec4c:	bcs	3ec90 <flatcc_json_printer_int8_enum_vector_field@@Base+0x388>
   3ec50:	mov	r1, #32
   3ec54:	mov	r2, r6
   3ec58:	bl	14eec <memset@plt>
   3ec5c:	ldr	r0, [r4, #20]
   3ec60:	ldr	r2, [r4, #44]	; 0x2c
   3ec64:	mov	r1, #0
   3ec68:	add	r0, r0, r6
   3ec6c:	str	r0, [r4, #20]
   3ec70:	mov	r0, r4
   3ec74:	blx	r2
   3ec78:	ldr	r1, [r4, #16]
   3ec7c:	ldr	r0, [r4, #20]
   3ec80:	sub	r5, r5, r6
   3ec84:	sub	r6, r1, r0
   3ec88:	cmp	r5, r6
   3ec8c:	bhi	3ec50 <flatcc_json_printer_int8_enum_vector_field@@Base+0x348>
   3ec90:	mov	r1, #32
   3ec94:	mov	r2, r5
   3ec98:	bl	14eec <memset@plt>
   3ec9c:	ldr	r0, [r4, #20]
   3eca0:	add	r0, r0, r5
   3eca4:	str	r0, [r4, #20]
   3eca8:	add	r1, r0, #1
   3ecac:	str	r1, [r4, #20]
   3ecb0:	mov	r1, #93	; 0x5d
   3ecb4:	strb	r1, [r0]
   3ecb8:	sub	sp, fp, #28
   3ecbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ecc0 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   3ecc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ecc4:	add	fp, sp, #28
   3ecc8:	sub	sp, sp, #4
   3eccc:	mov	r4, r0
   3ecd0:	ldrb	r0, [r0, #27]
   3ecd4:	cmp	r0, #0
   3ecd8:	beq	3ecec <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   3ecdc:	mov	r0, r4
   3ece0:	sub	sp, fp, #28
   3ece4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ece8:	b	3bf14 <flatcc_json_printer_int16_vector_field@@Base>
   3ecec:	mov	r0, #4
   3ecf0:	add	r0, r0, r2, lsl #1
   3ecf4:	ldr	r2, [r1, #8]
   3ecf8:	cmp	r0, r2
   3ecfc:	bge	3f070 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   3ed00:	ldr	r2, [r1, #4]
   3ed04:	add	r0, r2, r0
   3ed08:	ldrh	r0, [r0]
   3ed0c:	cmp	r0, #0
   3ed10:	ldrne	r2, [r1]
   3ed14:	addsne	r8, r2, r0
   3ed18:	beq	3f070 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   3ed1c:	ldr	r0, [r1, #16]
   3ed20:	ldr	sl, [fp, #12]
   3ed24:	ldr	r2, [fp, #8]
   3ed28:	add	r7, r0, #1
   3ed2c:	cmp	r0, #0
   3ed30:	str	r7, [r1, #16]
   3ed34:	beq	3ed4c <flatcc_json_printer_int16_enum_vector_field@@Base+0x8c>
   3ed38:	ldr	r0, [r4, #20]
   3ed3c:	add	r1, r0, #1
   3ed40:	str	r1, [r4, #20]
   3ed44:	mov	r1, #44	; 0x2c
   3ed48:	strb	r1, [r0]
   3ed4c:	ldr	r0, [r8]
   3ed50:	mov	r1, r3
   3ed54:	ldr	r9, [r8, r0]!
   3ed58:	mov	r0, r4
   3ed5c:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3ed60:	ldr	r1, [r4, #32]
   3ed64:	ldr	r0, [r4, #20]
   3ed68:	cmp	r9, #0
   3ed6c:	add	r1, r1, #1
   3ed70:	str	r1, [r4, #32]
   3ed74:	add	r1, r0, #1
   3ed78:	str	r1, [r4, #20]
   3ed7c:	mov	r1, #91	; 0x5b
   3ed80:	strb	r1, [r0]
   3ed84:	beq	3ef94 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d4>
   3ed88:	ldrb	r1, [r4, #25]
   3ed8c:	ldr	r0, [r4, #20]
   3ed90:	cmp	r1, #0
   3ed94:	beq	3ee50 <flatcc_json_printer_int16_enum_vector_field@@Base+0x190>
   3ed98:	add	r1, r0, #1
   3ed9c:	str	r1, [r4, #20]
   3eda0:	mov	r1, #10
   3eda4:	strb	r1, [r0]
   3eda8:	ldr	r0, [r4, #20]
   3edac:	ldrb	r2, [r4, #25]
   3edb0:	ldr	r3, [r4, #32]
   3edb4:	ldr	r1, [r4, #16]
   3edb8:	mla	r7, r3, r2, r0
   3edbc:	mul	r5, r3, r2
   3edc0:	cmp	r7, r1
   3edc4:	bls	3ee34 <flatcc_json_printer_int16_enum_vector_field@@Base+0x174>
   3edc8:	cmp	r0, r1
   3edcc:	bcc	3ede8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x128>
   3edd0:	ldr	r2, [r4, #44]	; 0x2c
   3edd4:	mov	r0, r4
   3edd8:	mov	r1, #0
   3eddc:	blx	r2
   3ede0:	ldr	r1, [r4, #16]
   3ede4:	ldr	r0, [r4, #20]
   3ede8:	sub	r6, r1, r0
   3edec:	cmp	r6, r5
   3edf0:	bcs	3ee34 <flatcc_json_printer_int16_enum_vector_field@@Base+0x174>
   3edf4:	mov	r1, #32
   3edf8:	mov	r2, r6
   3edfc:	bl	14eec <memset@plt>
   3ee00:	ldr	r0, [r4, #20]
   3ee04:	ldr	r2, [r4, #44]	; 0x2c
   3ee08:	mov	r1, #0
   3ee0c:	add	r0, r0, r6
   3ee10:	str	r0, [r4, #20]
   3ee14:	mov	r0, r4
   3ee18:	blx	r2
   3ee1c:	ldr	r1, [r4, #16]
   3ee20:	ldr	r0, [r4, #20]
   3ee24:	sub	r5, r5, r6
   3ee28:	sub	r6, r1, r0
   3ee2c:	cmp	r5, r6
   3ee30:	bhi	3edf4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x134>
   3ee34:	mov	r1, #32
   3ee38:	mov	r2, r5
   3ee3c:	bl	14eec <memset@plt>
   3ee40:	ldr	r0, [r4, #20]
   3ee44:	add	r0, r0, r5
   3ee48:	str	r0, [r4, #20]
   3ee4c:	b	3ee6c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ac>
   3ee50:	ldr	r1, [r4, #16]
   3ee54:	cmp	r0, r1
   3ee58:	bcc	3ee6c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ac>
   3ee5c:	ldr	r2, [r4, #44]	; 0x2c
   3ee60:	mov	r0, r4
   3ee64:	mov	r1, #0
   3ee68:	blx	r2
   3ee6c:	ldrsh	r1, [r8, #4]
   3ee70:	mov	r0, r4
   3ee74:	blx	sl
   3ee78:	subs	r9, r9, #1
   3ee7c:	beq	3ef94 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d4>
   3ee80:	add	r7, r8, #6
   3ee84:	mov	r8, #44	; 0x2c
   3ee88:	ldr	r0, [r4, #20]
   3ee8c:	sub	r9, r9, #1
   3ee90:	add	r1, r0, #1
   3ee94:	str	r1, [r4, #20]
   3ee98:	strb	r8, [r0]
   3ee9c:	ldrb	r1, [r4, #25]
   3eea0:	ldr	r0, [r4, #20]
   3eea4:	cmp	r1, #0
   3eea8:	beq	3ef64 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a4>
   3eeac:	add	r1, r0, #1
   3eeb0:	str	r1, [r4, #20]
   3eeb4:	mov	r1, #10
   3eeb8:	strb	r1, [r0]
   3eebc:	ldr	r0, [r4, #20]
   3eec0:	ldrb	r2, [r4, #25]
   3eec4:	ldr	r3, [r4, #32]
   3eec8:	ldr	r1, [r4, #16]
   3eecc:	mla	r6, r3, r2, r0
   3eed0:	mul	r5, r3, r2
   3eed4:	cmp	r6, r1
   3eed8:	bls	3ef48 <flatcc_json_printer_int16_enum_vector_field@@Base+0x288>
   3eedc:	cmp	r0, r1
   3eee0:	bcc	3eefc <flatcc_json_printer_int16_enum_vector_field@@Base+0x23c>
   3eee4:	ldr	r2, [r4, #44]	; 0x2c
   3eee8:	mov	r0, r4
   3eeec:	mov	r1, #0
   3eef0:	blx	r2
   3eef4:	ldr	r1, [r4, #16]
   3eef8:	ldr	r0, [r4, #20]
   3eefc:	sub	r6, r1, r0
   3ef00:	cmp	r6, r5
   3ef04:	bcs	3ef48 <flatcc_json_printer_int16_enum_vector_field@@Base+0x288>
   3ef08:	mov	r1, #32
   3ef0c:	mov	r2, r6
   3ef10:	bl	14eec <memset@plt>
   3ef14:	ldr	r0, [r4, #20]
   3ef18:	ldr	r2, [r4, #44]	; 0x2c
   3ef1c:	mov	r1, #0
   3ef20:	add	r0, r0, r6
   3ef24:	str	r0, [r4, #20]
   3ef28:	mov	r0, r4
   3ef2c:	blx	r2
   3ef30:	ldr	r1, [r4, #16]
   3ef34:	ldr	r0, [r4, #20]
   3ef38:	sub	r5, r5, r6
   3ef3c:	sub	r6, r1, r0
   3ef40:	cmp	r5, r6
   3ef44:	bhi	3ef08 <flatcc_json_printer_int16_enum_vector_field@@Base+0x248>
   3ef48:	mov	r1, #32
   3ef4c:	mov	r2, r5
   3ef50:	bl	14eec <memset@plt>
   3ef54:	ldr	r0, [r4, #20]
   3ef58:	add	r0, r0, r5
   3ef5c:	str	r0, [r4, #20]
   3ef60:	b	3ef80 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c0>
   3ef64:	ldr	r1, [r4, #16]
   3ef68:	cmp	r0, r1
   3ef6c:	bcc	3ef80 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c0>
   3ef70:	ldr	r2, [r4, #44]	; 0x2c
   3ef74:	mov	r0, r4
   3ef78:	mov	r1, #0
   3ef7c:	blx	r2
   3ef80:	ldrsh	r1, [r7], #2
   3ef84:	mov	r0, r4
   3ef88:	blx	sl
   3ef8c:	cmp	r9, #0
   3ef90:	bne	3ee88 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c8>
   3ef94:	ldrb	r1, [r4, #25]
   3ef98:	ldr	r0, [r4, #20]
   3ef9c:	cmp	r1, #0
   3efa0:	beq	3f060 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3a0>
   3efa4:	add	r1, r0, #1
   3efa8:	str	r1, [r4, #20]
   3efac:	mov	r1, #10
   3efb0:	strb	r1, [r0]
   3efb4:	ldr	r0, [r4, #32]
   3efb8:	sub	r2, r0, #1
   3efbc:	str	r2, [r4, #32]
   3efc0:	ldrb	r3, [r4, #25]
   3efc4:	ldr	r0, [r4, #20]
   3efc8:	ldr	r1, [r4, #16]
   3efcc:	mla	r7, r2, r3, r0
   3efd0:	mul	r5, r2, r3
   3efd4:	cmp	r7, r1
   3efd8:	bls	3f048 <flatcc_json_printer_int16_enum_vector_field@@Base+0x388>
   3efdc:	cmp	r0, r1
   3efe0:	bcc	3effc <flatcc_json_printer_int16_enum_vector_field@@Base+0x33c>
   3efe4:	ldr	r2, [r4, #44]	; 0x2c
   3efe8:	mov	r0, r4
   3efec:	mov	r1, #0
   3eff0:	blx	r2
   3eff4:	ldr	r1, [r4, #16]
   3eff8:	ldr	r0, [r4, #20]
   3effc:	sub	r6, r1, r0
   3f000:	cmp	r6, r5
   3f004:	bcs	3f048 <flatcc_json_printer_int16_enum_vector_field@@Base+0x388>
   3f008:	mov	r1, #32
   3f00c:	mov	r2, r6
   3f010:	bl	14eec <memset@plt>
   3f014:	ldr	r0, [r4, #20]
   3f018:	ldr	r2, [r4, #44]	; 0x2c
   3f01c:	mov	r1, #0
   3f020:	add	r0, r0, r6
   3f024:	str	r0, [r4, #20]
   3f028:	mov	r0, r4
   3f02c:	blx	r2
   3f030:	ldr	r1, [r4, #16]
   3f034:	ldr	r0, [r4, #20]
   3f038:	sub	r5, r5, r6
   3f03c:	sub	r6, r1, r0
   3f040:	cmp	r5, r6
   3f044:	bhi	3f008 <flatcc_json_printer_int16_enum_vector_field@@Base+0x348>
   3f048:	mov	r1, #32
   3f04c:	mov	r2, r5
   3f050:	bl	14eec <memset@plt>
   3f054:	ldr	r0, [r4, #20]
   3f058:	add	r0, r0, r5
   3f05c:	str	r0, [r4, #20]
   3f060:	add	r1, r0, #1
   3f064:	str	r1, [r4, #20]
   3f068:	mov	r1, #93	; 0x5d
   3f06c:	strb	r1, [r0]
   3f070:	sub	sp, fp, #28
   3f074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f078 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   3f078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f07c:	add	fp, sp, #28
   3f080:	sub	sp, sp, #4
   3f084:	mov	r4, r0
   3f088:	ldrb	r0, [r0, #27]
   3f08c:	cmp	r0, #0
   3f090:	beq	3f0a4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   3f094:	mov	r0, r4
   3f098:	sub	sp, fp, #28
   3f09c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f0a0:	b	3c308 <flatcc_json_printer_int32_vector_field@@Base>
   3f0a4:	mov	r0, #4
   3f0a8:	add	r0, r0, r2, lsl #1
   3f0ac:	ldr	r2, [r1, #8]
   3f0b0:	cmp	r0, r2
   3f0b4:	bge	3f428 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   3f0b8:	ldr	r2, [r1, #4]
   3f0bc:	add	r0, r2, r0
   3f0c0:	ldrh	r0, [r0]
   3f0c4:	cmp	r0, #0
   3f0c8:	ldrne	r2, [r1]
   3f0cc:	addsne	r8, r2, r0
   3f0d0:	beq	3f428 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   3f0d4:	ldr	r0, [r1, #16]
   3f0d8:	ldr	sl, [fp, #12]
   3f0dc:	ldr	r2, [fp, #8]
   3f0e0:	add	r7, r0, #1
   3f0e4:	cmp	r0, #0
   3f0e8:	str	r7, [r1, #16]
   3f0ec:	beq	3f104 <flatcc_json_printer_int32_enum_vector_field@@Base+0x8c>
   3f0f0:	ldr	r0, [r4, #20]
   3f0f4:	add	r1, r0, #1
   3f0f8:	str	r1, [r4, #20]
   3f0fc:	mov	r1, #44	; 0x2c
   3f100:	strb	r1, [r0]
   3f104:	ldr	r0, [r8]
   3f108:	mov	r1, r3
   3f10c:	ldr	r9, [r8, r0]!
   3f110:	mov	r0, r4
   3f114:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3f118:	ldr	r1, [r4, #32]
   3f11c:	ldr	r0, [r4, #20]
   3f120:	cmp	r9, #0
   3f124:	add	r1, r1, #1
   3f128:	str	r1, [r4, #32]
   3f12c:	add	r1, r0, #1
   3f130:	str	r1, [r4, #20]
   3f134:	mov	r1, #91	; 0x5b
   3f138:	strb	r1, [r0]
   3f13c:	beq	3f34c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d4>
   3f140:	ldrb	r1, [r4, #25]
   3f144:	ldr	r0, [r4, #20]
   3f148:	cmp	r1, #0
   3f14c:	beq	3f208 <flatcc_json_printer_int32_enum_vector_field@@Base+0x190>
   3f150:	add	r1, r0, #1
   3f154:	str	r1, [r4, #20]
   3f158:	mov	r1, #10
   3f15c:	strb	r1, [r0]
   3f160:	ldr	r0, [r4, #20]
   3f164:	ldrb	r2, [r4, #25]
   3f168:	ldr	r3, [r4, #32]
   3f16c:	ldr	r1, [r4, #16]
   3f170:	mla	r7, r3, r2, r0
   3f174:	mul	r5, r3, r2
   3f178:	cmp	r7, r1
   3f17c:	bls	3f1ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x174>
   3f180:	cmp	r0, r1
   3f184:	bcc	3f1a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x128>
   3f188:	ldr	r2, [r4, #44]	; 0x2c
   3f18c:	mov	r0, r4
   3f190:	mov	r1, #0
   3f194:	blx	r2
   3f198:	ldr	r1, [r4, #16]
   3f19c:	ldr	r0, [r4, #20]
   3f1a0:	sub	r6, r1, r0
   3f1a4:	cmp	r6, r5
   3f1a8:	bcs	3f1ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x174>
   3f1ac:	mov	r1, #32
   3f1b0:	mov	r2, r6
   3f1b4:	bl	14eec <memset@plt>
   3f1b8:	ldr	r0, [r4, #20]
   3f1bc:	ldr	r2, [r4, #44]	; 0x2c
   3f1c0:	mov	r1, #0
   3f1c4:	add	r0, r0, r6
   3f1c8:	str	r0, [r4, #20]
   3f1cc:	mov	r0, r4
   3f1d0:	blx	r2
   3f1d4:	ldr	r1, [r4, #16]
   3f1d8:	ldr	r0, [r4, #20]
   3f1dc:	sub	r5, r5, r6
   3f1e0:	sub	r6, r1, r0
   3f1e4:	cmp	r5, r6
   3f1e8:	bhi	3f1ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x134>
   3f1ec:	mov	r1, #32
   3f1f0:	mov	r2, r5
   3f1f4:	bl	14eec <memset@plt>
   3f1f8:	ldr	r0, [r4, #20]
   3f1fc:	add	r0, r0, r5
   3f200:	str	r0, [r4, #20]
   3f204:	b	3f224 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   3f208:	ldr	r1, [r4, #16]
   3f20c:	cmp	r0, r1
   3f210:	bcc	3f224 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   3f214:	ldr	r2, [r4, #44]	; 0x2c
   3f218:	mov	r0, r4
   3f21c:	mov	r1, #0
   3f220:	blx	r2
   3f224:	ldr	r1, [r8, #4]
   3f228:	mov	r0, r4
   3f22c:	blx	sl
   3f230:	subs	r9, r9, #1
   3f234:	beq	3f34c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d4>
   3f238:	add	r7, r8, #8
   3f23c:	mov	r8, #44	; 0x2c
   3f240:	ldr	r0, [r4, #20]
   3f244:	sub	r9, r9, #1
   3f248:	add	r1, r0, #1
   3f24c:	str	r1, [r4, #20]
   3f250:	strb	r8, [r0]
   3f254:	ldrb	r1, [r4, #25]
   3f258:	ldr	r0, [r4, #20]
   3f25c:	cmp	r1, #0
   3f260:	beq	3f31c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a4>
   3f264:	add	r1, r0, #1
   3f268:	str	r1, [r4, #20]
   3f26c:	mov	r1, #10
   3f270:	strb	r1, [r0]
   3f274:	ldr	r0, [r4, #20]
   3f278:	ldrb	r2, [r4, #25]
   3f27c:	ldr	r3, [r4, #32]
   3f280:	ldr	r1, [r4, #16]
   3f284:	mla	r6, r3, r2, r0
   3f288:	mul	r5, r3, r2
   3f28c:	cmp	r6, r1
   3f290:	bls	3f300 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   3f294:	cmp	r0, r1
   3f298:	bcc	3f2b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x23c>
   3f29c:	ldr	r2, [r4, #44]	; 0x2c
   3f2a0:	mov	r0, r4
   3f2a4:	mov	r1, #0
   3f2a8:	blx	r2
   3f2ac:	ldr	r1, [r4, #16]
   3f2b0:	ldr	r0, [r4, #20]
   3f2b4:	sub	r6, r1, r0
   3f2b8:	cmp	r6, r5
   3f2bc:	bcs	3f300 <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   3f2c0:	mov	r1, #32
   3f2c4:	mov	r2, r6
   3f2c8:	bl	14eec <memset@plt>
   3f2cc:	ldr	r0, [r4, #20]
   3f2d0:	ldr	r2, [r4, #44]	; 0x2c
   3f2d4:	mov	r1, #0
   3f2d8:	add	r0, r0, r6
   3f2dc:	str	r0, [r4, #20]
   3f2e0:	mov	r0, r4
   3f2e4:	blx	r2
   3f2e8:	ldr	r1, [r4, #16]
   3f2ec:	ldr	r0, [r4, #20]
   3f2f0:	sub	r5, r5, r6
   3f2f4:	sub	r6, r1, r0
   3f2f8:	cmp	r5, r6
   3f2fc:	bhi	3f2c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x248>
   3f300:	mov	r1, #32
   3f304:	mov	r2, r5
   3f308:	bl	14eec <memset@plt>
   3f30c:	ldr	r0, [r4, #20]
   3f310:	add	r0, r0, r5
   3f314:	str	r0, [r4, #20]
   3f318:	b	3f338 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c0>
   3f31c:	ldr	r1, [r4, #16]
   3f320:	cmp	r0, r1
   3f324:	bcc	3f338 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c0>
   3f328:	ldr	r2, [r4, #44]	; 0x2c
   3f32c:	mov	r0, r4
   3f330:	mov	r1, #0
   3f334:	blx	r2
   3f338:	ldr	r1, [r7], #4
   3f33c:	mov	r0, r4
   3f340:	blx	sl
   3f344:	cmp	r9, #0
   3f348:	bne	3f240 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c8>
   3f34c:	ldrb	r1, [r4, #25]
   3f350:	ldr	r0, [r4, #20]
   3f354:	cmp	r1, #0
   3f358:	beq	3f418 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3a0>
   3f35c:	add	r1, r0, #1
   3f360:	str	r1, [r4, #20]
   3f364:	mov	r1, #10
   3f368:	strb	r1, [r0]
   3f36c:	ldr	r0, [r4, #32]
   3f370:	sub	r2, r0, #1
   3f374:	str	r2, [r4, #32]
   3f378:	ldrb	r3, [r4, #25]
   3f37c:	ldr	r0, [r4, #20]
   3f380:	ldr	r1, [r4, #16]
   3f384:	mla	r7, r2, r3, r0
   3f388:	mul	r5, r2, r3
   3f38c:	cmp	r7, r1
   3f390:	bls	3f400 <flatcc_json_printer_int32_enum_vector_field@@Base+0x388>
   3f394:	cmp	r0, r1
   3f398:	bcc	3f3b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x33c>
   3f39c:	ldr	r2, [r4, #44]	; 0x2c
   3f3a0:	mov	r0, r4
   3f3a4:	mov	r1, #0
   3f3a8:	blx	r2
   3f3ac:	ldr	r1, [r4, #16]
   3f3b0:	ldr	r0, [r4, #20]
   3f3b4:	sub	r6, r1, r0
   3f3b8:	cmp	r6, r5
   3f3bc:	bcs	3f400 <flatcc_json_printer_int32_enum_vector_field@@Base+0x388>
   3f3c0:	mov	r1, #32
   3f3c4:	mov	r2, r6
   3f3c8:	bl	14eec <memset@plt>
   3f3cc:	ldr	r0, [r4, #20]
   3f3d0:	ldr	r2, [r4, #44]	; 0x2c
   3f3d4:	mov	r1, #0
   3f3d8:	add	r0, r0, r6
   3f3dc:	str	r0, [r4, #20]
   3f3e0:	mov	r0, r4
   3f3e4:	blx	r2
   3f3e8:	ldr	r1, [r4, #16]
   3f3ec:	ldr	r0, [r4, #20]
   3f3f0:	sub	r5, r5, r6
   3f3f4:	sub	r6, r1, r0
   3f3f8:	cmp	r5, r6
   3f3fc:	bhi	3f3c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x348>
   3f400:	mov	r1, #32
   3f404:	mov	r2, r5
   3f408:	bl	14eec <memset@plt>
   3f40c:	ldr	r0, [r4, #20]
   3f410:	add	r0, r0, r5
   3f414:	str	r0, [r4, #20]
   3f418:	add	r1, r0, #1
   3f41c:	str	r1, [r4, #20]
   3f420:	mov	r1, #93	; 0x5d
   3f424:	strb	r1, [r0]
   3f428:	sub	sp, fp, #28
   3f42c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f430 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   3f430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f434:	add	fp, sp, #28
   3f438:	sub	sp, sp, #4
   3f43c:	mov	r4, r0
   3f440:	ldrb	r0, [r0, #27]
   3f444:	cmp	r0, #0
   3f448:	beq	3f45c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   3f44c:	mov	r0, r4
   3f450:	sub	sp, fp, #28
   3f454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f458:	b	3c6ec <flatcc_json_printer_int64_vector_field@@Base>
   3f45c:	mov	r0, #4
   3f460:	add	r0, r0, r2, lsl #1
   3f464:	ldr	r2, [r1, #8]
   3f468:	cmp	r0, r2
   3f46c:	bge	3f7e4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   3f470:	ldr	r2, [r1, #4]
   3f474:	add	r0, r2, r0
   3f478:	ldrh	r0, [r0]
   3f47c:	cmp	r0, #0
   3f480:	ldrne	r2, [r1]
   3f484:	addsne	r8, r2, r0
   3f488:	beq	3f7e4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   3f48c:	ldr	r0, [r1, #16]
   3f490:	ldr	sl, [fp, #12]
   3f494:	ldr	r2, [fp, #8]
   3f498:	add	r7, r0, #1
   3f49c:	cmp	r0, #0
   3f4a0:	str	r7, [r1, #16]
   3f4a4:	beq	3f4bc <flatcc_json_printer_int64_enum_vector_field@@Base+0x8c>
   3f4a8:	ldr	r0, [r4, #20]
   3f4ac:	add	r1, r0, #1
   3f4b0:	str	r1, [r4, #20]
   3f4b4:	mov	r1, #44	; 0x2c
   3f4b8:	strb	r1, [r0]
   3f4bc:	ldr	r0, [r8]
   3f4c0:	mov	r1, r3
   3f4c4:	ldr	r9, [r8, r0]!
   3f4c8:	mov	r0, r4
   3f4cc:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3f4d0:	ldr	r1, [r4, #32]
   3f4d4:	ldr	r0, [r4, #20]
   3f4d8:	cmp	r9, #0
   3f4dc:	add	r1, r1, #1
   3f4e0:	str	r1, [r4, #32]
   3f4e4:	add	r1, r0, #1
   3f4e8:	str	r1, [r4, #20]
   3f4ec:	mov	r1, #91	; 0x5b
   3f4f0:	strb	r1, [r0]
   3f4f4:	beq	3f708 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d8>
   3f4f8:	ldrb	r1, [r4, #25]
   3f4fc:	ldr	r0, [r4, #20]
   3f500:	cmp	r1, #0
   3f504:	beq	3f5c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   3f508:	add	r1, r0, #1
   3f50c:	str	r1, [r4, #20]
   3f510:	mov	r1, #10
   3f514:	strb	r1, [r0]
   3f518:	ldr	r0, [r4, #20]
   3f51c:	ldrb	r2, [r4, #25]
   3f520:	ldr	r3, [r4, #32]
   3f524:	ldr	r1, [r4, #16]
   3f528:	mla	r7, r3, r2, r0
   3f52c:	mul	r5, r3, r2
   3f530:	cmp	r7, r1
   3f534:	bls	3f5a4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x174>
   3f538:	cmp	r0, r1
   3f53c:	bcc	3f558 <flatcc_json_printer_int64_enum_vector_field@@Base+0x128>
   3f540:	ldr	r2, [r4, #44]	; 0x2c
   3f544:	mov	r0, r4
   3f548:	mov	r1, #0
   3f54c:	blx	r2
   3f550:	ldr	r1, [r4, #16]
   3f554:	ldr	r0, [r4, #20]
   3f558:	sub	r6, r1, r0
   3f55c:	cmp	r6, r5
   3f560:	bcs	3f5a4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x174>
   3f564:	mov	r1, #32
   3f568:	mov	r2, r6
   3f56c:	bl	14eec <memset@plt>
   3f570:	ldr	r0, [r4, #20]
   3f574:	ldr	r2, [r4, #44]	; 0x2c
   3f578:	mov	r1, #0
   3f57c:	add	r0, r0, r6
   3f580:	str	r0, [r4, #20]
   3f584:	mov	r0, r4
   3f588:	blx	r2
   3f58c:	ldr	r1, [r4, #16]
   3f590:	ldr	r0, [r4, #20]
   3f594:	sub	r5, r5, r6
   3f598:	sub	r6, r1, r0
   3f59c:	cmp	r5, r6
   3f5a0:	bhi	3f564 <flatcc_json_printer_int64_enum_vector_field@@Base+0x134>
   3f5a4:	mov	r1, #32
   3f5a8:	mov	r2, r5
   3f5ac:	bl	14eec <memset@plt>
   3f5b0:	ldr	r0, [r4, #20]
   3f5b4:	add	r0, r0, r5
   3f5b8:	str	r0, [r4, #20]
   3f5bc:	b	3f5dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ac>
   3f5c0:	ldr	r1, [r4, #16]
   3f5c4:	cmp	r0, r1
   3f5c8:	bcc	3f5dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ac>
   3f5cc:	ldr	r2, [r4, #44]	; 0x2c
   3f5d0:	mov	r0, r4
   3f5d4:	mov	r1, #0
   3f5d8:	blx	r2
   3f5dc:	ldrd	r2, [r8, #4]
   3f5e0:	mov	r0, r4
   3f5e4:	blx	sl
   3f5e8:	subs	r9, r9, #1
   3f5ec:	beq	3f708 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2d8>
   3f5f0:	add	r7, r8, #12
   3f5f4:	mov	r8, #44	; 0x2c
   3f5f8:	ldr	r0, [r4, #20]
   3f5fc:	sub	r9, r9, #1
   3f600:	add	r1, r0, #1
   3f604:	str	r1, [r4, #20]
   3f608:	strb	r8, [r0]
   3f60c:	ldrb	r1, [r4, #25]
   3f610:	ldr	r0, [r4, #20]
   3f614:	cmp	r1, #0
   3f618:	beq	3f6d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a4>
   3f61c:	add	r1, r0, #1
   3f620:	str	r1, [r4, #20]
   3f624:	mov	r1, #10
   3f628:	strb	r1, [r0]
   3f62c:	ldr	r0, [r4, #20]
   3f630:	ldrb	r2, [r4, #25]
   3f634:	ldr	r3, [r4, #32]
   3f638:	ldr	r1, [r4, #16]
   3f63c:	mla	r6, r3, r2, r0
   3f640:	mul	r5, r3, r2
   3f644:	cmp	r6, r1
   3f648:	bls	3f6b8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   3f64c:	cmp	r0, r1
   3f650:	bcc	3f66c <flatcc_json_printer_int64_enum_vector_field@@Base+0x23c>
   3f654:	ldr	r2, [r4, #44]	; 0x2c
   3f658:	mov	r0, r4
   3f65c:	mov	r1, #0
   3f660:	blx	r2
   3f664:	ldr	r1, [r4, #16]
   3f668:	ldr	r0, [r4, #20]
   3f66c:	sub	r6, r1, r0
   3f670:	cmp	r6, r5
   3f674:	bcs	3f6b8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   3f678:	mov	r1, #32
   3f67c:	mov	r2, r6
   3f680:	bl	14eec <memset@plt>
   3f684:	ldr	r0, [r4, #20]
   3f688:	ldr	r2, [r4, #44]	; 0x2c
   3f68c:	mov	r1, #0
   3f690:	add	r0, r0, r6
   3f694:	str	r0, [r4, #20]
   3f698:	mov	r0, r4
   3f69c:	blx	r2
   3f6a0:	ldr	r1, [r4, #16]
   3f6a4:	ldr	r0, [r4, #20]
   3f6a8:	sub	r5, r5, r6
   3f6ac:	sub	r6, r1, r0
   3f6b0:	cmp	r5, r6
   3f6b4:	bhi	3f678 <flatcc_json_printer_int64_enum_vector_field@@Base+0x248>
   3f6b8:	mov	r1, #32
   3f6bc:	mov	r2, r5
   3f6c0:	bl	14eec <memset@plt>
   3f6c4:	ldr	r0, [r4, #20]
   3f6c8:	add	r0, r0, r5
   3f6cc:	str	r0, [r4, #20]
   3f6d0:	b	3f6f0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c0>
   3f6d4:	ldr	r1, [r4, #16]
   3f6d8:	cmp	r0, r1
   3f6dc:	bcc	3f6f0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c0>
   3f6e0:	ldr	r2, [r4, #44]	; 0x2c
   3f6e4:	mov	r0, r4
   3f6e8:	mov	r1, #0
   3f6ec:	blx	r2
   3f6f0:	ldrd	r2, [r7]
   3f6f4:	mov	r0, r4
   3f6f8:	blx	sl
   3f6fc:	add	r7, r7, #8
   3f700:	cmp	r9, #0
   3f704:	bne	3f5f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c8>
   3f708:	ldrb	r1, [r4, #25]
   3f70c:	ldr	r0, [r4, #20]
   3f710:	cmp	r1, #0
   3f714:	beq	3f7d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a4>
   3f718:	add	r1, r0, #1
   3f71c:	str	r1, [r4, #20]
   3f720:	mov	r1, #10
   3f724:	strb	r1, [r0]
   3f728:	ldr	r0, [r4, #32]
   3f72c:	sub	r2, r0, #1
   3f730:	str	r2, [r4, #32]
   3f734:	ldrb	r3, [r4, #25]
   3f738:	ldr	r0, [r4, #20]
   3f73c:	ldr	r1, [r4, #16]
   3f740:	mla	r7, r2, r3, r0
   3f744:	mul	r5, r2, r3
   3f748:	cmp	r7, r1
   3f74c:	bls	3f7bc <flatcc_json_printer_int64_enum_vector_field@@Base+0x38c>
   3f750:	cmp	r0, r1
   3f754:	bcc	3f770 <flatcc_json_printer_int64_enum_vector_field@@Base+0x340>
   3f758:	ldr	r2, [r4, #44]	; 0x2c
   3f75c:	mov	r0, r4
   3f760:	mov	r1, #0
   3f764:	blx	r2
   3f768:	ldr	r1, [r4, #16]
   3f76c:	ldr	r0, [r4, #20]
   3f770:	sub	r6, r1, r0
   3f774:	cmp	r6, r5
   3f778:	bcs	3f7bc <flatcc_json_printer_int64_enum_vector_field@@Base+0x38c>
   3f77c:	mov	r1, #32
   3f780:	mov	r2, r6
   3f784:	bl	14eec <memset@plt>
   3f788:	ldr	r0, [r4, #20]
   3f78c:	ldr	r2, [r4, #44]	; 0x2c
   3f790:	mov	r1, #0
   3f794:	add	r0, r0, r6
   3f798:	str	r0, [r4, #20]
   3f79c:	mov	r0, r4
   3f7a0:	blx	r2
   3f7a4:	ldr	r1, [r4, #16]
   3f7a8:	ldr	r0, [r4, #20]
   3f7ac:	sub	r5, r5, r6
   3f7b0:	sub	r6, r1, r0
   3f7b4:	cmp	r5, r6
   3f7b8:	bhi	3f77c <flatcc_json_printer_int64_enum_vector_field@@Base+0x34c>
   3f7bc:	mov	r1, #32
   3f7c0:	mov	r2, r5
   3f7c4:	bl	14eec <memset@plt>
   3f7c8:	ldr	r0, [r4, #20]
   3f7cc:	add	r0, r0, r5
   3f7d0:	str	r0, [r4, #20]
   3f7d4:	add	r1, r0, #1
   3f7d8:	str	r1, [r4, #20]
   3f7dc:	mov	r1, #93	; 0x5d
   3f7e0:	strb	r1, [r0]
   3f7e4:	sub	sp, fp, #28
   3f7e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f7ec <flatcc_json_printer_bool_enum_vector_field@@Base>:
   3f7ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f7f0:	add	fp, sp, #28
   3f7f4:	sub	sp, sp, #4
   3f7f8:	mov	r4, r0
   3f7fc:	ldrb	r0, [r0, #27]
   3f800:	cmp	r0, #0
   3f804:	beq	3f818 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   3f808:	mov	r0, r4
   3f80c:	sub	sp, fp, #28
   3f810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f814:	b	3cae0 <flatcc_json_printer_bool_vector_field@@Base>
   3f818:	mov	r0, #4
   3f81c:	add	r0, r0, r2, lsl #1
   3f820:	ldr	r2, [r1, #8]
   3f824:	cmp	r0, r2
   3f828:	bge	3fb9c <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   3f82c:	ldr	r2, [r1, #4]
   3f830:	add	r0, r2, r0
   3f834:	ldrh	r0, [r0]
   3f838:	cmp	r0, #0
   3f83c:	ldrne	r2, [r1]
   3f840:	addsne	r8, r2, r0
   3f844:	beq	3fb9c <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   3f848:	ldr	r0, [r1, #16]
   3f84c:	ldr	sl, [fp, #12]
   3f850:	ldr	r2, [fp, #8]
   3f854:	add	r7, r0, #1
   3f858:	cmp	r0, #0
   3f85c:	str	r7, [r1, #16]
   3f860:	beq	3f878 <flatcc_json_printer_bool_enum_vector_field@@Base+0x8c>
   3f864:	ldr	r0, [r4, #20]
   3f868:	add	r1, r0, #1
   3f86c:	str	r1, [r4, #20]
   3f870:	mov	r1, #44	; 0x2c
   3f874:	strb	r1, [r0]
   3f878:	ldr	r0, [r8]
   3f87c:	mov	r1, r3
   3f880:	ldr	r9, [r8, r0]!
   3f884:	mov	r0, r4
   3f888:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3f88c:	ldr	r1, [r4, #32]
   3f890:	ldr	r0, [r4, #20]
   3f894:	cmp	r9, #0
   3f898:	add	r1, r1, #1
   3f89c:	str	r1, [r4, #32]
   3f8a0:	add	r1, r0, #1
   3f8a4:	str	r1, [r4, #20]
   3f8a8:	mov	r1, #91	; 0x5b
   3f8ac:	strb	r1, [r0]
   3f8b0:	beq	3fac0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d4>
   3f8b4:	ldrb	r1, [r4, #25]
   3f8b8:	ldr	r0, [r4, #20]
   3f8bc:	cmp	r1, #0
   3f8c0:	beq	3f97c <flatcc_json_printer_bool_enum_vector_field@@Base+0x190>
   3f8c4:	add	r1, r0, #1
   3f8c8:	str	r1, [r4, #20]
   3f8cc:	mov	r1, #10
   3f8d0:	strb	r1, [r0]
   3f8d4:	ldr	r0, [r4, #20]
   3f8d8:	ldrb	r2, [r4, #25]
   3f8dc:	ldr	r3, [r4, #32]
   3f8e0:	ldr	r1, [r4, #16]
   3f8e4:	mla	r7, r3, r2, r0
   3f8e8:	mul	r5, r3, r2
   3f8ec:	cmp	r7, r1
   3f8f0:	bls	3f960 <flatcc_json_printer_bool_enum_vector_field@@Base+0x174>
   3f8f4:	cmp	r0, r1
   3f8f8:	bcc	3f914 <flatcc_json_printer_bool_enum_vector_field@@Base+0x128>
   3f8fc:	ldr	r2, [r4, #44]	; 0x2c
   3f900:	mov	r0, r4
   3f904:	mov	r1, #0
   3f908:	blx	r2
   3f90c:	ldr	r1, [r4, #16]
   3f910:	ldr	r0, [r4, #20]
   3f914:	sub	r6, r1, r0
   3f918:	cmp	r6, r5
   3f91c:	bcs	3f960 <flatcc_json_printer_bool_enum_vector_field@@Base+0x174>
   3f920:	mov	r1, #32
   3f924:	mov	r2, r6
   3f928:	bl	14eec <memset@plt>
   3f92c:	ldr	r0, [r4, #20]
   3f930:	ldr	r2, [r4, #44]	; 0x2c
   3f934:	mov	r1, #0
   3f938:	add	r0, r0, r6
   3f93c:	str	r0, [r4, #20]
   3f940:	mov	r0, r4
   3f944:	blx	r2
   3f948:	ldr	r1, [r4, #16]
   3f94c:	ldr	r0, [r4, #20]
   3f950:	sub	r5, r5, r6
   3f954:	sub	r6, r1, r0
   3f958:	cmp	r5, r6
   3f95c:	bhi	3f920 <flatcc_json_printer_bool_enum_vector_field@@Base+0x134>
   3f960:	mov	r1, #32
   3f964:	mov	r2, r5
   3f968:	bl	14eec <memset@plt>
   3f96c:	ldr	r0, [r4, #20]
   3f970:	add	r0, r0, r5
   3f974:	str	r0, [r4, #20]
   3f978:	b	3f998 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   3f97c:	ldr	r1, [r4, #16]
   3f980:	cmp	r0, r1
   3f984:	bcc	3f998 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   3f988:	ldr	r2, [r4, #44]	; 0x2c
   3f98c:	mov	r0, r4
   3f990:	mov	r1, #0
   3f994:	blx	r2
   3f998:	ldrb	r1, [r8, #4]
   3f99c:	mov	r0, r4
   3f9a0:	blx	sl
   3f9a4:	subs	r9, r9, #1
   3f9a8:	beq	3fac0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d4>
   3f9ac:	add	r7, r8, #5
   3f9b0:	mov	r8, #44	; 0x2c
   3f9b4:	ldr	r0, [r4, #20]
   3f9b8:	sub	r9, r9, #1
   3f9bc:	add	r1, r0, #1
   3f9c0:	str	r1, [r4, #20]
   3f9c4:	strb	r8, [r0]
   3f9c8:	ldrb	r1, [r4, #25]
   3f9cc:	ldr	r0, [r4, #20]
   3f9d0:	cmp	r1, #0
   3f9d4:	beq	3fa90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a4>
   3f9d8:	add	r1, r0, #1
   3f9dc:	str	r1, [r4, #20]
   3f9e0:	mov	r1, #10
   3f9e4:	strb	r1, [r0]
   3f9e8:	ldr	r0, [r4, #20]
   3f9ec:	ldrb	r2, [r4, #25]
   3f9f0:	ldr	r3, [r4, #32]
   3f9f4:	ldr	r1, [r4, #16]
   3f9f8:	mla	r6, r3, r2, r0
   3f9fc:	mul	r5, r3, r2
   3fa00:	cmp	r6, r1
   3fa04:	bls	3fa74 <flatcc_json_printer_bool_enum_vector_field@@Base+0x288>
   3fa08:	cmp	r0, r1
   3fa0c:	bcc	3fa28 <flatcc_json_printer_bool_enum_vector_field@@Base+0x23c>
   3fa10:	ldr	r2, [r4, #44]	; 0x2c
   3fa14:	mov	r0, r4
   3fa18:	mov	r1, #0
   3fa1c:	blx	r2
   3fa20:	ldr	r1, [r4, #16]
   3fa24:	ldr	r0, [r4, #20]
   3fa28:	sub	r6, r1, r0
   3fa2c:	cmp	r6, r5
   3fa30:	bcs	3fa74 <flatcc_json_printer_bool_enum_vector_field@@Base+0x288>
   3fa34:	mov	r1, #32
   3fa38:	mov	r2, r6
   3fa3c:	bl	14eec <memset@plt>
   3fa40:	ldr	r0, [r4, #20]
   3fa44:	ldr	r2, [r4, #44]	; 0x2c
   3fa48:	mov	r1, #0
   3fa4c:	add	r0, r0, r6
   3fa50:	str	r0, [r4, #20]
   3fa54:	mov	r0, r4
   3fa58:	blx	r2
   3fa5c:	ldr	r1, [r4, #16]
   3fa60:	ldr	r0, [r4, #20]
   3fa64:	sub	r5, r5, r6
   3fa68:	sub	r6, r1, r0
   3fa6c:	cmp	r5, r6
   3fa70:	bhi	3fa34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x248>
   3fa74:	mov	r1, #32
   3fa78:	mov	r2, r5
   3fa7c:	bl	14eec <memset@plt>
   3fa80:	ldr	r0, [r4, #20]
   3fa84:	add	r0, r0, r5
   3fa88:	str	r0, [r4, #20]
   3fa8c:	b	3faac <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c0>
   3fa90:	ldr	r1, [r4, #16]
   3fa94:	cmp	r0, r1
   3fa98:	bcc	3faac <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c0>
   3fa9c:	ldr	r2, [r4, #44]	; 0x2c
   3faa0:	mov	r0, r4
   3faa4:	mov	r1, #0
   3faa8:	blx	r2
   3faac:	ldrb	r1, [r7], #1
   3fab0:	mov	r0, r4
   3fab4:	blx	sl
   3fab8:	cmp	r9, #0
   3fabc:	bne	3f9b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c8>
   3fac0:	ldrb	r1, [r4, #25]
   3fac4:	ldr	r0, [r4, #20]
   3fac8:	cmp	r1, #0
   3facc:	beq	3fb8c <flatcc_json_printer_bool_enum_vector_field@@Base+0x3a0>
   3fad0:	add	r1, r0, #1
   3fad4:	str	r1, [r4, #20]
   3fad8:	mov	r1, #10
   3fadc:	strb	r1, [r0]
   3fae0:	ldr	r0, [r4, #32]
   3fae4:	sub	r2, r0, #1
   3fae8:	str	r2, [r4, #32]
   3faec:	ldrb	r3, [r4, #25]
   3faf0:	ldr	r0, [r4, #20]
   3faf4:	ldr	r1, [r4, #16]
   3faf8:	mla	r7, r2, r3, r0
   3fafc:	mul	r5, r2, r3
   3fb00:	cmp	r7, r1
   3fb04:	bls	3fb74 <flatcc_json_printer_bool_enum_vector_field@@Base+0x388>
   3fb08:	cmp	r0, r1
   3fb0c:	bcc	3fb28 <flatcc_json_printer_bool_enum_vector_field@@Base+0x33c>
   3fb10:	ldr	r2, [r4, #44]	; 0x2c
   3fb14:	mov	r0, r4
   3fb18:	mov	r1, #0
   3fb1c:	blx	r2
   3fb20:	ldr	r1, [r4, #16]
   3fb24:	ldr	r0, [r4, #20]
   3fb28:	sub	r6, r1, r0
   3fb2c:	cmp	r6, r5
   3fb30:	bcs	3fb74 <flatcc_json_printer_bool_enum_vector_field@@Base+0x388>
   3fb34:	mov	r1, #32
   3fb38:	mov	r2, r6
   3fb3c:	bl	14eec <memset@plt>
   3fb40:	ldr	r0, [r4, #20]
   3fb44:	ldr	r2, [r4, #44]	; 0x2c
   3fb48:	mov	r1, #0
   3fb4c:	add	r0, r0, r6
   3fb50:	str	r0, [r4, #20]
   3fb54:	mov	r0, r4
   3fb58:	blx	r2
   3fb5c:	ldr	r1, [r4, #16]
   3fb60:	ldr	r0, [r4, #20]
   3fb64:	sub	r5, r5, r6
   3fb68:	sub	r6, r1, r0
   3fb6c:	cmp	r5, r6
   3fb70:	bhi	3fb34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x348>
   3fb74:	mov	r1, #32
   3fb78:	mov	r2, r5
   3fb7c:	bl	14eec <memset@plt>
   3fb80:	ldr	r0, [r4, #20]
   3fb84:	add	r0, r0, r5
   3fb88:	str	r0, [r4, #20]
   3fb8c:	add	r1, r0, #1
   3fb90:	str	r1, [r4, #20]
   3fb94:	mov	r1, #93	; 0x5d
   3fb98:	strb	r1, [r0]
   3fb9c:	sub	sp, fp, #28
   3fba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003fba4 <flatcc_json_printer_struct_vector_field@@Base>:
   3fba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fba8:	add	fp, sp, #28
   3fbac:	sub	sp, sp, #4
   3fbb0:	mov	r4, r0
   3fbb4:	mov	r0, #4
   3fbb8:	add	r0, r0, r2, lsl #1
   3fbbc:	ldr	r2, [r1, #8]
   3fbc0:	cmp	r0, r2
   3fbc4:	bge	40134 <flatcc_json_printer_struct_vector_field@@Base+0x590>
   3fbc8:	ldr	r2, [r1, #4]
   3fbcc:	add	r0, r2, r0
   3fbd0:	ldrh	r0, [r0]
   3fbd4:	cmp	r0, #0
   3fbd8:	ldrne	r2, [r1]
   3fbdc:	addsne	r6, r2, r0
   3fbe0:	beq	40134 <flatcc_json_printer_struct_vector_field@@Base+0x590>
   3fbe4:	ldr	r0, [r1, #16]
   3fbe8:	ldr	r2, [fp, #8]
   3fbec:	add	r7, r0, #1
   3fbf0:	cmp	r0, #0
   3fbf4:	str	r7, [r1, #16]
   3fbf8:	beq	3fc10 <flatcc_json_printer_struct_vector_field@@Base+0x6c>
   3fbfc:	ldr	r0, [r4, #20]
   3fc00:	add	r1, r0, #1
   3fc04:	str	r1, [r4, #20]
   3fc08:	mov	r1, #44	; 0x2c
   3fc0c:	strb	r1, [r0]
   3fc10:	ldr	r0, [r6]
   3fc14:	mov	r1, r3
   3fc18:	ldr	r5, [r6, r0]!
   3fc1c:	mov	r0, r4
   3fc20:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   3fc24:	ldr	r1, [r4, #32]
   3fc28:	ldr	r0, [r4, #20]
   3fc2c:	cmp	r5, #0
   3fc30:	add	r1, r1, #1
   3fc34:	str	r1, [r4, #32]
   3fc38:	add	r1, r0, #1
   3fc3c:	str	r1, [r4, #20]
   3fc40:	mov	r1, #91	; 0x5b
   3fc44:	strb	r1, [r0]
   3fc48:	beq	40058 <flatcc_json_printer_struct_vector_field@@Base+0x4b4>
   3fc4c:	ldrb	r1, [r4, #25]
   3fc50:	ldr	r0, [r4, #20]
   3fc54:	add	r9, r6, #4
   3fc58:	cmp	r1, #0
   3fc5c:	beq	3fd18 <flatcc_json_printer_struct_vector_field@@Base+0x174>
   3fc60:	add	r1, r0, #1
   3fc64:	str	r1, [r4, #20]
   3fc68:	mov	r1, #10
   3fc6c:	strb	r1, [r0]
   3fc70:	ldr	r0, [r4, #20]
   3fc74:	ldrb	r2, [r4, #25]
   3fc78:	ldr	r3, [r4, #32]
   3fc7c:	ldr	r1, [r4, #16]
   3fc80:	mla	r7, r3, r2, r0
   3fc84:	mul	r6, r3, r2
   3fc88:	cmp	r7, r1
   3fc8c:	bls	3fcfc <flatcc_json_printer_struct_vector_field@@Base+0x158>
   3fc90:	cmp	r0, r1
   3fc94:	bcc	3fcb0 <flatcc_json_printer_struct_vector_field@@Base+0x10c>
   3fc98:	ldr	r2, [r4, #44]	; 0x2c
   3fc9c:	mov	r0, r4
   3fca0:	mov	r1, #0
   3fca4:	blx	r2
   3fca8:	ldr	r1, [r4, #16]
   3fcac:	ldr	r0, [r4, #20]
   3fcb0:	sub	r7, r1, r0
   3fcb4:	cmp	r7, r6
   3fcb8:	bcs	3fcfc <flatcc_json_printer_struct_vector_field@@Base+0x158>
   3fcbc:	mov	r1, #32
   3fcc0:	mov	r2, r7
   3fcc4:	bl	14eec <memset@plt>
   3fcc8:	ldr	r0, [r4, #20]
   3fccc:	ldr	r2, [r4, #44]	; 0x2c
   3fcd0:	mov	r1, #0
   3fcd4:	add	r0, r0, r7
   3fcd8:	str	r0, [r4, #20]
   3fcdc:	mov	r0, r4
   3fce0:	blx	r2
   3fce4:	ldr	r1, [r4, #16]
   3fce8:	ldr	r0, [r4, #20]
   3fcec:	sub	r6, r6, r7
   3fcf0:	sub	r7, r1, r0
   3fcf4:	cmp	r6, r7
   3fcf8:	bhi	3fcbc <flatcc_json_printer_struct_vector_field@@Base+0x118>
   3fcfc:	mov	r1, #32
   3fd00:	mov	r2, r6
   3fd04:	bl	14eec <memset@plt>
   3fd08:	ldr	r0, [r4, #20]
   3fd0c:	add	r0, r0, r6
   3fd10:	str	r0, [r4, #20]
   3fd14:	b	3fd38 <flatcc_json_printer_struct_vector_field@@Base+0x194>
   3fd18:	ldr	r1, [r4, #16]
   3fd1c:	cmp	r0, r1
   3fd20:	bcc	3fd38 <flatcc_json_printer_struct_vector_field@@Base+0x194>
   3fd24:	ldr	r2, [r4, #44]	; 0x2c
   3fd28:	mov	r0, r4
   3fd2c:	mov	r1, #0
   3fd30:	blx	r2
   3fd34:	ldr	r0, [r4, #20]
   3fd38:	add	r1, r0, #1
   3fd3c:	ldr	r2, [fp, #16]
   3fd40:	str	r1, [r4, #20]
   3fd44:	ldr	r1, [r4, #32]
   3fd48:	add	r1, r1, #1
   3fd4c:	str	r1, [r4, #32]
   3fd50:	mov	r1, #123	; 0x7b
   3fd54:	strb	r1, [r0]
   3fd58:	mov	r0, r4
   3fd5c:	mov	r1, r9
   3fd60:	blx	r2
   3fd64:	ldrb	r1, [r4, #25]
   3fd68:	ldr	r0, [r4, #20]
   3fd6c:	cmp	r1, #0
   3fd70:	beq	3fe30 <flatcc_json_printer_struct_vector_field@@Base+0x28c>
   3fd74:	add	r1, r0, #1
   3fd78:	str	r1, [r4, #20]
   3fd7c:	mov	r1, #10
   3fd80:	strb	r1, [r0]
   3fd84:	ldr	r0, [r4, #32]
   3fd88:	sub	r2, r0, #1
   3fd8c:	str	r2, [r4, #32]
   3fd90:	ldrb	r3, [r4, #25]
   3fd94:	ldr	r0, [r4, #20]
   3fd98:	ldr	r1, [r4, #16]
   3fd9c:	mla	r7, r2, r3, r0
   3fda0:	mul	r6, r2, r3
   3fda4:	cmp	r7, r1
   3fda8:	bls	3fe18 <flatcc_json_printer_struct_vector_field@@Base+0x274>
   3fdac:	cmp	r0, r1
   3fdb0:	bcc	3fdcc <flatcc_json_printer_struct_vector_field@@Base+0x228>
   3fdb4:	ldr	r2, [r4, #44]	; 0x2c
   3fdb8:	mov	r0, r4
   3fdbc:	mov	r1, #0
   3fdc0:	blx	r2
   3fdc4:	ldr	r1, [r4, #16]
   3fdc8:	ldr	r0, [r4, #20]
   3fdcc:	sub	r7, r1, r0
   3fdd0:	cmp	r7, r6
   3fdd4:	bcs	3fe18 <flatcc_json_printer_struct_vector_field@@Base+0x274>
   3fdd8:	mov	r1, #32
   3fddc:	mov	r2, r7
   3fde0:	bl	14eec <memset@plt>
   3fde4:	ldr	r0, [r4, #20]
   3fde8:	ldr	r2, [r4, #44]	; 0x2c
   3fdec:	mov	r1, #0
   3fdf0:	add	r0, r0, r7
   3fdf4:	str	r0, [r4, #20]
   3fdf8:	mov	r0, r4
   3fdfc:	blx	r2
   3fe00:	ldr	r1, [r4, #16]
   3fe04:	ldr	r0, [r4, #20]
   3fe08:	sub	r6, r6, r7
   3fe0c:	sub	r7, r1, r0
   3fe10:	cmp	r6, r7
   3fe14:	bhi	3fdd8 <flatcc_json_printer_struct_vector_field@@Base+0x234>
   3fe18:	mov	r1, #32
   3fe1c:	mov	r2, r6
   3fe20:	bl	14eec <memset@plt>
   3fe24:	ldr	r0, [r4, #20]
   3fe28:	add	r0, r0, r6
   3fe2c:	str	r0, [r4, #20]
   3fe30:	add	r1, r0, #1
   3fe34:	mov	sl, #125	; 0x7d
   3fe38:	subs	r5, r5, #1
   3fe3c:	str	r1, [r4, #20]
   3fe40:	strb	sl, [r0]
   3fe44:	beq	40058 <flatcc_json_printer_struct_vector_field@@Base+0x4b4>
   3fe48:	mov	r8, #10
   3fe4c:	ldr	r0, [r4, #20]
   3fe50:	add	r1, r0, #1
   3fe54:	str	r1, [r4, #20]
   3fe58:	mov	r1, #44	; 0x2c
   3fe5c:	strb	r1, [r0]
   3fe60:	ldr	r0, [fp, #12]
   3fe64:	ldrb	r1, [r4, #25]
   3fe68:	add	r9, r9, r0
   3fe6c:	ldr	r0, [r4, #20]
   3fe70:	cmp	r1, #0
   3fe74:	beq	3ff2c <flatcc_json_printer_struct_vector_field@@Base+0x388>
   3fe78:	add	r1, r0, #1
   3fe7c:	str	r1, [r4, #20]
   3fe80:	strb	r8, [r0]
   3fe84:	ldr	r0, [r4, #20]
   3fe88:	ldrb	r2, [r4, #25]
   3fe8c:	ldr	r3, [r4, #32]
   3fe90:	ldr	r1, [r4, #16]
   3fe94:	mla	r7, r3, r2, r0
   3fe98:	mul	r6, r3, r2
   3fe9c:	cmp	r7, r1
   3fea0:	bls	3ff10 <flatcc_json_printer_struct_vector_field@@Base+0x36c>
   3fea4:	cmp	r0, r1
   3fea8:	bcc	3fec4 <flatcc_json_printer_struct_vector_field@@Base+0x320>
   3feac:	ldr	r2, [r4, #44]	; 0x2c
   3feb0:	mov	r0, r4
   3feb4:	mov	r1, #0
   3feb8:	blx	r2
   3febc:	ldr	r1, [r4, #16]
   3fec0:	ldr	r0, [r4, #20]
   3fec4:	sub	r7, r1, r0
   3fec8:	cmp	r7, r6
   3fecc:	bcs	3ff10 <flatcc_json_printer_struct_vector_field@@Base+0x36c>
   3fed0:	mov	r1, #32
   3fed4:	mov	r2, r7
   3fed8:	bl	14eec <memset@plt>
   3fedc:	ldr	r0, [r4, #20]
   3fee0:	ldr	r2, [r4, #44]	; 0x2c
   3fee4:	mov	r1, #0
   3fee8:	add	r0, r0, r7
   3feec:	str	r0, [r4, #20]
   3fef0:	mov	r0, r4
   3fef4:	blx	r2
   3fef8:	ldr	r1, [r4, #16]
   3fefc:	ldr	r0, [r4, #20]
   3ff00:	sub	r6, r6, r7
   3ff04:	sub	r7, r1, r0
   3ff08:	cmp	r6, r7
   3ff0c:	bhi	3fed0 <flatcc_json_printer_struct_vector_field@@Base+0x32c>
   3ff10:	mov	r1, #32
   3ff14:	mov	r2, r6
   3ff18:	bl	14eec <memset@plt>
   3ff1c:	ldr	r0, [r4, #20]
   3ff20:	add	r0, r0, r6
   3ff24:	str	r0, [r4, #20]
   3ff28:	b	3ff4c <flatcc_json_printer_struct_vector_field@@Base+0x3a8>
   3ff2c:	ldr	r1, [r4, #16]
   3ff30:	cmp	r0, r1
   3ff34:	bcc	3ff4c <flatcc_json_printer_struct_vector_field@@Base+0x3a8>
   3ff38:	ldr	r2, [r4, #44]	; 0x2c
   3ff3c:	mov	r0, r4
   3ff40:	mov	r1, #0
   3ff44:	blx	r2
   3ff48:	ldr	r0, [r4, #20]
   3ff4c:	add	r1, r0, #1
   3ff50:	ldr	r2, [fp, #16]
   3ff54:	sub	r5, r5, #1
   3ff58:	str	r1, [r4, #20]
   3ff5c:	ldr	r1, [r4, #32]
   3ff60:	add	r1, r1, #1
   3ff64:	str	r1, [r4, #32]
   3ff68:	mov	r1, #123	; 0x7b
   3ff6c:	strb	r1, [r0]
   3ff70:	mov	r0, r4
   3ff74:	mov	r1, r9
   3ff78:	blx	r2
   3ff7c:	ldrb	r1, [r4, #25]
   3ff80:	ldr	r0, [r4, #20]
   3ff84:	cmp	r1, #0
   3ff88:	beq	40044 <flatcc_json_printer_struct_vector_field@@Base+0x4a0>
   3ff8c:	add	r1, r0, #1
   3ff90:	str	r1, [r4, #20]
   3ff94:	strb	r8, [r0]
   3ff98:	ldr	r0, [r4, #32]
   3ff9c:	sub	r2, r0, #1
   3ffa0:	str	r2, [r4, #32]
   3ffa4:	ldrb	r3, [r4, #25]
   3ffa8:	ldr	r0, [r4, #20]
   3ffac:	ldr	r1, [r4, #16]
   3ffb0:	mla	r7, r2, r3, r0
   3ffb4:	mul	r6, r2, r3
   3ffb8:	cmp	r7, r1
   3ffbc:	bls	4002c <flatcc_json_printer_struct_vector_field@@Base+0x488>
   3ffc0:	cmp	r0, r1
   3ffc4:	bcc	3ffe0 <flatcc_json_printer_struct_vector_field@@Base+0x43c>
   3ffc8:	ldr	r2, [r4, #44]	; 0x2c
   3ffcc:	mov	r0, r4
   3ffd0:	mov	r1, #0
   3ffd4:	blx	r2
   3ffd8:	ldr	r1, [r4, #16]
   3ffdc:	ldr	r0, [r4, #20]
   3ffe0:	sub	r7, r1, r0
   3ffe4:	cmp	r7, r6
   3ffe8:	bcs	4002c <flatcc_json_printer_struct_vector_field@@Base+0x488>
   3ffec:	mov	r1, #32
   3fff0:	mov	r2, r7
   3fff4:	bl	14eec <memset@plt>
   3fff8:	ldr	r0, [r4, #20]
   3fffc:	ldr	r2, [r4, #44]	; 0x2c
   40000:	mov	r1, #0
   40004:	add	r0, r0, r7
   40008:	str	r0, [r4, #20]
   4000c:	mov	r0, r4
   40010:	blx	r2
   40014:	ldr	r1, [r4, #16]
   40018:	ldr	r0, [r4, #20]
   4001c:	sub	r6, r6, r7
   40020:	sub	r7, r1, r0
   40024:	cmp	r6, r7
   40028:	bhi	3ffec <flatcc_json_printer_struct_vector_field@@Base+0x448>
   4002c:	mov	r1, #32
   40030:	mov	r2, r6
   40034:	bl	14eec <memset@plt>
   40038:	ldr	r0, [r4, #20]
   4003c:	add	r0, r0, r6
   40040:	str	r0, [r4, #20]
   40044:	add	r1, r0, #1
   40048:	cmp	r5, #0
   4004c:	str	r1, [r4, #20]
   40050:	strb	sl, [r0]
   40054:	bne	3fe4c <flatcc_json_printer_struct_vector_field@@Base+0x2a8>
   40058:	ldrb	r1, [r4, #25]
   4005c:	ldr	r0, [r4, #20]
   40060:	cmp	r1, #0
   40064:	beq	40124 <flatcc_json_printer_struct_vector_field@@Base+0x580>
   40068:	add	r1, r0, #1
   4006c:	str	r1, [r4, #20]
   40070:	mov	r1, #10
   40074:	strb	r1, [r0]
   40078:	ldr	r0, [r4, #32]
   4007c:	sub	r2, r0, #1
   40080:	str	r2, [r4, #32]
   40084:	ldrb	r3, [r4, #25]
   40088:	ldr	r0, [r4, #20]
   4008c:	ldr	r1, [r4, #16]
   40090:	mla	r7, r2, r3, r0
   40094:	mul	r5, r2, r3
   40098:	cmp	r7, r1
   4009c:	bls	4010c <flatcc_json_printer_struct_vector_field@@Base+0x568>
   400a0:	cmp	r0, r1
   400a4:	bcc	400c0 <flatcc_json_printer_struct_vector_field@@Base+0x51c>
   400a8:	ldr	r2, [r4, #44]	; 0x2c
   400ac:	mov	r0, r4
   400b0:	mov	r1, #0
   400b4:	blx	r2
   400b8:	ldr	r1, [r4, #16]
   400bc:	ldr	r0, [r4, #20]
   400c0:	sub	r6, r1, r0
   400c4:	cmp	r6, r5
   400c8:	bcs	4010c <flatcc_json_printer_struct_vector_field@@Base+0x568>
   400cc:	mov	r1, #32
   400d0:	mov	r2, r6
   400d4:	bl	14eec <memset@plt>
   400d8:	ldr	r0, [r4, #20]
   400dc:	ldr	r2, [r4, #44]	; 0x2c
   400e0:	mov	r1, #0
   400e4:	add	r0, r0, r6
   400e8:	str	r0, [r4, #20]
   400ec:	mov	r0, r4
   400f0:	blx	r2
   400f4:	ldr	r1, [r4, #16]
   400f8:	ldr	r0, [r4, #20]
   400fc:	sub	r5, r5, r6
   40100:	sub	r6, r1, r0
   40104:	cmp	r5, r6
   40108:	bhi	400cc <flatcc_json_printer_struct_vector_field@@Base+0x528>
   4010c:	mov	r1, #32
   40110:	mov	r2, r5
   40114:	bl	14eec <memset@plt>
   40118:	ldr	r0, [r4, #20]
   4011c:	add	r0, r0, r5
   40120:	str	r0, [r4, #20]
   40124:	add	r1, r0, #1
   40128:	str	r1, [r4, #20]
   4012c:	mov	r1, #93	; 0x5d
   40130:	strb	r1, [r0]
   40134:	sub	sp, fp, #28
   40138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004013c <flatcc_json_printer_string_vector_field@@Base>:
   4013c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40140:	add	fp, sp, #28
   40144:	sub	sp, sp, #4
   40148:	mov	r4, r0
   4014c:	mov	r0, #4
   40150:	add	r0, r0, r2, lsl #1
   40154:	ldr	r2, [r1, #8]
   40158:	cmp	r0, r2
   4015c:	bge	404e8 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   40160:	ldr	r2, [r1, #4]
   40164:	add	r0, r2, r0
   40168:	ldrh	r0, [r0]
   4016c:	cmp	r0, #0
   40170:	ldrne	r2, [r1]
   40174:	addsne	r5, r2, r0
   40178:	beq	404e8 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   4017c:	ldr	r0, [r1, #16]
   40180:	ldr	r2, [fp, #8]
   40184:	add	r7, r0, #1
   40188:	cmp	r0, #0
   4018c:	str	r7, [r1, #16]
   40190:	beq	401a8 <flatcc_json_printer_string_vector_field@@Base+0x6c>
   40194:	ldr	r0, [r4, #20]
   40198:	add	r1, r0, #1
   4019c:	str	r1, [r4, #20]
   401a0:	mov	r1, #44	; 0x2c
   401a4:	strb	r1, [r0]
   401a8:	ldr	r0, [r5]
   401ac:	mov	r1, r3
   401b0:	ldr	r8, [r5, r0]!
   401b4:	mov	r0, r4
   401b8:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   401bc:	ldr	r1, [r4, #32]
   401c0:	ldr	r0, [r4, #20]
   401c4:	cmp	r8, #0
   401c8:	add	r1, r1, #1
   401cc:	str	r1, [r4, #32]
   401d0:	add	r1, r0, #1
   401d4:	str	r1, [r4, #20]
   401d8:	mov	r1, #91	; 0x5b
   401dc:	strb	r1, [r0]
   401e0:	beq	4040c <flatcc_json_printer_string_vector_field@@Base+0x2d0>
   401e4:	ldrb	r1, [r4, #25]
   401e8:	ldr	r0, [r4, #20]
   401ec:	add	r9, r5, #4
   401f0:	cmp	r1, #0
   401f4:	beq	402b0 <flatcc_json_printer_string_vector_field@@Base+0x174>
   401f8:	add	r1, r0, #1
   401fc:	str	r1, [r4, #20]
   40200:	mov	r1, #10
   40204:	strb	r1, [r0]
   40208:	ldr	r0, [r4, #20]
   4020c:	ldrb	r2, [r4, #25]
   40210:	ldr	r3, [r4, #32]
   40214:	ldr	r1, [r4, #16]
   40218:	mla	r7, r3, r2, r0
   4021c:	mul	r5, r3, r2
   40220:	cmp	r7, r1
   40224:	bls	40294 <flatcc_json_printer_string_vector_field@@Base+0x158>
   40228:	cmp	r0, r1
   4022c:	bcc	40248 <flatcc_json_printer_string_vector_field@@Base+0x10c>
   40230:	ldr	r2, [r4, #44]	; 0x2c
   40234:	mov	r0, r4
   40238:	mov	r1, #0
   4023c:	blx	r2
   40240:	ldr	r1, [r4, #16]
   40244:	ldr	r0, [r4, #20]
   40248:	sub	r6, r1, r0
   4024c:	cmp	r6, r5
   40250:	bcs	40294 <flatcc_json_printer_string_vector_field@@Base+0x158>
   40254:	mov	r1, #32
   40258:	mov	r2, r6
   4025c:	bl	14eec <memset@plt>
   40260:	ldr	r0, [r4, #20]
   40264:	ldr	r2, [r4, #44]	; 0x2c
   40268:	mov	r1, #0
   4026c:	add	r0, r0, r6
   40270:	str	r0, [r4, #20]
   40274:	mov	r0, r4
   40278:	blx	r2
   4027c:	ldr	r1, [r4, #16]
   40280:	ldr	r0, [r4, #20]
   40284:	sub	r5, r5, r6
   40288:	sub	r6, r1, r0
   4028c:	cmp	r5, r6
   40290:	bhi	40254 <flatcc_json_printer_string_vector_field@@Base+0x118>
   40294:	mov	r1, #32
   40298:	mov	r2, r5
   4029c:	bl	14eec <memset@plt>
   402a0:	ldr	r0, [r4, #20]
   402a4:	add	r0, r0, r5
   402a8:	str	r0, [r4, #20]
   402ac:	b	402cc <flatcc_json_printer_string_vector_field@@Base+0x190>
   402b0:	ldr	r1, [r4, #16]
   402b4:	cmp	r0, r1
   402b8:	bcc	402cc <flatcc_json_printer_string_vector_field@@Base+0x190>
   402bc:	ldr	r2, [r4, #44]	; 0x2c
   402c0:	mov	r0, r4
   402c4:	mov	r1, #0
   402c8:	blx	r2
   402cc:	ldr	r0, [r9]
   402d0:	mov	r1, r9
   402d4:	ldr	r2, [r1, r0]!
   402d8:	mov	r0, r4
   402dc:	add	r1, r1, #4
   402e0:	bl	37548 <flatcc_json_printer_string@@Base+0x4>
   402e4:	subs	r7, r8, #1
   402e8:	beq	4040c <flatcc_json_printer_string_vector_field@@Base+0x2d0>
   402ec:	mov	r8, #44	; 0x2c
   402f0:	mov	sl, #10
   402f4:	ldr	r0, [r4, #20]
   402f8:	add	r9, r9, #4
   402fc:	sub	r7, r7, #1
   40300:	add	r1, r0, #1
   40304:	str	r1, [r4, #20]
   40308:	strb	r8, [r0]
   4030c:	ldrb	r1, [r4, #25]
   40310:	ldr	r0, [r4, #20]
   40314:	cmp	r1, #0
   40318:	beq	403d0 <flatcc_json_printer_string_vector_field@@Base+0x294>
   4031c:	add	r1, r0, #1
   40320:	str	r1, [r4, #20]
   40324:	strb	sl, [r0]
   40328:	ldr	r0, [r4, #20]
   4032c:	ldrb	r2, [r4, #25]
   40330:	ldr	r3, [r4, #32]
   40334:	ldr	r1, [r4, #16]
   40338:	mla	r6, r3, r2, r0
   4033c:	mul	r5, r3, r2
   40340:	cmp	r6, r1
   40344:	bls	403b4 <flatcc_json_printer_string_vector_field@@Base+0x278>
   40348:	cmp	r0, r1
   4034c:	bcc	40368 <flatcc_json_printer_string_vector_field@@Base+0x22c>
   40350:	ldr	r2, [r4, #44]	; 0x2c
   40354:	mov	r0, r4
   40358:	mov	r1, #0
   4035c:	blx	r2
   40360:	ldr	r1, [r4, #16]
   40364:	ldr	r0, [r4, #20]
   40368:	sub	r6, r1, r0
   4036c:	cmp	r6, r5
   40370:	bcs	403b4 <flatcc_json_printer_string_vector_field@@Base+0x278>
   40374:	mov	r1, #32
   40378:	mov	r2, r6
   4037c:	bl	14eec <memset@plt>
   40380:	ldr	r0, [r4, #20]
   40384:	ldr	r2, [r4, #44]	; 0x2c
   40388:	mov	r1, #0
   4038c:	add	r0, r0, r6
   40390:	str	r0, [r4, #20]
   40394:	mov	r0, r4
   40398:	blx	r2
   4039c:	ldr	r1, [r4, #16]
   403a0:	ldr	r0, [r4, #20]
   403a4:	sub	r5, r5, r6
   403a8:	sub	r6, r1, r0
   403ac:	cmp	r5, r6
   403b0:	bhi	40374 <flatcc_json_printer_string_vector_field@@Base+0x238>
   403b4:	mov	r1, #32
   403b8:	mov	r2, r5
   403bc:	bl	14eec <memset@plt>
   403c0:	ldr	r0, [r4, #20]
   403c4:	add	r0, r0, r5
   403c8:	str	r0, [r4, #20]
   403cc:	b	403ec <flatcc_json_printer_string_vector_field@@Base+0x2b0>
   403d0:	ldr	r1, [r4, #16]
   403d4:	cmp	r0, r1
   403d8:	bcc	403ec <flatcc_json_printer_string_vector_field@@Base+0x2b0>
   403dc:	ldr	r2, [r4, #44]	; 0x2c
   403e0:	mov	r0, r4
   403e4:	mov	r1, #0
   403e8:	blx	r2
   403ec:	ldr	r0, [r9]
   403f0:	mov	r1, r9
   403f4:	ldr	r2, [r1, r0]!
   403f8:	mov	r0, r4
   403fc:	add	r1, r1, #4
   40400:	bl	37548 <flatcc_json_printer_string@@Base+0x4>
   40404:	cmp	r7, #0
   40408:	bne	402f4 <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   4040c:	ldrb	r1, [r4, #25]
   40410:	ldr	r0, [r4, #20]
   40414:	cmp	r1, #0
   40418:	beq	404d8 <flatcc_json_printer_string_vector_field@@Base+0x39c>
   4041c:	add	r1, r0, #1
   40420:	str	r1, [r4, #20]
   40424:	mov	r1, #10
   40428:	strb	r1, [r0]
   4042c:	ldr	r0, [r4, #32]
   40430:	sub	r2, r0, #1
   40434:	str	r2, [r4, #32]
   40438:	ldrb	r3, [r4, #25]
   4043c:	ldr	r0, [r4, #20]
   40440:	ldr	r1, [r4, #16]
   40444:	mla	r7, r2, r3, r0
   40448:	mul	r5, r2, r3
   4044c:	cmp	r7, r1
   40450:	bls	404c0 <flatcc_json_printer_string_vector_field@@Base+0x384>
   40454:	cmp	r0, r1
   40458:	bcc	40474 <flatcc_json_printer_string_vector_field@@Base+0x338>
   4045c:	ldr	r2, [r4, #44]	; 0x2c
   40460:	mov	r0, r4
   40464:	mov	r1, #0
   40468:	blx	r2
   4046c:	ldr	r1, [r4, #16]
   40470:	ldr	r0, [r4, #20]
   40474:	sub	r6, r1, r0
   40478:	cmp	r6, r5
   4047c:	bcs	404c0 <flatcc_json_printer_string_vector_field@@Base+0x384>
   40480:	mov	r1, #32
   40484:	mov	r2, r6
   40488:	bl	14eec <memset@plt>
   4048c:	ldr	r0, [r4, #20]
   40490:	ldr	r2, [r4, #44]	; 0x2c
   40494:	mov	r1, #0
   40498:	add	r0, r0, r6
   4049c:	str	r0, [r4, #20]
   404a0:	mov	r0, r4
   404a4:	blx	r2
   404a8:	ldr	r1, [r4, #16]
   404ac:	ldr	r0, [r4, #20]
   404b0:	sub	r5, r5, r6
   404b4:	sub	r6, r1, r0
   404b8:	cmp	r5, r6
   404bc:	bhi	40480 <flatcc_json_printer_string_vector_field@@Base+0x344>
   404c0:	mov	r1, #32
   404c4:	mov	r2, r5
   404c8:	bl	14eec <memset@plt>
   404cc:	ldr	r0, [r4, #20]
   404d0:	add	r0, r0, r5
   404d4:	str	r0, [r4, #20]
   404d8:	add	r1, r0, #1
   404dc:	str	r1, [r4, #20]
   404e0:	mov	r1, #93	; 0x5d
   404e4:	strb	r1, [r0]
   404e8:	sub	sp, fp, #28
   404ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000404f0 <flatcc_json_printer_table_vector_field@@Base>:
   404f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   404f4:	add	fp, sp, #28
   404f8:	sub	sp, sp, #20
   404fc:	mov	sl, r1
   40500:	ldr	r1, [r1, #8]
   40504:	mov	r4, r0
   40508:	mov	r0, #4
   4050c:	add	r0, r0, r2, lsl #1
   40510:	cmp	r0, r1
   40514:	bge	4096c <flatcc_json_printer_table_vector_field@@Base+0x47c>
   40518:	ldr	r1, [sl, #4]
   4051c:	add	r0, r1, r0
   40520:	ldrh	r0, [r0]
   40524:	cmp	r0, #0
   40528:	ldrne	r1, [sl]
   4052c:	addsne	r5, r1, r0
   40530:	beq	4096c <flatcc_json_printer_table_vector_field@@Base+0x47c>
   40534:	ldr	r0, [sl, #16]
   40538:	ldr	r2, [fp, #8]
   4053c:	add	r1, r0, #1
   40540:	cmp	r0, #0
   40544:	str	r1, [sl, #16]
   40548:	beq	40560 <flatcc_json_printer_table_vector_field@@Base+0x70>
   4054c:	ldr	r0, [r4, #20]
   40550:	add	r1, r0, #1
   40554:	str	r1, [r4, #20]
   40558:	mov	r1, #44	; 0x2c
   4055c:	strb	r1, [r0]
   40560:	ldr	r0, [r5]
   40564:	mov	r1, r3
   40568:	ldr	r8, [r5, r0]!
   4056c:	mov	r0, r4
   40570:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   40574:	ldr	r1, [r4, #32]
   40578:	ldr	r0, [r4, #20]
   4057c:	cmp	r8, #0
   40580:	add	r1, r1, #1
   40584:	str	r1, [r4, #32]
   40588:	add	r1, r0, #1
   4058c:	str	r1, [r4, #20]
   40590:	mov	r1, #91	; 0x5b
   40594:	strb	r1, [r0]
   40598:	beq	40890 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   4059c:	ldr	r0, [sl, #12]
   405a0:	ldr	r6, [fp, #12]
   405a4:	add	r5, r5, #4
   405a8:	subs	r0, r0, #1
   405ac:	beq	406ec <flatcc_json_printer_table_vector_field@@Base+0x1fc>
   405b0:	ldr	r3, [r4, #32]
   405b4:	ldr	r2, [r4, #20]
   405b8:	ldr	r1, [r5]
   405bc:	add	r3, r3, #1
   405c0:	add	r1, r5, r1
   405c4:	str	r3, [r4, #32]
   405c8:	add	r3, r2, #1
   405cc:	str	r3, [r4, #20]
   405d0:	mov	r3, #123	; 0x7b
   405d4:	strb	r3, [r2]
   405d8:	str	r0, [sp, #12]
   405dc:	mov	r0, #0
   405e0:	str	r0, [sp, #16]
   405e4:	str	r1, [sp]
   405e8:	ldr	r0, [r1]
   405ec:	sub	r2, r1, r0
   405f0:	str	r2, [sp, #4]
   405f4:	ldrh	r0, [r1, -r0]
   405f8:	mov	r1, sp
   405fc:	str	r0, [sp, #8]
   40600:	mov	r0, r4
   40604:	blx	r6
   40608:	ldrb	r1, [r4, #25]
   4060c:	ldr	r0, [r4, #20]
   40610:	cmp	r1, #0
   40614:	beq	406d8 <flatcc_json_printer_table_vector_field@@Base+0x1e8>
   40618:	add	r1, r0, #1
   4061c:	str	r1, [r4, #20]
   40620:	mov	r1, #10
   40624:	strb	r1, [r0]
   40628:	ldr	r0, [r4, #32]
   4062c:	sub	r2, r0, #1
   40630:	str	r2, [r4, #32]
   40634:	ldrb	r3, [r4, #25]
   40638:	ldr	r0, [r4, #20]
   4063c:	ldr	r1, [r4, #16]
   40640:	mla	r7, r2, r3, r0
   40644:	mul	r6, r2, r3
   40648:	cmp	r7, r1
   4064c:	bls	406bc <flatcc_json_printer_table_vector_field@@Base+0x1cc>
   40650:	cmp	r0, r1
   40654:	bcc	40670 <flatcc_json_printer_table_vector_field@@Base+0x180>
   40658:	ldr	r2, [r4, #44]	; 0x2c
   4065c:	mov	r0, r4
   40660:	mov	r1, #0
   40664:	blx	r2
   40668:	ldr	r1, [r4, #16]
   4066c:	ldr	r0, [r4, #20]
   40670:	sub	r7, r1, r0
   40674:	cmp	r7, r6
   40678:	bcs	406bc <flatcc_json_printer_table_vector_field@@Base+0x1cc>
   4067c:	mov	r1, #32
   40680:	mov	r2, r7
   40684:	bl	14eec <memset@plt>
   40688:	ldr	r0, [r4, #20]
   4068c:	ldr	r2, [r4, #44]	; 0x2c
   40690:	mov	r1, #0
   40694:	add	r0, r0, r7
   40698:	str	r0, [r4, #20]
   4069c:	mov	r0, r4
   406a0:	blx	r2
   406a4:	ldr	r1, [r4, #16]
   406a8:	ldr	r0, [r4, #20]
   406ac:	sub	r6, r6, r7
   406b0:	sub	r7, r1, r0
   406b4:	cmp	r6, r7
   406b8:	bhi	4067c <flatcc_json_printer_table_vector_field@@Base+0x18c>
   406bc:	mov	r1, #32
   406c0:	mov	r2, r6
   406c4:	bl	14eec <memset@plt>
   406c8:	ldr	r0, [r4, #20]
   406cc:	add	r0, r0, r6
   406d0:	ldr	r6, [fp, #12]
   406d4:	str	r0, [r4, #20]
   406d8:	add	r1, r0, #1
   406dc:	str	r1, [r4, #20]
   406e0:	mov	r1, #125	; 0x7d
   406e4:	strb	r1, [r0]
   406e8:	b	406fc <flatcc_json_printer_table_vector_field@@Base+0x20c>
   406ec:	ldr	r0, [r4, #36]	; 0x24
   406f0:	cmp	r0, #0
   406f4:	moveq	r0, #2
   406f8:	streq	r0, [r4, #36]	; 0x24
   406fc:	subs	r9, r8, #1
   40700:	beq	40890 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   40704:	mov	r8, #44	; 0x2c
   40708:	ldr	r0, [r4, #20]
   4070c:	sub	r9, r9, #1
   40710:	add	r1, r0, #1
   40714:	str	r1, [r4, #20]
   40718:	strb	r8, [r0]
   4071c:	ldr	r0, [sl, #12]
   40720:	ldr	r1, [r5, #4]!
   40724:	subs	r0, r0, #1
   40728:	beq	40848 <flatcc_json_printer_table_vector_field@@Base+0x358>
   4072c:	ldr	r3, [r4, #32]
   40730:	ldr	r2, [r4, #20]
   40734:	add	r1, r5, r1
   40738:	add	r3, r3, #1
   4073c:	str	r3, [r4, #32]
   40740:	add	r3, r2, #1
   40744:	str	r3, [r4, #20]
   40748:	mov	r3, #123	; 0x7b
   4074c:	strb	r3, [r2]
   40750:	str	r0, [sp, #12]
   40754:	mov	r0, #0
   40758:	str	r0, [sp, #16]
   4075c:	str	r1, [sp]
   40760:	ldr	r0, [r1]
   40764:	sub	r2, r1, r0
   40768:	str	r2, [sp, #4]
   4076c:	ldrh	r0, [r1, -r0]
   40770:	mov	r1, sp
   40774:	str	r0, [sp, #8]
   40778:	mov	r0, r4
   4077c:	blx	r6
   40780:	ldrb	r1, [r4, #25]
   40784:	ldr	r0, [r4, #20]
   40788:	cmp	r1, #0
   4078c:	beq	40878 <flatcc_json_printer_table_vector_field@@Base+0x388>
   40790:	add	r1, r0, #1
   40794:	str	r1, [r4, #20]
   40798:	mov	r1, #10
   4079c:	strb	r1, [r0]
   407a0:	ldr	r0, [r4, #32]
   407a4:	sub	r2, r0, #1
   407a8:	str	r2, [r4, #32]
   407ac:	ldrb	r3, [r4, #25]
   407b0:	ldr	r0, [r4, #20]
   407b4:	ldr	r1, [r4, #16]
   407b8:	mla	r6, r2, r3, r0
   407bc:	mul	r7, r2, r3
   407c0:	cmp	r6, r1
   407c4:	bls	4085c <flatcc_json_printer_table_vector_field@@Base+0x36c>
   407c8:	cmp	r0, r1
   407cc:	bcc	407e8 <flatcc_json_printer_table_vector_field@@Base+0x2f8>
   407d0:	ldr	r2, [r4, #44]	; 0x2c
   407d4:	mov	r0, r4
   407d8:	mov	r1, #0
   407dc:	blx	r2
   407e0:	ldr	r1, [r4, #16]
   407e4:	ldr	r0, [r4, #20]
   407e8:	sub	r6, r1, r0
   407ec:	cmp	r6, r7
   407f0:	bcs	40834 <flatcc_json_printer_table_vector_field@@Base+0x344>
   407f4:	mov	r1, #32
   407f8:	mov	r2, r6
   407fc:	bl	14eec <memset@plt>
   40800:	ldr	r0, [r4, #20]
   40804:	ldr	r2, [r4, #44]	; 0x2c
   40808:	mov	r1, #0
   4080c:	add	r0, r0, r6
   40810:	str	r0, [r4, #20]
   40814:	mov	r0, r4
   40818:	blx	r2
   4081c:	ldr	r1, [r4, #16]
   40820:	ldr	r0, [r4, #20]
   40824:	sub	r7, r7, r6
   40828:	sub	r6, r1, r0
   4082c:	cmp	r7, r6
   40830:	bhi	407f4 <flatcc_json_printer_table_vector_field@@Base+0x304>
   40834:	ldr	r6, [fp, #12]
   40838:	mov	r1, #32
   4083c:	mov	r2, r7
   40840:	bl	14eec <memset@plt>
   40844:	b	4086c <flatcc_json_printer_table_vector_field@@Base+0x37c>
   40848:	ldr	r0, [r4, #36]	; 0x24
   4084c:	cmp	r0, #0
   40850:	moveq	r0, #2
   40854:	streq	r0, [r4, #36]	; 0x24
   40858:	b	40888 <flatcc_json_printer_table_vector_field@@Base+0x398>
   4085c:	mov	r1, #32
   40860:	mov	r2, r7
   40864:	bl	14eec <memset@plt>
   40868:	ldr	r6, [fp, #12]
   4086c:	ldr	r0, [r4, #20]
   40870:	add	r0, r0, r7
   40874:	str	r0, [r4, #20]
   40878:	add	r1, r0, #1
   4087c:	str	r1, [r4, #20]
   40880:	mov	r1, #125	; 0x7d
   40884:	strb	r1, [r0]
   40888:	cmp	r9, #0
   4088c:	bne	40708 <flatcc_json_printer_table_vector_field@@Base+0x218>
   40890:	ldrb	r1, [r4, #25]
   40894:	ldr	r0, [r4, #20]
   40898:	cmp	r1, #0
   4089c:	beq	4095c <flatcc_json_printer_table_vector_field@@Base+0x46c>
   408a0:	add	r1, r0, #1
   408a4:	str	r1, [r4, #20]
   408a8:	mov	r1, #10
   408ac:	strb	r1, [r0]
   408b0:	ldr	r0, [r4, #32]
   408b4:	sub	r2, r0, #1
   408b8:	str	r2, [r4, #32]
   408bc:	ldrb	r3, [r4, #25]
   408c0:	ldr	r0, [r4, #20]
   408c4:	ldr	r1, [r4, #16]
   408c8:	mla	r7, r2, r3, r0
   408cc:	mul	r5, r2, r3
   408d0:	cmp	r7, r1
   408d4:	bls	40944 <flatcc_json_printer_table_vector_field@@Base+0x454>
   408d8:	cmp	r0, r1
   408dc:	bcc	408f8 <flatcc_json_printer_table_vector_field@@Base+0x408>
   408e0:	ldr	r2, [r4, #44]	; 0x2c
   408e4:	mov	r0, r4
   408e8:	mov	r1, #0
   408ec:	blx	r2
   408f0:	ldr	r1, [r4, #16]
   408f4:	ldr	r0, [r4, #20]
   408f8:	sub	r6, r1, r0
   408fc:	cmp	r6, r5
   40900:	bcs	40944 <flatcc_json_printer_table_vector_field@@Base+0x454>
   40904:	mov	r1, #32
   40908:	mov	r2, r6
   4090c:	bl	14eec <memset@plt>
   40910:	ldr	r0, [r4, #20]
   40914:	ldr	r2, [r4, #44]	; 0x2c
   40918:	mov	r1, #0
   4091c:	add	r0, r0, r6
   40920:	str	r0, [r4, #20]
   40924:	mov	r0, r4
   40928:	blx	r2
   4092c:	ldr	r1, [r4, #16]
   40930:	ldr	r0, [r4, #20]
   40934:	sub	r5, r5, r6
   40938:	sub	r6, r1, r0
   4093c:	cmp	r5, r6
   40940:	bhi	40904 <flatcc_json_printer_table_vector_field@@Base+0x414>
   40944:	mov	r1, #32
   40948:	mov	r2, r5
   4094c:	bl	14eec <memset@plt>
   40950:	ldr	r0, [r4, #20]
   40954:	add	r0, r0, r5
   40958:	str	r0, [r4, #20]
   4095c:	add	r1, r0, #1
   40960:	str	r1, [r4, #20]
   40964:	mov	r1, #93	; 0x5d
   40968:	strb	r1, [r0]
   4096c:	sub	sp, fp, #28
   40970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040974 <flatcc_json_printer_union_vector_field@@Base>:
   40974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40978:	add	fp, sp, #28
   4097c:	sub	sp, sp, #140	; 0x8c
   40980:	mov	r6, r1
   40984:	ldr	r1, [r1, #8]
   40988:	mov	r8, r0
   4098c:	sub	r9, r2, #1
   40990:	mov	r0, #4
   40994:	mov	r4, r3
   40998:	mov	r5, #0
   4099c:	mov	sl, #0
   409a0:	add	r3, r0, r9, lsl #1
   409a4:	cmp	r3, r1
   409a8:	bge	409c8 <flatcc_json_printer_union_vector_field@@Base+0x54>
   409ac:	ldr	r7, [r6, #4]
   409b0:	mov	sl, #0
   409b4:	add	r3, r7, r3
   409b8:	ldrh	r3, [r3]
   409bc:	cmp	r3, #0
   409c0:	ldrne	r7, [r6]
   409c4:	addne	sl, r7, r3
   409c8:	ldr	r7, [fp, #8]
   409cc:	add	r0, r0, r2, lsl #1
   409d0:	cmp	r0, r1
   409d4:	bge	409f0 <flatcc_json_printer_union_vector_field@@Base+0x7c>
   409d8:	ldr	r1, [r6, #4]
   409dc:	add	r0, r1, r0
   409e0:	ldrh	r0, [r0]
   409e4:	cmp	r0, #0
   409e8:	ldrne	r1, [r6]
   409ec:	addne	r5, r1, r0
   409f0:	ldr	r0, [r6, #12]
   409f4:	cmp	r7, #101	; 0x65
   409f8:	str	r5, [sp, #16]
   409fc:	str	r0, [sp, #24]
   40a00:	bge	40cf4 <flatcc_json_printer_union_vector_field@@Base+0x380>
   40a04:	add	r5, sp, #32
   40a08:	mov	r1, r4
   40a0c:	mov	r2, r7
   40a10:	mov	r0, r5
   40a14:	bl	14e5c <memcpy@plt>
   40a18:	movw	r0, #29791	; 0x745f
   40a1c:	cmp	sl, #0
   40a20:	mov	r1, #101	; 0x65
   40a24:	movt	r0, #28793	; 0x7079
   40a28:	str	r0, [r5, r7]
   40a2c:	add	r0, r5, r7
   40a30:	ldr	r5, [sp, #16]
   40a34:	strb	r1, [r0, #4]
   40a38:	cmpne	r5, #0
   40a3c:	beq	40cec <flatcc_json_printer_union_vector_field@@Base+0x378>
   40a40:	ldr	r0, [fp, #12]
   40a44:	add	r1, r7, #5
   40a48:	add	r3, sp, #32
   40a4c:	mov	r2, r9
   40a50:	str	r1, [sp]
   40a54:	mov	r1, r6
   40a58:	str	r0, [sp, #4]
   40a5c:	mov	r0, r8
   40a60:	bl	3d66c <flatcc_json_printer_utype_enum_vector_field@@Base>
   40a64:	ldr	r0, [r6, #16]
   40a68:	add	r1, r0, #1
   40a6c:	cmp	r0, #0
   40a70:	str	r1, [r6, #16]
   40a74:	beq	40a8c <flatcc_json_printer_union_vector_field@@Base+0x118>
   40a78:	ldr	r0, [r8, #20]
   40a7c:	add	r1, r0, #1
   40a80:	str	r1, [r8, #20]
   40a84:	mov	r1, #44	; 0x2c
   40a88:	strb	r1, [r0]
   40a8c:	ldr	r0, [r5]
   40a90:	ldr	r9, [sl]
   40a94:	mov	r1, r4
   40a98:	mov	r2, r7
   40a9c:	ldr	r6, [r5, r0]!
   40aa0:	str	r0, [sp, #12]
   40aa4:	mov	r0, r8
   40aa8:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   40aac:	mov	r7, r8
   40ab0:	cmp	r6, #0
   40ab4:	ldr	r0, [r7, #20]!
   40ab8:	add	r1, r0, #1
   40abc:	str	r1, [r7]
   40ac0:	ldr	r1, [r7, #12]
   40ac4:	add	r1, r1, #1
   40ac8:	str	r1, [r7, #12]
   40acc:	mov	r1, #91	; 0x5b
   40ad0:	strb	r1, [r0]
   40ad4:	beq	40c10 <flatcc_json_printer_union_vector_field@@Base+0x29c>
   40ad8:	add	r4, sl, r9
   40adc:	ldr	r2, [fp, #16]
   40ae0:	ldrb	r0, [r4, #4]
   40ae4:	cmp	r0, #0
   40ae8:	beq	40b0c <flatcc_json_printer_union_vector_field@@Base+0x198>
   40aec:	add	r1, r5, #4
   40af0:	mov	r9, r2
   40af4:	str	r1, [sp, #20]
   40af8:	strb	r0, [sp, #28]
   40afc:	add	r1, sp, #20
   40b00:	mov	r0, r8
   40b04:	blx	r2
   40b08:	b	40b5c <flatcc_json_printer_union_vector_field@@Base+0x1e8>
   40b0c:	ldr	r0, [r7]
   40b10:	mov	r9, r2
   40b14:	add	r1, r0, #1
   40b18:	str	r1, [r7]
   40b1c:	mov	r1, #110	; 0x6e
   40b20:	strb	r1, [r0]
   40b24:	ldr	r0, [r7]
   40b28:	add	r1, r0, #1
   40b2c:	str	r1, [r7]
   40b30:	mov	r1, #117	; 0x75
   40b34:	strb	r1, [r0]
   40b38:	ldr	r0, [r7]
   40b3c:	add	r1, r0, #1
   40b40:	str	r1, [r7]
   40b44:	mov	r1, #108	; 0x6c
   40b48:	strb	r1, [r0]
   40b4c:	ldr	r0, [r7]
   40b50:	add	r2, r0, #1
   40b54:	str	r2, [r7]
   40b58:	strb	r1, [r0]
   40b5c:	subs	r6, r6, #1
   40b60:	beq	40c10 <flatcc_json_printer_union_vector_field@@Base+0x29c>
   40b64:	ldr	r0, [sp, #16]
   40b68:	ldr	r1, [sp, #12]
   40b6c:	add	r4, r4, #5
   40b70:	mov	sl, #44	; 0x2c
   40b74:	add	r0, r1, r0
   40b78:	add	r5, r0, #8
   40b7c:	ldrb	r0, [r4]
   40b80:	ldr	r1, [r7]
   40b84:	sub	r6, r6, #1
   40b88:	add	r2, r1, #1
   40b8c:	cmp	r0, #0
   40b90:	str	r2, [r7]
   40b94:	strb	sl, [r1]
   40b98:	beq	40bb4 <flatcc_json_printer_union_vector_field@@Base+0x240>
   40b9c:	str	r5, [sp, #20]
   40ba0:	strb	r0, [sp, #28]
   40ba4:	mov	r0, r8
   40ba8:	add	r1, sp, #20
   40bac:	blx	r9
   40bb0:	b	40c00 <flatcc_json_printer_union_vector_field@@Base+0x28c>
   40bb4:	ldr	r0, [r7]
   40bb8:	mov	r2, #108	; 0x6c
   40bbc:	add	r1, r0, #1
   40bc0:	str	r1, [r7]
   40bc4:	mov	r1, #110	; 0x6e
   40bc8:	strb	r1, [r0]
   40bcc:	ldr	r0, [r7]
   40bd0:	add	r1, r0, #1
   40bd4:	str	r1, [r7]
   40bd8:	mov	r1, #117	; 0x75
   40bdc:	strb	r1, [r0]
   40be0:	ldr	r0, [r7]
   40be4:	add	r1, r0, #1
   40be8:	str	r1, [r7]
   40bec:	strb	r2, [r0]
   40bf0:	ldr	r0, [r7]
   40bf4:	add	r1, r0, #1
   40bf8:	str	r1, [r7]
   40bfc:	strb	r2, [r0]
   40c00:	add	r5, r5, #4
   40c04:	add	r4, r4, #1
   40c08:	cmp	r6, #0
   40c0c:	bne	40b7c <flatcc_json_printer_union_vector_field@@Base+0x208>
   40c10:	ldrb	r1, [r8, #25]
   40c14:	ldr	r0, [r8, #20]
   40c18:	cmp	r1, #0
   40c1c:	beq	40cdc <flatcc_json_printer_union_vector_field@@Base+0x368>
   40c20:	add	r1, r0, #1
   40c24:	str	r1, [r8, #20]
   40c28:	mov	r1, #10
   40c2c:	strb	r1, [r0]
   40c30:	ldr	r0, [r8, #32]
   40c34:	sub	r2, r0, #1
   40c38:	str	r2, [r8, #32]
   40c3c:	ldrb	r3, [r8, #25]
   40c40:	ldr	r0, [r8, #20]
   40c44:	ldr	r1, [r8, #16]
   40c48:	mla	r6, r2, r3, r0
   40c4c:	mul	r5, r2, r3
   40c50:	cmp	r6, r1
   40c54:	bls	40cc4 <flatcc_json_printer_union_vector_field@@Base+0x350>
   40c58:	cmp	r0, r1
   40c5c:	bcc	40c78 <flatcc_json_printer_union_vector_field@@Base+0x304>
   40c60:	ldr	r2, [r8, #44]	; 0x2c
   40c64:	mov	r0, r8
   40c68:	mov	r1, #0
   40c6c:	blx	r2
   40c70:	ldr	r1, [r8, #16]
   40c74:	ldr	r0, [r8, #20]
   40c78:	sub	r6, r1, r0
   40c7c:	cmp	r6, r5
   40c80:	bcs	40cc4 <flatcc_json_printer_union_vector_field@@Base+0x350>
   40c84:	mov	r1, #32
   40c88:	mov	r2, r6
   40c8c:	bl	14eec <memset@plt>
   40c90:	ldr	r0, [r8, #20]
   40c94:	ldr	r2, [r8, #44]	; 0x2c
   40c98:	mov	r1, #0
   40c9c:	add	r0, r0, r6
   40ca0:	str	r0, [r8, #20]
   40ca4:	mov	r0, r8
   40ca8:	blx	r2
   40cac:	ldr	r1, [r8, #16]
   40cb0:	ldr	r0, [r8, #20]
   40cb4:	sub	r5, r5, r6
   40cb8:	sub	r6, r1, r0
   40cbc:	cmp	r5, r6
   40cc0:	bhi	40c84 <flatcc_json_printer_union_vector_field@@Base+0x310>
   40cc4:	mov	r1, #32
   40cc8:	mov	r2, r5
   40ccc:	bl	14eec <memset@plt>
   40cd0:	ldr	r0, [r7]
   40cd4:	add	r0, r0, r5
   40cd8:	str	r0, [r7]
   40cdc:	add	r1, r0, #1
   40ce0:	str	r1, [r7]
   40ce4:	mov	r1, #93	; 0x5d
   40ce8:	strb	r1, [r0]
   40cec:	sub	sp, fp, #28
   40cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40cf4:	ldr	r0, [r8, #36]	; 0x24
   40cf8:	movw	r1, #38371	; 0x95e3
   40cfc:	movw	r3, #38446	; 0x962e
   40d00:	movw	r2, #843	; 0x34b
   40d04:	movt	r1, #4
   40d08:	movt	r3, #4
   40d0c:	cmp	r0, #0
   40d10:	moveq	r0, #1
   40d14:	streq	r0, [r8, #36]	; 0x24
   40d18:	movw	r0, #38344	; 0x95c8
   40d1c:	movt	r0, #4
   40d20:	bl	14f40 <__assert_fail@plt>

00040d24 <flatcc_json_printer_table_field@@Base>:
   40d24:	push	{r4, r5, r6, sl, fp, lr}
   40d28:	add	fp, sp, #16
   40d2c:	sub	sp, sp, #24
   40d30:	mov	r5, r1
   40d34:	ldr	r1, [r1, #8]
   40d38:	mov	r4, r0
   40d3c:	mov	r0, #4
   40d40:	add	r0, r0, r2, lsl #1
   40d44:	cmp	r0, r1
   40d48:	bge	40d68 <flatcc_json_printer_table_field@@Base+0x44>
   40d4c:	ldr	r1, [r5, #4]
   40d50:	add	r0, r1, r0
   40d54:	ldrh	r0, [r0]
   40d58:	cmp	r0, #0
   40d5c:	ldrne	r1, [r5]
   40d60:	addsne	r6, r1, r0
   40d64:	bne	40d70 <flatcc_json_printer_table_field@@Base+0x4c>
   40d68:	sub	sp, fp, #16
   40d6c:	pop	{r4, r5, r6, sl, fp, pc}
   40d70:	ldr	r0, [r5, #16]
   40d74:	ldr	r2, [fp, #8]
   40d78:	add	r1, r0, #1
   40d7c:	cmp	r0, #0
   40d80:	str	r1, [r5, #16]
   40d84:	beq	40d9c <flatcc_json_printer_table_field@@Base+0x78>
   40d88:	ldr	r0, [r4, #20]
   40d8c:	add	r1, r0, #1
   40d90:	str	r1, [r4, #20]
   40d94:	mov	r1, #44	; 0x2c
   40d98:	strb	r1, [r0]
   40d9c:	mov	r0, r4
   40da0:	mov	r1, r3
   40da4:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   40da8:	ldr	r0, [r5, #12]
   40dac:	subs	r0, r0, #1
   40db0:	beq	40ef0 <flatcc_json_printer_table_field@@Base+0x1cc>
   40db4:	ldr	r1, [r6]
   40db8:	ldr	r3, [r4, #20]
   40dbc:	ldr	r2, [fp, #12]
   40dc0:	add	r1, r6, r1
   40dc4:	ldr	r6, [r4, #32]
   40dc8:	add	r6, r6, #1
   40dcc:	str	r6, [r4, #32]
   40dd0:	add	r6, r3, #1
   40dd4:	str	r6, [r4, #20]
   40dd8:	mov	r6, #123	; 0x7b
   40ddc:	strb	r6, [r3]
   40de0:	str	r0, [sp, #16]
   40de4:	mov	r0, #0
   40de8:	str	r0, [sp, #20]
   40dec:	str	r1, [sp, #4]
   40df0:	ldr	r0, [r1]
   40df4:	sub	r3, r1, r0
   40df8:	str	r3, [sp, #8]
   40dfc:	ldrh	r0, [r1, -r0]
   40e00:	add	r1, sp, #4
   40e04:	str	r0, [sp, #12]
   40e08:	mov	r0, r4
   40e0c:	blx	r2
   40e10:	ldrb	r1, [r4, #25]
   40e14:	ldr	r0, [r4, #20]
   40e18:	cmp	r1, #0
   40e1c:	beq	40edc <flatcc_json_printer_table_field@@Base+0x1b8>
   40e20:	add	r1, r0, #1
   40e24:	str	r1, [r4, #20]
   40e28:	mov	r1, #10
   40e2c:	strb	r1, [r0]
   40e30:	ldr	r0, [r4, #32]
   40e34:	sub	r2, r0, #1
   40e38:	str	r2, [r4, #32]
   40e3c:	ldrb	r3, [r4, #25]
   40e40:	ldr	r0, [r4, #20]
   40e44:	ldr	r1, [r4, #16]
   40e48:	mla	r6, r2, r3, r0
   40e4c:	mul	r5, r2, r3
   40e50:	cmp	r6, r1
   40e54:	bls	40ec4 <flatcc_json_printer_table_field@@Base+0x1a0>
   40e58:	cmp	r0, r1
   40e5c:	bcc	40e78 <flatcc_json_printer_table_field@@Base+0x154>
   40e60:	ldr	r2, [r4, #44]	; 0x2c
   40e64:	mov	r0, r4
   40e68:	mov	r1, #0
   40e6c:	blx	r2
   40e70:	ldr	r1, [r4, #16]
   40e74:	ldr	r0, [r4, #20]
   40e78:	sub	r6, r1, r0
   40e7c:	cmp	r6, r5
   40e80:	bcs	40ec4 <flatcc_json_printer_table_field@@Base+0x1a0>
   40e84:	mov	r1, #32
   40e88:	mov	r2, r6
   40e8c:	bl	14eec <memset@plt>
   40e90:	ldr	r0, [r4, #20]
   40e94:	ldr	r2, [r4, #44]	; 0x2c
   40e98:	mov	r1, #0
   40e9c:	add	r0, r0, r6
   40ea0:	str	r0, [r4, #20]
   40ea4:	mov	r0, r4
   40ea8:	blx	r2
   40eac:	ldr	r1, [r4, #16]
   40eb0:	ldr	r0, [r4, #20]
   40eb4:	sub	r5, r5, r6
   40eb8:	sub	r6, r1, r0
   40ebc:	cmp	r5, r6
   40ec0:	bhi	40e84 <flatcc_json_printer_table_field@@Base+0x160>
   40ec4:	mov	r1, #32
   40ec8:	mov	r2, r5
   40ecc:	bl	14eec <memset@plt>
   40ed0:	ldr	r0, [r4, #20]
   40ed4:	add	r0, r0, r5
   40ed8:	str	r0, [r4, #20]
   40edc:	add	r1, r0, #1
   40ee0:	str	r1, [r4, #20]
   40ee4:	mov	r1, #125	; 0x7d
   40ee8:	strb	r1, [r0]
   40eec:	b	40d68 <flatcc_json_printer_table_field@@Base+0x44>
   40ef0:	ldr	r0, [r4, #36]	; 0x24
   40ef4:	cmp	r0, #0
   40ef8:	moveq	r0, #2
   40efc:	streq	r0, [r4, #36]	; 0x24
   40f00:	b	40d68 <flatcc_json_printer_table_field@@Base+0x44>

00040f04 <flatcc_json_printer_union_field@@Base>:
   40f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40f08:	add	fp, sp, #28
   40f0c:	sub	sp, sp, #20
   40f10:	mov	r9, r1
   40f14:	mov	r4, r0
   40f18:	mov	r0, #2
   40f1c:	mov	sl, r3
   40f20:	lsl	r1, r2, #1
   40f24:	add	r3, r0, r2, lsl #1
   40f28:	ldr	r2, [r9, #8]
   40f2c:	mov	r0, #0
   40f30:	cmp	r3, r2
   40f34:	bge	40f50 <flatcc_json_printer_union_field@@Base+0x4c>
   40f38:	ldr	r7, [r9, #4]
   40f3c:	add	r3, r7, r3
   40f40:	ldrh	r3, [r3]
   40f44:	cmp	r3, #0
   40f48:	ldrne	r0, [r9]
   40f4c:	addne	r0, r0, r3
   40f50:	add	r1, r1, #4
   40f54:	cmp	r1, r2
   40f58:	bge	40f74 <flatcc_json_printer_union_field@@Base+0x70>
   40f5c:	ldr	r2, [r9, #4]
   40f60:	add	r1, r2, r1
   40f64:	ldrh	r1, [r1]
   40f68:	cmp	r1, #0
   40f6c:	cmpne	r0, #0
   40f70:	bne	40f7c <flatcc_json_printer_union_field@@Base+0x78>
   40f74:	sub	sp, fp, #28
   40f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40f7c:	ldr	r2, [r9]
   40f80:	adds	r1, r2, r1
   40f84:	str	r1, [sp, #4]
   40f88:	beq	40f74 <flatcc_json_printer_union_field@@Base+0x70>
   40f8c:	ldrb	r6, [r0]
   40f90:	ldr	r0, [r9, #16]
   40f94:	add	r1, r0, #1
   40f98:	cmp	r0, #0
   40f9c:	str	r1, [r9, #16]
   40fa0:	beq	40fb8 <flatcc_json_printer_union_field@@Base+0xb4>
   40fa4:	ldr	r0, [r4, #20]
   40fa8:	add	r1, r0, #1
   40fac:	str	r1, [r4, #20]
   40fb0:	mov	r1, #44	; 0x2c
   40fb4:	strb	r1, [r0]
   40fb8:	ldrb	r1, [r4, #25]
   40fbc:	ldr	r8, [fp, #8]
   40fc0:	ldr	r0, [r4, #20]
   40fc4:	cmp	r1, #0
   40fc8:	beq	41080 <flatcc_json_printer_union_field@@Base+0x17c>
   40fcc:	add	r1, r0, #1
   40fd0:	mov	r5, r6
   40fd4:	str	r1, [r4, #20]
   40fd8:	mov	r1, #10
   40fdc:	strb	r1, [r0]
   40fe0:	ldr	r0, [r4, #20]
   40fe4:	ldrb	r2, [r4, #25]
   40fe8:	ldr	r3, [r4, #32]
   40fec:	ldr	r1, [r4, #16]
   40ff0:	mla	r6, r3, r2, r0
   40ff4:	mul	r7, r3, r2
   40ff8:	cmp	r6, r1
   40ffc:	bls	410a4 <flatcc_json_printer_union_field@@Base+0x1a0>
   41000:	cmp	r0, r1
   41004:	mov	r6, r5
   41008:	bcc	41024 <flatcc_json_printer_union_field@@Base+0x120>
   4100c:	ldr	r2, [r4, #44]	; 0x2c
   41010:	mov	r0, r4
   41014:	mov	r1, #0
   41018:	blx	r2
   4101c:	ldr	r1, [r4, #16]
   41020:	ldr	r0, [r4, #20]
   41024:	sub	r5, r1, r0
   41028:	cmp	r5, r7
   4102c:	bcs	41070 <flatcc_json_printer_union_field@@Base+0x16c>
   41030:	mov	r1, #32
   41034:	mov	r2, r5
   41038:	bl	14eec <memset@plt>
   4103c:	ldr	r0, [r4, #20]
   41040:	ldr	r2, [r4, #44]	; 0x2c
   41044:	mov	r1, #0
   41048:	add	r0, r0, r5
   4104c:	str	r0, [r4, #20]
   41050:	mov	r0, r4
   41054:	blx	r2
   41058:	ldr	r1, [r4, #16]
   4105c:	ldr	r0, [r4, #20]
   41060:	sub	r7, r7, r5
   41064:	sub	r5, r1, r0
   41068:	cmp	r7, r5
   4106c:	bhi	41030 <flatcc_json_printer_union_field@@Base+0x12c>
   41070:	mov	r1, #32
   41074:	mov	r2, r7
   41078:	bl	14eec <memset@plt>
   4107c:	b	410b4 <flatcc_json_printer_union_field@@Base+0x1b0>
   41080:	ldr	r1, [r4, #16]
   41084:	cmp	r0, r1
   41088:	bcc	410c0 <flatcc_json_printer_union_field@@Base+0x1bc>
   4108c:	ldr	r2, [r4, #44]	; 0x2c
   41090:	mov	r0, r4
   41094:	mov	r1, #0
   41098:	blx	r2
   4109c:	ldr	r0, [r4, #20]
   410a0:	b	410c0 <flatcc_json_printer_union_field@@Base+0x1bc>
   410a4:	mov	r1, #32
   410a8:	mov	r2, r7
   410ac:	bl	14eec <memset@plt>
   410b0:	mov	r6, r5
   410b4:	ldr	r0, [r4, #20]
   410b8:	add	r0, r0, r7
   410bc:	str	r0, [r4, #20]
   410c0:	mov	r1, #34	; 0x22
   410c4:	strb	r1, [r0]
   410c8:	ldrb	r2, [r4, #26]
   410cc:	ldr	r0, [r4, #20]
   410d0:	ldr	r1, [r4, #16]
   410d4:	cmp	r2, #0
   410d8:	addeq	r0, r0, #1
   410dc:	add	r2, r0, r8
   410e0:	str	r0, [r4, #20]
   410e4:	cmp	r2, r1
   410e8:	bcs	41100 <flatcc_json_printer_union_field@@Base+0x1fc>
   410ec:	mov	r1, sl
   410f0:	mov	r2, r8
   410f4:	bl	14e5c <memcpy@plt>
   410f8:	mov	r7, r8
   410fc:	b	4119c <flatcc_json_printer_union_field@@Base+0x298>
   41100:	cmp	r0, r1
   41104:	mov	r7, r8
   41108:	str	r6, [sp]
   4110c:	bcc	41128 <flatcc_json_printer_union_field@@Base+0x224>
   41110:	ldr	r2, [r4, #44]	; 0x2c
   41114:	mov	r0, r4
   41118:	mov	r1, #0
   4111c:	blx	r2
   41120:	ldr	r1, [r4, #16]
   41124:	ldr	r0, [r4, #20]
   41128:	sub	r8, r1, r0
   4112c:	mov	r6, sl
   41130:	mov	r5, r7
   41134:	cmp	r8, r7
   41138:	bcs	41188 <flatcc_json_printer_union_field@@Base+0x284>
   4113c:	mov	r7, r5
   41140:	mov	r6, sl
   41144:	mov	r1, r6
   41148:	mov	r2, r8
   4114c:	bl	14e5c <memcpy@plt>
   41150:	ldr	r0, [r4, #20]
   41154:	ldr	r2, [r4, #44]	; 0x2c
   41158:	mov	r1, #0
   4115c:	add	r0, r0, r8
   41160:	str	r0, [r4, #20]
   41164:	mov	r0, r4
   41168:	blx	r2
   4116c:	ldr	r1, [r4, #16]
   41170:	ldr	r0, [r4, #20]
   41174:	sub	r7, r7, r8
   41178:	add	r6, r6, r8
   4117c:	sub	r8, r1, r0
   41180:	cmp	r7, r8
   41184:	bhi	41144 <flatcc_json_printer_union_field@@Base+0x240>
   41188:	mov	r1, r6
   4118c:	mov	r2, r7
   41190:	bl	14e5c <memcpy@plt>
   41194:	ldr	r6, [sp]
   41198:	mov	r8, r5
   4119c:	ldr	r0, [r4, #20]
   411a0:	ldr	r1, [r4, #16]
   411a4:	add	r0, r0, r7
   411a8:	add	r2, r0, #5
   411ac:	str	r0, [r4, #20]
   411b0:	cmp	r2, r1
   411b4:	bcs	411d4 <flatcc_json_printer_union_field@@Base+0x2d0>
   411b8:	mov	r1, #101	; 0x65
   411bc:	mov	r7, #5
   411c0:	strb	r1, [r0, #4]
   411c4:	movw	r1, #29791	; 0x745f
   411c8:	movt	r1, #28793	; 0x7079
   411cc:	str	r1, [r0]
   411d0:	b	41278 <flatcc_json_printer_union_field@@Base+0x374>
   411d4:	cmp	r0, r1
   411d8:	bcc	411f4 <flatcc_json_printer_union_field@@Base+0x2f0>
   411dc:	ldr	r2, [r4, #44]	; 0x2c
   411e0:	mov	r0, r4
   411e4:	mov	r1, #0
   411e8:	blx	r2
   411ec:	ldr	r1, [r4, #16]
   411f0:	ldr	r0, [r4, #20]
   411f4:	sub	r5, r1, r0
   411f8:	mov	r8, r6
   411fc:	cmp	r5, #4
   41200:	bhi	41258 <flatcc_json_printer_union_field@@Base+0x354>
   41204:	movw	r6, #38648	; 0x96f8
   41208:	mov	r7, #5
   4120c:	movt	r6, #4
   41210:	mov	r1, r6
   41214:	mov	r2, r5
   41218:	bl	14e5c <memcpy@plt>
   4121c:	ldr	r0, [r4, #20]
   41220:	ldr	r2, [r4, #44]	; 0x2c
   41224:	mov	r1, #0
   41228:	add	r0, r0, r5
   4122c:	str	r0, [r4, #20]
   41230:	mov	r0, r4
   41234:	blx	r2
   41238:	ldr	r1, [r4, #16]
   4123c:	ldr	r0, [r4, #20]
   41240:	sub	r7, r7, r5
   41244:	add	r6, r6, r5
   41248:	sub	r5, r1, r0
   4124c:	cmp	r7, r5
   41250:	bhi	41210 <flatcc_json_printer_union_field@@Base+0x30c>
   41254:	b	41264 <flatcc_json_printer_union_field@@Base+0x360>
   41258:	movw	r6, #38648	; 0x96f8
   4125c:	mov	r7, #5
   41260:	movt	r6, #4
   41264:	mov	r1, r6
   41268:	mov	r2, r7
   4126c:	bl	14e5c <memcpy@plt>
   41270:	mov	r6, r8
   41274:	ldr	r8, [fp, #8]
   41278:	ldr	r0, [r4, #20]
   4127c:	add	r1, r0, r7
   41280:	str	r1, [r4, #20]
   41284:	mov	r1, #34	; 0x22
   41288:	strb	r1, [r0, r7]
   4128c:	ldrb	r0, [r4, #26]
   41290:	ldr	r1, [r4, #20]
   41294:	cmp	r0, #0
   41298:	addeq	r1, r1, #1
   4129c:	add	r0, r1, #1
   412a0:	str	r0, [r4, #20]
   412a4:	mov	r0, #58	; 0x3a
   412a8:	strb	r0, [r1]
   412ac:	mov	r1, #32
   412b0:	ldr	r0, [r4, #20]
   412b4:	strb	r1, [r0]
   412b8:	ldrb	r0, [r4, #25]
   412bc:	ldr	r1, [r4, #20]
   412c0:	cmp	r0, #0
   412c4:	addne	r1, r1, #1
   412c8:	str	r1, [r4, #20]
   412cc:	ldrb	r0, [r4, #27]
   412d0:	cmp	r0, #0
   412d4:	beq	412f0 <flatcc_json_printer_union_field@@Base+0x3ec>
   412d8:	mov	r0, r6
   412dc:	bl	379e0 <flatcc_json_printer_uint8@@Base+0x2c>
   412e0:	ldr	r1, [r4, #20]
   412e4:	add	r0, r1, r0
   412e8:	str	r0, [r4, #20]
   412ec:	b	41300 <flatcc_json_printer_union_field@@Base+0x3fc>
   412f0:	ldr	r2, [fp, #12]
   412f4:	mov	r0, r4
   412f8:	mov	r1, r6
   412fc:	blx	r2
   41300:	cmp	r6, #0
   41304:	beq	40f74 <flatcc_json_printer_union_field@@Base+0x70>
   41308:	ldr	r0, [r4, #20]
   4130c:	ldr	r5, [fp, #16]
   41310:	mov	r2, r8
   41314:	add	r1, r0, #1
   41318:	str	r1, [r4, #20]
   4131c:	mov	r1, #44	; 0x2c
   41320:	strb	r1, [r0]
   41324:	mov	r0, r4
   41328:	mov	r1, sl
   4132c:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   41330:	ldr	r0, [r9, #12]
   41334:	ldr	r1, [sp, #4]
   41338:	strb	r6, [sp, #16]
   4133c:	str	r1, [sp, #8]
   41340:	str	r0, [sp, #12]
   41344:	add	r1, sp, #8
   41348:	mov	r0, r4
   4134c:	blx	r5
   41350:	b	40f74 <flatcc_json_printer_union_field@@Base+0x70>

00041354 <flatcc_json_printer_union_table@@Base>:
   41354:	push	{r4, r5, r6, sl, fp, lr}
   41358:	add	fp, sp, #16
   4135c:	sub	sp, sp, #24
   41360:	mov	r4, r0
   41364:	ldr	r0, [r1, #4]
   41368:	subs	r0, r0, #1
   4136c:	beq	414ac <flatcc_json_printer_union_table@@Base+0x158>
   41370:	ldr	r1, [r1]
   41374:	ldr	r6, [r4, #32]
   41378:	ldr	r3, [r1]
   4137c:	add	r6, r6, #1
   41380:	add	r1, r1, r3
   41384:	ldr	r3, [r4, #20]
   41388:	str	r6, [r4, #32]
   4138c:	add	r6, r3, #1
   41390:	str	r6, [r4, #20]
   41394:	mov	r6, #123	; 0x7b
   41398:	strb	r6, [r3]
   4139c:	str	r0, [sp, #16]
   413a0:	mov	r0, #0
   413a4:	str	r0, [sp, #20]
   413a8:	str	r1, [sp, #4]
   413ac:	ldr	r0, [r1]
   413b0:	sub	r3, r1, r0
   413b4:	str	r3, [sp, #8]
   413b8:	ldrh	r0, [r1, -r0]
   413bc:	add	r1, sp, #4
   413c0:	str	r0, [sp, #12]
   413c4:	mov	r0, r4
   413c8:	blx	r2
   413cc:	ldrb	r1, [r4, #25]
   413d0:	ldr	r0, [r4, #20]
   413d4:	cmp	r1, #0
   413d8:	beq	41498 <flatcc_json_printer_union_table@@Base+0x144>
   413dc:	add	r1, r0, #1
   413e0:	str	r1, [r4, #20]
   413e4:	mov	r1, #10
   413e8:	strb	r1, [r0]
   413ec:	ldr	r0, [r4, #32]
   413f0:	sub	r2, r0, #1
   413f4:	str	r2, [r4, #32]
   413f8:	ldrb	r3, [r4, #25]
   413fc:	ldr	r0, [r4, #20]
   41400:	ldr	r1, [r4, #16]
   41404:	mla	r6, r2, r3, r0
   41408:	mul	r5, r2, r3
   4140c:	cmp	r6, r1
   41410:	bls	41480 <flatcc_json_printer_union_table@@Base+0x12c>
   41414:	cmp	r0, r1
   41418:	bcc	41434 <flatcc_json_printer_union_table@@Base+0xe0>
   4141c:	ldr	r2, [r4, #44]	; 0x2c
   41420:	mov	r0, r4
   41424:	mov	r1, #0
   41428:	blx	r2
   4142c:	ldr	r1, [r4, #16]
   41430:	ldr	r0, [r4, #20]
   41434:	sub	r6, r1, r0
   41438:	cmp	r6, r5
   4143c:	bcs	41480 <flatcc_json_printer_union_table@@Base+0x12c>
   41440:	mov	r1, #32
   41444:	mov	r2, r6
   41448:	bl	14eec <memset@plt>
   4144c:	ldr	r0, [r4, #20]
   41450:	ldr	r2, [r4, #44]	; 0x2c
   41454:	mov	r1, #0
   41458:	add	r0, r0, r6
   4145c:	str	r0, [r4, #20]
   41460:	mov	r0, r4
   41464:	blx	r2
   41468:	ldr	r1, [r4, #16]
   4146c:	ldr	r0, [r4, #20]
   41470:	sub	r5, r5, r6
   41474:	sub	r6, r1, r0
   41478:	cmp	r5, r6
   4147c:	bhi	41440 <flatcc_json_printer_union_table@@Base+0xec>
   41480:	mov	r1, #32
   41484:	mov	r2, r5
   41488:	bl	14eec <memset@plt>
   4148c:	ldr	r0, [r4, #20]
   41490:	add	r0, r0, r5
   41494:	str	r0, [r4, #20]
   41498:	add	r1, r0, #1
   4149c:	str	r1, [r4, #20]
   414a0:	mov	r1, #125	; 0x7d
   414a4:	strb	r1, [r0]
   414a8:	b	414bc <flatcc_json_printer_union_table@@Base+0x168>
   414ac:	ldr	r0, [r4, #36]	; 0x24
   414b0:	cmp	r0, #0
   414b4:	moveq	r0, #2
   414b8:	streq	r0, [r4, #36]	; 0x24
   414bc:	sub	sp, fp, #16
   414c0:	pop	{r4, r5, r6, sl, fp, pc}

000414c4 <flatcc_json_printer_union_struct@@Base>:
   414c4:	push	{r4, r5, r6, sl, fp, lr}
   414c8:	add	fp, sp, #16
   414cc:	mov	r4, r0
   414d0:	ldr	r0, [r0, #20]
   414d4:	ldr	r3, [r4, #32]
   414d8:	add	r3, r3, #1
   414dc:	str	r3, [r4, #32]
   414e0:	add	r3, r0, #1
   414e4:	str	r3, [r4, #20]
   414e8:	mov	r3, #123	; 0x7b
   414ec:	strb	r3, [r0]
   414f0:	ldr	r0, [r1]
   414f4:	ldr	r1, [r0]
   414f8:	add	r1, r0, r1
   414fc:	mov	r0, r4
   41500:	blx	r2
   41504:	ldrb	r1, [r4, #25]
   41508:	ldr	r0, [r4, #20]
   4150c:	cmp	r1, #0
   41510:	beq	415d0 <flatcc_json_printer_union_struct@@Base+0x10c>
   41514:	add	r1, r0, #1
   41518:	str	r1, [r4, #20]
   4151c:	mov	r1, #10
   41520:	strb	r1, [r0]
   41524:	ldr	r0, [r4, #32]
   41528:	sub	r2, r0, #1
   4152c:	str	r2, [r4, #32]
   41530:	ldrb	r3, [r4, #25]
   41534:	ldr	r0, [r4, #20]
   41538:	ldr	r1, [r4, #16]
   4153c:	mla	r6, r2, r3, r0
   41540:	mul	r5, r2, r3
   41544:	cmp	r6, r1
   41548:	bls	415b8 <flatcc_json_printer_union_struct@@Base+0xf4>
   4154c:	cmp	r0, r1
   41550:	bcc	4156c <flatcc_json_printer_union_struct@@Base+0xa8>
   41554:	ldr	r2, [r4, #44]	; 0x2c
   41558:	mov	r0, r4
   4155c:	mov	r1, #0
   41560:	blx	r2
   41564:	ldr	r1, [r4, #16]
   41568:	ldr	r0, [r4, #20]
   4156c:	sub	r6, r1, r0
   41570:	cmp	r6, r5
   41574:	bcs	415b8 <flatcc_json_printer_union_struct@@Base+0xf4>
   41578:	mov	r1, #32
   4157c:	mov	r2, r6
   41580:	bl	14eec <memset@plt>
   41584:	ldr	r0, [r4, #20]
   41588:	ldr	r2, [r4, #44]	; 0x2c
   4158c:	mov	r1, #0
   41590:	add	r0, r0, r6
   41594:	str	r0, [r4, #20]
   41598:	mov	r0, r4
   4159c:	blx	r2
   415a0:	ldr	r1, [r4, #16]
   415a4:	ldr	r0, [r4, #20]
   415a8:	sub	r5, r5, r6
   415ac:	sub	r6, r1, r0
   415b0:	cmp	r5, r6
   415b4:	bhi	41578 <flatcc_json_printer_union_struct@@Base+0xb4>
   415b8:	mov	r1, #32
   415bc:	mov	r2, r5
   415c0:	bl	14eec <memset@plt>
   415c4:	ldr	r0, [r4, #20]
   415c8:	add	r0, r0, r5
   415cc:	str	r0, [r4, #20]
   415d0:	add	r1, r0, #1
   415d4:	str	r1, [r4, #20]
   415d8:	mov	r1, #125	; 0x7d
   415dc:	strb	r1, [r0]
   415e0:	pop	{r4, r5, r6, sl, fp, pc}

000415e4 <flatcc_json_printer_union_string@@Base>:
   415e4:	ldr	r1, [r1]
   415e8:	ldr	r2, [r1]
   415ec:	ldr	r2, [r1, r2]!
   415f0:	add	r1, r1, #4
   415f4:	b	37548 <flatcc_json_printer_string@@Base+0x4>

000415f8 <flatcc_json_printer_embedded_struct_field@@Base>:
   415f8:	push	{r4, r5, r6, r7, fp, lr}
   415fc:	add	fp, sp, #16
   41600:	add	r7, fp, #8
   41604:	mov	r5, r3
   41608:	mov	r3, r1
   4160c:	mov	r6, r2
   41610:	mov	r4, r0
   41614:	ldm	r7, {r1, r2, r7}
   41618:	cmp	r3, #0
   4161c:	beq	41634 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   41620:	ldr	r0, [r4, #20]
   41624:	add	r3, r0, #1
   41628:	str	r3, [r4, #20]
   4162c:	mov	r3, #44	; 0x2c
   41630:	strb	r3, [r0]
   41634:	mov	r0, r4
   41638:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   4163c:	ldr	r1, [r4, #32]
   41640:	ldr	r0, [r4, #20]
   41644:	add	r1, r1, #1
   41648:	str	r1, [r4, #32]
   4164c:	add	r1, r0, #1
   41650:	str	r1, [r4, #20]
   41654:	mov	r1, #123	; 0x7b
   41658:	strb	r1, [r0]
   4165c:	add	r1, r6, r5
   41660:	mov	r0, r4
   41664:	blx	r7
   41668:	ldrb	r1, [r4, #25]
   4166c:	ldr	r0, [r4, #20]
   41670:	cmp	r1, #0
   41674:	beq	41734 <flatcc_json_printer_embedded_struct_field@@Base+0x13c>
   41678:	add	r1, r0, #1
   4167c:	str	r1, [r4, #20]
   41680:	mov	r1, #10
   41684:	strb	r1, [r0]
   41688:	ldr	r0, [r4, #32]
   4168c:	sub	r2, r0, #1
   41690:	str	r2, [r4, #32]
   41694:	ldrb	r3, [r4, #25]
   41698:	ldr	r0, [r4, #20]
   4169c:	ldr	r1, [r4, #16]
   416a0:	mla	r7, r2, r3, r0
   416a4:	mul	r5, r2, r3
   416a8:	cmp	r7, r1
   416ac:	bls	4171c <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   416b0:	cmp	r0, r1
   416b4:	bcc	416d0 <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
   416b8:	ldr	r2, [r4, #44]	; 0x2c
   416bc:	mov	r0, r4
   416c0:	mov	r1, #0
   416c4:	blx	r2
   416c8:	ldr	r1, [r4, #16]
   416cc:	ldr	r0, [r4, #20]
   416d0:	sub	r6, r1, r0
   416d4:	cmp	r6, r5
   416d8:	bcs	4171c <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   416dc:	mov	r1, #32
   416e0:	mov	r2, r6
   416e4:	bl	14eec <memset@plt>
   416e8:	ldr	r0, [r4, #20]
   416ec:	ldr	r2, [r4, #44]	; 0x2c
   416f0:	mov	r1, #0
   416f4:	add	r0, r0, r6
   416f8:	str	r0, [r4, #20]
   416fc:	mov	r0, r4
   41700:	blx	r2
   41704:	ldr	r1, [r4, #16]
   41708:	ldr	r0, [r4, #20]
   4170c:	sub	r5, r5, r6
   41710:	sub	r6, r1, r0
   41714:	cmp	r5, r6
   41718:	bhi	416dc <flatcc_json_printer_embedded_struct_field@@Base+0xe4>
   4171c:	mov	r1, #32
   41720:	mov	r2, r5
   41724:	bl	14eec <memset@plt>
   41728:	ldr	r0, [r4, #20]
   4172c:	add	r0, r0, r5
   41730:	str	r0, [r4, #20]
   41734:	add	r1, r0, #1
   41738:	str	r1, [r4, #20]
   4173c:	mov	r1, #125	; 0x7d
   41740:	strb	r1, [r0]
   41744:	pop	{r4, r5, r6, r7, fp, pc}

00041748 <flatcc_json_printer_struct_field@@Base>:
   41748:	push	{r4, r5, r6, r7, fp, lr}
   4174c:	add	fp, sp, #16
   41750:	mov	r4, r0
   41754:	mov	r0, #4
   41758:	add	r0, r0, r2, lsl #1
   4175c:	ldr	r2, [r1, #8]
   41760:	cmp	r0, r2
   41764:	popge	{r4, r5, r6, r7, fp, pc}
   41768:	ldr	r2, [r1, #4]
   4176c:	add	r0, r2, r0
   41770:	ldrh	r0, [r0]
   41774:	cmp	r0, #0
   41778:	ldrne	r2, [r1]
   4177c:	addsne	r5, r2, r0
   41780:	bne	41788 <flatcc_json_printer_struct_field@@Base+0x40>
   41784:	pop	{r4, r5, r6, r7, fp, pc}
   41788:	ldr	r0, [r1, #16]
   4178c:	ldr	r7, [fp, #12]
   41790:	ldr	r2, [fp, #8]
   41794:	add	r6, r0, #1
   41798:	cmp	r0, #0
   4179c:	str	r6, [r1, #16]
   417a0:	beq	417b8 <flatcc_json_printer_struct_field@@Base+0x70>
   417a4:	ldr	r0, [r4, #20]
   417a8:	add	r1, r0, #1
   417ac:	str	r1, [r4, #20]
   417b0:	mov	r1, #44	; 0x2c
   417b4:	strb	r1, [r0]
   417b8:	mov	r0, r4
   417bc:	mov	r1, r3
   417c0:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   417c4:	ldr	r1, [r4, #32]
   417c8:	ldr	r0, [r4, #20]
   417cc:	add	r1, r1, #1
   417d0:	str	r1, [r4, #32]
   417d4:	add	r1, r0, #1
   417d8:	str	r1, [r4, #20]
   417dc:	mov	r1, #123	; 0x7b
   417e0:	strb	r1, [r0]
   417e4:	mov	r0, r4
   417e8:	mov	r1, r5
   417ec:	blx	r7
   417f0:	ldrb	r1, [r4, #25]
   417f4:	ldr	r0, [r4, #20]
   417f8:	cmp	r1, #0
   417fc:	beq	418bc <flatcc_json_printer_struct_field@@Base+0x174>
   41800:	add	r1, r0, #1
   41804:	str	r1, [r4, #20]
   41808:	mov	r1, #10
   4180c:	strb	r1, [r0]
   41810:	ldr	r0, [r4, #32]
   41814:	sub	r2, r0, #1
   41818:	str	r2, [r4, #32]
   4181c:	ldrb	r3, [r4, #25]
   41820:	ldr	r0, [r4, #20]
   41824:	ldr	r1, [r4, #16]
   41828:	mla	r7, r2, r3, r0
   4182c:	mul	r5, r2, r3
   41830:	cmp	r7, r1
   41834:	bls	418a4 <flatcc_json_printer_struct_field@@Base+0x15c>
   41838:	cmp	r0, r1
   4183c:	bcc	41858 <flatcc_json_printer_struct_field@@Base+0x110>
   41840:	ldr	r2, [r4, #44]	; 0x2c
   41844:	mov	r0, r4
   41848:	mov	r1, #0
   4184c:	blx	r2
   41850:	ldr	r1, [r4, #16]
   41854:	ldr	r0, [r4, #20]
   41858:	sub	r6, r1, r0
   4185c:	cmp	r6, r5
   41860:	bcs	418a4 <flatcc_json_printer_struct_field@@Base+0x15c>
   41864:	mov	r1, #32
   41868:	mov	r2, r6
   4186c:	bl	14eec <memset@plt>
   41870:	ldr	r0, [r4, #20]
   41874:	ldr	r2, [r4, #44]	; 0x2c
   41878:	mov	r1, #0
   4187c:	add	r0, r0, r6
   41880:	str	r0, [r4, #20]
   41884:	mov	r0, r4
   41888:	blx	r2
   4188c:	ldr	r1, [r4, #16]
   41890:	ldr	r0, [r4, #20]
   41894:	sub	r5, r5, r6
   41898:	sub	r6, r1, r0
   4189c:	cmp	r5, r6
   418a0:	bhi	41864 <flatcc_json_printer_struct_field@@Base+0x11c>
   418a4:	mov	r1, #32
   418a8:	mov	r2, r5
   418ac:	bl	14eec <memset@plt>
   418b0:	ldr	r0, [r4, #20]
   418b4:	add	r0, r0, r5
   418b8:	str	r0, [r4, #20]
   418bc:	add	r1, r0, #1
   418c0:	str	r1, [r4, #20]
   418c4:	mov	r1, #125	; 0x7d
   418c8:	strb	r1, [r0]
   418cc:	pop	{r4, r5, r6, r7, fp, pc}

000418d0 <flatcc_json_printer_struct_as_root@@Base>:
   418d0:	push	{r4, r5, r6, sl, fp, lr}
   418d4:	add	fp, sp, #16
   418d8:	mov	r5, r1
   418dc:	mov	r4, r0
   418e0:	bl	41a58 <flatcc_json_printer_struct_as_root@@Base+0x188>
   418e4:	ldr	r1, [r4, #32]
   418e8:	ldr	r0, [r4, #20]
   418ec:	ldr	r2, [fp, #8]
   418f0:	add	r1, r1, #1
   418f4:	str	r1, [r4, #32]
   418f8:	add	r1, r0, #1
   418fc:	str	r1, [r4, #20]
   41900:	mov	r1, #123	; 0x7b
   41904:	strb	r1, [r0]
   41908:	ldr	r0, [r5]
   4190c:	add	r1, r5, r0
   41910:	mov	r0, r4
   41914:	blx	r2
   41918:	ldrb	r1, [r4, #25]
   4191c:	ldr	r0, [r4, #20]
   41920:	cmp	r1, #0
   41924:	beq	419e4 <flatcc_json_printer_struct_as_root@@Base+0x114>
   41928:	add	r1, r0, #1
   4192c:	str	r1, [r4, #20]
   41930:	mov	r1, #10
   41934:	strb	r1, [r0]
   41938:	ldr	r0, [r4, #32]
   4193c:	sub	r2, r0, #1
   41940:	str	r2, [r4, #32]
   41944:	ldrb	r3, [r4, #25]
   41948:	ldr	r0, [r4, #20]
   4194c:	ldr	r1, [r4, #16]
   41950:	mla	r6, r2, r3, r0
   41954:	mul	r5, r2, r3
   41958:	cmp	r6, r1
   4195c:	bls	419cc <flatcc_json_printer_struct_as_root@@Base+0xfc>
   41960:	cmp	r0, r1
   41964:	bcc	41980 <flatcc_json_printer_struct_as_root@@Base+0xb0>
   41968:	ldr	r2, [r4, #44]	; 0x2c
   4196c:	mov	r0, r4
   41970:	mov	r1, #0
   41974:	blx	r2
   41978:	ldr	r1, [r4, #16]
   4197c:	ldr	r0, [r4, #20]
   41980:	sub	r6, r1, r0
   41984:	cmp	r6, r5
   41988:	bcs	419cc <flatcc_json_printer_struct_as_root@@Base+0xfc>
   4198c:	mov	r1, #32
   41990:	mov	r2, r6
   41994:	bl	14eec <memset@plt>
   41998:	ldr	r0, [r4, #20]
   4199c:	ldr	r2, [r4, #44]	; 0x2c
   419a0:	mov	r1, #0
   419a4:	add	r0, r0, r6
   419a8:	str	r0, [r4, #20]
   419ac:	mov	r0, r4
   419b0:	blx	r2
   419b4:	ldr	r1, [r4, #16]
   419b8:	ldr	r0, [r4, #20]
   419bc:	sub	r5, r5, r6
   419c0:	sub	r6, r1, r0
   419c4:	cmp	r5, r6
   419c8:	bhi	4198c <flatcc_json_printer_struct_as_root@@Base+0xbc>
   419cc:	mov	r1, #32
   419d0:	mov	r2, r5
   419d4:	bl	14eec <memset@plt>
   419d8:	ldr	r0, [r4, #20]
   419dc:	add	r0, r0, r5
   419e0:	str	r0, [r4, #20]
   419e4:	add	r1, r0, #1
   419e8:	str	r1, [r4, #20]
   419ec:	mov	r1, #125	; 0x7d
   419f0:	strb	r1, [r0]
   419f4:	ldrb	r0, [r4, #25]
   419f8:	cmp	r0, #0
   419fc:	beq	41a20 <flatcc_json_printer_struct_as_root@@Base+0x150>
   41a00:	ldr	r0, [r4, #32]
   41a04:	cmp	r0, #0
   41a08:	bne	41a20 <flatcc_json_printer_struct_as_root@@Base+0x150>
   41a0c:	ldr	r0, [r4, #20]
   41a10:	add	r1, r0, #1
   41a14:	str	r1, [r4, #20]
   41a18:	mov	r1, #10
   41a1c:	strb	r1, [r0]
   41a20:	ldr	r2, [r4, #44]	; 0x2c
   41a24:	mov	r0, r4
   41a28:	mov	r1, #1
   41a2c:	blx	r2
   41a30:	ldr	r1, [r4, #36]	; 0x24
   41a34:	mvn	r0, #0
   41a38:	cmp	r1, #0
   41a3c:	popne	{r4, r5, r6, sl, fp, pc}
   41a40:	ldr	r1, [r4, #12]
   41a44:	ldr	r2, [r4, #20]
   41a48:	ldr	r0, [r4]
   41a4c:	add	r1, r2, r1
   41a50:	sub	r0, r1, r0
   41a54:	pop	{r4, r5, r6, sl, fp, pc}
   41a58:	push	{r4, r5, fp, lr}
   41a5c:	add	fp, sp, #8
   41a60:	sub	sp, sp, #8
   41a64:	cmp	r1, #0
   41a68:	mov	r4, r0
   41a6c:	mov	r0, #0
   41a70:	cmpne	r2, #7
   41a74:	str	r0, [sp, #4]
   41a78:	bls	41ab8 <flatcc_json_printer_struct_as_root@@Base+0x1e8>
   41a7c:	cmp	r3, #0
   41a80:	beq	41ab0 <flatcc_json_printer_struct_as_root@@Base+0x1e0>
   41a84:	mov	r5, r1
   41a88:	add	r0, sp, #4
   41a8c:	mov	r1, r3
   41a90:	mov	r2, #4
   41a94:	bl	14ef8 <strncpy@plt>
   41a98:	ldr	r0, [sp, #4]
   41a9c:	cmp	r0, #0
   41aa0:	beq	41ab0 <flatcc_json_printer_struct_as_root@@Base+0x1e0>
   41aa4:	ldr	r1, [r5, #4]
   41aa8:	cmp	r1, r0
   41aac:	bne	41ae8 <flatcc_json_printer_struct_as_root@@Base+0x218>
   41ab0:	sub	sp, fp, #8
   41ab4:	pop	{r4, r5, fp, pc}
   41ab8:	ldr	r0, [r4, #36]	; 0x24
   41abc:	movw	r1, #38371	; 0x95e3
   41ac0:	movw	r3, #39546	; 0x9a7a
   41ac4:	movw	r2, #1019	; 0x3fb
   41ac8:	movt	r1, #4
   41acc:	movt	r3, #4
   41ad0:	cmp	r0, #0
   41ad4:	moveq	r0, #1
   41ad8:	streq	r0, [r4, #36]	; 0x24
   41adc:	movw	r0, #39515	; 0x9a5b
   41ae0:	movt	r0, #4
   41ae4:	bl	14f40 <__assert_fail@plt>
   41ae8:	ldr	r0, [r4, #36]	; 0x24
   41aec:	movw	r1, #38371	; 0x95e3
   41af0:	movw	r3, #39546	; 0x9a7a
   41af4:	movw	r2, #1028	; 0x404
   41af8:	movt	r1, #4
   41afc:	movt	r3, #4
   41b00:	cmp	r0, #0
   41b04:	moveq	r0, #1
   41b08:	streq	r0, [r4, #36]	; 0x24
   41b0c:	movw	r0, #39625	; 0x9ac9
   41b10:	movt	r0, #4
   41b14:	bl	14f40 <__assert_fail@plt>

00041b18 <flatcc_json_printer_table_as_root@@Base>:
   41b18:	push	{r4, r5, r6, sl, fp, lr}
   41b1c:	add	fp, sp, #16
   41b20:	sub	sp, sp, #24
   41b24:	mov	r5, r1
   41b28:	mov	r4, r0
   41b2c:	bl	41a58 <flatcc_json_printer_struct_as_root@@Base+0x188>
   41b30:	ldr	r2, [r4, #32]
   41b34:	ldr	r1, [r4, #20]
   41b38:	ldr	r0, [r5]
   41b3c:	add	r2, r2, #1
   41b40:	str	r2, [r4, #32]
   41b44:	add	r2, r1, #1
   41b48:	str	r2, [r4, #20]
   41b4c:	mov	r2, #123	; 0x7b
   41b50:	strb	r2, [r1]
   41b54:	mov	r1, #99	; 0x63
   41b58:	str	r1, [sp, #16]
   41b5c:	mov	r1, #0
   41b60:	str	r1, [sp, #20]
   41b64:	add	r1, r5, r0
   41b68:	str	r1, [sp, #4]
   41b6c:	ldr	r0, [r5, r0]
   41b70:	sub	r2, r1, r0
   41b74:	str	r2, [sp, #8]
   41b78:	ldr	r2, [fp, #8]
   41b7c:	ldrh	r0, [r1, -r0]
   41b80:	add	r1, sp, #4
   41b84:	str	r0, [sp, #12]
   41b88:	mov	r0, r4
   41b8c:	blx	r2
   41b90:	ldrb	r1, [r4, #25]
   41b94:	ldr	r0, [r4, #20]
   41b98:	cmp	r1, #0
   41b9c:	beq	41c5c <flatcc_json_printer_table_as_root@@Base+0x144>
   41ba0:	add	r1, r0, #1
   41ba4:	str	r1, [r4, #20]
   41ba8:	mov	r1, #10
   41bac:	strb	r1, [r0]
   41bb0:	ldr	r0, [r4, #32]
   41bb4:	sub	r2, r0, #1
   41bb8:	str	r2, [r4, #32]
   41bbc:	ldrb	r3, [r4, #25]
   41bc0:	ldr	r0, [r4, #20]
   41bc4:	ldr	r1, [r4, #16]
   41bc8:	mla	r6, r2, r3, r0
   41bcc:	mul	r5, r2, r3
   41bd0:	cmp	r6, r1
   41bd4:	bls	41c44 <flatcc_json_printer_table_as_root@@Base+0x12c>
   41bd8:	cmp	r0, r1
   41bdc:	bcc	41bf8 <flatcc_json_printer_table_as_root@@Base+0xe0>
   41be0:	ldr	r2, [r4, #44]	; 0x2c
   41be4:	mov	r0, r4
   41be8:	mov	r1, #0
   41bec:	blx	r2
   41bf0:	ldr	r1, [r4, #16]
   41bf4:	ldr	r0, [r4, #20]
   41bf8:	sub	r6, r1, r0
   41bfc:	cmp	r6, r5
   41c00:	bcs	41c44 <flatcc_json_printer_table_as_root@@Base+0x12c>
   41c04:	mov	r1, #32
   41c08:	mov	r2, r6
   41c0c:	bl	14eec <memset@plt>
   41c10:	ldr	r0, [r4, #20]
   41c14:	ldr	r2, [r4, #44]	; 0x2c
   41c18:	mov	r1, #0
   41c1c:	add	r0, r0, r6
   41c20:	str	r0, [r4, #20]
   41c24:	mov	r0, r4
   41c28:	blx	r2
   41c2c:	ldr	r1, [r4, #16]
   41c30:	ldr	r0, [r4, #20]
   41c34:	sub	r5, r5, r6
   41c38:	sub	r6, r1, r0
   41c3c:	cmp	r5, r6
   41c40:	bhi	41c04 <flatcc_json_printer_table_as_root@@Base+0xec>
   41c44:	mov	r1, #32
   41c48:	mov	r2, r5
   41c4c:	bl	14eec <memset@plt>
   41c50:	ldr	r0, [r4, #20]
   41c54:	add	r0, r0, r5
   41c58:	str	r0, [r4, #20]
   41c5c:	add	r1, r0, #1
   41c60:	str	r1, [r4, #20]
   41c64:	mov	r1, #125	; 0x7d
   41c68:	strb	r1, [r0]
   41c6c:	ldrb	r0, [r4, #25]
   41c70:	cmp	r0, #0
   41c74:	beq	41c98 <flatcc_json_printer_table_as_root@@Base+0x180>
   41c78:	ldr	r0, [r4, #32]
   41c7c:	cmp	r0, #0
   41c80:	bne	41c98 <flatcc_json_printer_table_as_root@@Base+0x180>
   41c84:	ldr	r0, [r4, #20]
   41c88:	add	r1, r0, #1
   41c8c:	str	r1, [r4, #20]
   41c90:	mov	r1, #10
   41c94:	strb	r1, [r0]
   41c98:	ldr	r2, [r4, #44]	; 0x2c
   41c9c:	mov	r0, r4
   41ca0:	mov	r1, #1
   41ca4:	blx	r2
   41ca8:	ldr	r1, [r4, #36]	; 0x24
   41cac:	mvn	r0, #0
   41cb0:	cmp	r1, #0
   41cb4:	bne	41ccc <flatcc_json_printer_table_as_root@@Base+0x1b4>
   41cb8:	ldr	r1, [r4, #12]
   41cbc:	ldr	r2, [r4, #20]
   41cc0:	ldr	r0, [r4]
   41cc4:	add	r1, r2, r1
   41cc8:	sub	r0, r1, r0
   41ccc:	sub	sp, fp, #16
   41cd0:	pop	{r4, r5, r6, sl, fp, pc}

00041cd4 <flatcc_json_printer_struct_as_nested_root@@Base>:
   41cd4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   41cd8:	add	fp, sp, #24
   41cdc:	mov	r7, r1
   41ce0:	ldr	r1, [r1, #8]
   41ce4:	mov	r4, r0
   41ce8:	mov	r0, #4
   41cec:	add	r0, r0, r2, lsl #1
   41cf0:	cmp	r0, r1
   41cf4:	bge	41d14 <flatcc_json_printer_struct_as_nested_root@@Base+0x40>
   41cf8:	ldr	r1, [r7, #4]
   41cfc:	add	r0, r1, r0
   41d00:	ldrh	r0, [r0]
   41d04:	cmp	r0, #0
   41d08:	ldrne	r1, [r7]
   41d0c:	addsne	r0, r1, r0
   41d10:	bne	41d18 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   41d14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   41d18:	ldr	r6, [r0]
   41d1c:	mov	r5, r3
   41d20:	ldr	r3, [fp, #12]
   41d24:	ldr	r9, [fp, #16]
   41d28:	ldr	r8, [fp, #8]
   41d2c:	ldr	r2, [r6, r0]!
   41d30:	mov	r0, r4
   41d34:	mov	r1, r6
   41d38:	bl	41a58 <flatcc_json_printer_struct_as_root@@Base+0x188>
   41d3c:	ldr	r0, [r7, #16]
   41d40:	add	r1, r0, #1
   41d44:	cmp	r0, #0
   41d48:	str	r1, [r7, #16]
   41d4c:	beq	41d64 <flatcc_json_printer_struct_as_nested_root@@Base+0x90>
   41d50:	ldr	r0, [r4, #20]
   41d54:	add	r1, r0, #1
   41d58:	str	r1, [r4, #20]
   41d5c:	mov	r1, #44	; 0x2c
   41d60:	strb	r1, [r0]
   41d64:	mov	r0, r4
   41d68:	mov	r1, r5
   41d6c:	mov	r2, r8
   41d70:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   41d74:	ldr	r1, [r4, #32]
   41d78:	ldr	r0, [r4, #20]
   41d7c:	add	r1, r1, #1
   41d80:	str	r1, [r4, #32]
   41d84:	add	r1, r0, #1
   41d88:	str	r1, [r4, #20]
   41d8c:	mov	r1, #123	; 0x7b
   41d90:	strb	r1, [r0]
   41d94:	ldr	r0, [r6]
   41d98:	add	r1, r6, r0
   41d9c:	mov	r0, r4
   41da0:	blx	r9
   41da4:	ldrb	r1, [r4, #25]
   41da8:	ldr	r0, [r4, #20]
   41dac:	cmp	r1, #0
   41db0:	beq	41e70 <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
   41db4:	add	r1, r0, #1
   41db8:	str	r1, [r4, #20]
   41dbc:	mov	r1, #10
   41dc0:	strb	r1, [r0]
   41dc4:	ldr	r0, [r4, #32]
   41dc8:	sub	r2, r0, #1
   41dcc:	str	r2, [r4, #32]
   41dd0:	ldrb	r3, [r4, #25]
   41dd4:	ldr	r0, [r4, #20]
   41dd8:	ldr	r1, [r4, #16]
   41ddc:	mla	r7, r2, r3, r0
   41de0:	mul	r5, r2, r3
   41de4:	cmp	r7, r1
   41de8:	bls	41e58 <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   41dec:	cmp	r0, r1
   41df0:	bcc	41e0c <flatcc_json_printer_struct_as_nested_root@@Base+0x138>
   41df4:	ldr	r2, [r4, #44]	; 0x2c
   41df8:	mov	r0, r4
   41dfc:	mov	r1, #0
   41e00:	blx	r2
   41e04:	ldr	r1, [r4, #16]
   41e08:	ldr	r0, [r4, #20]
   41e0c:	sub	r6, r1, r0
   41e10:	cmp	r6, r5
   41e14:	bcs	41e58 <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   41e18:	mov	r1, #32
   41e1c:	mov	r2, r6
   41e20:	bl	14eec <memset@plt>
   41e24:	ldr	r0, [r4, #20]
   41e28:	ldr	r2, [r4, #44]	; 0x2c
   41e2c:	mov	r1, #0
   41e30:	add	r0, r0, r6
   41e34:	str	r0, [r4, #20]
   41e38:	mov	r0, r4
   41e3c:	blx	r2
   41e40:	ldr	r1, [r4, #16]
   41e44:	ldr	r0, [r4, #20]
   41e48:	sub	r5, r5, r6
   41e4c:	sub	r6, r1, r0
   41e50:	cmp	r5, r6
   41e54:	bhi	41e18 <flatcc_json_printer_struct_as_nested_root@@Base+0x144>
   41e58:	mov	r1, #32
   41e5c:	mov	r2, r5
   41e60:	bl	14eec <memset@plt>
   41e64:	ldr	r0, [r4, #20]
   41e68:	add	r0, r0, r5
   41e6c:	str	r0, [r4, #20]
   41e70:	add	r1, r0, #1
   41e74:	str	r1, [r4, #20]
   41e78:	mov	r1, #125	; 0x7d
   41e7c:	strb	r1, [r0]
   41e80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00041e84 <flatcc_json_printer_table_as_nested_root@@Base>:
   41e84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   41e88:	add	fp, sp, #24
   41e8c:	sub	sp, sp, #24
   41e90:	mov	r5, r1
   41e94:	ldr	r1, [r1, #8]
   41e98:	mov	r4, r0
   41e9c:	mov	r0, #4
   41ea0:	add	r0, r0, r2, lsl #1
   41ea4:	cmp	r0, r1
   41ea8:	bge	41ec8 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   41eac:	ldr	r1, [r5, #4]
   41eb0:	add	r0, r1, r0
   41eb4:	ldrh	r0, [r0]
   41eb8:	cmp	r0, #0
   41ebc:	ldrne	r1, [r5]
   41ec0:	addsne	r0, r1, r0
   41ec4:	bne	41ed0 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   41ec8:	sub	sp, fp, #24
   41ecc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   41ed0:	ldr	r1, [r0]
   41ed4:	mov	r6, r3
   41ed8:	ldr	r3, [fp, #12]
   41edc:	ldr	r8, [fp, #8]
   41ee0:	ldr	r2, [r1, r0]!
   41ee4:	mov	r0, r4
   41ee8:	add	r7, r1, #4
   41eec:	mov	r1, r7
   41ef0:	bl	41a58 <flatcc_json_printer_struct_as_root@@Base+0x188>
   41ef4:	ldr	r0, [r5, #16]
   41ef8:	add	r1, r0, #1
   41efc:	cmp	r0, #0
   41f00:	str	r1, [r5, #16]
   41f04:	beq	41f1c <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   41f08:	ldr	r0, [r4, #20]
   41f0c:	add	r1, r0, #1
   41f10:	str	r1, [r4, #20]
   41f14:	mov	r1, #44	; 0x2c
   41f18:	strb	r1, [r0]
   41f1c:	mov	r0, r4
   41f20:	mov	r1, r6
   41f24:	mov	r2, r8
   41f28:	bl	3883c <flatcc_json_printer_string_field@@Base+0x90>
   41f2c:	ldr	r0, [r5, #12]
   41f30:	subs	r0, r0, #1
   41f34:	beq	42074 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   41f38:	ldr	r1, [r7]
   41f3c:	ldr	r3, [r4, #20]
   41f40:	ldr	r2, [fp, #16]
   41f44:	add	r1, r7, r1
   41f48:	ldr	r7, [r4, #32]
   41f4c:	add	r7, r7, #1
   41f50:	str	r7, [r4, #32]
   41f54:	add	r7, r3, #1
   41f58:	str	r7, [r4, #20]
   41f5c:	mov	r7, #123	; 0x7b
   41f60:	strb	r7, [r3]
   41f64:	str	r0, [sp, #16]
   41f68:	mov	r0, #0
   41f6c:	str	r0, [sp, #20]
   41f70:	str	r1, [sp, #4]
   41f74:	ldr	r0, [r1]
   41f78:	sub	r3, r1, r0
   41f7c:	str	r3, [sp, #8]
   41f80:	ldrh	r0, [r1, -r0]
   41f84:	add	r1, sp, #4
   41f88:	str	r0, [sp, #12]
   41f8c:	mov	r0, r4
   41f90:	blx	r2
   41f94:	ldrb	r1, [r4, #25]
   41f98:	ldr	r0, [r4, #20]
   41f9c:	cmp	r1, #0
   41fa0:	beq	42060 <flatcc_json_printer_table_as_nested_root@@Base+0x1dc>
   41fa4:	add	r1, r0, #1
   41fa8:	str	r1, [r4, #20]
   41fac:	mov	r1, #10
   41fb0:	strb	r1, [r0]
   41fb4:	ldr	r0, [r4, #32]
   41fb8:	sub	r2, r0, #1
   41fbc:	str	r2, [r4, #32]
   41fc0:	ldrb	r3, [r4, #25]
   41fc4:	ldr	r0, [r4, #20]
   41fc8:	ldr	r1, [r4, #16]
   41fcc:	mla	r7, r2, r3, r0
   41fd0:	mul	r5, r2, r3
   41fd4:	cmp	r7, r1
   41fd8:	bls	42048 <flatcc_json_printer_table_as_nested_root@@Base+0x1c4>
   41fdc:	cmp	r0, r1
   41fe0:	bcc	41ffc <flatcc_json_printer_table_as_nested_root@@Base+0x178>
   41fe4:	ldr	r2, [r4, #44]	; 0x2c
   41fe8:	mov	r0, r4
   41fec:	mov	r1, #0
   41ff0:	blx	r2
   41ff4:	ldr	r1, [r4, #16]
   41ff8:	ldr	r0, [r4, #20]
   41ffc:	sub	r6, r1, r0
   42000:	cmp	r6, r5
   42004:	bcs	42048 <flatcc_json_printer_table_as_nested_root@@Base+0x1c4>
   42008:	mov	r1, #32
   4200c:	mov	r2, r6
   42010:	bl	14eec <memset@plt>
   42014:	ldr	r0, [r4, #20]
   42018:	ldr	r2, [r4, #44]	; 0x2c
   4201c:	mov	r1, #0
   42020:	add	r0, r0, r6
   42024:	str	r0, [r4, #20]
   42028:	mov	r0, r4
   4202c:	blx	r2
   42030:	ldr	r1, [r4, #16]
   42034:	ldr	r0, [r4, #20]
   42038:	sub	r5, r5, r6
   4203c:	sub	r6, r1, r0
   42040:	cmp	r5, r6
   42044:	bhi	42008 <flatcc_json_printer_table_as_nested_root@@Base+0x184>
   42048:	mov	r1, #32
   4204c:	mov	r2, r5
   42050:	bl	14eec <memset@plt>
   42054:	ldr	r0, [r4, #20]
   42058:	add	r0, r0, r5
   4205c:	str	r0, [r4, #20]
   42060:	add	r1, r0, #1
   42064:	str	r1, [r4, #20]
   42068:	mov	r1, #125	; 0x7d
   4206c:	strb	r1, [r0]
   42070:	b	41ec8 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   42074:	ldr	r0, [r4, #36]	; 0x24
   42078:	cmp	r0, #0
   4207c:	moveq	r0, #2
   42080:	streq	r0, [r4, #36]	; 0x24
   42084:	b	41ec8 <flatcc_json_printer_table_as_nested_root@@Base+0x44>

00042088 <flatcc_json_printer_init@@Base>:
   42088:	push	{r4, r5, r6, sl, fp, lr}
   4208c:	add	fp, sp, #16
   42090:	vmov.i32	q8, #0	; 0x00000000
   42094:	mov	r5, r0
   42098:	mov	r4, #0
   4209c:	cmp	r1, #0
   420a0:	movw	r6, #16448	; 0x4040
   420a4:	str	r4, [r0, #32]
   420a8:	mov	r0, #36	; 0x24
   420ac:	mov	r2, r5
   420b0:	vst1.32	{d16-d17}, [r2], r0
   420b4:	add	r0, r5, #16
   420b8:	vst1.32	{d16-d17}, [r0]
   420bc:	movw	r0, #45900	; 0xb34c
   420c0:	str	r4, [r2]
   420c4:	movw	r2, #8484	; 0x2124
   420c8:	movt	r0, #5
   420cc:	movt	r2, #4
   420d0:	ldr	r0, [r0]
   420d4:	movne	r0, r1
   420d8:	str	r0, [r5, #40]	; 0x28
   420dc:	movw	r0, #16448	; 0x4040
   420e0:	str	r2, [r5, #44]	; 0x2c
   420e4:	bl	14e98 <malloc@plt>
   420e8:	cmp	r0, #0
   420ec:	str	r0, [r5]
   420f0:	beq	42118 <flatcc_json_printer_init@@Base+0x90>
   420f4:	mov	r1, #16384	; 0x4000
   420f8:	str	r6, [r5, #4]
   420fc:	str	r1, [r5, #8]
   42100:	mov	r1, #1
   42104:	strb	r1, [r5, #24]
   42108:	add	r1, r0, #16384	; 0x4000
   4210c:	str	r1, [r5, #16]
   42110:	str	r0, [r5, #20]
   42114:	b	4211c <flatcc_json_printer_init@@Base+0x94>
   42118:	mvn	r4, #0
   4211c:	mov	r0, r4
   42120:	pop	{r4, r5, r6, sl, fp, pc}
   42124:	push	{r4, r5, r6, sl, fp, lr}
   42128:	add	fp, sp, #16
   4212c:	mov	r4, r0
   42130:	cmp	r1, #0
   42134:	beq	42140 <flatcc_json_printer_init@@Base+0xb8>
   42138:	ldr	r5, [r4, #20]
   4213c:	b	42150 <flatcc_json_printer_init@@Base+0xc8>
   42140:	ldr	r6, [r4, #16]
   42144:	ldr	r5, [r4, #20]
   42148:	cmp	r5, r6
   4214c:	bcs	4217c <flatcc_json_printer_init@@Base+0xf4>
   42150:	ldr	r0, [r4]
   42154:	ldr	r3, [r4, #40]	; 0x28
   42158:	mov	r2, #1
   4215c:	sub	r5, r5, r0
   42160:	mov	r1, r5
   42164:	bl	14e8c <fwrite@plt>
   42168:	ldr	r1, [r4, #12]
   4216c:	ldr	r0, [r4]
   42170:	str	r0, [r4, #20]
   42174:	add	r1, r1, r5
   42178:	b	421c0 <flatcc_json_printer_init@@Base+0x138>
   4217c:	ldr	r0, [r4]
   42180:	ldr	r1, [r4, #8]
   42184:	ldr	r3, [r4, #40]	; 0x28
   42188:	mov	r2, #1
   4218c:	bl	14e8c <fwrite@plt>
   42190:	ldr	r0, [r4]
   42194:	ldr	r1, [r4, #8]
   42198:	sub	r5, r5, r6
   4219c:	mov	r2, r5
   421a0:	add	r1, r0, r1
   421a4:	bl	14e5c <memcpy@plt>
   421a8:	ldr	r0, [r4]
   421ac:	ldr	r1, [r4, #8]
   421b0:	ldr	r2, [r4, #12]
   421b4:	add	r0, r0, r5
   421b8:	add	r1, r2, r1
   421bc:	str	r0, [r4, #20]
   421c0:	str	r1, [r4, #12]
   421c4:	mov	r1, #0
   421c8:	strb	r1, [r0]
   421cc:	pop	{r4, r5, r6, sl, fp, pc}

000421d0 <flatcc_json_printer_init_buffer@@Base>:
   421d0:	push	{fp, lr}
   421d4:	mov	fp, sp
   421d8:	cmp	r2, #63	; 0x3f
   421dc:	bls	4221c <flatcc_json_printer_init_buffer@@Base+0x4c>
   421e0:	vmov.i32	q8, #0	; 0x00000000
   421e4:	add	r3, r0, #12
   421e8:	vst1.32	{d16-d17}, [r3]
   421ec:	movw	r3, #8764	; 0x223c
   421f0:	movt	r3, #4
   421f4:	str	r3, [r0, #44]	; 0x2c
   421f8:	add	r3, r0, #28
   421fc:	vst1.32	{d16-d17}, [r3]
   42200:	sub	r3, r2, #64	; 0x40
   42204:	stm	r0, {r1, r2, r3}
   42208:	add	r2, r1, r3
   4220c:	str	r2, [r0, #16]
   42210:	str	r1, [r0, #20]
   42214:	mov	r0, #0
   42218:	pop	{fp, pc}
   4221c:	movw	r0, #38654	; 0x96fe
   42220:	movw	r1, #38371	; 0x95e3
   42224:	movw	r3, #38695	; 0x9727
   42228:	movw	r2, #1165	; 0x48d
   4222c:	movt	r0, #4
   42230:	movt	r1, #4
   42234:	movt	r3, #4
   42238:	bl	14f40 <__assert_fail@plt>
   4223c:	ldr	r2, [r0, #16]
   42240:	ldr	r1, [r0, #20]
   42244:	cmp	r1, r2
   42248:	bcs	42254 <flatcc_json_printer_init_buffer@@Base+0x84>
   4224c:	mov	r2, r1
   42250:	b	4227c <flatcc_json_printer_init_buffer@@Base+0xac>
   42254:	ldr	r2, [r0, #36]	; 0x24
   42258:	cmp	r2, #0
   4225c:	moveq	r2, #3
   42260:	streq	r2, [r0, #36]	; 0x24
   42264:	ldr	r2, [r0]
   42268:	ldr	r3, [r0, #12]
   4226c:	sub	r1, r1, r2
   42270:	str	r2, [r0, #20]
   42274:	add	r1, r1, r3
   42278:	str	r1, [r0, #12]
   4227c:	mov	r0, #0
   42280:	strb	r0, [r2]
   42284:	bx	lr

00042288 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   42288:	push	{r4, r5, fp, lr}
   4228c:	add	fp, sp, #8
   42290:	vmov.i32	q8, #0	; 0x00000000
   42294:	cmp	r1, #0
   42298:	mov	r5, r1
   4229c:	mov	r4, r0
   422a0:	add	r0, r0, #28
   422a4:	movweq	r5, #4096	; 0x1000
   422a8:	cmp	r5, #64	; 0x40
   422ac:	vst1.32	{d16-d17}, [r0]
   422b0:	add	r0, r4, #12
   422b4:	movls	r5, #64	; 0x40
   422b8:	vst1.32	{d16-d17}, [r0]
   422bc:	mov	r0, r5
   422c0:	bl	14e98 <malloc@plt>
   422c4:	mov	r1, r0
   422c8:	movw	r2, #8972	; 0x230c
   422cc:	mov	r0, #1
   422d0:	strb	r0, [r4, #24]
   422d4:	sub	r0, r5, #64	; 0x40
   422d8:	movt	r2, #4
   422dc:	stm	r4, {r1, r5}
   422e0:	cmp	r1, #0
   422e4:	str	r0, [r4, #8]
   422e8:	add	r0, r1, r0
   422ec:	str	r2, [r4, #44]	; 0x2c
   422f0:	str	r0, [r4, #16]
   422f4:	mov	r0, #0
   422f8:	moveq	r0, #3
   422fc:	str	r1, [r4, #20]
   42300:	streq	r0, [r4, #36]	; 0x24
   42304:	mvneq	r0, #0
   42308:	pop	{r4, r5, fp, pc}
   4230c:	push	{r4, r5, fp, lr}
   42310:	add	fp, sp, #8
   42314:	mov	r4, r0
   42318:	ldr	r0, [r0]
   4231c:	mov	r1, #0
   42320:	ldr	r5, [r4, #20]
   42324:	strb	r1, [r5], -r0
   42328:	ldr	r0, [r4, #16]
   4232c:	ldr	r1, [r4, #20]
   42330:	cmp	r1, r0
   42334:	popcc	{r4, r5, fp, pc}
   42338:	ldm	r4, {r0, r1}
   4233c:	lsl	r1, r1, #1
   42340:	bl	14e80 <realloc@plt>
   42344:	cmp	r0, #0
   42348:	beq	4237c <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   4234c:	str	r0, [r4]
   42350:	mvn	r3, #63	; 0x3f
   42354:	add	r1, r0, r5
   42358:	ldr	r2, [r4, #4]
   4235c:	add	r3, r3, r2, lsl #1
   42360:	lsl	r2, r2, #1
   42364:	add	r0, r0, r3
   42368:	str	r3, [r4, #8]
   4236c:	str	r2, [r4, #4]
   42370:	str	r0, [r4, #16]
   42374:	str	r1, [r4, #20]
   42378:	b	423a0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x118>
   4237c:	ldr	r0, [r4, #36]	; 0x24
   42380:	cmp	r0, #0
   42384:	moveq	r0, #3
   42388:	streq	r0, [r4, #36]	; 0x24
   4238c:	ldr	r0, [r4, #12]
   42390:	ldr	r1, [r4]
   42394:	add	r0, r0, r5
   42398:	str	r1, [r4, #20]
   4239c:	str	r0, [r4, #12]
   423a0:	mov	r0, #0
   423a4:	strb	r0, [r1]
   423a8:	pop	{r4, r5, fp, pc}

000423ac <flatcc_json_printer_get_buffer@@Base>:
   423ac:	push	{r4, r5, fp, lr}
   423b0:	add	fp, sp, #8
   423b4:	ldr	r2, [r0, #44]	; 0x2c
   423b8:	mov	r4, r1
   423bc:	mov	r1, #0
   423c0:	mov	r5, r0
   423c4:	blx	r2
   423c8:	cmp	r4, #0
   423cc:	beq	423e4 <flatcc_json_printer_get_buffer@@Base+0x38>
   423d0:	ldr	r0, [r5]
   423d4:	ldr	r1, [r5, #20]
   423d8:	sub	r1, r1, r0
   423dc:	str	r1, [r4]
   423e0:	pop	{r4, r5, fp, pc}
   423e4:	ldr	r0, [r5]
   423e8:	pop	{r4, r5, fp, pc}

000423ec <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   423ec:	push	{r4, r5, fp, lr}
   423f0:	add	fp, sp, #8
   423f4:	ldr	r2, [r0, #44]	; 0x2c
   423f8:	mov	r5, r1
   423fc:	mov	r1, #0
   42400:	mov	r4, r0
   42404:	blx	r2
   42408:	cmp	r5, #0
   4240c:	beq	42424 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x38>
   42410:	ldr	r0, [r4]
   42414:	ldr	r1, [r4, #20]
   42418:	sub	r1, r1, r0
   4241c:	str	r1, [r5]
   42420:	b	42428 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x3c>
   42424:	ldr	r0, [r4]
   42428:	vmov.i32	q8, #0	; 0x00000000
   4242c:	mov	r1, #32
   42430:	add	r2, r4, #16
   42434:	vst1.32	{d16-d17}, [r4], r1
   42438:	vst1.32	{d16-d17}, [r2]
   4243c:	vst1.32	{d16-d17}, [r4]
   42440:	pop	{r4, r5, fp, pc}

00042444 <flatcc_json_printer_clear@@Base>:
   42444:	push	{r4, sl, fp, lr}
   42448:	add	fp, sp, #8
   4244c:	mov	r4, r0
   42450:	ldrb	r0, [r0, #24]
   42454:	cmp	r0, #0
   42458:	beq	4246c <flatcc_json_printer_clear@@Base+0x28>
   4245c:	ldr	r0, [r4]
   42460:	cmp	r0, #0
   42464:	beq	4246c <flatcc_json_printer_clear@@Base+0x28>
   42468:	bl	14e50 <free@plt>
   4246c:	vmov.i32	q8, #0	; 0x00000000
   42470:	mov	r0, #32
   42474:	add	r1, r4, #16
   42478:	vst1.32	{d16-d17}, [r4], r0
   4247c:	vst1.32	{d16-d17}, [r1]
   42480:	vst1.32	{d16-d17}, [r4]
   42484:	pop	{r4, sl, fp, pc}
   42488:	push	{r4, sl, fp, lr}
   4248c:	add	fp, sp, #8
   42490:	cmn	r0, #1
   42494:	ble	424a0 <flatcc_json_printer_clear@@Base+0x5c>
   42498:	mov	lr, r1
   4249c:	b	424b0 <flatcc_json_printer_clear@@Base+0x6c>
   424a0:	mov	r2, #45	; 0x2d
   424a4:	mov	lr, r1
   424a8:	rsb	r0, r0, #0
   424ac:	strb	r2, [lr], #1
   424b0:	movw	ip, #26215	; 0x6667
   424b4:	mov	r3, lr
   424b8:	movt	ip, #26214	; 0x6666
   424bc:	smmul	r2, r0, ip
   424c0:	asr	r4, r2, #2
   424c4:	add	r2, r4, r2, lsr #31
   424c8:	add	r4, r2, r2, lsl #2
   424cc:	sub	r4, r0, r4, lsl #1
   424d0:	add	r0, r0, #9
   424d4:	cmp	r0, #18
   424d8:	mov	r0, r2
   424dc:	add	r4, r4, #48	; 0x30
   424e0:	strb	r4, [r3], #1
   424e4:	bhi	424bc <flatcc_json_printer_clear@@Base+0x78>
   424e8:	mov	r2, #0
   424ec:	mov	r0, r3
   424f0:	strb	r2, [r0], -lr
   424f4:	cmp	r0, #2
   424f8:	blt	42520 <flatcc_json_printer_clear@@Base+0xdc>
   424fc:	add	r0, r0, r0, lsr #31
   42500:	sub	r2, r3, #1
   42504:	asr	r0, r0, #1
   42508:	ldrb	ip, [lr]
   4250c:	ldrb	r4, [r2]
   42510:	subs	r0, r0, #1
   42514:	strb	r4, [lr], #1
   42518:	strb	ip, [r2], #-1
   4251c:	bne	42508 <flatcc_json_printer_clear@@Base+0xc4>
   42520:	sub	r0, r3, r1
   42524:	pop	{r4, sl, fp, pc}
   42528:	push	{r4, sl, fp, lr}
   4252c:	add	fp, sp, #8
   42530:	orrs	r1, r2, r3
   42534:	beq	425ac <flatcc_json_printer_clear@@Base+0x168>
   42538:	ldr	r1, [fp, #8]
   4253c:	mov	r4, #0
   42540:	cmp	r4, r3, lsr #22
   42544:	bne	42560 <flatcc_json_printer_clear@@Base+0x11c>
   42548:	lsl	r3, r3, #10
   4254c:	sub	r1, r1, #10
   42550:	orr	r3, r3, r2, lsr #22
   42554:	lsl	r2, r2, #10
   42558:	cmp	r3, #4194304	; 0x400000
   4255c:	bcc	42548 <flatcc_json_printer_clear@@Base+0x104>
   42560:	ldr	ip, [fp, #12]
   42564:	cmp	r3, #0
   42568:	bmi	42594 <flatcc_json_printer_clear@@Base+0x150>
   4256c:	mvn	lr, #0
   42570:	lsl	r3, r3, #1
   42574:	lsl	r4, r2, #1
   42578:	sub	r1, r1, #1
   4257c:	orr	r3, r3, r2, lsr #31
   42580:	subs	r2, lr, r2, lsl #1
   42584:	sbcs	r2, lr, r3
   42588:	mov	r2, r4
   4258c:	blt	42570 <flatcc_json_printer_clear@@Base+0x12c>
   42590:	b	42598 <flatcc_json_printer_clear@@Base+0x154>
   42594:	mov	r4, r2
   42598:	str	r4, [r0]
   4259c:	str	r3, [r0, #4]
   425a0:	str	r1, [r0, #8]
   425a4:	str	ip, [r0, #12]
   425a8:	pop	{r4, sl, fp, pc}
   425ac:	movw	r0, #37994	; 0x946a
   425b0:	movw	r1, #38003	; 0x9473
   425b4:	movw	r3, #38089	; 0x94c9
   425b8:	mov	r2, #260	; 0x104
   425bc:	movt	r0, #4
   425c0:	movt	r1, #4
   425c4:	movt	r3, #4
   425c8:	bl	14f40 <__assert_fail@plt>
   425cc:	push	{r4, r5, fp, lr}
   425d0:	add	fp, sp, #8
   425d4:	ldr	ip, [fp, #24]
   425d8:	ldr	r1, [fp, #8]
   425dc:	mov	r5, #0
   425e0:	add	r1, r1, ip
   425e4:	ldr	ip, [fp, #16]
   425e8:	add	r1, r1, #64	; 0x40
   425ec:	str	r1, [r0, #8]
   425f0:	umull	r1, lr, ip, r2
   425f4:	umull	ip, r1, ip, r3
   425f8:	adds	lr, ip, lr
   425fc:	ldr	ip, [fp, #20]
   42600:	adc	r5, r5, #0
   42604:	umull	r2, r4, ip, r2
   42608:	umaal	r1, r4, ip, r3
   4260c:	adds	r2, lr, r2
   42610:	adc	r5, r5, #0
   42614:	adds	r2, r2, #-2147483648	; 0x80000000
   42618:	adcs	r1, r1, r5
   4261c:	str	r1, [r0]
   42620:	adc	r1, r4, #0
   42624:	str	r1, [r0, #4]
   42628:	pop	{r4, r5, fp, pc}
   4262c:	push	{fp, lr}
   42630:	mov	fp, sp
   42634:	ldr	r1, [fp, #16]
   42638:	ldr	ip, [fp, #8]
   4263c:	subs	r1, r2, r1
   42640:	str	ip, [r0, #8]
   42644:	str	r1, [r0]
   42648:	ldr	r1, [fp, #20]
   4264c:	sbcs	r1, r3, r1
   42650:	str	r1, [r0, #4]
   42654:	bcc	42664 <flatcc_json_printer_clear@@Base+0x220>
   42658:	ldr	r0, [fp, #24]
   4265c:	cmp	ip, r0
   42660:	popeq	{fp, pc}
   42664:	movw	r0, #39001	; 0x9859
   42668:	movw	r1, #38003	; 0x9473
   4266c:	movw	r3, #39026	; 0x9872
   42670:	mov	r2, #239	; 0xef
   42674:	movt	r0, #4
   42678:	movt	r1, #4
   4267c:	movt	r3, #4
   42680:	bl	14f40 <__assert_fail@plt>
   42684:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42688:	add	fp, sp, #28
   4268c:	sub	sp, sp, #20
   42690:	str	r1, [sp, #12]
   42694:	ldr	r1, [fp, #16]
   42698:	ldr	r9, [fp, #8]
   4269c:	mov	r8, r2
   426a0:	ldr	r2, [fp, #20]
   426a4:	ldr	lr, [fp, #12]
   426a8:	ldr	r4, [fp, #24]
   426ac:	str	r0, [sp, #16]
   426b0:	ldr	r0, [fp, #28]
   426b4:	mov	r6, #0
   426b8:	subs	r7, r9, r1
   426bc:	sbc	ip, lr, r2
   426c0:	subs	r4, r7, r4
   426c4:	sbcs	r4, ip, r0
   426c8:	ldr	r0, [fp, #32]
   426cc:	ldr	r4, [fp, #36]	; 0x24
   426d0:	movwcc	r6, #1
   426d4:	adds	r5, r0, r8
   426d8:	str	r5, [sp, #8]
   426dc:	adc	r5, r4, r3
   426e0:	subs	sl, r8, r0
   426e4:	sbc	r8, r3, r4
   426e8:	subs	r3, r1, sl
   426ec:	str	r5, [sp, #4]
   426f0:	sbcs	r3, r2, r8
   426f4:	bcs	427b0 <flatcc_json_printer_clear@@Base+0x36c>
   426f8:	ldr	r0, [fp, #24]
   426fc:	ldr	r4, [fp, #28]
   42700:	subs	r3, r7, r0
   42704:	mov	r7, r0
   42708:	sbcs	r3, ip, r4
   4270c:	bcc	427c0 <flatcc_json_printer_clear@@Base+0x37c>
   42710:	ldr	r0, [sp, #12]
   42714:	sub	r0, r0, #1
   42718:	str	r0, [sp, #12]
   4271c:	adds	ip, r1, r7
   42720:	adc	r3, r2, r4
   42724:	subs	r6, ip, sl
   42728:	sbcs	r6, r3, r8
   4272c:	bcc	42764 <flatcc_json_printer_clear@@Base+0x320>
   42730:	subs	r6, ip, sl
   42734:	mov	r5, lr
   42738:	mov	r0, r9
   4273c:	sbc	r4, r3, r8
   42740:	subs	lr, sl, r1
   42744:	sbc	r9, r8, r2
   42748:	subs	r6, lr, r6
   4274c:	mov	lr, r5
   42750:	sbcs	r6, r9, r4
   42754:	mov	r9, r0
   42758:	ldr	r4, [fp, #28]
   4275c:	ldr	r0, [sp, #12]
   42760:	bcc	427bc <flatcc_json_printer_clear@@Base+0x378>
   42764:	ldr	r2, [sp, #16]
   42768:	ldrb	r1, [r2, r0]
   4276c:	sub	r1, r1, #1
   42770:	strb	r1, [r2, r0]
   42774:	subs	r1, r9, ip
   42778:	sbc	r2, lr, r3
   4277c:	subs	r6, r1, r7
   42780:	sbcs	r6, r2, r4
   42784:	mov	r6, #0
   42788:	movwcc	r6, #1
   4278c:	subs	r5, ip, sl
   42790:	sbcs	r5, r3, r8
   42794:	bcs	427c8 <flatcc_json_printer_clear@@Base+0x384>
   42798:	subs	r1, r1, r7
   4279c:	sbcs	r1, r2, r4
   427a0:	mov	r1, ip
   427a4:	mov	r2, r3
   427a8:	bcs	4271c <flatcc_json_printer_clear@@Base+0x2d8>
   427ac:	b	427c8 <flatcc_json_printer_clear@@Base+0x384>
   427b0:	ldr	r4, [fp, #28]
   427b4:	ldr	r7, [fp, #24]
   427b8:	b	427c0 <flatcc_json_printer_clear@@Base+0x37c>
   427bc:	mov	r6, #0
   427c0:	mov	ip, r1
   427c4:	mov	r3, r2
   427c8:	ldr	r1, [sp, #8]
   427cc:	ldr	r5, [sp, #4]
   427d0:	subs	r0, ip, r1
   427d4:	sbcs	r0, r3, r5
   427d8:	bcs	42818 <flatcc_json_printer_clear@@Base+0x3d4>
   427dc:	cmp	r6, #0
   427e0:	bne	42818 <flatcc_json_printer_clear@@Base+0x3d4>
   427e4:	adds	r8, ip, r7
   427e8:	mov	r0, #0
   427ec:	adc	r2, r3, r4
   427f0:	subs	r6, r8, r1
   427f4:	sbcs	r6, r2, r5
   427f8:	bcc	42864 <flatcc_json_printer_clear@@Base+0x420>
   427fc:	subs	r6, r1, ip
   42800:	sbc	r4, r5, r3
   42804:	subs	r1, r8, r1
   42808:	sbc	r2, r2, r5
   4280c:	subs	r1, r1, r6
   42810:	sbcs	r1, r2, r4
   42814:	bcc	42864 <flatcc_json_printer_clear@@Base+0x420>
   42818:	ldr	r0, [fp, #36]	; 0x24
   4281c:	ldr	r1, [fp, #32]
   42820:	lsl	r0, r0, #1
   42824:	mov	r2, r1
   42828:	orr	r1, r0, r1, lsr #31
   4282c:	subs	r2, ip, r2, lsl #1
   42830:	mov	r0, #0
   42834:	sbcs	r1, r3, r1
   42838:	bcc	42864 <flatcc_json_printer_clear@@Base+0x420>
   4283c:	ldr	r0, [fp, #36]	; 0x24
   42840:	ldr	r1, [fp, #32]
   42844:	lsl	r0, r0, #2
   42848:	orr	r0, r0, r1, lsr #30
   4284c:	subs	r1, r9, r1, lsl #2
   42850:	sbc	r2, lr, r0
   42854:	subs	r1, r1, ip
   42858:	mov	r0, #0
   4285c:	sbcs	r1, r2, r3
   42860:	movwcs	r0, #1
   42864:	sub	sp, fp, #28
   42868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4286c:	cmp	r2, #0
   42870:	bxeq	lr
   42874:	push	{r4, r5, fp, lr}
   42878:	add	fp, sp, #8
   4287c:	ldr	lr, [r2]
   42880:	bic	ip, r3, #224	; 0xe0
   42884:	cmp	ip, #0
   42888:	beq	428a0 <flatcc_json_printer_clear@@Base+0x45c>
   4288c:	cmp	ip, #1
   42890:	bne	42968 <flatcc_json_printer_clear@@Base+0x524>
   42894:	movw	ip, #39450	; 0x9a1a
   42898:	movt	ip, #4
   4289c:	b	428a8 <flatcc_json_printer_clear@@Base+0x464>
   428a0:	movw	ip, #39385	; 0x99d9
   428a4:	movt	ip, #4
   428a8:	cmp	lr, #3
   428ac:	bcc	42910 <flatcc_json_printer_clear@@Base+0x4cc>
   428b0:	ldrb	r4, [r1]
   428b4:	sub	lr, lr, #3
   428b8:	cmp	lr, #2
   428bc:	ldrb	r4, [ip, r4, lsr #2]
   428c0:	strb	r4, [r0]
   428c4:	ldrb	r5, [r1, #1]
   428c8:	ldrb	r4, [r1]
   428cc:	lsr	r5, r5, #4
   428d0:	bfi	r5, r4, #4, #2
   428d4:	ldrb	r4, [ip, r5]
   428d8:	strb	r4, [r0, #1]
   428dc:	ldrb	r5, [r1, #2]
   428e0:	ldrb	r4, [r1, #1]
   428e4:	lsr	r5, r5, #6
   428e8:	bfi	r5, r4, #2, #4
   428ec:	ldrb	r4, [ip, r5]
   428f0:	strb	r4, [r0, #2]
   428f4:	ldrb	r4, [r1, #2]
   428f8:	add	r1, r1, #3
   428fc:	and	r4, r4, #63	; 0x3f
   42900:	ldrb	r4, [ip, r4]
   42904:	strb	r4, [r0, #3]
   42908:	add	r0, r0, #4
   4290c:	bhi	428b0 <flatcc_json_printer_clear@@Base+0x46c>
   42910:	and	r3, r3, #128	; 0x80
   42914:	cmp	lr, #1
   42918:	beq	42970 <flatcc_json_printer_clear@@Base+0x52c>
   4291c:	cmp	lr, #2
   42920:	bne	42998 <flatcc_json_printer_clear@@Base+0x554>
   42924:	ldrb	r5, [r1]
   42928:	cmp	r3, #0
   4292c:	ldrb	r5, [ip, r5, lsr #2]
   42930:	strb	r5, [r0]
   42934:	ldrb	r4, [r1, #1]
   42938:	ldrb	r5, [r1]
   4293c:	lsr	r4, r4, #4
   42940:	bfi	r4, r5, #4, #2
   42944:	ldrb	r5, [ip, r4]
   42948:	strb	r5, [r0, #1]
   4294c:	ldrb	r1, [r1, #1]
   42950:	and	r1, r1, #15
   42954:	ldrb	r1, [ip, r1, lsl #2]
   42958:	strb	r1, [r0, #2]
   4295c:	movne	r1, #61	; 0x3d
   42960:	strbne	r1, [r0, #3]
   42964:	b	42998 <flatcc_json_printer_clear@@Base+0x554>
   42968:	mov	r0, lr
   4296c:	b	429a0 <flatcc_json_printer_clear@@Base+0x55c>
   42970:	ldrb	r5, [r1]
   42974:	cmp	r3, #0
   42978:	ldrb	r5, [ip, r5, lsr #2]
   4297c:	strb	r5, [r0]
   42980:	ldrb	r1, [r1]
   42984:	and	r1, r1, #3
   42988:	ldrb	r1, [ip, r1, lsl #4]
   4298c:	strb	r1, [r0, #1]
   42990:	movwne	r1, #15677	; 0x3d3d
   42994:	strhne	r1, [r0, #2]
   42998:	ldr	lr, [r2]
   4299c:	mov	r0, #0
   429a0:	sub	r0, lr, r0
   429a4:	str	r0, [r2]
   429a8:	pop	{r4, r5, fp, lr}
   429ac:	bx	lr
   429b0:	eor	r1, r1, #-2147483648	; 0x80000000
   429b4:	b	429bc <flatcc_json_printer_clear@@Base+0x578>
   429b8:	eor	r3, r3, #-2147483648	; 0x80000000
   429bc:	push	{r4, r5, lr}
   429c0:	lsl	r4, r1, #1
   429c4:	lsl	r5, r3, #1
   429c8:	teq	r4, r5
   429cc:	teqeq	r0, r2
   429d0:	orrsne	ip, r4, r0
   429d4:	orrsne	ip, r5, r2
   429d8:	mvnsne	ip, r4, asr #21
   429dc:	mvnsne	ip, r5, asr #21
   429e0:	beq	42bcc <flatcc_json_printer_clear@@Base+0x788>
   429e4:	lsr	r4, r4, #21
   429e8:	rsbs	r5, r4, r5, lsr #21
   429ec:	rsblt	r5, r5, #0
   429f0:	ble	42a10 <flatcc_json_printer_clear@@Base+0x5cc>
   429f4:	add	r4, r4, r5
   429f8:	eor	r2, r0, r2
   429fc:	eor	r3, r1, r3
   42a00:	eor	r0, r2, r0
   42a04:	eor	r1, r3, r1
   42a08:	eor	r2, r0, r2
   42a0c:	eor	r3, r1, r3
   42a10:	cmp	r5, #54	; 0x36
   42a14:	pophi	{r4, r5, pc}
   42a18:	tst	r1, #-2147483648	; 0x80000000
   42a1c:	lsl	r1, r1, #12
   42a20:	mov	ip, #1048576	; 0x100000
   42a24:	orr	r1, ip, r1, lsr #12
   42a28:	beq	42a34 <flatcc_json_printer_clear@@Base+0x5f0>
   42a2c:	rsbs	r0, r0, #0
   42a30:	rsc	r1, r1, #0
   42a34:	tst	r3, #-2147483648	; 0x80000000
   42a38:	lsl	r3, r3, #12
   42a3c:	orr	r3, ip, r3, lsr #12
   42a40:	beq	42a4c <flatcc_json_printer_clear@@Base+0x608>
   42a44:	rsbs	r2, r2, #0
   42a48:	rsc	r3, r3, #0
   42a4c:	teq	r4, r5
   42a50:	beq	42bb4 <flatcc_json_printer_clear@@Base+0x770>
   42a54:	sub	r4, r4, #1
   42a58:	rsbs	lr, r5, #32
   42a5c:	blt	42a78 <flatcc_json_printer_clear@@Base+0x634>
   42a60:	lsl	ip, r2, lr
   42a64:	adds	r0, r0, r2, lsr r5
   42a68:	adc	r1, r1, #0
   42a6c:	adds	r0, r0, r3, lsl lr
   42a70:	adcs	r1, r1, r3, asr r5
   42a74:	b	42a94 <flatcc_json_printer_clear@@Base+0x650>
   42a78:	sub	r5, r5, #32
   42a7c:	add	lr, lr, #32
   42a80:	cmp	r2, #1
   42a84:	lsl	ip, r3, lr
   42a88:	orrcs	ip, ip, #2
   42a8c:	adds	r0, r0, r3, asr r5
   42a90:	adcs	r1, r1, r3, asr #31
   42a94:	and	r5, r1, #-2147483648	; 0x80000000
   42a98:	bpl	42aa8 <flatcc_json_printer_clear@@Base+0x664>
   42a9c:	rsbs	ip, ip, #0
   42aa0:	rscs	r0, r0, #0
   42aa4:	rsc	r1, r1, #0
   42aa8:	cmp	r1, #1048576	; 0x100000
   42aac:	bcc	42aec <flatcc_json_printer_clear@@Base+0x6a8>
   42ab0:	cmp	r1, #2097152	; 0x200000
   42ab4:	bcc	42ad4 <flatcc_json_printer_clear@@Base+0x690>
   42ab8:	lsrs	r1, r1, #1
   42abc:	rrxs	r0, r0
   42ac0:	rrx	ip, ip
   42ac4:	add	r4, r4, #1
   42ac8:	lsl	r2, r4, #21
   42acc:	cmn	r2, #4194304	; 0x400000
   42ad0:	bcs	42c2c <flatcc_json_printer_clear@@Base+0x7e8>
   42ad4:	cmp	ip, #-2147483648	; 0x80000000
   42ad8:	lsrseq	ip, r0, #1
   42adc:	adcs	r0, r0, #0
   42ae0:	adc	r1, r1, r4, lsl #20
   42ae4:	orr	r1, r1, r5
   42ae8:	pop	{r4, r5, pc}
   42aec:	lsls	ip, ip, #1
   42af0:	adcs	r0, r0, r0
   42af4:	adc	r1, r1, r1
   42af8:	tst	r1, #1048576	; 0x100000
   42afc:	sub	r4, r4, #1
   42b00:	bne	42ad4 <flatcc_json_printer_clear@@Base+0x690>
   42b04:	teq	r1, #0
   42b08:	moveq	r1, r0
   42b0c:	moveq	r0, #0
   42b10:	clz	r3, r1
   42b14:	addeq	r3, r3, #32
   42b18:	sub	r3, r3, #11
   42b1c:	subs	r2, r3, #32
   42b20:	bge	42b44 <flatcc_json_printer_clear@@Base+0x700>
   42b24:	adds	r2, r2, #12
   42b28:	ble	42b40 <flatcc_json_printer_clear@@Base+0x6fc>
   42b2c:	add	ip, r2, #20
   42b30:	rsb	r2, r2, #12
   42b34:	lsl	r0, r1, ip
   42b38:	lsr	r1, r1, r2
   42b3c:	b	42b54 <flatcc_json_printer_clear@@Base+0x710>
   42b40:	add	r2, r2, #20
   42b44:	rsble	ip, r2, #32
   42b48:	lsl	r1, r1, r2
   42b4c:	orrle	r1, r1, r0, lsr ip
   42b50:	lslle	r0, r0, r2
   42b54:	subs	r4, r4, r3
   42b58:	addge	r1, r1, r4, lsl #20
   42b5c:	orrge	r1, r1, r5
   42b60:	popge	{r4, r5, pc}
   42b64:	mvn	r4, r4
   42b68:	subs	r4, r4, #31
   42b6c:	bge	42ba8 <flatcc_json_printer_clear@@Base+0x764>
   42b70:	adds	r4, r4, #12
   42b74:	bgt	42b90 <flatcc_json_printer_clear@@Base+0x74c>
   42b78:	add	r4, r4, #20
   42b7c:	rsb	r2, r4, #32
   42b80:	lsr	r0, r0, r4
   42b84:	orr	r0, r0, r1, lsl r2
   42b88:	orr	r1, r5, r1, lsr r4
   42b8c:	pop	{r4, r5, pc}
   42b90:	rsb	r4, r4, #12
   42b94:	rsb	r2, r4, #32
   42b98:	lsr	r0, r0, r2
   42b9c:	orr	r0, r0, r1, lsl r4
   42ba0:	mov	r1, r5
   42ba4:	pop	{r4, r5, pc}
   42ba8:	lsr	r0, r1, r4
   42bac:	mov	r1, r5
   42bb0:	pop	{r4, r5, pc}
   42bb4:	teq	r4, #0
   42bb8:	eor	r3, r3, #1048576	; 0x100000
   42bbc:	eoreq	r1, r1, #1048576	; 0x100000
   42bc0:	addeq	r4, r4, #1
   42bc4:	subne	r5, r5, #1
   42bc8:	b	42a54 <flatcc_json_printer_clear@@Base+0x610>
   42bcc:	mvns	ip, r4, asr #21
   42bd0:	mvnsne	ip, r5, asr #21
   42bd4:	beq	42c3c <flatcc_json_printer_clear@@Base+0x7f8>
   42bd8:	teq	r4, r5
   42bdc:	teqeq	r0, r2
   42be0:	beq	42bf4 <flatcc_json_printer_clear@@Base+0x7b0>
   42be4:	orrs	ip, r4, r0
   42be8:	moveq	r1, r3
   42bec:	moveq	r0, r2
   42bf0:	pop	{r4, r5, pc}
   42bf4:	teq	r1, r3
   42bf8:	movne	r1, #0
   42bfc:	movne	r0, #0
   42c00:	popne	{r4, r5, pc}
   42c04:	lsrs	ip, r4, #21
   42c08:	bne	42c1c <flatcc_json_printer_clear@@Base+0x7d8>
   42c0c:	lsls	r0, r0, #1
   42c10:	adcs	r1, r1, r1
   42c14:	orrcs	r1, r1, #-2147483648	; 0x80000000
   42c18:	pop	{r4, r5, pc}
   42c1c:	adds	r4, r4, #4194304	; 0x400000
   42c20:	addcc	r1, r1, #1048576	; 0x100000
   42c24:	popcc	{r4, r5, pc}
   42c28:	and	r5, r1, #-2147483648	; 0x80000000
   42c2c:	orr	r1, r5, #2130706432	; 0x7f000000
   42c30:	orr	r1, r1, #15728640	; 0xf00000
   42c34:	mov	r0, #0
   42c38:	pop	{r4, r5, pc}
   42c3c:	mvns	ip, r4, asr #21
   42c40:	movne	r1, r3
   42c44:	movne	r0, r2
   42c48:	mvnseq	ip, r5, asr #21
   42c4c:	movne	r3, r1
   42c50:	movne	r2, r0
   42c54:	orrs	r4, r0, r1, lsl #12
   42c58:	orrseq	r5, r2, r3, lsl #12
   42c5c:	teqeq	r1, r3
   42c60:	orrne	r1, r1, #524288	; 0x80000
   42c64:	pop	{r4, r5, pc}
   42c68:	teq	r0, #0
   42c6c:	moveq	r1, #0
   42c70:	bxeq	lr
   42c74:	push	{r4, r5, lr}
   42c78:	mov	r4, #1024	; 0x400
   42c7c:	add	r4, r4, #50	; 0x32
   42c80:	mov	r5, #0
   42c84:	mov	r1, #0
   42c88:	b	42b04 <flatcc_json_printer_clear@@Base+0x6c0>
   42c8c:	teq	r0, #0
   42c90:	moveq	r1, #0
   42c94:	bxeq	lr
   42c98:	push	{r4, r5, lr}
   42c9c:	mov	r4, #1024	; 0x400
   42ca0:	add	r4, r4, #50	; 0x32
   42ca4:	ands	r5, r0, #-2147483648	; 0x80000000
   42ca8:	rsbmi	r0, r0, #0
   42cac:	mov	r1, #0
   42cb0:	b	42b04 <flatcc_json_printer_clear@@Base+0x6c0>
   42cb4:	lsls	r2, r0, #1
   42cb8:	asr	r1, r2, #3
   42cbc:	rrx	r1, r1
   42cc0:	lsl	r0, r2, #28
   42cc4:	andsne	r3, r2, #-16777216	; 0xff000000
   42cc8:	teqne	r3, #-16777216	; 0xff000000
   42ccc:	eorne	r1, r1, #939524096	; 0x38000000
   42cd0:	bxne	lr
   42cd4:	bics	r2, r2, #-16777216	; 0xff000000
   42cd8:	bxeq	lr
   42cdc:	teq	r3, #-16777216	; 0xff000000
   42ce0:	orreq	r1, r1, #524288	; 0x80000
   42ce4:	bxeq	lr
   42ce8:	push	{r4, r5, lr}
   42cec:	mov	r4, #896	; 0x380
   42cf0:	and	r5, r1, #-2147483648	; 0x80000000
   42cf4:	bic	r1, r1, #-2147483648	; 0x80000000
   42cf8:	b	42b04 <flatcc_json_printer_clear@@Base+0x6c0>
   42cfc:	orrs	r2, r0, r1
   42d00:	bxeq	lr
   42d04:	push	{r4, r5, lr}
   42d08:	mov	r5, #0
   42d0c:	b	42d2c <flatcc_json_printer_clear@@Base+0x8e8>
   42d10:	orrs	r2, r0, r1
   42d14:	bxeq	lr
   42d18:	push	{r4, r5, lr}
   42d1c:	ands	r5, r1, #-2147483648	; 0x80000000
   42d20:	bpl	42d2c <flatcc_json_printer_clear@@Base+0x8e8>
   42d24:	rsbs	r0, r0, #0
   42d28:	rsc	r1, r1, #0
   42d2c:	mov	r4, #1024	; 0x400
   42d30:	add	r4, r4, #50	; 0x32
   42d34:	lsrs	ip, r1, #22
   42d38:	beq	42aa8 <flatcc_json_printer_clear@@Base+0x664>
   42d3c:	mov	r2, #3
   42d40:	lsrs	ip, ip, #3
   42d44:	addne	r2, r2, #3
   42d48:	lsrs	ip, ip, #3
   42d4c:	addne	r2, r2, #3
   42d50:	add	r2, r2, ip, lsr #3
   42d54:	rsb	r3, r2, #32
   42d58:	lsl	ip, r0, r3
   42d5c:	lsr	r0, r0, r2
   42d60:	orr	r0, r0, r1, lsl r3
   42d64:	lsr	r1, r1, r2
   42d68:	add	r4, r4, r2
   42d6c:	b	42aa8 <flatcc_json_printer_clear@@Base+0x664>
   42d70:	eor	r0, r0, #-2147483648	; 0x80000000
   42d74:	b	42d7c <flatcc_json_printer_clear@@Base+0x938>
   42d78:	eor	r1, r1, #-2147483648	; 0x80000000
   42d7c:	lsls	r2, r0, #1
   42d80:	lslsne	r3, r1, #1
   42d84:	teqne	r2, r3
   42d88:	mvnsne	ip, r2, asr #24
   42d8c:	mvnsne	ip, r3, asr #24
   42d90:	beq	42e88 <flatcc_json_printer_clear@@Base+0xa44>
   42d94:	lsr	r2, r2, #24
   42d98:	rsbs	r3, r2, r3, lsr #24
   42d9c:	addgt	r2, r2, r3
   42da0:	eorgt	r1, r0, r1
   42da4:	eorgt	r0, r1, r0
   42da8:	eorgt	r1, r0, r1
   42dac:	rsblt	r3, r3, #0
   42db0:	cmp	r3, #25
   42db4:	bxhi	lr
   42db8:	tst	r0, #-2147483648	; 0x80000000
   42dbc:	orr	r0, r0, #8388608	; 0x800000
   42dc0:	bic	r0, r0, #-16777216	; 0xff000000
   42dc4:	rsbne	r0, r0, #0
   42dc8:	tst	r1, #-2147483648	; 0x80000000
   42dcc:	orr	r1, r1, #8388608	; 0x800000
   42dd0:	bic	r1, r1, #-16777216	; 0xff000000
   42dd4:	rsbne	r1, r1, #0
   42dd8:	teq	r2, r3
   42ddc:	beq	42e70 <flatcc_json_printer_clear@@Base+0xa2c>
   42de0:	sub	r2, r2, #1
   42de4:	adds	r0, r0, r1, asr r3
   42de8:	rsb	r3, r3, #32
   42dec:	lsl	r1, r1, r3
   42df0:	and	r3, r0, #-2147483648	; 0x80000000
   42df4:	bpl	42e00 <flatcc_json_printer_clear@@Base+0x9bc>
   42df8:	rsbs	r1, r1, #0
   42dfc:	rsc	r0, r0, #0
   42e00:	cmp	r0, #8388608	; 0x800000
   42e04:	bcc	42e38 <flatcc_json_printer_clear@@Base+0x9f4>
   42e08:	cmp	r0, #16777216	; 0x1000000
   42e0c:	bcc	42e24 <flatcc_json_printer_clear@@Base+0x9e0>
   42e10:	lsrs	r0, r0, #1
   42e14:	rrx	r1, r1
   42e18:	add	r2, r2, #1
   42e1c:	cmp	r2, #254	; 0xfe
   42e20:	bcs	42edc <flatcc_json_printer_clear@@Base+0xa98>
   42e24:	cmp	r1, #-2147483648	; 0x80000000
   42e28:	adc	r0, r0, r2, lsl #23
   42e2c:	biceq	r0, r0, #1
   42e30:	orr	r0, r0, r3
   42e34:	bx	lr
   42e38:	lsls	r1, r1, #1
   42e3c:	adc	r0, r0, r0
   42e40:	tst	r0, #8388608	; 0x800000
   42e44:	sub	r2, r2, #1
   42e48:	bne	42e24 <flatcc_json_printer_clear@@Base+0x9e0>
   42e4c:	clz	ip, r0
   42e50:	sub	ip, ip, #8
   42e54:	subs	r2, r2, ip
   42e58:	lsl	r0, r0, ip
   42e5c:	addge	r0, r0, r2, lsl #23
   42e60:	rsblt	r2, r2, #0
   42e64:	orrge	r0, r0, r3
   42e68:	orrlt	r0, r3, r0, lsr r2
   42e6c:	bx	lr
   42e70:	teq	r2, #0
   42e74:	eor	r1, r1, #8388608	; 0x800000
   42e78:	eoreq	r0, r0, #8388608	; 0x800000
   42e7c:	addeq	r2, r2, #1
   42e80:	subne	r3, r3, #1
   42e84:	b	42de0 <flatcc_json_printer_clear@@Base+0x99c>
   42e88:	lsl	r3, r1, #1
   42e8c:	mvns	ip, r2, asr #24
   42e90:	mvnsne	ip, r3, asr #24
   42e94:	beq	42ee8 <flatcc_json_printer_clear@@Base+0xaa4>
   42e98:	teq	r2, r3
   42e9c:	beq	42eac <flatcc_json_printer_clear@@Base+0xa68>
   42ea0:	teq	r2, #0
   42ea4:	moveq	r0, r1
   42ea8:	bx	lr
   42eac:	teq	r0, r1
   42eb0:	movne	r0, #0
   42eb4:	bxne	lr
   42eb8:	tst	r2, #-16777216	; 0xff000000
   42ebc:	bne	42ecc <flatcc_json_printer_clear@@Base+0xa88>
   42ec0:	lsls	r0, r0, #1
   42ec4:	orrcs	r0, r0, #-2147483648	; 0x80000000
   42ec8:	bx	lr
   42ecc:	adds	r2, r2, #33554432	; 0x2000000
   42ed0:	addcc	r0, r0, #8388608	; 0x800000
   42ed4:	bxcc	lr
   42ed8:	and	r3, r0, #-2147483648	; 0x80000000
   42edc:	orr	r0, r3, #2130706432	; 0x7f000000
   42ee0:	orr	r0, r0, #8388608	; 0x800000
   42ee4:	bx	lr
   42ee8:	mvns	r2, r2, asr #24
   42eec:	movne	r0, r1
   42ef0:	mvnseq	r3, r3, asr #24
   42ef4:	movne	r1, r0
   42ef8:	lsls	r2, r0, #9
   42efc:	lslseq	r3, r1, #9
   42f00:	teqeq	r0, r1
   42f04:	orrne	r0, r0, #4194304	; 0x400000
   42f08:	bx	lr
   42f0c:	mov	r3, #0
   42f10:	b	42f1c <flatcc_json_printer_clear@@Base+0xad8>
   42f14:	ands	r3, r0, #-2147483648	; 0x80000000
   42f18:	rsbmi	r0, r0, #0
   42f1c:	movs	ip, r0
   42f20:	bxeq	lr
   42f24:	orr	r3, r3, #1258291200	; 0x4b000000
   42f28:	mov	r1, r0
   42f2c:	mov	r0, #0
   42f30:	b	42f74 <flatcc_json_printer_clear@@Base+0xb30>
   42f34:	orrs	r2, r0, r1
   42f38:	bxeq	lr
   42f3c:	mov	r3, #0
   42f40:	b	42f5c <flatcc_json_printer_clear@@Base+0xb18>
   42f44:	orrs	r2, r0, r1
   42f48:	bxeq	lr
   42f4c:	ands	r3, r1, #-2147483648	; 0x80000000
   42f50:	bpl	42f5c <flatcc_json_printer_clear@@Base+0xb18>
   42f54:	rsbs	r0, r0, #0
   42f58:	rsc	r1, r1, #0
   42f5c:	movs	ip, r1
   42f60:	moveq	ip, r0
   42f64:	moveq	r1, r0
   42f68:	moveq	r0, #0
   42f6c:	orr	r3, r3, #1526726656	; 0x5b000000
   42f70:	subeq	r3, r3, #268435456	; 0x10000000
   42f74:	sub	r3, r3, #8388608	; 0x800000
   42f78:	clz	r2, ip
   42f7c:	subs	r2, r2, #8
   42f80:	sub	r3, r3, r2, lsl #23
   42f84:	blt	42fa4 <flatcc_json_printer_clear@@Base+0xb60>
   42f88:	add	r3, r3, r1, lsl r2
   42f8c:	lsl	ip, r0, r2
   42f90:	rsb	r2, r2, #32
   42f94:	cmp	ip, #-2147483648	; 0x80000000
   42f98:	adc	r0, r3, r0, lsr r2
   42f9c:	biceq	r0, r0, #1
   42fa0:	bx	lr
   42fa4:	add	r2, r2, #32
   42fa8:	lsl	ip, r1, r2
   42fac:	rsb	r2, r2, #32
   42fb0:	orrs	r0, r0, ip, lsl #1
   42fb4:	adc	r0, r3, r1, lsr r2
   42fb8:	biceq	r0, r0, ip, lsr #31
   42fbc:	bx	lr
   42fc0:	cmp	r3, #0
   42fc4:	cmpeq	r2, #0
   42fc8:	bne	42fe0 <flatcc_json_printer_clear@@Base+0xb9c>
   42fcc:	cmp	r1, #0
   42fd0:	cmpeq	r0, #0
   42fd4:	mvnne	r1, #0
   42fd8:	mvnne	r0, #0
   42fdc:	b	42ffc <flatcc_json_printer_clear@@Base+0xbb8>
   42fe0:	sub	sp, sp, #8
   42fe4:	push	{sp, lr}
   42fe8:	bl	4300c <flatcc_json_printer_clear@@Base+0xbc8>
   42fec:	ldr	lr, [sp, #4]
   42ff0:	add	sp, sp, #8
   42ff4:	pop	{r2, r3}
   42ff8:	bx	lr
   42ffc:	push	{r1, lr}
   43000:	mov	r0, #8
   43004:	bl	14e2c <raise@plt>
   43008:	pop	{r1, pc}
   4300c:	cmp	r1, r3
   43010:	cmpeq	r0, r2
   43014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43018:	mov	r4, r0
   4301c:	movcc	r0, #0
   43020:	mov	r5, r1
   43024:	ldr	lr, [sp, #36]	; 0x24
   43028:	movcc	r1, r0
   4302c:	bcc	43128 <flatcc_json_printer_clear@@Base+0xce4>
   43030:	cmp	r3, #0
   43034:	clzeq	ip, r2
   43038:	clzne	ip, r3
   4303c:	addeq	ip, ip, #32
   43040:	cmp	r5, #0
   43044:	clzeq	r1, r4
   43048:	addeq	r1, r1, #32
   4304c:	clzne	r1, r5
   43050:	sub	ip, ip, r1
   43054:	sub	sl, ip, #32
   43058:	lsl	r9, r3, ip
   4305c:	rsb	fp, ip, #32
   43060:	orr	r9, r9, r2, lsl sl
   43064:	orr	r9, r9, r2, lsr fp
   43068:	lsl	r8, r2, ip
   4306c:	cmp	r5, r9
   43070:	cmpeq	r4, r8
   43074:	movcc	r0, #0
   43078:	movcc	r1, r0
   4307c:	bcc	43098 <flatcc_json_printer_clear@@Base+0xc54>
   43080:	mov	r0, #1
   43084:	subs	r4, r4, r8
   43088:	lsl	r1, r0, sl
   4308c:	orr	r1, r1, r0, lsr fp
   43090:	lsl	r0, r0, ip
   43094:	sbc	r5, r5, r9
   43098:	cmp	ip, #0
   4309c:	beq	43128 <flatcc_json_printer_clear@@Base+0xce4>
   430a0:	lsr	r6, r8, #1
   430a4:	orr	r6, r6, r9, lsl #31
   430a8:	lsr	r7, r9, #1
   430ac:	mov	r2, ip
   430b0:	b	430d4 <flatcc_json_printer_clear@@Base+0xc90>
   430b4:	subs	r3, r4, r6
   430b8:	sbc	r8, r5, r7
   430bc:	adds	r3, r3, r3
   430c0:	adc	r8, r8, r8
   430c4:	adds	r4, r3, #1
   430c8:	adc	r5, r8, #0
   430cc:	subs	r2, r2, #1
   430d0:	beq	430f0 <flatcc_json_printer_clear@@Base+0xcac>
   430d4:	cmp	r5, r7
   430d8:	cmpeq	r4, r6
   430dc:	bcs	430b4 <flatcc_json_printer_clear@@Base+0xc70>
   430e0:	adds	r4, r4, r4
   430e4:	adc	r5, r5, r5
   430e8:	subs	r2, r2, #1
   430ec:	bne	430d4 <flatcc_json_printer_clear@@Base+0xc90>
   430f0:	lsr	r3, r4, ip
   430f4:	orr	r3, r3, r5, lsl fp
   430f8:	lsr	r2, r5, ip
   430fc:	orr	r3, r3, r5, lsr sl
   43100:	adds	r0, r0, r4
   43104:	mov	r4, r3
   43108:	lsl	r3, r2, ip
   4310c:	orr	r3, r3, r4, lsl sl
   43110:	lsl	ip, r4, ip
   43114:	orr	r3, r3, r4, lsr fp
   43118:	adc	r1, r1, r5
   4311c:	subs	r0, r0, ip
   43120:	mov	r5, r2
   43124:	sbc	r1, r1, r3
   43128:	cmp	lr, #0
   4312c:	strdne	r4, [lr]
   43130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043134 <__libc_csu_init@@Base>:
   43134:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   43138:	mov	r7, r0
   4313c:	ldr	r6, [pc, #72]	; 4318c <__libc_csu_init@@Base+0x58>
   43140:	ldr	r5, [pc, #72]	; 43190 <__libc_csu_init@@Base+0x5c>
   43144:	add	r6, pc, r6
   43148:	add	r5, pc, r5
   4314c:	sub	r6, r6, r5
   43150:	mov	r8, r1
   43154:	mov	r9, r2
   43158:	bl	14e0c <raise@plt-0x20>
   4315c:	asrs	r6, r6, #2
   43160:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   43164:	mov	r4, #0
   43168:	add	r4, r4, #1
   4316c:	ldr	r3, [r5], #4
   43170:	mov	r2, r9
   43174:	mov	r1, r8
   43178:	mov	r0, r7
   4317c:	blx	r3
   43180:	cmp	r6, r4
   43184:	bne	43168 <__libc_csu_init@@Base+0x34>
   43188:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4318c:	andeq	r7, r1, r0, asr #27
   43190:			; <UNDEFINED> instruction: 0x00017db8

00043194 <__libc_csu_fini@@Base>:
   43194:	bx	lr

Disassembly of section .fini:

00043198 <.fini>:
   43198:	push	{r3, lr}
   4319c:	pop	{r3, pc}
