
../repos/charybdis/modules/.libs/m_map.so:     file format elf32-littlearm


Disassembly of section .init:

00000534 <_init>:
 534:	push	{r3, lr}
 538:	bl	5b4 <call_weak_fn>
 53c:	pop	{r3, pc}

Disassembly of section .plt:

00000540 <.plt>:
 540:	push	{lr}		; (str lr, [sp, #-4]!)
 544:	ldr	lr, [pc, #4]	; 550 <.plt+0x10>
 548:	add	lr, pc, lr
 54c:	ldr	pc, [lr, #8]!
 550:	.word	0x00010ab0

00000554 <__cxa_finalize@plt>:
 554:	add	ip, pc, #0, 12
 558:	add	ip, ip, #16, 20	; 0x10000
 55c:	ldr	pc, [ip, #2736]!	; 0xab0

00000560 <__gmon_start__@plt>:
 560:	add	ip, pc, #0, 12
 564:	add	ip, ip, #16, 20	; 0x10000
 568:	ldr	pc, [ip, #2728]!	; 0xaa8

0000056c <sendto_one_numeric@plt>:
 56c:	add	ip, pc, #0, 12
 570:	add	ip, ip, #16, 20	; 0x10000
 574:	ldr	pc, [ip, #2720]!	; 0xaa0

00000578 <strlen@plt>:
 578:	add	ip, pc, #0, 12
 57c:	add	ip, ip, #16, 20	; 0x10000
 580:	ldr	pc, [ip, #2712]!	; 0xa98

00000584 <snprintf@plt>:
 584:	add	ip, pc, #0, 12
 588:	add	ip, ip, #16, 20	; 0x10000
 58c:	ldr	pc, [ip, #2704]!	; 0xa90

00000590 <scache_send_missing@plt>:
 590:	add	ip, pc, #0, 12
 594:	add	ip, ip, #16, 20	; 0x10000
 598:	ldr	pc, [ip, #2696]!	; 0xa88

0000059c <rb_strlcpy@plt>:
 59c:	add	ip, pc, #0, 12
 5a0:	add	ip, ip, #16, 20	; 0x10000
 5a4:	ldr	pc, [ip, #2688]!	; 0xa80

000005a8 <rb_strlcat@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #16, 20	; 0x10000
 5b0:	ldr	pc, [ip, #2680]!	; 0xa78

Disassembly of section .text:

000005b4 <call_weak_fn>:
 5b4:	ldr	r3, [pc, #20]	; 5d0 <call_weak_fn+0x1c>
 5b8:	ldr	r2, [pc, #20]	; 5d4 <call_weak_fn+0x20>
 5bc:	add	r3, pc, r3
 5c0:	ldr	r2, [r3, r2]
 5c4:	cmp	r2, #0
 5c8:	bxeq	lr
 5cc:	b	560 <__gmon_start__@plt>
 5d0:	.word	0x00010a3c
 5d4:	.word	0x00000040

000005d8 <deregister_tm_clones>:
 5d8:	ldr	r0, [pc, #44]	; 60c <deregister_tm_clones+0x34>
 5dc:	ldr	r3, [pc, #44]	; 610 <deregister_tm_clones+0x38>
 5e0:	add	r0, pc, r0
 5e4:	add	r3, pc, r3
 5e8:	cmp	r3, r0
 5ec:	ldr	r3, [pc, #32]	; 614 <deregister_tm_clones+0x3c>
 5f0:	add	r3, pc, r3
 5f4:	bxeq	lr
 5f8:	ldr	r2, [pc, #24]	; 618 <deregister_tm_clones+0x40>
 5fc:	ldr	r3, [r3, r2]
 600:	cmp	r3, #0
 604:	bxeq	lr
 608:	bx	r3
 60c:	.word	0x00010ae0
 610:	.word	0x00010adc
 614:	.word	0x00010a08
 618:	.word	0x00000034

0000061c <register_tm_clones>:
 61c:	ldr	r0, [pc, #56]	; 65c <register_tm_clones+0x40>
 620:	ldr	r3, [pc, #56]	; 660 <register_tm_clones+0x44>
 624:	add	r0, pc, r0
 628:	add	r3, pc, r3
 62c:	sub	r1, r3, r0
 630:	ldr	r3, [pc, #44]	; 664 <register_tm_clones+0x48>
 634:	asr	r1, r1, #2
 638:	add	r3, pc, r3
 63c:	add	r1, r1, r1, lsr #31
 640:	asrs	r1, r1, #1
 644:	bxeq	lr
 648:	ldr	r2, [pc, #24]	; 668 <register_tm_clones+0x4c>
 64c:	ldr	r3, [r3, r2]
 650:	cmp	r3, #0
 654:	bxeq	lr
 658:	bx	r3
 65c:	.word	0x00010a9c
 660:	.word	0x00010a98
 664:	.word	0x000109c0
 668:	.word	0x00000044

0000066c <__do_global_dtors_aux>:
 66c:	ldr	r3, [pc, #76]	; 6c0 <__do_global_dtors_aux+0x54>
 670:	ldr	r2, [pc, #76]	; 6c4 <__do_global_dtors_aux+0x58>
 674:	add	r3, pc, r3
 678:	add	r2, pc, r2
 67c:	ldrb	r3, [r3]
 680:	cmp	r3, #0
 684:	bxne	lr
 688:	ldr	r3, [pc, #56]	; 6c8 <__do_global_dtors_aux+0x5c>
 68c:	push	{r4, lr}
 690:	ldr	r3, [r2, r3]
 694:	cmp	r3, #0
 698:	beq	6a8 <__do_global_dtors_aux+0x3c>
 69c:	ldr	r3, [pc, #40]	; 6cc <__do_global_dtors_aux+0x60>
 6a0:	ldr	r0, [pc, r3]
 6a4:	bl	554 <__cxa_finalize@plt>
 6a8:	bl	5d8 <deregister_tm_clones>
 6ac:	ldr	r3, [pc, #28]	; 6d0 <__do_global_dtors_aux+0x64>
 6b0:	mov	r2, #1
 6b4:	add	r3, pc, r3
 6b8:	strb	r2, [r3]
 6bc:	pop	{r4, pc}
 6c0:	.word	0x00010a4c
 6c4:	.word	0x00010980
 6c8:	.word	0x00000030
 6cc:	.word	0x000109a8
 6d0:	.word	0x00010a0c

000006d4 <frame_dummy>:
 6d4:	b	61c <register_tm_clones>

000006d8 <dump_map>:
 6d8:	mov	r3, #0
 6dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
 6e0:	mov	r5, r2
 6e4:	strd	r6, [sp, #8]
 6e8:	mov	r6, r1
 6ec:	mov	r7, r0
 6f0:	add	r1, r1, #88	; 0x58
 6f4:	mov	r0, r2
 6f8:	strd	r8, [sp, #16]
 6fc:	strd	sl, [sp, #24]
 700:	str	lr, [sp, #32]
 704:	sub	sp, sp, #12
 708:	strb	r3, [r2]
 70c:	mov	r2, #512	; 0x200
 710:	bl	5a8 <rb_strlcat@plt>
 714:	ldrb	r3, [r6, #396]	; 0x18c
 718:	ldr	r8, [pc, #440]	; 8d8 <dump_map+0x200>
 71c:	cmp	r3, #0
 720:	add	r8, pc, r8
 724:	bne	89c <dump_map+0x1c4>
 728:	ldr	r4, [pc, #428]	; 8dc <dump_map+0x204>
 72c:	add	r4, pc, r4
 730:	mov	r0, r4
 734:	bl	578 <strlen@plt>
 738:	mov	r3, #32
 73c:	cmp	r0, #48	; 0x30
 740:	strb	r3, [r4, r0]
 744:	bhi	764 <dump_map+0x8c>
 748:	add	r0, r0, #1
 74c:	add	r2, r4, #50	; 0x32
 750:	add	r0, r4, r0
 754:	mov	r3, #45	; 0x2d
 758:	strb	r3, [r0], #1
 75c:	cmp	r0, r2
 760:	bne	758 <dump_map+0x80>
 764:	ldr	r3, [pc, #372]	; 8e0 <dump_map+0x208>
 768:	mov	r0, #1000	; 0x3e8
 76c:	movw	lr, #26215	; 0x6667
 770:	movt	lr, #26214	; 0x6666
 774:	movw	r1, #462	; 0x1ce
 778:	ldr	r2, [r6, #28]
 77c:	ldr	r3, [r8, r3]
 780:	ldr	r2, [r2, #56]	; 0x38
 784:	ldr	r8, [pc, #344]	; 8e4 <dump_map+0x20c>
 788:	ldr	r4, [r3, #4]
 78c:	mov	r3, r2
 790:	add	r8, pc, r8
 794:	add	ip, r4, r4, lsr #31
 798:	asr	ip, ip, #1
 79c:	mla	ip, r0, r2, ip
 7a0:	ldr	r2, [pc, #320]	; 8e8 <dump_map+0x210>
 7a4:	add	r0, r8, #50	; 0x32
 7a8:	udiv	ip, ip, r4
 7ac:	add	r2, pc, r2
 7b0:	smull	lr, r4, lr, ip
 7b4:	asr	lr, ip, #31
 7b8:	rsb	lr, lr, r4, asr #2
 7bc:	add	r4, lr, lr, lsl #2
 7c0:	str	lr, [sp]
 7c4:	sub	ip, ip, r4, lsl #1
 7c8:	str	ip, [sp, #4]
 7cc:	bl	584 <snprintf@plt>
 7d0:	ldr	r2, [pc, #276]	; 8ec <dump_map+0x214>
 7d4:	mov	r3, r8
 7d8:	mov	r1, #15
 7dc:	mov	r0, r7
 7e0:	add	r2, pc, r2
 7e4:	bl	56c <sendto_one_numeric@plt>
 7e8:	ldr	r3, [r6, #28]
 7ec:	ldr	r4, [r3, #36]	; 0x24
 7f0:	cmp	r4, #0
 7f4:	beq	84c <dump_map+0x174>
 7f8:	ldr	r9, [r3, #44]	; 0x2c
 7fc:	cmp	r9, #0
 800:	bne	868 <dump_map+0x190>
 804:	add	fp, r5, #4
 808:	mov	r6, #1
 80c:	mov	sl, #32
 810:	movw	r8, #8237	; 0x202d
 814:	cmp	r6, r9
 818:	mov	r2, fp
 81c:	ldr	r1, [r4]
 820:	movge	r3, #96	; 0x60
 824:	movlt	r3, #124	; 0x7c
 828:	strb	sl, [r5]
 82c:	mov	r0, r7
 830:	add	r6, r6, #1
 834:	strb	r3, [r5, #1]
 838:	strh	r8, [r5, #2]
 83c:	bl	6d8 <dump_map>
 840:	ldr	r4, [r4, #8]
 844:	cmp	r4, #0
 848:	bne	814 <dump_map+0x13c>
 84c:	add	sp, sp, #12
 850:	ldrd	r4, [sp]
 854:	ldrd	r6, [sp, #8]
 858:	ldrd	r8, [sp, #16]
 85c:	ldrd	sl, [sp, #24]
 860:	add	sp, sp, #32
 864:	pop	{pc}		; (ldr pc, [sp], #4)
 868:	add	r8, r8, #3
 86c:	cmp	r5, r8
 870:	bls	804 <dump_map+0x12c>
 874:	ldrb	r2, [r5, #-3]
 878:	mov	r3, #32
 87c:	strb	r3, [r5, #-2]
 880:	cmp	r2, #96	; 0x60
 884:	strbeq	r3, [r5, #-3]
 888:	ldr	r3, [r6, #28]
 88c:	ldr	r4, [r3, #36]	; 0x24
 890:	cmp	r4, #0
 894:	bne	804 <dump_map+0x12c>
 898:	b	84c <dump_map+0x174>
 89c:	ldr	r1, [pc, #76]	; 8f0 <dump_map+0x218>
 8a0:	mov	r2, #512	; 0x200
 8a4:	mov	r0, r5
 8a8:	add	r1, pc, r1
 8ac:	bl	5a8 <rb_strlcat@plt>
 8b0:	add	r1, r6, #396	; 0x18c
 8b4:	mov	r2, #512	; 0x200
 8b8:	mov	r0, r5
 8bc:	bl	5a8 <rb_strlcat@plt>
 8c0:	ldr	r1, [pc, #44]	; 8f4 <dump_map+0x21c>
 8c4:	mov	r2, #512	; 0x200
 8c8:	mov	r0, r5
 8cc:	add	r1, pc, r1
 8d0:	bl	5a8 <rb_strlcat@plt>
 8d4:	b	728 <dump_map+0x50>
 8d8:	.word	0x000108d8
 8dc:	.word	0x00010998
 8e0:	.word	0x00000038
 8e4:	.word	0x00010934
 8e8:	.word	0x00000538
 8ec:	.word	0x00000520
 8f0:	.word	0x00000434
 8f4:	.word	0x00000414

000008f8 <mo_map>:
 8f8:	ldr	r3, [pc, #76]	; 94c <mo_map+0x54>
 8fc:	mov	r0, r1
 900:	str	r4, [sp, #-8]!
 904:	mov	r4, r1
 908:	ldr	r2, [pc, #64]	; 950 <mo_map+0x58>
 90c:	str	lr, [sp, #4]
 910:	ldr	r1, [pc, #60]	; 954 <mo_map+0x5c>
 914:	add	r3, pc, r3
 918:	add	r2, pc, r2
 91c:	ldr	r1, [r3, r1]
 920:	bl	6d8 <dump_map>
 924:	mov	r0, r4
 928:	bl	590 <scache_send_missing@plt>
 92c:	ldr	r2, [pc, #36]	; 958 <mo_map+0x60>
 930:	mov	r0, r4
 934:	mov	r1, #17
 938:	ldr	r4, [sp]
 93c:	ldr	lr, [sp, #4]
 940:	add	sp, sp, #8
 944:	add	r2, pc, r2
 948:	b	56c <sendto_one_numeric@plt>
 94c:	.word	0x000106e4
 950:	.word	0x000107ac
 954:	.word	0x00000048
 958:	.word	0x000003c0

0000095c <flattened_map>:
 95c:	strd	r4, [sp, #-36]!	; 0xffffffdc
 960:	mov	r2, #512	; 0x200
 964:	strd	r6, [sp, #8]
 968:	ldr	r7, [pc, #580]	; bb4 <flattened_map+0x258>
 96c:	strd	r8, [sp, #16]
 970:	mov	r8, r0
 974:	ldr	r3, [pc, #572]	; bb8 <flattened_map+0x25c>
 978:	strd	sl, [sp, #24]
 97c:	str	lr, [sp, #32]
 980:	add	r7, pc, r7
 984:	vpush	{d8}
 988:	sub	sp, sp, #540	; 0x21c
 98c:	add	r4, sp, #24
 990:	ldr	r5, [r7, r3]
 994:	mov	r0, r4
 998:	add	r1, r5, #88	; 0x58
 99c:	bl	59c <rb_strlcpy@plt>
 9a0:	mov	r0, r4
 9a4:	bl	578 <strlen@plt>
 9a8:	add	r3, sp, #536	; 0x218
 9ac:	mov	r2, #32
 9b0:	add	r3, r3, r0
 9b4:	cmp	r0, #48	; 0x30
 9b8:	strb	r2, [r3, #-512]	; 0xfffffe00
 9bc:	bhi	9dc <flattened_map+0x80>
 9c0:	add	r3, r0, #1
 9c4:	add	r1, r4, #50	; 0x32
 9c8:	add	r3, r4, r3
 9cc:	mov	r2, #45	; 0x2d
 9d0:	strb	r2, [r3], #1
 9d4:	cmp	r1, r3
 9d8:	bne	9d0 <flattened_map+0x74>
 9dc:	ldr	r3, [r5, #28]
 9e0:	movw	r1, #462	; 0x1ce
 9e4:	add	r0, r4, #50	; 0x32
 9e8:	ldr	r2, [pc, #460]	; bbc <flattened_map+0x260>
 9ec:	vldr	s16, [pc, #444]	; bb0 <flattened_map+0x254>
 9f0:	ldr	r3, [r3, #56]	; 0x38
 9f4:	ldr	r9, [r7, r2]
 9f8:	ldr	r2, [pc, #448]	; bc0 <flattened_map+0x264>
 9fc:	vmov	s15, r3
 a00:	add	r2, pc, r2
 a04:	vcvt.f32.u32	s15, s15
 a08:	vmul.f32	s13, s15, s16
 a0c:	vldr	s15, [r9, #4]
 a10:	vcvt.f32.s32	s15, s15
 a14:	vdiv.f32	s14, s13, s15
 a18:	vcvt.f64.f32	d7, s14
 a1c:	vstr	d7, [sp]
 a20:	bl	584 <snprintf@plt>
 a24:	ldr	r2, [pc, #408]	; bc4 <flattened_map+0x268>
 a28:	mov	r3, r4
 a2c:	mov	r1, #15
 a30:	mov	r0, r8
 a34:	add	r2, pc, r2
 a38:	bl	56c <sendto_one_numeric@plt>
 a3c:	ldr	r3, [pc, #388]	; bc8 <flattened_map+0x26c>
 a40:	ldr	sl, [r7, r3]
 a44:	ldr	r5, [sl]
 a48:	cmp	r5, #0
 a4c:	beq	b90 <flattened_map+0x234>
 a50:	ldr	r3, [pc, #372]	; bcc <flattened_map+0x270>
 a54:	mov	r6, #0
 a58:	add	r3, pc, r3
 a5c:	str	r3, [sp, #16]
 a60:	ldr	r3, [pc, #360]	; bd0 <flattened_map+0x274>
 a64:	add	r3, pc, r3
 a68:	str	r3, [sp, #20]
 a6c:	b	b08 <flattened_map+0x1ac>
 a70:	ldr	r1, [pc, #348]	; bd4 <flattened_map+0x278>
 a74:	mov	r0, r4
 a78:	add	r1, pc, r1
 a7c:	bl	59c <rb_strlcpy@plt>
 a80:	mov	r2, #512	; 0x200
 a84:	add	r1, fp, #88	; 0x58
 a88:	mov	r0, r4
 a8c:	bl	5a8 <rb_strlcat@plt>
 a90:	mov	r0, r4
 a94:	bl	578 <strlen@plt>
 a98:	add	r3, sp, #536	; 0x218
 a9c:	mov	r1, #32
 aa0:	add	r2, r3, r0
 aa4:	cmp	r0, #48	; 0x30
 aa8:	strb	r1, [r2, #-512]	; 0xfffffe00
 aac:	bls	b70 <flattened_map+0x214>
 ab0:	ldr	r3, [fp, #28]
 ab4:	movw	r1, #462	; 0x1ce
 ab8:	add	r0, r4, #50	; 0x32
 abc:	vldr	s15, [r9, #4]
 ac0:	ldr	r2, [sp, #16]
 ac4:	ldr	r3, [r3, #56]	; 0x38
 ac8:	vcvt.f32.s32	s15, s15
 acc:	vmov	s14, r3
 ad0:	vcvt.f32.u32	s14, s14
 ad4:	vmul.f32	s13, s14, s16
 ad8:	vdiv.f32	s14, s13, s15
 adc:	vcvt.f64.f32	d7, s14
 ae0:	vstr	d7, [sp]
 ae4:	bl	584 <snprintf@plt>
 ae8:	mov	r3, r4
 aec:	mov	r1, #15
 af0:	ldr	r2, [sp, #20]
 af4:	mov	r0, r8
 af8:	bl	56c <sendto_one_numeric@plt>
 afc:	ldr	r5, [r5, #8]
 b00:	cmp	r5, #0
 b04:	beq	b90 <flattened_map+0x234>
 b08:	ldr	fp, [r5]
 b0c:	add	r6, r6, #1
 b10:	ldrh	r2, [fp, #80]	; 0x50
 b14:	cmp	r2, #4
 b18:	beq	afc <flattened_map+0x1a0>
 b1c:	ldr	r2, [pc, #180]	; bd8 <flattened_map+0x27c>
 b20:	ldr	r2, [r7, r2]
 b24:	ldr	r2, [r2, #12]
 b28:	cmp	r2, #0
 b2c:	bne	b4c <flattened_map+0x1f0>
 b30:	ldr	r1, [fp, #64]	; 0x40
 b34:	str	r2, [sp, #12]
 b38:	and	r3, r1, #2048	; 0x800
 b3c:	str	r3, [sp, #8]
 b40:	ldrd	r2, [sp, #8]
 b44:	orrs	r3, r2, r3
 b48:	bne	afc <flattened_map+0x1a0>
 b4c:	ldr	r2, [sl, #8]
 b50:	cmp	r2, r6
 b54:	mov	r2, #512	; 0x200
 b58:	bne	a70 <flattened_map+0x114>
 b5c:	ldr	r1, [pc, #120]	; bdc <flattened_map+0x280>
 b60:	mov	r0, r4
 b64:	add	r1, pc, r1
 b68:	bl	59c <rb_strlcpy@plt>
 b6c:	b	a80 <flattened_map+0x124>
 b70:	add	r0, r0, #1
 b74:	add	r1, r4, #50	; 0x32
 b78:	add	r0, r4, r0
 b7c:	mov	r2, #45	; 0x2d
 b80:	strb	r2, [r0], #1
 b84:	cmp	r0, r1
 b88:	bne	b80 <flattened_map+0x224>
 b8c:	b	ab0 <flattened_map+0x154>
 b90:	add	sp, sp, #540	; 0x21c
 b94:	vpop	{d8}
 b98:	ldrd	r4, [sp]
 b9c:	ldrd	r6, [sp, #8]
 ba0:	ldrd	r8, [sp, #16]
 ba4:	ldrd	sl, [sp, #24]
 ba8:	add	sp, sp, #32
 bac:	pop	{pc}		; (ldr pc, [sp], #4)
 bb0:	.word	0x42c80000
 bb4:	.word	0x00010678
 bb8:	.word	0x00000048
 bbc:	.word	0x00000038
 bc0:	.word	0x00000314
 bc4:	.word	0x000002cc
 bc8:	.word	0x0000002c
 bcc:	.word	0x000002bc
 bd0:	.word	0x0000029c
 bd4:	.word	0x000002c0
 bd8:	.word	0x0000003c
 bdc:	.word	0x000001cc

00000be0 <m_map>:
 be0:	ldr	r0, [r2, #64]	; 0x40
 be4:	mov	r3, #0
 be8:	str	r4, [sp, #-8]!
 bec:	mov	r4, r1
 bf0:	ldr	r1, [pc, #136]	; c80 <m_map+0xa0>
 bf4:	str	lr, [sp, #4]
 bf8:	and	r2, r0, #67108864	; 0x4000000
 bfc:	orrs	r3, r2, r3
 c00:	add	r1, pc, r1
 c04:	bne	c1c <m_map+0x3c>
 c08:	ldr	r3, [pc, #116]	; c84 <m_map+0xa4>
 c0c:	ldr	r3, [r1, r3]
 c10:	ldr	r3, [r3]
 c14:	cmp	r3, #0
 c18:	bne	c30 <m_map+0x50>
 c1c:	ldr	r3, [pc, #100]	; c88 <m_map+0xa8>
 c20:	ldr	r3, [r1, r3]
 c24:	ldr	r3, [r3, #176]	; 0xb0
 c28:	cmp	r3, #0
 c2c:	beq	c58 <m_map+0x78>
 c30:	mov	r0, r4
 c34:	bl	95c <flattened_map>
 c38:	ldr	r2, [pc, #76]	; c8c <m_map+0xac>
 c3c:	mov	r0, r4
 c40:	add	r2, pc, r2
 c44:	mov	r1, #17
 c48:	ldr	r4, [sp]
 c4c:	ldr	lr, [sp, #4]
 c50:	add	sp, sp, #8
 c54:	b	56c <sendto_one_numeric@plt>
 c58:	ldr	r3, [pc, #48]	; c90 <m_map+0xb0>
 c5c:	mov	r0, r4
 c60:	ldr	r2, [pc, #44]	; c94 <m_map+0xb4>
 c64:	ldr	r1, [r1, r3]
 c68:	add	r2, pc, r2
 c6c:	bl	6d8 <dump_map>
 c70:	ldr	r2, [pc, #32]	; c98 <m_map+0xb8>
 c74:	mov	r0, r4
 c78:	add	r2, pc, r2
 c7c:	b	c44 <m_map+0x64>
 c80:	.word	0x000103f8
 c84:	.word	0x0000003c
 c88:	.word	0x0000004c
 c8c:	.word	0x000000c4
 c90:	.word	0x00000048
 c94:	.word	0x0001045c
 c98:	.word	0x0000008c

Disassembly of section .fini:

00000c9c <_fini>:
 c9c:	push	{r3, lr}
 ca0:	pop	{r3, pc}
