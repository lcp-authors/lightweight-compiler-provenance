
../repos/eddieantonio-ocreval-3ab279a/groupacc/groupacc:     file format elf32-littlearm


Disassembly of section .init:

0001089c <.init>:
   1089c:	push	{r3, lr}
   108a0:	bl	10a6c <getc@plt+0x48>
   108a4:	pop	{r3, pc}

Disassembly of section .plt:

000108a8 <calloc@plt-0x14>:
   108a8:	push	{lr}		; (str lr, [sp, #-4]!)
   108ac:	ldr	lr, [pc, #4]	; 108b8 <calloc@plt-0x4>
   108b0:	add	lr, pc, lr
   108b4:	ldr	pc, [lr, #8]!
   108b8:	andeq	r3, r1, r8, asr #14

000108bc <calloc@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #77824	; 0x13000
   108c4:	ldr	pc, [ip, #1864]!	; 0x748

000108c8 <strcmp@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #77824	; 0x13000
   108d0:	ldr	pc, [ip, #1856]!	; 0x740

000108d4 <fopen@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #77824	; 0x13000
   108dc:	ldr	pc, [ip, #1848]!	; 0x738

000108e0 <free@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #77824	; 0x13000
   108e8:	ldr	pc, [ip, #1840]!	; 0x730

000108ec <utf8proc_get_property@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #77824	; 0x13000
   108f4:	ldr	pc, [ip, #1832]!	; 0x728

000108f8 <fgets@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #77824	; 0x13000
   10900:	ldr	pc, [ip, #1824]!	; 0x720

00010904 <utf8proc_encode_char@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #77824	; 0x13000
   1090c:	ldr	pc, [ip, #1816]!	; 0x718

00010910 <strdup@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #77824	; 0x13000
   10918:	ldr	pc, [ip, #1808]!	; 0x710

0001091c <rewind@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #77824	; 0x13000
   10924:	ldr	pc, [ip, #1800]!	; 0x708

00010928 <unlink@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #77824	; 0x13000
   10930:	ldr	pc, [ip, #1792]!	; 0x700

00010934 <utf8proc_tolower@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #77824	; 0x13000
   1093c:	ldr	pc, [ip, #1784]!	; 0x6f8

00010940 <__xstat@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #77824	; 0x13000
   10948:	ldr	pc, [ip, #1776]!	; 0x6f0

0001094c <fwrite@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #77824	; 0x13000
   10954:	ldr	pc, [ip, #1768]!	; 0x6e8

00010958 <fread@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #77824	; 0x13000
   10960:	ldr	pc, [ip, #1760]!	; 0x6e0

00010964 <utf8proc_iterate@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #77824	; 0x13000
   1096c:	ldr	pc, [ip, #1752]!	; 0x6d8

00010970 <__libc_start_main@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #77824	; 0x13000
   10978:	ldr	pc, [ip, #1744]!	; 0x6d0

0001097c <__sysv_signal@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #77824	; 0x13000
   10984:	ldr	pc, [ip, #1736]!	; 0x6c8

00010988 <__gmon_start__@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #77824	; 0x13000
   10990:	ldr	pc, [ip, #1728]!	; 0x6c0

00010994 <getpid@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #77824	; 0x13000
   1099c:	ldr	pc, [ip, #1720]!	; 0x6b8

000109a0 <exit@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #77824	; 0x13000
   109a8:	ldr	pc, [ip, #1712]!	; 0x6b0

000109ac <utf8proc_category@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #77824	; 0x13000
   109b4:	ldr	pc, [ip, #1704]!	; 0x6a8

000109b8 <strlen@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #77824	; 0x13000
   109c0:	ldr	pc, [ip, #1696]!	; 0x6a0

000109c4 <fprintf@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #77824	; 0x13000
   109cc:	ldr	pc, [ip, #1688]!	; 0x698

000109d0 <__isoc99_sscanf@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #77824	; 0x13000
   109d8:	ldr	pc, [ip, #1680]!	; 0x690

000109dc <fclose@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #77824	; 0x13000
   109e4:	ldr	pc, [ip, #1672]!	; 0x688

000109e8 <sprintf@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #77824	; 0x13000
   109f0:	ldr	pc, [ip, #1664]!	; 0x680

000109f4 <utf8proc_errmsg@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #77824	; 0x13000
   109fc:	ldr	pc, [ip, #1656]!	; 0x678

00010a00 <fputs@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #77824	; 0x13000
   10a08:	ldr	pc, [ip, #1648]!	; 0x670

00010a0c <strncmp@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #77824	; 0x13000
   10a14:	ldr	pc, [ip, #1640]!	; 0x668

00010a18 <abort@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #77824	; 0x13000
   10a20:	ldr	pc, [ip, #1632]!	; 0x660

00010a24 <getc@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #77824	; 0x13000
   10a2c:	ldr	pc, [ip, #1624]!	; 0x658

Disassembly of section .text:

00010a30 <error@@Base-0x149c>:
   10a30:	mov	fp, #0
   10a34:	mov	lr, #0
   10a38:	pop	{r1}		; (ldr r1, [sp], #4)
   10a3c:	mov	r2, sp
   10a40:	push	{r2}		; (str r2, [sp, #-4]!)
   10a44:	push	{r0}		; (str r0, [sp, #-4]!)
   10a48:	ldr	ip, [pc, #16]	; 10a60 <getc@plt+0x3c>
   10a4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10a50:	ldr	r0, [pc, #12]	; 10a64 <getc@plt+0x40>
   10a54:	ldr	r3, [pc, #12]	; 10a68 <getc@plt+0x44>
   10a58:	bl	10970 <__libc_start_main@plt>
   10a5c:	bl	10a18 <abort@plt>
   10a60:	andeq	r2, r1, r0, asr #21
   10a64:	andeq	r0, r1, r4, lsl #26
   10a68:	andeq	r2, r1, r0, ror #20
   10a6c:	ldr	r3, [pc, #20]	; 10a88 <getc@plt+0x64>
   10a70:	ldr	r2, [pc, #20]	; 10a8c <getc@plt+0x68>
   10a74:	add	r3, pc, r3
   10a78:	ldr	r2, [r3, r2]
   10a7c:	cmp	r2, #0
   10a80:	bxeq	lr
   10a84:	b	10988 <__gmon_start__@plt>
   10a88:	andeq	r3, r1, r4, lsl #11
   10a8c:	andeq	r0, r0, r8, lsl #1
   10a90:	ldr	r3, [pc, #28]	; 10ab4 <getc@plt+0x90>
   10a94:	ldr	r0, [pc, #28]	; 10ab8 <getc@plt+0x94>
   10a98:	sub	r3, r3, r0
   10a9c:	cmp	r3, #6
   10aa0:	bxls	lr
   10aa4:	ldr	r3, [pc, #16]	; 10abc <getc@plt+0x98>
   10aa8:	cmp	r3, #0
   10aac:	bxeq	lr
   10ab0:	bx	r3
   10ab4:	andeq	r4, r2, fp, lsr #1
   10ab8:	andeq	r4, r2, r8, lsr #1
   10abc:	andeq	r0, r0, r0
   10ac0:	ldr	r1, [pc, #36]	; 10aec <getc@plt+0xc8>
   10ac4:	ldr	r0, [pc, #36]	; 10af0 <getc@plt+0xcc>
   10ac8:	sub	r1, r1, r0
   10acc:	asr	r1, r1, #2
   10ad0:	add	r1, r1, r1, lsr #31
   10ad4:	asrs	r1, r1, #1
   10ad8:	bxeq	lr
   10adc:	ldr	r3, [pc, #16]	; 10af4 <getc@plt+0xd0>
   10ae0:	cmp	r3, #0
   10ae4:	bxeq	lr
   10ae8:	bx	r3
   10aec:	andeq	r4, r2, r8, lsr #1
   10af0:	andeq	r4, r2, r8, lsr #1
   10af4:	andeq	r0, r0, r0
   10af8:	push	{r4, lr}
   10afc:	ldr	r4, [pc, #24]	; 10b1c <getc@plt+0xf8>
   10b00:	ldrb	r3, [r4]
   10b04:	cmp	r3, #0
   10b08:	popne	{r4, pc}
   10b0c:	bl	10a90 <getc@plt+0x6c>
   10b10:	mov	r3, #1
   10b14:	strb	r3, [r4]
   10b18:	pop	{r4, pc}
   10b1c:	strheq	r4, [r2], -r8
   10b20:	ldr	r0, [pc, #40]	; 10b50 <getc@plt+0x12c>
   10b24:	ldr	r3, [r0]
   10b28:	cmp	r3, #0
   10b2c:	bne	10b34 <getc@plt+0x110>
   10b30:	b	10ac0 <getc@plt+0x9c>
   10b34:	ldr	r3, [pc, #24]	; 10b54 <getc@plt+0x130>
   10b38:	cmp	r3, #0
   10b3c:	beq	10b30 <getc@plt+0x10c>
   10b40:	push	{r4, lr}
   10b44:	blx	r3
   10b48:	pop	{r4, lr}
   10b4c:	b	10ac0 <getc@plt+0x9c>
   10b50:	andeq	r3, r2, r4, lsl #28
   10b54:	andeq	r0, r0, r0
   10b58:	push	{r4, r5, r6, lr}
   10b5c:	mov	r6, r0
   10b60:	mov	r5, r1
   10b64:	mov	r4, r2
   10b68:	mov	r3, r2
   10b6c:	mov	r2, r1
   10b70:	ldr	r1, [pc, #96]	; 10bd8 <getc@plt+0x1b4>
   10b74:	bl	109c4 <fprintf@plt>
   10b78:	cmp	r5, #0
   10b7c:	beq	10bb4 <getc@plt+0x190>
   10b80:	sub	r3, r5, r4
   10b84:	vmov	s14, r3
   10b88:	vcvt.f64.s32	d7, s14
   10b8c:	vldr	d6, [pc, #60]	; 10bd0 <getc@plt+0x1ac>
   10b90:	vmul.f64	d7, d7, d6
   10b94:	vmov	s13, r5
   10b98:	vcvt.f64.s32	d6, s13
   10b9c:	vdiv.f64	d5, d7, d6
   10ba0:	vmov	r2, r3, d5
   10ba4:	ldr	r1, [pc, #48]	; 10bdc <getc@plt+0x1b8>
   10ba8:	mov	r0, r6
   10bac:	bl	109c4 <fprintf@plt>
   10bb0:	pop	{r4, r5, r6, pc}
   10bb4:	mov	r3, r6
   10bb8:	mov	r2, #11
   10bbc:	mov	r1, #1
   10bc0:	ldr	r0, [pc, #24]	; 10be0 <getc@plt+0x1bc>
   10bc4:	bl	1094c <fwrite@plt>
   10bc8:	pop	{r4, r5, r6, pc}
   10bcc:	nop			; (mov r0, r0)
   10bd0:	andeq	r0, r0, r0
   10bd4:	subsmi	r0, r9, r0
   10bd8:	ldrdeq	r2, [r1], -r0
   10bdc:	andeq	r2, r1, r8, ror #21
   10be0:	ldrdeq	r2, [r1], -ip
   10be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10be8:	sub	sp, sp, #20
   10bec:	ldr	r1, [pc, #248]	; 10cec <getc@plt+0x2c8>
   10bf0:	bl	11fa0 <error@@Base+0xd4>
   10bf4:	mov	r7, r0
   10bf8:	ldr	r1, [pc, #240]	; 10cf0 <getc@plt+0x2cc>
   10bfc:	bl	109c4 <fprintf@plt>
   10c00:	ldr	r3, [pc, #236]	; 10cf4 <getc@plt+0x2d0>
   10c04:	ldr	r4, [r3]
   10c08:	cmp	r4, #0
   10c0c:	beq	10cb0 <getc@plt+0x28c>
   10c10:	mov	r8, #0
   10c14:	mov	sl, r8
   10c18:	ldr	r6, [pc, #216]	; 10cf8 <getc@plt+0x2d4>
   10c1c:	mov	fp, #1
   10c20:	b	10c30 <getc@plt+0x20c>
   10c24:	ldr	r4, [r4, #4]
   10c28:	cmp	r4, #0
   10c2c:	beq	10cb8 <getc@plt+0x294>
   10c30:	ldr	r3, [r4, #12]
   10c34:	add	r2, r6, r3, lsl #3
   10c38:	add	r2, r2, #10176	; 0x27c0
   10c3c:	ldr	r5, [r2, #4]
   10c40:	cmp	r3, #32
   10c44:	cmpne	r3, #10
   10c48:	movne	r2, #1
   10c4c:	moveq	r2, #0
   10c50:	cmp	r5, #0
   10c54:	movle	r2, #0
   10c58:	andgt	r2, r2, #1
   10c5c:	cmp	r2, #0
   10c60:	beq	10c24 <getc@plt+0x200>
   10c64:	add	r3, r6, r3, lsl #3
   10c68:	add	r3, r3, #10176	; 0x27c0
   10c6c:	ldr	r9, [r3, #8]
   10c70:	mov	r2, r9
   10c74:	mov	r1, r5
   10c78:	mov	r0, r7
   10c7c:	bl	10b58 <getc@plt+0x134>
   10c80:	mov	r3, fp
   10c84:	add	r2, sp, #4
   10c88:	ldr	r1, [r4, #12]
   10c8c:	mov	r0, #0
   10c90:	bl	12654 <error@@Base+0x788>
   10c94:	add	r2, sp, #4
   10c98:	ldr	r1, [pc, #92]	; 10cfc <getc@plt+0x2d8>
   10c9c:	mov	r0, r7
   10ca0:	bl	109c4 <fprintf@plt>
   10ca4:	add	sl, sl, r5
   10ca8:	add	r8, r8, r9
   10cac:	b	10c24 <getc@plt+0x200>
   10cb0:	mov	r8, #0
   10cb4:	mov	sl, r8
   10cb8:	mov	r2, r8
   10cbc:	mov	r1, sl
   10cc0:	mov	r0, r7
   10cc4:	bl	10b58 <getc@plt+0x134>
   10cc8:	mov	r3, r7
   10ccc:	mov	r2, #6
   10cd0:	mov	r1, #1
   10cd4:	ldr	r0, [pc, #36]	; 10d00 <getc@plt+0x2dc>
   10cd8:	bl	1094c <fwrite@plt>
   10cdc:	mov	r0, r7
   10ce0:	bl	11d98 <getc@plt+0x1374>
   10ce4:	add	sp, sp, #20
   10ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cec:	strdeq	r2, [r1], -r4
   10cf0:	strdeq	r2, [r1], -r8
   10cf4:	andseq	r4, r3, r0, lsr r5
   10cf8:	andseq	r4, r3, r0, asr #10
   10cfc:	andeq	r2, r1, r8, lsl fp
   10d00:	andeq	r2, r1, r0, lsr #22
   10d04:	push	{lr}		; (str lr, [sp, #-4]!)
   10d08:	sub	sp, sp, #12
   10d0c:	add	ip, sp, #8
   10d10:	str	r0, [ip, #-4]!
   10d14:	mov	r4, r1
   10d18:	mov	r3, #0
   10d1c:	ldr	r2, [pc, #80]	; 10d74 <getc@plt+0x350>
   10d20:	mov	r0, ip
   10d24:	bl	1200c <error@@Base+0x140>
   10d28:	ldr	r3, [sp, #4]
   10d2c:	sub	r3, r3, #2
   10d30:	cmp	r3, #1
   10d34:	bls	10d40 <getc@plt+0x31c>
   10d38:	ldr	r0, [pc, #56]	; 10d78 <getc@plt+0x354>
   10d3c:	bl	11ecc <error@@Base>
   10d40:	ldr	r2, [pc, #52]	; 10d7c <getc@plt+0x358>
   10d44:	ldr	r1, [r4]
   10d48:	ldr	r0, [pc, #48]	; 10d80 <getc@plt+0x35c>
   10d4c:	bl	12298 <error@@Base+0x3cc>
   10d50:	ldr	r1, [r4, #4]
   10d54:	ldr	r0, [pc, #40]	; 10d84 <getc@plt+0x360>
   10d58:	bl	11104 <getc@plt+0x6e0>
   10d5c:	ldr	r3, [sp, #4]
   10d60:	cmp	r3, #3
   10d64:	ldreq	r0, [r4, #8]
   10d68:	movne	r0, #0
   10d6c:	bl	10be4 <getc@plt+0x1c0>
   10d70:	bl	11e74 <getc@plt+0x1450>
   10d74:	andeq	r2, r1, r8, lsr #22
   10d78:	andeq	r2, r1, r4, asr fp
   10d7c:	muleq	r2, r4, r0
   10d80:	andseq	r4, r3, r0, lsr r5
   10d84:	andseq	r4, r3, r0, asr #10
   10d88:	push	{r4, lr}
   10d8c:	mov	r2, r0
   10d90:	mov	r1, #99	; 0x63
   10d94:	ldr	r0, [pc, #12]	; 10da8 <getc@plt+0x384>
   10d98:	bl	108f8 <fgets@plt>
   10d9c:	adds	r0, r0, #0
   10da0:	movne	r0, #1
   10da4:	pop	{r4, pc}
   10da8:	strheq	r4, [r2], -ip
   10dac:	push	{r4, r5, r6, lr}
   10db0:	mov	r4, r1
   10db4:	mov	r5, r2
   10db8:	bl	10d88 <getc@plt+0x364>
   10dbc:	cmp	r0, #0
   10dc0:	popeq	{r4, r5, r6, pc}
   10dc4:	mov	r2, r4
   10dc8:	ldr	r1, [pc, #32]	; 10df0 <getc@plt+0x3cc>
   10dcc:	ldr	r0, [pc, #32]	; 10df4 <getc@plt+0x3d0>
   10dd0:	bl	109d0 <__isoc99_sscanf@plt>
   10dd4:	cmp	r0, #1
   10dd8:	ldreq	r3, [r5]
   10ddc:	ldreq	r2, [r4]
   10de0:	addeq	r3, r3, r2
   10de4:	streq	r3, [r5]
   10de8:	movne	r0, #0
   10dec:	pop	{r4, r5, r6, pc}
   10df0:	andeq	r2, r1, r8, ror fp
   10df4:	strheq	r4, [r2], -ip
   10df8:	push	{r4, lr}
   10dfc:	sub	sp, sp, #24
   10e00:	mov	r4, r1
   10e04:	bl	10d88 <getc@plt+0x364>
   10e08:	cmp	r0, #0
   10e0c:	bne	10e18 <getc@plt+0x3f4>
   10e10:	add	sp, sp, #24
   10e14:	pop	{r4, pc}
   10e18:	add	r3, sp, #20
   10e1c:	str	r3, [sp, #4]
   10e20:	add	r3, sp, #16
   10e24:	str	r3, [sp]
   10e28:	add	r3, sp, #12
   10e2c:	add	r2, sp, #8
   10e30:	ldr	r1, [pc, #88]	; 10e90 <getc@plt+0x46c>
   10e34:	ldr	r0, [pc, #88]	; 10e94 <getc@plt+0x470>
   10e38:	bl	109d0 <__isoc99_sscanf@plt>
   10e3c:	cmp	r0, #4
   10e40:	movne	r0, #0
   10e44:	bne	10e10 <getc@plt+0x3ec>
   10e48:	ldr	r3, [r4]
   10e4c:	ldr	r2, [sp, #8]
   10e50:	add	r3, r3, r2
   10e54:	str	r3, [r4]
   10e58:	ldr	r3, [r4, #4]
   10e5c:	ldr	r2, [sp, #12]
   10e60:	add	r3, r3, r2
   10e64:	str	r3, [r4, #4]
   10e68:	ldr	r3, [r4, #8]
   10e6c:	ldr	r2, [sp, #16]
   10e70:	add	r3, r3, r2
   10e74:	str	r3, [r4, #8]
   10e78:	ldr	r3, [r4, #12]
   10e7c:	ldr	r2, [sp, #20]
   10e80:	add	r3, r3, r2
   10e84:	str	r3, [r4, #12]
   10e88:	mov	r0, #1
   10e8c:	b	10e10 <getc@plt+0x3ec>
   10e90:	andeq	r2, r1, ip, ror #22
   10e94:	strheq	r4, [r2], -ip
   10e98:	push	{lr}		; (str lr, [sp, #-4]!)
   10e9c:	sub	sp, sp, #20
   10ea0:	ldr	r3, [r1, #4]
   10ea4:	ldr	ip, [r1]
   10ea8:	str	r2, [sp, #8]
   10eac:	ldr	r2, [r1, #12]
   10eb0:	str	r2, [sp, #4]
   10eb4:	ldr	r2, [r1, #8]
   10eb8:	str	r2, [sp]
   10ebc:	mov	r2, ip
   10ec0:	ldr	r1, [pc, #8]	; 10ed0 <getc@plt+0x4ac>
   10ec4:	bl	109c4 <fprintf@plt>
   10ec8:	add	sp, sp, #20
   10ecc:	pop	{pc}		; (ldr pc, [sp], #4)
   10ed0:	andeq	r2, r1, ip, ror fp
   10ed4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ed8:	sub	sp, sp, #12
   10edc:	str	r1, [sp, #4]
   10ee0:	cmp	r2, #0
   10ee4:	beq	10f18 <getc@plt+0x4f4>
   10ee8:	vldr	s15, [sp, #4]
   10eec:	vcvt.f64.s32	d7, s15
   10ef0:	vldr	d6, [pc, #56]	; 10f30 <getc@plt+0x50c>
   10ef4:	vmul.f64	d7, d7, d6
   10ef8:	vmov	s13, r2
   10efc:	vcvt.f64.s32	d6, s13
   10f00:	vdiv.f64	d5, d7, d6
   10f04:	vmov	r2, r3, d5
   10f08:	ldr	r1, [pc, #40]	; 10f38 <getc@plt+0x514>
   10f0c:	bl	109c4 <fprintf@plt>
   10f10:	add	sp, sp, #12
   10f14:	pop	{pc}		; (ldr pc, [sp], #4)
   10f18:	mov	r3, r0
   10f1c:	mov	r2, #8
   10f20:	mov	r1, #1
   10f24:	ldr	r0, [pc, #16]	; 10f3c <getc@plt+0x518>
   10f28:	bl	1094c <fwrite@plt>
   10f2c:	b	10f10 <getc@plt+0x4ec>
   10f30:	andeq	r0, r0, r0
   10f34:	subsmi	r0, r9, r0
   10f38:	andeq	r2, r1, r4, lsr #23
   10f3c:	muleq	r1, r8, fp
   10f40:	ldr	r2, [r0, #12]
   10f44:	ldr	r3, [r1, #12]
   10f48:	cmp	r2, r3
   10f4c:	beq	10f58 <getc@plt+0x534>
   10f50:	sub	r0, r3, r2
   10f54:	bx	lr
   10f58:	ldr	r2, [r0, #16]
   10f5c:	ldr	r3, [r1, #16]
   10f60:	cmp	r2, r3
   10f64:	beq	10f70 <getc@plt+0x54c>
   10f68:	sub	r0, r3, r2
   10f6c:	bx	lr
   10f70:	push	{r4, lr}
   10f74:	ldr	r1, [r1, #8]
   10f78:	ldr	r0, [r0, #8]
   10f7c:	bl	11d1c <getc@plt+0x12f8>
   10f80:	pop	{r4, pc}
   10f84:	push	{r4, r5, r6, r7, lr}
   10f88:	sub	sp, sp, #20
   10f8c:	mov	r5, r0
   10f90:	mov	r4, r1
   10f94:	mov	r6, r2
   10f98:	mov	r7, r3
   10f9c:	ldr	r3, [r1, #4]
   10fa0:	ldr	r2, [r1]
   10fa4:	ldr	r1, [pc, #96]	; 1100c <getc@plt+0x5e8>
   10fa8:	bl	109c4 <fprintf@plt>
   10fac:	ldr	r3, [r4]
   10fb0:	ldr	r1, [r4, #4]
   10fb4:	mov	r2, r3
   10fb8:	sub	r1, r3, r1
   10fbc:	mov	r0, r5
   10fc0:	bl	10ed4 <getc@plt+0x4b0>
   10fc4:	cmp	r6, #0
   10fc8:	beq	10fe4 <getc@plt+0x5c0>
   10fcc:	mov	r2, r6
   10fd0:	ldr	r1, [pc, #56]	; 11010 <getc@plt+0x5ec>
   10fd4:	mov	r0, r5
   10fd8:	bl	109c4 <fprintf@plt>
   10fdc:	add	sp, sp, #20
   10fe0:	pop	{r4, r5, r6, r7, pc}
   10fe4:	mov	r3, #1
   10fe8:	add	r2, sp, #4
   10fec:	mov	r1, r7
   10ff0:	mov	r0, #0
   10ff4:	bl	12654 <error@@Base+0x788>
   10ff8:	add	r2, sp, #4
   10ffc:	ldr	r1, [pc, #16]	; 11014 <getc@plt+0x5f0>
   11000:	mov	r0, r5
   11004:	bl	109c4 <fprintf@plt>
   11008:	b	10fdc <getc@plt+0x5b8>
   1100c:	ldrdeq	r2, [r1], -r0
   11010:	andeq	r2, r1, ip, asr #24
   11014:	andeq	r2, r1, ip, lsr #23
   11018:	push	{r4, r5, r6, r7, r8, lr}
   1101c:	mov	r4, r0
   11020:	mov	r7, r1
   11024:	mov	r6, r2
   11028:	mov	r5, r3
   1102c:	mov	r0, r1
   11030:	bl	11be0 <getc@plt+0x11bc>
   11034:	add	r0, r4, r0, lsl #3
   11038:	ldr	r3, [r0, #68]	; 0x44
   1103c:	add	r3, r3, r6
   11040:	str	r3, [r0, #68]	; 0x44
   11044:	ldr	r3, [r0, #72]	; 0x48
   11048:	add	r3, r3, r5
   1104c:	str	r3, [r0, #72]	; 0x48
   11050:	ldr	r3, [r4, #2116]	; 0x844
   11054:	add	r3, r3, r6
   11058:	str	r3, [r4, #2116]	; 0x844
   1105c:	ldr	r3, [r4, #2120]	; 0x848
   11060:	add	r3, r3, r5
   11064:	str	r3, [r4, #2120]	; 0x848
   11068:	add	r4, r4, r7, lsl #3
   1106c:	add	r4, r4, #8192	; 0x2000
   11070:	ldr	r2, [r4, #1988]	; 0x7c4
   11074:	add	r2, r2, r6
   11078:	str	r2, [r4, #1988]	; 0x7c4
   1107c:	ldr	r3, [r4, #1992]	; 0x7c8
   11080:	add	r3, r3, r5
   11084:	str	r3, [r4, #1992]	; 0x7c8
   11088:	pop	{r4, r5, r6, r7, r8, pc}
   1108c:	push	{r4, r5, r6, r7, r8, lr}
   11090:	mov	r7, r1
   11094:	mov	r6, r2
   11098:	mov	r5, r3
   1109c:	add	r0, r0, #2112	; 0x840
   110a0:	add	r4, r0, #12
   110a4:	mov	r0, r4
   110a8:	bl	11914 <getc@plt+0xef0>
   110ac:	cmp	r0, #0
   110b0:	beq	110d0 <getc@plt+0x6ac>
   110b4:	ldr	r2, [r0, #12]
   110b8:	add	r2, r2, r6
   110bc:	str	r2, [r0, #12]
   110c0:	ldr	r3, [r0, #16]
   110c4:	add	r3, r3, r5
   110c8:	str	r3, [r0, #16]
   110cc:	pop	{r4, r5, r6, r7, r8, pc}
   110d0:	mov	r1, #20
   110d4:	mov	r0, #1
   110d8:	bl	11f08 <error@@Base+0x3c>
   110dc:	mov	r8, r0
   110e0:	mov	r0, r7
   110e4:	bl	10910 <strdup@plt>
   110e8:	str	r0, [r8, #8]
   110ec:	str	r6, [r8, #12]
   110f0:	str	r5, [r8, #16]
   110f4:	mov	r1, r8
   110f8:	mov	r0, r4
   110fc:	bl	1195c <getc@plt+0xf38>
   11100:	pop	{r4, r5, r6, r7, r8, pc}
   11104:	push	{r4, r5, r6, r7, r8, r9, lr}
   11108:	sub	sp, sp, #28
   1110c:	mov	r5, r0
   11110:	mov	r6, r1
   11114:	ldr	r1, [pc, #716]	; 113e8 <getc@plt+0x9c4>
   11118:	mov	r0, r6
   1111c:	bl	11fa0 <error@@Base+0xd4>
   11120:	mov	r4, r0
   11124:	bl	10d88 <getc@plt+0x364>
   11128:	cmp	r0, #0
   1112c:	beq	113d4 <getc@plt+0x9b0>
   11130:	mov	r2, #40	; 0x28
   11134:	ldr	r1, [pc, #688]	; 113ec <getc@plt+0x9c8>
   11138:	ldr	r0, [pc, #688]	; 113f0 <getc@plt+0x9cc>
   1113c:	bl	10a0c <strncmp@plt>
   11140:	cmp	r0, #0
   11144:	bne	113d4 <getc@plt+0x9b0>
   11148:	mov	r0, r4
   1114c:	bl	10d88 <getc@plt+0x364>
   11150:	cmp	r0, #0
   11154:	beq	113d4 <getc@plt+0x9b0>
   11158:	ldr	r1, [pc, #660]	; 113f4 <getc@plt+0x9d0>
   1115c:	ldr	r0, [pc, #652]	; 113f0 <getc@plt+0x9cc>
   11160:	bl	108c8 <strcmp@plt>
   11164:	cmp	r0, #0
   11168:	bne	113d4 <getc@plt+0x9b0>
   1116c:	mov	r2, r5
   11170:	add	r1, sp, #20
   11174:	mov	r0, r4
   11178:	bl	10dac <getc@plt+0x388>
   1117c:	cmp	r0, #0
   11180:	beq	113d4 <getc@plt+0x9b0>
   11184:	add	r2, r5, #4
   11188:	add	r1, sp, #16
   1118c:	mov	r0, r4
   11190:	bl	10dac <getc@plt+0x388>
   11194:	cmp	r0, #0
   11198:	beq	113d4 <getc@plt+0x9b0>
   1119c:	mov	r0, r4
   111a0:	bl	10d88 <getc@plt+0x364>
   111a4:	cmp	r0, #0
   111a8:	beq	113d4 <getc@plt+0x9b0>
   111ac:	mov	r0, r4
   111b0:	bl	10d88 <getc@plt+0x364>
   111b4:	cmp	r0, #0
   111b8:	beq	113d4 <getc@plt+0x9b0>
   111bc:	add	r2, r5, #8
   111c0:	add	r1, sp, #12
   111c4:	mov	r0, r4
   111c8:	bl	10dac <getc@plt+0x388>
   111cc:	cmp	r0, #0
   111d0:	beq	113d4 <getc@plt+0x9b0>
   111d4:	add	r2, r5, #12
   111d8:	add	r1, sp, #12
   111dc:	mov	r0, r4
   111e0:	bl	10dac <getc@plt+0x388>
   111e4:	cmp	r0, #0
   111e8:	beq	113d4 <getc@plt+0x9b0>
   111ec:	add	r2, r5, #16
   111f0:	add	r1, sp, #12
   111f4:	mov	r0, r4
   111f8:	bl	10dac <getc@plt+0x388>
   111fc:	cmp	r0, #0
   11200:	beq	113d4 <getc@plt+0x9b0>
   11204:	mov	r0, r4
   11208:	bl	10d88 <getc@plt+0x364>
   1120c:	cmp	r0, #0
   11210:	beq	113d4 <getc@plt+0x9b0>
   11214:	mov	r0, r4
   11218:	bl	10d88 <getc@plt+0x364>
   1121c:	cmp	r0, #0
   11220:	beq	113d4 <getc@plt+0x9b0>
   11224:	mov	r0, r4
   11228:	bl	10d88 <getc@plt+0x364>
   1122c:	cmp	r0, #0
   11230:	beq	113d4 <getc@plt+0x9b0>
   11234:	mov	r0, r4
   11238:	bl	10d88 <getc@plt+0x364>
   1123c:	cmp	r0, #0
   11240:	beq	113d4 <getc@plt+0x9b0>
   11244:	add	r1, r5, #20
   11248:	mov	r0, r4
   1124c:	bl	10df8 <getc@plt+0x3d4>
   11250:	cmp	r0, #0
   11254:	beq	113d4 <getc@plt+0x9b0>
   11258:	add	r1, r5, #36	; 0x24
   1125c:	mov	r0, r4
   11260:	bl	10df8 <getc@plt+0x3d4>
   11264:	cmp	r0, #0
   11268:	beq	113d4 <getc@plt+0x9b0>
   1126c:	add	r1, r5, #52	; 0x34
   11270:	mov	r0, r4
   11274:	bl	10df8 <getc@plt+0x3d4>
   11278:	cmp	r0, #0
   1127c:	beq	113d4 <getc@plt+0x9b0>
   11280:	mov	r0, r4
   11284:	bl	10d88 <getc@plt+0x364>
   11288:	cmp	r0, #0
   1128c:	beq	113d4 <getc@plt+0x9b0>
   11290:	ldr	r6, [pc, #344]	; 113f0 <getc@plt+0x9cc>
   11294:	mov	r0, r4
   11298:	bl	10d88 <getc@plt+0x364>
   1129c:	cmp	r0, #0
   112a0:	beq	112b0 <getc@plt+0x88c>
   112a4:	ldrb	r3, [r6]
   112a8:	cmp	r3, #10
   112ac:	bne	11294 <getc@plt+0x870>
   112b0:	ldr	r3, [sp, #16]
   112b4:	cmp	r3, #0
   112b8:	ble	1131c <getc@plt+0x8f8>
   112bc:	mov	r0, r4
   112c0:	bl	10d88 <getc@plt+0x364>
   112c4:	cmp	r0, #0
   112c8:	beq	1131c <getc@plt+0x8f8>
   112cc:	ldr	r8, [pc, #292]	; 113f8 <getc@plt+0x9d4>
   112d0:	ldr	r7, [pc, #280]	; 113f0 <getc@plt+0x9cc>
   112d4:	add	r6, r7, #20
   112d8:	b	1130c <getc@plt+0x8e8>
   112dc:	add	r3, sp, #8
   112e0:	add	r2, sp, #12
   112e4:	mov	r1, r8
   112e8:	mov	r0, r7
   112ec:	bl	109d0 <__isoc99_sscanf@plt>
   112f0:	cmp	r0, #2
   112f4:	bne	1131c <getc@plt+0x8f8>
   112f8:	ldr	r3, [sp, #8]
   112fc:	ldr	r2, [sp, #12]
   11300:	mov	r1, r6
   11304:	mov	r0, r5
   11308:	bl	1108c <getc@plt+0x668>
   1130c:	mov	r0, r4
   11310:	bl	10d88 <getc@plt+0x364>
   11314:	cmp	r0, #0
   11318:	bne	112dc <getc@plt+0x8b8>
   1131c:	ldr	r3, [sp, #20]
   11320:	cmp	r3, #0
   11324:	ble	113c4 <getc@plt+0x9a0>
   11328:	mov	r0, r4
   1132c:	bl	10d88 <getc@plt+0x364>
   11330:	cmp	r0, #0
   11334:	beq	113c4 <getc@plt+0x9a0>
   11338:	ldr	r7, [pc, #184]	; 113f8 <getc@plt+0x9d4>
   1133c:	ldr	r6, [pc, #172]	; 113f0 <getc@plt+0x9cc>
   11340:	ldr	r9, [pc, #180]	; 113fc <getc@plt+0x9d8>
   11344:	add	r8, r6, #31
   11348:	b	113b4 <getc@plt+0x990>
   1134c:	ldrb	r3, [r6, #30]
   11350:	str	r3, [sp, #4]
   11354:	b	113a0 <getc@plt+0x97c>
   11358:	add	r3, sp, #8
   1135c:	add	r2, sp, #12
   11360:	mov	r1, r7
   11364:	mov	r0, r6
   11368:	bl	109d0 <__isoc99_sscanf@plt>
   1136c:	cmp	r0, #2
   11370:	bne	113c4 <getc@plt+0x9a0>
   11374:	ldrb	r3, [r6, #31]
   11378:	cmp	r3, #125	; 0x7d
   1137c:	beq	1134c <getc@plt+0x928>
   11380:	cmp	r3, #92	; 0x5c
   11384:	moveq	r3, #10
   11388:	streq	r3, [sp, #4]
   1138c:	beq	113a0 <getc@plt+0x97c>
   11390:	add	r2, sp, #4
   11394:	mov	r1, r9
   11398:	mov	r0, r8
   1139c:	bl	109d0 <__isoc99_sscanf@plt>
   113a0:	ldr	r3, [sp, #8]
   113a4:	ldr	r2, [sp, #12]
   113a8:	ldr	r1, [sp, #4]
   113ac:	mov	r0, r5
   113b0:	bl	11018 <getc@plt+0x5f4>
   113b4:	mov	r0, r4
   113b8:	bl	10d88 <getc@plt+0x364>
   113bc:	cmp	r0, #0
   113c0:	bne	11358 <getc@plt+0x934>
   113c4:	mov	r0, r4
   113c8:	bl	11d98 <getc@plt+0x1374>
   113cc:	add	sp, sp, #28
   113d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   113d4:	ldr	r1, [pc, #36]	; 11400 <getc@plt+0x9dc>
   113d8:	cmp	r6, #0
   113dc:	movne	r1, r6
   113e0:	ldr	r0, [pc, #28]	; 11404 <getc@plt+0x9e0>
   113e4:	bl	11f58 <error@@Base+0x8c>
   113e8:	andeq	r2, r1, r0, asr #23
   113ec:	andeq	r2, r1, r4, asr #23
   113f0:	strheq	r4, [r2], -ip
   113f4:	strdeq	r2, [r1], -r0
   113f8:	andeq	r2, r1, r4, ror fp
   113fc:	andeq	r2, r1, ip, lsl ip
   11400:			; <UNDEFINED> instruction: 0x00012bb8
   11404:	andeq	r2, r1, r0, lsr #24
   11408:	push	{r4, r5, r6, r7, r8, lr}
   1140c:	sub	sp, sp, #8
   11410:	mov	r6, r0
   11414:	mov	r0, r1
   11418:	ldr	r1, [pc, #668]	; 116bc <getc@plt+0xc98>
   1141c:	bl	11fa0 <error@@Base+0xd4>
   11420:	mov	r7, r0
   11424:	ldr	r3, [pc, #660]	; 116c0 <getc@plt+0xc9c>
   11428:	ldr	r2, [pc, #660]	; 116c4 <getc@plt+0xca0>
   1142c:	ldr	r1, [pc, #660]	; 116c8 <getc@plt+0xca4>
   11430:	bl	109c4 <fprintf@plt>
   11434:	ldr	r4, [pc, #656]	; 116cc <getc@plt+0xca8>
   11438:	ldr	r3, [pc, #656]	; 116d0 <getc@plt+0xcac>
   1143c:	ldr	r2, [r6]
   11440:	mov	r1, r4
   11444:	mov	r0, r7
   11448:	bl	109c4 <fprintf@plt>
   1144c:	ldr	r3, [pc, #640]	; 116d4 <getc@plt+0xcb0>
   11450:	ldr	r2, [r6, #4]
   11454:	mov	r1, r4
   11458:	mov	r0, r7
   1145c:	bl	109c4 <fprintf@plt>
   11460:	ldr	r3, [r6]
   11464:	ldr	r1, [r6, #4]
   11468:	mov	r2, r3
   1146c:	sub	r1, r3, r1
   11470:	mov	r0, r7
   11474:	bl	10ed4 <getc@plt+0x4b0>
   11478:	ldr	r1, [pc, #600]	; 116d8 <getc@plt+0xcb4>
   1147c:	mov	r0, r7
   11480:	bl	109c4 <fprintf@plt>
   11484:	ldr	r3, [pc, #592]	; 116dc <getc@plt+0xcb8>
   11488:	ldr	r2, [r6, #8]
   1148c:	mov	r1, r4
   11490:	mov	r0, r7
   11494:	bl	109c4 <fprintf@plt>
   11498:	ldr	r3, [pc, #576]	; 116e0 <getc@plt+0xcbc>
   1149c:	ldr	r2, [r6, #12]
   114a0:	mov	r1, r4
   114a4:	mov	r0, r7
   114a8:	bl	109c4 <fprintf@plt>
   114ac:	ldr	r3, [pc, #560]	; 116e4 <getc@plt+0xcc0>
   114b0:	ldr	r2, [r6, #16]
   114b4:	mov	r1, r4
   114b8:	mov	r0, r7
   114bc:	bl	109c4 <fprintf@plt>
   114c0:	ldr	r1, [r6, #8]
   114c4:	ldr	r3, [r6, #12]
   114c8:	ldr	r2, [r6]
   114cc:	add	r1, r1, r3
   114d0:	mov	r0, r7
   114d4:	bl	10ed4 <getc@plt+0x4b0>
   114d8:	ldr	r1, [pc, #520]	; 116e8 <getc@plt+0xcc4>
   114dc:	mov	r0, r7
   114e0:	bl	109c4 <fprintf@plt>
   114e4:	ldr	r3, [r6]
   114e8:	ldr	r1, [r6, #48]	; 0x30
   114ec:	mov	r2, r3
   114f0:	sub	r1, r3, r1
   114f4:	mov	r0, r7
   114f8:	bl	10ed4 <getc@plt+0x4b0>
   114fc:	ldr	r1, [pc, #488]	; 116ec <getc@plt+0xcc8>
   11500:	mov	r0, r7
   11504:	bl	109c4 <fprintf@plt>
   11508:	mov	r3, r7
   1150c:	mov	r2, #37	; 0x25
   11510:	mov	r1, #1
   11514:	ldr	r0, [pc, #468]	; 116f0 <getc@plt+0xccc>
   11518:	bl	1094c <fwrite@plt>
   1151c:	ldr	r2, [pc, #464]	; 116f4 <getc@plt+0xcd0>
   11520:	add	r1, r6, #20
   11524:	mov	r0, r7
   11528:	bl	10e98 <getc@plt+0x474>
   1152c:	ldr	r2, [pc, #452]	; 116f8 <getc@plt+0xcd4>
   11530:	add	r1, r6, #36	; 0x24
   11534:	mov	r0, r7
   11538:	bl	10e98 <getc@plt+0x474>
   1153c:	ldr	r2, [pc, #440]	; 116fc <getc@plt+0xcd8>
   11540:	add	r1, r6, #52	; 0x34
   11544:	mov	r0, r7
   11548:	bl	10e98 <getc@plt+0x474>
   1154c:	ldr	r1, [pc, #428]	; 11700 <getc@plt+0xcdc>
   11550:	mov	r0, r7
   11554:	bl	109c4 <fprintf@plt>
   11558:	add	r5, r6, #68	; 0x44
   1155c:	mov	r4, #0
   11560:	mov	r8, r4
   11564:	b	11578 <getc@plt+0xb54>
   11568:	add	r4, r4, #1
   1156c:	add	r5, r5, #8
   11570:	cmp	r4, #256	; 0x100
   11574:	beq	115a4 <getc@plt+0xb80>
   11578:	ldr	r3, [r5]
   1157c:	cmp	r3, #0
   11580:	ble	11568 <getc@plt+0xb44>
   11584:	mov	r0, r4
   11588:	bl	11c14 <getc@plt+0x11f0>
   1158c:	mov	r3, r8
   11590:	mov	r2, r0
   11594:	mov	r1, r5
   11598:	mov	r0, r7
   1159c:	bl	10f84 <getc@plt+0x560>
   115a0:	b	11568 <getc@plt+0xb44>
   115a4:	add	r1, r6, #2112	; 0x840
   115a8:	mov	r3, #0
   115ac:	ldr	r2, [pc, #328]	; 116fc <getc@plt+0xcd8>
   115b0:	add	r1, r1, #4
   115b4:	mov	r0, r7
   115b8:	bl	10f84 <getc@plt+0x560>
   115bc:	ldr	r3, [r6, #4]
   115c0:	cmp	r3, #0
   115c4:	ble	11648 <getc@plt+0xc24>
   115c8:	add	r0, r6, #2112	; 0x840
   115cc:	add	r0, r0, #12
   115d0:	bl	11a04 <getc@plt+0xfe0>
   115d4:	add	r4, r6, #8192	; 0x2000
   115d8:	ldr	r2, [pc, #292]	; 11704 <getc@plt+0xce0>
   115dc:	ldr	r1, [r4, #1980]	; 0x7bc
   115e0:	ldr	r0, [r4, #1984]	; 0x7c0
   115e4:	bl	11858 <getc@plt+0xe34>
   115e8:	mov	r3, r7
   115ec:	mov	r2, #39	; 0x27
   115f0:	mov	r1, #1
   115f4:	ldr	r0, [pc, #268]	; 11708 <getc@plt+0xce4>
   115f8:	bl	1094c <fwrite@plt>
   115fc:	ldr	r3, [r4, #1984]	; 0x7c0
   11600:	cmp	r3, #0
   11604:	ble	11648 <getc@plt+0xc24>
   11608:	mov	r4, #0
   1160c:	add	r5, r6, #8192	; 0x2000
   11610:	ldr	r8, [pc, #244]	; 1170c <getc@plt+0xce8>
   11614:	ldr	r3, [r5, #1980]	; 0x7bc
   11618:	ldr	r1, [r3, r4, lsl #2]
   1161c:	ldr	r3, [r1, #16]
   11620:	ldr	r2, [r1, #12]
   11624:	ldr	r1, [r1, #8]
   11628:	str	r1, [sp]
   1162c:	mov	r1, r8
   11630:	mov	r0, r7
   11634:	bl	109c4 <fprintf@plt>
   11638:	add	r4, r4, #1
   1163c:	ldr	r3, [r5, #1984]	; 0x7c0
   11640:	cmp	r3, r4
   11644:	bgt	11614 <getc@plt+0xbf0>
   11648:	ldr	r3, [r6]
   1164c:	cmp	r3, #0
   11650:	ble	116ac <getc@plt+0xc88>
   11654:	ldr	r1, [pc, #164]	; 11700 <getc@plt+0xcdc>
   11658:	mov	r0, r7
   1165c:	bl	109c4 <fprintf@plt>
   11660:	add	r4, r6, #10176	; 0x27c0
   11664:	add	r4, r4, #4
   11668:	mov	r5, #0
   1166c:	mov	r8, r5
   11670:	ldr	r6, [pc, #152]	; 11710 <getc@plt+0xcec>
   11674:	b	11688 <getc@plt+0xc64>
   11678:	add	r5, r5, #1
   1167c:	add	r4, r4, #8
   11680:	cmp	r5, r6
   11684:	beq	116ac <getc@plt+0xc88>
   11688:	ldr	r3, [r4]
   1168c:	cmp	r3, #0
   11690:	ble	11678 <getc@plt+0xc54>
   11694:	mov	r3, r5
   11698:	mov	r2, r8
   1169c:	mov	r1, r4
   116a0:	mov	r0, r7
   116a4:	bl	10f84 <getc@plt+0x560>
   116a8:	b	11678 <getc@plt+0xc54>
   116ac:	mov	r0, r7
   116b0:	bl	11d98 <getc@plt+0x1374>
   116b4:	add	sp, sp, #8
   116b8:	pop	{r4, r5, r6, r7, r8, pc}
   116bc:	strdeq	r2, [r1], -r4
   116c0:	strdeq	r2, [r1], -r0
   116c4:	andeq	r2, r1, r4, asr #23
   116c8:	andeq	r2, r1, r4, lsr ip
   116cc:	andeq	r2, r1, r8, asr #24
   116d0:	andeq	r2, r1, ip, lsr ip
   116d4:	andeq	r2, r1, r4, asr ip
   116d8:	andeq	r2, r1, ip, asr ip
   116dc:	andeq	r2, r1, ip, ror #24
   116e0:	andeq	r2, r1, r0, lsl #25
   116e4:	muleq	r1, r0, ip
   116e8:	muleq	r1, ip, ip
   116ec:			; <UNDEFINED> instruction: 0x00012cb4
   116f0:	ldrdeq	r2, [r1], -r4
   116f4:	strdeq	r2, [r1], -ip
   116f8:	andeq	r2, r1, r4, lsl #26
   116fc:	andeq	r2, r1, r0, lsl sp
   11700:	andeq	r2, r1, r8, lsl sp
   11704:	andeq	r0, r1, r0, asr #30
   11708:	andeq	r2, r1, r8, lsr sp
   1170c:	andeq	r2, r1, r0, ror #26
   11710:			; <UNDEFINED> instruction: 0x0010ffff
   11714:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11718:	mov	sl, r0
   1171c:	mov	r9, r1
   11720:	ldr	r3, [pc, #300]	; 11854 <getc@plt+0xe30>
   11724:	ldr	r3, [r3]
   11728:	ldr	r8, [r3, r0, lsl #2]
   1172c:	cmp	r0, r1
   11730:	movge	r3, r1
   11734:	movge	r4, r0
   11738:	bge	11818 <getc@plt+0xdf4>
   1173c:	mov	r4, r0
   11740:	mov	r3, r1
   11744:	ldr	r6, [pc, #264]	; 11854 <getc@plt+0xe30>
   11748:	b	117cc <getc@plt+0xda8>
   1174c:	mov	r5, r3
   11750:	cmp	r4, r5
   11754:	beq	11810 <getc@plt+0xdec>
   11758:	ldr	r2, [r6]
   1175c:	add	r3, r4, #1
   11760:	lsl	r7, r4, #2
   11764:	ldr	r1, [r2, r5, lsl #2]
   11768:	str	r1, [r2, r4, lsl #2]
   1176c:	cmp	r3, r5
   11770:	movge	r4, r3
   11774:	bge	117ac <getc@plt+0xd88>
   11778:	add	r7, r7, #4
   1177c:	mov	r4, r3
   11780:	ldr	r2, [r6]
   11784:	ldr	r3, [r6, #4]
   11788:	ldr	r1, [r2, r7]
   1178c:	mov	r0, r8
   11790:	blx	r3
   11794:	cmp	r0, #0
   11798:	ble	117ac <getc@plt+0xd88>
   1179c:	add	r4, r4, #1
   117a0:	add	r7, r7, #4
   117a4:	cmp	r4, r5
   117a8:	blt	11780 <getc@plt+0xd5c>
   117ac:	cmp	r4, r5
   117b0:	beq	11814 <getc@plt+0xdf0>
   117b4:	ldr	r2, [r6]
   117b8:	sub	r3, r5, #1
   117bc:	ldr	r1, [r2, r4, lsl #2]
   117c0:	str	r1, [r2, r5, lsl #2]
   117c4:	cmp	r3, r4
   117c8:	ble	11818 <getc@plt+0xdf4>
   117cc:	cmp	r3, r4
   117d0:	ble	1174c <getc@plt+0xd28>
   117d4:	lsl	r7, r3, #2
   117d8:	mov	r5, r3
   117dc:	ldr	r2, [r6]
   117e0:	ldr	r3, [r6, #4]
   117e4:	ldr	r1, [r2, r7]
   117e8:	mov	r0, r8
   117ec:	blx	r3
   117f0:	cmp	r0, #0
   117f4:	bge	11750 <getc@plt+0xd2c>
   117f8:	sub	r5, r5, #1
   117fc:	sub	r7, r7, #4
   11800:	cmp	r5, r4
   11804:	bne	117dc <getc@plt+0xdb8>
   11808:	mov	r4, r5
   1180c:	b	117ac <getc@plt+0xd88>
   11810:	mov	r4, r5
   11814:	mov	r3, r4
   11818:	ldr	r2, [pc, #52]	; 11854 <getc@plt+0xe30>
   1181c:	ldr	r2, [r2]
   11820:	str	r8, [r2, r3, lsl #2]
   11824:	sub	r1, r3, #1
   11828:	cmp	sl, r1
   1182c:	blt	11848 <getc@plt+0xe24>
   11830:	add	r0, r4, #1
   11834:	cmp	r9, r0
   11838:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   1183c:	mov	r1, r9
   11840:	bl	11714 <getc@plt+0xcf0>
   11844:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11848:	mov	r0, sl
   1184c:	bl	11714 <getc@plt+0xcf0>
   11850:	b	11830 <getc@plt+0xe0c>
   11854:	andeq	r4, r2, r0, lsr #2
   11858:	cmp	r0, #1
   1185c:	bxle	lr
   11860:	push	{r4, lr}
   11864:	ldr	r3, [pc, #20]	; 11880 <getc@plt+0xe5c>
   11868:	str	r1, [r3]
   1186c:	str	r2, [r3, #4]
   11870:	sub	r1, r0, #1
   11874:	mov	r0, #0
   11878:	bl	11714 <getc@plt+0xcf0>
   1187c:	pop	{r4, pc}
   11880:	andeq	r4, r2, r0, lsr #2
   11884:	ldrb	r3, [r0]
   11888:	cmp	r3, #0
   1188c:	beq	118cc <getc@plt+0xea8>
   11890:	mov	r2, #0
   11894:	add	r2, r2, r3
   11898:	ldrb	r3, [r0, #1]!
   1189c:	cmp	r3, #0
   118a0:	bne	11894 <getc@plt+0xe70>
   118a4:	ldr	r0, [pc, #40]	; 118d4 <getc@plt+0xeb0>
   118a8:	smull	r3, r0, r0, r2
   118ac:	add	r3, r0, r2
   118b0:	asr	r0, r2, #31
   118b4:	rsb	r0, r0, r3, asr #8
   118b8:	rsb	r3, r0, r0, lsl #6
   118bc:	rsb	r0, r0, r3, lsl #3
   118c0:	sub	r0, r2, r0
   118c4:	sxth	r0, r0
   118c8:	bx	lr
   118cc:	mov	r2, #0
   118d0:	b	118a4 <getc@plt+0xe80>
   118d4:	subhi	r4, sl, #1552	; 0x610
   118d8:	push	{r4, r5, r6, lr}
   118dc:	mov	r6, r0
   118e0:	mov	r4, r0
   118e4:	add	r5, r0, #8000	; 0x1f40
   118e8:	add	r5, r5, #48	; 0x30
   118ec:	mov	r0, r4
   118f0:	bl	128e8 <error@@Base+0xa1c>
   118f4:	add	r4, r4, #16
   118f8:	cmp	r4, r5
   118fc:	bne	118ec <getc@plt+0xec8>
   11900:	add	r6, r6, #4096	; 0x1000
   11904:	mov	r3, #0
   11908:	str	r3, [r6, #3952]	; 0xf70
   1190c:	str	r3, [r6, #3956]	; 0xf74
   11910:	pop	{r4, r5, r6, pc}
   11914:	push	{r4, r5, r6, lr}
   11918:	mov	r4, r0
   1191c:	mov	r5, r1
   11920:	mov	r0, r1
   11924:	bl	11884 <getc@plt+0xe60>
   11928:	ldr	r4, [r4, r0, lsl #4]
   1192c:	cmp	r4, #0
   11930:	beq	11954 <getc@plt+0xf30>
   11934:	ldr	r1, [r4, #8]
   11938:	mov	r0, r5
   1193c:	bl	108c8 <strcmp@plt>
   11940:	cmp	r0, #0
   11944:	beq	11954 <getc@plt+0xf30>
   11948:	ldr	r4, [r4, #4]
   1194c:	cmp	r4, #0
   11950:	bne	11934 <getc@plt+0xf10>
   11954:	mov	r0, r4
   11958:	pop	{r4, r5, r6, pc}
   1195c:	push	{r4, r5, r6, lr}
   11960:	mov	r4, r0
   11964:	mov	r5, r1
   11968:	ldr	r0, [r1, #8]
   1196c:	bl	11884 <getc@plt+0xe60>
   11970:	mov	r1, r5
   11974:	add	r0, r4, r0, lsl #4
   11978:	bl	12900 <error@@Base+0xa34>
   1197c:	add	r3, r4, #4096	; 0x1000
   11980:	ldr	r0, [r3, #3952]	; 0xf70
   11984:	cmp	r0, #0
   11988:	beq	1199c <getc@plt+0xf78>
   1198c:	bl	108e0 <free@plt>
   11990:	add	r3, r4, #4096	; 0x1000
   11994:	mov	r2, #0
   11998:	str	r2, [r3, #3952]	; 0xf70
   1199c:	add	r4, r4, #4096	; 0x1000
   119a0:	ldr	r3, [r4, #3956]	; 0xf74
   119a4:	add	r3, r3, #1
   119a8:	str	r3, [r4, #3956]	; 0xf74
   119ac:	pop	{r4, r5, r6, pc}
   119b0:	push	{r4, r5, r6, lr}
   119b4:	mov	r4, r0
   119b8:	mov	r5, r1
   119bc:	ldr	r0, [r1, #8]
   119c0:	bl	11884 <getc@plt+0xe60>
   119c4:	mov	r1, r5
   119c8:	add	r0, r4, r0, lsl #4
   119cc:	bl	1295c <error@@Base+0xa90>
   119d0:	add	r3, r4, #4096	; 0x1000
   119d4:	ldr	r0, [r3, #3952]	; 0xf70
   119d8:	cmp	r0, #0
   119dc:	beq	119f0 <getc@plt+0xfcc>
   119e0:	bl	108e0 <free@plt>
   119e4:	add	r3, r4, #4096	; 0x1000
   119e8:	mov	r2, #0
   119ec:	str	r2, [r3, #3952]	; 0xf70
   119f0:	add	r4, r4, #4096	; 0x1000
   119f4:	ldr	r3, [r4, #3956]	; 0xf74
   119f8:	sub	r3, r3, #1
   119fc:	str	r3, [r4, #3956]	; 0xf74
   11a00:	pop	{r4, r5, r6, pc}
   11a04:	add	r3, r0, #4096	; 0x1000
   11a08:	ldr	r3, [r3, #3952]	; 0xf70
   11a0c:	cmp	r3, #0
   11a10:	bxne	lr
   11a14:	add	r3, r0, #4096	; 0x1000
   11a18:	ldr	r3, [r3, #3956]	; 0xf74
   11a1c:	cmp	r3, #0
   11a20:	bxeq	lr
   11a24:	push	{r4, r5, r6, lr}
   11a28:	mov	r4, r0
   11a2c:	mov	r1, #4
   11a30:	mov	r0, r3
   11a34:	bl	11f08 <error@@Base+0x3c>
   11a38:	add	r3, r4, #4096	; 0x1000
   11a3c:	str	r0, [r3, #3952]	; 0xf70
   11a40:	mov	r1, #0
   11a44:	mov	lr, r1
   11a48:	mov	ip, r3
   11a4c:	ldr	r5, [pc, #64]	; 11a94 <getc@plt+0x1070>
   11a50:	b	11a60 <getc@plt+0x103c>
   11a54:	add	lr, lr, #1
   11a58:	cmp	lr, r5
   11a5c:	beq	11a90 <getc@plt+0x106c>
   11a60:	ldr	r3, [r4, lr, lsl #4]
   11a64:	cmp	r3, #0
   11a68:	beq	11a54 <getc@plt+0x1030>
   11a6c:	lsl	r2, r1, #2
   11a70:	add	r1, r1, #1
   11a74:	ldr	r0, [ip, #3952]	; 0xf70
   11a78:	str	r3, [r0, r2]
   11a7c:	ldr	r3, [r3, #4]
   11a80:	add	r2, r2, #4
   11a84:	cmp	r3, #0
   11a88:	bne	11a70 <getc@plt+0x104c>
   11a8c:	b	11a54 <getc@plt+0x1030>
   11a90:	pop	{r4, r5, r6, pc}
   11a94:	strdeq	r0, [r0], -r7
   11a98:	push	{r4, r5, r6, r7, r8, lr}
   11a9c:	mov	r7, r0
   11aa0:	mov	r6, r1
   11aa4:	mov	r4, r0
   11aa8:	add	r5, r0, #8000	; 0x1f40
   11aac:	add	r5, r5, #48	; 0x30
   11ab0:	mov	r1, r6
   11ab4:	mov	r0, r4
   11ab8:	bl	12a24 <error@@Base+0xb58>
   11abc:	add	r4, r4, #16
   11ac0:	cmp	r4, r5
   11ac4:	bne	11ab0 <getc@plt+0x108c>
   11ac8:	add	r3, r7, #4096	; 0x1000
   11acc:	ldr	r0, [r3, #3952]	; 0xf70
   11ad0:	cmp	r0, #0
   11ad4:	beq	11ae8 <getc@plt+0x10c4>
   11ad8:	bl	108e0 <free@plt>
   11adc:	add	r3, r7, #4096	; 0x1000
   11ae0:	mov	r2, #0
   11ae4:	str	r2, [r3, #3952]	; 0xf70
   11ae8:	add	r7, r7, #4096	; 0x1000
   11aec:	mov	r3, #0
   11af0:	str	r3, [r7, #3956]	; 0xf74
   11af4:	pop	{r4, r5, r6, r7, r8, pc}
   11af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11afc:	sub	sp, sp, #12
   11b00:	ldr	r8, [pc, #204]	; 11bd4 <getc@plt+0x11b0>
   11b04:	add	fp, r8, #1088	; 0x440
   11b08:	add	fp, fp, #4
   11b0c:	ldr	sl, [pc, #196]	; 11bd8 <getc@plt+0x11b4>
   11b10:	add	r3, sl, #1024	; 0x400
   11b14:	add	r3, r3, #4
   11b18:	str	r3, [sp, #4]
   11b1c:	b	11b68 <getc@plt+0x1144>
   11b20:	mov	r4, #0
   11b24:	cmp	r9, r4
   11b28:	beq	11ba4 <getc@plt+0x1180>
   11b2c:	ldr	r2, [r8]
   11b30:	mov	r3, r2
   11b34:	ldr	r1, [r8, #4]
   11b38:	cmp	r2, r1
   11b3c:	bhi	11b5c <getc@plt+0x1138>
   11b40:	sub	r2, r2, #1
   11b44:	ldr	r0, [sp, #4]
   11b48:	add	r2, r0, r2
   11b4c:	strb	r4, [r2, #1]!
   11b50:	add	r3, r3, #1
   11b54:	cmp	r1, r3
   11b58:	bcs	11b4c <getc@plt+0x1128>
   11b5c:	add	r8, r8, #12
   11b60:	cmp	r8, fp
   11b64:	beq	11bcc <getc@plt+0x11a8>
   11b68:	ldrsh	r9, [sl]
   11b6c:	mov	r7, r9
   11b70:	cmp	r9, #0
   11b74:	ble	11b20 <getc@plt+0x10fc>
   11b78:	ldr	r6, [r8, #8]
   11b7c:	mov	r5, sl
   11b80:	mov	r4, #0
   11b84:	ldr	r1, [r5, #4]!
   11b88:	mov	r0, r6
   11b8c:	bl	108c8 <strcmp@plt>
   11b90:	cmp	r0, #0
   11b94:	beq	11b24 <getc@plt+0x1100>
   11b98:	add	r4, r4, #1
   11b9c:	cmp	r4, r7
   11ba0:	bne	11b84 <getc@plt+0x1160>
   11ba4:	cmp	r9, #256	; 0x100
   11ba8:	beq	11bc4 <getc@plt+0x11a0>
   11bac:	add	r3, r9, #1
   11bb0:	strh	r3, [sl]
   11bb4:	add	r9, sl, r9, lsl #2
   11bb8:	ldr	r3, [r8, #8]
   11bbc:	str	r3, [r9, #4]
   11bc0:	b	11b2c <getc@plt+0x1108>
   11bc4:	ldr	r0, [pc, #16]	; 11bdc <getc@plt+0x11b8>
   11bc8:	bl	11ecc <error@@Base>
   11bcc:	add	sp, sp, #12
   11bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bd4:	andeq	r2, r1, r0, ror sp
   11bd8:	andeq	r4, r2, r8, lsr #2
   11bdc:			; <UNDEFINED> instruction: 0x000131b4
   11be0:	push	{r4, lr}
   11be4:	mov	r4, r0
   11be8:	ldr	r3, [pc, #32]	; 11c10 <getc@plt+0x11ec>
   11bec:	ldrsh	r3, [r3]
   11bf0:	cmp	r3, #0
   11bf4:	beq	11c08 <getc@plt+0x11e4>
   11bf8:	ldr	r0, [pc, #16]	; 11c10 <getc@plt+0x11ec>
   11bfc:	add	r0, r0, r4
   11c00:	ldrb	r0, [r0, #1028]	; 0x404
   11c04:	pop	{r4, pc}
   11c08:	bl	11af8 <getc@plt+0x10d4>
   11c0c:	b	11bf8 <getc@plt+0x11d4>
   11c10:	andeq	r4, r2, r8, lsr #2
   11c14:	push	{r4, lr}
   11c18:	uxtb	r4, r0
   11c1c:	ldr	r3, [pc, #56]	; 11c5c <getc@plt+0x1238>
   11c20:	ldrsh	r3, [r3]
   11c24:	cmp	r3, #0
   11c28:	beq	11c4c <getc@plt+0x1228>
   11c2c:	ldr	r3, [pc, #40]	; 11c5c <getc@plt+0x1238>
   11c30:	ldrsh	r3, [r3]
   11c34:	cmp	r4, r3
   11c38:	bge	11c54 <getc@plt+0x1230>
   11c3c:	ldr	r0, [pc, #24]	; 11c5c <getc@plt+0x1238>
   11c40:	add	r0, r0, r4, lsl #2
   11c44:	ldr	r0, [r0, #4]
   11c48:	pop	{r4, pc}
   11c4c:	bl	11af8 <getc@plt+0x10d4>
   11c50:	b	11c2c <getc@plt+0x1208>
   11c54:	ldr	r0, [pc, #4]	; 11c60 <getc@plt+0x123c>
   11c58:	bl	11ecc <error@@Base>
   11c5c:	andeq	r4, r2, r8, lsr #2
   11c60:	ldrdeq	r3, [r1], -r0
   11c64:	push	{r4, r5, lr}
   11c68:	sub	sp, sp, #116	; 0x74
   11c6c:	mov	r5, r0
   11c70:	ldr	r3, [pc, #44]	; 11ca4 <getc@plt+0x1280>
   11c74:	ldr	r4, [r3]
   11c78:	bl	10994 <getpid@plt>
   11c7c:	str	r5, [sp]
   11c80:	mov	r3, r0
   11c84:	mov	r2, r4
   11c88:	ldr	r1, [pc, #24]	; 11ca8 <getc@plt+0x1284>
   11c8c:	add	r0, sp, #12
   11c90:	bl	109e8 <sprintf@plt>
   11c94:	add	r0, sp, #12
   11c98:	bl	10910 <strdup@plt>
   11c9c:	add	sp, sp, #116	; 0x74
   11ca0:	pop	{r4, r5, pc}
   11ca4:	addseq	r6, fp, r0, lsl #26
   11ca8:	andeq	r3, r1, r0, lsr #16
   11cac:	push	{r7, lr}
   11cb0:	mov	r7, r0
   11cb4:	ldr	r3, [pc, #88]	; 11d14 <getc@plt+0x12f0>
   11cb8:	ldr	r3, [r3]
   11cbc:	cmp	r3, #0
   11cc0:	beq	11cc8 <getc@plt+0x12a4>
   11cc4:	blx	r3
   11cc8:	ldr	r3, [pc, #72]	; 11d18 <getc@plt+0x12f4>
   11ccc:	ldrsh	r3, [r3]
   11cd0:	cmp	r3, #0
   11cd4:	ble	11d0c <getc@plt+0x12e8>
   11cd8:	mov	r4, #1
   11cdc:	ldr	r6, [pc, #52]	; 11d18 <getc@plt+0x12f4>
   11ce0:	mov	r0, r4
   11ce4:	bl	11c64 <getc@plt+0x1240>
   11ce8:	mov	r5, r0
   11cec:	bl	10928 <unlink@plt>
   11cf0:	mov	r0, r5
   11cf4:	bl	108e0 <free@plt>
   11cf8:	add	r4, r4, #1
   11cfc:	sxth	r4, r4
   11d00:	ldrsh	r3, [r6]
   11d04:	cmp	r3, r4
   11d08:	bge	11ce0 <getc@plt+0x12bc>
   11d0c:	mov	r0, r7
   11d10:	bl	109a0 <exit@plt>
   11d14:	addseq	r6, fp, r4, lsl #26
   11d18:	andseq	r4, r3, ip, lsr #10
   11d1c:	push	{r4, lr}
   11d20:	ldrb	r3, [r0]
   11d24:	cmp	r3, #0
   11d28:	beq	11d74 <getc@plt+0x1350>
   11d2c:	ldrb	r2, [r1]
   11d30:	cmp	r2, r3
   11d34:	bne	11d90 <getc@plt+0x136c>
   11d38:	mov	ip, r1
   11d3c:	mov	r2, #0
   11d40:	add	r2, r2, #1
   11d44:	mov	r4, r2
   11d48:	ldrb	r3, [r0, #1]!
   11d4c:	cmp	r3, #0
   11d50:	beq	11d78 <getc@plt+0x1354>
   11d54:	ldrb	lr, [ip, #1]!
   11d58:	cmp	lr, r3
   11d5c:	beq	11d40 <getc@plt+0x131c>
   11d60:	ldrb	r2, [r1, r4]
   11d64:	cmp	r2, r3
   11d68:	mvnhi	r0, #0
   11d6c:	movls	r0, #1
   11d70:	pop	{r4, pc}
   11d74:	mov	r4, #0
   11d78:	ldrb	r3, [r1, r4]
   11d7c:	cmp	r3, #0
   11d80:	movne	r3, #0
   11d84:	bne	11d60 <getc@plt+0x133c>
   11d88:	mov	r0, #0
   11d8c:	pop	{r4, pc}
   11d90:	mov	r4, #0
   11d94:	b	11d60 <getc@plt+0x133c>
   11d98:	ldr	r3, [pc, #36]	; 11dc4 <getc@plt+0x13a0>
   11d9c:	ldr	r3, [r3]
   11da0:	cmp	r3, r0
   11da4:	bxeq	lr
   11da8:	ldr	r3, [pc, #24]	; 11dc8 <getc@plt+0x13a4>
   11dac:	ldr	r3, [r3]
   11db0:	cmp	r0, r3
   11db4:	bxeq	lr
   11db8:	push	{r4, lr}
   11dbc:	bl	109dc <fclose@plt>
   11dc0:	pop	{r4, pc}
   11dc4:	strheq	r4, [r2], -r0
   11dc8:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   11dcc:	push	{lr}		; (str lr, [sp, #-4]!)
   11dd0:	sub	sp, sp, #92	; 0x5c
   11dd4:	mov	r2, sp
   11dd8:	mov	r1, r0
   11ddc:	mov	r0, #3
   11de0:	bl	10940 <__xstat@plt>
   11de4:	clz	r0, r0
   11de8:	lsr	r0, r0, #5
   11dec:	add	sp, sp, #92	; 0x5c
   11df0:	pop	{pc}		; (ldr pc, [sp], #4)
   11df4:	push	{r4, lr}
   11df8:	ldr	r3, [pc, #32]	; 11e20 <getc@plt+0x13fc>
   11dfc:	ldrh	r0, [r3]
   11e00:	add	r0, r0, #1
   11e04:	sxth	r0, r0
   11e08:	strh	r0, [r3]
   11e0c:	bl	11c64 <getc@plt+0x1240>
   11e10:	mov	r4, r0
   11e14:	bl	10928 <unlink@plt>
   11e18:	mov	r0, r4
   11e1c:	pop	{r4, pc}
   11e20:	andseq	r4, r3, ip, lsr #10
   11e24:	push	{r4, lr}
   11e28:	mov	r4, r0
   11e2c:	bl	109b8 <strlen@plt>
   11e30:	sub	r0, r0, #1
   11e34:	sxth	r0, r0
   11e38:	cmp	r0, #0
   11e3c:	blt	11e68 <getc@plt+0x1444>
   11e40:	ldrb	r3, [r4, r0]
   11e44:	cmp	r3, #47	; 0x2f
   11e48:	beq	11e68 <getc@plt+0x1444>
   11e4c:	sub	r0, r0, #1
   11e50:	sxth	r0, r0
   11e54:	cmp	r0, #0
   11e58:	blt	11e68 <getc@plt+0x1444>
   11e5c:	ldrb	r3, [r4, r0]
   11e60:	cmp	r3, #47	; 0x2f
   11e64:	bne	11e4c <getc@plt+0x1428>
   11e68:	add	r0, r0, #1
   11e6c:	add	r0, r4, r0
   11e70:	pop	{r4, pc}
   11e74:	push	{r4, lr}
   11e78:	mov	r0, #0
   11e7c:	bl	11cac <getc@plt+0x1288>
   11e80:	push	{r4, lr}
   11e84:	ldr	r2, [pc, #48]	; 11ebc <getc@plt+0x1498>
   11e88:	ldr	r2, [r2]
   11e8c:	cmp	r2, #0
   11e90:	beq	11e9c <getc@plt+0x1478>
   11e94:	blx	r2
   11e98:	bl	11e74 <getc@plt+0x1450>
   11e9c:	mov	r3, r0
   11ea0:	ldr	r2, [pc, #24]	; 11ec0 <getc@plt+0x149c>
   11ea4:	ldr	r2, [r2]
   11ea8:	ldr	r1, [pc, #20]	; 11ec4 <getc@plt+0x14a0>
   11eac:	ldr	r0, [pc, #20]	; 11ec8 <getc@plt+0x14a4>
   11eb0:	ldr	r0, [r0]
   11eb4:	bl	109c4 <fprintf@plt>
   11eb8:	b	11e98 <getc@plt+0x1474>
   11ebc:			; <UNDEFINED> instruction: 0x009b6cfc
   11ec0:	addseq	r6, fp, r0, lsl #26
   11ec4:	andeq	r3, r1, r0, lsr r8
   11ec8:	andeq	r4, r2, r8, lsr #1

00011ecc <error@@Base>:
   11ecc:	push	{r4, lr}
   11ed0:	mov	r3, r0
   11ed4:	ldr	r2, [pc, #28]	; 11ef8 <error@@Base+0x2c>
   11ed8:	ldr	r2, [r2]
   11edc:	ldr	r1, [pc, #24]	; 11efc <error@@Base+0x30>
   11ee0:	ldr	r0, [pc, #24]	; 11f00 <error@@Base+0x34>
   11ee4:	ldr	r0, [r0]
   11ee8:	bl	109c4 <fprintf@plt>
   11eec:	ldr	r3, [pc, #16]	; 11f04 <error@@Base+0x38>
   11ef0:	ldr	r0, [r3]
   11ef4:	bl	11cac <getc@plt+0x1288>
   11ef8:	addseq	r6, fp, r0, lsl #26
   11efc:	andeq	r3, r1, r0, asr #16
   11f00:	andeq	r4, r2, r8, lsr #1
   11f04:	andeq	r4, r2, r0, lsr #1
   11f08:	push	{r4, lr}
   11f0c:	bl	108bc <calloc@plt>
   11f10:	cmp	r0, #0
   11f14:	popne	{r4, pc}
   11f18:	ldr	r0, [pc]	; 11f20 <error@@Base+0x54>
   11f1c:	bl	11ecc <error@@Base>
   11f20:	andeq	r3, r1, r8, asr #16
   11f24:	ldr	r3, [pc, #36]	; 11f50 <error@@Base+0x84>
   11f28:	ldrb	r3, [r3, #2]
   11f2c:	cmp	r3, #0
   11f30:	beq	11f38 <error@@Base+0x6c>
   11f34:	bx	lr
   11f38:	push	{r4, lr}
   11f3c:	mov	r2, #1
   11f40:	ldr	r3, [pc, #8]	; 11f50 <error@@Base+0x84>
   11f44:	strb	r2, [r3, #2]
   11f48:	ldr	r0, [pc, #4]	; 11f54 <error@@Base+0x88>
   11f4c:	bl	11ecc <error@@Base>
   11f50:	andseq	r4, r3, ip, lsr #10
   11f54:	andeq	r3, r1, r4, ror #16
   11f58:	push	{lr}		; (str lr, [sp, #-4]!)
   11f5c:	sub	sp, sp, #12
   11f60:	ldr	r3, [pc, #40]	; 11f90 <error@@Base+0xc4>
   11f64:	ldr	r2, [r3]
   11f68:	ldr	r3, [pc, #36]	; 11f94 <error@@Base+0xc8>
   11f6c:	ldr	ip, [r3]
   11f70:	str	r1, [sp]
   11f74:	mov	r3, r0
   11f78:	ldr	r1, [pc, #24]	; 11f98 <error@@Base+0xcc>
   11f7c:	mov	r0, ip
   11f80:	bl	109c4 <fprintf@plt>
   11f84:	ldr	r3, [pc, #16]	; 11f9c <error@@Base+0xd0>
   11f88:	ldr	r0, [r3]
   11f8c:	bl	11cac <getc@plt+0x1288>
   11f90:	addseq	r6, fp, r0, lsl #26
   11f94:	andeq	r4, r2, r8, lsr #1
   11f98:	andeq	r3, r1, r4, ror r8
   11f9c:	andeq	r4, r2, r0, lsr #1
   11fa0:	push	{r4, r5, r6, lr}
   11fa4:	subs	r5, r0, #0
   11fa8:	beq	11fd8 <error@@Base+0x10c>
   11fac:	mov	r4, r1
   11fb0:	mov	r0, r5
   11fb4:	bl	108d4 <fopen@plt>
   11fb8:	cmp	r0, #0
   11fbc:	popne	{r4, r5, r6, pc}
   11fc0:	ldrb	r3, [r4]
   11fc4:	cmp	r3, #119	; 0x77
   11fc8:	beq	11ff0 <error@@Base+0x124>
   11fcc:	mov	r1, r5
   11fd0:	ldr	r0, [pc, #36]	; 11ffc <error@@Base+0x130>
   11fd4:	bl	11f58 <error@@Base+0x8c>
   11fd8:	ldrb	r3, [r1]
   11fdc:	cmp	r3, #114	; 0x72
   11fe0:	ldreq	r3, [pc, #24]	; 12000 <error@@Base+0x134>
   11fe4:	ldrne	r3, [pc, #24]	; 12004 <error@@Base+0x138>
   11fe8:	ldr	r0, [r3]
   11fec:	pop	{r4, r5, r6, pc}
   11ff0:	mov	r1, r5
   11ff4:	ldr	r0, [pc, #12]	; 12008 <error@@Base+0x13c>
   11ff8:	bl	11f58 <error@@Base+0x8c>
   11ffc:	muleq	r1, ip, r8
   12000:	strheq	r4, [r2], -r0
   12004:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   12008:	andeq	r3, r1, r4, lsl #17
   1200c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12010:	sub	sp, sp, #20
   12014:	mov	r5, r0
   12018:	str	r0, [sp, #8]
   1201c:	mov	sl, r1
   12020:	str	r2, [sp, #12]
   12024:	mov	r6, r3
   12028:	ldr	r0, [r1]
   1202c:	bl	11e24 <getc@plt+0x1400>
   12030:	ldr	r3, [pc, #468]	; 1220c <error@@Base+0x340>
   12034:	str	r0, [r3]
   12038:	ldr	r4, [pc, #464]	; 12210 <error@@Base+0x344>
   1203c:	mov	r1, r4
   12040:	mov	r0, #2
   12044:	bl	1097c <__sysv_signal@plt>
   12048:	mov	r1, r4
   1204c:	mov	r0, #15
   12050:	bl	1097c <__sysv_signal@plt>
   12054:	ldr	r8, [r5]
   12058:	cmp	r8, #1
   1205c:	beq	1207c <error@@Base+0x1b0>
   12060:	movle	r7, #0
   12064:	ble	12090 <error@@Base+0x1c4>
   12068:	mov	r7, #0
   1206c:	mov	r3, #1
   12070:	str	r3, [sp, #4]
   12074:	mov	r4, r3
   12078:	b	12128 <error@@Base+0x25c>
   1207c:	ldr	r3, [pc, #400]	; 12214 <error@@Base+0x348>
   12080:	ldrb	r3, [r3, #4]
   12084:	cmp	r3, #0
   12088:	moveq	r7, #0
   1208c:	bne	120a0 <error@@Base+0x1d4>
   12090:	ldr	r3, [sp, #8]
   12094:	str	r7, [r3]
   12098:	add	sp, sp, #20
   1209c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120a0:	ldr	r0, [sp, #12]
   120a4:	bl	11e80 <getc@plt+0x145c>
   120a8:	ldr	r0, [sp, #12]
   120ac:	bl	11e80 <getc@plt+0x145c>
   120b0:	mov	r1, r6
   120b4:	b	121bc <error@@Base+0x2f0>
   120b8:	ldr	r3, [r1, #8]
   120bc:	cmp	r3, #0
   120c0:	beq	120e8 <error@@Base+0x21c>
   120c4:	ldrb	r2, [r5, #2]
   120c8:	cmp	r2, #0
   120cc:	bne	120e8 <error@@Base+0x21c>
   120d0:	ldrb	r2, [r3]
   120d4:	cmp	r2, #0
   120d8:	bne	120f4 <error@@Base+0x228>
   120dc:	mov	r2, #1
   120e0:	strb	r2, [r3]
   120e4:	b	1210c <error@@Base+0x240>
   120e8:	mov	r1, r5
   120ec:	ldr	r0, [pc, #292]	; 12218 <error@@Base+0x34c>
   120f0:	bl	11f58 <error@@Base+0x8c>
   120f4:	mov	r1, r5
   120f8:	ldr	r0, [pc, #284]	; 1221c <error@@Base+0x350>
   120fc:	bl	11f58 <error@@Base+0x8c>
   12100:	add	r3, r7, #1
   12104:	str	r5, [sl, r7, lsl #2]
   12108:	sxth	r7, r3
   1210c:	add	r4, r4, #1
   12110:	sxth	r4, r4
   12114:	str	r4, [sp, #4]
   12118:	ldr	r3, [sp, #8]
   1211c:	ldr	r8, [r3]
   12120:	cmp	r4, r8
   12124:	bge	12090 <error@@Base+0x1c4>
   12128:	lsl	fp, r4, #2
   1212c:	ldr	r5, [sl, r4, lsl #2]
   12130:	ldrb	r3, [r5]
   12134:	cmp	r3, #45	; 0x2d
   12138:	bne	12100 <error@@Base+0x234>
   1213c:	ldrb	r9, [r5, #1]
   12140:	cmp	r9, #0
   12144:	beq	12100 <error@@Base+0x234>
   12148:	mov	r0, r5
   1214c:	bl	109b8 <strlen@plt>
   12150:	mov	r2, r0
   12154:	mov	r1, r5
   12158:	ldr	r0, [pc, #192]	; 12220 <error@@Base+0x354>
   1215c:	bl	10a0c <strncmp@plt>
   12160:	cmp	r0, #0
   12164:	beq	120a8 <error@@Base+0x1dc>
   12168:	ldr	r3, [sp, #4]
   1216c:	add	r3, r3, #1
   12170:	cmp	r3, r8
   12174:	addlt	r3, sl, fp
   12178:	ldrlt	r0, [r3, #4]
   1217c:	movge	r0, #0
   12180:	cmp	r6, #0
   12184:	beq	120e8 <error@@Base+0x21c>
   12188:	ldrb	r2, [r6]
   1218c:	cmp	r9, r2
   12190:	cmpne	r2, #0
   12194:	beq	120b0 <error@@Base+0x1e4>
   12198:	mov	r3, #0
   1219c:	add	r3, r3, #1
   121a0:	sxth	r3, r3
   121a4:	add	r2, r3, r3, lsl #1
   121a8:	add	r1, r6, r2, lsl #2
   121ac:	ldrb	r2, [r6, r2, lsl #2]
   121b0:	cmp	r9, r2
   121b4:	cmpne	r2, #0
   121b8:	bne	1219c <error@@Base+0x2d0>
   121bc:	cmp	r2, #0
   121c0:	beq	120e8 <error@@Base+0x21c>
   121c4:	ldr	r3, [r1, #4]
   121c8:	cmp	r3, #0
   121cc:	beq	120b8 <error@@Base+0x1ec>
   121d0:	ldrb	r2, [r5, #2]
   121d4:	cmp	r2, #0
   121d8:	cmpeq	r0, #0
   121dc:	beq	120b8 <error@@Base+0x1ec>
   121e0:	ldr	r1, [r3]
   121e4:	cmp	r1, #0
   121e8:	bne	120f4 <error@@Base+0x228>
   121ec:	cmp	r2, #0
   121f0:	addne	r0, r5, #2
   121f4:	str	r0, [r3]
   121f8:	ldrb	r3, [r5, #2]
   121fc:	cmp	r3, #0
   12200:	addeq	r4, r4, #1
   12204:	sxtheq	r4, r4
   12208:	b	1210c <error@@Base+0x240>
   1220c:	addseq	r6, fp, r0, lsl #26
   12210:	andeq	r1, r1, r4, lsr #30
   12214:	andeq	r4, r2, r0, lsr #1
   12218:			; <UNDEFINED> instruction: 0x000138b8
   1221c:	andeq	r3, r1, r8, asr #17
   12220:			; <UNDEFINED> instruction: 0x000138b0
   12224:	push	{lr}		; (str lr, [sp, #-4]!)
   12228:	sub	sp, sp, #12
   1222c:	ldr	r3, [pc, #36]	; 12258 <error@@Base+0x38c>
   12230:	ldr	r2, [r3]
   12234:	ldr	r3, [pc, #32]	; 1225c <error@@Base+0x390>
   12238:	ldr	ip, [r3]
   1223c:	str	r1, [sp]
   12240:	mov	r3, r0
   12244:	ldr	r1, [pc, #20]	; 12260 <error@@Base+0x394>
   12248:	mov	r0, ip
   1224c:	bl	109c4 <fprintf@plt>
   12250:	add	sp, sp, #12
   12254:	pop	{pc}		; (ldr pc, [sp], #4)
   12258:	addseq	r6, fp, r0, lsl #26
   1225c:	andeq	r4, r2, r8, lsr #1
   12260:	andeq	r3, r1, r4, ror r8
   12264:	push	{r4, r5, r6, lr}
   12268:	mov	r4, r0
   1226c:	mov	r5, r2
   12270:	uxtb	r6, r1
   12274:	mov	r1, #16
   12278:	mov	r0, #1
   1227c:	bl	11f08 <error@@Base+0x3c>
   12280:	mov	r1, r0
   12284:	strb	r6, [r0, #8]
   12288:	str	r5, [r0, #12]
   1228c:	mov	r0, r4
   12290:	bl	12918 <error@@Base+0xa4c>
   12294:	pop	{r4, r5, r6, pc}
   12298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1229c:	sub	sp, sp, #116	; 0x74
   122a0:	str	r0, [sp]
   122a4:	mov	sl, r2
   122a8:	ldrb	r3, [r2]
   122ac:	mov	r0, r1
   122b0:	adds	r2, r3, #0
   122b4:	movne	r2, #1
   122b8:	cmp	r1, #0
   122bc:	movne	r2, #0
   122c0:	cmp	r2, #0
   122c4:	bne	12328 <error@@Base+0x45c>
   122c8:	ldr	r3, [sp]
   122cc:	ldr	r3, [r3, #4]
   122d0:	str	r3, [sp, #4]
   122d4:	ldr	r1, [pc, #820]	; 12610 <error@@Base+0x744>
   122d8:	bl	11fa0 <error@@Base+0xd4>
   122dc:	mov	r6, r0
   122e0:	ldrb	r3, [sl]
   122e4:	cmp	r3, #0
   122e8:	bne	12334 <error@@Base+0x468>
   122ec:	ldrb	r8, [sl, #1]
   122f0:	ldr	fp, [sl, #4]
   122f4:	cmp	fp, #0
   122f8:	moveq	fp, #94	; 0x5e
   122fc:	mov	r0, r6
   12300:	bl	10a24 <getc@plt>
   12304:	cmn	r0, #1
   12308:	beq	12474 <error@@Base+0x5a8>
   1230c:	ldr	r3, [pc, #768]	; 12614 <error@@Base+0x748>
   12310:	ldrsb	r4, [r3, r0]
   12314:	cmp	r4, #0
   12318:	ble	123cc <error@@Base+0x500>
   1231c:	mov	r7, #0
   12320:	mov	r9, r3
   12324:	b	12414 <error@@Base+0x548>
   12328:	ldr	r1, [pc, #744]	; 12618 <error@@Base+0x74c>
   1232c:	ldr	r0, [pc, #744]	; 1261c <error@@Base+0x750>
   12330:	bl	11f58 <error@@Base+0x8c>
   12334:	mov	r2, r0
   12338:	mov	r1, #99	; 0x63
   1233c:	add	r0, sp, #12
   12340:	bl	108f8 <fgets@plt>
   12344:	cmp	r0, #0
   12348:	beq	12364 <error@@Base+0x498>
   1234c:	mov	r2, #51	; 0x33
   12350:	ldr	r1, [pc, #712]	; 12620 <error@@Base+0x754>
   12354:	add	r0, sp, #12
   12358:	bl	10a0c <strncmp@plt>
   1235c:	cmp	r0, #0
   12360:	beq	12378 <error@@Base+0x4ac>
   12364:	mov	r0, r6
   12368:	bl	1091c <rewind@plt>
   1236c:	mov	r3, #0
   12370:	strb	r3, [sl, #11]
   12374:	b	122ec <error@@Base+0x420>
   12378:	mov	r4, #0
   1237c:	mov	r5, #99	; 0x63
   12380:	ldr	r7, [pc, #668]	; 12624 <error@@Base+0x758>
   12384:	mov	r2, r6
   12388:	mov	r1, r5
   1238c:	add	r0, sp, #12
   12390:	bl	108f8 <fgets@plt>
   12394:	cmp	r0, #0
   12398:	beq	123c4 <error@@Base+0x4f8>
   1239c:	mov	r1, r7
   123a0:	add	r0, sp, #12
   123a4:	bl	108c8 <strcmp@plt>
   123a8:	cmp	r0, #0
   123ac:	addeq	r4, r4, #1
   123b0:	sxtheq	r4, r4
   123b4:	cmp	r4, #1
   123b8:	ble	12384 <error@@Base+0x4b8>
   123bc:	mov	r3, #1
   123c0:	b	12370 <error@@Base+0x4a4>
   123c4:	mov	r3, #1
   123c8:	b	12370 <error@@Base+0x4a4>
   123cc:	ldr	r0, [pc, #596]	; 12628 <error@@Base+0x75c>
   123d0:	bl	11ecc <error@@Base>
   123d4:	ldr	r0, [pc, #592]	; 1262c <error@@Base+0x760>
   123d8:	bl	11ecc <error@@Base>
   123dc:	bl	109f4 <utf8proc_errmsg@plt>
   123e0:	bl	11ecc <error@@Base>
   123e4:	ldr	r2, [sp, #12]
   123e8:	mov	r1, r7
   123ec:	ldr	r0, [sp]
   123f0:	bl	12264 <error@@Base+0x398>
   123f4:	mov	r7, #0
   123f8:	mov	r0, r6
   123fc:	bl	10a24 <getc@plt>
   12400:	cmn	r0, #1
   12404:	beq	12474 <error@@Base+0x5a8>
   12408:	ldrsb	r4, [r9, r0]
   1240c:	cmp	r4, #0
   12410:	ble	123cc <error@@Base+0x500>
   12414:	strb	r0, [sp, #8]
   12418:	cmp	r4, #1
   1241c:	ble	12440 <error@@Base+0x574>
   12420:	sub	r5, r4, #1
   12424:	mov	r3, r6
   12428:	mov	r2, r5
   1242c:	mov	r1, #1
   12430:	add	r0, sp, #9
   12434:	bl	10958 <fread@plt>
   12438:	cmp	r5, r0
   1243c:	bne	123d4 <error@@Base+0x508>
   12440:	add	r2, sp, #12
   12444:	mov	r1, #4
   12448:	add	r0, sp, #8
   1244c:	bl	10964 <utf8proc_iterate@plt>
   12450:	cmp	r0, r4
   12454:	bne	123dc <error@@Base+0x510>
   12458:	cmp	r8, #0
   1245c:	beq	123e4 <error@@Base+0x518>
   12460:	ldr	r3, [sp, #12]
   12464:	cmp	fp, r3
   12468:	moveq	r7, #1
   1246c:	bne	123e4 <error@@Base+0x518>
   12470:	b	123f8 <error@@Base+0x52c>
   12474:	mov	r0, r6
   12478:	bl	11d98 <getc@plt+0x1374>
   1247c:	ldrb	r3, [sl, #9]
   12480:	cmp	r3, #0
   12484:	beq	125c8 <error@@Base+0x6fc>
   12488:	ldr	r3, [sp, #4]
   1248c:	cmp	r3, #0
   12490:	ldrne	r6, [r3, #4]
   12494:	ldreq	r3, [sp]
   12498:	ldreq	r6, [r3]
   1249c:	cmp	r6, #0
   124a0:	beq	125c8 <error@@Base+0x6fc>
   124a4:	mov	r5, r6
   124a8:	mov	r7, #32
   124ac:	mov	r9, #1
   124b0:	mov	r8, #0
   124b4:	b	124e8 <error@@Base+0x61c>
   124b8:	cmp	r4, #160	; 0xa0
   124bc:	beq	124d8 <error@@Base+0x60c>
   124c0:	ldrsh	r3, [r0]
   124c4:	sub	r3, r3, #23
   124c8:	cmp	r3, #2
   124cc:	bhi	124dc <error@@Base+0x610>
   124d0:	mov	r3, r9
   124d4:	b	12518 <error@@Base+0x64c>
   124d8:	str	r7, [r5, #12]
   124dc:	ldr	r5, [r5, #4]
   124e0:	cmp	r5, #0
   124e4:	beq	1255c <error@@Base+0x690>
   124e8:	ldr	r4, [r5, #12]
   124ec:	mov	r0, r4
   124f0:	bl	108ec <utf8proc_get_property@plt>
   124f4:	cmp	r4, #13
   124f8:	bhi	124b8 <error@@Base+0x5ec>
   124fc:	cmp	r4, #11
   12500:	bcs	124d8 <error@@Base+0x60c>
   12504:	cmp	r4, #9
   12508:	beq	124d8 <error@@Base+0x60c>
   1250c:	cmp	r4, #10
   12510:	moveq	r3, r8
   12514:	bne	124c0 <error@@Base+0x5f4>
   12518:	cmp	r3, #0
   1251c:	beq	124dc <error@@Base+0x610>
   12520:	b	124d8 <error@@Base+0x60c>
   12524:	eor	r2, r5, #1
   12528:	cmp	r4, #0
   1252c:	orreq	r2, r2, #1
   12530:	cmp	r2, #0
   12534:	bne	12584 <error@@Base+0x6b8>
   12538:	ldr	r2, [r4, #12]
   1253c:	cmp	r2, #32
   12540:	cmpne	r2, #10
   12544:	beq	12584 <error@@Base+0x6b8>
   12548:	subs	r5, r3, #10
   1254c:	movne	r5, #1
   12550:	mov	r6, r4
   12554:	cmp	r4, #0
   12558:	beq	125c8 <error@@Base+0x6fc>
   1255c:	ldr	r4, [r6, #4]
   12560:	ldr	r3, [r6, #12]
   12564:	cmp	r3, #32
   12568:	beq	12524 <error@@Base+0x658>
   1256c:	eor	r2, r5, #1
   12570:	cmp	r3, #10
   12574:	movne	r2, #0
   12578:	andeq	r2, r2, #1
   1257c:	cmp	r2, #0
   12580:	beq	12548 <error@@Base+0x67c>
   12584:	cmp	r4, #0
   12588:	moveq	r3, #0
   1258c:	andne	r3, r5, #1
   12590:	cmp	r3, #0
   12594:	beq	125b0 <error@@Base+0x6e4>
   12598:	ldr	r3, [r4, #12]
   1259c:	cmp	r3, #32
   125a0:	ldrbeq	r3, [r4, #8]
   125a4:	ldrbeq	r2, [r6, #8]
   125a8:	orreq	r3, r3, r2
   125ac:	strbeq	r3, [r4, #8]
   125b0:	mov	r1, r6
   125b4:	ldr	r0, [sp]
   125b8:	bl	1295c <error@@Base+0xa90>
   125bc:	mov	r0, r6
   125c0:	bl	108e0 <free@plt>
   125c4:	b	12550 <error@@Base+0x684>
   125c8:	ldrb	r3, [sl, #10]
   125cc:	cmp	r3, #0
   125d0:	beq	12608 <error@@Base+0x73c>
   125d4:	ldr	r3, [sp, #4]
   125d8:	cmp	r3, #0
   125dc:	ldrne	r4, [r3, #4]
   125e0:	ldreq	r3, [sp]
   125e4:	ldreq	r4, [r3]
   125e8:	cmp	r4, #0
   125ec:	beq	12608 <error@@Base+0x73c>
   125f0:	ldr	r0, [r4, #12]
   125f4:	bl	10934 <utf8proc_tolower@plt>
   125f8:	str	r0, [r4, #12]
   125fc:	ldr	r4, [r4, #4]
   12600:	cmp	r4, #0
   12604:	bne	125f0 <error@@Base+0x724>
   12608:	add	sp, sp, #116	; 0x74
   1260c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12610:	andeq	r2, r1, r0, asr #23
   12614:	andeq	r3, r2, r8, lsl #28
   12618:	ldrdeq	r3, [r1], -ip
   1261c:	andeq	r3, r1, r8, ror #17
   12620:	strdeq	r3, [r1], -r8
   12624:	andeq	r3, r1, r0, lsr r9
   12628:	andeq	r3, r1, r8, ror #18
   1262c:	andeq	r3, r1, r0, lsl #19
   12630:	push	{r4, lr}
   12634:	bl	10904 <utf8proc_encode_char@plt>
   12638:	cmp	r0, #0
   1263c:	ble	12648 <error@@Base+0x77c>
   12640:	sxtb	r0, r0
   12644:	pop	{r4, pc}
   12648:	ldr	r0, [pc]	; 12650 <error@@Base+0x784>
   1264c:	bl	11ecc <error@@Base>
   12650:	muleq	r1, r8, r9
   12654:	push	{r4, r5, r6, r7, r8, lr}
   12658:	mov	r4, r1
   1265c:	mov	r6, r2
   12660:	uxtb	r0, r0
   12664:	uxtb	r7, r3
   12668:	cmp	r0, #0
   1266c:	moveq	r5, #0
   12670:	bne	126c4 <error@@Base+0x7f8>
   12674:	cmp	r4, #10
   12678:	beq	126d8 <error@@Base+0x80c>
   1267c:	mov	r0, r4
   12680:	bl	108ec <utf8proc_get_property@plt>
   12684:	cmp	r4, #32
   12688:	beq	126f4 <error@@Base+0x828>
   1268c:	ldrsh	r3, [r0]
   12690:	cmp	r3, #1
   12694:	blt	126a8 <error@@Base+0x7dc>
   12698:	cmp	r3, #22
   1269c:	ble	126f4 <error@@Base+0x828>
   126a0:	cmp	r3, #29
   126a4:	beq	126f4 <error@@Base+0x828>
   126a8:	cmp	r4, #255	; 0xff
   126ac:	mov	r2, r4
   126b0:	ldrls	r1, [pc, #136]	; 12740 <error@@Base+0x874>
   126b4:	ldrhi	r1, [pc, #136]	; 12744 <error@@Base+0x878>
   126b8:	add	r0, r6, r5
   126bc:	bl	109e8 <sprintf@plt>
   126c0:	pop	{r4, r5, r6, r7, r8, pc}
   126c4:	mov	r1, r2
   126c8:	mov	r0, #94	; 0x5e
   126cc:	bl	12630 <error@@Base+0x764>
   126d0:	sxth	r5, r0
   126d4:	b	12674 <error@@Base+0x7a8>
   126d8:	ldr	r3, [pc, #104]	; 12748 <error@@Base+0x87c>
   126dc:	ldr	r1, [pc, #104]	; 1274c <error@@Base+0x880>
   126e0:	cmp	r7, #0
   126e4:	moveq	r1, r3
   126e8:	add	r0, r6, r5
   126ec:	bl	109e8 <sprintf@plt>
   126f0:	pop	{r4, r5, r6, r7, r8, pc}
   126f4:	mov	r0, r4
   126f8:	bl	109ac <utf8proc_category@plt>
   126fc:	sub	r0, r0, #6
   12700:	cmp	r0, #2
   12704:	bls	12728 <error@@Base+0x85c>
   12708:	add	r1, r6, r5
   1270c:	mov	r0, r4
   12710:	bl	12630 <error@@Base+0x764>
   12714:	add	r0, r0, r5
   12718:	sxth	r0, r0
   1271c:	mov	r3, #0
   12720:	strb	r3, [r6, r0]
   12724:	pop	{r4, r5, r6, r7, r8, pc}
   12728:	add	r1, r6, r5
   1272c:	ldr	r0, [pc, #28]	; 12750 <error@@Base+0x884>
   12730:	bl	12630 <error@@Base+0x764>
   12734:	add	r5, r0, r5
   12738:	sxth	r5, r5
   1273c:	b	12708 <error@@Base+0x83c>
   12740:			; <UNDEFINED> instruction: 0x000139b8
   12744:	andeq	r3, r1, r0, asr #19
   12748:	muleq	r1, r4, fp
   1274c:			; <UNDEFINED> instruction: 0x000139b0
   12750:	andeq	r2, r0, ip, asr #11
   12754:	push	{r4, r5, r6, r7, lr}
   12758:	sub	sp, sp, #20
   1275c:	mov	r7, r0
   12760:	mov	r0, r1
   12764:	mov	r4, r2
   12768:	ldr	r1, [pc, #160]	; 12810 <error@@Base+0x944>
   1276c:	bl	11fa0 <error@@Base+0xd4>
   12770:	mov	r5, r0
   12774:	cmp	r4, #0
   12778:	beq	127c4 <error@@Base+0x8f8>
   1277c:	mov	r3, r0
   12780:	mov	r2, #55	; 0x37
   12784:	mov	r1, #1
   12788:	ldr	r0, [pc, #132]	; 12814 <error@@Base+0x948>
   1278c:	bl	1094c <fwrite@plt>
   12790:	ldr	r6, [pc, #128]	; 12818 <error@@Base+0x94c>
   12794:	mov	r3, r5
   12798:	mov	r2, #55	; 0x37
   1279c:	mov	r1, #1
   127a0:	mov	r0, r6
   127a4:	bl	1094c <fwrite@plt>
   127a8:	mov	r0, r5
   127ac:	blx	r4
   127b0:	mov	r3, r5
   127b4:	mov	r2, #55	; 0x37
   127b8:	mov	r1, #1
   127bc:	mov	r0, r6
   127c0:	bl	1094c <fwrite@plt>
   127c4:	ldr	r4, [r7]
   127c8:	cmp	r4, #0
   127cc:	beq	12800 <error@@Base+0x934>
   127d0:	mov	r6, #0
   127d4:	mov	r3, r6
   127d8:	add	r2, sp, #4
   127dc:	ldr	r1, [r4, #12]
   127e0:	ldrb	r0, [r4, #8]
   127e4:	bl	12654 <error@@Base+0x788>
   127e8:	mov	r1, r5
   127ec:	add	r0, sp, #4
   127f0:	bl	10a00 <fputs@plt>
   127f4:	ldr	r4, [r4, #4]
   127f8:	cmp	r4, #0
   127fc:	bne	127d4 <error@@Base+0x908>
   12800:	mov	r0, r5
   12804:	bl	11d98 <getc@plt+0x1374>
   12808:	add	sp, sp, #20
   1280c:	pop	{r4, r5, r6, r7, pc}
   12810:	strdeq	r2, [r1], -r4
   12814:	strdeq	r3, [r1], -r8
   12818:	andeq	r3, r1, r0, lsr r9
   1281c:	push	{r4, r5, r6, r7, r8, lr}
   12820:	sub	sp, sp, #8
   12824:	mov	r3, #0
   12828:	str	r3, [sp, #4]
   1282c:	ldrb	r3, [r1]
   12830:	cmp	r3, #0
   12834:	beq	12884 <error@@Base+0x9b8>
   12838:	mov	r6, r0
   1283c:	mov	r4, r1
   12840:	mvn	r5, #0
   12844:	mov	r7, #0
   12848:	add	r2, sp, #4
   1284c:	mov	r1, r5
   12850:	mov	r0, r4
   12854:	bl	10964 <utf8proc_iterate@plt>
   12858:	subs	r8, r0, #0
   1285c:	ble	1288c <error@@Base+0x9c0>
   12860:	ldr	r2, [sp, #4]
   12864:	mov	r1, r7
   12868:	mov	r0, r6
   1286c:	bl	12264 <error@@Base+0x398>
   12870:	ldrb	r3, [r4, r8]!
   12874:	cmp	r3, #0
   12878:	bne	12848 <error@@Base+0x97c>
   1287c:	mov	r0, #1
   12880:	b	12890 <error@@Base+0x9c4>
   12884:	mov	r0, #1
   12888:	b	12890 <error@@Base+0x9c4>
   1288c:	mov	r0, #0
   12890:	add	sp, sp, #8
   12894:	pop	{r4, r5, r6, r7, r8, pc}
   12898:	push	{r4, lr}
   1289c:	mov	r4, r0
   128a0:	str	r1, [r2]
   128a4:	str	r3, [r2, #4]
   128a8:	cmp	r1, #0
   128ac:	strne	r2, [r1, #4]
   128b0:	streq	r2, [r0]
   128b4:	cmp	r3, #0
   128b8:	strne	r2, [r3]
   128bc:	streq	r2, [r0, #4]
   128c0:	ldr	r0, [r0, #8]
   128c4:	cmp	r0, #0
   128c8:	beq	128d8 <error@@Base+0xa0c>
   128cc:	bl	108e0 <free@plt>
   128d0:	mov	r3, #0
   128d4:	str	r3, [r4, #8]
   128d8:	ldr	r3, [r4, #12]
   128dc:	add	r3, r3, #1
   128e0:	str	r3, [r4, #12]
   128e4:	pop	{r4, pc}
   128e8:	mov	r3, #0
   128ec:	str	r3, [r0, #4]
   128f0:	str	r3, [r0]
   128f4:	str	r3, [r0, #8]
   128f8:	str	r3, [r0, #12]
   128fc:	bx	lr
   12900:	push	{r4, lr}
   12904:	ldr	r3, [r0]
   12908:	mov	r2, r1
   1290c:	mov	r1, #0
   12910:	bl	12898 <error@@Base+0x9cc>
   12914:	pop	{r4, pc}
   12918:	push	{r4, lr}
   1291c:	mov	r3, #0
   12920:	mov	r2, r1
   12924:	ldr	r1, [r0, #4]
   12928:	bl	12898 <error@@Base+0x9cc>
   1292c:	pop	{r4, pc}
   12930:	push	{r4, lr}
   12934:	mov	ip, r2
   12938:	mov	r3, r2
   1293c:	mov	r2, r1
   12940:	ldr	r1, [ip]
   12944:	bl	12898 <error@@Base+0x9cc>
   12948:	pop	{r4, pc}
   1294c:	push	{r4, lr}
   12950:	ldr	r3, [r1, #4]
   12954:	bl	12898 <error@@Base+0x9cc>
   12958:	pop	{r4, pc}
   1295c:	push	{r4, lr}
   12960:	mov	r4, r0
   12964:	ldr	r3, [r1]
   12968:	cmp	r3, #0
   1296c:	ldrne	r2, [r1, #4]
   12970:	strne	r2, [r3, #4]
   12974:	ldreq	r3, [r1, #4]
   12978:	streq	r3, [r0]
   1297c:	ldr	r3, [r1, #4]
   12980:	cmp	r3, #0
   12984:	ldrne	r2, [r1]
   12988:	strne	r2, [r3]
   1298c:	ldreq	r3, [r1]
   12990:	streq	r3, [r0, #4]
   12994:	mov	r3, #0
   12998:	str	r3, [r1, #4]
   1299c:	str	r3, [r1]
   129a0:	ldr	r0, [r0, #8]
   129a4:	cmp	r0, r3
   129a8:	beq	129b8 <error@@Base+0xaec>
   129ac:	bl	108e0 <free@plt>
   129b0:	mov	r3, #0
   129b4:	str	r3, [r4, #8]
   129b8:	ldr	r3, [r4, #12]
   129bc:	sub	r3, r3, #1
   129c0:	str	r3, [r4, #12]
   129c4:	pop	{r4, pc}
   129c8:	ldr	r3, [r0, #8]
   129cc:	cmp	r3, #0
   129d0:	bxne	lr
   129d4:	ldr	r3, [r0, #12]
   129d8:	cmp	r3, #0
   129dc:	bxeq	lr
   129e0:	push	{r4, lr}
   129e4:	mov	r4, r0
   129e8:	mov	r1, #4
   129ec:	mov	r0, r3
   129f0:	bl	11f08 <error@@Base+0x3c>
   129f4:	str	r0, [r4, #8]
   129f8:	ldr	r3, [r4]
   129fc:	cmp	r3, #0
   12a00:	popeq	{r4, pc}
   12a04:	mov	r2, #0
   12a08:	ldr	r1, [r4, #8]
   12a0c:	str	r3, [r1, r2]
   12a10:	ldr	r3, [r3, #4]
   12a14:	add	r2, r2, #4
   12a18:	cmp	r3, #0
   12a1c:	bne	12a08 <error@@Base+0xb3c>
   12a20:	pop	{r4, pc}
   12a24:	push	{r4, r5, r6, lr}
   12a28:	mov	r5, r0
   12a2c:	mov	r6, r1
   12a30:	ldr	r4, [r0]
   12a34:	cmp	r4, #0
   12a38:	popeq	{r4, r5, r6, pc}
   12a3c:	mov	r1, r4
   12a40:	mov	r0, r5
   12a44:	bl	1295c <error@@Base+0xa90>
   12a48:	mov	r0, r4
   12a4c:	blx	r6
   12a50:	ldr	r4, [r5]
   12a54:	cmp	r4, #0
   12a58:	bne	12a3c <error@@Base+0xb70>
   12a5c:	pop	{r4, r5, r6, pc}
   12a60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a64:	mov	r7, r0
   12a68:	ldr	r6, [pc, #72]	; 12ab8 <error@@Base+0xbec>
   12a6c:	ldr	r5, [pc, #72]	; 12abc <error@@Base+0xbf0>
   12a70:	add	r6, pc, r6
   12a74:	add	r5, pc, r5
   12a78:	sub	r6, r6, r5
   12a7c:	mov	r8, r1
   12a80:	mov	r9, r2
   12a84:	bl	1089c <calloc@plt-0x20>
   12a88:	asrs	r6, r6, #2
   12a8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a90:	mov	r4, #0
   12a94:	add	r4, r4, #1
   12a98:	ldr	r3, [r5], #4
   12a9c:	mov	r2, r9
   12aa0:	mov	r1, r8
   12aa4:	mov	r0, r7
   12aa8:	blx	r3
   12aac:	cmp	r6, r4
   12ab0:	bne	12a94 <error@@Base+0xbc8>
   12ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ab8:	andeq	r1, r1, r8, lsl #7
   12abc:	andeq	r1, r1, r0, lsl #7
   12ac0:	bx	lr

Disassembly of section .fini:

00012ac4 <.fini>:
   12ac4:	push	{r3, lr}
   12ac8:	pop	{r3, pc}
