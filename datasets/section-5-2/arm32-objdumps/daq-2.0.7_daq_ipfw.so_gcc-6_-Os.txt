
../repos/daq-2.0.7/os-daq-modules/.libs/daq_ipfw.so:     file format elf32-littlearm


Disassembly of section .init:

00000660 <_init>:
 660:	push	{r3, lr}
 664:	bl	788 <call_weak_fn>
 668:	pop	{r3, pc}

Disassembly of section .plt:

0000066c <.plt>:
 66c:	push	{lr}		; (str lr, [sp, #-4]!)
 670:	ldr	lr, [pc, #4]	; 67c <.plt+0x10>
 674:	add	lr, pc, lr
 678:	ldr	pc, [lr, #8]!
 67c:	.word	0x00011984

00000680 <calloc@plt>:
 680:	add	ip, pc, #0, 12
 684:	add	ip, ip, #69632	; 0x11000
 688:	ldr	pc, [ip, #2436]!	; 0x984

0000068c <strcmp@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #69632	; 0x11000
 694:	ldr	pc, [ip, #2428]!	; 0x97c

00000698 <__cxa_finalize@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2420]!	; 0x974

000006a4 <strtol@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2412]!	; 0x96c

000006b0 <free@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2404]!	; 0x964

000006bc <memcpy@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2396]!	; 0x95c

000006c8 <select@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2388]!	; 0x954

000006d4 <recvfrom@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2380]!	; 0x94c

000006e0 <strdup@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2372]!	; 0x944

000006ec <gettimeofday@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2364]!	; 0x93c

000006f8 <malloc@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2356]!	; 0x934

00000704 <sfbpf_compile@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2348]!	; 0x92c

00000710 <strerror@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2340]!	; 0x924

0000071c <__gmon_start__@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2332]!	; 0x91c

00000728 <__errno_location@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2324]!	; 0x914

00000734 <snprintf@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2316]!	; 0x90c

00000740 <bind@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2308]!	; 0x904

0000074c <memset@plt>:
 74c:	add	ip, pc, #0, 12
 750:	add	ip, ip, #69632	; 0x11000
 754:	ldr	pc, [ip, #2300]!	; 0x8fc

00000758 <sendto@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2292]!	; 0x8f4

00000764 <sfbpf_filter@plt>:
 764:	add	ip, pc, #0, 12
 768:	add	ip, ip, #69632	; 0x11000
 76c:	ldr	pc, [ip, #2284]!	; 0x8ec

00000770 <socket@plt>:
 770:	add	ip, pc, #0, 12
 774:	add	ip, ip, #69632	; 0x11000
 778:	ldr	pc, [ip, #2276]!	; 0x8e4

0000077c <close@plt>:
 77c:	add	ip, pc, #0, 12
 780:	add	ip, ip, #69632	; 0x11000
 784:	ldr	pc, [ip, #2268]!	; 0x8dc

Disassembly of section .text:

00000788 <call_weak_fn>:
     788:	ldr	r3, [pc, #20]	; 7a4 <call_weak_fn+0x1c>
     78c:	ldr	r2, [pc, #20]	; 7a8 <call_weak_fn+0x20>
     790:	add	r3, pc, r3
     794:	ldr	r2, [r3, r2]
     798:	cmp	r2, #0
     79c:	bxeq	lr
     7a0:	b	71c <__gmon_start__@plt>
     7a4:	.word	0x00011868
     7a8:	.word	0x0000006c

000007ac <deregister_tm_clones>:
     7ac:	ldr	r3, [pc, #52]	; 7e8 <deregister_tm_clones+0x3c>
     7b0:	ldr	r0, [pc, #52]	; 7ec <deregister_tm_clones+0x40>
     7b4:	add	r3, pc, r3
     7b8:	add	r0, pc, r0
     7bc:	add	r3, r3, #3
     7c0:	sub	r3, r3, r0
     7c4:	cmp	r3, #6
     7c8:	ldr	r3, [pc, #32]	; 7f0 <deregister_tm_clones+0x44>
     7cc:	add	r3, pc, r3
     7d0:	bxls	lr
     7d4:	ldr	r2, [pc, #24]	; 7f4 <deregister_tm_clones+0x48>
     7d8:	ldr	r3, [r3, r2]
     7dc:	cmp	r3, #0
     7e0:	bxeq	lr
     7e4:	bx	r3
     7e8:	.word	0x00011928
     7ec:	.word	0x00011924
     7f0:	.word	0x0001182c
     7f4:	.word	0x00000068

000007f8 <register_tm_clones>:
     7f8:	ldr	r1, [pc, #56]	; 838 <register_tm_clones+0x40>
     7fc:	ldr	r0, [pc, #56]	; 83c <register_tm_clones+0x44>
     800:	add	r1, pc, r1
     804:	add	r0, pc, r0
     808:	sub	r1, r1, r0
     80c:	ldr	r3, [pc, #44]	; 840 <register_tm_clones+0x48>
     810:	asr	r1, r1, #2
     814:	add	r3, pc, r3
     818:	add	r1, r1, r1, lsr #31
     81c:	asrs	r1, r1, #1
     820:	bxeq	lr
     824:	ldr	r2, [pc, #24]	; 844 <register_tm_clones+0x4c>
     828:	ldr	r3, [r3, r2]
     82c:	cmp	r3, #0
     830:	bxeq	lr
     834:	bx	r3
     838:	.word	0x000118dc
     83c:	.word	0x000118d8
     840:	.word	0x000117e4
     844:	.word	0x00000074

00000848 <__do_global_dtors_aux>:
     848:	ldr	r3, [pc, #76]	; 89c <__do_global_dtors_aux+0x54>
     84c:	ldr	r2, [pc, #76]	; 8a0 <__do_global_dtors_aux+0x58>
     850:	add	r3, pc, r3
     854:	add	r2, pc, r2
     858:	ldrb	r3, [r3]
     85c:	cmp	r3, #0
     860:	bxne	lr
     864:	ldr	r3, [pc, #56]	; 8a4 <__do_global_dtors_aux+0x5c>
     868:	push	{r4, lr}
     86c:	ldr	r3, [r2, r3]
     870:	cmp	r3, #0
     874:	beq	884 <__do_global_dtors_aux+0x3c>
     878:	ldr	r3, [pc, #40]	; 8a8 <__do_global_dtors_aux+0x60>
     87c:	ldr	r0, [pc, r3]
     880:	bl	698 <__cxa_finalize@plt>
     884:	bl	7ac <deregister_tm_clones>
     888:	ldr	r3, [pc, #28]	; 8ac <__do_global_dtors_aux+0x64>
     88c:	mov	r2, #1
     890:	add	r3, pc, r3
     894:	strb	r2, [r3]
     898:	pop	{r4, pc}
     89c:	.word	0x0001188c
     8a0:	.word	0x000117a4
     8a4:	.word	0x00000064
     8a8:	.word	0x000117f4
     8ac:	.word	0x0001184c

000008b0 <frame_dummy>:
     8b0:	ldr	r0, [pc, #56]	; 8f0 <frame_dummy+0x40>
     8b4:	ldr	r3, [pc, #56]	; 8f4 <frame_dummy+0x44>
     8b8:	add	r0, pc, r0
     8bc:	ldr	r2, [r0]
     8c0:	add	r3, pc, r3
     8c4:	cmp	r2, #0
     8c8:	bne	8d0 <frame_dummy+0x20>
     8cc:	b	7f8 <register_tm_clones>
     8d0:	ldr	r2, [pc, #32]	; 8f8 <frame_dummy+0x48>
     8d4:	ldr	r3, [r3, r2]
     8d8:	cmp	r3, #0
     8dc:	beq	8cc <frame_dummy+0x1c>
     8e0:	push	{r4, lr}
     8e4:	blx	r3
     8e8:	pop	{r4, lr}
     8ec:	b	7f8 <register_tm_clones>
     8f0:	.word	0x00011644
     8f4:	.word	0x00011738
     8f8:	.word	0x00000070

000008fc <ipfw_daq_breakloop>:
     8fc:	mov	r3, #0
     900:	str	r3, [r0, #12]
     904:	mov	r0, r3
     908:	bx	lr

0000090c <ipfw_daq_check_status>:
     90c:	ldr	r0, [r0, #316]	; 0x13c
     910:	bx	lr

00000914 <ipfw_daq_get_stats>:
     914:	mov	r3, r1
     918:	push	{r4, lr}
     91c:	add	r1, r0, #320	; 0x140
     920:	mov	r2, #96	; 0x60
     924:	mov	r0, r3
     928:	bl	6bc <memcpy@plt>
     92c:	mov	r0, #0
     930:	pop	{r4, pc}

00000934 <ipfw_daq_get_snaplen>:
     934:	ldr	r0, [r0, #24]
     938:	bx	lr

0000093c <ipfw_daq_get_capabilities>:
     93c:	ldr	r0, [pc]	; 944 <ipfw_daq_get_capabilities+0x8>
     940:	bx	lr
     944:	.word	0x000002e7

00000948 <ipfw_daq_get_datalink_type>:
     948:	mov	r0, #228	; 0xe4
     94c:	bx	lr

00000950 <ipfw_daq_get_errbuf>:
     950:	add	r0, r0, #36	; 0x24
     954:	bx	lr

00000958 <ipfw_daq_get_device_index>:
     958:	mvn	r0, #3
     95c:	bx	lr

00000960 <ipfw_daq_set_errbuf>:
     960:	subs	r3, r1, #0
     964:	add	r0, r0, #36	; 0x24
     968:	ldreq	r3, [pc, #16]	; 980 <ipfw_daq_set_errbuf+0x20>
     96c:	addeq	r3, pc, r3
     970:	ldr	r2, [pc, #12]	; 984 <ipfw_daq_set_errbuf+0x24>
     974:	mov	r1, #256	; 0x100
     978:	add	r2, pc, r2
     97c:	b	734 <snprintf@plt>
     980:	.word	0x00000935
     984:	.word	0x00000826

00000988 <ipfw_daq_reset_stats>:
     988:	mov	r2, #96	; 0x60
     98c:	mov	r1, #0
     990:	add	r0, r0, #320	; 0x140
     994:	b	74c <memset@plt>

00000998 <ipfw_daq_shutdown>:
     998:	push	{r4, lr}
     99c:	mov	r4, r0
     9a0:	ldr	r0, [r0, #32]
     9a4:	cmp	r0, #0
     9a8:	beq	9b0 <ipfw_daq_shutdown+0x18>
     9ac:	bl	6b0 <free@plt>
     9b0:	ldr	r0, [r4, #28]
     9b4:	cmp	r0, #0
     9b8:	beq	9c0 <ipfw_daq_shutdown+0x28>
     9bc:	bl	6b0 <free@plt>
     9c0:	mov	r0, r4
     9c4:	pop	{r4, lr}
     9c8:	b	6b0 <free@plt>

000009cc <ipfw_daq_stop>:
     9cc:	push	{r4, lr}
     9d0:	mov	r4, r0
     9d4:	ldr	r0, [r0]
     9d8:	bl	77c <close@plt>
     9dc:	mvn	r3, #0
     9e0:	str	r3, [r4]
     9e4:	mov	r3, #3
     9e8:	str	r3, [r4, #316]	; 0x13c
     9ec:	mov	r0, #0
     9f0:	pop	{r4, pc}

000009f4 <ipfw_daq_set_filter>:
     9f4:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     9f8:	mov	r2, #1
     9fc:	mov	r3, #0
     a00:	add	r5, sp, #8
     a04:	stm	sp, {r2, r3}
     a08:	mov	r4, r0
     a0c:	mov	r3, r1
     a10:	mov	r6, r1
     a14:	mov	r2, r5
     a18:	mov	r1, #228	; 0xe4
     a1c:	ldr	r0, [r0, #24]
     a20:	bl	704 <sfbpf_compile@plt>
     a24:	cmp	r0, #0
     a28:	mvnlt	r0, #0
     a2c:	blt	a6c <ipfw_daq_set_filter+0x78>
     a30:	ldr	r0, [r4, #32]
     a34:	cmp	r0, #0
     a38:	beq	a40 <ipfw_daq_set_filter+0x4c>
     a3c:	bl	6b0 <free@plt>
     a40:	ldr	r0, [r4, #296]	; 0x128
     a44:	cmp	r0, #0
     a48:	beq	a50 <ipfw_daq_set_filter+0x5c>
     a4c:	bl	6b0 <free@plt>
     a50:	mov	r0, r6
     a54:	bl	6e0 <strdup@plt>
     a58:	add	r4, r4, #292	; 0x124
     a5c:	str	r0, [r4, #-260]	; 0xfffffefc
     a60:	ldm	r5, {r0, r1}
     a64:	stm	r4, {r0, r1}
     a68:	mov	r0, #0
     a6c:	add	sp, sp, #16
     a70:	pop	{r4, r5, r6, pc}

00000a74 <ipfw_daq_forward.isra.0>:
     a74:	mov	r3, r0
     a78:	push	{r0, r1, r2, r4, r5, lr}
     a7c:	mov	r5, r0
     a80:	ldr	r0, [r3], #300	; 0x12c
     a84:	mov	ip, #16
     a88:	stm	sp, {r3, ip}
     a8c:	mov	r3, #0
     a90:	bl	758 <sendto@plt>
     a94:	cmn	r0, #1
     a98:	movne	r4, #0
     a9c:	bne	ad0 <ipfw_daq_forward.isra.0+0x5c>
     aa0:	mov	r4, r0
     aa4:	bl	728 <__errno_location@plt>
     aa8:	ldr	r0, [r0]
     aac:	bl	710 <strerror@plt>
     ab0:	ldr	r3, [pc, #36]	; adc <ipfw_daq_forward.isra.0+0x68>
     ab4:	ldr	r2, [pc, #36]	; ae0 <ipfw_daq_forward.isra.0+0x6c>
     ab8:	add	r3, pc, r3
     abc:	add	r2, pc, r2
     ac0:	mov	r1, #256	; 0x100
     ac4:	str	r0, [sp]
     ac8:	add	r0, r5, #36	; 0x24
     acc:	bl	734 <snprintf@plt>
     ad0:	mov	r0, r4
     ad4:	add	sp, sp, #12
     ad8:	pop	{r4, r5, pc}
     adc:	.word	0x00000670
     ae0:	.word	0x000006e5

00000ae4 <ipfw_daq_acquire>:
     ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ae8:	sub	sp, sp, #212	; 0xd4
     aec:	ldr	r7, [pc, #732]	; dd0 <ipfw_daq_acquire+0x2ec>
     af0:	cmp	r1, #0
     af4:	mov	r4, r0
     af8:	add	r8, sp, #80	; 0x50
     afc:	add	r7, pc, r7
     b00:	mov	r6, #0
     b04:	mvneq	r1, #0
     b08:	str	r2, [sp, #12]
     b0c:	str	r6, [sp, #24]
     b10:	str	r1, [r0, #12]
     b14:	mov	r5, #0
     b18:	add	fp, sp, #20
     b1c:	ldr	r3, [r4, #12]
     b20:	cmp	r6, r3
     b24:	movge	r2, #0
     b28:	movlt	r2, #1
     b2c:	orrs	r3, r2, r3, lsr #31
     b30:	beq	bbc <ipfw_daq_acquire+0xd8>
     b34:	mov	r3, #0
     b38:	str	r5, [r8, r3, lsl #2]
     b3c:	add	r3, r3, #1
     b40:	cmp	r3, #32
     b44:	bne	b38 <ipfw_daq_acquire+0x54>
     b48:	ldr	r0, [r4]
     b4c:	add	r2, sp, #208	; 0xd0
     b50:	cmp	r0, #0
     b54:	add	r3, r0, #31
     b58:	movge	r3, r0
     b5c:	and	r1, r0, #31
     b60:	asr	r3, r3, #5
     b64:	mov	r9, #1
     b68:	add	r3, r2, r3, lsl #2
     b6c:	rsbs	r2, r0, #0
     b70:	and	r2, r2, #31
     b74:	rsbpl	r1, r2, #0
     b78:	ldr	r2, [r3, #-128]	; 0xffffff80
     b7c:	add	r0, r0, r9
     b80:	orr	r2, r2, r9, lsl r1
     b84:	str	r2, [r3, #-128]	; 0xffffff80
     b88:	ldr	r3, [r4, #20]
     b8c:	str	fp, [sp]
     b90:	str	r3, [sp, #20]
     b94:	mov	r2, #0
     b98:	mov	r3, r5
     b9c:	mov	r1, r8
     ba0:	bl	6c8 <select@plt>
     ba4:	cmp	r0, #0
     ba8:	bge	bf8 <ipfw_daq_acquire+0x114>
     bac:	bl	728 <__errno_location@plt>
     bb0:	ldr	r0, [r0]
     bb4:	cmp	r0, #4
     bb8:	bne	bc8 <ipfw_daq_acquire+0xe4>
     bbc:	mov	r0, #0
     bc0:	add	sp, sp, #212	; 0xd4
     bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     bc8:	bl	710 <strerror@plt>
     bcc:	ldr	r3, [pc, #512]	; dd4 <ipfw_daq_acquire+0x2f0>
     bd0:	ldr	r2, [pc, #512]	; dd8 <ipfw_daq_acquire+0x2f4>
     bd4:	add	r3, pc, r3
     bd8:	add	r3, r3, #17
     bdc:	add	r2, pc, r2
     be0:	str	r0, [sp]
     be4:	mov	r1, #256	; 0x100
     be8:	add	r0, r4, #36	; 0x24
     bec:	bl	734 <snprintf@plt>
     bf0:	mvn	r0, #0
     bf4:	b	bc0 <ipfw_daq_acquire+0xdc>
     bf8:	ldr	r0, [r4]
     bfc:	add	r2, sp, #208	; 0xd0
     c00:	cmp	r0, #0
     c04:	add	r3, r0, #31
     c08:	movge	r3, r0
     c0c:	rsbs	r1, r0, #0
     c10:	asr	r3, r3, #5
     c14:	and	r1, r1, #31
     c18:	add	r3, r2, r3, lsl #2
     c1c:	and	r2, r0, #31
     c20:	ldr	r3, [r3, #-128]	; 0xffffff80
     c24:	rsbpl	r2, r1, #0
     c28:	ands	r3, r3, r9, lsl r2
     c2c:	beq	b1c <ipfw_daq_acquire+0x38>
     c30:	add	r3, sp, #208	; 0xd0
     c34:	mov	r2, #16
     c38:	str	r2, [r3, #-192]!	; 0xffffff40
     c3c:	add	r2, r4, #300	; 0x12c
     c40:	ldr	r1, [r4, #28]
     c44:	stm	sp, {r2, r3}
     c48:	mov	r3, #0
     c4c:	ldr	r2, [r4, #24]
     c50:	bl	6d4 <recvfrom@plt>
     c54:	cmn	r0, #1
     c58:	mov	r5, r0
     c5c:	bne	c90 <ipfw_daq_acquire+0x1ac>
     c60:	bl	728 <__errno_location@plt>
     c64:	ldr	r0, [r0]
     c68:	cmp	r0, #4
     c6c:	beq	c90 <ipfw_daq_acquire+0x1ac>
     c70:	bl	710 <strerror@plt>
     c74:	ldr	r3, [pc, #352]	; ddc <ipfw_daq_acquire+0x2f8>
     c78:	ldr	r2, [pc, #352]	; de0 <ipfw_daq_acquire+0x2fc>
     c7c:	add	r3, pc, r3
     c80:	add	r3, r3, #17
     c84:	add	r2, pc, r2
     c88:	str	r0, [sp]
     c8c:	b	be4 <ipfw_daq_acquire+0x100>
     c90:	mov	r9, #0
     c94:	mov	r1, r9
     c98:	str	r9, [r7]
     c9c:	str	r9, [r7, #4]
     ca0:	mov	r0, r7
     ca4:	bl	6ec <gettimeofday@plt>
     ca8:	ldr	r3, [r7]
     cac:	add	r1, r4, #320	; 0x140
     cb0:	str	r3, [sp, #28]
     cb4:	ldr	r3, [r7, #4]
     cb8:	str	r5, [sp, #36]	; 0x24
     cbc:	str	r3, [sp, #32]
     cc0:	mvn	r3, #0
     cc4:	str	r3, [sp, #44]	; 0x2c
     cc8:	str	r3, [sp, #48]	; 0x30
     ccc:	str	r3, [sp, #52]	; 0x34
     cd0:	str	r3, [sp, #56]	; 0x38
     cd4:	ldrd	r2, [r1]
     cd8:	str	r5, [sp, #40]	; 0x28
     cdc:	str	r9, [sp, #60]	; 0x3c
     ce0:	adds	sl, r2, #1
     ce4:	adc	fp, r3, #0
     ce8:	mov	r2, sl
     cec:	mov	r3, fp
     cf0:	strh	r9, [sp, #76]	; 0x4c
     cf4:	strd	r2, [r1]
     cf8:	ldr	r0, [r4, #296]	; 0x128
     cfc:	cmp	r0, r9
     d00:	beq	d74 <ipfw_daq_acquire+0x290>
     d04:	mov	r3, r5
     d08:	mov	r2, r5
     d0c:	ldr	r1, [r4, #28]
     d10:	bl	764 <sfbpf_filter@plt>
     d14:	cmp	r0, #0
     d18:	bne	d74 <ipfw_daq_acquire+0x290>
     d1c:	add	r1, r4, #352	; 0x160
     d20:	ldrd	r2, [r1, #-8]
     d24:	adds	sl, r2, #1
     d28:	adc	fp, r3, #0
     d2c:	mov	r2, sl
     d30:	mov	r3, fp
     d34:	strd	r2, [r1, #-8]
     d38:	ldr	r3, [r4, #16]
     d3c:	cmp	r3, #0
     d40:	bne	d5c <ipfw_daq_acquire+0x278>
     d44:	ldr	r3, [pc, #152]	; de4 <ipfw_daq_acquire+0x300>
     d48:	add	r3, pc, r3
     d4c:	add	r0, r3, r0, lsl #2
     d50:	ldr	r3, [r0, #36]	; 0x24
     d54:	cmp	r3, #0
     d58:	beq	d6c <ipfw_daq_acquire+0x288>
     d5c:	ldr	r2, [sp, #40]	; 0x28
     d60:	ldr	r1, [r4, #28]
     d64:	mov	r0, r4
     d68:	bl	a74 <ipfw_daq_forward.isra.0>
     d6c:	add	r6, r6, #1
     d70:	b	b14 <ipfw_daq_acquire+0x30>
     d74:	ldr	r2, [r4, #28]
     d78:	add	r1, sp, #28
     d7c:	ldr	r3, [sp, #12]
     d80:	mov	r0, #0
     d84:	blx	r3
     d88:	cmp	r0, #6
     d8c:	movhi	r0, #1
     d90:	add	r1, r4, r0, lsl #3
     d94:	add	r1, r1, #368	; 0x170
     d98:	ldrd	r2, [r1, #-8]
     d9c:	adds	sl, r2, #1
     da0:	adc	fp, r3, #0
     da4:	mov	r2, sl
     da8:	mov	r3, fp
     dac:	strd	r2, [r1, #-8]
     db0:	add	r1, r4, #336	; 0x150
     db4:	ldrd	r2, [r1]
     db8:	adds	sl, r2, #1
     dbc:	adc	fp, r3, #0
     dc0:	mov	r2, sl
     dc4:	mov	r3, fp
     dc8:	strd	r2, [r1]
     dcc:	b	d38 <ipfw_daq_acquire+0x254>
     dd0:	.word	0x000115e4
     dd4:	.word	0x00000554
     dd8:	.word	0x000005ea
     ddc:	.word	0x000004ac
     de0:	.word	0x00000567
     de4:	.word	0x000003e0

00000de8 <ipfw_daq_inject>:
     de8:	push	{r4, r5, r6, lr}
     dec:	mov	r1, r2
     df0:	mov	r2, r3
     df4:	mov	r4, r0
     df8:	bl	a74 <ipfw_daq_forward.isra.0>
     dfc:	cmp	r0, #0
     e00:	popne	{r4, r5, r6, pc}
     e04:	add	r3, r4, #352	; 0x160
     e08:	ldrd	r4, [r3]
     e0c:	adds	r4, r4, #1
     e10:	adc	r5, r5, #0
     e14:	strd	r4, [r3]
     e18:	pop	{r4, r5, r6, pc}

00000e1c <ipfw_daq_start>:
     e1c:	push	{r0, r1, r2, r4, r5, lr}
     e20:	mov	r5, r0
     e24:	mov	r2, #254	; 0xfe
     e28:	mov	r1, #3
     e2c:	ldr	r0, [r0, #8]
     e30:	bl	770 <socket@plt>
     e34:	cmn	r0, #1
     e38:	str	r0, [r5]
     e3c:	bne	e80 <ipfw_daq_start+0x64>
     e40:	mov	r4, r0
     e44:	bl	728 <__errno_location@plt>
     e48:	ldr	r0, [r0]
     e4c:	bl	710 <strerror@plt>
     e50:	ldr	r3, [pc, #116]	; ecc <ipfw_daq_start+0xb0>
     e54:	ldr	r2, [pc, #116]	; ed0 <ipfw_daq_start+0xb4>
     e58:	add	r3, pc, r3
     e5c:	add	r3, r3, #64	; 0x40
     e60:	add	r2, pc, r2
     e64:	str	r0, [sp]
     e68:	mov	r1, #256	; 0x100
     e6c:	add	r0, r5, #36	; 0x24
     e70:	bl	734 <snprintf@plt>
     e74:	mov	r0, r4
     e78:	add	sp, sp, #12
     e7c:	pop	{r4, r5, pc}
     e80:	mov	r2, #16
     e84:	add	r1, r5, #300	; 0x12c
     e88:	bl	740 <bind@plt>
     e8c:	cmn	r0, #1
     e90:	movne	r3, #2
     e94:	mov	r4, r0
     e98:	strne	r3, [r5, #316]	; 0x13c
     e9c:	movne	r4, #0
     ea0:	bne	e74 <ipfw_daq_start+0x58>
     ea4:	bl	728 <__errno_location@plt>
     ea8:	ldr	r0, [r0]
     eac:	bl	710 <strerror@plt>
     eb0:	ldr	r3, [pc, #28]	; ed4 <ipfw_daq_start+0xb8>
     eb4:	ldr	r2, [pc, #28]	; ed8 <ipfw_daq_start+0xbc>
     eb8:	add	r3, pc, r3
     ebc:	add	r3, r3, #64	; 0x40
     ec0:	add	r2, pc, r2
     ec4:	str	r0, [sp]
     ec8:	b	e68 <ipfw_daq_start+0x4c>
     ecc:	.word	0x000002d0
     ed0:	.word	0x000003b2
     ed4:	.word	0x00000270
     ed8:	.word	0x00000377

00000edc <ipfw_daq_initialize>:
     edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     ee0:	mov	r8, r0
     ee4:	sub	sp, sp, #36	; 0x24
     ee8:	mov	r9, r1
     eec:	mov	r0, #1
     ef0:	mov	r1, #416	; 0x1a0
     ef4:	mov	r6, r2
     ef8:	mov	r7, r3
     efc:	bl	680 <calloc@plt>
     f00:	subs	r4, r0, #0
     f04:	bne	f34 <ipfw_daq_initialize+0x58>
     f08:	ldr	r3, [pc, #484]	; 10f4 <ipfw_daq_initialize+0x218>
     f0c:	ldr	r2, [pc, #484]	; 10f8 <ipfw_daq_initialize+0x21c>
     f10:	add	r3, pc, r3
     f14:	add	r3, r3, #79	; 0x4f
     f18:	add	r2, pc, r2
     f1c:	mov	r1, r7
     f20:	mov	r0, r6
     f24:	bl	734 <snprintf@plt>
     f28:	mvn	r0, #1
     f2c:	add	sp, sp, #36	; 0x24
     f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f34:	mov	r3, #2
     f38:	mov	r2, #8000	; 0x1f40
     f3c:	ldr	r5, [r8, #20]
     f40:	stmib	r4, {r2, r3}
     f44:	ldr	fp, [pc, #432]	; 10fc <ipfw_daq_initialize+0x220>
     f48:	ldr	r3, [pc, #432]	; 1100 <ipfw_daq_initialize+0x224>
     f4c:	add	sl, sp, #28
     f50:	add	r3, pc, r3
     f54:	str	r3, [sp, #12]
     f58:	cmp	r5, #0
     f5c:	bne	fe4 <ipfw_daq_initialize+0x108>
     f60:	ldr	r0, [r8, #4]
     f64:	ldr	r3, [pc, #408]	; 1104 <ipfw_daq_initialize+0x228>
     f68:	cmp	r0, #0
     f6c:	moveq	r0, r3
     f70:	ldr	r3, [r8, #8]
     f74:	add	r2, r4, #300	; 0x12c
     f78:	str	r3, [r4, #20]
     f7c:	ldr	r3, [r8, #12]
     f80:	clz	r3, r3
     f84:	lsr	r3, r3, #5
     f88:	str	r3, [r4, #16]
     f8c:	ldr	r3, [r4, #8]
     f90:	str	r0, [r4, #24]
     f94:	strh	r3, [r2]
     f98:	ldr	r3, [r4, #4]
     f9c:	str	r5, [r4, #304]	; 0x130
     fa0:	rev16	r3, r3
     fa4:	strh	r3, [r2, #2]
     fa8:	bl	6f8 <malloc@plt>
     fac:	cmp	r0, #0
     fb0:	str	r0, [r4, #28]
     fb4:	bne	10d8 <ipfw_daq_initialize+0x1fc>
     fb8:	ldr	r3, [pc, #328]	; 1108 <ipfw_daq_initialize+0x22c>
     fbc:	ldr	r2, [pc, #328]	; 110c <ipfw_daq_initialize+0x230>
     fc0:	add	r3, pc, r3
     fc4:	add	r3, r3, #79	; 0x4f
     fc8:	add	r2, pc, r2
     fcc:	mov	r1, r7
     fd0:	mov	r0, r6
     fd4:	bl	734 <snprintf@plt>
     fd8:	mov	r0, r4
     fdc:	bl	998 <ipfw_daq_shutdown>
     fe0:	b	f28 <ipfw_daq_initialize+0x4c>
     fe4:	ldr	r3, [r5, #4]
     fe8:	ldr	r2, [r5]
     fec:	cmp	r3, #0
     ff0:	bne	1028 <ipfw_daq_initialize+0x14c>
     ff4:	ldr	r3, [pc, #276]	; 1110 <ipfw_daq_initialize+0x234>
     ff8:	str	r2, [sp]
     ffc:	ldr	r2, [pc, #272]	; 1114 <ipfw_daq_initialize+0x238>
    1000:	add	r3, pc, r3
    1004:	add	r3, r3, #99	; 0x63
    1008:	add	r2, pc, r2
    100c:	mov	r1, r7
    1010:	mov	r0, r6
    1014:	bl	734 <snprintf@plt>
    1018:	mov	r0, r4
    101c:	bl	998 <ipfw_daq_shutdown>
    1020:	mvn	r0, #0
    1024:	b	f2c <ipfw_daq_initialize+0x50>
    1028:	ldrb	r1, [r3]
    102c:	str	r3, [sp, #20]
    1030:	cmp	r1, #0
    1034:	beq	ff4 <ipfw_daq_initialize+0x118>
    1038:	mov	r0, r2
    103c:	ldr	r1, [sp, #12]
    1040:	str	r2, [sp, #16]
    1044:	bl	68c <strcmp@plt>
    1048:	ldr	r2, [sp, #16]
    104c:	ldr	r3, [sp, #20]
    1050:	cmp	r0, #0
    1054:	bne	10b0 <ipfw_daq_initialize+0x1d4>
    1058:	mov	r2, r0
    105c:	mov	r1, sl
    1060:	mov	r0, r3
    1064:	str	r3, [sp, #28]
    1068:	bl	6a4 <strtol@plt>
    106c:	ldr	r3, [sp, #28]
    1070:	str	r0, [r4, #4]
    1074:	ldrb	r3, [r3]
    1078:	sub	r0, r0, #1
    107c:	cmp	r0, fp
    1080:	cmpls	r3, #0
    1084:	beq	10a8 <ipfw_daq_initialize+0x1cc>
    1088:	ldr	r3, [r5, #4]
    108c:	ldr	r2, [pc, #132]	; 1118 <ipfw_daq_initialize+0x23c>
    1090:	str	r3, [sp]
    1094:	ldr	r3, [pc, #128]	; 111c <ipfw_daq_initialize+0x240>
    1098:	add	r2, pc, r2
    109c:	add	r3, pc, r3
    10a0:	add	r3, r3, #99	; 0x63
    10a4:	b	100c <ipfw_daq_initialize+0x130>
    10a8:	ldr	r5, [r5, #8]
    10ac:	b	f58 <ipfw_daq_initialize+0x7c>
    10b0:	stm	sp, {r2, r3}
    10b4:	ldr	r3, [pc, #100]	; 1120 <ipfw_daq_initialize+0x244>
    10b8:	ldr	r2, [pc, #100]	; 1124 <ipfw_daq_initialize+0x248>
    10bc:	add	r3, pc, r3
    10c0:	add	r3, r3, #99	; 0x63
    10c4:	add	r2, pc, r2
    10c8:	mov	r1, r7
    10cc:	mov	r0, r6
    10d0:	bl	734 <snprintf@plt>
    10d4:	b	1018 <ipfw_daq_initialize+0x13c>
    10d8:	mvn	r3, #0
    10dc:	str	r3, [r4]
    10e0:	mov	r3, #1
    10e4:	str	r3, [r4, #316]	; 0x13c
    10e8:	str	r4, [r9]
    10ec:	mov	r0, r5
    10f0:	b	f2c <ipfw_daq_initialize+0x50>
    10f4:	.word	0x00000218
    10f8:	.word	0x00000342
    10fc:	.word	0x0000fffe
    1100:	.word	0x00000352
    1104:	.word	0x0000ffff
    1108:	.word	0x00000168
    110c:	.word	0x00000314
    1110:	.word	0x00000128
    1114:	.word	0x0000027b
    1118:	.word	0x0000020f
    111c:	.word	0x0000008c
    1120:	.word	0x0000006c
    1124:	.word	0x000001f6

Disassembly of section .fini:

00001128 <_fini>:
    1128:	push	{r3, lr}
    112c:	pop	{r3, pc}
