
../repos/coreutils/src/paste:     file format elf32-littlearm


Disassembly of section .init:

00010d68 <.init>:
   10d68:	push	{r3, lr}
   10d6c:	bl	11004 <putchar_unlocked@plt+0x48>
   10d70:	pop	{r3, pc}

Disassembly of section .plt:

00010d74 <calloc@plt-0x14>:
   10d74:	push	{lr}		; (str lr, [sp, #-4]!)
   10d78:	ldr	lr, [pc, #4]	; 10d84 <calloc@plt-0x4>
   10d7c:	add	lr, pc, lr
   10d80:	ldr	pc, [lr, #8]!
   10d84:	andeq	r5, r1, ip, ror r2

00010d88 <calloc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #636]!	; 0x27c

00010d94 <fputs_unlocked@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #628]!	; 0x274

00010da0 <strcmp@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #620]!	; 0x26c

00010dac <posix_fadvise64@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #612]!	; 0x264

00010db8 <fflush@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #604]!	; 0x25c

00010dc4 <free@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #596]!	; 0x254

00010dd0 <_exit@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #588]!	; 0x24c

00010ddc <memcpy@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #580]!	; 0x244

00010de8 <mbsinit@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #572]!	; 0x23c

00010df4 <fwrite_unlocked@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #564]!	; 0x234

00010e00 <memcmp@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #556]!	; 0x22c

00010e0c <getc_unlocked@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #548]!	; 0x224

00010e18 <dcgettext@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #540]!	; 0x21c

00010e24 <realloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #532]!	; 0x214

00010e30 <textdomain@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #524]!	; 0x20c

00010e3c <iswprint@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #516]!	; 0x204

00010e48 <lseek64@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #508]!	; 0x1fc

00010e54 <__ctype_get_mb_cur_max@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e60 <__fpending@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #492]!	; 0x1ec

00010e6c <ferror_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #484]!	; 0x1e4

00010e78 <mbrtowc@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #476]!	; 0x1dc

00010e84 <error@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e90 <malloc@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #460]!	; 0x1cc

00010e9c <__libc_start_main@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #452]!	; 0x1c4

00010ea8 <__freading@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #444]!	; 0x1bc

00010eb4 <__gmon_start__@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #436]!	; 0x1b4

00010ec0 <getopt_long@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #428]!	; 0x1ac

00010ecc <__ctype_b_loc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #420]!	; 0x1a4

00010ed8 <exit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #412]!	; 0x19c

00010ee4 <strlen@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #404]!	; 0x194

00010ef0 <__errno_location@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #396]!	; 0x18c

00010efc <__cxa_atexit@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #388]!	; 0x184

00010f08 <memset@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #380]!	; 0x17c

00010f14 <__printf_chk@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #372]!	; 0x174

00010f20 <fileno@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #364]!	; 0x16c

00010f2c <__fprintf_chk@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #356]!	; 0x164

00010f38 <fclose@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #348]!	; 0x15c

00010f44 <fseeko64@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #340]!	; 0x154

00010f50 <setlocale@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #332]!	; 0x14c

00010f5c <strrchr@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #324]!	; 0x144

00010f68 <nl_langinfo@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #316]!	; 0x13c

00010f74 <clearerr_unlocked@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #308]!	; 0x134

00010f80 <fopen64@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #300]!	; 0x12c

00010f8c <bindtextdomain@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #292]!	; 0x124

00010f98 <fputs@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #284]!	; 0x11c

00010fa4 <strncmp@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #276]!	; 0x114

00010fb0 <abort@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #268]!	; 0x10c

00010fbc <putchar_unlocked@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #260]!	; 0x104

Disassembly of section .text:

00010fc8 <.text>:
   10fc8:	mov	fp, #0
   10fcc:	mov	lr, #0
   10fd0:	pop	{r1}		; (ldr r1, [sp], #4)
   10fd4:	mov	r2, sp
   10fd8:	push	{r2}		; (str r2, [sp, #-4]!)
   10fdc:	push	{r0}		; (str r0, [sp, #-4]!)
   10fe0:	ldr	ip, [pc, #16]	; 10ff8 <putchar_unlocked@plt+0x3c>
   10fe4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fe8:	ldr	r0, [pc, #12]	; 10ffc <putchar_unlocked@plt+0x40>
   10fec:	ldr	r3, [pc, #12]	; 11000 <putchar_unlocked@plt+0x44>
   10ff0:	bl	10e9c <__libc_start_main@plt>
   10ff4:	bl	10fb0 <abort@plt>
   10ff8:	andeq	r4, r1, r4, ror r9
   10ffc:	andeq	r1, r1, ip, asr #6
   11000:	andeq	r4, r1, r4, lsl r9
   11004:	ldr	r3, [pc, #20]	; 11020 <putchar_unlocked@plt+0x64>
   11008:	ldr	r2, [pc, #20]	; 11024 <putchar_unlocked@plt+0x68>
   1100c:	add	r3, pc, r3
   11010:	ldr	r2, [r3, r2]
   11014:	cmp	r2, #0
   11018:	bxeq	lr
   1101c:	b	10eb4 <__gmon_start__@plt>
   11020:	andeq	r4, r1, ip, ror #31
   11024:	andeq	r0, r0, ip, asr #1
   11028:	ldr	r0, [pc, #24]	; 11048 <putchar_unlocked@plt+0x8c>
   1102c:	ldr	r3, [pc, #24]	; 1104c <putchar_unlocked@plt+0x90>
   11030:	cmp	r3, r0
   11034:	bxeq	lr
   11038:	ldr	r3, [pc, #16]	; 11050 <putchar_unlocked@plt+0x94>
   1103c:	cmp	r3, #0
   11040:	bxeq	lr
   11044:	bx	r3
   11048:	andeq	r6, r2, r0, lsr #2
   1104c:	andeq	r6, r2, r0, lsr #2
   11050:	andeq	r0, r0, r0
   11054:	ldr	r0, [pc, #36]	; 11080 <putchar_unlocked@plt+0xc4>
   11058:	ldr	r1, [pc, #36]	; 11084 <putchar_unlocked@plt+0xc8>
   1105c:	sub	r1, r1, r0
   11060:	asr	r1, r1, #2
   11064:	add	r1, r1, r1, lsr #31
   11068:	asrs	r1, r1, #1
   1106c:	bxeq	lr
   11070:	ldr	r3, [pc, #16]	; 11088 <putchar_unlocked@plt+0xcc>
   11074:	cmp	r3, #0
   11078:	bxeq	lr
   1107c:	bx	r3
   11080:	andeq	r6, r2, r0, lsr #2
   11084:	andeq	r6, r2, r0, lsr #2
   11088:	andeq	r0, r0, r0
   1108c:	push	{r4, lr}
   11090:	ldr	r4, [pc, #24]	; 110b0 <putchar_unlocked@plt+0xf4>
   11094:	ldrb	r3, [r4]
   11098:	cmp	r3, #0
   1109c:	popne	{r4, pc}
   110a0:	bl	11028 <putchar_unlocked@plt+0x6c>
   110a4:	mov	r3, #1
   110a8:	strb	r3, [r4]
   110ac:	pop	{r4, pc}
   110b0:	andeq	r6, r2, r4, asr #2
   110b4:	b	11054 <putchar_unlocked@plt+0x98>
   110b8:	push	{fp, lr}
   110bc:	mov	fp, sp
   110c0:	sub	sp, sp, #56	; 0x38
   110c4:	mov	r8, r0
   110c8:	cmp	r0, #0
   110cc:	bne	1130c <putchar_unlocked@plt+0x350>
   110d0:	movw	r1, #18883	; 0x49c3
   110d4:	mov	r0, #0
   110d8:	mov	r2, #5
   110dc:	movt	r1, #1
   110e0:	bl	10e18 <dcgettext@plt>
   110e4:	mov	r1, r0
   110e8:	movw	r0, #24924	; 0x615c
   110ec:	movt	r0, #2
   110f0:	ldr	r2, [r0]
   110f4:	mov	r0, #1
   110f8:	bl	10f14 <__printf_chk@plt>
   110fc:	movw	r1, #18916	; 0x49e4
   11100:	mov	r0, #0
   11104:	mov	r2, #5
   11108:	movt	r1, #1
   1110c:	bl	10e18 <dcgettext@plt>
   11110:	movw	r9, #24892	; 0x613c
   11114:	movt	r9, #2
   11118:	ldr	r1, [r9]
   1111c:	bl	10d94 <fputs_unlocked@plt>
   11120:	movw	r1, #19478	; 0x4c16
   11124:	mov	r0, #0
   11128:	mov	r2, #5
   1112c:	movt	r1, #1
   11130:	bl	10e18 <dcgettext@plt>
   11134:	ldr	r1, [r9]
   11138:	bl	10d94 <fputs_unlocked@plt>
   1113c:	movw	r1, #19534	; 0x4c4e
   11140:	mov	r0, #0
   11144:	mov	r2, #5
   11148:	movt	r1, #1
   1114c:	bl	10e18 <dcgettext@plt>
   11150:	ldr	r1, [r9]
   11154:	bl	10d94 <fputs_unlocked@plt>
   11158:	movw	r1, #19035	; 0x4a5b
   1115c:	mov	r0, #0
   11160:	mov	r2, #5
   11164:	movt	r1, #1
   11168:	bl	10e18 <dcgettext@plt>
   1116c:	ldr	r1, [r9]
   11170:	bl	10d94 <fputs_unlocked@plt>
   11174:	movw	r1, #19179	; 0x4aeb
   11178:	mov	r0, #0
   1117c:	mov	r2, #5
   11180:	movt	r1, #1
   11184:	bl	10e18 <dcgettext@plt>
   11188:	ldr	r1, [r9]
   1118c:	bl	10d94 <fputs_unlocked@plt>
   11190:	movw	r1, #19242	; 0x4b2a
   11194:	mov	r0, #0
   11198:	mov	r2, #5
   1119c:	movt	r1, #1
   111a0:	bl	10e18 <dcgettext@plt>
   111a4:	ldr	r1, [r9]
   111a8:	bl	10d94 <fputs_unlocked@plt>
   111ac:	movw	r1, #19287	; 0x4b57
   111b0:	mov	r0, #0
   111b4:	mov	r2, #5
   111b8:	movt	r1, #1
   111bc:	bl	10e18 <dcgettext@plt>
   111c0:	ldr	r1, [r9]
   111c4:	bl	10d94 <fputs_unlocked@plt>
   111c8:	movw	r0, #20104	; 0x4e88
   111cc:	mov	r6, sp
   111d0:	movt	r0, #1
   111d4:	mov	r1, r6
   111d8:	ldm	r0!, {r2, r3, r4, r5}
   111dc:	stmia	r1!, {r2, r3, r4, r5}
   111e0:	ldm	r0!, {r2, r3, r4, r5, r7}
   111e4:	stmia	r1!, {r2, r3, r4, r5, r7}
   111e8:	ldm	r0, {r2, r3, r4, r5, r7}
   111ec:	stm	r1, {r2, r3, r4, r5, r7}
   111f0:	movw	r1, #19609	; 0x4c99
   111f4:	movw	r5, #19341	; 0x4b8d
   111f8:	movt	r1, #1
   111fc:	movt	r5, #1
   11200:	mov	r0, r5
   11204:	bl	10da0 <strcmp@plt>
   11208:	cmp	r0, #0
   1120c:	ldrne	r1, [r6, #8]!
   11210:	cmpne	r1, #0
   11214:	bne	11200 <putchar_unlocked@plt+0x244>
   11218:	ldr	r6, [r6, #4]
   1121c:	movw	r1, #19704	; 0x4cf8
   11220:	mov	r0, #0
   11224:	mov	r2, #5
   11228:	movt	r1, #1
   1122c:	bl	10e18 <dcgettext@plt>
   11230:	movw	r2, #19381	; 0x4bb5
   11234:	movw	r3, #19727	; 0x4d0f
   11238:	mov	r1, r0
   1123c:	mov	r0, #1
   11240:	movt	r2, #1
   11244:	movt	r3, #1
   11248:	bl	10f14 <__printf_chk@plt>
   1124c:	cmp	r6, #0
   11250:	mov	r0, #5
   11254:	mov	r1, #0
   11258:	moveq	r6, r5
   1125c:	bl	10f50 <setlocale@plt>
   11260:	cmp	r0, #0
   11264:	beq	1129c <putchar_unlocked@plt+0x2e0>
   11268:	movw	r1, #19767	; 0x4d37
   1126c:	mov	r2, #3
   11270:	movt	r1, #1
   11274:	bl	10fa4 <strncmp@plt>
   11278:	cmp	r0, #0
   1127c:	beq	1129c <putchar_unlocked@plt+0x2e0>
   11280:	movw	r1, #19771	; 0x4d3b
   11284:	mov	r0, #0
   11288:	mov	r2, #5
   1128c:	movt	r1, #1
   11290:	bl	10e18 <dcgettext@plt>
   11294:	ldr	r1, [r9]
   11298:	bl	10d94 <fputs_unlocked@plt>
   1129c:	movw	r1, #19842	; 0x4d82
   112a0:	mov	r0, #0
   112a4:	mov	r2, #5
   112a8:	movt	r1, #1
   112ac:	bl	10e18 <dcgettext@plt>
   112b0:	movw	r2, #19727	; 0x4d0f
   112b4:	mov	r1, r0
   112b8:	mov	r0, #1
   112bc:	mov	r3, r5
   112c0:	movt	r2, #1
   112c4:	bl	10f14 <__printf_chk@plt>
   112c8:	movw	r1, #19869	; 0x4d9d
   112cc:	mov	r0, #0
   112d0:	mov	r2, #5
   112d4:	movt	r1, #1
   112d8:	bl	10e18 <dcgettext@plt>
   112dc:	movw	r3, #19348	; 0x4b94
   112e0:	mov	r1, r0
   112e4:	movw	r0, #19637	; 0x4cb5
   112e8:	cmp	r6, r5
   112ec:	mov	r2, r6
   112f0:	movt	r0, #1
   112f4:	movt	r3, #1
   112f8:	moveq	r3, r0
   112fc:	mov	r0, #1
   11300:	bl	10f14 <__printf_chk@plt>
   11304:	mov	r0, r8
   11308:	bl	10ed8 <exit@plt>
   1130c:	movw	r0, #24880	; 0x6130
   11310:	movw	r1, #18844	; 0x499c
   11314:	mov	r2, #5
   11318:	movt	r0, #2
   1131c:	movt	r1, #1
   11320:	ldr	r5, [r0]
   11324:	mov	r0, #0
   11328:	bl	10e18 <dcgettext@plt>
   1132c:	mov	r2, r0
   11330:	movw	r0, #24924	; 0x615c
   11334:	mov	r1, #1
   11338:	movt	r0, #2
   1133c:	ldr	r3, [r0]
   11340:	mov	r0, r5
   11344:	bl	10f2c <__fprintf_chk@plt>
   11348:	b	11304 <putchar_unlocked@plt+0x348>
   1134c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11350:	add	fp, sp, #28
   11354:	sub	sp, sp, #12
   11358:	mov	r6, r0
   1135c:	ldr	r0, [r1]
   11360:	mov	r4, r1
   11364:	bl	12168 <putchar_unlocked@plt+0x11ac>
   11368:	movw	r1, #19348	; 0x4b94
   1136c:	mov	r0, #6
   11370:	movt	r1, #1
   11374:	bl	10f50 <setlocale@plt>
   11378:	movw	r5, #19385	; 0x4bb9
   1137c:	movw	r1, #19349	; 0x4b95
   11380:	movt	r5, #1
   11384:	movt	r1, #1
   11388:	mov	r0, r5
   1138c:	bl	10f8c <bindtextdomain@plt>
   11390:	mov	r0, r5
   11394:	bl	10e30 <textdomain@plt>
   11398:	movw	r0, #7804	; 0x1e7c
   1139c:	movt	r0, #1
   113a0:	bl	14978 <putchar_unlocked@plt+0x39bc>
   113a4:	movw	r0, #24904	; 0x6148
   113a8:	movw	r9, #24905	; 0x6149
   113ac:	movw	r5, #19347	; 0x4b93
   113b0:	movw	r8, #19373	; 0x4bad
   113b4:	movw	sl, #20008	; 0x4e28
   113b8:	mov	r7, #0
   113bc:	movt	r0, #2
   113c0:	movt	r9, #2
   113c4:	movt	r5, #1
   113c8:	movt	r8, #1
   113cc:	movt	sl, #1
   113d0:	strb	r7, [r0]
   113d4:	strb	r7, [r9]
   113d8:	b	1142c <putchar_unlocked@plt+0x470>
   113dc:	cmp	r0, #122	; 0x7a
   113e0:	beq	1141c <putchar_unlocked@plt+0x460>
   113e4:	cmp	r0, #115	; 0x73
   113e8:	mov	r1, r9
   113ec:	beq	11424 <putchar_unlocked@plt+0x468>
   113f0:	cmp	r0, #100	; 0x64
   113f4:	bne	116b0 <putchar_unlocked@plt+0x6f4>
   113f8:	movw	r0, #24896	; 0x6140
   113fc:	movt	r0, #2
   11400:	ldr	r5, [r0]
   11404:	ldrb	r0, [r5]
   11408:	cmp	r0, #0
   1140c:	movw	r0, #19378	; 0x4bb2
   11410:	movt	r0, #1
   11414:	moveq	r5, r0
   11418:	b	1142c <putchar_unlocked@plt+0x470>
   1141c:	movw	r1, #24906	; 0x614a
   11420:	movt	r1, #2
   11424:	mov	r0, #1
   11428:	strb	r0, [r1]
   1142c:	mov	r0, r6
   11430:	mov	r1, r4
   11434:	mov	r2, r8
   11438:	mov	r3, sl
   1143c:	str	r7, [sp]
   11440:	bl	10ec0 <getopt_long@plt>
   11444:	cmp	r0, #99	; 0x63
   11448:	bgt	113dc <putchar_unlocked@plt+0x420>
   1144c:	cmn	r0, #1
   11450:	bne	11644 <putchar_unlocked@plt+0x688>
   11454:	movw	r8, #24872	; 0x6128
   11458:	movt	r8, #2
   1145c:	ldr	r0, [r8]
   11460:	subs	r6, r6, r0
   11464:	bne	11478 <putchar_unlocked@plt+0x4bc>
   11468:	movw	r1, #20248	; 0x4f18
   1146c:	mov	r6, #1
   11470:	movt	r1, #1
   11474:	str	r1, [r4, r0, lsl #2]
   11478:	mov	r0, r5
   1147c:	bl	14570 <putchar_unlocked@plt+0x35b4>
   11480:	movw	r9, #24908	; 0x614c
   11484:	movt	r9, #2
   11488:	str	r0, [r9]
   1148c:	ldrb	r2, [r5]
   11490:	cmp	r2, #0
   11494:	beq	11578 <putchar_unlocked@plt+0x5bc>
   11498:	mov	r1, r5
   1149c:	uxtb	r7, r2
   114a0:	add	r3, r1, #1
   114a4:	cmp	r7, #92	; 0x5c
   114a8:	bne	114d0 <putchar_unlocked@plt+0x514>
   114ac:	ldrb	r2, [r3]
   114b0:	cmp	r2, #97	; 0x61
   114b4:	bgt	114dc <putchar_unlocked@plt+0x520>
   114b8:	cmp	r2, #48	; 0x30
   114bc:	beq	1151c <putchar_unlocked@plt+0x560>
   114c0:	cmp	r2, #92	; 0x5c
   114c4:	bne	11538 <putchar_unlocked@plt+0x57c>
   114c8:	mov	r2, #92	; 0x5c
   114cc:	b	11560 <putchar_unlocked@plt+0x5a4>
   114d0:	strb	r2, [r0]
   114d4:	mov	r1, r3
   114d8:	b	11568 <putchar_unlocked@plt+0x5ac>
   114dc:	sub	r3, r2, #110	; 0x6e
   114e0:	cmp	r3, #8
   114e4:	bhi	11524 <putchar_unlocked@plt+0x568>
   114e8:	add	r7, pc, #0
   114ec:	ldr	pc, [r7, r3, lsl #2]
   114f0:	andeq	r1, r1, r4, lsl r5
   114f4:	andeq	r1, r1, r0, ror #10
   114f8:	andeq	r1, r1, r0, ror #10
   114fc:	andeq	r1, r1, r0, ror #10
   11500:	andeq	r1, r1, ip, asr #10
   11504:	andeq	r1, r1, r0, ror #10
   11508:	andeq	r1, r1, r4, asr r5
   1150c:	andeq	r1, r1, r0, ror #10
   11510:	andeq	r1, r1, r4, asr #10
   11514:	mov	r2, #10
   11518:	b	11560 <putchar_unlocked@plt+0x5a4>
   1151c:	mov	r2, #0
   11520:	b	11560 <putchar_unlocked@plt+0x5a4>
   11524:	cmp	r2, #102	; 0x66
   11528:	beq	1155c <putchar_unlocked@plt+0x5a0>
   1152c:	cmp	r2, #98	; 0x62
   11530:	moveq	r2, #8
   11534:	b	11560 <putchar_unlocked@plt+0x5a4>
   11538:	cmp	r2, #0
   1153c:	bne	11560 <putchar_unlocked@plt+0x5a4>
   11540:	b	115fc <putchar_unlocked@plt+0x640>
   11544:	mov	r2, #11
   11548:	b	11560 <putchar_unlocked@plt+0x5a4>
   1154c:	mov	r2, #13
   11550:	b	11560 <putchar_unlocked@plt+0x5a4>
   11554:	mov	r2, #9
   11558:	b	11560 <putchar_unlocked@plt+0x5a4>
   1155c:	mov	r2, #12
   11560:	add	r1, r1, #2
   11564:	strb	r2, [r0]
   11568:	ldrb	r2, [r1]
   1156c:	add	r0, r0, #1
   11570:	cmp	r2, #0
   11574:	bne	1149c <putchar_unlocked@plt+0x4e0>
   11578:	movw	r1, #24912	; 0x6150
   1157c:	movw	r2, #6540	; 0x198c
   11580:	movt	r1, #2
   11584:	movt	r2, #1
   11588:	str	r0, [r1]
   1158c:	movw	r0, #24905	; 0x6149
   11590:	movw	r1, #5840	; 0x16d0
   11594:	movt	r0, #2
   11598:	movt	r1, #1
   1159c:	ldrb	r0, [r0]
   115a0:	cmp	r0, #0
   115a4:	ldr	r0, [r8]
   115a8:	movne	r2, r1
   115ac:	add	r1, r4, r0, lsl #2
   115b0:	mov	r0, r6
   115b4:	blx	r2
   115b8:	mov	r4, r0
   115bc:	ldr	r0, [r9]
   115c0:	bl	1209c <putchar_unlocked@plt+0x10e0>
   115c4:	movw	r0, #24904	; 0x6148
   115c8:	movt	r0, #2
   115cc:	ldrb	r0, [r0]
   115d0:	cmp	r0, #1
   115d4:	bne	115f0 <putchar_unlocked@plt+0x634>
   115d8:	movw	r0, #24888	; 0x6138
   115dc:	movt	r0, #2
   115e0:	ldr	r0, [r0]
   115e4:	bl	11fa4 <putchar_unlocked@plt+0xfe8>
   115e8:	cmn	r0, #1
   115ec:	beq	116b8 <putchar_unlocked@plt+0x6fc>
   115f0:	eor	r0, r4, #1
   115f4:	sub	sp, fp, #28
   115f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115fc:	movw	r1, #24912	; 0x6150
   11600:	mov	r2, #5
   11604:	movt	r1, #2
   11608:	str	r0, [r1]
   1160c:	movw	r1, #19426	; 0x4be2
   11610:	mov	r0, #0
   11614:	movt	r1, #1
   11618:	bl	10e18 <dcgettext@plt>
   1161c:	mov	r4, r0
   11620:	mov	r0, #0
   11624:	mov	r1, #6
   11628:	mov	r2, r5
   1162c:	bl	139d8 <putchar_unlocked@plt+0x2a1c>
   11630:	mov	r3, r0
   11634:	mov	r0, #1
   11638:	mov	r1, #0
   1163c:	mov	r2, r4
   11640:	bl	10e84 <error@plt>
   11644:	cmn	r0, #3
   11648:	bne	116a0 <putchar_unlocked@plt+0x6e4>
   1164c:	movw	r0, #24792	; 0x60d8
   11650:	movw	r2, #19410	; 0x4bd2
   11654:	mov	r1, #0
   11658:	movw	r7, #19395	; 0x4bc3
   1165c:	movt	r0, #2
   11660:	movt	r2, #1
   11664:	str	r1, [sp, #8]
   11668:	movw	r1, #19341	; 0x4b8d
   1166c:	movt	r7, #1
   11670:	ldr	r3, [r0]
   11674:	movw	r0, #24892	; 0x613c
   11678:	str	r2, [sp, #4]
   1167c:	movw	r2, #19381	; 0x4bb5
   11680:	movt	r1, #1
   11684:	str	r7, [sp]
   11688:	movt	r0, #2
   1168c:	movt	r2, #1
   11690:	ldr	r0, [r0]
   11694:	bl	14058 <putchar_unlocked@plt+0x309c>
   11698:	mov	r0, #0
   1169c:	bl	10ed8 <exit@plt>
   116a0:	cmn	r0, #2
   116a4:	bne	116b0 <putchar_unlocked@plt+0x6f4>
   116a8:	mov	r0, #0
   116ac:	bl	110b8 <putchar_unlocked@plt+0xfc>
   116b0:	mov	r0, #1
   116b4:	bl	110b8 <putchar_unlocked@plt+0xfc>
   116b8:	bl	10ef0 <__errno_location@plt>
   116bc:	ldr	r1, [r0]
   116c0:	movw	r2, #20248	; 0x4f18
   116c4:	mov	r0, #1
   116c8:	movt	r2, #1
   116cc:	bl	10e84 <error@plt>
   116d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116d4:	add	fp, sp, #28
   116d8:	sub	sp, sp, #20
   116dc:	cmp	r0, #0
   116e0:	beq	11970 <putchar_unlocked@plt+0x9b4>
   116e4:	movw	r8, #20248	; 0x4f18
   116e8:	movw	r9, #24908	; 0x614c
   116ec:	movw	r4, #24906	; 0x614a
   116f0:	mov	r5, r0
   116f4:	mov	r0, #1
   116f8:	mov	sl, r1
   116fc:	movt	r8, #1
   11700:	movt	r9, #2
   11704:	movt	r4, #2
   11708:	str	r0, [sp, #4]
   1170c:	ldr	r6, [sl]
   11710:	mov	r1, r8
   11714:	mov	r0, r6
   11718:	bl	10da0 <strcmp@plt>
   1171c:	mov	r7, r0
   11720:	cmp	r0, #0
   11724:	beq	11758 <putchar_unlocked@plt+0x79c>
   11728:	movw	r1, #19977	; 0x4e09
   1172c:	mov	r0, r6
   11730:	movt	r1, #1
   11734:	bl	10f80 <fopen64@plt>
   11738:	cmp	r0, #0
   1173c:	beq	11854 <putchar_unlocked@plt+0x898>
   11740:	mov	r1, #2
   11744:	mov	r6, r0
   11748:	str	r7, [sp, #12]
   1174c:	str	r5, [sp, #16]
   11750:	bl	11f68 <putchar_unlocked@plt+0xfac>
   11754:	b	1177c <putchar_unlocked@plt+0x7c0>
   11758:	movw	r1, #24904	; 0x6148
   1175c:	mov	r0, #1
   11760:	str	r7, [sp, #12]
   11764:	str	r5, [sp, #16]
   11768:	movt	r1, #2
   1176c:	strb	r0, [r1]
   11770:	movw	r0, #24888	; 0x6138
   11774:	movt	r0, #2
   11778:	ldr	r6, [r0]
   1177c:	ldr	r5, [r9]
   11780:	mov	r0, r6
   11784:	bl	10e0c <getc_unlocked@plt>
   11788:	mov	r7, r0
   1178c:	bl	10ef0 <__errno_location@plt>
   11790:	mov	r1, r0
   11794:	cmn	r7, #1
   11798:	beq	11830 <putchar_unlocked@plt+0x874>
   1179c:	mov	r0, r6
   117a0:	str	r1, [sp, #8]
   117a4:	bl	10e0c <getc_unlocked@plt>
   117a8:	cmn	r0, #1
   117ac:	beq	11884 <putchar_unlocked@plt+0x8c8>
   117b0:	mov	r8, r0
   117b4:	ldrb	r0, [r4]
   117b8:	cmp	r0, #0
   117bc:	mov	r0, #10
   117c0:	movwne	r0, #0
   117c4:	cmp	r7, r0
   117c8:	bne	11808 <putchar_unlocked@plt+0x84c>
   117cc:	ldrb	r0, [r5]
   117d0:	cmp	r0, #0
   117d4:	beq	117e4 <putchar_unlocked@plt+0x828>
   117d8:	bl	10fbc <putchar_unlocked@plt>
   117dc:	cmn	r0, #1
   117e0:	ble	11988 <putchar_unlocked@plt+0x9cc>
   117e4:	movw	r0, #24912	; 0x6150
   117e8:	ldr	r1, [r9]
   117ec:	add	r2, r5, #1
   117f0:	movt	r0, #2
   117f4:	ldr	r0, [r0]
   117f8:	cmp	r2, r0
   117fc:	movne	r1, r2
   11800:	mov	r5, r1
   11804:	b	11818 <putchar_unlocked@plt+0x85c>
   11808:	uxtb	r0, r7
   1180c:	bl	10fbc <putchar_unlocked@plt>
   11810:	cmn	r0, #1
   11814:	ble	11988 <putchar_unlocked@plt+0x9cc>
   11818:	mov	r0, r6
   1181c:	bl	10e0c <getc_unlocked@plt>
   11820:	cmn	r0, #1
   11824:	mov	r7, r8
   11828:	bne	117b0 <putchar_unlocked@plt+0x7f4>
   1182c:	b	11888 <putchar_unlocked@plt+0x8cc>
   11830:	ldrb	r0, [r4]
   11834:	ldr	r9, [r1]
   11838:	ldr	r5, [sp, #16]
   1183c:	ldr	r4, [sp, #12]
   11840:	mov	r7, r1
   11844:	cmp	r0, #0
   11848:	mov	r0, #10
   1184c:	movwne	r0, #0
   11850:	b	118d0 <putchar_unlocked@plt+0x914>
   11854:	bl	10ef0 <__errno_location@plt>
   11858:	ldr	r2, [sl]
   1185c:	ldr	r6, [r0]
   11860:	mov	r0, #0
   11864:	mov	r1, #3
   11868:	str	r0, [sp, #4]
   1186c:	mov	r0, #0
   11870:	bl	139d8 <putchar_unlocked@plt+0x2a1c>
   11874:	mov	r3, r0
   11878:	mov	r0, #0
   1187c:	mov	r1, r6
   11880:	b	11940 <putchar_unlocked@plt+0x984>
   11884:	mov	r8, r7
   11888:	ldr	r7, [sp, #8]
   1188c:	uxtb	r0, r8
   11890:	ldr	r9, [r7]
   11894:	bl	10fbc <putchar_unlocked@plt>
   11898:	cmn	r0, #1
   1189c:	ble	11988 <putchar_unlocked@plt+0x9cc>
   118a0:	movw	r0, #24906	; 0x614a
   118a4:	ldr	r5, [sp, #16]
   118a8:	ldr	r4, [sp, #12]
   118ac:	movt	r0, #2
   118b0:	ldrb	r0, [r0]
   118b4:	cmp	r0, #0
   118b8:	mov	r0, #10
   118bc:	movwne	r0, #0
   118c0:	cmp	r8, r0
   118c4:	movw	r8, #20248	; 0x4f18
   118c8:	movt	r8, #1
   118cc:	beq	118dc <putchar_unlocked@plt+0x920>
   118d0:	bl	10fbc <putchar_unlocked@plt>
   118d4:	cmn	r0, #1
   118d8:	ble	11988 <putchar_unlocked@plt+0x9cc>
   118dc:	mov	r0, r6
   118e0:	bl	10e6c <ferror_unlocked@plt>
   118e4:	cmp	r0, #0
   118e8:	moveq	r9, r0
   118ec:	mov	r0, r6
   118f0:	cmp	r4, #0
   118f4:	beq	11910 <putchar_unlocked@plt+0x954>
   118f8:	bl	11fa4 <putchar_unlocked@plt+0xfe8>
   118fc:	cmp	r9, #0
   11900:	bne	11914 <putchar_unlocked@plt+0x958>
   11904:	cmp	r0, #0
   11908:	ldrne	r9, [r7]
   1190c:	b	11914 <putchar_unlocked@plt+0x958>
   11910:	bl	10f74 <clearerr_unlocked@plt>
   11914:	cmp	r9, #0
   11918:	beq	1194c <putchar_unlocked@plt+0x990>
   1191c:	ldr	r2, [sl]
   11920:	mov	r0, #0
   11924:	mov	r1, #3
   11928:	str	r0, [sp, #4]
   1192c:	mov	r0, #0
   11930:	bl	139d8 <putchar_unlocked@plt+0x2a1c>
   11934:	mov	r3, r0
   11938:	mov	r0, #0
   1193c:	mov	r1, r9
   11940:	movw	r2, #19475	; 0x4c13
   11944:	movt	r2, #1
   11948:	bl	10e84 <error@plt>
   1194c:	movw	r4, #24908	; 0x614c
   11950:	add	sl, sl, #4
   11954:	subs	r5, r5, #1
   11958:	movt	r4, #2
   1195c:	mov	r9, r4
   11960:	movw	r4, #24906	; 0x614a
   11964:	movt	r4, #2
   11968:	bne	1170c <putchar_unlocked@plt+0x750>
   1196c:	b	11978 <putchar_unlocked@plt+0x9bc>
   11970:	mov	r0, #1
   11974:	str	r0, [sp, #4]
   11978:	ldr	r0, [sp, #4]
   1197c:	and	r0, r0, #1
   11980:	sub	sp, fp, #28
   11984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11988:	bl	11e28 <putchar_unlocked@plt+0xe6c>
   1198c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11990:	add	fp, sp, #28
   11994:	sub	sp, sp, #28
   11998:	mov	r4, r0
   1199c:	add	r0, r0, #2
   119a0:	str	r1, [sp, #8]
   119a4:	bl	14160 <putchar_unlocked@plt+0x31a4>
   119a8:	str	r0, [sp, #16]
   119ac:	add	r0, r4, #1
   119b0:	mov	r1, #4
   119b4:	bl	14230 <putchar_unlocked@plt+0x3274>
   119b8:	mov	r7, r0
   119bc:	cmp	r4, #0
   119c0:	beq	11da4 <putchar_unlocked@plt+0xde8>
   119c4:	movw	r8, #19977	; 0x4e09
   119c8:	str	r4, [sp, #20]
   119cc:	movw	r4, #20248	; 0x4f18
   119d0:	mov	r6, #0
   119d4:	mov	sl, #1
   119d8:	mov	r5, #0
   119dc:	movt	r4, #1
   119e0:	movt	r8, #1
   119e4:	ldr	r0, [sp, #8]
   119e8:	mov	r9, r5
   119ec:	mov	r1, r4
   119f0:	ldr	r5, [r0, r5, lsl #2]
   119f4:	mov	r0, r5
   119f8:	bl	10da0 <strcmp@plt>
   119fc:	cmp	r0, #0
   11a00:	beq	11a40 <putchar_unlocked@plt+0xa84>
   11a04:	mov	r0, r5
   11a08:	mov	r1, r8
   11a0c:	bl	10f80 <fopen64@plt>
   11a10:	cmp	r0, #0
   11a14:	str	r0, [r7, r9, lsl #2]
   11a18:	beq	11dd0 <putchar_unlocked@plt+0xe14>
   11a1c:	bl	10f20 <fileno@plt>
   11a20:	mov	r5, r0
   11a24:	ldr	r0, [r7, r9, lsl #2]
   11a28:	mov	r1, #2
   11a2c:	bl	11f68 <putchar_unlocked@plt+0xfac>
   11a30:	clz	r0, r5
   11a34:	lsr	r0, r0, #5
   11a38:	orr	r6, r6, r0
   11a3c:	b	11a5c <putchar_unlocked@plt+0xaa0>
   11a40:	movw	r0, #24904	; 0x6148
   11a44:	movt	r0, #2
   11a48:	strb	sl, [r0]
   11a4c:	movw	r0, #24888	; 0x6138
   11a50:	movt	r0, #2
   11a54:	ldr	r0, [r0]
   11a58:	str	r0, [r7, r9, lsl #2]
   11a5c:	ldr	r0, [sp, #20]
   11a60:	mov	r5, r9
   11a64:	add	r5, r9, #1
   11a68:	cmp	r5, r0
   11a6c:	bcc	119e4 <putchar_unlocked@plt+0xa28>
   11a70:	tst	r6, #1
   11a74:	beq	11a8c <putchar_unlocked@plt+0xad0>
   11a78:	movw	r0, #24904	; 0x6148
   11a7c:	movt	r0, #2
   11a80:	ldrb	r0, [r0]
   11a84:	cmp	r0, #1
   11a88:	beq	11e04 <putchar_unlocked@plt+0xe48>
   11a8c:	ldr	r9, [sp, #20]
   11a90:	mov	r0, #1
   11a94:	str	r0, [sp, #4]
   11a98:	cmp	r5, #0
   11a9c:	beq	11d98 <putchar_unlocked@plt+0xddc>
   11aa0:	movw	r0, #24908	; 0x614c
   11aa4:	mov	sl, #0
   11aa8:	mov	r4, #0
   11aac:	movt	r0, #2
   11ab0:	ldr	r8, [r0]
   11ab4:	mov	r0, #0
   11ab8:	str	r0, [sp, #12]
   11abc:	ldr	r0, [r7, sl, lsl #2]
   11ac0:	cmp	r0, #0
   11ac4:	beq	11cd0 <putchar_unlocked@plt+0xd14>
   11ac8:	str	r5, [sp, #24]
   11acc:	bl	10e0c <getc_unlocked@plt>
   11ad0:	mov	r5, r0
   11ad4:	bl	10ef0 <__errno_location@plt>
   11ad8:	ldr	r6, [r0]
   11adc:	cmp	r4, #0
   11ae0:	mov	r9, r0
   11ae4:	cmnne	r5, #1
   11ae8:	bne	11afc <putchar_unlocked@plt+0xb40>
   11aec:	cmn	r5, #1
   11af0:	beq	11c2c <putchar_unlocked@plt+0xc70>
   11af4:	mov	r6, r4
   11af8:	b	11b24 <putchar_unlocked@plt+0xb68>
   11afc:	movw	r0, #24892	; 0x613c
   11b00:	mov	r1, #1
   11b04:	mov	r2, r4
   11b08:	movt	r0, #2
   11b0c:	ldr	r3, [r0]
   11b10:	ldr	r0, [sp, #16]
   11b14:	bl	10df4 <fwrite_unlocked@plt>
   11b18:	mov	r6, #0
   11b1c:	cmp	r0, r4
   11b20:	bne	11dcc <putchar_unlocked@plt+0xe10>
   11b24:	ldr	r9, [sp, #20]
   11b28:	movw	r4, #24906	; 0x614a
   11b2c:	movt	r4, #2
   11b30:	ldrb	r0, [r4]
   11b34:	cmp	r0, #0
   11b38:	mov	r0, #10
   11b3c:	movwne	r0, #0
   11b40:	cmp	r5, r0
   11b44:	beq	11b70 <putchar_unlocked@plt+0xbb4>
   11b48:	uxtb	r0, r5
   11b4c:	bl	10fbc <putchar_unlocked@plt>
   11b50:	cmn	r0, #1
   11b54:	ble	11dcc <putchar_unlocked@plt+0xe10>
   11b58:	ldr	r0, [r7, sl, lsl #2]
   11b5c:	bl	10e0c <getc_unlocked@plt>
   11b60:	mov	r5, r0
   11b64:	cmn	r0, #1
   11b68:	bne	11b30 <putchar_unlocked@plt+0xb74>
   11b6c:	mvn	r5, #0
   11b70:	add	sl, sl, #1
   11b74:	cmp	sl, r9
   11b78:	bne	11bb8 <putchar_unlocked@plt+0xbfc>
   11b7c:	ldrb	r0, [r4]
   11b80:	cmp	r0, #0
   11b84:	mov	r0, #10
   11b88:	movwne	r0, #0
   11b8c:	cmn	r5, #1
   11b90:	movne	r0, r5
   11b94:	uxtb	r0, r0
   11b98:	bl	10fbc <putchar_unlocked@plt>
   11b9c:	ldr	r5, [sp, #24]
   11ba0:	mov	r1, #1
   11ba4:	cmn	r0, #1
   11ba8:	mov	r0, r8
   11bac:	str	r1, [sp, #12]
   11bb0:	bgt	11d20 <putchar_unlocked@plt+0xd64>
   11bb4:	b	11dcc <putchar_unlocked@plt+0xe10>
   11bb8:	ldrb	r0, [r4]
   11bbc:	cmp	r0, #0
   11bc0:	mov	r0, #10
   11bc4:	movwne	r0, #0
   11bc8:	cmn	r5, #1
   11bcc:	cmpne	r5, r0
   11bd0:	beq	11be4 <putchar_unlocked@plt+0xc28>
   11bd4:	uxtb	r0, r5
   11bd8:	bl	10fbc <putchar_unlocked@plt>
   11bdc:	cmn	r0, #1
   11be0:	ble	11dcc <putchar_unlocked@plt+0xe10>
   11be4:	ldrb	r0, [r8]
   11be8:	cmp	r0, #0
   11bec:	beq	11bfc <putchar_unlocked@plt+0xc40>
   11bf0:	bl	10fbc <putchar_unlocked@plt>
   11bf4:	cmn	r0, #1
   11bf8:	ble	11dcc <putchar_unlocked@plt+0xe10>
   11bfc:	movw	r0, #24912	; 0x6150
   11c00:	ldr	r5, [sp, #24]
   11c04:	add	r2, r8, #1
   11c08:	movt	r0, #2
   11c0c:	ldr	r1, [r0]
   11c10:	movw	r0, #24908	; 0x614c
   11c14:	movt	r0, #2
   11c18:	ldr	r0, [r0]
   11c1c:	cmp	r2, r1
   11c20:	mov	r1, #1
   11c24:	str	r1, [sp, #12]
   11c28:	b	11d1c <putchar_unlocked@plt+0xd60>
   11c2c:	ldr	r0, [r7, sl, lsl #2]
   11c30:	cmp	r0, #0
   11c34:	beq	11c74 <putchar_unlocked@plt+0xcb8>
   11c38:	bl	10e6c <ferror_unlocked@plt>
   11c3c:	movw	r1, #24888	; 0x6138
   11c40:	cmp	r0, #0
   11c44:	ldr	r5, [sp, #24]
   11c48:	movt	r1, #2
   11c4c:	moveq	r6, r0
   11c50:	ldr	r0, [r7, sl, lsl #2]
   11c54:	ldr	r1, [r1]
   11c58:	cmp	r0, r1
   11c5c:	beq	11c80 <putchar_unlocked@plt+0xcc4>
   11c60:	bl	11fa4 <putchar_unlocked@plt+0xfe8>
   11c64:	cmp	r6, #0
   11c68:	cmneq	r0, #1
   11c6c:	ldreq	r6, [r9]
   11c70:	b	11c84 <putchar_unlocked@plt+0xcc8>
   11c74:	ldr	r9, [sp, #20]
   11c78:	ldr	r5, [sp, #24]
   11c7c:	b	11cd0 <putchar_unlocked@plt+0xd14>
   11c80:	bl	10f74 <clearerr_unlocked@plt>
   11c84:	cmp	r6, #0
   11c88:	beq	11cc0 <putchar_unlocked@plt+0xd04>
   11c8c:	ldr	r0, [sp, #8]
   11c90:	mov	r1, #3
   11c94:	ldr	r2, [r0, sl, lsl #2]
   11c98:	mov	r0, #0
   11c9c:	str	r0, [sp, #4]
   11ca0:	mov	r0, #0
   11ca4:	bl	139d8 <putchar_unlocked@plt+0x2a1c>
   11ca8:	movw	r2, #19475	; 0x4c13
   11cac:	mov	r3, r0
   11cb0:	mov	r0, #0
   11cb4:	mov	r1, r6
   11cb8:	movt	r2, #1
   11cbc:	bl	10e84 <error@plt>
   11cc0:	ldr	r9, [sp, #20]
   11cc4:	mov	r0, #0
   11cc8:	sub	r5, r5, #1
   11ccc:	str	r0, [r7, sl, lsl #2]
   11cd0:	add	sl, sl, #1
   11cd4:	cmp	sl, r9
   11cd8:	beq	11d3c <putchar_unlocked@plt+0xd80>
   11cdc:	ldrb	r0, [r8]
   11ce0:	cmp	r0, #0
   11ce4:	beq	11cf8 <putchar_unlocked@plt+0xd3c>
   11ce8:	ldr	r1, [sp, #16]
   11cec:	add	r6, r4, #1
   11cf0:	strb	r0, [r1, r4]
   11cf4:	b	11cfc <putchar_unlocked@plt+0xd40>
   11cf8:	mov	r6, r4
   11cfc:	movw	r0, #24912	; 0x6150
   11d00:	add	r2, r8, #1
   11d04:	movt	r0, #2
   11d08:	ldr	r1, [r0]
   11d0c:	movw	r0, #24908	; 0x614c
   11d10:	movt	r0, #2
   11d14:	ldr	r0, [r0]
   11d18:	cmp	r2, r1
   11d1c:	movne	r0, r2
   11d20:	cmp	r5, #0
   11d24:	beq	11d98 <putchar_unlocked@plt+0xddc>
   11d28:	cmp	sl, r9
   11d2c:	mov	r4, r6
   11d30:	mov	r8, r0
   11d34:	bcc	11abc <putchar_unlocked@plt+0xb00>
   11d38:	b	11d98 <putchar_unlocked@plt+0xddc>
   11d3c:	ldr	r0, [sp, #12]
   11d40:	tst	r0, #1
   11d44:	beq	11d98 <putchar_unlocked@plt+0xddc>
   11d48:	cmp	r4, #0
   11d4c:	beq	11d74 <putchar_unlocked@plt+0xdb8>
   11d50:	movw	r0, #24892	; 0x613c
   11d54:	mov	r1, #1
   11d58:	mov	r2, r4
   11d5c:	movt	r0, #2
   11d60:	ldr	r3, [r0]
   11d64:	ldr	r0, [sp, #16]
   11d68:	bl	10df4 <fwrite_unlocked@plt>
   11d6c:	cmp	r0, r4
   11d70:	bne	11dcc <putchar_unlocked@plt+0xe10>
   11d74:	movw	r0, #24906	; 0x614a
   11d78:	movt	r0, #2
   11d7c:	ldrb	r0, [r0]
   11d80:	cmp	r0, #0
   11d84:	mov	r0, #10
   11d88:	movwne	r0, #0
   11d8c:	bl	10fbc <putchar_unlocked@plt>
   11d90:	cmn	r0, #1
   11d94:	ble	11dcc <putchar_unlocked@plt+0xe10>
   11d98:	cmp	r5, #0
   11d9c:	bne	11a98 <putchar_unlocked@plt+0xadc>
   11da0:	b	11dac <putchar_unlocked@plt+0xdf0>
   11da4:	mov	r0, #1
   11da8:	str	r0, [sp, #4]
   11dac:	mov	r0, r7
   11db0:	bl	1209c <putchar_unlocked@plt+0x10e0>
   11db4:	ldr	r0, [sp, #16]
   11db8:	bl	1209c <putchar_unlocked@plt+0x10e0>
   11dbc:	ldr	r0, [sp, #4]
   11dc0:	and	r0, r0, #1
   11dc4:	sub	sp, fp, #28
   11dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dcc:	bl	11e28 <putchar_unlocked@plt+0xe6c>
   11dd0:	bl	10ef0 <__errno_location@plt>
   11dd4:	ldr	r1, [sp, #8]
   11dd8:	ldr	r4, [r0]
   11ddc:	mov	r0, #0
   11de0:	ldr	r2, [r1, r9, lsl #2]
   11de4:	mov	r1, #3
   11de8:	bl	139d8 <putchar_unlocked@plt+0x2a1c>
   11dec:	movw	r2, #19475	; 0x4c13
   11df0:	mov	r3, r0
   11df4:	mov	r0, #1
   11df8:	mov	r1, r4
   11dfc:	movt	r2, #1
   11e00:	bl	10e84 <error@plt>
   11e04:	movw	r1, #19979	; 0x4e0b
   11e08:	mov	r0, #0
   11e0c:	mov	r2, #5
   11e10:	movt	r1, #1
   11e14:	bl	10e18 <dcgettext@plt>
   11e18:	mov	r2, r0
   11e1c:	mov	r0, #1
   11e20:	mov	r1, #0
   11e24:	bl	10e84 <error@plt>
   11e28:	push	{fp, lr}
   11e2c:	mov	fp, sp
   11e30:	bl	10ef0 <__errno_location@plt>
   11e34:	ldr	r4, [r0]
   11e38:	movw	r1, #19967	; 0x4dff
   11e3c:	mov	r0, #0
   11e40:	mov	r2, #5
   11e44:	movt	r1, #1
   11e48:	bl	10e18 <dcgettext@plt>
   11e4c:	mov	r2, r0
   11e50:	mov	r0, #1
   11e54:	mov	r1, r4
   11e58:	bl	10e84 <error@plt>
   11e5c:	movw	r1, #24916	; 0x6154
   11e60:	movt	r1, #2
   11e64:	str	r0, [r1]
   11e68:	bx	lr
   11e6c:	movw	r1, #24920	; 0x6158
   11e70:	movt	r1, #2
   11e74:	strb	r0, [r1]
   11e78:	bx	lr
   11e7c:	push	{r4, r5, r6, sl, fp, lr}
   11e80:	add	fp, sp, #16
   11e84:	sub	sp, sp, #8
   11e88:	movw	r0, #24892	; 0x613c
   11e8c:	movt	r0, #2
   11e90:	ldr	r0, [r0]
   11e94:	bl	146c8 <putchar_unlocked@plt+0x370c>
   11e98:	cmp	r0, #0
   11e9c:	beq	11ec4 <putchar_unlocked@plt+0xf08>
   11ea0:	movw	r0, #24920	; 0x6158
   11ea4:	movt	r0, #2
   11ea8:	ldrb	r0, [r0]
   11eac:	cmp	r0, #0
   11eb0:	beq	11ee4 <putchar_unlocked@plt+0xf28>
   11eb4:	bl	10ef0 <__errno_location@plt>
   11eb8:	ldr	r0, [r0]
   11ebc:	cmp	r0, #32
   11ec0:	bne	11ee4 <putchar_unlocked@plt+0xf28>
   11ec4:	movw	r0, #24880	; 0x6130
   11ec8:	movt	r0, #2
   11ecc:	ldr	r0, [r0]
   11ed0:	bl	146c8 <putchar_unlocked@plt+0x370c>
   11ed4:	cmp	r0, #0
   11ed8:	subeq	sp, fp, #16
   11edc:	popeq	{r4, r5, r6, sl, fp, pc}
   11ee0:	b	11f54 <putchar_unlocked@plt+0xf98>
   11ee4:	movw	r1, #19967	; 0x4dff
   11ee8:	mov	r0, #0
   11eec:	mov	r2, #5
   11ef0:	movt	r1, #1
   11ef4:	bl	10e18 <dcgettext@plt>
   11ef8:	mov	r4, r0
   11efc:	movw	r0, #24916	; 0x6154
   11f00:	movt	r0, #2
   11f04:	ldr	r6, [r0]
   11f08:	bl	10ef0 <__errno_location@plt>
   11f0c:	ldr	r5, [r0]
   11f10:	cmp	r6, #0
   11f14:	bne	11f30 <putchar_unlocked@plt+0xf74>
   11f18:	movw	r2, #19475	; 0x4c13
   11f1c:	mov	r0, #0
   11f20:	mov	r1, r5
   11f24:	mov	r3, r4
   11f28:	movt	r2, #1
   11f2c:	b	11f50 <putchar_unlocked@plt+0xf94>
   11f30:	mov	r0, r6
   11f34:	bl	1392c <putchar_unlocked@plt+0x2970>
   11f38:	movw	r2, #20175	; 0x4ecf
   11f3c:	mov	r3, r0
   11f40:	str	r4, [sp]
   11f44:	mov	r0, #0
   11f48:	mov	r1, r5
   11f4c:	movt	r2, #1
   11f50:	bl	10e84 <error@plt>
   11f54:	movw	r0, #24796	; 0x60dc
   11f58:	movt	r0, #2
   11f5c:	ldr	r0, [r0]
   11f60:	bl	10dd0 <_exit@plt>
   11f64:	b	10dac <posix_fadvise64@plt>
   11f68:	cmp	r0, #0
   11f6c:	bxeq	lr
   11f70:	push	{r4, sl, fp, lr}
   11f74:	add	fp, sp, #8
   11f78:	sub	sp, sp, #16
   11f7c:	mov	r4, r1
   11f80:	bl	10f20 <fileno@plt>
   11f84:	mov	r1, #0
   11f88:	mov	r2, #0
   11f8c:	mov	r3, #0
   11f90:	str	r1, [sp]
   11f94:	stmib	sp, {r1, r4}
   11f98:	bl	10dac <posix_fadvise64@plt>
   11f9c:	sub	sp, fp, #8
   11fa0:	pop	{r4, sl, fp, pc}
   11fa4:	push	{r4, r5, r6, sl, fp, lr}
   11fa8:	add	fp, sp, #16
   11fac:	sub	sp, sp, #8
   11fb0:	mov	r4, r0
   11fb4:	bl	10f20 <fileno@plt>
   11fb8:	cmn	r0, #1
   11fbc:	ble	12030 <putchar_unlocked@plt+0x1074>
   11fc0:	mov	r0, r4
   11fc4:	bl	10ea8 <__freading@plt>
   11fc8:	cmp	r0, #0
   11fcc:	beq	11ff8 <putchar_unlocked@plt+0x103c>
   11fd0:	mov	r0, r4
   11fd4:	bl	10f20 <fileno@plt>
   11fd8:	mov	r1, #1
   11fdc:	mov	r2, #0
   11fe0:	mov	r3, #0
   11fe4:	str	r1, [sp]
   11fe8:	bl	10e48 <lseek64@plt>
   11fec:	and	r0, r0, r1
   11ff0:	cmn	r0, #1
   11ff4:	beq	12030 <putchar_unlocked@plt+0x1074>
   11ff8:	mov	r0, r4
   11ffc:	bl	12040 <putchar_unlocked@plt+0x1084>
   12000:	cmp	r0, #0
   12004:	beq	12030 <putchar_unlocked@plt+0x1074>
   12008:	bl	10ef0 <__errno_location@plt>
   1200c:	ldr	r6, [r0]
   12010:	mov	r5, r0
   12014:	mov	r0, r4
   12018:	bl	10f38 <fclose@plt>
   1201c:	cmp	r6, #0
   12020:	strne	r6, [r5]
   12024:	mvnne	r0, #0
   12028:	sub	sp, fp, #16
   1202c:	pop	{r4, r5, r6, sl, fp, pc}
   12030:	mov	r0, r4
   12034:	sub	sp, fp, #16
   12038:	pop	{r4, r5, r6, sl, fp, lr}
   1203c:	b	10f38 <fclose@plt>
   12040:	push	{r4, sl, fp, lr}
   12044:	add	fp, sp, #8
   12048:	sub	sp, sp, #8
   1204c:	mov	r4, r0
   12050:	cmp	r0, #0
   12054:	beq	12070 <putchar_unlocked@plt+0x10b4>
   12058:	mov	r0, r4
   1205c:	bl	10ea8 <__freading@plt>
   12060:	cmp	r0, #0
   12064:	ldrbne	r0, [r4, #1]
   12068:	tstne	r0, #1
   1206c:	bne	12080 <putchar_unlocked@plt+0x10c4>
   12070:	mov	r0, r4
   12074:	sub	sp, fp, #8
   12078:	pop	{r4, sl, fp, lr}
   1207c:	b	10db8 <fflush@plt>
   12080:	mov	r0, #1
   12084:	mov	r2, #0
   12088:	mov	r3, #0
   1208c:	str	r0, [sp]
   12090:	mov	r0, r4
   12094:	bl	120c4 <putchar_unlocked@plt+0x1108>
   12098:	b	12070 <putchar_unlocked@plt+0x10b4>
   1209c:	push	{r4, r5, r6, sl, fp, lr}
   120a0:	add	fp, sp, #16
   120a4:	mov	r4, r0
   120a8:	bl	10ef0 <__errno_location@plt>
   120ac:	ldr	r6, [r0]
   120b0:	mov	r5, r0
   120b4:	mov	r0, r4
   120b8:	bl	10dc4 <free@plt>
   120bc:	str	r6, [r5]
   120c0:	pop	{r4, r5, r6, sl, fp, pc}
   120c4:	push	{r4, r5, r6, r7, fp, lr}
   120c8:	add	fp, sp, #16
   120cc:	sub	sp, sp, #8
   120d0:	mov	r4, r0
   120d4:	ldr	r0, [r0, #4]
   120d8:	mov	r5, r3
   120dc:	mov	r6, r2
   120e0:	ldr	r1, [r4, #8]
   120e4:	cmp	r1, r0
   120e8:	bne	12104 <putchar_unlocked@plt+0x1148>
   120ec:	ldrd	r0, [r4, #16]
   120f0:	cmp	r1, r0
   120f4:	bne	12104 <putchar_unlocked@plt+0x1148>
   120f8:	ldr	r0, [r4, #36]	; 0x24
   120fc:	cmp	r0, #0
   12100:	beq	1211c <putchar_unlocked@plt+0x1160>
   12104:	mov	r0, r4
   12108:	mov	r2, r6
   1210c:	mov	r3, r5
   12110:	sub	sp, fp, #16
   12114:	pop	{r4, r5, r6, r7, fp, lr}
   12118:	b	10f44 <fseeko64@plt>
   1211c:	ldr	r7, [fp, #8]
   12120:	mov	r0, r4
   12124:	bl	10f20 <fileno@plt>
   12128:	mov	r2, r6
   1212c:	mov	r3, r5
   12130:	str	r7, [sp]
   12134:	bl	10e48 <lseek64@plt>
   12138:	and	r2, r0, r1
   1213c:	cmn	r2, #1
   12140:	beq	1215c <putchar_unlocked@plt+0x11a0>
   12144:	strd	r0, [r4, #80]	; 0x50
   12148:	ldr	r0, [r4]
   1214c:	bic	r0, r0, #16
   12150:	str	r0, [r4]
   12154:	mov	r0, #0
   12158:	b	12160 <putchar_unlocked@plt+0x11a4>
   1215c:	mvn	r0, #0
   12160:	sub	sp, fp, #16
   12164:	pop	{r4, r5, r6, r7, fp, pc}
   12168:	push	{r4, r5, fp, lr}
   1216c:	add	fp, sp, #8
   12170:	cmp	r0, #0
   12174:	beq	12208 <putchar_unlocked@plt+0x124c>
   12178:	mov	r1, #47	; 0x2f
   1217c:	mov	r4, r0
   12180:	bl	10f5c <strrchr@plt>
   12184:	cmp	r0, #0
   12188:	mov	r5, r4
   1218c:	addne	r5, r0, #1
   12190:	sub	r0, r5, r4
   12194:	cmp	r0, #7
   12198:	blt	121ec <putchar_unlocked@plt+0x1230>
   1219c:	movw	r1, #20238	; 0x4f0e
   121a0:	sub	r0, r5, #7
   121a4:	mov	r2, #7
   121a8:	movt	r1, #1
   121ac:	bl	10fa4 <strncmp@plt>
   121b0:	cmp	r0, #0
   121b4:	bne	121ec <putchar_unlocked@plt+0x1230>
   121b8:	movw	r1, #20246	; 0x4f16
   121bc:	mov	r0, r5
   121c0:	mov	r2, #3
   121c4:	movt	r1, #1
   121c8:	bl	10fa4 <strncmp@plt>
   121cc:	cmp	r0, #0
   121d0:	beq	121dc <putchar_unlocked@plt+0x1220>
   121d4:	mov	r4, r5
   121d8:	b	121ec <putchar_unlocked@plt+0x1230>
   121dc:	movw	r0, #24864	; 0x6120
   121e0:	add	r4, r5, #3
   121e4:	movt	r0, #2
   121e8:	str	r4, [r0]
   121ec:	movw	r0, #24868	; 0x6124
   121f0:	movt	r0, #2
   121f4:	str	r4, [r0]
   121f8:	movw	r0, #24924	; 0x615c
   121fc:	movt	r0, #2
   12200:	str	r4, [r0]
   12204:	pop	{r4, r5, fp, pc}
   12208:	movw	r0, #24880	; 0x6130
   1220c:	movt	r0, #2
   12210:	ldr	r1, [r0]
   12214:	movw	r0, #20182	; 0x4ed6
   12218:	movt	r0, #1
   1221c:	bl	10f98 <fputs@plt>
   12220:	bl	10fb0 <abort@plt>
   12224:	push	{r4, r5, r6, sl, fp, lr}
   12228:	add	fp, sp, #16
   1222c:	mov	r4, r0
   12230:	movw	r0, #24928	; 0x6160
   12234:	movt	r0, #2
   12238:	cmp	r4, #0
   1223c:	moveq	r4, r0
   12240:	bl	10ef0 <__errno_location@plt>
   12244:	ldr	r6, [r0]
   12248:	mov	r5, r0
   1224c:	mov	r0, r4
   12250:	mov	r1, #48	; 0x30
   12254:	bl	144b0 <putchar_unlocked@plt+0x34f4>
   12258:	str	r6, [r5]
   1225c:	pop	{r4, r5, r6, sl, fp, pc}
   12260:	movw	r1, #24928	; 0x6160
   12264:	cmp	r0, #0
   12268:	movt	r1, #2
   1226c:	movne	r1, r0
   12270:	ldr	r0, [r1]
   12274:	bx	lr
   12278:	movw	r2, #24928	; 0x6160
   1227c:	cmp	r0, #0
   12280:	movt	r2, #2
   12284:	movne	r2, r0
   12288:	str	r1, [r2]
   1228c:	bx	lr
   12290:	movw	r3, #24928	; 0x6160
   12294:	cmp	r0, #0
   12298:	movt	r3, #2
   1229c:	movne	r3, r0
   122a0:	ubfx	r0, r1, #5, #3
   122a4:	and	r1, r1, #31
   122a8:	add	r0, r3, r0, lsl #2
   122ac:	ldr	r3, [r0, #8]
   122b0:	eor	r2, r2, r3, lsr r1
   122b4:	and	r2, r2, #1
   122b8:	eor	r2, r3, r2, lsl r1
   122bc:	str	r2, [r0, #8]
   122c0:	mov	r0, #1
   122c4:	and	r0, r0, r3, lsr r1
   122c8:	bx	lr
   122cc:	movw	r2, #24928	; 0x6160
   122d0:	cmp	r0, #0
   122d4:	movt	r2, #2
   122d8:	movne	r2, r0
   122dc:	ldr	r0, [r2, #4]
   122e0:	str	r1, [r2, #4]
   122e4:	bx	lr
   122e8:	movw	r3, #24928	; 0x6160
   122ec:	cmp	r0, #0
   122f0:	movt	r3, #2
   122f4:	movne	r3, r0
   122f8:	cmp	r1, #0
   122fc:	mov	r0, #10
   12300:	cmpne	r2, #0
   12304:	str	r0, [r3]
   12308:	bne	12318 <putchar_unlocked@plt+0x135c>
   1230c:	push	{fp, lr}
   12310:	mov	fp, sp
   12314:	bl	10fb0 <abort@plt>
   12318:	str	r1, [r3, #40]	; 0x28
   1231c:	str	r2, [r3, #44]	; 0x2c
   12320:	bx	lr
   12324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12328:	add	fp, sp, #28
   1232c:	sub	sp, sp, #20
   12330:	mov	r7, r0
   12334:	ldr	r0, [fp, #8]
   12338:	movw	r5, #24928	; 0x6160
   1233c:	mov	r8, r3
   12340:	mov	r9, r2
   12344:	mov	sl, r1
   12348:	movt	r5, #2
   1234c:	cmp	r0, #0
   12350:	movne	r5, r0
   12354:	bl	10ef0 <__errno_location@plt>
   12358:	mov	r4, r0
   1235c:	ldm	r5, {r0, r1}
   12360:	ldr	r2, [r5, #40]	; 0x28
   12364:	ldr	r3, [r5, #44]	; 0x2c
   12368:	add	r5, r5, #8
   1236c:	ldr	r6, [r4]
   12370:	stm	sp, {r0, r1, r5}
   12374:	str	r2, [sp, #12]
   12378:	str	r3, [sp, #16]
   1237c:	mov	r0, r7
   12380:	mov	r1, sl
   12384:	mov	r2, r9
   12388:	mov	r3, r8
   1238c:	bl	1239c <putchar_unlocked@plt+0x13e0>
   12390:	str	r6, [r4]
   12394:	sub	sp, fp, #28
   12398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1239c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123a0:	add	fp, sp, #28
   123a4:	sub	sp, sp, #156	; 0x9c
   123a8:	str	r0, [fp, #-56]	; 0xffffffc8
   123ac:	ldr	r0, [fp, #12]
   123b0:	mov	r4, r1
   123b4:	str	r3, [sp, #80]	; 0x50
   123b8:	str	r2, [fp, #-84]	; 0xffffffac
   123bc:	and	r1, r0, #4
   123c0:	str	r1, [sp, #24]
   123c4:	and	r1, r0, #1
   123c8:	str	r1, [sp, #28]
   123cc:	ubfx	r7, r0, #1, #1
   123d0:	bl	10e54 <__ctype_get_mb_cur_max@plt>
   123d4:	str	r0, [sp, #32]
   123d8:	ldr	r0, [fp, #24]
   123dc:	ldr	r9, [fp, #8]
   123e0:	mov	r2, #0
   123e4:	mov	r1, #0
   123e8:	mov	r5, #0
   123ec:	str	r2, [sp, #52]	; 0x34
   123f0:	mov	r2, #1
   123f4:	str	r0, [sp, #72]	; 0x48
   123f8:	ldr	r0, [fp, #20]
   123fc:	str	r0, [sp, #64]	; 0x40
   12400:	mov	r0, #0
   12404:	str	r0, [sp, #92]	; 0x5c
   12408:	mov	r0, #0
   1240c:	str	r0, [fp, #-76]	; 0xffffffb4
   12410:	mov	r0, #0
   12414:	cmp	r9, #10
   12418:	str	r1, [sp, #68]	; 0x44
   1241c:	bhi	1341c <putchar_unlocked@plt+0x2460>
   12420:	add	r1, pc, #28
   12424:	ldr	ip, [fp, #-84]	; 0xffffffac
   12428:	ldr	lr, [sp, #80]	; 0x50
   1242c:	mov	r6, r4
   12430:	mov	r8, #0
   12434:	mov	r3, #1
   12438:	mov	sl, #0
   1243c:	mov	r4, r2
   12440:	ldr	pc, [r1, r9, lsl #2]
   12444:	andeq	r2, r1, r4, lsl r5
   12448:	andeq	r2, r1, r0, asr r5
   1244c:	andeq	r2, r1, r4, lsr #10
   12450:	andeq	r2, r1, ip, lsl #10
   12454:	andeq	r2, r1, r4, asr #10
   12458:	muleq	r1, ip, r5
   1245c:	andeq	r2, r1, r4, lsr r5
   12460:	strdeq	r2, [r1], -ip
   12464:	andeq	r2, r1, r0, ror r4
   12468:	andeq	r2, r1, r0, ror r4
   1246c:	muleq	r1, r8, r4
   12470:	movw	r0, #20330	; 0x4f6a
   12474:	mov	r1, r9
   12478:	movt	r0, #1
   1247c:	bl	13b84 <putchar_unlocked@plt+0x2bc8>
   12480:	str	r0, [sp, #64]	; 0x40
   12484:	movw	r0, #20332	; 0x4f6c
   12488:	mov	r1, r9
   1248c:	movt	r0, #1
   12490:	bl	13b84 <putchar_unlocked@plt+0x2bc8>
   12494:	str	r0, [sp, #72]	; 0x48
   12498:	mov	r8, #0
   1249c:	mov	sl, r7
   124a0:	tst	r7, #1
   124a4:	str	r5, [fp, #-48]	; 0xffffffd0
   124a8:	bne	124e4 <putchar_unlocked@plt+0x1528>
   124ac:	ldr	r0, [sp, #64]	; 0x40
   124b0:	ldrb	r0, [r0]
   124b4:	cmp	r0, #0
   124b8:	beq	124e4 <putchar_unlocked@plt+0x1528>
   124bc:	ldr	r1, [sp, #64]	; 0x40
   124c0:	mov	r8, #0
   124c4:	add	r1, r1, #1
   124c8:	cmp	r8, r6
   124cc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   124d0:	strbcc	r0, [r2, r8]
   124d4:	ldrb	r0, [r1, r8]
   124d8:	add	r8, r8, #1
   124dc:	cmp	r0, #0
   124e0:	bne	124c8 <putchar_unlocked@plt+0x150c>
   124e4:	ldr	r7, [sp, #72]	; 0x48
   124e8:	mov	r0, r7
   124ec:	bl	10ee4 <strlen@plt>
   124f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   124f4:	ldr	lr, [sp, #80]	; 0x50
   124f8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   124fc:	str	r0, [fp, #-76]	; 0xffffffb4
   12500:	str	r7, [sp, #92]	; 0x5c
   12504:	mov	r3, #1
   12508:	b	125fc <putchar_unlocked@plt+0x1640>
   1250c:	mov	r0, #1
   12510:	b	12550 <putchar_unlocked@plt+0x1594>
   12514:	mov	r9, #0
   12518:	mov	r8, #0
   1251c:	mov	r3, r0
   12520:	b	125f8 <putchar_unlocked@plt+0x163c>
   12524:	tst	r7, #1
   12528:	bne	12550 <putchar_unlocked@plt+0x1594>
   1252c:	mov	r3, r0
   12530:	b	12578 <putchar_unlocked@plt+0x15bc>
   12534:	mov	r0, #1
   12538:	mov	r8, #0
   1253c:	mov	r9, #5
   12540:	b	125b0 <putchar_unlocked@plt+0x15f4>
   12544:	mov	r3, #1
   12548:	tst	r7, #1
   1254c:	beq	12578 <putchar_unlocked@plt+0x15bc>
   12550:	mov	r1, #1
   12554:	mov	r8, #0
   12558:	mov	r9, #2
   1255c:	mov	r3, r0
   12560:	mov	sl, #1
   12564:	str	r1, [fp, #-76]	; 0xffffffb4
   12568:	movw	r1, #20332	; 0x4f6c
   1256c:	movt	r1, #1
   12570:	str	r1, [sp, #92]	; 0x5c
   12574:	b	125fc <putchar_unlocked@plt+0x1640>
   12578:	cmp	r6, #0
   1257c:	mov	r8, #1
   12580:	mov	r9, #2
   12584:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12588:	movne	r0, #39	; 0x27
   1258c:	strbne	r0, [r1]
   12590:	movw	r0, #20332	; 0x4f6c
   12594:	movt	r0, #1
   12598:	b	125ec <putchar_unlocked@plt+0x1630>
   1259c:	mov	r9, #5
   125a0:	tst	r7, #1
   125a4:	beq	125cc <putchar_unlocked@plt+0x1610>
   125a8:	mov	r0, #1
   125ac:	mov	r8, #0
   125b0:	str	r0, [fp, #-76]	; 0xffffffb4
   125b4:	movw	r0, #20328	; 0x4f68
   125b8:	mov	r3, #1
   125bc:	mov	sl, #1
   125c0:	movt	r0, #1
   125c4:	str	r0, [sp, #92]	; 0x5c
   125c8:	b	125fc <putchar_unlocked@plt+0x1640>
   125cc:	cmp	r6, #0
   125d0:	mov	r8, #1
   125d4:	mov	r3, #1
   125d8:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   125dc:	movne	r0, #34	; 0x22
   125e0:	strbne	r0, [r1]
   125e4:	movw	r0, #20328	; 0x4f68
   125e8:	movt	r0, #1
   125ec:	str	r0, [sp, #92]	; 0x5c
   125f0:	mov	r0, #1
   125f4:	str	r0, [fp, #-76]	; 0xffffffb4
   125f8:	mov	sl, #0
   125fc:	ldr	r0, [fp, #16]
   12600:	mov	r7, #0
   12604:	str	r9, [fp, #-64]	; 0xffffffc0
   12608:	str	sl, [fp, #-72]	; 0xffffffb8
   1260c:	str	r3, [sp, #84]	; 0x54
   12610:	cmp	r0, #0
   12614:	movwne	r0, #1
   12618:	and	r0, r0, sl
   1261c:	str	r0, [fp, #-88]	; 0xffffffa8
   12620:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12624:	cmp	r0, #0
   12628:	movwne	r0, #1
   1262c:	subs	r2, r9, #2
   12630:	and	r1, r0, sl
   12634:	str	r2, [fp, #-80]	; 0xffffffb0
   12638:	and	r1, r3, r1
   1263c:	str	r1, [sp, #44]	; 0x2c
   12640:	clz	r1, r2
   12644:	lsr	r1, r1, #5
   12648:	and	r1, r1, sl
   1264c:	str	r1, [sp, #56]	; 0x38
   12650:	mov	r1, r2
   12654:	eor	r2, sl, #1
   12658:	movwne	r1, #1
   1265c:	str	r2, [sp, #88]	; 0x58
   12660:	orr	r2, r1, r2
   12664:	and	r1, r1, r3
   12668:	and	r0, r0, r1
   1266c:	str	r2, [sp, #60]	; 0x3c
   12670:	str	r1, [fp, #-68]	; 0xffffffbc
   12674:	str	r0, [fp, #-60]	; 0xffffffc4
   12678:	eor	r0, r3, #1
   1267c:	str	r0, [sp, #48]	; 0x30
   12680:	cmn	lr, #1
   12684:	beq	12694 <putchar_unlocked@plt+0x16d8>
   12688:	cmp	r7, lr
   1268c:	bne	126a0 <putchar_unlocked@plt+0x16e4>
   12690:	b	1324c <putchar_unlocked@plt+0x2290>
   12694:	ldrb	r0, [ip, r7]
   12698:	cmp	r0, #0
   1269c:	beq	13254 <putchar_unlocked@plt+0x2298>
   126a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   126a4:	mov	r9, #0
   126a8:	str	r5, [fp, #-48]	; 0xffffffd0
   126ac:	str	r6, [fp, #-52]	; 0xffffffcc
   126b0:	cmp	r0, #0
   126b4:	beq	126f4 <putchar_unlocked@plt+0x1738>
   126b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   126bc:	mov	r5, r4
   126c0:	add	r4, r7, r0
   126c4:	cmp	r0, #2
   126c8:	bcc	126e4 <putchar_unlocked@plt+0x1728>
   126cc:	cmn	lr, #1
   126d0:	bne	126e4 <putchar_unlocked@plt+0x1728>
   126d4:	mov	r0, ip
   126d8:	bl	10ee4 <strlen@plt>
   126dc:	ldr	ip, [fp, #-84]	; 0xffffffac
   126e0:	mov	lr, r0
   126e4:	cmp	r4, lr
   126e8:	bls	126fc <putchar_unlocked@plt+0x1740>
   126ec:	mov	r6, #0
   126f0:	b	1273c <putchar_unlocked@plt+0x1780>
   126f4:	mov	r6, #0
   126f8:	b	12740 <putchar_unlocked@plt+0x1784>
   126fc:	ldr	r1, [sp, #92]	; 0x5c
   12700:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12704:	add	r0, ip, r7
   12708:	mov	r4, lr
   1270c:	bl	10e00 <memcmp@plt>
   12710:	ldr	r2, [sp, #88]	; 0x58
   12714:	cmp	r0, #0
   12718:	mov	r1, r0
   1271c:	movwne	r1, #1
   12720:	orr	r1, r1, r2
   12724:	tst	r1, #1
   12728:	beq	132e8 <putchar_unlocked@plt+0x232c>
   1272c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12730:	clz	r0, r0
   12734:	mov	lr, r4
   12738:	lsr	r6, r0, #5
   1273c:	mov	r4, r5
   12740:	ldrb	r5, [ip, r7]
   12744:	cmp	r5, #126	; 0x7e
   12748:	bhi	12b10 <putchar_unlocked@plt+0x1b54>
   1274c:	add	r3, pc, #16
   12750:	mov	sl, #1
   12754:	mov	r2, #110	; 0x6e
   12758:	mov	r0, #97	; 0x61
   1275c:	mov	r1, #0
   12760:	ldr	pc, [r3, r5, lsl #2]
   12764:	strdeq	r2, [r1], -r4
   12768:	andeq	r2, r1, r0, lsl fp
   1276c:	andeq	r2, r1, r0, lsl fp
   12770:	andeq	r2, r1, r0, lsl fp
   12774:	andeq	r2, r1, r0, lsl fp
   12778:	andeq	r2, r1, r0, lsl fp
   1277c:	andeq	r2, r1, r0, lsl fp
   12780:			; <UNDEFINED> instruction: 0x00012bb4
   12784:	ldrdeq	r2, [r1], -r4
   12788:	andeq	r2, r1, ip, asr #19
   1278c:	andeq	r2, r1, r0, ror #19
   12790:	andeq	r2, r1, r4, ror #20
   12794:	andeq	r2, r1, r4, asr #19
   12798:	ldrdeq	r2, [r1], -ip
   1279c:	andeq	r2, r1, r0, lsl fp
   127a0:	andeq	r2, r1, r0, lsl fp
   127a4:	andeq	r2, r1, r0, lsl fp
   127a8:	andeq	r2, r1, r0, lsl fp
   127ac:	andeq	r2, r1, r0, lsl fp
   127b0:	andeq	r2, r1, r0, lsl fp
   127b4:	andeq	r2, r1, r0, lsl fp
   127b8:	andeq	r2, r1, r0, lsl fp
   127bc:	andeq	r2, r1, r0, lsl fp
   127c0:	andeq	r2, r1, r0, lsl fp
   127c4:	andeq	r2, r1, r0, lsl fp
   127c8:	andeq	r2, r1, r0, lsl fp
   127cc:	andeq	r2, r1, r0, lsl fp
   127d0:	andeq	r2, r1, r0, lsl fp
   127d4:	andeq	r2, r1, r0, lsl fp
   127d8:	andeq	r2, r1, r0, lsl fp
   127dc:	andeq	r2, r1, r0, lsl fp
   127e0:	andeq	r2, r1, r0, lsl fp
   127e4:	andeq	r2, r1, r4, ror fp
   127e8:	andeq	r2, r1, r8, ror fp
   127ec:	andeq	r2, r1, r8, ror fp
   127f0:	andeq	r2, r1, r4, ror r9
   127f4:	andeq	r2, r1, r8, ror fp
   127f8:	andeq	r2, r1, r0, ror #18
   127fc:	andeq	r2, r1, r8, ror fp
   12800:	andeq	r2, r1, ip, ror #20
   12804:	andeq	r2, r1, r8, ror fp
   12808:	andeq	r2, r1, r8, ror fp
   1280c:	andeq	r2, r1, r8, ror fp
   12810:	andeq	r2, r1, r0, ror #18
   12814:	andeq	r2, r1, r0, ror #18
   12818:	andeq	r2, r1, r0, ror #18
   1281c:	andeq	r2, r1, r0, ror #18
   12820:	andeq	r2, r1, r0, ror #18
   12824:	andeq	r2, r1, r0, ror #18
   12828:	andeq	r2, r1, r0, ror #18
   1282c:	andeq	r2, r1, r0, ror #18
   12830:	andeq	r2, r1, r0, ror #18
   12834:	andeq	r2, r1, r0, ror #18
   12838:	andeq	r2, r1, r0, ror #18
   1283c:	andeq	r2, r1, r0, ror #18
   12840:	andeq	r2, r1, r0, ror #18
   12844:	andeq	r2, r1, r0, ror #18
   12848:	andeq	r2, r1, r0, ror #18
   1284c:	andeq	r2, r1, r0, ror #18
   12850:	andeq	r2, r1, r8, ror fp
   12854:	andeq	r2, r1, r8, ror fp
   12858:	andeq	r2, r1, r8, ror fp
   1285c:	andeq	r2, r1, r8, ror fp
   12860:	andeq	r2, r1, r8, lsr sl
   12864:	andeq	r2, r1, r0, lsl fp
   12868:	andeq	r2, r1, r0, ror #18
   1286c:	andeq	r2, r1, r0, ror #18
   12870:	andeq	r2, r1, r0, ror #18
   12874:	andeq	r2, r1, r0, ror #18
   12878:	andeq	r2, r1, r0, ror #18
   1287c:	andeq	r2, r1, r0, ror #18
   12880:	andeq	r2, r1, r0, ror #18
   12884:	andeq	r2, r1, r0, ror #18
   12888:	andeq	r2, r1, r0, ror #18
   1288c:	andeq	r2, r1, r0, ror #18
   12890:	andeq	r2, r1, r0, ror #18
   12894:	andeq	r2, r1, r0, ror #18
   12898:	andeq	r2, r1, r0, ror #18
   1289c:	andeq	r2, r1, r0, ror #18
   128a0:	andeq	r2, r1, r0, ror #18
   128a4:	andeq	r2, r1, r0, ror #18
   128a8:	andeq	r2, r1, r0, ror #18
   128ac:	andeq	r2, r1, r0, ror #18
   128b0:	andeq	r2, r1, r0, ror #18
   128b4:	andeq	r2, r1, r0, ror #18
   128b8:	andeq	r2, r1, r0, ror #18
   128bc:	andeq	r2, r1, r0, ror #18
   128c0:	andeq	r2, r1, r0, ror #18
   128c4:	andeq	r2, r1, r0, ror #18
   128c8:	andeq	r2, r1, r0, ror #18
   128cc:	andeq	r2, r1, r0, ror #18
   128d0:	andeq	r2, r1, r8, ror fp
   128d4:	andeq	r2, r1, r0, lsr #19
   128d8:	andeq	r2, r1, r0, ror #18
   128dc:	andeq	r2, r1, r8, ror fp
   128e0:	andeq	r2, r1, r0, ror #18
   128e4:	andeq	r2, r1, r8, ror fp
   128e8:	andeq	r2, r1, r0, ror #18
   128ec:	andeq	r2, r1, r0, ror #18
   128f0:	andeq	r2, r1, r0, ror #18
   128f4:	andeq	r2, r1, r0, ror #18
   128f8:	andeq	r2, r1, r0, ror #18
   128fc:	andeq	r2, r1, r0, ror #18
   12900:	andeq	r2, r1, r0, ror #18
   12904:	andeq	r2, r1, r0, ror #18
   12908:	andeq	r2, r1, r0, ror #18
   1290c:	andeq	r2, r1, r0, ror #18
   12910:	andeq	r2, r1, r0, ror #18
   12914:	andeq	r2, r1, r0, ror #18
   12918:	andeq	r2, r1, r0, ror #18
   1291c:	andeq	r2, r1, r0, ror #18
   12920:	andeq	r2, r1, r0, ror #18
   12924:	andeq	r2, r1, r0, ror #18
   12928:	andeq	r2, r1, r0, ror #18
   1292c:	andeq	r2, r1, r0, ror #18
   12930:	andeq	r2, r1, r0, ror #18
   12934:	andeq	r2, r1, r0, ror #18
   12938:	andeq	r2, r1, r0, ror #18
   1293c:	andeq	r2, r1, r0, ror #18
   12940:	andeq	r2, r1, r0, ror #18
   12944:	andeq	r2, r1, r0, ror #18
   12948:	andeq	r2, r1, r0, ror #18
   1294c:	andeq	r2, r1, r0, ror #18
   12950:	andeq	r2, r1, r4, lsl #19
   12954:	andeq	r2, r1, r8, ror fp
   12958:	andeq	r2, r1, r4, lsl #19
   1295c:	andeq	r2, r1, r4, ror r9
   12960:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12964:	cmp	r0, #0
   12968:	beq	12bc8 <putchar_unlocked@plt+0x1c0c>
   1296c:	ldr	r0, [fp, #16]
   12970:	b	12bcc <putchar_unlocked@plt+0x1c10>
   12974:	mov	sl, #0
   12978:	cmp	r7, #0
   1297c:	bne	12de4 <putchar_unlocked@plt+0x1e28>
   12980:	b	12b74 <putchar_unlocked@plt+0x1bb8>
   12984:	mov	sl, #0
   12988:	cmn	lr, #1
   1298c:	beq	12b60 <putchar_unlocked@plt+0x1ba4>
   12990:	cmp	r7, #0
   12994:	cmpeq	lr, #1
   12998:	bne	12de4 <putchar_unlocked@plt+0x1e28>
   1299c:	b	12b74 <putchar_unlocked@plt+0x1bb8>
   129a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   129a4:	cmp	r0, #2
   129a8:	bne	12b98 <putchar_unlocked@plt+0x1bdc>
   129ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   129b0:	tst	r0, #1
   129b4:	bne	13304 <putchar_unlocked@plt+0x2348>
   129b8:	mov	r9, #0
   129bc:	mov	r0, #92	; 0x5c
   129c0:	b	12bac <putchar_unlocked@plt+0x1bf0>
   129c4:	mov	r0, #102	; 0x66
   129c8:	b	12bb4 <putchar_unlocked@plt+0x1bf8>
   129cc:	mov	r2, #116	; 0x74
   129d0:	b	129e0 <putchar_unlocked@plt+0x1a24>
   129d4:	mov	r0, #98	; 0x62
   129d8:	b	12bb4 <putchar_unlocked@plt+0x1bf8>
   129dc:	mov	r2, #114	; 0x72
   129e0:	ldr	r0, [sp, #60]	; 0x3c
   129e4:	tst	r0, #1
   129e8:	mov	r0, r2
   129ec:	bne	12bb4 <putchar_unlocked@plt+0x1bf8>
   129f0:	b	13304 <putchar_unlocked@plt+0x2348>
   129f4:	ldr	r0, [sp, #84]	; 0x54
   129f8:	tst	r0, #1
   129fc:	beq	12ca0 <putchar_unlocked@plt+0x1ce4>
   12a00:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12a04:	tst	r0, #1
   12a08:	bne	1340c <putchar_unlocked@plt+0x2450>
   12a0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12a10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12a14:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12a18:	cmp	r0, #2
   12a1c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12a20:	movwne	r0, #1
   12a24:	orr	r0, r0, r3
   12a28:	tst	r0, #1
   12a2c:	beq	13120 <putchar_unlocked@plt+0x2164>
   12a30:	mov	r0, r8
   12a34:	b	13160 <putchar_unlocked@plt+0x21a4>
   12a38:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12a3c:	mov	r9, #0
   12a40:	mov	r5, #63	; 0x3f
   12a44:	cmp	r0, #5
   12a48:	beq	12dec <putchar_unlocked@plt+0x1e30>
   12a4c:	cmp	r0, #2
   12a50:	bne	12eac <putchar_unlocked@plt+0x1ef0>
   12a54:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12a58:	tst	r0, #1
   12a5c:	beq	12eb0 <putchar_unlocked@plt+0x1ef4>
   12a60:	b	13304 <putchar_unlocked@plt+0x2348>
   12a64:	mov	r0, #118	; 0x76
   12a68:	b	12bb4 <putchar_unlocked@plt+0x1bf8>
   12a6c:	mov	r0, #1
   12a70:	mov	r5, #39	; 0x27
   12a74:	str	r0, [sp, #52]	; 0x34
   12a78:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12a7c:	cmp	r0, #2
   12a80:	bne	12b08 <putchar_unlocked@plt+0x1b4c>
   12a84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12a88:	tst	r0, #1
   12a8c:	bne	13304 <putchar_unlocked@plt+0x2348>
   12a90:	ldr	r3, [sp, #68]	; 0x44
   12a94:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12a98:	mov	r9, #0
   12a9c:	clz	r1, r2
   12aa0:	cmp	r3, #0
   12aa4:	mov	r0, r3
   12aa8:	movwne	r0, #1
   12aac:	lsr	r1, r1, #5
   12ab0:	orrs	r0, r0, r1
   12ab4:	moveq	r3, r2
   12ab8:	moveq	r2, r0
   12abc:	cmp	r8, r2
   12ac0:	str	r3, [sp, #68]	; 0x44
   12ac4:	str	r2, [fp, #-52]	; 0xffffffcc
   12ac8:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12acc:	movcc	r0, #39	; 0x27
   12ad0:	strbcc	r0, [r1, r8]
   12ad4:	add	r0, r8, #1
   12ad8:	cmp	r0, r2
   12adc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12ae0:	movcc	r1, #92	; 0x5c
   12ae4:	strbcc	r1, [r3, r0]
   12ae8:	add	r0, r8, #2
   12aec:	add	r8, r8, #3
   12af0:	cmp	r0, r2
   12af4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12af8:	movcc	r1, #39	; 0x27
   12afc:	strbcc	r1, [r2, r0]
   12b00:	mov	r0, #0
   12b04:	str	r0, [fp, #-48]	; 0xffffffd0
   12b08:	mov	sl, #1
   12b0c:	b	12960 <putchar_unlocked@plt+0x19a4>
   12b10:	ldr	r0, [sp, #32]
   12b14:	cmp	r0, #1
   12b18:	bne	12cc4 <putchar_unlocked@plt+0x1d08>
   12b1c:	str	lr, [sp, #80]	; 0x50
   12b20:	bl	10ecc <__ctype_b_loc@plt>
   12b24:	ldr	r0, [r0]
   12b28:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b2c:	mov	r1, #1
   12b30:	add	r0, r0, r5, lsl #1
   12b34:	ldrb	r0, [r0, #1]
   12b38:	ubfx	sl, r0, #6, #1
   12b3c:	ldr	r0, [sp, #48]	; 0x30
   12b40:	mov	r2, r1
   12b44:	cmp	r1, #1
   12b48:	orr	r0, sl, r0
   12b4c:	bhi	12eb8 <putchar_unlocked@plt+0x1efc>
   12b50:	tst	r0, #1
   12b54:	beq	12eb8 <putchar_unlocked@plt+0x1efc>
   12b58:	ldr	lr, [sp, #80]	; 0x50
   12b5c:	b	12960 <putchar_unlocked@plt+0x19a4>
   12b60:	cmp	r7, #0
   12b64:	bne	12de0 <putchar_unlocked@plt+0x1e24>
   12b68:	ldrb	r0, [ip, #1]
   12b6c:	cmp	r0, #0
   12b70:	bne	12de0 <putchar_unlocked@plt+0x1e24>
   12b74:	mov	r1, #1
   12b78:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12b7c:	cmp	r0, #2
   12b80:	bne	12b90 <putchar_unlocked@plt+0x1bd4>
   12b84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12b88:	tst	r0, #1
   12b8c:	bne	13304 <putchar_unlocked@plt+0x2348>
   12b90:	mov	sl, r1
   12b94:	b	12960 <putchar_unlocked@plt+0x19a4>
   12b98:	ldr	r1, [sp, #44]	; 0x2c
   12b9c:	mov	r9, #0
   12ba0:	mov	r0, #92	; 0x5c
   12ba4:	cmp	r1, #0
   12ba8:	beq	12bb4 <putchar_unlocked@plt+0x1bf8>
   12bac:	mov	sl, #0
   12bb0:	b	130cc <putchar_unlocked@plt+0x2110>
   12bb4:	ldr	r1, [sp, #84]	; 0x54
   12bb8:	mov	sl, #0
   12bbc:	mov	r9, #0
   12bc0:	tst	r1, #1
   12bc4:	bne	12c00 <putchar_unlocked@plt+0x1c44>
   12bc8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12bcc:	cmp	r0, #0
   12bd0:	mov	r0, r5
   12bd4:	beq	12bf8 <putchar_unlocked@plt+0x1c3c>
   12bd8:	ldr	r1, [fp, #16]
   12bdc:	ubfx	r0, r5, #5, #3
   12be0:	mov	r2, #1
   12be4:	ldr	r0, [r1, r0, lsl #2]
   12be8:	and	r1, r5, #31
   12bec:	tst	r0, r2, lsl r1
   12bf0:	mov	r0, r5
   12bf4:	bne	12c00 <putchar_unlocked@plt+0x1c44>
   12bf8:	cmp	r6, #0
   12bfc:	beq	130cc <putchar_unlocked@plt+0x2110>
   12c00:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12c04:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12c08:	tst	r1, #1
   12c0c:	bne	132e0 <putchar_unlocked@plt+0x2324>
   12c10:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12c14:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12c18:	cmp	r1, #2
   12c1c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12c20:	movwne	r1, #1
   12c24:	orr	r1, r1, r5
   12c28:	tst	r1, #1
   12c2c:	bne	12c70 <putchar_unlocked@plt+0x1cb4>
   12c30:	cmp	r8, r6
   12c34:	mov	r5, #1
   12c38:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12c3c:	movcc	r1, #39	; 0x27
   12c40:	strbcc	r1, [r2, r8]
   12c44:	add	r1, r8, #1
   12c48:	cmp	r1, r6
   12c4c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12c50:	movcc	r2, #36	; 0x24
   12c54:	strbcc	r2, [r3, r1]
   12c58:	add	r1, r8, #2
   12c5c:	add	r8, r8, #3
   12c60:	cmp	r1, r6
   12c64:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12c68:	movcc	r2, #39	; 0x27
   12c6c:	strbcc	r2, [r3, r1]
   12c70:	cmp	r8, r6
   12c74:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12c78:	movcc	r1, #92	; 0x5c
   12c7c:	strbcc	r1, [r2, r8]
   12c80:	add	r8, r8, #1
   12c84:	cmp	r8, r6
   12c88:	and	r4, r4, sl
   12c8c:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12c90:	strbcc	r0, [r1, r8]
   12c94:	add	r8, r8, #1
   12c98:	add	r7, r7, #1
   12c9c:	b	12680 <putchar_unlocked@plt+0x16c4>
   12ca0:	ldr	r0, [sp, #28]
   12ca4:	mov	sl, #0
   12ca8:	mov	r9, #0
   12cac:	mov	r5, #0
   12cb0:	cmp	r0, #0
   12cb4:	beq	12bc8 <putchar_unlocked@plt+0x1c0c>
   12cb8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12cbc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12cc0:	b	12c98 <putchar_unlocked@plt+0x1cdc>
   12cc4:	mov	r0, #0
   12cc8:	cmn	lr, #1
   12ccc:	str	r6, [sp, #76]	; 0x4c
   12cd0:	str	r4, [sp, #20]
   12cd4:	str	r0, [fp, #-36]	; 0xffffffdc
   12cd8:	str	r0, [fp, #-40]	; 0xffffffd8
   12cdc:	bne	12cf0 <putchar_unlocked@plt+0x1d34>
   12ce0:	mov	r0, ip
   12ce4:	bl	10ee4 <strlen@plt>
   12ce8:	ldr	ip, [fp, #-84]	; 0xffffffac
   12cec:	mov	lr, r0
   12cf0:	add	r0, ip, r7
   12cf4:	mov	sl, #1
   12cf8:	mov	r6, #0
   12cfc:	sub	r4, fp, #40	; 0x28
   12d00:	str	lr, [sp, #80]	; 0x50
   12d04:	str	r0, [sp, #36]	; 0x24
   12d08:	str	r6, [sp, #40]	; 0x28
   12d0c:	add	r6, r6, r7
   12d10:	sub	r0, fp, #44	; 0x2c
   12d14:	mov	r3, r4
   12d18:	add	r1, ip, r6
   12d1c:	sub	r2, lr, r6
   12d20:	bl	14780 <putchar_unlocked@plt+0x37c4>
   12d24:	cmp	r0, #0
   12d28:	beq	13234 <putchar_unlocked@plt+0x2278>
   12d2c:	cmn	r0, #1
   12d30:	beq	131f4 <putchar_unlocked@plt+0x2238>
   12d34:	ldr	lr, [sp, #80]	; 0x50
   12d38:	cmn	r0, #2
   12d3c:	beq	131fc <putchar_unlocked@plt+0x2240>
   12d40:	ldr	r2, [sp, #56]	; 0x38
   12d44:	cmp	r0, #2
   12d48:	mov	r1, #0
   12d4c:	movwcc	r1, #1
   12d50:	eor	r2, r2, #1
   12d54:	orrs	r1, r2, r1
   12d58:	bne	12da4 <putchar_unlocked@plt+0x1de8>
   12d5c:	ldr	r1, [sp, #40]	; 0x28
   12d60:	ldr	r2, [sp, #36]	; 0x24
   12d64:	add	ip, r2, r1
   12d68:	mov	r2, #1
   12d6c:	ldrb	r3, [ip, r2]
   12d70:	sub	r6, r3, #94	; 0x5e
   12d74:	cmp	r6, #30
   12d78:	bhi	12d8c <putchar_unlocked@plt+0x1dd0>
   12d7c:	mov	r4, #1
   12d80:	mov	r1, #1073741829	; 0x40000005
   12d84:	tst	r1, r4, lsl r6
   12d88:	bne	13300 <putchar_unlocked@plt+0x2344>
   12d8c:	sub	r3, r3, #91	; 0x5b
   12d90:	cmp	r3, #2
   12d94:	bcc	13300 <putchar_unlocked@plt+0x2344>
   12d98:	add	r2, r2, #1
   12d9c:	cmp	r2, r0
   12da0:	bcc	12d6c <putchar_unlocked@plt+0x1db0>
   12da4:	ldr	r6, [sp, #40]	; 0x28
   12da8:	add	r6, r0, r6
   12dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12db0:	bl	10e3c <iswprint@plt>
   12db4:	cmp	r0, #0
   12db8:	sub	r4, fp, #40	; 0x28
   12dbc:	movwne	r0, #1
   12dc0:	and	sl, sl, r0
   12dc4:	mov	r0, r4
   12dc8:	bl	10de8 <mbsinit@plt>
   12dcc:	ldr	lr, [sp, #80]	; 0x50
   12dd0:	ldr	ip, [fp, #-84]	; 0xffffffac
   12dd4:	cmp	r0, #0
   12dd8:	beq	12d08 <putchar_unlocked@plt+0x1d4c>
   12ddc:	b	1323c <putchar_unlocked@plt+0x2280>
   12de0:	mvn	lr, #0
   12de4:	mov	r9, #0
   12de8:	b	12960 <putchar_unlocked@plt+0x19a4>
   12dec:	ldr	r0, [sp, #24]
   12df0:	cmp	r0, #0
   12df4:	beq	12eac <putchar_unlocked@plt+0x1ef0>
   12df8:	add	r0, r7, #2
   12dfc:	cmp	r0, lr
   12e00:	bcs	12eac <putchar_unlocked@plt+0x1ef0>
   12e04:	add	r1, ip, r7
   12e08:	ldrb	r1, [r1, #1]
   12e0c:	cmp	r1, #63	; 0x3f
   12e10:	bne	12eac <putchar_unlocked@plt+0x1ef0>
   12e14:	ldrb	r5, [ip, r0]
   12e18:	sub	r1, r5, #33	; 0x21
   12e1c:	cmp	r1, #29
   12e20:	bhi	12eac <putchar_unlocked@plt+0x1ef0>
   12e24:	movw	r3, #20929	; 0x51c1
   12e28:	mov	r2, #1
   12e2c:	movt	r3, #14336	; 0x3800
   12e30:	tst	r3, r2, lsl r1
   12e34:	beq	12eac <putchar_unlocked@plt+0x1ef0>
   12e38:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12e3c:	tst	r1, #1
   12e40:	bne	13414 <putchar_unlocked@plt+0x2458>
   12e44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12e48:	mov	r7, r0
   12e4c:	cmp	r8, r1
   12e50:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12e54:	movcc	r1, #63	; 0x3f
   12e58:	strbcc	r1, [r2, r8]
   12e5c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12e60:	add	r1, r8, #1
   12e64:	cmp	r1, r2
   12e68:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12e6c:	movcc	r2, #34	; 0x22
   12e70:	strbcc	r2, [r3, r1]
   12e74:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12e78:	add	r1, r8, #2
   12e7c:	cmp	r1, r2
   12e80:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12e84:	movcc	r2, #34	; 0x22
   12e88:	strbcc	r2, [r3, r1]
   12e8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12e90:	add	r1, r8, #3
   12e94:	add	r8, r8, #4
   12e98:	cmp	r1, r2
   12e9c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12ea0:	movcc	r2, #63	; 0x3f
   12ea4:	strbcc	r2, [r3, r1]
   12ea8:	b	12eb0 <putchar_unlocked@plt+0x1ef4>
   12eac:	mov	r5, #63	; 0x3f
   12eb0:	mov	sl, #0
   12eb4:	b	12960 <putchar_unlocked@plt+0x19a4>
   12eb8:	str	r0, [sp, #40]	; 0x28
   12ebc:	add	r0, r2, r7
   12ec0:	str	r6, [sp, #76]	; 0x4c
   12ec4:	add	r1, r7, #1
   12ec8:	ldr	lr, [sp, #80]	; 0x50
   12ecc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12ed0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12ed4:	mov	r3, #0
   12ed8:	str	r0, [sp, #36]	; 0x24
   12edc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12ee0:	b	12f74 <putchar_unlocked@plt+0x1fb8>
   12ee4:	str	r0, [sp, #76]	; 0x4c
   12ee8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12eec:	cmp	r9, #0
   12ef0:	movwne	r9, #1
   12ef4:	mvn	r7, r0
   12ef8:	orr	r7, r7, r9
   12efc:	tst	r7, #1
   12f00:	bne	12f50 <putchar_unlocked@plt+0x1f94>
   12f04:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12f08:	cmp	r8, r6
   12f0c:	bcs	12f24 <putchar_unlocked@plt+0x1f68>
   12f10:	ldr	r7, [fp, #-56]	; 0xffffffc8
   12f14:	mov	r2, r4
   12f18:	mov	r4, #39	; 0x27
   12f1c:	strb	r4, [r7, r8]
   12f20:	mov	r4, r2
   12f24:	add	r7, r8, #1
   12f28:	cmp	r7, r6
   12f2c:	bcs	12f44 <putchar_unlocked@plt+0x1f88>
   12f30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12f34:	mov	r2, r4
   12f38:	mov	r4, #39	; 0x27
   12f3c:	strb	r4, [r0, r7]
   12f40:	mov	r4, r2
   12f44:	add	r8, r8, #2
   12f48:	mov	r0, #0
   12f4c:	b	12f58 <putchar_unlocked@plt+0x1f9c>
   12f50:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12f54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12f58:	cmp	r8, r6
   12f5c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12f60:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12f64:	strbcc	r5, [r2, r8]
   12f68:	add	r8, r8, #1
   12f6c:	ldrb	r5, [ip, r1]
   12f70:	add	r1, r1, #1
   12f74:	ldr	r2, [sp, #40]	; 0x28
   12f78:	tst	r2, #1
   12f7c:	beq	12fb8 <putchar_unlocked@plt+0x1ffc>
   12f80:	ldr	r2, [sp, #76]	; 0x4c
   12f84:	str	r0, [fp, #-48]	; 0xffffffd0
   12f88:	tst	r2, #1
   12f8c:	beq	12fb0 <putchar_unlocked@plt+0x1ff4>
   12f90:	cmp	r8, r6
   12f94:	bcs	12fac <putchar_unlocked@plt+0x1ff0>
   12f98:	ldr	r6, [fp, #-56]	; 0xffffffc8
   12f9c:	mov	r2, r4
   12fa0:	mov	r4, #92	; 0x5c
   12fa4:	strb	r4, [r6, r8]
   12fa8:	mov	r4, r2
   12fac:	add	r8, r8, #1
   12fb0:	mov	r0, #0
   12fb4:	b	130ac <putchar_unlocked@plt+0x20f0>
   12fb8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12fbc:	tst	r2, #1
   12fc0:	bne	1330c <putchar_unlocked@plt+0x2350>
   12fc4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12fc8:	cmp	r7, #2
   12fcc:	movwne	r3, #1
   12fd0:	orr	r3, r3, r0
   12fd4:	tst	r3, #1
   12fd8:	bne	13034 <putchar_unlocked@plt+0x2078>
   12fdc:	cmp	r8, r6
   12fe0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12fe4:	movcc	r3, #39	; 0x27
   12fe8:	strbcc	r3, [r2, r8]
   12fec:	add	r3, r8, #1
   12ff0:	cmp	r3, r6
   12ff4:	bcs	1300c <putchar_unlocked@plt+0x2050>
   12ff8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12ffc:	mov	r7, r4
   13000:	mov	r4, #36	; 0x24
   13004:	strb	r4, [r2, r3]
   13008:	mov	r4, r7
   1300c:	add	r3, r8, #2
   13010:	cmp	r3, r6
   13014:	bcs	1302c <putchar_unlocked@plt+0x2070>
   13018:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1301c:	mov	r7, r4
   13020:	mov	r4, #39	; 0x27
   13024:	strb	r4, [r2, r3]
   13028:	mov	r4, r7
   1302c:	add	r8, r8, #3
   13030:	mov	r0, #1
   13034:	cmp	r8, r6
   13038:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1303c:	movcc	r3, #92	; 0x5c
   13040:	strbcc	r3, [r2, r8]
   13044:	add	r3, r8, #1
   13048:	cmp	r3, r6
   1304c:	bcs	1306c <putchar_unlocked@plt+0x20b0>
   13050:	mov	r2, r4
   13054:	and	r7, r5, #192	; 0xc0
   13058:	mov	r4, #48	; 0x30
   1305c:	orr	r7, r4, r7, lsr #6
   13060:	mov	r4, r2
   13064:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13068:	strb	r7, [r2, r3]
   1306c:	add	r3, r8, #2
   13070:	cmp	r3, r6
   13074:	bcs	13094 <putchar_unlocked@plt+0x20d8>
   13078:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1307c:	mov	r6, r4
   13080:	lsr	r7, r5, #3
   13084:	mov	r4, #6
   13088:	bfi	r7, r4, #3, #29
   1308c:	mov	r4, r6
   13090:	strb	r7, [r2, r3]
   13094:	str	r0, [fp, #-48]	; 0xffffffd0
   13098:	ldr	r0, [sp, #76]	; 0x4c
   1309c:	mov	r3, #6
   130a0:	add	r8, r8, #3
   130a4:	bfi	r5, r3, #3, #29
   130a8:	mov	r3, #1
   130ac:	ldr	r2, [sp, #36]	; 0x24
   130b0:	and	r9, r3, #1
   130b4:	cmp	r2, r1
   130b8:	bhi	12ee4 <putchar_unlocked@plt+0x1f28>
   130bc:	cmp	r9, #0
   130c0:	sub	r7, r1, #1
   130c4:	mov	r0, r5
   130c8:	movwne	r9, #1
   130cc:	cmp	r9, #0
   130d0:	bne	13114 <putchar_unlocked@plt+0x2158>
   130d4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   130d8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   130dc:	tst	r5, #1
   130e0:	beq	12c84 <putchar_unlocked@plt+0x1cc8>
   130e4:	cmp	r8, r6
   130e8:	mov	r5, #0
   130ec:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   130f0:	movcc	r1, #39	; 0x27
   130f4:	strbcc	r1, [r2, r8]
   130f8:	add	r1, r8, #1
   130fc:	add	r8, r8, #2
   13100:	cmp	r1, r6
   13104:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13108:	movcc	r2, #39	; 0x27
   1310c:	strbcc	r2, [r3, r1]
   13110:	b	12c84 <putchar_unlocked@plt+0x1cc8>
   13114:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13118:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1311c:	b	12c84 <putchar_unlocked@plt+0x1cc8>
   13120:	cmp	r8, r1
   13124:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13128:	movcc	r0, #39	; 0x27
   1312c:	strbcc	r0, [r2, r8]
   13130:	add	r0, r8, #1
   13134:	cmp	r0, r1
   13138:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1313c:	movcc	r2, #36	; 0x24
   13140:	strbcc	r2, [r3, r0]
   13144:	add	r0, r8, #2
   13148:	cmp	r0, r1
   1314c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13150:	movcc	r2, #39	; 0x27
   13154:	strbcc	r2, [r3, r0]
   13158:	add	r0, r8, #3
   1315c:	mov	r3, #1
   13160:	cmp	r0, r1
   13164:	add	r8, r0, #1
   13168:	str	r3, [fp, #-48]	; 0xffffffd0
   1316c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13170:	movcc	r1, #92	; 0x5c
   13174:	strbcc	r1, [r2, r0]
   13178:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1317c:	cmp	r1, #2
   13180:	beq	131e4 <putchar_unlocked@plt+0x2228>
   13184:	add	r1, r7, #1
   13188:	mov	sl, #0
   1318c:	mov	r9, #1
   13190:	mov	r5, #48	; 0x30
   13194:	cmp	r1, lr
   13198:	bcs	12960 <putchar_unlocked@plt+0x19a4>
   1319c:	ldrb	r1, [ip, r1]
   131a0:	sub	r1, r1, #48	; 0x30
   131a4:	uxtb	r1, r1
   131a8:	cmp	r1, #9
   131ac:	bhi	12960 <putchar_unlocked@plt+0x19a4>
   131b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   131b4:	cmp	r8, r1
   131b8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   131bc:	movcc	r1, #48	; 0x30
   131c0:	strbcc	r1, [r2, r8]
   131c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   131c8:	add	r1, r0, #2
   131cc:	add	r8, r0, #3
   131d0:	cmp	r1, r2
   131d4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   131d8:	movcc	r2, #48	; 0x30
   131dc:	strbcc	r2, [r3, r1]
   131e0:	b	12960 <putchar_unlocked@plt+0x19a4>
   131e4:	mov	r0, #48	; 0x30
   131e8:	mov	r9, #1
   131ec:	mov	sl, #0
   131f0:	b	12bf8 <putchar_unlocked@plt+0x1c3c>
   131f4:	mov	sl, #0
   131f8:	b	13234 <putchar_unlocked@plt+0x2278>
   131fc:	mov	sl, #0
   13200:	cmp	lr, r6
   13204:	bls	13234 <putchar_unlocked@plt+0x2278>
   13208:	ldr	ip, [fp, #-84]	; 0xffffffac
   1320c:	ldr	r6, [sp, #40]	; 0x28
   13210:	ldr	r0, [sp, #36]	; 0x24
   13214:	ldrb	r0, [r0, r6]
   13218:	cmp	r0, #0
   1321c:	beq	1323c <putchar_unlocked@plt+0x2280>
   13220:	add	r6, r6, #1
   13224:	add	r0, r7, r6
   13228:	cmp	r0, lr
   1322c:	bcc	13210 <putchar_unlocked@plt+0x2254>
   13230:	b	1323c <putchar_unlocked@plt+0x2280>
   13234:	ldr	ip, [fp, #-84]	; 0xffffffac
   13238:	ldr	r6, [sp, #40]	; 0x28
   1323c:	mov	r1, r6
   13240:	ldr	r4, [sp, #20]
   13244:	ldr	r6, [sp, #76]	; 0x4c
   13248:	b	12b3c <putchar_unlocked@plt+0x1b80>
   1324c:	mov	lr, r7
   13250:	b	13258 <putchar_unlocked@plt+0x229c>
   13254:	mvn	lr, #0
   13258:	ldr	r9, [fp, #-64]	; 0xffffffc0
   1325c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13260:	eor	r0, r9, #2
   13264:	orr	r0, r0, r8
   13268:	clz	r0, r0
   1326c:	lsr	r0, r0, #5
   13270:	tst	r1, r0
   13274:	bne	13370 <putchar_unlocked@plt+0x23b4>
   13278:	mov	r0, r1
   1327c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13280:	cmp	r9, #2
   13284:	movwne	r1, #1
   13288:	orr	r0, r0, r1
   1328c:	tst	r0, #1
   13290:	bne	133b0 <putchar_unlocked@plt+0x23f4>
   13294:	ldr	r0, [sp, #52]	; 0x34
   13298:	ldr	r1, [sp, #68]	; 0x44
   1329c:	str	lr, [sp, #80]	; 0x50
   132a0:	eor	r0, r0, #1
   132a4:	tst	r0, #1
   132a8:	bne	133b0 <putchar_unlocked@plt+0x23f4>
   132ac:	tst	r4, #1
   132b0:	bne	13378 <putchar_unlocked@plt+0x23bc>
   132b4:	mov	r7, #0
   132b8:	cmp	r1, #0
   132bc:	beq	133a8 <putchar_unlocked@plt+0x23ec>
   132c0:	ldr	r0, [sp, #84]	; 0x54
   132c4:	mov	r3, #0
   132c8:	cmp	r6, #0
   132cc:	mov	r2, #0
   132d0:	mov	r4, r1
   132d4:	str	r3, [fp, #-72]	; 0xffffffb8
   132d8:	beq	12414 <putchar_unlocked@plt+0x1458>
   132dc:	b	133b0 <putchar_unlocked@plt+0x23f4>
   132e0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   132e4:	b	1330c <putchar_unlocked@plt+0x2350>
   132e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   132ec:	mov	r2, #1
   132f0:	mov	lr, r4
   132f4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   132f8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   132fc:	b	13310 <putchar_unlocked@plt+0x2354>
   13300:	ldr	ip, [fp, #-84]	; 0xffffffac
   13304:	mov	r7, #2
   13308:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1330c:	ldr	r2, [sp, #84]	; 0x54
   13310:	mov	r0, #0
   13314:	ldr	r1, [fp, #12]
   13318:	tst	r2, #1
   1331c:	mov	r2, r7
   13320:	mov	r3, lr
   13324:	str	r0, [sp, #8]
   13328:	ldr	r0, [sp, #64]	; 0x40
   1332c:	movwne	r2, #4
   13330:	cmp	r7, #2
   13334:	movne	r2, r7
   13338:	str	r2, [sp]
   1333c:	mov	r2, ip
   13340:	bic	r1, r1, #2
   13344:	str	r0, [sp, #12]
   13348:	ldr	r0, [sp, #72]	; 0x48
   1334c:	str	r1, [sp, #4]
   13350:	mov	r1, r6
   13354:	str	r0, [sp, #16]
   13358:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1335c:	bl	1239c <putchar_unlocked@plt+0x13e0>
   13360:	mov	r8, r0
   13364:	mov	r0, r8
   13368:	sub	sp, fp, #28
   1336c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13370:	mov	r7, #2
   13374:	b	1330c <putchar_unlocked@plt+0x2350>
   13378:	mov	r0, #5
   1337c:	ldr	r2, [fp, #-84]	; 0xffffffac
   13380:	ldr	r3, [sp, #80]	; 0x50
   13384:	str	r0, [sp]
   13388:	ldr	r0, [fp, #12]
   1338c:	str	r0, [sp, #4]
   13390:	ldr	r0, [fp, #16]
   13394:	str	r0, [sp, #8]
   13398:	ldr	r0, [sp, #64]	; 0x40
   1339c:	str	r0, [sp, #12]
   133a0:	ldr	r0, [sp, #72]	; 0x48
   133a4:	b	13354 <putchar_unlocked@plt+0x2398>
   133a8:	mov	r0, #0
   133ac:	str	r0, [fp, #-72]	; 0xffffffb8
   133b0:	ldr	r1, [sp, #92]	; 0x5c
   133b4:	cmp	r1, #0
   133b8:	beq	133f8 <putchar_unlocked@plt+0x243c>
   133bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   133c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   133c4:	tst	r0, #1
   133c8:	bne	133fc <putchar_unlocked@plt+0x2440>
   133cc:	ldrb	r0, [r1]
   133d0:	cmp	r0, #0
   133d4:	beq	133fc <putchar_unlocked@plt+0x2440>
   133d8:	add	r1, r1, #1
   133dc:	cmp	r8, r6
   133e0:	strbcc	r0, [r2, r8]
   133e4:	add	r8, r8, #1
   133e8:	ldrb	r0, [r1], #1
   133ec:	cmp	r0, #0
   133f0:	bne	133dc <putchar_unlocked@plt+0x2420>
   133f4:	b	133fc <putchar_unlocked@plt+0x2440>
   133f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   133fc:	cmp	r8, r6
   13400:	movcc	r0, #0
   13404:	strbcc	r0, [r2, r8]
   13408:	b	13364 <putchar_unlocked@plt+0x23a8>
   1340c:	mov	r2, #1
   13410:	b	132f4 <putchar_unlocked@plt+0x2338>
   13414:	mov	r7, #5
   13418:	b	13308 <putchar_unlocked@plt+0x234c>
   1341c:	bl	10fb0 <abort@plt>
   13420:	mov	r3, r2
   13424:	mov	r2, #0
   13428:	b	1342c <putchar_unlocked@plt+0x2470>
   1342c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13430:	add	fp, sp, #28
   13434:	sub	sp, sp, #36	; 0x24
   13438:	movw	r8, #24928	; 0x6160
   1343c:	cmp	r3, #0
   13440:	mov	r4, r2
   13444:	str	r2, [sp, #24]
   13448:	mov	r5, r1
   1344c:	mov	r6, r0
   13450:	str	r0, [sp, #20]
   13454:	movt	r8, #2
   13458:	movne	r8, r3
   1345c:	bl	10ef0 <__errno_location@plt>
   13460:	str	r0, [sp, #28]
   13464:	cmp	r4, #0
   13468:	add	sl, r8, #8
   1346c:	ldm	r8, {r3, r9}
   13470:	ldr	r7, [r0]
   13474:	ldr	r1, [r8, #40]	; 0x28
   13478:	ldr	r2, [r8, #44]	; 0x2c
   1347c:	mov	r0, #0
   13480:	orreq	r9, r9, #1
   13484:	str	r7, [sp, #32]
   13488:	mov	r7, r5
   1348c:	stm	sp, {r3, r9, sl}
   13490:	str	r1, [sp, #12]
   13494:	str	r2, [sp, #16]
   13498:	mov	r1, #0
   1349c:	mov	r2, r6
   134a0:	mov	r3, r5
   134a4:	bl	1239c <putchar_unlocked@plt+0x13e0>
   134a8:	add	r4, r0, #1
   134ac:	mov	r5, r0
   134b0:	mov	r0, r4
   134b4:	bl	14190 <putchar_unlocked@plt+0x31d4>
   134b8:	mov	r6, r0
   134bc:	ldr	r0, [r8]
   134c0:	ldr	r2, [r8, #44]	; 0x2c
   134c4:	ldr	r1, [r8, #40]	; 0x28
   134c8:	mov	r3, r7
   134cc:	stm	sp, {r0, r9, sl}
   134d0:	str	r2, [sp, #16]
   134d4:	str	r1, [sp, #12]
   134d8:	mov	r0, r6
   134dc:	mov	r1, r4
   134e0:	ldr	r2, [sp, #20]
   134e4:	bl	1239c <putchar_unlocked@plt+0x13e0>
   134e8:	ldr	r0, [sp, #24]
   134ec:	ldr	r1, [sp, #32]
   134f0:	ldr	r2, [sp, #28]
   134f4:	cmp	r0, #0
   134f8:	str	r1, [r2]
   134fc:	strne	r5, [r0]
   13500:	mov	r0, r6
   13504:	sub	sp, fp, #28
   13508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1350c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13510:	add	fp, sp, #24
   13514:	movw	r5, #24804	; 0x60e4
   13518:	movw	r8, #24800	; 0x60e0
   1351c:	movt	r5, #2
   13520:	movt	r8, #2
   13524:	ldr	r0, [r5]
   13528:	ldr	r4, [r8]
   1352c:	cmp	r0, #2
   13530:	blt	1355c <putchar_unlocked@plt+0x25a0>
   13534:	add	r7, r4, #12
   13538:	mov	r6, #0
   1353c:	ldr	r0, [r7, r6, lsl #3]
   13540:	bl	1209c <putchar_unlocked@plt+0x10e0>
   13544:	ldr	r1, [r5]
   13548:	add	r2, r6, #2
   1354c:	add	r0, r6, #1
   13550:	mov	r6, r0
   13554:	cmp	r2, r1
   13558:	blt	1353c <putchar_unlocked@plt+0x2580>
   1355c:	ldr	r0, [r4, #4]
   13560:	movw	r7, #24976	; 0x6190
   13564:	movt	r7, #2
   13568:	cmp	r0, r7
   1356c:	beq	13584 <putchar_unlocked@plt+0x25c8>
   13570:	bl	1209c <putchar_unlocked@plt+0x10e0>
   13574:	movw	r0, #24808	; 0x60e8
   13578:	mov	r6, #256	; 0x100
   1357c:	movt	r0, #2
   13580:	strd	r6, [r0]
   13584:	movw	r6, #24808	; 0x60e8
   13588:	movt	r6, #2
   1358c:	cmp	r4, r6
   13590:	beq	135a0 <putchar_unlocked@plt+0x25e4>
   13594:	mov	r0, r4
   13598:	bl	1209c <putchar_unlocked@plt+0x10e0>
   1359c:	str	r6, [r8]
   135a0:	mov	r0, #1
   135a4:	str	r0, [r5]
   135a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   135ac:	movw	r3, #24928	; 0x6160
   135b0:	mvn	r2, #0
   135b4:	movt	r3, #2
   135b8:	b	135bc <putchar_unlocked@plt+0x2600>
   135bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135c0:	add	fp, sp, #28
   135c4:	sub	sp, sp, #44	; 0x2c
   135c8:	mov	r7, r3
   135cc:	str	r2, [sp, #36]	; 0x24
   135d0:	str	r1, [sp, #32]
   135d4:	mov	r5, r0
   135d8:	bl	10ef0 <__errno_location@plt>
   135dc:	cmp	r5, #0
   135e0:	blt	1374c <putchar_unlocked@plt+0x2790>
   135e4:	cmn	r5, #-2147483647	; 0x80000001
   135e8:	beq	1374c <putchar_unlocked@plt+0x2790>
   135ec:	movw	r8, #24804	; 0x60e4
   135f0:	movw	r4, #24800	; 0x60e0
   135f4:	str	r0, [sp, #28]
   135f8:	ldr	r0, [r0]
   135fc:	movt	r8, #2
   13600:	movt	r4, #2
   13604:	ldr	r1, [r8]
   13608:	ldr	r6, [r4]
   1360c:	str	r0, [sp, #24]
   13610:	cmp	r1, r5
   13614:	ble	13620 <putchar_unlocked@plt+0x2664>
   13618:	mov	sl, r6
   1361c:	b	13688 <putchar_unlocked@plt+0x26cc>
   13620:	movw	r9, #24808	; 0x60e8
   13624:	mov	r0, #8
   13628:	add	r2, r5, #1
   1362c:	str	r1, [fp, #-32]	; 0xffffffe0
   13630:	mvn	r3, #-2147483648	; 0x80000000
   13634:	movt	r9, #2
   13638:	str	r0, [sp]
   1363c:	sub	r2, r2, r1
   13640:	sub	r1, fp, #32
   13644:	subs	r0, r6, r9
   13648:	movne	r0, r6
   1364c:	bl	142c0 <putchar_unlocked@plt+0x3304>
   13650:	cmp	r6, r9
   13654:	mov	sl, r0
   13658:	str	r0, [r4]
   1365c:	ldrdeq	r0, [r9]
   13660:	stmeq	sl, {r0, r1}
   13664:	ldr	r1, [r8]
   13668:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1366c:	add	r0, sl, r1, lsl #3
   13670:	sub	r1, r2, r1
   13674:	lsl	r2, r1, #3
   13678:	mov	r1, #0
   1367c:	bl	10f08 <memset@plt>
   13680:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13684:	str	r0, [r8]
   13688:	mov	r9, sl
   1368c:	ldr	r6, [r9, r5, lsl #3]!
   13690:	ldr	r4, [r9, #4]!
   13694:	ldm	r7, {r0, r1}
   13698:	ldr	r2, [r7, #40]	; 0x28
   1369c:	ldr	r3, [r7, #44]	; 0x2c
   136a0:	orr	r8, r1, #1
   136a4:	add	r1, r7, #8
   136a8:	stm	sp, {r0, r8}
   136ac:	add	r0, sp, #8
   136b0:	str	r1, [sp, #20]
   136b4:	stm	r0, {r1, r2, r3}
   136b8:	mov	r0, r4
   136bc:	mov	r1, r6
   136c0:	ldr	r2, [sp, #32]
   136c4:	ldr	r3, [sp, #36]	; 0x24
   136c8:	bl	1239c <putchar_unlocked@plt+0x13e0>
   136cc:	cmp	r6, r0
   136d0:	bhi	13734 <putchar_unlocked@plt+0x2778>
   136d4:	add	r6, r0, #1
   136d8:	movw	r0, #24976	; 0x6190
   136dc:	movt	r0, #2
   136e0:	str	r6, [sl, r5, lsl #3]
   136e4:	cmp	r4, r0
   136e8:	beq	136f4 <putchar_unlocked@plt+0x2738>
   136ec:	mov	r0, r4
   136f0:	bl	1209c <putchar_unlocked@plt+0x10e0>
   136f4:	mov	r0, r6
   136f8:	bl	14190 <putchar_unlocked@plt+0x31d4>
   136fc:	str	r0, [r9]
   13700:	mov	r4, r0
   13704:	add	r3, sp, #8
   13708:	ldr	r0, [r7]
   1370c:	ldr	r1, [r7, #40]	; 0x28
   13710:	ldr	r2, [r7, #44]	; 0x2c
   13714:	stm	sp, {r0, r8}
   13718:	ldr	r0, [sp, #20]
   1371c:	stm	r3, {r0, r1, r2}
   13720:	mov	r0, r4
   13724:	mov	r1, r6
   13728:	ldr	r2, [sp, #32]
   1372c:	ldr	r3, [sp, #36]	; 0x24
   13730:	bl	1239c <putchar_unlocked@plt+0x13e0>
   13734:	ldr	r0, [sp, #28]
   13738:	ldr	r1, [sp, #24]
   1373c:	str	r1, [r0]
   13740:	mov	r0, r4
   13744:	sub	sp, fp, #28
   13748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1374c:	bl	10fb0 <abort@plt>
   13750:	movw	r3, #24928	; 0x6160
   13754:	movt	r3, #2
   13758:	b	135bc <putchar_unlocked@plt+0x2600>
   1375c:	movw	r3, #24928	; 0x6160
   13760:	mov	r1, r0
   13764:	mov	r0, #0
   13768:	mvn	r2, #0
   1376c:	movt	r3, #2
   13770:	b	135bc <putchar_unlocked@plt+0x2600>
   13774:	movw	r3, #24928	; 0x6160
   13778:	mov	r2, r1
   1377c:	mov	r1, r0
   13780:	mov	r0, #0
   13784:	movt	r3, #2
   13788:	b	135bc <putchar_unlocked@plt+0x2600>
   1378c:	push	{fp, lr}
   13790:	mov	fp, sp
   13794:	sub	sp, sp, #48	; 0x30
   13798:	vmov.i32	q8, #0	; 0x00000000
   1379c:	mov	ip, #32
   137a0:	mov	r3, sp
   137a4:	mov	lr, r2
   137a8:	cmp	r1, #10
   137ac:	add	r2, r3, #16
   137b0:	vst1.64	{d16-d17}, [r3], ip
   137b4:	vst1.64	{d16-d17}, [r3]
   137b8:	vst1.64	{d16-d17}, [r2]
   137bc:	beq	137dc <putchar_unlocked@plt+0x2820>
   137c0:	str	r1, [sp]
   137c4:	mov	r3, sp
   137c8:	mov	r1, lr
   137cc:	mvn	r2, #0
   137d0:	bl	135bc <putchar_unlocked@plt+0x2600>
   137d4:	mov	sp, fp
   137d8:	pop	{fp, pc}
   137dc:	bl	10fb0 <abort@plt>
   137e0:	push	{r4, sl, fp, lr}
   137e4:	add	fp, sp, #8
   137e8:	sub	sp, sp, #48	; 0x30
   137ec:	mov	ip, r3
   137f0:	mov	r3, sp
   137f4:	vmov.i32	q8, #0	; 0x00000000
   137f8:	mov	lr, #32
   137fc:	cmp	r1, #10
   13800:	add	r4, r3, #16
   13804:	vst1.64	{d16-d17}, [r3], lr
   13808:	vst1.64	{d16-d17}, [r3]
   1380c:	vst1.64	{d16-d17}, [r4]
   13810:	beq	13830 <putchar_unlocked@plt+0x2874>
   13814:	str	r1, [sp]
   13818:	mov	r1, r2
   1381c:	mov	r3, sp
   13820:	mov	r2, ip
   13824:	bl	135bc <putchar_unlocked@plt+0x2600>
   13828:	sub	sp, fp, #8
   1382c:	pop	{r4, sl, fp, pc}
   13830:	bl	10fb0 <abort@plt>
   13834:	mov	r2, r1
   13838:	mov	r1, r0
   1383c:	mov	r0, #0
   13840:	b	1378c <putchar_unlocked@plt+0x27d0>
   13844:	mov	r3, r2
   13848:	mov	r2, r1
   1384c:	mov	r1, r0
   13850:	mov	r0, #0
   13854:	b	137e0 <putchar_unlocked@plt+0x2824>
   13858:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1385c:	add	fp, sp, #24
   13860:	sub	sp, sp, #48	; 0x30
   13864:	movw	r8, #24928	; 0x6160
   13868:	mov	lr, r0
   1386c:	mov	r3, sp
   13870:	mov	ip, r1
   13874:	movt	r8, #2
   13878:	mov	r1, r3
   1387c:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   13880:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   13884:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   13888:	stm	r1, {r0, r4, r5, r6, r7, r9}
   1388c:	ubfx	r0, r2, #5, #3
   13890:	and	r2, r2, #31
   13894:	mov	r4, #1
   13898:	add	r0, r3, r0, lsl #2
   1389c:	ldr	r1, [r0, #8]
   138a0:	bic	r4, r4, r1, lsr r2
   138a4:	eor	r1, r1, r4, lsl r2
   138a8:	mov	r2, ip
   138ac:	str	r1, [r0, #8]
   138b0:	mov	r0, #0
   138b4:	mov	r1, lr
   138b8:	bl	135bc <putchar_unlocked@plt+0x2600>
   138bc:	sub	sp, fp, #24
   138c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   138c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138c8:	add	fp, sp, #24
   138cc:	sub	sp, sp, #48	; 0x30
   138d0:	movw	lr, #24928	; 0x6160
   138d4:	mov	ip, r0
   138d8:	mov	r3, sp
   138dc:	movt	lr, #2
   138e0:	mov	r2, r3
   138e4:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   138e8:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   138ec:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   138f0:	stm	r2, {r0, r4, r5, r6, r7, r8}
   138f4:	ubfx	r0, r1, #5, #3
   138f8:	and	r1, r1, #31
   138fc:	mov	r7, #1
   13900:	add	r0, r3, r0, lsl #2
   13904:	ldr	r2, [r0, #8]
   13908:	bic	r7, r7, r2, lsr r1
   1390c:	eor	r1, r2, r7, lsl r1
   13910:	mvn	r2, #0
   13914:	str	r1, [r0, #8]
   13918:	mov	r0, #0
   1391c:	mov	r1, ip
   13920:	bl	135bc <putchar_unlocked@plt+0x2600>
   13924:	sub	sp, fp, #24
   13928:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1392c:	push	{r4, r5, r6, r7, fp, lr}
   13930:	add	fp, sp, #16
   13934:	sub	sp, sp, #48	; 0x30
   13938:	movw	lr, #24928	; 0x6160
   1393c:	mov	ip, r0
   13940:	mov	r3, sp
   13944:	movt	lr, #2
   13948:	mov	r2, r3
   1394c:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   13950:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13954:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   13958:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1395c:	mov	r1, ip
   13960:	mvn	r2, #0
   13964:	ldr	r0, [sp, #12]
   13968:	orr	r0, r0, #67108864	; 0x4000000
   1396c:	str	r0, [sp, #12]
   13970:	mov	r0, #0
   13974:	bl	135bc <putchar_unlocked@plt+0x2600>
   13978:	sub	sp, fp, #16
   1397c:	pop	{r4, r5, r6, r7, fp, pc}
   13980:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13984:	add	fp, sp, #24
   13988:	sub	sp, sp, #48	; 0x30
   1398c:	movw	r8, #24928	; 0x6160
   13990:	mov	ip, r1
   13994:	mov	lr, r0
   13998:	mov	r3, sp
   1399c:	movt	r8, #2
   139a0:	mov	r2, r3
   139a4:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   139a8:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   139ac:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   139b0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   139b4:	mov	r1, lr
   139b8:	mov	r2, ip
   139bc:	ldr	r0, [sp, #12]
   139c0:	orr	r0, r0, #67108864	; 0x4000000
   139c4:	str	r0, [sp, #12]
   139c8:	mov	r0, #0
   139cc:	bl	135bc <putchar_unlocked@plt+0x2600>
   139d0:	sub	sp, fp, #24
   139d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   139d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139dc:	add	fp, sp, #24
   139e0:	sub	sp, sp, #96	; 0x60
   139e4:	mov	lr, sp
   139e8:	vmov.i32	q8, #0	; 0x00000000
   139ec:	mov	ip, r2
   139f0:	cmp	r1, #10
   139f4:	add	r3, lr, #16
   139f8:	mov	r2, lr
   139fc:	vst1.64	{d16-d17}, [r3]
   13a00:	mov	r3, #28
   13a04:	vst1.64	{d16-d17}, [r2], r3
   13a08:	vst1.32	{d16-d17}, [r2]
   13a0c:	beq	13a4c <putchar_unlocked@plt+0x2a90>
   13a10:	str	r1, [sp, #48]	; 0x30
   13a14:	add	r3, sp, #48	; 0x30
   13a18:	ldm	lr!, {r2, r4, r5, r6, r7}
   13a1c:	add	r1, r3, #4
   13a20:	stmia	r1!, {r2, r4, r5, r6, r7}
   13a24:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   13a28:	stm	r1, {r2, r4, r5, r6, r7, r8}
   13a2c:	mvn	r2, #0
   13a30:	ldr	r1, [sp, #60]	; 0x3c
   13a34:	orr	r1, r1, #67108864	; 0x4000000
   13a38:	str	r1, [sp, #60]	; 0x3c
   13a3c:	mov	r1, ip
   13a40:	bl	135bc <putchar_unlocked@plt+0x2600>
   13a44:	sub	sp, fp, #24
   13a48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a4c:	bl	10fb0 <abort@plt>
   13a50:	push	{fp, lr}
   13a54:	mov	fp, sp
   13a58:	sub	sp, sp, #8
   13a5c:	mvn	ip, #0
   13a60:	str	ip, [sp]
   13a64:	bl	13a70 <putchar_unlocked@plt+0x2ab4>
   13a68:	mov	sp, fp
   13a6c:	pop	{fp, pc}
   13a70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a74:	add	fp, sp, #24
   13a78:	sub	sp, sp, #48	; 0x30
   13a7c:	movw	ip, #24928	; 0x6160
   13a80:	mov	lr, r3
   13a84:	mov	r3, sp
   13a88:	cmp	r1, #0
   13a8c:	movt	ip, #2
   13a90:	cmpne	r2, #0
   13a94:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13a98:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   13a9c:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   13aa0:	stm	r3, {r4, r5, r6, r7, r8, r9}
   13aa4:	mov	r3, #10
   13aa8:	str	r3, [sp]
   13aac:	bne	13ab4 <putchar_unlocked@plt+0x2af8>
   13ab0:	bl	10fb0 <abort@plt>
   13ab4:	ldr	ip, [fp, #8]
   13ab8:	str	r2, [sp, #44]	; 0x2c
   13abc:	str	r1, [sp, #40]	; 0x28
   13ac0:	mov	r3, sp
   13ac4:	mov	r1, lr
   13ac8:	mov	r2, ip
   13acc:	bl	135bc <putchar_unlocked@plt+0x2600>
   13ad0:	sub	sp, fp, #24
   13ad4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ad8:	push	{fp, lr}
   13adc:	mov	fp, sp
   13ae0:	sub	sp, sp, #8
   13ae4:	mov	r3, r2
   13ae8:	mov	r2, r1
   13aec:	mov	r1, r0
   13af0:	mvn	r0, #0
   13af4:	str	r0, [sp]
   13af8:	mov	r0, #0
   13afc:	bl	13a70 <putchar_unlocked@plt+0x2ab4>
   13b00:	mov	sp, fp
   13b04:	pop	{fp, pc}
   13b08:	push	{fp, lr}
   13b0c:	mov	fp, sp
   13b10:	sub	sp, sp, #8
   13b14:	mov	ip, r2
   13b18:	mov	r2, r1
   13b1c:	mov	r1, r0
   13b20:	str	r3, [sp]
   13b24:	mov	r0, #0
   13b28:	mov	r3, ip
   13b2c:	bl	13a70 <putchar_unlocked@plt+0x2ab4>
   13b30:	mov	sp, fp
   13b34:	pop	{fp, pc}
   13b38:	movw	r3, #24816	; 0x60f0
   13b3c:	movt	r3, #2
   13b40:	b	135bc <putchar_unlocked@plt+0x2600>
   13b44:	movw	r3, #24816	; 0x60f0
   13b48:	mov	r2, r1
   13b4c:	mov	r1, r0
   13b50:	mov	r0, #0
   13b54:	movt	r3, #2
   13b58:	b	135bc <putchar_unlocked@plt+0x2600>
   13b5c:	movw	r3, #24816	; 0x60f0
   13b60:	mvn	r2, #0
   13b64:	movt	r3, #2
   13b68:	b	135bc <putchar_unlocked@plt+0x2600>
   13b6c:	movw	r3, #24816	; 0x60f0
   13b70:	mov	r1, r0
   13b74:	mov	r0, #0
   13b78:	mvn	r2, #0
   13b7c:	movt	r3, #2
   13b80:	b	135bc <putchar_unlocked@plt+0x2600>
   13b84:	push	{r4, r5, fp, lr}
   13b88:	add	fp, sp, #8
   13b8c:	mov	r5, r0
   13b90:	mov	r4, r1
   13b94:	mov	r0, #0
   13b98:	mov	r2, #5
   13b9c:	mov	r1, r5
   13ba0:	bl	10e18 <dcgettext@plt>
   13ba4:	cmp	r0, r5
   13ba8:	popne	{r4, r5, fp, pc}
   13bac:	bl	14748 <putchar_unlocked@plt+0x378c>
   13bb0:	ldrb	r1, [r0]
   13bb4:	and	r1, r1, #223	; 0xdf
   13bb8:	cmp	r1, #71	; 0x47
   13bbc:	beq	13c24 <putchar_unlocked@plt+0x2c68>
   13bc0:	cmp	r1, #85	; 0x55
   13bc4:	bne	13c48 <putchar_unlocked@plt+0x2c8c>
   13bc8:	ldrb	r1, [r0, #1]
   13bcc:	and	r1, r1, #223	; 0xdf
   13bd0:	cmp	r1, #84	; 0x54
   13bd4:	bne	13c48 <putchar_unlocked@plt+0x2c8c>
   13bd8:	ldrb	r1, [r0, #2]
   13bdc:	and	r1, r1, #223	; 0xdf
   13be0:	cmp	r1, #70	; 0x46
   13be4:	ldrbeq	r1, [r0, #3]
   13be8:	cmpeq	r1, #45	; 0x2d
   13bec:	bne	13c48 <putchar_unlocked@plt+0x2c8c>
   13bf0:	ldrb	r1, [r0, #4]
   13bf4:	cmp	r1, #56	; 0x38
   13bf8:	ldrbeq	r0, [r0, #5]
   13bfc:	cmpeq	r0, #0
   13c00:	bne	13c48 <putchar_unlocked@plt+0x2c8c>
   13c04:	ldrb	r1, [r5]
   13c08:	movw	r2, #20334	; 0x4f6e
   13c0c:	movw	r0, #20338	; 0x4f72
   13c10:	movt	r2, #1
   13c14:	movt	r0, #1
   13c18:	cmp	r1, #96	; 0x60
   13c1c:	moveq	r0, r2
   13c20:	pop	{r4, r5, fp, pc}
   13c24:	ldrb	r1, [r0, #1]
   13c28:	and	r1, r1, #223	; 0xdf
   13c2c:	cmp	r1, #66	; 0x42
   13c30:	bne	13c48 <putchar_unlocked@plt+0x2c8c>
   13c34:	ldrb	r1, [r0, #2]
   13c38:	cmp	r1, #49	; 0x31
   13c3c:	ldrbeq	r1, [r0, #3]
   13c40:	cmpeq	r1, #56	; 0x38
   13c44:	beq	13c64 <putchar_unlocked@plt+0x2ca8>
   13c48:	movw	r1, #20328	; 0x4f68
   13c4c:	movw	r0, #20332	; 0x4f6c
   13c50:	cmp	r4, #9
   13c54:	movt	r1, #1
   13c58:	movt	r0, #1
   13c5c:	moveq	r0, r1
   13c60:	pop	{r4, r5, fp, pc}
   13c64:	ldrb	r1, [r0, #4]
   13c68:	cmp	r1, #48	; 0x30
   13c6c:	ldrbeq	r1, [r0, #5]
   13c70:	cmpeq	r1, #51	; 0x33
   13c74:	bne	13c48 <putchar_unlocked@plt+0x2c8c>
   13c78:	ldrb	r1, [r0, #6]
   13c7c:	cmp	r1, #48	; 0x30
   13c80:	ldrbeq	r0, [r0, #7]
   13c84:	cmpeq	r0, #0
   13c88:	bne	13c48 <putchar_unlocked@plt+0x2c8c>
   13c8c:	ldrb	r1, [r5]
   13c90:	movw	r2, #20342	; 0x4f76
   13c94:	movw	r0, #20346	; 0x4f7a
   13c98:	movt	r2, #1
   13c9c:	movt	r0, #1
   13ca0:	b	13c18 <putchar_unlocked@plt+0x2c5c>
   13ca4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ca8:	add	fp, sp, #24
   13cac:	sub	sp, sp, #32
   13cb0:	ldr	r6, [fp, #12]
   13cb4:	ldr	r7, [fp, #8]
   13cb8:	mov	r4, r2
   13cbc:	mov	r8, r0
   13cc0:	cmp	r1, #0
   13cc4:	beq	13cec <putchar_unlocked@plt+0x2d30>
   13cc8:	movw	r2, #20436	; 0x4fd4
   13ccc:	mov	r5, r1
   13cd0:	str	r3, [sp, #4]
   13cd4:	str	r4, [sp]
   13cd8:	mov	r0, r8
   13cdc:	mov	r1, #1
   13ce0:	movt	r2, #1
   13ce4:	mov	r3, r5
   13ce8:	b	13d04 <putchar_unlocked@plt+0x2d48>
   13cec:	movw	r2, #20448	; 0x4fe0
   13cf0:	str	r3, [sp]
   13cf4:	mov	r0, r8
   13cf8:	mov	r1, #1
   13cfc:	mov	r3, r4
   13d00:	movt	r2, #1
   13d04:	bl	10f2c <__fprintf_chk@plt>
   13d08:	movw	r1, #20455	; 0x4fe7
   13d0c:	mov	r0, #0
   13d10:	mov	r2, #5
   13d14:	movt	r1, #1
   13d18:	bl	10e18 <dcgettext@plt>
   13d1c:	movw	r2, #21173	; 0x52b5
   13d20:	mov	r3, r0
   13d24:	movw	r0, #2022	; 0x7e6
   13d28:	mov	r1, #1
   13d2c:	str	r0, [sp]
   13d30:	movt	r2, #1
   13d34:	mov	r0, r8
   13d38:	bl	10f2c <__fprintf_chk@plt>
   13d3c:	movw	r4, #19918	; 0x4dce
   13d40:	mov	r1, r8
   13d44:	movt	r4, #1
   13d48:	mov	r0, r4
   13d4c:	bl	10d94 <fputs_unlocked@plt>
   13d50:	movw	r1, #20459	; 0x4feb
   13d54:	mov	r0, #0
   13d58:	mov	r2, #5
   13d5c:	movt	r1, #1
   13d60:	bl	10e18 <dcgettext@plt>
   13d64:	movw	r3, #20630	; 0x5096
   13d68:	mov	r2, r0
   13d6c:	mov	r0, r8
   13d70:	mov	r1, #1
   13d74:	movt	r3, #1
   13d78:	bl	10f2c <__fprintf_chk@plt>
   13d7c:	mov	r0, r4
   13d80:	mov	r1, r8
   13d84:	bl	10d94 <fputs_unlocked@plt>
   13d88:	cmp	r6, #9
   13d8c:	bhi	13df0 <putchar_unlocked@plt+0x2e34>
   13d90:	add	r0, pc, #0
   13d94:	ldr	pc, [r0, r6, lsl #2]
   13d98:	andeq	r3, r1, r8, asr #31
   13d9c:	andeq	r3, r1, r0, asr #27
   13da0:	strdeq	r3, [r1], -ip
   13da4:	andeq	r3, r1, r4, lsr #28
   13da8:	andeq	r3, r1, ip, asr #28
   13dac:	andeq	r3, r1, r4, ror lr
   13db0:	muleq	r1, ip, lr
   13db4:	ldrdeq	r3, [r1], -r4
   13db8:	andeq	r3, r1, r4, ror pc
   13dbc:	andeq	r3, r1, ip, lsl pc
   13dc0:	movw	r1, #20664	; 0x50b8
   13dc4:	mov	r0, #0
   13dc8:	mov	r2, #5
   13dcc:	movt	r1, #1
   13dd0:	bl	10e18 <dcgettext@plt>
   13dd4:	ldr	r3, [r7]
   13dd8:	mov	r2, r0
   13ddc:	mov	r0, r8
   13de0:	mov	r1, #1
   13de4:	sub	sp, fp, #24
   13de8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13dec:	b	10f2c <__fprintf_chk@plt>
   13df0:	movw	r1, #20983	; 0x51f7
   13df4:	movt	r1, #1
   13df8:	b	13f24 <putchar_unlocked@plt+0x2f68>
   13dfc:	movw	r1, #20680	; 0x50c8
   13e00:	mov	r0, #0
   13e04:	mov	r2, #5
   13e08:	movt	r1, #1
   13e0c:	bl	10e18 <dcgettext@plt>
   13e10:	mov	r2, r0
   13e14:	ldr	r3, [r7]
   13e18:	ldr	r0, [r7, #4]
   13e1c:	str	r0, [sp]
   13e20:	b	13f10 <putchar_unlocked@plt+0x2f54>
   13e24:	movw	r1, #20703	; 0x50df
   13e28:	mov	r0, #0
   13e2c:	mov	r2, #5
   13e30:	movt	r1, #1
   13e34:	bl	10e18 <dcgettext@plt>
   13e38:	ldr	r3, [r7]
   13e3c:	mov	r2, r0
   13e40:	ldmib	r7, {r0, r1}
   13e44:	stm	sp, {r0, r1}
   13e48:	b	13f10 <putchar_unlocked@plt+0x2f54>
   13e4c:	movw	r1, #20731	; 0x50fb
   13e50:	mov	r0, #0
   13e54:	mov	r2, #5
   13e58:	movt	r1, #1
   13e5c:	bl	10e18 <dcgettext@plt>
   13e60:	ldr	r3, [r7]
   13e64:	mov	r2, r0
   13e68:	ldmib	r7, {r0, r1, r7}
   13e6c:	stm	sp, {r0, r1, r7}
   13e70:	b	13f10 <putchar_unlocked@plt+0x2f54>
   13e74:	movw	r1, #20763	; 0x511b
   13e78:	mov	r0, #0
   13e7c:	mov	r2, #5
   13e80:	movt	r1, #1
   13e84:	bl	10e18 <dcgettext@plt>
   13e88:	ldr	r3, [r7]
   13e8c:	mov	r2, r0
   13e90:	ldmib	r7, {r0, r1, r6, r7}
   13e94:	stm	sp, {r0, r1, r6, r7}
   13e98:	b	13f10 <putchar_unlocked@plt+0x2f54>
   13e9c:	movw	r1, #20799	; 0x513f
   13ea0:	mov	r0, #0
   13ea4:	mov	r2, #5
   13ea8:	movt	r1, #1
   13eac:	bl	10e18 <dcgettext@plt>
   13eb0:	ldr	r3, [r7]
   13eb4:	mov	r2, r0
   13eb8:	ldmib	r7, {r0, r1, r6}
   13ebc:	ldr	r5, [r7, #16]
   13ec0:	ldr	r7, [r7, #20]
   13ec4:	stm	sp, {r0, r1, r6}
   13ec8:	str	r5, [sp, #12]
   13ecc:	str	r7, [sp, #16]
   13ed0:	b	13f10 <putchar_unlocked@plt+0x2f54>
   13ed4:	movw	r1, #20839	; 0x5167
   13ed8:	mov	r0, #0
   13edc:	mov	r2, #5
   13ee0:	movt	r1, #1
   13ee4:	bl	10e18 <dcgettext@plt>
   13ee8:	ldr	r3, [r7]
   13eec:	mov	r2, r0
   13ef0:	ldmib	r7, {r0, r1, r6}
   13ef4:	ldr	r5, [r7, #16]
   13ef8:	ldr	r4, [r7, #20]
   13efc:	ldr	r7, [r7, #24]
   13f00:	stm	sp, {r0, r1, r6}
   13f04:	str	r5, [sp, #12]
   13f08:	str	r4, [sp, #16]
   13f0c:	str	r7, [sp, #20]
   13f10:	mov	r0, r8
   13f14:	mov	r1, #1
   13f18:	b	13fc4 <putchar_unlocked@plt+0x3008>
   13f1c:	movw	r1, #20931	; 0x51c3
   13f20:	movt	r1, #1
   13f24:	mov	r0, #0
   13f28:	mov	r2, #5
   13f2c:	bl	10e18 <dcgettext@plt>
   13f30:	mov	ip, r0
   13f34:	ldr	r3, [r7]
   13f38:	ldr	r0, [r7, #4]
   13f3c:	ldr	r1, [r7, #8]
   13f40:	ldr	r6, [r7, #12]
   13f44:	ldr	r5, [r7, #16]
   13f48:	ldr	r4, [r7, #20]
   13f4c:	ldr	r2, [r7, #24]
   13f50:	ldr	lr, [r7, #28]
   13f54:	ldr	r7, [r7, #32]
   13f58:	stm	sp, {r0, r1, r6}
   13f5c:	str	r5, [sp, #12]
   13f60:	str	r4, [sp, #16]
   13f64:	str	r2, [sp, #20]
   13f68:	str	lr, [sp, #24]
   13f6c:	str	r7, [sp, #28]
   13f70:	b	13fb8 <putchar_unlocked@plt+0x2ffc>
   13f74:	movw	r1, #20883	; 0x5193
   13f78:	mov	r0, #0
   13f7c:	mov	r2, #5
   13f80:	movt	r1, #1
   13f84:	bl	10e18 <dcgettext@plt>
   13f88:	mov	ip, r0
   13f8c:	ldr	r3, [r7]
   13f90:	ldmib	r7, {r0, r1, r6}
   13f94:	ldr	r5, [r7, #16]
   13f98:	ldr	r4, [r7, #20]
   13f9c:	ldr	r2, [r7, #24]
   13fa0:	ldr	r7, [r7, #28]
   13fa4:	stm	sp, {r0, r1, r6}
   13fa8:	str	r5, [sp, #12]
   13fac:	str	r4, [sp, #16]
   13fb0:	str	r2, [sp, #20]
   13fb4:	str	r7, [sp, #24]
   13fb8:	mov	r0, r8
   13fbc:	mov	r1, #1
   13fc0:	mov	r2, ip
   13fc4:	bl	10f2c <__fprintf_chk@plt>
   13fc8:	sub	sp, fp, #24
   13fcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13fd0:	push	{r4, sl, fp, lr}
   13fd4:	add	fp, sp, #8
   13fd8:	sub	sp, sp, #8
   13fdc:	ldr	ip, [fp, #8]
   13fe0:	mov	lr, #0
   13fe4:	ldr	r4, [ip, lr, lsl #2]
   13fe8:	add	lr, lr, #1
   13fec:	cmp	r4, #0
   13ff0:	bne	13fe4 <putchar_unlocked@plt+0x3028>
   13ff4:	sub	r4, lr, #1
   13ff8:	str	ip, [sp]
   13ffc:	str	r4, [sp, #4]
   14000:	bl	13ca4 <putchar_unlocked@plt+0x2ce8>
   14004:	sub	sp, fp, #8
   14008:	pop	{r4, sl, fp, pc}
   1400c:	push	{r4, r5, fp, lr}
   14010:	add	fp, sp, #8
   14014:	sub	sp, sp, #48	; 0x30
   14018:	ldr	r4, [fp, #8]
   1401c:	mov	ip, #0
   14020:	add	lr, sp, #8
   14024:	ldr	r5, [r4]
   14028:	cmp	r5, #0
   1402c:	str	r5, [lr, ip, lsl #2]
   14030:	beq	14044 <putchar_unlocked@plt+0x3088>
   14034:	add	ip, ip, #1
   14038:	add	r4, r4, #4
   1403c:	cmp	ip, #10
   14040:	bcc	14024 <putchar_unlocked@plt+0x3068>
   14044:	str	lr, [sp]
   14048:	str	ip, [sp, #4]
   1404c:	bl	13ca4 <putchar_unlocked@plt+0x2ce8>
   14050:	sub	sp, fp, #8
   14054:	pop	{r4, r5, fp, pc}
   14058:	push	{fp, lr}
   1405c:	mov	fp, sp
   14060:	sub	sp, sp, #8
   14064:	add	ip, fp, #8
   14068:	str	ip, [sp, #4]
   1406c:	str	ip, [sp]
   14070:	bl	1400c <putchar_unlocked@plt+0x3050>
   14074:	mov	sp, fp
   14078:	pop	{fp, pc}
   1407c:	push	{fp, lr}
   14080:	mov	fp, sp
   14084:	movw	r0, #24892	; 0x613c
   14088:	movt	r0, #2
   1408c:	ldr	r1, [r0]
   14090:	movw	r0, #19918	; 0x4dce
   14094:	movt	r0, #1
   14098:	bl	10d94 <fputs_unlocked@plt>
   1409c:	movw	r1, #21043	; 0x5233
   140a0:	mov	r0, #0
   140a4:	mov	r2, #5
   140a8:	movt	r1, #1
   140ac:	bl	10e18 <dcgettext@plt>
   140b0:	movw	r2, #21063	; 0x5247
   140b4:	mov	r1, r0
   140b8:	mov	r0, #1
   140bc:	movt	r2, #1
   140c0:	bl	10f14 <__printf_chk@plt>
   140c4:	movw	r1, #21085	; 0x525d
   140c8:	mov	r0, #0
   140cc:	mov	r2, #5
   140d0:	movt	r1, #1
   140d4:	bl	10e18 <dcgettext@plt>
   140d8:	movw	r2, #19381	; 0x4bb5
   140dc:	movw	r3, #19727	; 0x4d0f
   140e0:	mov	r1, r0
   140e4:	mov	r0, #1
   140e8:	movt	r2, #1
   140ec:	movt	r3, #1
   140f0:	bl	10f14 <__printf_chk@plt>
   140f4:	movw	r1, #21105	; 0x5271
   140f8:	mov	r0, #0
   140fc:	mov	r2, #5
   14100:	movt	r1, #1
   14104:	bl	10e18 <dcgettext@plt>
   14108:	movw	r2, #21144	; 0x5298
   1410c:	mov	r1, r0
   14110:	mov	r0, #1
   14114:	movt	r2, #1
   14118:	pop	{fp, lr}
   1411c:	b	10f14 <__printf_chk@plt>
   14120:	b	14124 <putchar_unlocked@plt+0x3168>
   14124:	push	{r4, r5, r6, sl, fp, lr}
   14128:	add	fp, sp, #16
   1412c:	mov	r4, r2
   14130:	mov	r5, r1
   14134:	mov	r6, r0
   14138:	bl	147e0 <putchar_unlocked@plt+0x3824>
   1413c:	cmp	r0, #0
   14140:	popne	{r4, r5, r6, sl, fp, pc}
   14144:	cmp	r6, #0
   14148:	beq	1415c <putchar_unlocked@plt+0x31a0>
   1414c:	cmp	r5, #0
   14150:	cmpne	r4, #0
   14154:	bne	1415c <putchar_unlocked@plt+0x31a0>
   14158:	pop	{r4, r5, r6, sl, fp, pc}
   1415c:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14160:	push	{fp, lr}
   14164:	mov	fp, sp
   14168:	bl	14648 <putchar_unlocked@plt+0x368c>
   1416c:	cmp	r0, #0
   14170:	popne	{fp, pc}
   14174:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14178:	push	{fp, lr}
   1417c:	mov	fp, sp
   14180:	bl	14648 <putchar_unlocked@plt+0x368c>
   14184:	cmp	r0, #0
   14188:	popne	{fp, pc}
   1418c:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14190:	push	{fp, lr}
   14194:	mov	fp, sp
   14198:	bl	14648 <putchar_unlocked@plt+0x368c>
   1419c:	cmp	r0, #0
   141a0:	popne	{fp, pc}
   141a4:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   141a8:	push	{r4, r5, fp, lr}
   141ac:	add	fp, sp, #8
   141b0:	mov	r4, r1
   141b4:	mov	r5, r0
   141b8:	bl	14678 <putchar_unlocked@plt+0x36bc>
   141bc:	cmp	r0, #0
   141c0:	popne	{r4, r5, fp, pc}
   141c4:	cmp	r5, #0
   141c8:	beq	141d8 <putchar_unlocked@plt+0x321c>
   141cc:	cmp	r4, #0
   141d0:	bne	141d8 <putchar_unlocked@plt+0x321c>
   141d4:	pop	{r4, r5, fp, pc}
   141d8:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   141dc:	push	{fp, lr}
   141e0:	mov	fp, sp
   141e4:	cmp	r1, #0
   141e8:	orreq	r1, r1, #1
   141ec:	bl	14678 <putchar_unlocked@plt+0x36bc>
   141f0:	cmp	r0, #0
   141f4:	popne	{fp, pc}
   141f8:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   141fc:	push	{fp, lr}
   14200:	mov	fp, sp
   14204:	clz	r3, r2
   14208:	lsr	ip, r3, #5
   1420c:	clz	r3, r1
   14210:	lsr	r3, r3, #5
   14214:	orrs	r3, r3, ip
   14218:	movwne	r1, #1
   1421c:	movwne	r2, #1
   14220:	bl	147e0 <putchar_unlocked@plt+0x3824>
   14224:	cmp	r0, #0
   14228:	popne	{fp, pc}
   1422c:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14230:	push	{fp, lr}
   14234:	mov	fp, sp
   14238:	mov	r2, r1
   1423c:	mov	r1, r0
   14240:	mov	r0, #0
   14244:	bl	147e0 <putchar_unlocked@plt+0x3824>
   14248:	cmp	r0, #0
   1424c:	popne	{fp, pc}
   14250:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14254:	mov	r2, r1
   14258:	mov	r1, r0
   1425c:	mov	r0, #0
   14260:	b	141fc <putchar_unlocked@plt+0x3240>
   14264:	mov	r2, #1
   14268:	b	1426c <putchar_unlocked@plt+0x32b0>
   1426c:	push	{r4, r5, fp, lr}
   14270:	add	fp, sp, #8
   14274:	ldr	r5, [r1]
   14278:	mov	r4, r1
   1427c:	cmp	r0, #0
   14280:	beq	14298 <putchar_unlocked@plt+0x32dc>
   14284:	mov	r1, #1
   14288:	add	r1, r1, r5, lsr #1
   1428c:	adds	r5, r5, r1
   14290:	bcc	142b0 <putchar_unlocked@plt+0x32f4>
   14294:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14298:	cmp	r5, #0
   1429c:	bne	142b0 <putchar_unlocked@plt+0x32f4>
   142a0:	mov	r1, #64	; 0x40
   142a4:	cmp	r2, #64	; 0x40
   142a8:	udiv	r5, r1, r2
   142ac:	addhi	r5, r5, #1
   142b0:	mov	r1, r5
   142b4:	bl	14124 <putchar_unlocked@plt+0x3168>
   142b8:	str	r5, [r4]
   142bc:	pop	{r4, r5, fp, pc}
   142c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142c4:	add	fp, sp, #24
   142c8:	ldr	r6, [r1]
   142cc:	mov	r8, r1
   142d0:	ldr	r4, [fp, #8]
   142d4:	add	r1, r6, r6, asr #1
   142d8:	cmp	r1, r6
   142dc:	mvnvs	r1, #-2147483648	; 0x80000000
   142e0:	cmp	r1, r3
   142e4:	mov	r5, r1
   142e8:	movgt	r5, r3
   142ec:	cmn	r3, #1
   142f0:	movle	r5, r1
   142f4:	cmn	r4, #1
   142f8:	ble	14318 <putchar_unlocked@plt+0x335c>
   142fc:	cmp	r4, #0
   14300:	beq	1436c <putchar_unlocked@plt+0x33b0>
   14304:	cmn	r5, #1
   14308:	ble	14340 <putchar_unlocked@plt+0x3384>
   1430c:	mvn	r7, #-2147483648	; 0x80000000
   14310:	udiv	r1, r7, r4
   14314:	b	14334 <putchar_unlocked@plt+0x3378>
   14318:	cmn	r5, #1
   1431c:	ble	1435c <putchar_unlocked@plt+0x33a0>
   14320:	cmn	r4, #1
   14324:	beq	1436c <putchar_unlocked@plt+0x33b0>
   14328:	mov	r1, #-2147483648	; 0x80000000
   1432c:	mvn	r7, #-2147483648	; 0x80000000
   14330:	sdiv	r1, r1, r4
   14334:	cmp	r1, r5
   14338:	bge	1436c <putchar_unlocked@plt+0x33b0>
   1433c:	b	1437c <putchar_unlocked@plt+0x33c0>
   14340:	beq	1436c <putchar_unlocked@plt+0x33b0>
   14344:	mov	r1, #-2147483648	; 0x80000000
   14348:	mvn	r7, #-2147483648	; 0x80000000
   1434c:	sdiv	r1, r1, r5
   14350:	cmp	r1, r4
   14354:	bge	1436c <putchar_unlocked@plt+0x33b0>
   14358:	b	1437c <putchar_unlocked@plt+0x33c0>
   1435c:	mvn	r7, #-2147483648	; 0x80000000
   14360:	sdiv	r1, r7, r4
   14364:	cmp	r5, r1
   14368:	blt	1437c <putchar_unlocked@plt+0x33c0>
   1436c:	mul	r1, r5, r4
   14370:	mov	r7, #64	; 0x40
   14374:	cmp	r1, #63	; 0x3f
   14378:	bgt	14384 <putchar_unlocked@plt+0x33c8>
   1437c:	sdiv	r5, r7, r4
   14380:	mul	r1, r5, r4
   14384:	cmp	r0, #0
   14388:	moveq	r7, #0
   1438c:	streq	r7, [r8]
   14390:	sub	r7, r5, r6
   14394:	cmp	r7, r2
   14398:	bge	1443c <putchar_unlocked@plt+0x3480>
   1439c:	add	r5, r6, r2
   143a0:	mov	r2, #0
   143a4:	mov	r1, #0
   143a8:	cmp	r5, r3
   143ac:	movwgt	r2, #1
   143b0:	cmn	r3, #1
   143b4:	movwgt	r1, #1
   143b8:	cmp	r5, r6
   143bc:	bvs	14424 <putchar_unlocked@plt+0x3468>
   143c0:	ands	r1, r1, r2
   143c4:	bne	14424 <putchar_unlocked@plt+0x3468>
   143c8:	cmn	r4, #1
   143cc:	ble	143ec <putchar_unlocked@plt+0x3430>
   143d0:	cmp	r4, #0
   143d4:	beq	14438 <putchar_unlocked@plt+0x347c>
   143d8:	cmn	r5, #1
   143dc:	ble	14410 <putchar_unlocked@plt+0x3454>
   143e0:	mvn	r1, #-2147483648	; 0x80000000
   143e4:	udiv	r1, r1, r4
   143e8:	b	14404 <putchar_unlocked@plt+0x3448>
   143ec:	cmn	r5, #1
   143f0:	ble	14428 <putchar_unlocked@plt+0x346c>
   143f4:	cmn	r4, #1
   143f8:	beq	14438 <putchar_unlocked@plt+0x347c>
   143fc:	mov	r1, #-2147483648	; 0x80000000
   14400:	sdiv	r1, r1, r4
   14404:	cmp	r1, r5
   14408:	bge	14438 <putchar_unlocked@plt+0x347c>
   1440c:	b	14424 <putchar_unlocked@plt+0x3468>
   14410:	beq	14438 <putchar_unlocked@plt+0x347c>
   14414:	mov	r1, #-2147483648	; 0x80000000
   14418:	sdiv	r1, r1, r5
   1441c:	cmp	r1, r4
   14420:	bge	14438 <putchar_unlocked@plt+0x347c>
   14424:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14428:	mvn	r1, #-2147483648	; 0x80000000
   1442c:	sdiv	r1, r1, r4
   14430:	cmp	r5, r1
   14434:	blt	14424 <putchar_unlocked@plt+0x3468>
   14438:	mul	r1, r5, r4
   1443c:	bl	141a8 <putchar_unlocked@plt+0x31ec>
   14440:	str	r5, [r8]
   14444:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14448:	push	{fp, lr}
   1444c:	mov	fp, sp
   14450:	mov	r1, #1
   14454:	bl	145f4 <putchar_unlocked@plt+0x3638>
   14458:	cmp	r0, #0
   1445c:	popne	{fp, pc}
   14460:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14464:	push	{fp, lr}
   14468:	mov	fp, sp
   1446c:	bl	145f4 <putchar_unlocked@plt+0x3638>
   14470:	cmp	r0, #0
   14474:	popne	{fp, pc}
   14478:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   1447c:	push	{fp, lr}
   14480:	mov	fp, sp
   14484:	mov	r1, #1
   14488:	bl	145f4 <putchar_unlocked@plt+0x3638>
   1448c:	cmp	r0, #0
   14490:	popne	{fp, pc}
   14494:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14498:	push	{fp, lr}
   1449c:	mov	fp, sp
   144a0:	bl	145f4 <putchar_unlocked@plt+0x3638>
   144a4:	cmp	r0, #0
   144a8:	popne	{fp, pc}
   144ac:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   144b0:	push	{r4, r5, r6, sl, fp, lr}
   144b4:	add	fp, sp, #16
   144b8:	mov	r5, r0
   144bc:	mov	r0, r1
   144c0:	mov	r4, r1
   144c4:	bl	14648 <putchar_unlocked@plt+0x368c>
   144c8:	cmp	r0, #0
   144cc:	beq	144e8 <putchar_unlocked@plt+0x352c>
   144d0:	mov	r1, r5
   144d4:	mov	r2, r4
   144d8:	mov	r6, r0
   144dc:	bl	10ddc <memcpy@plt>
   144e0:	mov	r0, r6
   144e4:	pop	{r4, r5, r6, sl, fp, pc}
   144e8:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   144ec:	push	{r4, r5, r6, sl, fp, lr}
   144f0:	add	fp, sp, #16
   144f4:	mov	r5, r0
   144f8:	mov	r0, r1
   144fc:	mov	r4, r1
   14500:	bl	14648 <putchar_unlocked@plt+0x368c>
   14504:	cmp	r0, #0
   14508:	beq	14524 <putchar_unlocked@plt+0x3568>
   1450c:	mov	r1, r5
   14510:	mov	r2, r4
   14514:	mov	r6, r0
   14518:	bl	10ddc <memcpy@plt>
   1451c:	mov	r0, r6
   14520:	pop	{r4, r5, r6, sl, fp, pc}
   14524:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14528:	push	{r4, r5, r6, sl, fp, lr}
   1452c:	add	fp, sp, #16
   14530:	mov	r5, r0
   14534:	add	r0, r1, #1
   14538:	mov	r4, r1
   1453c:	bl	14648 <putchar_unlocked@plt+0x368c>
   14540:	cmp	r0, #0
   14544:	beq	1456c <putchar_unlocked@plt+0x35b0>
   14548:	mov	r6, r0
   1454c:	mov	r0, #0
   14550:	mov	r1, r5
   14554:	mov	r2, r4
   14558:	strb	r0, [r6, r4]
   1455c:	mov	r0, r6
   14560:	bl	10ddc <memcpy@plt>
   14564:	mov	r0, r6
   14568:	pop	{r4, r5, r6, sl, fp, pc}
   1456c:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   14570:	push	{r4, r5, r6, sl, fp, lr}
   14574:	add	fp, sp, #16
   14578:	mov	r4, r0
   1457c:	bl	10ee4 <strlen@plt>
   14580:	add	r5, r0, #1
   14584:	mov	r0, r5
   14588:	bl	14648 <putchar_unlocked@plt+0x368c>
   1458c:	cmp	r0, #0
   14590:	beq	145ac <putchar_unlocked@plt+0x35f0>
   14594:	mov	r1, r4
   14598:	mov	r2, r5
   1459c:	mov	r6, r0
   145a0:	bl	10ddc <memcpy@plt>
   145a4:	mov	r0, r6
   145a8:	pop	{r4, r5, r6, sl, fp, pc}
   145ac:	bl	145b0 <putchar_unlocked@plt+0x35f4>
   145b0:	push	{fp, lr}
   145b4:	mov	fp, sp
   145b8:	movw	r0, #24796	; 0x60dc
   145bc:	movw	r1, #21220	; 0x52e4
   145c0:	mov	r2, #5
   145c4:	movt	r0, #2
   145c8:	movt	r1, #1
   145cc:	ldr	r4, [r0]
   145d0:	mov	r0, #0
   145d4:	bl	10e18 <dcgettext@plt>
   145d8:	movw	r2, #19475	; 0x4c13
   145dc:	mov	r3, r0
   145e0:	mov	r0, r4
   145e4:	mov	r1, #0
   145e8:	movt	r2, #1
   145ec:	bl	10e84 <error@plt>
   145f0:	bl	10fb0 <abort@plt>
   145f4:	clz	r2, r1
   145f8:	clz	r3, r0
   145fc:	lsr	r2, r2, #5
   14600:	lsr	r3, r3, #5
   14604:	orrs	r2, r3, r2
   14608:	movwne	r1, #1
   1460c:	movwne	r0, #1
   14610:	cmp	r1, #0
   14614:	beq	14644 <putchar_unlocked@plt+0x3688>
   14618:	mvn	r2, #-2147483648	; 0x80000000
   1461c:	udiv	r2, r2, r1
   14620:	cmp	r2, r0
   14624:	bcs	14644 <putchar_unlocked@plt+0x3688>
   14628:	push	{fp, lr}
   1462c:	mov	fp, sp
   14630:	bl	10ef0 <__errno_location@plt>
   14634:	mov	r1, #12
   14638:	str	r1, [r0]
   1463c:	mov	r0, #0
   14640:	pop	{fp, pc}
   14644:	b	10d88 <calloc@plt>
   14648:	cmp	r0, #0
   1464c:	movweq	r0, #1
   14650:	cmn	r0, #1
   14654:	ble	1465c <putchar_unlocked@plt+0x36a0>
   14658:	b	10e90 <malloc@plt>
   1465c:	push	{fp, lr}
   14660:	mov	fp, sp
   14664:	bl	10ef0 <__errno_location@plt>
   14668:	mov	r1, #12
   1466c:	str	r1, [r0]
   14670:	mov	r0, #0
   14674:	pop	{fp, pc}
   14678:	push	{fp, lr}
   1467c:	mov	fp, sp
   14680:	cmp	r0, #0
   14684:	beq	146a0 <putchar_unlocked@plt+0x36e4>
   14688:	cmp	r1, #0
   1468c:	beq	146ac <putchar_unlocked@plt+0x36f0>
   14690:	cmn	r1, #1
   14694:	ble	146b4 <putchar_unlocked@plt+0x36f8>
   14698:	pop	{fp, lr}
   1469c:	b	10e24 <realloc@plt>
   146a0:	mov	r0, r1
   146a4:	pop	{fp, lr}
   146a8:	b	14648 <putchar_unlocked@plt+0x368c>
   146ac:	bl	1209c <putchar_unlocked@plt+0x10e0>
   146b0:	b	146c0 <putchar_unlocked@plt+0x3704>
   146b4:	bl	10ef0 <__errno_location@plt>
   146b8:	mov	r1, #12
   146bc:	str	r1, [r0]
   146c0:	mov	r0, #0
   146c4:	pop	{fp, pc}
   146c8:	push	{r4, r5, r6, sl, fp, lr}
   146cc:	add	fp, sp, #16
   146d0:	mov	r4, r0
   146d4:	bl	10e60 <__fpending@plt>
   146d8:	mov	r5, r0
   146dc:	mov	r0, r4
   146e0:	bl	10e6c <ferror_unlocked@plt>
   146e4:	mov	r6, r0
   146e8:	mov	r0, r4
   146ec:	bl	11fa4 <putchar_unlocked@plt+0xfe8>
   146f0:	cmp	r6, #0
   146f4:	beq	14714 <putchar_unlocked@plt+0x3758>
   146f8:	mvn	r4, #0
   146fc:	cmp	r0, #0
   14700:	bne	14740 <putchar_unlocked@plt+0x3784>
   14704:	bl	10ef0 <__errno_location@plt>
   14708:	mov	r1, #0
   1470c:	str	r1, [r0]
   14710:	b	14740 <putchar_unlocked@plt+0x3784>
   14714:	cmp	r0, #0
   14718:	mov	r4, r0
   1471c:	mvnne	r4, #0
   14720:	cmp	r5, #0
   14724:	bne	14740 <putchar_unlocked@plt+0x3784>
   14728:	cmp	r0, #0
   1472c:	beq	14740 <putchar_unlocked@plt+0x3784>
   14730:	bl	10ef0 <__errno_location@plt>
   14734:	ldr	r0, [r0]
   14738:	subs	r4, r0, #9
   1473c:	mvnne	r4, #0
   14740:	mov	r0, r4
   14744:	pop	{r4, r5, r6, sl, fp, pc}
   14748:	push	{fp, lr}
   1474c:	mov	fp, sp
   14750:	mov	r0, #14
   14754:	bl	10f68 <nl_langinfo@plt>
   14758:	movw	r1, #19348	; 0x4b94
   1475c:	cmp	r0, #0
   14760:	movt	r1, #1
   14764:	movne	r1, r0
   14768:	movw	r0, #21237	; 0x52f5
   1476c:	ldrb	r2, [r1]
   14770:	movt	r0, #1
   14774:	cmp	r2, #0
   14778:	movne	r0, r1
   1477c:	pop	{fp, pc}
   14780:	push	{r4, r5, r6, r7, fp, lr}
   14784:	add	fp, sp, #16
   14788:	sub	sp, sp, #8
   1478c:	add	r5, sp, #4
   14790:	cmp	r0, #0
   14794:	mov	r7, r2
   14798:	mov	r4, r1
   1479c:	movne	r5, r0
   147a0:	mov	r0, r5
   147a4:	bl	10e78 <mbrtowc@plt>
   147a8:	mov	r6, r0
   147ac:	cmp	r7, #0
   147b0:	beq	147d4 <putchar_unlocked@plt+0x3818>
   147b4:	cmn	r6, #2
   147b8:	bcc	147d4 <putchar_unlocked@plt+0x3818>
   147bc:	mov	r0, #0
   147c0:	bl	1481c <putchar_unlocked@plt+0x3860>
   147c4:	cmp	r0, #0
   147c8:	ldrbeq	r0, [r4]
   147cc:	moveq	r6, #1
   147d0:	streq	r0, [r5]
   147d4:	mov	r0, r6
   147d8:	sub	sp, fp, #16
   147dc:	pop	{r4, r5, r6, r7, fp, pc}
   147e0:	cmp	r2, #0
   147e4:	beq	14814 <putchar_unlocked@plt+0x3858>
   147e8:	mvn	r3, #0
   147ec:	udiv	r3, r3, r2
   147f0:	cmp	r3, r1
   147f4:	bcs	14814 <putchar_unlocked@plt+0x3858>
   147f8:	push	{fp, lr}
   147fc:	mov	fp, sp
   14800:	bl	10ef0 <__errno_location@plt>
   14804:	mov	r1, #12
   14808:	str	r1, [r0]
   1480c:	mov	r0, #0
   14810:	pop	{fp, pc}
   14814:	mul	r1, r2, r1
   14818:	b	14678 <putchar_unlocked@plt+0x36bc>
   1481c:	push	{r4, sl, fp, lr}
   14820:	add	fp, sp, #8
   14824:	sub	sp, sp, #264	; 0x108
   14828:	add	r1, sp, #7
   1482c:	movw	r2, #257	; 0x101
   14830:	bl	14880 <putchar_unlocked@plt+0x38c4>
   14834:	mov	r4, #0
   14838:	cmp	r0, #0
   1483c:	bne	14874 <putchar_unlocked@plt+0x38b8>
   14840:	movw	r1, #21243	; 0x52fb
   14844:	add	r0, sp, #7
   14848:	movt	r1, #1
   1484c:	bl	10da0 <strcmp@plt>
   14850:	cmp	r0, #0
   14854:	beq	14874 <putchar_unlocked@plt+0x38b8>
   14858:	movw	r1, #21245	; 0x52fd
   1485c:	add	r0, sp, #7
   14860:	movt	r1, #1
   14864:	bl	10da0 <strcmp@plt>
   14868:	mov	r4, r0
   1486c:	cmp	r0, #0
   14870:	movwne	r4, #1
   14874:	mov	r0, r4
   14878:	sub	sp, fp, #8
   1487c:	pop	{r4, sl, fp, pc}
   14880:	push	{r4, r5, r6, r7, fp, lr}
   14884:	add	fp, sp, #16
   14888:	mov	r4, r1
   1488c:	mov	r1, #0
   14890:	mov	r6, r2
   14894:	bl	10f50 <setlocale@plt>
   14898:	cmp	r0, #0
   1489c:	beq	148c8 <putchar_unlocked@plt+0x390c>
   148a0:	mov	r7, r0
   148a4:	bl	10ee4 <strlen@plt>
   148a8:	cmp	r0, r6
   148ac:	bcs	148dc <putchar_unlocked@plt+0x3920>
   148b0:	add	r2, r0, #1
   148b4:	mov	r0, r4
   148b8:	mov	r1, r7
   148bc:	bl	10ddc <memcpy@plt>
   148c0:	mov	r5, #0
   148c4:	b	14904 <putchar_unlocked@plt+0x3948>
   148c8:	cmp	r6, #0
   148cc:	mov	r5, #22
   148d0:	movne	r0, #0
   148d4:	strbne	r0, [r4]
   148d8:	b	14904 <putchar_unlocked@plt+0x3948>
   148dc:	mov	r5, #34	; 0x22
   148e0:	cmp	r6, #0
   148e4:	beq	14904 <putchar_unlocked@plt+0x3948>
   148e8:	sub	r6, r6, #1
   148ec:	mov	r0, r4
   148f0:	mov	r1, r7
   148f4:	mov	r2, r6
   148f8:	bl	10ddc <memcpy@plt>
   148fc:	mov	r0, #0
   14900:	strb	r0, [r4, r6]
   14904:	mov	r0, r5
   14908:	pop	{r4, r5, r6, r7, fp, pc}
   1490c:	mov	r1, #0
   14910:	b	10f50 <setlocale@plt>
   14914:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14918:	mov	r7, r0
   1491c:	ldr	r6, [pc, #72]	; 1496c <putchar_unlocked@plt+0x39b0>
   14920:	ldr	r5, [pc, #72]	; 14970 <putchar_unlocked@plt+0x39b4>
   14924:	add	r6, pc, r6
   14928:	add	r5, pc, r5
   1492c:	sub	r6, r6, r5
   14930:	mov	r8, r1
   14934:	mov	r9, r2
   14938:	bl	10d68 <calloc@plt-0x20>
   1493c:	asrs	r6, r6, #2
   14940:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14944:	mov	r4, #0
   14948:	add	r4, r4, #1
   1494c:	ldr	r3, [r5], #4
   14950:	mov	r2, r9
   14954:	mov	r1, r8
   14958:	mov	r0, r7
   1495c:	blx	r3
   14960:	cmp	r6, r4
   14964:	bne	14948 <putchar_unlocked@plt+0x398c>
   14968:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1496c:	andeq	r1, r1, r0, ror #11
   14970:	ldrdeq	r1, [r1], -r8
   14974:	bx	lr
   14978:	ldr	r3, [pc, #12]	; 1498c <putchar_unlocked@plt+0x39d0>
   1497c:	mov	r1, #0
   14980:	add	r3, pc, r3
   14984:	ldr	r2, [r3]
   14988:	b	10efc <__cxa_atexit@plt>
   1498c:	andeq	r1, r1, ip, asr #14

Disassembly of section .fini:

00014990 <.fini>:
   14990:	push	{r3, lr}
   14994:	pop	{r3, pc}
