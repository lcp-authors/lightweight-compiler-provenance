
../repos/prog2/0.10:     file format elf32-littlearm


Disassembly of section .init:

00010608 <.init>:
   10608:	push	{r3, lr}
   1060c:	bl	10724 <_start@@Base+0x3c>
   10610:	pop	{r3, pc}

Disassembly of section .plt:

00010614 <printf@plt-0x14>:
   10614:	push	{lr}		; (str lr, [sp, #-4]!)
   10618:	ldr	lr, [pc, #4]	; 10624 <printf@plt-0x4>
   1061c:	add	lr, pc, lr
   10620:	ldr	pc, [lr, #8]!
   10624:	ldrdeq	r0, [r1], -ip

00010628 <printf@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #16, 20	; 0x10000
   10630:	ldr	pc, [ip, #2524]!	; 0x9dc

00010634 <memcpy@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #16, 20	; 0x10000
   1063c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010640 <__libc_start_main@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #16, 20	; 0x10000
   10648:	ldr	pc, [ip, #2508]!	; 0x9cc

0001064c <__gmon_start__@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #16, 20	; 0x10000
   10654:	ldr	pc, [ip, #2500]!	; 0x9c4

00010658 <__isoc99_scanf@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #16, 20	; 0x10000
   10660:	ldr	pc, [ip, #2492]!	; 0x9bc

00010664 <abort@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #16, 20	; 0x10000
   1066c:	ldr	pc, [ip, #2484]!	; 0x9b4

Disassembly of section .text:

00010670 <main@@Base>:
   10670:	push	{r4, lr}
   10674:	sub	sp, sp, #6848	; 0x1ac0
   10678:	sub	sp, sp, #24
   1067c:	add	r0, sp, #72	; 0x48
   10680:	bl	10810 <ler_tarefas@@Base>
   10684:	mov	r4, r0
   10688:	mov	r1, r0
   1068c:	add	r0, sp, #72	; 0x48
   10690:	bl	10848 <lista_tarefas@@Base>
   10694:	mov	r1, r4
   10698:	ldr	r0, [pc, #60]	; 106dc <main@@Base+0x6c>
   1069c:	bl	10628 <printf@plt>
   106a0:	mov	r1, r4
   106a4:	add	r2, sp, #4
   106a8:	add	r0, sp, #72	; 0x48
   106ac:	bl	10898 <analisa_tarefas@@Base>
   106b0:	vcvt.f64.f32	d7, s0
   106b4:	ldr	r0, [pc, #36]	; 106e0 <main@@Base+0x70>
   106b8:	vmov	r2, r3, d7
   106bc:	bl	10628 <printf@plt>
   106c0:	add	r1, sp, #4
   106c4:	ldr	r0, [pc, #24]	; 106e4 <main@@Base+0x74>
   106c8:	bl	10628 <printf@plt>
   106cc:	mov	r0, #0
   106d0:	add	sp, sp, #6848	; 0x1ac0
   106d4:	add	sp, sp, #24
   106d8:	pop	{r4, pc}
   106dc:	muleq	r1, r1, r9
   106e0:	andeq	r0, r1, pc, lsr #19
   106e4:	ldrdeq	r0, [r1], -r1

000106e8 <_start@@Base>:
   106e8:	mov	fp, #0
   106ec:	mov	lr, #0
   106f0:	pop	{r1}		; (ldr r1, [sp], #4)
   106f4:	mov	r2, sp
   106f8:	push	{r2}		; (str r2, [sp, #-4]!)
   106fc:	push	{r0}		; (str r0, [sp, #-4]!)
   10700:	ldr	ip, [pc, #16]	; 10718 <_start@@Base+0x30>
   10704:	push	{ip}		; (str ip, [sp, #-4]!)
   10708:	ldr	r0, [pc, #12]	; 1071c <_start@@Base+0x34>
   1070c:	ldr	r3, [pc, #12]	; 10720 <_start@@Base+0x38>
   10710:	bl	10640 <__libc_start_main@plt>
   10714:	bl	10664 <abort@plt>
   10718:	andeq	r0, r1, r8, ror #18
   1071c:	andeq	r0, r1, r0, ror r6
   10720:	andeq	r0, r1, r8, lsl #18
   10724:	ldr	r3, [pc, #20]	; 10740 <_start@@Base+0x58>
   10728:	ldr	r2, [pc, #20]	; 10744 <_start@@Base+0x5c>
   1072c:	add	r3, pc, r3
   10730:	ldr	r2, [r3, r2]
   10734:	cmp	r2, #0
   10738:	bxeq	lr
   1073c:	b	1064c <__gmon_start__@plt>
   10740:	andeq	r0, r1, ip, asr #17
   10744:	andeq	r0, r0, r4, lsr #32
   10748:	ldr	r0, [pc, #24]	; 10768 <_start@@Base+0x80>
   1074c:	ldr	r3, [pc, #24]	; 1076c <_start@@Base+0x84>
   10750:	cmp	r3, r0
   10754:	bxeq	lr
   10758:	ldr	r3, [pc, #16]	; 10770 <_start@@Base+0x88>
   1075c:	cmp	r3, #0
   10760:	bxeq	lr
   10764:	bx	r3
   10768:	andeq	r1, r2, r0, lsr r0
   1076c:	andeq	r1, r2, r0, lsr r0
   10770:	andeq	r0, r0, r0
   10774:	ldr	r0, [pc, #36]	; 107a0 <_start@@Base+0xb8>
   10778:	ldr	r1, [pc, #36]	; 107a4 <_start@@Base+0xbc>
   1077c:	sub	r1, r1, r0
   10780:	asr	r1, r1, #2
   10784:	add	r1, r1, r1, lsr #31
   10788:	asrs	r1, r1, #1
   1078c:	bxeq	lr
   10790:	ldr	r3, [pc, #16]	; 107a8 <_start@@Base+0xc0>
   10794:	cmp	r3, #0
   10798:	bxeq	lr
   1079c:	bx	r3
   107a0:	andeq	r1, r2, r0, lsr r0
   107a4:	andeq	r1, r2, r0, lsr r0
   107a8:	andeq	r0, r0, r0
   107ac:	push	{r4, lr}
   107b0:	ldr	r4, [pc, #24]	; 107d0 <_start@@Base+0xe8>
   107b4:	ldrb	r3, [r4]
   107b8:	cmp	r3, #0
   107bc:	popne	{r4, pc}
   107c0:	bl	10748 <_start@@Base+0x60>
   107c4:	mov	r3, #1
   107c8:	strb	r3, [r4]
   107cc:	pop	{r4, pc}
   107d0:	andeq	r1, r2, r0, lsr r0
   107d4:	b	10774 <_start@@Base+0x8c>

000107d8 <nova_tarefa@@Base>:
   107d8:	add	r3, r0, #64	; 0x40
   107dc:	push	{r0, r1, r2, lr}
   107e0:	mov	r1, r0
   107e4:	add	r2, r0, #30
   107e8:	ldr	r0, [pc, #28]	; 1080c <nova_tarefa@@Base+0x34>
   107ec:	str	r3, [sp]
   107f0:	add	r3, r1, #60	; 0x3c
   107f4:	bl	10658 <__isoc99_scanf@plt>
   107f8:	sub	r0, r0, #4
   107fc:	clz	r0, r0
   10800:	lsr	r0, r0, #5
   10804:	add	sp, sp, #12
   10808:	pop	{pc}		; (ldr pc, [sp], #4)
   1080c:	andeq	r0, r1, r8, ror r9

00010810 <ler_tarefas@@Base>:
   10810:	push	{r4, r5, r6, lr}
   10814:	mov	r5, r0
   10818:	mov	r4, #0
   1081c:	mov	r6, #68	; 0x44
   10820:	mla	r0, r6, r4, r5
   10824:	bl	107d8 <nova_tarefa@@Base>
   10828:	cmp	r0, #0
   1082c:	beq	10838 <ler_tarefas@@Base+0x28>
   10830:	cmp	r4, #100	; 0x64
   10834:	bne	10840 <ler_tarefas@@Base+0x30>
   10838:	mov	r0, r4
   1083c:	pop	{r4, r5, r6, pc}
   10840:	add	r4, r4, #1
   10844:	b	10820 <ler_tarefas@@Base+0x10>

00010848 <lista_tarefas@@Base>:
   10848:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1084c:	mov	r6, r1
   10850:	mov	r4, r0
   10854:	mov	r5, #0
   10858:	ldr	r7, [pc, #52]	; 10894 <lista_tarefas@@Base+0x4c>
   1085c:	cmp	r5, r6
   10860:	blt	1086c <lista_tarefas@@Base+0x24>
   10864:	add	sp, sp, #12
   10868:	pop	{r4, r5, r6, r7, pc}
   1086c:	ldr	r3, [r4, #64]	; 0x40
   10870:	add	r2, r4, #30
   10874:	mov	r1, r4
   10878:	mov	r0, r7
   1087c:	add	r5, r5, #1
   10880:	add	r4, r4, #68	; 0x44
   10884:	str	r3, [sp]
   10888:	ldr	r3, [r4, #-8]
   1088c:	bl	10628 <printf@plt>
   10890:	b	1085c <lista_tarefas@@Base+0x14>
   10894:	andeq	r0, r1, r4, lsl #19

00010898 <analisa_tarefas@@Base>:
   10898:	mov	r3, #0
   1089c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   108a0:	mov	r4, r1
   108a4:	mov	r9, r2
   108a8:	mov	r6, r0
   108ac:	mov	r5, r3
   108b0:	mov	r7, r3
   108b4:	cmp	r7, r4
   108b8:	blt	108d8 <analisa_tarefas@@Base+0x40>
   108bc:	bic	r3, r4, r4, asr #31
   108c0:	vmov	s15, r5
   108c4:	vmov	s0, r3
   108c8:	vcvt.f32.s32	s15, s15
   108cc:	vcvt.f32.s32	s0, s0
   108d0:	vdiv.f32	s0, s15, s0
   108d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   108d8:	ldr	r8, [r6, #60]	; 0x3c
   108dc:	cmp	r8, r3
   108e0:	add	r5, r5, r8
   108e4:	ble	108fc <analisa_tarefas@@Base+0x64>
   108e8:	mov	r2, #68	; 0x44
   108ec:	mov	r1, r6
   108f0:	mov	r0, r9
   108f4:	bl	10634 <memcpy@plt>
   108f8:	mov	r3, r8
   108fc:	add	r7, r7, #1
   10900:	add	r6, r6, #68	; 0x44
   10904:	b	108b4 <analisa_tarefas@@Base+0x1c>

00010908 <__libc_csu_init@@Base>:
   10908:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1090c:	mov	r7, r0
   10910:	ldr	r6, [pc, #72]	; 10960 <__libc_csu_init@@Base+0x58>
   10914:	ldr	r5, [pc, #72]	; 10964 <__libc_csu_init@@Base+0x5c>
   10918:	add	r6, pc, r6
   1091c:	add	r5, pc, r5
   10920:	sub	r6, r6, r5
   10924:	mov	r8, r1
   10928:	mov	r9, r2
   1092c:	bl	10608 <printf@plt-0x20>
   10930:	asrs	r6, r6, #2
   10934:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10938:	mov	r4, #0
   1093c:	add	r4, r4, #1
   10940:	ldr	r3, [r5], #4
   10944:	mov	r2, r9
   10948:	mov	r1, r8
   1094c:	mov	r0, r7
   10950:	blx	r3
   10954:	cmp	r6, r4
   10958:	bne	1093c <__libc_csu_init@@Base+0x34>
   1095c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10960:	strdeq	r0, [r1], -r4
   10964:	andeq	r0, r1, ip, ror #11

00010968 <__libc_csu_fini@@Base>:
   10968:	bx	lr

Disassembly of section .fini:

0001096c <.fini>:
   1096c:	push	{r3, lr}
   10970:	pop	{r3, pc}
