
../repos/coreutils/src/b2sum:     file format elf32-littlearm


Disassembly of section .init:

00010eb4 <.init>:
   10eb4:	push	{r3, lr}
   10eb8:	bl	12344 <__assert_fail@plt+0x1188>
   10ebc:	pop	{r3, pc}

Disassembly of section .plt:

00010ec0 <fdopen@plt-0x14>:
   10ec0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec4:	ldr	lr, [pc, #4]	; 10ed0 <fdopen@plt-0x4>
   10ec8:	add	lr, pc, lr
   10ecc:	ldr	pc, [lr, #8]!
   10ed0:	andeq	ip, r1, r0, lsr r1

00010ed4 <fdopen@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #28, 20	; 0x1c000
   10edc:	ldr	pc, [ip, #304]!	; 0x130

00010ee0 <calloc@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #28, 20	; 0x1c000
   10ee8:	ldr	pc, [ip, #296]!	; 0x128

00010eec <fputs_unlocked@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #28, 20	; 0x1c000
   10ef4:	ldr	pc, [ip, #288]!	; 0x120

00010ef8 <raise@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #28, 20	; 0x1c000
   10f00:	ldr	pc, [ip, #280]!	; 0x118

00010f04 <strcmp@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #28, 20	; 0x1c000
   10f0c:	ldr	pc, [ip, #272]!	; 0x110

00010f10 <posix_fadvise64@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #28, 20	; 0x1c000
   10f18:	ldr	pc, [ip, #264]!	; 0x108

00010f1c <fflush@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #28, 20	; 0x1c000
   10f24:	ldr	pc, [ip, #256]!	; 0x100

00010f28 <free@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #28, 20	; 0x1c000
   10f30:	ldr	pc, [ip, #248]!	; 0xf8

00010f34 <ferror@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #28, 20	; 0x1c000
   10f3c:	ldr	pc, [ip, #240]!	; 0xf0

00010f40 <_exit@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #28, 20	; 0x1c000
   10f48:	ldr	pc, [ip, #232]!	; 0xe8

00010f4c <memcpy@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #28, 20	; 0x1c000
   10f54:	ldr	pc, [ip, #224]!	; 0xe0

00010f58 <mbsinit@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #28, 20	; 0x1c000
   10f60:	ldr	pc, [ip, #216]!	; 0xd8

00010f64 <memcmp@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #28, 20	; 0x1c000
   10f6c:	ldr	pc, [ip, #208]!	; 0xd0

00010f70 <fputc_unlocked@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #28, 20	; 0x1c000
   10f78:	ldr	pc, [ip, #200]!	; 0xc8

00010f7c <dcgettext@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #28, 20	; 0x1c000
   10f84:	ldr	pc, [ip, #192]!	; 0xc0

00010f88 <realloc@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #28, 20	; 0x1c000
   10f90:	ldr	pc, [ip, #184]!	; 0xb8

00010f94 <textdomain@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #28, 20	; 0x1c000
   10f9c:	ldr	pc, [ip, #176]!	; 0xb0

00010fa0 <iswprint@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #28, 20	; 0x1c000
   10fa8:	ldr	pc, [ip, #168]!	; 0xa8

00010fac <__memcpy_chk@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #28, 20	; 0x1c000
   10fb4:	ldr	pc, [ip, #160]!	; 0xa0

00010fb8 <lseek64@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #28, 20	; 0x1c000
   10fc0:	ldr	pc, [ip, #152]!	; 0x98

00010fc4 <__ctype_get_mb_cur_max@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #28, 20	; 0x1c000
   10fcc:	ldr	pc, [ip, #144]!	; 0x90

00010fd0 <fread@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #28, 20	; 0x1c000
   10fd8:	ldr	pc, [ip, #136]!	; 0x88

00010fdc <__fpending@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #28, 20	; 0x1c000
   10fe4:	ldr	pc, [ip, #128]!	; 0x80

00010fe8 <ferror_unlocked@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #28, 20	; 0x1c000
   10ff0:	ldr	pc, [ip, #120]!	; 0x78

00010ff4 <mbrtowc@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #28, 20	; 0x1c000
   10ffc:	ldr	pc, [ip, #112]!	; 0x70

00011000 <error@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #28, 20	; 0x1c000
   11008:	ldr	pc, [ip, #104]!	; 0x68

0001100c <malloc@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #28, 20	; 0x1c000
   11014:	ldr	pc, [ip, #96]!	; 0x60

00011018 <__libc_start_main@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #28, 20	; 0x1c000
   11020:	ldr	pc, [ip, #88]!	; 0x58

00011024 <__freading@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #28, 20	; 0x1c000
   1102c:	ldr	pc, [ip, #80]!	; 0x50

00011030 <__ctype_tolower_loc@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #28, 20	; 0x1c000
   11038:	ldr	pc, [ip, #72]!	; 0x48

0001103c <__gmon_start__@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #28, 20	; 0x1c000
   11044:	ldr	pc, [ip, #64]!	; 0x40

00011048 <getopt_long@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #28, 20	; 0x1c000
   11050:	ldr	pc, [ip, #56]!	; 0x38

00011054 <__ctype_b_loc@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #28, 20	; 0x1c000
   1105c:	ldr	pc, [ip, #48]!	; 0x30

00011060 <exit@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #28, 20	; 0x1c000
   11068:	ldr	pc, [ip, #40]!	; 0x28

0001106c <feof@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #28, 20	; 0x1c000
   11074:	ldr	pc, [ip, #32]!

00011078 <strlen@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #28, 20	; 0x1c000
   11080:	ldr	pc, [ip, #24]!

00011084 <strchr@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #28, 20	; 0x1c000
   1108c:	ldr	pc, [ip, #16]!

00011090 <__errno_location@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #28, 20	; 0x1c000
   11098:	ldr	pc, [ip, #8]!

0001109c <__cxa_atexit@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #28, 20	; 0x1c000
   110a4:	ldr	pc, [ip, #0]!

000110a8 <setvbuf@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #110592	; 0x1b000
   110b0:	ldr	pc, [ip, #4088]!	; 0xff8

000110b4 <memset@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #110592	; 0x1b000
   110bc:	ldr	pc, [ip, #4080]!	; 0xff0

000110c0 <__printf_chk@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #110592	; 0x1b000
   110c8:	ldr	pc, [ip, #4072]!	; 0xfe8

000110cc <fileno@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #110592	; 0x1b000
   110d4:	ldr	pc, [ip, #4064]!	; 0xfe0

000110d8 <strtoumax@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #110592	; 0x1b000
   110e0:	ldr	pc, [ip, #4056]!	; 0xfd8

000110e4 <__fprintf_chk@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #110592	; 0x1b000
   110ec:	ldr	pc, [ip, #4048]!	; 0xfd0

000110f0 <fclose@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #110592	; 0x1b000
   110f8:	ldr	pc, [ip, #4040]!	; 0xfc8

000110fc <fseeko64@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #110592	; 0x1b000
   11104:	ldr	pc, [ip, #4032]!	; 0xfc0

00011108 <fcntl64@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #110592	; 0x1b000
   11110:	ldr	pc, [ip, #4024]!	; 0xfb8

00011114 <setlocale@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #110592	; 0x1b000
   1111c:	ldr	pc, [ip, #4016]!	; 0xfb0

00011120 <strrchr@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #110592	; 0x1b000
   11128:	ldr	pc, [ip, #4008]!	; 0xfa8

0001112c <nl_langinfo@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #110592	; 0x1b000
   11134:	ldr	pc, [ip, #4000]!	; 0xfa0

00011138 <clearerr_unlocked@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #110592	; 0x1b000
   11140:	ldr	pc, [ip, #3992]!	; 0xf98

00011144 <fopen64@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #110592	; 0x1b000
   1114c:	ldr	pc, [ip, #3984]!	; 0xf90

00011150 <bindtextdomain@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #110592	; 0x1b000
   11158:	ldr	pc, [ip, #3976]!	; 0xf88

0001115c <getline@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #110592	; 0x1b000
   11164:	ldr	pc, [ip, #3968]!	; 0xf80

00011168 <fputs@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #110592	; 0x1b000
   11170:	ldr	pc, [ip, #3960]!	; 0xf78

00011174 <strncmp@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #110592	; 0x1b000
   1117c:	ldr	pc, [ip, #3952]!	; 0xf70

00011180 <abort@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #110592	; 0x1b000
   11188:	ldr	pc, [ip, #3944]!	; 0xf68

0001118c <feof_unlocked@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #110592	; 0x1b000
   11194:	ldr	pc, [ip, #3936]!	; 0xf60

00011198 <close@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #110592	; 0x1b000
   111a0:	ldr	pc, [ip, #3928]!	; 0xf58

000111a4 <dcngettext@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #110592	; 0x1b000
   111ac:	ldr	pc, [ip, #3920]!	; 0xf50

000111b0 <putchar_unlocked@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #110592	; 0x1b000
   111b8:	ldr	pc, [ip, #3912]!	; 0xf48

000111bc <__assert_fail@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #110592	; 0x1b000
   111c4:	ldr	pc, [ip, #3904]!	; 0xf40

Disassembly of section .text:

000111c8 <.text>:
   111c8:	push	{r4, lr}
   111cc:	bl	11090 <__errno_location@plt>
   111d0:	mov	r3, #12
   111d4:	str	r3, [r0]
   111d8:	mov	r0, #0
   111dc:	pop	{r4, pc}
   111e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111e4:	mov	r8, r0
   111e8:	sub	sp, sp, #292	; 0x124
   111ec:	mov	r7, r1
   111f0:	mvn	r6, #0
   111f4:	ldr	r0, [r1]
   111f8:	bl	18754 <__assert_fail@plt+0x7598>
   111fc:	ldr	r4, [pc, #4016]	; 121b4 <__assert_fail@plt+0xff8>
   11200:	mov	r0, #6
   11204:	ldr	r1, [pc, #4012]	; 121b8 <__assert_fail@plt+0xffc>
   11208:	bl	11114 <setlocale@plt>
   1120c:	ldr	r1, [pc, #4008]	; 121bc <__assert_fail@plt+0x1000>
   11210:	ldr	r0, [pc, #4008]	; 121c0 <__assert_fail@plt+0x1004>
   11214:	bl	11150 <bindtextdomain@plt>
   11218:	ldr	r0, [pc, #4000]	; 121c0 <__assert_fail@plt+0x1004>
   1121c:	bl	10f94 <textdomain@plt>
   11220:	ldr	r0, [pc, #3996]	; 121c4 <__assert_fail@plt+0x1008>
   11224:	bl	1b104 <__assert_fail@plt+0x9f48>
   11228:	ldr	r9, [pc, #3976]	; 121b8 <__assert_fail@plt+0xffc>
   1122c:	mov	r3, #0
   11230:	mov	r2, #1
   11234:	mov	r1, r3
   11238:	ldr	r5, [pc, #3976]	; 121c8 <__assert_fail@plt+0x100c>
   1123c:	ldr	r0, [r4]
   11240:	bl	110a8 <setvbuf@plt>
   11244:	mov	r3, #0
   11248:	str	r4, [sp, #32]
   1124c:	mov	fp, r3
   11250:	str	r3, [sp, #72]	; 0x48
   11254:	mov	r4, #0
   11258:	ldr	r3, [pc, #3948]	; 121cc <__assert_fail@plt+0x1010>
   1125c:	mov	r1, r7
   11260:	mov	r0, r8
   11264:	ldr	r2, [pc, #3940]	; 121d0 <__assert_fail@plt+0x1014>
   11268:	str	r4, [sp]
   1126c:	bl	11048 <getopt_long@plt>
   11270:	cmn	r0, #1
   11274:	bne	112fc <__assert_fail@plt+0x140>
   11278:	ldr	r3, [pc, #3912]	; 121c8 <__assert_fail@plt+0x100c>
   1127c:	mov	r2, #3
   11280:	ldrd	r0, [r3, #8]
   11284:	str	r2, [r3, #20]
   11288:	cmp	r1, #0
   1128c:	cmpeq	r0, #512	; 0x200
   11290:	bls	114e4 <__assert_fail@plt+0x328>
   11294:	mov	r2, #5
   11298:	ldr	r1, [pc, #3892]	; 121d4 <__assert_fail@plt+0x1018>
   1129c:	mov	r0, r4
   112a0:	bl	10f7c <dcgettext@plt>
   112a4:	mov	r5, r0
   112a8:	mov	r0, r9
   112ac:	bl	19d54 <__assert_fail@plt+0x8b98>
   112b0:	mov	r3, r0
   112b4:	mov	r2, r5
   112b8:	mov	r1, r4
   112bc:	mov	r0, r4
   112c0:	bl	11000 <error@plt>
   112c4:	mov	r2, #5
   112c8:	ldr	r1, [pc, #3848]	; 121d8 <__assert_fail@plt+0x101c>
   112cc:	mov	r0, r4
   112d0:	bl	10f7c <dcgettext@plt>
   112d4:	mov	r5, r0
   112d8:	ldr	r0, [pc, #3836]	; 121dc <__assert_fail@plt+0x1020>
   112dc:	bl	19d54 <__assert_fail@plt+0x8b98>
   112e0:	mov	r3, #512	; 0x200
   112e4:	mov	r2, r5
   112e8:	mov	r1, r4
   112ec:	str	r3, [sp]
   112f0:	mov	r3, r0
   112f4:	mov	r0, #1
   112f8:	bl	11000 <error@plt>
   112fc:	cmp	r0, #119	; 0x77
   11300:	beq	1146c <__assert_fail@plt+0x2b0>
   11304:	bgt	11350 <__assert_fail@plt+0x194>
   11308:	cmp	r0, #98	; 0x62
   1130c:	beq	114d4 <__assert_fail@plt+0x318>
   11310:	bgt	11330 <__assert_fail@plt+0x174>
   11314:	cmn	r0, #3
   11318:	beq	114a0 <__assert_fail@plt+0x2e4>
   1131c:	cmn	r0, #2
   11320:	moveq	r0, r4
   11324:	beq	1132c <__assert_fail@plt+0x170>
   11328:	mov	r0, #1
   1132c:	bl	126b4 <__assert_fail@plt+0x14f8>
   11330:	cmp	r0, #108	; 0x6c
   11334:	beq	113a4 <__assert_fail@plt+0x1e8>
   11338:	cmp	r0, #116	; 0x74
   1133c:	beq	114dc <__assert_fail@plt+0x320>
   11340:	cmp	r0, #99	; 0x63
   11344:	bne	11328 <__assert_fail@plt+0x16c>
   11348:	mov	fp, #1
   1134c:	b	11254 <__assert_fail@plt+0x98>
   11350:	movw	r3, #257	; 0x101
   11354:	cmp	r0, r3
   11358:	beq	11458 <__assert_fail@plt+0x29c>
   1135c:	bgt	1137c <__assert_fail@plt+0x1c0>
   11360:	cmp	r0, #122	; 0x7a
   11364:	beq	11494 <__assert_fail@plt+0x2d8>
   11368:	cmp	r0, #256	; 0x100
   1136c:	bne	11328 <__assert_fail@plt+0x16c>
   11370:	mov	r3, #1
   11374:	strb	r3, [r5, #5]
   11378:	b	11254 <__assert_fail@plt+0x98>
   1137c:	movw	r3, #259	; 0x103
   11380:	cmp	r0, r3
   11384:	mov	r3, #1
   11388:	beq	1148c <__assert_fail@plt+0x2d0>
   1138c:	blt	1147c <__assert_fail@plt+0x2c0>
   11390:	cmp	r0, #260	; 0x104
   11394:	bne	11328 <__assert_fail@plt+0x16c>
   11398:	mov	r6, r3
   1139c:	str	r3, [sp, #72]	; 0x48
   113a0:	b	11254 <__assert_fail@plt+0x98>
   113a4:	ldr	r9, [pc, #3636]	; 121e0 <__assert_fail@plt+0x1024>
   113a8:	mov	r2, #5
   113ac:	mov	r0, r4
   113b0:	ldr	r1, [pc, #3628]	; 121e4 <__assert_fail@plt+0x1028>
   113b4:	ldr	sl, [r9]
   113b8:	bl	10f7c <dcgettext@plt>
   113bc:	ldr	r3, [pc, #3572]	; 121b8 <__assert_fail@plt+0xffc>
   113c0:	mvn	r2, #0
   113c4:	str	r3, [sp, #8]
   113c8:	mvn	r3, #0
   113cc:	str	r0, [sp, #12]
   113d0:	mov	r0, sl
   113d4:	strd	r2, [sp]
   113d8:	mov	r2, #0
   113dc:	mov	r3, #0
   113e0:	str	r4, [sp, #16]
   113e4:	bl	1a660 <__assert_fail@plt+0x94a4>
   113e8:	and	r3, r0, #7
   113ec:	strd	r0, [r5, #8]
   113f0:	ldr	r9, [r9]
   113f4:	str	r3, [sp, #24]
   113f8:	str	r4, [sp, #28]
   113fc:	ldrd	r2, [sp, #24]
   11400:	orrs	r3, r2, r3
   11404:	beq	11254 <__assert_fail@plt+0x98>
   11408:	mov	r2, #5
   1140c:	ldr	r1, [pc, #3520]	; 121d4 <__assert_fail@plt+0x1018>
   11410:	mov	r0, r4
   11414:	bl	10f7c <dcgettext@plt>
   11418:	mov	r5, r0
   1141c:	mov	r0, r9
   11420:	bl	19d54 <__assert_fail@plt+0x8b98>
   11424:	mov	r3, r0
   11428:	mov	r2, r5
   1142c:	mov	r1, r4
   11430:	mov	r0, r4
   11434:	bl	11000 <error@plt>
   11438:	ldr	r1, [pc, #3496]	; 121e8 <__assert_fail@plt+0x102c>
   1143c:	mov	r2, #5
   11440:	mov	r0, #0
   11444:	bl	10f7c <dcgettext@plt>
   11448:	mov	r2, r0
   1144c:	mov	r1, r4
   11450:	mov	r0, #1
   11454:	bl	11000 <error@plt>
   11458:	mov	r3, #1
   1145c:	strb	r3, [r5, #16]
   11460:	strb	r4, [r5, #17]
   11464:	strb	r4, [r5, #18]
   11468:	b	11254 <__assert_fail@plt+0x98>
   1146c:	mov	r3, #1
   11470:	strb	r4, [r5, #16]
   11474:	strb	r3, [r5, #17]
   11478:	b	11464 <__assert_fail@plt+0x2a8>
   1147c:	strb	r4, [r5, #16]
   11480:	strb	r4, [r5, #17]
   11484:	strb	r3, [r5, #18]
   11488:	b	11254 <__assert_fail@plt+0x98>
   1148c:	strb	r3, [r5, #19]
   11490:	b	11254 <__assert_fail@plt+0x98>
   11494:	ldr	r3, [pc, #3408]	; 121ec <__assert_fail@plt+0x1030>
   11498:	strb	r4, [r3]
   1149c:	b	11254 <__assert_fail@plt+0x98>
   114a0:	ldr	r3, [pc, #3400]	; 121f0 <__assert_fail@plt+0x1034>
   114a4:	ldr	r0, [sp, #32]
   114a8:	ldr	r2, [pc, #3396]	; 121f4 <__assert_fail@plt+0x1038>
   114ac:	stmib	sp, {r3, r4}
   114b0:	ldr	r3, [pc, #3392]	; 121f8 <__assert_fail@plt+0x103c>
   114b4:	ldr	r1, [pc, #3392]	; 121fc <__assert_fail@plt+0x1040>
   114b8:	str	r3, [sp]
   114bc:	ldr	r3, [pc, #3388]	; 12200 <__assert_fail@plt+0x1044>
   114c0:	ldr	r0, [r0]
   114c4:	ldr	r3, [r3]
   114c8:	bl	1a1ac <__assert_fail@plt+0x8ff0>
   114cc:	mov	r0, r4
   114d0:	bl	11060 <exit@plt>
   114d4:	mov	r6, #1
   114d8:	b	11254 <__assert_fail@plt+0x98>
   114dc:	mov	r6, r4
   114e0:	b	11254 <__assert_fail@plt+0x98>
   114e4:	orrs	r2, r0, r1
   114e8:	ldr	r4, [sp, #72]	; 0x48
   114ec:	moveq	r1, #0
   114f0:	moveq	r0, #512	; 0x200
   114f4:	strdeq	r0, [r3, #8]
   114f8:	cmp	r6, #0
   114fc:	ldr	r2, [r3, #8]
   11500:	movne	r4, #0
   11504:	cmp	r4, #0
   11508:	ldr	r1, [r3, #12]
   1150c:	lsr	r2, r2, #2
   11510:	orr	r2, r2, r1, lsl #30
   11514:	ldrne	r1, [pc, #3304]	; 12204 <__assert_fail@plt+0x1048>
   11518:	str	r2, [r3]
   1151c:	movne	r2, #5
   11520:	bne	115f4 <__assert_fail@plt+0x438>
   11524:	ldr	r2, [pc, #3264]	; 121ec <__assert_fail@plt+0x1030>
   11528:	ldrb	r2, [r2]
   1152c:	cmp	r2, #10
   11530:	beq	115c4 <__assert_fail@plt+0x408>
   11534:	cmp	fp, #0
   11538:	movne	r2, #5
   1153c:	ldrne	r1, [pc, #3268]	; 12208 <__assert_fail@plt+0x104c>
   11540:	bne	115f4 <__assert_fail@plt+0x438>
   11544:	ldrb	r4, [r3, #5]
   11548:	eor	r4, r4, #1
   1154c:	orrs	r4, fp, r4
   11550:	moveq	r2, #5
   11554:	ldreq	r1, [pc, #3248]	; 1220c <__assert_fail@plt+0x1050>
   11558:	beq	115f4 <__assert_fail@plt+0x438>
   1155c:	ldrb	r4, [r3, #16]
   11560:	eor	r4, r4, #1
   11564:	orrs	r4, fp, r4
   11568:	moveq	r2, #5
   1156c:	ldreq	r1, [pc, #3228]	; 12210 <__assert_fail@plt+0x1054>
   11570:	beq	115f4 <__assert_fail@plt+0x438>
   11574:	ldrb	r4, [r3, #17]
   11578:	eor	r4, r4, #1
   1157c:	orrs	r4, fp, r4
   11580:	moveq	r2, #5
   11584:	ldreq	r1, [pc, #3208]	; 12214 <__assert_fail@plt+0x1058>
   11588:	beq	115f4 <__assert_fail@plt+0x438>
   1158c:	ldrb	r0, [r3, #18]
   11590:	eor	r0, r0, #1
   11594:	orrs	r2, fp, r0
   11598:	ldreq	r1, [pc, #3192]	; 12218 <__assert_fail@plt+0x105c>
   1159c:	str	r2, [sp, #56]	; 0x38
   115a0:	moveq	r2, #5
   115a4:	beq	115f4 <__assert_fail@plt+0x438>
   115a8:	ldrb	r1, [r3, #19]
   115ac:	eor	r2, fp, #1
   115b0:	tst	r1, r2
   115b4:	beq	11610 <__assert_fail@plt+0x454>
   115b8:	mov	r2, #5
   115bc:	ldr	r1, [pc, #3160]	; 1221c <__assert_fail@plt+0x1060>
   115c0:	b	115f4 <__assert_fail@plt+0x438>
   115c4:	ldr	r2, [sp, #72]	; 0x48
   115c8:	ands	r5, fp, r2
   115cc:	movne	r2, #5
   115d0:	ldrne	r1, [pc, #3144]	; 12220 <__assert_fail@plt+0x1064>
   115d4:	bne	115f4 <__assert_fail@plt+0x438>
   115d8:	cmp	r6, #0
   115dc:	movlt	r2, #0
   115e0:	andge	r2, fp, #1
   115e4:	cmp	r2, #0
   115e8:	movne	r2, #5
   115ec:	ldrne	r1, [pc, #3120]	; 12224 <__assert_fail@plt+0x1068>
   115f0:	beq	11544 <__assert_fail@plt+0x388>
   115f4:	mov	r0, #0
   115f8:	bl	10f7c <dcgettext@plt>
   115fc:	mov	r1, #0
   11600:	mov	r2, r0
   11604:	mov	r0, r1
   11608:	bl	11000 <error@plt>
   1160c:	b	11328 <__assert_fail@plt+0x16c>
   11610:	add	r3, r7, r8, lsl #2
   11614:	cmn	r6, #1
   11618:	moveq	r6, #0
   1161c:	str	r3, [sp, #76]	; 0x4c
   11620:	ldr	r3, [pc, #3072]	; 12228 <__assert_fail@plt+0x106c>
   11624:	ldr	r3, [r3]
   11628:	cmp	r3, r8
   1162c:	bne	11644 <__assert_fail@plt+0x488>
   11630:	ldr	r2, [pc, #3060]	; 1222c <__assert_fail@plt+0x1070>
   11634:	str	r2, [r7, r8, lsl #2]
   11638:	ldr	r2, [sp, #76]	; 0x4c
   1163c:	add	r2, r2, #4
   11640:	str	r2, [sp, #76]	; 0x4c
   11644:	cmp	r6, #0
   11648:	add	r3, r7, r3, lsl #2
   1164c:	movne	r2, #42	; 0x2a
   11650:	moveq	r2, #32
   11654:	str	r3, [sp, #84]	; 0x54
   11658:	str	r2, [sp, #108]	; 0x6c
   1165c:	ldr	r3, [sp, #76]	; 0x4c
   11660:	ldr	r2, [sp, #84]	; 0x54
   11664:	cmp	r3, r2
   11668:	bhi	116a4 <__assert_fail@plt+0x4e8>
   1166c:	ldr	r3, [pc, #2900]	; 121c8 <__assert_fail@plt+0x100c>
   11670:	ldrb	r3, [r3, #4]
   11674:	cmp	r3, #0
   11678:	beq	122f4 <__assert_fail@plt+0x1138>
   1167c:	ldr	r3, [pc, #2988]	; 12230 <__assert_fail@plt+0x1074>
   11680:	ldr	r0, [r3]
   11684:	bl	184e0 <__assert_fail@plt+0x7324>
   11688:	cmn	r0, #1
   1168c:	bne	122f4 <__assert_fail@plt+0x1138>
   11690:	bl	11090 <__errno_location@plt>
   11694:	mov	r2, #5
   11698:	ldr	r1, [pc, #2964]	; 12234 <__assert_fail@plt+0x1078>
   1169c:	ldr	r4, [r0]
   116a0:	b	11440 <__assert_fail@plt+0x284>
   116a4:	ldr	r3, [sp, #84]	; 0x54
   116a8:	cmp	fp, #0
   116ac:	ldr	r6, [r3], #4
   116b0:	str	r3, [sp, #84]	; 0x54
   116b4:	beq	120c8 <__assert_fail@plt+0xf0c>
   116b8:	ldr	r1, [pc, #2924]	; 1222c <__assert_fail@plt+0x1070>
   116bc:	mov	r0, r6
   116c0:	bl	10f04 <strcmp@plt>
   116c4:	subs	r3, r0, #0
   116c8:	str	r3, [sp, #104]	; 0x68
   116cc:	bne	1176c <__assert_fail@plt+0x5b0>
   116d0:	ldr	r3, [pc, #2800]	; 121c8 <__assert_fail@plt+0x100c>
   116d4:	mov	r2, #1
   116d8:	ldr	r1, [pc, #2900]	; 12234 <__assert_fail@plt+0x1078>
   116dc:	strb	r2, [r3, #4]
   116e0:	mov	r2, #5
   116e4:	bl	10f7c <dcgettext@plt>
   116e8:	ldr	r3, [pc, #2880]	; 12230 <__assert_fail@plt+0x1074>
   116ec:	mov	r6, r0
   116f0:	ldr	r9, [r3]
   116f4:	mov	r3, #0
   116f8:	mov	r2, #1
   116fc:	str	r3, [sp, #52]	; 0x34
   11700:	str	r3, [sp, #60]	; 0x3c
   11704:	str	r3, [sp, #124]	; 0x7c
   11708:	str	r3, [sp, #128]	; 0x80
   1170c:	mov	r3, #0
   11710:	strd	r2, [sp, #64]	; 0x40
   11714:	mov	r2, #0
   11718:	mov	r3, #0
   1171c:	strd	r2, [sp, #24]
   11720:	strd	r2, [sp, #32]
   11724:	strd	r2, [sp, #40]	; 0x28
   11728:	ldrd	r2, [sp, #64]	; 0x40
   1172c:	orrs	r3, r2, r3
   11730:	bne	117bc <__assert_fail@plt+0x600>
   11734:	mov	r2, #5
   11738:	ldr	r1, [pc, #2808]	; 12238 <__assert_fail@plt+0x107c>
   1173c:	mov	r0, #0
   11740:	bl	10f7c <dcgettext@plt>
   11744:	mov	r4, r0
   11748:	mov	r2, r6
   1174c:	mov	r1, #3
   11750:	mov	r0, #0
   11754:	bl	19c14 <__assert_fail@plt+0x8a58>
   11758:	mov	r3, r0
   1175c:	mov	r2, r4
   11760:	mov	r1, #0
   11764:	mov	r0, #1
   11768:	bl	11000 <error@plt>
   1176c:	ldr	r1, [pc, #2760]	; 1223c <__assert_fail@plt+0x1080>
   11770:	mov	r0, r6
   11774:	bl	185d8 <__assert_fail@plt+0x741c>
   11778:	subs	r9, r0, #0
   1177c:	bne	116f4 <__assert_fail@plt+0x538>
   11780:	bl	11090 <__errno_location@plt>
   11784:	ldr	r4, [r0]
   11788:	mov	r2, r6
   1178c:	mov	r1, #3
   11790:	mov	r0, r9
   11794:	bl	19c14 <__assert_fail@plt+0x8a58>
   11798:	mov	r3, r0
   1179c:	ldr	r2, [pc, #2716]	; 12240 <__assert_fail@plt+0x1084>
   117a0:	mov	r0, r9
   117a4:	mov	r1, r4
   117a8:	bl	11000 <error@plt>
   117ac:	ldr	r3, [sp, #56]	; 0x38
   117b0:	and	r3, r3, r9
   117b4:	str	r3, [sp, #56]	; 0x38
   117b8:	b	1165c <__assert_fail@plt+0x4a0>
   117bc:	mov	r2, r9
   117c0:	add	r1, sp, #128	; 0x80
   117c4:	add	r0, sp, #124	; 0x7c
   117c8:	bl	1115c <getline@plt>
   117cc:	subs	r4, r0, #0
   117d0:	ble	11858 <__assert_fail@plt+0x69c>
   117d4:	ldr	r3, [sp, #124]	; 0x7c
   117d8:	ldrb	r2, [r3]
   117dc:	cmp	r2, #35	; 0x23
   117e0:	beq	11820 <__assert_fail@plt+0x664>
   117e4:	add	r2, r3, r4
   117e8:	ldrb	r0, [r2, #-1]
   117ec:	cmp	r0, #10
   117f0:	subeq	r4, r4, #1
   117f4:	cmp	r4, #0
   117f8:	movle	r2, r4
   117fc:	subgt	r2, r4, #1
   11800:	ldrb	r0, [r3, r2]
   11804:	cmp	r0, #13
   11808:	subeq	r4, r4, #1
   1180c:	cmp	r4, #0
   11810:	movne	sl, #0
   11814:	strbne	sl, [r3, r4]
   11818:	ldrne	r8, [sp, #124]	; 0x7c
   1181c:	bne	118e4 <__assert_fail@plt+0x728>
   11820:	mov	r0, r9
   11824:	bl	1118c <feof_unlocked@plt>
   11828:	cmp	r0, #0
   1182c:	bne	11858 <__assert_fail@plt+0x69c>
   11830:	mov	r0, r9
   11834:	bl	10fe8 <ferror_unlocked@plt>
   11838:	ldr	r3, [sp, #64]	; 0x40
   1183c:	adds	r3, r3, #1
   11840:	str	r3, [sp, #64]	; 0x40
   11844:	ldr	r3, [sp, #68]	; 0x44
   11848:	adc	r3, r3, #0
   1184c:	cmp	r0, #0
   11850:	str	r3, [sp, #68]	; 0x44
   11854:	beq	11728 <__assert_fail@plt+0x56c>
   11858:	ldr	r0, [sp, #124]	; 0x7c
   1185c:	bl	1866c <__assert_fail@plt+0x74b0>
   11860:	mov	r0, r9
   11864:	bl	10fe8 <ferror_unlocked@plt>
   11868:	ldr	r3, [sp, #104]	; 0x68
   1186c:	mov	r5, r0
   11870:	clz	r0, r0
   11874:	lsr	r0, r0, #5
   11878:	rsb	r4, r0, #0
   1187c:	mov	r0, r9
   11880:	cmp	r3, #0
   11884:	bne	11e54 <__assert_fail@plt+0xc98>
   11888:	bl	11138 <clearerr_unlocked@plt>
   1188c:	cmp	r4, #0
   11890:	blt	11e74 <__assert_fail@plt+0xcb8>
   11894:	ldrne	r5, [pc, #2468]	; 12240 <__assert_fail@plt+0x1084>
   11898:	bne	118b4 <__assert_fail@plt+0x6f8>
   1189c:	mov	r2, #5
   118a0:	mov	r0, #0
   118a4:	ldr	r1, [pc, #2456]	; 12244 <__assert_fail@plt+0x1088>
   118a8:	mov	r4, #0
   118ac:	bl	10f7c <dcgettext@plt>
   118b0:	mov	r5, r0
   118b4:	mov	r2, r6
   118b8:	mov	r1, #3
   118bc:	mov	r0, #0
   118c0:	mov	r9, #0
   118c4:	bl	19c14 <__assert_fail@plt+0x8a58>
   118c8:	mov	r3, r0
   118cc:	mov	r2, r5
   118d0:	mov	r1, r4
   118d4:	mov	r0, #0
   118d8:	bl	11000 <error@plt>
   118dc:	b	117ac <__assert_fail@plt+0x5f0>
   118e0:	add	sl, sl, #1
   118e4:	ldrb	r3, [r8, sl]
   118e8:	cmp	r3, #9
   118ec:	cmpne	r3, #32
   118f0:	moveq	r5, #1
   118f4:	movne	r5, #0
   118f8:	beq	118e0 <__assert_fail@plt+0x724>
   118fc:	cmp	r3, #92	; 0x5c
   11900:	mov	r2, #7
   11904:	ldr	r1, [pc, #2256]	; 121dc <__assert_fail@plt+0x1020>
   11908:	addeq	sl, sl, #1
   1190c:	add	r7, r8, sl
   11910:	streq	fp, [sp, #80]	; 0x50
   11914:	mov	r0, r7
   11918:	strne	r5, [sp, #80]	; 0x50
   1191c:	bl	11174 <strncmp@plt>
   11920:	cmp	r0, #0
   11924:	bne	11c0c <__assert_fail@plt+0xa50>
   11928:	add	r5, sl, #7
   1192c:	ldr	r1, [pc, #2216]	; 121dc <__assert_fail@plt+0x1020>
   11930:	add	r2, r8, r5
   11934:	ldrb	r3, [r8, r5]
   11938:	strb	r0, [r8, r5]
   1193c:	mov	r0, r7
   11940:	str	r3, [sp, #112]	; 0x70
   11944:	str	r2, [sp, #116]	; 0x74
   11948:	bl	10f04 <strcmp@plt>
   1194c:	cmp	r0, #0
   11950:	bne	11b90 <__assert_fail@plt+0x9d4>
   11954:	ldr	r3, [sp, #112]	; 0x70
   11958:	mov	r1, #0
   1195c:	ldr	r2, [sp, #116]	; 0x74
   11960:	ldr	r7, [pc, #2144]	; 121c8 <__assert_fail@plt+0x100c>
   11964:	cmp	r3, #40	; 0x28
   11968:	moveq	r0, r3
   1196c:	addne	r5, sl, #8
   11970:	cmp	r3, #45	; 0x2d
   11974:	strb	r0, [r2]
   11978:	mov	r0, #512	; 0x200
   1197c:	strd	r0, [r7, #8]
   11980:	bne	119e4 <__assert_fail@plt+0x828>
   11984:	mov	r2, #0
   11988:	add	r3, sp, #136	; 0x88
   1198c:	add	r1, sp, #132	; 0x84
   11990:	add	r0, r8, r5
   11994:	str	r2, [sp]
   11998:	bl	1a6fc <__assert_fail@plt+0x9540>
   1199c:	subs	ip, r0, #0
   119a0:	bne	11b90 <__assert_fail@plt+0x9d4>
   119a4:	ldrd	r0, [sp, #136]	; 0x88
   119a8:	orrs	r3, r0, r1
   119ac:	beq	11b90 <__assert_fail@plt+0x9d4>
   119b0:	ldrd	r2, [r7, #8]
   119b4:	cmp	r1, r3
   119b8:	cmpeq	r0, r2
   119bc:	bhi	11b90 <__assert_fail@plt+0x9d4>
   119c0:	and	r3, r0, #7
   119c4:	str	r3, [sp, #88]	; 0x58
   119c8:	str	ip, [sp, #92]	; 0x5c
   119cc:	ldrd	r2, [sp, #88]	; 0x58
   119d0:	orrs	r3, r2, r3
   119d4:	bne	11b90 <__assert_fail@plt+0x9d4>
   119d8:	ldr	r5, [sp, #132]	; 0x84
   119dc:	strd	r0, [r7, #8]
   119e0:	sub	r5, r5, r8
   119e4:	ldr	r2, [pc, #2012]	; 121c8 <__assert_fail@plt+0x100c>
   119e8:	ldr	r3, [r2, #8]
   119ec:	ldr	r1, [r2, #12]
   119f0:	lsr	r3, r3, #2
   119f4:	orr	r3, r3, r1, lsl #30
   119f8:	str	r3, [r2]
   119fc:	ldrb	r3, [r8, r5]
   11a00:	cmp	r3, #32
   11a04:	addeq	r5, r5, #1
   11a08:	ldrb	r3, [r8, r5]
   11a0c:	cmp	r3, #40	; 0x28
   11a10:	bne	11b90 <__assert_fail@plt+0x9d4>
   11a14:	add	r5, r5, #1
   11a18:	subs	r4, r4, r5
   11a1c:	beq	11b90 <__assert_fail@plt+0x9d4>
   11a20:	add	r8, r8, r5
   11a24:	sub	r4, r4, #1
   11a28:	cmp	r4, #0
   11a2c:	beq	11a3c <__assert_fail@plt+0x880>
   11a30:	ldrb	r3, [r8, r4]
   11a34:	cmp	r3, #41	; 0x29
   11a38:	bne	11a24 <__assert_fail@plt+0x868>
   11a3c:	ldrb	r3, [r8, r4]
   11a40:	add	r5, r8, r4
   11a44:	cmp	r3, #41	; 0x29
   11a48:	bne	11b90 <__assert_fail@plt+0x9d4>
   11a4c:	ldr	r3, [sp, #80]	; 0x50
   11a50:	cmp	r3, #0
   11a54:	bne	11b7c <__assert_fail@plt+0x9c0>
   11a58:	mov	r3, #0
   11a5c:	add	r4, r4, #1
   11a60:	strb	r3, [r5]
   11a64:	ldrb	r3, [r8, r4]
   11a68:	cmp	r3, #9
   11a6c:	cmpne	r3, #32
   11a70:	beq	11c04 <__assert_fail@plt+0xa48>
   11a74:	cmp	r3, #61	; 0x3d
   11a78:	bne	11b90 <__assert_fail@plt+0x9d4>
   11a7c:	add	r4, r4, #1
   11a80:	add	r4, r8, r4
   11a84:	ldrb	r3, [r4]
   11a88:	mov	r7, r4
   11a8c:	add	r4, r4, #1
   11a90:	cmp	r3, #9
   11a94:	cmpne	r3, #32
   11a98:	beq	11a84 <__assert_fail@plt+0x8c8>
   11a9c:	mov	r0, r7
   11aa0:	bl	12490 <__assert_fail@plt+0x12d4>
   11aa4:	cmp	r0, #0
   11aa8:	beq	11b90 <__assert_fail@plt+0x9d4>
   11aac:	ldr	r3, [sp, #104]	; 0x68
   11ab0:	cmp	r3, #0
   11ab4:	bne	11acc <__assert_fail@plt+0x910>
   11ab8:	ldr	r1, [pc, #1900]	; 1222c <__assert_fail@plt+0x1070>
   11abc:	mov	r0, r8
   11ac0:	bl	10f04 <strcmp@plt>
   11ac4:	cmp	r0, #0
   11ac8:	beq	11b90 <__assert_fail@plt+0x9d4>
   11acc:	ldr	r3, [pc, #1780]	; 121c8 <__assert_fail@plt+0x100c>
   11ad0:	ldrb	r3, [r3, #16]
   11ad4:	cmp	r3, #0
   11ad8:	movne	sl, #0
   11adc:	bne	11af4 <__assert_fail@plt+0x938>
   11ae0:	mov	r1, #10
   11ae4:	mov	r0, r8
   11ae8:	bl	11084 <strchr@plt>
   11aec:	adds	sl, r0, #0
   11af0:	movne	sl, #1
   11af4:	add	r2, sp, #136	; 0x88
   11af8:	add	r1, sp, #216	; 0xd8
   11afc:	str	sl, [sp, #60]	; 0x3c
   11b00:	mov	r0, r8
   11b04:	bl	12568 <__assert_fail@plt+0x13ac>
   11b08:	subs	r2, r0, #0
   11b0c:	ldr	r3, [pc, #1716]	; 121c8 <__assert_fail@plt+0x100c>
   11b10:	bne	11d38 <__assert_fail@plt+0xb7c>
   11b14:	ldr	r2, [sp, #32]
   11b18:	ldrb	r3, [r3, #16]
   11b1c:	adds	r2, r2, #1
   11b20:	str	r2, [sp, #32]
   11b24:	ldr	r2, [sp, #36]	; 0x24
   11b28:	adc	r2, r2, #0
   11b2c:	cmp	r3, #0
   11b30:	str	r2, [sp, #36]	; 0x24
   11b34:	bne	11b74 <__assert_fail@plt+0x9b8>
   11b38:	cmp	sl, #0
   11b3c:	beq	11b48 <__assert_fail@plt+0x98c>
   11b40:	mov	r0, #92	; 0x5c
   11b44:	bl	111b0 <putchar_unlocked@plt>
   11b48:	mov	r0, r8
   11b4c:	ldr	r1, [sp, #60]	; 0x3c
   11b50:	bl	124e0 <__assert_fail@plt+0x1324>
   11b54:	ldr	r1, [pc, #1772]	; 12248 <__assert_fail@plt+0x108c>
   11b58:	mov	r2, #5
   11b5c:	mov	r0, #0
   11b60:	bl	10f7c <dcgettext@plt>
   11b64:	mov	r2, r0
   11b68:	ldr	r1, [pc, #1756]	; 1224c <__assert_fail@plt+0x1090>
   11b6c:	mov	r0, #1
   11b70:	bl	110c0 <__printf_chk@plt>
   11b74:	str	fp, [sp, #60]	; 0x3c
   11b78:	b	11820 <__assert_fail@plt+0x664>
   11b7c:	mov	r1, r4
   11b80:	mov	r0, r8
   11b84:	bl	123f8 <__assert_fail@plt+0x123c>
   11b88:	cmp	r0, #0
   11b8c:	bne	11a58 <__assert_fail@plt+0x89c>
   11b90:	ldr	r3, [sp, #24]
   11b94:	adds	r3, r3, #1
   11b98:	str	r3, [sp, #24]
   11b9c:	ldr	r3, [sp, #28]
   11ba0:	adc	r3, r3, #0
   11ba4:	str	r3, [sp, #28]
   11ba8:	ldr	r3, [pc, #1560]	; 121c8 <__assert_fail@plt+0x100c>
   11bac:	ldrb	r3, [r3, #17]
   11bb0:	cmp	r3, #0
   11bb4:	beq	11820 <__assert_fail@plt+0x664>
   11bb8:	mov	r2, #5
   11bbc:	ldr	r1, [pc, #1676]	; 12250 <__assert_fail@plt+0x1094>
   11bc0:	mov	r0, #0
   11bc4:	bl	10f7c <dcgettext@plt>
   11bc8:	mov	r4, r0
   11bcc:	mov	r2, r6
   11bd0:	mov	r1, #3
   11bd4:	mov	r0, #0
   11bd8:	bl	19c14 <__assert_fail@plt+0x8a58>
   11bdc:	ldr	r3, [pc, #1528]	; 121dc <__assert_fail@plt+0x1020>
   11be0:	mov	r1, #0
   11be4:	str	r3, [sp, #8]
   11be8:	ldrd	r2, [sp, #64]	; 0x40
   11bec:	strd	r2, [sp]
   11bf0:	mov	r3, r0
   11bf4:	mov	r2, r4
   11bf8:	mov	r0, r1
   11bfc:	bl	11000 <error@plt>
   11c00:	b	11820 <__assert_fail@plt+0x664>
   11c04:	add	r4, r4, #1
   11c08:	b	11a64 <__assert_fail@plt+0x8a8>
   11c0c:	ldr	r1, [pc, #1460]	; 121c8 <__assert_fail@plt+0x100c>
   11c10:	sub	r2, r4, sl
   11c14:	ldrb	r0, [r8, sl]
   11c18:	ldr	r3, [r1, #20]
   11c1c:	cmp	r0, #92	; 0x5c
   11c20:	addeq	r3, r3, #1
   11c24:	cmp	r2, r3
   11c28:	bcc	11b90 <__assert_fail@plt+0x9d4>
   11c2c:	mov	r3, #0
   11c30:	str	r3, [r1]
   11c34:	bl	11054 <__ctype_b_loc@plt>
   11c38:	ldr	r0, [r0]
   11c3c:	mov	r2, r7
   11c40:	sub	r1, r2, r7
   11c44:	ldrb	r3, [r2], #1
   11c48:	lsl	r3, r3, #1
   11c4c:	ldrh	r3, [r0, r3]
   11c50:	tst	r3, #4096	; 0x1000
   11c54:	bne	11d20 <__assert_fail@plt+0xb64>
   11c58:	ldr	r2, [pc, #1384]	; 121c8 <__assert_fail@plt+0x100c>
   11c5c:	cmp	r5, #0
   11c60:	strne	r1, [r2]
   11c64:	ldr	r3, [r2]
   11c68:	sub	r1, r3, #2
   11c6c:	cmp	r1, #126	; 0x7e
   11c70:	bhi	11b90 <__assert_fail@plt+0x9d4>
   11c74:	ands	r1, r3, #1
   11c78:	bne	11b90 <__assert_fail@plt+0x9d4>
   11c7c:	add	sl, sl, r3
   11c80:	lsl	r0, r3, #2
   11c84:	ldrb	r3, [r8, sl]
   11c88:	strd	r0, [r2, #8]
   11c8c:	cmp	r3, #32
   11c90:	cmpne	r3, #9
   11c94:	movne	r3, #1
   11c98:	moveq	r3, #0
   11c9c:	bne	11b90 <__assert_fail@plt+0x9d4>
   11ca0:	mov	r0, r7
   11ca4:	strb	r3, [r8, sl]
   11ca8:	bl	12490 <__assert_fail@plt+0x12d4>
   11cac:	cmp	r0, #0
   11cb0:	beq	11b90 <__assert_fail@plt+0x9d4>
   11cb4:	ldr	r2, [pc, #1328]	; 121ec <__assert_fail@plt+0x1030>
   11cb8:	add	r1, sl, #1
   11cbc:	sub	r3, r4, r1
   11cc0:	cmp	r3, #1
   11cc4:	ldr	r0, [r2, #4]
   11cc8:	beq	11ce4 <__assert_fail@plt+0xb28>
   11ccc:	ldrb	r3, [r8, r1]
   11cd0:	cmp	r3, #32
   11cd4:	cmpne	r3, #42	; 0x2a
   11cd8:	movne	r3, #1
   11cdc:	moveq	r3, #0
   11ce0:	beq	11d28 <__assert_fail@plt+0xb6c>
   11ce4:	cmp	r0, #0
   11ce8:	beq	11b90 <__assert_fail@plt+0x9d4>
   11cec:	ldr	r3, [pc, #1272]	; 121ec <__assert_fail@plt+0x1030>
   11cf0:	mov	r2, #1
   11cf4:	str	r2, [r3, #4]
   11cf8:	ldr	r3, [sp, #80]	; 0x50
   11cfc:	add	r8, r8, r1
   11d00:	cmp	r3, #0
   11d04:	beq	11aac <__assert_fail@plt+0x8f0>
   11d08:	sub	r1, r4, r1
   11d0c:	mov	r0, r8
   11d10:	bl	123f8 <__assert_fail@plt+0x123c>
   11d14:	adds	r0, r0, #0
   11d18:	movne	r0, #1
   11d1c:	b	11aa4 <__assert_fail@plt+0x8e8>
   11d20:	mov	r5, fp
   11d24:	b	11c40 <__assert_fail@plt+0xa84>
   11d28:	cmp	r0, #1
   11d2c:	addne	r1, sl, #2
   11d30:	strne	r3, [r2, #4]
   11d34:	b	11cf8 <__assert_fail@plt+0xb3c>
   11d38:	ldrb	r1, [r3, #5]
   11d3c:	cmp	r1, #0
   11d40:	beq	11d50 <__assert_fail@plt+0xb94>
   11d44:	ldrb	r1, [sp, #136]	; 0x88
   11d48:	cmp	r1, #0
   11d4c:	bne	11b74 <__assert_fail@plt+0x9b8>
   11d50:	ldr	r5, [r3]
   11d54:	add	r7, r7, #1
   11d58:	mov	r4, #0
   11d5c:	lsr	r5, r5, #1
   11d60:	cmp	r5, r4
   11d64:	bne	11dc0 <__assert_fail@plt+0xc04>
   11d68:	str	r2, [sp, #52]	; 0x34
   11d6c:	ldr	r3, [pc, #1108]	; 121c8 <__assert_fail@plt+0x100c>
   11d70:	ldrb	r2, [r3, #16]
   11d74:	cmp	r2, #0
   11d78:	bne	11b74 <__assert_fail@plt+0x9b8>
   11d7c:	cmp	r5, r4
   11d80:	bne	11d90 <__assert_fail@plt+0xbd4>
   11d84:	ldrb	r3, [r3, #18]
   11d88:	cmp	r3, #0
   11d8c:	bne	11b74 <__assert_fail@plt+0x9b8>
   11d90:	cmp	sl, #0
   11d94:	beq	11da0 <__assert_fail@plt+0xbe4>
   11d98:	mov	r0, #92	; 0x5c
   11d9c:	bl	111b0 <putchar_unlocked@plt>
   11da0:	mov	r0, r8
   11da4:	ldr	r1, [sp, #60]	; 0x3c
   11da8:	bl	124e0 <__assert_fail@plt+0x1324>
   11dac:	cmp	r5, r4
   11db0:	beq	11e38 <__assert_fail@plt+0xc7c>
   11db4:	mov	r2, #5
   11db8:	ldr	r1, [pc, #1172]	; 12254 <__assert_fail@plt+0x1098>
   11dbc:	b	11b5c <__assert_fail@plt+0x9a0>
   11dc0:	str	r2, [sp, #80]	; 0x50
   11dc4:	bl	11030 <__ctype_tolower_loc@plt>
   11dc8:	add	r3, sp, #216	; 0xd8
   11dcc:	ldr	r2, [pc, #1156]	; 12258 <__assert_fail@plt+0x109c>
   11dd0:	ldrb	r3, [r3, r4]
   11dd4:	ldrb	lr, [r7, #-1]
   11dd8:	ldr	r1, [r0]
   11ddc:	mov	r0, r7
   11de0:	add	ip, r2, r3, lsr #4
   11de4:	ldrb	ip, [ip, #280]	; 0x118
   11de8:	ldr	lr, [r1, lr, lsl #2]
   11dec:	cmp	lr, ip
   11df0:	bne	11e1c <__assert_fail@plt+0xc60>
   11df4:	ldrb	r0, [r0]
   11df8:	and	r3, r3, #15
   11dfc:	add	r7, r7, #2
   11e00:	add	r3, r2, r3
   11e04:	ldrb	r3, [r3, #280]	; 0x118
   11e08:	ldr	r1, [r1, r0, lsl #2]
   11e0c:	cmp	r1, r3
   11e10:	addeq	r4, r4, #1
   11e14:	ldreq	r2, [sp, #80]	; 0x50
   11e18:	beq	11d60 <__assert_fail@plt+0xba4>
   11e1c:	ldr	r3, [sp, #40]	; 0x28
   11e20:	adds	r3, r3, #1
   11e24:	str	r3, [sp, #40]	; 0x28
   11e28:	ldr	r3, [sp, #44]	; 0x2c
   11e2c:	adc	r3, r3, #0
   11e30:	str	r3, [sp, #44]	; 0x2c
   11e34:	b	11d6c <__assert_fail@plt+0xbb0>
   11e38:	ldr	r3, [pc, #904]	; 121c8 <__assert_fail@plt+0x100c>
   11e3c:	ldrb	r0, [r3, #18]
   11e40:	cmp	r0, #0
   11e44:	bne	11b74 <__assert_fail@plt+0x9b8>
   11e48:	mov	r2, #5
   11e4c:	ldr	r1, [pc, #1032]	; 1225c <__assert_fail@plt+0x10a0>
   11e50:	b	11b60 <__assert_fail@plt+0x9a4>
   11e54:	bl	184e0 <__assert_fail@plt+0x7324>
   11e58:	cmp	r0, #0
   11e5c:	beq	1188c <__assert_fail@plt+0x6d0>
   11e60:	cmp	r5, #0
   11e64:	bne	1189c <__assert_fail@plt+0x6e0>
   11e68:	bl	11090 <__errno_location@plt>
   11e6c:	ldr	r4, [r0]
   11e70:	b	1188c <__assert_fail@plt+0x6d0>
   11e74:	ldr	r3, [sp, #60]	; 0x3c
   11e78:	cmp	r3, #0
   11e7c:	bne	11ebc <__assert_fail@plt+0xd00>
   11e80:	mov	r0, r3
   11e84:	mov	r2, #5
   11e88:	ldr	r1, [pc, #976]	; 12260 <__assert_fail@plt+0x10a4>
   11e8c:	bl	10f7c <dcgettext@plt>
   11e90:	mov	r4, r0
   11e94:	mov	r2, r6
   11e98:	ldr	r0, [sp, #60]	; 0x3c
   11e9c:	mov	r1, #3
   11ea0:	bl	19c14 <__assert_fail@plt+0x8a58>
   11ea4:	ldr	r1, [sp, #60]	; 0x3c
   11ea8:	mov	r3, r0
   11eac:	mov	r2, r4
   11eb0:	mov	r0, r1
   11eb4:	bl	11000 <error@plt>
   11eb8:	b	12058 <__assert_fail@plt+0xe9c>
   11ebc:	ldr	r3, [pc, #772]	; 121c8 <__assert_fail@plt+0x100c>
   11ec0:	ldrb	r3, [r3, #16]
   11ec4:	cmp	r3, #0
   11ec8:	bne	12098 <__assert_fail@plt+0xedc>
   11ecc:	ldrd	r2, [sp, #24]
   11ed0:	orrs	r3, r2, r3
   11ed4:	beq	11f38 <__assert_fail@plt+0xd7c>
   11ed8:	ldrd	r0, [sp, #24]
   11edc:	mov	r3, #0
   11ee0:	mvn	r2, #0
   11ee4:	cmp	r1, r3
   11ee8:	cmpeq	r0, r2
   11eec:	ldrls	r3, [sp, #24]
   11ef0:	bls	11f08 <__assert_fail@plt+0xd4c>
   11ef4:	mov	r3, #0
   11ef8:	ldr	r2, [pc, #868]	; 12264 <__assert_fail@plt+0x10a8>
   11efc:	bl	1af2c <__assert_fail@plt+0x9d70>
   11f00:	add	r3, r2, #999424	; 0xf4000
   11f04:	add	r3, r3, #576	; 0x240
   11f08:	mov	r2, #5
   11f0c:	ldr	r1, [pc, #852]	; 12268 <__assert_fail@plt+0x10ac>
   11f10:	mov	r0, #0
   11f14:	str	r2, [sp]
   11f18:	ldr	r2, [pc, #844]	; 1226c <__assert_fail@plt+0x10b0>
   11f1c:	bl	111a4 <dcngettext@plt>
   11f20:	ldrd	r2, [sp, #24]
   11f24:	mov	r1, #0
   11f28:	strd	r2, [sp]
   11f2c:	mov	r2, r0
   11f30:	mov	r0, r1
   11f34:	bl	11000 <error@plt>
   11f38:	ldrd	r2, [sp, #32]
   11f3c:	orrs	r3, r2, r3
   11f40:	beq	11fa4 <__assert_fail@plt+0xde8>
   11f44:	ldrd	r0, [sp, #32]
   11f48:	mov	r3, #0
   11f4c:	mvn	r2, #0
   11f50:	cmp	r1, r3
   11f54:	cmpeq	r0, r2
   11f58:	ldrls	r3, [sp, #32]
   11f5c:	bls	11f74 <__assert_fail@plt+0xdb8>
   11f60:	mov	r3, #0
   11f64:	ldr	r2, [pc, #760]	; 12264 <__assert_fail@plt+0x10a8>
   11f68:	bl	1af2c <__assert_fail@plt+0x9d70>
   11f6c:	add	r3, r2, #999424	; 0xf4000
   11f70:	add	r3, r3, #576	; 0x240
   11f74:	mov	r2, #5
   11f78:	ldr	r1, [pc, #752]	; 12270 <__assert_fail@plt+0x10b4>
   11f7c:	mov	r0, #0
   11f80:	str	r2, [sp]
   11f84:	ldr	r2, [pc, #744]	; 12274 <__assert_fail@plt+0x10b8>
   11f88:	bl	111a4 <dcngettext@plt>
   11f8c:	ldrd	r2, [sp, #32]
   11f90:	mov	r1, #0
   11f94:	strd	r2, [sp]
   11f98:	mov	r2, r0
   11f9c:	mov	r0, r1
   11fa0:	bl	11000 <error@plt>
   11fa4:	ldrd	r2, [sp, #40]	; 0x28
   11fa8:	orrs	r3, r2, r3
   11fac:	beq	12010 <__assert_fail@plt+0xe54>
   11fb0:	ldrd	r0, [sp, #40]	; 0x28
   11fb4:	mov	r3, #0
   11fb8:	mvn	r2, #0
   11fbc:	cmp	r1, r3
   11fc0:	cmpeq	r0, r2
   11fc4:	ldrls	r3, [sp, #40]	; 0x28
   11fc8:	bls	11fe0 <__assert_fail@plt+0xe24>
   11fcc:	mov	r3, #0
   11fd0:	ldr	r2, [pc, #652]	; 12264 <__assert_fail@plt+0x10a8>
   11fd4:	bl	1af2c <__assert_fail@plt+0x9d70>
   11fd8:	add	r3, r2, #999424	; 0xf4000
   11fdc:	add	r3, r3, #576	; 0x240
   11fe0:	mov	r2, #5
   11fe4:	ldr	r1, [pc, #652]	; 12278 <__assert_fail@plt+0x10bc>
   11fe8:	mov	r0, #0
   11fec:	str	r2, [sp]
   11ff0:	ldr	r2, [pc, #644]	; 1227c <__assert_fail@plt+0x10c0>
   11ff4:	bl	111a4 <dcngettext@plt>
   11ff8:	ldrd	r2, [sp, #40]	; 0x28
   11ffc:	mov	r1, #0
   12000:	strd	r2, [sp]
   12004:	mov	r2, r0
   12008:	mov	r0, r1
   1200c:	bl	11000 <error@plt>
   12010:	ldr	r3, [pc, #432]	; 121c8 <__assert_fail@plt+0x100c>
   12014:	ldrb	r3, [r3, #5]
   12018:	cmp	r3, #0
   1201c:	beq	12098 <__assert_fail@plt+0xedc>
   12020:	ldr	r3, [sp, #52]	; 0x34
   12024:	cmp	r3, #0
   12028:	beq	12064 <__assert_fail@plt+0xea8>
   1202c:	ldr	r3, [sp, #32]
   12030:	ldr	r2, [sp, #40]	; 0x28
   12034:	orr	r3, r3, r2
   12038:	ldr	r2, [sp, #44]	; 0x2c
   1203c:	str	r3, [sp, #96]	; 0x60
   12040:	ldr	r3, [sp, #36]	; 0x24
   12044:	orr	r3, r3, r2
   12048:	str	r3, [sp, #100]	; 0x64
   1204c:	ldrd	r2, [sp, #96]	; 0x60
   12050:	orrs	r3, r2, r3
   12054:	beq	120a8 <__assert_fail@plt+0xeec>
   12058:	mov	r9, #0
   1205c:	and	r9, r9, #1
   12060:	b	117ac <__assert_fail@plt+0x5f0>
   12064:	mov	r2, #5
   12068:	ldr	r1, [pc, #528]	; 12280 <__assert_fail@plt+0x10c4>
   1206c:	ldr	r0, [sp, #52]	; 0x34
   12070:	bl	10f7c <dcgettext@plt>
   12074:	mov	r4, r0
   12078:	mov	r2, r6
   1207c:	ldr	r0, [sp, #52]	; 0x34
   12080:	mov	r1, #3
   12084:	bl	19c14 <__assert_fail@plt+0x8a58>
   12088:	mov	r3, r0
   1208c:	mov	r2, r4
   12090:	ldr	r1, [sp, #52]	; 0x34
   12094:	b	11eb0 <__assert_fail@plt+0xcf4>
   12098:	ldr	r3, [sp, #52]	; 0x34
   1209c:	cmp	r3, #0
   120a0:	bne	1202c <__assert_fail@plt+0xe70>
   120a4:	b	12058 <__assert_fail@plt+0xe9c>
   120a8:	ldr	r3, [pc, #280]	; 121c8 <__assert_fail@plt+0x100c>
   120ac:	ldr	r2, [sp, #28]
   120b0:	ldrb	r9, [r3, #19]
   120b4:	ldr	r3, [sp, #24]
   120b8:	eor	r9, r9, #1
   120bc:	orrs	r3, r3, r2
   120c0:	orreq	r9, r9, #1
   120c4:	b	1205c <__assert_fail@plt+0xea0>
   120c8:	add	r2, sp, #216	; 0xd8
   120cc:	add	r1, sp, #144	; 0x90
   120d0:	mov	r0, r6
   120d4:	bl	12568 <__assert_fail@plt+0x13ac>
   120d8:	subs	r4, r0, #0
   120dc:	beq	122ec <__assert_fail@plt+0x1130>
   120e0:	ldr	r3, [pc, #260]	; 121ec <__assert_fail@plt+0x1030>
   120e4:	ldrb	r7, [r3]
   120e8:	cmp	r7, #10
   120ec:	bne	121ac <__assert_fail@plt+0xff0>
   120f0:	mov	r1, #92	; 0x5c
   120f4:	mov	r0, r6
   120f8:	bl	11084 <strchr@plt>
   120fc:	cmp	r0, #0
   12100:	bne	1212c <__assert_fail@plt+0xf70>
   12104:	mov	r1, r7
   12108:	mov	r0, r6
   1210c:	bl	11084 <strchr@plt>
   12110:	cmp	r0, #0
   12114:	bne	1212c <__assert_fail@plt+0xf70>
   12118:	mov	r1, #13
   1211c:	mov	r0, r6
   12120:	bl	11084 <strchr@plt>
   12124:	cmp	r0, #0
   12128:	beq	121ac <__assert_fail@plt+0xff0>
   1212c:	mov	r0, #92	; 0x5c
   12130:	bl	111b0 <putchar_unlocked@plt>
   12134:	ldr	r3, [sp, #72]	; 0x48
   12138:	cmp	r3, #0
   1213c:	beq	1219c <__assert_fail@plt+0xfe0>
   12140:	ldr	r5, [pc, #108]	; 121b4 <__assert_fail@plt+0xff8>
   12144:	ldr	r0, [pc, #144]	; 121dc <__assert_fail@plt+0x1020>
   12148:	ldr	r1, [r5]
   1214c:	bl	10eec <fputs_unlocked@plt>
   12150:	ldr	r3, [pc, #112]	; 121c8 <__assert_fail@plt+0x100c>
   12154:	mov	r1, #0
   12158:	movw	r0, #511	; 0x1ff
   1215c:	ldrd	r2, [r3, #8]
   12160:	cmp	r3, r1
   12164:	cmpeq	r2, r0
   12168:	bhi	12178 <__assert_fail@plt+0xfbc>
   1216c:	ldr	r1, [pc, #272]	; 12284 <__assert_fail@plt+0x10c8>
   12170:	mov	r0, #1
   12174:	bl	110c0 <__printf_chk@plt>
   12178:	ldr	r0, [pc, #264]	; 12288 <__assert_fail@plt+0x10cc>
   1217c:	ldr	r1, [r5]
   12180:	bl	10eec <fputs_unlocked@plt>
   12184:	mov	r1, r4
   12188:	mov	r0, r6
   1218c:	bl	124e0 <__assert_fail@plt+0x1324>
   12190:	ldr	r0, [pc, #244]	; 1228c <__assert_fail@plt+0x10d0>
   12194:	ldr	r1, [r5]
   12198:	bl	10eec <fputs_unlocked@plt>
   1219c:	mov	r5, #0
   121a0:	ldr	r8, [pc, #32]	; 121c8 <__assert_fail@plt+0x100c>
   121a4:	ldr	r9, [pc, #228]	; 12290 <__assert_fail@plt+0x10d4>
   121a8:	b	122ac <__assert_fail@plt+0x10f0>
   121ac:	mov	r4, fp
   121b0:	b	12134 <__assert_fail@plt+0xf78>
   121b4:	andeq	sp, r2, r4, lsl #3
   121b8:	andeq	fp, r1, r5, lsl #14
   121bc:	ldrdeq	fp, [r1], -r1
   121c0:	andeq	fp, r1, lr, lsr #18
   121c4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   121c8:	muleq	r2, r0, r1
   121cc:	andeq	fp, r1, r4, ror #2
   121d0:	andeq	fp, r1, r4, asr #20
   121d4:	strdeq	fp, [r1], -r8
   121d8:	andeq	fp, r1, ip, asr #20
   121dc:	ldrdeq	fp, [r1], -r2
   121e0:	andeq	sp, r2, r8, lsl #3
   121e4:	andeq	fp, r1, r9, ror #19
   121e8:	andeq	fp, r1, fp, lsl #20
   121ec:	andeq	sp, r2, r4, lsl r1
   121f0:	andeq	fp, r1, r9, lsr #20
   121f4:	andeq	fp, r1, sl, lsr #18
   121f8:	andeq	fp, r1, r6, lsr sl
   121fc:	andeq	fp, r1, sp, asr r2
   12200:	andeq	sp, r2, r0, lsr #2
   12204:	andeq	fp, r1, r4, ror sl
   12208:	muleq	r1, r7, sl
   1220c:	andeq	fp, r1, r5, asr fp
   12210:	muleq	r1, sp, fp
   12214:	ldrdeq	fp, [r1], -sp
   12218:	andeq	fp, r1, fp, lsl ip
   1221c:	andeq	fp, r1, sl, asr ip
   12220:	ldrdeq	fp, [r1], -r3
   12224:	andeq	fp, r1, ip, lsl #22
   12228:	andeq	sp, r2, r0, ror r1
   1222c:	andeq	fp, r1, r4, ror #31
   12230:	andeq	sp, r2, r0, lsl #3
   12234:	muleq	r1, sl, ip
   12238:	andeq	fp, r1, r9, lsr #25
   1223c:	andeq	fp, r1, r8, asr r2
   12240:	andeq	fp, r1, r8, lsl #20
   12244:	andeq	fp, r1, r3, lsl sp
   12248:	strdeq	fp, [r1], -r5
   1224c:	andeq	ip, r1, sl, lsl #6
   12250:	andeq	fp, r1, r5, asr #25
   12254:	andeq	fp, r1, r9, lsl #26
   12258:	andeq	fp, r1, ip, lsr #2
   1225c:	andeq	fp, r1, r0, lsl sp
   12260:	andeq	fp, r1, r2, lsr #26
   12264:	andeq	r4, pc, r0, asr #4
   12268:	andeq	fp, r1, lr, ror sp
   1226c:	andeq	fp, r1, r1, asr sp
   12270:	ldrdeq	fp, [r1], -r6
   12274:	andeq	fp, r1, r9, lsr #27
   12278:	andeq	fp, r1, r1, lsr lr
   1227c:	andeq	fp, r1, r2, lsl #28
   12280:	andeq	fp, r1, pc, asr lr
   12284:	andeq	fp, r1, r8, ror lr
   12288:	andeq	fp, r1, lr, ror lr
   1228c:	andeq	fp, r1, r1, lsl #29
   12290:	andeq	fp, r1, r6, lsl #29
   12294:	add	r3, sp, #144	; 0x90
   12298:	mov	r1, r9
   1229c:	ldrb	r2, [r3, r5]
   122a0:	mov	r0, #1
   122a4:	add	r5, r5, #1
   122a8:	bl	110c0 <__printf_chk@plt>
   122ac:	ldr	r3, [r8]
   122b0:	cmp	r5, r3, lsr #1
   122b4:	bcc	12294 <__assert_fail@plt+0x10d8>
   122b8:	ldr	r3, [sp, #72]	; 0x48
   122bc:	cmp	r3, #0
   122c0:	bne	122e0 <__assert_fail@plt+0x1124>
   122c4:	mov	r0, #32
   122c8:	bl	111b0 <putchar_unlocked@plt>
   122cc:	ldr	r0, [sp, #108]	; 0x6c
   122d0:	bl	111b0 <putchar_unlocked@plt>
   122d4:	mov	r1, r4
   122d8:	mov	r0, r6
   122dc:	bl	124e0 <__assert_fail@plt+0x1324>
   122e0:	mov	r0, r7
   122e4:	bl	111b0 <putchar_unlocked@plt>
   122e8:	ldr	r4, [sp, #56]	; 0x38
   122ec:	str	r4, [sp, #56]	; 0x38
   122f0:	b	1165c <__assert_fail@plt+0x4a0>
   122f4:	ldr	r3, [sp, #56]	; 0x38
   122f8:	eor	r0, r3, #1
   122fc:	uxtb	r0, r0
   12300:	add	sp, sp, #292	; 0x124
   12304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12308:	mov	fp, #0
   1230c:	mov	lr, #0
   12310:	pop	{r1}		; (ldr r1, [sp], #4)
   12314:	mov	r2, sp
   12318:	push	{r2}		; (str r2, [sp, #-4]!)
   1231c:	push	{r0}		; (str r0, [sp, #-4]!)
   12320:	ldr	ip, [pc, #16]	; 12338 <__assert_fail@plt+0x117c>
   12324:	push	{ip}		; (str ip, [sp, #-4]!)
   12328:	ldr	r0, [pc, #12]	; 1233c <__assert_fail@plt+0x1180>
   1232c:	ldr	r3, [pc, #12]	; 12340 <__assert_fail@plt+0x1184>
   12330:	bl	11018 <__libc_start_main@plt>
   12334:	bl	11180 <abort@plt>
   12338:	andeq	fp, r1, r0, lsl #2
   1233c:	andeq	r1, r1, r0, ror #3
   12340:	andeq	fp, r1, r0, lsr #1
   12344:	ldr	r3, [pc, #20]	; 12360 <__assert_fail@plt+0x11a4>
   12348:	ldr	r2, [pc, #20]	; 12364 <__assert_fail@plt+0x11a8>
   1234c:	add	r3, pc, r3
   12350:	ldr	r2, [r3, r2]
   12354:	cmp	r2, #0
   12358:	bxeq	lr
   1235c:	b	1103c <__gmon_start__@plt>
   12360:	andeq	sl, r1, ip, lsr #25
   12364:	andeq	r0, r0, r8, lsl #2
   12368:	ldr	r0, [pc, #24]	; 12388 <__assert_fail@plt+0x11cc>
   1236c:	ldr	r3, [pc, #24]	; 1238c <__assert_fail@plt+0x11d0>
   12370:	cmp	r3, r0
   12374:	bxeq	lr
   12378:	ldr	r3, [pc, #16]	; 12390 <__assert_fail@plt+0x11d4>
   1237c:	cmp	r3, #0
   12380:	bxeq	lr
   12384:	bx	r3
   12388:	andeq	sp, r2, r8, ror #2
   1238c:	andeq	sp, r2, r8, ror #2
   12390:	andeq	r0, r0, r0
   12394:	ldr	r0, [pc, #36]	; 123c0 <__assert_fail@plt+0x1204>
   12398:	ldr	r1, [pc, #36]	; 123c4 <__assert_fail@plt+0x1208>
   1239c:	sub	r1, r1, r0
   123a0:	asr	r1, r1, #2
   123a4:	add	r1, r1, r1, lsr #31
   123a8:	asrs	r1, r1, #1
   123ac:	bxeq	lr
   123b0:	ldr	r3, [pc, #16]	; 123c8 <__assert_fail@plt+0x120c>
   123b4:	cmp	r3, #0
   123b8:	bxeq	lr
   123bc:	bx	r3
   123c0:	andeq	sp, r2, r8, ror #2
   123c4:	andeq	sp, r2, r8, ror #2
   123c8:	andeq	r0, r0, r0
   123cc:	push	{r4, lr}
   123d0:	ldr	r4, [pc, #24]	; 123f0 <__assert_fail@plt+0x1234>
   123d4:	ldrb	r3, [r4]
   123d8:	cmp	r3, #0
   123dc:	popne	{r4, pc}
   123e0:	bl	12368 <__assert_fail@plt+0x11ac>
   123e4:	mov	r3, #1
   123e8:	strb	r3, [r4]
   123ec:	pop	{r4, pc}
   123f0:	andeq	sp, r2, ip, lsl #3
   123f4:	b	12394 <__assert_fail@plt+0x11d8>
   123f8:	push	{r4, r5, lr}
   123fc:	mov	r3, r0
   12400:	mov	r2, #0
   12404:	sub	lr, r1, #1
   12408:	mov	r4, #10
   1240c:	mov	r5, #13
   12410:	cmp	r2, r1
   12414:	bcc	1242c <__assert_fail@plt+0x1270>
   12418:	add	r1, r0, r1
   1241c:	cmp	r3, r1
   12420:	movcc	r2, #0
   12424:	strbcc	r2, [r3]
   12428:	pop	{r4, r5, pc}
   1242c:	ldrb	ip, [r0, r2]
   12430:	cmp	ip, #0
   12434:	beq	12468 <__assert_fail@plt+0x12ac>
   12438:	cmp	ip, #92	; 0x5c
   1243c:	bne	12488 <__assert_fail@plt+0x12cc>
   12440:	cmp	lr, r2
   12444:	beq	12468 <__assert_fail@plt+0x12ac>
   12448:	add	r2, r2, #1
   1244c:	ldrb	ip, [r0, r2]
   12450:	cmp	ip, #110	; 0x6e
   12454:	beq	12470 <__assert_fail@plt+0x12b4>
   12458:	cmp	ip, #114	; 0x72
   1245c:	beq	12480 <__assert_fail@plt+0x12c4>
   12460:	cmp	ip, #92	; 0x5c
   12464:	beq	12488 <__assert_fail@plt+0x12cc>
   12468:	mov	r0, #0
   1246c:	pop	{r4, r5, pc}
   12470:	strb	r4, [r3]
   12474:	add	r2, r2, #1
   12478:	add	r3, r3, #1
   1247c:	b	12410 <__assert_fail@plt+0x1254>
   12480:	strb	r5, [r3]
   12484:	b	12474 <__assert_fail@plt+0x12b8>
   12488:	strb	ip, [r3]
   1248c:	b	12474 <__assert_fail@plt+0x12b8>
   12490:	ldr	r3, [pc, #68]	; 124dc <__assert_fail@plt+0x1320>
   12494:	push	{r4, r5, r6, lr}
   12498:	mov	r5, r0
   1249c:	ldr	r6, [r3]
   124a0:	add	r6, r0, r6
   124a4:	cmp	r5, r6
   124a8:	ldrb	r4, [r5]
   124ac:	bne	124bc <__assert_fail@plt+0x1300>
   124b0:	clz	r0, r4
   124b4:	lsr	r0, r0, #5
   124b8:	pop	{r4, r5, r6, pc}
   124bc:	bl	11054 <__ctype_b_loc@plt>
   124c0:	ldr	r3, [r0]
   124c4:	lsl	r4, r4, #1
   124c8:	ldrh	r0, [r3, r4]
   124cc:	ands	r0, r0, #4096	; 0x1000
   124d0:	popeq	{r4, r5, r6, pc}
   124d4:	add	r5, r5, #1
   124d8:	b	124a4 <__assert_fail@plt+0x12e8>
   124dc:	muleq	r2, r0, r1
   124e0:	cmp	r1, #0
   124e4:	beq	12530 <__assert_fail@plt+0x1374>
   124e8:	push	{r4, r5, r6, r7, r8, lr}
   124ec:	sub	r4, r0, #1
   124f0:	ldr	r5, [pc, #96]	; 12558 <__assert_fail@plt+0x139c>
   124f4:	ldr	r6, [pc, #96]	; 1255c <__assert_fail@plt+0x13a0>
   124f8:	ldr	r7, [pc, #96]	; 12560 <__assert_fail@plt+0x13a4>
   124fc:	ldrb	r0, [r4, #1]!
   12500:	cmp	r0, #0
   12504:	popeq	{r4, r5, r6, r7, r8, pc}
   12508:	cmp	r0, #13
   1250c:	beq	1253c <__assert_fail@plt+0x1380>
   12510:	cmp	r0, #92	; 0x5c
   12514:	beq	1254c <__assert_fail@plt+0x1390>
   12518:	cmp	r0, #10
   1251c:	ldreq	r0, [pc, #64]	; 12564 <__assert_fail@plt+0x13a8>
   12520:	ldreq	r1, [r5]
   12524:	beq	12544 <__assert_fail@plt+0x1388>
   12528:	bl	111b0 <putchar_unlocked@plt>
   1252c:	b	124fc <__assert_fail@plt+0x1340>
   12530:	ldr	r3, [pc, #32]	; 12558 <__assert_fail@plt+0x139c>
   12534:	ldr	r1, [r3]
   12538:	b	10eec <fputs_unlocked@plt>
   1253c:	ldr	r1, [r5]
   12540:	mov	r0, r6
   12544:	bl	10eec <fputs_unlocked@plt>
   12548:	b	124fc <__assert_fail@plt+0x1340>
   1254c:	mov	r0, r7
   12550:	ldr	r1, [r5]
   12554:	b	12544 <__assert_fail@plt+0x1388>
   12558:	andeq	sp, r2, r4, lsl #3
   1255c:	andeq	fp, r1, r7, asr r2
   12560:	andeq	fp, r1, sl, asr r2
   12564:	andeq	fp, r1, r4, asr r2
   12568:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1256c:	mov	r9, r1
   12570:	mov	r7, r2
   12574:	mov	r6, r0
   12578:	ldr	r1, [pc, #288]	; 126a0 <__assert_fail@plt+0x14e4>
   1257c:	bl	10f04 <strcmp@plt>
   12580:	mov	r3, #0
   12584:	subs	r8, r0, #0
   12588:	ldr	r4, [pc, #276]	; 126a4 <__assert_fail@plt+0x14e8>
   1258c:	strb	r3, [r7]
   12590:	bne	12618 <__assert_fail@plt+0x145c>
   12594:	mov	r3, #1
   12598:	strb	r3, [r4, #4]
   1259c:	ldr	r3, [pc, #260]	; 126a8 <__assert_fail@plt+0x14ec>
   125a0:	ldr	r5, [r3]
   125a4:	mov	r1, #2
   125a8:	mov	r0, r5
   125ac:	bl	184b0 <__assert_fail@plt+0x72f4>
   125b0:	ldr	r3, [r4, #8]
   125b4:	mov	r1, r9
   125b8:	mov	r0, r5
   125bc:	ldr	r2, [r4, #12]
   125c0:	lsr	r3, r3, #3
   125c4:	orr	r2, r3, r2, lsl #29
   125c8:	bl	182e0 <__assert_fail@plt+0x7124>
   125cc:	subs	r4, r0, #0
   125d0:	beq	125dc <__assert_fail@plt+0x1420>
   125d4:	bl	11090 <__errno_location@plt>
   125d8:	ldr	r4, [r0]
   125dc:	cmp	r8, #0
   125e0:	mov	r0, r5
   125e4:	bne	12680 <__assert_fail@plt+0x14c4>
   125e8:	bl	11138 <clearerr_unlocked@plt>
   125ec:	cmp	r4, #0
   125f0:	moveq	r4, #1
   125f4:	beq	12678 <__assert_fail@plt+0x14bc>
   125f8:	mov	r2, r6
   125fc:	mov	r1, #3
   12600:	mov	r0, #0
   12604:	bl	19c14 <__assert_fail@plt+0x8a58>
   12608:	mov	r3, r0
   1260c:	ldr	r2, [pc, #152]	; 126ac <__assert_fail@plt+0x14f0>
   12610:	mov	r1, r4
   12614:	b	1266c <__assert_fail@plt+0x14b0>
   12618:	ldr	r1, [pc, #144]	; 126b0 <__assert_fail@plt+0x14f4>
   1261c:	mov	r0, r6
   12620:	bl	185d8 <__assert_fail@plt+0x741c>
   12624:	subs	r5, r0, #0
   12628:	bne	125a4 <__assert_fail@plt+0x13e8>
   1262c:	ldrb	r4, [r4, #5]
   12630:	bl	11090 <__errno_location@plt>
   12634:	ldr	r5, [r0]
   12638:	cmp	r4, #0
   1263c:	beq	12650 <__assert_fail@plt+0x1494>
   12640:	cmp	r5, #2
   12644:	moveq	r3, #1
   12648:	strbeq	r3, [r7]
   1264c:	beq	12678 <__assert_fail@plt+0x14bc>
   12650:	mov	r2, r6
   12654:	mov	r1, #3
   12658:	mov	r0, #0
   1265c:	bl	19c14 <__assert_fail@plt+0x8a58>
   12660:	ldr	r2, [pc, #68]	; 126ac <__assert_fail@plt+0x14f0>
   12664:	mov	r3, r0
   12668:	mov	r1, r5
   1266c:	mov	r0, #0
   12670:	mov	r4, #0
   12674:	bl	11000 <error@plt>
   12678:	mov	r0, r4
   1267c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12680:	bl	184e0 <__assert_fail@plt+0x7324>
   12684:	cmp	r0, #0
   12688:	beq	125ec <__assert_fail@plt+0x1430>
   1268c:	cmp	r4, #0
   12690:	bne	125f8 <__assert_fail@plt+0x143c>
   12694:	bl	11090 <__errno_location@plt>
   12698:	ldr	r4, [r0]
   1269c:	b	125ec <__assert_fail@plt+0x1430>
   126a0:	andeq	fp, r1, r4, ror #31
   126a4:	muleq	r2, r0, r1
   126a8:	andeq	sp, r2, r0, lsl #3
   126ac:	andeq	fp, r1, r8, lsl #20
   126b0:	andeq	fp, r1, r8, asr r2
   126b4:	subs	r4, r0, #0
   126b8:	push	{r7, lr}
   126bc:	sub	sp, sp, #56	; 0x38
   126c0:	ldr	r5, [pc, #732]	; 129a4 <__assert_fail@plt+0x17e8>
   126c4:	beq	126fc <__assert_fail@plt+0x1540>
   126c8:	mov	r2, #5
   126cc:	mov	r0, #0
   126d0:	ldr	r3, [pc, #720]	; 129a8 <__assert_fail@plt+0x17ec>
   126d4:	ldr	r1, [pc, #720]	; 129ac <__assert_fail@plt+0x17f0>
   126d8:	ldr	r6, [r3]
   126dc:	bl	10f7c <dcgettext@plt>
   126e0:	mov	r2, r0
   126e4:	mov	r1, #1
   126e8:	ldr	r3, [r5]
   126ec:	mov	r0, r6
   126f0:	bl	110e4 <__fprintf_chk@plt>
   126f4:	mov	r0, r4
   126f8:	bl	11060 <exit@plt>
   126fc:	mov	r2, #5
   12700:	ldr	r1, [pc, #680]	; 129b0 <__assert_fail@plt+0x17f4>
   12704:	mov	r6, sp
   12708:	bl	10f7c <dcgettext@plt>
   1270c:	mov	r1, r0
   12710:	mov	r0, #1
   12714:	ldr	r2, [r5]
   12718:	bl	110c0 <__printf_chk@plt>
   1271c:	ldr	r5, [pc, #656]	; 129b4 <__assert_fail@plt+0x17f8>
   12720:	mov	r2, #5
   12724:	mov	r0, r4
   12728:	ldr	r1, [pc, #648]	; 129b8 <__assert_fail@plt+0x17fc>
   1272c:	bl	10f7c <dcgettext@plt>
   12730:	mov	r1, r0
   12734:	mov	r3, #512	; 0x200
   12738:	ldr	r2, [pc, #636]	; 129bc <__assert_fail@plt+0x1800>
   1273c:	mov	r0, #1
   12740:	bl	110c0 <__printf_chk@plt>
   12744:	mov	r2, #5
   12748:	ldr	r1, [pc, #624]	; 129c0 <__assert_fail@plt+0x1804>
   1274c:	mov	r0, r4
   12750:	bl	10f7c <dcgettext@plt>
   12754:	ldr	r1, [r5]
   12758:	bl	10eec <fputs_unlocked@plt>
   1275c:	mov	r2, #5
   12760:	ldr	r1, [pc, #604]	; 129c4 <__assert_fail@plt+0x1808>
   12764:	mov	r0, r4
   12768:	bl	10f7c <dcgettext@plt>
   1276c:	ldr	r1, [r5]
   12770:	bl	10eec <fputs_unlocked@plt>
   12774:	mov	r2, #5
   12778:	ldr	r1, [pc, #584]	; 129c8 <__assert_fail@plt+0x180c>
   1277c:	mov	r0, r4
   12780:	bl	10f7c <dcgettext@plt>
   12784:	ldr	r1, [r5]
   12788:	bl	10eec <fputs_unlocked@plt>
   1278c:	mov	r2, #5
   12790:	ldr	r1, [pc, #564]	; 129cc <__assert_fail@plt+0x1810>
   12794:	mov	r0, r4
   12798:	bl	10f7c <dcgettext@plt>
   1279c:	ldr	r1, [r5]
   127a0:	bl	10eec <fputs_unlocked@plt>
   127a4:	mov	r2, #5
   127a8:	ldr	r1, [pc, #544]	; 129d0 <__assert_fail@plt+0x1814>
   127ac:	mov	r0, r4
   127b0:	bl	10f7c <dcgettext@plt>
   127b4:	ldr	r1, [r5]
   127b8:	bl	10eec <fputs_unlocked@plt>
   127bc:	mov	r2, #5
   127c0:	ldr	r1, [pc, #524]	; 129d4 <__assert_fail@plt+0x1818>
   127c4:	mov	r0, r4
   127c8:	bl	10f7c <dcgettext@plt>
   127cc:	ldr	r1, [r5]
   127d0:	bl	10eec <fputs_unlocked@plt>
   127d4:	mov	r2, #5
   127d8:	ldr	r1, [pc, #504]	; 129d8 <__assert_fail@plt+0x181c>
   127dc:	mov	r0, r4
   127e0:	bl	10f7c <dcgettext@plt>
   127e4:	ldr	r1, [r5]
   127e8:	bl	10eec <fputs_unlocked@plt>
   127ec:	mov	r2, #5
   127f0:	ldr	r1, [pc, #484]	; 129dc <__assert_fail@plt+0x1820>
   127f4:	mov	r0, r4
   127f8:	bl	10f7c <dcgettext@plt>
   127fc:	ldr	r1, [r5]
   12800:	bl	10eec <fputs_unlocked@plt>
   12804:	mov	r2, #5
   12808:	ldr	r1, [pc, #464]	; 129e0 <__assert_fail@plt+0x1824>
   1280c:	mov	r0, r4
   12810:	bl	10f7c <dcgettext@plt>
   12814:	ldr	r1, [r5]
   12818:	bl	10eec <fputs_unlocked@plt>
   1281c:	mov	r2, #5
   12820:	ldr	r1, [pc, #444]	; 129e4 <__assert_fail@plt+0x1828>
   12824:	mov	r0, r4
   12828:	bl	10f7c <dcgettext@plt>
   1282c:	ldr	r1, [r5]
   12830:	bl	10eec <fputs_unlocked@plt>
   12834:	mov	r2, #5
   12838:	ldr	r1, [pc, #424]	; 129e8 <__assert_fail@plt+0x182c>
   1283c:	mov	r0, r4
   12840:	bl	10f7c <dcgettext@plt>
   12844:	ldr	r1, [r5]
   12848:	bl	10eec <fputs_unlocked@plt>
   1284c:	mov	r2, #5
   12850:	ldr	r1, [pc, #404]	; 129ec <__assert_fail@plt+0x1830>
   12854:	mov	r0, r4
   12858:	bl	10f7c <dcgettext@plt>
   1285c:	mov	r1, r0
   12860:	ldr	r2, [pc, #392]	; 129f0 <__assert_fail@plt+0x1834>
   12864:	mov	r0, #1
   12868:	bl	110c0 <__printf_chk@plt>
   1286c:	mov	r2, #5
   12870:	ldr	r1, [pc, #380]	; 129f4 <__assert_fail@plt+0x1838>
   12874:	mov	r0, r4
   12878:	bl	10f7c <dcgettext@plt>
   1287c:	ldr	r1, [r5]
   12880:	bl	10eec <fputs_unlocked@plt>
   12884:	ldr	lr, [pc, #364]	; 129f8 <__assert_fail@plt+0x183c>
   12888:	mov	ip, sp
   1288c:	ldr	r7, [pc, #360]	; 129fc <__assert_fail@plt+0x1840>
   12890:	ldm	lr!, {r0, r1, r2, r3}
   12894:	stmia	ip!, {r0, r1, r2, r3}
   12898:	ldm	lr!, {r0, r1, r2, r3}
   1289c:	stmia	ip!, {r0, r1, r2, r3}
   128a0:	ldm	lr!, {r0, r1, r2, r3}
   128a4:	stmia	ip!, {r0, r1, r2, r3}
   128a8:	ldm	lr, {r0, r1}
   128ac:	stm	ip, {r0, r1}
   128b0:	ldr	r1, [r6]
   128b4:	cmp	r1, #0
   128b8:	bne	1295c <__assert_fail@plt+0x17a0>
   128bc:	ldr	r6, [r6, #4]
   128c0:	mov	r2, #5
   128c4:	mov	r0, #0
   128c8:	ldr	r7, [pc, #300]	; 129fc <__assert_fail@plt+0x1840>
   128cc:	ldr	r1, [pc, #300]	; 12a00 <__assert_fail@plt+0x1844>
   128d0:	cmp	r6, #0
   128d4:	moveq	r6, r7
   128d8:	bl	10f7c <dcgettext@plt>
   128dc:	mov	r1, r0
   128e0:	ldr	r3, [pc, #284]	; 12a04 <__assert_fail@plt+0x1848>
   128e4:	mov	r0, #1
   128e8:	ldr	r2, [pc, #280]	; 12a08 <__assert_fail@plt+0x184c>
   128ec:	bl	110c0 <__printf_chk@plt>
   128f0:	mov	r1, #0
   128f4:	mov	r0, #5
   128f8:	bl	11114 <setlocale@plt>
   128fc:	cmp	r0, #0
   12900:	bne	12974 <__assert_fail@plt+0x17b8>
   12904:	mov	r2, #5
   12908:	ldr	r1, [pc, #252]	; 12a0c <__assert_fail@plt+0x1850>
   1290c:	mov	r0, #0
   12910:	bl	10f7c <dcgettext@plt>
   12914:	mov	r1, r0
   12918:	ldr	r3, [pc, #220]	; 129fc <__assert_fail@plt+0x1840>
   1291c:	mov	r0, #1
   12920:	ldr	r2, [pc, #220]	; 12a04 <__assert_fail@plt+0x1848>
   12924:	bl	110c0 <__printf_chk@plt>
   12928:	mov	r2, #5
   1292c:	ldr	r1, [pc, #220]	; 12a10 <__assert_fail@plt+0x1854>
   12930:	mov	r0, #0
   12934:	bl	10f7c <dcgettext@plt>
   12938:	ldr	r2, [pc, #212]	; 12a14 <__assert_fail@plt+0x1858>
   1293c:	cmp	r6, r7
   12940:	mov	r1, r0
   12944:	mov	r0, #1
   12948:	ldr	r3, [pc, #200]	; 12a18 <__assert_fail@plt+0x185c>
   1294c:	moveq	r3, r2
   12950:	mov	r2, r6
   12954:	bl	110c0 <__printf_chk@plt>
   12958:	b	126f4 <__assert_fail@plt+0x1538>
   1295c:	mov	r0, r7
   12960:	bl	10f04 <strcmp@plt>
   12964:	cmp	r0, #0
   12968:	beq	128bc <__assert_fail@plt+0x1700>
   1296c:	add	r6, r6, #8
   12970:	b	128b0 <__assert_fail@plt+0x16f4>
   12974:	mov	r2, #3
   12978:	ldr	r1, [pc, #156]	; 12a1c <__assert_fail@plt+0x1860>
   1297c:	bl	11174 <strncmp@plt>
   12980:	cmp	r0, #0
   12984:	beq	12904 <__assert_fail@plt+0x1748>
   12988:	mov	r2, #5
   1298c:	ldr	r1, [pc, #140]	; 12a20 <__assert_fail@plt+0x1864>
   12990:	mov	r0, #0
   12994:	bl	10f7c <dcgettext@plt>
   12998:	ldr	r1, [r5]
   1299c:	bl	10eec <fputs_unlocked@plt>
   129a0:	b	12904 <__assert_fail@plt+0x1748>
   129a4:			; <UNDEFINED> instruction: 0x0002d1b0
   129a8:	andeq	sp, r2, r8, ror r1
   129ac:	andeq	fp, r1, r3, ror #4
   129b0:	andeq	fp, r1, sl, lsl #5
   129b4:	andeq	sp, r2, r4, lsl #3
   129b8:	andeq	fp, r1, fp, lsr #5
   129bc:	ldrdeq	fp, [r1], -r2
   129c0:	ldrdeq	fp, [r1], -sl
   129c4:	andeq	fp, r1, r2, lsl r3
   129c8:	andeq	fp, r1, sp, asr r3
   129cc:	andeq	fp, r1, sl, lsl #7
   129d0:	ldrdeq	fp, [r1], -r0
   129d4:	andeq	fp, r1, r7, ror #8
   129d8:	muleq	r1, ip, r4
   129dc:	ldrdeq	fp, [r1], -r1
   129e0:	andeq	fp, r1, pc, asr #10
   129e4:	andeq	fp, r1, r6, lsl #14
   129e8:	andeq	fp, r1, r3, lsr r7
   129ec:	andeq	fp, r1, r9, ror #14
   129f0:	muleq	r1, r5, r7
   129f4:	muleq	r1, lr, r7
   129f8:	andeq	fp, r1, ip, lsr #2
   129fc:	andeq	fp, r1, sp, asr r2
   12a00:	andeq	fp, r1, fp, ror #17
   12a04:	andeq	fp, r1, r2, lsl #18
   12a08:	andeq	fp, r1, sl, lsr #18
   12a0c:	andeq	fp, r1, r3, lsl #19
   12a10:	muleq	r1, lr, r9
   12a14:	andeq	fp, r1, r7, lsr #29
   12a18:	andeq	fp, r1, r5, lsl #14
   12a1c:	andeq	fp, r1, r8, lsr r9
   12a20:	andeq	fp, r1, ip, lsr r9
   12a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a28:	sub	sp, sp, #532	; 0x214
   12a2c:	mov	r4, r0
   12a30:	add	r5, sp, #272	; 0x110
   12a34:	mov	r6, r1
   12a38:	mov	lr, #0
   12a3c:	mov	ip, r5
   12a40:	add	r2, r6, lr
   12a44:	add	r3, sp, #400	; 0x190
   12a48:	ldr	r0, [r2]
   12a4c:	add	lr, lr, #8
   12a50:	cmp	lr, #128	; 0x80
   12a54:	ldr	r1, [r2, #4]
   12a58:	stmia	r3!, {r0, r1}
   12a5c:	add	r3, sp, #400	; 0x190
   12a60:	ldrd	r2, [r3]
   12a64:	strd	r2, [r5], #8
   12a68:	bne	12a40 <__assert_fail@plt+0x1884>
   12a6c:	sub	r3, r4, #8
   12a70:	sub	r1, r4, #8
   12a74:	str	r3, [sp, #136]	; 0x88
   12a78:	add	r3, sp, #400	; 0x190
   12a7c:	str	r3, [sp, #132]	; 0x84
   12a80:	add	r3, r4, #56	; 0x38
   12a84:	ldr	r0, [sp, #132]	; 0x84
   12a88:	str	r3, [sp, #140]	; 0x8c
   12a8c:	ldrd	r2, [r1, #8]!
   12a90:	strd	r2, [r0], #8
   12a94:	ldr	r3, [sp, #140]	; 0x8c
   12a98:	cmp	r1, r3
   12a9c:	bne	12a8c <__assert_fail@plt+0x18d0>
   12aa0:	ldr	r3, [ip]
   12aa4:	ldr	r5, [sp, #400]	; 0x190
   12aa8:	ldr	r9, [sp, #404]	; 0x194
   12aac:	str	r3, [sp, #4]
   12ab0:	ldr	r3, [ip, #4]
   12ab4:	ldr	r8, [sp, #432]	; 0x1b0
   12ab8:	ldr	r6, [sp, #436]	; 0x1b4
   12abc:	str	r3, [sp, #8]
   12ac0:	ldr	r3, [sp, #4]
   12ac4:	adds	r5, r8, r5
   12ac8:	ldr	r2, [r4, #64]	; 0x40
   12acc:	adc	r9, r6, r9
   12ad0:	ldr	r0, [r4, #68]	; 0x44
   12ad4:	adds	r5, r5, r3
   12ad8:	ldr	r3, [sp, #8]
   12adc:	eor	r2, r2, r5
   12ae0:	ldr	lr, [pc, #4088]	; 13ae0 <__assert_fail@plt+0x2924>
   12ae4:	adc	r9, r9, r3
   12ae8:	eor	r3, r2, #-1392508928	; 0xad000000
   12aec:	ldr	r2, [pc, #4080]	; 13ae4 <__assert_fail@plt+0x2928>
   12af0:	eor	r0, r0, r9
   12af4:	eor	r3, r3, #15073280	; 0xe60000
   12af8:	eor	r1, r0, #1358954496	; 0x51000000
   12afc:	eor	r3, r3, #33280	; 0x8200
   12b00:	eor	r1, r1, #937984	; 0xe5000
   12b04:	eor	r3, r3, #209	; 0xd1
   12b08:	eor	r1, r1, #636	; 0x27c
   12b0c:	eor	r1, r1, #3
   12b10:	adds	r2, r1, r2
   12b14:	eor	r8, r8, r2
   12b18:	adc	lr, r3, lr
   12b1c:	lsr	sl, r8, #24
   12b20:	eor	r6, r6, lr
   12b24:	lsr	r0, r6, #24
   12b28:	orr	r7, sl, r6, lsl #8
   12b2c:	ldr	r6, [ip, #8]
   12b30:	orr	r0, r0, r8, lsl #8
   12b34:	str	r6, [sp, #12]
   12b38:	ldr	r6, [ip, #12]
   12b3c:	str	r6, [sp, #16]
   12b40:	ldr	r6, [sp, #12]
   12b44:	adds	r5, r5, r6
   12b48:	ldr	r6, [sp, #16]
   12b4c:	adc	r9, r9, r6
   12b50:	adds	r5, r5, r7
   12b54:	str	r5, [sp, #76]	; 0x4c
   12b58:	adc	r5, r9, r0
   12b5c:	ldr	r9, [sp, #440]	; 0x1b8
   12b60:	str	r5, [sp, #80]	; 0x50
   12b64:	ldr	r5, [sp, #76]	; 0x4c
   12b68:	eor	r1, r1, r5
   12b6c:	ldr	r5, [sp, #80]	; 0x50
   12b70:	eor	r3, r3, r5
   12b74:	lsr	r5, r1, #16
   12b78:	orr	r5, r5, r3, lsl #16
   12b7c:	lsr	r3, r3, #16
   12b80:	orr	r3, r3, r1, lsl #16
   12b84:	str	r5, [sp, #100]	; 0x64
   12b88:	str	r3, [sp, #104]	; 0x68
   12b8c:	adds	r3, r2, r5
   12b90:	str	r3, [sp, #108]	; 0x6c
   12b94:	ldr	r3, [sp, #104]	; 0x68
   12b98:	adc	r3, lr, r3
   12b9c:	str	r3, [sp, #112]	; 0x70
   12ba0:	ldr	r3, [sp, #108]	; 0x6c
   12ba4:	eor	r7, r7, r3
   12ba8:	ldr	r3, [sp, #112]	; 0x70
   12bac:	eor	r0, r0, r3
   12bb0:	lsl	r3, r0, #1
   12bb4:	orr	r3, r3, r7, lsr #31
   12bb8:	lsl	r7, r7, #1
   12bbc:	str	r3, [sp, #196]	; 0xc4
   12bc0:	orr	r3, r7, r0, lsr #31
   12bc4:	str	r3, [sp, #192]	; 0xc0
   12bc8:	ldr	r6, [sp, #444]	; 0x1bc
   12bcc:	ldr	r3, [ip, #16]
   12bd0:	ldr	r2, [sp, #408]	; 0x198
   12bd4:	ldr	r5, [sp, #412]	; 0x19c
   12bd8:	str	r3, [sp, #20]
   12bdc:	ldr	r3, [ip, #20]
   12be0:	adds	r2, r9, r2
   12be4:	ldr	r0, [r4, #76]	; 0x4c
   12be8:	adc	r5, r6, r5
   12bec:	str	r3, [sp, #24]
   12bf0:	ldr	r3, [sp, #20]
   12bf4:	adds	r2, r2, r3
   12bf8:	ldr	r3, [sp, #24]
   12bfc:	adc	r5, r5, r3
   12c00:	ldr	r3, [r4, #72]	; 0x48
   12c04:	eor	r0, r0, r5
   12c08:	eor	lr, r0, #-1694498816	; 0x9b000000
   12c0c:	ldr	r0, [pc, #3796]	; 13ae8 <__assert_fail@plt+0x292c>
   12c10:	eor	lr, lr, #352256	; 0x56000
   12c14:	eor	lr, lr, #2176	; 0x880
   12c18:	eor	r3, r3, r2
   12c1c:	eor	lr, lr, #12
   12c20:	eor	r1, r3, #721420288	; 0x2b000000
   12c24:	ldr	r3, [pc, #3776]	; 13aec <__assert_fail@plt+0x2930>
   12c28:	eor	r1, r1, #4079616	; 0x3e4000
   12c2c:	eor	r1, r1, #11264	; 0x2c00
   12c30:	eor	r1, r1, #31
   12c34:	adds	r3, lr, r3
   12c38:	eor	r9, r9, r3
   12c3c:	adc	r0, r1, r0
   12c40:	lsr	sl, r9, #24
   12c44:	eor	r6, r6, r0
   12c48:	orr	r8, sl, r6, lsl #8
   12c4c:	lsr	r6, r6, #24
   12c50:	orr	r7, r6, r9, lsl #8
   12c54:	ldr	r6, [ip, #24]
   12c58:	str	r6, [sp, #28]
   12c5c:	ldr	r6, [ip, #28]
   12c60:	str	r6, [sp, #32]
   12c64:	ldr	r6, [sp, #28]
   12c68:	adds	r2, r2, r6
   12c6c:	ldr	r6, [sp, #32]
   12c70:	adc	r5, r5, r6
   12c74:	adds	r2, r2, r8
   12c78:	str	r2, [sp, #92]	; 0x5c
   12c7c:	adc	r2, r5, r7
   12c80:	str	r2, [sp, #96]	; 0x60
   12c84:	ldr	r2, [sp, #92]	; 0x5c
   12c88:	eor	lr, lr, r2
   12c8c:	ldr	r2, [sp, #96]	; 0x60
   12c90:	eor	r1, r1, r2
   12c94:	lsr	r2, lr, #16
   12c98:	orr	r2, r2, r1, lsl #16
   12c9c:	lsr	r1, r1, #16
   12ca0:	str	r2, [sp, #184]	; 0xb8
   12ca4:	orr	r2, r1, lr, lsl #16
   12ca8:	str	r2, [sp, #188]	; 0xbc
   12cac:	ldr	r2, [sp, #184]	; 0xb8
   12cb0:	adds	r3, r3, r2
   12cb4:	str	r3, [sp, #124]	; 0x7c
   12cb8:	ldr	r3, [sp, #188]	; 0xbc
   12cbc:	adc	r3, r0, r3
   12cc0:	str	r3, [sp, #128]	; 0x80
   12cc4:	ldr	r3, [sp, #124]	; 0x7c
   12cc8:	eor	r8, r8, r3
   12ccc:	ldr	r3, [sp, #128]	; 0x80
   12cd0:	eor	r7, r7, r3
   12cd4:	lsl	r3, r7, #1
   12cd8:	orr	r3, r3, r8, lsr #31
   12cdc:	lsl	r8, r8, #1
   12ce0:	str	r3, [sp, #88]	; 0x58
   12ce4:	orr	r3, r8, r7, lsr #31
   12ce8:	ldr	r8, [sp, #448]	; 0x1c0
   12cec:	str	r3, [sp, #84]	; 0x54
   12cf0:	ldr	r7, [sp, #452]	; 0x1c4
   12cf4:	ldr	r3, [ip, #32]
   12cf8:	ldr	r6, [sp, #420]	; 0x1a4
   12cfc:	ldr	lr, [r4, #84]	; 0x54
   12d00:	str	r3, [sp, #36]	; 0x24
   12d04:	ldr	r3, [ip, #36]	; 0x24
   12d08:	ldr	r2, [sp, #36]	; 0x24
   12d0c:	str	r3, [sp, #40]	; 0x28
   12d10:	ldr	r3, [sp, #416]	; 0x1a0
   12d14:	adds	r3, r8, r3
   12d18:	adc	r6, r7, r6
   12d1c:	adds	r3, r3, r2
   12d20:	ldr	r2, [sp, #40]	; 0x28
   12d24:	adc	r6, r6, r2
   12d28:	ldr	r2, [r4, #80]	; 0x50
   12d2c:	eor	lr, lr, r6
   12d30:	eor	r0, lr, #528482304	; 0x1f800000
   12d34:	ldr	lr, [pc, #3508]	; 13af0 <__assert_fail@plt+0x2934>
   12d38:	eor	r0, r0, #251904	; 0x3d800
   12d3c:	eor	r0, r0, #424	; 0x1a8
   12d40:	eor	r2, r2, r3
   12d44:	eor	r0, r0, #3
   12d48:	eor	r1, r2, #-83886080	; 0xfb000000
   12d4c:	ldr	r2, [pc, #3488]	; 13af4 <__assert_fail@plt+0x2938>
   12d50:	eor	r1, r1, #4259840	; 0x410000
   12d54:	eor	r1, r1, #48384	; 0xbd00
   12d58:	eor	r1, r1, #107	; 0x6b
   12d5c:	adds	r2, r0, r2
   12d60:	eor	r8, r8, r2
   12d64:	adc	lr, r1, lr
   12d68:	lsr	sl, r8, #24
   12d6c:	eor	r7, r7, lr
   12d70:	orr	r5, sl, r7, lsl #8
   12d74:	ldr	sl, [sp, #456]	; 0x1c8
   12d78:	lsr	r7, r7, #24
   12d7c:	orr	r9, r7, r8, lsl #8
   12d80:	ldr	r7, [ip, #40]	; 0x28
   12d84:	ldr	r8, [sp, #460]	; 0x1cc
   12d88:	str	r7, [sp, #44]	; 0x2c
   12d8c:	ldr	r7, [ip, #44]	; 0x2c
   12d90:	str	r7, [sp, #48]	; 0x30
   12d94:	ldr	r7, [sp, #44]	; 0x2c
   12d98:	adds	r3, r3, r7
   12d9c:	ldr	r7, [sp, #48]	; 0x30
   12da0:	adc	r6, r6, r7
   12da4:	adds	r3, r3, r5
   12da8:	str	r3, [sp, #116]	; 0x74
   12dac:	adc	r3, r6, r9
   12db0:	str	r3, [sp, #120]	; 0x78
   12db4:	ldr	r3, [sp, #116]	; 0x74
   12db8:	eor	r0, r0, r3
   12dbc:	ldr	r3, [sp, #120]	; 0x78
   12dc0:	eor	r1, r1, r3
   12dc4:	lsr	r3, r0, #16
   12dc8:	orr	r3, r3, r1, lsl #16
   12dcc:	lsr	r1, r1, #16
   12dd0:	str	r3, [sp, #200]	; 0xc8
   12dd4:	orr	r3, r1, r0, lsl #16
   12dd8:	str	r3, [sp, #204]	; 0xcc
   12ddc:	ldr	r3, [sp, #200]	; 0xc8
   12de0:	adds	r2, r2, r3
   12de4:	ldr	r3, [sp, #204]	; 0xcc
   12de8:	eor	r5, r5, r2
   12dec:	adc	lr, lr, r3
   12df0:	eor	r9, r9, lr
   12df4:	lsl	r3, r9, #1
   12df8:	orr	r3, r3, r5, lsr #31
   12dfc:	lsl	r5, r5, #1
   12e00:	str	r3, [sp, #172]	; 0xac
   12e04:	orr	r3, r5, r9, lsr #31
   12e08:	str	r3, [sp, #168]	; 0xa8
   12e0c:	ldr	r3, [ip, #48]	; 0x30
   12e10:	str	r3, [sp, #52]	; 0x34
   12e14:	ldr	r3, [ip, #52]	; 0x34
   12e18:	str	r3, [sp, #56]	; 0x38
   12e1c:	ldr	r3, [sp, #52]	; 0x34
   12e20:	ldr	r1, [sp, #424]	; 0x1a8
   12e24:	ldr	r9, [sp, #428]	; 0x1ac
   12e28:	ldr	r0, [r4, #92]	; 0x5c
   12e2c:	adds	r1, sl, r1
   12e30:	adc	r9, r8, r9
   12e34:	adds	r1, r1, r3
   12e38:	ldr	r3, [sp, #56]	; 0x38
   12e3c:	adc	r9, r9, r3
   12e40:	ldr	r3, [r4, #88]	; 0x58
   12e44:	eor	r0, r0, r9
   12e48:	eor	r5, r0, #1526726656	; 0x5b000000
   12e4c:	ldr	r0, [pc, #3236]	; 13af8 <__assert_fail@plt+0x293c>
   12e50:	eor	r5, r5, #14680064	; 0xe00000
   12e54:	eor	r5, r5, #52480	; 0xcd00
   12e58:	eor	r3, r3, r1
   12e5c:	eor	r5, r5, #25
   12e60:	eor	r4, r3, #322961408	; 0x13400000
   12e64:	ldr	r3, [pc, #3216]	; 13afc <__assert_fail@plt+0x2940>
   12e68:	eor	r4, r4, #4063232	; 0x3e0000
   12e6c:	eor	r4, r4, #8512	; 0x2140
   12e70:	eor	r4, r4, #57	; 0x39
   12e74:	adds	r3, r5, r3
   12e78:	eor	sl, sl, r3
   12e7c:	adc	r0, r4, r0
   12e80:	lsr	fp, sl, #24
   12e84:	eor	r8, r8, r0
   12e88:	lsr	r7, r8, #24
   12e8c:	orr	r6, fp, r8, lsl #8
   12e90:	ldr	r8, [ip, #56]	; 0x38
   12e94:	orr	r7, r7, sl, lsl #8
   12e98:	str	r8, [sp, #60]	; 0x3c
   12e9c:	ldr	r8, [ip, #60]	; 0x3c
   12ea0:	str	r8, [sp, #64]	; 0x40
   12ea4:	ldr	r8, [sp, #60]	; 0x3c
   12ea8:	adds	r1, r1, r8
   12eac:	ldr	r8, [sp, #64]	; 0x40
   12eb0:	adc	r9, r9, r8
   12eb4:	adds	r1, r1, r6
   12eb8:	str	r1, [sp, #144]	; 0x90
   12ebc:	adc	r1, r9, r7
   12ec0:	str	r1, [sp, #148]	; 0x94
   12ec4:	ldr	r1, [sp, #144]	; 0x90
   12ec8:	eor	r5, r5, r1
   12ecc:	ldr	r1, [sp, #148]	; 0x94
   12ed0:	eor	r4, r4, r1
   12ed4:	lsr	r1, r5, #16
   12ed8:	orr	r8, r1, r4, lsl #16
   12edc:	lsr	r4, r4, #16
   12ee0:	adds	r3, r3, r8
   12ee4:	orr	sl, r4, r5, lsl #16
   12ee8:	eor	r6, r6, r3
   12eec:	adc	r0, r0, sl
   12ef0:	eor	r7, r7, r0
   12ef4:	lsl	r1, r7, #1
   12ef8:	orr	fp, r1, r6, lsr #31
   12efc:	lsl	r6, r6, #1
   12f00:	orr	r1, r6, r7, lsr #31
   12f04:	str	r1, [sp, #208]	; 0xd0
   12f08:	ldr	r1, [ip, #64]	; 0x40
   12f0c:	str	r1, [sp, #68]	; 0x44
   12f10:	ldr	r1, [ip, #68]	; 0x44
   12f14:	ldr	r4, [sp, #68]	; 0x44
   12f18:	str	r1, [sp, #72]	; 0x48
   12f1c:	ldr	r5, [sp, #72]	; 0x48
   12f20:	ldr	r1, [sp, #76]	; 0x4c
   12f24:	adds	r1, r1, r4
   12f28:	ldr	r4, [sp, #80]	; 0x50
   12f2c:	adc	r9, r4, r5
   12f30:	ldr	r4, [sp, #84]	; 0x54
   12f34:	adds	r1, r1, r4
   12f38:	ldr	r4, [sp, #88]	; 0x58
   12f3c:	eor	r5, r1, r8
   12f40:	adc	r9, r9, r4
   12f44:	ldr	r4, [sp, #84]	; 0x54
   12f48:	eor	r7, r9, sl
   12f4c:	adds	r2, r2, r7
   12f50:	adc	lr, lr, r5
   12f54:	eor	r8, r2, r4
   12f58:	ldr	r4, [sp, #88]	; 0x58
   12f5c:	eor	r6, lr, r4
   12f60:	lsr	r4, r8, #24
   12f64:	orr	r4, r4, r6, lsl #8
   12f68:	lsr	r6, r6, #24
   12f6c:	orr	sl, r6, r8, lsl #8
   12f70:	ldr	r6, [ip, #72]	; 0x48
   12f74:	str	r6, [sp, #76]	; 0x4c
   12f78:	ldr	r6, [ip, #76]	; 0x4c
   12f7c:	str	r6, [sp, #80]	; 0x50
   12f80:	ldr	r6, [sp, #76]	; 0x4c
   12f84:	adds	r1, r1, r6
   12f88:	ldr	r6, [sp, #80]	; 0x50
   12f8c:	adc	r9, r9, r6
   12f90:	adds	r1, r1, r4
   12f94:	str	r1, [sp, #152]	; 0x98
   12f98:	adc	r1, r9, sl
   12f9c:	str	r1, [sp, #156]	; 0x9c
   12fa0:	ldr	r1, [sp, #152]	; 0x98
   12fa4:	eor	r7, r7, r1
   12fa8:	ldr	r1, [sp, #156]	; 0x9c
   12fac:	eor	r5, r5, r1
   12fb0:	lsr	r1, r7, #16
   12fb4:	orr	r1, r1, r5, lsl #16
   12fb8:	lsr	r5, r5, #16
   12fbc:	str	r1, [sp, #212]	; 0xd4
   12fc0:	orr	r1, r5, r7, lsl #16
   12fc4:	ldr	r5, [sp, #168]	; 0xa8
   12fc8:	str	r1, [sp, #216]	; 0xd8
   12fcc:	ldr	r1, [sp, #212]	; 0xd4
   12fd0:	adds	r2, r2, r1
   12fd4:	str	r2, [sp, #160]	; 0xa0
   12fd8:	ldr	r2, [sp, #216]	; 0xd8
   12fdc:	adc	r2, lr, r2
   12fe0:	str	r2, [sp, #164]	; 0xa4
   12fe4:	ldr	r2, [sp, #160]	; 0xa0
   12fe8:	eor	r4, r4, r2
   12fec:	ldr	r2, [sp, #164]	; 0xa4
   12ff0:	eor	sl, sl, r2
   12ff4:	lsl	r2, sl, #1
   12ff8:	orr	r2, r2, r4, lsr #31
   12ffc:	lsl	r4, r4, #1
   13000:	str	r2, [sp, #224]	; 0xe0
   13004:	orr	r2, r4, sl, lsr #31
   13008:	str	r2, [sp, #220]	; 0xdc
   1300c:	ldr	r2, [ip, #80]	; 0x50
   13010:	str	r2, [sp, #84]	; 0x54
   13014:	ldr	r2, [ip, #84]	; 0x54
   13018:	ldr	r1, [sp, #84]	; 0x54
   1301c:	str	r2, [sp, #88]	; 0x58
   13020:	ldr	lr, [sp, #88]	; 0x58
   13024:	ldr	r2, [sp, #92]	; 0x5c
   13028:	adds	r2, r2, r1
   1302c:	ldr	r1, [sp, #96]	; 0x60
   13030:	adc	r4, r1, lr
   13034:	ldr	r1, [sp, #168]	; 0xa8
   13038:	adds	r2, r2, r1
   1303c:	ldr	r1, [sp, #172]	; 0xac
   13040:	adc	r4, r4, r1
   13044:	ldr	r1, [sp, #104]	; 0x68
   13048:	eor	lr, r4, r1
   1304c:	ldr	r1, [sp, #100]	; 0x64
   13050:	adds	r3, r3, lr
   13054:	eor	r8, r3, r5
   13058:	ldr	r5, [sp, #172]	; 0xac
   1305c:	lsr	r9, r8, #24
   13060:	eor	r1, r2, r1
   13064:	adc	r0, r0, r1
   13068:	eor	r6, r0, r5
   1306c:	orr	r5, r9, r6, lsl #8
   13070:	lsr	r6, r6, #24
   13074:	orr	r7, r6, r8, lsl #8
   13078:	ldr	r6, [ip, #88]	; 0x58
   1307c:	str	r6, [sp, #92]	; 0x5c
   13080:	ldr	r6, [ip, #92]	; 0x5c
   13084:	str	r6, [sp, #96]	; 0x60
   13088:	ldr	r6, [sp, #92]	; 0x5c
   1308c:	adds	r2, r2, r6
   13090:	ldr	r6, [sp, #96]	; 0x60
   13094:	adc	r4, r4, r6
   13098:	adds	r2, r2, r5
   1309c:	str	r2, [sp, #168]	; 0xa8
   130a0:	adc	r2, r4, r7
   130a4:	str	r2, [sp, #172]	; 0xac
   130a8:	ldr	r2, [sp, #168]	; 0xa8
   130ac:	eor	lr, lr, r2
   130b0:	ldr	r2, [sp, #172]	; 0xac
   130b4:	eor	r1, r1, r2
   130b8:	lsr	r2, lr, #16
   130bc:	orr	r2, r2, r1, lsl #16
   130c0:	lsr	r1, r1, #16
   130c4:	str	r2, [sp, #228]	; 0xe4
   130c8:	orr	r2, r1, lr, lsl #16
   130cc:	str	r2, [sp, #232]	; 0xe8
   130d0:	ldr	r2, [sp, #228]	; 0xe4
   130d4:	adds	r3, r3, r2
   130d8:	str	r3, [sp, #176]	; 0xb0
   130dc:	ldr	r3, [sp, #232]	; 0xe8
   130e0:	adc	r3, r0, r3
   130e4:	ldr	r0, [sp, #112]	; 0x70
   130e8:	str	r3, [sp, #180]	; 0xb4
   130ec:	ldr	r3, [sp, #176]	; 0xb0
   130f0:	eor	r5, r5, r3
   130f4:	ldr	r3, [sp, #180]	; 0xb4
   130f8:	eor	r7, r7, r3
   130fc:	lsl	r3, r7, #1
   13100:	orr	r3, r3, r5, lsr #31
   13104:	lsl	r5, r5, #1
   13108:	str	r3, [sp, #240]	; 0xf0
   1310c:	orr	r3, r5, r7, lsr #31
   13110:	str	r3, [sp, #236]	; 0xec
   13114:	ldr	r3, [ip, #96]	; 0x60
   13118:	str	r3, [sp, #100]	; 0x64
   1311c:	ldr	r3, [ip, #100]	; 0x64
   13120:	ldr	r2, [sp, #100]	; 0x64
   13124:	str	r3, [sp, #104]	; 0x68
   13128:	ldr	r1, [sp, #104]	; 0x68
   1312c:	ldr	r3, [sp, #116]	; 0x74
   13130:	adds	r3, r3, r2
   13134:	ldr	r2, [sp, #120]	; 0x78
   13138:	adc	r6, r2, r1
   1313c:	ldr	r2, [sp, #208]	; 0xd0
   13140:	adds	r3, r3, r2
   13144:	ldr	r2, [sp, #188]	; 0xbc
   13148:	adc	r6, r6, fp
   1314c:	eor	r5, r6, r2
   13150:	ldr	r2, [sp, #184]	; 0xb8
   13154:	eor	r1, r3, r2
   13158:	ldr	r2, [sp, #108]	; 0x6c
   1315c:	adds	r2, r2, r5
   13160:	adc	lr, r0, r1
   13164:	ldr	r0, [sp, #208]	; 0xd0
   13168:	eor	r7, r2, r0
   1316c:	eor	r0, lr, fp
   13170:	lsr	r9, r7, #24
   13174:	orr	r8, r9, r0, lsl #8
   13178:	lsr	r0, r0, #24
   1317c:	orr	r4, r0, r7, lsl #8
   13180:	ldr	r0, [ip, #104]	; 0x68
   13184:	str	r0, [sp, #108]	; 0x6c
   13188:	ldr	r0, [ip, #108]	; 0x6c
   1318c:	str	r0, [sp, #112]	; 0x70
   13190:	ldr	r0, [sp, #108]	; 0x6c
   13194:	adds	r3, r3, r0
   13198:	ldr	r0, [sp, #112]	; 0x70
   1319c:	adc	r6, r6, r0
   131a0:	adds	r3, r3, r8
   131a4:	str	r3, [sp, #184]	; 0xb8
   131a8:	adc	r3, r6, r4
   131ac:	str	r3, [sp, #188]	; 0xbc
   131b0:	ldr	r3, [sp, #184]	; 0xb8
   131b4:	eor	r5, r5, r3
   131b8:	ldr	r3, [sp, #188]	; 0xbc
   131bc:	eor	r1, r1, r3
   131c0:	lsr	r3, r5, #16
   131c4:	orr	r3, r3, r1, lsl #16
   131c8:	lsr	r1, r1, #16
   131cc:	str	r3, [sp, #208]	; 0xd0
   131d0:	orr	r3, r1, r5, lsl #16
   131d4:	str	r3, [sp, #244]	; 0xf4
   131d8:	ldr	r3, [sp, #208]	; 0xd0
   131dc:	adds	r2, r2, r3
   131e0:	ldr	r3, [sp, #244]	; 0xf4
   131e4:	eor	r8, r8, r2
   131e8:	adc	lr, lr, r3
   131ec:	eor	r4, r4, lr
   131f0:	lsl	r3, r4, #1
   131f4:	orr	r3, r3, r8, lsr #31
   131f8:	lsl	r8, r8, #1
   131fc:	str	r3, [sp, #252]	; 0xfc
   13200:	orr	r3, r8, r4, lsr #31
   13204:	ldr	r4, [sp, #192]	; 0xc0
   13208:	str	r3, [sp, #248]	; 0xf8
   1320c:	ldr	r3, [ip, #112]	; 0x70
   13210:	str	r3, [sp, #116]	; 0x74
   13214:	ldr	r3, [ip, #116]	; 0x74
   13218:	ldr	r1, [sp, #116]	; 0x74
   1321c:	str	r3, [sp, #120]	; 0x78
   13220:	ldr	r0, [sp, #120]	; 0x78
   13224:	ldr	r3, [sp, #144]	; 0x90
   13228:	adds	r1, r3, r1
   1322c:	ldr	r3, [sp, #148]	; 0x94
   13230:	adc	r9, r3, r0
   13234:	ldr	r0, [sp, #128]	; 0x80
   13238:	ldr	r3, [sp, #192]	; 0xc0
   1323c:	adds	r1, r1, r3
   13240:	ldr	r3, [sp, #196]	; 0xc4
   13244:	adc	r9, r9, r3
   13248:	ldr	r3, [sp, #204]	; 0xcc
   1324c:	eor	r5, r9, r3
   13250:	ldr	r3, [sp, #200]	; 0xc8
   13254:	eor	sl, r1, r3
   13258:	ldr	r3, [sp, #124]	; 0x7c
   1325c:	adds	r3, r3, r5
   13260:	eor	r7, r3, r4
   13264:	ldr	r4, [sp, #196]	; 0xc4
   13268:	adc	r0, r0, sl
   1326c:	lsr	fp, r7, #24
   13270:	eor	r4, r0, r4
   13274:	orr	r6, fp, r4, lsl #8
   13278:	lsr	r4, r4, #24
   1327c:	orr	r8, r4, r7, lsl #8
   13280:	ldr	r4, [ip, #120]	; 0x78
   13284:	ldr	ip, [ip, #124]	; 0x7c
   13288:	adds	r1, r1, r4
   1328c:	str	r4, [sp, #124]	; 0x7c
   13290:	str	ip, [sp, #128]	; 0x80
   13294:	ldr	ip, [sp, #128]	; 0x80
   13298:	adc	r9, r9, ip
   1329c:	adds	r1, r1, r6
   132a0:	str	r1, [sp, #144]	; 0x90
   132a4:	adc	r1, r9, r8
   132a8:	str	r1, [sp, #148]	; 0x94
   132ac:	ldr	r1, [sp, #144]	; 0x90
   132b0:	eor	r5, r5, r1
   132b4:	ldr	r1, [sp, #148]	; 0x94
   132b8:	lsr	ip, r5, #16
   132bc:	eor	r1, r1, sl
   132c0:	lsr	sl, r1, #16
   132c4:	orr	fp, ip, r1, lsl #16
   132c8:	ldr	ip, [sp, #116]	; 0x74
   132cc:	orr	sl, sl, r5, lsl #16
   132d0:	adds	r3, r3, fp
   132d4:	ldr	r5, [sp, #120]	; 0x78
   132d8:	adc	r0, r0, sl
   132dc:	eor	r6, r6, r3
   132e0:	eor	r8, r8, r0
   132e4:	lsl	r1, r8, #1
   132e8:	orr	r4, r1, r6, lsr #31
   132ec:	ldr	r1, [sp, #152]	; 0x98
   132f0:	lsl	r6, r6, #1
   132f4:	orr	r7, r6, r8, lsr #31
   132f8:	adds	r1, r1, ip
   132fc:	ldr	ip, [sp, #156]	; 0x9c
   13300:	adc	r9, ip, r5
   13304:	ldr	ip, [sp, #232]	; 0xe8
   13308:	adds	r1, r1, r7
   1330c:	adc	r9, r9, r4
   13310:	eor	r5, r9, ip
   13314:	ldr	ip, [sp, #228]	; 0xe4
   13318:	adds	r2, r2, r5
   1331c:	eor	r6, r2, r7
   13320:	lsr	r7, r6, #24
   13324:	eor	ip, r1, ip
   13328:	adc	lr, lr, ip
   1332c:	eor	r4, r4, lr
   13330:	orr	r7, r7, r4, lsl #8
   13334:	lsr	r4, r4, #24
   13338:	orr	r8, r4, r6, lsl #8
   1333c:	ldr	r4, [sp, #84]	; 0x54
   13340:	adds	r1, r4, r1
   13344:	ldr	r4, [sp, #88]	; 0x58
   13348:	adc	r9, r4, r9
   1334c:	adds	r1, r1, r7
   13350:	str	r1, [sp, #152]	; 0x98
   13354:	adc	r1, r9, r8
   13358:	str	r1, [sp, #156]	; 0x9c
   1335c:	ldr	r1, [sp, #152]	; 0x98
   13360:	eor	r5, r5, r1
   13364:	ldr	r1, [sp, #156]	; 0x9c
   13368:	eor	ip, ip, r1
   1336c:	lsr	r1, r5, #16
   13370:	orr	r1, r1, ip, lsl #16
   13374:	lsr	ip, ip, #16
   13378:	str	r1, [sp, #228]	; 0xe4
   1337c:	orr	r1, ip, r5, lsl #16
   13380:	str	r1, [sp, #232]	; 0xe8
   13384:	ldr	r1, [sp, #228]	; 0xe4
   13388:	adds	r2, r2, r1
   1338c:	str	r2, [sp, #192]	; 0xc0
   13390:	ldr	r2, [sp, #232]	; 0xe8
   13394:	adc	r2, lr, r2
   13398:	str	r2, [sp, #196]	; 0xc4
   1339c:	ldr	r2, [sp, #192]	; 0xc0
   133a0:	eor	r7, r7, r2
   133a4:	ldr	r2, [sp, #196]	; 0xc4
   133a8:	eor	r8, r8, r2
   133ac:	lsl	r2, r8, #1
   133b0:	orr	r2, r2, r7, lsr #31
   133b4:	lsl	r7, r7, #1
   133b8:	str	r2, [sp, #260]	; 0x104
   133bc:	orr	r2, r7, r8, lsr #31
   133c0:	str	r2, [sp, #256]	; 0x100
   133c4:	ldr	r2, [sp, #36]	; 0x24
   133c8:	ldr	r1, [sp, #168]	; 0xa8
   133cc:	ldr	ip, [sp, #172]	; 0xac
   133d0:	adds	r2, r2, r1
   133d4:	ldr	r1, [sp, #40]	; 0x28
   133d8:	adc	r5, r1, ip
   133dc:	ldr	r1, [sp, #220]	; 0xdc
   133e0:	ldr	ip, [sp, #220]	; 0xdc
   133e4:	adds	r2, r2, r1
   133e8:	ldr	r1, [sp, #224]	; 0xe0
   133ec:	adc	r5, r5, r1
   133f0:	ldr	r1, [sp, #244]	; 0xf4
   133f4:	eor	lr, r5, r1
   133f8:	ldr	r1, [sp, #208]	; 0xd0
   133fc:	adds	r3, r3, lr
   13400:	eor	r4, r3, ip
   13404:	ldr	ip, [sp, #224]	; 0xe0
   13408:	lsr	r8, r4, #24
   1340c:	eor	r1, r2, r1
   13410:	adc	r0, r0, r1
   13414:	eor	ip, r0, ip
   13418:	orr	r6, r8, ip, lsl #8
   1341c:	lsr	ip, ip, #24
   13420:	orr	r7, ip, r4, lsl #8
   13424:	ldr	ip, [sp, #68]	; 0x44
   13428:	adds	r2, ip, r2
   1342c:	ldr	ip, [sp, #72]	; 0x48
   13430:	adc	r5, ip, r5
   13434:	adds	r2, r2, r6
   13438:	str	r2, [sp, #168]	; 0xa8
   1343c:	adc	r2, r5, r7
   13440:	str	r2, [sp, #172]	; 0xac
   13444:	ldr	r2, [sp, #168]	; 0xa8
   13448:	eor	lr, lr, r2
   1344c:	ldr	r2, [sp, #172]	; 0xac
   13450:	eor	r1, r1, r2
   13454:	lsr	r2, lr, #16
   13458:	orr	r2, r2, r1, lsl #16
   1345c:	lsr	r1, r1, #16
   13460:	str	r2, [sp, #208]	; 0xd0
   13464:	orr	r2, r1, lr, lsl #16
   13468:	ldr	r1, [sp, #188]	; 0xbc
   1346c:	str	r2, [sp, #220]	; 0xdc
   13470:	ldr	r2, [sp, #208]	; 0xd0
   13474:	adds	r3, r3, r2
   13478:	str	r3, [sp, #200]	; 0xc8
   1347c:	ldr	r3, [sp, #220]	; 0xdc
   13480:	adc	r3, r0, r3
   13484:	str	r3, [sp, #204]	; 0xcc
   13488:	ldr	r3, [sp, #200]	; 0xc8
   1348c:	ldr	r2, [sp, #204]	; 0xcc
   13490:	eor	r3, r3, r6
   13494:	lsl	r6, r3, #1
   13498:	eor	r7, r7, r2
   1349c:	lsl	r2, r7, #1
   134a0:	orr	r6, r6, r7, lsr #31
   134a4:	orr	r2, r2, r3, lsr #31
   134a8:	ldr	r3, [sp, #76]	; 0x4c
   134ac:	str	r2, [sp, #224]	; 0xe0
   134b0:	ldr	r2, [sp, #184]	; 0xb8
   134b4:	adds	r3, r3, r2
   134b8:	ldr	r2, [sp, #80]	; 0x50
   134bc:	adc	r8, r2, r1
   134c0:	ldr	r1, [sp, #164]	; 0xa4
   134c4:	ldr	r2, [sp, #236]	; 0xec
   134c8:	adds	r3, r3, r2
   134cc:	ldr	r2, [sp, #240]	; 0xf0
   134d0:	eor	r0, r3, fp
   134d4:	adc	r8, r8, r2
   134d8:	ldr	r2, [sp, #160]	; 0xa0
   134dc:	eor	r4, r8, sl
   134e0:	adds	r2, r2, r4
   134e4:	adc	lr, r1, r0
   134e8:	ldr	r1, [sp, #236]	; 0xec
   134ec:	eor	r5, r2, r1
   134f0:	ldr	r1, [sp, #240]	; 0xf0
   134f4:	lsr	r9, r5, #24
   134f8:	eor	ip, lr, r1
   134fc:	orr	r1, r9, ip, lsl #8
   13500:	lsr	ip, ip, #24
   13504:	orr	r7, ip, r5, lsl #8
   13508:	ldr	ip, [sp, #124]	; 0x7c
   1350c:	adds	r3, ip, r3
   13510:	ldr	ip, [sp, #128]	; 0x80
   13514:	adc	r8, ip, r8
   13518:	adds	r3, r3, r1
   1351c:	ldr	ip, [sp, #248]	; 0xf8
   13520:	str	r3, [sp, #160]	; 0xa0
   13524:	adc	r3, r8, r7
   13528:	str	r3, [sp, #164]	; 0xa4
   1352c:	ldr	r3, [sp, #160]	; 0xa0
   13530:	eor	r4, r4, r3
   13534:	ldr	r3, [sp, #164]	; 0xa4
   13538:	eor	r0, r0, r3
   1353c:	lsr	r3, r4, #16
   13540:	orr	r3, r3, r0, lsl #16
   13544:	lsr	r0, r0, #16
   13548:	str	r3, [sp, #236]	; 0xec
   1354c:	orr	r3, r0, r4, lsl #16
   13550:	ldr	r0, [sp, #148]	; 0x94
   13554:	str	r3, [sp, #240]	; 0xf0
   13558:	ldr	r3, [sp, #236]	; 0xec
   1355c:	adds	r2, r2, r3
   13560:	ldr	r3, [sp, #240]	; 0xf0
   13564:	eor	r1, r1, r2
   13568:	adc	lr, lr, r3
   1356c:	eor	r7, r7, lr
   13570:	lsl	r3, r7, #1
   13574:	orr	r3, r3, r1, lsr #31
   13578:	lsl	r1, r1, #1
   1357c:	str	r3, [sp, #188]	; 0xbc
   13580:	orr	r3, r1, r7, lsr #31
   13584:	ldr	r1, [sp, #144]	; 0x90
   13588:	str	r3, [sp, #184]	; 0xb8
   1358c:	ldr	r3, [sp, #108]	; 0x6c
   13590:	adds	r1, r3, r1
   13594:	ldr	r3, [sp, #112]	; 0x70
   13598:	adc	sl, r3, r0
   1359c:	ldr	r0, [sp, #180]	; 0xb4
   135a0:	ldr	r3, [sp, #248]	; 0xf8
   135a4:	adds	r1, r1, r3
   135a8:	ldr	r3, [sp, #252]	; 0xfc
   135ac:	adc	sl, sl, r3
   135b0:	ldr	r3, [sp, #216]	; 0xd8
   135b4:	eor	r7, sl, r3
   135b8:	ldr	r3, [sp, #212]	; 0xd4
   135bc:	eor	r4, r1, r3
   135c0:	ldr	r3, [sp, #176]	; 0xb0
   135c4:	adds	r3, r3, r7
   135c8:	eor	r8, r3, ip
   135cc:	ldr	ip, [sp, #252]	; 0xfc
   135d0:	adc	r0, r0, r4
   135d4:	lsr	fp, r8, #24
   135d8:	eor	r5, r0, ip
   135dc:	orr	ip, fp, r5, lsl #8
   135e0:	lsr	r5, r5, #24
   135e4:	orr	r9, r5, r8, lsl #8
   135e8:	ldr	r5, [sp, #52]	; 0x34
   135ec:	adds	r1, r5, r1
   135f0:	ldr	r5, [sp, #56]	; 0x38
   135f4:	adc	sl, r5, sl
   135f8:	adds	r1, r1, ip
   135fc:	str	r1, [sp, #144]	; 0x90
   13600:	adc	r1, sl, r9
   13604:	str	r1, [sp, #148]	; 0x94
   13608:	ldr	r1, [sp, #144]	; 0x90
   1360c:	eor	r7, r7, r1
   13610:	ldr	r1, [sp, #148]	; 0x94
   13614:	eor	r4, r4, r1
   13618:	lsr	r1, r7, #16
   1361c:	orr	r8, r1, r4, lsl #16
   13620:	lsr	r4, r4, #16
   13624:	adds	r3, r3, r8
   13628:	orr	sl, r4, r7, lsl #16
   1362c:	eor	ip, ip, r3
   13630:	adc	r0, r0, sl
   13634:	eor	r9, r9, r0
   13638:	lsl	r1, r9, #1
   1363c:	orr	r1, r1, ip, lsr #31
   13640:	lsl	ip, ip, #1
   13644:	orr	fp, ip, r9, lsr #31
   13648:	str	r1, [sp, #212]	; 0xd4
   1364c:	ldr	r1, [sp, #12]
   13650:	ldr	ip, [sp, #152]	; 0x98
   13654:	ldr	r4, [sp, #156]	; 0x9c
   13658:	adds	r1, r1, ip
   1365c:	ldr	ip, [sp, #16]
   13660:	adc	r9, ip, r4
   13664:	ldr	ip, [sp, #224]	; 0xe0
   13668:	adds	r1, r1, r6
   1366c:	eor	r5, r1, r8
   13670:	adc	r9, r9, ip
   13674:	eor	r7, r9, sl
   13678:	adds	r2, r2, r7
   1367c:	eor	r6, r6, r2
   13680:	adc	lr, lr, r5
   13684:	lsr	sl, r6, #24
   13688:	eor	r4, lr, ip
   1368c:	orr	ip, sl, r4, lsl #8
   13690:	lsr	r4, r4, #24
   13694:	orr	r8, r4, r6, lsl #8
   13698:	ldr	r4, [sp, #100]	; 0x64
   1369c:	adds	r1, r4, r1
   136a0:	ldr	r4, [sp, #104]	; 0x68
   136a4:	adc	r9, r4, r9
   136a8:	adds	r1, r1, ip
   136ac:	str	r1, [sp, #152]	; 0x98
   136b0:	adc	r1, r9, r8
   136b4:	str	r1, [sp, #156]	; 0x9c
   136b8:	ldr	r1, [sp, #152]	; 0x98
   136bc:	eor	r7, r7, r1
   136c0:	ldr	r1, [sp, #156]	; 0x9c
   136c4:	eor	r5, r5, r1
   136c8:	lsr	r1, r7, #16
   136cc:	orr	r1, r1, r5, lsl #16
   136d0:	lsr	r5, r5, #16
   136d4:	str	r1, [sp, #216]	; 0xd8
   136d8:	orr	r1, r5, r7, lsl #16
   136dc:	str	r1, [sp, #224]	; 0xe0
   136e0:	ldr	r1, [sp, #216]	; 0xd8
   136e4:	adds	r2, r2, r1
   136e8:	ldr	r1, [sp, #168]	; 0xa8
   136ec:	str	r2, [sp, #176]	; 0xb0
   136f0:	ldr	r2, [sp, #224]	; 0xe0
   136f4:	adc	r2, lr, r2
   136f8:	str	r2, [sp, #180]	; 0xb4
   136fc:	ldr	r2, [sp, #176]	; 0xb0
   13700:	eor	ip, ip, r2
   13704:	ldr	r2, [sp, #180]	; 0xb4
   13708:	eor	r8, r8, r2
   1370c:	lsl	r2, r8, #1
   13710:	orr	r2, r2, ip, lsr #31
   13714:	lsl	ip, ip, #1
   13718:	str	r2, [sp, #248]	; 0xf8
   1371c:	orr	r2, ip, r8, lsr #31
   13720:	ldr	ip, [sp, #172]	; 0xac
   13724:	str	r2, [sp, #244]	; 0xf4
   13728:	ldr	r2, [sp, #4]
   1372c:	adds	r2, r2, r1
   13730:	ldr	r1, [sp, #8]
   13734:	adc	r5, r1, ip
   13738:	ldr	r1, [sp, #184]	; 0xb8
   1373c:	adds	r2, r2, r1
   13740:	ldr	r1, [sp, #188]	; 0xbc
   13744:	adc	r5, r5, r1
   13748:	ldr	r1, [sp, #232]	; 0xe8
   1374c:	eor	ip, r5, r1
   13750:	ldr	r1, [sp, #228]	; 0xe4
   13754:	adds	r3, r3, ip
   13758:	eor	r9, r2, r1
   1375c:	ldr	r1, [sp, #184]	; 0xb8
   13760:	adc	r0, r0, r9
   13764:	eor	r6, r3, r1
   13768:	ldr	r1, [sp, #188]	; 0xbc
   1376c:	lsr	r7, r6, #24
   13770:	eor	lr, r0, r1
   13774:	orr	r1, r7, lr, lsl #8
   13778:	lsr	lr, lr, #24
   1377c:	orr	r4, lr, r6, lsl #8
   13780:	ldr	lr, [sp, #20]
   13784:	adds	r2, lr, r2
   13788:	ldr	lr, [sp, #24]
   1378c:	adc	r5, lr, r5
   13790:	adds	r2, r2, r1
   13794:	str	r2, [sp, #168]	; 0xa8
   13798:	adc	r2, r5, r4
   1379c:	str	r2, [sp, #172]	; 0xac
   137a0:	ldr	r2, [sp, #168]	; 0xa8
   137a4:	eor	ip, ip, r2
   137a8:	ldr	r2, [sp, #172]	; 0xac
   137ac:	lsr	lr, ip, #16
   137b0:	eor	r2, r2, r9
   137b4:	orr	lr, lr, r2, lsl #16
   137b8:	lsr	r9, r2, #16
   137bc:	ldr	r2, [sp, #160]	; 0xa0
   137c0:	adds	r3, r3, lr
   137c4:	orr	r9, r9, ip, lsl #16
   137c8:	str	r3, [sp, #184]	; 0xb8
   137cc:	adc	r3, r0, r9
   137d0:	ldr	r0, [sp, #196]	; 0xc4
   137d4:	str	r3, [sp, #188]	; 0xbc
   137d8:	ldr	r3, [sp, #184]	; 0xb8
   137dc:	str	lr, [sp, #228]	; 0xe4
   137e0:	eor	r1, r1, r3
   137e4:	ldr	r3, [sp, #188]	; 0xbc
   137e8:	eor	r4, r4, r3
   137ec:	lsl	r3, r4, #1
   137f0:	orr	r3, r3, r1, lsr #31
   137f4:	lsl	r1, r1, #1
   137f8:	str	r3, [sp, #252]	; 0xfc
   137fc:	orr	r3, r1, r4, lsr #31
   13800:	ldr	r1, [sp, #164]	; 0xa4
   13804:	str	r3, [sp, #232]	; 0xe8
   13808:	ldr	r3, [sp, #92]	; 0x5c
   1380c:	adds	r3, r3, r2
   13810:	ldr	r2, [sp, #96]	; 0x60
   13814:	adc	r6, r2, r1
   13818:	ldr	r2, [sp, #212]	; 0xd4
   1381c:	adds	r3, r3, fp
   13820:	adc	r6, r6, r2
   13824:	ldr	r2, [sp, #220]	; 0xdc
   13828:	eor	r5, r6, r2
   1382c:	ldr	r2, [sp, #208]	; 0xd0
   13830:	eor	r1, r3, r2
   13834:	ldr	r2, [sp, #192]	; 0xc0
   13838:	adds	r2, r2, r5
   1383c:	adc	lr, r0, r1
   13840:	ldr	r0, [sp, #212]	; 0xd4
   13844:	eor	fp, fp, r2
   13848:	lsr	ip, fp, #24
   1384c:	eor	r0, lr, r0
   13850:	orr	r8, ip, r0, lsl #8
   13854:	lsr	r0, r0, #24
   13858:	orr	r4, r0, fp, lsl #8
   1385c:	ldr	r0, [sp, #60]	; 0x3c
   13860:	adds	r3, r0, r3
   13864:	ldr	r0, [sp, #64]	; 0x40
   13868:	adc	r6, r0, r6
   1386c:	adds	r3, r3, r8
   13870:	str	r3, [sp, #160]	; 0xa0
   13874:	adc	r3, r6, r4
   13878:	str	r3, [sp, #164]	; 0xa4
   1387c:	ldr	r3, [sp, #160]	; 0xa0
   13880:	eor	r5, r5, r3
   13884:	ldr	r3, [sp, #164]	; 0xa4
   13888:	eor	r1, r1, r3
   1388c:	lsr	r3, r5, #16
   13890:	orr	r3, r3, r1, lsl #16
   13894:	lsr	r1, r1, #16
   13898:	str	r3, [sp, #208]	; 0xd0
   1389c:	orr	r3, r1, r5, lsl #16
   138a0:	str	r3, [sp, #212]	; 0xd4
   138a4:	ldr	r3, [sp, #208]	; 0xd0
   138a8:	adds	r2, r2, r3
   138ac:	ldr	r3, [sp, #212]	; 0xd4
   138b0:	eor	r8, r8, r2
   138b4:	adc	lr, lr, r3
   138b8:	eor	r4, r4, lr
   138bc:	lsl	r3, r4, #1
   138c0:	orr	r3, r3, r8, lsr #31
   138c4:	lsl	r8, r8, #1
   138c8:	str	r3, [sp, #264]	; 0x108
   138cc:	orr	r3, r8, r4, lsr #31
   138d0:	ldr	r1, [sp, #144]	; 0x90
   138d4:	str	r3, [sp, #220]	; 0xdc
   138d8:	ldr	r3, [sp, #44]	; 0x2c
   138dc:	ldr	r0, [sp, #148]	; 0x94
   138e0:	ldr	ip, [sp, #256]	; 0x100
   138e4:	adds	r1, r3, r1
   138e8:	ldr	r3, [sp, #48]	; 0x30
   138ec:	adc	sl, r3, r0
   138f0:	ldr	r0, [sp, #204]	; 0xcc
   138f4:	ldr	r3, [sp, #256]	; 0x100
   138f8:	adds	r1, r1, r3
   138fc:	ldr	r3, [sp, #260]	; 0x104
   13900:	adc	sl, sl, r3
   13904:	ldr	r3, [sp, #240]	; 0xf0
   13908:	eor	r6, sl, r3
   1390c:	ldr	r3, [sp, #236]	; 0xec
   13910:	eor	r4, r1, r3
   13914:	ldr	r3, [sp, #200]	; 0xc8
   13918:	adds	r3, r3, r6
   1391c:	eor	r7, r3, ip
   13920:	ldr	ip, [sp, #260]	; 0x104
   13924:	adc	r0, r0, r4
   13928:	lsr	fp, r7, #24
   1392c:	eor	r5, r0, ip
   13930:	orr	ip, fp, r5, lsl #8
   13934:	lsr	r5, r5, #24
   13938:	orr	r8, r5, r7, lsl #8
   1393c:	ldr	r5, [sp, #28]
   13940:	adds	r1, r5, r1
   13944:	ldr	r5, [sp, #32]
   13948:	adc	sl, r5, sl
   1394c:	adds	r1, r1, ip
   13950:	ldr	r5, [sp, #156]	; 0x9c
   13954:	str	r1, [sp, #144]	; 0x90
   13958:	adc	r1, sl, r8
   1395c:	str	r1, [sp, #148]	; 0x94
   13960:	ldr	r1, [sp, #144]	; 0x90
   13964:	eor	r6, r6, r1
   13968:	ldr	r1, [sp, #148]	; 0x94
   1396c:	eor	r4, r4, r1
   13970:	lsr	r1, r6, #16
   13974:	orr	r1, r1, r4, lsl #16
   13978:	lsr	r4, r4, #16
   1397c:	adds	r3, r3, r1
   13980:	orr	fp, r4, r6, lsl #16
   13984:	str	r1, [sp, #236]	; 0xec
   13988:	eor	ip, ip, r3
   1398c:	adc	r0, r0, fp
   13990:	eor	r8, r8, r0
   13994:	lsl	r1, r8, #1
   13998:	orr	r4, r1, ip, lsr #31
   1399c:	ldr	r1, [sp, #92]	; 0x5c
   139a0:	lsl	ip, ip, #1
   139a4:	orr	r6, ip, r8, lsr #31
   139a8:	ldr	ip, [sp, #152]	; 0x98
   139ac:	adds	r1, r1, ip
   139b0:	ldr	ip, [sp, #96]	; 0x60
   139b4:	adc	sl, ip, r5
   139b8:	ldr	ip, [sp, #228]	; 0xe4
   139bc:	adds	r1, r1, r6
   139c0:	adc	sl, sl, r4
   139c4:	eor	r7, sl, r9
   139c8:	adds	r2, r2, r7
   139cc:	eor	r5, r1, ip
   139d0:	eor	ip, r2, r6
   139d4:	adc	lr, lr, r5
   139d8:	lsr	r9, ip, #24
   139dc:	eor	r6, lr, r4
   139e0:	orr	r4, r9, r6, lsl #8
   139e4:	lsr	r6, r6, #24
   139e8:	orr	r8, r6, ip, lsl #8
   139ec:	ldr	ip, [sp, #68]	; 0x44
   139f0:	adds	r1, ip, r1
   139f4:	ldr	ip, [sp, #72]	; 0x48
   139f8:	adc	sl, ip, sl
   139fc:	adds	r1, r1, r4
   13a00:	str	r1, [sp, #152]	; 0x98
   13a04:	adc	r1, sl, r8
   13a08:	str	r1, [sp, #156]	; 0x9c
   13a0c:	ldr	r1, [sp, #152]	; 0x98
   13a10:	eor	r7, r7, r1
   13a14:	ldr	r1, [sp, #156]	; 0x9c
   13a18:	eor	r5, r5, r1
   13a1c:	lsr	r1, r7, #16
   13a20:	orr	r1, r1, r5, lsl #16
   13a24:	lsr	r5, r5, #16
   13a28:	str	r1, [sp, #228]	; 0xe4
   13a2c:	orr	r1, r5, r7, lsl #16
   13a30:	str	r1, [sp, #240]	; 0xf0
   13a34:	ldr	ip, [sp, #172]	; 0xac
   13a38:	ldr	r1, [sp, #228]	; 0xe4
   13a3c:	adds	r2, r2, r1
   13a40:	ldr	r1, [sp, #168]	; 0xa8
   13a44:	str	r2, [sp, #192]	; 0xc0
   13a48:	ldr	r2, [sp, #240]	; 0xf0
   13a4c:	adc	r2, lr, r2
   13a50:	ldr	lr, [sp, #248]	; 0xf8
   13a54:	str	r2, [sp, #196]	; 0xc4
   13a58:	ldr	r2, [sp, #192]	; 0xc0
   13a5c:	eor	r4, r4, r2
   13a60:	ldr	r2, [sp, #196]	; 0xc4
   13a64:	eor	r8, r8, r2
   13a68:	lsl	r2, r8, #1
   13a6c:	orr	r2, r2, r4, lsr #31
   13a70:	lsl	r4, r4, #1
   13a74:	str	r2, [sp, #260]	; 0x104
   13a78:	orr	r2, r4, r8, lsr #31
   13a7c:	str	r2, [sp, #256]	; 0x100
   13a80:	ldr	r2, [sp, #100]	; 0x64
   13a84:	adds	r2, r2, r1
   13a88:	ldr	r1, [sp, #104]	; 0x68
   13a8c:	adc	r5, r1, ip
   13a90:	ldr	r1, [sp, #244]	; 0xf4
   13a94:	ldr	ip, [sp, #244]	; 0xf4
   13a98:	adds	r2, r2, r1
   13a9c:	ldr	r1, [sp, #248]	; 0xf8
   13aa0:	adc	r5, r5, r1
   13aa4:	ldr	r1, [sp, #212]	; 0xd4
   13aa8:	eor	r4, r5, r1
   13aac:	ldr	r1, [sp, #208]	; 0xd0
   13ab0:	adds	r3, r3, r4
   13ab4:	eor	ip, r3, ip
   13ab8:	lsr	r8, ip, #24
   13abc:	eor	r1, r2, r1
   13ac0:	adc	r0, r0, r1
   13ac4:	eor	lr, r0, lr
   13ac8:	orr	r6, r8, lr, lsl #8
   13acc:	lsr	lr, lr, #24
   13ad0:	orr	r7, lr, ip, lsl #8
   13ad4:	ldr	ip, [sp, #4]
   13ad8:	adds	r2, ip, r2
   13adc:	b	13b00 <__assert_fail@plt+0x2944>
   13ae0:	bvs	28d484 <optarg@@GLIBC_2.4+0x2602fc>
   13ae4:	vtbl.8	d12, {d12-d13}, d8
   13ae8:	bllt	19ff504 <optarg@@GLIBC_2.4+0x19d237c>
   13aec:	strbhi	sl, [sl], #1851	; 0x73b
   13af0:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13af4:	vcmla.f32	d15, d4, d27[0], #90
   13af8:	strbge	pc, [pc, #-1338]	; 135c6 <__assert_fail@plt+0x240a>	; <UNPREDICTABLE>
   13afc:	svcpl	0x001d36f1
   13b00:	ldr	ip, [sp, #8]
   13b04:	adc	r5, ip, r5
   13b08:	adds	r2, r2, r6
   13b0c:	str	r2, [sp, #168]	; 0xa8
   13b10:	adc	r2, r5, r7
   13b14:	str	r2, [sp, #172]	; 0xac
   13b18:	ldr	r2, [sp, #168]	; 0xa8
   13b1c:	eor	r4, r4, r2
   13b20:	ldr	r2, [sp, #172]	; 0xac
   13b24:	eor	r1, r1, r2
   13b28:	lsr	r2, r4, #16
   13b2c:	orr	r2, r2, r1, lsl #16
   13b30:	lsr	r1, r1, #16
   13b34:	str	r2, [sp, #208]	; 0xd0
   13b38:	orr	r2, r1, r4, lsl #16
   13b3c:	str	r2, [sp, #212]	; 0xd4
   13b40:	ldr	r2, [sp, #208]	; 0xd0
   13b44:	adds	r3, r3, r2
   13b48:	str	r3, [sp, #200]	; 0xc8
   13b4c:	ldr	r3, [sp, #212]	; 0xd4
   13b50:	adc	r3, r0, r3
   13b54:	str	r3, [sp, #204]	; 0xcc
   13b58:	ldr	r3, [sp, #200]	; 0xc8
   13b5c:	ldr	r2, [sp, #204]	; 0xcc
   13b60:	eor	r3, r3, r6
   13b64:	lsl	r6, r3, #1
   13b68:	eor	r7, r7, r2
   13b6c:	lsl	r2, r7, #1
   13b70:	orr	r6, r6, r7, lsr #31
   13b74:	orr	r2, r2, r3, lsr #31
   13b78:	str	r2, [sp, #244]	; 0xf4
   13b7c:	ldr	r3, [sp, #44]	; 0x2c
   13b80:	ldr	r2, [sp, #160]	; 0xa0
   13b84:	ldr	r1, [sp, #164]	; 0xa4
   13b88:	adds	r3, r3, r2
   13b8c:	ldr	r2, [sp, #48]	; 0x30
   13b90:	adc	r7, r2, r1
   13b94:	ldr	r1, [sp, #180]	; 0xb4
   13b98:	ldr	r2, [sp, #232]	; 0xe8
   13b9c:	adds	r3, r3, r2
   13ba0:	ldr	r2, [sp, #252]	; 0xfc
   13ba4:	adc	r7, r7, r2
   13ba8:	ldr	r2, [sp, #236]	; 0xec
   13bac:	eor	r4, r7, fp
   13bb0:	eor	r0, r3, r2
   13bb4:	ldr	r2, [sp, #176]	; 0xb0
   13bb8:	adds	r2, r2, r4
   13bbc:	adc	lr, r1, r0
   13bc0:	ldr	r1, [sp, #232]	; 0xe8
   13bc4:	eor	r8, r2, r1
   13bc8:	ldr	r1, [sp, #252]	; 0xfc
   13bcc:	lsr	r9, r8, #24
   13bd0:	eor	ip, lr, r1
   13bd4:	orr	r1, r9, ip, lsl #8
   13bd8:	lsr	ip, ip, #24
   13bdc:	orr	r5, ip, r8, lsl #8
   13be0:	ldr	ip, [sp, #20]
   13be4:	adds	r3, ip, r3
   13be8:	ldr	ip, [sp, #24]
   13bec:	adc	r7, ip, r7
   13bf0:	adds	r3, r3, r1
   13bf4:	str	r3, [sp, #160]	; 0xa0
   13bf8:	adc	r3, r7, r5
   13bfc:	str	r3, [sp, #164]	; 0xa4
   13c00:	ldr	r3, [sp, #160]	; 0xa0
   13c04:	eor	r4, r4, r3
   13c08:	ldr	r3, [sp, #164]	; 0xa4
   13c0c:	eor	r0, r0, r3
   13c10:	lsr	r3, r4, #16
   13c14:	orr	r3, r3, r0, lsl #16
   13c18:	lsr	r0, r0, #16
   13c1c:	str	r3, [sp, #232]	; 0xe8
   13c20:	orr	r3, r0, r4, lsl #16
   13c24:	ldr	r0, [sp, #148]	; 0x94
   13c28:	str	r3, [sp, #236]	; 0xec
   13c2c:	ldr	r3, [sp, #232]	; 0xe8
   13c30:	adds	r2, r2, r3
   13c34:	ldr	r3, [sp, #236]	; 0xec
   13c38:	eor	r1, r1, r2
   13c3c:	adc	lr, lr, r3
   13c40:	eor	r5, r5, lr
   13c44:	lsl	r3, r5, #1
   13c48:	orr	r3, r3, r1, lsr #31
   13c4c:	lsl	r1, r1, #1
   13c50:	str	r3, [sp, #252]	; 0xfc
   13c54:	orr	r3, r1, r5, lsr #31
   13c58:	ldr	r1, [sp, #144]	; 0x90
   13c5c:	str	r3, [sp, #248]	; 0xf8
   13c60:	ldr	r3, [sp, #124]	; 0x7c
   13c64:	adds	r1, r3, r1
   13c68:	ldr	r3, [sp, #128]	; 0x80
   13c6c:	adc	sl, r3, r0
   13c70:	ldr	r3, [sp, #220]	; 0xdc
   13c74:	adds	r1, r1, r3
   13c78:	ldr	r3, [sp, #264]	; 0x108
   13c7c:	adc	sl, sl, r3
   13c80:	ldr	r3, [sp, #224]	; 0xe0
   13c84:	eor	r7, sl, r3
   13c88:	ldr	r3, [sp, #216]	; 0xd8
   13c8c:	eor	r4, r1, r3
   13c90:	ldr	r3, [sp, #184]	; 0xb8
   13c94:	ldr	r0, [sp, #188]	; 0xbc
   13c98:	ldr	ip, [sp, #220]	; 0xdc
   13c9c:	adds	r3, r3, r7
   13ca0:	adc	r0, r0, r4
   13ca4:	eor	r8, r3, ip
   13ca8:	ldr	ip, [sp, #264]	; 0x108
   13cac:	lsr	fp, r8, #24
   13cb0:	eor	r5, r0, ip
   13cb4:	orr	ip, fp, r5, lsl #8
   13cb8:	lsr	r5, r5, #24
   13cbc:	orr	r9, r5, r8, lsl #8
   13cc0:	ldr	r5, [sp, #108]	; 0x6c
   13cc4:	adds	r1, r5, r1
   13cc8:	ldr	r5, [sp, #112]	; 0x70
   13ccc:	adc	sl, r5, sl
   13cd0:	adds	r1, r1, ip
   13cd4:	str	r1, [sp, #144]	; 0x90
   13cd8:	adc	r1, sl, r9
   13cdc:	str	r1, [sp, #148]	; 0x94
   13ce0:	ldr	r1, [sp, #144]	; 0x90
   13ce4:	eor	r7, r7, r1
   13ce8:	ldr	r1, [sp, #148]	; 0x94
   13cec:	eor	r4, r4, r1
   13cf0:	lsr	r1, r7, #16
   13cf4:	orr	r8, r1, r4, lsl #16
   13cf8:	lsr	r4, r4, #16
   13cfc:	adds	r3, r3, r8
   13d00:	orr	sl, r4, r7, lsl #16
   13d04:	eor	ip, ip, r3
   13d08:	ldr	r4, [sp, #156]	; 0x9c
   13d0c:	adc	r0, r0, sl
   13d10:	eor	r9, r9, r0
   13d14:	lsl	r1, r9, #1
   13d18:	orr	r1, r1, ip, lsr #31
   13d1c:	lsl	ip, ip, #1
   13d20:	orr	fp, ip, r9, lsr #31
   13d24:	str	r1, [sp, #216]	; 0xd8
   13d28:	ldr	r1, [sp, #84]	; 0x54
   13d2c:	ldr	ip, [sp, #152]	; 0x98
   13d30:	adds	r1, r1, ip
   13d34:	ldr	ip, [sp, #88]	; 0x58
   13d38:	adc	r9, ip, r4
   13d3c:	ldr	ip, [sp, #244]	; 0xf4
   13d40:	adds	r1, r1, r6
   13d44:	eor	r5, r1, r8
   13d48:	adc	r9, r9, ip
   13d4c:	eor	r7, r9, sl
   13d50:	adds	r2, r2, r7
   13d54:	eor	r6, r6, r2
   13d58:	adc	lr, lr, r5
   13d5c:	lsr	sl, r6, #24
   13d60:	eor	r4, lr, ip
   13d64:	orr	ip, sl, r4, lsl #8
   13d68:	lsr	r4, r4, #24
   13d6c:	orr	r8, r4, r6, lsl #8
   13d70:	ldr	r4, [sp, #116]	; 0x74
   13d74:	adds	r1, r4, r1
   13d78:	ldr	r4, [sp, #120]	; 0x78
   13d7c:	adc	r9, r4, r9
   13d80:	adds	r1, r1, ip
   13d84:	str	r1, [sp, #152]	; 0x98
   13d88:	adc	r1, r9, r8
   13d8c:	str	r1, [sp, #156]	; 0x9c
   13d90:	ldr	r1, [sp, #152]	; 0x98
   13d94:	eor	r7, r7, r1
   13d98:	ldr	r1, [sp, #156]	; 0x9c
   13d9c:	eor	r5, r5, r1
   13da0:	lsr	r1, r7, #16
   13da4:	orr	r1, r1, r5, lsl #16
   13da8:	lsr	r5, r5, #16
   13dac:	str	r1, [sp, #220]	; 0xdc
   13db0:	orr	r1, r5, r7, lsl #16
   13db4:	str	r1, [sp, #224]	; 0xe0
   13db8:	ldr	r1, [sp, #220]	; 0xdc
   13dbc:	adds	r2, r2, r1
   13dc0:	str	r2, [sp, #176]	; 0xb0
   13dc4:	ldr	r2, [sp, #224]	; 0xe0
   13dc8:	adc	r2, lr, r2
   13dcc:	str	r2, [sp, #180]	; 0xb4
   13dd0:	ldr	r2, [sp, #176]	; 0xb0
   13dd4:	eor	ip, ip, r2
   13dd8:	ldr	r2, [sp, #180]	; 0xb4
   13ddc:	eor	r8, r8, r2
   13de0:	lsl	r2, r8, #1
   13de4:	orr	r2, r2, ip, lsr #31
   13de8:	lsl	ip, ip, #1
   13dec:	str	r2, [sp, #264]	; 0x108
   13df0:	orr	r2, ip, r8, lsr #31
   13df4:	str	r2, [sp, #244]	; 0xf4
   13df8:	ldr	r2, [sp, #28]
   13dfc:	ldr	r1, [sp, #168]	; 0xa8
   13e00:	ldr	ip, [sp, #172]	; 0xac
   13e04:	adds	r2, r2, r1
   13e08:	ldr	r1, [sp, #32]
   13e0c:	adc	r5, r1, ip
   13e10:	ldr	r1, [sp, #248]	; 0xf8
   13e14:	adds	r2, r2, r1
   13e18:	ldr	r1, [sp, #252]	; 0xfc
   13e1c:	adc	r5, r5, r1
   13e20:	ldr	r1, [sp, #240]	; 0xf0
   13e24:	eor	ip, r5, r1
   13e28:	ldr	r1, [sp, #228]	; 0xe4
   13e2c:	adds	r3, r3, ip
   13e30:	eor	r9, r2, r1
   13e34:	ldr	r1, [sp, #248]	; 0xf8
   13e38:	adc	r0, r0, r9
   13e3c:	eor	r6, r3, r1
   13e40:	ldr	r1, [sp, #252]	; 0xfc
   13e44:	lsr	r7, r6, #24
   13e48:	eor	lr, r0, r1
   13e4c:	orr	r1, r7, lr, lsl #8
   13e50:	lsr	lr, lr, #24
   13e54:	orr	r4, lr, r6, lsl #8
   13e58:	ldr	lr, [sp, #52]	; 0x34
   13e5c:	adds	r2, lr, r2
   13e60:	ldr	lr, [sp, #56]	; 0x38
   13e64:	adc	r5, lr, r5
   13e68:	adds	r2, r2, r1
   13e6c:	str	r2, [sp, #168]	; 0xa8
   13e70:	adc	r2, r5, r4
   13e74:	str	r2, [sp, #172]	; 0xac
   13e78:	ldr	r2, [sp, #168]	; 0xa8
   13e7c:	eor	ip, ip, r2
   13e80:	ldr	r2, [sp, #172]	; 0xac
   13e84:	lsr	lr, ip, #16
   13e88:	eor	r2, r2, r9
   13e8c:	orr	lr, lr, r2, lsl #16
   13e90:	lsr	r9, r2, #16
   13e94:	ldr	r2, [sp, #160]	; 0xa0
   13e98:	adds	r3, r3, lr
   13e9c:	orr	r9, r9, ip, lsl #16
   13ea0:	str	r3, [sp, #184]	; 0xb8
   13ea4:	adc	r3, r0, r9
   13ea8:	ldr	r0, [sp, #196]	; 0xc4
   13eac:	str	r3, [sp, #188]	; 0xbc
   13eb0:	ldr	r3, [sp, #184]	; 0xb8
   13eb4:	str	lr, [sp, #228]	; 0xe4
   13eb8:	eor	r1, r1, r3
   13ebc:	ldr	r3, [sp, #188]	; 0xbc
   13ec0:	eor	r4, r4, r3
   13ec4:	lsl	r3, r4, #1
   13ec8:	orr	r3, r3, r1, lsr #31
   13ecc:	lsl	r1, r1, #1
   13ed0:	str	r3, [sp, #248]	; 0xf8
   13ed4:	orr	r3, r1, r4, lsr #31
   13ed8:	ldr	r1, [sp, #164]	; 0xa4
   13edc:	str	r3, [sp, #240]	; 0xf0
   13ee0:	ldr	r3, [sp, #60]	; 0x3c
   13ee4:	adds	r3, r3, r2
   13ee8:	ldr	r2, [sp, #64]	; 0x40
   13eec:	adc	r6, r2, r1
   13ef0:	ldr	r2, [sp, #216]	; 0xd8
   13ef4:	adds	r3, r3, fp
   13ef8:	adc	r6, r6, r2
   13efc:	ldr	r2, [sp, #212]	; 0xd4
   13f00:	eor	r5, r6, r2
   13f04:	ldr	r2, [sp, #208]	; 0xd0
   13f08:	eor	r1, r3, r2
   13f0c:	ldr	r2, [sp, #192]	; 0xc0
   13f10:	adds	r2, r2, r5
   13f14:	adc	lr, r0, r1
   13f18:	ldr	r0, [sp, #216]	; 0xd8
   13f1c:	eor	fp, fp, r2
   13f20:	lsr	ip, fp, #24
   13f24:	eor	r0, lr, r0
   13f28:	orr	r8, ip, r0, lsl #8
   13f2c:	lsr	r0, r0, #24
   13f30:	orr	r4, r0, fp, lsl #8
   13f34:	ldr	r0, [sp, #12]
   13f38:	ldr	ip, [sp, #256]	; 0x100
   13f3c:	adds	r3, r0, r3
   13f40:	ldr	r0, [sp, #16]
   13f44:	adc	r6, r0, r6
   13f48:	adds	r3, r3, r8
   13f4c:	ldr	r0, [sp, #148]	; 0x94
   13f50:	str	r3, [sp, #160]	; 0xa0
   13f54:	adc	r3, r6, r4
   13f58:	str	r3, [sp, #164]	; 0xa4
   13f5c:	ldr	r3, [sp, #160]	; 0xa0
   13f60:	eor	r5, r5, r3
   13f64:	ldr	r3, [sp, #164]	; 0xa4
   13f68:	eor	r1, r1, r3
   13f6c:	lsr	r3, r5, #16
   13f70:	orr	r3, r3, r1, lsl #16
   13f74:	lsr	r1, r1, #16
   13f78:	str	r3, [sp, #208]	; 0xd0
   13f7c:	orr	r3, r1, r5, lsl #16
   13f80:	ldr	r1, [sp, #144]	; 0x90
   13f84:	str	r3, [sp, #212]	; 0xd4
   13f88:	ldr	r3, [sp, #208]	; 0xd0
   13f8c:	adds	r2, r2, r3
   13f90:	ldr	r3, [sp, #212]	; 0xd4
   13f94:	eor	r8, r8, r2
   13f98:	adc	lr, lr, r3
   13f9c:	eor	r4, r4, lr
   13fa0:	lsl	r3, r4, #1
   13fa4:	orr	r3, r3, r8, lsr #31
   13fa8:	lsl	r8, r8, #1
   13fac:	str	r3, [sp, #252]	; 0xfc
   13fb0:	orr	r3, r8, r4, lsr #31
   13fb4:	str	r3, [sp, #216]	; 0xd8
   13fb8:	ldr	r3, [sp, #76]	; 0x4c
   13fbc:	adds	r1, r3, r1
   13fc0:	ldr	r3, [sp, #80]	; 0x50
   13fc4:	adc	sl, r3, r0
   13fc8:	ldr	r0, [sp, #204]	; 0xcc
   13fcc:	ldr	r3, [sp, #256]	; 0x100
   13fd0:	adds	r1, r1, r3
   13fd4:	ldr	r3, [sp, #260]	; 0x104
   13fd8:	adc	sl, sl, r3
   13fdc:	ldr	r3, [sp, #236]	; 0xec
   13fe0:	eor	r7, sl, r3
   13fe4:	ldr	r3, [sp, #232]	; 0xe8
   13fe8:	eor	r5, r1, r3
   13fec:	ldr	r3, [sp, #200]	; 0xc8
   13ff0:	adds	r3, r3, r7
   13ff4:	eor	r4, r3, ip
   13ff8:	ldr	ip, [sp, #260]	; 0x104
   13ffc:	adc	r0, r0, r5
   14000:	lsr	fp, r4, #24
   14004:	eor	r6, r0, ip
   14008:	orr	ip, fp, r6, lsl #8
   1400c:	lsr	r6, r6, #24
   14010:	orr	r8, r6, r4, lsl #8
   14014:	ldr	r4, [sp, #36]	; 0x24
   14018:	adds	r1, r4, r1
   1401c:	ldr	r4, [sp, #40]	; 0x28
   14020:	adc	sl, r4, sl
   14024:	adds	r1, r1, ip
   14028:	str	r1, [sp, #144]	; 0x90
   1402c:	adc	r1, sl, r8
   14030:	str	r1, [sp, #148]	; 0x94
   14034:	ldr	r1, [sp, #144]	; 0x90
   14038:	eor	r7, r7, r1
   1403c:	ldr	r1, [sp, #148]	; 0x94
   14040:	eor	r5, r5, r1
   14044:	lsr	r1, r7, #16
   14048:	orr	r1, r1, r5, lsl #16
   1404c:	lsr	r5, r5, #16
   14050:	str	r1, [sp, #232]	; 0xe8
   14054:	orr	r1, r5, r7, lsl #16
   14058:	str	r1, [sp, #236]	; 0xec
   1405c:	ldr	r1, [sp, #232]	; 0xe8
   14060:	ldr	r5, [sp, #156]	; 0x9c
   14064:	adds	r3, r3, r1
   14068:	ldr	r1, [sp, #236]	; 0xec
   1406c:	eor	ip, ip, r3
   14070:	adc	r0, r0, r1
   14074:	eor	r8, r8, r0
   14078:	lsl	r1, r8, #1
   1407c:	orr	r4, r1, ip, lsr #31
   14080:	ldr	r1, [sp, #60]	; 0x3c
   14084:	lsl	ip, ip, #1
   14088:	orr	fp, ip, r8, lsr #31
   1408c:	ldr	ip, [sp, #152]	; 0x98
   14090:	adds	r1, r1, ip
   14094:	ldr	ip, [sp, #64]	; 0x40
   14098:	adc	sl, ip, r5
   1409c:	ldr	ip, [sp, #228]	; 0xe4
   140a0:	adds	r1, r1, fp
   140a4:	adc	sl, sl, r4
   140a8:	eor	r7, sl, r9
   140ac:	adds	r2, r2, r7
   140b0:	eor	fp, fp, r2
   140b4:	eor	r5, r1, ip
   140b8:	lsr	ip, fp, #24
   140bc:	adc	lr, lr, r5
   140c0:	eor	r6, lr, r4
   140c4:	orr	r4, ip, r6, lsl #8
   140c8:	ldr	ip, [sp, #76]	; 0x4c
   140cc:	lsr	r6, r6, #24
   140d0:	orr	r8, r6, fp, lsl #8
   140d4:	adds	r1, ip, r1
   140d8:	ldr	ip, [sp, #80]	; 0x50
   140dc:	adc	sl, ip, sl
   140e0:	adds	r1, r1, r4
   140e4:	ldr	ip, [sp, #172]	; 0xac
   140e8:	str	r1, [sp, #152]	; 0x98
   140ec:	adc	r1, sl, r8
   140f0:	str	r1, [sp, #156]	; 0x9c
   140f4:	ldr	r1, [sp, #152]	; 0x98
   140f8:	eor	r7, r7, r1
   140fc:	ldr	r1, [sp, #156]	; 0x9c
   14100:	eor	r5, r5, r1
   14104:	lsr	r1, r7, #16
   14108:	orr	r1, r1, r5, lsl #16
   1410c:	lsr	r5, r5, #16
   14110:	str	r1, [sp, #228]	; 0xe4
   14114:	orr	r1, r5, r7, lsl #16
   14118:	str	r1, [sp, #256]	; 0x100
   1411c:	ldr	r1, [sp, #228]	; 0xe4
   14120:	adds	r2, r2, r1
   14124:	ldr	r1, [sp, #168]	; 0xa8
   14128:	str	r2, [sp, #192]	; 0xc0
   1412c:	ldr	r2, [sp, #256]	; 0x100
   14130:	adc	r2, lr, r2
   14134:	str	r2, [sp, #196]	; 0xc4
   14138:	ldr	r2, [sp, #192]	; 0xc0
   1413c:	eor	r4, r4, r2
   14140:	ldr	r2, [sp, #196]	; 0xc4
   14144:	eor	r8, r8, r2
   14148:	lsl	r2, r8, #1
   1414c:	orr	r2, r2, r4, lsr #31
   14150:	lsl	r4, r4, #1
   14154:	str	r2, [sp, #268]	; 0x10c
   14158:	orr	r2, r4, r8, lsr #31
   1415c:	str	r2, [sp, #260]	; 0x104
   14160:	ldr	r2, [sp, #28]
   14164:	adds	r2, r2, r1
   14168:	ldr	r1, [sp, #32]
   1416c:	adc	r5, r1, ip
   14170:	ldr	r1, [sp, #244]	; 0xf4
   14174:	ldr	ip, [sp, #244]	; 0xf4
   14178:	adds	r2, r2, r1
   1417c:	ldr	r1, [sp, #264]	; 0x108
   14180:	adc	r5, r5, r1
   14184:	ldr	r1, [sp, #212]	; 0xd4
   14188:	eor	r4, r5, r1
   1418c:	ldr	r1, [sp, #208]	; 0xd0
   14190:	adds	r3, r3, r4
   14194:	ldr	lr, [sp, #264]	; 0x108
   14198:	eor	ip, r3, ip
   1419c:	lsr	r8, ip, #24
   141a0:	eor	r1, r2, r1
   141a4:	adc	r0, r0, r1
   141a8:	eor	lr, r0, lr
   141ac:	orr	r6, r8, lr, lsl #8
   141b0:	lsr	lr, lr, #24
   141b4:	orr	r7, lr, ip, lsl #8
   141b8:	ldr	ip, [sp, #12]
   141bc:	adds	r2, ip, r2
   141c0:	ldr	ip, [sp, #16]
   141c4:	adc	r5, ip, r5
   141c8:	adds	r2, r2, r6
   141cc:	str	r2, [sp, #168]	; 0xa8
   141d0:	adc	r2, r5, r7
   141d4:	str	r2, [sp, #172]	; 0xac
   141d8:	ldr	r2, [sp, #168]	; 0xa8
   141dc:	eor	r4, r4, r2
   141e0:	ldr	r2, [sp, #172]	; 0xac
   141e4:	eor	r1, r1, r2
   141e8:	lsr	r2, r4, #16
   141ec:	orr	r2, r2, r1, lsl #16
   141f0:	lsr	r1, r1, #16
   141f4:	str	r2, [sp, #208]	; 0xd0
   141f8:	orr	r2, r1, r4, lsl #16
   141fc:	ldr	r1, [sp, #164]	; 0xa4
   14200:	str	r2, [sp, #212]	; 0xd4
   14204:	ldr	r2, [sp, #208]	; 0xd0
   14208:	adds	r3, r3, r2
   1420c:	str	r3, [sp, #200]	; 0xc8
   14210:	ldr	r3, [sp, #212]	; 0xd4
   14214:	adc	r3, r0, r3
   14218:	str	r3, [sp, #204]	; 0xcc
   1421c:	ldr	r3, [sp, #200]	; 0xc8
   14220:	ldr	r2, [sp, #204]	; 0xcc
   14224:	eor	r3, r3, r6
   14228:	lsl	r6, r3, #1
   1422c:	eor	r7, r7, r2
   14230:	lsl	r2, r7, #1
   14234:	orr	r6, r6, r7, lsr #31
   14238:	orr	r2, r2, r3, lsr #31
   1423c:	ldr	r3, [sp, #108]	; 0x6c
   14240:	str	r2, [sp, #244]	; 0xf4
   14244:	ldr	r2, [sp, #160]	; 0xa0
   14248:	adds	r3, r3, r2
   1424c:	ldr	r2, [sp, #112]	; 0x70
   14250:	adc	r7, r2, r1
   14254:	ldr	r1, [sp, #180]	; 0xb4
   14258:	ldr	r2, [sp, #240]	; 0xf0
   1425c:	adds	r3, r3, r2
   14260:	ldr	r2, [sp, #248]	; 0xf8
   14264:	adc	r7, r7, r2
   14268:	ldr	r2, [sp, #236]	; 0xec
   1426c:	eor	r4, r7, r2
   14270:	ldr	r2, [sp, #232]	; 0xe8
   14274:	eor	r0, r3, r2
   14278:	ldr	r2, [sp, #176]	; 0xb0
   1427c:	adds	r2, r2, r4
   14280:	adc	lr, r1, r0
   14284:	ldr	r1, [sp, #240]	; 0xf0
   14288:	eor	r8, r2, r1
   1428c:	ldr	r1, [sp, #248]	; 0xf8
   14290:	lsr	r9, r8, #24
   14294:	eor	ip, lr, r1
   14298:	orr	r1, r9, ip, lsl #8
   1429c:	lsr	ip, ip, #24
   142a0:	orr	r5, ip, r8, lsl #8
   142a4:	ldr	ip, [sp, #100]	; 0x64
   142a8:	adds	r3, ip, r3
   142ac:	ldr	ip, [sp, #104]	; 0x68
   142b0:	adc	r7, ip, r7
   142b4:	adds	r3, r3, r1
   142b8:	str	r3, [sp, #160]	; 0xa0
   142bc:	adc	r3, r7, r5
   142c0:	str	r3, [sp, #164]	; 0xa4
   142c4:	ldr	r3, [sp, #160]	; 0xa0
   142c8:	ldr	ip, [sp, #216]	; 0xd8
   142cc:	eor	r4, r4, r3
   142d0:	ldr	r3, [sp, #164]	; 0xa4
   142d4:	eor	r0, r0, r3
   142d8:	lsr	r3, r4, #16
   142dc:	orr	r3, r3, r0, lsl #16
   142e0:	lsr	r0, r0, #16
   142e4:	str	r3, [sp, #232]	; 0xe8
   142e8:	orr	r3, r0, r4, lsl #16
   142ec:	ldr	r0, [sp, #148]	; 0x94
   142f0:	str	r3, [sp, #236]	; 0xec
   142f4:	ldr	r3, [sp, #232]	; 0xe8
   142f8:	adds	r2, r2, r3
   142fc:	ldr	r3, [sp, #236]	; 0xec
   14300:	eor	r1, r1, r2
   14304:	adc	lr, lr, r3
   14308:	eor	r5, r5, lr
   1430c:	lsl	r3, r5, #1
   14310:	orr	r3, r3, r1, lsr #31
   14314:	lsl	r1, r1, #1
   14318:	str	r3, [sp, #248]	; 0xf8
   1431c:	orr	r3, r1, r5, lsr #31
   14320:	ldr	r1, [sp, #144]	; 0x90
   14324:	str	r3, [sp, #240]	; 0xf0
   14328:	ldr	r3, [sp, #92]	; 0x5c
   1432c:	adds	r1, r3, r1
   14330:	ldr	r3, [sp, #96]	; 0x60
   14334:	adc	sl, r3, r0
   14338:	ldr	r0, [sp, #188]	; 0xbc
   1433c:	ldr	r3, [sp, #216]	; 0xd8
   14340:	adds	r1, r1, r3
   14344:	ldr	r3, [sp, #252]	; 0xfc
   14348:	adc	sl, sl, r3
   1434c:	ldr	r3, [sp, #224]	; 0xe0
   14350:	eor	r7, sl, r3
   14354:	ldr	r3, [sp, #220]	; 0xdc
   14358:	eor	r4, r1, r3
   1435c:	ldr	r3, [sp, #184]	; 0xb8
   14360:	adds	r3, r3, r7
   14364:	eor	r8, r3, ip
   14368:	ldr	ip, [sp, #252]	; 0xfc
   1436c:	adc	r0, r0, r4
   14370:	lsr	fp, r8, #24
   14374:	eor	r5, r0, ip
   14378:	orr	ip, fp, r5, lsl #8
   1437c:	lsr	r5, r5, #24
   14380:	orr	r9, r5, r8, lsl #8
   14384:	ldr	r5, [sp, #116]	; 0x74
   14388:	adds	r1, r5, r1
   1438c:	ldr	r5, [sp, #120]	; 0x78
   14390:	adc	sl, r5, sl
   14394:	adds	r1, r1, ip
   14398:	str	r1, [sp, #144]	; 0x90
   1439c:	adc	r1, sl, r9
   143a0:	str	r1, [sp, #148]	; 0x94
   143a4:	ldr	r1, [sp, #144]	; 0x90
   143a8:	eor	r7, r7, r1
   143ac:	ldr	r1, [sp, #148]	; 0x94
   143b0:	eor	r4, r4, r1
   143b4:	lsr	r1, r7, #16
   143b8:	orr	r8, r1, r4, lsl #16
   143bc:	lsr	r4, r4, #16
   143c0:	adds	r3, r3, r8
   143c4:	orr	sl, r4, r7, lsl #16
   143c8:	eor	ip, ip, r3
   143cc:	ldr	r4, [sp, #156]	; 0x9c
   143d0:	adc	r0, r0, sl
   143d4:	eor	r9, r9, r0
   143d8:	lsl	r1, r9, #1
   143dc:	orr	r1, r1, ip, lsr #31
   143e0:	lsl	ip, ip, #1
   143e4:	orr	fp, ip, r9, lsr #31
   143e8:	str	r1, [sp, #216]	; 0xd8
   143ec:	ldr	r1, [sp, #20]
   143f0:	ldr	ip, [sp, #152]	; 0x98
   143f4:	adds	r1, r1, ip
   143f8:	ldr	ip, [sp, #24]
   143fc:	adc	r9, ip, r4
   14400:	ldr	ip, [sp, #244]	; 0xf4
   14404:	adds	r1, r1, r6
   14408:	eor	r5, r1, r8
   1440c:	adc	r9, r9, ip
   14410:	eor	r7, r9, sl
   14414:	adds	r2, r2, r7
   14418:	eor	r6, r6, r2
   1441c:	adc	lr, lr, r5
   14420:	lsr	sl, r6, #24
   14424:	eor	r4, lr, ip
   14428:	orr	ip, sl, r4, lsl #8
   1442c:	lsr	r4, r4, #24
   14430:	orr	r8, r4, r6, lsl #8
   14434:	ldr	r4, [sp, #52]	; 0x34
   14438:	adds	r1, r4, r1
   1443c:	ldr	r4, [sp, #56]	; 0x38
   14440:	adc	r9, r4, r9
   14444:	adds	r1, r1, ip
   14448:	str	r1, [sp, #152]	; 0x98
   1444c:	adc	r1, r9, r8
   14450:	str	r1, [sp, #156]	; 0x9c
   14454:	ldr	r1, [sp, #152]	; 0x98
   14458:	eor	r7, r7, r1
   1445c:	ldr	r1, [sp, #156]	; 0x9c
   14460:	eor	r5, r5, r1
   14464:	lsr	r1, r7, #16
   14468:	orr	r1, r1, r5, lsl #16
   1446c:	lsr	r5, r5, #16
   14470:	str	r1, [sp, #220]	; 0xdc
   14474:	orr	r1, r5, r7, lsl #16
   14478:	str	r1, [sp, #224]	; 0xe0
   1447c:	ldr	r1, [sp, #220]	; 0xdc
   14480:	adds	r2, r2, r1
   14484:	ldr	r1, [sp, #168]	; 0xa8
   14488:	str	r2, [sp, #176]	; 0xb0
   1448c:	ldr	r2, [sp, #224]	; 0xe0
   14490:	adc	r2, lr, r2
   14494:	str	r2, [sp, #180]	; 0xb4
   14498:	ldr	r2, [sp, #176]	; 0xb0
   1449c:	eor	ip, ip, r2
   144a0:	ldr	r2, [sp, #180]	; 0xb4
   144a4:	eor	r8, r8, r2
   144a8:	lsl	r2, r8, #1
   144ac:	orr	r2, r2, ip, lsr #31
   144b0:	lsl	ip, ip, #1
   144b4:	str	r2, [sp, #252]	; 0xfc
   144b8:	orr	r2, ip, r8, lsr #31
   144bc:	ldr	ip, [sp, #172]	; 0xac
   144c0:	str	r2, [sp, #244]	; 0xf4
   144c4:	ldr	r2, [sp, #44]	; 0x2c
   144c8:	adds	r2, r2, r1
   144cc:	ldr	r1, [sp, #48]	; 0x30
   144d0:	adc	r5, r1, ip
   144d4:	ldr	r1, [sp, #240]	; 0xf0
   144d8:	adds	r2, r2, r1
   144dc:	ldr	r1, [sp, #248]	; 0xf8
   144e0:	adc	r5, r5, r1
   144e4:	ldr	r1, [sp, #256]	; 0x100
   144e8:	eor	ip, r5, r1
   144ec:	ldr	r1, [sp, #228]	; 0xe4
   144f0:	adds	r3, r3, ip
   144f4:	eor	r9, r2, r1
   144f8:	ldr	r1, [sp, #240]	; 0xf0
   144fc:	adc	r0, r0, r9
   14500:	eor	r6, r3, r1
   14504:	ldr	r1, [sp, #248]	; 0xf8
   14508:	lsr	r7, r6, #24
   1450c:	eor	lr, r0, r1
   14510:	orr	r1, r7, lr, lsl #8
   14514:	lsr	lr, lr, #24
   14518:	orr	r4, lr, r6, lsl #8
   1451c:	ldr	lr, [sp, #84]	; 0x54
   14520:	adds	r2, lr, r2
   14524:	ldr	lr, [sp, #88]	; 0x58
   14528:	adc	r5, lr, r5
   1452c:	adds	r2, r2, r1
   14530:	str	r2, [sp, #168]	; 0xa8
   14534:	adc	r2, r5, r4
   14538:	str	r2, [sp, #172]	; 0xac
   1453c:	ldr	r2, [sp, #168]	; 0xa8
   14540:	eor	ip, ip, r2
   14544:	ldr	r2, [sp, #172]	; 0xac
   14548:	lsr	lr, ip, #16
   1454c:	eor	r2, r2, r9
   14550:	orr	lr, lr, r2, lsl #16
   14554:	lsr	r9, r2, #16
   14558:	adds	r3, r3, lr
   1455c:	orr	r9, r9, ip, lsl #16
   14560:	str	lr, [sp, #228]	; 0xe4
   14564:	str	r3, [sp, #184]	; 0xb8
   14568:	adc	r3, r0, r9
   1456c:	ldr	r2, [sp, #160]	; 0xa0
   14570:	str	r3, [sp, #188]	; 0xbc
   14574:	ldr	r3, [sp, #184]	; 0xb8
   14578:	ldr	r0, [sp, #196]	; 0xc4
   1457c:	eor	r1, r1, r3
   14580:	ldr	r3, [sp, #188]	; 0xbc
   14584:	eor	r4, r4, r3
   14588:	lsl	r3, r4, #1
   1458c:	orr	r3, r3, r1, lsr #31
   14590:	lsl	r1, r1, #1
   14594:	str	r3, [sp, #248]	; 0xf8
   14598:	orr	r3, r1, r4, lsr #31
   1459c:	ldr	r1, [sp, #164]	; 0xa4
   145a0:	str	r3, [sp, #240]	; 0xf0
   145a4:	ldr	r3, [sp, #36]	; 0x24
   145a8:	adds	r3, r3, r2
   145ac:	ldr	r2, [sp, #40]	; 0x28
   145b0:	adc	r6, r2, r1
   145b4:	ldr	r2, [sp, #216]	; 0xd8
   145b8:	adds	r3, r3, fp
   145bc:	adc	r6, r6, r2
   145c0:	ldr	r2, [sp, #212]	; 0xd4
   145c4:	eor	r5, r6, r2
   145c8:	ldr	r2, [sp, #208]	; 0xd0
   145cc:	eor	r1, r3, r2
   145d0:	ldr	r2, [sp, #192]	; 0xc0
   145d4:	adds	r2, r2, r5
   145d8:	adc	lr, r0, r1
   145dc:	ldr	r0, [sp, #216]	; 0xd8
   145e0:	eor	fp, fp, r2
   145e4:	lsr	ip, fp, #24
   145e8:	eor	r0, lr, r0
   145ec:	orr	r8, ip, r0, lsl #8
   145f0:	lsr	r0, r0, #24
   145f4:	orr	r4, r0, fp, lsl #8
   145f8:	ldr	r0, [sp, #4]
   145fc:	adds	r3, r0, r3
   14600:	ldr	r0, [sp, #8]
   14604:	adc	r6, r0, r6
   14608:	adds	r3, r3, r8
   1460c:	ldr	r0, [sp, #148]	; 0x94
   14610:	str	r3, [sp, #160]	; 0xa0
   14614:	adc	r3, r6, r4
   14618:	str	r3, [sp, #164]	; 0xa4
   1461c:	ldr	r3, [sp, #160]	; 0xa0
   14620:	eor	r5, r5, r3
   14624:	ldr	r3, [sp, #164]	; 0xa4
   14628:	eor	r1, r1, r3
   1462c:	lsr	r3, r5, #16
   14630:	orr	r3, r3, r1, lsl #16
   14634:	lsr	r1, r1, #16
   14638:	str	r3, [sp, #208]	; 0xd0
   1463c:	orr	r3, r1, r5, lsl #16
   14640:	ldr	r1, [sp, #144]	; 0x90
   14644:	str	r3, [sp, #212]	; 0xd4
   14648:	ldr	r3, [sp, #208]	; 0xd0
   1464c:	adds	r2, r2, r3
   14650:	ldr	r3, [sp, #212]	; 0xd4
   14654:	eor	r8, r8, r2
   14658:	adc	lr, lr, r3
   1465c:	eor	r4, r4, lr
   14660:	lsl	r3, r4, #1
   14664:	orr	r3, r3, r8, lsr #31
   14668:	lsl	r8, r8, #1
   1466c:	str	r3, [sp, #256]	; 0x100
   14670:	orr	r3, r8, r4, lsr #31
   14674:	str	r3, [sp, #216]	; 0xd8
   14678:	ldr	r3, [sp, #124]	; 0x7c
   1467c:	adds	r1, r3, r1
   14680:	ldr	r3, [sp, #128]	; 0x80
   14684:	adc	sl, r3, r0
   14688:	ldr	r3, [sp, #260]	; 0x104
   1468c:	ldr	r0, [sp, #204]	; 0xcc
   14690:	ldr	ip, [sp, #260]	; 0x104
   14694:	adds	r1, r1, r3
   14698:	ldr	r3, [sp, #268]	; 0x10c
   1469c:	adc	sl, sl, r3
   146a0:	ldr	r3, [sp, #236]	; 0xec
   146a4:	eor	r7, sl, r3
   146a8:	ldr	r3, [sp, #232]	; 0xe8
   146ac:	eor	r5, r1, r3
   146b0:	ldr	r3, [sp, #200]	; 0xc8
   146b4:	adds	r3, r3, r7
   146b8:	eor	r4, r3, ip
   146bc:	ldr	ip, [sp, #268]	; 0x10c
   146c0:	adc	r0, r0, r5
   146c4:	lsr	fp, r4, #24
   146c8:	eor	r6, r0, ip
   146cc:	orr	ip, fp, r6, lsl #8
   146d0:	lsr	r6, r6, #24
   146d4:	orr	r8, r6, r4, lsl #8
   146d8:	ldr	r4, [sp, #68]	; 0x44
   146dc:	adds	r1, r4, r1
   146e0:	ldr	r4, [sp, #72]	; 0x48
   146e4:	adc	sl, r4, sl
   146e8:	adds	r1, r1, ip
   146ec:	str	r1, [sp, #144]	; 0x90
   146f0:	adc	r1, sl, r8
   146f4:	str	r1, [sp, #148]	; 0x94
   146f8:	ldr	r1, [sp, #144]	; 0x90
   146fc:	eor	r7, r7, r1
   14700:	ldr	r1, [sp, #148]	; 0x94
   14704:	eor	r5, r5, r1
   14708:	lsr	r1, r7, #16
   1470c:	orr	r1, r1, r5, lsl #16
   14710:	lsr	r5, r5, #16
   14714:	str	r1, [sp, #232]	; 0xe8
   14718:	orr	r1, r5, r7, lsl #16
   1471c:	ldr	r5, [sp, #156]	; 0x9c
   14720:	str	r1, [sp, #236]	; 0xec
   14724:	ldr	r1, [sp, #232]	; 0xe8
   14728:	adds	r3, r3, r1
   1472c:	ldr	r1, [sp, #236]	; 0xec
   14730:	eor	ip, ip, r3
   14734:	adc	r0, r0, r1
   14738:	eor	r8, r8, r0
   1473c:	lsl	r1, r8, #1
   14740:	orr	r4, r1, ip, lsr #31
   14744:	ldr	r1, [sp, #76]	; 0x4c
   14748:	lsl	ip, ip, #1
   1474c:	orr	fp, ip, r8, lsr #31
   14750:	ldr	ip, [sp, #152]	; 0x98
   14754:	adds	r1, r1, ip
   14758:	ldr	ip, [sp, #80]	; 0x50
   1475c:	adc	sl, ip, r5
   14760:	ldr	ip, [sp, #228]	; 0xe4
   14764:	adds	r1, r1, fp
   14768:	adc	sl, sl, r4
   1476c:	eor	r7, sl, r9
   14770:	adds	r2, r2, r7
   14774:	eor	fp, fp, r2
   14778:	eor	r5, r1, ip
   1477c:	lsr	ip, fp, #24
   14780:	adc	lr, lr, r5
   14784:	eor	r6, lr, r4
   14788:	orr	r4, ip, r6, lsl #8
   1478c:	ldr	ip, [sp, #4]
   14790:	lsr	r6, r6, #24
   14794:	orr	r8, r6, fp, lsl #8
   14798:	adds	r1, ip, r1
   1479c:	ldr	ip, [sp, #8]
   147a0:	adc	sl, ip, sl
   147a4:	adds	r1, r1, r4
   147a8:	str	r1, [sp, #152]	; 0x98
   147ac:	adc	r1, sl, r8
   147b0:	str	r1, [sp, #156]	; 0x9c
   147b4:	ldr	r1, [sp, #152]	; 0x98
   147b8:	eor	r7, r7, r1
   147bc:	ldr	r1, [sp, #156]	; 0x9c
   147c0:	eor	r5, r5, r1
   147c4:	lsr	r1, r7, #16
   147c8:	orr	r1, r1, r5, lsl #16
   147cc:	lsr	r5, r5, #16
   147d0:	str	r1, [sp, #228]	; 0xe4
   147d4:	orr	r1, r5, r7, lsl #16
   147d8:	str	r1, [sp, #260]	; 0x104
   147dc:	ldr	r1, [sp, #228]	; 0xe4
   147e0:	adds	r2, r2, r1
   147e4:	str	r2, [sp, #192]	; 0xc0
   147e8:	ldr	r1, [sp, #168]	; 0xa8
   147ec:	ldr	r2, [sp, #260]	; 0x104
   147f0:	ldr	ip, [sp, #172]	; 0xac
   147f4:	adc	r2, lr, r2
   147f8:	ldr	lr, [sp, #252]	; 0xfc
   147fc:	str	r2, [sp, #196]	; 0xc4
   14800:	ldr	r2, [sp, #192]	; 0xc0
   14804:	eor	r4, r4, r2
   14808:	ldr	r2, [sp, #196]	; 0xc4
   1480c:	eor	r8, r8, r2
   14810:	lsl	r2, r8, #1
   14814:	orr	r2, r2, r4, lsr #31
   14818:	lsl	r4, r4, #1
   1481c:	str	r2, [sp, #268]	; 0x10c
   14820:	orr	r2, r4, r8, lsr #31
   14824:	str	r2, [sp, #264]	; 0x108
   14828:	ldr	r2, [sp, #44]	; 0x2c
   1482c:	adds	r2, r2, r1
   14830:	ldr	r1, [sp, #48]	; 0x30
   14834:	adc	r5, r1, ip
   14838:	ldr	r1, [sp, #244]	; 0xf4
   1483c:	ldr	ip, [sp, #244]	; 0xf4
   14840:	adds	r2, r2, r1
   14844:	ldr	r1, [sp, #252]	; 0xfc
   14848:	adc	r5, r5, r1
   1484c:	ldr	r1, [sp, #212]	; 0xd4
   14850:	eor	r4, r5, r1
   14854:	ldr	r1, [sp, #208]	; 0xd0
   14858:	adds	r3, r3, r4
   1485c:	eor	ip, r3, ip
   14860:	lsr	r8, ip, #24
   14864:	eor	r1, r2, r1
   14868:	adc	r0, r0, r1
   1486c:	eor	lr, r0, lr
   14870:	orr	r6, r8, lr, lsl #8
   14874:	lsr	lr, lr, #24
   14878:	orr	r7, lr, ip, lsl #8
   1487c:	ldr	ip, [sp, #60]	; 0x3c
   14880:	adds	r2, ip, r2
   14884:	ldr	ip, [sp, #64]	; 0x40
   14888:	adc	r5, ip, r5
   1488c:	adds	r2, r2, r6
   14890:	str	r2, [sp, #168]	; 0xa8
   14894:	adc	r2, r5, r7
   14898:	str	r2, [sp, #172]	; 0xac
   1489c:	ldr	r2, [sp, #168]	; 0xa8
   148a0:	eor	r4, r4, r2
   148a4:	ldr	r2, [sp, #172]	; 0xac
   148a8:	eor	r1, r1, r2
   148ac:	lsr	r2, r4, #16
   148b0:	orr	r2, r2, r1, lsl #16
   148b4:	lsr	r1, r1, #16
   148b8:	str	r2, [sp, #208]	; 0xd0
   148bc:	orr	r2, r1, r4, lsl #16
   148c0:	str	r2, [sp, #212]	; 0xd4
   148c4:	ldr	r2, [sp, #208]	; 0xd0
   148c8:	adds	r3, r3, r2
   148cc:	str	r3, [sp, #200]	; 0xc8
   148d0:	ldr	r3, [sp, #212]	; 0xd4
   148d4:	adc	r3, r0, r3
   148d8:	str	r3, [sp, #204]	; 0xcc
   148dc:	ldr	r3, [sp, #200]	; 0xc8
   148e0:	ldr	r2, [sp, #204]	; 0xcc
   148e4:	eor	r3, r3, r6
   148e8:	lsl	r6, r3, #1
   148ec:	eor	r7, r7, r2
   148f0:	lsl	r2, r7, #1
   148f4:	orr	r6, r6, r7, lsr #31
   148f8:	orr	r2, r2, r3, lsr #31
   148fc:	ldr	r3, [sp, #20]
   14900:	str	r2, [sp, #244]	; 0xf4
   14904:	ldr	r2, [sp, #160]	; 0xa0
   14908:	ldr	r1, [sp, #164]	; 0xa4
   1490c:	adds	r3, r3, r2
   14910:	ldr	r2, [sp, #24]
   14914:	adc	r7, r2, r1
   14918:	ldr	r1, [sp, #180]	; 0xb4
   1491c:	ldr	r2, [sp, #240]	; 0xf0
   14920:	adds	r3, r3, r2
   14924:	ldr	r2, [sp, #248]	; 0xf8
   14928:	adc	r7, r7, r2
   1492c:	ldr	r2, [sp, #236]	; 0xec
   14930:	eor	r4, r7, r2
   14934:	ldr	r2, [sp, #232]	; 0xe8
   14938:	eor	r0, r3, r2
   1493c:	ldr	r2, [sp, #176]	; 0xb0
   14940:	adds	r2, r2, r4
   14944:	adc	lr, r1, r0
   14948:	ldr	r1, [sp, #240]	; 0xf0
   1494c:	eor	r8, r2, r1
   14950:	ldr	r1, [sp, #248]	; 0xf8
   14954:	lsr	r9, r8, #24
   14958:	eor	ip, lr, r1
   1495c:	orr	r1, r9, ip, lsl #8
   14960:	lsr	ip, ip, #24
   14964:	orr	r5, ip, r8, lsl #8
   14968:	ldr	ip, [sp, #36]	; 0x24
   1496c:	adds	r3, ip, r3
   14970:	ldr	ip, [sp, #40]	; 0x28
   14974:	adc	r7, ip, r7
   14978:	adds	r3, r3, r1
   1497c:	str	r3, [sp, #160]	; 0xa0
   14980:	adc	r3, r7, r5
   14984:	str	r3, [sp, #164]	; 0xa4
   14988:	ldr	r3, [sp, #160]	; 0xa0
   1498c:	eor	r4, r4, r3
   14990:	ldr	r3, [sp, #164]	; 0xa4
   14994:	eor	r0, r0, r3
   14998:	lsr	r3, r4, #16
   1499c:	orr	r3, r3, r0, lsl #16
   149a0:	lsr	r0, r0, #16
   149a4:	str	r3, [sp, #232]	; 0xe8
   149a8:	orr	r3, r0, r4, lsl #16
   149ac:	ldr	r0, [sp, #148]	; 0x94
   149b0:	str	r3, [sp, #236]	; 0xec
   149b4:	ldr	r3, [sp, #232]	; 0xe8
   149b8:	adds	r2, r2, r3
   149bc:	ldr	r3, [sp, #236]	; 0xec
   149c0:	eor	r1, r1, r2
   149c4:	adc	lr, lr, r3
   149c8:	eor	r5, r5, lr
   149cc:	lsl	r3, r5, #1
   149d0:	orr	r3, r3, r1, lsr #31
   149d4:	lsl	r1, r1, #1
   149d8:	str	r3, [sp, #248]	; 0xf8
   149dc:	orr	r3, r1, r5, lsr #31
   149e0:	ldr	r1, [sp, #144]	; 0x90
   149e4:	str	r3, [sp, #240]	; 0xf0
   149e8:	ldr	r3, [sp, #84]	; 0x54
   149ec:	adds	r1, r3, r1
   149f0:	ldr	r3, [sp, #88]	; 0x58
   149f4:	adc	sl, r3, r0
   149f8:	ldr	r3, [sp, #216]	; 0xd8
   149fc:	adds	r1, r1, r3
   14a00:	ldr	r3, [sp, #256]	; 0x100
   14a04:	adc	sl, sl, r3
   14a08:	ldr	r3, [sp, #224]	; 0xe0
   14a0c:	eor	r7, sl, r3
   14a10:	ldr	r3, [sp, #220]	; 0xdc
   14a14:	eor	r4, r1, r3
   14a18:	ldr	r3, [sp, #184]	; 0xb8
   14a1c:	ldr	r0, [sp, #188]	; 0xbc
   14a20:	ldr	ip, [sp, #216]	; 0xd8
   14a24:	adds	r3, r3, r7
   14a28:	adc	r0, r0, r4
   14a2c:	eor	r8, r3, ip
   14a30:	ldr	ip, [sp, #256]	; 0x100
   14a34:	lsr	fp, r8, #24
   14a38:	eor	r5, r0, ip
   14a3c:	orr	ip, fp, r5, lsl #8
   14a40:	lsr	r5, r5, #24
   14a44:	orr	r9, r5, r8, lsl #8
   14a48:	ldr	r5, [sp, #124]	; 0x7c
   14a4c:	adds	r1, r5, r1
   14a50:	ldr	r5, [sp, #128]	; 0x80
   14a54:	adc	sl, r5, sl
   14a58:	adds	r1, r1, ip
   14a5c:	str	r1, [sp, #144]	; 0x90
   14a60:	adc	r1, sl, r9
   14a64:	str	r1, [sp, #148]	; 0x94
   14a68:	ldr	r1, [sp, #144]	; 0x90
   14a6c:	eor	r7, r7, r1
   14a70:	ldr	r1, [sp, #148]	; 0x94
   14a74:	eor	r4, r4, r1
   14a78:	lsr	r1, r7, #16
   14a7c:	orr	r8, r1, r4, lsl #16
   14a80:	lsr	r4, r4, #16
   14a84:	adds	r3, r3, r8
   14a88:	orr	sl, r4, r7, lsl #16
   14a8c:	eor	ip, ip, r3
   14a90:	ldr	r4, [sp, #156]	; 0x9c
   14a94:	adc	r0, r0, sl
   14a98:	eor	r9, r9, r0
   14a9c:	lsl	r1, r9, #1
   14aa0:	orr	r1, r1, ip, lsr #31
   14aa4:	lsl	ip, ip, #1
   14aa8:	orr	fp, ip, r9, lsr #31
   14aac:	str	r1, [sp, #216]	; 0xd8
   14ab0:	ldr	r1, [sp, #116]	; 0x74
   14ab4:	ldr	ip, [sp, #152]	; 0x98
   14ab8:	adds	r1, r1, ip
   14abc:	ldr	ip, [sp, #120]	; 0x78
   14ac0:	adc	r9, ip, r4
   14ac4:	ldr	ip, [sp, #244]	; 0xf4
   14ac8:	adds	r1, r1, r6
   14acc:	eor	r5, r1, r8
   14ad0:	adc	r9, r9, ip
   14ad4:	eor	r7, r9, sl
   14ad8:	adds	r2, r2, r7
   14adc:	eor	r6, r6, r2
   14ae0:	adc	lr, lr, r5
   14ae4:	lsr	sl, r6, #24
   14ae8:	eor	r4, lr, ip
   14aec:	orr	ip, sl, r4, lsl #8
   14af0:	lsr	r4, r4, #24
   14af4:	orr	r8, r4, r6, lsl #8
   14af8:	ldr	r4, [sp, #12]
   14afc:	adds	r1, r4, r1
   14b00:	ldr	r4, [sp, #16]
   14b04:	adc	r9, r4, r9
   14b08:	adds	r1, r1, ip
   14b0c:	str	r1, [sp, #152]	; 0x98
   14b10:	adc	r1, r9, r8
   14b14:	str	r1, [sp, #156]	; 0x9c
   14b18:	ldr	r1, [sp, #152]	; 0x98
   14b1c:	eor	r7, r7, r1
   14b20:	ldr	r1, [sp, #156]	; 0x9c
   14b24:	eor	r5, r5, r1
   14b28:	lsr	r1, r7, #16
   14b2c:	orr	r1, r1, r5, lsl #16
   14b30:	lsr	r5, r5, #16
   14b34:	str	r1, [sp, #220]	; 0xdc
   14b38:	orr	r1, r5, r7, lsl #16
   14b3c:	str	r1, [sp, #224]	; 0xe0
   14b40:	ldr	r1, [sp, #220]	; 0xdc
   14b44:	adds	r2, r2, r1
   14b48:	str	r2, [sp, #176]	; 0xb0
   14b4c:	ldr	r2, [sp, #224]	; 0xe0
   14b50:	adc	r2, lr, r2
   14b54:	str	r2, [sp, #180]	; 0xb4
   14b58:	ldr	r2, [sp, #176]	; 0xb0
   14b5c:	eor	ip, ip, r2
   14b60:	ldr	r2, [sp, #180]	; 0xb4
   14b64:	eor	r8, r8, r2
   14b68:	lsl	r2, r8, #1
   14b6c:	orr	r2, r2, ip, lsr #31
   14b70:	lsl	ip, ip, #1
   14b74:	str	r2, [sp, #252]	; 0xfc
   14b78:	orr	r2, ip, r8, lsr #31
   14b7c:	str	r2, [sp, #244]	; 0xf4
   14b80:	ldr	r2, [sp, #92]	; 0x5c
   14b84:	ldr	r1, [sp, #168]	; 0xa8
   14b88:	ldr	ip, [sp, #172]	; 0xac
   14b8c:	adds	r2, r2, r1
   14b90:	ldr	r1, [sp, #96]	; 0x60
   14b94:	adc	r5, r1, ip
   14b98:	ldr	r1, [sp, #240]	; 0xf0
   14b9c:	adds	r2, r2, r1
   14ba0:	ldr	r1, [sp, #248]	; 0xf8
   14ba4:	adc	r5, r5, r1
   14ba8:	ldr	r1, [sp, #260]	; 0x104
   14bac:	eor	ip, r5, r1
   14bb0:	ldr	r1, [sp, #228]	; 0xe4
   14bb4:	adds	r3, r3, ip
   14bb8:	eor	r9, r2, r1
   14bbc:	ldr	r1, [sp, #240]	; 0xf0
   14bc0:	adc	r0, r0, r9
   14bc4:	eor	r6, r3, r1
   14bc8:	ldr	r1, [sp, #248]	; 0xf8
   14bcc:	lsr	r7, r6, #24
   14bd0:	eor	lr, r0, r1
   14bd4:	orr	r1, r7, lr, lsl #8
   14bd8:	lsr	lr, lr, #24
   14bdc:	orr	r4, lr, r6, lsl #8
   14be0:	ldr	lr, [sp, #100]	; 0x64
   14be4:	adds	r2, lr, r2
   14be8:	ldr	lr, [sp, #104]	; 0x68
   14bec:	adc	r5, lr, r5
   14bf0:	adds	r2, r2, r1
   14bf4:	str	r2, [sp, #168]	; 0xa8
   14bf8:	adc	r2, r5, r4
   14bfc:	str	r2, [sp, #172]	; 0xac
   14c00:	ldr	r2, [sp, #168]	; 0xa8
   14c04:	eor	ip, ip, r2
   14c08:	ldr	r2, [sp, #172]	; 0xac
   14c0c:	lsr	lr, ip, #16
   14c10:	eor	r2, r2, r9
   14c14:	orr	lr, lr, r2, lsl #16
   14c18:	lsr	r9, r2, #16
   14c1c:	ldr	r2, [sp, #160]	; 0xa0
   14c20:	adds	r3, r3, lr
   14c24:	orr	r9, r9, ip, lsl #16
   14c28:	str	r3, [sp, #184]	; 0xb8
   14c2c:	adc	r3, r0, r9
   14c30:	ldr	r0, [sp, #196]	; 0xc4
   14c34:	str	r3, [sp, #188]	; 0xbc
   14c38:	ldr	r3, [sp, #184]	; 0xb8
   14c3c:	str	lr, [sp, #228]	; 0xe4
   14c40:	eor	r1, r1, r3
   14c44:	ldr	r3, [sp, #188]	; 0xbc
   14c48:	eor	r4, r4, r3
   14c4c:	lsl	r3, r4, #1
   14c50:	orr	r3, r3, r1, lsr #31
   14c54:	lsl	r1, r1, #1
   14c58:	str	r3, [sp, #248]	; 0xf8
   14c5c:	orr	r3, r1, r4, lsr #31
   14c60:	ldr	r1, [sp, #164]	; 0xa4
   14c64:	str	r3, [sp, #240]	; 0xf0
   14c68:	ldr	r3, [sp, #52]	; 0x34
   14c6c:	adds	r3, r3, r2
   14c70:	ldr	r2, [sp, #56]	; 0x38
   14c74:	adc	r6, r2, r1
   14c78:	ldr	r2, [sp, #216]	; 0xd8
   14c7c:	adds	r3, r3, fp
   14c80:	adc	r6, r6, r2
   14c84:	ldr	r2, [sp, #212]	; 0xd4
   14c88:	eor	r5, r6, r2
   14c8c:	ldr	r2, [sp, #208]	; 0xd0
   14c90:	eor	r1, r3, r2
   14c94:	ldr	r2, [sp, #192]	; 0xc0
   14c98:	adds	r2, r2, r5
   14c9c:	adc	lr, r0, r1
   14ca0:	ldr	r0, [sp, #216]	; 0xd8
   14ca4:	eor	fp, fp, r2
   14ca8:	lsr	ip, fp, #24
   14cac:	eor	r0, lr, r0
   14cb0:	orr	r8, ip, r0, lsl #8
   14cb4:	lsr	r0, r0, #24
   14cb8:	orr	r4, r0, fp, lsl #8
   14cbc:	ldr	r0, [sp, #68]	; 0x44
   14cc0:	ldr	ip, [sp, #264]	; 0x108
   14cc4:	adds	r3, r0, r3
   14cc8:	ldr	r0, [sp, #72]	; 0x48
   14ccc:	adc	r6, r0, r6
   14cd0:	adds	r3, r3, r8
   14cd4:	ldr	r0, [sp, #148]	; 0x94
   14cd8:	str	r3, [sp, #160]	; 0xa0
   14cdc:	adc	r3, r6, r4
   14ce0:	str	r3, [sp, #164]	; 0xa4
   14ce4:	ldr	r3, [sp, #160]	; 0xa0
   14ce8:	eor	r5, r5, r3
   14cec:	ldr	r3, [sp, #164]	; 0xa4
   14cf0:	eor	r1, r1, r3
   14cf4:	lsr	r3, r5, #16
   14cf8:	orr	r3, r3, r1, lsl #16
   14cfc:	lsr	r1, r1, #16
   14d00:	str	r3, [sp, #208]	; 0xd0
   14d04:	orr	r3, r1, r5, lsl #16
   14d08:	ldr	r1, [sp, #144]	; 0x90
   14d0c:	str	r3, [sp, #212]	; 0xd4
   14d10:	ldr	r3, [sp, #208]	; 0xd0
   14d14:	adds	r2, r2, r3
   14d18:	ldr	r3, [sp, #212]	; 0xd4
   14d1c:	eor	r8, r8, r2
   14d20:	adc	lr, lr, r3
   14d24:	eor	r4, r4, lr
   14d28:	lsl	r3, r4, #1
   14d2c:	orr	r3, r3, r8, lsr #31
   14d30:	lsl	r8, r8, #1
   14d34:	str	r3, [sp, #256]	; 0x100
   14d38:	orr	r3, r8, r4, lsr #31
   14d3c:	str	r3, [sp, #216]	; 0xd8
   14d40:	ldr	r3, [sp, #28]
   14d44:	adds	r1, r3, r1
   14d48:	ldr	r3, [sp, #32]
   14d4c:	adc	sl, r3, r0
   14d50:	ldr	r0, [sp, #204]	; 0xcc
   14d54:	ldr	r3, [sp, #264]	; 0x108
   14d58:	adds	r1, r1, r3
   14d5c:	ldr	r3, [sp, #268]	; 0x10c
   14d60:	adc	sl, sl, r3
   14d64:	ldr	r3, [sp, #236]	; 0xec
   14d68:	eor	r7, sl, r3
   14d6c:	ldr	r3, [sp, #232]	; 0xe8
   14d70:	eor	r5, r1, r3
   14d74:	ldr	r3, [sp, #200]	; 0xc8
   14d78:	adds	r3, r3, r7
   14d7c:	eor	r4, r3, ip
   14d80:	ldr	ip, [sp, #268]	; 0x10c
   14d84:	adc	r0, r0, r5
   14d88:	lsr	fp, r4, #24
   14d8c:	eor	r6, r0, ip
   14d90:	orr	ip, fp, r6, lsl #8
   14d94:	lsr	r6, r6, #24
   14d98:	orr	r8, r6, r4, lsl #8
   14d9c:	ldr	r4, [sp, #108]	; 0x6c
   14da0:	adds	r1, r4, r1
   14da4:	ldr	r4, [sp, #112]	; 0x70
   14da8:	adc	sl, r4, sl
   14dac:	adds	r1, r1, ip
   14db0:	str	r1, [sp, #144]	; 0x90
   14db4:	adc	r1, sl, r8
   14db8:	str	r1, [sp, #148]	; 0x94
   14dbc:	ldr	r1, [sp, #144]	; 0x90
   14dc0:	eor	r7, r7, r1
   14dc4:	ldr	r1, [sp, #148]	; 0x94
   14dc8:	eor	r5, r5, r1
   14dcc:	lsr	r1, r7, #16
   14dd0:	orr	r1, r1, r5, lsl #16
   14dd4:	lsr	r5, r5, #16
   14dd8:	str	r1, [sp, #232]	; 0xe8
   14ddc:	orr	r1, r5, r7, lsl #16
   14de0:	str	r1, [sp, #236]	; 0xec
   14de4:	ldr	r1, [sp, #232]	; 0xe8
   14de8:	ldr	r5, [sp, #156]	; 0x9c
   14dec:	adds	r3, r3, r1
   14df0:	ldr	r1, [sp, #236]	; 0xec
   14df4:	eor	ip, ip, r3
   14df8:	adc	r0, r0, r1
   14dfc:	eor	r8, r8, r0
   14e00:	lsl	r1, r8, #1
   14e04:	orr	r4, r1, ip, lsr #31
   14e08:	ldr	r1, [sp, #20]
   14e0c:	lsl	ip, ip, #1
   14e10:	orr	fp, ip, r8, lsr #31
   14e14:	ldr	ip, [sp, #152]	; 0x98
   14e18:	adds	r1, r1, ip
   14e1c:	ldr	ip, [sp, #24]
   14e20:	adc	sl, ip, r5
   14e24:	ldr	ip, [sp, #228]	; 0xe4
   14e28:	adds	r1, r1, fp
   14e2c:	adc	sl, sl, r4
   14e30:	eor	r7, sl, r9
   14e34:	adds	r2, r2, r7
   14e38:	eor	fp, fp, r2
   14e3c:	eor	r5, r1, ip
   14e40:	lsr	ip, fp, #24
   14e44:	adc	lr, lr, r5
   14e48:	eor	r6, lr, r4
   14e4c:	orr	r4, ip, r6, lsl #8
   14e50:	ldr	ip, [sp, #100]	; 0x64
   14e54:	lsr	r6, r6, #24
   14e58:	orr	r8, r6, fp, lsl #8
   14e5c:	adds	r1, ip, r1
   14e60:	ldr	ip, [sp, #104]	; 0x68
   14e64:	adc	sl, ip, sl
   14e68:	adds	r1, r1, r4
   14e6c:	ldr	ip, [sp, #172]	; 0xac
   14e70:	str	r1, [sp, #152]	; 0x98
   14e74:	adc	r1, sl, r8
   14e78:	str	r1, [sp, #156]	; 0x9c
   14e7c:	ldr	r1, [sp, #152]	; 0x98
   14e80:	eor	r7, r7, r1
   14e84:	ldr	r1, [sp, #156]	; 0x9c
   14e88:	eor	r5, r5, r1
   14e8c:	lsr	r1, r7, #16
   14e90:	orr	r1, r1, r5, lsl #16
   14e94:	lsr	r5, r5, #16
   14e98:	str	r1, [sp, #228]	; 0xe4
   14e9c:	orr	r1, r5, r7, lsl #16
   14ea0:	str	r1, [sp, #260]	; 0x104
   14ea4:	ldr	r1, [sp, #228]	; 0xe4
   14ea8:	adds	r2, r2, r1
   14eac:	ldr	r1, [sp, #168]	; 0xa8
   14eb0:	str	r2, [sp, #192]	; 0xc0
   14eb4:	ldr	r2, [sp, #260]	; 0x104
   14eb8:	adc	r2, lr, r2
   14ebc:	str	r2, [sp, #196]	; 0xc4
   14ec0:	ldr	r2, [sp, #192]	; 0xc0
   14ec4:	eor	r4, r4, r2
   14ec8:	ldr	r2, [sp, #196]	; 0xc4
   14ecc:	eor	r8, r8, r2
   14ed0:	lsl	r2, r8, #1
   14ed4:	orr	r2, r2, r4, lsr #31
   14ed8:	lsl	r4, r4, #1
   14edc:	str	r2, [sp, #268]	; 0x10c
   14ee0:	orr	r2, r4, r8, lsr #31
   14ee4:	str	r2, [sp, #264]	; 0x108
   14ee8:	ldr	r2, [sp, #52]	; 0x34
   14eec:	adds	r2, r2, r1
   14ef0:	ldr	r1, [sp, #56]	; 0x38
   14ef4:	adc	r5, r1, ip
   14ef8:	ldr	r1, [sp, #244]	; 0xf4
   14efc:	ldr	ip, [sp, #244]	; 0xf4
   14f00:	adds	r2, r2, r1
   14f04:	ldr	r1, [sp, #252]	; 0xfc
   14f08:	adc	r5, r5, r1
   14f0c:	ldr	r1, [sp, #212]	; 0xd4
   14f10:	eor	r4, r5, r1
   14f14:	ldr	r1, [sp, #208]	; 0xd0
   14f18:	adds	r3, r3, r4
   14f1c:	ldr	lr, [sp, #252]	; 0xfc
   14f20:	eor	ip, r3, ip
   14f24:	lsr	r8, ip, #24
   14f28:	eor	r1, r2, r1
   14f2c:	adc	r0, r0, r1
   14f30:	eor	lr, r0, lr
   14f34:	orr	r6, r8, lr, lsl #8
   14f38:	lsr	lr, lr, #24
   14f3c:	orr	r7, lr, ip, lsl #8
   14f40:	ldr	ip, [sp, #84]	; 0x54
   14f44:	adds	r2, ip, r2
   14f48:	ldr	ip, [sp, #88]	; 0x58
   14f4c:	adc	r5, ip, r5
   14f50:	adds	r2, r2, r6
   14f54:	str	r2, [sp, #168]	; 0xa8
   14f58:	adc	r2, r5, r7
   14f5c:	str	r2, [sp, #172]	; 0xac
   14f60:	ldr	r2, [sp, #168]	; 0xa8
   14f64:	eor	r4, r4, r2
   14f68:	ldr	r2, [sp, #172]	; 0xac
   14f6c:	eor	r1, r1, r2
   14f70:	lsr	r2, r4, #16
   14f74:	orr	r2, r2, r1, lsl #16
   14f78:	lsr	r1, r1, #16
   14f7c:	str	r2, [sp, #208]	; 0xd0
   14f80:	orr	r2, r1, r4, lsl #16
   14f84:	ldr	r1, [sp, #164]	; 0xa4
   14f88:	str	r2, [sp, #212]	; 0xd4
   14f8c:	ldr	r2, [sp, #208]	; 0xd0
   14f90:	adds	r3, r3, r2
   14f94:	str	r3, [sp, #200]	; 0xc8
   14f98:	ldr	r3, [sp, #212]	; 0xd4
   14f9c:	adc	r3, r0, r3
   14fa0:	str	r3, [sp, #204]	; 0xcc
   14fa4:	ldr	r3, [sp, #200]	; 0xc8
   14fa8:	ldr	r2, [sp, #204]	; 0xcc
   14fac:	eor	r3, r3, r6
   14fb0:	lsl	r6, r3, #1
   14fb4:	eor	r7, r7, r2
   14fb8:	lsl	r2, r7, #1
   14fbc:	orr	r6, r6, r7, lsr #31
   14fc0:	orr	r2, r2, r3, lsr #31
   14fc4:	ldr	r3, [sp, #4]
   14fc8:	str	r2, [sp, #244]	; 0xf4
   14fcc:	ldr	r2, [sp, #160]	; 0xa0
   14fd0:	adds	r3, r3, r2
   14fd4:	ldr	r2, [sp, #8]
   14fd8:	adc	r7, r2, r1
   14fdc:	ldr	r1, [sp, #180]	; 0xb4
   14fe0:	ldr	r2, [sp, #240]	; 0xf0
   14fe4:	adds	r3, r3, r2
   14fe8:	ldr	r2, [sp, #248]	; 0xf8
   14fec:	adc	r7, r7, r2
   14ff0:	ldr	r2, [sp, #236]	; 0xec
   14ff4:	eor	r4, r7, r2
   14ff8:	ldr	r2, [sp, #232]	; 0xe8
   14ffc:	eor	r0, r3, r2
   15000:	ldr	r2, [sp, #176]	; 0xb0
   15004:	adds	r2, r2, r4
   15008:	adc	lr, r1, r0
   1500c:	ldr	r1, [sp, #240]	; 0xf0
   15010:	eor	r8, r2, r1
   15014:	ldr	r1, [sp, #248]	; 0xf8
   15018:	lsr	r9, r8, #24
   1501c:	eor	ip, lr, r1
   15020:	orr	r1, r9, ip, lsl #8
   15024:	lsr	ip, ip, #24
   15028:	orr	r5, ip, r8, lsl #8
   1502c:	ldr	ip, [sp, #92]	; 0x5c
   15030:	adds	r3, ip, r3
   15034:	ldr	ip, [sp, #96]	; 0x60
   15038:	adc	r7, ip, r7
   1503c:	adds	r3, r3, r1
   15040:	str	r3, [sp, #160]	; 0xa0
   15044:	adc	r3, r7, r5
   15048:	str	r3, [sp, #164]	; 0xa4
   1504c:	ldr	r3, [sp, #160]	; 0xa0
   15050:	ldr	ip, [sp, #216]	; 0xd8
   15054:	eor	r4, r4, r3
   15058:	ldr	r3, [sp, #164]	; 0xa4
   1505c:	eor	r0, r0, r3
   15060:	lsr	r3, r4, #16
   15064:	orr	r3, r3, r0, lsl #16
   15068:	lsr	r0, r0, #16
   1506c:	str	r3, [sp, #232]	; 0xe8
   15070:	orr	r3, r0, r4, lsl #16
   15074:	ldr	r0, [sp, #148]	; 0x94
   15078:	str	r3, [sp, #236]	; 0xec
   1507c:	ldr	r3, [sp, #232]	; 0xe8
   15080:	adds	r2, r2, r3
   15084:	ldr	r3, [sp, #236]	; 0xec
   15088:	eor	r1, r1, r2
   1508c:	adc	lr, lr, r3
   15090:	eor	r5, r5, lr
   15094:	lsl	r3, r5, #1
   15098:	orr	r3, r3, r1, lsr #31
   1509c:	lsl	r1, r1, #1
   150a0:	str	r3, [sp, #248]	; 0xf8
   150a4:	orr	r3, r1, r5, lsr #31
   150a8:	ldr	r1, [sp, #144]	; 0x90
   150ac:	str	r3, [sp, #240]	; 0xf0
   150b0:	ldr	r3, [sp, #68]	; 0x44
   150b4:	adds	r1, r3, r1
   150b8:	ldr	r3, [sp, #72]	; 0x48
   150bc:	adc	sl, r3, r0
   150c0:	ldr	r0, [sp, #188]	; 0xbc
   150c4:	ldr	r3, [sp, #216]	; 0xd8
   150c8:	adds	r1, r1, r3
   150cc:	ldr	r3, [sp, #256]	; 0x100
   150d0:	adc	sl, sl, r3
   150d4:	ldr	r3, [sp, #224]	; 0xe0
   150d8:	eor	r7, sl, r3
   150dc:	ldr	r3, [sp, #220]	; 0xdc
   150e0:	eor	r4, r1, r3
   150e4:	ldr	r3, [sp, #184]	; 0xb8
   150e8:	adds	r3, r3, r7
   150ec:	eor	r8, r3, ip
   150f0:	ldr	ip, [sp, #256]	; 0x100
   150f4:	adc	r0, r0, r4
   150f8:	lsr	fp, r8, #24
   150fc:	eor	r5, r0, ip
   15100:	orr	ip, fp, r5, lsl #8
   15104:	lsr	r5, r5, #24
   15108:	orr	r9, r5, r8, lsl #8
   1510c:	ldr	r5, [sp, #28]
   15110:	adds	r1, r5, r1
   15114:	ldr	r5, [sp, #32]
   15118:	adc	sl, r5, sl
   1511c:	adds	r1, r1, ip
   15120:	str	r1, [sp, #144]	; 0x90
   15124:	adc	r1, sl, r9
   15128:	str	r1, [sp, #148]	; 0x94
   1512c:	ldr	r1, [sp, #144]	; 0x90
   15130:	eor	r7, r7, r1
   15134:	ldr	r1, [sp, #148]	; 0x94
   15138:	eor	r4, r4, r1
   1513c:	lsr	r1, r7, #16
   15140:	orr	r8, r1, r4, lsl #16
   15144:	lsr	r4, r4, #16
   15148:	adds	r3, r3, r8
   1514c:	orr	sl, r4, r7, lsl #16
   15150:	eor	ip, ip, r3
   15154:	ldr	r4, [sp, #156]	; 0x9c
   15158:	adc	r0, r0, sl
   1515c:	eor	r9, r9, r0
   15160:	lsl	r1, r9, #1
   15164:	orr	r1, r1, ip, lsr #31
   15168:	lsl	ip, ip, #1
   1516c:	orr	fp, ip, r9, lsr #31
   15170:	str	r1, [sp, #216]	; 0xd8
   15174:	ldr	r1, [sp, #36]	; 0x24
   15178:	ldr	ip, [sp, #152]	; 0x98
   1517c:	adds	r1, r1, ip
   15180:	ldr	ip, [sp, #40]	; 0x28
   15184:	adc	r9, ip, r4
   15188:	ldr	ip, [sp, #244]	; 0xf4
   1518c:	adds	r1, r1, r6
   15190:	eor	r5, r1, r8
   15194:	adc	r9, r9, ip
   15198:	eor	r7, r9, sl
   1519c:	adds	r2, r2, r7
   151a0:	eor	r6, r6, r2
   151a4:	adc	lr, lr, r5
   151a8:	lsr	sl, r6, #24
   151ac:	eor	r4, lr, ip
   151b0:	orr	ip, sl, r4, lsl #8
   151b4:	lsr	r4, r4, #24
   151b8:	orr	r8, r4, r6, lsl #8
   151bc:	ldr	r4, [sp, #108]	; 0x6c
   151c0:	adds	r1, r4, r1
   151c4:	ldr	r4, [sp, #112]	; 0x70
   151c8:	adc	r9, r4, r9
   151cc:	adds	r1, r1, ip
   151d0:	str	r1, [sp, #152]	; 0x98
   151d4:	adc	r1, r9, r8
   151d8:	str	r1, [sp, #156]	; 0x9c
   151dc:	ldr	r1, [sp, #152]	; 0x98
   151e0:	eor	r7, r7, r1
   151e4:	ldr	r1, [sp, #156]	; 0x9c
   151e8:	eor	r5, r5, r1
   151ec:	lsr	r1, r7, #16
   151f0:	orr	r1, r1, r5, lsl #16
   151f4:	lsr	r5, r5, #16
   151f8:	str	r1, [sp, #220]	; 0xdc
   151fc:	orr	r1, r5, r7, lsl #16
   15200:	str	r1, [sp, #224]	; 0xe0
   15204:	ldr	r1, [sp, #220]	; 0xdc
   15208:	adds	r2, r2, r1
   1520c:	ldr	r1, [sp, #168]	; 0xa8
   15210:	str	r2, [sp, #176]	; 0xb0
   15214:	ldr	r2, [sp, #224]	; 0xe0
   15218:	adc	r2, lr, r2
   1521c:	str	r2, [sp, #180]	; 0xb4
   15220:	ldr	r2, [sp, #176]	; 0xb0
   15224:	eor	ip, ip, r2
   15228:	ldr	r2, [sp, #180]	; 0xb4
   1522c:	eor	r8, r8, r2
   15230:	lsl	r2, r8, #1
   15234:	orr	r2, r2, ip, lsr #31
   15238:	lsl	ip, ip, #1
   1523c:	str	r2, [sp, #252]	; 0xfc
   15240:	orr	r2, ip, r8, lsr #31
   15244:	ldr	ip, [sp, #172]	; 0xac
   15248:	str	r2, [sp, #244]	; 0xf4
   1524c:	ldr	r2, [sp, #60]	; 0x3c
   15250:	adds	r2, r2, r1
   15254:	ldr	r1, [sp, #64]	; 0x40
   15258:	adc	r5, r1, ip
   1525c:	ldr	r1, [sp, #240]	; 0xf0
   15260:	adds	r2, r2, r1
   15264:	ldr	r1, [sp, #248]	; 0xf8
   15268:	adc	r5, r5, r1
   1526c:	ldr	r1, [sp, #260]	; 0x104
   15270:	eor	ip, r5, r1
   15274:	ldr	r1, [sp, #228]	; 0xe4
   15278:	adds	r3, r3, ip
   1527c:	eor	r9, r2, r1
   15280:	ldr	r1, [sp, #240]	; 0xf0
   15284:	adc	r0, r0, r9
   15288:	eor	r6, r3, r1
   1528c:	ldr	r1, [sp, #248]	; 0xf8
   15290:	lsr	r7, r6, #24
   15294:	eor	lr, r0, r1
   15298:	orr	r1, r7, lr, lsl #8
   1529c:	lsr	lr, lr, #24
   152a0:	orr	r4, lr, r6, lsl #8
   152a4:	ldr	lr, [sp, #44]	; 0x2c
   152a8:	adds	r2, lr, r2
   152ac:	ldr	lr, [sp, #48]	; 0x30
   152b0:	adc	r5, lr, r5
   152b4:	adds	r2, r2, r1
   152b8:	str	r2, [sp, #168]	; 0xa8
   152bc:	adc	r2, r5, r4
   152c0:	str	r2, [sp, #172]	; 0xac
   152c4:	ldr	r2, [sp, #168]	; 0xa8
   152c8:	eor	ip, ip, r2
   152cc:	ldr	r2, [sp, #172]	; 0xac
   152d0:	lsr	lr, ip, #16
   152d4:	eor	r2, r2, r9
   152d8:	orr	lr, lr, r2, lsl #16
   152dc:	lsr	r9, r2, #16
   152e0:	adds	r3, r3, lr
   152e4:	orr	r9, r9, ip, lsl #16
   152e8:	str	lr, [sp, #228]	; 0xe4
   152ec:	str	r3, [sp, #184]	; 0xb8
   152f0:	adc	r3, r0, r9
   152f4:	ldr	r2, [sp, #160]	; 0xa0
   152f8:	str	r3, [sp, #188]	; 0xbc
   152fc:	ldr	r3, [sp, #184]	; 0xb8
   15300:	ldr	r0, [sp, #196]	; 0xc4
   15304:	eor	r1, r1, r3
   15308:	ldr	r3, [sp, #188]	; 0xbc
   1530c:	eor	r4, r4, r3
   15310:	lsl	r3, r4, #1
   15314:	orr	r3, r3, r1, lsr #31
   15318:	lsl	r1, r1, #1
   1531c:	str	r3, [sp, #248]	; 0xf8
   15320:	orr	r3, r1, r4, lsr #31
   15324:	ldr	r1, [sp, #164]	; 0xa4
   15328:	str	r3, [sp, #240]	; 0xf0
   1532c:	ldr	r3, [sp, #124]	; 0x7c
   15330:	adds	r3, r3, r2
   15334:	ldr	r2, [sp, #128]	; 0x80
   15338:	adc	r6, r2, r1
   1533c:	ldr	r2, [sp, #216]	; 0xd8
   15340:	adds	r3, r3, fp
   15344:	adc	r6, r6, r2
   15348:	ldr	r2, [sp, #212]	; 0xd4
   1534c:	eor	r5, r6, r2
   15350:	ldr	r2, [sp, #208]	; 0xd0
   15354:	eor	r1, r3, r2
   15358:	ldr	r2, [sp, #192]	; 0xc0
   1535c:	adds	r2, r2, r5
   15360:	adc	lr, r0, r1
   15364:	ldr	r0, [sp, #216]	; 0xd8
   15368:	eor	fp, fp, r2
   1536c:	lsr	ip, fp, #24
   15370:	eor	r0, lr, r0
   15374:	orr	r8, ip, r0, lsl #8
   15378:	lsr	r0, r0, #24
   1537c:	orr	r4, r0, fp, lsl #8
   15380:	ldr	r0, [sp, #116]	; 0x74
   15384:	adds	r3, r0, r3
   15388:	ldr	r0, [sp, #120]	; 0x78
   1538c:	adc	r6, r0, r6
   15390:	adds	r3, r3, r8
   15394:	ldr	r0, [sp, #148]	; 0x94
   15398:	str	r3, [sp, #160]	; 0xa0
   1539c:	adc	r3, r6, r4
   153a0:	str	r3, [sp, #164]	; 0xa4
   153a4:	ldr	r3, [sp, #160]	; 0xa0
   153a8:	eor	r5, r5, r3
   153ac:	ldr	r3, [sp, #164]	; 0xa4
   153b0:	eor	r1, r1, r3
   153b4:	lsr	r3, r5, #16
   153b8:	orr	r3, r3, r1, lsl #16
   153bc:	lsr	r1, r1, #16
   153c0:	str	r3, [sp, #208]	; 0xd0
   153c4:	orr	r3, r1, r5, lsl #16
   153c8:	ldr	r1, [sp, #144]	; 0x90
   153cc:	str	r3, [sp, #212]	; 0xd4
   153d0:	ldr	r3, [sp, #208]	; 0xd0
   153d4:	adds	r2, r2, r3
   153d8:	ldr	r3, [sp, #212]	; 0xd4
   153dc:	eor	r8, r8, r2
   153e0:	adc	lr, lr, r3
   153e4:	eor	r4, r4, lr
   153e8:	lsl	r3, r4, #1
   153ec:	orr	r3, r3, r8, lsr #31
   153f0:	lsl	r8, r8, #1
   153f4:	str	r3, [sp, #256]	; 0x100
   153f8:	orr	r3, r8, r4, lsr #31
   153fc:	str	r3, [sp, #216]	; 0xd8
   15400:	ldr	r3, [sp, #12]
   15404:	adds	r1, r3, r1
   15408:	ldr	r3, [sp, #16]
   1540c:	adc	sl, r3, r0
   15410:	ldr	r3, [sp, #264]	; 0x108
   15414:	ldr	r0, [sp, #204]	; 0xcc
   15418:	ldr	ip, [sp, #264]	; 0x108
   1541c:	adds	r1, r1, r3
   15420:	ldr	r3, [sp, #268]	; 0x10c
   15424:	adc	sl, sl, r3
   15428:	ldr	r3, [sp, #236]	; 0xec
   1542c:	eor	r7, sl, r3
   15430:	ldr	r3, [sp, #232]	; 0xe8
   15434:	eor	r5, r1, r3
   15438:	ldr	r3, [sp, #200]	; 0xc8
   1543c:	adds	r3, r3, r7
   15440:	eor	r4, r3, ip
   15444:	ldr	ip, [sp, #268]	; 0x10c
   15448:	adc	r0, r0, r5
   1544c:	lsr	fp, r4, #24
   15450:	eor	r6, r0, ip
   15454:	orr	ip, fp, r6, lsl #8
   15458:	lsr	r6, r6, #24
   1545c:	orr	r8, r6, r4, lsl #8
   15460:	ldr	r4, [sp, #76]	; 0x4c
   15464:	adds	r1, r4, r1
   15468:	ldr	r4, [sp, #80]	; 0x50
   1546c:	adc	sl, r4, sl
   15470:	adds	r1, r1, ip
   15474:	str	r1, [sp, #144]	; 0x90
   15478:	adc	r1, sl, r8
   1547c:	str	r1, [sp, #148]	; 0x94
   15480:	ldr	r1, [sp, #144]	; 0x90
   15484:	eor	r7, r7, r1
   15488:	ldr	r1, [sp, #148]	; 0x94
   1548c:	eor	r5, r5, r1
   15490:	lsr	r1, r7, #16
   15494:	orr	r1, r1, r5, lsl #16
   15498:	lsr	r5, r5, #16
   1549c:	str	r1, [sp, #232]	; 0xe8
   154a0:	orr	r1, r5, r7, lsl #16
   154a4:	ldr	r5, [sp, #156]	; 0x9c
   154a8:	str	r1, [sp, #236]	; 0xec
   154ac:	ldr	r1, [sp, #232]	; 0xe8
   154b0:	adds	r3, r3, r1
   154b4:	ldr	r1, [sp, #236]	; 0xec
   154b8:	eor	ip, ip, r3
   154bc:	adc	r0, r0, r1
   154c0:	eor	r8, r8, r0
   154c4:	lsl	r1, r8, #1
   154c8:	orr	r4, r1, ip, lsr #31
   154cc:	ldr	r1, [sp, #100]	; 0x64
   154d0:	lsl	ip, ip, #1
   154d4:	orr	fp, ip, r8, lsr #31
   154d8:	ldr	ip, [sp, #152]	; 0x98
   154dc:	adds	r1, r1, ip
   154e0:	ldr	ip, [sp, #104]	; 0x68
   154e4:	adc	sl, ip, r5
   154e8:	ldr	ip, [sp, #228]	; 0xe4
   154ec:	adds	r1, r1, fp
   154f0:	adc	sl, sl, r4
   154f4:	eor	r7, sl, r9
   154f8:	adds	r2, r2, r7
   154fc:	eor	fp, fp, r2
   15500:	eor	r5, r1, ip
   15504:	lsr	ip, fp, #24
   15508:	adc	lr, lr, r5
   1550c:	eor	r6, lr, r4
   15510:	orr	r4, ip, r6, lsl #8
   15514:	ldr	ip, [sp, #44]	; 0x2c
   15518:	lsr	r6, r6, #24
   1551c:	orr	r8, r6, fp, lsl #8
   15520:	adds	r1, ip, r1
   15524:	ldr	ip, [sp, #48]	; 0x30
   15528:	adc	sl, ip, sl
   1552c:	adds	r1, r1, r4
   15530:	str	r1, [sp, #152]	; 0x98
   15534:	adc	r1, sl, r8
   15538:	str	r1, [sp, #156]	; 0x9c
   1553c:	ldr	r1, [sp, #152]	; 0x98
   15540:	eor	r7, r7, r1
   15544:	ldr	r1, [sp, #156]	; 0x9c
   15548:	eor	r5, r5, r1
   1554c:	lsr	r1, r7, #16
   15550:	orr	r1, r1, r5, lsl #16
   15554:	lsr	r5, r5, #16
   15558:	str	r1, [sp, #228]	; 0xe4
   1555c:	orr	r1, r5, r7, lsl #16
   15560:	str	r1, [sp, #260]	; 0x104
   15564:	ldr	r1, [sp, #228]	; 0xe4
   15568:	adds	r2, r2, r1
   1556c:	str	r2, [sp, #192]	; 0xc0
   15570:	ldr	r1, [sp, #168]	; 0xa8
   15574:	ldr	r2, [sp, #260]	; 0x104
   15578:	ldr	ip, [sp, #172]	; 0xac
   1557c:	adc	r2, lr, r2
   15580:	ldr	lr, [sp, #252]	; 0xfc
   15584:	str	r2, [sp, #196]	; 0xc4
   15588:	ldr	r2, [sp, #192]	; 0xc0
   1558c:	eor	r4, r4, r2
   15590:	ldr	r2, [sp, #196]	; 0xc4
   15594:	eor	r8, r8, r2
   15598:	lsl	r2, r8, #1
   1559c:	orr	r2, r2, r4, lsr #31
   155a0:	lsl	r4, r4, #1
   155a4:	str	r2, [sp, #268]	; 0x10c
   155a8:	orr	r2, r4, r8, lsr #31
   155ac:	str	r2, [sp, #264]	; 0x108
   155b0:	ldr	r2, [sp, #12]
   155b4:	adds	r2, r2, r1
   155b8:	ldr	r1, [sp, #16]
   155bc:	adc	r5, r1, ip
   155c0:	ldr	r1, [sp, #244]	; 0xf4
   155c4:	ldr	ip, [sp, #244]	; 0xf4
   155c8:	adds	r2, r2, r1
   155cc:	ldr	r1, [sp, #252]	; 0xfc
   155d0:	adc	r5, r5, r1
   155d4:	ldr	r1, [sp, #212]	; 0xd4
   155d8:	eor	r4, r5, r1
   155dc:	ldr	r1, [sp, #208]	; 0xd0
   155e0:	adds	r3, r3, r4
   155e4:	eor	ip, r3, ip
   155e8:	lsr	r8, ip, #24
   155ec:	eor	r1, r2, r1
   155f0:	adc	r0, r0, r1
   155f4:	eor	lr, r0, lr
   155f8:	orr	r6, r8, lr, lsl #8
   155fc:	lsr	lr, lr, #24
   15600:	orr	r7, lr, ip, lsl #8
   15604:	ldr	ip, [sp, #124]	; 0x7c
   15608:	adds	r2, ip, r2
   1560c:	ldr	ip, [sp, #128]	; 0x80
   15610:	adc	r5, ip, r5
   15614:	adds	r2, r2, r6
   15618:	str	r2, [sp, #168]	; 0xa8
   1561c:	adc	r2, r5, r7
   15620:	str	r2, [sp, #172]	; 0xac
   15624:	ldr	r2, [sp, #168]	; 0xa8
   15628:	eor	r4, r4, r2
   1562c:	ldr	r2, [sp, #172]	; 0xac
   15630:	eor	r1, r1, r2
   15634:	lsr	r2, r4, #16
   15638:	orr	r2, r2, r1, lsl #16
   1563c:	lsr	r1, r1, #16
   15640:	str	r2, [sp, #208]	; 0xd0
   15644:	orr	r2, r1, r4, lsl #16
   15648:	str	r2, [sp, #212]	; 0xd4
   1564c:	ldr	r2, [sp, #208]	; 0xd0
   15650:	adds	r3, r3, r2
   15654:	str	r3, [sp, #200]	; 0xc8
   15658:	ldr	r3, [sp, #212]	; 0xd4
   1565c:	adc	r3, r0, r3
   15660:	str	r3, [sp, #204]	; 0xcc
   15664:	ldr	r3, [sp, #200]	; 0xc8
   15668:	ldr	r2, [sp, #204]	; 0xcc
   1566c:	eor	r3, r3, r6
   15670:	lsl	r6, r3, #1
   15674:	eor	r7, r7, r2
   15678:	lsl	r2, r7, #1
   1567c:	orr	r6, r6, r7, lsr #31
   15680:	orr	r2, r2, r3, lsr #31
   15684:	ldr	r3, [sp, #116]	; 0x74
   15688:	str	r2, [sp, #244]	; 0xf4
   1568c:	ldr	r2, [sp, #160]	; 0xa0
   15690:	ldr	r1, [sp, #164]	; 0xa4
   15694:	adds	r3, r3, r2
   15698:	ldr	r2, [sp, #120]	; 0x78
   1569c:	adc	r7, r2, r1
   156a0:	ldr	r1, [sp, #180]	; 0xb4
   156a4:	ldr	r2, [sp, #240]	; 0xf0
   156a8:	adds	r3, r3, r2
   156ac:	ldr	r2, [sp, #248]	; 0xf8
   156b0:	adc	r7, r7, r2
   156b4:	ldr	r2, [sp, #236]	; 0xec
   156b8:	eor	r4, r7, r2
   156bc:	ldr	r2, [sp, #232]	; 0xe8
   156c0:	eor	r0, r3, r2
   156c4:	ldr	r2, [sp, #176]	; 0xb0
   156c8:	adds	r2, r2, r4
   156cc:	adc	lr, r1, r0
   156d0:	ldr	r1, [sp, #240]	; 0xf0
   156d4:	eor	r8, r2, r1
   156d8:	ldr	r1, [sp, #248]	; 0xf8
   156dc:	lsr	r9, r8, #24
   156e0:	eor	ip, lr, r1
   156e4:	orr	r1, r9, ip, lsl #8
   156e8:	lsr	ip, ip, #24
   156ec:	orr	r5, ip, r8, lsl #8
   156f0:	ldr	ip, [sp, #108]	; 0x6c
   156f4:	adds	r3, ip, r3
   156f8:	ldr	ip, [sp, #112]	; 0x70
   156fc:	adc	r7, ip, r7
   15700:	adds	r3, r3, r1
   15704:	str	r3, [sp, #160]	; 0xa0
   15708:	adc	r3, r7, r5
   1570c:	str	r3, [sp, #164]	; 0xa4
   15710:	ldr	r3, [sp, #160]	; 0xa0
   15714:	eor	r4, r4, r3
   15718:	ldr	r3, [sp, #164]	; 0xa4
   1571c:	eor	r0, r0, r3
   15720:	lsr	r3, r4, #16
   15724:	orr	r3, r3, r0, lsl #16
   15728:	lsr	r0, r0, #16
   1572c:	str	r3, [sp, #232]	; 0xe8
   15730:	orr	r3, r0, r4, lsl #16
   15734:	ldr	r0, [sp, #148]	; 0x94
   15738:	str	r3, [sp, #236]	; 0xec
   1573c:	ldr	r3, [sp, #232]	; 0xe8
   15740:	adds	r2, r2, r3
   15744:	ldr	r3, [sp, #236]	; 0xec
   15748:	eor	r1, r1, r2
   1574c:	adc	lr, lr, r3
   15750:	eor	r5, r5, lr
   15754:	lsl	r3, r5, #1
   15758:	orr	r3, r3, r1, lsr #31
   1575c:	lsl	r1, r1, #1
   15760:	str	r3, [sp, #248]	; 0xf8
   15764:	orr	r3, r1, r5, lsr #31
   15768:	ldr	r1, [sp, #144]	; 0x90
   1576c:	str	r3, [sp, #240]	; 0xf0
   15770:	ldr	r3, [sp, #36]	; 0x24
   15774:	adds	r1, r3, r1
   15778:	ldr	r3, [sp, #40]	; 0x28
   1577c:	adc	sl, r3, r0
   15780:	ldr	r3, [sp, #216]	; 0xd8
   15784:	adds	r1, r1, r3
   15788:	ldr	r3, [sp, #256]	; 0x100
   1578c:	adc	sl, sl, r3
   15790:	ldr	r3, [sp, #224]	; 0xe0
   15794:	eor	r7, sl, r3
   15798:	ldr	r3, [sp, #220]	; 0xdc
   1579c:	eor	r4, r1, r3
   157a0:	ldr	r3, [sp, #184]	; 0xb8
   157a4:	ldr	r0, [sp, #188]	; 0xbc
   157a8:	ldr	ip, [sp, #216]	; 0xd8
   157ac:	adds	r3, r3, r7
   157b0:	adc	r0, r0, r4
   157b4:	eor	r8, r3, ip
   157b8:	ldr	ip, [sp, #256]	; 0x100
   157bc:	lsr	fp, r8, #24
   157c0:	eor	r5, r0, ip
   157c4:	orr	ip, fp, r5, lsl #8
   157c8:	lsr	r5, r5, #24
   157cc:	orr	r9, r5, r8, lsl #8
   157d0:	ldr	r5, [sp, #84]	; 0x54
   157d4:	adds	r1, r5, r1
   157d8:	ldr	r5, [sp, #88]	; 0x58
   157dc:	adc	sl, r5, sl
   157e0:	adds	r1, r1, ip
   157e4:	str	r1, [sp, #144]	; 0x90
   157e8:	adc	r1, sl, r9
   157ec:	str	r1, [sp, #148]	; 0x94
   157f0:	ldr	r1, [sp, #144]	; 0x90
   157f4:	eor	r7, r7, r1
   157f8:	ldr	r1, [sp, #148]	; 0x94
   157fc:	eor	r4, r4, r1
   15800:	lsr	r1, r7, #16
   15804:	orr	r8, r1, r4, lsl #16
   15808:	lsr	r4, r4, #16
   1580c:	adds	r3, r3, r8
   15810:	orr	sl, r4, r7, lsl #16
   15814:	eor	ip, ip, r3
   15818:	ldr	r4, [sp, #156]	; 0x9c
   1581c:	adc	r0, r0, sl
   15820:	eor	r9, r9, r0
   15824:	lsl	r1, r9, #1
   15828:	orr	r1, r1, ip, lsr #31
   1582c:	lsl	ip, ip, #1
   15830:	orr	fp, ip, r9, lsr #31
   15834:	str	r1, [sp, #216]	; 0xd8
   15838:	ldr	r1, [sp, #4]
   1583c:	ldr	ip, [sp, #152]	; 0x98
   15840:	adds	r1, r1, ip
   15844:	ldr	ip, [sp, #8]
   15848:	adc	r9, ip, r4
   1584c:	ldr	ip, [sp, #244]	; 0xf4
   15850:	adds	r1, r1, r6
   15854:	eor	r5, r1, r8
   15858:	adc	r9, r9, ip
   1585c:	eor	r7, r9, sl
   15860:	adds	r2, r2, r7
   15864:	eor	r6, r6, r2
   15868:	adc	lr, lr, r5
   1586c:	lsr	sl, r6, #24
   15870:	eor	r4, lr, ip
   15874:	orr	ip, sl, r4, lsl #8
   15878:	lsr	r4, r4, #24
   1587c:	orr	r8, r4, r6, lsl #8
   15880:	ldr	r4, [sp, #60]	; 0x3c
   15884:	adds	r1, r4, r1
   15888:	ldr	r4, [sp, #64]	; 0x40
   1588c:	adc	r9, r4, r9
   15890:	adds	r1, r1, ip
   15894:	str	r1, [sp, #152]	; 0x98
   15898:	adc	r1, r9, r8
   1589c:	str	r1, [sp, #156]	; 0x9c
   158a0:	ldr	r1, [sp, #152]	; 0x98
   158a4:	eor	r7, r7, r1
   158a8:	ldr	r1, [sp, #156]	; 0x9c
   158ac:	eor	r5, r5, r1
   158b0:	lsr	r1, r7, #16
   158b4:	orr	r1, r1, r5, lsl #16
   158b8:	lsr	r5, r5, #16
   158bc:	str	r1, [sp, #220]	; 0xdc
   158c0:	orr	r1, r5, r7, lsl #16
   158c4:	str	r1, [sp, #224]	; 0xe0
   158c8:	ldr	r1, [sp, #220]	; 0xdc
   158cc:	adds	r2, r2, r1
   158d0:	str	r2, [sp, #176]	; 0xb0
   158d4:	ldr	r2, [sp, #224]	; 0xe0
   158d8:	adc	r2, lr, r2
   158dc:	str	r2, [sp, #180]	; 0xb4
   158e0:	ldr	r2, [sp, #176]	; 0xb0
   158e4:	eor	ip, ip, r2
   158e8:	ldr	r2, [sp, #180]	; 0xb4
   158ec:	eor	r8, r8, r2
   158f0:	lsl	r2, r8, #1
   158f4:	orr	r2, r2, ip, lsr #31
   158f8:	lsl	ip, ip, #1
   158fc:	str	r2, [sp, #252]	; 0xfc
   15900:	orr	r2, ip, r8, lsr #31
   15904:	str	r2, [sp, #244]	; 0xf4
   15908:	ldr	r2, [sp, #52]	; 0x34
   1590c:	ldr	r1, [sp, #168]	; 0xa8
   15910:	ldr	ip, [sp, #172]	; 0xac
   15914:	adds	r2, r2, r1
   15918:	ldr	r1, [sp, #56]	; 0x38
   1591c:	adc	r5, r1, ip
   15920:	ldr	r1, [sp, #240]	; 0xf0
   15924:	adds	r2, r2, r1
   15928:	ldr	r1, [sp, #248]	; 0xf8
   1592c:	adc	r5, r5, r1
   15930:	ldr	r1, [sp, #260]	; 0x104
   15934:	eor	ip, r5, r1
   15938:	ldr	r1, [sp, #228]	; 0xe4
   1593c:	adds	r3, r3, ip
   15940:	eor	r9, r2, r1
   15944:	ldr	r1, [sp, #240]	; 0xf0
   15948:	adc	r0, r0, r9
   1594c:	eor	r6, r3, r1
   15950:	ldr	r1, [sp, #248]	; 0xf8
   15954:	lsr	r7, r6, #24
   15958:	eor	lr, r0, r1
   1595c:	orr	r1, r7, lr, lsl #8
   15960:	lsr	lr, lr, #24
   15964:	orr	r4, lr, r6, lsl #8
   15968:	ldr	lr, [sp, #28]
   1596c:	adds	r2, lr, r2
   15970:	ldr	lr, [sp, #32]
   15974:	adc	r5, lr, r5
   15978:	adds	r2, r2, r1
   1597c:	str	r2, [sp, #168]	; 0xa8
   15980:	adc	r2, r5, r4
   15984:	str	r2, [sp, #172]	; 0xac
   15988:	ldr	r2, [sp, #168]	; 0xa8
   1598c:	eor	ip, ip, r2
   15990:	ldr	r2, [sp, #172]	; 0xac
   15994:	lsr	lr, ip, #16
   15998:	eor	r2, r2, r9
   1599c:	orr	lr, lr, r2, lsl #16
   159a0:	lsr	r9, r2, #16
   159a4:	ldr	r2, [sp, #160]	; 0xa0
   159a8:	adds	r3, r3, lr
   159ac:	orr	r9, r9, ip, lsl #16
   159b0:	str	r3, [sp, #184]	; 0xb8
   159b4:	adc	r3, r0, r9
   159b8:	ldr	r0, [sp, #196]	; 0xc4
   159bc:	str	r3, [sp, #188]	; 0xbc
   159c0:	ldr	r3, [sp, #184]	; 0xb8
   159c4:	str	lr, [sp, #228]	; 0xe4
   159c8:	eor	r1, r1, r3
   159cc:	ldr	r3, [sp, #188]	; 0xbc
   159d0:	eor	r4, r4, r3
   159d4:	lsl	r3, r4, #1
   159d8:	orr	r3, r3, r1, lsr #31
   159dc:	lsl	r1, r1, #1
   159e0:	str	r3, [sp, #248]	; 0xf8
   159e4:	orr	r3, r1, r4, lsr #31
   159e8:	ldr	r1, [sp, #164]	; 0xa4
   159ec:	str	r3, [sp, #240]	; 0xf0
   159f0:	ldr	r3, [sp, #76]	; 0x4c
   159f4:	adds	r3, r3, r2
   159f8:	ldr	r2, [sp, #80]	; 0x50
   159fc:	adc	r6, r2, r1
   15a00:	ldr	r2, [sp, #216]	; 0xd8
   15a04:	adds	r3, r3, fp
   15a08:	adc	r6, r6, r2
   15a0c:	ldr	r2, [sp, #212]	; 0xd4
   15a10:	eor	r5, r6, r2
   15a14:	ldr	r2, [sp, #208]	; 0xd0
   15a18:	eor	r1, r3, r2
   15a1c:	ldr	r2, [sp, #192]	; 0xc0
   15a20:	adds	r2, r2, r5
   15a24:	adc	lr, r0, r1
   15a28:	ldr	r0, [sp, #216]	; 0xd8
   15a2c:	eor	fp, fp, r2
   15a30:	lsr	ip, fp, #24
   15a34:	eor	r0, lr, r0
   15a38:	orr	r8, ip, r0, lsl #8
   15a3c:	lsr	r0, r0, #24
   15a40:	orr	r4, r0, fp, lsl #8
   15a44:	ldr	r0, [sp, #20]
   15a48:	ldr	ip, [sp, #264]	; 0x108
   15a4c:	adds	r3, r0, r3
   15a50:	ldr	r0, [sp, #24]
   15a54:	adc	r6, r0, r6
   15a58:	adds	r3, r3, r8
   15a5c:	ldr	r0, [sp, #148]	; 0x94
   15a60:	str	r3, [sp, #160]	; 0xa0
   15a64:	adc	r3, r6, r4
   15a68:	str	r3, [sp, #164]	; 0xa4
   15a6c:	ldr	r3, [sp, #160]	; 0xa0
   15a70:	eor	r5, r5, r3
   15a74:	ldr	r3, [sp, #164]	; 0xa4
   15a78:	eor	r1, r1, r3
   15a7c:	lsr	r3, r5, #16
   15a80:	orr	r3, r3, r1, lsl #16
   15a84:	lsr	r1, r1, #16
   15a88:	str	r3, [sp, #208]	; 0xd0
   15a8c:	orr	r3, r1, r5, lsl #16
   15a90:	ldr	r1, [sp, #144]	; 0x90
   15a94:	str	r3, [sp, #212]	; 0xd4
   15a98:	ldr	r3, [sp, #208]	; 0xd0
   15a9c:	adds	r2, r2, r3
   15aa0:	ldr	r3, [sp, #212]	; 0xd4
   15aa4:	eor	r8, r8, r2
   15aa8:	adc	lr, lr, r3
   15aac:	eor	r4, r4, lr
   15ab0:	lsl	r3, r4, #1
   15ab4:	orr	r3, r3, r8, lsr #31
   15ab8:	lsl	r8, r8, #1
   15abc:	str	r3, [sp, #256]	; 0x100
   15ac0:	orr	r3, r8, r4, lsr #31
   15ac4:	str	r3, [sp, #216]	; 0xd8
   15ac8:	ldr	r3, [sp, #68]	; 0x44
   15acc:	adds	r1, r3, r1
   15ad0:	ldr	r3, [sp, #72]	; 0x48
   15ad4:	adc	sl, r3, r0
   15ad8:	ldr	r0, [sp, #204]	; 0xcc
   15adc:	ldr	r3, [sp, #264]	; 0x108
   15ae0:	adds	r1, r1, r3
   15ae4:	ldr	r3, [sp, #268]	; 0x10c
   15ae8:	adc	sl, sl, r3
   15aec:	ldr	r3, [sp, #236]	; 0xec
   15af0:	eor	r7, sl, r3
   15af4:	ldr	r3, [sp, #232]	; 0xe8
   15af8:	eor	r5, r1, r3
   15afc:	ldr	r3, [sp, #200]	; 0xc8
   15b00:	adds	r3, r3, r7
   15b04:	eor	r4, r3, ip
   15b08:	ldr	ip, [sp, #268]	; 0x10c
   15b0c:	adc	r0, r0, r5
   15b10:	lsr	fp, r4, #24
   15b14:	eor	r6, r0, ip
   15b18:	orr	ip, fp, r6, lsl #8
   15b1c:	lsr	r6, r6, #24
   15b20:	orr	r8, r6, r4, lsl #8
   15b24:	ldr	r4, [sp, #92]	; 0x5c
   15b28:	adds	r1, r4, r1
   15b2c:	ldr	r4, [sp, #96]	; 0x60
   15b30:	adc	sl, r4, sl
   15b34:	adds	r1, r1, ip
   15b38:	str	r1, [sp, #144]	; 0x90
   15b3c:	adc	r1, sl, r8
   15b40:	str	r1, [sp, #148]	; 0x94
   15b44:	ldr	r1, [sp, #144]	; 0x90
   15b48:	eor	r7, r7, r1
   15b4c:	ldr	r1, [sp, #148]	; 0x94
   15b50:	eor	r5, r5, r1
   15b54:	lsr	r1, r7, #16
   15b58:	orr	r1, r1, r5, lsl #16
   15b5c:	lsr	r5, r5, #16
   15b60:	str	r1, [sp, #232]	; 0xe8
   15b64:	orr	r1, r5, r7, lsl #16
   15b68:	str	r1, [sp, #236]	; 0xec
   15b6c:	ldr	r1, [sp, #232]	; 0xe8
   15b70:	ldr	r5, [sp, #156]	; 0x9c
   15b74:	adds	r3, r3, r1
   15b78:	ldr	r1, [sp, #236]	; 0xec
   15b7c:	eor	ip, ip, r3
   15b80:	adc	r0, r0, r1
   15b84:	eor	r8, r8, r0
   15b88:	lsl	r1, r8, #1
   15b8c:	orr	r4, r1, ip, lsr #31
   15b90:	ldr	r1, [sp, #108]	; 0x6c
   15b94:	lsl	ip, ip, #1
   15b98:	orr	fp, ip, r8, lsr #31
   15b9c:	ldr	ip, [sp, #152]	; 0x98
   15ba0:	adds	r1, r1, ip
   15ba4:	ldr	ip, [sp, #112]	; 0x70
   15ba8:	adc	sl, ip, r5
   15bac:	ldr	ip, [sp, #228]	; 0xe4
   15bb0:	adds	r1, r1, fp
   15bb4:	adc	sl, sl, r4
   15bb8:	eor	r7, sl, r9
   15bbc:	adds	r2, r2, r7
   15bc0:	eor	fp, fp, r2
   15bc4:	eor	r5, r1, ip
   15bc8:	lsr	ip, fp, #24
   15bcc:	adc	lr, lr, r5
   15bd0:	eor	r6, lr, r4
   15bd4:	orr	r4, ip, r6, lsl #8
   15bd8:	ldr	ip, [sp, #92]	; 0x5c
   15bdc:	lsr	r6, r6, #24
   15be0:	orr	r8, r6, fp, lsl #8
   15be4:	adds	r1, ip, r1
   15be8:	ldr	ip, [sp, #96]	; 0x60
   15bec:	adc	sl, ip, sl
   15bf0:	adds	r1, r1, r4
   15bf4:	ldr	ip, [sp, #172]	; 0xac
   15bf8:	str	r1, [sp, #152]	; 0x98
   15bfc:	adc	r1, sl, r8
   15c00:	str	r1, [sp, #156]	; 0x9c
   15c04:	ldr	r1, [sp, #152]	; 0x98
   15c08:	eor	r7, r7, r1
   15c0c:	ldr	r1, [sp, #156]	; 0x9c
   15c10:	eor	r5, r5, r1
   15c14:	lsr	r1, r7, #16
   15c18:	orr	r1, r1, r5, lsl #16
   15c1c:	lsr	r5, r5, #16
   15c20:	str	r1, [sp, #228]	; 0xe4
   15c24:	orr	r1, r5, r7, lsl #16
   15c28:	str	r1, [sp, #260]	; 0x104
   15c2c:	ldr	r1, [sp, #228]	; 0xe4
   15c30:	adds	r2, r2, r1
   15c34:	ldr	r1, [sp, #168]	; 0xa8
   15c38:	str	r2, [sp, #192]	; 0xc0
   15c3c:	ldr	r2, [sp, #260]	; 0x104
   15c40:	adc	r2, lr, r2
   15c44:	str	r2, [sp, #196]	; 0xc4
   15c48:	ldr	r2, [sp, #192]	; 0xc0
   15c4c:	eor	r4, r4, r2
   15c50:	ldr	r2, [sp, #196]	; 0xc4
   15c54:	eor	r8, r8, r2
   15c58:	lsl	r2, r8, #1
   15c5c:	orr	r2, r2, r4, lsr #31
   15c60:	lsl	r4, r4, #1
   15c64:	str	r2, [sp, #268]	; 0x10c
   15c68:	orr	r2, r4, r8, lsr #31
   15c6c:	str	r2, [sp, #264]	; 0x108
   15c70:	ldr	r2, [sp, #60]	; 0x3c
   15c74:	adds	r2, r2, r1
   15c78:	ldr	r1, [sp, #64]	; 0x40
   15c7c:	adc	r5, r1, ip
   15c80:	ldr	r1, [sp, #244]	; 0xf4
   15c84:	ldr	ip, [sp, #244]	; 0xf4
   15c88:	adds	r2, r2, r1
   15c8c:	ldr	r1, [sp, #252]	; 0xfc
   15c90:	adc	r5, r5, r1
   15c94:	ldr	r1, [sp, #212]	; 0xd4
   15c98:	eor	r4, r5, r1
   15c9c:	ldr	r1, [sp, #208]	; 0xd0
   15ca0:	adds	r3, r3, r4
   15ca4:	ldr	lr, [sp, #252]	; 0xfc
   15ca8:	eor	ip, r3, ip
   15cac:	lsr	r8, ip, #24
   15cb0:	eor	r1, r2, r1
   15cb4:	adc	r0, r0, r1
   15cb8:	eor	lr, r0, lr
   15cbc:	orr	r6, r8, lr, lsl #8
   15cc0:	lsr	lr, lr, #24
   15cc4:	orr	r7, lr, ip, lsl #8
   15cc8:	ldr	ip, [sp, #116]	; 0x74
   15ccc:	adds	r2, ip, r2
   15cd0:	ldr	ip, [sp, #120]	; 0x78
   15cd4:	adc	r5, ip, r5
   15cd8:	adds	r2, r2, r6
   15cdc:	str	r2, [sp, #168]	; 0xa8
   15ce0:	adc	r2, r5, r7
   15ce4:	str	r2, [sp, #172]	; 0xac
   15ce8:	ldr	r2, [sp, #168]	; 0xa8
   15cec:	eor	r4, r4, r2
   15cf0:	ldr	r2, [sp, #172]	; 0xac
   15cf4:	eor	r1, r1, r2
   15cf8:	lsr	r2, r4, #16
   15cfc:	orr	r2, r2, r1, lsl #16
   15d00:	lsr	r1, r1, #16
   15d04:	str	r2, [sp, #208]	; 0xd0
   15d08:	orr	r2, r1, r4, lsl #16
   15d0c:	ldr	r1, [sp, #164]	; 0xa4
   15d10:	str	r2, [sp, #212]	; 0xd4
   15d14:	ldr	r2, [sp, #208]	; 0xd0
   15d18:	adds	r3, r3, r2
   15d1c:	str	r3, [sp, #200]	; 0xc8
   15d20:	ldr	r3, [sp, #212]	; 0xd4
   15d24:	adc	r3, r0, r3
   15d28:	str	r3, [sp, #204]	; 0xcc
   15d2c:	ldr	r3, [sp, #200]	; 0xc8
   15d30:	ldr	r2, [sp, #204]	; 0xcc
   15d34:	eor	r3, r3, r6
   15d38:	lsl	r6, r3, #1
   15d3c:	eor	r7, r7, r2
   15d40:	lsl	r2, r7, #1
   15d44:	orr	r6, r6, r7, lsr #31
   15d48:	orr	r2, r2, r3, lsr #31
   15d4c:	ldr	r3, [sp, #100]	; 0x64
   15d50:	str	r2, [sp, #244]	; 0xf4
   15d54:	ldr	r2, [sp, #160]	; 0xa0
   15d58:	adds	r3, r3, r2
   15d5c:	ldr	r2, [sp, #104]	; 0x68
   15d60:	adc	r7, r2, r1
   15d64:	ldr	r1, [sp, #180]	; 0xb4
   15d68:	ldr	r2, [sp, #240]	; 0xf0
   15d6c:	adds	r3, r3, r2
   15d70:	ldr	r2, [sp, #248]	; 0xf8
   15d74:	adc	r7, r7, r2
   15d78:	ldr	r2, [sp, #236]	; 0xec
   15d7c:	eor	r4, r7, r2
   15d80:	ldr	r2, [sp, #232]	; 0xe8
   15d84:	eor	r0, r3, r2
   15d88:	ldr	r2, [sp, #176]	; 0xb0
   15d8c:	adds	r2, r2, r4
   15d90:	adc	lr, r1, r0
   15d94:	ldr	r1, [sp, #240]	; 0xf0
   15d98:	eor	r8, r2, r1
   15d9c:	ldr	r1, [sp, #248]	; 0xf8
   15da0:	lsr	r9, r8, #24
   15da4:	eor	ip, lr, r1
   15da8:	orr	r1, r9, ip, lsl #8
   15dac:	lsr	ip, ip, #24
   15db0:	orr	r5, ip, r8, lsl #8
   15db4:	ldr	ip, [sp, #12]
   15db8:	adds	r3, ip, r3
   15dbc:	ldr	ip, [sp, #16]
   15dc0:	adc	r7, ip, r7
   15dc4:	adds	r3, r3, r1
   15dc8:	str	r3, [sp, #160]	; 0xa0
   15dcc:	adc	r3, r7, r5
   15dd0:	str	r3, [sp, #164]	; 0xa4
   15dd4:	ldr	r3, [sp, #160]	; 0xa0
   15dd8:	ldr	ip, [sp, #216]	; 0xd8
   15ddc:	eor	r4, r4, r3
   15de0:	ldr	r3, [sp, #164]	; 0xa4
   15de4:	eor	r0, r0, r3
   15de8:	lsr	r3, r4, #16
   15dec:	orr	r3, r3, r0, lsl #16
   15df0:	lsr	r0, r0, #16
   15df4:	str	r3, [sp, #232]	; 0xe8
   15df8:	orr	r3, r0, r4, lsl #16
   15dfc:	ldr	r0, [sp, #148]	; 0x94
   15e00:	str	r3, [sp, #236]	; 0xec
   15e04:	ldr	r3, [sp, #232]	; 0xe8
   15e08:	adds	r2, r2, r3
   15e0c:	ldr	r3, [sp, #236]	; 0xec
   15e10:	eor	r1, r1, r2
   15e14:	adc	lr, lr, r3
   15e18:	eor	r5, r5, lr
   15e1c:	lsl	r3, r5, #1
   15e20:	orr	r3, r3, r1, lsr #31
   15e24:	lsl	r1, r1, #1
   15e28:	str	r3, [sp, #248]	; 0xf8
   15e2c:	orr	r3, r1, r5, lsr #31
   15e30:	ldr	r1, [sp, #144]	; 0x90
   15e34:	str	r3, [sp, #240]	; 0xf0
   15e38:	ldr	r3, [sp, #28]
   15e3c:	adds	r1, r3, r1
   15e40:	ldr	r3, [sp, #32]
   15e44:	adc	sl, r3, r0
   15e48:	ldr	r0, [sp, #188]	; 0xbc
   15e4c:	ldr	r3, [sp, #216]	; 0xd8
   15e50:	adds	r1, r1, r3
   15e54:	ldr	r3, [sp, #256]	; 0x100
   15e58:	adc	sl, sl, r3
   15e5c:	ldr	r3, [sp, #224]	; 0xe0
   15e60:	eor	r7, sl, r3
   15e64:	ldr	r3, [sp, #220]	; 0xdc
   15e68:	eor	r4, r1, r3
   15e6c:	ldr	r3, [sp, #184]	; 0xb8
   15e70:	adds	r3, r3, r7
   15e74:	eor	r8, r3, ip
   15e78:	ldr	ip, [sp, #256]	; 0x100
   15e7c:	adc	r0, r0, r4
   15e80:	lsr	fp, r8, #24
   15e84:	eor	r5, r0, ip
   15e88:	orr	ip, fp, r5, lsl #8
   15e8c:	lsr	r5, r5, #24
   15e90:	orr	r9, r5, r8, lsl #8
   15e94:	ldr	r5, [sp, #76]	; 0x4c
   15e98:	adds	r1, r5, r1
   15e9c:	ldr	r5, [sp, #80]	; 0x50
   15ea0:	adc	sl, r5, sl
   15ea4:	adds	r1, r1, ip
   15ea8:	str	r1, [sp, #144]	; 0x90
   15eac:	adc	r1, sl, r9
   15eb0:	str	r1, [sp, #148]	; 0x94
   15eb4:	ldr	r1, [sp, #144]	; 0x90
   15eb8:	eor	r7, r7, r1
   15ebc:	ldr	r1, [sp, #148]	; 0x94
   15ec0:	eor	r4, r4, r1
   15ec4:	lsr	r1, r7, #16
   15ec8:	orr	r8, r1, r4, lsl #16
   15ecc:	lsr	r4, r4, #16
   15ed0:	adds	r3, r3, r8
   15ed4:	orr	sl, r4, r7, lsl #16
   15ed8:	eor	ip, ip, r3
   15edc:	ldr	r4, [sp, #156]	; 0x9c
   15ee0:	adc	r0, r0, sl
   15ee4:	eor	r9, r9, r0
   15ee8:	lsl	r1, r9, #1
   15eec:	orr	r1, r1, ip, lsr #31
   15ef0:	lsl	ip, ip, #1
   15ef4:	orr	fp, ip, r9, lsr #31
   15ef8:	str	r1, [sp, #216]	; 0xd8
   15efc:	ldr	r1, [sp, #44]	; 0x2c
   15f00:	ldr	ip, [sp, #152]	; 0x98
   15f04:	adds	r1, r1, ip
   15f08:	ldr	ip, [sp, #48]	; 0x30
   15f0c:	adc	r9, ip, r4
   15f10:	ldr	ip, [sp, #244]	; 0xf4
   15f14:	adds	r1, r1, r6
   15f18:	eor	r5, r1, r8
   15f1c:	adc	r9, r9, ip
   15f20:	eor	r7, r9, sl
   15f24:	adds	r2, r2, r7
   15f28:	eor	r6, r6, r2
   15f2c:	adc	lr, lr, r5
   15f30:	lsr	sl, r6, #24
   15f34:	eor	r4, lr, ip
   15f38:	orr	ip, sl, r4, lsl #8
   15f3c:	lsr	r4, r4, #24
   15f40:	orr	r8, r4, r6, lsl #8
   15f44:	ldr	r4, [sp, #4]
   15f48:	adds	r1, r4, r1
   15f4c:	ldr	r4, [sp, #8]
   15f50:	adc	r9, r4, r9
   15f54:	adds	r1, r1, ip
   15f58:	str	r1, [sp, #152]	; 0x98
   15f5c:	adc	r1, r9, r8
   15f60:	str	r1, [sp, #156]	; 0x9c
   15f64:	ldr	r1, [sp, #152]	; 0x98
   15f68:	eor	r7, r7, r1
   15f6c:	ldr	r1, [sp, #156]	; 0x9c
   15f70:	eor	r5, r5, r1
   15f74:	lsr	r1, r7, #16
   15f78:	orr	r1, r1, r5, lsl #16
   15f7c:	lsr	r5, r5, #16
   15f80:	str	r1, [sp, #220]	; 0xdc
   15f84:	orr	r1, r5, r7, lsl #16
   15f88:	str	r1, [sp, #224]	; 0xe0
   15f8c:	ldr	r1, [sp, #220]	; 0xdc
   15f90:	adds	r2, r2, r1
   15f94:	ldr	r1, [sp, #168]	; 0xa8
   15f98:	str	r2, [sp, #176]	; 0xb0
   15f9c:	ldr	r2, [sp, #224]	; 0xe0
   15fa0:	adc	r2, lr, r2
   15fa4:	str	r2, [sp, #180]	; 0xb4
   15fa8:	ldr	r2, [sp, #176]	; 0xb0
   15fac:	eor	ip, ip, r2
   15fb0:	ldr	r2, [sp, #180]	; 0xb4
   15fb4:	eor	r8, r8, r2
   15fb8:	lsl	r2, r8, #1
   15fbc:	orr	r2, r2, ip, lsr #31
   15fc0:	lsl	ip, ip, #1
   15fc4:	str	r2, [sp, #252]	; 0xfc
   15fc8:	orr	r2, ip, r8, lsr #31
   15fcc:	ldr	ip, [sp, #172]	; 0xac
   15fd0:	str	r2, [sp, #244]	; 0xf4
   15fd4:	ldr	r2, [sp, #124]	; 0x7c
   15fd8:	adds	r2, r2, r1
   15fdc:	ldr	r1, [sp, #128]	; 0x80
   15fe0:	adc	r5, r1, ip
   15fe4:	ldr	r1, [sp, #240]	; 0xf0
   15fe8:	adds	r2, r2, r1
   15fec:	ldr	r1, [sp, #248]	; 0xf8
   15ff0:	adc	r5, r5, r1
   15ff4:	ldr	r1, [sp, #260]	; 0x104
   15ff8:	eor	ip, r5, r1
   15ffc:	ldr	r1, [sp, #228]	; 0xe4
   16000:	adds	r3, r3, ip
   16004:	eor	r9, r2, r1
   16008:	ldr	r1, [sp, #240]	; 0xf0
   1600c:	adc	r0, r0, r9
   16010:	eor	r6, r3, r1
   16014:	ldr	r1, [sp, #248]	; 0xf8
   16018:	lsr	r7, r6, #24
   1601c:	eor	lr, r0, r1
   16020:	orr	r1, r7, lr, lsl #8
   16024:	lsr	lr, lr, #24
   16028:	orr	r4, lr, r6, lsl #8
   1602c:	ldr	lr, [sp, #36]	; 0x24
   16030:	adds	r2, lr, r2
   16034:	ldr	lr, [sp, #40]	; 0x28
   16038:	adc	r5, lr, r5
   1603c:	adds	r2, r2, r1
   16040:	str	r2, [sp, #168]	; 0xa8
   16044:	adc	r2, r5, r4
   16048:	str	r2, [sp, #172]	; 0xac
   1604c:	ldr	r2, [sp, #168]	; 0xa8
   16050:	eor	ip, ip, r2
   16054:	ldr	r2, [sp, #172]	; 0xac
   16058:	lsr	lr, ip, #16
   1605c:	eor	r2, r2, r9
   16060:	orr	lr, lr, r2, lsl #16
   16064:	lsr	r9, r2, #16
   16068:	adds	r3, r3, lr
   1606c:	orr	r9, r9, ip, lsl #16
   16070:	str	lr, [sp, #228]	; 0xe4
   16074:	str	r3, [sp, #184]	; 0xb8
   16078:	adc	r3, r0, r9
   1607c:	ldr	r2, [sp, #160]	; 0xa0
   16080:	str	r3, [sp, #188]	; 0xbc
   16084:	ldr	r3, [sp, #184]	; 0xb8
   16088:	ldr	r0, [sp, #196]	; 0xc4
   1608c:	eor	r1, r1, r3
   16090:	ldr	r3, [sp, #188]	; 0xbc
   16094:	eor	r4, r4, r3
   16098:	lsl	r3, r4, #1
   1609c:	orr	r3, r3, r1, lsr #31
   160a0:	lsl	r1, r1, #1
   160a4:	str	r3, [sp, #248]	; 0xf8
   160a8:	orr	r3, r1, r4, lsr #31
   160ac:	ldr	r1, [sp, #164]	; 0xa4
   160b0:	str	r3, [sp, #240]	; 0xf0
   160b4:	ldr	r3, [sp, #68]	; 0x44
   160b8:	adds	r3, r3, r2
   160bc:	ldr	r2, [sp, #72]	; 0x48
   160c0:	adc	r6, r2, r1
   160c4:	ldr	r2, [sp, #216]	; 0xd8
   160c8:	adds	r3, r3, fp
   160cc:	adc	r6, r6, r2
   160d0:	ldr	r2, [sp, #212]	; 0xd4
   160d4:	eor	r5, r6, r2
   160d8:	ldr	r2, [sp, #208]	; 0xd0
   160dc:	eor	r1, r3, r2
   160e0:	ldr	r2, [sp, #192]	; 0xc0
   160e4:	adds	r2, r2, r5
   160e8:	adc	lr, r0, r1
   160ec:	ldr	r0, [sp, #216]	; 0xd8
   160f0:	eor	fp, fp, r2
   160f4:	lsr	ip, fp, #24
   160f8:	eor	r0, lr, r0
   160fc:	orr	r8, ip, r0, lsl #8
   16100:	lsr	r0, r0, #24
   16104:	orr	r4, r0, fp, lsl #8
   16108:	ldr	r0, [sp, #52]	; 0x34
   1610c:	adds	r3, r0, r3
   16110:	ldr	r0, [sp, #56]	; 0x38
   16114:	adc	r6, r0, r6
   16118:	adds	r3, r3, r8
   1611c:	ldr	r0, [sp, #148]	; 0x94
   16120:	str	r3, [sp, #160]	; 0xa0
   16124:	adc	r3, r6, r4
   16128:	str	r3, [sp, #164]	; 0xa4
   1612c:	ldr	r3, [sp, #160]	; 0xa0
   16130:	eor	r5, r5, r3
   16134:	ldr	r3, [sp, #164]	; 0xa4
   16138:	eor	r1, r1, r3
   1613c:	lsr	r3, r5, #16
   16140:	orr	r3, r3, r1, lsl #16
   16144:	lsr	r1, r1, #16
   16148:	str	r3, [sp, #208]	; 0xd0
   1614c:	orr	r3, r1, r5, lsl #16
   16150:	ldr	r1, [sp, #144]	; 0x90
   16154:	str	r3, [sp, #212]	; 0xd4
   16158:	ldr	r3, [sp, #208]	; 0xd0
   1615c:	adds	r2, r2, r3
   16160:	ldr	r3, [sp, #212]	; 0xd4
   16164:	eor	r8, r8, r2
   16168:	adc	lr, lr, r3
   1616c:	eor	r4, r4, lr
   16170:	lsl	r3, r4, #1
   16174:	orr	r3, r3, r8, lsr #31
   16178:	lsl	r8, r8, #1
   1617c:	str	r3, [sp, #256]	; 0x100
   16180:	orr	r3, r8, r4, lsr #31
   16184:	str	r3, [sp, #216]	; 0xd8
   16188:	ldr	r3, [sp, #20]
   1618c:	adds	r1, r3, r1
   16190:	ldr	r3, [sp, #24]
   16194:	adc	sl, r3, r0
   16198:	ldr	r3, [sp, #264]	; 0x108
   1619c:	ldr	r0, [sp, #204]	; 0xcc
   161a0:	ldr	ip, [sp, #264]	; 0x108
   161a4:	adds	r1, r1, r3
   161a8:	ldr	r3, [sp, #268]	; 0x10c
   161ac:	adc	sl, sl, r3
   161b0:	ldr	r3, [sp, #236]	; 0xec
   161b4:	eor	r7, sl, r3
   161b8:	ldr	r3, [sp, #232]	; 0xe8
   161bc:	eor	r5, r1, r3
   161c0:	ldr	r3, [sp, #200]	; 0xc8
   161c4:	adds	r3, r3, r7
   161c8:	eor	r4, r3, ip
   161cc:	ldr	ip, [sp, #268]	; 0x10c
   161d0:	adc	r0, r0, r5
   161d4:	lsr	fp, r4, #24
   161d8:	eor	r6, r0, ip
   161dc:	orr	ip, fp, r6, lsl #8
   161e0:	lsr	r6, r6, #24
   161e4:	orr	r8, r6, r4, lsl #8
   161e8:	ldr	r4, [sp, #84]	; 0x54
   161ec:	adds	r1, r4, r1
   161f0:	ldr	r4, [sp, #88]	; 0x58
   161f4:	adc	sl, r4, sl
   161f8:	adds	r1, r1, ip
   161fc:	str	r1, [sp, #144]	; 0x90
   16200:	adc	r1, sl, r8
   16204:	str	r1, [sp, #148]	; 0x94
   16208:	ldr	r1, [sp, #144]	; 0x90
   1620c:	eor	r7, r7, r1
   16210:	ldr	r1, [sp, #148]	; 0x94
   16214:	eor	r5, r5, r1
   16218:	lsr	r1, r7, #16
   1621c:	orr	r1, r1, r5, lsl #16
   16220:	lsr	r5, r5, #16
   16224:	str	r1, [sp, #232]	; 0xe8
   16228:	orr	r1, r5, r7, lsl #16
   1622c:	ldr	r5, [sp, #156]	; 0x9c
   16230:	str	r1, [sp, #236]	; 0xec
   16234:	ldr	r1, [sp, #232]	; 0xe8
   16238:	adds	r3, r3, r1
   1623c:	ldr	r1, [sp, #236]	; 0xec
   16240:	eor	ip, ip, r3
   16244:	adc	r0, r0, r1
   16248:	eor	r8, r8, r0
   1624c:	lsl	r1, r8, #1
   16250:	orr	r4, r1, ip, lsr #31
   16254:	ldr	r1, [sp, #52]	; 0x34
   16258:	lsl	ip, ip, #1
   1625c:	orr	fp, ip, r8, lsr #31
   16260:	ldr	ip, [sp, #152]	; 0x98
   16264:	adds	r1, r1, ip
   16268:	ldr	ip, [sp, #56]	; 0x38
   1626c:	adc	sl, ip, r5
   16270:	ldr	ip, [sp, #228]	; 0xe4
   16274:	adds	r1, r1, fp
   16278:	adc	sl, sl, r4
   1627c:	eor	r7, sl, r9
   16280:	adds	r2, r2, r7
   16284:	eor	fp, fp, r2
   16288:	eor	r5, r1, ip
   1628c:	lsr	ip, fp, #24
   16290:	adc	lr, lr, r5
   16294:	eor	r6, lr, r4
   16298:	orr	r4, ip, r6, lsl #8
   1629c:	ldr	ip, [sp, #124]	; 0x7c
   162a0:	lsr	r6, r6, #24
   162a4:	orr	r8, r6, fp, lsl #8
   162a8:	adds	r1, ip, r1
   162ac:	ldr	ip, [sp, #128]	; 0x80
   162b0:	adc	sl, ip, sl
   162b4:	adds	r1, r1, r4
   162b8:	str	r1, [sp, #152]	; 0x98
   162bc:	adc	r1, sl, r8
   162c0:	str	r1, [sp, #156]	; 0x9c
   162c4:	ldr	r1, [sp, #152]	; 0x98
   162c8:	eor	r7, r7, r1
   162cc:	ldr	r1, [sp, #156]	; 0x9c
   162d0:	eor	r5, r5, r1
   162d4:	lsr	r1, r7, #16
   162d8:	orr	r1, r1, r5, lsl #16
   162dc:	lsr	r5, r5, #16
   162e0:	str	r1, [sp, #228]	; 0xe4
   162e4:	orr	r1, r5, r7, lsl #16
   162e8:	str	r1, [sp, #260]	; 0x104
   162ec:	ldr	r1, [sp, #228]	; 0xe4
   162f0:	adds	r2, r2, r1
   162f4:	str	r2, [sp, #192]	; 0xc0
   162f8:	ldr	r1, [sp, #168]	; 0xa8
   162fc:	ldr	r2, [sp, #260]	; 0x104
   16300:	ldr	ip, [sp, #172]	; 0xac
   16304:	adc	r2, lr, r2
   16308:	ldr	lr, [sp, #252]	; 0xfc
   1630c:	str	r2, [sp, #196]	; 0xc4
   16310:	ldr	r2, [sp, #192]	; 0xc0
   16314:	eor	r4, r4, r2
   16318:	ldr	r2, [sp, #196]	; 0xc4
   1631c:	eor	r8, r8, r2
   16320:	lsl	r2, r8, #1
   16324:	orr	r2, r2, r4, lsr #31
   16328:	lsl	r4, r4, #1
   1632c:	str	r2, [sp, #268]	; 0x10c
   16330:	orr	r2, r4, r8, lsr #31
   16334:	str	r2, [sp, #264]	; 0x108
   16338:	ldr	r2, [sp, #116]	; 0x74
   1633c:	adds	r2, r2, r1
   16340:	ldr	r1, [sp, #120]	; 0x78
   16344:	adc	r5, r1, ip
   16348:	ldr	r1, [sp, #244]	; 0xf4
   1634c:	ldr	ip, [sp, #244]	; 0xf4
   16350:	adds	r2, r2, r1
   16354:	ldr	r1, [sp, #252]	; 0xfc
   16358:	adc	r5, r5, r1
   1635c:	ldr	r1, [sp, #212]	; 0xd4
   16360:	eor	r4, r5, r1
   16364:	ldr	r1, [sp, #208]	; 0xd0
   16368:	adds	r3, r3, r4
   1636c:	eor	ip, r3, ip
   16370:	lsr	r8, ip, #24
   16374:	eor	r1, r2, r1
   16378:	adc	r0, r0, r1
   1637c:	eor	lr, r0, lr
   16380:	orr	r6, r8, lr, lsl #8
   16384:	lsr	lr, lr, #24
   16388:	orr	r7, lr, ip, lsl #8
   1638c:	ldr	ip, [sp, #76]	; 0x4c
   16390:	adds	r2, ip, r2
   16394:	ldr	ip, [sp, #80]	; 0x50
   16398:	adc	r5, ip, r5
   1639c:	adds	r2, r2, r6
   163a0:	str	r2, [sp, #168]	; 0xa8
   163a4:	adc	r2, r5, r7
   163a8:	str	r2, [sp, #172]	; 0xac
   163ac:	ldr	r2, [sp, #168]	; 0xa8
   163b0:	eor	r4, r4, r2
   163b4:	ldr	r2, [sp, #172]	; 0xac
   163b8:	eor	r1, r1, r2
   163bc:	lsr	r2, r4, #16
   163c0:	orr	r2, r2, r1, lsl #16
   163c4:	lsr	r1, r1, #16
   163c8:	str	r2, [sp, #208]	; 0xd0
   163cc:	orr	r2, r1, r4, lsl #16
   163d0:	str	r2, [sp, #212]	; 0xd4
   163d4:	ldr	r2, [sp, #208]	; 0xd0
   163d8:	adds	r3, r3, r2
   163dc:	str	r3, [sp, #200]	; 0xc8
   163e0:	ldr	r3, [sp, #212]	; 0xd4
   163e4:	adc	r3, r0, r3
   163e8:	str	r3, [sp, #204]	; 0xcc
   163ec:	ldr	r3, [sp, #200]	; 0xc8
   163f0:	ldr	r2, [sp, #204]	; 0xcc
   163f4:	eor	r3, r3, r6
   163f8:	lsl	r6, r3, #1
   163fc:	eor	r7, r7, r2
   16400:	lsl	r2, r7, #1
   16404:	orr	r6, r6, r7, lsr #31
   16408:	orr	r2, r2, r3, lsr #31
   1640c:	ldr	r3, [sp, #92]	; 0x5c
   16410:	str	r2, [sp, #244]	; 0xf4
   16414:	ldr	r2, [sp, #160]	; 0xa0
   16418:	ldr	r1, [sp, #164]	; 0xa4
   1641c:	adds	r3, r3, r2
   16420:	ldr	r2, [sp, #96]	; 0x60
   16424:	adc	r7, r2, r1
   16428:	ldr	r1, [sp, #180]	; 0xb4
   1642c:	ldr	r2, [sp, #240]	; 0xf0
   16430:	adds	r3, r3, r2
   16434:	ldr	r2, [sp, #248]	; 0xf8
   16438:	adc	r7, r7, r2
   1643c:	ldr	r2, [sp, #236]	; 0xec
   16440:	eor	r4, r7, r2
   16444:	ldr	r2, [sp, #232]	; 0xe8
   16448:	eor	r0, r3, r2
   1644c:	ldr	r2, [sp, #176]	; 0xb0
   16450:	adds	r2, r2, r4
   16454:	adc	lr, r1, r0
   16458:	ldr	r1, [sp, #240]	; 0xf0
   1645c:	eor	r8, r2, r1
   16460:	ldr	r1, [sp, #248]	; 0xf8
   16464:	lsr	r9, r8, #24
   16468:	eor	ip, lr, r1
   1646c:	orr	r1, r9, ip, lsl #8
   16470:	lsr	ip, ip, #24
   16474:	orr	r5, ip, r8, lsl #8
   16478:	ldr	ip, [sp, #28]
   1647c:	adds	r3, ip, r3
   16480:	ldr	ip, [sp, #32]
   16484:	adc	r7, ip, r7
   16488:	adds	r3, r3, r1
   1648c:	str	r3, [sp, #160]	; 0xa0
   16490:	adc	r3, r7, r5
   16494:	str	r3, [sp, #164]	; 0xa4
   16498:	ldr	r3, [sp, #160]	; 0xa0
   1649c:	eor	r4, r4, r3
   164a0:	ldr	r3, [sp, #164]	; 0xa4
   164a4:	eor	r0, r0, r3
   164a8:	lsr	r3, r4, #16
   164ac:	orr	r3, r3, r0, lsl #16
   164b0:	lsr	r0, r0, #16
   164b4:	str	r3, [sp, #232]	; 0xe8
   164b8:	orr	r3, r0, r4, lsl #16
   164bc:	ldr	r0, [sp, #148]	; 0x94
   164c0:	str	r3, [sp, #236]	; 0xec
   164c4:	ldr	r3, [sp, #232]	; 0xe8
   164c8:	adds	r2, r2, r3
   164cc:	ldr	r3, [sp, #236]	; 0xec
   164d0:	eor	r1, r1, r2
   164d4:	adc	lr, lr, r3
   164d8:	eor	r5, r5, lr
   164dc:	lsl	r3, r5, #1
   164e0:	orr	r3, r3, r1, lsr #31
   164e4:	lsl	r1, r1, #1
   164e8:	str	r3, [sp, #248]	; 0xf8
   164ec:	orr	r3, r1, r5, lsr #31
   164f0:	ldr	r1, [sp, #144]	; 0x90
   164f4:	str	r3, [sp, #240]	; 0xf0
   164f8:	ldr	r3, [sp, #4]
   164fc:	adds	r1, r3, r1
   16500:	ldr	r3, [sp, #8]
   16504:	adc	sl, r3, r0
   16508:	ldr	r3, [sp, #216]	; 0xd8
   1650c:	adds	r1, r1, r3
   16510:	ldr	r3, [sp, #256]	; 0x100
   16514:	adc	sl, sl, r3
   16518:	ldr	r3, [sp, #224]	; 0xe0
   1651c:	eor	r7, sl, r3
   16520:	ldr	r3, [sp, #220]	; 0xdc
   16524:	eor	r4, r1, r3
   16528:	ldr	r3, [sp, #184]	; 0xb8
   1652c:	ldr	r0, [sp, #188]	; 0xbc
   16530:	ldr	ip, [sp, #216]	; 0xd8
   16534:	adds	r3, r3, r7
   16538:	adc	r0, r0, r4
   1653c:	eor	r8, r3, ip
   16540:	ldr	ip, [sp, #256]	; 0x100
   16544:	lsr	fp, r8, #24
   16548:	eor	r5, r0, ip
   1654c:	orr	ip, fp, r5, lsl #8
   16550:	lsr	r5, r5, #24
   16554:	orr	r9, r5, r8, lsl #8
   16558:	ldr	r5, [sp, #68]	; 0x44
   1655c:	adds	r1, r5, r1
   16560:	ldr	r5, [sp, #72]	; 0x48
   16564:	adc	sl, r5, sl
   16568:	adds	r1, r1, ip
   1656c:	str	r1, [sp, #144]	; 0x90
   16570:	adc	r1, sl, r9
   16574:	str	r1, [sp, #148]	; 0x94
   16578:	ldr	r1, [sp, #144]	; 0x90
   1657c:	eor	r7, r7, r1
   16580:	ldr	r1, [sp, #148]	; 0x94
   16584:	eor	r4, r4, r1
   16588:	lsr	r1, r7, #16
   1658c:	orr	r8, r1, r4, lsl #16
   16590:	lsr	r4, r4, #16
   16594:	adds	r3, r3, r8
   16598:	orr	sl, r4, r7, lsl #16
   1659c:	eor	ip, ip, r3
   165a0:	ldr	r4, [sp, #156]	; 0x9c
   165a4:	adc	r0, r0, sl
   165a8:	eor	r9, r9, r0
   165ac:	lsl	r1, r9, #1
   165b0:	orr	r1, r1, ip, lsr #31
   165b4:	lsl	ip, ip, #1
   165b8:	orr	fp, ip, r9, lsr #31
   165bc:	str	r1, [sp, #216]	; 0xd8
   165c0:	ldr	r1, [sp, #100]	; 0x64
   165c4:	ldr	ip, [sp, #152]	; 0x98
   165c8:	adds	r1, r1, ip
   165cc:	ldr	ip, [sp, #104]	; 0x68
   165d0:	adc	r9, ip, r4
   165d4:	ldr	ip, [sp, #244]	; 0xf4
   165d8:	adds	r1, r1, r6
   165dc:	eor	r5, r1, r8
   165e0:	adc	r9, r9, ip
   165e4:	eor	r7, r9, sl
   165e8:	adds	r2, r2, r7
   165ec:	eor	r6, r6, r2
   165f0:	adc	lr, lr, r5
   165f4:	lsr	sl, r6, #24
   165f8:	eor	r4, lr, ip
   165fc:	orr	ip, sl, r4, lsl #8
   16600:	lsr	r4, r4, #24
   16604:	orr	r8, r4, r6, lsl #8
   16608:	ldr	r4, [sp, #20]
   1660c:	adds	r1, r4, r1
   16610:	ldr	r4, [sp, #24]
   16614:	adc	r9, r4, r9
   16618:	adds	r1, r1, ip
   1661c:	str	r1, [sp, #152]	; 0x98
   16620:	adc	r1, r9, r8
   16624:	str	r1, [sp, #156]	; 0x9c
   16628:	ldr	r1, [sp, #152]	; 0x98
   1662c:	eor	r7, r7, r1
   16630:	ldr	r1, [sp, #156]	; 0x9c
   16634:	eor	r5, r5, r1
   16638:	lsr	r1, r7, #16
   1663c:	orr	r1, r1, r5, lsl #16
   16640:	lsr	r5, r5, #16
   16644:	str	r1, [sp, #220]	; 0xdc
   16648:	orr	r1, r5, r7, lsl #16
   1664c:	str	r1, [sp, #224]	; 0xe0
   16650:	ldr	r1, [sp, #220]	; 0xdc
   16654:	adds	r2, r2, r1
   16658:	str	r2, [sp, #176]	; 0xb0
   1665c:	ldr	r2, [sp, #224]	; 0xe0
   16660:	adc	r2, lr, r2
   16664:	str	r2, [sp, #180]	; 0xb4
   16668:	ldr	r2, [sp, #176]	; 0xb0
   1666c:	eor	ip, ip, r2
   16670:	ldr	r2, [sp, #180]	; 0xb4
   16674:	eor	r8, r8, r2
   16678:	lsl	r2, r8, #1
   1667c:	orr	r2, r2, ip, lsr #31
   16680:	lsl	ip, ip, #1
   16684:	str	r2, [sp, #252]	; 0xfc
   16688:	orr	r2, ip, r8, lsr #31
   1668c:	str	r2, [sp, #244]	; 0xf4
   16690:	ldr	r2, [sp, #108]	; 0x6c
   16694:	ldr	r1, [sp, #168]	; 0xa8
   16698:	ldr	ip, [sp, #172]	; 0xac
   1669c:	adds	r2, r2, r1
   166a0:	ldr	r1, [sp, #112]	; 0x70
   166a4:	adc	r5, r1, ip
   166a8:	ldr	r1, [sp, #240]	; 0xf0
   166ac:	adds	r2, r2, r1
   166b0:	ldr	r1, [sp, #248]	; 0xf8
   166b4:	adc	r5, r5, r1
   166b8:	ldr	r1, [sp, #260]	; 0x104
   166bc:	eor	ip, r5, r1
   166c0:	ldr	r1, [sp, #228]	; 0xe4
   166c4:	adds	r3, r3, ip
   166c8:	eor	r9, r2, r1
   166cc:	ldr	r1, [sp, #240]	; 0xf0
   166d0:	adc	r0, r0, r9
   166d4:	eor	r6, r3, r1
   166d8:	ldr	r1, [sp, #248]	; 0xf8
   166dc:	lsr	r7, r6, #24
   166e0:	eor	lr, r0, r1
   166e4:	orr	r1, r7, lr, lsl #8
   166e8:	lsr	lr, lr, #24
   166ec:	orr	r4, lr, r6, lsl #8
   166f0:	ldr	lr, [sp, #60]	; 0x3c
   166f4:	adds	r2, lr, r2
   166f8:	ldr	lr, [sp, #64]	; 0x40
   166fc:	adc	r5, lr, r5
   16700:	adds	r2, r2, r1
   16704:	str	r2, [sp, #168]	; 0xa8
   16708:	adc	r2, r5, r4
   1670c:	str	r2, [sp, #172]	; 0xac
   16710:	ldr	r2, [sp, #168]	; 0xa8
   16714:	eor	ip, ip, r2
   16718:	ldr	r2, [sp, #172]	; 0xac
   1671c:	lsr	lr, ip, #16
   16720:	eor	r2, r2, r9
   16724:	orr	lr, lr, r2, lsl #16
   16728:	lsr	r9, r2, #16
   1672c:	ldr	r2, [sp, #160]	; 0xa0
   16730:	adds	r3, r3, lr
   16734:	orr	r9, r9, ip, lsl #16
   16738:	str	r3, [sp, #184]	; 0xb8
   1673c:	adc	r3, r0, r9
   16740:	ldr	r0, [sp, #196]	; 0xc4
   16744:	str	r3, [sp, #188]	; 0xbc
   16748:	ldr	r3, [sp, #184]	; 0xb8
   1674c:	str	lr, [sp, #228]	; 0xe4
   16750:	eor	r1, r1, r3
   16754:	ldr	r3, [sp, #188]	; 0xbc
   16758:	eor	r4, r4, r3
   1675c:	lsl	r3, r4, #1
   16760:	orr	r3, r3, r1, lsr #31
   16764:	lsl	r1, r1, #1
   16768:	str	r3, [sp, #248]	; 0xf8
   1676c:	orr	r3, r1, r4, lsr #31
   16770:	ldr	r1, [sp, #164]	; 0xa4
   16774:	str	r3, [sp, #240]	; 0xf0
   16778:	ldr	r3, [sp, #12]
   1677c:	adds	r3, r3, r2
   16780:	ldr	r2, [sp, #16]
   16784:	adc	r6, r2, r1
   16788:	ldr	r2, [sp, #216]	; 0xd8
   1678c:	adds	r3, r3, fp
   16790:	adc	r6, r6, r2
   16794:	ldr	r2, [sp, #212]	; 0xd4
   16798:	eor	r5, r6, r2
   1679c:	ldr	r2, [sp, #208]	; 0xd0
   167a0:	eor	r1, r3, r2
   167a4:	ldr	r2, [sp, #192]	; 0xc0
   167a8:	adds	r2, r2, r5
   167ac:	adc	lr, r0, r1
   167b0:	ldr	r0, [sp, #216]	; 0xd8
   167b4:	eor	fp, fp, r2
   167b8:	lsr	ip, fp, #24
   167bc:	eor	r0, lr, r0
   167c0:	orr	r8, ip, r0, lsl #8
   167c4:	lsr	r0, r0, #24
   167c8:	orr	r4, r0, fp, lsl #8
   167cc:	ldr	r0, [sp, #36]	; 0x24
   167d0:	ldr	ip, [sp, #264]	; 0x108
   167d4:	adds	r3, r0, r3
   167d8:	ldr	r0, [sp, #40]	; 0x28
   167dc:	adc	r6, r0, r6
   167e0:	adds	r3, r3, r8
   167e4:	ldr	r0, [sp, #148]	; 0x94
   167e8:	str	r3, [sp, #160]	; 0xa0
   167ec:	adc	r3, r6, r4
   167f0:	str	r3, [sp, #164]	; 0xa4
   167f4:	ldr	r3, [sp, #160]	; 0xa0
   167f8:	eor	r5, r5, r3
   167fc:	ldr	r3, [sp, #164]	; 0xa4
   16800:	eor	r1, r1, r3
   16804:	lsr	r3, r5, #16
   16808:	orr	r3, r3, r1, lsl #16
   1680c:	lsr	r1, r1, #16
   16810:	str	r3, [sp, #208]	; 0xd0
   16814:	orr	r3, r1, r5, lsl #16
   16818:	ldr	r1, [sp, #144]	; 0x90
   1681c:	str	r3, [sp, #212]	; 0xd4
   16820:	ldr	r3, [sp, #208]	; 0xd0
   16824:	adds	r2, r2, r3
   16828:	ldr	r3, [sp, #212]	; 0xd4
   1682c:	eor	r8, r8, r2
   16830:	adc	lr, lr, r3
   16834:	eor	r4, r4, lr
   16838:	lsl	r3, r4, #1
   1683c:	orr	r3, r3, r8, lsr #31
   16840:	lsl	r8, r8, #1
   16844:	str	r3, [sp, #256]	; 0x100
   16848:	orr	r3, r8, r4, lsr #31
   1684c:	str	r3, [sp, #216]	; 0xd8
   16850:	ldr	r3, [sp, #84]	; 0x54
   16854:	adds	r1, r3, r1
   16858:	ldr	r3, [sp, #88]	; 0x58
   1685c:	adc	sl, r3, r0
   16860:	ldr	r0, [sp, #204]	; 0xcc
   16864:	ldr	r3, [sp, #264]	; 0x108
   16868:	adds	r1, r1, r3
   1686c:	ldr	r3, [sp, #268]	; 0x10c
   16870:	adc	sl, sl, r3
   16874:	ldr	r3, [sp, #236]	; 0xec
   16878:	eor	r7, sl, r3
   1687c:	ldr	r3, [sp, #232]	; 0xe8
   16880:	eor	r5, r1, r3
   16884:	ldr	r3, [sp, #200]	; 0xc8
   16888:	adds	r3, r3, r7
   1688c:	eor	r4, r3, ip
   16890:	ldr	ip, [sp, #268]	; 0x10c
   16894:	adc	r0, r0, r5
   16898:	lsr	fp, r4, #24
   1689c:	eor	r6, r0, ip
   168a0:	orr	ip, fp, r6, lsl #8
   168a4:	lsr	r6, r6, #24
   168a8:	orr	r8, r6, r4, lsl #8
   168ac:	ldr	r4, [sp, #44]	; 0x2c
   168b0:	adds	r1, r4, r1
   168b4:	ldr	r4, [sp, #48]	; 0x30
   168b8:	adc	sl, r4, sl
   168bc:	adds	r1, r1, ip
   168c0:	str	r1, [sp, #144]	; 0x90
   168c4:	adc	r1, sl, r8
   168c8:	str	r1, [sp, #148]	; 0x94
   168cc:	ldr	r1, [sp, #144]	; 0x90
   168d0:	eor	r7, r7, r1
   168d4:	ldr	r1, [sp, #148]	; 0x94
   168d8:	eor	r5, r5, r1
   168dc:	lsr	r1, r7, #16
   168e0:	orr	r1, r1, r5, lsl #16
   168e4:	lsr	r5, r5, #16
   168e8:	str	r1, [sp, #232]	; 0xe8
   168ec:	orr	r1, r5, r7, lsl #16
   168f0:	str	r1, [sp, #236]	; 0xec
   168f4:	ldr	r1, [sp, #232]	; 0xe8
   168f8:	ldr	r5, [sp, #156]	; 0x9c
   168fc:	adds	r3, r3, r1
   16900:	ldr	r1, [sp, #236]	; 0xec
   16904:	eor	ip, ip, r3
   16908:	adc	r0, r0, r1
   1690c:	eor	r8, r8, r0
   16910:	lsl	r1, r8, #1
   16914:	orr	r4, r1, ip, lsr #31
   16918:	ldr	r1, [sp, #84]	; 0x54
   1691c:	lsl	ip, ip, #1
   16920:	orr	fp, ip, r8, lsr #31
   16924:	ldr	ip, [sp, #152]	; 0x98
   16928:	adds	r1, r1, ip
   1692c:	ldr	ip, [sp, #88]	; 0x58
   16930:	adc	sl, ip, r5
   16934:	ldr	ip, [sp, #228]	; 0xe4
   16938:	adds	r1, r1, fp
   1693c:	adc	sl, sl, r4
   16940:	eor	r7, sl, r9
   16944:	adds	r2, r2, r7
   16948:	eor	fp, fp, r2
   1694c:	eor	r5, r1, ip
   16950:	lsr	ip, fp, #24
   16954:	adc	lr, lr, r5
   16958:	eor	r6, lr, r4
   1695c:	orr	r4, ip, r6, lsl #8
   16960:	ldr	ip, [sp, #20]
   16964:	lsr	r6, r6, #24
   16968:	orr	r8, r6, fp, lsl #8
   1696c:	adds	r1, ip, r1
   16970:	ldr	ip, [sp, #24]
   16974:	adc	sl, ip, sl
   16978:	adds	r1, r1, r4
   1697c:	ldr	ip, [sp, #172]	; 0xac
   16980:	str	r1, [sp, #152]	; 0x98
   16984:	adc	r1, sl, r8
   16988:	str	r1, [sp, #156]	; 0x9c
   1698c:	ldr	r1, [sp, #152]	; 0x98
   16990:	eor	r7, r7, r1
   16994:	ldr	r1, [sp, #156]	; 0x9c
   16998:	eor	r5, r5, r1
   1699c:	lsr	r1, r7, #16
   169a0:	orr	r1, r1, r5, lsl #16
   169a4:	lsr	r5, r5, #16
   169a8:	str	r1, [sp, #228]	; 0xe4
   169ac:	orr	r1, r5, r7, lsl #16
   169b0:	str	r1, [sp, #260]	; 0x104
   169b4:	ldr	r1, [sp, #228]	; 0xe4
   169b8:	adds	r2, r2, r1
   169bc:	ldr	r1, [sp, #168]	; 0xa8
   169c0:	str	r2, [sp, #192]	; 0xc0
   169c4:	ldr	r2, [sp, #260]	; 0x104
   169c8:	adc	r2, lr, r2
   169cc:	str	r2, [sp, #196]	; 0xc4
   169d0:	ldr	r2, [sp, #192]	; 0xc0
   169d4:	eor	r4, r4, r2
   169d8:	ldr	r2, [sp, #196]	; 0xc4
   169dc:	eor	r8, r8, r2
   169e0:	lsl	r2, r8, #1
   169e4:	orr	r2, r2, r4, lsr #31
   169e8:	lsl	r4, r4, #1
   169ec:	str	r2, [sp, #268]	; 0x10c
   169f0:	orr	r2, r4, r8, lsr #31
   169f4:	str	r2, [sp, #264]	; 0x108
   169f8:	ldr	r2, [sp, #68]	; 0x44
   169fc:	adds	r2, r2, r1
   16a00:	ldr	r1, [sp, #72]	; 0x48
   16a04:	adc	r5, r1, ip
   16a08:	ldr	r1, [sp, #244]	; 0xf4
   16a0c:	ldr	ip, [sp, #244]	; 0xf4
   16a10:	adds	r2, r2, r1
   16a14:	ldr	r1, [sp, #252]	; 0xfc
   16a18:	adc	r5, r5, r1
   16a1c:	ldr	r1, [sp, #212]	; 0xd4
   16a20:	eor	r4, r5, r1
   16a24:	ldr	r1, [sp, #208]	; 0xd0
   16a28:	adds	r3, r3, r4
   16a2c:	ldr	lr, [sp, #252]	; 0xfc
   16a30:	eor	ip, r3, ip
   16a34:	lsr	r8, ip, #24
   16a38:	eor	r1, r2, r1
   16a3c:	adc	r0, r0, r1
   16a40:	eor	lr, r0, lr
   16a44:	orr	r6, r8, lr, lsl #8
   16a48:	lsr	lr, lr, #24
   16a4c:	orr	r7, lr, ip, lsl #8
   16a50:	ldr	ip, [sp, #36]	; 0x24
   16a54:	adds	r2, ip, r2
   16a58:	ldr	ip, [sp, #40]	; 0x28
   16a5c:	adc	r5, ip, r5
   16a60:	adds	r2, r2, r6
   16a64:	str	r2, [sp, #168]	; 0xa8
   16a68:	adc	r2, r5, r7
   16a6c:	str	r2, [sp, #172]	; 0xac
   16a70:	ldr	r2, [sp, #168]	; 0xa8
   16a74:	eor	r4, r4, r2
   16a78:	ldr	r2, [sp, #172]	; 0xac
   16a7c:	eor	r1, r1, r2
   16a80:	lsr	r2, r4, #16
   16a84:	orr	r2, r2, r1, lsl #16
   16a88:	lsr	r1, r1, #16
   16a8c:	str	r2, [sp, #208]	; 0xd0
   16a90:	orr	r2, r1, r4, lsl #16
   16a94:	ldr	r1, [sp, #164]	; 0xa4
   16a98:	str	r2, [sp, #212]	; 0xd4
   16a9c:	ldr	r2, [sp, #208]	; 0xd0
   16aa0:	adds	r3, r3, r2
   16aa4:	str	r3, [sp, #200]	; 0xc8
   16aa8:	ldr	r3, [sp, #212]	; 0xd4
   16aac:	adc	r3, r0, r3
   16ab0:	str	r3, [sp, #204]	; 0xcc
   16ab4:	ldr	r3, [sp, #200]	; 0xc8
   16ab8:	ldr	r2, [sp, #204]	; 0xcc
   16abc:	eor	r3, r3, r6
   16ac0:	lsl	r6, r3, #1
   16ac4:	eor	r7, r7, r2
   16ac8:	lsl	r2, r7, #1
   16acc:	orr	r6, r6, r7, lsr #31
   16ad0:	orr	r2, r2, r3, lsr #31
   16ad4:	ldr	r3, [sp, #60]	; 0x3c
   16ad8:	str	r2, [sp, #244]	; 0xf4
   16adc:	ldr	r2, [sp, #160]	; 0xa0
   16ae0:	adds	r3, r3, r2
   16ae4:	ldr	r2, [sp, #64]	; 0x40
   16ae8:	adc	r7, r2, r1
   16aec:	ldr	r1, [sp, #180]	; 0xb4
   16af0:	ldr	r2, [sp, #240]	; 0xf0
   16af4:	adds	r3, r3, r2
   16af8:	ldr	r2, [sp, #248]	; 0xf8
   16afc:	adc	r7, r7, r2
   16b00:	ldr	r2, [sp, #236]	; 0xec
   16b04:	eor	r4, r7, r2
   16b08:	ldr	r2, [sp, #232]	; 0xe8
   16b0c:	eor	r0, r3, r2
   16b10:	ldr	r2, [sp, #176]	; 0xb0
   16b14:	adds	r2, r2, r4
   16b18:	adc	lr, r1, r0
   16b1c:	ldr	r1, [sp, #240]	; 0xf0
   16b20:	eor	r8, r2, r1
   16b24:	ldr	r1, [sp, #248]	; 0xf8
   16b28:	lsr	r9, r8, #24
   16b2c:	eor	ip, lr, r1
   16b30:	orr	r1, r9, ip, lsl #8
   16b34:	lsr	ip, ip, #24
   16b38:	orr	r5, ip, r8, lsl #8
   16b3c:	ldr	ip, [sp, #52]	; 0x34
   16b40:	adds	r3, ip, r3
   16b44:	ldr	ip, [sp, #56]	; 0x38
   16b48:	adc	r7, ip, r7
   16b4c:	adds	r3, r3, r1
   16b50:	str	r3, [sp, #160]	; 0xa0
   16b54:	adc	r3, r7, r5
   16b58:	str	r3, [sp, #164]	; 0xa4
   16b5c:	ldr	r3, [sp, #160]	; 0xa0
   16b60:	ldr	ip, [sp, #216]	; 0xd8
   16b64:	eor	r4, r4, r3
   16b68:	ldr	r3, [sp, #164]	; 0xa4
   16b6c:	eor	r0, r0, r3
   16b70:	lsr	r3, r4, #16
   16b74:	orr	r3, r3, r0, lsl #16
   16b78:	lsr	r0, r0, #16
   16b7c:	str	r3, [sp, #232]	; 0xe8
   16b80:	orr	r3, r0, r4, lsl #16
   16b84:	ldr	r0, [sp, #148]	; 0x94
   16b88:	str	r3, [sp, #236]	; 0xec
   16b8c:	ldr	r3, [sp, #232]	; 0xe8
   16b90:	adds	r2, r2, r3
   16b94:	ldr	r3, [sp, #236]	; 0xec
   16b98:	eor	r1, r1, r2
   16b9c:	adc	lr, lr, r3
   16ba0:	eor	r5, r5, lr
   16ba4:	lsl	r3, r5, #1
   16ba8:	orr	r3, r3, r1, lsr #31
   16bac:	lsl	r1, r1, #1
   16bb0:	str	r3, [sp, #248]	; 0xf8
   16bb4:	orr	r3, r1, r5, lsr #31
   16bb8:	ldr	r1, [sp, #144]	; 0x90
   16bbc:	str	r3, [sp, #240]	; 0xf0
   16bc0:	ldr	r3, [sp, #12]
   16bc4:	adds	r1, r3, r1
   16bc8:	ldr	r3, [sp, #16]
   16bcc:	adc	sl, r3, r0
   16bd0:	ldr	r0, [sp, #188]	; 0xbc
   16bd4:	ldr	r3, [sp, #216]	; 0xd8
   16bd8:	adds	r1, r1, r3
   16bdc:	ldr	r3, [sp, #256]	; 0x100
   16be0:	adc	sl, sl, r3
   16be4:	ldr	r3, [sp, #224]	; 0xe0
   16be8:	eor	r7, sl, r3
   16bec:	ldr	r3, [sp, #220]	; 0xdc
   16bf0:	eor	r4, r1, r3
   16bf4:	ldr	r3, [sp, #184]	; 0xb8
   16bf8:	adds	r3, r3, r7
   16bfc:	eor	r8, r3, ip
   16c00:	ldr	ip, [sp, #256]	; 0x100
   16c04:	adc	r0, r0, r4
   16c08:	lsr	fp, r8, #24
   16c0c:	eor	r5, r0, ip
   16c10:	orr	ip, fp, r5, lsl #8
   16c14:	lsr	r5, r5, #24
   16c18:	orr	r9, r5, r8, lsl #8
   16c1c:	ldr	r5, [sp, #44]	; 0x2c
   16c20:	adds	r1, r5, r1
   16c24:	ldr	r5, [sp, #48]	; 0x30
   16c28:	adc	sl, r5, sl
   16c2c:	adds	r1, r1, ip
   16c30:	str	r1, [sp, #144]	; 0x90
   16c34:	adc	r1, sl, r9
   16c38:	str	r1, [sp, #148]	; 0x94
   16c3c:	ldr	r1, [sp, #144]	; 0x90
   16c40:	eor	r7, r7, r1
   16c44:	ldr	r1, [sp, #148]	; 0x94
   16c48:	eor	r4, r4, r1
   16c4c:	lsr	r1, r7, #16
   16c50:	orr	r8, r1, r4, lsl #16
   16c54:	lsr	r4, r4, #16
   16c58:	adds	r3, r3, r8
   16c5c:	orr	sl, r4, r7, lsl #16
   16c60:	eor	ip, ip, r3
   16c64:	ldr	r4, [sp, #156]	; 0x9c
   16c68:	adc	r0, r0, sl
   16c6c:	eor	r9, r9, r0
   16c70:	lsl	r1, r9, #1
   16c74:	orr	r1, r1, ip, lsr #31
   16c78:	lsl	ip, ip, #1
   16c7c:	orr	fp, ip, r9, lsr #31
   16c80:	str	r1, [sp, #216]	; 0xd8
   16c84:	ldr	r1, [sp, #124]	; 0x7c
   16c88:	ldr	ip, [sp, #152]	; 0x98
   16c8c:	adds	r1, r1, ip
   16c90:	ldr	ip, [sp, #128]	; 0x80
   16c94:	adc	r9, ip, r4
   16c98:	ldr	ip, [sp, #244]	; 0xf4
   16c9c:	adds	r1, r1, r6
   16ca0:	eor	r5, r1, r8
   16ca4:	adc	r9, r9, ip
   16ca8:	eor	r7, r9, sl
   16cac:	adds	r2, r2, r7
   16cb0:	eor	r6, r6, r2
   16cb4:	adc	lr, lr, r5
   16cb8:	lsr	sl, r6, #24
   16cbc:	eor	r4, lr, ip
   16cc0:	orr	ip, sl, r4, lsl #8
   16cc4:	lsr	r4, r4, #24
   16cc8:	orr	r8, r4, r6, lsl #8
   16ccc:	ldr	r4, [sp, #92]	; 0x5c
   16cd0:	adds	r1, r4, r1
   16cd4:	ldr	r4, [sp, #96]	; 0x60
   16cd8:	adc	r9, r4, r9
   16cdc:	adds	r1, r1, ip
   16ce0:	str	r1, [sp, #152]	; 0x98
   16ce4:	adc	r1, r9, r8
   16ce8:	str	r1, [sp, #156]	; 0x9c
   16cec:	ldr	r1, [sp, #152]	; 0x98
   16cf0:	eor	r7, r7, r1
   16cf4:	ldr	r1, [sp, #156]	; 0x9c
   16cf8:	eor	r5, r5, r1
   16cfc:	lsr	r1, r7, #16
   16d00:	orr	r1, r1, r5, lsl #16
   16d04:	lsr	r5, r5, #16
   16d08:	str	r1, [sp, #220]	; 0xdc
   16d0c:	orr	r1, r5, r7, lsl #16
   16d10:	str	r1, [sp, #224]	; 0xe0
   16d14:	ldr	r1, [sp, #220]	; 0xdc
   16d18:	adds	r2, r2, r1
   16d1c:	ldr	r1, [sp, #168]	; 0xa8
   16d20:	str	r2, [sp, #176]	; 0xb0
   16d24:	ldr	r2, [sp, #224]	; 0xe0
   16d28:	adc	r2, lr, r2
   16d2c:	str	r2, [sp, #180]	; 0xb4
   16d30:	ldr	r2, [sp, #176]	; 0xb0
   16d34:	eor	ip, ip, r2
   16d38:	ldr	r2, [sp, #180]	; 0xb4
   16d3c:	eor	r8, r8, r2
   16d40:	lsl	r2, r8, #1
   16d44:	orr	r2, r2, ip, lsr #31
   16d48:	lsl	ip, ip, #1
   16d4c:	str	r2, [sp, #252]	; 0xfc
   16d50:	orr	r2, ip, r8, lsr #31
   16d54:	ldr	ip, [sp, #172]	; 0xac
   16d58:	str	r2, [sp, #244]	; 0xf4
   16d5c:	ldr	r2, [sp, #76]	; 0x4c
   16d60:	adds	r2, r2, r1
   16d64:	ldr	r1, [sp, #80]	; 0x50
   16d68:	adc	r5, r1, ip
   16d6c:	ldr	r1, [sp, #240]	; 0xf0
   16d70:	adds	r2, r2, r1
   16d74:	ldr	r1, [sp, #248]	; 0xf8
   16d78:	adc	r5, r5, r1
   16d7c:	ldr	r1, [sp, #260]	; 0x104
   16d80:	eor	ip, r5, r1
   16d84:	ldr	r1, [sp, #228]	; 0xe4
   16d88:	adds	r3, r3, ip
   16d8c:	eor	r9, r2, r1
   16d90:	ldr	r1, [sp, #240]	; 0xf0
   16d94:	adc	r0, r0, r9
   16d98:	eor	r6, r3, r1
   16d9c:	ldr	r1, [sp, #248]	; 0xf8
   16da0:	lsr	r7, r6, #24
   16da4:	eor	lr, r0, r1
   16da8:	orr	r1, r7, lr, lsl #8
   16dac:	lsr	lr, lr, #24
   16db0:	orr	r4, lr, r6, lsl #8
   16db4:	ldr	lr, [sp, #116]	; 0x74
   16db8:	adds	r2, lr, r2
   16dbc:	ldr	lr, [sp, #120]	; 0x78
   16dc0:	adc	r5, lr, r5
   16dc4:	adds	r2, r2, r1
   16dc8:	str	r2, [sp, #168]	; 0xa8
   16dcc:	adc	r2, r5, r4
   16dd0:	str	r2, [sp, #172]	; 0xac
   16dd4:	ldr	r2, [sp, #168]	; 0xa8
   16dd8:	eor	ip, ip, r2
   16ddc:	ldr	r2, [sp, #172]	; 0xac
   16de0:	lsr	lr, ip, #16
   16de4:	eor	r2, r2, r9
   16de8:	orr	lr, lr, r2, lsl #16
   16dec:	lsr	r9, r2, #16
   16df0:	adds	r3, r3, lr
   16df4:	orr	r9, r9, ip, lsl #16
   16df8:	str	lr, [sp, #228]	; 0xe4
   16dfc:	str	r3, [sp, #184]	; 0xb8
   16e00:	adc	r3, r0, r9
   16e04:	ldr	r2, [sp, #160]	; 0xa0
   16e08:	str	r3, [sp, #188]	; 0xbc
   16e0c:	ldr	r3, [sp, #184]	; 0xb8
   16e10:	ldr	r0, [sp, #196]	; 0xc4
   16e14:	eor	r1, r1, r3
   16e18:	ldr	r3, [sp, #188]	; 0xbc
   16e1c:	eor	r4, r4, r3
   16e20:	lsl	r3, r4, #1
   16e24:	orr	r3, r3, r1, lsr #31
   16e28:	lsl	r1, r1, #1
   16e2c:	str	r3, [sp, #248]	; 0xf8
   16e30:	orr	r3, r1, r4, lsr #31
   16e34:	ldr	r1, [sp, #164]	; 0xa4
   16e38:	str	r3, [sp, #240]	; 0xf0
   16e3c:	ldr	r3, [sp, #28]
   16e40:	adds	r3, r3, r2
   16e44:	ldr	r2, [sp, #32]
   16e48:	adc	r6, r2, r1
   16e4c:	ldr	r2, [sp, #216]	; 0xd8
   16e50:	adds	r3, r3, fp
   16e54:	adc	r6, r6, r2
   16e58:	ldr	r2, [sp, #212]	; 0xd4
   16e5c:	eor	r5, r6, r2
   16e60:	ldr	r2, [sp, #208]	; 0xd0
   16e64:	eor	r1, r3, r2
   16e68:	ldr	r2, [sp, #192]	; 0xc0
   16e6c:	adds	r2, r2, r5
   16e70:	adc	lr, r0, r1
   16e74:	ldr	r0, [sp, #216]	; 0xd8
   16e78:	eor	fp, fp, r2
   16e7c:	lsr	ip, fp, #24
   16e80:	eor	r0, lr, r0
   16e84:	orr	r8, ip, r0, lsl #8
   16e88:	lsr	r0, r0, #24
   16e8c:	orr	r4, r0, fp, lsl #8
   16e90:	ldr	r0, [sp, #100]	; 0x64
   16e94:	adds	r3, r0, r3
   16e98:	ldr	r0, [sp, #104]	; 0x68
   16e9c:	adc	r6, r0, r6
   16ea0:	adds	r3, r3, r8
   16ea4:	ldr	r0, [sp, #148]	; 0x94
   16ea8:	str	r3, [sp, #160]	; 0xa0
   16eac:	adc	r3, r6, r4
   16eb0:	str	r3, [sp, #164]	; 0xa4
   16eb4:	ldr	r3, [sp, #160]	; 0xa0
   16eb8:	eor	r5, r5, r3
   16ebc:	ldr	r3, [sp, #164]	; 0xa4
   16ec0:	eor	r1, r1, r3
   16ec4:	lsr	r3, r5, #16
   16ec8:	orr	r3, r3, r1, lsl #16
   16ecc:	lsr	r1, r1, #16
   16ed0:	str	r3, [sp, #208]	; 0xd0
   16ed4:	orr	r3, r1, r5, lsl #16
   16ed8:	ldr	r1, [sp, #144]	; 0x90
   16edc:	str	r3, [sp, #212]	; 0xd4
   16ee0:	ldr	r3, [sp, #208]	; 0xd0
   16ee4:	adds	r2, r2, r3
   16ee8:	ldr	r3, [sp, #212]	; 0xd4
   16eec:	eor	r8, r8, r2
   16ef0:	adc	lr, lr, r3
   16ef4:	eor	r4, r4, lr
   16ef8:	lsl	r3, r4, #1
   16efc:	orr	r3, r3, r8, lsr #31
   16f00:	lsl	r8, r8, #1
   16f04:	str	r3, [sp, #256]	; 0x100
   16f08:	orr	r3, r8, r4, lsr #31
   16f0c:	str	r3, [sp, #216]	; 0xd8
   16f10:	ldr	r3, [sp, #108]	; 0x6c
   16f14:	adds	r1, r3, r1
   16f18:	ldr	r3, [sp, #112]	; 0x70
   16f1c:	adc	sl, r3, r0
   16f20:	ldr	r3, [sp, #264]	; 0x108
   16f24:	ldr	r0, [sp, #204]	; 0xcc
   16f28:	ldr	ip, [sp, #264]	; 0x108
   16f2c:	adds	r1, r1, r3
   16f30:	ldr	r3, [sp, #268]	; 0x10c
   16f34:	adc	sl, sl, r3
   16f38:	ldr	r3, [sp, #236]	; 0xec
   16f3c:	eor	r7, sl, r3
   16f40:	ldr	r3, [sp, #232]	; 0xe8
   16f44:	eor	r5, r1, r3
   16f48:	ldr	r3, [sp, #200]	; 0xc8
   16f4c:	adds	r3, r3, r7
   16f50:	eor	r4, r3, ip
   16f54:	ldr	ip, [sp, #268]	; 0x10c
   16f58:	adc	r0, r0, r5
   16f5c:	lsr	fp, r4, #24
   16f60:	eor	r6, r0, ip
   16f64:	orr	ip, fp, r6, lsl #8
   16f68:	lsr	r6, r6, #24
   16f6c:	orr	r8, r6, r4, lsl #8
   16f70:	ldr	r4, [sp, #4]
   16f74:	adds	r1, r4, r1
   16f78:	ldr	r4, [sp, #8]
   16f7c:	adc	sl, r4, sl
   16f80:	adds	r1, r1, ip
   16f84:	str	r1, [sp, #144]	; 0x90
   16f88:	adc	r1, sl, r8
   16f8c:	str	r1, [sp, #148]	; 0x94
   16f90:	ldr	r1, [sp, #144]	; 0x90
   16f94:	eor	r7, r7, r1
   16f98:	ldr	r1, [sp, #148]	; 0x94
   16f9c:	eor	r5, r5, r1
   16fa0:	lsr	r1, r7, #16
   16fa4:	orr	r1, r1, r5, lsl #16
   16fa8:	lsr	r5, r5, #16
   16fac:	str	r1, [sp, #232]	; 0xe8
   16fb0:	orr	r1, r5, r7, lsl #16
   16fb4:	ldr	r5, [sp, #156]	; 0x9c
   16fb8:	str	r1, [sp, #236]	; 0xec
   16fbc:	ldr	r1, [sp, #232]	; 0xe8
   16fc0:	adds	r3, r3, r1
   16fc4:	ldr	r1, [sp, #236]	; 0xec
   16fc8:	eor	ip, ip, r3
   16fcc:	adc	r0, r0, r1
   16fd0:	eor	r8, r8, r0
   16fd4:	lsl	r1, r8, #1
   16fd8:	orr	r4, r1, ip, lsr #31
   16fdc:	ldr	r1, [sp, #4]
   16fe0:	lsl	ip, ip, #1
   16fe4:	orr	fp, ip, r8, lsr #31
   16fe8:	ldr	ip, [sp, #152]	; 0x98
   16fec:	adds	r1, r1, ip
   16ff0:	ldr	ip, [sp, #8]
   16ff4:	adc	sl, ip, r5
   16ff8:	ldr	ip, [sp, #228]	; 0xe4
   16ffc:	adds	r1, r1, fp
   17000:	adc	sl, sl, r4
   17004:	eor	r7, sl, r9
   17008:	adds	r2, r2, r7
   1700c:	eor	fp, fp, r2
   17010:	eor	r5, r1, ip
   17014:	lsr	ip, fp, #24
   17018:	adc	lr, lr, r5
   1701c:	eor	r6, lr, r4
   17020:	orr	r4, ip, r6, lsl #8
   17024:	ldr	ip, [sp, #12]
   17028:	lsr	r6, r6, #24
   1702c:	orr	r8, r6, fp, lsl #8
   17030:	adds	r1, ip, r1
   17034:	ldr	ip, [sp, #16]
   17038:	adc	sl, ip, sl
   1703c:	adds	r1, r1, r4
   17040:	str	r1, [sp, #152]	; 0x98
   17044:	adc	r1, sl, r8
   17048:	str	r1, [sp, #156]	; 0x9c
   1704c:	ldr	r1, [sp, #152]	; 0x98
   17050:	eor	r7, r7, r1
   17054:	ldr	r1, [sp, #156]	; 0x9c
   17058:	eor	r5, r5, r1
   1705c:	lsr	r1, r7, #16
   17060:	orr	r1, r1, r5, lsl #16
   17064:	lsr	r5, r5, #16
   17068:	str	r1, [sp, #228]	; 0xe4
   1706c:	orr	r1, r5, r7, lsl #16
   17070:	str	r1, [sp, #260]	; 0x104
   17074:	ldr	r1, [sp, #228]	; 0xe4
   17078:	adds	r2, r2, r1
   1707c:	str	r2, [sp, #192]	; 0xc0
   17080:	ldr	r1, [sp, #168]	; 0xa8
   17084:	ldr	r2, [sp, #260]	; 0x104
   17088:	ldr	ip, [sp, #172]	; 0xac
   1708c:	adc	r2, lr, r2
   17090:	ldr	lr, [sp, #252]	; 0xfc
   17094:	str	r2, [sp, #196]	; 0xc4
   17098:	ldr	r2, [sp, #192]	; 0xc0
   1709c:	eor	r4, r4, r2
   170a0:	ldr	r2, [sp, #196]	; 0xc4
   170a4:	eor	r8, r8, r2
   170a8:	lsl	r2, r8, #1
   170ac:	orr	r2, r2, r4, lsr #31
   170b0:	lsl	r4, r4, #1
   170b4:	str	r2, [sp, #268]	; 0x10c
   170b8:	orr	r2, r4, r8, lsr #31
   170bc:	str	r2, [sp, #264]	; 0x108
   170c0:	ldr	r2, [sp, #20]
   170c4:	adds	r2, r2, r1
   170c8:	ldr	r1, [sp, #24]
   170cc:	adc	r5, r1, ip
   170d0:	ldr	r1, [sp, #244]	; 0xf4
   170d4:	ldr	ip, [sp, #244]	; 0xf4
   170d8:	adds	r2, r2, r1
   170dc:	ldr	r1, [sp, #252]	; 0xfc
   170e0:	adc	r5, r5, r1
   170e4:	ldr	r1, [sp, #212]	; 0xd4
   170e8:	eor	r4, r5, r1
   170ec:	ldr	r1, [sp, #208]	; 0xd0
   170f0:	adds	r3, r3, r4
   170f4:	eor	ip, r3, ip
   170f8:	lsr	r8, ip, #24
   170fc:	eor	r1, r2, r1
   17100:	adc	r0, r0, r1
   17104:	eor	lr, r0, lr
   17108:	orr	r6, r8, lr, lsl #8
   1710c:	lsr	lr, lr, #24
   17110:	orr	r7, lr, ip, lsl #8
   17114:	ldr	ip, [sp, #28]
   17118:	adds	r2, ip, r2
   1711c:	ldr	ip, [sp, #32]
   17120:	adc	r5, ip, r5
   17124:	adds	r2, r2, r6
   17128:	str	r2, [sp, #168]	; 0xa8
   1712c:	adc	r2, r5, r7
   17130:	str	r2, [sp, #172]	; 0xac
   17134:	ldr	r2, [sp, #168]	; 0xa8
   17138:	eor	r4, r4, r2
   1713c:	ldr	r2, [sp, #172]	; 0xac
   17140:	eor	r1, r1, r2
   17144:	lsr	r2, r4, #16
   17148:	orr	r2, r2, r1, lsl #16
   1714c:	lsr	r1, r1, #16
   17150:	str	r2, [sp, #208]	; 0xd0
   17154:	orr	r2, r1, r4, lsl #16
   17158:	str	r2, [sp, #212]	; 0xd4
   1715c:	ldr	r2, [sp, #208]	; 0xd0
   17160:	adds	r3, r3, r2
   17164:	str	r3, [sp, #200]	; 0xc8
   17168:	ldr	r3, [sp, #212]	; 0xd4
   1716c:	adc	r3, r0, r3
   17170:	str	r3, [sp, #204]	; 0xcc
   17174:	ldr	r3, [sp, #200]	; 0xc8
   17178:	ldr	r2, [sp, #204]	; 0xcc
   1717c:	eor	r3, r3, r6
   17180:	lsl	r6, r3, #1
   17184:	eor	r7, r7, r2
   17188:	lsl	r2, r7, #1
   1718c:	orr	r6, r6, r7, lsr #31
   17190:	orr	r2, r2, r3, lsr #31
   17194:	ldr	r3, [sp, #36]	; 0x24
   17198:	str	r2, [sp, #244]	; 0xf4
   1719c:	ldr	r2, [sp, #160]	; 0xa0
   171a0:	ldr	r1, [sp, #164]	; 0xa4
   171a4:	adds	r3, r3, r2
   171a8:	ldr	r2, [sp, #40]	; 0x28
   171ac:	adc	r7, r2, r1
   171b0:	ldr	r1, [sp, #180]	; 0xb4
   171b4:	ldr	r2, [sp, #240]	; 0xf0
   171b8:	adds	r3, r3, r2
   171bc:	ldr	r2, [sp, #248]	; 0xf8
   171c0:	adc	r7, r7, r2
   171c4:	ldr	r2, [sp, #236]	; 0xec
   171c8:	eor	r4, r7, r2
   171cc:	ldr	r2, [sp, #232]	; 0xe8
   171d0:	eor	r0, r3, r2
   171d4:	ldr	r2, [sp, #176]	; 0xb0
   171d8:	adds	r2, r2, r4
   171dc:	adc	lr, r1, r0
   171e0:	ldr	r1, [sp, #240]	; 0xf0
   171e4:	eor	r8, r2, r1
   171e8:	ldr	r1, [sp, #248]	; 0xf8
   171ec:	lsr	r9, r8, #24
   171f0:	eor	ip, lr, r1
   171f4:	orr	r1, r9, ip, lsl #8
   171f8:	lsr	ip, ip, #24
   171fc:	orr	r5, ip, r8, lsl #8
   17200:	ldr	ip, [sp, #44]	; 0x2c
   17204:	adds	r3, ip, r3
   17208:	ldr	ip, [sp, #48]	; 0x30
   1720c:	adc	r7, ip, r7
   17210:	adds	r3, r3, r1
   17214:	str	r3, [sp, #160]	; 0xa0
   17218:	adc	r3, r7, r5
   1721c:	str	r3, [sp, #164]	; 0xa4
   17220:	ldr	r3, [sp, #160]	; 0xa0
   17224:	eor	r4, r4, r3
   17228:	ldr	r3, [sp, #164]	; 0xa4
   1722c:	eor	r0, r0, r3
   17230:	lsr	r3, r4, #16
   17234:	orr	r3, r3, r0, lsl #16
   17238:	lsr	r0, r0, #16
   1723c:	str	r3, [sp, #232]	; 0xe8
   17240:	orr	r3, r0, r4, lsl #16
   17244:	ldr	r0, [sp, #148]	; 0x94
   17248:	str	r3, [sp, #236]	; 0xec
   1724c:	ldr	r3, [sp, #232]	; 0xe8
   17250:	adds	r2, r2, r3
   17254:	ldr	r3, [sp, #236]	; 0xec
   17258:	eor	r1, r1, r2
   1725c:	adc	lr, lr, r3
   17260:	eor	r5, r5, lr
   17264:	lsl	r3, r5, #1
   17268:	orr	r3, r3, r1, lsr #31
   1726c:	lsl	r1, r1, #1
   17270:	str	r3, [sp, #248]	; 0xf8
   17274:	orr	r3, r1, r5, lsr #31
   17278:	ldr	r1, [sp, #144]	; 0x90
   1727c:	str	r3, [sp, #240]	; 0xf0
   17280:	ldr	r3, [sp, #52]	; 0x34
   17284:	adds	r1, r3, r1
   17288:	ldr	r3, [sp, #56]	; 0x38
   1728c:	adc	sl, r3, r0
   17290:	ldr	r3, [sp, #216]	; 0xd8
   17294:	adds	r1, r1, r3
   17298:	ldr	r3, [sp, #256]	; 0x100
   1729c:	adc	sl, sl, r3
   172a0:	ldr	r3, [sp, #224]	; 0xe0
   172a4:	eor	r7, sl, r3
   172a8:	ldr	r3, [sp, #220]	; 0xdc
   172ac:	eor	r4, r1, r3
   172b0:	ldr	r3, [sp, #184]	; 0xb8
   172b4:	ldr	r0, [sp, #188]	; 0xbc
   172b8:	ldr	ip, [sp, #216]	; 0xd8
   172bc:	adds	r3, r3, r7
   172c0:	adc	r0, r0, r4
   172c4:	eor	r8, r3, ip
   172c8:	ldr	ip, [sp, #256]	; 0x100
   172cc:	lsr	fp, r8, #24
   172d0:	eor	r5, r0, ip
   172d4:	orr	ip, fp, r5, lsl #8
   172d8:	lsr	r5, r5, #24
   172dc:	orr	r9, r5, r8, lsl #8
   172e0:	ldr	r5, [sp, #60]	; 0x3c
   172e4:	adds	r1, r5, r1
   172e8:	ldr	r5, [sp, #64]	; 0x40
   172ec:	adc	sl, r5, sl
   172f0:	adds	r1, r1, ip
   172f4:	str	r1, [sp, #144]	; 0x90
   172f8:	adc	r1, sl, r9
   172fc:	str	r1, [sp, #148]	; 0x94
   17300:	ldr	r1, [sp, #144]	; 0x90
   17304:	eor	r7, r7, r1
   17308:	ldr	r1, [sp, #148]	; 0x94
   1730c:	eor	r4, r4, r1
   17310:	lsr	r1, r7, #16
   17314:	orr	r8, r1, r4, lsl #16
   17318:	lsr	r4, r4, #16
   1731c:	adds	r3, r3, r8
   17320:	orr	sl, r4, r7, lsl #16
   17324:	eor	ip, ip, r3
   17328:	ldr	r4, [sp, #156]	; 0x9c
   1732c:	adc	r0, r0, sl
   17330:	eor	r9, r9, r0
   17334:	lsl	r1, r9, #1
   17338:	orr	r1, r1, ip, lsr #31
   1733c:	lsl	ip, ip, #1
   17340:	orr	fp, ip, r9, lsr #31
   17344:	str	r1, [sp, #216]	; 0xd8
   17348:	ldr	r1, [sp, #68]	; 0x44
   1734c:	ldr	ip, [sp, #152]	; 0x98
   17350:	adds	r1, r1, ip
   17354:	ldr	ip, [sp, #72]	; 0x48
   17358:	adc	r9, ip, r4
   1735c:	ldr	ip, [sp, #244]	; 0xf4
   17360:	adds	r1, r1, r6
   17364:	eor	r5, r1, r8
   17368:	adc	r9, r9, ip
   1736c:	eor	r7, r9, sl
   17370:	adds	r2, r2, r7
   17374:	eor	r6, r6, r2
   17378:	adc	lr, lr, r5
   1737c:	lsr	sl, r6, #24
   17380:	eor	r4, lr, ip
   17384:	orr	ip, sl, r4, lsl #8
   17388:	lsr	r4, r4, #24
   1738c:	orr	r8, r4, r6, lsl #8
   17390:	ldr	r4, [sp, #76]	; 0x4c
   17394:	adds	r1, r4, r1
   17398:	ldr	r4, [sp, #80]	; 0x50
   1739c:	adc	r9, r4, r9
   173a0:	adds	r1, r1, ip
   173a4:	str	r1, [sp, #152]	; 0x98
   173a8:	adc	r1, r9, r8
   173ac:	str	r1, [sp, #156]	; 0x9c
   173b0:	ldr	r1, [sp, #152]	; 0x98
   173b4:	eor	r7, r7, r1
   173b8:	ldr	r1, [sp, #156]	; 0x9c
   173bc:	eor	r5, r5, r1
   173c0:	lsr	r1, r7, #16
   173c4:	orr	r1, r1, r5, lsl #16
   173c8:	lsr	r5, r5, #16
   173cc:	str	r1, [sp, #220]	; 0xdc
   173d0:	orr	r1, r5, r7, lsl #16
   173d4:	str	r1, [sp, #224]	; 0xe0
   173d8:	ldr	r1, [sp, #220]	; 0xdc
   173dc:	adds	r2, r2, r1
   173e0:	str	r2, [sp, #176]	; 0xb0
   173e4:	ldr	r2, [sp, #224]	; 0xe0
   173e8:	adc	r2, lr, r2
   173ec:	str	r2, [sp, #180]	; 0xb4
   173f0:	ldr	r2, [sp, #176]	; 0xb0
   173f4:	eor	ip, ip, r2
   173f8:	ldr	r2, [sp, #180]	; 0xb4
   173fc:	eor	r8, r8, r2
   17400:	lsl	r2, r8, #1
   17404:	orr	r2, r2, ip, lsr #31
   17408:	lsl	ip, ip, #1
   1740c:	str	r2, [sp, #252]	; 0xfc
   17410:	orr	r2, ip, r8, lsr #31
   17414:	str	r2, [sp, #244]	; 0xf4
   17418:	ldr	r2, [sp, #84]	; 0x54
   1741c:	ldr	r1, [sp, #168]	; 0xa8
   17420:	ldr	ip, [sp, #172]	; 0xac
   17424:	adds	r2, r2, r1
   17428:	ldr	r1, [sp, #88]	; 0x58
   1742c:	adc	r5, r1, ip
   17430:	ldr	r1, [sp, #240]	; 0xf0
   17434:	adds	r2, r2, r1
   17438:	ldr	r1, [sp, #248]	; 0xf8
   1743c:	adc	r5, r5, r1
   17440:	ldr	r1, [sp, #260]	; 0x104
   17444:	eor	ip, r5, r1
   17448:	ldr	r1, [sp, #228]	; 0xe4
   1744c:	adds	r3, r3, ip
   17450:	eor	sl, r2, r1
   17454:	ldr	r1, [sp, #240]	; 0xf0
   17458:	adc	r0, r0, sl
   1745c:	eor	r6, r3, r1
   17460:	ldr	r1, [sp, #248]	; 0xf8
   17464:	lsr	r7, r6, #24
   17468:	eor	lr, r0, r1
   1746c:	orr	r1, r7, lr, lsl #8
   17470:	lsr	lr, lr, #24
   17474:	orr	r4, lr, r6, lsl #8
   17478:	ldr	lr, [sp, #92]	; 0x5c
   1747c:	adds	r2, lr, r2
   17480:	ldr	lr, [sp, #96]	; 0x60
   17484:	adc	r5, lr, r5
   17488:	adds	r2, r2, r1
   1748c:	str	r2, [sp, #168]	; 0xa8
   17490:	adc	r2, r5, r4
   17494:	str	r2, [sp, #172]	; 0xac
   17498:	ldr	r2, [sp, #168]	; 0xa8
   1749c:	eor	ip, ip, r2
   174a0:	ldr	r2, [sp, #172]	; 0xac
   174a4:	lsr	lr, ip, #16
   174a8:	eor	r2, r2, sl
   174ac:	orr	lr, lr, r2, lsl #16
   174b0:	lsr	sl, r2, #16
   174b4:	ldr	r2, [sp, #160]	; 0xa0
   174b8:	adds	r3, r3, lr
   174bc:	orr	sl, sl, ip, lsl #16
   174c0:	str	r3, [sp, #184]	; 0xb8
   174c4:	adc	r3, r0, sl
   174c8:	ldr	r0, [sp, #196]	; 0xc4
   174cc:	str	r3, [sp, #188]	; 0xbc
   174d0:	ldr	r3, [sp, #184]	; 0xb8
   174d4:	str	lr, [sp, #228]	; 0xe4
   174d8:	eor	r1, r1, r3
   174dc:	ldr	r3, [sp, #188]	; 0xbc
   174e0:	eor	r4, r4, r3
   174e4:	lsl	r3, r4, #1
   174e8:	orr	r3, r3, r1, lsr #31
   174ec:	lsl	r1, r1, #1
   174f0:	str	r3, [sp, #248]	; 0xf8
   174f4:	orr	r3, r1, r4, lsr #31
   174f8:	ldr	r1, [sp, #164]	; 0xa4
   174fc:	str	r3, [sp, #240]	; 0xf0
   17500:	ldr	r3, [sp, #100]	; 0x64
   17504:	adds	r3, r3, r2
   17508:	ldr	r2, [sp, #104]	; 0x68
   1750c:	adc	r6, r2, r1
   17510:	ldr	r2, [sp, #216]	; 0xd8
   17514:	adds	r3, r3, fp
   17518:	adc	r6, r6, r2
   1751c:	ldr	r2, [sp, #212]	; 0xd4
   17520:	eor	r5, r6, r2
   17524:	ldr	r2, [sp, #208]	; 0xd0
   17528:	eor	r1, r3, r2
   1752c:	ldr	r2, [sp, #192]	; 0xc0
   17530:	adds	r2, r2, r5
   17534:	adc	lr, r0, r1
   17538:	ldr	r0, [sp, #216]	; 0xd8
   1753c:	eor	fp, fp, r2
   17540:	lsr	ip, fp, #24
   17544:	eor	r0, lr, r0
   17548:	orr	r9, ip, r0, lsl #8
   1754c:	lsr	r0, r0, #24
   17550:	orr	r4, r0, fp, lsl #8
   17554:	ldr	r0, [sp, #108]	; 0x6c
   17558:	adds	r3, r0, r3
   1755c:	ldr	r0, [sp, #112]	; 0x70
   17560:	adc	r6, r0, r6
   17564:	adds	r3, r3, r9
   17568:	ldr	r0, [sp, #148]	; 0x94
   1756c:	str	r3, [sp, #160]	; 0xa0
   17570:	adc	r3, r6, r4
   17574:	str	r3, [sp, #164]	; 0xa4
   17578:	ldr	r3, [sp, #160]	; 0xa0
   1757c:	eor	r5, r5, r3
   17580:	ldr	r3, [sp, #164]	; 0xa4
   17584:	eor	r1, r1, r3
   17588:	lsr	r3, r5, #16
   1758c:	orr	r3, r3, r1, lsl #16
   17590:	lsr	r1, r1, #16
   17594:	str	r3, [sp, #192]	; 0xc0
   17598:	orr	r3, r1, r5, lsl #16
   1759c:	ldr	r1, [sp, #144]	; 0x90
   175a0:	str	r3, [sp, #196]	; 0xc4
   175a4:	ldr	r3, [sp, #192]	; 0xc0
   175a8:	ldr	r5, [sp, #268]	; 0x10c
   175ac:	adds	r2, r2, r3
   175b0:	ldr	r3, [sp, #196]	; 0xc4
   175b4:	eor	r9, r9, r2
   175b8:	adc	lr, lr, r3
   175bc:	eor	r4, r4, lr
   175c0:	lsl	r3, r4, #1
   175c4:	orr	r3, r3, r9, lsr #31
   175c8:	lsl	r9, r9, #1
   175cc:	str	r3, [sp, #212]	; 0xd4
   175d0:	orr	r3, r9, r4, lsr #31
   175d4:	ldr	r4, [sp, #264]	; 0x108
   175d8:	str	r3, [sp, #208]	; 0xd0
   175dc:	ldr	r3, [sp, #116]	; 0x74
   175e0:	adds	r1, r3, r1
   175e4:	ldr	r3, [sp, #120]	; 0x78
   175e8:	adc	ip, r3, r0
   175ec:	ldr	r0, [sp, #204]	; 0xcc
   175f0:	ldr	r3, [sp, #264]	; 0x108
   175f4:	adds	r1, r1, r3
   175f8:	ldr	r3, [sp, #268]	; 0x10c
   175fc:	adc	ip, ip, r3
   17600:	ldr	r3, [sp, #236]	; 0xec
   17604:	eor	r8, ip, r3
   17608:	ldr	r3, [sp, #232]	; 0xe8
   1760c:	eor	r6, r1, r3
   17610:	ldr	r3, [sp, #200]	; 0xc8
   17614:	adds	r3, r3, r8
   17618:	eor	r4, r3, r4
   1761c:	adc	r0, r0, r6
   17620:	lsr	fp, r4, #24
   17624:	eor	r7, r0, r5
   17628:	orr	r5, fp, r7, lsl #8
   1762c:	lsr	r7, r7, #24
   17630:	orr	r9, r7, r4, lsl #8
   17634:	ldr	r4, [sp, #124]	; 0x7c
   17638:	adds	r1, r4, r1
   1763c:	ldr	r4, [sp, #128]	; 0x80
   17640:	adc	ip, r4, ip
   17644:	adds	r1, r1, r5
   17648:	str	r1, [sp, #144]	; 0x90
   1764c:	adc	r1, ip, r9
   17650:	str	r1, [sp, #148]	; 0x94
   17654:	ldr	r1, [sp, #144]	; 0x90
   17658:	eor	r8, r8, r1
   1765c:	ldr	r1, [sp, #148]	; 0x94
   17660:	eor	r6, r6, r1
   17664:	lsr	r1, r8, #16
   17668:	orr	r1, r1, r6, lsl #16
   1766c:	lsr	r6, r6, #16
   17670:	adds	r3, r3, r1
   17674:	orr	fp, r6, r8, lsl #16
   17678:	str	r1, [sp, #200]	; 0xc8
   1767c:	eor	r5, r5, r3
   17680:	adc	r0, r0, fp
   17684:	eor	r9, r9, r0
   17688:	lsl	r1, r9, #1
   1768c:	orr	ip, r1, r5, lsr #31
   17690:	ldr	r1, [sp, #116]	; 0x74
   17694:	lsl	r5, r5, #1
   17698:	orr	r6, r5, r9, lsr #31
   1769c:	ldrd	r4, [sp, #152]	; 0x98
   176a0:	adds	r1, r1, r4
   176a4:	ldr	r4, [sp, #120]	; 0x78
   176a8:	adc	r9, r4, r5
   176ac:	ldr	r4, [sp, #228]	; 0xe4
   176b0:	adds	r1, r1, r6
   176b4:	adc	r9, r9, ip
   176b8:	eor	r7, r9, sl
   176bc:	adds	r2, r2, r7
   176c0:	eor	r5, r2, r6
   176c4:	eor	r4, r1, r4
   176c8:	lsr	sl, r5, #24
   176cc:	adc	lr, lr, r4
   176d0:	eor	r6, lr, ip
   176d4:	orr	ip, sl, r6, lsl #8
   176d8:	lsr	r6, r6, #24
   176dc:	orr	r8, r6, r5, lsl #8
   176e0:	ldr	r5, [sp, #84]	; 0x54
   176e4:	adds	r1, r5, r1
   176e8:	ldr	r5, [sp, #88]	; 0x58
   176ec:	adc	r9, r5, r9
   176f0:	adds	r1, r1, ip
   176f4:	str	r1, [sp, #84]	; 0x54
   176f8:	adc	r1, r9, r8
   176fc:	str	r1, [sp, #88]	; 0x58
   17700:	ldr	r1, [sp, #84]	; 0x54
   17704:	eor	r7, r7, r1
   17708:	ldr	r1, [sp, #88]	; 0x58
   1770c:	eor	r4, r4, r1
   17710:	lsr	r1, r7, #16
   17714:	orr	r1, r1, r4, lsl #16
   17718:	lsr	r4, r4, #16
   1771c:	str	r1, [sp, #152]	; 0x98
   17720:	orr	r1, r4, r7, lsl #16
   17724:	str	r1, [sp, #156]	; 0x9c
   17728:	ldr	r1, [sp, #152]	; 0x98
   1772c:	adds	r2, r2, r1
   17730:	ldr	r1, [sp, #168]	; 0xa8
   17734:	str	r2, [sp, #116]	; 0x74
   17738:	ldr	r2, [sp, #156]	; 0x9c
   1773c:	adc	r2, lr, r2
   17740:	ldr	lr, [sp, #252]	; 0xfc
   17744:	str	r2, [sp, #120]	; 0x78
   17748:	ldr	r2, [sp, #116]	; 0x74
   1774c:	eor	ip, ip, r2
   17750:	ldr	r2, [sp, #120]	; 0x78
   17754:	eor	r8, r8, r2
   17758:	lsl	r2, r8, #1
   1775c:	orr	r2, r2, ip, lsr #31
   17760:	lsl	ip, ip, #1
   17764:	str	r2, [sp, #216]	; 0xd8
   17768:	orr	r2, ip, r8, lsr #31
   1776c:	ldr	ip, [sp, #172]	; 0xac
   17770:	str	r2, [sp, #204]	; 0xcc
   17774:	ldr	r2, [sp, #36]	; 0x24
   17778:	adds	r2, r2, r1
   1777c:	ldr	r1, [sp, #40]	; 0x28
   17780:	adc	r5, r1, ip
   17784:	ldr	r1, [sp, #244]	; 0xf4
   17788:	ldr	ip, [sp, #244]	; 0xf4
   1778c:	adds	r2, r2, r1
   17790:	ldr	r1, [sp, #252]	; 0xfc
   17794:	adc	r5, r5, r1
   17798:	ldr	r1, [sp, #196]	; 0xc4
   1779c:	eor	r4, r5, r1
   177a0:	ldr	r1, [sp, #192]	; 0xc0
   177a4:	adds	r3, r3, r4
   177a8:	eor	ip, r3, ip
   177ac:	lsr	r8, ip, #24
   177b0:	eor	r1, r2, r1
   177b4:	adc	r0, r0, r1
   177b8:	eor	lr, r0, lr
   177bc:	orr	r7, r8, lr, lsl #8
   177c0:	lsr	lr, lr, #24
   177c4:	orr	r6, lr, ip, lsl #8
   177c8:	ldr	ip, [sp, #68]	; 0x44
   177cc:	adds	r2, ip, r2
   177d0:	ldr	ip, [sp, #72]	; 0x48
   177d4:	adc	r5, ip, r5
   177d8:	adds	r2, r2, r7
   177dc:	str	r2, [sp, #36]	; 0x24
   177e0:	adc	r2, r5, r6
   177e4:	str	r2, [sp, #40]	; 0x28
   177e8:	ldr	r2, [sp, #36]	; 0x24
   177ec:	eor	r4, r4, r2
   177f0:	ldr	r2, [sp, #40]	; 0x28
   177f4:	eor	r1, r1, r2
   177f8:	lsr	r2, r4, #16
   177fc:	orr	r2, r2, r1, lsl #16
   17800:	lsr	r1, r1, #16
   17804:	str	r2, [sp, #168]	; 0xa8
   17808:	orr	r2, r1, r4, lsl #16
   1780c:	ldr	r1, [sp, #164]	; 0xa4
   17810:	str	r2, [sp, #172]	; 0xac
   17814:	ldr	r2, [sp, #168]	; 0xa8
   17818:	adds	r3, r3, r2
   1781c:	str	r3, [sp, #68]	; 0x44
   17820:	ldr	r3, [sp, #172]	; 0xac
   17824:	adc	r3, r0, r3
   17828:	str	r3, [sp, #72]	; 0x48
   1782c:	ldr	r3, [sp, #68]	; 0x44
   17830:	ldr	r2, [sp, #72]	; 0x48
   17834:	eor	r3, r3, r7
   17838:	lsl	r7, r3, #1
   1783c:	eor	r6, r6, r2
   17840:	lsl	r2, r6, #1
   17844:	orr	r7, r7, r6, lsr #31
   17848:	orr	r2, r2, r3, lsr #31
   1784c:	ldr	r3, [sp, #76]	; 0x4c
   17850:	str	r2, [sp, #192]	; 0xc0
   17854:	ldr	r2, [sp, #160]	; 0xa0
   17858:	adds	r3, r3, r2
   1785c:	ldr	r2, [sp, #80]	; 0x50
   17860:	adc	r6, r2, r1
   17864:	ldr	r1, [sp, #180]	; 0xb4
   17868:	ldr	r2, [sp, #240]	; 0xf0
   1786c:	adds	r3, r3, r2
   17870:	ldr	r2, [sp, #248]	; 0xf8
   17874:	adc	r6, r6, r2
   17878:	ldr	r2, [sp, #200]	; 0xc8
   1787c:	eor	r4, r6, fp
   17880:	eor	r0, r3, r2
   17884:	ldr	r2, [sp, #176]	; 0xb0
   17888:	adds	r2, r2, r4
   1788c:	adc	lr, r1, r0
   17890:	ldr	r1, [sp, #240]	; 0xf0
   17894:	eor	r8, r2, r1
   17898:	ldr	r1, [sp, #248]	; 0xf8
   1789c:	lsr	r9, r8, #24
   178a0:	eor	ip, lr, r1
   178a4:	orr	r1, r9, ip, lsl #8
   178a8:	lsr	ip, ip, #24
   178ac:	orr	r5, ip, r8, lsl #8
   178b0:	ldr	ip, [sp, #124]	; 0x7c
   178b4:	adds	r3, ip, r3
   178b8:	ldr	ip, [sp, #128]	; 0x80
   178bc:	adc	r6, ip, r6
   178c0:	adds	r3, r3, r1
   178c4:	str	r3, [sp, #76]	; 0x4c
   178c8:	adc	r3, r6, r5
   178cc:	str	r3, [sp, #80]	; 0x50
   178d0:	ldr	r3, [sp, #76]	; 0x4c
   178d4:	eor	r4, r4, r3
   178d8:	ldr	r3, [sp, #80]	; 0x50
   178dc:	eor	r0, r0, r3
   178e0:	lsr	r3, r4, #16
   178e4:	orr	r3, r3, r0, lsl #16
   178e8:	lsr	r0, r0, #16
   178ec:	str	r3, [sp, #124]	; 0x7c
   178f0:	orr	r3, r0, r4, lsl #16
   178f4:	str	r3, [sp, #128]	; 0x80
   178f8:	ldr	r3, [sp, #124]	; 0x7c
   178fc:	adds	r2, r2, r3
   17900:	ldr	r3, [sp, #128]	; 0x80
   17904:	eor	r1, r1, r2
   17908:	ldr	r0, [sp, #148]	; 0x94
   1790c:	ldr	r4, [sp, #208]	; 0xd0
   17910:	adc	lr, lr, r3
   17914:	eor	r5, r5, lr
   17918:	lsl	r3, r5, #1
   1791c:	orr	r3, r3, r1, lsr #31
   17920:	lsl	r1, r1, #1
   17924:	str	r3, [sp, #164]	; 0xa4
   17928:	orr	r3, r1, r5, lsr #31
   1792c:	ldr	r1, [sp, #144]	; 0x90
   17930:	str	r3, [sp, #160]	; 0xa0
   17934:	ldr	r3, [sp, #108]	; 0x6c
   17938:	adds	r1, r3, r1
   1793c:	ldr	r3, [sp, #112]	; 0x70
   17940:	adc	ip, r3, r0
   17944:	ldr	r0, [sp, #188]	; 0xbc
   17948:	ldr	r3, [sp, #208]	; 0xd0
   1794c:	adds	r1, r1, r3
   17950:	ldr	r3, [sp, #212]	; 0xd4
   17954:	adc	ip, ip, r3
   17958:	ldr	r3, [sp, #224]	; 0xe0
   1795c:	eor	r8, ip, r3
   17960:	ldr	r3, [sp, #220]	; 0xdc
   17964:	eor	r5, r1, r3
   17968:	ldr	r3, [sp, #184]	; 0xb8
   1796c:	adds	r3, r3, r8
   17970:	eor	r9, r3, r4
   17974:	ldr	r4, [sp, #212]	; 0xd4
   17978:	adc	r0, r0, r5
   1797c:	lsr	fp, r9, #24
   17980:	eor	r6, r0, r4
   17984:	orr	r4, fp, r6, lsl #8
   17988:	lsr	r6, r6, #24
   1798c:	orr	sl, r6, r9, lsl #8
   17990:	ldr	r6, [sp, #52]	; 0x34
   17994:	adds	r1, r6, r1
   17998:	ldr	r6, [sp, #56]	; 0x38
   1799c:	adc	ip, r6, ip
   179a0:	adds	r1, r1, r4
   179a4:	str	r1, [sp, #52]	; 0x34
   179a8:	adc	r1, ip, sl
   179ac:	str	r1, [sp, #56]	; 0x38
   179b0:	ldr	r1, [sp, #52]	; 0x34
   179b4:	eor	r8, r8, r1
   179b8:	ldr	r1, [sp, #56]	; 0x38
   179bc:	eor	r5, r5, r1
   179c0:	lsr	r1, r8, #16
   179c4:	orr	ip, r1, r5, lsl #16
   179c8:	lsr	r5, r5, #16
   179cc:	adds	r3, r3, ip
   179d0:	orr	fp, r5, r8, lsl #16
   179d4:	eor	r4, r4, r3
   179d8:	ldr	r5, [sp, #88]	; 0x58
   179dc:	adc	r0, r0, fp
   179e0:	eor	sl, sl, r0
   179e4:	lsl	r1, sl, #1
   179e8:	orr	r1, r1, r4, lsr #31
   179ec:	lsl	r4, r4, #1
   179f0:	str	r1, [sp, #112]	; 0x70
   179f4:	orr	r1, r4, sl, lsr #31
   179f8:	ldr	r4, [sp, #84]	; 0x54
   179fc:	str	r1, [sp, #108]	; 0x6c
   17a00:	ldr	r1, [sp, #12]
   17a04:	adds	r1, r1, r4
   17a08:	ldr	r4, [sp, #16]
   17a0c:	adc	r9, r4, r5
   17a10:	ldr	r4, [sp, #192]	; 0xc0
   17a14:	adds	r1, r1, r7
   17a18:	eor	r5, r1, ip
   17a1c:	ldr	ip, [sp, #192]	; 0xc0
   17a20:	adc	r9, r9, r4
   17a24:	eor	r4, r9, fp
   17a28:	adds	r2, r2, r4
   17a2c:	eor	r7, r7, r2
   17a30:	adc	lr, lr, r5
   17a34:	lsr	sl, r7, #24
   17a38:	eor	ip, lr, ip
   17a3c:	orr	r6, sl, ip, lsl #8
   17a40:	lsr	ip, ip, #24
   17a44:	orr	r8, ip, r7, lsl #8
   17a48:	ldr	ip, [sp, #100]	; 0x64
   17a4c:	adds	r1, ip, r1
   17a50:	ldr	ip, [sp, #104]	; 0x68
   17a54:	adc	r9, ip, r9
   17a58:	adds	r1, r1, r6
   17a5c:	eor	r4, r4, r1
   17a60:	adc	r9, r9, r8
   17a64:	lsr	r7, r4, #16
   17a68:	eor	r5, r5, r9
   17a6c:	str	r1, [sp, #400]	; 0x190
   17a70:	str	r9, [sp, #404]	; 0x194
   17a74:	orr	r1, r7, r5, lsl #16
   17a78:	lsr	r5, r5, #16
   17a7c:	adds	r2, r2, r1
   17a80:	orr	ip, r5, r4, lsl #16
   17a84:	str	r2, [sp, #480]	; 0x1e0
   17a88:	eor	r2, r2, r6
   17a8c:	adc	lr, lr, ip
   17a90:	str	lr, [sp, #484]	; 0x1e4
   17a94:	eor	lr, lr, r8
   17a98:	lsl	r4, lr, #1
   17a9c:	str	r1, [sp, #520]	; 0x208
   17aa0:	ldr	r1, [sp, #36]	; 0x24
   17aa4:	orr	r4, r4, r2, lsr #31
   17aa8:	str	ip, [sp, #524]	; 0x20c
   17aac:	lsl	r2, r2, #1
   17ab0:	ldr	ip, [sp, #40]	; 0x28
   17ab4:	orr	lr, r2, lr, lsr #31
   17ab8:	ldr	r2, [sp, #4]
   17abc:	str	lr, [sp, #440]	; 0x1b8
   17ac0:	ldr	lr, [sp, #160]	; 0xa0
   17ac4:	adds	r2, r2, r1
   17ac8:	str	r4, [sp, #444]	; 0x1bc
   17acc:	ldr	r1, [sp, #8]
   17ad0:	adc	r5, r1, ip
   17ad4:	ldr	ip, [sp, #152]	; 0x98
   17ad8:	ldr	r1, [sp, #160]	; 0xa0
   17adc:	adds	r2, r2, r1
   17ae0:	ldr	r1, [sp, #164]	; 0xa4
   17ae4:	eor	ip, r2, ip
   17ae8:	adc	r5, r5, r1
   17aec:	ldr	r1, [sp, #156]	; 0x9c
   17af0:	eor	r1, r5, r1
   17af4:	adds	r3, r3, r1
   17af8:	eor	r7, r3, lr
   17afc:	ldr	lr, [sp, #164]	; 0xa4
   17b00:	adc	r0, r0, ip
   17b04:	lsr	r8, r7, #24
   17b08:	eor	lr, r0, lr
   17b0c:	orr	r4, r8, lr, lsl #8
   17b10:	lsr	lr, lr, #24
   17b14:	orr	r6, lr, r7, lsl #8
   17b18:	ldr	lr, [sp, #20]
   17b1c:	adds	r2, lr, r2
   17b20:	ldr	lr, [sp, #24]
   17b24:	adc	r5, lr, r5
   17b28:	adds	r2, r2, r4
   17b2c:	adc	r5, r5, r6
   17b30:	eor	r1, r1, r2
   17b34:	eor	ip, ip, r5
   17b38:	str	r2, [sp, #408]	; 0x198
   17b3c:	str	r5, [sp, #412]	; 0x19c
   17b40:	lsr	r5, r1, #16
   17b44:	orr	r2, r5, ip, lsl #16
   17b48:	lsr	ip, ip, #16
   17b4c:	adds	r3, r3, r2
   17b50:	orr	lr, ip, r1, lsl #16
   17b54:	str	r3, [sp, #488]	; 0x1e8
   17b58:	eor	r3, r3, r4
   17b5c:	adc	r0, r0, lr
   17b60:	str	r0, [sp, #492]	; 0x1ec
   17b64:	eor	r0, r0, r6
   17b68:	lsl	r1, r0, #1
   17b6c:	str	r2, [sp, #496]	; 0x1f0
   17b70:	ldr	r2, [sp, #76]	; 0x4c
   17b74:	orr	r1, r1, r3, lsr #31
   17b78:	str	lr, [sp, #500]	; 0x1f4
   17b7c:	lsl	r3, r3, #1
   17b80:	orr	r0, r3, r0, lsr #31
   17b84:	ldr	r3, [sp, #92]	; 0x5c
   17b88:	str	r0, [sp, #448]	; 0x1c0
   17b8c:	str	r1, [sp, #452]	; 0x1c4
   17b90:	adds	r3, r3, r2
   17b94:	ldr	r1, [sp, #80]	; 0x50
   17b98:	ldr	r2, [sp, #96]	; 0x60
   17b9c:	adc	r6, r2, r1
   17ba0:	ldr	r2, [sp, #108]	; 0x6c
   17ba4:	adds	r3, r3, r2
   17ba8:	ldr	r2, [sp, #112]	; 0x70
   17bac:	adc	r6, r6, r2
   17bb0:	ldr	r2, [sp, #172]	; 0xac
   17bb4:	ldr	r1, [sp, #120]	; 0x78
   17bb8:	eor	r0, r6, r2
   17bbc:	ldr	r2, [sp, #168]	; 0xa8
   17bc0:	eor	ip, r3, r2
   17bc4:	ldr	r2, [sp, #116]	; 0x74
   17bc8:	adds	r2, r2, r0
   17bcc:	adc	lr, r1, ip
   17bd0:	ldr	r1, [sp, #108]	; 0x6c
   17bd4:	eor	r4, r2, r1
   17bd8:	ldr	r1, [sp, #112]	; 0x70
   17bdc:	lsr	r8, r4, #24
   17be0:	eor	r1, lr, r1
   17be4:	orr	r5, r8, r1, lsl #8
   17be8:	lsr	r1, r1, #24
   17bec:	orr	r7, r1, r4, lsl #8
   17bf0:	ldr	r1, [sp, #60]	; 0x3c
   17bf4:	adds	r3, r1, r3
   17bf8:	ldr	r1, [sp, #64]	; 0x40
   17bfc:	adc	r6, r1, r6
   17c00:	adds	r3, r3, r5
   17c04:	eor	r0, r0, r3
   17c08:	adc	r6, r6, r7
   17c0c:	lsr	r4, r0, #16
   17c10:	eor	ip, ip, r6
   17c14:	str	r3, [sp, #416]	; 0x1a0
   17c18:	str	r6, [sp, #420]	; 0x1a4
   17c1c:	orr	r3, r4, ip, lsl #16
   17c20:	lsr	ip, ip, #16
   17c24:	adds	r2, r2, r3
   17c28:	orr	r1, ip, r0, lsl #16
   17c2c:	str	r2, [sp, #464]	; 0x1d0
   17c30:	eor	r2, r2, r5
   17c34:	adc	lr, lr, r1
   17c38:	ldr	r5, [sp, #216]	; 0xd8
   17c3c:	str	lr, [sp, #468]	; 0x1d4
   17c40:	eor	lr, lr, r7
   17c44:	lsl	r0, lr, #1
   17c48:	str	r3, [sp, #504]	; 0x1f8
   17c4c:	ldr	r3, [sp, #44]	; 0x2c
   17c50:	orr	r0, r0, r2, lsr #31
   17c54:	str	r1, [sp, #508]	; 0x1fc
   17c58:	lsl	r2, r2, #1
   17c5c:	orr	lr, r2, lr, lsr #31
   17c60:	ldr	r2, [sp, #52]	; 0x34
   17c64:	str	lr, [sp, #456]	; 0x1c8
   17c68:	str	r0, [sp, #460]	; 0x1cc
   17c6c:	adds	r1, r3, r2
   17c70:	ldr	r3, [sp, #48]	; 0x30
   17c74:	ldr	r2, [sp, #56]	; 0x38
   17c78:	ldr	r0, [sp, #72]	; 0x48
   17c7c:	adc	ip, r3, r2
   17c80:	ldr	r3, [sp, #204]	; 0xcc
   17c84:	adds	r1, r1, r3
   17c88:	ldr	r3, [sp, #216]	; 0xd8
   17c8c:	adc	r2, ip, r3
   17c90:	ldr	r3, [sp, #128]	; 0x80
   17c94:	ldr	ip, [sp, #204]	; 0xcc
   17c98:	eor	lr, r2, r3
   17c9c:	ldr	r3, [sp, #124]	; 0x7c
   17ca0:	eor	r4, r1, r3
   17ca4:	ldr	r3, [sp, #68]	; 0x44
   17ca8:	adds	r3, r3, lr
   17cac:	eor	ip, r3, ip
   17cb0:	adc	r0, r0, r4
   17cb4:	lsr	r8, ip, #24
   17cb8:	eor	r5, r0, r5
   17cbc:	orr	r6, r8, r5, lsl #8
   17cc0:	lsr	r5, r5, #24
   17cc4:	orr	r7, r5, ip, lsl #8
   17cc8:	ldr	ip, [sp, #28]
   17ccc:	adds	r1, ip, r1
   17cd0:	ldr	ip, [sp, #32]
   17cd4:	adc	r2, ip, r2
   17cd8:	adds	r1, r1, r6
   17cdc:	eor	lr, lr, r1
   17ce0:	adc	r2, r2, r7
   17ce4:	str	r1, [sp, #424]	; 0x1a8
   17ce8:	lsr	r1, lr, #16
   17cec:	eor	r4, r4, r2
   17cf0:	str	r2, [sp, #428]	; 0x1ac
   17cf4:	orr	r2, r1, r4, lsl #16
   17cf8:	lsr	r4, r4, #16
   17cfc:	adds	r3, r3, r2
   17d00:	orr	r5, r4, lr, lsl #16
   17d04:	eor	r6, r6, r3
   17d08:	str	r2, [sp, #512]	; 0x200
   17d0c:	adc	r0, r0, r5
   17d10:	eor	r7, r7, r0
   17d14:	str	r5, [sp, #516]	; 0x204
   17d18:	str	r3, [sp, #472]	; 0x1d8
   17d1c:	lsl	r3, r7, #1
   17d20:	str	r0, [sp, #476]	; 0x1dc
   17d24:	orr	r3, r3, r6, lsr #31
   17d28:	lsl	r6, r6, #1
   17d2c:	orr	r6, r6, r7, lsr #31
   17d30:	str	r6, [sp, #432]	; 0x1b0
   17d34:	str	r3, [sp, #436]	; 0x1b4
   17d38:	ldr	r1, [sp, #132]	; 0x84
   17d3c:	ldr	r3, [sp, #132]	; 0x84
   17d40:	add	r1, r1, #8
   17d44:	str	r1, [sp, #132]	; 0x84
   17d48:	ldr	r1, [sp, #136]	; 0x88
   17d4c:	ldrd	r2, [r3]
   17d50:	ldr	r0, [r1, #8]!
   17d54:	str	r1, [sp, #136]	; 0x88
   17d58:	eor	r2, r2, r0
   17d5c:	ldr	r1, [r1, #4]
   17d60:	eor	r3, r3, r1
   17d64:	ldr	r1, [sp, #132]	; 0x84
   17d68:	ldrd	r0, [r1, #56]	; 0x38
   17d6c:	eor	r3, r3, r1
   17d70:	ldr	r1, [sp, #136]	; 0x88
   17d74:	eor	r2, r2, r0
   17d78:	str	r2, [r1]
   17d7c:	ldr	r2, [sp, #140]	; 0x8c
   17d80:	str	r3, [r1, #4]
   17d84:	cmp	r1, r2
   17d88:	bne	17d38 <__assert_fail@plt+0x6b7c>
   17d8c:	add	sp, sp, #532	; 0x214
   17d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d94:	mov	r3, #0
   17d98:	str	r3, [r0]
   17d9c:	bx	lr
   17da0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17da4:	mov	r4, r0
   17da8:	mov	r7, r1
   17dac:	mov	r5, r2
   17db0:	add	sl, r0, #96	; 0x60
   17db4:	ldr	fp, [r0, #224]	; 0xe0
   17db8:	rsb	r6, fp, #128	; 0x80
   17dbc:	cmp	r6, r2
   17dc0:	bcs	17e34 <__assert_fail@plt+0x6c78>
   17dc4:	mov	r3, #0
   17dc8:	mov	r2, r6
   17dcc:	add	r0, sl, fp
   17dd0:	add	r6, r1, r6
   17dd4:	str	r3, [r4, #224]	; 0xe0
   17dd8:	sub	r5, r5, #128	; 0x80
   17ddc:	bl	10f4c <memcpy@plt>
   17de0:	ldr	r3, [r4, #64]	; 0x40
   17de4:	add	r5, fp, r5
   17de8:	mov	r0, r4
   17dec:	add	r6, r6, r5
   17df0:	ldr	r2, [r4, #68]	; 0x44
   17df4:	adds	r8, r3, #128	; 0x80
   17df8:	adc	r9, r2, #0
   17dfc:	ldrd	r2, [r4, #72]	; 0x48
   17e00:	cmp	r9, #0
   17e04:	cmpeq	r8, #127	; 0x7f
   17e08:	strd	r8, [r4, #64]	; 0x40
   17e0c:	movls	r1, #1
   17e10:	movhi	r1, #0
   17e14:	adds	r8, r2, r1
   17e18:	mov	r1, sl
   17e1c:	adc	r9, r3, #0
   17e20:	strd	r8, [r4, #72]	; 0x48
   17e24:	bl	12a24 <__assert_fail@plt+0x1868>
   17e28:	cmp	r5, #128	; 0x80
   17e2c:	sub	r7, r6, r5
   17e30:	bhi	17e5c <__assert_fail@plt+0x6ca0>
   17e34:	ldr	r0, [r4, #224]	; 0xe0
   17e38:	mov	r2, r5
   17e3c:	mov	r1, r7
   17e40:	add	r0, sl, r0
   17e44:	bl	10f4c <memcpy@plt>
   17e48:	ldr	r3, [r4, #224]	; 0xe0
   17e4c:	add	r5, r3, r5
   17e50:	str	r5, [r4, #224]	; 0xe0
   17e54:	add	sp, sp, #12
   17e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e5c:	ldr	r3, [r4, #64]	; 0x40
   17e60:	mov	r0, r4
   17e64:	sub	r5, r5, #128	; 0x80
   17e68:	ldr	r2, [r4, #68]	; 0x44
   17e6c:	adds	r3, r3, #128	; 0x80
   17e70:	str	r3, [sp]
   17e74:	adc	r3, r2, #0
   17e78:	str	r3, [sp, #4]
   17e7c:	ldrd	r2, [sp]
   17e80:	cmp	r3, #0
   17e84:	strd	r2, [r4, #64]	; 0x40
   17e88:	cmpeq	r2, #127	; 0x7f
   17e8c:	ldrd	r2, [r4, #72]	; 0x48
   17e90:	movls	r1, #1
   17e94:	movhi	r1, #0
   17e98:	adds	r8, r2, r1
   17e9c:	mov	r1, r7
   17ea0:	adc	r9, r3, #0
   17ea4:	strd	r8, [r4, #72]	; 0x48
   17ea8:	bl	12a24 <__assert_fail@plt+0x1868>
   17eac:	b	17e28 <__assert_fail@plt+0x6c6c>
   17eb0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   17eb4:	mov	r2, #240	; 0xf0
   17eb8:	mov	r5, r1
   17ebc:	mov	r1, #0
   17ec0:	mov	r4, r0
   17ec4:	bl	110b4 <memset@plt>
   17ec8:	ldr	r1, [pc, #108]	; 17f3c <__assert_fail@plt+0x6d80>
   17ecc:	sub	r3, r4, #8
   17ed0:	add	r0, r4, #56	; 0x38
   17ed4:	mov	r2, r3
   17ed8:	ldrd	r6, [r1], #8
   17edc:	strd	r6, [r2, #8]!
   17ee0:	cmp	r2, r0
   17ee4:	bne	17ed8 <__assert_fail@plt+0x6d1c>
   17ee8:	mov	r2, #0
   17eec:	add	r1, r5, r2
   17ef0:	mov	ip, sp
   17ef4:	ldr	r0, [r1]
   17ef8:	add	r2, r2, #8
   17efc:	cmp	r2, #64	; 0x40
   17f00:	ldr	r1, [r1, #4]
   17f04:	stmia	ip!, {r0, r1}
   17f08:	ldr	ip, [sp]
   17f0c:	ldr	r0, [r3, #8]!
   17f10:	eor	r0, r0, ip
   17f14:	ldr	r1, [r3, #4]
   17f18:	ldr	ip, [sp, #4]
   17f1c:	eor	r1, r1, ip
   17f20:	strd	r0, [r3]
   17f24:	bne	17eec <__assert_fail@plt+0x6d30>
   17f28:	ldrb	r3, [r5]
   17f2c:	mov	r0, #0
   17f30:	str	r3, [r4, #228]	; 0xe4
   17f34:	add	sp, sp, #12
   17f38:	pop	{r4, r5, r6, r7, pc}
   17f3c:	andeq	fp, r1, r0, asr #30
   17f40:	sub	r3, r1, #1
   17f44:	cmp	r3, #63	; 0x3f
   17f48:	bhi	17fc0 <__assert_fail@plt+0x6e04>
   17f4c:	push	{r4, lr}
   17f50:	sub	sp, sp, #64	; 0x40
   17f54:	movw	r3, #257	; 0x101
   17f58:	mov	r4, r0
   17f5c:	add	r0, sp, #4
   17f60:	strb	r1, [sp]
   17f64:	mov	r1, #0
   17f68:	strb	r1, [sp, #1]
   17f6c:	strh	r3, [sp, #2]
   17f70:	bl	17d94 <__assert_fail@plt+0x6bd8>
   17f74:	add	r0, sp, #8
   17f78:	bl	17d94 <__assert_fail@plt+0x6bd8>
   17f7c:	add	r0, sp, #12
   17f80:	bl	17d94 <__assert_fail@plt+0x6bd8>
   17f84:	mov	r2, #14
   17f88:	add	r0, sp, #18
   17f8c:	strh	r1, [sp, #16]
   17f90:	bl	110b4 <memset@plt>
   17f94:	mov	r2, #0
   17f98:	mov	r3, #0
   17f9c:	mov	r1, sp
   17fa0:	mov	r0, r4
   17fa4:	strd	r2, [sp, #32]
   17fa8:	strd	r2, [sp, #40]	; 0x28
   17fac:	strd	r2, [sp, #48]	; 0x30
   17fb0:	strd	r2, [sp, #56]	; 0x38
   17fb4:	bl	17eb0 <__assert_fail@plt+0x6cf4>
   17fb8:	add	sp, sp, #64	; 0x40
   17fbc:	pop	{r4, pc}
   17fc0:	mvn	r0, #0
   17fc4:	bx	lr
   17fc8:	sub	ip, r1, #1
   17fcc:	cmp	ip, #63	; 0x3f
   17fd0:	bls	17fe8 <__assert_fail@plt+0x6e2c>
   17fd4:	mvn	r0, #0
   17fd8:	bx	lr
   17fdc:	mvn	r0, #0
   17fe0:	add	sp, sp, #196	; 0xc4
   17fe4:	pop	{r4, r5, r6, r7, pc}
   17fe8:	clz	ip, r2
   17fec:	push	{r4, r5, r6, r7, lr}
   17ff0:	sub	r4, r3, #1
   17ff4:	lsr	ip, ip, #5
   17ff8:	sub	sp, sp, #196	; 0xc4
   17ffc:	cmp	r4, #63	; 0x3f
   18000:	movls	r4, ip
   18004:	orrhi	r4, ip, #1
   18008:	cmp	r4, #0
   1800c:	bne	17fdc <__assert_fail@plt+0x6e20>
   18010:	mov	r5, r3
   18014:	movw	r3, #257	; 0x101
   18018:	strb	r1, [sp]
   1801c:	mov	r6, r0
   18020:	add	r0, sp, #4
   18024:	mov	r7, r2
   18028:	strb	r5, [sp, #1]
   1802c:	strh	r3, [sp, #2]
   18030:	bl	17d94 <__assert_fail@plt+0x6bd8>
   18034:	add	r0, sp, #8
   18038:	bl	17d94 <__assert_fail@plt+0x6bd8>
   1803c:	add	r0, sp, #12
   18040:	bl	17d94 <__assert_fail@plt+0x6bd8>
   18044:	mov	r2, #14
   18048:	mov	r1, r4
   1804c:	strh	r4, [sp, #16]
   18050:	add	r0, sp, #18
   18054:	bl	110b4 <memset@plt>
   18058:	mov	r2, #0
   1805c:	mov	r3, #0
   18060:	mov	r1, sp
   18064:	mov	r0, r6
   18068:	strd	r2, [sp, #32]
   1806c:	strd	r2, [sp, #40]	; 0x28
   18070:	strd	r2, [sp, #48]	; 0x30
   18074:	strd	r2, [sp, #56]	; 0x38
   18078:	bl	17eb0 <__assert_fail@plt+0x6cf4>
   1807c:	cmp	r0, #0
   18080:	blt	17fdc <__assert_fail@plt+0x6e20>
   18084:	mov	r2, #128	; 0x80
   18088:	mov	r1, r4
   1808c:	add	r0, sp, #64	; 0x40
   18090:	bl	110b4 <memset@plt>
   18094:	mov	r3, #128	; 0x80
   18098:	mov	r2, r5
   1809c:	mov	r1, r7
   180a0:	add	r0, sp, #64	; 0x40
   180a4:	bl	10fac <__memcpy_chk@plt>
   180a8:	mov	r2, #128	; 0x80
   180ac:	add	r1, sp, #64	; 0x40
   180b0:	mov	r0, r6
   180b4:	bl	17da0 <__assert_fail@plt+0x6be4>
   180b8:	ldr	r3, [pc, #24]	; 180d8 <__assert_fail@plt+0x6f1c>
   180bc:	mov	r2, #128	; 0x80
   180c0:	mov	r1, r4
   180c4:	add	r0, sp, #64	; 0x40
   180c8:	ldr	r3, [r3]
   180cc:	blx	r3
   180d0:	mov	r0, r4
   180d4:	b	17fe0 <__assert_fail@plt+0x6e24>
   180d8:	andeq	sp, r2, ip, lsl r1
   180dc:	cmp	r2, #0
   180e0:	beq	180f4 <__assert_fail@plt+0x6f38>
   180e4:	push	{r4, lr}
   180e8:	bl	17da0 <__assert_fail@plt+0x6be4>
   180ec:	mov	r0, #0
   180f0:	pop	{r4, pc}
   180f4:	mov	r0, #0
   180f8:	bx	lr
   180fc:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   18100:	sub	sp, sp, #72	; 0x48
   18104:	mov	r6, r1
   18108:	mov	r4, r0
   1810c:	mov	r5, r2
   18110:	mov	r1, #0
   18114:	mov	r2, #64	; 0x40
   18118:	add	r0, sp, #8
   1811c:	bl	110b4 <memset@plt>
   18120:	cmp	r6, #0
   18124:	beq	18208 <__assert_fail@plt+0x704c>
   18128:	ldr	r3, [r4, #228]	; 0xe4
   1812c:	cmp	r3, r5
   18130:	bhi	18208 <__assert_fail@plt+0x704c>
   18134:	ldrd	r2, [r4, #80]	; 0x50
   18138:	orrs	r3, r2, r3
   1813c:	bne	18208 <__assert_fail@plt+0x704c>
   18140:	ldrd	r2, [r4, #64]	; 0x40
   18144:	mov	r9, #0
   18148:	add	r5, r4, #96	; 0x60
   1814c:	ldr	r0, [r4, #224]	; 0xe0
   18150:	adds	sl, r0, r2
   18154:	adcs	fp, r9, r3
   18158:	ldrd	r2, [r4, #72]	; 0x48
   1815c:	movcs	r1, #1
   18160:	movcc	r1, #0
   18164:	strd	sl, [r4, #64]	; 0x40
   18168:	adds	r8, r2, r1
   1816c:	mvn	r2, #0
   18170:	adc	r9, r3, #0
   18174:	ldrb	r3, [r4, #232]	; 0xe8
   18178:	mov	r1, #0
   1817c:	strd	r8, [r4, #72]	; 0x48
   18180:	cmp	r3, #0
   18184:	mvn	r3, #0
   18188:	strdne	r2, [r4, #88]	; 0x58
   1818c:	strd	r2, [r4, #80]	; 0x50
   18190:	rsb	r2, r0, #128	; 0x80
   18194:	add	r0, r5, r0
   18198:	bl	110b4 <memset@plt>
   1819c:	mov	r1, r5
   181a0:	mov	r0, r4
   181a4:	bl	12a24 <__assert_fail@plt+0x1868>
   181a8:	sub	r2, r4, #8
   181ac:	add	r3, sp, #8
   181b0:	add	lr, r4, #56	; 0x38
   181b4:	mov	ip, sp
   181b8:	ldrd	r0, [r2, #8]!
   181bc:	strd	r0, [sp]
   181c0:	cmp	r2, lr
   181c4:	ldm	ip, {r0, r1}
   181c8:	stm	r3, {r0, r1}
   181cc:	add	r3, r3, #8
   181d0:	bne	181b8 <__assert_fail@plt+0x6ffc>
   181d4:	add	r1, sp, #8
   181d8:	mov	r0, r6
   181dc:	ldr	r2, [r4, #228]	; 0xe4
   181e0:	bl	10f4c <memcpy@plt>
   181e4:	ldr	r3, [pc, #36]	; 18210 <__assert_fail@plt+0x7054>
   181e8:	mov	r2, #64	; 0x40
   181ec:	mov	r1, #0
   181f0:	add	r0, sp, #8
   181f4:	ldr	r3, [r3]
   181f8:	blx	r3
   181fc:	mov	r0, #0
   18200:	add	sp, sp, #72	; 0x48
   18204:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   18208:	mvn	r0, #0
   1820c:	b	18200 <__assert_fail@plt+0x7044>
   18210:	andeq	sp, r2, ip, lsl r1
   18214:	adds	ip, r3, #0
   18218:	push	{r4, r5, r6, r7, r8, r9, lr}
   1821c:	sub	sp, sp, #244	; 0xf4
   18220:	movne	ip, #1
   18224:	cmp	r2, #0
   18228:	movne	ip, #0
   1822c:	cmp	r0, #0
   18230:	moveq	ip, #1
   18234:	ldr	r7, [sp, #272]	; 0x110
   18238:	cmp	ip, #0
   1823c:	ldr	r6, [sp, #276]	; 0x114
   18240:	beq	18250 <__assert_fail@plt+0x7094>
   18244:	mvn	r0, #0
   18248:	add	sp, sp, #244	; 0xf4
   1824c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18250:	adds	ip, r6, #0
   18254:	movne	ip, #1
   18258:	cmp	r7, #0
   1825c:	movne	ip, #0
   18260:	cmp	ip, #0
   18264:	bne	18244 <__assert_fail@plt+0x7088>
   18268:	sub	ip, r1, #1
   1826c:	mov	r4, r1
   18270:	cmp	r6, #64	; 0x40
   18274:	cmpls	ip, #63	; 0x3f
   18278:	bhi	18244 <__assert_fail@plt+0x7088>
   1827c:	cmp	r6, #0
   18280:	mov	r8, r0
   18284:	mov	r9, r3
   18288:	mov	r5, r2
   1828c:	beq	182d0 <__assert_fail@plt+0x7114>
   18290:	mov	r3, r6
   18294:	mov	r2, r7
   18298:	mov	r0, sp
   1829c:	bl	17fc8 <__assert_fail@plt+0x6e0c>
   182a0:	cmp	r0, #0
   182a4:	blt	18244 <__assert_fail@plt+0x7088>
   182a8:	mov	r2, r9
   182ac:	mov	r1, r5
   182b0:	mov	r0, sp
   182b4:	bl	180dc <__assert_fail@plt+0x6f20>
   182b8:	mov	r2, r4
   182bc:	mov	r1, r8
   182c0:	mov	r0, sp
   182c4:	bl	180fc <__assert_fail@plt+0x6f40>
   182c8:	mov	r0, #0
   182cc:	b	18248 <__assert_fail@plt+0x708c>
   182d0:	mov	r0, sp
   182d4:	bl	17f40 <__assert_fail@plt+0x6d84>
   182d8:	b	182a0 <__assert_fail@plt+0x70e4>
   182dc:	b	18214 <__assert_fail@plt+0x7058>
   182e0:	push	{r4, r5, r6, r7, r8, lr}
   182e4:	mov	r6, r0
   182e8:	sub	sp, sp, #240	; 0xf0
   182ec:	mov	r0, #32768	; 0x8000
   182f0:	mov	r8, r1
   182f4:	mov	r7, r2
   182f8:	bl	1aae4 <__assert_fail@plt+0x9928>
   182fc:	subs	r5, r0, #0
   18300:	mvneq	r4, #0
   18304:	beq	18388 <__assert_fail@plt+0x71cc>
   18308:	mov	r1, r7
   1830c:	mov	r0, sp
   18310:	bl	17f40 <__assert_fail@plt+0x6d84>
   18314:	mov	r4, #0
   18318:	rsb	r2, r4, #32768	; 0x8000
   1831c:	add	r0, r5, r4
   18320:	mov	r3, r6
   18324:	mov	r1, #1
   18328:	bl	10fd0 <fread@plt>
   1832c:	add	r4, r4, r0
   18330:	cmp	r4, #32768	; 0x8000
   18334:	beq	183a4 <__assert_fail@plt+0x71e8>
   18338:	cmp	r0, #0
   1833c:	mov	r0, r6
   18340:	bne	18394 <__assert_fail@plt+0x71d8>
   18344:	bl	10f34 <ferror@plt>
   18348:	cmp	r0, #0
   1834c:	mvnne	r4, #0
   18350:	bne	18380 <__assert_fail@plt+0x71c4>
   18354:	cmp	r4, #0
   18358:	beq	1836c <__assert_fail@plt+0x71b0>
   1835c:	mov	r2, r4
   18360:	mov	r1, r5
   18364:	mov	r0, sp
   18368:	bl	180dc <__assert_fail@plt+0x6f20>
   1836c:	mov	r2, r7
   18370:	mov	r1, r8
   18374:	mov	r0, sp
   18378:	mov	r4, #0
   1837c:	bl	180fc <__assert_fail@plt+0x6f40>
   18380:	mov	r0, r5
   18384:	bl	1866c <__assert_fail@plt+0x74b0>
   18388:	mov	r0, r4
   1838c:	add	sp, sp, #240	; 0xf0
   18390:	pop	{r4, r5, r6, r7, r8, pc}
   18394:	bl	1106c <feof@plt>
   18398:	cmp	r0, #0
   1839c:	beq	18318 <__assert_fail@plt+0x715c>
   183a0:	b	18354 <__assert_fail@plt+0x7198>
   183a4:	mov	r2, r4
   183a8:	mov	r1, r5
   183ac:	mov	r0, sp
   183b0:	bl	180dc <__assert_fail@plt+0x6f20>
   183b4:	b	18314 <__assert_fail@plt+0x7158>
   183b8:	ldr	r3, [pc, #4]	; 183c4 <__assert_fail@plt+0x7208>
   183bc:	str	r0, [r3]
   183c0:	bx	lr
   183c4:	andeq	sp, r2, r8, lsr #3
   183c8:	ldr	r3, [pc, #4]	; 183d4 <__assert_fail@plt+0x7218>
   183cc:	strb	r0, [r3, #4]
   183d0:	bx	lr
   183d4:	andeq	sp, r2, r8, lsr #3
   183d8:	ldr	r3, [pc, #176]	; 18490 <__assert_fail@plt+0x72d4>
   183dc:	push	{r0, r1, r4, r5, r6, lr}
   183e0:	ldr	r0, [r3]
   183e4:	bl	1ab54 <__assert_fail@plt+0x9998>
   183e8:	cmp	r0, #0
   183ec:	beq	18474 <__assert_fail@plt+0x72b8>
   183f0:	ldr	r4, [pc, #156]	; 18494 <__assert_fail@plt+0x72d8>
   183f4:	bl	11090 <__errno_location@plt>
   183f8:	mov	r5, r0
   183fc:	ldrb	r6, [r4, #4]
   18400:	cmp	r6, #0
   18404:	beq	18414 <__assert_fail@plt+0x7258>
   18408:	ldr	r3, [r0]
   1840c:	cmp	r3, #32
   18410:	beq	18474 <__assert_fail@plt+0x72b8>
   18414:	mov	r2, #5
   18418:	ldr	r1, [pc, #120]	; 18498 <__assert_fail@plt+0x72dc>
   1841c:	mov	r0, #0
   18420:	bl	10f7c <dcgettext@plt>
   18424:	mov	r6, r0
   18428:	ldr	r0, [r4]
   1842c:	cmp	r0, #0
   18430:	beq	18460 <__assert_fail@plt+0x72a4>
   18434:	ldr	r4, [r5]
   18438:	bl	19c04 <__assert_fail@plt+0x8a48>
   1843c:	mov	r3, r0
   18440:	ldr	r2, [pc, #84]	; 1849c <__assert_fail@plt+0x72e0>
   18444:	mov	r0, #0
   18448:	str	r6, [sp]
   1844c:	mov	r1, r4
   18450:	bl	11000 <error@plt>
   18454:	ldr	r3, [pc, #68]	; 184a0 <__assert_fail@plt+0x72e4>
   18458:	ldr	r0, [r3]
   1845c:	bl	10f40 <_exit@plt>
   18460:	mov	r3, r6
   18464:	ldr	r2, [pc, #56]	; 184a4 <__assert_fail@plt+0x72e8>
   18468:	ldr	r1, [r5]
   1846c:	bl	11000 <error@plt>
   18470:	b	18454 <__assert_fail@plt+0x7298>
   18474:	ldr	r3, [pc, #44]	; 184a8 <__assert_fail@plt+0x72ec>
   18478:	ldr	r0, [r3]
   1847c:	bl	1ab54 <__assert_fail@plt+0x9998>
   18480:	cmp	r0, #0
   18484:	bne	18454 <__assert_fail@plt+0x7298>
   18488:	add	sp, sp, #8
   1848c:	pop	{r4, r5, r6, pc}
   18490:	andeq	sp, r2, r4, lsl #3
   18494:	andeq	sp, r2, r8, lsr #3
   18498:	andeq	fp, r1, pc, lsl #31
   1849c:	muleq	r1, fp, pc	; <UNPREDICTABLE>
   184a0:	andeq	sp, r2, r4, lsr #2
   184a4:	andeq	fp, r1, r8, lsl #20
   184a8:	andeq	sp, r2, r8, ror r1
   184ac:	b	10f10 <posix_fadvise64@plt>
   184b0:	cmp	r0, #0
   184b4:	bxeq	lr
   184b8:	push	{r0, r1, r2, r3, r4, lr}
   184bc:	mov	r4, r1
   184c0:	bl	110cc <fileno@plt>
   184c4:	mov	r2, #0
   184c8:	mov	r3, #0
   184cc:	strd	r2, [sp]
   184d0:	str	r4, [sp, #8]
   184d4:	bl	10f10 <posix_fadvise64@plt>
   184d8:	add	sp, sp, #16
   184dc:	pop	{r4, pc}
   184e0:	push	{r0, r1, r2, r4, r5, lr}
   184e4:	mov	r4, r0
   184e8:	bl	110cc <fileno@plt>
   184ec:	cmp	r0, #0
   184f0:	mov	r0, r4
   184f4:	bge	18504 <__assert_fail@plt+0x7348>
   184f8:	add	sp, sp, #12
   184fc:	pop	{r4, r5, lr}
   18500:	b	110f0 <fclose@plt>
   18504:	bl	11024 <__freading@plt>
   18508:	cmp	r0, #0
   1850c:	bne	18548 <__assert_fail@plt+0x738c>
   18510:	mov	r0, r4
   18514:	bl	18588 <__assert_fail@plt+0x73cc>
   18518:	cmp	r0, #0
   1851c:	bne	1857c <__assert_fail@plt+0x73c0>
   18520:	mov	r5, #0
   18524:	mov	r0, r4
   18528:	bl	110f0 <fclose@plt>
   1852c:	cmp	r5, #0
   18530:	beq	18540 <__assert_fail@plt+0x7384>
   18534:	bl	11090 <__errno_location@plt>
   18538:	str	r5, [r0]
   1853c:	mvn	r0, #0
   18540:	add	sp, sp, #12
   18544:	pop	{r4, r5, pc}
   18548:	mov	r0, r4
   1854c:	bl	110cc <fileno@plt>
   18550:	mov	r3, #1
   18554:	mov	r2, #0
   18558:	str	r3, [sp]
   1855c:	mov	r3, #0
   18560:	bl	10fb8 <lseek64@plt>
   18564:	mvn	r3, #0
   18568:	mvn	r2, #0
   1856c:	cmp	r1, r3
   18570:	cmpeq	r0, r2
   18574:	bne	18510 <__assert_fail@plt+0x7354>
   18578:	b	18520 <__assert_fail@plt+0x7364>
   1857c:	bl	11090 <__errno_location@plt>
   18580:	ldr	r5, [r0]
   18584:	b	18524 <__assert_fail@plt+0x7368>
   18588:	push	{r0, r1, r4, lr}
   1858c:	subs	r4, r0, #0
   18590:	bne	185a4 <__assert_fail@plt+0x73e8>
   18594:	mov	r0, r4
   18598:	add	sp, sp, #8
   1859c:	pop	{r4, lr}
   185a0:	b	10f1c <fflush@plt>
   185a4:	bl	11024 <__freading@plt>
   185a8:	cmp	r0, #0
   185ac:	beq	18594 <__assert_fail@plt+0x73d8>
   185b0:	ldr	r3, [r4]
   185b4:	tst	r3, #256	; 0x100
   185b8:	beq	18594 <__assert_fail@plt+0x73d8>
   185bc:	mov	r3, #1
   185c0:	mov	r2, #0
   185c4:	mov	r0, r4
   185c8:	str	r3, [sp]
   185cc:	mov	r3, #0
   185d0:	bl	186bc <__assert_fail@plt+0x7500>
   185d4:	b	18594 <__assert_fail@plt+0x73d8>
   185d8:	push	{r4, r5, r6, lr}
   185dc:	mov	r6, r1
   185e0:	bl	11144 <fopen64@plt>
   185e4:	subs	r4, r0, #0
   185e8:	beq	18620 <__assert_fail@plt+0x7464>
   185ec:	bl	110cc <fileno@plt>
   185f0:	cmp	r0, #2
   185f4:	bhi	18620 <__assert_fail@plt+0x7464>
   185f8:	bl	19d60 <__assert_fail@plt+0x8ba4>
   185fc:	subs	r5, r0, #0
   18600:	bge	18628 <__assert_fail@plt+0x746c>
   18604:	bl	11090 <__errno_location@plt>
   18608:	mov	r5, r0
   1860c:	mov	r0, r4
   18610:	ldr	r6, [r5]
   18614:	bl	184e0 <__assert_fail@plt+0x7324>
   18618:	str	r6, [r5]
   1861c:	mov	r4, #0
   18620:	mov	r0, r4
   18624:	pop	{r4, r5, r6, pc}
   18628:	mov	r0, r4
   1862c:	bl	184e0 <__assert_fail@plt+0x7324>
   18630:	cmp	r0, #0
   18634:	beq	18654 <__assert_fail@plt+0x7498>
   18638:	bl	11090 <__errno_location@plt>
   1863c:	mov	r4, r0
   18640:	mov	r0, r5
   18644:	ldr	r6, [r4]
   18648:	bl	11198 <close@plt>
   1864c:	str	r6, [r4]
   18650:	b	1861c <__assert_fail@plt+0x7460>
   18654:	mov	r1, r6
   18658:	mov	r0, r5
   1865c:	bl	10ed4 <fdopen@plt>
   18660:	subs	r4, r0, #0
   18664:	bne	18620 <__assert_fail@plt+0x7464>
   18668:	b	18638 <__assert_fail@plt+0x747c>
   1866c:	push	{r0, r1, r2, r4, r5, lr}
   18670:	mov	r5, r0
   18674:	bl	11090 <__errno_location@plt>
   18678:	mov	r4, r0
   1867c:	mov	r0, r5
   18680:	ldr	r3, [r4]
   18684:	str	r3, [sp]
   18688:	str	r3, [sp, #4]
   1868c:	mov	r3, #0
   18690:	str	r3, [r4]
   18694:	bl	10f28 <free@plt>
   18698:	ldr	r3, [r4]
   1869c:	add	r2, sp, #8
   186a0:	clz	r3, r3
   186a4:	lsr	r3, r3, #5
   186a8:	add	r3, r2, r3, lsl #2
   186ac:	ldr	r3, [r3, #-8]
   186b0:	str	r3, [r4]
   186b4:	add	sp, sp, #12
   186b8:	pop	{r4, r5, pc}
   186bc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   186c0:	mov	r4, r0
   186c4:	ldmib	r0, {ip, lr}
   186c8:	ldr	r8, [sp, #32]
   186cc:	cmp	lr, ip
   186d0:	bne	18740 <__assert_fail@plt+0x7584>
   186d4:	ldr	ip, [r0, #16]
   186d8:	ldr	lr, [r0, #20]
   186dc:	cmp	lr, ip
   186e0:	bne	18740 <__assert_fail@plt+0x7584>
   186e4:	ldr	r5, [r0, #36]	; 0x24
   186e8:	cmp	r5, #0
   186ec:	bne	18740 <__assert_fail@plt+0x7584>
   186f0:	mov	r6, r2
   186f4:	mov	r7, r3
   186f8:	bl	110cc <fileno@plt>
   186fc:	mov	r2, r6
   18700:	mov	r3, r7
   18704:	str	r8, [sp]
   18708:	bl	10fb8 <lseek64@plt>
   1870c:	mvn	r3, #0
   18710:	mvn	r2, #0
   18714:	cmp	r1, r3
   18718:	cmpeq	r0, r2
   1871c:	mvneq	r0, #0
   18720:	beq	18738 <__assert_fail@plt+0x757c>
   18724:	ldr	r3, [r4]
   18728:	strd	r0, [r4, #80]	; 0x50
   1872c:	mov	r0, r5
   18730:	bic	r3, r3, #16
   18734:	str	r3, [r4]
   18738:	add	sp, sp, #8
   1873c:	pop	{r4, r5, r6, r7, r8, pc}
   18740:	mov	r0, r4
   18744:	str	r8, [sp, #32]
   18748:	add	sp, sp, #8
   1874c:	pop	{r4, r5, r6, r7, r8, lr}
   18750:	b	110fc <fseeko64@plt>
   18754:	push	{r4, r5, r6, lr}
   18758:	subs	r4, r0, #0
   1875c:	bne	18774 <__assert_fail@plt+0x75b8>
   18760:	ldr	r3, [pc, #124]	; 187e4 <__assert_fail@plt+0x7628>
   18764:	ldr	r0, [pc, #124]	; 187e8 <__assert_fail@plt+0x762c>
   18768:	ldr	r1, [r3]
   1876c:	bl	11168 <fputs@plt>
   18770:	bl	11180 <abort@plt>
   18774:	mov	r1, #47	; 0x2f
   18778:	bl	11120 <strrchr@plt>
   1877c:	subs	r6, r0, #0
   18780:	beq	187d0 <__assert_fail@plt+0x7614>
   18784:	add	r5, r6, #1
   18788:	sub	r3, r5, r4
   1878c:	cmp	r3, #6
   18790:	ble	187d0 <__assert_fail@plt+0x7614>
   18794:	mov	r2, #7
   18798:	ldr	r1, [pc, #76]	; 187ec <__assert_fail@plt+0x7630>
   1879c:	sub	r0, r6, #6
   187a0:	bl	11174 <strncmp@plt>
   187a4:	cmp	r0, #0
   187a8:	bne	187d0 <__assert_fail@plt+0x7614>
   187ac:	mov	r2, #3
   187b0:	ldr	r1, [pc, #56]	; 187f0 <__assert_fail@plt+0x7634>
   187b4:	mov	r0, r5
   187b8:	bl	11174 <strncmp@plt>
   187bc:	cmp	r0, #0
   187c0:	ldreq	r3, [pc, #44]	; 187f4 <__assert_fail@plt+0x7638>
   187c4:	addeq	r4, r6, #4
   187c8:	movne	r4, r5
   187cc:	streq	r4, [r3]
   187d0:	ldr	r3, [pc, #32]	; 187f8 <__assert_fail@plt+0x763c>
   187d4:	str	r4, [r3]
   187d8:	ldr	r3, [pc, #28]	; 187fc <__assert_fail@plt+0x7640>
   187dc:	str	r4, [r3]
   187e0:	pop	{r4, r5, r6, pc}
   187e4:	andeq	sp, r2, r8, ror r1
   187e8:	andeq	fp, r1, r2, lsr #31
   187ec:	ldrdeq	fp, [r1], -sl
   187f0:	andeq	fp, r1, r2, ror #31
   187f4:	andeq	sp, r2, r8, ror #2
   187f8:			; <UNDEFINED> instruction: 0x0002d1b0
   187fc:	andeq	sp, r2, ip, ror #2
   18800:	push	{r4, lr}
   18804:	mov	r2, #48	; 0x30
   18808:	mov	r4, r1
   1880c:	mov	r1, #0
   18810:	bl	110b4 <memset@plt>
   18814:	cmp	r4, #10
   18818:	bne	18820 <__assert_fail@plt+0x7664>
   1881c:	bl	11180 <abort@plt>
   18820:	str	r4, [r0]
   18824:	pop	{r4, pc}
   18828:	push	{r4, r5, r6, lr}
   1882c:	mov	r2, #5
   18830:	mov	r6, r0
   18834:	mov	r5, r1
   18838:	mov	r1, r0
   1883c:	mov	r0, #0
   18840:	bl	10f7c <dcgettext@plt>
   18844:	cmp	r6, r0
   18848:	mov	r4, r0
   1884c:	bne	188bc <__assert_fail@plt+0x7700>
   18850:	bl	1ad9c <__assert_fail@plt+0x9be0>
   18854:	ldrb	r3, [r0]
   18858:	bic	r3, r3, #32
   1885c:	cmp	r3, #85	; 0x55
   18860:	bne	188c4 <__assert_fail@plt+0x7708>
   18864:	ldrb	r3, [r0, #1]
   18868:	bic	r3, r3, #32
   1886c:	cmp	r3, #84	; 0x54
   18870:	bne	18934 <__assert_fail@plt+0x7778>
   18874:	ldrb	r3, [r0, #2]
   18878:	bic	r3, r3, #32
   1887c:	cmp	r3, #70	; 0x46
   18880:	bne	18934 <__assert_fail@plt+0x7778>
   18884:	ldrb	r3, [r0, #3]
   18888:	cmp	r3, #45	; 0x2d
   1888c:	bne	18934 <__assert_fail@plt+0x7778>
   18890:	ldrb	r3, [r0, #4]
   18894:	cmp	r3, #56	; 0x38
   18898:	bne	18934 <__assert_fail@plt+0x7778>
   1889c:	ldrb	r3, [r0, #5]
   188a0:	cmp	r3, #0
   188a4:	bne	18934 <__assert_fail@plt+0x7778>
   188a8:	ldrb	r2, [r4]
   188ac:	ldr	r3, [pc, #144]	; 18944 <__assert_fail@plt+0x7788>
   188b0:	ldr	r4, [pc, #144]	; 18948 <__assert_fail@plt+0x778c>
   188b4:	cmp	r2, #96	; 0x60
   188b8:	movne	r4, r3
   188bc:	mov	r0, r4
   188c0:	pop	{r4, r5, r6, pc}
   188c4:	cmp	r3, #71	; 0x47
   188c8:	bne	18934 <__assert_fail@plt+0x7778>
   188cc:	ldrb	r3, [r0, #1]
   188d0:	bic	r3, r3, #32
   188d4:	cmp	r3, #66	; 0x42
   188d8:	bne	18934 <__assert_fail@plt+0x7778>
   188dc:	ldrb	r3, [r0, #2]
   188e0:	cmp	r3, #49	; 0x31
   188e4:	bne	18934 <__assert_fail@plt+0x7778>
   188e8:	ldrb	r3, [r0, #3]
   188ec:	cmp	r3, #56	; 0x38
   188f0:	bne	18934 <__assert_fail@plt+0x7778>
   188f4:	ldrb	r3, [r0, #4]
   188f8:	cmp	r3, #48	; 0x30
   188fc:	bne	18934 <__assert_fail@plt+0x7778>
   18900:	ldrb	r3, [r0, #5]
   18904:	cmp	r3, #51	; 0x33
   18908:	bne	18934 <__assert_fail@plt+0x7778>
   1890c:	ldrb	r3, [r0, #6]
   18910:	cmp	r3, #48	; 0x30
   18914:	bne	18934 <__assert_fail@plt+0x7778>
   18918:	ldrb	r3, [r0, #7]
   1891c:	cmp	r3, #0
   18920:	bne	18934 <__assert_fail@plt+0x7778>
   18924:	ldrb	r2, [r4]
   18928:	ldr	r3, [pc, #28]	; 1894c <__assert_fail@plt+0x7790>
   1892c:	ldr	r4, [pc, #28]	; 18950 <__assert_fail@plt+0x7794>
   18930:	b	188b4 <__assert_fail@plt+0x76f8>
   18934:	ldr	r4, [pc, #24]	; 18954 <__assert_fail@plt+0x7798>
   18938:	cmp	r5, #9
   1893c:	ldr	r3, [pc, #20]	; 18958 <__assert_fail@plt+0x779c>
   18940:	b	188b8 <__assert_fail@plt+0x76fc>
   18944:	andeq	ip, r1, lr, lsr r0
   18948:	andeq	ip, r1, r9, asr #32
   1894c:	andeq	ip, r1, r2, asr #32
   18950:	andeq	ip, r1, r5, asr #32
   18954:	andeq	ip, r1, ip, lsr r0
   18958:	andeq	ip, r1, sp, asr #32
   1895c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18960:	sub	sp, sp, #108	; 0x6c
   18964:	mov	r8, r0
   18968:	mov	r5, r1
   1896c:	mov	r6, #0
   18970:	str	r3, [sp, #40]	; 0x28
   18974:	str	r2, [sp, #48]	; 0x30
   18978:	ldr	sl, [sp, #144]	; 0x90
   1897c:	bl	10fc4 <__ctype_get_mb_cur_max@plt>
   18980:	ldr	r3, [sp, #148]	; 0x94
   18984:	str	r6, [sp, #24]
   18988:	str	r6, [sp, #32]
   1898c:	str	r6, [sp, #44]	; 0x2c
   18990:	str	r6, [sp, #52]	; 0x34
   18994:	ubfx	r7, r3, #1, #1
   18998:	mov	r3, #1
   1899c:	str	r6, [sp, #60]	; 0x3c
   189a0:	str	r3, [sp, #72]	; 0x48
   189a4:	str	r0, [sp, #76]	; 0x4c
   189a8:	cmp	sl, #10
   189ac:	ldrls	pc, [pc, sl, lsl #2]
   189b0:	b	18bf4 <__assert_fail@plt+0x7a38>
   189b4:	andeq	r8, r1, r0, ror #19
   189b8:	andeq	r8, r1, ip, lsl #24
   189bc:	muleq	r1, r0, fp
   189c0:	andeq	r8, r1, r8, lsr #23
   189c4:	andeq	r8, r1, r8, ror fp
   189c8:	ldrdeq	r8, [r1], -r0
   189cc:			; <UNDEFINED> instruction: 0x00018ab0
   189d0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   189d4:	andeq	r8, r1, r0, lsl #22
   189d8:	andeq	r8, r1, r0, lsl #22
   189dc:	andeq	r8, r1, r0, lsl #22
   189e0:	mov	r4, sl
   189e4:	mov	r7, #0
   189e8:	mov	r9, r5
   189ec:	mov	r3, #0
   189f0:	str	r6, [sp, #68]	; 0x44
   189f4:	str	r3, [sp, #28]
   189f8:	ldr	r3, [sp, #40]	; 0x28
   189fc:	cmn	r3, #1
   18a00:	bne	195a0 <__assert_fail@plt+0x83e4>
   18a04:	ldr	r2, [sp, #28]
   18a08:	ldr	r3, [sp, #48]	; 0x30
   18a0c:	ldrb	r3, [r3, r2]
   18a10:	adds	r3, r3, #0
   18a14:	movne	r3, #1
   18a18:	str	r3, [sp, #36]	; 0x24
   18a1c:	ldr	r3, [sp, #36]	; 0x24
   18a20:	cmp	r3, #0
   18a24:	bne	18c30 <__assert_fail@plt+0x7a74>
   18a28:	sub	r3, sl, #2
   18a2c:	cmp	r4, #0
   18a30:	clz	r3, r3
   18a34:	movne	r2, #0
   18a38:	lsr	r3, r3, #5
   18a3c:	andeq	r2, r3, r7
   18a40:	cmp	r2, #0
   18a44:	bne	18df4 <__assert_fail@plt+0x7c38>
   18a48:	eor	r7, r7, #1
   18a4c:	ands	r3, r3, r7
   18a50:	beq	19618 <__assert_fail@plt+0x845c>
   18a54:	ldr	r2, [sp, #68]	; 0x44
   18a58:	cmp	r2, #0
   18a5c:	beq	195e0 <__assert_fail@plt+0x8424>
   18a60:	ldr	r3, [sp, #72]	; 0x48
   18a64:	cmp	r3, #0
   18a68:	beq	195b4 <__assert_fail@plt+0x83f8>
   18a6c:	ldr	r2, [sp, #48]	; 0x30
   18a70:	ldr	r3, [sp, #160]	; 0xa0
   18a74:	ldr	r1, [sp, #60]	; 0x3c
   18a78:	str	r3, [sp, #16]
   18a7c:	ldr	r3, [sp, #156]	; 0x9c
   18a80:	str	r3, [sp, #12]
   18a84:	ldr	r3, [sp, #152]	; 0x98
   18a88:	str	r3, [sp, #8]
   18a8c:	ldr	r3, [sp, #148]	; 0x94
   18a90:	str	r3, [sp, #4]
   18a94:	mov	r3, #5
   18a98:	str	r3, [sp]
   18a9c:	ldr	r3, [sp, #40]	; 0x28
   18aa0:	mov	r0, r8
   18aa4:	bl	1895c <__assert_fail@plt+0x77a0>
   18aa8:	mov	r4, r0
   18aac:	b	1960c <__assert_fail@plt+0x8450>
   18ab0:	ldr	r3, [pc, #2948]	; 1963c <__assert_fail@plt+0x8480>
   18ab4:	mov	r7, #1
   18ab8:	mov	r4, #0
   18abc:	mov	sl, #5
   18ac0:	str	r7, [sp, #24]
   18ac4:	str	r7, [sp, #32]
   18ac8:	str	r3, [sp, #44]	; 0x2c
   18acc:	b	189e8 <__assert_fail@plt+0x782c>
   18ad0:	cmp	r7, #0
   18ad4:	bne	18c18 <__assert_fail@plt+0x7a5c>
   18ad8:	cmp	r5, #0
   18adc:	mov	r4, #1
   18ae0:	movne	r3, #34	; 0x22
   18ae4:	strbne	r3, [r8]
   18ae8:	mov	r3, #1
   18aec:	str	r3, [sp, #24]
   18af0:	str	r3, [sp, #32]
   18af4:	ldr	r3, [pc, #2880]	; 1963c <__assert_fail@plt+0x8480>
   18af8:	str	r3, [sp, #44]	; 0x2c
   18afc:	b	189e8 <__assert_fail@plt+0x782c>
   18b00:	cmp	sl, #10
   18b04:	beq	18b28 <__assert_fail@plt+0x796c>
   18b08:	mov	r1, sl
   18b0c:	ldr	r0, [pc, #2860]	; 19640 <__assert_fail@plt+0x8484>
   18b10:	bl	18828 <__assert_fail@plt+0x766c>
   18b14:	mov	r1, sl
   18b18:	str	r0, [sp, #156]	; 0x9c
   18b1c:	ldr	r0, [pc, #2848]	; 19644 <__assert_fail@plt+0x8488>
   18b20:	bl	18828 <__assert_fail@plt+0x766c>
   18b24:	str	r0, [sp, #160]	; 0xa0
   18b28:	cmp	r7, #0
   18b2c:	moveq	r4, r7
   18b30:	beq	18b48 <__assert_fail@plt+0x798c>
   18b34:	mov	r4, #0
   18b38:	b	18b58 <__assert_fail@plt+0x799c>
   18b3c:	cmp	r5, r4
   18b40:	strbhi	r3, [r8, r4]
   18b44:	add	r4, r4, #1
   18b48:	ldr	r3, [sp, #156]	; 0x9c
   18b4c:	ldrb	r3, [r3, r4]
   18b50:	cmp	r3, #0
   18b54:	bne	18b3c <__assert_fail@plt+0x7980>
   18b58:	ldr	r0, [sp, #160]	; 0xa0
   18b5c:	bl	11078 <strlen@plt>
   18b60:	ldr	r3, [sp, #160]	; 0xa0
   18b64:	str	r0, [sp, #32]
   18b68:	str	r3, [sp, #44]	; 0x2c
   18b6c:	mov	r3, #1
   18b70:	str	r3, [sp, #24]
   18b74:	b	189e8 <__assert_fail@plt+0x782c>
   18b78:	mov	r3, #1
   18b7c:	cmp	r7, #0
   18b80:	streq	r3, [sp, #24]
   18b84:	beq	18bc8 <__assert_fail@plt+0x7a0c>
   18b88:	str	r3, [sp, #32]
   18b8c:	b	18bb4 <__assert_fail@plt+0x79f8>
   18b90:	cmp	r7, #0
   18b94:	beq	18bc8 <__assert_fail@plt+0x7a0c>
   18b98:	mov	r3, #1
   18b9c:	str	r3, [sp, #32]
   18ba0:	ldr	r3, [pc, #2716]	; 19644 <__assert_fail@plt+0x8488>
   18ba4:	b	18c28 <__assert_fail@plt+0x7a6c>
   18ba8:	mov	r7, #1
   18bac:	str	r7, [sp, #24]
   18bb0:	str	r7, [sp, #32]
   18bb4:	ldr	r3, [pc, #2696]	; 19644 <__assert_fail@plt+0x8488>
   18bb8:	mov	r4, #0
   18bbc:	str	r3, [sp, #44]	; 0x2c
   18bc0:	mov	sl, #2
   18bc4:	b	189e8 <__assert_fail@plt+0x782c>
   18bc8:	cmp	r5, #0
   18bcc:	movne	r3, #39	; 0x27
   18bd0:	movne	r7, #0
   18bd4:	strbne	r3, [r8]
   18bd8:	moveq	r7, r5
   18bdc:	mov	r3, #1
   18be0:	mov	r4, #1
   18be4:	str	r3, [sp, #32]
   18be8:	ldr	r3, [pc, #2644]	; 19644 <__assert_fail@plt+0x8488>
   18bec:	str	r3, [sp, #44]	; 0x2c
   18bf0:	b	18bc0 <__assert_fail@plt+0x7a04>
   18bf4:	bl	11180 <abort@plt>
   18bf8:	mov	r3, #1
   18bfc:	mov	r7, #0
   18c00:	str	r3, [sp, #24]
   18c04:	mov	r4, #0
   18c08:	b	189e8 <__assert_fail@plt+0x782c>
   18c0c:	mov	r7, #1
   18c10:	str	sl, [sp, #32]
   18c14:	b	18bb4 <__assert_fail@plt+0x79f8>
   18c18:	mov	r3, #1
   18c1c:	str	r7, [sp, #24]
   18c20:	str	r3, [sp, #32]
   18c24:	ldr	r3, [pc, #2576]	; 1963c <__assert_fail@plt+0x8480>
   18c28:	str	r3, [sp, #44]	; 0x2c
   18c2c:	b	18c04 <__assert_fail@plt+0x7a48>
   18c30:	ldr	fp, [sp, #24]
   18c34:	ldr	r3, [sp, #32]
   18c38:	cmp	sl, #2
   18c3c:	moveq	fp, #0
   18c40:	andne	fp, fp, #1
   18c44:	adds	r5, r3, #0
   18c48:	movne	r5, #1
   18c4c:	ands	r3, fp, r5
   18c50:	str	r3, [sp, #64]	; 0x40
   18c54:	beq	18d24 <__assert_fail@plt+0x7b68>
   18c58:	ldr	r3, [sp, #28]
   18c5c:	ldr	r2, [sp, #32]
   18c60:	cmp	r2, #1
   18c64:	add	r6, r3, r2
   18c68:	mov	r3, r2
   18c6c:	ldr	r2, [sp, #40]	; 0x28
   18c70:	movls	r3, #0
   18c74:	movhi	r3, #1
   18c78:	cmn	r2, #1
   18c7c:	movne	r3, #0
   18c80:	cmp	r3, #0
   18c84:	beq	18c94 <__assert_fail@plt+0x7ad8>
   18c88:	ldr	r0, [sp, #48]	; 0x30
   18c8c:	bl	11078 <strlen@plt>
   18c90:	str	r0, [sp, #40]	; 0x28
   18c94:	ldr	r3, [sp, #40]	; 0x28
   18c98:	cmp	r6, r3
   18c9c:	bhi	18d1c <__assert_fail@plt+0x7b60>
   18ca0:	ldr	r0, [sp, #28]
   18ca4:	ldr	r2, [sp, #32]
   18ca8:	ldr	r3, [sp, #48]	; 0x30
   18cac:	ldr	r1, [sp, #44]	; 0x2c
   18cb0:	add	r0, r3, r0
   18cb4:	bl	10f64 <memcmp@plt>
   18cb8:	cmp	r0, #0
   18cbc:	bne	18d1c <__assert_fail@plt+0x7b60>
   18cc0:	cmp	r7, #0
   18cc4:	beq	18d24 <__assert_fail@plt+0x7b68>
   18cc8:	str	r7, [sp, #24]
   18ccc:	ldr	r3, [sp, #24]
   18cd0:	mov	r1, r9
   18cd4:	ldr	r2, [sp, #48]	; 0x30
   18cd8:	cmp	sl, #2
   18cdc:	movne	r3, #0
   18ce0:	andeq	r3, r3, #1
   18ce4:	cmp	r3, #0
   18ce8:	ldr	r3, [sp, #160]	; 0xa0
   18cec:	movne	sl, #4
   18cf0:	str	sl, [sp]
   18cf4:	str	r3, [sp, #16]
   18cf8:	ldr	r3, [sp, #156]	; 0x9c
   18cfc:	str	r3, [sp, #12]
   18d00:	mov	r3, #0
   18d04:	str	r3, [sp, #8]
   18d08:	ldr	r3, [sp, #148]	; 0x94
   18d0c:	bic	r3, r3, #2
   18d10:	str	r3, [sp, #4]
   18d14:	ldr	r3, [sp, #40]	; 0x28
   18d18:	b	18aa0 <__assert_fail@plt+0x78e4>
   18d1c:	mov	r3, #0
   18d20:	str	r3, [sp, #64]	; 0x40
   18d24:	ldr	r2, [sp, #28]
   18d28:	ldr	r3, [sp, #48]	; 0x30
   18d2c:	add	r3, r3, r2
   18d30:	str	r3, [sp, #80]	; 0x50
   18d34:	ldr	r3, [sp, #48]	; 0x30
   18d38:	ldrb	r6, [r3, r2]
   18d3c:	cmp	r6, #58	; 0x3a
   18d40:	bhi	18ea4 <__assert_fail@plt+0x7ce8>
   18d44:	cmp	r6, #43	; 0x2b
   18d48:	bcs	19064 <__assert_fail@plt+0x7ea8>
   18d4c:	cmp	r6, #32
   18d50:	beq	190b8 <__assert_fail@plt+0x7efc>
   18d54:	bhi	18dfc <__assert_fail@plt+0x7c40>
   18d58:	cmp	r6, #9
   18d5c:	beq	19260 <__assert_fail@plt+0x80a4>
   18d60:	bhi	18dc0 <__assert_fail@plt+0x7c04>
   18d64:	cmp	r6, #7
   18d68:	beq	19270 <__assert_fail@plt+0x80b4>
   18d6c:	bhi	1928c <__assert_fail@plt+0x80d0>
   18d70:	cmp	r6, #0
   18d74:	beq	190d4 <__assert_fail@plt+0x7f18>
   18d78:	ldr	r3, [sp, #76]	; 0x4c
   18d7c:	cmp	r3, #1
   18d80:	bne	192d8 <__assert_fail@plt+0x811c>
   18d84:	bl	11054 <__ctype_b_loc@plt>
   18d88:	ldr	r2, [r0]
   18d8c:	sxth	r3, r6
   18d90:	lsl	r3, r3, #1
   18d94:	ldrh	r5, [r2, r3]
   18d98:	ldr	r3, [sp, #76]	; 0x4c
   18d9c:	ubfx	r5, r5, #14, #1
   18da0:	str	r3, [sp, #56]	; 0x38
   18da4:	ldr	r3, [sp, #24]
   18da8:	eor	fp, r5, #1
   18dac:	and	fp, fp, r3
   18db0:	ands	fp, fp, #255	; 0xff
   18db4:	beq	18f94 <__assert_fail@plt+0x7dd8>
   18db8:	mov	r5, #0
   18dbc:	b	19384 <__assert_fail@plt+0x81c8>
   18dc0:	cmp	r6, #11
   18dc4:	beq	19294 <__assert_fail@plt+0x80d8>
   18dc8:	bcc	19268 <__assert_fail@plt+0x80ac>
   18dcc:	cmp	r6, #12
   18dd0:	beq	1929c <__assert_fail@plt+0x80e0>
   18dd4:	cmp	r6, #13
   18dd8:	moveq	r3, #114	; 0x72
   18ddc:	bne	18d78 <__assert_fail@plt+0x7bbc>
   18de0:	cmp	sl, #2
   18de4:	movne	r2, #0
   18de8:	andeq	r2, r7, #1
   18dec:	cmp	r2, #0
   18df0:	beq	19274 <__assert_fail@plt+0x80b8>
   18df4:	mov	sl, #2
   18df8:	b	18ccc <__assert_fail@plt+0x7b10>
   18dfc:	cmp	r6, #37	; 0x25
   18e00:	beq	19064 <__assert_fail@plt+0x7ea8>
   18e04:	bhi	18e18 <__assert_fail@plt+0x7c5c>
   18e08:	cmp	r6, #35	; 0x23
   18e0c:	beq	190ac <__assert_fail@plt+0x7ef0>
   18e10:	mov	r5, #0
   18e14:	b	190bc <__assert_fail@plt+0x7f00>
   18e18:	cmp	r6, #39	; 0x27
   18e1c:	bne	18e10 <__assert_fail@plt+0x7c54>
   18e20:	cmp	sl, #2
   18e24:	ldrne	r5, [sp, #36]	; 0x24
   18e28:	movne	r3, r5
   18e2c:	strne	r3, [sp, #68]	; 0x44
   18e30:	bne	191b0 <__assert_fail@plt+0x7ff4>
   18e34:	cmp	r7, #0
   18e38:	bne	18ccc <__assert_fail@plt+0x7b10>
   18e3c:	ldr	r3, [sp, #60]	; 0x3c
   18e40:	cmp	r9, #0
   18e44:	clz	r3, r3
   18e48:	lsr	r3, r3, #5
   18e4c:	moveq	r3, #0
   18e50:	cmp	r3, #0
   18e54:	strne	r9, [sp, #60]	; 0x3c
   18e58:	movne	r9, #0
   18e5c:	bne	18e6c <__assert_fail@plt+0x7cb0>
   18e60:	cmp	r9, r4
   18e64:	movhi	r3, #39	; 0x27
   18e68:	strbhi	r3, [r8, r4]
   18e6c:	add	r3, r4, #1
   18e70:	ldr	r5, [sp, #36]	; 0x24
   18e74:	mov	fp, #0
   18e78:	cmp	r3, r9
   18e7c:	movcc	r2, #92	; 0x5c
   18e80:	str	fp, [sp, #52]	; 0x34
   18e84:	strbcc	r2, [r8, r3]
   18e88:	add	r3, r4, #2
   18e8c:	add	r4, r4, #3
   18e90:	cmp	r3, r9
   18e94:	str	r5, [sp, #68]	; 0x44
   18e98:	movcc	r2, #39	; 0x27
   18e9c:	strbcc	r2, [r8, r3]
   18ea0:	b	18f94 <__assert_fail@plt+0x7dd8>
   18ea4:	cmp	r6, #94	; 0x5e
   18ea8:	beq	18e10 <__assert_fail@plt+0x7c54>
   18eac:	bhi	1906c <__assert_fail@plt+0x7eb0>
   18eb0:	cmp	r6, #90	; 0x5a
   18eb4:	bhi	19058 <__assert_fail@plt+0x7e9c>
   18eb8:	cmp	r6, #65	; 0x41
   18ebc:	bcs	19064 <__assert_fail@plt+0x7ea8>
   18ec0:	cmp	r6, #62	; 0x3e
   18ec4:	bls	18e10 <__assert_fail@plt+0x7c54>
   18ec8:	cmp	r6, #63	; 0x3f
   18ecc:	bne	18d78 <__assert_fail@plt+0x7bbc>
   18ed0:	cmp	sl, #2
   18ed4:	beq	191b8 <__assert_fail@plt+0x7ffc>
   18ed8:	cmp	sl, #5
   18edc:	movne	fp, #0
   18ee0:	bne	19588 <__assert_fail@plt+0x83cc>
   18ee4:	ldr	r3, [sp, #148]	; 0x94
   18ee8:	tst	r3, #4
   18eec:	beq	191c0 <__assert_fail@plt+0x8004>
   18ef0:	ldr	r3, [sp, #28]
   18ef4:	add	r2, r3, #2
   18ef8:	ldr	r3, [sp, #40]	; 0x28
   18efc:	cmp	r2, r3
   18f00:	bcs	191c0 <__assert_fail@plt+0x8004>
   18f04:	ldr	r1, [sp, #28]
   18f08:	ldr	r3, [sp, #48]	; 0x30
   18f0c:	add	r3, r3, r1
   18f10:	ldrb	r1, [r3, #1]
   18f14:	cmp	r1, #63	; 0x3f
   18f18:	bne	191c0 <__assert_fail@plt+0x8004>
   18f1c:	ldr	r3, [sp, #48]	; 0x30
   18f20:	ldrb	r6, [r3, r2]
   18f24:	sub	r3, r6, #33	; 0x21
   18f28:	uxtb	r3, r3
   18f2c:	cmp	r3, #29
   18f30:	bhi	19590 <__assert_fail@plt+0x83d4>
   18f34:	ldr	r0, [pc, #1804]	; 19648 <__assert_fail@plt+0x848c>
   18f38:	mov	r5, #1
   18f3c:	ands	r5, r0, r5, lsl r3
   18f40:	beq	19598 <__assert_fail@plt+0x83dc>
   18f44:	cmp	r7, #0
   18f48:	bne	18ccc <__assert_fail@plt+0x7b10>
   18f4c:	cmp	r9, r4
   18f50:	add	r3, r4, #1
   18f54:	str	r2, [sp, #28]
   18f58:	mov	r5, #0
   18f5c:	strbhi	r1, [r8, r4]
   18f60:	cmp	r9, r3
   18f64:	mov	fp, r5
   18f68:	movhi	r1, #34	; 0x22
   18f6c:	strbhi	r1, [r8, r3]
   18f70:	add	r3, r4, #2
   18f74:	cmp	r9, r3
   18f78:	movhi	r1, #34	; 0x22
   18f7c:	strbhi	r1, [r8, r3]
   18f80:	add	r3, r4, #3
   18f84:	add	r4, r4, #4
   18f88:	cmp	r9, r3
   18f8c:	movhi	r1, #63	; 0x3f
   18f90:	strbhi	r1, [r8, r3]
   18f94:	ldr	r3, [sp, #24]
   18f98:	eor	r3, r3, #1
   18f9c:	cmp	sl, #2
   18fa0:	orreq	r3, r3, #1
   18fa4:	eor	r3, r3, #1
   18fa8:	orr	r3, r7, r3
   18fac:	tst	r3, #255	; 0xff
   18fb0:	beq	18fdc <__assert_fail@plt+0x7e20>
   18fb4:	ldr	r3, [sp, #152]	; 0x98
   18fb8:	cmp	r3, #0
   18fbc:	beq	18fdc <__assert_fail@plt+0x7e20>
   18fc0:	ldr	r1, [sp, #152]	; 0x98
   18fc4:	ubfx	r2, r6, #5, #8
   18fc8:	and	r3, r6, #31
   18fcc:	ldr	r2, [r1, r2, lsl #2]
   18fd0:	lsr	r3, r2, r3
   18fd4:	tst	r3, #1
   18fd8:	bne	18fe8 <__assert_fail@plt+0x7e2c>
   18fdc:	ldr	r3, [sp, #64]	; 0x40
   18fe0:	cmp	r3, #0
   18fe4:	beq	191e0 <__assert_fail@plt+0x8024>
   18fe8:	sub	r3, sl, #2
   18fec:	cmp	r7, #0
   18ff0:	clz	r3, r3
   18ff4:	lsr	r3, r3, #5
   18ff8:	bne	18ccc <__assert_fail@plt+0x7b10>
   18ffc:	ldr	r2, [sp, #52]	; 0x34
   19000:	eor	r2, r2, #1
   19004:	ands	r3, r3, r2
   19008:	beq	19040 <__assert_fail@plt+0x7e84>
   1900c:	cmp	r9, r4
   19010:	str	r3, [sp, #52]	; 0x34
   19014:	movhi	r2, #39	; 0x27
   19018:	strbhi	r2, [r8, r4]
   1901c:	add	r2, r4, #1
   19020:	cmp	r9, r2
   19024:	movhi	r1, #36	; 0x24
   19028:	strbhi	r1, [r8, r2]
   1902c:	add	r2, r4, #2
   19030:	add	r4, r4, #3
   19034:	cmp	r9, r2
   19038:	movhi	r1, #39	; 0x27
   1903c:	strbhi	r1, [r8, r2]
   19040:	cmp	r9, r4
   19044:	ldr	fp, [sp, #36]	; 0x24
   19048:	movhi	r3, #92	; 0x5c
   1904c:	strbhi	r3, [r8, r4]
   19050:	add	r4, r4, #1
   19054:	b	191e0 <__assert_fail@plt+0x8024>
   19058:	cmp	r6, #92	; 0x5c
   1905c:	beq	191c8 <__assert_fail@plt+0x800c>
   19060:	bls	18e10 <__assert_fail@plt+0x7c54>
   19064:	ldr	r5, [sp, #36]	; 0x24
   19068:	b	191b0 <__assert_fail@plt+0x7ff4>
   1906c:	cmp	r6, #122	; 0x7a
   19070:	bhi	19090 <__assert_fail@plt+0x7ed4>
   19074:	cmp	r6, #97	; 0x61
   19078:	bcs	19064 <__assert_fail@plt+0x7ea8>
   1907c:	cmp	r6, #95	; 0x5f
   19080:	beq	19064 <__assert_fail@plt+0x7ea8>
   19084:	cmp	r6, #96	; 0x60
   19088:	bne	18d78 <__assert_fail@plt+0x7bbc>
   1908c:	b	18e10 <__assert_fail@plt+0x7c54>
   19090:	cmp	r6, #124	; 0x7c
   19094:	beq	18e10 <__assert_fail@plt+0x7c54>
   19098:	bcc	192a4 <__assert_fail@plt+0x80e8>
   1909c:	cmp	r6, #125	; 0x7d
   190a0:	beq	192a4 <__assert_fail@plt+0x80e8>
   190a4:	cmp	r6, #126	; 0x7e
   190a8:	bne	18d78 <__assert_fail@plt+0x7bbc>
   190ac:	ldr	r3, [sp, #28]
   190b0:	cmp	r3, #0
   190b4:	bne	191c0 <__assert_fail@plt+0x8004>
   190b8:	ldr	r5, [sp, #36]	; 0x24
   190bc:	cmp	sl, #2
   190c0:	movne	fp, #0
   190c4:	andeq	fp, r7, #1
   190c8:	cmp	fp, #0
   190cc:	beq	18f94 <__assert_fail@plt+0x7dd8>
   190d0:	b	18df4 <__assert_fail@plt+0x7c38>
   190d4:	ldr	r3, [sp, #24]
   190d8:	cmp	r3, #0
   190dc:	beq	191a4 <__assert_fail@plt+0x7fe8>
   190e0:	sub	r2, sl, #2
   190e4:	cmp	r7, #0
   190e8:	clz	r2, r2
   190ec:	lsr	r2, r2, #5
   190f0:	bne	18cc8 <__assert_fail@plt+0x7b0c>
   190f4:	ldr	r3, [sp, #52]	; 0x34
   190f8:	eor	r3, r3, #1
   190fc:	ands	r2, r2, r3
   19100:	moveq	r3, r4
   19104:	beq	1913c <__assert_fail@plt+0x7f80>
   19108:	cmp	r9, r4
   1910c:	str	r2, [sp, #52]	; 0x34
   19110:	movhi	r3, #39	; 0x27
   19114:	strbhi	r3, [r8, r4]
   19118:	add	r3, r4, #1
   1911c:	cmp	r9, r3
   19120:	movhi	r1, #36	; 0x24
   19124:	strbhi	r1, [r8, r3]
   19128:	add	r3, r4, #2
   1912c:	cmp	r9, r3
   19130:	movhi	r1, #39	; 0x27
   19134:	strbhi	r1, [r8, r3]
   19138:	add	r3, r4, #3
   1913c:	cmp	r9, r3
   19140:	add	r4, r3, #1
   19144:	movhi	r2, #92	; 0x5c
   19148:	strbhi	r2, [r8, r3]
   1914c:	cmp	fp, #0
   19150:	beq	19578 <__assert_fail@plt+0x83bc>
   19154:	ldr	r2, [sp, #28]
   19158:	ldr	r1, [sp, #40]	; 0x28
   1915c:	add	r2, r2, #1
   19160:	cmp	r2, r1
   19164:	bcs	1919c <__assert_fail@plt+0x7fe0>
   19168:	ldr	r1, [sp, #48]	; 0x30
   1916c:	mov	r6, #48	; 0x30
   19170:	ldrb	r2, [r1, r2]
   19174:	sub	r2, r2, #48	; 0x30
   19178:	cmp	r2, #9
   1917c:	bhi	19588 <__assert_fail@plt+0x83cc>
   19180:	cmp	r9, r4
   19184:	add	r2, r3, #2
   19188:	strbhi	r6, [r8, r4]
   1918c:	cmp	r9, r2
   19190:	add	r4, r3, #3
   19194:	movhi	r1, #48	; 0x30
   19198:	strbhi	r1, [r8, r2]
   1919c:	mov	r5, #0
   191a0:	b	19580 <__assert_fail@plt+0x83c4>
   191a4:	ldr	r3, [sp, #148]	; 0x94
   191a8:	ands	r5, r3, #1
   191ac:	bne	19234 <__assert_fail@plt+0x8078>
   191b0:	mov	fp, #0
   191b4:	b	18f94 <__assert_fail@plt+0x7dd8>
   191b8:	cmp	r7, #0
   191bc:	bne	18ccc <__assert_fail@plt+0x7b10>
   191c0:	mov	r5, #0
   191c4:	b	191b0 <__assert_fail@plt+0x7ff4>
   191c8:	cmp	sl, #2
   191cc:	bne	19240 <__assert_fail@plt+0x8084>
   191d0:	cmp	r7, #0
   191d4:	bne	18ccc <__assert_fail@plt+0x7b10>
   191d8:	mov	r5, r7
   191dc:	mov	fp, r7
   191e0:	ldr	r3, [sp, #52]	; 0x34
   191e4:	eor	fp, fp, #1
   191e8:	tst	r3, fp
   191ec:	beq	19218 <__assert_fail@plt+0x805c>
   191f0:	cmp	r9, r4
   191f4:	movhi	r3, #39	; 0x27
   191f8:	strbhi	r3, [r8, r4]
   191fc:	add	r3, r4, #1
   19200:	add	r4, r4, #2
   19204:	cmp	r9, r3
   19208:	movhi	r2, #39	; 0x27
   1920c:	strbhi	r2, [r8, r3]
   19210:	mov	r3, #0
   19214:	str	r3, [sp, #52]	; 0x34
   19218:	cmp	r9, r4
   1921c:	ldr	r3, [sp, #72]	; 0x48
   19220:	strbhi	r6, [r8, r4]
   19224:	cmp	r5, #0
   19228:	add	r4, r4, #1
   1922c:	moveq	r3, #0
   19230:	str	r3, [sp, #72]	; 0x48
   19234:	ldr	r3, [sp, #28]
   19238:	add	r3, r3, #1
   1923c:	b	189f4 <__assert_fail@plt+0x7838>
   19240:	ldr	r3, [sp, #24]
   19244:	and	r3, r3, r7
   19248:	tst	r5, r3
   1924c:	moveq	r3, r6
   19250:	beq	18de0 <__assert_fail@plt+0x7c24>
   19254:	mov	fp, #0
   19258:	mov	r5, fp
   1925c:	b	191e0 <__assert_fail@plt+0x8024>
   19260:	mov	r3, #116	; 0x74
   19264:	b	18de0 <__assert_fail@plt+0x7c24>
   19268:	mov	r3, #110	; 0x6e
   1926c:	b	18de0 <__assert_fail@plt+0x7c24>
   19270:	mov	r3, #97	; 0x61
   19274:	ldr	r2, [sp, #24]
   19278:	cmp	r2, #0
   1927c:	beq	191c0 <__assert_fail@plt+0x8004>
   19280:	mov	r6, r3
   19284:	mov	r5, #0
   19288:	b	18fe8 <__assert_fail@plt+0x7e2c>
   1928c:	mov	r3, #98	; 0x62
   19290:	b	19274 <__assert_fail@plt+0x80b8>
   19294:	mov	r3, #118	; 0x76
   19298:	b	19274 <__assert_fail@plt+0x80b8>
   1929c:	mov	r3, #102	; 0x66
   192a0:	b	19274 <__assert_fail@plt+0x80b8>
   192a4:	ldr	r3, [sp, #40]	; 0x28
   192a8:	cmn	r3, #1
   192ac:	bne	192cc <__assert_fail@plt+0x8110>
   192b0:	ldr	r3, [sp, #48]	; 0x30
   192b4:	ldrb	r3, [r3, #1]
   192b8:	adds	r3, r3, #0
   192bc:	movne	r3, #1
   192c0:	cmp	r3, #0
   192c4:	bne	191c0 <__assert_fail@plt+0x8004>
   192c8:	b	190ac <__assert_fail@plt+0x7ef0>
   192cc:	ldr	r3, [sp, #40]	; 0x28
   192d0:	subs	r3, r3, #1
   192d4:	b	192bc <__assert_fail@plt+0x8100>
   192d8:	mov	r3, #0
   192dc:	mov	r2, #0
   192e0:	strd	r2, [sp, #96]	; 0x60
   192e4:	ldr	r3, [sp, #40]	; 0x28
   192e8:	cmn	r3, #1
   192ec:	bne	192fc <__assert_fail@plt+0x8140>
   192f0:	ldr	r0, [sp, #48]	; 0x30
   192f4:	bl	11078 <strlen@plt>
   192f8:	str	r0, [sp, #40]	; 0x28
   192fc:	ldr	r5, [sp, #36]	; 0x24
   19300:	mov	r3, #0
   19304:	str	r3, [sp, #56]	; 0x38
   19308:	ldr	r3, [sp, #28]
   1930c:	add	r0, sp, #92	; 0x5c
   19310:	ldr	r1, [sp, #40]	; 0x28
   19314:	ldr	r2, [sp, #56]	; 0x38
   19318:	add	r2, r3, r2
   1931c:	ldr	r3, [sp, #48]	; 0x30
   19320:	add	fp, r3, r2
   19324:	sub	r2, r1, r2
   19328:	add	r3, sp, #96	; 0x60
   1932c:	mov	r1, fp
   19330:	bl	1add0 <__assert_fail@plt+0x9c14>
   19334:	subs	r2, r0, #0
   19338:	beq	19378 <__assert_fail@plt+0x81bc>
   1933c:	cmn	r2, #1
   19340:	beq	1954c <__assert_fail@plt+0x8390>
   19344:	cmn	r2, #2
   19348:	bne	194bc <__assert_fail@plt+0x8300>
   1934c:	ldr	r3, [sp, #28]
   19350:	ldr	r2, [sp, #56]	; 0x38
   19354:	add	r3, r3, r2
   19358:	ldr	r2, [sp, #40]	; 0x28
   1935c:	cmp	r2, r3
   19360:	bls	1954c <__assert_fail@plt+0x8390>
   19364:	ldr	r2, [sp, #56]	; 0x38
   19368:	ldr	r3, [sp, #80]	; 0x50
   1936c:	ldrb	r5, [r3, r2]
   19370:	cmp	r5, #0
   19374:	bne	194ac <__assert_fail@plt+0x82f0>
   19378:	ldr	r3, [sp, #56]	; 0x38
   1937c:	cmp	r3, #1
   19380:	bls	18da4 <__assert_fail@plt+0x7be8>
   19384:	ldr	r3, [sp, #28]
   19388:	mov	fp, #0
   1938c:	mov	ip, #92	; 0x5c
   19390:	ldr	r2, [sp, #56]	; 0x38
   19394:	add	r3, r3, r2
   19398:	ldr	r2, [sp, #24]
   1939c:	str	r3, [sp, #36]	; 0x24
   193a0:	eor	r3, r5, #1
   193a4:	and	r3, r3, r2
   193a8:	mov	r2, #39	; 0x27
   193ac:	uxtb	r3, r3
   193b0:	cmp	r3, #0
   193b4:	beq	19554 <__assert_fail@plt+0x8398>
   193b8:	sub	r0, sl, #2
   193bc:	cmp	r7, #0
   193c0:	clz	r0, r0
   193c4:	lsr	r0, r0, #5
   193c8:	bne	18cc8 <__assert_fail@plt+0x7b0c>
   193cc:	ldr	r1, [sp, #52]	; 0x34
   193d0:	eor	r1, r1, #1
   193d4:	ands	r1, r0, r1
   193d8:	beq	19408 <__assert_fail@plt+0x824c>
   193dc:	cmp	r9, r4
   193e0:	add	r0, r4, #1
   193e4:	str	r1, [sp, #52]	; 0x34
   193e8:	strbhi	r2, [r8, r4]
   193ec:	cmp	r9, r0
   193f0:	movhi	lr, #36	; 0x24
   193f4:	strbhi	lr, [r8, r0]
   193f8:	add	r0, r4, #2
   193fc:	add	r4, r4, #3
   19400:	cmp	r9, r0
   19404:	strbhi	r2, [r8, r0]
   19408:	cmp	r9, r4
   1940c:	add	r0, r4, #1
   19410:	mov	fp, r3
   19414:	strbhi	ip, [r8, r4]
   19418:	cmp	r9, r0
   1941c:	lsrhi	r1, r6, #6
   19420:	addhi	r1, r1, #48	; 0x30
   19424:	strbhi	r1, [r8, r0]
   19428:	add	r0, r4, #2
   1942c:	add	r4, r4, #3
   19430:	cmp	r9, r0
   19434:	ubfxhi	r1, r6, #3, #3
   19438:	and	r6, r6, #7
   1943c:	add	r6, r6, #48	; 0x30
   19440:	addhi	r1, r1, #48	; 0x30
   19444:	strbhi	r1, [r8, r0]
   19448:	eor	r0, fp, #1
   1944c:	ldr	r1, [sp, #28]
   19450:	ldr	lr, [sp, #52]	; 0x34
   19454:	add	r1, r1, #1
   19458:	and	r0, r0, lr
   1945c:	ldr	lr, [sp, #36]	; 0x24
   19460:	cmp	r1, lr
   19464:	bcs	191e0 <__assert_fail@plt+0x8024>
   19468:	cmp	r0, #0
   1946c:	beq	19490 <__assert_fail@plt+0x82d4>
   19470:	cmp	r9, r4
   19474:	add	r0, r4, #1
   19478:	strbhi	r2, [r8, r4]
   1947c:	cmp	r9, r0
   19480:	add	r4, r4, #2
   19484:	strbhi	r2, [r8, r0]
   19488:	mov	r0, #0
   1948c:	str	r0, [sp, #52]	; 0x34
   19490:	ldr	r0, [sp, #48]	; 0x30
   19494:	cmp	r9, r4
   19498:	str	r1, [sp, #28]
   1949c:	strbhi	r6, [r8, r4]
   194a0:	add	r4, r4, #1
   194a4:	ldrb	r6, [r0, r1]
   194a8:	b	193b0 <__assert_fail@plt+0x81f4>
   194ac:	ldr	r3, [sp, #56]	; 0x38
   194b0:	add	r3, r3, #1
   194b4:	str	r3, [sp, #56]	; 0x38
   194b8:	b	1934c <__assert_fail@plt+0x8190>
   194bc:	cmp	sl, #2
   194c0:	movne	r3, #0
   194c4:	andeq	r3, r7, #1
   194c8:	cmp	r3, #0
   194cc:	movne	r1, #1
   194d0:	bne	1952c <__assert_fail@plt+0x8370>
   194d4:	ldr	r0, [sp, #92]	; 0x5c
   194d8:	str	r2, [sp, #84]	; 0x54
   194dc:	bl	10fa0 <iswprint@plt>
   194e0:	ldr	r3, [sp, #56]	; 0x38
   194e4:	cmp	r0, #0
   194e8:	add	r0, sp, #96	; 0x60
   194ec:	moveq	r5, #0
   194f0:	ldr	r2, [sp, #84]	; 0x54
   194f4:	add	r3, r3, r2
   194f8:	str	r3, [sp, #56]	; 0x38
   194fc:	bl	10f58 <mbsinit@plt>
   19500:	cmp	r0, #0
   19504:	beq	19308 <__assert_fail@plt+0x814c>
   19508:	b	19378 <__assert_fail@plt+0x81bc>
   1950c:	ldrb	r3, [fp, #1]!
   19510:	cmp	r3, #94	; 0x5e
   19514:	beq	18df4 <__assert_fail@plt+0x7c38>
   19518:	bhi	19538 <__assert_fail@plt+0x837c>
   1951c:	sub	r3, r3, #91	; 0x5b
   19520:	cmp	r3, #1
   19524:	bls	18df4 <__assert_fail@plt+0x7c38>
   19528:	add	r1, r1, #1
   1952c:	cmp	r1, r2
   19530:	bne	1950c <__assert_fail@plt+0x8350>
   19534:	b	194d4 <__assert_fail@plt+0x8318>
   19538:	cmp	r3, #96	; 0x60
   1953c:	beq	18df4 <__assert_fail@plt+0x7c38>
   19540:	cmp	r3, #124	; 0x7c
   19544:	bne	19528 <__assert_fail@plt+0x836c>
   19548:	b	18df4 <__assert_fail@plt+0x7c38>
   1954c:	mov	r5, #0
   19550:	b	19378 <__assert_fail@plt+0x81bc>
   19554:	ldr	r1, [sp, #64]	; 0x40
   19558:	cmp	r1, #0
   1955c:	beq	19448 <__assert_fail@plt+0x828c>
   19560:	cmp	r9, r4
   19564:	mov	r1, #0
   19568:	strbhi	ip, [r8, r4]
   1956c:	add	r4, r4, #1
   19570:	str	r1, [sp, #64]	; 0x40
   19574:	b	19448 <__assert_fail@plt+0x828c>
   19578:	mov	r5, fp
   1957c:	ldr	fp, [sp, #24]
   19580:	mov	r6, #48	; 0x30
   19584:	b	18f94 <__assert_fail@plt+0x7dd8>
   19588:	mov	r5, #0
   1958c:	b	18f94 <__assert_fail@plt+0x7dd8>
   19590:	mov	r6, r1
   19594:	b	191c0 <__assert_fail@plt+0x8004>
   19598:	mov	r6, r1
   1959c:	b	191b0 <__assert_fail@plt+0x7ff4>
   195a0:	ldr	r2, [sp, #28]
   195a4:	ldr	r3, [sp, #40]	; 0x28
   195a8:	subs	r3, r3, r2
   195ac:	movne	r3, #1
   195b0:	b	18a18 <__assert_fail@plt+0x785c>
   195b4:	ldr	r3, [sp, #60]	; 0x3c
   195b8:	mov	sl, #2
   195bc:	ldr	r7, [sp, #72]	; 0x48
   195c0:	adds	r6, r3, #0
   195c4:	mov	r5, r3
   195c8:	movne	r6, #1
   195cc:	cmp	r9, #0
   195d0:	movne	r6, #0
   195d4:	cmp	r6, #0
   195d8:	bne	189a8 <__assert_fail@plt+0x77ec>
   195dc:	ldr	r3, [sp, #68]	; 0x44
   195e0:	ldr	r2, [sp, #44]	; 0x2c
   195e4:	cmp	r2, #0
   195e8:	moveq	r3, #0
   195ec:	andne	r3, r3, #1
   195f0:	cmp	r3, #0
   195f4:	movne	r3, r2
   195f8:	subne	r3, r3, #1
   195fc:	bne	1962c <__assert_fail@plt+0x8470>
   19600:	cmp	r9, r4
   19604:	movhi	r3, #0
   19608:	strbhi	r3, [r8, r4]
   1960c:	mov	r0, r4
   19610:	add	sp, sp, #108	; 0x6c
   19614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19618:	mov	r3, r7
   1961c:	b	195e0 <__assert_fail@plt+0x8424>
   19620:	cmp	r9, r4
   19624:	strbhi	r2, [r8, r4]
   19628:	add	r4, r4, #1
   1962c:	ldrb	r2, [r3, #1]!
   19630:	cmp	r2, #0
   19634:	bne	19620 <__assert_fail@plt+0x8464>
   19638:	b	19600 <__assert_fail@plt+0x8444>
   1963c:	andeq	ip, r1, ip, lsr r0
   19640:	andeq	ip, r1, pc, asr #32
   19644:	andeq	ip, r1, sp, asr #32
   19648:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1964c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19650:	sub	sp, sp, #52	; 0x34
   19654:	mov	r6, r0
   19658:	mov	r5, r3
   1965c:	mov	r8, r1
   19660:	mov	r9, r2
   19664:	bl	11090 <__errno_location@plt>
   19668:	ldr	r3, [r0]
   1966c:	cmn	r6, #-2147483647	; 0x80000001
   19670:	str	r0, [sp, #24]
   19674:	ldr	r7, [pc, #368]	; 197ec <__assert_fail@plt+0x8630>
   19678:	str	r3, [sp, #32]
   1967c:	movne	r3, #0
   19680:	moveq	r3, #1
   19684:	orrs	r3, r3, r6, lsr #31
   19688:	ldr	r4, [r7]
   1968c:	beq	19694 <__assert_fail@plt+0x84d8>
   19690:	bl	11180 <abort@plt>
   19694:	ldr	r2, [r7, #4]
   19698:	cmp	r2, r6
   1969c:	bgt	1970c <__assert_fail@plt+0x8550>
   196a0:	add	sl, r7, #8
   196a4:	mov	r3, #8
   196a8:	cmp	r4, sl
   196ac:	add	r1, sp, #44	; 0x2c
   196b0:	str	r2, [sp, #44]	; 0x2c
   196b4:	sub	r2, r6, r2
   196b8:	movne	r0, r4
   196bc:	moveq	r0, #0
   196c0:	add	r2, r2, #1
   196c4:	str	r3, [sp]
   196c8:	mvn	r3, #-2147483648	; 0x80000000
   196cc:	bl	1a3ac <__assert_fail@plt+0x91f0>
   196d0:	cmp	r4, sl
   196d4:	mov	fp, r0
   196d8:	str	r0, [r7]
   196dc:	ldmeq	r4, {r0, r1}
   196e0:	mov	r4, fp
   196e4:	ldr	r2, [sp, #44]	; 0x2c
   196e8:	stmeq	fp, {r0, r1}
   196ec:	mov	r1, #0
   196f0:	ldr	r0, [r7, #4]
   196f4:	sub	r2, r2, r0
   196f8:	add	r0, fp, r0, lsl #3
   196fc:	lsl	r2, r2, #3
   19700:	bl	110b4 <memset@plt>
   19704:	ldr	r3, [sp, #44]	; 0x2c
   19708:	str	r3, [r7, #4]
   1970c:	ldr	r3, [r5, #4]
   19710:	add	sl, r4, r6, lsl #3
   19714:	mov	r2, r8
   19718:	ldr	fp, [r4, r6, lsl #3]
   1971c:	ldr	r7, [sl, #4]
   19720:	orr	r3, r3, #1
   19724:	str	r3, [sp, #28]
   19728:	add	r3, r5, #8
   1972c:	mov	r1, fp
   19730:	str	r3, [sp, #36]	; 0x24
   19734:	mov	r0, r7
   19738:	ldr	r3, [r5, #44]	; 0x2c
   1973c:	str	r3, [sp, #16]
   19740:	ldr	r3, [r5, #40]	; 0x28
   19744:	str	r3, [sp, #12]
   19748:	add	r3, r5, #8
   1974c:	str	r3, [sp, #8]
   19750:	ldr	r3, [sp, #28]
   19754:	str	r3, [sp, #4]
   19758:	ldr	r3, [r5]
   1975c:	str	r3, [sp]
   19760:	mov	r3, r9
   19764:	bl	1895c <__assert_fail@plt+0x77a0>
   19768:	cmp	fp, r0
   1976c:	bhi	197d4 <__assert_fail@plt+0x8618>
   19770:	ldr	r3, [pc, #120]	; 197f0 <__assert_fail@plt+0x8634>
   19774:	add	fp, r0, #1
   19778:	str	fp, [r4, r6, lsl #3]
   1977c:	cmp	r7, r3
   19780:	beq	1978c <__assert_fail@plt+0x85d0>
   19784:	mov	r0, r7
   19788:	bl	1866c <__assert_fail@plt+0x74b0>
   1978c:	mov	r0, fp
   19790:	bl	1a29c <__assert_fail@plt+0x90e0>
   19794:	ldr	r3, [r5, #44]	; 0x2c
   19798:	mov	r2, r8
   1979c:	mov	r1, fp
   197a0:	str	r0, [sl, #4]
   197a4:	mov	r7, r0
   197a8:	str	r3, [sp, #16]
   197ac:	ldr	r3, [r5, #40]	; 0x28
   197b0:	str	r3, [sp, #12]
   197b4:	add	r3, r5, #8
   197b8:	str	r3, [sp, #8]
   197bc:	ldr	r3, [sp, #28]
   197c0:	str	r3, [sp, #4]
   197c4:	ldr	r3, [r5]
   197c8:	str	r3, [sp]
   197cc:	mov	r3, r9
   197d0:	bl	1895c <__assert_fail@plt+0x77a0>
   197d4:	ldr	r3, [sp, #24]
   197d8:	mov	r0, r7
   197dc:	ldr	r2, [sp, #32]
   197e0:	str	r2, [r3]
   197e4:	add	sp, sp, #52	; 0x34
   197e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197ec:	andeq	sp, r2, r8, lsr #2
   197f0:			; <UNDEFINED> instruction: 0x0002d1b4
   197f4:	push	{r4, r5, r6, lr}
   197f8:	mov	r5, r0
   197fc:	bl	11090 <__errno_location@plt>
   19800:	mov	r4, r0
   19804:	cmp	r5, #0
   19808:	ldr	r0, [pc, #20]	; 19824 <__assert_fail@plt+0x8668>
   1980c:	mov	r1, #48	; 0x30
   19810:	movne	r0, r5
   19814:	ldr	r6, [r4]
   19818:	bl	1a49c <__assert_fail@plt+0x92e0>
   1981c:	str	r6, [r4]
   19820:	pop	{r4, r5, r6, pc}
   19824:			; <UNDEFINED> instruction: 0x0002d2b4
   19828:	ldr	r3, [pc, #12]	; 1983c <__assert_fail@plt+0x8680>
   1982c:	cmp	r0, #0
   19830:	moveq	r0, r3
   19834:	ldr	r0, [r0]
   19838:	bx	lr
   1983c:			; <UNDEFINED> instruction: 0x0002d2b4
   19840:	ldr	r3, [pc, #12]	; 19854 <__assert_fail@plt+0x8698>
   19844:	cmp	r0, #0
   19848:	moveq	r0, r3
   1984c:	str	r1, [r0]
   19850:	bx	lr
   19854:			; <UNDEFINED> instruction: 0x0002d2b4
   19858:	ldr	r3, [pc, #52]	; 19894 <__assert_fail@plt+0x86d8>
   1985c:	cmp	r0, #0
   19860:	push	{lr}		; (str lr, [sp, #-4]!)
   19864:	lsr	lr, r1, #5
   19868:	and	r1, r1, #31
   1986c:	moveq	r0, r3
   19870:	add	r3, r0, #8
   19874:	ldr	ip, [r3, lr, lsl #2]
   19878:	lsr	r0, ip, r1
   1987c:	eor	r2, r2, r0
   19880:	and	r0, r0, #1
   19884:	and	r2, r2, #1
   19888:	eor	r1, ip, r2, lsl r1
   1988c:	str	r1, [r3, lr, lsl #2]
   19890:	pop	{pc}		; (ldr pc, [sp], #4)
   19894:			; <UNDEFINED> instruction: 0x0002d2b4
   19898:	ldr	r3, [pc, #16]	; 198b0 <__assert_fail@plt+0x86f4>
   1989c:	cmp	r0, #0
   198a0:	movne	r3, r0
   198a4:	ldr	r0, [r3, #4]
   198a8:	str	r1, [r3, #4]
   198ac:	bx	lr
   198b0:			; <UNDEFINED> instruction: 0x0002d2b4
   198b4:	ldr	r3, [pc, #44]	; 198e8 <__assert_fail@plt+0x872c>
   198b8:	cmp	r0, #0
   198bc:	moveq	r0, r3
   198c0:	mov	r3, #10
   198c4:	cmp	r2, #0
   198c8:	cmpne	r1, #0
   198cc:	str	r3, [r0]
   198d0:	bne	198dc <__assert_fail@plt+0x8720>
   198d4:	push	{r4, lr}
   198d8:	bl	11180 <abort@plt>
   198dc:	str	r1, [r0, #40]	; 0x28
   198e0:	str	r2, [r0, #44]	; 0x2c
   198e4:	bx	lr
   198e8:			; <UNDEFINED> instruction: 0x0002d2b4
   198ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   198f0:	sub	sp, sp, #24
   198f4:	mov	sl, r3
   198f8:	mov	r7, r0
   198fc:	mov	r8, r1
   19900:	mov	r9, r2
   19904:	ldr	r4, [sp, #56]	; 0x38
   19908:	ldr	r3, [pc, #88]	; 19968 <__assert_fail@plt+0x87ac>
   1990c:	cmp	r4, #0
   19910:	moveq	r4, r3
   19914:	bl	11090 <__errno_location@plt>
   19918:	ldr	r3, [r4, #44]	; 0x2c
   1991c:	mov	r5, r0
   19920:	mov	r2, r9
   19924:	mov	r1, r8
   19928:	mov	r0, r7
   1992c:	ldr	r6, [r5]
   19930:	str	r3, [sp, #16]
   19934:	ldr	r3, [r4, #40]	; 0x28
   19938:	str	r3, [sp, #12]
   1993c:	add	r3, r4, #8
   19940:	str	r3, [sp, #8]
   19944:	ldr	r3, [r4, #4]
   19948:	str	r3, [sp, #4]
   1994c:	ldr	r3, [r4]
   19950:	str	r3, [sp]
   19954:	mov	r3, sl
   19958:	bl	1895c <__assert_fail@plt+0x77a0>
   1995c:	str	r6, [r5]
   19960:	add	sp, sp, #24
   19964:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19968:			; <UNDEFINED> instruction: 0x0002d2b4
   1996c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19970:	cmp	r3, #0
   19974:	sub	sp, sp, #44	; 0x2c
   19978:	mov	r6, r2
   1997c:	mov	sl, r1
   19980:	mov	r9, r0
   19984:	ldr	r4, [pc, #176]	; 19a3c <__assert_fail@plt+0x8880>
   19988:	movne	r4, r3
   1998c:	bl	11090 <__errno_location@plt>
   19990:	ldr	r3, [r0]
   19994:	mov	r1, #0
   19998:	mov	r2, r9
   1999c:	mov	r8, r0
   199a0:	mov	r0, r1
   199a4:	ldr	r5, [r4, #4]
   199a8:	add	fp, r4, #8
   199ac:	str	r3, [sp, #28]
   199b0:	ldr	r3, [r4, #44]	; 0x2c
   199b4:	cmp	r6, #0
   199b8:	orreq	r5, r5, #1
   199bc:	str	r3, [sp, #16]
   199c0:	ldr	r3, [r4, #40]	; 0x28
   199c4:	stmib	sp, {r5, fp}
   199c8:	str	r3, [sp, #12]
   199cc:	ldr	r3, [r4]
   199d0:	str	r3, [sp]
   199d4:	mov	r3, sl
   199d8:	bl	1895c <__assert_fail@plt+0x77a0>
   199dc:	add	r1, r0, #1
   199e0:	mov	r7, r0
   199e4:	mov	r0, r1
   199e8:	str	r1, [sp, #36]	; 0x24
   199ec:	bl	1a29c <__assert_fail@plt+0x90e0>
   199f0:	ldr	r3, [r4, #44]	; 0x2c
   199f4:	mov	r2, r9
   199f8:	ldr	r1, [sp, #36]	; 0x24
   199fc:	str	r3, [sp, #16]
   19a00:	ldr	r3, [r4, #40]	; 0x28
   19a04:	stmib	sp, {r5, fp}
   19a08:	str	r0, [sp, #32]
   19a0c:	str	r3, [sp, #12]
   19a10:	ldr	r3, [r4]
   19a14:	str	r3, [sp]
   19a18:	mov	r3, sl
   19a1c:	bl	1895c <__assert_fail@plt+0x77a0>
   19a20:	ldr	r3, [sp, #28]
   19a24:	cmp	r6, #0
   19a28:	ldr	r0, [sp, #32]
   19a2c:	str	r3, [r8]
   19a30:	strne	r7, [r6]
   19a34:	add	sp, sp, #44	; 0x2c
   19a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a3c:			; <UNDEFINED> instruction: 0x0002d2b4
   19a40:	mov	r3, r2
   19a44:	mov	r2, #0
   19a48:	b	1996c <__assert_fail@plt+0x87b0>
   19a4c:	push	{r4, r5, r6, r7, r8, lr}
   19a50:	mov	r6, #1
   19a54:	ldr	r4, [pc, #100]	; 19ac0 <__assert_fail@plt+0x8904>
   19a58:	ldr	r5, [r4]
   19a5c:	add	r7, r5, #4
   19a60:	ldr	r3, [r4, #4]
   19a64:	cmp	r3, r6
   19a68:	bgt	19ab0 <__assert_fail@plt+0x88f4>
   19a6c:	ldr	r6, [pc, #80]	; 19ac4 <__assert_fail@plt+0x8908>
   19a70:	ldr	r0, [r5, #4]
   19a74:	cmp	r0, r6
   19a78:	beq	19a8c <__assert_fail@plt+0x88d0>
   19a7c:	bl	1866c <__assert_fail@plt+0x74b0>
   19a80:	mov	r3, #256	; 0x100
   19a84:	str	r3, [r4, #8]
   19a88:	str	r6, [r4, #12]
   19a8c:	ldr	r6, [pc, #52]	; 19ac8 <__assert_fail@plt+0x890c>
   19a90:	cmp	r5, r6
   19a94:	beq	19aa4 <__assert_fail@plt+0x88e8>
   19a98:	mov	r0, r5
   19a9c:	bl	1866c <__assert_fail@plt+0x74b0>
   19aa0:	str	r6, [r4]
   19aa4:	mov	r3, #1
   19aa8:	str	r3, [r4, #4]
   19aac:	pop	{r4, r5, r6, r7, r8, pc}
   19ab0:	ldr	r0, [r7, r6, lsl #3]
   19ab4:	add	r6, r6, #1
   19ab8:	bl	1866c <__assert_fail@plt+0x74b0>
   19abc:	b	19a60 <__assert_fail@plt+0x88a4>
   19ac0:	andeq	sp, r2, r8, lsr #2
   19ac4:			; <UNDEFINED> instruction: 0x0002d1b4
   19ac8:	andeq	sp, r2, r0, lsr r1
   19acc:	ldr	r3, [pc, #4]	; 19ad8 <__assert_fail@plt+0x891c>
   19ad0:	mvn	r2, #0
   19ad4:	b	1964c <__assert_fail@plt+0x8490>
   19ad8:			; <UNDEFINED> instruction: 0x0002d2b4
   19adc:	ldr	r3, [pc]	; 19ae4 <__assert_fail@plt+0x8928>
   19ae0:	b	1964c <__assert_fail@plt+0x8490>
   19ae4:			; <UNDEFINED> instruction: 0x0002d2b4
   19ae8:	mov	r1, r0
   19aec:	mov	r0, #0
   19af0:	b	19acc <__assert_fail@plt+0x8910>
   19af4:	mov	r2, r1
   19af8:	mov	r1, r0
   19afc:	mov	r0, #0
   19b00:	b	19adc <__assert_fail@plt+0x8920>
   19b04:	push	{r4, r5, lr}
   19b08:	sub	sp, sp, #52	; 0x34
   19b0c:	mov	r5, r2
   19b10:	mov	r4, r0
   19b14:	mov	r0, sp
   19b18:	bl	18800 <__assert_fail@plt+0x7644>
   19b1c:	mov	r3, sp
   19b20:	mvn	r2, #0
   19b24:	mov	r1, r5
   19b28:	mov	r0, r4
   19b2c:	bl	1964c <__assert_fail@plt+0x8490>
   19b30:	add	sp, sp, #52	; 0x34
   19b34:	pop	{r4, r5, pc}
   19b38:	push	{r4, r5, r6, lr}
   19b3c:	sub	sp, sp, #48	; 0x30
   19b40:	mov	r5, r2
   19b44:	mov	r6, r3
   19b48:	mov	r4, r0
   19b4c:	mov	r0, sp
   19b50:	bl	18800 <__assert_fail@plt+0x7644>
   19b54:	mov	r3, sp
   19b58:	mov	r2, r6
   19b5c:	mov	r1, r5
   19b60:	mov	r0, r4
   19b64:	bl	1964c <__assert_fail@plt+0x8490>
   19b68:	add	sp, sp, #48	; 0x30
   19b6c:	pop	{r4, r5, r6, pc}
   19b70:	mov	r2, r1
   19b74:	mov	r1, r0
   19b78:	mov	r0, #0
   19b7c:	b	19b04 <__assert_fail@plt+0x8948>
   19b80:	mov	r3, r2
   19b84:	mov	r2, r1
   19b88:	mov	r1, r0
   19b8c:	mov	r0, #0
   19b90:	b	19b38 <__assert_fail@plt+0x897c>
   19b94:	push	{r4, r5, r6, lr}
   19b98:	mov	r4, r0
   19b9c:	mov	r5, r1
   19ba0:	mov	r6, r2
   19ba4:	sub	sp, sp, #48	; 0x30
   19ba8:	mov	ip, sp
   19bac:	ldr	lr, [pc, #64]	; 19bf4 <__assert_fail@plt+0x8a38>
   19bb0:	ldm	lr!, {r0, r1, r2, r3}
   19bb4:	stmia	ip!, {r0, r1, r2, r3}
   19bb8:	ldm	lr!, {r0, r1, r2, r3}
   19bbc:	stmia	ip!, {r0, r1, r2, r3}
   19bc0:	ldm	lr, {r0, r1, r2, r3}
   19bc4:	stm	ip, {r0, r1, r2, r3}
   19bc8:	mov	r1, r6
   19bcc:	mov	r2, #1
   19bd0:	mov	r0, sp
   19bd4:	bl	19858 <__assert_fail@plt+0x869c>
   19bd8:	mov	r3, sp
   19bdc:	mov	r2, r5
   19be0:	mov	r1, r4
   19be4:	mov	r0, #0
   19be8:	bl	1964c <__assert_fail@plt+0x8490>
   19bec:	add	sp, sp, #48	; 0x30
   19bf0:	pop	{r4, r5, r6, pc}
   19bf4:			; <UNDEFINED> instruction: 0x0002d2b4
   19bf8:	mov	r2, r1
   19bfc:	mvn	r1, #0
   19c00:	b	19b94 <__assert_fail@plt+0x89d8>
   19c04:	mov	r1, #58	; 0x3a
   19c08:	b	19bf8 <__assert_fail@plt+0x8a3c>
   19c0c:	mov	r2, #58	; 0x3a
   19c10:	b	19b94 <__assert_fail@plt+0x89d8>
   19c14:	push	{r4, r5, lr}
   19c18:	sub	sp, sp, #100	; 0x64
   19c1c:	mov	r4, r0
   19c20:	mov	r0, sp
   19c24:	mov	r5, r2
   19c28:	bl	18800 <__assert_fail@plt+0x7644>
   19c2c:	mov	ip, sp
   19c30:	add	lr, sp, #48	; 0x30
   19c34:	ldm	ip!, {r0, r1, r2, r3}
   19c38:	stmia	lr!, {r0, r1, r2, r3}
   19c3c:	ldm	ip!, {r0, r1, r2, r3}
   19c40:	stmia	lr!, {r0, r1, r2, r3}
   19c44:	ldm	ip, {r0, r1, r2, r3}
   19c48:	stm	lr, {r0, r1, r2, r3}
   19c4c:	mov	r2, #1
   19c50:	mov	r1, #58	; 0x3a
   19c54:	add	r0, sp, #48	; 0x30
   19c58:	bl	19858 <__assert_fail@plt+0x869c>
   19c5c:	add	r3, sp, #48	; 0x30
   19c60:	mvn	r2, #0
   19c64:	mov	r1, r5
   19c68:	mov	r0, r4
   19c6c:	bl	1964c <__assert_fail@plt+0x8490>
   19c70:	add	sp, sp, #100	; 0x64
   19c74:	pop	{r4, r5, pc}
   19c78:	push	{r4, r5, r6, r7, lr}
   19c7c:	mov	r4, r0
   19c80:	mov	r6, r1
   19c84:	mov	r7, r2
   19c88:	mov	r5, r3
   19c8c:	sub	sp, sp, #52	; 0x34
   19c90:	ldr	lr, [pc, #68]	; 19cdc <__assert_fail@plt+0x8b20>
   19c94:	mov	ip, sp
   19c98:	ldm	lr!, {r0, r1, r2, r3}
   19c9c:	stmia	ip!, {r0, r1, r2, r3}
   19ca0:	ldm	lr!, {r0, r1, r2, r3}
   19ca4:	stmia	ip!, {r0, r1, r2, r3}
   19ca8:	ldm	lr, {r0, r1, r2, r3}
   19cac:	stm	ip, {r0, r1, r2, r3}
   19cb0:	mov	r2, r7
   19cb4:	mov	r1, r6
   19cb8:	mov	r0, sp
   19cbc:	bl	198b4 <__assert_fail@plt+0x86f8>
   19cc0:	ldr	r2, [sp, #72]	; 0x48
   19cc4:	mov	r3, sp
   19cc8:	mov	r1, r5
   19ccc:	mov	r0, r4
   19cd0:	bl	1964c <__assert_fail@plt+0x8490>
   19cd4:	add	sp, sp, #52	; 0x34
   19cd8:	pop	{r4, r5, r6, r7, pc}
   19cdc:			; <UNDEFINED> instruction: 0x0002d2b4
   19ce0:	mvn	ip, #0
   19ce4:	push	{r0, r1, r2, lr}
   19ce8:	str	ip, [sp]
   19cec:	bl	19c78 <__assert_fail@plt+0x8abc>
   19cf0:	add	sp, sp, #12
   19cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   19cf8:	mov	r3, r2
   19cfc:	mov	r2, r1
   19d00:	mov	r1, r0
   19d04:	mov	r0, #0
   19d08:	b	19ce0 <__assert_fail@plt+0x8b24>
   19d0c:	push	{r0, r1, r2, lr}
   19d10:	str	r3, [sp]
   19d14:	mov	r3, r2
   19d18:	mov	r2, r1
   19d1c:	mov	r1, r0
   19d20:	mov	r0, #0
   19d24:	bl	19c78 <__assert_fail@plt+0x8abc>
   19d28:	add	sp, sp, #12
   19d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   19d30:	ldr	r3, [pc]	; 19d38 <__assert_fail@plt+0x8b7c>
   19d34:	b	1964c <__assert_fail@plt+0x8490>
   19d38:	andeq	sp, r2, r8, lsr r1
   19d3c:	mov	r2, r1
   19d40:	mov	r1, r0
   19d44:	mov	r0, #0
   19d48:	b	19d30 <__assert_fail@plt+0x8b74>
   19d4c:	mvn	r2, #0
   19d50:	b	19d30 <__assert_fail@plt+0x8b74>
   19d54:	mov	r1, r0
   19d58:	mov	r0, #0
   19d5c:	b	19d4c <__assert_fail@plt+0x8b90>
   19d60:	mov	r2, #3
   19d64:	mov	r1, #0
   19d68:	b	1abc4 <__assert_fail@plt+0x9a08>
   19d6c:	push	{r4, r5, r6, lr}
   19d70:	cmp	r1, #0
   19d74:	sub	sp, sp, #32
   19d78:	mov	r5, r0
   19d7c:	ldr	r4, [sp, #48]	; 0x30
   19d80:	ldr	r6, [sp, #52]	; 0x34
   19d84:	beq	19e38 <__assert_fail@plt+0x8c7c>
   19d88:	strd	r2, [sp]
   19d8c:	mov	r3, r1
   19d90:	mov	r1, #1
   19d94:	ldr	r2, [pc, #856]	; 1a0f4 <__assert_fail@plt+0x8f38>
   19d98:	bl	110e4 <__fprintf_chk@plt>
   19d9c:	mov	r2, #5
   19da0:	ldr	r1, [pc, #848]	; 1a0f8 <__assert_fail@plt+0x8f3c>
   19da4:	mov	r0, #0
   19da8:	bl	10f7c <dcgettext@plt>
   19dac:	movw	r3, #2022	; 0x7e6
   19db0:	ldr	r2, [pc, #836]	; 1a0fc <__assert_fail@plt+0x8f40>
   19db4:	mov	r1, #1
   19db8:	str	r3, [sp]
   19dbc:	mov	r3, r0
   19dc0:	mov	r0, r5
   19dc4:	bl	110e4 <__fprintf_chk@plt>
   19dc8:	mov	r1, r5
   19dcc:	mov	r0, #10
   19dd0:	bl	10f70 <fputc_unlocked@plt>
   19dd4:	mov	r2, #5
   19dd8:	ldr	r1, [pc, #800]	; 1a100 <__assert_fail@plt+0x8f44>
   19ddc:	mov	r0, #0
   19de0:	bl	10f7c <dcgettext@plt>
   19de4:	mov	r2, r0
   19de8:	mov	r1, #1
   19dec:	ldr	r3, [pc, #784]	; 1a104 <__assert_fail@plt+0x8f48>
   19df0:	mov	r0, r5
   19df4:	bl	110e4 <__fprintf_chk@plt>
   19df8:	mov	r1, r5
   19dfc:	mov	r0, #10
   19e00:	bl	10f70 <fputc_unlocked@plt>
   19e04:	cmp	r6, #9
   19e08:	ldrls	pc, [pc, r6, lsl #2]
   19e0c:	b	1a0e8 <__assert_fail@plt+0x8f2c>
   19e10:	andeq	r9, r1, r8, lsr #30
   19e14:	andeq	r9, r1, r0, asr lr
   19e18:	andeq	r9, r1, ip, ror lr
   19e1c:			; <UNDEFINED> instruction: 0x00019eb0
   19e20:	andeq	r9, r1, ip, ror #29
   19e24:	andeq	r9, r1, r0, lsr pc
   19e28:	andeq	r9, r1, r8, ror pc
   19e2c:	andeq	r9, r1, r8, asr #31
   19e30:	andeq	sl, r1, r0, lsr #32
   19e34:	andeq	sl, r1, r0, lsl #1
   19e38:	mov	r1, #1
   19e3c:	str	r3, [sp]
   19e40:	mov	r3, r2
   19e44:	ldr	r2, [pc, #700]	; 1a108 <__assert_fail@plt+0x8f4c>
   19e48:	bl	110e4 <__fprintf_chk@plt>
   19e4c:	b	19d9c <__assert_fail@plt+0x8be0>
   19e50:	mov	r2, #5
   19e54:	ldr	r1, [pc, #688]	; 1a10c <__assert_fail@plt+0x8f50>
   19e58:	mov	r0, #0
   19e5c:	bl	10f7c <dcgettext@plt>
   19e60:	ldr	r3, [r4]
   19e64:	mov	r2, r0
   19e68:	mov	r1, #1
   19e6c:	mov	r0, r5
   19e70:	add	sp, sp, #32
   19e74:	pop	{r4, r5, r6, lr}
   19e78:	b	110e4 <__fprintf_chk@plt>
   19e7c:	mov	r2, #5
   19e80:	ldr	r1, [pc, #648]	; 1a110 <__assert_fail@plt+0x8f54>
   19e84:	mov	r0, #0
   19e88:	bl	10f7c <dcgettext@plt>
   19e8c:	ldr	r3, [r4, #4]
   19e90:	mov	r2, r0
   19e94:	mov	r1, #1
   19e98:	mov	r0, r5
   19e9c:	str	r3, [sp, #48]	; 0x30
   19ea0:	ldr	r3, [r4]
   19ea4:	add	sp, sp, #32
   19ea8:	pop	{r4, r5, r6, lr}
   19eac:	b	110e4 <__fprintf_chk@plt>
   19eb0:	mov	r2, #5
   19eb4:	ldr	r1, [pc, #600]	; 1a114 <__assert_fail@plt+0x8f58>
   19eb8:	mov	r0, #0
   19ebc:	bl	10f7c <dcgettext@plt>
   19ec0:	ldr	r3, [r4, #8]
   19ec4:	mov	r2, r0
   19ec8:	mov	r1, #1
   19ecc:	mov	r0, r5
   19ed0:	str	r3, [sp, #52]	; 0x34
   19ed4:	ldr	r3, [r4, #4]
   19ed8:	str	r3, [sp, #48]	; 0x30
   19edc:	ldr	r3, [r4]
   19ee0:	add	sp, sp, #32
   19ee4:	pop	{r4, r5, r6, lr}
   19ee8:	b	110e4 <__fprintf_chk@plt>
   19eec:	mov	r2, #5
   19ef0:	ldr	r1, [pc, #544]	; 1a118 <__assert_fail@plt+0x8f5c>
   19ef4:	mov	r0, #0
   19ef8:	bl	10f7c <dcgettext@plt>
   19efc:	ldr	r3, [r4, #12]
   19f00:	mov	r2, r0
   19f04:	mov	r1, #1
   19f08:	mov	r0, r5
   19f0c:	str	r3, [sp, #8]
   19f10:	ldr	r3, [r4, #8]
   19f14:	str	r3, [sp, #4]
   19f18:	ldr	r3, [r4, #4]
   19f1c:	str	r3, [sp]
   19f20:	ldr	r3, [r4]
   19f24:	bl	110e4 <__fprintf_chk@plt>
   19f28:	add	sp, sp, #32
   19f2c:	pop	{r4, r5, r6, pc}
   19f30:	mov	r2, #5
   19f34:	ldr	r1, [pc, #480]	; 1a11c <__assert_fail@plt+0x8f60>
   19f38:	mov	r0, #0
   19f3c:	bl	10f7c <dcgettext@plt>
   19f40:	ldr	r3, [r4, #16]
   19f44:	mov	r2, r0
   19f48:	mov	r1, #1
   19f4c:	mov	r0, r5
   19f50:	str	r3, [sp, #12]
   19f54:	ldr	r3, [r4, #12]
   19f58:	str	r3, [sp, #8]
   19f5c:	ldr	r3, [r4, #8]
   19f60:	str	r3, [sp, #4]
   19f64:	ldr	r3, [r4, #4]
   19f68:	str	r3, [sp]
   19f6c:	ldr	r3, [r4]
   19f70:	bl	110e4 <__fprintf_chk@plt>
   19f74:	b	19f28 <__assert_fail@plt+0x8d6c>
   19f78:	mov	r2, #5
   19f7c:	ldr	r1, [pc, #412]	; 1a120 <__assert_fail@plt+0x8f64>
   19f80:	mov	r0, #0
   19f84:	bl	10f7c <dcgettext@plt>
   19f88:	ldr	r3, [r4, #20]
   19f8c:	mov	r2, r0
   19f90:	mov	r1, #1
   19f94:	mov	r0, r5
   19f98:	str	r3, [sp, #16]
   19f9c:	ldr	r3, [r4, #16]
   19fa0:	str	r3, [sp, #12]
   19fa4:	ldr	r3, [r4, #12]
   19fa8:	str	r3, [sp, #8]
   19fac:	ldr	r3, [r4, #8]
   19fb0:	str	r3, [sp, #4]
   19fb4:	ldr	r3, [r4, #4]
   19fb8:	str	r3, [sp]
   19fbc:	ldr	r3, [r4]
   19fc0:	bl	110e4 <__fprintf_chk@plt>
   19fc4:	b	19f28 <__assert_fail@plt+0x8d6c>
   19fc8:	mov	r2, #5
   19fcc:	ldr	r1, [pc, #336]	; 1a124 <__assert_fail@plt+0x8f68>
   19fd0:	mov	r0, #0
   19fd4:	bl	10f7c <dcgettext@plt>
   19fd8:	ldr	r3, [r4, #24]
   19fdc:	mov	r2, r0
   19fe0:	mov	r1, #1
   19fe4:	mov	r0, r5
   19fe8:	str	r3, [sp, #20]
   19fec:	ldr	r3, [r4, #20]
   19ff0:	str	r3, [sp, #16]
   19ff4:	ldr	r3, [r4, #16]
   19ff8:	str	r3, [sp, #12]
   19ffc:	ldr	r3, [r4, #12]
   1a000:	str	r3, [sp, #8]
   1a004:	ldr	r3, [r4, #8]
   1a008:	str	r3, [sp, #4]
   1a00c:	ldr	r3, [r4, #4]
   1a010:	str	r3, [sp]
   1a014:	ldr	r3, [r4]
   1a018:	bl	110e4 <__fprintf_chk@plt>
   1a01c:	b	19f28 <__assert_fail@plt+0x8d6c>
   1a020:	mov	r2, #5
   1a024:	ldr	r1, [pc, #252]	; 1a128 <__assert_fail@plt+0x8f6c>
   1a028:	mov	r0, #0
   1a02c:	bl	10f7c <dcgettext@plt>
   1a030:	ldr	r3, [r4, #28]
   1a034:	mov	r2, r0
   1a038:	mov	r1, #1
   1a03c:	mov	r0, r5
   1a040:	str	r3, [sp, #24]
   1a044:	ldr	r3, [r4, #24]
   1a048:	str	r3, [sp, #20]
   1a04c:	ldr	r3, [r4, #20]
   1a050:	str	r3, [sp, #16]
   1a054:	ldr	r3, [r4, #16]
   1a058:	str	r3, [sp, #12]
   1a05c:	ldr	r3, [r4, #12]
   1a060:	str	r3, [sp, #8]
   1a064:	ldr	r3, [r4, #8]
   1a068:	str	r3, [sp, #4]
   1a06c:	ldr	r3, [r4, #4]
   1a070:	str	r3, [sp]
   1a074:	ldr	r3, [r4]
   1a078:	bl	110e4 <__fprintf_chk@plt>
   1a07c:	b	19f28 <__assert_fail@plt+0x8d6c>
   1a080:	ldr	r1, [pc, #164]	; 1a12c <__assert_fail@plt+0x8f70>
   1a084:	mov	r2, #5
   1a088:	mov	r0, #0
   1a08c:	bl	10f7c <dcgettext@plt>
   1a090:	ldr	r3, [r4, #32]
   1a094:	mov	r2, r0
   1a098:	mov	r1, #1
   1a09c:	mov	r0, r5
   1a0a0:	str	r3, [sp, #28]
   1a0a4:	ldr	r3, [r4, #28]
   1a0a8:	str	r3, [sp, #24]
   1a0ac:	ldr	r3, [r4, #24]
   1a0b0:	str	r3, [sp, #20]
   1a0b4:	ldr	r3, [r4, #20]
   1a0b8:	str	r3, [sp, #16]
   1a0bc:	ldr	r3, [r4, #16]
   1a0c0:	str	r3, [sp, #12]
   1a0c4:	ldr	r3, [r4, #12]
   1a0c8:	str	r3, [sp, #8]
   1a0cc:	ldr	r3, [r4, #8]
   1a0d0:	str	r3, [sp, #4]
   1a0d4:	ldr	r3, [r4, #4]
   1a0d8:	str	r3, [sp]
   1a0dc:	ldr	r3, [r4]
   1a0e0:	bl	110e4 <__fprintf_chk@plt>
   1a0e4:	b	19f28 <__assert_fail@plt+0x8d6c>
   1a0e8:	mov	r2, #5
   1a0ec:	ldr	r1, [pc, #60]	; 1a130 <__assert_fail@plt+0x8f74>
   1a0f0:	b	1a088 <__assert_fail@plt+0x8ecc>
   1a0f4:	muleq	r1, sp, r0
   1a0f8:	strheq	ip, [r1], -r0
   1a0fc:	andeq	ip, r1, lr, ror r3
   1a100:	strheq	ip, [r1], -r4
   1a104:	andeq	ip, r1, pc, asr r1
   1a108:	andeq	ip, r1, r9, lsr #1
   1a10c:	andeq	ip, r1, r1, lsl #3
   1a110:	muleq	r1, r1, r1
   1a114:	andeq	ip, r1, r8, lsr #3
   1a118:	andeq	ip, r1, r4, asr #3
   1a11c:	andeq	ip, r1, r4, ror #3
   1a120:	andeq	ip, r1, r8, lsl #4
   1a124:	andeq	ip, r1, r0, lsr r2
   1a128:	andeq	ip, r1, ip, asr r2
   1a12c:	andeq	ip, r1, ip, lsl #5
   1a130:	andeq	ip, r1, r0, asr #5
   1a134:	push	{r0, r1, r4, lr}
   1a138:	mov	ip, #0
   1a13c:	ldr	lr, [sp, #16]
   1a140:	ldr	r4, [lr, ip, lsl #2]
   1a144:	cmp	r4, #0
   1a148:	bne	1a160 <__assert_fail@plt+0x8fa4>
   1a14c:	str	lr, [sp]
   1a150:	str	ip, [sp, #4]
   1a154:	bl	19d6c <__assert_fail@plt+0x8bb0>
   1a158:	add	sp, sp, #8
   1a15c:	pop	{r4, pc}
   1a160:	add	ip, ip, #1
   1a164:	b	1a140 <__assert_fail@plt+0x8f84>
   1a168:	push	{r4, r5, r6, lr}
   1a16c:	sub	sp, sp, #48	; 0x30
   1a170:	mov	ip, #0
   1a174:	add	lr, sp, #8
   1a178:	mov	r5, lr
   1a17c:	ldr	r6, [sp, #64]	; 0x40
   1a180:	ldr	r4, [r6, ip, lsl #2]
   1a184:	cmp	r4, #0
   1a188:	str	r4, [lr], #4
   1a18c:	beq	1a19c <__assert_fail@plt+0x8fe0>
   1a190:	add	ip, ip, #1
   1a194:	cmp	ip, #10
   1a198:	bne	1a180 <__assert_fail@plt+0x8fc4>
   1a19c:	stm	sp, {r5, ip}
   1a1a0:	bl	19d6c <__assert_fail@plt+0x8bb0>
   1a1a4:	add	sp, sp, #48	; 0x30
   1a1a8:	pop	{r4, r5, r6, pc}
   1a1ac:	push	{r3}		; (str r3, [sp, #-4]!)
   1a1b0:	push	{r0, r1, r2, r3, lr}
   1a1b4:	add	r3, sp, #24
   1a1b8:	str	r3, [sp]
   1a1bc:	str	r3, [sp, #12]
   1a1c0:	ldr	r3, [sp, #20]
   1a1c4:	bl	1a168 <__assert_fail@plt+0x8fac>
   1a1c8:	add	sp, sp, #16
   1a1cc:	pop	{lr}		; (ldr lr, [sp], #4)
   1a1d0:	add	sp, sp, #4
   1a1d4:	bx	lr
   1a1d8:	ldr	r3, [pc, #116]	; 1a254 <__assert_fail@plt+0x9098>
   1a1dc:	mov	r0, #10
   1a1e0:	push	{r4, lr}
   1a1e4:	ldr	r1, [r3]
   1a1e8:	bl	10f70 <fputc_unlocked@plt>
   1a1ec:	mov	r2, #5
   1a1f0:	ldr	r1, [pc, #96]	; 1a258 <__assert_fail@plt+0x909c>
   1a1f4:	mov	r0, #0
   1a1f8:	bl	10f7c <dcgettext@plt>
   1a1fc:	mov	r1, r0
   1a200:	ldr	r2, [pc, #84]	; 1a25c <__assert_fail@plt+0x90a0>
   1a204:	mov	r0, #1
   1a208:	bl	110c0 <__printf_chk@plt>
   1a20c:	mov	r2, #5
   1a210:	ldr	r1, [pc, #72]	; 1a260 <__assert_fail@plt+0x90a4>
   1a214:	mov	r0, #0
   1a218:	bl	10f7c <dcgettext@plt>
   1a21c:	mov	r1, r0
   1a220:	ldr	r3, [pc, #60]	; 1a264 <__assert_fail@plt+0x90a8>
   1a224:	mov	r0, #1
   1a228:	ldr	r2, [pc, #56]	; 1a268 <__assert_fail@plt+0x90ac>
   1a22c:	bl	110c0 <__printf_chk@plt>
   1a230:	mov	r2, #5
   1a234:	ldr	r1, [pc, #48]	; 1a26c <__assert_fail@plt+0x90b0>
   1a238:	mov	r0, #0
   1a23c:	bl	10f7c <dcgettext@plt>
   1a240:	mov	r1, r0
   1a244:	ldr	r2, [pc, #36]	; 1a270 <__assert_fail@plt+0x90b4>
   1a248:	mov	r0, #1
   1a24c:	pop	{r4, lr}
   1a250:	b	110c0 <__printf_chk@plt>
   1a254:	andeq	sp, r2, r4, lsl #3
   1a258:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1a25c:	andeq	ip, r1, r0, lsl r3
   1a260:	andeq	ip, r1, r6, lsr #6
   1a264:	andeq	fp, r1, r2, lsl #18
   1a268:	andeq	fp, r1, sl, lsr #18
   1a26c:	andeq	ip, r1, sl, lsr r3
   1a270:	andeq	ip, r1, r1, ror #6
   1a274:	push	{r4, lr}
   1a278:	bl	1aae4 <__assert_fail@plt+0x9928>
   1a27c:	cmp	r0, #0
   1a280:	popne	{r4, pc}
   1a284:	bl	1a52c <__assert_fail@plt+0x9370>
   1a288:	push	{r4, lr}
   1a28c:	bl	1aae4 <__assert_fail@plt+0x9928>
   1a290:	cmp	r0, #0
   1a294:	popne	{r4, pc}
   1a298:	bl	1a52c <__assert_fail@plt+0x9370>
   1a29c:	b	1a274 <__assert_fail@plt+0x90b8>
   1a2a0:	push	{r4, r5, r6, lr}
   1a2a4:	mov	r5, r0
   1a2a8:	mov	r4, r1
   1a2ac:	bl	1ab10 <__assert_fail@plt+0x9954>
   1a2b0:	cmp	r0, #0
   1a2b4:	popne	{r4, r5, r6, pc}
   1a2b8:	adds	r4, r4, #0
   1a2bc:	movne	r4, #1
   1a2c0:	cmp	r5, #0
   1a2c4:	moveq	r4, #1
   1a2c8:	cmp	r4, #0
   1a2cc:	popeq	{r4, r5, r6, pc}
   1a2d0:	bl	1a52c <__assert_fail@plt+0x9370>
   1a2d4:	push	{r4, lr}
   1a2d8:	bl	1ad78 <__assert_fail@plt+0x9bbc>
   1a2dc:	cmp	r0, #0
   1a2e0:	popne	{r4, pc}
   1a2e4:	bl	1a52c <__assert_fail@plt+0x9370>
   1a2e8:	push	{r4, r5, r6, lr}
   1a2ec:	mov	r6, r0
   1a2f0:	mov	r5, r1
   1a2f4:	mov	r4, r2
   1a2f8:	bl	1ae20 <__assert_fail@plt+0x9c64>
   1a2fc:	cmp	r0, #0
   1a300:	popne	{r4, r5, r6, pc}
   1a304:	cmp	r6, #0
   1a308:	beq	1a318 <__assert_fail@plt+0x915c>
   1a30c:	cmp	r5, #0
   1a310:	cmpne	r4, #0
   1a314:	popeq	{r4, r5, r6, pc}
   1a318:	bl	1a52c <__assert_fail@plt+0x9370>
   1a31c:	b	1a2e8 <__assert_fail@plt+0x912c>
   1a320:	push	{r4, lr}
   1a324:	bl	1ad88 <__assert_fail@plt+0x9bcc>
   1a328:	cmp	r0, #0
   1a32c:	popne	{r4, pc}
   1a330:	bl	1a52c <__assert_fail@plt+0x9370>
   1a334:	mov	r2, r1
   1a338:	mov	r1, r0
   1a33c:	mov	r0, #0
   1a340:	b	1a2e8 <__assert_fail@plt+0x912c>
   1a344:	mov	r2, r1
   1a348:	mov	r1, r0
   1a34c:	mov	r0, #0
   1a350:	b	1a320 <__assert_fail@plt+0x9164>
   1a354:	cmp	r0, #0
   1a358:	push	{r4, r5, r6, lr}
   1a35c:	mov	r5, r1
   1a360:	ldr	r4, [r1]
   1a364:	bne	1a390 <__assert_fail@plt+0x91d4>
   1a368:	cmp	r4, #0
   1a36c:	bne	1a380 <__assert_fail@plt+0x91c4>
   1a370:	mov	r4, #64	; 0x40
   1a374:	udiv	r4, r4, r2
   1a378:	cmp	r2, #64	; 0x40
   1a37c:	addhi	r4, r4, #1
   1a380:	mov	r1, r4
   1a384:	bl	1a2e8 <__assert_fail@plt+0x912c>
   1a388:	str	r4, [r5]
   1a38c:	pop	{r4, r5, r6, pc}
   1a390:	lsr	r3, r4, #1
   1a394:	add	r3, r3, #1
   1a398:	adds	r4, r4, r3
   1a39c:	bcc	1a380 <__assert_fail@plt+0x91c4>
   1a3a0:	bl	1a52c <__assert_fail@plt+0x9370>
   1a3a4:	mov	r2, #1
   1a3a8:	b	1a354 <__assert_fail@plt+0x9198>
   1a3ac:	ldr	ip, [r1]
   1a3b0:	push	{r4, r5, r6, r7, r8, lr}
   1a3b4:	mov	r5, r1
   1a3b8:	mvn	r8, r3
   1a3bc:	lsr	r8, r8, #31
   1a3c0:	ldr	lr, [sp, #24]
   1a3c4:	asr	r1, ip, #1
   1a3c8:	adds	r4, ip, r1
   1a3cc:	mvnvs	r4, #-2147483648	; 0x80000000
   1a3d0:	cmp	r3, r4
   1a3d4:	movge	r1, #0
   1a3d8:	andlt	r1, r8, #1
   1a3dc:	cmp	r1, #0
   1a3e0:	movne	r4, r3
   1a3e4:	smull	r6, r7, r4, lr
   1a3e8:	cmp	r7, r6, asr #31
   1a3ec:	bne	1a404 <__assert_fail@plt+0x9248>
   1a3f0:	cmp	r6, #63	; 0x3f
   1a3f4:	mov	r1, r6
   1a3f8:	bgt	1a414 <__assert_fail@plt+0x9258>
   1a3fc:	mov	r1, #64	; 0x40
   1a400:	b	1a408 <__assert_fail@plt+0x924c>
   1a404:	mvn	r1, #-2147483648	; 0x80000000
   1a408:	sdiv	r4, r1, lr
   1a40c:	mls	r6, lr, r4, r1
   1a410:	sub	r1, r1, r6
   1a414:	cmp	r0, #0
   1a418:	sub	r6, r4, ip
   1a41c:	streq	r0, [r5]
   1a420:	cmp	r6, r2
   1a424:	bge	1a458 <__assert_fail@plt+0x929c>
   1a428:	adds	r4, ip, r2
   1a42c:	bvs	1a454 <__assert_fail@plt+0x9298>
   1a430:	cmp	r4, r3
   1a434:	movle	r3, #0
   1a438:	andgt	r3, r8, #1
   1a43c:	cmp	r3, #0
   1a440:	bne	1a454 <__assert_fail@plt+0x9298>
   1a444:	smull	r2, r3, r4, lr
   1a448:	cmp	r3, r2, asr #31
   1a44c:	mov	r1, r2
   1a450:	beq	1a458 <__assert_fail@plt+0x929c>
   1a454:	bl	1a52c <__assert_fail@plt+0x9370>
   1a458:	bl	1a2a0 <__assert_fail@plt+0x90e4>
   1a45c:	str	r4, [r5]
   1a460:	pop	{r4, r5, r6, r7, r8, pc}
   1a464:	push	{r4, lr}
   1a468:	bl	1aa90 <__assert_fail@plt+0x98d4>
   1a46c:	cmp	r0, #0
   1a470:	popne	{r4, pc}
   1a474:	bl	1a52c <__assert_fail@plt+0x9370>
   1a478:	mov	r1, #1
   1a47c:	b	1a464 <__assert_fail@plt+0x92a8>
   1a480:	push	{r4, lr}
   1a484:	bl	1aa90 <__assert_fail@plt+0x98d4>
   1a488:	cmp	r0, #0
   1a48c:	popne	{r4, pc}
   1a490:	bl	1a52c <__assert_fail@plt+0x9370>
   1a494:	mov	r1, #1
   1a498:	b	1a480 <__assert_fail@plt+0x92c4>
   1a49c:	push	{r4, r5, r6, lr}
   1a4a0:	mov	r4, r1
   1a4a4:	mov	r5, r0
   1a4a8:	mov	r0, r1
   1a4ac:	bl	1a274 <__assert_fail@plt+0x90b8>
   1a4b0:	mov	r2, r4
   1a4b4:	mov	r1, r5
   1a4b8:	pop	{r4, r5, r6, lr}
   1a4bc:	b	10f4c <memcpy@plt>
   1a4c0:	push	{r4, r5, r6, lr}
   1a4c4:	mov	r4, r1
   1a4c8:	mov	r5, r0
   1a4cc:	mov	r0, r1
   1a4d0:	bl	1a288 <__assert_fail@plt+0x90cc>
   1a4d4:	mov	r2, r4
   1a4d8:	mov	r1, r5
   1a4dc:	pop	{r4, r5, r6, lr}
   1a4e0:	b	10f4c <memcpy@plt>
   1a4e4:	push	{r4, r5, r6, lr}
   1a4e8:	mov	r5, r0
   1a4ec:	add	r0, r1, #1
   1a4f0:	mov	r4, r1
   1a4f4:	bl	1a288 <__assert_fail@plt+0x90cc>
   1a4f8:	mov	r2, #0
   1a4fc:	mov	r1, r5
   1a500:	strb	r2, [r0, r4]
   1a504:	mov	r2, r4
   1a508:	pop	{r4, r5, r6, lr}
   1a50c:	b	10f4c <memcpy@plt>
   1a510:	push	{r4, lr}
   1a514:	mov	r4, r0
   1a518:	bl	11078 <strlen@plt>
   1a51c:	add	r1, r0, #1
   1a520:	mov	r0, r4
   1a524:	pop	{r4, lr}
   1a528:	b	1a49c <__assert_fail@plt+0x92e0>
   1a52c:	ldr	r3, [pc, #44]	; 1a560 <__assert_fail@plt+0x93a4>
   1a530:	mov	r2, #5
   1a534:	mov	r0, #0
   1a538:	push	{r4, lr}
   1a53c:	ldr	r1, [pc, #32]	; 1a564 <__assert_fail@plt+0x93a8>
   1a540:	ldr	r4, [r3]
   1a544:	bl	10f7c <dcgettext@plt>
   1a548:	mov	r3, r0
   1a54c:	ldr	r2, [pc, #20]	; 1a568 <__assert_fail@plt+0x93ac>
   1a550:	mov	r1, #0
   1a554:	mov	r0, r4
   1a558:	bl	11000 <error@plt>
   1a55c:	bl	11180 <abort@plt>
   1a560:	andeq	sp, r2, r4, lsr #2
   1a564:	andeq	ip, r1, sp, lsr #7
   1a568:	andeq	fp, r1, r8, lsl #20
   1a56c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a570:	sub	sp, sp, #20
   1a574:	mov	r9, r3
   1a578:	mov	r8, r2
   1a57c:	mov	r2, r1
   1a580:	mov	r1, #0
   1a584:	mov	r7, r0
   1a588:	ldr	r3, [sp, #56]	; 0x38
   1a58c:	ldr	r6, [sp, #64]	; 0x40
   1a590:	str	r3, [sp]
   1a594:	add	r3, sp, #8
   1a598:	bl	1a6fc <__assert_fail@plt+0x9540>
   1a59c:	subs	r4, r0, #0
   1a5a0:	bne	1a630 <__assert_fail@plt+0x9474>
   1a5a4:	ldrd	r4, [sp, #8]
   1a5a8:	ldrd	r2, [sp, #48]	; 0x30
   1a5ac:	cmp	r5, r9
   1a5b0:	cmpeq	r4, r8
   1a5b4:	movcc	r1, #1
   1a5b8:	movcs	r1, #0
   1a5bc:	cmp	r5, r3
   1a5c0:	cmpeq	r4, r2
   1a5c4:	movls	r3, r1
   1a5c8:	orrhi	r3, r1, #1
   1a5cc:	cmp	r3, #0
   1a5d0:	beq	1a64c <__assert_fail@plt+0x9490>
   1a5d4:	bl	11090 <__errno_location@plt>
   1a5d8:	mov	r3, #0
   1a5dc:	mvn	r2, #-1073741824	; 0xc0000000
   1a5e0:	cmp	r5, r3
   1a5e4:	cmpeq	r4, r2
   1a5e8:	movls	r3, #34	; 0x22
   1a5ec:	bls	1a5f4 <__assert_fail@plt+0x9438>
   1a5f0:	mov	r3, #75	; 0x4b
   1a5f4:	str	r3, [r0]
   1a5f8:	cmp	r6, #0
   1a5fc:	moveq	r6, #1
   1a600:	bl	11090 <__errno_location@plt>
   1a604:	ldr	r4, [r0]
   1a608:	mov	r0, r7
   1a60c:	cmp	r4, #22
   1a610:	moveq	r4, #0
   1a614:	bl	19d54 <__assert_fail@plt+0x8b98>
   1a618:	ldr	r2, [pc, #60]	; 1a65c <__assert_fail@plt+0x94a0>
   1a61c:	mov	r1, r4
   1a620:	str	r0, [sp]
   1a624:	mov	r0, r6
   1a628:	ldr	r3, [sp, #60]	; 0x3c
   1a62c:	bl	11000 <error@plt>
   1a630:	bl	11090 <__errno_location@plt>
   1a634:	cmp	r4, #1
   1a638:	beq	1a5f0 <__assert_fail@plt+0x9434>
   1a63c:	cmp	r4, #3
   1a640:	bne	1a5f8 <__assert_fail@plt+0x943c>
   1a644:	mov	r3, #0
   1a648:	b	1a5f4 <__assert_fail@plt+0x9438>
   1a64c:	mov	r0, r4
   1a650:	mov	r1, r5
   1a654:	add	sp, sp, #20
   1a658:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a65c:	muleq	r1, fp, pc	; <UNPREDICTABLE>
   1a660:	mov	r1, #10
   1a664:	b	1a56c <__assert_fail@plt+0x93b0>
   1a668:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a66c:	mov	ip, r0
   1a670:	asr	fp, r1, #31
   1a674:	mov	r0, #0
   1a678:	mov	lr, r0
   1a67c:	subs	r2, r2, #1
   1a680:	bcs	1a68c <__assert_fail@plt+0x94d0>
   1a684:	add	sp, sp, #12
   1a688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a68c:	ldrd	r8, [ip]
   1a690:	mov	r3, #0
   1a694:	cmp	r9, r3
   1a698:	umulleq	r8, r9, r8, r1
   1a69c:	moveq	r6, r8
   1a6a0:	moveq	r4, r9
   1a6a4:	beq	1a6dc <__assert_fail@plt+0x9520>
   1a6a8:	umull	r4, r5, r8, r1
   1a6ac:	strd	r4, [sp]
   1a6b0:	mov	r5, lr
   1a6b4:	ldr	r4, [sp, #4]
   1a6b8:	umlal	r4, r5, r9, r1
   1a6bc:	cmp	r5, #0
   1a6c0:	ldrne	r3, [sp, #4]
   1a6c4:	mulne	r4, r1, r9
   1a6c8:	ldreq	r6, [sp]
   1a6cc:	mlane	r4, r8, fp, r4
   1a6d0:	ldrne	r6, [sp]
   1a6d4:	addne	r4, r4, r3
   1a6d8:	movne	r3, #1
   1a6dc:	cmp	r3, #0
   1a6e0:	mvnne	r6, #0
   1a6e4:	movne	r3, #1
   1a6e8:	movne	r4, r6
   1a6ec:	orr	r0, r0, r3
   1a6f0:	str	r6, [ip]
   1a6f4:	str	r4, [ip, #4]
   1a6f8:	b	1a67c <__assert_fail@plt+0x94c0>
   1a6fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a700:	cmp	r2, #36	; 0x24
   1a704:	sub	sp, sp, #20
   1a708:	ldr	r5, [sp, #56]	; 0x38
   1a70c:	bls	1a724 <__assert_fail@plt+0x9568>
   1a710:	ldr	r3, [pc, #876]	; 1aa84 <__assert_fail@plt+0x98c8>
   1a714:	mov	r2, #85	; 0x55
   1a718:	ldr	r1, [pc, #872]	; 1aa88 <__assert_fail@plt+0x98cc>
   1a71c:	ldr	r0, [pc, #872]	; 1aa8c <__assert_fail@plt+0x98d0>
   1a720:	bl	111bc <__assert_fail@plt>
   1a724:	cmp	r1, #0
   1a728:	mov	r6, r1
   1a72c:	mov	r8, r0
   1a730:	mov	fp, r2
   1a734:	mov	r7, r3
   1a738:	addeq	r6, sp, #4
   1a73c:	bl	11090 <__errno_location@plt>
   1a740:	mov	r3, #0
   1a744:	mov	sl, r0
   1a748:	str	r3, [r0]
   1a74c:	bl	11054 <__ctype_b_loc@plt>
   1a750:	ldrb	r9, [r8]
   1a754:	mov	r3, r8
   1a758:	ldr	r1, [r0]
   1a75c:	lsl	r2, r9, #1
   1a760:	ldrh	r4, [r1, r2]
   1a764:	ands	r4, r4, #8192	; 0x2000
   1a768:	bne	1a784 <__assert_fail@plt+0x95c8>
   1a76c:	cmp	r9, #45	; 0x2d
   1a770:	bne	1a78c <__assert_fail@plt+0x95d0>
   1a774:	mov	r4, #4
   1a778:	mov	r0, r4
   1a77c:	add	sp, sp, #20
   1a780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a784:	ldrb	r9, [r3, #1]!
   1a788:	b	1a75c <__assert_fail@plt+0x95a0>
   1a78c:	mov	r2, fp
   1a790:	mov	r1, r6
   1a794:	mov	r0, r8
   1a798:	bl	110d8 <strtoumax@plt>
   1a79c:	ldr	r9, [r6]
   1a7a0:	strd	r0, [sp, #8]
   1a7a4:	cmp	r9, r8
   1a7a8:	bne	1a80c <__assert_fail@plt+0x9650>
   1a7ac:	cmp	r5, #0
   1a7b0:	beq	1a774 <__assert_fail@plt+0x95b8>
   1a7b4:	ldrb	r1, [r8]
   1a7b8:	cmp	r1, #0
   1a7bc:	beq	1a774 <__assert_fail@plt+0x95b8>
   1a7c0:	mov	r0, r5
   1a7c4:	bl	11084 <strchr@plt>
   1a7c8:	cmp	r0, #0
   1a7cc:	movne	r2, #1
   1a7d0:	movne	r3, #0
   1a7d4:	strdne	r2, [sp, #8]
   1a7d8:	beq	1a774 <__assert_fail@plt+0x95b8>
   1a7dc:	ldrb	r8, [r9]
   1a7e0:	cmp	r8, #0
   1a7e4:	beq	1aa3c <__assert_fail@plt+0x9880>
   1a7e8:	mov	r1, r8
   1a7ec:	mov	r0, r5
   1a7f0:	bl	11084 <strchr@plt>
   1a7f4:	cmp	r0, #0
   1a7f8:	bne	1a834 <__assert_fail@plt+0x9678>
   1a7fc:	ldrd	r2, [sp, #8]
   1a800:	orr	r4, r4, #2
   1a804:	strd	r2, [r7]
   1a808:	b	1a778 <__assert_fail@plt+0x95bc>
   1a80c:	ldr	r4, [sl]
   1a810:	cmp	r4, #0
   1a814:	beq	1a824 <__assert_fail@plt+0x9668>
   1a818:	cmp	r4, #34	; 0x22
   1a81c:	bne	1a774 <__assert_fail@plt+0x95b8>
   1a820:	mov	r4, #1
   1a824:	cmp	r5, #0
   1a828:	strdeq	r0, [r7]
   1a82c:	bne	1a7dc <__assert_fail@plt+0x9620>
   1a830:	b	1a778 <__assert_fail@plt+0x95bc>
   1a834:	cmp	r8, #84	; 0x54
   1a838:	beq	1a88c <__assert_fail@plt+0x96d0>
   1a83c:	bhi	1a874 <__assert_fail@plt+0x96b8>
   1a840:	cmp	r8, #75	; 0x4b
   1a844:	beq	1a88c <__assert_fail@plt+0x96d0>
   1a848:	bhi	1a864 <__assert_fail@plt+0x96a8>
   1a84c:	cmp	r8, #69	; 0x45
   1a850:	beq	1a88c <__assert_fail@plt+0x96d0>
   1a854:	cmp	r8, #71	; 0x47
   1a858:	beq	1a88c <__assert_fail@plt+0x96d0>
   1a85c:	mov	r5, #1
   1a860:	b	1a944 <__assert_fail@plt+0x9788>
   1a864:	cmp	r8, #77	; 0x4d
   1a868:	beq	1a88c <__assert_fail@plt+0x96d0>
   1a86c:	cmp	r8, #80	; 0x50
   1a870:	b	1a858 <__assert_fail@plt+0x969c>
   1a874:	cmp	r8, #103	; 0x67
   1a878:	beq	1a88c <__assert_fail@plt+0x96d0>
   1a87c:	bhi	1a91c <__assert_fail@plt+0x9760>
   1a880:	sub	r3, r8, #89	; 0x59
   1a884:	cmp	r3, #1
   1a888:	bhi	1a85c <__assert_fail@plt+0x96a0>
   1a88c:	mov	r1, #48	; 0x30
   1a890:	mov	r0, r5
   1a894:	bl	11084 <strchr@plt>
   1a898:	cmp	r0, #0
   1a89c:	beq	1a85c <__assert_fail@plt+0x96a0>
   1a8a0:	ldrb	r3, [r9, #1]
   1a8a4:	cmp	r3, #68	; 0x44
   1a8a8:	moveq	r5, #2
   1a8ac:	moveq	r1, #1000	; 0x3e8
   1a8b0:	beq	1a8d0 <__assert_fail@plt+0x9714>
   1a8b4:	cmp	r3, #105	; 0x69
   1a8b8:	beq	1a934 <__assert_fail@plt+0x9778>
   1a8bc:	cmp	r3, #66	; 0x42
   1a8c0:	moveq	r5, #2
   1a8c4:	movne	r5, #1
   1a8c8:	moveq	r1, #1000	; 0x3e8
   1a8cc:	movne	r1, #1024	; 0x400
   1a8d0:	cmp	r8, #89	; 0x59
   1a8d4:	beq	1aa6c <__assert_fail@plt+0x98b0>
   1a8d8:	bhi	1a96c <__assert_fail@plt+0x97b0>
   1a8dc:	cmp	r8, #75	; 0x4b
   1a8e0:	beq	1a9ac <__assert_fail@plt+0x97f0>
   1a8e4:	bhi	1a94c <__assert_fail@plt+0x9790>
   1a8e8:	cmp	r8, #69	; 0x45
   1a8ec:	beq	1aa48 <__assert_fail@plt+0x988c>
   1a8f0:	cmp	r8, #71	; 0x47
   1a8f4:	beq	1aa54 <__assert_fail@plt+0x9898>
   1a8f8:	cmp	r8, #66	; 0x42
   1a8fc:	bne	1a7fc <__assert_fail@plt+0x9640>
   1a900:	ldr	r3, [sp, #8]
   1a904:	ldr	r1, [sp, #12]
   1a908:	lsl	r2, r1, #10
   1a90c:	lsr	r0, r1, #22
   1a910:	orr	r2, r2, r3, lsr #22
   1a914:	lsl	r3, r3, #10
   1a918:	b	1a9f8 <__assert_fail@plt+0x983c>
   1a91c:	cmp	r8, #109	; 0x6d
   1a920:	beq	1a88c <__assert_fail@plt+0x96d0>
   1a924:	cmp	r8, #116	; 0x74
   1a928:	beq	1a88c <__assert_fail@plt+0x96d0>
   1a92c:	cmp	r8, #107	; 0x6b
   1a930:	b	1a858 <__assert_fail@plt+0x969c>
   1a934:	ldrb	r3, [r9, #2]
   1a938:	cmp	r3, #66	; 0x42
   1a93c:	movne	r5, #1
   1a940:	moveq	r5, #3
   1a944:	mov	r1, #1024	; 0x400
   1a948:	b	1a8d0 <__assert_fail@plt+0x9714>
   1a94c:	cmp	r8, #80	; 0x50
   1a950:	beq	1aa5c <__assert_fail@plt+0x98a0>
   1a954:	cmp	r8, #84	; 0x54
   1a958:	beq	1aa64 <__assert_fail@plt+0x98a8>
   1a95c:	cmp	r8, #77	; 0x4d
   1a960:	bne	1a7fc <__assert_fail@plt+0x9640>
   1a964:	mov	r2, #2
   1a968:	b	1aa4c <__assert_fail@plt+0x9890>
   1a96c:	cmp	r8, #103	; 0x67
   1a970:	beq	1aa54 <__assert_fail@plt+0x9898>
   1a974:	bhi	1a998 <__assert_fail@plt+0x97dc>
   1a978:	cmp	r8, #98	; 0x62
   1a97c:	beq	1a9e0 <__assert_fail@plt+0x9824>
   1a980:	cmp	r8, #99	; 0x63
   1a984:	beq	1aa7c <__assert_fail@plt+0x98c0>
   1a988:	cmp	r8, #90	; 0x5a
   1a98c:	bne	1a7fc <__assert_fail@plt+0x9640>
   1a990:	mov	r2, #7
   1a994:	b	1aa4c <__assert_fail@plt+0x9890>
   1a998:	cmp	r8, #109	; 0x6d
   1a99c:	beq	1a964 <__assert_fail@plt+0x97a8>
   1a9a0:	bhi	1a9b4 <__assert_fail@plt+0x97f8>
   1a9a4:	cmp	r8, #107	; 0x6b
   1a9a8:	bne	1a7fc <__assert_fail@plt+0x9640>
   1a9ac:	mov	r2, #1
   1a9b0:	b	1aa4c <__assert_fail@plt+0x9890>
   1a9b4:	cmp	r8, #116	; 0x74
   1a9b8:	beq	1aa64 <__assert_fail@plt+0x98a8>
   1a9bc:	cmp	r8, #119	; 0x77
   1a9c0:	bne	1a7fc <__assert_fail@plt+0x9640>
   1a9c4:	ldr	r3, [sp, #8]
   1a9c8:	ldr	r2, [sp, #12]
   1a9cc:	ldr	r0, [sp, #12]
   1a9d0:	adds	r3, r3, r3
   1a9d4:	adc	r2, r2, r2
   1a9d8:	lsr	r0, r0, #31
   1a9dc:	b	1a9f8 <__assert_fail@plt+0x983c>
   1a9e0:	ldr	r3, [sp, #8]
   1a9e4:	ldr	r1, [sp, #12]
   1a9e8:	lsl	r2, r1, #9
   1a9ec:	lsr	r0, r1, #23
   1a9f0:	orr	r2, r2, r3, lsr #23
   1a9f4:	lsl	r3, r3, #9
   1a9f8:	adds	r0, r0, #0
   1a9fc:	movne	r0, #1
   1aa00:	cmp	r0, #0
   1aa04:	streq	r3, [sp, #8]
   1aa08:	streq	r2, [sp, #12]
   1aa0c:	beq	1aa20 <__assert_fail@plt+0x9864>
   1aa10:	mvn	r2, #0
   1aa14:	mvn	r3, #0
   1aa18:	mov	r0, #1
   1aa1c:	strd	r2, [sp, #8]
   1aa20:	ldr	r3, [r6]
   1aa24:	orr	r4, r4, r0
   1aa28:	add	r2, r3, r5
   1aa2c:	str	r2, [r6]
   1aa30:	ldrb	r3, [r3, r5]
   1aa34:	cmp	r3, #0
   1aa38:	orrne	r4, r4, #2
   1aa3c:	ldrd	r2, [sp, #8]
   1aa40:	strd	r2, [r7]
   1aa44:	b	1a778 <__assert_fail@plt+0x95bc>
   1aa48:	mov	r2, #6
   1aa4c:	add	r0, sp, #8
   1aa50:	b	1aa74 <__assert_fail@plt+0x98b8>
   1aa54:	mov	r2, #3
   1aa58:	b	1aa4c <__assert_fail@plt+0x9890>
   1aa5c:	mov	r2, #5
   1aa60:	b	1aa4c <__assert_fail@plt+0x9890>
   1aa64:	mov	r2, #4
   1aa68:	b	1aa4c <__assert_fail@plt+0x9890>
   1aa6c:	mov	r2, #8
   1aa70:	add	r0, sp, r2
   1aa74:	bl	1a668 <__assert_fail@plt+0x94ac>
   1aa78:	b	1aa20 <__assert_fail@plt+0x9864>
   1aa7c:	mov	r0, #0
   1aa80:	b	1aa20 <__assert_fail@plt+0x9864>
   1aa84:			; <UNDEFINED> instruction: 0x0001c3be
   1aa88:	andeq	ip, r1, r9, asr #7
   1aa8c:	ldrdeq	ip, [r1], -r7
   1aa90:	cmp	r1, #0
   1aa94:	cmpne	r0, #0
   1aa98:	beq	1aad0 <__assert_fail@plt+0x9914>
   1aa9c:	push	{r4, r5, r6, lr}
   1aaa0:	umull	r4, r5, r0, r1
   1aaa4:	adds	r3, r5, #0
   1aaa8:	movne	r3, #1
   1aaac:	cmp	r4, #0
   1aab0:	blt	1aabc <__assert_fail@plt+0x9900>
   1aab4:	cmp	r3, #0
   1aab8:	beq	1aadc <__assert_fail@plt+0x9920>
   1aabc:	bl	11090 <__errno_location@plt>
   1aac0:	mov	r3, #12
   1aac4:	str	r3, [r0]
   1aac8:	mov	r0, #0
   1aacc:	pop	{r4, r5, r6, pc}
   1aad0:	mov	r1, #1
   1aad4:	mov	r0, r1
   1aad8:	b	10ee0 <calloc@plt>
   1aadc:	pop	{r4, r5, r6, lr}
   1aae0:	b	1aad8 <__assert_fail@plt+0x991c>
   1aae4:	cmp	r0, #0
   1aae8:	beq	1ab08 <__assert_fail@plt+0x994c>
   1aaec:	bge	1ab0c <__assert_fail@plt+0x9950>
   1aaf0:	push	{r4, lr}
   1aaf4:	bl	11090 <__errno_location@plt>
   1aaf8:	mov	r3, #12
   1aafc:	str	r3, [r0]
   1ab00:	mov	r0, #0
   1ab04:	pop	{r4, pc}
   1ab08:	mov	r0, #1
   1ab0c:	b	1100c <malloc@plt>
   1ab10:	cmp	r0, #0
   1ab14:	bne	1ab20 <__assert_fail@plt+0x9964>
   1ab18:	mov	r0, r1
   1ab1c:	b	1aae4 <__assert_fail@plt+0x9928>
   1ab20:	cmp	r1, #0
   1ab24:	push	{r4, lr}
   1ab28:	bne	1ab38 <__assert_fail@plt+0x997c>
   1ab2c:	bl	1866c <__assert_fail@plt+0x74b0>
   1ab30:	mov	r0, #0
   1ab34:	pop	{r4, pc}
   1ab38:	blt	1ab44 <__assert_fail@plt+0x9988>
   1ab3c:	pop	{r4, lr}
   1ab40:	b	10f88 <realloc@plt>
   1ab44:	bl	11090 <__errno_location@plt>
   1ab48:	mov	r3, #12
   1ab4c:	str	r3, [r0]
   1ab50:	b	1ab30 <__assert_fail@plt+0x9974>
   1ab54:	push	{r4, r5, r6, lr}
   1ab58:	mov	r4, r0
   1ab5c:	bl	10fdc <__fpending@plt>
   1ab60:	mov	r5, r0
   1ab64:	mov	r0, r4
   1ab68:	bl	10fe8 <ferror_unlocked@plt>
   1ab6c:	mov	r6, r0
   1ab70:	mov	r0, r4
   1ab74:	bl	184e0 <__assert_fail@plt+0x7324>
   1ab78:	cmp	r6, #0
   1ab7c:	mov	r4, r0
   1ab80:	bne	1abac <__assert_fail@plt+0x99f0>
   1ab84:	cmp	r0, #0
   1ab88:	beq	1aba4 <__assert_fail@plt+0x99e8>
   1ab8c:	cmp	r5, #0
   1ab90:	bne	1abbc <__assert_fail@plt+0x9a00>
   1ab94:	bl	11090 <__errno_location@plt>
   1ab98:	ldr	r4, [r0]
   1ab9c:	subs	r4, r4, #9
   1aba0:	mvnne	r4, #0
   1aba4:	mov	r0, r4
   1aba8:	pop	{r4, r5, r6, pc}
   1abac:	cmp	r0, #0
   1abb0:	bne	1abbc <__assert_fail@plt+0x9a00>
   1abb4:	bl	11090 <__errno_location@plt>
   1abb8:	str	r4, [r0]
   1abbc:	mvn	r4, #0
   1abc0:	b	1aba4 <__assert_fail@plt+0x99e8>
   1abc4:	push	{r1, r2, r3}
   1abc8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, lr}
   1abcc:	add	r2, sp, #40	; 0x28
   1abd0:	ldr	r1, [sp, #36]	; 0x24
   1abd4:	str	r2, [sp, #4]
   1abd8:	cmp	r1, #0
   1abdc:	beq	1ac2c <__assert_fail@plt+0x9a70>
   1abe0:	movw	r3, #1030	; 0x406
   1abe4:	mov	r5, r0
   1abe8:	cmp	r1, r3
   1abec:	beq	1ac38 <__assert_fail@plt+0x9a7c>
   1abf0:	cmp	r1, #11
   1abf4:	beq	1ac1c <__assert_fail@plt+0x9a60>
   1abf8:	bgt	1ad2c <__assert_fail@plt+0x9b70>
   1abfc:	cmp	r1, #4
   1ac00:	beq	1ad44 <__assert_fail@plt+0x9b88>
   1ac04:	bgt	1ad24 <__assert_fail@plt+0x9b68>
   1ac08:	cmp	r1, #2
   1ac0c:	beq	1ad44 <__assert_fail@plt+0x9b88>
   1ac10:	bgt	1ac1c <__assert_fail@plt+0x9a60>
   1ac14:	cmp	r1, #1
   1ac18:	bne	1ad44 <__assert_fail@plt+0x9b88>
   1ac1c:	mov	r0, r5
   1ac20:	bl	11108 <fcntl64@plt>
   1ac24:	mov	r4, r0
   1ac28:	b	1ac80 <__assert_fail@plt+0x9ac4>
   1ac2c:	ldr	r2, [sp, #40]	; 0x28
   1ac30:	bl	11108 <fcntl64@plt>
   1ac34:	b	1ac24 <__assert_fail@plt+0x9a68>
   1ac38:	ldr	r6, [pc, #304]	; 1ad70 <__assert_fail@plt+0x9bb4>
   1ac3c:	add	r3, sp, #44	; 0x2c
   1ac40:	str	r3, [sp, #4]
   1ac44:	ldr	r7, [r2]
   1ac48:	ldr	r3, [r6]
   1ac4c:	mov	r8, r6
   1ac50:	mov	r2, r7
   1ac54:	cmp	r3, #0
   1ac58:	blt	1ace8 <__assert_fail@plt+0x9b2c>
   1ac5c:	bl	11108 <fcntl64@plt>
   1ac60:	subs	r4, r0, #0
   1ac64:	bge	1ac78 <__assert_fail@plt+0x9abc>
   1ac68:	bl	11090 <__errno_location@plt>
   1ac6c:	ldr	r3, [r0]
   1ac70:	cmp	r3, #22
   1ac74:	beq	1ac94 <__assert_fail@plt+0x9ad8>
   1ac78:	mov	r3, #1
   1ac7c:	str	r3, [r8]
   1ac80:	mov	r0, r4
   1ac84:	add	sp, sp, #12
   1ac88:	pop	{r4, r5, r6, r7, r8, lr}
   1ac8c:	add	sp, sp, #12
   1ac90:	bx	lr
   1ac94:	mov	r2, r7
   1ac98:	mov	r1, #0
   1ac9c:	mov	r0, r5
   1aca0:	bl	11108 <fcntl64@plt>
   1aca4:	subs	r4, r0, #0
   1aca8:	mvnge	r3, #0
   1acac:	strge	r3, [r6]
   1acb0:	blt	1ac80 <__assert_fail@plt+0x9ac4>
   1acb4:	mov	r1, #1
   1acb8:	mov	r0, r4
   1acbc:	bl	11108 <fcntl64@plt>
   1acc0:	subs	r2, r0, #0
   1acc4:	bge	1ad08 <__assert_fail@plt+0x9b4c>
   1acc8:	bl	11090 <__errno_location@plt>
   1accc:	mov	r5, r0
   1acd0:	mov	r0, r4
   1acd4:	ldr	r6, [r5]
   1acd8:	mvn	r4, #0
   1acdc:	bl	11198 <close@plt>
   1ace0:	str	r6, [r5]
   1ace4:	b	1ac80 <__assert_fail@plt+0x9ac4>
   1ace8:	mov	r1, #0
   1acec:	bl	11108 <fcntl64@plt>
   1acf0:	subs	r4, r0, #0
   1acf4:	blt	1ac80 <__assert_fail@plt+0x9ac4>
   1acf8:	ldr	r3, [r6]
   1acfc:	cmn	r3, #1
   1ad00:	bne	1ac80 <__assert_fail@plt+0x9ac4>
   1ad04:	b	1acb4 <__assert_fail@plt+0x9af8>
   1ad08:	orr	r2, r2, #1
   1ad0c:	mov	r1, #2
   1ad10:	mov	r0, r4
   1ad14:	bl	11108 <fcntl64@plt>
   1ad18:	cmn	r0, #1
   1ad1c:	bne	1ac80 <__assert_fail@plt+0x9ac4>
   1ad20:	b	1acc8 <__assert_fail@plt+0x9b0c>
   1ad24:	cmp	r1, #9
   1ad28:	b	1ac18 <__assert_fail@plt+0x9a5c>
   1ad2c:	movw	r2, #1031	; 0x407
   1ad30:	cmp	r1, r2
   1ad34:	bgt	1ad54 <__assert_fail@plt+0x9b98>
   1ad38:	cmp	r1, r3
   1ad3c:	movwlt	r3, #1025	; 0x401
   1ad40:	blt	1ad68 <__assert_fail@plt+0x9bac>
   1ad44:	ldr	r3, [sp, #4]
   1ad48:	mov	r0, r5
   1ad4c:	ldr	r2, [r3]
   1ad50:	b	1ac30 <__assert_fail@plt+0x9a74>
   1ad54:	movw	r3, #1033	; 0x409
   1ad58:	cmp	r1, r3
   1ad5c:	beq	1ad44 <__assert_fail@plt+0x9b88>
   1ad60:	blt	1ac1c <__assert_fail@plt+0x9a60>
   1ad64:	movw	r3, #1034	; 0x40a
   1ad68:	cmp	r1, r3
   1ad6c:	b	1ac18 <__assert_fail@plt+0x9a5c>
   1ad70:	andeq	sp, r2, r4, ror #5
   1ad74:	b	1aae4 <__assert_fail@plt+0x9928>
   1ad78:	cmp	r1, #0
   1ad7c:	orreq	r1, r1, #1
   1ad80:	b	1ab10 <__assert_fail@plt+0x9954>
   1ad84:	b	1aa90 <__assert_fail@plt+0x98d4>
   1ad88:	cmp	r2, #0
   1ad8c:	cmpne	r1, #0
   1ad90:	moveq	r2, #1
   1ad94:	moveq	r1, r2
   1ad98:	b	1ae20 <__assert_fail@plt+0x9c64>
   1ad9c:	push	{r4, lr}
   1ada0:	mov	r0, #14
   1ada4:	bl	1112c <nl_langinfo@plt>
   1ada8:	cmp	r0, #0
   1adac:	beq	1adc4 <__assert_fail@plt+0x9c08>
   1adb0:	ldrb	r2, [r0]
   1adb4:	ldr	r3, [pc, #16]	; 1adcc <__assert_fail@plt+0x9c10>
   1adb8:	cmp	r2, #0
   1adbc:	moveq	r0, r3
   1adc0:	pop	{r4, pc}
   1adc4:	ldr	r0, [pc]	; 1adcc <__assert_fail@plt+0x9c10>
   1adc8:	pop	{r4, pc}
   1adcc:	strdeq	ip, [r1], -sp
   1add0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1add4:	subs	r5, r0, #0
   1add8:	mov	r7, r2
   1addc:	addeq	r5, sp, #4
   1ade0:	mov	r6, r1
   1ade4:	mov	r0, r5
   1ade8:	bl	10ff4 <mbrtowc@plt>
   1adec:	cmp	r7, #0
   1adf0:	cmnne	r0, #3
   1adf4:	mov	r4, r0
   1adf8:	bls	1ae14 <__assert_fail@plt+0x9c58>
   1adfc:	mov	r0, #0
   1ae00:	bl	1ae4c <__assert_fail@plt+0x9c90>
   1ae04:	cmp	r0, #0
   1ae08:	ldrbeq	r3, [r6]
   1ae0c:	moveq	r4, #1
   1ae10:	streq	r3, [r5]
   1ae14:	mov	r0, r4
   1ae18:	add	sp, sp, #12
   1ae1c:	pop	{r4, r5, r6, r7, pc}
   1ae20:	umull	r2, r3, r1, r2
   1ae24:	cmp	r3, #0
   1ae28:	bne	1ae34 <__assert_fail@plt+0x9c78>
   1ae2c:	mov	r1, r2
   1ae30:	b	1ab10 <__assert_fail@plt+0x9954>
   1ae34:	push	{r4, lr}
   1ae38:	bl	11090 <__errno_location@plt>
   1ae3c:	mov	r3, #12
   1ae40:	str	r3, [r0]
   1ae44:	mov	r0, #0
   1ae48:	pop	{r4, pc}
   1ae4c:	push	{lr}		; (str lr, [sp, #-4]!)
   1ae50:	sub	sp, sp, #268	; 0x10c
   1ae54:	movw	r2, #257	; 0x101
   1ae58:	add	r1, sp, #4
   1ae5c:	bl	1aea8 <__assert_fail@plt+0x9cec>
   1ae60:	cmp	r0, #0
   1ae64:	movne	r0, #0
   1ae68:	bne	1ae98 <__assert_fail@plt+0x9cdc>
   1ae6c:	ldr	r1, [pc, #44]	; 1aea0 <__assert_fail@plt+0x9ce4>
   1ae70:	add	r0, sp, #4
   1ae74:	bl	10f04 <strcmp@plt>
   1ae78:	cmp	r0, #0
   1ae7c:	beq	1ae94 <__assert_fail@plt+0x9cd8>
   1ae80:	ldr	r1, [pc, #28]	; 1aea4 <__assert_fail@plt+0x9ce8>
   1ae84:	add	r0, sp, #4
   1ae88:	bl	10f04 <strcmp@plt>
   1ae8c:	adds	r0, r0, #0
   1ae90:	movne	r0, #1
   1ae94:	and	r0, r0, #1
   1ae98:	add	sp, sp, #268	; 0x10c
   1ae9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1aea0:	andeq	ip, r1, r3, lsl #8
   1aea4:	andeq	ip, r1, r5, lsl #8
   1aea8:	push	{r4, r5, r6, lr}
   1aeac:	mov	r5, r1
   1aeb0:	mov	r1, #0
   1aeb4:	mov	r4, r2
   1aeb8:	bl	11114 <setlocale@plt>
   1aebc:	subs	r6, r0, #0
   1aec0:	bne	1aed4 <__assert_fail@plt+0x9d18>
   1aec4:	cmp	r4, #0
   1aec8:	mov	r0, #22
   1aecc:	strbne	r6, [r5]
   1aed0:	pop	{r4, r5, r6, pc}
   1aed4:	bl	11078 <strlen@plt>
   1aed8:	cmp	r4, r0
   1aedc:	bls	1aef8 <__assert_fail@plt+0x9d3c>
   1aee0:	add	r2, r0, #1
   1aee4:	mov	r1, r6
   1aee8:	mov	r0, r5
   1aeec:	bl	10f4c <memcpy@plt>
   1aef0:	mov	r0, #0
   1aef4:	pop	{r4, r5, r6, pc}
   1aef8:	cmp	r4, #0
   1aefc:	beq	1af1c <__assert_fail@plt+0x9d60>
   1af00:	sub	r4, r4, #1
   1af04:	mov	r1, r6
   1af08:	mov	r2, r4
   1af0c:	mov	r0, r5
   1af10:	bl	10f4c <memcpy@plt>
   1af14:	mov	r3, #0
   1af18:	strb	r3, [r5, r4]
   1af1c:	mov	r0, #34	; 0x22
   1af20:	pop	{r4, r5, r6, pc}
   1af24:	mov	r1, #0
   1af28:	b	11114 <setlocale@plt>
   1af2c:	cmp	r3, #0
   1af30:	cmpeq	r2, #0
   1af34:	bne	1af4c <__assert_fail@plt+0x9d90>
   1af38:	cmp	r1, #0
   1af3c:	cmpeq	r0, #0
   1af40:	mvnne	r1, #0
   1af44:	mvnne	r0, #0
   1af48:	b	1af68 <__assert_fail@plt+0x9dac>
   1af4c:	sub	sp, sp, #8
   1af50:	push	{sp, lr}
   1af54:	bl	1af78 <__assert_fail@plt+0x9dbc>
   1af58:	ldr	lr, [sp, #4]
   1af5c:	add	sp, sp, #8
   1af60:	pop	{r2, r3}
   1af64:	bx	lr
   1af68:	push	{r1, lr}
   1af6c:	mov	r0, #8
   1af70:	bl	10ef8 <raise@plt>
   1af74:	pop	{r1, pc}
   1af78:	cmp	r1, r3
   1af7c:	cmpeq	r0, r2
   1af80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af84:	mov	r4, r0
   1af88:	movcc	r0, #0
   1af8c:	mov	r5, r1
   1af90:	ldr	lr, [sp, #36]	; 0x24
   1af94:	movcc	r1, r0
   1af98:	bcc	1b094 <__assert_fail@plt+0x9ed8>
   1af9c:	cmp	r3, #0
   1afa0:	clzeq	ip, r2
   1afa4:	clzne	ip, r3
   1afa8:	addeq	ip, ip, #32
   1afac:	cmp	r5, #0
   1afb0:	clzeq	r1, r4
   1afb4:	addeq	r1, r1, #32
   1afb8:	clzne	r1, r5
   1afbc:	sub	ip, ip, r1
   1afc0:	sub	sl, ip, #32
   1afc4:	lsl	r9, r3, ip
   1afc8:	rsb	fp, ip, #32
   1afcc:	orr	r9, r9, r2, lsl sl
   1afd0:	orr	r9, r9, r2, lsr fp
   1afd4:	lsl	r8, r2, ip
   1afd8:	cmp	r5, r9
   1afdc:	cmpeq	r4, r8
   1afe0:	movcc	r0, #0
   1afe4:	movcc	r1, r0
   1afe8:	bcc	1b004 <__assert_fail@plt+0x9e48>
   1afec:	mov	r0, #1
   1aff0:	subs	r4, r4, r8
   1aff4:	lsl	r1, r0, sl
   1aff8:	orr	r1, r1, r0, lsr fp
   1affc:	lsl	r0, r0, ip
   1b000:	sbc	r5, r5, r9
   1b004:	cmp	ip, #0
   1b008:	beq	1b094 <__assert_fail@plt+0x9ed8>
   1b00c:	lsr	r6, r8, #1
   1b010:	orr	r6, r6, r9, lsl #31
   1b014:	lsr	r7, r9, #1
   1b018:	mov	r2, ip
   1b01c:	b	1b040 <__assert_fail@plt+0x9e84>
   1b020:	subs	r3, r4, r6
   1b024:	sbc	r8, r5, r7
   1b028:	adds	r3, r3, r3
   1b02c:	adc	r8, r8, r8
   1b030:	adds	r4, r3, #1
   1b034:	adc	r5, r8, #0
   1b038:	subs	r2, r2, #1
   1b03c:	beq	1b05c <__assert_fail@plt+0x9ea0>
   1b040:	cmp	r5, r7
   1b044:	cmpeq	r4, r6
   1b048:	bcs	1b020 <__assert_fail@plt+0x9e64>
   1b04c:	adds	r4, r4, r4
   1b050:	adc	r5, r5, r5
   1b054:	subs	r2, r2, #1
   1b058:	bne	1b040 <__assert_fail@plt+0x9e84>
   1b05c:	lsr	r3, r4, ip
   1b060:	orr	r3, r3, r5, lsl fp
   1b064:	lsr	r2, r5, ip
   1b068:	orr	r3, r3, r5, lsr sl
   1b06c:	adds	r0, r0, r4
   1b070:	mov	r4, r3
   1b074:	lsl	r3, r2, ip
   1b078:	orr	r3, r3, r4, lsl sl
   1b07c:	lsl	ip, r4, ip
   1b080:	orr	r3, r3, r4, lsr fp
   1b084:	adc	r1, r1, r5
   1b088:	subs	r0, r0, ip
   1b08c:	mov	r5, r2
   1b090:	sbc	r1, r1, r3
   1b094:	cmp	lr, #0
   1b098:	strdne	r4, [lr]
   1b09c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b0a4:	mov	r7, r0
   1b0a8:	ldr	r6, [pc, #72]	; 1b0f8 <__assert_fail@plt+0x9f3c>
   1b0ac:	ldr	r5, [pc, #72]	; 1b0fc <__assert_fail@plt+0x9f40>
   1b0b0:	add	r6, pc, r6
   1b0b4:	add	r5, pc, r5
   1b0b8:	sub	r6, r6, r5
   1b0bc:	mov	r8, r1
   1b0c0:	mov	r9, r2
   1b0c4:	bl	10eb4 <fdopen@plt-0x20>
   1b0c8:	asrs	r6, r6, #2
   1b0cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b0d0:	mov	r4, #0
   1b0d4:	add	r4, r4, #1
   1b0d8:	ldr	r3, [r5], #4
   1b0dc:	mov	r2, r9
   1b0e0:	mov	r1, r8
   1b0e4:	mov	r0, r7
   1b0e8:	blx	r3
   1b0ec:	cmp	r6, r4
   1b0f0:	bne	1b0d4 <__assert_fail@plt+0x9f18>
   1b0f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b0f8:	andeq	r1, r1, ip, asr lr
   1b0fc:	andeq	r1, r1, r4, asr lr
   1b100:	bx	lr
   1b104:	ldr	r3, [pc, #12]	; 1b118 <__assert_fail@plt+0x9f5c>
   1b108:	mov	r1, #0
   1b10c:	add	r3, pc, r3
   1b110:	ldr	r2, [r3]
   1b114:	b	1109c <__cxa_atexit@plt>
   1b118:	strdeq	r1, [r1], -ip

Disassembly of section .fini:

0001b11c <.fini>:
   1b11c:	push	{r3, lr}
   1b120:	pop	{r3, pc}
