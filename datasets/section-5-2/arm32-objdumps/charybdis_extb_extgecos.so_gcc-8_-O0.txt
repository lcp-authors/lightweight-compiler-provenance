
../repos/charybdis/extensions/.libs/extb_extgecos.so:     file format elf32-littlearm


Disassembly of section .init:

0000038c <_init>:
 38c:	push	{r3, lr}
 390:	bl	3dc <call_weak_fn>
 394:	pop	{r3, pc}

Disassembly of section .plt:

00000398 <.plt>:
 398:	push	{lr}		; (str lr, [sp, #-4]!)
 39c:	ldr	lr, [pc, #4]	; 3a8 <.plt+0x10>
 3a0:	add	lr, pc, lr
 3a4:	ldr	pc, [lr, #8]!
 3a8:	.word	0x00010c58

000003ac <__cxa_finalize@plt>:
 3ac:	add	ip, pc, #0, 12
 3b0:	add	ip, ip, #16, 20	; 0x10000
 3b4:	ldr	pc, [ip, #3160]!	; 0xc58

000003b8 <__gmon_start__@plt>:
 3b8:	add	ip, pc, #0, 12
 3bc:	add	ip, ip, #16, 20	; 0x10000
 3c0:	ldr	pc, [ip, #3152]!	; 0xc50

000003c4 <snprintf@plt>:
 3c4:	add	ip, pc, #0, 12
 3c8:	add	ip, ip, #16, 20	; 0x10000
 3cc:	ldr	pc, [ip, #3144]!	; 0xc48

000003d0 <match@plt>:
 3d0:	add	ip, pc, #0, 12
 3d4:	add	ip, ip, #16, 20	; 0x10000
 3d8:	ldr	pc, [ip, #3136]!	; 0xc40

Disassembly of section .text:

000003dc <call_weak_fn>:
 3dc:	ldr	r3, [pc, #20]	; 3f8 <call_weak_fn+0x1c>
 3e0:	ldr	r2, [pc, #20]	; 3fc <call_weak_fn+0x20>
 3e4:	add	r3, pc, r3
 3e8:	ldr	r2, [r3, r2]
 3ec:	cmp	r2, #0
 3f0:	bxeq	lr
 3f4:	b	3b8 <__gmon_start__@plt>
 3f8:	.word	0x00010c14
 3fc:	.word	0x00000024

00000400 <deregister_tm_clones>:
 400:	ldr	r0, [pc, #44]	; 434 <deregister_tm_clones+0x34>
 404:	ldr	r3, [pc, #44]	; 438 <deregister_tm_clones+0x38>
 408:	add	r0, pc, r0
 40c:	add	r3, pc, r3
 410:	cmp	r3, r0
 414:	ldr	r3, [pc, #32]	; 43c <deregister_tm_clones+0x3c>
 418:	add	r3, pc, r3
 41c:	bxeq	lr
 420:	ldr	r2, [pc, #24]	; 440 <deregister_tm_clones+0x40>
 424:	ldr	r3, [r3, r2]
 428:	cmp	r3, #0
 42c:	bxeq	lr
 430:	bx	r3
 434:	.word	0x00010c4c
 438:	.word	0x00010c48
 43c:	.word	0x00010be0
 440:	.word	0x00000020

00000444 <register_tm_clones>:
 444:	ldr	r0, [pc, #56]	; 484 <register_tm_clones+0x40>
 448:	ldr	r3, [pc, #56]	; 488 <register_tm_clones+0x44>
 44c:	add	r0, pc, r0
 450:	add	r3, pc, r3
 454:	sub	r1, r3, r0
 458:	ldr	r3, [pc, #44]	; 48c <register_tm_clones+0x48>
 45c:	asr	r1, r1, #2
 460:	add	r3, pc, r3
 464:	add	r1, r1, r1, lsr #31
 468:	asrs	r1, r1, #1
 46c:	bxeq	lr
 470:	ldr	r2, [pc, #24]	; 490 <register_tm_clones+0x4c>
 474:	ldr	r3, [r3, r2]
 478:	cmp	r3, #0
 47c:	bxeq	lr
 480:	bx	r3
 484:	.word	0x00010c08
 488:	.word	0x00010c04
 48c:	.word	0x00010b98
 490:	.word	0x0000002c

00000494 <__do_global_dtors_aux>:
 494:	ldr	r3, [pc, #76]	; 4e8 <__do_global_dtors_aux+0x54>
 498:	ldr	r2, [pc, #76]	; 4ec <__do_global_dtors_aux+0x58>
 49c:	add	r3, pc, r3
 4a0:	add	r2, pc, r2
 4a4:	ldrb	r3, [r3]
 4a8:	cmp	r3, #0
 4ac:	bxne	lr
 4b0:	ldr	r3, [pc, #56]	; 4f0 <__do_global_dtors_aux+0x5c>
 4b4:	push	{r4, lr}
 4b8:	ldr	r3, [r2, r3]
 4bc:	cmp	r3, #0
 4c0:	beq	4d0 <__do_global_dtors_aux+0x3c>
 4c4:	ldr	r3, [pc, #40]	; 4f4 <__do_global_dtors_aux+0x60>
 4c8:	ldr	r0, [pc, r3]
 4cc:	bl	3ac <__cxa_finalize@plt>
 4d0:	bl	400 <deregister_tm_clones>
 4d4:	ldr	r3, [pc, #28]	; 4f8 <__do_global_dtors_aux+0x64>
 4d8:	mov	r2, #1
 4dc:	add	r3, pc, r3
 4e0:	strb	r2, [r3]
 4e4:	pop	{r4, pc}
 4e8:	.word	0x00010bb8
 4ec:	.word	0x00010b58
 4f0:	.word	0x0000001c
 4f4:	.word	0x00010b60
 4f8:	.word	0x00010b78

000004fc <frame_dummy>:
 4fc:	b	444 <register_tm_clones>

00000500 <_modinit>:
 500:	push	{fp}		; (str fp, [sp, #-4]!)
 504:	add	fp, sp, #0
 508:	ldr	r2, [pc, #40]	; 538 <_modinit+0x38>
 50c:	add	r2, pc, r2
 510:	ldr	r3, [pc, #36]	; 53c <_modinit+0x3c>
 514:	ldr	r3, [r2, r3]
 518:	ldr	r2, [pc, #32]	; 540 <_modinit+0x40>
 51c:	add	r2, pc, r2
 520:	str	r2, [r3, #480]	; 0x1e0
 524:	mov	r3, #0
 528:	mov	r0, r3
 52c:	add	sp, fp, #0
 530:	pop	{fp}		; (ldr fp, [sp], #4)
 534:	bx	lr
 538:	.word	0x00010aec
 53c:	.word	0x00000028
 540:	.word	0x00000058

00000544 <_moddeinit>:
 544:	push	{fp}		; (str fp, [sp, #-4]!)
 548:	add	fp, sp, #0
 54c:	ldr	r2, [pc, #32]	; 574 <_moddeinit+0x30>
 550:	add	r2, pc, r2
 554:	ldr	r3, [pc, #28]	; 578 <_moddeinit+0x34>
 558:	ldr	r3, [r2, r3]
 55c:	mov	r2, #0
 560:	str	r2, [r3, #480]	; 0x1e0
 564:	nop	{0}
 568:	add	sp, fp, #0
 56c:	pop	{fp}		; (ldr fp, [sp], #4)
 570:	bx	lr
 574:	.word	0x00010aa8
 578:	.word	0x00000028

0000057c <eb_extended>:
 57c:	strd	r4, [sp, #-16]!
 580:	str	fp, [sp, #8]
 584:	str	lr, [sp, #12]
 588:	add	fp, sp, #12
 58c:	sub	sp, sp, #552	; 0x228
 590:	str	r0, [fp, #-536]	; 0xfffffde8
 594:	str	r1, [fp, #-540]	; 0xfffffde4
 598:	str	r2, [fp, #-544]	; 0xfffffde0
 59c:	str	r3, [fp, #-548]	; 0xfffffddc
 5a0:	ldr	r3, [fp, #-536]	; 0xfffffde8
 5a4:	cmp	r3, #0
 5a8:	bne	5b4 <eb_extended+0x38>
 5ac:	mvn	r3, #0
 5b0:	b	6c4 <eb_extended+0x148>
 5b4:	ldr	r3, [fp, #-540]	; 0xfffffde4
 5b8:	add	ip, r3, #88	; 0x58
 5bc:	ldr	r3, [fp, #-540]	; 0xfffffde4
 5c0:	add	r2, r3, #152	; 0x98
 5c4:	ldr	r3, [fp, #-540]	; 0xfffffde4
 5c8:	add	r1, r3, #163	; 0xa3
 5cc:	ldr	r3, [fp, #-540]	; 0xfffffde4
 5d0:	add	r3, r3, #344	; 0x158
 5d4:	add	r3, r3, #1
 5d8:	sub	r0, fp, #528	; 0x210
 5dc:	str	r3, [sp, #8]
 5e0:	str	r1, [sp, #4]
 5e4:	str	r2, [sp]
 5e8:	mov	r3, ip
 5ec:	ldr	r2, [pc, #232]	; 6dc <eb_extended+0x160>
 5f0:	add	r2, pc, r2
 5f4:	mov	r1, #512	; 0x200
 5f8:	bl	3c4 <snprintf@plt>
 5fc:	sub	r3, fp, #528	; 0x210
 600:	mov	r1, r3
 604:	ldr	r0, [fp, #-536]	; 0xfffffde8
 608:	bl	3d0 <match@plt>
 60c:	mov	r3, r0
 610:	cmp	r3, #0
 614:	movne	r3, #1
 618:	moveq	r3, #0
 61c:	uxtb	r3, r3
 620:	str	r3, [fp, #-16]
 624:	ldr	r3, [fp, #-16]
 628:	cmp	r3, #0
 62c:	bne	6c0 <eb_extended+0x144>
 630:	ldr	r3, [fp, #-540]	; 0xfffffde4
 634:	ldrd	r2, [r3, #64]	; 0x40
 638:	mov	r0, #131072	; 0x20000
 63c:	mov	r1, #0
 640:	and	r4, r2, r0
 644:	and	r5, r3, r1
 648:	orrs	r3, r4, r5
 64c:	beq	6c0 <eb_extended+0x144>
 650:	ldr	r3, [fp, #-540]	; 0xfffffde4
 654:	add	ip, r3, #88	; 0x58
 658:	ldr	r3, [fp, #-540]	; 0xfffffde4
 65c:	add	r2, r3, #152	; 0x98
 660:	ldr	r3, [fp, #-540]	; 0xfffffde4
 664:	add	r1, r3, #227	; 0xe3
 668:	ldr	r3, [fp, #-540]	; 0xfffffde4
 66c:	add	r3, r3, #344	; 0x158
 670:	add	r3, r3, #1
 674:	sub	r0, fp, #528	; 0x210
 678:	str	r3, [sp, #8]
 67c:	str	r1, [sp, #4]
 680:	str	r2, [sp]
 684:	mov	r3, ip
 688:	ldr	r2, [pc, #80]	; 6e0 <eb_extended+0x164>
 68c:	add	r2, pc, r2
 690:	mov	r1, #512	; 0x200
 694:	bl	3c4 <snprintf@plt>
 698:	sub	r3, fp, #528	; 0x210
 69c:	mov	r1, r3
 6a0:	ldr	r0, [fp, #-536]	; 0xfffffde8
 6a4:	bl	3d0 <match@plt>
 6a8:	mov	r3, r0
 6ac:	cmp	r3, #0
 6b0:	movne	r3, #1
 6b4:	moveq	r3, #0
 6b8:	uxtb	r3, r3
 6bc:	str	r3, [fp, #-16]
 6c0:	ldr	r3, [fp, #-16]
 6c4:	mov	r0, r3
 6c8:	sub	sp, fp, #12
 6cc:	ldrd	r4, [sp]
 6d0:	ldr	fp, [sp, #8]
 6d4:	add	sp, sp, #12
 6d8:	pop	{pc}		; (ldr pc, [sp], #4)
 6dc:	.word	0x00000114
 6e0:	.word	0x00000078

Disassembly of section .fini:

000006e4 <_fini>:
 6e4:	push	{r3, lr}
 6e8:	pop	{r3, pc}
